In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libctf-nobfd.a_clang_-O0:

ctf-archive.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_arc_write_fd>:
       0:	sub	sp, sp, #0x100
       4:	stp	x29, x30, [sp, #240]
       8:	add	x29, sp, #0xf0
       c:	mov	w8, #0x0                   	// #0
      10:	mov	x9, xzr
      14:	adrp	x10, 0 <ctf_arc_write_fd>
      18:	add	x10, x10, #0x0
      1c:	mov	x11, #0x8                   	// #8
      20:	mov	x12, #0x2                   	// #2
      24:	adrp	x13, 0 <ctf_arc_write_fd>
      28:	add	x13, x13, #0x0
      2c:	mov	w14, wzr
      30:	stur	w0, [x29, #-8]
      34:	stur	x1, [x29, #-16]
      38:	stur	x2, [x29, #-24]
      3c:	stur	x3, [x29, #-32]
      40:	stur	x4, [x29, #-40]
      44:	sturb	w8, [x29, #-65]
      48:	stur	x9, [x29, #-104]
      4c:	ldur	x1, [x29, #-24]
      50:	mov	x0, x10
      54:	str	x11, [sp, #88]
      58:	str	x12, [sp, #80]
      5c:	str	x13, [sp, #72]
      60:	str	w14, [sp, #68]
      64:	bl	0 <ctf_dprintf>
      68:	ldur	x9, [x29, #-24]
      6c:	ldr	x10, [sp, #88]
      70:	mul	x9, x9, x10
      74:	ldr	x11, [sp, #80]
      78:	mul	x9, x9, x11
      7c:	add	x9, x9, #0x28
      80:	stur	x9, [x29, #-80]
      84:	ldur	x1, [x29, #-80]
      88:	ldr	x0, [sp, #72]
      8c:	bl	0 <ctf_dprintf>
      90:	ldur	x9, [x29, #-80]
      94:	stur	x9, [x29, #-96]
      98:	ldur	w0, [x29, #-8]
      9c:	ldur	x9, [x29, #-96]
      a0:	subs	x1, x9, #0x1
      a4:	ldr	w2, [sp, #68]
      a8:	bl	0 <lseek>
      ac:	cmp	x0, #0x0
      b0:	cset	w8, ge  // ge = tcont
      b4:	tbnz	w8, #0, c8 <ctf_arc_write_fd+0xc8>
      b8:	adrp	x8, 0 <ctf_arc_write_fd>
      bc:	add	x8, x8, #0x0
      c0:	stur	x8, [x29, #-48]
      c4:	b	4d4 <ctf_arc_write_fd+0x4d4>
      c8:	ldur	w0, [x29, #-8]
      cc:	sub	x1, x29, #0x41
      d0:	mov	x2, #0x1                   	// #1
      d4:	bl	0 <write>
      d8:	cmp	x0, #0x0
      dc:	cset	w8, ge  // ge = tcont
      e0:	tbnz	w8, #0, f4 <ctf_arc_write_fd+0xf4>
      e4:	adrp	x8, 0 <ctf_arc_write_fd>
      e8:	add	x8, x8, #0x0
      ec:	stur	x8, [x29, #-48]
      f0:	b	4d4 <ctf_arc_write_fd+0x4d4>
      f4:	ldur	w0, [x29, #-8]
      f8:	ldur	x1, [x29, #-80]
      fc:	bl	53c <arc_mmap_header>
     100:	stur	x0, [x29, #-56]
     104:	cbnz	x0, 118 <ctf_arc_write_fd+0x118>
     108:	adrp	x8, 0 <ctf_arc_write_fd>
     10c:	add	x8, x8, #0x0
     110:	stur	x8, [x29, #-48]
     114:	b	4d4 <ctf_arc_write_fd+0x4d4>
     118:	mov	x0, #0x3eeb                	// #16107
     11c:	movk	x0, #0xd762, lsl #16
     120:	movk	x0, #0xf2a4, lsl #32
     124:	movk	x0, #0x8b47, lsl #48
     128:	bl	5b4 <__uint64_identity>
     12c:	ldur	x8, [x29, #-56]
     130:	str	x0, [x8]
     134:	ldur	x0, [x29, #-24]
     138:	bl	5b4 <__uint64_identity>
     13c:	ldur	x8, [x29, #-56]
     140:	str	x0, [x8, #16]
     144:	ldur	x0, [x29, #-96]
     148:	bl	5b4 <__uint64_identity>
     14c:	ldur	x8, [x29, #-56]
     150:	str	x0, [x8, #32]
     154:	ldur	x8, [x29, #-24]
     158:	cmp	x8, #0x0
     15c:	cset	w9, ls  // ls = plast
     160:	tbnz	w9, #0, 184 <ctf_arc_write_fd+0x184>
     164:	ldur	x8, [x29, #-16]
     168:	ldr	x0, [x8]
     16c:	bl	0 <ctf_getmodel>
     170:	mov	w1, w0
     174:	sxtw	x0, w1
     178:	bl	5b4 <__uint64_identity>
     17c:	ldur	x8, [x29, #-56]
     180:	str	x0, [x8, #8]
     184:	stur	xzr, [x29, #-64]
     188:	stur	xzr, [x29, #-88]
     18c:	ldur	x8, [x29, #-64]
     190:	ldur	x9, [x29, #-56]
     194:	ldr	x0, [x9, #16]
     198:	str	x8, [sp, #56]
     19c:	bl	5b4 <__uint64_identity>
     1a0:	ldr	x8, [sp, #56]
     1a4:	cmp	x8, x0
     1a8:	b.cs	1e8 <ctf_arc_write_fd+0x1e8>  // b.hs, b.nlast
     1ac:	ldur	x8, [x29, #-32]
     1b0:	ldur	x9, [x29, #-64]
     1b4:	mov	x10, #0x8                   	// #8
     1b8:	mul	x9, x10, x9
     1bc:	add	x8, x8, x9
     1c0:	ldr	x0, [x8]
     1c4:	bl	0 <strlen>
     1c8:	add	x8, x0, #0x1
     1cc:	ldur	x9, [x29, #-88]
     1d0:	add	x8, x9, x8
     1d4:	stur	x8, [x29, #-88]
     1d8:	ldur	x8, [x29, #-64]
     1dc:	add	x8, x8, #0x1
     1e0:	stur	x8, [x29, #-64]
     1e4:	b	18c <ctf_arc_write_fd+0x18c>
     1e8:	ldur	x0, [x29, #-88]
     1ec:	bl	0 <malloc>
     1f0:	stur	x0, [x29, #-104]
     1f4:	ldur	x8, [x29, #-104]
     1f8:	cbnz	x8, 20c <ctf_arc_write_fd+0x20c>
     1fc:	adrp	x8, 0 <ctf_arc_write_fd>
     200:	add	x8, x8, #0x0
     204:	stur	x8, [x29, #-48]
     208:	b	4c0 <ctf_arc_write_fd+0x4c0>
     20c:	stur	xzr, [x29, #-64]
     210:	stur	xzr, [x29, #-88]
     214:	ldur	x8, [x29, #-56]
     218:	add	x8, x8, #0x28
     21c:	str	x8, [sp, #112]
     220:	ldur	x8, [x29, #-64]
     224:	ldur	x9, [x29, #-56]
     228:	ldr	x0, [x9, #16]
     22c:	str	x8, [sp, #48]
     230:	bl	5b4 <__uint64_identity>
     234:	ldr	x8, [sp, #48]
     238:	cmp	x8, x0
     23c:	b.cs	374 <ctf_arc_write_fd+0x374>  // b.hs, b.nlast
     240:	ldur	x8, [x29, #-104]
     244:	ldur	x9, [x29, #-88]
     248:	add	x0, x8, x9
     24c:	ldur	x8, [x29, #-32]
     250:	ldur	x9, [x29, #-64]
     254:	mov	x10, #0x8                   	// #8
     258:	mul	x9, x10, x9
     25c:	add	x8, x8, x9
     260:	ldr	x1, [x8]
     264:	str	x10, [sp, #40]
     268:	bl	0 <strcpy>
     26c:	ldur	x8, [x29, #-16]
     270:	ldur	x9, [x29, #-64]
     274:	ldr	x10, [sp, #40]
     278:	mul	x9, x10, x9
     27c:	add	x8, x8, x9
     280:	ldr	x8, [x8]
     284:	ldur	w1, [x29, #-8]
     288:	ldur	x2, [x29, #-40]
     28c:	mov	x0, x8
     290:	bl	5c8 <arc_write_one_ctf>
     294:	str	x0, [sp, #104]
     298:	ldr	x8, [sp, #104]
     29c:	cmp	x8, #0x0
     2a0:	cset	w11, ge  // ge = tcont
     2a4:	tbnz	w11, #0, 2c8 <ctf_arc_write_fd+0x2c8>
     2a8:	ldr	x8, [sp, #104]
     2ac:	mov	x9, #0xfffffffffffffc18    	// #-1000
     2b0:	cmp	x8, x9
     2b4:	b.le	2c8 <ctf_arc_write_fd+0x2c8>
     2b8:	adrp	x8, 0 <ctf_arc_write_fd>
     2bc:	add	x8, x8, #0x0
     2c0:	stur	x8, [x29, #-48]
     2c4:	b	4b8 <ctf_arc_write_fd+0x4b8>
     2c8:	ldr	x8, [sp, #104]
     2cc:	cmp	x8, #0x0
     2d0:	cset	w9, ge  // ge = tcont
     2d4:	tbnz	w9, #0, 304 <ctf_arc_write_fd+0x304>
     2d8:	adrp	x8, 0 <ctf_arc_write_fd>
     2dc:	add	x8, x8, #0x0
     2e0:	stur	x8, [x29, #-48]
     2e4:	ldr	x8, [sp, #104]
     2e8:	mov	x9, #0xffffffffffffffff    	// #-1
     2ec:	mul	x8, x8, x9
     2f0:	str	w8, [sp, #36]
     2f4:	bl	0 <__errno_location>
     2f8:	ldr	w8, [sp, #36]
     2fc:	str	w8, [x0]
     300:	b	4b8 <ctf_arc_write_fd+0x4b8>
     304:	ldur	x0, [x29, #-88]
     308:	bl	5b4 <__uint64_identity>
     30c:	ldr	x8, [sp, #112]
     310:	str	x0, [x8]
     314:	ldr	x8, [sp, #104]
     318:	ldur	x9, [x29, #-96]
     31c:	subs	x0, x8, x9
     320:	bl	5b4 <__uint64_identity>
     324:	ldr	x8, [sp, #112]
     328:	mov	x9, #0x8                   	// #8
     32c:	str	x0, [x8, #8]
     330:	ldur	x8, [x29, #-32]
     334:	ldur	x10, [x29, #-64]
     338:	mul	x9, x9, x10
     33c:	add	x8, x8, x9
     340:	ldr	x0, [x8]
     344:	bl	0 <strlen>
     348:	add	x8, x0, #0x1
     34c:	ldur	x9, [x29, #-88]
     350:	add	x8, x9, x8
     354:	stur	x8, [x29, #-88]
     358:	ldr	x8, [sp, #112]
     35c:	add	x8, x8, #0x10
     360:	str	x8, [sp, #112]
     364:	ldur	x8, [x29, #-64]
     368:	add	x8, x8, #0x1
     36c:	stur	x8, [x29, #-64]
     370:	b	220 <ctf_arc_write_fd+0x220>
     374:	ldur	x8, [x29, #-56]
     378:	add	x0, x8, #0x28
     37c:	ldur	x8, [x29, #-56]
     380:	ldr	x8, [x8, #16]
     384:	str	x0, [sp, #24]
     388:	mov	x0, x8
     38c:	bl	5b4 <__uint64_identity>
     390:	ldur	x4, [x29, #-104]
     394:	ldr	x8, [sp, #24]
     398:	str	x0, [sp, #16]
     39c:	mov	x0, x8
     3a0:	ldr	x1, [sp, #16]
     3a4:	mov	x2, #0x10                  	// #16
     3a8:	adrp	x3, 0 <ctf_arc_write_fd>
     3ac:	add	x3, x3, #0x0
     3b0:	bl	8d0 <ctf_qsort_r>
     3b4:	ldur	w0, [x29, #-8]
     3b8:	mov	x8, xzr
     3bc:	mov	x1, x8
     3c0:	mov	w2, #0x1                   	// #1
     3c4:	bl	0 <lseek>
     3c8:	str	x0, [sp, #120]
     3cc:	cmp	x0, #0x0
     3d0:	cset	w9, ge  // ge = tcont
     3d4:	tbnz	w9, #0, 3e8 <ctf_arc_write_fd+0x3e8>
     3d8:	adrp	x8, 0 <ctf_arc_write_fd>
     3dc:	add	x8, x8, #0x0
     3e0:	stur	x8, [x29, #-48]
     3e4:	b	4b8 <ctf_arc_write_fd+0x4b8>
     3e8:	ldr	x0, [sp, #120]
     3ec:	bl	5b4 <__uint64_identity>
     3f0:	ldur	x8, [x29, #-56]
     3f4:	str	x0, [x8, #24]
     3f8:	ldur	x8, [x29, #-104]
     3fc:	stur	x8, [x29, #-112]
     400:	ldur	x8, [x29, #-88]
     404:	cmp	x8, #0x0
     408:	cset	w9, le
     40c:	tbnz	w9, #0, 464 <ctf_arc_write_fd+0x464>
     410:	ldur	w0, [x29, #-8]
     414:	ldur	x1, [x29, #-112]
     418:	ldur	x2, [x29, #-88]
     41c:	bl	0 <write>
     420:	str	x0, [sp, #96]
     424:	cmp	x0, #0x0
     428:	cset	w8, ge  // ge = tcont
     42c:	tbnz	w8, #0, 440 <ctf_arc_write_fd+0x440>
     430:	adrp	x8, 0 <ctf_arc_write_fd>
     434:	add	x8, x8, #0x0
     438:	stur	x8, [x29, #-48]
     43c:	b	4b8 <ctf_arc_write_fd+0x4b8>
     440:	ldr	x8, [sp, #96]
     444:	ldur	x9, [x29, #-88]
     448:	subs	x8, x9, x8
     44c:	stur	x8, [x29, #-88]
     450:	ldr	x8, [sp, #96]
     454:	ldur	x9, [x29, #-112]
     458:	add	x8, x9, x8
     45c:	stur	x8, [x29, #-112]
     460:	b	400 <ctf_arc_write_fd+0x400>
     464:	ldur	x0, [x29, #-104]
     468:	bl	0 <free>
     46c:	ldur	w0, [x29, #-8]
     470:	ldur	x1, [x29, #-56]
     474:	ldur	x2, [x29, #-80]
     478:	sub	x3, x29, #0x30
     47c:	bl	998 <arc_mmap_writeout>
     480:	cmp	w0, #0x0
     484:	cset	w8, ge  // ge = tcont
     488:	tbnz	w8, #0, 490 <ctf_arc_write_fd+0x490>
     48c:	b	4c0 <ctf_arc_write_fd+0x4c0>
     490:	ldur	x0, [x29, #-56]
     494:	ldur	x1, [x29, #-80]
     498:	sub	x2, x29, #0x30
     49c:	bl	a0c <arc_mmap_unmap>
     4a0:	cmp	w0, #0x0
     4a4:	cset	w8, ge  // ge = tcont
     4a8:	tbnz	w8, #0, 4b0 <ctf_arc_write_fd+0x4b0>
     4ac:	b	4d4 <ctf_arc_write_fd+0x4d4>
     4b0:	stur	wzr, [x29, #-4]
     4b4:	b	52c <ctf_arc_write_fd+0x52c>
     4b8:	ldur	x0, [x29, #-104]
     4bc:	bl	0 <free>
     4c0:	ldur	x0, [x29, #-56]
     4c4:	ldur	x1, [x29, #-80]
     4c8:	mov	x8, xzr
     4cc:	mov	x2, x8
     4d0:	bl	a0c <arc_mmap_unmap>
     4d4:	ldur	x0, [x29, #-48]
     4d8:	str	x0, [sp, #8]
     4dc:	bl	0 <__errno_location>
     4e0:	ldr	w8, [x0]
     4e4:	cmp	w8, #0x3e8
     4e8:	b.ge	500 <ctf_arc_write_fd+0x500>  // b.tcont
     4ec:	bl	0 <__errno_location>
     4f0:	ldr	w0, [x0]
     4f4:	bl	0 <strerror>
     4f8:	str	x0, [sp]
     4fc:	b	510 <ctf_arc_write_fd+0x510>
     500:	bl	0 <__errno_location>
     504:	ldr	w0, [x0]
     508:	bl	0 <ctf_errmsg>
     50c:	str	x0, [sp]
     510:	ldr	x8, [sp]
     514:	ldr	x0, [sp, #8]
     518:	mov	x1, x8
     51c:	bl	0 <ctf_dprintf>
     520:	bl	0 <__errno_location>
     524:	ldr	w9, [x0]
     528:	stur	w9, [x29, #-4]
     52c:	ldur	w0, [x29, #-4]
     530:	ldp	x29, x30, [sp, #240]
     534:	add	sp, sp, #0x100
     538:	ret

000000000000053c <arc_mmap_header>:
     53c:	sub	sp, sp, #0x40
     540:	stp	x29, x30, [sp, #48]
     544:	add	x29, sp, #0x30
     548:	mov	x8, xzr
     54c:	mov	x2, x8
     550:	mov	w9, #0x3                   	// #3
     554:	mov	w3, #0x1                   	// #1
     558:	mov	x10, #0xffffffffffffffff    	// #-1
     55c:	stur	w0, [x29, #-12]
     560:	str	x1, [sp, #24]
     564:	ldr	x1, [sp, #24]
     568:	ldur	w4, [x29, #-12]
     56c:	mov	x0, x2
     570:	mov	w2, w9
     574:	mov	x5, x8
     578:	str	x10, [sp, #8]
     57c:	bl	0 <mmap>
     580:	str	x0, [sp, #16]
     584:	ldr	x8, [sp, #8]
     588:	cmp	x0, x8
     58c:	b.ne	59c <arc_mmap_header+0x60>  // b.any
     590:	mov	x8, xzr
     594:	stur	x8, [x29, #-8]
     598:	b	5a4 <arc_mmap_header+0x68>
     59c:	ldr	x8, [sp, #16]
     5a0:	stur	x8, [x29, #-8]
     5a4:	ldur	x0, [x29, #-8]
     5a8:	ldp	x29, x30, [sp, #48]
     5ac:	add	sp, sp, #0x40
     5b0:	ret

00000000000005b4 <__uint64_identity>:
     5b4:	sub	sp, sp, #0x10
     5b8:	str	x0, [sp, #8]
     5bc:	ldr	x0, [sp, #8]
     5c0:	add	sp, sp, #0x10
     5c4:	ret

00000000000005c8 <arc_write_one_ctf>:
     5c8:	sub	sp, sp, #0x70
     5cc:	stp	x29, x30, [sp, #96]
     5d0:	add	x29, sp, #0x60
     5d4:	stur	x0, [x29, #-16]
     5d8:	stur	w1, [x29, #-20]
     5dc:	stur	x2, [x29, #-32]
     5e0:	str	xzr, [sp, #40]
     5e4:	ldur	x0, [x29, #-16]
     5e8:	bl	0 <ctf_serialize>
     5ec:	cmp	w0, #0x0
     5f0:	cset	w8, ge  // ge = tcont
     5f4:	tbnz	w8, #0, 618 <arc_write_one_ctf+0x50>
     5f8:	ldur	x8, [x29, #-16]
     5fc:	ldr	w9, [x8, #556]
     600:	mov	w10, #0xffffffff            	// #-1
     604:	mul	w9, w9, w10
     608:	mov	w0, w9
     60c:	sxtw	x8, w0
     610:	stur	x8, [x29, #-8]
     614:	b	8c0 <arc_write_one_ctf+0x2f8>
     618:	ldur	w0, [x29, #-20]
     61c:	mov	x8, xzr
     620:	mov	x1, x8
     624:	mov	w2, #0x1                   	// #1
     628:	bl	0 <lseek>
     62c:	stur	x0, [x29, #-40]
     630:	cmp	x0, #0x0
     634:	cset	w9, ge  // ge = tcont
     638:	tbnz	w9, #0, 65c <arc_write_one_ctf+0x94>
     63c:	bl	0 <__errno_location>
     640:	ldr	w8, [x0]
     644:	mov	w9, #0xffffffff            	// #-1
     648:	mul	w8, w8, w9
     64c:	mov	w0, w8
     650:	sxtw	x10, w0
     654:	stur	x10, [x29, #-8]
     658:	b	8c0 <arc_write_one_ctf+0x2f8>
     65c:	ldur	x8, [x29, #-16]
     660:	ldr	x8, [x8, #416]
     664:	ldur	x9, [x29, #-32]
     668:	cmp	x8, x9
     66c:	b.ls	680 <arc_write_one_ctf+0xb8>  // b.plast
     670:	adrp	x8, 0 <ctf_compress_write>
     674:	add	x8, x8, #0x0
     678:	str	x8, [sp, #16]
     67c:	b	68c <arc_write_one_ctf+0xc4>
     680:	adrp	x8, 0 <ctf_write>
     684:	add	x8, x8, #0x0
     688:	str	x8, [sp, #16]
     68c:	mov	x8, #0x8                   	// #8
     690:	str	x8, [sp, #24]
     694:	add	x8, sp, #0x28
     698:	str	x8, [sp, #32]
     69c:	ldr	x8, [sp, #24]
     6a0:	cmp	x8, #0x0
     6a4:	cset	w9, ls  // ls = plast
     6a8:	tbnz	w9, #0, 714 <arc_write_one_ctf+0x14c>
     6ac:	ldur	w0, [x29, #-20]
     6b0:	ldr	x1, [sp, #32]
     6b4:	ldr	x2, [sp, #24]
     6b8:	bl	0 <write>
     6bc:	str	x0, [sp, #8]
     6c0:	ldr	x8, [sp, #8]
     6c4:	cmp	x8, #0x0
     6c8:	cset	w9, ge  // ge = tcont
     6cc:	tbnz	w9, #0, 6f0 <arc_write_one_ctf+0x128>
     6d0:	bl	0 <__errno_location>
     6d4:	ldr	w8, [x0]
     6d8:	mov	w9, #0xffffffff            	// #-1
     6dc:	mul	w8, w8, w9
     6e0:	mov	w0, w8
     6e4:	sxtw	x10, w0
     6e8:	stur	x10, [x29, #-8]
     6ec:	b	8c0 <arc_write_one_ctf+0x2f8>
     6f0:	ldr	x8, [sp, #8]
     6f4:	ldr	x9, [sp, #24]
     6f8:	subs	x8, x9, x8
     6fc:	str	x8, [sp, #24]
     700:	ldr	x8, [sp, #8]
     704:	ldr	x9, [sp, #32]
     708:	add	x8, x9, x8
     70c:	str	x8, [sp, #32]
     710:	b	69c <arc_write_one_ctf+0xd4>
     714:	ldr	x8, [sp, #16]
     718:	ldur	x0, [x29, #-16]
     71c:	ldur	w1, [x29, #-20]
     720:	blr	x8
     724:	cbz	w0, 748 <arc_write_one_ctf+0x180>
     728:	ldur	x8, [x29, #-16]
     72c:	ldr	w9, [x8, #556]
     730:	mov	w10, #0xffffffff            	// #-1
     734:	mul	w9, w9, w10
     738:	mov	w0, w9
     73c:	sxtw	x8, w0
     740:	stur	x8, [x29, #-8]
     744:	b	8c0 <arc_write_one_ctf+0x2f8>
     748:	ldur	w0, [x29, #-20]
     74c:	mov	x8, xzr
     750:	mov	x1, x8
     754:	mov	w2, #0x1                   	// #1
     758:	bl	0 <lseek>
     75c:	str	x0, [sp, #48]
     760:	cmp	x0, #0x0
     764:	cset	w9, ge  // ge = tcont
     768:	tbnz	w9, #0, 78c <arc_write_one_ctf+0x1c4>
     76c:	bl	0 <__errno_location>
     770:	ldr	w8, [x0]
     774:	mov	w9, #0xffffffff            	// #-1
     778:	mul	w8, w8, w9
     77c:	mov	w0, w8
     780:	sxtw	x10, w0
     784:	stur	x10, [x29, #-8]
     788:	b	8c0 <arc_write_one_ctf+0x2f8>
     78c:	ldr	x8, [sp, #48]
     790:	ldur	x9, [x29, #-40]
     794:	subs	x0, x8, x9
     798:	bl	5b4 <__uint64_identity>
     79c:	str	x0, [sp, #40]
     7a0:	ldur	w0, [x29, #-20]
     7a4:	ldur	x1, [x29, #-40]
     7a8:	mov	w10, wzr
     7ac:	mov	w2, w10
     7b0:	bl	0 <lseek>
     7b4:	cmp	x0, #0x0
     7b8:	cset	w10, ge  // ge = tcont
     7bc:	tbnz	w10, #0, 7e0 <arc_write_one_ctf+0x218>
     7c0:	bl	0 <__errno_location>
     7c4:	ldr	w8, [x0]
     7c8:	mov	w9, #0xffffffff            	// #-1
     7cc:	mul	w8, w8, w9
     7d0:	mov	w0, w8
     7d4:	sxtw	x10, w0
     7d8:	stur	x10, [x29, #-8]
     7dc:	b	8c0 <arc_write_one_ctf+0x2f8>
     7e0:	mov	x8, #0x8                   	// #8
     7e4:	str	x8, [sp, #24]
     7e8:	add	x8, sp, #0x28
     7ec:	str	x8, [sp, #32]
     7f0:	ldr	x8, [sp, #24]
     7f4:	cmp	x8, #0x0
     7f8:	cset	w9, ls  // ls = plast
     7fc:	tbnz	w9, #0, 868 <arc_write_one_ctf+0x2a0>
     800:	ldur	w0, [x29, #-20]
     804:	ldr	x1, [sp, #32]
     808:	ldr	x2, [sp, #24]
     80c:	bl	0 <write>
     810:	str	x0, [sp]
     814:	ldr	x8, [sp]
     818:	cmp	x8, #0x0
     81c:	cset	w9, ge  // ge = tcont
     820:	tbnz	w9, #0, 844 <arc_write_one_ctf+0x27c>
     824:	bl	0 <__errno_location>
     828:	ldr	w8, [x0]
     82c:	mov	w9, #0xffffffff            	// #-1
     830:	mul	w8, w8, w9
     834:	mov	w0, w8
     838:	sxtw	x10, w0
     83c:	stur	x10, [x29, #-8]
     840:	b	8c0 <arc_write_one_ctf+0x2f8>
     844:	ldr	x8, [sp]
     848:	ldr	x9, [sp, #24]
     84c:	subs	x8, x9, x8
     850:	str	x8, [sp, #24]
     854:	ldr	x8, [sp]
     858:	ldr	x9, [sp, #32]
     85c:	add	x8, x9, x8
     860:	str	x8, [sp, #32]
     864:	b	7f0 <arc_write_one_ctf+0x228>
     868:	ldr	x8, [sp, #48]
     86c:	add	x8, x8, #0x7
     870:	and	x8, x8, #0xfffffffffffffff8
     874:	str	x8, [sp, #48]
     878:	ldur	w0, [x29, #-20]
     87c:	ldr	x1, [sp, #48]
     880:	mov	w9, wzr
     884:	mov	w2, w9
     888:	bl	0 <lseek>
     88c:	cmp	x0, #0x0
     890:	cset	w9, ge  // ge = tcont
     894:	tbnz	w9, #0, 8b8 <arc_write_one_ctf+0x2f0>
     898:	bl	0 <__errno_location>
     89c:	ldr	w8, [x0]
     8a0:	mov	w9, #0xffffffff            	// #-1
     8a4:	mul	w8, w8, w9
     8a8:	mov	w0, w8
     8ac:	sxtw	x10, w0
     8b0:	stur	x10, [x29, #-8]
     8b4:	b	8c0 <arc_write_one_ctf+0x2f8>
     8b8:	ldur	x8, [x29, #-40]
     8bc:	stur	x8, [x29, #-8]
     8c0:	ldur	x0, [x29, #-8]
     8c4:	ldp	x29, x30, [sp, #96]
     8c8:	add	sp, sp, #0x70
     8cc:	ret

00000000000008d0 <ctf_qsort_r>:
     8d0:	sub	sp, sp, #0x40
     8d4:	stp	x29, x30, [sp, #48]
     8d8:	add	x29, sp, #0x30
     8dc:	stur	x0, [x29, #-8]
     8e0:	stur	x1, [x29, #-16]
     8e4:	str	x2, [sp, #24]
     8e8:	str	x3, [sp, #16]
     8ec:	str	x4, [sp, #8]
     8f0:	ldur	x0, [x29, #-8]
     8f4:	ldur	x1, [x29, #-16]
     8f8:	ldr	x2, [sp, #24]
     8fc:	ldr	x3, [sp, #16]
     900:	ldr	x4, [sp, #8]
     904:	bl	0 <qsort_r>
     908:	ldp	x29, x30, [sp, #48]
     90c:	add	sp, sp, #0x40
     910:	ret

0000000000000914 <sort_modent_by_name>:
     914:	sub	sp, sp, #0x60
     918:	stp	x29, x30, [sp, #80]
     91c:	add	x29, sp, #0x50
     920:	stur	x0, [x29, #-8]
     924:	stur	x1, [x29, #-16]
     928:	stur	x2, [x29, #-24]
     92c:	ldur	x8, [x29, #-8]
     930:	stur	x8, [x29, #-32]
     934:	ldur	x8, [x29, #-16]
     938:	str	x8, [sp, #40]
     93c:	ldur	x8, [x29, #-24]
     940:	str	x8, [sp, #32]
     944:	ldr	x8, [sp, #32]
     948:	ldur	x9, [x29, #-32]
     94c:	ldr	x0, [x9]
     950:	str	x8, [sp, #24]
     954:	bl	5b4 <__uint64_identity>
     958:	ldr	x8, [sp, #24]
     95c:	add	x0, x8, x0
     960:	ldr	x9, [sp, #32]
     964:	ldr	x10, [sp, #40]
     968:	ldr	x10, [x10]
     96c:	str	x0, [sp, #16]
     970:	mov	x0, x10
     974:	str	x9, [sp, #8]
     978:	bl	5b4 <__uint64_identity>
     97c:	ldr	x8, [sp, #8]
     980:	add	x1, x8, x0
     984:	ldr	x0, [sp, #16]
     988:	bl	0 <strcmp>
     98c:	ldp	x29, x30, [sp, #80]
     990:	add	sp, sp, #0x60
     994:	ret

0000000000000998 <arc_mmap_writeout>:
     998:	sub	sp, sp, #0x30
     99c:	stp	x29, x30, [sp, #32]
     9a0:	add	x29, sp, #0x20
     9a4:	mov	w8, #0x1                   	// #1
     9a8:	stur	w0, [x29, #-8]
     9ac:	str	x1, [sp, #16]
     9b0:	str	x2, [sp, #8]
     9b4:	str	x3, [sp]
     9b8:	ldr	x0, [sp, #16]
     9bc:	ldr	x1, [sp, #8]
     9c0:	mov	w2, w8
     9c4:	bl	0 <msync>
     9c8:	cmp	w0, #0x0
     9cc:	cset	w8, ge  // ge = tcont
     9d0:	tbnz	w8, #0, 9f8 <arc_mmap_writeout+0x60>
     9d4:	ldr	x8, [sp]
     9d8:	cbz	x8, 9ec <arc_mmap_writeout+0x54>
     9dc:	ldr	x8, [sp]
     9e0:	adrp	x9, 0 <ctf_arc_write_fd>
     9e4:	add	x9, x9, #0x0
     9e8:	str	x9, [x8]
     9ec:	mov	w8, #0xffffffff            	// #-1
     9f0:	stur	w8, [x29, #-4]
     9f4:	b	9fc <arc_mmap_writeout+0x64>
     9f8:	stur	wzr, [x29, #-4]
     9fc:	ldur	w0, [x29, #-4]
     a00:	ldp	x29, x30, [sp, #32]
     a04:	add	sp, sp, #0x30
     a08:	ret

0000000000000a0c <arc_mmap_unmap>:
     a0c:	sub	sp, sp, #0x30
     a10:	stp	x29, x30, [sp, #32]
     a14:	add	x29, sp, #0x20
     a18:	str	x0, [sp, #16]
     a1c:	str	x1, [sp, #8]
     a20:	str	x2, [sp]
     a24:	ldr	x0, [sp, #16]
     a28:	ldr	x1, [sp, #8]
     a2c:	bl	0 <munmap>
     a30:	cmp	w0, #0x0
     a34:	cset	w8, ge  // ge = tcont
     a38:	tbnz	w8, #0, a60 <arc_mmap_unmap+0x54>
     a3c:	ldr	x8, [sp]
     a40:	cbz	x8, a54 <arc_mmap_unmap+0x48>
     a44:	ldr	x8, [sp]
     a48:	adrp	x9, 0 <ctf_arc_write_fd>
     a4c:	add	x9, x9, #0x0
     a50:	str	x9, [x8]
     a54:	mov	w8, #0xffffffff            	// #-1
     a58:	stur	w8, [x29, #-4]
     a5c:	b	a64 <arc_mmap_unmap+0x58>
     a60:	stur	wzr, [x29, #-4]
     a64:	ldur	w0, [x29, #-4]
     a68:	ldp	x29, x30, [sp, #32]
     a6c:	add	sp, sp, #0x30
     a70:	ret

0000000000000a74 <ctf_arc_write>:
     a74:	sub	sp, sp, #0x60
     a78:	stp	x29, x30, [sp, #80]
     a7c:	add	x29, sp, #0x50
     a80:	mov	w8, #0x242                 	// #578
     a84:	movk	w8, #0x8, lsl #16
     a88:	mov	w9, #0x1b6                 	// #438
     a8c:	stur	x0, [x29, #-16]
     a90:	stur	x1, [x29, #-24]
     a94:	stur	x2, [x29, #-32]
     a98:	str	x3, [sp, #40]
     a9c:	str	x4, [sp, #32]
     aa0:	ldur	x0, [x29, #-16]
     aa4:	mov	w1, w8
     aa8:	mov	w2, w9
     aac:	bl	0 <open>
     ab0:	str	w0, [sp, #24]
     ab4:	cmp	w0, #0x0
     ab8:	cset	w8, ge  // ge = tcont
     abc:	tbnz	w8, #0, b00 <ctf_arc_write+0x8c>
     ac0:	ldur	x1, [x29, #-16]
     ac4:	str	x1, [sp, #16]
     ac8:	bl	0 <__errno_location>
     acc:	ldr	w0, [x0]
     ad0:	bl	0 <strerror>
     ad4:	adrp	x8, 0 <ctf_arc_write_fd>
     ad8:	add	x8, x8, #0x0
     adc:	str	x0, [sp, #8]
     ae0:	mov	x0, x8
     ae4:	ldr	x1, [sp, #16]
     ae8:	ldr	x2, [sp, #8]
     aec:	bl	0 <ctf_dprintf>
     af0:	bl	0 <__errno_location>
     af4:	ldr	w9, [x0]
     af8:	stur	w9, [x29, #-4]
     afc:	b	bb4 <ctf_arc_write+0x140>
     b00:	ldr	w0, [sp, #24]
     b04:	ldur	x1, [x29, #-24]
     b08:	ldur	x2, [x29, #-32]
     b0c:	ldr	x3, [sp, #40]
     b10:	ldr	x4, [sp, #32]
     b14:	bl	0 <ctf_arc_write_fd>
     b18:	str	w0, [sp, #28]
     b1c:	ldr	w8, [sp, #28]
     b20:	cbz	w8, b28 <ctf_arc_write+0xb4>
     b24:	b	b68 <ctf_arc_write+0xf4>
     b28:	ldr	w0, [sp, #24]
     b2c:	bl	0 <close>
     b30:	str	w0, [sp, #28]
     b34:	cmp	w0, #0x0
     b38:	cset	w8, ge  // ge = tcont
     b3c:	tbnz	w8, #0, b68 <ctf_arc_write+0xf4>
     b40:	bl	0 <__errno_location>
     b44:	ldr	w0, [x0]
     b48:	bl	0 <strerror>
     b4c:	adrp	x8, 0 <ctf_arc_write_fd>
     b50:	add	x8, x8, #0x0
     b54:	str	x0, [sp]
     b58:	mov	x0, x8
     b5c:	ldr	x1, [sp]
     b60:	bl	0 <ctf_dprintf>
     b64:	b	b94 <ctf_arc_write+0x120>
     b68:	ldr	w0, [sp, #24]
     b6c:	bl	0 <close>
     b70:	ldr	w8, [sp, #28]
     b74:	cmp	w8, #0x0
     b78:	cset	w8, ge  // ge = tcont
     b7c:	tbnz	w8, #0, b88 <ctf_arc_write+0x114>
     b80:	ldur	x0, [x29, #-16]
     b84:	bl	0 <unlink>
     b88:	ldr	w8, [sp, #28]
     b8c:	stur	w8, [x29, #-4]
     b90:	b	bb4 <ctf_arc_write+0x140>
     b94:	ldr	w8, [sp, #28]
     b98:	cmp	w8, #0x0
     b9c:	cset	w8, ge  // ge = tcont
     ba0:	tbnz	w8, #0, bac <ctf_arc_write+0x138>
     ba4:	ldur	x0, [x29, #-16]
     ba8:	bl	0 <unlink>
     bac:	ldr	w8, [sp, #28]
     bb0:	stur	w8, [x29, #-4]
     bb4:	ldur	w0, [x29, #-4]
     bb8:	ldp	x29, x30, [sp, #80]
     bbc:	add	sp, sp, #0x60
     bc0:	ret

0000000000000bc4 <ctf_arc_bufopen>:
     bc4:	sub	sp, sp, #0x40
     bc8:	stp	x29, x30, [sp, #48]
     bcc:	add	x29, sp, #0x30
     bd0:	mov	x8, #0x3eeb                	// #16107
     bd4:	movk	x8, #0xd762, lsl #16
     bd8:	movk	x8, #0xf2a4, lsl #32
     bdc:	movk	x8, #0x8b47, lsl #48
     be0:	stur	x0, [x29, #-16]
     be4:	str	x1, [sp, #24]
     be8:	str	x2, [sp, #16]
     bec:	ldur	x9, [x29, #-16]
     bf0:	str	x9, [sp, #8]
     bf4:	ldr	x9, [sp, #8]
     bf8:	ldr	x0, [x9]
     bfc:	str	x8, [sp]
     c00:	bl	5b4 <__uint64_identity>
     c04:	ldr	x8, [sp]
     c08:	cmp	x0, x8
     c0c:	b.eq	c30 <ctf_arc_bufopen+0x6c>  // b.none
     c10:	ldr	x8, [sp, #16]
     c14:	cbz	x8, c24 <ctf_arc_bufopen+0x60>
     c18:	ldr	x8, [sp, #16]
     c1c:	mov	w9, #0x3e8                 	// #1000
     c20:	str	w9, [x8]
     c24:	mov	x8, xzr
     c28:	stur	x8, [x29, #-8]
     c2c:	b	c38 <ctf_arc_bufopen+0x74>
     c30:	ldr	x8, [sp, #8]
     c34:	stur	x8, [x29, #-8]
     c38:	ldur	x0, [x29, #-8]
     c3c:	ldp	x29, x30, [sp, #48]
     c40:	add	sp, sp, #0x40
     c44:	ret

0000000000000c48 <ctf_arc_open_internal>:
     c48:	sub	sp, sp, #0xe0
     c4c:	stp	x29, x30, [sp, #208]
     c50:	add	x29, sp, #0xd0
     c54:	mov	w8, wzr
     c58:	stur	x0, [x29, #-16]
     c5c:	stur	x1, [x29, #-24]
     c60:	str	w8, [sp, #28]
     c64:	bl	0 <libctf_init_debug>
     c68:	ldur	x0, [x29, #-16]
     c6c:	ldr	w1, [sp, #28]
     c70:	bl	0 <open>
     c74:	stur	w0, [x29, #-36]
     c78:	cmp	w0, #0x0
     c7c:	cset	w8, ge  // ge = tcont
     c80:	tbnz	w8, #0, c94 <ctf_arc_open_internal+0x4c>
     c84:	adrp	x8, 0 <ctf_arc_write_fd>
     c88:	add	x8, x8, #0x0
     c8c:	stur	x8, [x29, #-32]
     c90:	b	d5c <ctf_arc_open_internal+0x114>
     c94:	ldur	w0, [x29, #-36]
     c98:	add	x1, sp, #0x28
     c9c:	bl	0 <fstat>
     ca0:	cmp	w0, #0x0
     ca4:	cset	w8, ge  // ge = tcont
     ca8:	tbnz	w8, #0, cbc <ctf_arc_open_internal+0x74>
     cac:	adrp	x8, 0 <ctf_arc_write_fd>
     cb0:	add	x8, x8, #0x0
     cb4:	stur	x8, [x29, #-32]
     cb8:	b	d54 <ctf_arc_open_internal+0x10c>
     cbc:	ldur	w0, [x29, #-36]
     cc0:	ldr	x1, [sp, #88]
     cc4:	bl	de4 <arc_mmap_file>
     cc8:	str	x0, [sp, #32]
     ccc:	cbnz	x0, ce0 <ctf_arc_open_internal+0x98>
     cd0:	adrp	x8, 0 <ctf_arc_write_fd>
     cd4:	add	x8, x8, #0x0
     cd8:	stur	x8, [x29, #-32]
     cdc:	b	d54 <ctf_arc_open_internal+0x10c>
     ce0:	ldr	x8, [sp, #32]
     ce4:	ldr	x0, [x8]
     ce8:	bl	5b4 <__uint64_identity>
     cec:	mov	x8, #0x3eeb                	// #16107
     cf0:	movk	x8, #0xd762, lsl #16
     cf4:	movk	x8, #0xf2a4, lsl #32
     cf8:	movk	x8, #0x8b47, lsl #48
     cfc:	cmp	x0, x8
     d00:	b.eq	d20 <ctf_arc_open_internal+0xd8>  // b.none
     d04:	adrp	x8, 0 <ctf_arc_write_fd>
     d08:	add	x8, x8, #0x0
     d0c:	stur	x8, [x29, #-32]
     d10:	bl	0 <__errno_location>
     d14:	mov	w9, #0x3e8                 	// #1000
     d18:	str	w9, [x0]
     d1c:	b	d40 <ctf_arc_open_internal+0xf8>
     d20:	ldr	x8, [sp, #88]
     d24:	ldr	x9, [sp, #32]
     d28:	str	x8, [x9]
     d2c:	ldur	w0, [x29, #-36]
     d30:	bl	0 <close>
     d34:	ldr	x8, [sp, #32]
     d38:	stur	x8, [x29, #-8]
     d3c:	b	dd4 <ctf_arc_open_internal+0x18c>
     d40:	ldr	x0, [sp, #32]
     d44:	ldr	x1, [sp, #88]
     d48:	mov	x8, xzr
     d4c:	mov	x2, x8
     d50:	bl	a0c <arc_mmap_unmap>
     d54:	ldur	w0, [x29, #-36]
     d58:	bl	0 <close>
     d5c:	ldur	x8, [x29, #-24]
     d60:	cbz	x8, d74 <ctf_arc_open_internal+0x12c>
     d64:	bl	0 <__errno_location>
     d68:	ldr	w8, [x0]
     d6c:	ldur	x9, [x29, #-24]
     d70:	str	w8, [x9]
     d74:	ldur	x0, [x29, #-32]
     d78:	ldur	x1, [x29, #-16]
     d7c:	str	x0, [sp, #16]
     d80:	str	x1, [sp, #8]
     d84:	bl	0 <__errno_location>
     d88:	ldr	w8, [x0]
     d8c:	cmp	w8, #0x3e8
     d90:	b.ge	da8 <ctf_arc_open_internal+0x160>  // b.tcont
     d94:	bl	0 <__errno_location>
     d98:	ldr	w0, [x0]
     d9c:	bl	0 <strerror>
     da0:	str	x0, [sp]
     da4:	b	db8 <ctf_arc_open_internal+0x170>
     da8:	bl	0 <__errno_location>
     dac:	ldr	w0, [x0]
     db0:	bl	0 <ctf_errmsg>
     db4:	str	x0, [sp]
     db8:	ldr	x8, [sp]
     dbc:	ldr	x0, [sp, #16]
     dc0:	ldr	x1, [sp, #8]
     dc4:	mov	x2, x8
     dc8:	bl	0 <ctf_dprintf>
     dcc:	mov	x8, xzr
     dd0:	stur	x8, [x29, #-8]
     dd4:	ldur	x0, [x29, #-8]
     dd8:	ldp	x29, x30, [sp, #208]
     ddc:	add	sp, sp, #0xe0
     de0:	ret

0000000000000de4 <arc_mmap_file>:
     de4:	sub	sp, sp, #0x40
     de8:	stp	x29, x30, [sp, #48]
     dec:	add	x29, sp, #0x30
     df0:	mov	x8, xzr
     df4:	mov	x2, x8
     df8:	mov	w9, #0x3                   	// #3
     dfc:	mov	w3, #0x2                   	// #2
     e00:	mov	x10, #0xffffffffffffffff    	// #-1
     e04:	stur	w0, [x29, #-12]
     e08:	str	x1, [sp, #24]
     e0c:	ldr	x1, [sp, #24]
     e10:	ldur	w4, [x29, #-12]
     e14:	mov	x0, x2
     e18:	mov	w2, w9
     e1c:	mov	x5, x8
     e20:	str	x10, [sp, #8]
     e24:	bl	0 <mmap>
     e28:	str	x0, [sp, #16]
     e2c:	ldr	x8, [sp, #8]
     e30:	cmp	x0, x8
     e34:	b.ne	e44 <arc_mmap_file+0x60>  // b.any
     e38:	mov	x8, xzr
     e3c:	stur	x8, [x29, #-8]
     e40:	b	e4c <arc_mmap_file+0x68>
     e44:	ldr	x8, [sp, #16]
     e48:	stur	x8, [x29, #-8]
     e4c:	ldur	x0, [x29, #-8]
     e50:	ldp	x29, x30, [sp, #48]
     e54:	add	sp, sp, #0x40
     e58:	ret

0000000000000e5c <ctf_arc_close_internal>:
     e5c:	sub	sp, sp, #0x20
     e60:	stp	x29, x30, [sp, #16]
     e64:	add	x29, sp, #0x10
     e68:	str	x0, [sp, #8]
     e6c:	ldr	x8, [sp, #8]
     e70:	cbnz	x8, e78 <ctf_arc_close_internal+0x1c>
     e74:	b	e90 <ctf_arc_close_internal+0x34>
     e78:	ldr	x0, [sp, #8]
     e7c:	ldr	x8, [sp, #8]
     e80:	ldr	x1, [x8]
     e84:	mov	x8, xzr
     e88:	mov	x2, x8
     e8c:	bl	a0c <arc_mmap_unmap>
     e90:	ldp	x29, x30, [sp, #16]
     e94:	add	sp, sp, #0x20
     e98:	ret

0000000000000e9c <ctf_arc_close>:
     e9c:	sub	sp, sp, #0x20
     ea0:	stp	x29, x30, [sp, #16]
     ea4:	add	x29, sp, #0x10
     ea8:	str	x0, [sp, #8]
     eac:	ldr	x8, [sp, #8]
     eb0:	cbnz	x8, eb8 <ctf_arc_close+0x1c>
     eb4:	b	f1c <ctf_arc_close+0x80>
     eb8:	ldr	x8, [sp, #8]
     ebc:	ldr	w9, [x8]
     ec0:	cbz	w9, ed4 <ctf_arc_close+0x38>
     ec4:	ldr	x8, [sp, #8]
     ec8:	ldr	x0, [x8, #16]
     ecc:	bl	e5c <ctf_arc_close_internal>
     ed0:	b	ee0 <ctf_arc_close+0x44>
     ed4:	ldr	x8, [sp, #8]
     ed8:	ldr	x0, [x8, #8]
     edc:	bl	0 <ctf_file_close>
     ee0:	ldr	x8, [sp, #8]
     ee4:	ldr	x0, [x8, #32]
     ee8:	bl	0 <free>
     eec:	ldr	x8, [sp, #8]
     ef0:	ldr	x0, [x8, #88]
     ef4:	bl	0 <free>
     ef8:	ldr	x8, [sp, #8]
     efc:	ldr	x8, [x8, #104]
     f00:	cbz	x8, f14 <ctf_arc_close+0x78>
     f04:	ldr	x8, [sp, #8]
     f08:	ldr	x8, [x8, #104]
     f0c:	ldr	x0, [sp, #8]
     f10:	blr	x8
     f14:	ldr	x0, [sp, #8]
     f18:	bl	0 <free>
     f1c:	ldp	x29, x30, [sp, #16]
     f20:	add	sp, sp, #0x20
     f24:	ret

0000000000000f28 <ctf_arc_open_by_name_sections>:
     f28:	sub	sp, sp, #0x50
     f2c:	stp	x29, x30, [sp, #64]
     f30:	add	x29, sp, #0x40
     f34:	stur	x0, [x29, #-16]
     f38:	stur	x1, [x29, #-24]
     f3c:	str	x2, [sp, #32]
     f40:	str	x3, [sp, #24]
     f44:	str	x4, [sp, #16]
     f48:	ldur	x8, [x29, #-16]
     f4c:	ldr	w9, [x8]
     f50:	cbz	w9, f94 <ctf_arc_open_by_name_sections+0x6c>
     f54:	ldur	x8, [x29, #-16]
     f58:	ldr	x0, [x8, #16]
     f5c:	ldur	x1, [x29, #-24]
     f60:	ldr	x2, [sp, #32]
     f64:	ldr	x3, [sp, #24]
     f68:	ldr	x4, [sp, #16]
     f6c:	bl	1010 <ctf_arc_open_by_name_internal>
     f70:	str	x0, [sp, #8]
     f74:	ldr	x8, [sp, #8]
     f78:	cbz	x8, f88 <ctf_arc_open_by_name_sections+0x60>
     f7c:	ldur	x8, [x29, #-16]
     f80:	ldr	x9, [sp, #8]
     f84:	str	x8, [x9, #640]
     f88:	ldr	x8, [sp, #8]
     f8c:	stur	x8, [x29, #-8]
     f90:	b	1000 <ctf_arc_open_by_name_sections+0xd8>
     f94:	ldr	x8, [sp, #24]
     f98:	cbz	x8, fd0 <ctf_arc_open_by_name_sections+0xa8>
     f9c:	ldr	x0, [sp, #24]
     fa0:	adrp	x1, 0 <_CTF_SECTION>
     fa4:	add	x1, x1, #0x0
     fa8:	bl	0 <strcmp>
     fac:	cbz	w0, fd0 <ctf_arc_open_by_name_sections+0xa8>
     fb0:	ldr	x8, [sp, #16]
     fb4:	cbz	x8, fc4 <ctf_arc_open_by_name_sections+0x9c>
     fb8:	ldr	x8, [sp, #16]
     fbc:	mov	w9, #0x415                 	// #1045
     fc0:	str	w9, [x8]
     fc4:	mov	x8, xzr
     fc8:	stur	x8, [x29, #-8]
     fcc:	b	1000 <ctf_arc_open_by_name_sections+0xd8>
     fd0:	ldur	x8, [x29, #-16]
     fd4:	ldur	x9, [x29, #-16]
     fd8:	ldr	x9, [x9, #8]
     fdc:	str	x8, [x9, #640]
     fe0:	ldur	x8, [x29, #-16]
     fe4:	ldr	x8, [x8, #8]
     fe8:	ldr	w10, [x8, #548]
     fec:	add	w10, w10, #0x1
     ff0:	str	w10, [x8, #548]
     ff4:	ldur	x8, [x29, #-16]
     ff8:	ldr	x8, [x8, #8]
     ffc:	stur	x8, [x29, #-8]
    1000:	ldur	x0, [x29, #-8]
    1004:	ldp	x29, x30, [sp, #64]
    1008:	add	sp, sp, #0x50
    100c:	ret

0000000000001010 <ctf_arc_open_by_name_internal>:
    1010:	sub	sp, sp, #0x90
    1014:	stp	x29, x30, [sp, #128]
    1018:	add	x29, sp, #0x80
    101c:	stur	x0, [x29, #-16]
    1020:	stur	x1, [x29, #-24]
    1024:	stur	x2, [x29, #-32]
    1028:	stur	x3, [x29, #-40]
    102c:	stur	x4, [x29, #-48]
    1030:	ldur	x8, [x29, #-40]
    1034:	cbnz	x8, 104c <ctf_arc_open_by_name_internal+0x3c>
    1038:	b	103c <ctf_arc_open_by_name_internal+0x2c>
    103c:	adrp	x8, 0 <_CTF_SECTION>
    1040:	add	x8, x8, #0x0
    1044:	stur	x8, [x29, #-40]
    1048:	b	104c <ctf_arc_open_by_name_internal+0x3c>
    104c:	ldur	x1, [x29, #-40]
    1050:	adrp	x0, 0 <ctf_arc_write_fd>
    1054:	add	x0, x0, #0x0
    1058:	bl	0 <ctf_dprintf>
    105c:	ldur	x8, [x29, #-16]
    1060:	add	x8, x8, #0x28
    1064:	stur	x8, [x29, #-56]
    1068:	ldur	x8, [x29, #-16]
    106c:	ldr	x0, [x8, #24]
    1070:	str	x8, [sp, #64]
    1074:	bl	5b4 <__uint64_identity>
    1078:	ldr	x8, [sp, #64]
    107c:	add	x9, x8, x0
    1080:	mrs	x10, tpidr_el0
    1084:	add	x10, x10, #0x0, lsl #12
    1088:	add	x10, x10, #0x0
    108c:	str	x9, [x10]
    1090:	ldur	x0, [x29, #-40]
    1094:	ldur	x1, [x29, #-56]
    1098:	ldur	x9, [x29, #-16]
    109c:	ldr	x9, [x9, #16]
    10a0:	str	x0, [sp, #56]
    10a4:	mov	x0, x9
    10a8:	str	x1, [sp, #48]
    10ac:	bl	5b4 <__uint64_identity>
    10b0:	adrp	x4, 0 <ctf_arc_write_fd>
    10b4:	add	x4, x4, #0x0
    10b8:	mov	w11, #0x10                  	// #16
    10bc:	mov	w3, w11
    10c0:	ldr	x8, [sp, #56]
    10c4:	str	x0, [sp, #40]
    10c8:	mov	x0, x8
    10cc:	ldr	x1, [sp, #48]
    10d0:	ldr	x2, [sp, #40]
    10d4:	bl	0 <bsearch>
    10d8:	stur	x0, [x29, #-56]
    10dc:	ldur	x8, [x29, #-56]
    10e0:	cbnz	x8, 1110 <ctf_arc_open_by_name_internal+0x100>
    10e4:	b	10e8 <ctf_arc_open_by_name_internal+0xd8>
    10e8:	ldur	x8, [x29, #-48]
    10ec:	cbz	x8, 1104 <ctf_arc_open_by_name_internal+0xf4>
    10f0:	b	10f4 <ctf_arc_open_by_name_internal+0xe4>
    10f4:	ldur	x8, [x29, #-48]
    10f8:	mov	w9, #0x415                 	// #1045
    10fc:	str	w9, [x8]
    1100:	b	1104 <ctf_arc_open_by_name_internal+0xf4>
    1104:	mov	x8, xzr
    1108:	stur	x8, [x29, #-8]
    110c:	b	1160 <ctf_arc_open_by_name_internal+0x150>
    1110:	ldur	x0, [x29, #-16]
    1114:	ldur	x1, [x29, #-24]
    1118:	ldur	x2, [x29, #-32]
    111c:	ldur	x8, [x29, #-56]
    1120:	ldr	x8, [x8, #8]
    1124:	str	x0, [sp, #32]
    1128:	mov	x0, x8
    112c:	str	x1, [sp, #24]
    1130:	str	x2, [sp, #16]
    1134:	bl	5b4 <__uint64_identity>
    1138:	ldur	x4, [x29, #-48]
    113c:	ldr	x8, [sp, #32]
    1140:	str	x0, [sp, #8]
    1144:	mov	x0, x8
    1148:	ldr	x1, [sp, #24]
    114c:	ldr	x2, [sp, #16]
    1150:	ldr	x3, [sp, #8]
    1154:	bl	1604 <ctf_arc_open_by_offset>
    1158:	stur	x0, [x29, #-8]
    115c:	b	1160 <ctf_arc_open_by_name_internal+0x150>
    1160:	ldur	x0, [x29, #-8]
    1164:	ldp	x29, x30, [sp, #128]
    1168:	add	sp, sp, #0x90
    116c:	ret

0000000000001170 <ctf_arc_open_by_name>:
    1170:	sub	sp, sp, #0x40
    1174:	stp	x29, x30, [sp, #48]
    1178:	add	x29, sp, #0x30
    117c:	stur	x0, [x29, #-8]
    1180:	stur	x1, [x29, #-16]
    1184:	str	x2, [sp, #24]
    1188:	ldur	x8, [x29, #-8]
    118c:	add	x8, x8, #0x18
    1190:	str	x8, [sp, #16]
    1194:	ldur	x8, [x29, #-8]
    1198:	add	x8, x8, #0x38
    119c:	str	x8, [sp, #8]
    11a0:	ldr	x8, [sp, #16]
    11a4:	ldr	x8, [x8]
    11a8:	cbnz	x8, 11b4 <ctf_arc_open_by_name+0x44>
    11ac:	mov	x8, xzr
    11b0:	str	x8, [sp, #16]
    11b4:	ldr	x8, [sp, #8]
    11b8:	ldr	x8, [x8]
    11bc:	cbnz	x8, 11c8 <ctf_arc_open_by_name+0x58>
    11c0:	mov	x8, xzr
    11c4:	str	x8, [sp, #8]
    11c8:	ldur	x0, [x29, #-8]
    11cc:	ldr	x1, [sp, #16]
    11d0:	ldr	x2, [sp, #8]
    11d4:	ldur	x3, [x29, #-16]
    11d8:	ldr	x4, [sp, #24]
    11dc:	bl	f28 <ctf_arc_open_by_name_sections>
    11e0:	ldp	x29, x30, [sp, #48]
    11e4:	add	sp, sp, #0x40
    11e8:	ret

00000000000011ec <ctf_archive_raw_iter>:
    11ec:	sub	sp, sp, #0x30
    11f0:	stp	x29, x30, [sp, #32]
    11f4:	add	x29, sp, #0x20
    11f8:	str	x0, [sp, #16]
    11fc:	str	x1, [sp, #8]
    1200:	str	x2, [sp]
    1204:	ldr	x8, [sp, #16]
    1208:	ldr	w9, [x8]
    120c:	cbz	w9, 122c <ctf_archive_raw_iter+0x40>
    1210:	ldr	x8, [sp, #16]
    1214:	ldr	x0, [x8, #16]
    1218:	ldr	x1, [sp, #8]
    121c:	ldr	x2, [sp]
    1220:	bl	1244 <ctf_archive_raw_iter_internal>
    1224:	stur	w0, [x29, #-4]
    1228:	b	1234 <ctf_archive_raw_iter+0x48>
    122c:	mov	w8, #0xffffffea            	// #-22
    1230:	stur	w8, [x29, #-4]
    1234:	ldur	w0, [x29, #-4]
    1238:	ldp	x29, x30, [sp, #32]
    123c:	add	sp, sp, #0x30
    1240:	ret

0000000000001244 <ctf_archive_raw_iter_internal>:
    1244:	sub	sp, sp, #0xb0
    1248:	stp	x29, x30, [sp, #160]
    124c:	add	x29, sp, #0xa0
    1250:	stur	x0, [x29, #-16]
    1254:	stur	x1, [x29, #-24]
    1258:	stur	x2, [x29, #-32]
    125c:	ldur	x8, [x29, #-16]
    1260:	add	x8, x8, #0x28
    1264:	stur	x8, [x29, #-56]
    1268:	ldur	x8, [x29, #-16]
    126c:	ldur	x9, [x29, #-16]
    1270:	ldr	x0, [x9, #24]
    1274:	str	x8, [sp, #72]
    1278:	bl	5b4 <__uint64_identity>
    127c:	ldr	x8, [sp, #72]
    1280:	add	x9, x8, x0
    1284:	stur	x9, [x29, #-64]
    1288:	stur	xzr, [x29, #-48]
    128c:	ldur	x8, [x29, #-48]
    1290:	ldur	x9, [x29, #-16]
    1294:	ldr	x0, [x9, #16]
    1298:	str	x8, [sp, #64]
    129c:	bl	5b4 <__uint64_identity>
    12a0:	ldr	x8, [sp, #64]
    12a4:	cmp	x8, x0
    12a8:	b.cs	1394 <ctf_archive_raw_iter_internal+0x150>  // b.hs, b.nlast
    12ac:	ldur	x8, [x29, #-64]
    12b0:	ldur	x9, [x29, #-56]
    12b4:	ldur	x10, [x29, #-48]
    12b8:	mov	x11, #0x10                  	// #16
    12bc:	mul	x10, x11, x10
    12c0:	ldr	x0, [x9, x10]
    12c4:	str	x8, [sp, #56]
    12c8:	str	x11, [sp, #48]
    12cc:	bl	5b4 <__uint64_identity>
    12d0:	ldr	x8, [sp, #56]
    12d4:	add	x9, x8, x0
    12d8:	stur	x9, [x29, #-72]
    12dc:	ldur	x9, [x29, #-16]
    12e0:	ldur	x10, [x29, #-16]
    12e4:	ldr	x0, [x10, #32]
    12e8:	str	x9, [sp, #40]
    12ec:	bl	5b4 <__uint64_identity>
    12f0:	ldr	x8, [sp, #40]
    12f4:	add	x9, x8, x0
    12f8:	ldur	x10, [x29, #-56]
    12fc:	ldur	x11, [x29, #-48]
    1300:	ldr	x12, [sp, #48]
    1304:	mul	x11, x12, x11
    1308:	add	x10, x10, x11
    130c:	ldr	x0, [x10, #8]
    1310:	str	x9, [sp, #32]
    1314:	bl	5b4 <__uint64_identity>
    1318:	ldr	x8, [sp, #32]
    131c:	add	x9, x8, x0
    1320:	str	x9, [sp, #80]
    1324:	ldur	x9, [x29, #-24]
    1328:	ldur	x0, [x29, #-72]
    132c:	ldr	x10, [sp, #80]
    1330:	add	x1, x10, #0x8
    1334:	ldr	x10, [sp, #80]
    1338:	ldr	x10, [x10]
    133c:	str	x0, [sp, #24]
    1340:	mov	x0, x10
    1344:	str	x9, [sp, #16]
    1348:	str	x1, [sp, #8]
    134c:	bl	5b4 <__uint64_identity>
    1350:	ldur	x3, [x29, #-32]
    1354:	ldr	x8, [sp, #24]
    1358:	str	x0, [sp]
    135c:	mov	x0, x8
    1360:	ldr	x1, [sp, #8]
    1364:	ldr	x2, [sp]
    1368:	ldr	x9, [sp, #16]
    136c:	blr	x9
    1370:	stur	w0, [x29, #-36]
    1374:	cbz	w0, 1384 <ctf_archive_raw_iter_internal+0x140>
    1378:	ldur	w8, [x29, #-36]
    137c:	stur	w8, [x29, #-4]
    1380:	b	1398 <ctf_archive_raw_iter_internal+0x154>
    1384:	ldur	x8, [x29, #-48]
    1388:	add	x8, x8, #0x1
    138c:	stur	x8, [x29, #-48]
    1390:	b	128c <ctf_archive_raw_iter_internal+0x48>
    1394:	stur	wzr, [x29, #-4]
    1398:	ldur	w0, [x29, #-4]
    139c:	ldp	x29, x30, [sp, #160]
    13a0:	add	sp, sp, #0xb0
    13a4:	ret

00000000000013a8 <ctf_archive_iter>:
    13a8:	sub	sp, sp, #0x40
    13ac:	stp	x29, x30, [sp, #48]
    13b0:	add	x29, sp, #0x30
    13b4:	stur	x0, [x29, #-16]
    13b8:	str	x1, [sp, #24]
    13bc:	str	x2, [sp, #16]
    13c0:	ldur	x8, [x29, #-16]
    13c4:	add	x8, x8, #0x18
    13c8:	str	x8, [sp, #8]
    13cc:	ldur	x8, [x29, #-16]
    13d0:	add	x8, x8, #0x38
    13d4:	str	x8, [sp]
    13d8:	ldr	x8, [sp, #8]
    13dc:	ldr	x8, [x8]
    13e0:	cbnz	x8, 13ec <ctf_archive_iter+0x44>
    13e4:	mov	x8, xzr
    13e8:	str	x8, [sp, #8]
    13ec:	ldr	x8, [sp]
    13f0:	ldr	x8, [x8]
    13f4:	cbnz	x8, 1400 <ctf_archive_iter+0x58>
    13f8:	mov	x8, xzr
    13fc:	str	x8, [sp]
    1400:	ldur	x8, [x29, #-16]
    1404:	ldr	w9, [x8]
    1408:	cbz	w9, 1434 <ctf_archive_iter+0x8c>
    140c:	ldur	x0, [x29, #-16]
    1410:	ldur	x8, [x29, #-16]
    1414:	ldr	x1, [x8, #16]
    1418:	ldr	x2, [sp, #8]
    141c:	ldr	x3, [sp]
    1420:	ldr	x4, [sp, #24]
    1424:	ldr	x5, [sp, #16]
    1428:	bl	1464 <ctf_archive_iter_internal>
    142c:	stur	w0, [x29, #-4]
    1430:	b	1454 <ctf_archive_iter+0xac>
    1434:	ldr	x8, [sp, #24]
    1438:	ldur	x9, [x29, #-16]
    143c:	ldr	x0, [x9, #8]
    1440:	ldr	x2, [sp, #16]
    1444:	adrp	x1, 0 <_CTF_SECTION>
    1448:	add	x1, x1, #0x0
    144c:	blr	x8
    1450:	stur	w0, [x29, #-4]
    1454:	ldur	w0, [x29, #-4]
    1458:	ldp	x29, x30, [sp, #48]
    145c:	add	sp, sp, #0x40
    1460:	ret

0000000000001464 <ctf_archive_iter_internal>:
    1464:	sub	sp, sp, #0x90
    1468:	stp	x29, x30, [sp, #128]
    146c:	add	x29, sp, #0x80
    1470:	stur	x0, [x29, #-16]
    1474:	stur	x1, [x29, #-24]
    1478:	stur	x2, [x29, #-32]
    147c:	stur	x3, [x29, #-40]
    1480:	stur	x4, [x29, #-48]
    1484:	stur	x5, [x29, #-56]
    1488:	ldur	x8, [x29, #-24]
    148c:	add	x8, x8, #0x28
    1490:	str	x8, [sp, #40]
    1494:	ldur	x8, [x29, #-24]
    1498:	ldur	x9, [x29, #-24]
    149c:	ldr	x0, [x9, #24]
    14a0:	str	x8, [sp, #16]
    14a4:	bl	5b4 <__uint64_identity>
    14a8:	ldr	x8, [sp, #16]
    14ac:	add	x9, x8, x0
    14b0:	str	x9, [sp, #32]
    14b4:	str	xzr, [sp, #56]
    14b8:	ldr	x8, [sp, #56]
    14bc:	ldur	x9, [x29, #-24]
    14c0:	ldr	x0, [x9, #16]
    14c4:	str	x8, [sp, #8]
    14c8:	bl	5b4 <__uint64_identity>
    14cc:	ldr	x8, [sp, #8]
    14d0:	cmp	x8, x0
    14d4:	b.cs	1584 <ctf_archive_iter_internal+0x120>  // b.hs, b.nlast
    14d8:	ldr	x8, [sp, #32]
    14dc:	ldr	x9, [sp, #40]
    14e0:	ldr	x10, [sp, #56]
    14e4:	mov	x11, #0x10                  	// #16
    14e8:	mul	x10, x11, x10
    14ec:	ldr	x0, [x9, x10]
    14f0:	str	x8, [sp]
    14f4:	bl	5b4 <__uint64_identity>
    14f8:	ldr	x8, [sp]
    14fc:	add	x9, x8, x0
    1500:	str	x9, [sp, #24]
    1504:	ldur	x0, [x29, #-24]
    1508:	ldur	x1, [x29, #-32]
    150c:	ldur	x2, [x29, #-40]
    1510:	ldr	x3, [sp, #24]
    1514:	sub	x4, x29, #0x3c
    1518:	bl	1010 <ctf_arc_open_by_name_internal>
    151c:	str	x0, [sp, #48]
    1520:	cbnz	x0, 1530 <ctf_archive_iter_internal+0xcc>
    1524:	ldur	w8, [x29, #-60]
    1528:	stur	w8, [x29, #-4]
    152c:	b	1588 <ctf_archive_iter_internal+0x124>
    1530:	ldur	x8, [x29, #-16]
    1534:	ldr	x9, [sp, #48]
    1538:	str	x8, [x9, #640]
    153c:	ldur	x8, [x29, #-48]
    1540:	ldr	x0, [sp, #48]
    1544:	ldr	x1, [sp, #24]
    1548:	ldur	x2, [x29, #-56]
    154c:	blr	x8
    1550:	stur	w0, [x29, #-60]
    1554:	cbz	w0, 156c <ctf_archive_iter_internal+0x108>
    1558:	ldr	x0, [sp, #48]
    155c:	bl	0 <ctf_file_close>
    1560:	ldur	w8, [x29, #-60]
    1564:	stur	w8, [x29, #-4]
    1568:	b	1588 <ctf_archive_iter_internal+0x124>
    156c:	ldr	x0, [sp, #48]
    1570:	bl	0 <ctf_file_close>
    1574:	ldr	x8, [sp, #56]
    1578:	add	x8, x8, #0x1
    157c:	str	x8, [sp, #56]
    1580:	b	14b8 <ctf_archive_iter_internal+0x54>
    1584:	stur	wzr, [x29, #-4]
    1588:	ldur	w0, [x29, #-4]
    158c:	ldp	x29, x30, [sp, #128]
    1590:	add	sp, sp, #0x90
    1594:	ret

0000000000001598 <search_modent_by_name>:
    1598:	sub	sp, sp, #0x40
    159c:	stp	x29, x30, [sp, #48]
    15a0:	add	x29, sp, #0x30
    15a4:	stur	x0, [x29, #-8]
    15a8:	stur	x1, [x29, #-16]
    15ac:	ldur	x8, [x29, #-8]
    15b0:	str	x8, [sp, #24]
    15b4:	ldur	x8, [x29, #-16]
    15b8:	str	x8, [sp, #16]
    15bc:	ldr	x0, [sp, #24]
    15c0:	mrs	x8, tpidr_el0
    15c4:	add	x8, x8, #0x0, lsl #12
    15c8:	add	x8, x8, #0x0
    15cc:	ldr	x8, [x8]
    15d0:	ldr	x9, [sp, #16]
    15d4:	ldr	x9, [x9]
    15d8:	str	x0, [sp, #8]
    15dc:	mov	x0, x9
    15e0:	str	x8, [sp]
    15e4:	bl	5b4 <__uint64_identity>
    15e8:	ldr	x8, [sp]
    15ec:	add	x1, x8, x0
    15f0:	ldr	x0, [sp, #8]
    15f4:	bl	0 <strcmp>
    15f8:	ldp	x29, x30, [sp, #48]
    15fc:	add	sp, sp, #0x40
    1600:	ret

0000000000001604 <ctf_arc_open_by_offset>:
    1604:	sub	sp, sp, #0xa0
    1608:	stp	x29, x30, [sp, #144]
    160c:	add	x29, sp, #0x90
    1610:	adrp	x8, 0 <ctf_arc_write_fd>
    1614:	add	x8, x8, #0x0
    1618:	mov	x9, #0x20                  	// #32
    161c:	adrp	x10, 0 <_CTF_SECTION>
    1620:	add	x10, x10, #0x0
    1624:	mov	x11, #0x1                   	// #1
    1628:	add	x12, sp, #0x40
    162c:	stur	x0, [x29, #-8]
    1630:	stur	x1, [x29, #-16]
    1634:	stur	x2, [x29, #-24]
    1638:	stur	x3, [x29, #-32]
    163c:	stur	x4, [x29, #-40]
    1640:	ldur	x1, [x29, #-32]
    1644:	mov	x0, x8
    1648:	str	x9, [sp, #48]
    164c:	str	x10, [sp, #40]
    1650:	str	x11, [sp, #32]
    1654:	str	x12, [sp, #24]
    1658:	bl	0 <ctf_dprintf>
    165c:	ldr	x0, [sp, #24]
    1660:	mov	w13, wzr
    1664:	mov	w1, w13
    1668:	ldr	x2, [sp, #48]
    166c:	bl	0 <memset>
    1670:	ldur	x8, [x29, #-8]
    1674:	ldr	x0, [x8, #32]
    1678:	bl	5b4 <__uint64_identity>
    167c:	ldur	x8, [x29, #-32]
    1680:	add	x8, x8, x0
    1684:	stur	x8, [x29, #-32]
    1688:	ldr	x8, [sp, #40]
    168c:	str	x8, [sp, #64]
    1690:	ldur	x9, [x29, #-8]
    1694:	ldur	x10, [x29, #-32]
    1698:	ldr	x0, [x9, x10]
    169c:	bl	5b4 <__uint64_identity>
    16a0:	str	x0, [sp, #80]
    16a4:	ldr	x8, [sp, #32]
    16a8:	str	x8, [sp, #88]
    16ac:	ldur	x9, [x29, #-8]
    16b0:	ldur	x10, [x29, #-32]
    16b4:	add	x9, x9, x10
    16b8:	add	x9, x9, #0x8
    16bc:	ldr	x10, [sp, #24]
    16c0:	str	x9, [x10, #8]
    16c4:	ldur	x1, [x29, #-16]
    16c8:	ldur	x2, [x29, #-24]
    16cc:	ldur	x3, [x29, #-40]
    16d0:	mov	x0, x10
    16d4:	bl	0 <ctf_bufopen>
    16d8:	str	x0, [sp, #56]
    16dc:	ldr	x8, [sp, #56]
    16e0:	cbz	x8, 1710 <ctf_arc_open_by_offset+0x10c>
    16e4:	ldr	x0, [sp, #56]
    16e8:	ldur	x8, [x29, #-8]
    16ec:	ldr	x8, [x8, #8]
    16f0:	str	x0, [sp, #16]
    16f4:	mov	x0, x8
    16f8:	bl	5b4 <__uint64_identity>
    16fc:	ldr	x8, [sp, #16]
    1700:	str	w0, [sp, #12]
    1704:	mov	x0, x8
    1708:	ldr	w1, [sp, #12]
    170c:	bl	0 <ctf_setmodel>
    1710:	ldr	x0, [sp, #56]
    1714:	ldp	x29, x30, [sp, #144]
    1718:	add	sp, sp, #0xa0
    171c:	ret

ctf-dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_dump>:
       0:	sub	sp, sp, #0x80
       4:	stp	x29, x30, [sp, #112]
       8:	add	x29, sp, #0x70
       c:	mov	x8, xzr
      10:	stur	x0, [x29, #-16]
      14:	stur	x1, [x29, #-24]
      18:	stur	w2, [x29, #-28]
      1c:	stur	x3, [x29, #-40]
      20:	stur	x4, [x29, #-48]
      24:	str	x8, [sp, #40]
      28:	ldur	x8, [x29, #-24]
      2c:	ldr	x8, [x8]
      30:	cbnz	x8, 1d0 <ctf_dump+0x1d0>
      34:	mov	x0, #0x28                  	// #40
      38:	bl	0 <malloc>
      3c:	ldur	x8, [x29, #-24]
      40:	str	x0, [x8]
      44:	cbnz	x0, 58 <ctf_dump+0x58>
      48:	ldur	x0, [x29, #-16]
      4c:	mov	w1, #0xc                   	// #12
      50:	bl	0 <ctf_set_errno>
      54:	b	3d0 <ctf_dump+0x3d0>
      58:	ldur	x8, [x29, #-24]
      5c:	ldr	x8, [x8]
      60:	str	x8, [sp, #40]
      64:	ldr	x0, [sp, #40]
      68:	mov	w9, wzr
      6c:	mov	w1, w9
      70:	mov	x2, #0x28                  	// #40
      74:	bl	0 <memset>
      78:	ldur	x8, [x29, #-16]
      7c:	ldr	x10, [sp, #40]
      80:	str	x8, [x10, #8]
      84:	ldur	w9, [x29, #-28]
      88:	ldr	x8, [sp, #40]
      8c:	str	w9, [x8]
      90:	ldur	w9, [x29, #-28]
      94:	subs	w9, w9, #0x0
      98:	mov	w8, w9
      9c:	ubfx	x8, x8, #0, #32
      a0:	cmp	x8, #0x6
      a4:	str	x8, [sp, #8]
      a8:	b.hi	1bc <ctf_dump+0x1bc>  // b.pmore
      ac:	adrp	x8, 0 <ctf_dump>
      b0:	add	x8, x8, #0x0
      b4:	ldr	x11, [sp, #8]
      b8:	ldrsw	x10, [x8, x11, lsl #2]
      bc:	add	x9, x8, x10
      c0:	br	x9
      c4:	ldur	x0, [x29, #-16]
      c8:	ldr	x1, [sp, #40]
      cc:	bl	410 <ctf_dump_header>
      d0:	b	1cc <ctf_dump+0x1cc>
      d4:	ldur	x0, [x29, #-16]
      d8:	ldr	x2, [sp, #40]
      dc:	adrp	x1, 0 <ctf_dump>
      e0:	add	x1, x1, #0x0
      e4:	bl	0 <ctf_label_iter>
      e8:	cmp	w0, #0x0
      ec:	cset	w8, ge  // ge = tcont
      f0:	tbnz	w8, #0, 118 <ctf_dump+0x118>
      f4:	ldur	x0, [x29, #-16]
      f8:	bl	0 <ctf_errno>
      fc:	cmp	w0, #0x409
     100:	b.eq	108 <ctf_dump+0x108>  // b.none
     104:	b	3d0 <ctf_dump+0x3d0>
     108:	ldur	x0, [x29, #-16]
     10c:	mov	w8, wzr
     110:	mov	w1, w8
     114:	bl	0 <ctf_set_errno>
     118:	b	1cc <ctf_dump+0x1cc>
     11c:	ldur	x0, [x29, #-16]
     120:	ldr	x1, [sp, #40]
     124:	bl	8c0 <ctf_dump_objts>
     128:	cmp	w0, #0x0
     12c:	cset	w8, ge  // ge = tcont
     130:	tbnz	w8, #0, 138 <ctf_dump+0x138>
     134:	b	3d0 <ctf_dump+0x3d0>
     138:	b	1cc <ctf_dump+0x1cc>
     13c:	ldur	x0, [x29, #-16]
     140:	ldr	x1, [sp, #40]
     144:	bl	a68 <ctf_dump_funcs>
     148:	cmp	w0, #0x0
     14c:	cset	w8, ge  // ge = tcont
     150:	tbnz	w8, #0, 158 <ctf_dump+0x158>
     154:	b	3d0 <ctf_dump+0x3d0>
     158:	b	1cc <ctf_dump+0x1cc>
     15c:	ldur	x0, [x29, #-16]
     160:	ldr	x2, [sp, #40]
     164:	adrp	x1, 0 <ctf_dump>
     168:	add	x1, x1, #0x0
     16c:	bl	0 <ctf_variable_iter>
     170:	cmp	w0, #0x0
     174:	cset	w8, ge  // ge = tcont
     178:	tbnz	w8, #0, 180 <ctf_dump+0x180>
     17c:	b	3d0 <ctf_dump+0x3d0>
     180:	b	1cc <ctf_dump+0x1cc>
     184:	ldur	x0, [x29, #-16]
     188:	ldr	x2, [sp, #40]
     18c:	adrp	x1, 0 <ctf_dump>
     190:	add	x1, x1, #0x0
     194:	bl	0 <ctf_type_iter_all>
     198:	cmp	w0, #0x0
     19c:	cset	w8, ge  // ge = tcont
     1a0:	tbnz	w8, #0, 1a8 <ctf_dump+0x1a8>
     1a4:	b	3d0 <ctf_dump+0x3d0>
     1a8:	b	1cc <ctf_dump+0x1cc>
     1ac:	ldur	x0, [x29, #-16]
     1b0:	ldr	x1, [sp, #40]
     1b4:	bl	1040 <ctf_dump_str>
     1b8:	b	1cc <ctf_dump+0x1cc>
     1bc:	ldur	x0, [x29, #-16]
     1c0:	mov	w1, #0x417                 	// #1047
     1c4:	bl	0 <ctf_set_errno>
     1c8:	b	3d0 <ctf_dump+0x3d0>
     1cc:	b	200 <ctf_dump+0x200>
     1d0:	ldur	x8, [x29, #-24]
     1d4:	ldr	x8, [x8]
     1d8:	str	x8, [sp, #40]
     1dc:	ldr	x8, [sp, #40]
     1e0:	ldr	w9, [x8]
     1e4:	ldur	w10, [x29, #-28]
     1e8:	cmp	w9, w10
     1ec:	b.eq	200 <ctf_dump+0x200>  // b.none
     1f0:	ldur	x0, [x29, #-16]
     1f4:	mov	w1, #0x418                 	// #1048
     1f8:	bl	0 <ctf_set_errno>
     1fc:	b	3d0 <ctf_dump+0x3d0>
     200:	ldr	x8, [sp, #40]
     204:	ldr	x8, [x8, #16]
     208:	cbnz	x8, 220 <ctf_dump+0x220>
     20c:	ldr	x8, [sp, #40]
     210:	ldr	x8, [x8, #32]
     214:	ldr	x9, [sp, #40]
     218:	str	x8, [x9, #16]
     21c:	b	234 <ctf_dump+0x234>
     220:	ldr	x8, [sp, #40]
     224:	ldr	x8, [x8, #16]
     228:	ldr	x8, [x8, #8]
     22c:	ldr	x9, [sp, #40]
     230:	str	x8, [x9, #16]
     234:	ldr	x8, [sp, #40]
     238:	ldr	x8, [x8, #16]
     23c:	cbnz	x8, 244 <ctf_dump+0x244>
     240:	b	3d0 <ctf_dump+0x3d0>
     244:	ldur	x8, [x29, #-40]
     248:	cbz	x8, 380 <ctf_dump+0x380>
     24c:	mov	x8, xzr
     250:	str	x8, [sp, #56]
     254:	ldr	x8, [sp, #40]
     258:	ldr	x8, [x8, #16]
     25c:	ldr	x8, [x8, #16]
     260:	str	x8, [sp, #48]
     264:	ldr	x8, [sp, #48]
     268:	mov	w9, #0x0                   	// #0
     26c:	str	w9, [sp, #4]
     270:	cbz	x8, 288 <ctf_dump+0x288>
     274:	ldr	x8, [sp, #48]
     278:	ldrb	w9, [x8]
     27c:	cmp	w9, #0x0
     280:	cset	w9, ne  // ne = any
     284:	str	w9, [sp, #4]
     288:	ldr	w8, [sp, #4]
     28c:	tbnz	w8, #0, 294 <ctf_dump+0x294>
     290:	b	340 <ctf_dump+0x340>
     294:	ldr	x8, [sp, #48]
     298:	str	x8, [sp, #24]
     29c:	ldr	x0, [sp, #48]
     2a0:	mov	w1, #0xa                   	// #10
     2a4:	bl	0 <strchr>
     2a8:	str	x0, [sp, #24]
     2ac:	ldr	x8, [sp, #24]
     2b0:	cbz	x8, 2c0 <ctf_dump+0x2c0>
     2b4:	ldr	x8, [sp, #24]
     2b8:	mov	w9, #0x0                   	// #0
     2bc:	strb	w9, [x8]
     2c0:	ldur	x8, [x29, #-40]
     2c4:	ldur	w0, [x29, #-28]
     2c8:	ldr	x1, [sp, #48]
     2cc:	ldur	x2, [x29, #-48]
     2d0:	blr	x8
     2d4:	str	x0, [sp, #16]
     2d8:	ldr	x0, [sp, #56]
     2dc:	ldr	x1, [sp, #16]
     2e0:	bl	0 <ctf_str_append_noerr>
     2e4:	str	x0, [sp, #56]
     2e8:	ldr	x0, [sp, #56]
     2ec:	adrp	x1, 0 <ctf_dump>
     2f0:	add	x1, x1, #0x0
     2f4:	bl	0 <ctf_str_append_noerr>
     2f8:	str	x0, [sp, #56]
     2fc:	ldr	x8, [sp, #16]
     300:	ldr	x9, [sp, #48]
     304:	cmp	x8, x9
     308:	b.eq	314 <ctf_dump+0x314>  // b.none
     30c:	ldr	x0, [sp, #16]
     310:	bl	0 <free>
     314:	ldr	x8, [sp, #24]
     318:	cbz	x8, 334 <ctf_dump+0x334>
     31c:	ldr	x8, [sp, #24]
     320:	mov	w9, #0xa                   	// #10
     324:	strb	w9, [x8]
     328:	ldr	x8, [sp, #24]
     32c:	add	x8, x8, #0x1
     330:	str	x8, [sp, #24]
     334:	ldr	x8, [sp, #24]
     338:	str	x8, [sp, #48]
     33c:	b	264 <ctf_dump+0x264>
     340:	ldr	x0, [sp, #56]
     344:	bl	0 <strlen>
     348:	str	x0, [sp, #32]
     34c:	ldr	x8, [sp, #56]
     350:	ldr	x9, [sp, #32]
     354:	subs	x9, x9, #0x1
     358:	ldrb	w10, [x8, x9]
     35c:	cmp	w10, #0xa
     360:	b.ne	37c <ctf_dump+0x37c>  // b.any
     364:	ldr	x8, [sp, #56]
     368:	ldr	x9, [sp, #32]
     36c:	subs	x9, x9, #0x1
     370:	add	x8, x8, x9
     374:	mov	w10, #0x0                   	// #0
     378:	strb	w10, [x8]
     37c:	b	3b4 <ctf_dump+0x3b4>
     380:	ldr	x8, [sp, #40]
     384:	ldr	x8, [x8, #16]
     388:	ldr	x0, [x8, #16]
     38c:	bl	0 <strdup>
     390:	str	x0, [sp, #56]
     394:	ldr	x8, [sp, #56]
     398:	cbnz	x8, 3b4 <ctf_dump+0x3b4>
     39c:	ldur	x0, [x29, #-16]
     3a0:	mov	w1, #0xc                   	// #12
     3a4:	bl	0 <ctf_set_errno>
     3a8:	ldr	x8, [sp, #56]
     3ac:	stur	x8, [x29, #-8]
     3b0:	b	400 <ctf_dump+0x400>
     3b4:	ldur	x0, [x29, #-16]
     3b8:	mov	w8, wzr
     3bc:	mov	w1, w8
     3c0:	bl	0 <ctf_set_errno>
     3c4:	ldr	x9, [sp, #56]
     3c8:	stur	x9, [x29, #-8]
     3cc:	b	400 <ctf_dump+0x400>
     3d0:	ldr	x0, [sp, #40]
     3d4:	bl	1110 <ctf_dump_free>
     3d8:	ldr	x0, [sp, #40]
     3dc:	bl	0 <free>
     3e0:	ldur	x0, [x29, #-16]
     3e4:	mov	w8, wzr
     3e8:	mov	w1, w8
     3ec:	bl	0 <ctf_set_errno>
     3f0:	ldur	x9, [x29, #-24]
     3f4:	mov	x10, xzr
     3f8:	str	x10, [x9]
     3fc:	stur	x10, [x29, #-8]
     400:	ldur	x0, [x29, #-8]
     404:	ldp	x29, x30, [sp, #112]
     408:	add	sp, sp, #0x80
     40c:	ret

0000000000000410 <ctf_dump_header>:
     410:	sub	sp, sp, #0xc0
     414:	stp	x29, x30, [sp, #176]
     418:	add	x29, sp, #0xb0
     41c:	mov	x2, #0x30                  	// #48
     420:	adrp	x8, 0 <ctf_dump>
     424:	add	x8, x8, #0x0
     428:	adrp	x9, 0 <ctf_dump>
     42c:	add	x9, x9, #0x0
     430:	adrp	x10, 0 <ctf_dump>
     434:	add	x10, x10, #0x0
     438:	adrp	x11, 0 <ctf_dump>
     43c:	add	x11, x11, #0x0
     440:	mov	x12, xzr
     444:	adrp	x13, 0 <ctf_dump>
     448:	add	x13, x13, #0x0
     44c:	mov	w14, wzr
     450:	sub	x15, x29, #0x20
     454:	add	x16, sp, #0x58
     458:	stur	x0, [x29, #-16]
     45c:	stur	x1, [x29, #-24]
     460:	ldur	x17, [x29, #-16]
     464:	ldr	x17, [x17, #8]
     468:	stur	x17, [x29, #-40]
     46c:	mov	x0, x16
     470:	mov	w1, w14
     474:	str	x8, [sp, #72]
     478:	str	x9, [sp, #64]
     47c:	str	x10, [sp, #56]
     480:	str	x11, [sp, #48]
     484:	str	x12, [sp, #40]
     488:	str	x13, [sp, #32]
     48c:	str	x15, [sp, #24]
     490:	str	x16, [sp, #16]
     494:	bl	0 <memset>
     498:	ldr	x8, [sp, #72]
     49c:	ldr	x9, [sp, #16]
     4a0:	str	x8, [x9, #8]
     4a4:	ldr	x10, [sp, #64]
     4a8:	str	x10, [x9, #16]
     4ac:	ldr	x11, [sp, #56]
     4b0:	str	x11, [x9, #24]
     4b4:	ldr	x12, [sp, #48]
     4b8:	str	x12, [x9, #32]
     4bc:	ldr	x13, [sp, #40]
     4c0:	str	x13, [sp, #80]
     4c4:	ldur	x15, [x29, #-40]
     4c8:	ldrh	w2, [x15]
     4cc:	ldr	x0, [sp, #24]
     4d0:	ldr	x1, [sp, #32]
     4d4:	bl	0 <asprintf>
     4d8:	cmp	w0, #0x0
     4dc:	cset	w14, ge  // ge = tcont
     4e0:	tbnz	w14, #0, 4e8 <ctf_dump_header+0xd8>
     4e4:	b	7bc <ctf_dump_header+0x3ac>
     4e8:	ldur	x0, [x29, #-24]
     4ec:	ldur	x1, [x29, #-32]
     4f0:	bl	1178 <ctf_dump_append>
     4f4:	ldur	x8, [x29, #-40]
     4f8:	ldrb	w9, [x8, #2]
     4fc:	cmp	w9, #0x4
     500:	b.gt	528 <ctf_dump_header+0x118>
     504:	ldur	x8, [x29, #-40]
     508:	ldrb	w9, [x8, #2]
     50c:	mov	w8, w9
     510:	mov	x10, #0x8                   	// #8
     514:	mul	x8, x10, x8
     518:	add	x10, sp, #0x58
     51c:	add	x8, x10, x8
     520:	ldr	x8, [x8]
     524:	str	x8, [sp, #80]
     528:	ldr	x8, [sp, #80]
     52c:	cbnz	x8, 53c <ctf_dump_header+0x12c>
     530:	adrp	x8, 0 <ctf_dump>
     534:	add	x8, x8, #0x0
     538:	str	x8, [sp, #80]
     53c:	ldur	x8, [x29, #-40]
     540:	ldrb	w2, [x8, #2]
     544:	ldr	x3, [sp, #80]
     548:	sub	x0, x29, #0x20
     54c:	adrp	x1, 0 <ctf_dump>
     550:	add	x1, x1, #0x0
     554:	bl	0 <asprintf>
     558:	cmp	w0, #0x0
     55c:	cset	w9, ge  // ge = tcont
     560:	tbnz	w9, #0, 568 <ctf_dump_header+0x158>
     564:	b	7bc <ctf_dump_header+0x3ac>
     568:	ldur	x0, [x29, #-24]
     56c:	ldur	x1, [x29, #-32]
     570:	bl	1178 <ctf_dump_append>
     574:	ldur	x8, [x29, #-16]
     578:	ldrb	w9, [x8, #16]
     57c:	cmp	w9, #0x0
     580:	cset	w9, le
     584:	tbnz	w9, #0, 5e8 <ctf_dump_header+0x1d8>
     588:	ldur	x8, [x29, #-16]
     58c:	ldrb	w9, [x8, #16]
     590:	cbz	w9, 5dc <ctf_dump_header+0x1cc>
     594:	ldur	x8, [x29, #-16]
     598:	ldrb	w2, [x8, #16]
     59c:	ldur	x8, [x29, #-16]
     5a0:	ldrb	w9, [x8, #16]
     5a4:	adrp	x8, 0 <ctf_dump>
     5a8:	add	x8, x8, #0x0
     5ac:	adrp	x10, 0 <ctf_dump>
     5b0:	add	x10, x10, #0x0
     5b4:	tst	w9, #0x1
     5b8:	csel	x3, x10, x8, ne  // ne = any
     5bc:	sub	x0, x29, #0x20
     5c0:	adrp	x1, 0 <ctf_dump>
     5c4:	add	x1, x1, #0x0
     5c8:	bl	0 <asprintf>
     5cc:	cmp	w0, #0x0
     5d0:	cset	w9, ge  // ge = tcont
     5d4:	tbnz	w9, #0, 5dc <ctf_dump_header+0x1cc>
     5d8:	b	7bc <ctf_dump_header+0x3ac>
     5dc:	ldur	x0, [x29, #-24]
     5e0:	ldur	x1, [x29, #-32]
     5e4:	bl	1178 <ctf_dump_append>
     5e8:	ldur	x0, [x29, #-16]
     5ec:	ldur	x1, [x29, #-24]
     5f0:	ldur	x8, [x29, #-40]
     5f4:	ldr	w3, [x8, #4]
     5f8:	adrp	x2, 0 <ctf_dump>
     5fc:	add	x2, x2, #0x0
     600:	bl	11e8 <ctf_dump_header_strfield>
     604:	cmp	w0, #0x0
     608:	cset	w9, ge  // ge = tcont
     60c:	tbnz	w9, #0, 614 <ctf_dump_header+0x204>
     610:	b	7bc <ctf_dump_header+0x3ac>
     614:	ldur	x0, [x29, #-16]
     618:	ldur	x1, [x29, #-24]
     61c:	ldur	x8, [x29, #-40]
     620:	ldr	w3, [x8, #8]
     624:	adrp	x2, 0 <ctf_dump>
     628:	add	x2, x2, #0x0
     62c:	bl	11e8 <ctf_dump_header_strfield>
     630:	cmp	w0, #0x0
     634:	cset	w9, ge  // ge = tcont
     638:	tbnz	w9, #0, 640 <ctf_dump_header+0x230>
     63c:	b	7bc <ctf_dump_header+0x3ac>
     640:	ldur	x0, [x29, #-16]
     644:	ldur	x1, [x29, #-24]
     648:	ldur	x8, [x29, #-40]
     64c:	ldr	w3, [x8, #12]
     650:	adrp	x2, 0 <ctf_dump>
     654:	add	x2, x2, #0x0
     658:	bl	11e8 <ctf_dump_header_strfield>
     65c:	cmp	w0, #0x0
     660:	cset	w9, ge  // ge = tcont
     664:	tbnz	w9, #0, 66c <ctf_dump_header+0x25c>
     668:	b	7bc <ctf_dump_header+0x3ac>
     66c:	ldur	x0, [x29, #-16]
     670:	ldur	x1, [x29, #-24]
     674:	ldur	x8, [x29, #-40]
     678:	ldr	w3, [x8, #16]
     67c:	ldur	x8, [x29, #-40]
     680:	ldr	w4, [x8, #20]
     684:	adrp	x2, 0 <ctf_dump>
     688:	add	x2, x2, #0x0
     68c:	bl	1290 <ctf_dump_header_sectfield>
     690:	cmp	w0, #0x0
     694:	cset	w9, ge  // ge = tcont
     698:	tbnz	w9, #0, 6a0 <ctf_dump_header+0x290>
     69c:	b	7bc <ctf_dump_header+0x3ac>
     6a0:	ldur	x0, [x29, #-16]
     6a4:	ldur	x1, [x29, #-24]
     6a8:	ldur	x8, [x29, #-40]
     6ac:	ldr	w3, [x8, #20]
     6b0:	ldur	x8, [x29, #-40]
     6b4:	ldr	w4, [x8, #24]
     6b8:	adrp	x2, 0 <ctf_dump>
     6bc:	add	x2, x2, #0x0
     6c0:	bl	1290 <ctf_dump_header_sectfield>
     6c4:	cmp	w0, #0x0
     6c8:	cset	w9, ge  // ge = tcont
     6cc:	tbnz	w9, #0, 6d4 <ctf_dump_header+0x2c4>
     6d0:	b	7bc <ctf_dump_header+0x3ac>
     6d4:	ldur	x0, [x29, #-16]
     6d8:	ldur	x1, [x29, #-24]
     6dc:	ldur	x8, [x29, #-40]
     6e0:	ldr	w3, [x8, #24]
     6e4:	ldur	x8, [x29, #-40]
     6e8:	ldr	w4, [x8, #36]
     6ec:	adrp	x2, 0 <ctf_dump>
     6f0:	add	x2, x2, #0x0
     6f4:	bl	1290 <ctf_dump_header_sectfield>
     6f8:	cmp	w0, #0x0
     6fc:	cset	w9, ge  // ge = tcont
     700:	tbnz	w9, #0, 708 <ctf_dump_header+0x2f8>
     704:	b	7bc <ctf_dump_header+0x3ac>
     708:	ldur	x0, [x29, #-16]
     70c:	ldur	x1, [x29, #-24]
     710:	ldur	x8, [x29, #-40]
     714:	ldr	w3, [x8, #36]
     718:	ldur	x8, [x29, #-40]
     71c:	ldr	w4, [x8, #40]
     720:	adrp	x2, 0 <ctf_dump>
     724:	add	x2, x2, #0x0
     728:	bl	1290 <ctf_dump_header_sectfield>
     72c:	cmp	w0, #0x0
     730:	cset	w9, ge  // ge = tcont
     734:	tbnz	w9, #0, 73c <ctf_dump_header+0x32c>
     738:	b	7bc <ctf_dump_header+0x3ac>
     73c:	ldur	x0, [x29, #-16]
     740:	ldur	x1, [x29, #-24]
     744:	ldur	x8, [x29, #-40]
     748:	ldr	w3, [x8, #40]
     74c:	ldur	x8, [x29, #-40]
     750:	ldr	w4, [x8, #44]
     754:	adrp	x2, 0 <ctf_dump>
     758:	add	x2, x2, #0x0
     75c:	bl	1290 <ctf_dump_header_sectfield>
     760:	cmp	w0, #0x0
     764:	cset	w9, ge  // ge = tcont
     768:	tbnz	w9, #0, 770 <ctf_dump_header+0x360>
     76c:	b	7bc <ctf_dump_header+0x3ac>
     770:	ldur	x0, [x29, #-16]
     774:	ldur	x1, [x29, #-24]
     778:	ldur	x8, [x29, #-40]
     77c:	ldr	w3, [x8, #44]
     780:	ldur	x8, [x29, #-40]
     784:	ldr	w9, [x8, #44]
     788:	ldur	x8, [x29, #-40]
     78c:	ldr	w10, [x8, #48]
     790:	add	w9, w9, w10
     794:	add	w4, w9, #0x1
     798:	adrp	x2, 0 <ctf_dump>
     79c:	add	x2, x2, #0x0
     7a0:	bl	1290 <ctf_dump_header_sectfield>
     7a4:	cmp	w0, #0x0
     7a8:	cset	w9, ge  // ge = tcont
     7ac:	tbnz	w9, #0, 7b4 <ctf_dump_header+0x3a4>
     7b0:	b	7bc <ctf_dump_header+0x3ac>
     7b4:	stur	wzr, [x29, #-4]
     7b8:	b	7d8 <ctf_dump_header+0x3c8>
     7bc:	ldur	x0, [x29, #-16]
     7c0:	str	x0, [sp, #8]
     7c4:	bl	0 <__errno_location>
     7c8:	ldr	w1, [x0]
     7cc:	ldr	x0, [sp, #8]
     7d0:	bl	0 <ctf_set_errno>
     7d4:	stur	w0, [x29, #-4]
     7d8:	ldur	w0, [x29, #-4]
     7dc:	ldp	x29, x30, [sp, #176]
     7e0:	add	sp, sp, #0xc0
     7e4:	ret

00000000000007e8 <ctf_dump_label>:
     7e8:	sub	sp, sp, #0x50
     7ec:	stp	x29, x30, [sp, #64]
     7f0:	add	x29, sp, #0x40
     7f4:	adrp	x8, 0 <ctf_dump>
     7f8:	add	x8, x8, #0x0
     7fc:	add	x9, sp, #0x18
     800:	stur	x0, [x29, #-16]
     804:	stur	x1, [x29, #-24]
     808:	str	x2, [sp, #32]
     80c:	ldr	x10, [sp, #32]
     810:	str	x10, [sp, #8]
     814:	ldur	x2, [x29, #-16]
     818:	mov	x0, x9
     81c:	mov	x1, x8
     820:	bl	0 <asprintf>
     824:	cmp	w0, #0x0
     828:	cset	w11, ge  // ge = tcont
     82c:	tbnz	w11, #0, 854 <ctf_dump_label+0x6c>
     830:	ldr	x8, [sp, #8]
     834:	ldr	x0, [x8, #8]
     838:	str	x0, [sp]
     83c:	bl	0 <__errno_location>
     840:	ldr	w1, [x0]
     844:	ldr	x0, [sp]
     848:	bl	0 <ctf_set_errno>
     84c:	stur	w0, [x29, #-4]
     850:	b	8b0 <ctf_dump_label+0xc8>
     854:	ldr	x8, [sp, #8]
     858:	ldr	x0, [x8, #8]
     85c:	ldur	x8, [x29, #-24]
     860:	ldr	x1, [x8]
     864:	mov	w2, #0x1                   	// #1
     868:	bl	1350 <ctf_dump_format_type>
     86c:	str	x0, [sp, #16]
     870:	cbnz	x0, 888 <ctf_dump_label+0xa0>
     874:	ldr	x0, [sp, #24]
     878:	bl	0 <free>
     87c:	mov	w8, #0xffffffff            	// #-1
     880:	stur	w8, [x29, #-4]
     884:	b	8b0 <ctf_dump_label+0xc8>
     888:	ldr	x0, [sp, #24]
     88c:	ldr	x1, [sp, #16]
     890:	bl	0 <ctf_str_append_noerr>
     894:	str	x0, [sp, #24]
     898:	ldr	x0, [sp, #16]
     89c:	bl	0 <free>
     8a0:	ldr	x0, [sp, #8]
     8a4:	ldr	x1, [sp, #24]
     8a8:	bl	1178 <ctf_dump_append>
     8ac:	stur	wzr, [x29, #-4]
     8b0:	ldur	w0, [x29, #-4]
     8b4:	ldp	x29, x30, [sp, #64]
     8b8:	add	sp, sp, #0x50
     8bc:	ret

00000000000008c0 <ctf_dump_objts>:
     8c0:	sub	sp, sp, #0x70
     8c4:	stp	x29, x30, [sp, #96]
     8c8:	add	x29, sp, #0x60
     8cc:	stur	x0, [x29, #-16]
     8d0:	stur	x1, [x29, #-24]
     8d4:	stur	xzr, [x29, #-32]
     8d8:	ldur	x8, [x29, #-32]
     8dc:	ldur	x9, [x29, #-16]
     8e0:	ldr	x9, [x9, #432]
     8e4:	cmp	x8, x9
     8e8:	b.cs	a54 <ctf_dump_objts+0x194>  // b.hs, b.nlast
     8ec:	ldur	x8, [x29, #-24]
     8f0:	ldr	x0, [x8, #8]
     8f4:	ldur	x1, [x29, #-32]
     8f8:	bl	0 <ctf_lookup_by_symbol>
     8fc:	str	x0, [sp, #32]
     900:	mov	x8, #0xffffffffffffffff    	// #-1
     904:	cmp	x0, x8
     908:	b.ne	94c <ctf_dump_objts+0x8c>  // b.any
     90c:	ldur	x8, [x29, #-24]
     910:	ldr	x0, [x8, #8]
     914:	bl	0 <ctf_errno>
     918:	cmp	w0, #0x3f2
     91c:	str	w0, [sp, #28]
     920:	b.eq	93c <ctf_dump_objts+0x7c>  // b.none
     924:	b	928 <ctf_dump_objts+0x68>
     928:	ldr	w8, [sp, #28]
     92c:	subs	w9, w8, #0x406
     930:	cmp	w9, #0x1
     934:	b.ls	948 <ctf_dump_objts+0x88>  // b.plast
     938:	b	94c <ctf_dump_objts+0x8c>
     93c:	mov	w8, #0xffffffff            	// #-1
     940:	stur	w8, [x29, #-4]
     944:	b	a58 <ctf_dump_objts+0x198>
     948:	b	a44 <ctf_dump_objts+0x184>
     94c:	ldur	x0, [x29, #-16]
     950:	ldur	x1, [x29, #-32]
     954:	bl	0 <ctf_lookup_symbol_name>
     958:	str	x0, [sp, #40]
     95c:	ldr	x8, [sp, #40]
     960:	ldrb	w9, [x8]
     964:	cbnz	w9, 9ac <ctf_dump_objts+0xec>
     968:	ldur	x2, [x29, #-32]
     96c:	sub	x0, x29, #0x28
     970:	adrp	x1, 0 <ctf_dump>
     974:	add	x1, x1, #0x0
     978:	bl	0 <asprintf>
     97c:	cmp	w0, #0x0
     980:	cset	w8, ge  // ge = tcont
     984:	tbnz	w8, #0, 9a8 <ctf_dump_objts+0xe8>
     988:	ldur	x0, [x29, #-16]
     98c:	str	x0, [sp, #16]
     990:	bl	0 <__errno_location>
     994:	ldr	w1, [x0]
     998:	ldr	x0, [sp, #16]
     99c:	bl	0 <ctf_set_errno>
     9a0:	stur	w0, [x29, #-4]
     9a4:	b	a58 <ctf_dump_objts+0x198>
     9a8:	b	9f0 <ctf_dump_objts+0x130>
     9ac:	ldr	x2, [sp, #40]
     9b0:	ldur	x3, [x29, #-32]
     9b4:	sub	x0, x29, #0x28
     9b8:	adrp	x1, 0 <ctf_dump>
     9bc:	add	x1, x1, #0x0
     9c0:	bl	0 <asprintf>
     9c4:	cmp	w0, #0x0
     9c8:	cset	w8, ge  // ge = tcont
     9cc:	tbnz	w8, #0, 9f0 <ctf_dump_objts+0x130>
     9d0:	ldur	x0, [x29, #-16]
     9d4:	str	x0, [sp, #8]
     9d8:	bl	0 <__errno_location>
     9dc:	ldr	w1, [x0]
     9e0:	ldr	x0, [sp, #8]
     9e4:	bl	0 <ctf_set_errno>
     9e8:	stur	w0, [x29, #-4]
     9ec:	b	a58 <ctf_dump_objts+0x198>
     9f0:	ldur	x8, [x29, #-24]
     9f4:	ldr	x0, [x8, #8]
     9f8:	ldr	x1, [sp, #32]
     9fc:	mov	w2, #0x1                   	// #1
     a00:	bl	1350 <ctf_dump_format_type>
     a04:	str	x0, [sp, #48]
     a08:	cbnz	x0, a20 <ctf_dump_objts+0x160>
     a0c:	ldur	x0, [x29, #-40]
     a10:	bl	0 <free>
     a14:	mov	w8, #0xffffffff            	// #-1
     a18:	stur	w8, [x29, #-4]
     a1c:	b	a58 <ctf_dump_objts+0x198>
     a20:	ldur	x0, [x29, #-40]
     a24:	ldr	x1, [sp, #48]
     a28:	bl	0 <ctf_str_append_noerr>
     a2c:	stur	x0, [x29, #-40]
     a30:	ldr	x0, [sp, #48]
     a34:	bl	0 <free>
     a38:	ldur	x0, [x29, #-24]
     a3c:	ldur	x1, [x29, #-40]
     a40:	bl	1178 <ctf_dump_append>
     a44:	ldur	x8, [x29, #-32]
     a48:	add	x8, x8, #0x1
     a4c:	stur	x8, [x29, #-32]
     a50:	b	8d8 <ctf_dump_objts+0x18>
     a54:	stur	wzr, [x29, #-4]
     a58:	ldur	w0, [x29, #-4]
     a5c:	ldp	x29, x30, [sp, #96]
     a60:	add	sp, sp, #0x70
     a64:	ret

0000000000000a68 <ctf_dump_funcs>:
     a68:	sub	sp, sp, #0xa0
     a6c:	stp	x29, x30, [sp, #144]
     a70:	add	x29, sp, #0x90
     a74:	stur	x0, [x29, #-16]
     a78:	stur	x1, [x29, #-24]
     a7c:	stur	xzr, [x29, #-32]
     a80:	ldur	x8, [x29, #-32]
     a84:	ldur	x9, [x29, #-16]
     a88:	ldr	x9, [x9, #432]
     a8c:	cmp	x8, x9
     a90:	b.cs	dc8 <ctf_dump_funcs+0x360>  // b.hs, b.nlast
     a94:	ldur	x8, [x29, #-24]
     a98:	ldr	x0, [x8, #8]
     a9c:	ldur	x1, [x29, #-32]
     aa0:	add	x2, sp, #0x40
     aa4:	bl	0 <ctf_func_info>
     aa8:	mov	w1, w0
     aac:	sxtw	x8, w1
     ab0:	str	x8, [sp, #56]
     ab4:	mov	x9, #0xffffffffffffffff    	// #-1
     ab8:	cmp	x8, x9
     abc:	b.ne	b00 <ctf_dump_funcs+0x98>  // b.any
     ac0:	ldur	x8, [x29, #-24]
     ac4:	ldr	x0, [x8, #8]
     ac8:	bl	0 <ctf_errno>
     acc:	cmp	w0, #0x3f2
     ad0:	str	w0, [sp, #36]
     ad4:	b.eq	af0 <ctf_dump_funcs+0x88>  // b.none
     ad8:	b	adc <ctf_dump_funcs+0x74>
     adc:	ldr	w8, [sp, #36]
     ae0:	subs	w9, w8, #0x404
     ae4:	cmp	w9, #0x2
     ae8:	b.ls	afc <ctf_dump_funcs+0x94>  // b.plast
     aec:	b	b00 <ctf_dump_funcs+0x98>
     af0:	mov	w8, #0xffffffff            	// #-1
     af4:	stur	w8, [x29, #-4]
     af8:	b	dcc <ctf_dump_funcs+0x364>
     afc:	b	db8 <ctf_dump_funcs+0x350>
     b00:	ldr	w8, [sp, #72]
     b04:	mov	w0, w8
     b08:	mov	x1, #0x8                   	// #8
     b0c:	bl	0 <calloc>
     b10:	str	x0, [sp, #40]
     b14:	cbnz	x0, b2c <ctf_dump_funcs+0xc4>
     b18:	ldur	x0, [x29, #-16]
     b1c:	mov	w1, #0xc                   	// #12
     b20:	bl	0 <ctf_set_errno>
     b24:	stur	w0, [x29, #-4]
     b28:	b	dcc <ctf_dump_funcs+0x364>
     b2c:	ldur	x8, [x29, #-24]
     b30:	ldr	x0, [x8, #8]
     b34:	ldr	x1, [sp, #56]
     b38:	bl	0 <ctf_type_aname>
     b3c:	stur	x0, [x29, #-40]
     b40:	cbnz	x0, b54 <ctf_dump_funcs+0xec>
     b44:	adrp	x8, 0 <ctf_dump>
     b48:	add	x8, x8, #0x0
     b4c:	stur	x8, [x29, #-56]
     b50:	b	d5c <ctf_dump_funcs+0x2f4>
     b54:	ldur	x0, [x29, #-40]
     b58:	adrp	x1, 0 <ctf_dump>
     b5c:	add	x1, x1, #0x0
     b60:	bl	0 <ctf_str_append_noerr>
     b64:	stur	x0, [x29, #-40]
     b68:	ldur	x0, [x29, #-16]
     b6c:	ldur	x1, [x29, #-32]
     b70:	bl	0 <ctf_lookup_symbol_name>
     b74:	stur	x0, [x29, #-64]
     b78:	ldur	x8, [x29, #-64]
     b7c:	ldrb	w9, [x8]
     b80:	cbnz	w9, bac <ctf_dump_funcs+0x144>
     b84:	ldur	x2, [x29, #-32]
     b88:	sub	x0, x29, #0x30
     b8c:	adrp	x1, 0 <ctf_dump>
     b90:	add	x1, x1, #0x0
     b94:	bl	0 <asprintf>
     b98:	cmp	w0, #0x0
     b9c:	cset	w8, ge  // ge = tcont
     ba0:	tbnz	w8, #0, ba8 <ctf_dump_funcs+0x140>
     ba4:	b	d2c <ctf_dump_funcs+0x2c4>
     ba8:	b	bd4 <ctf_dump_funcs+0x16c>
     bac:	ldur	x2, [x29, #-64]
     bb0:	ldur	x3, [x29, #-32]
     bb4:	sub	x0, x29, #0x30
     bb8:	adrp	x1, 0 <ctf_dump>
     bbc:	add	x1, x1, #0x0
     bc0:	bl	0 <asprintf>
     bc4:	cmp	w0, #0x0
     bc8:	cset	w8, ge  // ge = tcont
     bcc:	tbnz	w8, #0, bd4 <ctf_dump_funcs+0x16c>
     bd0:	b	d2c <ctf_dump_funcs+0x2c4>
     bd4:	ldur	x0, [x29, #-40]
     bd8:	ldur	x1, [x29, #-48]
     bdc:	bl	0 <ctf_str_append_noerr>
     be0:	stur	x0, [x29, #-40]
     be4:	ldur	x0, [x29, #-40]
     be8:	adrp	x1, 0 <ctf_dump>
     bec:	add	x1, x1, #0x0
     bf0:	bl	0 <ctf_str_append_noerr>
     bf4:	stur	x0, [x29, #-40]
     bf8:	ldur	x0, [x29, #-48]
     bfc:	bl	0 <free>
     c00:	ldur	x8, [x29, #-24]
     c04:	ldr	x0, [x8, #8]
     c08:	ldur	x1, [x29, #-32]
     c0c:	ldr	w2, [sp, #72]
     c10:	ldr	x3, [sp, #40]
     c14:	bl	0 <ctf_func_args>
     c18:	cmp	w0, #0x0
     c1c:	cset	w9, ge  // ge = tcont
     c20:	tbnz	w9, #0, c34 <ctf_dump_funcs+0x1cc>
     c24:	adrp	x8, 0 <ctf_dump>
     c28:	add	x8, x8, #0x0
     c2c:	stur	x8, [x29, #-56]
     c30:	b	d5c <ctf_dump_funcs+0x2f4>
     c34:	str	xzr, [sp, #48]
     c38:	ldr	x8, [sp, #48]
     c3c:	ldr	w9, [sp, #72]
     c40:	mov	w10, w9
     c44:	cmp	x8, x10
     c48:	b.cs	ce0 <ctf_dump_funcs+0x278>  // b.hs, b.nlast
     c4c:	ldur	x8, [x29, #-24]
     c50:	ldr	x0, [x8, #8]
     c54:	ldr	x8, [sp, #40]
     c58:	ldr	x9, [sp, #48]
     c5c:	ldr	x1, [x8, x9, lsl #3]
     c60:	bl	0 <ctf_type_aname>
     c64:	stur	x0, [x29, #-48]
     c68:	cbnz	x0, c7c <ctf_dump_funcs+0x214>
     c6c:	adrp	x8, 0 <ctf_dump>
     c70:	add	x8, x8, #0x0
     c74:	stur	x8, [x29, #-56]
     c78:	b	d5c <ctf_dump_funcs+0x2f4>
     c7c:	ldur	x0, [x29, #-40]
     c80:	ldur	x1, [x29, #-48]
     c84:	bl	0 <ctf_str_append_noerr>
     c88:	stur	x0, [x29, #-40]
     c8c:	ldr	x8, [sp, #48]
     c90:	ldr	w9, [sp, #72]
     c94:	subs	w9, w9, #0x1
     c98:	mov	w10, w9
     c9c:	ubfx	x10, x10, #0, #32
     ca0:	cmp	x8, x10
     ca4:	b.cc	cb4 <ctf_dump_funcs+0x24c>  // b.lo, b.ul, b.last
     ca8:	ldr	w8, [sp, #76]
     cac:	and	w8, w8, #0x1
     cb0:	cbz	w8, cc8 <ctf_dump_funcs+0x260>
     cb4:	ldur	x0, [x29, #-40]
     cb8:	adrp	x1, 0 <ctf_dump>
     cbc:	add	x1, x1, #0x0
     cc0:	bl	0 <ctf_str_append_noerr>
     cc4:	stur	x0, [x29, #-40]
     cc8:	ldur	x0, [x29, #-48]
     ccc:	bl	0 <free>
     cd0:	ldr	x8, [sp, #48]
     cd4:	add	x8, x8, #0x1
     cd8:	str	x8, [sp, #48]
     cdc:	b	c38 <ctf_dump_funcs+0x1d0>
     ce0:	ldr	w8, [sp, #76]
     ce4:	and	w8, w8, #0x1
     ce8:	cbz	w8, d00 <ctf_dump_funcs+0x298>
     cec:	ldur	x0, [x29, #-40]
     cf0:	adrp	x1, 0 <ctf_dump>
     cf4:	add	x1, x1, #0x0
     cf8:	bl	0 <ctf_str_append_noerr>
     cfc:	stur	x0, [x29, #-40]
     d00:	ldur	x0, [x29, #-40]
     d04:	adrp	x1, 0 <ctf_dump>
     d08:	add	x1, x1, #0x0
     d0c:	bl	0 <ctf_str_append_noerr>
     d10:	stur	x0, [x29, #-40]
     d14:	ldr	x0, [sp, #40]
     d18:	bl	0 <free>
     d1c:	ldur	x0, [x29, #-24]
     d20:	ldur	x1, [x29, #-40]
     d24:	bl	1178 <ctf_dump_append>
     d28:	b	db8 <ctf_dump_funcs+0x350>
     d2c:	ldr	x0, [sp, #40]
     d30:	bl	0 <free>
     d34:	ldur	x0, [x29, #-40]
     d38:	bl	0 <free>
     d3c:	ldur	x0, [x29, #-16]
     d40:	str	x0, [sp, #24]
     d44:	bl	0 <__errno_location>
     d48:	ldr	w1, [x0]
     d4c:	ldr	x0, [sp, #24]
     d50:	bl	0 <ctf_set_errno>
     d54:	stur	w0, [x29, #-4]
     d58:	b	dcc <ctf_dump_funcs+0x364>
     d5c:	ldur	x1, [x29, #-56]
     d60:	ldur	x2, [x29, #-32]
     d64:	ldur	x8, [x29, #-24]
     d68:	ldr	x0, [x8, #8]
     d6c:	str	x1, [sp, #16]
     d70:	str	x2, [sp, #8]
     d74:	bl	0 <ctf_errno>
     d78:	bl	0 <ctf_errmsg>
     d7c:	adrp	x8, 0 <ctf_dump>
     d80:	add	x8, x8, #0x0
     d84:	str	x0, [sp]
     d88:	mov	x0, x8
     d8c:	ldr	x1, [sp, #16]
     d90:	ldr	x2, [sp, #8]
     d94:	ldr	x3, [sp]
     d98:	bl	0 <ctf_dprintf>
     d9c:	ldr	x0, [sp, #40]
     da0:	bl	0 <free>
     da4:	ldur	x0, [x29, #-40]
     da8:	bl	0 <free>
     dac:	mov	w9, #0xffffffff            	// #-1
     db0:	stur	w9, [x29, #-4]
     db4:	b	dcc <ctf_dump_funcs+0x364>
     db8:	ldur	x8, [x29, #-32]
     dbc:	add	x8, x8, #0x1
     dc0:	stur	x8, [x29, #-32]
     dc4:	b	a80 <ctf_dump_funcs+0x18>
     dc8:	stur	wzr, [x29, #-4]
     dcc:	ldur	w0, [x29, #-4]
     dd0:	ldp	x29, x30, [sp, #144]
     dd4:	add	sp, sp, #0xa0
     dd8:	ret

0000000000000ddc <ctf_dump_var>:
     ddc:	sub	sp, sp, #0x50
     de0:	stp	x29, x30, [sp, #64]
     de4:	add	x29, sp, #0x40
     de8:	adrp	x8, 0 <ctf_dump>
     dec:	add	x8, x8, #0x0
     df0:	add	x9, sp, #0x18
     df4:	stur	x0, [x29, #-16]
     df8:	stur	x1, [x29, #-24]
     dfc:	str	x2, [sp, #32]
     e00:	ldr	x10, [sp, #32]
     e04:	str	x10, [sp, #8]
     e08:	ldur	x2, [x29, #-16]
     e0c:	mov	x0, x9
     e10:	mov	x1, x8
     e14:	bl	0 <asprintf>
     e18:	cmp	w0, #0x0
     e1c:	cset	w11, ge  // ge = tcont
     e20:	tbnz	w11, #0, e48 <ctf_dump_var+0x6c>
     e24:	ldr	x8, [sp, #8]
     e28:	ldr	x0, [x8, #8]
     e2c:	str	x0, [sp]
     e30:	bl	0 <__errno_location>
     e34:	ldr	w1, [x0]
     e38:	ldr	x0, [sp]
     e3c:	bl	0 <ctf_set_errno>
     e40:	stur	w0, [x29, #-4]
     e44:	b	ea0 <ctf_dump_var+0xc4>
     e48:	ldr	x8, [sp, #8]
     e4c:	ldr	x0, [x8, #8]
     e50:	ldur	x1, [x29, #-24]
     e54:	mov	w2, #0x1                   	// #1
     e58:	bl	1350 <ctf_dump_format_type>
     e5c:	str	x0, [sp, #16]
     e60:	cbnz	x0, e78 <ctf_dump_var+0x9c>
     e64:	ldr	x0, [sp, #24]
     e68:	bl	0 <free>
     e6c:	mov	w8, #0xffffffff            	// #-1
     e70:	stur	w8, [x29, #-4]
     e74:	b	ea0 <ctf_dump_var+0xc4>
     e78:	ldr	x0, [sp, #24]
     e7c:	ldr	x1, [sp, #16]
     e80:	bl	0 <ctf_str_append_noerr>
     e84:	str	x0, [sp, #24]
     e88:	ldr	x0, [sp, #16]
     e8c:	bl	0 <free>
     e90:	ldr	x0, [sp, #8]
     e94:	ldr	x1, [sp, #24]
     e98:	bl	1178 <ctf_dump_append>
     e9c:	stur	wzr, [x29, #-4]
     ea0:	ldur	w0, [x29, #-4]
     ea4:	ldp	x29, x30, [sp, #64]
     ea8:	add	sp, sp, #0x50
     eac:	ret

0000000000000eb0 <ctf_dump_type>:
     eb0:	sub	sp, sp, #0x80
     eb4:	stp	x29, x30, [sp, #112]
     eb8:	add	x29, sp, #0x70
     ebc:	sub	x8, x29, #0x28
     ec0:	add	x9, sp, #0x28
     ec4:	stur	x0, [x29, #-16]
     ec8:	stur	w1, [x29, #-20]
     ecc:	stur	x2, [x29, #-32]
     ed0:	ldur	x10, [x29, #-32]
     ed4:	str	x10, [sp, #56]
     ed8:	str	x8, [sp, #40]
     edc:	ldr	x8, [sp, #56]
     ee0:	ldr	x8, [x8, #8]
     ee4:	str	x8, [x9, #8]
     ee8:	ldr	x8, [sp, #56]
     eec:	ldr	x0, [x8, #8]
     ef0:	ldur	x1, [x29, #-16]
     ef4:	ldur	w2, [x29, #-20]
     ef8:	bl	1350 <ctf_dump_format_type>
     efc:	stur	x0, [x29, #-40]
     f00:	cbnz	x0, f14 <ctf_dump_type+0x64>
     f04:	adrp	x8, 0 <ctf_dump>
     f08:	add	x8, x8, #0x0
     f0c:	stur	x8, [x29, #-48]
     f10:	b	fe0 <ctf_dump_type+0x130>
     f14:	ldur	x0, [x29, #-40]
     f18:	adrp	x1, 0 <ctf_dump>
     f1c:	add	x1, x1, #0x0
     f20:	bl	0 <ctf_str_append_noerr>
     f24:	stur	x0, [x29, #-40]
     f28:	ldr	x8, [sp, #56]
     f2c:	ldr	x0, [x8, #8]
     f30:	ldur	x1, [x29, #-16]
     f34:	adrp	x2, 0 <ctf_dump>
     f38:	add	x2, x2, #0x0
     f3c:	add	x3, sp, #0x28
     f40:	bl	0 <ctf_type_visit>
     f44:	cmp	w0, #0x0
     f48:	cset	w9, ge  // ge = tcont
     f4c:	tbnz	w9, #0, f90 <ctf_dump_type+0xe0>
     f50:	ldur	x8, [x29, #-16]
     f54:	cbz	x8, f6c <ctf_dump_type+0xbc>
     f58:	ldr	x8, [sp, #56]
     f5c:	ldr	x0, [x8, #8]
     f60:	bl	0 <ctf_errno>
     f64:	cmp	w0, #0x41b
     f68:	b.ne	f80 <ctf_dump_type+0xd0>  // b.any
     f6c:	ldr	x0, [sp, #56]
     f70:	ldur	x1, [x29, #-40]
     f74:	bl	1178 <ctf_dump_append>
     f78:	stur	wzr, [x29, #-4]
     f7c:	b	1030 <ctf_dump_type+0x180>
     f80:	adrp	x8, 0 <ctf_dump>
     f84:	add	x8, x8, #0x0
     f88:	stur	x8, [x29, #-48]
     f8c:	b	fe0 <ctf_dump_type+0x130>
     f90:	ldur	x0, [x29, #-40]
     f94:	bl	0 <strlen>
     f98:	str	x0, [sp, #32]
     f9c:	ldur	x8, [x29, #-40]
     fa0:	ldr	x9, [sp, #32]
     fa4:	subs	x9, x9, #0x1
     fa8:	ldrb	w10, [x8, x9]
     fac:	cmp	w10, #0xa
     fb0:	b.ne	fcc <ctf_dump_type+0x11c>  // b.any
     fb4:	ldur	x8, [x29, #-40]
     fb8:	ldr	x9, [sp, #32]
     fbc:	subs	x9, x9, #0x1
     fc0:	add	x8, x8, x9
     fc4:	mov	w10, #0x0                   	// #0
     fc8:	strb	w10, [x8]
     fcc:	ldr	x0, [sp, #56]
     fd0:	ldur	x1, [x29, #-40]
     fd4:	bl	1178 <ctf_dump_append>
     fd8:	stur	wzr, [x29, #-4]
     fdc:	b	1030 <ctf_dump_type+0x180>
     fe0:	ldur	x1, [x29, #-48]
     fe4:	ldur	x2, [x29, #-16]
     fe8:	ldr	x8, [sp, #56]
     fec:	ldr	x0, [x8, #8]
     ff0:	str	x1, [sp, #24]
     ff4:	str	x2, [sp, #16]
     ff8:	bl	0 <ctf_errno>
     ffc:	bl	0 <ctf_errmsg>
    1000:	adrp	x8, 0 <ctf_dump>
    1004:	add	x8, x8, #0x0
    1008:	str	x0, [sp, #8]
    100c:	mov	x0, x8
    1010:	ldr	x1, [sp, #24]
    1014:	ldr	x2, [sp, #16]
    1018:	ldr	x3, [sp, #8]
    101c:	bl	0 <ctf_dprintf>
    1020:	ldur	x0, [x29, #-40]
    1024:	bl	0 <free>
    1028:	mov	w9, #0xffffffff            	// #-1
    102c:	stur	w9, [x29, #-4]
    1030:	ldur	w0, [x29, #-4]
    1034:	ldp	x29, x30, [sp, #112]
    1038:	add	sp, sp, #0x80
    103c:	ret

0000000000001040 <ctf_dump_str>:
    1040:	sub	sp, sp, #0x40
    1044:	stp	x29, x30, [sp, #48]
    1048:	add	x29, sp, #0x30
    104c:	stur	x0, [x29, #-16]
    1050:	str	x1, [sp, #24]
    1054:	ldur	x8, [x29, #-16]
    1058:	ldr	x8, [x8, #336]
    105c:	str	x8, [sp, #16]
    1060:	ldr	x8, [sp, #16]
    1064:	ldur	x9, [x29, #-16]
    1068:	ldr	x9, [x9, #336]
    106c:	ldur	x10, [x29, #-16]
    1070:	ldr	x10, [x10, #344]
    1074:	add	x9, x9, x10
    1078:	cmp	x8, x9
    107c:	b.cs	10fc <ctf_dump_str+0xbc>  // b.hs, b.nlast
    1080:	ldr	x8, [sp, #16]
    1084:	ldur	x9, [x29, #-16]
    1088:	ldr	x9, [x9, #336]
    108c:	subs	x2, x8, x9
    1090:	ldr	x3, [sp, #16]
    1094:	add	x0, sp, #0x8
    1098:	adrp	x1, 0 <ctf_dump>
    109c:	add	x1, x1, #0x0
    10a0:	bl	0 <asprintf>
    10a4:	cmp	w0, #0x0
    10a8:	cset	w10, ge  // ge = tcont
    10ac:	tbnz	w10, #0, 10d0 <ctf_dump_str+0x90>
    10b0:	ldur	x0, [x29, #-16]
    10b4:	str	x0, [sp]
    10b8:	bl	0 <__errno_location>
    10bc:	ldr	w1, [x0]
    10c0:	ldr	x0, [sp]
    10c4:	bl	0 <ctf_set_errno>
    10c8:	stur	w0, [x29, #-4]
    10cc:	b	1100 <ctf_dump_str+0xc0>
    10d0:	ldr	x0, [sp, #24]
    10d4:	ldr	x1, [sp, #8]
    10d8:	bl	1178 <ctf_dump_append>
    10dc:	ldr	x8, [sp, #16]
    10e0:	mov	x0, x8
    10e4:	bl	0 <strlen>
    10e8:	add	x8, x0, #0x1
    10ec:	ldr	x9, [sp, #16]
    10f0:	add	x8, x9, x8
    10f4:	str	x8, [sp, #16]
    10f8:	b	1060 <ctf_dump_str+0x20>
    10fc:	stur	wzr, [x29, #-4]
    1100:	ldur	w0, [x29, #-4]
    1104:	ldp	x29, x30, [sp, #48]
    1108:	add	sp, sp, #0x40
    110c:	ret

0000000000001110 <ctf_dump_free>:
    1110:	sub	sp, sp, #0x30
    1114:	stp	x29, x30, [sp, #32]
    1118:	add	x29, sp, #0x20
    111c:	stur	x0, [x29, #-8]
    1120:	ldur	x8, [x29, #-8]
    1124:	cbnz	x8, 112c <ctf_dump_free+0x1c>
    1128:	b	116c <ctf_dump_free+0x5c>
    112c:	ldur	x8, [x29, #-8]
    1130:	ldr	x8, [x8, #32]
    1134:	str	x8, [sp, #16]
    1138:	ldr	x8, [sp, #16]
    113c:	cbz	x8, 116c <ctf_dump_free+0x5c>
    1140:	ldr	x8, [sp, #16]
    1144:	ldr	x0, [x8, #16]
    1148:	bl	0 <free>
    114c:	ldr	x8, [sp, #16]
    1150:	ldr	x8, [x8, #8]
    1154:	str	x8, [sp, #8]
    1158:	ldr	x0, [sp, #16]
    115c:	bl	0 <free>
    1160:	ldr	x8, [sp, #8]
    1164:	str	x8, [sp, #16]
    1168:	b	1138 <ctf_dump_free+0x28>
    116c:	ldp	x29, x30, [sp, #32]
    1170:	add	sp, sp, #0x30
    1174:	ret

0000000000001178 <ctf_dump_append>:
    1178:	sub	sp, sp, #0x30
    117c:	stp	x29, x30, [sp, #32]
    1180:	add	x29, sp, #0x20
    1184:	mov	x8, #0x18                  	// #24
    1188:	str	x0, [sp, #16]
    118c:	str	x1, [sp, #8]
    1190:	mov	x0, x8
    1194:	bl	0 <malloc>
    1198:	str	x0, [sp]
    119c:	cbnz	x0, 11b8 <ctf_dump_append+0x40>
    11a0:	ldr	x8, [sp, #16]
    11a4:	ldr	x0, [x8, #8]
    11a8:	mov	w1, #0xc                   	// #12
    11ac:	bl	0 <ctf_set_errno>
    11b0:	stur	w0, [x29, #-4]
    11b4:	b	11d8 <ctf_dump_append+0x60>
    11b8:	ldr	x8, [sp, #8]
    11bc:	ldr	x9, [sp]
    11c0:	str	x8, [x9, #16]
    11c4:	ldr	x8, [sp, #16]
    11c8:	add	x0, x8, #0x18
    11cc:	ldr	x1, [sp]
    11d0:	bl	0 <ctf_list_append>
    11d4:	stur	wzr, [x29, #-4]
    11d8:	ldur	w0, [x29, #-4]
    11dc:	ldp	x29, x30, [sp, #32]
    11e0:	add	sp, sp, #0x30
    11e4:	ret

00000000000011e8 <ctf_dump_header_strfield>:
    11e8:	sub	sp, sp, #0x60
    11ec:	stp	x29, x30, [sp, #80]
    11f0:	add	x29, sp, #0x50
    11f4:	stur	x0, [x29, #-16]
    11f8:	stur	x1, [x29, #-24]
    11fc:	stur	x2, [x29, #-32]
    1200:	stur	w3, [x29, #-36]
    1204:	ldur	w8, [x29, #-36]
    1208:	cbz	w8, 125c <ctf_dump_header_strfield+0x74>
    120c:	ldur	x2, [x29, #-32]
    1210:	ldur	x0, [x29, #-16]
    1214:	ldur	w1, [x29, #-36]
    1218:	str	x2, [sp, #24]
    121c:	bl	0 <ctf_strptr>
    1220:	add	x8, sp, #0x20
    1224:	str	x0, [sp, #16]
    1228:	mov	x0, x8
    122c:	adrp	x1, 0 <ctf_dump>
    1230:	add	x1, x1, #0x0
    1234:	ldr	x2, [sp, #24]
    1238:	ldr	x3, [sp, #16]
    123c:	bl	0 <asprintf>
    1240:	cmp	w0, #0x0
    1244:	cset	w9, ge  // ge = tcont
    1248:	tbnz	w9, #0, 1250 <ctf_dump_header_strfield+0x68>
    124c:	b	1264 <ctf_dump_header_strfield+0x7c>
    1250:	ldur	x0, [x29, #-24]
    1254:	ldr	x1, [sp, #32]
    1258:	bl	1178 <ctf_dump_append>
    125c:	stur	wzr, [x29, #-4]
    1260:	b	1280 <ctf_dump_header_strfield+0x98>
    1264:	ldur	x0, [x29, #-16]
    1268:	str	x0, [sp, #8]
    126c:	bl	0 <__errno_location>
    1270:	ldr	w1, [x0]
    1274:	ldr	x0, [sp, #8]
    1278:	bl	0 <ctf_set_errno>
    127c:	stur	w0, [x29, #-4]
    1280:	ldur	w0, [x29, #-4]
    1284:	ldp	x29, x30, [sp, #80]
    1288:	add	sp, sp, #0x60
    128c:	ret

0000000000001290 <ctf_dump_header_sectfield>:
    1290:	sub	sp, sp, #0x50
    1294:	stp	x29, x30, [sp, #64]
    1298:	add	x29, sp, #0x40
    129c:	stur	x0, [x29, #-16]
    12a0:	stur	x1, [x29, #-24]
    12a4:	str	x2, [sp, #32]
    12a8:	str	w3, [sp, #28]
    12ac:	str	w4, [sp, #24]
    12b0:	ldr	w8, [sp, #24]
    12b4:	ldr	w9, [sp, #28]
    12b8:	subs	w8, w8, w9
    12bc:	cbz	w8, 131c <ctf_dump_header_sectfield+0x8c>
    12c0:	ldr	x2, [sp, #32]
    12c4:	ldr	w8, [sp, #28]
    12c8:	mov	w3, w8
    12cc:	ldr	w8, [sp, #24]
    12d0:	subs	w8, w8, #0x1
    12d4:	mov	w9, w8
    12d8:	ubfx	x4, x9, #0, #32
    12dc:	ldr	w8, [sp, #24]
    12e0:	ldr	w10, [sp, #28]
    12e4:	subs	w8, w8, w10
    12e8:	mov	w9, w8
    12ec:	ubfx	x5, x9, #0, #32
    12f0:	add	x0, sp, #0x10
    12f4:	adrp	x1, 0 <ctf_dump>
    12f8:	add	x1, x1, #0x0
    12fc:	bl	0 <asprintf>
    1300:	cmp	w0, #0x0
    1304:	cset	w8, ge  // ge = tcont
    1308:	tbnz	w8, #0, 1310 <ctf_dump_header_sectfield+0x80>
    130c:	b	1324 <ctf_dump_header_sectfield+0x94>
    1310:	ldur	x0, [x29, #-24]
    1314:	ldr	x1, [sp, #16]
    1318:	bl	1178 <ctf_dump_append>
    131c:	stur	wzr, [x29, #-4]
    1320:	b	1340 <ctf_dump_header_sectfield+0xb0>
    1324:	ldur	x0, [x29, #-16]
    1328:	str	x0, [sp, #8]
    132c:	bl	0 <__errno_location>
    1330:	ldr	w1, [x0]
    1334:	ldr	x0, [sp, #8]
    1338:	bl	0 <ctf_set_errno>
    133c:	stur	w0, [x29, #-4]
    1340:	ldur	w0, [x29, #-4]
    1344:	ldp	x29, x30, [sp, #64]
    1348:	add	sp, sp, #0x50
    134c:	ret

0000000000001350 <ctf_dump_format_type>:
    1350:	sub	sp, sp, #0xb0
    1354:	stp	x29, x30, [sp, #160]
    1358:	add	x29, sp, #0xa0
    135c:	mov	x8, xzr
    1360:	stur	x0, [x29, #-16]
    1364:	stur	x1, [x29, #-24]
    1368:	stur	w2, [x29, #-28]
    136c:	stur	x8, [x29, #-48]
    1370:	stur	x8, [x29, #-56]
    1374:	stur	x8, [x29, #-64]
    1378:	ldur	x8, [x29, #-24]
    137c:	stur	x8, [x29, #-40]
    1380:	adrp	x8, 0 <ctf_dump>
    1384:	add	x8, x8, #0x0
    1388:	str	x8, [sp, #72]
    138c:	str	x8, [sp, #64]
    1390:	ldur	x8, [x29, #-40]
    1394:	stur	x8, [x29, #-24]
    1398:	ldur	w9, [x29, #-28]
    139c:	cbnz	w9, 13b8 <ctf_dump_format_type+0x68>
    13a0:	adrp	x8, 0 <ctf_dump>
    13a4:	add	x8, x8, #0x0
    13a8:	str	x8, [sp, #72]
    13ac:	adrp	x8, 0 <ctf_dump>
    13b0:	add	x8, x8, #0x0
    13b4:	str	x8, [sp, #64]
    13b8:	ldur	x0, [x29, #-16]
    13bc:	ldur	x1, [x29, #-24]
    13c0:	bl	0 <ctf_type_aname>
    13c4:	stur	x0, [x29, #-64]
    13c8:	ldur	x8, [x29, #-64]
    13cc:	cbnz	x8, 1410 <ctf_dump_format_type+0xc0>
    13d0:	ldur	x8, [x29, #-24]
    13d4:	cbz	x8, 13e8 <ctf_dump_format_type+0x98>
    13d8:	ldur	x0, [x29, #-16]
    13dc:	bl	0 <ctf_errno>
    13e0:	cmp	w0, #0x41b
    13e4:	b.ne	140c <ctf_dump_format_type+0xbc>  // b.any
    13e8:	ldur	x0, [x29, #-48]
    13ec:	adrp	x1, 0 <ctf_dump>
    13f0:	add	x1, x1, #0x0
    13f4:	bl	0 <ctf_str_append_noerr>
    13f8:	stur	x0, [x29, #-48]
    13fc:	ldur	x0, [x29, #-16]
    1400:	mov	w1, #0x400                 	// #1024
    1404:	bl	0 <ctf_set_errno>
    1408:	b	156c <ctf_dump_format_type+0x21c>
    140c:	b	15b4 <ctf_dump_format_type+0x264>
    1410:	ldur	x0, [x29, #-16]
    1414:	ldur	x1, [x29, #-24]
    1418:	sub	x2, x29, #0x4c
    141c:	bl	15e4 <ctf_is_slice>
    1420:	cbz	w0, 1470 <ctf_dump_format_type+0x120>
    1424:	ldur	x0, [x29, #-16]
    1428:	ldur	x1, [x29, #-24]
    142c:	sub	x2, x29, #0x4c
    1430:	bl	0 <ctf_type_encoding>
    1434:	ldr	x2, [sp, #72]
    1438:	ldur	x3, [x29, #-24]
    143c:	ldur	w4, [x29, #-72]
    1440:	ldur	w5, [x29, #-68]
    1444:	ldr	x6, [sp, #64]
    1448:	sub	x8, x29, #0x38
    144c:	mov	x0, x8
    1450:	adrp	x1, 0 <ctf_dump>
    1454:	add	x1, x1, #0x0
    1458:	bl	0 <asprintf>
    145c:	cmp	w0, #0x0
    1460:	cset	w9, ge  // ge = tcont
    1464:	tbnz	w9, #0, 146c <ctf_dump_format_type+0x11c>
    1468:	b	159c <ctf_dump_format_type+0x24c>
    146c:	b	14f4 <ctf_dump_format_type+0x1a4>
    1470:	ldr	x2, [sp, #72]
    1474:	ldur	x3, [x29, #-24]
    1478:	ldur	x8, [x29, #-64]
    147c:	ldrb	w9, [x8]
    1480:	str	x2, [sp, #56]
    1484:	str	x3, [sp, #48]
    1488:	cbnz	w9, 149c <ctf_dump_format_type+0x14c>
    148c:	adrp	x8, 0 <ctf_dump>
    1490:	add	x8, x8, #0x0
    1494:	str	x8, [sp, #40]
    1498:	b	14a4 <ctf_dump_format_type+0x154>
    149c:	ldur	x8, [x29, #-64]
    14a0:	str	x8, [sp, #40]
    14a4:	ldr	x8, [sp, #40]
    14a8:	ldur	x0, [x29, #-16]
    14ac:	ldur	x1, [x29, #-24]
    14b0:	str	x8, [sp, #32]
    14b4:	bl	0 <ctf_type_size>
    14b8:	ldr	x6, [sp, #64]
    14bc:	sub	x8, x29, #0x38
    14c0:	str	x0, [sp, #24]
    14c4:	mov	x0, x8
    14c8:	adrp	x1, 0 <ctf_dump>
    14cc:	add	x1, x1, #0x0
    14d0:	ldr	x2, [sp, #56]
    14d4:	ldr	x3, [sp, #48]
    14d8:	ldr	x4, [sp, #32]
    14dc:	ldr	x5, [sp, #24]
    14e0:	bl	0 <asprintf>
    14e4:	cmp	w0, #0x0
    14e8:	cset	w9, ge  // ge = tcont
    14ec:	tbnz	w9, #0, 14f4 <ctf_dump_format_type+0x1a4>
    14f0:	b	159c <ctf_dump_format_type+0x24c>
    14f4:	ldur	x0, [x29, #-64]
    14f8:	bl	0 <free>
    14fc:	mov	x8, xzr
    1500:	stur	x8, [x29, #-64]
    1504:	ldur	x0, [x29, #-48]
    1508:	ldur	x1, [x29, #-56]
    150c:	str	x8, [sp, #16]
    1510:	bl	0 <ctf_str_append_noerr>
    1514:	stur	x0, [x29, #-48]
    1518:	ldur	x0, [x29, #-56]
    151c:	bl	0 <free>
    1520:	ldr	x8, [sp, #16]
    1524:	stur	x8, [x29, #-56]
    1528:	ldur	x0, [x29, #-16]
    152c:	ldur	x1, [x29, #-24]
    1530:	bl	0 <ctf_type_reference>
    1534:	stur	x0, [x29, #-40]
    1538:	ldur	x8, [x29, #-40]
    153c:	mov	x9, #0xffffffffffffffff    	// #-1
    1540:	cmp	x8, x9
    1544:	b.eq	155c <ctf_dump_format_type+0x20c>  // b.none
    1548:	ldur	x0, [x29, #-48]
    154c:	adrp	x1, 0 <ctf_dump>
    1550:	add	x1, x1, #0x0
    1554:	bl	0 <ctf_str_append_noerr>
    1558:	stur	x0, [x29, #-48]
    155c:	ldur	x8, [x29, #-40]
    1560:	mov	x9, #0xffffffffffffffff    	// #-1
    1564:	cmp	x8, x9
    1568:	b.ne	1380 <ctf_dump_format_type+0x30>  // b.any
    156c:	ldur	x0, [x29, #-16]
    1570:	bl	0 <ctf_errno>
    1574:	cmp	w0, #0x400
    1578:	b.eq	1590 <ctf_dump_format_type+0x240>  // b.none
    157c:	ldur	x0, [x29, #-48]
    1580:	bl	0 <free>
    1584:	mov	x8, xzr
    1588:	stur	x8, [x29, #-8]
    158c:	b	15d4 <ctf_dump_format_type+0x284>
    1590:	ldur	x8, [x29, #-48]
    1594:	stur	x8, [x29, #-8]
    1598:	b	15d4 <ctf_dump_format_type+0x284>
    159c:	ldur	x0, [x29, #-16]
    15a0:	str	x0, [sp, #8]
    15a4:	bl	0 <__errno_location>
    15a8:	ldr	w1, [x0]
    15ac:	ldr	x0, [sp, #8]
    15b0:	bl	0 <ctf_set_errno>
    15b4:	ldur	x0, [x29, #-64]
    15b8:	bl	0 <free>
    15bc:	ldur	x0, [x29, #-48]
    15c0:	bl	0 <free>
    15c4:	ldur	x0, [x29, #-56]
    15c8:	bl	0 <free>
    15cc:	mov	x8, xzr
    15d0:	stur	x8, [x29, #-8]
    15d4:	ldur	x0, [x29, #-8]
    15d8:	ldp	x29, x30, [sp, #160]
    15dc:	add	sp, sp, #0xb0
    15e0:	ret

00000000000015e4 <ctf_is_slice>:
    15e4:	sub	sp, sp, #0x30
    15e8:	stp	x29, x30, [sp, #32]
    15ec:	add	x29, sp, #0x20
    15f0:	stur	x0, [x29, #-8]
    15f4:	str	x1, [sp, #16]
    15f8:	str	x2, [sp, #8]
    15fc:	ldur	x0, [x29, #-8]
    1600:	ldr	x1, [sp, #16]
    1604:	bl	0 <ctf_type_kind>
    1608:	str	w0, [sp, #4]
    160c:	ldr	w8, [sp, #4]
    1610:	cmp	w8, #0x1
    1614:	b.eq	1638 <ctf_is_slice+0x54>  // b.none
    1618:	ldr	w8, [sp, #4]
    161c:	cmp	w8, #0x8
    1620:	b.eq	1638 <ctf_is_slice+0x54>  // b.none
    1624:	ldr	w8, [sp, #4]
    1628:	mov	w9, #0x0                   	// #0
    162c:	cmp	w8, #0x2
    1630:	str	w9, [sp]
    1634:	b.ne	1674 <ctf_is_slice+0x90>  // b.any
    1638:	ldur	x0, [x29, #-8]
    163c:	ldr	x1, [sp, #16]
    1640:	bl	0 <ctf_type_reference>
    1644:	mov	x8, #0xffffffffffffffff    	// #-1
    1648:	mov	w9, #0x0                   	// #0
    164c:	cmp	x0, x8
    1650:	str	w9, [sp]
    1654:	b.eq	1674 <ctf_is_slice+0x90>  // b.none
    1658:	ldur	x0, [x29, #-8]
    165c:	ldr	x1, [sp, #16]
    1660:	ldr	x2, [sp, #8]
    1664:	bl	0 <ctf_type_encoding>
    1668:	cmp	w0, #0x0
    166c:	cset	w8, eq  // eq = none
    1670:	str	w8, [sp]
    1674:	ldr	w8, [sp]
    1678:	and	w0, w8, #0x1
    167c:	ldp	x29, x30, [sp, #32]
    1680:	add	sp, sp, #0x30
    1684:	ret

0000000000001688 <ctf_dump_member>:
    1688:	sub	sp, sp, #0xb0
    168c:	stp	x29, x30, [sp, #160]
    1690:	add	x29, sp, #0xa0
    1694:	mov	x8, xzr
    1698:	stur	x0, [x29, #-16]
    169c:	stur	x1, [x29, #-24]
    16a0:	stur	x2, [x29, #-32]
    16a4:	stur	w3, [x29, #-36]
    16a8:	stur	x4, [x29, #-48]
    16ac:	ldur	x9, [x29, #-48]
    16b0:	stur	x9, [x29, #-56]
    16b4:	stur	x8, [x29, #-64]
    16b8:	stur	x8, [x29, #-72]
    16bc:	str	xzr, [sp, #64]
    16c0:	ldr	x8, [sp, #64]
    16c4:	ldursw	x9, [x29, #-36]
    16c8:	cmp	x8, x9
    16cc:	b.ge	1704 <ctf_dump_member+0x7c>  // b.tcont
    16d0:	ldur	x8, [x29, #-56]
    16d4:	ldr	x8, [x8]
    16d8:	ldr	x0, [x8]
    16dc:	adrp	x1, 0 <ctf_dump>
    16e0:	add	x1, x1, #0x0
    16e4:	bl	0 <ctf_str_append_noerr>
    16e8:	ldur	x8, [x29, #-56]
    16ec:	ldr	x8, [x8]
    16f0:	str	x0, [x8]
    16f4:	ldr	x8, [sp, #64]
    16f8:	add	x8, x8, #0x1
    16fc:	str	x8, [sp, #64]
    1700:	b	16c0 <ctf_dump_member+0x38>
    1704:	ldur	x8, [x29, #-56]
    1708:	ldr	x0, [x8, #8]
    170c:	ldur	x1, [x29, #-24]
    1710:	bl	0 <ctf_type_aname>
    1714:	stur	x0, [x29, #-64]
    1718:	cbnz	x0, 1798 <ctf_dump_member+0x110>
    171c:	ldur	x8, [x29, #-24]
    1720:	cbz	x8, 1738 <ctf_dump_member+0xb0>
    1724:	ldur	x8, [x29, #-56]
    1728:	ldr	x0, [x8, #8]
    172c:	bl	0 <ctf_errno>
    1730:	cmp	w0, #0x41b
    1734:	b.ne	1794 <ctf_dump_member+0x10c>  // b.any
    1738:	ldur	x2, [x29, #-32]
    173c:	sub	x0, x29, #0x48
    1740:	adrp	x1, 0 <ctf_dump>
    1744:	add	x1, x1, #0x0
    1748:	bl	0 <asprintf>
    174c:	cmp	w0, #0x0
    1750:	cset	w8, ge  // ge = tcont
    1754:	tbnz	w8, #0, 175c <ctf_dump_member+0xd4>
    1758:	b	1948 <ctf_dump_member+0x2c0>
    175c:	ldur	x8, [x29, #-56]
    1760:	ldr	x8, [x8]
    1764:	ldr	x0, [x8]
    1768:	ldur	x1, [x29, #-72]
    176c:	bl	0 <ctf_str_append_noerr>
    1770:	ldur	x8, [x29, #-56]
    1774:	ldr	x8, [x8]
    1778:	str	x0, [x8]
    177c:	ldur	x0, [x29, #-64]
    1780:	bl	0 <free>
    1784:	ldur	x0, [x29, #-72]
    1788:	bl	0 <free>
    178c:	stur	wzr, [x29, #-4]
    1790:	b	1978 <ctf_dump_member+0x2f0>
    1794:	b	1948 <ctf_dump_member+0x2c0>
    1798:	ldur	x2, [x29, #-32]
    179c:	ldur	x3, [x29, #-24]
    17a0:	ldur	x8, [x29, #-56]
    17a4:	ldr	x0, [x8, #8]
    17a8:	ldur	x1, [x29, #-24]
    17ac:	str	x2, [sp, #56]
    17b0:	str	x3, [sp, #48]
    17b4:	bl	0 <ctf_type_kind>
    17b8:	ldur	x5, [x29, #-64]
    17bc:	ldur	x6, [x29, #-16]
    17c0:	ldur	x8, [x29, #-56]
    17c4:	ldr	x8, [x8, #8]
    17c8:	ldur	x1, [x29, #-24]
    17cc:	str	w0, [sp, #44]
    17d0:	mov	x0, x8
    17d4:	str	x5, [sp, #32]
    17d8:	str	x6, [sp, #24]
    17dc:	bl	0 <ctf_type_align>
    17e0:	sub	x8, x29, #0x48
    17e4:	str	x0, [sp, #16]
    17e8:	mov	x0, x8
    17ec:	adrp	x1, 0 <ctf_dump>
    17f0:	add	x1, x1, #0x0
    17f4:	ldr	x2, [sp, #56]
    17f8:	ldr	x3, [sp, #48]
    17fc:	ldr	w4, [sp, #44]
    1800:	ldr	x5, [sp, #32]
    1804:	ldr	x6, [sp, #24]
    1808:	ldr	x7, [sp, #16]
    180c:	bl	0 <asprintf>
    1810:	cmp	w0, #0x0
    1814:	cset	w9, ge  // ge = tcont
    1818:	tbnz	w9, #0, 1820 <ctf_dump_member+0x198>
    181c:	b	1948 <ctf_dump_member+0x2c0>
    1820:	ldur	x8, [x29, #-56]
    1824:	ldr	x8, [x8]
    1828:	ldr	x0, [x8]
    182c:	ldur	x1, [x29, #-72]
    1830:	bl	0 <ctf_str_append_noerr>
    1834:	ldur	x8, [x29, #-56]
    1838:	ldr	x8, [x8]
    183c:	str	x0, [x8]
    1840:	ldur	x0, [x29, #-64]
    1844:	bl	0 <free>
    1848:	ldur	x0, [x29, #-72]
    184c:	bl	0 <free>
    1850:	mov	x8, xzr
    1854:	stur	x8, [x29, #-64]
    1858:	stur	x8, [x29, #-72]
    185c:	ldur	x8, [x29, #-56]
    1860:	ldr	x0, [x8, #8]
    1864:	ldur	x1, [x29, #-24]
    1868:	bl	0 <ctf_type_kind>
    186c:	cmp	w0, #0x1
    1870:	b.eq	18a8 <ctf_dump_member+0x220>  // b.none
    1874:	ldur	x8, [x29, #-56]
    1878:	ldr	x0, [x8, #8]
    187c:	ldur	x1, [x29, #-24]
    1880:	bl	0 <ctf_type_kind>
    1884:	cmp	w0, #0x2
    1888:	b.eq	18a8 <ctf_dump_member+0x220>  // b.none
    188c:	ldur	x8, [x29, #-56]
    1890:	ldr	x0, [x8, #8]
    1894:	ldur	x1, [x29, #-24]
    1898:	add	x2, sp, #0x4c
    189c:	bl	15e4 <ctf_is_slice>
    18a0:	cmp	w0, #0x8
    18a4:	b.ne	191c <ctf_dump_member+0x294>  // b.any
    18a8:	ldur	x8, [x29, #-56]
    18ac:	ldr	x0, [x8, #8]
    18b0:	ldur	x1, [x29, #-24]
    18b4:	add	x2, sp, #0x4c
    18b8:	bl	0 <ctf_type_encoding>
    18bc:	ldr	w2, [sp, #76]
    18c0:	ldr	w3, [sp, #80]
    18c4:	ldr	w4, [sp, #84]
    18c8:	sub	x8, x29, #0x48
    18cc:	mov	x0, x8
    18d0:	adrp	x1, 0 <ctf_dump>
    18d4:	add	x1, x1, #0x0
    18d8:	bl	0 <asprintf>
    18dc:	cmp	w0, #0x0
    18e0:	cset	w9, ge  // ge = tcont
    18e4:	tbnz	w9, #0, 18ec <ctf_dump_member+0x264>
    18e8:	b	1948 <ctf_dump_member+0x2c0>
    18ec:	ldur	x8, [x29, #-56]
    18f0:	ldr	x8, [x8]
    18f4:	ldr	x0, [x8]
    18f8:	ldur	x1, [x29, #-72]
    18fc:	bl	0 <ctf_str_append_noerr>
    1900:	ldur	x8, [x29, #-56]
    1904:	ldr	x8, [x8]
    1908:	str	x0, [x8]
    190c:	ldur	x0, [x29, #-72]
    1910:	bl	0 <free>
    1914:	mov	x8, xzr
    1918:	stur	x8, [x29, #-72]
    191c:	ldur	x8, [x29, #-56]
    1920:	ldr	x8, [x8]
    1924:	ldr	x0, [x8]
    1928:	adrp	x1, 0 <ctf_dump>
    192c:	add	x1, x1, #0x0
    1930:	bl	0 <ctf_str_append_noerr>
    1934:	ldur	x8, [x29, #-56]
    1938:	ldr	x8, [x8]
    193c:	str	x0, [x8]
    1940:	stur	wzr, [x29, #-4]
    1944:	b	1978 <ctf_dump_member+0x2f0>
    1948:	ldur	x0, [x29, #-64]
    194c:	bl	0 <free>
    1950:	ldur	x0, [x29, #-72]
    1954:	bl	0 <free>
    1958:	ldur	x8, [x29, #-56]
    195c:	ldr	x0, [x8, #8]
    1960:	str	x0, [sp, #8]
    1964:	bl	0 <__errno_location>
    1968:	ldr	w1, [x0]
    196c:	ldr	x0, [sp, #8]
    1970:	bl	0 <ctf_set_errno>
    1974:	stur	w0, [x29, #-4]
    1978:	ldur	w0, [x29, #-4]
    197c:	ldp	x29, x30, [sp, #160]
    1980:	add	sp, sp, #0xb0
    1984:	ret

ctf-create.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_create>:
       0:	sub	sp, sp, #0xc0
       4:	stp	x29, x30, [sp, #176]
       8:	add	x29, sp, #0xb0
       c:	mov	x8, xzr
      10:	adrp	x9, 0 <ctf_hash_integer>
      14:	add	x9, x9, #0x0
      18:	adrp	x1, 0 <ctf_hash_eq_integer>
      1c:	add	x1, x1, #0x0
      20:	mov	x2, x8
      24:	adrp	x10, 0 <ctf_hash_string>
      28:	add	x10, x10, #0x0
      2c:	adrp	x11, 0 <ctf_hash_eq_string>
      30:	add	x11, x11, #0x0
      34:	stur	x0, [x29, #-16]
      38:	stur	x8, [x29, #-40]
      3c:	stur	x8, [x29, #-48]
      40:	stur	x8, [x29, #-56]
      44:	stur	x8, [x29, #-64]
      48:	str	x9, [sp, #64]
      4c:	str	x1, [sp, #56]
      50:	str	x2, [sp, #48]
      54:	str	x10, [sp, #40]
      58:	str	x11, [sp, #32]
      5c:	bl	0 <libctf_init_debug>
      60:	ldr	x0, [sp, #64]
      64:	ldr	x1, [sp, #56]
      68:	ldr	x2, [sp, #48]
      6c:	ldr	x3, [sp, #48]
      70:	bl	0 <ctf_dynhash_create>
      74:	stur	x0, [x29, #-24]
      78:	ldur	x8, [x29, #-24]
      7c:	cbnz	x8, 90 <ctf_create+0x90>
      80:	ldur	x0, [x29, #-16]
      84:	mov	w1, #0xb                   	// #11
      88:	bl	0 <ctf_set_open_errno>
      8c:	b	2c4 <ctf_create+0x2c4>
      90:	ldr	x0, [sp, #40]
      94:	ldr	x1, [sp, #32]
      98:	mov	x8, xzr
      9c:	mov	x2, x8
      a0:	mov	x3, x8
      a4:	bl	0 <ctf_dynhash_create>
      a8:	stur	x0, [x29, #-32]
      ac:	ldur	x8, [x29, #-32]
      b0:	cbnz	x8, c4 <ctf_create+0xc4>
      b4:	ldur	x0, [x29, #-16]
      b8:	mov	w1, #0xb                   	// #11
      bc:	bl	0 <ctf_set_open_errno>
      c0:	b	2bc <ctf_create+0x2bc>
      c4:	ldr	x0, [sp, #40]
      c8:	ldr	x1, [sp, #32]
      cc:	mov	x8, xzr
      d0:	mov	x2, x8
      d4:	mov	x3, x8
      d8:	str	x8, [sp, #24]
      dc:	bl	0 <ctf_dynhash_create>
      e0:	stur	x0, [x29, #-40]
      e4:	ldr	x0, [sp, #40]
      e8:	ldr	x1, [sp, #32]
      ec:	ldr	x2, [sp, #24]
      f0:	ldr	x3, [sp, #24]
      f4:	bl	0 <ctf_dynhash_create>
      f8:	stur	x0, [x29, #-48]
      fc:	ldr	x0, [sp, #40]
     100:	ldr	x1, [sp, #32]
     104:	ldr	x2, [sp, #24]
     108:	ldr	x3, [sp, #24]
     10c:	bl	0 <ctf_dynhash_create>
     110:	stur	x0, [x29, #-56]
     114:	ldr	x0, [sp, #40]
     118:	ldr	x1, [sp, #32]
     11c:	ldr	x2, [sp, #24]
     120:	ldr	x3, [sp, #24]
     124:	bl	0 <ctf_dynhash_create>
     128:	stur	x0, [x29, #-64]
     12c:	ldur	x8, [x29, #-40]
     130:	cbz	x8, 14c <ctf_create+0x14c>
     134:	ldur	x8, [x29, #-48]
     138:	cbz	x8, 14c <ctf_create+0x14c>
     13c:	ldur	x8, [x29, #-56]
     140:	cbz	x8, 14c <ctf_create+0x14c>
     144:	ldur	x8, [x29, #-64]
     148:	cbnz	x8, 15c <ctf_create+0x15c>
     14c:	ldur	x0, [x29, #-16]
     150:	mov	w1, #0xb                   	// #11
     154:	bl	0 <ctf_set_open_errno>
     158:	b	294 <ctf_create+0x294>
     15c:	add	x8, sp, #0x50
     160:	adrp	x9, 0 <_CTF_SECTION>
     164:	add	x9, x9, #0x0
     168:	str	x9, [sp, #80]
     16c:	adrp	x9, 0 <ctf_create>
     170:	add	x9, x9, #0x0
     174:	str	x9, [x8, #8]
     178:	mov	x9, #0x34                  	// #52
     17c:	str	x9, [sp, #96]
     180:	mov	x9, #0x1                   	// #1
     184:	str	x9, [sp, #104]
     188:	ldur	x5, [x29, #-16]
     18c:	mov	x0, x8
     190:	mov	x8, xzr
     194:	mov	x1, x8
     198:	str	x1, [sp, #16]
     19c:	ldr	x2, [sp, #16]
     1a0:	mov	x3, x8
     1a4:	mov	w4, #0x1                   	// #1
     1a8:	bl	0 <ctf_bufopen_internal>
     1ac:	str	x0, [sp, #72]
     1b0:	cbnz	x0, 1b8 <ctf_create+0x1b8>
     1b4:	b	294 <ctf_create+0x294>
     1b8:	ldur	x8, [x29, #-40]
     1bc:	ldr	x9, [sp, #72]
     1c0:	str	x8, [x9, #160]
     1c4:	ldur	x8, [x29, #-48]
     1c8:	ldr	x9, [sp, #72]
     1cc:	str	x8, [x9, #176]
     1d0:	ldur	x8, [x29, #-56]
     1d4:	ldr	x9, [sp, #72]
     1d8:	str	x8, [x9, #192]
     1dc:	ldur	x8, [x29, #-64]
     1e0:	ldr	x9, [sp, #72]
     1e4:	str	x8, [x9, #208]
     1e8:	ldur	x8, [x29, #-24]
     1ec:	ldr	x9, [sp, #72]
     1f0:	str	x8, [x9, #568]
     1f4:	ldur	x8, [x29, #-32]
     1f8:	ldr	x9, [sp, #72]
     1fc:	str	x8, [x9, #592]
     200:	ldr	x8, [sp, #72]
     204:	str	xzr, [x8, #616]
     208:	ldr	x8, [sp, #72]
     20c:	mov	x9, #0x1                   	// #1
     210:	str	x9, [x8, #624]
     214:	ldr	x8, [sp, #72]
     218:	str	xzr, [x8, #632]
     21c:	ldr	x0, [sp, #72]
     220:	bl	0 <ctf_set_ctl_hashes>
     224:	ldr	x0, [sp, #72]
     228:	mov	w1, #0x2                   	// #2
     22c:	bl	0 <ctf_setmodel>
     230:	ldr	x8, [sp, #72]
     234:	mov	x0, x8
     238:	bl	2dc <ctf_grow_ptrtab>
     23c:	cmp	w0, #0x0
     240:	cset	w10, ge  // ge = tcont
     244:	tbnz	w10, #0, 288 <ctf_create+0x288>
     248:	ldur	x0, [x29, #-16]
     24c:	ldr	x8, [sp, #72]
     250:	str	x0, [sp, #8]
     254:	mov	x0, x8
     258:	bl	0 <ctf_errno>
     25c:	ldr	x8, [sp, #8]
     260:	str	w0, [sp, #4]
     264:	mov	x0, x8
     268:	ldr	w1, [sp, #4]
     26c:	bl	0 <ctf_set_open_errno>
     270:	ldr	x8, [sp, #72]
     274:	mov	x0, x8
     278:	bl	0 <ctf_file_close>
     27c:	mov	x8, xzr
     280:	stur	x8, [x29, #-8]
     284:	b	2cc <ctf_create+0x2cc>
     288:	ldr	x8, [sp, #72]
     28c:	stur	x8, [x29, #-8]
     290:	b	2cc <ctf_create+0x2cc>
     294:	ldur	x0, [x29, #-40]
     298:	bl	0 <ctf_dynhash_destroy>
     29c:	ldur	x0, [x29, #-48]
     2a0:	bl	0 <ctf_dynhash_destroy>
     2a4:	ldur	x0, [x29, #-56]
     2a8:	bl	0 <ctf_dynhash_destroy>
     2ac:	ldur	x0, [x29, #-64]
     2b0:	bl	0 <ctf_dynhash_destroy>
     2b4:	ldur	x0, [x29, #-32]
     2b8:	bl	0 <ctf_dynhash_destroy>
     2bc:	ldur	x0, [x29, #-24]
     2c0:	bl	0 <ctf_dynhash_destroy>
     2c4:	mov	x8, xzr
     2c8:	stur	x8, [x29, #-8]
     2cc:	ldur	x0, [x29, #-8]
     2d0:	ldp	x29, x30, [sp, #176]
     2d4:	add	sp, sp, #0xc0
     2d8:	ret

00000000000002dc <ctf_grow_ptrtab>:
     2dc:	sub	sp, sp, #0x30
     2e0:	stp	x29, x30, [sp, #32]
     2e4:	add	x29, sp, #0x20
     2e8:	str	x0, [sp, #16]
     2ec:	ldr	x8, [sp, #16]
     2f0:	ldr	x8, [x8, #456]
     2f4:	str	x8, [sp, #8]
     2f8:	ldr	x8, [sp, #16]
     2fc:	ldr	x8, [x8, #448]
     300:	cbnz	x8, 310 <ctf_grow_ptrtab+0x34>
     304:	mov	x8, #0x400                 	// #1024
     308:	str	x8, [sp, #8]
     30c:	b	348 <ctf_grow_ptrtab+0x6c>
     310:	ldr	x8, [sp, #16]
     314:	ldr	x8, [x8, #480]
     318:	add	x8, x8, #0x2
     31c:	ldr	x9, [sp, #16]
     320:	ldr	x9, [x9, #456]
     324:	cmp	x8, x9
     328:	b.ls	348 <ctf_grow_ptrtab+0x6c>  // b.plast
     32c:	ldr	x8, [sp, #16]
     330:	ldr	x8, [x8, #456]
     334:	ucvtf	d0, x8
     338:	fmov	d1, #1.250000000000000000e+00
     33c:	fmul	d0, d0, d1
     340:	fcvtzu	x8, d0
     344:	str	x8, [sp, #8]
     348:	ldr	x8, [sp, #8]
     34c:	ldr	x9, [sp, #16]
     350:	ldr	x9, [x9, #456]
     354:	cmp	x8, x9
     358:	b.eq	3e8 <ctf_grow_ptrtab+0x10c>  // b.none
     35c:	ldr	x8, [sp, #16]
     360:	ldr	x0, [x8, #448]
     364:	ldr	x8, [sp, #8]
     368:	mov	x9, #0x4                   	// #4
     36c:	mul	x1, x8, x9
     370:	bl	0 <realloc>
     374:	str	x0, [sp]
     378:	cbnz	x0, 390 <ctf_grow_ptrtab+0xb4>
     37c:	ldr	x0, [sp, #16]
     380:	mov	w1, #0xc                   	// #12
     384:	bl	0 <ctf_set_errno>
     388:	stur	w0, [x29, #-4]
     38c:	b	3ec <ctf_grow_ptrtab+0x110>
     390:	ldr	x8, [sp]
     394:	ldr	x9, [sp, #16]
     398:	str	x8, [x9, #448]
     39c:	ldr	x8, [sp, #16]
     3a0:	ldr	x8, [x8, #448]
     3a4:	ldr	x9, [sp, #16]
     3a8:	ldr	x9, [x9, #456]
     3ac:	mov	x10, #0x4                   	// #4
     3b0:	mul	x9, x10, x9
     3b4:	add	x0, x8, x9
     3b8:	ldr	x8, [sp, #8]
     3bc:	ldr	x9, [sp, #16]
     3c0:	ldr	x9, [x9, #456]
     3c4:	subs	x8, x8, x9
     3c8:	mov	x9, #0x4                   	// #4
     3cc:	mul	x2, x8, x9
     3d0:	mov	w11, wzr
     3d4:	mov	w1, w11
     3d8:	bl	0 <memset>
     3dc:	ldr	x8, [sp, #8]
     3e0:	ldr	x9, [sp, #16]
     3e4:	str	x8, [x9, #456]
     3e8:	stur	wzr, [x29, #-4]
     3ec:	ldur	w0, [x29, #-4]
     3f0:	ldp	x29, x30, [sp, #32]
     3f4:	add	sp, sp, #0x30
     3f8:	ret

00000000000003fc <ctf_update>:
     3fc:	sub	sp, sp, #0x20
     400:	stp	x29, x30, [sp, #16]
     404:	add	x29, sp, #0x10
     408:	str	x0, [sp]
     40c:	ldr	x8, [sp]
     410:	ldr	w9, [x8, #552]
     414:	and	w9, w9, #0x2
     418:	cbnz	w9, 430 <ctf_update+0x34>
     41c:	ldr	x0, [sp]
     420:	mov	w1, #0x40d                 	// #1037
     424:	bl	0 <ctf_set_errno>
     428:	stur	w0, [x29, #-4]
     42c:	b	444 <ctf_update+0x48>
     430:	ldr	x8, [sp]
     434:	ldr	x8, [x8, #480]
     438:	ldr	x9, [sp]
     43c:	str	x8, [x9, #616]
     440:	stur	wzr, [x29, #-4]
     444:	ldur	w0, [x29, #-4]
     448:	ldp	x29, x30, [sp, #16]
     44c:	add	sp, sp, #0x20
     450:	ret

0000000000000454 <ctf_serialize>:
     454:	stp	x29, x30, [sp, #-32]!
     458:	str	x28, [sp, #16]
     45c:	mov	x29, sp
     460:	sub	sp, sp, #0x480
     464:	adrp	x8, 0 <ctf_create>
     468:	add	x8, x8, #0x0
     46c:	adrp	x9, 0 <ctf_create>
     470:	add	x9, x9, #0x0
     474:	stur	x0, [x29, #-16]
     478:	ldur	x10, [x29, #-16]
     47c:	ldr	w11, [x10, #552]
     480:	and	w11, w11, #0x2
     484:	str	x8, [sp, #104]
     488:	str	x9, [sp, #96]
     48c:	cbnz	w11, 4a4 <ctf_serialize+0x50>
     490:	ldur	x0, [x29, #-16]
     494:	mov	w1, #0x40d                 	// #1037
     498:	bl	0 <ctf_set_errno>
     49c:	stur	w0, [x29, #-4]
     4a0:	b	107c <ctf_serialize+0xc28>
     4a4:	ldur	x8, [x29, #-16]
     4a8:	ldr	w9, [x8, #552]
     4ac:	and	w9, w9, #0x4
     4b0:	cbnz	w9, 4bc <ctf_serialize+0x68>
     4b4:	stur	wzr, [x29, #-4]
     4b8:	b	107c <ctf_serialize+0xc28>
     4bc:	add	x8, sp, #0x15c
     4c0:	mov	x0, x8
     4c4:	mov	w9, wzr
     4c8:	mov	w1, w9
     4cc:	mov	x2, #0x34                  	// #52
     4d0:	str	x8, [sp, #88]
     4d4:	bl	0 <memset>
     4d8:	mov	w9, #0xdff2                	// #57330
     4dc:	strh	w9, [sp, #348]
     4e0:	mov	w9, #0x4                   	// #4
     4e4:	ldr	x8, [sp, #88]
     4e8:	strb	w9, [x8, #2]
     4ec:	str	xzr, [sp, #256]
     4f0:	ldur	x10, [x29, #-16]
     4f4:	ldr	x10, [x10, #584]
     4f8:	str	x10, [sp, #328]
     4fc:	ldr	x8, [sp, #328]
     500:	cbz	x8, 680 <ctf_serialize+0x22c>
     504:	ldur	x8, [x29, #-16]
     508:	ldr	x8, [x8]
     50c:	ldr	x8, [x8]
     510:	ldr	x9, [sp, #328]
     514:	ldr	w0, [x9, #28]
     518:	blr	x8
     51c:	str	w0, [sp, #224]
     520:	ldur	x8, [x29, #-16]
     524:	ldr	x8, [x8]
     528:	ldr	x8, [x8, #16]
     52c:	ldr	x9, [sp, #328]
     530:	ldr	w0, [x9, #28]
     534:	blr	x8
     538:	str	w0, [sp, #220]
     53c:	ldr	x8, [sp, #328]
     540:	ldr	w10, [x8, #32]
     544:	mov	w11, #0xffffffff            	// #-1
     548:	cmp	w10, w11
     54c:	b.eq	560 <ctf_serialize+0x10c>  // b.none
     550:	ldr	x8, [sp, #256]
     554:	add	x8, x8, #0xc
     558:	str	x8, [sp, #256]
     55c:	b	56c <ctf_serialize+0x118>
     560:	ldr	x8, [sp, #256]
     564:	add	x8, x8, #0x14
     568:	str	x8, [sp, #256]
     56c:	ldr	w8, [sp, #224]
     570:	subs	w8, w8, #0x1
     574:	mov	w9, w8
     578:	ubfx	x9, x9, #0, #32
     57c:	cmp	x9, #0xd
     580:	str	x9, [sp, #80]
     584:	b.hi	670 <ctf_serialize+0x21c>  // b.pmore
     588:	adrp	x8, 0 <ctf_create>
     58c:	add	x8, x8, #0x0
     590:	ldr	x11, [sp, #80]
     594:	ldrsw	x10, [x8, x11, lsl #2]
     598:	add	x9, x8, x10
     59c:	br	x9
     5a0:	ldr	x8, [sp, #256]
     5a4:	add	x8, x8, #0x4
     5a8:	str	x8, [sp, #256]
     5ac:	b	670 <ctf_serialize+0x21c>
     5b0:	ldr	x8, [sp, #256]
     5b4:	add	x8, x8, #0xc
     5b8:	str	x8, [sp, #256]
     5bc:	b	670 <ctf_serialize+0x21c>
     5c0:	ldr	x8, [sp, #256]
     5c4:	add	x8, x8, #0x8
     5c8:	str	x8, [sp, #256]
     5cc:	b	670 <ctf_serialize+0x21c>
     5d0:	ldr	w8, [sp, #220]
     5d4:	ldr	w9, [sp, #220]
     5d8:	and	w9, w9, #0x1
     5dc:	add	w8, w8, w9
     5e0:	mov	w10, w8
     5e4:	ubfx	x10, x10, #0, #32
     5e8:	mov	x11, #0x4                   	// #4
     5ec:	mul	x10, x11, x10
     5f0:	ldr	x11, [sp, #256]
     5f4:	add	x10, x11, x10
     5f8:	str	x10, [sp, #256]
     5fc:	b	670 <ctf_serialize+0x21c>
     600:	ldr	x8, [sp, #328]
     604:	ldr	w9, [x8, #32]
     608:	mov	w10, #0x20000000            	// #536870912
     60c:	cmp	w9, w10
     610:	b.cs	634 <ctf_serialize+0x1e0>  // b.hs, b.nlast
     614:	ldr	w8, [sp, #220]
     618:	mov	w9, w8
     61c:	mov	x10, #0xc                   	// #12
     620:	mul	x9, x10, x9
     624:	ldr	x10, [sp, #256]
     628:	add	x9, x10, x9
     62c:	str	x9, [sp, #256]
     630:	b	650 <ctf_serialize+0x1fc>
     634:	ldr	w8, [sp, #220]
     638:	mov	w9, w8
     63c:	mov	x10, #0x10                  	// #16
     640:	mul	x9, x10, x9
     644:	ldr	x10, [sp, #256]
     648:	add	x9, x10, x9
     64c:	str	x9, [sp, #256]
     650:	b	670 <ctf_serialize+0x21c>
     654:	ldr	w8, [sp, #220]
     658:	mov	w9, w8
     65c:	mov	x10, #0x8                   	// #8
     660:	mul	x9, x10, x9
     664:	ldr	x10, [sp, #256]
     668:	add	x9, x10, x9
     66c:	str	x9, [sp, #256]
     670:	ldr	x8, [sp, #328]
     674:	ldr	x8, [x8, #8]
     678:	str	x8, [sp, #328]
     67c:	b	4fc <ctf_serialize+0xa8>
     680:	str	xzr, [sp, #248]
     684:	ldur	x8, [x29, #-16]
     688:	ldr	x8, [x8, #608]
     68c:	str	x8, [sp, #320]
     690:	ldr	x8, [sp, #320]
     694:	cbz	x8, 6b4 <ctf_serialize+0x260>
     698:	ldr	x8, [sp, #320]
     69c:	ldr	x8, [x8, #8]
     6a0:	str	x8, [sp, #320]
     6a4:	ldr	x8, [sp, #248]
     6a8:	add	x8, x8, #0x1
     6ac:	str	x8, [sp, #248]
     6b0:	b	690 <ctf_serialize+0x23c>
     6b4:	ldr	w8, [sp, #384]
     6b8:	mov	w9, w8
     6bc:	ldr	x10, [sp, #248]
     6c0:	mov	x11, #0x8                   	// #8
     6c4:	mul	x10, x10, x11
     6c8:	add	x9, x9, x10
     6cc:	str	w9, [sp, #388]
     6d0:	ldr	w8, [sp, #388]
     6d4:	mov	w10, w8
     6d8:	ldr	x11, [sp, #256]
     6dc:	add	x10, x10, x11
     6e0:	str	w10, [sp, #392]
     6e4:	str	wzr, [sp, #396]
     6e8:	ldr	w8, [sp, #392]
     6ec:	mov	w11, w8
     6f0:	add	x11, x11, #0x34
     6f4:	ldr	w8, [sp, #396]
     6f8:	mov	w12, w8
     6fc:	add	x11, x11, x12
     700:	str	x11, [sp, #264]
     704:	ldr	x0, [sp, #264]
     708:	bl	0 <malloc>
     70c:	str	x0, [sp, #240]
     710:	cbnz	x0, 728 <ctf_serialize+0x2d4>
     714:	ldur	x0, [x29, #-16]
     718:	mov	w1, #0xb                   	// #11
     71c:	bl	0 <ctf_set_errno>
     720:	stur	w0, [x29, #-4]
     724:	b	107c <ctf_serialize+0xc28>
     728:	ldr	x0, [sp, #240]
     72c:	add	x1, sp, #0x15c
     730:	mov	x2, #0x34                  	// #52
     734:	bl	0 <memcpy>
     738:	ldr	x8, [sp, #240]
     73c:	add	x8, x8, #0x34
     740:	ldr	w9, [sp, #384]
     744:	mov	w10, w9
     748:	add	x8, x8, x10
     74c:	str	x8, [sp, #280]
     750:	ldr	x8, [sp, #240]
     754:	str	x8, [sp, #336]
     758:	ldur	x8, [x29, #-16]
     75c:	ldr	w9, [x8, #552]
     760:	and	w9, w9, #0x1
     764:	cbz	w9, 78c <ctf_serialize+0x338>
     768:	ldur	x8, [x29, #-16]
     76c:	ldr	x8, [x8, #528]
     770:	cbz	x8, 78c <ctf_serialize+0x338>
     774:	ldur	x0, [x29, #-16]
     778:	ldur	x8, [x29, #-16]
     77c:	ldr	x1, [x8, #528]
     780:	ldr	x8, [sp, #336]
     784:	add	x2, x8, #0x8
     788:	bl	0 <ctf_str_add_ref>
     78c:	ldur	x8, [x29, #-16]
     790:	ldr	x8, [x8, #496]
     794:	cbz	x8, 7b0 <ctf_serialize+0x35c>
     798:	ldur	x0, [x29, #-16]
     79c:	ldur	x8, [x29, #-16]
     7a0:	ldr	x1, [x8, #496]
     7a4:	ldr	x8, [sp, #336]
     7a8:	add	x2, x8, #0xc
     7ac:	bl	0 <ctf_str_add_ref>
     7b0:	ldr	x8, [sp, #280]
     7b4:	str	x8, [sp, #312]
     7b8:	str	xzr, [sp, #272]
     7bc:	ldur	x8, [x29, #-16]
     7c0:	ldr	x8, [x8, #608]
     7c4:	str	x8, [sp, #320]
     7c8:	ldr	x8, [sp, #320]
     7cc:	cbz	x8, 828 <ctf_serialize+0x3d4>
     7d0:	ldr	x8, [sp, #312]
     7d4:	ldr	x9, [sp, #272]
     7d8:	mov	x10, #0x8                   	// #8
     7dc:	mul	x9, x10, x9
     7e0:	add	x8, x8, x9
     7e4:	str	x8, [sp, #208]
     7e8:	ldur	x0, [x29, #-16]
     7ec:	ldr	x8, [sp, #320]
     7f0:	ldr	x1, [x8, #16]
     7f4:	ldr	x2, [sp, #208]
     7f8:	bl	0 <ctf_str_add_ref>
     7fc:	ldr	x8, [sp, #320]
     800:	ldr	x8, [x8, #24]
     804:	ldr	x9, [sp, #208]
     808:	str	w8, [x9, #4]
     80c:	ldr	x8, [sp, #320]
     810:	ldr	x8, [x8, #8]
     814:	str	x8, [sp, #320]
     818:	ldr	x8, [sp, #272]
     81c:	add	x8, x8, #0x1
     820:	str	x8, [sp, #272]
     824:	b	7c8 <ctf_serialize+0x374>
     828:	ldr	x8, [sp, #272]
     82c:	ldr	x9, [sp, #248]
     830:	cmp	x8, x9
     834:	b.ne	83c <ctf_serialize+0x3e8>  // b.any
     838:	b	854 <ctf_serialize+0x400>
     83c:	adrp	x0, 0 <ctf_create>
     840:	add	x0, x0, #0x0
     844:	ldr	x1, [sp, #104]
     848:	mov	w2, #0x179                 	// #377
     84c:	ldr	x3, [sp, #96]
     850:	bl	0 <__assert_fail>
     854:	ldr	x8, [sp, #248]
     858:	mov	x9, #0x8                   	// #8
     85c:	mul	x8, x9, x8
     860:	ldr	x9, [sp, #280]
     864:	add	x8, x9, x8
     868:	str	x8, [sp, #280]
     86c:	ldr	x8, [sp, #280]
     870:	ldr	x9, [sp, #240]
     874:	add	x9, x9, #0x34
     878:	ldr	w10, [sp, #388]
     87c:	mov	w11, w10
     880:	add	x9, x9, x11
     884:	cmp	x8, x9
     888:	b.ne	890 <ctf_serialize+0x43c>  // b.any
     88c:	b	8a8 <ctf_serialize+0x454>
     890:	adrp	x0, 0 <ctf_create>
     894:	add	x0, x0, #0x0
     898:	ldr	x1, [sp, #104]
     89c:	mov	w2, #0x17d                 	// #381
     8a0:	ldr	x3, [sp, #96]
     8a4:	bl	0 <__assert_fail>
     8a8:	ldur	x8, [x29, #-16]
     8ac:	ldr	x8, [x8, #584]
     8b0:	str	x8, [sp, #328]
     8b4:	ldr	x8, [sp, #328]
     8b8:	cbz	x8, b74 <ctf_serialize+0x720>
     8bc:	ldur	x8, [x29, #-16]
     8c0:	ldr	x8, [x8]
     8c4:	ldr	x8, [x8]
     8c8:	ldr	x9, [sp, #328]
     8cc:	ldr	w0, [x9, #28]
     8d0:	blr	x8
     8d4:	str	w0, [sp, #204]
     8d8:	ldur	x8, [x29, #-16]
     8dc:	ldr	x8, [x8]
     8e0:	ldr	x8, [x8, #16]
     8e4:	ldr	x9, [sp, #328]
     8e8:	ldr	w0, [x9, #28]
     8ec:	blr	x8
     8f0:	str	w0, [sp, #200]
     8f4:	ldr	x8, [sp, #328]
     8f8:	ldr	w10, [x8, #32]
     8fc:	mov	w11, #0xffffffff            	// #-1
     900:	cmp	w10, w11
     904:	b.eq	914 <ctf_serialize+0x4c0>  // b.none
     908:	mov	x8, #0xc                   	// #12
     90c:	str	x8, [sp, #176]
     910:	b	91c <ctf_serialize+0x4c8>
     914:	mov	x8, #0x14                  	// #20
     918:	str	x8, [sp, #176]
     91c:	ldr	x0, [sp, #280]
     920:	ldr	x8, [sp, #328]
     924:	add	x1, x8, #0x18
     928:	ldr	x2, [sp, #176]
     92c:	bl	0 <memcpy>
     930:	ldr	x8, [sp, #280]
     934:	str	x8, [sp, #168]
     938:	ldr	x8, [sp, #168]
     93c:	ldr	w9, [x8]
     940:	cbz	w9, 96c <ctf_serialize+0x518>
     944:	ldur	x0, [x29, #-16]
     948:	ldr	x8, [sp, #168]
     94c:	ldr	w1, [x8]
     950:	bl	0 <ctf_strraw>
     954:	str	x0, [sp, #160]
     958:	cbz	x0, 96c <ctf_serialize+0x518>
     95c:	ldur	x0, [x29, #-16]
     960:	ldr	x1, [sp, #160]
     964:	ldr	x2, [sp, #168]
     968:	bl	0 <ctf_str_add_ref>
     96c:	ldr	x8, [sp, #176]
     970:	ldr	x9, [sp, #280]
     974:	add	x8, x9, x8
     978:	str	x8, [sp, #280]
     97c:	ldr	w10, [sp, #204]
     980:	subs	w10, w10, #0x1
     984:	mov	w8, w10
     988:	ubfx	x8, x8, #0, #32
     98c:	cmp	x8, #0xd
     990:	str	x8, [sp, #72]
     994:	b.hi	b64 <ctf_serialize+0x710>  // b.pmore
     998:	adrp	x8, 0 <ctf_create>
     99c:	add	x8, x8, #0x0
     9a0:	ldr	x11, [sp, #72]
     9a4:	ldrsw	x10, [x8, x11, lsl #2]
     9a8:	add	x9, x8, x10
     9ac:	br	x9
     9b0:	ldr	w8, [sp, #204]
     9b4:	cmp	w8, #0x1
     9b8:	b.ne	9e8 <ctf_serialize+0x594>  // b.any
     9bc:	ldr	x8, [sp, #328]
     9c0:	ldr	w9, [x8, #48]
     9c4:	ldr	x8, [sp, #328]
     9c8:	ldr	w10, [x8, #52]
     9cc:	lsl	w10, w10, #16
     9d0:	orr	w9, w10, w9, lsl #24
     9d4:	ldr	x8, [sp, #328]
     9d8:	ldr	w10, [x8, #56]
     9dc:	orr	w9, w9, w10
     9e0:	str	w9, [sp, #184]
     9e4:	b	a10 <ctf_serialize+0x5bc>
     9e8:	ldr	x8, [sp, #328]
     9ec:	ldr	w9, [x8, #48]
     9f0:	ldr	x8, [sp, #328]
     9f4:	ldr	w10, [x8, #52]
     9f8:	lsl	w10, w10, #16
     9fc:	orr	w9, w10, w9, lsl #24
     a00:	ldr	x8, [sp, #328]
     a04:	ldr	w10, [x8, #56]
     a08:	orr	w9, w9, w10
     a0c:	str	w9, [sp, #184]
     a10:	ldr	x8, [sp, #280]
     a14:	ldr	w9, [sp, #184]
     a18:	str	w9, [x8]
     a1c:	ldr	x8, [sp, #280]
     a20:	add	x8, x8, #0x4
     a24:	str	x8, [sp, #280]
     a28:	b	b64 <ctf_serialize+0x710>
     a2c:	ldr	x8, [sp, #280]
     a30:	ldr	x9, [sp, #328]
     a34:	ldr	x9, [x9, #48]
     a38:	str	x9, [x8]
     a3c:	ldr	x8, [sp, #280]
     a40:	add	x8, x8, #0x8
     a44:	str	x8, [sp, #280]
     a48:	b	b64 <ctf_serialize+0x710>
     a4c:	ldr	x8, [sp, #328]
     a50:	ldr	x8, [x8, #48]
     a54:	str	w8, [sp, #188]
     a58:	ldr	x9, [sp, #328]
     a5c:	ldr	x9, [x9, #56]
     a60:	str	w9, [sp, #192]
     a64:	ldr	x10, [sp, #328]
     a68:	ldr	w8, [x10, #64]
     a6c:	str	w8, [sp, #196]
     a70:	ldr	x10, [sp, #280]
     a74:	ldur	x11, [sp, #188]
     a78:	str	x11, [x10]
     a7c:	ldr	w8, [sp, #196]
     a80:	str	w8, [x10, #8]
     a84:	ldr	x10, [sp, #280]
     a88:	add	x10, x10, #0xc
     a8c:	str	x10, [sp, #280]
     a90:	b	b64 <ctf_serialize+0x710>
     a94:	ldr	x8, [sp, #280]
     a98:	str	x8, [sp, #152]
     a9c:	str	wzr, [sp, #148]
     aa0:	ldr	w8, [sp, #148]
     aa4:	ldr	w9, [sp, #200]
     aa8:	cmp	w8, w9
     aac:	b.cs	ae4 <ctf_serialize+0x690>  // b.hs, b.nlast
     ab0:	ldr	x8, [sp, #328]
     ab4:	ldr	x8, [x8, #48]
     ab8:	ldr	w9, [sp, #148]
     abc:	mov	w10, w9
     ac0:	ldr	x8, [x8, x10, lsl #3]
     ac4:	ldr	x10, [sp, #152]
     ac8:	add	x11, x10, #0x4
     acc:	str	x11, [sp, #152]
     ad0:	str	w8, [x10]
     ad4:	ldr	w8, [sp, #148]
     ad8:	add	w8, w8, #0x1
     adc:	str	w8, [sp, #148]
     ae0:	b	aa0 <ctf_serialize+0x64c>
     ae4:	ldr	w8, [sp, #200]
     ae8:	and	w8, w8, #0x1
     aec:	cbz	w8, b00 <ctf_serialize+0x6ac>
     af0:	ldr	x8, [sp, #152]
     af4:	add	x9, x8, #0x4
     af8:	str	x9, [sp, #152]
     afc:	str	wzr, [x8]
     b00:	ldr	x8, [sp, #152]
     b04:	str	x8, [sp, #280]
     b08:	b	b64 <ctf_serialize+0x710>
     b0c:	ldr	x8, [sp, #328]
     b10:	ldr	w9, [x8, #32]
     b14:	mov	w10, #0x20000000            	// #536870912
     b18:	cmp	w9, w10
     b1c:	b.cs	b38 <ctf_serialize+0x6e4>  // b.hs, b.nlast
     b20:	ldur	x0, [x29, #-16]
     b24:	ldr	x1, [sp, #328]
     b28:	ldr	x2, [sp, #280]
     b2c:	bl	1090 <ctf_copy_smembers>
     b30:	str	x0, [sp, #280]
     b34:	b	b4c <ctf_serialize+0x6f8>
     b38:	ldur	x0, [x29, #-16]
     b3c:	ldr	x1, [sp, #328]
     b40:	ldr	x2, [sp, #280]
     b44:	bl	1140 <ctf_copy_lmembers>
     b48:	str	x0, [sp, #280]
     b4c:	b	b64 <ctf_serialize+0x710>
     b50:	ldur	x0, [x29, #-16]
     b54:	ldr	x1, [sp, #328]
     b58:	ldr	x2, [sp, #280]
     b5c:	bl	11f8 <ctf_copy_emembers>
     b60:	str	x0, [sp, #280]
     b64:	ldr	x8, [sp, #328]
     b68:	ldr	x8, [x8, #8]
     b6c:	str	x8, [sp, #328]
     b70:	b	8b4 <ctf_serialize+0x460>
     b74:	ldr	x8, [sp, #280]
     b78:	ldr	x9, [sp, #240]
     b7c:	add	x9, x9, #0x34
     b80:	ldr	w10, [sp, #392]
     b84:	mov	w11, w10
     b88:	add	x9, x9, x11
     b8c:	cmp	x8, x9
     b90:	b.ne	b98 <ctf_serialize+0x744>  // b.any
     b94:	b	bb0 <ctf_serialize+0x75c>
     b98:	adrp	x0, 0 <ctf_create>
     b9c:	add	x0, x0, #0x0
     ba0:	ldr	x1, [sp, #104]
     ba4:	mov	w2, #0x1d8                 	// #472
     ba8:	ldr	x3, [sp, #96]
     bac:	bl	0 <__assert_fail>
     bb0:	ldur	x0, [x29, #-16]
     bb4:	bl	0 <ctf_str_write_strtab>
     bb8:	str	x0, [sp, #128]
     bbc:	str	x1, [sp, #136]
     bc0:	ldr	q0, [sp, #128]
     bc4:	str	q0, [sp, #288]
     bc8:	ldur	x0, [x29, #-16]
     bcc:	bl	0 <ctf_str_purge_refs>
     bd0:	ldr	x8, [sp, #288]
     bd4:	cbnz	x8, bf4 <ctf_serialize+0x7a0>
     bd8:	ldr	x0, [sp, #240]
     bdc:	bl	0 <free>
     be0:	ldur	x0, [x29, #-16]
     be4:	mov	w1, #0xb                   	// #11
     be8:	bl	0 <ctf_set_errno>
     bec:	stur	w0, [x29, #-4]
     bf0:	b	107c <ctf_serialize+0xc28>
     bf4:	ldur	x8, [x29, #-16]
     bf8:	add	x9, sp, #0x70
     bfc:	str	x8, [sp, #112]
     c00:	add	x8, sp, #0x120
     c04:	str	x8, [x9, #8]
     c08:	ldr	x0, [sp, #312]
     c0c:	ldr	x1, [sp, #248]
     c10:	mov	x2, #0x8                   	// #8
     c14:	adrp	x3, 0 <ctf_create>
     c18:	add	x3, x3, #0x0
     c1c:	mov	x4, x9
     c20:	bl	1284 <ctf_qsort_r>
     c24:	ldur	x0, [x29, #-16]
     c28:	ldr	x1, [sp, #240]
     c2c:	ldr	x8, [sp, #264]
     c30:	ldr	x9, [sp, #296]
     c34:	add	x2, x8, x9
     c38:	bl	0 <ctf_realloc>
     c3c:	str	x0, [sp, #232]
     c40:	cbnz	x0, c68 <ctf_serialize+0x814>
     c44:	ldr	x0, [sp, #240]
     c48:	bl	0 <free>
     c4c:	ldr	x0, [sp, #288]
     c50:	bl	0 <free>
     c54:	ldur	x0, [x29, #-16]
     c58:	mov	w1, #0xb                   	// #11
     c5c:	bl	0 <ctf_set_errno>
     c60:	stur	w0, [x29, #-4]
     c64:	b	107c <ctf_serialize+0xc28>
     c68:	ldr	x8, [sp, #232]
     c6c:	str	x8, [sp, #240]
     c70:	ldr	x8, [sp, #240]
     c74:	ldr	x9, [sp, #264]
     c78:	add	x0, x8, x9
     c7c:	ldr	x1, [sp, #288]
     c80:	ldr	x2, [sp, #296]
     c84:	bl	0 <memcpy>
     c88:	ldr	x8, [sp, #240]
     c8c:	str	x8, [sp, #336]
     c90:	ldr	x8, [sp, #296]
     c94:	ldr	x9, [sp, #336]
     c98:	str	w8, [x9, #48]
     c9c:	ldr	x9, [sp, #336]
     ca0:	ldr	w8, [x9, #48]
     ca4:	mov	w9, w8
     ca8:	ldr	x10, [sp, #264]
     cac:	add	x9, x10, x9
     cb0:	str	x9, [sp, #264]
     cb4:	ldr	x0, [sp, #288]
     cb8:	bl	0 <free>
     cbc:	ldr	x0, [sp, #240]
     cc0:	ldr	x1, [sp, #264]
     cc4:	ldur	x9, [x29, #-16]
     cc8:	ldr	x7, [x9, #128]
     ccc:	mov	x9, xzr
     cd0:	mov	x2, x9
     cd4:	str	x2, [sp, #64]
     cd8:	mov	x3, x9
     cdc:	mov	x4, x9
     ce0:	ldr	x5, [sp, #64]
     ce4:	mov	x6, x9
     ce8:	mov	x9, sp
     cec:	mov	w8, #0x1                   	// #1
     cf0:	str	w8, [x9]
     cf4:	mov	x9, sp
     cf8:	add	x10, sp, #0xe4
     cfc:	str	x10, [x9, #8]
     d00:	bl	0 <ctf_simple_open_internal>
     d04:	str	x0, [sp, #400]
     d08:	cbnz	x0, d28 <ctf_serialize+0x8d4>
     d0c:	ldr	x0, [sp, #240]
     d10:	bl	0 <free>
     d14:	ldur	x0, [x29, #-16]
     d18:	ldr	w1, [sp, #228]
     d1c:	bl	0 <ctf_set_errno>
     d20:	stur	w0, [x29, #-4]
     d24:	b	107c <ctf_serialize+0xc28>
     d28:	ldr	x0, [sp, #400]
     d2c:	ldur	x8, [x29, #-16]
     d30:	str	x0, [sp, #56]
     d34:	mov	x0, x8
     d38:	bl	0 <ctf_getmodel>
     d3c:	ldr	x8, [sp, #56]
     d40:	str	w0, [sp, #52]
     d44:	mov	x0, x8
     d48:	ldr	w1, [sp, #52]
     d4c:	bl	0 <ctf_setmodel>
     d50:	ldr	x8, [sp, #400]
     d54:	ldur	x9, [x29, #-16]
     d58:	ldr	x1, [x9, #512]
     d5c:	mov	x0, x8
     d60:	bl	0 <ctf_import>
     d64:	ldur	x8, [x29, #-16]
     d68:	ldr	w10, [x8, #548]
     d6c:	ldr	x8, [sp, #400]
     d70:	str	w10, [x8, #548]
     d74:	ldur	x8, [x29, #-16]
     d78:	ldr	w10, [x8, #552]
     d7c:	and	w10, w10, #0xfffffffb
     d80:	ldr	x8, [sp, #400]
     d84:	ldr	w11, [x8, #552]
     d88:	orr	w10, w11, w10
     d8c:	str	w10, [x8, #552]
     d90:	ldr	x8, [sp, #400]
     d94:	ldr	x8, [x8, #400]
     d98:	cbnz	x8, da8 <ctf_serialize+0x954>
     d9c:	ldr	x8, [sp, #240]
     da0:	ldr	x9, [sp, #400]
     da4:	str	x8, [x9, #400]
     da8:	ldur	x8, [x29, #-16]
     dac:	ldr	x8, [x8, #568]
     db0:	ldr	x9, [sp, #400]
     db4:	str	x8, [x9, #568]
     db8:	ldr	x8, [sp, #400]
     dbc:	ldur	x9, [x29, #-16]
     dc0:	ldr	q0, [x9, #576]
     dc4:	str	q0, [x8, #576]
     dc8:	ldur	x8, [x29, #-16]
     dcc:	ldr	x8, [x8, #592]
     dd0:	ldr	x9, [sp, #400]
     dd4:	str	x8, [x9, #592]
     dd8:	ldr	x8, [sp, #400]
     ddc:	add	x8, x8, #0x258
     de0:	ldur	x9, [x29, #-16]
     de4:	add	x9, x9, #0x258
     de8:	ldr	q0, [x9]
     dec:	str	q0, [x8]
     df0:	ldur	x8, [x29, #-16]
     df4:	ldr	x8, [x8, #616]
     df8:	ldr	x9, [sp, #400]
     dfc:	str	x8, [x9, #616]
     e00:	ldur	x8, [x29, #-16]
     e04:	ldr	x8, [x8, #696]
     e08:	ldr	x9, [sp, #400]
     e0c:	str	x8, [x9, #696]
     e10:	ldur	x8, [x29, #-16]
     e14:	ldr	x8, [x8, #624]
     e18:	add	x8, x8, #0x1
     e1c:	ldr	x9, [sp, #400]
     e20:	str	x8, [x9, #624]
     e24:	ldur	x8, [x29, #-16]
     e28:	ldr	x8, [x8, #720]
     e2c:	ldr	x9, [sp, #400]
     e30:	str	x8, [x9, #720]
     e34:	ldur	x8, [x29, #-16]
     e38:	ldr	x8, [x8, #448]
     e3c:	ldr	x9, [sp, #400]
     e40:	str	x8, [x9, #448]
     e44:	ldur	x8, [x29, #-16]
     e48:	ldr	x8, [x8, #456]
     e4c:	ldr	x9, [sp, #400]
     e50:	str	x8, [x9, #456]
     e54:	ldur	x8, [x29, #-16]
     e58:	ldr	x8, [x8, #648]
     e5c:	ldr	x9, [sp, #400]
     e60:	str	x8, [x9, #648]
     e64:	ldur	x8, [x29, #-16]
     e68:	ldr	x8, [x8, #656]
     e6c:	ldr	x9, [sp, #400]
     e70:	str	x8, [x9, #656]
     e74:	ldur	x8, [x29, #-16]
     e78:	ldr	w10, [x8, #384]
     e7c:	ldr	x8, [sp, #400]
     e80:	str	w10, [x8, #384]
     e84:	ldur	x8, [x29, #-16]
     e88:	ldr	x8, [x8, #128]
     e8c:	ldr	x9, [sp, #400]
     e90:	str	x8, [x9, #128]
     e94:	ldur	x8, [x29, #-16]
     e98:	ldr	x8, [x8, #672]
     e9c:	ldr	x9, [sp, #400]
     ea0:	str	x8, [x9, #672]
     ea4:	ldur	x8, [x29, #-16]
     ea8:	ldr	x8, [x8, #664]
     eac:	ldr	x9, [sp, #400]
     eb0:	str	x8, [x9, #664]
     eb4:	ldur	x8, [x29, #-16]
     eb8:	ldr	x8, [x8, #680]
     ebc:	ldr	x9, [sp, #400]
     ec0:	str	x8, [x9, #680]
     ec4:	ldur	x8, [x29, #-16]
     ec8:	ldr	x8, [x8, #688]
     ecc:	ldr	x9, [sp, #400]
     ed0:	str	x8, [x9, #688]
     ed4:	ldur	x8, [x29, #-16]
     ed8:	ldr	x8, [x8, #624]
     edc:	ldr	x9, [sp, #400]
     ee0:	str	x8, [x9, #632]
     ee4:	ldr	x8, [sp, #400]
     ee8:	add	x0, x8, #0xd8
     eec:	ldur	x8, [x29, #-16]
     ef0:	add	x1, x8, #0xd8
     ef4:	mov	x8, #0x78                  	// #120
     ef8:	mov	x2, x8
     efc:	str	x8, [sp, #40]
     f00:	bl	0 <memcpy>
     f04:	ldr	x8, [sp, #400]
     f08:	ldur	x9, [x29, #-16]
     f0c:	ldur	q0, [x9, #152]
     f10:	stur	q0, [x8, #152]
     f14:	ldr	x8, [sp, #400]
     f18:	ldur	x9, [x29, #-16]
     f1c:	ldur	q0, [x9, #168]
     f20:	stur	q0, [x8, #168]
     f24:	ldr	x8, [sp, #400]
     f28:	ldur	x9, [x29, #-16]
     f2c:	ldur	q0, [x9, #184]
     f30:	stur	q0, [x8, #184]
     f34:	ldr	x8, [sp, #400]
     f38:	ldur	x9, [x29, #-16]
     f3c:	ldur	q0, [x9, #200]
     f40:	stur	q0, [x8, #200]
     f44:	ldur	x8, [x29, #-16]
     f48:	mov	x9, xzr
     f4c:	str	x9, [x8, #568]
     f50:	ldr	x0, [sp, #400]
     f54:	str	x9, [sp, #32]
     f58:	bl	0 <ctf_str_free_atoms>
     f5c:	ldur	x8, [x29, #-16]
     f60:	ldr	x8, [x8, #368]
     f64:	ldr	x9, [sp, #400]
     f68:	str	x8, [x9, #368]
     f6c:	ldur	x8, [x29, #-16]
     f70:	ldr	x8, [x8, #120]
     f74:	ldr	x9, [sp, #400]
     f78:	str	x8, [x9, #120]
     f7c:	ldur	x8, [x29, #-16]
     f80:	ldr	x9, [sp, #32]
     f84:	str	x9, [x8, #368]
     f88:	ldur	x8, [x29, #-16]
     f8c:	str	x9, [x8, #120]
     f90:	ldur	x8, [x29, #-16]
     f94:	str	xzr, [x8, #576]
     f98:	str	xzr, [x8, #584]
     f9c:	ldur	x8, [x29, #-16]
     fa0:	str	x9, [x8, #696]
     fa4:	ldur	x8, [x29, #-16]
     fa8:	str	x9, [x8, #448]
     fac:	ldur	x8, [x29, #-16]
     fb0:	str	x9, [x8, #648]
     fb4:	ldur	x8, [x29, #-16]
     fb8:	str	x9, [x8, #656]
     fbc:	ldur	x8, [x29, #-16]
     fc0:	str	x9, [x8, #128]
     fc4:	ldur	x8, [x29, #-16]
     fc8:	str	x9, [x8, #672]
     fcc:	ldur	x8, [x29, #-16]
     fd0:	str	x9, [x8, #664]
     fd4:	ldur	x8, [x29, #-16]
     fd8:	str	x9, [x8, #592]
     fdc:	ldur	x8, [x29, #-16]
     fe0:	str	xzr, [x8, #600]
     fe4:	str	xzr, [x8, #608]
     fe8:	ldur	x8, [x29, #-16]
     fec:	add	x0, x8, #0xd8
     ff0:	mov	w10, wzr
     ff4:	mov	w1, w10
     ff8:	ldr	x2, [sp, #40]
     ffc:	bl	0 <memset>
    1000:	ldur	x8, [x29, #-16]
    1004:	ldr	x9, [sp, #32]
    1008:	str	x9, [x8, #160]
    100c:	ldur	x8, [x29, #-16]
    1010:	str	x9, [x8, #176]
    1014:	ldur	x8, [x29, #-16]
    1018:	str	x9, [x8, #192]
    101c:	ldur	x8, [x29, #-16]
    1020:	str	x9, [x8, #208]
    1024:	ldur	x1, [x29, #-16]
    1028:	add	x8, sp, #0x198
    102c:	mov	x0, x8
    1030:	mov	x11, #0x2d8                 	// #728
    1034:	mov	x2, x11
    1038:	str	x8, [sp, #24]
    103c:	str	x11, [sp, #16]
    1040:	bl	0 <memcpy>
    1044:	ldur	x0, [x29, #-16]
    1048:	ldr	x1, [sp, #400]
    104c:	ldr	x2, [sp, #16]
    1050:	bl	0 <memcpy>
    1054:	ldr	x0, [sp, #400]
    1058:	ldr	x1, [sp, #24]
    105c:	ldr	x2, [sp, #16]
    1060:	bl	0 <memcpy>
    1064:	ldr	x8, [sp, #400]
    1068:	mov	w10, #0x1                   	// #1
    106c:	str	w10, [x8, #548]
    1070:	ldr	x0, [sp, #400]
    1074:	bl	0 <ctf_file_close>
    1078:	stur	wzr, [x29, #-4]
    107c:	ldur	w0, [x29, #-4]
    1080:	add	sp, sp, #0x480
    1084:	ldr	x28, [sp, #16]
    1088:	ldp	x29, x30, [sp], #32
    108c:	ret

0000000000001090 <ctf_copy_smembers>:
    1090:	sub	sp, sp, #0x50
    1094:	stp	x29, x30, [sp, #64]
    1098:	add	x29, sp, #0x40
    109c:	stur	x0, [x29, #-8]
    10a0:	stur	x1, [x29, #-16]
    10a4:	stur	x2, [x29, #-24]
    10a8:	ldur	x8, [x29, #-16]
    10ac:	ldr	x8, [x8, #56]
    10b0:	str	x8, [sp, #32]
    10b4:	ldr	x8, [sp, #32]
    10b8:	cbz	x8, 1130 <ctf_copy_smembers+0xa0>
    10bc:	str	wzr, [sp, #20]
    10c0:	ldr	x8, [sp, #32]
    10c4:	ldr	x8, [x8, #24]
    10c8:	str	w8, [sp, #28]
    10cc:	ldr	x9, [sp, #32]
    10d0:	ldr	x9, [x9, #32]
    10d4:	str	w9, [sp, #24]
    10d8:	ldur	x10, [x29, #-24]
    10dc:	ldur	x11, [sp, #20]
    10e0:	str	x11, [x10]
    10e4:	ldr	w8, [sp, #28]
    10e8:	str	w8, [x10, #8]
    10ec:	ldur	x10, [x29, #-24]
    10f0:	str	x10, [sp, #8]
    10f4:	ldr	x10, [sp, #32]
    10f8:	ldr	x10, [x10, #16]
    10fc:	cbz	x10, 1114 <ctf_copy_smembers+0x84>
    1100:	ldur	x0, [x29, #-8]
    1104:	ldr	x8, [sp, #32]
    1108:	ldr	x1, [x8, #16]
    110c:	ldr	x2, [sp, #8]
    1110:	bl	0 <ctf_str_add_ref>
    1114:	ldur	x8, [x29, #-24]
    1118:	add	x8, x8, #0xc
    111c:	stur	x8, [x29, #-24]
    1120:	ldr	x8, [sp, #32]
    1124:	ldr	x8, [x8, #8]
    1128:	str	x8, [sp, #32]
    112c:	b	10b4 <ctf_copy_smembers+0x24>
    1130:	ldur	x0, [x29, #-24]
    1134:	ldp	x29, x30, [sp, #64]
    1138:	add	sp, sp, #0x50
    113c:	ret

0000000000001140 <ctf_copy_lmembers>:
    1140:	sub	sp, sp, #0x50
    1144:	stp	x29, x30, [sp, #64]
    1148:	add	x29, sp, #0x40
    114c:	stur	x0, [x29, #-8]
    1150:	stur	x1, [x29, #-16]
    1154:	stur	x2, [x29, #-24]
    1158:	ldur	x8, [x29, #-16]
    115c:	ldr	x8, [x8, #56]
    1160:	str	x8, [sp, #32]
    1164:	ldr	x8, [sp, #32]
    1168:	cbz	x8, 11e8 <ctf_copy_lmembers+0xa8>
    116c:	str	wzr, [sp, #16]
    1170:	ldr	x8, [sp, #32]
    1174:	ldr	x8, [x8, #24]
    1178:	str	w8, [sp, #24]
    117c:	ldr	x9, [sp, #32]
    1180:	ldr	x9, [x9, #32]
    1184:	lsr	x9, x9, #32
    1188:	str	w9, [sp, #20]
    118c:	ldr	x10, [sp, #32]
    1190:	ldr	x10, [x10, #32]
    1194:	str	w10, [sp, #28]
    1198:	ldur	x11, [x29, #-24]
    119c:	ldr	q0, [sp, #16]
    11a0:	str	q0, [x11]
    11a4:	ldur	x11, [x29, #-24]
    11a8:	str	x11, [sp, #8]
    11ac:	ldr	x11, [sp, #32]
    11b0:	ldr	x11, [x11, #16]
    11b4:	cbz	x11, 11cc <ctf_copy_lmembers+0x8c>
    11b8:	ldur	x0, [x29, #-8]
    11bc:	ldr	x8, [sp, #32]
    11c0:	ldr	x1, [x8, #16]
    11c4:	ldr	x2, [sp, #8]
    11c8:	bl	0 <ctf_str_add_ref>
    11cc:	ldur	x8, [x29, #-24]
    11d0:	add	x8, x8, #0x10
    11d4:	stur	x8, [x29, #-24]
    11d8:	ldr	x8, [sp, #32]
    11dc:	ldr	x8, [x8, #8]
    11e0:	str	x8, [sp, #32]
    11e4:	b	1164 <ctf_copy_lmembers+0x24>
    11e8:	ldur	x0, [x29, #-24]
    11ec:	ldp	x29, x30, [sp, #64]
    11f0:	add	sp, sp, #0x50
    11f4:	ret

00000000000011f8 <ctf_copy_emembers>:
    11f8:	sub	sp, sp, #0x40
    11fc:	stp	x29, x30, [sp, #48]
    1200:	add	x29, sp, #0x30
    1204:	stur	x0, [x29, #-8]
    1208:	stur	x1, [x29, #-16]
    120c:	str	x2, [sp, #24]
    1210:	ldur	x8, [x29, #-16]
    1214:	ldr	x8, [x8, #56]
    1218:	str	x8, [sp, #16]
    121c:	ldr	x8, [sp, #16]
    1220:	cbz	x8, 1274 <ctf_copy_emembers+0x7c>
    1224:	ldr	x8, [sp, #16]
    1228:	ldr	w9, [x8, #40]
    122c:	str	w9, [sp, #12]
    1230:	ldr	x8, [sp, #24]
    1234:	ldr	x10, [sp, #8]
    1238:	str	x10, [x8]
    123c:	ldr	x8, [sp, #24]
    1240:	str	x8, [sp]
    1244:	ldur	x0, [x29, #-8]
    1248:	ldr	x8, [sp, #16]
    124c:	ldr	x1, [x8, #16]
    1250:	ldr	x2, [sp]
    1254:	bl	0 <ctf_str_add_ref>
    1258:	ldr	x8, [sp, #24]
    125c:	add	x8, x8, #0x8
    1260:	str	x8, [sp, #24]
    1264:	ldr	x8, [sp, #16]
    1268:	ldr	x8, [x8, #8]
    126c:	str	x8, [sp, #16]
    1270:	b	121c <ctf_copy_emembers+0x24>
    1274:	ldr	x0, [sp, #24]
    1278:	ldp	x29, x30, [sp, #48]
    127c:	add	sp, sp, #0x40
    1280:	ret

0000000000001284 <ctf_qsort_r>:
    1284:	sub	sp, sp, #0x40
    1288:	stp	x29, x30, [sp, #48]
    128c:	add	x29, sp, #0x30
    1290:	stur	x0, [x29, #-8]
    1294:	stur	x1, [x29, #-16]
    1298:	str	x2, [sp, #24]
    129c:	str	x3, [sp, #16]
    12a0:	str	x4, [sp, #8]
    12a4:	ldur	x0, [x29, #-8]
    12a8:	ldur	x1, [x29, #-16]
    12ac:	ldr	x2, [sp, #24]
    12b0:	ldr	x3, [sp, #16]
    12b4:	ldr	x4, [sp, #8]
    12b8:	bl	0 <qsort_r>
    12bc:	ldp	x29, x30, [sp, #48]
    12c0:	add	sp, sp, #0x40
    12c4:	ret

00000000000012c8 <ctf_sort_var>:
    12c8:	sub	sp, sp, #0x50
    12cc:	stp	x29, x30, [sp, #64]
    12d0:	add	x29, sp, #0x40
    12d4:	stur	x0, [x29, #-8]
    12d8:	stur	x1, [x29, #-16]
    12dc:	stur	x2, [x29, #-24]
    12e0:	ldur	x8, [x29, #-8]
    12e4:	str	x8, [sp, #32]
    12e8:	ldur	x8, [x29, #-16]
    12ec:	str	x8, [sp, #24]
    12f0:	ldur	x8, [x29, #-24]
    12f4:	str	x8, [sp, #16]
    12f8:	ldr	x8, [sp, #16]
    12fc:	ldr	x0, [x8]
    1300:	ldr	x8, [sp, #32]
    1304:	ldr	w1, [x8]
    1308:	ldr	x8, [sp, #16]
    130c:	ldr	x2, [x8, #8]
    1310:	bl	0 <ctf_strraw_explicit>
    1314:	ldr	x8, [sp, #16]
    1318:	ldr	x8, [x8]
    131c:	ldr	x9, [sp, #24]
    1320:	ldr	w1, [x9]
    1324:	ldr	x9, [sp, #16]
    1328:	ldr	x2, [x9, #8]
    132c:	str	x0, [sp, #8]
    1330:	mov	x0, x8
    1334:	bl	0 <ctf_strraw_explicit>
    1338:	ldr	x2, [sp, #8]
    133c:	str	x0, [sp]
    1340:	mov	x0, x2
    1344:	ldr	x1, [sp]
    1348:	bl	0 <strcmp>
    134c:	ldp	x29, x30, [sp, #64]
    1350:	add	sp, sp, #0x50
    1354:	ret

0000000000001358 <ctf_name_table>:
    1358:	sub	sp, sp, #0x20
    135c:	str	x0, [sp, #16]
    1360:	str	w1, [sp, #12]
    1364:	ldr	w8, [sp, #12]
    1368:	cmp	w8, #0x6
    136c:	str	w8, [sp, #8]
    1370:	b.eq	1398 <ctf_name_table+0x40>  // b.none
    1374:	b	1378 <ctf_name_table+0x20>
    1378:	ldr	w8, [sp, #8]
    137c:	cmp	w8, #0x7
    1380:	b.eq	13a8 <ctf_name_table+0x50>  // b.none
    1384:	b	1388 <ctf_name_table+0x30>
    1388:	ldr	w8, [sp, #8]
    138c:	cmp	w8, #0x8
    1390:	b.eq	13b8 <ctf_name_table+0x60>  // b.none
    1394:	b	13c8 <ctf_name_table+0x70>
    1398:	ldr	x8, [sp, #16]
    139c:	add	x8, x8, #0x98
    13a0:	str	x8, [sp, #24]
    13a4:	b	13d4 <ctf_name_table+0x7c>
    13a8:	ldr	x8, [sp, #16]
    13ac:	add	x8, x8, #0xa8
    13b0:	str	x8, [sp, #24]
    13b4:	b	13d4 <ctf_name_table+0x7c>
    13b8:	ldr	x8, [sp, #16]
    13bc:	add	x8, x8, #0xb8
    13c0:	str	x8, [sp, #24]
    13c4:	b	13d4 <ctf_name_table+0x7c>
    13c8:	ldr	x8, [sp, #16]
    13cc:	add	x8, x8, #0xc8
    13d0:	str	x8, [sp, #24]
    13d4:	ldr	x0, [sp, #24]
    13d8:	add	sp, sp, #0x20
    13dc:	ret

00000000000013e0 <ctf_dtd_insert>:
    13e0:	sub	sp, sp, #0x40
    13e4:	stp	x29, x30, [sp, #48]
    13e8:	add	x29, sp, #0x30
    13ec:	stur	x0, [x29, #-16]
    13f0:	str	x1, [sp, #24]
    13f4:	str	w2, [sp, #20]
    13f8:	ldur	x8, [x29, #-16]
    13fc:	ldr	x0, [x8, #568]
    1400:	ldr	x8, [sp, #24]
    1404:	ldr	x8, [x8, #16]
    1408:	ldr	x2, [sp, #24]
    140c:	mov	x1, x8
    1410:	bl	0 <ctf_dynhash_insert>
    1414:	cmp	w0, #0x0
    1418:	cset	w9, ge  // ge = tcont
    141c:	tbnz	w9, #0, 142c <ctf_dtd_insert+0x4c>
    1420:	mov	w8, #0xffffffff            	// #-1
    1424:	stur	w8, [x29, #-4]
    1428:	b	14b8 <ctf_dtd_insert+0xd8>
    142c:	ldr	x8, [sp, #24]
    1430:	ldr	w9, [x8, #24]
    1434:	cbz	w9, 14a4 <ctf_dtd_insert+0xc4>
    1438:	ldur	x0, [x29, #-16]
    143c:	ldr	x8, [sp, #24]
    1440:	ldr	w1, [x8, #24]
    1444:	bl	0 <ctf_strraw>
    1448:	str	x0, [sp, #8]
    144c:	cbz	x0, 14a4 <ctf_dtd_insert+0xc4>
    1450:	ldur	x0, [x29, #-16]
    1454:	ldr	w1, [sp, #20]
    1458:	bl	1358 <ctf_name_table>
    145c:	ldr	x0, [x0, #8]
    1460:	ldr	x1, [sp, #8]
    1464:	ldr	x8, [sp, #24]
    1468:	ldr	x8, [x8, #16]
    146c:	mov	x2, x8
    1470:	bl	0 <ctf_dynhash_insert>
    1474:	cmp	w0, #0x0
    1478:	cset	w9, ge  // ge = tcont
    147c:	tbnz	w9, #0, 14a4 <ctf_dtd_insert+0xc4>
    1480:	ldur	x8, [x29, #-16]
    1484:	ldr	x0, [x8, #568]
    1488:	ldr	x8, [sp, #24]
    148c:	ldr	x8, [x8, #16]
    1490:	mov	x1, x8
    1494:	bl	0 <ctf_dynhash_remove>
    1498:	mov	w9, #0xffffffff            	// #-1
    149c:	stur	w9, [x29, #-4]
    14a0:	b	14b8 <ctf_dtd_insert+0xd8>
    14a4:	ldur	x8, [x29, #-16]
    14a8:	add	x0, x8, #0x240
    14ac:	ldr	x1, [sp, #24]
    14b0:	bl	0 <ctf_list_append>
    14b4:	stur	wzr, [x29, #-4]
    14b8:	ldur	w0, [x29, #-4]
    14bc:	ldp	x29, x30, [sp, #48]
    14c0:	add	sp, sp, #0x40
    14c4:	ret

00000000000014c8 <ctf_dtd_delete>:
    14c8:	sub	sp, sp, #0x50
    14cc:	stp	x29, x30, [sp, #64]
    14d0:	add	x29, sp, #0x40
    14d4:	stur	x0, [x29, #-8]
    14d8:	stur	x1, [x29, #-16]
    14dc:	ldur	x8, [x29, #-8]
    14e0:	ldr	x8, [x8]
    14e4:	ldr	x8, [x8]
    14e8:	ldur	x9, [x29, #-16]
    14ec:	ldr	w0, [x9, #28]
    14f0:	blr	x8
    14f4:	str	w0, [sp, #28]
    14f8:	ldur	x8, [x29, #-8]
    14fc:	ldr	x0, [x8, #568]
    1500:	ldur	x8, [x29, #-16]
    1504:	ldr	x8, [x8, #16]
    1508:	mov	x1, x8
    150c:	bl	0 <ctf_dynhash_remove>
    1510:	ldr	w10, [sp, #28]
    1514:	cmp	w10, #0x5
    1518:	str	w10, [sp, #12]
    151c:	b.eq	1590 <ctf_dtd_delete+0xc8>  // b.none
    1520:	b	1524 <ctf_dtd_delete+0x5c>
    1524:	ldr	w8, [sp, #12]
    1528:	subs	w9, w8, #0x6
    152c:	cmp	w9, #0x2
    1530:	cset	w9, ls  // ls = plast
    1534:	eor	w9, w9, #0x1
    1538:	tbnz	w9, #0, 159c <ctf_dtd_delete+0xd4>
    153c:	b	1540 <ctf_dtd_delete+0x78>
    1540:	ldur	x8, [x29, #-16]
    1544:	ldr	x8, [x8, #56]
    1548:	stur	x8, [x29, #-24]
    154c:	ldur	x8, [x29, #-24]
    1550:	cbz	x8, 158c <ctf_dtd_delete+0xc4>
    1554:	ldur	x8, [x29, #-24]
    1558:	ldr	x8, [x8, #16]
    155c:	cbz	x8, 156c <ctf_dtd_delete+0xa4>
    1560:	ldur	x8, [x29, #-24]
    1564:	ldr	x0, [x8, #16]
    1568:	bl	0 <free>
    156c:	ldur	x8, [x29, #-24]
    1570:	ldr	x8, [x8, #8]
    1574:	str	x8, [sp, #32]
    1578:	ldur	x0, [x29, #-24]
    157c:	bl	0 <free>
    1580:	ldr	x8, [sp, #32]
    1584:	stur	x8, [x29, #-24]
    1588:	b	154c <ctf_dtd_delete+0x84>
    158c:	b	159c <ctf_dtd_delete+0xd4>
    1590:	ldur	x8, [x29, #-16]
    1594:	ldr	x0, [x8, #48]
    1598:	bl	0 <free>
    159c:	ldur	x8, [x29, #-16]
    15a0:	ldr	w9, [x8, #24]
    15a4:	cbz	w9, 15ec <ctf_dtd_delete+0x124>
    15a8:	ldur	x0, [x29, #-8]
    15ac:	ldur	x8, [x29, #-16]
    15b0:	ldr	w1, [x8, #24]
    15b4:	bl	0 <ctf_strraw>
    15b8:	str	x0, [sp, #16]
    15bc:	cbz	x0, 15ec <ctf_dtd_delete+0x124>
    15c0:	ldur	x0, [x29, #-8]
    15c4:	ldr	w1, [sp, #28]
    15c8:	bl	1358 <ctf_name_table>
    15cc:	ldr	x0, [x0, #8]
    15d0:	ldr	x1, [sp, #16]
    15d4:	bl	0 <ctf_dynhash_remove>
    15d8:	ldur	x0, [x29, #-8]
    15dc:	ldr	x1, [sp, #16]
    15e0:	ldur	x8, [x29, #-16]
    15e4:	add	x2, x8, #0x18
    15e8:	bl	0 <ctf_str_remove_ref>
    15ec:	ldur	x8, [x29, #-8]
    15f0:	add	x0, x8, #0x240
    15f4:	ldur	x1, [x29, #-16]
    15f8:	bl	0 <ctf_list_delete>
    15fc:	ldur	x0, [x29, #-16]
    1600:	bl	0 <free>
    1604:	ldp	x29, x30, [sp, #64]
    1608:	add	sp, sp, #0x50
    160c:	ret

0000000000001610 <ctf_dtd_lookup>:
    1610:	sub	sp, sp, #0x20
    1614:	stp	x29, x30, [sp, #16]
    1618:	add	x29, sp, #0x10
    161c:	str	x0, [sp, #8]
    1620:	str	x1, [sp]
    1624:	ldr	x8, [sp, #8]
    1628:	ldr	x0, [x8, #568]
    162c:	ldr	x8, [sp]
    1630:	mov	x1, x8
    1634:	bl	0 <ctf_dynhash_lookup>
    1638:	ldp	x29, x30, [sp, #16]
    163c:	add	sp, sp, #0x20
    1640:	ret

0000000000001644 <ctf_dynamic_type>:
    1644:	sub	sp, sp, #0x30
    1648:	stp	x29, x30, [sp, #32]
    164c:	add	x29, sp, #0x20
    1650:	str	x0, [sp, #16]
    1654:	str	x1, [sp, #8]
    1658:	ldr	x8, [sp, #16]
    165c:	ldr	w9, [x8, #552]
    1660:	and	w9, w9, #0x2
    1664:	cbnz	w9, 1674 <ctf_dynamic_type+0x30>
    1668:	mov	x8, xzr
    166c:	stur	x8, [x29, #-8]
    1670:	b	16f0 <ctf_dynamic_type+0xac>
    1674:	ldr	x8, [sp, #16]
    1678:	ldr	w9, [x8, #552]
    167c:	and	w9, w9, #0x1
    1680:	cbz	w9, 16a8 <ctf_dynamic_type+0x64>
    1684:	ldr	x8, [sp, #8]
    1688:	ldr	x9, [sp, #16]
    168c:	ldr	w10, [x9, #544]
    1690:	mov	w9, w10
    1694:	cmp	x8, x9
    1698:	b.hi	16a8 <ctf_dynamic_type+0x64>  // b.pmore
    169c:	ldr	x8, [sp, #16]
    16a0:	ldr	x8, [x8, #512]
    16a4:	str	x8, [sp, #16]
    16a8:	ldr	x8, [sp, #8]
    16ac:	ldr	x9, [sp, #16]
    16b0:	ldr	w10, [x9, #544]
    16b4:	mov	w9, w10
    16b8:	and	x8, x8, x9
    16bc:	str	x8, [sp]
    16c0:	ldr	x8, [sp]
    16c4:	ldr	x9, [sp, #16]
    16c8:	ldr	x9, [x9, #480]
    16cc:	cmp	x8, x9
    16d0:	b.hi	16e8 <ctf_dynamic_type+0xa4>  // b.pmore
    16d4:	ldr	x0, [sp, #16]
    16d8:	ldr	x1, [sp, #8]
    16dc:	bl	1610 <ctf_dtd_lookup>
    16e0:	stur	x0, [x29, #-8]
    16e4:	b	16f0 <ctf_dynamic_type+0xac>
    16e8:	mov	x8, xzr
    16ec:	stur	x8, [x29, #-8]
    16f0:	ldur	x0, [x29, #-8]
    16f4:	ldp	x29, x30, [sp, #32]
    16f8:	add	sp, sp, #0x30
    16fc:	ret

0000000000001700 <ctf_dvd_insert>:
    1700:	sub	sp, sp, #0x30
    1704:	stp	x29, x30, [sp, #32]
    1708:	add	x29, sp, #0x20
    170c:	str	x0, [sp, #16]
    1710:	str	x1, [sp, #8]
    1714:	ldr	x8, [sp, #16]
    1718:	ldr	x0, [x8, #592]
    171c:	ldr	x8, [sp, #8]
    1720:	ldr	x1, [x8, #16]
    1724:	ldr	x2, [sp, #8]
    1728:	bl	0 <ctf_dynhash_insert>
    172c:	cmp	w0, #0x0
    1730:	cset	w9, ge  // ge = tcont
    1734:	tbnz	w9, #0, 1744 <ctf_dvd_insert+0x44>
    1738:	mov	w8, #0xffffffff            	// #-1
    173c:	stur	w8, [x29, #-4]
    1740:	b	1758 <ctf_dvd_insert+0x58>
    1744:	ldr	x8, [sp, #16]
    1748:	add	x0, x8, #0x258
    174c:	ldr	x1, [sp, #8]
    1750:	bl	0 <ctf_list_append>
    1754:	stur	wzr, [x29, #-4]
    1758:	ldur	w0, [x29, #-4]
    175c:	ldp	x29, x30, [sp, #32]
    1760:	add	sp, sp, #0x30
    1764:	ret

0000000000001768 <ctf_dvd_delete>:
    1768:	sub	sp, sp, #0x20
    176c:	stp	x29, x30, [sp, #16]
    1770:	add	x29, sp, #0x10
    1774:	str	x0, [sp, #8]
    1778:	str	x1, [sp]
    177c:	ldr	x8, [sp, #8]
    1780:	ldr	x0, [x8, #592]
    1784:	ldr	x8, [sp]
    1788:	ldr	x1, [x8, #16]
    178c:	bl	0 <ctf_dynhash_remove>
    1790:	ldr	x8, [sp]
    1794:	ldr	x0, [x8, #16]
    1798:	bl	0 <free>
    179c:	ldr	x8, [sp, #8]
    17a0:	add	x0, x8, #0x258
    17a4:	ldr	x1, [sp]
    17a8:	bl	0 <ctf_list_delete>
    17ac:	ldr	x0, [sp]
    17b0:	bl	0 <free>
    17b4:	ldp	x29, x30, [sp, #16]
    17b8:	add	sp, sp, #0x20
    17bc:	ret

00000000000017c0 <ctf_dvd_lookup>:
    17c0:	sub	sp, sp, #0x20
    17c4:	stp	x29, x30, [sp, #16]
    17c8:	add	x29, sp, #0x10
    17cc:	str	x0, [sp, #8]
    17d0:	str	x1, [sp]
    17d4:	ldr	x8, [sp, #8]
    17d8:	ldr	x0, [x8, #592]
    17dc:	ldr	x1, [sp]
    17e0:	bl	0 <ctf_dynhash_lookup>
    17e4:	ldp	x29, x30, [sp, #16]
    17e8:	add	sp, sp, #0x20
    17ec:	ret

00000000000017f0 <ctf_discard>:
    17f0:	sub	sp, sp, #0x30
    17f4:	stp	x29, x30, [sp, #32]
    17f8:	add	x29, sp, #0x20
    17fc:	str	x0, [sp, #16]
    1800:	ldr	x8, [sp, #16]
    1804:	ldr	x8, [x8, #616]
    1808:	str	x8, [sp]
    180c:	ldr	x8, [sp, #16]
    1810:	ldr	x8, [x8, #632]
    1814:	add	x8, x8, #0x1
    1818:	str	x8, [sp, #8]
    181c:	ldr	x8, [sp, #16]
    1820:	ldr	w9, [x8, #552]
    1824:	and	w9, w9, #0x4
    1828:	cbnz	w9, 1834 <ctf_discard+0x44>
    182c:	stur	wzr, [x29, #-4]
    1830:	b	1848 <ctf_discard+0x58>
    1834:	ldr	x0, [sp, #16]
    1838:	ldr	x1, [sp]
    183c:	ldr	x2, [sp, #8]
    1840:	bl	1858 <ctf_rollback>
    1844:	stur	w0, [x29, #-4]
    1848:	ldur	w0, [x29, #-4]
    184c:	ldp	x29, x30, [sp, #32]
    1850:	add	sp, sp, #0x30
    1854:	ret

0000000000001858 <ctf_rollback>:
    1858:	sub	sp, sp, #0x60
    185c:	stp	x29, x30, [sp, #80]
    1860:	add	x29, sp, #0x50
    1864:	stur	x1, [x29, #-24]
    1868:	stur	x2, [x29, #-16]
    186c:	stur	x0, [x29, #-32]
    1870:	ldur	x8, [x29, #-32]
    1874:	ldr	w9, [x8, #552]
    1878:	and	w9, w9, #0x2
    187c:	cbnz	w9, 1894 <ctf_rollback+0x3c>
    1880:	ldur	x0, [x29, #-32]
    1884:	mov	w1, #0x40d                 	// #1037
    1888:	bl	0 <ctf_set_errno>
    188c:	stur	w0, [x29, #-4]
    1890:	b	1a34 <ctf_rollback+0x1dc>
    1894:	ldur	x8, [x29, #-32]
    1898:	ldr	x8, [x8, #632]
    189c:	ldur	x9, [x29, #-16]
    18a0:	cmp	x8, x9
    18a4:	b.cc	18bc <ctf_rollback+0x64>  // b.lo, b.ul, b.last
    18a8:	ldur	x0, [x29, #-32]
    18ac:	mov	w1, #0x412                 	// #1042
    18b0:	bl	0 <ctf_set_errno>
    18b4:	stur	w0, [x29, #-4]
    18b8:	b	1a34 <ctf_rollback+0x1dc>
    18bc:	ldur	x8, [x29, #-32]
    18c0:	ldr	x8, [x8, #584]
    18c4:	str	x8, [sp, #40]
    18c8:	ldr	x8, [sp, #40]
    18cc:	cbz	x8, 19a0 <ctf_rollback+0x148>
    18d0:	ldr	x8, [sp, #40]
    18d4:	ldr	x8, [x8, #8]
    18d8:	str	x8, [sp, #32]
    18dc:	ldr	x8, [sp, #40]
    18e0:	ldr	x8, [x8, #16]
    18e4:	ldur	x9, [x29, #-32]
    18e8:	ldr	w10, [x9, #544]
    18ec:	mov	w9, w10
    18f0:	and	x8, x8, x9
    18f4:	ldur	x9, [x29, #-24]
    18f8:	cmp	x8, x9
    18fc:	b.hi	1904 <ctf_rollback+0xac>  // b.pmore
    1900:	b	1994 <ctf_rollback+0x13c>
    1904:	ldur	x8, [x29, #-32]
    1908:	ldr	x8, [x8]
    190c:	ldr	x8, [x8]
    1910:	ldr	x9, [sp, #40]
    1914:	ldr	w0, [x9, #28]
    1918:	blr	x8
    191c:	str	w0, [sp, #12]
    1920:	ldr	x8, [sp, #40]
    1924:	ldr	w10, [x8, #24]
    1928:	cbz	w10, 1970 <ctf_rollback+0x118>
    192c:	ldur	x0, [x29, #-32]
    1930:	ldr	x8, [sp, #40]
    1934:	ldr	w1, [x8, #24]
    1938:	bl	0 <ctf_strraw>
    193c:	str	x0, [sp]
    1940:	cbz	x0, 1970 <ctf_rollback+0x118>
    1944:	ldur	x0, [x29, #-32]
    1948:	ldr	w1, [sp, #12]
    194c:	bl	1358 <ctf_name_table>
    1950:	ldr	x0, [x0, #8]
    1954:	ldr	x1, [sp]
    1958:	bl	0 <ctf_dynhash_remove>
    195c:	ldur	x0, [x29, #-32]
    1960:	ldr	x1, [sp]
    1964:	ldr	x8, [sp, #40]
    1968:	add	x2, x8, #0x18
    196c:	bl	0 <ctf_str_remove_ref>
    1970:	ldur	x8, [x29, #-32]
    1974:	ldr	x0, [x8, #568]
    1978:	ldr	x8, [sp, #40]
    197c:	ldr	x8, [x8, #16]
    1980:	mov	x1, x8
    1984:	bl	0 <ctf_dynhash_remove>
    1988:	ldur	x0, [x29, #-32]
    198c:	ldr	x1, [sp, #40]
    1990:	bl	14c8 <ctf_dtd_delete>
    1994:	ldr	x8, [sp, #32]
    1998:	str	x8, [sp, #40]
    199c:	b	18c8 <ctf_rollback+0x70>
    19a0:	ldur	x8, [x29, #-32]
    19a4:	ldr	x8, [x8, #608]
    19a8:	str	x8, [sp, #24]
    19ac:	ldr	x8, [sp, #24]
    19b0:	cbz	x8, 19f0 <ctf_rollback+0x198>
    19b4:	ldr	x8, [sp, #24]
    19b8:	ldr	x8, [x8, #8]
    19bc:	str	x8, [sp, #16]
    19c0:	ldr	x8, [sp, #24]
    19c4:	ldr	x8, [x8, #32]
    19c8:	ldur	x9, [x29, #-16]
    19cc:	cmp	x8, x9
    19d0:	b.hi	19d8 <ctf_rollback+0x180>  // b.pmore
    19d4:	b	19e4 <ctf_rollback+0x18c>
    19d8:	ldur	x0, [x29, #-32]
    19dc:	ldr	x1, [sp, #24]
    19e0:	bl	1768 <ctf_dvd_delete>
    19e4:	ldr	x8, [sp, #16]
    19e8:	str	x8, [sp, #24]
    19ec:	b	19ac <ctf_rollback+0x154>
    19f0:	ldur	x8, [x29, #-24]
    19f4:	ldur	x9, [x29, #-32]
    19f8:	str	x8, [x9, #480]
    19fc:	ldur	x8, [x29, #-16]
    1a00:	ldur	x9, [x29, #-32]
    1a04:	str	x8, [x9, #624]
    1a08:	ldur	x8, [x29, #-32]
    1a0c:	ldr	x8, [x8, #624]
    1a10:	ldur	x9, [x29, #-32]
    1a14:	ldr	x9, [x9, #632]
    1a18:	cmp	x8, x9
    1a1c:	b.ne	1a30 <ctf_rollback+0x1d8>  // b.any
    1a20:	ldur	x8, [x29, #-32]
    1a24:	ldr	w9, [x8, #552]
    1a28:	and	w9, w9, #0xfffffffb
    1a2c:	str	w9, [x8, #552]
    1a30:	stur	wzr, [x29, #-4]
    1a34:	ldur	w0, [x29, #-4]
    1a38:	ldp	x29, x30, [sp, #80]
    1a3c:	add	sp, sp, #0x60
    1a40:	ret

0000000000001a44 <ctf_snapshot>:
    1a44:	sub	sp, sp, #0x20
    1a48:	str	x0, [sp, #8]
    1a4c:	ldr	x8, [sp, #8]
    1a50:	ldr	x8, [x8, #480]
    1a54:	str	x8, [sp, #16]
    1a58:	ldr	x8, [sp, #8]
    1a5c:	ldr	x9, [x8, #624]
    1a60:	add	x10, x9, #0x1
    1a64:	str	x10, [x8, #624]
    1a68:	str	x9, [sp, #24]
    1a6c:	ldr	x0, [sp, #16]
    1a70:	ldr	x1, [sp, #24]
    1a74:	add	sp, sp, #0x20
    1a78:	ret

0000000000001a7c <ctf_add_slice>:
    1a7c:	sub	sp, sp, #0x60
    1a80:	stp	x29, x30, [sp, #80]
    1a84:	add	x29, sp, #0x50
    1a88:	stur	x0, [x29, #-16]
    1a8c:	stur	w1, [x29, #-20]
    1a90:	stur	x2, [x29, #-32]
    1a94:	str	x3, [sp, #40]
    1a98:	ldur	x8, [x29, #-16]
    1a9c:	str	x8, [sp]
    1aa0:	ldr	x8, [sp, #40]
    1aa4:	cbnz	x8, 1abc <ctf_add_slice+0x40>
    1aa8:	ldur	x0, [x29, #-16]
    1aac:	mov	w1, #0x16                  	// #22
    1ab0:	bl	0 <ctf_set_errno>
    1ab4:	stur	x0, [x29, #-8]
    1ab8:	b	1c4c <ctf_add_slice+0x1d0>
    1abc:	ldr	x8, [sp, #40]
    1ac0:	ldr	w9, [x8, #8]
    1ac4:	cmp	w9, #0xff
    1ac8:	b.hi	1adc <ctf_add_slice+0x60>  // b.pmore
    1acc:	ldr	x8, [sp, #40]
    1ad0:	ldr	w9, [x8, #4]
    1ad4:	cmp	w9, #0xff
    1ad8:	b.ls	1af0 <ctf_add_slice+0x74>  // b.plast
    1adc:	ldur	x0, [x29, #-16]
    1ae0:	mov	w1, #0x416                 	// #1046
    1ae4:	bl	0 <ctf_set_errno>
    1ae8:	stur	x0, [x29, #-8]
    1aec:	b	1c4c <ctf_add_slice+0x1d0>
    1af0:	ldur	x8, [x29, #-32]
    1af4:	mov	x9, #0xffffffffffffffff    	// #-1
    1af8:	cmp	x8, x9
    1afc:	b.eq	1b10 <ctf_add_slice+0x94>  // b.none
    1b00:	ldur	x8, [x29, #-32]
    1b04:	mov	x9, #0xfffffffe            	// #4294967294
    1b08:	cmp	x8, x9
    1b0c:	b.ls	1b24 <ctf_add_slice+0xa8>  // b.plast
    1b10:	ldur	x0, [x29, #-16]
    1b14:	mov	w1, #0x16                  	// #22
    1b18:	bl	0 <ctf_set_errno>
    1b1c:	stur	x0, [x29, #-8]
    1b20:	b	1c4c <ctf_add_slice+0x1d0>
    1b24:	ldur	x1, [x29, #-32]
    1b28:	mov	x0, sp
    1b2c:	bl	0 <ctf_lookup_by_id>
    1b30:	str	x0, [sp, #8]
    1b34:	cbnz	x0, 1b44 <ctf_add_slice+0xc8>
    1b38:	mov	x8, #0xffffffffffffffff    	// #-1
    1b3c:	stur	x8, [x29, #-8]
    1b40:	b	1c4c <ctf_add_slice+0x1d0>
    1b44:	ldr	x0, [sp]
    1b48:	ldur	x1, [x29, #-32]
    1b4c:	bl	0 <ctf_type_kind_unsliced>
    1b50:	str	w0, [sp, #20]
    1b54:	ldr	w8, [sp, #20]
    1b58:	cmp	w8, #0x1
    1b5c:	b.eq	1b8c <ctf_add_slice+0x110>  // b.none
    1b60:	ldr	w8, [sp, #20]
    1b64:	cmp	w8, #0x2
    1b68:	b.eq	1b8c <ctf_add_slice+0x110>  // b.none
    1b6c:	ldr	w8, [sp, #20]
    1b70:	cmp	w8, #0x8
    1b74:	b.eq	1b8c <ctf_add_slice+0x110>  // b.none
    1b78:	ldur	x0, [x29, #-16]
    1b7c:	mov	w1, #0x3fe                 	// #1022
    1b80:	bl	0 <ctf_set_errno>
    1b84:	stur	x0, [x29, #-8]
    1b88:	b	1c4c <ctf_add_slice+0x1d0>
    1b8c:	ldur	x0, [x29, #-16]
    1b90:	ldur	w1, [x29, #-20]
    1b94:	mov	x8, xzr
    1b98:	mov	x2, x8
    1b9c:	mov	w3, #0xe                   	// #14
    1ba0:	add	x4, sp, #0x20
    1ba4:	bl	1c5c <ctf_add_generic>
    1ba8:	str	x0, [sp, #24]
    1bac:	mov	x8, #0xffffffffffffffff    	// #-1
    1bb0:	cmp	x0, x8
    1bb4:	b.ne	1bc4 <ctf_add_slice+0x148>  // b.any
    1bb8:	mov	x8, #0xffffffffffffffff    	// #-1
    1bbc:	stur	x8, [x29, #-8]
    1bc0:	b	1c4c <ctf_add_slice+0x1d0>
    1bc4:	ldur	w8, [x29, #-20]
    1bc8:	mov	w9, wzr
    1bcc:	mov	w10, #0x1                   	// #1
    1bd0:	cmp	w8, #0x0
    1bd4:	csel	w8, w10, w9, ne  // ne = any
    1bd8:	mov	w10, #0x38000000            	// #939524096
    1bdc:	orr	w8, w10, w8, lsl #25
    1be0:	ldr	x11, [sp, #32]
    1be4:	str	w8, [x11, #28]
    1be8:	ldr	x11, [sp, #40]
    1bec:	ldr	w8, [x11, #8]
    1bf0:	subs	w8, w9, w8
    1bf4:	and	w8, w8, #0xfffffff8
    1bf8:	subs	w8, w9, w8
    1bfc:	mov	w9, #0x8                   	// #8
    1c00:	udiv	w8, w8, w9
    1c04:	mov	w11, w8
    1c08:	ubfx	x0, x11, #0, #32
    1c0c:	bl	1ec0 <clp2>
    1c10:	ldr	x11, [sp, #32]
    1c14:	str	w0, [x11, #32]
    1c18:	ldur	x11, [x29, #-32]
    1c1c:	ldr	x12, [sp, #32]
    1c20:	str	w11, [x12, #48]
    1c24:	ldr	x12, [sp, #40]
    1c28:	ldr	w8, [x12, #8]
    1c2c:	ldr	x12, [sp, #32]
    1c30:	strh	w8, [x12, #54]
    1c34:	ldr	x12, [sp, #40]
    1c38:	ldr	w8, [x12, #4]
    1c3c:	ldr	x12, [sp, #32]
    1c40:	strh	w8, [x12, #52]
    1c44:	ldr	x12, [sp, #24]
    1c48:	stur	x12, [x29, #-8]
    1c4c:	ldur	x0, [x29, #-8]
    1c50:	ldp	x29, x30, [sp, #80]
    1c54:	add	sp, sp, #0x60
    1c58:	ret

0000000000001c5c <ctf_add_generic>:
    1c5c:	sub	sp, sp, #0x60
    1c60:	stp	x29, x30, [sp, #80]
    1c64:	add	x29, sp, #0x50
    1c68:	stur	x0, [x29, #-16]
    1c6c:	stur	w1, [x29, #-20]
    1c70:	stur	x2, [x29, #-32]
    1c74:	stur	w3, [x29, #-36]
    1c78:	str	x4, [sp, #32]
    1c7c:	ldur	w8, [x29, #-20]
    1c80:	cbz	w8, 1ca4 <ctf_add_generic+0x48>
    1c84:	ldur	w8, [x29, #-20]
    1c88:	cmp	w8, #0x1
    1c8c:	b.eq	1ca4 <ctf_add_generic+0x48>  // b.none
    1c90:	ldur	x0, [x29, #-16]
    1c94:	mov	w1, #0x16                  	// #22
    1c98:	bl	0 <ctf_set_errno>
    1c9c:	stur	x0, [x29, #-8]
    1ca0:	b	1eb0 <ctf_add_generic+0x254>
    1ca4:	ldur	x8, [x29, #-16]
    1ca8:	ldr	w9, [x8, #552]
    1cac:	and	w9, w9, #0x2
    1cb0:	cbnz	w9, 1cc8 <ctf_add_generic+0x6c>
    1cb4:	ldur	x0, [x29, #-16]
    1cb8:	mov	w1, #0x40d                 	// #1037
    1cbc:	bl	0 <ctf_set_errno>
    1cc0:	stur	x0, [x29, #-8]
    1cc4:	b	1eb0 <ctf_add_generic+0x254>
    1cc8:	ldur	x8, [x29, #-16]
    1ccc:	ldr	x8, [x8, #480]
    1cd0:	ldur	x9, [x29, #-16]
    1cd4:	ldr	w10, [x9, #544]
    1cd8:	add	w10, w10, #0x1
    1cdc:	mov	w9, w10
    1ce0:	ubfx	x9, x9, #0, #32
    1ce4:	orr	x8, x8, x9
    1ce8:	mov	x9, #0xfffffffe            	// #4294967294
    1cec:	cmp	x8, x9
    1cf0:	b.cc	1d08 <ctf_add_generic+0xac>  // b.lo, b.ul, b.last
    1cf4:	ldur	x0, [x29, #-16]
    1cf8:	mov	w1, #0x40f                 	// #1039
    1cfc:	bl	0 <ctf_set_errno>
    1d00:	stur	x0, [x29, #-8]
    1d04:	b	1eb0 <ctf_add_generic+0x254>
    1d08:	ldur	x8, [x29, #-16]
    1d0c:	ldr	x8, [x8, #480]
    1d10:	ldur	x9, [x29, #-16]
    1d14:	ldr	w10, [x9, #544]
    1d18:	add	w10, w10, #0x1
    1d1c:	mov	w9, w10
    1d20:	ubfx	x9, x9, #0, #32
    1d24:	orr	x8, x8, x9
    1d28:	mov	x9, #0x7ffffffe            	// #2147483646
    1d2c:	cmp	x8, x9
    1d30:	b.ne	1d48 <ctf_add_generic+0xec>  // b.any
    1d34:	ldur	x0, [x29, #-16]
    1d38:	mov	w1, #0x40f                 	// #1039
    1d3c:	bl	0 <ctf_set_errno>
    1d40:	stur	x0, [x29, #-8]
    1d44:	b	1eb0 <ctf_add_generic+0x254>
    1d48:	ldur	x0, [x29, #-16]
    1d4c:	bl	2dc <ctf_grow_ptrtab>
    1d50:	cmp	w0, #0x0
    1d54:	cset	w8, ge  // ge = tcont
    1d58:	tbnz	w8, #0, 1d68 <ctf_add_generic+0x10c>
    1d5c:	mov	x8, #0xffffffffffffffff    	// #-1
    1d60:	stur	x8, [x29, #-8]
    1d64:	b	1eb0 <ctf_add_generic+0x254>
    1d68:	mov	x0, #0x48                  	// #72
    1d6c:	bl	0 <malloc>
    1d70:	str	x0, [sp, #24]
    1d74:	cbnz	x0, 1d8c <ctf_add_generic+0x130>
    1d78:	ldur	x0, [x29, #-16]
    1d7c:	mov	w1, #0xb                   	// #11
    1d80:	bl	0 <ctf_set_errno>
    1d84:	stur	x0, [x29, #-8]
    1d88:	b	1eb0 <ctf_add_generic+0x254>
    1d8c:	ldur	x8, [x29, #-16]
    1d90:	ldr	x9, [x8, #480]
    1d94:	add	x9, x9, #0x1
    1d98:	str	x9, [x8, #480]
    1d9c:	str	x9, [sp, #16]
    1da0:	ldur	x8, [x29, #-16]
    1da4:	ldr	w10, [x8, #552]
    1da8:	and	w10, w10, #0x1
    1dac:	cbz	w10, 1dd4 <ctf_add_generic+0x178>
    1db0:	ldr	x8, [sp, #16]
    1db4:	ldur	x9, [x29, #-16]
    1db8:	ldr	w10, [x9, #544]
    1dbc:	add	w10, w10, #0x1
    1dc0:	mov	w9, w10
    1dc4:	ubfx	x9, x9, #0, #32
    1dc8:	orr	x8, x8, x9
    1dcc:	str	x8, [sp, #8]
    1dd0:	b	1ddc <ctf_add_generic+0x180>
    1dd4:	ldr	x8, [sp, #16]
    1dd8:	str	x8, [sp, #8]
    1ddc:	ldr	x8, [sp, #8]
    1de0:	str	x8, [sp, #16]
    1de4:	ldr	x0, [sp, #24]
    1de8:	mov	w9, wzr
    1dec:	mov	w1, w9
    1df0:	mov	x2, #0x48                  	// #72
    1df4:	bl	0 <memset>
    1df8:	ldur	x0, [x29, #-16]
    1dfc:	ldur	x1, [x29, #-32]
    1e00:	ldr	x8, [sp, #24]
    1e04:	add	x2, x8, #0x18
    1e08:	bl	0 <ctf_str_add_ref>
    1e0c:	ldr	x8, [sp, #24]
    1e10:	str	w0, [x8, #24]
    1e14:	ldr	x8, [sp, #16]
    1e18:	ldr	x10, [sp, #24]
    1e1c:	str	x8, [x10, #16]
    1e20:	ldr	x8, [sp, #24]
    1e24:	ldr	w9, [x8, #24]
    1e28:	cbnz	w9, 1e5c <ctf_add_generic+0x200>
    1e2c:	ldur	x8, [x29, #-32]
    1e30:	cbz	x8, 1e5c <ctf_add_generic+0x200>
    1e34:	ldur	x8, [x29, #-32]
    1e38:	ldrb	w9, [x8]
    1e3c:	cbz	w9, 1e5c <ctf_add_generic+0x200>
    1e40:	ldr	x0, [sp, #24]
    1e44:	bl	0 <free>
    1e48:	ldur	x0, [x29, #-16]
    1e4c:	mov	w1, #0xb                   	// #11
    1e50:	bl	0 <ctf_set_errno>
    1e54:	stur	x0, [x29, #-8]
    1e58:	b	1eb0 <ctf_add_generic+0x254>
    1e5c:	ldur	x0, [x29, #-16]
    1e60:	ldr	x1, [sp, #24]
    1e64:	ldur	w2, [x29, #-36]
    1e68:	bl	13e0 <ctf_dtd_insert>
    1e6c:	cmp	w0, #0x0
    1e70:	cset	w8, ge  // ge = tcont
    1e74:	tbnz	w8, #0, 1e8c <ctf_add_generic+0x230>
    1e78:	ldr	x0, [sp, #24]
    1e7c:	bl	0 <free>
    1e80:	mov	x8, #0xffffffffffffffff    	// #-1
    1e84:	stur	x8, [x29, #-8]
    1e88:	b	1eb0 <ctf_add_generic+0x254>
    1e8c:	ldur	x8, [x29, #-16]
    1e90:	ldr	w9, [x8, #552]
    1e94:	orr	w9, w9, #0x4
    1e98:	str	w9, [x8, #552]
    1e9c:	ldr	x8, [sp, #24]
    1ea0:	ldr	x10, [sp, #32]
    1ea4:	str	x8, [x10]
    1ea8:	ldr	x8, [sp, #16]
    1eac:	stur	x8, [x29, #-8]
    1eb0:	ldur	x0, [x29, #-8]
    1eb4:	ldp	x29, x30, [sp, #80]
    1eb8:	add	sp, sp, #0x60
    1ebc:	ret

0000000000001ec0 <clp2>:
    1ec0:	sub	sp, sp, #0x10
    1ec4:	str	x0, [sp, #8]
    1ec8:	ldr	x8, [sp, #8]
    1ecc:	subs	x8, x8, #0x1
    1ed0:	str	x8, [sp, #8]
    1ed4:	ldr	x8, [sp, #8]
    1ed8:	ldr	x9, [sp, #8]
    1edc:	orr	x8, x9, x8, lsr #1
    1ee0:	str	x8, [sp, #8]
    1ee4:	ldr	x8, [sp, #8]
    1ee8:	ldr	x9, [sp, #8]
    1eec:	orr	x8, x9, x8, lsr #2
    1ef0:	str	x8, [sp, #8]
    1ef4:	ldr	x8, [sp, #8]
    1ef8:	ldr	x9, [sp, #8]
    1efc:	orr	x8, x9, x8, lsr #4
    1f00:	str	x8, [sp, #8]
    1f04:	ldr	x8, [sp, #8]
    1f08:	ldr	x9, [sp, #8]
    1f0c:	orr	x8, x9, x8, lsr #8
    1f10:	str	x8, [sp, #8]
    1f14:	ldr	x8, [sp, #8]
    1f18:	ldr	x9, [sp, #8]
    1f1c:	orr	x8, x9, x8, lsr #16
    1f20:	str	x8, [sp, #8]
    1f24:	ldr	x8, [sp, #8]
    1f28:	add	x0, x8, #0x1
    1f2c:	add	sp, sp, #0x10
    1f30:	ret

0000000000001f34 <ctf_add_integer>:
    1f34:	sub	sp, sp, #0x30
    1f38:	stp	x29, x30, [sp, #32]
    1f3c:	add	x29, sp, #0x20
    1f40:	mov	w4, #0x1                   	// #1
    1f44:	stur	x0, [x29, #-8]
    1f48:	stur	w1, [x29, #-12]
    1f4c:	str	x2, [sp, #8]
    1f50:	str	x3, [sp]
    1f54:	ldur	x0, [x29, #-8]
    1f58:	ldur	w1, [x29, #-12]
    1f5c:	ldr	x2, [sp, #8]
    1f60:	ldr	x3, [sp]
    1f64:	bl	1f74 <ctf_add_encoded>
    1f68:	ldp	x29, x30, [sp, #32]
    1f6c:	add	sp, sp, #0x30
    1f70:	ret

0000000000001f74 <ctf_add_encoded>:
    1f74:	sub	sp, sp, #0x50
    1f78:	stp	x29, x30, [sp, #64]
    1f7c:	add	x29, sp, #0x40
    1f80:	stur	x0, [x29, #-16]
    1f84:	stur	w1, [x29, #-20]
    1f88:	str	x2, [sp, #32]
    1f8c:	str	x3, [sp, #24]
    1f90:	str	w4, [sp, #20]
    1f94:	ldr	x8, [sp, #24]
    1f98:	cbnz	x8, 1fb0 <ctf_add_encoded+0x3c>
    1f9c:	ldur	x0, [x29, #-16]
    1fa0:	mov	w1, #0x16                  	// #22
    1fa4:	bl	0 <ctf_set_errno>
    1fa8:	stur	x0, [x29, #-8]
    1fac:	b	205c <ctf_add_encoded+0xe8>
    1fb0:	ldur	x0, [x29, #-16]
    1fb4:	ldur	w1, [x29, #-20]
    1fb8:	ldr	x2, [sp, #32]
    1fbc:	ldr	w3, [sp, #20]
    1fc0:	add	x4, sp, #0x8
    1fc4:	bl	1c5c <ctf_add_generic>
    1fc8:	str	x0, [sp]
    1fcc:	mov	x8, #0xffffffffffffffff    	// #-1
    1fd0:	cmp	x0, x8
    1fd4:	b.ne	1fe4 <ctf_add_encoded+0x70>  // b.any
    1fd8:	mov	x8, #0xffffffffffffffff    	// #-1
    1fdc:	stur	x8, [x29, #-8]
    1fe0:	b	205c <ctf_add_encoded+0xe8>
    1fe4:	ldr	w8, [sp, #20]
    1fe8:	ldur	w9, [x29, #-20]
    1fec:	mov	w10, wzr
    1ff0:	mov	w11, #0x1                   	// #1
    1ff4:	cmp	w9, #0x0
    1ff8:	csel	w9, w11, w10, ne  // ne = any
    1ffc:	lsl	w9, w9, #25
    2000:	orr	w8, w9, w8, lsl #26
    2004:	ldr	x12, [sp, #8]
    2008:	str	w8, [x12, #28]
    200c:	ldr	x12, [sp, #24]
    2010:	ldr	w8, [x12, #8]
    2014:	subs	w8, w10, w8
    2018:	and	w8, w8, #0xfffffff8
    201c:	subs	w8, w10, w8
    2020:	mov	w9, #0x8                   	// #8
    2024:	udiv	w8, w8, w9
    2028:	mov	w12, w8
    202c:	ubfx	x0, x12, #0, #32
    2030:	bl	1ec0 <clp2>
    2034:	ldr	x12, [sp, #8]
    2038:	str	w0, [x12, #32]
    203c:	ldr	x12, [sp, #8]
    2040:	ldr	x13, [sp, #24]
    2044:	ldr	x14, [x13]
    2048:	str	x14, [x12, #48]
    204c:	ldr	w8, [x13, #8]
    2050:	str	w8, [x12, #56]
    2054:	ldr	x12, [sp]
    2058:	stur	x12, [x29, #-8]
    205c:	ldur	x0, [x29, #-8]
    2060:	ldp	x29, x30, [sp, #64]
    2064:	add	sp, sp, #0x50
    2068:	ret

000000000000206c <ctf_add_float>:
    206c:	sub	sp, sp, #0x30
    2070:	stp	x29, x30, [sp, #32]
    2074:	add	x29, sp, #0x20
    2078:	mov	w4, #0x2                   	// #2
    207c:	stur	x0, [x29, #-8]
    2080:	stur	w1, [x29, #-12]
    2084:	str	x2, [sp, #8]
    2088:	str	x3, [sp]
    208c:	ldur	x0, [x29, #-8]
    2090:	ldur	w1, [x29, #-12]
    2094:	ldr	x2, [sp, #8]
    2098:	ldr	x3, [sp]
    209c:	bl	1f74 <ctf_add_encoded>
    20a0:	ldp	x29, x30, [sp, #32]
    20a4:	add	sp, sp, #0x30
    20a8:	ret

00000000000020ac <ctf_add_pointer>:
    20ac:	sub	sp, sp, #0x30
    20b0:	stp	x29, x30, [sp, #32]
    20b4:	add	x29, sp, #0x20
    20b8:	mov	w3, #0x3                   	// #3
    20bc:	stur	x0, [x29, #-8]
    20c0:	stur	w1, [x29, #-12]
    20c4:	str	x2, [sp, #8]
    20c8:	ldur	x0, [x29, #-8]
    20cc:	ldur	w1, [x29, #-12]
    20d0:	ldr	x2, [sp, #8]
    20d4:	bl	20e4 <ctf_add_reftype>
    20d8:	ldp	x29, x30, [sp, #32]
    20dc:	add	sp, sp, #0x30
    20e0:	ret

00000000000020e4 <ctf_add_reftype>:
    20e4:	sub	sp, sp, #0x70
    20e8:	stp	x29, x30, [sp, #96]
    20ec:	add	x29, sp, #0x60
    20f0:	mov	x8, #0xffffffffffffffff    	// #-1
    20f4:	stur	x0, [x29, #-16]
    20f8:	stur	w1, [x29, #-20]
    20fc:	stur	x2, [x29, #-32]
    2100:	stur	w3, [x29, #-36]
    2104:	ldur	x9, [x29, #-16]
    2108:	str	x9, [sp, #32]
    210c:	ldur	x9, [x29, #-16]
    2110:	ldr	w10, [x9, #552]
    2114:	and	w10, w10, #0x1
    2118:	str	w10, [sp, #28]
    211c:	ldur	x9, [x29, #-32]
    2120:	cmp	x9, x8
    2124:	b.eq	2138 <ctf_add_reftype+0x54>  // b.none
    2128:	ldur	x8, [x29, #-32]
    212c:	mov	x9, #0xfffffffe            	// #4294967294
    2130:	cmp	x8, x9
    2134:	b.ls	214c <ctf_add_reftype+0x68>  // b.plast
    2138:	ldur	x0, [x29, #-16]
    213c:	mov	w1, #0x16                  	// #22
    2140:	bl	0 <ctf_set_errno>
    2144:	stur	x0, [x29, #-8]
    2148:	b	2314 <ctf_add_reftype+0x230>
    214c:	ldur	x1, [x29, #-32]
    2150:	add	x0, sp, #0x20
    2154:	bl	0 <ctf_lookup_by_id>
    2158:	cbnz	x0, 2168 <ctf_add_reftype+0x84>
    215c:	mov	x8, #0xffffffffffffffff    	// #-1
    2160:	stur	x8, [x29, #-8]
    2164:	b	2314 <ctf_add_reftype+0x230>
    2168:	ldur	x0, [x29, #-16]
    216c:	ldur	w1, [x29, #-20]
    2170:	ldur	w3, [x29, #-36]
    2174:	mov	x8, xzr
    2178:	mov	x2, x8
    217c:	add	x4, sp, #0x30
    2180:	bl	1c5c <ctf_add_generic>
    2184:	str	x0, [sp, #40]
    2188:	mov	x8, #0xffffffffffffffff    	// #-1
    218c:	cmp	x0, x8
    2190:	b.ne	21a0 <ctf_add_reftype+0xbc>  // b.any
    2194:	mov	x8, #0xffffffffffffffff    	// #-1
    2198:	stur	x8, [x29, #-8]
    219c:	b	2314 <ctf_add_reftype+0x230>
    21a0:	ldur	w8, [x29, #-36]
    21a4:	ldur	w9, [x29, #-20]
    21a8:	mov	w10, wzr
    21ac:	mov	w11, #0x1                   	// #1
    21b0:	cmp	w9, #0x0
    21b4:	csel	w9, w11, w10, ne  // ne = any
    21b8:	lsl	w9, w9, #25
    21bc:	orr	w8, w9, w8, lsl #26
    21c0:	ldr	x12, [sp, #48]
    21c4:	str	w8, [x12, #28]
    21c8:	ldur	x12, [x29, #-32]
    21cc:	ldr	x13, [sp, #48]
    21d0:	str	w12, [x13, #32]
    21d4:	ldur	w8, [x29, #-36]
    21d8:	cmp	w8, #0x3
    21dc:	b.eq	21ec <ctf_add_reftype+0x108>  // b.none
    21e0:	ldr	x8, [sp, #40]
    21e4:	stur	x8, [x29, #-8]
    21e8:	b	2314 <ctf_add_reftype+0x230>
    21ec:	ldr	x8, [sp, #40]
    21f0:	ldur	x9, [x29, #-16]
    21f4:	ldr	w10, [x9, #544]
    21f8:	mov	w9, w10
    21fc:	and	x8, x8, x9
    2200:	str	w8, [sp, #24]
    2204:	ldur	x9, [x29, #-32]
    2208:	ldur	x11, [x29, #-16]
    220c:	ldr	w8, [x11, #544]
    2210:	mov	w11, w8
    2214:	and	x9, x9, x11
    2218:	str	w9, [sp, #20]
    221c:	ldur	x11, [x29, #-32]
    2220:	ldur	x12, [x29, #-16]
    2224:	ldr	w8, [x12, #544]
    2228:	mov	w12, w8
    222c:	cmp	x11, x12
    2230:	cset	w8, hi  // hi = pmore
    2234:	and	w8, w8, #0x1
    2238:	ldr	w9, [sp, #28]
    223c:	cmp	w8, w9
    2240:	b.ne	230c <ctf_add_reftype+0x228>  // b.any
    2244:	ldr	w8, [sp, #20]
    2248:	mov	w9, w8
    224c:	ldur	x10, [x29, #-16]
    2250:	ldr	x10, [x10, #480]
    2254:	cmp	x9, x10
    2258:	b.cs	230c <ctf_add_reftype+0x228>  // b.hs, b.nlast
    225c:	ldr	w8, [sp, #24]
    2260:	ldur	x9, [x29, #-16]
    2264:	ldr	x9, [x9, #448]
    2268:	ldr	w10, [sp, #20]
    226c:	mov	w11, w10
    2270:	str	w8, [x9, x11, lsl #2]
    2274:	ldr	x9, [sp, #48]
    2278:	ldr	w8, [x9, #32]
    227c:	ldur	x9, [x29, #-16]
    2280:	ldr	w10, [x9, #544]
    2284:	and	w8, w8, w10
    2288:	mov	w9, w8
    228c:	ubfx	x9, x9, #0, #32
    2290:	str	x9, [sp, #8]
    2294:	ldr	x9, [sp, #32]
    2298:	ldur	x11, [x29, #-16]
    229c:	cmp	x9, x11
    22a0:	b.ne	230c <ctf_add_reftype+0x228>  // b.any
    22a4:	ldur	x8, [x29, #-16]
    22a8:	ldr	x8, [x8]
    22ac:	ldr	x8, [x8]
    22b0:	ldr	x9, [sp, #48]
    22b4:	ldr	w0, [x9, #28]
    22b8:	blr	x8
    22bc:	cmp	w0, #0xa
    22c0:	b.ne	230c <ctf_add_reftype+0x228>  // b.any
    22c4:	ldur	x0, [x29, #-16]
    22c8:	ldr	x8, [sp, #48]
    22cc:	ldr	w1, [x8, #24]
    22d0:	bl	0 <ctf_strptr>
    22d4:	adrp	x1, 0 <ctf_create>
    22d8:	add	x1, x1, #0x0
    22dc:	bl	0 <strcmp>
    22e0:	cbnz	w0, 230c <ctf_add_reftype+0x228>
    22e4:	ldr	x8, [sp, #8]
    22e8:	ldur	x9, [x29, #-16]
    22ec:	ldr	x9, [x9, #480]
    22f0:	cmp	x8, x9
    22f4:	b.cs	230c <ctf_add_reftype+0x228>  // b.hs, b.nlast
    22f8:	ldr	w8, [sp, #24]
    22fc:	ldur	x9, [x29, #-16]
    2300:	ldr	x9, [x9, #448]
    2304:	ldr	x10, [sp, #8]
    2308:	str	w8, [x9, x10, lsl #2]
    230c:	ldr	x8, [sp, #40]
    2310:	stur	x8, [x29, #-8]
    2314:	ldur	x0, [x29, #-8]
    2318:	ldp	x29, x30, [sp, #96]
    231c:	add	sp, sp, #0x70
    2320:	ret

0000000000002324 <ctf_add_array>:
    2324:	sub	sp, sp, #0x50
    2328:	stp	x29, x30, [sp, #64]
    232c:	add	x29, sp, #0x40
    2330:	stur	x0, [x29, #-16]
    2334:	stur	w1, [x29, #-20]
    2338:	str	x2, [sp, #32]
    233c:	ldur	x8, [x29, #-16]
    2340:	str	x8, [sp, #8]
    2344:	ldr	x8, [sp, #32]
    2348:	cbnz	x8, 2360 <ctf_add_array+0x3c>
    234c:	ldur	x0, [x29, #-16]
    2350:	mov	w1, #0x16                  	// #22
    2354:	bl	0 <ctf_set_errno>
    2358:	stur	x0, [x29, #-8]
    235c:	b	242c <ctf_add_array+0x108>
    2360:	ldr	x8, [sp, #32]
    2364:	ldr	x1, [x8]
    2368:	add	x0, sp, #0x8
    236c:	bl	0 <ctf_lookup_by_id>
    2370:	cbnz	x0, 2380 <ctf_add_array+0x5c>
    2374:	mov	x8, #0xffffffffffffffff    	// #-1
    2378:	stur	x8, [x29, #-8]
    237c:	b	242c <ctf_add_array+0x108>
    2380:	ldur	x8, [x29, #-16]
    2384:	add	x0, sp, #0x8
    2388:	str	x8, [sp, #8]
    238c:	ldr	x8, [sp, #32]
    2390:	ldr	x1, [x8, #8]
    2394:	bl	0 <ctf_lookup_by_id>
    2398:	cbnz	x0, 23a8 <ctf_add_array+0x84>
    239c:	mov	x8, #0xffffffffffffffff    	// #-1
    23a0:	stur	x8, [x29, #-8]
    23a4:	b	242c <ctf_add_array+0x108>
    23a8:	ldur	x0, [x29, #-16]
    23ac:	ldur	w1, [x29, #-20]
    23b0:	mov	x8, xzr
    23b4:	mov	x2, x8
    23b8:	mov	w3, #0x4                   	// #4
    23bc:	add	x4, sp, #0x18
    23c0:	bl	1c5c <ctf_add_generic>
    23c4:	str	x0, [sp, #16]
    23c8:	mov	x8, #0xffffffffffffffff    	// #-1
    23cc:	cmp	x0, x8
    23d0:	b.ne	23e0 <ctf_add_array+0xbc>  // b.any
    23d4:	mov	x8, #0xffffffffffffffff    	// #-1
    23d8:	stur	x8, [x29, #-8]
    23dc:	b	242c <ctf_add_array+0x108>
    23e0:	ldur	w8, [x29, #-20]
    23e4:	mov	w9, wzr
    23e8:	mov	w10, #0x1                   	// #1
    23ec:	cmp	w8, #0x0
    23f0:	csel	w8, w10, w9, ne  // ne = any
    23f4:	mov	w9, #0x10000000            	// #268435456
    23f8:	orr	w8, w9, w8, lsl #25
    23fc:	ldr	x11, [sp, #24]
    2400:	str	w8, [x11, #28]
    2404:	ldr	x11, [sp, #24]
    2408:	str	wzr, [x11, #32]
    240c:	ldr	x11, [sp, #24]
    2410:	ldr	x12, [sp, #32]
    2414:	ldr	q0, [x12]
    2418:	str	q0, [x11, #48]
    241c:	ldr	x12, [x12, #16]
    2420:	str	x12, [x11, #64]
    2424:	ldr	x11, [sp, #16]
    2428:	stur	x11, [x29, #-8]
    242c:	ldur	x0, [x29, #-8]
    2430:	ldp	x29, x30, [sp, #64]
    2434:	add	sp, sp, #0x50
    2438:	ret

000000000000243c <ctf_set_array>:
    243c:	sub	sp, sp, #0x40
    2440:	stp	x29, x30, [sp, #48]
    2444:	add	x29, sp, #0x30
    2448:	stur	x0, [x29, #-16]
    244c:	str	x1, [sp, #24]
    2450:	str	x2, [sp, #16]
    2454:	ldur	x0, [x29, #-16]
    2458:	ldr	x1, [sp, #24]
    245c:	bl	1610 <ctf_dtd_lookup>
    2460:	str	x0, [sp, #8]
    2464:	ldur	x8, [x29, #-16]
    2468:	ldr	w9, [x8, #552]
    246c:	and	w9, w9, #0x2
    2470:	cbnz	w9, 2488 <ctf_set_array+0x4c>
    2474:	ldur	x0, [x29, #-16]
    2478:	mov	w1, #0x40d                 	// #1037
    247c:	bl	0 <ctf_set_errno>
    2480:	stur	w0, [x29, #-4]
    2484:	b	24f0 <ctf_set_array+0xb4>
    2488:	ldr	x8, [sp, #8]
    248c:	cbz	x8, 24b0 <ctf_set_array+0x74>
    2490:	ldur	x8, [x29, #-16]
    2494:	ldr	x8, [x8]
    2498:	ldr	x8, [x8]
    249c:	ldr	x9, [sp, #8]
    24a0:	ldr	w0, [x9, #28]
    24a4:	blr	x8
    24a8:	cmp	w0, #0x4
    24ac:	b.eq	24c4 <ctf_set_array+0x88>  // b.none
    24b0:	ldur	x0, [x29, #-16]
    24b4:	mov	w1, #0x3fa                 	// #1018
    24b8:	bl	0 <ctf_set_errno>
    24bc:	stur	w0, [x29, #-4]
    24c0:	b	24f0 <ctf_set_array+0xb4>
    24c4:	ldur	x8, [x29, #-16]
    24c8:	ldr	w9, [x8, #552]
    24cc:	orr	w9, w9, #0x4
    24d0:	str	w9, [x8, #552]
    24d4:	ldr	x8, [sp, #8]
    24d8:	ldr	x10, [sp, #16]
    24dc:	ldr	q0, [x10]
    24e0:	str	q0, [x8, #48]
    24e4:	ldr	x10, [x10, #16]
    24e8:	str	x10, [x8, #64]
    24ec:	stur	wzr, [x29, #-4]
    24f0:	ldur	w0, [x29, #-4]
    24f4:	ldp	x29, x30, [sp, #48]
    24f8:	add	sp, sp, #0x40
    24fc:	ret

0000000000002500 <ctf_add_function>:
    2500:	sub	sp, sp, #0x70
    2504:	stp	x29, x30, [sp, #96]
    2508:	add	x29, sp, #0x60
    250c:	mov	x8, xzr
    2510:	stur	x0, [x29, #-16]
    2514:	stur	w1, [x29, #-20]
    2518:	stur	x2, [x29, #-32]
    251c:	stur	x3, [x29, #-40]
    2520:	str	x8, [sp, #24]
    2524:	ldur	x8, [x29, #-16]
    2528:	str	x8, [sp, #16]
    252c:	ldur	x8, [x29, #-32]
    2530:	cbz	x8, 2558 <ctf_add_function+0x58>
    2534:	ldur	x8, [x29, #-32]
    2538:	ldr	w9, [x8, #12]
    253c:	and	w9, w9, #0xfffffffe
    2540:	cbnz	w9, 2558 <ctf_add_function+0x58>
    2544:	ldur	x8, [x29, #-32]
    2548:	ldr	w9, [x8, #8]
    254c:	cbz	w9, 256c <ctf_add_function+0x6c>
    2550:	ldur	x8, [x29, #-40]
    2554:	cbnz	x8, 256c <ctf_add_function+0x6c>
    2558:	ldur	x0, [x29, #-16]
    255c:	mov	w1, #0x16                  	// #22
    2560:	bl	0 <ctf_set_errno>
    2564:	stur	x0, [x29, #-8]
    2568:	b	2740 <ctf_add_function+0x240>
    256c:	ldur	x8, [x29, #-32]
    2570:	ldr	w9, [x8, #8]
    2574:	str	w9, [sp, #36]
    2578:	ldur	x8, [x29, #-32]
    257c:	ldr	w9, [x8, #12]
    2580:	and	w9, w9, #0x1
    2584:	cbz	w9, 2594 <ctf_add_function+0x94>
    2588:	ldr	w8, [sp, #36]
    258c:	add	w8, w8, #0x1
    2590:	str	w8, [sp, #36]
    2594:	ldur	x8, [x29, #-32]
    2598:	ldr	x1, [x8]
    259c:	add	x0, sp, #0x10
    25a0:	bl	0 <ctf_lookup_by_id>
    25a4:	cbnz	x0, 25b4 <ctf_add_function+0xb4>
    25a8:	mov	x8, #0xffffffffffffffff    	// #-1
    25ac:	stur	x8, [x29, #-8]
    25b0:	b	2740 <ctf_add_function+0x240>
    25b4:	str	xzr, [sp, #8]
    25b8:	ldr	x8, [sp, #8]
    25bc:	ldur	x9, [x29, #-32]
    25c0:	ldr	w10, [x9, #8]
    25c4:	mov	w9, w10
    25c8:	cmp	x8, x9
    25cc:	b.cs	260c <ctf_add_function+0x10c>  // b.hs, b.nlast
    25d0:	ldur	x8, [x29, #-16]
    25d4:	add	x0, sp, #0x10
    25d8:	str	x8, [sp, #16]
    25dc:	ldur	x8, [x29, #-40]
    25e0:	ldr	x9, [sp, #8]
    25e4:	ldr	x1, [x8, x9, lsl #3]
    25e8:	bl	0 <ctf_lookup_by_id>
    25ec:	cbnz	x0, 25fc <ctf_add_function+0xfc>
    25f0:	mov	x8, #0xffffffffffffffff    	// #-1
    25f4:	stur	x8, [x29, #-8]
    25f8:	b	2740 <ctf_add_function+0x240>
    25fc:	ldr	x8, [sp, #8]
    2600:	add	x8, x8, #0x1
    2604:	str	x8, [sp, #8]
    2608:	b	25b8 <ctf_add_function+0xb8>
    260c:	ldr	w8, [sp, #36]
    2610:	mov	w9, #0xffffff              	// #16777215
    2614:	cmp	w8, w9
    2618:	b.ls	2630 <ctf_add_function+0x130>  // b.plast
    261c:	ldur	x0, [x29, #-16]
    2620:	mov	w1, #0x4b                  	// #75
    2624:	bl	0 <ctf_set_errno>
    2628:	stur	x0, [x29, #-8]
    262c:	b	2740 <ctf_add_function+0x240>
    2630:	ldr	w8, [sp, #36]
    2634:	cbz	w8, 2668 <ctf_add_function+0x168>
    2638:	ldr	w8, [sp, #36]
    263c:	mov	w9, w8
    2640:	mov	x10, #0x8                   	// #8
    2644:	mul	x0, x10, x9
    2648:	bl	0 <malloc>
    264c:	str	x0, [sp, #24]
    2650:	cbnz	x0, 2668 <ctf_add_function+0x168>
    2654:	ldur	x0, [x29, #-16]
    2658:	mov	w1, #0xb                   	// #11
    265c:	bl	0 <ctf_set_errno>
    2660:	stur	x0, [x29, #-8]
    2664:	b	2740 <ctf_add_function+0x240>
    2668:	ldur	x0, [x29, #-16]
    266c:	ldur	w1, [x29, #-20]
    2670:	mov	x8, xzr
    2674:	mov	x2, x8
    2678:	mov	w3, #0x5                   	// #5
    267c:	add	x4, sp, #0x30
    2680:	bl	1c5c <ctf_add_generic>
    2684:	str	x0, [sp, #40]
    2688:	mov	x8, #0xffffffffffffffff    	// #-1
    268c:	cmp	x0, x8
    2690:	b.ne	26a8 <ctf_add_function+0x1a8>  // b.any
    2694:	ldr	x0, [sp, #24]
    2698:	bl	0 <free>
    269c:	mov	x8, #0xffffffffffffffff    	// #-1
    26a0:	stur	x8, [x29, #-8]
    26a4:	b	2740 <ctf_add_function+0x240>
    26a8:	ldur	w8, [x29, #-20]
    26ac:	mov	w9, wzr
    26b0:	mov	w10, #0x1                   	// #1
    26b4:	cmp	w8, #0x0
    26b8:	csel	w8, w10, w9, ne  // ne = any
    26bc:	mov	w9, #0x14000000            	// #335544320
    26c0:	orr	w8, w9, w8, lsl #25
    26c4:	ldr	w9, [sp, #36]
    26c8:	and	w9, w9, #0xffffff
    26cc:	orr	w8, w8, w9
    26d0:	ldr	x11, [sp, #48]
    26d4:	str	w8, [x11, #28]
    26d8:	ldur	x11, [x29, #-32]
    26dc:	ldr	x11, [x11]
    26e0:	ldr	x12, [sp, #48]
    26e4:	str	w11, [x12, #32]
    26e8:	ldr	x0, [sp, #24]
    26ec:	ldur	x1, [x29, #-40]
    26f0:	ldur	x12, [x29, #-32]
    26f4:	ldr	w8, [x12, #8]
    26f8:	mov	w12, w8
    26fc:	mov	x13, #0x8                   	// #8
    2700:	mul	x2, x13, x12
    2704:	bl	0 <memcpy>
    2708:	ldur	x12, [x29, #-32]
    270c:	ldr	w8, [x12, #12]
    2710:	and	w8, w8, #0x1
    2714:	cbz	w8, 272c <ctf_add_function+0x22c>
    2718:	ldr	x8, [sp, #24]
    271c:	ldr	w9, [sp, #36]
    2720:	subs	w9, w9, #0x1
    2724:	mov	x10, xzr
    2728:	str	x10, [x8, w9, uxtw #3]
    272c:	ldr	x8, [sp, #24]
    2730:	ldr	x9, [sp, #48]
    2734:	str	x8, [x9, #48]
    2738:	ldr	x8, [sp, #40]
    273c:	stur	x8, [x29, #-8]
    2740:	ldur	x0, [x29, #-8]
    2744:	ldp	x29, x30, [sp, #96]
    2748:	add	sp, sp, #0x70
    274c:	ret

0000000000002750 <ctf_add_struct_sized>:
    2750:	sub	sp, sp, #0x50
    2754:	stp	x29, x30, [sp, #64]
    2758:	add	x29, sp, #0x40
    275c:	stur	x0, [x29, #-16]
    2760:	stur	w1, [x29, #-20]
    2764:	str	x2, [sp, #32]
    2768:	str	x3, [sp, #24]
    276c:	str	xzr, [sp, #8]
    2770:	ldr	x8, [sp, #32]
    2774:	cbz	x8, 278c <ctf_add_struct_sized+0x3c>
    2778:	ldur	x0, [x29, #-16]
    277c:	ldr	x2, [sp, #32]
    2780:	mov	w1, #0x6                   	// #6
    2784:	bl	0 <ctf_lookup_by_rawname>
    2788:	str	x0, [sp, #8]
    278c:	ldr	x8, [sp, #8]
    2790:	cbz	x8, 27bc <ctf_add_struct_sized+0x6c>
    2794:	ldur	x0, [x29, #-16]
    2798:	ldr	x1, [sp, #8]
    279c:	bl	0 <ctf_type_kind>
    27a0:	cmp	w0, #0x9
    27a4:	b.ne	27bc <ctf_add_struct_sized+0x6c>  // b.any
    27a8:	ldur	x0, [x29, #-16]
    27ac:	ldr	x1, [sp, #8]
    27b0:	bl	1610 <ctf_dtd_lookup>
    27b4:	str	x0, [sp, #16]
    27b8:	b	27f0 <ctf_add_struct_sized+0xa0>
    27bc:	ldur	x0, [x29, #-16]
    27c0:	ldur	w1, [x29, #-20]
    27c4:	ldr	x2, [sp, #32]
    27c8:	mov	w3, #0x6                   	// #6
    27cc:	add	x4, sp, #0x10
    27d0:	bl	1c5c <ctf_add_generic>
    27d4:	str	x0, [sp, #8]
    27d8:	mov	x8, #0xffffffffffffffff    	// #-1
    27dc:	cmp	x0, x8
    27e0:	b.ne	27f0 <ctf_add_struct_sized+0xa0>  // b.any
    27e4:	mov	x8, #0xffffffffffffffff    	// #-1
    27e8:	stur	x8, [x29, #-8]
    27ec:	b	2864 <ctf_add_struct_sized+0x114>
    27f0:	ldur	w8, [x29, #-20]
    27f4:	mov	w9, wzr
    27f8:	mov	w10, #0x1                   	// #1
    27fc:	cmp	w8, #0x0
    2800:	csel	w8, w10, w9, ne  // ne = any
    2804:	mov	w9, #0x18000000            	// #402653184
    2808:	orr	w8, w9, w8, lsl #25
    280c:	ldr	x11, [sp, #16]
    2810:	str	w8, [x11, #28]
    2814:	ldr	x11, [sp, #24]
    2818:	mov	x12, #0xfffffffe            	// #4294967294
    281c:	cmp	x11, x12
    2820:	b.ls	2850 <ctf_add_struct_sized+0x100>  // b.plast
    2824:	ldr	x8, [sp, #16]
    2828:	mov	w9, #0xffffffff            	// #-1
    282c:	str	w9, [x8, #32]
    2830:	ldr	x8, [sp, #24]
    2834:	lsr	x8, x8, #32
    2838:	ldr	x10, [sp, #16]
    283c:	str	w8, [x10, #36]
    2840:	ldr	x10, [sp, #24]
    2844:	ldr	x11, [sp, #16]
    2848:	str	w10, [x11, #40]
    284c:	b	285c <ctf_add_struct_sized+0x10c>
    2850:	ldr	x8, [sp, #24]
    2854:	ldr	x9, [sp, #16]
    2858:	str	w8, [x9, #32]
    285c:	ldr	x8, [sp, #8]
    2860:	stur	x8, [x29, #-8]
    2864:	ldur	x0, [x29, #-8]
    2868:	ldp	x29, x30, [sp, #64]
    286c:	add	sp, sp, #0x50
    2870:	ret

0000000000002874 <ctf_add_struct>:
    2874:	sub	sp, sp, #0x30
    2878:	stp	x29, x30, [sp, #32]
    287c:	add	x29, sp, #0x20
    2880:	mov	x8, xzr
    2884:	stur	x0, [x29, #-8]
    2888:	stur	w1, [x29, #-12]
    288c:	str	x2, [sp, #8]
    2890:	ldur	x0, [x29, #-8]
    2894:	ldur	w1, [x29, #-12]
    2898:	ldr	x2, [sp, #8]
    289c:	mov	x3, x8
    28a0:	bl	2750 <ctf_add_struct_sized>
    28a4:	ldp	x29, x30, [sp, #32]
    28a8:	add	sp, sp, #0x30
    28ac:	ret

00000000000028b0 <ctf_add_union_sized>:
    28b0:	sub	sp, sp, #0x50
    28b4:	stp	x29, x30, [sp, #64]
    28b8:	add	x29, sp, #0x40
    28bc:	stur	x0, [x29, #-16]
    28c0:	stur	w1, [x29, #-20]
    28c4:	str	x2, [sp, #32]
    28c8:	str	x3, [sp, #24]
    28cc:	str	xzr, [sp, #8]
    28d0:	ldr	x8, [sp, #32]
    28d4:	cbz	x8, 28ec <ctf_add_union_sized+0x3c>
    28d8:	ldur	x0, [x29, #-16]
    28dc:	ldr	x2, [sp, #32]
    28e0:	mov	w1, #0x7                   	// #7
    28e4:	bl	0 <ctf_lookup_by_rawname>
    28e8:	str	x0, [sp, #8]
    28ec:	ldr	x8, [sp, #8]
    28f0:	cbz	x8, 291c <ctf_add_union_sized+0x6c>
    28f4:	ldur	x0, [x29, #-16]
    28f8:	ldr	x1, [sp, #8]
    28fc:	bl	0 <ctf_type_kind>
    2900:	cmp	w0, #0x9
    2904:	b.ne	291c <ctf_add_union_sized+0x6c>  // b.any
    2908:	ldur	x0, [x29, #-16]
    290c:	ldr	x1, [sp, #8]
    2910:	bl	1610 <ctf_dtd_lookup>
    2914:	str	x0, [sp, #16]
    2918:	b	2950 <ctf_add_union_sized+0xa0>
    291c:	ldur	x0, [x29, #-16]
    2920:	ldur	w1, [x29, #-20]
    2924:	ldr	x2, [sp, #32]
    2928:	mov	w3, #0x7                   	// #7
    292c:	add	x4, sp, #0x10
    2930:	bl	1c5c <ctf_add_generic>
    2934:	str	x0, [sp, #8]
    2938:	mov	x8, #0xffffffffffffffff    	// #-1
    293c:	cmp	x0, x8
    2940:	b.ne	2950 <ctf_add_union_sized+0xa0>  // b.any
    2944:	mov	x8, #0xffffffffffffffff    	// #-1
    2948:	stur	x8, [x29, #-8]
    294c:	b	29c4 <ctf_add_union_sized+0x114>
    2950:	ldur	w8, [x29, #-20]
    2954:	mov	w9, wzr
    2958:	mov	w10, #0x1                   	// #1
    295c:	cmp	w8, #0x0
    2960:	csel	w8, w10, w9, ne  // ne = any
    2964:	mov	w9, #0x1c000000            	// #469762048
    2968:	orr	w8, w9, w8, lsl #25
    296c:	ldr	x11, [sp, #16]
    2970:	str	w8, [x11, #28]
    2974:	ldr	x11, [sp, #24]
    2978:	mov	x12, #0xfffffffe            	// #4294967294
    297c:	cmp	x11, x12
    2980:	b.ls	29b0 <ctf_add_union_sized+0x100>  // b.plast
    2984:	ldr	x8, [sp, #16]
    2988:	mov	w9, #0xffffffff            	// #-1
    298c:	str	w9, [x8, #32]
    2990:	ldr	x8, [sp, #24]
    2994:	lsr	x8, x8, #32
    2998:	ldr	x10, [sp, #16]
    299c:	str	w8, [x10, #36]
    29a0:	ldr	x10, [sp, #24]
    29a4:	ldr	x11, [sp, #16]
    29a8:	str	w10, [x11, #40]
    29ac:	b	29bc <ctf_add_union_sized+0x10c>
    29b0:	ldr	x8, [sp, #24]
    29b4:	ldr	x9, [sp, #16]
    29b8:	str	w8, [x9, #32]
    29bc:	ldr	x8, [sp, #8]
    29c0:	stur	x8, [x29, #-8]
    29c4:	ldur	x0, [x29, #-8]
    29c8:	ldp	x29, x30, [sp, #64]
    29cc:	add	sp, sp, #0x50
    29d0:	ret

00000000000029d4 <ctf_add_union>:
    29d4:	sub	sp, sp, #0x30
    29d8:	stp	x29, x30, [sp, #32]
    29dc:	add	x29, sp, #0x20
    29e0:	mov	x8, xzr
    29e4:	stur	x0, [x29, #-8]
    29e8:	stur	w1, [x29, #-12]
    29ec:	str	x2, [sp, #8]
    29f0:	ldur	x0, [x29, #-8]
    29f4:	ldur	w1, [x29, #-12]
    29f8:	ldr	x2, [sp, #8]
    29fc:	mov	x3, x8
    2a00:	bl	28b0 <ctf_add_union_sized>
    2a04:	ldp	x29, x30, [sp, #32]
    2a08:	add	sp, sp, #0x30
    2a0c:	ret

0000000000002a10 <ctf_add_enum>:
    2a10:	sub	sp, sp, #0x40
    2a14:	stp	x29, x30, [sp, #48]
    2a18:	add	x29, sp, #0x30
    2a1c:	stur	x0, [x29, #-16]
    2a20:	stur	w1, [x29, #-20]
    2a24:	str	x2, [sp, #16]
    2a28:	str	xzr, [sp]
    2a2c:	ldr	x8, [sp, #16]
    2a30:	cbz	x8, 2a48 <ctf_add_enum+0x38>
    2a34:	ldur	x0, [x29, #-16]
    2a38:	ldr	x2, [sp, #16]
    2a3c:	mov	w1, #0x8                   	// #8
    2a40:	bl	0 <ctf_lookup_by_rawname>
    2a44:	str	x0, [sp]
    2a48:	ldr	x8, [sp]
    2a4c:	cbz	x8, 2a78 <ctf_add_enum+0x68>
    2a50:	ldur	x0, [x29, #-16]
    2a54:	ldr	x1, [sp]
    2a58:	bl	0 <ctf_type_kind>
    2a5c:	cmp	w0, #0x9
    2a60:	b.ne	2a78 <ctf_add_enum+0x68>  // b.any
    2a64:	ldur	x0, [x29, #-16]
    2a68:	ldr	x1, [sp]
    2a6c:	bl	1610 <ctf_dtd_lookup>
    2a70:	str	x0, [sp, #8]
    2a74:	b	2aac <ctf_add_enum+0x9c>
    2a78:	ldur	x0, [x29, #-16]
    2a7c:	ldur	w1, [x29, #-20]
    2a80:	ldr	x2, [sp, #16]
    2a84:	mov	w3, #0x8                   	// #8
    2a88:	add	x4, sp, #0x8
    2a8c:	bl	1c5c <ctf_add_generic>
    2a90:	str	x0, [sp]
    2a94:	mov	x8, #0xffffffffffffffff    	// #-1
    2a98:	cmp	x0, x8
    2a9c:	b.ne	2aac <ctf_add_enum+0x9c>  // b.any
    2aa0:	mov	x8, #0xffffffffffffffff    	// #-1
    2aa4:	stur	x8, [x29, #-8]
    2aa8:	b	2aec <ctf_add_enum+0xdc>
    2aac:	ldur	w8, [x29, #-20]
    2ab0:	mov	w9, wzr
    2ab4:	mov	w10, #0x1                   	// #1
    2ab8:	cmp	w8, #0x0
    2abc:	csel	w8, w10, w9, ne  // ne = any
    2ac0:	mov	w9, #0x20000000            	// #536870912
    2ac4:	orr	w8, w9, w8, lsl #25
    2ac8:	ldr	x11, [sp, #8]
    2acc:	str	w8, [x11, #28]
    2ad0:	ldur	x11, [x29, #-16]
    2ad4:	ldr	x11, [x11, #488]
    2ad8:	ldr	x11, [x11, #40]
    2adc:	ldr	x12, [sp, #8]
    2ae0:	str	w11, [x12, #32]
    2ae4:	ldr	x12, [sp]
    2ae8:	stur	x12, [x29, #-8]
    2aec:	ldur	x0, [x29, #-8]
    2af0:	ldp	x29, x30, [sp, #48]
    2af4:	add	sp, sp, #0x40
    2af8:	ret

0000000000002afc <ctf_add_enum_encoded>:
    2afc:	sub	sp, sp, #0x40
    2b00:	stp	x29, x30, [sp, #48]
    2b04:	add	x29, sp, #0x30
    2b08:	stur	x0, [x29, #-16]
    2b0c:	stur	w1, [x29, #-20]
    2b10:	str	x2, [sp, #16]
    2b14:	str	x3, [sp, #8]
    2b18:	str	xzr, [sp]
    2b1c:	ldr	x8, [sp, #16]
    2b20:	cbz	x8, 2b38 <ctf_add_enum_encoded+0x3c>
    2b24:	ldur	x0, [x29, #-16]
    2b28:	ldr	x2, [sp, #16]
    2b2c:	mov	w1, #0x8                   	// #8
    2b30:	bl	0 <ctf_lookup_by_rawname>
    2b34:	str	x0, [sp]
    2b38:	ldr	x8, [sp]
    2b3c:	cbz	x8, 2b80 <ctf_add_enum_encoded+0x84>
    2b40:	ldur	x0, [x29, #-16]
    2b44:	ldr	x1, [sp]
    2b48:	bl	0 <ctf_type_kind>
    2b4c:	cmp	w0, #0x9
    2b50:	b.eq	2b7c <ctf_add_enum_encoded+0x80>  // b.none
    2b54:	ldur	x0, [x29, #-16]
    2b58:	ldr	x1, [sp]
    2b5c:	bl	0 <ctf_type_kind_unsliced>
    2b60:	cmp	w0, #0x8
    2b64:	b.eq	2b7c <ctf_add_enum_encoded+0x80>  // b.none
    2b68:	ldur	x0, [x29, #-16]
    2b6c:	mov	w1, #0x3fe                 	// #1022
    2b70:	bl	0 <ctf_set_errno>
    2b74:	stur	x0, [x29, #-8]
    2b78:	b	2bc4 <ctf_add_enum_encoded+0xc8>
    2b7c:	b	2bac <ctf_add_enum_encoded+0xb0>
    2b80:	ldur	x0, [x29, #-16]
    2b84:	ldur	w1, [x29, #-20]
    2b88:	ldr	x2, [sp, #16]
    2b8c:	bl	2a10 <ctf_add_enum>
    2b90:	str	x0, [sp]
    2b94:	mov	x8, #0xffffffffffffffff    	// #-1
    2b98:	cmp	x0, x8
    2b9c:	b.ne	2bac <ctf_add_enum_encoded+0xb0>  // b.any
    2ba0:	mov	x8, #0xffffffffffffffff    	// #-1
    2ba4:	stur	x8, [x29, #-8]
    2ba8:	b	2bc4 <ctf_add_enum_encoded+0xc8>
    2bac:	ldur	x0, [x29, #-16]
    2bb0:	ldur	w1, [x29, #-20]
    2bb4:	ldr	x2, [sp]
    2bb8:	ldr	x3, [sp, #8]
    2bbc:	bl	1a7c <ctf_add_slice>
    2bc0:	stur	x0, [x29, #-8]
    2bc4:	ldur	x0, [x29, #-8]
    2bc8:	ldp	x29, x30, [sp, #48]
    2bcc:	add	sp, sp, #0x40
    2bd0:	ret

0000000000002bd4 <ctf_add_forward>:
    2bd4:	sub	sp, sp, #0x50
    2bd8:	stp	x29, x30, [sp, #64]
    2bdc:	add	x29, sp, #0x40
    2be0:	stur	x0, [x29, #-16]
    2be4:	stur	w1, [x29, #-20]
    2be8:	str	x2, [sp, #32]
    2bec:	str	w3, [sp, #28]
    2bf0:	str	xzr, [sp, #8]
    2bf4:	ldr	w8, [sp, #28]
    2bf8:	cmp	w8, #0x6
    2bfc:	b.eq	2c2c <ctf_add_forward+0x58>  // b.none
    2c00:	ldr	w8, [sp, #28]
    2c04:	cmp	w8, #0x7
    2c08:	b.eq	2c2c <ctf_add_forward+0x58>  // b.none
    2c0c:	ldr	w8, [sp, #28]
    2c10:	cmp	w8, #0x8
    2c14:	b.eq	2c2c <ctf_add_forward+0x58>  // b.none
    2c18:	ldur	x0, [x29, #-16]
    2c1c:	mov	w1, #0x3fd                 	// #1021
    2c20:	bl	0 <ctf_set_errno>
    2c24:	stur	x0, [x29, #-8]
    2c28:	b	2cb4 <ctf_add_forward+0xe0>
    2c2c:	ldr	x8, [sp, #32]
    2c30:	cbz	x8, 2c48 <ctf_add_forward+0x74>
    2c34:	ldur	x0, [x29, #-16]
    2c38:	ldr	w1, [sp, #28]
    2c3c:	ldr	x2, [sp, #32]
    2c40:	bl	0 <ctf_lookup_by_rawname>
    2c44:	str	x0, [sp, #8]
    2c48:	ldur	x0, [x29, #-16]
    2c4c:	ldur	w1, [x29, #-20]
    2c50:	ldr	x2, [sp, #32]
    2c54:	mov	w3, #0x9                   	// #9
    2c58:	add	x4, sp, #0x10
    2c5c:	bl	1c5c <ctf_add_generic>
    2c60:	str	x0, [sp, #8]
    2c64:	mov	x8, #0xffffffffffffffff    	// #-1
    2c68:	cmp	x0, x8
    2c6c:	b.ne	2c7c <ctf_add_forward+0xa8>  // b.any
    2c70:	mov	x8, #0xffffffffffffffff    	// #-1
    2c74:	stur	x8, [x29, #-8]
    2c78:	b	2cb4 <ctf_add_forward+0xe0>
    2c7c:	ldur	w8, [x29, #-20]
    2c80:	mov	w9, wzr
    2c84:	mov	w10, #0x1                   	// #1
    2c88:	cmp	w8, #0x0
    2c8c:	csel	w8, w10, w9, ne  // ne = any
    2c90:	mov	w9, #0x24000000            	// #603979776
    2c94:	orr	w8, w9, w8, lsl #25
    2c98:	ldr	x11, [sp, #16]
    2c9c:	str	w8, [x11, #28]
    2ca0:	ldr	w8, [sp, #28]
    2ca4:	ldr	x11, [sp, #16]
    2ca8:	str	w8, [x11, #32]
    2cac:	ldr	x11, [sp, #8]
    2cb0:	stur	x11, [x29, #-8]
    2cb4:	ldur	x0, [x29, #-8]
    2cb8:	ldp	x29, x30, [sp, #64]
    2cbc:	add	sp, sp, #0x50
    2cc0:	ret

0000000000002cc4 <ctf_add_typedef>:
    2cc4:	sub	sp, sp, #0x50
    2cc8:	stp	x29, x30, [sp, #64]
    2ccc:	add	x29, sp, #0x40
    2cd0:	mov	x8, #0xffffffffffffffff    	// #-1
    2cd4:	stur	x0, [x29, #-16]
    2cd8:	stur	w1, [x29, #-20]
    2cdc:	str	x2, [sp, #32]
    2ce0:	str	x3, [sp, #24]
    2ce4:	ldur	x9, [x29, #-16]
    2ce8:	str	x9, [sp]
    2cec:	ldr	x9, [sp, #24]
    2cf0:	cmp	x9, x8
    2cf4:	b.eq	2d08 <ctf_add_typedef+0x44>  // b.none
    2cf8:	ldr	x8, [sp, #24]
    2cfc:	mov	x9, #0xfffffffe            	// #4294967294
    2d00:	cmp	x8, x9
    2d04:	b.ls	2d1c <ctf_add_typedef+0x58>  // b.plast
    2d08:	ldur	x0, [x29, #-16]
    2d0c:	mov	w1, #0x16                  	// #22
    2d10:	bl	0 <ctf_set_errno>
    2d14:	stur	x0, [x29, #-8]
    2d18:	b	2da4 <ctf_add_typedef+0xe0>
    2d1c:	ldr	x1, [sp, #24]
    2d20:	mov	x0, sp
    2d24:	bl	0 <ctf_lookup_by_id>
    2d28:	cbnz	x0, 2d38 <ctf_add_typedef+0x74>
    2d2c:	mov	x8, #0xffffffffffffffff    	// #-1
    2d30:	stur	x8, [x29, #-8]
    2d34:	b	2da4 <ctf_add_typedef+0xe0>
    2d38:	ldur	x0, [x29, #-16]
    2d3c:	ldur	w1, [x29, #-20]
    2d40:	ldr	x2, [sp, #32]
    2d44:	mov	w3, #0xa                   	// #10
    2d48:	add	x4, sp, #0x10
    2d4c:	bl	1c5c <ctf_add_generic>
    2d50:	str	x0, [sp, #8]
    2d54:	mov	x8, #0xffffffffffffffff    	// #-1
    2d58:	cmp	x0, x8
    2d5c:	b.ne	2d6c <ctf_add_typedef+0xa8>  // b.any
    2d60:	mov	x8, #0xffffffffffffffff    	// #-1
    2d64:	stur	x8, [x29, #-8]
    2d68:	b	2da4 <ctf_add_typedef+0xe0>
    2d6c:	ldur	w8, [x29, #-20]
    2d70:	mov	w9, wzr
    2d74:	mov	w10, #0x1                   	// #1
    2d78:	cmp	w8, #0x0
    2d7c:	csel	w8, w10, w9, ne  // ne = any
    2d80:	mov	w9, #0x28000000            	// #671088640
    2d84:	orr	w8, w9, w8, lsl #25
    2d88:	ldr	x11, [sp, #16]
    2d8c:	str	w8, [x11, #28]
    2d90:	ldr	x11, [sp, #24]
    2d94:	ldr	x12, [sp, #16]
    2d98:	str	w11, [x12, #32]
    2d9c:	ldr	x12, [sp, #8]
    2da0:	stur	x12, [x29, #-8]
    2da4:	ldur	x0, [x29, #-8]
    2da8:	ldp	x29, x30, [sp, #64]
    2dac:	add	sp, sp, #0x50
    2db0:	ret

0000000000002db4 <ctf_add_volatile>:
    2db4:	sub	sp, sp, #0x30
    2db8:	stp	x29, x30, [sp, #32]
    2dbc:	add	x29, sp, #0x20
    2dc0:	mov	w3, #0xb                   	// #11
    2dc4:	stur	x0, [x29, #-8]
    2dc8:	stur	w1, [x29, #-12]
    2dcc:	str	x2, [sp, #8]
    2dd0:	ldur	x0, [x29, #-8]
    2dd4:	ldur	w1, [x29, #-12]
    2dd8:	ldr	x2, [sp, #8]
    2ddc:	bl	20e4 <ctf_add_reftype>
    2de0:	ldp	x29, x30, [sp, #32]
    2de4:	add	sp, sp, #0x30
    2de8:	ret

0000000000002dec <ctf_add_const>:
    2dec:	sub	sp, sp, #0x30
    2df0:	stp	x29, x30, [sp, #32]
    2df4:	add	x29, sp, #0x20
    2df8:	mov	w3, #0xc                   	// #12
    2dfc:	stur	x0, [x29, #-8]
    2e00:	stur	w1, [x29, #-12]
    2e04:	str	x2, [sp, #8]
    2e08:	ldur	x0, [x29, #-8]
    2e0c:	ldur	w1, [x29, #-12]
    2e10:	ldr	x2, [sp, #8]
    2e14:	bl	20e4 <ctf_add_reftype>
    2e18:	ldp	x29, x30, [sp, #32]
    2e1c:	add	sp, sp, #0x30
    2e20:	ret

0000000000002e24 <ctf_add_restrict>:
    2e24:	sub	sp, sp, #0x30
    2e28:	stp	x29, x30, [sp, #32]
    2e2c:	add	x29, sp, #0x20
    2e30:	mov	w3, #0xd                   	// #13
    2e34:	stur	x0, [x29, #-8]
    2e38:	stur	w1, [x29, #-12]
    2e3c:	str	x2, [sp, #8]
    2e40:	ldur	x0, [x29, #-8]
    2e44:	ldur	w1, [x29, #-12]
    2e48:	ldr	x2, [sp, #8]
    2e4c:	bl	20e4 <ctf_add_reftype>
    2e50:	ldp	x29, x30, [sp, #32]
    2e54:	add	sp, sp, #0x30
    2e58:	ret

0000000000002e5c <ctf_add_enumerator>:
    2e5c:	sub	sp, sp, #0x60
    2e60:	stp	x29, x30, [sp, #80]
    2e64:	add	x29, sp, #0x50
    2e68:	stur	x0, [x29, #-16]
    2e6c:	stur	x1, [x29, #-24]
    2e70:	stur	x2, [x29, #-32]
    2e74:	stur	w3, [x29, #-36]
    2e78:	ldur	x0, [x29, #-16]
    2e7c:	ldur	x1, [x29, #-24]
    2e80:	bl	1610 <ctf_dtd_lookup>
    2e84:	str	x0, [sp, #32]
    2e88:	ldur	x8, [x29, #-32]
    2e8c:	cbnz	x8, 2ea4 <ctf_add_enumerator+0x48>
    2e90:	ldur	x0, [x29, #-16]
    2e94:	mov	w1, #0x16                  	// #22
    2e98:	bl	0 <ctf_set_errno>
    2e9c:	stur	w0, [x29, #-4]
    2ea0:	b	30a0 <ctf_add_enumerator+0x244>
    2ea4:	ldur	x8, [x29, #-16]
    2ea8:	ldr	w9, [x8, #552]
    2eac:	and	w9, w9, #0x2
    2eb0:	cbnz	w9, 2ec8 <ctf_add_enumerator+0x6c>
    2eb4:	ldur	x0, [x29, #-16]
    2eb8:	mov	w1, #0x40d                 	// #1037
    2ebc:	bl	0 <ctf_set_errno>
    2ec0:	stur	w0, [x29, #-4]
    2ec4:	b	30a0 <ctf_add_enumerator+0x244>
    2ec8:	ldr	x8, [sp, #32]
    2ecc:	cbnz	x8, 2ee4 <ctf_add_enumerator+0x88>
    2ed0:	ldur	x0, [x29, #-16]
    2ed4:	mov	w1, #0x3fa                 	// #1018
    2ed8:	bl	0 <ctf_set_errno>
    2edc:	stur	w0, [x29, #-4]
    2ee0:	b	30a0 <ctf_add_enumerator+0x244>
    2ee4:	ldur	x8, [x29, #-16]
    2ee8:	ldr	x8, [x8]
    2eec:	ldr	x8, [x8]
    2ef0:	ldr	x9, [sp, #32]
    2ef4:	ldr	w0, [x9, #28]
    2ef8:	blr	x8
    2efc:	str	w0, [sp, #20]
    2f00:	ldur	x8, [x29, #-16]
    2f04:	ldr	x8, [x8]
    2f08:	ldr	x8, [x8, #8]
    2f0c:	ldr	x9, [sp, #32]
    2f10:	ldr	w0, [x9, #28]
    2f14:	blr	x8
    2f18:	str	w0, [sp, #12]
    2f1c:	ldur	x8, [x29, #-16]
    2f20:	ldr	x8, [x8]
    2f24:	ldr	x8, [x8, #16]
    2f28:	ldr	x9, [sp, #32]
    2f2c:	ldr	w0, [x9, #28]
    2f30:	blr	x8
    2f34:	str	w0, [sp, #16]
    2f38:	ldr	w10, [sp, #20]
    2f3c:	cmp	w10, #0x8
    2f40:	b.eq	2f58 <ctf_add_enumerator+0xfc>  // b.none
    2f44:	ldur	x0, [x29, #-16]
    2f48:	mov	w1, #0x3fc                 	// #1020
    2f4c:	bl	0 <ctf_set_errno>
    2f50:	stur	w0, [x29, #-4]
    2f54:	b	30a0 <ctf_add_enumerator+0x244>
    2f58:	ldr	w8, [sp, #16]
    2f5c:	mov	w9, #0xffffff              	// #16777215
    2f60:	cmp	w8, w9
    2f64:	b.ne	2f7c <ctf_add_enumerator+0x120>  // b.any
    2f68:	ldur	x0, [x29, #-16]
    2f6c:	mov	w1, #0x40e                 	// #1038
    2f70:	bl	0 <ctf_set_errno>
    2f74:	stur	w0, [x29, #-4]
    2f78:	b	30a0 <ctf_add_enumerator+0x244>
    2f7c:	ldr	x8, [sp, #32]
    2f80:	ldr	x8, [x8, #56]
    2f84:	str	x8, [sp, #24]
    2f88:	ldr	x8, [sp, #24]
    2f8c:	cbz	x8, 2fc8 <ctf_add_enumerator+0x16c>
    2f90:	ldr	x8, [sp, #24]
    2f94:	ldr	x0, [x8, #16]
    2f98:	ldur	x1, [x29, #-32]
    2f9c:	bl	0 <strcmp>
    2fa0:	cbnz	w0, 2fb8 <ctf_add_enumerator+0x15c>
    2fa4:	ldur	x0, [x29, #-16]
    2fa8:	mov	w1, #0x410                 	// #1040
    2fac:	bl	0 <ctf_set_errno>
    2fb0:	stur	w0, [x29, #-4]
    2fb4:	b	30a0 <ctf_add_enumerator+0x244>
    2fb8:	ldr	x8, [sp, #24]
    2fbc:	ldr	x8, [x8, #8]
    2fc0:	str	x8, [sp, #24]
    2fc4:	b	2f88 <ctf_add_enumerator+0x12c>
    2fc8:	mov	x0, #0x30                  	// #48
    2fcc:	bl	0 <malloc>
    2fd0:	str	x0, [sp, #24]
    2fd4:	cbnz	x0, 2fec <ctf_add_enumerator+0x190>
    2fd8:	ldur	x0, [x29, #-16]
    2fdc:	mov	w1, #0xb                   	// #11
    2fe0:	bl	0 <ctf_set_errno>
    2fe4:	stur	w0, [x29, #-4]
    2fe8:	b	30a0 <ctf_add_enumerator+0x244>
    2fec:	ldur	x0, [x29, #-32]
    2ff0:	bl	0 <strdup>
    2ff4:	str	x0, [sp]
    2ff8:	cbnz	x0, 3018 <ctf_add_enumerator+0x1bc>
    2ffc:	ldr	x0, [sp, #24]
    3000:	bl	0 <free>
    3004:	ldur	x0, [x29, #-16]
    3008:	mov	w1, #0xb                   	// #11
    300c:	bl	0 <ctf_set_errno>
    3010:	stur	w0, [x29, #-4]
    3014:	b	30a0 <ctf_add_enumerator+0x244>
    3018:	ldr	x8, [sp]
    301c:	ldr	x9, [sp, #24]
    3020:	str	x8, [x9, #16]
    3024:	ldr	x8, [sp, #24]
    3028:	mov	x9, #0xffffffffffffffff    	// #-1
    302c:	str	x9, [x8, #24]
    3030:	ldr	x8, [sp, #24]
    3034:	str	xzr, [x8, #32]
    3038:	ldur	w10, [x29, #-36]
    303c:	ldr	x8, [sp, #24]
    3040:	str	w10, [x8, #40]
    3044:	ldr	w10, [sp, #20]
    3048:	ldr	w11, [sp, #12]
    304c:	mov	w12, wzr
    3050:	mov	w13, #0x1                   	// #1
    3054:	cmp	w11, #0x0
    3058:	csel	w11, w13, w12, ne  // ne = any
    305c:	lsl	w11, w11, #25
    3060:	orr	w10, w11, w10, lsl #26
    3064:	ldr	w11, [sp, #16]
    3068:	add	w11, w11, #0x1
    306c:	and	w11, w11, #0xffffff
    3070:	orr	w10, w10, w11
    3074:	ldr	x8, [sp, #32]
    3078:	str	w10, [x8, #28]
    307c:	ldr	x8, [sp, #32]
    3080:	add	x0, x8, #0x30
    3084:	ldr	x1, [sp, #24]
    3088:	bl	0 <ctf_list_append>
    308c:	ldur	x8, [x29, #-16]
    3090:	ldr	w10, [x8, #552]
    3094:	orr	w10, w10, #0x4
    3098:	str	w10, [x8, #552]
    309c:	stur	wzr, [x29, #-4]
    30a0:	ldur	w0, [x29, #-4]
    30a4:	ldp	x29, x30, [sp, #80]
    30a8:	add	sp, sp, #0x60
    30ac:	ret

00000000000030b0 <ctf_add_member_offset>:
    30b0:	sub	sp, sp, #0x100
    30b4:	stp	x29, x30, [sp, #240]
    30b8:	add	x29, sp, #0xf0
    30bc:	mov	x8, xzr
    30c0:	stur	x0, [x29, #-16]
    30c4:	stur	x1, [x29, #-24]
    30c8:	stur	x2, [x29, #-32]
    30cc:	stur	x3, [x29, #-40]
    30d0:	stur	x4, [x29, #-48]
    30d4:	ldur	x0, [x29, #-16]
    30d8:	ldur	x1, [x29, #-24]
    30dc:	str	x8, [sp, #72]
    30e0:	bl	1610 <ctf_dtd_lookup>
    30e4:	stur	x0, [x29, #-56]
    30e8:	ldr	x8, [sp, #72]
    30ec:	stur	x8, [x29, #-112]
    30f0:	ldur	x9, [x29, #-16]
    30f4:	ldr	w10, [x9, #552]
    30f8:	and	w10, w10, #0x2
    30fc:	cbnz	w10, 3114 <ctf_add_member_offset+0x64>
    3100:	ldur	x0, [x29, #-16]
    3104:	mov	w1, #0x40d                 	// #1037
    3108:	bl	0 <ctf_set_errno>
    310c:	stur	w0, [x29, #-4]
    3110:	b	3610 <ctf_add_member_offset+0x560>
    3114:	ldur	x8, [x29, #-56]
    3118:	cbnz	x8, 3130 <ctf_add_member_offset+0x80>
    311c:	ldur	x0, [x29, #-16]
    3120:	mov	w1, #0x3fa                 	// #1018
    3124:	bl	0 <ctf_set_errno>
    3128:	stur	w0, [x29, #-4]
    312c:	b	3610 <ctf_add_member_offset+0x560>
    3130:	ldur	x8, [x29, #-16]
    3134:	ldr	x8, [x8]
    3138:	ldr	x8, [x8]
    313c:	ldur	x9, [x29, #-56]
    3140:	ldr	w0, [x9, #28]
    3144:	blr	x8
    3148:	stur	w0, [x29, #-92]
    314c:	ldur	x8, [x29, #-16]
    3150:	ldr	x8, [x8]
    3154:	ldr	x8, [x8, #8]
    3158:	ldur	x9, [x29, #-56]
    315c:	ldr	w0, [x9, #28]
    3160:	blr	x8
    3164:	stur	w0, [x29, #-100]
    3168:	ldur	x8, [x29, #-16]
    316c:	ldr	x8, [x8]
    3170:	ldr	x8, [x8, #16]
    3174:	ldur	x9, [x29, #-56]
    3178:	ldr	w0, [x9, #28]
    317c:	blr	x8
    3180:	stur	w0, [x29, #-96]
    3184:	ldur	w10, [x29, #-92]
    3188:	cmp	w10, #0x6
    318c:	b.eq	31b0 <ctf_add_member_offset+0x100>  // b.none
    3190:	ldur	w8, [x29, #-92]
    3194:	cmp	w8, #0x7
    3198:	b.eq	31b0 <ctf_add_member_offset+0x100>  // b.none
    319c:	ldur	x0, [x29, #-16]
    31a0:	mov	w1, #0x3fb                 	// #1019
    31a4:	bl	0 <ctf_set_errno>
    31a8:	stur	w0, [x29, #-4]
    31ac:	b	3610 <ctf_add_member_offset+0x560>
    31b0:	ldur	w8, [x29, #-96]
    31b4:	mov	w9, #0xffffff              	// #16777215
    31b8:	cmp	w8, w9
    31bc:	b.ne	31d4 <ctf_add_member_offset+0x124>  // b.any
    31c0:	ldur	x0, [x29, #-16]
    31c4:	mov	w1, #0x40e                 	// #1038
    31c8:	bl	0 <ctf_set_errno>
    31cc:	stur	w0, [x29, #-4]
    31d0:	b	3610 <ctf_add_member_offset+0x560>
    31d4:	ldur	x8, [x29, #-32]
    31d8:	cbz	x8, 3234 <ctf_add_member_offset+0x184>
    31dc:	ldur	x8, [x29, #-56]
    31e0:	ldr	x8, [x8, #56]
    31e4:	stur	x8, [x29, #-64]
    31e8:	ldur	x8, [x29, #-64]
    31ec:	cbz	x8, 3234 <ctf_add_member_offset+0x184>
    31f0:	ldur	x8, [x29, #-64]
    31f4:	ldr	x8, [x8, #16]
    31f8:	cbz	x8, 3224 <ctf_add_member_offset+0x174>
    31fc:	ldur	x8, [x29, #-64]
    3200:	ldr	x0, [x8, #16]
    3204:	ldur	x1, [x29, #-32]
    3208:	bl	0 <strcmp>
    320c:	cbnz	w0, 3224 <ctf_add_member_offset+0x174>
    3210:	ldur	x0, [x29, #-16]
    3214:	mov	w1, #0x410                 	// #1040
    3218:	bl	0 <ctf_set_errno>
    321c:	stur	w0, [x29, #-4]
    3220:	b	3610 <ctf_add_member_offset+0x560>
    3224:	ldur	x8, [x29, #-64]
    3228:	ldr	x8, [x8, #8]
    322c:	stur	x8, [x29, #-64]
    3230:	b	31e8 <ctf_add_member_offset+0x138>
    3234:	ldur	x0, [x29, #-16]
    3238:	ldur	x1, [x29, #-40]
    323c:	bl	0 <ctf_type_size>
    3240:	stur	x0, [x29, #-72]
    3244:	cmp	x0, #0x0
    3248:	cset	w8, lt  // lt = tstop
    324c:	tbnz	w8, #0, 326c <ctf_add_member_offset+0x1bc>
    3250:	ldur	x0, [x29, #-16]
    3254:	ldur	x1, [x29, #-40]
    3258:	bl	0 <ctf_type_align>
    325c:	stur	x0, [x29, #-80]
    3260:	cmp	x0, #0x0
    3264:	cset	w8, ge  // ge = tcont
    3268:	tbnz	w8, #0, 3278 <ctf_add_member_offset+0x1c8>
    326c:	mov	w8, #0xffffffff            	// #-1
    3270:	stur	w8, [x29, #-4]
    3274:	b	3610 <ctf_add_member_offset+0x560>
    3278:	mov	x0, #0x30                  	// #48
    327c:	bl	0 <malloc>
    3280:	stur	x0, [x29, #-64]
    3284:	cbnz	x0, 329c <ctf_add_member_offset+0x1ec>
    3288:	ldur	x0, [x29, #-16]
    328c:	mov	w1, #0xb                   	// #11
    3290:	bl	0 <ctf_set_errno>
    3294:	stur	w0, [x29, #-4]
    3298:	b	3610 <ctf_add_member_offset+0x560>
    329c:	ldur	x8, [x29, #-32]
    32a0:	cbz	x8, 32d0 <ctf_add_member_offset+0x220>
    32a4:	ldur	x0, [x29, #-32]
    32a8:	bl	0 <strdup>
    32ac:	stur	x0, [x29, #-112]
    32b0:	cbnz	x0, 32d0 <ctf_add_member_offset+0x220>
    32b4:	ldur	x0, [x29, #-64]
    32b8:	bl	0 <free>
    32bc:	ldur	x0, [x29, #-16]
    32c0:	mov	w1, #0xb                   	// #11
    32c4:	bl	0 <ctf_set_errno>
    32c8:	stur	w0, [x29, #-4]
    32cc:	b	3610 <ctf_add_member_offset+0x560>
    32d0:	ldur	x8, [x29, #-112]
    32d4:	ldur	x9, [x29, #-64]
    32d8:	str	x8, [x9, #16]
    32dc:	ldur	x8, [x29, #-40]
    32e0:	ldur	x9, [x29, #-64]
    32e4:	str	x8, [x9, #24]
    32e8:	ldur	x8, [x29, #-64]
    32ec:	mov	w10, #0xffffffff            	// #-1
    32f0:	str	w10, [x8, #40]
    32f4:	ldur	w10, [x29, #-92]
    32f8:	cmp	w10, #0x6
    32fc:	b.ne	3518 <ctf_add_member_offset+0x468>  // b.any
    3300:	ldur	w8, [x29, #-96]
    3304:	cbz	w8, 3518 <ctf_add_member_offset+0x468>
    3308:	ldur	x8, [x29, #-48]
    330c:	mov	x9, #0xffffffffffffffff    	// #-1
    3310:	cmp	x8, x9
    3314:	b.ne	349c <ctf_add_member_offset+0x3ec>  // b.any
    3318:	ldur	x8, [x29, #-56]
    331c:	ldr	x8, [x8, #48]
    3320:	str	x8, [sp, #120]
    3324:	ldur	x0, [x29, #-16]
    3328:	ldr	x8, [sp, #120]
    332c:	ldr	x1, [x8, #24]
    3330:	bl	0 <ctf_type_resolve>
    3334:	str	x0, [sp, #112]
    3338:	ldr	x8, [sp, #120]
    333c:	ldr	x8, [x8, #32]
    3340:	str	x8, [sp, #104]
    3344:	ldur	x0, [x29, #-16]
    3348:	ldr	x1, [sp, #112]
    334c:	add	x2, sp, #0x5c
    3350:	bl	0 <ctf_type_encoding>
    3354:	cbnz	w0, 3370 <ctf_add_member_offset+0x2c0>
    3358:	ldr	w8, [sp, #100]
    335c:	mov	w9, w8
    3360:	ldr	x10, [sp, #104]
    3364:	add	x9, x10, x9
    3368:	str	x9, [sp, #104]
    336c:	b	33a4 <ctf_add_member_offset+0x2f4>
    3370:	ldur	x0, [x29, #-16]
    3374:	ldr	x1, [sp, #112]
    3378:	bl	0 <ctf_type_size>
    337c:	str	x0, [sp, #80]
    3380:	cmp	x0, #0x0
    3384:	cset	w8, le
    3388:	tbnz	w8, #0, 33a4 <ctf_add_member_offset+0x2f4>
    338c:	ldr	x8, [sp, #80]
    3390:	mov	x9, #0x8                   	// #8
    3394:	mul	x8, x8, x9
    3398:	ldr	x9, [sp, #104]
    339c:	add	x8, x9, x8
    33a0:	str	x8, [sp, #104]
    33a4:	ldr	x8, [sp, #104]
    33a8:	mov	x9, #0x8                   	// #8
    33ac:	add	x8, x8, #0x8
    33b0:	subs	x8, x8, #0x1
    33b4:	and	x8, x8, #0xfffffffffffffff8
    33b8:	udiv	x8, x8, x9
    33bc:	str	x8, [sp, #104]
    33c0:	ldur	x8, [x29, #-80]
    33c4:	cmp	x8, #0x1
    33c8:	b.le	33d0 <ctf_add_member_offset+0x320>
    33cc:	b	33d0 <ctf_add_member_offset+0x320>
    33d0:	ldr	x8, [sp, #104]
    33d4:	ldur	x9, [x29, #-80]
    33d8:	cmp	x9, #0x1
    33dc:	str	x8, [sp, #64]
    33e0:	b.le	33f0 <ctf_add_member_offset+0x340>
    33e4:	ldur	x8, [x29, #-80]
    33e8:	str	x8, [sp, #56]
    33ec:	b	33f8 <ctf_add_member_offset+0x348>
    33f0:	mov	x8, #0x1                   	// #1
    33f4:	str	x8, [sp, #56]
    33f8:	ldr	x8, [sp, #56]
    33fc:	subs	x8, x8, #0x1
    3400:	ldr	x9, [sp, #64]
    3404:	add	x8, x9, x8
    3408:	ldur	x10, [x29, #-80]
    340c:	cmp	x10, #0x1
    3410:	str	x8, [sp, #48]
    3414:	b.le	3424 <ctf_add_member_offset+0x374>
    3418:	ldur	x8, [x29, #-80]
    341c:	str	x8, [sp, #40]
    3420:	b	342c <ctf_add_member_offset+0x37c>
    3424:	mov	x8, #0x1                   	// #1
    3428:	str	x8, [sp, #40]
    342c:	ldr	x8, [sp, #40]
    3430:	ldr	x9, [sp, #48]
    3434:	udiv	x8, x9, x8
    3438:	ldur	x10, [x29, #-80]
    343c:	cmp	x10, #0x1
    3440:	str	x8, [sp, #32]
    3444:	b.le	3454 <ctf_add_member_offset+0x3a4>
    3448:	ldur	x8, [x29, #-80]
    344c:	str	x8, [sp, #24]
    3450:	b	345c <ctf_add_member_offset+0x3ac>
    3454:	mov	x8, #0x1                   	// #1
    3458:	str	x8, [sp, #24]
    345c:	ldr	x8, [sp, #24]
    3460:	ldr	x9, [sp, #32]
    3464:	mul	x8, x9, x8
    3468:	str	x8, [sp, #16]
    346c:	ldr	x8, [sp, #16]
    3470:	str	x8, [sp, #104]
    3474:	ldr	x9, [sp, #104]
    3478:	mov	x10, #0x8                   	// #8
    347c:	mul	x9, x9, x10
    3480:	ldur	x10, [x29, #-64]
    3484:	str	x9, [x10, #32]
    3488:	ldr	x9, [sp, #104]
    348c:	ldur	x10, [x29, #-72]
    3490:	add	x9, x9, x10
    3494:	stur	x9, [x29, #-88]
    3498:	b	3514 <ctf_add_member_offset+0x464>
    349c:	ldur	x8, [x29, #-48]
    34a0:	ldur	x9, [x29, #-64]
    34a4:	str	x8, [x9, #32]
    34a8:	ldur	x0, [x29, #-16]
    34ac:	ldur	x8, [x29, #-56]
    34b0:	add	x1, x8, #0x18
    34b4:	mov	x8, xzr
    34b8:	mov	x2, x8
    34bc:	mov	x3, x8
    34c0:	bl	3620 <ctf_get_ctt_size>
    34c4:	stur	x0, [x29, #-88]
    34c8:	ldur	x8, [x29, #-88]
    34cc:	ldur	x9, [x29, #-48]
    34d0:	mov	w10, #0x8                   	// #8
    34d4:	sdiv	w9, w9, w10
    34d8:	ldur	x11, [x29, #-72]
    34dc:	add	x11, x11, w9, sxtw
    34e0:	cmp	x8, x11
    34e4:	b.le	34f4 <ctf_add_member_offset+0x444>
    34e8:	ldur	x8, [x29, #-88]
    34ec:	str	x8, [sp, #8]
    34f0:	b	350c <ctf_add_member_offset+0x45c>
    34f4:	ldur	x8, [x29, #-48]
    34f8:	mov	w9, #0x8                   	// #8
    34fc:	sdiv	w8, w8, w9
    3500:	ldur	x10, [x29, #-72]
    3504:	add	x10, x10, w8, sxtw
    3508:	str	x10, [sp, #8]
    350c:	ldr	x8, [sp, #8]
    3510:	stur	x8, [x29, #-88]
    3514:	b	356c <ctf_add_member_offset+0x4bc>
    3518:	ldur	x8, [x29, #-64]
    351c:	mov	x9, xzr
    3520:	str	xzr, [x8, #32]
    3524:	ldur	x0, [x29, #-16]
    3528:	ldur	x8, [x29, #-56]
    352c:	add	x1, x8, #0x18
    3530:	mov	x2, x9
    3534:	mov	x3, x9
    3538:	bl	3620 <ctf_get_ctt_size>
    353c:	stur	x0, [x29, #-88]
    3540:	ldur	x8, [x29, #-88]
    3544:	ldur	x9, [x29, #-72]
    3548:	cmp	x8, x9
    354c:	b.le	355c <ctf_add_member_offset+0x4ac>
    3550:	ldur	x8, [x29, #-88]
    3554:	str	x8, [sp]
    3558:	b	3564 <ctf_add_member_offset+0x4b4>
    355c:	ldur	x8, [x29, #-72]
    3560:	str	x8, [sp]
    3564:	ldr	x8, [sp]
    3568:	stur	x8, [x29, #-88]
    356c:	ldur	x8, [x29, #-88]
    3570:	mov	x9, #0xfffffffe            	// #4294967294
    3574:	cmp	x8, x9
    3578:	b.ls	35a8 <ctf_add_member_offset+0x4f8>  // b.plast
    357c:	ldur	x8, [x29, #-56]
    3580:	mov	w9, #0xffffffff            	// #-1
    3584:	str	w9, [x8, #32]
    3588:	ldur	x8, [x29, #-88]
    358c:	lsr	x8, x8, #32
    3590:	ldur	x10, [x29, #-56]
    3594:	str	w8, [x10, #36]
    3598:	ldur	x10, [x29, #-88]
    359c:	ldur	x11, [x29, #-56]
    35a0:	str	w10, [x11, #40]
    35a4:	b	35b4 <ctf_add_member_offset+0x504>
    35a8:	ldur	x8, [x29, #-88]
    35ac:	ldur	x9, [x29, #-56]
    35b0:	str	w8, [x9, #32]
    35b4:	ldur	w8, [x29, #-92]
    35b8:	ldur	w9, [x29, #-100]
    35bc:	mov	w10, wzr
    35c0:	mov	w11, #0x1                   	// #1
    35c4:	cmp	w9, #0x0
    35c8:	csel	w9, w11, w10, ne  // ne = any
    35cc:	lsl	w9, w9, #25
    35d0:	orr	w8, w9, w8, lsl #26
    35d4:	ldur	w9, [x29, #-96]
    35d8:	add	w9, w9, #0x1
    35dc:	and	w9, w9, #0xffffff
    35e0:	orr	w8, w8, w9
    35e4:	ldur	x12, [x29, #-56]
    35e8:	str	w8, [x12, #28]
    35ec:	ldur	x12, [x29, #-56]
    35f0:	add	x0, x12, #0x30
    35f4:	ldur	x1, [x29, #-64]
    35f8:	bl	0 <ctf_list_append>
    35fc:	ldur	x12, [x29, #-16]
    3600:	ldr	w8, [x12, #552]
    3604:	orr	w8, w8, #0x4
    3608:	str	w8, [x12, #552]
    360c:	stur	wzr, [x29, #-4]
    3610:	ldur	w0, [x29, #-4]
    3614:	ldp	x29, x30, [sp, #240]
    3618:	add	sp, sp, #0x100
    361c:	ret

0000000000003620 <ctf_get_ctt_size>:
    3620:	sub	sp, sp, #0x30
    3624:	stp	x29, x30, [sp, #32]
    3628:	add	x29, sp, #0x20
    362c:	stur	x0, [x29, #-8]
    3630:	str	x1, [sp, #16]
    3634:	str	x2, [sp, #8]
    3638:	str	x3, [sp]
    363c:	ldur	x8, [x29, #-8]
    3640:	ldr	x8, [x8]
    3644:	ldr	x8, [x8, #24]
    3648:	ldur	x0, [x29, #-8]
    364c:	ldr	x1, [sp, #16]
    3650:	ldr	x2, [sp, #8]
    3654:	ldr	x3, [sp]
    3658:	blr	x8
    365c:	ldp	x29, x30, [sp, #32]
    3660:	add	sp, sp, #0x30
    3664:	ret

0000000000003668 <ctf_add_member_encoded>:
    3668:	sub	sp, sp, #0x70
    366c:	stp	x29, x30, [sp, #96]
    3670:	add	x29, sp, #0x60
    3674:	stur	x5, [x29, #-32]
    3678:	stur	x6, [x29, #-24]
    367c:	ldur	x8, [x29, #-32]
    3680:	stur	x8, [x29, #-16]
    3684:	ldur	w9, [x29, #-24]
    3688:	stur	w9, [x29, #-8]
    368c:	stur	x0, [x29, #-40]
    3690:	str	x1, [sp, #48]
    3694:	str	x2, [sp, #40]
    3698:	str	x3, [sp, #32]
    369c:	str	x4, [sp, #24]
    36a0:	ldur	x0, [x29, #-40]
    36a4:	ldr	x1, [sp, #32]
    36a8:	bl	1610 <ctf_dtd_lookup>
    36ac:	str	x0, [sp, #16]
    36b0:	ldur	x8, [x29, #-40]
    36b4:	ldr	x8, [x8]
    36b8:	ldr	x8, [x8]
    36bc:	ldr	x10, [sp, #16]
    36c0:	ldr	w0, [x10, #28]
    36c4:	blr	x8
    36c8:	str	w0, [sp, #12]
    36cc:	ldr	x8, [sp, #32]
    36d0:	str	w8, [sp, #8]
    36d4:	ldr	w8, [sp, #12]
    36d8:	cmp	w8, #0x1
    36dc:	b.eq	370c <ctf_add_member_encoded+0xa4>  // b.none
    36e0:	ldr	w8, [sp, #12]
    36e4:	cmp	w8, #0x2
    36e8:	b.eq	370c <ctf_add_member_encoded+0xa4>  // b.none
    36ec:	ldr	w8, [sp, #12]
    36f0:	cmp	w8, #0x8
    36f4:	b.eq	370c <ctf_add_member_encoded+0xa4>  // b.none
    36f8:	ldur	x0, [x29, #-40]
    36fc:	mov	w1, #0x3fe                 	// #1022
    3700:	bl	0 <ctf_set_errno>
    3704:	stur	w0, [x29, #-4]
    3708:	b	375c <ctf_add_member_encoded+0xf4>
    370c:	ldur	x0, [x29, #-40]
    3710:	ldrsw	x2, [sp, #8]
    3714:	mov	w8, wzr
    3718:	mov	w1, w8
    371c:	sub	x3, x29, #0x10
    3720:	bl	1a7c <ctf_add_slice>
    3724:	str	x0, [sp, #32]
    3728:	mov	x9, #0xffffffffffffffff    	// #-1
    372c:	cmp	x0, x9
    3730:	b.ne	3740 <ctf_add_member_encoded+0xd8>  // b.any
    3734:	mov	w8, #0xffffffff            	// #-1
    3738:	stur	w8, [x29, #-4]
    373c:	b	375c <ctf_add_member_encoded+0xf4>
    3740:	ldur	x0, [x29, #-40]
    3744:	ldr	x1, [sp, #48]
    3748:	ldr	x2, [sp, #40]
    374c:	ldr	x3, [sp, #32]
    3750:	ldr	x4, [sp, #24]
    3754:	bl	30b0 <ctf_add_member_offset>
    3758:	stur	w0, [x29, #-4]
    375c:	ldur	w0, [x29, #-4]
    3760:	ldp	x29, x30, [sp, #96]
    3764:	add	sp, sp, #0x70
    3768:	ret

000000000000376c <ctf_add_member>:
    376c:	sub	sp, sp, #0x30
    3770:	stp	x29, x30, [sp, #32]
    3774:	add	x29, sp, #0x20
    3778:	mov	x4, #0xffffffffffffffff    	// #-1
    377c:	stur	x0, [x29, #-8]
    3780:	str	x1, [sp, #16]
    3784:	str	x2, [sp, #8]
    3788:	str	x3, [sp]
    378c:	ldur	x0, [x29, #-8]
    3790:	ldr	x1, [sp, #16]
    3794:	ldr	x2, [sp, #8]
    3798:	ldr	x3, [sp]
    379c:	bl	30b0 <ctf_add_member_offset>
    37a0:	ldp	x29, x30, [sp, #32]
    37a4:	add	sp, sp, #0x30
    37a8:	ret

00000000000037ac <ctf_add_variable>:
    37ac:	sub	sp, sp, #0x40
    37b0:	stp	x29, x30, [sp, #48]
    37b4:	add	x29, sp, #0x30
    37b8:	stur	x0, [x29, #-16]
    37bc:	str	x1, [sp, #24]
    37c0:	str	x2, [sp, #16]
    37c4:	ldur	x8, [x29, #-16]
    37c8:	str	x8, [sp]
    37cc:	ldur	x8, [x29, #-16]
    37d0:	ldr	w9, [x8, #552]
    37d4:	and	w9, w9, #0x2
    37d8:	cbnz	w9, 37f0 <ctf_add_variable+0x44>
    37dc:	ldur	x0, [x29, #-16]
    37e0:	mov	w1, #0x40d                 	// #1037
    37e4:	bl	0 <ctf_set_errno>
    37e8:	stur	w0, [x29, #-4]
    37ec:	b	3928 <ctf_add_variable+0x17c>
    37f0:	ldur	x0, [x29, #-16]
    37f4:	ldr	x1, [sp, #24]
    37f8:	bl	17c0 <ctf_dvd_lookup>
    37fc:	cbz	x0, 3814 <ctf_add_variable+0x68>
    3800:	ldur	x0, [x29, #-16]
    3804:	mov	w1, #0x410                 	// #1040
    3808:	bl	0 <ctf_set_errno>
    380c:	stur	w0, [x29, #-4]
    3810:	b	3928 <ctf_add_variable+0x17c>
    3814:	ldr	x1, [sp, #16]
    3818:	mov	x0, sp
    381c:	bl	0 <ctf_lookup_by_id>
    3820:	cbnz	x0, 3830 <ctf_add_variable+0x84>
    3824:	mov	w8, #0xffffffff            	// #-1
    3828:	stur	w8, [x29, #-4]
    382c:	b	3928 <ctf_add_variable+0x17c>
    3830:	ldur	x0, [x29, #-16]
    3834:	ldr	x1, [sp, #16]
    3838:	bl	0 <ctf_type_resolve>
    383c:	mov	x8, #0xffffffffffffffff    	// #-1
    3840:	cmp	x0, x8
    3844:	b.ne	3864 <ctf_add_variable+0xb8>  // b.any
    3848:	ldur	x0, [x29, #-16]
    384c:	bl	0 <ctf_errno>
    3850:	cmp	w0, #0x41b
    3854:	b.ne	3864 <ctf_add_variable+0xb8>  // b.any
    3858:	mov	w8, #0xffffffff            	// #-1
    385c:	stur	w8, [x29, #-4]
    3860:	b	3928 <ctf_add_variable+0x17c>
    3864:	mov	x0, #0x28                  	// #40
    3868:	bl	0 <malloc>
    386c:	str	x0, [sp, #8]
    3870:	cbnz	x0, 3888 <ctf_add_variable+0xdc>
    3874:	ldur	x0, [x29, #-16]
    3878:	mov	w1, #0xb                   	// #11
    387c:	bl	0 <ctf_set_errno>
    3880:	stur	w0, [x29, #-4]
    3884:	b	3928 <ctf_add_variable+0x17c>
    3888:	ldr	x8, [sp, #24]
    388c:	cbz	x8, 38c0 <ctf_add_variable+0x114>
    3890:	ldr	x0, [sp, #24]
    3894:	bl	0 <strdup>
    3898:	ldr	x8, [sp, #8]
    389c:	str	x0, [x8, #16]
    38a0:	cbnz	x0, 38c0 <ctf_add_variable+0x114>
    38a4:	ldr	x0, [sp, #8]
    38a8:	bl	0 <free>
    38ac:	ldur	x0, [x29, #-16]
    38b0:	mov	w1, #0xb                   	// #11
    38b4:	bl	0 <ctf_set_errno>
    38b8:	stur	w0, [x29, #-4]
    38bc:	b	3928 <ctf_add_variable+0x17c>
    38c0:	ldr	x8, [sp, #16]
    38c4:	ldr	x9, [sp, #8]
    38c8:	str	x8, [x9, #24]
    38cc:	ldur	x8, [x29, #-16]
    38d0:	ldr	x8, [x8, #624]
    38d4:	ldr	x9, [sp, #8]
    38d8:	str	x8, [x9, #32]
    38dc:	ldur	x0, [x29, #-16]
    38e0:	ldr	x1, [sp, #8]
    38e4:	bl	1700 <ctf_dvd_insert>
    38e8:	cmp	w0, #0x0
    38ec:	cset	w10, ge  // ge = tcont
    38f0:	tbnz	w10, #0, 3914 <ctf_add_variable+0x168>
    38f4:	ldr	x8, [sp, #8]
    38f8:	ldr	x0, [x8, #16]
    38fc:	bl	0 <free>
    3900:	ldr	x0, [sp, #8]
    3904:	bl	0 <free>
    3908:	mov	w9, #0xffffffff            	// #-1
    390c:	stur	w9, [x29, #-4]
    3910:	b	3928 <ctf_add_variable+0x17c>
    3914:	ldur	x8, [x29, #-16]
    3918:	ldr	w9, [x8, #552]
    391c:	orr	w9, w9, #0x4
    3920:	str	w9, [x8, #552]
    3924:	stur	wzr, [x29, #-4]
    3928:	ldur	w0, [x29, #-4]
    392c:	ldp	x29, x30, [sp, #48]
    3930:	add	sp, sp, #0x40
    3934:	ret

0000000000003938 <ctf_add_type>:
    3938:	sub	sp, sp, #0x40
    393c:	stp	x29, x30, [sp, #48]
    3940:	add	x29, sp, #0x30
    3944:	stur	x0, [x29, #-16]
    3948:	str	x1, [sp, #24]
    394c:	str	x2, [sp, #16]
    3950:	ldr	x8, [sp, #24]
    3954:	ldr	x8, [x8, #696]
    3958:	cbnz	x8, 3984 <ctf_add_type+0x4c>
    395c:	adrp	x0, 0 <ctf_hash_integer>
    3960:	add	x0, x0, #0x0
    3964:	adrp	x1, 0 <ctf_hash_eq_integer>
    3968:	add	x1, x1, #0x0
    396c:	mov	x8, xzr
    3970:	mov	x2, x8
    3974:	mov	x3, x8
    3978:	bl	0 <ctf_dynhash_create>
    397c:	ldr	x8, [sp, #24]
    3980:	str	x0, [x8, #696]
    3984:	ldr	x8, [sp, #24]
    3988:	ldr	x8, [x8, #696]
    398c:	cbnz	x8, 39a4 <ctf_add_type+0x6c>
    3990:	ldur	x0, [x29, #-16]
    3994:	mov	w1, #0xc                   	// #12
    3998:	bl	0 <ctf_set_errno>
    399c:	stur	x0, [x29, #-8]
    39a0:	b	39d0 <ctf_add_type+0x98>
    39a4:	ldur	x0, [x29, #-16]
    39a8:	ldr	x1, [sp, #24]
    39ac:	ldr	x2, [sp, #16]
    39b0:	ldr	x3, [sp, #24]
    39b4:	bl	39e0 <ctf_add_type_internal>
    39b8:	str	x0, [sp, #8]
    39bc:	ldr	x8, [sp, #24]
    39c0:	ldr	x0, [x8, #696]
    39c4:	bl	0 <ctf_dynhash_empty>
    39c8:	ldr	x8, [sp, #8]
    39cc:	stur	x8, [x29, #-8]
    39d0:	ldur	x0, [x29, #-8]
    39d4:	ldp	x29, x30, [sp, #48]
    39d8:	add	sp, sp, #0x40
    39dc:	ret

00000000000039e0 <ctf_add_type_internal>:
    39e0:	sub	sp, sp, #0x1d0
    39e4:	stp	x29, x30, [sp, #432]
    39e8:	str	x28, [sp, #448]
    39ec:	add	x29, sp, #0x1b0
    39f0:	mov	x8, #0xffffffffffffffff    	// #-1
    39f4:	stur	x0, [x29, #-16]
    39f8:	stur	x1, [x29, #-24]
    39fc:	stur	x2, [x29, #-32]
    3a00:	stur	x3, [x29, #-40]
    3a04:	stur	x8, [x29, #-48]
    3a08:	stur	wzr, [x29, #-52]
    3a0c:	ldur	x8, [x29, #-16]
    3a10:	stur	x8, [x29, #-64]
    3a14:	ldur	x8, [x29, #-32]
    3a18:	str	x8, [sp, #176]
    3a1c:	ldur	x8, [x29, #-16]
    3a20:	ldr	w9, [x8, #552]
    3a24:	and	w9, w9, #0x2
    3a28:	cbnz	w9, 3a40 <ctf_add_type_internal+0x60>
    3a2c:	ldur	x0, [x29, #-16]
    3a30:	mov	w1, #0x40d                 	// #1037
    3a34:	bl	0 <ctf_set_errno>
    3a38:	stur	x0, [x29, #-8]
    3a3c:	b	46b0 <ctf_add_type_internal+0xcd0>
    3a40:	ldur	x1, [x29, #-32]
    3a44:	sub	x0, x29, #0x18
    3a48:	bl	0 <ctf_lookup_by_id>
    3a4c:	stur	x0, [x29, #-104]
    3a50:	cbnz	x0, 3a84 <ctf_add_type_internal+0xa4>
    3a54:	ldur	x0, [x29, #-16]
    3a58:	ldur	x8, [x29, #-24]
    3a5c:	str	x0, [sp, #104]
    3a60:	mov	x0, x8
    3a64:	bl	0 <ctf_errno>
    3a68:	ldr	x8, [sp, #104]
    3a6c:	str	w0, [sp, #100]
    3a70:	mov	x0, x8
    3a74:	ldr	w1, [sp, #100]
    3a78:	bl	0 <ctf_set_errno>
    3a7c:	stur	x0, [x29, #-8]
    3a80:	b	46b0 <ctf_add_type_internal+0xcd0>
    3a84:	ldur	x0, [x29, #-24]
    3a88:	ldur	x1, [x29, #-32]
    3a8c:	bl	0 <ctf_type_resolve>
    3a90:	mov	x8, #0xffffffffffffffff    	// #-1
    3a94:	cmp	x0, x8
    3a98:	b.ne	3ac0 <ctf_add_type_internal+0xe0>  // b.any
    3a9c:	ldur	x0, [x29, #-24]
    3aa0:	bl	0 <ctf_errno>
    3aa4:	cmp	w0, #0x41b
    3aa8:	b.ne	3ac0 <ctf_add_type_internal+0xe0>  // b.any
    3aac:	ldur	x0, [x29, #-16]
    3ab0:	mov	w1, #0x41b                 	// #1051
    3ab4:	bl	0 <ctf_set_errno>
    3ab8:	stur	x0, [x29, #-8]
    3abc:	b	46b0 <ctf_add_type_internal+0xcd0>
    3ac0:	ldur	x0, [x29, #-24]
    3ac4:	ldur	x8, [x29, #-104]
    3ac8:	ldr	w1, [x8]
    3acc:	bl	0 <ctf_strptr>
    3ad0:	stur	x0, [x29, #-80]
    3ad4:	ldur	x8, [x29, #-24]
    3ad8:	ldr	x8, [x8]
    3adc:	ldr	x8, [x8]
    3ae0:	ldur	x9, [x29, #-104]
    3ae4:	ldr	w0, [x9, #4]
    3ae8:	blr	x8
    3aec:	stur	w0, [x29, #-84]
    3af0:	ldur	x8, [x29, #-24]
    3af4:	ldr	x8, [x8]
    3af8:	ldr	x8, [x8, #8]
    3afc:	ldur	x9, [x29, #-104]
    3b00:	ldr	w0, [x9, #4]
    3b04:	blr	x8
    3b08:	stur	w0, [x29, #-92]
    3b0c:	ldur	x8, [x29, #-24]
    3b10:	ldr	x8, [x8]
    3b14:	ldr	x8, [x8, #16]
    3b18:	ldur	x9, [x29, #-104]
    3b1c:	ldr	w0, [x9, #4]
    3b20:	blr	x8
    3b24:	stur	w0, [x29, #-96]
    3b28:	ldur	x0, [x29, #-24]
    3b2c:	ldur	x1, [x29, #-32]
    3b30:	sub	x2, x29, #0x40
    3b34:	bl	0 <ctf_type_mapping>
    3b38:	stur	x0, [x29, #-72]
    3b3c:	ldur	x8, [x29, #-72]
    3b40:	cbz	x8, 3bf0 <ctf_add_type_internal+0x210>
    3b44:	ldur	x8, [x29, #-40]
    3b48:	ldr	x0, [x8, #696]
    3b4c:	ldur	x8, [x29, #-32]
    3b50:	mov	x1, x8
    3b54:	bl	0 <ctf_dynhash_lookup>
    3b58:	cbz	x0, 3b68 <ctf_add_type_internal+0x188>
    3b5c:	ldur	x8, [x29, #-72]
    3b60:	stur	x8, [x29, #-8]
    3b64:	b	46b0 <ctf_add_type_internal+0xcd0>
    3b68:	ldur	x0, [x29, #-64]
    3b6c:	ldur	x1, [x29, #-72]
    3b70:	bl	0 <ctf_type_kind_unsliced>
    3b74:	ldur	w8, [x29, #-84]
    3b78:	cmp	w0, w8
    3b7c:	b.ne	3bf0 <ctf_add_type_internal+0x210>  // b.any
    3b80:	ldur	w8, [x29, #-84]
    3b84:	cmp	w8, #0x6
    3b88:	b.eq	3ba4 <ctf_add_type_internal+0x1c4>  // b.none
    3b8c:	ldur	w8, [x29, #-84]
    3b90:	cmp	w8, #0x7
    3b94:	b.eq	3ba4 <ctf_add_type_internal+0x1c4>  // b.none
    3b98:	ldur	w8, [x29, #-84]
    3b9c:	cmp	w8, #0x8
    3ba0:	b.ne	3bf0 <ctf_add_type_internal+0x210>  // b.any
    3ba4:	ldur	x1, [x29, #-48]
    3ba8:	sub	x0, x29, #0x40
    3bac:	bl	0 <ctf_lookup_by_id>
    3bb0:	stur	x0, [x29, #-112]
    3bb4:	cbz	x0, 3bf0 <ctf_add_type_internal+0x210>
    3bb8:	ldur	w8, [x29, #-96]
    3bbc:	ldur	x9, [x29, #-64]
    3bc0:	ldr	x9, [x9]
    3bc4:	ldr	x9, [x9, #16]
    3bc8:	ldur	x10, [x29, #-112]
    3bcc:	ldr	w0, [x10, #4]
    3bd0:	str	w8, [sp, #96]
    3bd4:	blr	x9
    3bd8:	ldr	w8, [sp, #96]
    3bdc:	cmp	w8, w0
    3be0:	b.ne	3bf0 <ctf_add_type_internal+0x210>  // b.any
    3be4:	ldur	x8, [x29, #-72]
    3be8:	stur	x8, [x29, #-8]
    3bec:	b	46b0 <ctf_add_type_internal+0xcd0>
    3bf0:	ldur	w8, [x29, #-84]
    3bf4:	stur	w8, [x29, #-88]
    3bf8:	ldur	w8, [x29, #-84]
    3bfc:	cmp	w8, #0x9
    3c00:	b.ne	3c10 <ctf_add_type_internal+0x230>  // b.any
    3c04:	ldur	x8, [x29, #-104]
    3c08:	ldr	w9, [x8, #8]
    3c0c:	stur	w9, [x29, #-88]
    3c10:	ldur	w8, [x29, #-92]
    3c14:	and	w8, w8, #0x1
    3c18:	cbz	w8, 3c58 <ctf_add_type_internal+0x278>
    3c1c:	ldur	x8, [x29, #-80]
    3c20:	ldrb	w9, [x8]
    3c24:	cbz	w9, 3c58 <ctf_add_type_internal+0x278>
    3c28:	ldur	x0, [x29, #-16]
    3c2c:	ldur	w1, [x29, #-88]
    3c30:	ldur	x2, [x29, #-80]
    3c34:	bl	0 <ctf_lookup_by_rawname>
    3c38:	stur	x0, [x29, #-72]
    3c3c:	cbz	x0, 3c58 <ctf_add_type_internal+0x278>
    3c40:	ldur	x8, [x29, #-72]
    3c44:	stur	x8, [x29, #-48]
    3c48:	ldur	x0, [x29, #-16]
    3c4c:	ldur	x1, [x29, #-48]
    3c50:	bl	0 <ctf_type_kind_unsliced>
    3c54:	stur	w0, [x29, #-52]
    3c58:	ldur	x8, [x29, #-48]
    3c5c:	mov	x9, #0xffffffffffffffff    	// #-1
    3c60:	cmp	x8, x9
    3c64:	b.eq	3d28 <ctf_add_type_internal+0x348>  // b.none
    3c68:	ldur	w8, [x29, #-52]
    3c6c:	ldur	w9, [x29, #-84]
    3c70:	cmp	w8, w9
    3c74:	b.eq	3d28 <ctf_add_type_internal+0x348>  // b.none
    3c78:	ldur	w8, [x29, #-84]
    3c7c:	cmp	w8, #0x9
    3c80:	b.ne	3cc8 <ctf_add_type_internal+0x2e8>  // b.any
    3c84:	ldur	w8, [x29, #-52]
    3c88:	cmp	w8, #0x8
    3c8c:	b.eq	3ca8 <ctf_add_type_internal+0x2c8>  // b.none
    3c90:	ldur	w8, [x29, #-52]
    3c94:	cmp	w8, #0x6
    3c98:	b.eq	3ca8 <ctf_add_type_internal+0x2c8>  // b.none
    3c9c:	ldur	w8, [x29, #-52]
    3ca0:	cmp	w8, #0x7
    3ca4:	b.ne	3cc8 <ctf_add_type_internal+0x2e8>  // b.any
    3ca8:	ldur	x0, [x29, #-24]
    3cac:	ldur	x1, [x29, #-32]
    3cb0:	ldur	x2, [x29, #-16]
    3cb4:	ldur	x3, [x29, #-48]
    3cb8:	bl	0 <ctf_add_type_mapping>
    3cbc:	ldur	x8, [x29, #-48]
    3cc0:	stur	x8, [x29, #-8]
    3cc4:	b	46b0 <ctf_add_type_internal+0xcd0>
    3cc8:	ldur	w8, [x29, #-52]
    3ccc:	cmp	w8, #0x9
    3cd0:	b.ne	3cf8 <ctf_add_type_internal+0x318>  // b.any
    3cd4:	ldur	w8, [x29, #-84]
    3cd8:	cmp	w8, #0x8
    3cdc:	b.eq	3d28 <ctf_add_type_internal+0x348>  // b.none
    3ce0:	ldur	w8, [x29, #-84]
    3ce4:	cmp	w8, #0x6
    3ce8:	b.eq	3d28 <ctf_add_type_internal+0x348>  // b.none
    3cec:	ldur	w8, [x29, #-84]
    3cf0:	cmp	w8, #0x7
    3cf4:	b.eq	3d28 <ctf_add_type_internal+0x348>  // b.none
    3cf8:	ldur	x1, [x29, #-80]
    3cfc:	ldur	w2, [x29, #-84]
    3d00:	ldur	x3, [x29, #-48]
    3d04:	ldur	w4, [x29, #-52]
    3d08:	adrp	x0, 0 <ctf_create>
    3d0c:	add	x0, x0, #0x0
    3d10:	bl	0 <ctf_dprintf>
    3d14:	ldur	x0, [x29, #-16]
    3d18:	mov	w1, #0x411                 	// #1041
    3d1c:	bl	0 <ctf_set_errno>
    3d20:	stur	x0, [x29, #-8]
    3d24:	b	46b0 <ctf_add_type_internal+0xcd0>
    3d28:	ldur	w8, [x29, #-84]
    3d2c:	cmp	w8, #0x1
    3d30:	b.eq	3d4c <ctf_add_type_internal+0x36c>  // b.none
    3d34:	ldur	w8, [x29, #-84]
    3d38:	cmp	w8, #0x2
    3d3c:	b.eq	3d4c <ctf_add_type_internal+0x36c>  // b.none
    3d40:	ldur	w8, [x29, #-84]
    3d44:	cmp	w8, #0xe
    3d48:	b.ne	3ea4 <ctf_add_type_internal+0x4c4>  // b.any
    3d4c:	ldur	x0, [x29, #-24]
    3d50:	ldur	x1, [x29, #-32]
    3d54:	sub	x2, x29, #0xac
    3d58:	bl	0 <ctf_type_encoding>
    3d5c:	cbz	w0, 3d90 <ctf_add_type_internal+0x3b0>
    3d60:	ldur	x0, [x29, #-16]
    3d64:	ldur	x8, [x29, #-24]
    3d68:	str	x0, [sp, #88]
    3d6c:	mov	x0, x8
    3d70:	bl	0 <ctf_errno>
    3d74:	ldr	x8, [sp, #88]
    3d78:	str	w0, [sp, #84]
    3d7c:	mov	x0, x8
    3d80:	ldr	w1, [sp, #84]
    3d84:	bl	0 <ctf_set_errno>
    3d88:	stur	x0, [x29, #-8]
    3d8c:	b	46b0 <ctf_add_type_internal+0xcd0>
    3d90:	ldur	x8, [x29, #-48]
    3d94:	mov	x9, #0xffffffffffffffff    	// #-1
    3d98:	cmp	x8, x9
    3d9c:	b.eq	3ea4 <ctf_add_type_internal+0x4c4>  // b.none
    3da0:	ldur	x8, [x29, #-16]
    3da4:	add	x0, sp, #0xa8
    3da8:	str	x8, [sp, #168]
    3dac:	ldur	x1, [x29, #-48]
    3db0:	bl	0 <ctf_lookup_by_id>
    3db4:	stur	x0, [x29, #-112]
    3db8:	cbnz	x0, 3dc8 <ctf_add_type_internal+0x3e8>
    3dbc:	mov	x8, #0xffffffffffffffff    	// #-1
    3dc0:	stur	x8, [x29, #-8]
    3dc4:	b	46b0 <ctf_add_type_internal+0xcd0>
    3dc8:	ldur	x0, [x29, #-16]
    3dcc:	ldur	x1, [x29, #-48]
    3dd0:	sub	x2, x29, #0xb8
    3dd4:	bl	0 <ctf_type_encoding>
    3dd8:	cbz	w0, 3de8 <ctf_add_type_internal+0x408>
    3ddc:	mov	x8, #0xffffffffffffffff    	// #-1
    3de0:	stur	x8, [x29, #-8]
    3de4:	b	46b0 <ctf_add_type_internal+0xcd0>
    3de8:	ldr	x8, [sp, #168]
    3dec:	ldr	x8, [x8]
    3df0:	ldr	x8, [x8, #8]
    3df4:	ldur	x9, [x29, #-112]
    3df8:	ldr	w0, [x9, #4]
    3dfc:	blr	x8
    3e00:	and	w10, w0, #0x1
    3e04:	cbz	w10, 3e64 <ctf_add_type_internal+0x484>
    3e08:	sub	x0, x29, #0xac
    3e0c:	sub	x1, x29, #0xb8
    3e10:	mov	x2, #0xc                   	// #12
    3e14:	bl	0 <memcmp>
    3e18:	cbnz	w0, 3e4c <ctf_add_type_internal+0x46c>
    3e1c:	ldur	w8, [x29, #-84]
    3e20:	cmp	w8, #0xe
    3e24:	b.eq	3e48 <ctf_add_type_internal+0x468>  // b.none
    3e28:	ldur	x0, [x29, #-24]
    3e2c:	ldur	x1, [x29, #-32]
    3e30:	ldur	x2, [x29, #-16]
    3e34:	ldur	x3, [x29, #-48]
    3e38:	bl	0 <ctf_add_type_mapping>
    3e3c:	ldur	x8, [x29, #-48]
    3e40:	stur	x8, [x29, #-8]
    3e44:	b	46b0 <ctf_add_type_internal+0xcd0>
    3e48:	b	3e60 <ctf_add_type_internal+0x480>
    3e4c:	ldur	x0, [x29, #-16]
    3e50:	mov	w1, #0x411                 	// #1041
    3e54:	bl	0 <ctf_set_errno>
    3e58:	stur	x0, [x29, #-8]
    3e5c:	b	46b0 <ctf_add_type_internal+0xcd0>
    3e60:	b	3ea4 <ctf_add_type_internal+0x4c4>
    3e64:	sub	x0, x29, #0xac
    3e68:	sub	x1, x29, #0xb8
    3e6c:	mov	x2, #0xc                   	// #12
    3e70:	bl	0 <memcmp>
    3e74:	cbnz	w0, 3ea4 <ctf_add_type_internal+0x4c4>
    3e78:	ldur	w8, [x29, #-84]
    3e7c:	cmp	w8, #0xe
    3e80:	b.eq	3ea4 <ctf_add_type_internal+0x4c4>  // b.none
    3e84:	ldur	x0, [x29, #-24]
    3e88:	ldur	x1, [x29, #-32]
    3e8c:	ldur	x2, [x29, #-16]
    3e90:	ldur	x3, [x29, #-48]
    3e94:	bl	0 <ctf_add_type_mapping>
    3e98:	ldur	x8, [x29, #-48]
    3e9c:	stur	x8, [x29, #-8]
    3ea0:	b	46b0 <ctf_add_type_internal+0xcd0>
    3ea4:	ldur	x8, [x29, #-24]
    3ea8:	sub	x9, x29, #0x88
    3eac:	stur	x8, [x29, #-136]
    3eb0:	ldur	x8, [x29, #-32]
    3eb4:	stur	x8, [x29, #-128]
    3eb8:	mov	x8, xzr
    3ebc:	str	x8, [x9, #16]
    3ec0:	ldur	x9, [x29, #-16]
    3ec4:	sub	x10, x29, #0xa0
    3ec8:	stur	x9, [x29, #-160]
    3ecc:	ldur	x9, [x29, #-48]
    3ed0:	stur	x9, [x29, #-152]
    3ed4:	str	x8, [x10, #16]
    3ed8:	ldur	x8, [x29, #-40]
    3edc:	ldr	x0, [x8, #696]
    3ee0:	ldur	x8, [x29, #-32]
    3ee4:	mov	x1, x8
    3ee8:	mov	x8, #0x1                   	// #1
    3eec:	mov	x2, x8
    3ef0:	bl	0 <ctf_dynhash_insert>
    3ef4:	cmp	w0, #0x0
    3ef8:	cset	w11, ge  // ge = tcont
    3efc:	tbnz	w11, #0, 3f14 <ctf_add_type_internal+0x534>
    3f00:	ldur	x0, [x29, #-16]
    3f04:	mov	w1, #0xc                   	// #12
    3f08:	bl	0 <ctf_set_errno>
    3f0c:	stur	x0, [x29, #-8]
    3f10:	b	46b0 <ctf_add_type_internal+0xcd0>
    3f14:	ldur	w8, [x29, #-84]
    3f18:	subs	w8, w8, #0x1
    3f1c:	mov	w9, w8
    3f20:	ubfx	x9, x9, #0, #32
    3f24:	cmp	x9, #0xd
    3f28:	str	x9, [sp, #72]
    3f2c:	b.hi	4670 <ctf_add_type_internal+0xc90>  // b.pmore
    3f30:	adrp	x8, 0 <ctf_create>
    3f34:	add	x8, x8, #0x0
    3f38:	ldr	x11, [sp, #72]
    3f3c:	ldrsw	x10, [x8, x11, lsl #2]
    3f40:	add	x9, x8, x10
    3f44:	br	x9
    3f48:	ldur	x0, [x29, #-16]
    3f4c:	ldur	w1, [x29, #-92]
    3f50:	ldur	x2, [x29, #-80]
    3f54:	sub	x3, x29, #0xac
    3f58:	bl	1f34 <ctf_add_integer>
    3f5c:	stur	x0, [x29, #-48]
    3f60:	b	4684 <ctf_add_type_internal+0xca4>
    3f64:	ldur	x0, [x29, #-16]
    3f68:	ldur	w1, [x29, #-92]
    3f6c:	ldur	x2, [x29, #-80]
    3f70:	sub	x3, x29, #0xac
    3f74:	bl	206c <ctf_add_float>
    3f78:	stur	x0, [x29, #-48]
    3f7c:	b	4684 <ctf_add_type_internal+0xca4>
    3f80:	ldur	x0, [x29, #-24]
    3f84:	ldur	x1, [x29, #-32]
    3f88:	bl	0 <ctf_type_reference>
    3f8c:	stur	x0, [x29, #-32]
    3f90:	ldur	x0, [x29, #-16]
    3f94:	ldur	x1, [x29, #-24]
    3f98:	ldur	x2, [x29, #-32]
    3f9c:	ldur	x3, [x29, #-40]
    3fa0:	bl	39e0 <ctf_add_type_internal>
    3fa4:	stur	x0, [x29, #-32]
    3fa8:	ldur	x8, [x29, #-32]
    3fac:	mov	x9, #0xffffffffffffffff    	// #-1
    3fb0:	cmp	x8, x9
    3fb4:	b.ne	3fc4 <ctf_add_type_internal+0x5e4>  // b.any
    3fb8:	mov	x8, #0xffffffffffffffff    	// #-1
    3fbc:	stur	x8, [x29, #-8]
    3fc0:	b	46b0 <ctf_add_type_internal+0xcd0>
    3fc4:	ldur	x0, [x29, #-16]
    3fc8:	ldur	w1, [x29, #-92]
    3fcc:	ldur	x2, [x29, #-32]
    3fd0:	sub	x3, x29, #0xac
    3fd4:	bl	1a7c <ctf_add_slice>
    3fd8:	stur	x0, [x29, #-48]
    3fdc:	b	4684 <ctf_add_type_internal+0xca4>
    3fe0:	ldur	x0, [x29, #-24]
    3fe4:	ldur	x1, [x29, #-32]
    3fe8:	bl	0 <ctf_type_reference>
    3fec:	stur	x0, [x29, #-32]
    3ff0:	ldur	x0, [x29, #-16]
    3ff4:	ldur	x1, [x29, #-24]
    3ff8:	ldur	x2, [x29, #-32]
    3ffc:	ldur	x3, [x29, #-40]
    4000:	bl	39e0 <ctf_add_type_internal>
    4004:	stur	x0, [x29, #-32]
    4008:	ldur	x8, [x29, #-32]
    400c:	mov	x9, #0xffffffffffffffff    	// #-1
    4010:	cmp	x8, x9
    4014:	b.ne	4024 <ctf_add_type_internal+0x644>  // b.any
    4018:	mov	x8, #0xffffffffffffffff    	// #-1
    401c:	stur	x8, [x29, #-8]
    4020:	b	46b0 <ctf_add_type_internal+0xcd0>
    4024:	ldur	x0, [x29, #-16]
    4028:	ldur	w1, [x29, #-92]
    402c:	ldur	x2, [x29, #-32]
    4030:	ldur	w3, [x29, #-84]
    4034:	bl	20e4 <ctf_add_reftype>
    4038:	stur	x0, [x29, #-48]
    403c:	b	4684 <ctf_add_type_internal+0xca4>
    4040:	ldur	x0, [x29, #-24]
    4044:	ldur	x1, [x29, #-32]
    4048:	sub	x2, x29, #0xd0
    404c:	bl	0 <ctf_array_info>
    4050:	cbz	w0, 4084 <ctf_add_type_internal+0x6a4>
    4054:	ldur	x0, [x29, #-16]
    4058:	ldur	x8, [x29, #-24]
    405c:	str	x0, [sp, #64]
    4060:	mov	x0, x8
    4064:	bl	0 <ctf_errno>
    4068:	ldr	x8, [sp, #64]
    406c:	str	w0, [sp, #60]
    4070:	mov	x0, x8
    4074:	ldr	w1, [sp, #60]
    4078:	bl	0 <ctf_set_errno>
    407c:	stur	x0, [x29, #-8]
    4080:	b	46b0 <ctf_add_type_internal+0xcd0>
    4084:	ldur	x0, [x29, #-16]
    4088:	ldur	x1, [x29, #-24]
    408c:	ldur	x2, [x29, #-208]
    4090:	ldur	x3, [x29, #-40]
    4094:	bl	39e0 <ctf_add_type_internal>
    4098:	stur	x0, [x29, #-208]
    409c:	ldur	x0, [x29, #-16]
    40a0:	ldur	x1, [x29, #-24]
    40a4:	ldur	x2, [x29, #-200]
    40a8:	ldur	x3, [x29, #-40]
    40ac:	bl	39e0 <ctf_add_type_internal>
    40b0:	stur	x0, [x29, #-200]
    40b4:	ldur	w8, [x29, #-192]
    40b8:	stur	w8, [x29, #-192]
    40bc:	ldur	x9, [x29, #-208]
    40c0:	mov	x10, #0xffffffffffffffff    	// #-1
    40c4:	cmp	x9, x10
    40c8:	b.eq	40dc <ctf_add_type_internal+0x6fc>  // b.none
    40cc:	ldur	x8, [x29, #-200]
    40d0:	mov	x9, #0xffffffffffffffff    	// #-1
    40d4:	cmp	x8, x9
    40d8:	b.ne	40e8 <ctf_add_type_internal+0x708>  // b.any
    40dc:	mov	x8, #0xffffffffffffffff    	// #-1
    40e0:	stur	x8, [x29, #-8]
    40e4:	b	46b0 <ctf_add_type_internal+0xcd0>
    40e8:	ldur	x8, [x29, #-48]
    40ec:	mov	x9, #0xffffffffffffffff    	// #-1
    40f0:	cmp	x8, x9
    40f4:	b.eq	4178 <ctf_add_type_internal+0x798>  // b.none
    40f8:	ldur	x0, [x29, #-16]
    40fc:	ldur	x1, [x29, #-48]
    4100:	add	x2, sp, #0xc8
    4104:	bl	0 <ctf_array_info>
    4108:	cbz	w0, 4118 <ctf_add_type_internal+0x738>
    410c:	mov	x8, #0xffffffffffffffff    	// #-1
    4110:	stur	x8, [x29, #-8]
    4114:	b	46b0 <ctf_add_type_internal+0xcd0>
    4118:	sub	x0, x29, #0xd0
    411c:	add	x1, sp, #0xc8
    4120:	mov	x2, #0x18                  	// #24
    4124:	bl	0 <memcmp>
    4128:	cbz	w0, 4174 <ctf_add_type_internal+0x794>
    412c:	ldur	x1, [x29, #-80]
    4130:	ldur	x2, [x29, #-48]
    4134:	ldur	x3, [x29, #-208]
    4138:	ldur	x4, [x29, #-200]
    413c:	ldur	w5, [x29, #-192]
    4140:	ldr	x6, [sp, #200]
    4144:	ldr	x7, [sp, #208]
    4148:	ldr	w8, [sp, #216]
    414c:	adrp	x0, 0 <ctf_create>
    4150:	add	x0, x0, #0x0
    4154:	mov	x9, sp
    4158:	str	w8, [x9]
    415c:	bl	0 <ctf_dprintf>
    4160:	ldur	x0, [x29, #-16]
    4164:	mov	w1, #0x411                 	// #1041
    4168:	bl	0 <ctf_set_errno>
    416c:	stur	x0, [x29, #-8]
    4170:	b	46b0 <ctf_add_type_internal+0xcd0>
    4174:	b	418c <ctf_add_type_internal+0x7ac>
    4178:	ldur	x0, [x29, #-16]
    417c:	ldur	w1, [x29, #-92]
    4180:	sub	x2, x29, #0xd0
    4184:	bl	2324 <ctf_add_array>
    4188:	stur	x0, [x29, #-48]
    418c:	b	4684 <ctf_add_type_internal+0xca4>
    4190:	ldur	x0, [x29, #-16]
    4194:	ldur	x1, [x29, #-24]
    4198:	ldur	x8, [x29, #-104]
    419c:	ldr	w9, [x8, #8]
    41a0:	mov	w2, w9
    41a4:	ldur	x3, [x29, #-40]
    41a8:	bl	39e0 <ctf_add_type_internal>
    41ac:	str	x0, [sp, #184]
    41b0:	str	wzr, [sp, #192]
    41b4:	str	wzr, [sp, #196]
    41b8:	ldr	x8, [sp, #184]
    41bc:	mov	x10, #0xffffffffffffffff    	// #-1
    41c0:	cmp	x8, x10
    41c4:	b.ne	41d4 <ctf_add_type_internal+0x7f4>  // b.any
    41c8:	mov	x8, #0xffffffffffffffff    	// #-1
    41cc:	stur	x8, [x29, #-8]
    41d0:	b	46b0 <ctf_add_type_internal+0xcd0>
    41d4:	ldur	x0, [x29, #-16]
    41d8:	ldur	w1, [x29, #-92]
    41dc:	add	x2, sp, #0xb8
    41e0:	mov	x8, xzr
    41e4:	mov	x3, x8
    41e8:	bl	2500 <ctf_add_function>
    41ec:	stur	x0, [x29, #-48]
    41f0:	b	4684 <ctf_add_type_internal+0xca4>
    41f4:	str	wzr, [sp, #156]
    41f8:	ldur	x8, [x29, #-48]
    41fc:	mov	x9, #0xffffffffffffffff    	// #-1
    4200:	cmp	x8, x9
    4204:	b.eq	4300 <ctf_add_type_internal+0x920>  // b.none
    4208:	ldur	w8, [x29, #-84]
    420c:	cmp	w8, #0x9
    4210:	b.eq	4300 <ctf_add_type_internal+0x920>  // b.none
    4214:	ldur	w8, [x29, #-52]
    4218:	cmp	w8, #0x9
    421c:	b.eq	4300 <ctf_add_type_internal+0x920>  // b.none
    4220:	ldur	x0, [x29, #-24]
    4224:	ldur	x1, [x29, #-32]
    4228:	bl	0 <ctf_type_size>
    422c:	ldur	x8, [x29, #-16]
    4230:	ldur	x1, [x29, #-48]
    4234:	str	x0, [sp, #48]
    4238:	mov	x0, x8
    423c:	bl	0 <ctf_type_size>
    4240:	ldr	x8, [sp, #48]
    4244:	cmp	x8, x0
    4248:	b.eq	42b8 <ctf_add_type_internal+0x8d8>  // b.none
    424c:	ldur	x1, [x29, #-80]
    4250:	ldur	x2, [x29, #-48]
    4254:	ldur	x0, [x29, #-24]
    4258:	ldur	x8, [x29, #-32]
    425c:	str	x1, [sp, #40]
    4260:	mov	x1, x8
    4264:	str	x2, [sp, #32]
    4268:	bl	0 <ctf_type_size>
    426c:	ldur	x8, [x29, #-16]
    4270:	ldur	x1, [x29, #-48]
    4274:	str	x0, [sp, #24]
    4278:	mov	x0, x8
    427c:	bl	0 <ctf_type_size>
    4280:	adrp	x8, 0 <ctf_create>
    4284:	add	x8, x8, #0x0
    4288:	str	x0, [sp, #16]
    428c:	mov	x0, x8
    4290:	ldr	x1, [sp, #40]
    4294:	ldr	x2, [sp, #32]
    4298:	ldr	x3, [sp, #24]
    429c:	ldr	x4, [sp, #16]
    42a0:	bl	0 <ctf_dprintf>
    42a4:	ldur	x0, [x29, #-16]
    42a8:	mov	w1, #0x411                 	// #1041
    42ac:	bl	0 <ctf_set_errno>
    42b0:	stur	x0, [x29, #-8]
    42b4:	b	46b0 <ctf_add_type_internal+0xcd0>
    42b8:	ldur	x0, [x29, #-24]
    42bc:	ldur	x1, [x29, #-32]
    42c0:	adrp	x2, 0 <ctf_create>
    42c4:	add	x2, x2, #0x0
    42c8:	sub	x3, x29, #0xa0
    42cc:	bl	0 <ctf_member_iter>
    42d0:	cbz	w0, 42fc <ctf_add_type_internal+0x91c>
    42d4:	ldur	x1, [x29, #-80]
    42d8:	ldur	x2, [x29, #-48]
    42dc:	adrp	x0, 0 <ctf_create>
    42e0:	add	x0, x0, #0x0
    42e4:	bl	0 <ctf_dprintf>
    42e8:	ldur	x0, [x29, #-16]
    42ec:	mov	w1, #0x411                 	// #1041
    42f0:	bl	0 <ctf_set_errno>
    42f4:	stur	x0, [x29, #-8]
    42f8:	b	46b0 <ctf_add_type_internal+0xcd0>
    42fc:	b	4684 <ctf_add_type_internal+0xca4>
    4300:	ldur	x0, [x29, #-16]
    4304:	ldur	w1, [x29, #-92]
    4308:	ldur	x2, [x29, #-80]
    430c:	ldur	w3, [x29, #-84]
    4310:	add	x4, sp, #0x80
    4314:	bl	1c5c <ctf_add_generic>
    4318:	stur	x0, [x29, #-48]
    431c:	ldur	x8, [x29, #-48]
    4320:	mov	x9, #0xffffffffffffffff    	// #-1
    4324:	cmp	x8, x9
    4328:	b.ne	4338 <ctf_add_type_internal+0x958>  // b.any
    432c:	mov	x8, #0xffffffffffffffff    	// #-1
    4330:	stur	x8, [x29, #-8]
    4334:	b	46b0 <ctf_add_type_internal+0xcd0>
    4338:	ldur	x8, [x29, #-48]
    433c:	sub	x9, x29, #0xa0
    4340:	stur	x8, [x29, #-152]
    4344:	ldr	x8, [sp, #128]
    4348:	str	x8, [x9, #16]
    434c:	ldur	x0, [x29, #-24]
    4350:	ldur	x1, [x29, #-32]
    4354:	ldur	x2, [x29, #-16]
    4358:	ldur	x3, [x29, #-48]
    435c:	str	x9, [sp, #8]
    4360:	bl	0 <ctf_add_type_mapping>
    4364:	ldur	x0, [x29, #-24]
    4368:	ldur	x1, [x29, #-32]
    436c:	adrp	x2, 0 <ctf_create>
    4370:	add	x2, x2, #0x0
    4374:	ldr	x3, [sp, #8]
    4378:	bl	0 <ctf_member_iter>
    437c:	cbz	w0, 438c <ctf_add_type_internal+0x9ac>
    4380:	ldr	w8, [sp, #156]
    4384:	add	w8, w8, #0x1
    4388:	str	w8, [sp, #156]
    438c:	ldur	x0, [x29, #-24]
    4390:	ldur	x1, [x29, #-32]
    4394:	bl	0 <ctf_type_size>
    4398:	str	x0, [sp, #136]
    439c:	cmp	x0, #0x0
    43a0:	cset	w8, ge  // ge = tcont
    43a4:	tbnz	w8, #0, 43b4 <ctf_add_type_internal+0x9d4>
    43a8:	mov	x8, #0xffffffffffffffff    	// #-1
    43ac:	stur	x8, [x29, #-8]
    43b0:	b	46b0 <ctf_add_type_internal+0xcd0>
    43b4:	ldr	x8, [sp, #136]
    43b8:	str	x8, [sp, #144]
    43bc:	ldr	x8, [sp, #144]
    43c0:	mov	x9, #0xfffffffe            	// #4294967294
    43c4:	cmp	x8, x9
    43c8:	b.ls	43f8 <ctf_add_type_internal+0xa18>  // b.plast
    43cc:	ldr	x8, [sp, #128]
    43d0:	mov	w9, #0xffffffff            	// #-1
    43d4:	str	w9, [x8, #32]
    43d8:	ldr	x8, [sp, #144]
    43dc:	lsr	x8, x8, #32
    43e0:	ldr	x10, [sp, #128]
    43e4:	str	w8, [x10, #36]
    43e8:	ldr	x10, [sp, #144]
    43ec:	ldr	x11, [sp, #128]
    43f0:	str	w10, [x11, #40]
    43f4:	b	4404 <ctf_add_type_internal+0xa24>
    43f8:	ldr	x8, [sp, #144]
    43fc:	ldr	x9, [sp, #128]
    4400:	str	w8, [x9, #32]
    4404:	ldur	w8, [x29, #-84]
    4408:	ldur	w9, [x29, #-92]
    440c:	mov	w10, wzr
    4410:	mov	w11, #0x1                   	// #1
    4414:	cmp	w9, #0x0
    4418:	csel	w9, w11, w10, ne  // ne = any
    441c:	lsl	w9, w9, #25
    4420:	orr	w8, w9, w8, lsl #26
    4424:	ldur	w9, [x29, #-96]
    4428:	and	w9, w9, #0xffffff
    442c:	orr	w8, w8, w9
    4430:	ldr	x12, [sp, #128]
    4434:	str	w8, [x12, #28]
    4438:	ldr	x12, [sp, #128]
    443c:	ldr	x12, [x12, #56]
    4440:	str	x12, [sp, #160]
    4444:	ldr	x8, [sp, #160]
    4448:	cbz	x8, 44dc <ctf_add_type_internal+0xafc>
    444c:	ldur	x8, [x29, #-16]
    4450:	add	x2, sp, #0x78
    4454:	str	x8, [sp, #120]
    4458:	ldur	x0, [x29, #-24]
    445c:	ldr	x8, [sp, #160]
    4460:	ldr	x1, [x8, #24]
    4464:	bl	0 <ctf_type_mapping>
    4468:	str	x0, [sp, #112]
    446c:	ldr	x8, [sp, #112]
    4470:	cbnz	x8, 44c0 <ctf_add_type_internal+0xae0>
    4474:	ldur	x0, [x29, #-16]
    4478:	ldur	x1, [x29, #-24]
    447c:	ldr	x8, [sp, #160]
    4480:	ldr	x2, [x8, #24]
    4484:	ldur	x3, [x29, #-40]
    4488:	bl	39e0 <ctf_add_type_internal>
    448c:	ldr	x8, [sp, #160]
    4490:	str	x0, [x8, #24]
    4494:	mov	x8, #0xffffffffffffffff    	// #-1
    4498:	cmp	x0, x8
    449c:	b.ne	44bc <ctf_add_type_internal+0xadc>  // b.any
    44a0:	ldur	x0, [x29, #-16]
    44a4:	bl	0 <ctf_errno>
    44a8:	cmp	w0, #0x41b
    44ac:	b.eq	44bc <ctf_add_type_internal+0xadc>  // b.none
    44b0:	ldr	w8, [sp, #156]
    44b4:	add	w8, w8, #0x1
    44b8:	str	w8, [sp, #156]
    44bc:	b	44cc <ctf_add_type_internal+0xaec>
    44c0:	ldr	x8, [sp, #112]
    44c4:	ldr	x9, [sp, #160]
    44c8:	str	x8, [x9, #24]
    44cc:	ldr	x8, [sp, #160]
    44d0:	ldr	x8, [x8, #8]
    44d4:	str	x8, [sp, #160]
    44d8:	b	4444 <ctf_add_type_internal+0xa64>
    44dc:	ldr	w8, [sp, #156]
    44e0:	cbz	w8, 44f0 <ctf_add_type_internal+0xb10>
    44e4:	mov	x8, #0xffffffffffffffff    	// #-1
    44e8:	stur	x8, [x29, #-8]
    44ec:	b	46b0 <ctf_add_type_internal+0xcd0>
    44f0:	b	4684 <ctf_add_type_internal+0xca4>
    44f4:	ldur	x8, [x29, #-48]
    44f8:	mov	x9, #0xffffffffffffffff    	// #-1
    44fc:	cmp	x8, x9
    4500:	b.eq	4580 <ctf_add_type_internal+0xba0>  // b.none
    4504:	ldur	w8, [x29, #-84]
    4508:	cmp	w8, #0x9
    450c:	b.eq	4580 <ctf_add_type_internal+0xba0>  // b.none
    4510:	ldur	w8, [x29, #-52]
    4514:	cmp	w8, #0x9
    4518:	b.eq	4580 <ctf_add_type_internal+0xba0>  // b.none
    451c:	ldur	x0, [x29, #-24]
    4520:	ldur	x1, [x29, #-32]
    4524:	adrp	x2, 0 <ctf_create>
    4528:	add	x2, x2, #0x0
    452c:	sub	x3, x29, #0xa0
    4530:	bl	0 <ctf_enum_iter>
    4534:	cbnz	w0, 4554 <ctf_add_type_internal+0xb74>
    4538:	ldur	x0, [x29, #-16]
    453c:	ldur	x1, [x29, #-48]
    4540:	adrp	x2, 0 <ctf_create>
    4544:	add	x2, x2, #0x0
    4548:	sub	x3, x29, #0x88
    454c:	bl	0 <ctf_enum_iter>
    4550:	cbz	w0, 457c <ctf_add_type_internal+0xb9c>
    4554:	ldur	x1, [x29, #-80]
    4558:	ldur	x2, [x29, #-48]
    455c:	adrp	x0, 0 <ctf_create>
    4560:	add	x0, x0, #0x0
    4564:	bl	0 <ctf_dprintf>
    4568:	ldur	x0, [x29, #-16]
    456c:	mov	w1, #0x411                 	// #1041
    4570:	bl	0 <ctf_set_errno>
    4574:	stur	x0, [x29, #-8]
    4578:	b	46b0 <ctf_add_type_internal+0xcd0>
    457c:	b	45d0 <ctf_add_type_internal+0xbf0>
    4580:	ldur	x0, [x29, #-16]
    4584:	ldur	w1, [x29, #-92]
    4588:	ldur	x2, [x29, #-80]
    458c:	bl	2a10 <ctf_add_enum>
    4590:	stur	x0, [x29, #-48]
    4594:	ldur	x8, [x29, #-48]
    4598:	stur	x8, [x29, #-152]
    459c:	mov	x9, #0xffffffffffffffff    	// #-1
    45a0:	cmp	x8, x9
    45a4:	b.eq	45c4 <ctf_add_type_internal+0xbe4>  // b.none
    45a8:	ldur	x0, [x29, #-24]
    45ac:	ldur	x1, [x29, #-32]
    45b0:	adrp	x2, 0 <ctf_create>
    45b4:	add	x2, x2, #0x0
    45b8:	sub	x3, x29, #0xa0
    45bc:	bl	0 <ctf_enum_iter>
    45c0:	cbz	w0, 45d0 <ctf_add_type_internal+0xbf0>
    45c4:	mov	x8, #0xffffffffffffffff    	// #-1
    45c8:	stur	x8, [x29, #-8]
    45cc:	b	46b0 <ctf_add_type_internal+0xcd0>
    45d0:	b	4684 <ctf_add_type_internal+0xca4>
    45d4:	ldur	x8, [x29, #-48]
    45d8:	mov	x9, #0xffffffffffffffff    	// #-1
    45dc:	cmp	x8, x9
    45e0:	b.ne	45fc <ctf_add_type_internal+0xc1c>  // b.any
    45e4:	ldur	x0, [x29, #-16]
    45e8:	ldur	w1, [x29, #-92]
    45ec:	ldur	x2, [x29, #-80]
    45f0:	ldur	w3, [x29, #-88]
    45f4:	bl	2bd4 <ctf_add_forward>
    45f8:	stur	x0, [x29, #-48]
    45fc:	b	4684 <ctf_add_type_internal+0xca4>
    4600:	ldur	x0, [x29, #-24]
    4604:	ldur	x1, [x29, #-32]
    4608:	bl	0 <ctf_type_reference>
    460c:	stur	x0, [x29, #-32]
    4610:	ldur	x0, [x29, #-16]
    4614:	ldur	x1, [x29, #-24]
    4618:	ldur	x2, [x29, #-32]
    461c:	ldur	x3, [x29, #-40]
    4620:	bl	39e0 <ctf_add_type_internal>
    4624:	stur	x0, [x29, #-32]
    4628:	ldur	x8, [x29, #-32]
    462c:	mov	x9, #0xffffffffffffffff    	// #-1
    4630:	cmp	x8, x9
    4634:	b.ne	4644 <ctf_add_type_internal+0xc64>  // b.any
    4638:	mov	x8, #0xffffffffffffffff    	// #-1
    463c:	stur	x8, [x29, #-8]
    4640:	b	46b0 <ctf_add_type_internal+0xcd0>
    4644:	ldur	x8, [x29, #-48]
    4648:	mov	x9, #0xffffffffffffffff    	// #-1
    464c:	cmp	x8, x9
    4650:	b.ne	466c <ctf_add_type_internal+0xc8c>  // b.any
    4654:	ldur	x0, [x29, #-16]
    4658:	ldur	w1, [x29, #-92]
    465c:	ldur	x2, [x29, #-80]
    4660:	ldur	x3, [x29, #-32]
    4664:	bl	2cc4 <ctf_add_typedef>
    4668:	stur	x0, [x29, #-48]
    466c:	b	4684 <ctf_add_type_internal+0xca4>
    4670:	ldur	x0, [x29, #-16]
    4674:	mov	w1, #0x3ef                 	// #1007
    4678:	bl	0 <ctf_set_errno>
    467c:	stur	x0, [x29, #-8]
    4680:	b	46b0 <ctf_add_type_internal+0xcd0>
    4684:	ldur	x8, [x29, #-48]
    4688:	mov	x9, #0xffffffffffffffff    	// #-1
    468c:	cmp	x8, x9
    4690:	b.eq	46a8 <ctf_add_type_internal+0xcc8>  // b.none
    4694:	ldur	x0, [x29, #-24]
    4698:	ldr	x1, [sp, #176]
    469c:	ldur	x2, [x29, #-16]
    46a0:	ldur	x3, [x29, #-48]
    46a4:	bl	0 <ctf_add_type_mapping>
    46a8:	ldur	x8, [x29, #-48]
    46ac:	stur	x8, [x29, #-8]
    46b0:	ldur	x0, [x29, #-8]
    46b4:	ldr	x28, [sp, #448]
    46b8:	ldp	x29, x30, [sp, #432]
    46bc:	add	sp, sp, #0x1d0
    46c0:	ret

00000000000046c4 <ctf_gzwrite>:
    46c4:	sub	sp, sp, #0x50
    46c8:	stp	x29, x30, [sp, #64]
    46cc:	add	x29, sp, #0x40
    46d0:	mov	x8, #0x34                  	// #52
    46d4:	stur	x0, [x29, #-16]
    46d8:	stur	x1, [x29, #-24]
    46dc:	str	x8, [sp, #24]
    46e0:	ldur	x8, [x29, #-16]
    46e4:	ldr	x8, [x8, #8]
    46e8:	str	x8, [sp, #32]
    46ec:	ldr	x8, [sp, #24]
    46f0:	cbz	x8, 4764 <ctf_gzwrite+0xa0>
    46f4:	ldur	x0, [x29, #-24]
    46f8:	ldr	x1, [sp, #32]
    46fc:	ldr	x8, [sp, #24]
    4700:	mov	w2, w8
    4704:	bl	0 <gzwrite>
    4708:	mov	w1, w0
    470c:	sxtw	x9, w1
    4710:	str	x9, [sp, #16]
    4714:	cmp	x9, #0x0
    4718:	cset	w8, gt
    471c:	tbnz	w8, #0, 4740 <ctf_gzwrite+0x7c>
    4720:	ldur	x0, [x29, #-16]
    4724:	str	x0, [sp, #8]
    4728:	bl	0 <__errno_location>
    472c:	ldr	w1, [x0]
    4730:	ldr	x0, [sp, #8]
    4734:	bl	0 <ctf_set_errno>
    4738:	stur	w0, [x29, #-4]
    473c:	b	47f8 <ctf_gzwrite+0x134>
    4740:	ldr	x8, [sp, #16]
    4744:	ldr	x9, [sp, #24]
    4748:	subs	x8, x9, x8
    474c:	str	x8, [sp, #24]
    4750:	ldr	x8, [sp, #16]
    4754:	ldr	x9, [sp, #32]
    4758:	add	x8, x9, x8
    475c:	str	x8, [sp, #32]
    4760:	b	46ec <ctf_gzwrite+0x28>
    4764:	ldur	x8, [x29, #-16]
    4768:	ldr	x8, [x8, #416]
    476c:	str	x8, [sp, #24]
    4770:	ldur	x8, [x29, #-16]
    4774:	ldr	x8, [x8, #408]
    4778:	str	x8, [sp, #32]
    477c:	ldr	x8, [sp, #24]
    4780:	cbz	x8, 47f4 <ctf_gzwrite+0x130>
    4784:	ldur	x0, [x29, #-24]
    4788:	ldr	x1, [sp, #32]
    478c:	ldr	x8, [sp, #24]
    4790:	mov	w2, w8
    4794:	bl	0 <gzwrite>
    4798:	mov	w1, w0
    479c:	sxtw	x9, w1
    47a0:	str	x9, [sp, #16]
    47a4:	cmp	x9, #0x0
    47a8:	cset	w8, gt
    47ac:	tbnz	w8, #0, 47d0 <ctf_gzwrite+0x10c>
    47b0:	ldur	x0, [x29, #-16]
    47b4:	str	x0, [sp]
    47b8:	bl	0 <__errno_location>
    47bc:	ldr	w1, [x0]
    47c0:	ldr	x0, [sp]
    47c4:	bl	0 <ctf_set_errno>
    47c8:	stur	w0, [x29, #-4]
    47cc:	b	47f8 <ctf_gzwrite+0x134>
    47d0:	ldr	x8, [sp, #16]
    47d4:	ldr	x9, [sp, #24]
    47d8:	subs	x8, x9, x8
    47dc:	str	x8, [sp, #24]
    47e0:	ldr	x8, [sp, #16]
    47e4:	ldr	x9, [sp, #32]
    47e8:	add	x8, x9, x8
    47ec:	str	x8, [sp, #32]
    47f0:	b	477c <ctf_gzwrite+0xb8>
    47f4:	stur	wzr, [x29, #-4]
    47f8:	ldur	w0, [x29, #-4]
    47fc:	ldp	x29, x30, [sp, #64]
    4800:	add	sp, sp, #0x50
    4804:	ret

0000000000004808 <ctf_compress_write>:
    4808:	sub	sp, sp, #0xb0
    480c:	stp	x29, x30, [sp, #160]
    4810:	add	x29, sp, #0xa0
    4814:	mov	x8, #0x34                  	// #52
    4818:	add	x9, sp, #0x44
    481c:	stur	x0, [x29, #-16]
    4820:	stur	w1, [x29, #-20]
    4824:	str	x9, [sp, #56]
    4828:	str	x8, [sp, #48]
    482c:	str	wzr, [sp, #24]
    4830:	ldur	x0, [x29, #-16]
    4834:	bl	454 <ctf_serialize>
    4838:	cmp	w0, #0x0
    483c:	cset	w10, ge  // ge = tcont
    4840:	tbnz	w10, #0, 4850 <ctf_compress_write+0x48>
    4844:	mov	w8, #0xffffffff            	// #-1
    4848:	stur	w8, [x29, #-4]
    484c:	b	4a08 <ctf_compress_write+0x200>
    4850:	ldr	x0, [sp, #56]
    4854:	ldur	x8, [x29, #-16]
    4858:	ldr	x1, [x8, #8]
    485c:	ldr	x2, [sp, #48]
    4860:	bl	0 <memcpy>
    4864:	ldr	x8, [sp, #56]
    4868:	ldrb	w9, [x8, #3]
    486c:	orr	w9, w9, #0x1
    4870:	strb	w9, [x8, #3]
    4874:	ldur	x8, [x29, #-16]
    4878:	ldr	x0, [x8, #416]
    487c:	bl	0 <compressBound>
    4880:	str	x0, [sp, #40]
    4884:	ldr	x0, [sp, #40]
    4888:	bl	0 <malloc>
    488c:	stur	x0, [x29, #-32]
    4890:	cbnz	x0, 48a8 <ctf_compress_write+0xa0>
    4894:	ldur	x0, [x29, #-16]
    4898:	mov	w1, #0x3f6                 	// #1014
    489c:	bl	0 <ctf_set_errno>
    48a0:	stur	w0, [x29, #-4]
    48a4:	b	4a08 <ctf_compress_write+0x200>
    48a8:	ldur	x0, [x29, #-32]
    48ac:	ldur	x8, [x29, #-16]
    48b0:	ldr	x2, [x8, #408]
    48b4:	ldur	x8, [x29, #-16]
    48b8:	ldr	x3, [x8, #416]
    48bc:	add	x1, sp, #0x28
    48c0:	bl	0 <compress>
    48c4:	str	w0, [sp, #28]
    48c8:	cbz	w0, 4900 <ctf_compress_write+0xf8>
    48cc:	ldr	w0, [sp, #28]
    48d0:	bl	0 <zError>
    48d4:	adrp	x8, 0 <ctf_create>
    48d8:	add	x8, x8, #0x0
    48dc:	str	x0, [sp, #16]
    48e0:	mov	x0, x8
    48e4:	ldr	x1, [sp, #16]
    48e8:	bl	0 <ctf_dprintf>
    48ec:	ldur	x0, [x29, #-16]
    48f0:	mov	w1, #0x413                 	// #1043
    48f4:	bl	0 <ctf_set_errno>
    48f8:	str	w0, [sp, #24]
    48fc:	b	49f8 <ctf_compress_write+0x1f0>
    4900:	ldr	x8, [sp, #48]
    4904:	cmp	x8, #0x0
    4908:	cset	w9, le
    490c:	tbnz	w9, #0, 497c <ctf_compress_write+0x174>
    4910:	ldur	w0, [x29, #-20]
    4914:	ldr	x1, [sp, #56]
    4918:	ldr	x2, [sp, #48]
    491c:	bl	0 <write>
    4920:	str	x0, [sp, #32]
    4924:	cmp	x0, #0x0
    4928:	cset	w8, ge  // ge = tcont
    492c:	tbnz	w8, #0, 4950 <ctf_compress_write+0x148>
    4930:	ldur	x0, [x29, #-16]
    4934:	str	x0, [sp, #8]
    4938:	bl	0 <__errno_location>
    493c:	ldr	w1, [x0]
    4940:	ldr	x0, [sp, #8]
    4944:	bl	0 <ctf_set_errno>
    4948:	str	w0, [sp, #24]
    494c:	b	49f8 <ctf_compress_write+0x1f0>
    4950:	ldr	x8, [sp, #32]
    4954:	ldr	x9, [sp, #48]
    4958:	subs	x8, x9, x8
    495c:	str	x8, [sp, #48]
    4960:	ldr	x8, [sp, #32]
    4964:	ldr	x9, [sp, #56]
    4968:	mov	x10, #0x34                  	// #52
    496c:	mul	x8, x10, x8
    4970:	add	x8, x9, x8
    4974:	str	x8, [sp, #56]
    4978:	b	4900 <ctf_compress_write+0xf8>
    497c:	ldur	x8, [x29, #-32]
    4980:	stur	x8, [x29, #-40]
    4984:	ldr	x8, [sp, #40]
    4988:	cmp	x8, #0x0
    498c:	cset	w9, le
    4990:	tbnz	w9, #0, 49f8 <ctf_compress_write+0x1f0>
    4994:	ldur	w0, [x29, #-20]
    4998:	ldur	x1, [x29, #-40]
    499c:	ldr	x2, [sp, #40]
    49a0:	bl	0 <write>
    49a4:	str	x0, [sp, #32]
    49a8:	cmp	x0, #0x0
    49ac:	cset	w8, ge  // ge = tcont
    49b0:	tbnz	w8, #0, 49d4 <ctf_compress_write+0x1cc>
    49b4:	ldur	x0, [x29, #-16]
    49b8:	str	x0, [sp]
    49bc:	bl	0 <__errno_location>
    49c0:	ldr	w1, [x0]
    49c4:	ldr	x0, [sp]
    49c8:	bl	0 <ctf_set_errno>
    49cc:	str	w0, [sp, #24]
    49d0:	b	49f8 <ctf_compress_write+0x1f0>
    49d4:	ldr	x8, [sp, #32]
    49d8:	ldr	x9, [sp, #40]
    49dc:	subs	x8, x9, x8
    49e0:	str	x8, [sp, #40]
    49e4:	ldr	x8, [sp, #32]
    49e8:	ldur	x9, [x29, #-40]
    49ec:	add	x8, x9, x8
    49f0:	stur	x8, [x29, #-40]
    49f4:	b	4984 <ctf_compress_write+0x17c>
    49f8:	ldur	x0, [x29, #-32]
    49fc:	bl	0 <free>
    4a00:	ldr	w8, [sp, #24]
    4a04:	stur	w8, [x29, #-4]
    4a08:	ldur	w0, [x29, #-4]
    4a0c:	ldp	x29, x30, [sp, #160]
    4a10:	add	sp, sp, #0xb0
    4a14:	ret

0000000000004a18 <ctf_write_mem>:
    4a18:	sub	sp, sp, #0x70
    4a1c:	stp	x29, x30, [sp, #96]
    4a20:	add	x29, sp, #0x60
    4a24:	mov	x8, #0x34                  	// #52
    4a28:	stur	x0, [x29, #-16]
    4a2c:	stur	x1, [x29, #-24]
    4a30:	stur	x2, [x29, #-32]
    4a34:	str	x8, [sp, #32]
    4a38:	ldur	x0, [x29, #-16]
    4a3c:	bl	454 <ctf_serialize>
    4a40:	cmp	w0, #0x0
    4a44:	cset	w9, ge  // ge = tcont
    4a48:	tbnz	w9, #0, 4a58 <ctf_write_mem+0x40>
    4a4c:	mov	x8, xzr
    4a50:	stur	x8, [x29, #-8]
    4a54:	b	4bd4 <ctf_write_mem+0x1bc>
    4a58:	ldur	x8, [x29, #-16]
    4a5c:	ldr	x0, [x8, #416]
    4a60:	bl	0 <compressBound>
    4a64:	str	x0, [sp, #24]
    4a68:	ldur	x8, [x29, #-16]
    4a6c:	ldr	x8, [x8, #416]
    4a70:	ldur	x9, [x29, #-32]
    4a74:	cmp	x8, x9
    4a78:	b.cs	4a88 <ctf_write_mem+0x70>  // b.hs, b.nlast
    4a7c:	ldur	x8, [x29, #-16]
    4a80:	ldr	x8, [x8, #416]
    4a84:	str	x8, [sp, #24]
    4a88:	ldr	x8, [sp, #24]
    4a8c:	add	x0, x8, #0x34
    4a90:	bl	0 <malloc>
    4a94:	stur	x0, [x29, #-40]
    4a98:	cbnz	x0, 4ab4 <ctf_write_mem+0x9c>
    4a9c:	ldur	x0, [x29, #-16]
    4aa0:	mov	w1, #0xc                   	// #12
    4aa4:	bl	0 <ctf_set_errno>
    4aa8:	mov	x8, xzr
    4aac:	stur	x8, [x29, #-8]
    4ab0:	b	4bd4 <ctf_write_mem+0x1bc>
    4ab4:	ldur	x8, [x29, #-40]
    4ab8:	str	x8, [sp, #40]
    4abc:	ldr	x0, [sp, #40]
    4ac0:	ldur	x8, [x29, #-16]
    4ac4:	ldr	x1, [x8, #8]
    4ac8:	ldr	x2, [sp, #32]
    4acc:	bl	0 <memcpy>
    4ad0:	ldur	x8, [x29, #-40]
    4ad4:	add	x8, x8, #0x34
    4ad8:	str	x8, [sp, #48]
    4adc:	ldur	x8, [x29, #-24]
    4ae0:	mov	x9, #0x34                  	// #52
    4ae4:	str	x9, [x8]
    4ae8:	ldur	x8, [x29, #-16]
    4aec:	ldr	x8, [x8, #416]
    4af0:	ldur	x9, [x29, #-32]
    4af4:	cmp	x8, x9
    4af8:	b.cs	4b40 <ctf_write_mem+0x128>  // b.hs, b.nlast
    4afc:	ldr	x8, [sp, #40]
    4b00:	ldrb	w9, [x8, #3]
    4b04:	and	w9, w9, #0xfffffffe
    4b08:	strb	w9, [x8, #3]
    4b0c:	ldr	x0, [sp, #48]
    4b10:	ldur	x8, [x29, #-16]
    4b14:	ldr	x1, [x8, #408]
    4b18:	ldur	x8, [x29, #-16]
    4b1c:	ldr	x2, [x8, #416]
    4b20:	bl	0 <memcpy>
    4b24:	ldur	x8, [x29, #-16]
    4b28:	ldr	x8, [x8, #416]
    4b2c:	ldur	x10, [x29, #-24]
    4b30:	ldr	x11, [x10]
    4b34:	add	x8, x11, x8
    4b38:	str	x8, [x10]
    4b3c:	b	4bcc <ctf_write_mem+0x1b4>
    4b40:	ldr	x8, [sp, #40]
    4b44:	ldrb	w9, [x8, #3]
    4b48:	orr	w9, w9, #0x1
    4b4c:	strb	w9, [x8, #3]
    4b50:	ldr	x0, [sp, #48]
    4b54:	ldur	x8, [x29, #-16]
    4b58:	ldr	x2, [x8, #408]
    4b5c:	ldur	x8, [x29, #-16]
    4b60:	ldr	x3, [x8, #416]
    4b64:	add	x1, sp, #0x18
    4b68:	bl	0 <compress>
    4b6c:	str	w0, [sp, #20]
    4b70:	cbz	w0, 4bb8 <ctf_write_mem+0x1a0>
    4b74:	ldr	w0, [sp, #20]
    4b78:	bl	0 <zError>
    4b7c:	adrp	x8, 0 <ctf_create>
    4b80:	add	x8, x8, #0x0
    4b84:	str	x0, [sp, #8]
    4b88:	mov	x0, x8
    4b8c:	ldr	x1, [sp, #8]
    4b90:	bl	0 <ctf_dprintf>
    4b94:	ldur	x0, [x29, #-16]
    4b98:	mov	w1, #0x413                 	// #1043
    4b9c:	bl	0 <ctf_set_errno>
    4ba0:	ldur	x8, [x29, #-40]
    4ba4:	mov	x0, x8
    4ba8:	bl	0 <free>
    4bac:	mov	x8, xzr
    4bb0:	stur	x8, [x29, #-8]
    4bb4:	b	4bd4 <ctf_write_mem+0x1bc>
    4bb8:	ldr	x8, [sp, #24]
    4bbc:	ldur	x9, [x29, #-24]
    4bc0:	ldr	x10, [x9]
    4bc4:	add	x8, x10, x8
    4bc8:	str	x8, [x9]
    4bcc:	ldur	x8, [x29, #-40]
    4bd0:	stur	x8, [x29, #-8]
    4bd4:	ldur	x0, [x29, #-8]
    4bd8:	ldp	x29, x30, [sp, #96]
    4bdc:	add	sp, sp, #0x70
    4be0:	ret

0000000000004be4 <ctf_write>:
    4be4:	sub	sp, sp, #0x50
    4be8:	stp	x29, x30, [sp, #64]
    4bec:	add	x29, sp, #0x40
    4bf0:	stur	x0, [x29, #-16]
    4bf4:	stur	w1, [x29, #-20]
    4bf8:	ldur	x0, [x29, #-16]
    4bfc:	bl	454 <ctf_serialize>
    4c00:	cmp	w0, #0x0
    4c04:	cset	w8, ge  // ge = tcont
    4c08:	tbnz	w8, #0, 4c18 <ctf_write+0x34>
    4c0c:	mov	w8, #0xffffffff            	// #-1
    4c10:	stur	w8, [x29, #-4]
    4c14:	b	4d20 <ctf_write+0x13c>
    4c18:	mov	x8, #0x34                  	// #52
    4c1c:	str	x8, [sp, #24]
    4c20:	ldur	x8, [x29, #-16]
    4c24:	ldr	x8, [x8, #8]
    4c28:	str	x8, [sp, #32]
    4c2c:	ldr	x8, [sp, #24]
    4c30:	cbz	x8, 4c98 <ctf_write+0xb4>
    4c34:	ldur	w0, [x29, #-20]
    4c38:	ldr	x1, [sp, #32]
    4c3c:	ldr	x2, [sp, #24]
    4c40:	bl	0 <write>
    4c44:	str	x0, [sp, #16]
    4c48:	cmp	x0, #0x0
    4c4c:	cset	w8, gt
    4c50:	tbnz	w8, #0, 4c74 <ctf_write+0x90>
    4c54:	ldur	x0, [x29, #-16]
    4c58:	str	x0, [sp, #8]
    4c5c:	bl	0 <__errno_location>
    4c60:	ldr	w1, [x0]
    4c64:	ldr	x0, [sp, #8]
    4c68:	bl	0 <ctf_set_errno>
    4c6c:	stur	w0, [x29, #-4]
    4c70:	b	4d20 <ctf_write+0x13c>
    4c74:	ldr	x8, [sp, #16]
    4c78:	ldr	x9, [sp, #24]
    4c7c:	subs	x8, x9, x8
    4c80:	str	x8, [sp, #24]
    4c84:	ldr	x8, [sp, #16]
    4c88:	ldr	x9, [sp, #32]
    4c8c:	add	x8, x9, x8
    4c90:	str	x8, [sp, #32]
    4c94:	b	4c2c <ctf_write+0x48>
    4c98:	ldur	x8, [x29, #-16]
    4c9c:	ldr	x8, [x8, #416]
    4ca0:	str	x8, [sp, #24]
    4ca4:	ldur	x8, [x29, #-16]
    4ca8:	ldr	x8, [x8, #408]
    4cac:	str	x8, [sp, #32]
    4cb0:	ldr	x8, [sp, #24]
    4cb4:	cbz	x8, 4d1c <ctf_write+0x138>
    4cb8:	ldur	w0, [x29, #-20]
    4cbc:	ldr	x1, [sp, #32]
    4cc0:	ldr	x2, [sp, #24]
    4cc4:	bl	0 <write>
    4cc8:	str	x0, [sp, #16]
    4ccc:	cmp	x0, #0x0
    4cd0:	cset	w8, gt
    4cd4:	tbnz	w8, #0, 4cf8 <ctf_write+0x114>
    4cd8:	ldur	x0, [x29, #-16]
    4cdc:	str	x0, [sp]
    4ce0:	bl	0 <__errno_location>
    4ce4:	ldr	w1, [x0]
    4ce8:	ldr	x0, [sp]
    4cec:	bl	0 <ctf_set_errno>
    4cf0:	stur	w0, [x29, #-4]
    4cf4:	b	4d20 <ctf_write+0x13c>
    4cf8:	ldr	x8, [sp, #16]
    4cfc:	ldr	x9, [sp, #24]
    4d00:	subs	x8, x9, x8
    4d04:	str	x8, [sp, #24]
    4d08:	ldr	x8, [sp, #16]
    4d0c:	ldr	x9, [sp, #32]
    4d10:	add	x8, x9, x8
    4d14:	str	x8, [sp, #32]
    4d18:	b	4cb0 <ctf_write+0xcc>
    4d1c:	stur	wzr, [x29, #-4]
    4d20:	ldur	w0, [x29, #-4]
    4d24:	ldp	x29, x30, [sp, #64]
    4d28:	add	sp, sp, #0x50
    4d2c:	ret

0000000000004d30 <membcmp>:
    4d30:	sub	sp, sp, #0x60
    4d34:	stp	x29, x30, [sp, #80]
    4d38:	add	x29, sp, #0x50
    4d3c:	add	x8, sp, #0x10
    4d40:	stur	x0, [x29, #-16]
    4d44:	stur	x1, [x29, #-24]
    4d48:	stur	x2, [x29, #-32]
    4d4c:	str	x3, [sp, #40]
    4d50:	ldr	x9, [sp, #40]
    4d54:	str	x9, [sp, #32]
    4d58:	ldr	x9, [sp, #32]
    4d5c:	ldr	x0, [x9]
    4d60:	ldr	x9, [sp, #32]
    4d64:	ldr	x1, [x9, #8]
    4d68:	ldur	x2, [x29, #-16]
    4d6c:	mov	x3, x8
    4d70:	bl	0 <ctf_member_info>
    4d74:	cmp	w0, #0x0
    4d78:	cset	w10, ge  // ge = tcont
    4d7c:	tbnz	w10, #0, 4dc0 <membcmp+0x90>
    4d80:	ldur	x1, [x29, #-16]
    4d84:	ldr	x8, [sp, #32]
    4d88:	ldr	x0, [x8]
    4d8c:	str	x1, [sp, #8]
    4d90:	bl	0 <ctf_errno>
    4d94:	bl	0 <ctf_errmsg>
    4d98:	adrp	x8, 0 <ctf_create>
    4d9c:	add	x8, x8, #0x0
    4da0:	str	x0, [sp]
    4da4:	mov	x0, x8
    4da8:	ldr	x1, [sp, #8]
    4dac:	ldr	x2, [sp]
    4db0:	bl	0 <ctf_dprintf>
    4db4:	mov	w9, #0x1                   	// #1
    4db8:	stur	w9, [x29, #-4]
    4dbc:	b	4df8 <membcmp+0xc8>
    4dc0:	ldr	x8, [sp, #24]
    4dc4:	ldur	x9, [x29, #-32]
    4dc8:	cmp	x8, x9
    4dcc:	b.eq	4df4 <membcmp+0xc4>  // b.none
    4dd0:	ldur	x1, [x29, #-16]
    4dd4:	ldr	x2, [sp, #24]
    4dd8:	ldur	x3, [x29, #-32]
    4ddc:	adrp	x0, 0 <ctf_create>
    4de0:	add	x0, x0, #0x0
    4de4:	bl	0 <ctf_dprintf>
    4de8:	mov	w8, #0x1                   	// #1
    4dec:	stur	w8, [x29, #-4]
    4df0:	b	4df8 <membcmp+0xc8>
    4df4:	stur	wzr, [x29, #-4]
    4df8:	ldur	w0, [x29, #-4]
    4dfc:	ldp	x29, x30, [sp, #80]
    4e00:	add	sp, sp, #0x60
    4e04:	ret

0000000000004e08 <membadd>:
    4e08:	sub	sp, sp, #0x50
    4e0c:	stp	x29, x30, [sp, #64]
    4e10:	add	x29, sp, #0x40
    4e14:	mov	x8, xzr
    4e18:	mov	x9, #0x30                  	// #48
    4e1c:	stur	x0, [x29, #-16]
    4e20:	stur	x1, [x29, #-24]
    4e24:	str	x2, [sp, #32]
    4e28:	str	x3, [sp, #24]
    4e2c:	ldr	x10, [sp, #24]
    4e30:	str	x10, [sp, #16]
    4e34:	str	x8, [sp]
    4e38:	mov	x0, x9
    4e3c:	bl	0 <malloc>
    4e40:	str	x0, [sp, #8]
    4e44:	cbnz	x0, 4e60 <membadd+0x58>
    4e48:	ldr	x8, [sp, #16]
    4e4c:	ldr	x0, [x8]
    4e50:	mov	w1, #0xb                   	// #11
    4e54:	bl	0 <ctf_set_errno>
    4e58:	stur	w0, [x29, #-4]
    4e5c:	b	4ef4 <membadd+0xec>
    4e60:	ldur	x8, [x29, #-16]
    4e64:	cbz	x8, 4e98 <membadd+0x90>
    4e68:	ldur	x0, [x29, #-16]
    4e6c:	bl	0 <strdup>
    4e70:	str	x0, [sp]
    4e74:	cbnz	x0, 4e98 <membadd+0x90>
    4e78:	ldr	x0, [sp, #8]
    4e7c:	bl	0 <free>
    4e80:	ldr	x8, [sp, #16]
    4e84:	ldr	x0, [x8]
    4e88:	mov	w1, #0xb                   	// #11
    4e8c:	bl	0 <ctf_set_errno>
    4e90:	stur	w0, [x29, #-4]
    4e94:	b	4ef4 <membadd+0xec>
    4e98:	ldr	x8, [sp]
    4e9c:	ldr	x9, [sp, #8]
    4ea0:	str	x8, [x9, #16]
    4ea4:	ldur	x8, [x29, #-24]
    4ea8:	ldr	x9, [sp, #8]
    4eac:	str	x8, [x9, #24]
    4eb0:	ldr	x8, [sp, #32]
    4eb4:	ldr	x9, [sp, #8]
    4eb8:	str	x8, [x9, #32]
    4ebc:	ldr	x8, [sp, #8]
    4ec0:	mov	w10, #0xffffffff            	// #-1
    4ec4:	str	w10, [x8, #40]
    4ec8:	ldr	x8, [sp, #16]
    4ecc:	ldr	x8, [x8, #16]
    4ed0:	add	x0, x8, #0x30
    4ed4:	ldr	x1, [sp, #8]
    4ed8:	bl	0 <ctf_list_append>
    4edc:	ldr	x8, [sp, #16]
    4ee0:	ldr	x8, [x8]
    4ee4:	ldr	w10, [x8, #552]
    4ee8:	orr	w10, w10, #0x4
    4eec:	str	w10, [x8, #552]
    4ef0:	stur	wzr, [x29, #-4]
    4ef4:	ldur	w0, [x29, #-4]
    4ef8:	ldp	x29, x30, [sp, #64]
    4efc:	add	sp, sp, #0x50
    4f00:	ret

0000000000004f04 <enumcmp>:
    4f04:	sub	sp, sp, #0x50
    4f08:	stp	x29, x30, [sp, #64]
    4f0c:	add	x29, sp, #0x40
    4f10:	add	x3, sp, #0x14
    4f14:	stur	x0, [x29, #-16]
    4f18:	stur	w1, [x29, #-20]
    4f1c:	str	x2, [sp, #32]
    4f20:	ldr	x8, [sp, #32]
    4f24:	str	x8, [sp, #24]
    4f28:	ldr	x8, [sp, #24]
    4f2c:	ldr	x0, [x8]
    4f30:	ldr	x8, [sp, #24]
    4f34:	ldr	x1, [x8, #8]
    4f38:	ldur	x2, [x29, #-16]
    4f3c:	bl	0 <ctf_enum_value>
    4f40:	cmp	w0, #0x0
    4f44:	cset	w9, ge  // ge = tcont
    4f48:	tbnz	w9, #0, 4f8c <enumcmp+0x88>
    4f4c:	ldur	x1, [x29, #-16]
    4f50:	ldr	x8, [sp, #24]
    4f54:	ldr	x0, [x8]
    4f58:	str	x1, [sp, #8]
    4f5c:	bl	0 <ctf_errno>
    4f60:	bl	0 <ctf_errmsg>
    4f64:	adrp	x8, 0 <ctf_create>
    4f68:	add	x8, x8, #0x0
    4f6c:	str	x0, [sp]
    4f70:	mov	x0, x8
    4f74:	ldr	x1, [sp, #8]
    4f78:	ldr	x2, [sp]
    4f7c:	bl	0 <ctf_dprintf>
    4f80:	mov	w9, #0x1                   	// #1
    4f84:	stur	w9, [x29, #-4]
    4f88:	b	4fc0 <enumcmp+0xbc>
    4f8c:	ldur	w8, [x29, #-20]
    4f90:	ldr	w9, [sp, #20]
    4f94:	cmp	w8, w9
    4f98:	b.eq	4fbc <enumcmp+0xb8>  // b.none
    4f9c:	ldur	w1, [x29, #-20]
    4fa0:	ldr	w2, [sp, #20]
    4fa4:	adrp	x0, 0 <ctf_create>
    4fa8:	add	x0, x0, #0x0
    4fac:	bl	0 <ctf_dprintf>
    4fb0:	mov	w8, #0x1                   	// #1
    4fb4:	stur	w8, [x29, #-4]
    4fb8:	b	4fc0 <enumcmp+0xbc>
    4fbc:	stur	wzr, [x29, #-4]
    4fc0:	ldur	w0, [x29, #-4]
    4fc4:	ldp	x29, x30, [sp, #64]
    4fc8:	add	sp, sp, #0x50
    4fcc:	ret

0000000000004fd0 <enumadd>:
    4fd0:	sub	sp, sp, #0x30
    4fd4:	stp	x29, x30, [sp, #32]
    4fd8:	add	x29, sp, #0x20
    4fdc:	stur	x0, [x29, #-8]
    4fe0:	stur	w1, [x29, #-12]
    4fe4:	str	x2, [sp, #8]
    4fe8:	ldr	x8, [sp, #8]
    4fec:	str	x8, [sp]
    4ff0:	ldr	x8, [sp]
    4ff4:	ldr	x0, [x8]
    4ff8:	ldr	x8, [sp]
    4ffc:	ldr	x1, [x8, #8]
    5000:	ldur	x2, [x29, #-8]
    5004:	ldur	w3, [x29, #-12]
    5008:	bl	2e5c <ctf_add_enumerator>
    500c:	cmp	w0, #0x0
    5010:	cset	w9, lt  // lt = tstop
    5014:	and	w0, w9, #0x1
    5018:	ldp	x29, x30, [sp, #32]
    501c:	add	sp, sp, #0x30
    5020:	ret

ctf-decl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_decl_init>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	mov	x2, #0x68                  	// #104
  10:	mov	w8, wzr
  14:	str	x0, [sp, #8]
  18:	ldr	x0, [sp, #8]
  1c:	mov	w1, w8
  20:	bl	0 <memset>
  24:	str	wzr, [sp, #4]
  28:	ldr	w8, [sp, #4]
  2c:	cmp	w8, #0x4
  30:	b.ge	58 <ctf_decl_init+0x58>  // b.tcont
  34:	ldr	x8, [sp, #8]
  38:	add	x8, x8, #0x40
  3c:	ldrsw	x9, [sp, #4]
  40:	mov	w10, #0xffffffff            	// #-1
  44:	str	w10, [x8, x9, lsl #2]
  48:	ldr	w8, [sp, #4]
  4c:	add	w8, w8, #0x1
  50:	str	w8, [sp, #4]
  54:	b	28 <ctf_decl_init+0x28>
  58:	ldr	x8, [sp, #8]
  5c:	str	wzr, [x8, #80]
  60:	ldr	x8, [sp, #8]
  64:	str	wzr, [x8, #84]
  68:	ldp	x29, x30, [sp, #16]
  6c:	add	sp, sp, #0x20
  70:	ret

0000000000000074 <ctf_decl_fini>:
  74:	sub	sp, sp, #0x30
  78:	stp	x29, x30, [sp, #32]
  7c:	add	x29, sp, #0x20
  80:	stur	x0, [x29, #-8]
  84:	str	wzr, [sp, #4]
  88:	ldr	w8, [sp, #4]
  8c:	cmp	w8, #0x4
  90:	b.ge	e8 <ctf_decl_fini+0x74>  // b.tcont
  94:	ldur	x8, [x29, #-8]
  98:	ldrsw	x9, [sp, #4]
  9c:	mov	x10, #0x10                  	// #16
  a0:	mul	x9, x10, x9
  a4:	add	x8, x8, x9
  a8:	ldr	x8, [x8, #8]
  ac:	str	x8, [sp, #16]
  b0:	ldr	x8, [sp, #16]
  b4:	cbz	x8, d8 <ctf_decl_fini+0x64>
  b8:	ldr	x8, [sp, #16]
  bc:	ldr	x8, [x8, #8]
  c0:	str	x8, [sp, #8]
  c4:	ldr	x0, [sp, #16]
  c8:	bl	0 <free>
  cc:	ldr	x8, [sp, #8]
  d0:	str	x8, [sp, #16]
  d4:	b	b0 <ctf_decl_fini+0x3c>
  d8:	ldr	w8, [sp, #4]
  dc:	add	w8, w8, #0x1
  e0:	str	w8, [sp, #4]
  e4:	b	88 <ctf_decl_fini+0x14>
  e8:	ldp	x29, x30, [sp, #32]
  ec:	add	sp, sp, #0x30
  f0:	ret

00000000000000f4 <ctf_decl_push>:
  f4:	sub	sp, sp, #0x80
  f8:	stp	x29, x30, [sp, #112]
  fc:	add	x29, sp, #0x70
 100:	mov	w8, #0x1                   	// #1
 104:	sub	x9, x29, #0x10
 108:	stur	x0, [x29, #-8]
 10c:	stur	x1, [x29, #-16]
 110:	stur	x2, [x29, #-24]
 114:	stur	w8, [x29, #-44]
 118:	stur	wzr, [x29, #-48]
 11c:	ldur	x1, [x29, #-24]
 120:	mov	x0, x9
 124:	bl	0 <ctf_lookup_by_id>
 128:	str	x0, [sp, #56]
 12c:	cbnz	x0, 144 <ctf_decl_push+0x50>
 130:	ldur	x8, [x29, #-16]
 134:	ldr	w9, [x8, #556]
 138:	ldur	x8, [x29, #-8]
 13c:	str	w9, [x8, #96]
 140:	b	3dc <ctf_decl_push+0x2e8>
 144:	ldur	x8, [x29, #-16]
 148:	ldr	x8, [x8]
 14c:	ldr	x8, [x8]
 150:	ldr	x9, [sp, #56]
 154:	ldr	w0, [x9, #4]
 158:	blr	x8
 15c:	stur	w0, [x29, #-40]
 160:	subs	w10, w0, #0x3
 164:	mov	w8, w10
 168:	ubfx	x8, x8, #0, #32
 16c:	cmp	x8, #0xb
 170:	str	x8, [sp, #24]
 174:	b.hi	2c4 <ctf_decl_push+0x1d0>  // b.pmore
 178:	adrp	x8, 0 <ctf_decl_init>
 17c:	add	x8, x8, #0x0
 180:	ldr	x11, [sp, #24]
 184:	ldrsw	x10, [x8, x11, lsl #2]
 188:	add	x9, x8, x10
 18c:	br	x9
 190:	ldur	x0, [x29, #-16]
 194:	ldur	x1, [x29, #-24]
 198:	add	x2, sp, #0x20
 19c:	bl	0 <ctf_array_info>
 1a0:	ldur	x8, [x29, #-8]
 1a4:	ldur	x1, [x29, #-16]
 1a8:	ldr	x2, [sp, #32]
 1ac:	mov	x0, x8
 1b0:	bl	f4 <ctf_decl_push>
 1b4:	ldr	w9, [sp, #48]
 1b8:	stur	w9, [x29, #-44]
 1bc:	mov	w9, #0x2                   	// #2
 1c0:	stur	w9, [x29, #-36]
 1c4:	b	2c8 <ctf_decl_push+0x1d4>
 1c8:	ldur	x0, [x29, #-16]
 1cc:	ldr	x8, [sp, #56]
 1d0:	ldr	w1, [x8]
 1d4:	bl	0 <ctf_strptr>
 1d8:	ldrb	w9, [x0]
 1dc:	cbnz	w9, 1fc <ctf_decl_push+0x108>
 1e0:	ldur	x0, [x29, #-8]
 1e4:	ldur	x1, [x29, #-16]
 1e8:	ldr	x8, [sp, #56]
 1ec:	ldr	w9, [x8, #8]
 1f0:	mov	w2, w9
 1f4:	bl	f4 <ctf_decl_push>
 1f8:	b	3dc <ctf_decl_push+0x2e8>
 1fc:	stur	wzr, [x29, #-36]
 200:	b	2c8 <ctf_decl_push+0x1d4>
 204:	ldur	x0, [x29, #-8]
 208:	ldur	x1, [x29, #-16]
 20c:	ldr	x8, [sp, #56]
 210:	ldr	w9, [x8, #8]
 214:	mov	w2, w9
 218:	bl	f4 <ctf_decl_push>
 21c:	mov	w9, #0x3                   	// #3
 220:	stur	w9, [x29, #-36]
 224:	b	2c8 <ctf_decl_push+0x1d4>
 228:	ldur	x0, [x29, #-8]
 22c:	ldur	x1, [x29, #-16]
 230:	ldr	x8, [sp, #56]
 234:	ldr	w9, [x8, #8]
 238:	mov	w2, w9
 23c:	bl	f4 <ctf_decl_push>
 240:	mov	w9, #0x1                   	// #1
 244:	stur	w9, [x29, #-36]
 248:	b	2c8 <ctf_decl_push+0x1d4>
 24c:	ldur	x0, [x29, #-8]
 250:	ldur	x1, [x29, #-16]
 254:	ldur	x8, [x29, #-16]
 258:	ldur	x9, [x29, #-24]
 25c:	str	x0, [sp, #16]
 260:	mov	x0, x8
 264:	str	x1, [sp, #8]
 268:	mov	x1, x9
 26c:	bl	0 <ctf_type_reference>
 270:	ldr	x8, [sp, #16]
 274:	str	x0, [sp]
 278:	mov	x0, x8
 27c:	ldr	x1, [sp, #8]
 280:	ldr	x2, [sp]
 284:	bl	f4 <ctf_decl_push>
 288:	stur	wzr, [x29, #-36]
 28c:	b	2c8 <ctf_decl_push+0x1d4>
 290:	ldur	x0, [x29, #-8]
 294:	ldur	x1, [x29, #-16]
 298:	ldr	x8, [sp, #56]
 29c:	ldr	w9, [x8, #8]
 2a0:	mov	w2, w9
 2a4:	bl	f4 <ctf_decl_push>
 2a8:	ldur	x8, [x29, #-8]
 2ac:	ldr	w9, [x8, #80]
 2b0:	stur	w9, [x29, #-36]
 2b4:	ldur	w9, [x29, #-48]
 2b8:	add	w9, w9, #0x1
 2bc:	stur	w9, [x29, #-48]
 2c0:	b	2c8 <ctf_decl_push+0x1d4>
 2c4:	stur	wzr, [x29, #-36]
 2c8:	mov	x0, #0x20                  	// #32
 2cc:	bl	0 <malloc>
 2d0:	stur	x0, [x29, #-32]
 2d4:	cbnz	x0, 2e8 <ctf_decl_push+0x1f4>
 2d8:	ldur	x8, [x29, #-8]
 2dc:	mov	w9, #0xb                   	// #11
 2e0:	str	w9, [x8, #96]
 2e4:	b	3dc <ctf_decl_push+0x2e8>
 2e8:	ldur	x8, [x29, #-24]
 2ec:	ldur	x9, [x29, #-32]
 2f0:	mov	x10, #0x10                  	// #16
 2f4:	str	x8, [x9, #16]
 2f8:	ldur	w11, [x29, #-40]
 2fc:	ldur	x8, [x29, #-32]
 300:	str	w11, [x8, #24]
 304:	ldur	w11, [x29, #-44]
 308:	ldur	x8, [x29, #-32]
 30c:	str	w11, [x8, #28]
 310:	ldur	x8, [x29, #-8]
 314:	ldur	w11, [x29, #-36]
 318:	mov	w9, w11
 31c:	mul	x9, x10, x9
 320:	add	x8, x8, x9
 324:	ldr	x8, [x8, #8]
 328:	cbnz	x8, 350 <ctf_decl_push+0x25c>
 32c:	ldur	x8, [x29, #-8]
 330:	ldr	w9, [x8, #84]
 334:	add	w10, w9, #0x1
 338:	str	w10, [x8, #84]
 33c:	ldur	x8, [x29, #-8]
 340:	add	x8, x8, #0x40
 344:	ldur	w10, [x29, #-36]
 348:	mov	w11, w10
 34c:	str	w9, [x8, x11, lsl #2]
 350:	ldur	w8, [x29, #-36]
 354:	ldur	x9, [x29, #-8]
 358:	ldr	w10, [x9, #80]
 35c:	cmp	w8, w10
 360:	b.ls	37c <ctf_decl_push+0x288>  // b.plast
 364:	ldur	w8, [x29, #-36]
 368:	cmp	w8, #0x2
 36c:	b.cs	37c <ctf_decl_push+0x288>  // b.hs, b.nlast
 370:	ldur	w8, [x29, #-36]
 374:	ldur	x9, [x29, #-8]
 378:	str	w8, [x9, #80]
 37c:	ldur	w8, [x29, #-40]
 380:	cmp	w8, #0x4
 384:	b.eq	398 <ctf_decl_push+0x2a4>  // b.none
 388:	ldur	w8, [x29, #-48]
 38c:	cbz	w8, 3bc <ctf_decl_push+0x2c8>
 390:	ldur	w8, [x29, #-36]
 394:	cbnz	w8, 3bc <ctf_decl_push+0x2c8>
 398:	ldur	x8, [x29, #-8]
 39c:	ldur	w9, [x29, #-36]
 3a0:	mov	w10, w9
 3a4:	mov	x11, #0x10                  	// #16
 3a8:	mul	x10, x11, x10
 3ac:	add	x0, x8, x10
 3b0:	ldur	x1, [x29, #-32]
 3b4:	bl	0 <ctf_list_prepend>
 3b8:	b	3dc <ctf_decl_push+0x2e8>
 3bc:	ldur	x8, [x29, #-8]
 3c0:	ldur	w9, [x29, #-36]
 3c4:	mov	w10, w9
 3c8:	mov	x11, #0x10                  	// #16
 3cc:	mul	x10, x11, x10
 3d0:	add	x0, x8, x10
 3d4:	ldur	x1, [x29, #-32]
 3d8:	bl	0 <ctf_list_append>
 3dc:	ldp	x29, x30, [sp, #112]
 3e0:	add	sp, sp, #0x80
 3e4:	ret

00000000000003e8 <ctf_decl_sprintf>:
 3e8:	sub	sp, sp, #0x140
 3ec:	stp	x29, x30, [sp, #288]
 3f0:	str	x28, [sp, #304]
 3f4:	add	x29, sp, #0x120
 3f8:	str	q7, [sp, #112]
 3fc:	str	q6, [sp, #96]
 400:	str	q5, [sp, #80]
 404:	str	q4, [sp, #64]
 408:	str	q3, [sp, #48]
 40c:	str	q2, [sp, #32]
 410:	str	q1, [sp, #16]
 414:	str	q0, [sp]
 418:	str	x7, [sp, #176]
 41c:	str	x6, [sp, #168]
 420:	str	x5, [sp, #160]
 424:	str	x4, [sp, #152]
 428:	str	x3, [sp, #144]
 42c:	str	x2, [sp, #136]
 430:	stur	x0, [x29, #-8]
 434:	stur	x1, [x29, #-16]
 438:	ldur	x8, [x29, #-8]
 43c:	ldr	w9, [x8, #100]
 440:	cbz	w9, 44c <ctf_decl_sprintf+0x64>
 444:	b	448 <ctf_decl_sprintf+0x60>
 448:	b	530 <ctf_decl_sprintf+0x148>
 44c:	mov	w8, #0xffffff80            	// #-128
 450:	stur	w8, [x29, #-20]
 454:	mov	w8, #0xffffffd0            	// #-48
 458:	stur	w8, [x29, #-24]
 45c:	add	x9, x29, #0x20
 460:	stur	x9, [x29, #-48]
 464:	mov	x9, sp
 468:	add	x9, x9, #0x80
 46c:	stur	x9, [x29, #-32]
 470:	add	x9, sp, #0x88
 474:	add	x9, x9, #0x30
 478:	stur	x9, [x29, #-40]
 47c:	ldur	x1, [x29, #-16]
 480:	ldur	q0, [x29, #-48]
 484:	ldur	q1, [x29, #-32]
 488:	stur	q1, [x29, #-80]
 48c:	stur	q0, [x29, #-96]
 490:	sub	x0, x29, #0x38
 494:	sub	x2, x29, #0x60
 498:	bl	0 <vasprintf>
 49c:	stur	w0, [x29, #-60]
 4a0:	ldur	w8, [x29, #-60]
 4a4:	subs	w8, w8, #0x1
 4a8:	b.lt	4e0 <ctf_decl_sprintf+0xf8>  // b.tstop
 4ac:	b	4b0 <ctf_decl_sprintf+0xc8>
 4b0:	ldur	x8, [x29, #-8]
 4b4:	ldr	x0, [x8, #88]
 4b8:	ldur	x1, [x29, #-56]
 4bc:	bl	0 <ctf_str_append>
 4c0:	stur	x0, [x29, #-104]
 4c4:	cbz	x0, 4dc <ctf_decl_sprintf+0xf4>
 4c8:	b	4cc <ctf_decl_sprintf+0xe4>
 4cc:	ldur	x8, [x29, #-104]
 4d0:	ldur	x9, [x29, #-8]
 4d4:	str	x8, [x9, #88]
 4d8:	b	4dc <ctf_decl_sprintf+0xf4>
 4dc:	b	4e0 <ctf_decl_sprintf+0xf8>
 4e0:	ldur	w8, [x29, #-60]
 4e4:	tbnz	w8, #31, 4fc <ctf_decl_sprintf+0x114>
 4e8:	b	4ec <ctf_decl_sprintf+0x104>
 4ec:	ldur	x8, [x29, #-8]
 4f0:	ldr	x8, [x8, #88]
 4f4:	cbnz	x8, 524 <ctf_decl_sprintf+0x13c>
 4f8:	b	4fc <ctf_decl_sprintf+0x114>
 4fc:	ldur	x8, [x29, #-8]
 500:	ldr	x0, [x8, #88]
 504:	bl	0 <free>
 508:	ldur	x8, [x29, #-8]
 50c:	mov	x9, xzr
 510:	str	x9, [x8, #88]
 514:	ldur	x8, [x29, #-8]
 518:	mov	w10, #0x1                   	// #1
 51c:	str	w10, [x8, #100]
 520:	b	524 <ctf_decl_sprintf+0x13c>
 524:	ldur	x0, [x29, #-56]
 528:	bl	0 <free>
 52c:	b	530 <ctf_decl_sprintf+0x148>
 530:	ldr	x28, [sp, #304]
 534:	ldp	x29, x30, [sp, #288]
 538:	add	sp, sp, #0x140
 53c:	ret

0000000000000540 <ctf_decl_buf>:
 540:	sub	sp, sp, #0x10
 544:	str	x0, [sp, #8]
 548:	ldr	x8, [sp, #8]
 54c:	ldr	x0, [x8, #88]
 550:	add	sp, sp, #0x10
 554:	ret

ctf-error.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_errmsg>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	stur	w0, [x29, #-4]
  10:	ldur	w8, [x29, #-4]
  14:	cmp	w8, #0x3e8
  18:	b.lt	5c <ctf_errmsg+0x5c>  // b.tstop
  1c:	ldur	w8, [x29, #-4]
  20:	subs	w8, w8, #0x3e8
  24:	cmp	w8, #0x34
  28:	b.ge	5c <ctf_errmsg+0x5c>  // b.tcont
  2c:	ldur	w8, [x29, #-4]
  30:	subs	w8, w8, #0x3e8
  34:	mov	w0, w8
  38:	sxtw	x9, w0
  3c:	mov	x10, #0x8                   	// #8
  40:	mul	x9, x10, x9
  44:	adrp	x10, 0 <ctf_errmsg>
  48:	add	x10, x10, #0x0
  4c:	add	x9, x10, x9
  50:	ldr	x9, [x9]
  54:	str	x9, [sp, #16]
  58:	b	68 <ctf_errmsg+0x68>
  5c:	ldur	w0, [x29, #-4]
  60:	bl	0 <ctf_strerror>
  64:	str	x0, [sp, #16]
  68:	ldr	x8, [sp, #16]
  6c:	cbz	x8, 7c <ctf_errmsg+0x7c>
  70:	ldr	x8, [sp, #16]
  74:	str	x8, [sp, #8]
  78:	b	88 <ctf_errmsg+0x88>
  7c:	adrp	x8, 0 <ctf_errmsg>
  80:	add	x8, x8, #0x0
  84:	str	x8, [sp, #8]
  88:	ldr	x8, [sp, #8]
  8c:	mov	x0, x8
  90:	ldp	x29, x30, [sp, #32]
  94:	add	sp, sp, #0x30
  98:	ret

000000000000009c <ctf_errno>:
  9c:	sub	sp, sp, #0x10
  a0:	str	x0, [sp, #8]
  a4:	ldr	x8, [sp, #8]
  a8:	ldr	w0, [x8, #556]
  ac:	add	sp, sp, #0x10
  b0:	ret

ctf-hash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_hash_integer>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	adrp	x8, 0 <htab_hash_pointer>
  10:	add	x8, x8, #0x0
  14:	str	x0, [sp, #8]
  18:	ldr	x9, [sp, #8]
  1c:	str	x9, [sp]
  20:	ldr	x8, [x8]
  24:	ldr	x9, [sp]
  28:	ldr	x0, [x9]
  2c:	blr	x8
  30:	ldp	x29, x30, [sp, #16]
  34:	add	sp, sp, #0x20
  38:	ret

000000000000003c <ctf_hash_eq_integer>:
  3c:	sub	sp, sp, #0x30
  40:	stp	x29, x30, [sp, #32]
  44:	add	x29, sp, #0x20
  48:	adrp	x8, 0 <htab_eq_pointer>
  4c:	add	x8, x8, #0x0
  50:	stur	x0, [x29, #-8]
  54:	str	x1, [sp, #16]
  58:	ldur	x9, [x29, #-8]
  5c:	str	x9, [sp, #8]
  60:	ldr	x9, [sp, #16]
  64:	str	x9, [sp]
  68:	ldr	x8, [x8]
  6c:	ldr	x9, [sp, #8]
  70:	ldr	x0, [x9]
  74:	ldr	x9, [sp]
  78:	ldr	x1, [x9]
  7c:	blr	x8
  80:	ldp	x29, x30, [sp, #32]
  84:	add	sp, sp, #0x30
  88:	ret

000000000000008c <ctf_hash_string>:
  8c:	sub	sp, sp, #0x20
  90:	stp	x29, x30, [sp, #16]
  94:	add	x29, sp, #0x10
  98:	str	x0, [sp, #8]
  9c:	ldr	x8, [sp, #8]
  a0:	str	x8, [sp]
  a4:	ldr	x8, [sp]
  a8:	ldr	x0, [x8]
  ac:	bl	0 <htab_hash_string>
  b0:	ldp	x29, x30, [sp, #16]
  b4:	add	sp, sp, #0x20
  b8:	ret

00000000000000bc <ctf_hash_eq_string>:
  bc:	sub	sp, sp, #0x30
  c0:	stp	x29, x30, [sp, #32]
  c4:	add	x29, sp, #0x20
  c8:	stur	x0, [x29, #-8]
  cc:	str	x1, [sp, #16]
  d0:	ldur	x8, [x29, #-8]
  d4:	str	x8, [sp, #8]
  d8:	ldr	x8, [sp, #16]
  dc:	str	x8, [sp]
  e0:	ldr	x8, [sp, #8]
  e4:	ldr	x0, [x8]
  e8:	ldr	x8, [sp]
  ec:	ldr	x1, [x8]
  f0:	bl	0 <strcmp>
  f4:	cmp	w0, #0x0
  f8:	cset	w9, ne  // ne = any
  fc:	eor	w9, w9, #0x1
 100:	and	w0, w9, #0x1
 104:	ldp	x29, x30, [sp, #32]
 108:	add	sp, sp, #0x30
 10c:	ret

0000000000000110 <ctf_hash_type_mapping_key>:
 110:	sub	sp, sp, #0x40
 114:	stp	x29, x30, [sp, #48]
 118:	add	x29, sp, #0x30
 11c:	adrp	x8, 0 <htab_hash_pointer>
 120:	add	x8, x8, #0x0
 124:	mov	w9, #0x3b                  	// #59
 128:	stur	x0, [x29, #-8]
 12c:	ldur	x10, [x29, #-8]
 130:	stur	x10, [x29, #-16]
 134:	ldur	x10, [x29, #-16]
 138:	ldr	x10, [x10]
 13c:	str	x10, [sp, #24]
 140:	ldr	x10, [x8]
 144:	ldr	x11, [sp, #24]
 148:	ldr	x0, [x11]
 14c:	str	x8, [sp, #16]
 150:	str	w9, [sp, #12]
 154:	blr	x10
 158:	ldr	x8, [sp, #16]
 15c:	ldr	x10, [x8]
 160:	ldr	x11, [sp, #24]
 164:	ldr	x11, [x11, #8]
 168:	str	w0, [sp, #8]
 16c:	mov	x0, x11
 170:	blr	x10
 174:	ldr	w9, [sp, #12]
 178:	mul	w12, w9, w0
 17c:	ldr	w13, [sp, #8]
 180:	add	w0, w13, w12
 184:	ldp	x29, x30, [sp, #48]
 188:	add	sp, sp, #0x40
 18c:	ret

0000000000000190 <ctf_hash_eq_type_mapping_key>:
 190:	sub	sp, sp, #0x40
 194:	str	x0, [sp, #56]
 198:	str	x1, [sp, #48]
 19c:	ldr	x8, [sp, #56]
 1a0:	str	x8, [sp, #40]
 1a4:	ldr	x8, [sp, #48]
 1a8:	str	x8, [sp, #32]
 1ac:	ldr	x8, [sp, #40]
 1b0:	ldr	x8, [x8]
 1b4:	str	x8, [sp, #24]
 1b8:	ldr	x8, [sp, #32]
 1bc:	ldr	x8, [x8]
 1c0:	str	x8, [sp, #16]
 1c4:	ldr	x8, [sp, #24]
 1c8:	ldr	x8, [x8]
 1cc:	ldr	x9, [sp, #16]
 1d0:	ldr	x9, [x9]
 1d4:	mov	w10, #0x0                   	// #0
 1d8:	cmp	x8, x9
 1dc:	str	w10, [sp, #12]
 1e0:	b.ne	200 <ctf_hash_eq_type_mapping_key+0x70>  // b.any
 1e4:	ldr	x8, [sp, #24]
 1e8:	ldr	x8, [x8, #8]
 1ec:	ldr	x9, [sp, #16]
 1f0:	ldr	x9, [x9, #8]
 1f4:	cmp	x8, x9
 1f8:	cset	w10, eq  // eq = none
 1fc:	str	w10, [sp, #12]
 200:	ldr	w8, [sp, #12]
 204:	and	w0, w8, #0x1
 208:	add	sp, sp, #0x40
 20c:	ret

0000000000000210 <ctf_dynhash_create>:
 210:	sub	sp, sp, #0x40
 214:	stp	x29, x30, [sp, #48]
 218:	add	x29, sp, #0x30
 21c:	mov	x8, #0x18                  	// #24
 220:	stur	x0, [x29, #-16]
 224:	str	x1, [sp, #24]
 228:	str	x2, [sp, #16]
 22c:	str	x3, [sp, #8]
 230:	mov	x0, x8
 234:	bl	0 <malloc>
 238:	str	x0, [sp]
 23c:	ldr	x8, [sp]
 240:	cbnz	x8, 250 <ctf_dynhash_create+0x40>
 244:	mov	x8, xzr
 248:	stur	x8, [x29, #-8]
 24c:	b	2b8 <ctf_dynhash_create+0xa8>
 250:	ldur	x1, [x29, #-16]
 254:	ldr	x2, [sp, #24]
 258:	mov	x0, #0x7                   	// #7
 25c:	adrp	x3, 0 <ctf_hash_integer>
 260:	add	x3, x3, #0x0
 264:	adrp	x4, 0 <xcalloc>
 268:	add	x4, x4, #0x0
 26c:	adrp	x5, 0 <free>
 270:	add	x5, x5, #0x0
 274:	bl	0 <htab_create_alloc>
 278:	ldr	x8, [sp]
 27c:	str	x0, [x8]
 280:	cbnz	x0, 298 <ctf_dynhash_create+0x88>
 284:	ldr	x0, [sp]
 288:	bl	0 <free>
 28c:	mov	x8, xzr
 290:	stur	x8, [x29, #-8]
 294:	b	2b8 <ctf_dynhash_create+0xa8>
 298:	ldr	x8, [sp, #16]
 29c:	ldr	x9, [sp]
 2a0:	str	x8, [x9, #8]
 2a4:	ldr	x8, [sp, #8]
 2a8:	ldr	x9, [sp]
 2ac:	str	x8, [x9, #16]
 2b0:	ldr	x8, [sp]
 2b4:	stur	x8, [x29, #-8]
 2b8:	ldur	x0, [x29, #-8]
 2bc:	ldp	x29, x30, [sp, #48]
 2c0:	add	sp, sp, #0x40
 2c4:	ret

00000000000002c8 <ctf_dynhash_item_free>:
 2c8:	sub	sp, sp, #0x20
 2cc:	stp	x29, x30, [sp, #16]
 2d0:	add	x29, sp, #0x10
 2d4:	str	x0, [sp, #8]
 2d8:	ldr	x8, [sp, #8]
 2dc:	str	x8, [sp]
 2e0:	ldr	x8, [sp]
 2e4:	ldr	x8, [x8, #16]
 2e8:	cbz	x8, 30c <ctf_dynhash_item_free+0x44>
 2ec:	ldr	x8, [sp]
 2f0:	ldr	x8, [x8]
 2f4:	cbz	x8, 30c <ctf_dynhash_item_free+0x44>
 2f8:	ldr	x8, [sp]
 2fc:	ldr	x8, [x8, #16]
 300:	ldr	x9, [sp]
 304:	ldr	x0, [x9]
 308:	blr	x8
 30c:	ldr	x8, [sp]
 310:	ldr	x8, [x8, #24]
 314:	cbz	x8, 338 <ctf_dynhash_item_free+0x70>
 318:	ldr	x8, [sp]
 31c:	ldr	x8, [x8, #8]
 320:	cbz	x8, 338 <ctf_dynhash_item_free+0x70>
 324:	ldr	x8, [sp]
 328:	ldr	x8, [x8, #24]
 32c:	ldr	x9, [sp]
 330:	ldr	x0, [x9, #8]
 334:	blr	x8
 338:	ldr	x0, [sp]
 33c:	bl	0 <free>
 340:	ldp	x29, x30, [sp, #16]
 344:	add	sp, sp, #0x20
 348:	ret

000000000000034c <ctf_dynhash_insert>:
 34c:	sub	sp, sp, #0x40
 350:	stp	x29, x30, [sp, #48]
 354:	add	x29, sp, #0x30
 358:	stur	x0, [x29, #-16]
 35c:	str	x1, [sp, #24]
 360:	str	x2, [sp, #16]
 364:	ldur	x8, [x29, #-16]
 368:	ldr	x0, [x8]
 36c:	ldr	x1, [sp, #24]
 370:	ldr	x2, [sp, #16]
 374:	ldur	x8, [x29, #-16]
 378:	ldr	x3, [x8, #8]
 37c:	ldur	x8, [x29, #-16]
 380:	ldr	x4, [x8, #16]
 384:	bl	3d8 <ctf_hashtab_insert>
 388:	str	x0, [sp, #8]
 38c:	ldr	x8, [sp, #8]
 390:	cbnz	x8, 3a4 <ctf_dynhash_insert+0x58>
 394:	bl	0 <__errno_location>
 398:	ldr	w8, [x0]
 39c:	stur	w8, [x29, #-4]
 3a0:	b	3c8 <ctf_dynhash_insert+0x7c>
 3a4:	ldur	x8, [x29, #-16]
 3a8:	ldr	x8, [x8, #8]
 3ac:	ldr	x9, [sp, #8]
 3b0:	str	x8, [x9, #16]
 3b4:	ldur	x8, [x29, #-16]
 3b8:	ldr	x8, [x8, #16]
 3bc:	ldr	x9, [sp, #8]
 3c0:	str	x8, [x9, #24]
 3c4:	stur	wzr, [x29, #-4]
 3c8:	ldur	w0, [x29, #-4]
 3cc:	ldp	x29, x30, [sp, #48]
 3d0:	add	sp, sp, #0x40
 3d4:	ret

00000000000003d8 <ctf_hashtab_insert>:
 3d8:	sub	sp, sp, #0x50
 3dc:	stp	x29, x30, [sp, #64]
 3e0:	add	x29, sp, #0x40
 3e4:	mov	w8, #0x1                   	// #1
 3e8:	stur	x0, [x29, #-16]
 3ec:	stur	x1, [x29, #-24]
 3f0:	str	x2, [sp, #32]
 3f4:	str	x3, [sp, #24]
 3f8:	str	x4, [sp, #16]
 3fc:	ldur	x0, [x29, #-16]
 400:	ldur	x1, [x29, #-24]
 404:	mov	w2, w8
 408:	bl	5bc <ctf_hashtab_lookup>
 40c:	str	x0, [sp, #8]
 410:	ldr	x9, [sp, #8]
 414:	cbnz	x9, 430 <ctf_hashtab_insert+0x58>
 418:	bl	0 <__errno_location>
 41c:	mov	w8, #0xfffffff4            	// #-12
 420:	str	w8, [x0]
 424:	mov	x9, xzr
 428:	stur	x9, [x29, #-8]
 42c:	b	4cc <ctf_hashtab_insert+0xf4>
 430:	ldr	x8, [sp, #8]
 434:	ldr	x8, [x8]
 438:	cbnz	x8, 468 <ctf_hashtab_insert+0x90>
 43c:	mov	x0, #0x20                  	// #32
 440:	bl	0 <malloc>
 444:	ldr	x8, [sp, #8]
 448:	str	x0, [x8]
 44c:	ldr	x8, [sp, #8]
 450:	ldr	x8, [x8]
 454:	cbnz	x8, 464 <ctf_hashtab_insert+0x8c>
 458:	mov	x8, xzr
 45c:	stur	x8, [x29, #-8]
 460:	b	4cc <ctf_hashtab_insert+0xf4>
 464:	b	4a0 <ctf_hashtab_insert+0xc8>
 468:	ldr	x8, [sp, #24]
 46c:	cbz	x8, 484 <ctf_hashtab_insert+0xac>
 470:	ldr	x8, [sp, #24]
 474:	ldr	x9, [sp, #8]
 478:	ldr	x9, [x9]
 47c:	ldr	x0, [x9]
 480:	blr	x8
 484:	ldr	x8, [sp, #16]
 488:	cbz	x8, 4a0 <ctf_hashtab_insert+0xc8>
 48c:	ldr	x8, [sp, #16]
 490:	ldr	x9, [sp, #8]
 494:	ldr	x9, [x9]
 498:	ldr	x0, [x9, #8]
 49c:	blr	x8
 4a0:	ldur	x8, [x29, #-24]
 4a4:	ldr	x9, [sp, #8]
 4a8:	ldr	x9, [x9]
 4ac:	str	x8, [x9]
 4b0:	ldr	x8, [sp, #32]
 4b4:	ldr	x9, [sp, #8]
 4b8:	ldr	x9, [x9]
 4bc:	str	x8, [x9, #8]
 4c0:	ldr	x8, [sp, #8]
 4c4:	ldr	x8, [x8]
 4c8:	stur	x8, [x29, #-8]
 4cc:	ldur	x0, [x29, #-8]
 4d0:	ldp	x29, x30, [sp, #64]
 4d4:	add	sp, sp, #0x50
 4d8:	ret

00000000000004dc <ctf_dynhash_remove>:
 4dc:	sub	sp, sp, #0x50
 4e0:	stp	x29, x30, [sp, #64]
 4e4:	add	x29, sp, #0x40
 4e8:	mov	x2, #0x20                  	// #32
 4ec:	add	x8, sp, #0x10
 4f0:	stur	x0, [x29, #-8]
 4f4:	stur	x1, [x29, #-16]
 4f8:	mov	x0, x8
 4fc:	mov	w9, wzr
 500:	mov	w1, w9
 504:	str	x8, [sp, #8]
 508:	bl	0 <memset>
 50c:	ldur	x8, [x29, #-16]
 510:	str	x8, [sp, #16]
 514:	ldur	x8, [x29, #-8]
 518:	ldr	x0, [x8]
 51c:	ldr	x1, [sp, #8]
 520:	bl	0 <htab_remove_elt>
 524:	ldp	x29, x30, [sp, #64]
 528:	add	sp, sp, #0x50
 52c:	ret

0000000000000530 <ctf_dynhash_empty>:
 530:	sub	sp, sp, #0x20
 534:	stp	x29, x30, [sp, #16]
 538:	add	x29, sp, #0x10
 53c:	str	x0, [sp, #8]
 540:	ldr	x8, [sp, #8]
 544:	ldr	x0, [x8]
 548:	bl	0 <htab_empty>
 54c:	ldp	x29, x30, [sp, #16]
 550:	add	sp, sp, #0x20
 554:	ret

0000000000000558 <ctf_dynhash_lookup>:
 558:	sub	sp, sp, #0x30
 55c:	stp	x29, x30, [sp, #32]
 560:	add	x29, sp, #0x20
 564:	mov	w8, wzr
 568:	str	x0, [sp, #16]
 56c:	str	x1, [sp, #8]
 570:	ldr	x9, [sp, #16]
 574:	ldr	x0, [x9]
 578:	ldr	x1, [sp, #8]
 57c:	mov	w2, w8
 580:	bl	5bc <ctf_hashtab_lookup>
 584:	str	x0, [sp]
 588:	ldr	x9, [sp]
 58c:	cbz	x9, 5a4 <ctf_dynhash_lookup+0x4c>
 590:	ldr	x8, [sp]
 594:	ldr	x8, [x8]
 598:	ldr	x8, [x8, #8]
 59c:	stur	x8, [x29, #-8]
 5a0:	b	5ac <ctf_dynhash_lookup+0x54>
 5a4:	mov	x8, xzr
 5a8:	stur	x8, [x29, #-8]
 5ac:	ldur	x0, [x29, #-8]
 5b0:	ldp	x29, x30, [sp, #32]
 5b4:	add	sp, sp, #0x30
 5b8:	ret

00000000000005bc <ctf_hashtab_lookup>:
 5bc:	sub	sp, sp, #0x60
 5c0:	stp	x29, x30, [sp, #80]
 5c4:	add	x29, sp, #0x50
 5c8:	mov	x8, #0x20                  	// #32
 5cc:	add	x9, sp, #0x10
 5d0:	stur	x0, [x29, #-8]
 5d4:	stur	x1, [x29, #-16]
 5d8:	stur	w2, [x29, #-20]
 5dc:	mov	x0, x9
 5e0:	mov	w10, wzr
 5e4:	mov	w1, w10
 5e8:	mov	x2, x8
 5ec:	str	x9, [sp, #8]
 5f0:	bl	0 <memset>
 5f4:	ldur	x8, [x29, #-16]
 5f8:	str	x8, [sp, #16]
 5fc:	ldur	x0, [x29, #-8]
 600:	ldur	w2, [x29, #-20]
 604:	ldr	x1, [sp, #8]
 608:	bl	0 <htab_find_slot>
 60c:	ldp	x29, x30, [sp, #80]
 610:	add	sp, sp, #0x60
 614:	ret

0000000000000618 <ctf_dynhash_iter>:
 618:	sub	sp, sp, #0x40
 61c:	stp	x29, x30, [sp, #48]
 620:	add	x29, sp, #0x30
 624:	adrp	x8, 0 <ctf_hash_integer>
 628:	add	x8, x8, #0x0
 62c:	add	x9, sp, #0x8
 630:	stur	x0, [x29, #-8]
 634:	stur	x1, [x29, #-16]
 638:	str	x2, [sp, #24]
 63c:	ldur	x10, [x29, #-16]
 640:	str	x10, [sp, #8]
 644:	ldr	x10, [sp, #24]
 648:	str	x10, [x9, #8]
 64c:	ldur	x10, [x29, #-8]
 650:	ldr	x0, [x10]
 654:	mov	x1, x8
 658:	mov	x2, x9
 65c:	bl	0 <htab_traverse>
 660:	ldp	x29, x30, [sp, #48]
 664:	add	sp, sp, #0x40
 668:	ret

000000000000066c <ctf_hashtab_traverse>:
 66c:	sub	sp, sp, #0x40
 670:	stp	x29, x30, [sp, #48]
 674:	add	x29, sp, #0x30
 678:	mov	w8, #0x1                   	// #1
 67c:	stur	x0, [x29, #-8]
 680:	stur	x1, [x29, #-16]
 684:	ldur	x9, [x29, #-8]
 688:	ldr	x9, [x9]
 68c:	str	x9, [sp, #24]
 690:	ldur	x9, [x29, #-16]
 694:	str	x9, [sp, #16]
 698:	ldr	x9, [sp, #16]
 69c:	ldr	x9, [x9]
 6a0:	ldr	x10, [sp, #24]
 6a4:	ldr	x0, [x10]
 6a8:	ldr	x10, [sp, #24]
 6ac:	ldr	x1, [x10, #8]
 6b0:	ldr	x10, [sp, #16]
 6b4:	ldr	x2, [x10, #8]
 6b8:	str	w8, [sp, #12]
 6bc:	blr	x9
 6c0:	ldr	w0, [sp, #12]
 6c4:	ldp	x29, x30, [sp, #48]
 6c8:	add	sp, sp, #0x40
 6cc:	ret

00000000000006d0 <ctf_dynhash_iter_remove>:
 6d0:	sub	sp, sp, #0x40
 6d4:	stp	x29, x30, [sp, #48]
 6d8:	add	x29, sp, #0x30
 6dc:	adrp	x8, 0 <ctf_hash_integer>
 6e0:	add	x8, x8, #0x0
 6e4:	mov	x9, sp
 6e8:	stur	x0, [x29, #-8]
 6ec:	stur	x1, [x29, #-16]
 6f0:	str	x2, [sp, #24]
 6f4:	ldur	x10, [x29, #-8]
 6f8:	ldr	x10, [x10]
 6fc:	str	x10, [sp]
 700:	ldur	x10, [x29, #-16]
 704:	str	x10, [x9, #8]
 708:	ldr	x10, [sp, #24]
 70c:	str	x10, [x9, #16]
 710:	ldur	x10, [x29, #-8]
 714:	ldr	x0, [x10]
 718:	mov	x1, x8
 71c:	mov	x2, x9
 720:	bl	0 <htab_traverse>
 724:	ldp	x29, x30, [sp, #48]
 728:	add	sp, sp, #0x40
 72c:	ret

0000000000000730 <ctf_hashtab_traverse_remove>:
 730:	sub	sp, sp, #0x30
 734:	stp	x29, x30, [sp, #32]
 738:	add	x29, sp, #0x20
 73c:	stur	x0, [x29, #-8]
 740:	str	x1, [sp, #16]
 744:	ldur	x8, [x29, #-8]
 748:	ldr	x8, [x8]
 74c:	str	x8, [sp, #8]
 750:	ldr	x8, [sp, #16]
 754:	str	x8, [sp]
 758:	ldr	x8, [sp]
 75c:	ldr	x8, [x8, #8]
 760:	ldr	x9, [sp, #8]
 764:	ldr	x0, [x9]
 768:	ldr	x9, [sp, #8]
 76c:	ldr	x1, [x9, #8]
 770:	ldr	x9, [sp]
 774:	ldr	x2, [x9, #16]
 778:	blr	x8
 77c:	cbz	w0, 790 <ctf_hashtab_traverse_remove+0x60>
 780:	ldr	x8, [sp]
 784:	ldr	x0, [x8]
 788:	ldur	x1, [x29, #-8]
 78c:	bl	0 <htab_clear_slot>
 790:	mov	w0, #0x1                   	// #1
 794:	ldp	x29, x30, [sp, #32]
 798:	add	sp, sp, #0x30
 79c:	ret

00000000000007a0 <ctf_dynhash_destroy>:
 7a0:	sub	sp, sp, #0x20
 7a4:	stp	x29, x30, [sp, #16]
 7a8:	add	x29, sp, #0x10
 7ac:	str	x0, [sp, #8]
 7b0:	ldr	x8, [sp, #8]
 7b4:	cbz	x8, 7c4 <ctf_dynhash_destroy+0x24>
 7b8:	ldr	x8, [sp, #8]
 7bc:	ldr	x0, [x8]
 7c0:	bl	0 <htab_delete>
 7c4:	ldr	x0, [sp, #8]
 7c8:	bl	0 <free>
 7cc:	ldp	x29, x30, [sp, #16]
 7d0:	add	sp, sp, #0x20
 7d4:	ret

00000000000007d8 <ctf_hash_create>:
 7d8:	sub	sp, sp, #0x30
 7dc:	stp	x29, x30, [sp, #32]
 7e0:	add	x29, sp, #0x20
 7e4:	adrp	x8, 0 <free>
 7e8:	add	x8, x8, #0x0
 7ec:	adrp	x4, 0 <xcalloc>
 7f0:	add	x4, x4, #0x0
 7f4:	stur	x0, [x29, #-8]
 7f8:	str	x1, [sp, #16]
 7fc:	str	x2, [sp, #8]
 800:	ldur	x0, [x29, #-8]
 804:	ldr	x1, [sp, #16]
 808:	ldr	x2, [sp, #8]
 80c:	mov	x3, x8
 810:	mov	x5, x8
 814:	bl	0 <htab_create_alloc>
 818:	ldp	x29, x30, [sp, #32]
 81c:	add	sp, sp, #0x30
 820:	ret

0000000000000824 <ctf_hash_size>:
 824:	sub	sp, sp, #0x20
 828:	stp	x29, x30, [sp, #16]
 82c:	add	x29, sp, #0x10
 830:	str	x0, [sp, #8]
 834:	ldr	x0, [sp, #8]
 838:	bl	0 <htab_elements>
 83c:	ldp	x29, x30, [sp, #16]
 840:	add	sp, sp, #0x20
 844:	ret

0000000000000848 <ctf_hash_insert_type>:
 848:	sub	sp, sp, #0x40
 84c:	stp	x29, x30, [sp, #48]
 850:	add	x29, sp, #0x30
 854:	stur	x0, [x29, #-16]
 858:	str	x1, [sp, #24]
 85c:	str	w2, [sp, #20]
 860:	str	w3, [sp, #16]
 864:	ldr	x0, [sp, #24]
 868:	ldr	w1, [sp, #16]
 86c:	bl	0 <ctf_strraw>
 870:	str	x0, [sp, #8]
 874:	ldr	w8, [sp, #20]
 878:	cbnz	w8, 888 <ctf_hash_insert_type+0x40>
 87c:	mov	w8, #0x16                  	// #22
 880:	stur	w8, [x29, #-4]
 884:	b	944 <ctf_hash_insert_type+0xfc>
 888:	ldr	x8, [sp, #8]
 88c:	cbnz	x8, 8e4 <ctf_hash_insert_type+0x9c>
 890:	ldr	w8, [sp, #16]
 894:	lsr	w8, w8, #31
 898:	cmp	w8, #0x1
 89c:	b.ne	8e4 <ctf_hash_insert_type+0x9c>  // b.any
 8a0:	ldr	x8, [sp, #24]
 8a4:	ldr	x8, [x8, #128]
 8a8:	cbnz	x8, 8e4 <ctf_hash_insert_type+0x9c>
 8ac:	ldr	x8, [sp, #24]
 8b0:	add	x8, x8, #0x150
 8b4:	ldr	w9, [sp, #16]
 8b8:	lsr	w9, w9, #31
 8bc:	mov	w10, w9
 8c0:	ubfx	x10, x10, #0, #32
 8c4:	mov	x11, #0x10                  	// #16
 8c8:	mul	x10, x11, x10
 8cc:	add	x8, x8, x10
 8d0:	ldr	x8, [x8]
 8d4:	cbnz	x8, 8e4 <ctf_hash_insert_type+0x9c>
 8d8:	mov	w8, #0x3f8                 	// #1016
 8dc:	stur	w8, [x29, #-4]
 8e0:	b	944 <ctf_hash_insert_type+0xfc>
 8e4:	ldr	x8, [sp, #8]
 8e8:	cbnz	x8, 8f8 <ctf_hash_insert_type+0xb0>
 8ec:	mov	w8, #0x3f9                 	// #1017
 8f0:	stur	w8, [x29, #-4]
 8f4:	b	944 <ctf_hash_insert_type+0xfc>
 8f8:	ldr	x8, [sp, #8]
 8fc:	ldrb	w9, [x8]
 900:	cbnz	w9, 90c <ctf_hash_insert_type+0xc4>
 904:	stur	wzr, [x29, #-4]
 908:	b	944 <ctf_hash_insert_type+0xfc>
 90c:	ldur	x0, [x29, #-16]
 910:	ldr	x1, [sp, #8]
 914:	ldr	w8, [sp, #20]
 918:	mov	w2, w8
 91c:	mov	x9, xzr
 920:	mov	x3, x9
 924:	mov	x4, x9
 928:	bl	3d8 <ctf_hashtab_insert>
 92c:	cbz	x0, 938 <ctf_hash_insert_type+0xf0>
 930:	stur	wzr, [x29, #-4]
 934:	b	944 <ctf_hash_insert_type+0xfc>
 938:	bl	0 <__errno_location>
 93c:	ldr	w8, [x0]
 940:	stur	w8, [x29, #-4]
 944:	ldur	w0, [x29, #-4]
 948:	ldp	x29, x30, [sp, #48]
 94c:	add	sp, sp, #0x40
 950:	ret

0000000000000954 <ctf_hash_define_type>:
 954:	sub	sp, sp, #0x30
 958:	stp	x29, x30, [sp, #32]
 95c:	add	x29, sp, #0x20
 960:	stur	x0, [x29, #-8]
 964:	str	x1, [sp, #16]
 968:	str	w2, [sp, #12]
 96c:	str	w3, [sp, #8]
 970:	ldur	x0, [x29, #-8]
 974:	ldr	x1, [sp, #16]
 978:	ldr	w2, [sp, #12]
 97c:	ldr	w3, [sp, #8]
 980:	bl	848 <ctf_hash_insert_type>
 984:	ldp	x29, x30, [sp, #32]
 988:	add	sp, sp, #0x30
 98c:	ret

0000000000000990 <ctf_hash_lookup_type>:
 990:	sub	sp, sp, #0x40
 994:	stp	x29, x30, [sp, #48]
 998:	add	x29, sp, #0x30
 99c:	mov	w8, wzr
 9a0:	stur	x0, [x29, #-16]
 9a4:	str	x1, [sp, #24]
 9a8:	str	x2, [sp, #16]
 9ac:	ldur	x0, [x29, #-16]
 9b0:	ldr	x1, [sp, #16]
 9b4:	mov	w2, w8
 9b8:	bl	5bc <ctf_hashtab_lookup>
 9bc:	str	x0, [sp, #8]
 9c0:	ldr	x9, [sp, #8]
 9c4:	cbz	x9, 9dc <ctf_hash_lookup_type+0x4c>
 9c8:	ldr	x8, [sp, #8]
 9cc:	ldr	x8, [x8]
 9d0:	ldr	x8, [x8, #8]
 9d4:	stur	x8, [x29, #-8]
 9d8:	b	9e0 <ctf_hash_lookup_type+0x50>
 9dc:	stur	xzr, [x29, #-8]
 9e0:	ldur	x0, [x29, #-8]
 9e4:	ldp	x29, x30, [sp, #48]
 9e8:	add	sp, sp, #0x40
 9ec:	ret

00000000000009f0 <ctf_hash_destroy>:
 9f0:	sub	sp, sp, #0x20
 9f4:	stp	x29, x30, [sp, #16]
 9f8:	add	x29, sp, #0x10
 9fc:	str	x0, [sp, #8]
 a00:	ldr	x8, [sp, #8]
 a04:	cbz	x8, a10 <ctf_hash_destroy+0x20>
 a08:	ldr	x0, [sp, #8]
 a0c:	bl	0 <htab_delete>
 a10:	ldp	x29, x30, [sp, #16]
 a14:	add	sp, sp, #0x20
 a18:	ret

ctf-labels.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_label_topmost>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	mov	x8, xzr
  10:	add	x1, sp, #0x18
  14:	add	x2, sp, #0xc
  18:	stur	x0, [x29, #-16]
  1c:	str	x8, [sp, #24]
  20:	str	wzr, [sp, #12]
  24:	ldur	x0, [x29, #-16]
  28:	bl	b4 <extract_label_info>
  2c:	cmp	w0, #0x0
  30:	cset	w9, ge  // ge = tcont
  34:	tbnz	w9, #0, 44 <ctf_label_topmost+0x44>
  38:	mov	x8, xzr
  3c:	stur	x8, [x29, #-8]
  40:	b	a4 <ctf_label_topmost+0xa4>
  44:	ldr	w8, [sp, #12]
  48:	cbnz	w8, 64 <ctf_label_topmost+0x64>
  4c:	ldur	x0, [x29, #-16]
  50:	mov	w1, #0x409                 	// #1033
  54:	bl	0 <ctf_set_errno>
  58:	mov	x8, xzr
  5c:	stur	x8, [x29, #-8]
  60:	b	a4 <ctf_label_topmost+0xa4>
  64:	ldur	x0, [x29, #-16]
  68:	ldr	x8, [sp, #24]
  6c:	ldr	w9, [sp, #12]
  70:	mov	w10, w9
  74:	mov	x11, #0x8                   	// #8
  78:	mul	x10, x11, x10
  7c:	add	x8, x8, x10
  80:	ldur	w1, [x8, #-8]
  84:	bl	0 <ctf_strraw>
  88:	str	x0, [sp, #16]
  8c:	cbnz	x0, 9c <ctf_label_topmost+0x9c>
  90:	ldur	x0, [x29, #-16]
  94:	mov	w1, #0x3ef                 	// #1007
  98:	bl	0 <ctf_set_errno>
  9c:	ldr	x8, [sp, #16]
  a0:	stur	x8, [x29, #-8]
  a4:	ldur	x0, [x29, #-8]
  a8:	ldp	x29, x30, [sp, #48]
  ac:	add	sp, sp, #0x40
  b0:	ret

00000000000000b4 <extract_label_info>:
  b4:	sub	sp, sp, #0x20
  b8:	mov	x8, #0x8                   	// #8
  bc:	mov	w9, wzr
  c0:	str	x0, [sp, #24]
  c4:	str	x1, [sp, #16]
  c8:	str	x2, [sp, #8]
  cc:	ldr	x10, [sp, #24]
  d0:	ldr	x10, [x10, #32]
  d4:	str	x10, [sp]
  d8:	ldr	x10, [sp, #24]
  dc:	ldr	x10, [x10, #408]
  e0:	ldr	x11, [sp]
  e4:	ldr	w12, [x11, #16]
  e8:	mov	w11, w12
  ec:	add	x10, x10, x11
  f0:	ldr	x11, [sp, #16]
  f4:	str	x10, [x11]
  f8:	ldr	x10, [sp]
  fc:	ldr	w12, [x10, #20]
 100:	ldr	x10, [sp]
 104:	ldr	w13, [x10, #16]
 108:	subs	w12, w12, w13
 10c:	mov	w10, w12
 110:	ubfx	x10, x10, #0, #32
 114:	udiv	x8, x10, x8
 118:	ldr	x10, [sp, #8]
 11c:	str	w8, [x10]
 120:	mov	w0, w9
 124:	add	sp, sp, #0x20
 128:	ret

000000000000012c <ctf_label_iter>:
 12c:	sub	sp, sp, #0x60
 130:	stp	x29, x30, [sp, #80]
 134:	add	x29, sp, #0x50
 138:	mov	x8, xzr
 13c:	add	x9, sp, #0x28
 140:	add	x10, sp, #0x20
 144:	stur	x0, [x29, #-16]
 148:	stur	x1, [x29, #-24]
 14c:	stur	x2, [x29, #-32]
 150:	str	x8, [sp, #40]
 154:	str	wzr, [sp, #32]
 158:	ldur	x0, [x29, #-16]
 15c:	mov	x1, x9
 160:	mov	x2, x10
 164:	bl	b4 <extract_label_info>
 168:	cmp	w0, #0x0
 16c:	cset	w11, ge  // ge = tcont
 170:	tbnz	w11, #0, 180 <ctf_label_iter+0x54>
 174:	mov	w8, #0xffffffff            	// #-1
 178:	stur	w8, [x29, #-4]
 17c:	b	250 <ctf_label_iter+0x124>
 180:	ldr	w8, [sp, #32]
 184:	cbnz	w8, 19c <ctf_label_iter+0x70>
 188:	ldur	x0, [x29, #-16]
 18c:	mov	w1, #0x409                 	// #1033
 190:	bl	0 <ctf_set_errno>
 194:	stur	w0, [x29, #-4]
 198:	b	250 <ctf_label_iter+0x124>
 19c:	str	wzr, [sp, #36]
 1a0:	ldr	w8, [sp, #36]
 1a4:	ldr	w9, [sp, #32]
 1a8:	cmp	w8, w9
 1ac:	b.cs	24c <ctf_label_iter+0x120>  // b.hs, b.nlast
 1b0:	ldur	x0, [x29, #-16]
 1b4:	ldr	x8, [sp, #40]
 1b8:	ldr	w1, [x8]
 1bc:	bl	0 <ctf_strraw>
 1c0:	str	x0, [sp, #16]
 1c4:	cbnz	x0, 1f8 <ctf_label_iter+0xcc>
 1c8:	ldr	x8, [sp, #40]
 1cc:	ldr	w1, [x8]
 1d0:	ldr	x8, [sp, #40]
 1d4:	ldr	w2, [x8, #4]
 1d8:	adrp	x0, 0 <ctf_label_topmost>
 1dc:	add	x0, x0, #0x0
 1e0:	bl	0 <ctf_dprintf>
 1e4:	ldur	x0, [x29, #-16]
 1e8:	mov	w1, #0x3ef                 	// #1007
 1ec:	bl	0 <ctf_set_errno>
 1f0:	stur	w0, [x29, #-4]
 1f4:	b	250 <ctf_label_iter+0x124>
 1f8:	ldr	x8, [sp, #40]
 1fc:	ldr	w9, [x8, #4]
 200:	mov	w8, w9
 204:	add	x1, sp, #0x18
 208:	str	x8, [sp, #24]
 20c:	ldur	x8, [x29, #-24]
 210:	ldr	x0, [sp, #16]
 214:	ldur	x2, [x29, #-32]
 218:	blr	x8
 21c:	str	w0, [sp, #12]
 220:	cbz	w0, 230 <ctf_label_iter+0x104>
 224:	ldr	w8, [sp, #12]
 228:	stur	w8, [x29, #-4]
 22c:	b	250 <ctf_label_iter+0x124>
 230:	ldr	w8, [sp, #36]
 234:	add	w8, w8, #0x1
 238:	str	w8, [sp, #36]
 23c:	ldr	x9, [sp, #40]
 240:	add	x9, x9, #0x8
 244:	str	x9, [sp, #40]
 248:	b	1a0 <ctf_label_iter+0x74>
 24c:	stur	wzr, [x29, #-4]
 250:	ldur	w0, [x29, #-4]
 254:	ldp	x29, x30, [sp, #80]
 258:	add	sp, sp, #0x60
 25c:	ret

0000000000000260 <ctf_label_info>:
 260:	sub	sp, sp, #0x50
 264:	stp	x29, x30, [sp, #64]
 268:	add	x29, sp, #0x40
 26c:	adrp	x8, 0 <ctf_label_topmost>
 270:	add	x8, x8, #0x0
 274:	add	x9, sp, #0x10
 278:	stur	x0, [x29, #-16]
 27c:	stur	x1, [x29, #-24]
 280:	str	x2, [sp, #32]
 284:	ldur	x10, [x29, #-24]
 288:	str	x10, [sp, #16]
 28c:	ldr	x10, [sp, #32]
 290:	str	x10, [x9, #8]
 294:	ldur	x0, [x29, #-16]
 298:	mov	x1, x8
 29c:	mov	x2, x9
 2a0:	bl	12c <ctf_label_iter>
 2a4:	str	w0, [sp, #12]
 2a8:	cmp	w0, #0x0
 2ac:	cset	w11, ge  // ge = tcont
 2b0:	tbnz	w11, #0, 2c0 <ctf_label_info+0x60>
 2b4:	ldr	w8, [sp, #12]
 2b8:	stur	w8, [x29, #-4]
 2bc:	b	2e4 <ctf_label_info+0x84>
 2c0:	ldr	w8, [sp, #12]
 2c4:	cmp	w8, #0x1
 2c8:	b.eq	2e0 <ctf_label_info+0x80>  // b.none
 2cc:	ldur	x0, [x29, #-16]
 2d0:	mov	w1, #0x408                 	// #1032
 2d4:	bl	0 <ctf_set_errno>
 2d8:	stur	w0, [x29, #-4]
 2dc:	b	2e4 <ctf_label_info+0x84>
 2e0:	stur	wzr, [x29, #-4]
 2e4:	ldur	w0, [x29, #-4]
 2e8:	ldp	x29, x30, [sp, #64]
 2ec:	add	sp, sp, #0x50
 2f0:	ret

00000000000002f4 <label_info_cb>:
 2f4:	sub	sp, sp, #0x30
 2f8:	stp	x29, x30, [sp, #32]
 2fc:	add	x29, sp, #0x20
 300:	str	x0, [sp, #16]
 304:	str	x1, [sp, #8]
 308:	str	x2, [sp]
 30c:	ldr	x0, [sp, #16]
 310:	ldr	x8, [sp]
 314:	ldr	x1, [x8]
 318:	bl	0 <strcmp>
 31c:	cbnz	w0, 34c <label_info_cb+0x58>
 320:	ldr	x8, [sp]
 324:	ldr	x8, [x8, #8]
 328:	cbz	x8, 340 <label_info_cb+0x4c>
 32c:	ldr	x8, [sp]
 330:	ldr	x8, [x8, #8]
 334:	ldr	x9, [sp, #8]
 338:	ldr	x9, [x9]
 33c:	str	x9, [x8]
 340:	mov	w8, #0x1                   	// #1
 344:	stur	w8, [x29, #-4]
 348:	b	350 <label_info_cb+0x5c>
 34c:	stur	wzr, [x29, #-4]
 350:	ldur	w0, [x29, #-4]
 354:	ldp	x29, x30, [sp, #32]
 358:	add	sp, sp, #0x30
 35c:	ret

ctf-link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_add_type_mapping>:
       0:	sub	sp, sp, #0x50
       4:	stp	x29, x30, [sp, #64]
       8:	add	x29, sp, #0x40
       c:	stur	x0, [x29, #-8]
      10:	stur	x1, [x29, #-16]
      14:	stur	x2, [x29, #-24]
      18:	str	x3, [sp, #32]
      1c:	ldur	x8, [x29, #-16]
      20:	ldur	x9, [x29, #-8]
      24:	ldr	w10, [x9, #544]
      28:	mov	w9, w10
      2c:	cmp	x8, x9
      30:	b.hi	4c <ctf_add_type_mapping+0x4c>  // b.pmore
      34:	ldur	x8, [x29, #-8]
      38:	ldr	x8, [x8, #512]
      3c:	cbz	x8, 4c <ctf_add_type_mapping+0x4c>
      40:	ldur	x8, [x29, #-8]
      44:	ldr	x8, [x8, #512]
      48:	stur	x8, [x29, #-8]
      4c:	ldur	x8, [x29, #-16]
      50:	ldur	x9, [x29, #-8]
      54:	ldr	w10, [x9, #544]
      58:	mov	w9, w10
      5c:	and	x8, x8, x9
      60:	stur	x8, [x29, #-16]
      64:	ldr	x8, [sp, #32]
      68:	ldur	x9, [x29, #-24]
      6c:	ldr	w10, [x9, #544]
      70:	mov	w9, w10
      74:	cmp	x8, x9
      78:	b.hi	94 <ctf_add_type_mapping+0x94>  // b.pmore
      7c:	ldur	x8, [x29, #-24]
      80:	ldr	x8, [x8, #512]
      84:	cbz	x8, 94 <ctf_add_type_mapping+0x94>
      88:	ldur	x8, [x29, #-24]
      8c:	ldr	x8, [x8, #512]
      90:	stur	x8, [x29, #-24]
      94:	ldr	x8, [sp, #32]
      98:	ldur	x9, [x29, #-24]
      9c:	ldr	w10, [x9, #544]
      a0:	mov	w9, w10
      a4:	and	x8, x8, x9
      a8:	str	x8, [sp, #32]
      ac:	ldur	x8, [x29, #-24]
      b0:	ldr	x8, [x8, #664]
      b4:	cbnz	x8, fc <ctf_add_type_mapping+0xfc>
      b8:	adrp	x8, 0 <ctf_hash_type_mapping_key>
      bc:	add	x8, x8, #0x0
      c0:	str	x8, [sp, #24]
      c4:	adrp	x8, 0 <ctf_hash_eq_type_mapping_key>
      c8:	add	x8, x8, #0x0
      cc:	str	x8, [sp, #16]
      d0:	ldr	x0, [sp, #24]
      d4:	ldr	x1, [sp, #16]
      d8:	adrp	x2, 0 <free>
      dc:	add	x2, x2, #0x0
      e0:	mov	x8, xzr
      e4:	mov	x3, x8
      e8:	bl	0 <ctf_dynhash_create>
      ec:	ldur	x8, [x29, #-24]
      f0:	str	x0, [x8, #664]
      f4:	cbnz	x0, fc <ctf_add_type_mapping+0xfc>
      f8:	b	148 <ctf_add_type_mapping+0x148>
      fc:	mov	x0, #0x1                   	// #1
     100:	mov	x1, #0x10                  	// #16
     104:	bl	0 <calloc>
     108:	str	x0, [sp, #8]
     10c:	ldr	x8, [sp, #8]
     110:	cbnz	x8, 118 <ctf_add_type_mapping+0x118>
     114:	b	148 <ctf_add_type_mapping+0x148>
     118:	ldur	x8, [x29, #-8]
     11c:	ldr	x9, [sp, #8]
     120:	str	x8, [x9]
     124:	ldur	x8, [x29, #-16]
     128:	ldr	x9, [sp, #8]
     12c:	str	x8, [x9, #8]
     130:	ldur	x8, [x29, #-24]
     134:	ldr	x0, [x8, #664]
     138:	ldr	x1, [sp, #8]
     13c:	ldr	x8, [sp, #32]
     140:	mov	x2, x8
     144:	bl	0 <ctf_dynhash_insert>
     148:	ldp	x29, x30, [sp, #64]
     14c:	add	sp, sp, #0x50
     150:	ret

0000000000000154 <ctf_type_mapping>:
     154:	sub	sp, sp, #0x60
     158:	stp	x29, x30, [sp, #80]
     15c:	add	x29, sp, #0x50
     160:	stur	x0, [x29, #-16]
     164:	stur	x1, [x29, #-24]
     168:	stur	x2, [x29, #-32]
     16c:	ldur	x8, [x29, #-32]
     170:	ldr	x8, [x8]
     174:	str	x8, [sp, #24]
     178:	str	xzr, [sp, #16]
     17c:	ldur	x8, [x29, #-24]
     180:	ldur	x9, [x29, #-16]
     184:	ldr	w10, [x9, #544]
     188:	mov	w9, w10
     18c:	cmp	x8, x9
     190:	b.hi	1ac <ctf_type_mapping+0x58>  // b.pmore
     194:	ldur	x8, [x29, #-16]
     198:	ldr	x8, [x8, #512]
     19c:	cbz	x8, 1ac <ctf_type_mapping+0x58>
     1a0:	ldur	x8, [x29, #-16]
     1a4:	ldr	x8, [x8, #512]
     1a8:	stur	x8, [x29, #-16]
     1ac:	ldur	x8, [x29, #-24]
     1b0:	ldur	x9, [x29, #-16]
     1b4:	ldr	w10, [x9, #544]
     1b8:	mov	w9, w10
     1bc:	and	x8, x8, x9
     1c0:	stur	x8, [x29, #-24]
     1c4:	ldur	x8, [x29, #-16]
     1c8:	str	x8, [sp, #32]
     1cc:	ldur	x8, [x29, #-24]
     1d0:	str	x8, [sp, #40]
     1d4:	ldr	x8, [sp, #24]
     1d8:	ldr	x8, [x8, #664]
     1dc:	cbz	x8, 1f4 <ctf_type_mapping+0xa0>
     1e0:	ldr	x8, [sp, #24]
     1e4:	ldr	x0, [x8, #664]
     1e8:	add	x1, sp, #0x20
     1ec:	bl	0 <ctf_dynhash_lookup>
     1f0:	str	x0, [sp, #16]
     1f4:	ldr	x8, [sp, #16]
     1f8:	cbz	x8, 254 <ctf_type_mapping+0x100>
     1fc:	ldr	x8, [sp, #24]
     200:	ldr	x8, [x8, #512]
     204:	cbz	x8, 22c <ctf_type_mapping+0xd8>
     208:	ldr	x8, [sp, #16]
     20c:	ldr	x9, [sp, #24]
     210:	ldr	w10, [x9, #544]
     214:	add	w10, w10, #0x1
     218:	mov	w9, w10
     21c:	ubfx	x9, x9, #0, #32
     220:	orr	x8, x8, x9
     224:	str	x8, [sp, #8]
     228:	b	234 <ctf_type_mapping+0xe0>
     22c:	ldr	x8, [sp, #16]
     230:	str	x8, [sp, #8]
     234:	ldr	x8, [sp, #8]
     238:	str	x8, [sp, #16]
     23c:	ldr	x8, [sp, #24]
     240:	ldur	x9, [x29, #-32]
     244:	str	x8, [x9]
     248:	ldr	x8, [sp, #16]
     24c:	stur	x8, [x29, #-8]
     250:	b	2f4 <ctf_type_mapping+0x1a0>
     254:	ldr	x8, [sp, #24]
     258:	ldr	x8, [x8, #512]
     25c:	cbz	x8, 270 <ctf_type_mapping+0x11c>
     260:	ldr	x8, [sp, #24]
     264:	ldr	x8, [x8, #512]
     268:	str	x8, [sp, #24]
     26c:	b	278 <ctf_type_mapping+0x124>
     270:	stur	xzr, [x29, #-8]
     274:	b	2f4 <ctf_type_mapping+0x1a0>
     278:	ldr	x8, [sp, #24]
     27c:	ldr	x8, [x8, #664]
     280:	cbz	x8, 298 <ctf_type_mapping+0x144>
     284:	ldr	x8, [sp, #24]
     288:	ldr	x0, [x8, #664]
     28c:	add	x1, sp, #0x20
     290:	bl	0 <ctf_dynhash_lookup>
     294:	str	x0, [sp, #16]
     298:	ldr	x8, [sp, #16]
     29c:	cbz	x8, 2e0 <ctf_type_mapping+0x18c>
     2a0:	ldr	x8, [sp, #24]
     2a4:	ldr	x8, [x8, #512]
     2a8:	cbz	x8, 2d0 <ctf_type_mapping+0x17c>
     2ac:	ldr	x8, [sp, #16]
     2b0:	ldr	x9, [sp, #24]
     2b4:	ldr	w10, [x9, #544]
     2b8:	add	w10, w10, #0x1
     2bc:	mov	w9, w10
     2c0:	ubfx	x9, x9, #0, #32
     2c4:	orr	x8, x8, x9
     2c8:	str	x8, [sp]
     2cc:	b	2d8 <ctf_type_mapping+0x184>
     2d0:	ldr	x8, [sp, #16]
     2d4:	str	x8, [sp]
     2d8:	ldr	x8, [sp]
     2dc:	str	x8, [sp, #16]
     2e0:	ldr	x8, [sp, #24]
     2e4:	ldur	x9, [x29, #-32]
     2e8:	str	x8, [x9]
     2ec:	ldr	x8, [sp, #16]
     2f0:	stur	x8, [x29, #-8]
     2f4:	ldur	x0, [x29, #-8]
     2f8:	ldp	x29, x30, [sp, #80]
     2fc:	add	sp, sp, #0x60
     300:	ret

0000000000000304 <ctf_link_add_ctf>:
     304:	sub	sp, sp, #0x40
     308:	stp	x29, x30, [sp, #48]
     30c:	add	x29, sp, #0x30
     310:	mov	x8, xzr
     314:	stur	x0, [x29, #-16]
     318:	str	x1, [sp, #24]
     31c:	str	x2, [sp, #16]
     320:	str	x8, [sp, #8]
     324:	ldur	x8, [x29, #-16]
     328:	ldr	x8, [x8, #656]
     32c:	cbz	x8, 344 <ctf_link_add_ctf+0x40>
     330:	ldur	x0, [x29, #-16]
     334:	mov	w1, #0x3f5                 	// #1013
     338:	bl	0 <ctf_set_errno>
     33c:	stur	w0, [x29, #-4]
     340:	b	3fc <ctf_link_add_ctf+0xf8>
     344:	ldur	x8, [x29, #-16]
     348:	ldr	x8, [x8, #648]
     34c:	cbnz	x8, 37c <ctf_link_add_ctf+0x78>
     350:	adrp	x0, 0 <ctf_hash_string>
     354:	add	x0, x0, #0x0
     358:	adrp	x1, 0 <ctf_hash_eq_string>
     35c:	add	x1, x1, #0x0
     360:	adrp	x2, 0 <free>
     364:	add	x2, x2, #0x0
     368:	adrp	x3, 0 <ctf_add_type_mapping>
     36c:	add	x3, x3, #0x0
     370:	bl	0 <ctf_dynhash_create>
     374:	ldur	x8, [x29, #-16]
     378:	str	x0, [x8, #648]
     37c:	ldur	x8, [x29, #-16]
     380:	ldr	x8, [x8, #648]
     384:	cbnz	x8, 38c <ctf_link_add_ctf+0x88>
     388:	b	3cc <ctf_link_add_ctf+0xc8>
     38c:	ldr	x0, [sp, #16]
     390:	bl	0 <strdup>
     394:	str	x0, [sp, #8]
     398:	cbnz	x0, 3a0 <ctf_link_add_ctf+0x9c>
     39c:	b	3cc <ctf_link_add_ctf+0xc8>
     3a0:	ldur	x8, [x29, #-16]
     3a4:	ldr	x0, [x8, #648]
     3a8:	ldr	x1, [sp, #8]
     3ac:	ldr	x2, [sp, #24]
     3b0:	bl	0 <ctf_dynhash_insert>
     3b4:	cmp	w0, #0x0
     3b8:	cset	w9, ge  // ge = tcont
     3bc:	tbnz	w9, #0, 3c4 <ctf_link_add_ctf+0xc0>
     3c0:	b	3cc <ctf_link_add_ctf+0xc8>
     3c4:	stur	wzr, [x29, #-4]
     3c8:	b	3fc <ctf_link_add_ctf+0xf8>
     3cc:	ldur	x8, [x29, #-16]
     3d0:	ldr	x0, [x8, #648]
     3d4:	bl	0 <free>
     3d8:	ldur	x8, [x29, #-16]
     3dc:	mov	x9, xzr
     3e0:	str	x9, [x8, #648]
     3e4:	ldr	x0, [sp, #8]
     3e8:	bl	0 <free>
     3ec:	ldur	x0, [x29, #-16]
     3f0:	mov	w1, #0xc                   	// #12
     3f4:	bl	0 <ctf_set_errno>
     3f8:	stur	w0, [x29, #-4]
     3fc:	ldur	w0, [x29, #-4]
     400:	ldp	x29, x30, [sp, #48]
     404:	add	sp, sp, #0x40
     408:	ret

000000000000040c <ctf_arc_close_thunk>:
     40c:	sub	sp, sp, #0x20
     410:	stp	x29, x30, [sp, #16]
     414:	add	x29, sp, #0x10
     418:	str	x0, [sp, #8]
     41c:	ldr	x0, [sp, #8]
     420:	bl	0 <ctf_arc_close>
     424:	ldp	x29, x30, [sp, #16]
     428:	add	sp, sp, #0x20
     42c:	ret

0000000000000430 <ctf_link_add_cu_mapping>:
     430:	sub	sp, sp, #0x60
     434:	stp	x29, x30, [sp, #80]
     438:	add	x29, sp, #0x50
     43c:	adrp	x8, 0 <free>
     440:	add	x8, x8, #0x0
     444:	stur	x0, [x29, #-16]
     448:	stur	x1, [x29, #-24]
     44c:	stur	x2, [x29, #-32]
     450:	ldur	x9, [x29, #-16]
     454:	ldr	x9, [x9, #672]
     458:	str	x8, [sp, #16]
     45c:	cbnz	x9, 484 <ctf_link_add_cu_mapping+0x54>
     460:	adrp	x0, 0 <ctf_hash_string>
     464:	add	x0, x0, #0x0
     468:	adrp	x1, 0 <ctf_hash_eq_string>
     46c:	add	x1, x1, #0x0
     470:	ldr	x2, [sp, #16]
     474:	ldr	x3, [sp, #16]
     478:	bl	0 <ctf_dynhash_create>
     47c:	ldur	x8, [x29, #-16]
     480:	str	x0, [x8, #672]
     484:	ldur	x8, [x29, #-16]
     488:	ldr	x8, [x8, #672]
     48c:	cbnz	x8, 4a4 <ctf_link_add_cu_mapping+0x74>
     490:	ldur	x0, [x29, #-16]
     494:	mov	w1, #0xc                   	// #12
     498:	bl	0 <ctf_set_errno>
     49c:	stur	w0, [x29, #-4]
     4a0:	b	5a4 <ctf_link_add_cu_mapping+0x174>
     4a4:	ldur	x8, [x29, #-16]
     4a8:	ldr	x8, [x8, #656]
     4ac:	cbnz	x8, 4d8 <ctf_link_add_cu_mapping+0xa8>
     4b0:	adrp	x0, 0 <ctf_hash_string>
     4b4:	add	x0, x0, #0x0
     4b8:	adrp	x1, 0 <ctf_hash_eq_string>
     4bc:	add	x1, x1, #0x0
     4c0:	ldr	x2, [sp, #16]
     4c4:	adrp	x3, 0 <ctf_add_type_mapping>
     4c8:	add	x3, x3, #0x0
     4cc:	bl	0 <ctf_dynhash_create>
     4d0:	ldur	x8, [x29, #-16]
     4d4:	str	x0, [x8, #656]
     4d8:	ldur	x8, [x29, #-16]
     4dc:	ldr	x8, [x8, #656]
     4e0:	cbnz	x8, 4f8 <ctf_link_add_cu_mapping+0xc8>
     4e4:	ldur	x0, [x29, #-16]
     4e8:	mov	w1, #0xc                   	// #12
     4ec:	bl	0 <ctf_set_errno>
     4f0:	stur	w0, [x29, #-4]
     4f4:	b	5a4 <ctf_link_add_cu_mapping+0x174>
     4f8:	ldur	x0, [x29, #-24]
     4fc:	bl	0 <strdup>
     500:	str	x0, [sp, #32]
     504:	ldur	x0, [x29, #-32]
     508:	bl	0 <strdup>
     50c:	str	x0, [sp, #24]
     510:	ldr	x8, [sp, #32]
     514:	cbz	x8, 520 <ctf_link_add_cu_mapping+0xf0>
     518:	ldr	x8, [sp, #24]
     51c:	cbnz	x8, 524 <ctf_link_add_cu_mapping+0xf4>
     520:	b	574 <ctf_link_add_cu_mapping+0x144>
     524:	ldur	x0, [x29, #-16]
     528:	ldr	x1, [sp, #24]
     52c:	ldr	x2, [sp, #24]
     530:	bl	5d8 <ctf_create_per_cu>
     534:	cbnz	x0, 53c <ctf_link_add_cu_mapping+0x10c>
     538:	b	58c <ctf_link_add_cu_mapping+0x15c>
     53c:	ldur	x8, [x29, #-16]
     540:	ldr	x0, [x8, #672]
     544:	ldr	x1, [sp, #32]
     548:	ldr	x2, [sp, #24]
     54c:	bl	0 <ctf_dynhash_insert>
     550:	stur	w0, [x29, #-36]
     554:	ldur	w9, [x29, #-36]
     558:	cbz	w9, 56c <ctf_link_add_cu_mapping+0x13c>
     55c:	ldur	x0, [x29, #-16]
     560:	ldur	w1, [x29, #-36]
     564:	bl	0 <ctf_set_errno>
     568:	b	58c <ctf_link_add_cu_mapping+0x15c>
     56c:	stur	wzr, [x29, #-4]
     570:	b	5a4 <ctf_link_add_cu_mapping+0x174>
     574:	ldur	x0, [x29, #-16]
     578:	str	x0, [sp, #8]
     57c:	bl	0 <__errno_location>
     580:	ldr	w1, [x0]
     584:	ldr	x0, [sp, #8]
     588:	bl	0 <ctf_set_errno>
     58c:	ldr	x0, [sp, #32]
     590:	bl	0 <free>
     594:	ldr	x0, [sp, #24]
     598:	bl	0 <free>
     59c:	mov	w8, #0xffffffff            	// #-1
     5a0:	stur	w8, [x29, #-4]
     5a4:	ldur	w0, [x29, #-4]
     5a8:	ldp	x29, x30, [sp, #80]
     5ac:	add	sp, sp, #0x60
     5b0:	ret

00000000000005b4 <ctf_file_close_thunk>:
     5b4:	sub	sp, sp, #0x20
     5b8:	stp	x29, x30, [sp, #16]
     5bc:	add	x29, sp, #0x10
     5c0:	str	x0, [sp, #8]
     5c4:	ldr	x0, [sp, #8]
     5c8:	bl	0 <ctf_file_close>
     5cc:	ldp	x29, x30, [sp, #16]
     5d0:	add	sp, sp, #0x20
     5d4:	ret

00000000000005d8 <ctf_create_per_cu>:
     5d8:	sub	sp, sp, #0x70
     5dc:	stp	x29, x30, [sp, #96]
     5e0:	add	x29, sp, #0x60
     5e4:	mov	x8, xzr
     5e8:	stur	x0, [x29, #-16]
     5ec:	stur	x1, [x29, #-24]
     5f0:	stur	x2, [x29, #-32]
     5f4:	str	x8, [sp, #48]
     5f8:	str	x8, [sp, #40]
     5fc:	ldur	x8, [x29, #-16]
     600:	ldr	x8, [x8, #672]
     604:	cbz	x8, 640 <ctf_create_per_cu+0x68>
     608:	ldur	x8, [x29, #-16]
     60c:	ldr	x0, [x8, #672]
     610:	ldur	x1, [x29, #-24]
     614:	bl	0 <ctf_dynhash_lookup>
     618:	str	x0, [sp, #48]
     61c:	cbnz	x0, 640 <ctf_create_per_cu+0x68>
     620:	ldur	x8, [x29, #-16]
     624:	ldr	x0, [x8, #672]
     628:	ldur	x1, [x29, #-32]
     62c:	bl	0 <ctf_dynhash_lookup>
     630:	str	x0, [sp, #48]
     634:	cbnz	x0, 640 <ctf_create_per_cu+0x68>
     638:	ldur	x8, [x29, #-24]
     63c:	str	x8, [sp, #48]
     640:	ldr	x8, [sp, #48]
     644:	cbnz	x8, 650 <ctf_create_per_cu+0x78>
     648:	ldur	x8, [x29, #-24]
     64c:	str	x8, [sp, #48]
     650:	ldur	x8, [x29, #-16]
     654:	ldr	x0, [x8, #656]
     658:	ldr	x1, [sp, #48]
     65c:	bl	0 <ctf_dynhash_lookup>
     660:	stur	x0, [x29, #-40]
     664:	cbnz	x0, 730 <ctf_create_per_cu+0x158>
     668:	add	x0, sp, #0x24
     66c:	bl	0 <ctf_create>
     670:	stur	x0, [x29, #-40]
     674:	cbnz	x0, 6c8 <ctf_create_per_cu+0xf0>
     678:	ldur	x1, [x29, #-32]
     67c:	ldur	x2, [x29, #-24]
     680:	ldr	w0, [sp, #36]
     684:	str	x1, [sp, #24]
     688:	str	x2, [sp, #16]
     68c:	bl	0 <ctf_errmsg>
     690:	adrp	x8, 0 <ctf_add_type_mapping>
     694:	add	x8, x8, #0x0
     698:	str	x0, [sp, #8]
     69c:	mov	x0, x8
     6a0:	ldr	x1, [sp, #24]
     6a4:	ldr	x2, [sp, #16]
     6a8:	ldr	x3, [sp, #8]
     6ac:	bl	0 <ctf_dprintf>
     6b0:	ldur	x0, [x29, #-16]
     6b4:	ldr	w1, [sp, #36]
     6b8:	bl	0 <ctf_set_errno>
     6bc:	mov	x8, xzr
     6c0:	stur	x8, [x29, #-8]
     6c4:	b	760 <ctf_create_per_cu+0x188>
     6c8:	ldr	x0, [sp, #48]
     6cc:	bl	0 <strdup>
     6d0:	str	x0, [sp, #40]
     6d4:	cbnz	x0, 6dc <ctf_create_per_cu+0x104>
     6d8:	b	73c <ctf_create_per_cu+0x164>
     6dc:	ldur	x8, [x29, #-16]
     6e0:	ldr	x0, [x8, #656]
     6e4:	ldr	x1, [sp, #40]
     6e8:	ldur	x2, [x29, #-40]
     6ec:	bl	0 <ctf_dynhash_insert>
     6f0:	cmp	w0, #0x0
     6f4:	cset	w9, ge  // ge = tcont
     6f8:	tbnz	w9, #0, 700 <ctf_create_per_cu+0x128>
     6fc:	b	73c <ctf_create_per_cu+0x164>
     700:	ldur	x0, [x29, #-40]
     704:	ldur	x1, [x29, #-16]
     708:	bl	0 <ctf_import>
     70c:	ldur	x8, [x29, #-40]
     710:	ldur	x1, [x29, #-32]
     714:	mov	x0, x8
     718:	bl	0 <ctf_cuname_set>
     71c:	ldur	x8, [x29, #-40]
     720:	mov	x0, x8
     724:	adrp	x1, 0 <_CTF_SECTION>
     728:	add	x1, x1, #0x0
     72c:	bl	0 <ctf_parent_name_set>
     730:	ldur	x8, [x29, #-40]
     734:	stur	x8, [x29, #-8]
     738:	b	760 <ctf_create_per_cu+0x188>
     73c:	ldr	x0, [sp, #40]
     740:	bl	0 <free>
     744:	ldur	x0, [x29, #-40]
     748:	bl	0 <ctf_file_close>
     74c:	ldur	x0, [x29, #-16]
     750:	mov	w1, #0xc                   	// #12
     754:	bl	0 <ctf_set_errno>
     758:	mov	x8, xzr
     75c:	stur	x8, [x29, #-8]
     760:	ldur	x0, [x29, #-8]
     764:	ldp	x29, x30, [sp, #96]
     768:	add	sp, sp, #0x70
     76c:	ret

0000000000000770 <ctf_link_set_memb_name_changer>:
     770:	sub	sp, sp, #0x20
     774:	str	x0, [sp, #24]
     778:	str	x1, [sp, #16]
     77c:	str	x2, [sp, #8]
     780:	ldr	x8, [sp, #16]
     784:	ldr	x9, [sp, #24]
     788:	str	x8, [x9, #680]
     78c:	ldr	x8, [sp, #8]
     790:	ldr	x9, [sp, #24]
     794:	str	x8, [x9, #688]
     798:	add	sp, sp, #0x20
     79c:	ret

00000000000007a0 <ctf_link>:
     7a0:	sub	sp, sp, #0x70
     7a4:	stp	x29, x30, [sp, #96]
     7a8:	add	x29, sp, #0x60
     7ac:	mov	x2, #0x40                  	// #64
     7b0:	mov	w8, wzr
     7b4:	add	x9, sp, #0x8
     7b8:	stur	x0, [x29, #-16]
     7bc:	stur	w1, [x29, #-20]
     7c0:	mov	x0, x9
     7c4:	mov	w1, w8
     7c8:	bl	0 <memset>
     7cc:	ldur	x9, [x29, #-16]
     7d0:	str	x9, [sp, #8]
     7d4:	ldur	w8, [x29, #-20]
     7d8:	str	w8, [sp, #60]
     7dc:	ldur	x9, [x29, #-16]
     7e0:	ldr	x9, [x9, #648]
     7e4:	cbnz	x9, 7f0 <ctf_link+0x50>
     7e8:	stur	wzr, [x29, #-4]
     7ec:	b	87c <ctf_link+0xdc>
     7f0:	ldur	x8, [x29, #-16]
     7f4:	ldr	x8, [x8, #656]
     7f8:	cbnz	x8, 828 <ctf_link+0x88>
     7fc:	adrp	x0, 0 <ctf_hash_string>
     800:	add	x0, x0, #0x0
     804:	adrp	x1, 0 <ctf_hash_eq_string>
     808:	add	x1, x1, #0x0
     80c:	adrp	x2, 0 <free>
     810:	add	x2, x2, #0x0
     814:	adrp	x3, 0 <ctf_add_type_mapping>
     818:	add	x3, x3, #0x0
     81c:	bl	0 <ctf_dynhash_create>
     820:	ldur	x8, [x29, #-16]
     824:	str	x0, [x8, #656]
     828:	ldur	x8, [x29, #-16]
     82c:	ldr	x8, [x8, #656]
     830:	cbnz	x8, 848 <ctf_link+0xa8>
     834:	ldur	x0, [x29, #-16]
     838:	mov	w1, #0xc                   	// #12
     83c:	bl	0 <ctf_set_errno>
     840:	stur	w0, [x29, #-4]
     844:	b	87c <ctf_link+0xdc>
     848:	ldur	x8, [x29, #-16]
     84c:	ldr	x0, [x8, #648]
     850:	adrp	x1, 0 <ctf_add_type_mapping>
     854:	add	x1, x1, #0x0
     858:	add	x2, sp, #0x8
     85c:	bl	0 <ctf_dynhash_iter>
     860:	ldur	x0, [x29, #-16]
     864:	bl	0 <ctf_errno>
     868:	cbz	w0, 878 <ctf_link+0xd8>
     86c:	mov	w8, #0xffffffff            	// #-1
     870:	stur	w8, [x29, #-4]
     874:	b	87c <ctf_link+0xdc>
     878:	stur	wzr, [x29, #-4]
     87c:	ldur	w0, [x29, #-4]
     880:	ldp	x29, x30, [sp, #96]
     884:	add	sp, sp, #0x70
     888:	ret

000000000000088c <ctf_link_one_input_archive>:
     88c:	sub	sp, sp, #0x70
     890:	stp	x29, x30, [sp, #96]
     894:	add	x29, sp, #0x60
     898:	mov	x8, xzr
     89c:	add	x9, sp, #0x2c
     8a0:	stur	x0, [x29, #-8]
     8a4:	stur	x1, [x29, #-16]
     8a8:	stur	x2, [x29, #-24]
     8ac:	ldur	x10, [x29, #-8]
     8b0:	stur	x10, [x29, #-32]
     8b4:	ldur	x10, [x29, #-16]
     8b8:	stur	x10, [x29, #-40]
     8bc:	ldur	x10, [x29, #-24]
     8c0:	str	x10, [sp, #48]
     8c4:	ldur	x10, [x29, #-32]
     8c8:	ldr	x11, [sp, #48]
     8cc:	str	x10, [x11, #8]
     8d0:	ldr	x10, [sp, #48]
     8d4:	str	wzr, [x10, #48]
     8d8:	ldur	x0, [x29, #-40]
     8dc:	mov	x1, x8
     8e0:	mov	x2, x9
     8e4:	bl	0 <ctf_arc_open_by_name>
     8e8:	ldr	x8, [sp, #48]
     8ec:	str	x0, [x8, #24]
     8f0:	cbnz	x0, 934 <ctf_link_one_input_archive+0xa8>
     8f4:	ldr	w8, [sp, #44]
     8f8:	cmp	w8, #0x415
     8fc:	b.eq	934 <ctf_link_one_input_archive+0xa8>  // b.none
     900:	ldr	x8, [sp, #48]
     904:	ldr	x1, [x8, #8]
     908:	ldr	w0, [sp, #44]
     90c:	str	x1, [sp, #32]
     910:	bl	0 <ctf_errmsg>
     914:	adrp	x8, 0 <ctf_add_type_mapping>
     918:	add	x8, x8, #0x0
     91c:	str	x0, [sp, #24]
     920:	mov	x0, x8
     924:	ldr	x1, [sp, #32]
     928:	ldr	x2, [sp, #24]
     92c:	bl	0 <ctf_dprintf>
     930:	b	a30 <ctf_link_one_input_archive+0x1a4>
     934:	ldr	x8, [sp, #48]
     938:	ldr	x0, [x8, #24]
     93c:	ldr	x2, [sp, #48]
     940:	adrp	x1, 0 <_CTF_SECTION>
     944:	add	x1, x1, #0x0
     948:	bl	128c <ctf_link_one_input_archive_member>
     94c:	cmp	w0, #0x0
     950:	cset	w9, ge  // ge = tcont
     954:	tbnz	w9, #0, 968 <ctf_link_one_input_archive+0xdc>
     958:	ldr	x8, [sp, #48]
     95c:	ldr	x0, [x8, #24]
     960:	bl	0 <ctf_file_close>
     964:	b	a30 <ctf_link_one_input_archive+0x1a4>
     968:	ldr	x8, [sp, #48]
     96c:	mov	w9, #0x1                   	// #1
     970:	str	w9, [x8, #48]
     974:	ldur	x0, [x29, #-40]
     978:	ldr	x2, [sp, #48]
     97c:	adrp	x1, 0 <ctf_add_type_mapping>
     980:	add	x1, x1, #0x0
     984:	bl	0 <ctf_archive_iter>
     988:	cmp	w0, #0x0
     98c:	cset	w9, ge  // ge = tcont
     990:	tbnz	w9, #0, 9d0 <ctf_link_one_input_archive+0x144>
     994:	ldr	x8, [sp, #48]
     998:	ldr	x1, [x8, #8]
     99c:	ldr	x8, [sp, #48]
     9a0:	ldr	x0, [x8]
     9a4:	str	x1, [sp, #16]
     9a8:	bl	0 <ctf_errno>
     9ac:	bl	0 <ctf_errmsg>
     9b0:	adrp	x8, 0 <ctf_add_type_mapping>
     9b4:	add	x8, x8, #0x0
     9b8:	str	x0, [sp, #8]
     9bc:	mov	x0, x8
     9c0:	ldr	x1, [sp, #16]
     9c4:	ldr	x2, [sp, #8]
     9c8:	bl	0 <ctf_dprintf>
     9cc:	b	9e4 <ctf_link_one_input_archive+0x158>
     9d0:	ldr	x8, [sp, #48]
     9d4:	ldr	x0, [x8]
     9d8:	mov	w9, wzr
     9dc:	mov	w1, w9
     9e0:	bl	0 <ctf_set_errno>
     9e4:	ldr	x8, [sp, #48]
     9e8:	ldr	x0, [x8, #24]
     9ec:	bl	0 <ctf_file_close>
     9f0:	ldr	x8, [sp, #48]
     9f4:	ldr	x8, [x8]
     9f8:	ldr	x8, [x8, #664]
     9fc:	cbz	x8, a10 <ctf_link_one_input_archive+0x184>
     a00:	ldr	x8, [sp, #48]
     a04:	ldr	x8, [x8]
     a08:	ldr	x0, [x8, #664]
     a0c:	bl	0 <ctf_dynhash_empty>
     a10:	ldr	x8, [sp, #48]
     a14:	ldr	x8, [x8]
     a18:	ldr	x0, [x8, #656]
     a1c:	adrp	x1, 0 <ctf_add_type_mapping>
     a20:	add	x1, x1, #0x0
     a24:	mov	x8, xzr
     a28:	mov	x2, x8
     a2c:	bl	0 <ctf_dynhash_iter>
     a30:	ldp	x29, x30, [sp, #96]
     a34:	add	sp, sp, #0x70
     a38:	ret

0000000000000a3c <ctf_link_add_strtab>:
     a3c:	sub	sp, sp, #0x50
     a40:	stp	x29, x30, [sp, #64]
     a44:	add	x29, sp, #0x40
     a48:	stur	x0, [x29, #-8]
     a4c:	stur	x1, [x29, #-16]
     a50:	stur	x2, [x29, #-24]
     a54:	str	wzr, [sp, #24]
     a58:	ldur	x8, [x29, #-16]
     a5c:	ldur	x1, [x29, #-24]
     a60:	add	x0, sp, #0x1c
     a64:	blr	x8
     a68:	str	x0, [sp, #32]
     a6c:	cbz	x0, adc <ctf_link_add_strtab+0xa0>
     a70:	ldr	x8, [sp, #32]
     a74:	str	x8, [sp, #8]
     a78:	ldr	w9, [sp, #28]
     a7c:	str	w9, [sp, #16]
     a80:	str	wzr, [sp, #20]
     a84:	ldur	x8, [x29, #-8]
     a88:	ldr	w9, [x8, #552]
     a8c:	orr	w9, w9, #0x4
     a90:	str	w9, [x8, #552]
     a94:	ldur	x0, [x29, #-8]
     a98:	ldr	x1, [sp, #32]
     a9c:	ldr	w2, [sp, #28]
     aa0:	bl	0 <ctf_str_add_external>
     aa4:	cbnz	w0, ab0 <ctf_link_add_strtab+0x74>
     aa8:	mov	w8, #0xc                   	// #12
     aac:	str	w8, [sp, #24]
     ab0:	ldur	x8, [x29, #-8]
     ab4:	ldr	x0, [x8, #656]
     ab8:	adrp	x1, 0 <ctf_add_type_mapping>
     abc:	add	x1, x1, #0x0
     ac0:	add	x2, sp, #0x8
     ac4:	bl	0 <ctf_dynhash_iter>
     ac8:	ldr	w9, [sp, #20]
     acc:	cbz	w9, ad8 <ctf_link_add_strtab+0x9c>
     ad0:	ldr	w8, [sp, #20]
     ad4:	str	w8, [sp, #24]
     ad8:	b	a58 <ctf_link_add_strtab+0x1c>
     adc:	ldr	w8, [sp, #24]
     ae0:	mov	w9, wzr
     ae4:	subs	w0, w9, w8
     ae8:	ldp	x29, x30, [sp, #64]
     aec:	add	sp, sp, #0x50
     af0:	ret

0000000000000af4 <ctf_link_intern_extern_string>:
     af4:	sub	sp, sp, #0x40
     af8:	stp	x29, x30, [sp, #48]
     afc:	add	x29, sp, #0x30
     b00:	stur	x0, [x29, #-8]
     b04:	stur	x1, [x29, #-16]
     b08:	str	x2, [sp, #24]
     b0c:	ldur	x8, [x29, #-16]
     b10:	str	x8, [sp, #16]
     b14:	ldr	x8, [sp, #24]
     b18:	str	x8, [sp, #8]
     b1c:	ldr	x8, [sp, #16]
     b20:	ldr	w9, [x8, #552]
     b24:	orr	w9, w9, #0x4
     b28:	str	w9, [x8, #552]
     b2c:	ldr	x0, [sp, #16]
     b30:	ldr	x8, [sp, #8]
     b34:	ldr	x1, [x8]
     b38:	ldr	x8, [sp, #8]
     b3c:	ldr	w2, [x8, #8]
     b40:	bl	0 <ctf_str_add_external>
     b44:	cbnz	w0, b54 <ctf_link_intern_extern_string+0x60>
     b48:	ldr	x8, [sp, #8]
     b4c:	mov	w9, #0xc                   	// #12
     b50:	str	w9, [x8, #12]
     b54:	ldp	x29, x30, [sp, #48]
     b58:	add	sp, sp, #0x40
     b5c:	ret

0000000000000b60 <ctf_link_shuffle_syms>:
     b60:	sub	sp, sp, #0x20
     b64:	mov	w8, wzr
     b68:	str	x0, [sp, #24]
     b6c:	str	x1, [sp, #16]
     b70:	str	x2, [sp, #8]
     b74:	mov	w0, w8
     b78:	add	sp, sp, #0x20
     b7c:	ret

0000000000000b80 <ctf_link_write>:
     b80:	sub	sp, sp, #0x100
     b84:	stp	x29, x30, [sp, #240]
     b88:	add	x29, sp, #0xf0
     b8c:	mov	x8, xzr
     b90:	mov	x9, #0x30                  	// #48
     b94:	mov	w10, wzr
     b98:	sub	x11, x29, #0x50
     b9c:	stur	x0, [x29, #-16]
     ba0:	stur	x1, [x29, #-24]
     ba4:	stur	x2, [x29, #-32]
     ba8:	stur	x8, [x29, #-96]
     bac:	stur	x8, [x29, #-112]
     bb0:	str	x8, [sp, #96]
     bb4:	mov	x0, x11
     bb8:	mov	w1, w10
     bbc:	mov	x2, x9
     bc0:	str	x11, [sp, #64]
     bc4:	bl	0 <memset>
     bc8:	ldur	x8, [x29, #-16]
     bcc:	ldr	x9, [sp, #64]
     bd0:	str	x8, [x9, #8]
     bd4:	ldur	x8, [x29, #-16]
     bd8:	ldr	x8, [x8, #656]
     bdc:	cbz	x8, c1c <ctf_link_write+0x9c>
     be0:	ldur	x8, [x29, #-16]
     be4:	ldr	x0, [x8, #656]
     be8:	adrp	x1, 0 <ctf_add_type_mapping>
     bec:	add	x1, x1, #0x0
     bf0:	sub	x2, x29, #0x50
     bf4:	bl	0 <ctf_dynhash_iter>
     bf8:	ldur	x0, [x29, #-16]
     bfc:	bl	0 <ctf_errno>
     c00:	cmp	w0, #0x0
     c04:	cset	w9, ge  // ge = tcont
     c08:	tbnz	w9, #0, c1c <ctf_link_write+0x9c>
     c0c:	adrp	x8, 0 <ctf_add_type_mapping>
     c10:	add	x8, x8, #0x0
     c14:	str	x8, [sp, #104]
     c18:	b	f98 <ctf_link_write+0x418>
     c1c:	ldur	x8, [x29, #-56]
     c20:	cbnz	x8, c3c <ctf_link_write+0xbc>
     c24:	ldur	x0, [x29, #-16]
     c28:	ldur	x1, [x29, #-24]
     c2c:	ldur	x2, [x29, #-32]
     c30:	bl	0 <ctf_write_mem>
     c34:	stur	x0, [x29, #-8]
     c38:	b	1064 <ctf_link_write+0x4e4>
     c3c:	ldur	x0, [x29, #-80]
     c40:	ldur	x8, [x29, #-56]
     c44:	add	x8, x8, #0x1
     c48:	mov	x9, #0x8                   	// #8
     c4c:	mul	x1, x9, x8
     c50:	bl	0 <realloc>
     c54:	stur	x0, [x29, #-88]
     c58:	cbnz	x0, c6c <ctf_link_write+0xec>
     c5c:	adrp	x8, 0 <ctf_add_type_mapping>
     c60:	add	x8, x8, #0x0
     c64:	str	x8, [sp, #104]
     c68:	b	f80 <ctf_link_write+0x400>
     c6c:	ldur	x8, [x29, #-88]
     c70:	stur	x8, [x29, #-80]
     c74:	ldur	x8, [x29, #-80]
     c78:	add	x0, x8, #0x8
     c7c:	ldur	x1, [x29, #-80]
     c80:	ldur	x8, [x29, #-56]
     c84:	mov	x9, #0x8                   	// #8
     c88:	mul	x2, x9, x8
     c8c:	bl	0 <memmove>
     c90:	ldur	x8, [x29, #-80]
     c94:	adrp	x9, 0 <_CTF_SECTION>
     c98:	add	x9, x9, #0x0
     c9c:	str	x9, [x8]
     ca0:	ldur	x8, [x29, #-16]
     ca4:	ldr	x8, [x8, #680]
     ca8:	cbz	x8, d04 <ctf_link_write+0x184>
     cac:	ldur	x8, [x29, #-16]
     cb0:	ldr	x8, [x8, #688]
     cb4:	str	x8, [sp, #88]
     cb8:	ldur	x8, [x29, #-16]
     cbc:	ldr	x8, [x8, #680]
     cc0:	ldur	x0, [x29, #-16]
     cc4:	ldr	x2, [sp, #88]
     cc8:	adrp	x1, 0 <_CTF_SECTION>
     ccc:	add	x1, x1, #0x0
     cd0:	blr	x8
     cd4:	stur	x0, [x29, #-96]
     cd8:	ldur	x8, [x29, #-96]
     cdc:	cbz	x8, d04 <ctf_link_write+0x184>
     ce0:	ldur	x8, [x29, #-96]
     ce4:	ldur	x9, [x29, #-80]
     ce8:	str	x8, [x9]
     cec:	ldur	x8, [x29, #-16]
     cf0:	ldr	x0, [x8, #656]
     cf4:	ldur	x2, [x29, #-96]
     cf8:	adrp	x1, 0 <ctf_add_type_mapping>
     cfc:	add	x1, x1, #0x0
     d00:	bl	0 <ctf_dynhash_iter>
     d04:	sub	x8, x29, #0x50
     d08:	ldr	x0, [x8, #16]
     d0c:	ldur	x8, [x29, #-56]
     d10:	add	x8, x8, #0x1
     d14:	mov	x9, #0x8                   	// #8
     d18:	mul	x1, x9, x8
     d1c:	bl	0 <realloc>
     d20:	stur	x0, [x29, #-104]
     d24:	cbnz	x0, d38 <ctf_link_write+0x1b8>
     d28:	adrp	x8, 0 <ctf_add_type_mapping>
     d2c:	add	x8, x8, #0x0
     d30:	str	x8, [sp, #104]
     d34:	b	f80 <ctf_link_write+0x400>
     d38:	ldur	x8, [x29, #-104]
     d3c:	sub	x9, x29, #0x50
     d40:	str	x8, [x9, #16]
     d44:	ldr	x8, [x9, #16]
     d48:	add	x0, x8, #0x8
     d4c:	ldr	x1, [x9, #16]
     d50:	ldur	x8, [x29, #-56]
     d54:	mov	x10, #0x8                   	// #8
     d58:	mul	x2, x10, x8
     d5c:	str	x9, [sp, #56]
     d60:	bl	0 <memmove>
     d64:	ldur	x8, [x29, #-16]
     d68:	ldr	x9, [sp, #56]
     d6c:	ldr	x10, [x9, #16]
     d70:	str	x8, [x10]
     d74:	bl	0 <tmpfile>
     d78:	stur	x0, [x29, #-112]
     d7c:	cbnz	x0, d90 <ctf_link_write+0x210>
     d80:	adrp	x8, 0 <ctf_add_type_mapping>
     d84:	add	x8, x8, #0x0
     d88:	str	x8, [sp, #104]
     d8c:	b	f80 <ctf_link_write+0x400>
     d90:	ldur	x0, [x29, #-112]
     d94:	bl	0 <fileno>
     d98:	sub	x8, x29, #0x50
     d9c:	ldr	x1, [x8, #16]
     da0:	ldur	x8, [x29, #-56]
     da4:	add	x2, x8, #0x1
     da8:	ldur	x3, [x29, #-80]
     dac:	ldur	x4, [x29, #-32]
     db0:	bl	0 <ctf_arc_write_fd>
     db4:	stur	w0, [x29, #-116]
     db8:	cmp	w0, #0x0
     dbc:	cset	w9, ge  // ge = tcont
     dc0:	tbnz	w9, #0, de0 <ctf_link_write+0x260>
     dc4:	adrp	x8, 0 <ctf_add_type_mapping>
     dc8:	add	x8, x8, #0x0
     dcc:	str	x8, [sp, #104]
     dd0:	ldur	x0, [x29, #-16]
     dd4:	ldur	w1, [x29, #-116]
     dd8:	bl	0 <ctf_set_errno>
     ddc:	b	f98 <ctf_link_write+0x418>
     de0:	ldur	x0, [x29, #-112]
     de4:	mov	x8, xzr
     de8:	mov	x1, x8
     dec:	mov	w2, #0x2                   	// #2
     df0:	bl	0 <fseek>
     df4:	cmp	w0, #0x0
     df8:	cset	w9, ge  // ge = tcont
     dfc:	tbnz	w9, #0, e10 <ctf_link_write+0x290>
     e00:	adrp	x8, 0 <ctf_add_type_mapping>
     e04:	add	x8, x8, #0x0
     e08:	str	x8, [sp, #104]
     e0c:	b	f80 <ctf_link_write+0x400>
     e10:	ldur	x0, [x29, #-112]
     e14:	bl	0 <ftell>
     e18:	str	x0, [sp, #112]
     e1c:	cmp	x0, #0x0
     e20:	cset	w8, ge  // ge = tcont
     e24:	tbnz	w8, #0, e38 <ctf_link_write+0x2b8>
     e28:	adrp	x8, 0 <ctf_add_type_mapping>
     e2c:	add	x8, x8, #0x0
     e30:	str	x8, [sp, #104]
     e34:	b	f80 <ctf_link_write+0x400>
     e38:	ldur	x0, [x29, #-112]
     e3c:	mov	x8, xzr
     e40:	mov	x1, x8
     e44:	mov	w9, wzr
     e48:	mov	w2, w9
     e4c:	bl	0 <fseek>
     e50:	cmp	w0, #0x0
     e54:	cset	w9, ge  // ge = tcont
     e58:	tbnz	w9, #0, e6c <ctf_link_write+0x2ec>
     e5c:	adrp	x8, 0 <ctf_add_type_mapping>
     e60:	add	x8, x8, #0x0
     e64:	str	x8, [sp, #104]
     e68:	b	f80 <ctf_link_write+0x400>
     e6c:	ldr	x0, [sp, #112]
     e70:	bl	0 <malloc>
     e74:	str	x0, [sp, #96]
     e78:	cbnz	x0, e8c <ctf_link_write+0x30c>
     e7c:	adrp	x8, 0 <ctf_add_type_mapping>
     e80:	add	x8, x8, #0x0
     e84:	str	x8, [sp, #104]
     e88:	b	f80 <ctf_link_write+0x400>
     e8c:	ldur	x0, [x29, #-112]
     e90:	bl	0 <feof>
     e94:	mov	w8, #0x0                   	// #0
     e98:	str	w8, [sp, #52]
     e9c:	cbnz	w0, ec0 <ctf_link_write+0x340>
     ea0:	ldr	x0, [sp, #96]
     ea4:	ldr	x1, [sp, #112]
     ea8:	ldur	x3, [x29, #-112]
     eac:	mov	x2, #0x1                   	// #1
     eb0:	bl	0 <fread>
     eb4:	cmp	x0, #0x0
     eb8:	cset	w8, eq  // eq = none
     ebc:	str	w8, [sp, #52]
     ec0:	ldr	w8, [sp, #52]
     ec4:	tbnz	w8, #0, ecc <ctf_link_write+0x34c>
     ec8:	b	eec <ctf_link_write+0x36c>
     ecc:	ldur	x0, [x29, #-112]
     ed0:	bl	0 <ferror>
     ed4:	cbz	w0, ee8 <ctf_link_write+0x368>
     ed8:	adrp	x8, 0 <ctf_add_type_mapping>
     edc:	add	x8, x8, #0x0
     ee0:	str	x8, [sp, #104]
     ee4:	b	f80 <ctf_link_write+0x400>
     ee8:	b	e8c <ctf_link_write+0x30c>
     eec:	ldr	x8, [sp, #112]
     ef0:	ldur	x9, [x29, #-24]
     ef4:	str	x8, [x9]
     ef8:	sub	x8, x29, #0x50
     efc:	ldur	x0, [x29, #-80]
     f00:	str	x8, [sp, #40]
     f04:	bl	0 <free>
     f08:	ldr	x8, [sp, #40]
     f0c:	ldr	x0, [x8, #16]
     f10:	bl	0 <free>
     f14:	ldur	x0, [x29, #-96]
     f18:	bl	0 <free>
     f1c:	ldur	x8, [x29, #-40]
     f20:	cbz	x8, f74 <ctf_link_write+0x3f4>
     f24:	str	xzr, [sp, #80]
     f28:	ldr	x8, [sp, #80]
     f2c:	ldur	x9, [x29, #-40]
     f30:	cmp	x8, x9
     f34:	b.cs	f68 <ctf_link_write+0x3e8>  // b.hs, b.nlast
     f38:	sub	x8, x29, #0x50
     f3c:	ldr	x8, [x8, #32]
     f40:	ldr	x9, [sp, #80]
     f44:	mov	x10, #0x8                   	// #8
     f48:	mul	x9, x10, x9
     f4c:	add	x8, x8, x9
     f50:	ldr	x0, [x8]
     f54:	bl	0 <free>
     f58:	ldr	x8, [sp, #80]
     f5c:	add	x8, x8, #0x1
     f60:	str	x8, [sp, #80]
     f64:	b	f28 <ctf_link_write+0x3a8>
     f68:	sub	x8, x29, #0x50
     f6c:	ldr	x0, [x8, #32]
     f70:	bl	0 <free>
     f74:	ldr	x8, [sp, #96]
     f78:	stur	x8, [x29, #-8]
     f7c:	b	1064 <ctf_link_write+0x4e4>
     f80:	ldur	x0, [x29, #-16]
     f84:	str	x0, [sp, #32]
     f88:	bl	0 <__errno_location>
     f8c:	ldr	w1, [x0]
     f90:	ldr	x0, [sp, #32]
     f94:	bl	0 <ctf_set_errno>
     f98:	ldr	x0, [sp, #96]
     f9c:	bl	0 <free>
     fa0:	ldur	x8, [x29, #-112]
     fa4:	cbz	x8, fb0 <ctf_link_write+0x430>
     fa8:	ldur	x0, [x29, #-112]
     fac:	bl	0 <fclose>
     fb0:	sub	x8, x29, #0x50
     fb4:	ldur	x0, [x29, #-80]
     fb8:	str	x8, [sp, #24]
     fbc:	bl	0 <free>
     fc0:	ldr	x8, [sp, #24]
     fc4:	ldr	x0, [x8, #16]
     fc8:	bl	0 <free>
     fcc:	ldur	x0, [x29, #-96]
     fd0:	bl	0 <free>
     fd4:	ldur	x8, [x29, #-40]
     fd8:	cbz	x8, 102c <ctf_link_write+0x4ac>
     fdc:	str	xzr, [sp, #72]
     fe0:	ldr	x8, [sp, #72]
     fe4:	ldur	x9, [x29, #-40]
     fe8:	cmp	x8, x9
     fec:	b.cs	1020 <ctf_link_write+0x4a0>  // b.hs, b.nlast
     ff0:	sub	x8, x29, #0x50
     ff4:	ldr	x8, [x8, #32]
     ff8:	ldr	x9, [sp, #72]
     ffc:	mov	x10, #0x8                   	// #8
    1000:	mul	x9, x10, x9
    1004:	add	x8, x8, x9
    1008:	ldr	x0, [x8]
    100c:	bl	0 <free>
    1010:	ldr	x8, [sp, #72]
    1014:	add	x8, x8, #0x1
    1018:	str	x8, [sp, #72]
    101c:	b	fe0 <ctf_link_write+0x460>
    1020:	sub	x8, x29, #0x50
    1024:	ldr	x0, [x8, #32]
    1028:	bl	0 <free>
    102c:	ldr	x1, [sp, #104]
    1030:	ldur	x0, [x29, #-16]
    1034:	str	x1, [sp, #16]
    1038:	bl	0 <ctf_errno>
    103c:	bl	0 <ctf_errmsg>
    1040:	adrp	x8, 0 <ctf_add_type_mapping>
    1044:	add	x8, x8, #0x0
    1048:	str	x0, [sp, #8]
    104c:	mov	x0, x8
    1050:	ldr	x1, [sp, #16]
    1054:	ldr	x2, [sp, #8]
    1058:	bl	0 <ctf_dprintf>
    105c:	mov	x8, xzr
    1060:	stur	x8, [x29, #-8]
    1064:	ldur	x0, [x29, #-8]
    1068:	ldp	x29, x30, [sp, #240]
    106c:	add	sp, sp, #0x100
    1070:	ret

0000000000001074 <ctf_accumulate_archive_names>:
    1074:	sub	sp, sp, #0x70
    1078:	stp	x29, x30, [sp, #96]
    107c:	add	x29, sp, #0x60
    1080:	mov	x8, #0x8                   	// #8
    1084:	stur	x0, [x29, #-8]
    1088:	stur	x1, [x29, #-16]
    108c:	stur	x2, [x29, #-24]
    1090:	ldur	x9, [x29, #-8]
    1094:	stur	x9, [x29, #-32]
    1098:	ldur	x9, [x29, #-16]
    109c:	stur	x9, [x29, #-40]
    10a0:	ldur	x9, [x29, #-24]
    10a4:	str	x9, [sp, #32]
    10a8:	ldr	x9, [sp, #32]
    10ac:	ldr	x0, [x9]
    10b0:	ldr	x9, [sp, #32]
    10b4:	ldr	x10, [x9, #24]
    10b8:	add	x10, x10, #0x1
    10bc:	str	x10, [x9, #24]
    10c0:	mul	x1, x8, x10
    10c4:	bl	0 <realloc>
    10c8:	str	x0, [sp, #48]
    10cc:	cbnz	x0, 10f4 <ctf_accumulate_archive_names+0x80>
    10d0:	ldr	x8, [sp, #32]
    10d4:	ldr	x9, [x8, #24]
    10d8:	subs	x9, x9, #0x1
    10dc:	str	x9, [x8, #24]
    10e0:	ldr	x8, [sp, #32]
    10e4:	ldr	x0, [x8, #8]
    10e8:	mov	w1, #0xc                   	// #12
    10ec:	bl	0 <ctf_set_errno>
    10f0:	b	1240 <ctf_accumulate_archive_names+0x1cc>
    10f4:	ldr	x8, [sp, #32]
    10f8:	ldr	x0, [x8, #16]
    10fc:	ldr	x8, [sp, #32]
    1100:	ldr	x8, [x8, #24]
    1104:	mov	x9, #0x8                   	// #8
    1108:	mul	x1, x9, x8
    110c:	bl	0 <realloc>
    1110:	str	x0, [sp, #40]
    1114:	cbnz	x0, 113c <ctf_accumulate_archive_names+0xc8>
    1118:	ldr	x8, [sp, #32]
    111c:	ldr	x9, [x8, #24]
    1120:	subs	x9, x9, #0x1
    1124:	str	x9, [x8, #24]
    1128:	ldr	x8, [sp, #32]
    112c:	ldr	x0, [x8, #8]
    1130:	mov	w1, #0xc                   	// #12
    1134:	bl	0 <ctf_set_errno>
    1138:	b	1240 <ctf_accumulate_archive_names+0x1cc>
    113c:	ldur	x8, [x29, #-40]
    1140:	ldr	x8, [x8, #680]
    1144:	cbz	x8, 11dc <ctf_accumulate_archive_names+0x168>
    1148:	ldur	x8, [x29, #-40]
    114c:	ldr	x8, [x8, #688]
    1150:	str	x8, [sp, #8]
    1154:	ldur	x8, [x29, #-40]
    1158:	ldr	x8, [x8, #680]
    115c:	ldur	x0, [x29, #-40]
    1160:	ldur	x1, [x29, #-32]
    1164:	ldr	x2, [sp, #8]
    1168:	blr	x8
    116c:	str	x0, [sp, #16]
    1170:	ldr	x8, [sp, #16]
    1174:	cbz	x8, 11dc <ctf_accumulate_archive_names+0x168>
    1178:	ldr	x8, [sp, #32]
    117c:	ldr	x0, [x8, #32]
    1180:	ldr	x8, [sp, #32]
    1184:	ldr	x9, [x8, #40]
    1188:	add	x9, x9, #0x1
    118c:	str	x9, [x8, #40]
    1190:	mov	x8, #0x8                   	// #8
    1194:	mul	x1, x8, x9
    1198:	bl	0 <realloc>
    119c:	str	x0, [sp, #24]
    11a0:	cbnz	x0, 11c8 <ctf_accumulate_archive_names+0x154>
    11a4:	ldr	x8, [sp, #32]
    11a8:	ldr	x9, [x8, #40]
    11ac:	subs	x9, x9, #0x1
    11b0:	str	x9, [x8, #40]
    11b4:	ldr	x8, [sp, #32]
    11b8:	ldr	x0, [x8, #8]
    11bc:	mov	w1, #0xc                   	// #12
    11c0:	bl	0 <ctf_set_errno>
    11c4:	b	1240 <ctf_accumulate_archive_names+0x1cc>
    11c8:	ldr	x8, [sp, #24]
    11cc:	ldr	x9, [sp, #32]
    11d0:	str	x8, [x9, #32]
    11d4:	ldr	x8, [sp, #16]
    11d8:	stur	x8, [x29, #-32]
    11dc:	ldr	x8, [sp, #48]
    11e0:	ldr	x9, [sp, #32]
    11e4:	str	x8, [x9]
    11e8:	ldur	x8, [x29, #-32]
    11ec:	ldr	x9, [sp, #32]
    11f0:	ldr	x9, [x9]
    11f4:	ldr	x10, [sp, #32]
    11f8:	ldr	x10, [x10, #24]
    11fc:	subs	x10, x10, #0x1
    1200:	mov	x11, #0x8                   	// #8
    1204:	mul	x10, x11, x10
    1208:	add	x9, x9, x10
    120c:	str	x8, [x9]
    1210:	ldr	x8, [sp, #40]
    1214:	ldr	x9, [sp, #32]
    1218:	str	x8, [x9, #16]
    121c:	ldur	x8, [x29, #-40]
    1220:	ldr	x9, [sp, #32]
    1224:	ldr	x9, [x9, #16]
    1228:	ldr	x10, [sp, #32]
    122c:	ldr	x10, [x10, #24]
    1230:	subs	x10, x10, #0x1
    1234:	mul	x10, x11, x10
    1238:	add	x9, x9, x10
    123c:	str	x8, [x9]
    1240:	ldp	x29, x30, [sp, #96]
    1244:	add	sp, sp, #0x70
    1248:	ret

000000000000124c <ctf_change_parent_name>:
    124c:	sub	sp, sp, #0x40
    1250:	stp	x29, x30, [sp, #48]
    1254:	add	x29, sp, #0x30
    1258:	stur	x0, [x29, #-8]
    125c:	stur	x1, [x29, #-16]
    1260:	str	x2, [sp, #24]
    1264:	ldur	x8, [x29, #-16]
    1268:	str	x8, [sp, #16]
    126c:	ldr	x8, [sp, #24]
    1270:	str	x8, [sp, #8]
    1274:	ldr	x0, [sp, #16]
    1278:	ldr	x1, [sp, #8]
    127c:	bl	0 <ctf_parent_name_set>
    1280:	ldp	x29, x30, [sp, #48]
    1284:	add	sp, sp, #0x40
    1288:	ret

000000000000128c <ctf_link_one_input_archive_member>:
    128c:	sub	sp, sp, #0x50
    1290:	stp	x29, x30, [sp, #64]
    1294:	add	x29, sp, #0x40
    1298:	adrp	x8, 0 <_CTF_SECTION>
    129c:	add	x8, x8, #0x0
    12a0:	stur	x0, [x29, #-16]
    12a4:	stur	x1, [x29, #-24]
    12a8:	str	x2, [sp, #32]
    12ac:	ldr	x9, [sp, #32]
    12b0:	str	x9, [sp, #24]
    12b4:	str	wzr, [sp, #20]
    12b8:	ldur	x0, [x29, #-24]
    12bc:	mov	x1, x8
    12c0:	bl	0 <strcmp>
    12c4:	cbnz	w0, 133c <ctf_link_one_input_archive_member+0xb0>
    12c8:	ldr	x8, [sp, #24]
    12cc:	ldr	w9, [x8, #48]
    12d0:	cbz	w9, 12dc <ctf_link_one_input_archive_member+0x50>
    12d4:	stur	wzr, [x29, #-4]
    12d8:	b	143c <ctf_link_one_input_archive_member+0x1b0>
    12dc:	adrp	x0, 0 <ctf_add_type_mapping>
    12e0:	add	x0, x0, #0x0
    12e4:	bl	0 <strdup>
    12e8:	ldr	x8, [sp, #24]
    12ec:	str	x0, [x8, #40]
    12f0:	ldr	x8, [sp, #24]
    12f4:	ldr	x8, [x8, #40]
    12f8:	cbz	x8, 1338 <ctf_link_one_input_archive_member+0xac>
    12fc:	ldr	x8, [sp, #24]
    1300:	ldr	x0, [x8, #40]
    1304:	ldr	x8, [sp, #24]
    1308:	ldr	x1, [x8, #8]
    130c:	bl	0 <ctf_str_append>
    1310:	str	x0, [sp, #8]
    1314:	ldr	x8, [sp, #8]
    1318:	cbz	x8, 132c <ctf_link_one_input_archive_member+0xa0>
    131c:	ldr	x8, [sp, #8]
    1320:	ldr	x9, [sp, #24]
    1324:	str	x8, [x9, #40]
    1328:	b	1338 <ctf_link_one_input_archive_member+0xac>
    132c:	ldr	x8, [sp, #24]
    1330:	ldr	x0, [x8, #40]
    1334:	bl	0 <free>
    1338:	b	1368 <ctf_link_one_input_archive_member+0xdc>
    133c:	ldur	x0, [x29, #-24]
    1340:	bl	0 <strdup>
    1344:	ldr	x8, [sp, #24]
    1348:	str	x0, [x8, #40]
    134c:	ldur	x0, [x29, #-16]
    1350:	ldr	x8, [sp, #24]
    1354:	ldr	x1, [x8, #24]
    1358:	bl	0 <ctf_import>
    135c:	ldr	x8, [sp, #24]
    1360:	mov	w9, #0x1                   	// #1
    1364:	str	w9, [x8, #56]
    1368:	ldr	x8, [sp, #24]
    136c:	ldr	x8, [x8, #40]
    1370:	cbnz	x8, 1388 <ctf_link_one_input_archive_member+0xfc>
    1374:	ldur	x0, [x29, #-16]
    1378:	mov	w1, #0xc                   	// #12
    137c:	bl	0 <ctf_set_errno>
    1380:	stur	w0, [x29, #-4]
    1384:	b	143c <ctf_link_one_input_archive_member+0x1b0>
    1388:	ldur	x8, [x29, #-24]
    138c:	ldr	x9, [sp, #24]
    1390:	str	x8, [x9, #32]
    1394:	ldr	x8, [sp, #24]
    1398:	ldr	x0, [x8, #32]
    139c:	adrp	x1, 0 <ctf_add_type_mapping>
    13a0:	add	x1, x1, #0x0
    13a4:	mov	x2, #0x5                   	// #5
    13a8:	bl	0 <strncmp>
    13ac:	cbnz	w0, 13c0 <ctf_link_one_input_archive_member+0x134>
    13b0:	ldr	x8, [sp, #24]
    13b4:	ldr	x9, [x8, #32]
    13b8:	add	x9, x9, #0x5
    13bc:	str	x9, [x8, #32]
    13c0:	ldur	x8, [x29, #-16]
    13c4:	ldr	x9, [sp, #24]
    13c8:	str	x8, [x9, #16]
    13cc:	ldur	x0, [x29, #-16]
    13d0:	ldr	x2, [sp, #24]
    13d4:	adrp	x1, 0 <ctf_add_type_mapping>
    13d8:	add	x1, x1, #0x0
    13dc:	bl	0 <ctf_type_iter_all>
    13e0:	str	w0, [sp, #20]
    13e4:	mov	w10, #0xffffffff            	// #-1
    13e8:	cmp	w0, w10
    13ec:	b.le	1408 <ctf_link_one_input_archive_member+0x17c>
    13f0:	ldur	x0, [x29, #-16]
    13f4:	ldr	x2, [sp, #24]
    13f8:	adrp	x1, 0 <ctf_add_type_mapping>
    13fc:	add	x1, x1, #0x0
    1400:	bl	0 <ctf_variable_iter>
    1404:	str	w0, [sp, #20]
    1408:	ldr	x8, [sp, #24]
    140c:	str	wzr, [x8, #56]
    1410:	ldr	x8, [sp, #24]
    1414:	ldr	x0, [x8, #40]
    1418:	bl	0 <free>
    141c:	ldr	w9, [sp, #20]
    1420:	cmp	w9, #0x0
    1424:	cset	w9, ge  // ge = tcont
    1428:	tbnz	w9, #0, 1438 <ctf_link_one_input_archive_member+0x1ac>
    142c:	mov	w8, #0xffffffff            	// #-1
    1430:	stur	w8, [x29, #-4]
    1434:	b	143c <ctf_link_one_input_archive_member+0x1b0>
    1438:	stur	wzr, [x29, #-4]
    143c:	ldur	w0, [x29, #-4]
    1440:	ldp	x29, x30, [sp, #64]
    1444:	add	sp, sp, #0x50
    1448:	ret

000000000000144c <empty_link_type_mapping>:
    144c:	sub	sp, sp, #0x30
    1450:	stp	x29, x30, [sp, #32]
    1454:	add	x29, sp, #0x20
    1458:	stur	x0, [x29, #-8]
    145c:	str	x1, [sp, #16]
    1460:	str	x2, [sp, #8]
    1464:	ldr	x8, [sp, #16]
    1468:	str	x8, [sp]
    146c:	ldr	x8, [sp]
    1470:	ldr	x8, [x8, #664]
    1474:	cbz	x8, 1484 <empty_link_type_mapping+0x38>
    1478:	ldr	x8, [sp]
    147c:	ldr	x0, [x8, #664]
    1480:	bl	0 <ctf_dynhash_empty>
    1484:	ldp	x29, x30, [sp, #32]
    1488:	add	sp, sp, #0x30
    148c:	ret

0000000000001490 <ctf_link_one_type>:
    1490:	sub	sp, sp, #0x90
    1494:	stp	x29, x30, [sp, #128]
    1498:	add	x29, sp, #0x80
    149c:	stur	x0, [x29, #-16]
    14a0:	stur	w1, [x29, #-20]
    14a4:	stur	x2, [x29, #-32]
    14a8:	ldur	x8, [x29, #-32]
    14ac:	stur	x8, [x29, #-40]
    14b0:	ldur	x8, [x29, #-40]
    14b4:	ldr	w9, [x8, #52]
    14b8:	cbz	w9, 14e0 <ctf_link_one_type+0x50>
    14bc:	adrp	x0, 0 <ctf_add_type_mapping>
    14c0:	add	x0, x0, #0x0
    14c4:	bl	0 <ctf_dprintf>
    14c8:	ldur	x8, [x29, #-40]
    14cc:	ldr	x0, [x8]
    14d0:	mov	w1, #0x419                 	// #1049
    14d4:	bl	0 <ctf_set_errno>
    14d8:	stur	w0, [x29, #-4]
    14dc:	b	1698 <ctf_link_one_type+0x208>
    14e0:	ldur	x8, [x29, #-40]
    14e4:	ldr	w9, [x8, #56]
    14e8:	cbnz	w9, 15a8 <ctf_link_one_type+0x118>
    14ec:	ldur	x8, [x29, #-40]
    14f0:	ldr	x0, [x8]
    14f4:	ldur	x8, [x29, #-40]
    14f8:	ldr	x1, [x8, #16]
    14fc:	ldur	x2, [x29, #-16]
    1500:	bl	0 <ctf_add_type>
    1504:	mov	x8, #0xffffffffffffffff    	// #-1
    1508:	cmp	x0, x8
    150c:	b.eq	1518 <ctf_link_one_type+0x88>  // b.none
    1510:	stur	wzr, [x29, #-4]
    1514:	b	1698 <ctf_link_one_type+0x208>
    1518:	ldur	x8, [x29, #-40]
    151c:	ldr	x0, [x8]
    1520:	bl	0 <ctf_errno>
    1524:	stur	w0, [x29, #-52]
    1528:	ldur	w9, [x29, #-52]
    152c:	cmp	w9, #0x411
    1530:	b.eq	1594 <ctf_link_one_type+0x104>  // b.none
    1534:	ldur	w8, [x29, #-52]
    1538:	cmp	w8, #0x41b
    153c:	b.eq	158c <ctf_link_one_type+0xfc>  // b.none
    1540:	ldur	x1, [x29, #-16]
    1544:	ldur	x8, [x29, #-40]
    1548:	ldr	x2, [x8, #40]
    154c:	ldur	x8, [x29, #-40]
    1550:	ldr	x3, [x8, #8]
    1554:	ldur	w0, [x29, #-52]
    1558:	str	x1, [sp, #64]
    155c:	str	x2, [sp, #56]
    1560:	str	x3, [sp, #48]
    1564:	bl	0 <ctf_errmsg>
    1568:	adrp	x8, 0 <ctf_add_type_mapping>
    156c:	add	x8, x8, #0x0
    1570:	str	x0, [sp, #40]
    1574:	mov	x0, x8
    1578:	ldr	x1, [sp, #64]
    157c:	ldr	x2, [sp, #56]
    1580:	ldr	x3, [sp, #48]
    1584:	ldr	x4, [sp, #40]
    1588:	bl	0 <ctf_dprintf>
    158c:	stur	wzr, [x29, #-4]
    1590:	b	1698 <ctf_link_one_type+0x208>
    1594:	ldur	x8, [x29, #-40]
    1598:	ldr	x0, [x8]
    159c:	mov	w9, wzr
    15a0:	mov	w1, w9
    15a4:	bl	0 <ctf_set_errno>
    15a8:	ldur	x8, [x29, #-40]
    15ac:	ldr	x0, [x8]
    15b0:	ldur	x8, [x29, #-40]
    15b4:	ldr	x1, [x8, #8]
    15b8:	ldur	x8, [x29, #-40]
    15bc:	ldr	x2, [x8, #32]
    15c0:	bl	5d8 <ctf_create_per_cu>
    15c4:	stur	x0, [x29, #-48]
    15c8:	cbnz	x0, 15d8 <ctf_link_one_type+0x148>
    15cc:	mov	w8, #0xffffffff            	// #-1
    15d0:	stur	w8, [x29, #-4]
    15d4:	b	1698 <ctf_link_one_type+0x208>
    15d8:	ldur	x0, [x29, #-48]
    15dc:	ldur	x8, [x29, #-40]
    15e0:	ldr	x1, [x8, #16]
    15e4:	ldur	x2, [x29, #-16]
    15e8:	bl	0 <ctf_add_type>
    15ec:	mov	x8, #0xffffffffffffffff    	// #-1
    15f0:	cmp	x0, x8
    15f4:	b.eq	1600 <ctf_link_one_type+0x170>  // b.none
    15f8:	stur	wzr, [x29, #-4]
    15fc:	b	1698 <ctf_link_one_type+0x208>
    1600:	ldur	x0, [x29, #-48]
    1604:	bl	0 <ctf_errno>
    1608:	stur	w0, [x29, #-52]
    160c:	ldur	w8, [x29, #-52]
    1610:	cmp	w8, #0x41b
    1614:	b.eq	1674 <ctf_link_one_type+0x1e4>  // b.none
    1618:	ldur	x1, [x29, #-16]
    161c:	ldur	x8, [x29, #-40]
    1620:	ldr	x2, [x8, #40]
    1624:	ldur	x8, [x29, #-40]
    1628:	ldr	x3, [x8, #8]
    162c:	ldur	x8, [x29, #-40]
    1630:	ldr	x4, [x8, #40]
    1634:	ldur	w0, [x29, #-52]
    1638:	str	x1, [sp, #32]
    163c:	str	x2, [sp, #24]
    1640:	str	x3, [sp, #16]
    1644:	str	x4, [sp, #8]
    1648:	bl	0 <ctf_errmsg>
    164c:	adrp	x8, 0 <ctf_add_type_mapping>
    1650:	add	x8, x8, #0x0
    1654:	str	x0, [sp]
    1658:	mov	x0, x8
    165c:	ldr	x1, [sp, #32]
    1660:	ldr	x2, [sp, #24]
    1664:	ldr	x3, [sp, #16]
    1668:	ldr	x4, [sp, #8]
    166c:	ldr	x5, [sp]
    1670:	bl	0 <ctf_dprintf>
    1674:	ldur	w8, [x29, #-52]
    1678:	cmp	w8, #0x411
    167c:	b.ne	1694 <ctf_link_one_type+0x204>  // b.any
    1680:	ldur	x8, [x29, #-40]
    1684:	ldr	x0, [x8]
    1688:	mov	w9, wzr
    168c:	mov	w1, w9
    1690:	bl	0 <ctf_set_errno>
    1694:	stur	wzr, [x29, #-4]
    1698:	ldur	w0, [x29, #-4]
    169c:	ldp	x29, x30, [sp, #128]
    16a0:	add	sp, sp, #0x90
    16a4:	ret

00000000000016a8 <ctf_link_one_variable>:
    16a8:	sub	sp, sp, #0x80
    16ac:	stp	x29, x30, [sp, #112]
    16b0:	add	x29, sp, #0x70
    16b4:	add	x8, sp, #0x30
    16b8:	stur	x0, [x29, #-16]
    16bc:	stur	x1, [x29, #-24]
    16c0:	stur	x2, [x29, #-32]
    16c4:	ldur	x9, [x29, #-32]
    16c8:	stur	x9, [x29, #-40]
    16cc:	str	xzr, [sp, #56]
    16d0:	ldur	x9, [x29, #-40]
    16d4:	ldr	x9, [x9]
    16d8:	str	x9, [sp, #48]
    16dc:	ldur	x9, [x29, #-40]
    16e0:	ldr	x0, [x9, #16]
    16e4:	ldur	x1, [x29, #-24]
    16e8:	mov	x2, x8
    16ec:	bl	154 <ctf_type_mapping>
    16f0:	str	x0, [sp, #56]
    16f4:	ldr	x8, [sp, #56]
    16f8:	cbz	x8, 17a4 <ctf_link_one_variable+0xfc>
    16fc:	ldr	x8, [sp, #48]
    1700:	ldur	x9, [x29, #-40]
    1704:	ldr	x9, [x9]
    1708:	cmp	x8, x9
    170c:	b.ne	17a4 <ctf_link_one_variable+0xfc>  // b.any
    1710:	ldur	x0, [x29, #-16]
    1714:	ldr	x1, [sp, #48]
    1718:	ldr	x2, [sp, #56]
    171c:	add	x3, sp, #0x28
    1720:	bl	18a4 <check_variable>
    1724:	cbz	w0, 1780 <ctf_link_one_variable+0xd8>
    1728:	ldr	x0, [sp, #48]
    172c:	ldur	x1, [x29, #-16]
    1730:	ldr	x2, [sp, #56]
    1734:	bl	0 <ctf_add_variable>
    1738:	cmp	w0, #0x0
    173c:	cset	w8, ge  // ge = tcont
    1740:	tbnz	w8, #0, 1778 <ctf_link_one_variable+0xd0>
    1744:	ldur	x8, [x29, #-40]
    1748:	ldr	x0, [x8]
    174c:	ldr	x8, [sp, #48]
    1750:	str	x0, [sp, #32]
    1754:	mov	x0, x8
    1758:	bl	0 <ctf_errno>
    175c:	ldr	x8, [sp, #32]
    1760:	str	w0, [sp, #28]
    1764:	mov	x0, x8
    1768:	ldr	w1, [sp, #28]
    176c:	bl	0 <ctf_set_errno>
    1770:	stur	w0, [x29, #-4]
    1774:	b	1894 <ctf_link_one_variable+0x1ec>
    1778:	stur	wzr, [x29, #-4]
    177c:	b	1894 <ctf_link_one_variable+0x1ec>
    1780:	ldr	x8, [sp, #40]
    1784:	cbz	x8, 17a4 <ctf_link_one_variable+0xfc>
    1788:	ldr	x8, [sp, #40]
    178c:	ldr	x8, [x8, #24]
    1790:	ldur	x9, [x29, #-24]
    1794:	cmp	x8, x9
    1798:	b.ne	17a4 <ctf_link_one_variable+0xfc>  // b.any
    179c:	stur	wzr, [x29, #-4]
    17a0:	b	1894 <ctf_link_one_variable+0x1ec>
    17a4:	ldur	x8, [x29, #-40]
    17a8:	ldr	x0, [x8]
    17ac:	ldur	x8, [x29, #-40]
    17b0:	ldr	x1, [x8, #8]
    17b4:	ldur	x8, [x29, #-40]
    17b8:	ldr	x2, [x8, #32]
    17bc:	bl	5d8 <ctf_create_per_cu>
    17c0:	stur	x0, [x29, #-48]
    17c4:	cbnz	x0, 17d4 <ctf_link_one_variable+0x12c>
    17c8:	mov	w8, #0xffffffff            	// #-1
    17cc:	stur	w8, [x29, #-4]
    17d0:	b	1894 <ctf_link_one_variable+0x1ec>
    17d4:	ldr	x8, [sp, #56]
    17d8:	cbnz	x8, 1828 <ctf_link_one_variable+0x180>
    17dc:	ldur	x8, [x29, #-48]
    17e0:	add	x2, sp, #0x30
    17e4:	str	x8, [sp, #48]
    17e8:	ldur	x8, [x29, #-40]
    17ec:	ldr	x0, [x8, #16]
    17f0:	ldur	x1, [x29, #-24]
    17f4:	bl	154 <ctf_type_mapping>
    17f8:	str	x0, [sp, #56]
    17fc:	ldr	x8, [sp, #56]
    1800:	cbnz	x8, 1828 <ctf_link_one_variable+0x180>
    1804:	ldur	x1, [x29, #-24]
    1808:	ldur	x2, [x29, #-16]
    180c:	ldur	x8, [x29, #-40]
    1810:	ldr	x3, [x8, #8]
    1814:	adrp	x0, 0 <ctf_add_type_mapping>
    1818:	add	x0, x0, #0x0
    181c:	bl	0 <ctf_dprintf>
    1820:	stur	wzr, [x29, #-4]
    1824:	b	1894 <ctf_link_one_variable+0x1ec>
    1828:	ldur	x0, [x29, #-16]
    182c:	ldur	x1, [x29, #-48]
    1830:	ldr	x2, [sp, #56]
    1834:	add	x3, sp, #0x28
    1838:	bl	18a4 <check_variable>
    183c:	cbz	w0, 1890 <ctf_link_one_variable+0x1e8>
    1840:	ldur	x0, [x29, #-48]
    1844:	ldur	x1, [x29, #-16]
    1848:	ldr	x2, [sp, #56]
    184c:	bl	0 <ctf_add_variable>
    1850:	cmp	w0, #0x0
    1854:	cset	w8, ge  // ge = tcont
    1858:	tbnz	w8, #0, 1890 <ctf_link_one_variable+0x1e8>
    185c:	ldur	x8, [x29, #-40]
    1860:	ldr	x0, [x8]
    1864:	ldur	x8, [x29, #-48]
    1868:	str	x0, [sp, #16]
    186c:	mov	x0, x8
    1870:	bl	0 <ctf_errno>
    1874:	ldr	x8, [sp, #16]
    1878:	str	w0, [sp, #12]
    187c:	mov	x0, x8
    1880:	ldr	w1, [sp, #12]
    1884:	bl	0 <ctf_set_errno>
    1888:	stur	w0, [x29, #-4]
    188c:	b	1894 <ctf_link_one_variable+0x1ec>
    1890:	stur	wzr, [x29, #-4]
    1894:	ldur	w0, [x29, #-4]
    1898:	ldp	x29, x30, [sp, #112]
    189c:	add	sp, sp, #0x80
    18a0:	ret

00000000000018a4 <check_variable>:
    18a4:	sub	sp, sp, #0x40
    18a8:	stp	x29, x30, [sp, #48]
    18ac:	add	x29, sp, #0x30
    18b0:	stur	x0, [x29, #-16]
    18b4:	str	x1, [sp, #24]
    18b8:	str	x2, [sp, #16]
    18bc:	str	x3, [sp, #8]
    18c0:	ldr	x8, [sp, #24]
    18c4:	ldr	x0, [x8, #592]
    18c8:	ldur	x1, [x29, #-16]
    18cc:	bl	0 <ctf_dynhash_lookup>
    18d0:	str	x0, [sp]
    18d4:	ldr	x8, [sp]
    18d8:	ldr	x9, [sp, #8]
    18dc:	str	x8, [x9]
    18e0:	ldr	x8, [sp]
    18e4:	cbnz	x8, 18f4 <check_variable+0x50>
    18e8:	mov	w8, #0x1                   	// #1
    18ec:	stur	w8, [x29, #-4]
    18f0:	b	191c <check_variable+0x78>
    18f4:	ldr	x8, [sp]
    18f8:	ldr	x8, [x8, #24]
    18fc:	ldr	x9, [sp, #16]
    1900:	cmp	x8, x9
    1904:	b.eq	1918 <check_variable+0x74>  // b.none
    1908:	ldur	x1, [x29, #-16]
    190c:	adrp	x0, 0 <ctf_add_type_mapping>
    1910:	add	x0, x0, #0x0
    1914:	bl	0 <ctf_dprintf>
    1918:	stur	wzr, [x29, #-4]
    191c:	ldur	w0, [x29, #-4]
    1920:	ldp	x29, x30, [sp, #48]
    1924:	add	sp, sp, #0x40
    1928:	ret

ctf-lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_lookup_by_name>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #96]
   8:	add	x29, sp, #0x60
   c:	stur	x0, [x29, #-16]
  10:	stur	x1, [x29, #-24]
  14:	str	xzr, [sp, #32]
  18:	ldur	x8, [x29, #-24]
  1c:	cbnz	x8, 34 <ctf_lookup_by_name+0x34>
  20:	ldur	x0, [x29, #-16]
  24:	mov	w1, #0x16                  	// #22
  28:	bl	0 <ctf_set_errno>
  2c:	stur	x0, [x29, #-8]
  30:	b	450 <ctf_lookup_by_name+0x450>
  34:	ldur	x8, [x29, #-24]
  38:	stur	x8, [x29, #-40]
  3c:	ldur	x8, [x29, #-24]
  40:	ldur	x0, [x29, #-24]
  44:	str	x8, [sp, #8]
  48:	bl	0 <strlen>
  4c:	ldr	x8, [sp, #8]
  50:	add	x9, x8, x0
  54:	str	x9, [sp, #40]
  58:	ldur	x8, [x29, #-40]
  5c:	ldrb	w9, [x8]
  60:	cbz	w9, 3dc <ctf_lookup_by_name+0x3dc>
  64:	bl	0 <__ctype_b_loc>
  68:	ldr	x8, [x0]
  6c:	ldur	x9, [x29, #-40]
  70:	ldrb	w10, [x9]
  74:	ldrh	w10, [x8, w10, sxtw #1]
  78:	and	w10, w10, #0x2000
  7c:	cbz	w10, 90 <ctf_lookup_by_name+0x90>
  80:	ldur	x8, [x29, #-40]
  84:	add	x8, x8, #0x1
  88:	stur	x8, [x29, #-40]
  8c:	b	64 <ctf_lookup_by_name+0x64>
  90:	ldur	x8, [x29, #-40]
  94:	ldr	x9, [sp, #40]
  98:	cmp	x8, x9
  9c:	b.ne	a4 <ctf_lookup_by_name+0xa4>  // b.any
  a0:	b	3dc <ctf_lookup_by_name+0x3dc>
  a4:	ldur	x8, [x29, #-40]
  a8:	add	x0, x8, #0x1
  ac:	adrp	x1, 0 <ctf_lookup_by_name>
  b0:	add	x1, x1, #0x0
  b4:	bl	0 <strpbrk>
  b8:	str	x0, [sp, #48]
  bc:	cbnz	x0, c8 <ctf_lookup_by_name+0xc8>
  c0:	ldr	x8, [sp, #40]
  c4:	str	x8, [sp, #48]
  c8:	ldur	x8, [x29, #-40]
  cc:	ldrb	w9, [x8]
  d0:	cmp	w9, #0x2a
  d4:	b.ne	1b8 <ctf_lookup_by_name+0x1b8>  // b.any
  d8:	ldur	x8, [x29, #-16]
  dc:	ldr	x8, [x8, #448]
  e0:	ldr	x9, [sp, #32]
  e4:	ldur	x10, [x29, #-16]
  e8:	ldr	w11, [x10, #544]
  ec:	mov	w10, w11
  f0:	and	x9, x9, x10
  f4:	ldr	w11, [x8, x9, lsl #2]
  f8:	mov	w8, w11
  fc:	str	x8, [sp, #24]
 100:	ldr	x8, [sp, #24]
 104:	cbnz	x8, 164 <ctf_lookup_by_name+0x164>
 108:	ldur	x0, [x29, #-16]
 10c:	ldr	x1, [sp, #32]
 110:	bl	0 <ctf_type_resolve_unsliced>
 114:	str	x0, [sp, #24]
 118:	ldr	x8, [sp, #24]
 11c:	mov	x9, #0xffffffffffffffff    	// #-1
 120:	cmp	x8, x9
 124:	b.eq	154 <ctf_lookup_by_name+0x154>  // b.none
 128:	ldur	x8, [x29, #-16]
 12c:	ldr	x8, [x8, #448]
 130:	ldr	x9, [sp, #24]
 134:	ldur	x10, [x29, #-16]
 138:	ldr	w11, [x10, #544]
 13c:	mov	w10, w11
 140:	and	x9, x9, x10
 144:	ldr	w11, [x8, x9, lsl #2]
 148:	mov	w8, w11
 14c:	str	x8, [sp, #24]
 150:	cbnz	x8, 164 <ctf_lookup_by_name+0x164>
 154:	ldur	x0, [x29, #-16]
 158:	mov	w1, #0x402                 	// #1026
 15c:	bl	0 <ctf_set_errno>
 160:	b	410 <ctf_lookup_by_name+0x410>
 164:	ldur	x8, [x29, #-16]
 168:	ldr	w9, [x8, #552]
 16c:	and	w9, w9, #0x1
 170:	cbz	w9, 198 <ctf_lookup_by_name+0x198>
 174:	ldr	x8, [sp, #24]
 178:	ldur	x9, [x29, #-16]
 17c:	ldr	w10, [x9, #544]
 180:	add	w10, w10, #0x1
 184:	mov	w9, w10
 188:	ubfx	x9, x9, #0, #32
 18c:	orr	x8, x8, x9
 190:	str	x8, [sp]
 194:	b	1a0 <ctf_lookup_by_name+0x1a0>
 198:	ldr	x8, [sp, #24]
 19c:	str	x8, [sp]
 1a0:	ldr	x8, [sp]
 1a4:	str	x8, [sp, #32]
 1a8:	ldur	x8, [x29, #-40]
 1ac:	add	x8, x8, #0x1
 1b0:	str	x8, [sp, #48]
 1b4:	b	3d0 <ctf_lookup_by_name+0x3d0>
 1b8:	ldur	x0, [x29, #-40]
 1bc:	ldr	x8, [sp, #48]
 1c0:	ldur	x9, [x29, #-40]
 1c4:	subs	x1, x8, x9
 1c8:	bl	460 <isqualifier>
 1cc:	cbz	w0, 1d4 <ctf_lookup_by_name+0x1d4>
 1d0:	b	3d0 <ctf_lookup_by_name+0x3d0>
 1d4:	ldur	x8, [x29, #-16]
 1d8:	add	x8, x8, #0xd8
 1dc:	stur	x8, [x29, #-32]
 1e0:	ldur	x8, [x29, #-32]
 1e4:	ldr	x8, [x8]
 1e8:	cbz	x8, 3b4 <ctf_lookup_by_name+0x3b4>
 1ec:	ldur	x8, [x29, #-32]
 1f0:	ldr	x8, [x8]
 1f4:	ldrb	w9, [x8]
 1f8:	cbz	w9, 21c <ctf_lookup_by_name+0x21c>
 1fc:	ldur	x0, [x29, #-40]
 200:	ldur	x8, [x29, #-32]
 204:	ldr	x1, [x8]
 208:	ldr	x8, [sp, #48]
 20c:	ldur	x9, [x29, #-40]
 210:	subs	x2, x8, x9
 214:	bl	0 <strncmp>
 218:	cbnz	w0, 3a4 <ctf_lookup_by_name+0x3a4>
 21c:	ldr	x8, [sp, #48]
 220:	ldur	x9, [x29, #-40]
 224:	subs	x8, x8, x9
 228:	ldur	x9, [x29, #-32]
 22c:	ldr	x9, [x9, #8]
 230:	cmp	x8, x9
 234:	b.cc	3a4 <ctf_lookup_by_name+0x3a4>  // b.lo, b.ul, b.last
 238:	ldur	x8, [x29, #-32]
 23c:	ldr	x8, [x8, #8]
 240:	ldur	x9, [x29, #-40]
 244:	add	x8, x9, x8
 248:	stur	x8, [x29, #-40]
 24c:	bl	0 <__ctype_b_loc>
 250:	ldr	x8, [x0]
 254:	ldur	x9, [x29, #-40]
 258:	ldrb	w10, [x9]
 25c:	ldrh	w10, [x8, w10, sxtw #1]
 260:	and	w10, w10, #0x2000
 264:	cbz	w10, 278 <ctf_lookup_by_name+0x278>
 268:	ldur	x8, [x29, #-40]
 26c:	add	x8, x8, #0x1
 270:	stur	x8, [x29, #-40]
 274:	b	24c <ctf_lookup_by_name+0x24c>
 278:	ldur	x0, [x29, #-40]
 27c:	mov	w1, #0x2a                  	// #42
 280:	bl	0 <strchr>
 284:	str	x0, [sp, #48]
 288:	cbnz	x0, 294 <ctf_lookup_by_name+0x294>
 28c:	ldr	x8, [sp, #40]
 290:	str	x8, [sp, #48]
 294:	bl	0 <__ctype_b_loc>
 298:	ldr	x8, [x0]
 29c:	ldr	x9, [sp, #48]
 2a0:	ldurb	w10, [x9, #-1]
 2a4:	ldrh	w10, [x8, w10, sxtw #1]
 2a8:	and	w10, w10, #0x2000
 2ac:	cbz	w10, 2c4 <ctf_lookup_by_name+0x2c4>
 2b0:	ldr	x8, [sp, #48]
 2b4:	mov	x9, #0xffffffffffffffff    	// #-1
 2b8:	add	x8, x8, x9
 2bc:	str	x8, [sp, #48]
 2c0:	b	294 <ctf_lookup_by_name+0x294>
 2c4:	ldur	x8, [x29, #-16]
 2c8:	ldr	x8, [x8, #712]
 2cc:	ldr	x9, [sp, #48]
 2d0:	ldur	x10, [x29, #-40]
 2d4:	subs	x9, x9, x10
 2d8:	add	x9, x9, #0x1
 2dc:	cmp	x8, x9
 2e0:	b.cc	324 <ctf_lookup_by_name+0x324>  // b.lo, b.ul, b.last
 2e4:	ldur	x8, [x29, #-16]
 2e8:	ldr	x0, [x8, #704]
 2ec:	ldur	x1, [x29, #-40]
 2f0:	ldr	x8, [sp, #48]
 2f4:	ldur	x9, [x29, #-40]
 2f8:	subs	x2, x8, x9
 2fc:	bl	0 <memcpy>
 300:	ldur	x8, [x29, #-16]
 304:	ldr	x8, [x8, #704]
 308:	ldr	x9, [sp, #48]
 30c:	ldur	x10, [x29, #-40]
 310:	subs	x9, x9, x10
 314:	add	x8, x8, x9
 318:	mov	w11, #0x0                   	// #0
 31c:	strb	w11, [x8]
 320:	b	370 <ctf_lookup_by_name+0x370>
 324:	ldur	x8, [x29, #-16]
 328:	ldr	x0, [x8, #704]
 32c:	bl	0 <free>
 330:	ldur	x0, [x29, #-40]
 334:	ldr	x8, [sp, #48]
 338:	ldur	x9, [x29, #-40]
 33c:	subs	x1, x8, x9
 340:	bl	0 <xstrndup>
 344:	ldur	x8, [x29, #-16]
 348:	str	x0, [x8, #704]
 34c:	ldur	x8, [x29, #-16]
 350:	ldr	x8, [x8, #704]
 354:	cbnz	x8, 370 <ctf_lookup_by_name+0x370>
 358:	ldur	x0, [x29, #-16]
 35c:	mov	w1, #0xc                   	// #12
 360:	bl	0 <ctf_set_errno>
 364:	mov	x8, #0xffffffffffffffff    	// #-1
 368:	stur	x8, [x29, #-8]
 36c:	b	450 <ctf_lookup_by_name+0x450>
 370:	ldur	x0, [x29, #-16]
 374:	ldur	x8, [x29, #-32]
 378:	ldr	x1, [x8, #16]
 37c:	ldur	x8, [x29, #-16]
 380:	ldr	x2, [x8, #704]
 384:	bl	0 <ctf_lookup_by_rawhash>
 388:	str	x0, [sp, #32]
 38c:	cbnz	x0, 3a0 <ctf_lookup_by_name+0x3a0>
 390:	ldur	x0, [x29, #-16]
 394:	mov	w1, #0x402                 	// #1026
 398:	bl	0 <ctf_set_errno>
 39c:	b	410 <ctf_lookup_by_name+0x410>
 3a0:	b	3b4 <ctf_lookup_by_name+0x3b4>
 3a4:	ldur	x8, [x29, #-32]
 3a8:	add	x8, x8, #0x18
 3ac:	stur	x8, [x29, #-32]
 3b0:	b	1e0 <ctf_lookup_by_name+0x1e0>
 3b4:	ldur	x8, [x29, #-32]
 3b8:	ldr	x8, [x8]
 3bc:	cbnz	x8, 3d0 <ctf_lookup_by_name+0x3d0>
 3c0:	ldur	x0, [x29, #-16]
 3c4:	mov	w1, #0x402                 	// #1026
 3c8:	bl	0 <ctf_set_errno>
 3cc:	b	410 <ctf_lookup_by_name+0x410>
 3d0:	ldr	x8, [sp, #48]
 3d4:	stur	x8, [x29, #-40]
 3d8:	b	58 <ctf_lookup_by_name+0x58>
 3dc:	ldur	x8, [x29, #-40]
 3e0:	ldrb	w9, [x8]
 3e4:	cbnz	w9, 3f0 <ctf_lookup_by_name+0x3f0>
 3e8:	ldr	x8, [sp, #32]
 3ec:	cbnz	x8, 404 <ctf_lookup_by_name+0x404>
 3f0:	ldur	x0, [x29, #-16]
 3f4:	mov	w1, #0x403                 	// #1027
 3f8:	bl	0 <ctf_set_errno>
 3fc:	stur	x0, [x29, #-8]
 400:	b	450 <ctf_lookup_by_name+0x450>
 404:	ldr	x8, [sp, #32]
 408:	stur	x8, [x29, #-8]
 40c:	b	450 <ctf_lookup_by_name+0x450>
 410:	ldur	x8, [x29, #-16]
 414:	ldr	x8, [x8, #512]
 418:	cbz	x8, 448 <ctf_lookup_by_name+0x448>
 41c:	ldur	x8, [x29, #-16]
 420:	ldr	x0, [x8, #512]
 424:	ldur	x1, [x29, #-24]
 428:	bl	0 <ctf_lookup_by_name>
 42c:	str	x0, [sp, #16]
 430:	mov	x8, #0xffffffffffffffff    	// #-1
 434:	cmp	x0, x8
 438:	b.eq	448 <ctf_lookup_by_name+0x448>  // b.none
 43c:	ldr	x8, [sp, #16]
 440:	stur	x8, [x29, #-8]
 444:	b	450 <ctf_lookup_by_name+0x450>
 448:	mov	x8, #0xffffffffffffffff    	// #-1
 44c:	stur	x8, [x29, #-8]
 450:	ldur	x0, [x29, #-8]
 454:	ldp	x29, x30, [sp, #96]
 458:	add	sp, sp, #0x70
 45c:	ret

0000000000000460 <isqualifier>:
 460:	sub	sp, sp, #0x40
 464:	stp	x29, x30, [sp, #48]
 468:	add	x29, sp, #0x30
 46c:	adrp	x8, 0 <ctf_lookup_by_name>
 470:	add	x8, x8, #0x0
 474:	stur	x0, [x29, #-8]
 478:	stur	x1, [x29, #-16]
 47c:	ldur	x9, [x29, #-8]
 480:	ldur	x10, [x29, #-16]
 484:	subs	x10, x10, #0x1
 488:	ldrb	w11, [x9, x10]
 48c:	ldur	x9, [x29, #-16]
 490:	add	w9, w11, w9
 494:	subs	w9, w9, #0x69
 498:	stur	w9, [x29, #-20]
 49c:	ldursw	x10, [x29, #-20]
 4a0:	mov	x12, #0x10                  	// #16
 4a4:	mul	x10, x12, x10
 4a8:	add	x8, x8, x10
 4ac:	str	x8, [sp, #16]
 4b0:	ldur	w9, [x29, #-20]
 4b4:	cmp	w9, #0x0
 4b8:	cset	w9, lt  // lt = tstop
 4bc:	mov	w11, #0x0                   	// #0
 4c0:	str	w11, [sp, #12]
 4c4:	tbnz	w9, #0, 51c <isqualifier+0xbc>
 4c8:	ldursw	x8, [x29, #-20]
 4cc:	mov	w9, #0x0                   	// #0
 4d0:	cmp	x8, #0x15
 4d4:	str	w9, [sp, #12]
 4d8:	b.cs	51c <isqualifier+0xbc>  // b.hs, b.nlast
 4dc:	ldur	x8, [x29, #-16]
 4e0:	ldr	x9, [sp, #16]
 4e4:	ldr	x9, [x9, #8]
 4e8:	mov	w10, #0x0                   	// #0
 4ec:	cmp	x8, x9
 4f0:	str	w10, [sp, #12]
 4f4:	b.ne	51c <isqualifier+0xbc>  // b.any
 4f8:	ldr	x8, [sp, #16]
 4fc:	ldr	x0, [x8]
 500:	ldur	x1, [x29, #-8]
 504:	ldr	x8, [sp, #16]
 508:	ldr	x2, [x8, #8]
 50c:	bl	0 <strncmp>
 510:	cmp	w0, #0x0
 514:	cset	w9, eq  // eq = none
 518:	str	w9, [sp, #12]
 51c:	ldr	w8, [sp, #12]
 520:	and	w0, w8, #0x1
 524:	ldp	x29, x30, [sp, #48]
 528:	add	sp, sp, #0x40
 52c:	ret

0000000000000530 <ctf_lookup_variable>:
 530:	sub	sp, sp, #0x40
 534:	stp	x29, x30, [sp, #48]
 538:	add	x29, sp, #0x30
 53c:	mov	x3, #0x8                   	// #8
 540:	adrp	x4, 0 <ctf_lookup_by_name>
 544:	add	x4, x4, #0x0
 548:	mov	x8, sp
 54c:	stur	x0, [x29, #-16]
 550:	str	x1, [sp, #24]
 554:	ldur	x9, [x29, #-16]
 558:	str	x9, [sp]
 55c:	ldr	x9, [sp, #24]
 560:	str	x9, [x8, #8]
 564:	ldur	x9, [x29, #-16]
 568:	ldr	x1, [x9, #464]
 56c:	ldur	x9, [x29, #-16]
 570:	ldr	x2, [x9, #472]
 574:	mov	x0, x8
 578:	bl	0 <bsearch>
 57c:	str	x0, [sp, #16]
 580:	ldr	x8, [sp, #16]
 584:	cbnz	x8, 5c0 <ctf_lookup_variable+0x90>
 588:	ldur	x8, [x29, #-16]
 58c:	ldr	x8, [x8, #512]
 590:	cbz	x8, 5ac <ctf_lookup_variable+0x7c>
 594:	ldur	x8, [x29, #-16]
 598:	ldr	x0, [x8, #512]
 59c:	ldr	x1, [sp, #24]
 5a0:	bl	530 <ctf_lookup_variable>
 5a4:	stur	x0, [x29, #-8]
 5a8:	b	5d0 <ctf_lookup_variable+0xa0>
 5ac:	ldur	x0, [x29, #-16]
 5b0:	mov	w1, #0x407                 	// #1031
 5b4:	bl	0 <ctf_set_errno>
 5b8:	stur	x0, [x29, #-8]
 5bc:	b	5d0 <ctf_lookup_variable+0xa0>
 5c0:	ldr	x8, [sp, #16]
 5c4:	ldr	w9, [x8, #4]
 5c8:	mov	w8, w9
 5cc:	stur	x8, [x29, #-8]
 5d0:	ldur	x0, [x29, #-8]
 5d4:	ldp	x29, x30, [sp, #48]
 5d8:	add	sp, sp, #0x40
 5dc:	ret

00000000000005e0 <ctf_lookup_var>:
 5e0:	sub	sp, sp, #0x40
 5e4:	stp	x29, x30, [sp, #48]
 5e8:	add	x29, sp, #0x30
 5ec:	stur	x0, [x29, #-8]
 5f0:	stur	x1, [x29, #-16]
 5f4:	ldur	x8, [x29, #-8]
 5f8:	str	x8, [sp, #24]
 5fc:	ldur	x8, [x29, #-16]
 600:	str	x8, [sp, #16]
 604:	ldr	x8, [sp, #24]
 608:	ldr	x0, [x8, #8]
 60c:	ldr	x8, [sp, #24]
 610:	ldr	x8, [x8]
 614:	ldr	x9, [sp, #16]
 618:	ldr	w1, [x9]
 61c:	str	x0, [sp, #8]
 620:	mov	x0, x8
 624:	bl	0 <ctf_strptr>
 628:	ldr	x8, [sp, #8]
 62c:	str	x0, [sp]
 630:	mov	x0, x8
 634:	ldr	x1, [sp]
 638:	bl	0 <strcmp>
 63c:	ldp	x29, x30, [sp, #48]
 640:	add	sp, sp, #0x40
 644:	ret

0000000000000648 <ctf_lookup_symbol_name>:
 648:	sub	sp, sp, #0x60
 64c:	stp	x29, x30, [sp, #80]
 650:	add	x29, sp, #0x50
 654:	adrp	x8, 0 <_CTF_NULLSTR>
 658:	add	x8, x8, #0x0
 65c:	stur	x0, [x29, #-16]
 660:	stur	x1, [x29, #-24]
 664:	ldur	x9, [x29, #-16]
 668:	add	x9, x9, #0x38
 66c:	stur	x9, [x29, #-32]
 670:	ldur	x9, [x29, #-32]
 674:	ldr	x9, [x9, #8]
 678:	str	x8, [sp]
 67c:	cbnz	x9, 698 <ctf_lookup_symbol_name+0x50>
 680:	ldur	x0, [x29, #-16]
 684:	mov	w1, #0x3f2                 	// #1010
 688:	bl	0 <ctf_set_errno>
 68c:	ldr	x8, [sp]
 690:	stur	x8, [x29, #-8]
 694:	b	764 <ctf_lookup_symbol_name+0x11c>
 698:	ldur	x8, [x29, #-24]
 69c:	ldur	x9, [x29, #-16]
 6a0:	ldr	x9, [x9, #432]
 6a4:	cmp	x8, x9
 6a8:	b.cc	6c4 <ctf_lookup_symbol_name+0x7c>  // b.lo, b.ul, b.last
 6ac:	ldur	x0, [x29, #-16]
 6b0:	mov	w1, #0x16                  	// #22
 6b4:	bl	0 <ctf_set_errno>
 6b8:	ldr	x8, [sp]
 6bc:	stur	x8, [x29, #-8]
 6c0:	b	764 <ctf_lookup_symbol_name+0x11c>
 6c4:	ldur	x8, [x29, #-32]
 6c8:	ldr	x8, [x8, #24]
 6cc:	cmp	x8, #0x10
 6d0:	b.ne	704 <ctf_lookup_symbol_name+0xbc>  // b.any
 6d4:	ldur	x8, [x29, #-32]
 6d8:	ldr	x8, [x8, #8]
 6dc:	ldur	x9, [x29, #-24]
 6e0:	mov	x10, #0x10                  	// #16
 6e4:	mul	x9, x10, x9
 6e8:	add	x8, x8, x9
 6ec:	str	x8, [sp, #8]
 6f0:	ldr	x0, [sp, #8]
 6f4:	add	x1, sp, #0x18
 6f8:	bl	0 <ctf_sym_to_elf64>
 6fc:	str	x0, [sp, #16]
 700:	b	720 <ctf_lookup_symbol_name+0xd8>
 704:	ldur	x8, [x29, #-32]
 708:	ldr	x8, [x8, #8]
 70c:	ldur	x9, [x29, #-24]
 710:	mov	x10, #0x18                  	// #24
 714:	mul	x9, x10, x9
 718:	add	x8, x8, x9
 71c:	str	x8, [sp, #16]
 720:	ldr	x8, [sp, #16]
 724:	ldr	w9, [x8]
 728:	mov	w8, w9
 72c:	ldur	x10, [x29, #-16]
 730:	ldr	x10, [x10, #360]
 734:	cmp	x8, x10
 738:	b.cs	75c <ctf_lookup_symbol_name+0x114>  // b.hs, b.nlast
 73c:	ldur	x8, [x29, #-16]
 740:	ldr	x8, [x8, #352]
 744:	ldr	x9, [sp, #16]
 748:	ldr	w10, [x9]
 74c:	mov	w9, w10
 750:	add	x8, x8, x9
 754:	stur	x8, [x29, #-8]
 758:	b	764 <ctf_lookup_symbol_name+0x11c>
 75c:	ldr	x8, [sp]
 760:	stur	x8, [x29, #-8]
 764:	ldur	x0, [x29, #-8]
 768:	ldp	x29, x30, [sp, #80]
 76c:	add	sp, sp, #0x60
 770:	ret

0000000000000774 <ctf_lookup_by_symbol>:
 774:	sub	sp, sp, #0x50
 778:	stp	x29, x30, [sp, #64]
 77c:	add	x29, sp, #0x40
 780:	stur	x0, [x29, #-16]
 784:	stur	x1, [x29, #-24]
 788:	ldur	x8, [x29, #-16]
 78c:	add	x8, x8, #0x38
 790:	str	x8, [sp, #32]
 794:	ldr	x8, [sp, #32]
 798:	ldr	x8, [x8, #8]
 79c:	cbnz	x8, 7b4 <ctf_lookup_by_symbol+0x40>
 7a0:	ldur	x0, [x29, #-16]
 7a4:	mov	w1, #0x3f2                 	// #1010
 7a8:	bl	0 <ctf_set_errno>
 7ac:	stur	x0, [x29, #-8]
 7b0:	b	8f8 <ctf_lookup_by_symbol+0x184>
 7b4:	ldur	x8, [x29, #-24]
 7b8:	ldur	x9, [x29, #-16]
 7bc:	ldr	x9, [x9, #432]
 7c0:	cmp	x8, x9
 7c4:	b.cc	7dc <ctf_lookup_by_symbol+0x68>  // b.lo, b.ul, b.last
 7c8:	ldur	x0, [x29, #-16]
 7cc:	mov	w1, #0x16                  	// #22
 7d0:	bl	0 <ctf_set_errno>
 7d4:	stur	x0, [x29, #-8]
 7d8:	b	8f8 <ctf_lookup_by_symbol+0x184>
 7dc:	ldr	x8, [sp, #32]
 7e0:	ldr	x8, [x8, #24]
 7e4:	cmp	x8, #0x10
 7e8:	b.ne	834 <ctf_lookup_by_symbol+0xc0>  // b.any
 7ec:	ldr	x8, [sp, #32]
 7f0:	ldr	x8, [x8, #8]
 7f4:	ldur	x9, [x29, #-24]
 7f8:	mov	x10, #0x10                  	// #16
 7fc:	mul	x9, x10, x9
 800:	add	x8, x8, x9
 804:	str	x8, [sp, #16]
 808:	ldr	x8, [sp, #16]
 80c:	ldrb	w11, [x8, #12]
 810:	and	w11, w11, #0xf
 814:	cmp	w11, #0x1
 818:	b.eq	830 <ctf_lookup_by_symbol+0xbc>  // b.none
 81c:	ldur	x0, [x29, #-16]
 820:	mov	w1, #0x406                 	// #1030
 824:	bl	0 <ctf_set_errno>
 828:	stur	x0, [x29, #-8]
 82c:	b	8f8 <ctf_lookup_by_symbol+0x184>
 830:	b	878 <ctf_lookup_by_symbol+0x104>
 834:	ldr	x8, [sp, #32]
 838:	ldr	x8, [x8, #8]
 83c:	ldur	x9, [x29, #-24]
 840:	mov	x10, #0x18                  	// #24
 844:	mul	x9, x10, x9
 848:	add	x8, x8, x9
 84c:	str	x8, [sp, #8]
 850:	ldr	x8, [sp, #8]
 854:	ldrb	w11, [x8, #4]
 858:	and	w11, w11, #0xf
 85c:	cmp	w11, #0x1
 860:	b.eq	878 <ctf_lookup_by_symbol+0x104>  // b.none
 864:	ldur	x0, [x29, #-16]
 868:	mov	w1, #0x406                 	// #1030
 86c:	bl	0 <ctf_set_errno>
 870:	stur	x0, [x29, #-8]
 874:	b	8f8 <ctf_lookup_by_symbol+0x184>
 878:	ldur	x8, [x29, #-16]
 87c:	ldr	x8, [x8, #424]
 880:	ldur	x9, [x29, #-24]
 884:	ldr	w10, [x8, x9, lsl #2]
 888:	mov	w11, #0xffffffff            	// #-1
 88c:	cmp	w10, w11
 890:	b.ne	8a8 <ctf_lookup_by_symbol+0x134>  // b.any
 894:	ldur	x0, [x29, #-16]
 898:	mov	w1, #0x407                 	// #1031
 89c:	bl	0 <ctf_set_errno>
 8a0:	stur	x0, [x29, #-8]
 8a4:	b	8f8 <ctf_lookup_by_symbol+0x184>
 8a8:	ldur	x8, [x29, #-16]
 8ac:	ldr	x8, [x8, #408]
 8b0:	ldur	x9, [x29, #-16]
 8b4:	ldr	x9, [x9, #424]
 8b8:	ldur	x10, [x29, #-24]
 8bc:	ldr	w11, [x9, x10, lsl #2]
 8c0:	mov	w9, w11
 8c4:	add	x8, x8, x9
 8c8:	ldr	w11, [x8]
 8cc:	mov	w8, w11
 8d0:	str	x8, [sp, #24]
 8d4:	ldr	x8, [sp, #24]
 8d8:	cbnz	x8, 8f0 <ctf_lookup_by_symbol+0x17c>
 8dc:	ldur	x0, [x29, #-16]
 8e0:	mov	w1, #0x407                 	// #1031
 8e4:	bl	0 <ctf_set_errno>
 8e8:	stur	x0, [x29, #-8]
 8ec:	b	8f8 <ctf_lookup_by_symbol+0x184>
 8f0:	ldr	x8, [sp, #24]
 8f4:	stur	x8, [x29, #-8]
 8f8:	ldur	x0, [x29, #-8]
 8fc:	ldp	x29, x30, [sp, #64]
 900:	add	sp, sp, #0x50
 904:	ret

0000000000000908 <ctf_lookup_by_id>:
 908:	sub	sp, sp, #0x60
 90c:	stp	x29, x30, [sp, #80]
 910:	add	x29, sp, #0x50
 914:	stur	x0, [x29, #-16]
 918:	stur	x1, [x29, #-24]
 91c:	ldur	x8, [x29, #-16]
 920:	ldr	x8, [x8]
 924:	stur	x8, [x29, #-32]
 928:	ldur	x8, [x29, #-32]
 92c:	ldr	w9, [x8, #552]
 930:	and	w9, w9, #0x1
 934:	cbz	w9, 97c <ctf_lookup_by_id+0x74>
 938:	ldur	x8, [x29, #-24]
 93c:	ldur	x9, [x29, #-32]
 940:	ldr	w10, [x9, #544]
 944:	mov	w9, w10
 948:	cmp	x8, x9
 94c:	b.hi	97c <ctf_lookup_by_id+0x74>  // b.pmore
 950:	ldur	x8, [x29, #-32]
 954:	ldr	x8, [x8, #512]
 958:	stur	x8, [x29, #-32]
 95c:	cbnz	x8, 97c <ctf_lookup_by_id+0x74>
 960:	ldur	x8, [x29, #-16]
 964:	ldr	x0, [x8]
 968:	mov	w1, #0x3f3                 	// #1011
 96c:	bl	0 <ctf_set_errno>
 970:	mov	x8, xzr
 974:	stur	x8, [x29, #-8]
 978:	b	ad8 <ctf_lookup_by_id+0x1d0>
 97c:	ldur	x8, [x29, #-32]
 980:	ldr	w9, [x8, #552]
 984:	and	w9, w9, #0x2
 988:	cbz	w9, 9d8 <ctf_lookup_by_id+0xd0>
 98c:	ldur	x0, [x29, #-32]
 990:	ldur	x1, [x29, #-24]
 994:	bl	0 <ctf_dynamic_type>
 998:	str	x0, [sp, #32]
 99c:	cbz	x0, 9bc <ctf_lookup_by_id+0xb4>
 9a0:	ldur	x8, [x29, #-32]
 9a4:	ldur	x9, [x29, #-16]
 9a8:	str	x8, [x9]
 9ac:	ldr	x8, [sp, #32]
 9b0:	add	x8, x8, #0x18
 9b4:	stur	x8, [x29, #-8]
 9b8:	b	ad8 <ctf_lookup_by_id+0x1d0>
 9bc:	ldur	x8, [x29, #-16]
 9c0:	ldr	x0, [x8]
 9c4:	mov	w1, #0x3fa                 	// #1018
 9c8:	bl	0 <ctf_set_errno>
 9cc:	mov	x8, xzr
 9d0:	stur	x8, [x29, #-8]
 9d4:	b	ad8 <ctf_lookup_by_id+0x1d0>
 9d8:	ldur	x8, [x29, #-24]
 9dc:	ldur	x9, [x29, #-32]
 9e0:	ldr	w10, [x9, #544]
 9e4:	mov	w9, w10
 9e8:	and	x8, x8, x9
 9ec:	str	x8, [sp, #40]
 9f0:	ldr	x8, [sp, #40]
 9f4:	cmp	x8, #0x0
 9f8:	cset	w10, ls  // ls = plast
 9fc:	tbnz	w10, #0, ac0 <ctf_lookup_by_id+0x1b8>
 a00:	ldr	x8, [sp, #40]
 a04:	ldur	x9, [x29, #-32]
 a08:	ldr	x9, [x9, #480]
 a0c:	cmp	x8, x9
 a10:	b.hi	ac0 <ctf_lookup_by_id+0x1b8>  // b.pmore
 a14:	ldur	x8, [x29, #-32]
 a18:	ldur	x9, [x29, #-16]
 a1c:	str	x8, [x9]
 a20:	ldur	x8, [x29, #-32]
 a24:	ldr	w10, [x8, #552]
 a28:	and	w10, w10, #0x2
 a2c:	cbz	w10, a90 <ctf_lookup_by_id+0x188>
 a30:	ldur	x0, [x29, #-32]
 a34:	ldur	x8, [x29, #-32]
 a38:	ldr	w9, [x8, #552]
 a3c:	and	w9, w9, #0x1
 a40:	str	x0, [sp, #24]
 a44:	cbz	w9, a6c <ctf_lookup_by_id+0x164>
 a48:	ldr	x8, [sp, #40]
 a4c:	ldur	x9, [x29, #-32]
 a50:	ldr	w10, [x9, #544]
 a54:	add	w10, w10, #0x1
 a58:	mov	w9, w10
 a5c:	ubfx	x9, x9, #0, #32
 a60:	orr	x8, x8, x9
 a64:	str	x8, [sp, #16]
 a68:	b	a74 <ctf_lookup_by_id+0x16c>
 a6c:	ldr	x8, [sp, #40]
 a70:	str	x8, [sp, #16]
 a74:	ldr	x8, [sp, #16]
 a78:	ldr	x0, [sp, #24]
 a7c:	mov	x1, x8
 a80:	bl	0 <ctf_dtd_lookup>
 a84:	add	x8, x0, #0x18
 a88:	str	x8, [sp, #8]
 a8c:	b	ab4 <ctf_lookup_by_id+0x1ac>
 a90:	ldur	x8, [x29, #-32]
 a94:	ldr	x8, [x8, #408]
 a98:	ldur	x9, [x29, #-32]
 a9c:	ldr	x9, [x9, #440]
 aa0:	ldr	x10, [sp, #40]
 aa4:	ldr	w11, [x9, x10, lsl #2]
 aa8:	mov	w9, w11
 aac:	add	x8, x8, x9
 ab0:	str	x8, [sp, #8]
 ab4:	ldr	x8, [sp, #8]
 ab8:	stur	x8, [x29, #-8]
 abc:	b	ad8 <ctf_lookup_by_id+0x1d0>
 ac0:	ldur	x8, [x29, #-16]
 ac4:	ldr	x0, [x8]
 ac8:	mov	w1, #0x3fa                 	// #1018
 acc:	bl	0 <ctf_set_errno>
 ad0:	mov	x8, xzr
 ad4:	stur	x8, [x29, #-8]
 ad8:	ldur	x0, [x29, #-8]
 adc:	ldp	x29, x30, [sp, #80]
 ae0:	add	sp, sp, #0x60
 ae4:	ret

0000000000000ae8 <ctf_func_info>:
 ae8:	sub	sp, sp, #0x60
 aec:	stp	x29, x30, [sp, #80]
 af0:	add	x29, sp, #0x50
 af4:	stur	x0, [x29, #-16]
 af8:	stur	x1, [x29, #-24]
 afc:	stur	x2, [x29, #-32]
 b00:	ldur	x8, [x29, #-16]
 b04:	add	x8, x8, #0x38
 b08:	str	x8, [sp, #40]
 b0c:	ldr	x8, [sp, #40]
 b10:	ldr	x8, [x8, #8]
 b14:	cbnz	x8, b2c <ctf_func_info+0x44>
 b18:	ldur	x0, [x29, #-16]
 b1c:	mov	w1, #0x3f2                 	// #1010
 b20:	bl	0 <ctf_set_errno>
 b24:	stur	w0, [x29, #-4]
 b28:	b	d3c <ctf_func_info+0x254>
 b2c:	ldur	x8, [x29, #-24]
 b30:	ldur	x9, [x29, #-16]
 b34:	ldr	x9, [x9, #432]
 b38:	cmp	x8, x9
 b3c:	b.cc	b54 <ctf_func_info+0x6c>  // b.lo, b.ul, b.last
 b40:	ldur	x0, [x29, #-16]
 b44:	mov	w1, #0x16                  	// #22
 b48:	bl	0 <ctf_set_errno>
 b4c:	stur	w0, [x29, #-4]
 b50:	b	d3c <ctf_func_info+0x254>
 b54:	ldr	x8, [sp, #40]
 b58:	ldr	x8, [x8, #24]
 b5c:	cmp	x8, #0x10
 b60:	b.ne	bac <ctf_func_info+0xc4>  // b.any
 b64:	ldr	x8, [sp, #40]
 b68:	ldr	x8, [x8, #8]
 b6c:	ldur	x9, [x29, #-24]
 b70:	mov	x10, #0x10                  	// #16
 b74:	mul	x9, x10, x9
 b78:	add	x8, x8, x9
 b7c:	str	x8, [sp, #8]
 b80:	ldr	x8, [sp, #8]
 b84:	ldrb	w11, [x8, #12]
 b88:	and	w11, w11, #0xf
 b8c:	cmp	w11, #0x2
 b90:	b.eq	ba8 <ctf_func_info+0xc0>  // b.none
 b94:	ldur	x0, [x29, #-16]
 b98:	mov	w1, #0x404                 	// #1028
 b9c:	bl	0 <ctf_set_errno>
 ba0:	stur	w0, [x29, #-4]
 ba4:	b	d3c <ctf_func_info+0x254>
 ba8:	b	bf0 <ctf_func_info+0x108>
 bac:	ldr	x8, [sp, #40]
 bb0:	ldr	x8, [x8, #8]
 bb4:	ldur	x9, [x29, #-24]
 bb8:	mov	x10, #0x18                  	// #24
 bbc:	mul	x9, x10, x9
 bc0:	add	x8, x8, x9
 bc4:	str	x8, [sp]
 bc8:	ldr	x8, [sp]
 bcc:	ldrb	w11, [x8, #4]
 bd0:	and	w11, w11, #0xf
 bd4:	cmp	w11, #0x2
 bd8:	b.eq	bf0 <ctf_func_info+0x108>  // b.none
 bdc:	ldur	x0, [x29, #-16]
 be0:	mov	w1, #0x404                 	// #1028
 be4:	bl	0 <ctf_set_errno>
 be8:	stur	w0, [x29, #-4]
 bec:	b	d3c <ctf_func_info+0x254>
 bf0:	ldur	x8, [x29, #-16]
 bf4:	ldr	x8, [x8, #424]
 bf8:	ldur	x9, [x29, #-24]
 bfc:	ldr	w10, [x8, x9, lsl #2]
 c00:	mov	w11, #0xffffffff            	// #-1
 c04:	cmp	w10, w11
 c08:	b.ne	c20 <ctf_func_info+0x138>  // b.any
 c0c:	ldur	x0, [x29, #-16]
 c10:	mov	w1, #0x405                 	// #1029
 c14:	bl	0 <ctf_set_errno>
 c18:	stur	w0, [x29, #-4]
 c1c:	b	d3c <ctf_func_info+0x254>
 c20:	ldur	x8, [x29, #-16]
 c24:	ldr	x8, [x8, #408]
 c28:	ldur	x9, [x29, #-16]
 c2c:	ldr	x9, [x9, #424]
 c30:	ldur	x10, [x29, #-24]
 c34:	ldr	w11, [x9, x10, lsl #2]
 c38:	mov	w9, w11
 c3c:	add	x8, x8, x9
 c40:	str	x8, [sp, #32]
 c44:	ldr	x8, [sp, #32]
 c48:	add	x9, x8, #0x4
 c4c:	str	x9, [sp, #32]
 c50:	ldr	w11, [x8]
 c54:	str	w11, [sp, #28]
 c58:	ldur	x8, [x29, #-16]
 c5c:	ldr	x8, [x8]
 c60:	ldr	x8, [x8]
 c64:	ldr	w0, [sp, #28]
 c68:	blr	x8
 c6c:	str	w0, [sp, #24]
 c70:	ldur	x8, [x29, #-16]
 c74:	ldr	x8, [x8]
 c78:	ldr	x8, [x8, #16]
 c7c:	ldr	w0, [sp, #28]
 c80:	blr	x8
 c84:	str	w0, [sp, #20]
 c88:	ldr	w11, [sp, #24]
 c8c:	cbnz	w11, cac <ctf_func_info+0x1c4>
 c90:	ldr	w8, [sp, #20]
 c94:	cbnz	w8, cac <ctf_func_info+0x1c4>
 c98:	ldur	x0, [x29, #-16]
 c9c:	mov	w1, #0x405                 	// #1029
 ca0:	bl	0 <ctf_set_errno>
 ca4:	stur	w0, [x29, #-4]
 ca8:	b	d3c <ctf_func_info+0x254>
 cac:	ldr	w8, [sp, #24]
 cb0:	cmp	w8, #0x5
 cb4:	b.eq	ccc <ctf_func_info+0x1e4>  // b.none
 cb8:	ldur	x0, [x29, #-16]
 cbc:	mov	w1, #0x3ef                 	// #1007
 cc0:	bl	0 <ctf_set_errno>
 cc4:	stur	w0, [x29, #-4]
 cc8:	b	d3c <ctf_func_info+0x254>
 ccc:	ldr	x8, [sp, #32]
 cd0:	add	x9, x8, #0x4
 cd4:	str	x9, [sp, #32]
 cd8:	ldr	w10, [x8]
 cdc:	mov	w8, w10
 ce0:	ldur	x9, [x29, #-32]
 ce4:	str	x8, [x9]
 ce8:	ldr	w10, [sp, #20]
 cec:	ldur	x8, [x29, #-32]
 cf0:	str	w10, [x8, #8]
 cf4:	ldur	x8, [x29, #-32]
 cf8:	str	wzr, [x8, #12]
 cfc:	ldr	w10, [sp, #20]
 d00:	cbz	w10, d38 <ctf_func_info+0x250>
 d04:	ldr	x8, [sp, #32]
 d08:	ldr	w9, [sp, #20]
 d0c:	subs	w9, w9, #0x1
 d10:	ldr	w9, [x8, w9, uxtw #2]
 d14:	cbnz	w9, d38 <ctf_func_info+0x250>
 d18:	ldur	x8, [x29, #-32]
 d1c:	ldr	w9, [x8, #12]
 d20:	orr	w9, w9, #0x1
 d24:	str	w9, [x8, #12]
 d28:	ldur	x8, [x29, #-32]
 d2c:	ldr	w9, [x8, #8]
 d30:	subs	w9, w9, #0x1
 d34:	str	w9, [x8, #8]
 d38:	stur	wzr, [x29, #-4]
 d3c:	ldur	w0, [x29, #-4]
 d40:	ldp	x29, x30, [sp, #80]
 d44:	add	sp, sp, #0x60
 d48:	ret

0000000000000d4c <ctf_func_args>:
 d4c:	sub	sp, sp, #0x60
 d50:	stp	x29, x30, [sp, #80]
 d54:	add	x29, sp, #0x50
 d58:	add	x8, sp, #0x10
 d5c:	stur	x0, [x29, #-16]
 d60:	stur	x1, [x29, #-24]
 d64:	stur	w2, [x29, #-28]
 d68:	str	x3, [sp, #40]
 d6c:	ldur	x0, [x29, #-16]
 d70:	ldur	x1, [x29, #-24]
 d74:	mov	x2, x8
 d78:	bl	ae8 <ctf_func_info>
 d7c:	cmp	w0, #0x0
 d80:	cset	w9, ge  // ge = tcont
 d84:	tbnz	w9, #0, d94 <ctf_func_args+0x48>
 d88:	mov	w8, #0xffffffff            	// #-1
 d8c:	stur	w8, [x29, #-4]
 d90:	b	e28 <ctf_func_args+0xdc>
 d94:	ldur	x8, [x29, #-16]
 d98:	ldr	x8, [x8, #408]
 d9c:	ldur	x9, [x29, #-16]
 da0:	ldr	x9, [x9, #424]
 da4:	ldur	x10, [x29, #-24]
 da8:	ldr	w11, [x9, x10, lsl #2]
 dac:	mov	w9, w11
 db0:	add	x8, x8, x9
 db4:	add	x8, x8, #0x8
 db8:	str	x8, [sp, #32]
 dbc:	ldur	w11, [x29, #-28]
 dc0:	ldr	w12, [sp, #24]
 dc4:	cmp	w11, w12
 dc8:	b.cs	dd8 <ctf_func_args+0x8c>  // b.hs, b.nlast
 dcc:	ldur	w8, [x29, #-28]
 dd0:	str	w8, [sp, #12]
 dd4:	b	de0 <ctf_func_args+0x94>
 dd8:	ldr	w8, [sp, #24]
 ddc:	str	w8, [sp, #12]
 de0:	ldr	w8, [sp, #12]
 de4:	stur	w8, [x29, #-28]
 de8:	ldur	w8, [x29, #-28]
 dec:	cbz	w8, e24 <ctf_func_args+0xd8>
 df0:	ldr	x8, [sp, #32]
 df4:	add	x9, x8, #0x4
 df8:	str	x9, [sp, #32]
 dfc:	ldr	w10, [x8]
 e00:	mov	w8, w10
 e04:	ldr	x9, [sp, #40]
 e08:	add	x11, x9, #0x8
 e0c:	str	x11, [sp, #40]
 e10:	str	x8, [x9]
 e14:	ldur	w8, [x29, #-28]
 e18:	subs	w8, w8, #0x1
 e1c:	stur	w8, [x29, #-28]
 e20:	b	de8 <ctf_func_args+0x9c>
 e24:	stur	wzr, [x29, #-4]
 e28:	ldur	w0, [x29, #-4]
 e2c:	ldp	x29, x30, [sp, #80]
 e30:	add	sp, sp, #0x60
 e34:	ret

ctf-open.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_set_ctl_hashes>:
       0:	sub	sp, sp, #0x40
       4:	stp	x29, x30, [sp, #48]
       8:	add	x29, sp, #0x30
       c:	adrp	x8, 0 <ctf_set_ctl_hashes>
      10:	add	x8, x8, #0x0
      14:	adrp	x9, 0 <ctf_set_ctl_hashes>
      18:	add	x9, x9, #0x0
      1c:	adrp	x10, 0 <ctf_set_ctl_hashes>
      20:	add	x10, x10, #0x0
      24:	adrp	x11, b5 <ctf_set_ctl_hashes+0xb5>
      28:	add	x11, x11, #0x0
      2c:	mov	x12, xzr
      30:	stur	x0, [x29, #-8]
      34:	ldur	x13, [x29, #-8]
      38:	str	x8, [x13, #216]
      3c:	ldur	x8, [x29, #-8]
      40:	ldr	x0, [x8, #216]
      44:	stur	x9, [x29, #-16]
      48:	str	x10, [sp, #24]
      4c:	str	x11, [sp, #16]
      50:	str	x12, [sp, #8]
      54:	bl	0 <strlen>
      58:	ldur	x8, [x29, #-8]
      5c:	str	x0, [x8, #224]
      60:	ldur	x8, [x29, #-8]
      64:	add	x8, x8, #0x98
      68:	ldur	x9, [x29, #-8]
      6c:	str	x8, [x9, #232]
      70:	ldur	x8, [x29, #-8]
      74:	ldur	x9, [x29, #-16]
      78:	str	x9, [x8, #240]
      7c:	ldur	x8, [x29, #-8]
      80:	ldr	x0, [x8, #240]
      84:	bl	0 <strlen>
      88:	ldur	x8, [x29, #-8]
      8c:	str	x0, [x8, #248]
      90:	ldur	x8, [x29, #-8]
      94:	add	x8, x8, #0xa8
      98:	ldur	x9, [x29, #-8]
      9c:	str	x8, [x9, #256]
      a0:	ldur	x8, [x29, #-8]
      a4:	ldr	x9, [sp, #24]
      a8:	str	x9, [x8, #264]
      ac:	ldur	x8, [x29, #-8]
      b0:	ldr	x0, [x8, #264]
      b4:	bl	0 <strlen>
      b8:	ldur	x8, [x29, #-8]
      bc:	str	x0, [x8, #272]
      c0:	ldur	x8, [x29, #-8]
      c4:	add	x8, x8, #0xb8
      c8:	ldur	x9, [x29, #-8]
      cc:	str	x8, [x9, #280]
      d0:	ldur	x8, [x29, #-8]
      d4:	ldr	x9, [sp, #16]
      d8:	str	x9, [x8, #288]
      dc:	ldur	x8, [x29, #-8]
      e0:	ldr	x0, [x8, #288]
      e4:	bl	0 <strlen>
      e8:	ldur	x8, [x29, #-8]
      ec:	str	x0, [x8, #296]
      f0:	ldur	x8, [x29, #-8]
      f4:	add	x8, x8, #0xc8
      f8:	ldur	x9, [x29, #-8]
      fc:	str	x8, [x9, #304]
     100:	ldur	x8, [x29, #-8]
     104:	ldr	x9, [sp, #8]
     108:	str	x9, [x8, #312]
     10c:	ldur	x8, [x29, #-8]
     110:	str	xzr, [x8, #320]
     114:	ldur	x8, [x29, #-8]
     118:	str	x9, [x8, #328]
     11c:	ldp	x29, x30, [sp, #48]
     120:	add	sp, sp, #0x40
     124:	ret

0000000000000128 <ctf_simple_open>:
     128:	sub	sp, sp, #0x60
     12c:	stp	x29, x30, [sp, #80]
     130:	add	x29, sp, #0x50
     134:	mov	x8, xzr
     138:	stur	x0, [x29, #-8]
     13c:	stur	x1, [x29, #-16]
     140:	stur	x2, [x29, #-24]
     144:	stur	x3, [x29, #-32]
     148:	str	x4, [sp, #40]
     14c:	str	x5, [sp, #32]
     150:	str	x6, [sp, #24]
     154:	str	x7, [sp, #16]
     158:	ldur	x0, [x29, #-8]
     15c:	ldur	x1, [x29, #-16]
     160:	ldur	x2, [x29, #-24]
     164:	ldur	x3, [x29, #-32]
     168:	ldr	x4, [sp, #40]
     16c:	ldr	x5, [sp, #32]
     170:	ldr	x6, [sp, #24]
     174:	ldr	x9, [sp, #16]
     178:	mov	x7, x8
     17c:	mov	x8, sp
     180:	str	wzr, [x8]
     184:	mov	x8, sp
     188:	str	x9, [x8, #8]
     18c:	bl	19c <ctf_simple_open_internal>
     190:	ldp	x29, x30, [sp, #80]
     194:	add	sp, sp, #0x60
     198:	ret

000000000000019c <ctf_simple_open_internal>:
     19c:	sub	sp, sp, #0x100
     1a0:	stp	x29, x30, [sp, #240]
     1a4:	add	x29, sp, #0xf0
     1a8:	sub	x8, x29, #0x70
     1ac:	ldr	w9, [x29, #16]
     1b0:	ldr	x10, [x29, #24]
     1b4:	mov	x11, xzr
     1b8:	adrp	x12, b0 <ctf_set_ctl_hashes+0xb0>
     1bc:	add	x12, x12, #0x0
     1c0:	mov	x13, #0x1                   	// #1
     1c4:	stur	x0, [x29, #-8]
     1c8:	stur	x1, [x29, #-16]
     1cc:	stur	x2, [x29, #-24]
     1d0:	stur	x3, [x29, #-32]
     1d4:	stur	x4, [x29, #-40]
     1d8:	stur	x5, [x29, #-48]
     1dc:	stur	x6, [x29, #-56]
     1e0:	stur	x7, [x29, #-64]
     1e4:	stur	w9, [x29, #-68]
     1e8:	stur	x10, [x29, #-80]
     1ec:	str	x11, [sp, #24]
     1f0:	str	x11, [sp, #16]
     1f4:	str	x11, [sp, #8]
     1f8:	stur	x12, [x29, #-112]
     1fc:	stur	x13, [x29, #-88]
     200:	ldur	x10, [x29, #-8]
     204:	str	x8, [sp]
     208:	cbz	x10, 238 <ctf_simple_open_internal+0x9c>
     20c:	ldur	q0, [x29, #-112]
     210:	add	x8, sp, #0x60
     214:	str	q0, [sp, #96]
     218:	ldr	x9, [sp]
     21c:	ldr	q0, [x9, #16]
     220:	str	q0, [sp, #112]
     224:	ldur	x10, [x29, #-8]
     228:	str	x10, [x8, #8]
     22c:	ldur	x10, [x29, #-16]
     230:	str	x10, [sp, #112]
     234:	str	x8, [sp, #24]
     238:	ldur	x8, [x29, #-24]
     23c:	cbz	x8, 274 <ctf_simple_open_internal+0xd8>
     240:	ldur	q0, [x29, #-112]
     244:	add	x8, sp, #0x40
     248:	str	q0, [sp, #64]
     24c:	ldr	x9, [sp]
     250:	ldr	q0, [x9, #16]
     254:	str	q0, [sp, #80]
     258:	ldur	x10, [x29, #-24]
     25c:	str	x10, [x8, #8]
     260:	ldur	x10, [x29, #-32]
     264:	str	x10, [sp, #80]
     268:	ldur	x10, [x29, #-40]
     26c:	str	x10, [sp, #88]
     270:	str	x8, [sp, #16]
     274:	ldur	x8, [x29, #-48]
     278:	cbz	x8, 2a8 <ctf_simple_open_internal+0x10c>
     27c:	ldur	q0, [x29, #-112]
     280:	add	x8, sp, #0x20
     284:	str	q0, [sp, #32]
     288:	ldr	x9, [sp]
     28c:	ldr	q0, [x9, #16]
     290:	str	q0, [sp, #48]
     294:	ldur	x10, [x29, #-48]
     298:	str	x10, [x8, #8]
     29c:	ldur	x10, [x29, #-56]
     2a0:	str	x10, [sp, #48]
     2a4:	str	x8, [sp, #8]
     2a8:	ldr	x0, [sp, #24]
     2ac:	ldr	x1, [sp, #16]
     2b0:	ldr	x2, [sp, #8]
     2b4:	ldur	x3, [x29, #-64]
     2b8:	ldur	w4, [x29, #-68]
     2bc:	ldur	x5, [x29, #-80]
     2c0:	bl	2d0 <ctf_bufopen_internal>
     2c4:	ldp	x29, x30, [sp, #240]
     2c8:	add	sp, sp, #0x100
     2cc:	ret

00000000000002d0 <ctf_bufopen_internal>:
     2d0:	sub	sp, sp, #0xb0
     2d4:	stp	x29, x30, [sp, #160]
     2d8:	add	x29, sp, #0xa0
     2dc:	mov	x8, #0x34                  	// #52
     2e0:	adrp	x9, b5 <ctf_set_ctl_hashes+0xb5>
     2e4:	add	x9, x9, #0x0
     2e8:	stur	x0, [x29, #-16]
     2ec:	stur	x1, [x29, #-24]
     2f0:	stur	x2, [x29, #-32]
     2f4:	stur	x3, [x29, #-40]
     2f8:	stur	w4, [x29, #-44]
     2fc:	stur	x5, [x29, #-56]
     300:	stur	x8, [x29, #-72]
     304:	str	wzr, [sp, #68]
     308:	str	x9, [sp, #24]
     30c:	bl	0 <libctf_init_debug>
     310:	ldur	x8, [x29, #-16]
     314:	cbz	x8, 330 <ctf_bufopen_internal+0x60>
     318:	ldur	x8, [x29, #-24]
     31c:	cbz	x8, 344 <ctf_bufopen_internal+0x74>
     320:	ldur	x8, [x29, #-32]
     324:	cbnz	x8, 344 <ctf_bufopen_internal+0x74>
     328:	ldur	x8, [x29, #-40]
     32c:	cbnz	x8, 344 <ctf_bufopen_internal+0x74>
     330:	ldur	x0, [x29, #-56]
     334:	mov	w1, #0x16                  	// #22
     338:	bl	0 <ctf_set_open_errno>
     33c:	stur	x0, [x29, #-8]
     340:	b	d94 <ctf_bufopen_internal+0xac4>
     344:	ldur	x8, [x29, #-24]
     348:	cbz	x8, 380 <ctf_bufopen_internal+0xb0>
     34c:	ldur	x8, [x29, #-24]
     350:	ldr	x8, [x8, #24]
     354:	cmp	x8, #0x10
     358:	b.eq	380 <ctf_bufopen_internal+0xb0>  // b.none
     35c:	ldur	x8, [x29, #-24]
     360:	ldr	x8, [x8, #24]
     364:	cmp	x8, #0x18
     368:	b.eq	380 <ctf_bufopen_internal+0xb0>  // b.none
     36c:	ldur	x0, [x29, #-56]
     370:	mov	w1, #0x3ec                 	// #1004
     374:	bl	0 <ctf_set_open_errno>
     378:	stur	x0, [x29, #-8]
     37c:	b	d94 <ctf_bufopen_internal+0xac4>
     380:	ldur	x8, [x29, #-24]
     384:	cbz	x8, 3a8 <ctf_bufopen_internal+0xd8>
     388:	ldur	x8, [x29, #-24]
     38c:	ldr	x8, [x8, #8]
     390:	cbnz	x8, 3a8 <ctf_bufopen_internal+0xd8>
     394:	ldur	x0, [x29, #-56]
     398:	mov	w1, #0x3ed                 	// #1005
     39c:	bl	0 <ctf_set_open_errno>
     3a0:	stur	x0, [x29, #-8]
     3a4:	b	d94 <ctf_bufopen_internal+0xac4>
     3a8:	ldur	x8, [x29, #-32]
     3ac:	cbz	x8, 3d0 <ctf_bufopen_internal+0x100>
     3b0:	ldur	x8, [x29, #-32]
     3b4:	ldr	x8, [x8, #8]
     3b8:	cbnz	x8, 3d0 <ctf_bufopen_internal+0x100>
     3bc:	ldur	x0, [x29, #-56]
     3c0:	mov	w1, #0x3ee                 	// #1006
     3c4:	bl	0 <ctf_set_open_errno>
     3c8:	stur	x0, [x29, #-8]
     3cc:	b	d94 <ctf_bufopen_internal+0xac4>
     3d0:	ldur	x8, [x29, #-16]
     3d4:	ldr	x8, [x8, #16]
     3d8:	cmp	x8, #0x4
     3dc:	b.cs	3f4 <ctf_bufopen_internal+0x124>  // b.hs, b.nlast
     3e0:	ldur	x0, [x29, #-56]
     3e4:	mov	w1, #0x3f1                 	// #1009
     3e8:	bl	0 <ctf_set_open_errno>
     3ec:	stur	x0, [x29, #-8]
     3f0:	b	d94 <ctf_bufopen_internal+0xac4>
     3f4:	ldur	x8, [x29, #-16]
     3f8:	ldr	x8, [x8, #8]
     3fc:	stur	x8, [x29, #-64]
     400:	ldur	x8, [x29, #-64]
     404:	ldrh	w1, [x8]
     408:	ldur	x8, [x29, #-64]
     40c:	ldrb	w2, [x8, #2]
     410:	adrp	x0, 0 <ctf_set_ctl_hashes>
     414:	add	x0, x0, #0x0
     418:	bl	0 <ctf_dprintf>
     41c:	ldur	x8, [x29, #-64]
     420:	ldrh	w9, [x8]
     424:	mov	w10, #0xdff2                	// #57330
     428:	cmp	w9, w10
     42c:	cset	w9, ne  // ne = any
     430:	and	w9, w9, #0x1
     434:	mov	w0, w9
     438:	sxtw	x8, w0
     43c:	cbz	x8, 4a8 <ctf_bufopen_internal+0x1d8>
     440:	ldur	x8, [x29, #-64]
     444:	ldrh	w9, [x8]
     448:	mov	w0, #0xffffdff2            	// #-8206
     44c:	str	w9, [sp, #20]
     450:	bl	df0 <__bswap_16>
     454:	and	w9, w0, #0xffff
     458:	ldr	w10, [sp, #20]
     45c:	cmp	w10, w9
     460:	b.ne	494 <ctf_bufopen_internal+0x1c4>  // b.any
     464:	ldur	x8, [x29, #-64]
     468:	ldrb	w9, [x8, #2]
     46c:	cmp	w9, #0x4
     470:	b.eq	488 <ctf_bufopen_internal+0x1b8>  // b.none
     474:	ldur	x0, [x29, #-56]
     478:	mov	w1, #0x3ea                 	// #1002
     47c:	bl	0 <ctf_set_open_errno>
     480:	stur	x0, [x29, #-8]
     484:	b	d94 <ctf_bufopen_internal+0xac4>
     488:	mov	w8, #0x1                   	// #1
     48c:	str	w8, [sp, #68]
     490:	b	4a8 <ctf_bufopen_internal+0x1d8>
     494:	ldur	x0, [x29, #-56]
     498:	mov	w1, #0x3f1                 	// #1009
     49c:	bl	0 <ctf_set_open_errno>
     4a0:	stur	x0, [x29, #-8]
     4a4:	b	d94 <ctf_bufopen_internal+0xac4>
     4a8:	ldur	x8, [x29, #-64]
     4ac:	ldrb	w9, [x8, #2]
     4b0:	mov	w10, #0x1                   	// #1
     4b4:	cmp	w9, #0x1
     4b8:	str	w10, [sp, #16]
     4bc:	b.lt	4d4 <ctf_bufopen_internal+0x204>  // b.tstop
     4c0:	ldur	x8, [x29, #-64]
     4c4:	ldrb	w9, [x8, #2]
     4c8:	cmp	w9, #0x4
     4cc:	cset	w9, gt
     4d0:	str	w9, [sp, #16]
     4d4:	ldr	w8, [sp, #16]
     4d8:	and	w8, w8, #0x1
     4dc:	mov	w0, w8
     4e0:	sxtw	x9, w0
     4e4:	cbz	x9, 4fc <ctf_bufopen_internal+0x22c>
     4e8:	ldur	x0, [x29, #-56]
     4ec:	mov	w1, #0x3ea                 	// #1002
     4f0:	bl	0 <ctf_set_open_errno>
     4f4:	stur	x0, [x29, #-8]
     4f8:	b	d94 <ctf_bufopen_internal+0xac4>
     4fc:	ldur	x8, [x29, #-24]
     500:	cbz	x8, 53c <ctf_bufopen_internal+0x26c>
     504:	ldur	x8, [x29, #-64]
     508:	ldrb	w9, [x8, #2]
     50c:	cmp	w9, #0x3
     510:	b.ge	53c <ctf_bufopen_internal+0x26c>  // b.tcont
     514:	ldur	x8, [x29, #-64]
     518:	ldrb	w1, [x8, #2]
     51c:	adrp	x0, 0 <ctf_set_ctl_hashes>
     520:	add	x0, x0, #0x0
     524:	bl	0 <ctf_dprintf>
     528:	ldur	x0, [x29, #-56]
     52c:	mov	w1, #0x40a                 	// #1034
     530:	bl	0 <ctf_set_open_errno>
     534:	stur	x0, [x29, #-8]
     538:	b	d94 <ctf_bufopen_internal+0xac4>
     53c:	ldur	x8, [x29, #-64]
     540:	ldrb	w9, [x8, #2]
     544:	cmp	w9, #0x4
     548:	b.ge	554 <ctf_bufopen_internal+0x284>  // b.tcont
     54c:	mov	x8, #0x28                  	// #40
     550:	stur	x8, [x29, #-72]
     554:	ldur	x8, [x29, #-16]
     558:	ldr	x8, [x8, #16]
     55c:	ldur	x9, [x29, #-72]
     560:	cmp	x8, x9
     564:	b.cs	57c <ctf_bufopen_internal+0x2ac>  // b.hs, b.nlast
     568:	ldur	x0, [x29, #-56]
     56c:	mov	w1, #0x3f1                 	// #1009
     570:	bl	0 <ctf_set_open_errno>
     574:	stur	x0, [x29, #-8]
     578:	b	d94 <ctf_bufopen_internal+0xac4>
     57c:	mov	x0, #0x2d8                 	// #728
     580:	bl	0 <malloc>
     584:	str	x0, [sp, #72]
     588:	cbnz	x0, 5a0 <ctf_bufopen_internal+0x2d0>
     58c:	ldur	x0, [x29, #-56]
     590:	mov	w1, #0xc                   	// #12
     594:	bl	0 <ctf_set_open_errno>
     598:	stur	x0, [x29, #-8]
     59c:	b	d94 <ctf_bufopen_internal+0xac4>
     5a0:	ldr	x0, [sp, #72]
     5a4:	mov	w8, wzr
     5a8:	mov	w1, w8
     5ac:	mov	x2, #0x2d8                 	// #728
     5b0:	bl	0 <memset>
     5b4:	ldur	w8, [x29, #-44]
     5b8:	cbz	w8, 5cc <ctf_bufopen_internal+0x2fc>
     5bc:	ldr	x8, [sp, #72]
     5c0:	ldr	w9, [x8, #552]
     5c4:	orr	w9, w9, #0x2
     5c8:	str	w9, [x8, #552]
     5cc:	mov	x0, #0x34                  	// #52
     5d0:	bl	0 <malloc>
     5d4:	ldr	x8, [sp, #72]
     5d8:	str	x0, [x8, #8]
     5dc:	cbnz	x0, 5fc <ctf_bufopen_internal+0x32c>
     5e0:	ldr	x0, [sp, #72]
     5e4:	bl	0 <free>
     5e8:	ldur	x0, [x29, #-56]
     5ec:	mov	w1, #0xc                   	// #12
     5f0:	bl	0 <ctf_set_open_errno>
     5f4:	stur	x0, [x29, #-8]
     5f8:	b	d94 <ctf_bufopen_internal+0xac4>
     5fc:	ldr	x8, [sp, #72]
     600:	ldr	x8, [x8, #8]
     604:	str	x8, [sp, #80]
     608:	ldr	x0, [sp, #80]
     60c:	ldur	x8, [x29, #-16]
     610:	ldr	x1, [x8, #8]
     614:	ldur	x2, [x29, #-72]
     618:	bl	0 <memcpy>
     61c:	ldur	x8, [x29, #-64]
     620:	ldrb	w9, [x8, #2]
     624:	cmp	w9, #0x4
     628:	b.ge	634 <ctf_bufopen_internal+0x364>  // b.tcont
     62c:	ldr	x0, [sp, #80]
     630:	bl	e1c <upgrade_header>
     634:	ldr	w8, [sp, #68]
     638:	cbz	w8, 644 <ctf_bufopen_internal+0x374>
     63c:	ldr	x0, [sp, #80]
     640:	bl	ecc <flip_header>
     644:	ldr	x8, [sp, #80]
     648:	ldrb	w9, [x8, #3]
     64c:	ldr	x8, [sp, #72]
     650:	strb	w9, [x8, #16]
     654:	ldr	x8, [sp, #80]
     658:	ldr	w9, [x8, #44]
     65c:	ldr	x8, [sp, #80]
     660:	ldr	w10, [x8, #48]
     664:	add	w9, w9, w10
     668:	mov	w8, w9
     66c:	ubfx	x8, x8, #0, #32
     670:	ldr	x11, [sp, #72]
     674:	str	x8, [x11, #416]
     678:	ldr	x8, [sp, #72]
     67c:	ldr	x1, [x8, #416]
     680:	adrp	x0, 0 <ctf_set_ctl_hashes>
     684:	add	x0, x0, #0x0
     688:	bl	0 <ctf_dprintf>
     68c:	ldr	x8, [sp, #80]
     690:	ldr	w9, [x8, #16]
     694:	mov	w8, w9
     698:	ldr	x11, [sp, #72]
     69c:	ldr	x11, [x11, #416]
     6a0:	cmp	x8, x11
     6a4:	b.hi	750 <ctf_bufopen_internal+0x480>  // b.pmore
     6a8:	ldr	x8, [sp, #80]
     6ac:	ldr	w9, [x8, #20]
     6b0:	mov	w8, w9
     6b4:	ldr	x10, [sp, #72]
     6b8:	ldr	x10, [x10, #416]
     6bc:	cmp	x8, x10
     6c0:	b.hi	750 <ctf_bufopen_internal+0x480>  // b.pmore
     6c4:	ldr	x8, [sp, #80]
     6c8:	ldr	w9, [x8, #24]
     6cc:	mov	w8, w9
     6d0:	ldr	x10, [sp, #72]
     6d4:	ldr	x10, [x10, #416]
     6d8:	cmp	x8, x10
     6dc:	b.hi	750 <ctf_bufopen_internal+0x480>  // b.pmore
     6e0:	ldr	x8, [sp, #80]
     6e4:	ldr	w9, [x8, #28]
     6e8:	mov	w8, w9
     6ec:	ldr	x10, [sp, #72]
     6f0:	ldr	x10, [x10, #416]
     6f4:	cmp	x8, x10
     6f8:	b.hi	750 <ctf_bufopen_internal+0x480>  // b.pmore
     6fc:	ldr	x8, [sp, #80]
     700:	ldr	w9, [x8, #32]
     704:	mov	w8, w9
     708:	ldr	x10, [sp, #72]
     70c:	ldr	x10, [x10, #416]
     710:	cmp	x8, x10
     714:	b.hi	750 <ctf_bufopen_internal+0x480>  // b.pmore
     718:	ldr	x8, [sp, #80]
     71c:	ldr	w9, [x8, #40]
     720:	mov	w8, w9
     724:	ldr	x10, [sp, #72]
     728:	ldr	x10, [x10, #416]
     72c:	cmp	x8, x10
     730:	b.hi	750 <ctf_bufopen_internal+0x480>  // b.pmore
     734:	ldr	x8, [sp, #80]
     738:	ldr	w9, [x8, #44]
     73c:	mov	w8, w9
     740:	ldr	x10, [sp, #72]
     744:	ldr	x10, [x10, #416]
     748:	cmp	x8, x10
     74c:	b.ls	764 <ctf_bufopen_internal+0x494>  // b.plast
     750:	ldur	x0, [x29, #-56]
     754:	mov	w1, #0x3ef                 	// #1007
     758:	bl	0 <ctf_set_open_errno>
     75c:	stur	x0, [x29, #-8]
     760:	b	d94 <ctf_bufopen_internal+0xac4>
     764:	ldr	x8, [sp, #80]
     768:	ldr	w9, [x8, #16]
     76c:	ldr	x8, [sp, #80]
     770:	ldr	w10, [x8, #20]
     774:	cmp	w9, w10
     778:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     77c:	ldr	x8, [sp, #80]
     780:	ldr	w9, [x8, #20]
     784:	ldr	x8, [sp, #80]
     788:	ldr	w10, [x8, #24]
     78c:	cmp	w9, w10
     790:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     794:	ldr	x8, [sp, #80]
     798:	ldr	w9, [x8, #24]
     79c:	ldr	x8, [sp, #80]
     7a0:	ldr	w10, [x8, #40]
     7a4:	cmp	w9, w10
     7a8:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     7ac:	ldr	x8, [sp, #80]
     7b0:	ldr	w9, [x8, #24]
     7b4:	ldr	x8, [sp, #80]
     7b8:	ldr	w10, [x8, #28]
     7bc:	cmp	w9, w10
     7c0:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     7c4:	ldr	x8, [sp, #80]
     7c8:	ldr	w9, [x8, #28]
     7cc:	ldr	x8, [sp, #80]
     7d0:	ldr	w10, [x8, #32]
     7d4:	cmp	w9, w10
     7d8:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     7dc:	ldr	x8, [sp, #80]
     7e0:	ldr	w9, [x8, #32]
     7e4:	ldr	x8, [sp, #80]
     7e8:	ldr	w10, [x8, #36]
     7ec:	cmp	w9, w10
     7f0:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     7f4:	ldr	x8, [sp, #80]
     7f8:	ldr	w9, [x8, #36]
     7fc:	ldr	x8, [sp, #80]
     800:	ldr	w10, [x8, #40]
     804:	cmp	w9, w10
     808:	b.hi	824 <ctf_bufopen_internal+0x554>  // b.pmore
     80c:	ldr	x8, [sp, #80]
     810:	ldr	w9, [x8, #40]
     814:	ldr	x8, [sp, #80]
     818:	ldr	w10, [x8, #44]
     81c:	cmp	w9, w10
     820:	b.ls	838 <ctf_bufopen_internal+0x568>  // b.plast
     824:	ldur	x0, [x29, #-56]
     828:	mov	w1, #0x3ef                 	// #1007
     82c:	bl	0 <ctf_set_open_errno>
     830:	stur	x0, [x29, #-8]
     834:	b	d94 <ctf_bufopen_internal+0xac4>
     838:	ldr	x8, [sp, #80]
     83c:	ldr	w9, [x8, #16]
     840:	and	w9, w9, #0x3
     844:	cbnz	w9, 8a8 <ctf_bufopen_internal+0x5d8>
     848:	ldr	x8, [sp, #80]
     84c:	ldr	w9, [x8, #20]
     850:	and	w9, w9, #0x2
     854:	cbnz	w9, 8a8 <ctf_bufopen_internal+0x5d8>
     858:	ldr	x8, [sp, #80]
     85c:	ldr	w9, [x8, #24]
     860:	and	w9, w9, #0x2
     864:	cbnz	w9, 8a8 <ctf_bufopen_internal+0x5d8>
     868:	ldr	x8, [sp, #80]
     86c:	ldr	w9, [x8, #28]
     870:	and	w9, w9, #0x2
     874:	cbnz	w9, 8a8 <ctf_bufopen_internal+0x5d8>
     878:	ldr	x8, [sp, #80]
     87c:	ldr	w9, [x8, #32]
     880:	and	w9, w9, #0x2
     884:	cbnz	w9, 8a8 <ctf_bufopen_internal+0x5d8>
     888:	ldr	x8, [sp, #80]
     88c:	ldr	w9, [x8, #36]
     890:	and	w9, w9, #0x3
     894:	cbnz	w9, 8a8 <ctf_bufopen_internal+0x5d8>
     898:	ldr	x8, [sp, #80]
     89c:	ldr	w9, [x8, #40]
     8a0:	and	w9, w9, #0x3
     8a4:	cbz	w9, 8bc <ctf_bufopen_internal+0x5ec>
     8a8:	ldur	x0, [x29, #-56]
     8ac:	mov	w1, #0x3ef                 	// #1007
     8b0:	bl	0 <ctf_set_open_errno>
     8b4:	stur	x0, [x29, #-8]
     8b8:	b	d94 <ctf_bufopen_internal+0xac4>
     8bc:	ldr	x8, [sp, #80]
     8c0:	ldrb	w9, [x8, #3]
     8c4:	and	w9, w9, #0x1
     8c8:	cbz	w9, 9e0 <ctf_bufopen_internal+0x710>
     8cc:	str	wzr, [sp, #36]
     8d0:	ldr	x8, [sp, #72]
     8d4:	ldr	x0, [x8, #416]
     8d8:	bl	0 <malloc>
     8dc:	ldr	x8, [sp, #72]
     8e0:	str	x0, [x8, #392]
     8e4:	cbnz	x0, 8f4 <ctf_bufopen_internal+0x624>
     8e8:	mov	w8, #0x3f6                 	// #1014
     8ec:	str	w8, [sp, #64]
     8f0:	b	d74 <ctf_bufopen_internal+0xaa4>
     8f4:	ldr	x8, [sp, #72]
     8f8:	ldr	x8, [x8, #392]
     8fc:	ldr	x9, [sp, #72]
     900:	str	x8, [x9, #400]
     904:	ldr	x8, [sp, #80]
     908:	ldrb	w10, [x8, #3]
     90c:	and	w10, w10, #0xfffffffe
     910:	strb	w10, [x8, #3]
     914:	ldur	x8, [x29, #-16]
     918:	ldr	x8, [x8, #8]
     91c:	ldur	x9, [x29, #-72]
     920:	add	x8, x8, x9
     924:	str	x8, [sp, #40]
     928:	ldur	x8, [x29, #-16]
     92c:	ldr	x8, [x8, #16]
     930:	ldur	x9, [x29, #-72]
     934:	subs	x8, x8, x9
     938:	str	x8, [sp, #56]
     93c:	ldr	x8, [sp, #72]
     940:	ldr	x8, [x8, #416]
     944:	add	x1, sp, #0x30
     948:	str	x8, [sp, #48]
     94c:	ldr	x8, [sp, #72]
     950:	ldr	x8, [x8, #392]
     954:	ldr	x9, [sp, #72]
     958:	str	x8, [x9, #408]
     95c:	ldr	x8, [sp, #72]
     960:	ldr	x0, [x8, #392]
     964:	ldr	x2, [sp, #40]
     968:	ldr	x3, [sp, #56]
     96c:	bl	0 <uncompress>
     970:	str	w0, [sp, #36]
     974:	cbz	w0, 9a4 <ctf_bufopen_internal+0x6d4>
     978:	ldr	w0, [sp, #36]
     97c:	bl	0 <zError>
     980:	adrp	x8, 0 <ctf_set_ctl_hashes>
     984:	add	x8, x8, #0x0
     988:	str	x0, [sp, #8]
     98c:	mov	x0, x8
     990:	ldr	x1, [sp, #8]
     994:	bl	0 <ctf_dprintf>
     998:	mov	w9, #0x3f7                 	// #1015
     99c:	str	w9, [sp, #64]
     9a0:	b	d74 <ctf_bufopen_internal+0xaa4>
     9a4:	ldr	x8, [sp, #48]
     9a8:	ldr	x9, [sp, #72]
     9ac:	ldr	x9, [x9, #416]
     9b0:	cmp	x8, x9
     9b4:	b.eq	9dc <ctf_bufopen_internal+0x70c>  // b.none
     9b8:	ldr	x1, [sp, #48]
     9bc:	ldr	x8, [sp, #72]
     9c0:	ldr	x2, [x8, #416]
     9c4:	adrp	x0, 0 <ctf_set_ctl_hashes>
     9c8:	add	x0, x0, #0x0
     9cc:	bl	0 <ctf_dprintf>
     9d0:	mov	w9, #0x3ef                 	// #1007
     9d4:	str	w9, [sp, #64]
     9d8:	b	d74 <ctf_bufopen_internal+0xaa4>
     9dc:	b	a88 <ctf_bufopen_internal+0x7b8>
     9e0:	ldr	w8, [sp, #68]
     9e4:	cbz	w8, a54 <ctf_bufopen_internal+0x784>
     9e8:	ldr	x8, [sp, #72]
     9ec:	ldr	x0, [x8, #416]
     9f0:	bl	0 <malloc>
     9f4:	ldr	x8, [sp, #72]
     9f8:	str	x0, [x8, #392]
     9fc:	cbnz	x0, a0c <ctf_bufopen_internal+0x73c>
     a00:	mov	w8, #0x3f6                 	// #1014
     a04:	str	w8, [sp, #64]
     a08:	b	d74 <ctf_bufopen_internal+0xaa4>
     a0c:	ldr	x8, [sp, #72]
     a10:	ldr	x8, [x8, #392]
     a14:	ldr	x9, [sp, #72]
     a18:	str	x8, [x9, #400]
     a1c:	ldr	x8, [sp, #72]
     a20:	ldr	x0, [x8, #392]
     a24:	ldur	x8, [x29, #-16]
     a28:	ldr	x8, [x8, #8]
     a2c:	ldur	x9, [x29, #-72]
     a30:	add	x1, x8, x9
     a34:	ldr	x8, [sp, #72]
     a38:	ldr	x2, [x8, #416]
     a3c:	bl	0 <memcpy>
     a40:	ldr	x8, [sp, #72]
     a44:	ldr	x8, [x8, #392]
     a48:	ldr	x9, [sp, #72]
     a4c:	str	x8, [x9, #408]
     a50:	b	a88 <ctf_bufopen_internal+0x7b8>
     a54:	ldur	x8, [x29, #-16]
     a58:	ldr	x8, [x8, #8]
     a5c:	ldr	x9, [sp, #72]
     a60:	str	x8, [x9, #392]
     a64:	ldr	x8, [sp, #72]
     a68:	mov	x9, xzr
     a6c:	str	x9, [x8, #400]
     a70:	ldr	x8, [sp, #72]
     a74:	ldr	x8, [x8, #392]
     a78:	ldur	x9, [x29, #-72]
     a7c:	add	x8, x8, x9
     a80:	ldr	x9, [sp, #72]
     a84:	str	x8, [x9, #408]
     a88:	ldr	x0, [sp, #72]
     a8c:	ldr	x1, [sp, #80]
     a90:	ldr	x8, [sp, #80]
     a94:	ldrb	w2, [x8, #2]
     a98:	bl	fd8 <ctf_set_version>
     a9c:	ldr	x0, [sp, #72]
     aa0:	bl	0 <ctf_str_create_atoms>
     aa4:	ldr	x8, [sp, #72]
     aa8:	mov	w9, #0x7fffffff            	// #2147483647
     aac:	str	w9, [x8, #544]
     ab0:	ldr	x8, [sp, #72]
     ab4:	ldur	x10, [x29, #-16]
     ab8:	ldr	q0, [x10]
     abc:	stur	q0, [x8, #24]
     ac0:	ldr	q0, [x10, #16]
     ac4:	stur	q0, [x8, #40]
     ac8:	ldur	x8, [x29, #-24]
     acc:	cbz	x8, b00 <ctf_bufopen_internal+0x830>
     ad0:	ldr	x8, [sp, #72]
     ad4:	ldur	x9, [x29, #-24]
     ad8:	ldr	q0, [x9]
     adc:	stur	q0, [x8, #56]
     ae0:	ldr	q0, [x9, #16]
     ae4:	stur	q0, [x8, #72]
     ae8:	ldr	x8, [sp, #72]
     aec:	ldur	x9, [x29, #-32]
     af0:	ldr	q0, [x9]
     af4:	stur	q0, [x8, #88]
     af8:	ldr	q0, [x9, #16]
     afc:	stur	q0, [x8, #104]
     b00:	ldr	x8, [sp, #72]
     b04:	ldr	x8, [x8, #24]
     b08:	cbz	x8, b30 <ctf_bufopen_internal+0x860>
     b0c:	ldr	x8, [sp, #72]
     b10:	ldr	x0, [x8, #24]
     b14:	bl	0 <strdup>
     b18:	ldr	x8, [sp, #72]
     b1c:	str	x0, [x8, #24]
     b20:	cbnz	x0, b30 <ctf_bufopen_internal+0x860>
     b24:	mov	w8, #0xc                   	// #12
     b28:	str	w8, [sp, #64]
     b2c:	b	d74 <ctf_bufopen_internal+0xaa4>
     b30:	ldr	x8, [sp, #72]
     b34:	ldr	x8, [x8, #56]
     b38:	cbz	x8, b60 <ctf_bufopen_internal+0x890>
     b3c:	ldr	x8, [sp, #72]
     b40:	ldr	x0, [x8, #56]
     b44:	bl	0 <strdup>
     b48:	ldr	x8, [sp, #72]
     b4c:	str	x0, [x8, #56]
     b50:	cbnz	x0, b60 <ctf_bufopen_internal+0x890>
     b54:	mov	w8, #0xc                   	// #12
     b58:	str	w8, [sp, #64]
     b5c:	b	d74 <ctf_bufopen_internal+0xaa4>
     b60:	ldr	x8, [sp, #72]
     b64:	ldr	x8, [x8, #88]
     b68:	cbz	x8, b90 <ctf_bufopen_internal+0x8c0>
     b6c:	ldr	x8, [sp, #72]
     b70:	ldr	x0, [x8, #88]
     b74:	bl	0 <strdup>
     b78:	ldr	x8, [sp, #72]
     b7c:	str	x0, [x8, #88]
     b80:	cbnz	x0, b90 <ctf_bufopen_internal+0x8c0>
     b84:	mov	w8, #0xc                   	// #12
     b88:	str	w8, [sp, #64]
     b8c:	b	d74 <ctf_bufopen_internal+0xaa4>
     b90:	ldr	x8, [sp, #72]
     b94:	ldr	x8, [x8, #24]
     b98:	cbnz	x8, ba8 <ctf_bufopen_internal+0x8d8>
     b9c:	ldr	x8, [sp, #72]
     ba0:	ldr	x9, [sp, #24]
     ba4:	str	x9, [x8, #24]
     ba8:	ldr	x8, [sp, #72]
     bac:	ldr	x8, [x8, #56]
     bb0:	cbnz	x8, bc0 <ctf_bufopen_internal+0x8f0>
     bb4:	ldr	x8, [sp, #72]
     bb8:	ldr	x9, [sp, #24]
     bbc:	str	x9, [x8, #56]
     bc0:	ldr	x8, [sp, #72]
     bc4:	ldr	x8, [x8, #88]
     bc8:	cbnz	x8, bd8 <ctf_bufopen_internal+0x908>
     bcc:	ldr	x8, [sp, #72]
     bd0:	ldr	x9, [sp, #24]
     bd4:	str	x9, [x8, #88]
     bd8:	ldur	x8, [x29, #-32]
     bdc:	cbz	x8, c00 <ctf_bufopen_internal+0x930>
     be0:	ldur	x8, [x29, #-32]
     be4:	ldr	x8, [x8, #8]
     be8:	ldr	x9, [sp, #72]
     bec:	str	x8, [x9, #352]
     bf0:	ldur	x8, [x29, #-32]
     bf4:	ldr	x8, [x8, #16]
     bf8:	ldr	x9, [sp, #72]
     bfc:	str	x8, [x9, #360]
     c00:	ldur	x8, [x29, #-40]
     c04:	ldr	x9, [sp, #72]
     c08:	str	x8, [x9, #128]
     c0c:	ldr	w10, [sp, #68]
     c10:	cbz	w10, c44 <ctf_bufopen_internal+0x974>
     c14:	ldr	x0, [sp, #80]
     c18:	ldr	x8, [sp, #72]
     c1c:	ldr	x1, [x8, #408]
     c20:	bl	1028 <flip_ctf>
     c24:	str	w0, [sp, #64]
     c28:	cbz	w0, c44 <ctf_bufopen_internal+0x974>
     c2c:	ldr	x0, [sp, #72]
     c30:	ldr	x1, [sp, #80]
     c34:	ldr	x8, [sp, #72]
     c38:	ldr	x2, [x8, #392]
     c3c:	bl	11b4 <ctf_set_base>
     c40:	b	d74 <ctf_bufopen_internal+0xaa4>
     c44:	ldr	x0, [sp, #72]
     c48:	ldr	x1, [sp, #80]
     c4c:	ldr	x8, [sp, #72]
     c50:	ldr	x2, [x8, #392]
     c54:	bl	11b4 <ctf_set_base>
     c58:	ldr	x8, [sp, #72]
     c5c:	ldr	w9, [x8, #552]
     c60:	and	w9, w9, #0x2
     c64:	cbz	w9, c80 <ctf_bufopen_internal+0x9b0>
     c68:	ldr	x8, [sp, #72]
     c6c:	mov	w9, #0x1                   	// #1
     c70:	str	w9, [x8, #548]
     c74:	ldr	x8, [sp, #72]
     c78:	stur	x8, [x29, #-8]
     c7c:	b	d94 <ctf_bufopen_internal+0xac4>
     c80:	ldr	x0, [sp, #72]
     c84:	ldr	x1, [sp, #80]
     c88:	bl	136c <init_types>
     c8c:	str	w0, [sp, #64]
     c90:	cbz	w0, c98 <ctf_bufopen_internal+0x9c8>
     c94:	b	d74 <ctf_bufopen_internal+0xaa4>
     c98:	ldur	x8, [x29, #-24]
     c9c:	cbz	x8, d10 <ctf_bufopen_internal+0xa40>
     ca0:	ldur	x8, [x29, #-24]
     ca4:	ldr	x8, [x8, #16]
     ca8:	ldur	x9, [x29, #-24]
     cac:	ldr	x9, [x9, #24]
     cb0:	udiv	x8, x8, x9
     cb4:	ldr	x9, [sp, #72]
     cb8:	str	x8, [x9, #432]
     cbc:	ldr	x8, [sp, #72]
     cc0:	ldr	x8, [x8, #432]
     cc4:	mov	x9, #0x4                   	// #4
     cc8:	mul	x0, x8, x9
     ccc:	bl	0 <malloc>
     cd0:	ldr	x8, [sp, #72]
     cd4:	str	x0, [x8, #424]
     cd8:	ldr	x8, [sp, #72]
     cdc:	ldr	x8, [x8, #424]
     ce0:	cbnz	x8, cf0 <ctf_bufopen_internal+0xa20>
     ce4:	mov	w8, #0xc                   	// #12
     ce8:	str	w8, [sp, #64]
     cec:	b	d74 <ctf_bufopen_internal+0xaa4>
     cf0:	ldr	x0, [sp, #72]
     cf4:	ldr	x1, [sp, #80]
     cf8:	ldur	x2, [x29, #-24]
     cfc:	ldur	x3, [x29, #-32]
     d00:	bl	2068 <init_symtab>
     d04:	str	w0, [sp, #64]
     d08:	cbz	w0, d10 <ctf_bufopen_internal+0xa40>
     d0c:	b	d74 <ctf_bufopen_internal+0xaa4>
     d10:	ldr	x0, [sp, #72]
     d14:	bl	0 <ctf_set_ctl_hashes>
     d18:	ldur	x8, [x29, #-24]
     d1c:	cbz	x8, d50 <ctf_bufopen_internal+0xa80>
     d20:	ldur	x8, [x29, #-24]
     d24:	ldr	x8, [x8, #24]
     d28:	cmp	x8, #0x18
     d2c:	b.ne	d40 <ctf_bufopen_internal+0xa70>  // b.any
     d30:	ldr	x0, [sp, #72]
     d34:	mov	w1, #0x2                   	// #2
     d38:	bl	2354 <ctf_setmodel>
     d3c:	b	d4c <ctf_bufopen_internal+0xa7c>
     d40:	ldr	x0, [sp, #72]
     d44:	mov	w1, #0x1                   	// #1
     d48:	bl	2354 <ctf_setmodel>
     d4c:	b	d5c <ctf_bufopen_internal+0xa8c>
     d50:	ldr	x0, [sp, #72]
     d54:	mov	w1, #0x2                   	// #2
     d58:	bl	2354 <ctf_setmodel>
     d5c:	ldr	x8, [sp, #72]
     d60:	mov	w9, #0x1                   	// #1
     d64:	str	w9, [x8, #548]
     d68:	ldr	x8, [sp, #72]
     d6c:	stur	x8, [x29, #-8]
     d70:	b	d94 <ctf_bufopen_internal+0xac4>
     d74:	ldur	x0, [x29, #-56]
     d78:	ldr	w1, [sp, #64]
     d7c:	bl	0 <ctf_set_open_errno>
     d80:	ldr	x8, [sp, #72]
     d84:	mov	x0, x8
     d88:	bl	23d8 <ctf_file_close>
     d8c:	mov	x8, xzr
     d90:	stur	x8, [x29, #-8]
     d94:	ldur	x0, [x29, #-8]
     d98:	ldp	x29, x30, [sp, #160]
     d9c:	add	sp, sp, #0xb0
     da0:	ret

0000000000000da4 <ctf_bufopen>:
     da4:	sub	sp, sp, #0x30
     da8:	stp	x29, x30, [sp, #32]
     dac:	add	x29, sp, #0x20
     db0:	mov	x8, xzr
     db4:	mov	w9, wzr
     db8:	stur	x0, [x29, #-8]
     dbc:	str	x1, [sp, #16]
     dc0:	str	x2, [sp, #8]
     dc4:	str	x3, [sp]
     dc8:	ldur	x0, [x29, #-8]
     dcc:	ldr	x1, [sp, #16]
     dd0:	ldr	x2, [sp, #8]
     dd4:	ldr	x5, [sp]
     dd8:	mov	x3, x8
     ddc:	mov	w4, w9
     de0:	bl	2d0 <ctf_bufopen_internal>
     de4:	ldp	x29, x30, [sp, #32]
     de8:	add	sp, sp, #0x30
     dec:	ret

0000000000000df0 <__bswap_16>:
     df0:	sub	sp, sp, #0x10
     df4:	strh	w0, [sp, #14]
     df8:	ldrh	w8, [sp, #14]
     dfc:	asr	w8, w8, #8
     e00:	and	w8, w8, #0xff
     e04:	ldrh	w9, [sp, #14]
     e08:	and	w9, w9, #0xff
     e0c:	orr	w8, w8, w9, lsl #8
     e10:	mov	w0, w8
     e14:	add	sp, sp, #0x10
     e18:	ret

0000000000000e1c <upgrade_header>:
     e1c:	sub	sp, sp, #0x10
     e20:	str	x0, [sp, #8]
     e24:	ldr	x8, [sp, #8]
     e28:	str	x8, [sp]
     e2c:	ldr	x8, [sp]
     e30:	ldr	w9, [x8, #36]
     e34:	ldr	x8, [sp, #8]
     e38:	str	w9, [x8, #48]
     e3c:	ldr	x8, [sp]
     e40:	ldr	w9, [x8, #32]
     e44:	ldr	x8, [sp, #8]
     e48:	str	w9, [x8, #44]
     e4c:	ldr	x8, [sp]
     e50:	ldr	w9, [x8, #28]
     e54:	ldr	x8, [sp, #8]
     e58:	str	w9, [x8, #40]
     e5c:	ldr	x8, [sp]
     e60:	ldr	w9, [x8, #24]
     e64:	ldr	x8, [sp, #8]
     e68:	str	w9, [x8, #36]
     e6c:	ldr	x8, [sp, #8]
     e70:	ldr	w9, [x8, #36]
     e74:	ldr	x8, [sp, #8]
     e78:	str	w9, [x8, #32]
     e7c:	ldr	x8, [sp, #8]
     e80:	ldr	w9, [x8, #32]
     e84:	ldr	x8, [sp, #8]
     e88:	str	w9, [x8, #28]
     e8c:	ldr	x8, [sp]
     e90:	ldr	w9, [x8, #20]
     e94:	ldr	x8, [sp, #8]
     e98:	str	w9, [x8, #24]
     e9c:	ldr	x8, [sp]
     ea0:	ldr	w9, [x8, #16]
     ea4:	ldr	x8, [sp, #8]
     ea8:	str	w9, [x8, #20]
     eac:	ldr	x8, [sp]
     eb0:	ldr	w9, [x8, #12]
     eb4:	ldr	x8, [sp, #8]
     eb8:	str	w9, [x8, #16]
     ebc:	ldr	x8, [sp, #8]
     ec0:	str	wzr, [x8, #12]
     ec4:	add	sp, sp, #0x10
     ec8:	ret

0000000000000ecc <flip_header>:
     ecc:	sub	sp, sp, #0x20
     ed0:	stp	x29, x30, [sp, #16]
     ed4:	add	x29, sp, #0x10
     ed8:	str	x0, [sp, #8]
     edc:	ldr	x8, [sp, #8]
     ee0:	ldrh	w0, [x8]
     ee4:	bl	df0 <__bswap_16>
     ee8:	ldr	x8, [sp, #8]
     eec:	strh	w0, [x8]
     ef0:	ldr	x8, [sp, #8]
     ef4:	ldr	w0, [x8, #4]
     ef8:	bl	29b8 <__bswap_32>
     efc:	ldr	x8, [sp, #8]
     f00:	str	w0, [x8, #4]
     f04:	ldr	x8, [sp, #8]
     f08:	ldr	w0, [x8, #8]
     f0c:	bl	29b8 <__bswap_32>
     f10:	ldr	x8, [sp, #8]
     f14:	str	w0, [x8, #8]
     f18:	ldr	x8, [sp, #8]
     f1c:	ldr	w0, [x8, #12]
     f20:	bl	29b8 <__bswap_32>
     f24:	ldr	x8, [sp, #8]
     f28:	str	w0, [x8, #12]
     f2c:	ldr	x8, [sp, #8]
     f30:	ldr	w0, [x8, #20]
     f34:	bl	29b8 <__bswap_32>
     f38:	ldr	x8, [sp, #8]
     f3c:	str	w0, [x8, #20]
     f40:	ldr	x8, [sp, #8]
     f44:	ldr	w0, [x8, #24]
     f48:	bl	29b8 <__bswap_32>
     f4c:	ldr	x8, [sp, #8]
     f50:	str	w0, [x8, #24]
     f54:	ldr	x8, [sp, #8]
     f58:	ldr	w0, [x8, #28]
     f5c:	bl	29b8 <__bswap_32>
     f60:	ldr	x8, [sp, #8]
     f64:	str	w0, [x8, #28]
     f68:	ldr	x8, [sp, #8]
     f6c:	ldr	w0, [x8, #32]
     f70:	bl	29b8 <__bswap_32>
     f74:	ldr	x8, [sp, #8]
     f78:	str	w0, [x8, #32]
     f7c:	ldr	x8, [sp, #8]
     f80:	ldr	w0, [x8, #36]
     f84:	bl	29b8 <__bswap_32>
     f88:	ldr	x8, [sp, #8]
     f8c:	str	w0, [x8, #36]
     f90:	ldr	x8, [sp, #8]
     f94:	ldr	w0, [x8, #40]
     f98:	bl	29b8 <__bswap_32>
     f9c:	ldr	x8, [sp, #8]
     fa0:	str	w0, [x8, #40]
     fa4:	ldr	x8, [sp, #8]
     fa8:	ldr	w0, [x8, #44]
     fac:	bl	29b8 <__bswap_32>
     fb0:	ldr	x8, [sp, #8]
     fb4:	str	w0, [x8, #44]
     fb8:	ldr	x8, [sp, #8]
     fbc:	ldr	w0, [x8, #48]
     fc0:	bl	29b8 <__bswap_32>
     fc4:	ldr	x8, [sp, #8]
     fc8:	str	w0, [x8, #48]
     fcc:	ldp	x29, x30, [sp, #16]
     fd0:	add	sp, sp, #0x20
     fd4:	ret

0000000000000fd8 <ctf_set_version>:
     fd8:	sub	sp, sp, #0x20
     fdc:	adrp	x8, 0 <ctf_set_ctl_hashes>
     fe0:	add	x8, x8, #0x0
     fe4:	str	x0, [sp, #24]
     fe8:	str	x1, [sp, #16]
     fec:	str	w2, [sp, #12]
     ff0:	ldr	w9, [sp, #12]
     ff4:	ldr	x10, [sp, #24]
     ff8:	str	w9, [x10, #560]
     ffc:	ldr	w9, [sp, #12]
    1000:	ldr	x10, [sp, #16]
    1004:	strb	w9, [x10, #2]
    1008:	ldrsw	x10, [sp, #12]
    100c:	mov	x11, #0x28                  	// #40
    1010:	mul	x10, x11, x10
    1014:	add	x8, x8, x10
    1018:	ldr	x10, [sp, #24]
    101c:	str	x8, [x10]
    1020:	add	sp, sp, #0x20
    1024:	ret

0000000000001028 <flip_ctf>:
    1028:	sub	sp, sp, #0x20
    102c:	stp	x29, x30, [sp, #16]
    1030:	add	x29, sp, #0x10
    1034:	str	x0, [sp, #8]
    1038:	str	x1, [sp]
    103c:	ldr	x8, [sp]
    1040:	ldr	x9, [sp, #8]
    1044:	ldr	w10, [x9, #16]
    1048:	mov	w9, w10
    104c:	add	x0, x8, x9
    1050:	ldr	x8, [sp, #8]
    1054:	ldr	w10, [x8, #20]
    1058:	ldr	x8, [sp, #8]
    105c:	ldr	w11, [x8, #16]
    1060:	subs	w10, w10, w11
    1064:	mov	w8, w10
    1068:	ubfx	x1, x8, #0, #32
    106c:	bl	2e78 <flip_lbls>
    1070:	ldr	x8, [sp]
    1074:	ldr	x9, [sp, #8]
    1078:	ldr	w10, [x9, #20]
    107c:	mov	w9, w10
    1080:	add	x0, x8, x9
    1084:	ldr	x8, [sp, #8]
    1088:	ldr	w10, [x8, #24]
    108c:	ldr	x8, [sp, #8]
    1090:	ldr	w11, [x8, #20]
    1094:	subs	w10, w10, w11
    1098:	mov	w8, w10
    109c:	ubfx	x1, x8, #0, #32
    10a0:	bl	2f04 <flip_objts>
    10a4:	ldr	x8, [sp]
    10a8:	ldr	x9, [sp, #8]
    10ac:	ldr	w10, [x9, #24]
    10b0:	mov	w9, w10
    10b4:	add	x0, x8, x9
    10b8:	ldr	x8, [sp, #8]
    10bc:	ldr	w10, [x8, #28]
    10c0:	ldr	x8, [sp, #8]
    10c4:	ldr	w11, [x8, #24]
    10c8:	subs	w10, w10, w11
    10cc:	mov	w8, w10
    10d0:	ubfx	x1, x8, #0, #32
    10d4:	bl	2f04 <flip_objts>
    10d8:	ldr	x8, [sp]
    10dc:	ldr	x9, [sp, #8]
    10e0:	ldr	w10, [x9, #28]
    10e4:	mov	w9, w10
    10e8:	add	x0, x8, x9
    10ec:	ldr	x8, [sp, #8]
    10f0:	ldr	w10, [x8, #32]
    10f4:	ldr	x8, [sp, #8]
    10f8:	ldr	w11, [x8, #28]
    10fc:	subs	w10, w10, w11
    1100:	mov	w8, w10
    1104:	ubfx	x1, x8, #0, #32
    1108:	bl	2f04 <flip_objts>
    110c:	ldr	x8, [sp]
    1110:	ldr	x9, [sp, #8]
    1114:	ldr	w10, [x9, #32]
    1118:	mov	w9, w10
    111c:	add	x0, x8, x9
    1120:	ldr	x8, [sp, #8]
    1124:	ldr	w10, [x8, #36]
    1128:	ldr	x8, [sp, #8]
    112c:	ldr	w11, [x8, #32]
    1130:	subs	w10, w10, w11
    1134:	mov	w8, w10
    1138:	ubfx	x1, x8, #0, #32
    113c:	bl	2f04 <flip_objts>
    1140:	ldr	x8, [sp]
    1144:	ldr	x9, [sp, #8]
    1148:	ldr	w10, [x9, #36]
    114c:	mov	w9, w10
    1150:	add	x0, x8, x9
    1154:	ldr	x8, [sp, #8]
    1158:	ldr	w10, [x8, #40]
    115c:	ldr	x8, [sp, #8]
    1160:	ldr	w11, [x8, #36]
    1164:	subs	w10, w10, w11
    1168:	mov	w8, w10
    116c:	ubfx	x1, x8, #0, #32
    1170:	bl	2f7c <flip_vars>
    1174:	ldr	x8, [sp]
    1178:	ldr	x9, [sp, #8]
    117c:	ldr	w10, [x9, #40]
    1180:	mov	w9, w10
    1184:	add	x0, x8, x9
    1188:	ldr	x8, [sp, #8]
    118c:	ldr	w10, [x8, #44]
    1190:	ldr	x8, [sp, #8]
    1194:	ldr	w11, [x8, #40]
    1198:	subs	w10, w10, w11
    119c:	mov	w8, w10
    11a0:	ubfx	x1, x8, #0, #32
    11a4:	bl	3008 <flip_types>
    11a8:	ldp	x29, x30, [sp, #16]
    11ac:	add	sp, sp, #0x20
    11b0:	ret

00000000000011b4 <ctf_set_base>:
    11b4:	sub	sp, sp, #0x40
    11b8:	stp	x29, x30, [sp, #48]
    11bc:	add	x29, sp, #0x30
    11c0:	mov	x8, #0x8                   	// #8
    11c4:	stur	x0, [x29, #-8]
    11c8:	stur	x1, [x29, #-16]
    11cc:	str	x2, [sp, #24]
    11d0:	ldr	x9, [sp, #24]
    11d4:	ldur	x10, [x29, #-8]
    11d8:	ldr	x10, [x10, #408]
    11dc:	ldur	x11, [x29, #-8]
    11e0:	ldr	x11, [x11, #392]
    11e4:	subs	x10, x10, x11
    11e8:	add	x9, x9, x10
    11ec:	ldur	x10, [x29, #-8]
    11f0:	str	x9, [x10, #408]
    11f4:	ldr	x9, [sp, #24]
    11f8:	ldur	x10, [x29, #-8]
    11fc:	str	x9, [x10, #392]
    1200:	ldur	x9, [x29, #-8]
    1204:	ldr	x9, [x9, #408]
    1208:	ldur	x10, [x29, #-16]
    120c:	ldr	w12, [x10, #36]
    1210:	mov	w10, w12
    1214:	add	x9, x9, x10
    1218:	ldur	x10, [x29, #-8]
    121c:	str	x9, [x10, #464]
    1220:	ldur	x9, [x29, #-16]
    1224:	ldr	w12, [x9, #40]
    1228:	ldur	x9, [x29, #-16]
    122c:	ldr	w13, [x9, #36]
    1230:	subs	w12, w12, w13
    1234:	mov	w9, w12
    1238:	ubfx	x9, x9, #0, #32
    123c:	udiv	x8, x9, x8
    1240:	ldur	x9, [x29, #-8]
    1244:	str	x8, [x9, #472]
    1248:	ldur	x8, [x29, #-8]
    124c:	ldr	x8, [x8, #408]
    1250:	ldur	x9, [x29, #-16]
    1254:	ldr	w12, [x9, #44]
    1258:	mov	w9, w12
    125c:	add	x8, x8, x9
    1260:	ldur	x9, [x29, #-8]
    1264:	str	x8, [x9, #336]
    1268:	ldur	x8, [x29, #-16]
    126c:	ldr	w12, [x8, #48]
    1270:	mov	w8, w12
    1274:	ldur	x9, [x29, #-8]
    1278:	str	x8, [x9, #344]
    127c:	ldur	x8, [x29, #-16]
    1280:	ldr	w12, [x8, #4]
    1284:	cbz	w12, 12a0 <ctf_set_base+0xec>
    1288:	ldur	x0, [x29, #-8]
    128c:	ldur	x8, [x29, #-16]
    1290:	ldr	w1, [x8, #4]
    1294:	bl	0 <ctf_strptr>
    1298:	ldur	x8, [x29, #-8]
    129c:	str	x0, [x8, #520]
    12a0:	ldur	x8, [x29, #-16]
    12a4:	ldr	w9, [x8, #8]
    12a8:	cbz	w9, 12c4 <ctf_set_base+0x110>
    12ac:	ldur	x0, [x29, #-8]
    12b0:	ldur	x8, [x29, #-16]
    12b4:	ldr	w1, [x8, #8]
    12b8:	bl	0 <ctf_strptr>
    12bc:	ldur	x8, [x29, #-8]
    12c0:	str	x0, [x8, #528]
    12c4:	ldur	x8, [x29, #-16]
    12c8:	ldr	w9, [x8, #12]
    12cc:	cbz	w9, 12e8 <ctf_set_base+0x134>
    12d0:	ldur	x0, [x29, #-8]
    12d4:	ldur	x8, [x29, #-16]
    12d8:	ldr	w1, [x8, #12]
    12dc:	bl	0 <ctf_strptr>
    12e0:	ldur	x8, [x29, #-8]
    12e4:	str	x0, [x8, #496]
    12e8:	ldur	x8, [x29, #-8]
    12ec:	ldr	x8, [x8, #496]
    12f0:	cbz	x8, 1308 <ctf_set_base+0x154>
    12f4:	ldur	x8, [x29, #-8]
    12f8:	ldr	x1, [x8, #496]
    12fc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1300:	add	x0, x0, #0x0
    1304:	bl	0 <ctf_dprintf>
    1308:	ldur	x8, [x29, #-8]
    130c:	ldr	x8, [x8, #528]
    1310:	cbz	x8, 1360 <ctf_set_base+0x1ac>
    1314:	ldur	x8, [x29, #-8]
    1318:	ldr	x1, [x8, #528]
    131c:	ldur	x8, [x29, #-8]
    1320:	ldr	x8, [x8, #520]
    1324:	str	x1, [sp, #16]
    1328:	cbz	x8, 133c <ctf_set_base+0x188>
    132c:	ldur	x8, [x29, #-8]
    1330:	ldr	x8, [x8, #520]
    1334:	str	x8, [sp, #8]
    1338:	b	1348 <ctf_set_base+0x194>
    133c:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1340:	add	x8, x8, #0x0
    1344:	str	x8, [sp, #8]
    1348:	ldr	x8, [sp, #8]
    134c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1350:	add	x0, x0, #0x0
    1354:	ldr	x1, [sp, #16]
    1358:	mov	x2, x8
    135c:	bl	0 <ctf_dprintf>
    1360:	ldp	x29, x30, [sp, #48]
    1364:	add	sp, sp, #0x40
    1368:	ret

000000000000136c <init_types>:
    136c:	stp	x29, x30, [sp, #-32]!
    1370:	str	x28, [sp, #16]
    1374:	mov	x29, sp
    1378:	sub	sp, sp, #0x3d0
    137c:	mov	x2, #0x200                 	// #512
    1380:	mov	w8, wzr
    1384:	adrp	x9, 0 <ctf_hash_string>
    1388:	add	x9, x9, #0x0
    138c:	adrp	x10, 0 <ctf_hash_eq_string>
    1390:	add	x10, x10, #0x0
    1394:	add	x11, sp, #0x1a8
    1398:	stur	x0, [x29, #-16]
    139c:	stur	x1, [x29, #-24]
    13a0:	mov	x0, x11
    13a4:	mov	w1, w8
    13a8:	str	x9, [sp, #280]
    13ac:	str	x10, [sp, #272]
    13b0:	bl	0 <memset>
    13b4:	ldur	x9, [x29, #-24]
    13b8:	ldr	w8, [x9, #8]
    13bc:	cmp	w8, #0x0
    13c0:	cset	w8, ne  // ne = any
    13c4:	and	w8, w8, #0x1
    13c8:	str	w8, [sp, #396]
    13cc:	str	wzr, [sp, #392]
    13d0:	str	wzr, [sp, #388]
    13d4:	ldur	x9, [x29, #-16]
    13d8:	ldr	w8, [x9, #552]
    13dc:	and	w8, w8, #0x2
    13e0:	cbnz	w8, 13e8 <init_types+0x7c>
    13e4:	b	1408 <init_types+0x9c>
    13e8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    13ec:	add	x0, x0, #0x0
    13f0:	adrp	x1, 0 <ctf_set_ctl_hashes>
    13f4:	add	x1, x1, #0x0
    13f8:	mov	w2, #0x29c                 	// #668
    13fc:	adrp	x3, 0 <ctf_set_ctl_hashes>
    1400:	add	x3, x3, #0x0
    1404:	bl	0 <__assert_fail>
    1408:	ldur	x8, [x29, #-16]
    140c:	ldr	w9, [x8, #560]
    1410:	cmp	w9, #0x1
    1414:	cset	w9, eq  // eq = none
    1418:	and	w9, w9, #0x1
    141c:	mov	w0, w9
    1420:	sxtw	x8, w0
    1424:	cbz	x8, 1448 <init_types+0xdc>
    1428:	ldur	x0, [x29, #-16]
    142c:	ldur	x1, [x29, #-24]
    1430:	bl	34fc <upgrade_types>
    1434:	str	w0, [sp, #380]
    1438:	cbz	w0, 1448 <init_types+0xdc>
    143c:	ldr	w8, [sp, #380]
    1440:	stur	w8, [x29, #-4]
    1444:	b	2054 <init_types+0xce8>
    1448:	ldur	x8, [x29, #-16]
    144c:	ldr	x8, [x8, #408]
    1450:	ldur	x9, [x29, #-24]
    1454:	ldr	w10, [x9, #40]
    1458:	mov	w9, w10
    145c:	add	x8, x8, x9
    1460:	stur	x8, [x29, #-32]
    1464:	ldur	x8, [x29, #-16]
    1468:	ldr	x8, [x8, #408]
    146c:	ldur	x9, [x29, #-24]
    1470:	ldr	w10, [x9, #44]
    1474:	mov	w9, w10
    1478:	add	x8, x8, x9
    147c:	stur	x8, [x29, #-40]
    1480:	ldur	x8, [x29, #-32]
    1484:	str	x8, [sp, #416]
    1488:	ldr	x8, [sp, #416]
    148c:	ldur	x9, [x29, #-40]
    1490:	cmp	x8, x9
    1494:	b.cs	15dc <init_types+0x270>  // b.hs, b.nlast
    1498:	ldur	x8, [x29, #-16]
    149c:	ldr	x8, [x8]
    14a0:	ldr	x8, [x8]
    14a4:	ldr	x9, [sp, #416]
    14a8:	ldr	w0, [x9, #4]
    14ac:	blr	x8
    14b0:	strh	w0, [sp, #378]
    14b4:	ldur	x8, [x29, #-16]
    14b8:	ldr	x8, [x8]
    14bc:	ldr	x8, [x8, #16]
    14c0:	ldr	x9, [sp, #416]
    14c4:	ldr	w0, [x9, #4]
    14c8:	blr	x8
    14cc:	mov	w8, w0
    14d0:	ubfx	x8, x8, #0, #32
    14d4:	str	x8, [sp, #368]
    14d8:	ldur	x0, [x29, #-16]
    14dc:	ldr	x1, [sp, #416]
    14e0:	add	x2, sp, #0x168
    14e4:	add	x3, sp, #0x160
    14e8:	bl	3574 <ctf_get_ctt_size>
    14ec:	ldur	x8, [x29, #-16]
    14f0:	ldr	x8, [x8]
    14f4:	ldr	x8, [x8, #32]
    14f8:	ldrh	w10, [sp, #378]
    14fc:	ldr	x1, [sp, #360]
    1500:	ldr	x2, [sp, #368]
    1504:	mov	w0, w10
    1508:	blr	x8
    150c:	str	x0, [sp, #344]
    1510:	ldr	x8, [sp, #344]
    1514:	cmp	x8, #0x0
    1518:	cset	w10, ge  // ge = tcont
    151c:	tbnz	w10, #0, 152c <init_types+0x1c0>
    1520:	mov	w8, #0x3ef                 	// #1007
    1524:	stur	w8, [x29, #-4]
    1528:	b	2054 <init_types+0xce8>
    152c:	ldrh	w8, [sp, #378]
    1530:	cmp	w8, #0x9
    1534:	b.ne	158c <init_types+0x220>  // b.any
    1538:	ldr	x8, [sp, #416]
    153c:	ldr	w9, [x8, #8]
    1540:	cbz	w9, 1554 <init_types+0x1e8>
    1544:	ldr	x8, [sp, #416]
    1548:	ldr	w9, [x8, #8]
    154c:	cmp	w9, #0x3f
    1550:	b.cc	1564 <init_types+0x1f8>  // b.lo, b.ul, b.last
    1554:	ldr	x8, [sp, #472]
    1558:	add	x8, x8, #0x1
    155c:	str	x8, [sp, #472]
    1560:	b	158c <init_types+0x220>
    1564:	ldr	x8, [sp, #416]
    1568:	mov	x9, #0x8                   	// #8
    156c:	ldr	w10, [x8, #8]
    1570:	mov	w8, w10
    1574:	mul	x8, x9, x8
    1578:	add	x9, sp, #0x1a8
    157c:	add	x8, x9, x8
    1580:	ldr	x9, [x8]
    1584:	add	x9, x9, #0x1
    1588:	str	x9, [x8]
    158c:	ldr	x8, [sp, #416]
    1590:	ldr	x9, [sp, #352]
    1594:	add	x8, x8, x9
    1598:	ldr	x9, [sp, #344]
    159c:	add	x8, x8, x9
    15a0:	str	x8, [sp, #416]
    15a4:	ldrh	w10, [sp, #378]
    15a8:	mov	w8, w10
    15ac:	mov	x9, #0x8                   	// #8
    15b0:	mul	x8, x9, x8
    15b4:	add	x9, sp, #0x1a8
    15b8:	add	x8, x9, x8
    15bc:	ldr	x9, [x8]
    15c0:	add	x9, x9, #0x1
    15c4:	str	x9, [x8]
    15c8:	ldur	x8, [x29, #-16]
    15cc:	ldr	x9, [x8, #480]
    15d0:	add	x9, x9, #0x1
    15d4:	str	x9, [x8, #480]
    15d8:	b	1488 <init_types+0x11c>
    15dc:	ldr	w8, [sp, #396]
    15e0:	cbz	w8, 1608 <init_types+0x29c>
    15e4:	ldur	x1, [x29, #-16]
    15e8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    15ec:	add	x0, x0, #0x0
    15f0:	bl	0 <ctf_dprintf>
    15f4:	ldur	x8, [x29, #-16]
    15f8:	ldr	w9, [x8, #552]
    15fc:	orr	w9, w9, #0x1
    1600:	str	w9, [x8, #552]
    1604:	b	1618 <init_types+0x2ac>
    1608:	ldur	x1, [x29, #-16]
    160c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1610:	add	x0, x0, #0x0
    1614:	bl	0 <ctf_dprintf>
    1618:	ldr	x0, [sp, #472]
    161c:	ldr	x1, [sp, #280]
    1620:	ldr	x2, [sp, #272]
    1624:	bl	0 <ctf_hash_create>
    1628:	ldur	x8, [x29, #-16]
    162c:	str	x0, [x8, #152]
    1630:	cbnz	x0, 1640 <init_types+0x2d4>
    1634:	mov	w8, #0xc                   	// #12
    1638:	stur	w8, [x29, #-4]
    163c:	b	2054 <init_types+0xce8>
    1640:	ldr	x0, [sp, #480]
    1644:	ldr	x1, [sp, #280]
    1648:	ldr	x2, [sp, #272]
    164c:	bl	0 <ctf_hash_create>
    1650:	ldur	x8, [x29, #-16]
    1654:	str	x0, [x8, #168]
    1658:	cbnz	x0, 1668 <init_types+0x2fc>
    165c:	mov	w8, #0xc                   	// #12
    1660:	stur	w8, [x29, #-4]
    1664:	b	2054 <init_types+0xce8>
    1668:	ldr	x0, [sp, #488]
    166c:	ldr	x1, [sp, #280]
    1670:	ldr	x2, [sp, #272]
    1674:	bl	0 <ctf_hash_create>
    1678:	ldur	x8, [x29, #-16]
    167c:	str	x0, [x8, #184]
    1680:	cbnz	x0, 1690 <init_types+0x324>
    1684:	mov	w8, #0xc                   	// #12
    1688:	stur	w8, [x29, #-4]
    168c:	b	2054 <init_types+0xce8>
    1690:	ldr	x8, [sp, #432]
    1694:	ldr	x9, [sp, #440]
    1698:	add	x8, x8, x9
    169c:	ldr	x9, [sp, #464]
    16a0:	add	x8, x8, x9
    16a4:	ldr	x9, [sp, #504]
    16a8:	add	x8, x8, x9
    16ac:	ldr	x9, [sp, #448]
    16b0:	add	x8, x8, x9
    16b4:	ldr	x9, [sp, #512]
    16b8:	add	x8, x8, x9
    16bc:	ldr	x9, [sp, #520]
    16c0:	add	x8, x8, x9
    16c4:	ldr	x9, [sp, #528]
    16c8:	add	x0, x8, x9
    16cc:	ldr	x1, [sp, #280]
    16d0:	ldr	x2, [sp, #272]
    16d4:	bl	0 <ctf_hash_create>
    16d8:	ldur	x8, [x29, #-16]
    16dc:	str	x0, [x8, #200]
    16e0:	cbnz	x0, 16f0 <init_types+0x384>
    16e4:	mov	w8, #0xc                   	// #12
    16e8:	stur	w8, [x29, #-4]
    16ec:	b	2054 <init_types+0xce8>
    16f0:	ldur	x8, [x29, #-16]
    16f4:	ldr	x8, [x8, #480]
    16f8:	add	x8, x8, #0x1
    16fc:	mov	x9, #0x4                   	// #4
    1700:	mul	x0, x9, x8
    1704:	str	x9, [sp, #264]
    1708:	bl	0 <malloc>
    170c:	ldur	x8, [x29, #-16]
    1710:	str	x0, [x8, #440]
    1714:	ldur	x8, [x29, #-16]
    1718:	ldr	x8, [x8, #480]
    171c:	add	x8, x8, #0x1
    1720:	ldur	x9, [x29, #-16]
    1724:	str	x8, [x9, #456]
    1728:	ldur	x8, [x29, #-16]
    172c:	ldr	x8, [x8, #456]
    1730:	ldr	x9, [sp, #264]
    1734:	mul	x0, x9, x8
    1738:	bl	0 <malloc>
    173c:	ldur	x8, [x29, #-16]
    1740:	str	x0, [x8, #448]
    1744:	ldur	x8, [x29, #-16]
    1748:	ldr	x8, [x8, #440]
    174c:	cbz	x8, 175c <init_types+0x3f0>
    1750:	ldur	x8, [x29, #-16]
    1754:	ldr	x8, [x8, #448]
    1758:	cbnz	x8, 1768 <init_types+0x3fc>
    175c:	mov	w8, #0xc                   	// #12
    1760:	stur	w8, [x29, #-4]
    1764:	b	2054 <init_types+0xce8>
    1768:	ldur	x8, [x29, #-16]
    176c:	ldr	x8, [x8, #440]
    1770:	str	x8, [sp, #400]
    1774:	ldr	x8, [sp, #400]
    1778:	add	x9, x8, #0x4
    177c:	str	x9, [sp, #400]
    1780:	str	wzr, [x8]
    1784:	ldur	x8, [x29, #-16]
    1788:	ldr	x0, [x8, #440]
    178c:	ldur	x8, [x29, #-16]
    1790:	ldr	x8, [x8, #480]
    1794:	add	x8, x8, #0x1
    1798:	mov	x9, #0x4                   	// #4
    179c:	mul	x2, x9, x8
    17a0:	mov	w10, wzr
    17a4:	mov	w1, w10
    17a8:	str	x9, [sp, #256]
    17ac:	str	w10, [sp, #252]
    17b0:	bl	0 <memset>
    17b4:	ldur	x8, [x29, #-16]
    17b8:	ldr	x0, [x8, #448]
    17bc:	ldur	x8, [x29, #-16]
    17c0:	ldr	x8, [x8, #480]
    17c4:	add	x8, x8, #0x1
    17c8:	ldr	x9, [sp, #256]
    17cc:	mul	x2, x9, x8
    17d0:	ldr	w10, [sp, #252]
    17d4:	mov	w1, w10
    17d8:	bl	0 <memset>
    17dc:	mov	w10, #0x1                   	// #1
    17e0:	str	w10, [sp, #412]
    17e4:	ldur	x8, [x29, #-32]
    17e8:	str	x8, [sp, #416]
    17ec:	ldr	x8, [sp, #416]
    17f0:	ldur	x9, [x29, #-40]
    17f4:	cmp	x8, x9
    17f8:	b.cs	1e04 <init_types+0xa98>  // b.hs, b.nlast
    17fc:	ldur	x8, [x29, #-16]
    1800:	ldr	x8, [x8]
    1804:	ldr	x8, [x8]
    1808:	ldr	x9, [sp, #416]
    180c:	ldr	w0, [x9, #4]
    1810:	blr	x8
    1814:	strh	w0, [sp, #342]
    1818:	ldur	x8, [x29, #-16]
    181c:	ldr	x8, [x8]
    1820:	ldr	x8, [x8, #8]
    1824:	ldr	x9, [sp, #416]
    1828:	ldr	w0, [x9, #4]
    182c:	blr	x8
    1830:	strh	w0, [sp, #340]
    1834:	ldur	x8, [x29, #-16]
    1838:	ldr	x8, [x8]
    183c:	ldr	x8, [x8, #16]
    1840:	ldr	x9, [sp, #416]
    1844:	ldr	w0, [x9, #4]
    1848:	blr	x8
    184c:	mov	w8, w0
    1850:	ubfx	x8, x8, #0, #32
    1854:	str	x8, [sp, #328]
    1858:	ldur	x0, [x29, #-16]
    185c:	ldr	x1, [sp, #416]
    1860:	add	x2, sp, #0x140
    1864:	add	x3, sp, #0x138
    1868:	bl	3574 <ctf_get_ctt_size>
    186c:	ldur	x8, [x29, #-16]
    1870:	ldr	x9, [sp, #416]
    1874:	ldr	w1, [x9]
    1878:	mov	x0, x8
    187c:	bl	0 <ctf_strptr>
    1880:	str	x0, [sp, #296]
    1884:	ldur	x8, [x29, #-16]
    1888:	ldr	x8, [x8]
    188c:	ldr	x8, [x8, #32]
    1890:	ldrh	w0, [sp, #342]
    1894:	ldr	x1, [sp, #320]
    1898:	ldr	x2, [sp, #328]
    189c:	blr	x8
    18a0:	str	x0, [sp, #304]
    18a4:	ldrh	w10, [sp, #342]
    18a8:	subs	w10, w10, #0x1
    18ac:	mov	w8, w10
    18b0:	ubfx	x8, x8, #0, #32
    18b4:	cmp	x8, #0xd
    18b8:	str	x8, [sp, #240]
    18bc:	b.hi	1d9c <init_types+0xa30>  // b.pmore
    18c0:	adrp	x8, 0 <ctf_set_ctl_hashes>
    18c4:	add	x8, x8, #0x0
    18c8:	ldr	x11, [sp, #240]
    18cc:	ldrsw	x10, [x8, x11, lsl #2]
    18d0:	add	x9, x8, x10
    18d4:	br	x9
    18d8:	ldur	x8, [x29, #-16]
    18dc:	ldr	x0, [x8, #200]
    18e0:	ldur	x1, [x29, #-16]
    18e4:	ldr	x2, [sp, #296]
    18e8:	bl	0 <ctf_hash_lookup_type>
    18ec:	cbz	x0, 18fc <init_types+0x590>
    18f0:	ldrh	w8, [sp, #340]
    18f4:	and	w8, w8, #0x1
    18f8:	cbz	w8, 1970 <init_types+0x604>
    18fc:	ldur	x8, [x29, #-16]
    1900:	ldr	x0, [x8, #200]
    1904:	ldur	x1, [x29, #-16]
    1908:	ldr	w9, [sp, #396]
    190c:	str	x0, [sp, #232]
    1910:	str	x1, [sp, #224]
    1914:	cbz	w9, 1934 <init_types+0x5c8>
    1918:	ldr	w8, [sp, #412]
    191c:	ldur	x9, [x29, #-16]
    1920:	ldr	w10, [x9, #544]
    1924:	add	w10, w10, #0x1
    1928:	orr	w8, w8, w10
    192c:	str	w8, [sp, #220]
    1930:	b	193c <init_types+0x5d0>
    1934:	ldr	w8, [sp, #412]
    1938:	str	w8, [sp, #220]
    193c:	ldr	w8, [sp, #220]
    1940:	ldr	x9, [sp, #416]
    1944:	ldr	w3, [x9]
    1948:	ldr	x0, [sp, #232]
    194c:	ldr	x1, [sp, #224]
    1950:	mov	w2, w8
    1954:	bl	0 <ctf_hash_define_type>
    1958:	str	w0, [sp, #384]
    195c:	ldr	w8, [sp, #384]
    1960:	cbz	w8, 1970 <init_types+0x604>
    1964:	ldr	w8, [sp, #384]
    1968:	stur	w8, [x29, #-4]
    196c:	b	2054 <init_types+0xce8>
    1970:	b	1db8 <init_types+0xa4c>
    1974:	b	1db8 <init_types+0xa4c>
    1978:	ldur	x8, [x29, #-16]
    197c:	ldr	x0, [x8, #200]
    1980:	ldur	x1, [x29, #-16]
    1984:	ldr	w9, [sp, #396]
    1988:	str	x0, [sp, #208]
    198c:	str	x1, [sp, #200]
    1990:	cbz	w9, 19b0 <init_types+0x644>
    1994:	ldr	w8, [sp, #412]
    1998:	ldur	x9, [x29, #-16]
    199c:	ldr	w10, [x9, #544]
    19a0:	add	w10, w10, #0x1
    19a4:	orr	w8, w8, w10
    19a8:	str	w8, [sp, #196]
    19ac:	b	19b8 <init_types+0x64c>
    19b0:	ldr	w8, [sp, #412]
    19b4:	str	w8, [sp, #196]
    19b8:	ldr	w8, [sp, #196]
    19bc:	ldr	x9, [sp, #416]
    19c0:	ldr	w3, [x9]
    19c4:	ldr	x0, [sp, #208]
    19c8:	ldr	x1, [sp, #200]
    19cc:	mov	w2, w8
    19d0:	bl	0 <ctf_hash_insert_type>
    19d4:	str	w0, [sp, #384]
    19d8:	ldr	w8, [sp, #384]
    19dc:	cbz	w8, 19ec <init_types+0x680>
    19e0:	ldr	w8, [sp, #384]
    19e4:	stur	w8, [x29, #-4]
    19e8:	b	2054 <init_types+0xce8>
    19ec:	b	1db8 <init_types+0xa4c>
    19f0:	ldur	x8, [x29, #-16]
    19f4:	ldr	x0, [x8, #152]
    19f8:	ldur	x1, [x29, #-16]
    19fc:	ldr	w9, [sp, #396]
    1a00:	str	x0, [sp, #184]
    1a04:	str	x1, [sp, #176]
    1a08:	cbz	w9, 1a28 <init_types+0x6bc>
    1a0c:	ldr	w8, [sp, #412]
    1a10:	ldur	x9, [x29, #-16]
    1a14:	ldr	w10, [x9, #544]
    1a18:	add	w10, w10, #0x1
    1a1c:	orr	w8, w8, w10
    1a20:	str	w8, [sp, #172]
    1a24:	b	1a30 <init_types+0x6c4>
    1a28:	ldr	w8, [sp, #412]
    1a2c:	str	w8, [sp, #172]
    1a30:	ldr	w8, [sp, #172]
    1a34:	ldr	x9, [sp, #416]
    1a38:	ldr	w3, [x9]
    1a3c:	ldr	x0, [sp, #184]
    1a40:	ldr	x1, [sp, #176]
    1a44:	mov	w2, w8
    1a48:	bl	0 <ctf_hash_define_type>
    1a4c:	str	w0, [sp, #384]
    1a50:	ldr	w8, [sp, #384]
    1a54:	cbz	w8, 1a64 <init_types+0x6f8>
    1a58:	ldr	w8, [sp, #384]
    1a5c:	stur	w8, [x29, #-4]
    1a60:	b	2054 <init_types+0xce8>
    1a64:	ldr	x8, [sp, #320]
    1a68:	mov	x9, #0x20000000            	// #536870912
    1a6c:	cmp	x8, x9
    1a70:	b.lt	1a80 <init_types+0x714>  // b.tstop
    1a74:	ldr	w8, [sp, #392]
    1a78:	add	w8, w8, #0x1
    1a7c:	str	w8, [sp, #392]
    1a80:	b	1db8 <init_types+0xa4c>
    1a84:	ldur	x8, [x29, #-16]
    1a88:	ldr	x0, [x8, #168]
    1a8c:	ldur	x1, [x29, #-16]
    1a90:	ldr	w9, [sp, #396]
    1a94:	str	x0, [sp, #160]
    1a98:	str	x1, [sp, #152]
    1a9c:	cbz	w9, 1abc <init_types+0x750>
    1aa0:	ldr	w8, [sp, #412]
    1aa4:	ldur	x9, [x29, #-16]
    1aa8:	ldr	w10, [x9, #544]
    1aac:	add	w10, w10, #0x1
    1ab0:	orr	w8, w8, w10
    1ab4:	str	w8, [sp, #148]
    1ab8:	b	1ac4 <init_types+0x758>
    1abc:	ldr	w8, [sp, #412]
    1ac0:	str	w8, [sp, #148]
    1ac4:	ldr	w8, [sp, #148]
    1ac8:	ldr	x9, [sp, #416]
    1acc:	ldr	w3, [x9]
    1ad0:	ldr	x0, [sp, #160]
    1ad4:	ldr	x1, [sp, #152]
    1ad8:	mov	w2, w8
    1adc:	bl	0 <ctf_hash_define_type>
    1ae0:	str	w0, [sp, #384]
    1ae4:	ldr	w8, [sp, #384]
    1ae8:	cbz	w8, 1af8 <init_types+0x78c>
    1aec:	ldr	w8, [sp, #384]
    1af0:	stur	w8, [x29, #-4]
    1af4:	b	2054 <init_types+0xce8>
    1af8:	ldr	x8, [sp, #320]
    1afc:	mov	x9, #0x20000000            	// #536870912
    1b00:	cmp	x8, x9
    1b04:	b.lt	1b14 <init_types+0x7a8>  // b.tstop
    1b08:	ldr	w8, [sp, #388]
    1b0c:	add	w8, w8, #0x1
    1b10:	str	w8, [sp, #388]
    1b14:	b	1db8 <init_types+0xa4c>
    1b18:	ldur	x8, [x29, #-16]
    1b1c:	ldr	x0, [x8, #184]
    1b20:	ldur	x1, [x29, #-16]
    1b24:	ldr	w9, [sp, #396]
    1b28:	str	x0, [sp, #136]
    1b2c:	str	x1, [sp, #128]
    1b30:	cbz	w9, 1b50 <init_types+0x7e4>
    1b34:	ldr	w8, [sp, #412]
    1b38:	ldur	x9, [x29, #-16]
    1b3c:	ldr	w10, [x9, #544]
    1b40:	add	w10, w10, #0x1
    1b44:	orr	w8, w8, w10
    1b48:	str	w8, [sp, #124]
    1b4c:	b	1b58 <init_types+0x7ec>
    1b50:	ldr	w8, [sp, #412]
    1b54:	str	w8, [sp, #124]
    1b58:	ldr	w8, [sp, #124]
    1b5c:	ldr	x9, [sp, #416]
    1b60:	ldr	w3, [x9]
    1b64:	ldr	x0, [sp, #136]
    1b68:	ldr	x1, [sp, #128]
    1b6c:	mov	w2, w8
    1b70:	bl	0 <ctf_hash_define_type>
    1b74:	str	w0, [sp, #384]
    1b78:	ldr	w8, [sp, #384]
    1b7c:	cbz	w8, 1b8c <init_types+0x820>
    1b80:	ldr	w8, [sp, #384]
    1b84:	stur	w8, [x29, #-4]
    1b88:	b	2054 <init_types+0xce8>
    1b8c:	b	1db8 <init_types+0xa4c>
    1b90:	ldur	x8, [x29, #-16]
    1b94:	ldr	x0, [x8, #200]
    1b98:	ldur	x1, [x29, #-16]
    1b9c:	ldr	w9, [sp, #396]
    1ba0:	str	x0, [sp, #112]
    1ba4:	str	x1, [sp, #104]
    1ba8:	cbz	w9, 1bc8 <init_types+0x85c>
    1bac:	ldr	w8, [sp, #412]
    1bb0:	ldur	x9, [x29, #-16]
    1bb4:	ldr	w10, [x9, #544]
    1bb8:	add	w10, w10, #0x1
    1bbc:	orr	w8, w8, w10
    1bc0:	str	w8, [sp, #100]
    1bc4:	b	1bd0 <init_types+0x864>
    1bc8:	ldr	w8, [sp, #412]
    1bcc:	str	w8, [sp, #100]
    1bd0:	ldr	w8, [sp, #100]
    1bd4:	ldr	x9, [sp, #416]
    1bd8:	ldr	w3, [x9]
    1bdc:	ldr	x0, [sp, #112]
    1be0:	ldr	x1, [sp, #104]
    1be4:	mov	w2, w8
    1be8:	bl	0 <ctf_hash_insert_type>
    1bec:	str	w0, [sp, #384]
    1bf0:	ldr	w8, [sp, #384]
    1bf4:	cbz	w8, 1c04 <init_types+0x898>
    1bf8:	ldr	w8, [sp, #384]
    1bfc:	stur	w8, [x29, #-4]
    1c00:	b	2054 <init_types+0xce8>
    1c04:	b	1db8 <init_types+0xa4c>
    1c08:	ldur	x0, [x29, #-16]
    1c0c:	ldr	x8, [sp, #416]
    1c10:	ldr	w1, [x8, #8]
    1c14:	bl	0 <ctf_name_table>
    1c18:	str	x0, [sp, #288]
    1c1c:	ldr	x8, [sp, #288]
    1c20:	ldr	x0, [x8]
    1c24:	ldur	x1, [x29, #-16]
    1c28:	ldr	x2, [sp, #296]
    1c2c:	bl	0 <ctf_hash_lookup_type>
    1c30:	cbnz	x0, 1ca8 <init_types+0x93c>
    1c34:	ldr	x8, [sp, #288]
    1c38:	ldr	x0, [x8]
    1c3c:	ldur	x1, [x29, #-16]
    1c40:	ldr	w9, [sp, #396]
    1c44:	str	x0, [sp, #88]
    1c48:	str	x1, [sp, #80]
    1c4c:	cbz	w9, 1c6c <init_types+0x900>
    1c50:	ldr	w8, [sp, #412]
    1c54:	ldur	x9, [x29, #-16]
    1c58:	ldr	w10, [x9, #544]
    1c5c:	add	w10, w10, #0x1
    1c60:	orr	w8, w8, w10
    1c64:	str	w8, [sp, #76]
    1c68:	b	1c74 <init_types+0x908>
    1c6c:	ldr	w8, [sp, #412]
    1c70:	str	w8, [sp, #76]
    1c74:	ldr	w8, [sp, #76]
    1c78:	ldr	x9, [sp, #416]
    1c7c:	ldr	w3, [x9]
    1c80:	ldr	x0, [sp, #88]
    1c84:	ldr	x1, [sp, #80]
    1c88:	mov	w2, w8
    1c8c:	bl	0 <ctf_hash_insert_type>
    1c90:	str	w0, [sp, #384]
    1c94:	ldr	w8, [sp, #384]
    1c98:	cbz	w8, 1ca8 <init_types+0x93c>
    1c9c:	ldr	w8, [sp, #384]
    1ca0:	stur	w8, [x29, #-4]
    1ca4:	b	2054 <init_types+0xce8>
    1ca8:	b	1db8 <init_types+0xa4c>
    1cac:	ldr	x8, [sp, #416]
    1cb0:	ldr	w9, [x8, #8]
    1cb4:	ldur	x8, [x29, #-16]
    1cb8:	ldr	w10, [x8, #544]
    1cbc:	cmp	w9, w10
    1cc0:	cset	w9, hi  // hi = pmore
    1cc4:	and	w9, w9, #0x1
    1cc8:	ldr	w10, [sp, #396]
    1ccc:	cmp	w9, w10
    1cd0:	b.ne	1d24 <init_types+0x9b8>  // b.any
    1cd4:	ldr	x8, [sp, #416]
    1cd8:	ldr	w9, [x8, #8]
    1cdc:	ldur	x8, [x29, #-16]
    1ce0:	ldr	w10, [x8, #544]
    1ce4:	and	w9, w9, w10
    1ce8:	mov	w8, w9
    1cec:	ubfx	x8, x8, #0, #32
    1cf0:	ldur	x11, [x29, #-16]
    1cf4:	ldr	x11, [x11, #480]
    1cf8:	cmp	x8, x11
    1cfc:	b.hi	1d24 <init_types+0x9b8>  // b.pmore
    1d00:	ldr	w8, [sp, #412]
    1d04:	ldur	x9, [x29, #-16]
    1d08:	ldr	x9, [x9, #448]
    1d0c:	ldr	x10, [sp, #416]
    1d10:	ldr	w11, [x10, #8]
    1d14:	ldur	x10, [x29, #-16]
    1d18:	ldr	w12, [x10, #544]
    1d1c:	and	w11, w11, w12
    1d20:	str	w8, [x9, w11, uxtw #2]
    1d24:	ldur	x8, [x29, #-16]
    1d28:	ldr	x0, [x8, #200]
    1d2c:	ldur	x1, [x29, #-16]
    1d30:	ldr	w9, [sp, #396]
    1d34:	str	x0, [sp, #64]
    1d38:	str	x1, [sp, #56]
    1d3c:	cbz	w9, 1d5c <init_types+0x9f0>
    1d40:	ldr	w8, [sp, #412]
    1d44:	ldur	x9, [x29, #-16]
    1d48:	ldr	w10, [x9, #544]
    1d4c:	add	w10, w10, #0x1
    1d50:	orr	w8, w8, w10
    1d54:	str	w8, [sp, #52]
    1d58:	b	1d64 <init_types+0x9f8>
    1d5c:	ldr	w8, [sp, #412]
    1d60:	str	w8, [sp, #52]
    1d64:	ldr	w8, [sp, #52]
    1d68:	ldr	x9, [sp, #416]
    1d6c:	ldr	w3, [x9]
    1d70:	ldr	x0, [sp, #64]
    1d74:	ldr	x1, [sp, #56]
    1d78:	mov	w2, w8
    1d7c:	bl	0 <ctf_hash_insert_type>
    1d80:	str	w0, [sp, #384]
    1d84:	ldr	w8, [sp, #384]
    1d88:	cbz	w8, 1d98 <init_types+0xa2c>
    1d8c:	ldr	w8, [sp, #384]
    1d90:	stur	w8, [x29, #-4]
    1d94:	b	2054 <init_types+0xce8>
    1d98:	b	1db8 <init_types+0xa4c>
    1d9c:	ldrh	w1, [sp, #342]
    1da0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1da4:	add	x0, x0, #0x0
    1da8:	bl	0 <ctf_dprintf>
    1dac:	mov	w8, #0x3ef                 	// #1007
    1db0:	stur	w8, [x29, #-4]
    1db4:	b	2054 <init_types+0xce8>
    1db8:	ldr	x8, [sp, #416]
    1dbc:	ldur	x9, [x29, #-16]
    1dc0:	ldr	x9, [x9, #408]
    1dc4:	subs	x8, x8, x9
    1dc8:	ldr	x9, [sp, #400]
    1dcc:	str	w8, [x9]
    1dd0:	ldr	x9, [sp, #416]
    1dd4:	ldr	x10, [sp, #312]
    1dd8:	add	x9, x9, x10
    1ddc:	ldr	x10, [sp, #304]
    1de0:	add	x9, x9, x10
    1de4:	str	x9, [sp, #416]
    1de8:	ldr	x8, [sp, #400]
    1dec:	add	x8, x8, #0x4
    1df0:	str	x8, [sp, #400]
    1df4:	ldr	w9, [sp, #412]
    1df8:	add	w9, w9, #0x1
    1dfc:	str	w9, [sp, #412]
    1e00:	b	17ec <init_types+0x480>
    1e04:	ldur	x8, [x29, #-16]
    1e08:	ldr	x1, [x8, #480]
    1e0c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    1e10:	add	x0, x0, #0x0
    1e14:	bl	0 <ctf_dprintf>
    1e18:	ldur	x8, [x29, #-16]
    1e1c:	ldr	x0, [x8, #184]
    1e20:	bl	0 <ctf_hash_size>
    1e24:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1e28:	add	x8, x8, #0x0
    1e2c:	str	w0, [sp, #48]
    1e30:	mov	x0, x8
    1e34:	ldr	w1, [sp, #48]
    1e38:	bl	0 <ctf_dprintf>
    1e3c:	ldur	x8, [x29, #-16]
    1e40:	ldr	x0, [x8, #152]
    1e44:	bl	0 <ctf_hash_size>
    1e48:	ldr	w2, [sp, #392]
    1e4c:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1e50:	add	x8, x8, #0x0
    1e54:	str	w0, [sp, #44]
    1e58:	mov	x0, x8
    1e5c:	ldr	w1, [sp, #44]
    1e60:	bl	0 <ctf_dprintf>
    1e64:	ldur	x8, [x29, #-16]
    1e68:	ldr	x0, [x8, #168]
    1e6c:	bl	0 <ctf_hash_size>
    1e70:	ldr	w2, [sp, #388]
    1e74:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1e78:	add	x8, x8, #0x0
    1e7c:	str	w0, [sp, #40]
    1e80:	mov	x0, x8
    1e84:	ldr	w1, [sp, #40]
    1e88:	bl	0 <ctf_dprintf>
    1e8c:	ldur	x8, [x29, #-16]
    1e90:	ldr	x0, [x8, #200]
    1e94:	bl	0 <ctf_hash_size>
    1e98:	adrp	x8, 0 <ctf_set_ctl_hashes>
    1e9c:	add	x8, x8, #0x0
    1ea0:	str	w0, [sp, #36]
    1ea4:	mov	x0, x8
    1ea8:	ldr	w1, [sp, #36]
    1eac:	bl	0 <ctf_dprintf>
    1eb0:	mov	w9, #0x1                   	// #1
    1eb4:	str	w9, [sp, #412]
    1eb8:	ldr	w8, [sp, #412]
    1ebc:	mov	w9, w8
    1ec0:	ldur	x10, [x29, #-16]
    1ec4:	ldr	x10, [x10, #480]
    1ec8:	cmp	x9, x10
    1ecc:	b.hi	2050 <init_types+0xce4>  // b.pmore
    1ed0:	ldur	x8, [x29, #-16]
    1ed4:	ldr	x8, [x8, #448]
    1ed8:	ldr	w9, [sp, #412]
    1edc:	mov	w10, w9
    1ee0:	ldr	w9, [x8, x10, lsl #2]
    1ee4:	str	w9, [sp, #408]
    1ee8:	cbz	w9, 2040 <init_types+0xcd4>
    1eec:	ldur	x8, [x29, #-16]
    1ef0:	ldr	w9, [x8, #552]
    1ef4:	and	w9, w9, #0x2
    1ef8:	cbz	w9, 1f58 <init_types+0xbec>
    1efc:	ldur	x0, [x29, #-16]
    1f00:	ldur	x8, [x29, #-16]
    1f04:	ldr	w9, [x8, #552]
    1f08:	and	w9, w9, #0x1
    1f0c:	str	x0, [sp, #24]
    1f10:	cbz	w9, 1f30 <init_types+0xbc4>
    1f14:	ldr	w8, [sp, #412]
    1f18:	ldur	x9, [x29, #-16]
    1f1c:	ldr	w10, [x9, #544]
    1f20:	add	w10, w10, #0x1
    1f24:	orr	w8, w8, w10
    1f28:	str	w8, [sp, #20]
    1f2c:	b	1f38 <init_types+0xbcc>
    1f30:	ldr	w8, [sp, #412]
    1f34:	str	w8, [sp, #20]
    1f38:	ldr	w8, [sp, #20]
    1f3c:	mov	w9, w8
    1f40:	ubfx	x1, x9, #0, #32
    1f44:	ldr	x0, [sp, #24]
    1f48:	bl	0 <ctf_dtd_lookup>
    1f4c:	add	x9, x0, #0x18
    1f50:	str	x9, [sp, #8]
    1f54:	b	1f80 <init_types+0xc14>
    1f58:	ldur	x8, [x29, #-16]
    1f5c:	ldr	x8, [x8, #408]
    1f60:	ldur	x9, [x29, #-16]
    1f64:	ldr	x9, [x9, #440]
    1f68:	ldr	w10, [sp, #412]
    1f6c:	mov	w11, w10
    1f70:	ldr	w10, [x9, x11, lsl #2]
    1f74:	mov	w9, w10
    1f78:	add	x8, x8, x9
    1f7c:	str	x8, [sp, #8]
    1f80:	ldr	x8, [sp, #8]
    1f84:	str	x8, [sp, #416]
    1f88:	ldur	x8, [x29, #-16]
    1f8c:	ldr	x8, [x8]
    1f90:	ldr	x8, [x8]
    1f94:	ldr	x9, [sp, #416]
    1f98:	ldr	w0, [x9, #4]
    1f9c:	blr	x8
    1fa0:	cmp	w0, #0xa
    1fa4:	b.ne	2040 <init_types+0xcd4>  // b.any
    1fa8:	ldur	x0, [x29, #-16]
    1fac:	ldr	x8, [sp, #416]
    1fb0:	ldr	w1, [x8]
    1fb4:	bl	0 <ctf_strptr>
    1fb8:	adrp	x1, 0 <ctf_set_ctl_hashes>
    1fbc:	add	x1, x1, #0x0
    1fc0:	bl	0 <strcmp>
    1fc4:	cbnz	w0, 2040 <init_types+0xcd4>
    1fc8:	ldr	x8, [sp, #416]
    1fcc:	ldr	w9, [x8, #8]
    1fd0:	ldur	x8, [x29, #-16]
    1fd4:	ldr	w10, [x8, #544]
    1fd8:	cmp	w9, w10
    1fdc:	cset	w9, hi  // hi = pmore
    1fe0:	and	w9, w9, #0x1
    1fe4:	ldr	w10, [sp, #396]
    1fe8:	cmp	w9, w10
    1fec:	b.ne	2040 <init_types+0xcd4>  // b.any
    1ff0:	ldr	x8, [sp, #416]
    1ff4:	ldr	w9, [x8, #8]
    1ff8:	ldur	x8, [x29, #-16]
    1ffc:	ldr	w10, [x8, #544]
    2000:	and	w9, w9, w10
    2004:	mov	w8, w9
    2008:	ubfx	x8, x8, #0, #32
    200c:	ldur	x11, [x29, #-16]
    2010:	ldr	x11, [x11, #480]
    2014:	cmp	x8, x11
    2018:	b.hi	2040 <init_types+0xcd4>  // b.pmore
    201c:	ldr	w8, [sp, #408]
    2020:	ldur	x9, [x29, #-16]
    2024:	ldr	x9, [x9, #448]
    2028:	ldr	x10, [sp, #416]
    202c:	ldr	w11, [x10, #8]
    2030:	ldur	x10, [x29, #-16]
    2034:	ldr	w12, [x10, #544]
    2038:	and	w11, w11, w12
    203c:	str	w8, [x9, w11, uxtw #2]
    2040:	ldr	w8, [sp, #412]
    2044:	add	w8, w8, #0x1
    2048:	str	w8, [sp, #412]
    204c:	b	1eb8 <init_types+0xb4c>
    2050:	stur	wzr, [x29, #-4]
    2054:	ldur	w0, [x29, #-4]
    2058:	add	sp, sp, #0x3d0
    205c:	ldr	x28, [sp, #16]
    2060:	ldp	x29, x30, [sp], #32
    2064:	ret

0000000000002068 <init_symtab>:
    2068:	sub	sp, sp, #0x90
    206c:	stp	x29, x30, [sp, #128]
    2070:	add	x29, sp, #0x80
    2074:	stur	x0, [x29, #-8]
    2078:	stur	x1, [x29, #-16]
    207c:	stur	x2, [x29, #-24]
    2080:	stur	x3, [x29, #-32]
    2084:	ldur	x8, [x29, #-24]
    2088:	ldr	x8, [x8, #8]
    208c:	stur	x8, [x29, #-40]
    2090:	ldur	x8, [x29, #-8]
    2094:	ldr	x8, [x8, #424]
    2098:	stur	x8, [x29, #-48]
    209c:	ldur	x8, [x29, #-48]
    20a0:	ldur	x9, [x29, #-8]
    20a4:	ldr	x9, [x9, #432]
    20a8:	mov	x10, #0x4                   	// #4
    20ac:	mul	x9, x10, x9
    20b0:	add	x8, x8, x9
    20b4:	stur	x8, [x29, #-56]
    20b8:	ldur	x8, [x29, #-16]
    20bc:	ldr	w11, [x8, #20]
    20c0:	stur	w11, [x29, #-60]
    20c4:	ldur	x8, [x29, #-16]
    20c8:	ldr	w11, [x8, #24]
    20cc:	str	w11, [sp, #64]
    20d0:	ldur	x8, [x29, #-48]
    20d4:	ldur	x9, [x29, #-56]
    20d8:	cmp	x8, x9
    20dc:	b.cs	232c <init_symtab+0x2c4>  // b.hs, b.nlast
    20e0:	ldur	x8, [x29, #-24]
    20e4:	ldr	x8, [x8, #24]
    20e8:	cmp	x8, #0x10
    20ec:	b.ne	2108 <init_symtab+0xa0>  // b.any
    20f0:	ldur	x8, [x29, #-40]
    20f4:	mov	x0, x8
    20f8:	add	x1, sp, #0x20
    20fc:	bl	0 <ctf_sym_to_elf64>
    2100:	str	x0, [sp, #24]
    2104:	b	2110 <init_symtab+0xa8>
    2108:	ldur	x8, [x29, #-40]
    210c:	str	x8, [sp, #24]
    2110:	ldr	x8, [sp, #24]
    2114:	ldr	w9, [x8]
    2118:	mov	w8, w9
    211c:	ldur	x10, [x29, #-32]
    2120:	ldr	x10, [x10, #16]
    2124:	cmp	x8, x10
    2128:	b.cs	214c <init_symtab+0xe4>  // b.hs, b.nlast
    212c:	ldur	x8, [x29, #-32]
    2130:	ldr	x8, [x8, #8]
    2134:	ldr	x9, [sp, #24]
    2138:	ldr	w10, [x9]
    213c:	mov	w9, w10
    2140:	add	x8, x8, x9
    2144:	str	x8, [sp, #16]
    2148:	b	2158 <init_symtab+0xf0>
    214c:	adrp	x8, b5 <ctf_set_ctl_hashes+0xb5>
    2150:	add	x8, x8, #0x0
    2154:	str	x8, [sp, #16]
    2158:	ldr	x8, [sp, #24]
    215c:	ldr	w9, [x8]
    2160:	cbz	w9, 2198 <init_symtab+0x130>
    2164:	ldr	x8, [sp, #24]
    2168:	ldrh	w9, [x8, #6]
    216c:	cbz	w9, 2198 <init_symtab+0x130>
    2170:	ldr	x0, [sp, #16]
    2174:	adrp	x1, 0 <ctf_set_ctl_hashes>
    2178:	add	x1, x1, #0x0
    217c:	bl	0 <strcmp>
    2180:	cbz	w0, 2198 <init_symtab+0x130>
    2184:	ldr	x0, [sp, #16]
    2188:	adrp	x1, 0 <ctf_set_ctl_hashes>
    218c:	add	x1, x1, #0x0
    2190:	bl	0 <strcmp>
    2194:	cbnz	w0, 21a8 <init_symtab+0x140>
    2198:	ldur	x8, [x29, #-48]
    219c:	mov	w9, #0xffffffff            	// #-1
    21a0:	str	w9, [x8]
    21a4:	b	2308 <init_symtab+0x2a0>
    21a8:	ldr	x8, [sp, #24]
    21ac:	ldrb	w9, [x8, #4]
    21b0:	and	w9, w9, #0xf
    21b4:	cmp	w9, #0x1
    21b8:	str	w9, [sp, #12]
    21bc:	b.eq	21d4 <init_symtab+0x16c>  // b.none
    21c0:	b	21c4 <init_symtab+0x15c>
    21c4:	ldr	w8, [sp, #12]
    21c8:	cmp	w8, #0x2
    21cc:	b.eq	2238 <init_symtab+0x1d0>  // b.none
    21d0:	b	22fc <init_symtab+0x294>
    21d4:	ldur	w8, [x29, #-60]
    21d8:	ldur	x9, [x29, #-16]
    21dc:	ldr	w10, [x9, #24]
    21e0:	cmp	w8, w10
    21e4:	b.cs	2208 <init_symtab+0x1a0>  // b.hs, b.nlast
    21e8:	ldr	x8, [sp, #24]
    21ec:	ldrh	w9, [x8, #6]
    21f0:	mov	w10, #0xfff1                	// #65521
    21f4:	cmp	w9, w10
    21f8:	b.ne	2218 <init_symtab+0x1b0>  // b.any
    21fc:	ldr	x8, [sp, #24]
    2200:	ldr	x8, [x8, #8]
    2204:	cbnz	x8, 2218 <init_symtab+0x1b0>
    2208:	ldur	x8, [x29, #-48]
    220c:	mov	w9, #0xffffffff            	// #-1
    2210:	str	w9, [x8]
    2214:	b	2308 <init_symtab+0x2a0>
    2218:	ldur	w8, [x29, #-60]
    221c:	ldur	x9, [x29, #-48]
    2220:	str	w8, [x9]
    2224:	ldur	w8, [x29, #-60]
    2228:	mov	w9, w8
    222c:	add	x9, x9, #0x4
    2230:	stur	w9, [x29, #-60]
    2234:	b	2308 <init_symtab+0x2a0>
    2238:	ldr	w8, [sp, #64]
    223c:	ldur	x9, [x29, #-16]
    2240:	ldr	w10, [x9, #28]
    2244:	cmp	w8, w10
    2248:	b.cc	225c <init_symtab+0x1f4>  // b.lo, b.ul, b.last
    224c:	ldur	x8, [x29, #-48]
    2250:	mov	w9, #0xffffffff            	// #-1
    2254:	str	w9, [x8]
    2258:	b	2308 <init_symtab+0x2a0>
    225c:	ldr	w8, [sp, #64]
    2260:	ldur	x9, [x29, #-48]
    2264:	str	w8, [x9]
    2268:	ldur	x9, [x29, #-8]
    226c:	ldr	x9, [x9, #408]
    2270:	ldr	w8, [sp, #64]
    2274:	mov	w10, w8
    2278:	add	x9, x9, x10
    227c:	ldr	w8, [x9]
    2280:	str	w8, [sp, #60]
    2284:	ldur	x9, [x29, #-8]
    2288:	ldr	x9, [x9]
    228c:	ldr	x9, [x9, #16]
    2290:	ldr	w0, [sp, #60]
    2294:	blr	x9
    2298:	str	w0, [sp, #56]
    229c:	ldur	x9, [x29, #-8]
    22a0:	ldr	x9, [x9]
    22a4:	ldr	x9, [x9]
    22a8:	ldr	w0, [sp, #60]
    22ac:	blr	x9
    22b0:	cbnz	w0, 22d0 <init_symtab+0x268>
    22b4:	ldr	w8, [sp, #56]
    22b8:	cbnz	w8, 22d0 <init_symtab+0x268>
    22bc:	ldr	w8, [sp, #64]
    22c0:	mov	w9, w8
    22c4:	add	x9, x9, #0x4
    22c8:	str	w9, [sp, #64]
    22cc:	b	22f8 <init_symtab+0x290>
    22d0:	ldr	w8, [sp, #56]
    22d4:	add	w8, w8, #0x2
    22d8:	mov	w9, w8
    22dc:	ubfx	x9, x9, #0, #32
    22e0:	mov	x10, #0x4                   	// #4
    22e4:	mul	x9, x10, x9
    22e8:	ldr	w8, [sp, #64]
    22ec:	mov	w10, w8
    22f0:	add	x9, x10, x9
    22f4:	str	w9, [sp, #64]
    22f8:	b	2308 <init_symtab+0x2a0>
    22fc:	ldur	x8, [x29, #-48]
    2300:	mov	w9, #0xffffffff            	// #-1
    2304:	str	w9, [x8]
    2308:	ldur	x8, [x29, #-48]
    230c:	add	x8, x8, #0x4
    2310:	stur	x8, [x29, #-48]
    2314:	ldur	x8, [x29, #-24]
    2318:	ldr	x8, [x8, #24]
    231c:	ldur	x9, [x29, #-40]
    2320:	add	x8, x9, x8
    2324:	stur	x8, [x29, #-40]
    2328:	b	20d0 <init_symtab+0x68>
    232c:	ldur	x8, [x29, #-8]
    2330:	ldr	x1, [x8, #432]
    2334:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2338:	add	x0, x0, #0x0
    233c:	bl	0 <ctf_dprintf>
    2340:	mov	w9, wzr
    2344:	mov	w0, w9
    2348:	ldp	x29, x30, [sp, #128]
    234c:	add	sp, sp, #0x90
    2350:	ret

0000000000002354 <ctf_setmodel>:
    2354:	sub	sp, sp, #0x30
    2358:	stp	x29, x30, [sp, #32]
    235c:	add	x29, sp, #0x20
    2360:	adrp	x8, 0 <ctf_set_ctl_hashes>
    2364:	add	x8, x8, #0x0
    2368:	str	x0, [sp, #16]
    236c:	str	w1, [sp, #12]
    2370:	str	x8, [sp]
    2374:	ldr	x8, [sp]
    2378:	ldr	x8, [x8]
    237c:	cbz	x8, 23b8 <ctf_setmodel+0x64>
    2380:	ldr	x8, [sp]
    2384:	ldr	w9, [x8, #8]
    2388:	ldr	w10, [sp, #12]
    238c:	cmp	w9, w10
    2390:	b.ne	23a8 <ctf_setmodel+0x54>  // b.any
    2394:	ldr	x8, [sp]
    2398:	ldr	x9, [sp, #16]
    239c:	str	x8, [x9, #488]
    23a0:	stur	wzr, [x29, #-4]
    23a4:	b	23c8 <ctf_setmodel+0x74>
    23a8:	ldr	x8, [sp]
    23ac:	add	x8, x8, #0x38
    23b0:	str	x8, [sp]
    23b4:	b	2374 <ctf_setmodel+0x20>
    23b8:	ldr	x0, [sp, #16]
    23bc:	mov	w1, #0x16                  	// #22
    23c0:	bl	0 <ctf_set_errno>
    23c4:	stur	w0, [x29, #-4]
    23c8:	ldur	w0, [x29, #-4]
    23cc:	ldp	x29, x30, [sp, #32]
    23d0:	add	sp, sp, #0x30
    23d4:	ret

00000000000023d8 <ctf_file_close>:
    23d8:	sub	sp, sp, #0x40
    23dc:	stp	x29, x30, [sp, #48]
    23e0:	add	x29, sp, #0x30
    23e4:	adrp	x8, b5 <ctf_set_ctl_hashes+0xb5>
    23e8:	add	x8, x8, #0x0
    23ec:	stur	x0, [x29, #-8]
    23f0:	ldur	x9, [x29, #-8]
    23f4:	str	x8, [sp]
    23f8:	cbnz	x9, 2400 <ctf_file_close+0x28>
    23fc:	b	2680 <ctf_file_close+0x2a8>
    2400:	ldur	x1, [x29, #-8]
    2404:	ldur	x8, [x29, #-8]
    2408:	ldr	w2, [x8, #548]
    240c:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2410:	add	x0, x0, #0x0
    2414:	bl	0 <ctf_dprintf>
    2418:	ldur	x8, [x29, #-8]
    241c:	ldr	w9, [x8, #548]
    2420:	cmp	w9, #0x1
    2424:	b.ls	243c <ctf_file_close+0x64>  // b.plast
    2428:	ldur	x8, [x29, #-8]
    242c:	ldr	w9, [x8, #548]
    2430:	subs	w9, w9, #0x1
    2434:	str	w9, [x8, #548]
    2438:	b	2680 <ctf_file_close+0x2a8>
    243c:	ldur	x8, [x29, #-8]
    2440:	ldr	x0, [x8, #504]
    2444:	bl	0 <free>
    2448:	ldur	x8, [x29, #-8]
    244c:	ldr	x0, [x8, #536]
    2450:	bl	0 <free>
    2454:	ldur	x8, [x29, #-8]
    2458:	ldr	x0, [x8, #512]
    245c:	bl	23d8 <ctf_file_close>
    2460:	ldur	x8, [x29, #-8]
    2464:	ldr	x8, [x8, #584]
    2468:	stur	x8, [x29, #-16]
    246c:	ldur	x8, [x29, #-16]
    2470:	cbz	x8, 2498 <ctf_file_close+0xc0>
    2474:	ldur	x8, [x29, #-16]
    2478:	ldr	x8, [x8, #8]
    247c:	str	x8, [sp, #24]
    2480:	ldur	x0, [x29, #-8]
    2484:	ldur	x1, [x29, #-16]
    2488:	bl	0 <ctf_dtd_delete>
    248c:	ldr	x8, [sp, #24]
    2490:	stur	x8, [x29, #-16]
    2494:	b	246c <ctf_file_close+0x94>
    2498:	ldur	x8, [x29, #-8]
    249c:	ldr	x0, [x8, #568]
    24a0:	bl	0 <ctf_dynhash_destroy>
    24a4:	ldur	x8, [x29, #-8]
    24a8:	ldr	w9, [x8, #552]
    24ac:	and	w9, w9, #0x2
    24b0:	cbz	w9, 24e8 <ctf_file_close+0x110>
    24b4:	ldur	x8, [x29, #-8]
    24b8:	ldr	x0, [x8, #160]
    24bc:	bl	0 <ctf_dynhash_destroy>
    24c0:	ldur	x8, [x29, #-8]
    24c4:	ldr	x0, [x8, #176]
    24c8:	bl	0 <ctf_dynhash_destroy>
    24cc:	ldur	x8, [x29, #-8]
    24d0:	ldr	x0, [x8, #192]
    24d4:	bl	0 <ctf_dynhash_destroy>
    24d8:	ldur	x8, [x29, #-8]
    24dc:	ldr	x0, [x8, #208]
    24e0:	bl	0 <ctf_dynhash_destroy>
    24e4:	b	2518 <ctf_file_close+0x140>
    24e8:	ldur	x8, [x29, #-8]
    24ec:	ldr	x0, [x8, #152]
    24f0:	bl	0 <ctf_hash_destroy>
    24f4:	ldur	x8, [x29, #-8]
    24f8:	ldr	x0, [x8, #168]
    24fc:	bl	0 <ctf_hash_destroy>
    2500:	ldur	x8, [x29, #-8]
    2504:	ldr	x0, [x8, #184]
    2508:	bl	0 <ctf_hash_destroy>
    250c:	ldur	x8, [x29, #-8]
    2510:	ldr	x0, [x8, #200]
    2514:	bl	0 <ctf_hash_destroy>
    2518:	ldur	x8, [x29, #-8]
    251c:	ldr	x8, [x8, #608]
    2520:	str	x8, [sp, #16]
    2524:	ldr	x8, [sp, #16]
    2528:	cbz	x8, 2550 <ctf_file_close+0x178>
    252c:	ldr	x8, [sp, #16]
    2530:	ldr	x8, [x8, #8]
    2534:	str	x8, [sp, #8]
    2538:	ldur	x0, [x29, #-8]
    253c:	ldr	x1, [sp, #16]
    2540:	bl	0 <ctf_dvd_delete>
    2544:	ldr	x8, [sp, #8]
    2548:	str	x8, [sp, #16]
    254c:	b	2524 <ctf_file_close+0x14c>
    2550:	ldur	x8, [x29, #-8]
    2554:	ldr	x0, [x8, #592]
    2558:	bl	0 <ctf_dynhash_destroy>
    255c:	ldur	x0, [x29, #-8]
    2560:	bl	0 <ctf_str_free_atoms>
    2564:	ldur	x8, [x29, #-8]
    2568:	ldr	x0, [x8, #704]
    256c:	bl	0 <free>
    2570:	ldur	x8, [x29, #-8]
    2574:	ldr	x8, [x8, #24]
    2578:	ldr	x9, [sp]
    257c:	cmp	x8, x9
    2580:	b.eq	2590 <ctf_file_close+0x1b8>  // b.none
    2584:	ldur	x8, [x29, #-8]
    2588:	ldr	x0, [x8, #24]
    258c:	bl	0 <free>
    2590:	ldur	x8, [x29, #-8]
    2594:	ldr	x8, [x8, #56]
    2598:	ldr	x9, [sp]
    259c:	cmp	x8, x9
    25a0:	b.eq	25b0 <ctf_file_close+0x1d8>  // b.none
    25a4:	ldur	x8, [x29, #-8]
    25a8:	ldr	x0, [x8, #56]
    25ac:	bl	0 <free>
    25b0:	ldur	x8, [x29, #-8]
    25b4:	ldr	x8, [x8, #88]
    25b8:	ldr	x9, [sp]
    25bc:	cmp	x8, x9
    25c0:	b.eq	25d4 <ctf_file_close+0x1fc>  // b.none
    25c4:	ldur	x8, [x29, #-8]
    25c8:	ldr	x0, [x8, #88]
    25cc:	bl	0 <free>
    25d0:	b	25f4 <ctf_file_close+0x21c>
    25d4:	ldur	x8, [x29, #-8]
    25d8:	ldr	x8, [x8, #136]
    25dc:	cbz	x8, 25f4 <ctf_file_close+0x21c>
    25e0:	ldur	x8, [x29, #-8]
    25e4:	ldr	x0, [x8, #136]
    25e8:	ldur	x8, [x29, #-8]
    25ec:	ldr	x1, [x8, #144]
    25f0:	bl	0 <ctf_munmap>
    25f4:	ldur	x8, [x29, #-8]
    25f8:	ldr	x0, [x8, #400]
    25fc:	bl	0 <free>
    2600:	ldur	x8, [x29, #-8]
    2604:	ldr	x0, [x8, #128]
    2608:	bl	0 <ctf_dynhash_destroy>
    260c:	ldur	x8, [x29, #-8]
    2610:	ldr	x0, [x8, #648]
    2614:	bl	0 <ctf_dynhash_destroy>
    2618:	ldur	x8, [x29, #-8]
    261c:	ldr	x0, [x8, #656]
    2620:	bl	0 <ctf_dynhash_destroy>
    2624:	ldur	x8, [x29, #-8]
    2628:	ldr	x0, [x8, #664]
    262c:	bl	0 <ctf_dynhash_destroy>
    2630:	ldur	x8, [x29, #-8]
    2634:	ldr	x0, [x8, #672]
    2638:	bl	0 <ctf_dynhash_destroy>
    263c:	ldur	x8, [x29, #-8]
    2640:	ldr	x0, [x8, #696]
    2644:	bl	0 <ctf_dynhash_destroy>
    2648:	ldur	x8, [x29, #-8]
    264c:	ldr	x0, [x8, #424]
    2650:	bl	0 <free>
    2654:	ldur	x8, [x29, #-8]
    2658:	ldr	x0, [x8, #440]
    265c:	bl	0 <free>
    2660:	ldur	x8, [x29, #-8]
    2664:	ldr	x0, [x8, #448]
    2668:	bl	0 <free>
    266c:	ldur	x8, [x29, #-8]
    2670:	ldr	x0, [x8, #8]
    2674:	bl	0 <free>
    2678:	ldur	x0, [x29, #-8]
    267c:	bl	0 <free>
    2680:	ldp	x29, x30, [sp, #48]
    2684:	add	sp, sp, #0x40
    2688:	ret

000000000000268c <ctf_close>:
    268c:	sub	sp, sp, #0x20
    2690:	stp	x29, x30, [sp, #16]
    2694:	add	x29, sp, #0x10
    2698:	str	x0, [sp, #8]
    269c:	ldr	x0, [sp, #8]
    26a0:	bl	0 <ctf_arc_close>
    26a4:	ldp	x29, x30, [sp, #16]
    26a8:	add	sp, sp, #0x20
    26ac:	ret

00000000000026b0 <ctf_get_arc>:
    26b0:	sub	sp, sp, #0x10
    26b4:	str	x0, [sp, #8]
    26b8:	ldr	x8, [sp, #8]
    26bc:	ldr	x0, [x8, #640]
    26c0:	add	sp, sp, #0x10
    26c4:	ret

00000000000026c8 <ctf_getdatasect>:
    26c8:	sub	sp, sp, #0x10
    26cc:	str	x0, [sp, #8]
    26d0:	ldr	x9, [sp, #8]
    26d4:	ldur	q0, [x9, #24]
    26d8:	str	q0, [x8]
    26dc:	ldur	q0, [x9, #40]
    26e0:	str	q0, [x8, #16]
    26e4:	add	sp, sp, #0x10
    26e8:	ret

00000000000026ec <ctf_parent_file>:
    26ec:	sub	sp, sp, #0x10
    26f0:	str	x0, [sp, #8]
    26f4:	ldr	x8, [sp, #8]
    26f8:	ldr	x0, [x8, #512]
    26fc:	add	sp, sp, #0x10
    2700:	ret

0000000000002704 <ctf_parent_name>:
    2704:	sub	sp, sp, #0x10
    2708:	str	x0, [sp, #8]
    270c:	ldr	x8, [sp, #8]
    2710:	ldr	x0, [x8, #528]
    2714:	add	sp, sp, #0x10
    2718:	ret

000000000000271c <ctf_parent_name_set>:
    271c:	sub	sp, sp, #0x30
    2720:	stp	x29, x30, [sp, #32]
    2724:	add	x29, sp, #0x20
    2728:	str	x0, [sp, #16]
    272c:	str	x1, [sp, #8]
    2730:	ldr	x8, [sp, #16]
    2734:	ldr	x8, [x8, #536]
    2738:	cbz	x8, 2748 <ctf_parent_name_set+0x2c>
    273c:	ldr	x8, [sp, #16]
    2740:	ldr	x0, [x8, #536]
    2744:	bl	0 <free>
    2748:	ldr	x0, [sp, #8]
    274c:	bl	0 <strdup>
    2750:	ldr	x8, [sp, #16]
    2754:	str	x0, [x8, #536]
    2758:	cbnz	x0, 2770 <ctf_parent_name_set+0x54>
    275c:	ldr	x0, [sp, #16]
    2760:	mov	w1, #0xc                   	// #12
    2764:	bl	0 <ctf_set_errno>
    2768:	stur	w0, [x29, #-4]
    276c:	b	2784 <ctf_parent_name_set+0x68>
    2770:	ldr	x8, [sp, #16]
    2774:	ldr	x8, [x8, #536]
    2778:	ldr	x9, [sp, #16]
    277c:	str	x8, [x9, #528]
    2780:	stur	wzr, [x29, #-4]
    2784:	ldur	w0, [x29, #-4]
    2788:	ldp	x29, x30, [sp, #32]
    278c:	add	sp, sp, #0x30
    2790:	ret

0000000000002794 <ctf_cuname>:
    2794:	sub	sp, sp, #0x10
    2798:	str	x0, [sp, #8]
    279c:	ldr	x8, [sp, #8]
    27a0:	ldr	x0, [x8, #496]
    27a4:	add	sp, sp, #0x10
    27a8:	ret

00000000000027ac <ctf_cuname_set>:
    27ac:	sub	sp, sp, #0x30
    27b0:	stp	x29, x30, [sp, #32]
    27b4:	add	x29, sp, #0x20
    27b8:	str	x0, [sp, #16]
    27bc:	str	x1, [sp, #8]
    27c0:	ldr	x8, [sp, #16]
    27c4:	ldr	x8, [x8, #504]
    27c8:	cbz	x8, 27d8 <ctf_cuname_set+0x2c>
    27cc:	ldr	x8, [sp, #16]
    27d0:	ldr	x0, [x8, #504]
    27d4:	bl	0 <free>
    27d8:	ldr	x0, [sp, #8]
    27dc:	bl	0 <strdup>
    27e0:	ldr	x8, [sp, #16]
    27e4:	str	x0, [x8, #504]
    27e8:	cbnz	x0, 2800 <ctf_cuname_set+0x54>
    27ec:	ldr	x0, [sp, #16]
    27f0:	mov	w1, #0xc                   	// #12
    27f4:	bl	0 <ctf_set_errno>
    27f8:	stur	w0, [x29, #-4]
    27fc:	b	2814 <ctf_cuname_set+0x68>
    2800:	ldr	x8, [sp, #16]
    2804:	ldr	x8, [x8, #504]
    2808:	ldr	x9, [sp, #16]
    280c:	str	x8, [x9, #496]
    2810:	stur	wzr, [x29, #-4]
    2814:	ldur	w0, [x29, #-4]
    2818:	ldp	x29, x30, [sp, #32]
    281c:	add	sp, sp, #0x30
    2820:	ret

0000000000002824 <ctf_import>:
    2824:	sub	sp, sp, #0x30
    2828:	stp	x29, x30, [sp, #32]
    282c:	add	x29, sp, #0x20
    2830:	str	x0, [sp, #16]
    2834:	str	x1, [sp, #8]
    2838:	ldr	x8, [sp, #16]
    283c:	cbz	x8, 2864 <ctf_import+0x40>
    2840:	ldr	x8, [sp, #16]
    2844:	ldr	x9, [sp, #8]
    2848:	cmp	x8, x9
    284c:	b.eq	2864 <ctf_import+0x40>  // b.none
    2850:	ldr	x8, [sp, #8]
    2854:	cbz	x8, 2878 <ctf_import+0x54>
    2858:	ldr	x8, [sp, #8]
    285c:	ldr	w9, [x8, #548]
    2860:	cbnz	w9, 2878 <ctf_import+0x54>
    2864:	ldr	x0, [sp, #16]
    2868:	mov	w1, #0x16                  	// #22
    286c:	bl	0 <ctf_set_errno>
    2870:	stur	w0, [x29, #-4]
    2874:	b	2954 <ctf_import+0x130>
    2878:	ldr	x8, [sp, #8]
    287c:	cbz	x8, 28ac <ctf_import+0x88>
    2880:	ldr	x8, [sp, #8]
    2884:	ldr	x8, [x8, #488]
    2888:	ldr	x9, [sp, #16]
    288c:	ldr	x9, [x9, #488]
    2890:	cmp	x8, x9
    2894:	b.eq	28ac <ctf_import+0x88>  // b.none
    2898:	ldr	x0, [sp, #16]
    289c:	mov	w1, #0x3f4                 	// #1012
    28a0:	bl	0 <ctf_set_errno>
    28a4:	stur	w0, [x29, #-4]
    28a8:	b	2954 <ctf_import+0x130>
    28ac:	ldr	x8, [sp, #16]
    28b0:	ldr	x8, [x8, #512]
    28b4:	cbz	x8, 28e4 <ctf_import+0xc0>
    28b8:	ldr	x8, [sp, #16]
    28bc:	ldr	x8, [x8, #512]
    28c0:	ldr	w9, [x8, #548]
    28c4:	subs	w9, w9, #0x1
    28c8:	str	w9, [x8, #548]
    28cc:	ldr	x8, [sp, #16]
    28d0:	ldr	x0, [x8, #512]
    28d4:	bl	23d8 <ctf_file_close>
    28d8:	ldr	x8, [sp, #16]
    28dc:	mov	x10, xzr
    28e0:	str	x10, [x8, #512]
    28e4:	ldr	x8, [sp, #8]
    28e8:	cbz	x8, 2944 <ctf_import+0x120>
    28ec:	ldr	x8, [sp, #16]
    28f0:	ldr	x8, [x8, #528]
    28f4:	cbnz	x8, 2924 <ctf_import+0x100>
    28f8:	ldr	x0, [sp, #16]
    28fc:	adrp	x1, 0 <ctf_set_ctl_hashes>
    2900:	add	x1, x1, #0x0
    2904:	bl	271c <ctf_parent_name_set>
    2908:	str	w0, [sp, #4]
    290c:	cmp	w0, #0x0
    2910:	cset	w8, ge  // ge = tcont
    2914:	tbnz	w8, #0, 2924 <ctf_import+0x100>
    2918:	ldr	w8, [sp, #4]
    291c:	stur	w8, [x29, #-4]
    2920:	b	2954 <ctf_import+0x130>
    2924:	ldr	x8, [sp, #16]
    2928:	ldr	w9, [x8, #552]
    292c:	orr	w9, w9, #0x1
    2930:	str	w9, [x8, #552]
    2934:	ldr	x8, [sp, #8]
    2938:	ldr	w9, [x8, #548]
    293c:	add	w9, w9, #0x1
    2940:	str	w9, [x8, #548]
    2944:	ldr	x8, [sp, #8]
    2948:	ldr	x9, [sp, #16]
    294c:	str	x8, [x9, #512]
    2950:	stur	wzr, [x29, #-4]
    2954:	ldur	w0, [x29, #-4]
    2958:	ldp	x29, x30, [sp, #32]
    295c:	add	sp, sp, #0x30
    2960:	ret

0000000000002964 <ctf_getmodel>:
    2964:	sub	sp, sp, #0x10
    2968:	str	x0, [sp, #8]
    296c:	ldr	x8, [sp, #8]
    2970:	ldr	x8, [x8, #488]
    2974:	ldr	w0, [x8, #8]
    2978:	add	sp, sp, #0x10
    297c:	ret

0000000000002980 <ctf_setspecific>:
    2980:	sub	sp, sp, #0x10
    2984:	str	x0, [sp, #8]
    2988:	str	x1, [sp]
    298c:	ldr	x8, [sp]
    2990:	ldr	x9, [sp, #8]
    2994:	str	x8, [x9, #720]
    2998:	add	sp, sp, #0x10
    299c:	ret

00000000000029a0 <ctf_getspecific>:
    29a0:	sub	sp, sp, #0x10
    29a4:	str	x0, [sp, #8]
    29a8:	ldr	x8, [sp, #8]
    29ac:	ldr	x0, [x8, #720]
    29b0:	add	sp, sp, #0x10
    29b4:	ret

00000000000029b8 <__bswap_32>:
    29b8:	sub	sp, sp, #0x10
    29bc:	str	w0, [sp, #12]
    29c0:	ldr	w8, [sp, #12]
    29c4:	and	w8, w8, #0xff000000
    29c8:	ldr	w9, [sp, #12]
    29cc:	and	w9, w9, #0xff0000
    29d0:	lsr	w9, w9, #8
    29d4:	orr	w8, w9, w8, lsr #24
    29d8:	ldr	w9, [sp, #12]
    29dc:	and	w9, w9, #0xff00
    29e0:	orr	w8, w8, w9, lsl #8
    29e4:	ldr	w9, [sp, #12]
    29e8:	and	w9, w9, #0xff
    29ec:	orr	w0, w8, w9, lsl #24
    29f0:	add	sp, sp, #0x10
    29f4:	ret

00000000000029f8 <get_kind_v1>:
    29f8:	sub	sp, sp, #0x10
    29fc:	str	w0, [sp, #12]
    2a00:	ldr	w8, [sp, #12]
    2a04:	and	w8, w8, #0xf800
    2a08:	lsr	w0, w8, #11
    2a0c:	add	sp, sp, #0x10
    2a10:	ret

0000000000002a14 <get_root_v1>:
    2a14:	sub	sp, sp, #0x10
    2a18:	str	w0, [sp, #12]
    2a1c:	ldr	w8, [sp, #12]
    2a20:	and	w8, w8, #0x400
    2a24:	lsr	w0, w8, #10
    2a28:	add	sp, sp, #0x10
    2a2c:	ret

0000000000002a30 <get_vlen_v1>:
    2a30:	sub	sp, sp, #0x10
    2a34:	str	w0, [sp, #12]
    2a38:	ldr	w8, [sp, #12]
    2a3c:	and	w0, w8, #0x3ff
    2a40:	add	sp, sp, #0x10
    2a44:	ret

0000000000002a48 <get_ctt_size_v1>:
    2a48:	sub	sp, sp, #0x40
    2a4c:	stp	x29, x30, [sp, #48]
    2a50:	add	x29, sp, #0x30
    2a54:	mov	x6, #0x10                  	// #16
    2a58:	mov	x7, #0x8                   	// #8
    2a5c:	mov	x8, #0xffff                	// #65535
    2a60:	stur	x0, [x29, #-8]
    2a64:	stur	x1, [x29, #-16]
    2a68:	str	x2, [sp, #24]
    2a6c:	str	x3, [sp, #16]
    2a70:	ldur	x9, [x29, #-16]
    2a74:	str	x9, [sp, #8]
    2a78:	ldur	x0, [x29, #-8]
    2a7c:	ldur	x1, [x29, #-16]
    2a80:	ldr	x2, [sp, #24]
    2a84:	ldr	x3, [sp, #16]
    2a88:	ldr	x9, [sp, #8]
    2a8c:	ldr	w10, [x9, #8]
    2a90:	mov	w9, w10
    2a94:	ldr	x11, [sp, #8]
    2a98:	ldr	w10, [x11, #12]
    2a9c:	mov	w11, w10
    2aa0:	orr	x4, x11, x9, lsl #32
    2aa4:	ldr	x9, [sp, #8]
    2aa8:	ldrh	w10, [x9, #6]
    2aac:	mov	w5, w10
    2ab0:	mov	x9, sp
    2ab4:	str	x8, [x9]
    2ab8:	bl	2d3c <get_ctt_size_common>
    2abc:	ldp	x29, x30, [sp, #48]
    2ac0:	add	sp, sp, #0x40
    2ac4:	ret

0000000000002ac8 <get_vbytes_v1>:
    2ac8:	sub	sp, sp, #0x40
    2acc:	stp	x29, x30, [sp, #48]
    2ad0:	add	x29, sp, #0x30
    2ad4:	sturh	w0, [x29, #-10]
    2ad8:	str	x1, [sp, #24]
    2adc:	str	x2, [sp, #16]
    2ae0:	ldurh	w8, [x29, #-10]
    2ae4:	cmp	w8, #0x4
    2ae8:	str	w8, [sp, #12]
    2aec:	b.eq	2b18 <get_vbytes_v1+0x50>  // b.none
    2af0:	b	2af4 <get_vbytes_v1+0x2c>
    2af4:	ldr	w8, [sp, #12]
    2af8:	cmp	w8, #0x5
    2afc:	b.eq	2b24 <get_vbytes_v1+0x5c>  // b.none
    2b00:	b	2b04 <get_vbytes_v1+0x3c>
    2b04:	ldr	w8, [sp, #12]
    2b08:	subs	w9, w8, #0x6
    2b0c:	cmp	w9, #0x1
    2b10:	b.ls	2b44 <get_vbytes_v1+0x7c>  // b.plast
    2b14:	b	2b78 <get_vbytes_v1+0xb0>
    2b18:	mov	x8, #0x8                   	// #8
    2b1c:	stur	x8, [x29, #-8]
    2b20:	b	2b8c <get_vbytes_v1+0xc4>
    2b24:	ldr	x8, [sp, #16]
    2b28:	ldr	x9, [sp, #16]
    2b2c:	and	x9, x9, #0x1
    2b30:	add	x8, x8, x9
    2b34:	mov	x9, #0x2                   	// #2
    2b38:	mul	x8, x9, x8
    2b3c:	stur	x8, [x29, #-8]
    2b40:	b	2b8c <get_vbytes_v1+0xc4>
    2b44:	ldr	x8, [sp, #24]
    2b48:	cmp	x8, #0x2, lsl #12
    2b4c:	b.ge	2b64 <get_vbytes_v1+0x9c>  // b.tcont
    2b50:	ldr	x8, [sp, #16]
    2b54:	mov	x9, #0x8                   	// #8
    2b58:	mul	x8, x9, x8
    2b5c:	stur	x8, [x29, #-8]
    2b60:	b	2b8c <get_vbytes_v1+0xc4>
    2b64:	ldr	x8, [sp, #16]
    2b68:	mov	x9, #0x10                  	// #16
    2b6c:	mul	x8, x9, x8
    2b70:	stur	x8, [x29, #-8]
    2b74:	b	2b8c <get_vbytes_v1+0xc4>
    2b78:	ldurh	w0, [x29, #-10]
    2b7c:	ldr	x1, [sp, #24]
    2b80:	ldr	x2, [sp, #16]
    2b84:	bl	2dd0 <get_vbytes_common>
    2b88:	stur	x0, [x29, #-8]
    2b8c:	ldur	x0, [x29, #-8]
    2b90:	ldp	x29, x30, [sp, #48]
    2b94:	add	sp, sp, #0x40
    2b98:	ret

0000000000002b9c <get_kind_v2>:
    2b9c:	sub	sp, sp, #0x10
    2ba0:	str	w0, [sp, #12]
    2ba4:	ldr	w8, [sp, #12]
    2ba8:	and	w8, w8, #0xfc000000
    2bac:	lsr	w0, w8, #26
    2bb0:	add	sp, sp, #0x10
    2bb4:	ret

0000000000002bb8 <get_root_v2>:
    2bb8:	sub	sp, sp, #0x10
    2bbc:	str	w0, [sp, #12]
    2bc0:	ldr	w8, [sp, #12]
    2bc4:	and	w8, w8, #0x2000000
    2bc8:	lsr	w0, w8, #25
    2bcc:	add	sp, sp, #0x10
    2bd0:	ret

0000000000002bd4 <get_vlen_v2>:
    2bd4:	sub	sp, sp, #0x10
    2bd8:	str	w0, [sp, #12]
    2bdc:	ldr	w8, [sp, #12]
    2be0:	and	w0, w8, #0xffffff
    2be4:	add	sp, sp, #0x10
    2be8:	ret

0000000000002bec <get_ctt_size_v2>:
    2bec:	sub	sp, sp, #0x40
    2bf0:	stp	x29, x30, [sp, #48]
    2bf4:	add	x29, sp, #0x30
    2bf8:	mov	x6, #0x14                  	// #20
    2bfc:	mov	x7, #0xc                   	// #12
    2c00:	mov	x8, #0xffffffff            	// #4294967295
    2c04:	stur	x0, [x29, #-8]
    2c08:	stur	x1, [x29, #-16]
    2c0c:	str	x2, [sp, #24]
    2c10:	str	x3, [sp, #16]
    2c14:	ldur	x0, [x29, #-8]
    2c18:	ldur	x1, [x29, #-16]
    2c1c:	ldr	x2, [sp, #24]
    2c20:	ldr	x3, [sp, #16]
    2c24:	ldur	x9, [x29, #-16]
    2c28:	ldr	w10, [x9, #12]
    2c2c:	mov	w9, w10
    2c30:	ldur	x11, [x29, #-16]
    2c34:	ldr	w10, [x11, #16]
    2c38:	mov	w11, w10
    2c3c:	orr	x4, x11, x9, lsl #32
    2c40:	ldur	x9, [x29, #-16]
    2c44:	ldr	w10, [x9, #8]
    2c48:	mov	w5, w10
    2c4c:	mov	x9, sp
    2c50:	str	x8, [x9]
    2c54:	bl	2d3c <get_ctt_size_common>
    2c58:	ldp	x29, x30, [sp, #48]
    2c5c:	add	sp, sp, #0x40
    2c60:	ret

0000000000002c64 <get_vbytes_v2>:
    2c64:	sub	sp, sp, #0x40
    2c68:	stp	x29, x30, [sp, #48]
    2c6c:	add	x29, sp, #0x30
    2c70:	sturh	w0, [x29, #-10]
    2c74:	str	x1, [sp, #24]
    2c78:	str	x2, [sp, #16]
    2c7c:	ldurh	w8, [x29, #-10]
    2c80:	cmp	w8, #0x4
    2c84:	str	w8, [sp, #12]
    2c88:	b.eq	2cb4 <get_vbytes_v2+0x50>  // b.none
    2c8c:	b	2c90 <get_vbytes_v2+0x2c>
    2c90:	ldr	w8, [sp, #12]
    2c94:	cmp	w8, #0x5
    2c98:	b.eq	2cc0 <get_vbytes_v2+0x5c>  // b.none
    2c9c:	b	2ca0 <get_vbytes_v2+0x3c>
    2ca0:	ldr	w8, [sp, #12]
    2ca4:	subs	w9, w8, #0x6
    2ca8:	cmp	w9, #0x1
    2cac:	b.ls	2ce0 <get_vbytes_v2+0x7c>  // b.plast
    2cb0:	b	2d18 <get_vbytes_v2+0xb4>
    2cb4:	mov	x8, #0xc                   	// #12
    2cb8:	stur	x8, [x29, #-8]
    2cbc:	b	2d2c <get_vbytes_v2+0xc8>
    2cc0:	ldr	x8, [sp, #16]
    2cc4:	ldr	x9, [sp, #16]
    2cc8:	and	x9, x9, #0x1
    2ccc:	add	x8, x8, x9
    2cd0:	mov	x9, #0x4                   	// #4
    2cd4:	mul	x8, x9, x8
    2cd8:	stur	x8, [x29, #-8]
    2cdc:	b	2d2c <get_vbytes_v2+0xc8>
    2ce0:	ldr	x8, [sp, #24]
    2ce4:	mov	x9, #0x20000000            	// #536870912
    2ce8:	cmp	x8, x9
    2cec:	b.ge	2d04 <get_vbytes_v2+0xa0>  // b.tcont
    2cf0:	ldr	x8, [sp, #16]
    2cf4:	mov	x9, #0xc                   	// #12
    2cf8:	mul	x8, x9, x8
    2cfc:	stur	x8, [x29, #-8]
    2d00:	b	2d2c <get_vbytes_v2+0xc8>
    2d04:	ldr	x8, [sp, #16]
    2d08:	mov	x9, #0x10                  	// #16
    2d0c:	mul	x8, x9, x8
    2d10:	stur	x8, [x29, #-8]
    2d14:	b	2d2c <get_vbytes_v2+0xc8>
    2d18:	ldurh	w0, [x29, #-10]
    2d1c:	ldr	x1, [sp, #24]
    2d20:	ldr	x2, [sp, #16]
    2d24:	bl	2dd0 <get_vbytes_common>
    2d28:	stur	x0, [x29, #-8]
    2d2c:	ldur	x0, [x29, #-8]
    2d30:	ldp	x29, x30, [sp, #48]
    2d34:	add	sp, sp, #0x40
    2d38:	ret

0000000000002d3c <get_ctt_size_common>:
    2d3c:	sub	sp, sp, #0x60
    2d40:	ldr	x8, [sp, #96]
    2d44:	str	x0, [sp, #88]
    2d48:	str	x1, [sp, #80]
    2d4c:	str	x2, [sp, #72]
    2d50:	str	x3, [sp, #64]
    2d54:	str	x4, [sp, #56]
    2d58:	str	x5, [sp, #48]
    2d5c:	str	x6, [sp, #40]
    2d60:	str	x7, [sp, #32]
    2d64:	str	x8, [sp, #24]
    2d68:	ldr	x8, [sp, #48]
    2d6c:	ldr	x9, [sp, #24]
    2d70:	cmp	x8, x9
    2d74:	b.ne	2d8c <get_ctt_size_common+0x50>  // b.any
    2d78:	ldr	x8, [sp, #56]
    2d7c:	str	x8, [sp, #16]
    2d80:	ldr	x8, [sp, #40]
    2d84:	str	x8, [sp, #8]
    2d88:	b	2d9c <get_ctt_size_common+0x60>
    2d8c:	ldr	x8, [sp, #48]
    2d90:	str	x8, [sp, #16]
    2d94:	ldr	x8, [sp, #32]
    2d98:	str	x8, [sp, #8]
    2d9c:	ldr	x8, [sp, #72]
    2da0:	cbz	x8, 2db0 <get_ctt_size_common+0x74>
    2da4:	ldr	x8, [sp, #16]
    2da8:	ldr	x9, [sp, #72]
    2dac:	str	x8, [x9]
    2db0:	ldr	x8, [sp, #64]
    2db4:	cbz	x8, 2dc4 <get_ctt_size_common+0x88>
    2db8:	ldr	x8, [sp, #8]
    2dbc:	ldr	x9, [sp, #64]
    2dc0:	str	x8, [x9]
    2dc4:	ldr	x0, [sp, #16]
    2dc8:	add	sp, sp, #0x60
    2dcc:	ret

0000000000002dd0 <get_vbytes_common>:
    2dd0:	sub	sp, sp, #0x40
    2dd4:	stp	x29, x30, [sp, #48]
    2dd8:	add	x29, sp, #0x30
    2ddc:	sturh	w0, [x29, #-10]
    2de0:	str	x1, [sp, #24]
    2de4:	str	x2, [sp, #16]
    2de8:	ldurh	w8, [x29, #-10]
    2dec:	subs	w8, w8, #0x0
    2df0:	mov	w9, w8
    2df4:	ubfx	x9, x9, #0, #32
    2df8:	cmp	x9, #0xe
    2dfc:	str	x9, [sp, #8]
    2e00:	b.hi	2e50 <get_vbytes_common+0x80>  // b.pmore
    2e04:	adrp	x8, 0 <ctf_set_ctl_hashes>
    2e08:	add	x8, x8, #0x0
    2e0c:	ldr	x11, [sp, #8]
    2e10:	ldrsw	x10, [x8, x11, lsl #2]
    2e14:	add	x9, x8, x10
    2e18:	br	x9
    2e1c:	mov	x8, #0x4                   	// #4
    2e20:	stur	x8, [x29, #-8]
    2e24:	b	2e68 <get_vbytes_common+0x98>
    2e28:	mov	x8, #0x8                   	// #8
    2e2c:	stur	x8, [x29, #-8]
    2e30:	b	2e68 <get_vbytes_common+0x98>
    2e34:	ldr	x8, [sp, #16]
    2e38:	mov	x9, #0x8                   	// #8
    2e3c:	mul	x8, x9, x8
    2e40:	stur	x8, [x29, #-8]
    2e44:	b	2e68 <get_vbytes_common+0x98>
    2e48:	stur	xzr, [x29, #-8]
    2e4c:	b	2e68 <get_vbytes_common+0x98>
    2e50:	ldurh	w1, [x29, #-10]
    2e54:	adrp	x0, 0 <ctf_set_ctl_hashes>
    2e58:	add	x0, x0, #0x0
    2e5c:	bl	0 <ctf_dprintf>
    2e60:	mov	x8, #0x3ef                 	// #1007
    2e64:	stur	x8, [x29, #-8]
    2e68:	ldur	x0, [x29, #-8]
    2e6c:	ldp	x29, x30, [sp, #48]
    2e70:	add	sp, sp, #0x40
    2e74:	ret

0000000000002e78 <flip_lbls>:
    2e78:	sub	sp, sp, #0x30
    2e7c:	stp	x29, x30, [sp, #32]
    2e80:	add	x29, sp, #0x20
    2e84:	mov	x8, #0x8                   	// #8
    2e88:	stur	x0, [x29, #-8]
    2e8c:	str	x1, [sp, #16]
    2e90:	ldur	x9, [x29, #-8]
    2e94:	str	x9, [sp, #8]
    2e98:	ldr	x9, [sp, #16]
    2e9c:	udiv	x8, x9, x8
    2ea0:	str	x8, [sp]
    2ea4:	ldr	x8, [sp]
    2ea8:	cmp	x8, #0x0
    2eac:	cset	w9, le
    2eb0:	tbnz	w9, #0, 2ef8 <flip_lbls+0x80>
    2eb4:	ldr	x8, [sp, #8]
    2eb8:	ldr	w0, [x8]
    2ebc:	bl	29b8 <__bswap_32>
    2ec0:	ldr	x8, [sp, #8]
    2ec4:	str	w0, [x8]
    2ec8:	ldr	x8, [sp, #8]
    2ecc:	ldr	w0, [x8, #4]
    2ed0:	bl	29b8 <__bswap_32>
    2ed4:	ldr	x8, [sp, #8]
    2ed8:	str	w0, [x8, #4]
    2edc:	ldr	x8, [sp, #8]
    2ee0:	add	x8, x8, #0x8
    2ee4:	str	x8, [sp, #8]
    2ee8:	ldr	x8, [sp]
    2eec:	subs	x8, x8, #0x1
    2ef0:	str	x8, [sp]
    2ef4:	b	2ea4 <flip_lbls+0x2c>
    2ef8:	ldp	x29, x30, [sp, #32]
    2efc:	add	sp, sp, #0x30
    2f00:	ret

0000000000002f04 <flip_objts>:
    2f04:	sub	sp, sp, #0x30
    2f08:	stp	x29, x30, [sp, #32]
    2f0c:	add	x29, sp, #0x20
    2f10:	mov	x8, #0x4                   	// #4
    2f14:	stur	x0, [x29, #-8]
    2f18:	str	x1, [sp, #16]
    2f1c:	ldur	x9, [x29, #-8]
    2f20:	str	x9, [sp, #8]
    2f24:	ldr	x9, [sp, #16]
    2f28:	udiv	x8, x9, x8
    2f2c:	str	x8, [sp]
    2f30:	ldr	x8, [sp]
    2f34:	cmp	x8, #0x0
    2f38:	cset	w9, le
    2f3c:	tbnz	w9, #0, 2f70 <flip_objts+0x6c>
    2f40:	ldr	x8, [sp, #8]
    2f44:	ldr	w0, [x8]
    2f48:	bl	29b8 <__bswap_32>
    2f4c:	ldr	x8, [sp, #8]
    2f50:	str	w0, [x8]
    2f54:	ldr	x8, [sp, #8]
    2f58:	add	x8, x8, #0x4
    2f5c:	str	x8, [sp, #8]
    2f60:	ldr	x8, [sp]
    2f64:	subs	x8, x8, #0x1
    2f68:	str	x8, [sp]
    2f6c:	b	2f30 <flip_objts+0x2c>
    2f70:	ldp	x29, x30, [sp, #32]
    2f74:	add	sp, sp, #0x30
    2f78:	ret

0000000000002f7c <flip_vars>:
    2f7c:	sub	sp, sp, #0x30
    2f80:	stp	x29, x30, [sp, #32]
    2f84:	add	x29, sp, #0x20
    2f88:	mov	x8, #0x8                   	// #8
    2f8c:	stur	x0, [x29, #-8]
    2f90:	str	x1, [sp, #16]
    2f94:	ldur	x9, [x29, #-8]
    2f98:	str	x9, [sp, #8]
    2f9c:	ldr	x9, [sp, #16]
    2fa0:	udiv	x8, x9, x8
    2fa4:	str	x8, [sp]
    2fa8:	ldr	x8, [sp]
    2fac:	cmp	x8, #0x0
    2fb0:	cset	w9, le
    2fb4:	tbnz	w9, #0, 2ffc <flip_vars+0x80>
    2fb8:	ldr	x8, [sp, #8]
    2fbc:	ldr	w0, [x8]
    2fc0:	bl	29b8 <__bswap_32>
    2fc4:	ldr	x8, [sp, #8]
    2fc8:	str	w0, [x8]
    2fcc:	ldr	x8, [sp, #8]
    2fd0:	ldr	w0, [x8, #4]
    2fd4:	bl	29b8 <__bswap_32>
    2fd8:	ldr	x8, [sp, #8]
    2fdc:	str	w0, [x8, #4]
    2fe0:	ldr	x8, [sp, #8]
    2fe4:	add	x8, x8, #0x8
    2fe8:	str	x8, [sp, #8]
    2fec:	ldr	x8, [sp]
    2ff0:	subs	x8, x8, #0x1
    2ff4:	str	x8, [sp]
    2ff8:	b	2fa8 <flip_vars+0x2c>
    2ffc:	ldp	x29, x30, [sp, #32]
    3000:	add	sp, sp, #0x30
    3004:	ret

0000000000003008 <flip_types>:
    3008:	sub	sp, sp, #0xc0
    300c:	stp	x29, x30, [sp, #176]
    3010:	add	x29, sp, #0xb0
    3014:	adrp	x8, 0 <ctf_set_ctl_hashes>
    3018:	add	x8, x8, #0x0
    301c:	adrp	x9, 0 <ctf_set_ctl_hashes>
    3020:	add	x9, x9, #0x0
    3024:	stur	x0, [x29, #-16]
    3028:	stur	x1, [x29, #-24]
    302c:	ldur	x10, [x29, #-16]
    3030:	stur	x10, [x29, #-32]
    3034:	str	x8, [sp, #16]
    3038:	str	x9, [sp, #8]
    303c:	ldur	x8, [x29, #-32]
    3040:	ldur	x9, [x29, #-16]
    3044:	ldur	x10, [x29, #-24]
    3048:	add	x9, x9, x10
    304c:	cmp	x8, x9
    3050:	b.cs	34e8 <flip_types+0x4e0>  // b.hs, b.nlast
    3054:	ldur	x8, [x29, #-32]
    3058:	ldr	w0, [x8]
    305c:	bl	29b8 <__bswap_32>
    3060:	ldur	x8, [x29, #-32]
    3064:	str	w0, [x8]
    3068:	ldur	x8, [x29, #-32]
    306c:	ldr	w0, [x8, #4]
    3070:	bl	29b8 <__bswap_32>
    3074:	ldur	x8, [x29, #-32]
    3078:	str	w0, [x8, #4]
    307c:	ldur	x8, [x29, #-32]
    3080:	ldr	w0, [x8, #8]
    3084:	bl	29b8 <__bswap_32>
    3088:	ldur	x8, [x29, #-32]
    308c:	str	w0, [x8, #8]
    3090:	ldur	x8, [x29, #-32]
    3094:	ldr	w9, [x8, #4]
    3098:	and	w9, w9, #0xfc000000
    309c:	lsr	w9, w9, #26
    30a0:	stur	w9, [x29, #-36]
    30a4:	ldur	x8, [x29, #-32]
    30a8:	ldr	w9, [x8, #8]
    30ac:	mov	w8, w9
    30b0:	stur	x8, [x29, #-48]
    30b4:	ldur	x8, [x29, #-32]
    30b8:	ldr	w9, [x8, #4]
    30bc:	and	w9, w9, #0xffffff
    30c0:	stur	w9, [x29, #-52]
    30c4:	ldur	w9, [x29, #-36]
    30c8:	ldur	x1, [x29, #-48]
    30cc:	ldur	w10, [x29, #-52]
    30d0:	mov	w2, w10
    30d4:	mov	w0, w9
    30d8:	bl	2c64 <get_vbytes_v2>
    30dc:	stur	x0, [x29, #-64]
    30e0:	ldur	x8, [x29, #-48]
    30e4:	mov	x11, #0xffffffff            	// #4294967295
    30e8:	cmp	x8, x11
    30ec:	cset	w9, eq  // eq = none
    30f0:	and	w9, w9, #0x1
    30f4:	mov	w0, w9
    30f8:	sxtw	x8, w0
    30fc:	cbz	x8, 3158 <flip_types+0x150>
    3100:	ldur	x8, [x29, #-32]
    3104:	ldr	w0, [x8, #12]
    3108:	bl	29b8 <__bswap_32>
    310c:	ldur	x8, [x29, #-32]
    3110:	str	w0, [x8, #12]
    3114:	ldur	x8, [x29, #-32]
    3118:	ldr	w0, [x8, #16]
    311c:	bl	29b8 <__bswap_32>
    3120:	ldur	x8, [x29, #-32]
    3124:	str	w0, [x8, #16]
    3128:	ldur	x8, [x29, #-32]
    312c:	ldr	w9, [x8, #12]
    3130:	mov	w8, w9
    3134:	ldur	x10, [x29, #-32]
    3138:	ldr	w9, [x10, #16]
    313c:	mov	w10, w9
    3140:	orr	x8, x10, x8, lsl #32
    3144:	stur	x8, [x29, #-48]
    3148:	ldur	x8, [x29, #-32]
    314c:	add	x8, x8, #0x14
    3150:	stur	x8, [x29, #-32]
    3154:	b	3164 <flip_types+0x15c>
    3158:	ldur	x8, [x29, #-32]
    315c:	add	x8, x8, #0xc
    3160:	stur	x8, [x29, #-32]
    3164:	ldur	w8, [x29, #-36]
    3168:	subs	w8, w8, #0x0
    316c:	mov	w9, w8
    3170:	ubfx	x9, x9, #0, #32
    3174:	cmp	x9, #0xe
    3178:	str	x9, [sp]
    317c:	b.hi	34b8 <flip_types+0x4b0>  // b.pmore
    3180:	adrp	x8, 0 <ctf_set_ctl_hashes>
    3184:	add	x8, x8, #0x0
    3188:	ldr	x11, [sp]
    318c:	ldrsw	x10, [x8, x11, lsl #2]
    3190:	add	x9, x8, x10
    3194:	br	x9
    3198:	ldur	x8, [x29, #-64]
    319c:	cbnz	x8, 31a4 <flip_types+0x19c>
    31a0:	b	31bc <flip_types+0x1b4>
    31a4:	adrp	x0, 0 <ctf_set_ctl_hashes>
    31a8:	add	x0, x0, #0x0
    31ac:	ldr	x1, [sp, #16]
    31b0:	mov	w2, #0x428                 	// #1064
    31b4:	ldr	x3, [sp, #8]
    31b8:	bl	0 <__assert_fail>
    31bc:	b	34d4 <flip_types+0x4cc>
    31c0:	ldur	x8, [x29, #-32]
    31c4:	stur	x8, [x29, #-72]
    31c8:	ldur	x8, [x29, #-72]
    31cc:	ldr	w0, [x8]
    31d0:	bl	29b8 <__bswap_32>
    31d4:	ldur	x8, [x29, #-72]
    31d8:	str	w0, [x8]
    31dc:	b	34d4 <flip_types+0x4cc>
    31e0:	ldur	x8, [x29, #-32]
    31e4:	stur	x8, [x29, #-80]
    31e8:	ldur	w9, [x29, #-52]
    31ec:	mov	w8, w9
    31f0:	str	x8, [sp, #88]
    31f4:	ldr	x8, [sp, #88]
    31f8:	cmp	x8, #0x0
    31fc:	cset	w9, le
    3200:	tbnz	w9, #0, 3234 <flip_types+0x22c>
    3204:	ldur	x8, [x29, #-80]
    3208:	ldr	w0, [x8]
    320c:	bl	29b8 <__bswap_32>
    3210:	ldur	x8, [x29, #-80]
    3214:	str	w0, [x8]
    3218:	ldur	x8, [x29, #-80]
    321c:	add	x8, x8, #0x4
    3220:	stur	x8, [x29, #-80]
    3224:	ldr	x8, [sp, #88]
    3228:	subs	x8, x8, #0x1
    322c:	str	x8, [sp, #88]
    3230:	b	31f4 <flip_types+0x1ec>
    3234:	b	34d4 <flip_types+0x4cc>
    3238:	ldur	x8, [x29, #-32]
    323c:	str	x8, [sp, #80]
    3240:	ldur	x8, [x29, #-64]
    3244:	cmp	x8, #0xc
    3248:	b.ne	3250 <flip_types+0x248>  // b.any
    324c:	b	3268 <flip_types+0x260>
    3250:	adrp	x0, 0 <ctf_set_ctl_hashes>
    3254:	add	x0, x0, #0x0
    3258:	ldr	x1, [sp, #16]
    325c:	mov	w2, #0x448                 	// #1096
    3260:	ldr	x3, [sp, #8]
    3264:	bl	0 <__assert_fail>
    3268:	ldr	x8, [sp, #80]
    326c:	ldr	w0, [x8]
    3270:	bl	29b8 <__bswap_32>
    3274:	ldr	x8, [sp, #80]
    3278:	str	w0, [x8]
    327c:	ldr	x8, [sp, #80]
    3280:	ldr	w0, [x8, #4]
    3284:	bl	29b8 <__bswap_32>
    3288:	ldr	x8, [sp, #80]
    328c:	str	w0, [x8, #4]
    3290:	ldr	x8, [sp, #80]
    3294:	ldr	w0, [x8, #8]
    3298:	bl	29b8 <__bswap_32>
    329c:	ldr	x8, [sp, #80]
    32a0:	str	w0, [x8, #8]
    32a4:	b	34d4 <flip_types+0x4cc>
    32a8:	ldur	x8, [x29, #-32]
    32ac:	str	x8, [sp, #72]
    32b0:	ldur	x8, [x29, #-64]
    32b4:	cmp	x8, #0x8
    32b8:	b.ne	32c0 <flip_types+0x2b8>  // b.any
    32bc:	b	32d8 <flip_types+0x2d0>
    32c0:	adrp	x0, 0 <ctf_set_ctl_hashes>
    32c4:	add	x0, x0, #0x0
    32c8:	ldr	x1, [sp, #16]
    32cc:	mov	w2, #0x456                 	// #1110
    32d0:	ldr	x3, [sp, #8]
    32d4:	bl	0 <__assert_fail>
    32d8:	ldr	x8, [sp, #72]
    32dc:	ldr	w0, [x8]
    32e0:	bl	29b8 <__bswap_32>
    32e4:	ldr	x8, [sp, #72]
    32e8:	str	w0, [x8]
    32ec:	ldr	x8, [sp, #72]
    32f0:	ldrh	w0, [x8, #4]
    32f4:	bl	df0 <__bswap_16>
    32f8:	ldr	x8, [sp, #72]
    32fc:	strh	w0, [x8, #4]
    3300:	ldr	x8, [sp, #72]
    3304:	ldrh	w0, [x8, #6]
    3308:	bl	df0 <__bswap_16>
    330c:	ldr	x8, [sp, #72]
    3310:	strh	w0, [x8, #6]
    3314:	b	34d4 <flip_types+0x4cc>
    3318:	ldur	x8, [x29, #-48]
    331c:	mov	x9, #0x20000000            	// #536870912
    3320:	cmp	x8, x9
    3324:	cset	w10, cs  // cs = hs, nlast
    3328:	and	w10, w10, #0x1
    332c:	mov	w0, w10
    3330:	sxtw	x8, w0
    3334:	cbz	x8, 33cc <flip_types+0x3c4>
    3338:	ldur	x8, [x29, #-32]
    333c:	str	x8, [sp, #64]
    3340:	ldur	w9, [x29, #-52]
    3344:	mov	w8, w9
    3348:	str	x8, [sp, #56]
    334c:	ldr	x8, [sp, #56]
    3350:	cmp	x8, #0x0
    3354:	cset	w9, le
    3358:	tbnz	w9, #0, 33c8 <flip_types+0x3c0>
    335c:	ldr	x8, [sp, #64]
    3360:	ldr	w0, [x8]
    3364:	bl	29b8 <__bswap_32>
    3368:	ldr	x8, [sp, #64]
    336c:	str	w0, [x8]
    3370:	ldr	x8, [sp, #64]
    3374:	ldr	w0, [x8, #4]
    3378:	bl	29b8 <__bswap_32>
    337c:	ldr	x8, [sp, #64]
    3380:	str	w0, [x8, #4]
    3384:	ldr	x8, [sp, #64]
    3388:	ldr	w0, [x8, #8]
    338c:	bl	29b8 <__bswap_32>
    3390:	ldr	x8, [sp, #64]
    3394:	str	w0, [x8, #8]
    3398:	ldr	x8, [sp, #64]
    339c:	ldr	w0, [x8, #12]
    33a0:	bl	29b8 <__bswap_32>
    33a4:	ldr	x8, [sp, #64]
    33a8:	str	w0, [x8, #12]
    33ac:	ldr	x8, [sp, #56]
    33b0:	subs	x8, x8, #0x1
    33b4:	str	x8, [sp, #56]
    33b8:	ldr	x8, [sp, #64]
    33bc:	add	x8, x8, #0x10
    33c0:	str	x8, [sp, #64]
    33c4:	b	334c <flip_types+0x344>
    33c8:	b	3448 <flip_types+0x440>
    33cc:	ldur	x8, [x29, #-32]
    33d0:	str	x8, [sp, #48]
    33d4:	ldur	w9, [x29, #-52]
    33d8:	mov	w8, w9
    33dc:	str	x8, [sp, #40]
    33e0:	ldr	x8, [sp, #40]
    33e4:	cmp	x8, #0x0
    33e8:	cset	w9, le
    33ec:	tbnz	w9, #0, 3448 <flip_types+0x440>
    33f0:	ldr	x8, [sp, #48]
    33f4:	ldr	w0, [x8]
    33f8:	bl	29b8 <__bswap_32>
    33fc:	ldr	x8, [sp, #48]
    3400:	str	w0, [x8]
    3404:	ldr	x8, [sp, #48]
    3408:	ldr	w0, [x8, #4]
    340c:	bl	29b8 <__bswap_32>
    3410:	ldr	x8, [sp, #48]
    3414:	str	w0, [x8, #4]
    3418:	ldr	x8, [sp, #48]
    341c:	ldr	w0, [x8, #8]
    3420:	bl	29b8 <__bswap_32>
    3424:	ldr	x8, [sp, #48]
    3428:	str	w0, [x8, #8]
    342c:	ldr	x8, [sp, #40]
    3430:	subs	x8, x8, #0x1
    3434:	str	x8, [sp, #40]
    3438:	ldr	x8, [sp, #48]
    343c:	add	x8, x8, #0xc
    3440:	str	x8, [sp, #48]
    3444:	b	33e0 <flip_types+0x3d8>
    3448:	b	34d4 <flip_types+0x4cc>
    344c:	ldur	x8, [x29, #-32]
    3450:	str	x8, [sp, #32]
    3454:	ldur	w9, [x29, #-52]
    3458:	mov	w8, w9
    345c:	str	x8, [sp, #24]
    3460:	ldr	x8, [sp, #24]
    3464:	cmp	x8, #0x0
    3468:	cset	w9, le
    346c:	tbnz	w9, #0, 34b4 <flip_types+0x4ac>
    3470:	ldr	x8, [sp, #32]
    3474:	ldr	w0, [x8]
    3478:	bl	29b8 <__bswap_32>
    347c:	ldr	x8, [sp, #32]
    3480:	str	w0, [x8]
    3484:	ldr	x8, [sp, #32]
    3488:	ldr	w0, [x8, #4]
    348c:	bl	29b8 <__bswap_32>
    3490:	ldr	x8, [sp, #32]
    3494:	str	w0, [x8, #4]
    3498:	ldr	x8, [sp, #32]
    349c:	add	x8, x8, #0x8
    34a0:	str	x8, [sp, #32]
    34a4:	ldr	x8, [sp, #24]
    34a8:	subs	x8, x8, #0x1
    34ac:	str	x8, [sp, #24]
    34b0:	b	3460 <flip_types+0x458>
    34b4:	b	34d4 <flip_types+0x4cc>
    34b8:	ldur	w1, [x29, #-36]
    34bc:	adrp	x0, 0 <ctf_set_ctl_hashes>
    34c0:	add	x0, x0, #0x0
    34c4:	bl	0 <ctf_dprintf>
    34c8:	mov	w8, #0x3ef                 	// #1007
    34cc:	stur	w8, [x29, #-4]
    34d0:	b	34ec <flip_types+0x4e4>
    34d4:	ldur	x8, [x29, #-32]
    34d8:	ldur	x9, [x29, #-64]
    34dc:	add	x8, x8, x9
    34e0:	stur	x8, [x29, #-32]
    34e4:	b	303c <flip_types+0x34>
    34e8:	stur	wzr, [x29, #-4]
    34ec:	ldur	w0, [x29, #-4]
    34f0:	ldp	x29, x30, [sp, #176]
    34f4:	add	sp, sp, #0xc0
    34f8:	ret

00000000000034fc <upgrade_types>:
    34fc:	sub	sp, sp, #0x30
    3500:	stp	x29, x30, [sp, #32]
    3504:	add	x29, sp, #0x20
    3508:	stur	x0, [x29, #-8]
    350c:	str	x1, [sp, #16]
    3510:	ldr	x8, [sp, #16]
    3514:	ldrb	w9, [x8, #2]
    3518:	cmp	w9, #0x1
    351c:	str	w9, [sp, #12]
    3520:	b.eq	3548 <upgrade_types+0x4c>  // b.none
    3524:	b	3528 <upgrade_types+0x2c>
    3528:	ldr	w8, [sp, #12]
    352c:	cmp	w8, #0x2
    3530:	b.eq	3554 <upgrade_types+0x58>  // b.none
    3534:	b	3538 <upgrade_types+0x3c>
    3538:	ldr	w8, [sp, #12]
    353c:	cmp	w8, #0x3
    3540:	b.eq	3560 <upgrade_types+0x64>  // b.none
    3544:	b	3560 <upgrade_types+0x64>
    3548:	ldur	x0, [x29, #-8]
    354c:	ldr	x1, [sp, #16]
    3550:	bl	35bc <upgrade_types_v1>
    3554:	ldur	x8, [x29, #-8]
    3558:	mov	w9, #0x7fff                	// #32767
    355c:	str	w9, [x8, #544]
    3560:	mov	w8, wzr
    3564:	mov	w0, w8
    3568:	ldp	x29, x30, [sp, #32]
    356c:	add	sp, sp, #0x30
    3570:	ret

0000000000003574 <ctf_get_ctt_size>:
    3574:	sub	sp, sp, #0x30
    3578:	stp	x29, x30, [sp, #32]
    357c:	add	x29, sp, #0x20
    3580:	stur	x0, [x29, #-8]
    3584:	str	x1, [sp, #16]
    3588:	str	x2, [sp, #8]
    358c:	str	x3, [sp]
    3590:	ldur	x8, [x29, #-8]
    3594:	ldr	x8, [x8]
    3598:	ldr	x8, [x8, #24]
    359c:	ldur	x0, [x29, #-8]
    35a0:	ldr	x1, [sp, #16]
    35a4:	ldr	x2, [sp, #8]
    35a8:	ldr	x3, [sp]
    35ac:	blr	x8
    35b0:	ldp	x29, x30, [sp, #32]
    35b4:	add	sp, sp, #0x30
    35b8:	ret

00000000000035bc <upgrade_types_v1>:
    35bc:	sub	sp, sp, #0x160
    35c0:	stp	x29, x30, [sp, #320]
    35c4:	str	x28, [sp, #336]
    35c8:	add	x29, sp, #0x140
    35cc:	adrp	x8, 0 <ctf_set_ctl_hashes>
    35d0:	add	x8, x8, #0x0
    35d4:	adrp	x9, 0 <ctf_set_ctl_hashes>
    35d8:	add	x9, x9, #0x0
    35dc:	stur	x0, [x29, #-16]
    35e0:	stur	x1, [x29, #-24]
    35e4:	ldur	x10, [x29, #-16]
    35e8:	ldr	x10, [x10, #400]
    35ec:	stur	x10, [x29, #-56]
    35f0:	stur	xzr, [x29, #-72]
    35f4:	ldur	x10, [x29, #-16]
    35f8:	ldr	x10, [x10, #408]
    35fc:	ldur	x11, [x29, #-24]
    3600:	ldr	w12, [x11, #40]
    3604:	mov	w11, w12
    3608:	add	x10, x10, x11
    360c:	stur	x10, [x29, #-32]
    3610:	ldur	x10, [x29, #-16]
    3614:	ldr	x10, [x10, #408]
    3618:	ldur	x11, [x29, #-24]
    361c:	ldr	w12, [x11, #44]
    3620:	mov	w11, w12
    3624:	add	x10, x10, x11
    3628:	stur	x10, [x29, #-40]
    362c:	ldur	x10, [x29, #-32]
    3630:	stur	x10, [x29, #-120]
    3634:	str	x8, [sp, #24]
    3638:	str	x9, [sp, #16]
    363c:	ldur	x8, [x29, #-120]
    3640:	ldur	x9, [x29, #-40]
    3644:	cmp	x8, x9
    3648:	b.cs	3750 <upgrade_types_v1+0x194>  // b.hs, b.nlast
    364c:	ldur	x8, [x29, #-120]
    3650:	ldrh	w9, [x8, #4]
    3654:	and	w9, w9, #0xf800
    3658:	asr	w9, w9, #11
    365c:	sturh	w9, [x29, #-130]
    3660:	ldur	x8, [x29, #-120]
    3664:	ldrh	w9, [x8, #4]
    3668:	and	w9, w9, #0x3ff
    366c:	mov	w0, w9
    3670:	sxtw	x8, w0
    3674:	stur	x8, [x29, #-144]
    3678:	ldur	x0, [x29, #-16]
    367c:	ldur	x1, [x29, #-120]
    3680:	mov	x8, xzr
    3684:	mov	x2, x8
    3688:	sub	x3, x29, #0x58
    368c:	str	x8, [sp, #8]
    3690:	bl	2a48 <get_ctt_size_v1>
    3694:	stur	x0, [x29, #-80]
    3698:	ldurh	w0, [x29, #-130]
    369c:	ldur	x1, [x29, #-80]
    36a0:	ldur	x2, [x29, #-144]
    36a4:	bl	2ac8 <get_vbytes_v1>
    36a8:	stur	x0, [x29, #-104]
    36ac:	ldur	x0, [x29, #-16]
    36b0:	ldur	x1, [x29, #-120]
    36b4:	ldr	x2, [sp, #8]
    36b8:	sub	x3, x29, #0x60
    36bc:	bl	3df0 <get_ctt_size_v2_unconverted>
    36c0:	ldurh	w9, [x29, #-130]
    36c4:	ldur	x1, [x29, #-80]
    36c8:	ldur	x2, [x29, #-144]
    36cc:	mov	w0, w9
    36d0:	bl	2c64 <get_vbytes_v2>
    36d4:	stur	x0, [x29, #-112]
    36d8:	ldur	x8, [x29, #-104]
    36dc:	cmp	x8, #0x0
    36e0:	cset	w9, lt  // lt = tstop
    36e4:	tbnz	w9, #0, 36f8 <upgrade_types_v1+0x13c>
    36e8:	ldur	x8, [x29, #-80]
    36ec:	cmp	x8, #0x0
    36f0:	cset	w9, ge  // ge = tcont
    36f4:	tbnz	w9, #0, 3704 <upgrade_types_v1+0x148>
    36f8:	mov	w8, #0x3ef                 	// #1007
    36fc:	stur	w8, [x29, #-4]
    3700:	b	3ddc <upgrade_types_v1+0x820>
    3704:	ldur	x8, [x29, #-96]
    3708:	ldur	x9, [x29, #-88]
    370c:	subs	x8, x8, x9
    3710:	ldur	x9, [x29, #-72]
    3714:	add	x8, x9, x8
    3718:	stur	x8, [x29, #-72]
    371c:	ldur	x8, [x29, #-112]
    3720:	ldur	x9, [x29, #-104]
    3724:	subs	x8, x8, x9
    3728:	ldur	x9, [x29, #-72]
    372c:	add	x8, x9, x8
    3730:	stur	x8, [x29, #-72]
    3734:	ldur	x8, [x29, #-120]
    3738:	ldur	x9, [x29, #-88]
    373c:	add	x8, x8, x9
    3740:	ldur	x9, [x29, #-104]
    3744:	add	x8, x8, x9
    3748:	stur	x8, [x29, #-120]
    374c:	b	363c <upgrade_types_v1+0x80>
    3750:	ldur	x8, [x29, #-16]
    3754:	ldr	x8, [x8, #416]
    3758:	ldur	x9, [x29, #-72]
    375c:	add	x0, x8, x9
    3760:	bl	0 <malloc>
    3764:	stur	x0, [x29, #-48]
    3768:	cbnz	x0, 3778 <upgrade_types_v1+0x1bc>
    376c:	mov	w8, #0x3f6                 	// #1014
    3770:	stur	w8, [x29, #-4]
    3774:	b	3ddc <upgrade_types_v1+0x820>
    3778:	ldur	x0, [x29, #-48]
    377c:	ldur	x8, [x29, #-16]
    3780:	ldr	x1, [x8, #408]
    3784:	ldur	x8, [x29, #-24]
    3788:	ldr	w9, [x8, #40]
    378c:	mov	w2, w9
    3790:	bl	0 <memcpy>
    3794:	ldur	x8, [x29, #-48]
    3798:	ldur	x10, [x29, #-24]
    379c:	ldr	w9, [x10, #44]
    37a0:	mov	w10, w9
    37a4:	add	x8, x8, x10
    37a8:	ldur	x10, [x29, #-72]
    37ac:	add	x0, x8, x10
    37b0:	ldur	x8, [x29, #-16]
    37b4:	ldr	x8, [x8, #408]
    37b8:	ldur	x10, [x29, #-24]
    37bc:	ldr	w9, [x10, #44]
    37c0:	mov	w10, w9
    37c4:	add	x1, x8, x10
    37c8:	ldur	x8, [x29, #-24]
    37cc:	ldr	w9, [x8, #48]
    37d0:	mov	w2, w9
    37d4:	bl	0 <memcpy>
    37d8:	ldur	x8, [x29, #-48]
    37dc:	ldur	x10, [x29, #-24]
    37e0:	ldr	w9, [x10, #40]
    37e4:	mov	w10, w9
    37e8:	add	x0, x8, x10
    37ec:	ldur	x8, [x29, #-24]
    37f0:	ldr	w9, [x8, #44]
    37f4:	ldur	x8, [x29, #-24]
    37f8:	ldr	w11, [x8, #40]
    37fc:	subs	w9, w9, w11
    3800:	mov	w8, w9
    3804:	ubfx	x8, x8, #0, #32
    3808:	ldur	x10, [x29, #-72]
    380c:	add	x2, x8, x10
    3810:	mov	w9, wzr
    3814:	mov	w1, w9
    3818:	bl	0 <memset>
    381c:	ldur	x8, [x29, #-72]
    3820:	ldur	x10, [x29, #-24]
    3824:	ldr	w9, [x10, #44]
    3828:	mov	w12, w9
    382c:	add	x8, x12, x8
    3830:	str	w8, [x10, #44]
    3834:	ldur	x10, [x29, #-72]
    3838:	ldur	x12, [x29, #-16]
    383c:	ldr	x13, [x12, #416]
    3840:	add	x10, x13, x10
    3844:	str	x10, [x12, #416]
    3848:	ldur	x10, [x29, #-24]
    384c:	ldr	w8, [x10, #44]
    3850:	ldur	x10, [x29, #-24]
    3854:	ldr	w9, [x10, #40]
    3858:	cmp	w8, w9
    385c:	b.cc	3864 <upgrade_types_v1+0x2a8>  // b.lo, b.ul, b.last
    3860:	b	387c <upgrade_types_v1+0x2c0>
    3864:	adrp	x0, 0 <ctf_set_ctl_hashes>
    3868:	add	x0, x0, #0x0
    386c:	ldr	x1, [sp, #24]
    3870:	mov	w2, #0x1d0                 	// #464
    3874:	ldr	x3, [sp, #16]
    3878:	bl	0 <__assert_fail>
    387c:	ldur	x8, [x29, #-48]
    3880:	ldur	x9, [x29, #-16]
    3884:	str	x8, [x9, #392]
    3888:	ldur	x8, [x29, #-48]
    388c:	ldur	x9, [x29, #-16]
    3890:	str	x8, [x9, #408]
    3894:	ldur	x8, [x29, #-48]
    3898:	ldur	x9, [x29, #-16]
    389c:	str	x8, [x9, #400]
    38a0:	ldur	x0, [x29, #-16]
    38a4:	ldur	x1, [x29, #-24]
    38a8:	ldur	x2, [x29, #-48]
    38ac:	bl	11b4 <ctf_set_base>
    38b0:	ldur	x8, [x29, #-16]
    38b4:	ldr	x8, [x8, #408]
    38b8:	ldur	x9, [x29, #-24]
    38bc:	ldr	w10, [x9, #40]
    38c0:	mov	w9, w10
    38c4:	add	x8, x8, x9
    38c8:	stur	x8, [x29, #-64]
    38cc:	ldur	x8, [x29, #-32]
    38d0:	stur	x8, [x29, #-120]
    38d4:	ldur	x8, [x29, #-64]
    38d8:	stur	x8, [x29, #-128]
    38dc:	ldur	x8, [x29, #-120]
    38e0:	ldur	x9, [x29, #-40]
    38e4:	cmp	x8, x9
    38e8:	b.cs	3d80 <upgrade_types_v1+0x7c4>  // b.hs, b.nlast
    38ec:	ldur	x8, [x29, #-120]
    38f0:	ldrh	w9, [x8, #4]
    38f4:	and	w9, w9, #0xf800
    38f8:	asr	w9, w9, #11
    38fc:	sturh	w9, [x29, #-146]
    3900:	ldur	x8, [x29, #-120]
    3904:	ldrh	w9, [x8, #4]
    3908:	and	w9, w9, #0x400
    390c:	asr	w9, w9, #10
    3910:	stur	w9, [x29, #-152]
    3914:	ldur	x8, [x29, #-120]
    3918:	ldrh	w9, [x8, #4]
    391c:	and	w9, w9, #0x3ff
    3920:	mov	w0, w9
    3924:	sxtw	x8, w0
    3928:	str	x8, [sp, #160]
    392c:	ldur	x0, [x29, #-16]
    3930:	ldur	x1, [x29, #-120]
    3934:	mov	x8, xzr
    3938:	mov	x2, x8
    393c:	sub	x3, x29, #0x58
    3940:	bl	2a48 <get_ctt_size_v1>
    3944:	stur	x0, [x29, #-80]
    3948:	ldurh	w0, [x29, #-146]
    394c:	ldur	x1, [x29, #-80]
    3950:	ldr	x2, [sp, #160]
    3954:	bl	2ac8 <get_vbytes_v1>
    3958:	stur	x0, [x29, #-104]
    395c:	ldur	x8, [x29, #-120]
    3960:	ldr	w9, [x8]
    3964:	ldur	x8, [x29, #-128]
    3968:	str	w9, [x8]
    396c:	ldurh	w9, [x29, #-146]
    3970:	ldur	w10, [x29, #-152]
    3974:	mov	w11, wzr
    3978:	mov	w12, #0x1                   	// #1
    397c:	cmp	w10, #0x0
    3980:	csel	w10, w12, w11, ne  // ne = any
    3984:	lsl	w10, w10, #25
    3988:	orr	w9, w10, w9, lsl #26
    398c:	mov	w0, w9
    3990:	sxtw	x8, w0
    3994:	ldr	x13, [sp, #160]
    3998:	and	x13, x13, #0xffffff
    399c:	orr	x8, x8, x13
    39a0:	ldur	x13, [x29, #-128]
    39a4:	str	w8, [x13, #4]
    39a8:	ldurh	w8, [x29, #-146]
    39ac:	subs	w9, w8, #0x0
    39b0:	cmp	w9, #0x2
    39b4:	str	w8, [sp, #4]
    39b8:	b.ls	3a34 <upgrade_types_v1+0x478>  // b.plast
    39bc:	b	39c0 <upgrade_types_v1+0x404>
    39c0:	ldr	w8, [sp, #4]
    39c4:	cmp	w8, #0x3
    39c8:	b.eq	3a20 <upgrade_types_v1+0x464>  // b.none
    39cc:	b	39d0 <upgrade_types_v1+0x414>
    39d0:	ldr	w8, [sp, #4]
    39d4:	cmp	w8, #0x4
    39d8:	b.eq	3a34 <upgrade_types_v1+0x478>  // b.none
    39dc:	b	39e0 <upgrade_types_v1+0x424>
    39e0:	ldr	w8, [sp, #4]
    39e4:	cmp	w8, #0x5
    39e8:	b.eq	3a20 <upgrade_types_v1+0x464>  // b.none
    39ec:	b	39f0 <upgrade_types_v1+0x434>
    39f0:	ldr	w8, [sp, #4]
    39f4:	subs	w9, w8, #0x6
    39f8:	cmp	w9, #0x2
    39fc:	b.ls	3a34 <upgrade_types_v1+0x478>  // b.plast
    3a00:	b	3a04 <upgrade_types_v1+0x448>
    3a04:	ldr	w8, [sp, #4]
    3a08:	subs	w9, w8, #0x9
    3a0c:	cmp	w9, #0x4
    3a10:	cset	w9, ls  // ls = plast
    3a14:	eor	w9, w9, #0x1
    3a18:	tbnz	w9, #0, 3a70 <upgrade_types_v1+0x4b4>
    3a1c:	b	3a20 <upgrade_types_v1+0x464>
    3a20:	ldur	x8, [x29, #-120]
    3a24:	ldrh	w9, [x8, #6]
    3a28:	ldur	x8, [x29, #-128]
    3a2c:	str	w9, [x8, #8]
    3a30:	b	3a70 <upgrade_types_v1+0x4b4>
    3a34:	ldur	x8, [x29, #-80]
    3a38:	mov	x9, #0xfffffffe            	// #4294967294
    3a3c:	cmp	x8, x9
    3a40:	b.hi	3a54 <upgrade_types_v1+0x498>  // b.pmore
    3a44:	ldur	x8, [x29, #-80]
    3a48:	ldur	x9, [x29, #-128]
    3a4c:	str	w8, [x9, #8]
    3a50:	b	3a70 <upgrade_types_v1+0x4b4>
    3a54:	ldur	x8, [x29, #-80]
    3a58:	lsr	x8, x8, #32
    3a5c:	ldur	x9, [x29, #-128]
    3a60:	str	w8, [x9, #12]
    3a64:	ldur	x9, [x29, #-80]
    3a68:	ldur	x10, [x29, #-128]
    3a6c:	str	w9, [x10, #16]
    3a70:	ldur	x0, [x29, #-16]
    3a74:	ldur	x1, [x29, #-128]
    3a78:	mov	x8, xzr
    3a7c:	mov	x2, x8
    3a80:	sub	x3, x29, #0x60
    3a84:	bl	2bec <get_ctt_size_v2>
    3a88:	str	x0, [sp, #152]
    3a8c:	ldurh	w0, [x29, #-146]
    3a90:	ldr	x1, [sp, #152]
    3a94:	ldr	x2, [sp, #160]
    3a98:	bl	2c64 <get_vbytes_v2>
    3a9c:	stur	x0, [x29, #-112]
    3aa0:	ldur	x8, [x29, #-80]
    3aa4:	ldr	x9, [sp, #152]
    3aa8:	cmp	x8, x9
    3aac:	b.ne	3ab4 <upgrade_types_v1+0x4f8>  // b.any
    3ab0:	b	3acc <upgrade_types_v1+0x510>
    3ab4:	adrp	x0, 0 <ctf_set_ctl_hashes>
    3ab8:	add	x0, x0, #0x0
    3abc:	ldr	x1, [sp, #24]
    3ac0:	mov	w2, #0x210                 	// #528
    3ac4:	ldr	x3, [sp, #16]
    3ac8:	bl	0 <__assert_fail>
    3acc:	ldur	x8, [x29, #-120]
    3ad0:	ldur	x9, [x29, #-88]
    3ad4:	add	x8, x8, x9
    3ad8:	str	x8, [sp, #144]
    3adc:	ldur	x8, [x29, #-128]
    3ae0:	ldur	x9, [x29, #-96]
    3ae4:	add	x8, x8, x9
    3ae8:	str	x8, [sp, #136]
    3aec:	ldurh	w10, [x29, #-146]
    3af0:	cmp	w10, #0x4
    3af4:	str	w10, [sp]
    3af8:	b.eq	3b24 <upgrade_types_v1+0x568>  // b.none
    3afc:	b	3b00 <upgrade_types_v1+0x544>
    3b00:	ldr	w8, [sp]
    3b04:	cmp	w8, #0x5
    3b08:	b.eq	3cb8 <upgrade_types_v1+0x6fc>  // b.none
    3b0c:	b	3b10 <upgrade_types_v1+0x554>
    3b10:	ldr	w8, [sp]
    3b14:	subs	w9, w8, #0x6
    3b18:	cmp	w9, #0x1
    3b1c:	b.ls	3b68 <upgrade_types_v1+0x5ac>  // b.plast
    3b20:	b	3d10 <upgrade_types_v1+0x754>
    3b24:	ldr	x8, [sp, #144]
    3b28:	str	x8, [sp, #128]
    3b2c:	ldr	x8, [sp, #136]
    3b30:	str	x8, [sp, #120]
    3b34:	ldr	x8, [sp, #128]
    3b38:	ldrh	w9, [x8]
    3b3c:	ldr	x8, [sp, #120]
    3b40:	str	w9, [x8]
    3b44:	ldr	x8, [sp, #128]
    3b48:	ldrh	w9, [x8, #2]
    3b4c:	ldr	x8, [sp, #120]
    3b50:	str	w9, [x8, #4]
    3b54:	ldr	x8, [sp, #128]
    3b58:	ldr	w9, [x8, #4]
    3b5c:	ldr	x8, [sp, #120]
    3b60:	str	w9, [x8, #8]
    3b64:	b	3d4c <upgrade_types_v1+0x790>
    3b68:	ldr	x8, [sp, #144]
    3b6c:	str	x8, [sp, #96]
    3b70:	ldr	x8, [sp, #96]
    3b74:	str	x8, [sp, #88]
    3b78:	ldr	x8, [sp, #136]
    3b7c:	str	x8, [sp, #80]
    3b80:	ldr	x8, [sp, #80]
    3b84:	str	x8, [sp, #72]
    3b88:	ldr	x8, [sp, #160]
    3b8c:	str	x8, [sp, #64]
    3b90:	ldr	x8, [sp, #64]
    3b94:	cbz	x8, 3cb4 <upgrade_types_v1+0x6f8>
    3b98:	ldur	x8, [x29, #-80]
    3b9c:	cmp	x8, #0x2, lsl #12
    3ba0:	b.ge	3bd0 <upgrade_types_v1+0x614>  // b.tcont
    3ba4:	ldr	x8, [sp, #96]
    3ba8:	ldrh	w9, [x8, #6]
    3bac:	mov	w8, w9
    3bb0:	str	x8, [sp, #56]
    3bb4:	ldr	x8, [sp, #96]
    3bb8:	ldr	w9, [x8]
    3bbc:	str	w9, [sp, #108]
    3bc0:	ldr	x8, [sp, #96]
    3bc4:	ldrh	w9, [x8, #4]
    3bc8:	str	w9, [sp, #116]
    3bcc:	b	3c08 <upgrade_types_v1+0x64c>
    3bd0:	ldr	x8, [sp, #88]
    3bd4:	ldr	w9, [x8, #8]
    3bd8:	mov	w8, w9
    3bdc:	ldr	x10, [sp, #88]
    3be0:	ldr	w9, [x10, #12]
    3be4:	mov	w10, w9
    3be8:	orr	x8, x10, x8, lsl #32
    3bec:	str	x8, [sp, #56]
    3bf0:	ldr	x8, [sp, #88]
    3bf4:	ldr	w9, [x8]
    3bf8:	str	w9, [sp, #108]
    3bfc:	ldr	x8, [sp, #88]
    3c00:	ldrh	w9, [x8, #4]
    3c04:	str	w9, [sp, #116]
    3c08:	ldur	x8, [x29, #-80]
    3c0c:	mov	x9, #0x20000000            	// #536870912
    3c10:	cmp	x8, x9
    3c14:	b.ge	3c40 <upgrade_types_v1+0x684>  // b.tcont
    3c18:	ldr	w8, [sp, #108]
    3c1c:	ldr	x9, [sp, #80]
    3c20:	str	w8, [x9]
    3c24:	ldr	w8, [sp, #116]
    3c28:	ldr	x9, [sp, #80]
    3c2c:	str	w8, [x9, #8]
    3c30:	ldr	x9, [sp, #56]
    3c34:	ldr	x10, [sp, #80]
    3c38:	str	w9, [x10, #4]
    3c3c:	b	3c74 <upgrade_types_v1+0x6b8>
    3c40:	ldr	w8, [sp, #108]
    3c44:	ldr	x9, [sp, #72]
    3c48:	str	w8, [x9]
    3c4c:	ldr	w8, [sp, #116]
    3c50:	ldr	x9, [sp, #72]
    3c54:	str	w8, [x9, #8]
    3c58:	ldr	x9, [sp, #56]
    3c5c:	lsr	x9, x9, #32
    3c60:	ldr	x10, [sp, #72]
    3c64:	str	w9, [x10, #4]
    3c68:	ldr	x10, [sp, #56]
    3c6c:	ldr	x11, [sp, #72]
    3c70:	str	w10, [x11, #12]
    3c74:	ldr	x8, [sp, #64]
    3c78:	subs	x8, x8, #0x1
    3c7c:	str	x8, [sp, #64]
    3c80:	ldr	x8, [sp, #96]
    3c84:	add	x8, x8, #0x8
    3c88:	str	x8, [sp, #96]
    3c8c:	ldr	x8, [sp, #88]
    3c90:	add	x8, x8, #0x10
    3c94:	str	x8, [sp, #88]
    3c98:	ldr	x8, [sp, #80]
    3c9c:	add	x8, x8, #0xc
    3ca0:	str	x8, [sp, #80]
    3ca4:	ldr	x8, [sp, #72]
    3ca8:	add	x8, x8, #0x10
    3cac:	str	x8, [sp, #72]
    3cb0:	b	3b90 <upgrade_types_v1+0x5d4>
    3cb4:	b	3d4c <upgrade_types_v1+0x790>
    3cb8:	ldr	x8, [sp, #144]
    3cbc:	str	x8, [sp, #40]
    3cc0:	ldr	x8, [sp, #136]
    3cc4:	str	x8, [sp, #32]
    3cc8:	ldr	x8, [sp, #160]
    3ccc:	str	x8, [sp, #48]
    3cd0:	ldr	x8, [sp, #48]
    3cd4:	cbz	x8, 3d10 <upgrade_types_v1+0x754>
    3cd8:	ldr	x8, [sp, #40]
    3cdc:	ldrh	w9, [x8]
    3ce0:	ldr	x8, [sp, #32]
    3ce4:	str	w9, [x8]
    3ce8:	ldr	x8, [sp, #48]
    3cec:	subs	x8, x8, #0x1
    3cf0:	str	x8, [sp, #48]
    3cf4:	ldr	x8, [sp, #40]
    3cf8:	add	x8, x8, #0x2
    3cfc:	str	x8, [sp, #40]
    3d00:	ldr	x8, [sp, #32]
    3d04:	add	x8, x8, #0x4
    3d08:	str	x8, [sp, #32]
    3d0c:	b	3cd0 <upgrade_types_v1+0x714>
    3d10:	ldur	x8, [x29, #-104]
    3d14:	ldur	x9, [x29, #-112]
    3d18:	cmp	x8, x9
    3d1c:	b.ne	3d24 <upgrade_types_v1+0x768>  // b.any
    3d20:	b	3d3c <upgrade_types_v1+0x780>
    3d24:	adrp	x0, 0 <ctf_set_ctl_hashes>
    3d28:	add	x0, x0, #0x0
    3d2c:	ldr	x1, [sp, #24]
    3d30:	mov	w2, #0x25c                 	// #604
    3d34:	ldr	x3, [sp, #16]
    3d38:	bl	0 <__assert_fail>
    3d3c:	ldr	x0, [sp, #136]
    3d40:	ldr	x1, [sp, #144]
    3d44:	ldur	x2, [x29, #-104]
    3d48:	bl	0 <memcpy>
    3d4c:	ldur	x8, [x29, #-120]
    3d50:	ldur	x9, [x29, #-88]
    3d54:	add	x8, x8, x9
    3d58:	ldur	x9, [x29, #-104]
    3d5c:	add	x8, x8, x9
    3d60:	stur	x8, [x29, #-120]
    3d64:	ldur	x8, [x29, #-128]
    3d68:	ldur	x9, [x29, #-96]
    3d6c:	add	x8, x8, x9
    3d70:	ldur	x9, [x29, #-112]
    3d74:	add	x8, x8, x9
    3d78:	stur	x8, [x29, #-128]
    3d7c:	b	38dc <upgrade_types_v1+0x320>
    3d80:	ldur	x8, [x29, #-128]
    3d84:	ldur	x9, [x29, #-16]
    3d88:	ldr	x9, [x9, #408]
    3d8c:	subs	x8, x8, x9
    3d90:	ldur	x9, [x29, #-24]
    3d94:	ldr	w10, [x9, #44]
    3d98:	mov	w9, w10
    3d9c:	cmp	x8, x9
    3da0:	b.ne	3da8 <upgrade_types_v1+0x7ec>  // b.any
    3da4:	b	3dc0 <upgrade_types_v1+0x804>
    3da8:	adrp	x0, 0 <ctf_set_ctl_hashes>
    3dac:	add	x0, x0, #0x0
    3db0:	ldr	x1, [sp, #24]
    3db4:	mov	w2, #0x265                 	// #613
    3db8:	ldr	x3, [sp, #16]
    3dbc:	bl	0 <__assert_fail>
    3dc0:	ldur	x0, [x29, #-16]
    3dc4:	ldur	x1, [x29, #-24]
    3dc8:	mov	w2, #0x2                   	// #2
    3dcc:	bl	fd8 <ctf_set_version>
    3dd0:	ldur	x0, [x29, #-56]
    3dd4:	bl	0 <free>
    3dd8:	stur	wzr, [x29, #-4]
    3ddc:	ldur	w0, [x29, #-4]
    3de0:	ldr	x28, [sp, #336]
    3de4:	ldp	x29, x30, [sp, #320]
    3de8:	add	sp, sp, #0x160
    3dec:	ret

0000000000003df0 <get_ctt_size_v2_unconverted>:
    3df0:	sub	sp, sp, #0x40
    3df4:	stp	x29, x30, [sp, #48]
    3df8:	add	x29, sp, #0x30
    3dfc:	mov	x6, #0x14                  	// #20
    3e00:	mov	x7, #0xc                   	// #12
    3e04:	mov	x8, #0xffffffff            	// #4294967295
    3e08:	stur	x0, [x29, #-8]
    3e0c:	stur	x1, [x29, #-16]
    3e10:	str	x2, [sp, #24]
    3e14:	str	x3, [sp, #16]
    3e18:	ldur	x9, [x29, #-16]
    3e1c:	str	x9, [sp, #8]
    3e20:	ldur	x0, [x29, #-8]
    3e24:	ldur	x1, [x29, #-16]
    3e28:	ldr	x2, [sp, #24]
    3e2c:	ldr	x3, [sp, #16]
    3e30:	ldr	x9, [sp, #8]
    3e34:	ldr	w10, [x9, #8]
    3e38:	mov	w9, w10
    3e3c:	ldr	x11, [sp, #8]
    3e40:	ldr	w10, [x11, #12]
    3e44:	mov	w11, w10
    3e48:	orr	x4, x11, x9, lsl #32
    3e4c:	ldr	x9, [sp, #8]
    3e50:	ldrh	w10, [x9, #6]
    3e54:	mov	w5, w10
    3e58:	mov	x9, sp
    3e5c:	str	x8, [x9]
    3e60:	bl	2d3c <get_ctt_size_common>
    3e64:	ldp	x29, x30, [sp, #48]
    3e68:	add	sp, sp, #0x40
    3e6c:	ret

ctf-string.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_strraw_explicit>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	stur	x0, [x29, #-16]
  10:	stur	w1, [x29, #-20]
  14:	str	x2, [sp, #16]
  18:	ldur	x8, [x29, #-16]
  1c:	add	x8, x8, #0x150
  20:	ldur	w9, [x29, #-20]
  24:	mov	x10, #0x1f                  	// #31
  28:	lsr	w9, w9, #31
  2c:	mov	w11, w9
  30:	ubfx	x11, x11, #0, #32
  34:	mov	x12, #0x10                  	// #16
  38:	mul	x11, x12, x11
  3c:	add	x8, x8, x11
  40:	str	x8, [sp, #8]
  44:	ldur	w9, [x29, #-20]
  48:	lsr	w9, w9, w10
  4c:	cbnz	w9, 60 <ctf_strraw_explicit+0x60>
  50:	ldr	x8, [sp, #16]
  54:	cbz	x8, 60 <ctf_strraw_explicit+0x60>
  58:	ldr	x8, [sp, #16]
  5c:	str	x8, [sp, #8]
  60:	ldur	w8, [x29, #-20]
  64:	lsr	w8, w8, #31
  68:	cmp	w8, #0x1
  6c:	b.ne	98 <ctf_strraw_explicit+0x98>  // b.any
  70:	ldur	x8, [x29, #-16]
  74:	ldr	x8, [x8, #128]
  78:	cbz	x8, 98 <ctf_strraw_explicit+0x98>
  7c:	ldur	x8, [x29, #-16]
  80:	ldr	x0, [x8, #128]
  84:	ldur	w9, [x29, #-20]
  88:	mov	w1, w9
  8c:	bl	0 <ctf_dynhash_lookup>
  90:	stur	x0, [x29, #-8]
  94:	b	144 <ctf_strraw_explicit+0x144>
  98:	ldur	w8, [x29, #-20]
  9c:	lsr	w8, w8, #31
  a0:	cbnz	w8, ec <ctf_strraw_explicit+0xec>
  a4:	ldur	w8, [x29, #-20]
  a8:	mov	w9, w8
  ac:	ldr	x10, [sp, #8]
  b0:	ldr	x10, [x10, #8]
  b4:	cmp	x9, x10
  b8:	b.cc	ec <ctf_strraw_explicit+0xec>  // b.lo, b.ul, b.last
  bc:	ldur	w8, [x29, #-20]
  c0:	ldur	x9, [x29, #-16]
  c4:	ldr	w10, [x9, #384]
  c8:	cmp	w8, w10
  cc:	b.cs	ec <ctf_strraw_explicit+0xec>  // b.hs, b.nlast
  d0:	ldur	x8, [x29, #-16]
  d4:	ldr	x0, [x8, #120]
  d8:	ldur	w9, [x29, #-20]
  dc:	mov	w1, w9
  e0:	bl	0 <ctf_dynhash_lookup>
  e4:	stur	x0, [x29, #-8]
  e8:	b	144 <ctf_strraw_explicit+0x144>
  ec:	ldr	x8, [sp, #8]
  f0:	ldr	x8, [x8]
  f4:	cbz	x8, 13c <ctf_strraw_explicit+0x13c>
  f8:	ldur	w8, [x29, #-20]
  fc:	and	w8, w8, #0x7fffffff
 100:	mov	w9, w8
 104:	ubfx	x9, x9, #0, #32
 108:	ldr	x10, [sp, #8]
 10c:	ldr	x10, [x10, #8]
 110:	cmp	x9, x10
 114:	b.cs	13c <ctf_strraw_explicit+0x13c>  // b.hs, b.nlast
 118:	ldr	x8, [sp, #8]
 11c:	ldr	x8, [x8]
 120:	ldur	w9, [x29, #-20]
 124:	and	w9, w9, #0x7fffffff
 128:	mov	w10, w9
 12c:	ubfx	x10, x10, #0, #32
 130:	add	x8, x8, x10
 134:	stur	x8, [x29, #-8]
 138:	b	144 <ctf_strraw_explicit+0x144>
 13c:	mov	x8, xzr
 140:	stur	x8, [x29, #-8]
 144:	ldur	x0, [x29, #-8]
 148:	ldp	x29, x30, [sp, #48]
 14c:	add	sp, sp, #0x40
 150:	ret

0000000000000154 <ctf_strraw>:
 154:	sub	sp, sp, #0x20
 158:	stp	x29, x30, [sp, #16]
 15c:	add	x29, sp, #0x10
 160:	mov	x8, xzr
 164:	str	x0, [sp, #8]
 168:	str	w1, [sp, #4]
 16c:	ldr	x0, [sp, #8]
 170:	ldr	w1, [sp, #4]
 174:	mov	x2, x8
 178:	bl	0 <ctf_strraw_explicit>
 17c:	ldp	x29, x30, [sp, #16]
 180:	add	sp, sp, #0x20
 184:	ret

0000000000000188 <ctf_strptr>:
 188:	sub	sp, sp, #0x30
 18c:	stp	x29, x30, [sp, #32]
 190:	add	x29, sp, #0x20
 194:	stur	x0, [x29, #-8]
 198:	stur	w1, [x29, #-12]
 19c:	ldur	x0, [x29, #-8]
 1a0:	ldur	w1, [x29, #-12]
 1a4:	bl	154 <ctf_strraw>
 1a8:	str	x0, [sp, #8]
 1ac:	ldr	x8, [sp, #8]
 1b0:	cbz	x8, 1c0 <ctf_strptr+0x38>
 1b4:	ldr	x8, [sp, #8]
 1b8:	str	x8, [sp]
 1bc:	b	1cc <ctf_strptr+0x44>
 1c0:	adrp	x8, 0 <ctf_strraw_explicit>
 1c4:	add	x8, x8, #0x0
 1c8:	str	x8, [sp]
 1cc:	ldr	x8, [sp]
 1d0:	mov	x0, x8
 1d4:	ldp	x29, x30, [sp, #32]
 1d8:	add	sp, sp, #0x30
 1dc:	ret

00000000000001e0 <ctf_str_create_atoms>:
 1e0:	sub	sp, sp, #0x20
 1e4:	stp	x29, x30, [sp, #16]
 1e8:	add	x29, sp, #0x10
 1ec:	adrp	x8, 0 <ctf_hash_string>
 1f0:	add	x8, x8, #0x0
 1f4:	adrp	x1, 0 <ctf_hash_eq_string>
 1f8:	add	x1, x1, #0x0
 1fc:	adrp	x2, 0 <free>
 200:	add	x2, x2, #0x0
 204:	adrp	x3, 0 <ctf_strraw_explicit>
 208:	add	x3, x3, #0x0
 20c:	str	x0, [sp]
 210:	mov	x0, x8
 214:	bl	0 <ctf_dynhash_create>
 218:	ldr	x8, [sp]
 21c:	str	x0, [x8, #368]
 220:	ldr	x8, [sp]
 224:	ldr	x8, [x8, #368]
 228:	cbnz	x8, 238 <ctf_str_create_atoms+0x58>
 22c:	mov	w8, #0xfffffff4            	// #-12
 230:	stur	w8, [x29, #-4]
 234:	b	2e8 <ctf_str_create_atoms+0x108>
 238:	ldr	x8, [sp]
 23c:	ldr	x8, [x8, #120]
 240:	cbnz	x8, 26c <ctf_str_create_atoms+0x8c>
 244:	adrp	x0, 0 <ctf_hash_integer>
 248:	add	x0, x0, #0x0
 24c:	adrp	x1, 0 <ctf_hash_eq_integer>
 250:	add	x1, x1, #0x0
 254:	mov	x8, xzr
 258:	mov	x2, x8
 25c:	mov	x3, x8
 260:	bl	0 <ctf_dynhash_create>
 264:	ldr	x8, [sp]
 268:	str	x0, [x8, #120]
 26c:	ldr	x8, [sp]
 270:	ldr	x8, [x8, #120]
 274:	cbnz	x8, 27c <ctf_str_create_atoms+0x9c>
 278:	b	2c8 <ctf_str_create_atoms+0xe8>
 27c:	bl	0 <__errno_location>
 280:	str	wzr, [x0]
 284:	ldr	x0, [sp]
 288:	adrp	x1, 0 <ctf_strraw_explicit>
 28c:	add	x1, x1, #0x0
 290:	bl	32c <ctf_str_add>
 294:	bl	0 <__errno_location>
 298:	ldr	w8, [x0]
 29c:	cmp	w8, #0xc
 2a0:	b.ne	2a8 <ctf_str_create_atoms+0xc8>  // b.any
 2a4:	b	2b0 <ctf_str_create_atoms+0xd0>
 2a8:	stur	wzr, [x29, #-4]
 2ac:	b	2e8 <ctf_str_create_atoms+0x108>
 2b0:	ldr	x8, [sp]
 2b4:	ldr	x0, [x8, #120]
 2b8:	bl	0 <ctf_dynhash_destroy>
 2bc:	ldr	x8, [sp]
 2c0:	mov	x9, xzr
 2c4:	str	x9, [x8, #120]
 2c8:	ldr	x8, [sp]
 2cc:	ldr	x0, [x8, #368]
 2d0:	bl	0 <ctf_dynhash_destroy>
 2d4:	ldr	x8, [sp]
 2d8:	mov	x9, xzr
 2dc:	str	x9, [x8, #368]
 2e0:	mov	w10, #0xfffffff4            	// #-12
 2e4:	stur	w10, [x29, #-4]
 2e8:	ldur	w0, [x29, #-4]
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	add	sp, sp, #0x20
 2f4:	ret

00000000000002f8 <ctf_str_free_atom>:
 2f8:	sub	sp, sp, #0x20
 2fc:	stp	x29, x30, [sp, #16]
 300:	add	x29, sp, #0x10
 304:	str	x0, [sp, #8]
 308:	ldr	x8, [sp, #8]
 30c:	str	x8, [sp]
 310:	ldr	x0, [sp]
 314:	bl	e1c <ctf_str_purge_atom_refs>
 318:	ldr	x0, [sp]
 31c:	bl	0 <free>
 320:	ldp	x29, x30, [sp, #16]
 324:	add	sp, sp, #0x20
 328:	ret

000000000000032c <ctf_str_add>:
 32c:	sub	sp, sp, #0x30
 330:	stp	x29, x30, [sp, #32]
 334:	add	x29, sp, #0x20
 338:	str	x0, [sp, #16]
 33c:	str	x1, [sp, #8]
 340:	ldr	x8, [sp, #8]
 344:	cbnz	x8, 350 <ctf_str_add+0x24>
 348:	stur	wzr, [x29, #-4]
 34c:	b	390 <ctf_str_add+0x64>
 350:	ldr	x0, [sp, #16]
 354:	ldr	x1, [sp, #8]
 358:	mov	w8, wzr
 35c:	mov	w2, w8
 360:	mov	w3, #0x1                   	// #1
 364:	mov	x9, xzr
 368:	mov	x4, x9
 36c:	bl	3d4 <ctf_str_add_ref_internal>
 370:	str	x0, [sp]
 374:	ldr	x9, [sp]
 378:	cbnz	x9, 384 <ctf_str_add+0x58>
 37c:	stur	wzr, [x29, #-4]
 380:	b	390 <ctf_str_add+0x64>
 384:	ldr	x8, [sp]
 388:	ldr	w9, [x8, #24]
 38c:	stur	w9, [x29, #-4]
 390:	ldur	w0, [x29, #-4]
 394:	ldp	x29, x30, [sp, #32]
 398:	add	sp, sp, #0x30
 39c:	ret

00000000000003a0 <ctf_str_free_atoms>:
 3a0:	sub	sp, sp, #0x20
 3a4:	stp	x29, x30, [sp, #16]
 3a8:	add	x29, sp, #0x10
 3ac:	str	x0, [sp, #8]
 3b0:	ldr	x8, [sp, #8]
 3b4:	ldr	x0, [x8, #120]
 3b8:	bl	0 <ctf_dynhash_destroy>
 3bc:	ldr	x8, [sp, #8]
 3c0:	ldr	x0, [x8, #368]
 3c4:	bl	0 <ctf_dynhash_destroy>
 3c8:	ldp	x29, x30, [sp, #16]
 3cc:	add	sp, sp, #0x20
 3d0:	ret

00000000000003d4 <ctf_str_add_ref_internal>:
 3d4:	sub	sp, sp, #0x50
 3d8:	stp	x29, x30, [sp, #64]
 3dc:	add	x29, sp, #0x40
 3e0:	mov	x8, xzr
 3e4:	stur	x0, [x29, #-16]
 3e8:	stur	x1, [x29, #-24]
 3ec:	stur	w2, [x29, #-28]
 3f0:	str	w3, [sp, #32]
 3f4:	str	x4, [sp, #24]
 3f8:	str	x8, [sp, #16]
 3fc:	str	x8, [sp, #8]
 400:	str	x8, [sp]
 404:	ldur	x8, [x29, #-16]
 408:	ldr	x0, [x8, #368]
 40c:	ldur	x1, [x29, #-24]
 410:	bl	0 <ctf_dynhash_lookup>
 414:	str	x0, [sp, #8]
 418:	ldur	w9, [x29, #-28]
 41c:	cbz	w9, 448 <ctf_str_add_ref_internal+0x74>
 420:	mov	x0, #0x18                  	// #24
 424:	bl	0 <malloc>
 428:	str	x0, [sp]
 42c:	cbnz	x0, 43c <ctf_str_add_ref_internal+0x68>
 430:	mov	x8, xzr
 434:	stur	x8, [x29, #-8]
 438:	b	5d8 <ctf_str_add_ref_internal+0x204>
 43c:	ldr	x8, [sp, #24]
 440:	ldr	x9, [sp]
 444:	str	x8, [x9, #16]
 448:	ldr	x8, [sp, #8]
 44c:	cbz	x8, 484 <ctf_str_add_ref_internal+0xb0>
 450:	ldur	w8, [x29, #-28]
 454:	cbz	w8, 478 <ctf_str_add_ref_internal+0xa4>
 458:	ldr	x8, [sp, #8]
 45c:	add	x0, x8, #0x8
 460:	ldr	x1, [sp]
 464:	bl	0 <ctf_list_append>
 468:	ldur	x8, [x29, #-16]
 46c:	ldr	x9, [x8, #376]
 470:	add	x9, x9, #0x1
 474:	str	x9, [x8, #376]
 478:	ldr	x8, [sp, #8]
 47c:	stur	x8, [x29, #-8]
 480:	b	5d8 <ctf_str_add_ref_internal+0x204>
 484:	mov	x0, #0x28                  	// #40
 488:	bl	0 <malloc>
 48c:	str	x0, [sp, #8]
 490:	cbnz	x0, 498 <ctf_str_add_ref_internal+0xc4>
 494:	b	5a0 <ctf_str_add_ref_internal+0x1cc>
 498:	ldr	x0, [sp, #8]
 49c:	mov	w8, wzr
 4a0:	mov	w1, w8
 4a4:	mov	x2, #0x28                  	// #40
 4a8:	bl	0 <memset>
 4ac:	ldur	x0, [x29, #-24]
 4b0:	bl	0 <strdup>
 4b4:	str	x0, [sp, #16]
 4b8:	cbnz	x0, 4c0 <ctf_str_add_ref_internal+0xec>
 4bc:	b	5a0 <ctf_str_add_ref_internal+0x1cc>
 4c0:	ldur	x8, [x29, #-16]
 4c4:	ldr	x0, [x8, #368]
 4c8:	ldr	x1, [sp, #16]
 4cc:	ldr	x2, [sp, #8]
 4d0:	bl	0 <ctf_dynhash_insert>
 4d4:	cmp	w0, #0x0
 4d8:	cset	w9, ge  // ge = tcont
 4dc:	tbnz	w9, #0, 4e4 <ctf_str_add_ref_internal+0x110>
 4e0:	b	5a0 <ctf_str_add_ref_internal+0x1cc>
 4e4:	ldr	x8, [sp, #16]
 4e8:	ldr	x9, [sp, #8]
 4ec:	str	x8, [x9]
 4f0:	ldur	x8, [x29, #-16]
 4f4:	ldr	x8, [x8, #624]
 4f8:	ldr	x9, [sp, #8]
 4fc:	str	x8, [x9, #32]
 500:	ldr	w10, [sp, #32]
 504:	cbz	w10, 56c <ctf_str_add_ref_internal+0x198>
 508:	ldur	x8, [x29, #-16]
 50c:	ldr	w9, [x8, #384]
 510:	ldr	x8, [sp, #8]
 514:	str	w9, [x8, #24]
 518:	ldur	x8, [x29, #-16]
 51c:	ldr	x0, [x8, #120]
 520:	ldr	x8, [sp, #8]
 524:	ldr	w9, [x8, #24]
 528:	mov	w1, w9
 52c:	ldr	x8, [sp, #8]
 530:	ldr	x2, [x8]
 534:	bl	0 <ctf_dynhash_insert>
 538:	cmp	w0, #0x0
 53c:	cset	w9, ge  // ge = tcont
 540:	tbnz	w9, #0, 548 <ctf_str_add_ref_internal+0x174>
 544:	b	5a0 <ctf_str_add_ref_internal+0x1cc>
 548:	ldr	x8, [sp, #8]
 54c:	ldr	x0, [x8]
 550:	bl	0 <strlen>
 554:	add	x8, x0, #0x1
 558:	ldur	x9, [x29, #-16]
 55c:	ldr	w10, [x9, #384]
 560:	mov	w11, w10
 564:	add	x8, x11, x8
 568:	str	w8, [x9, #384]
 56c:	ldur	w8, [x29, #-28]
 570:	cbz	w8, 594 <ctf_str_add_ref_internal+0x1c0>
 574:	ldr	x8, [sp, #8]
 578:	add	x0, x8, #0x8
 57c:	ldr	x1, [sp]
 580:	bl	0 <ctf_list_append>
 584:	ldur	x8, [x29, #-16]
 588:	ldr	x9, [x8, #376]
 58c:	add	x9, x9, #0x1
 590:	str	x9, [x8, #376]
 594:	ldr	x8, [sp, #8]
 598:	stur	x8, [x29, #-8]
 59c:	b	5d8 <ctf_str_add_ref_internal+0x204>
 5a0:	ldr	x8, [sp, #16]
 5a4:	cbz	x8, 5b8 <ctf_str_add_ref_internal+0x1e4>
 5a8:	ldur	x8, [x29, #-16]
 5ac:	ldr	x0, [x8, #368]
 5b0:	ldr	x1, [sp, #16]
 5b4:	bl	0 <ctf_dynhash_remove>
 5b8:	ldr	x0, [sp, #8]
 5bc:	bl	0 <free>
 5c0:	ldr	x0, [sp]
 5c4:	bl	0 <free>
 5c8:	ldr	x0, [sp, #16]
 5cc:	bl	0 <free>
 5d0:	mov	x8, xzr
 5d4:	stur	x8, [x29, #-8]
 5d8:	ldur	x0, [x29, #-8]
 5dc:	ldp	x29, x30, [sp, #64]
 5e0:	add	sp, sp, #0x50
 5e4:	ret

00000000000005e8 <ctf_str_add_ref>:
 5e8:	sub	sp, sp, #0x40
 5ec:	stp	x29, x30, [sp, #48]
 5f0:	add	x29, sp, #0x30
 5f4:	stur	x0, [x29, #-16]
 5f8:	str	x1, [sp, #24]
 5fc:	str	x2, [sp, #16]
 600:	ldr	x8, [sp, #24]
 604:	cbnz	x8, 610 <ctf_str_add_ref+0x28>
 608:	stur	wzr, [x29, #-4]
 60c:	b	64c <ctf_str_add_ref+0x64>
 610:	ldur	x0, [x29, #-16]
 614:	ldr	x1, [sp, #24]
 618:	ldr	x4, [sp, #16]
 61c:	mov	w8, #0x1                   	// #1
 620:	mov	w2, w8
 624:	mov	w3, w8
 628:	bl	3d4 <ctf_str_add_ref_internal>
 62c:	str	x0, [sp, #8]
 630:	ldr	x9, [sp, #8]
 634:	cbnz	x9, 640 <ctf_str_add_ref+0x58>
 638:	stur	wzr, [x29, #-4]
 63c:	b	64c <ctf_str_add_ref+0x64>
 640:	ldr	x8, [sp, #8]
 644:	ldr	w9, [x8, #24]
 648:	stur	w9, [x29, #-4]
 64c:	ldur	w0, [x29, #-4]
 650:	ldp	x29, x30, [sp, #48]
 654:	add	sp, sp, #0x40
 658:	ret

000000000000065c <ctf_str_add_external>:
 65c:	sub	sp, sp, #0x40
 660:	stp	x29, x30, [sp, #48]
 664:	add	x29, sp, #0x30
 668:	stur	x0, [x29, #-16]
 66c:	str	x1, [sp, #24]
 670:	str	w2, [sp, #20]
 674:	ldr	x8, [sp, #24]
 678:	cbnz	x8, 684 <ctf_str_add_external+0x28>
 67c:	stur	wzr, [x29, #-4]
 680:	b	6d0 <ctf_str_add_external+0x74>
 684:	ldur	x0, [x29, #-16]
 688:	ldr	x1, [sp, #24]
 68c:	mov	w8, wzr
 690:	mov	w2, w8
 694:	mov	w3, w8
 698:	mov	x9, xzr
 69c:	mov	x4, x9
 6a0:	bl	3d4 <ctf_str_add_ref_internal>
 6a4:	str	x0, [sp, #8]
 6a8:	ldr	x9, [sp, #8]
 6ac:	cbnz	x9, 6b8 <ctf_str_add_external+0x5c>
 6b0:	stur	wzr, [x29, #-4]
 6b4:	b	6d0 <ctf_str_add_external+0x74>
 6b8:	ldr	w8, [sp, #20]
 6bc:	orr	w8, w8, #0x80000000
 6c0:	ldr	x9, [sp, #8]
 6c4:	str	w8, [x9, #28]
 6c8:	mov	w8, #0x1                   	// #1
 6cc:	stur	w8, [x29, #-4]
 6d0:	ldur	w0, [x29, #-4]
 6d4:	ldp	x29, x30, [sp, #48]
 6d8:	add	sp, sp, #0x40
 6dc:	ret

00000000000006e0 <ctf_str_remove_ref>:
 6e0:	sub	sp, sp, #0x40
 6e4:	stp	x29, x30, [sp, #48]
 6e8:	add	x29, sp, #0x30
 6ec:	mov	x8, xzr
 6f0:	stur	x0, [x29, #-8]
 6f4:	stur	x1, [x29, #-16]
 6f8:	str	x2, [sp, #24]
 6fc:	str	x8, [sp]
 700:	ldur	x8, [x29, #-8]
 704:	ldr	x0, [x8, #368]
 708:	ldur	x1, [x29, #-16]
 70c:	bl	0 <ctf_dynhash_lookup>
 710:	str	x0, [sp]
 714:	ldr	x8, [sp]
 718:	cbnz	x8, 720 <ctf_str_remove_ref+0x40>
 71c:	b	778 <ctf_str_remove_ref+0x98>
 720:	ldr	x8, [sp]
 724:	ldr	x8, [x8, #16]
 728:	str	x8, [sp, #16]
 72c:	ldr	x8, [sp, #16]
 730:	cbz	x8, 778 <ctf_str_remove_ref+0x98>
 734:	ldr	x8, [sp, #16]
 738:	ldr	x8, [x8, #8]
 73c:	str	x8, [sp, #8]
 740:	ldr	x8, [sp, #16]
 744:	ldr	x8, [x8, #16]
 748:	ldr	x9, [sp, #24]
 74c:	cmp	x8, x9
 750:	b.ne	76c <ctf_str_remove_ref+0x8c>  // b.any
 754:	ldr	x8, [sp]
 758:	add	x0, x8, #0x8
 75c:	ldr	x1, [sp, #16]
 760:	bl	0 <ctf_list_delete>
 764:	ldr	x0, [sp, #16]
 768:	bl	0 <free>
 76c:	ldr	x8, [sp, #8]
 770:	str	x8, [sp, #16]
 774:	b	72c <ctf_str_remove_ref+0x4c>
 778:	ldp	x29, x30, [sp, #48]
 77c:	add	sp, sp, #0x40
 780:	ret

0000000000000784 <ctf_str_rollback>:
 784:	sub	sp, sp, #0x30
 788:	stp	x29, x30, [sp, #32]
 78c:	add	x29, sp, #0x20
 790:	adrp	x8, 0 <ctf_strraw_explicit>
 794:	add	x8, x8, #0x0
 798:	add	x9, sp, #0x10
 79c:	str	x1, [sp, #16]
 7a0:	str	x2, [sp, #24]
 7a4:	str	x0, [sp, #8]
 7a8:	ldr	x10, [sp, #8]
 7ac:	ldr	x0, [x10, #368]
 7b0:	mov	x1, x8
 7b4:	mov	x2, x9
 7b8:	bl	0 <ctf_dynhash_iter_remove>
 7bc:	ldp	x29, x30, [sp, #32]
 7c0:	add	sp, sp, #0x30
 7c4:	ret

00000000000007c8 <ctf_str_rollback_atom>:
 7c8:	sub	sp, sp, #0x30
 7cc:	str	x0, [sp, #40]
 7d0:	str	x1, [sp, #32]
 7d4:	str	x2, [sp, #24]
 7d8:	ldr	x8, [sp, #32]
 7dc:	str	x8, [sp, #16]
 7e0:	ldr	x8, [sp, #24]
 7e4:	str	x8, [sp, #8]
 7e8:	ldr	x8, [sp, #16]
 7ec:	ldr	x8, [x8, #32]
 7f0:	ldr	x9, [sp, #8]
 7f4:	ldr	x9, [x9, #8]
 7f8:	cmp	x8, x9
 7fc:	cset	w10, hi  // hi = pmore
 800:	and	w0, w10, #0x1
 804:	add	sp, sp, #0x30
 808:	ret

000000000000080c <ctf_str_purge_refs>:
 80c:	sub	sp, sp, #0x20
 810:	stp	x29, x30, [sp, #16]
 814:	add	x29, sp, #0x10
 818:	str	x0, [sp, #8]
 81c:	ldr	x8, [sp, #8]
 820:	ldr	x8, [x8, #376]
 824:	cmp	x8, #0x0
 828:	cset	w9, ls  // ls = plast
 82c:	tbnz	w9, #0, 84c <ctf_str_purge_refs+0x40>
 830:	ldr	x8, [sp, #8]
 834:	ldr	x0, [x8, #368]
 838:	adrp	x1, 0 <ctf_strraw_explicit>
 83c:	add	x1, x1, #0x0
 840:	mov	x8, xzr
 844:	mov	x2, x8
 848:	bl	0 <ctf_dynhash_iter>
 84c:	ldr	x8, [sp, #8]
 850:	str	xzr, [x8, #376]
 854:	ldp	x29, x30, [sp, #16]
 858:	add	sp, sp, #0x20
 85c:	ret

0000000000000860 <ctf_str_purge_one_atom_refs>:
 860:	sub	sp, sp, #0x30
 864:	stp	x29, x30, [sp, #32]
 868:	add	x29, sp, #0x20
 86c:	stur	x0, [x29, #-8]
 870:	str	x1, [sp, #16]
 874:	str	x2, [sp, #8]
 878:	ldr	x8, [sp, #16]
 87c:	str	x8, [sp]
 880:	ldr	x0, [sp]
 884:	bl	e1c <ctf_str_purge_atom_refs>
 888:	ldp	x29, x30, [sp, #32]
 88c:	add	sp, sp, #0x30
 890:	ret

0000000000000894 <ctf_str_write_strtab>:
 894:	sub	sp, sp, #0xa0
 898:	stp	x29, x30, [sp, #144]
 89c:	add	x29, sp, #0x90
 8a0:	mov	w8, wzr
 8a4:	mov	x2, #0x28                  	// #40
 8a8:	adrp	x1, 0 <ctf_strraw_explicit>
 8ac:	add	x1, x1, #0x0
 8b0:	sub	x9, x29, #0x10
 8b4:	add	x10, sp, #0x40
 8b8:	stur	x0, [x29, #-24]
 8bc:	stur	wzr, [x29, #-36]
 8c0:	str	wzr, [sp, #44]
 8c4:	stur	xzr, [x29, #-16]
 8c8:	stur	xzr, [x29, #-8]
 8cc:	mov	x0, x10
 8d0:	str	x1, [sp, #32]
 8d4:	mov	w1, w8
 8d8:	str	x9, [sp, #24]
 8dc:	bl	0 <memset>
 8e0:	ldr	x9, [sp, #24]
 8e4:	str	x9, [sp, #64]
 8e8:	ldur	x10, [x29, #-24]
 8ec:	ldr	x0, [x10, #368]
 8f0:	ldr	x1, [sp, #32]
 8f4:	bl	0 <ctf_dynhash_lookup>
 8f8:	stur	x0, [x29, #-32]
 8fc:	ldur	x9, [x29, #-32]
 900:	cbnz	x9, 91c <ctf_str_write_strtab+0x88>
 904:	adrp	x0, 0 <ctf_strraw_explicit>
 908:	add	x0, x0, #0x0
 90c:	bl	0 <ctf_dprintf>
 910:	mov	x8, xzr
 914:	stur	x8, [x29, #-16]
 918:	b	c40 <ctf_str_write_strtab+0x3ac>
 91c:	ldur	x8, [x29, #-32]
 920:	add	x9, sp, #0x40
 924:	str	x8, [x9, #32]
 928:	ldur	x8, [x29, #-24]
 92c:	ldr	x0, [x8, #368]
 930:	adrp	x1, 0 <ctf_strraw_explicit>
 934:	add	x1, x1, #0x0
 938:	mov	x2, x9
 93c:	bl	0 <ctf_dynhash_iter>
 940:	ldur	x8, [x29, #-8]
 944:	add	x8, x8, #0x1
 948:	stur	x8, [x29, #-8]
 94c:	ldur	x1, [x29, #-8]
 950:	adrp	x0, 0 <ctf_strraw_explicit>
 954:	add	x0, x0, #0x0
 958:	bl	0 <ctf_dprintf>
 95c:	ldr	x0, [sp, #72]
 960:	mov	x1, #0x8                   	// #8
 964:	bl	0 <calloc>
 968:	str	x0, [sp, #56]
 96c:	ldr	x8, [sp, #56]
 970:	cbnz	x8, 978 <ctf_str_write_strtab+0xe4>
 974:	b	c40 <ctf_str_write_strtab+0x3ac>
 978:	ldur	x8, [x29, #-32]
 97c:	ldr	x9, [sp, #56]
 980:	str	x8, [x9]
 984:	add	x8, sp, #0x40
 988:	mov	x9, #0x1                   	// #1
 98c:	str	x9, [sp, #88]
 990:	ldr	x9, [sp, #56]
 994:	str	x9, [x8, #16]
 998:	ldur	x9, [x29, #-24]
 99c:	ldr	x0, [x9, #368]
 9a0:	adrp	x1, 0 <ctf_strraw_explicit>
 9a4:	add	x1, x1, #0x0
 9a8:	mov	x2, x8
 9ac:	bl	0 <ctf_dynhash_iter>
 9b0:	ldr	x8, [sp, #56]
 9b4:	add	x0, x8, #0x8
 9b8:	ldr	x8, [sp, #72]
 9bc:	subs	x1, x8, #0x1
 9c0:	mov	x2, #0x8                   	// #8
 9c4:	adrp	x3, 0 <ctf_strraw_explicit>
 9c8:	add	x3, x3, #0x0
 9cc:	bl	0 <qsort>
 9d0:	ldur	x0, [x29, #-8]
 9d4:	bl	0 <malloc>
 9d8:	stur	x0, [x29, #-16]
 9dc:	cbnz	x0, 9e4 <ctf_str_write_strtab+0x150>
 9e0:	b	c38 <ctf_str_write_strtab+0x3a4>
 9e4:	ldur	x8, [x29, #-24]
 9e8:	ldr	x8, [x8, #128]
 9ec:	cbnz	x8, a18 <ctf_str_write_strtab+0x184>
 9f0:	adrp	x0, 0 <ctf_hash_integer>
 9f4:	add	x0, x0, #0x0
 9f8:	adrp	x1, 0 <ctf_hash_eq_integer>
 9fc:	add	x1, x1, #0x0
 a00:	mov	x8, xzr
 a04:	mov	x2, x8
 a08:	mov	x3, x8
 a0c:	bl	0 <ctf_dynhash_create>
 a10:	ldur	x8, [x29, #-24]
 a14:	str	x0, [x8, #128]
 a18:	ldur	x8, [x29, #-24]
 a1c:	ldr	x8, [x8, #128]
 a20:	cbnz	x8, a28 <ctf_str_write_strtab+0x194>
 a24:	b	c28 <ctf_str_write_strtab+0x394>
 a28:	str	xzr, [sp, #48]
 a2c:	ldr	x8, [sp, #48]
 a30:	ldr	x9, [sp, #72]
 a34:	cmp	x8, x9
 a38:	b.cs	be0 <ctf_str_write_strtab+0x34c>  // b.hs, b.nlast
 a3c:	ldr	x8, [sp, #56]
 a40:	ldr	x9, [sp, #48]
 a44:	mov	x10, #0x8                   	// #8
 a48:	mul	x9, x10, x9
 a4c:	add	x8, x8, x9
 a50:	ldr	x8, [x8]
 a54:	ldr	w11, [x8, #28]
 a58:	cbz	w11, b28 <ctf_str_write_strtab+0x294>
 a5c:	mov	w8, #0x1                   	// #1
 a60:	str	w8, [sp, #44]
 a64:	ldr	x9, [sp, #56]
 a68:	ldr	x10, [sp, #48]
 a6c:	mov	x11, #0x8                   	// #8
 a70:	mul	x10, x11, x10
 a74:	add	x9, x9, x10
 a78:	ldr	x0, [x9]
 a7c:	ldr	x9, [sp, #56]
 a80:	ldr	x10, [sp, #48]
 a84:	mul	x10, x11, x10
 a88:	add	x9, x9, x10
 a8c:	ldr	x9, [x9]
 a90:	ldr	w1, [x9, #28]
 a94:	str	x11, [sp, #16]
 a98:	bl	dd4 <ctf_str_update_refs>
 a9c:	ldur	x9, [x29, #-24]
 aa0:	ldr	x0, [x9, #128]
 aa4:	ldr	x9, [sp, #56]
 aa8:	ldr	x10, [sp, #48]
 aac:	ldr	x11, [sp, #16]
 ab0:	mul	x10, x11, x10
 ab4:	add	x9, x9, x10
 ab8:	ldr	x9, [x9]
 abc:	ldr	w8, [x9, #28]
 ac0:	mov	w1, w8
 ac4:	ldr	x9, [sp, #56]
 ac8:	ldr	x10, [sp, #48]
 acc:	mul	x10, x11, x10
 ad0:	add	x9, x9, x10
 ad4:	ldr	x9, [x9]
 ad8:	ldr	x2, [x9]
 adc:	bl	0 <ctf_dynhash_insert>
 ae0:	cmp	w0, #0x0
 ae4:	cset	w8, ge  // ge = tcont
 ae8:	tbnz	w8, #0, af0 <ctf_str_write_strtab+0x25c>
 aec:	b	c28 <ctf_str_write_strtab+0x394>
 af0:	ldr	x8, [sp, #56]
 af4:	ldr	x9, [sp, #48]
 af8:	mov	x10, #0x8                   	// #8
 afc:	mul	x9, x10, x9
 b00:	add	x8, x8, x9
 b04:	ldr	x8, [x8]
 b08:	ldr	w11, [x8, #28]
 b0c:	ldr	x8, [sp, #56]
 b10:	ldr	x9, [sp, #48]
 b14:	mul	x9, x10, x9
 b18:	add	x8, x8, x9
 b1c:	ldr	x8, [x8]
 b20:	str	w11, [x8, #24]
 b24:	b	bd0 <ctf_str_write_strtab+0x33c>
 b28:	ldr	x8, [sp, #56]
 b2c:	ldr	x9, [sp, #48]
 b30:	mov	x10, #0x8                   	// #8
 b34:	mul	x9, x10, x9
 b38:	add	x8, x8, x9
 b3c:	ldr	x0, [x8]
 b40:	ldur	w1, [x29, #-36]
 b44:	str	x10, [sp, #8]
 b48:	bl	dd4 <ctf_str_update_refs>
 b4c:	ldur	w11, [x29, #-36]
 b50:	ldr	x8, [sp, #56]
 b54:	ldr	x9, [sp, #48]
 b58:	ldr	x10, [sp, #8]
 b5c:	mul	x9, x10, x9
 b60:	add	x8, x8, x9
 b64:	ldr	x8, [x8]
 b68:	str	w11, [x8, #24]
 b6c:	ldur	x8, [x29, #-16]
 b70:	ldur	w11, [x29, #-36]
 b74:	mov	w9, w11
 b78:	add	x0, x8, x9
 b7c:	ldr	x8, [sp, #56]
 b80:	ldr	x9, [sp, #48]
 b84:	mul	x9, x10, x9
 b88:	add	x8, x8, x9
 b8c:	ldr	x8, [x8]
 b90:	ldr	x1, [x8]
 b94:	bl	0 <strcpy>
 b98:	ldr	x8, [sp, #56]
 b9c:	ldr	x9, [sp, #48]
 ba0:	ldr	x10, [sp, #8]
 ba4:	mul	x9, x10, x9
 ba8:	add	x8, x8, x9
 bac:	ldr	x8, [x8]
 bb0:	ldr	x8, [x8]
 bb4:	mov	x0, x8
 bb8:	bl	0 <strlen>
 bbc:	add	x8, x0, #0x1
 bc0:	ldur	w11, [x29, #-36]
 bc4:	mov	w9, w11
 bc8:	add	x8, x9, x8
 bcc:	stur	w8, [x29, #-36]
 bd0:	ldr	x8, [sp, #48]
 bd4:	add	x8, x8, #0x1
 bd8:	str	x8, [sp, #48]
 bdc:	b	a2c <ctf_str_write_strtab+0x198>
 be0:	ldr	x0, [sp, #56]
 be4:	bl	0 <free>
 be8:	ldr	w8, [sp, #44]
 bec:	cbnz	w8, c08 <ctf_str_write_strtab+0x374>
 bf0:	ldur	x8, [x29, #-24]
 bf4:	ldr	x0, [x8, #128]
 bf8:	bl	0 <ctf_dynhash_destroy>
 bfc:	ldur	x8, [x29, #-24]
 c00:	mov	x9, xzr
 c04:	str	x9, [x8, #128]
 c08:	ldur	x8, [x29, #-24]
 c0c:	ldr	x0, [x8, #120]
 c10:	bl	0 <ctf_dynhash_empty>
 c14:	ldur	x8, [x29, #-8]
 c18:	add	x8, x8, #0x1
 c1c:	ldur	x9, [x29, #-24]
 c20:	str	w8, [x9, #384]
 c24:	b	c40 <ctf_str_write_strtab+0x3ac>
 c28:	ldur	x0, [x29, #-16]
 c2c:	bl	0 <free>
 c30:	mov	x8, xzr
 c34:	stur	x8, [x29, #-16]
 c38:	ldr	x0, [sp, #56]
 c3c:	bl	0 <free>
 c40:	ldur	x0, [x29, #-16]
 c44:	ldur	x1, [x29, #-8]
 c48:	ldp	x29, x30, [sp, #144]
 c4c:	add	sp, sp, #0xa0
 c50:	ret

0000000000000c54 <ctf_str_count_strtab>:
 c54:	sub	sp, sp, #0x40
 c58:	stp	x29, x30, [sp, #48]
 c5c:	add	x29, sp, #0x30
 c60:	stur	x0, [x29, #-8]
 c64:	stur	x1, [x29, #-16]
 c68:	str	x2, [sp, #24]
 c6c:	ldur	x8, [x29, #-16]
 c70:	str	x8, [sp, #16]
 c74:	ldr	x8, [sp, #24]
 c78:	str	x8, [sp, #8]
 c7c:	ldr	x8, [sp, #8]
 c80:	ldr	x8, [x8, #32]
 c84:	ldr	x9, [sp, #16]
 c88:	cmp	x8, x9
 c8c:	b.ne	ca4 <ctf_str_count_strtab+0x50>  // b.any
 c90:	ldr	x8, [sp, #8]
 c94:	ldr	x9, [x8, #8]
 c98:	add	x9, x9, #0x1
 c9c:	str	x9, [x8, #8]
 ca0:	b	cf4 <ctf_str_count_strtab+0xa0>
 ca4:	ldr	x8, [sp, #16]
 ca8:	add	x0, x8, #0x8
 cac:	bl	0 <ctf_list_empty_p>
 cb0:	cbnz	w0, cf4 <ctf_str_count_strtab+0xa0>
 cb4:	ldr	x8, [sp, #16]
 cb8:	ldr	w9, [x8, #28]
 cbc:	cbnz	w9, ce4 <ctf_str_count_strtab+0x90>
 cc0:	ldr	x8, [sp, #16]
 cc4:	ldr	x0, [x8]
 cc8:	bl	0 <strlen>
 ccc:	add	x8, x0, #0x1
 cd0:	ldr	x9, [sp, #8]
 cd4:	ldr	x9, [x9]
 cd8:	ldr	x10, [x9, #8]
 cdc:	add	x8, x10, x8
 ce0:	str	x8, [x9, #8]
 ce4:	ldr	x8, [sp, #8]
 ce8:	ldr	x9, [x8, #8]
 cec:	add	x9, x9, #0x1
 cf0:	str	x9, [x8, #8]
 cf4:	ldp	x29, x30, [sp, #48]
 cf8:	add	sp, sp, #0x40
 cfc:	ret

0000000000000d00 <ctf_str_populate_sorttab>:
 d00:	sub	sp, sp, #0x40
 d04:	stp	x29, x30, [sp, #48]
 d08:	add	x29, sp, #0x30
 d0c:	stur	x0, [x29, #-8]
 d10:	stur	x1, [x29, #-16]
 d14:	str	x2, [sp, #24]
 d18:	ldur	x8, [x29, #-16]
 d1c:	str	x8, [sp, #16]
 d20:	ldr	x8, [sp, #24]
 d24:	str	x8, [sp, #8]
 d28:	ldr	x8, [sp, #8]
 d2c:	ldr	x8, [x8, #32]
 d30:	ldr	x9, [sp, #16]
 d34:	cmp	x8, x9
 d38:	b.ne	d40 <ctf_str_populate_sorttab+0x40>  // b.any
 d3c:	b	d7c <ctf_str_populate_sorttab+0x7c>
 d40:	ldr	x8, [sp, #16]
 d44:	add	x0, x8, #0x8
 d48:	bl	0 <ctf_list_empty_p>
 d4c:	cbnz	w0, d7c <ctf_str_populate_sorttab+0x7c>
 d50:	ldr	x8, [sp, #16]
 d54:	ldr	x9, [sp, #8]
 d58:	ldr	x9, [x9, #16]
 d5c:	ldr	x10, [sp, #8]
 d60:	ldr	x11, [x10, #24]
 d64:	add	x12, x11, #0x1
 d68:	str	x12, [x10, #24]
 d6c:	mov	x10, #0x8                   	// #8
 d70:	mul	x10, x10, x11
 d74:	add	x9, x9, x10
 d78:	str	x8, [x9]
 d7c:	ldp	x29, x30, [sp, #48]
 d80:	add	sp, sp, #0x40
 d84:	ret

0000000000000d88 <ctf_str_sort_strtab>:
 d88:	sub	sp, sp, #0x30
 d8c:	stp	x29, x30, [sp, #32]
 d90:	add	x29, sp, #0x20
 d94:	stur	x0, [x29, #-8]
 d98:	str	x1, [sp, #16]
 d9c:	ldur	x8, [x29, #-8]
 da0:	str	x8, [sp, #8]
 da4:	ldr	x8, [sp, #16]
 da8:	str	x8, [sp]
 dac:	ldr	x8, [sp, #8]
 db0:	ldr	x8, [x8]
 db4:	ldr	x0, [x8]
 db8:	ldr	x8, [sp]
 dbc:	ldr	x8, [x8]
 dc0:	ldr	x1, [x8]
 dc4:	bl	0 <strcmp>
 dc8:	ldp	x29, x30, [sp, #32]
 dcc:	add	sp, sp, #0x30
 dd0:	ret

0000000000000dd4 <ctf_str_update_refs>:
 dd4:	sub	sp, sp, #0x20
 dd8:	str	x0, [sp, #24]
 ddc:	str	w1, [sp, #20]
 de0:	ldr	x8, [sp, #24]
 de4:	ldr	x8, [x8, #16]
 de8:	str	x8, [sp, #8]
 dec:	ldr	x8, [sp, #8]
 df0:	cbz	x8, e14 <ctf_str_update_refs+0x40>
 df4:	ldr	w8, [sp, #20]
 df8:	ldr	x9, [sp, #8]
 dfc:	ldr	x9, [x9, #16]
 e00:	str	w8, [x9]
 e04:	ldr	x8, [sp, #8]
 e08:	ldr	x8, [x8, #8]
 e0c:	str	x8, [sp, #8]
 e10:	b	dec <ctf_str_update_refs+0x18>
 e14:	add	sp, sp, #0x20
 e18:	ret

0000000000000e1c <ctf_str_purge_atom_refs>:
 e1c:	sub	sp, sp, #0x30
 e20:	stp	x29, x30, [sp, #32]
 e24:	add	x29, sp, #0x20
 e28:	stur	x0, [x29, #-8]
 e2c:	ldur	x8, [x29, #-8]
 e30:	ldr	x8, [x8, #16]
 e34:	str	x8, [sp, #16]
 e38:	ldr	x8, [sp, #16]
 e3c:	cbz	x8, e70 <ctf_str_purge_atom_refs+0x54>
 e40:	ldr	x8, [sp, #16]
 e44:	ldr	x8, [x8, #8]
 e48:	str	x8, [sp, #8]
 e4c:	ldur	x8, [x29, #-8]
 e50:	add	x0, x8, #0x8
 e54:	ldr	x1, [sp, #16]
 e58:	bl	0 <ctf_list_delete>
 e5c:	ldr	x0, [sp, #16]
 e60:	bl	0 <free>
 e64:	ldr	x8, [sp, #8]
 e68:	str	x8, [sp, #16]
 e6c:	b	e38 <ctf_str_purge_atom_refs+0x1c>
 e70:	ldp	x29, x30, [sp, #32]
 e74:	add	sp, sp, #0x30
 e78:	ret

ctf-subr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_mmap>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	mov	x8, xzr
  10:	mov	w9, #0x1                   	// #1
  14:	mov	w3, #0x2                   	// #2
  18:	mov	x10, #0xffffffffffffffff    	// #-1
  1c:	stur	x0, [x29, #-8]
  20:	stur	x1, [x29, #-16]
  24:	stur	w2, [x29, #-20]
  28:	ldur	x1, [x29, #-8]
  2c:	ldur	w4, [x29, #-20]
  30:	ldur	x5, [x29, #-16]
  34:	mov	x0, x8
  38:	mov	w2, w9
  3c:	str	x10, [sp, #8]
  40:	bl	0 <mmap>
  44:	str	x0, [sp, #16]
  48:	ldr	x8, [sp, #16]
  4c:	ldr	x10, [sp, #8]
  50:	cmp	x8, x10
  54:	b.ne	60 <ctf_mmap+0x60>  // b.any
  58:	mov	x8, xzr
  5c:	str	x8, [sp, #16]
  60:	ldr	x0, [sp, #16]
  64:	ldp	x29, x30, [sp, #48]
  68:	add	sp, sp, #0x40
  6c:	ret

0000000000000070 <ctf_munmap>:
  70:	sub	sp, sp, #0x20
  74:	stp	x29, x30, [sp, #16]
  78:	add	x29, sp, #0x10
  7c:	str	x0, [sp, #8]
  80:	str	x1, [sp]
  84:	ldr	x0, [sp, #8]
  88:	ldr	x1, [sp]
  8c:	bl	0 <munmap>
  90:	ldp	x29, x30, [sp, #16]
  94:	add	sp, sp, #0x20
  98:	ret

000000000000009c <ctf_pread>:
  9c:	sub	sp, sp, #0x50
  a0:	stp	x29, x30, [sp, #64]
  a4:	add	x29, sp, #0x40
  a8:	stur	w0, [x29, #-12]
  ac:	stur	x1, [x29, #-24]
  b0:	str	x2, [sp, #32]
  b4:	str	x3, [sp, #24]
  b8:	str	xzr, [sp, #8]
  bc:	ldur	x8, [x29, #-24]
  c0:	str	x8, [sp]
  c4:	ldr	x8, [sp, #32]
  c8:	cmp	x8, #0x0
  cc:	cset	w9, le
  d0:	tbnz	w9, #0, 188 <ctf_pread+0xec>
  d4:	bl	0 <__errno_location>
  d8:	str	wzr, [x0]
  dc:	ldur	w0, [x29, #-12]
  e0:	ldr	x1, [sp]
  e4:	ldr	x2, [sp, #32]
  e8:	ldr	x3, [sp, #24]
  ec:	bl	0 <pread>
  f0:	str	x0, [sp, #16]
  f4:	cmp	x0, #0x0
  f8:	cset	w8, ge  // ge = tcont
  fc:	tbnz	w8, #0, 11c <ctf_pread+0x80>
 100:	bl	0 <__errno_location>
 104:	ldr	w8, [x0]
 108:	cmp	w8, #0x4
 10c:	b.eq	11c <ctf_pread+0x80>  // b.none
 110:	ldr	x8, [sp, #16]
 114:	stur	x8, [x29, #-8]
 118:	b	190 <ctf_pread+0xf4>
 11c:	bl	0 <__errno_location>
 120:	ldr	w8, [x0]
 124:	cmp	w8, #0x4
 128:	b.ne	130 <ctf_pread+0x94>  // b.any
 12c:	b	c4 <ctf_pread+0x28>
 130:	ldr	x8, [sp, #16]
 134:	ldr	x9, [sp, #8]
 138:	add	x8, x9, x8
 13c:	str	x8, [sp, #8]
 140:	ldr	x8, [sp, #16]
 144:	cbnz	x8, 154 <ctf_pread+0xb8>
 148:	ldr	x8, [sp, #8]
 14c:	stur	x8, [x29, #-8]
 150:	b	190 <ctf_pread+0xf4>
 154:	ldr	x8, [sp, #16]
 158:	ldr	x9, [sp, #32]
 15c:	subs	x8, x9, x8
 160:	str	x8, [sp, #32]
 164:	ldr	x8, [sp, #16]
 168:	ldr	x9, [sp, #24]
 16c:	add	x8, x9, x8
 170:	str	x8, [sp, #24]
 174:	ldr	x8, [sp, #16]
 178:	ldr	x9, [sp]
 17c:	add	x8, x9, x8
 180:	str	x8, [sp]
 184:	b	c4 <ctf_pread+0x28>
 188:	ldr	x8, [sp, #8]
 18c:	stur	x8, [x29, #-8]
 190:	ldur	x0, [x29, #-8]
 194:	ldp	x29, x30, [sp, #64]
 198:	add	sp, sp, #0x50
 19c:	ret

00000000000001a0 <ctf_strerror>:
 1a0:	sub	sp, sp, #0x20
 1a4:	stp	x29, x30, [sp, #16]
 1a8:	add	x29, sp, #0x10
 1ac:	stur	w0, [x29, #-4]
 1b0:	ldur	w0, [x29, #-4]
 1b4:	bl	0 <strerror>
 1b8:	ldp	x29, x30, [sp, #16]
 1bc:	add	sp, sp, #0x20
 1c0:	ret

00000000000001c4 <ctf_version>:
 1c4:	sub	sp, sp, #0x20
 1c8:	stp	x29, x30, [sp, #16]
 1cc:	add	x29, sp, #0x10
 1d0:	str	w0, [sp, #8]
 1d4:	ldr	w8, [sp, #8]
 1d8:	cmp	w8, #0x0
 1dc:	cset	w8, ge  // ge = tcont
 1e0:	tbnz	w8, #0, 1fc <ctf_version+0x38>
 1e4:	bl	0 <__errno_location>
 1e8:	mov	w8, #0x16                  	// #22
 1ec:	str	w8, [x0]
 1f0:	mov	w8, #0xffffffff            	// #-1
 1f4:	stur	w8, [x29, #-4]
 1f8:	b	260 <ctf_version+0x9c>
 1fc:	ldr	w8, [sp, #8]
 200:	cmp	w8, #0x0
 204:	cset	w8, le
 208:	tbnz	w8, #0, 250 <ctf_version+0x8c>
 20c:	ldr	w8, [sp, #8]
 210:	cmp	w8, #0x4
 214:	b.eq	230 <ctf_version+0x6c>  // b.none
 218:	bl	0 <__errno_location>
 21c:	mov	w8, #0x5f                  	// #95
 220:	str	w8, [x0]
 224:	mov	w8, #0xffffffff            	// #-1
 228:	stur	w8, [x29, #-4]
 22c:	b	260 <ctf_version+0x9c>
 230:	ldr	w1, [sp, #8]
 234:	adrp	x0, 0 <ctf_mmap>
 238:	add	x0, x0, #0x0
 23c:	bl	270 <ctf_dprintf>
 240:	ldr	w8, [sp, #8]
 244:	adrp	x9, 0 <ctf_mmap>
 248:	add	x9, x9, #0x0
 24c:	str	w8, [x9]
 250:	adrp	x8, 0 <ctf_mmap>
 254:	add	x8, x8, #0x0
 258:	ldr	w9, [x8]
 25c:	stur	w9, [x29, #-4]
 260:	ldur	w0, [x29, #-4]
 264:	ldp	x29, x30, [sp, #16]
 268:	add	sp, sp, #0x20
 26c:	ret

0000000000000270 <ctf_dprintf>:
 270:	sub	sp, sp, #0x150
 274:	stp	x29, x30, [sp, #304]
 278:	str	x28, [sp, #320]
 27c:	add	x29, sp, #0x130
 280:	sub	x8, x29, #0x28
 284:	str	q7, [sp, #144]
 288:	str	q6, [sp, #128]
 28c:	str	q5, [sp, #112]
 290:	str	q4, [sp, #96]
 294:	str	q3, [sp, #80]
 298:	str	q2, [sp, #64]
 29c:	str	q1, [sp, #48]
 2a0:	str	q0, [sp, #32]
 2a4:	stur	x7, [x29, #-88]
 2a8:	stur	x6, [x29, #-96]
 2ac:	stur	x5, [x29, #-104]
 2b0:	stur	x4, [x29, #-112]
 2b4:	stur	x3, [x29, #-120]
 2b8:	stur	x2, [x29, #-128]
 2bc:	stur	x1, [x29, #-136]
 2c0:	stur	x0, [x29, #-8]
 2c4:	adrp	x9, 0 <ctf_mmap>
 2c8:	ldr	w10, [x9]
 2cc:	str	x8, [sp, #24]
 2d0:	cbz	w10, 368 <ctf_dprintf+0xf8>
 2d4:	b	2d8 <ctf_dprintf+0x68>
 2d8:	mov	w8, #0xffffff80            	// #-128
 2dc:	stur	w8, [x29, #-12]
 2e0:	mov	w8, #0xffffffc8            	// #-56
 2e4:	stur	w8, [x29, #-16]
 2e8:	add	x9, x29, #0x20
 2ec:	stur	x9, [x29, #-40]
 2f0:	add	x9, sp, #0x20
 2f4:	add	x9, x9, #0x80
 2f8:	stur	x9, [x29, #-24]
 2fc:	sub	x9, x29, #0x88
 300:	add	x9, x9, #0x38
 304:	stur	x9, [x29, #-32]
 308:	adrp	x9, 0 <stdout>
 30c:	ldr	x0, [x9]
 310:	bl	0 <fflush>
 314:	adrp	x9, 0 <stderr>
 318:	ldr	x1, [x9]
 31c:	adrp	x10, 0 <ctf_mmap>
 320:	add	x10, x10, #0x0
 324:	str	w0, [sp, #20]
 328:	mov	x0, x10
 32c:	str	x9, [sp, #8]
 330:	bl	0 <fputs>
 334:	ldr	x9, [sp, #8]
 338:	ldr	x10, [x9]
 33c:	ldur	x1, [x29, #-8]
 340:	ldr	x11, [sp, #24]
 344:	ldr	q0, [x11]
 348:	ldr	q1, [x11, #16]
 34c:	stur	q1, [x29, #-64]
 350:	stur	q0, [x29, #-80]
 354:	sub	x2, x29, #0x50
 358:	str	w0, [sp, #4]
 35c:	mov	x0, x10
 360:	bl	0 <vfprintf>
 364:	b	368 <ctf_dprintf+0xf8>
 368:	ldr	x28, [sp, #320]
 36c:	ldp	x29, x30, [sp, #304]
 370:	add	sp, sp, #0x150
 374:	ret

0000000000000378 <libctf_init_debug>:
 378:	stp	x29, x30, [sp, #-16]!
 37c:	mov	x29, sp
 380:	adrp	x8, 0 <ctf_mmap>
 384:	add	x8, x8, #0x0
 388:	ldr	w9, [x8]
 38c:	cbnz	w9, 3c4 <libctf_init_debug+0x4c>
 390:	adrp	x0, 0 <ctf_mmap>
 394:	add	x0, x0, #0x0
 398:	bl	0 <getenv>
 39c:	cmp	x0, #0x0
 3a0:	cset	w8, ne  // ne = any
 3a4:	and	w8, w8, #0x1
 3a8:	adrp	x9, 0 <ctf_mmap>
 3ac:	add	x9, x9, #0x0
 3b0:	str	w8, [x9]
 3b4:	mov	w8, #0x1                   	// #1
 3b8:	adrp	x9, 0 <ctf_mmap>
 3bc:	add	x9, x9, #0x0
 3c0:	str	w8, [x9]
 3c4:	ldp	x29, x30, [sp], #16
 3c8:	ret

00000000000003cc <ctf_setdebug>:
 3cc:	sub	sp, sp, #0x30
 3d0:	stp	x29, x30, [sp, #32]
 3d4:	add	x29, sp, #0x20
 3d8:	adrp	x8, 0 <ctf_mmap>
 3dc:	add	x8, x8, #0x0
 3e0:	adrp	x9, 0 <ctf_mmap>
 3e4:	add	x9, x9, #0x0
 3e8:	stur	w0, [x29, #-4]
 3ec:	str	x8, [sp, #16]
 3f0:	str	x9, [sp, #8]
 3f4:	bl	378 <libctf_init_debug>
 3f8:	ldur	w10, [x29, #-4]
 3fc:	ldr	x8, [sp, #16]
 400:	str	w10, [x8]
 404:	ldur	w1, [x29, #-4]
 408:	ldr	x0, [sp, #8]
 40c:	bl	270 <ctf_dprintf>
 410:	ldp	x29, x30, [sp, #32]
 414:	add	sp, sp, #0x30
 418:	ret

000000000000041c <ctf_getdebug>:
 41c:	adrp	x8, 0 <ctf_mmap>
 420:	add	x8, x8, #0x0
 424:	ldr	w0, [x8]
 428:	ret

ctf-types.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_type_isparent>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	str	x1, [sp]
       c:	ldr	x8, [sp]
      10:	ldr	x9, [sp, #8]
      14:	ldr	w10, [x9, #544]
      18:	mov	w9, w10
      1c:	cmp	x8, x9
      20:	cset	w10, ls  // ls = plast
      24:	and	w0, w10, #0x1
      28:	add	sp, sp, #0x10
      2c:	ret

0000000000000030 <ctf_type_ischild>:
      30:	sub	sp, sp, #0x10
      34:	str	x0, [sp, #8]
      38:	str	x1, [sp]
      3c:	ldr	x8, [sp]
      40:	ldr	x9, [sp, #8]
      44:	ldr	w10, [x9, #544]
      48:	mov	w9, w10
      4c:	cmp	x8, x9
      50:	cset	w10, hi  // hi = pmore
      54:	and	w0, w10, #0x1
      58:	add	sp, sp, #0x10
      5c:	ret

0000000000000060 <ctf_member_iter>:
      60:	sub	sp, sp, #0xa0
      64:	stp	x29, x30, [sp, #144]
      68:	add	x29, sp, #0x90
      6c:	mov	x8, #0xffffffffffffffff    	// #-1
      70:	stur	x0, [x29, #-16]
      74:	stur	x1, [x29, #-24]
      78:	stur	x2, [x29, #-32]
      7c:	stur	x3, [x29, #-40]
      80:	ldur	x9, [x29, #-16]
      84:	stur	x9, [x29, #-48]
      88:	ldur	x0, [x29, #-16]
      8c:	ldur	x1, [x29, #-24]
      90:	str	x8, [sp]
      94:	bl	320 <ctf_type_resolve>
      98:	stur	x0, [x29, #-24]
      9c:	ldr	x8, [sp]
      a0:	cmp	x0, x8
      a4:	b.ne	b4 <ctf_member_iter+0x54>  // b.any
      a8:	mov	w8, #0xffffffff            	// #-1
      ac:	stur	w8, [x29, #-4]
      b0:	b	310 <ctf_member_iter+0x2b0>
      b4:	ldur	x1, [x29, #-24]
      b8:	sub	x0, x29, #0x10
      bc:	bl	0 <ctf_lookup_by_id>
      c0:	stur	x0, [x29, #-56]
      c4:	cbnz	x0, d4 <ctf_member_iter+0x74>
      c8:	mov	w8, #0xffffffff            	// #-1
      cc:	stur	w8, [x29, #-4]
      d0:	b	310 <ctf_member_iter+0x2b0>
      d4:	ldur	x0, [x29, #-16]
      d8:	ldur	x1, [x29, #-56]
      dc:	add	x2, sp, #0x48
      e0:	add	x3, sp, #0x40
      e4:	bl	478 <ctf_get_ctt_size>
      e8:	ldur	x8, [x29, #-16]
      ec:	ldr	x8, [x8]
      f0:	ldr	x8, [x8]
      f4:	ldur	x9, [x29, #-56]
      f8:	ldr	w10, [x9, #4]
      fc:	mov	w0, w10
     100:	blr	x8
     104:	str	w0, [sp, #60]
     108:	ldr	w10, [sp, #60]
     10c:	cmp	w10, #0x6
     110:	b.eq	134 <ctf_member_iter+0xd4>  // b.none
     114:	ldr	w8, [sp, #60]
     118:	cmp	w8, #0x7
     11c:	b.eq	134 <ctf_member_iter+0xd4>  // b.none
     120:	ldur	x0, [x29, #-48]
     124:	mov	w1, #0x3fb                 	// #1019
     128:	bl	0 <ctf_set_errno>
     12c:	stur	w0, [x29, #-4]
     130:	b	310 <ctf_member_iter+0x2b0>
     134:	ldur	x0, [x29, #-16]
     138:	ldur	x1, [x29, #-24]
     13c:	bl	0 <ctf_dynamic_type>
     140:	stur	x0, [x29, #-64]
     144:	cbnz	x0, 2b0 <ctf_member_iter+0x250>
     148:	ldr	x8, [sp, #72]
     14c:	mov	x9, #0x20000000            	// #536870912
     150:	cmp	x8, x9
     154:	b.ge	1fc <ctf_member_iter+0x19c>  // b.tcont
     158:	ldur	x8, [x29, #-56]
     15c:	ldr	x9, [sp, #64]
     160:	add	x8, x8, x9
     164:	str	x8, [sp, #40]
     168:	ldur	x8, [x29, #-16]
     16c:	ldr	x8, [x8]
     170:	ldr	x8, [x8, #16]
     174:	ldur	x9, [x29, #-56]
     178:	ldr	w0, [x9, #4]
     17c:	blr	x8
     180:	str	w0, [sp, #56]
     184:	ldr	w8, [sp, #56]
     188:	cbz	w8, 1f8 <ctf_member_iter+0x198>
     18c:	ldur	x0, [x29, #-16]
     190:	ldr	x8, [sp, #40]
     194:	ldr	w1, [x8]
     198:	bl	0 <ctf_strptr>
     19c:	str	x0, [sp, #32]
     1a0:	ldur	x8, [x29, #-32]
     1a4:	ldr	x0, [sp, #32]
     1a8:	ldr	x9, [sp, #40]
     1ac:	ldr	w10, [x9, #8]
     1b0:	mov	w1, w10
     1b4:	ldr	x9, [sp, #40]
     1b8:	ldr	w10, [x9, #4]
     1bc:	mov	w2, w10
     1c0:	ldur	x3, [x29, #-40]
     1c4:	blr	x8
     1c8:	str	w0, [sp, #52]
     1cc:	cbz	w0, 1dc <ctf_member_iter+0x17c>
     1d0:	ldr	w8, [sp, #52]
     1d4:	stur	w8, [x29, #-4]
     1d8:	b	310 <ctf_member_iter+0x2b0>
     1dc:	ldr	w8, [sp, #56]
     1e0:	subs	w8, w8, #0x1
     1e4:	str	w8, [sp, #56]
     1e8:	ldr	x9, [sp, #40]
     1ec:	add	x9, x9, #0xc
     1f0:	str	x9, [sp, #40]
     1f4:	b	184 <ctf_member_iter+0x124>
     1f8:	b	2ac <ctf_member_iter+0x24c>
     1fc:	ldur	x8, [x29, #-56]
     200:	ldr	x9, [sp, #64]
     204:	add	x8, x8, x9
     208:	str	x8, [sp, #24]
     20c:	ldur	x8, [x29, #-16]
     210:	ldr	x8, [x8]
     214:	ldr	x8, [x8, #16]
     218:	ldur	x9, [x29, #-56]
     21c:	ldr	w0, [x9, #4]
     220:	blr	x8
     224:	str	w0, [sp, #56]
     228:	ldr	w8, [sp, #56]
     22c:	cbz	w8, 2ac <ctf_member_iter+0x24c>
     230:	ldur	x0, [x29, #-16]
     234:	ldr	x8, [sp, #24]
     238:	ldr	w1, [x8]
     23c:	bl	0 <ctf_strptr>
     240:	str	x0, [sp, #16]
     244:	ldur	x8, [x29, #-32]
     248:	ldr	x0, [sp, #16]
     24c:	ldr	x9, [sp, #24]
     250:	ldr	w10, [x9, #8]
     254:	mov	w1, w10
     258:	ldr	x9, [sp, #24]
     25c:	ldr	w10, [x9, #4]
     260:	mov	w9, w10
     264:	ldr	x11, [sp, #24]
     268:	ldr	w10, [x11, #12]
     26c:	mov	w11, w10
     270:	orr	x2, x11, x9, lsl #32
     274:	ldur	x3, [x29, #-40]
     278:	blr	x8
     27c:	str	w0, [sp, #52]
     280:	cbz	w0, 290 <ctf_member_iter+0x230>
     284:	ldr	w8, [sp, #52]
     288:	stur	w8, [x29, #-4]
     28c:	b	310 <ctf_member_iter+0x2b0>
     290:	ldr	w8, [sp, #56]
     294:	subs	w8, w8, #0x1
     298:	str	w8, [sp, #56]
     29c:	ldr	x9, [sp, #24]
     2a0:	add	x9, x9, #0x10
     2a4:	str	x9, [sp, #24]
     2a8:	b	228 <ctf_member_iter+0x1c8>
     2ac:	b	30c <ctf_member_iter+0x2ac>
     2b0:	ldur	x8, [x29, #-64]
     2b4:	ldr	x8, [x8, #56]
     2b8:	str	x8, [sp, #8]
     2bc:	ldr	x8, [sp, #8]
     2c0:	cbz	x8, 30c <ctf_member_iter+0x2ac>
     2c4:	ldur	x8, [x29, #-32]
     2c8:	ldr	x9, [sp, #8]
     2cc:	ldr	x0, [x9, #16]
     2d0:	ldr	x9, [sp, #8]
     2d4:	ldr	x1, [x9, #24]
     2d8:	ldr	x9, [sp, #8]
     2dc:	ldr	x2, [x9, #32]
     2e0:	ldur	x3, [x29, #-40]
     2e4:	blr	x8
     2e8:	str	w0, [sp, #52]
     2ec:	cbz	w0, 2fc <ctf_member_iter+0x29c>
     2f0:	ldr	w8, [sp, #52]
     2f4:	stur	w8, [x29, #-4]
     2f8:	b	310 <ctf_member_iter+0x2b0>
     2fc:	ldr	x8, [sp, #8]
     300:	ldr	x8, [x8, #8]
     304:	str	x8, [sp, #8]
     308:	b	2bc <ctf_member_iter+0x25c>
     30c:	stur	wzr, [x29, #-4]
     310:	ldur	w0, [x29, #-4]
     314:	ldp	x29, x30, [sp, #144]
     318:	add	sp, sp, #0xa0
     31c:	ret

0000000000000320 <ctf_type_resolve>:
     320:	sub	sp, sp, #0x50
     324:	stp	x29, x30, [sp, #64]
     328:	add	x29, sp, #0x40
     32c:	stur	x0, [x29, #-16]
     330:	stur	x1, [x29, #-24]
     334:	ldur	x8, [x29, #-24]
     338:	str	x8, [sp, #32]
     33c:	ldur	x8, [x29, #-24]
     340:	str	x8, [sp, #24]
     344:	ldur	x8, [x29, #-16]
     348:	str	x8, [sp, #16]
     34c:	ldur	x8, [x29, #-24]
     350:	cbnz	x8, 368 <ctf_type_resolve+0x48>
     354:	ldr	x0, [sp, #16]
     358:	mov	w1, #0x41b                 	// #1051
     35c:	bl	0 <ctf_set_errno>
     360:	stur	x0, [x29, #-8]
     364:	b	468 <ctf_type_resolve+0x148>
     368:	ldur	x1, [x29, #-24]
     36c:	sub	x0, x29, #0x10
     370:	bl	0 <ctf_lookup_by_id>
     374:	str	x0, [sp, #8]
     378:	cbz	x0, 460 <ctf_type_resolve+0x140>
     37c:	ldur	x8, [x29, #-16]
     380:	ldr	x8, [x8]
     384:	ldr	x8, [x8]
     388:	ldr	x9, [sp, #8]
     38c:	ldr	w0, [x9, #4]
     390:	blr	x8
     394:	subs	w10, w0, #0xa
     398:	cmp	w10, #0x3
     39c:	cset	w10, ls  // ls = plast
     3a0:	eor	w10, w10, #0x1
     3a4:	tbnz	w10, #0, 434 <ctf_type_resolve+0x114>
     3a8:	b	3ac <ctf_type_resolve+0x8c>
     3ac:	ldr	x8, [sp, #8]
     3b0:	ldr	w9, [x8, #8]
     3b4:	mov	w8, w9
     3b8:	ldur	x10, [x29, #-24]
     3bc:	cmp	x8, x10
     3c0:	b.eq	3f4 <ctf_type_resolve+0xd4>  // b.none
     3c4:	ldr	x8, [sp, #8]
     3c8:	ldr	w9, [x8, #8]
     3cc:	mov	w8, w9
     3d0:	ldr	x10, [sp, #24]
     3d4:	cmp	x8, x10
     3d8:	b.eq	3f4 <ctf_type_resolve+0xd4>  // b.none
     3dc:	ldr	x8, [sp, #8]
     3e0:	ldr	w9, [x8, #8]
     3e4:	mov	w8, w9
     3e8:	ldr	x10, [sp, #32]
     3ec:	cmp	x8, x10
     3f0:	b.ne	418 <ctf_type_resolve+0xf8>  // b.any
     3f4:	ldr	x1, [sp, #24]
     3f8:	adrp	x0, 0 <ctf_type_isparent>
     3fc:	add	x0, x0, #0x0
     400:	bl	0 <ctf_dprintf>
     404:	ldr	x0, [sp, #16]
     408:	mov	w1, #0x3ef                 	// #1007
     40c:	bl	0 <ctf_set_errno>
     410:	stur	x0, [x29, #-8]
     414:	b	468 <ctf_type_resolve+0x148>
     418:	ldur	x8, [x29, #-24]
     41c:	str	x8, [sp, #32]
     420:	ldr	x8, [sp, #8]
     424:	ldr	w9, [x8, #8]
     428:	mov	w8, w9
     42c:	stur	x8, [x29, #-24]
     430:	b	440 <ctf_type_resolve+0x120>
     434:	ldur	x8, [x29, #-24]
     438:	stur	x8, [x29, #-8]
     43c:	b	468 <ctf_type_resolve+0x148>
     440:	ldur	x8, [x29, #-24]
     444:	cbnz	x8, 45c <ctf_type_resolve+0x13c>
     448:	ldr	x0, [sp, #16]
     44c:	mov	w1, #0x41b                 	// #1051
     450:	bl	0 <ctf_set_errno>
     454:	stur	x0, [x29, #-8]
     458:	b	468 <ctf_type_resolve+0x148>
     45c:	b	368 <ctf_type_resolve+0x48>
     460:	mov	x8, #0xffffffffffffffff    	// #-1
     464:	stur	x8, [x29, #-8]
     468:	ldur	x0, [x29, #-8]
     46c:	ldp	x29, x30, [sp, #64]
     470:	add	sp, sp, #0x50
     474:	ret

0000000000000478 <ctf_get_ctt_size>:
     478:	sub	sp, sp, #0x30
     47c:	stp	x29, x30, [sp, #32]
     480:	add	x29, sp, #0x20
     484:	stur	x0, [x29, #-8]
     488:	str	x1, [sp, #16]
     48c:	str	x2, [sp, #8]
     490:	str	x3, [sp]
     494:	ldur	x8, [x29, #-8]
     498:	ldr	x8, [x8]
     49c:	ldr	x8, [x8, #24]
     4a0:	ldur	x0, [x29, #-8]
     4a4:	ldr	x1, [sp, #16]
     4a8:	ldr	x2, [sp, #8]
     4ac:	ldr	x3, [sp]
     4b0:	blr	x8
     4b4:	ldp	x29, x30, [sp, #32]
     4b8:	add	sp, sp, #0x30
     4bc:	ret

00000000000004c0 <ctf_enum_iter>:
     4c0:	sub	sp, sp, #0x80
     4c4:	stp	x29, x30, [sp, #112]
     4c8:	add	x29, sp, #0x70
     4cc:	mov	x8, #0xffffffffffffffff    	// #-1
     4d0:	stur	x0, [x29, #-16]
     4d4:	stur	x1, [x29, #-24]
     4d8:	stur	x2, [x29, #-32]
     4dc:	stur	x3, [x29, #-40]
     4e0:	ldur	x9, [x29, #-16]
     4e4:	stur	x9, [x29, #-48]
     4e8:	ldur	x0, [x29, #-16]
     4ec:	ldur	x1, [x29, #-24]
     4f0:	str	x8, [sp]
     4f4:	bl	694 <ctf_type_resolve_unsliced>
     4f8:	stur	x0, [x29, #-24]
     4fc:	ldr	x8, [sp]
     500:	cmp	x0, x8
     504:	b.ne	514 <ctf_enum_iter+0x54>  // b.any
     508:	mov	w8, #0xffffffff            	// #-1
     50c:	stur	w8, [x29, #-4]
     510:	b	684 <ctf_enum_iter+0x1c4>
     514:	ldur	x1, [x29, #-24]
     518:	sub	x0, x29, #0x10
     51c:	bl	0 <ctf_lookup_by_id>
     520:	str	x0, [sp, #56]
     524:	cbnz	x0, 534 <ctf_enum_iter+0x74>
     528:	mov	w8, #0xffffffff            	// #-1
     52c:	stur	w8, [x29, #-4]
     530:	b	684 <ctf_enum_iter+0x1c4>
     534:	ldur	x8, [x29, #-16]
     538:	ldr	x8, [x8]
     53c:	ldr	x8, [x8]
     540:	ldr	x9, [sp, #56]
     544:	ldr	w0, [x9, #4]
     548:	blr	x8
     54c:	cmp	w0, #0x8
     550:	b.eq	568 <ctf_enum_iter+0xa8>  // b.none
     554:	ldur	x0, [x29, #-48]
     558:	mov	w1, #0x3fc                 	// #1020
     55c:	bl	0 <ctf_set_errno>
     560:	stur	w0, [x29, #-4]
     564:	b	684 <ctf_enum_iter+0x1c4>
     568:	ldur	x0, [x29, #-16]
     56c:	ldr	x1, [sp, #56]
     570:	mov	x8, xzr
     574:	mov	x2, x8
     578:	add	x3, sp, #0x20
     57c:	bl	478 <ctf_get_ctt_size>
     580:	ldur	x8, [x29, #-48]
     584:	ldur	x1, [x29, #-24]
     588:	mov	x0, x8
     58c:	bl	0 <ctf_dynamic_type>
     590:	str	x0, [sp, #40]
     594:	cbnz	x0, 62c <ctf_enum_iter+0x16c>
     598:	ldr	x8, [sp, #56]
     59c:	ldr	x9, [sp, #32]
     5a0:	add	x8, x8, x9
     5a4:	str	x8, [sp, #48]
     5a8:	ldur	x8, [x29, #-16]
     5ac:	ldr	x8, [x8]
     5b0:	ldr	x8, [x8, #16]
     5b4:	ldr	x9, [sp, #56]
     5b8:	ldr	w0, [x9, #4]
     5bc:	blr	x8
     5c0:	str	w0, [sp, #28]
     5c4:	ldr	w8, [sp, #28]
     5c8:	cbz	w8, 628 <ctf_enum_iter+0x168>
     5cc:	ldur	x0, [x29, #-16]
     5d0:	ldr	x8, [sp, #48]
     5d4:	ldr	w1, [x8]
     5d8:	bl	0 <ctf_strptr>
     5dc:	str	x0, [sp, #16]
     5e0:	ldur	x8, [x29, #-32]
     5e4:	ldr	x0, [sp, #16]
     5e8:	ldr	x9, [sp, #48]
     5ec:	ldr	w1, [x9, #4]
     5f0:	ldur	x2, [x29, #-40]
     5f4:	blr	x8
     5f8:	str	w0, [sp, #24]
     5fc:	cbz	w0, 60c <ctf_enum_iter+0x14c>
     600:	ldr	w8, [sp, #24]
     604:	stur	w8, [x29, #-4]
     608:	b	684 <ctf_enum_iter+0x1c4>
     60c:	ldr	w8, [sp, #28]
     610:	subs	w8, w8, #0x1
     614:	str	w8, [sp, #28]
     618:	ldr	x9, [sp, #48]
     61c:	add	x9, x9, #0x8
     620:	str	x9, [sp, #48]
     624:	b	5c4 <ctf_enum_iter+0x104>
     628:	b	680 <ctf_enum_iter+0x1c0>
     62c:	ldr	x8, [sp, #40]
     630:	ldr	x8, [x8, #56]
     634:	str	x8, [sp, #8]
     638:	ldr	x8, [sp, #8]
     63c:	cbz	x8, 680 <ctf_enum_iter+0x1c0>
     640:	ldur	x8, [x29, #-32]
     644:	ldr	x9, [sp, #8]
     648:	ldr	x0, [x9, #16]
     64c:	ldr	x9, [sp, #8]
     650:	ldr	w1, [x9, #40]
     654:	ldur	x2, [x29, #-40]
     658:	blr	x8
     65c:	str	w0, [sp, #24]
     660:	cbz	w0, 670 <ctf_enum_iter+0x1b0>
     664:	ldr	w8, [sp, #24]
     668:	stur	w8, [x29, #-4]
     66c:	b	684 <ctf_enum_iter+0x1c4>
     670:	ldr	x8, [sp, #8]
     674:	ldr	x8, [x8, #8]
     678:	str	x8, [sp, #8]
     67c:	b	638 <ctf_enum_iter+0x178>
     680:	stur	wzr, [x29, #-4]
     684:	ldur	w0, [x29, #-4]
     688:	ldp	x29, x30, [sp, #112]
     68c:	add	sp, sp, #0x80
     690:	ret

0000000000000694 <ctf_type_resolve_unsliced>:
     694:	sub	sp, sp, #0x40
     698:	stp	x29, x30, [sp, #48]
     69c:	add	x29, sp, #0x30
     6a0:	mov	x8, #0xffffffffffffffff    	// #-1
     6a4:	stur	x0, [x29, #-16]
     6a8:	str	x1, [sp, #24]
     6ac:	ldur	x0, [x29, #-16]
     6b0:	ldr	x1, [sp, #24]
     6b4:	str	x8, [sp, #8]
     6b8:	bl	320 <ctf_type_resolve>
     6bc:	str	x0, [sp, #24]
     6c0:	ldr	x8, [sp, #8]
     6c4:	cmp	x0, x8
     6c8:	b.ne	6d8 <ctf_type_resolve_unsliced+0x44>  // b.any
     6cc:	mov	x8, #0xffffffffffffffff    	// #-1
     6d0:	stur	x8, [x29, #-8]
     6d4:	b	734 <ctf_type_resolve_unsliced+0xa0>
     6d8:	ldr	x1, [sp, #24]
     6dc:	sub	x0, x29, #0x10
     6e0:	bl	0 <ctf_lookup_by_id>
     6e4:	str	x0, [sp, #16]
     6e8:	cbnz	x0, 6f8 <ctf_type_resolve_unsliced+0x64>
     6ec:	mov	x8, #0xffffffffffffffff    	// #-1
     6f0:	stur	x8, [x29, #-8]
     6f4:	b	734 <ctf_type_resolve_unsliced+0xa0>
     6f8:	ldur	x8, [x29, #-16]
     6fc:	ldr	x8, [x8]
     700:	ldr	x8, [x8]
     704:	ldr	x9, [sp, #16]
     708:	ldr	w0, [x9, #4]
     70c:	blr	x8
     710:	cmp	w0, #0xe
     714:	b.ne	72c <ctf_type_resolve_unsliced+0x98>  // b.any
     718:	ldur	x0, [x29, #-16]
     71c:	ldr	x1, [sp, #24]
     720:	bl	bcc <ctf_type_reference>
     724:	stur	x0, [x29, #-8]
     728:	b	734 <ctf_type_resolve_unsliced+0xa0>
     72c:	ldr	x8, [sp, #24]
     730:	stur	x8, [x29, #-8]
     734:	ldur	x0, [x29, #-8]
     738:	ldp	x29, x30, [sp, #48]
     73c:	add	sp, sp, #0x40
     740:	ret

0000000000000744 <ctf_type_iter>:
     744:	sub	sp, sp, #0x80
     748:	stp	x29, x30, [sp, #112]
     74c:	add	x29, sp, #0x70
     750:	mov	x8, #0x1                   	// #1
     754:	stur	x0, [x29, #-16]
     758:	stur	x1, [x29, #-24]
     75c:	stur	x2, [x29, #-32]
     760:	ldur	x9, [x29, #-16]
     764:	ldr	x9, [x9, #480]
     768:	stur	x9, [x29, #-48]
     76c:	ldur	x9, [x29, #-16]
     770:	ldr	w10, [x9, #552]
     774:	and	w10, w10, #0x1
     778:	str	w10, [sp, #56]
     77c:	stur	x8, [x29, #-40]
     780:	ldur	x8, [x29, #-40]
     784:	ldur	x9, [x29, #-48]
     788:	cmp	x8, x9
     78c:	b.hi	8bc <ctf_type_iter+0x178>  // b.pmore
     790:	ldur	x8, [x29, #-16]
     794:	ldr	w9, [x8, #552]
     798:	and	w9, w9, #0x2
     79c:	cbz	w9, 800 <ctf_type_iter+0xbc>
     7a0:	ldur	x0, [x29, #-16]
     7a4:	ldur	x8, [x29, #-16]
     7a8:	ldr	w9, [x8, #552]
     7ac:	and	w9, w9, #0x1
     7b0:	str	x0, [sp, #40]
     7b4:	cbz	w9, 7dc <ctf_type_iter+0x98>
     7b8:	ldur	x8, [x29, #-40]
     7bc:	ldur	x9, [x29, #-16]
     7c0:	ldr	w10, [x9, #544]
     7c4:	add	w10, w10, #0x1
     7c8:	mov	w9, w10
     7cc:	ubfx	x9, x9, #0, #32
     7d0:	orr	x8, x8, x9
     7d4:	str	x8, [sp, #32]
     7d8:	b	7e4 <ctf_type_iter+0xa0>
     7dc:	ldur	x8, [x29, #-40]
     7e0:	str	x8, [sp, #32]
     7e4:	ldr	x8, [sp, #32]
     7e8:	ldr	x0, [sp, #40]
     7ec:	mov	x1, x8
     7f0:	bl	0 <ctf_dtd_lookup>
     7f4:	add	x8, x0, #0x18
     7f8:	str	x8, [sp, #24]
     7fc:	b	824 <ctf_type_iter+0xe0>
     800:	ldur	x8, [x29, #-16]
     804:	ldr	x8, [x8, #408]
     808:	ldur	x9, [x29, #-16]
     80c:	ldr	x9, [x9, #440]
     810:	ldur	x10, [x29, #-40]
     814:	ldr	w11, [x9, x10, lsl #2]
     818:	mov	w9, w11
     81c:	add	x8, x8, x9
     820:	str	x8, [sp, #24]
     824:	ldr	x8, [sp, #24]
     828:	str	x8, [sp, #48]
     82c:	ldur	x8, [x29, #-16]
     830:	ldr	x8, [x8]
     834:	ldr	x8, [x8, #8]
     838:	ldr	x9, [sp, #48]
     83c:	ldr	w0, [x9, #4]
     840:	blr	x8
     844:	cbz	w0, 8ac <ctf_type_iter+0x168>
     848:	ldur	x8, [x29, #-24]
     84c:	ldr	w9, [sp, #56]
     850:	str	x8, [sp, #16]
     854:	cbz	w9, 87c <ctf_type_iter+0x138>
     858:	ldur	x8, [x29, #-40]
     85c:	ldur	x9, [x29, #-16]
     860:	ldr	w10, [x9, #544]
     864:	add	w10, w10, #0x1
     868:	mov	w9, w10
     86c:	ubfx	x9, x9, #0, #32
     870:	orr	x8, x8, x9
     874:	str	x8, [sp, #8]
     878:	b	884 <ctf_type_iter+0x140>
     87c:	ldur	x8, [x29, #-40]
     880:	str	x8, [sp, #8]
     884:	ldr	x8, [sp, #8]
     888:	ldur	x1, [x29, #-32]
     88c:	mov	x0, x8
     890:	ldr	x8, [sp, #16]
     894:	blr	x8
     898:	stur	w0, [x29, #-52]
     89c:	cbz	w0, 8ac <ctf_type_iter+0x168>
     8a0:	ldur	w8, [x29, #-52]
     8a4:	stur	w8, [x29, #-4]
     8a8:	b	8c0 <ctf_type_iter+0x17c>
     8ac:	ldur	x8, [x29, #-40]
     8b0:	add	x8, x8, #0x1
     8b4:	stur	x8, [x29, #-40]
     8b8:	b	780 <ctf_type_iter+0x3c>
     8bc:	stur	wzr, [x29, #-4]
     8c0:	ldur	w0, [x29, #-4]
     8c4:	ldp	x29, x30, [sp, #112]
     8c8:	add	sp, sp, #0x80
     8cc:	ret

00000000000008d0 <ctf_type_iter_all>:
     8d0:	sub	sp, sp, #0x80
     8d4:	stp	x29, x30, [sp, #112]
     8d8:	add	x29, sp, #0x70
     8dc:	mov	x8, #0x1                   	// #1
     8e0:	stur	x0, [x29, #-16]
     8e4:	stur	x1, [x29, #-24]
     8e8:	stur	x2, [x29, #-32]
     8ec:	ldur	x9, [x29, #-16]
     8f0:	ldr	x9, [x9, #480]
     8f4:	stur	x9, [x29, #-48]
     8f8:	ldur	x9, [x29, #-16]
     8fc:	ldr	w10, [x9, #552]
     900:	and	w10, w10, #0x1
     904:	str	w10, [sp, #56]
     908:	stur	x8, [x29, #-40]
     90c:	ldur	x8, [x29, #-40]
     910:	ldur	x9, [x29, #-48]
     914:	cmp	x8, x9
     918:	b.hi	a68 <ctf_type_iter_all+0x198>  // b.pmore
     91c:	ldur	x8, [x29, #-16]
     920:	ldr	w9, [x8, #552]
     924:	and	w9, w9, #0x2
     928:	cbz	w9, 98c <ctf_type_iter_all+0xbc>
     92c:	ldur	x0, [x29, #-16]
     930:	ldur	x8, [x29, #-16]
     934:	ldr	w9, [x8, #552]
     938:	and	w9, w9, #0x1
     93c:	str	x0, [sp, #40]
     940:	cbz	w9, 968 <ctf_type_iter_all+0x98>
     944:	ldur	x8, [x29, #-40]
     948:	ldur	x9, [x29, #-16]
     94c:	ldr	w10, [x9, #544]
     950:	add	w10, w10, #0x1
     954:	mov	w9, w10
     958:	ubfx	x9, x9, #0, #32
     95c:	orr	x8, x8, x9
     960:	str	x8, [sp, #32]
     964:	b	970 <ctf_type_iter_all+0xa0>
     968:	ldur	x8, [x29, #-40]
     96c:	str	x8, [sp, #32]
     970:	ldr	x8, [sp, #32]
     974:	ldr	x0, [sp, #40]
     978:	mov	x1, x8
     97c:	bl	0 <ctf_dtd_lookup>
     980:	add	x8, x0, #0x18
     984:	str	x8, [sp, #24]
     988:	b	9b0 <ctf_type_iter_all+0xe0>
     98c:	ldur	x8, [x29, #-16]
     990:	ldr	x8, [x8, #408]
     994:	ldur	x9, [x29, #-16]
     998:	ldr	x9, [x9, #440]
     99c:	ldur	x10, [x29, #-40]
     9a0:	ldr	w11, [x9, x10, lsl #2]
     9a4:	mov	w9, w11
     9a8:	add	x8, x8, x9
     9ac:	str	x8, [sp, #24]
     9b0:	ldr	x8, [sp, #24]
     9b4:	str	x8, [sp, #48]
     9b8:	ldur	x8, [x29, #-24]
     9bc:	ldr	w9, [sp, #56]
     9c0:	str	x8, [sp, #16]
     9c4:	cbz	w9, 9ec <ctf_type_iter_all+0x11c>
     9c8:	ldur	x8, [x29, #-40]
     9cc:	ldur	x9, [x29, #-16]
     9d0:	ldr	w10, [x9, #544]
     9d4:	add	w10, w10, #0x1
     9d8:	mov	w9, w10
     9dc:	ubfx	x9, x9, #0, #32
     9e0:	orr	x8, x8, x9
     9e4:	str	x8, [sp, #8]
     9e8:	b	9f4 <ctf_type_iter_all+0x124>
     9ec:	ldur	x8, [x29, #-40]
     9f0:	str	x8, [sp, #8]
     9f4:	ldr	x8, [sp, #8]
     9f8:	ldur	x9, [x29, #-16]
     9fc:	ldr	x9, [x9]
     a00:	ldr	x9, [x9, #8]
     a04:	ldr	x10, [sp, #48]
     a08:	ldr	w0, [x10, #4]
     a0c:	str	x8, [sp]
     a10:	blr	x9
     a14:	mov	w11, wzr
     a18:	mov	w12, #0x1                   	// #1
     a1c:	cmp	w0, #0x0
     a20:	csel	w1, w12, w11, ne  // ne = any
     a24:	ldur	x2, [x29, #-32]
     a28:	ldr	x0, [sp]
     a2c:	ldr	x8, [sp, #16]
     a30:	blr	x8
     a34:	cmp	w0, #0x0
     a38:	cset	w11, ne  // ne = any
     a3c:	and	w11, w11, #0x1
     a40:	stur	w11, [x29, #-52]
     a44:	cbnz	w0, a4c <ctf_type_iter_all+0x17c>
     a48:	b	a58 <ctf_type_iter_all+0x188>
     a4c:	ldur	w8, [x29, #-52]
     a50:	stur	w8, [x29, #-4]
     a54:	b	a6c <ctf_type_iter_all+0x19c>
     a58:	ldur	x8, [x29, #-40]
     a5c:	add	x8, x8, #0x1
     a60:	stur	x8, [x29, #-40]
     a64:	b	90c <ctf_type_iter_all+0x3c>
     a68:	stur	wzr, [x29, #-4]
     a6c:	ldur	w0, [x29, #-4]
     a70:	ldp	x29, x30, [sp, #112]
     a74:	add	sp, sp, #0x80
     a78:	ret

0000000000000a7c <ctf_variable_iter>:
     a7c:	sub	sp, sp, #0x60
     a80:	stp	x29, x30, [sp, #80]
     a84:	add	x29, sp, #0x50
     a88:	stur	x0, [x29, #-16]
     a8c:	stur	x1, [x29, #-24]
     a90:	stur	x2, [x29, #-32]
     a94:	ldur	x8, [x29, #-16]
     a98:	ldr	w9, [x8, #552]
     a9c:	and	w9, w9, #0x1
     aa0:	cbz	w9, abc <ctf_variable_iter+0x40>
     aa4:	ldur	x8, [x29, #-16]
     aa8:	ldr	x8, [x8, #512]
     aac:	cbnz	x8, abc <ctf_variable_iter+0x40>
     ab0:	mov	w8, #0x3f3                 	// #1011
     ab4:	stur	w8, [x29, #-4]
     ab8:	b	bbc <ctf_variable_iter+0x140>
     abc:	ldur	x8, [x29, #-16]
     ac0:	ldr	w9, [x8, #552]
     ac4:	and	w9, w9, #0x2
     ac8:	cbnz	w9, b64 <ctf_variable_iter+0xe8>
     acc:	str	xzr, [sp, #32]
     ad0:	ldr	x8, [sp, #32]
     ad4:	ldur	x9, [x29, #-16]
     ad8:	ldr	x9, [x9, #472]
     adc:	cmp	x8, x9
     ae0:	b.cs	b60 <ctf_variable_iter+0xe4>  // b.hs, b.nlast
     ae4:	ldur	x8, [x29, #-24]
     ae8:	ldur	x0, [x29, #-16]
     aec:	ldur	x9, [x29, #-16]
     af0:	ldr	x9, [x9, #464]
     af4:	ldr	x10, [sp, #32]
     af8:	mov	x11, #0x8                   	// #8
     afc:	mul	x10, x11, x10
     b00:	ldr	w1, [x9, x10]
     b04:	str	x8, [sp, #16]
     b08:	str	x11, [sp, #8]
     b0c:	bl	0 <ctf_strptr>
     b10:	ldur	x8, [x29, #-16]
     b14:	ldr	x8, [x8, #464]
     b18:	ldr	x9, [sp, #32]
     b1c:	ldr	x10, [sp, #8]
     b20:	mul	x9, x10, x9
     b24:	add	x8, x8, x9
     b28:	ldr	w12, [x8, #4]
     b2c:	mov	w1, w12
     b30:	ldur	x2, [x29, #-32]
     b34:	ldr	x8, [sp, #16]
     b38:	blr	x8
     b3c:	stur	w0, [x29, #-36]
     b40:	cbz	w0, b50 <ctf_variable_iter+0xd4>
     b44:	ldur	w8, [x29, #-36]
     b48:	stur	w8, [x29, #-4]
     b4c:	b	bbc <ctf_variable_iter+0x140>
     b50:	ldr	x8, [sp, #32]
     b54:	add	x8, x8, #0x1
     b58:	str	x8, [sp, #32]
     b5c:	b	ad0 <ctf_variable_iter+0x54>
     b60:	b	bb8 <ctf_variable_iter+0x13c>
     b64:	ldur	x8, [x29, #-16]
     b68:	ldr	x8, [x8, #608]
     b6c:	str	x8, [sp, #24]
     b70:	ldr	x8, [sp, #24]
     b74:	cbz	x8, bb8 <ctf_variable_iter+0x13c>
     b78:	ldur	x8, [x29, #-24]
     b7c:	ldr	x9, [sp, #24]
     b80:	ldr	x0, [x9, #16]
     b84:	ldr	x9, [sp, #24]
     b88:	ldr	x1, [x9, #24]
     b8c:	ldur	x2, [x29, #-32]
     b90:	blr	x8
     b94:	stur	w0, [x29, #-36]
     b98:	cbz	w0, ba8 <ctf_variable_iter+0x12c>
     b9c:	ldur	w8, [x29, #-36]
     ba0:	stur	w8, [x29, #-4]
     ba4:	b	bbc <ctf_variable_iter+0x140>
     ba8:	ldr	x8, [sp, #24]
     bac:	ldr	x8, [x8, #8]
     bb0:	str	x8, [sp, #24]
     bb4:	b	b70 <ctf_variable_iter+0xf4>
     bb8:	stur	wzr, [x29, #-4]
     bbc:	ldur	w0, [x29, #-4]
     bc0:	ldp	x29, x30, [sp, #80]
     bc4:	add	sp, sp, #0x60
     bc8:	ret

0000000000000bcc <ctf_type_reference>:
     bcc:	sub	sp, sp, #0x50
     bd0:	stp	x29, x30, [sp, #64]
     bd4:	add	x29, sp, #0x40
     bd8:	sub	x8, x29, #0x10
     bdc:	stur	x0, [x29, #-16]
     be0:	stur	x1, [x29, #-24]
     be4:	ldur	x9, [x29, #-16]
     be8:	str	x9, [sp, #32]
     bec:	ldur	x1, [x29, #-24]
     bf0:	mov	x0, x8
     bf4:	bl	0 <ctf_lookup_by_id>
     bf8:	str	x0, [sp, #24]
     bfc:	cbnz	x0, c0c <ctf_type_reference+0x40>
     c00:	mov	x8, #0xffffffffffffffff    	// #-1
     c04:	stur	x8, [x29, #-8]
     c08:	b	cb8 <ctf_type_reference+0xec>
     c0c:	ldur	x8, [x29, #-16]
     c10:	ldr	x8, [x8]
     c14:	ldr	x8, [x8]
     c18:	ldr	x9, [sp, #24]
     c1c:	ldr	w0, [x9, #4]
     c20:	blr	x8
     c24:	cmp	w0, #0x3
     c28:	str	w0, [sp, #4]
     c2c:	b.eq	c58 <ctf_type_reference+0x8c>  // b.none
     c30:	b	c34 <ctf_type_reference+0x68>
     c34:	ldr	w8, [sp, #4]
     c38:	subs	w9, w8, #0xa
     c3c:	cmp	w9, #0x3
     c40:	b.ls	c58 <ctf_type_reference+0x8c>  // b.plast
     c44:	b	c48 <ctf_type_reference+0x7c>
     c48:	ldr	w8, [sp, #4]
     c4c:	cmp	w8, #0xe
     c50:	b.eq	c6c <ctf_type_reference+0xa0>  // b.none
     c54:	b	ca8 <ctf_type_reference+0xdc>
     c58:	ldr	x8, [sp, #24]
     c5c:	ldr	w9, [x8, #8]
     c60:	mov	w8, w9
     c64:	stur	x8, [x29, #-8]
     c68:	b	cb8 <ctf_type_reference+0xec>
     c6c:	ldur	x0, [x29, #-16]
     c70:	ldr	x1, [sp, #24]
     c74:	mov	x8, xzr
     c78:	mov	x2, x8
     c7c:	add	x3, sp, #0x8
     c80:	bl	478 <ctf_get_ctt_size>
     c84:	ldr	x8, [sp, #24]
     c88:	ldr	x9, [sp, #8]
     c8c:	add	x8, x8, x9
     c90:	str	x8, [sp, #16]
     c94:	ldr	x8, [sp, #16]
     c98:	ldr	w10, [x8]
     c9c:	mov	w8, w10
     ca0:	stur	x8, [x29, #-8]
     ca4:	b	cb8 <ctf_type_reference+0xec>
     ca8:	ldr	x0, [sp, #32]
     cac:	mov	w1, #0x400                 	// #1024
     cb0:	bl	0 <ctf_set_errno>
     cb4:	stur	x0, [x29, #-8]
     cb8:	ldur	x0, [x29, #-8]
     cbc:	ldp	x29, x30, [sp, #64]
     cc0:	add	sp, sp, #0x50
     cc4:	ret

0000000000000cc8 <ctf_lookup_by_rawname>:
     cc8:	sub	sp, sp, #0x40
     ccc:	stp	x29, x30, [sp, #48]
     cd0:	add	x29, sp, #0x30
     cd4:	stur	x0, [x29, #-8]
     cd8:	stur	w1, [x29, #-12]
     cdc:	str	x2, [sp, #24]
     ce0:	ldur	x0, [x29, #-8]
     ce4:	ldur	x8, [x29, #-8]
     ce8:	ldur	w1, [x29, #-12]
     cec:	str	x0, [sp, #16]
     cf0:	mov	x0, x8
     cf4:	bl	0 <ctf_name_table>
     cf8:	ldr	x2, [sp, #24]
     cfc:	ldr	x8, [sp, #16]
     d00:	str	x0, [sp, #8]
     d04:	mov	x0, x8
     d08:	ldr	x1, [sp, #8]
     d0c:	bl	d1c <ctf_lookup_by_rawhash>
     d10:	ldp	x29, x30, [sp, #48]
     d14:	add	sp, sp, #0x40
     d18:	ret

0000000000000d1c <ctf_lookup_by_rawhash>:
     d1c:	sub	sp, sp, #0x30
     d20:	stp	x29, x30, [sp, #32]
     d24:	add	x29, sp, #0x20
     d28:	stur	x0, [x29, #-8]
     d2c:	str	x1, [sp, #16]
     d30:	str	x2, [sp, #8]
     d34:	ldur	x8, [x29, #-8]
     d38:	ldr	w9, [x8, #552]
     d3c:	and	w9, w9, #0x2
     d40:	cbz	w9, d5c <ctf_lookup_by_rawhash+0x40>
     d44:	ldr	x8, [sp, #16]
     d48:	ldr	x0, [x8, #8]
     d4c:	ldr	x1, [sp, #8]
     d50:	bl	0 <ctf_dynhash_lookup>
     d54:	str	x0, [sp]
     d58:	b	d74 <ctf_lookup_by_rawhash+0x58>
     d5c:	ldr	x8, [sp, #16]
     d60:	ldr	x0, [x8]
     d64:	ldur	x1, [x29, #-8]
     d68:	ldr	x2, [sp, #8]
     d6c:	bl	0 <ctf_hash_lookup_type>
     d70:	str	x0, [sp]
     d74:	ldr	x0, [sp]
     d78:	ldp	x29, x30, [sp, #32]
     d7c:	add	sp, sp, #0x30
     d80:	ret

0000000000000d84 <ctf_type_aname>:
     d84:	sub	sp, sp, #0xf0
     d88:	stp	x29, x30, [sp, #224]
     d8c:	add	x29, sp, #0xe0
     d90:	stur	x0, [x29, #-16]
     d94:	stur	x1, [x29, #-24]
     d98:	ldur	x8, [x29, #-16]
     d9c:	cbnz	x8, dbc <ctf_type_aname+0x38>
     da0:	ldur	x8, [x29, #-24]
     da4:	mov	x9, #0xffffffffffffffff    	// #-1
     da8:	cmp	x8, x9
     dac:	b.ne	dbc <ctf_type_aname+0x38>  // b.any
     db0:	mov	x8, xzr
     db4:	stur	x8, [x29, #-8]
     db8:	b	10f0 <ctf_type_aname+0x36c>
     dbc:	add	x8, sp, #0x60
     dc0:	mov	x0, x8
     dc4:	str	x8, [sp, #24]
     dc8:	bl	0 <ctf_decl_init>
     dcc:	ldur	x1, [x29, #-16]
     dd0:	ldur	x2, [x29, #-24]
     dd4:	ldr	x0, [sp, #24]
     dd8:	bl	0 <ctf_decl_push>
     ddc:	ldr	w9, [sp, #192]
     de0:	cbz	w9, e04 <ctf_type_aname+0x80>
     de4:	add	x0, sp, #0x60
     de8:	bl	0 <ctf_decl_fini>
     dec:	ldur	x0, [x29, #-16]
     df0:	ldr	w1, [sp, #192]
     df4:	bl	0 <ctf_set_errno>
     df8:	mov	x8, xzr
     dfc:	stur	x8, [x29, #-8]
     e00:	b	10f0 <ctf_type_aname+0x36c>
     e04:	ldr	w8, [sp, #164]
     e08:	cmp	w8, #0x1
     e0c:	cset	w8, gt
     e10:	and	w8, w8, #0x1
     e14:	str	w8, [sp, #72]
     e18:	ldr	w8, [sp, #168]
     e1c:	cmp	w8, #0x2
     e20:	cset	w8, gt
     e24:	and	w8, w8, #0x1
     e28:	str	w8, [sp, #68]
     e2c:	ldr	w8, [sp, #68]
     e30:	cbz	w8, e40 <ctf_type_aname+0xbc>
     e34:	mov	w8, #0x2                   	// #2
     e38:	str	w8, [sp, #20]
     e3c:	b	e58 <ctf_type_aname+0xd4>
     e40:	ldr	w8, [sp, #72]
     e44:	mov	w9, #0xffffffff            	// #-1
     e48:	mov	w10, #0x1                   	// #1
     e4c:	cmp	w8, #0x0
     e50:	csel	w8, w10, w9, ne  // ne = any
     e54:	str	w8, [sp, #20]
     e58:	ldr	w8, [sp, #20]
     e5c:	str	w8, [sp, #76]
     e60:	ldr	w8, [sp, #72]
     e64:	cbz	w8, e74 <ctf_type_aname+0xf0>
     e68:	mov	w8, #0x1                   	// #1
     e6c:	str	w8, [sp, #16]
     e70:	b	e8c <ctf_type_aname+0x108>
     e74:	ldr	w8, [sp, #68]
     e78:	mov	w9, #0xffffffff            	// #-1
     e7c:	mov	w10, #0x2                   	// #2
     e80:	cmp	w8, #0x0
     e84:	csel	w8, w10, w9, ne  // ne = any
     e88:	str	w8, [sp, #16]
     e8c:	ldr	w8, [sp, #16]
     e90:	str	w8, [sp, #80]
     e94:	mov	w8, #0x3                   	// #3
     e98:	str	w8, [sp, #64]
     e9c:	str	wzr, [sp, #84]
     ea0:	ldr	w8, [sp, #84]
     ea4:	cmp	w8, #0x4
     ea8:	b.cs	10b8 <ctf_type_aname+0x334>  // b.hs, b.nlast
     eac:	ldr	w8, [sp, #84]
     eb0:	mov	w9, w8
     eb4:	mov	x10, #0x10                  	// #16
     eb8:	mul	x9, x10, x9
     ebc:	add	x10, sp, #0x60
     ec0:	add	x9, x10, x9
     ec4:	ldr	x9, [x9, #8]
     ec8:	str	x9, [sp, #88]
     ecc:	ldr	x8, [sp, #88]
     ed0:	cbz	x8, 1088 <ctf_type_aname+0x304>
     ed4:	ldur	x8, [x29, #-16]
     ed8:	add	x0, sp, #0x30
     edc:	str	x8, [sp, #48]
     ee0:	ldr	x8, [sp, #88]
     ee4:	ldr	x1, [x8, #16]
     ee8:	bl	0 <ctf_lookup_by_id>
     eec:	str	x0, [sp, #40]
     ef0:	ldr	x0, [sp, #48]
     ef4:	ldr	x8, [sp, #40]
     ef8:	ldr	w1, [x8]
     efc:	bl	0 <ctf_strptr>
     f00:	str	x0, [sp, #32]
     f04:	ldr	w9, [sp, #64]
     f08:	cmp	w9, #0x3
     f0c:	b.eq	f2c <ctf_type_aname+0x1a8>  // b.none
     f10:	ldr	w8, [sp, #64]
     f14:	cmp	w8, #0x4
     f18:	b.eq	f2c <ctf_type_aname+0x1a8>  // b.none
     f1c:	add	x0, sp, #0x60
     f20:	adrp	x1, 0 <ctf_type_isparent>
     f24:	add	x1, x1, #0x0
     f28:	bl	0 <ctf_decl_sprintf>
     f2c:	ldr	w8, [sp, #80]
     f30:	ldr	w9, [sp, #84]
     f34:	cmp	w8, w9
     f38:	b.ne	f54 <ctf_type_aname+0x1d0>  // b.any
     f3c:	add	x0, sp, #0x60
     f40:	adrp	x1, 0 <ctf_type_isparent>
     f44:	add	x1, x1, #0x0
     f48:	bl	0 <ctf_decl_sprintf>
     f4c:	mov	w8, #0xffffffff            	// #-1
     f50:	str	w8, [sp, #80]
     f54:	ldr	x8, [sp, #88]
     f58:	ldr	w9, [x8, #24]
     f5c:	subs	w9, w9, #0x1
     f60:	mov	w8, w9
     f64:	ubfx	x8, x8, #0, #32
     f68:	cmp	x8, #0xd
     f6c:	str	x8, [sp, #8]
     f70:	b.hi	106c <ctf_type_aname+0x2e8>  // b.pmore
     f74:	adrp	x8, 0 <ctf_type_isparent>
     f78:	add	x8, x8, #0x0
     f7c:	ldr	x11, [sp, #8]
     f80:	ldrsw	x10, [x8, x11, lsl #2]
     f84:	add	x9, x8, x10
     f88:	br	x9
     f8c:	ldr	x2, [sp, #32]
     f90:	add	x0, sp, #0x60
     f94:	adrp	x1, 0 <ctf_type_isparent>
     f98:	add	x1, x1, #0x0
     f9c:	bl	0 <ctf_decl_sprintf>
     fa0:	b	106c <ctf_type_aname+0x2e8>
     fa4:	add	x0, sp, #0x60
     fa8:	adrp	x1, 0 <ctf_type_isparent>
     fac:	add	x1, x1, #0x0
     fb0:	bl	0 <ctf_decl_sprintf>
     fb4:	b	106c <ctf_type_aname+0x2e8>
     fb8:	ldr	x8, [sp, #88]
     fbc:	ldr	w2, [x8, #28]
     fc0:	add	x0, sp, #0x60
     fc4:	adrp	x1, 0 <ctf_type_isparent>
     fc8:	add	x1, x1, #0x0
     fcc:	bl	0 <ctf_decl_sprintf>
     fd0:	b	106c <ctf_type_aname+0x2e8>
     fd4:	add	x0, sp, #0x60
     fd8:	adrp	x1, 0 <ctf_type_isparent>
     fdc:	add	x1, x1, #0x0
     fe0:	bl	0 <ctf_decl_sprintf>
     fe4:	b	106c <ctf_type_aname+0x2e8>
     fe8:	ldr	x2, [sp, #32]
     fec:	add	x0, sp, #0x60
     ff0:	adrp	x1, 0 <ctf_type_isparent>
     ff4:	add	x1, x1, #0x0
     ff8:	bl	0 <ctf_decl_sprintf>
     ffc:	b	106c <ctf_type_aname+0x2e8>
    1000:	ldr	x2, [sp, #32]
    1004:	add	x0, sp, #0x60
    1008:	adrp	x1, 0 <ctf_type_isparent>
    100c:	add	x1, x1, #0x0
    1010:	bl	0 <ctf_decl_sprintf>
    1014:	b	106c <ctf_type_aname+0x2e8>
    1018:	ldr	x2, [sp, #32]
    101c:	add	x0, sp, #0x60
    1020:	adrp	x1, 0 <ctf_type_isparent>
    1024:	add	x1, x1, #0x0
    1028:	bl	0 <ctf_decl_sprintf>
    102c:	b	106c <ctf_type_aname+0x2e8>
    1030:	add	x0, sp, #0x60
    1034:	adrp	x1, 0 <ctf_type_isparent>
    1038:	add	x1, x1, #0x0
    103c:	bl	0 <ctf_decl_sprintf>
    1040:	b	106c <ctf_type_aname+0x2e8>
    1044:	add	x0, sp, #0x60
    1048:	adrp	x1, 0 <ctf_type_isparent>
    104c:	add	x1, x1, #0x0
    1050:	bl	0 <ctf_decl_sprintf>
    1054:	b	106c <ctf_type_aname+0x2e8>
    1058:	add	x0, sp, #0x60
    105c:	adrp	x1, 0 <ctf_type_isparent>
    1060:	add	x1, x1, #0x0
    1064:	bl	0 <ctf_decl_sprintf>
    1068:	b	106c <ctf_type_aname+0x2e8>
    106c:	ldr	x8, [sp, #88]
    1070:	ldr	w9, [x8, #24]
    1074:	str	w9, [sp, #64]
    1078:	ldr	x8, [sp, #88]
    107c:	ldr	x8, [x8, #8]
    1080:	str	x8, [sp, #88]
    1084:	b	ecc <ctf_type_aname+0x148>
    1088:	ldr	w8, [sp, #76]
    108c:	ldr	w9, [sp, #84]
    1090:	cmp	w8, w9
    1094:	b.ne	10a8 <ctf_type_aname+0x324>  // b.any
    1098:	add	x0, sp, #0x60
    109c:	adrp	x1, 0 <ctf_type_isparent>
    10a0:	add	x1, x1, #0x0
    10a4:	bl	0 <ctf_decl_sprintf>
    10a8:	ldr	w8, [sp, #84]
    10ac:	add	w8, w8, #0x1
    10b0:	str	w8, [sp, #84]
    10b4:	b	ea0 <ctf_type_aname+0x11c>
    10b8:	ldr	w8, [sp, #196]
    10bc:	cbz	w8, 10cc <ctf_type_aname+0x348>
    10c0:	ldur	x0, [x29, #-16]
    10c4:	mov	w1, #0xc                   	// #12
    10c8:	bl	0 <ctf_set_errno>
    10cc:	add	x8, sp, #0x60
    10d0:	mov	x0, x8
    10d4:	str	x8, [sp]
    10d8:	bl	0 <ctf_decl_buf>
    10dc:	str	x0, [sp, #56]
    10e0:	ldr	x0, [sp]
    10e4:	bl	0 <ctf_decl_fini>
    10e8:	ldr	x8, [sp, #56]
    10ec:	stur	x8, [x29, #-8]
    10f0:	ldur	x0, [x29, #-8]
    10f4:	ldp	x29, x30, [sp, #224]
    10f8:	add	sp, sp, #0xf0
    10fc:	ret

0000000000001100 <ctf_type_lname>:
    1100:	sub	sp, sp, #0x50
    1104:	stp	x29, x30, [sp, #64]
    1108:	add	x29, sp, #0x40
    110c:	stur	x0, [x29, #-16]
    1110:	stur	x1, [x29, #-24]
    1114:	str	x2, [sp, #32]
    1118:	str	x3, [sp, #24]
    111c:	ldur	x0, [x29, #-16]
    1120:	ldur	x1, [x29, #-24]
    1124:	bl	d84 <ctf_type_aname>
    1128:	str	x0, [sp, #16]
    112c:	ldr	x8, [sp, #16]
    1130:	cbnz	x8, 1140 <ctf_type_lname+0x40>
    1134:	mov	x8, #0xffffffffffffffff    	// #-1
    1138:	stur	x8, [x29, #-8]
    113c:	b	1194 <ctf_type_lname+0x94>
    1140:	ldr	x0, [sp, #16]
    1144:	bl	0 <strlen>
    1148:	str	x0, [sp, #8]
    114c:	ldr	x0, [sp, #32]
    1150:	ldr	x1, [sp, #24]
    1154:	ldr	x3, [sp, #16]
    1158:	adrp	x2, 0 <ctf_type_isparent>
    115c:	add	x2, x2, #0x0
    1160:	bl	0 <snprintf>
    1164:	ldr	x8, [sp, #16]
    1168:	mov	x0, x8
    116c:	bl	0 <free>
    1170:	ldr	x8, [sp, #8]
    1174:	ldr	x9, [sp, #24]
    1178:	cmp	x8, x9
    117c:	b.cc	118c <ctf_type_lname+0x8c>  // b.lo, b.ul, b.last
    1180:	ldur	x0, [x29, #-16]
    1184:	mov	w1, #0x401                 	// #1025
    1188:	bl	0 <ctf_set_errno>
    118c:	ldr	x8, [sp, #8]
    1190:	stur	x8, [x29, #-8]
    1194:	ldur	x0, [x29, #-8]
    1198:	ldp	x29, x30, [sp, #64]
    119c:	add	sp, sp, #0x50
    11a0:	ret

00000000000011a4 <ctf_type_name>:
    11a4:	sub	sp, sp, #0x40
    11a8:	stp	x29, x30, [sp, #48]
    11ac:	add	x29, sp, #0x30
    11b0:	stur	x0, [x29, #-8]
    11b4:	stur	x1, [x29, #-16]
    11b8:	str	x2, [sp, #24]
    11bc:	str	x3, [sp, #16]
    11c0:	ldur	x0, [x29, #-8]
    11c4:	ldur	x1, [x29, #-16]
    11c8:	ldr	x2, [sp, #24]
    11cc:	ldr	x3, [sp, #16]
    11d0:	bl	1100 <ctf_type_lname>
    11d4:	str	x0, [sp, #8]
    11d8:	ldr	x8, [sp, #8]
    11dc:	cmp	x8, #0x0
    11e0:	cset	w9, lt  // lt = tstop
    11e4:	tbnz	w9, #0, 1204 <ctf_type_name+0x60>
    11e8:	ldr	x8, [sp, #8]
    11ec:	ldr	x9, [sp, #16]
    11f0:	cmp	x8, x9
    11f4:	b.cs	1204 <ctf_type_name+0x60>  // b.hs, b.nlast
    11f8:	ldr	x8, [sp, #24]
    11fc:	str	x8, [sp]
    1200:	b	120c <ctf_type_name+0x68>
    1204:	mov	x8, xzr
    1208:	str	x8, [sp]
    120c:	ldr	x8, [sp]
    1210:	mov	x0, x8
    1214:	ldp	x29, x30, [sp, #48]
    1218:	add	sp, sp, #0x40
    121c:	ret

0000000000001220 <ctf_type_aname_raw>:
    1220:	sub	sp, sp, #0x30
    1224:	stp	x29, x30, [sp, #32]
    1228:	add	x29, sp, #0x20
    122c:	add	x8, sp, #0x10
    1230:	str	x0, [sp, #16]
    1234:	str	x1, [sp, #8]
    1238:	ldr	x1, [sp, #8]
    123c:	mov	x0, x8
    1240:	bl	0 <ctf_lookup_by_id>
    1244:	str	x0, [sp]
    1248:	cbnz	x0, 1258 <ctf_type_aname_raw+0x38>
    124c:	mov	x8, xzr
    1250:	stur	x8, [x29, #-8]
    1254:	b	1290 <ctf_type_aname_raw+0x70>
    1258:	ldr	x0, [sp, #16]
    125c:	ldr	x8, [sp]
    1260:	ldr	w1, [x8]
    1264:	bl	0 <ctf_strraw>
    1268:	cbz	x0, 1288 <ctf_type_aname_raw+0x68>
    126c:	ldr	x0, [sp, #16]
    1270:	ldr	x8, [sp]
    1274:	ldr	w1, [x8]
    1278:	bl	0 <ctf_strraw>
    127c:	bl	0 <strdup>
    1280:	stur	x0, [x29, #-8]
    1284:	b	1290 <ctf_type_aname_raw+0x70>
    1288:	mov	x8, xzr
    128c:	stur	x8, [x29, #-8]
    1290:	ldur	x0, [x29, #-8]
    1294:	ldp	x29, x30, [sp, #32]
    1298:	add	sp, sp, #0x30
    129c:	ret

00000000000012a0 <ctf_type_size>:
    12a0:	sub	sp, sp, #0x60
    12a4:	stp	x29, x30, [sp, #80]
    12a8:	add	x29, sp, #0x50
    12ac:	mov	x8, #0xffffffffffffffff    	// #-1
    12b0:	stur	x0, [x29, #-16]
    12b4:	stur	x1, [x29, #-24]
    12b8:	ldur	x0, [x29, #-16]
    12bc:	ldur	x1, [x29, #-24]
    12c0:	str	x8, [sp, #8]
    12c4:	bl	320 <ctf_type_resolve>
    12c8:	stur	x0, [x29, #-24]
    12cc:	ldr	x8, [sp, #8]
    12d0:	cmp	x0, x8
    12d4:	b.ne	12e4 <ctf_type_size+0x44>  // b.any
    12d8:	mov	x8, #0xffffffffffffffff    	// #-1
    12dc:	stur	x8, [x29, #-8]
    12e0:	b	1428 <ctf_type_size+0x188>
    12e4:	ldur	x1, [x29, #-24]
    12e8:	sub	x0, x29, #0x10
    12ec:	bl	0 <ctf_lookup_by_id>
    12f0:	stur	x0, [x29, #-32]
    12f4:	cbnz	x0, 1304 <ctf_type_size+0x64>
    12f8:	mov	x8, #0xffffffffffffffff    	// #-1
    12fc:	stur	x8, [x29, #-8]
    1300:	b	1428 <ctf_type_size+0x188>
    1304:	ldur	x8, [x29, #-16]
    1308:	ldr	x8, [x8]
    130c:	ldr	x8, [x8]
    1310:	ldur	x9, [x29, #-32]
    1314:	ldr	w0, [x9, #4]
    1318:	blr	x8
    131c:	subs	w10, w0, #0x3
    1320:	mov	w8, w10
    1324:	ubfx	x8, x8, #0, #32
    1328:	cmp	x8, #0x5
    132c:	str	x8, [sp]
    1330:	b.hi	140c <ctf_type_size+0x16c>  // b.pmore
    1334:	adrp	x8, 0 <ctf_type_isparent>
    1338:	add	x8, x8, #0x0
    133c:	ldr	x11, [sp]
    1340:	ldrsw	x10, [x8, x11, lsl #2]
    1344:	add	x9, x8, x10
    1348:	br	x9
    134c:	ldur	x8, [x29, #-16]
    1350:	ldr	x8, [x8, #488]
    1354:	ldr	x8, [x8, #16]
    1358:	stur	x8, [x29, #-8]
    135c:	b	1428 <ctf_type_size+0x188>
    1360:	stur	xzr, [x29, #-8]
    1364:	b	1428 <ctf_type_size+0x188>
    1368:	ldur	x8, [x29, #-16]
    136c:	ldr	x8, [x8, #488]
    1370:	ldr	x8, [x8, #40]
    1374:	stur	x8, [x29, #-8]
    1378:	b	1428 <ctf_type_size+0x188>
    137c:	ldur	x0, [x29, #-16]
    1380:	ldur	x1, [x29, #-32]
    1384:	mov	x8, xzr
    1388:	mov	x2, x8
    138c:	mov	x3, x8
    1390:	bl	478 <ctf_get_ctt_size>
    1394:	str	x0, [sp, #40]
    1398:	cmp	x0, #0x0
    139c:	cset	w9, le
    13a0:	tbnz	w9, #0, 13b0 <ctf_type_size+0x110>
    13a4:	ldr	x8, [sp, #40]
    13a8:	stur	x8, [x29, #-8]
    13ac:	b	1428 <ctf_type_size+0x188>
    13b0:	ldur	x0, [x29, #-16]
    13b4:	ldur	x1, [x29, #-24]
    13b8:	add	x2, sp, #0x10
    13bc:	bl	1438 <ctf_array_info>
    13c0:	cmp	w0, #0x0
    13c4:	cset	w8, lt  // lt = tstop
    13c8:	tbnz	w8, #0, 13e8 <ctf_type_size+0x148>
    13cc:	ldur	x0, [x29, #-16]
    13d0:	ldr	x1, [sp, #16]
    13d4:	bl	12a0 <ctf_type_size>
    13d8:	str	x0, [sp, #40]
    13dc:	cmp	x0, #0x0
    13e0:	cset	w8, ge  // ge = tcont
    13e4:	tbnz	w8, #0, 13f4 <ctf_type_size+0x154>
    13e8:	mov	x8, #0xffffffffffffffff    	// #-1
    13ec:	stur	x8, [x29, #-8]
    13f0:	b	1428 <ctf_type_size+0x188>
    13f4:	ldr	x8, [sp, #40]
    13f8:	ldr	w9, [sp, #32]
    13fc:	mov	w10, w9
    1400:	mul	x8, x8, x10
    1404:	stur	x8, [x29, #-8]
    1408:	b	1428 <ctf_type_size+0x188>
    140c:	ldur	x0, [x29, #-16]
    1410:	ldur	x1, [x29, #-32]
    1414:	mov	x8, xzr
    1418:	mov	x2, x8
    141c:	mov	x3, x8
    1420:	bl	478 <ctf_get_ctt_size>
    1424:	stur	x0, [x29, #-8]
    1428:	ldur	x0, [x29, #-8]
    142c:	ldp	x29, x30, [sp, #80]
    1430:	add	sp, sp, #0x60
    1434:	ret

0000000000001438 <ctf_array_info>:
    1438:	sub	sp, sp, #0x60
    143c:	stp	x29, x30, [sp, #80]
    1440:	add	x29, sp, #0x50
    1444:	sub	x8, x29, #0x10
    1448:	stur	x0, [x29, #-16]
    144c:	stur	x1, [x29, #-24]
    1450:	stur	x2, [x29, #-32]
    1454:	ldur	x9, [x29, #-16]
    1458:	str	x9, [sp, #40]
    145c:	ldur	x1, [x29, #-24]
    1460:	mov	x0, x8
    1464:	bl	0 <ctf_lookup_by_id>
    1468:	str	x0, [sp, #32]
    146c:	cbnz	x0, 147c <ctf_array_info+0x44>
    1470:	mov	w8, #0xffffffff            	// #-1
    1474:	stur	w8, [x29, #-4]
    1478:	b	1548 <ctf_array_info+0x110>
    147c:	ldur	x8, [x29, #-16]
    1480:	ldr	x8, [x8]
    1484:	ldr	x8, [x8]
    1488:	ldr	x9, [sp, #32]
    148c:	ldr	w0, [x9, #4]
    1490:	blr	x8
    1494:	cmp	w0, #0x4
    1498:	b.eq	14b0 <ctf_array_info+0x78>  // b.none
    149c:	ldr	x0, [sp, #40]
    14a0:	mov	w1, #0x3ff                 	// #1023
    14a4:	bl	0 <ctf_set_errno>
    14a8:	stur	w0, [x29, #-4]
    14ac:	b	1548 <ctf_array_info+0x110>
    14b0:	ldr	x0, [sp, #40]
    14b4:	ldur	x1, [x29, #-24]
    14b8:	bl	0 <ctf_dynamic_type>
    14bc:	str	x0, [sp, #16]
    14c0:	cbz	x0, 14e4 <ctf_array_info+0xac>
    14c4:	ldur	x8, [x29, #-32]
    14c8:	ldr	x9, [sp, #16]
    14cc:	ldr	q0, [x9, #48]
    14d0:	str	q0, [x8]
    14d4:	ldr	x9, [x9, #64]
    14d8:	str	x9, [x8, #16]
    14dc:	stur	wzr, [x29, #-4]
    14e0:	b	1548 <ctf_array_info+0x110>
    14e4:	ldur	x0, [x29, #-16]
    14e8:	ldr	x1, [sp, #32]
    14ec:	mov	x8, xzr
    14f0:	mov	x2, x8
    14f4:	add	x3, sp, #0x8
    14f8:	bl	478 <ctf_get_ctt_size>
    14fc:	ldr	x8, [sp, #32]
    1500:	ldr	x9, [sp, #8]
    1504:	add	x8, x8, x9
    1508:	str	x8, [sp, #24]
    150c:	ldr	x8, [sp, #24]
    1510:	ldr	w10, [x8]
    1514:	mov	w8, w10
    1518:	ldur	x9, [x29, #-32]
    151c:	str	x8, [x9]
    1520:	ldr	x8, [sp, #24]
    1524:	ldr	w10, [x8, #4]
    1528:	mov	w8, w10
    152c:	ldur	x9, [x29, #-32]
    1530:	str	x8, [x9, #8]
    1534:	ldr	x8, [sp, #24]
    1538:	ldr	w10, [x8, #8]
    153c:	ldur	x8, [x29, #-32]
    1540:	str	w10, [x8, #16]
    1544:	stur	wzr, [x29, #-4]
    1548:	ldur	w0, [x29, #-4]
    154c:	ldp	x29, x30, [sp, #80]
    1550:	add	sp, sp, #0x60
    1554:	ret

0000000000001558 <ctf_type_align>:
    1558:	sub	sp, sp, #0xf0
    155c:	stp	x29, x30, [sp, #224]
    1560:	add	x29, sp, #0xe0
    1564:	mov	x8, #0xffffffffffffffff    	// #-1
    1568:	stur	x0, [x29, #-16]
    156c:	stur	x1, [x29, #-24]
    1570:	ldur	x9, [x29, #-16]
    1574:	stur	x9, [x29, #-40]
    1578:	ldur	x0, [x29, #-16]
    157c:	ldur	x1, [x29, #-24]
    1580:	str	x8, [sp, #48]
    1584:	bl	320 <ctf_type_resolve>
    1588:	stur	x0, [x29, #-24]
    158c:	ldr	x8, [sp, #48]
    1590:	cmp	x0, x8
    1594:	b.ne	15a4 <ctf_type_align+0x4c>  // b.any
    1598:	mov	x8, #0xffffffffffffffff    	// #-1
    159c:	stur	x8, [x29, #-8]
    15a0:	b	1898 <ctf_type_align+0x340>
    15a4:	ldur	x1, [x29, #-24]
    15a8:	sub	x0, x29, #0x10
    15ac:	bl	0 <ctf_lookup_by_id>
    15b0:	stur	x0, [x29, #-32]
    15b4:	cbnz	x0, 15c4 <ctf_type_align+0x6c>
    15b8:	mov	x8, #0xffffffffffffffff    	// #-1
    15bc:	stur	x8, [x29, #-8]
    15c0:	b	1898 <ctf_type_align+0x340>
    15c4:	ldur	x8, [x29, #-16]
    15c8:	ldr	x8, [x8]
    15cc:	ldr	x8, [x8]
    15d0:	ldur	x9, [x29, #-32]
    15d4:	ldr	w0, [x9, #4]
    15d8:	blr	x8
    15dc:	stur	w0, [x29, #-44]
    15e0:	ldur	w10, [x29, #-44]
    15e4:	subs	w10, w10, #0x3
    15e8:	mov	w8, w10
    15ec:	ubfx	x8, x8, #0, #32
    15f0:	cmp	x8, #0x5
    15f4:	str	x8, [sp, #40]
    15f8:	b.hi	187c <ctf_type_align+0x324>  // b.pmore
    15fc:	adrp	x8, 0 <ctf_type_isparent>
    1600:	add	x8, x8, #0x0
    1604:	ldr	x11, [sp, #40]
    1608:	ldrsw	x10, [x8, x11, lsl #2]
    160c:	add	x9, x8, x10
    1610:	br	x9
    1614:	ldur	x8, [x29, #-16]
    1618:	ldr	x8, [x8, #488]
    161c:	ldr	x8, [x8, #16]
    1620:	stur	x8, [x29, #-8]
    1624:	b	1898 <ctf_type_align+0x340>
    1628:	ldur	x0, [x29, #-16]
    162c:	ldur	x1, [x29, #-24]
    1630:	sub	x2, x29, #0x48
    1634:	bl	1438 <ctf_array_info>
    1638:	cmp	w0, #0x0
    163c:	cset	w8, ge  // ge = tcont
    1640:	tbnz	w8, #0, 1650 <ctf_type_align+0xf8>
    1644:	mov	x8, #0xffffffffffffffff    	// #-1
    1648:	stur	x8, [x29, #-8]
    164c:	b	1898 <ctf_type_align+0x340>
    1650:	ldur	x0, [x29, #-16]
    1654:	ldur	x1, [x29, #-72]
    1658:	bl	1558 <ctf_type_align>
    165c:	stur	x0, [x29, #-8]
    1660:	b	1898 <ctf_type_align+0x340>
    1664:	stur	xzr, [x29, #-80]
    1668:	ldur	x0, [x29, #-40]
    166c:	ldur	x1, [x29, #-24]
    1670:	bl	0 <ctf_dynamic_type>
    1674:	stur	x0, [x29, #-88]
    1678:	cbnz	x0, 17e8 <ctf_type_align+0x290>
    167c:	ldur	x8, [x29, #-16]
    1680:	ldr	x8, [x8]
    1684:	ldr	x8, [x8, #16]
    1688:	ldur	x9, [x29, #-32]
    168c:	ldr	w0, [x9, #4]
    1690:	blr	x8
    1694:	stur	w0, [x29, #-92]
    1698:	ldur	x0, [x29, #-16]
    169c:	ldur	x1, [x29, #-32]
    16a0:	sub	x2, x29, #0x68
    16a4:	add	x3, sp, #0x70
    16a8:	bl	478 <ctf_get_ctt_size>
    16ac:	ldur	x8, [x29, #-32]
    16b0:	ldr	x9, [sp, #112]
    16b4:	add	x8, x8, x9
    16b8:	str	x8, [sp, #104]
    16bc:	ldur	w10, [x29, #-44]
    16c0:	cmp	w10, #0x6
    16c4:	b.ne	16f0 <ctf_type_align+0x198>  // b.any
    16c8:	ldur	w8, [x29, #-92]
    16cc:	cmp	w8, #0x1
    16d0:	b.cs	16e0 <ctf_type_align+0x188>  // b.hs, b.nlast
    16d4:	ldur	w8, [x29, #-92]
    16d8:	str	w8, [sp, #36]
    16dc:	b	16e8 <ctf_type_align+0x190>
    16e0:	mov	w8, #0x1                   	// #1
    16e4:	str	w8, [sp, #36]
    16e8:	ldr	w8, [sp, #36]
    16ec:	stur	w8, [x29, #-92]
    16f0:	ldur	x8, [x29, #-104]
    16f4:	mov	x9, #0x20000000            	// #536870912
    16f8:	cmp	x8, x9
    16fc:	b.ge	1774 <ctf_type_align+0x21c>  // b.tcont
    1700:	ldr	x8, [sp, #104]
    1704:	str	x8, [sp, #96]
    1708:	ldur	w8, [x29, #-92]
    170c:	cbz	w8, 1770 <ctf_type_align+0x218>
    1710:	ldur	x0, [x29, #-16]
    1714:	ldr	x8, [sp, #96]
    1718:	ldr	w9, [x8, #8]
    171c:	mov	w1, w9
    1720:	bl	1558 <ctf_type_align>
    1724:	str	x0, [sp, #88]
    1728:	ldur	x8, [x29, #-80]
    172c:	ldr	x10, [sp, #88]
    1730:	cmp	x8, x10
    1734:	b.ls	1744 <ctf_type_align+0x1ec>  // b.plast
    1738:	ldur	x8, [x29, #-80]
    173c:	str	x8, [sp, #24]
    1740:	b	174c <ctf_type_align+0x1f4>
    1744:	ldr	x8, [sp, #88]
    1748:	str	x8, [sp, #24]
    174c:	ldr	x8, [sp, #24]
    1750:	stur	x8, [x29, #-80]
    1754:	ldur	w8, [x29, #-92]
    1758:	subs	w8, w8, #0x1
    175c:	stur	w8, [x29, #-92]
    1760:	ldr	x9, [sp, #96]
    1764:	add	x9, x9, #0xc
    1768:	str	x9, [sp, #96]
    176c:	b	1708 <ctf_type_align+0x1b0>
    1770:	b	17e4 <ctf_type_align+0x28c>
    1774:	ldr	x8, [sp, #104]
    1778:	str	x8, [sp, #80]
    177c:	ldur	w8, [x29, #-92]
    1780:	cbz	w8, 17e4 <ctf_type_align+0x28c>
    1784:	ldur	x0, [x29, #-16]
    1788:	ldr	x8, [sp, #80]
    178c:	ldr	w9, [x8, #8]
    1790:	mov	w1, w9
    1794:	bl	1558 <ctf_type_align>
    1798:	str	x0, [sp, #72]
    179c:	ldur	x8, [x29, #-80]
    17a0:	ldr	x10, [sp, #72]
    17a4:	cmp	x8, x10
    17a8:	b.ls	17b8 <ctf_type_align+0x260>  // b.plast
    17ac:	ldur	x8, [x29, #-80]
    17b0:	str	x8, [sp, #16]
    17b4:	b	17c0 <ctf_type_align+0x268>
    17b8:	ldr	x8, [sp, #72]
    17bc:	str	x8, [sp, #16]
    17c0:	ldr	x8, [sp, #16]
    17c4:	stur	x8, [x29, #-80]
    17c8:	ldur	w8, [x29, #-92]
    17cc:	subs	w8, w8, #0x1
    17d0:	stur	w8, [x29, #-92]
    17d4:	ldr	x9, [sp, #80]
    17d8:	add	x9, x9, #0x10
    17dc:	str	x9, [sp, #80]
    17e0:	b	177c <ctf_type_align+0x224>
    17e4:	b	185c <ctf_type_align+0x304>
    17e8:	ldur	x8, [x29, #-88]
    17ec:	ldr	x8, [x8, #56]
    17f0:	str	x8, [sp, #64]
    17f4:	ldr	x8, [sp, #64]
    17f8:	cbz	x8, 185c <ctf_type_align+0x304>
    17fc:	ldur	x0, [x29, #-16]
    1800:	ldr	x8, [sp, #64]
    1804:	ldr	x1, [x8, #24]
    1808:	bl	1558 <ctf_type_align>
    180c:	str	x0, [sp, #56]
    1810:	ldur	x8, [x29, #-80]
    1814:	ldr	x9, [sp, #56]
    1818:	cmp	x8, x9
    181c:	b.ls	182c <ctf_type_align+0x2d4>  // b.plast
    1820:	ldur	x8, [x29, #-80]
    1824:	str	x8, [sp, #8]
    1828:	b	1834 <ctf_type_align+0x2dc>
    182c:	ldr	x8, [sp, #56]
    1830:	str	x8, [sp, #8]
    1834:	ldr	x8, [sp, #8]
    1838:	stur	x8, [x29, #-80]
    183c:	ldur	w9, [x29, #-44]
    1840:	cmp	w9, #0x6
    1844:	b.ne	184c <ctf_type_align+0x2f4>  // b.any
    1848:	b	185c <ctf_type_align+0x304>
    184c:	ldr	x8, [sp, #64]
    1850:	ldr	x8, [x8, #8]
    1854:	str	x8, [sp, #64]
    1858:	b	17f4 <ctf_type_align+0x29c>
    185c:	ldur	x8, [x29, #-80]
    1860:	stur	x8, [x29, #-8]
    1864:	b	1898 <ctf_type_align+0x340>
    1868:	ldur	x8, [x29, #-16]
    186c:	ldr	x8, [x8, #488]
    1870:	ldr	x8, [x8, #40]
    1874:	stur	x8, [x29, #-8]
    1878:	b	1898 <ctf_type_align+0x340>
    187c:	ldur	x0, [x29, #-16]
    1880:	ldur	x1, [x29, #-32]
    1884:	mov	x8, xzr
    1888:	mov	x2, x8
    188c:	mov	x3, x8
    1890:	bl	478 <ctf_get_ctt_size>
    1894:	stur	x0, [x29, #-8]
    1898:	ldur	x0, [x29, #-8]
    189c:	ldp	x29, x30, [sp, #224]
    18a0:	add	sp, sp, #0xf0
    18a4:	ret

00000000000018a8 <ctf_type_kind_unsliced>:
    18a8:	sub	sp, sp, #0x30
    18ac:	stp	x29, x30, [sp, #32]
    18b0:	add	x29, sp, #0x20
    18b4:	add	x8, sp, #0x10
    18b8:	str	x0, [sp, #16]
    18bc:	str	x1, [sp, #8]
    18c0:	ldr	x1, [sp, #8]
    18c4:	mov	x0, x8
    18c8:	bl	0 <ctf_lookup_by_id>
    18cc:	str	x0, [sp]
    18d0:	cbnz	x0, 18e0 <ctf_type_kind_unsliced+0x38>
    18d4:	mov	w8, #0xffffffff            	// #-1
    18d8:	stur	w8, [x29, #-4]
    18dc:	b	18fc <ctf_type_kind_unsliced+0x54>
    18e0:	ldr	x8, [sp, #16]
    18e4:	ldr	x8, [x8]
    18e8:	ldr	x8, [x8]
    18ec:	ldr	x9, [sp]
    18f0:	ldr	w0, [x9, #4]
    18f4:	blr	x8
    18f8:	stur	w0, [x29, #-4]
    18fc:	ldur	w0, [x29, #-4]
    1900:	ldp	x29, x30, [sp, #32]
    1904:	add	sp, sp, #0x30
    1908:	ret

000000000000190c <ctf_type_kind>:
    190c:	sub	sp, sp, #0x30
    1910:	stp	x29, x30, [sp, #32]
    1914:	add	x29, sp, #0x20
    1918:	str	x0, [sp, #16]
    191c:	str	x1, [sp, #8]
    1920:	ldr	x0, [sp, #16]
    1924:	ldr	x1, [sp, #8]
    1928:	bl	18a8 <ctf_type_kind_unsliced>
    192c:	str	w0, [sp, #4]
    1930:	cmp	w0, #0x0
    1934:	cset	w8, ge  // ge = tcont
    1938:	tbnz	w8, #0, 1948 <ctf_type_kind+0x3c>
    193c:	mov	w8, #0xffffffff            	// #-1
    1940:	stur	w8, [x29, #-4]
    1944:	b	1994 <ctf_type_kind+0x88>
    1948:	ldr	w8, [sp, #4]
    194c:	cmp	w8, #0xe
    1950:	b.ne	198c <ctf_type_kind+0x80>  // b.any
    1954:	ldr	x0, [sp, #16]
    1958:	ldr	x1, [sp, #8]
    195c:	bl	bcc <ctf_type_reference>
    1960:	str	x0, [sp, #8]
    1964:	mov	x8, #0xffffffffffffffff    	// #-1
    1968:	cmp	x0, x8
    196c:	b.ne	197c <ctf_type_kind+0x70>  // b.any
    1970:	mov	w8, #0xffffffff            	// #-1
    1974:	stur	w8, [x29, #-4]
    1978:	b	1994 <ctf_type_kind+0x88>
    197c:	ldr	x0, [sp, #16]
    1980:	ldr	x1, [sp, #8]
    1984:	bl	18a8 <ctf_type_kind_unsliced>
    1988:	str	w0, [sp, #4]
    198c:	ldr	w8, [sp, #4]
    1990:	stur	w8, [x29, #-4]
    1994:	ldur	w0, [x29, #-4]
    1998:	ldp	x29, x30, [sp, #32]
    199c:	add	sp, sp, #0x30
    19a0:	ret

00000000000019a4 <ctf_type_pointer>:
    19a4:	sub	sp, sp, #0x50
    19a8:	stp	x29, x30, [sp, #64]
    19ac:	add	x29, sp, #0x40
    19b0:	sub	x8, x29, #0x10
    19b4:	stur	x0, [x29, #-16]
    19b8:	stur	x1, [x29, #-24]
    19bc:	ldur	x9, [x29, #-16]
    19c0:	str	x9, [sp, #32]
    19c4:	ldur	x1, [x29, #-24]
    19c8:	mov	x0, x8
    19cc:	bl	0 <ctf_lookup_by_id>
    19d0:	cbnz	x0, 19e0 <ctf_type_pointer+0x3c>
    19d4:	mov	x8, #0xffffffffffffffff    	// #-1
    19d8:	stur	x8, [x29, #-8]
    19dc:	b	1b2c <ctf_type_pointer+0x188>
    19e0:	ldur	x8, [x29, #-16]
    19e4:	ldr	x8, [x8, #448]
    19e8:	ldur	x9, [x29, #-24]
    19ec:	ldur	x10, [x29, #-16]
    19f0:	ldr	w11, [x10, #544]
    19f4:	mov	w10, w11
    19f8:	and	x9, x9, x10
    19fc:	ldr	w11, [x8, x9, lsl #2]
    1a00:	mov	w8, w11
    1a04:	str	x8, [sp, #24]
    1a08:	cbz	x8, 1a54 <ctf_type_pointer+0xb0>
    1a0c:	ldur	x8, [x29, #-16]
    1a10:	ldr	w9, [x8, #552]
    1a14:	and	w9, w9, #0x1
    1a18:	cbz	w9, 1a40 <ctf_type_pointer+0x9c>
    1a1c:	ldr	x8, [sp, #24]
    1a20:	ldur	x9, [x29, #-16]
    1a24:	ldr	w10, [x9, #544]
    1a28:	add	w10, w10, #0x1
    1a2c:	mov	w9, w10
    1a30:	ubfx	x9, x9, #0, #32
    1a34:	orr	x8, x8, x9
    1a38:	str	x8, [sp, #16]
    1a3c:	b	1a48 <ctf_type_pointer+0xa4>
    1a40:	ldr	x8, [sp, #24]
    1a44:	str	x8, [sp, #16]
    1a48:	ldr	x8, [sp, #16]
    1a4c:	stur	x8, [x29, #-8]
    1a50:	b	1b2c <ctf_type_pointer+0x188>
    1a54:	ldur	x0, [x29, #-16]
    1a58:	ldur	x1, [x29, #-24]
    1a5c:	bl	320 <ctf_type_resolve>
    1a60:	stur	x0, [x29, #-24]
    1a64:	mov	x8, #0xffffffffffffffff    	// #-1
    1a68:	cmp	x0, x8
    1a6c:	b.ne	1a84 <ctf_type_pointer+0xe0>  // b.any
    1a70:	ldr	x0, [sp, #32]
    1a74:	mov	w1, #0x402                 	// #1026
    1a78:	bl	0 <ctf_set_errno>
    1a7c:	stur	x0, [x29, #-8]
    1a80:	b	1b2c <ctf_type_pointer+0x188>
    1a84:	ldur	x1, [x29, #-24]
    1a88:	sub	x0, x29, #0x10
    1a8c:	bl	0 <ctf_lookup_by_id>
    1a90:	cbnz	x0, 1aa8 <ctf_type_pointer+0x104>
    1a94:	ldr	x0, [sp, #32]
    1a98:	mov	w1, #0x402                 	// #1026
    1a9c:	bl	0 <ctf_set_errno>
    1aa0:	stur	x0, [x29, #-8]
    1aa4:	b	1b2c <ctf_type_pointer+0x188>
    1aa8:	ldur	x8, [x29, #-16]
    1aac:	ldr	x8, [x8, #448]
    1ab0:	ldur	x9, [x29, #-24]
    1ab4:	ldur	x10, [x29, #-16]
    1ab8:	ldr	w11, [x10, #544]
    1abc:	mov	w10, w11
    1ac0:	and	x9, x9, x10
    1ac4:	ldr	w11, [x8, x9, lsl #2]
    1ac8:	mov	w8, w11
    1acc:	str	x8, [sp, #24]
    1ad0:	cbz	x8, 1b1c <ctf_type_pointer+0x178>
    1ad4:	ldur	x8, [x29, #-16]
    1ad8:	ldr	w9, [x8, #552]
    1adc:	and	w9, w9, #0x1
    1ae0:	cbz	w9, 1b08 <ctf_type_pointer+0x164>
    1ae4:	ldr	x8, [sp, #24]
    1ae8:	ldur	x9, [x29, #-16]
    1aec:	ldr	w10, [x9, #544]
    1af0:	add	w10, w10, #0x1
    1af4:	mov	w9, w10
    1af8:	ubfx	x9, x9, #0, #32
    1afc:	orr	x8, x8, x9
    1b00:	str	x8, [sp, #8]
    1b04:	b	1b10 <ctf_type_pointer+0x16c>
    1b08:	ldr	x8, [sp, #24]
    1b0c:	str	x8, [sp, #8]
    1b10:	ldr	x8, [sp, #8]
    1b14:	stur	x8, [x29, #-8]
    1b18:	b	1b2c <ctf_type_pointer+0x188>
    1b1c:	ldr	x0, [sp, #32]
    1b20:	mov	w1, #0x402                 	// #1026
    1b24:	bl	0 <ctf_set_errno>
    1b28:	stur	x0, [x29, #-8]
    1b2c:	ldur	x0, [x29, #-8]
    1b30:	ldp	x29, x30, [sp, #64]
    1b34:	add	sp, sp, #0x50
    1b38:	ret

0000000000001b3c <ctf_type_encoding>:
    1b3c:	sub	sp, sp, #0x90
    1b40:	stp	x29, x30, [sp, #128]
    1b44:	add	x29, sp, #0x80
    1b48:	sub	x8, x29, #0x10
    1b4c:	stur	x0, [x29, #-16]
    1b50:	stur	x1, [x29, #-24]
    1b54:	stur	x2, [x29, #-32]
    1b58:	ldur	x9, [x29, #-16]
    1b5c:	stur	x9, [x29, #-40]
    1b60:	ldur	x1, [x29, #-24]
    1b64:	mov	x0, x8
    1b68:	bl	0 <ctf_lookup_by_id>
    1b6c:	stur	x0, [x29, #-56]
    1b70:	cbnz	x0, 1b80 <ctf_type_encoding+0x44>
    1b74:	mov	w8, #0xffffffff            	// #-1
    1b78:	stur	w8, [x29, #-4]
    1b7c:	b	1dd8 <ctf_type_encoding+0x29c>
    1b80:	ldur	x0, [x29, #-40]
    1b84:	ldur	x1, [x29, #-24]
    1b88:	bl	0 <ctf_dynamic_type>
    1b8c:	stur	x0, [x29, #-48]
    1b90:	cbz	x0, 1c60 <ctf_type_encoding+0x124>
    1b94:	ldur	x8, [x29, #-16]
    1b98:	ldr	x8, [x8]
    1b9c:	ldr	x8, [x8]
    1ba0:	ldur	x9, [x29, #-56]
    1ba4:	ldr	w0, [x9, #4]
    1ba8:	blr	x8
    1bac:	subs	w10, w0, #0x1
    1bb0:	cmp	w10, #0x1
    1bb4:	str	w0, [sp, #8]
    1bb8:	b.ls	1bd0 <ctf_type_encoding+0x94>  // b.plast
    1bbc:	b	1bc0 <ctf_type_encoding+0x84>
    1bc0:	ldr	w8, [sp, #8]
    1bc4:	cmp	w8, #0xe
    1bc8:	b.eq	1bec <ctf_type_encoding+0xb0>  // b.none
    1bcc:	b	1c44 <ctf_type_encoding+0x108>
    1bd0:	ldur	x8, [x29, #-32]
    1bd4:	ldur	x9, [x29, #-48]
    1bd8:	ldr	x10, [x9, #48]
    1bdc:	str	x10, [x8]
    1be0:	ldr	w11, [x9, #56]
    1be4:	str	w11, [x8, #8]
    1be8:	b	1c58 <ctf_type_encoding+0x11c>
    1bec:	ldur	x8, [x29, #-48]
    1bf0:	add	x8, x8, #0x30
    1bf4:	str	x8, [sp, #48]
    1bf8:	ldur	x0, [x29, #-16]
    1bfc:	ldr	x8, [sp, #48]
    1c00:	ldr	w9, [x8]
    1c04:	mov	w1, w9
    1c08:	add	x2, sp, #0x24
    1c0c:	bl	1b3c <ctf_type_encoding>
    1c10:	str	w0, [sp, #60]
    1c14:	ldr	w9, [sp, #36]
    1c18:	ldur	x8, [x29, #-32]
    1c1c:	str	w9, [x8]
    1c20:	ldr	x8, [sp, #48]
    1c24:	ldrh	w9, [x8, #4]
    1c28:	ldur	x8, [x29, #-32]
    1c2c:	str	w9, [x8, #4]
    1c30:	ldr	x8, [sp, #48]
    1c34:	ldrh	w9, [x8, #6]
    1c38:	ldur	x8, [x29, #-32]
    1c3c:	str	w9, [x8, #8]
    1c40:	b	1c58 <ctf_type_encoding+0x11c>
    1c44:	ldur	x0, [x29, #-40]
    1c48:	mov	w1, #0x3fe                 	// #1022
    1c4c:	bl	0 <ctf_set_errno>
    1c50:	stur	w0, [x29, #-4]
    1c54:	b	1dd8 <ctf_type_encoding+0x29c>
    1c58:	stur	wzr, [x29, #-4]
    1c5c:	b	1dd8 <ctf_type_encoding+0x29c>
    1c60:	ldur	x0, [x29, #-16]
    1c64:	ldur	x1, [x29, #-56]
    1c68:	mov	x8, xzr
    1c6c:	mov	x2, x8
    1c70:	add	x3, sp, #0x40
    1c74:	bl	478 <ctf_get_ctt_size>
    1c78:	ldur	x8, [x29, #-16]
    1c7c:	ldr	x8, [x8]
    1c80:	ldr	x8, [x8]
    1c84:	ldur	x9, [x29, #-56]
    1c88:	ldr	w10, [x9, #4]
    1c8c:	mov	w0, w10
    1c90:	blr	x8
    1c94:	cmp	w0, #0x1
    1c98:	str	w0, [sp, #4]
    1c9c:	b.eq	1cc4 <ctf_type_encoding+0x188>  // b.none
    1ca0:	b	1ca4 <ctf_type_encoding+0x168>
    1ca4:	ldr	w8, [sp, #4]
    1ca8:	cmp	w8, #0x2
    1cac:	b.eq	1d14 <ctf_type_encoding+0x1d8>  // b.none
    1cb0:	b	1cb4 <ctf_type_encoding+0x178>
    1cb4:	ldr	w8, [sp, #4]
    1cb8:	cmp	w8, #0xe
    1cbc:	b.eq	1d64 <ctf_type_encoding+0x228>  // b.none
    1cc0:	b	1dc0 <ctf_type_encoding+0x284>
    1cc4:	ldur	x8, [x29, #-56]
    1cc8:	ldr	x9, [sp, #64]
    1ccc:	add	x8, x8, x9
    1cd0:	ldr	w10, [x8]
    1cd4:	str	w10, [sp, #60]
    1cd8:	ldr	w10, [sp, #60]
    1cdc:	and	w10, w10, #0xff000000
    1ce0:	lsr	w10, w10, #24
    1ce4:	ldur	x8, [x29, #-32]
    1ce8:	str	w10, [x8]
    1cec:	ldr	w10, [sp, #60]
    1cf0:	and	w10, w10, #0xff0000
    1cf4:	lsr	w10, w10, #16
    1cf8:	ldur	x8, [x29, #-32]
    1cfc:	str	w10, [x8, #4]
    1d00:	ldr	w10, [sp, #60]
    1d04:	and	w10, w10, #0xffff
    1d08:	ldur	x8, [x29, #-32]
    1d0c:	str	w10, [x8, #8]
    1d10:	b	1dd4 <ctf_type_encoding+0x298>
    1d14:	ldur	x8, [x29, #-56]
    1d18:	ldr	x9, [sp, #64]
    1d1c:	add	x8, x8, x9
    1d20:	ldr	w10, [x8]
    1d24:	str	w10, [sp, #60]
    1d28:	ldr	w10, [sp, #60]
    1d2c:	and	w10, w10, #0xff000000
    1d30:	lsr	w10, w10, #24
    1d34:	ldur	x8, [x29, #-32]
    1d38:	str	w10, [x8]
    1d3c:	ldr	w10, [sp, #60]
    1d40:	and	w10, w10, #0xff0000
    1d44:	lsr	w10, w10, #16
    1d48:	ldur	x8, [x29, #-32]
    1d4c:	str	w10, [x8, #4]
    1d50:	ldr	w10, [sp, #60]
    1d54:	and	w10, w10, #0xffff
    1d58:	ldur	x8, [x29, #-32]
    1d5c:	str	w10, [x8, #8]
    1d60:	b	1dd4 <ctf_type_encoding+0x298>
    1d64:	ldur	x8, [x29, #-56]
    1d68:	ldr	x9, [sp, #64]
    1d6c:	add	x8, x8, x9
    1d70:	str	x8, [sp, #24]
    1d74:	ldur	x0, [x29, #-16]
    1d78:	ldr	x8, [sp, #24]
    1d7c:	ldr	w10, [x8]
    1d80:	mov	w1, w10
    1d84:	add	x2, sp, #0xc
    1d88:	bl	1b3c <ctf_type_encoding>
    1d8c:	str	w0, [sp, #60]
    1d90:	ldr	w10, [sp, #12]
    1d94:	ldur	x8, [x29, #-32]
    1d98:	str	w10, [x8]
    1d9c:	ldr	x8, [sp, #24]
    1da0:	ldrh	w10, [x8, #4]
    1da4:	ldur	x8, [x29, #-32]
    1da8:	str	w10, [x8, #4]
    1dac:	ldr	x8, [sp, #24]
    1db0:	ldrh	w10, [x8, #6]
    1db4:	ldur	x8, [x29, #-32]
    1db8:	str	w10, [x8, #8]
    1dbc:	b	1dd4 <ctf_type_encoding+0x298>
    1dc0:	ldur	x0, [x29, #-40]
    1dc4:	mov	w1, #0x3fe                 	// #1022
    1dc8:	bl	0 <ctf_set_errno>
    1dcc:	stur	w0, [x29, #-4]
    1dd0:	b	1dd8 <ctf_type_encoding+0x29c>
    1dd4:	stur	wzr, [x29, #-4]
    1dd8:	ldur	w0, [x29, #-4]
    1ddc:	ldp	x29, x30, [sp, #128]
    1de0:	add	sp, sp, #0x90
    1de4:	ret

0000000000001de8 <ctf_type_cmp>:
    1de8:	sub	sp, sp, #0x30
    1dec:	str	x0, [sp, #32]
    1df0:	str	x1, [sp, #24]
    1df4:	str	x2, [sp, #16]
    1df8:	str	x3, [sp, #8]
    1dfc:	ldr	x8, [sp, #24]
    1e00:	ldr	x9, [sp, #8]
    1e04:	cmp	x8, x9
    1e08:	b.cs	1e18 <ctf_type_cmp+0x30>  // b.hs, b.nlast
    1e0c:	mov	w8, #0xffffffff            	// #-1
    1e10:	str	w8, [sp, #4]
    1e14:	b	1e38 <ctf_type_cmp+0x50>
    1e18:	ldr	x8, [sp, #24]
    1e1c:	ldr	x9, [sp, #8]
    1e20:	cmp	x8, x9
    1e24:	b.ls	1e34 <ctf_type_cmp+0x4c>  // b.plast
    1e28:	mov	w8, #0x1                   	// #1
    1e2c:	str	w8, [sp, #4]
    1e30:	b	1e38 <ctf_type_cmp+0x50>
    1e34:	str	wzr, [sp, #4]
    1e38:	ldr	x8, [sp, #32]
    1e3c:	ldr	x9, [sp, #16]
    1e40:	cmp	x8, x9
    1e44:	b.ne	1e54 <ctf_type_cmp+0x6c>  // b.any
    1e48:	ldr	w8, [sp, #4]
    1e4c:	str	w8, [sp, #44]
    1e50:	b	1ef4 <ctf_type_cmp+0x10c>
    1e54:	ldr	x8, [sp, #24]
    1e58:	ldr	x9, [sp, #32]
    1e5c:	ldr	w10, [x9, #544]
    1e60:	mov	w9, w10
    1e64:	cmp	x8, x9
    1e68:	b.hi	1e84 <ctf_type_cmp+0x9c>  // b.pmore
    1e6c:	ldr	x8, [sp, #32]
    1e70:	ldr	x8, [x8, #512]
    1e74:	cbz	x8, 1e84 <ctf_type_cmp+0x9c>
    1e78:	ldr	x8, [sp, #32]
    1e7c:	ldr	x8, [x8, #512]
    1e80:	str	x8, [sp, #32]
    1e84:	ldr	x8, [sp, #8]
    1e88:	ldr	x9, [sp, #16]
    1e8c:	ldr	w10, [x9, #544]
    1e90:	mov	w9, w10
    1e94:	cmp	x8, x9
    1e98:	b.hi	1eb4 <ctf_type_cmp+0xcc>  // b.pmore
    1e9c:	ldr	x8, [sp, #16]
    1ea0:	ldr	x8, [x8, #512]
    1ea4:	cbz	x8, 1eb4 <ctf_type_cmp+0xcc>
    1ea8:	ldr	x8, [sp, #16]
    1eac:	ldr	x8, [x8, #512]
    1eb0:	str	x8, [sp, #16]
    1eb4:	ldr	x8, [sp, #32]
    1eb8:	ldr	x9, [sp, #16]
    1ebc:	cmp	x8, x9
    1ec0:	b.cs	1ed0 <ctf_type_cmp+0xe8>  // b.hs, b.nlast
    1ec4:	mov	w8, #0xffffffff            	// #-1
    1ec8:	str	w8, [sp, #44]
    1ecc:	b	1ef4 <ctf_type_cmp+0x10c>
    1ed0:	ldr	x8, [sp, #32]
    1ed4:	ldr	x9, [sp, #16]
    1ed8:	cmp	x8, x9
    1edc:	b.ls	1eec <ctf_type_cmp+0x104>  // b.plast
    1ee0:	mov	w8, #0x1                   	// #1
    1ee4:	str	w8, [sp, #44]
    1ee8:	b	1ef4 <ctf_type_cmp+0x10c>
    1eec:	ldr	w8, [sp, #4]
    1ef0:	str	w8, [sp, #44]
    1ef4:	ldr	w0, [sp, #44]
    1ef8:	add	sp, sp, #0x30
    1efc:	ret

0000000000001f00 <ctf_type_compat>:
    1f00:	sub	sp, sp, #0x130
    1f04:	stp	x29, x30, [sp, #272]
    1f08:	str	x28, [sp, #288]
    1f0c:	add	x29, sp, #0x110
    1f10:	sub	x8, x29, #0x18
    1f14:	str	x0, [x8, #8]
    1f18:	str	x1, [x8]
    1f1c:	stur	x2, [x29, #-32]
    1f20:	stur	x3, [x29, #-40]
    1f24:	str	wzr, [sp, #124]
    1f28:	ldr	x0, [x8, #8]
    1f2c:	ldr	x1, [x8]
    1f30:	ldur	x2, [x29, #-32]
    1f34:	ldur	x3, [x29, #-40]
    1f38:	str	x8, [sp, #104]
    1f3c:	bl	1de8 <ctf_type_cmp>
    1f40:	cbnz	w0, 1f50 <ctf_type_compat+0x50>
    1f44:	mov	w8, #0x1                   	// #1
    1f48:	stur	w8, [x29, #-4]
    1f4c:	b	2300 <ctf_type_compat+0x400>
    1f50:	sub	x0, x29, #0x10
    1f54:	ldr	x8, [sp, #104]
    1f58:	ldr	x9, [x8, #8]
    1f5c:	ldr	x1, [x8]
    1f60:	str	x0, [sp, #96]
    1f64:	mov	x0, x9
    1f68:	bl	320 <ctf_type_resolve>
    1f6c:	ldr	x8, [sp, #104]
    1f70:	str	x0, [x8]
    1f74:	ldr	x0, [x8, #8]
    1f78:	ldr	x1, [x8]
    1f7c:	bl	190c <ctf_type_kind>
    1f80:	str	w0, [sp, #132]
    1f84:	sub	x0, x29, #0x20
    1f88:	ldur	x8, [x29, #-32]
    1f8c:	ldur	x1, [x29, #-40]
    1f90:	str	x0, [sp, #88]
    1f94:	mov	x0, x8
    1f98:	bl	320 <ctf_type_resolve>
    1f9c:	stur	x0, [x29, #-40]
    1fa0:	ldur	x0, [x29, #-32]
    1fa4:	ldur	x1, [x29, #-40]
    1fa8:	bl	190c <ctf_type_kind>
    1fac:	str	w0, [sp, #128]
    1fb0:	ldr	x8, [sp, #104]
    1fb4:	ldr	x1, [x8]
    1fb8:	ldr	x0, [sp, #96]
    1fbc:	bl	0 <ctf_lookup_by_id>
    1fc0:	stur	x0, [x29, #-48]
    1fc4:	ldur	x1, [x29, #-40]
    1fc8:	ldr	x0, [sp, #88]
    1fcc:	bl	0 <ctf_lookup_by_id>
    1fd0:	stur	x0, [x29, #-56]
    1fd4:	ldur	x8, [x29, #-48]
    1fd8:	cbz	x8, 2034 <ctf_type_compat+0x134>
    1fdc:	ldur	x8, [x29, #-56]
    1fe0:	cbz	x8, 2034 <ctf_type_compat+0x134>
    1fe4:	ldr	x8, [sp, #104]
    1fe8:	ldr	x0, [x8, #8]
    1fec:	ldur	x9, [x29, #-48]
    1ff0:	ldr	w1, [x9]
    1ff4:	bl	0 <ctf_strptr>
    1ff8:	ldur	x8, [x29, #-32]
    1ffc:	ldur	x9, [x29, #-56]
    2000:	ldr	w1, [x9]
    2004:	str	x0, [sp, #80]
    2008:	mov	x0, x8
    200c:	bl	0 <ctf_strptr>
    2010:	ldr	x2, [sp, #80]
    2014:	str	x0, [sp, #72]
    2018:	mov	x0, x2
    201c:	ldr	x1, [sp, #72]
    2020:	bl	0 <strcmp>
    2024:	cmp	w0, #0x0
    2028:	cset	w10, eq  // eq = none
    202c:	and	w10, w10, #0x1
    2030:	str	w10, [sp, #124]
    2034:	ldr	w8, [sp, #132]
    2038:	cmp	w8, #0x8
    203c:	b.ne	204c <ctf_type_compat+0x14c>  // b.any
    2040:	ldr	w8, [sp, #128]
    2044:	cmp	w8, #0x1
    2048:	b.eq	2064 <ctf_type_compat+0x164>  // b.none
    204c:	ldr	w8, [sp, #128]
    2050:	cmp	w8, #0x8
    2054:	b.ne	2070 <ctf_type_compat+0x170>  // b.any
    2058:	ldr	w8, [sp, #132]
    205c:	cmp	w8, #0x1
    2060:	b.ne	2070 <ctf_type_compat+0x170>  // b.any
    2064:	mov	w8, #0x1                   	// #1
    2068:	stur	w8, [x29, #-4]
    206c:	b	2300 <ctf_type_compat+0x400>
    2070:	ldr	w8, [sp, #132]
    2074:	ldr	w9, [sp, #128]
    2078:	cmp	w8, w9
    207c:	b.eq	2088 <ctf_type_compat+0x188>  // b.none
    2080:	stur	wzr, [x29, #-4]
    2084:	b	2300 <ctf_type_compat+0x400>
    2088:	ldr	w8, [sp, #132]
    208c:	subs	w8, w8, #0x1
    2090:	mov	w9, w8
    2094:	ubfx	x9, x9, #0, #32
    2098:	cmp	x9, #0x8
    209c:	str	x9, [sp, #64]
    20a0:	b.hi	22fc <ctf_type_compat+0x3fc>  // b.pmore
    20a4:	adrp	x8, 0 <ctf_type_isparent>
    20a8:	add	x8, x8, #0x0
    20ac:	ldr	x11, [sp, #64]
    20b0:	ldrsw	x10, [x8, x11, lsl #2]
    20b4:	add	x9, x8, x10
    20b8:	br	x9
    20bc:	sub	x2, x29, #0x48
    20c0:	stur	xzr, [x29, #-72]
    20c4:	stur	wzr, [x29, #-64]
    20c8:	stur	xzr, [x29, #-88]
    20cc:	stur	wzr, [x29, #-80]
    20d0:	ldr	x8, [sp, #104]
    20d4:	ldr	x0, [x8, #8]
    20d8:	ldr	x1, [x8]
    20dc:	bl	1b3c <ctf_type_encoding>
    20e0:	mov	w9, #0x0                   	// #0
    20e4:	str	w9, [sp, #60]
    20e8:	cbnz	w0, 2124 <ctf_type_compat+0x224>
    20ec:	ldur	x0, [x29, #-32]
    20f0:	ldur	x1, [x29, #-40]
    20f4:	sub	x2, x29, #0x58
    20f8:	bl	1b3c <ctf_type_encoding>
    20fc:	mov	w8, #0x0                   	// #0
    2100:	str	w8, [sp, #60]
    2104:	cbnz	w0, 2124 <ctf_type_compat+0x224>
    2108:	sub	x0, x29, #0x48
    210c:	sub	x1, x29, #0x58
    2110:	mov	x2, #0xc                   	// #12
    2114:	bl	0 <memcmp>
    2118:	cmp	w0, #0x0
    211c:	cset	w8, eq  // eq = none
    2120:	str	w8, [sp, #60]
    2124:	ldr	w8, [sp, #60]
    2128:	and	w8, w8, #0x1
    212c:	stur	w8, [x29, #-4]
    2130:	b	2300 <ctf_type_compat+0x400>
    2134:	ldr	x8, [sp, #104]
    2138:	ldr	x0, [x8, #8]
    213c:	ldr	x9, [x8, #8]
    2140:	ldr	x1, [x8]
    2144:	str	x0, [sp, #48]
    2148:	mov	x0, x9
    214c:	bl	bcc <ctf_type_reference>
    2150:	ldur	x2, [x29, #-32]
    2154:	ldur	x8, [x29, #-32]
    2158:	ldur	x1, [x29, #-40]
    215c:	str	x0, [sp, #40]
    2160:	mov	x0, x8
    2164:	str	x2, [sp, #32]
    2168:	bl	bcc <ctf_type_reference>
    216c:	ldr	x8, [sp, #48]
    2170:	str	x0, [sp, #24]
    2174:	mov	x0, x8
    2178:	ldr	x1, [sp, #40]
    217c:	ldr	x2, [sp, #32]
    2180:	ldr	x3, [sp, #24]
    2184:	bl	1f00 <ctf_type_compat>
    2188:	stur	w0, [x29, #-4]
    218c:	b	2300 <ctf_type_compat+0x400>
    2190:	ldr	x8, [sp, #104]
    2194:	ldr	x0, [x8, #8]
    2198:	ldr	x1, [x8]
    219c:	sub	x2, x29, #0x70
    21a0:	bl	1438 <ctf_array_info>
    21a4:	mov	w9, #0x0                   	// #0
    21a8:	str	w9, [sp, #20]
    21ac:	cbnz	w0, 222c <ctf_type_compat+0x32c>
    21b0:	ldur	x0, [x29, #-32]
    21b4:	ldur	x1, [x29, #-40]
    21b8:	add	x2, sp, #0x88
    21bc:	bl	1438 <ctf_array_info>
    21c0:	mov	w8, #0x0                   	// #0
    21c4:	str	w8, [sp, #20]
    21c8:	cbnz	w0, 222c <ctf_type_compat+0x32c>
    21cc:	ldur	w8, [x29, #-96]
    21d0:	ldr	w9, [sp, #152]
    21d4:	mov	w10, #0x0                   	// #0
    21d8:	cmp	w8, w9
    21dc:	str	w10, [sp, #20]
    21e0:	b.ne	222c <ctf_type_compat+0x32c>  // b.any
    21e4:	ldr	x8, [sp, #104]
    21e8:	ldr	x0, [x8, #8]
    21ec:	ldur	x1, [x29, #-112]
    21f0:	ldur	x2, [x29, #-32]
    21f4:	ldr	x3, [sp, #136]
    21f8:	bl	1f00 <ctf_type_compat>
    21fc:	mov	w9, #0x0                   	// #0
    2200:	str	w9, [sp, #20]
    2204:	cbz	w0, 222c <ctf_type_compat+0x32c>
    2208:	ldr	x8, [sp, #104]
    220c:	ldr	x0, [x8, #8]
    2210:	ldur	x1, [x29, #-104]
    2214:	ldur	x2, [x29, #-32]
    2218:	ldr	x3, [sp, #144]
    221c:	bl	1f00 <ctf_type_compat>
    2220:	cmp	w0, #0x0
    2224:	cset	w9, ne  // ne = any
    2228:	str	w9, [sp, #20]
    222c:	ldr	w8, [sp, #20]
    2230:	and	w8, w8, #0x1
    2234:	stur	w8, [x29, #-4]
    2238:	b	2300 <ctf_type_compat+0x400>
    223c:	ldr	w8, [sp, #124]
    2240:	mov	w9, #0x0                   	// #0
    2244:	str	w9, [sp, #16]
    2248:	cbz	w8, 2280 <ctf_type_compat+0x380>
    224c:	ldr	x8, [sp, #104]
    2250:	ldr	x0, [x8, #8]
    2254:	ldr	x1, [x8]
    2258:	bl	12a0 <ctf_type_size>
    225c:	ldur	x8, [x29, #-32]
    2260:	ldur	x1, [x29, #-40]
    2264:	str	x0, [sp, #8]
    2268:	mov	x0, x8
    226c:	bl	12a0 <ctf_type_size>
    2270:	ldr	x8, [sp, #8]
    2274:	cmp	x8, x0
    2278:	cset	w9, eq  // eq = none
    227c:	str	w9, [sp, #16]
    2280:	ldr	w8, [sp, #16]
    2284:	and	w8, w8, #0x1
    2288:	stur	w8, [x29, #-4]
    228c:	b	2300 <ctf_type_compat+0x400>
    2290:	ldr	x8, [sp, #104]
    2294:	ldr	x0, [x8, #8]
    2298:	ldr	x1, [x8]
    229c:	sub	x2, x29, #0x48
    22a0:	bl	1b3c <ctf_type_encoding>
    22a4:	str	w0, [sp, #120]
    22a8:	ldur	x0, [x29, #-32]
    22ac:	ldur	x1, [x29, #-40]
    22b0:	sub	x2, x29, #0x58
    22b4:	bl	1b3c <ctf_type_encoding>
    22b8:	str	w0, [sp, #116]
    22bc:	ldr	w9, [sp, #120]
    22c0:	ldr	w10, [sp, #116]
    22c4:	cmp	w9, w10
    22c8:	b.ne	22e8 <ctf_type_compat+0x3e8>  // b.any
    22cc:	ldr	w8, [sp, #120]
    22d0:	cbnz	w8, 22f0 <ctf_type_compat+0x3f0>
    22d4:	sub	x0, x29, #0x48
    22d8:	sub	x1, x29, #0x58
    22dc:	mov	x2, #0xc                   	// #12
    22e0:	bl	0 <memcmp>
    22e4:	cbz	w0, 22f0 <ctf_type_compat+0x3f0>
    22e8:	stur	wzr, [x29, #-4]
    22ec:	b	2300 <ctf_type_compat+0x400>
    22f0:	ldr	w8, [sp, #124]
    22f4:	stur	w8, [x29, #-4]
    22f8:	b	2300 <ctf_type_compat+0x400>
    22fc:	stur	wzr, [x29, #-4]
    2300:	ldur	w0, [x29, #-4]
    2304:	ldr	x28, [sp, #288]
    2308:	ldp	x29, x30, [sp, #272]
    230c:	add	sp, sp, #0x130
    2310:	ret

0000000000002314 <ctf_member_info>:
    2314:	sub	sp, sp, #0x90
    2318:	stp	x29, x30, [sp, #128]
    231c:	add	x29, sp, #0x80
    2320:	mov	x8, #0xffffffffffffffff    	// #-1
    2324:	stur	x0, [x29, #-16]
    2328:	stur	x1, [x29, #-24]
    232c:	stur	x2, [x29, #-32]
    2330:	stur	x3, [x29, #-40]
    2334:	ldur	x9, [x29, #-16]
    2338:	stur	x9, [x29, #-48]
    233c:	ldur	x0, [x29, #-16]
    2340:	ldur	x1, [x29, #-24]
    2344:	str	x8, [sp, #8]
    2348:	bl	320 <ctf_type_resolve>
    234c:	stur	x0, [x29, #-24]
    2350:	ldr	x8, [sp, #8]
    2354:	cmp	x0, x8
    2358:	b.ne	2368 <ctf_member_info+0x54>  // b.any
    235c:	mov	w8, #0xffffffff            	// #-1
    2360:	stur	w8, [x29, #-4]
    2364:	b	25cc <ctf_member_info+0x2b8>
    2368:	ldur	x1, [x29, #-24]
    236c:	sub	x0, x29, #0x10
    2370:	bl	0 <ctf_lookup_by_id>
    2374:	stur	x0, [x29, #-56]
    2378:	cbnz	x0, 2388 <ctf_member_info+0x74>
    237c:	mov	w8, #0xffffffff            	// #-1
    2380:	stur	w8, [x29, #-4]
    2384:	b	25cc <ctf_member_info+0x2b8>
    2388:	ldur	x0, [x29, #-16]
    238c:	ldur	x1, [x29, #-56]
    2390:	add	x2, sp, #0x38
    2394:	add	x3, sp, #0x30
    2398:	bl	478 <ctf_get_ctt_size>
    239c:	ldur	x8, [x29, #-16]
    23a0:	ldr	x8, [x8]
    23a4:	ldr	x8, [x8]
    23a8:	ldur	x9, [x29, #-56]
    23ac:	ldr	w10, [x9, #4]
    23b0:	mov	w0, w10
    23b4:	blr	x8
    23b8:	str	w0, [sp, #44]
    23bc:	ldr	w10, [sp, #44]
    23c0:	cmp	w10, #0x6
    23c4:	b.eq	23e8 <ctf_member_info+0xd4>  // b.none
    23c8:	ldr	w8, [sp, #44]
    23cc:	cmp	w8, #0x7
    23d0:	b.eq	23e8 <ctf_member_info+0xd4>  // b.none
    23d4:	ldur	x0, [x29, #-48]
    23d8:	mov	w1, #0x3fb                 	// #1019
    23dc:	bl	0 <ctf_set_errno>
    23e0:	stur	w0, [x29, #-4]
    23e4:	b	25cc <ctf_member_info+0x2b8>
    23e8:	ldur	x0, [x29, #-16]
    23ec:	ldur	x1, [x29, #-24]
    23f0:	bl	0 <ctf_dynamic_type>
    23f4:	str	x0, [sp, #64]
    23f8:	cbnz	x0, 255c <ctf_member_info+0x248>
    23fc:	ldr	x8, [sp, #56]
    2400:	mov	x9, #0x20000000            	// #536870912
    2404:	cmp	x8, x9
    2408:	b.ge	24ac <ctf_member_info+0x198>  // b.tcont
    240c:	ldur	x8, [x29, #-56]
    2410:	ldr	x9, [sp, #48]
    2414:	add	x8, x8, x9
    2418:	str	x8, [sp, #32]
    241c:	ldur	x8, [x29, #-16]
    2420:	ldr	x8, [x8]
    2424:	ldr	x8, [x8, #16]
    2428:	ldur	x9, [x29, #-56]
    242c:	ldr	w0, [x9, #4]
    2430:	blr	x8
    2434:	str	w0, [sp, #40]
    2438:	ldr	w8, [sp, #40]
    243c:	cbz	w8, 24a8 <ctf_member_info+0x194>
    2440:	ldur	x0, [x29, #-16]
    2444:	ldr	x8, [sp, #32]
    2448:	ldr	w1, [x8]
    244c:	bl	0 <ctf_strptr>
    2450:	ldur	x1, [x29, #-32]
    2454:	bl	0 <strcmp>
    2458:	cbnz	w0, 248c <ctf_member_info+0x178>
    245c:	ldr	x8, [sp, #32]
    2460:	ldr	w9, [x8, #8]
    2464:	mov	w8, w9
    2468:	ldur	x10, [x29, #-40]
    246c:	str	x8, [x10]
    2470:	ldr	x8, [sp, #32]
    2474:	ldr	w9, [x8, #4]
    2478:	mov	w8, w9
    247c:	ldur	x10, [x29, #-40]
    2480:	str	x8, [x10, #8]
    2484:	stur	wzr, [x29, #-4]
    2488:	b	25cc <ctf_member_info+0x2b8>
    248c:	ldr	w8, [sp, #40]
    2490:	subs	w8, w8, #0x1
    2494:	str	w8, [sp, #40]
    2498:	ldr	x9, [sp, #32]
    249c:	add	x9, x9, #0xc
    24a0:	str	x9, [sp, #32]
    24a4:	b	2438 <ctf_member_info+0x124>
    24a8:	b	2558 <ctf_member_info+0x244>
    24ac:	ldur	x8, [x29, #-56]
    24b0:	ldr	x9, [sp, #48]
    24b4:	add	x8, x8, x9
    24b8:	str	x8, [sp, #24]
    24bc:	ldur	x8, [x29, #-16]
    24c0:	ldr	x8, [x8]
    24c4:	ldr	x8, [x8, #16]
    24c8:	ldur	x9, [x29, #-56]
    24cc:	ldr	w0, [x9, #4]
    24d0:	blr	x8
    24d4:	str	w0, [sp, #40]
    24d8:	ldr	w8, [sp, #40]
    24dc:	cbz	w8, 2558 <ctf_member_info+0x244>
    24e0:	ldur	x0, [x29, #-16]
    24e4:	ldr	x8, [sp, #24]
    24e8:	ldr	w1, [x8]
    24ec:	bl	0 <ctf_strptr>
    24f0:	ldur	x1, [x29, #-32]
    24f4:	bl	0 <strcmp>
    24f8:	cbnz	w0, 253c <ctf_member_info+0x228>
    24fc:	ldr	x8, [sp, #24]
    2500:	ldr	w9, [x8, #8]
    2504:	mov	w8, w9
    2508:	ldur	x10, [x29, #-40]
    250c:	str	x8, [x10]
    2510:	ldr	x8, [sp, #24]
    2514:	ldr	w9, [x8, #4]
    2518:	mov	w8, w9
    251c:	ldr	x10, [sp, #24]
    2520:	ldr	w9, [x10, #12]
    2524:	mov	w10, w9
    2528:	orr	x8, x10, x8, lsl #32
    252c:	ldur	x10, [x29, #-40]
    2530:	str	x8, [x10, #8]
    2534:	stur	wzr, [x29, #-4]
    2538:	b	25cc <ctf_member_info+0x2b8>
    253c:	ldr	w8, [sp, #40]
    2540:	subs	w8, w8, #0x1
    2544:	str	w8, [sp, #40]
    2548:	ldr	x9, [sp, #24]
    254c:	add	x9, x9, #0x10
    2550:	str	x9, [sp, #24]
    2554:	b	24d8 <ctf_member_info+0x1c4>
    2558:	b	25bc <ctf_member_info+0x2a8>
    255c:	ldr	x8, [sp, #64]
    2560:	ldr	x8, [x8, #56]
    2564:	str	x8, [sp, #16]
    2568:	ldr	x8, [sp, #16]
    256c:	cbz	x8, 25bc <ctf_member_info+0x2a8>
    2570:	ldr	x8, [sp, #16]
    2574:	ldr	x0, [x8, #16]
    2578:	ldur	x1, [x29, #-32]
    257c:	bl	0 <strcmp>
    2580:	cbnz	w0, 25ac <ctf_member_info+0x298>
    2584:	ldr	x8, [sp, #16]
    2588:	ldr	x8, [x8, #24]
    258c:	ldur	x9, [x29, #-40]
    2590:	str	x8, [x9]
    2594:	ldr	x8, [sp, #16]
    2598:	ldr	x8, [x8, #32]
    259c:	ldur	x9, [x29, #-40]
    25a0:	str	x8, [x9, #8]
    25a4:	stur	wzr, [x29, #-4]
    25a8:	b	25cc <ctf_member_info+0x2b8>
    25ac:	ldr	x8, [sp, #16]
    25b0:	ldr	x8, [x8, #8]
    25b4:	str	x8, [sp, #16]
    25b8:	b	2568 <ctf_member_info+0x254>
    25bc:	ldur	x0, [x29, #-48]
    25c0:	mov	w1, #0x40c                 	// #1036
    25c4:	bl	0 <ctf_set_errno>
    25c8:	stur	w0, [x29, #-4]
    25cc:	ldur	w0, [x29, #-4]
    25d0:	ldp	x29, x30, [sp, #128]
    25d4:	add	sp, sp, #0x90
    25d8:	ret

00000000000025dc <ctf_enum_name>:
    25dc:	sub	sp, sp, #0x70
    25e0:	stp	x29, x30, [sp, #96]
    25e4:	add	x29, sp, #0x60
    25e8:	mov	x8, #0xffffffffffffffff    	// #-1
    25ec:	stur	x0, [x29, #-16]
    25f0:	stur	x1, [x29, #-24]
    25f4:	stur	w2, [x29, #-28]
    25f8:	ldur	x9, [x29, #-16]
    25fc:	stur	x9, [x29, #-40]
    2600:	ldur	x0, [x29, #-16]
    2604:	ldur	x1, [x29, #-24]
    2608:	str	x8, [sp]
    260c:	bl	694 <ctf_type_resolve_unsliced>
    2610:	stur	x0, [x29, #-24]
    2614:	ldr	x8, [sp]
    2618:	cmp	x0, x8
    261c:	b.ne	262c <ctf_enum_name+0x50>  // b.any
    2620:	mov	x8, xzr
    2624:	stur	x8, [x29, #-8]
    2628:	b	2790 <ctf_enum_name+0x1b4>
    262c:	ldur	x1, [x29, #-24]
    2630:	sub	x0, x29, #0x10
    2634:	bl	0 <ctf_lookup_by_id>
    2638:	str	x0, [sp, #48]
    263c:	cbnz	x0, 264c <ctf_enum_name+0x70>
    2640:	mov	x8, xzr
    2644:	stur	x8, [x29, #-8]
    2648:	b	2790 <ctf_enum_name+0x1b4>
    264c:	ldur	x8, [x29, #-16]
    2650:	ldr	x8, [x8]
    2654:	ldr	x8, [x8]
    2658:	ldr	x9, [sp, #48]
    265c:	ldr	w0, [x9, #4]
    2660:	blr	x8
    2664:	cmp	w0, #0x8
    2668:	b.eq	2684 <ctf_enum_name+0xa8>  // b.none
    266c:	ldur	x0, [x29, #-40]
    2670:	mov	w1, #0x3fc                 	// #1020
    2674:	bl	0 <ctf_set_errno>
    2678:	mov	x8, xzr
    267c:	stur	x8, [x29, #-8]
    2680:	b	2790 <ctf_enum_name+0x1b4>
    2684:	ldur	x0, [x29, #-16]
    2688:	ldr	x1, [sp, #48]
    268c:	mov	x8, xzr
    2690:	mov	x2, x8
    2694:	add	x3, sp, #0x18
    2698:	bl	478 <ctf_get_ctt_size>
    269c:	ldur	x8, [x29, #-40]
    26a0:	ldur	x1, [x29, #-24]
    26a4:	mov	x0, x8
    26a8:	bl	0 <ctf_dynamic_type>
    26ac:	str	x0, [sp, #32]
    26b0:	cbnz	x0, 2734 <ctf_enum_name+0x158>
    26b4:	ldr	x8, [sp, #48]
    26b8:	ldr	x9, [sp, #24]
    26bc:	add	x8, x8, x9
    26c0:	str	x8, [sp, #40]
    26c4:	ldur	x8, [x29, #-16]
    26c8:	ldr	x8, [x8]
    26cc:	ldr	x8, [x8, #16]
    26d0:	ldr	x9, [sp, #48]
    26d4:	ldr	w0, [x9, #4]
    26d8:	blr	x8
    26dc:	str	w0, [sp, #20]
    26e0:	ldr	w8, [sp, #20]
    26e4:	cbz	w8, 2730 <ctf_enum_name+0x154>
    26e8:	ldr	x8, [sp, #40]
    26ec:	ldr	w9, [x8, #4]
    26f0:	ldur	w10, [x29, #-28]
    26f4:	cmp	w9, w10
    26f8:	b.ne	2714 <ctf_enum_name+0x138>  // b.any
    26fc:	ldur	x0, [x29, #-16]
    2700:	ldr	x8, [sp, #40]
    2704:	ldr	w1, [x8]
    2708:	bl	0 <ctf_strptr>
    270c:	stur	x0, [x29, #-8]
    2710:	b	2790 <ctf_enum_name+0x1b4>
    2714:	ldr	w8, [sp, #20]
    2718:	subs	w8, w8, #0x1
    271c:	str	w8, [sp, #20]
    2720:	ldr	x9, [sp, #40]
    2724:	add	x9, x9, #0x8
    2728:	str	x9, [sp, #40]
    272c:	b	26e0 <ctf_enum_name+0x104>
    2730:	b	277c <ctf_enum_name+0x1a0>
    2734:	ldr	x8, [sp, #32]
    2738:	ldr	x8, [x8, #56]
    273c:	str	x8, [sp, #8]
    2740:	ldr	x8, [sp, #8]
    2744:	cbz	x8, 277c <ctf_enum_name+0x1a0>
    2748:	ldr	x8, [sp, #8]
    274c:	ldr	w9, [x8, #40]
    2750:	ldur	w10, [x29, #-28]
    2754:	cmp	w9, w10
    2758:	b.ne	276c <ctf_enum_name+0x190>  // b.any
    275c:	ldr	x8, [sp, #8]
    2760:	ldr	x8, [x8, #16]
    2764:	stur	x8, [x29, #-8]
    2768:	b	2790 <ctf_enum_name+0x1b4>
    276c:	ldr	x8, [sp, #8]
    2770:	ldr	x8, [x8, #8]
    2774:	str	x8, [sp, #8]
    2778:	b	2740 <ctf_enum_name+0x164>
    277c:	ldur	x0, [x29, #-40]
    2780:	mov	w1, #0x40b                 	// #1035
    2784:	bl	0 <ctf_set_errno>
    2788:	mov	x8, xzr
    278c:	stur	x8, [x29, #-8]
    2790:	ldur	x0, [x29, #-8]
    2794:	ldp	x29, x30, [sp, #96]
    2798:	add	sp, sp, #0x70
    279c:	ret

00000000000027a0 <ctf_enum_value>:
    27a0:	sub	sp, sp, #0x80
    27a4:	stp	x29, x30, [sp, #112]
    27a8:	add	x29, sp, #0x70
    27ac:	mov	x8, #0xffffffffffffffff    	// #-1
    27b0:	stur	x0, [x29, #-16]
    27b4:	stur	x1, [x29, #-24]
    27b8:	stur	x2, [x29, #-32]
    27bc:	stur	x3, [x29, #-40]
    27c0:	ldur	x9, [x29, #-16]
    27c4:	stur	x9, [x29, #-48]
    27c8:	ldur	x0, [x29, #-16]
    27cc:	ldur	x1, [x29, #-24]
    27d0:	str	x8, [sp, #8]
    27d4:	bl	694 <ctf_type_resolve_unsliced>
    27d8:	stur	x0, [x29, #-24]
    27dc:	ldr	x8, [sp, #8]
    27e0:	cmp	x0, x8
    27e4:	b.ne	27f4 <ctf_enum_value+0x54>  // b.any
    27e8:	mov	w8, #0xffffffff            	// #-1
    27ec:	stur	w8, [x29, #-4]
    27f0:	b	2978 <ctf_enum_value+0x1d8>
    27f4:	ldur	x1, [x29, #-24]
    27f8:	sub	x0, x29, #0x10
    27fc:	bl	0 <ctf_lookup_by_id>
    2800:	str	x0, [sp, #56]
    2804:	cbnz	x0, 2814 <ctf_enum_value+0x74>
    2808:	mov	w8, #0xffffffff            	// #-1
    280c:	stur	w8, [x29, #-4]
    2810:	b	2978 <ctf_enum_value+0x1d8>
    2814:	ldur	x8, [x29, #-16]
    2818:	ldr	x8, [x8]
    281c:	ldr	x8, [x8]
    2820:	ldr	x9, [sp, #56]
    2824:	ldr	w0, [x9, #4]
    2828:	blr	x8
    282c:	cmp	w0, #0x8
    2830:	b.eq	284c <ctf_enum_value+0xac>  // b.none
    2834:	ldur	x0, [x29, #-48]
    2838:	mov	w1, #0x3fc                 	// #1020
    283c:	bl	0 <ctf_set_errno>
    2840:	mov	w8, #0xffffffff            	// #-1
    2844:	stur	w8, [x29, #-4]
    2848:	b	2978 <ctf_enum_value+0x1d8>
    284c:	ldur	x0, [x29, #-16]
    2850:	ldr	x1, [sp, #56]
    2854:	mov	x8, xzr
    2858:	mov	x2, x8
    285c:	add	x3, sp, #0x20
    2860:	bl	478 <ctf_get_ctt_size>
    2864:	ldr	x8, [sp, #56]
    2868:	ldr	x9, [sp, #32]
    286c:	add	x8, x8, x9
    2870:	str	x8, [sp, #48]
    2874:	ldur	x8, [x29, #-48]
    2878:	ldur	x1, [x29, #-24]
    287c:	mov	x0, x8
    2880:	bl	0 <ctf_dynamic_type>
    2884:	str	x0, [sp, #40]
    2888:	cbnz	x0, 290c <ctf_enum_value+0x16c>
    288c:	ldur	x8, [x29, #-16]
    2890:	ldr	x8, [x8]
    2894:	ldr	x8, [x8, #16]
    2898:	ldr	x9, [sp, #56]
    289c:	ldr	w0, [x9, #4]
    28a0:	blr	x8
    28a4:	str	w0, [sp, #28]
    28a8:	ldr	w8, [sp, #28]
    28ac:	cbz	w8, 2908 <ctf_enum_value+0x168>
    28b0:	ldur	x0, [x29, #-16]
    28b4:	ldr	x8, [sp, #48]
    28b8:	ldr	w1, [x8]
    28bc:	bl	0 <ctf_strptr>
    28c0:	ldur	x1, [x29, #-32]
    28c4:	bl	0 <strcmp>
    28c8:	cbnz	w0, 28ec <ctf_enum_value+0x14c>
    28cc:	ldur	x8, [x29, #-40]
    28d0:	cbz	x8, 28e4 <ctf_enum_value+0x144>
    28d4:	ldr	x8, [sp, #48]
    28d8:	ldr	w9, [x8, #4]
    28dc:	ldur	x8, [x29, #-40]
    28e0:	str	w9, [x8]
    28e4:	stur	wzr, [x29, #-4]
    28e8:	b	2978 <ctf_enum_value+0x1d8>
    28ec:	ldr	w8, [sp, #28]
    28f0:	subs	w8, w8, #0x1
    28f4:	str	w8, [sp, #28]
    28f8:	ldr	x9, [sp, #48]
    28fc:	add	x9, x9, #0x8
    2900:	str	x9, [sp, #48]
    2904:	b	28a8 <ctf_enum_value+0x108>
    2908:	b	2964 <ctf_enum_value+0x1c4>
    290c:	ldr	x8, [sp, #40]
    2910:	ldr	x8, [x8, #56]
    2914:	str	x8, [sp, #16]
    2918:	ldr	x8, [sp, #16]
    291c:	cbz	x8, 2964 <ctf_enum_value+0x1c4>
    2920:	ldr	x8, [sp, #16]
    2924:	ldr	x0, [x8, #16]
    2928:	ldur	x1, [x29, #-32]
    292c:	bl	0 <strcmp>
    2930:	cbnz	w0, 2954 <ctf_enum_value+0x1b4>
    2934:	ldur	x8, [x29, #-40]
    2938:	cbz	x8, 294c <ctf_enum_value+0x1ac>
    293c:	ldr	x8, [sp, #16]
    2940:	ldr	w9, [x8, #40]
    2944:	ldur	x8, [x29, #-40]
    2948:	str	w9, [x8]
    294c:	stur	wzr, [x29, #-4]
    2950:	b	2978 <ctf_enum_value+0x1d8>
    2954:	ldr	x8, [sp, #16]
    2958:	ldr	x8, [x8, #8]
    295c:	str	x8, [sp, #16]
    2960:	b	2918 <ctf_enum_value+0x178>
    2964:	ldur	x0, [x29, #-48]
    2968:	mov	w1, #0x40b                 	// #1035
    296c:	bl	0 <ctf_set_errno>
    2970:	mov	w8, #0xffffffff            	// #-1
    2974:	stur	w8, [x29, #-4]
    2978:	ldur	w0, [x29, #-4]
    297c:	ldp	x29, x30, [sp, #112]
    2980:	add	sp, sp, #0x80
    2984:	ret

0000000000002988 <ctf_func_type_info>:
    2988:	sub	sp, sp, #0x70
    298c:	stp	x29, x30, [sp, #96]
    2990:	add	x29, sp, #0x60
    2994:	mov	x8, #0xffffffffffffffff    	// #-1
    2998:	stur	x0, [x29, #-16]
    299c:	stur	x1, [x29, #-24]
    29a0:	stur	x2, [x29, #-32]
    29a4:	ldur	x0, [x29, #-16]
    29a8:	ldur	x1, [x29, #-24]
    29ac:	str	x8, [sp, #8]
    29b0:	bl	320 <ctf_type_resolve>
    29b4:	stur	x0, [x29, #-24]
    29b8:	ldr	x8, [sp, #8]
    29bc:	cmp	x0, x8
    29c0:	b.ne	29d0 <ctf_func_type_info+0x48>  // b.any
    29c4:	mov	w8, #0xffffffff            	// #-1
    29c8:	stur	w8, [x29, #-4]
    29cc:	b	2afc <ctf_func_type_info+0x174>
    29d0:	ldur	x1, [x29, #-24]
    29d4:	sub	x0, x29, #0x10
    29d8:	bl	0 <ctf_lookup_by_id>
    29dc:	stur	x0, [x29, #-40]
    29e0:	cbnz	x0, 29f0 <ctf_func_type_info+0x68>
    29e4:	mov	w8, #0xffffffff            	// #-1
    29e8:	stur	w8, [x29, #-4]
    29ec:	b	2afc <ctf_func_type_info+0x174>
    29f0:	ldur	x0, [x29, #-16]
    29f4:	ldur	x1, [x29, #-40]
    29f8:	add	x2, sp, #0x18
    29fc:	add	x3, sp, #0x10
    2a00:	bl	478 <ctf_get_ctt_size>
    2a04:	ldur	x8, [x29, #-16]
    2a08:	ldr	x8, [x8]
    2a0c:	ldr	x8, [x8]
    2a10:	ldur	x9, [x29, #-40]
    2a14:	ldr	w10, [x9, #4]
    2a18:	mov	w0, w10
    2a1c:	blr	x8
    2a20:	stur	w0, [x29, #-44]
    2a24:	ldur	w10, [x29, #-44]
    2a28:	cmp	w10, #0x5
    2a2c:	b.eq	2a44 <ctf_func_type_info+0xbc>  // b.none
    2a30:	ldur	x0, [x29, #-16]
    2a34:	mov	w1, #0x404                 	// #1028
    2a38:	bl	0 <ctf_set_errno>
    2a3c:	stur	w0, [x29, #-4]
    2a40:	b	2afc <ctf_func_type_info+0x174>
    2a44:	ldur	x8, [x29, #-40]
    2a48:	ldr	w9, [x8, #8]
    2a4c:	mov	w8, w9
    2a50:	ldur	x10, [x29, #-32]
    2a54:	str	x8, [x10]
    2a58:	ldur	x8, [x29, #-32]
    2a5c:	str	wzr, [x8, #12]
    2a60:	ldur	x8, [x29, #-16]
    2a64:	ldr	x8, [x8]
    2a68:	ldr	x8, [x8, #16]
    2a6c:	ldur	x10, [x29, #-40]
    2a70:	ldr	w0, [x10, #4]
    2a74:	blr	x8
    2a78:	ldur	x8, [x29, #-32]
    2a7c:	str	w0, [x8, #8]
    2a80:	ldur	x0, [x29, #-16]
    2a84:	ldur	x1, [x29, #-24]
    2a88:	bl	0 <ctf_dynamic_type>
    2a8c:	str	x0, [sp, #32]
    2a90:	cbnz	x0, 2aa8 <ctf_func_type_info+0x120>
    2a94:	ldur	x8, [x29, #-40]
    2a98:	ldr	x9, [sp, #16]
    2a9c:	add	x8, x8, x9
    2aa0:	str	x8, [sp, #40]
    2aa4:	b	2ab4 <ctf_func_type_info+0x12c>
    2aa8:	ldr	x8, [sp, #32]
    2aac:	ldr	x8, [x8, #48]
    2ab0:	str	x8, [sp, #40]
    2ab4:	ldur	x8, [x29, #-32]
    2ab8:	ldr	w9, [x8, #8]
    2abc:	cbz	w9, 2af8 <ctf_func_type_info+0x170>
    2ac0:	ldr	x8, [sp, #40]
    2ac4:	ldur	x9, [x29, #-32]
    2ac8:	ldr	w10, [x9, #8]
    2acc:	subs	w10, w10, #0x1
    2ad0:	ldr	w10, [x8, w10, uxtw #2]
    2ad4:	cbnz	w10, 2af8 <ctf_func_type_info+0x170>
    2ad8:	ldur	x8, [x29, #-32]
    2adc:	ldr	w9, [x8, #12]
    2ae0:	orr	w9, w9, #0x1
    2ae4:	str	w9, [x8, #12]
    2ae8:	ldur	x8, [x29, #-32]
    2aec:	ldr	w9, [x8, #8]
    2af0:	subs	w9, w9, #0x1
    2af4:	str	w9, [x8, #8]
    2af8:	stur	wzr, [x29, #-4]
    2afc:	ldur	w0, [x29, #-4]
    2b00:	ldp	x29, x30, [sp, #96]
    2b04:	add	sp, sp, #0x70
    2b08:	ret

0000000000002b0c <ctf_func_type_args>:
    2b0c:	sub	sp, sp, #0x80
    2b10:	stp	x29, x30, [sp, #112]
    2b14:	add	x29, sp, #0x70
    2b18:	add	x8, sp, #0x10
    2b1c:	stur	x0, [x29, #-16]
    2b20:	stur	x1, [x29, #-24]
    2b24:	stur	w2, [x29, #-28]
    2b28:	stur	x3, [x29, #-40]
    2b2c:	ldur	x0, [x29, #-16]
    2b30:	ldur	x1, [x29, #-24]
    2b34:	mov	x2, x8
    2b38:	bl	2988 <ctf_func_type_info>
    2b3c:	cmp	w0, #0x0
    2b40:	cset	w9, ge  // ge = tcont
    2b44:	tbnz	w9, #0, 2b54 <ctf_func_type_args+0x48>
    2b48:	mov	w8, #0xffffffff            	// #-1
    2b4c:	stur	w8, [x29, #-4]
    2b50:	b	2c54 <ctf_func_type_args+0x148>
    2b54:	ldur	x0, [x29, #-16]
    2b58:	ldur	x1, [x29, #-24]
    2b5c:	bl	320 <ctf_type_resolve>
    2b60:	stur	x0, [x29, #-24]
    2b64:	mov	x8, #0xffffffffffffffff    	// #-1
    2b68:	cmp	x0, x8
    2b6c:	b.ne	2b7c <ctf_func_type_args+0x70>  // b.any
    2b70:	mov	w8, #0xffffffff            	// #-1
    2b74:	stur	w8, [x29, #-4]
    2b78:	b	2c54 <ctf_func_type_args+0x148>
    2b7c:	ldur	x1, [x29, #-24]
    2b80:	sub	x0, x29, #0x10
    2b84:	bl	0 <ctf_lookup_by_id>
    2b88:	stur	x0, [x29, #-48]
    2b8c:	cbnz	x0, 2b9c <ctf_func_type_args+0x90>
    2b90:	mov	w8, #0xffffffff            	// #-1
    2b94:	stur	w8, [x29, #-4]
    2b98:	b	2c54 <ctf_func_type_args+0x148>
    2b9c:	ldur	x0, [x29, #-16]
    2ba0:	ldur	x1, [x29, #-48]
    2ba4:	add	x2, sp, #0x28
    2ba8:	add	x3, sp, #0x20
    2bac:	bl	478 <ctf_get_ctt_size>
    2bb0:	ldur	x8, [x29, #-16]
    2bb4:	ldur	x1, [x29, #-24]
    2bb8:	mov	x0, x8
    2bbc:	bl	0 <ctf_dynamic_type>
    2bc0:	str	x0, [sp, #48]
    2bc4:	cbnz	x0, 2bdc <ctf_func_type_args+0xd0>
    2bc8:	ldur	x8, [x29, #-48]
    2bcc:	ldr	x9, [sp, #32]
    2bd0:	add	x8, x8, x9
    2bd4:	str	x8, [sp, #56]
    2bd8:	b	2be8 <ctf_func_type_args+0xdc>
    2bdc:	ldr	x8, [sp, #48]
    2be0:	ldr	x8, [x8, #48]
    2be4:	str	x8, [sp, #56]
    2be8:	ldur	w8, [x29, #-28]
    2bec:	ldr	w9, [sp, #24]
    2bf0:	cmp	w8, w9
    2bf4:	b.cs	2c04 <ctf_func_type_args+0xf8>  // b.hs, b.nlast
    2bf8:	ldur	w8, [x29, #-28]
    2bfc:	str	w8, [sp, #12]
    2c00:	b	2c0c <ctf_func_type_args+0x100>
    2c04:	ldr	w8, [sp, #24]
    2c08:	str	w8, [sp, #12]
    2c0c:	ldr	w8, [sp, #12]
    2c10:	stur	w8, [x29, #-28]
    2c14:	ldur	w8, [x29, #-28]
    2c18:	cbz	w8, 2c50 <ctf_func_type_args+0x144>
    2c1c:	ldr	x8, [sp, #56]
    2c20:	add	x9, x8, #0x4
    2c24:	str	x9, [sp, #56]
    2c28:	ldr	w10, [x8]
    2c2c:	mov	w8, w10
    2c30:	ldur	x9, [x29, #-40]
    2c34:	add	x11, x9, #0x8
    2c38:	stur	x11, [x29, #-40]
    2c3c:	str	x8, [x9]
    2c40:	ldur	w8, [x29, #-28]
    2c44:	subs	w8, w8, #0x1
    2c48:	stur	w8, [x29, #-28]
    2c4c:	b	2c14 <ctf_func_type_args+0x108>
    2c50:	stur	wzr, [x29, #-4]
    2c54:	ldur	w0, [x29, #-4]
    2c58:	ldp	x29, x30, [sp, #112]
    2c5c:	add	sp, sp, #0x80
    2c60:	ret

0000000000002c64 <ctf_type_visit>:
    2c64:	sub	sp, sp, #0x30
    2c68:	stp	x29, x30, [sp, #32]
    2c6c:	add	x29, sp, #0x20
    2c70:	adrp	x4, 0 <ctf_type_isparent>
    2c74:	add	x4, x4, #0x0
    2c78:	mov	x8, xzr
    2c7c:	mov	w9, wzr
    2c80:	stur	x0, [x29, #-8]
    2c84:	str	x1, [sp, #16]
    2c88:	str	x2, [sp, #8]
    2c8c:	str	x3, [sp]
    2c90:	ldur	x0, [x29, #-8]
    2c94:	ldr	x1, [sp, #16]
    2c98:	ldr	x2, [sp, #8]
    2c9c:	ldr	x3, [sp]
    2ca0:	mov	x5, x8
    2ca4:	mov	w6, w9
    2ca8:	bl	2cb8 <ctf_type_rvisit>
    2cac:	ldp	x29, x30, [sp, #32]
    2cb0:	add	sp, sp, #0x30
    2cb4:	ret

0000000000002cb8 <ctf_type_rvisit>:
    2cb8:	sub	sp, sp, #0x100
    2cbc:	stp	x29, x30, [sp, #240]
    2cc0:	add	x29, sp, #0xf0
    2cc4:	mov	x8, #0xffffffffffffffff    	// #-1
    2cc8:	stur	x0, [x29, #-16]
    2ccc:	stur	x1, [x29, #-24]
    2cd0:	stur	x2, [x29, #-32]
    2cd4:	stur	x3, [x29, #-40]
    2cd8:	stur	x4, [x29, #-48]
    2cdc:	stur	x5, [x29, #-56]
    2ce0:	stur	w6, [x29, #-60]
    2ce4:	ldur	x9, [x29, #-24]
    2ce8:	stur	x9, [x29, #-72]
    2cec:	ldur	x0, [x29, #-16]
    2cf0:	ldur	x1, [x29, #-24]
    2cf4:	str	x8, [sp, #88]
    2cf8:	bl	320 <ctf_type_resolve>
    2cfc:	stur	x0, [x29, #-24]
    2d00:	ldr	x8, [sp, #88]
    2d04:	cmp	x0, x8
    2d08:	b.ne	2d18 <ctf_type_rvisit+0x60>  // b.any
    2d0c:	mov	w8, #0xffffffff            	// #-1
    2d10:	stur	w8, [x29, #-4]
    2d14:	b	3024 <ctf_type_rvisit+0x36c>
    2d18:	ldur	x1, [x29, #-24]
    2d1c:	sub	x0, x29, #0x10
    2d20:	bl	0 <ctf_lookup_by_id>
    2d24:	stur	x0, [x29, #-80]
    2d28:	cbnz	x0, 2d38 <ctf_type_rvisit+0x80>
    2d2c:	mov	w8, #0xffffffff            	// #-1
    2d30:	stur	w8, [x29, #-4]
    2d34:	b	3024 <ctf_type_rvisit+0x36c>
    2d38:	ldur	x8, [x29, #-32]
    2d3c:	ldur	x0, [x29, #-48]
    2d40:	ldur	x1, [x29, #-72]
    2d44:	ldur	x2, [x29, #-56]
    2d48:	ldur	w3, [x29, #-60]
    2d4c:	ldur	x4, [x29, #-40]
    2d50:	blr	x8
    2d54:	stur	w0, [x29, #-116]
    2d58:	cbz	w0, 2d68 <ctf_type_rvisit+0xb0>
    2d5c:	ldur	w8, [x29, #-116]
    2d60:	stur	w8, [x29, #-4]
    2d64:	b	3024 <ctf_type_rvisit+0x36c>
    2d68:	ldur	x8, [x29, #-16]
    2d6c:	ldr	x8, [x8]
    2d70:	ldr	x8, [x8]
    2d74:	ldur	x9, [x29, #-80]
    2d78:	ldr	w0, [x9, #4]
    2d7c:	blr	x8
    2d80:	stur	w0, [x29, #-108]
    2d84:	ldur	w10, [x29, #-108]
    2d88:	cmp	w10, #0x6
    2d8c:	b.eq	2da4 <ctf_type_rvisit+0xec>  // b.none
    2d90:	ldur	w8, [x29, #-108]
    2d94:	cmp	w8, #0x7
    2d98:	b.eq	2da4 <ctf_type_rvisit+0xec>  // b.none
    2d9c:	stur	wzr, [x29, #-4]
    2da0:	b	3024 <ctf_type_rvisit+0x36c>
    2da4:	ldur	x0, [x29, #-16]
    2da8:	ldur	x1, [x29, #-80]
    2dac:	sub	x2, x29, #0x60
    2db0:	sub	x3, x29, #0x68
    2db4:	bl	478 <ctf_get_ctt_size>
    2db8:	ldur	x8, [x29, #-16]
    2dbc:	ldur	x1, [x29, #-24]
    2dc0:	mov	x0, x8
    2dc4:	bl	0 <ctf_dynamic_type>
    2dc8:	stur	x0, [x29, #-88]
    2dcc:	cbnz	x0, 2fb8 <ctf_type_rvisit+0x300>
    2dd0:	ldur	x8, [x29, #-96]
    2dd4:	mov	x9, #0x20000000            	// #536870912
    2dd8:	cmp	x8, x9
    2ddc:	b.ge	2ec4 <ctf_type_rvisit+0x20c>  // b.tcont
    2de0:	ldur	x8, [x29, #-80]
    2de4:	ldur	x9, [x29, #-104]
    2de8:	add	x8, x8, x9
    2dec:	str	x8, [sp, #112]
    2df0:	ldur	x8, [x29, #-16]
    2df4:	ldr	x8, [x8]
    2df8:	ldr	x8, [x8, #16]
    2dfc:	ldur	x9, [x29, #-80]
    2e00:	ldr	w0, [x9, #4]
    2e04:	blr	x8
    2e08:	stur	w0, [x29, #-112]
    2e0c:	ldur	w8, [x29, #-112]
    2e10:	cbz	w8, 2ec0 <ctf_type_rvisit+0x208>
    2e14:	ldur	x0, [x29, #-16]
    2e18:	ldr	x8, [sp, #112]
    2e1c:	ldr	w9, [x8, #8]
    2e20:	mov	w1, w9
    2e24:	ldur	x2, [x29, #-32]
    2e28:	ldur	x3, [x29, #-40]
    2e2c:	ldur	x8, [x29, #-16]
    2e30:	ldr	x10, [sp, #112]
    2e34:	ldr	w9, [x10]
    2e38:	str	x0, [sp, #80]
    2e3c:	mov	x0, x8
    2e40:	str	x1, [sp, #72]
    2e44:	mov	w1, w9
    2e48:	str	x2, [sp, #64]
    2e4c:	str	x3, [sp, #56]
    2e50:	bl	0 <ctf_strptr>
    2e54:	ldur	x8, [x29, #-56]
    2e58:	ldr	x10, [sp, #112]
    2e5c:	ldr	w9, [x10, #4]
    2e60:	mov	w10, w9
    2e64:	add	x5, x8, x10
    2e68:	ldur	w9, [x29, #-60]
    2e6c:	add	w6, w9, #0x1
    2e70:	ldr	x8, [sp, #80]
    2e74:	str	x0, [sp, #48]
    2e78:	mov	x0, x8
    2e7c:	ldr	x1, [sp, #72]
    2e80:	ldr	x2, [sp, #64]
    2e84:	ldr	x3, [sp, #56]
    2e88:	ldr	x4, [sp, #48]
    2e8c:	bl	2cb8 <ctf_type_rvisit>
    2e90:	stur	w0, [x29, #-116]
    2e94:	cbz	w0, 2ea4 <ctf_type_rvisit+0x1ec>
    2e98:	ldur	w8, [x29, #-116]
    2e9c:	stur	w8, [x29, #-4]
    2ea0:	b	3024 <ctf_type_rvisit+0x36c>
    2ea4:	ldur	w8, [x29, #-112]
    2ea8:	subs	w8, w8, #0x1
    2eac:	stur	w8, [x29, #-112]
    2eb0:	ldr	x9, [sp, #112]
    2eb4:	add	x9, x9, #0xc
    2eb8:	str	x9, [sp, #112]
    2ebc:	b	2e0c <ctf_type_rvisit+0x154>
    2ec0:	b	2fb4 <ctf_type_rvisit+0x2fc>
    2ec4:	ldur	x8, [x29, #-80]
    2ec8:	ldur	x9, [x29, #-104]
    2ecc:	add	x8, x8, x9
    2ed0:	str	x8, [sp, #104]
    2ed4:	ldur	x8, [x29, #-16]
    2ed8:	ldr	x8, [x8]
    2edc:	ldr	x8, [x8, #16]
    2ee0:	ldur	x9, [x29, #-80]
    2ee4:	ldr	w0, [x9, #4]
    2ee8:	blr	x8
    2eec:	stur	w0, [x29, #-112]
    2ef0:	ldur	w8, [x29, #-112]
    2ef4:	cbz	w8, 2fb4 <ctf_type_rvisit+0x2fc>
    2ef8:	ldur	x0, [x29, #-16]
    2efc:	ldr	x8, [sp, #104]
    2f00:	ldr	w9, [x8, #8]
    2f04:	mov	w1, w9
    2f08:	ldur	x2, [x29, #-32]
    2f0c:	ldur	x3, [x29, #-40]
    2f10:	ldur	x8, [x29, #-16]
    2f14:	ldr	x10, [sp, #104]
    2f18:	ldr	w9, [x10]
    2f1c:	str	x0, [sp, #40]
    2f20:	mov	x0, x8
    2f24:	str	x1, [sp, #32]
    2f28:	mov	w1, w9
    2f2c:	str	x2, [sp, #24]
    2f30:	str	x3, [sp, #16]
    2f34:	bl	0 <ctf_strptr>
    2f38:	ldur	x8, [x29, #-56]
    2f3c:	ldr	x10, [sp, #104]
    2f40:	ldr	w9, [x10, #4]
    2f44:	mov	w10, w9
    2f48:	ldr	x11, [sp, #104]
    2f4c:	ldr	w9, [x11, #12]
    2f50:	mov	w11, w9
    2f54:	orr	x10, x11, x10, lsl #32
    2f58:	add	x5, x8, x10
    2f5c:	ldur	w9, [x29, #-60]
    2f60:	add	w6, w9, #0x1
    2f64:	ldr	x8, [sp, #40]
    2f68:	str	x0, [sp, #8]
    2f6c:	mov	x0, x8
    2f70:	ldr	x1, [sp, #32]
    2f74:	ldr	x2, [sp, #24]
    2f78:	ldr	x3, [sp, #16]
    2f7c:	ldr	x4, [sp, #8]
    2f80:	bl	2cb8 <ctf_type_rvisit>
    2f84:	stur	w0, [x29, #-116]
    2f88:	cbz	w0, 2f98 <ctf_type_rvisit+0x2e0>
    2f8c:	ldur	w8, [x29, #-116]
    2f90:	stur	w8, [x29, #-4]
    2f94:	b	3024 <ctf_type_rvisit+0x36c>
    2f98:	ldur	w8, [x29, #-112]
    2f9c:	subs	w8, w8, #0x1
    2fa0:	stur	w8, [x29, #-112]
    2fa4:	ldr	x9, [sp, #104]
    2fa8:	add	x9, x9, #0x10
    2fac:	str	x9, [sp, #104]
    2fb0:	b	2ef0 <ctf_type_rvisit+0x238>
    2fb4:	b	3020 <ctf_type_rvisit+0x368>
    2fb8:	ldur	x8, [x29, #-88]
    2fbc:	ldr	x8, [x8, #56]
    2fc0:	str	x8, [sp, #96]
    2fc4:	ldr	x8, [sp, #96]
    2fc8:	cbz	x8, 3020 <ctf_type_rvisit+0x368>
    2fcc:	ldur	x0, [x29, #-16]
    2fd0:	ldr	x8, [sp, #96]
    2fd4:	ldr	x1, [x8, #24]
    2fd8:	ldur	x2, [x29, #-32]
    2fdc:	ldur	x3, [x29, #-40]
    2fe0:	ldr	x8, [sp, #96]
    2fe4:	ldr	x4, [x8, #16]
    2fe8:	ldr	x8, [sp, #96]
    2fec:	ldr	x5, [x8, #32]
    2ff0:	ldur	w9, [x29, #-60]
    2ff4:	add	w6, w9, #0x1
    2ff8:	bl	2cb8 <ctf_type_rvisit>
    2ffc:	stur	w0, [x29, #-116]
    3000:	cbz	w0, 3010 <ctf_type_rvisit+0x358>
    3004:	ldur	w8, [x29, #-116]
    3008:	stur	w8, [x29, #-4]
    300c:	b	3024 <ctf_type_rvisit+0x36c>
    3010:	ldr	x8, [sp, #96]
    3014:	ldr	x8, [x8, #8]
    3018:	str	x8, [sp, #96]
    301c:	b	2fc4 <ctf_type_rvisit+0x30c>
    3020:	stur	wzr, [x29, #-4]
    3024:	ldur	w0, [x29, #-4]
    3028:	ldp	x29, x30, [sp, #240]
    302c:	add	sp, sp, #0x100
    3030:	ret

ctf-util.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ctf_list_append>:
   0:	sub	sp, sp, #0x20
   4:	mov	x8, xzr
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x9, [sp, #24]
  14:	ldr	x9, [x9]
  18:	str	x9, [sp, #8]
  1c:	ldr	x9, [sp, #16]
  20:	str	x9, [sp]
  24:	ldr	x9, [sp]
  28:	ldr	x10, [sp, #24]
  2c:	str	x9, [x10]
  30:	ldr	x9, [sp, #8]
  34:	ldr	x10, [sp]
  38:	str	x9, [x10]
  3c:	ldr	x9, [sp]
  40:	str	x8, [x9, #8]
  44:	ldr	x8, [sp, #8]
  48:	cbz	x8, 5c <ctf_list_append+0x5c>
  4c:	ldr	x8, [sp]
  50:	ldr	x9, [sp, #8]
  54:	str	x8, [x9, #8]
  58:	b	68 <ctf_list_append+0x68>
  5c:	ldr	x8, [sp]
  60:	ldr	x9, [sp, #24]
  64:	str	x8, [x9, #8]
  68:	add	sp, sp, #0x20
  6c:	ret

0000000000000070 <ctf_list_prepend>:
  70:	sub	sp, sp, #0x20
  74:	mov	x8, xzr
  78:	str	x0, [sp, #24]
  7c:	str	x1, [sp, #16]
  80:	ldr	x9, [sp, #16]
  84:	str	x9, [sp, #8]
  88:	ldr	x9, [sp, #24]
  8c:	ldr	x9, [x9, #8]
  90:	str	x9, [sp]
  94:	ldr	x9, [sp, #8]
  98:	ldr	x10, [sp, #24]
  9c:	str	x9, [x10, #8]
  a0:	ldr	x9, [sp, #8]
  a4:	str	x8, [x9]
  a8:	ldr	x8, [sp]
  ac:	ldr	x9, [sp, #8]
  b0:	str	x8, [x9, #8]
  b4:	ldr	x8, [sp]
  b8:	cbz	x8, cc <ctf_list_prepend+0x5c>
  bc:	ldr	x8, [sp, #8]
  c0:	ldr	x9, [sp]
  c4:	str	x8, [x9]
  c8:	b	d8 <ctf_list_prepend+0x68>
  cc:	ldr	x8, [sp, #8]
  d0:	ldr	x9, [sp, #24]
  d4:	str	x8, [x9]
  d8:	add	sp, sp, #0x20
  dc:	ret

00000000000000e0 <ctf_list_delete>:
  e0:	sub	sp, sp, #0x20
  e4:	str	x0, [sp, #24]
  e8:	str	x1, [sp, #16]
  ec:	ldr	x8, [sp, #16]
  f0:	str	x8, [sp, #8]
  f4:	ldr	x8, [sp, #8]
  f8:	ldr	x8, [x8]
  fc:	cbz	x8, 118 <ctf_list_delete+0x38>
 100:	ldr	x8, [sp, #8]
 104:	ldr	x8, [x8, #8]
 108:	ldr	x9, [sp, #8]
 10c:	ldr	x9, [x9]
 110:	str	x8, [x9, #8]
 114:	b	128 <ctf_list_delete+0x48>
 118:	ldr	x8, [sp, #8]
 11c:	ldr	x8, [x8, #8]
 120:	ldr	x9, [sp, #24]
 124:	str	x8, [x9, #8]
 128:	ldr	x8, [sp, #8]
 12c:	ldr	x8, [x8, #8]
 130:	cbz	x8, 14c <ctf_list_delete+0x6c>
 134:	ldr	x8, [sp, #8]
 138:	ldr	x8, [x8]
 13c:	ldr	x9, [sp, #8]
 140:	ldr	x9, [x9, #8]
 144:	str	x8, [x9]
 148:	b	15c <ctf_list_delete+0x7c>
 14c:	ldr	x8, [sp, #8]
 150:	ldr	x8, [x8]
 154:	ldr	x9, [sp, #24]
 158:	str	x8, [x9]
 15c:	add	sp, sp, #0x20
 160:	ret

0000000000000164 <ctf_list_empty_p>:
 164:	sub	sp, sp, #0x10
 168:	str	x0, [sp, #8]
 16c:	ldr	x8, [sp, #8]
 170:	ldr	x8, [x8, #8]
 174:	mov	w9, #0x0                   	// #0
 178:	str	w9, [sp, #4]
 17c:	cbnz	x8, 194 <ctf_list_empty_p+0x30>
 180:	ldr	x8, [sp, #8]
 184:	ldr	x8, [x8]
 188:	cmp	x8, #0x0
 18c:	cset	w9, eq  // eq = none
 190:	str	w9, [sp, #4]
 194:	ldr	w8, [sp, #4]
 198:	and	w0, w8, #0x1
 19c:	add	sp, sp, #0x10
 1a0:	ret

00000000000001a4 <ctf_sym_to_elf64>:
 1a4:	sub	sp, sp, #0x10
 1a8:	str	x0, [sp, #8]
 1ac:	str	x1, [sp]
 1b0:	ldr	x8, [sp, #8]
 1b4:	ldr	w9, [x8]
 1b8:	ldr	x8, [sp]
 1bc:	str	w9, [x8]
 1c0:	ldr	x8, [sp, #8]
 1c4:	ldr	w9, [x8, #4]
 1c8:	mov	w8, w9
 1cc:	ldr	x10, [sp]
 1d0:	str	x8, [x10, #8]
 1d4:	ldr	x8, [sp, #8]
 1d8:	ldr	w9, [x8, #8]
 1dc:	mov	w8, w9
 1e0:	ldr	x10, [sp]
 1e4:	str	x8, [x10, #16]
 1e8:	ldr	x8, [sp, #8]
 1ec:	ldrb	w9, [x8, #12]
 1f0:	ldr	x8, [sp]
 1f4:	strb	w9, [x8, #4]
 1f8:	ldr	x8, [sp, #8]
 1fc:	ldrb	w9, [x8, #13]
 200:	ldr	x8, [sp]
 204:	strb	w9, [x8, #5]
 208:	ldr	x8, [sp, #8]
 20c:	ldrh	w9, [x8, #14]
 210:	ldr	x8, [sp]
 214:	strh	w9, [x8, #6]
 218:	ldr	x0, [sp]
 21c:	add	sp, sp, #0x10
 220:	ret

0000000000000224 <ctf_str_append>:
 224:	sub	sp, sp, #0x40
 228:	stp	x29, x30, [sp, #48]
 22c:	add	x29, sp, #0x30
 230:	stur	x0, [x29, #-16]
 234:	str	x1, [sp, #24]
 238:	str	xzr, [sp, #16]
 23c:	ldr	x8, [sp, #24]
 240:	cbnz	x8, 250 <ctf_str_append+0x2c>
 244:	ldur	x8, [x29, #-16]
 248:	stur	x8, [x29, #-8]
 24c:	b	2d8 <ctf_str_append+0xb4>
 250:	ldur	x8, [x29, #-16]
 254:	cbz	x8, 264 <ctf_str_append+0x40>
 258:	ldur	x0, [x29, #-16]
 25c:	bl	0 <strlen>
 260:	str	x0, [sp, #16]
 264:	ldr	x0, [sp, #24]
 268:	bl	0 <strlen>
 26c:	str	x0, [sp, #8]
 270:	ldur	x0, [x29, #-16]
 274:	ldr	x8, [sp, #16]
 278:	ldr	x9, [sp, #8]
 27c:	add	x8, x8, x9
 280:	add	x1, x8, #0x1
 284:	bl	0 <realloc>
 288:	stur	x0, [x29, #-16]
 28c:	cbnz	x0, 29c <ctf_str_append+0x78>
 290:	mov	x8, xzr
 294:	stur	x8, [x29, #-8]
 298:	b	2d8 <ctf_str_append+0xb4>
 29c:	ldur	x8, [x29, #-16]
 2a0:	ldr	x9, [sp, #16]
 2a4:	add	x0, x8, x9
 2a8:	ldr	x1, [sp, #24]
 2ac:	ldr	x2, [sp, #8]
 2b0:	bl	0 <memcpy>
 2b4:	ldur	x8, [x29, #-16]
 2b8:	ldr	x9, [sp, #16]
 2bc:	ldr	x10, [sp, #8]
 2c0:	add	x9, x9, x10
 2c4:	add	x8, x8, x9
 2c8:	mov	w11, #0x0                   	// #0
 2cc:	strb	w11, [x8]
 2d0:	ldur	x8, [x29, #-16]
 2d4:	stur	x8, [x29, #-8]
 2d8:	ldur	x0, [x29, #-8]
 2dc:	ldp	x29, x30, [sp, #48]
 2e0:	add	sp, sp, #0x40
 2e4:	ret

00000000000002e8 <ctf_str_append_noerr>:
 2e8:	sub	sp, sp, #0x30
 2ec:	stp	x29, x30, [sp, #32]
 2f0:	add	x29, sp, #0x20
 2f4:	str	x0, [sp, #16]
 2f8:	str	x1, [sp, #8]
 2fc:	ldr	x0, [sp, #16]
 300:	ldr	x1, [sp, #8]
 304:	bl	224 <ctf_str_append>
 308:	str	x0, [sp]
 30c:	ldr	x8, [sp]
 310:	cbnz	x8, 320 <ctf_str_append_noerr+0x38>
 314:	ldr	x8, [sp, #16]
 318:	stur	x8, [x29, #-8]
 31c:	b	328 <ctf_str_append_noerr+0x40>
 320:	ldr	x8, [sp]
 324:	stur	x8, [x29, #-8]
 328:	ldur	x0, [x29, #-8]
 32c:	ldp	x29, x30, [sp, #32]
 330:	add	sp, sp, #0x30
 334:	ret

0000000000000338 <ctf_realloc>:
 338:	sub	sp, sp, #0x30
 33c:	stp	x29, x30, [sp, #32]
 340:	add	x29, sp, #0x20
 344:	str	x0, [sp, #16]
 348:	str	x1, [sp, #8]
 34c:	str	x2, [sp]
 350:	ldr	x8, [sp, #16]
 354:	ldr	x8, [x8, #376]
 358:	cmp	x8, #0x0
 35c:	cset	w9, ls  // ls = plast
 360:	tbnz	w9, #0, 388 <ctf_realloc+0x50>
 364:	ldr	x1, [sp, #16]
 368:	ldr	x8, [sp, #16]
 36c:	ldr	x2, [x8, #376]
 370:	adrp	x0, 0 <ctf_list_append>
 374:	add	x0, x0, #0x0
 378:	bl	0 <ctf_dprintf>
 37c:	mov	x8, xzr
 380:	stur	x8, [x29, #-8]
 384:	b	398 <ctf_realloc+0x60>
 388:	ldr	x0, [sp, #8]
 38c:	ldr	x1, [sp]
 390:	bl	0 <realloc>
 394:	stur	x0, [x29, #-8]
 398:	ldur	x0, [x29, #-8]
 39c:	ldp	x29, x30, [sp, #32]
 3a0:	add	sp, sp, #0x30
 3a4:	ret

00000000000003a8 <ctf_set_open_errno>:
 3a8:	sub	sp, sp, #0x10
 3ac:	str	x0, [sp, #8]
 3b0:	str	w1, [sp, #4]
 3b4:	ldr	x8, [sp, #8]
 3b8:	cbz	x8, 3c8 <ctf_set_open_errno+0x20>
 3bc:	ldr	w8, [sp, #4]
 3c0:	ldr	x9, [sp, #8]
 3c4:	str	w8, [x9]
 3c8:	mov	x8, xzr
 3cc:	mov	x0, x8
 3d0:	add	sp, sp, #0x10
 3d4:	ret

00000000000003d8 <ctf_set_errno>:
 3d8:	sub	sp, sp, #0x10
 3dc:	mov	x8, #0xffffffffffffffff    	// #-1
 3e0:	str	x0, [sp, #8]
 3e4:	str	w1, [sp, #4]
 3e8:	ldr	w9, [sp, #4]
 3ec:	ldr	x10, [sp, #8]
 3f0:	str	w9, [x10, #556]
 3f4:	mov	x0, x8
 3f8:	add	sp, sp, #0x10
 3fc:	ret
