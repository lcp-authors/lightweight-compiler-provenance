
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-shutdown_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004033a0 <_init>:
  4033a0:	stp	x29, x30, [sp, #-16]!
  4033a4:	mov	x29, sp
  4033a8:	bl	403e48 <call_weak_fn>
  4033ac:	ldp	x29, x30, [sp], #16
  4033b0:	ret

Disassembly of section .plt:

00000000004033b8 <__libc_start_main@plt-0x20>:
  4033b8:	stp	x16, x30, [sp, #-16]!
  4033bc:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4033c0:	ldr	x17, [x16, #2792]
  4033c4:	add	x16, x16, #0xae8
  4033c8:	br	x17
  4033cc:	nop
  4033d0:	nop
  4033d4:	nop

00000000004033d8 <__libc_start_main@plt>:
  4033d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4033dc:	ldr	x17, [x16, #2800]
  4033e0:	add	x16, x16, #0xaf0
  4033e4:	br	x17

00000000004033e8 <abort@plt>:
  4033e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4033ec:	ldr	x17, [x16, #2808]
  4033f0:	add	x16, x16, #0xaf8
  4033f4:	br	x17

00000000004033f8 <__gmon_start__@plt>:
  4033f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4033fc:	ldr	x17, [x16, #2816]
  403400:	add	x16, x16, #0xb00
  403404:	br	x17

0000000000403408 <log_set_target@plt>:
  403408:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40340c:	ldr	x17, [x16, #2824]
  403410:	add	x16, x16, #0xb08
  403414:	br	x17

0000000000403418 <log_set_prohibit_ipc@plt>:
  403418:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40341c:	ldr	x17, [x16, #2832]
  403420:	add	x16, x16, #0xb10
  403424:	br	x17

0000000000403428 <log_parse_environment_realm@plt>:
  403428:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40342c:	ldr	x17, [x16, #2840]
  403430:	add	x16, x16, #0xb18
  403434:	br	x17

0000000000403438 <getopt_long@plt>:
  403438:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40343c:	ldr	x17, [x16, #2848]
  403440:	add	x16, x16, #0xb20
  403444:	br	x17

0000000000403448 <log_show_color@plt>:
  403448:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40344c:	ldr	x17, [x16, #2856]
  403450:	add	x16, x16, #0xb28
  403454:	br	x17

0000000000403458 <log_set_max_level_from_string_realm@plt>:
  403458:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40345c:	ldr	x17, [x16, #2864]
  403460:	add	x16, x16, #0xb30
  403464:	br	x17

0000000000403468 <log_get_max_level_realm@plt>:
  403468:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40346c:	ldr	x17, [x16, #2872]
  403470:	add	x16, x16, #0xb38
  403474:	br	x17

0000000000403478 <log_internal_realm@plt>:
  403478:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40347c:	ldr	x17, [x16, #2880]
  403480:	add	x16, x16, #0xb40
  403484:	br	x17

0000000000403488 <safe_atou8@plt>:
  403488:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40348c:	ldr	x17, [x16, #2888]
  403490:	add	x16, x16, #0xb48
  403494:	br	x17

0000000000403498 <log_show_color_from_string@plt>:
  403498:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40349c:	ldr	x17, [x16, #2896]
  4034a0:	add	x16, x16, #0xb50
  4034a4:	br	x17

00000000004034a8 <log_show_location_from_string@plt>:
  4034a8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4034ac:	ldr	x17, [x16, #2904]
  4034b0:	add	x16, x16, #0xb58
  4034b4:	br	x17

00000000004034b8 <log_set_target_from_string@plt>:
  4034b8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4034bc:	ldr	x17, [x16, #2912]
  4034c0:	add	x16, x16, #0xb60
  4034c4:	br	x17

00000000004034c8 <parse_sec@plt>:
  4034c8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4034cc:	ldr	x17, [x16, #2920]
  4034d0:	add	x16, x16, #0xb68
  4034d4:	br	x17

00000000004034d8 <log_show_location@plt>:
  4034d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4034dc:	ldr	x17, [x16, #2928]
  4034e0:	add	x16, x16, #0xb70
  4034e4:	br	x17

00000000004034e8 <log_open@plt>:
  4034e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4034ec:	ldr	x17, [x16, #2936]
  4034f0:	add	x16, x16, #0xb78
  4034f4:	br	x17

00000000004034f8 <umask@plt>:
  4034f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4034fc:	ldr	x17, [x16, #2944]
  403500:	add	x16, x16, #0xb80
  403504:	br	x17

0000000000403508 <getpid_cached@plt>:
  403508:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40350c:	ldr	x17, [x16, #2952]
  403510:	add	x16, x16, #0xb88
  403514:	br	x17

0000000000403518 <strcmp@plt>:
  403518:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40351c:	ldr	x17, [x16, #2960]
  403520:	add	x16, x16, #0xb90
  403524:	br	x17

0000000000403528 <cg_get_root_path@plt>:
  403528:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40352c:	ldr	x17, [x16, #2968]
  403530:	add	x16, x16, #0xb98
  403534:	br	x17

0000000000403538 <detect_container@plt>:
  403538:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40353c:	ldr	x17, [x16, #2976]
  403540:	add	x16, x16, #0xba0
  403544:	br	x17

0000000000403548 <getenv@plt>:
  403548:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40354c:	ldr	x17, [x16, #2984]
  403550:	add	x16, x16, #0xba8
  403554:	br	x17

0000000000403558 <watchdog_set_device@plt>:
  403558:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40355c:	ldr	x17, [x16, #2992]
  403560:	add	x16, x16, #0xbb0
  403564:	br	x17

0000000000403568 <mlockall@plt>:
  403568:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40356c:	ldr	x17, [x16, #3000]
  403570:	add	x16, x16, #0xbb8
  403574:	br	x17

0000000000403578 <disable_coredumps@plt>:
  403578:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40357c:	ldr	x17, [x16, #3008]
  403580:	add	x16, x16, #0xbc0
  403584:	br	x17

0000000000403588 <in_initrd@plt>:
  403588:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40358c:	ldr	x17, [x16, #3016]
  403590:	add	x16, x16, #0xbc8
  403594:	br	x17

0000000000403598 <log_get_target@plt>:
  403598:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40359c:	ldr	x17, [x16, #3024]
  4035a0:	add	x16, x16, #0xbd0
  4035a4:	br	x17

00000000004035a8 <sysctl_read@plt>:
  4035a8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4035ac:	ldr	x17, [x16, #3032]
  4035b0:	add	x16, x16, #0xbd8
  4035b4:	br	x17

00000000004035b8 <extract_first_word@plt>:
  4035b8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4035bc:	ldr	x17, [x16, #3040]
  4035c0:	add	x16, x16, #0xbe0
  4035c4:	br	x17

00000000004035c8 <safe_atoi@plt>:
  4035c8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4035cc:	ldr	x17, [x16, #3048]
  4035d0:	add	x16, x16, #0xbe8
  4035d4:	br	x17

00000000004035d8 <access@plt>:
  4035d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4035dc:	ldr	x17, [x16, #3056]
  4035e0:	add	x16, x16, #0xbf0
  4035e4:	br	x17

00000000004035e8 <watchdog_ping@plt>:
  4035e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4035ec:	ldr	x17, [x16, #3064]
  4035f0:	add	x16, x16, #0xbf8
  4035f4:	br	x17

00000000004035f8 <cg_trim@plt>:
  4035f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4035fc:	ldr	x17, [x16, #3072]
  403600:	add	x16, x16, #0xc00
  403604:	br	x17

0000000000403608 <execute_directories@plt>:
  403608:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40360c:	ldr	x17, [x16, #3080]
  403610:	add	x16, x16, #0xc08
  403614:	br	x17

0000000000403618 <rlimit_nofile_safe@plt>:
  403618:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40361c:	ldr	x17, [x16, #3088]
  403620:	add	x16, x16, #0xc10
  403624:	br	x17

0000000000403628 <mount@plt>:
  403628:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40362c:	ldr	x17, [x16, #3096]
  403630:	add	x16, x16, #0xc18
  403634:	br	x17

0000000000403638 <switch_root@plt>:
  403638:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40363c:	ldr	x17, [x16, #3104]
  403640:	add	x16, x16, #0xc20
  403644:	br	x17

0000000000403648 <setsid@plt>:
  403648:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40364c:	ldr	x17, [x16, #3112]
  403650:	add	x16, x16, #0xc28
  403654:	br	x17

0000000000403658 <make_console_stdio@plt>:
  403658:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40365c:	ldr	x17, [x16, #3120]
  403660:	add	x16, x16, #0xc30
  403664:	br	x17

0000000000403668 <execv@plt>:
  403668:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40366c:	ldr	x17, [x16, #3128]
  403670:	add	x16, x16, #0xc38
  403674:	br	x17

0000000000403678 <__errno_location@plt>:
  403678:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40367c:	ldr	x17, [x16, #3136]
  403680:	add	x16, x16, #0xc40
  403684:	br	x17

0000000000403688 <safe_fork_full@plt>:
  403688:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40368c:	ldr	x17, [x16, #3144]
  403690:	add	x16, x16, #0xc48
  403694:	br	x17

0000000000403698 <reboot_with_parameter@plt>:
  403698:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40369c:	ldr	x17, [x16, #3152]
  4036a0:	add	x16, x16, #0xc50
  4036a4:	br	x17

00000000004036a8 <reboot@plt>:
  4036a8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4036ac:	ldr	x17, [x16, #3160]
  4036b0:	add	x16, x16, #0xc58
  4036b4:	br	x17

00000000004036b8 <free@plt>:
  4036b8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4036bc:	ldr	x17, [x16, #3168]
  4036c0:	add	x16, x16, #0xc60
  4036c4:	br	x17

00000000004036c8 <sysctl_writef@plt>:
  4036c8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4036cc:	ldr	x17, [x16, #3176]
  4036d0:	add	x16, x16, #0xc68
  4036d4:	br	x17

00000000004036d8 <log_emergency_level@plt>:
  4036d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4036dc:	ldr	x17, [x16, #3184]
  4036e0:	add	x16, x16, #0xc70
  4036e4:	br	x17

00000000004036e8 <freeze@plt>:
  4036e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4036ec:	ldr	x17, [x16, #3192]
  4036f0:	add	x16, x16, #0xc78
  4036f4:	br	x17

00000000004036f8 <log_assert_failed_unreachable_realm@plt>:
  4036f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4036fc:	ldr	x17, [x16, #3200]
  403700:	add	x16, x16, #0xc80
  403704:	br	x17

0000000000403708 <log_assert_failed_realm@plt>:
  403708:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40370c:	ldr	x17, [x16, #3208]
  403710:	add	x16, x16, #0xc88
  403714:	br	x17

0000000000403718 <_exit@plt>:
  403718:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40371c:	ldr	x17, [x16, #3216]
  403720:	add	x16, x16, #0xc90
  403724:	br	x17

0000000000403728 <sigprocmask_many@plt>:
  403728:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40372c:	ldr	x17, [x16, #3224]
  403730:	add	x16, x16, #0xc98
  403734:	br	x17

0000000000403738 <asynchronous_sync@plt>:
  403738:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40373c:	ldr	x17, [x16, #3232]
  403740:	add	x16, x16, #0xca0
  403744:	br	x17

0000000000403748 <safe_fclose@plt>:
  403748:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40374c:	ldr	x17, [x16, #3240]
  403750:	add	x16, x16, #0xca8
  403754:	br	x17

0000000000403758 <wait_for_terminate_with_timeout@plt>:
  403758:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40375c:	ldr	x17, [x16, #3248]
  403760:	add	x16, x16, #0xcb0
  403764:	br	x17

0000000000403768 <fopen64@plt>:
  403768:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40376c:	ldr	x17, [x16, #3256]
  403770:	add	x16, x16, #0xcb8
  403774:	br	x17

0000000000403778 <read_line_full@plt>:
  403778:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40377c:	ldr	x17, [x16, #3264]
  403780:	add	x16, x16, #0xcc0
  403784:	br	x17

0000000000403788 <first_word@plt>:
  403788:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40378c:	ldr	x17, [x16, #3272]
  403790:	add	x16, x16, #0xcc8
  403794:	br	x17

0000000000403798 <__isoc99_sscanf@plt>:
  403798:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40379c:	ldr	x17, [x16, #3280]
  4037a0:	add	x16, x16, #0xcd0
  4037a4:	br	x17

00000000004037a8 <kill@plt>:
  4037a8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4037ac:	ldr	x17, [x16, #3288]
  4037b0:	add	x16, x16, #0xcd8
  4037b4:	br	x17

00000000004037b8 <sigprocmask@plt>:
  4037b8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4037bc:	ldr	x17, [x16, #3296]
  4037c0:	add	x16, x16, #0xce0
  4037c4:	br	x17

00000000004037c8 <mnt_new_table@plt>:
  4037c8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4037cc:	ldr	x17, [x16, #3304]
  4037d0:	add	x16, x16, #0xce8
  4037d4:	br	x17

00000000004037d8 <mnt_new_iter@plt>:
  4037d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4037dc:	ldr	x17, [x16, #3312]
  4037e0:	add	x16, x16, #0xcf0
  4037e4:	br	x17

00000000004037e8 <mnt_table_parse_file@plt>:
  4037e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4037ec:	ldr	x17, [x16, #3320]
  4037f0:	add	x16, x16, #0xcf8
  4037f4:	br	x17

00000000004037f8 <mnt_free_iter@plt>:
  4037f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4037fc:	ldr	x17, [x16, #3328]
  403800:	add	x16, x16, #0xd00
  403804:	br	x17

0000000000403808 <mnt_free_table@plt>:
  403808:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40380c:	ldr	x17, [x16, #3336]
  403810:	add	x16, x16, #0xd08
  403814:	br	x17

0000000000403818 <mnt_table_parse_mtab@plt>:
  403818:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40381c:	ldr	x17, [x16, #3344]
  403820:	add	x16, x16, #0xd10
  403824:	br	x17

0000000000403828 <mnt_table_next_fs@plt>:
  403828:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40382c:	ldr	x17, [x16, #3352]
  403830:	add	x16, x16, #0xd18
  403834:	br	x17

0000000000403838 <mnt_fs_get_target@plt>:
  403838:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40383c:	ldr	x17, [x16, #3360]
  403840:	add	x16, x16, #0xd20
  403844:	br	x17

0000000000403848 <mnt_fs_get_fstype@plt>:
  403848:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40384c:	ldr	x17, [x16, #3368]
  403850:	add	x16, x16, #0xd28
  403854:	br	x17

0000000000403858 <mnt_fs_get_vfs_options@plt>:
  403858:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40385c:	ldr	x17, [x16, #3376]
  403860:	add	x16, x16, #0xd30
  403864:	br	x17

0000000000403868 <strextend_with_separator@plt>:
  403868:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40386c:	ldr	x17, [x16, #3384]
  403870:	add	x16, x16, #0xd38
  403874:	br	x17

0000000000403878 <mnt_fs_get_fs_options@plt>:
  403878:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40387c:	ldr	x17, [x16, #3392]
  403880:	add	x16, x16, #0xd40
  403884:	br	x17

0000000000403888 <path_startswith_strv@plt>:
  403888:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40388c:	ldr	x17, [x16, #3400]
  403890:	add	x16, x16, #0xd48
  403894:	br	x17

0000000000403898 <log_oom_internal@plt>:
  403898:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40389c:	ldr	x17, [x16, #3408]
  4038a0:	add	x16, x16, #0xd50
  4038a4:	br	x17

00000000004038a8 <fstype_is_network@plt>:
  4038a8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4038ac:	ldr	x17, [x16, #3416]
  4038b0:	add	x16, x16, #0xd58
  4038b4:	br	x17

00000000004038b8 <fstype_is_api_vfs@plt>:
  4038b8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4038bc:	ldr	x17, [x16, #3424]
  4038c0:	add	x16, x16, #0xd60
  4038c4:	br	x17

00000000004038c8 <fstype_is_ro@plt>:
  4038c8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4038cc:	ldr	x17, [x16, #3432]
  4038d0:	add	x16, x16, #0xd68
  4038d4:	br	x17

00000000004038d8 <fstab_filter_options@plt>:
  4038d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4038dc:	ldr	x17, [x16, #3440]
  4038e0:	add	x16, x16, #0xd70
  4038e4:	br	x17

00000000004038e8 <mnt_fs_get_propagation@plt>:
  4038e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4038ec:	ldr	x17, [x16, #3448]
  4038f0:	add	x16, x16, #0xd78
  4038f4:	br	x17

00000000004038f8 <mount_option_mangle@plt>:
  4038f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4038fc:	ldr	x17, [x16, #3456]
  403900:	add	x16, x16, #0xd80
  403904:	br	x17

0000000000403908 <calloc@plt>:
  403908:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40390c:	ldr	x17, [x16, #3464]
  403910:	add	x16, x16, #0xd88
  403914:	br	x17

0000000000403918 <strdup@plt>:
  403918:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40391c:	ldr	x17, [x16, #3472]
  403920:	add	x16, x16, #0xd90
  403924:	br	x17

0000000000403928 <mnt_table_parse_swaps@plt>:
  403928:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40392c:	ldr	x17, [x16, #3480]
  403930:	add	x16, x16, #0xd98
  403934:	br	x17

0000000000403938 <mnt_fs_get_source@plt>:
  403938:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40393c:	ldr	x17, [x16, #3488]
  403940:	add	x16, x16, #0xda0
  403944:	br	x17

0000000000403948 <path_equal@plt>:
  403948:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40394c:	ldr	x17, [x16, #3496]
  403950:	add	x16, x16, #0xda8
  403954:	br	x17

0000000000403958 <path_startswith@plt>:
  403958:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40395c:	ldr	x17, [x16, #3504]
  403960:	add	x16, x16, #0xdb0
  403964:	br	x17

0000000000403968 <umount2@plt>:
  403968:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40396c:	ldr	x17, [x16, #3512]
  403970:	add	x16, x16, #0xdb8
  403974:	br	x17

0000000000403978 <swapoff@plt>:
  403978:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40397c:	ldr	x17, [x16, #3520]
  403980:	add	x16, x16, #0xdc0
  403984:	br	x17

0000000000403988 <sd_device_enumerator_new@plt>:
  403988:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40398c:	ldr	x17, [x16, #3528]
  403990:	add	x16, x16, #0xdc8
  403994:	br	x17

0000000000403998 <sd_device_enumerator_allow_uninitialized@plt>:
  403998:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  40399c:	ldr	x17, [x16, #3536]
  4039a0:	add	x16, x16, #0xdd0
  4039a4:	br	x17

00000000004039a8 <sd_device_enumerator_add_match_subsystem@plt>:
  4039a8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4039ac:	ldr	x17, [x16, #3544]
  4039b0:	add	x16, x16, #0xdd8
  4039b4:	br	x17

00000000004039b8 <sd_device_enumerator_add_match_sysname@plt>:
  4039b8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4039bc:	ldr	x17, [x16, #3552]
  4039c0:	add	x16, x16, #0xde0
  4039c4:	br	x17

00000000004039c8 <sd_device_enumerator_add_match_sysattr@plt>:
  4039c8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4039cc:	ldr	x17, [x16, #3560]
  4039d0:	add	x16, x16, #0xde8
  4039d4:	br	x17

00000000004039d8 <sd_device_enumerator_get_device_first@plt>:
  4039d8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4039dc:	ldr	x17, [x16, #3568]
  4039e0:	add	x16, x16, #0xdf0
  4039e4:	br	x17

00000000004039e8 <sd_device_enumerator_unref@plt>:
  4039e8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4039ec:	ldr	x17, [x16, #3576]
  4039f0:	add	x16, x16, #0xdf8
  4039f4:	br	x17

00000000004039f8 <__lxstat64@plt>:
  4039f8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  4039fc:	ldr	x17, [x16, #3584]
  403a00:	add	x16, x16, #0xe00
  403a04:	br	x17

0000000000403a08 <open64@plt>:
  403a08:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a0c:	ldr	x17, [x16, #3592]
  403a10:	add	x16, x16, #0xe08
  403a14:	br	x17

0000000000403a18 <ioctl@plt>:
  403a18:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a1c:	ldr	x17, [x16, #3600]
  403a20:	add	x16, x16, #0xe10
  403a24:	br	x17

0000000000403a28 <safe_close@plt>:
  403a28:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a2c:	ldr	x17, [x16, #3608]
  403a30:	add	x16, x16, #0xe18
  403a34:	br	x17

0000000000403a38 <sd_device_enumerator_get_device_next@plt>:
  403a38:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a3c:	ldr	x17, [x16, #3616]
  403a40:	add	x16, x16, #0xe20
  403a44:	br	x17

0000000000403a48 <sd_device_get_devname@plt>:
  403a48:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a4c:	ldr	x17, [x16, #3624]
  403a50:	add	x16, x16, #0xe28
  403a54:	br	x17

0000000000403a58 <malloc@plt>:
  403a58:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a5c:	ldr	x17, [x16, #3632]
  403a60:	add	x16, x16, #0xe30
  403a64:	br	x17

0000000000403a68 <get_block_device@plt>:
  403a68:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a6c:	ldr	x17, [x16, #3640]
  403a70:	add	x16, x16, #0xe38
  403a74:	br	x17

0000000000403a78 <sd_device_get_devnum@plt>:
  403a78:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a7c:	ldr	x17, [x16, #3648]
  403a80:	add	x16, x16, #0xe40
  403a84:	br	x17

0000000000403a88 <internal_set_new@plt>:
  403a88:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a8c:	ldr	x17, [x16, #3656]
  403a90:	add	x16, x16, #0xe48
  403a94:	br	x17

0000000000403a98 <sigemptyset@plt>:
  403a98:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403a9c:	ldr	x17, [x16, #3664]
  403aa0:	add	x16, x16, #0xe50
  403aa4:	br	x17

0000000000403aa8 <sigaddset@plt>:
  403aa8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403aac:	ldr	x17, [x16, #3672]
  403ab0:	add	x16, x16, #0xe58
  403ab4:	br	x17

0000000000403ab8 <opendir@plt>:
  403ab8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403abc:	ldr	x17, [x16, #3680]
  403ac0:	add	x16, x16, #0xe60
  403ac4:	br	x17

0000000000403ac8 <readdir64@plt>:
  403ac8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403acc:	ldr	x17, [x16, #3688]
  403ad0:	add	x16, x16, #0xe68
  403ad4:	br	x17

0000000000403ad8 <parse_pid@plt>:
  403ad8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403adc:	ldr	x17, [x16, #3696]
  403ae0:	add	x16, x16, #0xe70
  403ae4:	br	x17

0000000000403ae8 <get_process_comm@plt>:
  403ae8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403aec:	ldr	x17, [x16, #3704]
  403af0:	add	x16, x16, #0xe78
  403af4:	br	x17

0000000000403af8 <set_put@plt>:
  403af8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403afc:	ldr	x17, [x16, #3712]
  403b00:	add	x16, x16, #0xe80
  403b04:	br	x17

0000000000403b08 <get_ctty_devnr@plt>:
  403b08:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b0c:	ldr	x17, [x16, #3720]
  403b10:	add	x16, x16, #0xe88
  403b14:	br	x17

0000000000403b18 <closedir@plt>:
  403b18:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b1c:	ldr	x17, [x16, #3728]
  403b20:	add	x16, x16, #0xe90
  403b24:	br	x17

0000000000403b28 <internal_hashmap_size@plt>:
  403b28:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b2c:	ldr	x17, [x16, #3736]
  403b30:	add	x16, x16, #0xe98
  403b34:	br	x17

0000000000403b38 <now@plt>:
  403b38:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b3c:	ldr	x17, [x16, #3744]
  403b40:	add	x16, x16, #0xea0
  403b44:	br	x17

0000000000403b48 <internal_hashmap_remove@plt>:
  403b48:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b4c:	ldr	x17, [x16, #3752]
  403b50:	add	x16, x16, #0xea8
  403b54:	br	x17

0000000000403b58 <waitpid@plt>:
  403b58:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b5c:	ldr	x17, [x16, #3760]
  403b60:	add	x16, x16, #0xeb0
  403b64:	br	x17

0000000000403b68 <set_iterate@plt>:
  403b68:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b6c:	ldr	x17, [x16, #3768]
  403b70:	add	x16, x16, #0xeb8
  403b74:	br	x17

0000000000403b78 <asprintf@plt>:
  403b78:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b7c:	ldr	x17, [x16, #3776]
  403b80:	add	x16, x16, #0xec0
  403b84:	br	x17

0000000000403b88 <timespec_store@plt>:
  403b88:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b8c:	ldr	x17, [x16, #3784]
  403b90:	add	x16, x16, #0xec8
  403b94:	br	x17

0000000000403b98 <sigtimedwait@plt>:
  403b98:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403b9c:	ldr	x17, [x16, #3792]
  403ba0:	add	x16, x16, #0xed0
  403ba4:	br	x17

0000000000403ba8 <internal_hashmap_free@plt>:
  403ba8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403bac:	ldr	x17, [x16, #3800]
  403bb0:	add	x16, x16, #0xed8
  403bb4:	br	x17

0000000000403bb8 <is_kernel_thread@plt>:
  403bb8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403bbc:	ldr	x17, [x16, #3808]
  403bc0:	add	x16, x16, #0xee0
  403bc4:	br	x17

0000000000403bc8 <get_process_uid@plt>:
  403bc8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403bcc:	ldr	x17, [x16, #3816]
  403bd0:	add	x16, x16, #0xee8
  403bd4:	br	x17

0000000000403bd8 <sprintf@plt>:
  403bd8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403bdc:	ldr	x17, [x16, #3824]
  403be0:	add	x16, x16, #0xef0
  403be4:	br	x17

0000000000403be8 <fread@plt>:
  403be8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403bec:	ldr	x17, [x16, #3832]
  403bf0:	add	x16, x16, #0xef8
  403bf4:	br	x17

0000000000403bf8 <pid_from_same_root_fs@plt>:
  403bf8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403bfc:	ldr	x17, [x16, #3840]
  403c00:	add	x16, x16, #0xf00
  403c04:	br	x17

0000000000403c08 <strlen@plt>:
  403c08:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c0c:	ldr	x17, [x16, #3848]
  403c10:	add	x16, x16, #0xf08
  403c14:	br	x17

0000000000403c18 <cg_is_legacy_wanted@plt>:
  403c18:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c1c:	ldr	x17, [x16, #3856]
  403c20:	add	x16, x16, #0xf10
  403c24:	br	x17

0000000000403c28 <cg_kernel_controllers@plt>:
  403c28:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c2c:	ldr	x17, [x16, #3864]
  403c30:	add	x16, x16, #0xf18
  403c34:	br	x17

0000000000403c38 <internal_hashmap_first_key_and_value@plt>:
  403c38:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c3c:	ldr	x17, [x16, #3872]
  403c40:	add	x16, x16, #0xf20
  403c44:	br	x17

0000000000403c48 <strjoin_real@plt>:
  403c48:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c4c:	ldr	x17, [x16, #3880]
  403c50:	add	x16, x16, #0xf28
  403c54:	br	x17

0000000000403c58 <path_join_internal@plt>:
  403c58:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c5c:	ldr	x17, [x16, #3888]
  403c60:	add	x16, x16, #0xf30
  403c64:	br	x17

0000000000403c68 <label_fix@plt>:
  403c68:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c6c:	ldr	x17, [x16, #3896]
  403c70:	add	x16, x16, #0xf38
  403c74:	br	x17

0000000000403c78 <path_is_mount_point@plt>:
  403c78:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c7c:	ldr	x17, [x16, #3904]
  403c80:	add	x16, x16, #0xf40
  403c84:	br	x17

0000000000403c88 <mkdir_p_label@plt>:
  403c88:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c8c:	ldr	x17, [x16, #3912]
  403c90:	add	x16, x16, #0xf48
  403c94:	br	x17

0000000000403c98 <mkdir_p@plt>:
  403c98:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403c9c:	ldr	x17, [x16, #3920]
  403ca0:	add	x16, x16, #0xf50
  403ca4:	br	x17

0000000000403ca8 <umount@plt>:
  403ca8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403cac:	ldr	x17, [x16, #3928]
  403cb0:	add	x16, x16, #0xf58
  403cb4:	br	x17

0000000000403cb8 <rmdir@plt>:
  403cb8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403cbc:	ldr	x17, [x16, #3936]
  403cc0:	add	x16, x16, #0xf60
  403cc4:	br	x17

0000000000403cc8 <stpcpy@plt>:
  403cc8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403ccc:	ldr	x17, [x16, #3944]
  403cd0:	add	x16, x16, #0xf68
  403cd4:	br	x17

0000000000403cd8 <symlink_idempotent@plt>:
  403cd8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403cdc:	ldr	x17, [x16, #3952]
  403ce0:	add	x16, x16, #0xf70
  403ce4:	br	x17

0000000000403ce8 <nftw64@plt>:
  403ce8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403cec:	ldr	x17, [x16, #3960]
  403cf0:	add	x16, x16, #0xf78
  403cf4:	br	x17

0000000000403cf8 <cg_all_unified@plt>:
  403cf8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403cfc:	ldr	x17, [x16, #3968]
  403d00:	add	x16, x16, #0xf80
  403d04:	br	x17

0000000000403d08 <statfs64@plt>:
  403d08:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d0c:	ldr	x17, [x16, #3976]
  403d10:	add	x16, x16, #0xf88
  403d14:	br	x17

0000000000403d18 <conf_files_list@plt>:
  403d18:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d1c:	ldr	x17, [x16, #3984]
  403d20:	add	x16, x16, #0xf90
  403d24:	br	x17

0000000000403d28 <unlink@plt>:
  403d28:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d2c:	ldr	x17, [x16, #3992]
  403d30:	add	x16, x16, #0xf98
  403d34:	br	x17

0000000000403d38 <path_simplify@plt>:
  403d38:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d3c:	ldr	x17, [x16, #4000]
  403d40:	add	x16, x16, #0xfa0
  403d44:	br	x17

0000000000403d48 <path_is_normalized@plt>:
  403d48:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d4c:	ldr	x17, [x16, #4008]
  403d50:	add	x16, x16, #0xfa8
  403d54:	br	x17

0000000000403d58 <path_is_absolute@plt>:
  403d58:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d5c:	ldr	x17, [x16, #4016]
  403d60:	add	x16, x16, #0xfb0
  403d64:	br	x17

0000000000403d68 <strv_free@plt>:
  403d68:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d6c:	ldr	x17, [x16, #4024]
  403d70:	add	x16, x16, #0xfb8
  403d74:	br	x17

0000000000403d78 <format_timespan@plt>:
  403d78:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d7c:	ldr	x17, [x16, #4032]
  403d80:	add	x16, x16, #0xfc0
  403d84:	br	x17

0000000000403d88 <dev_setup@plt>:
  403d88:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d8c:	ldr	x17, [x16, #4040]
  403d90:	add	x16, x16, #0xfc8
  403d94:	br	x17

0000000000403d98 <mkdir_label@plt>:
  403d98:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403d9c:	ldr	x17, [x16, #4048]
  403da0:	add	x16, x16, #0xfd0
  403da4:	br	x17

0000000000403da8 <make_inaccessible_nodes@plt>:
  403da8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403dac:	ldr	x17, [x16, #4056]
  403db0:	add	x16, x16, #0xfd8
  403db4:	br	x17

0000000000403db8 <mac_smack_use@plt>:
  403db8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403dbc:	ldr	x17, [x16, #4064]
  403dc0:	add	x16, x16, #0xfe0
  403dc4:	br	x17

0000000000403dc8 <cg_is_unified_wanted@plt>:
  403dc8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403dcc:	ldr	x17, [x16, #4072]
  403dd0:	add	x16, x16, #0xfe8
  403dd4:	br	x17

0000000000403dd8 <cg_is_hybrid_wanted@plt>:
  403dd8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403ddc:	ldr	x17, [x16, #4080]
  403de0:	add	x16, x16, #0xff0
  403de4:	br	x17

0000000000403de8 <is_efi_boot@plt>:
  403de8:	adrp	x16, 41f000 <__FRAME_END__+0x142a8>
  403dec:	ldr	x17, [x16, #4088]
  403df0:	add	x16, x16, #0xff8
  403df4:	br	x17

Disassembly of section .text:

0000000000403df8 <_start>:
  403df8:	mov	x29, #0x0                   	// #0
  403dfc:	mov	x30, #0x0                   	// #0
  403e00:	mov	x5, x0
  403e04:	ldr	x1, [sp]
  403e08:	add	x2, sp, #0x8
  403e0c:	mov	x6, sp
  403e10:	movz	x0, #0x0, lsl #48
  403e14:	movk	x0, #0x0, lsl #32
  403e18:	movk	x0, #0x40, lsl #16
  403e1c:	movk	x0, #0x3f04
  403e20:	movz	x3, #0x0, lsl #48
  403e24:	movk	x3, #0x0, lsl #32
  403e28:	movk	x3, #0x40, lsl #16
  403e2c:	movk	x3, #0x8dc8
  403e30:	movz	x4, #0x0, lsl #48
  403e34:	movk	x4, #0x0, lsl #32
  403e38:	movk	x4, #0x40, lsl #16
  403e3c:	movk	x4, #0x8e48
  403e40:	bl	4033d8 <__libc_start_main@plt>
  403e44:	bl	4033e8 <abort@plt>

0000000000403e48 <call_weak_fn>:
  403e48:	adrp	x0, 41f000 <__FRAME_END__+0x142a8>
  403e4c:	ldr	x0, [x0, #2760]
  403e50:	cbz	x0, 403e58 <call_weak_fn+0x10>
  403e54:	b	4033f8 <__gmon_start__@plt>
  403e58:	ret
  403e5c:	udf	#0

0000000000403e60 <deregister_tm_clones>:
  403e60:	adrp	x0, 420000 <arg_timeout>
  403e64:	add	x0, x0, #0x0
  403e68:	adrp	x1, 420000 <arg_timeout>
  403e6c:	add	x1, x1, #0x0
  403e70:	cmp	x1, x0
  403e74:	b.eq	403e8c <deregister_tm_clones+0x2c>  // b.none
  403e78:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  403e7c:	ldr	x1, [x1, #3680]
  403e80:	cbz	x1, 403e8c <deregister_tm_clones+0x2c>
  403e84:	mov	x16, x1
  403e88:	br	x16
  403e8c:	ret

0000000000403e90 <register_tm_clones>:
  403e90:	adrp	x0, 420000 <arg_timeout>
  403e94:	add	x0, x0, #0x0
  403e98:	adrp	x1, 420000 <arg_timeout>
  403e9c:	add	x1, x1, #0x0
  403ea0:	sub	x1, x1, x0
  403ea4:	lsr	x2, x1, #63
  403ea8:	add	x1, x2, x1, asr #3
  403eac:	cmp	xzr, x1, asr #1
  403eb0:	asr	x1, x1, #1
  403eb4:	b.eq	403ecc <register_tm_clones+0x3c>  // b.none
  403eb8:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  403ebc:	ldr	x2, [x2, #3688]
  403ec0:	cbz	x2, 403ecc <register_tm_clones+0x3c>
  403ec4:	mov	x16, x2
  403ec8:	br	x16
  403ecc:	ret

0000000000403ed0 <__do_global_dtors_aux>:
  403ed0:	stp	x29, x30, [sp, #-32]!
  403ed4:	mov	x29, sp
  403ed8:	str	x19, [sp, #16]
  403edc:	adrp	x19, 420000 <arg_timeout>
  403ee0:	ldrb	w0, [x19, #8]
  403ee4:	cbnz	w0, 403ef4 <__do_global_dtors_aux+0x24>
  403ee8:	bl	403e60 <deregister_tm_clones>
  403eec:	mov	w0, #0x1                   	// #1
  403ef0:	strb	w0, [x19, #8]
  403ef4:	ldr	x19, [sp, #16]
  403ef8:	ldp	x29, x30, [sp], #32
  403efc:	ret

0000000000403f00 <frame_dummy>:
  403f00:	b	403e90 <register_tm_clones>

0000000000403f04 <main>:
  403f04:	sub	sp, sp, #0xe0
  403f08:	stp	x29, x30, [sp, #128]
  403f0c:	stp	x20, x19, [sp, #208]
  403f10:	add	x29, sp, #0x80
  403f14:	mov	w20, w0
  403f18:	mov	w0, wzr
  403f1c:	stp	x28, x27, [sp, #144]
  403f20:	stp	x26, x25, [sp, #160]
  403f24:	stp	x24, x23, [sp, #176]
  403f28:	stp	x22, x21, [sp, #192]
  403f2c:	mov	x19, x1
  403f30:	stur	xzr, [x29, #-24]
  403f34:	bl	403408 <log_set_target@plt>
  403f38:	mov	w0, #0x1                   	// #1
  403f3c:	bl	403418 <log_set_prohibit_ipc@plt>
  403f40:	mov	w0, wzr
  403f44:	bl	403428 <log_parse_environment_realm@plt>
  403f48:	cmp	w20, #0x0
  403f4c:	b.le	4051e8 <main+0x12e4>
  403f50:	cbz	x19, 40520c <main+0x1308>
  403f54:	adrp	x2, 409000 <parse_argv.options+0x160>
  403f58:	adrp	x3, 408000 <mount_cgroup_controllers+0x200>
  403f5c:	add	x2, x2, #0x59b
  403f60:	add	x3, x3, #0xea0
  403f64:	mov	w0, w20
  403f68:	mov	x1, x19
  403f6c:	mov	x4, xzr
  403f70:	bl	403438 <getopt_long@plt>
  403f74:	str	x19, [sp, #40]
  403f78:	tbnz	w0, #31, 40421c <main+0x318>
  403f7c:	adrp	x21, 408000 <mount_cgroup_controllers+0x200>
  403f80:	adrp	x22, 409000 <parse_argv.options+0x160>
  403f84:	adrp	x24, 409000 <parse_argv.options+0x160>
  403f88:	adrp	x25, 408000 <mount_cgroup_controllers+0x200>
  403f8c:	adrp	x28, 408000 <mount_cgroup_controllers+0x200>
  403f90:	adrp	x27, 420000 <arg_timeout>
  403f94:	adrp	x19, 420000 <arg_timeout>
  403f98:	adrp	x23, 420000 <arg_timeout>
  403f9c:	add	x21, x21, #0xfa0
  403fa0:	add	x22, x22, #0x59d
  403fa4:	add	x24, x24, #0x59b
  403fa8:	add	x25, x25, #0xea0
  403fac:	add	x28, x28, #0xe70
  403fb0:	add	x27, x27, #0x0
  403fb4:	b	403fdc <main+0xd8>
  403fb8:	mov	w0, #0x1                   	// #1
  403fbc:	bl	403448 <log_show_color@plt>
  403fc0:	ldr	x1, [sp, #40]
  403fc4:	mov	w0, w20
  403fc8:	mov	x2, x24
  403fcc:	mov	x3, x25
  403fd0:	mov	x4, xzr
  403fd4:	bl	403438 <getopt_long@plt>
  403fd8:	tbnz	w0, #31, 40421c <main+0x318>
  403fdc:	sub	w8, w0, #0x100
  403fe0:	cmp	w8, #0x5
  403fe4:	b.hi	404044 <main+0x140>  // b.pmore
  403fe8:	adr	x9, 403ff8 <main+0xf4>
  403fec:	ldrb	w10, [x28, x8]
  403ff0:	add	x9, x9, x10, lsl #2
  403ff4:	br	x9
  403ff8:	ldr	x1, [x23, #32]
  403ffc:	mov	w0, wzr
  404000:	bl	403458 <log_set_max_level_from_string_realm@plt>
  404004:	tbz	w0, #31, 403fc0 <main+0xbc>
  404008:	mov	w26, w0
  40400c:	mov	w0, wzr
  404010:	bl	403468 <log_get_max_level_realm@plt>
  404014:	cmp	w0, #0x3
  404018:	b.lt	403fc0 <main+0xbc>  // b.tstop
  40401c:	ldr	x6, [x23, #32]
  404020:	adrp	x5, 409000 <parse_argv.options+0x160>
  404024:	mov	w0, #0x3                   	// #3
  404028:	mov	w3, #0x51                  	// #81
  40402c:	mov	w1, w26
  404030:	mov	x2, x21
  404034:	mov	x4, x22
  404038:	add	x5, x5, #0x5a8
  40403c:	bl	403478 <log_internal_realm@plt>
  404040:	b	403fc0 <main+0xbc>
  404044:	cmp	w0, #0x1
  404048:	b.ne	405170 <main+0x126c>  // b.any
  40404c:	ldr	x8, [x19, #24]
  404050:	cbz	x8, 404204 <main+0x300>
  404054:	mov	w0, wzr
  404058:	bl	403468 <log_get_max_level_realm@plt>
  40405c:	cmp	w0, #0x3
  404060:	b.lt	403fc0 <main+0xbc>  // b.tstop
  404064:	adrp	x5, 409000 <parse_argv.options+0x160>
  404068:	mov	w0, #0x3                   	// #3
  40406c:	mov	w3, #0x83                  	// #131
  404070:	mov	w1, wzr
  404074:	mov	x2, x21
  404078:	mov	x4, x22
  40407c:	add	x5, x5, #0x6c5
  404080:	bl	403478 <log_internal_realm@plt>
  404084:	b	403fc0 <main+0xbc>
  404088:	ldr	x0, [x23, #32]
  40408c:	adrp	x1, 420000 <arg_timeout>
  404090:	add	x1, x1, #0x10
  404094:	bl	403488 <safe_atou8@plt>
  404098:	tbz	w0, #31, 403fc0 <main+0xbc>
  40409c:	mov	w26, w0
  4040a0:	mov	w0, wzr
  4040a4:	bl	403468 <log_get_max_level_realm@plt>
  4040a8:	cmp	w0, #0x3
  4040ac:	b.lt	403fc0 <main+0xbc>  // b.tstop
  4040b0:	ldr	x6, [x23, #32]
  4040b4:	adrp	x5, 409000 <parse_argv.options+0x160>
  4040b8:	mov	w0, #0x3                   	// #3
  4040bc:	mov	w3, #0x74                  	// #116
  4040c0:	mov	w1, w26
  4040c4:	mov	x2, x21
  4040c8:	mov	x4, x22
  4040cc:	add	x5, x5, #0x668
  4040d0:	bl	403478 <log_internal_realm@plt>
  4040d4:	b	403fc0 <main+0xbc>
  4040d8:	ldr	x0, [x23, #32]
  4040dc:	cbz	x0, 403fb8 <main+0xb4>
  4040e0:	bl	403498 <log_show_color_from_string@plt>
  4040e4:	tbz	w0, #31, 403fc0 <main+0xbc>
  4040e8:	mov	w26, w0
  4040ec:	mov	w0, wzr
  4040f0:	bl	403468 <log_get_max_level_realm@plt>
  4040f4:	cmp	w0, #0x3
  4040f8:	b.lt	403fc0 <main+0xbc>  // b.tstop
  4040fc:	ldr	x6, [x23, #32]
  404100:	adrp	x5, 409000 <parse_argv.options+0x160>
  404104:	mov	w0, #0x3                   	// #3
  404108:	mov	w3, #0x61                  	// #97
  40410c:	mov	w1, w26
  404110:	mov	x2, x21
  404114:	mov	x4, x22
  404118:	add	x5, x5, #0x5ff
  40411c:	bl	403478 <log_internal_realm@plt>
  404120:	b	403fc0 <main+0xbc>
  404124:	ldr	x0, [x23, #32]
  404128:	cbz	x0, 404210 <main+0x30c>
  40412c:	bl	4034a8 <log_show_location_from_string@plt>
  404130:	tbz	w0, #31, 403fc0 <main+0xbc>
  404134:	mov	w26, w0
  404138:	mov	w0, wzr
  40413c:	bl	403468 <log_get_max_level_realm@plt>
  404140:	cmp	w0, #0x3
  404144:	b.lt	403fc0 <main+0xbc>  // b.tstop
  404148:	ldr	x6, [x23, #32]
  40414c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404150:	mov	w0, #0x3                   	// #3
  404154:	mov	w3, #0x6b                  	// #107
  404158:	mov	w1, w26
  40415c:	mov	x2, x21
  404160:	mov	x4, x22
  404164:	add	x5, x5, #0x632
  404168:	bl	403478 <log_internal_realm@plt>
  40416c:	b	403fc0 <main+0xbc>
  404170:	ldr	x0, [x23, #32]
  404174:	bl	4034b8 <log_set_target_from_string@plt>
  404178:	tbz	w0, #31, 403fc0 <main+0xbc>
  40417c:	mov	w26, w0
  404180:	mov	w0, wzr
  404184:	bl	403468 <log_get_max_level_realm@plt>
  404188:	cmp	w0, #0x3
  40418c:	b.lt	403fc0 <main+0xbc>  // b.tstop
  404190:	ldr	x6, [x23, #32]
  404194:	adrp	x5, 409000 <parse_argv.options+0x160>
  404198:	mov	w0, #0x3                   	// #3
  40419c:	mov	w3, #0x58                  	// #88
  4041a0:	mov	w1, w26
  4041a4:	mov	x2, x21
  4041a8:	mov	x4, x22
  4041ac:	add	x5, x5, #0x5d3
  4041b0:	bl	403478 <log_internal_realm@plt>
  4041b4:	b	403fc0 <main+0xbc>
  4041b8:	ldr	x0, [x23, #32]
  4041bc:	mov	x1, x27
  4041c0:	bl	4034c8 <parse_sec@plt>
  4041c4:	tbz	w0, #31, 403fc0 <main+0xbc>
  4041c8:	mov	w26, w0
  4041cc:	mov	w0, wzr
  4041d0:	bl	403468 <log_get_max_level_realm@plt>
  4041d4:	cmp	w0, #0x3
  4041d8:	b.lt	403fc0 <main+0xbc>  // b.tstop
  4041dc:	ldr	x6, [x23, #32]
  4041e0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4041e4:	mov	w0, #0x3                   	// #3
  4041e8:	mov	w3, #0x7b                  	// #123
  4041ec:	mov	w1, w26
  4041f0:	mov	x2, x21
  4041f4:	mov	x4, x22
  4041f8:	add	x5, x5, #0x693
  4041fc:	bl	403478 <log_internal_realm@plt>
  404200:	b	403fc0 <main+0xbc>
  404204:	ldr	x8, [x23, #32]
  404208:	str	x8, [x19, #24]
  40420c:	b	403fc0 <main+0xbc>
  404210:	mov	w0, #0x1                   	// #1
  404214:	bl	4034d8 <log_show_location@plt>
  404218:	b	403fc0 <main+0xbc>
  40421c:	adrp	x19, 420000 <arg_timeout>
  404220:	ldr	x8, [x19, #24]
  404224:	cbnz	x8, 404268 <main+0x364>
  404228:	mov	w0, wzr
  40422c:	bl	403468 <log_get_max_level_realm@plt>
  404230:	cmp	w0, #0x3
  404234:	b.lt	405178 <main+0x1274>  // b.tstop
  404238:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  40423c:	adrp	x4, 409000 <parse_argv.options+0x160>
  404240:	adrp	x5, 409000 <parse_argv.options+0x160>
  404244:	mov	w1, #0x16                  	// #22
  404248:	add	x2, x2, #0xfa0
  40424c:	add	x4, x4, #0x59d
  404250:	add	x5, x5, #0x6f7
  404254:	mov	w0, #0x3                   	// #3
  404258:	movk	w1, #0x4000, lsl #16
  40425c:	mov	w3, #0x8f                  	// #143
  404260:	bl	403478 <log_internal_realm@plt>
  404264:	tbnz	w0, #31, 4052b0 <main+0x13ac>
  404268:	bl	4034e8 <log_open@plt>
  40426c:	mov	w0, #0x12                  	// #18
  404270:	bl	4034f8 <umask@plt>
  404274:	bl	403508 <getpid_cached@plt>
  404278:	cmp	w0, #0x1
  40427c:	b.ne	405230 <main+0x132c>  // b.any
  404280:	ldr	x20, [x19, #24]
  404284:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  404288:	add	x1, x1, #0xfdb
  40428c:	mov	x0, x20
  404290:	bl	403518 <strcmp@plt>
  404294:	mov	w8, #0x4567                	// #17767
  404298:	movk	w8, #0x123, lsl #16
  40429c:	cbz	w0, 404314 <main+0x410>
  4042a0:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  4042a4:	add	x1, x1, #0xfe2
  4042a8:	mov	x0, x20
  4042ac:	bl	403518 <strcmp@plt>
  4042b0:	mov	w8, #0xfedc                	// #65244
  4042b4:	movk	w8, #0x4321, lsl #16
  4042b8:	cbz	w0, 404314 <main+0x410>
  4042bc:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  4042c0:	add	x1, x1, #0xfeb
  4042c4:	mov	x0, x20
  4042c8:	bl	403518 <strcmp@plt>
  4042cc:	cbz	w0, 404300 <main+0x3fc>
  4042d0:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  4042d4:	add	x1, x1, #0xff0
  4042d8:	mov	x0, x20
  4042dc:	bl	403518 <strcmp@plt>
  4042e0:	cbz	w0, 40430c <main+0x408>
  4042e4:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  4042e8:	add	x1, x1, #0xff6
  4042ec:	mov	x0, x20
  4042f0:	bl	403518 <strcmp@plt>
  4042f4:	cbnz	w0, 4052f0 <main+0x13ec>
  4042f8:	mov	w8, wzr
  4042fc:	b	404314 <main+0x410>
  404300:	mov	w8, #0x123                 	// #291
  404304:	movk	w8, #0xcdef, lsl #16
  404308:	b	404314 <main+0x410>
  40430c:	mov	w8, #0x4543                	// #17731
  404310:	movk	w8, #0x4558, lsl #16
  404314:	sub	x0, x29, #0x18
  404318:	str	w8, [sp, #28]
  40431c:	bl	403528 <cg_get_root_path@plt>
  404320:	bl	403538 <detect_container@plt>
  404324:	mov	w23, w0
  404328:	cmp	w0, #0x0
  40432c:	b.le	404474 <main+0x570>
  404330:	adrp	x0, 409000 <parse_argv.options+0x160>
  404334:	add	x0, x0, #0x10
  404338:	bl	403548 <getenv@plt>
  40433c:	mov	x22, x0
  404340:	adrp	x0, 409000 <parse_argv.options+0x160>
  404344:	add	x0, x0, #0x1e
  404348:	bl	403548 <getenv@plt>
  40434c:	cbz	x0, 40439c <main+0x498>
  404350:	mov	x20, x0
  404354:	bl	403558 <watchdog_set_device@plt>
  404358:	tbz	w0, #31, 40439c <main+0x498>
  40435c:	mov	w21, w0
  404360:	mov	w0, wzr
  404364:	bl	403468 <log_get_max_level_realm@plt>
  404368:	cmp	w0, #0x4
  40436c:	b.lt	40439c <main+0x498>  // b.tstop
  404370:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404374:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404378:	adrp	x5, 409000 <parse_argv.options+0x160>
  40437c:	add	x2, x2, #0xfa0
  404380:	add	x4, x4, #0xfb8
  404384:	add	x5, x5, #0x2e
  404388:	mov	w0, #0x4                   	// #4
  40438c:	mov	w3, #0x16a                 	// #362
  404390:	mov	w1, w21
  404394:	mov	x6, x20
  404398:	bl	403478 <log_internal_realm@plt>
  40439c:	mov	w0, #0x3                   	// #3
  4043a0:	bl	403568 <mlockall@plt>
  4043a4:	cmp	w23, #0x0
  4043a8:	b.gt	4043b0 <main+0x4ac>
  4043ac:	bl	405360 <sync_with_progress>
  4043b0:	bl	403578 <disable_coredumps@plt>
  4043b4:	mov	w0, wzr
  4043b8:	bl	403468 <log_get_max_level_realm@plt>
  4043bc:	cmp	w0, #0x6
  4043c0:	b.lt	4043ec <main+0x4e8>  // b.tstop
  4043c4:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4043c8:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  4043cc:	adrp	x5, 409000 <parse_argv.options+0x160>
  4043d0:	add	x2, x2, #0xfa0
  4043d4:	add	x4, x4, #0xfb8
  4043d8:	add	x5, x5, #0x60
  4043dc:	mov	w0, #0x6                   	// #6
  4043e0:	mov	w3, #0x179                 	// #377
  4043e4:	mov	w1, wzr
  4043e8:	bl	403478 <log_internal_realm@plt>
  4043ec:	adrp	x19, 420000 <arg_timeout>
  4043f0:	ldr	x3, [x19]
  4043f4:	mov	w0, #0xf                   	// #15
  4043f8:	mov	w1, #0x1                   	// #1
  4043fc:	mov	w2, #0x1                   	// #1
  404400:	bl	407014 <broadcast_signal>
  404404:	mov	w0, wzr
  404408:	bl	403468 <log_get_max_level_realm@plt>
  40440c:	cmp	w0, #0x6
  404410:	b.lt	40443c <main+0x538>  // b.tstop
  404414:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404418:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  40441c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404420:	add	x2, x2, #0xfa0
  404424:	add	x4, x4, #0xfb8
  404428:	add	x5, x5, #0x8a
  40442c:	mov	w0, #0x6                   	// #6
  404430:	mov	w3, #0x17c                 	// #380
  404434:	mov	w1, wzr
  404438:	bl	403478 <log_internal_realm@plt>
  40443c:	ldr	x3, [x19]
  404440:	cmp	w23, #0x1
  404444:	mov	w0, #0x9                   	// #9
  404448:	mov	w1, #0x1                   	// #1
  40444c:	mov	w2, wzr
  404450:	cset	w19, lt  // lt = tstop
  404454:	bl	407014 <broadcast_signal>
  404458:	cmp	w23, #0x0
  40445c:	mov	w26, wzr
  404460:	b.gt	404508 <main+0x604>
  404464:	bl	403588 <in_initrd@plt>
  404468:	tbz	w0, #0, 4044f0 <main+0x5ec>
  40446c:	mov	w26, wzr
  404470:	b	404508 <main+0x604>
  404474:	bl	403598 <log_get_target@plt>
  404478:	cmp	w0, #0x7
  40447c:	b.hi	404330 <main+0x42c>  // b.pmore
  404480:	mov	w8, #0x1                   	// #1
  404484:	lsl	w8, w8, w0
  404488:	mov	w9, #0xd4                  	// #212
  40448c:	tst	w8, w9
  404490:	b.eq	404330 <main+0x42c>  // b.none
  404494:	adrp	x0, 409000 <parse_argv.options+0x160>
  404498:	add	x0, x0, #0x70e
  40449c:	sub	x1, x29, #0x30
  4044a0:	stur	xzr, [x29, #-48]
  4044a4:	str	xzr, [sp, #48]
  4044a8:	bl	4035a8 <sysctl_read@plt>
  4044ac:	tbnz	w0, #31, 404fdc <main+0x10d8>
  4044b0:	ldur	x8, [x29, #-48]
  4044b4:	sub	x0, x29, #0x10
  4044b8:	add	x1, sp, #0x30
  4044bc:	mov	x2, xzr
  4044c0:	mov	w3, wzr
  4044c4:	stur	x8, [x29, #-16]
  4044c8:	bl	4035b8 <extract_first_word@plt>
  4044cc:	mov	w20, w0
  4044d0:	tbnz	w0, #31, 405014 <main+0x1110>
  4044d4:	cbz	w20, 405060 <main+0x115c>
  4044d8:	ldr	x0, [sp, #48]
  4044dc:	sub	x1, x29, #0x4
  4044e0:	bl	4035c8 <safe_atoi@plt>
  4044e4:	tbnz	w0, #31, 40509c <main+0x1198>
  4044e8:	ldur	w20, [x29, #-4]
  4044ec:	b	4050f0 <main+0x11ec>
  4044f0:	adrp	x0, 409000 <parse_argv.options+0x160>
  4044f4:	add	x0, x0, #0xb4
  4044f8:	mov	w1, #0x1                   	// #1
  4044fc:	bl	4035d8 <access@plt>
  404500:	cmp	w0, #0x0
  404504:	cset	w26, eq  // eq = none
  404508:	adrp	x24, 408000 <mount_cgroup_controllers+0x200>
  40450c:	adrp	x25, 408000 <mount_cgroup_controllers+0x200>
  404510:	stp	w23, w19, [sp, #32]
  404514:	mov	w23, #0x6                   	// #6
  404518:	add	x24, x24, #0xfa0
  40451c:	add	x25, x25, #0xfb8
  404520:	mov	w21, w19
  404524:	mov	w28, w19
  404528:	mov	w27, w19
  40452c:	b	404534 <main+0x630>
  404530:	mov	w23, #0x3                   	// #3
  404534:	sturb	wzr, [x29, #-48]
  404538:	cbz	x22, 404540 <main+0x63c>
  40453c:	bl	4035e8 <watchdog_ping@plt>
  404540:	ldur	x1, [x29, #-24]
  404544:	cbz	x1, 404558 <main+0x654>
  404548:	adrp	x0, 409000 <parse_argv.options+0x160>
  40454c:	add	x0, x0, #0xcc
  404550:	mov	w2, wzr
  404554:	bl	4035f8 <cg_trim@plt>
  404558:	tbz	w19, #0, 4045e0 <main+0x6dc>
  40455c:	mov	w0, wzr
  404560:	bl	403468 <log_get_max_level_realm@plt>
  404564:	cmp	w0, #0x6
  404568:	b.lt	40458c <main+0x688>  // b.tstop
  40456c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404570:	mov	w0, #0x6                   	// #6
  404574:	mov	w3, #0x194                 	// #404
  404578:	mov	w1, wzr
  40457c:	mov	x2, x24
  404580:	mov	x4, x25
  404584:	add	x5, x5, #0xd5
  404588:	bl	403478 <log_internal_realm@plt>
  40458c:	sub	x0, x29, #0x30
  404590:	mov	w1, w23
  404594:	bl	405fac <umount_all>
  404598:	cbz	w0, 404674 <main+0x770>
  40459c:	mov	w20, w0
  4045a0:	mov	w0, wzr
  4045a4:	bl	403468 <log_get_max_level_realm@plt>
  4045a8:	cmp	w20, #0x1
  4045ac:	b.lt	4047a4 <main+0x8a0>  // b.tstop
  4045b0:	cmp	w0, #0x6
  4045b4:	b.lt	4047cc <main+0x8c8>  // b.tstop
  4045b8:	adrp	x5, 409000 <parse_argv.options+0x160>
  4045bc:	mov	w0, #0x6                   	// #6
  4045c0:	mov	w3, #0x19a                 	// #410
  4045c4:	mov	w1, wzr
  4045c8:	mov	x2, x24
  4045cc:	mov	x4, x25
  4045d0:	add	x5, x5, #0x109
  4045d4:	mov	w6, w20
  4045d8:	bl	403478 <log_internal_realm@plt>
  4045dc:	b	4047cc <main+0x8c8>
  4045e0:	mov	w19, wzr
  4045e4:	tbnz	w27, #0, 4046ac <main+0x7a8>
  4045e8:	mov	w27, wzr
  4045ec:	tbz	w28, #0, 40483c <main+0x938>
  4045f0:	mov	w0, wzr
  4045f4:	bl	403468 <log_get_max_level_realm@plt>
  4045f8:	cmp	w0, #0x6
  4045fc:	b.lt	404620 <main+0x71c>  // b.tstop
  404600:	adrp	x5, 409000 <parse_argv.options+0x160>
  404604:	mov	w0, #0x6                   	// #6
  404608:	mov	w3, #0x1ac                 	// #428
  40460c:	mov	w1, wzr
  404610:	mov	x2, x24
  404614:	mov	x4, x25
  404618:	add	x5, x5, #0x1c3
  40461c:	bl	403478 <log_internal_realm@plt>
  404620:	sub	x0, x29, #0x30
  404624:	mov	w1, w23
  404628:	bl	4067e0 <loopback_detach_all>
  40462c:	cbz	w0, 40472c <main+0x828>
  404630:	mov	w20, w0
  404634:	mov	w0, wzr
  404638:	bl	403468 <log_get_max_level_realm@plt>
  40463c:	cmp	w20, #0x1
  404640:	b.lt	4047d8 <main+0x8d4>  // b.tstop
  404644:	cmp	w0, #0x6
  404648:	b.lt	404800 <main+0x8fc>  // b.tstop
  40464c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404650:	mov	w0, #0x6                   	// #6
  404654:	mov	w3, #0x1b2                 	// #434
  404658:	mov	w1, wzr
  40465c:	mov	x2, x24
  404660:	mov	x4, x25
  404664:	add	x5, x5, #0x1f6
  404668:	mov	w6, w20
  40466c:	bl	403478 <log_internal_realm@plt>
  404670:	b	404800 <main+0x8fc>
  404674:	bl	403468 <log_get_max_level_realm@plt>
  404678:	cmp	w0, #0x6
  40467c:	mov	w19, wzr
  404680:	b.lt	4046a8 <main+0x7a4>  // b.tstop
  404684:	adrp	x5, 409000 <parse_argv.options+0x160>
  404688:	mov	w0, #0x6                   	// #6
  40468c:	mov	w3, #0x198                 	// #408
  404690:	mov	w1, wzr
  404694:	mov	x2, x24
  404698:	mov	x4, x25
  40469c:	add	x5, x5, #0xee
  4046a0:	bl	403478 <log_internal_realm@plt>
  4046a4:	mov	w19, wzr
  4046a8:	tbz	w27, #0, 4045e8 <main+0x6e4>
  4046ac:	mov	w0, wzr
  4046b0:	bl	403468 <log_get_max_level_realm@plt>
  4046b4:	cmp	w0, #0x6
  4046b8:	b.lt	4046dc <main+0x7d8>  // b.tstop
  4046bc:	adrp	x5, 409000 <parse_argv.options+0x160>
  4046c0:	mov	w0, #0x6                   	// #6
  4046c4:	mov	w3, #0x1a0                 	// #416
  4046c8:	mov	w1, wzr
  4046cc:	mov	x2, x24
  4046d0:	mov	x4, x25
  4046d4:	add	x5, x5, #0x155
  4046d8:	bl	403478 <log_internal_realm@plt>
  4046dc:	sub	x0, x29, #0x30
  4046e0:	bl	4065cc <swapoff_all>
  4046e4:	cbz	w0, 404768 <main+0x864>
  4046e8:	mov	w20, w0
  4046ec:	mov	w0, wzr
  4046f0:	bl	403468 <log_get_max_level_realm@plt>
  4046f4:	cmp	w20, #0x1
  4046f8:	b.lt	40480c <main+0x908>  // b.tstop
  4046fc:	cmp	w0, #0x6
  404700:	b.lt	404834 <main+0x930>  // b.tstop
  404704:	adrp	x5, 409000 <parse_argv.options+0x160>
  404708:	mov	w0, #0x6                   	// #6
  40470c:	mov	w3, #0x1a6                 	// #422
  404710:	mov	w1, wzr
  404714:	mov	x2, x24
  404718:	mov	x4, x25
  40471c:	add	x5, x5, #0x180
  404720:	mov	w6, w20
  404724:	bl	403478 <log_internal_realm@plt>
  404728:	b	404834 <main+0x930>
  40472c:	bl	403468 <log_get_max_level_realm@plt>
  404730:	cmp	w0, #0x6
  404734:	mov	w28, wzr
  404738:	b.lt	404840 <main+0x93c>  // b.tstop
  40473c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404740:	mov	w0, #0x6                   	// #6
  404744:	mov	w3, #0x1b0                 	// #432
  404748:	mov	w1, wzr
  40474c:	mov	x2, x24
  404750:	mov	x4, x25
  404754:	add	x5, x5, #0x1db
  404758:	bl	403478 <log_internal_realm@plt>
  40475c:	mov	w28, wzr
  404760:	tbnz	w21, #0, 404844 <main+0x940>
  404764:	b	4048f4 <main+0x9f0>
  404768:	bl	403468 <log_get_max_level_realm@plt>
  40476c:	cmp	w0, #0x6
  404770:	mov	w27, wzr
  404774:	b.lt	4045ec <main+0x6e8>  // b.tstop
  404778:	adrp	x5, 409000 <parse_argv.options+0x160>
  40477c:	mov	w0, #0x6                   	// #6
  404780:	mov	w3, #0x1a4                 	// #420
  404784:	mov	w1, wzr
  404788:	mov	x2, x24
  40478c:	mov	x4, x25
  404790:	add	x5, x5, #0x169
  404794:	bl	403478 <log_internal_realm@plt>
  404798:	mov	w27, wzr
  40479c:	tbnz	w28, #0, 4045f0 <main+0x6ec>
  4047a0:	b	40483c <main+0x938>
  4047a4:	cmp	w0, #0x3
  4047a8:	b.lt	4047cc <main+0x8c8>  // b.tstop
  4047ac:	adrp	x5, 409000 <parse_argv.options+0x160>
  4047b0:	mov	w0, #0x3                   	// #3
  4047b4:	mov	w3, #0x19c                 	// #412
  4047b8:	mov	w1, w20
  4047bc:	mov	x2, x24
  4047c0:	mov	x4, x25
  4047c4:	add	x5, x5, #0x132
  4047c8:	bl	403478 <log_internal_realm@plt>
  4047cc:	mov	w19, #0x1                   	// #1
  4047d0:	tbnz	w27, #0, 4046ac <main+0x7a8>
  4047d4:	b	4045e8 <main+0x6e4>
  4047d8:	cmp	w0, #0x3
  4047dc:	b.lt	404800 <main+0x8fc>  // b.tstop
  4047e0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4047e4:	mov	w0, #0x3                   	// #3
  4047e8:	mov	w3, #0x1b4                 	// #436
  4047ec:	mov	w1, w20
  4047f0:	mov	x2, x24
  4047f4:	mov	x4, x25
  4047f8:	add	x5, x5, #0x21e
  4047fc:	bl	403478 <log_internal_realm@plt>
  404800:	mov	w28, #0x1                   	// #1
  404804:	tbz	w21, #0, 4048f4 <main+0x9f0>
  404808:	b	404844 <main+0x940>
  40480c:	cmp	w0, #0x3
  404810:	b.lt	404834 <main+0x930>  // b.tstop
  404814:	adrp	x5, 409000 <parse_argv.options+0x160>
  404818:	mov	w0, #0x3                   	// #3
  40481c:	mov	w3, #0x1a8                 	// #424
  404820:	mov	w1, w20
  404824:	mov	x2, x24
  404828:	mov	x4, x25
  40482c:	add	x5, x5, #0x1a4
  404830:	bl	403478 <log_internal_realm@plt>
  404834:	mov	w27, #0x1                   	// #1
  404838:	tbnz	w28, #0, 4045f0 <main+0x6ec>
  40483c:	mov	w28, wzr
  404840:	tbz	w21, #0, 4048f4 <main+0x9f0>
  404844:	mov	w0, wzr
  404848:	bl	403468 <log_get_max_level_realm@plt>
  40484c:	cmp	w0, #0x6
  404850:	b.lt	404874 <main+0x970>  // b.tstop
  404854:	adrp	x5, 409000 <parse_argv.options+0x160>
  404858:	mov	w0, #0x6                   	// #6
  40485c:	mov	w3, #0x1b8                 	// #440
  404860:	mov	w1, wzr
  404864:	mov	x2, x24
  404868:	mov	x4, x25
  40486c:	add	x5, x5, #0x240
  404870:	bl	403478 <log_internal_realm@plt>
  404874:	sub	x0, x29, #0x30
  404878:	mov	w1, w23
  40487c:	bl	406bdc <dm_detach_all>
  404880:	cbz	w0, 4048c8 <main+0x9c4>
  404884:	mov	w20, w0
  404888:	mov	w0, wzr
  40488c:	bl	403468 <log_get_max_level_realm@plt>
  404890:	cmp	w20, #0x1
  404894:	b.lt	404908 <main+0xa04>  // b.tstop
  404898:	cmp	w0, #0x6
  40489c:	b.lt	404930 <main+0xa2c>  // b.tstop
  4048a0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4048a4:	mov	w0, #0x6                   	// #6
  4048a8:	mov	w3, #0x1be                 	// #446
  4048ac:	mov	w1, wzr
  4048b0:	mov	x2, x24
  4048b4:	mov	x4, x25
  4048b8:	add	x5, x5, #0x26f
  4048bc:	mov	w6, w20
  4048c0:	bl	403478 <log_internal_realm@plt>
  4048c4:	b	404930 <main+0xa2c>
  4048c8:	bl	403468 <log_get_max_level_realm@plt>
  4048cc:	cmp	w0, #0x6
  4048d0:	b.lt	4048f4 <main+0x9f0>  // b.tstop
  4048d4:	adrp	x5, 409000 <parse_argv.options+0x160>
  4048d8:	mov	w0, #0x6                   	// #6
  4048dc:	mov	w3, #0x1bc                 	// #444
  4048e0:	mov	w1, wzr
  4048e4:	mov	x2, x24
  4048e8:	mov	x4, x25
  4048ec:	add	x5, x5, #0x256
  4048f0:	bl	403478 <log_internal_realm@plt>
  4048f4:	orr	w8, w19, w27
  4048f8:	orr	w8, w8, w28
  4048fc:	tbz	w8, #0, 4049dc <main+0xad8>
  404900:	mov	w21, wzr
  404904:	b	404934 <main+0xa30>
  404908:	cmp	w0, #0x3
  40490c:	b.lt	404930 <main+0xa2c>  // b.tstop
  404910:	adrp	x5, 409000 <parse_argv.options+0x160>
  404914:	mov	w0, #0x3                   	// #3
  404918:	mov	w3, #0x1c0                 	// #448
  40491c:	mov	w1, w20
  404920:	mov	x2, x24
  404924:	mov	x4, x25
  404928:	add	x5, x5, #0x295
  40492c:	bl	403478 <log_internal_realm@plt>
  404930:	mov	w21, #0x1                   	// #1
  404934:	ldurb	w20, [x29, #-48]
  404938:	cmp	w20, #0x0
  40493c:	cset	w8, ne  // ne = any
  404940:	cmp	w23, #0x6
  404944:	cset	w9, ne  // ne = any
  404948:	orr	w8, w9, w8
  40494c:	orr	w8, w26, w8
  404950:	cmp	w8, #0x1
  404954:	b.ne	404530 <main+0x62c>  // b.any
  404958:	mov	w0, wzr
  40495c:	bl	403468 <log_get_max_level_realm@plt>
  404960:	cbz	w20, 404a48 <main+0xb44>
  404964:	cmp	w0, #0x7
  404968:	b.lt	404534 <main+0x630>  // b.tstop
  40496c:	adrp	x9, 409000 <parse_argv.options+0x160>
  404970:	adrp	x8, 409000 <parse_argv.options+0x160>
  404974:	cmp	w19, #0x0
  404978:	add	x9, x9, #0x330
  40497c:	add	x8, x8, #0x321
  404980:	csel	x6, x8, x9, ne  // ne = any
  404984:	adrp	x8, 409000 <parse_argv.options+0x160>
  404988:	cmp	w27, #0x0
  40498c:	add	x8, x8, #0x331
  404990:	csel	x7, x8, x9, ne  // ne = any
  404994:	adrp	x8, 409000 <parse_argv.options+0x160>
  404998:	cmp	w28, #0x0
  40499c:	add	x8, x8, #0x340
  4049a0:	adrp	x10, 409000 <parse_argv.options+0x160>
  4049a4:	csel	x8, x8, x9, ne  // ne = any
  4049a8:	cmp	w21, #0x0
  4049ac:	add	x10, x10, #0x34f
  4049b0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4049b4:	csel	x9, x10, x9, ne  // ne = any
  4049b8:	mov	w0, #0x7                   	// #7
  4049bc:	mov	w3, #0x1e2                 	// #482
  4049c0:	mov	w1, wzr
  4049c4:	mov	x2, x24
  4049c8:	mov	x4, x25
  4049cc:	add	x5, x5, #0x35c
  4049d0:	stp	x8, x9, [sp]
  4049d4:	bl	403478 <log_internal_realm@plt>
  4049d8:	b	404534 <main+0x630>
  4049dc:	mov	w0, wzr
  4049e0:	bl	403468 <log_get_max_level_realm@plt>
  4049e4:	ldr	w25, [sp, #32]
  4049e8:	mov	w28, wzr
  4049ec:	mov	w27, wzr
  4049f0:	mov	w19, wzr
  4049f4:	mov	w22, wzr
  4049f8:	cmp	w0, #0x6
  4049fc:	mov	w21, wzr
  404a00:	adrp	x24, 420000 <arg_timeout>
  404a04:	b.lt	404ad0 <main+0xbcc>  // b.tstop
  404a08:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404a0c:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404a10:	adrp	x5, 409000 <parse_argv.options+0x160>
  404a14:	add	x2, x2, #0xfa0
  404a18:	add	x4, x4, #0xfb8
  404a1c:	add	x5, x5, #0x2b5
  404a20:	mov	w0, #0x6                   	// #6
  404a24:	mov	w3, #0x1c4                 	// #452
  404a28:	mov	w1, wzr
  404a2c:	bl	403478 <log_internal_realm@plt>
  404a30:	mov	w28, wzr
  404a34:	mov	w27, wzr
  404a38:	mov	w19, wzr
  404a3c:	mov	w22, wzr
  404a40:	mov	w21, wzr
  404a44:	b	404ad0 <main+0xbcc>
  404a48:	cmp	w0, #0x6
  404a4c:	b.lt	404ac4 <main+0xbc0>  // b.tstop
  404a50:	adrp	x9, 409000 <parse_argv.options+0x160>
  404a54:	adrp	x8, 409000 <parse_argv.options+0x160>
  404a58:	cmp	w19, #0x0
  404a5c:	add	x9, x9, #0x330
  404a60:	add	x8, x8, #0x321
  404a64:	csel	x6, x8, x9, ne  // ne = any
  404a68:	adrp	x8, 409000 <parse_argv.options+0x160>
  404a6c:	cmp	w27, #0x0
  404a70:	add	x8, x8, #0x331
  404a74:	csel	x7, x8, x9, ne  // ne = any
  404a78:	adrp	x8, 409000 <parse_argv.options+0x160>
  404a7c:	cmp	w28, #0x0
  404a80:	add	x8, x8, #0x340
  404a84:	adrp	x10, 409000 <parse_argv.options+0x160>
  404a88:	csel	x8, x8, x9, ne  // ne = any
  404a8c:	cmp	w21, #0x0
  404a90:	add	x10, x10, #0x34f
  404a94:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404a98:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404a9c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404aa0:	csel	x9, x10, x9, ne  // ne = any
  404aa4:	add	x2, x2, #0xfa0
  404aa8:	add	x4, x4, #0xfb8
  404aac:	add	x5, x5, #0x2f3
  404ab0:	mov	w0, #0x6                   	// #6
  404ab4:	mov	w3, #0x1da                 	// #474
  404ab8:	mov	w1, wzr
  404abc:	stp	x8, x9, [sp]
  404ac0:	bl	403478 <log_internal_realm@plt>
  404ac4:	ldr	w25, [sp, #32]
  404ac8:	mov	w22, #0x1                   	// #1
  404acc:	adrp	x24, 420000 <arg_timeout>
  404ad0:	mov	x0, xzr
  404ad4:	bl	403558 <watchdog_set_device@plt>
  404ad8:	ldr	x8, [x24, #24]
  404adc:	adrp	x0, 408000 <mount_cgroup_controllers+0x200>
  404ae0:	mov	w1, #0x4a80                	// #19072
  404ae4:	add	x0, x0, #0xe78
  404ae8:	sub	x4, x29, #0x30
  404aec:	movk	w1, #0x55d, lsl #16
  404af0:	mov	w6, #0x3                   	// #3
  404af4:	mov	x2, xzr
  404af8:	mov	x3, xzr
  404afc:	mov	x5, xzr
  404b00:	stp	xzr, x8, [x29, #-48]
  404b04:	stur	xzr, [x29, #-32]
  404b08:	bl	403608 <execute_directories@plt>
  404b0c:	bl	403618 <rlimit_nofile_safe@plt>
  404b10:	cbz	w26, 404cfc <main+0xdf8>
  404b14:	adrp	x0, 409000 <parse_argv.options+0x160>
  404b18:	add	x0, x0, #0xa6e
  404b1c:	mov	w3, #0x1000                	// #4096
  404b20:	mov	x1, x0
  404b24:	mov	x2, xzr
  404b28:	mov	x4, xzr
  404b2c:	bl	403628 <mount@plt>
  404b30:	tbnz	w0, #31, 404c14 <main+0xd10>
  404b34:	adrp	x1, 409000 <parse_argv.options+0x160>
  404b38:	add	x1, x1, #0xa6e
  404b3c:	mov	w3, #0x40000               	// #262144
  404b40:	mov	x0, xzr
  404b44:	mov	x2, xzr
  404b48:	mov	x4, xzr
  404b4c:	bl	403628 <mount@plt>
  404b50:	ldr	x23, [sp, #40]
  404b54:	tbnz	w0, #31, 404c64 <main+0xd60>
  404b58:	adrp	x0, 409000 <parse_argv.options+0x160>
  404b5c:	adrp	x1, 409000 <parse_argv.options+0x160>
  404b60:	add	x0, x0, #0xa6e
  404b64:	add	x1, x1, #0xafd
  404b68:	mov	w3, #0x1000                	// #4096
  404b6c:	mov	w2, wzr
  404b70:	bl	403638 <switch_root@plt>
  404b74:	mov	w20, w0
  404b78:	tbnz	w20, #31, 404cc4 <main+0xdc0>
  404b7c:	adrp	x8, 409000 <parse_argv.options+0x160>
  404b80:	add	x8, x8, #0x38f
  404b84:	str	x8, [x23]
  404b88:	bl	403648 <setsid@plt>
  404b8c:	bl	403658 <make_console_stdio@plt>
  404b90:	mov	w0, wzr
  404b94:	bl	403468 <log_get_max_level_realm@plt>
  404b98:	cmp	w0, #0x6
  404b9c:	b.lt	404bc8 <main+0xcc4>  // b.tstop
  404ba0:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404ba4:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404ba8:	adrp	x5, 409000 <parse_argv.options+0x160>
  404bac:	add	x2, x2, #0xfa0
  404bb0:	add	x4, x4, #0xfb8
  404bb4:	add	x5, x5, #0x399
  404bb8:	mov	w0, #0x6                   	// #6
  404bbc:	mov	w3, #0x1f8                 	// #504
  404bc0:	mov	w1, wzr
  404bc4:	bl	403478 <log_internal_realm@plt>
  404bc8:	adrp	x0, 409000 <parse_argv.options+0x160>
  404bcc:	add	x0, x0, #0x38f
  404bd0:	mov	x1, x23
  404bd4:	bl	403668 <execv@plt>
  404bd8:	mov	w0, wzr
  404bdc:	bl	403468 <log_get_max_level_realm@plt>
  404be0:	cmp	w0, #0x3
  404be4:	b.lt	404cfc <main+0xdf8>  // b.tstop
  404be8:	bl	403678 <__errno_location@plt>
  404bec:	ldr	w1, [x0]
  404bf0:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404bf4:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404bf8:	adrp	x5, 409000 <parse_argv.options+0x160>
  404bfc:	add	x2, x2, #0xfa0
  404c00:	add	x4, x4, #0xfb8
  404c04:	add	x5, x5, #0x3d6
  404c08:	mov	w0, #0x3                   	// #3
  404c0c:	mov	w3, #0x1fb                 	// #507
  404c10:	b	404cf8 <main+0xdf4>
  404c14:	bl	403678 <__errno_location@plt>
  404c18:	ldr	w20, [x0]
  404c1c:	mov	w0, wzr
  404c20:	bl	403468 <log_get_max_level_realm@plt>
  404c24:	ldr	x23, [sp, #40]
  404c28:	cmp	w0, #0x3
  404c2c:	b.lt	404cb0 <main+0xdac>  // b.tstop
  404c30:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404c34:	adrp	x4, 409000 <parse_argv.options+0x160>
  404c38:	adrp	x5, 409000 <parse_argv.options+0x160>
  404c3c:	add	x2, x2, #0xfa0
  404c40:	add	x4, x4, #0xa7d
  404c44:	add	x5, x5, #0xa93
  404c48:	mov	w0, #0x3                   	// #3
  404c4c:	mov	w3, #0x96                  	// #150
  404c50:	mov	w1, w20
  404c54:	bl	403478 <log_internal_realm@plt>
  404c58:	mov	w20, w0
  404c5c:	tbz	w20, #31, 404b7c <main+0xc78>
  404c60:	b	404cc4 <main+0xdc0>
  404c64:	bl	403678 <__errno_location@plt>
  404c68:	ldr	w20, [x0]
  404c6c:	mov	w0, wzr
  404c70:	bl	403468 <log_get_max_level_realm@plt>
  404c74:	cmp	w0, #0x3
  404c78:	b.lt	404cb0 <main+0xdac>  // b.tstop
  404c7c:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404c80:	adrp	x4, 409000 <parse_argv.options+0x160>
  404c84:	adrp	x5, 409000 <parse_argv.options+0x160>
  404c88:	add	x2, x2, #0xfa0
  404c8c:	add	x4, x4, #0xa7d
  404c90:	add	x5, x5, #0xacd
  404c94:	mov	w0, #0x3                   	// #3
  404c98:	mov	w3, #0x99                  	// #153
  404c9c:	mov	w1, w20
  404ca0:	bl	403478 <log_internal_realm@plt>
  404ca4:	mov	w20, w0
  404ca8:	tbz	w20, #31, 404b7c <main+0xc78>
  404cac:	b	404cc4 <main+0xdc0>
  404cb0:	cmp	w20, #0x0
  404cb4:	mov	w8, wzr
  404cb8:	cneg	w9, w20, mi  // mi = first
  404cbc:	sub	w20, w8, w9, uxtb
  404cc0:	tbz	w20, #31, 404b7c <main+0xc78>
  404cc4:	mov	w0, wzr
  404cc8:	bl	403468 <log_get_max_level_realm@plt>
  404ccc:	cmp	w0, #0x3
  404cd0:	b.lt	404cfc <main+0xdf8>  // b.tstop
  404cd4:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404cd8:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404cdc:	adrp	x5, 409000 <parse_argv.options+0x160>
  404ce0:	add	x2, x2, #0xfa0
  404ce4:	add	x4, x4, #0xfb8
  404ce8:	add	x5, x5, #0x3fc
  404cec:	mov	w0, #0x3                   	// #3
  404cf0:	mov	w3, #0x1fd                 	// #509
  404cf4:	mov	w1, w20
  404cf8:	bl	403478 <log_internal_realm@plt>
  404cfc:	cbz	w22, 404d84 <main+0xe80>
  404d00:	mov	w0, wzr
  404d04:	bl	403468 <log_get_max_level_realm@plt>
  404d08:	cmp	w0, #0x3
  404d0c:	b.lt	404d84 <main+0xe80>  // b.tstop
  404d10:	adrp	x9, 409000 <parse_argv.options+0x160>
  404d14:	adrp	x8, 409000 <parse_argv.options+0x160>
  404d18:	cmp	w19, #0x0
  404d1c:	add	x9, x9, #0x330
  404d20:	add	x8, x8, #0x321
  404d24:	csel	x6, x8, x9, ne  // ne = any
  404d28:	adrp	x8, 409000 <parse_argv.options+0x160>
  404d2c:	cmp	w27, #0x0
  404d30:	add	x8, x8, #0x331
  404d34:	csel	x7, x8, x9, ne  // ne = any
  404d38:	adrp	x8, 409000 <parse_argv.options+0x160>
  404d3c:	cmp	w28, #0x0
  404d40:	add	x8, x8, #0x340
  404d44:	adrp	x10, 409000 <parse_argv.options+0x160>
  404d48:	csel	x8, x8, x9, ne  // ne = any
  404d4c:	cmp	w21, #0x0
  404d50:	add	x10, x10, #0x34f
  404d54:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404d58:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404d5c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404d60:	csel	x9, x10, x9, ne  // ne = any
  404d64:	add	x2, x2, #0xfa0
  404d68:	add	x4, x4, #0xfb8
  404d6c:	add	x5, x5, #0x42a
  404d70:	mov	w0, #0x3                   	// #3
  404d74:	mov	w3, #0x205                 	// #517
  404d78:	mov	w1, wzr
  404d7c:	stp	x8, x9, [sp]
  404d80:	bl	403478 <log_internal_realm@plt>
  404d84:	cmp	w25, #0x0
  404d88:	b.gt	404d90 <main+0xe8c>
  404d8c:	bl	405360 <sync_with_progress>
  404d90:	ldr	x0, [x24, #24]
  404d94:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  404d98:	add	x1, x1, #0xff6
  404d9c:	bl	403518 <strcmp@plt>
  404da0:	ldr	w9, [sp, #36]
  404da4:	cmp	w0, #0x0
  404da8:	cset	w8, ne  // ne = any
  404dac:	orr	w8, w8, w9
  404db0:	tbz	w8, #0, 404e28 <main+0xf24>
  404db4:	ldr	w9, [sp, #28]
  404db8:	mov	w8, #0xfedc                	// #65244
  404dbc:	movk	w8, #0x4321, lsl #16
  404dc0:	csel	w8, w9, w8, ne  // ne = any
  404dc4:	mov	w9, #0xfedb                	// #65243
  404dc8:	movk	w9, #0x4321, lsl #16
  404dcc:	cmp	w8, w9
  404dd0:	b.gt	404e34 <main+0xf30>
  404dd4:	mov	w9, #0x123                 	// #291
  404dd8:	movk	w9, #0xcdef, lsl #16
  404ddc:	cmp	w8, w9
  404de0:	b.ne	404e88 <main+0xf84>  // b.any
  404de4:	mov	w0, wzr
  404de8:	bl	403468 <log_get_max_level_realm@plt>
  404dec:	cmp	w0, #0x6
  404df0:	b.lt	404e1c <main+0xf18>  // b.tstop
  404df4:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404df8:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404dfc:	adrp	x5, 409000 <parse_argv.options+0x160>
  404e00:	add	x2, x2, #0xfa0
  404e04:	add	x4, x4, #0xfb8
  404e08:	add	x5, x5, #0x49c
  404e0c:	mov	w0, #0x6                   	// #6
  404e10:	mov	w3, #0x239                 	// #569
  404e14:	mov	w1, wzr
  404e18:	bl	403478 <log_internal_realm@plt>
  404e1c:	mov	w0, #0x123                 	// #291
  404e20:	movk	w0, #0xcdef, lsl #16
  404e24:	b	404f54 <main+0x1050>
  404e28:	adrp	x8, 420000 <arg_timeout>
  404e2c:	ldrb	w19, [x8, #16]
  404e30:	b	404fb0 <main+0x10ac>
  404e34:	mov	w9, #0xfedc                	// #65244
  404e38:	movk	w9, #0x4321, lsl #16
  404e3c:	cmp	w8, w9
  404e40:	b.ne	404e9c <main+0xf98>  // b.any
  404e44:	mov	w0, wzr
  404e48:	bl	403468 <log_get_max_level_realm@plt>
  404e4c:	cmp	w0, #0x6
  404e50:	b.lt	405054 <main+0x1150>  // b.tstop
  404e54:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404e58:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404e5c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404e60:	add	x2, x2, #0xfa0
  404e64:	add	x4, x4, #0xfb8
  404e68:	add	x5, x5, #0x48e
  404e6c:	mov	w0, #0x6                   	// #6
  404e70:	mov	w3, #0x235                 	// #565
  404e74:	mov	w1, wzr
  404e78:	bl	403478 <log_internal_realm@plt>
  404e7c:	mov	w0, #0xfedc                	// #65244
  404e80:	movk	w0, #0x4321, lsl #16
  404e84:	b	404f54 <main+0x1050>
  404e88:	mov	w9, #0x4567                	// #17767
  404e8c:	movk	w9, #0x123, lsl #16
  404e90:	cmp	w8, w9
  404e94:	b.eq	404f0c <main+0x1008>  // b.none
  404e98:	b	4052b8 <main+0x13b4>
  404e9c:	mov	w9, #0x4543                	// #17731
  404ea0:	movk	w9, #0x4558, lsl #16
  404ea4:	cmp	w8, w9
  404ea8:	b.ne	4052b8 <main+0x13b4>  // b.any
  404eac:	cmp	w25, #0x0
  404eb0:	b.gt	404f0c <main+0x1008>
  404eb4:	mov	w0, wzr
  404eb8:	bl	403468 <log_get_max_level_realm@plt>
  404ebc:	cmp	w0, #0x6
  404ec0:	b.lt	404eec <main+0xfe8>  // b.tstop
  404ec4:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404ec8:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404ecc:	adrp	x5, 409000 <parse_argv.options+0x160>
  404ed0:	add	x2, x2, #0xfa0
  404ed4:	add	x4, x4, #0xfb8
  404ed8:	add	x5, x5, #0x44f
  404edc:	mov	w0, #0x6                   	// #6
  404ee0:	mov	w3, #0x21b                 	// #539
  404ee4:	mov	w1, wzr
  404ee8:	bl	403478 <log_internal_realm@plt>
  404eec:	adrp	x0, 409000 <parse_argv.options+0x160>
  404ef0:	add	x0, x0, #0x465
  404ef4:	mov	w3, #0x63                  	// #99
  404ef8:	mov	x1, xzr
  404efc:	mov	x2, xzr
  404f00:	mov	x4, xzr
  404f04:	bl	403688 <safe_fork_full@plt>
  404f08:	cbz	w0, 405330 <main+0x142c>
  404f0c:	mov	w0, #0x1                   	// #1
  404f10:	bl	403698 <reboot_with_parameter@plt>
  404f14:	mov	w0, wzr
  404f18:	bl	403468 <log_get_max_level_realm@plt>
  404f1c:	cmp	w0, #0x6
  404f20:	b.lt	404f4c <main+0x1048>  // b.tstop
  404f24:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404f28:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404f2c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404f30:	add	x2, x2, #0xfa0
  404f34:	add	x4, x4, #0xfb8
  404f38:	add	x5, x5, #0x483
  404f3c:	mov	w0, #0x6                   	// #6
  404f40:	mov	w3, #0x231                 	// #561
  404f44:	mov	w1, wzr
  404f48:	bl	403478 <log_internal_realm@plt>
  404f4c:	mov	w0, #0x4567                	// #17767
  404f50:	movk	w0, #0x123, lsl #16
  404f54:	bl	4036a8 <reboot@plt>
  404f58:	bl	403678 <__errno_location@plt>
  404f5c:	ldr	w19, [x0]
  404f60:	ldr	w9, [sp, #36]
  404f64:	mov	w0, wzr
  404f68:	cmp	w19, #0x1
  404f6c:	cset	w8, ne  // ne = any
  404f70:	orr	w20, w8, w9
  404f74:	bl	403468 <log_get_max_level_realm@plt>
  404f78:	tbnz	w20, #0, 405270 <main+0x136c>
  404f7c:	cmp	w0, #0x6
  404f80:	b.lt	404fac <main+0x10a8>  // b.tstop
  404f84:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404f88:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  404f8c:	adrp	x5, 409000 <parse_argv.options+0x160>
  404f90:	add	x2, x2, #0xfa0
  404f94:	add	x4, x4, #0xfb8
  404f98:	add	x5, x5, #0x4d1
  404f9c:	mov	w0, #0x6                   	// #6
  404fa0:	mov	w3, #0x245                 	// #581
  404fa4:	mov	w1, wzr
  404fa8:	bl	403478 <log_internal_realm@plt>
  404fac:	mov	w19, wzr
  404fb0:	ldur	x0, [x29, #-24]
  404fb4:	bl	4036b8 <free@plt>
  404fb8:	mov	w0, w19
  404fbc:	ldp	x20, x19, [sp, #208]
  404fc0:	ldp	x22, x21, [sp, #192]
  404fc4:	ldp	x24, x23, [sp, #176]
  404fc8:	ldp	x26, x25, [sp, #160]
  404fcc:	ldp	x28, x27, [sp, #144]
  404fd0:	ldp	x29, x30, [sp, #128]
  404fd4:	add	sp, sp, #0xe0
  404fd8:	ret
  404fdc:	mov	w20, w0
  404fe0:	mov	w0, wzr
  404fe4:	bl	403468 <log_get_max_level_realm@plt>
  404fe8:	cmp	w0, #0x7
  404fec:	b.lt	4050e4 <main+0x11e0>  // b.tstop
  404ff0:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  404ff4:	adrp	x4, 409000 <parse_argv.options+0x160>
  404ff8:	adrp	x5, 409000 <parse_argv.options+0x160>
  404ffc:	add	x2, x2, #0xfa0
  405000:	add	x4, x4, #0x763
  405004:	add	x5, x5, #0x788
  405008:	mov	w0, #0x7                   	// #7
  40500c:	mov	w3, #0x10a                 	// #266
  405010:	b	405044 <main+0x1140>
  405014:	mov	w0, wzr
  405018:	bl	403468 <log_get_max_level_realm@plt>
  40501c:	cmp	w0, #0x7
  405020:	b.lt	4050e4 <main+0x11e0>  // b.tstop
  405024:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405028:	adrp	x4, 409000 <parse_argv.options+0x160>
  40502c:	adrp	x5, 409000 <parse_argv.options+0x160>
  405030:	add	x2, x2, #0xfa0
  405034:	add	x4, x4, #0x763
  405038:	add	x5, x5, #0x7ad
  40503c:	mov	w0, #0x7                   	// #7
  405040:	mov	w3, #0x10f                 	// #271
  405044:	mov	w1, w20
  405048:	bl	403478 <log_internal_realm@plt>
  40504c:	mov	w20, w0
  405050:	b	4050f0 <main+0x11ec>
  405054:	mov	w0, #0xfedc                	// #65244
  405058:	movk	w0, #0x4321, lsl #16
  40505c:	b	404f54 <main+0x1050>
  405060:	mov	w0, wzr
  405064:	bl	403468 <log_get_max_level_realm@plt>
  405068:	cmp	w0, #0x7
  40506c:	b.lt	405168 <main+0x1264>  // b.tstop
  405070:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405074:	adrp	x4, 409000 <parse_argv.options+0x160>
  405078:	adrp	x5, 409000 <parse_argv.options+0x160>
  40507c:	mov	w1, #0x16                  	// #22
  405080:	add	x2, x2, #0xfa0
  405084:	add	x4, x4, #0x763
  405088:	add	x5, x5, #0x7dc
  40508c:	mov	w0, #0x7                   	// #7
  405090:	movk	w1, #0x4000, lsl #16
  405094:	mov	w3, #0x111                 	// #273
  405098:	b	405048 <main+0x1144>
  40509c:	mov	w20, w0
  4050a0:	mov	w0, wzr
  4050a4:	bl	403468 <log_get_max_level_realm@plt>
  4050a8:	cmp	w0, #0x7
  4050ac:	b.lt	4050e4 <main+0x11e0>  // b.tstop
  4050b0:	ldur	x6, [x29, #-48]
  4050b4:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4050b8:	adrp	x4, 409000 <parse_argv.options+0x160>
  4050bc:	adrp	x5, 409000 <parse_argv.options+0x160>
  4050c0:	add	x2, x2, #0xfa0
  4050c4:	add	x4, x4, #0x763
  4050c8:	add	x5, x5, #0x80a
  4050cc:	mov	w0, #0x7                   	// #7
  4050d0:	mov	w3, #0x115                 	// #277
  4050d4:	mov	w1, w20
  4050d8:	bl	403478 <log_internal_realm@plt>
  4050dc:	mov	w20, w0
  4050e0:	b	4050f0 <main+0x11ec>
  4050e4:	mov	w8, wzr
  4050e8:	neg	w9, w20
  4050ec:	sub	w20, w8, w9, uxtb
  4050f0:	ldr	x0, [sp, #48]
  4050f4:	bl	4036b8 <free@plt>
  4050f8:	ldur	x0, [x29, #-48]
  4050fc:	bl	4036b8 <free@plt>
  405100:	cmp	w20, #0x4
  405104:	b.hi	404330 <main+0x42c>  // b.pmore
  405108:	adrp	x0, 409000 <parse_argv.options+0x160>
  40510c:	adrp	x1, 409000 <parse_argv.options+0x160>
  405110:	add	x0, x0, #0x70e
  405114:	add	x1, x1, #0x71c
  405118:	mov	w2, #0x5                   	// #5
  40511c:	bl	4036c8 <sysctl_writef@plt>
  405120:	tbz	w0, #31, 404330 <main+0x42c>
  405124:	mov	w20, w0
  405128:	mov	w0, wzr
  40512c:	bl	403468 <log_get_max_level_realm@plt>
  405130:	cmp	w0, #0x7
  405134:	b.lt	404330 <main+0x42c>  // b.tstop
  405138:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  40513c:	adrp	x4, 409000 <parse_argv.options+0x160>
  405140:	adrp	x5, 409000 <parse_argv.options+0x160>
  405144:	add	x2, x2, #0xfa0
  405148:	add	x4, x4, #0x71f
  40514c:	add	x5, x5, #0x73c
  405150:	mov	w0, #0x7                   	// #7
  405154:	mov	w3, #0x125                 	// #293
  405158:	mov	w6, #0x5                   	// #5
  40515c:	mov	w1, w20
  405160:	bl	403478 <log_internal_realm@plt>
  405164:	b	404330 <main+0x42c>
  405168:	mov	w20, #0xffffffea            	// #-22
  40516c:	b	4050f0 <main+0x11ec>
  405170:	cmp	w0, #0x3f
  405174:	b.ne	4051c4 <main+0x12c0>  // b.any
  405178:	mov	w20, #0xffffffea            	// #-22
  40517c:	bl	4036d8 <log_emergency_level@plt>
  405180:	mov	w19, w0
  405184:	mov	w0, wzr
  405188:	bl	403468 <log_get_max_level_realm@plt>
  40518c:	and	w8, w19, #0x7
  405190:	cmp	w0, w8
  405194:	b.lt	4051c0 <main+0x12bc>  // b.tstop
  405198:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  40519c:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  4051a0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4051a4:	add	x2, x2, #0xfa0
  4051a8:	add	x4, x4, #0xfb8
  4051ac:	add	x5, x5, #0x502
  4051b0:	mov	w3, #0x24c                 	// #588
  4051b4:	mov	w0, w19
  4051b8:	mov	w1, w20
  4051bc:	bl	403478 <log_internal_realm@plt>
  4051c0:	bl	4036e8 <freeze@plt>
  4051c4:	adrp	x1, 409000 <parse_argv.options+0x160>
  4051c8:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4051cc:	adrp	x4, 409000 <parse_argv.options+0x160>
  4051d0:	add	x1, x1, #0x6e0
  4051d4:	add	x2, x2, #0xfa0
  4051d8:	add	x4, x4, #0x579
  4051dc:	mov	w3, #0x8a                  	// #138
  4051e0:	mov	w0, wzr
  4051e4:	bl	4036f8 <log_assert_failed_unreachable_realm@plt>
  4051e8:	adrp	x1, 409000 <parse_argv.options+0x160>
  4051ec:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4051f0:	adrp	x4, 409000 <parse_argv.options+0x160>
  4051f4:	add	x1, x1, #0x56f
  4051f8:	add	x2, x2, #0xfa0
  4051fc:	add	x4, x4, #0x579
  405200:	mov	w3, #0x46                  	// #70
  405204:	mov	w0, wzr
  405208:	bl	403708 <log_assert_failed_realm@plt>
  40520c:	adrp	x1, 409000 <parse_argv.options+0x160>
  405210:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405214:	adrp	x4, 409000 <parse_argv.options+0x160>
  405218:	add	x1, x1, #0x596
  40521c:	add	x2, x2, #0xfa0
  405220:	add	x4, x4, #0x579
  405224:	mov	w3, #0x47                  	// #71
  405228:	mov	w0, wzr
  40522c:	bl	403708 <log_assert_failed_realm@plt>
  405230:	mov	w0, wzr
  405234:	bl	403468 <log_get_max_level_realm@plt>
  405238:	cmp	w0, #0x3
  40523c:	b.lt	4052a8 <main+0x13a4>  // b.tstop
  405240:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405244:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  405248:	adrp	x5, 408000 <mount_cgroup_controllers+0x200>
  40524c:	add	x2, x2, #0xfa0
  405250:	add	x4, x4, #0xfb8
  405254:	add	x5, x5, #0xfbd
  405258:	mov	w0, #0x3                   	// #3
  40525c:	mov	w3, #0x140                 	// #320
  405260:	mov	w1, wzr
  405264:	bl	403478 <log_internal_realm@plt>
  405268:	mov	w20, #0xffffffff            	// #-1
  40526c:	b	40517c <main+0x1278>
  405270:	cmp	w0, #0x3
  405274:	b.lt	4052dc <main+0x13d8>  // b.tstop
  405278:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  40527c:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  405280:	adrp	x5, 409000 <parse_argv.options+0x160>
  405284:	add	x2, x2, #0xfa0
  405288:	add	x4, x4, #0xfb8
  40528c:	add	x5, x5, #0x4e4
  405290:	mov	w0, #0x3                   	// #3
  405294:	mov	w3, #0x249                 	// #585
  405298:	mov	w1, w19
  40529c:	bl	403478 <log_internal_realm@plt>
  4052a0:	mov	w20, w0
  4052a4:	b	40517c <main+0x1278>
  4052a8:	mov	w20, #0xffffffff            	// #-1
  4052ac:	b	40517c <main+0x1278>
  4052b0:	mov	w20, w0
  4052b4:	b	40517c <main+0x1278>
  4052b8:	adrp	x1, 409000 <parse_argv.options+0x160>
  4052bc:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4052c0:	adrp	x4, 409000 <parse_argv.options+0x160>
  4052c4:	add	x1, x1, #0x4ac
  4052c8:	add	x2, x2, #0xfa0
  4052cc:	add	x4, x4, #0x4ba
  4052d0:	mov	w3, #0x23d                 	// #573
  4052d4:	mov	w0, wzr
  4052d8:	bl	4036f8 <log_assert_failed_unreachable_realm@plt>
  4052dc:	cmp	w19, #0x0
  4052e0:	mov	w8, wzr
  4052e4:	cneg	w9, w19, mi  // mi = first
  4052e8:	sub	w20, w8, w9, uxtb
  4052ec:	b	40517c <main+0x1278>
  4052f0:	mov	w0, wzr
  4052f4:	bl	403468 <log_get_max_level_realm@plt>
  4052f8:	cmp	w0, #0x3
  4052fc:	b.lt	405178 <main+0x1274>  // b.tstop
  405300:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405304:	adrp	x4, 408000 <mount_cgroup_controllers+0x200>
  405308:	adrp	x5, 408000 <mount_cgroup_controllers+0x200>
  40530c:	add	x2, x2, #0xfa0
  405310:	add	x4, x4, #0xfb8
  405314:	add	x5, x5, #0xffb
  405318:	mov	w0, #0x3                   	// #3
  40531c:	mov	w3, #0x150                 	// #336
  405320:	mov	w1, wzr
  405324:	mov	x6, x20
  405328:	bl	403478 <log_internal_realm@plt>
  40532c:	b	405178 <main+0x1274>
  405330:	adrp	x8, 408000 <mount_cgroup_controllers+0x200>
  405334:	add	x8, x8, #0xe88
  405338:	ldr	q0, [x8]
  40533c:	ldr	x8, [x8, #16]
  405340:	adrp	x0, 409000 <parse_argv.options+0x160>
  405344:	add	x0, x0, #0x470
  405348:	add	x1, sp, #0x30
  40534c:	str	q0, [sp, #48]
  405350:	str	x8, [sp, #64]
  405354:	bl	403668 <execv@plt>
  405358:	mov	w0, #0x1                   	// #1
  40535c:	bl	403718 <_exit@plt>

0000000000405360 <sync_with_progress>:
  405360:	sub	sp, sp, #0x190
  405364:	add	x1, sp, #0x10
  405368:	mov	w2, #0x11                  	// #17
  40536c:	mov	w3, #0xffffffff            	// #-1
  405370:	mov	w0, wzr
  405374:	stp	x29, x30, [sp, #304]
  405378:	stp	x28, x27, [sp, #320]
  40537c:	stp	x26, x25, [sp, #336]
  405380:	stp	x24, x23, [sp, #352]
  405384:	stp	x22, x21, [sp, #368]
  405388:	stp	x20, x19, [sp, #384]
  40538c:	add	x29, sp, #0x130
  405390:	bl	403728 <sigprocmask_many@plt>
  405394:	tbnz	w0, #31, 405770 <sync_with_progress+0x410>
  405398:	ldp	q0, q1, [sp, #80]
  40539c:	ldp	q2, q3, [sp, #112]
  4053a0:	sub	x0, x29, #0x14
  4053a4:	stp	q0, q1, [sp, #208]
  4053a8:	ldp	q0, q4, [sp, #16]
  4053ac:	stp	q2, q3, [sp, #240]
  4053b0:	ldp	q2, q1, [sp, #48]
  4053b4:	stp	q0, q4, [sp, #144]
  4053b8:	stp	q2, q1, [sp, #176]
  4053bc:	bl	403738 <asynchronous_sync@plt>
  4053c0:	mov	w19, w0
  4053c4:	mov	w0, wzr
  4053c8:	bl	403468 <log_get_max_level_realm@plt>
  4053cc:	tbnz	w19, #31, 40567c <sync_with_progress+0x31c>
  4053d0:	cmp	w0, #0x6
  4053d4:	b.lt	405400 <sync_with_progress+0xa0>  // b.tstop
  4053d8:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4053dc:	adrp	x4, 409000 <parse_argv.options+0x160>
  4053e0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4053e4:	add	x2, x2, #0xfa0
  4053e8:	add	x4, x4, #0x87f
  4053ec:	add	x5, x5, #0x8ac
  4053f0:	mov	w0, #0x6                   	// #6
  4053f4:	mov	w3, #0xe6                  	// #230
  4053f8:	mov	w1, wzr
  4053fc:	bl	403478 <log_internal_realm@plt>
  405400:	adrp	x20, 409000 <parse_argv.options+0x160>
  405404:	adrp	x25, 409000 <parse_argv.options+0x160>
  405408:	adrp	x26, 409000 <parse_argv.options+0x160>
  40540c:	adrp	x28, 409000 <parse_argv.options+0x160>
  405410:	mov	w22, wzr
  405414:	mov	x8, #0xffffffffffffffff    	// #-1
  405418:	add	x20, x20, #0x9c8
  40541c:	mov	w27, #0x1                   	// #1
  405420:	add	x25, x25, #0xa23
  405424:	add	x26, x26, #0xa31
  405428:	add	x28, x28, #0xa43
  40542c:	str	x8, [sp, #8]
  405430:	b	405460 <sync_with_progress+0x100>
  405434:	mov	w8, wzr
  405438:	neg	w9, w24
  40543c:	sub	w24, w8, w9, uxtb
  405440:	ldr	x0, [sp, #16]
  405444:	bl	4036b8 <free@plt>
  405448:	mov	x0, x23
  40544c:	bl	403748 <safe_fclose@plt>
  405450:	cmp	w24, #0x1
  405454:	csinc	w22, w27, w22, ge  // ge = tcont
  405458:	cmp	w22, #0x3
  40545c:	b.cs	4056f4 <sync_with_progress+0x394>  // b.hs, b.nlast
  405460:	ldur	w0, [x29, #-20]
  405464:	mov	w1, #0x9680                	// #38528
  405468:	movk	w1, #0x98, lsl #16
  40546c:	bl	403758 <wait_for_terminate_with_timeout@plt>
  405470:	cmn	w0, #0x6e
  405474:	b.ne	4056b0 <sync_with_progress+0x350>  // b.any
  405478:	adrp	x0, 409000 <parse_argv.options+0x160>
  40547c:	add	x0, x0, #0x9ba
  405480:	mov	x1, x20
  405484:	bl	403768 <fopen64@plt>
  405488:	mov	x23, x0
  40548c:	cbz	x0, 405590 <sync_with_progress+0x230>
  405490:	add	x3, sp, #0x10
  405494:	mov	w1, #0x100000              	// #1048576
  405498:	mov	x0, x23
  40549c:	mov	w2, wzr
  4054a0:	str	xzr, [sp, #16]
  4054a4:	stur	xzr, [x29, #-16]
  4054a8:	bl	403778 <read_line_full@plt>
  4054ac:	mov	w24, w0
  4054b0:	tbnz	w0, #31, 405550 <sync_with_progress+0x1f0>
  4054b4:	mov	x19, xzr
  4054b8:	cbz	w24, 4055ec <sync_with_progress+0x28c>
  4054bc:	ldr	x24, [sp, #16]
  4054c0:	mov	x1, x25
  4054c4:	mov	x0, x24
  4054c8:	bl	403788 <first_word@plt>
  4054cc:	cbnz	x0, 4054f4 <sync_with_progress+0x194>
  4054d0:	mov	x0, x24
  4054d4:	mov	x1, x26
  4054d8:	bl	403788 <first_word@plt>
  4054dc:	cbnz	x0, 4054f4 <sync_with_progress+0x194>
  4054e0:	adrp	x1, 409000 <parse_argv.options+0x160>
  4054e4:	mov	x0, x24
  4054e8:	add	x1, x1, #0xa3c
  4054ec:	bl	403788 <first_word@plt>
  4054f0:	cbz	x0, 405524 <sync_with_progress+0x1c4>
  4054f4:	bl	403678 <__errno_location@plt>
  4054f8:	mov	x21, x0
  4054fc:	str	wzr, [x0]
  405500:	sub	x2, x29, #0x10
  405504:	mov	x0, x24
  405508:	mov	x1, x28
  40550c:	bl	403798 <__isoc99_sscanf@plt>
  405510:	cmp	w0, #0x1
  405514:	b.ne	405608 <sync_with_progress+0x2a8>  // b.any
  405518:	ldur	x8, [x29, #-16]
  40551c:	ldr	x24, [sp, #16]
  405520:	add	x19, x8, x19
  405524:	mov	x0, x24
  405528:	bl	4036b8 <free@plt>
  40552c:	add	x3, sp, #0x10
  405530:	mov	w1, #0x100000              	// #1048576
  405534:	mov	x0, x23
  405538:	mov	w2, wzr
  40553c:	str	xzr, [sp, #16]
  405540:	stur	xzr, [x29, #-16]
  405544:	bl	403778 <read_line_full@plt>
  405548:	mov	w24, w0
  40554c:	tbz	w0, #31, 4054b8 <sync_with_progress+0x158>
  405550:	mov	w0, wzr
  405554:	bl	403468 <log_get_max_level_realm@plt>
  405558:	cmp	w0, #0x4
  40555c:	b.lt	405434 <sync_with_progress+0xd4>  // b.tstop
  405560:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405564:	adrp	x4, 409000 <parse_argv.options+0x160>
  405568:	adrp	x5, 409000 <parse_argv.options+0x160>
  40556c:	mov	w0, #0x4                   	// #4
  405570:	mov	w3, #0xbc                  	// #188
  405574:	mov	w1, w24
  405578:	add	x2, x2, #0xfa0
  40557c:	add	x4, x4, #0x9cb
  405580:	add	x5, x5, #0xa01
  405584:	bl	403478 <log_internal_realm@plt>
  405588:	mov	w24, w0
  40558c:	b	405440 <sync_with_progress+0xe0>
  405590:	bl	403678 <__errno_location@plt>
  405594:	ldr	w24, [x0]
  405598:	mov	w0, wzr
  40559c:	bl	403468 <log_get_max_level_realm@plt>
  4055a0:	cmp	w0, #0x4
  4055a4:	b.lt	4055d8 <sync_with_progress+0x278>  // b.tstop
  4055a8:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4055ac:	adrp	x4, 409000 <parse_argv.options+0x160>
  4055b0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4055b4:	mov	w0, #0x4                   	// #4
  4055b8:	mov	w3, #0xb3                  	// #179
  4055bc:	mov	w1, w24
  4055c0:	add	x2, x2, #0xfa0
  4055c4:	add	x4, x4, #0x9cb
  4055c8:	add	x5, x5, #0x9e0
  4055cc:	bl	403478 <log_internal_realm@plt>
  4055d0:	mov	w24, w0
  4055d4:	b	405448 <sync_with_progress+0xe8>
  4055d8:	cmp	w24, #0x0
  4055dc:	mov	w8, wzr
  4055e0:	cneg	w9, w24, mi  // mi = first
  4055e4:	sub	w24, w8, w9, uxtb
  4055e8:	b	405448 <sync_with_progress+0xe8>
  4055ec:	ldr	x0, [sp, #16]
  4055f0:	bl	4036b8 <free@plt>
  4055f4:	ldr	x8, [sp, #8]
  4055f8:	str	x19, [sp, #8]
  4055fc:	cmp	x8, x19
  405600:	cset	w24, hi  // hi = pmore
  405604:	b	405448 <sync_with_progress+0xe8>
  405608:	ldr	w24, [x21]
  40560c:	mov	w0, wzr
  405610:	bl	403468 <log_get_max_level_realm@plt>
  405614:	cmp	w0, #0x4
  405618:	cbz	w24, 405648 <sync_with_progress+0x2e8>
  40561c:	b.lt	405674 <sync_with_progress+0x314>  // b.tstop
  405620:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405624:	adrp	x4, 409000 <parse_argv.options+0x160>
  405628:	adrp	x5, 409000 <parse_argv.options+0x160>
  40562c:	mov	w0, #0x4                   	// #4
  405630:	mov	w3, #0xc6                  	// #198
  405634:	mov	w1, w24
  405638:	add	x2, x2, #0xfa0
  40563c:	add	x4, x4, #0x9cb
  405640:	add	x5, x5, #0xa01
  405644:	b	405670 <sync_with_progress+0x310>
  405648:	b.lt	405674 <sync_with_progress+0x314>  // b.tstop
  40564c:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405650:	adrp	x4, 409000 <parse_argv.options+0x160>
  405654:	adrp	x5, 409000 <parse_argv.options+0x160>
  405658:	mov	w0, #0x4                   	// #4
  40565c:	mov	w3, #0xc8                  	// #200
  405660:	mov	w1, wzr
  405664:	add	x2, x2, #0xfa0
  405668:	add	x4, x4, #0x9cb
  40566c:	add	x5, x5, #0xa50
  405670:	bl	403478 <log_internal_realm@plt>
  405674:	mov	w24, wzr
  405678:	b	405440 <sync_with_progress+0xe0>
  40567c:	cmp	w0, #0x3
  405680:	b.lt	40573c <sync_with_progress+0x3dc>  // b.tstop
  405684:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405688:	adrp	x4, 409000 <parse_argv.options+0x160>
  40568c:	adrp	x5, 409000 <parse_argv.options+0x160>
  405690:	add	x2, x2, #0xfa0
  405694:	add	x4, x4, #0x87f
  405698:	add	x5, x5, #0x892
  40569c:	mov	w0, #0x3                   	// #3
  4056a0:	mov	w3, #0xe2                  	// #226
  4056a4:	mov	w1, w19
  4056a8:	bl	403478 <log_internal_realm@plt>
  4056ac:	b	40573c <sync_with_progress+0x3dc>
  4056b0:	mov	w23, w0
  4056b4:	cbz	w0, 40573c <sync_with_progress+0x3dc>
  4056b8:	mov	w0, wzr
  4056bc:	bl	403468 <log_get_max_level_realm@plt>
  4056c0:	cmp	w0, #0x3
  4056c4:	b.lt	40573c <sync_with_progress+0x3dc>  // b.tstop
  4056c8:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  4056cc:	adrp	x4, 409000 <parse_argv.options+0x160>
  4056d0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4056d4:	add	x2, x2, #0xfa0
  4056d8:	add	x4, x4, #0x87f
  4056dc:	add	x5, x5, #0x8d3
  4056e0:	mov	w0, #0x3                   	// #3
  4056e4:	mov	w3, #0xf7                  	// #247
  4056e8:	mov	w1, w23
  4056ec:	bl	403478 <log_internal_realm@plt>
  4056f0:	b	40573c <sync_with_progress+0x3dc>
  4056f4:	mov	w0, wzr
  4056f8:	bl	403468 <log_get_max_level_realm@plt>
  4056fc:	cmp	w0, #0x3
  405700:	b.lt	405730 <sync_with_progress+0x3d0>  // b.tstop
  405704:	ldur	w6, [x29, #-20]
  405708:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  40570c:	adrp	x4, 409000 <parse_argv.options+0x160>
  405710:	adrp	x5, 409000 <parse_argv.options+0x160>
  405714:	add	x2, x2, #0xfa0
  405718:	add	x4, x4, #0x87f
  40571c:	add	x5, x5, #0x904
  405720:	mov	w0, #0x3                   	// #3
  405724:	mov	w3, #0xfe                  	// #254
  405728:	mov	w1, wzr
  40572c:	bl	403478 <log_internal_realm@plt>
  405730:	ldur	w0, [x29, #-20]
  405734:	mov	w1, #0x9                   	// #9
  405738:	bl	4037a8 <kill@plt>
  40573c:	add	x1, sp, #0x90
  405740:	mov	w0, #0x2                   	// #2
  405744:	mov	x2, xzr
  405748:	bl	4037b8 <sigprocmask@plt>
  40574c:	tbnz	w0, #31, 405794 <sync_with_progress+0x434>
  405750:	ldp	x20, x19, [sp, #384]
  405754:	ldp	x22, x21, [sp, #368]
  405758:	ldp	x24, x23, [sp, #352]
  40575c:	ldp	x26, x25, [sp, #336]
  405760:	ldp	x28, x27, [sp, #320]
  405764:	ldp	x29, x30, [sp, #304]
  405768:	add	sp, sp, #0x190
  40576c:	ret
  405770:	adrp	x1, 409000 <parse_argv.options+0x160>
  405774:	adrp	x2, 408000 <mount_cgroup_controllers+0x200>
  405778:	adrp	x4, 409000 <parse_argv.options+0x160>
  40577c:	add	x1, x1, #0x833
  405780:	add	x2, x2, #0xfa0
  405784:	add	x4, x4, #0x861
  405788:	mov	w3, #0xdb                  	// #219
  40578c:	mov	w0, wzr
  405790:	bl	403708 <log_assert_failed_realm@plt>
  405794:	adrp	x1, 409000 <parse_argv.options+0x160>
  405798:	adrp	x2, 409000 <parse_argv.options+0x160>
  40579c:	adrp	x4, 409000 <parse_argv.options+0x160>
  4057a0:	add	x1, x1, #0x952
  4057a4:	add	x2, x2, #0x97d
  4057a8:	add	x4, x4, #0x995
  4057ac:	mov	w3, #0x18                  	// #24
  4057b0:	mov	w0, wzr
  4057b4:	bl	403708 <log_assert_failed_realm@plt>

00000000004057b8 <mount_points_list_free>:
  4057b8:	stp	x29, x30, [sp, #-32]!
  4057bc:	stp	x20, x19, [sp, #16]
  4057c0:	mov	x29, sp
  4057c4:	cbz	x0, 405858 <mount_points_list_free+0xa0>
  4057c8:	mov	x19, x0
  4057cc:	b	4057f4 <mount_points_list_free+0x3c>
  4057d0:	add	x10, x10, #0x28
  4057d4:	str	x9, [x10]
  4057d8:	stp	xzr, xzr, [x8]
  4057dc:	ldr	x0, [x20]
  4057e0:	bl	4036b8 <free@plt>
  4057e4:	ldr	x0, [x20, #8]
  4057e8:	bl	4036b8 <free@plt>
  4057ec:	mov	x0, x20
  4057f0:	bl	4036b8 <free@plt>
  4057f4:	ldr	x20, [x19]
  4057f8:	cbz	x20, 40584c <mount_points_list_free+0x94>
  4057fc:	mov	x8, x20
  405800:	ldr	x9, [x8, #40]!
  405804:	cbz	x9, 405810 <mount_points_list_free+0x58>
  405808:	ldr	x10, [x20, #48]
  40580c:	str	x10, [x9, #48]
  405810:	ldr	x10, [x20, #48]
  405814:	cbnz	x10, 4057d0 <mount_points_list_free+0x18>
  405818:	ldr	x10, [x19]
  40581c:	cmp	x10, x20
  405820:	mov	x10, x19
  405824:	b.eq	4057d4 <mount_points_list_free+0x1c>  // b.none
  405828:	adrp	x1, 409000 <parse_argv.options+0x160>
  40582c:	adrp	x2, 409000 <parse_argv.options+0x160>
  405830:	adrp	x4, 409000 <parse_argv.options+0x160>
  405834:	add	x1, x1, #0xd64
  405838:	add	x2, x2, #0xb0e
  40583c:	add	x4, x4, #0xd31
  405840:	mov	w3, #0x2a                  	// #42
  405844:	mov	w0, wzr
  405848:	bl	403708 <log_assert_failed_realm@plt>
  40584c:	ldp	x20, x19, [sp, #16]
  405850:	ldp	x29, x30, [sp], #32
  405854:	ret
  405858:	adrp	x1, 409000 <parse_argv.options+0x160>
  40585c:	adrp	x2, 409000 <parse_argv.options+0x160>
  405860:	adrp	x4, 409000 <parse_argv.options+0x160>
  405864:	add	x1, x1, #0xb06
  405868:	add	x2, x2, #0xb0e
  40586c:	add	x4, x4, #0xb24
  405870:	mov	w3, #0x32                  	// #50
  405874:	bl	403708 <log_assert_failed_realm@plt>

0000000000405878 <mount_points_list_get>:
  405878:	sub	sp, sp, #0xc0
  40587c:	stp	x29, x30, [sp, #96]
  405880:	stp	x28, x27, [sp, #112]
  405884:	stp	x26, x25, [sp, #128]
  405888:	stp	x24, x23, [sp, #144]
  40588c:	stp	x22, x21, [sp, #160]
  405890:	stp	x20, x19, [sp, #176]
  405894:	add	x29, sp, #0x60
  405898:	cbz	x1, 405ce8 <mount_points_list_get+0x470>
  40589c:	mov	x21, x1
  4058a0:	mov	x24, x0
  4058a4:	bl	4037c8 <mnt_new_table@plt>
  4058a8:	mov	x19, x0
  4058ac:	mov	w0, wzr
  4058b0:	bl	4037d8 <mnt_new_iter@plt>
  4058b4:	mov	x20, x0
  4058b8:	cbz	x19, 4058dc <mount_points_list_get+0x64>
  4058bc:	cbz	x20, 4058dc <mount_points_list_get+0x64>
  4058c0:	mov	x0, x19
  4058c4:	cbz	x24, 40596c <mount_points_list_get+0xf4>
  4058c8:	mov	x1, x24
  4058cc:	bl	4037e8 <mnt_table_parse_file@plt>
  4058d0:	mov	w22, w0
  4058d4:	tbz	w0, #31, 40597c <mount_points_list_get+0x104>
  4058d8:	b	4058e4 <mount_points_list_get+0x6c>
  4058dc:	mov	w22, #0xfffffff4            	// #-12
  4058e0:	cbz	x20, 4058ec <mount_points_list_get+0x74>
  4058e4:	mov	x0, x20
  4058e8:	bl	4037f8 <mnt_free_iter@plt>
  4058ec:	cbz	x19, 4058f8 <mount_points_list_get+0x80>
  4058f0:	mov	x0, x19
  4058f4:	bl	403808 <mnt_free_table@plt>
  4058f8:	mov	w0, wzr
  4058fc:	bl	403468 <log_get_max_level_realm@plt>
  405900:	cmp	w0, #0x3
  405904:	b.lt	40595c <mount_points_list_get+0xe4>  // b.tstop
  405908:	adrp	x8, 409000 <parse_argv.options+0x160>
  40590c:	add	x8, x8, #0xbb3
  405910:	cmp	x24, #0x0
  405914:	csel	x6, x8, x24, eq  // eq = none
  405918:	mov	w1, w22
  40591c:	ldp	x20, x19, [sp, #176]
  405920:	ldp	x22, x21, [sp, #160]
  405924:	ldp	x24, x23, [sp, #144]
  405928:	ldp	x26, x25, [sp, #128]
  40592c:	ldp	x28, x27, [sp, #112]
  405930:	ldp	x29, x30, [sp, #96]
  405934:	adrp	x2, 409000 <parse_argv.options+0x160>
  405938:	adrp	x4, 409000 <parse_argv.options+0x160>
  40593c:	adrp	x5, 409000 <parse_argv.options+0x160>
  405940:	add	x2, x2, #0xb0e
  405944:	add	x4, x4, #0xb86
  405948:	add	x5, x5, #0xb9c
  40594c:	mov	w0, #0x3                   	// #3
  405950:	mov	w3, #0x41                  	// #65
  405954:	add	sp, sp, #0xc0
  405958:	b	403478 <log_internal_realm@plt>
  40595c:	mov	w8, wzr
  405960:	neg	w9, w22
  405964:	sub	w28, w8, w9, uxtb
  405968:	b	405cc4 <mount_points_list_get+0x44c>
  40596c:	mov	x1, xzr
  405970:	bl	403818 <mnt_table_parse_mtab@plt>
  405974:	mov	w22, w0
  405978:	tbnz	w0, #31, 4058e4 <mount_points_list_get+0x6c>
  40597c:	adrp	x8, 409000 <parse_argv.options+0x160>
  405980:	add	x8, x8, #0xbb3
  405984:	cmp	x24, #0x0
  405988:	adrp	x22, 409000 <parse_argv.options+0x160>
  40598c:	adrp	x23, 409000 <parse_argv.options+0x160>
  405990:	adrp	x25, 409000 <parse_argv.options+0x160>
  405994:	add	x22, x22, #0xb0e
  405998:	add	x23, x23, #0xb86
  40599c:	add	x25, x25, #0xbed
  4059a0:	csel	x27, x8, x24, eq  // eq = none
  4059a4:	sub	x2, x29, #0x10
  4059a8:	mov	x0, x19
  4059ac:	mov	x1, x20
  4059b0:	stp	xzr, xzr, [x29, #-32]
  4059b4:	stur	xzr, [x29, #-40]
  4059b8:	bl	403828 <mnt_table_next_fs@plt>
  4059bc:	cmp	w0, #0x1
  4059c0:	b.ne	4059d0 <mount_points_list_get+0x158>  // b.any
  4059c4:	mov	x24, xzr
  4059c8:	mov	w26, #0x4                   	// #4
  4059cc:	b	405aec <mount_points_list_get+0x274>
  4059d0:	mov	w26, w0
  4059d4:	tbnz	w0, #31, 405a7c <mount_points_list_get+0x204>
  4059d8:	ldur	x0, [x29, #-16]
  4059dc:	bl	403838 <mnt_fs_get_target@plt>
  4059e0:	cbz	x0, 405a70 <mount_points_list_get+0x1f8>
  4059e4:	mov	x26, x0
  4059e8:	ldur	x0, [x29, #-16]
  4059ec:	bl	403848 <mnt_fs_get_fstype@plt>
  4059f0:	ldur	x8, [x29, #-16]
  4059f4:	mov	x24, x0
  4059f8:	mov	x0, x8
  4059fc:	bl	403858 <mnt_fs_get_vfs_options@plt>
  405a00:	mov	x2, x0
  405a04:	sub	x0, x29, #0x18
  405a08:	mov	x1, x25
  405a0c:	mov	x3, xzr
  405a10:	bl	403868 <strextend_with_separator@plt>
  405a14:	cbz	x0, 405ac8 <mount_points_list_get+0x250>
  405a18:	ldur	x0, [x29, #-16]
  405a1c:	bl	403878 <mnt_fs_get_fs_options@plt>
  405a20:	mov	x2, x0
  405a24:	sub	x0, x29, #0x18
  405a28:	mov	x1, x25
  405a2c:	mov	x3, xzr
  405a30:	bl	403868 <strextend_with_separator@plt>
  405a34:	cbz	x0, 405ad0 <mount_points_list_get+0x258>
  405a38:	mov	x0, x26
  405a3c:	bl	407bb0 <mount_point_is_api>
  405a40:	tbnz	w0, #0, 405a70 <mount_points_list_get+0x1f8>
  405a44:	mov	x0, x26
  405a48:	bl	407d08 <mount_point_ignore>
  405a4c:	tbnz	w0, #0, 405a70 <mount_points_list_get+0x1f8>
  405a50:	adrp	x8, 40a000 <parse_argv.options+0x1160>
  405a54:	add	x8, x8, #0xc20
  405a58:	ldp	q0, q1, [x8]
  405a5c:	add	x1, sp, #0x10
  405a60:	mov	x0, x26
  405a64:	stp	q0, q1, [sp, #16]
  405a68:	bl	403888 <path_startswith_strv@plt>
  405a6c:	cbz	x0, 405b14 <mount_points_list_get+0x29c>
  405a70:	mov	x24, xzr
  405a74:	mov	w26, #0x5                   	// #5
  405a78:	b	405aec <mount_points_list_get+0x274>
  405a7c:	mov	w0, wzr
  405a80:	bl	403468 <log_get_max_level_realm@plt>
  405a84:	cmp	w0, #0x3
  405a88:	b.lt	405ab4 <mount_points_list_get+0x23c>  // b.tstop
  405a8c:	adrp	x5, 409000 <parse_argv.options+0x160>
  405a90:	mov	w0, #0x3                   	// #3
  405a94:	mov	w3, #0x50                  	// #80
  405a98:	mov	w1, w26
  405a9c:	mov	x2, x22
  405aa0:	mov	x4, x23
  405aa4:	add	x5, x5, #0xbc8
  405aa8:	mov	x6, x27
  405aac:	bl	403478 <log_internal_realm@plt>
  405ab0:	b	405ae0 <mount_points_list_get+0x268>
  405ab4:	mov	w8, wzr
  405ab8:	neg	w9, w26
  405abc:	mov	x24, xzr
  405ac0:	sub	w28, w8, w9, uxtb
  405ac4:	b	405ae8 <mount_points_list_get+0x270>
  405ac8:	mov	w2, #0x63                  	// #99
  405acc:	b	405ad4 <mount_points_list_get+0x25c>
  405ad0:	mov	w2, #0x67                  	// #103
  405ad4:	mov	x1, x22
  405ad8:	mov	x3, x23
  405adc:	bl	403898 <log_oom_internal@plt>
  405ae0:	mov	w28, w0
  405ae4:	mov	x24, xzr
  405ae8:	mov	w26, #0x1                   	// #1
  405aec:	mov	x0, x24
  405af0:	bl	4036b8 <free@plt>
  405af4:	ldur	x0, [x29, #-40]
  405af8:	bl	4036b8 <free@plt>
  405afc:	ldur	x0, [x29, #-24]
  405b00:	bl	4036b8 <free@plt>
  405b04:	cbz	w26, 4059a4 <mount_points_list_get+0x12c>
  405b08:	cmp	w26, #0x5
  405b0c:	b.eq	4059a4 <mount_points_list_get+0x12c>  // b.none
  405b10:	b	405ca8 <mount_points_list_get+0x430>
  405b14:	bl	403538 <detect_container@plt>
  405b18:	cmp	w0, #0x0
  405b1c:	b.gt	405bb8 <mount_points_list_get+0x340>
  405b20:	mov	x0, x24
  405b24:	bl	4038a8 <fstype_is_network@plt>
  405b28:	tbnz	w0, #0, 405bb8 <mount_points_list_get+0x340>
  405b2c:	mov	x0, x24
  405b30:	bl	4038b8 <fstype_is_api_vfs@plt>
  405b34:	tbnz	w0, #0, 405bb8 <mount_points_list_get+0x340>
  405b38:	mov	x0, x24
  405b3c:	bl	4038c8 <fstype_is_ro@plt>
  405b40:	tbnz	w0, #0, 405bb8 <mount_points_list_get+0x340>
  405b44:	ldur	x0, [x29, #-24]
  405b48:	adrp	x24, 40a000 <parse_argv.options+0x1160>
  405b4c:	add	x24, x24, #0xc40
  405b50:	sub	x2, x29, #0x8
  405b54:	mov	x1, x24
  405b58:	mov	x3, xzr
  405b5c:	mov	x4, xzr
  405b60:	bl	4038d8 <fstab_filter_options@plt>
  405b64:	tbnz	w0, #31, 405d0c <mount_points_list_get+0x494>
  405b68:	ldur	x8, [x29, #-8]
  405b6c:	cmp	x8, x24
  405b70:	b.eq	405bb8 <mount_points_list_get+0x340>  // b.none
  405b74:	ldur	x0, [x29, #-16]
  405b78:	sub	x1, x29, #0x20
  405b7c:	bl	4038e8 <mnt_fs_get_propagation@plt>
  405b80:	tbnz	w0, #31, 405c38 <mount_points_list_get+0x3c0>
  405b84:	ldp	x1, x0, [x29, #-32]
  405b88:	sub	x2, x29, #0x20
  405b8c:	sub	x3, x29, #0x28
  405b90:	bl	4038f8 <mount_option_mangle@plt>
  405b94:	tbnz	w0, #31, 405c6c <mount_points_list_get+0x3f4>
  405b98:	ldur	x8, [x29, #-32]
  405b9c:	mov	w9, #0x21                  	// #33
  405ba0:	and	x8, x8, #0xffffffffffffefff
  405ba4:	orr	x8, x8, x9
  405ba8:	stur	x8, [x29, #-32]
  405bac:	mov	w8, #0x1                   	// #1
  405bb0:	str	w8, [sp, #12]
  405bb4:	b	405bbc <mount_points_list_get+0x344>
  405bb8:	str	wzr, [sp, #12]
  405bbc:	mov	w0, #0x1                   	// #1
  405bc0:	mov	w1, #0x38                  	// #56
  405bc4:	bl	403908 <calloc@plt>
  405bc8:	mov	x24, x0
  405bcc:	cbz	x0, 405c18 <mount_points_list_get+0x3a0>
  405bd0:	mov	x0, x26
  405bd4:	bl	403918 <strdup@plt>
  405bd8:	str	x0, [x24]
  405bdc:	cbz	x0, 405c20 <mount_points_list_get+0x3a8>
  405be0:	ldp	x8, x9, [x29, #-40]
  405be4:	stur	xzr, [x29, #-40]
  405be8:	stp	x8, x9, [x24, #8]
  405bec:	ldr	w8, [sp, #12]
  405bf0:	strb	w8, [x24, #24]
  405bf4:	ldr	x8, [x21]
  405bf8:	str	x8, [x24, #40]
  405bfc:	cbz	x8, 405c04 <mount_points_list_get+0x38c>
  405c00:	str	x24, [x8, #48]
  405c04:	mov	w26, wzr
  405c08:	str	xzr, [x24, #48]
  405c0c:	str	x24, [x21]
  405c10:	mov	x24, xzr
  405c14:	b	405aec <mount_points_list_get+0x274>
  405c18:	mov	w2, #0x9e                  	// #158
  405c1c:	b	405c24 <mount_points_list_get+0x3ac>
  405c20:	mov	w2, #0xa2                  	// #162
  405c24:	mov	x1, x22
  405c28:	mov	x3, x23
  405c2c:	bl	403898 <log_oom_internal@plt>
  405c30:	mov	w28, w0
  405c34:	b	405ae8 <mount_points_list_get+0x270>
  405c38:	mov	w24, w0
  405c3c:	mov	w0, wzr
  405c40:	bl	403468 <log_get_max_level_realm@plt>
  405c44:	cmp	w0, #0x4
  405c48:	b.lt	405a70 <mount_points_list_get+0x1f8>  // b.tstop
  405c4c:	adrp	x5, 409000 <parse_argv.options+0x160>
  405c50:	mov	w0, #0x4                   	// #4
  405c54:	mov	w3, #0x8d                  	// #141
  405c58:	mov	w1, w24
  405c5c:	mov	x2, x22
  405c60:	mov	x4, x23
  405c64:	add	x5, x5, #0xbff
  405c68:	b	405c9c <mount_points_list_get+0x424>
  405c6c:	mov	w24, w0
  405c70:	mov	w0, wzr
  405c74:	bl	403468 <log_get_max_level_realm@plt>
  405c78:	cmp	w0, #0x4
  405c7c:	b.lt	405a70 <mount_points_list_get+0x1f8>  // b.tstop
  405c80:	adrp	x5, 409000 <parse_argv.options+0x160>
  405c84:	mov	w0, #0x4                   	// #4
  405c88:	mov	w3, #0x93                  	// #147
  405c8c:	mov	w1, w24
  405c90:	mov	x2, x22
  405c94:	mov	x4, x23
  405c98:	add	x5, x5, #0xc34
  405c9c:	mov	x6, x26
  405ca0:	bl	403478 <log_internal_realm@plt>
  405ca4:	b	405a70 <mount_points_list_get+0x1f8>
  405ca8:	cmp	w26, #0x4
  405cac:	b.ne	405cb4 <mount_points_list_get+0x43c>  // b.any
  405cb0:	mov	w28, wzr
  405cb4:	mov	x0, x20
  405cb8:	bl	4037f8 <mnt_free_iter@plt>
  405cbc:	mov	x0, x19
  405cc0:	bl	403808 <mnt_free_table@plt>
  405cc4:	mov	w0, w28
  405cc8:	ldp	x20, x19, [sp, #176]
  405ccc:	ldp	x22, x21, [sp, #160]
  405cd0:	ldp	x24, x23, [sp, #144]
  405cd4:	ldp	x26, x25, [sp, #128]
  405cd8:	ldp	x28, x27, [sp, #112]
  405cdc:	ldp	x29, x30, [sp, #96]
  405ce0:	add	sp, sp, #0xc0
  405ce4:	ret
  405ce8:	adrp	x1, 409000 <parse_argv.options+0x160>
  405cec:	adrp	x2, 409000 <parse_argv.options+0x160>
  405cf0:	adrp	x4, 409000 <parse_argv.options+0x160>
  405cf4:	add	x1, x1, #0xb06
  405cf8:	add	x2, x2, #0xb0e
  405cfc:	add	x4, x4, #0xb4f
  405d00:	mov	w3, #0x3d                  	// #61
  405d04:	mov	w0, wzr
  405d08:	bl	403708 <log_assert_failed_realm@plt>
  405d0c:	adrp	x1, 409000 <parse_argv.options+0x160>
  405d10:	adrp	x2, 409000 <parse_argv.options+0x160>
  405d14:	adrp	x4, 409000 <parse_argv.options+0x160>
  405d18:	add	x1, x1, #0xd74
  405d1c:	add	x2, x2, #0xdb1
  405d20:	add	x4, x4, #0xdc9
  405d24:	mov	w3, #0x1c                  	// #28
  405d28:	mov	w0, wzr
  405d2c:	bl	403708 <log_assert_failed_realm@plt>

0000000000405d30 <swap_list_get>:
  405d30:	sub	sp, sp, #0x50
  405d34:	stp	x29, x30, [sp, #16]
  405d38:	stp	x24, x23, [sp, #32]
  405d3c:	stp	x22, x21, [sp, #48]
  405d40:	stp	x20, x19, [sp, #64]
  405d44:	add	x29, sp, #0x10
  405d48:	cbz	x1, 405f88 <swap_list_get+0x258>
  405d4c:	mov	x22, x1
  405d50:	mov	x21, x0
  405d54:	bl	4037c8 <mnt_new_table@plt>
  405d58:	mov	x19, x0
  405d5c:	mov	w0, wzr
  405d60:	bl	4037d8 <mnt_new_iter@plt>
  405d64:	mov	x20, x0
  405d68:	cbz	x19, 405d8c <swap_list_get+0x5c>
  405d6c:	cbz	x20, 405d8c <swap_list_get+0x5c>
  405d70:	mov	x0, x19
  405d74:	mov	x1, x21
  405d78:	bl	403928 <mnt_table_parse_swaps@plt>
  405d7c:	cmn	w0, #0x2
  405d80:	b.ne	405de0 <swap_list_get+0xb0>  // b.any
  405d84:	mov	w21, wzr
  405d88:	b	405db0 <swap_list_get+0x80>
  405d8c:	adrp	x1, 409000 <parse_argv.options+0x160>
  405d90:	adrp	x3, 409000 <parse_argv.options+0x160>
  405d94:	add	x1, x1, #0xb0e
  405d98:	add	x3, x3, #0xc93
  405d9c:	mov	w2, #0xb8                  	// #184
  405da0:	mov	w0, wzr
  405da4:	bl	403898 <log_oom_internal@plt>
  405da8:	mov	w21, w0
  405dac:	cbz	x20, 405db8 <swap_list_get+0x88>
  405db0:	mov	x0, x20
  405db4:	bl	4037f8 <mnt_free_iter@plt>
  405db8:	cbz	x19, 405dc4 <swap_list_get+0x94>
  405dbc:	mov	x0, x19
  405dc0:	bl	403808 <mnt_free_table@plt>
  405dc4:	mov	w0, w21
  405dc8:	ldp	x20, x19, [sp, #64]
  405dcc:	ldp	x22, x21, [sp, #48]
  405dd0:	ldp	x24, x23, [sp, #32]
  405dd4:	ldp	x29, x30, [sp, #16]
  405dd8:	add	sp, sp, #0x50
  405ddc:	ret
  405de0:	mov	w23, w0
  405de4:	tbnz	w0, #31, 405e08 <swap_list_get+0xd8>
  405de8:	add	x2, sp, #0x8
  405dec:	mov	x0, x19
  405df0:	mov	x1, x20
  405df4:	bl	403828 <mnt_table_next_fs@plt>
  405df8:	cmp	w0, #0x1
  405dfc:	b.ne	405e58 <swap_list_get+0x128>  // b.any
  405e00:	mov	w21, wzr
  405e04:	b	405dac <swap_list_get+0x7c>
  405e08:	mov	w0, wzr
  405e0c:	bl	403468 <log_get_max_level_realm@plt>
  405e10:	cmp	w0, #0x3
  405e14:	b.lt	405ed0 <swap_list_get+0x1a0>  // b.tstop
  405e18:	adrp	x8, 409000 <parse_argv.options+0x160>
  405e1c:	add	x8, x8, #0xca1
  405e20:	cmp	x21, #0x0
  405e24:	adrp	x2, 409000 <parse_argv.options+0x160>
  405e28:	adrp	x4, 409000 <parse_argv.options+0x160>
  405e2c:	adrp	x5, 409000 <parse_argv.options+0x160>
  405e30:	csel	x6, x8, x21, eq  // eq = none
  405e34:	add	x2, x2, #0xb0e
  405e38:	add	x4, x4, #0xc93
  405e3c:	add	x5, x5, #0xb9c
  405e40:	mov	w0, #0x3                   	// #3
  405e44:	mov	w3, #0xbe                  	// #190
  405e48:	mov	w1, w23
  405e4c:	bl	403478 <log_internal_realm@plt>
  405e50:	mov	w21, w0
  405e54:	b	405db0 <swap_list_get+0x80>
  405e58:	mov	w24, w0
  405e5c:	b	405e84 <swap_list_get+0x154>
  405e60:	str	xzr, [x23, #48]
  405e64:	str	x23, [x22]
  405e68:	add	x2, sp, #0x8
  405e6c:	mov	x0, x19
  405e70:	mov	x1, x20
  405e74:	bl	403828 <mnt_table_next_fs@plt>
  405e78:	mov	w24, w0
  405e7c:	cmp	w0, #0x1
  405e80:	b.eq	405e00 <swap_list_get+0xd0>  // b.none
  405e84:	tbnz	w24, #31, 405ee0 <swap_list_get+0x1b0>
  405e88:	ldr	x0, [sp, #8]
  405e8c:	bl	403938 <mnt_fs_get_source@plt>
  405e90:	cbz	x0, 405e68 <swap_list_get+0x138>
  405e94:	mov	x24, x0
  405e98:	mov	w0, #0x1                   	// #1
  405e9c:	mov	w1, #0x38                  	// #56
  405ea0:	bl	403908 <calloc@plt>
  405ea4:	mov	x23, x0
  405ea8:	cbz	x0, 405f34 <swap_list_get+0x204>
  405eac:	mov	x0, x24
  405eb0:	bl	403918 <strdup@plt>
  405eb4:	str	x0, [x23]
  405eb8:	cbz	x0, 405f4c <swap_list_get+0x21c>
  405ebc:	ldr	x8, [x22]
  405ec0:	str	x8, [x23, #40]
  405ec4:	cbz	x8, 405e60 <swap_list_get+0x130>
  405ec8:	str	x23, [x8, #48]
  405ecc:	b	405e60 <swap_list_get+0x130>
  405ed0:	mov	w8, wzr
  405ed4:	neg	w9, w23
  405ed8:	sub	w21, w8, w9, uxtb
  405edc:	b	405db0 <swap_list_get+0x80>
  405ee0:	mov	w0, wzr
  405ee4:	bl	403468 <log_get_max_level_realm@plt>
  405ee8:	cmp	w0, #0x3
  405eec:	b.lt	405f6c <swap_list_get+0x23c>  // b.tstop
  405ef0:	adrp	x8, 409000 <parse_argv.options+0x160>
  405ef4:	add	x8, x8, #0xca1
  405ef8:	cmp	x21, #0x0
  405efc:	adrp	x2, 409000 <parse_argv.options+0x160>
  405f00:	adrp	x4, 409000 <parse_argv.options+0x160>
  405f04:	adrp	x5, 409000 <parse_argv.options+0x160>
  405f08:	csel	x6, x8, x21, eq  // eq = none
  405f0c:	add	x2, x2, #0xb0e
  405f10:	add	x4, x4, #0xc93
  405f14:	add	x5, x5, #0xbc8
  405f18:	mov	w0, #0x3                   	// #3
  405f1c:	mov	w3, #0xc9                  	// #201
  405f20:	mov	w1, w24
  405f24:	bl	403478 <log_internal_realm@plt>
  405f28:	mov	w21, w0
  405f2c:	mov	x23, xzr
  405f30:	b	405f7c <swap_list_get+0x24c>
  405f34:	adrp	x1, 409000 <parse_argv.options+0x160>
  405f38:	adrp	x3, 409000 <parse_argv.options+0x160>
  405f3c:	add	x1, x1, #0xb0e
  405f40:	add	x3, x3, #0xc93
  405f44:	mov	w2, #0xd1                  	// #209
  405f48:	b	405f60 <swap_list_get+0x230>
  405f4c:	adrp	x1, 409000 <parse_argv.options+0x160>
  405f50:	adrp	x3, 409000 <parse_argv.options+0x160>
  405f54:	add	x1, x1, #0xb0e
  405f58:	add	x3, x3, #0xc93
  405f5c:	mov	w2, #0xd5                  	// #213
  405f60:	bl	403898 <log_oom_internal@plt>
  405f64:	mov	w21, w0
  405f68:	b	405f7c <swap_list_get+0x24c>
  405f6c:	mov	w8, wzr
  405f70:	neg	w9, w24
  405f74:	mov	x23, xzr
  405f78:	sub	w21, w8, w9, uxtb
  405f7c:	mov	x0, x23
  405f80:	bl	4036b8 <free@plt>
  405f84:	b	405dac <swap_list_get+0x7c>
  405f88:	adrp	x1, 409000 <parse_argv.options+0x160>
  405f8c:	adrp	x2, 409000 <parse_argv.options+0x160>
  405f90:	adrp	x4, 409000 <parse_argv.options+0x160>
  405f94:	add	x1, x1, #0xb06
  405f98:	add	x2, x2, #0xb0e
  405f9c:	add	x4, x4, #0xc64
  405fa0:	mov	w3, #0xb3                  	// #179
  405fa4:	mov	w0, wzr
  405fa8:	bl	403708 <log_assert_failed_realm@plt>

0000000000405fac <umount_all>:
  405fac:	sub	sp, sp, #0x190
  405fb0:	stp	x29, x30, [sp, #304]
  405fb4:	stp	x28, x27, [sp, #320]
  405fb8:	stp	x26, x25, [sp, #336]
  405fbc:	stp	x24, x23, [sp, #352]
  405fc0:	stp	x22, x21, [sp, #368]
  405fc4:	stp	x20, x19, [sp, #384]
  405fc8:	add	x29, sp, #0x130
  405fcc:	str	w1, [sp, #12]
  405fd0:	str	x0, [sp, #16]
  405fd4:	cbz	x0, 4065ac <umount_all+0x600>
  405fd8:	adrp	x21, 409000 <parse_argv.options+0x160>
  405fdc:	adrp	x22, 409000 <parse_argv.options+0x160>
  405fe0:	adrp	x24, 409000 <parse_argv.options+0x160>
  405fe4:	adrp	x19, 409000 <parse_argv.options+0x160>
  405fe8:	adrp	x28, 409000 <parse_argv.options+0x160>
  405fec:	sub	x20, x29, #0x90
  405ff0:	add	x21, x21, #0xf79
  405ff4:	add	x22, x22, #0xa6e
  405ff8:	add	x24, x24, #0xb0e
  405ffc:	add	x19, x19, #0xe30
  406000:	add	x28, x28, #0xe3d
  406004:	add	x1, sp, #0x18
  406008:	mov	x0, xzr
  40600c:	str	xzr, [sp, #24]
  406010:	bl	405878 <mount_points_list_get>
  406014:	tbnz	w0, #31, 40636c <umount_all+0x3c0>
  406018:	ldr	x27, [sp, #24]
  40601c:	cbz	x27, 4063dc <umount_all+0x430>
  406020:	mov	w23, wzr
  406024:	mov	w25, wzr
  406028:	b	406038 <umount_all+0x8c>
  40602c:	add	w25, w25, #0x1
  406030:	ldr	x27, [x27, #40]
  406034:	cbz	x27, 406398 <umount_all+0x3ec>
  406038:	ldrb	w8, [x27, #24]
  40603c:	cbz	w8, 4061a4 <umount_all+0x1f8>
  406040:	add	x1, sp, #0x20
  406044:	mov	w2, #0x11                  	// #17
  406048:	mov	w3, #0xffffffff            	// #-1
  40604c:	mov	w0, wzr
  406050:	bl	403728 <sigprocmask_many@plt>
  406054:	tbnz	w0, #31, 406428 <umount_all+0x47c>
  406058:	ldp	q0, q1, [sp, #96]
  40605c:	ldp	q2, q3, [sp, #128]
  406060:	add	x4, sp, #0x20
  406064:	mov	w3, #0x33                  	// #51
  406068:	stp	q0, q1, [x20, #64]
  40606c:	ldp	q0, q1, [sp, #32]
  406070:	stp	q2, q3, [x20, #96]
  406074:	ldp	q2, q3, [sp, #64]
  406078:	mov	x0, x19
  40607c:	mov	x1, xzr
  406080:	mov	x2, xzr
  406084:	stp	q0, q1, [x20]
  406088:	stp	q2, q3, [x20, #32]
  40608c:	bl	403688 <safe_fork_full@plt>
  406090:	mov	w26, w0
  406094:	tbnz	w0, #31, 40618c <umount_all+0x1e0>
  406098:	cbz	w26, 40644c <umount_all+0x4a0>
  40609c:	ldr	w0, [sp, #32]
  4060a0:	mov	w1, #0x4a80                	// #19072
  4060a4:	movk	w1, #0x55d, lsl #16
  4060a8:	bl	403758 <wait_for_terminate_with_timeout@plt>
  4060ac:	cmn	w0, #0x47
  4060b0:	b.eq	40610c <umount_all+0x160>  // b.none
  4060b4:	mov	w26, w0
  4060b8:	cmn	w0, #0x6e
  4060bc:	b.ne	406148 <umount_all+0x19c>  // b.any
  4060c0:	mov	w0, wzr
  4060c4:	bl	403468 <log_get_max_level_realm@plt>
  4060c8:	cmp	w0, #0x3
  4060cc:	b.lt	4060f8 <umount_all+0x14c>  // b.tstop
  4060d0:	ldr	x6, [x27]
  4060d4:	ldr	w7, [sp, #32]
  4060d8:	adrp	x5, 409000 <parse_argv.options+0x160>
  4060dc:	mov	w0, #0x3                   	// #3
  4060e0:	mov	w1, #0xffffff92            	// #-110
  4060e4:	mov	w3, #0x199                 	// #409
  4060e8:	mov	x2, x24
  4060ec:	mov	x4, x28
  4060f0:	add	x5, x5, #0xea7
  4060f4:	bl	403478 <log_internal_realm@plt>
  4060f8:	ldr	w0, [sp, #32]
  4060fc:	mov	w1, #0x9                   	// #9
  406100:	bl	4037a8 <kill@plt>
  406104:	mov	w26, #0xffffff92            	// #-110
  406108:	b	40618c <umount_all+0x1e0>
  40610c:	mov	w0, wzr
  406110:	bl	403468 <log_get_max_level_realm@plt>
  406114:	cmp	w0, #0x7
  406118:	b.lt	406188 <umount_all+0x1dc>  // b.tstop
  40611c:	ldr	x6, [x27]
  406120:	ldr	w7, [sp, #32]
  406124:	adrp	x5, 409000 <parse_argv.options+0x160>
  406128:	mov	w0, #0x7                   	// #7
  40612c:	mov	w1, #0xffffffb9            	// #-71
  406130:	mov	w3, #0x19c                 	// #412
  406134:	mov	w26, #0xffffffb9            	// #-71
  406138:	mov	x2, x24
  40613c:	mov	x4, x28
  406140:	add	x5, x5, #0xedd
  406144:	b	406180 <umount_all+0x1d4>
  406148:	tbz	w26, #31, 40618c <umount_all+0x1e0>
  40614c:	mov	w0, wzr
  406150:	bl	403468 <log_get_max_level_realm@plt>
  406154:	cmp	w0, #0x3
  406158:	b.lt	40618c <umount_all+0x1e0>  // b.tstop
  40615c:	ldr	x6, [x27]
  406160:	ldr	w7, [sp, #32]
  406164:	adrp	x5, 409000 <parse_argv.options+0x160>
  406168:	mov	w0, #0x3                   	// #3
  40616c:	mov	w3, #0x19e                 	// #414
  406170:	mov	w1, w26
  406174:	mov	x2, x24
  406178:	mov	x4, x28
  40617c:	add	x5, x5, #0xf2d
  406180:	bl	403478 <log_internal_realm@plt>
  406184:	b	40618c <umount_all+0x1e0>
  406188:	mov	w26, #0xffffffb9            	// #-71
  40618c:	sub	x1, x29, #0x90
  406190:	mov	w0, #0x2                   	// #2
  406194:	mov	x2, xzr
  406198:	bl	4037b8 <sigprocmask@plt>
  40619c:	tbnz	w0, #31, 406404 <umount_all+0x458>
  4061a0:	tbnz	w26, #31, 406298 <umount_all+0x2ec>
  4061a4:	ldr	x26, [x27]
  4061a8:	mov	x1, x21
  4061ac:	mov	x0, x26
  4061b0:	bl	403948 <path_equal@plt>
  4061b4:	tbnz	w0, #0, 406030 <umount_all+0x84>
  4061b8:	mov	x0, x26
  4061bc:	mov	x1, x22
  4061c0:	bl	403958 <path_startswith@plt>
  4061c4:	cbnz	x0, 406030 <umount_all+0x84>
  4061c8:	add	x1, sp, #0x20
  4061cc:	mov	w2, #0x11                  	// #17
  4061d0:	mov	w3, #0xffffffff            	// #-1
  4061d4:	bl	403728 <sigprocmask_many@plt>
  4061d8:	tbnz	w0, #31, 4064e8 <umount_all+0x53c>
  4061dc:	ldp	q0, q1, [sp, #96]
  4061e0:	ldp	q2, q3, [sp, #128]
  4061e4:	adrp	x0, 409000 <parse_argv.options+0x160>
  4061e8:	add	x4, sp, #0x20
  4061ec:	stp	q0, q1, [x20, #64]
  4061f0:	ldp	q0, q1, [sp, #32]
  4061f4:	stp	q2, q3, [x20, #96]
  4061f8:	ldp	q2, q3, [sp, #64]
  4061fc:	mov	w3, #0x33                  	// #51
  406200:	add	x0, x0, #0xfa6
  406204:	mov	x1, xzr
  406208:	mov	x2, xzr
  40620c:	stp	q0, q1, [x20]
  406210:	stp	q2, q3, [x20, #32]
  406214:	bl	403688 <safe_fork_full@plt>
  406218:	mov	w26, w0
  40621c:	tbnz	w0, #31, 406348 <umount_all+0x39c>
  406220:	cbz	w26, 40650c <umount_all+0x560>
  406224:	ldr	w0, [sp, #32]
  406228:	mov	w1, #0x4a80                	// #19072
  40622c:	movk	w1, #0x55d, lsl #16
  406230:	bl	403758 <wait_for_terminate_with_timeout@plt>
  406234:	cmn	w0, #0x47
  406238:	b.eq	4062c0 <umount_all+0x314>  // b.none
  40623c:	mov	w26, w0
  406240:	cmn	w0, #0x6e
  406244:	b.ne	406300 <umount_all+0x354>  // b.any
  406248:	mov	w0, wzr
  40624c:	bl	403468 <log_get_max_level_realm@plt>
  406250:	cmp	w0, #0x3
  406254:	b.lt	406284 <umount_all+0x2d8>  // b.tstop
  406258:	ldr	x6, [x27]
  40625c:	ldr	w7, [sp, #32]
  406260:	adrp	x4, 409000 <parse_argv.options+0x160>
  406264:	adrp	x5, 409000 <parse_argv.options+0x160>
  406268:	mov	w0, #0x3                   	// #3
  40626c:	mov	w1, #0xffffff92            	// #-110
  406270:	mov	w3, #0x1c5                 	// #453
  406274:	mov	x2, x24
  406278:	add	x4, x4, #0xfb2
  40627c:	add	x5, x5, #0xff0
  406280:	bl	403478 <log_internal_realm@plt>
  406284:	ldr	w0, [sp, #32]
  406288:	mov	w1, #0x9                   	// #9
  40628c:	bl	4037a8 <kill@plt>
  406290:	mov	w26, #0xffffff92            	// #-110
  406294:	b	406348 <umount_all+0x39c>
  406298:	ldr	x26, [x27]
  40629c:	mov	x1, x21
  4062a0:	mov	x0, x26
  4062a4:	bl	403948 <path_equal@plt>
  4062a8:	tbnz	w0, #0, 40602c <umount_all+0x80>
  4062ac:	mov	x0, x26
  4062b0:	mov	x1, x22
  4062b4:	bl	403958 <path_startswith@plt>
  4062b8:	cbnz	x0, 40602c <umount_all+0x80>
  4062bc:	b	4061a4 <umount_all+0x1f8>
  4062c0:	mov	w0, wzr
  4062c4:	bl	403468 <log_get_max_level_realm@plt>
  4062c8:	cmp	w0, #0x7
  4062cc:	b.lt	406344 <umount_all+0x398>  // b.tstop
  4062d0:	ldr	x6, [x27]
  4062d4:	ldr	w7, [sp, #32]
  4062d8:	adrp	x4, 409000 <parse_argv.options+0x160>
  4062dc:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4062e0:	mov	w0, #0x7                   	// #7
  4062e4:	mov	w1, #0xffffffb9            	// #-71
  4062e8:	mov	w3, #0x1c8                 	// #456
  4062ec:	mov	w26, #0xffffffb9            	// #-71
  4062f0:	mov	x2, x24
  4062f4:	add	x4, x4, #0xfb2
  4062f8:	add	x5, x5, #0x26
  4062fc:	b	40633c <umount_all+0x390>
  406300:	tbz	w26, #31, 406348 <umount_all+0x39c>
  406304:	mov	w0, wzr
  406308:	bl	403468 <log_get_max_level_realm@plt>
  40630c:	cmp	w0, #0x3
  406310:	b.lt	406348 <umount_all+0x39c>  // b.tstop
  406314:	ldr	x6, [x27]
  406318:	ldr	w7, [sp, #32]
  40631c:	adrp	x4, 409000 <parse_argv.options+0x160>
  406320:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  406324:	mov	w0, #0x3                   	// #3
  406328:	mov	w3, #0x1ca                 	// #458
  40632c:	mov	w1, w26
  406330:	mov	x2, x24
  406334:	add	x4, x4, #0xfb2
  406338:	add	x5, x5, #0x76
  40633c:	bl	403478 <log_internal_realm@plt>
  406340:	b	406348 <umount_all+0x39c>
  406344:	mov	w26, #0xffffffb9            	// #-71
  406348:	sub	x1, x29, #0x90
  40634c:	mov	w0, #0x2                   	// #2
  406350:	mov	x2, xzr
  406354:	bl	4037b8 <sigprocmask@plt>
  406358:	tbnz	w0, #31, 406404 <umount_all+0x458>
  40635c:	cmp	w26, #0x0
  406360:	csinc	w23, w23, wzr, lt  // lt = tstop
  406364:	add	w25, w25, w26, lsr #31
  406368:	b	406030 <umount_all+0x84>
  40636c:	mov	w25, w0
  406370:	mov	w23, wzr
  406374:	b	406398 <umount_all+0x3ec>
  406378:	str	x9, [sp, #24]
  40637c:	stp	xzr, xzr, [x8]
  406380:	ldr	x0, [x26]
  406384:	bl	4036b8 <free@plt>
  406388:	ldr	x0, [x26, #8]
  40638c:	bl	4036b8 <free@plt>
  406390:	mov	x0, x26
  406394:	bl	4036b8 <free@plt>
  406398:	ldr	x26, [sp, #24]
  40639c:	cbz	x26, 4063c4 <umount_all+0x418>
  4063a0:	mov	x8, x26
  4063a4:	ldr	x9, [x8, #40]!
  4063a8:	cbz	x9, 4063b4 <umount_all+0x408>
  4063ac:	ldr	x10, [x26, #48]
  4063b0:	str	x10, [x9, #48]
  4063b4:	ldr	x10, [x26, #48]
  4063b8:	cbz	x10, 406378 <umount_all+0x3cc>
  4063bc:	str	x9, [x10, #40]
  4063c0:	b	40637c <umount_all+0x3d0>
  4063c4:	tst	w23, #0xff
  4063c8:	b.eq	4063e0 <umount_all+0x434>  // b.none
  4063cc:	ldr	x8, [sp, #16]
  4063d0:	mov	w9, #0x1                   	// #1
  4063d4:	strb	w9, [x8]
  4063d8:	b	406004 <umount_all+0x58>
  4063dc:	mov	w25, wzr
  4063e0:	mov	w0, w25
  4063e4:	ldp	x20, x19, [sp, #384]
  4063e8:	ldp	x22, x21, [sp, #368]
  4063ec:	ldp	x24, x23, [sp, #352]
  4063f0:	ldp	x26, x25, [sp, #336]
  4063f4:	ldp	x28, x27, [sp, #320]
  4063f8:	ldp	x29, x30, [sp, #304]
  4063fc:	add	sp, sp, #0x190
  406400:	ret
  406404:	adrp	x1, 409000 <parse_argv.options+0x160>
  406408:	adrp	x2, 409000 <parse_argv.options+0x160>
  40640c:	adrp	x4, 409000 <parse_argv.options+0x160>
  406410:	add	x1, x1, #0x952
  406414:	add	x2, x2, #0x97d
  406418:	add	x4, x4, #0x995
  40641c:	mov	w3, #0x18                  	// #24
  406420:	mov	w0, wzr
  406424:	bl	403708 <log_assert_failed_realm@plt>
  406428:	adrp	x1, 409000 <parse_argv.options+0x160>
  40642c:	adrp	x2, 409000 <parse_argv.options+0x160>
  406430:	adrp	x4, 409000 <parse_argv.options+0x160>
  406434:	add	x1, x1, #0x833
  406438:	add	x2, x2, #0xb0e
  40643c:	add	x4, x4, #0xe04
  406440:	mov	w3, #0x181                 	// #385
  406444:	mov	w0, wzr
  406448:	bl	403708 <log_assert_failed_realm@plt>
  40644c:	mov	w0, wzr
  406450:	bl	403468 <log_get_max_level_realm@plt>
  406454:	cmp	w0, #0x6
  406458:	b.lt	406488 <umount_all+0x4dc>  // b.tstop
  40645c:	ldp	x6, x7, [x27]
  406460:	adrp	x2, 409000 <parse_argv.options+0x160>
  406464:	adrp	x4, 409000 <parse_argv.options+0x160>
  406468:	adrp	x5, 409000 <parse_argv.options+0x160>
  40646c:	add	x2, x2, #0xb0e
  406470:	add	x4, x4, #0xe3d
  406474:	add	x5, x5, #0xe52
  406478:	mov	w0, #0x6                   	// #6
  40647c:	mov	w3, #0x18d                 	// #397
  406480:	mov	w1, wzr
  406484:	bl	403478 <log_internal_realm@plt>
  406488:	ldp	x4, x3, [x27, #8]
  40648c:	ldr	x1, [x27]
  406490:	mov	x0, xzr
  406494:	mov	x2, xzr
  406498:	bl	403628 <mount@plt>
  40649c:	mov	w19, w0
  4064a0:	tbz	w0, #31, 4065a4 <umount_all+0x5f8>
  4064a4:	mov	w0, wzr
  4064a8:	bl	403468 <log_get_max_level_realm@plt>
  4064ac:	ldr	w8, [sp, #12]
  4064b0:	and	w8, w8, #0x7
  4064b4:	cmp	w0, w8
  4064b8:	b.lt	4065a4 <umount_all+0x5f8>  // b.tstop
  4064bc:	bl	403678 <__errno_location@plt>
  4064c0:	ldr	w1, [x0]
  4064c4:	ldr	x6, [x27]
  4064c8:	adrp	x2, 409000 <parse_argv.options+0x160>
  4064cc:	adrp	x4, 409000 <parse_argv.options+0x160>
  4064d0:	adrp	x5, 409000 <parse_argv.options+0x160>
  4064d4:	add	x2, x2, #0xb0e
  4064d8:	add	x4, x4, #0xe3d
  4064dc:	add	x5, x5, #0xe82
  4064e0:	mov	w3, #0x192                 	// #402
  4064e4:	b	40659c <umount_all+0x5f0>
  4064e8:	adrp	x1, 409000 <parse_argv.options+0x160>
  4064ec:	adrp	x2, 409000 <parse_argv.options+0x160>
  4064f0:	adrp	x4, 409000 <parse_argv.options+0x160>
  4064f4:	add	x1, x1, #0x833
  4064f8:	add	x2, x2, #0xb0e
  4064fc:	add	x4, x4, #0xf7b
  406500:	mov	w3, #0x1a7                 	// #423
  406504:	mov	w0, wzr
  406508:	bl	403708 <log_assert_failed_realm@plt>
  40650c:	mov	w0, wzr
  406510:	bl	403468 <log_get_max_level_realm@plt>
  406514:	cmp	w0, #0x6
  406518:	b.lt	406548 <umount_all+0x59c>  // b.tstop
  40651c:	ldr	x6, [x27]
  406520:	adrp	x2, 409000 <parse_argv.options+0x160>
  406524:	adrp	x4, 409000 <parse_argv.options+0x160>
  406528:	adrp	x5, 409000 <parse_argv.options+0x160>
  40652c:	add	x2, x2, #0xb0e
  406530:	add	x4, x4, #0xfb2
  406534:	add	x5, x5, #0xfc6
  406538:	mov	w0, #0x6                   	// #6
  40653c:	mov	w3, #0x1b3                 	// #435
  406540:	mov	w1, wzr
  406544:	bl	403478 <log_internal_realm@plt>
  406548:	ldr	x0, [x27]
  40654c:	mov	w1, #0x1                   	// #1
  406550:	bl	403968 <umount2@plt>
  406554:	mov	w19, w0
  406558:	tbz	w0, #31, 4065a4 <umount_all+0x5f8>
  40655c:	mov	w0, wzr
  406560:	bl	403468 <log_get_max_level_realm@plt>
  406564:	ldr	w8, [sp, #12]
  406568:	and	w8, w8, #0x7
  40656c:	cmp	w0, w8
  406570:	b.lt	4065a4 <umount_all+0x5f8>  // b.tstop
  406574:	bl	403678 <__errno_location@plt>
  406578:	ldr	w1, [x0]
  40657c:	ldr	x6, [x27]
  406580:	adrp	x2, 409000 <parse_argv.options+0x160>
  406584:	adrp	x4, 409000 <parse_argv.options+0x160>
  406588:	adrp	x5, 409000 <parse_argv.options+0x160>
  40658c:	add	x2, x2, #0xb0e
  406590:	add	x4, x4, #0xfb2
  406594:	add	x5, x5, #0xfd7
  406598:	mov	w3, #0x1be                 	// #446
  40659c:	ldr	w0, [sp, #12]
  4065a0:	bl	403478 <log_internal_realm@plt>
  4065a4:	lsr	w0, w19, #31
  4065a8:	bl	403718 <_exit@plt>
  4065ac:	adrp	x1, 409000 <parse_argv.options+0x160>
  4065b0:	adrp	x2, 409000 <parse_argv.options+0x160>
  4065b4:	adrp	x4, 409000 <parse_argv.options+0x160>
  4065b8:	add	x1, x1, #0xcad
  4065bc:	add	x2, x2, #0xb0e
  4065c0:	add	x4, x4, #0xcb5
  4065c4:	mov	w3, #0x276                 	// #630
  4065c8:	bl	403708 <log_assert_failed_realm@plt>

00000000004065cc <swapoff_all>:
  4065cc:	sub	sp, sp, #0x70
  4065d0:	stp	x29, x30, [sp, #16]
  4065d4:	stp	x28, x27, [sp, #32]
  4065d8:	stp	x26, x25, [sp, #48]
  4065dc:	stp	x24, x23, [sp, #64]
  4065e0:	stp	x22, x21, [sp, #80]
  4065e4:	stp	x20, x19, [sp, #96]
  4065e8:	add	x29, sp, #0x10
  4065ec:	cbz	x0, 4067c0 <swapoff_all+0x1f4>
  4065f0:	mov	x20, x0
  4065f4:	add	x1, sp, #0x8
  4065f8:	mov	x0, xzr
  4065fc:	str	xzr, [sp, #8]
  406600:	bl	405d30 <swap_list_get>
  406604:	tbnz	w0, #31, 406720 <swapoff_all+0x154>
  406608:	ldr	x25, [sp, #8]
  40660c:	cbz	x25, 406774 <swapoff_all+0x1a8>
  406610:	adrp	x21, 409000 <parse_argv.options+0x160>
  406614:	adrp	x22, 40a000 <parse_argv.options+0x1160>
  406618:	adrp	x23, 40a000 <parse_argv.options+0x1160>
  40661c:	adrp	x24, 40a000 <parse_argv.options+0x1160>
  406620:	mov	w19, wzr
  406624:	add	x21, x21, #0xb0e
  406628:	add	x22, x22, #0xc2
  40662c:	add	x23, x23, #0xd7
  406630:	mov	w26, #0x1                   	// #1
  406634:	add	x24, x24, #0xed
  406638:	b	406648 <swapoff_all+0x7c>
  40663c:	add	w19, w19, #0x1
  406640:	mov	x25, x27
  406644:	cbz	x27, 406748 <swapoff_all+0x17c>
  406648:	mov	x28, x25
  40664c:	ldr	x27, [x28, #40]!
  406650:	mov	w0, wzr
  406654:	bl	403468 <log_get_max_level_realm@plt>
  406658:	cmp	w0, #0x6
  40665c:	b.lt	406680 <swapoff_all+0xb4>  // b.tstop
  406660:	ldr	x6, [x25]
  406664:	mov	w0, #0x6                   	// #6
  406668:	mov	w3, #0x210                 	// #528
  40666c:	mov	w1, wzr
  406670:	mov	x2, x21
  406674:	mov	x4, x22
  406678:	mov	x5, x23
  40667c:	bl	403478 <log_internal_realm@plt>
  406680:	ldr	x0, [x25]
  406684:	bl	403978 <swapoff@plt>
  406688:	cbz	w0, 4066c4 <swapoff_all+0xf8>
  40668c:	mov	w0, wzr
  406690:	bl	403468 <log_get_max_level_realm@plt>
  406694:	cmp	w0, #0x4
  406698:	b.lt	40663c <swapoff_all+0x70>  // b.tstop
  40669c:	bl	403678 <__errno_location@plt>
  4066a0:	ldr	w1, [x0]
  4066a4:	ldr	x6, [x25]
  4066a8:	mov	w0, #0x4                   	// #4
  4066ac:	mov	w3, #0x215                 	// #533
  4066b0:	mov	x2, x21
  4066b4:	mov	x4, x22
  4066b8:	mov	x5, x24
  4066bc:	bl	403478 <log_internal_realm@plt>
  4066c0:	b	40663c <swapoff_all+0x70>
  4066c4:	strb	w26, [x20]
  4066c8:	ldr	x8, [x28]
  4066cc:	cbz	x8, 4066d8 <swapoff_all+0x10c>
  4066d0:	ldr	x9, [x25, #48]
  4066d4:	str	x9, [x8, #48]
  4066d8:	ldr	x9, [x25, #48]
  4066dc:	cbz	x9, 4066e8 <swapoff_all+0x11c>
  4066e0:	str	x8, [x9, #40]
  4066e4:	b	4066f8 <swapoff_all+0x12c>
  4066e8:	ldr	x9, [sp, #8]
  4066ec:	cmp	x9, x25
  4066f0:	b.ne	40679c <swapoff_all+0x1d0>  // b.any
  4066f4:	str	x8, [sp, #8]
  4066f8:	stp	xzr, xzr, [x28]
  4066fc:	ldr	x0, [x25]
  406700:	bl	4036b8 <free@plt>
  406704:	ldr	x0, [x25, #8]
  406708:	bl	4036b8 <free@plt>
  40670c:	mov	x0, x25
  406710:	bl	4036b8 <free@plt>
  406714:	mov	x25, x27
  406718:	cbnz	x27, 406648 <swapoff_all+0x7c>
  40671c:	b	406748 <swapoff_all+0x17c>
  406720:	mov	w19, w0
  406724:	b	406748 <swapoff_all+0x17c>
  406728:	str	x9, [x10, #40]
  40672c:	stp	xzr, xzr, [x8]
  406730:	ldr	x0, [x20]
  406734:	bl	4036b8 <free@plt>
  406738:	ldr	x0, [x20, #8]
  40673c:	bl	4036b8 <free@plt>
  406740:	mov	x0, x20
  406744:	bl	4036b8 <free@plt>
  406748:	ldr	x20, [sp, #8]
  40674c:	cbz	x20, 406778 <swapoff_all+0x1ac>
  406750:	mov	x8, x20
  406754:	ldr	x9, [x8, #40]!
  406758:	cbz	x9, 406764 <swapoff_all+0x198>
  40675c:	ldr	x10, [x20, #48]
  406760:	str	x10, [x9, #48]
  406764:	ldr	x10, [x20, #48]
  406768:	cbnz	x10, 406728 <swapoff_all+0x15c>
  40676c:	str	x9, [sp, #8]
  406770:	b	40672c <swapoff_all+0x160>
  406774:	mov	w19, wzr
  406778:	mov	w0, w19
  40677c:	ldp	x20, x19, [sp, #96]
  406780:	ldp	x22, x21, [sp, #80]
  406784:	ldp	x24, x23, [sp, #64]
  406788:	ldp	x26, x25, [sp, #48]
  40678c:	ldp	x28, x27, [sp, #32]
  406790:	ldp	x29, x30, [sp, #16]
  406794:	add	sp, sp, #0x70
  406798:	ret
  40679c:	adrp	x1, 409000 <parse_argv.options+0x160>
  4067a0:	adrp	x2, 409000 <parse_argv.options+0x160>
  4067a4:	adrp	x4, 409000 <parse_argv.options+0x160>
  4067a8:	add	x1, x1, #0xd64
  4067ac:	add	x2, x2, #0xb0e
  4067b0:	add	x4, x4, #0xd31
  4067b4:	mov	w3, #0x2a                  	// #42
  4067b8:	mov	w0, wzr
  4067bc:	bl	403708 <log_assert_failed_realm@plt>
  4067c0:	adrp	x1, 409000 <parse_argv.options+0x160>
  4067c4:	adrp	x2, 409000 <parse_argv.options+0x160>
  4067c8:	adrp	x4, 409000 <parse_argv.options+0x160>
  4067cc:	add	x1, x1, #0xcad
  4067d0:	add	x2, x2, #0xb0e
  4067d4:	add	x4, x4, #0xcd2
  4067d8:	mov	w3, #0x28a                 	// #650
  4067dc:	bl	403708 <log_assert_failed_realm@plt>

00000000004067e0 <loopback_detach_all>:
  4067e0:	sub	sp, sp, #0x170
  4067e4:	stp	x29, x30, [sp, #272]
  4067e8:	stp	x28, x27, [sp, #288]
  4067ec:	stp	x26, x25, [sp, #304]
  4067f0:	stp	x24, x23, [sp, #320]
  4067f4:	stp	x22, x21, [sp, #336]
  4067f8:	stp	x20, x19, [sp, #352]
  4067fc:	add	x29, sp, #0x110
  406800:	str	w1, [sp]
  406804:	cbz	x0, 406bbc <loopback_detach_all+0x3dc>
  406808:	mov	x20, x0
  40680c:	add	x0, sp, #0x88
  406810:	str	xzr, [sp, #136]
  406814:	bl	403988 <sd_device_enumerator_new@plt>
  406818:	tbnz	w0, #31, 406888 <loopback_detach_all+0xa8>
  40681c:	ldr	x0, [sp, #136]
  406820:	bl	403998 <sd_device_enumerator_allow_uninitialized@plt>
  406824:	tbnz	w0, #31, 406888 <loopback_detach_all+0xa8>
  406828:	ldr	x0, [sp, #136]
  40682c:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  406830:	add	x1, x1, #0x10e
  406834:	mov	w2, #0x1                   	// #1
  406838:	bl	4039a8 <sd_device_enumerator_add_match_subsystem@plt>
  40683c:	tbnz	w0, #31, 406888 <loopback_detach_all+0xa8>
  406840:	ldr	x0, [sp, #136]
  406844:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  406848:	add	x1, x1, #0x114
  40684c:	bl	4039b8 <sd_device_enumerator_add_match_sysname@plt>
  406850:	tbnz	w0, #31, 406888 <loopback_detach_all+0xa8>
  406854:	ldr	x0, [sp, #136]
  406858:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  40685c:	add	x1, x1, #0x11a
  406860:	mov	w3, #0x1                   	// #1
  406864:	mov	x2, xzr
  406868:	bl	4039c8 <sd_device_enumerator_add_match_sysattr@plt>
  40686c:	tbnz	w0, #31, 406888 <loopback_detach_all+0xa8>
  406870:	ldr	x0, [sp, #136]
  406874:	bl	4039d8 <sd_device_enumerator_get_device_first@plt>
  406878:	mov	x21, xzr
  40687c:	cbnz	x0, 406aa4 <loopback_detach_all+0x2c4>
  406880:	mov	w22, wzr
  406884:	b	406890 <loopback_detach_all+0xb0>
  406888:	mov	w22, w0
  40688c:	mov	x21, xzr
  406890:	ldr	x0, [sp, #136]
  406894:	cbz	x0, 40689c <loopback_detach_all+0xbc>
  406898:	bl	4039e8 <sd_device_enumerator_unref@plt>
  40689c:	tbnz	w22, #31, 406af4 <loopback_detach_all+0x314>
  4068a0:	adrp	x1, 409000 <parse_argv.options+0x160>
  4068a4:	add	x1, x1, #0xf79
  4068a8:	add	x2, sp, #0x88
  4068ac:	mov	w0, wzr
  4068b0:	bl	4039f8 <__lxstat64@plt>
  4068b4:	cbz	x21, 406af0 <loopback_detach_all+0x310>
  4068b8:	ldr	w8, [sp]
  4068bc:	adrp	x25, 40a000 <parse_argv.options+0x1160>
  4068c0:	mov	w23, w0
  4068c4:	mov	w22, wzr
  4068c8:	and	w8, w8, #0x7
  4068cc:	add	x25, x25, #0x12c
  4068d0:	mov	x26, x21
  4068d4:	str	w8, [sp, #4]
  4068d8:	b	4068e4 <loopback_detach_all+0x104>
  4068dc:	add	w22, w22, #0x1
  4068e0:	cbz	x26, 406af4 <loopback_detach_all+0x314>
  4068e4:	mov	x19, x26
  4068e8:	mov	x28, x26
  4068ec:	ldr	x26, [x19, #40]!
  4068f0:	tbnz	w23, #31, 40692c <loopback_detach_all+0x14c>
  4068f4:	ldr	x8, [sp, #136]
  4068f8:	lsr	x9, x8, #32
  4068fc:	and	x9, x9, #0xfffff000
  406900:	bfxil	x9, x8, #8, #12
  406904:	cbz	x9, 40692c <loopback_detach_all+0x14c>
  406908:	ldr	x1, [x28]
  40690c:	add	x2, sp, #0x8
  406910:	mov	w0, wzr
  406914:	bl	4039f8 <__lxstat64@plt>
  406918:	tbnz	w0, #31, 40692c <loopback_detach_all+0x14c>
  40691c:	ldr	x8, [sp, #136]
  406920:	ldr	x9, [sp, #40]
  406924:	cmp	x8, x9
  406928:	b.eq	4068dc <loopback_detach_all+0xfc>  // b.none
  40692c:	mov	w0, wzr
  406930:	bl	403468 <log_get_max_level_realm@plt>
  406934:	cmp	w0, #0x6
  406938:	b.lt	406964 <loopback_detach_all+0x184>  // b.tstop
  40693c:	ldr	x6, [x28]
  406940:	adrp	x2, 409000 <parse_argv.options+0x160>
  406944:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  406948:	mov	w0, #0x6                   	// #6
  40694c:	mov	w3, #0x233                 	// #563
  406950:	mov	w1, wzr
  406954:	add	x2, x2, #0xb0e
  406958:	mov	x4, x25
  40695c:	add	x5, x5, #0x148
  406960:	bl	403478 <log_internal_realm@plt>
  406964:	ldr	x0, [x28]
  406968:	cbz	x0, 406b78 <loopback_detach_all+0x398>
  40696c:	mov	w1, #0x80000               	// #524288
  406970:	bl	403a08 <open64@plt>
  406974:	mov	w27, w0
  406978:	tbnz	w0, #31, 4069a4 <loopback_detach_all+0x1c4>
  40697c:	mov	w1, #0x4c01                	// #19457
  406980:	mov	w0, w27
  406984:	mov	w2, wzr
  406988:	bl	403a18 <ioctl@plt>
  40698c:	tbnz	w0, #31, 406a1c <loopback_detach_all+0x23c>
  406990:	mov	w24, #0x1                   	// #1
  406994:	mov	w0, w27
  406998:	bl	403a28 <safe_close@plt>
  40699c:	cbnz	w24, 4069c4 <loopback_detach_all+0x1e4>
  4069a0:	b	4069cc <loopback_detach_all+0x1ec>
  4069a4:	bl	403678 <__errno_location@plt>
  4069a8:	ldr	w24, [x0]
  4069ac:	cmp	w24, #0x2
  4069b0:	b.ne	406a2c <loopback_detach_all+0x24c>  // b.any
  4069b4:	mov	w24, wzr
  4069b8:	mov	w0, w27
  4069bc:	bl	403a28 <safe_close@plt>
  4069c0:	cbz	w24, 4069cc <loopback_detach_all+0x1ec>
  4069c4:	mov	w8, #0x1                   	// #1
  4069c8:	strb	w8, [x20]
  4069cc:	ldr	x8, [x19]
  4069d0:	cbz	x8, 4069dc <loopback_detach_all+0x1fc>
  4069d4:	ldr	x9, [x28, #48]
  4069d8:	str	x9, [x8, #48]
  4069dc:	ldr	x9, [x28, #48]
  4069e0:	cbz	x9, 4069ec <loopback_detach_all+0x20c>
  4069e4:	str	x8, [x9, #40]
  4069e8:	b	4069f8 <loopback_detach_all+0x218>
  4069ec:	cmp	x28, x21
  4069f0:	mov	x21, x8
  4069f4:	b.ne	406b98 <loopback_detach_all+0x3b8>  // b.any
  4069f8:	stp	xzr, xzr, [x19]
  4069fc:	ldr	x0, [x28]
  406a00:	bl	4036b8 <free@plt>
  406a04:	ldr	x0, [x28, #8]
  406a08:	bl	4036b8 <free@plt>
  406a0c:	mov	x0, x28
  406a10:	bl	4036b8 <free@plt>
  406a14:	cbnz	x26, 4068e4 <loopback_detach_all+0x104>
  406a18:	b	406af4 <loopback_detach_all+0x314>
  406a1c:	bl	403678 <__errno_location@plt>
  406a20:	ldr	w24, [x0]
  406a24:	cmp	w24, #0x6
  406a28:	b.eq	4069b4 <loopback_detach_all+0x1d4>  // b.none
  406a2c:	mov	w0, w27
  406a30:	bl	403a28 <safe_close@plt>
  406a34:	cmp	w24, #0x0
  406a38:	b.le	406a80 <loopback_detach_all+0x2a0>
  406a3c:	mov	w0, wzr
  406a40:	bl	403468 <log_get_max_level_realm@plt>
  406a44:	ldr	w8, [sp, #4]
  406a48:	cmp	w0, w8
  406a4c:	b.lt	4068dc <loopback_detach_all+0xfc>  // b.tstop
  406a50:	bl	403678 <__errno_location@plt>
  406a54:	ldr	w1, [x0]
  406a58:	ldr	x6, [x28]
  406a5c:	ldr	w0, [sp]
  406a60:	adrp	x2, 409000 <parse_argv.options+0x160>
  406a64:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  406a68:	mov	w3, #0x23b                 	// #571
  406a6c:	add	x2, x2, #0xb0e
  406a70:	mov	x4, x25
  406a74:	add	x5, x5, #0x15f
  406a78:	bl	403478 <log_internal_realm@plt>
  406a7c:	b	4068dc <loopback_detach_all+0xfc>
  406a80:	neg	w24, w24
  406a84:	cbnz	w24, 4069c4 <loopback_detach_all+0x1e4>
  406a88:	b	4069cc <loopback_detach_all+0x1ec>
  406a8c:	mov	x21, x0
  406a90:	str	xzr, [x0, #48]
  406a94:	ldr	x0, [sp, #136]
  406a98:	bl	403a38 <sd_device_enumerator_get_device_next@plt>
  406a9c:	mov	w22, wzr
  406aa0:	cbz	x0, 406890 <loopback_detach_all+0xb0>
  406aa4:	add	x1, sp, #0x8
  406aa8:	bl	403a48 <sd_device_get_devname@plt>
  406aac:	tbnz	w0, #31, 406a94 <loopback_detach_all+0x2b4>
  406ab0:	ldr	x0, [sp, #8]
  406ab4:	bl	403918 <strdup@plt>
  406ab8:	mov	x22, x0
  406abc:	cbz	x0, 406b68 <loopback_detach_all+0x388>
  406ac0:	mov	w0, #0x38                  	// #56
  406ac4:	bl	403a58 <malloc@plt>
  406ac8:	cbz	x0, 406b68 <loopback_detach_all+0x388>
  406acc:	movi	v0.2d, #0x0
  406ad0:	str	x22, [x0]
  406ad4:	stur	q0, [x0, #40]
  406ad8:	stur	q0, [x0, #8]
  406adc:	stur	q0, [x0, #24]
  406ae0:	str	x21, [x0, #40]
  406ae4:	cbz	x21, 406a8c <loopback_detach_all+0x2ac>
  406ae8:	str	x0, [x21, #48]
  406aec:	b	406a8c <loopback_detach_all+0x2ac>
  406af0:	mov	w22, wzr
  406af4:	cbnz	x21, 406b40 <loopback_detach_all+0x360>
  406af8:	mov	w0, w22
  406afc:	ldp	x20, x19, [sp, #352]
  406b00:	ldp	x22, x21, [sp, #336]
  406b04:	ldp	x24, x23, [sp, #320]
  406b08:	ldp	x26, x25, [sp, #304]
  406b0c:	ldp	x28, x27, [sp, #288]
  406b10:	ldp	x29, x30, [sp, #272]
  406b14:	add	sp, sp, #0x170
  406b18:	ret
  406b1c:	stp	xzr, xzr, [x8]
  406b20:	ldr	x0, [x21]
  406b24:	bl	4036b8 <free@plt>
  406b28:	ldr	x0, [x21, #8]
  406b2c:	bl	4036b8 <free@plt>
  406b30:	mov	x0, x21
  406b34:	bl	4036b8 <free@plt>
  406b38:	mov	x21, x19
  406b3c:	cbz	x19, 406af8 <loopback_detach_all+0x318>
  406b40:	mov	x8, x21
  406b44:	ldr	x19, [x8, #40]!
  406b48:	cbz	x19, 406b54 <loopback_detach_all+0x374>
  406b4c:	ldr	x9, [x21, #48]
  406b50:	str	x9, [x19, #48]
  406b54:	ldr	x9, [x21, #48]
  406b58:	cbz	x9, 406b1c <loopback_detach_all+0x33c>
  406b5c:	str	x19, [x9, #40]
  406b60:	mov	x19, x21
  406b64:	b	406b1c <loopback_detach_all+0x33c>
  406b68:	mov	x0, x22
  406b6c:	bl	4036b8 <free@plt>
  406b70:	mov	w22, #0xfffffff4            	// #-12
  406b74:	b	406890 <loopback_detach_all+0xb0>
  406b78:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  406b7c:	adrp	x2, 409000 <parse_argv.options+0x160>
  406b80:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  406b84:	add	x1, x1, #0x180
  406b88:	add	x2, x2, #0xb0e
  406b8c:	add	x4, x4, #0x187
  406b90:	mov	w3, #0x14a                 	// #330
  406b94:	bl	403708 <log_assert_failed_realm@plt>
  406b98:	adrp	x1, 409000 <parse_argv.options+0x160>
  406b9c:	adrp	x2, 409000 <parse_argv.options+0x160>
  406ba0:	adrp	x4, 409000 <parse_argv.options+0x160>
  406ba4:	add	x1, x1, #0xd64
  406ba8:	add	x2, x2, #0xb0e
  406bac:	add	x4, x4, #0xd31
  406bb0:	mov	w3, #0x2a                  	// #42
  406bb4:	mov	w0, wzr
  406bb8:	bl	403708 <log_assert_failed_realm@plt>
  406bbc:	adrp	x1, 409000 <parse_argv.options+0x160>
  406bc0:	adrp	x2, 409000 <parse_argv.options+0x160>
  406bc4:	adrp	x4, 409000 <parse_argv.options+0x160>
  406bc8:	add	x1, x1, #0xcad
  406bcc:	add	x2, x2, #0xb0e
  406bd0:	add	x4, x4, #0xceb
  406bd4:	mov	w3, #0x299                 	// #665
  406bd8:	bl	403708 <log_assert_failed_realm@plt>

0000000000406bdc <dm_detach_all>:
  406bdc:	sub	sp, sp, #0x1e0
  406be0:	stp	x29, x30, [sp, #384]
  406be4:	stp	x28, x27, [sp, #400]
  406be8:	stp	x26, x25, [sp, #416]
  406bec:	stp	x24, x23, [sp, #432]
  406bf0:	stp	x22, x21, [sp, #448]
  406bf4:	stp	x20, x19, [sp, #464]
  406bf8:	add	x29, sp, #0x180
  406bfc:	str	w1, [sp, #8]
  406c00:	cbz	x0, 406ff4 <dm_detach_all+0x418>
  406c04:	mov	x20, x0
  406c08:	add	x0, sp, #0x40
  406c0c:	str	xzr, [sp, #64]
  406c10:	bl	403988 <sd_device_enumerator_new@plt>
  406c14:	tbnz	w0, #31, 406c68 <dm_detach_all+0x8c>
  406c18:	ldr	x0, [sp, #64]
  406c1c:	bl	403998 <sd_device_enumerator_allow_uninitialized@plt>
  406c20:	tbnz	w0, #31, 406c68 <dm_detach_all+0x8c>
  406c24:	ldr	x0, [sp, #64]
  406c28:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  406c2c:	add	x1, x1, #0x10e
  406c30:	mov	w2, #0x1                   	// #1
  406c34:	bl	4039a8 <sd_device_enumerator_add_match_subsystem@plt>
  406c38:	tbnz	w0, #31, 406c68 <dm_detach_all+0x8c>
  406c3c:	ldr	x0, [sp, #64]
  406c40:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  406c44:	add	x1, x1, #0x1a9
  406c48:	bl	4039b8 <sd_device_enumerator_add_match_sysname@plt>
  406c4c:	tbnz	w0, #31, 406c68 <dm_detach_all+0x8c>
  406c50:	ldr	x0, [sp, #64]
  406c54:	bl	4039d8 <sd_device_enumerator_get_device_first@plt>
  406c58:	mov	x22, x0
  406c5c:	mov	x21, xzr
  406c60:	cbnz	x0, 406cbc <dm_detach_all+0xe0>
  406c64:	b	406c70 <dm_detach_all+0x94>
  406c68:	mov	w22, w0
  406c6c:	mov	x21, xzr
  406c70:	ldr	x0, [sp, #64]
  406c74:	cbz	x0, 406c7c <dm_detach_all+0xa0>
  406c78:	bl	4039e8 <sd_device_enumerator_unref@plt>
  406c7c:	tbnz	w22, #31, 406f28 <dm_detach_all+0x34c>
  406c80:	adrp	x0, 409000 <parse_argv.options+0x160>
  406c84:	add	x0, x0, #0xf79
  406c88:	add	x1, sp, #0x38
  406c8c:	bl	403a68 <get_block_device@plt>
  406c90:	cmp	w0, #0x0
  406c94:	b.le	406d2c <dm_detach_all+0x150>
  406c98:	mov	w22, wzr
  406c9c:	cbnz	x21, 406d38 <dm_detach_all+0x15c>
  406ca0:	b	406f28 <dm_detach_all+0x34c>
  406ca4:	mov	x21, x0
  406ca8:	str	xzr, [x0, #48]
  406cac:	ldr	x0, [sp, #64]
  406cb0:	bl	403a38 <sd_device_enumerator_get_device_next@plt>
  406cb4:	mov	x22, x0
  406cb8:	cbz	x0, 406c70 <dm_detach_all+0x94>
  406cbc:	add	x1, sp, #0x30
  406cc0:	mov	x0, x22
  406cc4:	bl	403a78 <sd_device_get_devnum@plt>
  406cc8:	tbnz	w0, #31, 406cac <dm_detach_all+0xd0>
  406ccc:	add	x1, sp, #0x38
  406cd0:	mov	x0, x22
  406cd4:	bl	403a48 <sd_device_get_devname@plt>
  406cd8:	tbnz	w0, #31, 406cac <dm_detach_all+0xd0>
  406cdc:	ldr	x0, [sp, #56]
  406ce0:	bl	403918 <strdup@plt>
  406ce4:	mov	x22, x0
  406ce8:	cbz	x0, 406f9c <dm_detach_all+0x3c0>
  406cec:	mov	w0, #0x38                  	// #56
  406cf0:	bl	403a58 <malloc@plt>
  406cf4:	cbz	x0, 406f9c <dm_detach_all+0x3c0>
  406cf8:	ldr	x8, [sp, #48]
  406cfc:	ldur	w9, [sp, #43]
  406d00:	ldr	w10, [sp, #40]
  406d04:	stp	xzr, xzr, [x0, #8]
  406d08:	str	x22, [x0]
  406d0c:	strb	wzr, [x0, #24]
  406d10:	stp	x21, xzr, [x0, #40]
  406d14:	str	w9, [x0, #28]
  406d18:	stur	w10, [x0, #25]
  406d1c:	str	x8, [x0, #32]
  406d20:	cbz	x21, 406ca4 <dm_detach_all+0xc8>
  406d24:	str	x0, [x21, #48]
  406d28:	b	406ca4 <dm_detach_all+0xc8>
  406d2c:	str	xzr, [sp, #56]
  406d30:	mov	w22, wzr
  406d34:	cbz	x21, 406f28 <dm_detach_all+0x34c>
  406d38:	ldr	w9, [sp, #8]
  406d3c:	add	x8, sp, #0x40
  406d40:	adrp	x26, 40a000 <parse_argv.options+0x1160>
  406d44:	add	x25, x8, #0x10
  406d48:	and	w9, w9, #0x7
  406d4c:	str	w9, [sp, #12]
  406d50:	adrp	x9, 40a000 <parse_argv.options+0x1160>
  406d54:	ldr	q0, [x9, #3088]
  406d58:	add	x26, x26, #0x21b
  406d5c:	mov	x23, x21
  406d60:	str	q0, [sp, #16]
  406d64:	b	406d70 <dm_detach_all+0x194>
  406d68:	add	w22, w22, #0x1
  406d6c:	cbz	x23, 406f28 <dm_detach_all+0x34c>
  406d70:	mov	x24, x23
  406d74:	mov	x28, x23
  406d78:	ldr	x23, [x24, #40]!
  406d7c:	ldr	x8, [sp, #56]
  406d80:	lsr	x9, x8, #32
  406d84:	and	x9, x9, #0xfffff000
  406d88:	bfxil	x9, x8, #8, #12
  406d8c:	cbz	x9, 406d9c <dm_detach_all+0x1c0>
  406d90:	ldr	x9, [x28, #32]
  406d94:	cmp	x8, x9
  406d98:	b.eq	406d68 <dm_detach_all+0x18c>  // b.none
  406d9c:	mov	w0, wzr
  406da0:	bl	403468 <log_get_max_level_realm@plt>
  406da4:	cmp	w0, #0x6
  406da8:	b.lt	406de8 <dm_detach_all+0x20c>  // b.tstop
  406dac:	ldr	x8, [x28, #32]
  406db0:	adrp	x2, 409000 <parse_argv.options+0x160>
  406db4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  406db8:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  406dbc:	lsr	x6, x8, #32
  406dc0:	lsr	x7, x8, #12
  406dc4:	bfxil	w6, w8, #8, #12
  406dc8:	bfxil	w7, w8, #0, #8
  406dcc:	mov	w0, #0x6                   	// #6
  406dd0:	mov	w3, #0x256                 	// #598
  406dd4:	mov	w1, wzr
  406dd8:	add	x2, x2, #0xb0e
  406ddc:	add	x4, x4, #0x1ae
  406de0:	add	x5, x5, #0x1c4
  406de4:	bl	403478 <log_internal_realm@plt>
  406de8:	ldr	x8, [x28, #32]
  406dec:	movi	v0.2d, #0x0
  406df0:	stp	q0, q0, [x25, #256]
  406df4:	stp	q0, q0, [x25, #224]
  406df8:	stp	q0, q0, [x25, #192]
  406dfc:	stp	q0, q0, [x25, #160]
  406e00:	stp	q0, q0, [x25, #128]
  406e04:	stp	q0, q0, [x25, #96]
  406e08:	stp	q0, q0, [x25, #64]
  406e0c:	stp	q0, q0, [x25, #32]
  406e10:	stp	q0, q0, [x25]
  406e14:	ldr	q0, [sp, #16]
  406e18:	lsr	x9, x8, #32
  406e1c:	and	x9, x9, #0xfffff000
  406e20:	bfxil	x9, x8, #8, #12
  406e24:	str	xzr, [x25, #288]
  406e28:	str	q0, [sp, #64]
  406e2c:	str	x8, [sp, #104]
  406e30:	cbz	x9, 406fac <dm_detach_all+0x3d0>
  406e34:	mov	w1, #0x2                   	// #2
  406e38:	movk	w1, #0x8, lsl #16
  406e3c:	mov	x0, x26
  406e40:	bl	403a08 <open64@plt>
  406e44:	mov	w27, w0
  406e48:	tbnz	w0, #31, 406ebc <dm_detach_all+0x2e0>
  406e4c:	mov	w1, #0xfd04                	// #64772
  406e50:	add	x2, sp, #0x40
  406e54:	movk	w1, #0xc138, lsl #16
  406e58:	mov	w0, w27
  406e5c:	bl	403a18 <ioctl@plt>
  406e60:	tbnz	w0, #31, 406ebc <dm_detach_all+0x2e0>
  406e64:	mov	w19, wzr
  406e68:	mov	w0, w27
  406e6c:	bl	403a28 <safe_close@plt>
  406e70:	tbz	w19, #31, 406ed4 <dm_detach_all+0x2f8>
  406e74:	mov	w0, wzr
  406e78:	bl	403468 <log_get_max_level_realm@plt>
  406e7c:	ldr	w8, [sp, #12]
  406e80:	cmp	w0, w8
  406e84:	b.lt	406d68 <dm_detach_all+0x18c>  // b.tstop
  406e88:	bl	403678 <__errno_location@plt>
  406e8c:	ldr	w1, [x0]
  406e90:	ldr	x6, [x28]
  406e94:	ldr	w0, [sp, #8]
  406e98:	adrp	x2, 409000 <parse_argv.options+0x160>
  406e9c:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  406ea0:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  406ea4:	mov	w3, #0x25c                 	// #604
  406ea8:	add	x2, x2, #0xb0e
  406eac:	add	x4, x4, #0x1ae
  406eb0:	add	x5, x5, #0x1d8
  406eb4:	bl	403478 <log_internal_realm@plt>
  406eb8:	b	406d68 <dm_detach_all+0x18c>
  406ebc:	bl	403678 <__errno_location@plt>
  406ec0:	ldr	w8, [x0]
  406ec4:	neg	w19, w8
  406ec8:	mov	w0, w27
  406ecc:	bl	403a28 <safe_close@plt>
  406ed0:	tbnz	w19, #31, 406e74 <dm_detach_all+0x298>
  406ed4:	mov	w8, #0x1                   	// #1
  406ed8:	strb	w8, [x20]
  406edc:	ldr	x8, [x24]
  406ee0:	cbz	x8, 406eec <dm_detach_all+0x310>
  406ee4:	ldr	x9, [x28, #48]
  406ee8:	str	x9, [x8, #48]
  406eec:	ldr	x9, [x28, #48]
  406ef0:	cbz	x9, 406efc <dm_detach_all+0x320>
  406ef4:	str	x8, [x9, #40]
  406ef8:	b	406f08 <dm_detach_all+0x32c>
  406efc:	cmp	x28, x21
  406f00:	mov	x21, x8
  406f04:	b.ne	406fd0 <dm_detach_all+0x3f4>  // b.any
  406f08:	stp	xzr, xzr, [x24]
  406f0c:	ldr	x0, [x28]
  406f10:	bl	4036b8 <free@plt>
  406f14:	ldr	x0, [x28, #8]
  406f18:	bl	4036b8 <free@plt>
  406f1c:	mov	x0, x28
  406f20:	bl	4036b8 <free@plt>
  406f24:	cbnz	x23, 406d70 <dm_detach_all+0x194>
  406f28:	cbnz	x21, 406f74 <dm_detach_all+0x398>
  406f2c:	mov	w0, w22
  406f30:	ldp	x20, x19, [sp, #464]
  406f34:	ldp	x22, x21, [sp, #448]
  406f38:	ldp	x24, x23, [sp, #432]
  406f3c:	ldp	x26, x25, [sp, #416]
  406f40:	ldp	x28, x27, [sp, #400]
  406f44:	ldp	x29, x30, [sp, #384]
  406f48:	add	sp, sp, #0x1e0
  406f4c:	ret
  406f50:	stp	xzr, xzr, [x8]
  406f54:	ldr	x0, [x21]
  406f58:	bl	4036b8 <free@plt>
  406f5c:	ldr	x0, [x21, #8]
  406f60:	bl	4036b8 <free@plt>
  406f64:	mov	x0, x21
  406f68:	bl	4036b8 <free@plt>
  406f6c:	mov	x21, x19
  406f70:	cbz	x19, 406f2c <dm_detach_all+0x350>
  406f74:	mov	x8, x21
  406f78:	ldr	x19, [x8, #40]!
  406f7c:	cbz	x19, 406f88 <dm_detach_all+0x3ac>
  406f80:	ldr	x9, [x21, #48]
  406f84:	str	x9, [x19, #48]
  406f88:	ldr	x9, [x21, #48]
  406f8c:	cbz	x9, 406f50 <dm_detach_all+0x374>
  406f90:	str	x19, [x9, #40]
  406f94:	mov	x19, x21
  406f98:	b	406f50 <dm_detach_all+0x374>
  406f9c:	mov	x0, x22
  406fa0:	bl	4036b8 <free@plt>
  406fa4:	mov	w22, #0xfffffff4            	// #-12
  406fa8:	b	406c70 <dm_detach_all+0x94>
  406fac:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  406fb0:	adrp	x2, 409000 <parse_argv.options+0x160>
  406fb4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  406fb8:	add	x1, x1, #0x1f3
  406fbc:	add	x2, x2, #0xb0e
  406fc0:	add	x4, x4, #0x206
  406fc4:	mov	w3, #0x169                 	// #361
  406fc8:	mov	w0, wzr
  406fcc:	bl	403708 <log_assert_failed_realm@plt>
  406fd0:	adrp	x1, 409000 <parse_argv.options+0x160>
  406fd4:	adrp	x2, 409000 <parse_argv.options+0x160>
  406fd8:	adrp	x4, 409000 <parse_argv.options+0x160>
  406fdc:	add	x1, x1, #0xd64
  406fe0:	add	x2, x2, #0xb0e
  406fe4:	add	x4, x4, #0xd31
  406fe8:	mov	w3, #0x2a                  	// #42
  406fec:	mov	w0, wzr
  406ff0:	bl	403708 <log_assert_failed_realm@plt>
  406ff4:	adrp	x1, 409000 <parse_argv.options+0x160>
  406ff8:	adrp	x2, 409000 <parse_argv.options+0x160>
  406ffc:	adrp	x4, 409000 <parse_argv.options+0x160>
  407000:	add	x1, x1, #0xcad
  407004:	add	x2, x2, #0xb0e
  407008:	add	x4, x4, #0xd11
  40700c:	mov	w3, #0x2a8                 	// #680
  407010:	bl	403708 <log_assert_failed_realm@plt>

0000000000407014 <broadcast_signal>:
  407014:	sub	sp, sp, #0x1c0
  407018:	stp	x26, x25, [sp, #384]
  40701c:	stp	x24, x23, [sp, #400]
  407020:	stp	x22, x21, [sp, #416]
  407024:	mov	x21, x3
  407028:	mov	w23, w2
  40702c:	mov	w22, w1
  407030:	mov	w26, w0
  407034:	stp	x29, x30, [sp, #352]
  407038:	stp	x28, x27, [sp, #368]
  40703c:	stp	x20, x19, [sp, #432]
  407040:	add	x29, sp, #0x160
  407044:	tbz	w1, #0, 407058 <broadcast_signal+0x44>
  407048:	mov	x0, xzr
  40704c:	bl	403a88 <internal_set_new@plt>
  407050:	mov	x19, x0
  407054:	b	40705c <broadcast_signal+0x48>
  407058:	mov	x19, xzr
  40705c:	add	x0, sp, #0x88
  407060:	bl	403a98 <sigemptyset@plt>
  407064:	cbnz	w0, 4079d0 <broadcast_signal+0x9bc>
  407068:	add	x0, sp, #0x88
  40706c:	mov	w1, #0x11                  	// #17
  407070:	bl	403aa8 <sigaddset@plt>
  407074:	cbnz	w0, 4079f4 <broadcast_signal+0x9e0>
  407078:	add	x1, sp, #0x88
  40707c:	add	x2, sp, #0x8
  407080:	bl	4037b8 <sigprocmask@plt>
  407084:	cbnz	w0, 407a18 <broadcast_signal+0xa04>
  407088:	mov	w0, #0xffffffff            	// #-1
  40708c:	mov	w1, #0x13                  	// #19
  407090:	bl	4037a8 <kill@plt>
  407094:	tbz	w0, #31, 4070e0 <broadcast_signal+0xcc>
  407098:	bl	403678 <__errno_location@plt>
  40709c:	ldr	w20, [x0]
  4070a0:	cmp	w20, #0x3
  4070a4:	b.eq	4070e0 <broadcast_signal+0xcc>  // b.none
  4070a8:	mov	w0, wzr
  4070ac:	bl	403468 <log_get_max_level_realm@plt>
  4070b0:	cmp	w0, #0x4
  4070b4:	b.lt	4070e0 <broadcast_signal+0xcc>  // b.tstop
  4070b8:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4070bc:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4070c0:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4070c4:	add	x2, x2, #0x24a
  4070c8:	add	x4, x4, #0x2d9
  4070cc:	add	x5, x5, #0x2ea
  4070d0:	mov	w0, #0x4                   	// #4
  4070d4:	mov	w3, #0x110                 	// #272
  4070d8:	mov	w1, w20
  4070dc:	bl	403478 <log_internal_realm@plt>
  4070e0:	adrp	x0, 409000 <parse_argv.options+0x160>
  4070e4:	add	x0, x0, #0xbf9
  4070e8:	bl	403ab8 <opendir@plt>
  4070ec:	mov	x25, x0
  4070f0:	bl	403678 <__errno_location@plt>
  4070f4:	mov	x20, x0
  4070f8:	cbz	x25, 4073a4 <broadcast_signal+0x390>
  4070fc:	mov	x0, x25
  407100:	str	wzr, [x20]
  407104:	bl	403ac8 <readdir64@plt>
  407108:	cbz	x0, 4073f8 <broadcast_signal+0x3e4>
  40710c:	cmp	w26, #0x9
  407110:	b.ne	407418 <broadcast_signal+0x404>  // b.any
  407114:	adrp	x26, 40a000 <parse_argv.options+0x1160>
  407118:	adrp	x27, 40a000 <parse_argv.options+0x1160>
  40711c:	mov	w24, wzr
  407120:	add	x26, x26, #0x24a
  407124:	add	x27, x27, #0x352
  407128:	cbnz	x19, 407140 <broadcast_signal+0x12c>
  40712c:	b	40728c <broadcast_signal+0x278>
  407130:	mov	x0, x25
  407134:	str	wzr, [x20]
  407138:	bl	403ac8 <readdir64@plt>
  40713c:	cbz	x0, 4073fc <broadcast_signal+0x3e8>
  407140:	ldrb	w8, [x0, #18]
  407144:	orr	w8, w8, #0x4
  407148:	cmp	w8, #0x4
  40714c:	b.ne	407130 <broadcast_signal+0x11c>  // b.any
  407150:	add	x0, x0, #0x13
  407154:	sub	x1, x29, #0x40
  407158:	bl	403ad8 <parse_pid@plt>
  40715c:	tbnz	w0, #31, 407130 <broadcast_signal+0x11c>
  407160:	ldur	w28, [x29, #-64]
  407164:	bl	403588 <in_initrd@plt>
  407168:	mvn	w8, w0
  40716c:	and	w1, w8, #0x1
  407170:	mov	w0, w28
  407174:	bl	407a60 <ignore_proc>
  407178:	tbnz	w0, #0, 407130 <broadcast_signal+0x11c>
  40717c:	ldur	w0, [x29, #-64]
  407180:	sub	x1, x29, #0x20
  407184:	stur	xzr, [x29, #-32]
  407188:	bl	403ae8 <get_process_comm@plt>
  40718c:	mov	w0, wzr
  407190:	bl	403468 <log_get_max_level_realm@plt>
  407194:	cmp	w0, #0x5
  407198:	b.lt	4071d4 <broadcast_signal+0x1c0>  // b.tstop
  40719c:	ldur	x8, [x29, #-32]
  4071a0:	ldur	w6, [x29, #-64]
  4071a4:	adrp	x9, 40a000 <parse_argv.options+0x1160>
  4071a8:	add	x9, x9, #0x4b6
  4071ac:	cmp	x8, #0x0
  4071b0:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4071b4:	csel	x7, x9, x8, eq  // eq = none
  4071b8:	mov	w0, #0x5                   	// #5
  4071bc:	mov	w3, #0xdc                  	// #220
  4071c0:	mov	w1, wzr
  4071c4:	mov	x2, x26
  4071c8:	mov	x4, x27
  4071cc:	add	x5, x5, #0x374
  4071d0:	bl	403478 <log_internal_realm@plt>
  4071d4:	ldur	x0, [x29, #-32]
  4071d8:	bl	4036b8 <free@plt>
  4071dc:	ldur	w0, [x29, #-64]
  4071e0:	mov	w1, #0x9                   	// #9
  4071e4:	bl	4037a8 <kill@plt>
  4071e8:	tbnz	w0, #31, 407218 <broadcast_signal+0x204>
  4071ec:	ldursw	x1, [x29, #-64]
  4071f0:	mov	x0, x19
  4071f4:	add	w24, w24, #0x1
  4071f8:	bl	403af8 <set_put@plt>
  4071fc:	tbz	w0, #31, 407258 <broadcast_signal+0x244>
  407200:	mov	w2, #0xe4                  	// #228
  407204:	mov	w0, wzr
  407208:	mov	x1, x26
  40720c:	mov	x3, x27
  407210:	bl	403898 <log_oom_internal@plt>
  407214:	b	407258 <broadcast_signal+0x244>
  407218:	ldr	w28, [x20]
  40721c:	cmp	w28, #0x2
  407220:	b.eq	407258 <broadcast_signal+0x244>  // b.none
  407224:	mov	w0, wzr
  407228:	bl	403468 <log_get_max_level_realm@plt>
  40722c:	cmp	w0, #0x4
  407230:	b.lt	407258 <broadcast_signal+0x244>  // b.tstop
  407234:	ldur	w6, [x29, #-64]
  407238:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  40723c:	mov	w0, #0x4                   	// #4
  407240:	mov	w3, #0xe7                  	// #231
  407244:	mov	w1, w28
  407248:	mov	x2, x26
  40724c:	mov	x4, x27
  407250:	add	x5, x5, #0x394
  407254:	bl	403478 <log_internal_realm@plt>
  407258:	tbz	w23, #0, 407130 <broadcast_signal+0x11c>
  40725c:	ldur	w0, [x29, #-64]
  407260:	mov	x1, xzr
  407264:	bl	403b08 <get_ctty_devnr@plt>
  407268:	tbnz	w0, #31, 407130 <broadcast_signal+0x11c>
  40726c:	ldur	w0, [x29, #-64]
  407270:	mov	w1, #0x1                   	// #1
  407274:	bl	4037a8 <kill@plt>
  407278:	b	407130 <broadcast_signal+0x11c>
  40727c:	mov	x0, x25
  407280:	str	wzr, [x20]
  407284:	bl	403ac8 <readdir64@plt>
  407288:	cbz	x0, 4073fc <broadcast_signal+0x3e8>
  40728c:	ldrb	w8, [x0, #18]
  407290:	orr	w8, w8, #0x4
  407294:	cmp	w8, #0x4
  407298:	b.ne	40727c <broadcast_signal+0x268>  // b.any
  40729c:	add	x0, x0, #0x13
  4072a0:	sub	x1, x29, #0x40
  4072a4:	bl	403ad8 <parse_pid@plt>
  4072a8:	tbnz	w0, #31, 40727c <broadcast_signal+0x268>
  4072ac:	ldur	w28, [x29, #-64]
  4072b0:	bl	403588 <in_initrd@plt>
  4072b4:	mvn	w8, w0
  4072b8:	and	w1, w8, #0x1
  4072bc:	mov	w0, w28
  4072c0:	bl	407a60 <ignore_proc>
  4072c4:	tbnz	w0, #0, 40727c <broadcast_signal+0x268>
  4072c8:	ldur	w0, [x29, #-64]
  4072cc:	sub	x1, x29, #0x20
  4072d0:	stur	xzr, [x29, #-32]
  4072d4:	bl	403ae8 <get_process_comm@plt>
  4072d8:	mov	w0, wzr
  4072dc:	bl	403468 <log_get_max_level_realm@plt>
  4072e0:	cmp	w0, #0x5
  4072e4:	b.lt	407320 <broadcast_signal+0x30c>  // b.tstop
  4072e8:	ldur	x8, [x29, #-32]
  4072ec:	ldur	w6, [x29, #-64]
  4072f0:	adrp	x9, 40a000 <parse_argv.options+0x1160>
  4072f4:	add	x9, x9, #0x4b6
  4072f8:	cmp	x8, #0x0
  4072fc:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  407300:	csel	x7, x9, x8, eq  // eq = none
  407304:	mov	w0, #0x5                   	// #5
  407308:	mov	w3, #0xdc                  	// #220
  40730c:	mov	w1, wzr
  407310:	mov	x2, x26
  407314:	mov	x4, x27
  407318:	add	x5, x5, #0x374
  40731c:	bl	403478 <log_internal_realm@plt>
  407320:	ldur	x0, [x29, #-32]
  407324:	bl	4036b8 <free@plt>
  407328:	ldur	w0, [x29, #-64]
  40732c:	mov	w1, #0x9                   	// #9
  407330:	bl	4037a8 <kill@plt>
  407334:	tbnz	w0, #31, 407340 <broadcast_signal+0x32c>
  407338:	add	w24, w24, #0x1
  40733c:	b	407380 <broadcast_signal+0x36c>
  407340:	ldr	w28, [x20]
  407344:	cmp	w28, #0x2
  407348:	b.eq	407380 <broadcast_signal+0x36c>  // b.none
  40734c:	mov	w0, wzr
  407350:	bl	403468 <log_get_max_level_realm@plt>
  407354:	cmp	w0, #0x4
  407358:	b.lt	407380 <broadcast_signal+0x36c>  // b.tstop
  40735c:	ldur	w6, [x29, #-64]
  407360:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  407364:	mov	w0, #0x4                   	// #4
  407368:	mov	w3, #0xe7                  	// #231
  40736c:	mov	w1, w28
  407370:	mov	x2, x26
  407374:	mov	x4, x27
  407378:	add	x5, x5, #0x394
  40737c:	bl	403478 <log_internal_realm@plt>
  407380:	tbz	w23, #0, 40727c <broadcast_signal+0x268>
  407384:	ldur	w0, [x29, #-64]
  407388:	mov	x1, xzr
  40738c:	bl	403b08 <get_ctty_devnr@plt>
  407390:	tbnz	w0, #31, 40727c <broadcast_signal+0x268>
  407394:	ldur	w0, [x29, #-64]
  407398:	mov	w1, #0x1                   	// #1
  40739c:	bl	4037a8 <kill@plt>
  4073a0:	b	40727c <broadcast_signal+0x268>
  4073a4:	ldr	w23, [x20]
  4073a8:	mov	w0, wzr
  4073ac:	bl	403468 <log_get_max_level_realm@plt>
  4073b0:	cmp	w0, #0x4
  4073b4:	b.lt	407514 <broadcast_signal+0x500>  // b.tstop
  4073b8:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4073bc:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4073c0:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4073c4:	add	x2, x2, #0x24a
  4073c8:	add	x4, x4, #0x352
  4073cc:	add	x5, x5, #0x35a
  4073d0:	mov	w0, #0x4                   	// #4
  4073d4:	mov	w3, #0xc9                  	// #201
  4073d8:	mov	w1, w23
  4073dc:	bl	403478 <log_internal_realm@plt>
  4073e0:	mov	w24, w0
  4073e4:	mov	w0, #0xffffffff            	// #-1
  4073e8:	mov	w1, #0x12                  	// #18
  4073ec:	bl	4037a8 <kill@plt>
  4073f0:	tbz	w0, #31, 407578 <broadcast_signal+0x564>
  4073f4:	b	407534 <broadcast_signal+0x520>
  4073f8:	mov	w24, wzr
  4073fc:	mov	x0, x25
  407400:	bl	403b18 <closedir@plt>
  407404:	mov	w0, #0xffffffff            	// #-1
  407408:	mov	w1, #0x12                  	// #18
  40740c:	bl	4037a8 <kill@plt>
  407410:	tbz	w0, #31, 407578 <broadcast_signal+0x564>
  407414:	b	407534 <broadcast_signal+0x520>
  407418:	mov	w24, wzr
  40741c:	cbz	x19, 407868 <broadcast_signal+0x854>
  407420:	adrp	x28, 40a000 <parse_argv.options+0x1160>
  407424:	add	x28, x28, #0x352
  407428:	b	40743c <broadcast_signal+0x428>
  40742c:	mov	x0, x25
  407430:	str	wzr, [x20]
  407434:	bl	403ac8 <readdir64@plt>
  407438:	cbz	x0, 4073fc <broadcast_signal+0x3e8>
  40743c:	ldrb	w8, [x0, #18]
  407440:	orr	w8, w8, #0x4
  407444:	cmp	w8, #0x4
  407448:	b.ne	40742c <broadcast_signal+0x418>  // b.any
  40744c:	add	x0, x0, #0x13
  407450:	sub	x1, x29, #0x40
  407454:	bl	403ad8 <parse_pid@plt>
  407458:	tbnz	w0, #31, 40742c <broadcast_signal+0x418>
  40745c:	ldur	w0, [x29, #-64]
  407460:	mov	w1, wzr
  407464:	bl	407a60 <ignore_proc>
  407468:	tbnz	w0, #0, 40742c <broadcast_signal+0x418>
  40746c:	ldur	w0, [x29, #-64]
  407470:	mov	w1, w26
  407474:	bl	4037a8 <kill@plt>
  407478:	tbnz	w0, #31, 4074ac <broadcast_signal+0x498>
  40747c:	ldursw	x1, [x29, #-64]
  407480:	mov	x0, x19
  407484:	add	w24, w24, #0x1
  407488:	bl	403af8 <set_put@plt>
  40748c:	tbz	w0, #31, 4074f0 <broadcast_signal+0x4dc>
  407490:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407494:	mov	w2, #0xe4                  	// #228
  407498:	mov	w0, wzr
  40749c:	add	x1, x1, #0x24a
  4074a0:	mov	x3, x28
  4074a4:	bl	403898 <log_oom_internal@plt>
  4074a8:	b	4074f0 <broadcast_signal+0x4dc>
  4074ac:	ldr	w27, [x20]
  4074b0:	cmp	w27, #0x2
  4074b4:	b.eq	4074f0 <broadcast_signal+0x4dc>  // b.none
  4074b8:	mov	w0, wzr
  4074bc:	bl	403468 <log_get_max_level_realm@plt>
  4074c0:	cmp	w0, #0x4
  4074c4:	b.lt	4074f0 <broadcast_signal+0x4dc>  // b.tstop
  4074c8:	ldur	w6, [x29, #-64]
  4074cc:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4074d0:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4074d4:	mov	w0, #0x4                   	// #4
  4074d8:	mov	w3, #0xe7                  	// #231
  4074dc:	mov	w1, w27
  4074e0:	add	x2, x2, #0x24a
  4074e4:	mov	x4, x28
  4074e8:	add	x5, x5, #0x394
  4074ec:	bl	403478 <log_internal_realm@plt>
  4074f0:	tbz	w23, #0, 40742c <broadcast_signal+0x418>
  4074f4:	ldur	w0, [x29, #-64]
  4074f8:	mov	x1, xzr
  4074fc:	bl	403b08 <get_ctty_devnr@plt>
  407500:	tbnz	w0, #31, 40742c <broadcast_signal+0x418>
  407504:	ldur	w0, [x29, #-64]
  407508:	mov	w1, #0x1                   	// #1
  40750c:	bl	4037a8 <kill@plt>
  407510:	b	40742c <broadcast_signal+0x418>
  407514:	cmp	w23, #0x0
  407518:	mov	w8, wzr
  40751c:	cneg	w9, w23, mi  // mi = first
  407520:	sub	w24, w8, w9, uxtb
  407524:	mov	w0, #0xffffffff            	// #-1
  407528:	mov	w1, #0x12                  	// #18
  40752c:	bl	4037a8 <kill@plt>
  407530:	tbz	w0, #31, 407578 <broadcast_signal+0x564>
  407534:	ldr	w23, [x20]
  407538:	cmp	w23, #0x3
  40753c:	b.eq	407578 <broadcast_signal+0x564>  // b.none
  407540:	mov	w0, wzr
  407544:	bl	403468 <log_get_max_level_realm@plt>
  407548:	cmp	w0, #0x4
  40754c:	b.lt	407578 <broadcast_signal+0x564>  // b.tstop
  407550:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  407554:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407558:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  40755c:	add	x2, x2, #0x24a
  407560:	add	x4, x4, #0x2d9
  407564:	add	x5, x5, #0x307
  407568:	mov	w0, #0x4                   	// #4
  40756c:	mov	w3, #0x115                 	// #277
  407570:	mov	w1, w23
  407574:	bl	403478 <log_internal_realm@plt>
  407578:	cmp	w24, #0x1
  40757c:	b.lt	407984 <broadcast_signal+0x970>  // b.tstop
  407580:	tbz	w22, #0, 407984 <broadcast_signal+0x970>
  407584:	mov	x0, x19
  407588:	bl	403b28 <internal_hashmap_size@plt>
  40758c:	cbz	w0, 407850 <broadcast_signal+0x83c>
  407590:	mov	w0, #0x1                   	// #1
  407594:	bl	403b38 <now@plt>
  407598:	adds	x8, x0, x21
  40759c:	cset	w10, cs  // cs = hs, nlast
  4075a0:	cmp	x8, x21
  4075a4:	cset	w11, cc  // cc = lo, ul, last
  4075a8:	mov	w9, #0x9680                	// #38528
  4075ac:	orr	w10, w10, w11
  4075b0:	movk	w9, #0x98, lsl #16
  4075b4:	cmp	w10, #0x0
  4075b8:	csinv	x25, x8, xzr, eq  // eq = none
  4075bc:	adds	x8, x0, x9
  4075c0:	csinv	x26, x8, xzr, cc  // cc = lo, ul, last
  4075c4:	cmp	x26, x25
  4075c8:	b.ls	4075ec <broadcast_signal+0x5d8>  // b.plast
  4075cc:	lsr	x8, x21, #1
  4075d0:	adds	x9, x0, x8
  4075d4:	cset	w10, cs  // cs = hs, nlast
  4075d8:	cmp	x9, x8
  4075dc:	cset	w8, cc  // cc = lo, ul, last
  4075e0:	orr	w8, w10, w8
  4075e4:	cmp	w8, #0x0
  4075e8:	csinv	x26, x9, xzr, eq  // eq = none
  4075ec:	adrp	x21, 409000 <parse_argv.options+0x160>
  4075f0:	adrp	x22, 40a000 <parse_argv.options+0x1160>
  4075f4:	adrp	x23, 40a000 <parse_argv.options+0x1160>
  4075f8:	adrp	x27, 40a000 <parse_argv.options+0x1160>
  4075fc:	mov	w24, #0xfffffffe            	// #-2
  407600:	add	x21, x21, #0x71c
  407604:	add	x22, x22, #0x526
  407608:	add	x23, x23, #0x24a
  40760c:	add	x27, x27, #0x4fb
  407610:	b	407624 <broadcast_signal+0x610>
  407614:	tbnz	w0, #31, 40763c <broadcast_signal+0x628>
  407618:	mov	w1, w0
  40761c:	mov	x0, x19
  407620:	bl	403b48 <internal_hashmap_remove@plt>
  407624:	mov	w0, #0xffffffff            	// #-1
  407628:	mov	w2, #0x1                   	// #1
  40762c:	mov	x1, xzr
  407630:	bl	403b58 <waitpid@plt>
  407634:	cbnz	w0, 407614 <broadcast_signal+0x600>
  407638:	b	407648 <broadcast_signal+0x634>
  40763c:	ldr	w28, [x20]
  407640:	cmp	w28, #0xa
  407644:	b.ne	407934 <broadcast_signal+0x920>  // b.any
  407648:	stur	w24, [x29, #-88]
  40764c:	stur	xzr, [x29, #-80]
  407650:	sub	x1, x29, #0x58
  407654:	sub	x2, x29, #0x48
  407658:	mov	x0, x19
  40765c:	bl	403b68 <set_iterate@plt>
  407660:	tbz	w0, #0, 407690 <broadcast_signal+0x67c>
  407664:	ldur	w0, [x29, #-72]
  407668:	mov	w1, wzr
  40766c:	bl	4037a8 <kill@plt>
  407670:	cbz	w0, 407650 <broadcast_signal+0x63c>
  407674:	ldr	w8, [x20]
  407678:	cmp	w8, #0x3
  40767c:	b.ne	407650 <broadcast_signal+0x63c>  // b.any
  407680:	ldur	x1, [x29, #-72]
  407684:	mov	x0, x19
  407688:	bl	403b48 <internal_hashmap_remove@plt>
  40768c:	b	407650 <broadcast_signal+0x63c>
  407690:	mov	x0, x19
  407694:	bl	403b28 <internal_hashmap_size@plt>
  407698:	cbz	w0, 407850 <broadcast_signal+0x83c>
  40769c:	mov	w0, #0x1                   	// #1
  4076a0:	bl	403b38 <now@plt>
  4076a4:	sub	x8, x26, #0x1
  4076a8:	mov	x28, x0
  4076ac:	cmp	x8, x0
  4076b0:	b.cs	4077a0 <broadcast_signal+0x78c>  // b.hs, b.nlast
  4076b4:	sub	x1, x29, #0x20
  4076b8:	sub	x2, x29, #0x28
  4076bc:	mov	x0, x19
  4076c0:	stp	xzr, xzr, [x29, #-24]
  4076c4:	stur	w24, [x29, #-32]
  4076c8:	bl	403b68 <set_iterate@plt>
  4076cc:	tbz	w0, #0, 407794 <broadcast_signal+0x780>
  4076d0:	ldur	w0, [x29, #-40]
  4076d4:	sub	x1, x29, #0x30
  4076d8:	stur	xzr, [x29, #-48]
  4076dc:	bl	403ae8 <get_process_comm@plt>
  4076e0:	tbz	w0, #31, 4076f4 <broadcast_signal+0x6e0>
  4076e4:	ldur	w2, [x29, #-40]
  4076e8:	sub	x0, x29, #0x30
  4076ec:	mov	x1, x21
  4076f0:	bl	403b78 <asprintf@plt>
  4076f4:	ldur	x3, [x29, #-48]
  4076f8:	sub	x0, x29, #0x10
  4076fc:	mov	x1, xzr
  407700:	mov	x2, x22
  407704:	mov	x4, xzr
  407708:	bl	403868 <strextend_with_separator@plt>
  40770c:	cbz	x0, 407778 <broadcast_signal+0x764>
  407710:	ldur	x0, [x29, #-48]
  407714:	bl	4036b8 <free@plt>
  407718:	sub	x1, x29, #0x20
  40771c:	sub	x2, x29, #0x28
  407720:	mov	x0, x19
  407724:	bl	403b68 <set_iterate@plt>
  407728:	tbnz	w0, #0, 4076d0 <broadcast_signal+0x6bc>
  40772c:	ldur	x26, [x29, #-16]
  407730:	cbz	x26, 407794 <broadcast_signal+0x780>
  407734:	ldrb	w8, [x26]
  407738:	cbz	w8, 407794 <broadcast_signal+0x780>
  40773c:	mov	w0, wzr
  407740:	bl	403468 <log_get_max_level_realm@plt>
  407744:	cmp	w0, #0x4
  407748:	b.lt	407794 <broadcast_signal+0x780>  // b.tstop
  40774c:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407750:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  407754:	add	x6, x26, #0x2
  407758:	mov	w0, #0x4                   	// #4
  40775c:	mov	w3, #0x64                  	// #100
  407760:	mov	w1, wzr
  407764:	mov	x2, x23
  407768:	add	x4, x4, #0x529
  40776c:	add	x5, x5, #0x544
  407770:	bl	403478 <log_internal_realm@plt>
  407774:	b	407794 <broadcast_signal+0x780>
  407778:	adrp	x3, 40a000 <parse_argv.options+0x1160>
  40777c:	mov	w2, #0x5c                  	// #92
  407780:	mov	x1, x23
  407784:	add	x3, x3, #0x529
  407788:	bl	403898 <log_oom_internal@plt>
  40778c:	ldur	x0, [x29, #-48]
  407790:	bl	4036b8 <free@plt>
  407794:	ldur	x0, [x29, #-16]
  407798:	bl	4036b8 <free@plt>
  40779c:	mov	x26, xzr
  4077a0:	subs	x8, x25, x28
  4077a4:	b.ls	407858 <broadcast_signal+0x844>  // b.plast
  4077a8:	sub	x9, x26, x28
  4077ac:	cmp	x8, x9
  4077b0:	ccmp	x26, #0x0, #0x4, cs  // cs = hs, nlast
  4077b4:	csel	x1, x8, x9, eq  // eq = none
  4077b8:	sub	x0, x29, #0x40
  4077bc:	bl	403b88 <timespec_store@plt>
  4077c0:	add	x0, sp, #0x88
  4077c4:	sub	x2, x29, #0x40
  4077c8:	mov	x1, xzr
  4077cc:	bl	403b98 <sigtimedwait@plt>
  4077d0:	cmp	w0, #0x11
  4077d4:	b.eq	407624 <broadcast_signal+0x610>  // b.none
  4077d8:	tbnz	w0, #31, 407810 <broadcast_signal+0x7fc>
  4077dc:	mov	w0, wzr
  4077e0:	bl	403468 <log_get_max_level_realm@plt>
  4077e4:	cmp	w0, #0x4
  4077e8:	b.lt	407624 <broadcast_signal+0x610>  // b.tstop
  4077ec:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4077f0:	mov	w0, #0x4                   	// #4
  4077f4:	mov	w3, #0xba                  	// #186
  4077f8:	mov	w1, wzr
  4077fc:	mov	x2, x23
  407800:	add	x4, x4, #0x4ba
  407804:	mov	x5, x27
  407808:	bl	403478 <log_internal_realm@plt>
  40780c:	b	407624 <broadcast_signal+0x610>
  407810:	ldr	w28, [x20]
  407814:	cmp	w28, #0xb
  407818:	b.eq	407624 <broadcast_signal+0x610>  // b.none
  40781c:	mov	w0, wzr
  407820:	bl	403468 <log_get_max_level_realm@plt>
  407824:	cmp	w0, #0x3
  407828:	b.lt	407974 <broadcast_signal+0x960>  // b.tstop
  40782c:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  407830:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407834:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  407838:	add	x2, x2, #0x24a
  40783c:	add	x4, x4, #0x4ba
  407840:	add	x5, x5, #0x4e1
  407844:	mov	w0, #0x3                   	// #3
  407848:	mov	w3, #0xb7                  	// #183
  40784c:	b	407964 <broadcast_signal+0x950>
  407850:	mov	w24, wzr
  407854:	b	407984 <broadcast_signal+0x970>
  407858:	mov	x0, x19
  40785c:	bl	403b28 <internal_hashmap_size@plt>
  407860:	mov	w24, w0
  407864:	b	407984 <broadcast_signal+0x970>
  407868:	adrp	x27, 40a000 <parse_argv.options+0x1160>
  40786c:	add	x27, x27, #0x394
  407870:	b	407884 <broadcast_signal+0x870>
  407874:	mov	x0, x25
  407878:	str	wzr, [x20]
  40787c:	bl	403ac8 <readdir64@plt>
  407880:	cbz	x0, 4073fc <broadcast_signal+0x3e8>
  407884:	ldrb	w8, [x0, #18]
  407888:	orr	w8, w8, #0x4
  40788c:	cmp	w8, #0x4
  407890:	b.ne	407874 <broadcast_signal+0x860>  // b.any
  407894:	add	x0, x0, #0x13
  407898:	sub	x1, x29, #0x40
  40789c:	bl	403ad8 <parse_pid@plt>
  4078a0:	tbnz	w0, #31, 407874 <broadcast_signal+0x860>
  4078a4:	ldur	w0, [x29, #-64]
  4078a8:	mov	w1, wzr
  4078ac:	bl	407a60 <ignore_proc>
  4078b0:	tbnz	w0, #0, 407874 <broadcast_signal+0x860>
  4078b4:	ldur	w0, [x29, #-64]
  4078b8:	mov	w1, w26
  4078bc:	bl	4037a8 <kill@plt>
  4078c0:	tbnz	w0, #31, 4078cc <broadcast_signal+0x8b8>
  4078c4:	add	w24, w24, #0x1
  4078c8:	b	407910 <broadcast_signal+0x8fc>
  4078cc:	ldr	w28, [x20]
  4078d0:	cmp	w28, #0x2
  4078d4:	b.eq	407910 <broadcast_signal+0x8fc>  // b.none
  4078d8:	mov	w0, wzr
  4078dc:	bl	403468 <log_get_max_level_realm@plt>
  4078e0:	cmp	w0, #0x4
  4078e4:	b.lt	407910 <broadcast_signal+0x8fc>  // b.tstop
  4078e8:	ldur	w6, [x29, #-64]
  4078ec:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4078f0:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4078f4:	mov	w0, #0x4                   	// #4
  4078f8:	mov	w3, #0xe7                  	// #231
  4078fc:	mov	w1, w28
  407900:	add	x2, x2, #0x24a
  407904:	add	x4, x4, #0x352
  407908:	mov	x5, x27
  40790c:	bl	403478 <log_internal_realm@plt>
  407910:	tbz	w23, #0, 407874 <broadcast_signal+0x860>
  407914:	ldur	w0, [x29, #-64]
  407918:	mov	x1, xzr
  40791c:	bl	403b08 <get_ctty_devnr@plt>
  407920:	tbnz	w0, #31, 407874 <broadcast_signal+0x860>
  407924:	ldur	w0, [x29, #-64]
  407928:	mov	w1, #0x1                   	// #1
  40792c:	bl	4037a8 <kill@plt>
  407930:	b	407874 <broadcast_signal+0x860>
  407934:	mov	w0, wzr
  407938:	bl	403468 <log_get_max_level_realm@plt>
  40793c:	cmp	w0, #0x3
  407940:	b.lt	407974 <broadcast_signal+0x960>  // b.tstop
  407944:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  407948:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  40794c:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  407950:	add	x2, x2, #0x24a
  407954:	add	x4, x4, #0x4ba
  407958:	add	x5, x5, #0x4cc
  40795c:	mov	w0, #0x3                   	// #3
  407960:	mov	w3, #0x8c                  	// #140
  407964:	mov	w1, w28
  407968:	bl	403478 <log_internal_realm@plt>
  40796c:	mov	w24, w0
  407970:	b	407984 <broadcast_signal+0x970>
  407974:	cmp	w28, #0x0
  407978:	mov	w8, wzr
  40797c:	cneg	w9, w28, mi  // mi = first
  407980:	sub	w24, w8, w9, uxtb
  407984:	add	x1, sp, #0x8
  407988:	mov	w0, #0x2                   	// #2
  40798c:	mov	x2, xzr
  407990:	bl	4037b8 <sigprocmask@plt>
  407994:	cbnz	w0, 407a3c <broadcast_signal+0xa28>
  407998:	cbz	x19, 4079ac <broadcast_signal+0x998>
  40799c:	mov	x0, x19
  4079a0:	mov	x1, xzr
  4079a4:	mov	x2, xzr
  4079a8:	bl	403ba8 <internal_hashmap_free@plt>
  4079ac:	mov	w0, w24
  4079b0:	ldp	x20, x19, [sp, #432]
  4079b4:	ldp	x22, x21, [sp, #416]
  4079b8:	ldp	x24, x23, [sp, #400]
  4079bc:	ldp	x26, x25, [sp, #384]
  4079c0:	ldp	x28, x27, [sp, #368]
  4079c4:	ldp	x29, x30, [sp, #352]
  4079c8:	add	sp, sp, #0x1c0
  4079cc:	ret
  4079d0:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  4079d4:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4079d8:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4079dc:	add	x1, x1, #0x22f
  4079e0:	add	x2, x2, #0x24a
  4079e4:	add	x4, x4, #0x25d
  4079e8:	mov	w3, #0x10b                 	// #267
  4079ec:	mov	w0, wzr
  4079f0:	bl	403708 <log_assert_failed_realm@plt>
  4079f4:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  4079f8:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4079fc:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407a00:	add	x1, x1, #0x28d
  407a04:	add	x2, x2, #0x24a
  407a08:	add	x4, x4, #0x25d
  407a0c:	mov	w3, #0x10c                 	// #268
  407a10:	mov	w0, wzr
  407a14:	bl	403708 <log_assert_failed_realm@plt>
  407a18:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407a1c:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  407a20:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407a24:	add	x1, x1, #0x2ac
  407a28:	add	x2, x2, #0x24a
  407a2c:	add	x4, x4, #0x25d
  407a30:	mov	w3, #0x10d                 	// #269
  407a34:	mov	w0, wzr
  407a38:	bl	403708 <log_assert_failed_realm@plt>
  407a3c:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407a40:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  407a44:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407a48:	add	x1, x1, #0x324
  407a4c:	add	x2, x2, #0x24a
  407a50:	add	x4, x4, #0x25d
  407a54:	mov	w3, #0x11a                 	// #282
  407a58:	mov	w0, wzr
  407a5c:	bl	403708 <log_assert_failed_realm@plt>

0000000000407a60 <ignore_proc>:
  407a60:	stp	x29, x30, [sp, #-48]!
  407a64:	stp	x22, x21, [sp, #16]
  407a68:	stp	x20, x19, [sp, #32]
  407a6c:	mov	x29, sp
  407a70:	sub	sp, sp, #0x10
  407a74:	cmp	w0, #0x2
  407a78:	sturb	wzr, [x29, #-4]
  407a7c:	b.lt	407a90 <ignore_proc+0x30>  // b.tstop
  407a80:	mov	w21, w1
  407a84:	mov	w20, w0
  407a88:	bl	403bb8 <is_kernel_thread@plt>
  407a8c:	cbz	w0, 407ab8 <ignore_proc+0x58>
  407a90:	mov	x19, xzr
  407a94:	mov	w22, #0x1                   	// #1
  407a98:	mov	x0, x19
  407a9c:	bl	403748 <safe_fclose@plt>
  407aa0:	mov	w0, w22
  407aa4:	mov	sp, x29
  407aa8:	ldp	x20, x19, [sp, #32]
  407aac:	ldp	x22, x21, [sp, #16]
  407ab0:	ldp	x29, x30, [sp], #48
  407ab4:	ret
  407ab8:	sub	x1, x29, #0x8
  407abc:	mov	w0, w20
  407ac0:	bl	403bc8 <get_process_uid@plt>
  407ac4:	tbnz	w0, #31, 407a90 <ignore_proc+0x30>
  407ac8:	ldur	w8, [x29, #-8]
  407acc:	cbz	w8, 407adc <ignore_proc+0x7c>
  407ad0:	mov	x19, xzr
  407ad4:	mov	w22, wzr
  407ad8:	b	407a98 <ignore_proc+0x38>
  407adc:	sub	x19, sp, #0x20
  407ae0:	mov	sp, x19
  407ae4:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407ae8:	add	x1, x1, #0x3aa
  407aec:	mov	x0, x19
  407af0:	mov	w2, w20
  407af4:	bl	403bd8 <sprintf@plt>
  407af8:	adrp	x1, 409000 <parse_argv.options+0x160>
  407afc:	add	x1, x1, #0x9c8
  407b00:	mov	x0, x19
  407b04:	bl	403768 <fopen64@plt>
  407b08:	mov	x19, x0
  407b0c:	cbz	x0, 407a94 <ignore_proc+0x34>
  407b10:	sub	x0, x29, #0x4
  407b14:	mov	w1, #0x1                   	// #1
  407b18:	mov	w2, #0x1                   	// #1
  407b1c:	mov	x3, x19
  407b20:	bl	403be8 <fread@plt>
  407b24:	ldurb	w8, [x29, #-4]
  407b28:	cmp	w8, #0x40
  407b2c:	cset	w22, eq  // eq = none
  407b30:	b.ne	407a98 <ignore_proc+0x38>  // b.any
  407b34:	tbz	w21, #0, 407a98 <ignore_proc+0x38>
  407b38:	mov	w0, w20
  407b3c:	bl	403bf8 <pid_from_same_root_fs@plt>
  407b40:	cbnz	w0, 407a94 <ignore_proc+0x34>
  407b44:	sub	x1, x29, #0x10
  407b48:	mov	w0, w20
  407b4c:	stur	xzr, [x29, #-16]
  407b50:	bl	403ae8 <get_process_comm@plt>
  407b54:	mov	w0, wzr
  407b58:	bl	403468 <log_get_max_level_realm@plt>
  407b5c:	cmp	w0, #0x5
  407b60:	b.lt	407ba4 <ignore_proc+0x144>  // b.tstop
  407b64:	ldur	x8, [x29, #-16]
  407b68:	adrp	x9, 40a000 <parse_argv.options+0x1160>
  407b6c:	add	x9, x9, #0x4b6
  407b70:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  407b74:	cmp	x8, #0x0
  407b78:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  407b7c:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  407b80:	csel	x7, x9, x8, eq  // eq = none
  407b84:	add	x2, x2, #0x24a
  407b88:	add	x4, x4, #0x3bb
  407b8c:	add	x5, x5, #0x3c7
  407b90:	mov	w0, #0x5                   	// #5
  407b94:	mov	w3, #0x4a                  	// #74
  407b98:	mov	w1, wzr
  407b9c:	mov	w6, w20
  407ba0:	bl	403478 <log_internal_realm@plt>
  407ba4:	ldur	x0, [x29, #-16]
  407ba8:	bl	4036b8 <free@plt>
  407bac:	b	407a94 <ignore_proc+0x34>

0000000000407bb0 <mount_point_is_api>:
  407bb0:	stp	x29, x30, [sp, #-32]!
  407bb4:	adrp	x1, 409000 <parse_argv.options+0x160>
  407bb8:	add	x1, x1, #0xbf4
  407bbc:	str	x19, [sp, #16]
  407bc0:	mov	x29, sp
  407bc4:	mov	x19, x0
  407bc8:	bl	403948 <path_equal@plt>
  407bcc:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407bd0:	adrp	x1, 409000 <parse_argv.options+0x160>
  407bd4:	add	x1, x1, #0xbf9
  407bd8:	mov	x0, x19
  407bdc:	bl	403948 <path_equal@plt>
  407be0:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407be4:	adrp	x1, 409000 <parse_argv.options+0x160>
  407be8:	add	x1, x1, #0xbef
  407bec:	mov	x0, x19
  407bf0:	bl	403948 <path_equal@plt>
  407bf4:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407bf8:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407bfc:	add	x1, x1, #0x6da
  407c00:	mov	x0, x19
  407c04:	bl	403948 <path_equal@plt>
  407c08:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c0c:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c10:	add	x1, x1, #0x6f7
  407c14:	mov	x0, x19
  407c18:	bl	403948 <path_equal@plt>
  407c1c:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c20:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c24:	add	x1, x1, #0x5ef
  407c28:	mov	x0, x19
  407c2c:	bl	403948 <path_equal@plt>
  407c30:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c34:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c38:	add	x1, x1, #0x73d
  407c3c:	mov	x0, x19
  407c40:	bl	403948 <path_equal@plt>
  407c44:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c48:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c4c:	add	x1, x1, #0x5f8
  407c50:	mov	x0, x19
  407c54:	bl	403948 <path_equal@plt>
  407c58:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c5c:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c60:	add	x1, x1, #0x5d1
  407c64:	mov	x0, x19
  407c68:	bl	403948 <path_equal@plt>
  407c6c:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c70:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c74:	add	x1, x1, #0x77f
  407c78:	mov	x0, x19
  407c7c:	bl	403948 <path_equal@plt>
  407c80:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c84:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c88:	add	x1, x1, #0x796
  407c8c:	mov	x0, x19
  407c90:	bl	403948 <path_equal@plt>
  407c94:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407c98:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407c9c:	add	x1, x1, #0x7de
  407ca0:	mov	x0, x19
  407ca4:	bl	403948 <path_equal@plt>
  407ca8:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407cac:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407cb0:	add	x1, x1, #0x7f6
  407cb4:	mov	x0, x19
  407cb8:	bl	403948 <path_equal@plt>
  407cbc:	tbnz	w0, #0, 407cd4 <mount_point_is_api+0x124>
  407cc0:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407cc4:	add	x1, x1, #0x814
  407cc8:	mov	x0, x19
  407ccc:	bl	403948 <path_equal@plt>
  407cd0:	tbz	w0, #0, 407ce4 <mount_point_is_api+0x134>
  407cd4:	mov	w0, #0x1                   	// #1
  407cd8:	ldr	x19, [sp, #16]
  407cdc:	ldp	x29, x30, [sp], #32
  407ce0:	ret
  407ce4:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407ce8:	add	x1, x1, #0x55c
  407cec:	mov	x0, x19
  407cf0:	bl	403958 <path_startswith@plt>
  407cf4:	cmp	x0, #0x0
  407cf8:	cset	w0, ne  // ne = any
  407cfc:	ldr	x19, [sp, #16]
  407d00:	ldp	x29, x30, [sp], #32
  407d04:	ret

0000000000407d08 <mount_point_ignore>:
  407d08:	stp	x29, x30, [sp, #-32]!
  407d0c:	stp	x20, x19, [sp, #16]
  407d10:	adrp	x20, 40a000 <parse_argv.options+0x1160>
  407d14:	mov	x19, x0
  407d18:	add	x20, x20, #0xc47
  407d1c:	mov	x29, sp
  407d20:	mov	x0, x19
  407d24:	mov	x1, x20
  407d28:	bl	403948 <path_equal@plt>
  407d2c:	tbnz	w0, #0, 407d54 <mount_point_ignore+0x4c>
  407d30:	mov	x0, x20
  407d34:	bl	403c08 <strlen@plt>
  407d38:	add	x20, x20, x0
  407d3c:	ldrb	w8, [x20, #1]!
  407d40:	cbnz	w8, 407d20 <mount_point_ignore+0x18>
  407d44:	mov	w0, wzr
  407d48:	ldp	x20, x19, [sp, #16]
  407d4c:	ldp	x29, x30, [sp], #32
  407d50:	ret
  407d54:	mov	w0, #0x1                   	// #1
  407d58:	ldp	x20, x19, [sp, #16]
  407d5c:	ldp	x29, x30, [sp], #32
  407d60:	ret

0000000000407d64 <mount_setup_early>:
  407d64:	stp	x29, x30, [sp, #-48]!
  407d68:	stp	x20, x19, [sp, #32]
  407d6c:	adrp	x19, 41f000 <__FRAME_END__+0x142a8>
  407d70:	add	x19, x19, #0x430
  407d74:	mov	x0, x19
  407d78:	mov	w1, wzr
  407d7c:	str	x21, [sp, #16]
  407d80:	mov	x29, sp
  407d84:	bl	40817c <mount_one>
  407d88:	mov	w20, w0
  407d8c:	add	x0, x19, #0x38
  407d90:	mov	w1, wzr
  407d94:	bl	40817c <mount_one>
  407d98:	cmp	w0, #0x0
  407d9c:	mov	w21, #0xffffffff            	// #-1
  407da0:	ccmp	w20, w21, #0x4, ne  // ne = any
  407da4:	csel	w20, w0, w20, gt
  407da8:	add	x0, x19, #0x70
  407dac:	mov	w1, wzr
  407db0:	bl	40817c <mount_one>
  407db4:	cmp	w0, #0x0
  407db8:	ccmp	w20, w21, #0x4, ne  // ne = any
  407dbc:	csel	w20, w0, w20, gt
  407dc0:	add	x0, x19, #0xa8
  407dc4:	mov	w1, wzr
  407dc8:	bl	40817c <mount_one>
  407dcc:	cmp	w0, #0x0
  407dd0:	ccmp	w20, w21, #0x4, ne  // ne = any
  407dd4:	csel	w20, w0, w20, gt
  407dd8:	add	x0, x19, #0xe0
  407ddc:	mov	w1, wzr
  407de0:	bl	40817c <mount_one>
  407de4:	cmp	w0, #0x0
  407de8:	ccmp	w20, w21, #0x4, ne  // ne = any
  407dec:	csel	w0, w0, w20, gt
  407df0:	ldp	x20, x19, [sp, #32]
  407df4:	ldr	x21, [sp, #16]
  407df8:	ldp	x29, x30, [sp], #48
  407dfc:	ret

0000000000407e00 <mount_cgroup_controllers>:
  407e00:	sub	sp, sp, #0xa0
  407e04:	stp	x29, x30, [sp, #64]
  407e08:	add	x29, sp, #0x40
  407e0c:	stp	x28, x27, [sp, #80]
  407e10:	stp	x26, x25, [sp, #96]
  407e14:	stp	x24, x23, [sp, #112]
  407e18:	stp	x22, x21, [sp, #128]
  407e1c:	stp	x20, x19, [sp, #144]
  407e20:	stur	xzr, [x29, #-8]
  407e24:	bl	403c18 <cg_is_legacy_wanted@plt>
  407e28:	tbz	w0, #0, 4080a0 <mount_cgroup_controllers+0x2a0>
  407e2c:	sub	x0, x29, #0x8
  407e30:	bl	403c28 <cg_kernel_controllers@plt>
  407e34:	tbnz	w0, #31, 4080e8 <mount_cgroup_controllers+0x2e8>
  407e38:	mov	x8, sp
  407e3c:	adrp	x24, 40a000 <parse_argv.options+0x1160>
  407e40:	add	x24, x24, #0x5ca
  407e44:	mov	w22, #0xe                   	// #14
  407e48:	add	x25, x8, #0x8
  407e4c:	b	407e74 <mount_cgroup_controllers+0x74>
  407e50:	mov	x27, xzr
  407e54:	mov	x23, xzr
  407e58:	mov	x0, x23
  407e5c:	bl	4036b8 <free@plt>
  407e60:	mov	x0, x28
  407e64:	bl	4036b8 <free@plt>
  407e68:	mov	x0, x27
  407e6c:	bl	4036b8 <free@plt>
  407e70:	cbnz	w26, 4080a8 <mount_cgroup_controllers+0x2a8>
  407e74:	ldur	x0, [x29, #-8]
  407e78:	movi	v0.2d, #0x0
  407e7c:	mov	w26, #0x2                   	// #2
  407e80:	mov	w1, #0x1                   	// #1
  407e84:	mov	x2, xzr
  407e88:	stp	q0, q0, [x25, #16]
  407e8c:	str	q0, [x25]
  407e90:	str	x24, [sp]
  407e94:	str	x24, [sp, #16]
  407e98:	str	x22, [sp, #32]
  407e9c:	str	w26, [sp, #48]
  407ea0:	bl	403c38 <internal_hashmap_first_key_and_value@plt>
  407ea4:	mov	x28, x0
  407ea8:	cbz	x0, 407e50 <mount_cgroup_controllers+0x50>
  407eac:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407eb0:	mov	x0, x28
  407eb4:	add	x1, x1, #0x829
  407eb8:	bl	403518 <strcmp@plt>
  407ebc:	cbz	w0, 407f08 <mount_cgroup_controllers+0x108>
  407ec0:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407ec4:	mov	x0, x28
  407ec8:	add	x1, x1, #0x82d
  407ecc:	bl	403518 <strcmp@plt>
  407ed0:	cbz	w0, 407f24 <mount_cgroup_controllers+0x124>
  407ed4:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407ed8:	mov	x0, x28
  407edc:	add	x1, x1, #0x835
  407ee0:	bl	403518 <strcmp@plt>
  407ee4:	cbz	w0, 407f40 <mount_cgroup_controllers+0x140>
  407ee8:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407eec:	mov	x0, x28
  407ef0:	add	x1, x1, #0x83d
  407ef4:	bl	403518 <strcmp@plt>
  407ef8:	cbz	w0, 407ff0 <mount_cgroup_controllers+0x1f0>
  407efc:	mov	x21, xzr
  407f00:	mov	w19, wzr
  407f04:	b	40800c <mount_cgroup_controllers+0x20c>
  407f08:	adrp	x21, 40a000 <parse_argv.options+0x1160>
  407f0c:	add	x21, x21, #0x82d
  407f10:	ldur	x0, [x29, #-8]
  407f14:	mov	x1, x21
  407f18:	bl	403b48 <internal_hashmap_remove@plt>
  407f1c:	cbnz	x0, 407f58 <mount_cgroup_controllers+0x158>
  407f20:	b	408008 <mount_cgroup_controllers+0x208>
  407f24:	adrp	x21, 40a000 <parse_argv.options+0x1160>
  407f28:	add	x21, x21, #0x829
  407f2c:	ldur	x0, [x29, #-8]
  407f30:	mov	x1, x21
  407f34:	bl	403b48 <internal_hashmap_remove@plt>
  407f38:	cbnz	x0, 407f58 <mount_cgroup_controllers+0x158>
  407f3c:	b	408008 <mount_cgroup_controllers+0x208>
  407f40:	adrp	x21, 40a000 <parse_argv.options+0x1160>
  407f44:	add	x21, x21, #0x83d
  407f48:	ldur	x0, [x29, #-8]
  407f4c:	mov	x1, x21
  407f50:	bl	403b48 <internal_hashmap_remove@plt>
  407f54:	cbz	x0, 408008 <mount_cgroup_controllers+0x208>
  407f58:	mov	x23, x0
  407f5c:	mov	x0, x28
  407f60:	mov	x1, x21
  407f64:	bl	403518 <strcmp@plt>
  407f68:	tbz	w0, #31, 407f9c <mount_cgroup_controllers+0x19c>
  407f6c:	adrp	x1, 409000 <parse_argv.options+0x160>
  407f70:	mov	x0, x28
  407f74:	add	x1, x1, #0xbed
  407f78:	mov	x2, x21
  407f7c:	mov	x3, xzr
  407f80:	bl	403c48 <strjoin_real@plt>
  407f84:	mov	x27, x0
  407f88:	cbz	x0, 407fbc <mount_cgroup_controllers+0x1bc>
  407f8c:	mov	x0, x23
  407f90:	bl	4036b8 <free@plt>
  407f94:	mov	w19, #0x1                   	// #1
  407f98:	b	408014 <mount_cgroup_controllers+0x214>
  407f9c:	adrp	x1, 409000 <parse_argv.options+0x160>
  407fa0:	mov	x0, x21
  407fa4:	add	x1, x1, #0xbed
  407fa8:	mov	x2, x28
  407fac:	mov	x3, xzr
  407fb0:	bl	403c48 <strjoin_real@plt>
  407fb4:	mov	x27, x0
  407fb8:	cbnz	x0, 407f8c <mount_cgroup_controllers+0x18c>
  407fbc:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  407fc0:	adrp	x3, 40a000 <parse_argv.options+0x1160>
  407fc4:	mov	w2, #0x148                 	// #328
  407fc8:	mov	w0, wzr
  407fcc:	add	x1, x1, #0x56f
  407fd0:	add	x3, x3, #0x586
  407fd4:	bl	403898 <log_oom_internal@plt>
  407fd8:	mov	w20, w0
  407fdc:	mov	x0, x23
  407fe0:	bl	4036b8 <free@plt>
  407fe4:	mov	x23, xzr
  407fe8:	mov	w26, #0x1                   	// #1
  407fec:	b	407e58 <mount_cgroup_controllers+0x58>
  407ff0:	adrp	x21, 40a000 <parse_argv.options+0x1160>
  407ff4:	add	x21, x21, #0x835
  407ff8:	ldur	x0, [x29, #-8]
  407ffc:	mov	x1, x21
  408000:	bl	403b48 <internal_hashmap_remove@plt>
  408004:	cbnz	x0, 407f58 <mount_cgroup_controllers+0x158>
  408008:	mov	w19, #0x1                   	// #1
  40800c:	mov	x27, x28
  408010:	mov	x28, xzr
  408014:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  408018:	mov	x2, #0xffffffffffffffff    	// #-1
  40801c:	add	x0, x0, #0x5d1
  408020:	mov	x1, x27
  408024:	bl	403c58 <path_join_internal@plt>
  408028:	mov	x23, x0
  40802c:	cbz	x0, 408074 <mount_cgroup_controllers+0x274>
  408030:	mov	x0, sp
  408034:	mov	w1, #0x1                   	// #1
  408038:	str	x23, [sp, #8]
  40803c:	str	x27, [sp, #24]
  408040:	mov	w26, #0x1                   	// #1
  408044:	bl	40817c <mount_one>
  408048:	tbnz	w0, #31, 408098 <mount_cgroup_controllers+0x298>
  40804c:	cbz	x28, 40805c <mount_cgroup_controllers+0x25c>
  408050:	mov	x0, x27
  408054:	mov	x1, x28
  408058:	bl	408410 <symlink_controller>
  40805c:	cbz	w19, 40806c <mount_cgroup_controllers+0x26c>
  408060:	mov	x0, x27
  408064:	mov	x1, x21
  408068:	bl	408410 <symlink_controller>
  40806c:	mov	w26, wzr
  408070:	b	407e58 <mount_cgroup_controllers+0x58>
  408074:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  408078:	adrp	x3, 40a000 <parse_argv.options+0x1160>
  40807c:	mov	w2, #0x152                 	// #338
  408080:	add	x1, x1, #0x56f
  408084:	add	x3, x3, #0x586
  408088:	bl	403898 <log_oom_internal@plt>
  40808c:	mov	w20, w0
  408090:	mov	w26, #0x1                   	// #1
  408094:	b	407e58 <mount_cgroup_controllers+0x58>
  408098:	mov	w20, w0
  40809c:	b	407e58 <mount_cgroup_controllers+0x58>
  4080a0:	mov	w20, wzr
  4080a4:	b	408140 <mount_cgroup_controllers+0x340>
  4080a8:	cmp	w26, #0x2
  4080ac:	b.ne	408128 <mount_cgroup_controllers+0x328>  // b.any
  4080b0:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  4080b4:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  4080b8:	add	x0, x0, #0x5e0
  4080bc:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4080c0:	mov	w3, #0x2f                  	// #47
  4080c4:	add	x1, x1, #0x5d1
  4080c8:	add	x4, x4, #0x5e6
  4080cc:	movk	w3, #0x100, lsl #16
  4080d0:	mov	x2, x0
  4080d4:	bl	403628 <mount@plt>
  4080d8:	mov	w20, wzr
  4080dc:	ldur	x0, [x29, #-8]
  4080e0:	cbnz	x0, 408130 <mount_cgroup_controllers+0x330>
  4080e4:	b	408140 <mount_cgroup_controllers+0x340>
  4080e8:	mov	w19, w0
  4080ec:	mov	w0, wzr
  4080f0:	bl	403468 <log_get_max_level_realm@plt>
  4080f4:	cmp	w0, #0x3
  4080f8:	b.lt	408164 <mount_cgroup_controllers+0x364>  // b.tstop
  4080fc:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408100:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408104:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408108:	add	x2, x2, #0x56f
  40810c:	add	x4, x4, #0x586
  408110:	add	x5, x5, #0x59f
  408114:	mov	w0, #0x3                   	// #3
  408118:	mov	w3, #0x129                 	// #297
  40811c:	mov	w1, w19
  408120:	bl	403478 <log_internal_realm@plt>
  408124:	mov	w20, w0
  408128:	ldur	x0, [x29, #-8]
  40812c:	cbz	x0, 408140 <mount_cgroup_controllers+0x340>
  408130:	adrp	x1, 41f000 <__FRAME_END__+0x142a8>
  408134:	ldr	x1, [x1, #2768]
  408138:	mov	x2, xzr
  40813c:	bl	403ba8 <internal_hashmap_free@plt>
  408140:	mov	w0, w20
  408144:	ldp	x20, x19, [sp, #144]
  408148:	ldp	x22, x21, [sp, #128]
  40814c:	ldp	x24, x23, [sp, #112]
  408150:	ldp	x26, x25, [sp, #96]
  408154:	ldp	x28, x27, [sp, #80]
  408158:	ldp	x29, x30, [sp, #64]
  40815c:	add	sp, sp, #0xa0
  408160:	ret
  408164:	mov	w8, wzr
  408168:	neg	w9, w19
  40816c:	sub	w20, w8, w9, uxtb
  408170:	ldur	x0, [x29, #-8]
  408174:	cbnz	x0, 408130 <mount_cgroup_controllers+0x330>
  408178:	b	408140 <mount_cgroup_controllers+0x340>

000000000040817c <mount_one>:
  40817c:	sub	sp, sp, #0x40
  408180:	stp	x29, x30, [sp, #16]
  408184:	stp	x22, x21, [sp, #32]
  408188:	stp	x20, x19, [sp, #48]
  40818c:	add	x29, sp, #0x10
  408190:	cbz	x0, 4083f0 <mount_one+0x274>
  408194:	ldrb	w9, [x0, #48]
  408198:	ldr	x8, [x0, #40]
  40819c:	mov	w10, #0x3                   	// #3
  4081a0:	mov	w21, w1
  4081a4:	tst	w9, #0x1
  4081a8:	mov	w9, #0x7                   	// #7
  4081ac:	mov	x19, x0
  4081b0:	csel	w20, w9, w10, eq  // eq = none
  4081b4:	cbz	x8, 4081c0 <mount_one+0x44>
  4081b8:	blr	x8
  4081bc:	tbz	w0, #0, 408244 <mount_one+0xc8>
  4081c0:	tbz	w21, #0, 4081d0 <mount_one+0x54>
  4081c4:	ldr	x0, [x19, #8]
  4081c8:	mov	w1, #0x3                   	// #3
  4081cc:	bl	403c68 <label_fix@plt>
  4081d0:	ldr	x0, [x19, #8]
  4081d4:	mov	w2, #0x400                 	// #1024
  4081d8:	mov	x1, xzr
  4081dc:	bl	403c78 <path_is_mount_point@plt>
  4081e0:	mov	w22, w0
  4081e4:	tbz	w0, #31, 40823c <mount_one+0xc0>
  4081e8:	cmn	w22, #0x2
  4081ec:	b.eq	40823c <mount_one+0xc0>  // b.none
  4081f0:	mov	w0, wzr
  4081f4:	bl	403468 <log_get_max_level_realm@plt>
  4081f8:	cmp	w0, w20
  4081fc:	b.lt	40822c <mount_one+0xb0>  // b.tstop
  408200:	ldr	x6, [x19, #8]
  408204:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408208:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  40820c:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408210:	add	x2, x2, #0x56f
  408214:	add	x4, x4, #0x871
  408218:	add	x5, x5, #0x87b
  40821c:	mov	w3, #0xa1                  	// #161
  408220:	mov	w0, w20
  408224:	mov	w1, w22
  408228:	bl	403478 <log_internal_realm@plt>
  40822c:	ldrb	w8, [x19, #48]
  408230:	sbfx	w8, w8, #0, #1
  408234:	and	w0, w8, w22
  408238:	b	408248 <mount_one+0xcc>
  40823c:	cmp	w22, #0x0
  408240:	b.le	40825c <mount_one+0xe0>
  408244:	mov	w0, wzr
  408248:	ldp	x20, x19, [sp, #48]
  40824c:	ldp	x22, x21, [sp, #32]
  408250:	ldp	x29, x30, [sp, #16]
  408254:	add	sp, sp, #0x40
  408258:	ret
  40825c:	ldrb	w8, [x19, #48]
  408260:	tbnz	w8, #1, 408270 <mount_one+0xf4>
  408264:	bl	403538 <detect_container@plt>
  408268:	cmp	w0, #0x0
  40826c:	b.gt	408244 <mount_one+0xc8>
  408270:	ldr	x0, [x19, #8]
  408274:	mov	w1, #0x1ed                 	// #493
  408278:	tbz	w21, #0, 408294 <mount_one+0x118>
  40827c:	bl	403c88 <mkdir_p_label@plt>
  408280:	mov	w0, wzr
  408284:	bl	403468 <log_get_max_level_realm@plt>
  408288:	cmp	w0, #0x7
  40828c:	b.ge	4082a8 <mount_one+0x12c>  // b.tcont
  408290:	b	4082ec <mount_one+0x170>
  408294:	bl	403c98 <mkdir_p@plt>
  408298:	mov	w0, wzr
  40829c:	bl	403468 <log_get_max_level_realm@plt>
  4082a0:	cmp	w0, #0x7
  4082a4:	b.lt	4082ec <mount_one+0x170>  // b.tstop
  4082a8:	ldp	x8, x9, [x19, #16]
  4082ac:	ldp	x6, x7, [x19]
  4082b0:	adrp	x10, 40a000 <parse_argv.options+0x1160>
  4082b4:	add	x10, x10, #0x4b6
  4082b8:	cmp	x9, #0x0
  4082bc:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4082c0:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4082c4:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4082c8:	csel	x9, x10, x9, eq  // eq = none
  4082cc:	add	x2, x2, #0x56f
  4082d0:	add	x4, x4, #0x871
  4082d4:	add	x5, x5, #0x8af
  4082d8:	mov	w0, #0x7                   	// #7
  4082dc:	mov	w3, #0xb6                  	// #182
  4082e0:	mov	w1, wzr
  4082e4:	stp	x8, x9, [sp]
  4082e8:	bl	403478 <log_internal_realm@plt>
  4082ec:	ldp	x0, x1, [x19]
  4082f0:	ldp	x4, x3, [x19, #24]
  4082f4:	ldr	x2, [x19, #16]
  4082f8:	bl	403628 <mount@plt>
  4082fc:	tbnz	w0, #31, 408330 <mount_one+0x1b4>
  408300:	tbz	w21, #0, 408310 <mount_one+0x194>
  408304:	ldr	x0, [x19, #8]
  408308:	mov	w1, wzr
  40830c:	bl	403c68 <label_fix@plt>
  408310:	ldrb	w8, [x19, #48]
  408314:	tbz	w8, #2, 408328 <mount_one+0x1ac>
  408318:	ldr	x0, [x19, #8]
  40831c:	mov	w1, #0x2                   	// #2
  408320:	bl	4035d8 <access@plt>
  408324:	tbnz	w0, #31, 408388 <mount_one+0x20c>
  408328:	mov	w0, #0x1                   	// #1
  40832c:	b	408248 <mount_one+0xcc>
  408330:	bl	403678 <__errno_location@plt>
  408334:	mov	x21, x0
  408338:	mov	w0, wzr
  40833c:	bl	403468 <log_get_max_level_realm@plt>
  408340:	cmp	w0, w20
  408344:	b.lt	408374 <mount_one+0x1f8>  // b.tstop
  408348:	ldr	w1, [x21]
  40834c:	ldp	x7, x6, [x19, #8]
  408350:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408354:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408358:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  40835c:	add	x2, x2, #0x56f
  408360:	add	x4, x4, #0x871
  408364:	add	x5, x5, #0x8dd
  408368:	mov	w3, #0xbd                  	// #189
  40836c:	mov	w0, w20
  408370:	bl	403478 <log_internal_realm@plt>
  408374:	ldrb	w8, [x19, #48]
  408378:	tbz	w8, #0, 408244 <mount_one+0xc8>
  40837c:	ldr	w8, [x21]
  408380:	neg	w0, w8
  408384:	b	408248 <mount_one+0xcc>
  408388:	bl	403678 <__errno_location@plt>
  40838c:	ldr	w8, [x0]
  408390:	ldr	x0, [x19, #8]
  408394:	neg	w21, w8
  408398:	bl	403ca8 <umount@plt>
  40839c:	ldr	x0, [x19, #8]
  4083a0:	bl	403cb8 <rmdir@plt>
  4083a4:	mov	w0, wzr
  4083a8:	bl	403468 <log_get_max_level_realm@plt>
  4083ac:	cmp	w0, w20
  4083b0:	b.lt	4083e0 <mount_one+0x264>  // b.tstop
  4083b4:	ldr	x6, [x19, #8]
  4083b8:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4083bc:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4083c0:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4083c4:	add	x2, x2, #0x56f
  4083c8:	add	x4, x4, #0x871
  4083cc:	add	x5, x5, #0x8fa
  4083d0:	mov	w3, #0xcc                  	// #204
  4083d4:	mov	w0, w20
  4083d8:	mov	w1, w21
  4083dc:	bl	403478 <log_internal_realm@plt>
  4083e0:	ldrb	w8, [x19, #48]
  4083e4:	sbfx	w8, w8, #0, #1
  4083e8:	and	w0, w8, w21
  4083ec:	b	408248 <mount_one+0xcc>
  4083f0:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  4083f4:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4083f8:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4083fc:	add	x1, x1, #0x846
  408400:	add	x2, x2, #0x56f
  408404:	add	x4, x4, #0x848
  408408:	mov	w3, #0x94                  	// #148
  40840c:	bl	403708 <log_assert_failed_realm@plt>

0000000000408410 <symlink_controller>:
  408410:	stp	x29, x30, [sp, #-48]!
  408414:	str	x21, [sp, #16]
  408418:	stp	x20, x19, [sp, #32]
  40841c:	mov	x29, sp
  408420:	cbz	x0, 4084e0 <symlink_controller+0xd0>
  408424:	mov	x21, x1
  408428:	cbz	x1, 408500 <symlink_controller+0xf0>
  40842c:	mov	x20, x0
  408430:	mov	x0, x21
  408434:	bl	403c08 <strlen@plt>
  408438:	add	x8, x0, #0x10
  40843c:	cmp	x8, #0x400, lsl #12
  408440:	b.hi	408524 <symlink_controller+0x114>  // b.pmore
  408444:	add	x8, x8, #0xf
  408448:	mov	x9, sp
  40844c:	and	x8, x8, #0xfffffffffffffff0
  408450:	sub	x19, x9, x8
  408454:	mov	sp, x19
  408458:	adrp	x8, 40a000 <parse_argv.options+0x1160>
  40845c:	add	x8, x8, #0x55c
  408460:	ldr	q0, [x8]
  408464:	add	x0, x19, #0xf
  408468:	mov	x1, x21
  40846c:	str	q0, [x19]
  408470:	bl	403cc8 <stpcpy@plt>
  408474:	strb	wzr, [x0]
  408478:	mov	x0, x20
  40847c:	mov	x1, x19
  408480:	mov	w2, wzr
  408484:	bl	403cd8 <symlink_idempotent@plt>
  408488:	tbz	w0, #31, 4084cc <symlink_controller+0xbc>
  40848c:	mov	w20, w0
  408490:	mov	w0, wzr
  408494:	bl	403468 <log_get_max_level_realm@plt>
  408498:	cmp	w0, #0x3
  40849c:	b.lt	4084cc <symlink_controller+0xbc>  // b.tstop
  4084a0:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4084a4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4084a8:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4084ac:	add	x2, x2, #0x56f
  4084b0:	add	x4, x4, #0x988
  4084b4:	add	x5, x5, #0x99b
  4084b8:	mov	w0, #0x3                   	// #3
  4084bc:	mov	w3, #0x110                 	// #272
  4084c0:	mov	w1, w20
  4084c4:	mov	x6, x19
  4084c8:	bl	403478 <log_internal_realm@plt>
  4084cc:	mov	sp, x29
  4084d0:	ldp	x20, x19, [sp, #32]
  4084d4:	ldr	x21, [sp, #16]
  4084d8:	ldp	x29, x30, [sp], #48
  4084dc:	ret
  4084e0:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  4084e4:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4084e8:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4084ec:	add	x1, x1, #0x929
  4084f0:	add	x2, x2, #0x56f
  4084f4:	add	x4, x4, #0x930
  4084f8:	mov	w3, #0x109                 	// #265
  4084fc:	bl	403708 <log_assert_failed_realm@plt>
  408500:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  408504:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408508:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  40850c:	add	x1, x1, #0x963
  408510:	add	x2, x2, #0x56f
  408514:	add	x4, x4, #0x930
  408518:	mov	w3, #0x10a                 	// #266
  40851c:	mov	w0, wzr
  408520:	bl	403708 <log_assert_failed_realm@plt>
  408524:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  408528:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  40852c:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408530:	add	x1, x1, #0x969
  408534:	add	x2, x2, #0x56f
  408538:	add	x4, x4, #0x930
  40853c:	mov	w3, #0x10c                 	// #268
  408540:	mov	w0, wzr
  408544:	bl	403708 <log_assert_failed_realm@plt>

0000000000408548 <mount_setup>:
  408548:	sub	sp, sp, #0x110
  40854c:	stp	x22, x21, [sp, #240]
  408550:	adrp	x21, 41f000 <__FRAME_END__+0x142a8>
  408554:	stp	x20, x19, [sp, #256]
  408558:	and	w20, w0, #0x1
  40855c:	add	x21, x21, #0x430
  408560:	mov	w19, w0
  408564:	mov	x0, x21
  408568:	mov	w1, w20
  40856c:	stp	x29, x30, [sp, #176]
  408570:	stp	x28, x27, [sp, #192]
  408574:	stp	x26, x25, [sp, #208]
  408578:	stp	x24, x23, [sp, #224]
  40857c:	add	x29, sp, #0xb0
  408580:	bl	40817c <mount_one>
  408584:	mov	w22, w0
  408588:	add	x0, x21, #0x38
  40858c:	mov	w1, w20
  408590:	bl	40817c <mount_one>
  408594:	cmp	w0, #0x0
  408598:	mov	w23, #0xffffffff            	// #-1
  40859c:	ccmp	w22, w23, #0x4, ne  // ne = any
  4085a0:	csel	w22, w0, w22, gt
  4085a4:	add	x0, x21, #0x70
  4085a8:	mov	w1, w20
  4085ac:	bl	40817c <mount_one>
  4085b0:	cmp	w0, #0x0
  4085b4:	ccmp	w22, w23, #0x4, ne  // ne = any
  4085b8:	csel	w22, w0, w22, gt
  4085bc:	add	x0, x21, #0xa8
  4085c0:	mov	w1, w20
  4085c4:	bl	40817c <mount_one>
  4085c8:	cmp	w0, #0x0
  4085cc:	ccmp	w22, w23, #0x4, ne  // ne = any
  4085d0:	csel	w22, w0, w22, gt
  4085d4:	add	x0, x21, #0xe0
  4085d8:	mov	w1, w20
  4085dc:	bl	40817c <mount_one>
  4085e0:	cmp	w0, #0x0
  4085e4:	ccmp	w22, w23, #0x4, ne  // ne = any
  4085e8:	csel	w22, w0, w22, gt
  4085ec:	add	x0, x21, #0x118
  4085f0:	mov	w1, w20
  4085f4:	bl	40817c <mount_one>
  4085f8:	cmp	w0, #0x0
  4085fc:	ccmp	w22, w23, #0x4, ne  // ne = any
  408600:	csel	w22, w0, w22, gt
  408604:	add	x0, x21, #0x150
  408608:	mov	w1, w20
  40860c:	bl	40817c <mount_one>
  408610:	cmp	w0, #0x0
  408614:	ccmp	w22, w23, #0x4, ne  // ne = any
  408618:	csel	w22, w0, w22, gt
  40861c:	add	x0, x21, #0x188
  408620:	mov	w1, w20
  408624:	bl	40817c <mount_one>
  408628:	cmp	w0, #0x0
  40862c:	ccmp	w22, w23, #0x4, ne  // ne = any
  408630:	csel	w22, w0, w22, gt
  408634:	add	x0, x21, #0x1c0
  408638:	mov	w1, w20
  40863c:	bl	40817c <mount_one>
  408640:	cmp	w0, #0x0
  408644:	ccmp	w22, w23, #0x4, ne  // ne = any
  408648:	csel	w22, w0, w22, gt
  40864c:	add	x0, x21, #0x1f8
  408650:	mov	w1, w20
  408654:	bl	40817c <mount_one>
  408658:	cmp	w0, #0x0
  40865c:	ccmp	w22, w23, #0x4, ne  // ne = any
  408660:	csel	w22, w0, w22, gt
  408664:	add	x0, x21, #0x230
  408668:	mov	w1, w20
  40866c:	bl	40817c <mount_one>
  408670:	cmp	w0, #0x0
  408674:	ccmp	w22, w23, #0x4, ne  // ne = any
  408678:	csel	w22, w0, w22, gt
  40867c:	add	x0, x21, #0x268
  408680:	mov	w1, w20
  408684:	bl	40817c <mount_one>
  408688:	cmp	w0, #0x0
  40868c:	ccmp	w22, w23, #0x4, ne  // ne = any
  408690:	csel	w22, w0, w22, gt
  408694:	add	x0, x21, #0x2a0
  408698:	mov	w1, w20
  40869c:	bl	40817c <mount_one>
  4086a0:	cmp	w0, #0x0
  4086a4:	ccmp	w22, w23, #0x4, ne  // ne = any
  4086a8:	csel	w22, w0, w22, gt
  4086ac:	add	x0, x21, #0x2d8
  4086b0:	mov	w1, w20
  4086b4:	bl	40817c <mount_one>
  4086b8:	cmp	w0, #0x0
  4086bc:	ccmp	w22, w23, #0x4, ne  // ne = any
  4086c0:	csel	w22, w0, w22, gt
  4086c4:	add	x0, x21, #0x310
  4086c8:	mov	w1, w20
  4086cc:	bl	40817c <mount_one>
  4086d0:	cmp	w0, #0x0
  4086d4:	ccmp	w22, w23, #0x4, ne  // ne = any
  4086d8:	csel	w22, w0, w22, gt
  4086dc:	add	x0, x21, #0x348
  4086e0:	mov	w1, w20
  4086e4:	bl	40817c <mount_one>
  4086e8:	cmp	w0, #0x0
  4086ec:	ccmp	w22, w23, #0x4, ne  // ne = any
  4086f0:	csel	w22, w0, w22, gt
  4086f4:	add	x0, x21, #0x380
  4086f8:	mov	w1, w20
  4086fc:	bl	40817c <mount_one>
  408700:	cmp	w0, #0x0
  408704:	ccmp	w22, w23, #0x4, ne  // ne = any
  408708:	csel	w22, w0, w22, gt
  40870c:	add	x0, x21, #0x3b8
  408710:	mov	w1, w20
  408714:	bl	40817c <mount_one>
  408718:	cmp	w0, #0x0
  40871c:	ccmp	w22, w23, #0x4, ne  // ne = any
  408720:	csel	w22, w0, w22, gt
  408724:	add	x0, x21, #0x3f0
  408728:	mov	w1, w20
  40872c:	bl	40817c <mount_one>
  408730:	cmp	w0, #0x0
  408734:	ccmp	w22, w23, #0x4, ne  // ne = any
  408738:	csel	w22, w0, w22, gt
  40873c:	add	x0, x21, #0x428
  408740:	mov	w1, w20
  408744:	bl	40817c <mount_one>
  408748:	cmp	w0, #0x0
  40874c:	ccmp	w22, w23, #0x4, ne  // ne = any
  408750:	csel	w0, w0, w22, gt
  408754:	tbnz	w0, #31, 408d28 <mount_setup+0x7e0>
  408758:	tbz	w19, #0, 408c78 <mount_setup+0x730>
  40875c:	mov	w0, #0x1                   	// #1
  408760:	bl	403b38 <now@plt>
  408764:	mov	x21, x0
  408768:	adrp	x0, 409000 <parse_argv.options+0x160>
  40876c:	add	x8, sp, #0x8
  408770:	adrp	x9, 40a000 <parse_argv.options+0x1160>
  408774:	adrp	x10, 40a000 <parse_argv.options+0x1160>
  408778:	adrp	x19, 408000 <mount_cgroup_controllers+0x200>
  40877c:	add	x0, x0, #0xbef
  408780:	add	x9, x9, #0x5ef
  408784:	add	x10, x10, #0x5f8
  408788:	add	x20, x8, #0x8
  40878c:	add	x19, x19, #0xd48
  408790:	stp	x0, x9, [sp, #8]
  408794:	stp	x10, xzr, [sp, #24]
  408798:	mov	w2, #0x40                  	// #64
  40879c:	mov	w3, #0x13                  	// #19
  4087a0:	mov	x1, x19
  4087a4:	bl	403ce8 <nftw64@plt>
  4087a8:	ldr	x0, [x20], #8
  4087ac:	cbnz	x0, 408798 <mount_setup+0x250>
  4087b0:	bl	403cf8 <cg_all_unified@plt>
  4087b4:	cbz	w0, 4087f8 <mount_setup+0x2b0>
  4087b8:	mov	w19, w0
  4087bc:	tbz	w0, #31, 4088c0 <mount_setup+0x378>
  4087c0:	mov	w0, wzr
  4087c4:	bl	403468 <log_get_max_level_realm@plt>
  4087c8:	cmp	w0, #0x3
  4087cc:	b.lt	4088c0 <mount_setup+0x378>  // b.tstop
  4087d0:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4087d4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4087d8:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4087dc:	add	x2, x2, #0x56f
  4087e0:	add	x4, x4, #0x9bb
  4087e4:	add	x5, x5, #0xa0d
  4087e8:	mov	w0, #0x3                   	// #3
  4087ec:	mov	w3, #0x196                 	// #406
  4087f0:	mov	w1, w19
  4087f4:	b	4088bc <mount_setup+0x374>
  4087f8:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  4087fc:	add	x0, x0, #0x5d1
  408800:	add	x1, sp, #0x28
  408804:	bl	403d08 <statfs64@plt>
  408808:	tbnz	w0, #31, 408884 <mount_setup+0x33c>
  40880c:	ldrb	w8, [sp, #120]
  408810:	tbz	w8, #0, 408830 <mount_setup+0x2e8>
  408814:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  408818:	add	x1, x1, #0x5d1
  40881c:	mov	w3, #0x20                  	// #32
  408820:	mov	x0, xzr
  408824:	mov	x2, xzr
  408828:	mov	x4, xzr
  40882c:	bl	403628 <mount@plt>
  408830:	adrp	x19, 40a000 <parse_argv.options+0x1160>
  408834:	add	x19, x19, #0x5d1
  408838:	mov	x0, x19
  40883c:	mov	w1, wzr
  408840:	bl	403c68 <label_fix@plt>
  408844:	adrp	x1, 408000 <mount_cgroup_controllers+0x200>
  408848:	add	x1, x1, #0xd48
  40884c:	mov	w2, #0x40                  	// #64
  408850:	mov	w3, #0x13                  	// #19
  408854:	mov	x0, x19
  408858:	bl	403ce8 <nftw64@plt>
  40885c:	ldrb	w8, [sp, #120]
  408860:	tbz	w8, #0, 4088c0 <mount_setup+0x378>
  408864:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  408868:	add	x1, x1, #0x5d1
  40886c:	mov	w3, #0x21                  	// #33
  408870:	mov	x0, xzr
  408874:	mov	x2, xzr
  408878:	mov	x4, xzr
  40887c:	bl	403628 <mount@plt>
  408880:	b	4088c0 <mount_setup+0x378>
  408884:	mov	w0, wzr
  408888:	bl	403468 <log_get_max_level_realm@plt>
  40888c:	cmp	w0, #0x3
  408890:	b.lt	4088c0 <mount_setup+0x378>  // b.tstop
  408894:	bl	403678 <__errno_location@plt>
  408898:	ldr	w1, [x0]
  40889c:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  4088a0:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4088a4:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  4088a8:	add	x2, x2, #0x56f
  4088ac:	add	x4, x4, #0x9bb
  4088b0:	add	x5, x5, #0x9d6
  4088b4:	mov	w0, #0x3                   	// #3
  4088b8:	mov	w3, #0x18a                 	// #394
  4088bc:	bl	403478 <log_internal_realm@plt>
  4088c0:	adrp	x1, 40a000 <parse_argv.options+0x1160>
  4088c4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  4088c8:	add	x1, x1, #0xa48
  4088cc:	add	x4, x4, #0xa51
  4088d0:	add	x0, sp, #0x28
  4088d4:	mov	w3, #0x12                  	// #18
  4088d8:	mov	x2, xzr
  4088dc:	str	xzr, [sp, #40]
  4088e0:	bl	403d18 <conf_files_list@plt>
  4088e4:	tbnz	w0, #31, 408b24 <mount_setup+0x5dc>
  4088e8:	ldr	x26, [sp, #40]
  4088ec:	str	x21, [sp]
  4088f0:	cbz	x26, 408b68 <mount_setup+0x620>
  4088f4:	ldr	x0, [x26]
  4088f8:	cbz	x0, 408bdc <mount_setup+0x694>
  4088fc:	adrp	x22, 40a000 <parse_argv.options+0x1160>
  408900:	adrp	x23, 40a000 <parse_argv.options+0x1160>
  408904:	adrp	x25, 40a000 <parse_argv.options+0x1160>
  408908:	adrp	x28, 408000 <mount_cgroup_controllers+0x200>
  40890c:	adrp	x19, 40a000 <parse_argv.options+0x1160>
  408910:	mov	w20, wzr
  408914:	add	x22, x22, #0x56f
  408918:	add	x23, x23, #0xa6f
  40891c:	add	x25, x25, #0xadd
  408920:	add	x28, x28, #0xd48
  408924:	add	x19, x19, #0xafd
  408928:	b	408948 <mount_setup+0x400>
  40892c:	ldr	x0, [x26]
  408930:	bl	403d28 <unlink@plt>
  408934:	tbnz	w0, #31, 408ae8 <mount_setup+0x5a0>
  408938:	mov	x0, x24
  40893c:	bl	403748 <safe_fclose@plt>
  408940:	ldr	x0, [x26, #8]!
  408944:	cbz	x0, 408b6c <mount_setup+0x624>
  408948:	adrp	x1, 409000 <parse_argv.options+0x160>
  40894c:	add	x1, x1, #0x9c8
  408950:	bl	403768 <fopen64@plt>
  408954:	mov	x24, x0
  408958:	cbnz	x0, 4089a0 <mount_setup+0x458>
  40895c:	bl	403468 <log_get_max_level_realm@plt>
  408960:	cmp	w0, #0x4
  408964:	b.lt	408938 <mount_setup+0x3f0>  // b.tstop
  408968:	bl	403678 <__errno_location@plt>
  40896c:	ldr	w1, [x0]
  408970:	ldr	x6, [x26]
  408974:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408978:	mov	w0, #0x4                   	// #4
  40897c:	mov	w3, #0x1b3                 	// #435
  408980:	mov	x2, x22
  408984:	mov	x4, x23
  408988:	add	x5, x5, #0xabd
  40898c:	b	408b1c <mount_setup+0x5d4>
  408990:	mov	w27, #0x1                   	// #1
  408994:	ldur	x0, [x29, #-16]
  408998:	bl	4036b8 <free@plt>
  40899c:	cbnz	w27, 40892c <mount_setup+0x3e4>
  4089a0:	sub	x3, x29, #0x10
  4089a4:	mov	w1, #0x100000              	// #1048576
  4089a8:	mov	x0, x24
  4089ac:	mov	w2, wzr
  4089b0:	stur	xzr, [x29, #-16]
  4089b4:	bl	403778 <read_line_full@plt>
  4089b8:	mov	w21, w0
  4089bc:	tbnz	w0, #31, 408a54 <mount_setup+0x50c>
  4089c0:	cbz	w21, 408990 <mount_setup+0x448>
  4089c4:	ldur	x0, [x29, #-16]
  4089c8:	mov	w1, #0x1                   	// #1
  4089cc:	bl	403d38 <path_simplify@plt>
  4089d0:	ldur	x21, [x29, #-16]
  4089d4:	mov	x0, x21
  4089d8:	bl	403d48 <path_is_normalized@plt>
  4089dc:	tbz	w0, #0, 408a88 <mount_setup+0x540>
  4089e0:	mov	x0, x21
  4089e4:	bl	403d58 <path_is_absolute@plt>
  4089e8:	mov	w27, w0
  4089ec:	mov	w0, wzr
  4089f0:	bl	403468 <log_get_max_level_realm@plt>
  4089f4:	tbz	w27, #0, 408ab4 <mount_setup+0x56c>
  4089f8:	cmp	w0, #0x7
  4089fc:	b.lt	408a28 <mount_setup+0x4e0>  // b.tstop
  408a00:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408a04:	mov	w0, #0x7                   	// #7
  408a08:	mov	w3, #0x1ce                 	// #462
  408a0c:	mov	w1, wzr
  408a10:	mov	x2, x22
  408a14:	mov	x4, x23
  408a18:	add	x5, x5, #0xb5b
  408a1c:	mov	x6, x21
  408a20:	bl	403478 <log_internal_realm@plt>
  408a24:	ldur	x21, [x29, #-16]
  408a28:	mov	x0, x21
  408a2c:	mov	w1, wzr
  408a30:	bl	403c68 <label_fix@plt>
  408a34:	ldur	x0, [x29, #-16]
  408a38:	mov	w2, #0x40                  	// #64
  408a3c:	mov	w3, #0x13                  	// #19
  408a40:	mov	x1, x28
  408a44:	bl	403ce8 <nftw64@plt>
  408a48:	mov	w27, wzr
  408a4c:	add	w20, w20, #0x1
  408a50:	b	408994 <mount_setup+0x44c>
  408a54:	mov	w0, wzr
  408a58:	bl	403468 <log_get_max_level_realm@plt>
  408a5c:	cmp	w0, #0x4
  408a60:	b.lt	408990 <mount_setup+0x448>  // b.tstop
  408a64:	ldr	x6, [x26]
  408a68:	mov	w0, #0x4                   	// #4
  408a6c:	mov	w3, #0x1bc                 	// #444
  408a70:	mov	w1, w21
  408a74:	mov	x2, x22
  408a78:	mov	x4, x23
  408a7c:	mov	x5, x25
  408a80:	bl	403478 <log_internal_realm@plt>
  408a84:	b	408990 <mount_setup+0x448>
  408a88:	mov	w0, wzr
  408a8c:	bl	403468 <log_get_max_level_realm@plt>
  408a90:	cmp	w0, #0x4
  408a94:	b.lt	408ae0 <mount_setup+0x598>  // b.tstop
  408a98:	mov	w0, #0x4                   	// #4
  408a9c:	mov	w3, #0x1c5                 	// #453
  408aa0:	mov	w1, wzr
  408aa4:	mov	x2, x22
  408aa8:	mov	x4, x23
  408aac:	mov	x5, x19
  408ab0:	b	408ad8 <mount_setup+0x590>
  408ab4:	cmp	w0, #0x4
  408ab8:	b.lt	408ae0 <mount_setup+0x598>  // b.tstop
  408abc:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408ac0:	mov	w0, #0x4                   	// #4
  408ac4:	mov	w3, #0x1ca                 	// #458
  408ac8:	mov	w1, wzr
  408acc:	mov	x2, x22
  408ad0:	mov	x4, x23
  408ad4:	add	x5, x5, #0xb2d
  408ad8:	mov	x6, x21
  408adc:	bl	403478 <log_internal_realm@plt>
  408ae0:	mov	w27, wzr
  408ae4:	b	408994 <mount_setup+0x44c>
  408ae8:	mov	w0, wzr
  408aec:	bl	403468 <log_get_max_level_realm@plt>
  408af0:	cmp	w0, #0x4
  408af4:	b.lt	408938 <mount_setup+0x3f0>  // b.tstop
  408af8:	bl	403678 <__errno_location@plt>
  408afc:	ldr	w1, [x0]
  408b00:	ldr	x6, [x26]
  408b04:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408b08:	mov	w0, #0x4                   	// #4
  408b0c:	mov	w3, #0x1d5                 	// #469
  408b10:	mov	x2, x22
  408b14:	mov	x4, x23
  408b18:	add	x5, x5, #0xb87
  408b1c:	bl	403478 <log_internal_realm@plt>
  408b20:	b	408938 <mount_setup+0x3f0>
  408b24:	mov	w19, w0
  408b28:	mov	w0, wzr
  408b2c:	bl	403468 <log_get_max_level_realm@plt>
  408b30:	cmp	w0, #0x3
  408b34:	b.lt	408bcc <mount_setup+0x684>  // b.tstop
  408b38:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408b3c:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408b40:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408b44:	add	x2, x2, #0x56f
  408b48:	add	x4, x4, #0xa6f
  408b4c:	add	x5, x5, #0xa7d
  408b50:	mov	w0, #0x3                   	// #3
  408b54:	mov	w3, #0x1ac                 	// #428
  408b58:	mov	w1, w19
  408b5c:	bl	403478 <log_internal_realm@plt>
  408b60:	mov	w20, w0
  408b64:	b	408bf4 <mount_setup+0x6ac>
  408b68:	mov	w20, wzr
  408b6c:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  408b70:	add	x0, x0, #0xba9
  408b74:	bl	403cb8 <rmdir@plt>
  408b78:	tbz	w0, #31, 408bf0 <mount_setup+0x6a8>
  408b7c:	bl	403678 <__errno_location@plt>
  408b80:	ldr	w19, [x0]
  408b84:	cmp	w19, #0x2
  408b88:	b.eq	408bf0 <mount_setup+0x6a8>  // b.none
  408b8c:	mov	w0, wzr
  408b90:	bl	403468 <log_get_max_level_realm@plt>
  408b94:	ldr	x21, [sp]
  408b98:	cmp	w0, #0x4
  408b9c:	b.lt	408bf4 <mount_setup+0x6ac>  // b.tstop
  408ba0:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408ba4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408ba8:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408bac:	add	x2, x2, #0x56f
  408bb0:	add	x4, x4, #0xa6f
  408bb4:	add	x5, x5, #0xbc6
  408bb8:	mov	w0, #0x4                   	// #4
  408bbc:	mov	w3, #0x1db                 	// #475
  408bc0:	mov	w1, w19
  408bc4:	bl	403478 <log_internal_realm@plt>
  408bc8:	b	408bf4 <mount_setup+0x6ac>
  408bcc:	mov	w8, wzr
  408bd0:	neg	w9, w19
  408bd4:	sub	w20, w8, w9, uxtb
  408bd8:	b	408bf4 <mount_setup+0x6ac>
  408bdc:	mov	w20, wzr
  408be0:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  408be4:	add	x0, x0, #0xba9
  408be8:	bl	403cb8 <rmdir@plt>
  408bec:	tbnz	w0, #31, 408b7c <mount_setup+0x634>
  408bf0:	ldr	x21, [sp]
  408bf4:	ldr	x0, [sp, #40]
  408bf8:	cbz	x0, 408c00 <mount_setup+0x6b8>
  408bfc:	bl	403d68 <strv_free@plt>
  408c00:	mov	w0, #0x1                   	// #1
  408c04:	bl	403b38 <now@plt>
  408c08:	mov	x19, x0
  408c0c:	mov	w0, wzr
  408c10:	bl	403468 <log_get_max_level_realm@plt>
  408c14:	cmp	w0, #0x5
  408c18:	b.le	408c78 <mount_setup+0x730>
  408c1c:	adrp	x8, 409000 <parse_argv.options+0x160>
  408c20:	adrp	x9, 40a000 <parse_argv.options+0x1160>
  408c24:	add	x8, x8, #0x330
  408c28:	add	x9, x9, #0x642
  408c2c:	cmp	w20, #0x0
  408c30:	sub	x2, x19, x21
  408c34:	add	x0, sp, #0x28
  408c38:	mov	w1, #0x40                  	// #64
  408c3c:	mov	x3, xzr
  408c40:	csel	x20, x9, x8, gt
  408c44:	bl	403d78 <format_timespan@plt>
  408c48:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408c4c:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408c50:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408c54:	mov	x7, x0
  408c58:	add	x2, x2, #0x56f
  408c5c:	add	x4, x4, #0x5fd
  408c60:	add	x5, x5, #0x609
  408c64:	mov	w0, #0x6                   	// #6
  408c68:	mov	w3, #0x200                 	// #512
  408c6c:	mov	w1, wzr
  408c70:	mov	x6, x20
  408c74:	bl	403478 <log_internal_realm@plt>
  408c78:	mov	w1, #0xffffffff            	// #-1
  408c7c:	mov	w2, #0xffffffff            	// #-1
  408c80:	mov	x0, xzr
  408c84:	bl	403d88 <dev_setup@plt>
  408c88:	bl	403538 <detect_container@plt>
  408c8c:	cmp	w0, #0x0
  408c90:	b.gt	408cf4 <mount_setup+0x7ac>
  408c94:	adrp	x1, 409000 <parse_argv.options+0x160>
  408c98:	mov	w3, #0x4000                	// #16384
  408c9c:	add	x1, x1, #0xf79
  408ca0:	movk	w3, #0x10, lsl #16
  408ca4:	mov	x0, xzr
  408ca8:	mov	x2, xzr
  408cac:	mov	x4, xzr
  408cb0:	bl	403628 <mount@plt>
  408cb4:	tbz	w0, #31, 408cf4 <mount_setup+0x7ac>
  408cb8:	mov	w0, wzr
  408cbc:	bl	403468 <log_get_max_level_realm@plt>
  408cc0:	cmp	w0, #0x4
  408cc4:	b.lt	408cf4 <mount_setup+0x7ac>  // b.tstop
  408cc8:	bl	403678 <__errno_location@plt>
  408ccc:	ldr	w1, [x0]
  408cd0:	adrp	x2, 40a000 <parse_argv.options+0x1160>
  408cd4:	adrp	x4, 40a000 <parse_argv.options+0x1160>
  408cd8:	adrp	x5, 40a000 <parse_argv.options+0x1160>
  408cdc:	add	x2, x2, #0x56f
  408ce0:	add	x4, x4, #0x5fd
  408ce4:	add	x5, x5, #0x655
  408ce8:	mov	w0, #0x4                   	// #4
  408cec:	mov	w3, #0x211                 	// #529
  408cf0:	bl	403478 <log_internal_realm@plt>
  408cf4:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  408cf8:	add	x0, x0, #0x69a
  408cfc:	mov	w1, #0x1ed                 	// #493
  408d00:	bl	403d98 <mkdir_label@plt>
  408d04:	adrp	x0, 40a000 <parse_argv.options+0x1160>
  408d08:	add	x0, x0, #0x6a7
  408d0c:	mov	w1, #0x1ed                 	// #493
  408d10:	bl	403d98 <mkdir_label@plt>
  408d14:	mov	w1, #0xffffffff            	// #-1
  408d18:	mov	w2, #0xffffffff            	// #-1
  408d1c:	mov	x0, xzr
  408d20:	bl	403da8 <make_inaccessible_nodes@plt>
  408d24:	mov	w0, wzr
  408d28:	ldp	x20, x19, [sp, #256]
  408d2c:	ldp	x22, x21, [sp, #240]
  408d30:	ldp	x24, x23, [sp, #224]
  408d34:	ldp	x26, x25, [sp, #208]
  408d38:	ldp	x28, x27, [sp, #192]
  408d3c:	ldp	x29, x30, [sp, #176]
  408d40:	add	sp, sp, #0x110
  408d44:	ret

0000000000408d48 <nftw_cb>:
  408d48:	stp	x29, x30, [sp, #-48]!
  408d4c:	stp	x20, x19, [sp, #32]
  408d50:	ldr	w8, [x3, #4]
  408d54:	str	x21, [sp, #16]
  408d58:	mov	x29, sp
  408d5c:	cbz	w8, 408db4 <nftw_cb+0x6c>
  408d60:	mov	w1, wzr
  408d64:	mov	x20, x3
  408d68:	mov	w21, w2
  408d6c:	mov	x19, x0
  408d70:	bl	403c68 <label_fix@plt>
  408d74:	cmp	w21, #0x1
  408d78:	b.ne	408db4 <nftw_cb+0x6c>  // b.any
  408d7c:	ldr	w8, [x20, #4]
  408d80:	cmp	w8, #0x1
  408d84:	b.ne	408db4 <nftw_cb+0x6c>  // b.any
  408d88:	adrp	x1, 409000 <parse_argv.options+0x160>
  408d8c:	add	x1, x1, #0xa6e
  408d90:	mov	x0, x19
  408d94:	bl	403518 <strcmp@plt>
  408d98:	cmp	w0, #0x0
  408d9c:	cset	w8, eq  // eq = none
  408da0:	lsl	w0, w8, #1
  408da4:	ldp	x20, x19, [sp, #32]
  408da8:	ldr	x21, [sp, #16]
  408dac:	ldp	x29, x30, [sp], #48
  408db0:	ret
  408db4:	mov	w0, wzr
  408db8:	ldp	x20, x19, [sp, #32]
  408dbc:	ldr	x21, [sp, #16]
  408dc0:	ldp	x29, x30, [sp], #48
  408dc4:	ret

0000000000408dc8 <__libc_csu_init>:
  408dc8:	stp	x29, x30, [sp, #-64]!
  408dcc:	mov	x29, sp
  408dd0:	stp	x19, x20, [sp, #16]
  408dd4:	adrp	x20, 41f000 <__FRAME_END__+0x142a8>
  408dd8:	add	x20, x20, #0x430
  408ddc:	stp	x21, x22, [sp, #32]
  408de0:	adrp	x21, 41f000 <__FRAME_END__+0x142a8>
  408de4:	add	x21, x21, #0x428
  408de8:	sub	x20, x20, x21
  408dec:	mov	w22, w0
  408df0:	stp	x23, x24, [sp, #48]
  408df4:	mov	x23, x1
  408df8:	mov	x24, x2
  408dfc:	bl	4033a0 <_init>
  408e00:	cmp	xzr, x20, asr #3
  408e04:	b.eq	408e30 <__libc_csu_init+0x68>  // b.none
  408e08:	asr	x20, x20, #3
  408e0c:	mov	x19, #0x0                   	// #0
  408e10:	ldr	x3, [x21, x19, lsl #3]
  408e14:	mov	x2, x24
  408e18:	add	x19, x19, #0x1
  408e1c:	mov	x1, x23
  408e20:	mov	w0, w22
  408e24:	blr	x3
  408e28:	cmp	x20, x19
  408e2c:	b.ne	408e10 <__libc_csu_init+0x48>  // b.any
  408e30:	ldp	x19, x20, [sp, #16]
  408e34:	ldp	x21, x22, [sp, #32]
  408e38:	ldp	x23, x24, [sp, #48]
  408e3c:	ldp	x29, x30, [sp], #64
  408e40:	ret
  408e44:	nop

0000000000408e48 <__libc_csu_fini>:
  408e48:	ret

Disassembly of section .fini:

0000000000408e4c <_fini>:
  408e4c:	stp	x29, x30, [sp, #-16]!
  408e50:	mov	x29, sp
  408e54:	ldp	x29, x30, [sp], #16
  408e58:	ret
