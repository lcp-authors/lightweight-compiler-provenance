
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cmp.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1e8>:
   0:	cmp	w1, #0x2
   4:	b.eq	18 <grub_mod_init-0x1d0>  // b.none
   8:	adrp	x1, 0 <grub_mod_init-0x1e8>
   c:	mov	w0, #0x12                  	// #18
  10:	ldr	x1, [x1]
  14:	b	0 <grub_error>
  18:	stp	x29, x30, [sp, #-80]!
  1c:	adrp	x0, 0 <grub_mod_init-0x1e8>
  20:	mov	x29, sp
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x19, x2
  2c:	ldp	x1, x2, [x2]
  30:	stp	x21, x22, [sp, #32]
  34:	ldr	x0, [x0]
  38:	bl	0 <grub_printf_>
  3c:	ldr	x0, [x19]
  40:	mov	w1, #0x2d                  	// #45
  44:	bl	0 <grub_file_open>
  48:	mov	x21, x0
  4c:	ldr	x0, [x19, #8]
  50:	mov	w1, #0x2d                  	// #45
  54:	bl	0 <grub_file_open>
  58:	mov	x20, x0
  5c:	cmp	x21, #0x0
  60:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  64:	b.eq	d8 <grub_mod_init-0x110>  // b.none
  68:	ldr	x3, [x0, #64]
  6c:	stp	x23, x24, [sp, #48]
  70:	ldr	x1, [x21, #64]
  74:	cmp	x1, x3
  78:	b.eq	f0 <grub_mod_init-0xf8>  // b.none
  7c:	adrp	x0, 0 <grub_mod_init-0x1e8>
  80:	mov	x22, #0x0                   	// #0
  84:	ldp	x2, x4, [x19]
  88:	mov	x23, #0x0                   	// #0
  8c:	ldr	x0, [x0]
  90:	bl	0 <grub_printf_>
  94:	mov	x0, x23
  98:	bl	0 <grub_free>
  9c:	mov	x0, x22
  a0:	bl	0 <grub_free>
  a4:	ldp	x23, x24, [sp, #48]
  a8:	mov	x0, x21
  ac:	bl	0 <grub_file_close>
  b0:	cbz	x20, bc <grub_mod_init-0x12c>
  b4:	mov	x0, x20
  b8:	bl	0 <grub_file_close>
  bc:	adrp	x0, 0 <grub_mod_init-0x1e8>
  c0:	ldp	x19, x20, [sp, #16]
  c4:	ldr	x0, [x0]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldr	w0, [x0]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret
  d8:	mov	x0, #0x0                   	// #0
  dc:	bl	0 <grub_free>
  e0:	mov	x0, #0x0                   	// #0
  e4:	bl	0 <grub_free>
  e8:	cbz	x21, b0 <grub_mod_init-0x138>
  ec:	b	a8 <grub_mod_init-0x140>
  f0:	mov	x0, #0x200                 	// #512
  f4:	bl	0 <grub_malloc>
  f8:	mov	x23, x0
  fc:	mov	x0, #0x200                 	// #512
 100:	bl	0 <grub_malloc>
 104:	mov	x22, x0
 108:	cmp	x23, #0x0
 10c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
 110:	b.eq	94 <grub_mod_init-0x154>  // b.none
 114:	str	x25, [sp, #64]
 118:	mov	x25, #0x0                   	// #0
 11c:	mov	x1, x23
 120:	mov	x2, #0x200                 	// #512
 124:	mov	x0, x21
 128:	bl	0 <grub_file_read>
 12c:	mov	x24, x0
 130:	mov	x1, x22
 134:	mov	x0, x20
 138:	mov	x2, #0x200                 	// #512
 13c:	bl	0 <grub_file_read>
 140:	cmp	x24, x0
 144:	b.ne	1b0 <grub_mod_init-0x38>  // b.any
 148:	cmp	x24, #0x0
 14c:	b.le	198 <grub_mod_init-0x50>
 150:	mov	x1, #0x0                   	// #0
 154:	b	164 <grub_mod_init-0x84>
 158:	add	x1, x1, #0x1
 15c:	cmp	x24, x1
 160:	b.eq	190 <grub_mod_init-0x58>  // b.none
 164:	ldrb	w2, [x23, x1]
 168:	ldrb	w4, [x22, x1]
 16c:	cmp	w2, w4
 170:	b.eq	158 <grub_mod_init-0x90>  // b.none
 174:	adrp	x0, 0 <grub_mod_init-0x1e8>
 178:	add	x1, x25, x1
 17c:	ldp	x3, x5, [x19]
 180:	ldr	x0, [x0]
 184:	bl	0 <grub_printf_>
 188:	ldr	x25, [sp, #64]
 18c:	b	94 <grub_mod_init-0x154>
 190:	add	x25, x25, #0x200
 194:	b	11c <grub_mod_init-0xcc>
 198:	b.ne	190 <grub_mod_init-0x58>  // b.any
 19c:	adrp	x0, 0 <grub_mod_init-0x1e8>
 1a0:	ldr	x0, [x0]
 1a4:	bl	0 <grub_printf_>
 1a8:	ldr	x25, [sp, #64]
 1ac:	b	94 <grub_mod_init-0x154>
 1b0:	ldr	x25, [sp, #64]
 1b4:	b	94 <grub_mod_init-0x154>
	...

00000000000001e8 <grub_mod_init>:
 1e8:	stp	x29, x30, [sp, #-16]!
 1ec:	adrp	x3, 0 <grub_mod_init-0x1e8>
 1f0:	adrp	x2, 0 <grub_mod_init-0x1e8>
 1f4:	adrp	x1, 0 <grub_mod_init-0x1e8>
 1f8:	adrp	x0, 0 <grub_mod_init-0x1e8>
 1fc:	mov	x29, sp
 200:	ldr	x3, [x3]
 204:	mov	w4, #0x0                   	// #0
 208:	ldr	x2, [x2]
 20c:	ldr	x1, [x1]
 210:	ldr	x0, [x0]
 214:	bl	0 <grub_register_command_prio>
 218:	adrp	x1, 0 <grub_mod_init-0x1e8>
 21c:	ldr	x1, [x1]
 220:	str	x0, [x1]
 224:	ldp	x29, x30, [sp], #16
 228:	ret
 22c:	nop
	...

0000000000000258 <grub_mod_fini>:
 258:	adrp	x0, 0 <grub_mod_init-0x1e8>
 25c:	ldr	x0, [x0]
 260:	ldr	x0, [x0]
 264:	b	0 <grub_unregister_command>
	...
