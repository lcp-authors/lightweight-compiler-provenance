
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//png.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_png_output_byte>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	mov	x19, x0
      10:	ldr	w0, [x0, #44]
      14:	sub	w0, w0, #0x1
      18:	str	w0, [x19, #44]
      1c:	tbnz	w0, #31, 1fc <grub_png_output_byte+0x1fc>
      20:	add	x20, x19, #0x8, lsl #12
      24:	and	w1, w1, #0xff
      28:	ldr	w0, [x20, #2464]
      2c:	cbz	w0, 70 <grub_png_output_byte+0x70>
      30:	ldr	x0, [x20, #2456]
      34:	add	x2, x0, #0x1
      38:	str	x2, [x20, #2456]
      3c:	strb	w1, [x0]
      40:	ldr	w0, [x20, #2464]
      44:	add	w1, w0, #0x1
      48:	str	w1, [x20, #2464]
      4c:	ldr	w1, [x19, #60]
      50:	cmp	w1, w0
      54:	b.eq	90 <grub_png_output_byte+0x90>  // b.none
      58:	adrp	x0, 0 <grub_png_output_byte>
      5c:	ldr	x0, [x0]
      60:	ldr	w0, [x0]
      64:	ldp	x19, x20, [sp, #16]
      68:	ldp	x29, x30, [sp], #48
      6c:	ret
      70:	cmp	w1, #0x4
      74:	b.hi	214 <grub_png_output_byte+0x214>  // b.pmore
      78:	str	w1, [x20, #2468]
      7c:	add	w1, w0, #0x1
      80:	str	w1, [x20, #2464]
      84:	ldr	w1, [x19, #60]
      88:	cmp	w1, w0
      8c:	b.ne	58 <grub_png_output_byte+0x58>  // b.any
      90:	ldr	w2, [x20, #2472]
      94:	sxtw	x1, w0
      98:	str	x21, [sp, #32]
      9c:	mov	x0, #0x0                   	// #0
      a0:	ldr	x21, [x20, #2456]
      a4:	sub	x21, x21, x1
      a8:	sub	x4, x21, x1
      ac:	cbnz	w2, 1d8 <grub_png_output_byte+0x1d8>
      b0:	ldr	w1, [x20, #2468]
      b4:	cmp	w1, #0x3
      b8:	b.eq	270 <grub_png_output_byte+0x270>  // b.none
      bc:	b.gt	114 <grub_png_output_byte+0x114>
      c0:	cmp	w1, #0x1
      c4:	b.eq	22c <grub_png_output_byte+0x22c>  // b.none
      c8:	cmp	w1, #0x2
      cc:	b.ne	100 <grub_png_output_byte+0x100>  // b.any
      d0:	ldr	w2, [x19, #60]
      d4:	mov	x1, #0x0                   	// #0
      d8:	cmp	w2, #0x0
      dc:	b.le	100 <grub_png_output_byte+0x100>
      e0:	ldrb	w3, [x4, x1]
      e4:	ldrb	w2, [x21, x1]
      e8:	add	w2, w2, w3
      ec:	strb	w2, [x21, x1]
      f0:	add	x1, x1, #0x1
      f4:	ldr	w2, [x19, #60]
      f8:	cmp	w2, w1
      fc:	b.gt	e0 <grub_png_output_byte+0xe0>
     100:	bl	0 <grub_free>
     104:	ldr	x21, [sp, #32]
     108:	str	wzr, [x20, #2464]
     10c:	str	wzr, [x20, #2472]
     110:	b	58 <grub_png_output_byte+0x58>
     114:	cmp	w1, #0x4
     118:	b.ne	100 <grub_png_output_byte+0x100>  // b.any
     11c:	ldr	w1, [x19, #36]
     120:	mov	x12, x4
     124:	mov	x7, x21
     128:	mov	w9, #0x0                   	// #0
     12c:	cmp	w1, #0x0
     130:	b.le	158 <grub_png_output_byte+0x158>
     134:	nop
     138:	ldrb	w1, [x7]
     13c:	add	w9, w9, #0x1
     140:	ldrb	w2, [x12], #1
     144:	add	w1, w1, w2
     148:	strb	w1, [x7], #1
     14c:	ldr	w1, [x19, #36]
     150:	cmp	w1, w9
     154:	b.gt	138 <grub_png_output_byte+0x138>
     158:	ldr	w1, [x19, #60]
     15c:	cmp	w1, w9
     160:	b.le	100 <grub_png_output_byte+0x100>
     164:	mov	x1, #0x0                   	// #0
     168:	ldrb	w6, [x4, x1]
     16c:	ldrb	w11, [x12, x1]
     170:	ldrb	w8, [x21, x1]
     174:	subs	w5, w11, w6
     178:	sub	w13, w6, w11
     17c:	sub	w2, w8, w6
     180:	sub	w10, w6, w8
     184:	add	w3, w5, w2
     188:	csel	w5, w13, w5, mi  // mi = first
     18c:	cmp	w2, #0x0
     190:	csel	w2, w10, w2, lt  // lt = tstop
     194:	cmp	w3, #0x0
     198:	cneg	w3, w3, lt  // lt = tstop
     19c:	ldrb	w10, [x7, x1]
     1a0:	cmp	w3, w2
     1a4:	csel	w13, w3, w2, le
     1a8:	cmp	w13, w5
     1ac:	b.ge	1b8 <grub_png_output_byte+0x1b8>  // b.tcont
     1b0:	cmp	w3, w2
     1b4:	csel	w8, w11, w6, ge  // ge = tcont
     1b8:	add	w8, w10, w8
     1bc:	strb	w8, [x7, x1]
     1c0:	add	x1, x1, #0x1
     1c4:	ldr	w3, [x19, #60]
     1c8:	add	w2, w9, w1
     1cc:	cmp	w3, w2
     1d0:	b.gt	168 <grub_png_output_byte+0x168>
     1d4:	b	100 <grub_png_output_byte+0x100>
     1d8:	mov	x0, x1
     1dc:	bl	0 <grub_zalloc>
     1e0:	mov	x4, x0
     1e4:	cbnz	x0, b0 <grub_png_output_byte+0xb0>
     1e8:	adrp	x0, 0 <grub_png_output_byte>
     1ec:	ldr	x21, [sp, #32]
     1f0:	ldr	x0, [x0]
     1f4:	ldr	w0, [x0]
     1f8:	b	64 <grub_png_output_byte+0x64>
     1fc:	adrp	x1, 0 <grub_png_output_byte>
     200:	mov	w0, #0x4                   	// #4
     204:	ldp	x19, x20, [sp, #16]
     208:	ldp	x29, x30, [sp], #48
     20c:	ldr	x1, [x1]
     210:	b	0 <grub_error>
     214:	adrp	x1, 0 <grub_png_output_byte>
     218:	mov	w0, #0x4                   	// #4
     21c:	ldp	x19, x20, [sp, #16]
     220:	ldp	x29, x30, [sp], #48
     224:	ldr	x1, [x1]
     228:	b	0 <grub_error>
     22c:	ldr	w5, [x19, #36]
     230:	ldr	w1, [x19, #60]
     234:	add	x3, x21, w5, sxtw
     238:	cmp	w5, w1
     23c:	b.ge	100 <grub_png_output_byte+0x100>  // b.tcont
     240:	mov	x1, #0x0                   	// #0
     244:	nop
     248:	ldrb	w4, [x21, x1]
     24c:	ldrb	w2, [x3, x1]
     250:	add	w2, w2, w4
     254:	strb	w2, [x3, x1]
     258:	add	x1, x1, #0x1
     25c:	ldr	w4, [x19, #60]
     260:	add	w2, w5, w1
     264:	cmp	w4, w2
     268:	b.gt	248 <grub_png_output_byte+0x248>
     26c:	b	100 <grub_png_output_byte+0x100>
     270:	ldr	w1, [x19, #36]
     274:	mov	x3, x21
     278:	mov	w5, #0x0                   	// #0
     27c:	cmp	w1, #0x0
     280:	b.le	2a8 <grub_png_output_byte+0x2a8>
     284:	nop
     288:	ldrb	w1, [x4], #1
     28c:	add	w5, w5, #0x1
     290:	ldrb	w2, [x3]
     294:	add	w1, w2, w1, lsr #1
     298:	strb	w1, [x3], #1
     29c:	ldr	w1, [x19, #36]
     2a0:	cmp	w1, w5
     2a4:	b.gt	288 <grub_png_output_byte+0x288>
     2a8:	ldr	w1, [x19, #60]
     2ac:	cmp	w1, w5
     2b0:	b.le	100 <grub_png_output_byte+0x100>
     2b4:	mov	x1, #0x0                   	// #0
     2b8:	ldrb	w2, [x4, x1]
     2bc:	ldrb	w7, [x21, x1]
     2c0:	ldrb	w6, [x3, x1]
     2c4:	add	w2, w2, w7
     2c8:	add	w2, w6, w2, lsr #1
     2cc:	strb	w2, [x3, x1]
     2d0:	add	x1, x1, #0x1
     2d4:	ldr	w6, [x19, #60]
     2d8:	add	w2, w5, w1
     2dc:	cmp	w6, w2
     2e0:	b.gt	2b8 <grub_png_output_byte+0x2b8>
     2e4:	b	100 <grub_png_output_byte+0x100>
	...

0000000000000300 <grub_png_get_byte>:
     300:	stp	x29, x30, [sp, #-64]!
     304:	mov	x29, sp
     308:	ldr	w1, [x0, #80]
     30c:	stp	x19, x20, [sp, #16]
     310:	mov	x19, x0
     314:	stp	x21, x22, [sp, #32]
     318:	add	x21, sp, #0x3c
     31c:	ldr	x0, [x0]
     320:	cbz	w1, 3e0 <grub_png_get_byte+0xe0>
     324:	ldr	w1, [x19, #84]
     328:	add	x21, sp, #0x3c
     32c:	cbnz	w1, 3e0 <grub_png_get_byte+0xe0>
     330:	mov	w22, #0x4154                	// #16724
     334:	movk	w22, #0x4944, lsl #16
     338:	b	388 <grub_png_get_byte+0x88>
     33c:	str	wzr, [sp, #60]
     340:	bl	0 <grub_file_read>
     344:	ldr	x0, [x19]
     348:	mov	x1, x21
     34c:	ldr	w20, [sp, #60]
     350:	mov	x2, #0x4                   	// #4
     354:	str	wzr, [sp, #60]
     358:	bl	0 <grub_file_read>
     35c:	rev	w20, w20
     360:	ldr	w0, [sp, #60]
     364:	rev	w0, w0
     368:	cmp	w0, w22
     36c:	b.ne	41c <grub_png_get_byte+0x11c>  // b.any
     370:	ldr	x0, [x19]
     374:	ldr	x1, [x0, #24]
     378:	add	w1, w1, #0x4
     37c:	add	w1, w1, w20
     380:	str	w1, [x19, #24]
     384:	cbnz	w20, 3d8 <grub_png_get_byte+0xd8>
     388:	mov	x1, x21
     38c:	mov	x2, #0x4                   	// #4
     390:	str	wzr, [sp, #60]
     394:	bl	0 <grub_file_read>
     398:	ldr	x0, [x19]
     39c:	mov	x1, x21
     3a0:	ldr	w3, [x19, #24]
     3a4:	mov	x2, #0x4                   	// #4
     3a8:	ldr	x4, [x0, #24]
     3ac:	cmp	x4, x3
     3b0:	b.eq	33c <grub_png_get_byte+0x3c>  // b.none
     3b4:	adrp	x1, 0 <grub_png_output_byte>
     3b8:	mov	w0, #0x4                   	// #4
     3bc:	ldr	x1, [x1]
     3c0:	bl	0 <grub_error>
     3c4:	mov	w0, #0x0                   	// #0
     3c8:	ldp	x19, x20, [sp, #16]
     3cc:	ldp	x21, x22, [sp, #32]
     3d0:	ldp	x29, x30, [sp], #64
     3d4:	ret
     3d8:	str	w20, [x19, #84]
     3dc:	nop
     3e0:	mov	x1, x21
     3e4:	mov	x2, #0x1                   	// #1
     3e8:	strb	wzr, [sp, #60]
     3ec:	bl	0 <grub_file_read>
     3f0:	ldr	w0, [x19, #80]
     3f4:	cbnz	w0, 40c <grub_png_get_byte+0x10c>
     3f8:	ldrb	w0, [sp, #60]
     3fc:	ldp	x19, x20, [sp, #16]
     400:	ldp	x21, x22, [sp, #32]
     404:	ldp	x29, x30, [sp], #64
     408:	ret
     40c:	ldr	w0, [x19, #84]
     410:	sub	w0, w0, #0x1
     414:	str	w0, [x19, #84]
     418:	b	3f8 <grub_png_get_byte+0xf8>
     41c:	adrp	x1, 0 <grub_png_output_byte>
     420:	mov	w0, #0x4                   	// #4
     424:	ldr	x1, [x1]
     428:	bl	0 <grub_error>
     42c:	mov	w0, #0x0                   	// #0
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x21, x22, [sp, #32]
     438:	ldp	x29, x30, [sp], #64
     43c:	ret
	...

0000000000000450 <grub_png_get_bits>:
     450:	stp	x29, x30, [sp, #-80]!
     454:	mov	x29, sp
     458:	stp	x19, x20, [sp, #16]
     45c:	mov	w19, w1
     460:	ldr	w1, [x0, #16]
     464:	stp	x23, x24, [sp, #48]
     468:	mov	x20, x0
     46c:	str	x25, [sp, #64]
     470:	cbz	w1, 540 <grub_png_get_bits+0xf0>
     474:	adrp	x0, 0 <grub_png_output_byte>
     478:	ldr	x25, [x0]
     47c:	ldr	w0, [x25]
     480:	cbnz	w0, 554 <grub_png_get_bits+0x104>
     484:	ldp	w1, w0, [x20, #16]
     488:	stp	x21, x22, [sp, #32]
     48c:	mov	w21, #0x1                   	// #1
     490:	cmp	w19, w1
     494:	csel	w2, w19, w1, le
     498:	subs	w19, w19, w2
     49c:	lsl	w23, w21, w2
     4a0:	sub	w23, w23, #0x1
     4a4:	and	w23, w23, w0
     4a8:	b.eq	518 <grub_png_get_bits+0xc8>  // b.none
     4ac:	mov	w22, #0x0                   	// #0
     4b0:	mov	w24, #0x8                   	// #8
     4b4:	b	4c4 <grub_png_get_bits+0x74>
     4b8:	lsl	w1, w1, w22
     4bc:	add	w23, w23, w1
     4c0:	b.eq	514 <grub_png_get_bits+0xc4>  // b.none
     4c4:	add	w22, w22, w2
     4c8:	mov	x0, x20
     4cc:	bl	300 <grub_png_get_byte>
     4d0:	and	w0, w0, #0xff
     4d4:	cmp	w19, #0x8
     4d8:	ldr	w3, [x25]
     4dc:	csel	w2, w19, w24, le
     4e0:	stp	w24, w0, [x20, #16]
     4e4:	subs	w19, w19, w2
     4e8:	lsl	w1, w21, w2
     4ec:	sub	w1, w1, #0x1
     4f0:	and	w1, w1, w0
     4f4:	cbz	w3, 4b8 <grub_png_get_bits+0x68>
     4f8:	ldp	x21, x22, [sp, #32]
     4fc:	mov	w0, w23
     500:	ldp	x19, x20, [sp, #16]
     504:	ldp	x23, x24, [sp, #48]
     508:	ldr	x25, [sp, #64]
     50c:	ldp	x29, x30, [sp], #80
     510:	ret
     514:	mov	w1, #0x8                   	// #8
     518:	sub	w1, w1, w2
     51c:	asr	w2, w0, w2
     520:	ldp	x21, x22, [sp, #32]
     524:	stp	w1, w2, [x20, #16]
     528:	mov	w0, w23
     52c:	ldp	x19, x20, [sp, #16]
     530:	ldp	x23, x24, [sp, #48]
     534:	ldr	x25, [sp, #64]
     538:	ldp	x29, x30, [sp], #80
     53c:	ret
     540:	bl	300 <grub_png_get_byte>
     544:	and	w0, w0, #0xff
     548:	mov	w1, #0x8                   	// #8
     54c:	stp	w1, w0, [x20, #16]
     550:	b	474 <grub_png_get_bits+0x24>
     554:	mov	w23, #0x0                   	// #0
     558:	b	4fc <grub_png_get_bits+0xac>
     55c:	nop
	...

0000000000000568 <grub_png_get_huff_code>:
     568:	stp	x29, x30, [sp, #-48]!
     56c:	mov	x29, sp
     570:	stp	x21, x22, [sp, #32]
     574:	mov	x22, x0
     578:	ldr	w0, [x1, #28]
     57c:	cmp	w0, #0x0
     580:	b.le	5f8 <grub_png_get_huff_code+0x90>
     584:	mov	x21, x1
     588:	mov	w0, #0x0                   	// #0
     58c:	stp	x19, x20, [sp, #16]
     590:	mov	x20, #0x0                   	// #0
     594:	b	5a4 <grub_png_get_huff_code+0x3c>
     598:	ldr	w1, [x21, #28]
     59c:	cmp	w1, w20
     5a0:	b.le	5f4 <grub_png_get_huff_code+0x8c>
     5a4:	lsl	w19, w0, #1
     5a8:	mov	w1, #0x1                   	// #1
     5ac:	mov	x0, x22
     5b0:	bl	450 <grub_png_get_bits>
     5b4:	ldr	x1, [x21, #8]
     5b8:	add	w0, w19, w0
     5bc:	lsl	x2, x20, #2
     5c0:	ldr	w1, [x1, x20, lsl #2]
     5c4:	add	x20, x20, #0x1
     5c8:	cmp	w1, w0
     5cc:	b.le	598 <grub_png_get_huff_code+0x30>
     5d0:	ldr	x3, [x21, #16]
     5d4:	ldr	x1, [x21]
     5d8:	ldr	w2, [x3, x2]
     5dc:	ldp	x19, x20, [sp, #16]
     5e0:	add	w0, w0, w2
     5e4:	ldp	x21, x22, [sp, #32]
     5e8:	ldr	w0, [x1, w0, sxtw #2]
     5ec:	ldp	x29, x30, [sp], #48
     5f0:	ret
     5f4:	ldp	x19, x20, [sp, #16]
     5f8:	mov	w0, #0x0                   	// #0
     5fc:	ldp	x21, x22, [sp, #32]
     600:	ldp	x29, x30, [sp], #48
     604:	ret

0000000000000608 <grub_png_read_dynamic_block>:
     608:	stp	x29, x30, [sp, #-80]!
     60c:	adrp	x1, 0 <grub_png_output_byte>
     610:	mov	x29, sp
     614:	stp	x21, x22, [sp, #32]
     618:	ldr	x21, [x1]
     61c:	stp	x25, x26, [sp, #64]
     620:	mov	x25, x0
     624:	ldr	w0, [x21]
     628:	cbnz	w0, 740 <grub_png_read_dynamic_block+0x138>
     62c:	add	x22, x25, #0x950
     630:	stp	x19, x20, [sp, #16]
     634:	mov	w20, #0x7fff                	// #32767
     638:	stp	x23, x24, [sp, #48]
     63c:	adrp	x23, 0 <grub_png_output_byte>
     640:	b	680 <grub_png_read_dynamic_block+0x78>
     644:	add	x19, x25, #0x8, lsl #12
     648:	and	w2, w0, #0xff
     64c:	mov	w1, w2
     650:	mov	x0, x25
     654:	ldrsw	x3, [x19, #2448]
     658:	add	x3, x25, x3
     65c:	strb	w2, [x3, #2448]
     660:	bl	0 <grub_png_output_byte>
     664:	ldr	w0, [x19, #2448]
     668:	add	w0, w0, #0x1
     66c:	cmp	w0, w20
     670:	csel	w0, w0, wzr, le
     674:	str	w0, [x19, #2448]
     678:	ldr	w0, [x21]
     67c:	cbnz	w0, 738 <grub_png_read_dynamic_block+0x130>
     680:	mov	x1, x22
     684:	mov	x0, x25
     688:	bl	568 <grub_png_get_huff_code>
     68c:	cmp	w0, #0xff
     690:	b.le	644 <grub_png_read_dynamic_block+0x3c>
     694:	cmp	w0, #0x100
     698:	b.eq	78c <grub_png_read_dynamic_block+0x184>  // b.none
     69c:	ldr	x24, [x23]
     6a0:	sub	w0, w0, #0x101
     6a4:	add	x1, x24, #0x80
     6a8:	ldr	w19, [x24, w0, sxtw #2]
     6ac:	ldrb	w1, [x1, w0, sxtw]
     6b0:	cbnz	w1, 750 <grub_png_read_dynamic_block+0x148>
     6b4:	add	x1, x25, #0x970
     6b8:	mov	x0, x25
     6bc:	bl	568 <grub_png_get_huff_code>
     6c0:	add	x1, x24, #0x118
     6c4:	add	x24, x24, #0xa0
     6c8:	ldrb	w1, [x1, w0, sxtw]
     6cc:	ldr	w24, [x24, w0, sxtw #2]
     6d0:	cbnz	w1, 77c <grub_png_read_dynamic_block+0x174>
     6d4:	add	x26, x25, #0x8, lsl #12
     6d8:	ldr	w1, [x26, #2448]
     6dc:	subs	w24, w1, w24
     6e0:	add	w0, w24, #0x8, lsl #12
     6e4:	csel	w24, w0, w24, mi  // mi = first
     6e8:	cmp	w19, #0x0
     6ec:	b.le	678 <grub_png_read_dynamic_block+0x70>
     6f0:	add	x3, x25, w24, sxtw
     6f4:	add	x2, x25, w1, sxtw
     6f8:	mov	x0, x25
     6fc:	add	w24, w24, #0x1
     700:	ldrb	w1, [x3, #2448]
     704:	strb	w1, [x2, #2448]
     708:	bl	0 <grub_png_output_byte>
     70c:	ldr	w1, [x26, #2448]
     710:	add	w1, w1, #0x1
     714:	cmp	w1, w20
     718:	csel	w1, w1, wzr, le
     71c:	str	w1, [x26, #2448]
     720:	cmp	w24, w20
     724:	csel	w24, w24, wzr, le
     728:	subs	w19, w19, #0x1
     72c:	b.ne	6f0 <grub_png_read_dynamic_block+0xe8>  // b.any
     730:	ldr	w0, [x21]
     734:	cbz	w0, 680 <grub_png_read_dynamic_block+0x78>
     738:	ldp	x19, x20, [sp, #16]
     73c:	ldp	x23, x24, [sp, #48]
     740:	ldp	x21, x22, [sp, #32]
     744:	ldp	x25, x26, [sp, #64]
     748:	ldp	x29, x30, [sp], #80
     74c:	ret
     750:	mov	x0, x25
     754:	bl	450 <grub_png_get_bits>
     758:	add	x1, x25, #0x970
     75c:	add	w19, w19, w0
     760:	mov	x0, x25
     764:	bl	568 <grub_png_get_huff_code>
     768:	add	x1, x24, #0x118
     76c:	add	x24, x24, #0xa0
     770:	ldrb	w1, [x1, w0, sxtw]
     774:	ldr	w24, [x24, w0, sxtw #2]
     778:	cbz	w1, 6d4 <grub_png_read_dynamic_block+0xcc>
     77c:	mov	x0, x25
     780:	bl	450 <grub_png_get_bits>
     784:	add	w24, w24, w0
     788:	b	6d4 <grub_png_read_dynamic_block+0xcc>
     78c:	ldr	w0, [x21]
     790:	ldp	x19, x20, [sp, #16]
     794:	ldp	x21, x22, [sp, #32]
     798:	ldp	x23, x24, [sp, #48]
     79c:	ldp	x25, x26, [sp, #64]
     7a0:	ldp	x29, x30, [sp], #80
     7a4:	ret
	...

00000000000007b8 <grub_png_insert_huff_item.part.0>:
     7b8:	ldr	w7, [x0, #28]
     7bc:	cmp	w7, w2
     7c0:	b.lt	848 <grub_png_insert_huff_item.part.0+0x90>  // b.tstop
     7c4:	sxtw	x3, w2
     7c8:	mov	w5, #0x0                   	// #0
     7cc:	ldp	x6, x8, [x0]
     7d0:	b.le	818 <grub_png_insert_huff_item.part.0+0x60>
     7d4:	nop
     7d8:	ldr	w4, [x8, x3, lsl #2]
     7dc:	add	x3, x3, #0x1
     7e0:	cmp	w7, w3
     7e4:	add	w5, w5, w4
     7e8:	b.gt	7d8 <grub_png_insert_huff_item.part.0+0x20>
     7ec:	cmp	w5, #0x0
     7f0:	b.le	818 <grub_png_insert_huff_item.part.0+0x60>
     7f4:	mov	w4, #0x0                   	// #0
     7f8:	ldr	w3, [x0, #24]
     7fc:	sub	w3, w3, w4
     800:	add	w4, w4, #0x1
     804:	cmp	w5, w4
     808:	add	x7, x6, w3, sxtw #2
     80c:	ldur	w7, [x7, #-4]
     810:	str	w7, [x6, w3, sxtw #2]
     814:	b.ne	7f8 <grub_png_insert_huff_item.part.0+0x40>  // b.any
     818:	ldr	w3, [x0, #24]
     81c:	mov	x4, #0xfffffffffffffffc    	// #-4
     820:	add	x2, x4, w2, sxtw #2
     824:	sub	w5, w3, w5
     828:	str	w1, [x6, w5, sxtw #2]
     82c:	ldr	w1, [x0, #24]
     830:	add	w1, w1, #0x1
     834:	str	w1, [x0, #24]
     838:	ldr	w0, [x8, x2]
     83c:	add	w0, w0, #0x1
     840:	str	w0, [x8, x2]
     844:	ret
     848:	adrp	x1, 0 <grub_png_output_byte>
     84c:	mov	w0, #0x4                   	// #4
     850:	ldr	x1, [x1]
     854:	b	0 <grub_error>
	...

0000000000000860 <grub_video_reader_png>:
     860:	stp	x29, x30, [sp, #-352]!
     864:	mov	x2, #0x0                   	// #0
     868:	mov	x29, sp
     86c:	stp	x21, x22, [sp, #32]
     870:	mov	x21, x0
     874:	mov	x0, x1
     878:	mov	w1, #0x31                  	// #49
     87c:	bl	0 <grub_buffile_open>
     880:	cbz	x0, 91c <grub_video_reader_png+0xbc>
     884:	stp	x19, x20, [sp, #16]
     888:	mov	x20, x0
     88c:	mov	x0, #0x89b0                	// #35248
     890:	stp	x23, x24, [sp, #48]
     894:	bl	0 <grub_zalloc>
     898:	mov	x19, x0
     89c:	cbz	x0, 8fc <grub_video_reader_png+0x9c>
     8a0:	stp	x20, x21, [x19]
     8a4:	add	x1, sp, #0x90
     8a8:	mov	x0, x20
     8ac:	mov	x2, #0x8                   	// #8
     8b0:	bl	0 <grub_file_read>
     8b4:	cmp	x0, #0x8
     8b8:	b.eq	934 <grub_video_reader_png+0xd4>  // b.none
     8bc:	adrp	x1, 0 <grub_png_output_byte>
     8c0:	ldr	x0, [x19, #72]
     8c4:	ldr	x23, [x1]
     8c8:	bl	0 <grub_free>
     8cc:	mov	x0, x19
     8d0:	bl	0 <grub_free>
     8d4:	ldr	w0, [x23]
     8d8:	cbnz	w0, 90c <grub_video_reader_png+0xac>
     8dc:	mov	x0, x20
     8e0:	bl	0 <grub_file_close>
     8e4:	ldr	w0, [x23]
     8e8:	ldp	x19, x20, [sp, #16]
     8ec:	ldp	x21, x22, [sp, #32]
     8f0:	ldp	x23, x24, [sp, #48]
     8f4:	ldp	x29, x30, [sp], #352
     8f8:	ret
     8fc:	adrp	x0, 0 <grub_png_output_byte>
     900:	ldr	x23, [x0]
     904:	ldr	w0, [x23]
     908:	cbz	w0, 8dc <grub_video_reader_png+0x7c>
     90c:	ldr	x0, [x21]
     910:	bl	0 <grub_video_bitmap_destroy>
     914:	str	xzr, [x21]
     918:	b	8dc <grub_video_reader_png+0x7c>
     91c:	adrp	x0, 0 <grub_png_output_byte>
     920:	ldp	x21, x22, [sp, #32]
     924:	ldr	x0, [x0]
     928:	ldr	w0, [x0]
     92c:	ldp	x29, x30, [sp], #352
     930:	ret
     934:	adrp	x1, 0 <grub_png_output_byte>
     938:	mov	x2, x0
     93c:	add	x0, sp, #0x90
     940:	ldr	x1, [x1]
     944:	str	x1, [sp, #120]
     948:	add	x1, x1, #0x138
     94c:	bl	0 <grub_memcmp>
     950:	cbnz	w0, 1078 <grub_video_reader_png+0x818>
     954:	adrp	x1, 0 <grub_png_output_byte>
     958:	stp	x25, x26, [sp, #64]
     95c:	ldr	x23, [x1]
     960:	ldr	x0, [x19]
     964:	add	x1, sp, #0x110
     968:	mov	x2, #0x4                   	// #4
     96c:	str	wzr, [sp, #272]
     970:	bl	0 <grub_file_read>
     974:	ldr	w24, [sp, #272]
     978:	ldr	x0, [x19]
     97c:	add	x1, sp, #0x110
     980:	mov	x2, #0x4                   	// #4
     984:	str	wzr, [sp, #272]
     988:	rev	w24, w24
     98c:	bl	0 <grub_file_read>
     990:	ldr	x0, [x19]
     994:	mov	w2, #0x4452                	// #17490
     998:	ldr	w1, [sp, #272]
     99c:	movk	w2, #0x4948, lsl #16
     9a0:	ldr	x3, [x0, #24]
     9a4:	rev	w1, w1
     9a8:	cmp	w1, w2
     9ac:	add	w2, w3, #0x4
     9b0:	add	w2, w2, w24
     9b4:	str	w2, [x19, #24]
     9b8:	b.eq	b40 <grub_video_reader_png+0x2e0>  // b.none
     9bc:	b.hi	a6c <grub_video_reader_png+0x20c>  // b.pmore
     9c0:	mov	w2, #0x4154                	// #16724
     9c4:	movk	w2, #0x4944, lsl #16
     9c8:	cmp	w1, w2
     9cc:	b.eq	bac <grub_video_reader_png+0x34c>  // b.none
     9d0:	mov	w2, #0x4e44                	// #20036
     9d4:	movk	w2, #0x4945, lsl #16
     9d8:	cmp	w1, w2
     9dc:	b.ne	b9c <grub_video_reader_png+0x33c>  // b.any
     9e0:	ldr	x0, [x19, #72]
     9e4:	cbz	x0, c34 <grub_video_reader_png+0x3d4>
     9e8:	ldr	x3, [x19, #8]
     9ec:	ldr	w2, [x19, #40]
     9f0:	ldr	w1, [x19, #64]
     9f4:	ldr	x3, [x3]
     9f8:	add	x24, x0, w2, sxtw
     9fc:	cmp	w1, #0x4
     a00:	ldr	x25, [x3, #80]
     a04:	b.le	108c <grub_video_reader_png+0x82c>
     a08:	ldr	w1, [x19, #56]
     a0c:	cbnz	w1, 13d8 <grub_video_reader_png+0xb78>
     a10:	ldr	w1, [x19, #48]
     a14:	ldr	w3, [x19, #36]
     a18:	cbnz	w1, 151c <grub_video_reader_png+0xcbc>
     a1c:	ldp	w4, w2, [x19, #28]
     a20:	mov	x1, #0x0                   	// #0
     a24:	mul	w2, w2, w4
     a28:	mul	w2, w2, w3
     a2c:	cmp	wzr, w2, lsr #1
     a30:	b.eq	c34 <grub_video_reader_png+0x3d4>  // b.none
     a34:	nop
     a38:	lsl	x0, x1, #1
     a3c:	ldrb	w0, [x24, x0]
     a40:	strb	w0, [x25, x1]
     a44:	add	x1, x1, #0x1
     a48:	ldp	w0, w3, [x19, #28]
     a4c:	ldr	w2, [x19, #36]
     a50:	mul	w0, w0, w3
     a54:	mul	w0, w0, w2
     a58:	cmp	w1, w0, lsr #1
     a5c:	b.cc	a38 <grub_video_reader_png+0x1d8>  // b.lo, b.ul, b.last
     a60:	ldp	x25, x26, [sp, #64]
     a64:	ldr	x0, [x19, #72]
     a68:	b	8c8 <grub_video_reader_png+0x68>
     a6c:	mov	w2, #0x5445                	// #21573
     a70:	movk	w2, #0x504c, lsl #16
     a74:	cmp	w1, w2
     a78:	b.ne	b9c <grub_video_reader_png+0x33c>  // b.any
     a7c:	cbz	w24, b10 <grub_video_reader_png+0x2b0>
     a80:	add	x22, x19, #0x650
     a84:	mov	w26, #0x3                   	// #3
     a88:	mov	w25, #0x0                   	// #0
     a8c:	stp	x27, x28, [sp, #80]
     a90:	mov	x0, x19
     a94:	bl	300 <grub_png_get_byte>
     a98:	strb	w0, [x22]
     a9c:	mov	x0, x19
     aa0:	add	w25, w25, #0x1
     aa4:	bl	300 <grub_png_get_byte>
     aa8:	strb	w0, [x22, #1]
     aac:	mov	x0, x19
     ab0:	mov	w27, w26
     ab4:	bl	300 <grub_png_get_byte>
     ab8:	strb	w0, [x22, #2]
     abc:	cmp	w24, w26
     ac0:	add	x22, x22, #0x3
     ac4:	cset	w0, hi  // hi = pmore
     ac8:	cmp	w25, #0x100
     acc:	csel	w0, w0, wzr, ne  // ne = any
     ad0:	add	w26, w26, #0x3
     ad4:	cbnz	w0, a90 <grub_video_reader_png+0x230>
     ad8:	cmp	w24, w27
     adc:	b.ls	af4 <grub_video_reader_png+0x294>  // b.plast
     ae0:	add	w27, w27, #0x1
     ae4:	mov	x0, x19
     ae8:	bl	300 <grub_png_get_byte>
     aec:	cmp	w24, w27
     af0:	b.ne	ae0 <grub_video_reader_png+0x280>  // b.any
     af4:	ldr	x0, [x19]
     af8:	add	x1, sp, #0x110
     afc:	mov	x2, #0x4                   	// #4
     b00:	str	wzr, [sp, #272]
     b04:	bl	0 <grub_file_read>
     b08:	ldp	x27, x28, [sp, #80]
     b0c:	nop
     b10:	ldr	w0, [x23]
     b14:	cbnz	w0, a60 <grub_video_reader_png+0x200>
     b18:	ldr	x0, [x19]
     b1c:	ldr	w1, [x19, #24]
     b20:	ldr	x2, [x0, #24]
     b24:	cmp	x2, x1
     b28:	b.eq	964 <grub_video_reader_png+0x104>  // b.none
     b2c:	adrp	x1, 0 <grub_png_output_byte>
     b30:	mov	w0, #0x4                   	// #4
     b34:	ldr	x1, [x1]
     b38:	bl	0 <grub_error>
     b3c:	b	a60 <grub_video_reader_png+0x200>
     b40:	add	x1, sp, #0x110
     b44:	mov	x2, #0x4                   	// #4
     b48:	str	wzr, [sp, #272]
     b4c:	bl	0 <grub_file_read>
     b50:	ldr	w1, [sp, #272]
     b54:	mov	x2, #0x4                   	// #4
     b58:	ldr	x0, [x19]
     b5c:	rev	w1, w1
     b60:	str	w1, [x19, #28]
     b64:	add	x1, sp, #0x110
     b68:	str	wzr, [sp, #272]
     b6c:	bl	0 <grub_file_read>
     b70:	ldr	w0, [sp, #272]
     b74:	rev	w0, w0
     b78:	str	w0, [x19, #32]
     b7c:	cbz	w0, b88 <grub_video_reader_png+0x328>
     b80:	ldr	w0, [x19, #28]
     b84:	cbnz	w0, c3c <grub_video_reader_png+0x3dc>
     b88:	adrp	x1, 0 <grub_png_output_byte>
     b8c:	mov	w0, #0x4                   	// #4
     b90:	ldr	x1, [x1]
     b94:	bl	0 <grub_error>
     b98:	b	b10 <grub_video_reader_png+0x2b0>
     b9c:	add	x1, x3, #0x4
     ba0:	add	x1, x1, w24, uxtw
     ba4:	bl	0 <grub_file_seek>
     ba8:	b	b10 <grub_video_reader_png+0x2b0>
     bac:	mov	w0, #0x1                   	// #1
     bb0:	str	wzr, [x19, #16]
     bb4:	stp	w0, w24, [x19, #80]
     bb8:	mov	x0, x19
     bbc:	bl	300 <grub_png_get_byte>
     bc0:	and	w22, w0, #0xff
     bc4:	and	w22, w22, #0xf
     bc8:	mov	x0, x19
     bcc:	bl	300 <grub_png_get_byte>
     bd0:	and	w0, w0, #0xff
     bd4:	cmp	w22, #0x8
     bd8:	b.ne	1060 <grub_video_reader_png+0x800>  // b.any
     bdc:	tbnz	w0, #5, d98 <grub_video_reader_png+0x538>
     be0:	add	x26, sp, #0x98
     be4:	stp	x27, x28, [sp, #80]
     be8:	mov	w1, #0x1                   	// #1
     bec:	mov	x0, x19
     bf0:	bl	450 <grub_png_get_bits>
     bf4:	mov	w1, #0x2                   	// #2
     bf8:	str	w0, [sp, #108]
     bfc:	mov	x0, x19
     c00:	bl	450 <grub_png_get_bits>
     c04:	cmp	w0, #0x1
     c08:	b.eq	ed0 <grub_video_reader_png+0x670>  // b.none
     c0c:	cmp	w0, #0x2
     c10:	b.eq	e70 <grub_video_reader_png+0x610>  // b.none
     c14:	cbz	w0, dc4 <grub_video_reader_png+0x564>
     c18:	adrp	x1, 0 <grub_png_output_byte>
     c1c:	mov	w0, #0x4                   	// #4
     c20:	ldr	x1, [x1]
     c24:	bl	0 <grub_error>
     c28:	ldp	x27, x28, [sp, #80]
     c2c:	str	wzr, [x19, #80]
     c30:	b	b10 <grub_video_reader_png+0x2b0>
     c34:	ldp	x25, x26, [sp, #64]
     c38:	b	8c8 <grub_video_reader_png+0x68>
     c3c:	mov	x0, x19
     c40:	bl	300 <grub_png_get_byte>
     c44:	and	w22, w0, #0xff
     c48:	mov	x0, x19
     c4c:	cmp	w22, #0x10
     c50:	cset	w1, eq  // eq = none
     c54:	str	w1, [x19, #40]
     c58:	bl	300 <grub_png_get_byte>
     c5c:	and	w0, w0, #0xff
     c60:	ands	w1, w0, #0xfffffff9
     c64:	ccmp	w0, #0x3, #0x4, ne  // ne = any
     c68:	b.ne	145c <grub_video_reader_png+0xbfc>  // b.any
     c6c:	ldr	w2, [x19, #40]
     c70:	cmp	w0, #0x3
     c74:	b.eq	143c <grub_video_reader_png+0xbdc>  // b.none
     c78:	ldr	w1, [x19, #56]
     c7c:	cbz	w2, 1508 <grub_video_reader_png+0xca8>
     c80:	cbnz	w1, 145c <grub_video_reader_png+0xbfc>
     c84:	ands	w4, w0, #0x4
     c88:	mov	w3, #0x4                   	// #4
     c8c:	csinc	w3, w3, wzr, eq  // eq = none
     c90:	tbz	w0, #1, 15c8 <grub_video_reader_png+0xd68>
     c94:	mov	w0, #0x3                   	// #3
     c98:	mov	w1, #0x0                   	// #0
     c9c:	str	w0, [x19, #36]
     ca0:	sub	w0, w22, #0x8
     ca4:	mov	w2, #0xf7                  	// #247
     ca8:	tst	w0, w2
     cac:	b.eq	cc4 <grub_video_reader_png+0x464>  // b.none
     cb0:	cmp	w22, #0x4
     cb4:	b.ne	db0 <grub_video_reader_png+0x550>  // b.any
     cb8:	ldr	w0, [x19, #48]
     cbc:	orr	w1, w1, w0
     cc0:	cbz	w1, db0 <grub_video_reader_png+0x550>
     cc4:	cbz	w4, cd4 <grub_video_reader_png+0x474>
     cc8:	ldr	w0, [x19, #36]
     ccc:	add	w0, w0, #0x1
     cd0:	str	w0, [x19, #36]
     cd4:	ldp	w1, w2, [x19, #28]
     cd8:	ldr	x0, [x19, #8]
     cdc:	bl	0 <grub_video_bitmap_create>
     ce0:	cbnz	w0, b10 <grub_video_reader_png+0x2b0>
     ce4:	ldp	w1, w2, [x19, #36]
     ce8:	ldr	w0, [x19, #28]
     cec:	cbz	w2, 1578 <grub_video_reader_png+0xd18>
     cf0:	lsl	w1, w1, #1
     cf4:	str	w1, [x19, #36]
     cf8:	str	w22, [x19, #64]
     cfc:	cmp	w22, #0x4
     d00:	b.gt	1668 <grub_video_reader_png+0xe08>
     d04:	mul	w0, w22, w0
     d08:	add	w0, w0, #0x7
     d0c:	lsr	w0, w0, #3
     d10:	str	w0, [x19, #60]
     d14:	ldr	w1, [x19, #32]
     d18:	mul	w0, w0, w1
     d1c:	bl	0 <grub_malloc>
     d20:	str	x0, [x19, #72]
     d24:	ldr	w1, [x23]
     d28:	cbnz	w1, c34 <grub_video_reader_png+0x3d4>
     d2c:	add	x2, x19, #0x8, lsl #12
     d30:	str	x0, [x2, #2456]
     d34:	ldr	w1, [x19, #32]
     d38:	mov	w3, #0x1                   	// #1
     d3c:	ldr	w4, [x19, #60]
     d40:	mov	x0, x19
     d44:	madd	w1, w4, w1, w1
     d48:	str	w1, [x19, #44]
     d4c:	str	wzr, [x2, #2464]
     d50:	str	w3, [x2, #2472]
     d54:	bl	300 <grub_png_get_byte>
     d58:	tst	w0, #0xff
     d5c:	b.ne	1674 <grub_video_reader_png+0xe14>  // b.any
     d60:	mov	x0, x19
     d64:	bl	300 <grub_png_get_byte>
     d68:	tst	w0, #0xff
     d6c:	b.ne	1688 <grub_video_reader_png+0xe28>  // b.any
     d70:	mov	x0, x19
     d74:	bl	300 <grub_png_get_byte>
     d78:	tst	w0, #0xff
     d7c:	b.ne	1744 <grub_video_reader_png+0xee4>  // b.any
     d80:	ldr	x0, [x19]
     d84:	add	x1, sp, #0x110
     d88:	mov	x2, #0x4                   	// #4
     d8c:	str	wzr, [sp, #272]
     d90:	bl	0 <grub_file_read>
     d94:	b	b10 <grub_video_reader_png+0x2b0>
     d98:	adrp	x1, 0 <grub_png_output_byte>
     d9c:	mov	w0, #0x4                   	// #4
     da0:	ldr	x1, [x1]
     da4:	bl	0 <grub_error>
     da8:	str	wzr, [x19, #80]
     dac:	b	b10 <grub_video_reader_png+0x2b0>
     db0:	adrp	x1, 0 <grub_png_output_byte>
     db4:	mov	w0, #0x4                   	// #4
     db8:	ldr	x1, [x1]
     dbc:	bl	0 <grub_error>
     dc0:	b	b10 <grub_video_reader_png+0x2b0>
     dc4:	str	wzr, [x19, #16]
     dc8:	mov	x0, x19
     dcc:	bl	300 <grub_png_get_byte>
     dd0:	and	w25, w0, #0xff
     dd4:	mov	x0, x19
     dd8:	bl	300 <grub_png_get_byte>
     ddc:	mov	w1, w0
     de0:	mov	x0, x19
     de4:	ubfiz	w1, w1, #8, #8
     de8:	add	w25, w25, w1
     dec:	and	w25, w25, #0xffff
     df0:	bl	300 <grub_png_get_byte>
     df4:	mov	x0, x19
     df8:	bl	300 <grub_png_get_byte>
     dfc:	cbz	w25, e2c <grub_video_reader_png+0x5cc>
     e00:	mov	w22, #0x0                   	// #0
     e04:	nop
     e08:	mov	x0, x19
     e0c:	bl	300 <grub_png_get_byte>
     e10:	mov	w1, w0
     e14:	mov	x0, x19
     e18:	bl	0 <grub_png_output_byte>
     e1c:	add	w0, w22, #0x1
     e20:	and	w22, w0, #0xffff
     e24:	cmp	w25, w0, uxth
     e28:	b.ne	e08 <grub_video_reader_png+0x5a8>  // b.any
     e2c:	ldr	w0, [x23]
     e30:	ldr	w1, [sp, #108]
     e34:	orr	w24, w1, w0
     e38:	cbz	w24, be8 <grub_video_reader_png+0x388>
     e3c:	ldr	x0, [x19]
     e40:	add	x1, sp, #0x110
     e44:	mov	x2, #0x4                   	// #4
     e48:	str	wzr, [sp, #272]
     e4c:	bl	0 <grub_file_read>
     e50:	ldr	x0, [x19]
     e54:	add	x1, sp, #0x110
     e58:	mov	x2, #0x4                   	// #4
     e5c:	str	wzr, [sp, #272]
     e60:	bl	0 <grub_file_read>
     e64:	ldp	x27, x28, [sp, #80]
     e68:	str	wzr, [x19, #80]
     e6c:	b	b10 <grub_video_reader_png+0x2b0>
     e70:	mov	w1, #0x5                   	// #5
     e74:	mov	x0, x19
     e78:	bl	450 <grub_png_get_bits>
     e7c:	add	w25, w0, #0x101
     e80:	mov	w1, #0x5                   	// #5
     e84:	mov	x0, x19
     e88:	bl	450 <grub_png_get_bits>
     e8c:	add	w24, w0, #0x1
     e90:	mov	w1, #0x4                   	// #4
     e94:	mov	x0, x19
     e98:	str	w24, [sp, #112]
     e9c:	bl	450 <grub_png_get_bits>
     ea0:	cmp	w25, #0x120
     ea4:	add	w22, w0, #0x4
     ea8:	ccmp	w24, #0x1e, #0x0, le
     eac:	ccmp	w22, #0x13, #0x0, le
     eb0:	b.le	11ac <grub_video_reader_png+0x94c>
     eb4:	adrp	x1, 0 <grub_png_output_byte>
     eb8:	mov	w0, #0x4                   	// #4
     ebc:	ldr	x1, [x1]
     ec0:	bl	0 <grub_error>
     ec4:	mov	x0, x19
     ec8:	bl	608 <grub_png_read_dynamic_block>
     ecc:	b	e2c <grub_video_reader_png+0x5cc>
     ed0:	add	x22, x19, #0x950
     ed4:	add	x0, x19, #0x58
     ed8:	str	x0, [x19, #2384]
     edc:	add	x2, x19, #0x518
     ee0:	add	x0, x19, #0x4d8
     ee4:	mov	x1, #0x1000000000          	// #68719476736
     ee8:	stp	x0, x2, [x22, #8]
     eec:	mov	w25, #0x0                   	// #0
     ef0:	mov	x2, #0x40                  	// #64
     ef4:	str	x1, [x19, #2408]
     ef8:	mov	w1, #0x0                   	// #0
     efc:	bl	0 <grub_memset>
     f00:	mov	w1, w25
     f04:	mov	x0, x22
     f08:	add	w25, w25, #0x1
     f0c:	mov	w2, #0x8                   	// #8
     f10:	bl	7b8 <grub_png_insert_huff_item.part.0>
     f14:	cmp	w25, #0x90
     f18:	b.ne	f00 <grub_video_reader_png+0x6a0>  // b.any
     f1c:	nop
     f20:	mov	w1, w25
     f24:	mov	x0, x22
     f28:	add	w25, w25, #0x1
     f2c:	mov	w2, #0x9                   	// #9
     f30:	bl	7b8 <grub_png_insert_huff_item.part.0>
     f34:	cmp	w25, #0x100
     f38:	b.ne	f20 <grub_video_reader_png+0x6c0>  // b.any
     f3c:	nop
     f40:	mov	w1, w25
     f44:	mov	x0, x22
     f48:	add	w25, w25, #0x1
     f4c:	mov	w2, #0x7                   	// #7
     f50:	bl	7b8 <grub_png_insert_huff_item.part.0>
     f54:	cmp	w25, #0x118
     f58:	b.ne	f40 <grub_video_reader_png+0x6e0>  // b.any
     f5c:	nop
     f60:	mov	w1, w25
     f64:	mov	x0, x22
     f68:	add	w25, w25, #0x1
     f6c:	mov	w2, #0x8                   	// #8
     f70:	bl	7b8 <grub_png_insert_huff_item.part.0>
     f74:	cmp	w25, #0x120
     f78:	b.ne	f60 <grub_video_reader_png+0x700>  // b.any
     f7c:	ldr	w0, [x22, #28]
     f80:	cmp	w0, #0x0
     f84:	b.le	fc4 <grub_video_reader_png+0x764>
     f88:	ldp	x5, x6, [x22, #8]
     f8c:	mov	w3, #0x0                   	// #0
     f90:	mov	w1, #0x0                   	// #0
     f94:	mov	x0, #0x0                   	// #0
     f98:	ldr	w4, [x5, x0, lsl #2]
     f9c:	sub	w2, w3, w1
     fa0:	add	w1, w4, w1
     fa4:	str	w1, [x5, x0, lsl #2]
     fa8:	str	w2, [x6, x0, lsl #2]
     fac:	add	x0, x0, #0x1
     fb0:	lsl	w1, w1, #1
     fb4:	add	w3, w3, w4
     fb8:	ldr	w2, [x22, #28]
     fbc:	cmp	w2, w0
     fc0:	b.gt	f98 <grub_video_reader_png+0x738>
     fc4:	add	x28, x19, #0x970
     fc8:	add	x0, x19, #0x558
     fcc:	str	x0, [x19, #2416]
     fd0:	add	x2, x19, #0x610
     fd4:	add	x0, x19, #0x5d0
     fd8:	mov	x1, #0x1000000000          	// #68719476736
     fdc:	stp	x0, x2, [x28, #8]
     fe0:	mov	w22, #0x0                   	// #0
     fe4:	mov	x2, #0x40                  	// #64
     fe8:	str	x1, [x19, #2440]
     fec:	mov	w1, #0x0                   	// #0
     ff0:	bl	0 <grub_memset>
     ff4:	nop
     ff8:	mov	w1, w22
     ffc:	mov	x0, x28
    1000:	add	w22, w22, #0x1
    1004:	mov	w2, #0x5                   	// #5
    1008:	bl	7b8 <grub_png_insert_huff_item.part.0>
    100c:	cmp	w22, #0x1e
    1010:	b.ne	ff8 <grub_video_reader_png+0x798>  // b.any
    1014:	ldr	w0, [x28, #28]
    1018:	cmp	w0, #0x0
    101c:	b.le	ec4 <grub_video_reader_png+0x664>
    1020:	ldp	x6, x7, [x28, #8]
    1024:	mov	w4, #0x0                   	// #0
    1028:	mov	w1, #0x0                   	// #0
    102c:	mov	x0, #0x0                   	// #0
    1030:	ldr	w5, [x6, x0, lsl #2]
    1034:	sub	w2, w4, w1
    1038:	add	w1, w5, w1
    103c:	str	w1, [x6, x0, lsl #2]
    1040:	str	w2, [x7, x0, lsl #2]
    1044:	add	x0, x0, #0x1
    1048:	lsl	w1, w1, #1
    104c:	add	w4, w4, w5
    1050:	ldr	w2, [x28, #28]
    1054:	cmp	w2, w0
    1058:	b.gt	1030 <grub_video_reader_png+0x7d0>
    105c:	b	ec4 <grub_video_reader_png+0x664>
    1060:	adrp	x1, 0 <grub_png_output_byte>
    1064:	mov	w0, #0x4                   	// #4
    1068:	ldr	x1, [x1]
    106c:	bl	0 <grub_error>
    1070:	str	wzr, [x19, #80]
    1074:	b	b10 <grub_video_reader_png+0x2b0>
    1078:	adrp	x1, 0 <grub_png_output_byte>
    107c:	mov	w0, #0x4                   	// #4
    1080:	ldr	x1, [x1]
    1084:	bl	0 <grub_error>
    1088:	b	8bc <grub_video_reader_png+0x5c>
    108c:	ldr	w2, [x19, #48]
    1090:	mov	w0, #0x1                   	// #1
    1094:	lsl	w0, w0, w1
    1098:	sub	w22, w0, #0x1
    109c:	cbz	w2, 1640 <grub_video_reader_png+0xde0>
    10a0:	adrp	x2, 0 <grub_png_output_byte>
    10a4:	ldr	x2, [x2]
    10a8:	ldr	w3, [x2]
    10ac:	ldrb	w2, [x2, #4]
    10b0:	str	w3, [sp, #240]
    10b4:	strb	w2, [sp, #244]
    10b8:	cbz	w0, 10f8 <grub_video_reader_png+0x898>
    10bc:	add	x2, sp, #0x113
    10c0:	mov	w3, #0x3                   	// #3
    10c4:	add	x4, sp, #0xf0
    10c8:	add	x0, sp, #0x110
    10cc:	umaddl	x3, w22, w3, x2
    10d0:	ldrb	w4, [x4, w1, sxtw]
    10d4:	mov	w1, #0x0                   	// #0
    10d8:	strb	w1, [x0]
    10dc:	add	w2, w4, w1
    10e0:	strb	w1, [x0, #1]
    10e4:	add	x0, x0, #0x3
    10e8:	sturb	w1, [x0, #-1]
    10ec:	and	w1, w2, #0xff
    10f0:	cmp	x3, x0
    10f4:	b.ne	10d8 <grub_video_reader_png+0x878>  // b.any
    10f8:	ldr	w3, [x19, #32]
    10fc:	cbz	w3, a60 <grub_video_reader_png+0x200>
    1100:	ldr	w4, [x19, #28]
    1104:	sxtb	w6, w22
    1108:	ldr	w0, [x19, #64]
    110c:	mov	w7, #0x0                   	// #0
    1110:	mov	w8, #0x8                   	// #8
    1114:	nop
    1118:	sub	w2, w8, w0
    111c:	cbz	w4, 1194 <grub_video_reader_png+0x934>
    1120:	mov	x1, x25
    1124:	mov	x5, x24
    1128:	mov	w3, #0x0                   	// #0
    112c:	nop
    1130:	ldrb	w0, [x5]
    1134:	add	w3, w3, #0x1
    1138:	add	x1, x1, #0x3
    113c:	asr	w0, w0, w2
    1140:	and	w0, w6, w0
    1144:	ubfiz	x4, x0, #1, #8
    1148:	add	x0, x4, w0, uxtb
    114c:	add	x0, x19, x0
    1150:	ldrb	w4, [x0, #1618]
    1154:	sturb	w4, [x1, #-1]
    1158:	ldrb	w4, [x0, #1617]
    115c:	sturb	w4, [x1, #-2]
    1160:	ldrb	w0, [x0, #1616]
    1164:	sturb	w0, [x1, #-3]
    1168:	ldr	w0, [x19, #64]
    116c:	subs	w2, w2, w0
    1170:	b.pl	117c <grub_video_reader_png+0x91c>  // b.nfrst
    1174:	add	x5, x5, #0x1
    1178:	add	w2, w2, #0x8
    117c:	ldr	w4, [x19, #28]
    1180:	cmp	w3, w4
    1184:	b.cc	1130 <grub_video_reader_png+0x8d0>  // b.lo, b.ul, b.last
    1188:	add	w1, w4, w4, lsl #1
    118c:	ldr	w3, [x19, #32]
    1190:	add	x25, x25, x1
    1194:	ldrsw	x1, [x19, #60]
    1198:	add	w7, w7, #0x1
    119c:	cmp	w7, w3
    11a0:	add	x24, x24, x1
    11a4:	b.cc	1118 <grub_video_reader_png+0x8b8>  // b.lo, b.ul, b.last
    11a8:	b	a60 <grub_video_reader_png+0x200>
    11ac:	add	x4, sp, #0x110
    11b0:	str	x4, [sp, #176]
    11b4:	add	x4, sp, #0xf0
    11b8:	mov	x3, #0x800000000           	// #34359738368
    11bc:	add	x0, sp, #0xd0
    11c0:	mov	x2, #0x20                  	// #32
    11c4:	mov	w1, #0x0                   	// #0
    11c8:	str	x0, [sp, #184]
    11cc:	str	x4, [sp, #192]
    11d0:	str	x3, [sp, #200]
    11d4:	bl	0 <grub_memset>
    11d8:	cmp	w22, #0x0
    11dc:	b.le	1738 <grub_video_reader_png+0xed8>
    11e0:	ldr	x0, [sp, #120]
    11e4:	mov	x27, #0x0                   	// #0
    11e8:	add	x28, x0, #0x140
    11ec:	nop
    11f0:	mov	w1, #0x3                   	// #3
    11f4:	mov	x0, x19
    11f8:	bl	450 <grub_png_get_bits>
    11fc:	ldrb	w1, [x27, x28]
    1200:	add	x27, x27, #0x1
    1204:	cmp	w22, w27
    1208:	strb	w0, [x26, w1, sxtw]
    120c:	b.gt	11f0 <grub_video_reader_png+0x990>
    1210:	mov	w0, w22
    1214:	cmp	w22, #0x13
    1218:	b.eq	1248 <grub_video_reader_png+0x9e8>  // b.none
    121c:	ldrb	w1, [x28, w22, sxtw]
    1220:	ldr	x2, [sp, #120]
    1224:	add	w0, w0, #0x1
    1228:	add	x2, x2, #0x140
    122c:	sxtw	x0, w0
    1230:	b	123c <grub_video_reader_png+0x9dc>
    1234:	ldrb	w1, [x0, x2]
    1238:	add	x0, x0, #0x1
    123c:	strb	wzr, [x26, w1, sxtw]
    1240:	cmp	w0, #0x12
    1244:	b.le	1234 <grub_video_reader_png+0x9d4>
    1248:	mov	x28, x26
    124c:	mov	w22, #0x0                   	// #0
    1250:	ldrb	w2, [x28]
    1254:	mov	w1, w22
    1258:	add	x28, x28, #0x1
    125c:	add	w22, w22, #0x1
    1260:	add	x0, sp, #0xb0
    1264:	cbz	w2, 126c <grub_video_reader_png+0xa0c>
    1268:	bl	7b8 <grub_png_insert_huff_item.part.0>
    126c:	cmp	w22, #0x13
    1270:	b.ne	1250 <grub_video_reader_png+0x9f0>  // b.any
    1274:	ldr	w0, [sp, #204]
    1278:	cmp	w0, #0x0
    127c:	b.le	12bc <grub_video_reader_png+0xa5c>
    1280:	ldp	x5, x6, [sp, #184]
    1284:	mov	w3, #0x0                   	// #0
    1288:	mov	w1, #0x0                   	// #0
    128c:	mov	x0, #0x0                   	// #0
    1290:	ldr	w4, [x5, x0, lsl #2]
    1294:	sub	w2, w3, w1
    1298:	add	w1, w4, w1
    129c:	str	w1, [x5, x0, lsl #2]
    12a0:	str	w2, [x6, x0, lsl #2]
    12a4:	add	x0, x0, #0x1
    12a8:	lsl	w1, w1, #1
    12ac:	add	w3, w3, w4
    12b0:	ldr	w2, [sp, #204]
    12b4:	cmp	w2, w0
    12b8:	b.gt	1290 <grub_video_reader_png+0xa30>
    12bc:	add	x22, x19, #0x950
    12c0:	ldr	w3, [sp, #112]
    12c4:	add	x0, x19, #0x58
    12c8:	str	x0, [x19, #2384]
    12cc:	add	w3, w25, w3
    12d0:	add	x1, x19, #0x518
    12d4:	add	x0, x19, #0x4d8
    12d8:	stp	x0, x1, [x22, #8]
    12dc:	mov	x24, #0x1000000000          	// #68719476736
    12e0:	str	x24, [x19, #2408]
    12e4:	add	x28, x19, #0x970
    12e8:	mov	x2, #0x40                  	// #64
    12ec:	mov	w1, #0x0                   	// #0
    12f0:	str	w3, [sp, #132]
    12f4:	bl	0 <grub_memset>
    12f8:	add	x0, x19, #0x558
    12fc:	str	x0, [x19, #2416]
    1300:	add	x1, x19, #0x610
    1304:	add	x0, x19, #0x5d0
    1308:	stp	x0, x1, [x28, #8]
    130c:	mov	x2, #0x40                  	// #64
    1310:	mov	w1, #0x0                   	// #0
    1314:	str	x24, [x19, #2440]
    1318:	mov	w27, #0x0                   	// #0
    131c:	str	wzr, [sp, #128]
    1320:	bl	0 <grub_memset>
    1324:	ldr	w3, [sp, #132]
    1328:	cmp	w3, #0x0
    132c:	b.gt	137c <grub_video_reader_png+0xb1c>
    1330:	b	1470 <grub_video_reader_png+0xc10>
    1334:	sub	w24, w27, w25
    1338:	str	x28, [sp, #112]
    133c:	add	x1, sp, #0xb0
    1340:	mov	x0, x19
    1344:	bl	568 <grub_png_get_huff_code>
    1348:	mov	w2, w0
    134c:	cmp	w0, #0xf
    1350:	b.gt	1398 <grub_video_reader_png+0xb38>
    1354:	str	wzr, [sp, #128]
    1358:	add	w27, w27, #0x1
    135c:	cbz	w0, 1370 <grub_video_reader_png+0xb10>
    1360:	ldr	x0, [sp, #112]
    1364:	mov	w1, w24
    1368:	str	w2, [sp, #128]
    136c:	bl	7b8 <grub_png_insert_huff_item.part.0>
    1370:	ldr	w0, [sp, #132]
    1374:	cmp	w27, w0
    1378:	b.ge	1470 <grub_video_reader_png+0xc10>  // b.tcont
    137c:	ldr	w0, [x23]
    1380:	cbnz	w0, ec4 <grub_video_reader_png+0x664>
    1384:	cmp	w25, w27
    1388:	b.le	1334 <grub_video_reader_png+0xad4>
    138c:	mov	w24, w27
    1390:	str	x22, [sp, #112]
    1394:	b	133c <grub_video_reader_png+0xadc>
    1398:	cmp	w0, #0x10
    139c:	b.eq	15dc <grub_video_reader_png+0xd7c>  // b.none
    13a0:	cmp	w0, #0x11
    13a4:	b.eq	13c0 <grub_video_reader_png+0xb60>  // b.none
    13a8:	mov	x0, x19
    13ac:	mov	w1, #0x7                   	// #7
    13b0:	bl	450 <grub_png_get_bits>
    13b4:	add	w4, w27, w0
    13b8:	add	w27, w4, #0xb
    13bc:	b	1370 <grub_video_reader_png+0xb10>
    13c0:	mov	x0, x19
    13c4:	mov	w1, #0x3                   	// #3
    13c8:	bl	450 <grub_png_get_bits>
    13cc:	add	w4, w27, w0
    13d0:	add	w27, w4, #0x3
    13d4:	b	1370 <grub_video_reader_png+0xb10>
    13d8:	ldp	w1, w2, [x19, #28]
    13dc:	mul	w1, w1, w2
    13e0:	cbz	w1, c34 <grub_video_reader_png+0x3d4>
    13e4:	mov	w1, #0x0                   	// #0
    13e8:	ldrb	w0, [x24]
    13ec:	add	w1, w1, #0x1
    13f0:	add	x0, x0, x0, lsl #1
    13f4:	add	x0, x19, x0
    13f8:	ldrb	w0, [x0, #1618]
    13fc:	strb	w0, [x25, #2]
    1400:	ldrb	w0, [x24]
    1404:	add	x0, x0, x0, lsl #1
    1408:	add	x0, x19, x0
    140c:	ldrb	w0, [x0, #1617]
    1410:	strb	w0, [x25, #1]
    1414:	ldrb	w0, [x24], #1
    1418:	add	x0, x0, x0, lsl #1
    141c:	add	x0, x19, x0
    1420:	ldrb	w0, [x0, #1616]
    1424:	strb	w0, [x25], #3
    1428:	ldp	w0, w2, [x19, #28]
    142c:	mul	w0, w0, w2
    1430:	cmp	w1, w0
    1434:	b.cc	13e8 <grub_video_reader_png+0xb88>  // b.lo, b.ul, b.last
    1438:	b	a60 <grub_video_reader_png+0x200>
    143c:	mov	w1, #0x1                   	// #1
    1440:	str	w1, [x19, #56]
    1444:	mov	w4, #0x0                   	// #0
    1448:	mov	w3, #0x4                   	// #4
    144c:	cbnz	w2, 145c <grub_video_reader_png+0xbfc>
    1450:	mov	w0, #0x1                   	// #1
    1454:	str	w0, [x19, #36]
    1458:	b	ca0 <grub_video_reader_png+0x440>
    145c:	adrp	x1, 0 <grub_png_output_byte>
    1460:	mov	w0, #0x4                   	// #4
    1464:	ldr	x1, [x1]
    1468:	bl	0 <grub_error>
    146c:	b	b10 <grub_video_reader_png+0x2b0>
    1470:	ldr	w0, [x22, #28]
    1474:	cmp	w0, #0x0
    1478:	b.le	14bc <grub_video_reader_png+0xc5c>
    147c:	ldp	x6, x7, [x22, #8]
    1480:	mov	w4, #0x0                   	// #0
    1484:	mov	w1, #0x0                   	// #0
    1488:	mov	x0, #0x0                   	// #0
    148c:	nop
    1490:	ldr	w5, [x6, x0, lsl #2]
    1494:	sub	w2, w4, w1
    1498:	add	w1, w5, w1
    149c:	str	w1, [x6, x0, lsl #2]
    14a0:	str	w2, [x7, x0, lsl #2]
    14a4:	add	x0, x0, #0x1
    14a8:	lsl	w1, w1, #1
    14ac:	add	w4, w4, w5
    14b0:	ldr	w2, [x22, #28]
    14b4:	cmp	w2, w0
    14b8:	b.gt	1490 <grub_video_reader_png+0xc30>
    14bc:	ldr	w0, [x28, #28]
    14c0:	cmp	w0, #0x0
    14c4:	b.le	ec4 <grub_video_reader_png+0x664>
    14c8:	ldp	x6, x7, [x28, #8]
    14cc:	mov	w4, #0x0                   	// #0
    14d0:	mov	w1, #0x0                   	// #0
    14d4:	mov	x0, #0x0                   	// #0
    14d8:	ldr	w5, [x6, x0, lsl #2]
    14dc:	sub	w2, w4, w1
    14e0:	add	w1, w5, w1
    14e4:	str	w1, [x6, x0, lsl #2]
    14e8:	str	w2, [x7, x0, lsl #2]
    14ec:	add	x0, x0, #0x1
    14f0:	lsl	w1, w1, #1
    14f4:	add	w4, w4, w5
    14f8:	ldr	w2, [x28, #28]
    14fc:	cmp	w2, w0
    1500:	b.gt	14d8 <grub_video_reader_png+0xc78>
    1504:	b	ec4 <grub_video_reader_png+0x664>
    1508:	ands	w4, w0, #0x4
    150c:	mov	w3, #0x4                   	// #4
    1510:	csinc	w3, w3, wzr, eq  // eq = none
    1514:	cbnz	w1, 1450 <grub_video_reader_png+0xbf0>
    1518:	b	c90 <grub_video_reader_png+0x430>
    151c:	cmp	w3, #0x2
    1520:	b.eq	16ec <grub_video_reader_png+0xe8c>  // b.none
    1524:	cmp	w3, #0x4
    1528:	b.eq	169c <grub_video_reader_png+0xe3c>  // b.none
    152c:	cmp	w3, #0x1
    1530:	b.ne	c34 <grub_video_reader_png+0x3d4>  // b.any
    1534:	ldp	w2, w3, [x19, #28]
    1538:	mov	w1, #0x0                   	// #0
    153c:	mul	w2, w2, w3
    1540:	cbz	w2, c34 <grub_video_reader_png+0x3d4>
    1544:	nop
    1548:	ldrb	w0, [x24]
    154c:	add	w1, w1, #0x1
    1550:	strb	w0, [x25, #2]
    1554:	ldrb	w0, [x24]
    1558:	strb	w0, [x25, #1]
    155c:	ldrb	w0, [x24], #1
    1560:	strb	w0, [x25], #3
    1564:	ldp	w0, w2, [x19, #28]
    1568:	mul	w0, w0, w2
    156c:	cmp	w1, w0
    1570:	b.cc	1548 <grub_video_reader_png+0xce8>  // b.lo, b.ul, b.last
    1574:	b	a60 <grub_video_reader_png+0x200>
    1578:	str	w22, [x19, #64]
    157c:	cmp	w22, #0x4
    1580:	b.gt	165c <grub_video_reader_png+0xdfc>
    1584:	mul	w0, w22, w0
    1588:	add	w0, w0, #0x7
    158c:	lsr	w0, w0, #3
    1590:	str	w0, [x19, #60]
    1594:	ldr	w0, [x19, #48]
    1598:	cbnz	w0, 15c0 <grub_video_reader_png+0xd60>
    159c:	ldr	w0, [x19, #56]
    15a0:	cbnz	w0, 15c0 <grub_video_reader_png+0xd60>
    15a4:	ldr	x0, [x19, #8]
    15a8:	add	x2, x19, #0x8, lsl #12
    15ac:	ldr	x0, [x0]
    15b0:	ldr	x0, [x0, #80]
    15b4:	str	xzr, [x19, #72]
    15b8:	str	x0, [x2, #2456]
    15bc:	b	d34 <grub_video_reader_png+0x4d4>
    15c0:	ldr	w0, [x19, #60]
    15c4:	b	d14 <grub_video_reader_png+0x4b4>
    15c8:	mov	w0, #0x1                   	// #1
    15cc:	mov	w1, #0x0                   	// #0
    15d0:	str	w0, [x19, #36]
    15d4:	str	w0, [x19, #48]
    15d8:	b	ca0 <grub_video_reader_png+0x440>
    15dc:	mov	w1, #0x2                   	// #2
    15e0:	mov	x0, x19
    15e4:	bl	450 <grub_png_get_bits>
    15e8:	str	w0, [sp, #140]
    15ec:	mov	w1, w0
    15f0:	cmn	w0, #0x2
    15f4:	b.lt	1370 <grub_video_reader_png+0xb10>  // b.tstop
    15f8:	add	w0, w24, #0x3
    15fc:	add	w0, w0, w1
    1600:	str	w0, [sp, #136]
    1604:	nop
    1608:	ldr	w0, [sp, #128]
    160c:	mov	w1, w24
    1610:	add	w24, w24, #0x1
    1614:	cbz	w0, 1624 <grub_video_reader_png+0xdc4>
    1618:	mov	w2, w0
    161c:	ldr	x0, [sp, #112]
    1620:	bl	7b8 <grub_png_insert_huff_item.part.0>
    1624:	ldr	w0, [sp, #136]
    1628:	cmp	w24, w0
    162c:	b.ne	1608 <grub_video_reader_png+0xda8>  // b.any
    1630:	ldr	w0, [sp, #140]
    1634:	add	w4, w27, w0
    1638:	add	w27, w4, #0x3
    163c:	b	1370 <grub_video_reader_png+0xb10>
    1640:	mov	w2, #0x3                   	// #3
    1644:	add	x0, sp, #0x110
    1648:	lsl	w2, w2, w1
    164c:	add	x1, x19, #0x650
    1650:	sxtw	x2, w2
    1654:	bl	0 <grub_memmove>
    1658:	b	10f8 <grub_video_reader_png+0x898>
    165c:	mul	w0, w1, w0
    1660:	str	w0, [x19, #60]
    1664:	b	1594 <grub_video_reader_png+0xd34>
    1668:	mul	w0, w1, w0
    166c:	str	w0, [x19, #60]
    1670:	b	d14 <grub_video_reader_png+0x4b4>
    1674:	adrp	x1, 0 <grub_png_output_byte>
    1678:	mov	w0, #0x4                   	// #4
    167c:	ldr	x1, [x1]
    1680:	bl	0 <grub_error>
    1684:	b	b10 <grub_video_reader_png+0x2b0>
    1688:	adrp	x1, 0 <grub_png_output_byte>
    168c:	mov	w0, #0x4                   	// #4
    1690:	ldr	x1, [x1]
    1694:	bl	0 <grub_error>
    1698:	b	b10 <grub_video_reader_png+0x2b0>
    169c:	ldp	w3, w2, [x19, #28]
    16a0:	mov	w1, #0x0                   	// #0
    16a4:	mul	w2, w2, w3
    16a8:	cbz	w2, c34 <grub_video_reader_png+0x3d4>
    16ac:	nop
    16b0:	ldrb	w0, [x24, #3]
    16b4:	add	w1, w1, #0x1
    16b8:	strb	w0, [x25, #3]
    16bc:	add	x24, x24, #0x4
    16c0:	ldurb	w0, [x24, #-1]
    16c4:	strb	w0, [x25, #2]
    16c8:	ldurb	w0, [x24, #-1]
    16cc:	strb	w0, [x25, #1]
    16d0:	ldurb	w0, [x24, #-3]
    16d4:	strb	w0, [x25], #4
    16d8:	ldp	w0, w2, [x19, #28]
    16dc:	mul	w0, w0, w2
    16e0:	cmp	w1, w0
    16e4:	b.cc	16b0 <grub_video_reader_png+0xe50>  // b.lo, b.ul, b.last
    16e8:	b	a60 <grub_video_reader_png+0x200>
    16ec:	ldp	w1, w3, [x19, #28]
    16f0:	mul	w3, w3, w1
    16f4:	cbnz	w2, 1758 <grub_video_reader_png+0xef8>
    16f8:	mov	w1, #0x0                   	// #0
    16fc:	cbz	w3, c34 <grub_video_reader_png+0x3d4>
    1700:	ldrb	w0, [x24, #1]
    1704:	add	w1, w1, #0x1
    1708:	strb	w0, [x25, #3]
    170c:	ldrb	w0, [x24, #1]
    1710:	strb	w0, [x25, #2]
    1714:	ldrb	w0, [x24, #1]
    1718:	strb	w0, [x25, #1]
    171c:	ldrb	w0, [x24], #2
    1720:	strb	w0, [x25], #4
    1724:	ldp	w0, w2, [x19, #28]
    1728:	mul	w0, w0, w2
    172c:	cmp	w1, w0
    1730:	b.cc	1700 <grub_video_reader_png+0xea0>  // b.lo, b.ul, b.last
    1734:	b	a60 <grub_video_reader_png+0x200>
    1738:	mov	w0, #0x0                   	// #0
    173c:	mov	w1, #0x10                  	// #16
    1740:	b	1220 <grub_video_reader_png+0x9c0>
    1744:	adrp	x1, 0 <grub_png_output_byte>
    1748:	mov	w0, #0x4                   	// #4
    174c:	ldr	x1, [x1]
    1750:	bl	0 <grub_error>
    1754:	b	b10 <grub_video_reader_png+0x2b0>
    1758:	cbz	w3, c34 <grub_video_reader_png+0x3d4>
    175c:	mov	w1, #0x0                   	// #0
    1760:	ldrb	w0, [x24, #1]
    1764:	add	w1, w1, #0x1
    1768:	strb	w0, [x25, #2]
    176c:	add	x24, x24, #0x2
    1770:	ldurb	w0, [x24, #-1]
    1774:	strb	w0, [x25, #1]
    1778:	ldurb	w0, [x24, #-1]
    177c:	strb	w0, [x25], #4
    1780:	ldp	w0, w2, [x19, #28]
    1784:	mul	w0, w0, w2
    1788:	cmp	w1, w0
    178c:	b.cc	1760 <grub_video_reader_png+0xf00>  // b.lo, b.ul, b.last
    1790:	b	a60 <grub_video_reader_png+0x200>
    1794:	nop
	...

0000000000001810 <grub_mod_init>:
    1810:	adrp	x0, 0 <grub_png_output_byte>
    1814:	ldr	x0, [x0]
    1818:	b	0 <grub_video_bitmap_reader_register>
    181c:	nop
	...

0000000000001828 <grub_mod_fini>:
    1828:	adrp	x0, 0 <grub_png_output_byte>
    182c:	ldr	x0, [x0]
    1830:	b	0 <grub_video_bitmap_reader_unregister>
    1834:	nop
	...
