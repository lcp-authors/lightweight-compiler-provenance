
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libffi.so.7.1.0_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001968 <.init>:
    1968:	stp	x29, x30, [sp, #-16]!
    196c:	mov	x29, sp
    1970:	bl	1c40 <ffi_prep_java_raw_closure_loc@plt+0x10>
    1974:	ldp	x29, x30, [sp], #16
    1978:	ret

Disassembly of section .plt:

0000000000001980 <memcpy@plt-0x20>:
    1980:	stp	x16, x30, [sp, #-16]!
    1984:	adrp	x16, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    1988:	ldr	x17, [x16, #4088]
    198c:	add	x16, x16, #0xff8
    1990:	br	x17
    1994:	nop
    1998:	nop
    199c:	nop

00000000000019a0 <memcpy@plt>:
    19a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19a4:	ldr	x17, [x16]
    19a8:	add	x16, x16, #0x0
    19ac:	br	x17

00000000000019b0 <ffi_prep_closure_loc@plt>:
    19b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19b4:	ldr	x17, [x16, #8]
    19b8:	add	x16, x16, #0x8
    19bc:	br	x17

00000000000019c0 <strlen@plt>:
    19c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19c4:	ldr	x17, [x16, #16]
    19c8:	add	x16, x16, #0x10
    19cc:	br	x17

00000000000019d0 <ffi_java_raw_to_ptrarray@plt>:
    19d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19d4:	ldr	x17, [x16, #24]
    19d8:	add	x16, x16, #0x18
    19dc:	br	x17

00000000000019e0 <__cxa_finalize@plt>:
    19e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19e4:	ldr	x17, [x16, #32]
    19e8:	add	x16, x16, #0x20
    19ec:	br	x17

00000000000019f0 <statfs@plt>:
    19f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #40]
    19f8:	add	x16, x16, #0x28
    19fc:	br	x17

0000000000001a00 <fclose@plt>:
    1a00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #48]
    1a08:	add	x16, x16, #0x30
    1a0c:	br	x17

0000000000001a10 <fopen@plt>:
    1a10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #56]
    1a18:	add	x16, x16, #0x38
    1a1c:	br	x17

0000000000001a20 <open@plt>:
    1a20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #64]
    1a28:	add	x16, x16, #0x40
    1a2c:	br	x17

0000000000001a30 <strncmp@plt>:
    1a30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #72]
    1a38:	add	x16, x16, #0x48
    1a3c:	br	x17

0000000000001a40 <memset@plt>:
    1a40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #80]
    1a48:	add	x16, x16, #0x50
    1a4c:	br	x17

0000000000001a50 <ffi_raw_to_ptrarray@plt>:
    1a50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #88]
    1a58:	add	x16, x16, #0x58
    1a5c:	br	x17

0000000000001a60 <ffi_prep_raw_closure_loc@plt>:
    1a60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #96]
    1a68:	add	x16, x16, #0x60
    1a6c:	br	x17

0000000000001a70 <setmntent@plt>:
    1a70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #104]
    1a78:	add	x16, x16, #0x68
    1a7c:	br	x17

0000000000001a80 <endmntent@plt>:
    1a80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #112]
    1a88:	add	x16, x16, #0x70
    1a8c:	br	x17

0000000000001a90 <pthread_mutex_init@plt>:
    1a90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #120]
    1a98:	add	x16, x16, #0x78
    1a9c:	br	x17

0000000000001aa0 <close@plt>:
    1aa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #128]
    1aa8:	add	x16, x16, #0x80
    1aac:	br	x17

0000000000001ab0 <__gmon_start__@plt>:
    1ab0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #136]
    1ab8:	add	x16, x16, #0x88
    1abc:	br	x17

0000000000001ac0 <write@plt>:
    1ac0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #144]
    1ac8:	add	x16, x16, #0x90
    1acc:	br	x17

0000000000001ad0 <abort@plt>:
    1ad0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #152]
    1ad8:	add	x16, x16, #0x98
    1adc:	br	x17

0000000000001ae0 <mkostemp@plt>:
    1ae0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #160]
    1ae8:	add	x16, x16, #0xa0
    1aec:	br	x17

0000000000001af0 <access@plt>:
    1af0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #168]
    1af8:	add	x16, x16, #0xa8
    1afc:	br	x17

0000000000001b00 <mmap@plt>:
    1b00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #176]
    1b08:	add	x16, x16, #0xb0
    1b0c:	br	x17

0000000000001b10 <getline@plt>:
    1b10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #184]
    1b18:	add	x16, x16, #0xb8
    1b1c:	br	x17

0000000000001b20 <free@plt>:
    1b20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #192]
    1b28:	add	x16, x16, #0xc0
    1b2c:	br	x17

0000000000001b30 <ffi_java_raw_size@plt>:
    1b30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #200]
    1b38:	add	x16, x16, #0xc8
    1b3c:	br	x17

0000000000001b40 <ffi_raw_size@plt>:
    1b40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #208]
    1b48:	add	x16, x16, #0xd0
    1b4c:	br	x17

0000000000001b50 <ffi_ptrarray_to_raw@plt>:
    1b50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #216]
    1b58:	add	x16, x16, #0xd8
    1b5c:	br	x17

0000000000001b60 <hasmntopt@plt>:
    1b60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #224]
    1b68:	add	x16, x16, #0xe0
    1b6c:	br	x17

0000000000001b70 <strchr@plt>:
    1b70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #232]
    1b78:	add	x16, x16, #0xe8
    1b7c:	br	x17

0000000000001b80 <munmap@plt>:
    1b80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #240]
    1b88:	add	x16, x16, #0xf0
    1b8c:	br	x17

0000000000001b90 <ffi_call@plt>:
    1b90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #248]
    1b98:	add	x16, x16, #0xf8
    1b9c:	br	x17

0000000000001ba0 <sysconf@plt>:
    1ba0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #256]
    1ba8:	add	x16, x16, #0x100
    1bac:	br	x17

0000000000001bb0 <getmntent_r@plt>:
    1bb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #264]
    1bb8:	add	x16, x16, #0x108
    1bbc:	br	x17

0000000000001bc0 <ftruncate@plt>:
    1bc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #272]
    1bc8:	add	x16, x16, #0x110
    1bcc:	br	x17

0000000000001bd0 <__errno_location@plt>:
    1bd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #280]
    1bd8:	add	x16, x16, #0x118
    1bdc:	br	x17

0000000000001be0 <getenv@plt>:
    1be0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #288]
    1be8:	add	x16, x16, #0x120
    1bec:	br	x17

0000000000001bf0 <ffi_java_ptrarray_to_raw@plt>:
    1bf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #296]
    1bf8:	add	x16, x16, #0x128
    1bfc:	br	x17

0000000000001c00 <pthread_mutex_lock@plt>:
    1c00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #304]
    1c08:	add	x16, x16, #0x130
    1c0c:	br	x17

0000000000001c10 <pthread_mutex_unlock@plt>:
    1c10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #312]
    1c18:	add	x16, x16, #0x138
    1c1c:	br	x17

0000000000001c20 <unlink@plt>:
    1c20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #320]
    1c28:	add	x16, x16, #0x140
    1c2c:	br	x17

0000000000001c30 <ffi_prep_java_raw_closure_loc@plt>:
    1c30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #328]
    1c38:	add	x16, x16, #0x148
    1c3c:	br	x17

Disassembly of section .text:

0000000000001c40 <ffi_prep_cif@@LIBFFI_BASE_7.0-0x29c>:
    1c40:	adrp	x0, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    1c44:	ldr	x0, [x0, #4056]
    1c48:	cbz	x0, 1c50 <ffi_prep_java_raw_closure_loc@plt+0x20>
    1c4c:	b	1ab0 <__gmon_start__@plt>
    1c50:	ret
    1c54:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c58:	add	x0, x0, #0x190
    1c5c:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    1c60:	add	x1, x1, #0x190
    1c64:	cmp	x1, x0
    1c68:	b.eq	1c80 <ffi_prep_java_raw_closure_loc@plt+0x50>  // b.none
    1c6c:	adrp	x1, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    1c70:	ldr	x1, [x1, #4040]
    1c74:	cbz	x1, 1c80 <ffi_prep_java_raw_closure_loc@plt+0x50>
    1c78:	mov	x16, x1
    1c7c:	br	x16
    1c80:	ret
    1c84:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c88:	add	x0, x0, #0x190
    1c8c:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    1c90:	add	x1, x1, #0x190
    1c94:	sub	x1, x1, x0
    1c98:	mov	x2, #0x2                   	// #2
    1c9c:	asr	x1, x1, #3
    1ca0:	sdiv	x1, x1, x2
    1ca4:	cbz	x1, 1cbc <ffi_prep_java_raw_closure_loc@plt+0x8c>
    1ca8:	adrp	x2, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    1cac:	ldr	x2, [x2, #4064]
    1cb0:	cbz	x2, 1cbc <ffi_prep_java_raw_closure_loc@plt+0x8c>
    1cb4:	mov	x16, x2
    1cb8:	br	x16
    1cbc:	ret
    1cc0:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1cc4:	ldrb	w1, [x0, #400]
    1cc8:	cbnz	w1, 1d0c <ffi_prep_java_raw_closure_loc@plt+0xdc>
    1ccc:	stp	x29, x30, [sp, #-32]!
    1cd0:	mov	x29, sp
    1cd4:	str	x19, [sp, #16]
    1cd8:	mov	x19, x0
    1cdc:	adrp	x0, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    1ce0:	ldr	x0, [x0, #4048]
    1ce4:	cbz	x0, 1cf4 <ffi_prep_java_raw_closure_loc@plt+0xc4>
    1ce8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1cec:	ldr	x0, [x0, #336]
    1cf0:	bl	19e0 <__cxa_finalize@plt>
    1cf4:	bl	1c54 <ffi_prep_java_raw_closure_loc@plt+0x24>
    1cf8:	mov	w0, #0x1                   	// #1
    1cfc:	strb	w0, [x19, #400]
    1d00:	ldr	x19, [sp, #16]
    1d04:	ldp	x29, x30, [sp], #32
    1d08:	ret
    1d0c:	ret
    1d10:	b	1c84 <ffi_prep_java_raw_closure_loc@plt+0x54>
    1d14:	cbnz	x0, 1d20 <ffi_prep_java_raw_closure_loc@plt+0xf0>
    1d18:	mov	w0, #0x1                   	// #1
    1d1c:	ret
    1d20:	stp	x29, x30, [sp, #-48]!
    1d24:	mov	x29, sp
    1d28:	str	x21, [sp, #32]
    1d2c:	ldr	x21, [x0, #16]
    1d30:	stp	x19, x20, [sp, #16]
    1d34:	mov	x19, x0
    1d38:	cbz	x21, 1ddc <ffi_prep_java_raw_closure_loc@plt+0x1ac>
    1d3c:	mov	x20, x1
    1d40:	str	xzr, [x0]
    1d44:	strh	wzr, [x0, #8]
    1d48:	ldr	x0, [x21]
    1d4c:	cbnz	x0, 1d78 <ffi_prep_java_raw_closure_loc@plt+0x148>
    1d50:	ldrh	w1, [x19, #8]
    1d54:	ldr	x0, [x19]
    1d58:	sub	w1, w1, #0x1
    1d5c:	sub	x0, x0, #0x1
    1d60:	sxtw	x1, w1
    1d64:	orr	x0, x0, x1
    1d68:	adds	x0, x0, #0x1
    1d6c:	str	x0, [x19]
    1d70:	cset	w0, eq  // eq = none
    1d74:	b	1de0 <ffi_prep_java_raw_closure_loc@plt+0x1b0>
    1d78:	ldr	x1, [x0]
    1d7c:	cbz	x1, 1dd0 <ffi_prep_java_raw_closure_loc@plt+0x1a0>
    1d80:	ldr	x3, [x21]
    1d84:	ldr	x0, [x19]
    1d88:	ldrh	w1, [x3, #8]
    1d8c:	sub	x0, x0, #0x1
    1d90:	sub	w2, w1, #0x1
    1d94:	sxtw	x2, w2
    1d98:	orr	x0, x0, x2
    1d9c:	add	x0, x0, #0x1
    1da0:	str	x0, [x19]
    1da4:	cbnz	x20, 1df0 <ffi_prep_java_raw_closure_loc@plt+0x1c0>
    1da8:	ldr	x2, [x3]
    1dac:	add	x21, x21, #0x8
    1db0:	ldr	x0, [x19]
    1db4:	add	x0, x0, x2
    1db8:	str	x0, [x19]
    1dbc:	ldrh	w0, [x19, #8]
    1dc0:	cmp	w0, w1
    1dc4:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1dc8:	strh	w0, [x19, #8]
    1dcc:	b	1d48 <ffi_prep_java_raw_closure_loc@plt+0x118>
    1dd0:	mov	x1, #0x0                   	// #0
    1dd4:	bl	1d14 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    1dd8:	cbz	w0, 1d80 <ffi_prep_java_raw_closure_loc@plt+0x150>
    1ddc:	mov	w0, #0x1                   	// #1
    1de0:	ldp	x19, x20, [sp, #16]
    1de4:	ldr	x21, [sp, #32]
    1de8:	ldp	x29, x30, [sp], #48
    1dec:	ret
    1df0:	str	x0, [x20], #8
    1df4:	b	1da8 <ffi_prep_java_raw_closure_loc@plt+0x178>
    1df8:	cmp	w1, #0x1
    1dfc:	b.ne	1ed0 <ffi_prep_java_raw_closure_loc@plt+0x2a0>  // b.any
    1e00:	stp	x29, x30, [sp, #-16]!
    1e04:	mov	x7, x0
    1e08:	mov	w8, w1
    1e0c:	mov	x29, sp
    1e10:	ldr	x1, [x5]
    1e14:	stp	w8, w4, [x7]
    1e18:	stp	x6, x5, [x7, #8]
    1e1c:	mov	x0, x5
    1e20:	str	wzr, [x7, #28]
    1e24:	cbz	x1, 1e5c <ffi_prep_java_raw_closure_loc@plt+0x22c>
    1e28:	ldp	x6, x0, [x7, #8]
    1e2c:	mov	x5, #0x0                   	// #0
    1e30:	ldr	w9, [x7, #4]
    1e34:	ldrh	w0, [x0, #10]
    1e38:	cmp	w0, #0xd
    1e3c:	cset	w4, eq  // eq = none
    1e40:	lsl	w4, w4, #3
    1e44:	cmp	x5, x9
    1e48:	b.ne	1e74 <ffi_prep_java_raw_closure_loc@plt+0x244>  // b.any
    1e4c:	str	w4, [x7, #24]
    1e50:	mov	x0, x7
    1e54:	ldp	x29, x30, [sp], #16
    1e58:	b	4fa8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xff0>
    1e5c:	mov	x1, #0x0                   	// #0
    1e60:	bl	1d14 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    1e64:	cbz	w0, 1e28 <ffi_prep_java_raw_closure_loc@plt+0x1f8>
    1e68:	mov	w0, w8
    1e6c:	ldp	x29, x30, [sp], #16
    1e70:	ret
    1e74:	ldr	x0, [x6, x5, lsl #3]
    1e78:	ldr	x1, [x0]
    1e7c:	cbz	x1, 1eb0 <ffi_prep_java_raw_closure_loc@plt+0x280>
    1e80:	ldr	x1, [x6, x5, lsl #3]
    1e84:	ldrh	w0, [x1, #8]
    1e88:	sub	w0, w0, #0x1
    1e8c:	tst	w0, w4
    1e90:	b.ne	1ec0 <ffi_prep_java_raw_closure_loc@plt+0x290>  // b.any
    1e94:	ldr	x0, [x1]
    1e98:	add	x5, x5, #0x1
    1e9c:	sub	w0, w0, #0x1
    1ea0:	orr	w0, w0, #0x7
    1ea4:	add	w0, w0, #0x1
    1ea8:	add	w4, w4, w0
    1eac:	b	1e44 <ffi_prep_java_raw_closure_loc@plt+0x214>
    1eb0:	mov	x1, #0x0                   	// #0
    1eb4:	bl	1d14 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    1eb8:	cbz	w0, 1e80 <ffi_prep_java_raw_closure_loc@plt+0x250>
    1ebc:	b	1e68 <ffi_prep_java_raw_closure_loc@plt+0x238>
    1ec0:	sub	w4, w4, #0x1
    1ec4:	orr	w4, w4, w0
    1ec8:	add	w4, w4, #0x1
    1ecc:	b	1e94 <ffi_prep_java_raw_closure_loc@plt+0x264>
    1ed0:	mov	w8, #0x2                   	// #2
    1ed4:	mov	w0, w8
    1ed8:	ret

0000000000001edc <ffi_prep_cif@@LIBFFI_BASE_7.0>:
    1edc:	mov	x6, x4
    1ee0:	mov	x5, x3
    1ee4:	mov	w4, w2
    1ee8:	mov	w3, w2
    1eec:	mov	w2, #0x0                   	// #0
    1ef0:	b	1df8 <ffi_prep_java_raw_closure_loc@plt+0x1c8>

0000000000001ef4 <ffi_prep_cif_var@@LIBFFI_BASE_7.0>:
    1ef4:	mov	x6, x5
    1ef8:	mov	x5, x4
    1efc:	mov	w4, w3
    1f00:	mov	w3, w2
    1f04:	mov	w2, #0x1                   	// #1
    1f08:	b	1df8 <ffi_prep_java_raw_closure_loc@plt+0x1c8>

0000000000001f0c <ffi_prep_closure@@LIBFFI_CLOSURE_7.0>:
    1f0c:	mov	x4, x0
    1f10:	b	19b0 <ffi_prep_closure_loc@plt>

0000000000001f14 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1>:
    1f14:	mov	x3, x1
    1f18:	cmp	w0, #0x1
    1f1c:	mov	x1, x2
    1f20:	b.ne	1f38 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x24>  // b.any
    1f24:	ldrh	w2, [x3, #10]
    1f28:	cmp	w2, #0xd
    1f2c:	b.ne	1f3c <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x28>  // b.any
    1f30:	mov	x0, x3
    1f34:	b	1d14 <ffi_prep_java_raw_closure_loc@plt+0xe4>
    1f38:	mov	w0, #0x2                   	// #2
    1f3c:	ret

0000000000001f40 <ffi_raw_size@@LIBFFI_BASE_7.0>:
    1f40:	ldr	w1, [x0, #4]
    1f44:	ldr	x3, [x0, #8]
    1f48:	sub	w1, w1, #0x1
    1f4c:	mov	x0, #0x0                   	// #0
    1f50:	tbz	w1, #31, 1f58 <ffi_raw_size@@LIBFFI_BASE_7.0+0x18>
    1f54:	ret
    1f58:	ldr	x2, [x3]
    1f5c:	ldrh	w4, [x2, #10]
    1f60:	cmp	w4, #0xd
    1f64:	b.ne	1f78 <ffi_raw_size@@LIBFFI_BASE_7.0+0x38>  // b.any
    1f68:	add	x0, x0, #0x8
    1f6c:	sub	w1, w1, #0x1
    1f70:	add	x3, x3, #0x8
    1f74:	b	1f50 <ffi_raw_size@@LIBFFI_BASE_7.0+0x10>
    1f78:	ldr	x2, [x2]
    1f7c:	add	x0, x0, #0x1
    1f80:	sub	x2, x2, #0x1
    1f84:	orr	x2, x2, #0x7
    1f88:	add	x0, x2, x0
    1f8c:	b	1f6c <ffi_raw_size@@LIBFFI_BASE_7.0+0x2c>

0000000000001f90 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    1f90:	ldr	w5, [x0, #4]
    1f94:	ldr	x4, [x0, #8]
    1f98:	mov	x0, #0x0                   	// #0
    1f9c:	cmp	w5, w0
    1fa0:	b.hi	1fa8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x18>  // b.pmore
    1fa4:	ret
    1fa8:	ldr	x3, [x4, x0, lsl #3]
    1fac:	ldrh	w3, [x3, #10]
    1fb0:	cmp	w3, #0xd
    1fb4:	b.ne	1fc8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x38>  // b.any
    1fb8:	ldr	x3, [x1], #8
    1fbc:	str	x3, [x2, x0, lsl #3]
    1fc0:	add	x0, x0, #0x1
    1fc4:	b	1f9c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xc>
    1fc8:	cmp	w3, #0xf
    1fcc:	b.eq	1fb8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x28>  // b.none
    1fd0:	str	x1, [x2, x0, lsl #3]
    1fd4:	ldr	x3, [x4, x0, lsl #3]
    1fd8:	ldr	x3, [x3]
    1fdc:	sub	x3, x3, #0x1
    1fe0:	orr	x3, x3, #0x7
    1fe4:	add	x3, x3, #0x1
    1fe8:	add	x1, x1, x3
    1fec:	b	1fc0 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x30>

0000000000001ff0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    1ff0:	stp	x29, x30, [sp, #-64]!
    1ff4:	mov	x3, x2
    1ff8:	mov	x29, sp
    1ffc:	str	x23, [sp, #48]
    2000:	ldr	x23, [x0, #8]
    2004:	stp	x19, x20, [sp, #16]
    2008:	mov	x20, x0
    200c:	stp	x21, x22, [sp, #32]
    2010:	adrp	x22, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    2014:	mov	x21, x1
    2018:	add	x22, x22, #0x938
    201c:	mov	x19, #0x0                   	// #0
    2020:	ldr	w0, [x20, #4]
    2024:	cmp	w0, w19
    2028:	b.hi	2040 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x50>  // b.pmore
    202c:	ldp	x19, x20, [sp, #16]
    2030:	ldp	x21, x22, [sp, #32]
    2034:	ldr	x23, [sp, #48]
    2038:	ldp	x29, x30, [sp], #64
    203c:	ret
    2040:	ldr	x2, [x23, x19, lsl #3]
    2044:	ldr	x1, [x21, x19, lsl #3]
    2048:	ldrh	w0, [x2, #10]
    204c:	sub	w0, w0, #0x5
    2050:	cmp	w0, #0xa
    2054:	b.hi	20b0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xc0>  // b.pmore
    2058:	ldrb	w0, [x22, w0, uxtw]
    205c:	adr	x4, 2068 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x78>
    2060:	add	x0, x4, w0, sxtb #2
    2064:	br	x0
    2068:	ldrb	w0, [x1]
    206c:	str	x0, [x3], #8
    2070:	add	x19, x19, #0x1
    2074:	b	2020 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x30>
    2078:	ldrsb	x0, [x1]
    207c:	b	206c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x7c>
    2080:	ldrh	w0, [x1]
    2084:	b	206c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x7c>
    2088:	ldrsh	x0, [x1]
    208c:	b	206c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x7c>
    2090:	ldr	w0, [x1]
    2094:	b	206c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x7c>
    2098:	ldrsw	x0, [x1]
    209c:	b	206c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x7c>
    20a0:	str	x1, [x3], #8
    20a4:	b	2070 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x80>
    20a8:	ldr	x0, [x1]
    20ac:	b	206c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x7c>
    20b0:	ldr	x2, [x2]
    20b4:	mov	x0, x3
    20b8:	bl	19a0 <memcpy@plt>
    20bc:	mov	x3, x0
    20c0:	ldr	x0, [x23, x19, lsl #3]
    20c4:	ldr	x2, [x0]
    20c8:	sub	x2, x2, #0x1
    20cc:	orr	x2, x2, #0x7
    20d0:	add	x2, x2, #0x1
    20d4:	add	x3, x3, x2
    20d8:	b	2070 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x80>
    20dc:	stp	x29, x30, [sp, #-64]!
    20e0:	mov	x29, sp
    20e4:	stp	x19, x20, [sp, #16]
    20e8:	mov	x19, x0
    20ec:	mov	x20, x3
    20f0:	stp	x21, x22, [sp, #32]
    20f4:	mov	x21, x1
    20f8:	mov	x22, x2
    20fc:	str	x23, [sp, #48]
    2100:	bl	1b40 <ffi_raw_size@plt>
    2104:	add	x4, x0, #0xf
    2108:	mov	x1, x22
    210c:	and	x4, x4, #0xfffffffffffffff0
    2110:	mov	x0, x19
    2114:	sub	sp, sp, x4
    2118:	mov	x23, sp
    211c:	mov	x2, x23
    2120:	bl	1b50 <ffi_ptrarray_to_raw@plt>
    2124:	ldp	x4, x3, [x20, #48]
    2128:	mov	x2, x23
    212c:	mov	x1, x21
    2130:	mov	x0, x19
    2134:	blr	x4
    2138:	mov	sp, x29
    213c:	ldp	x19, x20, [sp, #16]
    2140:	ldp	x21, x22, [sp, #32]
    2144:	ldr	x23, [sp, #48]
    2148:	ldp	x29, x30, [sp], #64
    214c:	ret

0000000000002150 <ffi_raw_call@@LIBFFI_BASE_7.0>:
    2150:	stp	x29, x30, [sp, #-48]!
    2154:	mov	x29, sp
    2158:	ldr	w4, [x0, #4]
    215c:	stp	x19, x20, [sp, #16]
    2160:	mov	x19, x0
    2164:	mov	x20, x1
    2168:	lsl	x4, x4, #3
    216c:	stp	x21, x22, [sp, #32]
    2170:	add	x4, x4, #0xf
    2174:	and	x4, x4, #0xffffffff0
    2178:	mov	x21, x2
    217c:	sub	sp, sp, x4
    2180:	mov	x1, x3
    2184:	mov	x22, sp
    2188:	mov	x2, x22
    218c:	bl	1a50 <ffi_raw_to_ptrarray@plt>
    2190:	mov	x3, x22
    2194:	mov	x2, x21
    2198:	mov	x1, x20
    219c:	mov	x0, x19
    21a0:	bl	1b90 <ffi_call@plt>
    21a4:	mov	sp, x29
    21a8:	ldp	x19, x20, [sp, #16]
    21ac:	ldp	x21, x22, [sp, #32]
    21b0:	ldp	x29, x30, [sp], #48
    21b4:	ret

00000000000021b8 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    21b8:	stp	x29, x30, [sp, #-48]!
    21bc:	mov	x29, sp
    21c0:	stp	x19, x20, [sp, #16]
    21c4:	mov	x20, x3
    21c8:	mov	x19, x0
    21cc:	mov	x3, x4
    21d0:	str	x21, [sp, #32]
    21d4:	mov	x21, x2
    21d8:	adrp	x2, 2000 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x10>
    21dc:	add	x2, x2, #0xdc
    21e0:	bl	19b0 <ffi_prep_closure_loc@plt>
    21e4:	cbnz	w0, 21ec <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>
    21e8:	stp	x21, x20, [x19, #48]
    21ec:	ldp	x19, x20, [sp, #16]
    21f0:	ldr	x21, [sp, #32]
    21f4:	ldp	x29, x30, [sp], #48
    21f8:	ret

00000000000021fc <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0>:
    21fc:	mov	x4, x0
    2200:	b	1a60 <ffi_prep_raw_closure_loc@plt>

0000000000002204 <ffi_java_raw_size@@LIBFFI_BASE_7.0>:
    2204:	ldr	w1, [x0, #4]
    2208:	adrp	x4, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    220c:	add	x4, x4, #0x944
    2210:	sub	w1, w1, #0x1
    2214:	ldr	x3, [x0, #8]
    2218:	mov	x0, #0x0                   	// #0
    221c:	tbz	w1, #31, 2224 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x20>
    2220:	ret
    2224:	ldr	x2, [x3]
    2228:	ldrh	w2, [x2, #10]
    222c:	sub	w2, w2, #0x3
    2230:	cmp	w2, #0xc
    2234:	b.hi	2264 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x60>  // b.pmore
    2238:	ldrb	w2, [x4, w2, uxtw]
    223c:	adr	x5, 2248 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x44>
    2240:	add	x2, x5, w2, sxtb #2
    2244:	br	x2
    2248:	add	x0, x0, #0x10
    224c:	sub	w1, w1, #0x1
    2250:	add	x3, x3, #0x8
    2254:	b	221c <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x18>
    2258:	stp	x29, x30, [sp, #-16]!
    225c:	mov	x29, sp
    2260:	bl	1ad0 <abort@plt>
    2264:	add	x0, x0, #0x8
    2268:	b	224c <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x48>

000000000000226c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    226c:	ldr	w4, [x0, #4]
    2270:	ldr	x5, [x0, #8]
    2274:	mov	x0, #0x0                   	// #0
    2278:	cmp	w4, w0
    227c:	b.hi	2284 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x18>  // b.pmore
    2280:	ret
    2284:	ldr	x3, [x5, x0, lsl #3]
    2288:	ldrh	w3, [x3, #10]
    228c:	cmp	w3, #0xc
    2290:	b.hi	22b4 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x48>  // b.pmore
    2294:	cmp	w3, #0xa
    2298:	b.hi	22a4 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x38>  // b.pmore
    229c:	cmp	w3, #0x3
    22a0:	b.ne	22c8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x5c>  // b.any
    22a4:	str	x1, [x2, x0, lsl #3]
    22a8:	add	x1, x1, #0x10
    22ac:	add	x0, x0, #0x1
    22b0:	b	2278 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xc>
    22b4:	cmp	w3, #0xf
    22b8:	b.ne	22c8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x5c>  // b.any
    22bc:	stp	x29, x30, [sp, #-16]!
    22c0:	mov	x29, sp
    22c4:	bl	1ad0 <abort@plt>
    22c8:	str	x1, [x2, x0, lsl #3]
    22cc:	add	x1, x1, #0x8
    22d0:	b	22ac <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x40>

00000000000022d4 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    22d4:	adrp	x4, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    22d8:	add	x4, x4, #0x954
    22dc:	ldr	w5, [x0, #4]
    22e0:	ldr	x6, [x0, #8]
    22e4:	mov	x0, #0x0                   	// #0
    22e8:	cmp	w5, w0
    22ec:	b.hi	22f4 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x20>  // b.pmore
    22f0:	ret
    22f4:	ldr	x3, [x6, x0, lsl #3]
    22f8:	ldrh	w3, [x3, #10]
    22fc:	sub	w3, w3, #0x2
    2300:	cmp	w3, #0xc
    2304:	b.hi	2370 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x9c>  // b.pmore
    2308:	ldrb	w3, [x4, w3, uxtw]
    230c:	adr	x7, 2318 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x44>
    2310:	add	x3, x7, w3, sxtb #2
    2314:	br	x3
    2318:	ldr	x3, [x1, x0, lsl #3]
    231c:	ldrb	w3, [x3]
    2320:	str	x3, [x2], #8
    2324:	b	2370 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x9c>
    2328:	ldr	x3, [x1, x0, lsl #3]
    232c:	ldrsb	x3, [x3]
    2330:	b	2320 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x4c>
    2334:	ldr	x3, [x1, x0, lsl #3]
    2338:	ldrh	w3, [x3]
    233c:	b	2320 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x4c>
    2340:	ldr	x3, [x1, x0, lsl #3]
    2344:	ldrsh	x3, [x3]
    2348:	b	2320 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x4c>
    234c:	ldr	x3, [x1, x0, lsl #3]
    2350:	ldr	w3, [x3]
    2354:	b	2320 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x4c>
    2358:	ldr	x3, [x1, x0, lsl #3]
    235c:	ldrsw	x3, [x3]
    2360:	b	2320 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x4c>
    2364:	ldr	x3, [x1, x0, lsl #3]
    2368:	ldr	s0, [x3]
    236c:	str	s0, [x2], #8
    2370:	add	x0, x0, #0x1
    2374:	b	22e8 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x14>
    2378:	ldr	x3, [x1, x0, lsl #3]
    237c:	ldr	x3, [x3]
    2380:	str	x3, [x2], #16
    2384:	b	2370 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x9c>
    2388:	ldr	x3, [x1, x0, lsl #3]
    238c:	ldr	x3, [x3]
    2390:	b	2320 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x4c>
    2394:	stp	x29, x30, [sp, #-64]!
    2398:	mov	x29, sp
    239c:	stp	x19, x20, [sp, #16]
    23a0:	mov	x19, x0
    23a4:	mov	x20, x3
    23a8:	stp	x21, x22, [sp, #32]
    23ac:	mov	x21, x1
    23b0:	mov	x22, x2
    23b4:	str	x23, [sp, #48]
    23b8:	bl	1b30 <ffi_java_raw_size@plt>
    23bc:	add	x4, x0, #0xf
    23c0:	mov	x1, x22
    23c4:	and	x4, x4, #0xfffffffffffffff0
    23c8:	mov	x0, x19
    23cc:	sub	sp, sp, x4
    23d0:	mov	x23, sp
    23d4:	mov	x2, x23
    23d8:	bl	1bf0 <ffi_java_ptrarray_to_raw@plt>
    23dc:	ldp	x4, x3, [x20, #48]
    23e0:	mov	x2, x23
    23e4:	mov	x1, x21
    23e8:	mov	x0, x19
    23ec:	blr	x4
    23f0:	mov	sp, x29
    23f4:	ldp	x19, x20, [sp, #16]
    23f8:	ldp	x21, x22, [sp, #32]
    23fc:	ldr	x23, [sp, #48]
    2400:	ldp	x29, x30, [sp], #64
    2404:	ret

0000000000002408 <ffi_java_raw_call@@LIBFFI_BASE_7.0>:
    2408:	stp	x29, x30, [sp, #-48]!
    240c:	mov	x29, sp
    2410:	ldr	w4, [x0, #4]
    2414:	stp	x19, x20, [sp, #16]
    2418:	mov	x19, x0
    241c:	mov	x20, x1
    2420:	lsl	x4, x4, #3
    2424:	stp	x21, x22, [sp, #32]
    2428:	add	x4, x4, #0xf
    242c:	and	x4, x4, #0xffffffff0
    2430:	mov	x21, x2
    2434:	sub	sp, sp, x4
    2438:	mov	x1, x3
    243c:	mov	x22, sp
    2440:	mov	x2, x22
    2444:	bl	19d0 <ffi_java_raw_to_ptrarray@plt>
    2448:	mov	x3, x22
    244c:	mov	x2, x21
    2450:	mov	x1, x20
    2454:	mov	x0, x19
    2458:	bl	1b90 <ffi_call@plt>
    245c:	mov	sp, x29
    2460:	ldp	x19, x20, [sp, #16]
    2464:	ldp	x21, x22, [sp, #32]
    2468:	ldp	x29, x30, [sp], #48
    246c:	ret

0000000000002470 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2470:	stp	x29, x30, [sp, #-48]!
    2474:	mov	x29, sp
    2478:	stp	x19, x20, [sp, #16]
    247c:	mov	x20, x3
    2480:	mov	x19, x0
    2484:	mov	x3, x4
    2488:	str	x21, [sp, #32]
    248c:	mov	x21, x2
    2490:	adrp	x2, 2000 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x10>
    2494:	add	x2, x2, #0x394
    2498:	bl	19b0 <ffi_prep_closure_loc@plt>
    249c:	cbnz	w0, 24a4 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>
    24a0:	stp	x21, x20, [x19, #48]
    24a4:	ldp	x19, x20, [sp, #16]
    24a8:	ldr	x21, [sp, #32]
    24ac:	ldp	x29, x30, [sp], #48
    24b0:	ret

00000000000024b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0>:
    24b4:	mov	x4, x0
    24b8:	b	1c30 <ffi_prep_java_raw_closure_loc@plt>
    24bc:	stp	x29, x30, [sp, #-32]!
    24c0:	mov	x2, #0x18                  	// #24
    24c4:	adrp	x1, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    24c8:	mov	x29, sp
    24cc:	str	x19, [sp, #16]
    24d0:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    24d4:	add	x1, x1, #0xd18
    24d8:	ldrsw	x0, [x19, #408]
    24dc:	mul	x0, x0, x2
    24e0:	add	x2, x1, x0
    24e4:	ldr	w2, [x2, #16]
    24e8:	cbz	w2, 24f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x44>
    24ec:	ldr	x1, [x1, x0]
    24f0:	mov	x0, #0x0                   	// #0
    24f4:	blr	x1
    24f8:	ldr	w0, [x19, #408]
    24fc:	add	w1, w0, #0x1
    2500:	cmp	w0, #0x6
    2504:	b.eq	251c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x68>  // b.none
    2508:	str	w1, [x19, #408]
    250c:	mov	w0, #0x0                   	// #0
    2510:	ldr	x19, [sp, #16]
    2514:	ldp	x29, x30, [sp], #32
    2518:	ret
    251c:	str	wzr, [x19, #408]
    2520:	mov	w0, #0x1                   	// #1
    2524:	b	2510 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5c>
    2528:	stp	x29, x30, [sp, #-48]!
    252c:	mov	x0, #0xffffffffffffffff    	// #-1
    2530:	mov	x29, sp
    2534:	stp	x19, x20, [sp, #16]
    2538:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    253c:	add	x20, x19, #0x198
    2540:	stp	x21, x22, [sp, #32]
    2544:	str	x0, [x20, #32]
    2548:	mov	x0, #0x200000              	// #2097152
    254c:	str	x0, [x20, #40]
    2550:	mov	w0, #0x7                   	// #7
    2554:	str	w0, [x20, #48]
    2558:	add	x0, x20, #0x38
    255c:	bl	1c00 <pthread_mutex_lock@plt>
    2560:	ldr	x0, [x20, #8]
    2564:	cbnz	x0, 2588 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xd4>
    2568:	mov	x0, #0x5858                	// #22616
    256c:	mov	x1, #0x0                   	// #0
    2570:	movk	x0, #0x5858, lsl #16
    2574:	str	x0, [x20, #8]
    2578:	add	x0, x20, #0x3d0
    257c:	bl	1a90 <pthread_mutex_init@plt>
    2580:	ldr	w0, [x20, #48]
    2584:	str	w0, [x20, #968]
    2588:	add	x21, x19, #0x198
    258c:	add	x0, x21, #0x38
    2590:	bl	1c10 <pthread_mutex_unlock@plt>
    2594:	mov	w0, #0x1e                  	// #30
    2598:	bl	1ba0 <sysconf@plt>
    259c:	mov	x20, x0
    25a0:	mov	w0, #0x1e                  	// #30
    25a4:	str	x20, [x21, #16]
    25a8:	bl	1ba0 <sysconf@plt>
    25ac:	cbz	x0, 25dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x128>
    25b0:	mov	w0, #0x1e                  	// #30
    25b4:	bl	1ba0 <sysconf@plt>
    25b8:	add	x19, x19, #0x198
    25bc:	sub	x1, x0, #0x1
    25c0:	str	x0, [x19, #24]
    25c4:	and	x0, x1, x0
    25c8:	sub	x1, x20, #0x1
    25cc:	and	x20, x1, x20
    25d0:	orr	x0, x0, x20
    25d4:	cbz	x0, 25e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x130>
    25d8:	bl	1ad0 <abort@plt>
    25dc:	mov	x0, x20
    25e0:	b	25b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x104>
    25e4:	ldp	x19, x20, [sp, #16]
    25e8:	ldp	x21, x22, [sp, #32]
    25ec:	ldp	x29, x30, [sp], #48
    25f0:	ret
    25f4:	stp	x29, x30, [sp, #-48]!
    25f8:	mov	w1, #0x4082                	// #16514
    25fc:	mov	w2, #0x1c0                 	// #448
    2600:	mov	x29, sp
    2604:	movk	w1, #0x48, lsl #16
    2608:	stp	x19, x20, [sp, #16]
    260c:	str	x21, [sp, #32]
    2610:	mov	x21, x0
    2614:	bl	1a20 <open@plt>
    2618:	mov	w19, w0
    261c:	cmn	w0, #0x1
    2620:	b.ne	26a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1f4>  // b.any
    2624:	bl	1bd0 <__errno_location@plt>
    2628:	ldr	w1, [x0]
    262c:	sub	w2, w1, #0x15
    2630:	cmp	w1, #0x5f
    2634:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    2638:	b.hi	26a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1f4>  // b.pmore
    263c:	str	wzr, [x0]
    2640:	mov	x0, x21
    2644:	bl	19c0 <strlen@plt>
    2648:	sxtw	x19, w0
    264c:	add	x0, x19, #0x1a
    2650:	mov	x2, x19
    2654:	and	x0, x0, #0xfffffffffffffff0
    2658:	mov	x1, x21
    265c:	sub	sp, sp, x0
    2660:	mov	x20, sp
    2664:	mov	x0, x20
    2668:	bl	19a0 <memcpy@plt>
    266c:	adrp	x0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    2670:	add	x0, x0, #0x961
    2674:	add	x1, x20, x19
    2678:	ldr	x2, [x0]
    267c:	str	x2, [x20, x19]
    2680:	ldur	w0, [x0, #7]
    2684:	stur	w0, [x1, #7]
    2688:	mov	x0, x20
    268c:	mov	w1, #0x80000               	// #524288
    2690:	bl	1ae0 <mkostemp@plt>
    2694:	mov	w19, w0
    2698:	cmn	w0, #0x1
    269c:	b.eq	26a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1f4>  // b.none
    26a0:	mov	x0, x20
    26a4:	bl	1c20 <unlink@plt>
    26a8:	mov	sp, x29
    26ac:	mov	w0, w19
    26b0:	ldp	x19, x20, [sp, #16]
    26b4:	ldr	x21, [sp, #32]
    26b8:	ldp	x29, x30, [sp], #48
    26bc:	ret
    26c0:	mov	x12, #0x3060                	// #12384
    26c4:	sub	sp, sp, x12
    26c8:	stp	x29, x30, [sp]
    26cc:	mov	x29, sp
    26d0:	stp	x19, x20, [sp, #16]
    26d4:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    26d8:	add	x19, sp, #0x38
    26dc:	add	x20, x20, #0x198
    26e0:	stp	x21, x22, [sp, #32]
    26e4:	adrp	x21, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    26e8:	add	x22, sp, #0x60
    26ec:	add	x21, x21, #0x96c
    26f0:	ldr	x0, [x20, #1056]
    26f4:	mov	x2, x22
    26f8:	mov	x1, x19
    26fc:	mov	w3, #0x3000                	// #12288
    2700:	bl	1bb0 <getmntent_r@plt>
    2704:	cbz	x0, 2764 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2b0>
    2708:	mov	x1, x21
    270c:	mov	x0, x19
    2710:	bl	1b60 <hasmntopt@plt>
    2714:	cbnz	x0, 26f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x23c>
    2718:	adrp	x1, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    271c:	mov	x0, x19
    2720:	add	x1, x1, #0x96f
    2724:	bl	1b60 <hasmntopt@plt>
    2728:	cbnz	x0, 26f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x23c>
    272c:	ldr	x0, [sp, #64]
    2730:	mov	w1, #0x2                   	// #2
    2734:	bl	1af0 <access@plt>
    2738:	cbnz	w0, 26f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x23c>
    273c:	ldr	x0, [sp, #64]
    2740:	bl	25f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x140>
    2744:	cmn	w0, #0x1
    2748:	b.eq	26f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x23c>  // b.none
    274c:	mov	x12, #0x3060                	// #12384
    2750:	ldp	x29, x30, [sp]
    2754:	ldp	x19, x20, [sp, #16]
    2758:	ldp	x21, x22, [sp, #32]
    275c:	add	sp, sp, x12
    2760:	ret
    2764:	mov	w0, #0xffffffff            	// #-1
    2768:	b	274c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x298>
    276c:	stp	x29, x30, [sp, #-48]!
    2770:	mov	x29, sp
    2774:	stp	x19, x20, [sp, #16]
    2778:	mov	x20, x0
    277c:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    2780:	add	x0, x19, #0x198
    2784:	ldr	x1, [x0, #1064]
    2788:	str	x21, [sp, #32]
    278c:	cmp	x1, x20
    2790:	b.eq	27c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x30c>  // b.none
    2794:	ldr	x0, [x0, #1056]
    2798:	cbz	x0, 27a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ec>
    279c:	bl	1a80 <endmntent@plt>
    27a0:	add	x21, x19, #0x198
    27a4:	str	x20, [x21, #1064]
    27a8:	cbz	x20, 27dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x328>
    27ac:	mov	x0, x20
    27b0:	adrp	x1, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    27b4:	add	x1, x1, #0x976
    27b8:	bl	1a70 <setmntent@plt>
    27bc:	str	x0, [x21, #1056]
    27c0:	add	x19, x19, #0x198
    27c4:	ldr	x0, [x19, #1056]
    27c8:	cbz	x0, 27e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x32c>
    27cc:	ldp	x19, x20, [sp, #16]
    27d0:	ldr	x21, [sp, #32]
    27d4:	ldp	x29, x30, [sp], #48
    27d8:	b	26c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x20c>
    27dc:	str	xzr, [x21, #1056]
    27e0:	mov	w0, #0xffffffff            	// #-1
    27e4:	ldp	x19, x20, [sp, #16]
    27e8:	ldr	x21, [sp, #32]
    27ec:	ldp	x29, x30, [sp], #48
    27f0:	ret
    27f4:	stp	x29, x30, [sp, #-16]!
    27f8:	mov	x29, sp
    27fc:	bl	1be0 <getenv@plt>
    2800:	cbz	x0, 280c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x358>
    2804:	ldp	x29, x30, [sp], #16
    2808:	b	25f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x140>
    280c:	mov	w0, #0xffffffff            	// #-1
    2810:	ldp	x29, x30, [sp], #16
    2814:	ret
    2818:	add	x3, x0, #0x10
    281c:	ands	x2, x0, #0x7
    2820:	b.eq	282c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x378>  // b.none
    2824:	neg	x2, x3
    2828:	and	x2, x2, #0x7
    282c:	adrp	x3, 17000 <memcpy@GLIBC_2.17>
    2830:	add	x3, x3, #0x198
    2834:	add	x5, x0, x2
    2838:	add	x0, x0, x1
    283c:	sub	x2, x1, x2
    2840:	mov	x1, #0x48                  	// #72
    2844:	str	x2, [x3, #120]
    2848:	orr	x2, x2, #0x1
    284c:	str	x5, [x3, #144]
    2850:	str	x2, [x5, #8]
    2854:	str	x1, [x0, #8]
    2858:	ldr	x0, [x3, #40]
    285c:	str	x0, [x3, #152]
    2860:	ret
    2864:	stp	x29, x30, [sp, #-96]!
    2868:	mov	x29, sp
    286c:	stp	x19, x20, [sp, #16]
    2870:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    2874:	adrp	x19, 17000 <memcpy@GLIBC_2.17>
    2878:	stp	x21, x22, [sp, #32]
    287c:	mov	x21, x0
    2880:	ldr	w0, [x20, #392]
    2884:	stp	x23, x24, [sp, #48]
    2888:	cmn	w0, #0x1
    288c:	stp	x25, x26, [sp, #64]
    2890:	stp	x27, x28, [sp, #80]
    2894:	b.ne	2920 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x46c>  // b.any
    2898:	str	wzr, [x19, #408]
    289c:	adrp	x23, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    28a0:	add	x23, x23, #0xd18
    28a4:	mov	x24, #0x18                  	// #24
    28a8:	ldrsw	x0, [x19, #408]
    28ac:	mul	x0, x0, x24
    28b0:	add	x2, x23, x0
    28b4:	ldr	x1, [x23, x0]
    28b8:	ldr	x0, [x2, #8]
    28bc:	blr	x1
    28c0:	mov	w22, w0
    28c4:	ldrsw	x0, [x19, #408]
    28c8:	madd	x0, x0, x24, x23
    28cc:	ldr	w0, [x0, #16]
    28d0:	cbz	w0, 28dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x428>
    28d4:	cmn	w22, #0x1
    28d8:	b.ne	28ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x438>  // b.any
    28dc:	bl	24bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8>
    28e0:	cbnz	w0, 28ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x438>
    28e4:	cmn	w22, #0x1
    28e8:	b.eq	28a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3f4>  // b.none
    28ec:	str	w22, [x20, #392]
    28f0:	cmn	w22, #0x1
    28f4:	b.ne	2920 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x46c>  // b.any
    28f8:	mov	x20, #0xffffffffffffffff    	// #-1
    28fc:	mov	sp, x29
    2900:	mov	x0, x20
    2904:	ldp	x19, x20, [sp, #16]
    2908:	ldp	x21, x22, [sp, #32]
    290c:	ldp	x23, x24, [sp, #48]
    2910:	ldp	x25, x26, [sp, #64]
    2914:	ldp	x27, x28, [sp, #80]
    2918:	ldp	x29, x30, [sp], #96
    291c:	ret
    2920:	add	x22, x19, #0x198
    2924:	ldr	w26, [x20, #392]
    2928:	mov	x24, x21
    292c:	mov	x25, sp
    2930:	ldr	x0, [x22, #1080]
    2934:	ldr	x23, [x22, #1072]
    2938:	cbnz	x0, 2948 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x494>
    293c:	mov	w0, #0x1e                  	// #30
    2940:	bl	1ba0 <sysconf@plt>
    2944:	str	x0, [x22, #1080]
    2948:	add	x28, x19, #0x198
    294c:	mov	w1, #0x0                   	// #0
    2950:	ldr	x2, [x28, #1080]
    2954:	add	x0, x2, #0xf
    2958:	and	x0, x0, #0xfffffffffffffff0
    295c:	sub	sp, sp, x0
    2960:	mov	x27, sp
    2964:	mov	x0, sp
    2968:	bl	1a40 <memset@plt>
    296c:	cmp	x24, #0x0
    2970:	b.gt	29bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x508>
    2974:	mov	w0, #0x0                   	// #0
    2978:	mov	sp, x25
    297c:	cbnz	w0, 28f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x444>
    2980:	ldr	w24, [x20, #392]
    2984:	mov	x5, x23
    2988:	mov	x1, x21
    298c:	mov	w3, #0x1                   	// #1
    2990:	mov	w4, w24
    2994:	mov	w2, #0x5                   	// #5
    2998:	mov	x0, #0x0                   	// #0
    299c:	bl	1b00 <mmap@plt>
    29a0:	mov	x22, x0
    29a4:	cmn	x0, #0x1
    29a8:	b.ne	2a00 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x54c>  // b.any
    29ac:	cbnz	x23, 29f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53c>
    29b0:	mov	w0, w24
    29b4:	bl	1aa0 <close@plt>
    29b8:	b	289c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3e8>
    29bc:	ldr	x22, [x28, #1080]
    29c0:	mov	x1, x27
    29c4:	mov	w0, w26
    29c8:	cmp	x22, x24
    29cc:	csel	x22, x22, x24, ls  // ls = plast
    29d0:	mov	x2, x22
    29d4:	bl	1ac0 <write@plt>
    29d8:	cmp	x22, x0
    29dc:	b.gt	29e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x534>
    29e0:	sub	x24, x24, x22
    29e4:	b	296c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b8>
    29e8:	mov	w0, #0xffffffff            	// #-1
    29ec:	b	2978 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4c4>
    29f0:	mov	x1, x23
    29f4:	mov	w0, w24
    29f8:	bl	1bc0 <ftruncate@plt>
    29fc:	b	28f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x444>
    2a00:	cbnz	x23, 2a24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x570>
    2a04:	ldrsw	x0, [x19, #408]
    2a08:	adrp	x1, 16000 <ffi_type_void@@LIBFFI_BASE_7.0+0x106e0>
    2a0c:	add	x1, x1, #0xd18
    2a10:	mov	x2, #0x18                  	// #24
    2a14:	madd	x0, x0, x2, x1
    2a18:	ldr	w0, [x0, #16]
    2a1c:	cbz	w0, 2a24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x570>
    2a20:	bl	24bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8>
    2a24:	ldr	w24, [x20, #392]
    2a28:	mov	x5, x23
    2a2c:	mov	x1, x21
    2a30:	mov	w3, #0x1                   	// #1
    2a34:	mov	w4, w24
    2a38:	mov	w2, #0x3                   	// #3
    2a3c:	mov	x0, #0x0                   	// #0
    2a40:	bl	1b00 <mmap@plt>
    2a44:	mov	x20, x0
    2a48:	cmn	x0, #0x1
    2a4c:	b.ne	2a6c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5b8>  // b.any
    2a50:	mov	x1, x21
    2a54:	mov	x0, x22
    2a58:	bl	1b80 <munmap@plt>
    2a5c:	mov	x1, x23
    2a60:	mov	w0, w24
    2a64:	bl	1bc0 <ftruncate@plt>
    2a68:	b	28fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x448>
    2a6c:	add	x0, x0, x21
    2a70:	add	x19, x19, #0x198
    2a74:	sub	x22, x22, x20
    2a78:	stur	x22, [x0, #-8]
    2a7c:	ldr	x0, [x19, #1072]
    2a80:	add	x21, x0, x21
    2a84:	str	x21, [x19, #1072]
    2a88:	b	28fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x448>
    2a8c:	stp	x29, x30, [sp, #-224]!
    2a90:	mov	x29, sp
    2a94:	stp	x21, x22, [sp, #32]
    2a98:	adrp	x21, 17000 <memcpy@GLIBC_2.17>
    2a9c:	mov	x22, x0
    2aa0:	ldr	w1, [x21, #392]
    2aa4:	stp	x19, x20, [sp, #16]
    2aa8:	cmn	w1, #0x1
    2aac:	stp	x23, x24, [sp, #48]
    2ab0:	str	x25, [sp, #64]
    2ab4:	b.eq	2af0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x63c>  // b.none
    2ab8:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    2abc:	add	x0, x20, #0x198
    2ac0:	ldr	x0, [x0, #1072]
    2ac4:	cbnz	x0, 2c40 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x78c>
    2ac8:	add	x20, x20, #0x198
    2acc:	add	x20, x20, #0x440
    2ad0:	mov	x0, x20
    2ad4:	bl	1c00 <pthread_mutex_lock@plt>
    2ad8:	mov	x0, x22
    2adc:	bl	2864 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b0>
    2ae0:	mov	x19, x0
    2ae4:	mov	x0, x20
    2ae8:	bl	1c10 <pthread_mutex_unlock@plt>
    2aec:	b	2b44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x690>
    2af0:	add	x0, x21, #0x188
    2af4:	ldr	w0, [x0, #4]
    2af8:	cmp	w0, #0x0
    2afc:	b.lt	2b60 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6ac>  // b.tstop
    2b00:	cset	w1, eq  // eq = none
    2b04:	cbz	w1, 2ab8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x604>
    2b08:	mov	x1, x22
    2b0c:	mov	x5, #0x0                   	// #0
    2b10:	mov	w4, #0xffffffff            	// #-1
    2b14:	mov	w3, #0x22                  	// #34
    2b18:	mov	w2, #0x7                   	// #7
    2b1c:	mov	x0, #0x0                   	// #0
    2b20:	bl	1b00 <mmap@plt>
    2b24:	mov	x19, x0
    2b28:	cmn	x0, #0x1
    2b2c:	b.ne	2b44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x690>  // b.any
    2b30:	bl	1bd0 <__errno_location@plt>
    2b34:	ldr	w0, [x0]
    2b38:	cmp	w0, #0x1
    2b3c:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    2b40:	b.eq	2ab8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x604>  // b.none
    2b44:	mov	x0, x19
    2b48:	ldp	x19, x20, [sp, #16]
    2b4c:	ldp	x21, x22, [sp, #32]
    2b50:	ldp	x23, x24, [sp, #48]
    2b54:	ldr	x25, [sp, #64]
    2b58:	ldp	x29, x30, [sp], #224
    2b5c:	ret
    2b60:	adrp	x0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    2b64:	add	x1, sp, #0x68
    2b68:	add	x0, x0, #0x978
    2b6c:	stp	xzr, xzr, [sp, #88]
    2b70:	bl	19f0 <statfs@plt>
    2b74:	tbnz	w0, #31, 2b8c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d8>
    2b78:	ldr	x1, [sp, #104]
    2b7c:	mov	w0, #0xff8c                	// #65420
    2b80:	movk	w0, #0xf97c, lsl #16
    2b84:	cmp	w1, w0
    2b88:	b.eq	2c2c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x778>  // b.none
    2b8c:	adrp	x1, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    2b90:	adrp	x0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    2b94:	add	x1, x1, #0x976
    2b98:	add	x0, x0, #0x981
    2b9c:	bl	1a10 <fopen@plt>
    2ba0:	mov	x19, x0
    2ba4:	cbz	x0, 2bdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x728>
    2ba8:	adrp	x20, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    2bac:	add	x25, sp, #0x60
    2bb0:	add	x24, sp, #0x58
    2bb4:	add	x20, x20, #0x98e
    2bb8:	mov	x2, x19
    2bbc:	mov	x1, x25
    2bc0:	mov	x0, x24
    2bc4:	bl	1b10 <getline@plt>
    2bc8:	tbz	x0, #63, 2be4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x730>
    2bcc:	ldr	x0, [sp, #88]
    2bd0:	bl	1b20 <free@plt>
    2bd4:	mov	x0, x19
    2bd8:	bl	1a00 <fclose@plt>
    2bdc:	mov	w1, #0x0                   	// #0
    2be0:	b	2c30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x77c>
    2be4:	ldr	x23, [sp, #88]
    2be8:	mov	w1, #0x20                  	// #32
    2bec:	mov	x0, x23
    2bf0:	bl	1b70 <strchr@plt>
    2bf4:	cbz	x0, 2bcc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x718>
    2bf8:	add	x0, x0, #0x1
    2bfc:	mov	w1, #0x20                  	// #32
    2c00:	bl	1b70 <strchr@plt>
    2c04:	cbz	x0, 2bcc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x718>
    2c08:	mov	x1, x20
    2c0c:	add	x0, x0, #0x1
    2c10:	mov	x2, #0xa                   	// #10
    2c14:	bl	1a30 <strncmp@plt>
    2c18:	cbnz	w0, 2bb8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x704>
    2c1c:	mov	x0, x23
    2c20:	bl	1b20 <free@plt>
    2c24:	mov	x0, x19
    2c28:	bl	1a00 <fclose@plt>
    2c2c:	mov	w1, #0x1                   	// #1
    2c30:	add	x0, x21, #0x188
    2c34:	str	w1, [x0, #4]
    2c38:	eor	w1, w1, #0x1
    2c3c:	b	2b04 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x650>
    2c40:	ldr	w0, [x21, #392]
    2c44:	cmn	w0, #0x1
    2c48:	b.eq	2ac8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x614>  // b.none
    2c4c:	mov	x0, x22
    2c50:	bl	2864 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b0>
    2c54:	mov	x19, x0
    2c58:	b	2b44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x690>
    2c5c:	adrp	x1, 17000 <memcpy@GLIBC_2.17>
    2c60:	add	x1, x1, #0x198
    2c64:	mov	x2, x0
    2c68:	add	x0, x1, #0x400
    2c6c:	ldr	x1, [x0]
    2c70:	cmp	x1, x2
    2c74:	b.hi	2c88 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7d4>  // b.pmore
    2c78:	ldr	x3, [x0, #8]
    2c7c:	add	x1, x1, x3
    2c80:	cmp	x2, x1
    2c84:	b.cc	2c90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7dc>  // b.lo, b.ul, b.last
    2c88:	ldr	x0, [x0, #16]
    2c8c:	cbnz	x0, 2c6c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7b8>
    2c90:	ret
    2c94:	stp	x29, x30, [sp, #-32]!
    2c98:	mov	x29, sp
    2c9c:	stp	x19, x20, [sp, #16]
    2ca0:	mov	x19, x0
    2ca4:	mov	x20, x1
    2ca8:	bl	2c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7a8>
    2cac:	cbnz	x0, 2cc4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x810>
    2cb0:	mov	x1, x20
    2cb4:	mov	x0, x19
    2cb8:	ldp	x19, x20, [sp, #16]
    2cbc:	ldp	x29, x30, [sp], #32
    2cc0:	b	1b80 <munmap@plt>
    2cc4:	ldr	x0, [x0, #24]
    2cc8:	add	x0, x19, x0
    2ccc:	cmp	x19, x0
    2cd0:	b.eq	2cb0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7fc>  // b.none
    2cd4:	mov	x1, x20
    2cd8:	bl	1b80 <munmap@plt>
    2cdc:	cbz	w0, 2cb0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7fc>
    2ce0:	ldp	x19, x20, [sp, #16]
    2ce4:	ldp	x29, x30, [sp], #32
    2ce8:	ret

0000000000002cec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0>:
    2cec:	stp	x29, x30, [sp, #-64]!
    2cf0:	mov	x29, sp
    2cf4:	stp	x19, x20, [sp, #16]
    2cf8:	stp	x21, x22, [sp, #32]
    2cfc:	stp	x23, x24, [sp, #48]
    2d00:	cbnz	x1, 2d20 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x34>
    2d04:	mov	x19, #0x0                   	// #0
    2d08:	mov	x0, x19
    2d0c:	ldp	x19, x20, [sp, #16]
    2d10:	ldp	x21, x22, [sp, #32]
    2d14:	ldp	x23, x24, [sp, #48]
    2d18:	ldp	x29, x30, [sp], #64
    2d1c:	ret
    2d20:	mov	x19, x0
    2d24:	adrp	x22, 17000 <memcpy@GLIBC_2.17>
    2d28:	add	x0, x22, #0x198
    2d2c:	mov	x20, x1
    2d30:	ldr	x0, [x0, #16]
    2d34:	cbnz	x0, 2d3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x50>
    2d38:	bl	2528 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74>
    2d3c:	add	x0, x22, #0x198
    2d40:	ldr	w1, [x0, #968]
    2d44:	tbnz	w1, #1, 2e58 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16c>
    2d48:	cmp	x19, #0xf0
    2d4c:	b.ls	2e68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x17c>  // b.plast
    2d50:	cmn	x19, #0x81
    2d54:	b.hi	35e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8f8>  // b.pmore
    2d58:	add	x7, x22, #0x198
    2d5c:	add	x21, x19, #0xf
    2d60:	and	x21, x21, #0xfffffffffffffff8
    2d64:	add	x7, x7, #0x68
    2d68:	ldr	w4, [x7, #4]
    2d6c:	cbz	w4, 35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8fc>
    2d70:	lsr	x8, x21, #8
    2d74:	neg	x2, x21
    2d78:	sub	w3, w8, #0x100
    2d7c:	lsr	w3, w3, #16
    2d80:	and	w3, w3, #0x8
    2d84:	lsl	w1, w8, w3
    2d88:	sub	w6, w1, #0x1, lsl #12
    2d8c:	lsr	w6, w6, #16
    2d90:	and	w6, w6, #0x4
    2d94:	orr	w3, w3, w6
    2d98:	lsl	w1, w1, w6
    2d9c:	sub	w5, w1, #0x4, lsl #12
    2da0:	lsr	w5, w5, #16
    2da4:	and	w5, w5, #0x2
    2da8:	add	w3, w3, w5
    2dac:	lsl	w0, w1, w5
    2db0:	mov	x1, #0xffff                	// #65535
    2db4:	lsr	w0, w0, #15
    2db8:	cmp	x8, x1
    2dbc:	sub	w0, w0, w3
    2dc0:	add	w3, w0, #0x15
    2dc4:	add	w0, w0, #0xe
    2dc8:	lsr	x3, x21, x3
    2dcc:	lsl	w0, w0, #1
    2dd0:	and	x3, x3, #0x1
    2dd4:	add	x0, x3, x0
    2dd8:	mov	x3, #0x1f                  	// #31
    2ddc:	csel	x3, x0, x3, ls  // ls = plast
    2de0:	add	x0, x3, #0x4a
    2de4:	ldr	x0, [x7, x0, lsl #3]
    2de8:	cbz	x0, 326c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x580>
    2dec:	lsr	x5, x3, #1
    2df0:	cmp	x3, #0x1f
    2df4:	mov	w1, #0x39                  	// #57
    2df8:	sub	w5, w1, w5
    2dfc:	csel	w5, w5, wzr, ne  // ne = any
    2e00:	mov	x8, #0x0                   	// #0
    2e04:	mov	x7, #0x0                   	// #0
    2e08:	lsl	x5, x21, x5
    2e0c:	ldr	x1, [x0, #8]
    2e10:	and	x1, x1, #0xfffffffffffffffc
    2e14:	sub	x1, x1, x21
    2e18:	cmp	x1, x2
    2e1c:	b.cs	2e2c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x140>  // b.hs, b.nlast
    2e20:	cbz	x1, 3370 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x684>
    2e24:	mov	x2, x1
    2e28:	mov	x7, x0
    2e2c:	lsr	x6, x5, #63
    2e30:	add	x6, x6, #0x4
    2e34:	ldr	x1, [x0, #40]
    2e38:	ldr	x0, [x0, x6, lsl #3]
    2e3c:	cmp	x1, #0x0
    2e40:	ccmp	x1, x0, #0x4, ne  // ne = any
    2e44:	csel	x1, x1, x8, ne  // ne = any
    2e48:	cbz	x0, 337c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x690>
    2e4c:	lsl	x5, x5, #1
    2e50:	mov	x8, x1
    2e54:	b	2e0c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x120>
    2e58:	add	x0, x0, #0x3d0
    2e5c:	bl	1c00 <pthread_mutex_lock@plt>
    2e60:	cbz	w0, 2d48 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c>
    2e64:	b	2d04 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x18>
    2e68:	add	x21, x19, #0xf
    2e6c:	add	x8, x22, #0x198
    2e70:	and	x0, x21, #0xfffffffffffffff8
    2e74:	cmp	x19, #0x16
    2e78:	mov	x21, #0x20                  	// #32
    2e7c:	csel	x21, x0, x21, hi  // hi = pmore
    2e80:	ldr	w5, [x8, #104]
    2e84:	add	x7, x8, #0x68
    2e88:	lsr	x4, x21, #3
    2e8c:	lsr	w0, w5, w4
    2e90:	tst	x0, #0x3
    2e94:	b.eq	2f08 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x21c>  // b.none
    2e98:	mvn	w1, w0
    2e9c:	and	x1, x1, #0x1
    2ea0:	add	x1, x1, x4
    2ea4:	add	x2, x7, x1, lsl #4
    2ea8:	add	x2, x2, #0x40
    2eac:	ldr	x0, [x2, #16]
    2eb0:	ldr	x3, [x0, #16]
    2eb4:	cmp	x2, x3
    2eb8:	b.ne	2ef0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x204>  // b.any
    2ebc:	mov	w3, #0x1                   	// #1
    2ec0:	lsl	w3, w3, w1
    2ec4:	bic	w5, w5, w3
    2ec8:	str	w5, [x8, #104]
    2ecc:	lsl	x1, x1, #3
    2ed0:	orr	x2, x1, #0x3
    2ed4:	add	x1, x0, x1
    2ed8:	str	x2, [x0, #8]
    2edc:	ldr	x2, [x1, #8]
    2ee0:	orr	x2, x2, #0x1
    2ee4:	str	x2, [x1, #8]
    2ee8:	add	x19, x0, #0x10
    2eec:	b	374c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa60>
    2ef0:	ldr	x4, [x7, #24]
    2ef4:	cmp	x3, x4
    2ef8:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    2efc:	str	x3, [x2, #16]
    2f00:	str	x2, [x3, #24]
    2f04:	b	2ecc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1e0>
    2f08:	ldr	x3, [x7, #8]
    2f0c:	cmp	x21, x3
    2f10:	b.ls	35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8fc>  // b.plast
    2f14:	cbz	w0, 3034 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x348>
    2f18:	mov	w6, #0x1                   	// #1
    2f1c:	lsl	w0, w0, w4
    2f20:	lsl	w2, w6, w4
    2f24:	neg	w1, w2, lsl #1
    2f28:	orr	w1, w1, w2, lsl #1
    2f2c:	and	w0, w1, w0
    2f30:	neg	w1, w0
    2f34:	ands	w1, w1, w0
    2f38:	rbit	w1, w1
    2f3c:	clz	w1, w1
    2f40:	csinv	w1, w1, wzr, ne  // ne = any
    2f44:	add	x4, x7, w1, sxtw #4
    2f48:	sxtw	x2, w1
    2f4c:	add	x4, x4, #0x40
    2f50:	ldr	x0, [x4, #16]
    2f54:	ldr	x9, [x0, #16]
    2f58:	cmp	x4, x9
    2f5c:	b.ne	2f98 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2ac>  // b.any
    2f60:	lsl	w1, w6, w1
    2f64:	bic	w5, w5, w1
    2f68:	str	w5, [x8, #104]
    2f6c:	lsl	x1, x2, #3
    2f70:	sub	x2, x1, x21
    2f74:	add	x4, x0, x1
    2f78:	cmp	x2, #0x1f
    2f7c:	b.hi	2fb0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2c4>  // b.pmore
    2f80:	orr	x1, x1, #0x3
    2f84:	str	x1, [x0, #8]
    2f88:	ldr	x1, [x4, #8]
    2f8c:	orr	x1, x1, #0x1
    2f90:	str	x1, [x4, #8]
    2f94:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    2f98:	ldr	x1, [x7, #24]
    2f9c:	cmp	x9, x1
    2fa0:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    2fa4:	str	x9, [x4, #16]
    2fa8:	str	x4, [x9, #24]
    2fac:	b	2f6c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x280>
    2fb0:	orr	x4, x21, #0x3
    2fb4:	add	x21, x0, x21
    2fb8:	str	x4, [x0, #8]
    2fbc:	orr	x4, x2, #0x1
    2fc0:	str	x4, [x21, #8]
    2fc4:	str	x2, [x0, x1]
    2fc8:	cbz	x3, 3010 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x324>
    2fcc:	add	x7, x22, #0x198
    2fd0:	lsr	x8, x3, #3
    2fd4:	add	x6, x7, #0x68
    2fd8:	mov	w3, #0x1                   	// #1
    2fdc:	add	x1, x6, x8, lsl #4
    2fe0:	lsl	w3, w3, w8
    2fe4:	ldr	w5, [x7, #104]
    2fe8:	add	x1, x1, #0x40
    2fec:	ldr	x4, [x6, #32]
    2ff0:	tst	w5, w3
    2ff4:	b.ne	3020 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x334>  // b.any
    2ff8:	orr	w5, w5, w3
    2ffc:	mov	x3, x1
    3000:	str	w5, [x7, #104]
    3004:	str	x4, [x1, #16]
    3008:	str	x4, [x3, #24]
    300c:	stp	x3, x1, [x4, #16]
    3010:	add	x1, x22, #0x198
    3014:	str	x2, [x1, #112]
    3018:	str	x21, [x1, #136]
    301c:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    3020:	ldr	x3, [x1, #16]
    3024:	ldr	x5, [x6, #24]
    3028:	cmp	x3, x5
    302c:	b.cs	3004 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x318>  // b.hs, b.nlast
    3030:	bl	1ad0 <abort@plt>
    3034:	ldr	w8, [x7, #4]
    3038:	cbz	w8, 35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8fc>
    303c:	neg	w0, w8
    3040:	ands	w0, w0, w8
    3044:	rbit	w0, w0
    3048:	clz	w0, w0
    304c:	csinv	w0, w0, wzr, ne  // ne = any
    3050:	add	x0, x7, w0, sxtw #3
    3054:	ldr	x4, [x0, #592]
    3058:	mov	x0, x4
    305c:	ldr	x2, [x4, #8]
    3060:	and	x2, x2, #0xfffffffffffffffc
    3064:	sub	x2, x2, x21
    3068:	ldr	x1, [x4, #32]
    306c:	cbnz	x1, 3120 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x434>
    3070:	ldr	x1, [x4, #40]
    3074:	cbnz	x1, 3120 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x434>
    3078:	add	x1, x22, #0x198
    307c:	ldr	x7, [x1, #128]
    3080:	cmp	x7, x0
    3084:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3088:	add	x9, x0, x21
    308c:	cmp	x9, x0
    3090:	b.ls	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.plast
    3094:	ldr	x1, [x0, #24]
    3098:	ldr	x6, [x0, #48]
    309c:	cmp	x1, x0
    30a0:	b.eq	3144 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x458>  // b.none
    30a4:	ldr	x4, [x0, #16]
    30a8:	cmp	x7, x4
    30ac:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    30b0:	str	x1, [x4, #24]
    30b4:	str	x4, [x1, #16]
    30b8:	cbz	x6, 31a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4b8>
    30bc:	ldr	x10, [x0, #56]
    30c0:	add	x4, x22, #0x198
    30c4:	add	x4, x4, #0x68
    30c8:	add	x11, x10, #0x4a
    30cc:	ldr	x12, [x4, x11, lsl #3]
    30d0:	cmp	x12, x0
    30d4:	b.ne	31cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4e0>  // b.any
    30d8:	str	x1, [x4, x11, lsl #3]
    30dc:	cbz	x1, 3194 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4a8>
    30e0:	cmp	x7, x1
    30e4:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    30e8:	ldr	x4, [x0, #32]
    30ec:	str	x6, [x1, #48]
    30f0:	cbz	x4, 3104 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x418>
    30f4:	cmp	x7, x4
    30f8:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    30fc:	str	x4, [x1, #32]
    3100:	str	x1, [x4, #48]
    3104:	ldr	x4, [x0, #40]
    3108:	cbz	x4, 31a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4b8>
    310c:	cmp	x7, x4
    3110:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3114:	str	x4, [x1, #40]
    3118:	str	x1, [x4, #48]
    311c:	b	31a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4b8>
    3120:	ldr	x4, [x1, #8]
    3124:	and	x4, x4, #0xfffffffffffffffc
    3128:	sub	x4, x4, x21
    312c:	cmp	x4, x2
    3130:	b.cs	313c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x450>  // b.hs, b.nlast
    3134:	mov	x2, x4
    3138:	mov	x0, x1
    313c:	mov	x4, x1
    3140:	b	3068 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x37c>
    3144:	ldr	x1, [x0, #40]
    3148:	cbz	x1, 3184 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x498>
    314c:	add	x10, x0, #0x28
    3150:	mov	x4, x1
    3154:	mov	x11, x10
    3158:	mov	x1, x4
    315c:	add	x10, x4, #0x28
    3160:	ldr	x4, [x4, #40]
    3164:	cbnz	x4, 3154 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x468>
    3168:	ldr	x4, [x1, #32]
    316c:	add	x10, x1, #0x20
    3170:	cbnz	x4, 3154 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x468>
    3174:	cmp	x7, x11
    3178:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    317c:	str	xzr, [x11]
    3180:	b	30b8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3cc>
    3184:	ldr	x1, [x0, #32]
    3188:	cbz	x1, 30b8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3cc>
    318c:	add	x10, x0, #0x20
    3190:	b	3150 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x464>
    3194:	mov	w1, #0x1                   	// #1
    3198:	lsl	w1, w1, w10
    319c:	bic	w1, w8, w1
    31a0:	str	w1, [x4, #4]
    31a4:	cmp	x2, #0x1f
    31a8:	b.hi	31f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x508>  // b.pmore
    31ac:	add	x21, x21, x2
    31b0:	orr	x1, x21, #0x3
    31b4:	add	x21, x0, x21
    31b8:	str	x1, [x0, #8]
    31bc:	ldr	x1, [x21, #8]
    31c0:	orr	x1, x1, #0x1
    31c4:	str	x1, [x21, #8]
    31c8:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    31cc:	cmp	x7, x6
    31d0:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    31d4:	ldr	x4, [x6, #32]
    31d8:	cmp	x4, x0
    31dc:	b.ne	31ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x500>  // b.any
    31e0:	str	x1, [x6, #32]
    31e4:	cbnz	x1, 30e0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3f4>
    31e8:	b	31a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4b8>
    31ec:	str	x1, [x6, #40]
    31f0:	b	31e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4f8>
    31f4:	orr	x21, x21, #0x3
    31f8:	str	x21, [x0, #8]
    31fc:	orr	x1, x2, #0x1
    3200:	str	x1, [x9, #8]
    3204:	str	x2, [x9, x2]
    3208:	cbz	x3, 324c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x560>
    320c:	add	x8, x22, #0x198
    3210:	lsr	x3, x3, #3
    3214:	add	x4, x8, #0x68
    3218:	mov	w6, #0x1                   	// #1
    321c:	add	x4, x4, x3, lsl #4
    3220:	lsl	w3, w6, w3
    3224:	add	x4, x4, #0x40
    3228:	tst	w5, w3
    322c:	ldr	x1, [x8, #136]
    3230:	b.ne	325c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x570>  // b.any
    3234:	orr	w5, w5, w3
    3238:	mov	x3, x4
    323c:	str	w5, [x8, #104]
    3240:	str	x1, [x4, #16]
    3244:	str	x1, [x3, #24]
    3248:	stp	x3, x4, [x1, #16]
    324c:	add	x1, x22, #0x198
    3250:	str	x2, [x1, #112]
    3254:	str	x9, [x1, #136]
    3258:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    325c:	ldr	x3, [x4, #16]
    3260:	cmp	x7, x3
    3264:	b.ls	3240 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x554>  // b.plast
    3268:	b	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>
    326c:	mov	x1, #0x0                   	// #0
    3270:	orr	x5, x1, x0
    3274:	cbnz	x5, 32ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c0>
    3278:	mov	w0, #0xfffffffe            	// #-2
    327c:	lsl	w0, w0, w3
    3280:	ands	w3, w0, w4
    3284:	b.eq	35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8fc>  // b.none
    3288:	neg	w0, w3
    328c:	ands	w0, w0, w3
    3290:	add	x3, x22, #0x198
    3294:	rbit	w0, w0
    3298:	clz	w0, w0
    329c:	csinv	w1, w0, wzr, ne  // ne = any
    32a0:	add	x0, x3, w1, sxtw #3
    32a4:	ldr	x1, [x0, #696]
    32a8:	mov	x0, #0x0                   	// #0
    32ac:	cbnz	x1, 3384 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x698>
    32b0:	add	x1, x22, #0x198
    32b4:	add	x1, x1, #0x68
    32b8:	ldr	x3, [x1, #8]
    32bc:	cbz	x0, 35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8fc>
    32c0:	sub	x3, x3, x21
    32c4:	cmp	x2, x3
    32c8:	b.cs	35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8fc>  // b.hs, b.nlast
    32cc:	ldr	x5, [x1, #24]
    32d0:	cmp	x5, x0
    32d4:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    32d8:	add	x1, x0, x21
    32dc:	cmp	x1, x0
    32e0:	b.ls	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.plast
    32e4:	ldr	x3, [x0, #24]
    32e8:	ldr	x7, [x0, #48]
    32ec:	cmp	x3, x0
    32f0:	b.eq	33b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6c8>  // b.none
    32f4:	ldr	x6, [x0, #16]
    32f8:	cmp	x5, x6
    32fc:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3300:	str	x3, [x6, #24]
    3304:	str	x6, [x3, #16]
    3308:	cbz	x7, 3414 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>
    330c:	ldr	x8, [x0, #56]
    3310:	add	x6, x22, #0x198
    3314:	add	x6, x6, #0x68
    3318:	add	x9, x8, #0x4a
    331c:	ldr	x10, [x6, x9, lsl #3]
    3320:	cmp	x10, x0
    3324:	b.ne	346c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x780>  // b.any
    3328:	str	x3, [x6, x9, lsl #3]
    332c:	cbz	x3, 3404 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x718>
    3330:	cmp	x5, x3
    3334:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3338:	ldr	x4, [x0, #32]
    333c:	str	x7, [x3, #48]
    3340:	cbz	x4, 3354 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x668>
    3344:	cmp	x5, x4
    3348:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    334c:	str	x4, [x3, #32]
    3350:	str	x3, [x4, #48]
    3354:	ldr	x4, [x0, #40]
    3358:	cbz	x4, 3414 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>
    335c:	cmp	x5, x4
    3360:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3364:	str	x4, [x3, #40]
    3368:	str	x3, [x4, #48]
    336c:	b	3414 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>
    3370:	mov	x1, x0
    3374:	mov	x2, #0x0                   	// #0
    3378:	b	3270 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    337c:	mov	x0, x7
    3380:	b	3270 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x584>
    3384:	ldr	x3, [x1, #8]
    3388:	and	x3, x3, #0xfffffffffffffffc
    338c:	sub	x3, x3, x21
    3390:	cmp	x3, x2
    3394:	b.cs	33a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6b4>  // b.hs, b.nlast
    3398:	mov	x2, x3
    339c:	mov	x0, x1
    33a0:	ldr	x3, [x1, #32]
    33a4:	cbnz	x3, 33ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6c0>
    33a8:	ldr	x3, [x1, #40]
    33ac:	mov	x1, x3
    33b0:	b	32ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c0>
    33b4:	ldr	x3, [x0, #40]
    33b8:	cbz	x3, 33f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x708>
    33bc:	add	x8, x0, #0x28
    33c0:	mov	x6, x3
    33c4:	mov	x9, x8
    33c8:	mov	x3, x6
    33cc:	add	x8, x6, #0x28
    33d0:	ldr	x6, [x6, #40]
    33d4:	cbnz	x6, 33c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6d8>
    33d8:	ldr	x6, [x3, #32]
    33dc:	add	x8, x3, #0x20
    33e0:	cbnz	x6, 33c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6d8>
    33e4:	cmp	x5, x9
    33e8:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    33ec:	str	xzr, [x9]
    33f0:	b	3308 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x61c>
    33f4:	ldr	x3, [x0, #32]
    33f8:	cbz	x3, 3308 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x61c>
    33fc:	add	x8, x0, #0x20
    3400:	b	33c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6d4>
    3404:	mov	w3, #0x1                   	// #1
    3408:	lsl	w3, w3, w8
    340c:	bic	w4, w4, w3
    3410:	str	w4, [x6, #4]
    3414:	cmp	x2, #0x1f
    3418:	b.ls	31ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4c0>  // b.plast
    341c:	orr	x21, x21, #0x3
    3420:	str	x21, [x0, #8]
    3424:	orr	x3, x2, #0x1
    3428:	str	x3, [x1, #8]
    342c:	str	x2, [x1, x2]
    3430:	lsr	x7, x2, #3
    3434:	cmp	x2, #0xff
    3438:	b.hi	34b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7c4>  // b.pmore
    343c:	add	x6, x22, #0x198
    3440:	mov	w4, #0x1                   	// #1
    3444:	add	x2, x6, x7, lsl #4
    3448:	lsl	w4, w4, w7
    344c:	add	x2, x2, #0xa8
    3450:	ldr	w3, [x6, #104]
    3454:	tst	w3, w4
    3458:	b.ne	3494 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7a8>  // b.any
    345c:	orr	w3, w3, w4
    3460:	str	w3, [x6, #104]
    3464:	mov	x3, x2
    3468:	b	34a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7b4>
    346c:	cmp	x5, x7
    3470:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3474:	ldr	x4, [x7, #32]
    3478:	cmp	x4, x0
    347c:	b.ne	348c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7a0>  // b.any
    3480:	str	x3, [x7, #32]
    3484:	cbnz	x3, 3330 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x644>
    3488:	b	3414 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x728>
    348c:	str	x3, [x7, #40]
    3490:	b	3484 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x798>
    3494:	ldr	x3, [x2, #16]
    3498:	cmp	x5, x3
    349c:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    34a0:	str	x1, [x2, #16]
    34a4:	str	x1, [x3, #24]
    34a8:	stp	x3, x2, [x1, #16]
    34ac:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    34b0:	lsr	x9, x2, #8
    34b4:	stp	xzr, xzr, [x1, #32]
    34b8:	sub	w6, w9, #0x100
    34bc:	lsr	w6, w6, #16
    34c0:	and	w6, w6, #0x8
    34c4:	lsl	w4, w9, w6
    34c8:	sub	w8, w4, #0x1, lsl #12
    34cc:	lsr	w8, w8, #16
    34d0:	and	w8, w8, #0x4
    34d4:	orr	w6, w6, w8
    34d8:	lsl	w4, w4, w8
    34dc:	sub	w7, w4, #0x4, lsl #12
    34e0:	mov	w8, #0x1                   	// #1
    34e4:	lsr	w7, w7, #16
    34e8:	and	w7, w7, #0x2
    34ec:	add	w6, w6, w7
    34f0:	lsl	w3, w4, w7
    34f4:	lsr	w3, w3, #15
    34f8:	sub	w3, w3, w6
    34fc:	add	w4, w3, #0x15
    3500:	add	w3, w3, #0xe
    3504:	lsr	x4, x2, x4
    3508:	lsl	w3, w3, #1
    350c:	and	x4, x4, #0x1
    3510:	add	x3, x4, x3
    3514:	mov	x4, #0xffff                	// #65535
    3518:	cmp	x9, x4
    351c:	mov	x4, #0x1f                  	// #31
    3520:	csel	x3, x3, x4, ls  // ls = plast
    3524:	add	x4, x22, #0x198
    3528:	str	x3, [x1, #56]
    352c:	add	x4, x4, #0x68
    3530:	lsl	w8, w8, w3
    3534:	add	x6, x3, #0x4a
    3538:	ldr	w7, [x4, #4]
    353c:	tst	w7, w8
    3540:	b.ne	3560 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x874>  // b.any
    3544:	orr	w7, w7, w8
    3548:	str	x1, [x4, x6, lsl #3]
    354c:	str	w7, [x4, #4]
    3550:	add	x4, x4, x6, lsl #3
    3554:	str	x4, [x1, #48]
    3558:	stp	x1, x1, [x1, #16]
    355c:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    3560:	lsr	x7, x3, #1
    3564:	cmp	x3, #0x1f
    3568:	ldr	x4, [x4, x6, lsl #3]
    356c:	mov	w6, #0x39                  	// #57
    3570:	sub	w6, w6, w7
    3574:	csel	w3, w6, wzr, ne  // ne = any
    3578:	lsl	x3, x2, x3
    357c:	ldr	x6, [x4, #8]
    3580:	and	x6, x6, #0xfffffffffffffffc
    3584:	cmp	x2, x6
    3588:	b.eq	35bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8d0>  // b.none
    358c:	lsr	x6, x3, #63
    3590:	lsl	x3, x3, #1
    3594:	add	x6, x6, #0x4
    3598:	ldr	x7, [x4, x6, lsl #3]
    359c:	cbnz	x7, 35b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8c8>
    35a0:	add	x2, x4, x6, lsl #3
    35a4:	cmp	x5, x2
    35a8:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    35ac:	str	x1, [x4, x6, lsl #3]
    35b0:	b	3554 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x868>
    35b4:	mov	x4, x7
    35b8:	b	357c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x890>
    35bc:	cmp	x5, x4
    35c0:	ldr	x2, [x4, #16]
    35c4:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    35c8:	cmp	x5, x2
    35cc:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    35d0:	str	x1, [x2, #24]
    35d4:	str	x1, [x4, #16]
    35d8:	stp	x2, x4, [x1, #16]
    35dc:	str	xzr, [x1, #48]
    35e0:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    35e4:	mov	x21, #0xffffffffffffffff    	// #-1
    35e8:	add	x0, x22, #0x198
    35ec:	add	x1, x0, #0x68
    35f0:	ldr	x2, [x1, #8]
    35f4:	cmp	x2, x21
    35f8:	b.cc	3648 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x95c>  // b.lo, b.ul, b.last
    35fc:	ldr	x0, [x1, #32]
    3600:	sub	x3, x2, x21
    3604:	cmp	x3, #0x1f
    3608:	add	x4, x0, x2
    360c:	b.ls	3634 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x948>  // b.plast
    3610:	add	x4, x0, x21
    3614:	str	x3, [x1, #8]
    3618:	str	x4, [x1, #32]
    361c:	orr	x1, x3, #0x1
    3620:	str	x1, [x4, #8]
    3624:	str	x3, [x0, x2]
    3628:	orr	x21, x21, #0x3
    362c:	str	x21, [x0, #8]
    3630:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    3634:	str	xzr, [x1, #8]
    3638:	orr	x2, x2, #0x3
    363c:	str	xzr, [x1, #32]
    3640:	str	x2, [x0, #8]
    3644:	b	2f88 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x29c>
    3648:	ldr	x2, [x1, #16]
    364c:	cmp	x21, x2
    3650:	b.cs	3674 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x988>  // b.hs, b.nlast
    3654:	ldr	x0, [x1, #40]
    3658:	sub	x2, x2, x21
    365c:	str	x2, [x1, #16]
    3660:	orr	x2, x2, #0x1
    3664:	add	x3, x0, x21
    3668:	str	x3, [x1, #40]
    366c:	str	x2, [x3, #8]
    3670:	b	3628 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x93c>
    3674:	ldr	x0, [x0, #16]
    3678:	cbnz	x0, 3680 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x994>
    367c:	bl	2528 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74>
    3680:	add	x0, x22, #0x198
    3684:	ldr	w1, [x0, #968]
    3688:	tbz	w1, #0, 377c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa90>
    368c:	ldr	x1, [x0, #32]
    3690:	add	x0, x0, #0x8
    3694:	cmp	x21, x1
    3698:	b.cc	377c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa90>  // b.lo, b.ul, b.last
    369c:	ldr	x0, [x0, #16]
    36a0:	add	x23, x0, #0x37
    36a4:	neg	x0, x0
    36a8:	add	x23, x23, x21
    36ac:	and	x23, x23, x0
    36b0:	cmp	x21, x23
    36b4:	b.cs	377c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa90>  // b.hs, b.nlast
    36b8:	mov	x0, x23
    36bc:	bl	2a8c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5d8>
    36c0:	cmn	x0, #0x1
    36c4:	b.eq	377c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa90>  // b.none
    36c8:	add	x2, x0, #0x10
    36cc:	ands	x1, x0, #0x7
    36d0:	b.eq	36dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x9f0>  // b.none
    36d4:	neg	x1, x2
    36d8:	and	x1, x1, #0x7
    36dc:	sub	x2, x23, x1
    36e0:	add	x19, x0, x1
    36e4:	sub	x3, x2, #0x20
    36e8:	orr	x4, x1, #0x1
    36ec:	str	x4, [x0, x1]
    36f0:	orr	x1, x3, #0x2
    36f4:	add	x3, x19, x3
    36f8:	str	x1, [x19, #8]
    36fc:	mov	x1, #0xb                   	// #11
    3700:	add	x2, x19, x2
    3704:	str	x1, [x3, #8]
    3708:	add	x1, x22, #0x198
    370c:	stur	xzr, [x2, #-16]
    3710:	add	x1, x1, #0x68
    3714:	ldr	x2, [x1, #24]
    3718:	cmp	x0, x2
    371c:	b.cs	3724 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa38>  // b.hs, b.nlast
    3720:	str	x0, [x1, #24]
    3724:	add	x0, x22, #0x198
    3728:	add	x0, x0, #0x68
    372c:	ldr	x1, [x0, #848]
    3730:	add	x23, x23, x1
    3734:	str	x23, [x0, #848]
    3738:	ldr	x1, [x0, #856]
    373c:	cmp	x23, x1
    3740:	b.ls	3748 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa5c>  // b.plast
    3744:	str	x23, [x0, #856]
    3748:	add	x19, x19, #0x10
    374c:	add	x0, x22, #0x198
    3750:	ldr	w1, [x0, #968]
    3754:	tbz	w1, #1, 3760 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa74>
    3758:	add	x0, x0, #0x3d0
    375c:	bl	1c10 <pthread_mutex_unlock@plt>
    3760:	cbz	x19, 2d08 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1c>
    3764:	mov	x0, x19
    3768:	bl	2c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7a8>
    376c:	ldr	x0, [x0, #24]
    3770:	add	x0, x19, x0
    3774:	str	x0, [x20]
    3778:	b	2d08 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1c>
    377c:	add	x23, x22, #0x198
    3780:	ldr	x0, [x23, #24]
    3784:	add	x24, x0, #0x49
    3788:	neg	x0, x0
    378c:	add	x24, x24, x21
    3790:	and	x24, x24, x0
    3794:	cmp	x21, x24
    3798:	b.cs	37b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xac4>  // b.hs, b.nlast
    379c:	mov	x0, x24
    37a0:	bl	2a8c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5d8>
    37a4:	mov	x19, x0
    37a8:	cmn	x0, #0x1
    37ac:	b.ne	3ed4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11e8>  // b.any
    37b0:	bl	1bd0 <__errno_location@plt>
    37b4:	mov	x19, #0x0                   	// #0
    37b8:	mov	w1, #0xc                   	// #12
    37bc:	str	w1, [x0]
    37c0:	b	374c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa60>
    37c4:	ldr	x0, [x0, #16]
    37c8:	cbnz	x0, 3888 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb9c>
    37cc:	add	x0, x22, #0x198
    37d0:	add	x0, x0, #0x68
    37d4:	ldr	x1, [x0, #24]
    37d8:	cmp	x19, x1
    37dc:	b.cs	37e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xaf8>  // b.hs, b.nlast
    37e0:	str	x19, [x0, #24]
    37e4:	add	x1, x22, #0x198
    37e8:	add	x2, x19, x24
    37ec:	add	x1, x1, #0x400
    37f0:	ldr	x0, [x1]
    37f4:	cmp	x0, x2
    37f8:	b.ne	38d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbe8>  // b.any
    37fc:	ldr	x3, [x19, x7]
    3800:	ldr	x0, [x1, #24]
    3804:	cmp	x3, x0
    3808:	b.ne	38dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbf0>  // b.any
    380c:	ldr	x0, [x1, #8]
    3810:	add	x24, x0, x24
    3814:	stp	x19, x24, [x1]
    3818:	add	x0, x19, #0x10
    381c:	ands	x1, x19, #0x7
    3820:	b.eq	382c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb40>  // b.none
    3824:	neg	x0, x0
    3828:	and	x1, x0, #0x7
    382c:	add	x0, x19, x1
    3830:	ands	x3, x2, #0x7
    3834:	add	x1, x2, #0x10
    3838:	b.eq	3844 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb58>  // b.none
    383c:	neg	x1, x1
    3840:	and	x3, x1, #0x7
    3844:	add	x2, x2, x3
    3848:	add	x1, x0, x21
    384c:	sub	x5, x2, x0
    3850:	cmp	x4, x2
    3854:	sub	x5, x5, x21
    3858:	orr	x21, x21, #0x3
    385c:	str	x21, [x0, #8]
    3860:	b.ne	39f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd04>  // b.any
    3864:	add	x3, x22, #0x198
    3868:	ldr	x2, [x3, #120]
    386c:	str	x1, [x3, #144]
    3870:	add	x5, x5, x2
    3874:	str	x5, [x3, #120]
    3878:	orr	x5, x5, #0x1
    387c:	str	x5, [x1, #8]
    3880:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    3884:	add	x0, x0, #0x400
    3888:	ldp	x2, x1, [x0]
    388c:	add	x3, x2, x1
    3890:	cmp	x19, x3
    3894:	b.ne	37c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xad8>  // b.any
    3898:	ldr	x5, [x19, x7]
    389c:	ldr	x3, [x0, #24]
    38a0:	cmp	x5, x3
    38a4:	b.ne	37cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xae0>  // b.any
    38a8:	cmp	x4, x2
    38ac:	b.cc	37cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xae0>  // b.lo, b.ul, b.last
    38b0:	cmp	x19, x4
    38b4:	b.ls	37cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xae0>  // b.plast
    38b8:	add	x1, x24, x1
    38bc:	str	x1, [x0, #8]
    38c0:	add	x0, x22, #0x198
    38c4:	ldr	x1, [x0, #120]
    38c8:	mov	x0, x4
    38cc:	add	x1, x24, x1
    38d0:	b	3f58 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x126c>
    38d4:	ldr	x1, [x1, #16]
    38d8:	cbnz	x1, 37f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb04>
    38dc:	mov	x0, x4
    38e0:	bl	2c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7a8>
    38e4:	ldp	x9, x0, [x0]
    38e8:	add	x9, x9, x0
    38ec:	sub	x0, x9, #0x3f
    38f0:	ands	x6, x0, #0x7
    38f4:	b.eq	3900 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc14>  // b.none
    38f8:	neg	x0, x0
    38fc:	and	x6, x0, #0x7
    3900:	sub	x6, x6, #0x4f
    3904:	add	x0, x4, #0x20
    3908:	add	x6, x9, x6
    390c:	sub	x1, x24, #0x48
    3910:	cmp	x6, x0
    3914:	mov	x0, x19
    3918:	csel	x6, x6, x4, cs  // cs = hs, nlast
    391c:	add	x10, x6, #0x10
    3920:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x364>
    3924:	add	x2, x22, #0x198
    3928:	mov	x0, #0x2b                  	// #43
    392c:	add	x3, x2, #0x68
    3930:	add	x2, x2, #0x400
    3934:	str	x0, [x6, #8]
    3938:	ldp	x0, x1, [x2]
    393c:	stp	x0, x1, [x6, #16]
    3940:	ldp	x0, x1, [x2, #16]
    3944:	stp	x0, x1, [x6, #32]
    3948:	str	x24, [x3, #928]
    394c:	str	x19, [x3, #920]
    3950:	ldr	x0, [x19, x7]
    3954:	str	x0, [x3, #944]
    3958:	ldr	x1, [x8, x0]
    395c:	cmp	x0, x1
    3960:	b.ne	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.any
    3964:	add	x0, x6, #0x30
    3968:	str	xzr, [x19, x7]
    396c:	mov	x1, #0xb                   	// #11
    3970:	str	x10, [x3, #936]
    3974:	str	x1, [x0], #8
    3978:	cmp	x9, x0
    397c:	b.hi	3974 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc88>  // b.pmore
    3980:	cmp	x4, x6
    3984:	b.eq	3f5c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1270>  // b.none
    3988:	ldr	x0, [x6, #8]
    398c:	sub	x3, x6, x4
    3990:	cmp	x3, #0xff
    3994:	and	x0, x0, #0xfffffffffffffffe
    3998:	str	x0, [x6, #8]
    399c:	orr	x0, x3, #0x1
    39a0:	str	x0, [x4, #8]
    39a4:	str	x3, [x6]
    39a8:	lsr	x6, x3, #3
    39ac:	b.hi	3d90 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10a4>  // b.pmore
    39b0:	add	x3, x22, #0x198
    39b4:	mov	w2, #0x1                   	// #1
    39b8:	add	x5, x3, #0x68
    39bc:	lsl	w2, w2, w6
    39c0:	add	x0, x5, x6, lsl #4
    39c4:	ldr	w1, [x3, #104]
    39c8:	add	x0, x0, #0x40
    39cc:	tst	w1, w2
    39d0:	b.ne	3d7c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1090>  // b.any
    39d4:	orr	w1, w1, w2
    39d8:	str	w1, [x3, #104]
    39dc:	mov	x1, x0
    39e0:	str	x4, [x0, #16]
    39e4:	str	x4, [x1, #24]
    39e8:	stp	x1, x0, [x4, #16]
    39ec:	b	3f5c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1270>
    39f0:	add	x8, x22, #0x198
    39f4:	add	x4, x8, #0x68
    39f8:	ldr	x3, [x4, #32]
    39fc:	cmp	x2, x3
    3a00:	b.ne	3a24 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd38>  // b.any
    3a04:	ldr	x2, [x4, #8]
    3a08:	str	x1, [x4, #32]
    3a0c:	add	x5, x5, x2
    3a10:	str	x5, [x4, #8]
    3a14:	orr	x2, x5, #0x1
    3a18:	str	x2, [x1, #8]
    3a1c:	str	x5, [x1, x5]
    3a20:	b	2ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1fc>
    3a24:	ldr	x7, [x2, #8]
    3a28:	tbnz	w7, #1, 3a68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd7c>
    3a2c:	and	x9, x7, #0xfffffffffffffffc
    3a30:	lsr	x6, x7, #3
    3a34:	cmp	x7, #0xff
    3a38:	ldr	x3, [x2, #24]
    3a3c:	b.hi	3afc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe10>  // b.pmore
    3a40:	ldr	x7, [x2, #16]
    3a44:	cmp	x7, x3
    3a48:	b.ne	3abc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xdd0>  // b.any
    3a4c:	mov	w3, #0x1                   	// #1
    3a50:	lsl	w6, w3, w6
    3a54:	ldr	w3, [x8, #104]
    3a58:	bic	w6, w3, w6
    3a5c:	str	w6, [x8, #104]
    3a60:	add	x2, x2, x9
    3a64:	add	x5, x5, x9
    3a68:	ldr	x3, [x2, #8]
    3a6c:	lsr	x7, x5, #3
    3a70:	cmp	x5, #0xff
    3a74:	and	x3, x3, #0xfffffffffffffffe
    3a78:	str	x3, [x2, #8]
    3a7c:	orr	x2, x5, #0x1
    3a80:	str	x2, [x1, #8]
    3a84:	str	x5, [x1, x5]
    3a88:	b.hi	3c40 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf54>  // b.pmore
    3a8c:	add	x5, x22, #0x198
    3a90:	mov	w4, #0x1                   	// #1
    3a94:	add	x6, x5, #0x68
    3a98:	lsl	w4, w4, w7
    3a9c:	add	x2, x6, x7, lsl #4
    3aa0:	ldr	w3, [x5, #104]
    3aa4:	add	x2, x2, #0x40
    3aa8:	tst	w3, w4
    3aac:	b.ne	3c2c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf40>  // b.any
    3ab0:	orr	w3, w3, w4
    3ab4:	str	w3, [x5, #104]
    3ab8:	b	3464 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x778>
    3abc:	add	x6, x4, x6, lsl #4
    3ac0:	add	x6, x6, #0x40
    3ac4:	cmp	x7, x6
    3ac8:	b.eq	3ae0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xdf4>  // b.none
    3acc:	ldr	x4, [x4, #24]
    3ad0:	cmp	x7, x4
    3ad4:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3ad8:	cmp	x6, x3
    3adc:	b.eq	3af0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe04>  // b.none
    3ae0:	add	x4, x22, #0x198
    3ae4:	ldr	x4, [x4, #128]
    3ae8:	cmp	x4, x3
    3aec:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3af0:	str	x3, [x7, #24]
    3af4:	str	x7, [x3, #16]
    3af8:	b	3a60 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd74>
    3afc:	cmp	x2, x3
    3b00:	ldr	x6, [x2, #48]
    3b04:	b.eq	3b90 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xea4>  // b.none
    3b08:	ldr	x7, [x2, #16]
    3b0c:	ldr	x4, [x4, #24]
    3b10:	cmp	x7, x4
    3b14:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3b18:	str	x3, [x7, #24]
    3b1c:	str	x7, [x3, #16]
    3b20:	cbz	x6, 3a60 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd74>
    3b24:	ldr	x7, [x2, #56]
    3b28:	add	x4, x22, #0x198
    3b2c:	add	x4, x4, #0x68
    3b30:	add	x8, x7, #0x4a
    3b34:	ldr	x10, [x4, x8, lsl #3]
    3b38:	cmp	x2, x10
    3b3c:	b.ne	3c00 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf14>  // b.any
    3b40:	str	x3, [x4, x8, lsl #3]
    3b44:	cbz	x3, 3be8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xefc>
    3b48:	add	x4, x22, #0x198
    3b4c:	ldr	x7, [x4, #128]
    3b50:	cmp	x3, x7
    3b54:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3b58:	ldr	x4, [x2, #32]
    3b5c:	str	x6, [x3, #48]
    3b60:	cbz	x4, 3b74 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe88>
    3b64:	cmp	x7, x4
    3b68:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3b6c:	str	x4, [x3, #32]
    3b70:	str	x3, [x4, #48]
    3b74:	ldr	x4, [x2, #40]
    3b78:	cbz	x4, 3a60 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd74>
    3b7c:	cmp	x7, x4
    3b80:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3b84:	str	x4, [x3, #40]
    3b88:	str	x3, [x4, #48]
    3b8c:	b	3a60 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd74>
    3b90:	ldr	x3, [x2, #40]
    3b94:	cbz	x3, 3bd8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xeec>
    3b98:	add	x7, x2, #0x28
    3b9c:	mov	x4, x3
    3ba0:	mov	x8, x7
    3ba4:	mov	x3, x4
    3ba8:	add	x7, x4, #0x28
    3bac:	ldr	x4, [x4, #40]
    3bb0:	cbnz	x4, 3ba0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xeb4>
    3bb4:	ldr	x4, [x3, #32]
    3bb8:	add	x7, x3, #0x20
    3bbc:	cbnz	x4, 3ba0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xeb4>
    3bc0:	add	x4, x22, #0x198
    3bc4:	ldr	x4, [x4, #128]
    3bc8:	cmp	x4, x8
    3bcc:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3bd0:	str	xzr, [x8]
    3bd4:	b	3b20 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe34>
    3bd8:	ldr	x3, [x2, #32]
    3bdc:	cbz	x3, 3b20 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe34>
    3be0:	add	x7, x2, #0x20
    3be4:	b	3b9c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xeb0>
    3be8:	ldr	w6, [x4, #4]
    3bec:	mov	w3, #0x1                   	// #1
    3bf0:	lsl	w3, w3, w7
    3bf4:	bic	w3, w6, w3
    3bf8:	str	w3, [x4, #4]
    3bfc:	b	3a60 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd74>
    3c00:	ldr	x4, [x4, #24]
    3c04:	cmp	x6, x4
    3c08:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3c0c:	ldr	x4, [x6, #32]
    3c10:	cmp	x2, x4
    3c14:	b.ne	3c24 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf38>  // b.any
    3c18:	str	x3, [x6, #32]
    3c1c:	cbnz	x3, 3b48 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe5c>
    3c20:	b	3a60 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd74>
    3c24:	str	x3, [x6, #40]
    3c28:	b	3c1c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf30>
    3c2c:	ldr	x3, [x2, #16]
    3c30:	ldr	x4, [x6, #24]
    3c34:	cmp	x3, x4
    3c38:	b.cs	34a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7b4>  // b.hs, b.nlast
    3c3c:	b	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>
    3c40:	lsr	x8, x5, #8
    3c44:	stp	xzr, xzr, [x1, #32]
    3c48:	sub	w4, w8, #0x100
    3c4c:	lsr	w4, w4, #16
    3c50:	and	w4, w4, #0x8
    3c54:	lsl	w3, w8, w4
    3c58:	sub	w7, w3, #0x1, lsl #12
    3c5c:	lsr	w7, w7, #16
    3c60:	and	w7, w7, #0x4
    3c64:	orr	w4, w4, w7
    3c68:	lsl	w3, w3, w7
    3c6c:	sub	w6, w3, #0x4, lsl #12
    3c70:	mov	w7, #0x1                   	// #1
    3c74:	lsr	w6, w6, #16
    3c78:	and	w6, w6, #0x2
    3c7c:	add	w4, w4, w6
    3c80:	lsl	w2, w3, w6
    3c84:	lsr	w2, w2, #15
    3c88:	sub	w2, w2, w4
    3c8c:	add	w3, w2, #0x15
    3c90:	add	w2, w2, #0xe
    3c94:	lsr	x3, x5, x3
    3c98:	lsl	w2, w2, #1
    3c9c:	and	x3, x3, #0x1
    3ca0:	add	x2, x3, x2
    3ca4:	mov	x3, #0xffff                	// #65535
    3ca8:	cmp	x8, x3
    3cac:	mov	x3, #0x1f                  	// #31
    3cb0:	csel	x2, x2, x3, ls  // ls = plast
    3cb4:	add	x3, x22, #0x198
    3cb8:	str	x2, [x1, #56]
    3cbc:	add	x3, x3, #0x68
    3cc0:	lsl	w7, w7, w2
    3cc4:	add	x4, x2, #0x4a
    3cc8:	ldr	w6, [x3, #4]
    3ccc:	tst	w6, w7
    3cd0:	b.ne	3cec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1000>  // b.any
    3cd4:	orr	w6, w6, w7
    3cd8:	str	x1, [x3, x4, lsl #3]
    3cdc:	str	w6, [x3, #4]
    3ce0:	add	x3, x3, x4, lsl #3
    3ce4:	str	x3, [x1, #48]
    3ce8:	b	3558 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x86c>
    3cec:	lsr	x6, x2, #1
    3cf0:	cmp	x2, #0x1f
    3cf4:	ldr	x3, [x3, x4, lsl #3]
    3cf8:	mov	w4, #0x39                  	// #57
    3cfc:	sub	w4, w4, w6
    3d00:	csel	w2, w4, wzr, ne  // ne = any
    3d04:	lsl	x2, x5, x2
    3d08:	ldr	x4, [x3, #8]
    3d0c:	and	x4, x4, #0xfffffffffffffffc
    3d10:	cmp	x5, x4
    3d14:	b.eq	3d50 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1064>  // b.none
    3d18:	lsr	x4, x2, #63
    3d1c:	lsl	x2, x2, #1
    3d20:	add	x4, x4, #0x4
    3d24:	ldr	x6, [x3, x4, lsl #3]
    3d28:	cbnz	x6, 3d48 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x105c>
    3d2c:	add	x5, x22, #0x198
    3d30:	add	x2, x3, x4, lsl #3
    3d34:	ldr	x5, [x5, #128]
    3d38:	cmp	x5, x2
    3d3c:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3d40:	str	x1, [x3, x4, lsl #3]
    3d44:	b	3ce4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xff8>
    3d48:	mov	x3, x6
    3d4c:	b	3d08 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x101c>
    3d50:	add	x4, x22, #0x198
    3d54:	ldr	x2, [x3, #16]
    3d58:	ldr	x4, [x4, #128]
    3d5c:	cmp	x3, x4
    3d60:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3d64:	cmp	x2, x4
    3d68:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3d6c:	str	x1, [x2, #24]
    3d70:	str	x1, [x3, #16]
    3d74:	stp	x2, x3, [x1, #16]
    3d78:	b	35dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8f0>
    3d7c:	ldr	x1, [x0, #16]
    3d80:	ldr	x2, [x5, #24]
    3d84:	cmp	x1, x2
    3d88:	b.cs	39e0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xcf4>  // b.hs, b.nlast
    3d8c:	b	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>
    3d90:	lsr	x7, x3, #8
    3d94:	stp	xzr, xzr, [x4, #32]
    3d98:	sub	w2, w7, #0x100
    3d9c:	lsr	w2, w2, #16
    3da0:	and	w2, w2, #0x8
    3da4:	lsl	w1, w7, w2
    3da8:	sub	w6, w1, #0x1, lsl #12
    3dac:	lsr	w6, w6, #16
    3db0:	and	w6, w6, #0x4
    3db4:	orr	w2, w2, w6
    3db8:	lsl	w1, w1, w6
    3dbc:	sub	w5, w1, #0x4, lsl #12
    3dc0:	mov	w6, #0x1                   	// #1
    3dc4:	lsr	w5, w5, #16
    3dc8:	and	w5, w5, #0x2
    3dcc:	add	w2, w2, w5
    3dd0:	lsl	w0, w1, w5
    3dd4:	lsr	w0, w0, #15
    3dd8:	sub	w0, w0, w2
    3ddc:	add	w1, w0, #0x15
    3de0:	add	w0, w0, #0xe
    3de4:	lsr	x1, x3, x1
    3de8:	lsl	w0, w0, #1
    3dec:	and	x1, x1, #0x1
    3df0:	add	x0, x1, x0
    3df4:	mov	x1, #0xffff                	// #65535
    3df8:	cmp	x7, x1
    3dfc:	mov	x1, #0x1f                  	// #31
    3e00:	csel	x0, x0, x1, ls  // ls = plast
    3e04:	add	x1, x22, #0x198
    3e08:	str	x0, [x4, #56]
    3e0c:	add	x1, x1, #0x68
    3e10:	lsl	w6, w6, w0
    3e14:	add	x2, x0, #0x4a
    3e18:	ldr	w5, [x1, #4]
    3e1c:	tst	w5, w6
    3e20:	b.ne	3e40 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1154>  // b.any
    3e24:	orr	w5, w5, w6
    3e28:	str	x4, [x1, x2, lsl #3]
    3e2c:	str	w5, [x1, #4]
    3e30:	add	x1, x1, x2, lsl #3
    3e34:	stp	x4, x4, [x4, #16]
    3e38:	str	x1, [x4, #48]
    3e3c:	b	3f5c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1270>
    3e40:	lsr	x5, x0, #1
    3e44:	cmp	x0, #0x1f
    3e48:	ldr	x1, [x1, x2, lsl #3]
    3e4c:	mov	w2, #0x39                  	// #57
    3e50:	sub	w2, w2, w5
    3e54:	csel	w0, w2, wzr, ne  // ne = any
    3e58:	lsl	x0, x3, x0
    3e5c:	ldr	x2, [x1, #8]
    3e60:	and	x2, x2, #0xfffffffffffffffc
    3e64:	cmp	x3, x2
    3e68:	b.eq	3ea4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11b8>  // b.none
    3e6c:	lsr	x2, x0, #63
    3e70:	lsl	x0, x0, #1
    3e74:	add	x2, x2, #0x4
    3e78:	ldr	x5, [x1, x2, lsl #3]
    3e7c:	cbnz	x5, 3e9c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11b0>
    3e80:	add	x3, x22, #0x198
    3e84:	add	x0, x1, x2, lsl #3
    3e88:	ldr	x3, [x3, #128]
    3e8c:	cmp	x3, x0
    3e90:	b.hi	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.pmore
    3e94:	str	x4, [x1, x2, lsl #3]
    3e98:	b	3e34 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1148>
    3e9c:	mov	x1, x5
    3ea0:	b	3e5c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1170>
    3ea4:	add	x2, x22, #0x198
    3ea8:	ldr	x0, [x1, #16]
    3eac:	ldr	x2, [x2, #128]
    3eb0:	cmp	x1, x2
    3eb4:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3eb8:	cmp	x0, x2
    3ebc:	b.cc	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.lo, b.ul, b.last
    3ec0:	str	x4, [x0, #24]
    3ec4:	str	x4, [x1, #16]
    3ec8:	stp	x0, x1, [x4, #16]
    3ecc:	str	xzr, [x4, #48]
    3ed0:	b	3f5c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1270>
    3ed4:	ldr	x1, [x23, #952]
    3ed8:	add	x0, x23, #0x68
    3edc:	ldr	x2, [x0, #856]
    3ee0:	add	x1, x24, x1
    3ee4:	str	x1, [x0, #848]
    3ee8:	cmp	x1, x2
    3eec:	b.ls	3ef4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1208>  // b.plast
    3ef0:	str	x1, [x0, #856]
    3ef4:	add	x0, x22, #0x198
    3ef8:	sub	x7, x24, #0x8
    3efc:	add	x8, x19, x7
    3f00:	ldr	x4, [x0, #144]
    3f04:	cbnz	x4, 3884 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb98>
    3f08:	str	x24, [x0, #1032]
    3f0c:	str	x19, [x0, #128]
    3f10:	ldr	x2, [x19, x7]
    3f14:	str	x2, [x0, #1048]
    3f18:	str	x19, [x0, #1024]
    3f1c:	ldr	x3, [x8, x2]
    3f20:	cmp	x2, x3
    3f24:	b.ne	3030 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x344>  // b.any
    3f28:	str	xzr, [x19, x7]
    3f2c:	add	x0, x0, #0xa8
    3f30:	ldur	x2, [x0, #-160]
    3f34:	mov	x1, #0x0                   	// #0
    3f38:	stur	x2, [x0, #-8]
    3f3c:	stp	x0, x0, [x0, #16]
    3f40:	add	x1, x1, #0x1
    3f44:	cmp	x1, #0x20
    3f48:	add	x0, x0, #0x10
    3f4c:	b.ne	3f3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1250>  // b.any
    3f50:	sub	x1, x24, #0x48
    3f54:	mov	x0, x19
    3f58:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x364>
    3f5c:	add	x2, x22, #0x198
    3f60:	add	x2, x2, #0x68
    3f64:	ldr	x1, [x2, #16]
    3f68:	cmp	x21, x1
    3f6c:	b.cs	37b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xac4>  // b.hs, b.nlast
    3f70:	ldr	x0, [x2, #40]
    3f74:	sub	x1, x1, x21
    3f78:	str	x1, [x2, #16]
    3f7c:	orr	x1, x1, #0x1
    3f80:	add	x3, x0, x21
    3f84:	str	x3, [x2, #40]
    3f88:	str	x1, [x3, #8]
    3f8c:	b	3628 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x93c>
    3f90:	mov	x4, x0
    3f94:	stp	x29, x30, [sp, #-16]!
    3f98:	mov	x29, sp
    3f9c:	bl	2c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7a8>
    3fa0:	cbz	x0, 3fac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12c0>
    3fa4:	ldr	x0, [x0, #24]
    3fa8:	add	x4, x4, x0
    3fac:	mov	x0, x4
    3fb0:	ldp	x29, x30, [sp], #16
    3fb4:	ret

0000000000003fb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0>:
    3fb8:	cbz	x0, 4a0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa54>
    3fbc:	stp	x29, x30, [sp, #-112]!
    3fc0:	mov	x29, sp
    3fc4:	stp	x19, x20, [sp, #16]
    3fc8:	adrp	x20, 17000 <memcpy@GLIBC_2.17>
    3fcc:	stp	x21, x22, [sp, #32]
    3fd0:	mov	x21, x0
    3fd4:	add	x0, x20, #0x198
    3fd8:	stp	x23, x24, [sp, #48]
    3fdc:	ldr	x0, [x0, #16]
    3fe0:	stp	x25, x26, [sp, #64]
    3fe4:	stp	x27, x28, [sp, #80]
    3fe8:	cbnz	x0, 3ff0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x38>
    3fec:	bl	2528 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74>
    3ff0:	add	x0, x20, #0x198
    3ff4:	ldr	w1, [x0, #968]
    3ff8:	tbnz	w1, #1, 4018 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x60>
    3ffc:	add	x8, x20, #0x198
    4000:	sub	x0, x21, #0x10
    4004:	add	x19, x8, #0x68
    4008:	ldr	x3, [x19, #24]
    400c:	cmp	x0, x3
    4010:	b.cs	4040 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x88>  // b.hs, b.nlast
    4014:	bl	1ad0 <abort@plt>
    4018:	add	x0, x0, #0x3d0
    401c:	bl	1c00 <pthread_mutex_lock@plt>
    4020:	cbz	w0, 3ffc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x44>
    4024:	ldp	x19, x20, [sp, #16]
    4028:	ldp	x21, x22, [sp, #32]
    402c:	ldp	x23, x24, [sp, #48]
    4030:	ldp	x25, x26, [sp, #64]
    4034:	ldp	x27, x28, [sp, #80]
    4038:	ldp	x29, x30, [sp], #112
    403c:	ret
    4040:	ldur	x2, [x21, #-8]
    4044:	tbz	w2, #1, 4014 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c>
    4048:	and	x1, x2, #0xfffffffffffffffc
    404c:	add	x4, x0, x1
    4050:	tbnz	w2, #0, 40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    4054:	ldur	x5, [x21, #-16]
    4058:	tbz	w5, #0, 40b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf8>
    405c:	and	x5, x5, #0xfffffffffffffffe
    4060:	add	x1, x1, x5
    4064:	sub	x0, x0, x5
    4068:	add	x21, x1, #0x20
    406c:	mov	x1, x21
    4070:	bl	2c94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7e0>
    4074:	cbnz	w0, 4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    4078:	ldr	x1, [x19, #848]
    407c:	sub	x1, x1, x21
    4080:	str	x1, [x19, #848]
    4084:	add	x0, x20, #0x198
    4088:	ldr	w1, [x0, #968]
    408c:	tbz	w1, #1, 4024 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6c>
    4090:	ldp	x19, x20, [sp, #16]
    4094:	add	x0, x0, #0x3d0
    4098:	ldp	x21, x22, [sp, #32]
    409c:	ldp	x23, x24, [sp, #48]
    40a0:	ldp	x25, x26, [sp, #64]
    40a4:	ldp	x27, x28, [sp, #80]
    40a8:	ldp	x29, x30, [sp], #112
    40ac:	b	1c10 <pthread_mutex_unlock@plt>
    40b0:	sub	x0, x0, x5
    40b4:	add	x1, x1, x5
    40b8:	cmp	x3, x0
    40bc:	b.hi	4014 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c>  // b.pmore
    40c0:	ldr	x2, [x19, #32]
    40c4:	cmp	x0, x2
    40c8:	b.eq	42ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x334>  // b.none
    40cc:	lsr	x6, x5, #3
    40d0:	cmp	x5, #0xff
    40d4:	ldr	x2, [x0, #24]
    40d8:	b.hi	41d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x218>  // b.pmore
    40dc:	ldr	x7, [x0, #16]
    40e0:	cmp	x7, x2
    40e4:	b.ne	419c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e4>  // b.any
    40e8:	mov	w5, #0x1                   	// #1
    40ec:	lsl	w6, w5, w6
    40f0:	ldr	w5, [x8, #104]
    40f4:	bic	w6, w5, w6
    40f8:	str	w6, [x8, #104]
    40fc:	cmp	x4, x0
    4100:	b.ls	4014 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c>  // b.plast
    4104:	ldr	x2, [x4, #8]
    4108:	tbz	w2, #0, 4014 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c>
    410c:	and	x22, x2, #0x2
    4110:	tbnz	w2, #1, 486c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8b4>
    4114:	add	x9, x20, #0x198
    4118:	add	x6, x9, #0x68
    411c:	ldp	x8, x5, [x6, #32]
    4120:	cmp	x4, x5
    4124:	b.ne	46a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6e8>  // b.any
    4128:	ldr	x21, [x6, #16]
    412c:	str	x0, [x6, #40]
    4130:	cmp	x0, x8
    4134:	add	x1, x1, x21
    4138:	str	x1, [x6, #16]
    413c:	orr	x2, x1, #0x1
    4140:	str	x2, [x0, #8]
    4144:	b.ne	4150 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x198>  // b.any
    4148:	str	xzr, [x6, #8]
    414c:	str	xzr, [x6, #32]
    4150:	add	x4, x20, #0x198
    4154:	ldr	x2, [x4, #152]
    4158:	cmp	x1, x2
    415c:	b.ls	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>  // b.plast
    4160:	cmp	x1, #0x48
    4164:	b.hi	4318 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x360>  // b.pmore
    4168:	mov	x21, #0x0                   	// #0
    416c:	add	x23, x20, #0x198
    4170:	mov	w26, #0x1                   	// #1
    4174:	add	x7, x23, #0x400
    4178:	mov	w28, #0x39                  	// #57
    417c:	ldr	x25, [x23, #1040]
    4180:	cbnz	x25, 43b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3fc>
    4184:	cmn	x21, x22
    4188:	b.ne	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>  // b.any
    418c:	add	x0, x20, #0x198
    4190:	mov	x1, #0xffffffffffffffff    	// #-1
    4194:	str	x1, [x0, #152]
    4198:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    419c:	add	x5, x19, x6, lsl #4
    41a0:	add	x5, x5, #0x40
    41a4:	cmp	x7, x5
    41a8:	b.eq	41bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x204>  // b.none
    41ac:	cmp	x3, x7
    41b0:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    41b4:	cmp	x5, x2
    41b8:	b.eq	41c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20c>  // b.none
    41bc:	cmp	x3, x2
    41c0:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    41c4:	str	x2, [x7, #24]
    41c8:	str	x7, [x2, #16]
    41cc:	b	40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    41d0:	cmp	x0, x2
    41d4:	ldr	x6, [x0, #48]
    41d8:	b.eq	4224 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x26c>  // b.none
    41dc:	ldr	x5, [x0, #16]
    41e0:	cmp	x3, x5
    41e4:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    41e8:	str	x2, [x5, #24]
    41ec:	str	x5, [x2, #16]
    41f0:	cbz	x6, 40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    41f4:	ldr	x7, [x0, #56]
    41f8:	add	x5, x20, #0x198
    41fc:	add	x5, x5, #0x68
    4200:	add	x8, x7, #0x4a
    4204:	ldr	x9, [x5, x8, lsl #3]
    4208:	cmp	x0, x9
    420c:	b.ne	428c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2d4>  // b.any
    4210:	str	x2, [x5, x8, lsl #3]
    4214:	cbz	x2, 4274 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2bc>
    4218:	cmp	x3, x2
    421c:	b.ls	42b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2fc>  // b.plast
    4220:	bl	1ad0 <abort@plt>
    4224:	ldr	x2, [x0, #40]
    4228:	cbz	x2, 4264 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ac>
    422c:	add	x7, x0, #0x28
    4230:	mov	x5, x2
    4234:	mov	x8, x7
    4238:	mov	x2, x5
    423c:	add	x7, x5, #0x28
    4240:	ldr	x5, [x5, #40]
    4244:	cbnz	x5, 4234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27c>
    4248:	ldr	x5, [x2, #32]
    424c:	add	x7, x2, #0x20
    4250:	cbnz	x5, 4234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x27c>
    4254:	cmp	x3, x8
    4258:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    425c:	str	xzr, [x8]
    4260:	b	41f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x238>
    4264:	ldr	x2, [x0, #32]
    4268:	cbz	x2, 41f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x238>
    426c:	add	x7, x0, #0x20
    4270:	b	4230 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x278>
    4274:	ldr	w6, [x5, #4]
    4278:	mov	w2, #0x1                   	// #1
    427c:	lsl	w2, w2, w7
    4280:	bic	w2, w6, w2
    4284:	str	w2, [x5, #4]
    4288:	b	40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    428c:	cmp	x3, x6
    4290:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    4294:	ldr	x5, [x6, #32]
    4298:	cmp	x0, x5
    429c:	b.ne	42ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2f4>  // b.any
    42a0:	str	x2, [x6, #32]
    42a4:	cbnz	x2, 4218 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x260>
    42a8:	b	40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    42ac:	str	x2, [x6, #40]
    42b0:	b	42a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ec>
    42b4:	ldr	x5, [x0, #32]
    42b8:	str	x6, [x2, #48]
    42bc:	cbz	x5, 42d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x318>
    42c0:	cmp	x3, x5
    42c4:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    42c8:	str	x5, [x2, #32]
    42cc:	str	x2, [x5, #48]
    42d0:	ldr	x5, [x0, #40]
    42d4:	cbz	x5, 40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    42d8:	cmp	x3, x5
    42dc:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    42e0:	str	x5, [x2, #40]
    42e4:	str	x2, [x5, #48]
    42e8:	b	40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>
    42ec:	ldr	x2, [x4, #8]
    42f0:	and	x5, x2, #0x3
    42f4:	cmp	x5, #0x3
    42f8:	b.ne	40fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>  // b.any
    42fc:	str	x1, [x19, #8]
    4300:	and	x2, x2, #0xfffffffffffffffe
    4304:	str	x2, [x4, #8]
    4308:	orr	x2, x1, #0x1
    430c:	str	x2, [x0, #8]
    4310:	str	x1, [x4]
    4314:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    4318:	ldr	x2, [x4, #24]
    431c:	sub	x21, x2, #0x49
    4320:	add	x21, x21, x1
    4324:	udiv	x21, x21, x2
    4328:	sub	x21, x21, #0x1
    432c:	mul	x21, x21, x2
    4330:	bl	2c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7a8>
    4334:	ldr	x2, [x0, #8]
    4338:	mov	x19, x0
    433c:	cmp	x21, x2
    4340:	b.hi	4168 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b0>  // b.pmore
    4344:	ldr	x0, [x0]
    4348:	add	x1, x4, #0x400
    434c:	add	x3, x0, x2
    4350:	cmp	x0, x1
    4354:	b.hi	4360 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3a8>  // b.pmore
    4358:	cmp	x1, x3
    435c:	b.cc	4168 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b0>  // b.lo, b.ul, b.last
    4360:	ldr	x1, [x1, #16]
    4364:	cbnz	x1, 4350 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x398>
    4368:	sub	x2, x2, x21
    436c:	mov	x1, x21
    4370:	add	x0, x0, x2
    4374:	bl	2c94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7e0>
    4378:	cbnz	w0, 4168 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b0>
    437c:	cbz	x21, 416c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b4>
    4380:	ldr	x0, [x19, #8]
    4384:	sub	x0, x0, x21
    4388:	str	x0, [x19, #8]
    438c:	add	x0, x20, #0x198
    4390:	add	x0, x0, #0x68
    4394:	ldr	x1, [x0, #848]
    4398:	sub	x1, x1, x21
    439c:	str	x1, [x0, #848]
    43a0:	ldr	x1, [x0, #16]
    43a4:	ldr	x0, [x0, #40]
    43a8:	sub	x1, x1, x21
    43ac:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x364>
    43b0:	b	416c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1b4>
    43b4:	ldr	x0, [x25]
    43b8:	ldr	x27, [x25, #16]
    43bc:	add	x1, x0, #0x10
    43c0:	ands	x19, x0, #0x7
    43c4:	b.eq	43d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x418>  // b.none
    43c8:	neg	x19, x1
    43cc:	and	x19, x19, #0x7
    43d0:	add	x19, x0, x19
    43d4:	ldr	x24, [x19, #8]
    43d8:	tbnz	w24, #1, 443c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x484>
    43dc:	ldr	x1, [x25, #8]
    43e0:	and	x24, x24, #0xfffffffffffffffc
    43e4:	add	x3, x19, x24
    43e8:	sub	x2, x1, #0x48
    43ec:	add	x2, x0, x2
    43f0:	cmp	x3, x2
    43f4:	b.cc	443c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x484>  // b.lo, b.ul, b.last
    43f8:	ldr	x2, [x23, #136]
    43fc:	add	x3, x23, #0x68
    4400:	cmp	x19, x2
    4404:	b.ne	4448 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x490>  // b.any
    4408:	str	xzr, [x3, #8]
    440c:	str	xzr, [x3, #32]
    4410:	stp	x1, x7, [sp, #96]
    4414:	bl	2c94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7e0>
    4418:	mov	x4, #0xffff                	// #65535
    441c:	cbnz	w0, 456c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5b4>
    4420:	ldp	x1, x7, [sp, #96]
    4424:	ldr	x0, [x23, #952]
    4428:	add	x22, x22, x1
    442c:	mov	x25, x7
    4430:	sub	x1, x0, x1
    4434:	str	x1, [x23, #952]
    4438:	str	x27, [x7, #16]
    443c:	mov	x7, x25
    4440:	mov	x25, x27
    4444:	b	4180 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c8>
    4448:	ldr	x2, [x19, #24]
    444c:	ldr	x5, [x19, #48]
    4450:	cmp	x19, x2
    4454:	b.eq	44d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x520>  // b.none
    4458:	ldr	x6, [x19, #16]
    445c:	ldr	x3, [x3, #24]
    4460:	cmp	x6, x3
    4464:	b.cc	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.lo, b.ul, b.last
    4468:	str	x2, [x6, #24]
    446c:	str	x6, [x2, #16]
    4470:	cbz	x5, 4410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x458>
    4474:	ldr	x3, [x19, #56]
    4478:	add	x6, x23, #0x68
    447c:	add	x8, x3, #0x4a
    4480:	ldr	x9, [x6, x8, lsl #3]
    4484:	cmp	x19, x9
    4488:	b.ne	4540 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x588>  // b.any
    448c:	str	x2, [x6, x8, lsl #3]
    4490:	cbz	x2, 452c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x574>
    4494:	ldr	x6, [x23, #128]
    4498:	cmp	x2, x6
    449c:	b.cc	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.lo, b.ul, b.last
    44a0:	ldr	x3, [x19, #32]
    44a4:	str	x5, [x2, #48]
    44a8:	cbz	x3, 44bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x504>
    44ac:	cmp	x6, x3
    44b0:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    44b4:	str	x3, [x2, #32]
    44b8:	str	x2, [x3, #48]
    44bc:	ldr	x3, [x19, #40]
    44c0:	cbz	x3, 4410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x458>
    44c4:	cmp	x6, x3
    44c8:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    44cc:	str	x3, [x2, #40]
    44d0:	str	x2, [x3, #48]
    44d4:	b	4410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x458>
    44d8:	ldr	x2, [x19, #40]
    44dc:	cbz	x2, 451c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x564>
    44e0:	add	x6, x19, #0x28
    44e4:	mov	x3, x2
    44e8:	mov	x8, x6
    44ec:	mov	x2, x3
    44f0:	add	x6, x3, #0x28
    44f4:	ldr	x3, [x3, #40]
    44f8:	cbnz	x3, 44e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x530>
    44fc:	ldr	x3, [x2, #32]
    4500:	add	x6, x2, #0x20
    4504:	cbnz	x3, 44e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x530>
    4508:	ldr	x3, [x23, #128]
    450c:	cmp	x3, x8
    4510:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    4514:	str	xzr, [x8]
    4518:	b	4470 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b8>
    451c:	ldr	x2, [x19, #32]
    4520:	cbz	x2, 4470 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4b8>
    4524:	add	x6, x19, #0x20
    4528:	b	44e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x52c>
    452c:	ldr	w2, [x6, #4]
    4530:	lsl	w3, w26, w3
    4534:	bic	w3, w2, w3
    4538:	str	w3, [x6, #4]
    453c:	b	4410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x458>
    4540:	ldr	x3, [x6, #24]
    4544:	cmp	x5, x3
    4548:	b.cc	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.lo, b.ul, b.last
    454c:	ldr	x3, [x5, #32]
    4550:	cmp	x19, x3
    4554:	b.ne	4564 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5ac>  // b.any
    4558:	str	x2, [x5, #32]
    455c:	cbnz	x2, 4494 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    4560:	b	4410 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x458>
    4564:	str	x2, [x5, #40]
    4568:	b	455c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5a4>
    456c:	lsr	x2, x24, #8
    4570:	cmp	xzr, x24, lsr #8
    4574:	b.eq	45dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x624>  // b.none
    4578:	sub	w3, w2, #0x100
    457c:	cmp	x2, x4
    4580:	lsr	w3, w3, #16
    4584:	and	w3, w3, #0x8
    4588:	lsl	w1, w2, w3
    458c:	sub	w6, w1, #0x1, lsl #12
    4590:	mov	x2, #0x1f                  	// #31
    4594:	lsr	w6, w6, #16
    4598:	and	w6, w6, #0x4
    459c:	orr	w3, w3, w6
    45a0:	lsl	w1, w1, w6
    45a4:	sub	w5, w1, #0x4, lsl #12
    45a8:	lsr	w5, w5, #16
    45ac:	and	w5, w5, #0x2
    45b0:	add	w3, w3, w5
    45b4:	lsl	w0, w1, w5
    45b8:	lsr	w0, w0, #15
    45bc:	sub	w0, w0, w3
    45c0:	add	w1, w0, #0x15
    45c4:	add	w0, w0, #0xe
    45c8:	lsr	x1, x24, x1
    45cc:	lsl	w0, w0, #1
    45d0:	and	x1, x1, #0x1
    45d4:	add	x0, x1, x0
    45d8:	csel	x2, x0, x2, ls  // ls = plast
    45dc:	ldr	w3, [x23, #108]
    45e0:	add	x0, x23, #0x68
    45e4:	stp	xzr, xzr, [x19, #32]
    45e8:	lsl	w5, w26, w2
    45ec:	add	x1, x2, #0x4a
    45f0:	str	x2, [x19, #56]
    45f4:	tst	w3, w5
    45f8:	b.ne	4618 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x660>  // b.any
    45fc:	orr	w3, w3, w5
    4600:	str	x19, [x0, x1, lsl #3]
    4604:	str	w3, [x0, #4]
    4608:	add	x0, x0, x1, lsl #3
    460c:	stp	x19, x19, [x19, #16]
    4610:	str	x0, [x19, #48]
    4614:	b	443c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x484>
    4618:	ldr	x0, [x0, x1, lsl #3]
    461c:	lsr	x1, x2, #1
    4620:	sub	w1, w28, w1
    4624:	cmp	x2, #0x1f
    4628:	csel	w1, w1, wzr, ne  // ne = any
    462c:	lsl	x1, x24, x1
    4630:	ldr	x2, [x0, #8]
    4634:	and	x2, x2, #0xfffffffffffffffc
    4638:	cmp	x24, x2
    463c:	b.eq	4674 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6bc>  // b.none
    4640:	lsr	x2, x1, #63
    4644:	lsl	x1, x1, #1
    4648:	add	x2, x2, #0x4
    464c:	ldr	x3, [x0, x2, lsl #3]
    4650:	cbnz	x3, 466c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6b4>
    4654:	ldr	x3, [x23, #128]
    4658:	add	x1, x0, x2, lsl #3
    465c:	cmp	x3, x1
    4660:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    4664:	str	x19, [x0, x2, lsl #3]
    4668:	b	460c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x654>
    466c:	mov	x0, x3
    4670:	b	4630 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x678>
    4674:	ldr	x2, [x23, #128]
    4678:	ldr	x1, [x0, #16]
    467c:	cmp	x0, x2
    4680:	b.cc	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.lo, b.ul, b.last
    4684:	cmp	x1, x2
    4688:	b.cc	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.lo, b.ul, b.last
    468c:	str	x19, [x1, #24]
    4690:	str	x19, [x0, #16]
    4694:	stp	x1, x0, [x19, #16]
    4698:	str	xzr, [x19, #48]
    469c:	b	443c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x484>
    46a0:	cmp	x4, x8
    46a4:	b.ne	46c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x710>  // b.any
    46a8:	ldr	x2, [x6, #8]
    46ac:	str	x0, [x6, #32]
    46b0:	add	x1, x1, x2
    46b4:	str	x1, [x6, #8]
    46b8:	orr	x2, x1, #0x1
    46bc:	str	x2, [x0, #8]
    46c0:	str	x1, [x0, x1]
    46c4:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    46c8:	and	x5, x2, #0xfffffffffffffffc
    46cc:	add	x1, x1, x5
    46d0:	cmp	x5, #0xff
    46d4:	lsr	x7, x5, #3
    46d8:	ldr	x2, [x4, #24]
    46dc:	b.hi	4754 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x79c>  // b.pmore
    46e0:	ldr	x4, [x4, #16]
    46e4:	cmp	x2, x4
    46e8:	b.ne	4720 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x768>  // b.any
    46ec:	mov	w6, #0x1                   	// #1
    46f0:	lsl	w7, w6, w7
    46f4:	ldr	w6, [x9, #104]
    46f8:	bic	w7, w6, w7
    46fc:	str	w7, [x9, #104]
    4700:	orr	x2, x1, #0x1
    4704:	str	x2, [x0, #8]
    4708:	str	x1, [x0, x1]
    470c:	cmp	x0, x8
    4710:	b.ne	4880 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8c8>  // b.any
    4714:	add	x0, x20, #0x198
    4718:	str	x1, [x0, #112]
    471c:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    4720:	add	x6, x6, x7, lsl #4
    4724:	add	x6, x6, #0x40
    4728:	cmp	x4, x6
    472c:	b.eq	4740 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x788>  // b.none
    4730:	cmp	x3, x4
    4734:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    4738:	cmp	x2, x6
    473c:	b.eq	4748 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x790>  // b.none
    4740:	cmp	x3, x2
    4744:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    4748:	str	x2, [x4, #24]
    474c:	str	x4, [x2, #16]
    4750:	b	4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    4754:	cmp	x4, x2
    4758:	ldr	x6, [x4, #48]
    475c:	b.eq	47dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x824>  // b.none
    4760:	ldr	x5, [x4, #16]
    4764:	cmp	x3, x5
    4768:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    476c:	str	x2, [x5, #24]
    4770:	str	x5, [x2, #16]
    4774:	cbz	x6, 4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    4778:	ldr	x7, [x4, #56]
    477c:	add	x5, x20, #0x198
    4780:	add	x5, x5, #0x68
    4784:	add	x9, x7, #0x4a
    4788:	ldr	x10, [x5, x9, lsl #3]
    478c:	cmp	x4, x10
    4790:	b.ne	4844 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x88c>  // b.any
    4794:	str	x2, [x5, x9, lsl #3]
    4798:	cbz	x2, 482c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x874>
    479c:	cmp	x3, x2
    47a0:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    47a4:	ldr	x5, [x4, #32]
    47a8:	str	x6, [x2, #48]
    47ac:	cbz	x5, 47c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x808>
    47b0:	cmp	x3, x5
    47b4:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    47b8:	str	x5, [x2, #32]
    47bc:	str	x2, [x5, #48]
    47c0:	ldr	x4, [x4, #40]
    47c4:	cbz	x4, 4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    47c8:	cmp	x3, x4
    47cc:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    47d0:	str	x4, [x2, #40]
    47d4:	str	x2, [x4, #48]
    47d8:	b	4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    47dc:	ldr	x2, [x4, #40]
    47e0:	cbz	x2, 481c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x864>
    47e4:	add	x7, x4, #0x28
    47e8:	mov	x5, x2
    47ec:	mov	x9, x7
    47f0:	mov	x2, x5
    47f4:	add	x7, x5, #0x28
    47f8:	ldr	x5, [x5, #40]
    47fc:	cbnz	x5, 47ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x834>
    4800:	ldr	x5, [x2, #32]
    4804:	add	x7, x2, #0x20
    4808:	cbnz	x5, 47ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x834>
    480c:	cmp	x3, x9
    4810:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    4814:	str	xzr, [x9]
    4818:	b	4774 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7bc>
    481c:	ldr	x2, [x4, #32]
    4820:	cbz	x2, 4774 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7bc>
    4824:	add	x7, x4, #0x20
    4828:	b	47e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x830>
    482c:	ldr	w4, [x5, #4]
    4830:	mov	w2, #0x1                   	// #1
    4834:	lsl	w2, w2, w7
    4838:	bic	w2, w4, w2
    483c:	str	w2, [x5, #4]
    4840:	b	4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    4844:	cmp	x3, x6
    4848:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    484c:	ldr	x5, [x6, #32]
    4850:	cmp	x4, x5
    4854:	b.ne	4864 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8ac>  // b.any
    4858:	str	x2, [x6, #32]
    485c:	cbnz	x2, 479c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7e4>
    4860:	b	4700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x748>
    4864:	str	x2, [x6, #40]
    4868:	b	485c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8a4>
    486c:	and	x2, x2, #0xfffffffffffffffe
    4870:	str	x2, [x4, #8]
    4874:	orr	x2, x1, #0x1
    4878:	str	x2, [x0, #8]
    487c:	str	x1, [x0, x1]
    4880:	lsr	x6, x1, #3
    4884:	cmp	x1, #0xff
    4888:	b.hi	48d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x920>  // b.pmore
    488c:	add	x5, x20, #0x198
    4890:	mov	w4, #0x1                   	// #1
    4894:	add	x1, x5, x6, lsl #4
    4898:	lsl	w4, w4, w6
    489c:	add	x1, x1, #0xa8
    48a0:	ldr	w2, [x5, #104]
    48a4:	tst	w2, w4
    48a8:	b.ne	48c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x910>  // b.any
    48ac:	orr	w2, w2, w4
    48b0:	str	w2, [x5, #104]
    48b4:	mov	x2, x1
    48b8:	str	x0, [x1, #16]
    48bc:	str	x0, [x2, #24]
    48c0:	stp	x2, x1, [x0, #16]
    48c4:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    48c8:	ldr	x2, [x1, #16]
    48cc:	cmp	x3, x2
    48d0:	b.ls	48b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x900>  // b.plast
    48d4:	b	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>
    48d8:	lsr	x8, x1, #8
    48dc:	stp	xzr, xzr, [x0, #32]
    48e0:	sub	w5, w8, #0x100
    48e4:	lsr	w5, w5, #16
    48e8:	and	w5, w5, #0x8
    48ec:	lsl	w4, w8, w5
    48f0:	sub	w7, w4, #0x1, lsl #12
    48f4:	lsr	w7, w7, #16
    48f8:	and	w7, w7, #0x4
    48fc:	orr	w5, w5, w7
    4900:	lsl	w4, w4, w7
    4904:	sub	w6, w4, #0x4, lsl #12
    4908:	mov	w7, #0x1                   	// #1
    490c:	lsr	w6, w6, #16
    4910:	and	w6, w6, #0x2
    4914:	add	w5, w5, w6
    4918:	lsl	w2, w4, w6
    491c:	lsr	w2, w2, #15
    4920:	sub	w2, w2, w5
    4924:	add	w4, w2, #0x15
    4928:	add	w2, w2, #0xe
    492c:	lsr	x4, x1, x4
    4930:	lsl	w2, w2, #1
    4934:	and	x4, x4, #0x1
    4938:	add	x2, x4, x2
    493c:	mov	x4, #0xffff                	// #65535
    4940:	cmp	x8, x4
    4944:	mov	x4, #0x1f                  	// #31
    4948:	csel	x2, x2, x4, ls  // ls = plast
    494c:	add	x4, x20, #0x198
    4950:	str	x2, [x0, #56]
    4954:	add	x4, x4, #0x68
    4958:	lsl	w7, w7, w2
    495c:	add	x5, x2, #0x4a
    4960:	ldr	w6, [x4, #4]
    4964:	tst	w6, w7
    4968:	b.ne	4988 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9d0>  // b.any
    496c:	orr	w6, w6, w7
    4970:	str	x0, [x4, x5, lsl #3]
    4974:	str	w6, [x4, #4]
    4978:	add	x4, x4, x5, lsl #3
    497c:	stp	x0, x0, [x0, #16]
    4980:	str	x4, [x0, #48]
    4984:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    4988:	lsr	x6, x2, #1
    498c:	cmp	x2, #0x1f
    4990:	ldr	x4, [x4, x5, lsl #3]
    4994:	mov	w5, #0x39                  	// #57
    4998:	sub	w5, w5, w6
    499c:	csel	w2, w5, wzr, ne  // ne = any
    49a0:	lsl	x2, x1, x2
    49a4:	ldr	x5, [x4, #8]
    49a8:	and	x5, x5, #0xfffffffffffffffc
    49ac:	cmp	x1, x5
    49b0:	b.eq	49e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa2c>  // b.none
    49b4:	lsr	x5, x2, #63
    49b8:	lsl	x2, x2, #1
    49bc:	add	x5, x5, #0x4
    49c0:	ldr	x6, [x4, x5, lsl #3]
    49c4:	cbnz	x6, 49dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa24>
    49c8:	add	x1, x4, x5, lsl #3
    49cc:	cmp	x3, x1
    49d0:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    49d4:	str	x0, [x4, x5, lsl #3]
    49d8:	b	497c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c4>
    49dc:	mov	x4, x6
    49e0:	b	49a4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9ec>
    49e4:	cmp	x3, x4
    49e8:	ldr	x1, [x4, #16]
    49ec:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    49f0:	cmp	x3, x1
    49f4:	b.hi	4220 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x268>  // b.pmore
    49f8:	str	x0, [x1, #24]
    49fc:	str	x0, [x4, #16]
    4a00:	stp	x1, x4, [x0, #16]
    4a04:	str	xzr, [x0, #48]
    4a08:	b	4084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc>
    4a0c:	ret
    4a10:	cbz	x0, 4a5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaa4>
    4a14:	stp	x29, x30, [sp, #-32]!
    4a18:	mov	x29, sp
    4a1c:	str	x19, [sp, #16]
    4a20:	mov	x19, x0
    4a24:	mov	w0, #0xffffffff            	// #-1
    4a28:	ldr	x1, [x19]
    4a2c:	cbz	x1, 4a50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa98>
    4a30:	ldrh	w0, [x1, #10]
    4a34:	and	w2, w0, #0xfffffffd
    4a38:	cmp	w2, #0xd
    4a3c:	b.ne	4a50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa98>  // b.any
    4a40:	ldr	x0, [x1, #16]
    4a44:	add	x19, x19, #0x8
    4a48:	bl	4a10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa58>
    4a4c:	tbnz	w0, #31, 4a28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa70>
    4a50:	ldr	x19, [sp, #16]
    4a54:	ldp	x29, x30, [sp], #32
    4a58:	ret
    4a5c:	mov	w0, #0xffffffff            	// #-1
    4a60:	ret
    4a64:	cbz	x0, 4ac8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb10>
    4a68:	stp	x29, x30, [sp, #-32]!
    4a6c:	mov	x29, sp
    4a70:	stp	x19, x20, [sp, #16]
    4a74:	mov	x19, x0
    4a78:	mov	w20, w1
    4a7c:	ldr	x0, [x19]
    4a80:	cbnz	x0, 4a8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xad4>
    4a84:	mov	w0, #0x1                   	// #1
    4a88:	b	4aac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaf4>
    4a8c:	ldrh	w1, [x0, #10]
    4a90:	and	w2, w1, #0xfffffffd
    4a94:	cmp	w2, #0xd
    4a98:	b.ne	4ab8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb00>  // b.any
    4a9c:	ldr	x0, [x0, #16]
    4aa0:	mov	w1, w20
    4aa4:	bl	4a64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaac>
    4aa8:	cbnz	w0, 4ac0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb08>
    4aac:	ldp	x19, x20, [sp, #16]
    4ab0:	ldp	x29, x30, [sp], #32
    4ab4:	ret
    4ab8:	cmp	w1, w20
    4abc:	b.ne	4ad0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb18>  // b.any
    4ac0:	add	x19, x19, #0x8
    4ac4:	b	4a7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>
    4ac8:	mov	w0, #0x1                   	// #1
    4acc:	ret
    4ad0:	mov	w0, #0x0                   	// #0
    4ad4:	b	4aac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaf4>
    4ad8:	ldrh	w3, [x0, #10]
    4adc:	cmp	w3, #0xd
    4ae0:	b.eq	4b3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb84>  // b.none
    4ae4:	b.hi	4b00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb48>  // b.pmore
    4ae8:	sub	w0, w3, #0x2
    4aec:	and	w0, w0, #0xffff
    4af0:	cmp	w0, #0x2
    4af4:	b.ls	4b28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb70>  // b.plast
    4af8:	mov	w0, #0x0                   	// #0
    4afc:	ret
    4b00:	cmp	w3, #0xf
    4b04:	b.ne	4af8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb40>  // b.any
    4b08:	ldr	x0, [x0, #16]
    4b0c:	ldr	x0, [x0]
    4b10:	ldrh	w3, [x0, #10]
    4b14:	sub	w0, w3, #0x2
    4b18:	cmp	w0, #0x2
    4b1c:	b.hi	4af8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb40>  // b.pmore
    4b20:	mov	x4, #0x2                   	// #2
    4b24:	b	4b2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb74>
    4b28:	mov	x4, #0x1                   	// #1
    4b2c:	mov	w0, #0x4                   	// #4
    4b30:	sub	w0, w0, w4
    4b34:	add	w0, w0, w3, lsl #2
    4b38:	ret
    4b3c:	ldr	x4, [x0]
    4b40:	sub	x1, x4, #0x4
    4b44:	cmp	x1, #0x3c
    4b48:	b.hi	4af8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb40>  // b.pmore
    4b4c:	stp	x29, x30, [sp, #-16]!
    4b50:	mov	x29, sp
    4b54:	ldr	x5, [x0, #16]
    4b58:	ldr	x0, [x5]
    4b5c:	ldrh	w3, [x0, #10]
    4b60:	and	w0, w3, #0xfffffffd
    4b64:	cmp	w0, #0xd
    4b68:	b.ne	4b84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbcc>  // b.any
    4b6c:	mov	x6, x5
    4b70:	ldr	x0, [x6], #8
    4b74:	ldr	x0, [x0, #16]
    4b78:	bl	4a10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa58>
    4b7c:	mov	w3, w0
    4b80:	tbnz	w0, #31, 4b70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbb8>
    4b84:	cmp	w3, #0x3
    4b88:	b.eq	4bac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbf4>  // b.none
    4b8c:	cmp	w3, #0x4
    4b90:	b.eq	4bc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc10>  // b.none
    4b94:	cmp	w3, #0x2
    4b98:	b.ne	4bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc08>  // b.any
    4b9c:	tst	x4, #0x3
    4ba0:	b.ne	4bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc08>  // b.any
    4ba4:	lsr	x4, x4, #2
    4ba8:	b	4bb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc00>
    4bac:	tst	x4, #0x7
    4bb0:	b.ne	4bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc08>  // b.any
    4bb4:	lsr	x4, x4, #3
    4bb8:	cmp	x4, #0x4
    4bbc:	b.ls	4bd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>  // b.plast
    4bc0:	mov	w0, #0x0                   	// #0
    4bc4:	b	4c0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc54>
    4bc8:	tst	x4, #0xf
    4bcc:	b.ne	4bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc08>  // b.any
    4bd0:	lsr	x4, x4, #4
    4bd4:	ldr	x0, [x5]
    4bd8:	cbnz	x0, 4bec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc34>
    4bdc:	mov	w0, #0x4                   	// #4
    4be0:	sub	w0, w0, w4
    4be4:	add	w0, w0, w3, lsl #2
    4be8:	b	4c0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc54>
    4bec:	ldrh	w1, [x0, #10]
    4bf0:	and	w2, w1, #0xfffffffd
    4bf4:	cmp	w2, #0xd
    4bf8:	b.ne	4c14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc5c>  // b.any
    4bfc:	ldr	x0, [x0, #16]
    4c00:	mov	w1, w3
    4c04:	bl	4a64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xaac>
    4c08:	cbnz	w0, 4c1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc64>
    4c0c:	ldp	x29, x30, [sp], #16
    4c10:	ret
    4c14:	cmp	w3, w1
    4c18:	b.ne	4bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc08>  // b.any
    4c1c:	add	x5, x5, #0x8
    4c20:	b	4bd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    4c24:	stp	x29, x30, [sp, #-176]!
    4c28:	mov	x10, x0
    4c2c:	mov	x29, sp
    4c30:	stp	x19, x20, [sp, #16]
    4c34:	mov	x19, x2
    4c38:	ldr	w20, [x0, #24]
    4c3c:	stp	x27, x28, [sp, #80]
    4c40:	ldr	w28, [x0, #28]
    4c44:	ldr	x0, [x0, #16]
    4c48:	stp	x21, x22, [sp, #32]
    4c4c:	stp	x23, x24, [sp, #48]
    4c50:	ldr	x0, [x0]
    4c54:	stp	x25, x26, [sp, #64]
    4c58:	stp	x4, x1, [x29, #128]
    4c5c:	str	x3, [x29, #152]
    4c60:	str	x0, [x29, #168]
    4c64:	tbz	w28, #5, 4d24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd6c>
    4c68:	cmp	x2, #0x0
    4c6c:	csel	x0, x0, xzr, eq  // eq = none
    4c70:	add	x1, x0, x20
    4c74:	cmp	x0, #0x0
    4c78:	add	x1, x1, #0xef
    4c7c:	ldr	w0, [x10, #4]
    4c80:	and	x1, x1, #0xfffffffffffffff0
    4c84:	adrp	x25, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    4c88:	sub	sp, sp, x1
    4c8c:	adrp	x26, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    4c90:	mov	x23, sp
    4c94:	add	x26, x26, #0x9d4
    4c98:	add	x13, x23, #0xc0
    4c9c:	mov	x24, #0x0                   	// #0
    4ca0:	add	x1, x13, x20
    4ca4:	mov	w27, #0x0                   	// #0
    4ca8:	add	x21, x1, #0x20
    4cac:	mov	x20, #0x0                   	// #0
    4cb0:	csel	x21, x21, x19, ne  // ne = any
    4cb4:	mov	w22, #0x0                   	// #0
    4cb8:	str	w0, [x29, #148]
    4cbc:	add	x0, x25, #0x9c4
    4cc0:	mov	x25, #0x8                   	// #8
    4cc4:	str	x0, [x29, #120]
    4cc8:	str	x1, [x29, #160]
    4ccc:	ldr	w0, [x29, #148]
    4cd0:	cmp	w0, w24
    4cd4:	b.gt	4d40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd88>
    4cd8:	ldp	x5, x2, [x29, #128]
    4cdc:	mov	w4, w28
    4ce0:	ldr	x1, [x29, #160]
    4ce4:	mov	x3, x21
    4ce8:	mov	x0, x23
    4cec:	bl	5440 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2f4>
    4cf0:	tbz	w28, #6, 4d04 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd4c>
    4cf4:	ldr	x2, [x29, #168]
    4cf8:	mov	x1, x21
    4cfc:	mov	x0, x19
    4d00:	bl	19a0 <memcpy@plt>
    4d04:	mov	sp, x29
    4d08:	ldp	x19, x20, [sp, #16]
    4d0c:	ldp	x21, x22, [sp, #32]
    4d10:	ldp	x23, x24, [sp, #48]
    4d14:	ldp	x25, x26, [sp, #64]
    4d18:	ldp	x27, x28, [sp, #80]
    4d1c:	ldp	x29, x30, [sp], #176
    4d20:	ret
    4d24:	cbnz	x2, 4d34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd7c>
    4d28:	and	w28, w28, #0x80
    4d2c:	mov	x0, #0x0                   	// #0
    4d30:	b	4c70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcb8>
    4d34:	ubfx	x0, x28, #6, #1
    4d38:	lsl	x0, x0, #4
    4d3c:	b	4c70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcb8>
    4d40:	ldr	x1, [x10, #8]
    4d44:	lsl	x0, x24, #3
    4d48:	ldr	x7, [x1, x0]
    4d4c:	ldr	x1, [x29, #152]
    4d50:	ldr	x18, [x7]
    4d54:	add	x9, x1, x0
    4d58:	ldrh	w0, [x7, #10]
    4d5c:	ldr	x8, [x1, x24, lsl #3]
    4d60:	cmp	w0, #0xf
    4d64:	b.hi	4df0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe38>  // b.pmore
    4d68:	ldr	x1, [x29, #120]
    4d6c:	ldrb	w1, [x1, w0, uxtw]
    4d70:	adr	x2, 4d7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc4>
    4d74:	add	x1, x2, w1, sxtb #2
    4d78:	br	x1
    4d7c:	sub	w0, w0, #0x1
    4d80:	cmp	w0, #0xd
    4d84:	b.hi	4df0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe38>  // b.pmore
    4d88:	ldrb	w0, [x26, w0, uxtw]
    4d8c:	adr	x1, 4d98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde0>
    4d90:	add	x0, x1, w0, sxtb #2
    4d94:	br	x0
    4d98:	ldrb	w1, [x8]
    4d9c:	cmp	w22, #0x7
    4da0:	b.hi	4df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe3c>  // b.pmore
    4da4:	add	x0, x23, w22, uxtw #3
    4da8:	add	w22, w22, #0x1
    4dac:	str	x1, [x0, #128]
    4db0:	add	x24, x24, #0x1
    4db4:	b	4ccc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd14>
    4db8:	ldrsb	x1, [x8]
    4dbc:	b	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde4>
    4dc0:	ldrh	w1, [x8]
    4dc4:	b	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde4>
    4dc8:	ldrsh	x1, [x8]
    4dcc:	b	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde4>
    4dd0:	ldr	w1, [x8]
    4dd4:	b	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde4>
    4dd8:	ldrsw	x1, [x8]
    4ddc:	b	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde4>
    4de0:	mov	x8, x9
    4de4:	mov	x18, #0x8                   	// #8
    4de8:	ldr	x1, [x8]
    4dec:	b	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde4>
    4df0:	bl	1ad0 <abort@plt>
    4df4:	ldrh	w0, [x7, #8]
    4df8:	sub	x7, x20, #0x1
    4dfc:	mov	w22, #0x8                   	// #8
    4e00:	cmp	x0, #0x8
    4e04:	csel	x0, x0, x25, cs  // cs = hs, nlast
    4e08:	sub	x0, x0, #0x1
    4e0c:	orr	x0, x0, x7
    4e10:	add	x0, x0, #0x1
    4e14:	add	x20, x0, x18
    4e18:	str	x1, [x13, x0]
    4e1c:	b	4db0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf8>
    4e20:	mov	x0, x7
    4e24:	stp	x10, x13, [x29, #104]
    4e28:	bl	4ad8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb20>
    4e2c:	ldp	x10, x13, [x29, #104]
    4e30:	cbz	w0, 4f4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf94>
    4e34:	and	w1, w0, #0x3
    4e38:	sub	w1, w27, w1
    4e3c:	add	w1, w1, #0x4
    4e40:	cmp	w1, #0x8
    4e44:	b.hi	4f0c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf54>  // b.pmore
    4e48:	sub	w0, w0, #0x8
    4e4c:	mov	w2, #0xc                   	// #12
    4e50:	ubfiz	x15, x27, #4, #32
    4e54:	add	x15, x23, x15
    4e58:	smull	x0, w0, w2
    4e5c:	adr	x2, 4e68 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xeb0>
    4e60:	add	x2, x2, x0
    4e64:	br	x2
    4e68:	ldp	s16, s17, [x8]
    4e6c:	ldp	s18, s19, [x8, #8]
    4e70:	b	4ef4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf3c>
    4e74:	ldp	s16, s17, [x8]
    4e78:	ldr	s18, [x8, #8]
    4e7c:	b	4ef8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf40>
    4e80:	ldp	s16, s17, [x8]
    4e84:	b	4efc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf44>
    4e88:	nop
    4e8c:	ldr	s16, [x8]
    4e90:	b	4f00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf48>
    4e94:	nop
    4e98:	ldp	d16, d17, [x8]
    4e9c:	ldp	d18, d19, [x8, #16]
    4ea0:	b	4ef4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf3c>
    4ea4:	ldp	d16, d17, [x8]
    4ea8:	ldr	d18, [x8, #16]
    4eac:	b	4ef8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf40>
    4eb0:	ldp	d16, d17, [x8]
    4eb4:	b	4efc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf44>
    4eb8:	nop
    4ebc:	ldr	d16, [x8]
    4ec0:	b	4f00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf48>
    4ec4:	nop
    4ec8:	ldp	q16, q17, [x8]
    4ecc:	ldp	q18, q19, [x8, #32]
    4ed0:	b	4ef4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf3c>
    4ed4:	ldp	q16, q17, [x8]
    4ed8:	ldr	q18, [x8, #32]
    4edc:	b	4ef8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf40>
    4ee0:	ldp	q16, q17, [x8]
    4ee4:	b	4efc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf44>
    4ee8:	nop
    4eec:	ldr	q16, [x8]
    4ef0:	b	4f00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf48>
    4ef4:	str	q19, [x15, #48]
    4ef8:	str	q18, [x15, #32]
    4efc:	str	q17, [x15, #16]
    4f00:	str	q16, [x15]
    4f04:	mov	w27, w1
    4f08:	b	4db0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf8>
    4f0c:	ldrh	w5, [x7, #8]
    4f10:	sub	x7, x20, #0x1
    4f14:	mov	w27, #0x8                   	// #8
    4f18:	cmp	x5, #0x8
    4f1c:	csel	x5, x5, x25, cs  // cs = hs, nlast
    4f20:	sub	x0, x5, #0x1
    4f24:	orr	x0, x0, x7
    4f28:	add	x0, x0, #0x1
    4f2c:	add	x20, x18, x0
    4f30:	add	x0, x13, x0
    4f34:	mov	x2, x18
    4f38:	mov	x1, x8
    4f3c:	stp	x10, x13, [x29, #104]
    4f40:	bl	19a0 <memcpy@plt>
    4f44:	ldp	x10, x13, [x29, #104]
    4f48:	b	4db0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf8>
    4f4c:	cmp	x18, #0x10
    4f50:	b.hi	4de0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe28>  // b.pmore
    4f54:	add	x0, x18, #0x7
    4f58:	mov	w6, w22
    4f5c:	lsr	x1, x0, #3
    4f60:	add	x0, x6, x0, lsr #3
    4f64:	cmp	x0, #0x8
    4f68:	b.hi	4f7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfc4>  // b.pmore
    4f6c:	add	x0, x6, #0x10
    4f70:	add	w22, w22, w1
    4f74:	add	x0, x23, x0, lsl #3
    4f78:	b	4f34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf7c>
    4f7c:	ldrh	w3, [x7, #8]
    4f80:	sub	x0, x20, #0x1
    4f84:	mov	w22, #0x8                   	// #8
    4f88:	cmp	x3, #0x8
    4f8c:	csel	x3, x3, x25, cs  // cs = hs, nlast
    4f90:	sub	x3, x3, #0x1
    4f94:	orr	x0, x3, x0
    4f98:	add	x3, x0, #0x1
    4f9c:	add	x20, x18, x3
    4fa0:	add	x0, x13, x3
    4fa4:	b	4f34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf7c>
    4fa8:	stp	x29, x30, [sp, #-16]!
    4fac:	mov	x29, sp
    4fb0:	ldr	x10, [x0, #16]
    4fb4:	ldr	w8, [x0, #24]
    4fb8:	ldrh	w1, [x10, #10]
    4fbc:	cmp	w1, #0xf
    4fc0:	b.hi	508c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>  // b.pmore
    4fc4:	mov	x9, x0
    4fc8:	adrp	x0, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    4fcc:	add	x0, x0, #0x9e4
    4fd0:	ldrb	w0, [x0, w1, uxtw]
    4fd4:	adr	x1, 4fe0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1028>
    4fd8:	add	x0, x1, w0, sxtb #2
    4fdc:	br	x0
    4fe0:	mov	w7, #0x14                  	// #20
    4fe4:	ldr	w11, [x9, #4]
    4fe8:	mov	x10, #0x0                   	// #0
    4fec:	cmp	w11, w10
    4ff0:	b.le	500c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1054>
    4ff4:	ldr	x0, [x9, #8]
    4ff8:	ldr	x0, [x0, x10, lsl #3]
    4ffc:	bl	4ad8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb20>
    5000:	add	x10, x10, #0x1
    5004:	cbz	w0, 4fec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1034>
    5008:	orr	w7, w7, #0x80
    500c:	sub	w8, w8, #0x1
    5010:	mov	w0, #0x0                   	// #0
    5014:	orr	w8, w8, #0xf
    5018:	add	w8, w8, #0x1
    501c:	stp	w8, w7, [x9, #24]
    5020:	ldp	x29, x30, [sp], #16
    5024:	ret
    5028:	mov	w7, #0x18                  	// #24
    502c:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5030:	mov	w7, #0x1a                  	// #26
    5034:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5038:	mov	w7, #0x1c                  	// #28
    503c:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5040:	mov	w7, #0x1e                  	// #30
    5044:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5048:	mov	w7, #0x1                   	// #1
    504c:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5050:	mov	x0, x10
    5054:	bl	4ad8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb20>
    5058:	mov	w7, w0
    505c:	cbnz	w0, 4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5060:	ldr	x0, [x10]
    5064:	cmp	x0, #0x10
    5068:	b.ls	5078 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10c0>  // b.plast
    506c:	add	x8, x8, #0x8
    5070:	mov	w7, #0x20                  	// #32
    5074:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5078:	b.eq	50a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10e8>  // b.none
    507c:	cmp	x0, #0x8
    5080:	mov	w7, #0x42                  	// #66
    5084:	csinc	w7, w7, wzr, ne  // ne = any
    5088:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    508c:	bl	1ad0 <abort@plt>
    5090:	mov	w7, #0x0                   	// #0
    5094:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    5098:	mov	w7, #0x16                  	// #22
    509c:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>
    50a0:	mov	w7, #0x2                   	// #2
    50a4:	b	4fe4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x102c>

00000000000050a8 <ffi_call@@LIBFFI_BASE_7.0>:
    50a8:	mov	x4, #0x0                   	// #0
    50ac:	b	4c24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc6c>

00000000000050b0 <ffi_call_go@@LIBFFI_GO_CLOSURE_7.0>:
    50b0:	b	4c24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc6c>

00000000000050b4 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0>:
    50b4:	stp	x29, x30, [sp, #-48]!
    50b8:	mov	x29, sp
    50bc:	stp	x19, x20, [sp, #16]
    50c0:	mov	x20, x1
    50c4:	ldr	w1, [x1]
    50c8:	stp	x21, x22, [sp, #32]
    50cc:	cmp	w1, #0x1
    50d0:	b.ne	5144 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x90>  // b.any
    50d4:	mov	x21, x3
    50d8:	ldr	w3, [x20, #28]
    50dc:	mov	x22, x2
    50e0:	adrp	x1, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    50e4:	adrp	x2, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    50e8:	add	x1, x1, #0x5b0
    50ec:	tst	x3, #0x80
    50f0:	add	x2, x2, #0x5d0
    50f4:	csel	x1, x1, x2, ne  // ne = any
    50f8:	adrp	x2, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    50fc:	add	x2, x2, #0xa10
    5100:	str	x1, [x0, #16]
    5104:	add	x1, x0, #0x18
    5108:	mov	x19, x0
    510c:	ldp	x2, x3, [x2]
    5110:	stp	x2, x3, [x0]
    5114:	bl	5764 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x618>
    5118:	mov	x0, x19
    511c:	bl	3f90 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12a4>
    5120:	add	x1, x0, #0x18
    5124:	bl	5764 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x618>
    5128:	mov	w0, #0x0                   	// #0
    512c:	stp	x20, x22, [x19, #24]
    5130:	str	x21, [x19, #40]
    5134:	ldp	x19, x20, [sp, #16]
    5138:	ldp	x21, x22, [sp, #32]
    513c:	ldp	x29, x30, [sp], #48
    5140:	ret
    5144:	mov	w0, #0x2                   	// #2
    5148:	b	5134 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x80>

000000000000514c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0>:
    514c:	ldr	w3, [x1]
    5150:	cmp	w3, #0x1
    5154:	b.ne	5184 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x38>  // b.any
    5158:	ldr	w5, [x1, #28]
    515c:	adrp	x4, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    5160:	adrp	x3, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    5164:	add	x4, x4, #0x740
    5168:	add	x3, x3, #0x720
    516c:	str	x2, [x0, #16]
    5170:	tst	x5, #0x80
    5174:	csel	x3, x3, x4, ne  // ne = any
    5178:	stp	x3, x1, [x0]
    517c:	mov	w0, #0x0                   	// #0
    5180:	ret
    5184:	mov	w0, #0x2                   	// #2
    5188:	b	5180 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x34>
    518c:	stp	x29, x30, [sp, #-96]!
    5190:	mov	x12, x0
    5194:	mov	x18, x1
    5198:	mov	x29, sp
    519c:	stp	x25, x26, [sp, #64]
    51a0:	mov	x13, x3
    51a4:	ldr	w25, [x0, #4]
    51a8:	stp	x19, x20, [sp, #16]
    51ac:	mov	x14, x4
    51b0:	mov	x20, x5
    51b4:	ubfiz	x0, x25, #3, #32
    51b8:	stp	x21, x22, [sp, #32]
    51bc:	add	x0, x0, #0xf
    51c0:	and	x0, x0, #0xffffffff0
    51c4:	stp	x23, x24, [sp, #48]
    51c8:	adrp	x22, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    51cc:	str	x27, [sp, #80]
    51d0:	sub	sp, sp, x0
    51d4:	adrp	x24, 5000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1048>
    51d8:	mov	x21, x2
    51dc:	mov	x19, x6
    51e0:	add	x22, x22, #0x9f4
    51e4:	add	x24, x24, #0xa04
    51e8:	mov	x11, sp
    51ec:	mov	x10, #0x0                   	// #0
    51f0:	mov	x8, #0x0                   	// #0
    51f4:	mov	w15, #0x0                   	// #0
    51f8:	mov	w9, #0x0                   	// #0
    51fc:	mov	x23, #0x8                   	// #8
    5200:	cmp	w25, w10
    5204:	b.gt	5248 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xfc>
    5208:	ldr	w22, [x12, #28]
    520c:	mov	x3, x21
    5210:	mov	x0, x12
    5214:	mov	x2, x11
    5218:	tst	x22, #0x20
    521c:	csel	x1, x20, x19, eq  // eq = none
    5220:	blr	x18
    5224:	mov	sp, x29
    5228:	mov	w0, w22
    522c:	ldp	x19, x20, [sp, #16]
    5230:	ldp	x21, x22, [sp, #32]
    5234:	ldp	x23, x24, [sp, #48]
    5238:	ldp	x25, x26, [sp, #64]
    523c:	ldr	x27, [sp, #80]
    5240:	ldp	x29, x30, [sp], #96
    5244:	ret
    5248:	ldr	x0, [x12, #8]
    524c:	ldr	x27, [x0, x10, lsl #3]
    5250:	ldrh	w0, [x27, #10]
    5254:	ldr	x26, [x27]
    5258:	cmp	w0, #0xf
    525c:	b.hi	5438 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2ec>  // b.pmore
    5260:	ldrb	w0, [x22, w0, uxtw]
    5264:	adr	x1, 5270 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x124>
    5268:	add	x0, x1, w0, sxtb #2
    526c:	br	x0
    5270:	cmp	w9, #0x7
    5274:	b.hi	5294 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x148>  // b.pmore
    5278:	ubfiz	x7, x9, #3, #32
    527c:	add	w9, w9, #0x1
    5280:	add	x7, x7, #0x80
    5284:	add	x7, x13, x7
    5288:	str	x7, [x11, x10, lsl #3]
    528c:	add	x10, x10, #0x1
    5290:	b	5200 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xb4>
    5294:	cmp	x26, #0x8
    5298:	sub	x8, x8, #0x1
    529c:	csel	x7, x26, x23, cs  // cs = hs, nlast
    52a0:	mov	w9, #0x8                   	// #8
    52a4:	sub	x7, x7, #0x1
    52a8:	orr	x7, x7, x8
    52ac:	add	x7, x7, #0x1
    52b0:	add	x8, x26, x7
    52b4:	add	x7, x14, x7
    52b8:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    52bc:	mov	x0, x27
    52c0:	bl	4ad8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb20>
    52c4:	cbz	w0, 5394 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x248>
    52c8:	and	w2, w0, #0x3
    52cc:	mov	w1, #0x4                   	// #4
    52d0:	sub	w1, w1, w2
    52d4:	mov	w7, w15
    52d8:	sxtw	x2, w1
    52dc:	add	x2, x2, w15, uxtw
    52e0:	cmp	x2, #0x8
    52e4:	b.hi	5364 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x218>  // b.pmore
    52e8:	sub	w0, w0, #0x8
    52ec:	add	x7, x13, x7, lsl #4
    52f0:	add	w15, w15, w1
    52f4:	cmp	w0, #0x6
    52f8:	b.hi	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>  // b.pmore
    52fc:	ldrb	w0, [x24, w0, uxtw]
    5300:	adr	x1, 530c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    5304:	add	x0, x1, w0, sxtb #2
    5308:	br	x0
    530c:	ldp	q16, q17, [x7]
    5310:	st2	{v16.s, v17.s}[0], [x7]
    5314:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    5318:	ldp	q16, q17, [x7]
    531c:	ldr	q18, [x7, #32]
    5320:	st3	{v16.s-v18.s}[0], [x7]
    5324:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    5328:	ldp	q16, q17, [x7]
    532c:	ldp	q18, q19, [x7, #32]
    5330:	st4	{v16.s-v19.s}[0], [x7]
    5334:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    5338:	ldp	q16, q17, [x7]
    533c:	st2	{v16.d, v17.d}[0], [x7]
    5340:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    5344:	ldp	q16, q17, [x7]
    5348:	ldr	q18, [x7, #32]
    534c:	st3	{v16.d-v18.d}[0], [x7]
    5350:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    5354:	ldp	q16, q17, [x7]
    5358:	ldp	q18, q19, [x7, #32]
    535c:	st4	{v16.d-v19.d}[0], [x7]
    5360:	b	5288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x13c>
    5364:	ldrh	w0, [x27, #8]
    5368:	sub	x8, x8, #0x1
    536c:	mov	w15, #0x8                   	// #8
    5370:	cmp	x0, #0x8
    5374:	csel	x0, x0, x23, cs  // cs = hs, nlast
    5378:	sub	x0, x0, #0x1
    537c:	orr	x0, x0, x8
    5380:	add	x0, x0, #0x1
    5384:	add	x8, x26, x0
    5388:	add	x0, x14, x0
    538c:	str	x0, [x11, x10, lsl #3]
    5390:	b	528c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x140>
    5394:	cmp	x26, #0x10
    5398:	b.ls	53dc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x290>  // b.plast
    539c:	cmp	w9, #0x7
    53a0:	b.hi	53c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x274>  // b.pmore
    53a4:	ubfiz	x0, x9, #3, #32
    53a8:	add	w9, w9, #0x1
    53ac:	add	x0, x0, #0x80
    53b0:	add	x0, x13, x0
    53b4:	ldr	x0, [x0]
    53b8:	str	x0, [x11, x10, lsl #3]
    53bc:	b	528c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x140>
    53c0:	sub	x0, x8, #0x1
    53c4:	mov	w9, #0x8                   	// #8
    53c8:	orr	x0, x0, #0x7
    53cc:	add	x8, x0, #0x9
    53d0:	add	x0, x0, #0x1
    53d4:	add	x0, x14, x0
    53d8:	b	53b4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x268>
    53dc:	add	x1, x26, #0x7
    53e0:	mov	w0, w9
    53e4:	lsr	x2, x1, #3
    53e8:	add	x1, x0, x1, lsr #3
    53ec:	cmp	x1, #0x8
    53f0:	b.hi	5408 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2bc>  // b.pmore
    53f4:	add	x0, x0, #0x10
    53f8:	add	w9, w9, w2
    53fc:	add	x0, x13, x0, lsl #3
    5400:	str	x0, [x11, x10, lsl #3]
    5404:	b	528c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x140>
    5408:	ldrh	w7, [x27, #8]
    540c:	sub	x8, x8, #0x1
    5410:	mov	w9, #0x8                   	// #8
    5414:	cmp	x7, #0x8
    5418:	csel	x7, x7, x23, cs  // cs = hs, nlast
    541c:	sub	x7, x7, #0x1
    5420:	orr	x7, x7, x8
    5424:	add	x7, x7, #0x1
    5428:	add	x8, x26, x7
    542c:	add	x7, x14, x7
    5430:	str	x7, [x11, x10, lsl #3]
    5434:	b	528c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x140>
    5438:	bl	1ad0 <abort@plt>
    543c:	nop
    5440:	stp	x29, x30, [x1]
    5444:	mov	x29, x1
    5448:	mov	sp, x0
    544c:	mov	x9, x2
    5450:	mov	x8, x3
    5454:	mov	x18, x5
    5458:	stp	x3, x4, [x29, #16]
    545c:	tbz	w4, #7, 5470 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x324>
    5460:	ldp	q0, q1, [sp]
    5464:	ldp	q2, q3, [sp, #32]
    5468:	ldp	q4, q5, [sp, #64]
    546c:	ldp	q6, q7, [sp, #96]
    5470:	ldp	x0, x1, [sp, #128]
    5474:	ldp	x2, x3, [sp, #144]
    5478:	ldp	x4, x5, [sp, #160]
    547c:	ldp	x6, x7, [sp, #176]
    5480:	add	sp, sp, #0xc0
    5484:	blr	x9
    5488:	ldp	x3, x4, [x29, #16]
    548c:	mov	sp, x29
    5490:	ldp	x29, x30, [x29]
    5494:	adr	x5, 54b0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x364>
    5498:	and	w4, w4, #0x1f
    549c:	add	x5, x5, x4, lsl #3
    54a0:	br	x5
    54a4:	nop
    54a8:	nop
    54ac:	nop
    54b0:	ret
    54b4:	nop
    54b8:	str	x0, [x3]
    54bc:	ret
    54c0:	stp	x0, x1, [x3]
    54c4:	ret
    54c8:	brk	#0x3e8
    54cc:	ret
    54d0:	brk	#0x3e8
    54d4:	ret
    54d8:	brk	#0x3e8
    54dc:	ret
    54e0:	brk	#0x3e8
    54e4:	ret
    54e8:	brk	#0x3e8
    54ec:	ret
    54f0:	st4	{v0.s-v3.s}[0], [x3]
    54f4:	ret
    54f8:	st3	{v0.s-v2.s}[0], [x3]
    54fc:	ret
    5500:	stp	s0, s1, [x3]
    5504:	ret
    5508:	str	s0, [x3]
    550c:	ret
    5510:	st4	{v0.d-v3.d}[0], [x3]
    5514:	ret
    5518:	st3	{v0.d-v2.d}[0], [x3]
    551c:	ret
    5520:	stp	d0, d1, [x3]
    5524:	ret
    5528:	str	d0, [x3]
    552c:	ret
    5530:	str	q3, [x3, #48]
    5534:	nop
    5538:	str	q2, [x3, #32]
    553c:	nop
    5540:	stp	q0, q1, [x3]
    5544:	ret
    5548:	str	q0, [x3]
    554c:	ret
    5550:	uxtb	w0, w0
    5554:	str	x0, [x3]
    5558:	ret
    555c:	nop
    5560:	uxth	w0, w0
    5564:	str	x0, [x3]
    5568:	ret
    556c:	nop
    5570:	mov	w0, w0
    5574:	str	x0, [x3]
    5578:	ret
    557c:	nop
    5580:	sxtb	x0, w0
    5584:	str	x0, [x3]
    5588:	ret
    558c:	nop
    5590:	sxth	x0, w0
    5594:	str	x0, [x3]
    5598:	ret
    559c:	nop
    55a0:	sxtw	x0, w0
    55a4:	str	x0, [x3]
    55a8:	ret
    55ac:	nop
    55b0:	stp	x29, x30, [sp, #-272]!
    55b4:	stp	q0, q1, [sp, #16]
    55b8:	stp	q2, q3, [sp, #48]
    55bc:	stp	q4, q5, [sp, #80]
    55c0:	stp	q6, q7, [sp, #112]
    55c4:	b	55d4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x488>
    55c8:	nop
    55cc:	nop
    55d0:	stp	x29, x30, [sp, #-272]!
    55d4:	mov	x29, sp
    55d8:	stp	x0, x1, [sp, #144]
    55dc:	stp	x2, x3, [sp, #160]
    55e0:	stp	x4, x5, [sp, #176]
    55e4:	stp	x6, x7, [sp, #192]
    55e8:	ldp	x0, x1, [x17, #24]
    55ec:	ldr	x2, [x17, #40]
    55f0:	add	x3, sp, #0x10
    55f4:	add	x4, sp, #0x110
    55f8:	add	x5, sp, #0xd0
    55fc:	mov	x6, x8
    5600:	bl	518c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x40>
    5604:	adr	x1, 5620 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4d4>
    5608:	and	w0, w0, #0x1f
    560c:	add	x1, x1, x0, lsl #3
    5610:	add	x3, sp, #0xd0
    5614:	br	x1
    5618:	nop
    561c:	nop
    5620:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5624:	nop
    5628:	ldr	x0, [x3]
    562c:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5630:	ldp	x0, x1, [x3]
    5634:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5638:	brk	#0x3e8
    563c:	nop
    5640:	brk	#0x3e8
    5644:	nop
    5648:	brk	#0x3e8
    564c:	nop
    5650:	brk	#0x3e8
    5654:	nop
    5658:	brk	#0x3e8
    565c:	nop
    5660:	ldr	s3, [x3, #12]
    5664:	nop
    5668:	ldr	s2, [x3, #8]
    566c:	nop
    5670:	ldp	s0, s1, [x3]
    5674:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5678:	ldr	s0, [x3]
    567c:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5680:	ldr	d3, [x3, #24]
    5684:	nop
    5688:	ldr	d2, [x3, #16]
    568c:	nop
    5690:	ldp	d0, d1, [x3]
    5694:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5698:	ldr	d0, [x3]
    569c:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56a0:	ldr	q3, [x3, #48]
    56a4:	nop
    56a8:	ldr	q2, [x3, #32]
    56ac:	nop
    56b0:	ldp	q0, q1, [x3]
    56b4:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56b8:	ldr	q0, [x3]
    56bc:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56c0:	ldrb	w0, [x3]
    56c4:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56c8:	brk	#0x3e8
    56cc:	nop
    56d0:	ldrh	w0, [x3]
    56d4:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56d8:	brk	#0x3e8
    56dc:	nop
    56e0:	ldr	w0, [x3]
    56e4:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56e8:	brk	#0x3e8
    56ec:	nop
    56f0:	ldrsb	x0, [x3]
    56f4:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    56f8:	brk	#0x3e8
    56fc:	nop
    5700:	ldrsh	x0, [x3]
    5704:	b	5718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5cc>
    5708:	brk	#0x3e8
    570c:	nop
    5710:	ldrsw	x0, [x3]
    5714:	nop
    5718:	ldp	x29, x30, [sp], #272
    571c:	ret
    5720:	stp	x29, x30, [sp, #-272]!
    5724:	stp	q0, q1, [sp, #16]
    5728:	stp	q2, q3, [sp, #48]
    572c:	stp	q4, q5, [sp, #80]
    5730:	stp	q6, q7, [sp, #112]
    5734:	b	5744 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5f8>
    5738:	nop
    573c:	nop
    5740:	stp	x29, x30, [sp, #-272]!
    5744:	mov	x29, sp
    5748:	stp	x0, x1, [sp, #144]
    574c:	stp	x2, x3, [sp, #160]
    5750:	stp	x4, x5, [sp, #176]
    5754:	stp	x6, x7, [sp, #192]
    5758:	ldp	x0, x1, [x18, #8]
    575c:	mov	x2, x18
    5760:	b	55f0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4a4>
    5764:	b	5768 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x61c>
    5768:	adrp	x2, 17000 <memcpy@GLIBC_2.17>
    576c:	ldr	w3, [x2, #1544]
    5770:	cbnz	w3, 577c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x630>
    5774:	mrs	x3, ctr_el0
    5778:	str	w3, [x2, #1544]
    577c:	ldr	w4, [x2, #1544]
    5780:	mov	w2, #0x4                   	// #4
    5784:	and	w3, w4, #0xf
    5788:	ubfx	x4, x4, #16, #4
    578c:	lsl	w3, w2, w3
    5790:	lsl	w2, w2, w4
    5794:	sub	w4, w2, #0x1
    5798:	bic	x4, x0, x4
    579c:	sxtw	x2, w2
    57a0:	cmp	x4, x1
    57a4:	b.cc	57cc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x680>  // b.lo, b.ul, b.last
    57a8:	dsb	ish
    57ac:	sub	w2, w3, #0x1
    57b0:	sxtw	x3, w3
    57b4:	bic	x0, x0, x2
    57b8:	cmp	x0, x1
    57bc:	b.cc	57d8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x68c>  // b.lo, b.ul, b.last
    57c0:	dsb	ish
    57c4:	isb
    57c8:	ret
    57cc:	dc	cvau, x4
    57d0:	add	x4, x4, x2
    57d4:	b	57a0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x654>
    57d8:	ic	ivau, x0
    57dc:	add	x0, x0, x3
    57e0:	b	57b8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>

Disassembly of section .fini:

00000000000057e4 <.fini>:
    57e4:	stp	x29, x30, [sp, #-16]!
    57e8:	mov	x29, sp
    57ec:	ldp	x29, x30, [sp], #16
    57f0:	ret
