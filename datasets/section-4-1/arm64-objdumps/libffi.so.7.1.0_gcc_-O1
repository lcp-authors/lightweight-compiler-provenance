
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libffi.so.7.1.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001970 <.init>:
    1970:	stp	x29, x30, [sp, #-16]!
    1974:	mov	x29, sp
    1978:	bl	1c50 <ffi_prep_java_raw_closure_loc@plt+0x10>
    197c:	ldp	x29, x30, [sp], #16
    1980:	ret

Disassembly of section .plt:

0000000000001990 <memcpy@plt-0x20>:
    1990:	stp	x16, x30, [sp, #-16]!
    1994:	adrp	x16, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    1998:	ldr	x17, [x16, #4088]
    199c:	add	x16, x16, #0xff8
    19a0:	br	x17
    19a4:	nop
    19a8:	nop
    19ac:	nop

00000000000019b0 <memcpy@plt>:
    19b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19b4:	ldr	x17, [x16]
    19b8:	add	x16, x16, #0x0
    19bc:	br	x17

00000000000019c0 <ffi_prep_closure_loc@plt>:
    19c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19c4:	ldr	x17, [x16, #8]
    19c8:	add	x16, x16, #0x8
    19cc:	br	x17

00000000000019d0 <strlen@plt>:
    19d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19d4:	ldr	x17, [x16, #16]
    19d8:	add	x16, x16, #0x10
    19dc:	br	x17

00000000000019e0 <ffi_java_raw_to_ptrarray@plt>:
    19e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19e4:	ldr	x17, [x16, #24]
    19e8:	add	x16, x16, #0x18
    19ec:	br	x17

00000000000019f0 <__cxa_finalize@plt>:
    19f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #32]
    19f8:	add	x16, x16, #0x20
    19fc:	br	x17

0000000000001a00 <statfs@plt>:
    1a00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #40]
    1a08:	add	x16, x16, #0x28
    1a0c:	br	x17

0000000000001a10 <fclose@plt>:
    1a10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #48]
    1a18:	add	x16, x16, #0x30
    1a1c:	br	x17

0000000000001a20 <fopen@plt>:
    1a20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #56]
    1a28:	add	x16, x16, #0x38
    1a2c:	br	x17

0000000000001a30 <open@plt>:
    1a30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #64]
    1a38:	add	x16, x16, #0x40
    1a3c:	br	x17

0000000000001a40 <strncmp@plt>:
    1a40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #72]
    1a48:	add	x16, x16, #0x48
    1a4c:	br	x17

0000000000001a50 <memset@plt>:
    1a50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #80]
    1a58:	add	x16, x16, #0x50
    1a5c:	br	x17

0000000000001a60 <ffi_raw_to_ptrarray@plt>:
    1a60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #88]
    1a68:	add	x16, x16, #0x58
    1a6c:	br	x17

0000000000001a70 <ffi_prep_raw_closure_loc@plt>:
    1a70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #96]
    1a78:	add	x16, x16, #0x60
    1a7c:	br	x17

0000000000001a80 <setmntent@plt>:
    1a80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #104]
    1a88:	add	x16, x16, #0x68
    1a8c:	br	x17

0000000000001a90 <endmntent@plt>:
    1a90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #112]
    1a98:	add	x16, x16, #0x70
    1a9c:	br	x17

0000000000001aa0 <pthread_mutex_init@plt>:
    1aa0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #120]
    1aa8:	add	x16, x16, #0x78
    1aac:	br	x17

0000000000001ab0 <close@plt>:
    1ab0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #128]
    1ab8:	add	x16, x16, #0x80
    1abc:	br	x17

0000000000001ac0 <__gmon_start__@plt>:
    1ac0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #136]
    1ac8:	add	x16, x16, #0x88
    1acc:	br	x17

0000000000001ad0 <write@plt>:
    1ad0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #144]
    1ad8:	add	x16, x16, #0x90
    1adc:	br	x17

0000000000001ae0 <abort@plt>:
    1ae0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #152]
    1ae8:	add	x16, x16, #0x98
    1aec:	br	x17

0000000000001af0 <mkostemp@plt>:
    1af0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #160]
    1af8:	add	x16, x16, #0xa0
    1afc:	br	x17

0000000000001b00 <access@plt>:
    1b00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #168]
    1b08:	add	x16, x16, #0xa8
    1b0c:	br	x17

0000000000001b10 <mmap@plt>:
    1b10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #176]
    1b18:	add	x16, x16, #0xb0
    1b1c:	br	x17

0000000000001b20 <free@plt>:
    1b20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #184]
    1b28:	add	x16, x16, #0xb8
    1b2c:	br	x17

0000000000001b30 <ffi_java_raw_size@plt>:
    1b30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #192]
    1b38:	add	x16, x16, #0xc0
    1b3c:	br	x17

0000000000001b40 <ffi_raw_size@plt>:
    1b40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #200]
    1b48:	add	x16, x16, #0xc8
    1b4c:	br	x17

0000000000001b50 <ffi_ptrarray_to_raw@plt>:
    1b50:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #208]
    1b58:	add	x16, x16, #0xd0
    1b5c:	br	x17

0000000000001b60 <hasmntopt@plt>:
    1b60:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #216]
    1b68:	add	x16, x16, #0xd8
    1b6c:	br	x17

0000000000001b70 <strchr@plt>:
    1b70:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #224]
    1b78:	add	x16, x16, #0xe0
    1b7c:	br	x17

0000000000001b80 <munmap@plt>:
    1b80:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #232]
    1b88:	add	x16, x16, #0xe8
    1b8c:	br	x17

0000000000001b90 <ffi_call@plt>:
    1b90:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #240]
    1b98:	add	x16, x16, #0xf0
    1b9c:	br	x17

0000000000001ba0 <sysconf@plt>:
    1ba0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #248]
    1ba8:	add	x16, x16, #0xf8
    1bac:	br	x17

0000000000001bb0 <getmntent_r@plt>:
    1bb0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #256]
    1bb8:	add	x16, x16, #0x100
    1bbc:	br	x17

0000000000001bc0 <ftruncate@plt>:
    1bc0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #264]
    1bc8:	add	x16, x16, #0x108
    1bcc:	br	x17

0000000000001bd0 <__errno_location@plt>:
    1bd0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #272]
    1bd8:	add	x16, x16, #0x110
    1bdc:	br	x17

0000000000001be0 <getenv@plt>:
    1be0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #280]
    1be8:	add	x16, x16, #0x118
    1bec:	br	x17

0000000000001bf0 <ffi_java_ptrarray_to_raw@plt>:
    1bf0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #288]
    1bf8:	add	x16, x16, #0x120
    1bfc:	br	x17

0000000000001c00 <pthread_mutex_lock@plt>:
    1c00:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #296]
    1c08:	add	x16, x16, #0x128
    1c0c:	br	x17

0000000000001c10 <__getdelim@plt>:
    1c10:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #304]
    1c18:	add	x16, x16, #0x130
    1c1c:	br	x17

0000000000001c20 <pthread_mutex_unlock@plt>:
    1c20:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #312]
    1c28:	add	x16, x16, #0x138
    1c2c:	br	x17

0000000000001c30 <unlink@plt>:
    1c30:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #320]
    1c38:	add	x16, x16, #0x140
    1c3c:	br	x17

0000000000001c40 <ffi_prep_java_raw_closure_loc@plt>:
    1c40:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #328]
    1c48:	add	x16, x16, #0x148
    1c4c:	br	x17

Disassembly of section .text:

0000000000001c50 <ffi_prep_cif@@LIBFFI_BASE_7.0-0x310>:
    1c50:	adrp	x0, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    1c54:	ldr	x0, [x0, #4056]
    1c58:	cbz	x0, 1c60 <ffi_prep_java_raw_closure_loc@plt+0x20>
    1c5c:	b	1ac0 <__gmon_start__@plt>
    1c60:	ret
    1c64:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1c68:	add	x0, x0, #0x190
    1c6c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    1c70:	add	x1, x1, #0x190
    1c74:	cmp	x0, x1
    1c78:	b.eq	1ca4 <ffi_prep_java_raw_closure_loc@plt+0x64>  // b.none
    1c7c:	adrp	x1, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    1c80:	ldr	x1, [x1, #4040]
    1c84:	cbz	x1, 1ca4 <ffi_prep_java_raw_closure_loc@plt+0x64>
    1c88:	stp	x29, x30, [sp, #-16]!
    1c8c:	mov	x29, sp
    1c90:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1c94:	add	x0, x0, #0x190
    1c98:	blr	x1
    1c9c:	ldp	x29, x30, [sp], #16
    1ca0:	ret
    1ca4:	ret
    1ca8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1cac:	add	x0, x0, #0x190
    1cb0:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    1cb4:	add	x1, x1, #0x190
    1cb8:	sub	x0, x0, x1
    1cbc:	lsr	x1, x0, #63
    1cc0:	add	x0, x1, x0, asr #3
    1cc4:	cmp	xzr, x0, asr #1
    1cc8:	b.eq	1cf8 <ffi_prep_java_raw_closure_loc@plt+0xb8>  // b.none
    1ccc:	asr	x1, x0, #1
    1cd0:	adrp	x2, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    1cd4:	ldr	x2, [x2, #4064]
    1cd8:	cbz	x2, 1cf8 <ffi_prep_java_raw_closure_loc@plt+0xb8>
    1cdc:	stp	x29, x30, [sp, #-16]!
    1ce0:	mov	x29, sp
    1ce4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1ce8:	add	x0, x0, #0x190
    1cec:	blr	x2
    1cf0:	ldp	x29, x30, [sp], #16
    1cf4:	ret
    1cf8:	ret
    1cfc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d00:	ldrb	w0, [x0, #400]
    1d04:	cbnz	w0, 1d40 <ffi_prep_java_raw_closure_loc@plt+0x100>
    1d08:	stp	x29, x30, [sp, #-16]!
    1d0c:	mov	x29, sp
    1d10:	adrp	x0, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    1d14:	ldr	x0, [x0, #4048]
    1d18:	cbz	x0, 1d28 <ffi_prep_java_raw_closure_loc@plt+0xe8>
    1d1c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d20:	ldr	x0, [x0, #336]
    1d24:	bl	19f0 <__cxa_finalize@plt>
    1d28:	bl	1c64 <ffi_prep_java_raw_closure_loc@plt+0x24>
    1d2c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    1d30:	mov	w1, #0x1                   	// #1
    1d34:	strb	w1, [x0, #400]
    1d38:	ldp	x29, x30, [sp], #16
    1d3c:	ret
    1d40:	ret
    1d44:	stp	x29, x30, [sp, #-16]!
    1d48:	mov	x29, sp
    1d4c:	bl	1ca8 <ffi_prep_java_raw_closure_loc@plt+0x68>
    1d50:	ldp	x29, x30, [sp], #16
    1d54:	ret
    1d58:	cbz	x0, 1e40 <ffi_prep_java_raw_closure_loc@plt+0x200>
    1d5c:	stp	x29, x30, [sp, #-48]!
    1d60:	mov	x29, sp
    1d64:	stp	x19, x20, [sp, #16]
    1d68:	str	x21, [sp, #32]
    1d6c:	mov	x19, x0
    1d70:	mov	x20, x1
    1d74:	ldr	x21, [x0, #16]
    1d78:	cbz	x21, 1e48 <ffi_prep_java_raw_closure_loc@plt+0x208>
    1d7c:	str	xzr, [x0]
    1d80:	strh	wzr, [x0, #8]
    1d84:	ldr	x0, [x21]
    1d88:	cbnz	x0, 1e08 <ffi_prep_java_raw_closure_loc@plt+0x1c8>
    1d8c:	ldr	x0, [x19]
    1d90:	sub	x0, x0, #0x1
    1d94:	ldrh	w1, [x19, #8]
    1d98:	sub	w1, w1, #0x1
    1d9c:	sxtw	x1, w1
    1da0:	orr	x0, x0, x1
    1da4:	adds	x0, x0, #0x1
    1da8:	str	x0, [x19]
    1dac:	cset	w0, eq  // eq = none
    1db0:	ldp	x19, x20, [sp, #16]
    1db4:	ldr	x21, [sp, #32]
    1db8:	ldp	x29, x30, [sp], #48
    1dbc:	ret
    1dc0:	bl	1d58 <ffi_prep_java_raw_closure_loc@plt+0x118>
    1dc4:	cbz	w0, 1e10 <ffi_prep_java_raw_closure_loc@plt+0x1d0>
    1dc8:	mov	w0, #0x1                   	// #1
    1dcc:	b	1db0 <ffi_prep_java_raw_closure_loc@plt+0x170>
    1dd0:	ldr	x1, [x21]
    1dd4:	ldr	x0, [x19]
    1dd8:	ldr	x1, [x1]
    1ddc:	add	x0, x0, x1
    1de0:	str	x0, [x19]
    1de4:	ldr	x0, [x21]
    1de8:	ldrh	w1, [x19, #8]
    1dec:	ldrh	w2, [x0, #8]
    1df0:	ldrh	w0, [x0, #8]
    1df4:	cmp	w2, w1, uxth
    1df8:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1dfc:	strh	w0, [x19, #8]
    1e00:	ldr	x0, [x21, #8]!
    1e04:	cbz	x0, 1d8c <ffi_prep_java_raw_closure_loc@plt+0x14c>
    1e08:	ldr	x1, [x0]
    1e0c:	cbz	x1, 1dc0 <ffi_prep_java_raw_closure_loc@plt+0x180>
    1e10:	ldr	x0, [x21]
    1e14:	ldrh	w2, [x0, #8]
    1e18:	sub	w2, w2, #0x1
    1e1c:	sxtw	x2, w2
    1e20:	ldr	x0, [x19]
    1e24:	sub	x0, x0, #0x1
    1e28:	orr	x2, x2, x0
    1e2c:	add	x2, x2, #0x1
    1e30:	str	x2, [x19]
    1e34:	cbz	x20, 1dd0 <ffi_prep_java_raw_closure_loc@plt+0x190>
    1e38:	str	x2, [x20], #8
    1e3c:	b	1dd0 <ffi_prep_java_raw_closure_loc@plt+0x190>
    1e40:	mov	w0, #0x1                   	// #1
    1e44:	ret
    1e48:	mov	w0, #0x1                   	// #1
    1e4c:	b	1db0 <ffi_prep_java_raw_closure_loc@plt+0x170>
    1e50:	cmp	w1, #0x1
    1e54:	b.ne	1f58 <ffi_prep_java_raw_closure_loc@plt+0x318>  // b.any
    1e58:	stp	x29, x30, [sp, #-64]!
    1e5c:	mov	x29, sp
    1e60:	stp	x21, x22, [sp, #32]
    1e64:	str	x23, [sp, #48]
    1e68:	mov	x22, x0
    1e6c:	mov	w23, w1
    1e70:	mov	w0, #0x1                   	// #1
    1e74:	str	w0, [x22]
    1e78:	str	x6, [x22, #8]
    1e7c:	str	w4, [x22, #4]
    1e80:	str	x5, [x22, #16]
    1e84:	str	wzr, [x22, #28]
    1e88:	ldr	x0, [x5]
    1e8c:	cbz	x0, 1ec4 <ffi_prep_java_raw_closure_loc@plt+0x284>
    1e90:	stp	x19, x20, [sp, #16]
    1e94:	ldr	x0, [x22, #16]
    1e98:	ldrh	w0, [x0, #10]
    1e9c:	cmp	w0, #0xd
    1ea0:	cset	w19, eq  // eq = none
    1ea4:	lsl	w19, w19, #3
    1ea8:	ldr	x20, [x22, #8]
    1eac:	ldr	w0, [x22, #4]
    1eb0:	cbz	w0, 1f38 <ffi_prep_java_raw_closure_loc@plt+0x2f8>
    1eb4:	sub	w21, w0, #0x1
    1eb8:	add	x21, x21, #0x1
    1ebc:	add	x21, x20, x21, lsl #3
    1ec0:	b	1f18 <ffi_prep_java_raw_closure_loc@plt+0x2d8>
    1ec4:	mov	x1, #0x0                   	// #0
    1ec8:	mov	x0, x5
    1ecc:	bl	1d58 <ffi_prep_java_raw_closure_loc@plt+0x118>
    1ed0:	mov	w1, w0
    1ed4:	mov	w0, w23
    1ed8:	cbz	w1, 1e90 <ffi_prep_java_raw_closure_loc@plt+0x250>
    1edc:	b	1f48 <ffi_prep_java_raw_closure_loc@plt+0x308>
    1ee0:	ldr	x1, [x20], #8
    1ee4:	ldrh	w2, [x1, #8]
    1ee8:	sub	w2, w2, #0x1
    1eec:	sub	w0, w19, #0x1
    1ef0:	orr	w0, w0, w2
    1ef4:	tst	w2, w19
    1ef8:	csinc	w19, w19, w0, eq  // eq = none
    1efc:	ldr	x2, [x1]
    1f00:	sub	w2, w2, #0x1
    1f04:	orr	w2, w2, #0x7
    1f08:	add	w2, w2, #0x1
    1f0c:	add	w19, w19, w2
    1f10:	cmp	x20, x21
    1f14:	b.eq	1f38 <ffi_prep_java_raw_closure_loc@plt+0x2f8>  // b.none
    1f18:	ldr	x0, [x20]
    1f1c:	ldr	x1, [x0]
    1f20:	cbnz	x1, 1ee0 <ffi_prep_java_raw_closure_loc@plt+0x2a0>
    1f24:	bl	1d58 <ffi_prep_java_raw_closure_loc@plt+0x118>
    1f28:	cbz	w0, 1ee0 <ffi_prep_java_raw_closure_loc@plt+0x2a0>
    1f2c:	mov	w0, w23
    1f30:	ldp	x19, x20, [sp, #16]
    1f34:	b	1f48 <ffi_prep_java_raw_closure_loc@plt+0x308>
    1f38:	str	w19, [x22, #24]
    1f3c:	mov	x0, x22
    1f40:	bl	5da8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1510>
    1f44:	ldp	x19, x20, [sp, #16]
    1f48:	ldp	x21, x22, [sp, #32]
    1f4c:	ldr	x23, [sp, #48]
    1f50:	ldp	x29, x30, [sp], #64
    1f54:	ret
    1f58:	mov	w0, #0x2                   	// #2
    1f5c:	ret

0000000000001f60 <ffi_prep_cif@@LIBFFI_BASE_7.0>:
    1f60:	stp	x29, x30, [sp, #-16]!
    1f64:	mov	x29, sp
    1f68:	mov	x6, x4
    1f6c:	mov	x5, x3
    1f70:	mov	w4, w2
    1f74:	mov	w3, w2
    1f78:	mov	w2, #0x0                   	// #0
    1f7c:	bl	1e50 <ffi_prep_java_raw_closure_loc@plt+0x210>
    1f80:	ldp	x29, x30, [sp], #16
    1f84:	ret

0000000000001f88 <ffi_prep_cif_var@@LIBFFI_BASE_7.0>:
    1f88:	stp	x29, x30, [sp, #-16]!
    1f8c:	mov	x29, sp
    1f90:	mov	x6, x5
    1f94:	mov	x5, x4
    1f98:	mov	w4, w3
    1f9c:	mov	w3, w2
    1fa0:	mov	w2, #0x1                   	// #1
    1fa4:	bl	1e50 <ffi_prep_java_raw_closure_loc@plt+0x210>
    1fa8:	ldp	x29, x30, [sp], #16
    1fac:	ret

0000000000001fb0 <ffi_prep_closure@@LIBFFI_CLOSURE_7.0>:
    1fb0:	stp	x29, x30, [sp, #-16]!
    1fb4:	mov	x29, sp
    1fb8:	mov	x4, x0
    1fbc:	bl	19c0 <ffi_prep_closure_loc@plt>
    1fc0:	ldp	x29, x30, [sp], #16
    1fc4:	ret

0000000000001fc8 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1>:
    1fc8:	cmp	w0, #0x1
    1fcc:	b.ne	2000 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x38>  // b.any
    1fd0:	mov	x3, x1
    1fd4:	ldrh	w1, [x1, #10]
    1fd8:	cmp	w1, #0xd
    1fdc:	b.eq	1fe4 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x1c>  // b.none
    1fe0:	ret
    1fe4:	stp	x29, x30, [sp, #-16]!
    1fe8:	mov	x29, sp
    1fec:	mov	x1, x2
    1ff0:	mov	x0, x3
    1ff4:	bl	1d58 <ffi_prep_java_raw_closure_loc@plt+0x118>
    1ff8:	ldp	x29, x30, [sp], #16
    1ffc:	ret
    2000:	mov	w0, #0x2                   	// #2
    2004:	ret

0000000000002008 <ffi_raw_size@@LIBFFI_BASE_7.0>:
    2008:	ldr	x3, [x0, #8]
    200c:	ldr	w2, [x0, #4]
    2010:	subs	w2, w2, #0x1
    2014:	b.mi	2058 <ffi_raw_size@@LIBFFI_BASE_7.0+0x50>  // b.first
    2018:	mov	x0, #0x0                   	// #0
    201c:	b	2040 <ffi_raw_size@@LIBFFI_BASE_7.0+0x38>
    2020:	add	x1, x0, #0x1
    2024:	ldr	x0, [x4]
    2028:	sub	x0, x0, #0x1
    202c:	orr	x0, x0, #0x7
    2030:	add	x0, x0, x1
    2034:	add	x3, x3, #0x8
    2038:	subs	w2, w2, #0x1
    203c:	b.mi	205c <ffi_raw_size@@LIBFFI_BASE_7.0+0x54>  // b.first
    2040:	ldr	x4, [x3]
    2044:	ldrh	w1, [x4, #10]
    2048:	cmp	w1, #0xd
    204c:	b.ne	2020 <ffi_raw_size@@LIBFFI_BASE_7.0+0x18>  // b.any
    2050:	add	x0, x0, #0x8
    2054:	b	2034 <ffi_raw_size@@LIBFFI_BASE_7.0+0x2c>
    2058:	mov	x0, #0x0                   	// #0
    205c:	ret

0000000000002060 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    2060:	ldr	x5, [x0, #8]
    2064:	ldr	w3, [x0, #4]
    2068:	cbz	w3, 20d0 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x70>
    206c:	mov	x3, #0x0                   	// #0
    2070:	b	20ac <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x4c>
    2074:	ldr	x4, [x1], #8
    2078:	str	x4, [x2, x3, lsl #3]
    207c:	b	209c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x3c>
    2080:	str	x1, [x2, x3, lsl #3]
    2084:	ldr	x4, [x5, x3, lsl #3]
    2088:	ldr	x4, [x4]
    208c:	sub	x4, x4, #0x1
    2090:	orr	x4, x4, #0x7
    2094:	add	x4, x4, #0x1
    2098:	add	x1, x1, x4
    209c:	add	x3, x3, #0x1
    20a0:	ldr	w4, [x0, #4]
    20a4:	cmp	w4, w3
    20a8:	b.ls	20d0 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x70>  // b.plast
    20ac:	ldr	x4, [x5, x3, lsl #3]
    20b0:	ldrh	w4, [x4, #10]
    20b4:	cmp	w4, #0xd
    20b8:	b.eq	2074 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x14>  // b.none
    20bc:	cmp	w4, #0xf
    20c0:	b.ne	2080 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x20>  // b.any
    20c4:	ldr	x4, [x1], #8
    20c8:	str	x4, [x2, x3, lsl #3]
    20cc:	b	209c <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x3c>
    20d0:	ret

00000000000020d4 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    20d4:	stp	x29, x30, [sp, #-64]!
    20d8:	mov	x29, sp
    20dc:	stp	x21, x22, [sp, #32]
    20e0:	str	x23, [sp, #48]
    20e4:	mov	x21, x0
    20e8:	ldr	x23, [x0, #8]
    20ec:	ldr	w0, [x0, #4]
    20f0:	cbz	w0, 2220 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x14c>
    20f4:	stp	x19, x20, [sp, #16]
    20f8:	mov	x22, x1
    20fc:	mov	x19, x2
    2100:	mov	x20, #0x0                   	// #0
    2104:	b	217c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xa8>
    2108:	cmp	w3, #0x7
    210c:	b.eq	21b0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xdc>  // b.none
    2110:	b.ls	2124 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x50>  // b.plast
    2114:	ldr	x0, [x22, x20, lsl #3]
    2118:	ldrsh	x0, [x0]
    211c:	str	x0, [x19], #8
    2120:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2124:	cmp	w3, #0x5
    2128:	b.eq	2160 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x8c>  // b.none
    212c:	cmp	w3, #0x6
    2130:	b.ne	21f0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x11c>  // b.any
    2134:	ldr	x0, [x22, x20, lsl #3]
    2138:	ldrsb	x0, [x0]
    213c:	str	x0, [x19], #8
    2140:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2144:	cmp	w3, #0xa
    2148:	b.eq	21d0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xfc>  // b.none
    214c:	cmp	w3, #0xd
    2150:	b.ne	21f0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x11c>  // b.any
    2154:	ldr	x0, [x22, x20, lsl #3]
    2158:	str	x0, [x19], #8
    215c:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2160:	ldr	x0, [x22, x20, lsl #3]
    2164:	ldrb	w0, [x0]
    2168:	str	x0, [x19], #8
    216c:	add	x20, x20, #0x1
    2170:	ldr	w2, [x21, #4]
    2174:	cmp	w2, w20
    2178:	b.ls	221c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x148>  // b.plast
    217c:	ldr	x2, [x23, x20, lsl #3]
    2180:	ldrh	w3, [x2, #10]
    2184:	cmp	w3, #0x9
    2188:	b.eq	21c0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xec>  // b.none
    218c:	b.ls	2108 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x34>  // b.plast
    2190:	cmp	w3, #0xe
    2194:	b.eq	21e0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x10c>  // b.none
    2198:	b.ls	2144 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x70>  // b.plast
    219c:	cmp	w3, #0xf
    21a0:	b.ne	21f0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x11c>  // b.any
    21a4:	ldr	x0, [x22, x20, lsl #3]
    21a8:	str	x0, [x19], #8
    21ac:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    21b0:	ldr	x0, [x22, x20, lsl #3]
    21b4:	ldrh	w0, [x0]
    21b8:	str	x0, [x19], #8
    21bc:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    21c0:	ldr	x0, [x22, x20, lsl #3]
    21c4:	ldr	w0, [x0]
    21c8:	str	x0, [x19], #8
    21cc:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    21d0:	ldr	x0, [x22, x20, lsl #3]
    21d4:	ldrsw	x0, [x0]
    21d8:	str	x0, [x19], #8
    21dc:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    21e0:	ldr	x0, [x22, x20, lsl #3]
    21e4:	ldr	x0, [x0]
    21e8:	str	x0, [x19], #8
    21ec:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    21f0:	ldr	x2, [x2]
    21f4:	ldr	x1, [x22, x20, lsl #3]
    21f8:	mov	x0, x19
    21fc:	bl	19b0 <memcpy@plt>
    2200:	ldr	x0, [x23, x20, lsl #3]
    2204:	ldr	x0, [x0]
    2208:	sub	x0, x0, #0x1
    220c:	orr	x0, x0, #0x7
    2210:	add	x0, x0, #0x1
    2214:	add	x19, x19, x0
    2218:	b	216c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    221c:	ldp	x19, x20, [sp, #16]
    2220:	ldp	x21, x22, [sp, #32]
    2224:	ldr	x23, [sp, #48]
    2228:	ldp	x29, x30, [sp], #64
    222c:	ret
    2230:	stp	x29, x30, [sp, #-64]!
    2234:	mov	x29, sp
    2238:	stp	x19, x20, [sp, #16]
    223c:	stp	x21, x22, [sp, #32]
    2240:	str	x23, [sp, #48]
    2244:	mov	x19, x0
    2248:	mov	x21, x1
    224c:	mov	x22, x2
    2250:	mov	x20, x3
    2254:	bl	1b40 <ffi_raw_size@plt>
    2258:	add	x4, x0, #0xf
    225c:	and	x4, x4, #0xfffffffffffffff0
    2260:	sub	sp, sp, x4
    2264:	mov	x23, sp
    2268:	mov	x2, x23
    226c:	mov	x1, x22
    2270:	mov	x0, x19
    2274:	bl	1b50 <ffi_ptrarray_to_raw@plt>
    2278:	ldr	x4, [x20, #48]
    227c:	ldr	x3, [x20, #56]
    2280:	mov	x2, x23
    2284:	mov	x1, x21
    2288:	mov	x0, x19
    228c:	blr	x4
    2290:	mov	sp, x29
    2294:	ldp	x19, x20, [sp, #16]
    2298:	ldp	x21, x22, [sp, #32]
    229c:	ldr	x23, [sp, #48]
    22a0:	ldp	x29, x30, [sp], #64
    22a4:	ret

00000000000022a8 <ffi_raw_call@@LIBFFI_BASE_7.0>:
    22a8:	stp	x29, x30, [sp, #-48]!
    22ac:	mov	x29, sp
    22b0:	stp	x19, x20, [sp, #16]
    22b4:	stp	x21, x22, [sp, #32]
    22b8:	mov	x19, x0
    22bc:	mov	x20, x1
    22c0:	mov	x21, x2
    22c4:	mov	x1, x3
    22c8:	ldr	w4, [x0, #4]
    22cc:	lsl	x4, x4, #3
    22d0:	add	x4, x4, #0xf
    22d4:	and	x4, x4, #0xffffffff0
    22d8:	sub	sp, sp, x4
    22dc:	mov	x22, sp
    22e0:	mov	x2, x22
    22e4:	bl	1a60 <ffi_raw_to_ptrarray@plt>
    22e8:	mov	x3, x22
    22ec:	mov	x2, x21
    22f0:	mov	x1, x20
    22f4:	mov	x0, x19
    22f8:	bl	1b90 <ffi_call@plt>
    22fc:	mov	sp, x29
    2300:	ldp	x19, x20, [sp, #16]
    2304:	ldp	x21, x22, [sp, #32]
    2308:	ldp	x29, x30, [sp], #48
    230c:	ret

0000000000002310 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2310:	stp	x29, x30, [sp, #-48]!
    2314:	mov	x29, sp
    2318:	stp	x19, x20, [sp, #16]
    231c:	str	x21, [sp, #32]
    2320:	mov	x19, x0
    2324:	mov	x21, x2
    2328:	mov	x20, x3
    232c:	mov	x3, x4
    2330:	adrp	x2, 2000 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x38>
    2334:	add	x2, x2, #0x230
    2338:	bl	19c0 <ffi_prep_closure_loc@plt>
    233c:	cbnz	w0, 2348 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x38>
    2340:	str	x21, [x19, #48]
    2344:	str	x20, [x19, #56]
    2348:	ldp	x19, x20, [sp, #16]
    234c:	ldr	x21, [sp, #32]
    2350:	ldp	x29, x30, [sp], #48
    2354:	ret

0000000000002358 <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0>:
    2358:	stp	x29, x30, [sp, #-16]!
    235c:	mov	x29, sp
    2360:	mov	x4, x0
    2364:	bl	1a70 <ffi_prep_raw_closure_loc@plt>
    2368:	ldp	x29, x30, [sp], #16
    236c:	ret

0000000000002370 <ffi_java_raw_size@@LIBFFI_BASE_7.0>:
    2370:	ldr	x3, [x0, #8]
    2374:	ldr	w2, [x0, #4]
    2378:	subs	w2, w2, #0x1
    237c:	b.mi	2390 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x20>  // b.first
    2380:	mov	x0, #0x0                   	// #0
    2384:	b	23b0 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x40>
    2388:	bl	1ae0 <abort@plt>
    238c:	bl	1ae0 <abort@plt>
    2390:	mov	x0, #0x0                   	// #0
    2394:	ret
    2398:	ldp	x29, x30, [sp], #16
    239c:	ret
    23a0:	add	x0, x0, #0x8
    23a4:	add	x3, x3, #0x8
    23a8:	subs	w2, w2, #0x1
    23ac:	b.mi	23d8 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x68>  // b.first
    23b0:	ldr	x1, [x3]
    23b4:	ldrh	w1, [x1, #10]
    23b8:	cmp	w1, #0xc
    23bc:	b.hi	23dc <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x6c>  // b.pmore
    23c0:	cmp	w1, #0xa
    23c4:	b.hi	23d0 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x60>  // b.pmore
    23c8:	cmp	w1, #0x3
    23cc:	b.ne	23a0 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x30>  // b.any
    23d0:	add	x0, x0, #0x10
    23d4:	b	23a4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x34>
    23d8:	ret
    23dc:	stp	x29, x30, [sp, #-16]!
    23e0:	mov	x29, sp
    23e4:	cmp	w1, #0xd
    23e8:	b.eq	2388 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x18>  // b.none
    23ec:	cmp	w1, #0xf
    23f0:	b.eq	238c <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x1c>  // b.none
    23f4:	add	x0, x0, #0x8
    23f8:	add	x3, x3, #0x8
    23fc:	subs	w2, w2, #0x1
    2400:	b.mi	2398 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x28>  // b.first
    2404:	ldr	x1, [x3]
    2408:	ldrh	w1, [x1, #10]
    240c:	cmp	w1, #0xc
    2410:	b.hi	23e4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x74>  // b.pmore
    2414:	cmp	w1, #0xa
    2418:	b.hi	2424 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0xb4>  // b.pmore
    241c:	cmp	w1, #0x3
    2420:	b.ne	23f4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x84>  // b.any
    2424:	add	x0, x0, #0x10
    2428:	b	23f8 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x88>

000000000000242c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    242c:	ldr	x5, [x0, #8]
    2430:	ldr	w3, [x0, #4]
    2434:	cbz	w3, 2498 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x6c>
    2438:	mov	x3, #0x0                   	// #0
    243c:	b	2460 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x34>
    2440:	cmp	w4, #0xf
    2444:	b.eq	248c <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x60>  // b.none
    2448:	str	x1, [x2, x3, lsl #3]
    244c:	add	x1, x1, #0x8
    2450:	add	x3, x3, #0x1
    2454:	ldr	w4, [x0, #4]
    2458:	cmp	w4, w3
    245c:	b.ls	2498 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x6c>  // b.plast
    2460:	ldr	x4, [x5, x3, lsl #3]
    2464:	ldrh	w4, [x4, #10]
    2468:	cmp	w4, #0xc
    246c:	b.hi	2440 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x14>  // b.pmore
    2470:	cmp	w4, #0xa
    2474:	b.hi	2480 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x54>  // b.pmore
    2478:	cmp	w4, #0x3
    247c:	b.ne	2448 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x1c>  // b.any
    2480:	str	x1, [x2, x3, lsl #3]
    2484:	add	x1, x1, #0x10
    2488:	b	2450 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x24>
    248c:	stp	x29, x30, [sp, #-16]!
    2490:	mov	x29, sp
    2494:	bl	1ae0 <abort@plt>
    2498:	ret

000000000000249c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    249c:	ldr	x5, [x0, #8]
    24a0:	ldr	w3, [x0, #4]
    24a4:	cbz	w3, 25b4 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x118>
    24a8:	mov	x4, #0x0                   	// #0
    24ac:	b	2544 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xa8>
    24b0:	cmp	w3, #0x2
    24b4:	b.ne	24c8 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x2c>  // b.any
    24b8:	ldr	x3, [x1, x4, lsl #3]
    24bc:	ldr	s0, [x3]
    24c0:	str	s0, [x2], #8
    24c4:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    24c8:	cmp	w3, #0x3
    24cc:	b.ne	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>  // b.any
    24d0:	ldr	x3, [x1, x4, lsl #3]
    24d4:	ldr	x3, [x3]
    24d8:	str	x3, [x2], #16
    24dc:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    24e0:	cmp	w3, #0xa
    24e4:	b.eq	25a4 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x108>  // b.none
    24e8:	cmp	w3, #0xa
    24ec:	b.ls	2510 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x74>  // b.plast
    24f0:	cmp	w3, #0xc
    24f4:	b.ls	24d0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x34>  // b.plast
    24f8:	cmp	w3, #0xe
    24fc:	b.ne	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>  // b.any
    2500:	ldr	x3, [x1, x4, lsl #3]
    2504:	ldr	x3, [x3]
    2508:	str	x3, [x2], #8
    250c:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2510:	cmp	w3, #0x9
    2514:	b.ne	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>  // b.any
    2518:	ldr	x3, [x1, x4, lsl #3]
    251c:	ldr	w3, [x3]
    2520:	str	x3, [x2], #8
    2524:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2528:	ldr	x3, [x1, x4, lsl #3]
    252c:	ldrb	w3, [x3]
    2530:	str	x3, [x2], #8
    2534:	add	x4, x4, #0x1
    2538:	ldr	w3, [x0, #4]
    253c:	cmp	w3, w4
    2540:	b.ls	25b4 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x118>  // b.plast
    2544:	ldr	x3, [x5, x4, lsl #3]
    2548:	ldrh	w3, [x3, #10]
    254c:	cmp	w3, #0x8
    2550:	b.eq	2594 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xf8>  // b.none
    2554:	cmp	w3, #0x8
    2558:	b.hi	24e0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x44>  // b.pmore
    255c:	cmp	w3, #0x5
    2560:	b.eq	2528 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x8c>  // b.none
    2564:	cmp	w3, #0x5
    2568:	b.ls	24b0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x14>  // b.plast
    256c:	cmp	w3, #0x6
    2570:	b.eq	2584 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe8>  // b.none
    2574:	ldr	x3, [x1, x4, lsl #3]
    2578:	ldrh	w3, [x3]
    257c:	str	x3, [x2], #8
    2580:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2584:	ldr	x3, [x1, x4, lsl #3]
    2588:	ldrsb	x3, [x3]
    258c:	str	x3, [x2], #8
    2590:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    2594:	ldr	x3, [x1, x4, lsl #3]
    2598:	ldrsh	x3, [x3]
    259c:	str	x3, [x2], #8
    25a0:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    25a4:	ldr	x3, [x1, x4, lsl #3]
    25a8:	ldrsw	x3, [x3]
    25ac:	str	x3, [x2], #8
    25b0:	b	2534 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x98>
    25b4:	ret
    25b8:	stp	x29, x30, [sp, #-64]!
    25bc:	mov	x29, sp
    25c0:	stp	x19, x20, [sp, #16]
    25c4:	stp	x21, x22, [sp, #32]
    25c8:	str	x23, [sp, #48]
    25cc:	mov	x19, x0
    25d0:	mov	x21, x1
    25d4:	mov	x22, x2
    25d8:	mov	x20, x3
    25dc:	bl	1b30 <ffi_java_raw_size@plt>
    25e0:	add	x4, x0, #0xf
    25e4:	and	x4, x4, #0xfffffffffffffff0
    25e8:	sub	sp, sp, x4
    25ec:	mov	x23, sp
    25f0:	mov	x2, x23
    25f4:	mov	x1, x22
    25f8:	mov	x0, x19
    25fc:	bl	1bf0 <ffi_java_ptrarray_to_raw@plt>
    2600:	ldr	x4, [x20, #48]
    2604:	ldr	x3, [x20, #56]
    2608:	mov	x2, x23
    260c:	mov	x1, x21
    2610:	mov	x0, x19
    2614:	blr	x4
    2618:	mov	sp, x29
    261c:	ldp	x19, x20, [sp, #16]
    2620:	ldp	x21, x22, [sp, #32]
    2624:	ldr	x23, [sp, #48]
    2628:	ldp	x29, x30, [sp], #64
    262c:	ret

0000000000002630 <ffi_java_raw_call@@LIBFFI_BASE_7.0>:
    2630:	stp	x29, x30, [sp, #-48]!
    2634:	mov	x29, sp
    2638:	stp	x19, x20, [sp, #16]
    263c:	stp	x21, x22, [sp, #32]
    2640:	mov	x19, x0
    2644:	mov	x20, x1
    2648:	mov	x21, x2
    264c:	mov	x1, x3
    2650:	ldr	w4, [x0, #4]
    2654:	lsl	x4, x4, #3
    2658:	add	x4, x4, #0xf
    265c:	and	x4, x4, #0xffffffff0
    2660:	sub	sp, sp, x4
    2664:	mov	x22, sp
    2668:	mov	x2, x22
    266c:	bl	19e0 <ffi_java_raw_to_ptrarray@plt>
    2670:	mov	x3, x22
    2674:	mov	x2, x21
    2678:	mov	x1, x20
    267c:	mov	x0, x19
    2680:	bl	1b90 <ffi_call@plt>
    2684:	mov	sp, x29
    2688:	ldp	x19, x20, [sp, #16]
    268c:	ldp	x21, x22, [sp, #32]
    2690:	ldp	x29, x30, [sp], #48
    2694:	ret

0000000000002698 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2698:	stp	x29, x30, [sp, #-48]!
    269c:	mov	x29, sp
    26a0:	stp	x19, x20, [sp, #16]
    26a4:	str	x21, [sp, #32]
    26a8:	mov	x19, x0
    26ac:	mov	x21, x2
    26b0:	mov	x20, x3
    26b4:	mov	x3, x4
    26b8:	adrp	x2, 2000 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x38>
    26bc:	add	x2, x2, #0x5b8
    26c0:	bl	19c0 <ffi_prep_closure_loc@plt>
    26c4:	cbnz	w0, 26d0 <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x38>
    26c8:	str	x21, [x19, #48]
    26cc:	str	x20, [x19, #56]
    26d0:	ldp	x19, x20, [sp, #16]
    26d4:	ldr	x21, [sp, #32]
    26d8:	ldp	x29, x30, [sp], #48
    26dc:	ret

00000000000026e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0>:
    26e0:	stp	x29, x30, [sp, #-16]!
    26e4:	mov	x29, sp
    26e8:	mov	x4, x0
    26ec:	bl	1c40 <ffi_prep_java_raw_closure_loc@plt>
    26f0:	ldp	x29, x30, [sp], #16
    26f4:	ret
    26f8:	add	x0, x0, #0x398
    26fc:	b	2708 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x28>
    2700:	ldr	x0, [x0, #16]
    2704:	cbz	x0, 2724 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x44>
    2708:	ldr	x2, [x0]
    270c:	cmp	x2, x1
    2710:	b.hi	2700 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x20>  // b.pmore
    2714:	ldr	x3, [x0, #8]
    2718:	add	x2, x2, x3
    271c:	cmp	x1, x2
    2720:	b.cs	2700 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x20>  // b.hs, b.nlast
    2724:	ret
    2728:	neg	x4, x1
    272c:	and	x4, x4, #0x7
    2730:	ands	x3, x1, #0x7
    2734:	csel	x3, x4, x3, ne  // ne = any
    2738:	add	x4, x1, x3
    273c:	sub	x3, x2, x3
    2740:	str	x4, [x0, #40]
    2744:	str	x3, [x0, #16]
    2748:	orr	x3, x3, #0x1
    274c:	str	x3, [x4, #8]
    2750:	add	x1, x1, x2
    2754:	mov	x2, #0x48                  	// #72
    2758:	str	x2, [x1, #8]
    275c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    2760:	ldr	x1, [x1, #440]
    2764:	str	x1, [x0, #48]
    2768:	ret
    276c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2770:	ldr	w1, [x0, #456]
    2774:	sbfiz	x0, x1, #1, #32
    2778:	add	x0, x0, w1, sxtw
    277c:	adrp	x2, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    2780:	add	x2, x2, #0xd18
    2784:	add	x0, x2, x0, lsl #3
    2788:	ldr	w0, [x0, #16]
    278c:	cbz	w0, 27e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x104>
    2790:	stp	x29, x30, [sp, #-16]!
    2794:	mov	x29, sp
    2798:	sbfiz	x0, x1, #1, #32
    279c:	add	x1, x0, w1, sxtw
    27a0:	ldr	x1, [x2, x1, lsl #3]
    27a4:	mov	x0, #0x0                   	// #0
    27a8:	blr	x1
    27ac:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    27b0:	ldr	w0, [x0, #456]
    27b4:	add	w1, w0, #0x1
    27b8:	cmp	w0, #0x6
    27bc:	b.eq	27d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xf4>  // b.none
    27c0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    27c4:	str	w1, [x0, #456]
    27c8:	mov	w0, #0x0                   	// #0
    27cc:	ldp	x29, x30, [sp], #16
    27d0:	ret
    27d4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    27d8:	str	wzr, [x0, #456]
    27dc:	mov	w0, #0x1                   	// #1
    27e0:	b	27cc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xec>
    27e4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    27e8:	ldr	w0, [x0, #456]
    27ec:	add	w1, w0, #0x1
    27f0:	cmp	w0, #0x6
    27f4:	b.eq	2808 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x128>  // b.none
    27f8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    27fc:	str	w1, [x0, #456]
    2800:	mov	w0, #0x0                   	// #0
    2804:	ret
    2808:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    280c:	str	wzr, [x0, #456]
    2810:	mov	w0, #0x1                   	// #1
    2814:	ret
    2818:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    281c:	ldr	x0, [x0, #416]
    2820:	cbz	x0, 282c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x14c>
    2824:	mov	w0, #0x0                   	// #0
    2828:	ret
    282c:	stp	x29, x30, [sp, #-32]!
    2830:	mov	x29, sp
    2834:	stp	x19, x20, [sp, #16]
    2838:	adrp	x19, 18000 <memcpy@GLIBC_2.17>
    283c:	add	x0, x19, #0x198
    2840:	mov	x1, #0xffffffffffffffff    	// #-1
    2844:	str	x1, [x0, #24]
    2848:	mov	x1, #0x200000              	// #2097152
    284c:	str	x1, [x0, #32]
    2850:	mov	w1, #0x7                   	// #7
    2854:	str	w1, [x0, #40]
    2858:	add	x0, x0, #0x38
    285c:	bl	1c00 <pthread_mutex_lock@plt>
    2860:	ldr	x0, [x19, #408]
    2864:	cbz	x0, 28c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1e8>
    2868:	adrp	x20, 18000 <memcpy@GLIBC_2.17>
    286c:	add	x20, x20, #0x198
    2870:	add	x0, x20, #0x38
    2874:	bl	1c20 <pthread_mutex_unlock@plt>
    2878:	mov	w0, #0x1e                  	// #30
    287c:	bl	1ba0 <sysconf@plt>
    2880:	mov	x19, x0
    2884:	str	x0, [x20, #8]
    2888:	mov	w0, #0x1e                  	// #30
    288c:	bl	1ba0 <sysconf@plt>
    2890:	mov	x2, x19
    2894:	cbnz	x0, 28f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x214>
    2898:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    289c:	str	x2, [x0, #424]
    28a0:	sub	x1, x2, #0x1
    28a4:	and	x1, x1, x2
    28a8:	sub	x0, x19, #0x1
    28ac:	and	x19, x0, x19
    28b0:	orr	x19, x1, x19
    28b4:	cbnz	x19, 2904 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x224>
    28b8:	mov	w0, #0x0                   	// #0
    28bc:	ldp	x19, x20, [sp, #16]
    28c0:	ldp	x29, x30, [sp], #32
    28c4:	ret
    28c8:	mov	x0, x19
    28cc:	add	x19, x19, #0x198
    28d0:	mov	x1, #0x5858                	// #22616
    28d4:	movk	x1, #0x5858, lsl #16
    28d8:	str	x1, [x0, #408]
    28dc:	mov	x1, #0x0                   	// #0
    28e0:	add	x0, x19, #0x3d0
    28e4:	bl	1aa0 <pthread_mutex_init@plt>
    28e8:	ldr	w0, [x19, #40]
    28ec:	str	w0, [x19, #968]
    28f0:	b	2868 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x188>
    28f4:	mov	w0, #0x1e                  	// #30
    28f8:	bl	1ba0 <sysconf@plt>
    28fc:	mov	x2, x0
    2900:	b	2898 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1b8>
    2904:	bl	1ae0 <abort@plt>
    2908:	stp	x29, x30, [sp, #-32]!
    290c:	mov	x29, sp
    2910:	stp	x19, x20, [sp, #16]
    2914:	mov	x19, x0
    2918:	mov	x20, x1
    291c:	mov	x1, x0
    2920:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2924:	add	x0, x0, #0x198
    2928:	add	x0, x0, #0x68
    292c:	bl	26f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x18>
    2930:	cbz	x0, 2950 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x270>
    2934:	ldr	x0, [x0, #24]
    2938:	add	x0, x19, x0
    293c:	cmp	x19, x0
    2940:	b.eq	2950 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x270>  // b.none
    2944:	mov	x1, x20
    2948:	bl	1b80 <munmap@plt>
    294c:	cbnz	w0, 295c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x27c>
    2950:	mov	x1, x20
    2954:	mov	x0, x19
    2958:	bl	1b80 <munmap@plt>
    295c:	ldp	x19, x20, [sp, #16]
    2960:	ldp	x29, x30, [sp], #32
    2964:	ret
    2968:	stp	x29, x30, [sp, #-48]!
    296c:	mov	x29, sp
    2970:	stp	x19, x20, [sp, #16]
    2974:	str	x21, [sp, #32]
    2978:	mov	x20, x0
    297c:	mov	w2, #0x1c0                 	// #448
    2980:	mov	w1, #0x4082                	// #16514
    2984:	movk	w1, #0x48, lsl #16
    2988:	bl	1a30 <open@plt>
    298c:	mov	w19, w0
    2990:	cmn	w0, #0x1
    2994:	b.ne	2a14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x334>  // b.any
    2998:	bl	1bd0 <__errno_location@plt>
    299c:	ldr	w1, [x0]
    29a0:	sub	w2, w1, #0x15
    29a4:	cmp	w1, #0x5f
    29a8:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    29ac:	b.hi	2a14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x334>  // b.pmore
    29b0:	str	wzr, [x0]
    29b4:	mov	x0, x20
    29b8:	bl	19d0 <strlen@plt>
    29bc:	sxtw	x19, w0
    29c0:	add	x0, x19, #0x1a
    29c4:	and	x0, x0, #0xfffffffffffffff0
    29c8:	sub	sp, sp, x0
    29cc:	mov	x21, sp
    29d0:	mov	x2, x19
    29d4:	mov	x1, x20
    29d8:	mov	x0, x21
    29dc:	bl	19b0 <memcpy@plt>
    29e0:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    29e4:	add	x0, x0, #0x888
    29e8:	add	x1, x21, x19
    29ec:	ldr	x2, [x0]
    29f0:	str	x2, [x21, x19]
    29f4:	ldur	w0, [x0, #7]
    29f8:	stur	w0, [x1, #7]
    29fc:	mov	w1, #0x80000               	// #524288
    2a00:	mov	x0, x21
    2a04:	bl	1af0 <mkostemp@plt>
    2a08:	mov	w19, w0
    2a0c:	cmn	w0, #0x1
    2a10:	b.ne	2a2c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x34c>  // b.any
    2a14:	mov	w0, w19
    2a18:	mov	sp, x29
    2a1c:	ldp	x19, x20, [sp, #16]
    2a20:	ldr	x21, [sp, #32]
    2a24:	ldp	x29, x30, [sp], #48
    2a28:	ret
    2a2c:	mov	x0, x21
    2a30:	bl	1c30 <unlink@plt>
    2a34:	b	2a14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x334>
    2a38:	mov	x12, #0x3060                	// #12384
    2a3c:	sub	sp, sp, x12
    2a40:	stp	x29, x30, [sp]
    2a44:	mov	x29, sp
    2a48:	stp	x19, x20, [sp, #16]
    2a4c:	mov	x19, x0
    2a50:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x0, [x0, #1464]
    2a58:	cmp	x0, x19
    2a5c:	b.eq	2a94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b4>  // b.none
    2a60:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2a64:	ldr	x0, [x0, #1472]
    2a68:	cbz	x0, 2a70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x390>
    2a6c:	bl	1a90 <endmntent@plt>
    2a70:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2a74:	str	x19, [x0, #1464]
    2a78:	cbz	x19, 2b20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x440>
    2a7c:	adrp	x1, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2a80:	add	x1, x1, #0x898
    2a84:	mov	x0, x19
    2a88:	bl	1a80 <setmntent@plt>
    2a8c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    2a90:	str	x0, [x1, #1472]
    2a94:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2a98:	ldr	x0, [x0, #1472]
    2a9c:	cbz	x0, 2b4c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x46c>
    2aa0:	stp	x21, x22, [sp, #32]
    2aa4:	add	x22, sp, #0x60
    2aa8:	add	x19, sp, #0x38
    2aac:	adrp	x20, 18000 <memcpy@GLIBC_2.17>
    2ab0:	add	x20, x20, #0x198
    2ab4:	adrp	x21, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2ab8:	add	x21, x21, #0x8a0
    2abc:	mov	w3, #0x3000                	// #12288
    2ac0:	mov	x2, x22
    2ac4:	mov	x1, x19
    2ac8:	ldr	x0, [x20, #1064]
    2acc:	bl	1bb0 <getmntent_r@plt>
    2ad0:	cbz	x0, 2b30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x450>
    2ad4:	mov	x1, x21
    2ad8:	mov	x0, x19
    2adc:	bl	1b60 <hasmntopt@plt>
    2ae0:	cbnz	x0, 2abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3dc>
    2ae4:	adrp	x1, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2ae8:	add	x1, x1, #0x8a8
    2aec:	mov	x0, x19
    2af0:	bl	1b60 <hasmntopt@plt>
    2af4:	cbnz	x0, 2abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3dc>
    2af8:	mov	w1, #0x2                   	// #2
    2afc:	ldr	x0, [sp, #64]
    2b00:	bl	1b00 <access@plt>
    2b04:	cbnz	w0, 2abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3dc>
    2b08:	ldr	x0, [sp, #64]
    2b0c:	bl	2968 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x288>
    2b10:	cmn	w0, #0x1
    2b14:	b.eq	2abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3dc>  // b.none
    2b18:	ldp	x21, x22, [sp, #32]
    2b1c:	b	2b38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x458>
    2b20:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2b24:	str	xzr, [x0, #1472]
    2b28:	mov	w0, #0xffffffff            	// #-1
    2b2c:	b	2b38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x458>
    2b30:	mov	w0, #0xffffffff            	// #-1
    2b34:	ldp	x21, x22, [sp, #32]
    2b38:	ldp	x19, x20, [sp, #16]
    2b3c:	ldp	x29, x30, [sp]
    2b40:	mov	x12, #0x3060                	// #12384
    2b44:	add	sp, sp, x12
    2b48:	ret
    2b4c:	mov	w0, #0xffffffff            	// #-1
    2b50:	b	2b38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x458>
    2b54:	stp	x29, x30, [sp, #-16]!
    2b58:	mov	x29, sp
    2b5c:	bl	1be0 <getenv@plt>
    2b60:	cbz	x0, 2b70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x490>
    2b64:	bl	2968 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x288>
    2b68:	ldp	x29, x30, [sp], #16
    2b6c:	ret
    2b70:	mov	w0, #0xffffffff            	// #-1
    2b74:	b	2b68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x488>
    2b78:	stp	x29, x30, [sp, #-112]!
    2b7c:	mov	x29, sp
    2b80:	stp	x19, x20, [sp, #16]
    2b84:	stp	x21, x22, [sp, #32]
    2b88:	stp	x23, x24, [sp, #48]
    2b8c:	stp	x25, x26, [sp, #64]
    2b90:	stp	x27, x28, [sp, #80]
    2b94:	str	x0, [x29, #104]
    2b98:	mov	x20, x1
    2b9c:	mov	w23, w2
    2ba0:	mov	w22, w3
    2ba4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2ba8:	ldr	w0, [x0, #392]
    2bac:	cmn	w0, #0x1
    2bb0:	b.ne	2cc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5e8>  // b.any
    2bb4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2bb8:	str	wzr, [x0, #456]
    2bbc:	adrp	x24, 18000 <memcpy@GLIBC_2.17>
    2bc0:	add	x24, x24, #0x198
    2bc4:	adrp	x21, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    2bc8:	add	x21, x21, #0xd18
    2bcc:	b	2bd8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4f8>
    2bd0:	cmn	w19, #0x1
    2bd4:	b.ne	2cc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5e0>  // b.any
    2bd8:	ldrsw	x2, [x24, #48]
    2bdc:	lsl	x0, x2, #1
    2be0:	add	x1, x0, x2
    2be4:	add	x1, x21, x1, lsl #3
    2be8:	add	x0, x0, x2
    2bec:	ldr	x2, [x21, x0, lsl #3]
    2bf0:	ldr	x0, [x1, #8]
    2bf4:	blr	x2
    2bf8:	mov	w19, w0
    2bfc:	ldrsw	x1, [x24, #48]
    2c00:	add	x1, x1, x1, lsl #1
    2c04:	add	x1, x21, x1, lsl #3
    2c08:	ldr	w0, [x1, #16]
    2c0c:	cmp	w0, #0x0
    2c10:	ccmn	w19, #0x1, #0x4, ne  // ne = any
    2c14:	b.ne	2cc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5e0>  // b.any
    2c18:	bl	276c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8c>
    2c1c:	cbz	w0, 2bd0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4f0>
    2c20:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2c24:	str	w19, [x0, #392]
    2c28:	mov	x21, #0xffffffffffffffff    	// #-1
    2c2c:	cmn	w19, #0x1
    2c30:	b.eq	2c9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5bc>  // b.none
    2c34:	b	2cc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5e8>
    2c38:	mov	w0, #0x1e                  	// #30
    2c3c:	bl	1ba0 <sysconf@plt>
    2c40:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    2c44:	str	x0, [x1, #1488]
    2c48:	b	2cec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x60c>
    2c4c:	cbnz	x25, 2c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x57c>
    2c50:	mov	w0, w21
    2c54:	bl	1ab0 <close@plt>
    2c58:	b	2bbc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4dc>
    2c5c:	mov	x1, x25
    2c60:	mov	w0, w21
    2c64:	bl	1bc0 <ftruncate@plt>
    2c68:	mov	x21, x19
    2c6c:	b	2c9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5bc>
    2c70:	bl	276c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8c>
    2c74:	b	2db8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d8>
    2c78:	mov	x1, x20
    2c7c:	mov	x0, x19
    2c80:	bl	1b80 <munmap@plt>
    2c84:	mov	x1, x25
    2c88:	mov	w0, w24
    2c8c:	bl	1bc0 <ftruncate@plt>
    2c90:	b	2c9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5bc>
    2c94:	mov	sp, x28
    2c98:	mov	x21, #0xffffffffffffffff    	// #-1
    2c9c:	mov	x0, x21
    2ca0:	mov	sp, x29
    2ca4:	ldp	x19, x20, [sp, #16]
    2ca8:	ldp	x21, x22, [sp, #32]
    2cac:	ldp	x23, x24, [sp, #48]
    2cb0:	ldp	x25, x26, [sp, #64]
    2cb4:	ldp	x27, x28, [sp, #80]
    2cb8:	ldp	x29, x30, [sp], #112
    2cbc:	ret
    2cc0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2cc4:	str	w19, [x0, #392]
    2cc8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2ccc:	add	x0, x0, #0x198
    2cd0:	ldr	x25, [x0, #1072]
    2cd4:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    2cd8:	ldr	w26, [x1, #392]
    2cdc:	mov	x21, x20
    2ce0:	mov	x28, sp
    2ce4:	ldr	x0, [x0, #1080]
    2ce8:	cbz	x0, 2c38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x558>
    2cec:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2cf0:	ldr	x2, [x0, #1488]
    2cf4:	add	x0, x2, #0xf
    2cf8:	and	x0, x0, #0xfffffffffffffff0
    2cfc:	sub	sp, sp, x0
    2d00:	mov	x27, sp
    2d04:	mov	w1, #0x0                   	// #0
    2d08:	mov	x0, sp
    2d0c:	bl	1a50 <memset@plt>
    2d10:	cmp	x20, #0x0
    2d14:	b.le	2d50 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x670>
    2d18:	adrp	x24, 18000 <memcpy@GLIBC_2.17>
    2d1c:	add	x24, x24, #0x198
    2d20:	ldr	x19, [x24, #1080]
    2d24:	cmp	x19, x21
    2d28:	csel	x19, x19, x21, ls  // ls = plast
    2d2c:	mov	x2, x19
    2d30:	mov	x1, x27
    2d34:	mov	w0, w26
    2d38:	bl	1ad0 <write@plt>
    2d3c:	cmp	x19, x0
    2d40:	b.gt	2c94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5b4>
    2d44:	sub	x21, x21, x19
    2d48:	cmp	x21, #0x0
    2d4c:	b.gt	2d20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x640>
    2d50:	mov	sp, x28
    2d54:	mov	w3, #0xffffffdd            	// #-35
    2d58:	and	w22, w22, w3
    2d5c:	orr	w22, w22, #0x1
    2d60:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2d64:	ldr	w21, [x0, #392]
    2d68:	and	w2, w23, #0xfffffff9
    2d6c:	mov	x5, x25
    2d70:	mov	w4, w21
    2d74:	mov	w3, w22
    2d78:	orr	w2, w2, #0x4
    2d7c:	mov	x1, x20
    2d80:	mov	x0, #0x0                   	// #0
    2d84:	bl	1b10 <mmap@plt>
    2d88:	mov	x19, x0
    2d8c:	cmn	x0, #0x1
    2d90:	b.eq	2c4c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56c>  // b.none
    2d94:	cbnz	x25, 2db8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d8>
    2d98:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2d9c:	ldrsw	x0, [x0, #456]
    2da0:	add	x0, x0, x0, lsl #1
    2da4:	adrp	x1, 17000 <ffi_type_void@@LIBFFI_BASE_7.0+0x10790>
    2da8:	add	x1, x1, #0xd18
    2dac:	add	x0, x1, x0, lsl #3
    2db0:	ldr	w0, [x0, #16]
    2db4:	cbnz	w0, 2c70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x590>
    2db8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2dbc:	ldr	w24, [x0, #392]
    2dc0:	mov	x5, x25
    2dc4:	mov	w4, w24
    2dc8:	mov	w3, w22
    2dcc:	mov	w2, w23
    2dd0:	mov	x1, x20
    2dd4:	ldr	x0, [x29, #104]
    2dd8:	bl	1b10 <mmap@plt>
    2ddc:	mov	x21, x0
    2de0:	cmn	x0, #0x1
    2de4:	b.eq	2c78 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x598>  // b.none
    2de8:	add	x1, x0, x20
    2dec:	sub	x19, x19, x0
    2df0:	stur	x19, [x1, #-8]
    2df4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2df8:	add	x0, x0, #0x198
    2dfc:	ldr	x1, [x0, #1072]
    2e00:	add	x20, x1, x20
    2e04:	str	x20, [x0, #1072]
    2e08:	b	2c9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5bc>
    2e0c:	stp	x29, x30, [sp, #-256]!
    2e10:	mov	x29, sp
    2e14:	stp	x19, x20, [sp, #16]
    2e18:	stp	x21, x22, [sp, #32]
    2e1c:	stp	x23, x24, [sp, #48]
    2e20:	mov	x19, x0
    2e24:	mov	x20, x1
    2e28:	mov	w21, w2
    2e2c:	mov	w22, w3
    2e30:	str	w4, [sp, #100]
    2e34:	mov	x23, x5
    2e38:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2e3c:	ldr	w0, [x0, #392]
    2e40:	cmn	w0, #0x1
    2e44:	b.eq	2e88 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7a8>  // b.none
    2e48:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2e4c:	ldr	x0, [x0, #1480]
    2e50:	cbz	x0, 3060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x980>
    2e54:	mov	x4, x23
    2e58:	mov	w3, w22
    2e5c:	mov	w2, w21
    2e60:	mov	x1, x20
    2e64:	mov	x0, x19
    2e68:	bl	2b78 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x498>
    2e6c:	mov	x24, x0
    2e70:	mov	x0, x24
    2e74:	ldp	x19, x20, [sp, #16]
    2e78:	ldp	x21, x22, [sp, #32]
    2e7c:	ldp	x23, x24, [sp, #48]
    2e80:	ldp	x29, x30, [sp], #256
    2e84:	ret
    2e88:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2e8c:	ldr	w0, [x0, #396]
    2e90:	tbnz	w0, #31, 2f00 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x820>
    2e94:	cmp	w0, #0x0
    2e98:	cset	w0, eq  // eq = none
    2e9c:	cbnz	w0, 3018 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x938>
    2ea0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2ea4:	ldr	x0, [x0, #1480]
    2ea8:	cbz	x0, 3058 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x978>
    2eac:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    2eb0:	ldr	w0, [x0, #392]
    2eb4:	cmn	w0, #0x1
    2eb8:	b.ne	2e54 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x774>  // b.any
    2ebc:	stp	x25, x26, [sp, #64]
    2ec0:	adrp	x25, 18000 <memcpy@GLIBC_2.17>
    2ec4:	add	x25, x25, #0x198
    2ec8:	add	x25, x25, #0x440
    2ecc:	mov	x0, x25
    2ed0:	bl	1c00 <pthread_mutex_lock@plt>
    2ed4:	mov	x4, x23
    2ed8:	mov	w3, w22
    2edc:	mov	w2, w21
    2ee0:	mov	x1, x20
    2ee4:	mov	x0, x19
    2ee8:	bl	2b78 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x498>
    2eec:	mov	x24, x0
    2ef0:	mov	x0, x25
    2ef4:	bl	1c20 <pthread_mutex_unlock@plt>
    2ef8:	ldp	x25, x26, [sp, #64]
    2efc:	b	2e70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x790>
    2f00:	str	xzr, [sp, #120]
    2f04:	str	xzr, [sp, #128]
    2f08:	add	x1, sp, #0x88
    2f0c:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2f10:	add	x0, x0, #0x8b0
    2f14:	bl	1a00 <statfs@plt>
    2f18:	tbnz	w0, #31, 2f34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x854>
    2f1c:	mov	w0, #0x1                   	// #1
    2f20:	ldr	x2, [sp, #136]
    2f24:	mov	w1, #0xff8c                	// #65420
    2f28:	movk	w1, #0xf97c, lsl #16
    2f2c:	cmp	w2, w1
    2f30:	b.eq	2ffc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x91c>  // b.none
    2f34:	stp	x25, x26, [sp, #64]
    2f38:	adrp	x1, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2f3c:	add	x1, x1, #0x898
    2f40:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2f44:	add	x0, x0, #0x8c0
    2f48:	bl	1a20 <fopen@plt>
    2f4c:	mov	x25, x0
    2f50:	cbz	x0, 300c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x92c>
    2f54:	stp	x27, x28, [sp, #80]
    2f58:	add	x28, sp, #0x80
    2f5c:	add	x27, sp, #0x78
    2f60:	mov	w26, #0xa                   	// #10
    2f64:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    2f68:	add	x0, x0, #0x8d0
    2f6c:	str	x0, [sp, #104]
    2f70:	mov	x3, x25
    2f74:	mov	w2, w26
    2f78:	mov	x1, x28
    2f7c:	mov	x0, x27
    2f80:	bl	1c10 <__getdelim@plt>
    2f84:	tbnz	x0, #63, 2fe0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x900>
    2f88:	ldr	x24, [sp, #120]
    2f8c:	mov	w1, #0x20                  	// #32
    2f90:	mov	x0, x24
    2f94:	bl	1b70 <strchr@plt>
    2f98:	cbz	x0, 2fe0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x900>
    2f9c:	mov	w1, #0x20                  	// #32
    2fa0:	add	x0, x0, #0x1
    2fa4:	bl	1b70 <strchr@plt>
    2fa8:	cbz	x0, 2fe0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x900>
    2fac:	mov	x2, #0xa                   	// #10
    2fb0:	ldr	x1, [sp, #104]
    2fb4:	add	x0, x0, #0x1
    2fb8:	bl	1a40 <strncmp@plt>
    2fbc:	cbnz	w0, 2f70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x890>
    2fc0:	mov	x0, x24
    2fc4:	bl	1b20 <free@plt>
    2fc8:	mov	x0, x25
    2fcc:	bl	1a10 <fclose@plt>
    2fd0:	mov	w0, #0x1                   	// #1
    2fd4:	ldp	x25, x26, [sp, #64]
    2fd8:	ldp	x27, x28, [sp, #80]
    2fdc:	b	2ffc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x91c>
    2fe0:	ldr	x0, [sp, #120]
    2fe4:	bl	1b20 <free@plt>
    2fe8:	mov	x0, x25
    2fec:	bl	1a10 <fclose@plt>
    2ff0:	mov	w0, #0x0                   	// #0
    2ff4:	ldp	x25, x26, [sp, #64]
    2ff8:	ldp	x27, x28, [sp, #80]
    2ffc:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3000:	str	w0, [x1, #396]
    3004:	eor	w0, w0, #0x1
    3008:	b	2e9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7bc>
    300c:	mov	w0, #0x0                   	// #0
    3010:	ldp	x25, x26, [sp, #64]
    3014:	b	2ffc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x91c>
    3018:	mov	x5, x23
    301c:	ldr	w4, [sp, #100]
    3020:	mov	w3, w22
    3024:	orr	w2, w21, #0x4
    3028:	mov	x1, x20
    302c:	mov	x0, x19
    3030:	bl	1b10 <mmap@plt>
    3034:	mov	x24, x0
    3038:	cmn	x0, #0x1
    303c:	b.ne	2e70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x790>  // b.any
    3040:	bl	1bd0 <__errno_location@plt>
    3044:	ldr	w0, [x0]
    3048:	cmp	w0, #0x1
    304c:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    3050:	b.eq	2ea0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7c0>  // b.none
    3054:	b	2e70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x790>
    3058:	stp	x25, x26, [sp, #64]
    305c:	b	2ec0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7e0>
    3060:	stp	x25, x26, [sp, #64]
    3064:	b	2ec0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7e0>

0000000000003068 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0>:
    3068:	stp	x29, x30, [sp, #-96]!
    306c:	mov	x29, sp
    3070:	stp	x19, x20, [sp, #16]
    3074:	stp	x21, x22, [sp, #32]
    3078:	mov	x21, x1
    307c:	cbz	x1, 4594 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x152c>
    3080:	mov	x19, x0
    3084:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3088:	ldr	x0, [x0, #416]
    308c:	cbz	x0, 3188 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x120>
    3090:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3094:	ldr	w0, [x0, #1376]
    3098:	tbz	w0, #1, 30b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x48>
    309c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    30a0:	add	x0, x0, #0x198
    30a4:	add	x0, x0, #0x3d0
    30a8:	bl	1c00 <pthread_mutex_lock@plt>
    30ac:	cbnz	w0, 459c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1534>
    30b0:	cmp	x19, #0xf0
    30b4:	b.hi	365c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5f4>  // b.pmore
    30b8:	add	x20, x19, #0xf
    30bc:	and	x20, x20, #0xfffffffffffffff8
    30c0:	cmp	x19, #0x16
    30c4:	mov	x0, #0x20                  	// #32
    30c8:	csel	x20, x20, x0, hi  // hi = pmore
    30cc:	lsr	x2, x20, #3
    30d0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    30d4:	ldr	w3, [x0, #512]
    30d8:	lsr	w0, w3, w2
    30dc:	tst	x0, #0x3
    30e0:	b.eq	31bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x154>  // b.none
    30e4:	mvn	w0, w0
    30e8:	and	x0, x0, #0x1
    30ec:	add	x0, x0, x2
    30f0:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    30f4:	add	x1, x1, #0x198
    30f8:	add	x1, x1, x0, lsl #4
    30fc:	add	x1, x1, #0xa8
    3100:	ldr	x19, [x1, #16]
    3104:	ldr	x2, [x19, #16]
    3108:	cmp	x1, x2
    310c:	b.eq	3194 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12c>  // b.none
    3110:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    3114:	ldr	x3, [x3, #536]
    3118:	cmp	x2, x3
    311c:	b.cc	31ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x144>  // b.lo, b.ul, b.last
    3120:	str	x2, [x1, #16]
    3124:	str	x1, [x2, #24]
    3128:	lsl	x0, x0, #3
    312c:	orr	x1, x0, #0x3
    3130:	str	x1, [x19, #8]
    3134:	add	x0, x19, x0
    3138:	ldr	x1, [x0, #8]
    313c:	orr	x1, x1, #0x1
    3140:	str	x1, [x0, #8]
    3144:	add	x19, x19, #0x10
    3148:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    314c:	ldr	w0, [x0, #1376]
    3150:	tbnz	w0, #1, 47ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1744>
    3154:	mov	x1, x19
    3158:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    315c:	add	x0, x0, #0x198
    3160:	add	x0, x0, #0x68
    3164:	bl	26f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x18>
    3168:	ldr	x0, [x0, #24]
    316c:	add	x0, x19, x0
    3170:	str	x0, [x21]
    3174:	mov	x0, x19
    3178:	ldp	x19, x20, [sp, #16]
    317c:	ldp	x21, x22, [sp, #32]
    3180:	ldp	x29, x30, [sp], #96
    3184:	ret
    3188:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x138>
    318c:	cbnz	w0, 309c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x34>
    3190:	b	3090 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x28>
    3194:	mov	w1, #0x1                   	// #1
    3198:	lsl	w1, w1, w0
    319c:	bic	w3, w3, w1
    31a0:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    31a4:	str	w3, [x1, #512]
    31a8:	b	3128 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc0>
    31ac:	stp	x23, x24, [sp, #48]
    31b0:	stp	x25, x26, [sp, #64]
    31b4:	stp	x27, x28, [sp, #80]
    31b8:	bl	1ae0 <abort@plt>
    31bc:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    31c0:	ldr	x1, [x1, #520]
    31c4:	cmp	x20, x1
    31c8:	b.ls	3c38 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbd0>  // b.plast
    31cc:	cbz	w0, 333c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2d4>
    31d0:	mov	w1, #0x2                   	// #2
    31d4:	lsl	w4, w1, w2
    31d8:	neg	w1, w4
    31dc:	orr	w1, w1, w4
    31e0:	lsl	w0, w0, w2
    31e4:	and	w0, w1, w0
    31e8:	neg	w1, w0
    31ec:	ands	w0, w1, w0
    31f0:	rbit	w0, w0
    31f4:	clz	w0, w0
    31f8:	csinv	w0, w0, wzr, ne  // ne = any
    31fc:	sxtw	x2, w0
    3200:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3204:	add	x1, x1, #0x198
    3208:	add	x0, x1, w0, sxtw #4
    320c:	add	x0, x0, #0xa8
    3210:	ldr	x19, [x0, #16]
    3214:	ldr	x1, [x19, #16]
    3218:	cmp	x0, x1
    321c:	b.eq	32d4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x26c>  // b.none
    3220:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    3224:	ldr	x3, [x3, #536]
    3228:	cmp	x1, x3
    322c:	b.cc	32ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x284>  // b.lo, b.ul, b.last
    3230:	str	x1, [x0, #16]
    3234:	str	x0, [x1, #24]
    3238:	lsl	x0, x2, #3
    323c:	sub	x1, x0, x20
    3240:	cmp	x1, #0x1f
    3244:	b.ls	32fc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x294>  // b.plast
    3248:	orr	x0, x20, #0x3
    324c:	str	x0, [x19, #8]
    3250:	add	x20, x19, x20
    3254:	orr	x0, x1, #0x1
    3258:	str	x0, [x20, #8]
    325c:	str	x1, [x19, x2, lsl #3]
    3260:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3264:	ldr	x2, [x0, #520]
    3268:	cbz	x2, 32bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x254>
    326c:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    3270:	add	x4, x4, #0x198
    3274:	add	x0, x4, #0x68
    3278:	ldr	x3, [x4, #136]
    327c:	lsr	x2, x2, #3
    3280:	add	x0, x0, x2, lsl #4
    3284:	add	x0, x0, #0x40
    3288:	ldr	w5, [x4, #104]
    328c:	mov	w4, #0x1                   	// #1
    3290:	lsl	w2, w4, w2
    3294:	tst	w5, w2
    3298:	b.ne	3318 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x2b0>  // b.any
    329c:	orr	w2, w5, w2
    32a0:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    32a4:	str	w2, [x4, #512]
    32a8:	mov	x2, x0
    32ac:	str	x3, [x0, #16]
    32b0:	str	x3, [x2, #24]
    32b4:	str	x2, [x3, #16]
    32b8:	str	x0, [x3, #24]
    32bc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    32c0:	add	x0, x0, #0x198
    32c4:	str	x1, [x0, #112]
    32c8:	str	x20, [x0, #136]
    32cc:	add	x19, x19, #0x10
    32d0:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    32d4:	mov	w0, #0x1                   	// #1
    32d8:	lsl	w0, w0, w2
    32dc:	bic	w3, w3, w0
    32e0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    32e4:	str	w3, [x0, #512]
    32e8:	b	3238 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1d0>
    32ec:	stp	x23, x24, [sp, #48]
    32f0:	stp	x25, x26, [sp, #64]
    32f4:	stp	x27, x28, [sp, #80]
    32f8:	bl	1ae0 <abort@plt>
    32fc:	orr	x1, x0, #0x3
    3300:	str	x1, [x19, #8]
    3304:	add	x0, x19, x0
    3308:	ldr	x1, [x0, #8]
    330c:	orr	x1, x1, #0x1
    3310:	str	x1, [x0, #8]
    3314:	b	32cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x264>
    3318:	ldr	x2, [x0, #16]
    331c:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    3320:	ldr	x4, [x4, #536]
    3324:	cmp	x2, x4
    3328:	b.cs	32ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x244>  // b.hs, b.nlast
    332c:	stp	x23, x24, [sp, #48]
    3330:	stp	x25, x26, [sp, #64]
    3334:	stp	x27, x28, [sp, #80]
    3338:	bl	1ae0 <abort@plt>
    333c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3340:	ldr	w1, [x0, #516]
    3344:	cbz	w1, 3688 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x620>
    3348:	neg	w0, w1
    334c:	ands	w0, w0, w1
    3350:	rbit	w0, w0
    3354:	clz	w0, w0
    3358:	csinv	w0, w0, wzr, ne  // ne = any
    335c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3360:	add	x1, x1, #0x198
    3364:	add	x0, x1, w0, sxtw #3
    3368:	ldr	x0, [x0, #696]
    336c:	ldr	x2, [x0, #8]
    3370:	and	x2, x2, #0xfffffffffffffffc
    3374:	sub	x2, x2, x20
    3378:	mov	x19, x0
    337c:	b	33a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x338>
    3380:	ldr	x0, [x1, #8]
    3384:	and	x0, x0, #0xfffffffffffffffc
    3388:	sub	x0, x0, x20
    338c:	cmp	x0, x2
    3390:	csel	x3, x2, x0, cs  // cs = hs, nlast
    3394:	mov	x2, x3
    3398:	csel	x19, x19, x1, cs  // cs = hs, nlast
    339c:	mov	x0, x1
    33a0:	ldr	x1, [x0, #32]
    33a4:	cbnz	x1, 3380 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x318>
    33a8:	ldr	x1, [x0, #40]
    33ac:	cbnz	x1, 3380 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x318>
    33b0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x7, [x0, #536]
    33b8:	cmp	x7, x19
    33bc:	b.hi	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5e4>  // b.pmore
    33c0:	add	x5, x19, x20
    33c4:	cmp	x19, x5
    33c8:	b.cs	364c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5e4>  // b.hs, b.nlast
    33cc:	ldr	x6, [x19, #48]
    33d0:	ldr	x1, [x19, #24]
    33d4:	cmp	x19, x1
    33d8:	b.eq	3524 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4bc>  // b.none
    33dc:	ldr	x0, [x19, #16]
    33e0:	cmp	x7, x0
    33e4:	b.hi	3514 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4ac>  // b.pmore
    33e8:	str	x1, [x0, #24]
    33ec:	str	x0, [x1, #16]
    33f0:	cbz	x6, 3478 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x410>
    33f4:	ldr	x3, [x19, #56]
    33f8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    33fc:	add	x0, x0, #0x198
    3400:	add	x0, x0, x3, lsl #3
    3404:	ldr	x0, [x0, #696]
    3408:	cmp	x19, x0
    340c:	b.eq	3588 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x520>  // b.none
    3410:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3414:	ldr	x0, [x0, #536]
    3418:	cmp	x6, x0
    341c:	b.cc	35c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x560>  // b.lo, b.ul, b.last
    3420:	ldr	x0, [x6, #32]
    3424:	cmp	x19, x0
    3428:	b.eq	35c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x558>  // b.none
    342c:	str	x1, [x6, #40]
    3430:	cbz	x1, 3478 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x410>
    3434:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3438:	ldr	x3, [x0, #536]
    343c:	cmp	x1, x3
    3440:	b.cc	35f8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x590>  // b.lo, b.ul, b.last
    3444:	str	x6, [x1, #48]
    3448:	ldr	x0, [x19, #32]
    344c:	cbz	x0, 3460 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3f8>
    3450:	cmp	x3, x0
    3454:	b.hi	35d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x570>  // b.pmore
    3458:	str	x0, [x1, #32]
    345c:	str	x1, [x0, #48]
    3460:	ldr	x0, [x19, #40]
    3464:	cbz	x0, 3478 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x410>
    3468:	cmp	x3, x0
    346c:	b.hi	35e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x580>  // b.pmore
    3470:	str	x0, [x1, #40]
    3474:	str	x1, [x0, #48]
    3478:	cmp	x2, #0x1f
    347c:	b.ls	3608 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5a0>  // b.plast
    3480:	orr	x20, x20, #0x3
    3484:	str	x20, [x19, #8]
    3488:	orr	x0, x2, #0x1
    348c:	str	x0, [x5, #8]
    3490:	str	x2, [x5, x2]
    3494:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3498:	ldr	x1, [x0, #520]
    349c:	cbz	x1, 34f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x488>
    34a0:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    34a4:	add	x4, x4, #0x198
    34a8:	add	x0, x4, #0x68
    34ac:	ldr	x3, [x4, #136]
    34b0:	lsr	x1, x1, #3
    34b4:	add	x0, x0, x1, lsl #4
    34b8:	add	x0, x0, #0x40
    34bc:	ldr	w6, [x4, #104]
    34c0:	mov	w4, #0x1                   	// #1
    34c4:	lsl	w1, w4, w1
    34c8:	tst	w6, w1
    34cc:	b.ne	3628 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x5c0>  // b.any
    34d0:	orr	w1, w6, w1
    34d4:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    34d8:	str	w1, [x4, #512]
    34dc:	mov	x1, x0
    34e0:	str	x3, [x0, #16]
    34e4:	str	x3, [x1, #24]
    34e8:	str	x1, [x3, #16]
    34ec:	str	x0, [x3, #24]
    34f0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    34f4:	add	x0, x0, #0x198
    34f8:	str	x2, [x0, #112]
    34fc:	str	x5, [x0, #136]
    3500:	add	x19, x19, #0x10
    3504:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3508:	ldr	w0, [x0, #1376]
    350c:	tbz	w0, #1, 3154 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xec>
    3510:	b	47ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1744>
    3514:	stp	x23, x24, [sp, #48]
    3518:	stp	x25, x26, [sp, #64]
    351c:	stp	x27, x28, [sp, #80]
    3520:	bl	1ae0 <abort@plt>
    3524:	ldr	x0, [x19, #40]
    3528:	add	x3, x19, #0x28
    352c:	cbz	x0, 3560 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4f8>
    3530:	mov	x4, x3
    3534:	add	x3, x0, #0x28
    3538:	mov	x1, x0
    353c:	ldr	x0, [x0, #40]
    3540:	cbnz	x0, 3530 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4c8>
    3544:	add	x3, x1, #0x20
    3548:	ldr	x0, [x1, #32]
    354c:	cbnz	x0, 3530 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4c8>
    3550:	cmp	x7, x4
    3554:	b.hi	3570 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x508>  // b.pmore
    3558:	str	xzr, [x4]
    355c:	b	33f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x388>
    3560:	ldr	x0, [x19, #32]
    3564:	cbz	x0, 3580 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x518>
    3568:	add	x3, x19, #0x20
    356c:	b	3530 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x4c8>
    3570:	stp	x23, x24, [sp, #48]
    3574:	stp	x25, x26, [sp, #64]
    3578:	stp	x27, x28, [sp, #80]
    357c:	bl	1ae0 <abort@plt>
    3580:	mov	x1, x0
    3584:	b	33f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x388>
    3588:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    358c:	add	x0, x0, #0x198
    3590:	add	x3, x0, x3, lsl #3
    3594:	str	x1, [x3, #696]
    3598:	cbnz	x1, 3434 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3cc>
    359c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    35a0:	add	x0, x0, #0x198
    35a4:	ldr	x3, [x19, #56]
    35a8:	mov	w1, #0x1                   	// #1
    35ac:	lsl	w1, w1, w3
    35b0:	ldr	w3, [x0, #108]
    35b4:	bic	w1, w3, w1
    35b8:	str	w1, [x0, #108]
    35bc:	b	3478 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x410>
    35c0:	str	x1, [x6, #32]
    35c4:	b	3430 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x3c8>
    35c8:	stp	x23, x24, [sp, #48]
    35cc:	stp	x25, x26, [sp, #64]
    35d0:	stp	x27, x28, [sp, #80]
    35d4:	bl	1ae0 <abort@plt>
    35d8:	stp	x23, x24, [sp, #48]
    35dc:	stp	x25, x26, [sp, #64]
    35e0:	stp	x27, x28, [sp, #80]
    35e4:	bl	1ae0 <abort@plt>
    35e8:	stp	x23, x24, [sp, #48]
    35ec:	stp	x25, x26, [sp, #64]
    35f0:	stp	x27, x28, [sp, #80]
    35f4:	bl	1ae0 <abort@plt>
    35f8:	stp	x23, x24, [sp, #48]
    35fc:	stp	x25, x26, [sp, #64]
    3600:	stp	x27, x28, [sp, #80]
    3604:	bl	1ae0 <abort@plt>
    3608:	add	x0, x20, x2
    360c:	orr	x1, x0, #0x3
    3610:	str	x1, [x19, #8]
    3614:	add	x0, x19, x0
    3618:	ldr	x1, [x0, #8]
    361c:	orr	x1, x1, #0x1
    3620:	str	x1, [x0, #8]
    3624:	b	3500 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x498>
    3628:	ldr	x1, [x0, #16]
    362c:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    3630:	ldr	x4, [x4, #536]
    3634:	cmp	x1, x4
    3638:	b.cs	34e0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x478>  // b.hs, b.nlast
    363c:	stp	x23, x24, [sp, #48]
    3640:	stp	x25, x26, [sp, #64]
    3644:	stp	x27, x28, [sp, #80]
    3648:	bl	1ae0 <abort@plt>
    364c:	stp	x23, x24, [sp, #48]
    3650:	stp	x25, x26, [sp, #64]
    3654:	stp	x27, x28, [sp, #80]
    3658:	bl	1ae0 <abort@plt>
    365c:	cmn	x19, #0x81
    3660:	b.hi	474c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16e4>  // b.pmore
    3664:	add	x20, x19, #0xf
    3668:	and	x20, x20, #0xfffffffffffffff8
    366c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3670:	ldr	w6, [x0, #516]
    3674:	cbnz	w6, 36cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x664>
    3678:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    367c:	ldr	x1, [x0, #520]
    3680:	cmp	x20, x1
    3684:	b.ls	3c38 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbd0>  // b.plast
    3688:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    368c:	ldr	x0, [x0, #528]
    3690:	cmp	x0, x20
    3694:	b.ls	3c7c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc14>  // b.plast
    3698:	sub	x0, x0, x20
    369c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    36a0:	add	x1, x1, #0x198
    36a4:	str	x0, [x1, #120]
    36a8:	ldr	x19, [x1, #144]
    36ac:	add	x2, x19, x20
    36b0:	str	x2, [x1, #144]
    36b4:	orr	x0, x0, #0x1
    36b8:	str	x0, [x2, #8]
    36bc:	orr	x20, x20, #0x3
    36c0:	str	x20, [x19, #8]
    36c4:	add	x19, x19, #0x10
    36c8:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    36cc:	neg	x3, x20
    36d0:	lsr	x0, x20, #8
    36d4:	mov	x1, #0xffff                	// #65535
    36d8:	cmp	x1, x20, lsr #8
    36dc:	b.cc	47c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x175c>  // b.lo, b.ul, b.last
    36e0:	sub	w1, w0, #0x100
    36e4:	lsr	w1, w1, #16
    36e8:	and	w1, w1, #0x8
    36ec:	lsl	w0, w0, w1
    36f0:	sub	w4, w0, #0x1, lsl #12
    36f4:	lsr	w4, w4, #16
    36f8:	and	w4, w4, #0x4
    36fc:	lsl	w0, w0, w4
    3700:	sub	w2, w0, #0x4, lsl #12
    3704:	lsr	w2, w2, #16
    3708:	and	w2, w2, #0x2
    370c:	lsl	w0, w0, w2
    3710:	lsr	w0, w0, #15
    3714:	orr	w1, w1, w4
    3718:	add	w1, w1, w2
    371c:	sub	w0, w0, w1
    3720:	add	w7, w0, #0x15
    3724:	lsr	x7, x20, x7
    3728:	and	x7, x7, #0x1
    372c:	add	w0, w0, #0xe
    3730:	lsl	w0, w0, #1
    3734:	add	x7, x7, x0
    3738:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    373c:	add	x0, x0, #0x198
    3740:	add	x0, x0, x7, lsl #3
    3744:	ldr	x1, [x0, #696]
    3748:	cbz	x1, 47d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1770>
    374c:	lsr	x5, x7, #1
    3750:	mov	w0, #0x39                  	// #57
    3754:	sub	w5, w0, w5
    3758:	cmp	x7, #0x1f
    375c:	csel	w5, w5, wzr, ne  // ne = any
    3760:	lsl	x5, x20, x5
    3764:	mov	x2, #0x0                   	// #0
    3768:	mov	x19, #0x0                   	// #0
    376c:	b	3794 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x72c>
    3770:	ldr	x0, [x1, #40]
    3774:	lsr	x4, x5, #63
    3778:	add	x4, x4, #0x4
    377c:	ldr	x1, [x1, x4, lsl #3]
    3780:	cmp	x0, #0x0
    3784:	ccmp	x0, x1, #0x4, ne  // ne = any
    3788:	csel	x2, x2, x0, eq  // eq = none
    378c:	cbz	x1, 37b8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x750>
    3790:	lsl	x5, x5, #1
    3794:	ldr	x0, [x1, #8]
    3798:	and	x0, x0, #0xfffffffffffffffc
    379c:	sub	x0, x0, x20
    37a0:	cmp	x0, x3
    37a4:	b.cs	3770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x708>  // b.hs, b.nlast
    37a8:	cbz	x0, 37c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x760>
    37ac:	mov	x3, x0
    37b0:	mov	x19, x1
    37b4:	b	3770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x708>
    37b8:	orr	x0, x19, x2
    37bc:	cbz	x0, 47d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1770>
    37c0:	cbnz	x2, 37dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x774>
    37c4:	b	3808 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7a0>
    37c8:	mov	x19, x1
    37cc:	mov	x3, x0
    37d0:	mov	x2, x1
    37d4:	b	37dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x774>
    37d8:	mov	x2, x0
    37dc:	ldr	x0, [x2, #8]
    37e0:	and	x0, x0, #0xfffffffffffffffc
    37e4:	sub	x0, x0, x20
    37e8:	cmp	x0, x3
    37ec:	csel	x1, x3, x0, cs  // cs = hs, nlast
    37f0:	mov	x3, x1
    37f4:	csel	x19, x19, x2, cs  // cs = hs, nlast
    37f8:	ldr	x0, [x2, #32]
    37fc:	cbnz	x0, 37d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x770>
    3800:	ldr	x0, [x2, #40]
    3804:	cbnz	x0, 37d8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x770>
    3808:	cbz	x19, 3678 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x610>
    380c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3810:	ldr	x0, [x0, #520]
    3814:	sub	x0, x0, x20
    3818:	cmp	x3, x0
    381c:	b.cs	3678 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x610>  // b.hs, b.nlast
    3820:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3824:	ldr	x6, [x0, #536]
    3828:	cmp	x6, x19
    382c:	b.hi	3c28 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbc0>  // b.pmore
    3830:	add	x7, x19, x20
    3834:	cmp	x7, x19
    3838:	b.ls	3c28 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbc0>  // b.plast
    383c:	ldr	x5, [x19, #48]
    3840:	ldr	x1, [x19, #24]
    3844:	cmp	x1, x19
    3848:	b.eq	3968 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x900>  // b.none
    384c:	ldr	x0, [x19, #16]
    3850:	cmp	x6, x0
    3854:	b.hi	3958 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8f0>  // b.pmore
    3858:	str	x1, [x0, #24]
    385c:	str	x0, [x1, #16]
    3860:	cbz	x5, 38e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x880>
    3864:	ldr	x2, [x19, #56]
    3868:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    386c:	add	x0, x0, #0x198
    3870:	add	x0, x0, x2, lsl #3
    3874:	ldr	x0, [x0, #696]
    3878:	cmp	x0, x19
    387c:	b.eq	39cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x964>  // b.none
    3880:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3884:	ldr	x0, [x0, #536]
    3888:	cmp	x5, x0
    388c:	b.cc	3a0c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x9a4>  // b.lo, b.ul, b.last
    3890:	ldr	x0, [x5, #32]
    3894:	cmp	x0, x19
    3898:	b.eq	3a04 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x99c>  // b.none
    389c:	str	x1, [x5, #40]
    38a0:	cbz	x1, 38e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x880>
    38a4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    38a8:	ldr	x2, [x0, #536]
    38ac:	cmp	x1, x2
    38b0:	b.cc	3a3c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x9d4>  // b.lo, b.ul, b.last
    38b4:	str	x5, [x1, #48]
    38b8:	ldr	x0, [x19, #32]
    38bc:	cbz	x0, 38d0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x868>
    38c0:	cmp	x2, x0
    38c4:	b.hi	3a1c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x9b4>  // b.pmore
    38c8:	str	x0, [x1, #32]
    38cc:	str	x1, [x0, #48]
    38d0:	ldr	x0, [x19, #40]
    38d4:	cbz	x0, 38e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x880>
    38d8:	cmp	x2, x0
    38dc:	b.hi	3a2c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x9c4>  // b.pmore
    38e0:	str	x0, [x1, #40]
    38e4:	str	x1, [x0, #48]
    38e8:	cmp	x3, #0x1f
    38ec:	b.ls	3a4c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x9e4>  // b.plast
    38f0:	orr	x20, x20, #0x3
    38f4:	str	x20, [x19, #8]
    38f8:	orr	x0, x3, #0x1
    38fc:	str	x0, [x7, #8]
    3900:	str	x3, [x7, x3]
    3904:	lsr	x2, x3, #3
    3908:	cmp	x3, #0xff
    390c:	b.hi	3a94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa2c>  // b.pmore
    3910:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3914:	add	x1, x1, #0x198
    3918:	add	x0, x1, x2, lsl #4
    391c:	add	x0, x0, #0xa8
    3920:	ldr	w3, [x1, #104]
    3924:	mov	w1, #0x1                   	// #1
    3928:	lsl	w1, w1, w2
    392c:	tst	w3, w1
    3930:	b.ne	3a70 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa08>  // b.any
    3934:	orr	w1, w3, w1
    3938:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    393c:	str	w1, [x2, #512]
    3940:	mov	x1, x0
    3944:	str	x7, [x0, #16]
    3948:	str	x7, [x1, #24]
    394c:	str	x1, [x7, #16]
    3950:	str	x0, [x7, #24]
    3954:	b	3a68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa00>
    3958:	stp	x23, x24, [sp, #48]
    395c:	stp	x25, x26, [sp, #64]
    3960:	stp	x27, x28, [sp, #80]
    3964:	bl	1ae0 <abort@plt>
    3968:	ldr	x0, [x19, #40]
    396c:	add	x2, x19, #0x28
    3970:	cbz	x0, 39a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x93c>
    3974:	mov	x4, x2
    3978:	add	x2, x0, #0x28
    397c:	mov	x1, x0
    3980:	ldr	x0, [x0, #40]
    3984:	cbnz	x0, 3974 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x90c>
    3988:	add	x2, x1, #0x20
    398c:	ldr	x0, [x1, #32]
    3990:	cbnz	x0, 3974 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x90c>
    3994:	cmp	x6, x4
    3998:	b.hi	39b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x94c>  // b.pmore
    399c:	str	xzr, [x4]
    39a0:	b	3860 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7f8>
    39a4:	ldr	x0, [x19, #32]
    39a8:	cbz	x0, 39c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x95c>
    39ac:	add	x2, x19, #0x20
    39b0:	b	3974 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x90c>
    39b4:	stp	x23, x24, [sp, #48]
    39b8:	stp	x25, x26, [sp, #64]
    39bc:	stp	x27, x28, [sp, #80]
    39c0:	bl	1ae0 <abort@plt>
    39c4:	mov	x1, x0
    39c8:	b	3860 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x7f8>
    39cc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    39d0:	add	x0, x0, #0x198
    39d4:	add	x2, x0, x2, lsl #3
    39d8:	str	x1, [x2, #696]
    39dc:	cbnz	x1, 38a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x83c>
    39e0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    39e4:	add	x0, x0, #0x198
    39e8:	ldr	x2, [x19, #56]
    39ec:	mov	w1, #0x1                   	// #1
    39f0:	lsl	w1, w1, w2
    39f4:	ldr	w2, [x0, #108]
    39f8:	bic	w1, w2, w1
    39fc:	str	w1, [x0, #108]
    3a00:	b	38e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x880>
    3a04:	str	x1, [x5, #32]
    3a08:	b	38a0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x838>
    3a0c:	stp	x23, x24, [sp, #48]
    3a10:	stp	x25, x26, [sp, #64]
    3a14:	stp	x27, x28, [sp, #80]
    3a18:	bl	1ae0 <abort@plt>
    3a1c:	stp	x23, x24, [sp, #48]
    3a20:	stp	x25, x26, [sp, #64]
    3a24:	stp	x27, x28, [sp, #80]
    3a28:	bl	1ae0 <abort@plt>
    3a2c:	stp	x23, x24, [sp, #48]
    3a30:	stp	x25, x26, [sp, #64]
    3a34:	stp	x27, x28, [sp, #80]
    3a38:	bl	1ae0 <abort@plt>
    3a3c:	stp	x23, x24, [sp, #48]
    3a40:	stp	x25, x26, [sp, #64]
    3a44:	stp	x27, x28, [sp, #80]
    3a48:	bl	1ae0 <abort@plt>
    3a4c:	add	x0, x20, x3
    3a50:	orr	x1, x0, #0x3
    3a54:	str	x1, [x19, #8]
    3a58:	add	x0, x19, x0
    3a5c:	ldr	x1, [x0, #8]
    3a60:	orr	x1, x1, #0x1
    3a64:	str	x1, [x0, #8]
    3a68:	add	x19, x19, #0x10
    3a6c:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    3a70:	ldr	x1, [x0, #16]
    3a74:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    3a78:	ldr	x2, [x2, #536]
    3a7c:	cmp	x1, x2
    3a80:	b.cs	3944 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x8dc>  // b.hs, b.nlast
    3a84:	stp	x23, x24, [sp, #48]
    3a88:	stp	x25, x26, [sp, #64]
    3a8c:	stp	x27, x28, [sp, #80]
    3a90:	bl	1ae0 <abort@plt>
    3a94:	lsr	x1, x3, #8
    3a98:	mov	x0, #0x1f                  	// #31
    3a9c:	mov	x2, #0xffff                	// #65535
    3aa0:	cmp	x2, x3, lsr #8
    3aa4:	b.cc	3b00 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa98>  // b.lo, b.ul, b.last
    3aa8:	sub	w2, w1, #0x100
    3aac:	lsr	w2, w2, #16
    3ab0:	and	w2, w2, #0x8
    3ab4:	lsl	w0, w1, w2
    3ab8:	sub	w5, w0, #0x1, lsl #12
    3abc:	lsr	w5, w5, #16
    3ac0:	and	w5, w5, #0x4
    3ac4:	lsl	w0, w0, w5
    3ac8:	sub	w4, w0, #0x4, lsl #12
    3acc:	lsr	w4, w4, #16
    3ad0:	and	w4, w4, #0x2
    3ad4:	lsl	w1, w0, w4
    3ad8:	lsr	w1, w1, #15
    3adc:	orr	w0, w2, w5
    3ae0:	add	w0, w0, w4
    3ae4:	sub	w1, w1, w0
    3ae8:	add	w0, w1, #0x15
    3aec:	lsr	x0, x3, x0
    3af0:	and	x0, x0, #0x1
    3af4:	add	w1, w1, #0xe
    3af8:	lsl	w1, w1, #1
    3afc:	add	x0, x0, x1
    3b00:	str	x0, [x7, #56]
    3b04:	str	xzr, [x7, #40]
    3b08:	str	xzr, [x7, #32]
    3b0c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3b10:	ldr	w2, [x1, #516]
    3b14:	mov	w1, #0x1                   	// #1
    3b18:	lsl	w1, w1, w0
    3b1c:	tst	w2, w1
    3b20:	b.eq	3b50 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xae8>  // b.none
    3b24:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3b28:	add	x1, x1, #0x198
    3b2c:	add	x1, x1, x0, lsl #3
    3b30:	ldr	x2, [x1, #696]
    3b34:	lsr	x4, x0, #1
    3b38:	mov	w1, #0x39                  	// #57
    3b3c:	sub	w1, w1, w4
    3b40:	cmp	x0, #0x1f
    3b44:	csel	w1, w1, wzr, ne  // ne = any
    3b48:	lsl	x1, x3, x1
    3b4c:	b	3b84 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb1c>
    3b50:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    3b54:	add	x3, x3, #0x198
    3b58:	orr	w1, w2, w1
    3b5c:	str	w1, [x3, #108]
    3b60:	add	x3, x3, #0x68
    3b64:	add	x0, x0, #0x4a
    3b68:	str	x7, [x3, x0, lsl #3]
    3b6c:	add	x0, x3, x0, lsl #3
    3b70:	str	x0, [x7, #48]
    3b74:	str	x7, [x7, #24]
    3b78:	str	x7, [x7, #16]
    3b7c:	b	3a68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa00>
    3b80:	mov	x2, x0
    3b84:	ldr	x0, [x2, #8]
    3b88:	and	x0, x0, #0xfffffffffffffffc
    3b8c:	cmp	x3, x0
    3b90:	b.eq	3be8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb80>  // b.none
    3b94:	lsr	x4, x1, #63
    3b98:	lsl	x1, x1, #1
    3b9c:	add	x0, x4, #0x4
    3ba0:	ldr	x0, [x2, x0, lsl #3]
    3ba4:	cbnz	x0, 3b80 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb18>
    3ba8:	add	x0, x4, #0x4
    3bac:	add	x0, x2, x0, lsl #3
    3bb0:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3bb4:	ldr	x1, [x1, #536]
    3bb8:	cmp	x1, x0
    3bbc:	b.hi	3bd8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xb70>  // b.pmore
    3bc0:	add	x4, x4, #0x4
    3bc4:	str	x7, [x2, x4, lsl #3]
    3bc8:	str	x2, [x7, #48]
    3bcc:	str	x7, [x7, #24]
    3bd0:	str	x7, [x7, #16]
    3bd4:	b	3a68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa00>
    3bd8:	stp	x23, x24, [sp, #48]
    3bdc:	stp	x25, x26, [sp, #64]
    3be0:	stp	x27, x28, [sp, #80]
    3be4:	bl	1ae0 <abort@plt>
    3be8:	ldr	x0, [x2, #16]
    3bec:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3bf0:	ldr	x1, [x1, #536]
    3bf4:	cmp	x2, x1
    3bf8:	ccmp	x0, x1, #0x0, cs  // cs = hs, nlast
    3bfc:	b.cc	3c18 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbb0>  // b.lo, b.ul, b.last
    3c00:	str	x7, [x0, #24]
    3c04:	str	x7, [x2, #16]
    3c08:	str	x0, [x7, #16]
    3c0c:	str	x2, [x7, #24]
    3c10:	str	xzr, [x7, #48]
    3c14:	b	3a68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xa00>
    3c18:	stp	x23, x24, [sp, #48]
    3c1c:	stp	x25, x26, [sp, #64]
    3c20:	stp	x27, x28, [sp, #80]
    3c24:	bl	1ae0 <abort@plt>
    3c28:	stp	x23, x24, [sp, #48]
    3c2c:	stp	x25, x26, [sp, #64]
    3c30:	stp	x27, x28, [sp, #80]
    3c34:	bl	1ae0 <abort@plt>
    3c38:	sub	x2, x1, x20
    3c3c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3c40:	ldr	x19, [x0, #544]
    3c44:	cmp	x2, #0x1f
    3c48:	b.ls	4828 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x17c0>  // b.plast
    3c4c:	add	x3, x19, x20
    3c50:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3c54:	add	x0, x0, #0x198
    3c58:	str	x3, [x0, #136]
    3c5c:	str	x2, [x0, #112]
    3c60:	orr	x0, x2, #0x1
    3c64:	str	x0, [x3, #8]
    3c68:	str	x2, [x19, x1]
    3c6c:	orr	x20, x20, #0x3
    3c70:	str	x20, [x19, #8]
    3c74:	add	x19, x19, #0x10
    3c78:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    3c7c:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x138>
    3c80:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3c84:	ldr	w0, [x0, #1376]
    3c88:	tbz	w0, #0, 4770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1708>
    3c8c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3c90:	ldr	x0, [x0, #432]
    3c94:	cmp	x20, x0
    3c98:	b.cc	4770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1708>  // b.lo, b.ul, b.last
    3c9c:	b	3ca4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc3c>
    3ca0:	mov	x20, #0xffffffffffffffff    	// #-1
    3ca4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3ca8:	ldr	x0, [x0, #424]
    3cac:	add	x1, x0, #0x37
    3cb0:	add	x1, x1, x20
    3cb4:	neg	x0, x0
    3cb8:	and	x22, x1, x0
    3cbc:	cmp	x22, x20
    3cc0:	b.ls	4770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1708>  // b.plast
    3cc4:	mov	x5, #0x0                   	// #0
    3cc8:	mov	w4, #0xffffffff            	// #-1
    3ccc:	mov	w3, #0x22                  	// #34
    3cd0:	mov	w2, #0x3                   	// #3
    3cd4:	mov	x1, x22
    3cd8:	mov	x0, #0x0                   	// #0
    3cdc:	bl	2e0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72c>
    3ce0:	cmn	x0, #0x1
    3ce4:	b.eq	4770 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1708>  // b.none
    3ce8:	neg	x2, x0
    3cec:	and	x2, x2, #0x7
    3cf0:	ands	x1, x0, #0x7
    3cf4:	csel	x1, x2, x1, ne  // ne = any
    3cf8:	sub	x2, x22, x1
    3cfc:	sub	x3, x2, #0x20
    3d00:	add	x19, x0, x1
    3d04:	orr	x4, x1, #0x1
    3d08:	str	x4, [x0, x1]
    3d0c:	orr	x1, x3, #0x2
    3d10:	str	x1, [x19, #8]
    3d14:	add	x3, x19, x3
    3d18:	mov	x1, #0xb                   	// #11
    3d1c:	str	x1, [x3, #8]
    3d20:	add	x2, x19, x2
    3d24:	stur	xzr, [x2, #-16]
    3d28:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3d2c:	ldr	x1, [x1, #536]
    3d30:	cmp	x0, x1
    3d34:	b.cs	3d40 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xcd8>  // b.hs, b.nlast
    3d38:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3d3c:	str	x0, [x1, #536]
    3d40:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3d44:	add	x1, x1, #0x198
    3d48:	ldr	x0, [x1, #952]
    3d4c:	add	x0, x22, x0
    3d50:	str	x0, [x1, #952]
    3d54:	add	x1, x1, #0x68
    3d58:	ldr	x1, [x1, #856]
    3d5c:	cmp	x0, x1
    3d60:	b.ls	3d6c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd04>  // b.plast
    3d64:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3d68:	str	x0, [x1, #1368]
    3d6c:	add	x19, x19, #0x10
    3d70:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    3d74:	stp	x23, x24, [sp, #48]
    3d78:	stp	x25, x26, [sp, #64]
    3d7c:	stp	x27, x28, [sp, #80]
    3d80:	mov	x5, #0x0                   	// #0
    3d84:	mov	w4, #0xffffffff            	// #-1
    3d88:	mov	w3, #0x22                  	// #34
    3d8c:	mov	w2, #0x3                   	// #3
    3d90:	mov	x1, x19
    3d94:	mov	x0, #0x0                   	// #0
    3d98:	bl	2e0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72c>
    3d9c:	mov	x22, x0
    3da0:	cmn	x0, #0x1
    3da4:	b.eq	3e0c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xda4>  // b.none
    3da8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3dac:	add	x0, x0, #0x198
    3db0:	ldr	x1, [x0, #952]
    3db4:	add	x1, x19, x1
    3db8:	str	x1, [x0, #952]
    3dbc:	add	x0, x0, #0x68
    3dc0:	ldr	x0, [x0, #856]
    3dc4:	cmp	x1, x0
    3dc8:	b.ls	3dd4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd6c>  // b.plast
    3dcc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3dd0:	str	x1, [x0, #1368]
    3dd4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3dd8:	ldr	x23, [x0, #552]
    3ddc:	cbz	x23, 3e1c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xdb4>
    3de0:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3de4:	add	x1, x1, #0x198
    3de8:	add	x1, x1, #0x400
    3dec:	ldr	x0, [x1]
    3df0:	ldr	x2, [x1, #8]
    3df4:	add	x3, x0, x2
    3df8:	cmp	x22, x3
    3dfc:	b.eq	46f8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1690>  // b.none
    3e00:	ldr	x1, [x1, #16]
    3e04:	cbnz	x1, 3dec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd84>
    3e08:	b	470c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16a4>
    3e0c:	ldp	x23, x24, [sp, #48]
    3e10:	ldp	x25, x26, [sp, #64]
    3e14:	ldp	x27, x28, [sp, #80]
    3e18:	b	4790 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1728>
    3e1c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3e20:	add	x0, x0, #0x198
    3e24:	str	x22, [x0, #128]
    3e28:	str	x22, [x0, #1024]
    3e2c:	str	x19, [x0, #1032]
    3e30:	sub	x1, x19, #0x8
    3e34:	add	x3, x22, x1
    3e38:	ldr	x2, [x22, x1]
    3e3c:	str	x2, [x0, #1048]
    3e40:	ldr	x0, [x3, x2]
    3e44:	cmp	x2, x0
    3e48:	b.ne	3ee4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe7c>  // b.any
    3e4c:	str	xzr, [x22, x1]
    3e50:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3e54:	add	x0, x1, #0x198
    3e58:	ldr	x1, [x1, #408]
    3e5c:	str	x1, [x0, #160]
    3e60:	add	x2, x0, #0xa8
    3e64:	add	x0, x0, #0x2a8
    3e68:	str	x2, [x2, #24]
    3e6c:	str	x2, [x2, #16]
    3e70:	add	x2, x2, #0x10
    3e74:	cmp	x0, x2
    3e78:	b.ne	3e68 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe00>  // b.any
    3e7c:	sub	x2, x19, #0x48
    3e80:	mov	x1, x22
    3e84:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3e88:	add	x0, x0, #0x198
    3e8c:	add	x0, x0, #0x68
    3e90:	bl	2728 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48>
    3e94:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3e98:	ldr	x0, [x0, #528]
    3e9c:	cmp	x20, x0
    3ea0:	b.cs	4584 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x151c>  // b.hs, b.nlast
    3ea4:	sub	x0, x0, x20
    3ea8:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    3eac:	add	x1, x1, #0x198
    3eb0:	str	x0, [x1, #120]
    3eb4:	ldr	x19, [x1, #144]
    3eb8:	add	x2, x19, x20
    3ebc:	str	x2, [x1, #144]
    3ec0:	orr	x0, x0, #0x1
    3ec4:	str	x0, [x2, #8]
    3ec8:	orr	x20, x20, #0x3
    3ecc:	str	x20, [x19, #8]
    3ed0:	add	x19, x19, #0x10
    3ed4:	ldp	x23, x24, [sp, #48]
    3ed8:	ldp	x25, x26, [sp, #64]
    3edc:	ldp	x27, x28, [sp, #80]
    3ee0:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    3ee4:	bl	1ae0 <abort@plt>
    3ee8:	cmp	x23, x0
    3eec:	b.cc	470c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16a4>  // b.lo, b.ul, b.last
    3ef0:	cmp	x22, x23
    3ef4:	b.ls	470c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16a4>  // b.plast
    3ef8:	add	x2, x19, x2
    3efc:	str	x2, [x1, #8]
    3f00:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    3f04:	add	x0, x0, #0x198
    3f08:	add	x0, x0, #0x68
    3f0c:	ldr	x2, [x0, #16]
    3f10:	add	x2, x19, x2
    3f14:	ldr	x1, [x0, #40]
    3f18:	bl	2728 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48>
    3f1c:	b	3e94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe2c>
    3f20:	str	x22, [x1]
    3f24:	ldr	x2, [x1, #8]
    3f28:	add	x19, x2, x19
    3f2c:	str	x19, [x1, #8]
    3f30:	neg	x1, x22
    3f34:	and	x1, x1, #0x7
    3f38:	ands	x19, x22, #0x7
    3f3c:	csel	x19, x1, x19, ne  // ne = any
    3f40:	add	x19, x22, x19
    3f44:	neg	x2, x0
    3f48:	and	x2, x2, #0x7
    3f4c:	ands	x1, x0, #0x7
    3f50:	csel	x1, x2, x1, ne  // ne = any
    3f54:	add	x0, x0, x1
    3f58:	add	x1, x19, x20
    3f5c:	sub	x3, x0, x19
    3f60:	sub	x3, x3, x20
    3f64:	orr	x20, x20, #0x3
    3f68:	str	x20, [x19, #8]
    3f6c:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    3f70:	ldr	x2, [x2, #552]
    3f74:	cmp	x0, x2
    3f78:	b.eq	4050 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xfe8>  // b.none
    3f7c:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    3f80:	ldr	x2, [x2, #544]
    3f84:	cmp	x0, x2
    3f88:	b.eq	4084 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x101c>  // b.none
    3f8c:	ldr	x4, [x0, #8]
    3f90:	tbnz	w4, #1, 3fe4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf7c>
    3f94:	and	x7, x4, #0xfffffffffffffffc
    3f98:	lsr	x2, x4, #3
    3f9c:	cmp	x4, #0xff
    3fa0:	b.hi	40f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x108c>  // b.pmore
    3fa4:	ldr	x5, [x0, #16]
    3fa8:	ldr	x4, [x0, #24]
    3fac:	cmp	x5, x4
    3fb0:	b.eq	40ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1044>  // b.none
    3fb4:	adrp	x6, 18000 <memcpy@GLIBC_2.17>
    3fb8:	add	x6, x6, #0x198
    3fbc:	add	x2, x6, x2, lsl #4
    3fc0:	add	x2, x2, #0xa8
    3fc4:	cmp	x5, x2
    3fc8:	b.ne	40cc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1064>  // b.any
    3fcc:	cmp	x4, x2
    3fd0:	b.ne	40e0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1078>  // b.any
    3fd4:	str	x4, [x5, #24]
    3fd8:	str	x5, [x4, #16]
    3fdc:	add	x0, x0, x7
    3fe0:	add	x3, x3, x7
    3fe4:	ldr	x2, [x0, #8]
    3fe8:	and	x2, x2, #0xfffffffffffffffe
    3fec:	str	x2, [x0, #8]
    3ff0:	orr	x0, x3, #0x1
    3ff4:	str	x0, [x1, #8]
    3ff8:	str	x3, [x1, x3]
    3ffc:	lsr	x4, x3, #3
    4000:	cmp	x3, #0xff
    4004:	b.hi	4270 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1208>  // b.pmore
    4008:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    400c:	add	x2, x2, #0x198
    4010:	add	x0, x2, x4, lsl #4
    4014:	add	x0, x0, #0xa8
    4018:	ldr	w2, [x2, #104]
    401c:	mov	w3, #0x1                   	// #1
    4020:	lsl	w3, w3, w4
    4024:	tst	w2, w3
    4028:	b.ne	4258 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11f0>  // b.any
    402c:	orr	w2, w2, w3
    4030:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    4034:	str	w2, [x3, #512]
    4038:	mov	x2, x0
    403c:	str	x1, [x0, #16]
    4040:	str	x1, [x2, #24]
    4044:	str	x2, [x1, #16]
    4048:	str	x0, [x1, #24]
    404c:	b	4070 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1008>
    4050:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4054:	add	x0, x0, #0x198
    4058:	ldr	x2, [x0, #120]
    405c:	add	x3, x3, x2
    4060:	str	x3, [x0, #120]
    4064:	str	x1, [x0, #144]
    4068:	orr	x3, x3, #0x1
    406c:	str	x3, [x1, #8]
    4070:	add	x19, x19, #0x10
    4074:	ldp	x23, x24, [sp, #48]
    4078:	ldp	x25, x26, [sp, #64]
    407c:	ldp	x27, x28, [sp, #80]
    4080:	b	3148 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe0>
    4084:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4088:	add	x0, x0, #0x198
    408c:	ldr	x2, [x0, #112]
    4090:	add	x3, x3, x2
    4094:	str	x3, [x0, #112]
    4098:	str	x1, [x0, #136]
    409c:	orr	x0, x3, #0x1
    40a0:	str	x0, [x1, #8]
    40a4:	str	x3, [x1, x3]
    40a8:	b	4070 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1008>
    40ac:	adrp	x5, 18000 <memcpy@GLIBC_2.17>
    40b0:	add	x5, x5, #0x198
    40b4:	mov	w4, #0x1                   	// #1
    40b8:	lsl	w2, w4, w2
    40bc:	ldr	w4, [x5, #104]
    40c0:	bic	w2, w4, w2
    40c4:	str	w2, [x5, #104]
    40c8:	b	3fdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf74>
    40cc:	adrp	x6, 18000 <memcpy@GLIBC_2.17>
    40d0:	ldr	x6, [x6, #536]
    40d4:	cmp	x5, x6
    40d8:	b.cs	3fcc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf64>  // b.hs, b.nlast
    40dc:	bl	1ae0 <abort@plt>
    40e0:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x2, [x2, #536]
    40e8:	cmp	x4, x2
    40ec:	b.cs	3fd4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf6c>  // b.hs, b.nlast
    40f0:	b	40dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1074>
    40f4:	ldr	x5, [x0, #48]
    40f8:	ldr	x2, [x0, #24]
    40fc:	cmp	x0, x2
    4100:	b.eq	41b0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1148>  // b.none
    4104:	ldr	x4, [x0, #16]
    4108:	adrp	x6, 18000 <memcpy@GLIBC_2.17>
    410c:	ldr	x6, [x6, #536]
    4110:	cmp	x4, x6
    4114:	b.cc	41ac <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1144>  // b.lo, b.ul, b.last
    4118:	str	x2, [x4, #24]
    411c:	str	x4, [x2, #16]
    4120:	cbz	x5, 3fdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf74>
    4124:	ldr	x6, [x0, #56]
    4128:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    412c:	add	x4, x4, #0x198
    4130:	add	x4, x4, x6, lsl #3
    4134:	ldr	x4, [x4, #696]
    4138:	cmp	x0, x4
    413c:	b.eq	420c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11a4>  // b.none
    4140:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    4144:	ldr	x4, [x4, #536]
    4148:	cmp	x5, x4
    414c:	b.cc	4248 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11e0>  // b.lo, b.ul, b.last
    4150:	ldr	x4, [x5, #32]
    4154:	cmp	x0, x4
    4158:	b.eq	4240 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11d8>  // b.none
    415c:	str	x2, [x5, #40]
    4160:	cbz	x2, 3fdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf74>
    4164:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    4168:	ldr	x6, [x4, #536]
    416c:	cmp	x2, x6
    4170:	b.cc	4254 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11ec>  // b.lo, b.ul, b.last
    4174:	str	x5, [x2, #48]
    4178:	ldr	x4, [x0, #32]
    417c:	cbz	x4, 4190 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1128>
    4180:	cmp	x6, x4
    4184:	b.hi	424c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11e4>  // b.pmore
    4188:	str	x4, [x2, #32]
    418c:	str	x2, [x4, #48]
    4190:	ldr	x4, [x0, #40]
    4194:	cbz	x4, 3fdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf74>
    4198:	cmp	x6, x4
    419c:	b.hi	4250 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11e8>  // b.pmore
    41a0:	str	x4, [x2, #40]
    41a4:	str	x2, [x4, #48]
    41a8:	b	3fdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf74>
    41ac:	bl	1ae0 <abort@plt>
    41b0:	ldr	x2, [x0, #40]
    41b4:	cbz	x2, 41f8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1190>
    41b8:	add	x6, x0, #0x28
    41bc:	mov	x4, x2
    41c0:	mov	x8, x6
    41c4:	add	x6, x4, #0x28
    41c8:	mov	x2, x4
    41cc:	ldr	x4, [x4, #40]
    41d0:	cbnz	x4, 41c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1158>
    41d4:	add	x6, x2, #0x20
    41d8:	ldr	x4, [x2, #32]
    41dc:	cbnz	x4, 41c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1158>
    41e0:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x4, [x4, #536]
    41e8:	cmp	x4, x8
    41ec:	b.hi	4208 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x11a0>  // b.pmore
    41f0:	str	xzr, [x8]
    41f4:	b	4120 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10b8>
    41f8:	ldr	x2, [x0, #32]
    41fc:	cbz	x2, 4120 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10b8>
    4200:	add	x6, x0, #0x20
    4204:	b	41bc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1154>
    4208:	bl	1ae0 <abort@plt>
    420c:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    4210:	add	x4, x4, #0x198
    4214:	add	x6, x4, x6, lsl #3
    4218:	str	x2, [x6, #696]
    421c:	cbnz	x2, 4164 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10fc>
    4220:	mov	x2, x4
    4224:	ldr	x5, [x0, #56]
    4228:	mov	w4, #0x1                   	// #1
    422c:	lsl	w4, w4, w5
    4230:	ldr	w5, [x2, #108]
    4234:	bic	w4, w5, w4
    4238:	str	w4, [x2, #108]
    423c:	b	3fdc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xf74>
    4240:	str	x2, [x5, #32]
    4244:	b	4160 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10f8>
    4248:	bl	1ae0 <abort@plt>
    424c:	bl	1ae0 <abort@plt>
    4250:	bl	1ae0 <abort@plt>
    4254:	bl	1ae0 <abort@plt>
    4258:	ldr	x2, [x0, #16]
    425c:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    4260:	ldr	x3, [x3, #536]
    4264:	cmp	x2, x3
    4268:	b.cs	403c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.hs, b.nlast
    426c:	bl	1ae0 <abort@plt>
    4270:	lsr	x7, x3, #8
    4274:	sub	w4, w7, #0x100
    4278:	lsr	w4, w4, #16
    427c:	and	w4, w4, #0x8
    4280:	lsl	w0, w7, w4
    4284:	sub	w6, w0, #0x1, lsl #12
    4288:	lsr	w6, w6, #16
    428c:	and	w6, w6, #0x4
    4290:	lsl	w0, w0, w6
    4294:	sub	w5, w0, #0x4, lsl #12
    4298:	lsr	w5, w5, #16
    429c:	and	w5, w5, #0x2
    42a0:	lsl	w2, w0, w5
    42a4:	lsr	w2, w2, #15
    42a8:	orr	w0, w4, w6
    42ac:	add	w0, w0, w5
    42b0:	sub	w2, w2, w0
    42b4:	add	w0, w2, #0x15
    42b8:	lsr	x0, x3, x0
    42bc:	and	x0, x0, #0x1
    42c0:	add	w2, w2, #0xe
    42c4:	lsl	w2, w2, #1
    42c8:	add	x0, x0, x2
    42cc:	mov	x2, #0xffff                	// #65535
    42d0:	cmp	x7, x2
    42d4:	mov	x2, #0x1f                  	// #31
    42d8:	csel	x0, x0, x2, ls  // ls = plast
    42dc:	str	x0, [x1, #56]
    42e0:	str	xzr, [x1, #40]
    42e4:	str	xzr, [x1, #32]
    42e8:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    42ec:	ldr	w4, [x2, #516]
    42f0:	mov	w5, #0x1                   	// #1
    42f4:	lsl	w5, w5, w0
    42f8:	tst	w4, w5
    42fc:	b.ne	4330 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12c8>  // b.any
    4300:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    4304:	add	x2, x2, #0x198
    4308:	orr	w4, w4, w5
    430c:	str	w4, [x2, #108]
    4310:	add	x2, x2, #0x68
    4314:	add	x0, x0, #0x4a
    4318:	str	x1, [x2, x0, lsl #3]
    431c:	add	x0, x2, x0, lsl #3
    4320:	str	x0, [x1, #48]
    4324:	str	x1, [x1, #24]
    4328:	str	x1, [x1, #16]
    432c:	b	4070 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1008>
    4330:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    4334:	add	x2, x2, #0x198
    4338:	add	x2, x2, x0, lsl #3
    433c:	ldr	x2, [x2, #696]
    4340:	lsr	x5, x0, #1
    4344:	mov	w4, #0x39                  	// #57
    4348:	sub	w4, w4, w5
    434c:	cmp	x0, #0x1f
    4350:	csel	w0, w4, wzr, ne  // ne = any
    4354:	lsl	x0, x3, x0
    4358:	b	4360 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12f8>
    435c:	mov	x2, x5
    4360:	ldr	x4, [x2, #8]
    4364:	and	x4, x4, #0xfffffffffffffffc
    4368:	cmp	x3, x4
    436c:	b.eq	43b8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1350>  // b.none
    4370:	lsr	x4, x0, #63
    4374:	lsl	x0, x0, #1
    4378:	add	x5, x4, #0x4
    437c:	ldr	x5, [x2, x5, lsl #3]
    4380:	cbnz	x5, 435c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x12f4>
    4384:	add	x0, x4, #0x4
    4388:	add	x0, x2, x0, lsl #3
    438c:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    4390:	ldr	x3, [x3, #536]
    4394:	cmp	x3, x0
    4398:	b.hi	43b4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x134c>  // b.pmore
    439c:	add	x4, x4, #0x4
    43a0:	str	x1, [x2, x4, lsl #3]
    43a4:	str	x2, [x1, #48]
    43a8:	str	x1, [x1, #24]
    43ac:	str	x1, [x1, #16]
    43b0:	b	4070 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1008>
    43b4:	bl	1ae0 <abort@plt>
    43b8:	ldr	x0, [x2, #16]
    43bc:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    43c0:	ldr	x3, [x3, #536]
    43c4:	cmp	x0, x3
    43c8:	ccmp	x2, x3, #0x0, cs  // cs = hs, nlast
    43cc:	b.cc	43e8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1380>  // b.lo, b.ul, b.last
    43d0:	str	x1, [x0, #24]
    43d4:	str	x1, [x2, #16]
    43d8:	str	x0, [x1, #16]
    43dc:	str	x2, [x1, #24]
    43e0:	str	xzr, [x1, #48]
    43e4:	b	4070 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1008>
    43e8:	bl	1ae0 <abort@plt>
    43ec:	bl	1ae0 <abort@plt>
    43f0:	ldr	x1, [x0, #16]
    43f4:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    43f8:	ldr	x2, [x2, #536]
    43fc:	cmp	x1, x2
    4400:	b.cs	46e4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x167c>  // b.hs, b.nlast
    4404:	bl	1ae0 <abort@plt>
    4408:	lsr	x2, x1, #8
    440c:	mov	x0, #0x1f                  	// #31
    4410:	mov	x3, #0xffff                	// #65535
    4414:	cmp	x3, x1, lsr #8
    4418:	b.cc	4474 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x140c>  // b.lo, b.ul, b.last
    441c:	sub	w3, w2, #0x100
    4420:	lsr	w3, w3, #16
    4424:	and	w3, w3, #0x8
    4428:	lsl	w0, w2, w3
    442c:	sub	w5, w0, #0x1, lsl #12
    4430:	lsr	w5, w5, #16
    4434:	and	w5, w5, #0x4
    4438:	lsl	w0, w0, w5
    443c:	sub	w4, w0, #0x4, lsl #12
    4440:	lsr	w4, w4, #16
    4444:	and	w4, w4, #0x2
    4448:	lsl	w2, w0, w4
    444c:	lsr	w2, w2, #15
    4450:	orr	w0, w3, w5
    4454:	add	w0, w0, w4
    4458:	sub	w2, w2, w0
    445c:	add	w0, w2, #0x15
    4460:	lsr	x0, x1, x0
    4464:	and	x0, x0, #0x1
    4468:	add	w2, w2, #0xe
    446c:	lsl	w2, w2, #1
    4470:	add	x0, x0, x2
    4474:	str	x0, [x23, #56]
    4478:	str	xzr, [x23, #40]
    447c:	str	xzr, [x23, #32]
    4480:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    4484:	ldr	w3, [x2, #516]
    4488:	mov	w2, #0x1                   	// #1
    448c:	lsl	w2, w2, w0
    4490:	tst	w3, w2
    4494:	b.ne	44c8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1460>  // b.any
    4498:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    449c:	add	x1, x1, #0x198
    44a0:	orr	w2, w3, w2
    44a4:	str	w2, [x1, #108]
    44a8:	add	x1, x1, #0x68
    44ac:	add	x0, x0, #0x4a
    44b0:	str	x23, [x1, x0, lsl #3]
    44b4:	add	x0, x1, x0, lsl #3
    44b8:	str	x0, [x23, #48]
    44bc:	str	x23, [x23, #24]
    44c0:	str	x23, [x23, #16]
    44c4:	b	3e94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe2c>
    44c8:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    44cc:	add	x2, x2, #0x198
    44d0:	add	x2, x2, x0, lsl #3
    44d4:	ldr	x3, [x2, #696]
    44d8:	lsr	x4, x0, #1
    44dc:	mov	w2, #0x39                  	// #57
    44e0:	sub	w2, w2, w4
    44e4:	cmp	x0, #0x1f
    44e8:	csel	w2, w2, wzr, ne  // ne = any
    44ec:	lsl	x2, x1, x2
    44f0:	b	44f8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1490>
    44f4:	mov	x3, x0
    44f8:	ldr	x0, [x3, #8]
    44fc:	and	x0, x0, #0xfffffffffffffffc
    4500:	cmp	x1, x0
    4504:	b.eq	4550 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14e8>  // b.none
    4508:	lsr	x4, x2, #63
    450c:	lsl	x2, x2, #1
    4510:	add	x0, x4, #0x4
    4514:	ldr	x0, [x3, x0, lsl #3]
    4518:	cbnz	x0, 44f4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x148c>
    451c:	add	x0, x4, #0x4
    4520:	add	x0, x3, x0, lsl #3
    4524:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    4528:	ldr	x1, [x1, #536]
    452c:	cmp	x1, x0
    4530:	b.hi	454c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x14e4>  // b.pmore
    4534:	add	x4, x4, #0x4
    4538:	str	x23, [x3, x4, lsl #3]
    453c:	str	x3, [x23, #48]
    4540:	str	x23, [x23, #24]
    4544:	str	x23, [x23, #16]
    4548:	b	3e94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe2c>
    454c:	bl	1ae0 <abort@plt>
    4550:	ldr	x0, [x3, #16]
    4554:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    4558:	ldr	x1, [x1, #536]
    455c:	cmp	x3, x1
    4560:	ccmp	x0, x1, #0x0, cs  // cs = hs, nlast
    4564:	b.cc	4580 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1518>  // b.lo, b.ul, b.last
    4568:	str	x23, [x0, #24]
    456c:	str	x23, [x3, #16]
    4570:	str	x0, [x23, #16]
    4574:	str	x3, [x23, #24]
    4578:	str	xzr, [x23, #48]
    457c:	b	3e94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe2c>
    4580:	bl	1ae0 <abort@plt>
    4584:	ldp	x23, x24, [sp, #48]
    4588:	ldp	x25, x26, [sp, #64]
    458c:	ldp	x27, x28, [sp, #80]
    4590:	b	4790 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1728>
    4594:	mov	x19, x1
    4598:	b	3174 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10c>
    459c:	mov	x19, #0x0                   	// #0
    45a0:	b	3174 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10c>
    45a4:	add	x2, x22, x19
    45a8:	ldur	x3, [x2, #-8]
    45ac:	ldr	x2, [x1, #24]
    45b0:	cmp	x3, x2
    45b4:	b.eq	3f20 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xeb8>  // b.none
    45b8:	mov	x1, x23
    45bc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    45c0:	add	x0, x0, #0x198
    45c4:	add	x0, x0, #0x68
    45c8:	bl	26f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x18>
    45cc:	ldr	x25, [x0]
    45d0:	ldr	x0, [x0, #8]
    45d4:	add	x25, x25, x0
    45d8:	sub	x24, x25, #0x3f
    45dc:	neg	x0, x24
    45e0:	and	x0, x0, #0x7
    45e4:	ands	x24, x24, #0x7
    45e8:	csel	x24, x0, x24, ne  // ne = any
    45ec:	sub	x24, x24, #0x4f
    45f0:	add	x24, x25, x24
    45f4:	add	x0, x23, #0x20
    45f8:	cmp	x24, x0
    45fc:	csel	x24, x24, x23, cs  // cs = hs, nlast
    4600:	add	x28, x24, #0x10
    4604:	adrp	x26, 18000 <memcpy@GLIBC_2.17>
    4608:	add	x26, x26, #0x198
    460c:	add	x27, x26, #0x68
    4610:	sub	x2, x19, #0x48
    4614:	mov	x1, x22
    4618:	mov	x0, x27
    461c:	bl	2728 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48>
    4620:	mov	x0, #0x2b                  	// #43
    4624:	str	x0, [x24, #8]
    4628:	add	x26, x26, #0x400
    462c:	ldp	x0, x1, [x26]
    4630:	stp	x0, x1, [x24, #16]
    4634:	ldp	x0, x1, [x26, #16]
    4638:	stp	x0, x1, [x28, #16]
    463c:	str	x22, [x27, #920]
    4640:	str	x19, [x27, #928]
    4644:	sub	x19, x19, #0x8
    4648:	add	x1, x22, x19
    464c:	ldr	x0, [x22, x19]
    4650:	str	x0, [x27, #944]
    4654:	ldr	x1, [x1, x0]
    4658:	cmp	x0, x1
    465c:	b.ne	43ec <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1384>  // b.any
    4660:	str	xzr, [x22, x19]
    4664:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4668:	str	x28, [x0, #1448]
    466c:	add	x0, x24, #0x30
    4670:	mov	x1, #0xb                   	// #11
    4674:	str	x1, [x0], #8
    4678:	cmp	x25, x0
    467c:	b.hi	4674 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x160c>  // b.pmore
    4680:	cmp	x23, x24
    4684:	b.eq	3e94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe2c>  // b.none
    4688:	sub	x1, x24, x23
    468c:	ldr	x0, [x24, #8]
    4690:	and	x0, x0, #0xfffffffffffffffe
    4694:	str	x0, [x24, #8]
    4698:	orr	x0, x1, #0x1
    469c:	str	x0, [x23, #8]
    46a0:	str	x1, [x24]
    46a4:	lsr	x2, x1, #3
    46a8:	cmp	x1, #0xff
    46ac:	b.hi	4408 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x13a0>  // b.pmore
    46b0:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    46b4:	add	x1, x1, #0x198
    46b8:	add	x0, x1, x2, lsl #4
    46bc:	add	x0, x0, #0xa8
    46c0:	ldr	w3, [x1, #104]
    46c4:	mov	w1, #0x1                   	// #1
    46c8:	lsl	w1, w1, w2
    46cc:	tst	w3, w1
    46d0:	b.ne	43f0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1388>  // b.any
    46d4:	orr	w1, w3, w1
    46d8:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    46dc:	str	w1, [x2, #512]
    46e0:	mov	x1, x0
    46e4:	str	x23, [x0, #16]
    46e8:	str	x23, [x1, #24]
    46ec:	str	x1, [x23, #16]
    46f0:	str	x0, [x23, #24]
    46f4:	b	3e94 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe2c>
    46f8:	add	x3, x22, x19
    46fc:	ldur	x4, [x3, #-8]
    4700:	ldr	x3, [x1, #24]
    4704:	cmp	x4, x3
    4708:	b.eq	3ee8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xe80>  // b.none
    470c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4710:	ldr	x0, [x0, #536]
    4714:	cmp	x22, x0
    4718:	b.cs	4724 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16bc>  // b.hs, b.nlast
    471c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4720:	str	x22, [x0, #536]
    4724:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    4728:	add	x1, x1, #0x198
    472c:	add	x1, x1, #0x400
    4730:	add	x2, x22, x19
    4734:	ldr	x0, [x1]
    4738:	cmp	x0, x2
    473c:	b.eq	45a4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x153c>  // b.none
    4740:	ldr	x1, [x1, #16]
    4744:	cbnz	x1, 4734 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x16cc>
    4748:	b	45b8 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1550>
    474c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4750:	ldr	x1, [x0, #520]
    4754:	cmn	x1, #0x1
    4758:	b.eq	4820 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x17b8>  // b.none
    475c:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x138>
    4760:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4764:	ldr	w0, [x0, #1376]
    4768:	tbnz	w0, #0, 3ca0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc38>
    476c:	mov	x20, #0xffffffffffffffff    	// #-1
    4770:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4774:	ldr	x0, [x0, #424]
    4778:	add	x19, x0, #0x49
    477c:	add	x19, x19, x20
    4780:	neg	x0, x0
    4784:	and	x19, x19, x0
    4788:	cmp	x20, x19
    478c:	b.cc	3d74 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xd0c>  // b.lo, b.ul, b.last
    4790:	bl	1bd0 <__errno_location@plt>
    4794:	mov	w1, #0xc                   	// #12
    4798:	str	w1, [x0]
    479c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    47a0:	ldr	w0, [x0, #1376]
    47a4:	mov	x19, #0x0                   	// #0
    47a8:	tbz	w0, #1, 3174 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10c>
    47ac:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    47b0:	add	x0, x0, #0x198
    47b4:	add	x0, x0, #0x3d0
    47b8:	bl	1c20 <pthread_mutex_unlock@plt>
    47bc:	cbz	x19, 3174 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x10c>
    47c0:	b	3154 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xec>
    47c4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    47c8:	ldr	x1, [x0, #1352]
    47cc:	mov	x7, #0x1f                  	// #31
    47d0:	mov	w5, #0x0                   	// #0
    47d4:	cbnz	x1, 3760 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6f8>
    47d8:	mov	w0, #0x2                   	// #2
    47dc:	lsl	w7, w0, w7
    47e0:	neg	w0, w7
    47e4:	orr	w0, w0, w7
    47e8:	ands	w0, w0, w6
    47ec:	b.eq	3678 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x610>  // b.none
    47f0:	neg	w1, w0
    47f4:	ands	w0, w1, w0
    47f8:	rbit	w0, w0
    47fc:	clz	w0, w0
    4800:	csinv	w0, w0, wzr, ne  // ne = any
    4804:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    4808:	add	x1, x1, #0x198
    480c:	add	x0, x1, w0, sxtw #3
    4810:	ldr	x2, [x0, #696]
    4814:	mov	x19, #0x0                   	// #0
    4818:	cbnz	x2, 37dc <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x774>
    481c:	b	3678 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x610>
    4820:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4824:	ldr	x19, [x0, #544]
    4828:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    482c:	add	x0, x0, #0x198
    4830:	str	xzr, [x0, #112]
    4834:	str	xzr, [x0, #136]
    4838:	orr	x0, x1, #0x3
    483c:	str	x0, [x19, #8]
    4840:	add	x1, x19, x1
    4844:	ldr	x0, [x1, #8]
    4848:	orr	x0, x0, #0x1
    484c:	str	x0, [x1, #8]
    4850:	b	3c74 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc0c>
    4854:	stp	x29, x30, [sp, #-32]!
    4858:	mov	x29, sp
    485c:	str	x19, [sp, #16]
    4860:	mov	x19, x0
    4864:	mov	x1, x0
    4868:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    486c:	add	x0, x0, #0x198
    4870:	add	x0, x0, #0x68
    4874:	bl	26f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x18>
    4878:	cbz	x0, 4890 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x1828>
    487c:	ldr	x0, [x0, #24]
    4880:	add	x0, x19, x0
    4884:	ldr	x19, [sp, #16]
    4888:	ldp	x29, x30, [sp], #32
    488c:	ret
    4890:	mov	x0, x19
    4894:	b	4884 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x181c>

0000000000004898 <ffi_closure_free@@LIBFFI_CLOSURE_7.0>:
    4898:	cbz	x0, 5628 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd90>
    489c:	stp	x29, x30, [sp, #-96]!
    48a0:	mov	x29, sp
    48a4:	stp	x19, x20, [sp, #16]
    48a8:	mov	x19, x0
    48ac:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    48b0:	ldr	x0, [x0, #416]
    48b4:	cbz	x0, 4a20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x188>
    48b8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    48bc:	ldr	w0, [x0, #1376]
    48c0:	tbz	w0, #1, 48d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x40>
    48c4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    48c8:	add	x0, x0, #0x198
    48cc:	add	x0, x0, #0x3d0
    48d0:	bl	1c00 <pthread_mutex_lock@plt>
    48d4:	cbnz	w0, 53cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    48d8:	sub	x2, x19, #0x10
    48dc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    48e0:	ldr	x5, [x0, #536]
    48e4:	cmp	x2, x5
    48e8:	b.cc	559c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>  // b.lo, b.ul, b.last
    48ec:	ldur	x0, [x19, #-8]
    48f0:	tbz	w0, #1, 559c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>
    48f4:	and	x1, x0, #0xfffffffffffffffc
    48f8:	add	x3, x2, x1
    48fc:	tbnz	w0, #0, 4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4900:	ldur	x0, [x19, #-16]
    4904:	tbnz	w0, #0, 4a2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x194>
    4908:	sub	x2, x2, x0
    490c:	add	x1, x1, x0
    4910:	cmp	x5, x2
    4914:	b.hi	559c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>  // b.pmore
    4918:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    491c:	ldr	x4, [x4, #544]
    4920:	cmp	x2, x4
    4924:	b.eq	4c50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3b8>  // b.none
    4928:	lsr	x4, x0, #3
    492c:	cmp	x0, #0xff
    4930:	b.hi	4a94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1fc>  // b.pmore
    4934:	ldr	x6, [x2, #16]
    4938:	ldr	x0, [x2, #24]
    493c:	cmp	x6, x0
    4940:	b.eq	4a60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c8>  // b.none
    4944:	adrp	x7, 18000 <memcpy@GLIBC_2.17>
    4948:	add	x7, x7, #0x198
    494c:	add	x4, x7, x4, lsl #4
    4950:	add	x4, x4, #0xa8
    4954:	cmp	x5, x6
    4958:	ccmp	x6, x4, #0x4, hi  // hi = pmore
    495c:	b.ne	4a80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e8>  // b.any
    4960:	cmp	x5, x0
    4964:	ccmp	x0, x4, #0x4, hi  // hi = pmore
    4968:	b.ne	4a80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e8>  // b.any
    496c:	str	x0, [x6, #24]
    4970:	str	x6, [x0, #16]
    4974:	cmp	x3, x2
    4978:	b.ls	559c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>  // b.plast
    497c:	ldr	x0, [x3, #8]
    4980:	tbz	w0, #0, 559c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd04>
    4984:	and	x20, x0, #0x2
    4988:	tbnz	w0, #1, 535c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xac4>
    498c:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    4990:	ldr	x4, [x4, #552]
    4994:	cmp	x3, x4
    4998:	b.eq	4c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3ec>  // b.none
    499c:	adrp	x4, 18000 <memcpy@GLIBC_2.17>
    49a0:	ldr	x4, [x4, #544]
    49a4:	cmp	x3, x4
    49a8:	b.eq	5110 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x878>  // b.none
    49ac:	and	x0, x0, #0xfffffffffffffffc
    49b0:	add	x1, x1, x0
    49b4:	lsr	x4, x0, #3
    49b8:	cmp	x0, #0xff
    49bc:	b.hi	5190 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8f8>  // b.pmore
    49c0:	ldr	x5, [x3, #16]
    49c4:	ldr	x0, [x3, #24]
    49c8:	cmp	x5, x0
    49cc:	b.eq	5138 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8a0>  // b.none
    49d0:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    49d4:	add	x3, x3, #0x198
    49d8:	add	x4, x3, x4, lsl #4
    49dc:	add	x4, x4, #0xa8
    49e0:	cmp	x5, x4
    49e4:	b.ne	5158 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8c0>  // b.any
    49e8:	cmp	x0, x4
    49ec:	b.ne	517c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8e4>  // b.any
    49f0:	str	x0, [x5, #24]
    49f4:	str	x5, [x0, #16]
    49f8:	orr	x0, x1, #0x1
    49fc:	str	x0, [x2, #8]
    4a00:	str	x1, [x2, x1]
    4a04:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4a08:	ldr	x0, [x0, #544]
    4a0c:	cmp	x2, x0
    4a10:	b.ne	5370 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xad8>  // b.any
    4a14:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4a18:	str	x1, [x0, #520]
    4a1c:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    4a20:	bl	2818 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x138>
    4a24:	cbnz	w0, 48c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c>
    4a28:	b	48b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20>
    4a2c:	and	x0, x0, #0xfffffffffffffffe
    4a30:	add	x1, x1, x0
    4a34:	add	x19, x1, #0x20
    4a38:	mov	x1, x19
    4a3c:	sub	x0, x2, x0
    4a40:	bl	2908 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x228>
    4a44:	cbnz	w0, 53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    4a48:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4a4c:	add	x0, x0, #0x198
    4a50:	ldr	x1, [x0, #952]
    4a54:	sub	x19, x1, x19
    4a58:	str	x19, [x0, #952]
    4a5c:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    4a60:	adrp	x5, 18000 <memcpy@GLIBC_2.17>
    4a64:	add	x5, x5, #0x198
    4a68:	mov	w0, #0x1                   	// #1
    4a6c:	lsl	w0, w0, w4
    4a70:	ldr	w4, [x5, #104]
    4a74:	bic	w0, w4, w0
    4a78:	str	w0, [x5, #104]
    4a7c:	b	4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4a80:	stp	x21, x22, [sp, #32]
    4a84:	stp	x23, x24, [sp, #48]
    4a88:	stp	x25, x26, [sp, #64]
    4a8c:	stp	x27, x28, [sp, #80]
    4a90:	bl	1ae0 <abort@plt>
    4a94:	ldr	x8, [x2, #48]
    4a98:	ldr	x4, [x2, #24]
    4a9c:	cmp	x2, x4
    4aa0:	b.eq	4b58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c0>  // b.none
    4aa4:	ldr	x0, [x2, #16]
    4aa8:	cmp	x5, x0
    4aac:	b.hi	4b44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2ac>  // b.pmore
    4ab0:	str	x4, [x0, #24]
    4ab4:	str	x0, [x4, #16]
    4ab8:	cbz	x8, 4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4abc:	ldr	x5, [x2, #56]
    4ac0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4ac4:	add	x0, x0, #0x198
    4ac8:	add	x0, x0, x5, lsl #3
    4acc:	ldr	x0, [x0, #696]
    4ad0:	cmp	x2, x0
    4ad4:	b.eq	4bc0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x328>  // b.none
    4ad8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4adc:	ldr	x0, [x0, #536]
    4ae0:	cmp	x8, x0
    4ae4:	b.cc	4c00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x368>  // b.lo, b.ul, b.last
    4ae8:	ldr	x0, [x8, #32]
    4aec:	cmp	x2, x0
    4af0:	b.eq	4bf8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x360>  // b.none
    4af4:	str	x4, [x8, #40]
    4af8:	cbz	x4, 4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4afc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4b00:	ldr	x5, [x0, #536]
    4b04:	cmp	x4, x5
    4b08:	b.cc	4c3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3a4>  // b.lo, b.ul, b.last
    4b0c:	str	x8, [x4, #48]
    4b10:	ldr	x0, [x2, #32]
    4b14:	cbz	x0, 4b28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x290>
    4b18:	cmp	x5, x0
    4b1c:	b.hi	4c14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x37c>  // b.pmore
    4b20:	str	x0, [x4, #32]
    4b24:	str	x4, [x0, #48]
    4b28:	ldr	x0, [x2, #40]
    4b2c:	cbz	x0, 4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4b30:	cmp	x5, x0
    4b34:	b.hi	4c28 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x390>  // b.pmore
    4b38:	str	x0, [x4, #40]
    4b3c:	str	x4, [x0, #48]
    4b40:	b	4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4b44:	stp	x21, x22, [sp, #32]
    4b48:	stp	x23, x24, [sp, #48]
    4b4c:	stp	x25, x26, [sp, #64]
    4b50:	stp	x27, x28, [sp, #80]
    4b54:	bl	1ae0 <abort@plt>
    4b58:	ldr	x0, [x2, #40]
    4b5c:	add	x6, x2, #0x28
    4b60:	cbz	x0, 4b94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2fc>
    4b64:	mov	x7, x6
    4b68:	add	x6, x0, #0x28
    4b6c:	mov	x4, x0
    4b70:	ldr	x0, [x0, #40]
    4b74:	cbnz	x0, 4b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cc>
    4b78:	add	x6, x4, #0x20
    4b7c:	ldr	x0, [x4, #32]
    4b80:	cbnz	x0, 4b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cc>
    4b84:	cmp	x5, x7
    4b88:	b.hi	4ba4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x30c>  // b.pmore
    4b8c:	str	xzr, [x7]
    4b90:	b	4ab8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x220>
    4b94:	ldr	x0, [x2, #32]
    4b98:	cbz	x0, 4bb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x320>
    4b9c:	add	x6, x2, #0x20
    4ba0:	b	4b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2cc>
    4ba4:	stp	x21, x22, [sp, #32]
    4ba8:	stp	x23, x24, [sp, #48]
    4bac:	stp	x25, x26, [sp, #64]
    4bb0:	stp	x27, x28, [sp, #80]
    4bb4:	bl	1ae0 <abort@plt>
    4bb8:	mov	x4, x0
    4bbc:	b	4ab8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x220>
    4bc0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4bc4:	add	x0, x0, #0x198
    4bc8:	add	x5, x0, x5, lsl #3
    4bcc:	str	x4, [x5, #696]
    4bd0:	cbnz	x4, 4afc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x264>
    4bd4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4bd8:	add	x0, x0, #0x198
    4bdc:	ldr	x5, [x2, #56]
    4be0:	mov	w4, #0x1                   	// #1
    4be4:	lsl	w4, w4, w5
    4be8:	ldr	w5, [x0, #108]
    4bec:	bic	w4, w5, w4
    4bf0:	str	w4, [x0, #108]
    4bf4:	b	4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>
    4bf8:	str	x4, [x8, #32]
    4bfc:	b	4af8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x260>
    4c00:	stp	x21, x22, [sp, #32]
    4c04:	stp	x23, x24, [sp, #48]
    4c08:	stp	x25, x26, [sp, #64]
    4c0c:	stp	x27, x28, [sp, #80]
    4c10:	bl	1ae0 <abort@plt>
    4c14:	stp	x21, x22, [sp, #32]
    4c18:	stp	x23, x24, [sp, #48]
    4c1c:	stp	x25, x26, [sp, #64]
    4c20:	stp	x27, x28, [sp, #80]
    4c24:	bl	1ae0 <abort@plt>
    4c28:	stp	x21, x22, [sp, #32]
    4c2c:	stp	x23, x24, [sp, #48]
    4c30:	stp	x25, x26, [sp, #64]
    4c34:	stp	x27, x28, [sp, #80]
    4c38:	bl	1ae0 <abort@plt>
    4c3c:	stp	x21, x22, [sp, #32]
    4c40:	stp	x23, x24, [sp, #48]
    4c44:	stp	x25, x26, [sp, #64]
    4c48:	stp	x27, x28, [sp, #80]
    4c4c:	bl	1ae0 <abort@plt>
    4c50:	ldr	x0, [x3, #8]
    4c54:	and	x0, x0, #0x3
    4c58:	cmp	x0, #0x3
    4c5c:	b.ne	4974 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdc>  // b.any
    4c60:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4c64:	str	x1, [x0, #520]
    4c68:	ldr	x0, [x3, #8]
    4c6c:	and	x0, x0, #0xfffffffffffffffe
    4c70:	str	x0, [x3, #8]
    4c74:	orr	x0, x1, #0x1
    4c78:	str	x0, [x2, #8]
    4c7c:	str	x1, [x3]
    4c80:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    4c84:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4c88:	add	x0, x0, #0x198
    4c8c:	ldr	x3, [x0, #120]
    4c90:	add	x1, x1, x3
    4c94:	str	x1, [x0, #120]
    4c98:	str	x2, [x0, #144]
    4c9c:	add	x0, x0, #0x68
    4ca0:	orr	x3, x1, #0x1
    4ca4:	str	x3, [x2, #8]
    4ca8:	ldr	x0, [x0, #32]
    4cac:	cmp	x2, x0
    4cb0:	b.eq	4d1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x484>  // b.none
    4cb4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4cb8:	ldr	x0, [x0, #560]
    4cbc:	cmp	x1, x0
    4cc0:	b.ls	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>  // b.plast
    4cc4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4cc8:	ldr	x1, [x0, #552]
    4ccc:	cbz	x1, 53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    4cd0:	stp	x21, x22, [sp, #32]
    4cd4:	stp	x27, x28, [sp, #80]
    4cd8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4cdc:	ldr	x2, [x0, #528]
    4ce0:	cmp	x2, #0x48
    4ce4:	b.hi	4d30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x498>  // b.pmore
    4ce8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4cec:	ldr	x21, [x0, #1448]
    4cf0:	mov	x27, x20
    4cf4:	cbz	x21, 50f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x860>
    4cf8:	stp	x23, x24, [sp, #48]
    4cfc:	stp	x25, x26, [sp, #64]
    4d00:	adrp	x24, 18000 <memcpy@GLIBC_2.17>
    4d04:	add	x24, x24, #0x198
    4d08:	add	x24, x24, #0x400
    4d0c:	adrp	x25, 18000 <memcpy@GLIBC_2.17>
    4d10:	add	x25, x25, #0x198
    4d14:	mov	w28, #0x1                   	// #1
    4d18:	b	4fd8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x740>
    4d1c:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4d20:	add	x0, x0, #0x198
    4d24:	str	xzr, [x0, #136]
    4d28:	str	xzr, [x0, #112]
    4d2c:	b	4cb4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x41c>
    4d30:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    4d34:	add	x0, x0, #0x198
    4d38:	ldr	x3, [x0, #16]
    4d3c:	add	x27, x2, x3
    4d40:	sub	x27, x27, #0x49
    4d44:	udiv	x27, x27, x3
    4d48:	sub	x27, x27, #0x1
    4d4c:	mul	x27, x27, x3
    4d50:	add	x0, x0, #0x68
    4d54:	bl	26f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x18>
    4d58:	mov	x19, x0
    4d5c:	ldr	x2, [x0, #8]
    4d60:	cmp	x27, x2
    4d64:	b.hi	4ce8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x450>  // b.pmore
    4d68:	ldr	x0, [x0]
    4d6c:	add	x3, x0, x2
    4d70:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    4d74:	add	x1, x1, #0x198
    4d78:	add	x1, x1, #0x400
    4d7c:	b	4d88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4f0>
    4d80:	ldr	x1, [x1, #16]
    4d84:	cbz	x1, 55c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd2c>
    4d88:	cmp	x0, x1
    4d8c:	b.hi	4d80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e8>  // b.pmore
    4d90:	cmp	x1, x3
    4d94:	b.cs	4d80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e8>  // b.hs, b.nlast
    4d98:	b	4ce8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x450>
    4d9c:	str	xzr, [x25, #136]
    4da0:	str	xzr, [x25, #112]
    4da4:	mov	x1, x26
    4da8:	bl	2908 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x228>
    4dac:	cbnz	w0, 4e5c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c4>
    4db0:	add	x20, x20, x26
    4db4:	ldr	x0, [x25, #952]
    4db8:	sub	x26, x0, x26
    4dbc:	str	x26, [x25, #952]
    4dc0:	str	x21, [x24, #16]
    4dc4:	b	4fd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    4dc8:	bl	1ae0 <abort@plt>
    4dcc:	ldr	x1, [x19, #40]
    4dd0:	add	x3, x19, #0x28
    4dd4:	cbnz	x1, 4de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x550>
    4dd8:	ldr	x2, [x19, #32]
    4ddc:	cbz	x2, 5050 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b8>
    4de0:	add	x3, x19, #0x20
    4de4:	mov	x1, x2
    4de8:	mov	x4, x3
    4dec:	add	x3, x1, #0x28
    4df0:	mov	x2, x1
    4df4:	ldr	x1, [x1, #40]
    4df8:	cbnz	x1, 4de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x550>
    4dfc:	add	x3, x2, #0x20
    4e00:	ldr	x1, [x2, #32]
    4e04:	cbnz	x1, 4de8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x550>
    4e08:	ldr	x1, [x25, #128]
    4e0c:	cmp	x1, x4
    4e10:	b.hi	4e1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x584>  // b.pmore
    4e14:	str	xzr, [x4]
    4e18:	b	5050 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b8>
    4e1c:	bl	1ae0 <abort@plt>
    4e20:	add	x1, x25, x1, lsl #3
    4e24:	str	x2, [x1, #696]
    4e28:	cbnz	x2, 5088 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7f0>
    4e2c:	ldr	x1, [x19, #56]
    4e30:	lsl	w1, w28, w1
    4e34:	ldr	w3, [x25, #108]
    4e38:	bic	w1, w3, w1
    4e3c:	str	w1, [x25, #108]
    4e40:	b	4da4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    4e44:	str	x2, [x5, #32]
    4e48:	b	5084 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7ec>
    4e4c:	bl	1ae0 <abort@plt>
    4e50:	bl	1ae0 <abort@plt>
    4e54:	bl	1ae0 <abort@plt>
    4e58:	bl	1ae0 <abort@plt>
    4e5c:	lsr	x0, x22, #8
    4e60:	cmp	xzr, x22, lsr #8
    4e64:	b.eq	4ecc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x634>  // b.none
    4e68:	mov	x1, #0xffff                	// #65535
    4e6c:	cmp	x0, x1
    4e70:	b.hi	4f14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x67c>  // b.pmore
    4e74:	sub	w1, w0, #0x100
    4e78:	lsr	w1, w1, #16
    4e7c:	and	w1, w1, #0x8
    4e80:	lsl	w0, w0, w1
    4e84:	sub	w3, w0, #0x1, lsl #12
    4e88:	lsr	w3, w3, #16
    4e8c:	and	w3, w3, #0x4
    4e90:	lsl	w0, w0, w3
    4e94:	sub	w2, w0, #0x4, lsl #12
    4e98:	lsr	w2, w2, #16
    4e9c:	and	w2, w2, #0x2
    4ea0:	lsl	w0, w0, w2
    4ea4:	lsr	w0, w0, #15
    4ea8:	orr	w1, w1, w3
    4eac:	add	w1, w1, w2
    4eb0:	sub	w0, w0, w1
    4eb4:	add	w1, w0, #0x15
    4eb8:	lsr	x1, x22, x1
    4ebc:	and	x1, x1, #0x1
    4ec0:	add	w0, w0, #0xe
    4ec4:	lsl	w0, w0, #1
    4ec8:	add	x0, x1, x0
    4ecc:	str	x0, [x19, #56]
    4ed0:	str	xzr, [x19, #40]
    4ed4:	str	xzr, [x19, #32]
    4ed8:	ldr	w1, [x25, #108]
    4edc:	lsl	w3, w28, w0
    4ee0:	tst	w1, w3
    4ee4:	b.ne	4f1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x684>  // b.any
    4ee8:	add	x2, x25, #0x68
    4eec:	orr	w1, w1, w3
    4ef0:	str	w1, [x25, #108]
    4ef4:	add	x0, x0, #0x4a
    4ef8:	str	x19, [x2, x0, lsl #3]
    4efc:	add	x0, x2, x0, lsl #3
    4f00:	str	x0, [x19, #48]
    4f04:	str	x19, [x19, #24]
    4f08:	str	x19, [x19, #16]
    4f0c:	mov	x24, x23
    4f10:	b	4fd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    4f14:	mov	x0, #0x1f                  	// #31
    4f18:	b	4ecc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x634>
    4f1c:	add	x1, x25, x0, lsl #3
    4f20:	ldr	x2, [x1, #696]
    4f24:	lsr	x1, x0, #1
    4f28:	mov	w3, #0x39                  	// #57
    4f2c:	sub	w1, w3, w1
    4f30:	cmp	x0, #0x1f
    4f34:	csel	w1, w1, wzr, ne  // ne = any
    4f38:	lsl	x1, x22, x1
    4f3c:	b	4f44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6ac>
    4f40:	mov	x2, x0
    4f44:	ldr	x0, [x2, #8]
    4f48:	and	x0, x0, #0xfffffffffffffffc
    4f4c:	cmp	x22, x0
    4f50:	b.eq	4f9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x704>  // b.none
    4f54:	lsr	x3, x1, #63
    4f58:	lsl	x1, x1, #1
    4f5c:	add	x0, x3, #0x4
    4f60:	ldr	x0, [x2, x0, lsl #3]
    4f64:	cbnz	x0, 4f40 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6a8>
    4f68:	add	x0, x3, #0x4
    4f6c:	add	x0, x2, x0, lsl #3
    4f70:	ldr	x1, [x25, #128]
    4f74:	cmp	x1, x0
    4f78:	b.hi	4f98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x700>  // b.pmore
    4f7c:	add	x3, x3, #0x4
    4f80:	str	x19, [x2, x3, lsl #3]
    4f84:	str	x2, [x19, #48]
    4f88:	str	x19, [x19, #24]
    4f8c:	str	x19, [x19, #16]
    4f90:	mov	x24, x23
    4f94:	b	4fd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    4f98:	bl	1ae0 <abort@plt>
    4f9c:	ldr	x0, [x2, #16]
    4fa0:	ldr	x1, [x25, #128]
    4fa4:	cmp	x0, x1
    4fa8:	ccmp	x2, x1, #0x0, cs  // cs = hs, nlast
    4fac:	b.cc	4fcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x734>  // b.lo, b.ul, b.last
    4fb0:	str	x19, [x0, #24]
    4fb4:	str	x19, [x2, #16]
    4fb8:	str	x0, [x19, #16]
    4fbc:	str	x2, [x19, #24]
    4fc0:	str	xzr, [x19, #48]
    4fc4:	mov	x24, x23
    4fc8:	b	4fd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    4fcc:	bl	1ae0 <abort@plt>
    4fd0:	mov	x24, x23
    4fd4:	cbz	x21, 50d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x83c>
    4fd8:	ldr	x0, [x21]
    4fdc:	mov	x23, x21
    4fe0:	ldr	x21, [x21, #16]
    4fe4:	neg	x1, x0
    4fe8:	and	x1, x1, #0x7
    4fec:	ands	x19, x0, #0x7
    4ff0:	csel	x19, x1, x19, ne  // ne = any
    4ff4:	add	x19, x0, x19
    4ff8:	ldr	x22, [x19, #8]
    4ffc:	tbnz	w22, #1, 4fd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x738>
    5000:	ldr	x26, [x23, #8]
    5004:	and	x22, x22, #0xfffffffffffffffc
    5008:	add	x2, x19, x22
    500c:	sub	x1, x26, #0x48
    5010:	add	x1, x0, x1
    5014:	cmp	x2, x1
    5018:	b.cc	50cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x834>  // b.lo, b.ul, b.last
    501c:	ldr	x1, [x25, #136]
    5020:	cmp	x19, x1
    5024:	b.eq	4d9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x504>  // b.none
    5028:	ldr	x5, [x19, #48]
    502c:	ldr	x2, [x19, #24]
    5030:	cmp	x19, x2
    5034:	b.eq	4dcc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x534>  // b.none
    5038:	ldr	x1, [x19, #16]
    503c:	ldr	x3, [x25, #128]
    5040:	cmp	x1, x3
    5044:	b.cc	4dc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x530>  // b.lo, b.ul, b.last
    5048:	str	x2, [x1, #24]
    504c:	str	x1, [x2, #16]
    5050:	cbz	x5, 4da4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    5054:	ldr	x1, [x19, #56]
    5058:	add	x3, x25, x1, lsl #3
    505c:	ldr	x3, [x3, #696]
    5060:	cmp	x19, x3
    5064:	b.eq	4e20 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x588>  // b.none
    5068:	ldr	x1, [x25, #128]
    506c:	cmp	x5, x1
    5070:	b.cc	4e4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5b4>  // b.lo, b.ul, b.last
    5074:	ldr	x1, [x5, #32]
    5078:	cmp	x19, x1
    507c:	b.eq	4e44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5ac>  // b.none
    5080:	str	x2, [x5, #40]
    5084:	cbz	x2, 4da4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    5088:	ldr	x3, [x25, #128]
    508c:	cmp	x2, x3
    5090:	b.cc	4e58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5c0>  // b.lo, b.ul, b.last
    5094:	str	x5, [x2, #48]
    5098:	ldr	x1, [x19, #32]
    509c:	cbz	x1, 50b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x818>
    50a0:	cmp	x3, x1
    50a4:	b.hi	4e50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5b8>  // b.pmore
    50a8:	str	x1, [x2, #32]
    50ac:	str	x2, [x1, #48]
    50b0:	ldr	x1, [x19, #40]
    50b4:	cbz	x1, 4da4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    50b8:	cmp	x3, x1
    50bc:	b.hi	4e54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x5bc>  // b.pmore
    50c0:	str	x1, [x2, #40]
    50c4:	str	x2, [x1, #48]
    50c8:	b	4da4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x50c>
    50cc:	mov	x24, x23
    50d0:	b	4fd4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x73c>
    50d4:	cmn	x27, x20
    50d8:	b.eq	50f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x858>  // b.none
    50dc:	ldp	x21, x22, [sp, #32]
    50e0:	ldp	x23, x24, [sp, #48]
    50e4:	ldp	x25, x26, [sp, #64]
    50e8:	ldp	x27, x28, [sp, #80]
    50ec:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    50f0:	ldp	x23, x24, [sp, #48]
    50f4:	ldp	x25, x26, [sp, #64]
    50f8:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    50fc:	mov	x1, #0xffffffffffffffff    	// #-1
    5100:	str	x1, [x0, #560]
    5104:	ldp	x21, x22, [sp, #32]
    5108:	ldp	x27, x28, [sp, #80]
    510c:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    5110:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    5114:	add	x0, x0, #0x198
    5118:	ldr	x3, [x0, #112]
    511c:	add	x1, x1, x3
    5120:	str	x1, [x0, #112]
    5124:	str	x2, [x0, #136]
    5128:	orr	x0, x1, #0x1
    512c:	str	x0, [x2, #8]
    5130:	str	x1, [x2, x1]
    5134:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    5138:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    513c:	add	x3, x3, #0x198
    5140:	mov	w0, #0x1                   	// #1
    5144:	lsl	w0, w0, w4
    5148:	ldr	w4, [x3, #104]
    514c:	bic	w0, w4, w0
    5150:	str	w0, [x3, #104]
    5154:	b	49f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    5158:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    515c:	ldr	x3, [x3, #536]
    5160:	cmp	x5, x3
    5164:	b.cs	49e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x150>  // b.hs, b.nlast
    5168:	stp	x21, x22, [sp, #32]
    516c:	stp	x23, x24, [sp, #48]
    5170:	stp	x25, x26, [sp, #64]
    5174:	stp	x27, x28, [sp, #80]
    5178:	bl	1ae0 <abort@plt>
    517c:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    5180:	ldr	x3, [x3, #536]
    5184:	cmp	x0, x3
    5188:	b.cs	49f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x158>  // b.hs, b.nlast
    518c:	b	5168 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8d0>
    5190:	ldr	x7, [x3, #48]
    5194:	ldr	x4, [x3, #24]
    5198:	cmp	x3, x4
    519c:	b.eq	525c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c4>  // b.none
    51a0:	ldr	x0, [x3, #16]
    51a4:	adrp	x5, 18000 <memcpy@GLIBC_2.17>
    51a8:	ldr	x5, [x5, #536]
    51ac:	cmp	x0, x5
    51b0:	b.cc	5248 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b0>  // b.lo, b.ul, b.last
    51b4:	str	x4, [x0, #24]
    51b8:	str	x0, [x4, #16]
    51bc:	cbz	x7, 49f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    51c0:	ldr	x5, [x3, #56]
    51c4:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    51c8:	add	x0, x0, #0x198
    51cc:	add	x0, x0, x5, lsl #3
    51d0:	ldr	x0, [x0, #696]
    51d4:	cmp	x3, x0
    51d8:	b.eq	52cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa34>  // b.none
    51dc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    51e0:	ldr	x0, [x0, #536]
    51e4:	cmp	x7, x0
    51e8:	b.cc	530c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa74>  // b.lo, b.ul, b.last
    51ec:	ldr	x0, [x7, #32]
    51f0:	cmp	x3, x0
    51f4:	b.eq	5304 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa6c>  // b.none
    51f8:	str	x4, [x7, #40]
    51fc:	cbz	x4, 49f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    5200:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    5204:	ldr	x5, [x0, #536]
    5208:	cmp	x4, x5
    520c:	b.cc	5348 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xab0>  // b.lo, b.ul, b.last
    5210:	str	x7, [x4, #48]
    5214:	ldr	x0, [x3, #32]
    5218:	cbz	x0, 522c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x994>
    521c:	cmp	x5, x0
    5220:	b.hi	5320 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa88>  // b.pmore
    5224:	str	x0, [x4, #32]
    5228:	str	x4, [x0, #48]
    522c:	ldr	x0, [x3, #40]
    5230:	cbz	x0, 49f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    5234:	cmp	x5, x0
    5238:	b.hi	5334 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa9c>  // b.pmore
    523c:	str	x0, [x4, #40]
    5240:	str	x4, [x0, #48]
    5244:	b	49f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    5248:	stp	x21, x22, [sp, #32]
    524c:	stp	x23, x24, [sp, #48]
    5250:	stp	x25, x26, [sp, #64]
    5254:	stp	x27, x28, [sp, #80]
    5258:	bl	1ae0 <abort@plt>
    525c:	ldr	x0, [x3, #40]
    5260:	add	x5, x3, #0x28
    5264:	cbz	x0, 52a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa08>
    5268:	mov	x6, x5
    526c:	add	x5, x0, #0x28
    5270:	mov	x4, x0
    5274:	ldr	x0, [x0, #40]
    5278:	cbnz	x0, 5268 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9d0>
    527c:	add	x5, x4, #0x20
    5280:	ldr	x0, [x4, #32]
    5284:	cbnz	x0, 5268 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9d0>
    5288:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    528c:	ldr	x0, [x0, #536]
    5290:	cmp	x0, x6
    5294:	b.hi	52b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa18>  // b.pmore
    5298:	str	xzr, [x6]
    529c:	b	51bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    52a0:	ldr	x0, [x3, #32]
    52a4:	cbz	x0, 52c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa2c>
    52a8:	add	x5, x3, #0x20
    52ac:	b	5268 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9d0>
    52b0:	stp	x21, x22, [sp, #32]
    52b4:	stp	x23, x24, [sp, #48]
    52b8:	stp	x25, x26, [sp, #64]
    52bc:	stp	x27, x28, [sp, #80]
    52c0:	bl	1ae0 <abort@plt>
    52c4:	mov	x4, x0
    52c8:	b	51bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x924>
    52cc:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    52d0:	add	x0, x0, #0x198
    52d4:	add	x5, x0, x5, lsl #3
    52d8:	str	x4, [x5, #696]
    52dc:	cbnz	x4, 5200 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x968>
    52e0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    52e4:	add	x0, x0, #0x198
    52e8:	ldr	x4, [x3, #56]
    52ec:	mov	w3, #0x1                   	// #1
    52f0:	lsl	w3, w3, w4
    52f4:	ldr	w4, [x0, #108]
    52f8:	bic	w3, w4, w3
    52fc:	str	w3, [x0, #108]
    5300:	b	49f8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x160>
    5304:	str	x4, [x7, #32]
    5308:	b	51fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    530c:	stp	x21, x22, [sp, #32]
    5310:	stp	x23, x24, [sp, #48]
    5314:	stp	x25, x26, [sp, #64]
    5318:	stp	x27, x28, [sp, #80]
    531c:	bl	1ae0 <abort@plt>
    5320:	stp	x21, x22, [sp, #32]
    5324:	stp	x23, x24, [sp, #48]
    5328:	stp	x25, x26, [sp, #64]
    532c:	stp	x27, x28, [sp, #80]
    5330:	bl	1ae0 <abort@plt>
    5334:	stp	x21, x22, [sp, #32]
    5338:	stp	x23, x24, [sp, #48]
    533c:	stp	x25, x26, [sp, #64]
    5340:	stp	x27, x28, [sp, #80]
    5344:	bl	1ae0 <abort@plt>
    5348:	stp	x21, x22, [sp, #32]
    534c:	stp	x23, x24, [sp, #48]
    5350:	stp	x25, x26, [sp, #64]
    5354:	stp	x27, x28, [sp, #80]
    5358:	bl	1ae0 <abort@plt>
    535c:	and	x0, x0, #0xfffffffffffffffe
    5360:	str	x0, [x3, #8]
    5364:	orr	x0, x1, #0x1
    5368:	str	x0, [x2, #8]
    536c:	str	x1, [x2, x1]
    5370:	lsr	x3, x1, #3
    5374:	cmp	x1, #0xff
    5378:	b.hi	5400 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb68>  // b.pmore
    537c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    5380:	add	x1, x1, #0x198
    5384:	add	x0, x1, x3, lsl #4
    5388:	add	x0, x0, #0xa8
    538c:	ldr	w4, [x1, #104]
    5390:	mov	w1, #0x1                   	// #1
    5394:	lsl	w1, w1, w3
    5398:	tst	w4, w1
    539c:	b.ne	53d8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb40>  // b.any
    53a0:	orr	w1, w4, w1
    53a4:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    53a8:	str	w1, [x3, #512]
    53ac:	mov	x1, x0
    53b0:	str	x2, [x0, #16]
    53b4:	str	x2, [x1, #24]
    53b8:	str	x1, [x2, #16]
    53bc:	str	x0, [x2, #24]
    53c0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    53c4:	ldr	w0, [x0, #1376]
    53c8:	tbnz	w0, #1, 55b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd18>
    53cc:	ldp	x19, x20, [sp, #16]
    53d0:	ldp	x29, x30, [sp], #96
    53d4:	ret
    53d8:	ldr	x1, [x0, #16]
    53dc:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    53e0:	ldr	x3, [x3, #536]
    53e4:	cmp	x1, x3
    53e8:	b.cs	53b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb18>  // b.hs, b.nlast
    53ec:	stp	x21, x22, [sp, #32]
    53f0:	stp	x23, x24, [sp, #48]
    53f4:	stp	x25, x26, [sp, #64]
    53f8:	stp	x27, x28, [sp, #80]
    53fc:	bl	1ae0 <abort@plt>
    5400:	lsr	x3, x1, #8
    5404:	mov	x0, #0x1f                  	// #31
    5408:	mov	x4, #0xffff                	// #65535
    540c:	cmp	x4, x1, lsr #8
    5410:	b.cc	546c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbd4>  // b.lo, b.ul, b.last
    5414:	sub	w0, w3, #0x100
    5418:	lsr	w0, w0, #16
    541c:	and	w0, w0, #0x8
    5420:	lsl	w3, w3, w0
    5424:	sub	w5, w3, #0x1, lsl #12
    5428:	lsr	w5, w5, #16
    542c:	and	w5, w5, #0x4
    5430:	lsl	w3, w3, w5
    5434:	sub	w4, w3, #0x4, lsl #12
    5438:	lsr	w4, w4, #16
    543c:	and	w4, w4, #0x2
    5440:	lsl	w3, w3, w4
    5444:	lsr	w3, w3, #15
    5448:	orr	w0, w0, w5
    544c:	add	w0, w0, w4
    5450:	sub	w3, w3, w0
    5454:	add	w0, w3, #0x15
    5458:	lsr	x0, x1, x0
    545c:	and	x0, x0, #0x1
    5460:	add	w3, w3, #0xe
    5464:	lsl	w3, w3, #1
    5468:	add	x0, x0, x3
    546c:	str	x0, [x2, #56]
    5470:	str	xzr, [x2, #40]
    5474:	str	xzr, [x2, #32]
    5478:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    547c:	ldr	w4, [x3, #516]
    5480:	mov	w3, #0x1                   	// #1
    5484:	lsl	w3, w3, w0
    5488:	tst	w4, w3
    548c:	b.eq	54bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>  // b.none
    5490:	adrp	x3, 18000 <memcpy@GLIBC_2.17>
    5494:	add	x3, x3, #0x198
    5498:	add	x3, x3, x0, lsl #3
    549c:	ldr	x4, [x3, #696]
    54a0:	lsr	x5, x0, #1
    54a4:	mov	w3, #0x39                  	// #57
    54a8:	sub	w3, w3, w5
    54ac:	cmp	x0, #0x1f
    54b0:	csel	w3, w3, wzr, ne  // ne = any
    54b4:	lsl	x3, x1, x3
    54b8:	b	54f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc58>
    54bc:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    54c0:	add	x1, x1, #0x198
    54c4:	orr	w3, w4, w3
    54c8:	str	w3, [x1, #108]
    54cc:	add	x1, x1, #0x68
    54d0:	add	x0, x0, #0x4a
    54d4:	str	x2, [x1, x0, lsl #3]
    54d8:	add	x0, x1, x0, lsl #3
    54dc:	str	x0, [x2, #48]
    54e0:	str	x2, [x2, #24]
    54e4:	str	x2, [x2, #16]
    54e8:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    54ec:	mov	x4, x0
    54f0:	ldr	x0, [x4, #8]
    54f4:	and	x0, x0, #0xfffffffffffffffc
    54f8:	cmp	x1, x0
    54fc:	b.eq	5558 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcc0>  // b.none
    5500:	lsr	x5, x3, #63
    5504:	lsl	x3, x3, #1
    5508:	add	x0, x5, #0x4
    550c:	ldr	x0, [x4, x0, lsl #3]
    5510:	cbnz	x0, 54ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc54>
    5514:	add	x0, x5, #0x4
    5518:	add	x0, x4, x0, lsl #3
    551c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    5520:	ldr	x1, [x1, #536]
    5524:	cmp	x1, x0
    5528:	b.hi	5544 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcac>  // b.pmore
    552c:	add	x5, x5, #0x4
    5530:	str	x2, [x4, x5, lsl #3]
    5534:	str	x4, [x2, #48]
    5538:	str	x2, [x2, #24]
    553c:	str	x2, [x2, #16]
    5540:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    5544:	stp	x21, x22, [sp, #32]
    5548:	stp	x23, x24, [sp, #48]
    554c:	stp	x25, x26, [sp, #64]
    5550:	stp	x27, x28, [sp, #80]
    5554:	bl	1ae0 <abort@plt>
    5558:	ldr	x0, [x4, #16]
    555c:	adrp	x1, 18000 <memcpy@GLIBC_2.17>
    5560:	ldr	x1, [x1, #536]
    5564:	cmp	x0, x1
    5568:	ccmp	x4, x1, #0x0, cs  // cs = hs, nlast
    556c:	b.cc	5588 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcf0>  // b.lo, b.ul, b.last
    5570:	str	x2, [x0, #24]
    5574:	str	x2, [x4, #16]
    5578:	str	x0, [x2, #16]
    557c:	str	x4, [x2, #24]
    5580:	str	xzr, [x2, #48]
    5584:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    5588:	stp	x21, x22, [sp, #32]
    558c:	stp	x23, x24, [sp, #48]
    5590:	stp	x25, x26, [sp, #64]
    5594:	stp	x27, x28, [sp, #80]
    5598:	bl	1ae0 <abort@plt>
    559c:	stp	x21, x22, [sp, #32]
    55a0:	stp	x23, x24, [sp, #48]
    55a4:	stp	x25, x26, [sp, #64]
    55a8:	stp	x27, x28, [sp, #80]
    55ac:	bl	1ae0 <abort@plt>
    55b0:	adrp	x0, 18000 <memcpy@GLIBC_2.17>
    55b4:	add	x0, x0, #0x198
    55b8:	add	x0, x0, #0x3d0
    55bc:	bl	1c20 <pthread_mutex_unlock@plt>
    55c0:	b	53cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    55c4:	sub	x2, x2, x27
    55c8:	mov	x1, x27
    55cc:	add	x0, x0, x2
    55d0:	bl	2908 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x228>
    55d4:	cbnz	w0, 4ce8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x450>
    55d8:	cbz	x27, 4ce8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x450>
    55dc:	ldr	x0, [x19, #8]
    55e0:	sub	x0, x0, x27
    55e4:	str	x0, [x19, #8]
    55e8:	adrp	x19, 18000 <memcpy@GLIBC_2.17>
    55ec:	add	x19, x19, #0x198
    55f0:	ldr	x0, [x19, #952]
    55f4:	sub	x0, x0, x27
    55f8:	str	x0, [x19, #952]
    55fc:	ldr	x2, [x19, #120]
    5600:	sub	x2, x2, x27
    5604:	ldr	x1, [x19, #144]
    5608:	add	x19, x19, #0x68
    560c:	mov	x0, x19
    5610:	bl	2728 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48>
    5614:	ldr	x21, [x19, #936]
    5618:	cbnz	x21, 4cf8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x460>
    561c:	ldp	x21, x22, [sp, #32]
    5620:	ldp	x27, x28, [sp, #80]
    5624:	b	53c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb28>
    5628:	ret
    562c:	ldr	x1, [x0, #16]
    5630:	cbz	x1, 568c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf4>
    5634:	ldr	x2, [x1]
    5638:	cbz	x2, 5694 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdfc>
    563c:	stp	x29, x30, [sp, #-32]!
    5640:	mov	x29, sp
    5644:	str	x19, [sp, #16]
    5648:	add	x19, x1, #0x8
    564c:	ldrh	w1, [x2, #10]
    5650:	and	w0, w1, #0xfffffffd
    5654:	and	w0, w0, #0xffff
    5658:	cmp	w0, #0xd
    565c:	b.ne	5678 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde0>  // b.any
    5660:	mov	x0, x2
    5664:	bl	562c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd94>
    5668:	tbnz	w0, #31, 5680 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xde8>
    566c:	ldr	x19, [sp, #16]
    5670:	ldp	x29, x30, [sp], #32
    5674:	ret
    5678:	mov	w0, w1
    567c:	b	566c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd4>
    5680:	ldr	x2, [x19], #8
    5684:	cbnz	x2, 564c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdb4>
    5688:	b	566c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd4>
    568c:	mov	w0, #0xffffffff            	// #-1
    5690:	ret
    5694:	mov	w0, #0xffffffff            	// #-1
    5698:	ret
    569c:	stp	x29, x30, [sp, #-32]!
    56a0:	mov	x29, sp
    56a4:	stp	x19, x20, [sp, #16]
    56a8:	ldr	x19, [x0, #16]
    56ac:	mov	w0, #0x1                   	// #1
    56b0:	cbz	x19, 5704 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe6c>
    56b4:	mov	w20, w1
    56b8:	ldr	x0, [x19]
    56bc:	cbz	x0, 5710 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe78>
    56c0:	add	x19, x19, #0x8
    56c4:	b	56dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe44>
    56c8:	mov	w1, w20
    56cc:	bl	569c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe04>
    56d0:	cbz	w0, 5704 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe6c>
    56d4:	ldr	x0, [x19], #8
    56d8:	cbz	x0, 5700 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe68>
    56dc:	ldrh	w3, [x0, #10]
    56e0:	and	w2, w3, #0xfffffffd
    56e4:	and	w2, w2, #0xffff
    56e8:	cmp	w2, #0xd
    56ec:	b.eq	56c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe30>  // b.none
    56f0:	cmp	w3, w20
    56f4:	b.eq	56d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe3c>  // b.none
    56f8:	mov	w0, #0x0                   	// #0
    56fc:	b	5704 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe6c>
    5700:	mov	w0, #0x1                   	// #1
    5704:	ldp	x19, x20, [sp, #16]
    5708:	ldp	x29, x30, [sp], #32
    570c:	ret
    5710:	mov	w0, #0x1                   	// #1
    5714:	b	5704 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe6c>
    5718:	stp	x29, x30, [sp, #-64]!
    571c:	mov	x29, sp
    5720:	mov	x2, x0
    5724:	ldrh	w1, [x0, #10]
    5728:	cmp	w1, #0xd
    572c:	b.eq	57b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf18>  // b.none
    5730:	b.hi	5774 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xedc>  // b.pmore
    5734:	sub	w2, w1, #0x2
    5738:	and	w2, w2, #0xffff
    573c:	mov	w0, #0x0                   	// #0
    5740:	cmp	w2, #0x2
    5744:	b.hi	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>  // b.pmore
    5748:	stp	x19, x20, [sp, #16]
    574c:	str	x23, [sp, #48]
    5750:	mov	w19, w1
    5754:	mov	x23, #0x1                   	// #1
    5758:	mov	w1, #0x4                   	// #4
    575c:	sub	w1, w1, w23
    5760:	add	w0, w1, w19, lsl #2
    5764:	ldp	x19, x20, [sp, #16]
    5768:	ldr	x23, [sp, #48]
    576c:	ldp	x29, x30, [sp], #64
    5770:	ret
    5774:	mov	w0, #0x0                   	// #0
    5778:	cmp	w1, #0xf
    577c:	b.ne	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>  // b.any
    5780:	ldr	x0, [x2, #16]
    5784:	ldr	x0, [x0]
    5788:	ldrh	w1, [x0, #10]
    578c:	sub	w2, w1, #0x2
    5790:	mov	w0, #0x0                   	// #0
    5794:	cmp	w2, #0x2
    5798:	b.hi	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>  // b.pmore
    579c:	stp	x19, x20, [sp, #16]
    57a0:	str	x23, [sp, #48]
    57a4:	mov	w19, w1
    57a8:	mov	x23, #0x2                   	// #2
    57ac:	b	5758 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xec0>
    57b0:	str	x23, [sp, #48]
    57b4:	ldr	x23, [x0]
    57b8:	sub	x1, x23, #0x4
    57bc:	mov	w0, #0x0                   	// #0
    57c0:	cmp	x1, #0x3c
    57c4:	b.hi	58e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x104c>  // b.pmore
    57c8:	stp	x19, x20, [sp, #16]
    57cc:	stp	x21, x22, [sp, #32]
    57d0:	ldr	x22, [x2, #16]
    57d4:	ldr	x20, [x22]
    57d8:	ldrh	w1, [x20, #10]
    57dc:	and	w2, w1, #0xfffffffd
    57e0:	and	w2, w2, #0xffff
    57e4:	mov	w19, w1
    57e8:	cmp	w2, #0xd
    57ec:	b.ne	5804 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf6c>  // b.any
    57f0:	mov	x21, x22
    57f4:	ldr	x0, [x21], #8
    57f8:	bl	562c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd94>
    57fc:	mov	w19, w0
    5800:	tbnz	w0, #31, 57f4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf5c>
    5804:	cmp	w19, #0x3
    5808:	b.eq	5840 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfa8>  // b.none
    580c:	cmp	w19, #0x4
    5810:	b.eq	586c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfd4>  // b.none
    5814:	mov	w0, #0x0                   	// #0
    5818:	cmp	w19, #0x2
    581c:	b.eq	5830 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf98>  // b.none
    5820:	ldp	x19, x20, [sp, #16]
    5824:	ldp	x21, x22, [sp, #32]
    5828:	ldr	x23, [sp, #48]
    582c:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    5830:	tst	x23, #0x3
    5834:	b.ne	58ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1054>  // b.any
    5838:	lsr	x23, x23, #2
    583c:	b	5850 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfb8>
    5840:	mov	w0, #0x0                   	// #0
    5844:	tst	x23, #0x7
    5848:	b.ne	58fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1064>  // b.any
    584c:	lsr	x23, x23, #3
    5850:	mov	w0, #0x0                   	// #0
    5854:	cmp	x23, #0x4
    5858:	b.ls	587c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfe4>  // b.plast
    585c:	ldp	x19, x20, [sp, #16]
    5860:	ldp	x21, x22, [sp, #32]
    5864:	ldr	x23, [sp, #48]
    5868:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    586c:	mov	w0, #0x0                   	// #0
    5870:	tst	x23, #0xf
    5874:	b.ne	590c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1074>  // b.any
    5878:	lsr	x23, x23, #4
    587c:	add	x22, x22, #0x8
    5880:	b	589c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1004>
    5884:	mov	w1, w19
    5888:	mov	x0, x20
    588c:	bl	569c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe04>
    5890:	cbz	w0, 58cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1034>
    5894:	ldr	x20, [x22], #8
    5898:	cbz	x20, 58dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1044>
    589c:	ldrh	w1, [x20, #10]
    58a0:	and	w0, w1, #0xfffffffd
    58a4:	and	w0, w0, #0xffff
    58a8:	cmp	w0, #0xd
    58ac:	b.eq	5884 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfec>  // b.none
    58b0:	cmp	w19, w1
    58b4:	b.eq	5894 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xffc>  // b.none
    58b8:	mov	w0, #0x0                   	// #0
    58bc:	ldp	x19, x20, [sp, #16]
    58c0:	ldp	x21, x22, [sp, #32]
    58c4:	ldr	x23, [sp, #48]
    58c8:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    58cc:	ldp	x19, x20, [sp, #16]
    58d0:	ldp	x21, x22, [sp, #32]
    58d4:	ldr	x23, [sp, #48]
    58d8:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    58dc:	ldp	x21, x22, [sp, #32]
    58e0:	b	5758 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xec0>
    58e4:	ldr	x23, [sp, #48]
    58e8:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    58ec:	ldp	x19, x20, [sp, #16]
    58f0:	ldp	x21, x22, [sp, #32]
    58f4:	ldr	x23, [sp, #48]
    58f8:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    58fc:	ldp	x19, x20, [sp, #16]
    5900:	ldp	x21, x22, [sp, #32]
    5904:	ldr	x23, [sp, #48]
    5908:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    590c:	ldp	x19, x20, [sp, #16]
    5910:	ldp	x21, x22, [sp, #32]
    5914:	ldr	x23, [sp, #48]
    5918:	b	576c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xed4>
    591c:	stp	x29, x30, [sp, #-208]!
    5920:	mov	x29, sp
    5924:	stp	x19, x20, [sp, #16]
    5928:	stp	x21, x22, [sp, #32]
    592c:	stp	x23, x24, [sp, #48]
    5930:	stp	x25, x26, [sp, #64]
    5934:	stp	x27, x28, [sp, #80]
    5938:	mov	x22, x0
    593c:	str	x1, [x29, #128]
    5940:	str	x2, [x29, #136]
    5944:	mov	x21, x3
    5948:	str	x4, [x29, #120]
    594c:	ldr	w1, [x0, #28]
    5950:	str	w1, [x29, #152]
    5954:	ldr	x0, [x0, #16]
    5958:	ldr	x0, [x0]
    595c:	str	x0, [x29, #104]
    5960:	ldr	w0, [x22, #24]
    5964:	tbz	w1, #5, 599c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1104>
    5968:	cbz	x2, 59e4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x114c>
    596c:	add	x1, x0, #0xef
    5970:	and	x1, x1, #0x1fffffff0
    5974:	sub	sp, sp, x1
    5978:	mov	x1, sp
    597c:	str	x1, [x29, #184]
    5980:	add	x1, x1, #0xc0
    5984:	str	x1, [x29, #160]
    5988:	add	x0, x1, x0
    598c:	str	x0, [x29, #112]
    5990:	ldr	x0, [x29, #136]
    5994:	str	x0, [x29, #144]
    5998:	b	5a1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1184>
    599c:	ldr	x1, [x29, #136]
    59a0:	cbz	x1, 59d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x113c>
    59a4:	ldr	x1, [x29, #152]
    59a8:	tbz	w1, #6, 596c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    59ac:	add	x1, x0, #0xff
    59b0:	and	x1, x1, #0x1fffffff0
    59b4:	sub	sp, sp, x1
    59b8:	mov	x1, sp
    59bc:	str	x1, [x29, #184]
    59c0:	add	x1, x1, #0xc0
    59c4:	str	x1, [x29, #160]
    59c8:	add	x0, x1, x0
    59cc:	str	x0, [x29, #112]
    59d0:	b	5a14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x117c>
    59d4:	ldr	w1, [x29, #152]
    59d8:	and	w1, w1, #0x80
    59dc:	str	w1, [x29, #152]
    59e0:	b	596c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10d4>
    59e4:	ldr	x2, [x29, #104]
    59e8:	add	x1, x2, x0
    59ec:	add	x1, x1, #0xef
    59f0:	and	x1, x1, #0xfffffffffffffff0
    59f4:	sub	sp, sp, x1
    59f8:	mov	x1, sp
    59fc:	str	x1, [x29, #184]
    5a00:	add	x1, x1, #0xc0
    5a04:	str	x1, [x29, #160]
    5a08:	add	x0, x1, x0
    5a0c:	str	x0, [x29, #112]
    5a10:	cbz	x2, 5a58 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11c0>
    5a14:	add	x0, x0, #0x20
    5a18:	str	x0, [x29, #144]
    5a1c:	ldr	w0, [x22, #4]
    5a20:	cmp	w0, #0x0
    5a24:	b.le	5d50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14b8>
    5a28:	sub	w0, w0, #0x1
    5a2c:	add	x0, x0, #0x1
    5a30:	lsl	x0, x0, #3
    5a34:	str	x0, [x29, #200]
    5a38:	mov	x19, #0x0                   	// #0
    5a3c:	str	xzr, [x29, #176]
    5a40:	str	wzr, [x29, #172]
    5a44:	mov	w25, #0x0                   	// #0
    5a48:	mov	x28, #0x1                   	// #1
    5a4c:	mov	x27, #0x5fe2                	// #24546
    5a50:	mov	x26, #0xa01c                	// #40988
    5a54:	b	5ac0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1228>
    5a58:	ldr	x0, [x29, #136]
    5a5c:	str	x0, [x29, #144]
    5a60:	b	5a1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1184>
    5a64:	cmp	w0, #0x8
    5a68:	b.eq	5b44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12ac>  // b.none
    5a6c:	b.hi	5b00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1268>  // b.pmore
    5a70:	cmp	w0, #0x6
    5a74:	b.eq	5b3c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12a4>  // b.none
    5a78:	b.ls	5a84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11ec>  // b.plast
    5a7c:	ldrh	w1, [x24]
    5a80:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5a84:	cmp	w0, #0x1
    5a88:	b.eq	5b4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12b4>  // b.none
    5a8c:	cmp	w0, #0x5
    5a90:	b.ne	5b60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12c8>  // b.any
    5a94:	ldrb	w1, [x24]
    5a98:	cmp	w25, #0x7
    5a9c:	b.hi	5b64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12cc>  // b.pmore
    5aa0:	ldr	x0, [x29, #184]
    5aa4:	add	x0, x0, w25, uxtw #3
    5aa8:	str	x1, [x0, #128]
    5aac:	add	w25, w25, #0x1
    5ab0:	add	x19, x19, #0x8
    5ab4:	ldr	x0, [x29, #200]
    5ab8:	cmp	x19, x0
    5abc:	b.eq	5d50 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.none
    5ac0:	ldr	x0, [x22, #8]
    5ac4:	ldr	x20, [x0, x19]
    5ac8:	ldr	x23, [x20]
    5acc:	add	x0, x21, x19
    5ad0:	str	x0, [x29, #192]
    5ad4:	ldr	x24, [x21, x19]
    5ad8:	ldrh	w0, [x20, #10]
    5adc:	cmp	w0, #0xf
    5ae0:	b.hi	5afc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1264>  // b.pmore
    5ae4:	lsl	x1, x28, x0
    5ae8:	tst	x1, x27
    5aec:	b.ne	5a64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x11cc>  // b.any
    5af0:	tst	x1, x26
    5af4:	b.ne	5ba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1308>  // b.any
    5af8:	cbz	w0, 5ab0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1218>
    5afc:	bl	1ae0 <abort@plt>
    5b00:	cmp	w0, #0xa
    5b04:	b.eq	5b4c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12b4>  // b.none
    5b08:	b.ls	5b1c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1284>  // b.plast
    5b0c:	cmp	w0, #0xc
    5b10:	b.hi	5b2c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1294>  // b.pmore
    5b14:	ldr	x1, [x24]
    5b18:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5b1c:	cmp	w0, #0x9
    5b20:	b.ne	5b60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12c8>  // b.any
    5b24:	ldr	w1, [x24]
    5b28:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5b2c:	cmp	w0, #0xe
    5b30:	b.ne	5b60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12c8>  // b.any
    5b34:	ldr	x1, [x24]
    5b38:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5b3c:	ldrsb	x1, [x24]
    5b40:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5b44:	ldrsh	x1, [x24]
    5b48:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5b4c:	ldrsw	x1, [x24]
    5b50:	b	5a98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1200>
    5b54:	ldr	x24, [x29, #192]
    5b58:	mov	x23, #0x8                   	// #8
    5b5c:	b	5b34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x129c>
    5b60:	bl	1ae0 <abort@plt>
    5b64:	ldrh	w0, [x20, #8]
    5b68:	cmp	x0, #0x8
    5b6c:	mov	x2, #0x8                   	// #8
    5b70:	csel	x0, x0, x2, cs  // cs = hs, nlast
    5b74:	sub	x0, x0, #0x1
    5b78:	ldr	x2, [x29, #176]
    5b7c:	sub	x2, x2, #0x1
    5b80:	orr	x0, x0, x2
    5b84:	add	x0, x0, #0x1
    5b88:	add	x2, x0, x23
    5b8c:	str	x2, [x29, #176]
    5b90:	ldr	x2, [x29, #160]
    5b94:	str	x1, [x2, x0]
    5b98:	mov	w25, #0x8                   	// #8
    5b9c:	b	5ab0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1218>
    5ba0:	mov	x0, x20
    5ba4:	bl	5718 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe80>
    5ba8:	cbz	w0, 5ce0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1448>
    5bac:	and	w1, w0, #0x3
    5bb0:	mov	w2, #0x4                   	// #4
    5bb4:	sub	w1, w2, w1
    5bb8:	ldr	w3, [x29, #172]
    5bbc:	add	w1, w1, w3
    5bc0:	cmp	w1, #0x8
    5bc4:	b.hi	5c94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13fc>  // b.pmore
    5bc8:	sub	w0, w0, #0x8
    5bcc:	sbfiz	x2, x0, #1, #32
    5bd0:	add	x0, x2, w0, sxtw
    5bd4:	lsl	x0, x0, #2
    5bd8:	ubfiz	x2, x3, #4, #32
    5bdc:	ldr	x3, [x29, #184]
    5be0:	add	x2, x3, x2
    5be4:	adr	x3, 5bf0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1358>
    5be8:	add	x3, x3, x0
    5bec:	br	x3
    5bf0:	ldp	s16, s17, [x24]
    5bf4:	ldp	s18, s19, [x24, #8]
    5bf8:	b	5c7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13e4>
    5bfc:	ldp	s16, s17, [x24]
    5c00:	ldr	s18, [x24, #8]
    5c04:	b	5c80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13e8>
    5c08:	ldp	s16, s17, [x24]
    5c0c:	b	5c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13ec>
    5c10:	nop
    5c14:	ldr	s16, [x24]
    5c18:	b	5c88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13f0>
    5c1c:	nop
    5c20:	ldp	d16, d17, [x24]
    5c24:	ldp	d18, d19, [x24, #16]
    5c28:	b	5c7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13e4>
    5c2c:	ldp	d16, d17, [x24]
    5c30:	ldr	d18, [x24, #16]
    5c34:	b	5c80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13e8>
    5c38:	ldp	d16, d17, [x24]
    5c3c:	b	5c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13ec>
    5c40:	nop
    5c44:	ldr	d16, [x24]
    5c48:	b	5c88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13f0>
    5c4c:	nop
    5c50:	ldp	q16, q17, [x24]
    5c54:	ldp	q18, q19, [x24, #32]
    5c58:	b	5c7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13e4>
    5c5c:	ldp	q16, q17, [x24]
    5c60:	ldr	q18, [x24, #32]
    5c64:	b	5c80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13e8>
    5c68:	ldp	q16, q17, [x24]
    5c6c:	b	5c84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13ec>
    5c70:	nop
    5c74:	ldr	q16, [x24]
    5c78:	b	5c88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x13f0>
    5c7c:	str	q19, [x2, #48]
    5c80:	str	q18, [x2, #32]
    5c84:	str	q17, [x2, #16]
    5c88:	str	q16, [x2]
    5c8c:	str	w1, [x29, #172]
    5c90:	b	5ab0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1218>
    5c94:	ldrh	w0, [x20, #8]
    5c98:	cmp	x0, #0x8
    5c9c:	mov	x1, #0x8                   	// #8
    5ca0:	csel	x0, x0, x1, cs  // cs = hs, nlast
    5ca4:	sub	x0, x0, #0x1
    5ca8:	ldr	x1, [x29, #176]
    5cac:	sub	x1, x1, #0x1
    5cb0:	orr	x0, x0, x1
    5cb4:	add	x0, x0, #0x1
    5cb8:	add	x1, x23, x0
    5cbc:	str	x1, [x29, #176]
    5cc0:	ldr	x1, [x29, #160]
    5cc4:	add	x0, x1, x0
    5cc8:	mov	w1, #0x8                   	// #8
    5ccc:	str	w1, [x29, #172]
    5cd0:	mov	x2, x23
    5cd4:	mov	x1, x24
    5cd8:	bl	19b0 <memcpy@plt>
    5cdc:	b	5ab0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1218>
    5ce0:	cmp	x23, #0x10
    5ce4:	b.hi	5b54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x12bc>  // b.pmore
    5ce8:	add	x1, x23, #0x7
    5cec:	lsr	x1, x1, #3
    5cf0:	mov	w0, w25
    5cf4:	add	x2, x0, x1
    5cf8:	cmp	x2, #0x8
    5cfc:	b.hi	5d14 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x147c>  // b.pmore
    5d00:	add	x0, x0, #0x10
    5d04:	ldr	x2, [x29, #184]
    5d08:	add	x0, x2, x0, lsl #3
    5d0c:	add	w25, w25, w1
    5d10:	b	5cd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1438>
    5d14:	ldrh	w0, [x20, #8]
    5d18:	cmp	x0, #0x8
    5d1c:	mov	x1, #0x8                   	// #8
    5d20:	csel	x0, x0, x1, cs  // cs = hs, nlast
    5d24:	sub	x0, x0, #0x1
    5d28:	ldr	x1, [x29, #176]
    5d2c:	sub	x1, x1, #0x1
    5d30:	orr	x0, x0, x1
    5d34:	add	x0, x0, #0x1
    5d38:	add	x1, x23, x0
    5d3c:	str	x1, [x29, #176]
    5d40:	ldr	x1, [x29, #160]
    5d44:	add	x0, x1, x0
    5d48:	mov	w25, #0x8                   	// #8
    5d4c:	b	5cd0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1438>
    5d50:	ldr	x5, [x29, #120]
    5d54:	ldr	w19, [x29, #152]
    5d58:	mov	w4, w19
    5d5c:	ldr	x3, [x29, #144]
    5d60:	ldr	x2, [x29, #128]
    5d64:	ldr	x1, [x29, #112]
    5d68:	ldr	x0, [x29, #184]
    5d6c:	bl	6370 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x394>
    5d70:	tbnz	w19, #6, 5d94 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14fc>
    5d74:	mov	sp, x29
    5d78:	ldp	x19, x20, [sp, #16]
    5d7c:	ldp	x21, x22, [sp, #32]
    5d80:	ldp	x23, x24, [sp, #48]
    5d84:	ldp	x25, x26, [sp, #64]
    5d88:	ldp	x27, x28, [sp, #80]
    5d8c:	ldp	x29, x30, [sp], #208
    5d90:	ret
    5d94:	ldr	x2, [x29, #104]
    5d98:	ldr	x1, [x29, #144]
    5d9c:	ldr	x0, [x29, #136]
    5da0:	bl	19b0 <memcpy@plt>
    5da4:	b	5d74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x14dc>
    5da8:	stp	x29, x30, [sp, #-64]!
    5dac:	mov	x29, sp
    5db0:	stp	x19, x20, [sp, #16]
    5db4:	stp	x21, x22, [sp, #32]
    5db8:	stp	x23, x24, [sp, #48]
    5dbc:	mov	x21, x0
    5dc0:	ldr	x19, [x0, #16]
    5dc4:	ldr	w22, [x0, #24]
    5dc8:	ldrh	w1, [x19, #10]
    5dcc:	cmp	w1, #0x8
    5dd0:	b.eq	5ed0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1638>  // b.none
    5dd4:	b.hi	5e70 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15d8>  // b.pmore
    5dd8:	cmp	w1, #0x5
    5ddc:	b.eq	5ed8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1640>  // b.none
    5de0:	b.ls	5e24 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x158c>  // b.plast
    5de4:	cmp	w1, #0x6
    5de8:	mov	w20, #0x16                  	// #22
    5dec:	mov	w0, #0x1a                  	// #26
    5df0:	csel	w20, w20, w0, ne  // ne = any
    5df4:	ldr	w23, [x21, #4]
    5df8:	cmp	w23, #0x0
    5dfc:	b.le	5ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164c>
    5e00:	ldr	x24, [x21, #8]
    5e04:	mov	x19, #0x0                   	// #0
    5e08:	ldr	x0, [x24, x19, lsl #3]
    5e0c:	bl	5718 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe80>
    5e10:	cbnz	w0, 5ee0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1648>
    5e14:	add	x19, x19, #0x1
    5e18:	cmp	w23, w19
    5e1c:	b.gt	5e08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1570>
    5e20:	b	5ee4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x164c>
    5e24:	mov	w20, #0x0                   	// #0
    5e28:	cbz	w1, 5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5e2c:	mov	w20, #0x1e                  	// #30
    5e30:	cmp	w1, #0x1
    5e34:	b.eq	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>  // b.none
    5e38:	sub	w1, w1, #0x2
    5e3c:	and	w1, w1, #0xffff
    5e40:	cmp	w1, #0x2
    5e44:	b.hi	5eb4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x161c>  // b.pmore
    5e48:	mov	x0, x19
    5e4c:	bl	5718 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe80>
    5e50:	mov	w20, w0
    5e54:	cbnz	w0, 5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5e58:	ldr	x0, [x19]
    5e5c:	cmp	x0, #0x10
    5e60:	b.ls	5eb8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1620>  // b.plast
    5e64:	add	x22, x22, #0x8
    5e68:	mov	w20, #0x20                  	// #32
    5e6c:	b	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5e70:	cmp	w1, #0xc
    5e74:	b.hi	5e98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1600>  // b.pmore
    5e78:	mov	w20, #0x1                   	// #1
    5e7c:	cmp	w1, #0xa
    5e80:	b.hi	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>  // b.pmore
    5e84:	cmp	w1, #0x9
    5e88:	mov	w20, #0x1e                  	// #30
    5e8c:	mov	w0, #0x18                  	// #24
    5e90:	csel	w20, w20, w0, ne  // ne = any
    5e94:	b	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5e98:	mov	w20, #0x1                   	// #1
    5e9c:	cmp	w1, #0xe
    5ea0:	b.eq	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>  // b.none
    5ea4:	and	w1, w1, #0xfffffffd
    5ea8:	and	w1, w1, #0xffff
    5eac:	cmp	w1, #0xd
    5eb0:	b.eq	5e48 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x15b0>  // b.none
    5eb4:	bl	1ae0 <abort@plt>
    5eb8:	mov	w20, #0x2                   	// #2
    5ebc:	b.eq	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>  // b.none
    5ec0:	cmp	x0, #0x8
    5ec4:	mov	w20, #0x42                  	// #66
    5ec8:	csinc	w20, w20, wzr, ne  // ne = any
    5ecc:	b	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5ed0:	mov	w20, #0x1c                  	// #28
    5ed4:	b	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5ed8:	mov	w20, #0x14                  	// #20
    5edc:	b	5df4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x155c>
    5ee0:	orr	w20, w20, #0x80
    5ee4:	sub	w0, w22, #0x1
    5ee8:	orr	w0, w0, #0xf
    5eec:	add	w0, w0, #0x1
    5ef0:	str	w0, [x21, #24]
    5ef4:	str	w20, [x21, #28]
    5ef8:	mov	w0, #0x0                   	// #0
    5efc:	ldp	x19, x20, [sp, #16]
    5f00:	ldp	x21, x22, [sp, #32]
    5f04:	ldp	x23, x24, [sp, #48]
    5f08:	ldp	x29, x30, [sp], #64
    5f0c:	ret

0000000000005f10 <ffi_call@@LIBFFI_BASE_7.0>:
    5f10:	stp	x29, x30, [sp, #-16]!
    5f14:	mov	x29, sp
    5f18:	mov	x4, #0x0                   	// #0
    5f1c:	bl	591c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1084>
    5f20:	ldp	x29, x30, [sp], #16
    5f24:	ret

0000000000005f28 <ffi_call_go@@LIBFFI_GO_CLOSURE_7.0>:
    5f28:	stp	x29, x30, [sp, #-16]!
    5f2c:	mov	x29, sp
    5f30:	bl	591c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1084>
    5f34:	ldp	x29, x30, [sp], #16
    5f38:	ret

0000000000005f3c <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0>:
    5f3c:	stp	x29, x30, [sp, #-48]!
    5f40:	mov	x29, sp
    5f44:	stp	x19, x20, [sp, #16]
    5f48:	mov	x19, x0
    5f4c:	ldr	w0, [x1]
    5f50:	cmp	w0, #0x1
    5f54:	b.ne	5fd4 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x98>  // b.any
    5f58:	stp	x21, x22, [sp, #32]
    5f5c:	mov	x20, x1
    5f60:	mov	x22, x2
    5f64:	mov	x21, x3
    5f68:	ldr	w2, [x1, #28]
    5f6c:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    5f70:	add	x1, x0, #0x500
    5f74:	adrp	x0, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    5f78:	add	x0, x0, #0x4e0
    5f7c:	tst	x2, #0x80
    5f80:	csel	x0, x0, x1, ne  // ne = any
    5f84:	adrp	x1, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    5f88:	add	x1, x1, #0x930
    5f8c:	ldp	x2, x3, [x1]
    5f90:	stp	x2, x3, [x19]
    5f94:	str	x0, [x19, #16]
    5f98:	add	x1, x19, #0x18
    5f9c:	mov	x0, x19
    5fa0:	bl	6694 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6b8>
    5fa4:	mov	x0, x19
    5fa8:	bl	4854 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x17ec>
    5fac:	add	x1, x0, #0x18
    5fb0:	bl	6694 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6b8>
    5fb4:	str	x20, [x19, #24]
    5fb8:	str	x22, [x19, #32]
    5fbc:	str	x21, [x19, #40]
    5fc0:	mov	w0, #0x0                   	// #0
    5fc4:	ldp	x21, x22, [sp, #32]
    5fc8:	ldp	x19, x20, [sp, #16]
    5fcc:	ldp	x29, x30, [sp], #48
    5fd0:	ret
    5fd4:	mov	w0, #0x2                   	// #2
    5fd8:	b	5fc8 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x8c>

0000000000005fdc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0>:
    5fdc:	ldr	w3, [x1]
    5fe0:	cmp	w3, #0x1
    5fe4:	b.ne	6018 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3c>  // b.any
    5fe8:	ldr	w5, [x1, #28]
    5fec:	adrp	x3, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    5ff0:	add	x4, x3, #0x670
    5ff4:	adrp	x3, 6000 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x24>
    5ff8:	add	x3, x3, #0x650
    5ffc:	tst	x5, #0x80
    6000:	csel	x3, x3, x4, ne  // ne = any
    6004:	str	x3, [x0]
    6008:	str	x1, [x0, #8]
    600c:	str	x2, [x0, #16]
    6010:	mov	w0, #0x0                   	// #0
    6014:	ret
    6018:	mov	w0, #0x2                   	// #2
    601c:	b	6014 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x38>
    6020:	stp	x29, x30, [sp, #-160]!
    6024:	mov	x29, sp
    6028:	stp	x19, x20, [sp, #16]
    602c:	stp	x21, x22, [sp, #32]
    6030:	stp	x23, x24, [sp, #48]
    6034:	stp	x25, x26, [sp, #64]
    6038:	stp	x27, x28, [sp, #80]
    603c:	mov	x23, x0
    6040:	str	x1, [x29, #120]
    6044:	str	x2, [x29, #112]
    6048:	str	x3, [x29, #144]
    604c:	str	x4, [x29, #128]
    6050:	str	x5, [x29, #104]
    6054:	str	x6, [x29, #96]
    6058:	ldr	w0, [x0, #4]
    605c:	ubfiz	x1, x0, #3, #32
    6060:	add	x1, x1, #0xf
    6064:	and	x1, x1, #0xffffffff0
    6068:	sub	sp, sp, x1
    606c:	mov	x28, sp
    6070:	cmp	w0, #0x0
    6074:	b.le	6318 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x33c>
    6078:	sub	w21, w0, #0x1
    607c:	add	x21, x21, #0x1
    6080:	lsl	x21, x21, #3
    6084:	mov	x19, #0x0                   	// #0
    6088:	str	xzr, [x29, #152]
    608c:	str	wzr, [x29, #140]
    6090:	mov	w24, #0x0                   	// #0
    6094:	mov	x27, #0x1                   	// #1
    6098:	mov	x26, #0x5fe2                	// #24546
    609c:	mov	x25, #0xa01c                	// #40988
    60a0:	b	60d0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xf4>
    60a4:	cmp	w24, #0x7
    60a8:	b.hi	6104 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x128>  // b.pmore
    60ac:	ubfiz	x0, x24, #3, #32
    60b0:	add	x0, x0, #0x80
    60b4:	ldr	x1, [x29, #144]
    60b8:	add	x0, x1, x0
    60bc:	add	w24, w24, #0x1
    60c0:	str	x0, [x28, x19]
    60c4:	add	x19, x19, #0x8
    60c8:	cmp	x19, x21
    60cc:	b.eq	6318 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x33c>  // b.none
    60d0:	ldr	x0, [x23, #8]
    60d4:	ldr	x20, [x0, x19]
    60d8:	ldrh	w0, [x20, #10]
    60dc:	ldr	x22, [x20]
    60e0:	cmp	w0, #0xf
    60e4:	b.hi	6100 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x124>  // b.pmore
    60e8:	lsl	x1, x27, x0
    60ec:	tst	x1, x26
    60f0:	b.ne	60a4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xc8>  // b.any
    60f4:	tst	x1, x25
    60f8:	b.ne	613c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x160>  // b.any
    60fc:	cbz	w0, 60c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe8>
    6100:	bl	1ae0 <abort@plt>
    6104:	cmp	x22, #0x8
    6108:	mov	x0, #0x8                   	// #8
    610c:	csel	x0, x22, x0, cs  // cs = hs, nlast
    6110:	sub	x0, x0, #0x1
    6114:	ldr	x1, [x29, #152]
    6118:	sub	x1, x1, #0x1
    611c:	orr	x0, x0, x1
    6120:	add	x0, x0, #0x1
    6124:	add	x1, x22, x0
    6128:	str	x1, [x29, #152]
    612c:	ldr	x1, [x29, #128]
    6130:	add	x0, x1, x0
    6134:	mov	w24, #0x8                   	// #8
    6138:	b	60c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe4>
    613c:	mov	x0, x20
    6140:	bl	5718 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe80>
    6144:	cbz	w0, 6250 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x274>
    6148:	and	w1, w0, #0x3
    614c:	mov	w2, #0x4                   	// #4
    6150:	sub	w1, w2, w1
    6154:	ldr	w4, [x29, #140]
    6158:	mov	w2, w4
    615c:	add	x3, x2, w1, sxtw
    6160:	cmp	x3, #0x8
    6164:	b.hi	620c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x230>  // b.pmore
    6168:	ldr	x3, [x29, #144]
    616c:	add	x2, x3, x2, lsl #4
    6170:	add	w1, w4, w1
    6174:	str	w1, [x29, #140]
    6178:	cmp	w0, #0xc
    617c:	b.eq	61fc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x220>  // b.none
    6180:	b.gt	61a4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c8>
    6184:	cmp	w0, #0x9
    6188:	b.eq	61cc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1f0>  // b.none
    618c:	cmp	w0, #0xa
    6190:	b.eq	61c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1e4>  // b.none
    6194:	cmp	w0, #0x8
    6198:	b.eq	61dc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x200>  // b.none
    619c:	str	x2, [x28, x19]
    61a0:	b	60c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe8>
    61a4:	cmp	w0, #0xd
    61a8:	b.eq	61ec <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x210>  // b.none
    61ac:	cmp	w0, #0xe
    61b0:	b.ne	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>  // b.any
    61b4:	ldp	q16, q17, [x2]
    61b8:	st2	{v16.d, v17.d}[0], [x2]
    61bc:	b	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    61c0:	ldp	q16, q17, [x2]
    61c4:	st2	{v16.s, v17.s}[0], [x2]
    61c8:	b	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    61cc:	ldp	q16, q17, [x2]
    61d0:	ldr	q18, [x2, #32]
    61d4:	st3	{v16.s-v18.s}[0], [x2]
    61d8:	b	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    61dc:	ldp	q16, q17, [x2]
    61e0:	ldp	q18, q19, [x2, #32]
    61e4:	st4	{v16.s-v19.s}[0], [x2]
    61e8:	b	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    61ec:	ldp	q16, q17, [x2]
    61f0:	ldr	q18, [x2, #32]
    61f4:	st3	{v16.d-v18.d}[0], [x2]
    61f8:	b	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    61fc:	ldp	q16, q17, [x2]
    6200:	ldp	q18, q19, [x2, #32]
    6204:	st4	{v16.d-v19.d}[0], [x2]
    6208:	b	619c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1c0>
    620c:	ldrh	w0, [x20, #8]
    6210:	cmp	x0, #0x8
    6214:	mov	x1, #0x8                   	// #8
    6218:	csel	x0, x0, x1, cs  // cs = hs, nlast
    621c:	sub	x0, x0, #0x1
    6220:	ldr	x1, [x29, #152]
    6224:	sub	x1, x1, #0x1
    6228:	orr	x0, x0, x1
    622c:	add	x0, x0, #0x1
    6230:	add	x1, x22, x0
    6234:	str	x1, [x29, #152]
    6238:	ldr	x1, [x29, #128]
    623c:	add	x0, x1, x0
    6240:	str	x0, [x28, x19]
    6244:	mov	w0, #0x8                   	// #8
    6248:	str	w0, [x29, #140]
    624c:	b	60c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe8>
    6250:	cmp	x22, #0x10
    6254:	b.hi	6288 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2ac>  // b.pmore
    6258:	add	x1, x22, #0x7
    625c:	lsr	x1, x1, #3
    6260:	mov	w0, w24
    6264:	add	x2, x0, x1
    6268:	cmp	x2, #0x8
    626c:	b.hi	62d8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2fc>  // b.pmore
    6270:	add	x0, x0, #0x10
    6274:	ldr	x2, [x29, #144]
    6278:	add	x0, x2, x0, lsl #3
    627c:	str	x0, [x28, x19]
    6280:	add	w24, w24, w1
    6284:	b	60c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe8>
    6288:	cmp	w24, #0x7
    628c:	b.hi	62b0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2d4>  // b.pmore
    6290:	ubfiz	x0, x24, #3, #32
    6294:	add	x0, x0, #0x80
    6298:	ldr	x1, [x29, #144]
    629c:	add	x0, x1, x0
    62a0:	add	w24, w24, #0x1
    62a4:	ldr	x0, [x0]
    62a8:	str	x0, [x28, x19]
    62ac:	b	60c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe8>
    62b0:	ldr	x0, [x29, #152]
    62b4:	sub	x0, x0, #0x1
    62b8:	orr	x0, x0, #0x7
    62bc:	add	x1, x0, #0x9
    62c0:	str	x1, [x29, #152]
    62c4:	add	x0, x0, #0x1
    62c8:	ldr	x1, [x29, #128]
    62cc:	add	x0, x1, x0
    62d0:	mov	w24, #0x8                   	// #8
    62d4:	b	62a4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2c8>
    62d8:	ldrh	w0, [x20, #8]
    62dc:	cmp	x0, #0x8
    62e0:	mov	x1, #0x8                   	// #8
    62e4:	csel	x0, x0, x1, cs  // cs = hs, nlast
    62e8:	sub	x0, x0, #0x1
    62ec:	ldr	x1, [x29, #152]
    62f0:	sub	x1, x1, #0x1
    62f4:	orr	x0, x0, x1
    62f8:	add	x0, x0, #0x1
    62fc:	add	x1, x22, x0
    6300:	str	x1, [x29, #152]
    6304:	ldr	x1, [x29, #128]
    6308:	add	x0, x1, x0
    630c:	str	x0, [x28, x19]
    6310:	mov	w24, #0x8                   	// #8
    6314:	b	60c4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0xe8>
    6318:	ldr	w19, [x23, #28]
    631c:	tst	x19, #0x20
    6320:	ldr	x3, [x29, #112]
    6324:	mov	x2, x28
    6328:	ldr	x0, [x29, #104]
    632c:	ldr	x1, [x29, #96]
    6330:	csel	x1, x0, x1, eq  // eq = none
    6334:	mov	x0, x23
    6338:	ldr	x4, [x29, #120]
    633c:	blr	x4
    6340:	mov	w0, w19
    6344:	mov	sp, x29
    6348:	ldp	x19, x20, [sp, #16]
    634c:	ldp	x21, x22, [sp, #32]
    6350:	ldp	x23, x24, [sp, #48]
    6354:	ldp	x25, x26, [sp, #64]
    6358:	ldp	x27, x28, [sp, #80]
    635c:	ldp	x29, x30, [sp], #160
    6360:	ret
    6364:	nop
    6368:	nop
    636c:	nop
    6370:	stp	x29, x30, [x1]
    6374:	mov	x29, x1
    6378:	mov	sp, x0
    637c:	mov	x9, x2
    6380:	mov	x8, x3
    6384:	mov	x18, x5
    6388:	stp	x3, x4, [x29, #16]
    638c:	tbz	w4, #7, 63a0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3c4>
    6390:	ldp	q0, q1, [sp]
    6394:	ldp	q2, q3, [sp, #32]
    6398:	ldp	q4, q5, [sp, #64]
    639c:	ldp	q6, q7, [sp, #96]
    63a0:	ldp	x0, x1, [sp, #128]
    63a4:	ldp	x2, x3, [sp, #144]
    63a8:	ldp	x4, x5, [sp, #160]
    63ac:	ldp	x6, x7, [sp, #176]
    63b0:	add	sp, sp, #0xc0
    63b4:	blr	x9
    63b8:	ldp	x3, x4, [x29, #16]
    63bc:	mov	sp, x29
    63c0:	ldp	x29, x30, [x29]
    63c4:	adr	x5, 63e0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x404>
    63c8:	and	w4, w4, #0x1f
    63cc:	add	x5, x5, x4, lsl #3
    63d0:	br	x5
    63d4:	nop
    63d8:	nop
    63dc:	nop
    63e0:	ret
    63e4:	nop
    63e8:	str	x0, [x3]
    63ec:	ret
    63f0:	stp	x0, x1, [x3]
    63f4:	ret
    63f8:	brk	#0x3e8
    63fc:	ret
    6400:	brk	#0x3e8
    6404:	ret
    6408:	brk	#0x3e8
    640c:	ret
    6410:	brk	#0x3e8
    6414:	ret
    6418:	brk	#0x3e8
    641c:	ret
    6420:	st4	{v0.s-v3.s}[0], [x3]
    6424:	ret
    6428:	st3	{v0.s-v2.s}[0], [x3]
    642c:	ret
    6430:	stp	s0, s1, [x3]
    6434:	ret
    6438:	str	s0, [x3]
    643c:	ret
    6440:	st4	{v0.d-v3.d}[0], [x3]
    6444:	ret
    6448:	st3	{v0.d-v2.d}[0], [x3]
    644c:	ret
    6450:	stp	d0, d1, [x3]
    6454:	ret
    6458:	str	d0, [x3]
    645c:	ret
    6460:	str	q3, [x3, #48]
    6464:	nop
    6468:	str	q2, [x3, #32]
    646c:	nop
    6470:	stp	q0, q1, [x3]
    6474:	ret
    6478:	str	q0, [x3]
    647c:	ret
    6480:	uxtb	w0, w0
    6484:	str	x0, [x3]
    6488:	ret
    648c:	nop
    6490:	uxth	w0, w0
    6494:	str	x0, [x3]
    6498:	ret
    649c:	nop
    64a0:	mov	w0, w0
    64a4:	str	x0, [x3]
    64a8:	ret
    64ac:	nop
    64b0:	sxtb	x0, w0
    64b4:	str	x0, [x3]
    64b8:	ret
    64bc:	nop
    64c0:	sxth	x0, w0
    64c4:	str	x0, [x3]
    64c8:	ret
    64cc:	nop
    64d0:	sxtw	x0, w0
    64d4:	str	x0, [x3]
    64d8:	ret
    64dc:	nop
    64e0:	stp	x29, x30, [sp, #-272]!
    64e4:	stp	q0, q1, [sp, #16]
    64e8:	stp	q2, q3, [sp, #48]
    64ec:	stp	q4, q5, [sp, #80]
    64f0:	stp	q6, q7, [sp, #112]
    64f4:	b	6504 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x528>
    64f8:	nop
    64fc:	nop
    6500:	stp	x29, x30, [sp, #-272]!
    6504:	mov	x29, sp
    6508:	stp	x0, x1, [sp, #144]
    650c:	stp	x2, x3, [sp, #160]
    6510:	stp	x4, x5, [sp, #176]
    6514:	stp	x6, x7, [sp, #192]
    6518:	ldp	x0, x1, [x17, #24]
    651c:	ldr	x2, [x17, #40]
    6520:	add	x3, sp, #0x10
    6524:	add	x4, sp, #0x110
    6528:	add	x5, sp, #0xd0
    652c:	mov	x6, x8
    6530:	bl	6020 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x44>
    6534:	adr	x1, 6550 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x574>
    6538:	and	w0, w0, #0x1f
    653c:	add	x1, x1, x0, lsl #3
    6540:	add	x3, sp, #0xd0
    6544:	br	x1
    6548:	nop
    654c:	nop
    6550:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6554:	nop
    6558:	ldr	x0, [x3]
    655c:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6560:	ldp	x0, x1, [x3]
    6564:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6568:	brk	#0x3e8
    656c:	nop
    6570:	brk	#0x3e8
    6574:	nop
    6578:	brk	#0x3e8
    657c:	nop
    6580:	brk	#0x3e8
    6584:	nop
    6588:	brk	#0x3e8
    658c:	nop
    6590:	ldr	s3, [x3, #12]
    6594:	nop
    6598:	ldr	s2, [x3, #8]
    659c:	nop
    65a0:	ldp	s0, s1, [x3]
    65a4:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65a8:	ldr	s0, [x3]
    65ac:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65b0:	ldr	d3, [x3, #24]
    65b4:	nop
    65b8:	ldr	d2, [x3, #16]
    65bc:	nop
    65c0:	ldp	d0, d1, [x3]
    65c4:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65c8:	ldr	d0, [x3]
    65cc:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65d0:	ldr	q3, [x3, #48]
    65d4:	nop
    65d8:	ldr	q2, [x3, #32]
    65dc:	nop
    65e0:	ldp	q0, q1, [x3]
    65e4:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65e8:	ldr	q0, [x3]
    65ec:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65f0:	ldrb	w0, [x3]
    65f4:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    65f8:	brk	#0x3e8
    65fc:	nop
    6600:	ldrh	w0, [x3]
    6604:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6608:	brk	#0x3e8
    660c:	nop
    6610:	ldr	w0, [x3]
    6614:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6618:	brk	#0x3e8
    661c:	nop
    6620:	ldrsb	x0, [x3]
    6624:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6628:	brk	#0x3e8
    662c:	nop
    6630:	ldrsh	x0, [x3]
    6634:	b	6648 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x66c>
    6638:	brk	#0x3e8
    663c:	nop
    6640:	ldrsw	x0, [x3]
    6644:	nop
    6648:	ldp	x29, x30, [sp], #272
    664c:	ret
    6650:	stp	x29, x30, [sp, #-272]!
    6654:	stp	q0, q1, [sp, #16]
    6658:	stp	q2, q3, [sp, #48]
    665c:	stp	q4, q5, [sp, #80]
    6660:	stp	q6, q7, [sp, #112]
    6664:	b	6674 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x698>
    6668:	nop
    666c:	nop
    6670:	stp	x29, x30, [sp, #-272]!
    6674:	mov	x29, sp
    6678:	stp	x0, x1, [sp, #144]
    667c:	stp	x2, x3, [sp, #160]
    6680:	stp	x4, x5, [sp, #176]
    6684:	stp	x6, x7, [sp, #192]
    6688:	ldp	x0, x1, [x18, #8]
    668c:	mov	x2, x18
    6690:	b	6520 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x544>
    6694:	stp	x29, x30, [sp, #-16]!
    6698:	mov	x29, sp
    669c:	bl	66a8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6cc>
    66a0:	ldp	x29, x30, [sp], #16
    66a4:	ret
    66a8:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    66ac:	ldr	w2, [x2, #1544]
    66b0:	cbnz	w2, 66c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e4>
    66b4:	mrs	x3, ctr_el0
    66b8:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    66bc:	str	w3, [x2, #1544]
    66c0:	adrp	x2, 18000 <memcpy@GLIBC_2.17>
    66c4:	ldr	w5, [x2, #1544]
    66c8:	and	w2, w5, #0xf
    66cc:	mov	w3, #0x4                   	// #4
    66d0:	lsl	w4, w3, w2
    66d4:	ubfx	x5, x5, #16, #4
    66d8:	lsl	w3, w3, w5
    66dc:	sub	w2, w3, #0x1
    66e0:	bic	x2, x0, x2
    66e4:	cmp	x2, x1
    66e8:	b.cs	6700 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x724>  // b.hs, b.nlast
    66ec:	mov	w3, w3
    66f0:	dc	cvau, x2
    66f4:	add	x2, x2, x3
    66f8:	cmp	x1, x2
    66fc:	b.hi	66f0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x714>  // b.pmore
    6700:	dsb	ish
    6704:	sub	w2, w4, #0x1
    6708:	bic	x0, x0, x2
    670c:	cmp	x1, x0
    6710:	b.ls	6728 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x74c>  // b.plast
    6714:	mov	w2, w4
    6718:	ic	ivau, x0
    671c:	add	x0, x0, x2
    6720:	cmp	x1, x0
    6724:	b.hi	6718 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x73c>  // b.pmore
    6728:	dsb	ish
    672c:	isb
    6730:	ret

Disassembly of section .fini:

0000000000006734 <.fini>:
    6734:	stp	x29, x30, [sp, #-16]!
    6738:	mov	x29, sp
    673c:	ldp	x29, x30, [sp], #16
    6740:	ret
