
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-ascbin-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_relative_field_bit_offset_by_index>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #584	; 0x248
       c:	str	r0, [fp, #-576]	; 0xfffffdc0
      10:	str	r1, [fp, #-580]	; 0xfffffdbc
      14:	str	r2, [fp, #-584]	; 0xfffffdb8
      18:	ldr	r3, [fp, #-576]	; 0xfffffdc0
      1c:	ldr	r3, [r3, #4]
      20:	sub	r3, r3, #1
      24:	ldr	r2, [fp, #-576]	; 0xfffffdc0
      28:	lsl	r3, r3, #4
      2c:	add	r3, r2, r3
      30:	ldr	r3, [r3, #8]
      34:	str	r3, [fp, #-16]
      38:	ldr	r3, [fp, #-16]
      3c:	ldr	r2, [r3, #52]	; 0x34
      40:	ldr	r3, [fp, #-580]	; 0xfffffdbc
      44:	lsl	r3, r3, #2
      48:	add	r3, r2, r3
      4c:	ldr	r3, [r3]
      50:	str	r3, [fp, #-20]	; 0xffffffec
      54:	ldr	r3, [fp, #-20]	; 0xffffffec
      58:	ldrd	r2, [r3, #24]
      5c:	cmp	r2, #0
      60:	sbcs	r3, r3, #0
      64:	blt	80 <get_relative_field_bit_offset_by_index+0x80>
      68:	ldr	r3, [fp, #-20]	; 0xffffffec
      6c:	ldrd	r2, [r3, #24]
      70:	ldr	r1, [fp, #-584]	; 0xfffffdb8
      74:	strd	r2, [r1]
      78:	mov	r3, #0
      7c:	b	468 <get_relative_field_bit_offset_by_index+0x468>
      80:	ldr	r3, [fp, #-20]	; 0xffffffec
      84:	ldr	r3, [r3, #32]
      88:	cmp	r3, #0
      8c:	beq	170 <get_relative_field_bit_offset_by_index+0x170>
      90:	ldr	r3, [fp, #-20]	; 0xffffffec
      94:	ldr	r3, [r3, #20]
      98:	cmp	r3, #0
      9c:	beq	12c <get_relative_field_bit_offset_by_index+0x12c>
      a0:	ldr	r3, [fp, #-20]	; 0xffffffec
      a4:	ldr	r3, [r3, #20]
      a8:	sub	r2, fp, #552	; 0x228
      ac:	ldr	r1, [fp, #-576]	; 0xfffffdc0
      b0:	mov	r0, r3
      b4:	bl	0 <coda_expression_eval_bool>
      b8:	mov	r3, r0
      bc:	cmp	r3, #0
      c0:	beq	dc <get_relative_field_bit_offset_by_index+0xdc>
      c4:	ldr	r0, [pc, #936]	; 474 <get_relative_field_bit_offset_by_index+0x474>
      c8:	bl	0 <coda_add_error_message>
      cc:	ldr	r0, [fp, #-576]	; 0xfffffdc0
      d0:	bl	0 <coda_cursor_add_to_error_message>
      d4:	mvn	r3, #0
      d8:	b	468 <get_relative_field_bit_offset_by_index+0x468>
      dc:	ldr	r3, [fp, #-552]	; 0xfffffdd8
      e0:	cmp	r3, #0
      e4:	bne	12c <get_relative_field_bit_offset_by_index+0x12c>
      e8:	ldr	r3, [fp, #-580]	; 0xfffffdbc
      ec:	cmp	r3, #0
      f0:	bne	10c <get_relative_field_bit_offset_by_index+0x10c>
      f4:	ldr	r1, [fp, #-584]	; 0xfffffdb8
      f8:	mov	r2, #0
      fc:	mov	r3, #0
     100:	strd	r2, [r1]
     104:	mov	r3, #0
     108:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     10c:	ldr	r3, [fp, #-580]	; 0xfffffdbc
     110:	sub	r3, r3, #1
     114:	ldr	r2, [fp, #-584]	; 0xfffffdb8
     118:	mov	r1, r3
     11c:	ldr	r0, [fp, #-576]	; 0xfffffdc0
     120:	bl	0 <get_relative_field_bit_offset_by_index>
     124:	mov	r3, r0
     128:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     12c:	ldr	r3, [fp, #-20]	; 0xffffffec
     130:	ldr	r3, [r3, #32]
     134:	ldr	r2, [fp, #-584]	; 0xfffffdb8
     138:	ldr	r1, [fp, #-576]	; 0xfffffdc0
     13c:	mov	r0, r3
     140:	bl	0 <coda_expression_eval_integer>
     144:	mov	r3, r0
     148:	cmp	r3, #0
     14c:	beq	168 <get_relative_field_bit_offset_by_index+0x168>
     150:	ldr	r0, [pc, #800]	; 478 <get_relative_field_bit_offset_by_index+0x478>
     154:	bl	0 <coda_add_error_message>
     158:	ldr	r0, [fp, #-576]	; 0xfffffdc0
     15c:	bl	0 <coda_cursor_add_to_error_message>
     160:	mvn	r3, #0
     164:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     168:	mov	r3, #0
     16c:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     170:	ldr	r3, [fp, #-580]	; 0xfffffdbc
     174:	cmp	r3, #0
     178:	bne	190 <get_relative_field_bit_offset_by_index+0x190>
     17c:	ldr	r3, [pc, #760]	; 47c <get_relative_field_bit_offset_by_index+0x47c>
     180:	mov	r2, #99	; 0x63
     184:	ldr	r1, [pc, #756]	; 480 <get_relative_field_bit_offset_by_index+0x480>
     188:	ldr	r0, [pc, #756]	; 484 <get_relative_field_bit_offset_by_index+0x484>
     18c:	bl	0 <__assert_fail>
     190:	ldr	r3, [fp, #-580]	; 0xfffffdbc
     194:	sub	r3, r3, #1
     198:	str	r3, [fp, #-8]
     19c:	b	1cc <get_relative_field_bit_offset_by_index+0x1cc>
     1a0:	ldr	r3, [fp, #-8]
     1a4:	sub	r3, r3, #1
     1a8:	str	r3, [fp, #-8]
     1ac:	ldr	r3, [fp, #-8]
     1b0:	cmp	r3, #0
     1b4:	bge	1cc <get_relative_field_bit_offset_by_index+0x1cc>
     1b8:	ldr	r3, [pc, #700]	; 47c <get_relative_field_bit_offset_by_index+0x47c>
     1bc:	mov	r2, #110	; 0x6e
     1c0:	ldr	r1, [pc, #696]	; 480 <get_relative_field_bit_offset_by_index+0x480>
     1c4:	ldr	r0, [pc, #700]	; 488 <get_relative_field_bit_offset_by_index+0x488>
     1c8:	bl	0 <__assert_fail>
     1cc:	ldr	r3, [fp, #-16]
     1d0:	ldr	r2, [r3, #52]	; 0x34
     1d4:	ldr	r3, [fp, #-8]
     1d8:	lsl	r3, r3, #2
     1dc:	add	r3, r2, r3
     1e0:	ldr	r3, [r3]
     1e4:	ldrd	r2, [r3, #24]
     1e8:	mvn	r0, #0
     1ec:	mvn	r1, #0
     1f0:	cmp	r3, r1
     1f4:	cmpeq	r2, r0
     1f8:	bne	220 <get_relative_field_bit_offset_by_index+0x220>
     1fc:	ldr	r3, [fp, #-16]
     200:	ldr	r2, [r3, #52]	; 0x34
     204:	ldr	r3, [fp, #-8]
     208:	lsl	r3, r3, #2
     20c:	add	r3, r2, r3
     210:	ldr	r3, [r3]
     214:	ldr	r3, [r3, #32]
     218:	cmp	r3, #0
     21c:	beq	1a0 <get_relative_field_bit_offset_by_index+0x1a0>
     220:	sub	r3, fp, #548	; 0x224
     224:	mov	r2, r3
     228:	ldr	r1, [fp, #-8]
     22c:	ldr	r0, [fp, #-576]	; 0xfffffdc0
     230:	bl	0 <get_relative_field_bit_offset_by_index>
     234:	mov	r3, r0
     238:	cmp	r3, #0
     23c:	beq	248 <get_relative_field_bit_offset_by_index+0x248>
     240:	mvn	r3, #0
     244:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     248:	ldr	r2, [fp, #-576]	; 0xfffffdc0
     24c:	sub	r3, fp, #540	; 0x21c
     250:	mov	r1, r2
     254:	mov	r2, #520	; 0x208
     258:	mov	r0, r3
     25c:	bl	0 <memcpy>
     260:	ldr	r3, [fp, #-536]	; 0xfffffde8
     264:	add	r3, r3, #1
     268:	str	r3, [fp, #-536]	; 0xfffffde8
     26c:	ldr	r3, [fp, #-536]	; 0xfffffde8
     270:	sub	ip, r3, #1
     274:	ldr	r3, [fp, #-576]	; 0xfffffdc0
     278:	ldr	r3, [r3, #4]
     27c:	sub	r3, r3, #1
     280:	ldr	r2, [fp, #-576]	; 0xfffffdc0
     284:	add	r3, r3, #1
     288:	lsl	r3, r3, #4
     28c:	add	r3, r2, r3
     290:	ldrd	r0, [r3]
     294:	sub	r3, fp, #548	; 0x224
     298:	ldrd	r2, [r3]
     29c:	adds	r2, r2, r0
     2a0:	adc	r3, r3, r1
     2a4:	sub	r1, fp, #532	; 0x214
     2a8:	mov	r0, r1
     2ac:	add	r1, ip, #1
     2b0:	lsl	r1, r1, #4
     2b4:	add	r1, r0, r1
     2b8:	sub	r1, r1, #8
     2bc:	strd	r2, [r1]
     2c0:	ldr	r3, [fp, #-8]
     2c4:	str	r3, [fp, #-12]
     2c8:	b	444 <get_relative_field_bit_offset_by_index+0x444>
     2cc:	mov	r3, #1
     2d0:	str	r3, [fp, #-568]	; 0xfffffdc8
     2d4:	ldr	r3, [fp, #-16]
     2d8:	ldr	r2, [r3, #52]	; 0x34
     2dc:	ldr	r3, [fp, #-12]
     2e0:	lsl	r3, r3, #2
     2e4:	add	r3, r2, r3
     2e8:	ldr	r3, [r3]
     2ec:	ldr	r3, [r3, #20]
     2f0:	cmp	r3, #0
     2f4:	beq	340 <get_relative_field_bit_offset_by_index+0x340>
     2f8:	ldr	r3, [fp, #-16]
     2fc:	ldr	r2, [r3, #52]	; 0x34
     300:	ldr	r3, [fp, #-12]
     304:	lsl	r3, r3, #2
     308:	add	r3, r2, r3
     30c:	ldr	r3, [r3]
     310:	ldr	r3, [r3, #20]
     314:	sub	r2, fp, #568	; 0x238
     318:	ldr	r1, [fp, #-576]	; 0xfffffdc0
     31c:	mov	r0, r3
     320:	bl	0 <coda_expression_eval_bool>
     324:	mov	r3, r0
     328:	cmp	r3, #0
     32c:	beq	340 <get_relative_field_bit_offset_by_index+0x340>
     330:	ldr	r0, [pc, #316]	; 474 <get_relative_field_bit_offset_by_index+0x474>
     334:	bl	0 <coda_add_error_message>
     338:	mvn	r3, #0
     33c:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     340:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     344:	cmp	r3, #0
     348:	beq	438 <get_relative_field_bit_offset_by_index+0x438>
     34c:	ldr	r3, [fp, #-536]	; 0xfffffde8
     350:	sub	r3, r3, #1
     354:	ldr	r2, [fp, #-16]
     358:	ldr	r1, [r2, #52]	; 0x34
     35c:	ldr	r2, [fp, #-12]
     360:	lsl	r2, r2, #2
     364:	add	r2, r1, r2
     368:	ldr	r2, [r2]
     36c:	ldr	r2, [r2, #8]
     370:	lsl	r3, r3, #4
     374:	sub	r1, fp, #4
     378:	add	r3, r1, r3
     37c:	str	r2, [r3, #-528]	; 0xfffffdf0
     380:	ldr	r3, [fp, #-536]	; 0xfffffde8
     384:	sub	r3, r3, #1
     388:	lsl	r3, r3, #4
     38c:	sub	r2, fp, #4
     390:	add	r3, r2, r3
     394:	ldr	r2, [fp, #-12]
     398:	str	r2, [r3, #-524]	; 0xfffffdf4
     39c:	sub	r2, fp, #564	; 0x234
     3a0:	sub	r3, fp, #540	; 0x21c
     3a4:	mov	r1, r2
     3a8:	mov	r0, r3
     3ac:	bl	0 <coda_cursor_get_bit_size>
     3b0:	mov	r3, r0
     3b4:	cmp	r3, #0
     3b8:	beq	3c4 <get_relative_field_bit_offset_by_index+0x3c4>
     3bc:	mvn	r3, #0
     3c0:	b	468 <get_relative_field_bit_offset_by_index+0x468>
     3c4:	sub	r3, fp, #548	; 0x224
     3c8:	ldrd	r0, [r3]
     3cc:	sub	r3, fp, #564	; 0x234
     3d0:	ldrd	r2, [r3]
     3d4:	adds	r2, r2, r0
     3d8:	adc	r3, r3, r1
     3dc:	sub	r1, fp, #548	; 0x224
     3e0:	strd	r2, [r1]
     3e4:	ldr	r3, [fp, #-536]	; 0xfffffde8
     3e8:	sub	ip, r3, #1
     3ec:	ldr	r3, [fp, #-536]	; 0xfffffde8
     3f0:	sub	r3, r3, #1
     3f4:	sub	r2, fp, #532	; 0x214
     3f8:	add	r3, r3, #1
     3fc:	lsl	r3, r3, #4
     400:	add	r3, r2, r3
     404:	sub	r3, r3, #8
     408:	ldrd	r0, [r3]
     40c:	sub	r3, fp, #564	; 0x234
     410:	ldrd	r2, [r3]
     414:	adds	r2, r2, r0
     418:	adc	r3, r3, r1
     41c:	sub	r1, fp, #532	; 0x214
     420:	mov	r0, r1
     424:	add	r1, ip, #1
     428:	lsl	r1, r1, #4
     42c:	add	r1, r0, r1
     430:	sub	r1, r1, #8
     434:	strd	r2, [r1]
     438:	ldr	r3, [fp, #-12]
     43c:	add	r3, r3, #1
     440:	str	r3, [fp, #-12]
     444:	ldr	r2, [fp, #-12]
     448:	ldr	r3, [fp, #-580]	; 0xfffffdbc
     44c:	cmp	r2, r3
     450:	blt	2cc <get_relative_field_bit_offset_by_index+0x2cc>
     454:	sub	r3, fp, #548	; 0x224
     458:	ldrd	r2, [r3]
     45c:	ldr	r1, [fp, #-584]	; 0xfffffdb8
     460:	strd	r2, [r1]
     464:	mov	r3, #0
     468:	mov	r0, r3
     46c:	sub	sp, fp, #4
     470:	pop	{fp, pc}
     474:	.word	0x00000000
     478:	.word	0x0000001c
     47c:	.word	0x00000344
     480:	.word	0x00000034
     484:	.word	0x00000088
     488:	.word	0x0000009c

0000048c <get_next_relative_field_bit_offset>:
     48c:	push	{fp, lr}
     490:	add	fp, sp, #4
     494:	sub	sp, sp, #576	; 0x240
     498:	str	r0, [fp, #-568]	; 0xfffffdc8
     49c:	str	r1, [fp, #-572]	; 0xfffffdc4
     4a0:	str	r2, [fp, #-576]	; 0xfffffdc0
     4a4:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     4a8:	ldr	r3, [r3, #4]
     4ac:	sub	r3, r3, #2
     4b0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     4b4:	lsl	r3, r3, #4
     4b8:	add	r3, r2, r3
     4bc:	ldr	r3, [r3, #8]
     4c0:	str	r3, [fp, #-8]
     4c4:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     4c8:	ldr	r3, [r3, #4]
     4cc:	sub	r3, r3, #1
     4d0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     4d4:	lsl	r3, r3, #4
     4d8:	add	r3, r2, r3
     4dc:	ldr	r3, [r3, #12]
     4e0:	add	r3, r3, #1
     4e4:	str	r3, [fp, #-12]
     4e8:	ldr	r3, [fp, #-8]
     4ec:	ldr	r2, [r3, #48]	; 0x30
     4f0:	ldr	r3, [fp, #-12]
     4f4:	cmp	r2, r3
     4f8:	bgt	510 <get_next_relative_field_bit_offset+0x84>
     4fc:	ldr	r3, [pc, #544]	; 724 <get_next_relative_field_bit_offset+0x298>
     500:	mov	r2, #161	; 0xa1
     504:	ldr	r1, [pc, #540]	; 728 <get_next_relative_field_bit_offset+0x29c>
     508:	ldr	r0, [pc, #540]	; 72c <get_next_relative_field_bit_offset+0x2a0>
     50c:	bl	0 <__assert_fail>
     510:	ldr	r3, [fp, #-8]
     514:	ldr	r2, [r3, #52]	; 0x34
     518:	ldr	r3, [fp, #-12]
     51c:	lsl	r3, r3, #2
     520:	add	r3, r2, r3
     524:	ldr	r3, [r3]
     528:	str	r3, [fp, #-16]
     52c:	ldr	r3, [fp, #-16]
     530:	ldrd	r2, [r3, #24]
     534:	cmp	r2, #0
     538:	sbcs	r3, r3, #0
     53c:	blt	574 <get_next_relative_field_bit_offset+0xe8>
     540:	ldr	r3, [fp, #-16]
     544:	ldrd	r2, [r3, #24]
     548:	ldr	r1, [fp, #-572]	; 0xfffffdc4
     54c:	strd	r2, [r1]
     550:	ldr	r3, [fp, #-576]	; 0xfffffdc0
     554:	cmp	r3, #0
     558:	beq	56c <get_next_relative_field_bit_offset+0xe0>
     55c:	ldr	r1, [fp, #-576]	; 0xfffffdc0
     560:	mvn	r2, #0
     564:	mvn	r3, #0
     568:	strd	r2, [r1]
     56c:	mov	r3, #0
     570:	b	718 <get_next_relative_field_bit_offset+0x28c>
     574:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     578:	ldr	r3, [r3, #4]
     57c:	sub	r3, r3, #1
     580:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     584:	add	r3, r3, #1
     588:	lsl	r3, r3, #4
     58c:	add	r3, r2, r3
     590:	ldrd	r0, [r3]
     594:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     598:	ldr	r3, [r3, #4]
     59c:	sub	r3, r3, #2
     5a0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     5a4:	add	r3, r3, #1
     5a8:	lsl	r3, r3, #4
     5ac:	add	r3, r2, r3
     5b0:	ldrd	r2, [r3]
     5b4:	subs	r2, r0, r2
     5b8:	sbc	r3, r1, r3
     5bc:	strd	r2, [fp, #-28]	; 0xffffffe4
     5c0:	ldr	r3, [fp, #-16]
     5c4:	ldr	r3, [r3, #32]
     5c8:	cmp	r3, #0
     5cc:	beq	6c0 <get_next_relative_field_bit_offset+0x234>
     5d0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     5d4:	sub	r3, fp, #564	; 0x234
     5d8:	mov	r1, r2
     5dc:	mov	r2, #520	; 0x208
     5e0:	mov	r0, r3
     5e4:	bl	0 <memcpy>
     5e8:	ldr	r3, [fp, #-560]	; 0xfffffdd0
     5ec:	sub	r3, r3, #1
     5f0:	str	r3, [fp, #-560]	; 0xfffffdd0
     5f4:	ldr	r3, [fp, #-576]	; 0xfffffdc0
     5f8:	cmp	r3, #0
     5fc:	beq	610 <get_next_relative_field_bit_offset+0x184>
     600:	ldr	r1, [fp, #-576]	; 0xfffffdc0
     604:	mvn	r2, #0
     608:	mvn	r3, #0
     60c:	strd	r2, [r1]
     610:	ldr	r3, [fp, #-16]
     614:	ldr	r3, [r3, #20]
     618:	cmp	r3, #0
     61c:	beq	67c <get_next_relative_field_bit_offset+0x1f0>
     620:	ldr	r3, [fp, #-16]
     624:	ldr	r3, [r3, #20]
     628:	sub	r2, fp, #40	; 0x28
     62c:	sub	r1, fp, #564	; 0x234
     630:	mov	r0, r3
     634:	bl	0 <coda_expression_eval_bool>
     638:	mov	r3, r0
     63c:	cmp	r3, #0
     640:	beq	65c <get_next_relative_field_bit_offset+0x1d0>
     644:	ldr	r0, [pc, #228]	; 730 <get_next_relative_field_bit_offset+0x2a4>
     648:	bl	0 <coda_add_error_message>
     64c:	ldr	r0, [fp, #-568]	; 0xfffffdc8
     650:	bl	0 <coda_cursor_add_to_error_message>
     654:	mvn	r3, #0
     658:	b	718 <get_next_relative_field_bit_offset+0x28c>
     65c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     660:	cmp	r3, #0
     664:	bne	67c <get_next_relative_field_bit_offset+0x1f0>
     668:	ldr	r1, [fp, #-572]	; 0xfffffdc4
     66c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     670:	strd	r2, [r1]
     674:	mov	r3, #0
     678:	b	718 <get_next_relative_field_bit_offset+0x28c>
     67c:	ldr	r3, [fp, #-16]
     680:	ldr	r3, [r3, #32]
     684:	sub	r1, fp, #564	; 0x234
     688:	ldr	r2, [fp, #-572]	; 0xfffffdc4
     68c:	mov	r0, r3
     690:	bl	0 <coda_expression_eval_integer>
     694:	mov	r3, r0
     698:	cmp	r3, #0
     69c:	beq	6b8 <get_next_relative_field_bit_offset+0x22c>
     6a0:	ldr	r0, [pc, #140]	; 734 <get_next_relative_field_bit_offset+0x2a8>
     6a4:	bl	0 <coda_add_error_message>
     6a8:	ldr	r0, [fp, #-568]	; 0xfffffdc8
     6ac:	bl	0 <coda_cursor_add_to_error_message>
     6b0:	mvn	r3, #0
     6b4:	b	718 <get_next_relative_field_bit_offset+0x28c>
     6b8:	mov	r3, #0
     6bc:	b	718 <get_next_relative_field_bit_offset+0x28c>
     6c0:	sub	r3, fp, #36	; 0x24
     6c4:	mov	r1, r3
     6c8:	ldr	r0, [fp, #-568]	; 0xfffffdc8
     6cc:	bl	0 <coda_cursor_get_bit_size>
     6d0:	mov	r3, r0
     6d4:	cmp	r3, #0
     6d8:	beq	6e4 <get_next_relative_field_bit_offset+0x258>
     6dc:	mvn	r3, #0
     6e0:	b	718 <get_next_relative_field_bit_offset+0x28c>
     6e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     6e8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     6ec:	adds	r2, r2, r0
     6f0:	adc	r3, r3, r1
     6f4:	ldr	r1, [fp, #-572]	; 0xfffffdc4
     6f8:	strd	r2, [r1]
     6fc:	ldr	r3, [fp, #-576]	; 0xfffffdc0
     700:	cmp	r3, #0
     704:	beq	714 <get_next_relative_field_bit_offset+0x288>
     708:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     70c:	ldr	r1, [fp, #-576]	; 0xfffffdc0
     710:	strd	r2, [r1]
     714:	mov	r3, #0
     718:	mov	r0, r3
     71c:	sub	sp, fp, #4
     720:	pop	{fp, pc}
     724:	.word	0x0000036c
     728:	.word	0x00000034
     72c:	.word	0x000000a8
     730:	.word	0x00000000
     734:	.word	0x0000001c

00000738 <coda_ascbin_cursor_set_product>:
     738:	push	{fp, lr}
     73c:	add	fp, sp, #4
     740:	sub	sp, sp, #8
     744:	str	r0, [fp, #-8]
     748:	str	r1, [fp, #-12]
     74c:	ldr	r3, [fp, #-8]
     750:	ldr	r2, [fp, #-12]
     754:	str	r2, [r3]
     758:	ldr	r3, [fp, #-8]
     75c:	mov	r2, #1
     760:	str	r2, [r3, #4]
     764:	ldr	r3, [fp, #-12]
     768:	ldr	r3, [r3, #20]
     76c:	cmp	r3, #0
     770:	bne	788 <coda_ascbin_cursor_set_product+0x50>
     774:	ldr	r3, [pc, #72]	; 7c4 <coda_ascbin_cursor_set_product+0x8c>
     778:	mov	r2, #234	; 0xea
     77c:	ldr	r1, [pc, #68]	; 7c8 <coda_ascbin_cursor_set_product+0x90>
     780:	ldr	r0, [pc, #68]	; 7cc <coda_ascbin_cursor_set_product+0x94>
     784:	bl	0 <__assert_fail>
     788:	ldr	r3, [fp, #-12]
     78c:	ldr	r2, [r3, #20]
     790:	ldr	r3, [fp, #-8]
     794:	str	r2, [r3, #8]
     798:	ldr	r3, [fp, #-8]
     79c:	mvn	r2, #0
     7a0:	str	r2, [r3, #12]
     7a4:	ldr	r1, [fp, #-8]
     7a8:	mov	r2, #0
     7ac:	mov	r3, #0
     7b0:	strd	r2, [r1, #16]
     7b4:	mov	r3, #0
     7b8:	mov	r0, r3
     7bc:	sub	sp, fp, #4
     7c0:	pop	{fp, pc}
     7c4:	.word	0x00000390
     7c8:	.word	0x00000034
     7cc:	.word	0x000000cc

000007d0 <coda_ascbin_cursor_goto_record_field_by_index>:
     7d0:	push	{r4, fp, lr}
     7d4:	add	fp, sp, #8
     7d8:	sub	sp, sp, #44	; 0x2c
     7dc:	str	r0, [fp, #-48]	; 0xffffffd0
     7e0:	str	r1, [fp, #-52]	; 0xffffffcc
     7e4:	mov	r3, #1
     7e8:	str	r3, [fp, #-28]	; 0xffffffe4
     7ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
     7f0:	ldr	r3, [r3, #4]
     7f4:	sub	r3, r3, #1
     7f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
     7fc:	lsl	r3, r3, #4
     800:	add	r3, r2, r3
     804:	ldr	r3, [r3, #8]
     808:	ldr	r3, [r3]
     80c:	cmp	r3, #99	; 0x63
     810:	bhi	834 <coda_ascbin_cursor_goto_record_field_by_index+0x64>
     814:	ldr	r3, [fp, #-48]	; 0xffffffd0
     818:	ldr	r3, [r3, #4]
     81c:	sub	r3, r3, #1
     820:	ldr	r2, [fp, #-48]	; 0xffffffd0
     824:	lsl	r3, r3, #4
     828:	add	r3, r2, r3
     82c:	ldr	r3, [r3, #8]
     830:	b	854 <coda_ascbin_cursor_goto_record_field_by_index+0x84>
     834:	ldr	r3, [fp, #-48]	; 0xffffffd0
     838:	ldr	r3, [r3, #4]
     83c:	sub	r3, r3, #1
     840:	ldr	r2, [fp, #-48]	; 0xffffffd0
     844:	lsl	r3, r3, #4
     848:	add	r3, r2, r3
     84c:	ldr	r3, [r3, #8]
     850:	ldr	r3, [r3, #4]
     854:	str	r3, [fp, #-24]	; 0xffffffe8
     858:	ldr	r3, [fp, #-52]	; 0xffffffcc
     85c:	cmp	r3, #0
     860:	blt	878 <coda_ascbin_cursor_goto_record_field_by_index+0xa8>
     864:	ldr	r3, [fp, #-24]	; 0xffffffe8
     868:	ldr	r2, [r3, #48]	; 0x30
     86c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     870:	cmp	r2, r3
     874:	bgt	898 <coda_ascbin_cursor_goto_record_field_by_index+0xc8>
     878:	ldr	r3, [fp, #-24]	; 0xffffffe8
     87c:	ldr	r3, [r3, #48]	; 0x30
     880:	ldr	r2, [fp, #-52]	; 0xffffffcc
     884:	ldr	r1, [pc, #528]	; a9c <coda_ascbin_cursor_goto_record_field_by_index+0x2cc>
     888:	mvn	r0, #100	; 0x64
     88c:	bl	0 <coda_set_error>
     890:	mvn	r3, #0
     894:	b	a90 <coda_ascbin_cursor_goto_record_field_by_index+0x2c0>
     898:	ldr	r3, [fp, #-48]	; 0xffffffd0
     89c:	ldr	r3, [r3, #4]
     8a0:	sub	r3, r3, #1
     8a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
     8a8:	add	r3, r3, #1
     8ac:	lsl	r3, r3, #4
     8b0:	add	r3, r2, r3
     8b4:	ldrd	r2, [r3]
     8b8:	strd	r2, [fp, #-20]	; 0xffffffec
     8bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8c0:	ldr	r3, [r3, #68]	; 0x44
     8c4:	cmp	r3, #0
     8c8:	beq	90c <coda_ascbin_cursor_goto_record_field_by_index+0x13c>
     8cc:	sub	r3, fp, #32
     8d0:	mov	r1, r3
     8d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
     8d8:	bl	0 <coda_cursor_get_available_union_field_index>
     8dc:	mov	r3, r0
     8e0:	cmp	r3, #0
     8e4:	beq	8f0 <coda_ascbin_cursor_goto_record_field_by_index+0x120>
     8e8:	mvn	r3, #0
     8ec:	b	a90 <coda_ascbin_cursor_goto_record_field_by_index+0x2c0>
     8f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     8f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
     8f8:	cmp	r2, r3
     8fc:	beq	9bc <coda_ascbin_cursor_goto_record_field_by_index+0x1ec>
     900:	mov	r3, #0
     904:	str	r3, [fp, #-28]	; 0xffffffe4
     908:	b	9bc <coda_ascbin_cursor_goto_record_field_by_index+0x1ec>
     90c:	sub	r3, fp, #44	; 0x2c
     910:	mov	r2, r3
     914:	ldr	r1, [fp, #-52]	; 0xffffffcc
     918:	ldr	r0, [fp, #-48]	; 0xffffffd0
     91c:	bl	0 <get_relative_field_bit_offset_by_index>
     920:	mov	r3, r0
     924:	cmp	r3, #0
     928:	beq	934 <coda_ascbin_cursor_goto_record_field_by_index+0x164>
     92c:	mvn	r3, #0
     930:	b	a90 <coda_ascbin_cursor_goto_record_field_by_index+0x2c0>
     934:	ldrd	r2, [fp, #-44]	; 0xffffffd4
     938:	ldrd	r0, [fp, #-20]	; 0xffffffec
     93c:	adds	r2, r2, r0
     940:	adc	r3, r3, r1
     944:	strd	r2, [fp, #-20]	; 0xffffffec
     948:	ldr	r3, [fp, #-24]	; 0xffffffe8
     94c:	ldr	r2, [r3, #52]	; 0x34
     950:	ldr	r3, [fp, #-52]	; 0xffffffcc
     954:	lsl	r3, r3, #2
     958:	add	r3, r2, r3
     95c:	ldr	r3, [r3]
     960:	ldr	r3, [r3, #20]
     964:	cmp	r3, #0
     968:	beq	9bc <coda_ascbin_cursor_goto_record_field_by_index+0x1ec>
     96c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     970:	ldr	r2, [r3, #52]	; 0x34
     974:	ldr	r3, [fp, #-52]	; 0xffffffcc
     978:	lsl	r3, r3, #2
     97c:	add	r3, r2, r3
     980:	ldr	r3, [r3]
     984:	ldr	r3, [r3, #20]
     988:	sub	r2, fp, #28
     98c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     990:	mov	r0, r3
     994:	bl	0 <coda_expression_eval_bool>
     998:	mov	r3, r0
     99c:	cmp	r3, #0
     9a0:	beq	9bc <coda_ascbin_cursor_goto_record_field_by_index+0x1ec>
     9a4:	ldr	r0, [pc, #244]	; aa0 <coda_ascbin_cursor_goto_record_field_by_index+0x2d0>
     9a8:	bl	0 <coda_add_error_message>
     9ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
     9b0:	bl	0 <coda_cursor_add_to_error_message>
     9b4:	mvn	r3, #0
     9b8:	b	a90 <coda_ascbin_cursor_goto_record_field_by_index+0x2c0>
     9bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     9c0:	ldr	r3, [r3, #4]
     9c4:	add	r2, r3, #1
     9c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     9cc:	str	r2, [r3, #4]
     9d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9d4:	cmp	r3, #0
     9d8:	beq	a18 <coda_ascbin_cursor_goto_record_field_by_index+0x248>
     9dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     9e0:	ldr	r3, [r3, #4]
     9e4:	sub	r3, r3, #1
     9e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     9ec:	ldr	r1, [r2, #52]	; 0x34
     9f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
     9f4:	lsl	r2, r2, #2
     9f8:	add	r2, r1, r2
     9fc:	ldr	r2, [r2]
     a00:	ldr	r2, [r2, #8]
     a04:	ldr	r1, [fp, #-48]	; 0xffffffd0
     a08:	lsl	r3, r3, #4
     a0c:	add	r3, r1, r3
     a10:	str	r2, [r3, #8]
     a14:	b	a48 <coda_ascbin_cursor_goto_record_field_by_index+0x278>
     a18:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a1c:	ldr	r3, [r3, #4]
     a20:	sub	r4, r3, #1
     a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a28:	ldr	r3, [r3]
     a2c:	mov	r0, r3
     a30:	bl	0 <coda_no_data_singleton>
     a34:	mov	r1, r0
     a38:	ldr	r2, [fp, #-48]	; 0xffffffd0
     a3c:	lsl	r3, r4, #4
     a40:	add	r3, r2, r3
     a44:	str	r1, [r3, #8]
     a48:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a4c:	ldr	r3, [r3, #4]
     a50:	sub	r3, r3, #1
     a54:	ldr	r2, [fp, #-48]	; 0xffffffd0
     a58:	lsl	r3, r3, #4
     a5c:	add	r3, r2, r3
     a60:	ldr	r2, [fp, #-52]	; 0xffffffcc
     a64:	str	r2, [r3, #12]
     a68:	ldr	r3, [fp, #-48]	; 0xffffffd0
     a6c:	ldr	r3, [r3, #4]
     a70:	sub	r3, r3, #1
     a74:	ldr	r2, [fp, #-48]	; 0xffffffd0
     a78:	add	r3, r3, #1
     a7c:	lsl	r3, r3, #4
     a80:	add	r1, r2, r3
     a84:	ldrd	r2, [fp, #-20]	; 0xffffffec
     a88:	strd	r2, [r1]
     a8c:	mov	r3, #0
     a90:	mov	r0, r3
     a94:	sub	sp, fp, #8
     a98:	pop	{r4, fp, pc}
     a9c:	.word	0x000000e8
     aa0:	.word	0x00000000

00000aa4 <coda_ascbin_cursor_goto_next_record_field>:
     aa4:	push	{r4, fp, lr}
     aa8:	add	fp, sp, #8
     aac:	sub	sp, sp, #564	; 0x234
     ab0:	str	r0, [fp, #-568]	; 0xfffffdc8
     ab4:	mov	r3, #1
     ab8:	str	r3, [fp, #-32]	; 0xffffffe0
     abc:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     ac0:	ldr	r3, [r3, #4]
     ac4:	sub	r3, r3, #2
     ac8:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     acc:	lsl	r3, r3, #4
     ad0:	add	r3, r2, r3
     ad4:	ldr	r3, [r3, #8]
     ad8:	ldr	r3, [r3]
     adc:	cmp	r3, #99	; 0x63
     ae0:	bhi	b04 <coda_ascbin_cursor_goto_next_record_field+0x60>
     ae4:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     ae8:	ldr	r3, [r3, #4]
     aec:	sub	r3, r3, #2
     af0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     af4:	lsl	r3, r3, #4
     af8:	add	r3, r2, r3
     afc:	ldr	r3, [r3, #8]
     b00:	b	b24 <coda_ascbin_cursor_goto_next_record_field+0x80>
     b04:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     b08:	ldr	r3, [r3, #4]
     b0c:	sub	r3, r3, #2
     b10:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     b14:	lsl	r3, r3, #4
     b18:	add	r3, r2, r3
     b1c:	ldr	r3, [r3, #8]
     b20:	ldr	r3, [r3, #4]
     b24:	str	r3, [fp, #-24]	; 0xffffffe8
     b28:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     b2c:	ldr	r3, [r3, #4]
     b30:	sub	r3, r3, #1
     b34:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     b38:	lsl	r3, r3, #4
     b3c:	add	r3, r2, r3
     b40:	ldr	r3, [r3, #12]
     b44:	add	r3, r3, #1
     b48:	str	r3, [fp, #-28]	; 0xffffffe4
     b4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b50:	cmp	r3, #0
     b54:	blt	b6c <coda_ascbin_cursor_goto_next_record_field+0xc8>
     b58:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b5c:	ldr	r2, [r3, #48]	; 0x30
     b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b64:	cmp	r2, r3
     b68:	bgt	b8c <coda_ascbin_cursor_goto_next_record_field+0xe8>
     b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     b70:	ldr	r3, [r3, #48]	; 0x30
     b74:	ldr	r2, [fp, #-28]	; 0xffffffe4
     b78:	ldr	r1, [pc, #584]	; dc8 <coda_ascbin_cursor_goto_next_record_field+0x324>
     b7c:	mvn	r0, #100	; 0x64
     b80:	bl	0 <coda_set_error>
     b84:	mvn	r3, #0
     b88:	b	dbc <coda_ascbin_cursor_goto_next_record_field+0x318>
     b8c:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     b90:	ldr	r3, [r3, #4]
     b94:	sub	r3, r3, #2
     b98:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     b9c:	add	r3, r3, #1
     ba0:	lsl	r3, r3, #4
     ba4:	add	r3, r2, r3
     ba8:	ldrd	r2, [r3]
     bac:	strd	r2, [fp, #-20]	; 0xffffffec
     bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     bb4:	ldr	r3, [r3, #68]	; 0x44
     bb8:	cmp	r3, #0
     bbc:	beq	c28 <coda_ascbin_cursor_goto_next_record_field+0x184>
     bc0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     bc4:	sub	r3, fp, #564	; 0x234
     bc8:	mov	r1, r2
     bcc:	mov	r2, #520	; 0x208
     bd0:	mov	r0, r3
     bd4:	bl	0 <memcpy>
     bd8:	ldr	r3, [fp, #-560]	; 0xfffffdd0
     bdc:	sub	r3, r3, #1
     be0:	str	r3, [fp, #-560]	; 0xfffffdd0
     be4:	sub	r2, fp, #36	; 0x24
     be8:	sub	r3, fp, #564	; 0x234
     bec:	mov	r1, r2
     bf0:	mov	r0, r3
     bf4:	bl	0 <coda_cursor_get_available_union_field_index>
     bf8:	mov	r3, r0
     bfc:	cmp	r3, #0
     c00:	beq	c0c <coda_ascbin_cursor_goto_next_record_field+0x168>
     c04:	mvn	r3, #0
     c08:	b	dbc <coda_ascbin_cursor_goto_next_record_field+0x318>
     c0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
     c10:	ldr	r2, [fp, #-28]	; 0xffffffe4
     c14:	cmp	r2, r3
     c18:	beq	cfc <coda_ascbin_cursor_goto_next_record_field+0x258>
     c1c:	mov	r3, #0
     c20:	str	r3, [fp, #-32]	; 0xffffffe0
     c24:	b	cfc <coda_ascbin_cursor_goto_next_record_field+0x258>
     c28:	sub	r3, fp, #44	; 0x2c
     c2c:	mov	r2, #0
     c30:	mov	r1, r3
     c34:	ldr	r0, [fp, #-568]	; 0xfffffdc8
     c38:	bl	48c <get_next_relative_field_bit_offset>
     c3c:	mov	r3, r0
     c40:	cmp	r3, #0
     c44:	beq	c50 <coda_ascbin_cursor_goto_next_record_field+0x1ac>
     c48:	mvn	r3, #0
     c4c:	b	dbc <coda_ascbin_cursor_goto_next_record_field+0x318>
     c50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
     c54:	ldrd	r0, [fp, #-20]	; 0xffffffec
     c58:	adds	r2, r2, r0
     c5c:	adc	r3, r3, r1
     c60:	strd	r2, [fp, #-20]	; 0xffffffec
     c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c68:	ldr	r2, [r3, #52]	; 0x34
     c6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c70:	lsl	r3, r3, #2
     c74:	add	r3, r2, r3
     c78:	ldr	r3, [r3]
     c7c:	ldr	r3, [r3, #20]
     c80:	cmp	r3, #0
     c84:	beq	cfc <coda_ascbin_cursor_goto_next_record_field+0x258>
     c88:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     c8c:	sub	r3, fp, #564	; 0x234
     c90:	mov	r1, r2
     c94:	mov	r2, #520	; 0x208
     c98:	mov	r0, r3
     c9c:	bl	0 <memcpy>
     ca0:	ldr	r3, [fp, #-560]	; 0xfffffdd0
     ca4:	sub	r3, r3, #1
     ca8:	str	r3, [fp, #-560]	; 0xfffffdd0
     cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
     cb0:	ldr	r2, [r3, #52]	; 0x34
     cb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     cb8:	lsl	r3, r3, #2
     cbc:	add	r3, r2, r3
     cc0:	ldr	r3, [r3]
     cc4:	ldr	r3, [r3, #20]
     cc8:	sub	r2, fp, #32
     ccc:	sub	r1, fp, #564	; 0x234
     cd0:	mov	r0, r3
     cd4:	bl	0 <coda_expression_eval_bool>
     cd8:	mov	r3, r0
     cdc:	cmp	r3, #0
     ce0:	beq	cfc <coda_ascbin_cursor_goto_next_record_field+0x258>
     ce4:	ldr	r0, [pc, #224]	; dcc <coda_ascbin_cursor_goto_next_record_field+0x328>
     ce8:	bl	0 <coda_add_error_message>
     cec:	ldr	r0, [fp, #-568]	; 0xfffffdc8
     cf0:	bl	0 <coda_cursor_add_to_error_message>
     cf4:	mvn	r3, #0
     cf8:	b	dbc <coda_ascbin_cursor_goto_next_record_field+0x318>
     cfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d00:	cmp	r3, #0
     d04:	beq	d44 <coda_ascbin_cursor_goto_next_record_field+0x2a0>
     d08:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     d0c:	ldr	r3, [r3, #4]
     d10:	sub	r3, r3, #1
     d14:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d18:	ldr	r1, [r2, #52]	; 0x34
     d1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d20:	lsl	r2, r2, #2
     d24:	add	r2, r1, r2
     d28:	ldr	r2, [r2]
     d2c:	ldr	r2, [r2, #8]
     d30:	ldr	r1, [fp, #-568]	; 0xfffffdc8
     d34:	lsl	r3, r3, #4
     d38:	add	r3, r1, r3
     d3c:	str	r2, [r3, #8]
     d40:	b	d74 <coda_ascbin_cursor_goto_next_record_field+0x2d0>
     d44:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     d48:	ldr	r3, [r3, #4]
     d4c:	sub	r4, r3, #1
     d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d54:	ldr	r3, [r3]
     d58:	mov	r0, r3
     d5c:	bl	0 <coda_no_data_singleton>
     d60:	mov	r1, r0
     d64:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     d68:	lsl	r3, r4, #4
     d6c:	add	r3, r2, r3
     d70:	str	r1, [r3, #8]
     d74:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     d78:	ldr	r3, [r3, #4]
     d7c:	sub	r3, r3, #1
     d80:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     d84:	lsl	r3, r3, #4
     d88:	add	r3, r2, r3
     d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d90:	str	r2, [r3, #12]
     d94:	ldr	r3, [fp, #-568]	; 0xfffffdc8
     d98:	ldr	r3, [r3, #4]
     d9c:	sub	r3, r3, #1
     da0:	ldr	r2, [fp, #-568]	; 0xfffffdc8
     da4:	add	r3, r3, #1
     da8:	lsl	r3, r3, #4
     dac:	add	r1, r2, r3
     db0:	ldrd	r2, [fp, #-20]	; 0xffffffec
     db4:	strd	r2, [r1]
     db8:	mov	r3, #0
     dbc:	mov	r0, r3
     dc0:	sub	sp, fp, #8
     dc4:	pop	{r4, fp, pc}
     dc8:	.word	0x000000e8
     dcc:	.word	0x00000000

00000dd0 <coda_ascbin_cursor_goto_available_union_field>:
     dd0:	push	{fp, lr}
     dd4:	add	fp, sp, #4
     dd8:	sub	sp, sp, #16
     ddc:	str	r0, [fp, #-16]
     de0:	ldr	r3, [fp, #-16]
     de4:	ldr	r3, [r3, #4]
     de8:	sub	r3, r3, #1
     dec:	ldr	r2, [fp, #-16]
     df0:	lsl	r3, r3, #4
     df4:	add	r3, r2, r3
     df8:	ldr	r3, [r3, #8]
     dfc:	ldr	r3, [r3]
     e00:	cmp	r3, #99	; 0x63
     e04:	bhi	e28 <coda_ascbin_cursor_goto_available_union_field+0x58>
     e08:	ldr	r3, [fp, #-16]
     e0c:	ldr	r3, [r3, #4]
     e10:	sub	r3, r3, #1
     e14:	ldr	r2, [fp, #-16]
     e18:	lsl	r3, r3, #4
     e1c:	add	r3, r2, r3
     e20:	ldr	r3, [r3, #8]
     e24:	b	e48 <coda_ascbin_cursor_goto_available_union_field+0x78>
     e28:	ldr	r3, [fp, #-16]
     e2c:	ldr	r3, [r3, #4]
     e30:	sub	r3, r3, #1
     e34:	ldr	r2, [fp, #-16]
     e38:	lsl	r3, r3, #4
     e3c:	add	r3, r2, r3
     e40:	ldr	r3, [r3, #8]
     e44:	ldr	r3, [r3, #4]
     e48:	str	r3, [fp, #-8]
     e4c:	ldr	r3, [fp, #-8]
     e50:	ldr	r3, [r3, #68]	; 0x44
     e54:	cmp	r3, #0
     e58:	bne	e70 <coda_ascbin_cursor_goto_available_union_field+0xa0>
     e5c:	ldr	r1, [pc, #236]	; f50 <coda_ascbin_cursor_goto_available_union_field+0x180>
     e60:	mvn	r0, #104	; 0x68
     e64:	bl	0 <coda_set_error>
     e68:	mvn	r3, #0
     e6c:	b	f44 <coda_ascbin_cursor_goto_available_union_field+0x174>
     e70:	sub	r3, fp, #12
     e74:	mov	r1, r3
     e78:	ldr	r0, [fp, #-16]
     e7c:	bl	25b4 <coda_ascbin_cursor_get_available_union_field_index>
     e80:	mov	r3, r0
     e84:	cmp	r3, #0
     e88:	beq	e94 <coda_ascbin_cursor_goto_available_union_field+0xc4>
     e8c:	mvn	r3, #0
     e90:	b	f44 <coda_ascbin_cursor_goto_available_union_field+0x174>
     e94:	ldr	r3, [fp, #-16]
     e98:	ldr	r3, [r3, #4]
     e9c:	add	r2, r3, #1
     ea0:	ldr	r3, [fp, #-16]
     ea4:	str	r2, [r3, #4]
     ea8:	ldr	r3, [fp, #-16]
     eac:	ldr	r3, [r3, #4]
     eb0:	sub	r3, r3, #1
     eb4:	ldr	r2, [fp, #-8]
     eb8:	ldr	r1, [r2, #52]	; 0x34
     ebc:	ldr	r2, [fp, #-12]
     ec0:	lsl	r2, r2, #2
     ec4:	add	r2, r1, r2
     ec8:	ldr	r2, [r2]
     ecc:	ldr	r2, [r2, #8]
     ed0:	ldr	r1, [fp, #-16]
     ed4:	lsl	r3, r3, #4
     ed8:	add	r3, r1, r3
     edc:	str	r2, [r3, #8]
     ee0:	ldr	r3, [fp, #-16]
     ee4:	ldr	r3, [r3, #4]
     ee8:	sub	r3, r3, #1
     eec:	ldr	r2, [fp, #-12]
     ef0:	ldr	r1, [fp, #-16]
     ef4:	lsl	r3, r3, #4
     ef8:	add	r3, r1, r3
     efc:	str	r2, [r3, #12]
     f00:	ldr	r3, [fp, #-16]
     f04:	ldr	r3, [r3, #4]
     f08:	sub	r1, r3, #1
     f0c:	ldr	r3, [fp, #-16]
     f10:	ldr	r3, [r3, #4]
     f14:	sub	r3, r3, #2
     f18:	ldr	r2, [fp, #-16]
     f1c:	add	r3, r3, #1
     f20:	lsl	r3, r3, #4
     f24:	add	r3, r2, r3
     f28:	ldrd	r2, [r3]
     f2c:	ldr	r0, [fp, #-16]
     f30:	add	r1, r1, #1
     f34:	lsl	r1, r1, #4
     f38:	add	r1, r0, r1
     f3c:	strd	r2, [r1]
     f40:	mov	r3, #0
     f44:	mov	r0, r3
     f48:	sub	sp, fp, #4
     f4c:	pop	{fp, pc}
     f50:	.word	0x00000118

00000f54 <coda_ascbin_cursor_goto_array_element>:
     f54:	push	{r4, r5, r6, fp, lr}
     f58:	add	fp, sp, #16
     f5c:	sub	sp, sp, #52	; 0x34
     f60:	str	r0, [fp, #-56]	; 0xffffffc8
     f64:	str	r1, [fp, #-60]	; 0xffffffc4
     f68:	str	r2, [fp, #-64]	; 0xffffffc0
     f6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f70:	ldr	r3, [r3, #4]
     f74:	sub	r3, r3, #1
     f78:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f7c:	lsl	r3, r3, #4
     f80:	add	r3, r2, r3
     f84:	ldr	r3, [r3, #8]
     f88:	ldr	r3, [r3]
     f8c:	cmp	r3, #99	; 0x63
     f90:	bhi	fb4 <coda_ascbin_cursor_goto_array_element+0x60>
     f94:	ldr	r3, [fp, #-56]	; 0xffffffc8
     f98:	ldr	r3, [r3, #4]
     f9c:	sub	r3, r3, #1
     fa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     fa4:	lsl	r3, r3, #4
     fa8:	add	r3, r2, r3
     fac:	ldr	r3, [r3, #8]
     fb0:	b	fd4 <coda_ascbin_cursor_goto_array_element+0x80>
     fb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     fb8:	ldr	r3, [r3, #4]
     fbc:	sub	r3, r3, #1
     fc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     fc4:	lsl	r3, r3, #4
     fc8:	add	r3, r2, r3
     fcc:	ldr	r3, [r3, #8]
     fd0:	ldr	r3, [r3, #4]
     fd4:	str	r3, [fp, #-36]	; 0xffffffdc
     fd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fdc:	ldr	r2, [r3, #48]	; 0x30
     fe0:	ldr	r3, [fp, #-60]	; 0xffffffc4
     fe4:	cmp	r2, r3
     fe8:	beq	100c <coda_ascbin_cursor_goto_array_element+0xb8>
     fec:	ldr	r3, [fp, #-36]	; 0xffffffdc
     ff0:	ldr	r3, [r3, #48]	; 0x30
     ff4:	ldr	r2, [fp, #-60]	; 0xffffffc4
     ff8:	ldr	r1, [pc, #940]	; 13ac <coda_ascbin_cursor_goto_array_element+0x458>
     ffc:	mvn	r0, #105	; 0x69
    1000:	bl	0 <coda_set_error>
    1004:	mvn	r3, #0
    1008:	b	13a0 <coda_ascbin_cursor_goto_array_element+0x44c>
    100c:	mov	r3, #0
    1010:	str	r3, [fp, #-24]	; 0xffffffe8
    1014:	mov	r3, #0
    1018:	str	r3, [fp, #-28]	; 0xffffffe4
    101c:	b	116c <coda_ascbin_cursor_goto_array_element+0x218>
    1020:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1024:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1028:	add	r3, r3, #12
    102c:	lsl	r3, r3, #2
    1030:	add	r3, r2, r3
    1034:	ldr	r3, [r3, #4]
    1038:	cmn	r3, #1
    103c:	bne	10a0 <coda_ascbin_cursor_goto_array_element+0x14c>
    1040:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1044:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1048:	add	r3, r3, #20
    104c:	lsl	r3, r3, #2
    1050:	add	r3, r2, r3
    1054:	ldr	r3, [r3, #4]
    1058:	sub	r2, fp, #44	; 0x2c
    105c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    1060:	mov	r0, r3
    1064:	bl	0 <coda_expression_eval_integer>
    1068:	mov	r3, r0
    106c:	cmp	r3, #0
    1070:	beq	1090 <coda_ascbin_cursor_goto_array_element+0x13c>
    1074:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1078:	ldr	r0, [pc, #816]	; 13b0 <coda_ascbin_cursor_goto_array_element+0x45c>
    107c:	bl	0 <coda_add_error_message>
    1080:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1084:	bl	0 <coda_cursor_add_to_error_message>
    1088:	mvn	r3, #0
    108c:	b	13a0 <coda_ascbin_cursor_goto_array_element+0x44c>
    1090:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    1094:	mov	r3, r2
    1098:	str	r3, [fp, #-32]	; 0xffffffe0
    109c:	b	10bc <coda_ascbin_cursor_goto_array_element+0x168>
    10a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    10a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10a8:	add	r3, r3, #12
    10ac:	lsl	r3, r3, #2
    10b0:	add	r3, r2, r3
    10b4:	ldr	r3, [r3, #4]
    10b8:	str	r3, [fp, #-32]	; 0xffffffe0
    10bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10c0:	lsl	r3, r3, #2
    10c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    10c8:	add	r3, r2, r3
    10cc:	ldr	r3, [r3]
    10d0:	cmp	r3, #0
    10d4:	blt	10f8 <coda_ascbin_cursor_goto_array_element+0x1a4>
    10d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10dc:	lsl	r3, r3, #2
    10e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    10e4:	add	r3, r2, r3
    10e8:	ldr	r2, [r3]
    10ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    10f0:	cmp	r2, r3
    10f4:	blt	1124 <coda_ascbin_cursor_goto_array_element+0x1d0>
    10f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10fc:	lsl	r3, r3, #2
    1100:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1104:	add	r3, r2, r3
    1108:	ldr	r2, [r3]
    110c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1110:	ldr	r1, [pc, #668]	; 13b4 <coda_ascbin_cursor_goto_array_element+0x460>
    1114:	mvn	r0, #106	; 0x6a
    1118:	bl	0 <coda_set_error>
    111c:	mvn	r3, #0
    1120:	b	13a0 <coda_ascbin_cursor_goto_array_element+0x44c>
    1124:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1128:	cmp	r3, #0
    112c:	ble	1140 <coda_ascbin_cursor_goto_array_element+0x1ec>
    1130:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1134:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1138:	mul	r3, r2, r3
    113c:	str	r3, [fp, #-24]	; 0xffffffe8
    1140:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1144:	lsl	r3, r3, #2
    1148:	ldr	r2, [fp, #-64]	; 0xffffffc0
    114c:	add	r3, r2, r3
    1150:	ldr	r3, [r3]
    1154:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1158:	add	r3, r2, r3
    115c:	str	r3, [fp, #-24]	; 0xffffffe8
    1160:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1164:	add	r3, r3, #1
    1168:	str	r3, [fp, #-28]	; 0xffffffe4
    116c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1170:	ldr	r2, [r3, #48]	; 0x30
    1174:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1178:	cmp	r2, r3
    117c:	bgt	1020 <coda_ascbin_cursor_goto_array_element+0xcc>
    1180:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1184:	ldr	r3, [r3, #4]
    1188:	add	r2, r3, #1
    118c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1190:	str	r2, [r3, #4]
    1194:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1198:	ldr	r3, [r3, #4]
    119c:	sub	r1, r3, #1
    11a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    11a4:	ldr	r3, [r3, #4]
    11a8:	sub	r3, r3, #2
    11ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11b0:	add	r3, r3, #1
    11b4:	lsl	r3, r3, #4
    11b8:	add	r3, r2, r3
    11bc:	ldrd	r2, [r3]
    11c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    11c4:	add	r1, r1, #1
    11c8:	lsl	r1, r1, #4
    11cc:	add	r1, r0, r1
    11d0:	strd	r2, [r1]
    11d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    11d8:	ldr	r3, [r3, #40]	; 0x28
    11dc:	ldrd	r2, [r3, #24]
    11e0:	cmp	r2, #0
    11e4:	sbcs	r3, r3, #0
    11e8:	blt	1268 <coda_ascbin_cursor_goto_array_element+0x314>
    11ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    11f0:	ldr	r3, [r3, #4]
    11f4:	sub	ip, r3, #1
    11f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    11fc:	ldr	r3, [r3, #4]
    1200:	sub	r3, r3, #1
    1204:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1208:	add	r3, r3, #1
    120c:	lsl	r3, r3, #4
    1210:	add	r3, r2, r3
    1214:	ldrd	r4, [r3]
    1218:	ldr	r3, [fp, #-24]	; 0xffffffe8
    121c:	mov	r0, r3
    1220:	asr	r1, r0, #31
    1224:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1228:	ldr	r3, [r3, #40]	; 0x28
    122c:	ldrd	r2, [r3, #24]
    1230:	mul	r6, r2, r1
    1234:	mul	lr, r0, r3
    1238:	add	lr, r6, lr
    123c:	umull	r2, r3, r0, r2
    1240:	add	r1, lr, r3
    1244:	mov	r3, r1
    1248:	adds	r2, r2, r4
    124c:	adc	r3, r3, r5
    1250:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1254:	add	r1, ip, #1
    1258:	lsl	r1, r1, #4
    125c:	add	r1, r0, r1
    1260:	strd	r2, [r1]
    1264:	b	1358 <coda_ascbin_cursor_goto_array_element+0x404>
    1268:	mov	r3, #0
    126c:	str	r3, [fp, #-28]	; 0xffffffe4
    1270:	b	1348 <coda_ascbin_cursor_goto_array_element+0x3f4>
    1274:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1278:	ldr	r3, [r3, #4]
    127c:	sub	r3, r3, #1
    1280:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1284:	ldr	r2, [r2, #40]	; 0x28
    1288:	ldr	r1, [fp, #-56]	; 0xffffffc8
    128c:	lsl	r3, r3, #4
    1290:	add	r3, r1, r3
    1294:	str	r2, [r3, #8]
    1298:	ldr	r3, [fp, #-56]	; 0xffffffc8
    129c:	ldr	r3, [r3, #4]
    12a0:	sub	r3, r3, #1
    12a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12a8:	lsl	r3, r3, #4
    12ac:	add	r3, r2, r3
    12b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    12b4:	str	r2, [r3, #12]
    12b8:	sub	r3, fp, #52	; 0x34
    12bc:	mov	r1, r3
    12c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    12c4:	bl	0 <coda_cursor_get_bit_size>
    12c8:	mov	r3, r0
    12cc:	cmp	r3, #0
    12d0:	beq	12f0 <coda_ascbin_cursor_goto_array_element+0x39c>
    12d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12d8:	ldr	r3, [r3, #4]
    12dc:	sub	r2, r3, #1
    12e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12e4:	str	r2, [r3, #4]
    12e8:	mvn	r3, #0
    12ec:	b	13a0 <coda_ascbin_cursor_goto_array_element+0x44c>
    12f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    12f4:	ldr	r3, [r3, #4]
    12f8:	sub	ip, r3, #1
    12fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1300:	ldr	r3, [r3, #4]
    1304:	sub	r3, r3, #1
    1308:	ldr	r2, [fp, #-56]	; 0xffffffc8
    130c:	add	r3, r3, #1
    1310:	lsl	r3, r3, #4
    1314:	add	r3, r2, r3
    1318:	ldrd	r0, [r3]
    131c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    1320:	adds	r2, r2, r0
    1324:	adc	r3, r3, r1
    1328:	ldr	r0, [fp, #-56]	; 0xffffffc8
    132c:	add	r1, ip, #1
    1330:	lsl	r1, r1, #4
    1334:	add	r1, r0, r1
    1338:	strd	r2, [r1]
    133c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1340:	add	r3, r3, #1
    1344:	str	r3, [fp, #-28]	; 0xffffffe4
    1348:	ldr	r2, [fp, #-28]	; 0xffffffe4
    134c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1350:	cmp	r2, r3
    1354:	blt	1274 <coda_ascbin_cursor_goto_array_element+0x320>
    1358:	ldr	r3, [fp, #-56]	; 0xffffffc8
    135c:	ldr	r3, [r3, #4]
    1360:	sub	r3, r3, #1
    1364:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1368:	ldr	r2, [r2, #40]	; 0x28
    136c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    1370:	lsl	r3, r3, #4
    1374:	add	r3, r1, r3
    1378:	str	r2, [r3, #8]
    137c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1380:	ldr	r3, [r3, #4]
    1384:	sub	r3, r3, #1
    1388:	ldr	r2, [fp, #-56]	; 0xffffffc8
    138c:	lsl	r3, r3, #4
    1390:	add	r3, r2, r3
    1394:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1398:	str	r2, [r3, #12]
    139c:	mov	r3, #0
    13a0:	mov	r0, r3
    13a4:	sub	sp, fp, #16
    13a8:	pop	{r4, r5, r6, fp, pc}
    13ac:	.word	0x0000013c
    13b0:	.word	0x00000184
    13b4:	.word	0x0000019c

000013b8 <coda_ascbin_cursor_goto_array_element_by_index>:
    13b8:	push	{r4, r5, r6, fp, lr}
    13bc:	add	fp, sp, #16
    13c0:	sub	sp, sp, #36	; 0x24
    13c4:	str	r0, [fp, #-48]	; 0xffffffd0
    13c8:	str	r1, [fp, #-52]	; 0xffffffcc
    13cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    13d0:	ldr	r3, [r3, #4]
    13d4:	sub	r3, r3, #1
    13d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    13dc:	lsl	r3, r3, #4
    13e0:	add	r3, r2, r3
    13e4:	ldr	r3, [r3, #8]
    13e8:	ldr	r3, [r3]
    13ec:	cmp	r3, #99	; 0x63
    13f0:	bhi	1414 <coda_ascbin_cursor_goto_array_element_by_index+0x5c>
    13f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    13f8:	ldr	r3, [r3, #4]
    13fc:	sub	r3, r3, #1
    1400:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1404:	lsl	r3, r3, #4
    1408:	add	r3, r2, r3
    140c:	ldr	r3, [r3, #8]
    1410:	b	1434 <coda_ascbin_cursor_goto_array_element_by_index+0x7c>
    1414:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1418:	ldr	r3, [r3, #4]
    141c:	sub	r3, r3, #1
    1420:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1424:	lsl	r3, r3, #4
    1428:	add	r3, r2, r3
    142c:	ldr	r3, [r3, #8]
    1430:	ldr	r3, [r3, #4]
    1434:	str	r3, [fp, #-28]	; 0xffffffe4
    1438:	ldr	r3, [pc, #668]	; 16dc <coda_ascbin_cursor_goto_array_element_by_index+0x324>
    143c:	ldr	r3, [pc, r3]
    1440:	bl	0 <__aeabi_read_tp>
    1444:	mov	r2, r0
    1448:	ldr	r3, [r2, r3]
    144c:	cmp	r3, #0
    1450:	beq	14b0 <coda_ascbin_cursor_goto_array_element_by_index+0xf8>
    1454:	sub	r3, fp, #32
    1458:	mov	r1, r3
    145c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1460:	bl	0 <coda_cursor_get_num_elements>
    1464:	mov	r3, r0
    1468:	cmp	r3, #0
    146c:	beq	1478 <coda_ascbin_cursor_goto_array_element_by_index+0xc0>
    1470:	mvn	r3, #0
    1474:	b	16d0 <coda_ascbin_cursor_goto_array_element_by_index+0x318>
    1478:	ldr	r3, [fp, #-52]	; 0xffffffcc
    147c:	cmp	r3, #0
    1480:	blt	1494 <coda_ascbin_cursor_goto_array_element_by_index+0xdc>
    1484:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1488:	ldr	r2, [fp, #-52]	; 0xffffffcc
    148c:	cmp	r2, r3
    1490:	blt	14b0 <coda_ascbin_cursor_goto_array_element_by_index+0xf8>
    1494:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1498:	ldr	r2, [fp, #-52]	; 0xffffffcc
    149c:	ldr	r1, [pc, #572]	; 16e0 <coda_ascbin_cursor_goto_array_element_by_index+0x328>
    14a0:	mvn	r0, #106	; 0x6a
    14a4:	bl	0 <coda_set_error>
    14a8:	mvn	r3, #0
    14ac:	b	16d0 <coda_ascbin_cursor_goto_array_element_by_index+0x318>
    14b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    14b4:	ldr	r3, [r3, #4]
    14b8:	add	r2, r3, #1
    14bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    14c0:	str	r2, [r3, #4]
    14c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    14c8:	ldr	r3, [r3, #4]
    14cc:	sub	r1, r3, #1
    14d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    14d4:	ldr	r3, [r3, #4]
    14d8:	sub	r3, r3, #2
    14dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    14e0:	add	r3, r3, #1
    14e4:	lsl	r3, r3, #4
    14e8:	add	r3, r2, r3
    14ec:	ldrd	r2, [r3]
    14f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    14f4:	add	r1, r1, #1
    14f8:	lsl	r1, r1, #4
    14fc:	add	r1, r0, r1
    1500:	strd	r2, [r1]
    1504:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1508:	ldr	r3, [r3, #40]	; 0x28
    150c:	ldrd	r2, [r3, #24]
    1510:	cmp	r2, #0
    1514:	sbcs	r3, r3, #0
    1518:	blt	1598 <coda_ascbin_cursor_goto_array_element_by_index+0x1e0>
    151c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1520:	ldr	r3, [r3, #4]
    1524:	sub	ip, r3, #1
    1528:	ldr	r3, [fp, #-48]	; 0xffffffd0
    152c:	ldr	r3, [r3, #4]
    1530:	sub	r3, r3, #1
    1534:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1538:	add	r3, r3, #1
    153c:	lsl	r3, r3, #4
    1540:	add	r3, r2, r3
    1544:	ldrd	r4, [r3]
    1548:	ldr	r3, [fp, #-52]	; 0xffffffcc
    154c:	mov	r0, r3
    1550:	asr	r1, r0, #31
    1554:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1558:	ldr	r3, [r3, #40]	; 0x28
    155c:	ldrd	r2, [r3, #24]
    1560:	mul	r6, r2, r1
    1564:	mul	lr, r0, r3
    1568:	add	lr, r6, lr
    156c:	umull	r2, r3, r0, r2
    1570:	add	r1, lr, r3
    1574:	mov	r3, r1
    1578:	adds	r2, r2, r4
    157c:	adc	r3, r3, r5
    1580:	ldr	r0, [fp, #-48]	; 0xffffffd0
    1584:	add	r1, ip, #1
    1588:	lsl	r1, r1, #4
    158c:	add	r1, r0, r1
    1590:	strd	r2, [r1]
    1594:	b	1688 <coda_ascbin_cursor_goto_array_element_by_index+0x2d0>
    1598:	mov	r3, #0
    159c:	str	r3, [fp, #-24]	; 0xffffffe8
    15a0:	b	1678 <coda_ascbin_cursor_goto_array_element_by_index+0x2c0>
    15a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    15a8:	ldr	r3, [r3, #4]
    15ac:	sub	r3, r3, #1
    15b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    15b4:	ldr	r2, [r2, #40]	; 0x28
    15b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15bc:	lsl	r3, r3, #4
    15c0:	add	r3, r1, r3
    15c4:	str	r2, [r3, #8]
    15c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    15cc:	ldr	r3, [r3, #4]
    15d0:	sub	r3, r3, #1
    15d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    15d8:	lsl	r3, r3, #4
    15dc:	add	r3, r2, r3
    15e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15e4:	str	r2, [r3, #12]
    15e8:	sub	r3, fp, #44	; 0x2c
    15ec:	mov	r1, r3
    15f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    15f4:	bl	0 <coda_cursor_get_bit_size>
    15f8:	mov	r3, r0
    15fc:	cmp	r3, #0
    1600:	beq	1620 <coda_ascbin_cursor_goto_array_element_by_index+0x268>
    1604:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1608:	ldr	r3, [r3, #4]
    160c:	sub	r2, r3, #1
    1610:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1614:	str	r2, [r3, #4]
    1618:	mvn	r3, #0
    161c:	b	16d0 <coda_ascbin_cursor_goto_array_element_by_index+0x318>
    1620:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1624:	ldr	r3, [r3, #4]
    1628:	sub	ip, r3, #1
    162c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1630:	ldr	r3, [r3, #4]
    1634:	sub	r3, r3, #1
    1638:	ldr	r2, [fp, #-48]	; 0xffffffd0
    163c:	add	r3, r3, #1
    1640:	lsl	r3, r3, #4
    1644:	add	r3, r2, r3
    1648:	ldrd	r0, [r3]
    164c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    1650:	adds	r2, r2, r0
    1654:	adc	r3, r3, r1
    1658:	ldr	r0, [fp, #-48]	; 0xffffffd0
    165c:	add	r1, ip, #1
    1660:	lsl	r1, r1, #4
    1664:	add	r1, r0, r1
    1668:	strd	r2, [r1]
    166c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1670:	add	r3, r3, #1
    1674:	str	r3, [fp, #-24]	; 0xffffffe8
    1678:	ldr	r2, [fp, #-24]	; 0xffffffe8
    167c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1680:	cmp	r2, r3
    1684:	blt	15a4 <coda_ascbin_cursor_goto_array_element_by_index+0x1ec>
    1688:	ldr	r3, [fp, #-48]	; 0xffffffd0
    168c:	ldr	r3, [r3, #4]
    1690:	sub	r3, r3, #1
    1694:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1698:	ldr	r2, [r2, #40]	; 0x28
    169c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    16a0:	lsl	r3, r3, #4
    16a4:	add	r3, r1, r3
    16a8:	str	r2, [r3, #8]
    16ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    16b0:	ldr	r3, [r3, #4]
    16b4:	sub	r3, r3, #1
    16b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    16bc:	lsl	r3, r3, #4
    16c0:	add	r3, r2, r3
    16c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    16c8:	str	r2, [r3, #12]
    16cc:	mov	r3, #0
    16d0:	mov	r0, r3
    16d4:	sub	sp, fp, #16
    16d8:	pop	{r4, r5, r6, fp, pc}
    16dc:	.word	0x00000298
    16e0:	.word	0x0000019c

000016e4 <coda_ascbin_cursor_goto_next_array_element>:
    16e4:	push	{fp, lr}
    16e8:	add	fp, sp, #4
    16ec:	sub	sp, sp, #32
    16f0:	str	r0, [fp, #-32]	; 0xffffffe0
    16f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    16f8:	ldr	r3, [r3, #4]
    16fc:	sub	r3, r3, #2
    1700:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1704:	lsl	r3, r3, #4
    1708:	add	r3, r2, r3
    170c:	ldr	r3, [r3, #8]
    1710:	ldr	r3, [r3]
    1714:	cmp	r3, #99	; 0x63
    1718:	bhi	173c <coda_ascbin_cursor_goto_next_array_element+0x58>
    171c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1720:	ldr	r3, [r3, #4]
    1724:	sub	r3, r3, #2
    1728:	ldr	r2, [fp, #-32]	; 0xffffffe0
    172c:	lsl	r3, r3, #4
    1730:	add	r3, r2, r3
    1734:	ldr	r3, [r3, #8]
    1738:	b	175c <coda_ascbin_cursor_goto_next_array_element+0x78>
    173c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1740:	ldr	r3, [r3, #4]
    1744:	sub	r3, r3, #2
    1748:	ldr	r2, [fp, #-32]	; 0xffffffe0
    174c:	lsl	r3, r3, #4
    1750:	add	r3, r2, r3
    1754:	ldr	r3, [r3, #8]
    1758:	ldr	r3, [r3, #4]
    175c:	str	r3, [fp, #-8]
    1760:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1764:	ldr	r3, [r3, #4]
    1768:	sub	r3, r3, #1
    176c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1770:	lsl	r3, r3, #4
    1774:	add	r3, r2, r3
    1778:	ldr	r3, [r3, #12]
    177c:	add	r3, r3, #1
    1780:	str	r3, [fp, #-12]
    1784:	ldr	r3, [pc, #368]	; 18fc <coda_ascbin_cursor_goto_next_array_element+0x218>
    1788:	ldr	r3, [pc, r3]
    178c:	bl	0 <__aeabi_read_tp>
    1790:	mov	r2, r0
    1794:	ldr	r3, [r2, r3]
    1798:	cmp	r3, #0
    179c:	beq	1838 <coda_ascbin_cursor_goto_next_array_element+0x154>
    17a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17a4:	ldr	r3, [r3, #4]
    17a8:	sub	r2, r3, #1
    17ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17b0:	str	r2, [r3, #4]
    17b4:	sub	r3, fp, #24
    17b8:	mov	r1, r3
    17bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    17c0:	bl	0 <coda_cursor_get_num_elements>
    17c4:	mov	r3, r0
    17c8:	cmp	r3, #0
    17cc:	beq	17ec <coda_ascbin_cursor_goto_next_array_element+0x108>
    17d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17d4:	ldr	r3, [r3, #4]
    17d8:	add	r2, r3, #1
    17dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17e0:	str	r2, [r3, #4]
    17e4:	mvn	r3, #0
    17e8:	b	18f0 <coda_ascbin_cursor_goto_next_array_element+0x20c>
    17ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17f0:	ldr	r3, [r3, #4]
    17f4:	add	r2, r3, #1
    17f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17fc:	str	r2, [r3, #4]
    1800:	ldr	r3, [fp, #-12]
    1804:	cmp	r3, #0
    1808:	blt	181c <coda_ascbin_cursor_goto_next_array_element+0x138>
    180c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1810:	ldr	r2, [fp, #-12]
    1814:	cmp	r2, r3
    1818:	blt	1838 <coda_ascbin_cursor_goto_next_array_element+0x154>
    181c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1820:	ldr	r2, [fp, #-12]
    1824:	ldr	r1, [pc, #212]	; 1900 <coda_ascbin_cursor_goto_next_array_element+0x21c>
    1828:	mvn	r0, #106	; 0x6a
    182c:	bl	0 <coda_set_error>
    1830:	mvn	r3, #0
    1834:	b	18f0 <coda_ascbin_cursor_goto_next_array_element+0x20c>
    1838:	sub	r3, fp, #20
    183c:	mov	r1, r3
    1840:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1844:	bl	0 <coda_cursor_get_bit_size>
    1848:	mov	r3, r0
    184c:	cmp	r3, #0
    1850:	beq	185c <coda_ascbin_cursor_goto_next_array_element+0x178>
    1854:	mvn	r3, #0
    1858:	b	18f0 <coda_ascbin_cursor_goto_next_array_element+0x20c>
    185c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1860:	ldr	r3, [r3, #4]
    1864:	sub	r3, r3, #1
    1868:	ldr	r2, [fp, #-8]
    186c:	ldr	r2, [r2, #40]	; 0x28
    1870:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1874:	lsl	r3, r3, #4
    1878:	add	r3, r1, r3
    187c:	str	r2, [r3, #8]
    1880:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1884:	ldr	r3, [r3, #4]
    1888:	sub	r3, r3, #1
    188c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1890:	lsl	r3, r3, #4
    1894:	add	r3, r2, r3
    1898:	ldr	r2, [fp, #-12]
    189c:	str	r2, [r3, #12]
    18a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    18a4:	ldr	r3, [r3, #4]
    18a8:	sub	ip, r3, #1
    18ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    18b0:	ldr	r3, [r3, #4]
    18b4:	sub	r3, r3, #1
    18b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    18bc:	add	r3, r3, #1
    18c0:	lsl	r3, r3, #4
    18c4:	add	r3, r2, r3
    18c8:	ldrd	r0, [r3]
    18cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    18d0:	adds	r2, r2, r0
    18d4:	adc	r3, r3, r1
    18d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    18dc:	add	r1, ip, #1
    18e0:	lsl	r1, r1, #4
    18e4:	add	r1, r0, r1
    18e8:	strd	r2, [r1]
    18ec:	mov	r3, #0
    18f0:	mov	r0, r3
    18f4:	sub	sp, fp, #4
    18f8:	pop	{fp, pc}
    18fc:	.word	0x0000016c
    1900:	.word	0x0000019c

00001904 <coda_ascbin_cursor_goto_attributes>:
    1904:	push	{r4, fp, lr}
    1908:	add	fp, sp, #8
    190c:	sub	sp, sp, #20
    1910:	str	r0, [fp, #-24]	; 0xffffffe8
    1914:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1918:	ldr	r3, [r3, #4]
    191c:	sub	r3, r3, #1
    1920:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1924:	lsl	r3, r3, #4
    1928:	add	r3, r2, r3
    192c:	ldr	r3, [r3, #8]
    1930:	ldr	r3, [r3]
    1934:	cmp	r3, #99	; 0x63
    1938:	bhi	195c <coda_ascbin_cursor_goto_attributes+0x58>
    193c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1940:	ldr	r3, [r3, #4]
    1944:	sub	r3, r3, #1
    1948:	ldr	r2, [fp, #-24]	; 0xffffffe8
    194c:	lsl	r3, r3, #4
    1950:	add	r3, r2, r3
    1954:	ldr	r3, [r3, #8]
    1958:	b	197c <coda_ascbin_cursor_goto_attributes+0x78>
    195c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1960:	ldr	r3, [r3, #4]
    1964:	sub	r3, r3, #1
    1968:	ldr	r2, [fp, #-24]	; 0xffffffe8
    196c:	lsl	r3, r3, #4
    1970:	add	r3, r2, r3
    1974:	ldr	r3, [r3, #8]
    1978:	ldr	r3, [r3, #4]
    197c:	ldr	r3, [r3]
    1980:	str	r3, [fp, #-16]
    1984:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1988:	ldr	r3, [r3, #4]
    198c:	add	r2, r3, #1
    1990:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1994:	str	r2, [r3, #4]
    1998:	ldr	r3, [fp, #-24]	; 0xffffffe8
    199c:	ldr	r3, [r3, #4]
    19a0:	sub	r4, r3, #1
    19a4:	ldr	r0, [fp, #-16]
    19a8:	bl	0 <coda_type_empty_record>
    19ac:	mov	r1, r0
    19b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    19b4:	lsl	r3, r4, #4
    19b8:	add	r3, r2, r3
    19bc:	str	r1, [r3, #8]
    19c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    19c4:	ldr	r3, [r3, #4]
    19c8:	sub	r3, r3, #1
    19cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    19d0:	lsl	r3, r3, #4
    19d4:	add	r3, r2, r3
    19d8:	mvn	r2, #0
    19dc:	str	r2, [r3, #12]
    19e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    19e4:	ldr	r3, [r3, #4]
    19e8:	sub	r3, r3, #1
    19ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    19f0:	add	r3, r3, #1
    19f4:	lsl	r3, r3, #4
    19f8:	add	r1, r2, r3
    19fc:	mvn	r2, #0
    1a00:	mvn	r3, #0
    1a04:	strd	r2, [r1]
    1a08:	mov	r3, #0
    1a0c:	mov	r0, r3
    1a10:	sub	sp, fp, #8
    1a14:	pop	{r4, fp, pc}

00001a18 <coda_ascbin_cursor_use_base_type_of_special_type>:
    1a18:	push	{fp}		; (str fp, [sp, #-4]!)
    1a1c:	add	fp, sp, #0
    1a20:	sub	sp, sp, #20
    1a24:	str	r0, [fp, #-16]
    1a28:	ldr	r3, [fp, #-16]
    1a2c:	ldr	r3, [r3, #4]
    1a30:	sub	r3, r3, #1
    1a34:	ldr	r2, [fp, #-16]
    1a38:	lsl	r3, r3, #4
    1a3c:	add	r3, r2, r3
    1a40:	ldr	r3, [r3, #8]
    1a44:	ldr	r3, [r3]
    1a48:	cmp	r3, #99	; 0x63
    1a4c:	bhi	1a70 <coda_ascbin_cursor_use_base_type_of_special_type+0x58>
    1a50:	ldr	r3, [fp, #-16]
    1a54:	ldr	r3, [r3, #4]
    1a58:	sub	r3, r3, #1
    1a5c:	ldr	r2, [fp, #-16]
    1a60:	lsl	r3, r3, #4
    1a64:	add	r3, r2, r3
    1a68:	ldr	r3, [r3, #8]
    1a6c:	b	1a90 <coda_ascbin_cursor_use_base_type_of_special_type+0x78>
    1a70:	ldr	r3, [fp, #-16]
    1a74:	ldr	r3, [r3, #4]
    1a78:	sub	r3, r3, #1
    1a7c:	ldr	r2, [fp, #-16]
    1a80:	lsl	r3, r3, #4
    1a84:	add	r3, r2, r3
    1a88:	ldr	r3, [r3, #8]
    1a8c:	ldr	r3, [r3, #4]
    1a90:	str	r3, [fp, #-8]
    1a94:	ldr	r3, [fp, #-16]
    1a98:	ldr	r3, [r3, #4]
    1a9c:	sub	r3, r3, #1
    1aa0:	ldr	r2, [fp, #-8]
    1aa4:	ldr	r2, [r2, #44]	; 0x2c
    1aa8:	ldr	r1, [fp, #-16]
    1aac:	lsl	r3, r3, #4
    1ab0:	add	r3, r1, r3
    1ab4:	str	r2, [r3, #8]
    1ab8:	mov	r3, #0
    1abc:	mov	r0, r3
    1ac0:	add	sp, fp, #0
    1ac4:	pop	{fp}		; (ldr fp, [sp], #4)
    1ac8:	bx	lr

00001acc <coda_ascbin_cursor_get_bit_size>:
    1acc:	push	{r4, r5, fp, lr}
    1ad0:	add	fp, sp, #12
    1ad4:	sub	sp, sp, #600	; 0x258
    1ad8:	str	r0, [fp, #-608]	; 0xfffffda0
    1adc:	str	r1, [fp, #-612]	; 0xfffffd9c
    1ae0:	ldr	r3, [fp, #-608]	; 0xfffffda0
    1ae4:	ldr	r3, [r3, #4]
    1ae8:	sub	r3, r3, #1
    1aec:	ldr	r2, [fp, #-608]	; 0xfffffda0
    1af0:	lsl	r3, r3, #4
    1af4:	add	r3, r2, r3
    1af8:	ldr	r3, [r3, #8]
    1afc:	ldr	r3, [r3]
    1b00:	cmp	r3, #99	; 0x63
    1b04:	bhi	1b28 <coda_ascbin_cursor_get_bit_size+0x5c>
    1b08:	ldr	r3, [fp, #-608]	; 0xfffffda0
    1b0c:	ldr	r3, [r3, #4]
    1b10:	sub	r3, r3, #1
    1b14:	ldr	r2, [fp, #-608]	; 0xfffffda0
    1b18:	lsl	r3, r3, #4
    1b1c:	add	r3, r2, r3
    1b20:	ldr	r3, [r3, #8]
    1b24:	b	1b48 <coda_ascbin_cursor_get_bit_size+0x7c>
    1b28:	ldr	r3, [fp, #-608]	; 0xfffffda0
    1b2c:	ldr	r3, [r3, #4]
    1b30:	sub	r3, r3, #1
    1b34:	ldr	r2, [fp, #-608]	; 0xfffffda0
    1b38:	lsl	r3, r3, #4
    1b3c:	add	r3, r2, r3
    1b40:	ldr	r3, [r3, #8]
    1b44:	ldr	r3, [r3, #4]
    1b48:	str	r3, [fp, #-44]	; 0xffffffd4
    1b4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1b50:	ldrd	r2, [r3, #24]
    1b54:	cmp	r2, #0
    1b58:	sbcs	r3, r3, #0
    1b5c:	blt	1b74 <coda_ascbin_cursor_get_bit_size+0xa8>
    1b60:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1b64:	ldrd	r2, [r3, #24]
    1b68:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    1b6c:	strd	r2, [r1]
    1b70:	b	2198 <coda_ascbin_cursor_get_bit_size+0x6cc>
    1b74:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1b78:	ldr	r3, [r3, #8]
    1b7c:	cmp	r3, #0
    1b80:	beq	1b90 <coda_ascbin_cursor_get_bit_size+0xc4>
    1b84:	cmp	r3, #1
    1b88:	beq	1f80 <coda_ascbin_cursor_get_bit_size+0x4b4>
    1b8c:	b	2180 <coda_ascbin_cursor_get_bit_size+0x6b4>
    1b90:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1b94:	str	r3, [fp, #-48]	; 0xffffffd0
    1b98:	ldr	r3, [pc, #1544]	; 21a8 <coda_ascbin_cursor_get_bit_size+0x6dc>
    1b9c:	ldr	r3, [pc, r3]
    1ba0:	bl	0 <__aeabi_read_tp>
    1ba4:	mov	r2, r0
    1ba8:	ldr	r3, [r2, r3]
    1bac:	cmp	r3, #0
    1bb0:	beq	1c78 <coda_ascbin_cursor_get_bit_size+0x1ac>
    1bb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1bb8:	ldr	r3, [r3, #32]
    1bbc:	cmp	r3, #0
    1bc0:	beq	1c78 <coda_ascbin_cursor_get_bit_size+0x1ac>
    1bc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1bc8:	ldr	r3, [r3, #32]
    1bcc:	ldr	r2, [fp, #-612]	; 0xfffffd9c
    1bd0:	ldr	r1, [fp, #-608]	; 0xfffffda0
    1bd4:	mov	r0, r3
    1bd8:	bl	0 <coda_expression_eval_integer>
    1bdc:	mov	r3, r0
    1be0:	cmp	r3, #0
    1be4:	beq	1c00 <coda_ascbin_cursor_get_bit_size+0x134>
    1be8:	ldr	r0, [pc, #1468]	; 21ac <coda_ascbin_cursor_get_bit_size+0x6e0>
    1bec:	bl	0 <coda_add_error_message>
    1bf0:	ldr	r0, [fp, #-608]	; 0xfffffda0
    1bf4:	bl	0 <coda_cursor_add_to_error_message>
    1bf8:	mvn	r3, #0
    1bfc:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1c00:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1c04:	ldrd	r2, [r3, #24]
    1c08:	mvn	r0, #7
    1c0c:	mvn	r1, #0
    1c10:	cmp	r3, r1
    1c14:	cmpeq	r2, r0
    1c18:	bne	1c38 <coda_ascbin_cursor_get_bit_size+0x16c>
    1c1c:	ldr	r3, [fp, #-612]	; 0xfffffd9c
    1c20:	ldrd	r2, [r3]
    1c24:	lsl	r5, r3, #3
    1c28:	orr	r5, r5, r2, lsr #29
    1c2c:	lsl	r4, r2, #3
    1c30:	ldr	r3, [fp, #-612]	; 0xfffffd9c
    1c34:	strd	r4, [r3]
    1c38:	ldr	r3, [fp, #-612]	; 0xfffffd9c
    1c3c:	ldrd	r2, [r3]
    1c40:	cmp	r2, #0
    1c44:	sbcs	r3, r3, #0
    1c48:	bge	1f7c <coda_ascbin_cursor_get_bit_size+0x4b0>
    1c4c:	ldr	r3, [fp, #-612]	; 0xfffffd9c
    1c50:	ldrd	r2, [r3]
    1c54:	mov	r3, r2
    1c58:	mov	r2, r3
    1c5c:	ldr	r1, [pc, #1356]	; 21b0 <coda_ascbin_cursor_get_bit_size+0x6e4>
    1c60:	ldr	r0, [pc, #1356]	; 21b4 <coda_ascbin_cursor_get_bit_size+0x6e8>
    1c64:	bl	0 <coda_set_error>
    1c68:	ldr	r0, [fp, #-608]	; 0xfffffda0
    1c6c:	bl	0 <coda_cursor_add_to_error_message>
    1c70:	mvn	r3, #0
    1c74:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1c78:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1c7c:	ldr	r3, [r3, #68]	; 0x44
    1c80:	cmp	r3, #0
    1c84:	beq	1ce4 <coda_ascbin_cursor_get_bit_size+0x218>
    1c88:	ldr	r2, [fp, #-608]	; 0xfffffda0
    1c8c:	sub	r3, fp, #604	; 0x25c
    1c90:	mov	r1, r2
    1c94:	mov	r2, #520	; 0x208
    1c98:	mov	r0, r3
    1c9c:	bl	0 <memcpy>
    1ca0:	sub	r3, fp, #604	; 0x25c
    1ca4:	mov	r0, r3
    1ca8:	bl	0 <coda_cursor_goto_available_union_field>
    1cac:	mov	r3, r0
    1cb0:	cmp	r3, #0
    1cb4:	beq	1cc0 <coda_ascbin_cursor_get_bit_size+0x1f4>
    1cb8:	mvn	r3, #0
    1cbc:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1cc0:	sub	r3, fp, #604	; 0x25c
    1cc4:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    1cc8:	mov	r0, r3
    1ccc:	bl	0 <coda_cursor_get_bit_size>
    1cd0:	mov	r3, r0
    1cd4:	cmp	r3, #0
    1cd8:	beq	2194 <coda_ascbin_cursor_get_bit_size+0x6c8>
    1cdc:	mvn	r3, #0
    1ce0:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1ce4:	mov	r2, #0
    1ce8:	mov	r3, #0
    1cec:	strd	r2, [fp, #-20]	; 0xffffffec
    1cf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1cf4:	ldr	r3, [r3, #48]	; 0x30
    1cf8:	cmp	r3, #0
    1cfc:	ble	1f6c <coda_ascbin_cursor_get_bit_size+0x4a0>
    1d00:	ldr	r2, [fp, #-608]	; 0xfffffda0
    1d04:	sub	r3, fp, #604	; 0x25c
    1d08:	mov	r1, r2
    1d0c:	mov	r2, #520	; 0x208
    1d10:	mov	r0, r3
    1d14:	bl	0 <memcpy>
    1d18:	sub	r3, fp, #604	; 0x25c
    1d1c:	mov	r0, r3
    1d20:	bl	0 <coda_cursor_goto_first_record_field>
    1d24:	mov	r3, r0
    1d28:	cmp	r3, #0
    1d2c:	beq	1d38 <coda_ascbin_cursor_get_bit_size+0x26c>
    1d30:	mvn	r3, #0
    1d34:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1d38:	mov	r3, #0
    1d3c:	str	r3, [fp, #-24]	; 0xffffffe8
    1d40:	b	1f58 <coda_ascbin_cursor_get_bit_size+0x48c>
    1d44:	mvn	r2, #0
    1d48:	mvn	r3, #0
    1d4c:	strd	r2, [fp, #-68]	; 0xffffffbc
    1d50:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1d54:	ldr	r3, [r3, #48]	; 0x30
    1d58:	sub	r2, r3, #1
    1d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d60:	cmp	r2, r3
    1d64:	ble	1d90 <coda_ascbin_cursor_get_bit_size+0x2c4>
    1d68:	sub	r2, fp, #68	; 0x44
    1d6c:	sub	r1, fp, #60	; 0x3c
    1d70:	sub	r3, fp, #604	; 0x25c
    1d74:	mov	r0, r3
    1d78:	bl	48c <get_next_relative_field_bit_offset>
    1d7c:	mov	r3, r0
    1d80:	cmp	r3, #0
    1d84:	beq	1d90 <coda_ascbin_cursor_get_bit_size+0x2c4>
    1d88:	mvn	r3, #0
    1d8c:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1d90:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    1d94:	cmp	r2, #0
    1d98:	sbcs	r3, r3, #0
    1d9c:	bge	1dc8 <coda_ascbin_cursor_get_bit_size+0x2fc>
    1da0:	sub	r2, fp, #68	; 0x44
    1da4:	sub	r3, fp, #604	; 0x25c
    1da8:	mov	r1, r2
    1dac:	mov	r0, r3
    1db0:	bl	0 <coda_cursor_get_bit_size>
    1db4:	mov	r3, r0
    1db8:	cmp	r3, #0
    1dbc:	beq	1dc8 <coda_ascbin_cursor_get_bit_size+0x2fc>
    1dc0:	mvn	r3, #0
    1dc4:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1dc8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    1dcc:	ldrd	r0, [fp, #-20]	; 0xffffffec
    1dd0:	adds	r2, r2, r0
    1dd4:	adc	r3, r3, r1
    1dd8:	strd	r2, [fp, #-20]	; 0xffffffec
    1ddc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1de0:	ldr	r3, [r3, #48]	; 0x30
    1de4:	sub	r2, r3, #1
    1de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dec:	cmp	r2, r3
    1df0:	ble	1f4c <coda_ascbin_cursor_get_bit_size+0x480>
    1df4:	mov	r3, #1
    1df8:	str	r3, [fp, #-72]	; 0xffffffb8
    1dfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1e00:	ldr	r2, [r3, #52]	; 0x34
    1e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e08:	add	r3, r3, #1
    1e0c:	lsl	r3, r3, #2
    1e10:	add	r3, r2, r3
    1e14:	ldr	r3, [r3]
    1e18:	ldr	r3, [r3, #20]
    1e1c:	cmp	r3, #0
    1e20:	beq	1e6c <coda_ascbin_cursor_get_bit_size+0x3a0>
    1e24:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1e28:	ldr	r2, [r3, #52]	; 0x34
    1e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e30:	add	r3, r3, #1
    1e34:	lsl	r3, r3, #2
    1e38:	add	r3, r2, r3
    1e3c:	ldr	r3, [r3]
    1e40:	ldr	r3, [r3, #20]
    1e44:	sub	r2, fp, #72	; 0x48
    1e48:	ldr	r1, [fp, #-608]	; 0xfffffda0
    1e4c:	mov	r0, r3
    1e50:	bl	0 <coda_expression_eval_bool>
    1e54:	mov	r3, r0
    1e58:	cmp	r3, #0
    1e5c:	beq	1e6c <coda_ascbin_cursor_get_bit_size+0x3a0>
    1e60:	mvn	r3, #0
    1e64:	nop			; (mov r0, r0)
    1e68:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1e6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1e70:	cmp	r3, #0
    1e74:	beq	1eb4 <coda_ascbin_cursor_get_bit_size+0x3e8>
    1e78:	ldr	r3, [fp, #-600]	; 0xfffffda8
    1e7c:	sub	r3, r3, #1
    1e80:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1e84:	ldr	r1, [r2, #52]	; 0x34
    1e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1e8c:	add	r2, r2, #1
    1e90:	lsl	r2, r2, #2
    1e94:	add	r2, r1, r2
    1e98:	ldr	r2, [r2]
    1e9c:	ldr	r2, [r2, #8]
    1ea0:	lsl	r3, r3, #4
    1ea4:	sub	r1, fp, #12
    1ea8:	add	r3, r1, r3
    1eac:	str	r2, [r3, #-584]	; 0xfffffdb8
    1eb0:	b	1ee0 <coda_ascbin_cursor_get_bit_size+0x414>
    1eb4:	ldr	r3, [fp, #-600]	; 0xfffffda8
    1eb8:	sub	r4, r3, #1
    1ebc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1ec0:	ldr	r3, [r3]
    1ec4:	mov	r0, r3
    1ec8:	bl	0 <coda_no_data_singleton>
    1ecc:	mov	r2, r0
    1ed0:	lsl	r3, r4, #4
    1ed4:	sub	r1, fp, #12
    1ed8:	add	r3, r1, r3
    1edc:	str	r2, [r3, #-584]	; 0xfffffdb8
    1ee0:	ldr	r3, [fp, #-600]	; 0xfffffda8
    1ee4:	sub	r3, r3, #1
    1ee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1eec:	add	r2, r2, #1
    1ef0:	lsl	r3, r3, #4
    1ef4:	sub	r1, fp, #12
    1ef8:	add	r3, r1, r3
    1efc:	str	r2, [r3, #-580]	; 0xfffffdbc
    1f00:	ldr	r3, [fp, #-600]	; 0xfffffda8
    1f04:	sub	ip, r3, #1
    1f08:	ldr	r3, [fp, #-608]	; 0xfffffda0
    1f0c:	ldr	r3, [r3, #4]
    1f10:	sub	r3, r3, #1
    1f14:	ldr	r2, [fp, #-608]	; 0xfffffda0
    1f18:	add	r3, r3, #1
    1f1c:	lsl	r3, r3, #4
    1f20:	add	r3, r2, r3
    1f24:	ldrd	r0, [r3]
    1f28:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    1f2c:	adds	r2, r2, r0
    1f30:	adc	r3, r3, r1
    1f34:	sub	r1, fp, #604	; 0x25c
    1f38:	mov	r0, r1
    1f3c:	add	r1, ip, #1
    1f40:	lsl	r1, r1, #4
    1f44:	add	r1, r0, r1
    1f48:	strd	r2, [r1]
    1f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f50:	add	r3, r3, #1
    1f54:	str	r3, [fp, #-24]	; 0xffffffe8
    1f58:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1f5c:	ldr	r2, [r3, #48]	; 0x30
    1f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f64:	cmp	r2, r3
    1f68:	bgt	1d44 <coda_ascbin_cursor_get_bit_size+0x278>
    1f6c:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    1f70:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1f74:	strd	r2, [r1]
    1f78:	b	2194 <coda_ascbin_cursor_get_bit_size+0x6c8>
    1f7c:	b	2194 <coda_ascbin_cursor_get_bit_size+0x6c8>
    1f80:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1f84:	str	r3, [fp, #-52]	; 0xffffffcc
    1f88:	sub	r3, fp, #76	; 0x4c
    1f8c:	mov	r1, r3
    1f90:	ldr	r0, [fp, #-608]	; 0xfffffda0
    1f94:	bl	0 <coda_cursor_get_num_elements>
    1f98:	mov	r3, r0
    1f9c:	cmp	r3, #0
    1fa0:	beq	1fac <coda_ascbin_cursor_get_bit_size+0x4e0>
    1fa4:	mvn	r3, #0
    1fa8:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    1fac:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1fb0:	cmp	r3, #0
    1fb4:	bne	1fcc <coda_ascbin_cursor_get_bit_size+0x500>
    1fb8:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    1fbc:	mov	r2, #0
    1fc0:	mov	r3, #0
    1fc4:	strd	r2, [r1]
    1fc8:	b	2198 <coda_ascbin_cursor_get_bit_size+0x6cc>
    1fcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1fd0:	ldr	r3, [r3, #40]	; 0x28
    1fd4:	ldrd	r2, [r3, #24]
    1fd8:	cmp	r2, #0
    1fdc:	sbcs	r3, r3, #0
    1fe0:	blt	2020 <coda_ascbin_cursor_get_bit_size+0x554>
    1fe4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    1fe8:	mov	r0, r3
    1fec:	asr	r1, r0, #31
    1ff0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ff4:	ldr	r3, [r3, #40]	; 0x28
    1ff8:	ldrd	r2, [r3, #24]
    1ffc:	mul	lr, r2, r1
    2000:	mul	ip, r0, r3
    2004:	add	ip, lr, ip
    2008:	umull	r2, r3, r0, r2
    200c:	add	r1, ip, r3
    2010:	mov	r3, r1
    2014:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    2018:	strd	r2, [r1]
    201c:	b	2198 <coda_ascbin_cursor_get_bit_size+0x6cc>
    2020:	mov	r2, #0
    2024:	mov	r3, #0
    2028:	strd	r2, [fp, #-36]	; 0xffffffdc
    202c:	ldr	r2, [fp, #-608]	; 0xfffffda0
    2030:	sub	r3, fp, #604	; 0x25c
    2034:	mov	r1, r2
    2038:	mov	r2, #520	; 0x208
    203c:	mov	r0, r3
    2040:	bl	0 <memcpy>
    2044:	ldr	r3, [fp, #-600]	; 0xfffffda8
    2048:	add	r3, r3, #1
    204c:	str	r3, [fp, #-600]	; 0xfffffda8
    2050:	ldr	r3, [fp, #-600]	; 0xfffffda8
    2054:	sub	r1, r3, #1
    2058:	ldr	r3, [fp, #-600]	; 0xfffffda8
    205c:	sub	r3, r3, #2
    2060:	sub	r2, fp, #604	; 0x25c
    2064:	add	r3, r3, #1
    2068:	lsl	r3, r3, #4
    206c:	add	r3, r2, r3
    2070:	ldrd	r2, [r3]
    2074:	sub	r0, fp, #604	; 0x25c
    2078:	add	r1, r1, #1
    207c:	lsl	r1, r1, #4
    2080:	add	r1, r0, r1
    2084:	strd	r2, [r1]
    2088:	mov	r3, #0
    208c:	str	r3, [fp, #-40]	; 0xffffffd8
    2090:	b	2160 <coda_ascbin_cursor_get_bit_size+0x694>
    2094:	ldr	r3, [fp, #-600]	; 0xfffffda8
    2098:	sub	r3, r3, #1
    209c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    20a0:	ldr	r2, [r2, #40]	; 0x28
    20a4:	lsl	r3, r3, #4
    20a8:	sub	r1, fp, #12
    20ac:	add	r3, r1, r3
    20b0:	str	r2, [r3, #-584]	; 0xfffffdb8
    20b4:	ldr	r3, [fp, #-600]	; 0xfffffda8
    20b8:	sub	r3, r3, #1
    20bc:	lsl	r3, r3, #4
    20c0:	sub	r2, fp, #12
    20c4:	add	r3, r2, r3
    20c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    20cc:	str	r2, [r3, #-580]	; 0xfffffdbc
    20d0:	sub	r2, fp, #84	; 0x54
    20d4:	sub	r3, fp, #604	; 0x25c
    20d8:	mov	r1, r2
    20dc:	mov	r0, r3
    20e0:	bl	0 <coda_cursor_get_bit_size>
    20e4:	mov	r3, r0
    20e8:	cmp	r3, #0
    20ec:	beq	20f8 <coda_ascbin_cursor_get_bit_size+0x62c>
    20f0:	mvn	r3, #0
    20f4:	b	219c <coda_ascbin_cursor_get_bit_size+0x6d0>
    20f8:	ldrd	r2, [fp, #-84]	; 0xffffffac
    20fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    2100:	adds	r2, r2, r0
    2104:	adc	r3, r3, r1
    2108:	strd	r2, [fp, #-36]	; 0xffffffdc
    210c:	ldr	r3, [fp, #-600]	; 0xfffffda8
    2110:	sub	ip, r3, #1
    2114:	ldr	r3, [fp, #-600]	; 0xfffffda8
    2118:	sub	r3, r3, #1
    211c:	sub	r2, fp, #604	; 0x25c
    2120:	add	r3, r3, #1
    2124:	lsl	r3, r3, #4
    2128:	add	r3, r2, r3
    212c:	ldrd	r0, [r3]
    2130:	ldrd	r2, [fp, #-84]	; 0xffffffac
    2134:	adds	r2, r2, r0
    2138:	adc	r3, r3, r1
    213c:	sub	r1, fp, #604	; 0x25c
    2140:	mov	r0, r1
    2144:	add	r1, ip, #1
    2148:	lsl	r1, r1, #4
    214c:	add	r1, r0, r1
    2150:	strd	r2, [r1]
    2154:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2158:	add	r3, r3, #1
    215c:	str	r3, [fp, #-40]	; 0xffffffd8
    2160:	ldr	r3, [fp, #-76]	; 0xffffffb4
    2164:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2168:	cmp	r2, r3
    216c:	blt	2094 <coda_ascbin_cursor_get_bit_size+0x5c8>
    2170:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    2174:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2178:	strd	r2, [r1]
    217c:	b	2198 <coda_ascbin_cursor_get_bit_size+0x6cc>
    2180:	ldr	r3, [pc, #48]	; 21b8 <coda_ascbin_cursor_get_bit_size+0x6ec>
    2184:	mov	r2, #768	; 0x300
    2188:	ldr	r1, [pc, #44]	; 21bc <coda_ascbin_cursor_get_bit_size+0x6f0>
    218c:	ldr	r0, [pc, #44]	; 21c0 <coda_ascbin_cursor_get_bit_size+0x6f4>
    2190:	bl	0 <__assert_fail>
    2194:	nop			; (mov r0, r0)
    2198:	mov	r3, #0
    219c:	mov	r0, r3
    21a0:	sub	sp, fp, #12
    21a4:	pop	{r4, r5, fp, pc}
    21a8:	.word	0x00000604
    21ac:	.word	0x000001cc
    21b0:	.word	0x000001e4
    21b4:	.word	0xfffffed4
    21b8:	.word	0x000003b0
    21bc:	.word	0x00000034
    21c0:	.word	0x0000020c

000021c4 <coda_ascbin_cursor_get_num_elements>:
    21c4:	push	{fp, lr}
    21c8:	add	fp, sp, #4
    21cc:	sub	sp, sp, #56	; 0x38
    21d0:	str	r0, [fp, #-56]	; 0xffffffc8
    21d4:	str	r1, [fp, #-60]	; 0xffffffc4
    21d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    21dc:	ldr	r3, [r3, #4]
    21e0:	sub	r3, r3, #1
    21e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21e8:	lsl	r3, r3, #4
    21ec:	add	r3, r2, r3
    21f0:	ldr	r3, [r3, #8]
    21f4:	ldr	r3, [r3]
    21f8:	cmp	r3, #99	; 0x63
    21fc:	bhi	2220 <coda_ascbin_cursor_get_num_elements+0x5c>
    2200:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2204:	ldr	r3, [r3, #4]
    2208:	sub	r3, r3, #1
    220c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2210:	lsl	r3, r3, #4
    2214:	add	r3, r2, r3
    2218:	ldr	r3, [r3, #8]
    221c:	b	2240 <coda_ascbin_cursor_get_num_elements+0x7c>
    2220:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2224:	ldr	r3, [r3, #4]
    2228:	sub	r3, r3, #1
    222c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2230:	lsl	r3, r3, #4
    2234:	add	r3, r2, r3
    2238:	ldr	r3, [r3, #8]
    223c:	ldr	r3, [r3, #4]
    2240:	str	r3, [fp, #-16]
    2244:	ldr	r3, [fp, #-16]
    2248:	ldr	r3, [r3, #8]
    224c:	cmp	r3, #0
    2250:	beq	2260 <coda_ascbin_cursor_get_num_elements+0x9c>
    2254:	cmp	r3, #1
    2258:	beq	2274 <coda_ascbin_cursor_get_num_elements+0xb0>
    225c:	b	23d0 <coda_ascbin_cursor_get_num_elements+0x20c>
    2260:	ldr	r3, [fp, #-16]
    2264:	ldr	r2, [r3, #48]	; 0x30
    2268:	ldr	r3, [fp, #-60]	; 0xffffffc4
    226c:	str	r2, [r3]
    2270:	b	23e4 <coda_ascbin_cursor_get_num_elements+0x220>
    2274:	ldr	r3, [fp, #-16]
    2278:	str	r3, [fp, #-20]	; 0xffffffec
    227c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2280:	ldr	r3, [r3, #44]	; 0x2c
    2284:	cmn	r3, #1
    2288:	beq	22a0 <coda_ascbin_cursor_get_num_elements+0xdc>
    228c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2290:	ldr	r2, [r3, #44]	; 0x2c
    2294:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2298:	str	r2, [r3]
    229c:	b	23e4 <coda_ascbin_cursor_get_num_elements+0x220>
    22a0:	mov	r3, #1
    22a4:	str	r3, [fp, #-8]
    22a8:	mov	r3, #0
    22ac:	str	r3, [fp, #-12]
    22b0:	b	23ac <coda_ascbin_cursor_get_num_elements+0x1e8>
    22b4:	ldr	r2, [fp, #-20]	; 0xffffffec
    22b8:	ldr	r3, [fp, #-12]
    22bc:	add	r3, r3, #12
    22c0:	lsl	r3, r3, #2
    22c4:	add	r3, r2, r3
    22c8:	ldr	r3, [r3, #4]
    22cc:	cmn	r3, #1
    22d0:	bne	237c <coda_ascbin_cursor_get_num_elements+0x1b8>
    22d4:	ldr	r2, [fp, #-20]	; 0xffffffec
    22d8:	ldr	r3, [fp, #-12]
    22dc:	add	r3, r3, #20
    22e0:	lsl	r3, r3, #2
    22e4:	add	r3, r2, r3
    22e8:	ldr	r3, [r3, #4]
    22ec:	sub	r2, fp, #28
    22f0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    22f4:	mov	r0, r3
    22f8:	bl	0 <coda_expression_eval_integer>
    22fc:	mov	r3, r0
    2300:	cmp	r3, #0
    2304:	beq	2324 <coda_ascbin_cursor_get_num_elements+0x160>
    2308:	ldr	r1, [fp, #-12]
    230c:	ldr	r0, [pc, #224]	; 23f4 <coda_ascbin_cursor_get_num_elements+0x230>
    2310:	bl	0 <coda_add_error_message>
    2314:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2318:	bl	0 <coda_cursor_add_to_error_message>
    231c:	mvn	r3, #0
    2320:	b	23e8 <coda_ascbin_cursor_get_num_elements+0x224>
    2324:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    2328:	cmp	r2, #0
    232c:	sbcs	r3, r3, #0
    2330:	bge	2368 <coda_ascbin_cursor_get_num_elements+0x1a4>
    2334:	ldrd	r0, [fp, #-28]	; 0xffffffe4
    2338:	sub	r3, fp, #52	; 0x34
    233c:	mov	r2, r3
    2340:	bl	0 <coda_str64>
    2344:	sub	r3, fp, #52	; 0x34
    2348:	mov	r2, r3
    234c:	ldr	r1, [pc, #164]	; 23f8 <coda_ascbin_cursor_get_num_elements+0x234>
    2350:	ldr	r0, [pc, #164]	; 23fc <coda_ascbin_cursor_get_num_elements+0x238>
    2354:	bl	0 <coda_set_error>
    2358:	ldr	r0, [fp, #-56]	; 0xffffffc8
    235c:	bl	0 <coda_cursor_add_to_error_message>
    2360:	mvn	r3, #0
    2364:	b	23e8 <coda_ascbin_cursor_get_num_elements+0x224>
    2368:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    236c:	ldr	r3, [fp, #-8]
    2370:	mul	r3, r2, r3
    2374:	str	r3, [fp, #-8]
    2378:	b	23a0 <coda_ascbin_cursor_get_num_elements+0x1dc>
    237c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2380:	ldr	r3, [fp, #-12]
    2384:	add	r3, r3, #12
    2388:	lsl	r3, r3, #2
    238c:	add	r3, r2, r3
    2390:	ldr	r2, [r3, #4]
    2394:	ldr	r3, [fp, #-8]
    2398:	mul	r3, r2, r3
    239c:	str	r3, [fp, #-8]
    23a0:	ldr	r3, [fp, #-12]
    23a4:	add	r3, r3, #1
    23a8:	str	r3, [fp, #-12]
    23ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    23b0:	ldr	r2, [r3, #48]	; 0x30
    23b4:	ldr	r3, [fp, #-12]
    23b8:	cmp	r2, r3
    23bc:	bgt	22b4 <coda_ascbin_cursor_get_num_elements+0xf0>
    23c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    23c4:	ldr	r2, [fp, #-8]
    23c8:	str	r2, [r3]
    23cc:	b	23e4 <coda_ascbin_cursor_get_num_elements+0x220>
    23d0:	ldr	r3, [pc, #40]	; 2400 <coda_ascbin_cursor_get_num_elements+0x23c>
    23d4:	ldr	r2, [pc, #40]	; 2404 <coda_ascbin_cursor_get_num_elements+0x240>
    23d8:	ldr	r1, [pc, #40]	; 2408 <coda_ascbin_cursor_get_num_elements+0x244>
    23dc:	ldr	r0, [pc, #40]	; 240c <coda_ascbin_cursor_get_num_elements+0x248>
    23e0:	bl	0 <__assert_fail>
    23e4:	mov	r3, #0
    23e8:	mov	r0, r3
    23ec:	sub	sp, fp, #4
    23f0:	pop	{fp, pc}
    23f4:	.word	0x00000184
    23f8:	.word	0x00000210
    23fc:	.word	0xfffffed4
    2400:	.word	0x000003d0
    2404:	.word	0x00000343
    2408:	.word	0x00000034
    240c:	.word	0x0000020c

00002410 <coda_ascbin_cursor_get_record_field_available_status>:
    2410:	push	{fp, lr}
    2414:	add	fp, sp, #4
    2418:	sub	sp, sp, #24
    241c:	str	r0, [fp, #-16]
    2420:	str	r1, [fp, #-20]	; 0xffffffec
    2424:	str	r2, [fp, #-24]	; 0xffffffe8
    2428:	ldr	r3, [fp, #-16]
    242c:	ldr	r3, [r3, #4]
    2430:	sub	r3, r3, #1
    2434:	ldr	r2, [fp, #-16]
    2438:	lsl	r3, r3, #4
    243c:	add	r3, r2, r3
    2440:	ldr	r3, [r3, #8]
    2444:	ldr	r3, [r3]
    2448:	cmp	r3, #99	; 0x63
    244c:	bhi	2470 <coda_ascbin_cursor_get_record_field_available_status+0x60>
    2450:	ldr	r3, [fp, #-16]
    2454:	ldr	r3, [r3, #4]
    2458:	sub	r3, r3, #1
    245c:	ldr	r2, [fp, #-16]
    2460:	lsl	r3, r3, #4
    2464:	add	r3, r2, r3
    2468:	ldr	r3, [r3, #8]
    246c:	b	2490 <coda_ascbin_cursor_get_record_field_available_status+0x80>
    2470:	ldr	r3, [fp, #-16]
    2474:	ldr	r3, [r3, #4]
    2478:	sub	r3, r3, #1
    247c:	ldr	r2, [fp, #-16]
    2480:	lsl	r3, r3, #4
    2484:	add	r3, r2, r3
    2488:	ldr	r3, [r3, #8]
    248c:	ldr	r3, [r3, #4]
    2490:	str	r3, [fp, #-8]
    2494:	ldr	r3, [fp, #-20]	; 0xffffffec
    2498:	cmp	r3, #0
    249c:	blt	24b4 <coda_ascbin_cursor_get_record_field_available_status+0xa4>
    24a0:	ldr	r3, [fp, #-8]
    24a4:	ldr	r2, [r3, #48]	; 0x30
    24a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    24ac:	cmp	r2, r3
    24b0:	bgt	24d4 <coda_ascbin_cursor_get_record_field_available_status+0xc4>
    24b4:	ldr	r3, [fp, #-8]
    24b8:	ldr	r3, [r3, #48]	; 0x30
    24bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    24c0:	ldr	r1, [pc, #232]	; 25b0 <coda_ascbin_cursor_get_record_field_available_status+0x1a0>
    24c4:	mvn	r0, #100	; 0x64
    24c8:	bl	0 <coda_set_error>
    24cc:	mvn	r3, #0
    24d0:	b	25a4 <coda_ascbin_cursor_get_record_field_available_status+0x194>
    24d4:	ldr	r3, [fp, #-8]
    24d8:	ldr	r3, [r3, #68]	; 0x44
    24dc:	cmp	r3, #0
    24e0:	beq	2530 <coda_ascbin_cursor_get_record_field_available_status+0x120>
    24e4:	sub	r3, fp, #12
    24e8:	mov	r1, r3
    24ec:	ldr	r0, [fp, #-16]
    24f0:	bl	0 <coda_cursor_get_available_union_field_index>
    24f4:	mov	r3, r0
    24f8:	cmp	r3, #0
    24fc:	beq	2508 <coda_ascbin_cursor_get_record_field_available_status+0xf8>
    2500:	mvn	r3, #0
    2504:	b	25a4 <coda_ascbin_cursor_get_record_field_available_status+0x194>
    2508:	ldr	r3, [fp, #-12]
    250c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2510:	cmp	r2, r3
    2514:	moveq	r3, #1
    2518:	movne	r3, #0
    251c:	uxtb	r3, r3
    2520:	mov	r2, r3
    2524:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2528:	str	r2, [r3]
    252c:	b	25a0 <coda_ascbin_cursor_get_record_field_available_status+0x190>
    2530:	ldr	r3, [fp, #-8]
    2534:	ldr	r2, [r3, #52]	; 0x34
    2538:	ldr	r3, [fp, #-20]	; 0xffffffec
    253c:	lsl	r3, r3, #2
    2540:	add	r3, r2, r3
    2544:	ldr	r3, [r3]
    2548:	ldr	r3, [r3, #20]
    254c:	cmp	r3, #0
    2550:	beq	2594 <coda_ascbin_cursor_get_record_field_available_status+0x184>
    2554:	ldr	r3, [fp, #-8]
    2558:	ldr	r2, [r3, #52]	; 0x34
    255c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2560:	lsl	r3, r3, #2
    2564:	add	r3, r2, r3
    2568:	ldr	r3, [r3]
    256c:	ldr	r3, [r3, #20]
    2570:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2574:	ldr	r1, [fp, #-16]
    2578:	mov	r0, r3
    257c:	bl	0 <coda_expression_eval_bool>
    2580:	mov	r3, r0
    2584:	cmp	r3, #0
    2588:	beq	25a0 <coda_ascbin_cursor_get_record_field_available_status+0x190>
    258c:	mvn	r3, #0
    2590:	b	25a4 <coda_ascbin_cursor_get_record_field_available_status+0x194>
    2594:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2598:	mov	r2, #1
    259c:	str	r2, [r3]
    25a0:	mov	r3, #0
    25a4:	mov	r0, r3
    25a8:	sub	sp, fp, #4
    25ac:	pop	{fp, pc}
    25b0:	.word	0x000000e8

000025b4 <coda_ascbin_cursor_get_available_union_field_index>:
    25b4:	push	{r4, r5, fp, lr}
    25b8:	add	fp, sp, #12
    25bc:	sub	sp, sp, #600	; 0x258
    25c0:	str	r0, [fp, #-600]	; 0xfffffda8
    25c4:	str	r1, [fp, #-604]	; 0xfffffda4
    25c8:	ldr	r3, [fp, #-600]	; 0xfffffda8
    25cc:	ldr	r3, [r3, #4]
    25d0:	sub	r3, r3, #1
    25d4:	ldr	r2, [fp, #-600]	; 0xfffffda8
    25d8:	lsl	r3, r3, #4
    25dc:	add	r3, r2, r3
    25e0:	ldr	r3, [r3, #8]
    25e4:	ldr	r3, [r3]
    25e8:	cmp	r3, #99	; 0x63
    25ec:	bhi	2610 <coda_ascbin_cursor_get_available_union_field_index+0x5c>
    25f0:	ldr	r3, [fp, #-600]	; 0xfffffda8
    25f4:	ldr	r3, [r3, #4]
    25f8:	sub	r3, r3, #1
    25fc:	ldr	r2, [fp, #-600]	; 0xfffffda8
    2600:	lsl	r3, r3, #4
    2604:	add	r3, r2, r3
    2608:	ldr	r3, [r3, #8]
    260c:	b	2630 <coda_ascbin_cursor_get_available_union_field_index+0x7c>
    2610:	ldr	r3, [fp, #-600]	; 0xfffffda8
    2614:	ldr	r3, [r3, #4]
    2618:	sub	r3, r3, #1
    261c:	ldr	r2, [fp, #-600]	; 0xfffffda8
    2620:	lsl	r3, r3, #4
    2624:	add	r3, r2, r3
    2628:	ldr	r3, [r3, #8]
    262c:	ldr	r3, [r3, #4]
    2630:	str	r3, [fp, #-16]
    2634:	ldr	r3, [fp, #-16]
    2638:	ldr	r3, [r3, #68]	; 0x44
    263c:	cmp	r3, #0
    2640:	bne	2658 <coda_ascbin_cursor_get_available_union_field_index+0xa4>
    2644:	ldr	r1, [pc, #536]	; 2864 <coda_ascbin_cursor_get_available_union_field_index+0x2b0>
    2648:	mvn	r0, #104	; 0x68
    264c:	bl	0 <coda_set_error>
    2650:	mvn	r3, #0
    2654:	b	2858 <coda_ascbin_cursor_get_available_union_field_index+0x2a4>
    2658:	ldr	r3, [fp, #-16]
    265c:	ldr	r3, [r3, #48]	; 0x30
    2660:	cmp	r3, #0
    2664:	bgt	267c <coda_ascbin_cursor_get_available_union_field_index+0xc8>
    2668:	ldr	r3, [pc, #504]	; 2868 <coda_ascbin_cursor_get_available_union_field_index+0x2b4>
    266c:	ldr	r2, [pc, #504]	; 286c <coda_ascbin_cursor_get_available_union_field_index+0x2b8>
    2670:	ldr	r1, [pc, #504]	; 2870 <coda_ascbin_cursor_get_available_union_field_index+0x2bc>
    2674:	ldr	r0, [pc, #504]	; 2874 <coda_ascbin_cursor_get_available_union_field_index+0x2c0>
    2678:	bl	0 <__assert_fail>
    267c:	ldr	r2, [fp, #-600]	; 0xfffffda8
    2680:	sub	r3, fp, #540	; 0x21c
    2684:	mov	r1, r2
    2688:	mov	r2, #520	; 0x208
    268c:	mov	r0, r3
    2690:	bl	0 <memcpy>
    2694:	ldr	r3, [fp, #-536]	; 0xfffffde8
    2698:	add	r3, r3, #1
    269c:	str	r3, [fp, #-536]	; 0xfffffde8
    26a0:	ldr	r3, [fp, #-536]	; 0xfffffde8
    26a4:	sub	r3, r3, #1
    26a8:	ldr	r2, [fp, #-16]
    26ac:	ldr	r2, [r2, #52]	; 0x34
    26b0:	ldr	r2, [r2]
    26b4:	ldr	r2, [r2, #8]
    26b8:	lsl	r3, r3, #4
    26bc:	sub	r1, fp, #12
    26c0:	add	r3, r1, r3
    26c4:	str	r2, [r3, #-520]	; 0xfffffdf8
    26c8:	ldr	r3, [fp, #-536]	; 0xfffffde8
    26cc:	sub	r3, r3, #1
    26d0:	lsl	r3, r3, #4
    26d4:	sub	r2, fp, #12
    26d8:	add	r3, r2, r3
    26dc:	mvn	r2, #0
    26e0:	str	r2, [r3, #-516]	; 0xfffffdfc
    26e4:	ldr	r3, [fp, #-536]	; 0xfffffde8
    26e8:	sub	r1, r3, #1
    26ec:	ldr	r3, [fp, #-536]	; 0xfffffde8
    26f0:	sub	r3, r3, #2
    26f4:	sub	r2, fp, #540	; 0x21c
    26f8:	add	r3, r3, #1
    26fc:	lsl	r3, r3, #4
    2700:	add	r3, r2, r3
    2704:	ldrd	r2, [r3]
    2708:	sub	r0, fp, #540	; 0x21c
    270c:	add	r1, r1, #1
    2710:	lsl	r1, r1, #4
    2714:	add	r1, r0, r1
    2718:	strd	r2, [r1]
    271c:	ldr	r3, [fp, #-16]
    2720:	ldr	r3, [r3, #68]	; 0x44
    2724:	sub	r2, fp, #548	; 0x224
    2728:	sub	r1, fp, #540	; 0x21c
    272c:	mov	r0, r3
    2730:	bl	0 <coda_expression_eval_integer>
    2734:	mov	r3, r0
    2738:	cmp	r3, #0
    273c:	beq	2758 <coda_ascbin_cursor_get_available_union_field_index+0x1a4>
    2740:	ldr	r0, [pc, #304]	; 2878 <coda_ascbin_cursor_get_available_union_field_index+0x2c4>
    2744:	bl	0 <coda_add_error_message>
    2748:	ldr	r0, [fp, #-600]	; 0xfffffda8
    274c:	bl	0 <coda_cursor_add_to_error_message>
    2750:	mvn	r3, #0
    2754:	b	2858 <coda_ascbin_cursor_get_available_union_field_index+0x2a4>
    2758:	sub	r3, fp, #540	; 0x21c
    275c:	ldrd	r2, [r3, #-8]
    2760:	cmp	r2, #0
    2764:	sbcs	r3, r3, #0
    2768:	blt	2790 <coda_ascbin_cursor_get_available_union_field_index+0x1dc>
    276c:	ldr	r3, [fp, #-16]
    2770:	ldr	r3, [r3, #48]	; 0x30
    2774:	mov	r2, r3
    2778:	asr	r3, r2, #31
    277c:	sub	r1, fp, #540	; 0x21c
    2780:	ldrd	r0, [r1, #-8]
    2784:	cmp	r0, r2
    2788:	sbcs	r3, r1, r3
    278c:	blt	2844 <coda_ascbin_cursor_get_available_union_field_index+0x290>
    2790:	sub	r3, fp, #540	; 0x21c
    2794:	ldrd	r0, [r3, #-8]
    2798:	sub	r3, fp, #572	; 0x23c
    279c:	mov	r2, r3
    27a0:	bl	0 <coda_str64>
    27a4:	ldr	r3, [fp, #-600]	; 0xfffffda8
    27a8:	ldr	r3, [r3, #4]
    27ac:	sub	r3, r3, #1
    27b0:	ldr	r2, [fp, #-600]	; 0xfffffda8
    27b4:	add	r3, r3, #1
    27b8:	lsl	r3, r3, #4
    27bc:	add	r3, r2, r3
    27c0:	ldrd	r2, [r3]
    27c4:	lsr	r4, r2, #3
    27c8:	orr	r4, r4, r3, lsl #29
    27cc:	asr	r5, r3, #3
    27d0:	sub	r3, fp, #596	; 0x254
    27d4:	mov	r2, r3
    27d8:	mov	r0, r4
    27dc:	mov	r1, r5
    27e0:	bl	0 <coda_str64>
    27e4:	ldr	r3, [fp, #-16]
    27e8:	ldr	r1, [r3, #48]	; 0x30
    27ec:	ldr	r3, [fp, #-600]	; 0xfffffda8
    27f0:	ldr	r3, [r3, #4]
    27f4:	sub	r3, r3, #1
    27f8:	ldr	r2, [fp, #-600]	; 0xfffffda8
    27fc:	add	r3, r3, #1
    2800:	lsl	r3, r3, #4
    2804:	add	r3, r2, r3
    2808:	ldrd	r2, [r3]
    280c:	mov	r3, r2
    2810:	and	r3, r3, #7
    2814:	sub	r2, fp, #572	; 0x23c
    2818:	str	r3, [sp, #4]
    281c:	sub	r3, fp, #596	; 0x254
    2820:	str	r3, [sp]
    2824:	mov	r3, r1
    2828:	ldr	r1, [pc, #76]	; 287c <coda_ascbin_cursor_get_available_union_field_index+0x2c8>
    282c:	ldr	r0, [pc, #76]	; 2880 <coda_ascbin_cursor_get_available_union_field_index+0x2cc>
    2830:	bl	0 <coda_set_error>
    2834:	ldr	r0, [fp, #-600]	; 0xfffffda8
    2838:	bl	0 <coda_cursor_add_to_error_message>
    283c:	mvn	r3, #0
    2840:	b	2858 <coda_ascbin_cursor_get_available_union_field_index+0x2a4>
    2844:	sub	r3, fp, #540	; 0x21c
    2848:	ldrd	r2, [r3, #-8]
    284c:	ldr	r3, [fp, #-604]	; 0xfffffda4
    2850:	str	r2, [r3]
    2854:	mov	r3, #0
    2858:	mov	r0, r3
    285c:	sub	sp, fp, #12
    2860:	pop	{r4, r5, fp, pc}
    2864:	.word	0x00000118
    2868:	.word	0x000003f4
    286c:	.word	0x00000379
    2870:	.word	0x00000034
    2874:	.word	0x0000025c
    2878:	.word	0x00000274
    287c:	.word	0x00000290
    2880:	.word	0xfffffed4

00002884 <coda_ascbin_cursor_get_array_dim>:
    2884:	push	{fp, lr}
    2888:	add	fp, sp, #4
    288c:	sub	sp, sp, #56	; 0x38
    2890:	str	r0, [fp, #-48]	; 0xffffffd0
    2894:	str	r1, [fp, #-52]	; 0xffffffcc
    2898:	str	r2, [fp, #-56]	; 0xffffffc8
    289c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    28a0:	ldr	r3, [r3, #4]
    28a4:	sub	r3, r3, #1
    28a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    28ac:	lsl	r3, r3, #4
    28b0:	add	r3, r2, r3
    28b4:	ldr	r3, [r3, #8]
    28b8:	ldr	r3, [r3]
    28bc:	cmp	r3, #99	; 0x63
    28c0:	bhi	28e4 <coda_ascbin_cursor_get_array_dim+0x60>
    28c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    28c8:	ldr	r3, [r3, #4]
    28cc:	sub	r3, r3, #1
    28d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    28d4:	lsl	r3, r3, #4
    28d8:	add	r3, r2, r3
    28dc:	ldr	r3, [r3, #8]
    28e0:	b	2904 <coda_ascbin_cursor_get_array_dim+0x80>
    28e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    28e8:	ldr	r3, [r3, #4]
    28ec:	sub	r3, r3, #1
    28f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    28f4:	lsl	r3, r3, #4
    28f8:	add	r3, r2, r3
    28fc:	ldr	r3, [r3, #8]
    2900:	ldr	r3, [r3, #4]
    2904:	str	r3, [fp, #-12]
    2908:	ldr	r3, [fp, #-12]
    290c:	ldr	r2, [r3, #48]	; 0x30
    2910:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2914:	str	r2, [r3]
    2918:	mov	r3, #0
    291c:	str	r3, [fp, #-8]
    2920:	b	2a30 <coda_ascbin_cursor_get_array_dim+0x1ac>
    2924:	ldr	r2, [fp, #-12]
    2928:	ldr	r3, [fp, #-8]
    292c:	add	r3, r3, #12
    2930:	lsl	r3, r3, #2
    2934:	add	r3, r2, r3
    2938:	ldr	r3, [r3, #4]
    293c:	cmn	r3, #1
    2940:	bne	29f8 <coda_ascbin_cursor_get_array_dim+0x174>
    2944:	ldr	r2, [fp, #-12]
    2948:	ldr	r3, [fp, #-8]
    294c:	add	r3, r3, #20
    2950:	lsl	r3, r3, #2
    2954:	add	r3, r2, r3
    2958:	ldr	r3, [r3, #4]
    295c:	sub	r2, fp, #20
    2960:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2964:	mov	r0, r3
    2968:	bl	0 <coda_expression_eval_integer>
    296c:	mov	r3, r0
    2970:	cmp	r3, #0
    2974:	beq	2994 <coda_ascbin_cursor_get_array_dim+0x110>
    2978:	ldr	r1, [fp, #-8]
    297c:	ldr	r0, [pc, #208]	; 2a54 <coda_ascbin_cursor_get_array_dim+0x1d0>
    2980:	bl	0 <coda_add_error_message>
    2984:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2988:	bl	0 <coda_cursor_add_to_error_message>
    298c:	mvn	r3, #0
    2990:	b	2a48 <coda_ascbin_cursor_get_array_dim+0x1c4>
    2994:	ldrd	r2, [fp, #-20]	; 0xffffffec
    2998:	cmp	r2, #0
    299c:	sbcs	r3, r3, #0
    29a0:	bge	29d8 <coda_ascbin_cursor_get_array_dim+0x154>
    29a4:	ldrd	r0, [fp, #-20]	; 0xffffffec
    29a8:	sub	r3, fp, #44	; 0x2c
    29ac:	mov	r2, r3
    29b0:	bl	0 <coda_str64>
    29b4:	sub	r3, fp, #44	; 0x2c
    29b8:	mov	r2, r3
    29bc:	ldr	r1, [pc, #148]	; 2a58 <coda_ascbin_cursor_get_array_dim+0x1d4>
    29c0:	ldr	r0, [pc, #148]	; 2a5c <coda_ascbin_cursor_get_array_dim+0x1d8>
    29c4:	bl	0 <coda_set_error>
    29c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29cc:	bl	0 <coda_cursor_add_to_error_message>
    29d0:	mvn	r3, #0
    29d4:	b	2a48 <coda_ascbin_cursor_get_array_dim+0x1c4>
    29d8:	ldr	r3, [fp, #-8]
    29dc:	lsl	r3, r3, #2
    29e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29e4:	add	r1, r2, r3
    29e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
    29ec:	mov	r3, r2
    29f0:	str	r3, [r1]
    29f4:	b	2a24 <coda_ascbin_cursor_get_array_dim+0x1a0>
    29f8:	ldr	r3, [fp, #-8]
    29fc:	lsl	r3, r3, #2
    2a00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a04:	add	r2, r2, r3
    2a08:	ldr	r1, [fp, #-12]
    2a0c:	ldr	r3, [fp, #-8]
    2a10:	add	r3, r3, #12
    2a14:	lsl	r3, r3, #2
    2a18:	add	r3, r1, r3
    2a1c:	ldr	r3, [r3, #4]
    2a20:	str	r3, [r2]
    2a24:	ldr	r3, [fp, #-8]
    2a28:	add	r3, r3, #1
    2a2c:	str	r3, [fp, #-8]
    2a30:	ldr	r3, [fp, #-12]
    2a34:	ldr	r2, [r3, #48]	; 0x30
    2a38:	ldr	r3, [fp, #-8]
    2a3c:	cmp	r2, r3
    2a40:	bgt	2924 <coda_ascbin_cursor_get_array_dim+0xa0>
    2a44:	mov	r3, #0
    2a48:	mov	r0, r3
    2a4c:	sub	sp, fp, #4
    2a50:	pop	{fp, pc}
    2a54:	.word	0x00000184
    2a58:	.word	0x00000310
    2a5c:	.word	0xfffffed4
