
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/pilha_contentores.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pilha_novo_elemento>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #16
   c:	str	r0, [fp, #-16]
  10:	mov	r0, #8
  14:	bl	0 <malloc>
  18:	mov	r3, r0
  1c:	str	r3, [fp, #-8]
  20:	ldr	r3, [fp, #-8]
  24:	cmp	r3, #0
  28:	bne	34 <pilha_novo_elemento+0x34>
  2c:	mov	r3, #0
  30:	b	8c <pilha_novo_elemento+0x8c>
  34:	ldr	r3, [fp, #-16]
  38:	ldr	r2, [r3]
  3c:	ldr	r3, [fp, #-16]
  40:	vldr	s15, [r3, #4]
  44:	vmov.f32	s0, s15
  48:	mov	r0, r2
  4c:	bl	0 <contentor_novo>
  50:	mov	r2, r0
  54:	ldr	r3, [fp, #-8]
  58:	str	r2, [r3]
  5c:	ldr	r3, [fp, #-8]
  60:	ldr	r3, [r3]
  64:	cmp	r3, #0
  68:	bne	7c <pilha_novo_elemento+0x7c>
  6c:	ldr	r0, [fp, #-8]
  70:	bl	0 <free>
  74:	mov	r3, #0
  78:	b	8c <pilha_novo_elemento+0x8c>
  7c:	ldr	r3, [fp, #-8]
  80:	mov	r2, #0
  84:	str	r2, [r3, #4]
  88:	ldr	r3, [fp, #-8]
  8c:	mov	r0, r3
  90:	sub	sp, fp, #4
  94:	pop	{fp, pc}

00000098 <pilha_nova>:
  98:	push	{fp, lr}
  9c:	add	fp, sp, #4
  a0:	sub	sp, sp, #8
  a4:	mov	r0, #8
  a8:	bl	0 <malloc>
  ac:	mov	r3, r0
  b0:	str	r3, [fp, #-8]
  b4:	ldr	r3, [fp, #-8]
  b8:	cmp	r3, #0
  bc:	bne	c8 <pilha_nova+0x30>
  c0:	mov	r3, #0
  c4:	b	e4 <pilha_nova+0x4c>
  c8:	ldr	r3, [fp, #-8]
  cc:	mov	r2, #0
  d0:	str	r2, [r3]
  d4:	ldr	r3, [fp, #-8]
  d8:	mov	r2, #0
  dc:	str	r2, [r3, #4]
  e0:	ldr	r3, [fp, #-8]
  e4:	mov	r0, r3
  e8:	sub	sp, fp, #4
  ec:	pop	{fp, pc}

000000f0 <pilha_apaga>:
  f0:	push	{fp, lr}
  f4:	add	fp, sp, #4
  f8:	sub	sp, sp, #16
  fc:	str	r0, [fp, #-16]
 100:	ldr	r3, [fp, #-16]
 104:	cmp	r3, #0
 108:	beq	168 <pilha_apaga+0x78>
 10c:	b	148 <pilha_apaga+0x58>
 110:	ldr	r3, [fp, #-16]
 114:	ldr	r3, [r3]
 118:	str	r3, [fp, #-8]
 11c:	ldr	r3, [fp, #-16]
 120:	ldr	r3, [r3]
 124:	ldr	r2, [r3, #4]
 128:	ldr	r3, [fp, #-16]
 12c:	str	r2, [r3]
 130:	ldr	r3, [fp, #-8]
 134:	ldr	r3, [r3]
 138:	mov	r0, r3
 13c:	bl	0 <contentor_apaga>
 140:	ldr	r0, [fp, #-8]
 144:	bl	0 <free>
 148:	ldr	r3, [fp, #-16]
 14c:	ldr	r3, [r3]
 150:	cmp	r3, #0
 154:	bne	110 <pilha_apaga+0x20>
 158:	ldr	r0, [fp, #-16]
 15c:	bl	0 <free>
 160:	nop			; (mov r0, r0)
 164:	b	16c <pilha_apaga+0x7c>
 168:	nop			; (mov r0, r0)
 16c:	sub	sp, fp, #4
 170:	pop	{fp, pc}

00000174 <pilha_tamanho>:
 174:	push	{fp}		; (str fp, [sp, #-4]!)
 178:	add	fp, sp, #0
 17c:	sub	sp, sp, #12
 180:	str	r0, [fp, #-8]
 184:	ldr	r3, [fp, #-8]
 188:	cmp	r3, #0
 18c:	bne	198 <pilha_tamanho+0x24>
 190:	mvn	r3, #0
 194:	b	1a0 <pilha_tamanho+0x2c>
 198:	ldr	r3, [fp, #-8]
 19c:	ldr	r3, [r3, #4]
 1a0:	mov	r0, r3
 1a4:	add	sp, fp, #0
 1a8:	pop	{fp}		; (ldr fp, [sp], #4)
 1ac:	bx	lr

000001b0 <pilha_top>:
 1b0:	push	{fp}		; (str fp, [sp, #-4]!)
 1b4:	add	fp, sp, #0
 1b8:	sub	sp, sp, #20
 1bc:	str	r0, [fp, #-16]
 1c0:	ldr	r3, [fp, #-16]
 1c4:	cmp	r3, #0
 1c8:	beq	1dc <pilha_top+0x2c>
 1cc:	ldr	r3, [fp, #-16]
 1d0:	ldr	r3, [r3, #4]
 1d4:	cmp	r3, #0
 1d8:	bne	1e4 <pilha_top+0x34>
 1dc:	mov	r3, #0
 1e0:	b	1f8 <pilha_top+0x48>
 1e4:	ldr	r3, [fp, #-16]
 1e8:	ldr	r3, [r3]
 1ec:	str	r3, [fp, #-8]
 1f0:	ldr	r3, [fp, #-8]
 1f4:	ldr	r3, [r3]
 1f8:	mov	r0, r3
 1fc:	add	sp, fp, #0
 200:	pop	{fp}		; (ldr fp, [sp], #4)
 204:	bx	lr

00000208 <pilha_push>:
 208:	push	{fp, lr}
 20c:	add	fp, sp, #4
 210:	sub	sp, sp, #16
 214:	str	r0, [fp, #-16]
 218:	str	r1, [fp, #-20]	; 0xffffffec
 21c:	mov	r3, #0
 220:	str	r3, [fp, #-8]
 224:	ldr	r3, [fp, #-16]
 228:	cmp	r3, #0
 22c:	beq	29c <pilha_push+0x94>
 230:	ldr	r0, [fp, #-20]	; 0xffffffec
 234:	bl	0 <pilha_novo_elemento>
 238:	str	r0, [fp, #-8]
 23c:	ldr	r3, [fp, #-8]
 240:	cmp	r3, #0
 244:	beq	2a4 <pilha_push+0x9c>
 248:	ldr	r3, [fp, #-16]
 24c:	ldr	r3, [r3, #4]
 250:	add	r2, r3, #1
 254:	ldr	r3, [fp, #-16]
 258:	str	r2, [r3, #4]
 25c:	ldr	r3, [fp, #-16]
 260:	ldr	r3, [r3]
 264:	cmp	r3, #0
 268:	bne	27c <pilha_push+0x74>
 26c:	ldr	r3, [fp, #-16]
 270:	ldr	r2, [fp, #-8]
 274:	str	r2, [r3]
 278:	b	2a8 <pilha_push+0xa0>
 27c:	ldr	r3, [fp, #-16]
 280:	ldr	r2, [r3]
 284:	ldr	r3, [fp, #-8]
 288:	str	r2, [r3, #4]
 28c:	ldr	r3, [fp, #-16]
 290:	ldr	r2, [fp, #-8]
 294:	str	r2, [r3]
 298:	b	2a8 <pilha_push+0xa0>
 29c:	nop			; (mov r0, r0)
 2a0:	b	2a8 <pilha_push+0xa0>
 2a4:	nop			; (mov r0, r0)
 2a8:	sub	sp, fp, #4
 2ac:	pop	{fp, pc}

000002b0 <pilha_pop>:
 2b0:	push	{fp, lr}
 2b4:	add	fp, sp, #4
 2b8:	sub	sp, sp, #16
 2bc:	str	r0, [fp, #-16]
 2c0:	ldr	r3, [fp, #-16]
 2c4:	cmp	r3, #0
 2c8:	beq	328 <pilha_pop+0x78>
 2cc:	ldr	r3, [fp, #-16]
 2d0:	ldr	r3, [r3, #4]
 2d4:	cmp	r3, #0
 2d8:	beq	328 <pilha_pop+0x78>
 2dc:	ldr	r3, [fp, #-16]
 2e0:	ldr	r3, [r3]
 2e4:	str	r3, [fp, #-8]
 2e8:	ldr	r3, [fp, #-8]
 2ec:	ldr	r2, [r3, #4]
 2f0:	ldr	r3, [fp, #-16]
 2f4:	str	r2, [r3]
 2f8:	ldr	r3, [fp, #-16]
 2fc:	ldr	r3, [r3, #4]
 300:	sub	r2, r3, #1
 304:	ldr	r3, [fp, #-16]
 308:	str	r2, [r3, #4]
 30c:	ldr	r3, [fp, #-8]
 310:	ldr	r3, [r3]
 314:	mov	r0, r3
 318:	bl	0 <contentor_apaga>
 31c:	ldr	r0, [fp, #-8]
 320:	bl	0 <free>
 324:	b	32c <pilha_pop+0x7c>
 328:	nop			; (mov r0, r0)
 32c:	sub	sp, fp, #4
 330:	pop	{fp, pc}
