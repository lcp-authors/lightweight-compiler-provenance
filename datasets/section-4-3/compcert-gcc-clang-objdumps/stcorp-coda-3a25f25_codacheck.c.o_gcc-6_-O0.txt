
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codacheck.dir/tools/codacheck/codacheck.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_version>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	bl	0 <coda_get_libcoda_version>
   c:	mov	r3, r0
  10:	mov	r1, r3
  14:	ldr	r0, [pc, #24]	; 34 <print_version+0x34>
  18:	bl	0 <printf>
  1c:	ldr	r0, [pc, #20]	; 38 <print_version+0x38>
  20:	bl	0 <puts>
  24:	mov	r0, #10
  28:	bl	0 <putchar>
  2c:	nop			; (mov r0, r0)
  30:	pop	{fp, pc}
  34:	.word	0x00000000
  38:	.word	0x00000018

0000003c <print_help>:
  3c:	push	{fp, lr}
  40:	add	fp, sp, #4
  44:	ldr	r0, [pc, #264]	; 154 <print_help+0x118>
  48:	bl	0 <puts>
  4c:	ldr	r0, [pc, #260]	; 158 <print_help+0x11c>
  50:	bl	0 <puts>
  54:	ldr	r0, [pc, #256]	; 15c <print_help+0x120>
  58:	bl	0 <puts>
  5c:	ldr	r0, [pc, #252]	; 160 <print_help+0x124>
  60:	bl	0 <puts>
  64:	ldr	r0, [pc, #248]	; 164 <print_help+0x128>
  68:	bl	0 <puts>
  6c:	ldr	r0, [pc, #244]	; 168 <print_help+0x12c>
  70:	bl	0 <puts>
  74:	ldr	r0, [pc, #240]	; 16c <print_help+0x130>
  78:	bl	0 <puts>
  7c:	ldr	r0, [pc, #236]	; 170 <print_help+0x134>
  80:	bl	0 <puts>
  84:	ldr	r0, [pc, #232]	; 174 <print_help+0x138>
  88:	bl	0 <puts>
  8c:	ldr	r0, [pc, #228]	; 178 <print_help+0x13c>
  90:	bl	0 <puts>
  94:	ldr	r0, [pc, #224]	; 17c <print_help+0x140>
  98:	bl	0 <puts>
  9c:	ldr	r0, [pc, #220]	; 180 <print_help+0x144>
  a0:	bl	0 <puts>
  a4:	ldr	r0, [pc, #216]	; 184 <print_help+0x148>
  a8:	bl	0 <puts>
  ac:	ldr	r0, [pc, #212]	; 188 <print_help+0x14c>
  b0:	bl	0 <puts>
  b4:	ldr	r0, [pc, #208]	; 18c <print_help+0x150>
  b8:	bl	0 <puts>
  bc:	mov	r0, #10
  c0:	bl	0 <putchar>
  c4:	ldr	r0, [pc, #196]	; 190 <print_help+0x154>
  c8:	bl	0 <puts>
  cc:	ldr	r0, [pc, #192]	; 194 <print_help+0x158>
  d0:	bl	0 <puts>
  d4:	mov	r0, #10
  d8:	bl	0 <putchar>
  dc:	ldr	r0, [pc, #180]	; 198 <print_help+0x15c>
  e0:	bl	0 <puts>
  e4:	ldr	r0, [pc, #176]	; 19c <print_help+0x160>
  e8:	bl	0 <puts>
  ec:	mov	r0, #10
  f0:	bl	0 <putchar>
  f4:	ldr	r0, [pc, #164]	; 1a0 <print_help+0x164>
  f8:	bl	0 <puts>
  fc:	ldr	r0, [pc, #160]	; 1a4 <print_help+0x168>
 100:	bl	0 <puts>
 104:	mov	r0, #10
 108:	bl	0 <putchar>
 10c:	ldr	r0, [pc, #148]	; 1a8 <print_help+0x16c>
 110:	bl	0 <puts>
 114:	ldr	r0, [pc, #144]	; 1ac <print_help+0x170>
 118:	bl	0 <puts>
 11c:	ldr	r0, [pc, #140]	; 1b0 <print_help+0x174>
 120:	bl	0 <puts>
 124:	ldr	r0, [pc, #136]	; 1b4 <print_help+0x178>
 128:	bl	0 <puts>
 12c:	ldr	r0, [pc, #132]	; 1b8 <print_help+0x17c>
 130:	bl	0 <puts>
 134:	ldr	r0, [pc, #128]	; 1bc <print_help+0x180>
 138:	bl	0 <puts>
 13c:	ldr	r0, [pc, #124]	; 1c0 <print_help+0x184>
 140:	bl	0 <puts>
 144:	mov	r0, #10
 148:	bl	0 <putchar>
 14c:	nop			; (mov r0, r0)
 150:	pop	{fp, pc}
 154:	.word	0x00000048
 158:	.word	0x00000050
 15c:	.word	0x00000088
 160:	.word	0x000000d0
 164:	.word	0x000000e4
 168:	.word	0x00000104
 16c:	.word	0x00000154
 170:	.word	0x0000019c
 174:	.word	0x000001e8
 178:	.word	0x00000200
 17c:	.word	0x00000240
 180:	.word	0x00000278
 184:	.word	0x00000294
 188:	.word	0x000002dc
 18c:	.word	0x000002f4
 190:	.word	0x00000334
 194:	.word	0x00000384
 198:	.word	0x000003a0
 19c:	.word	0x000003bc
 1a0:	.word	0x000003dc
 1a4:	.word	0x000003f8
 1a8:	.word	0x0000042c
 1ac:	.word	0x0000047c
 1b0:	.word	0x000004c8
 1b4:	.word	0x000004f4
 1b8:	.word	0x00000540
 1bc:	.word	0x00000588
 1c0:	.word	0x000005c8

000001c4 <print_error>:
 1c4:	push	{fp, lr}
 1c8:	add	fp, sp, #4
 1cc:	sub	sp, sp, #16
 1d0:	str	r0, [fp, #-8]
 1d4:	str	r1, [fp, #-12]
 1d8:	str	r2, [fp, #-16]
 1dc:	ldr	r1, [fp, #-12]
 1e0:	ldr	r0, [pc, #64]	; 228 <print_error+0x64>
 1e4:	bl	0 <printf>
 1e8:	ldr	r3, [fp, #-8]
 1ec:	cmp	r3, #0
 1f0:	beq	208 <print_error+0x44>
 1f4:	ldr	r0, [pc, #48]	; 22c <print_error+0x68>
 1f8:	bl	0 <printf>
 1fc:	ldr	r1, [pc, #44]	; 230 <print_error+0x6c>
 200:	ldr	r0, [fp, #-8]
 204:	bl	0 <coda_cursor_print_path>
 208:	mov	r0, #10
 20c:	bl	0 <putchar>
 210:	ldr	r3, [pc, #28]	; 234 <print_error+0x70>
 214:	mov	r2, #1
 218:	str	r2, [r3]
 21c:	nop			; (mov r0, r0)
 220:	sub	sp, fp, #4
 224:	pop	{fp, pc}
 228:	.word	0x00000608
 22c:	.word	0x00000614
	...

00000238 <check_file>:
 238:	push	{fp, lr}
 23c:	add	fp, sp, #4
 240:	sub	sp, sp, #56	; 0x38
 244:	str	r0, [fp, #-48]	; 0xffffffd0
 248:	ldr	r0, [fp, #-48]	; 0xffffffd0
 24c:	bl	0 <puts>
 250:	sub	r0, fp, #32
 254:	sub	r2, fp, #16
 258:	sub	r1, fp, #28
 25c:	sub	r3, fp, #40	; 0x28
 260:	str	r3, [sp, #4]
 264:	sub	r3, fp, #36	; 0x24
 268:	str	r3, [sp]
 26c:	mov	r3, r0
 270:	ldr	r0, [fp, #-48]	; 0xffffffd0
 274:	bl	0 <coda_recognize_file>
 278:	mov	r3, r0
 27c:	cmp	r3, #0
 280:	beq	2c4 <check_file+0x8c>
 284:	bl	0 <coda_get_errno>
 288:	mov	r3, r0
 28c:	ldr	r3, [r3]
 290:	mov	r0, r3
 294:	bl	0 <coda_errno_to_string>
 298:	mov	r3, r0
 29c:	mov	r1, r3
 2a0:	ldr	r0, [pc, #552]	; 4d0 <check_file+0x298>
 2a4:	bl	0 <printf>
 2a8:	mov	r1, #0
 2ac:	mov	r0, #0
 2b0:	bl	0 <coda_set_error>
 2b4:	ldr	r3, [pc, #536]	; 4d4 <check_file+0x29c>
 2b8:	mov	r2, #1
 2bc:	str	r2, [r3]
 2c0:	b	4c8 <check_file+0x290>
 2c4:	ldr	r3, [pc, #524]	; 4d8 <check_file+0x2a0>
 2c8:	ldr	r3, [r3]
 2cc:	cmp	r3, #0
 2d0:	beq	304 <check_file+0xcc>
 2d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 2d8:	cmp	r3, #0
 2dc:	beq	2ec <check_file+0xb4>
 2e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
 2e4:	cmp	r3, #0
 2e8:	bne	304 <check_file+0xcc>
 2ec:	ldr	r0, [pc, #488]	; 4dc <check_file+0x2a4>
 2f0:	bl	0 <puts>
 2f4:	ldr	r3, [pc, #472]	; 4d4 <check_file+0x29c>
 2f8:	mov	r2, #1
 2fc:	str	r2, [r3]
 300:	b	4c8 <check_file+0x290>
 304:	ldr	r3, [pc, #468]	; 4e0 <check_file+0x2a8>
 308:	ldr	r3, [r3]
 30c:	cmp	r3, #0
 310:	beq	364 <check_file+0x12c>
 314:	ldr	r3, [fp, #-16]
 318:	mov	r0, r3
 31c:	bl	0 <coda_type_get_format_name>
 320:	mov	r3, r0
 324:	mov	r1, r3
 328:	ldr	r0, [pc, #436]	; 4e4 <check_file+0x2ac>
 32c:	bl	0 <printf>
 330:	ldr	r3, [fp, #-32]	; 0xffffffe0
 334:	cmp	r3, #0
 338:	beq	35c <check_file+0x124>
 33c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 340:	cmp	r3, #0
 344:	beq	35c <check_file+0x124>
 348:	ldr	r1, [fp, #-32]	; 0xffffffe0
 34c:	ldr	r2, [fp, #-36]	; 0xffffffdc
 350:	ldr	r3, [fp, #-40]	; 0xffffffd8
 354:	ldr	r0, [pc, #396]	; 4e8 <check_file+0x2b0>
 358:	bl	0 <printf>
 35c:	mov	r0, #10
 360:	bl	0 <putchar>
 364:	sub	r3, fp, #12
 368:	mov	r1, r3
 36c:	ldr	r0, [fp, #-48]	; 0xffffffd0
 370:	bl	0 <coda_open>
 374:	str	r0, [fp, #-8]
 378:	ldr	r3, [fp, #-8]
 37c:	cmp	r3, #0
 380:	beq	3bc <check_file+0x184>
 384:	bl	0 <coda_get_errno>
 388:	mov	r3, r0
 38c:	ldr	r3, [r3]
 390:	cmn	r3, #21
 394:	bne	3bc <check_file+0x184>
 398:	mov	r0, #0
 39c:	bl	0 <coda_set_option_use_mmap>
 3a0:	sub	r3, fp, #12
 3a4:	mov	r1, r3
 3a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
 3ac:	bl	0 <coda_open>
 3b0:	str	r0, [fp, #-8]
 3b4:	mov	r0, #1
 3b8:	bl	0 <coda_set_option_use_mmap>
 3bc:	ldr	r3, [fp, #-8]
 3c0:	cmp	r3, #0
 3c4:	beq	3fc <check_file+0x1c4>
 3c8:	bl	0 <coda_get_errno>
 3cc:	mov	r3, r0
 3d0:	ldr	r3, [r3]
 3d4:	mov	r0, r3
 3d8:	bl	0 <coda_errno_to_string>
 3dc:	mov	r3, r0
 3e0:	mov	r1, r3
 3e4:	ldr	r0, [pc, #228]	; 4d0 <check_file+0x298>
 3e8:	bl	0 <printf>
 3ec:	ldr	r3, [pc, #224]	; 4d4 <check_file+0x29c>
 3f0:	mov	r2, #1
 3f4:	str	r2, [r3]
 3f8:	b	4c8 <check_file+0x290>
 3fc:	ldr	r0, [fp, #-12]
 400:	ldr	r3, [pc, #228]	; 4ec <check_file+0x2b4>
 404:	ldr	r3, [r3]
 408:	cmp	r3, #0
 40c:	moveq	r3, #1
 410:	movne	r3, #0
 414:	uxtb	r3, r3
 418:	mov	r1, r3
 41c:	mov	r3, #0
 420:	ldr	r2, [pc, #200]	; 4f0 <check_file+0x2b8>
 424:	bl	0 <coda_product_check>
 428:	mov	r3, r0
 42c:	cmp	r3, #0
 430:	beq	474 <check_file+0x23c>
 434:	bl	0 <coda_get_errno>
 438:	mov	r3, r0
 43c:	ldr	r3, [r3]
 440:	mov	r0, r3
 444:	bl	0 <coda_errno_to_string>
 448:	mov	r3, r0
 44c:	mov	r1, r3
 450:	ldr	r0, [pc, #120]	; 4d0 <check_file+0x298>
 454:	bl	0 <printf>
 458:	ldr	r3, [pc, #116]	; 4d4 <check_file+0x29c>
 45c:	mov	r2, #1
 460:	str	r2, [r3]
 464:	ldr	r3, [fp, #-12]
 468:	mov	r0, r3
 46c:	bl	0 <coda_close>
 470:	b	4c8 <check_file+0x290>
 474:	ldr	r3, [fp, #-12]
 478:	mov	r0, r3
 47c:	bl	0 <coda_close>
 480:	mov	r3, r0
 484:	cmp	r3, #0
 488:	beq	4c0 <check_file+0x288>
 48c:	bl	0 <coda_get_errno>
 490:	mov	r3, r0
 494:	ldr	r3, [r3]
 498:	mov	r0, r3
 49c:	bl	0 <coda_errno_to_string>
 4a0:	mov	r3, r0
 4a4:	mov	r1, r3
 4a8:	ldr	r0, [pc, #68]	; 4f4 <check_file+0x2bc>
 4ac:	bl	0 <printf>
 4b0:	ldr	r3, [pc, #28]	; 4d4 <check_file+0x29c>
 4b4:	mov	r2, #1
 4b8:	str	r2, [r3]
 4bc:	b	4c8 <check_file+0x290>
 4c0:	mov	r0, #10
 4c4:	bl	0 <putchar>
 4c8:	sub	sp, fp, #4
 4cc:	pop	{fp, pc}
 4d0:	.word	0x0000061c
	...
 4dc:	.word	0x0000062c
 4e0:	.word	0x00000000
 4e4:	.word	0x00000658
 4e8:	.word	0x00000670
	...
 4f4:	.word	0x0000067c

000004f8 <main>:
 4f8:	push	{r4, fp, lr}
 4fc:	add	fp, sp, #8
 500:	sub	sp, sp, #1024	; 0x400
 504:	sub	sp, sp, #12
 508:	str	r0, [fp, #-1040]	; 0xfffffbf0
 50c:	str	r1, [fp, #-1044]	; 0xfffffbec
 510:	mov	r3, #0
 514:	str	r3, [fp, #-16]
 518:	ldr	r3, [pc, #1448]	; ac8 <main+0x5d0>
 51c:	mov	r2, #0
 520:	str	r2, [r3]
 524:	ldr	r3, [pc, #1440]	; acc <main+0x5d4>
 528:	mov	r2, #0
 52c:	str	r2, [r3]
 530:	mov	r3, #1
 534:	str	r3, [fp, #-20]	; 0xffffffec
 538:	ldr	r3, [pc, #1424]	; ad0 <main+0x5d8>
 53c:	mov	r2, #0
 540:	str	r2, [r3]
 544:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
 548:	cmp	r3, #1
 54c:	beq	598 <main+0xa0>
 550:	ldr	r3, [fp, #-1044]	; 0xfffffbec
 554:	add	r3, r3, #4
 558:	ldr	r3, [r3]
 55c:	ldr	r1, [pc, #1392]	; ad4 <main+0x5dc>
 560:	mov	r0, r3
 564:	bl	0 <strcmp>
 568:	mov	r3, r0
 56c:	cmp	r3, #0
 570:	beq	598 <main+0xa0>
 574:	ldr	r3, [fp, #-1044]	; 0xfffffbec
 578:	add	r3, r3, #4
 57c:	ldr	r3, [r3]
 580:	ldr	r1, [pc, #1360]	; ad8 <main+0x5e0>
 584:	mov	r0, r3
 588:	bl	0 <strcmp>
 58c:	mov	r3, r0
 590:	cmp	r3, #0
 594:	bne	5a4 <main+0xac>
 598:	bl	3c <print_help>
 59c:	mov	r0, #0
 5a0:	bl	0 <exit>
 5a4:	ldr	r3, [fp, #-1044]	; 0xfffffbec
 5a8:	add	r3, r3, #4
 5ac:	ldr	r3, [r3]
 5b0:	ldr	r1, [pc, #1316]	; adc <main+0x5e4>
 5b4:	mov	r0, r3
 5b8:	bl	0 <strcmp>
 5bc:	mov	r3, r0
 5c0:	cmp	r3, #0
 5c4:	beq	5ec <main+0xf4>
 5c8:	ldr	r3, [fp, #-1044]	; 0xfffffbec
 5cc:	add	r3, r3, #4
 5d0:	ldr	r3, [r3]
 5d4:	ldr	r1, [pc, #1284]	; ae0 <main+0x5e8>
 5d8:	mov	r0, r3
 5dc:	bl	0 <strcmp>
 5e0:	mov	r3, r0
 5e4:	cmp	r3, #0
 5e8:	bne	5f8 <main+0x100>
 5ec:	bl	0 <print_version>
 5f0:	mov	r0, #0
 5f4:	bl	0 <exit>
 5f8:	mov	r3, #1
 5fc:	str	r3, [fp, #-24]	; 0xffffffe8
 600:	ldr	r3, [fp, #-24]	; 0xffffffe8
 604:	add	r2, r3, #1
 608:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
 60c:	cmp	r2, r3
 610:	bge	670 <main+0x178>
 614:	ldr	r3, [fp, #-24]	; 0xffffffe8
 618:	lsl	r3, r3, #2
 61c:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 620:	add	r3, r2, r3
 624:	ldr	r3, [r3]
 628:	ldr	r1, [pc, #1204]	; ae4 <main+0x5ec>
 62c:	mov	r0, r3
 630:	bl	0 <strcmp>
 634:	mov	r3, r0
 638:	cmp	r3, #0
 63c:	bne	670 <main+0x178>
 640:	ldr	r3, [fp, #-24]	; 0xffffffe8
 644:	add	r3, r3, #1
 648:	lsl	r3, r3, #2
 64c:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 650:	add	r3, r2, r3
 654:	ldr	r3, [r3]
 658:	mov	r0, r3
 65c:	bl	0 <coda_set_definition_path>
 660:	ldr	r3, [fp, #-24]	; 0xffffffe8
 664:	add	r3, r3, #2
 668:	str	r3, [fp, #-24]	; 0xffffffe8
 66c:	b	6d4 <main+0x1dc>
 670:	ldr	r3, [pc, #1136]	; ae8 <main+0x5f0>
 674:	str	r3, [fp, #-32]	; 0xffffffe0
 678:	ldr	r3, [fp, #-1044]	; 0xfffffbec
 67c:	ldr	r3, [r3]
 680:	ldr	r2, [fp, #-32]	; 0xffffffe0
 684:	mov	r1, #0
 688:	mov	r0, r3
 68c:	bl	0 <coda_set_definition_path_conditional>
 690:	mov	r3, r0
 694:	cmp	r3, #0
 698:	beq	8e4 <main+0x3ec>
 69c:	ldr	r3, [pc, #1096]	; aec <main+0x5f4>
 6a0:	ldr	r4, [r3]
 6a4:	bl	0 <coda_get_errno>
 6a8:	mov	r3, r0
 6ac:	ldr	r3, [r3]
 6b0:	mov	r0, r3
 6b4:	bl	0 <coda_errno_to_string>
 6b8:	mov	r3, r0
 6bc:	mov	r2, r3
 6c0:	ldr	r1, [pc, #1064]	; af0 <main+0x5f8>
 6c4:	mov	r0, r4
 6c8:	bl	0 <fprintf>
 6cc:	mov	r0, #1
 6d0:	bl	0 <exit>
 6d4:	b	8e4 <main+0x3ec>
 6d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 6dc:	lsl	r3, r3, #2
 6e0:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 6e4:	add	r3, r2, r3
 6e8:	ldr	r3, [r3]
 6ec:	ldr	r1, [pc, #1024]	; af4 <main+0x5fc>
 6f0:	mov	r0, r3
 6f4:	bl	0 <strcmp>
 6f8:	mov	r3, r0
 6fc:	cmp	r3, #0
 700:	beq	730 <main+0x238>
 704:	ldr	r3, [fp, #-24]	; 0xffffffe8
 708:	lsl	r3, r3, #2
 70c:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 710:	add	r3, r2, r3
 714:	ldr	r3, [r3]
 718:	ldr	r1, [pc, #984]	; af8 <main+0x600>
 71c:	mov	r0, r3
 720:	bl	0 <strcmp>
 724:	mov	r3, r0
 728:	cmp	r3, #0
 72c:	bne	740 <main+0x248>
 730:	ldr	r3, [pc, #912]	; ac8 <main+0x5d0>
 734:	mov	r2, #1
 738:	str	r2, [r3]
 73c:	b	8d8 <main+0x3e0>
 740:	ldr	r3, [fp, #-24]	; 0xffffffe8
 744:	lsl	r3, r3, #2
 748:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 74c:	add	r3, r2, r3
 750:	ldr	r3, [r3]
 754:	ldr	r1, [pc, #928]	; afc <main+0x604>
 758:	mov	r0, r3
 75c:	bl	0 <strcmp>
 760:	mov	r3, r0
 764:	cmp	r3, #0
 768:	beq	798 <main+0x2a0>
 76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 770:	lsl	r3, r3, #2
 774:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 778:	add	r3, r2, r3
 77c:	ldr	r3, [r3]
 780:	ldr	r1, [pc, #888]	; b00 <main+0x608>
 784:	mov	r0, r3
 788:	bl	0 <strcmp>
 78c:	mov	r3, r0
 790:	cmp	r3, #0
 794:	bne	7a8 <main+0x2b0>
 798:	ldr	r3, [pc, #812]	; acc <main+0x5d4>
 79c:	mov	r2, #1
 7a0:	str	r2, [r3]
 7a4:	b	8d8 <main+0x3e0>
 7a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7ac:	lsl	r3, r3, #2
 7b0:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 7b4:	add	r3, r2, r3
 7b8:	ldr	r3, [r3]
 7bc:	ldr	r1, [pc, #832]	; b04 <main+0x60c>
 7c0:	mov	r0, r3
 7c4:	bl	0 <strcmp>
 7c8:	mov	r3, r0
 7cc:	cmp	r3, #0
 7d0:	beq	800 <main+0x308>
 7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7d8:	lsl	r3, r3, #2
 7dc:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 7e0:	add	r3, r2, r3
 7e4:	ldr	r3, [r3]
 7e8:	ldr	r1, [pc, #792]	; b08 <main+0x610>
 7ec:	mov	r0, r3
 7f0:	bl	0 <strcmp>
 7f4:	mov	r3, r0
 7f8:	cmp	r3, #0
 7fc:	bne	810 <main+0x318>
 800:	ldr	r3, [pc, #712]	; ad0 <main+0x5d8>
 804:	mov	r2, #1
 808:	str	r2, [r3]
 80c:	b	8d8 <main+0x3e0>
 810:	ldr	r3, [fp, #-24]	; 0xffffffe8
 814:	lsl	r3, r3, #2
 818:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 81c:	add	r3, r2, r3
 820:	ldr	r3, [r3]
 824:	ldr	r1, [pc, #736]	; b0c <main+0x614>
 828:	mov	r0, r3
 82c:	bl	0 <strcmp>
 830:	mov	r3, r0
 834:	cmp	r3, #0
 838:	bne	848 <main+0x350>
 83c:	mov	r3, #0
 840:	str	r3, [fp, #-20]	; 0xffffffec
 844:	b	8d8 <main+0x3e0>
 848:	ldr	r3, [fp, #-24]	; 0xffffffe8
 84c:	lsl	r3, r3, #2
 850:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 854:	add	r3, r2, r3
 858:	ldr	r3, [r3]
 85c:	ldr	r1, [pc, #684]	; b10 <main+0x618>
 860:	mov	r0, r3
 864:	bl	0 <strcmp>
 868:	mov	r3, r0
 86c:	cmp	r3, #0
 870:	bne	894 <main+0x39c>
 874:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
 878:	sub	r2, r3, #1
 87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 880:	cmp	r2, r3
 884:	bne	894 <main+0x39c>
 888:	mov	r3, #1
 88c:	str	r3, [fp, #-16]
 890:	b	8fc <main+0x404>
 894:	ldr	r3, [fp, #-24]	; 0xffffffe8
 898:	lsl	r3, r3, #2
 89c:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 8a0:	add	r3, r2, r3
 8a4:	ldr	r3, [r3]
 8a8:	ldrb	r3, [r3]
 8ac:	cmp	r3, #45	; 0x2d
 8b0:	bne	8f8 <main+0x400>
 8b4:	ldr	r3, [pc, #560]	; aec <main+0x5f4>
 8b8:	ldr	r3, [r3]
 8bc:	mov	r2, #25
 8c0:	mov	r1, #1
 8c4:	ldr	r0, [pc, #584]	; b14 <main+0x61c>
 8c8:	bl	0 <fwrite>
 8cc:	bl	3c <print_help>
 8d0:	mov	r0, #1
 8d4:	bl	0 <exit>
 8d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8dc:	add	r3, r3, #1
 8e0:	str	r3, [fp, #-24]	; 0xffffffe8
 8e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
 8e8:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
 8ec:	cmp	r2, r3
 8f0:	blt	6d8 <main+0x1e0>
 8f4:	b	8fc <main+0x404>
 8f8:	nop			; (mov r0, r0)
 8fc:	bl	0 <coda_init>
 900:	mov	r3, r0
 904:	cmp	r3, #0
 908:	beq	944 <main+0x44c>
 90c:	ldr	r3, [pc, #472]	; aec <main+0x5f4>
 910:	ldr	r4, [r3]
 914:	bl	0 <coda_get_errno>
 918:	mov	r3, r0
 91c:	ldr	r3, [r3]
 920:	mov	r0, r3
 924:	bl	0 <coda_errno_to_string>
 928:	mov	r3, r0
 92c:	mov	r2, r3
 930:	ldr	r1, [pc, #440]	; af0 <main+0x5f8>
 934:	mov	r0, r4
 938:	bl	0 <fprintf>
 93c:	mov	r0, #1
 940:	bl	0 <exit>
 944:	mov	r0, #0
 948:	bl	0 <coda_set_option_perform_boundary_checks>
 94c:	mov	r0, #0
 950:	bl	0 <coda_set_option_perform_conversions>
 954:	ldr	r0, [fp, #-20]	; 0xffffffec
 958:	bl	0 <coda_set_option_use_mmap>
 95c:	ldr	r3, [fp, #-16]
 960:	cmp	r3, #0
 964:	beq	a8c <main+0x594>
 968:	mov	r3, #0
 96c:	str	r3, [fp, #-28]	; 0xffffffe4
 970:	bl	0 <getchar>
 974:	mov	r3, r0
 978:	strb	r3, [fp, #-33]	; 0xffffffdf
 97c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
 980:	cmp	r3, #13
 984:	bne	9b8 <main+0x4c0>
 988:	bl	0 <getchar>
 98c:	mov	r3, r0
 990:	strb	r3, [fp, #-34]	; 0xffffffde
 994:	ldrb	r3, [fp, #-34]	; 0xffffffde
 998:	cmp	r3, #10
 99c:	beq	9b8 <main+0x4c0>
 9a0:	ldrb	r2, [fp, #-34]	; 0xffffffde
 9a4:	ldr	r3, [pc, #364]	; b18 <main+0x620>
 9a8:	ldr	r3, [r3]
 9ac:	mov	r1, r3
 9b0:	mov	r0, r2
 9b4:	bl	0 <ungetc>
 9b8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
 9bc:	cmp	r3, #10
 9c0:	beq	9d0 <main+0x4d8>
 9c4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
 9c8:	cmp	r3, #13
 9cc:	bne	9fc <main+0x504>
 9d0:	sub	r2, fp, #1024	; 0x400
 9d4:	sub	r2, r2, #12
 9d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9dc:	add	r3, r2, r3
 9e0:	mov	r2, #0
 9e4:	strb	r2, [r3]
 9e8:	nop			; (mov r0, r0)
 9ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9f0:	cmp	r3, #0
 9f4:	ble	968 <main+0x470>
 9f8:	b	a40 <main+0x548>
 9fc:	sub	r2, fp, #1024	; 0x400
 a00:	sub	r2, r2, #12
 a04:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a08:	add	r3, r2, r3
 a0c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
 a10:	strb	r2, [r3]
 a14:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a18:	add	r3, r3, #1
 a1c:	str	r3, [fp, #-28]	; 0xffffffe4
 a20:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a24:	cmp	r3, #1000	; 0x3e8
 a28:	blt	970 <main+0x478>
 a2c:	ldr	r3, [pc, #232]	; b1c <main+0x624>
 a30:	mov	r2, #316	; 0x13c
 a34:	ldr	r1, [pc, #228]	; b20 <main+0x628>
 a38:	ldr	r0, [pc, #228]	; b24 <main+0x62c>
 a3c:	bl	0 <__assert_fail>
 a40:	sub	r3, fp, #1024	; 0x400
 a44:	sub	r3, r3, #12
 a48:	mov	r0, r3
 a4c:	bl	238 <check_file>
 a50:	mov	r0, #0
 a54:	bl	0 <fflush>
 a58:	b	968 <main+0x470>
 a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a60:	lsl	r3, r3, #2
 a64:	ldr	r2, [fp, #-1044]	; 0xfffffbec
 a68:	add	r3, r2, r3
 a6c:	ldr	r3, [r3]
 a70:	mov	r0, r3
 a74:	bl	238 <check_file>
 a78:	mov	r0, #0
 a7c:	bl	0 <fflush>
 a80:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a84:	add	r3, r3, #1
 a88:	str	r3, [fp, #-24]	; 0xffffffe8
 a8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 a90:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
 a94:	cmp	r2, r3
 a98:	blt	a5c <main+0x564>
 a9c:	bl	0 <coda_done>
 aa0:	ldr	r3, [pc, #128]	; b28 <main+0x630>
 aa4:	ldr	r3, [r3]
 aa8:	cmp	r3, #0
 aac:	beq	ab8 <main+0x5c0>
 ab0:	mov	r0, #1
 ab4:	bl	0 <exit>
 ab8:	mov	r3, #0
 abc:	mov	r0, r3
 ac0:	sub	sp, fp, #8
 ac4:	pop	{r4, fp, pc}
	...
 ad4:	.word	0x0000068c
 ad8:	.word	0x00000690
 adc:	.word	0x00000698
 ae0:	.word	0x0000069c
 ae4:	.word	0x000006a8
 ae8:	.word	0x000006ac
 aec:	.word	0x00000000
 af0:	.word	0x000006c8
 af4:	.word	0x000006d4
 af8:	.word	0x000006d8
 afc:	.word	0x000006e4
 b00:	.word	0x000006e8
 b04:	.word	0x000006f0
 b08:	.word	0x000006f4
 b0c:	.word	0x00000704
 b10:	.word	0x00000710
 b14:	.word	0x00000714
 b18:	.word	0x00000000
 b1c:	.word	0x0000078c
 b20:	.word	0x00000730
 b24:	.word	0x00000780
 b28:	.word	0x00000000
