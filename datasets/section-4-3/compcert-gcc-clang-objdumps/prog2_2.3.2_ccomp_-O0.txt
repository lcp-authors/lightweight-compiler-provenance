
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010548 <.init>:
   10548:	push	{r3, lr}
   1054c:	bl	10670 <abort@plt+0x3c>
   10550:	pop	{r3, pc}

Disassembly of section .plt:

00010554 <calloc@plt-0x14>:
   10554:	push	{lr}		; (str lr, [sp, #-4]!)
   10558:	ldr	lr, [pc, #4]	; 10564 <calloc@plt-0x4>
   1055c:	add	lr, pc, lr
   10560:	ldr	pc, [lr, #8]!
   10564:	muleq	r1, ip, sl

00010568 <calloc@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #69632	; 0x11000
   10570:	ldr	pc, [ip, #2716]!	; 0xa9c

00010574 <raise@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #69632	; 0x11000
   1057c:	ldr	pc, [ip, #2708]!	; 0xa94

00010580 <strcmp@plt>:
   10580:	add	ip, pc, #0, 12
   10584:	add	ip, ip, #69632	; 0x11000
   10588:	ldr	pc, [ip, #2700]!	; 0xa8c

0001058c <printf@plt>:
   1058c:	add	ip, pc, #0, 12
   10590:	add	ip, ip, #69632	; 0x11000
   10594:	ldr	pc, [ip, #2692]!	; 0xa84

00010598 <free@plt>:
   10598:	add	ip, pc, #0, 12
   1059c:	add	ip, ip, #69632	; 0x11000
   105a0:	ldr	pc, [ip, #2684]!	; 0xa7c

000105a4 <fgets@plt>:
   105a4:	add	ip, pc, #0, 12
   105a8:	add	ip, ip, #69632	; 0x11000
   105ac:	ldr	pc, [ip, #2676]!	; 0xa74

000105b0 <time@plt>:
   105b0:	add	ip, pc, #0, 12
   105b4:	add	ip, ip, #69632	; 0x11000
   105b8:	ldr	pc, [ip, #2668]!	; 0xa6c

000105bc <realloc@plt>:
   105bc:	add	ip, pc, #0, 12
   105c0:	add	ip, ip, #69632	; 0x11000
   105c4:	ldr	pc, [ip, #2660]!	; 0xa64

000105c8 <strcat@plt>:
   105c8:	add	ip, pc, #0, 12
   105cc:	add	ip, ip, #69632	; 0x11000
   105d0:	ldr	pc, [ip, #2652]!	; 0xa5c

000105d4 <strcpy@plt>:
   105d4:	add	ip, pc, #0, 12
   105d8:	add	ip, ip, #69632	; 0x11000
   105dc:	ldr	pc, [ip, #2644]!	; 0xa54

000105e0 <malloc@plt>:
   105e0:	add	ip, pc, #0, 12
   105e4:	add	ip, ip, #69632	; 0x11000
   105e8:	ldr	pc, [ip, #2636]!	; 0xa4c

000105ec <__libc_start_main@plt>:
   105ec:	add	ip, pc, #0, 12
   105f0:	add	ip, ip, #69632	; 0x11000
   105f4:	ldr	pc, [ip, #2628]!	; 0xa44

000105f8 <scanf@plt>:
   105f8:	add	ip, pc, #0, 12
   105fc:	add	ip, ip, #69632	; 0x11000
   10600:	ldr	pc, [ip, #2620]!	; 0xa3c

00010604 <__gmon_start__@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #69632	; 0x11000
   1060c:	ldr	pc, [ip, #2612]!	; 0xa34

00010610 <strlen@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #69632	; 0x11000
   10618:	ldr	pc, [ip, #2604]!	; 0xa2c

0001061c <srand@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #69632	; 0x11000
   10624:	ldr	pc, [ip, #2596]!	; 0xa24

00010628 <rand@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #69632	; 0x11000
   10630:	ldr	pc, [ip, #2588]!	; 0xa1c

00010634 <abort@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #69632	; 0x11000
   1063c:	ldr	pc, [ip, #2580]!	; 0xa14

Disassembly of section .text:

00010640 <.text>:
   10640:	bleq	4c784 <stdin@@GLIBC_2.4+0x2a724>
   10644:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10648:	strbtmi	fp, [sl], -r2, lsl #24
   1064c:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10650:			; <UNDEFINED> instruction: 0xc010f8df
   10654:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10658:	blmi	12266c <stdin@@GLIBC_2.4+0x10060c>
   1065c:	svc	0x00c6f7ff
   10660:	svc	0x00e8f7ff
   10664:	andeq	r1, r1, r5, ror #7
   10668:	andeq	r0, r1, ip, ror #14
   1066c:	andeq	r1, r1, r5, lsr #7
   10670:	ldr	r3, [pc, #20]	; 1068c <abort@plt+0x58>
   10674:	ldr	r2, [pc, #20]	; 10690 <abort@plt+0x5c>
   10678:	add	r3, pc, r3
   1067c:	ldr	r2, [r3, r2]
   10680:	cmp	r2, #0
   10684:	bxeq	lr
   10688:	b	10604 <__gmon_start__@plt>
   1068c:	andeq	r1, r1, r0, lsl #19
   10690:	andeq	r0, r0, r4, asr r0
   10694:	rsbeq	pc, r0, r2, asr #4
   10698:	andeq	pc, r2, r0, asr #5
   1069c:	msreq	SPSR_, #536870916	; 0x20000004
   106a0:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   106a4:	andle	r4, r5, r3, lsl #5
   106a8:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   106ac:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   106b0:	ldrmi	fp, [r8, -r3, lsl #2]
   106b4:	svclt	0x00004770
   106b8:	rsbeq	pc, r0, r2, asr #4
   106bc:	andeq	pc, r2, r0, asr #5
   106c0:	msreq	(UNDEF: 96), r2
   106c4:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   106c8:	svceq	0x00d91a0b
   106cc:			; <UNDEFINED> instruction: 0x01a3eb01
   106d0:	andle	r1, r5, r9, asr #32
   106d4:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   106d8:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   106dc:	ldrmi	fp, [r8, -r3, lsl #2]
   106e0:	svclt	0x00004770
   106e4:	vqrshl.s8	d27, d0, d2
   106e8:	vmls.i<illegal width 8>	d16, d0, d0[5]
   106ec:	stmdavc	r3!, {r1, sl}
   106f0:			; <UNDEFINED> instruction: 0xf7ffb91b
   106f4:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   106f8:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   106fc:	svclt	0x0000e7dc
   10700:	mov	ip, sp
   10704:	sub	sp, sp, #16
   10708:	str	ip, [sp]
   1070c:	str	lr, [sp, #4]
   10710:	str	r4, [sp, #8]
   10714:	str	r5, [sp, #12]
   10718:	mov	r4, r0
   1071c:	mov	r5, #0
   10720:	cmp	r5, #5
   10724:	bge	10754 <abort@plt+0x120>
   10728:	mov	r1, r5
   1072c:	mov	r0, r4
   10730:	bl	10a80 <abort@plt+0x44c>
   10734:	ldr	r2, [pc, #44]	; 10768 <abort@plt+0x134>
   10738:	add	r1, r5, #1
   1073c:	mov	r3, r0
   10740:	mov	r0, r2
   10744:	mov	r2, r3
   10748:	bl	1058c <printf@plt>
   1074c:	add	r5, r5, #1
   10750:	b	10720 <abort@plt+0xec>
   10754:	ldr	r4, [sp, #8]
   10758:	ldr	r5, [sp, #12]
   1075c:	ldr	lr, [sp, #4]
   10760:	add	sp, sp, #16
   10764:	bx	lr
   10768:	andeq	r1, r1, r4, lsl #10
   1076c:	mov	ip, sp
   10770:	sub	sp, sp, #120	; 0x78
   10774:	str	ip, [sp]
   10778:	str	lr, [sp, #4]
   1077c:	str	r4, [sp, #8]
   10780:	str	r5, [sp, #12]
   10784:	bl	108a0 <abort@plt+0x26c>
   10788:	mov	r4, r0
   1078c:	mov	r5, #0
   10790:	cmp	r5, #5
   10794:	bge	107ec <abort@plt+0x1b8>
   10798:	ldr	r0, [pc, #228]	; 10884 <abort@plt+0x250>
   1079c:	add	r1, r5, #1
   107a0:	bl	1058c <printf@plt>
   107a4:	add	r0, sp, #16
   107a8:	mov	r1, #100	; 0x64
   107ac:	ldr	r2, [pc, #216]	; 1088c <abort@plt+0x258>
   107b0:	ldr	r2, [r2]
   107b4:	bl	105a4 <fgets@plt>
   107b8:	add	r0, sp, #16
   107bc:	bl	10610 <strlen@plt>
   107c0:	add	r1, sp, #16
   107c4:	add	r0, r1, r0
   107c8:	mov	ip, #0
   107cc:	sub	lr, r0, #4096	; 0x1000
   107d0:	strb	ip, [lr, #4095]	; 0xfff
   107d4:	add	r1, sp, #16
   107d8:	mov	r2, r5
   107dc:	mov	r0, r4
   107e0:	bl	10af0 <abort@plt+0x4bc>
   107e4:	add	r5, r5, #1
   107e8:	b	10790 <abort@plt+0x15c>
   107ec:	mov	r0, r4
   107f0:	bl	10700 <abort@plt+0xcc>
   107f4:	ldr	r0, [pc, #156]	; 10898 <abort@plt+0x264>
   107f8:	bl	1058c <printf@plt>
   107fc:	ldr	r0, [pc, #140]	; 10890 <abort@plt+0x25c>
   10800:	add	r1, sp, #16
   10804:	bl	105f8 <scanf@plt>
   10808:	add	r1, sp, #16
   1080c:	mov	r0, r4
   10810:	bl	10d40 <abort@plt+0x70c>
   10814:	mov	r1, r0
   10818:	mov	r0, r4
   1081c:	bl	10c6c <abort@plt+0x638>
   10820:	cmp	r0, #0
   10824:	beq	10834 <abort@plt+0x200>
   10828:	ldr	r0, [pc, #108]	; 1089c <abort@plt+0x268>
   1082c:	bl	1058c <printf@plt>
   10830:	b	1083c <abort@plt+0x208>
   10834:	mov	r0, r4
   10838:	bl	10700 <abort@plt+0xcc>
   1083c:	mov	r0, r4
   10840:	bl	10dc4 <abort@plt+0x790>
   10844:	cmp	r0, #0
   10848:	beq	10854 <abort@plt+0x220>
   1084c:	ldr	r0, [pc, #64]	; 10894 <abort@plt+0x260>
   10850:	bl	1058c <printf@plt>
   10854:	ldr	r0, [pc, #44]	; 10888 <abort@plt+0x254>
   10858:	bl	1058c <printf@plt>
   1085c:	mov	r0, r4
   10860:	bl	10700 <abort@plt+0xcc>
   10864:	mov	r0, r4
   10868:	bl	108ec <abort@plt+0x2b8>
   1086c:	mov	r0, #0
   10870:	ldr	r4, [sp, #8]
   10874:	ldr	r5, [sp, #12]
   10878:	ldr	lr, [sp, #4]
   1087c:	add	sp, sp, #120	; 0x78
   10880:	bx	lr
   10884:	andeq	r1, r1, r0, asr #9
   10888:	ldrdeq	r1, [r1], -r3
   1088c:	andeq	r2, r2, r0, rrx
   10890:	andeq	r1, r1, r4, lsl #9
   10894:	andeq	r1, r1, r7, lsl #9
   10898:	andeq	r1, r1, r4, ror #9
   1089c:	andeq	r1, r1, r9, lsr #9
   108a0:	mov	ip, sp
   108a4:	sub	sp, sp, #8
   108a8:	str	ip, [sp]
   108ac:	str	lr, [sp, #4]
   108b0:	mov	r0, #12
   108b4:	bl	105e0 <malloc@plt>
   108b8:	cmp	r0, #0
   108bc:	bne	108c8 <abort@plt+0x294>
   108c0:	mov	r0, #0
   108c4:	b	108e0 <abort@plt+0x2ac>
   108c8:	mov	r1, #0
   108cc:	str	r1, [r0]
   108d0:	mov	r2, #0
   108d4:	str	r2, [r0, #4]
   108d8:	mov	r1, #0
   108dc:	str	r1, [r0, #8]
   108e0:	ldr	lr, [sp, #4]
   108e4:	add	sp, sp, #8
   108e8:	bx	lr
   108ec:	mov	ip, sp
   108f0:	sub	sp, sp, #16
   108f4:	str	ip, [sp]
   108f8:	str	lr, [sp, #4]
   108fc:	str	r4, [sp, #8]
   10900:	str	r5, [sp, #12]
   10904:	mov	r4, r0
   10908:	cmp	r4, #0
   1090c:	beq	10944 <abort@plt+0x310>
   10910:	mov	r5, #0
   10914:	ldr	r1, [r4]
   10918:	cmp	r5, r1
   1091c:	bge	10934 <abort@plt+0x300>
   10920:	ldr	r0, [r4, #8]
   10924:	ldr	r0, [r0, r5, lsl #2]
   10928:	bl	10598 <free@plt>
   1092c:	add	r5, r5, #1
   10930:	b	10914 <abort@plt+0x2e0>
   10934:	ldr	r0, [r4, #8]
   10938:	bl	10598 <free@plt>
   1093c:	mov	r0, r4
   10940:	bl	10598 <free@plt>
   10944:	ldr	r4, [sp, #8]
   10948:	ldr	r5, [sp, #12]
   1094c:	ldr	lr, [sp, #4]
   10950:	add	sp, sp, #16
   10954:	bx	lr
   10958:	mov	ip, sp
   1095c:	sub	sp, sp, #24
   10960:	str	ip, [sp]
   10964:	str	lr, [sp, #4]
   10968:	str	r4, [sp, #8]
   1096c:	str	r5, [sp, #12]
   10970:	str	r6, [sp, #16]
   10974:	str	r7, [sp, #20]
   10978:	mov	r6, r2
   1097c:	mov	r5, r1
   10980:	mov	r7, r0
   10984:	cmp	r7, #0
   10988:	beq	1099c <abort@plt+0x368>
   1098c:	cmp	r5, #0
   10990:	movlt	r3, #1
   10994:	movge	r3, #0
   10998:	b	109a0 <abort@plt+0x36c>
   1099c:	mov	r3, #1
   109a0:	cmp	r3, #0
   109a4:	bne	109bc <abort@plt+0x388>
   109a8:	ldr	r2, [r7]
   109ac:	cmp	r5, r2
   109b0:	movge	r0, #1
   109b4:	movlt	r0, #0
   109b8:	b	109c0 <abort@plt+0x38c>
   109bc:	mov	r0, #1
   109c0:	cmp	r0, #0
   109c4:	beq	109d0 <abort@plt+0x39c>
   109c8:	mvn	r0, #0
   109cc:	b	10a34 <abort@plt+0x400>
   109d0:	mov	r0, r6
   109d4:	bl	10610 <strlen@plt>
   109d8:	mov	r4, r0
   109dc:	ldr	r1, [r7, #8]
   109e0:	ldr	r0, [r1, r5, lsl #2]
   109e4:	bl	10610 <strlen@plt>
   109e8:	cmp	r4, r0
   109ec:	bls	10a20 <abort@plt+0x3ec>
   109f0:	ldr	ip, [r7, #8]
   109f4:	ldr	r0, [ip, r5, lsl #2]
   109f8:	add	r1, r4, #1
   109fc:	bl	105bc <realloc@plt>
   10a00:	ldr	r1, [r7, #8]
   10a04:	str	r0, [r1, r5, lsl #2]
   10a08:	ldr	r1, [r7, #8]
   10a0c:	ldr	r3, [r1, r5, lsl #2]
   10a10:	cmp	r3, #0
   10a14:	bne	10a20 <abort@plt+0x3ec>
   10a18:	mvn	r0, #0
   10a1c:	b	10a34 <abort@plt+0x400>
   10a20:	ldr	r0, [r7, #8]
   10a24:	ldr	r0, [r0, r5, lsl #2]
   10a28:	mov	r1, r6
   10a2c:	bl	105d4 <strcpy@plt>
   10a30:	mov	r0, r5
   10a34:	ldr	r4, [sp, #8]
   10a38:	ldr	r5, [sp, #12]
   10a3c:	ldr	r6, [sp, #16]
   10a40:	ldr	r7, [sp, #20]
   10a44:	ldr	lr, [sp, #4]
   10a48:	add	sp, sp, #24
   10a4c:	bx	lr
   10a50:	mov	ip, sp
   10a54:	sub	sp, sp, #8
   10a58:	str	ip, [sp]
   10a5c:	str	lr, [sp, #4]
   10a60:	cmp	r0, #0
   10a64:	bne	10a70 <abort@plt+0x43c>
   10a68:	mvn	r0, #0
   10a6c:	b	10a74 <abort@plt+0x440>
   10a70:	ldr	r0, [r0]
   10a74:	ldr	lr, [sp, #4]
   10a78:	add	sp, sp, #8
   10a7c:	bx	lr
   10a80:	mov	ip, sp
   10a84:	sub	sp, sp, #8
   10a88:	str	ip, [sp]
   10a8c:	str	lr, [sp, #4]
   10a90:	cmp	r0, #0
   10a94:	beq	10aa8 <abort@plt+0x474>
   10a98:	cmp	r1, #0
   10a9c:	movlt	r3, #1
   10aa0:	movge	r3, #0
   10aa4:	b	10aac <abort@plt+0x478>
   10aa8:	mov	r3, #1
   10aac:	cmp	r3, #0
   10ab0:	bne	10ac8 <abort@plt+0x494>
   10ab4:	ldr	r2, [r0]
   10ab8:	cmp	r1, r2
   10abc:	movge	ip, #1
   10ac0:	movlt	ip, #0
   10ac4:	b	10acc <abort@plt+0x498>
   10ac8:	mov	ip, #1
   10acc:	cmp	ip, #0
   10ad0:	beq	10adc <abort@plt+0x4a8>
   10ad4:	mov	r0, #0
   10ad8:	b	10ae4 <abort@plt+0x4b0>
   10adc:	ldr	r2, [r0, #8]
   10ae0:	ldr	r0, [r2, r1, lsl #2]
   10ae4:	ldr	lr, [sp, #4]
   10ae8:	add	sp, sp, #8
   10aec:	bx	lr
   10af0:	mov	ip, sp
   10af4:	sub	sp, sp, #24
   10af8:	str	ip, [sp]
   10afc:	str	lr, [sp, #4]
   10b00:	str	r4, [sp, #8]
   10b04:	str	r5, [sp, #12]
   10b08:	str	r6, [sp, #16]
   10b0c:	str	r7, [sp, #20]
   10b10:	mov	r4, r2
   10b14:	mov	r5, r1
   10b18:	mov	r6, r0
   10b1c:	cmp	r6, #0
   10b20:	beq	10b34 <abort@plt+0x500>
   10b24:	cmp	r4, #0
   10b28:	movlt	r2, #1
   10b2c:	movge	r2, #0
   10b30:	b	10b38 <abort@plt+0x504>
   10b34:	mov	r2, #1
   10b38:	cmp	r2, #0
   10b3c:	bne	10b54 <abort@plt+0x520>
   10b40:	ldr	r0, [r6]
   10b44:	cmp	r4, r0
   10b48:	movgt	r3, #1
   10b4c:	movle	r3, #0
   10b50:	b	10b58 <abort@plt+0x524>
   10b54:	mov	r3, #1
   10b58:	cmp	r3, #0
   10b5c:	beq	10b68 <abort@plt+0x534>
   10b60:	mvn	r0, #0
   10b64:	b	10c50 <abort@plt+0x61c>
   10b68:	ldr	r2, [r6]
   10b6c:	ldr	r3, [r6, #4]
   10b70:	cmp	r2, r3
   10b74:	bne	10bc4 <abort@plt+0x590>
   10b78:	ldr	r3, [r6, #4]
   10b7c:	cmp	r3, #0
   10b80:	beq	10b94 <abort@plt+0x560>
   10b84:	ldr	ip, [r6, #4]
   10b88:	lsl	r3, ip, #1
   10b8c:	str	r3, [r6, #4]
   10b90:	b	10b9c <abort@plt+0x568>
   10b94:	mov	r0, #1
   10b98:	str	r0, [r6, #4]
   10b9c:	ldr	r0, [r6, #8]
   10ba0:	ldr	r2, [r6, #4]
   10ba4:	lsl	r1, r2, #2
   10ba8:	bl	105bc <realloc@plt>
   10bac:	str	r0, [r6, #8]
   10bb0:	ldr	r2, [r6, #8]
   10bb4:	cmp	r2, #0
   10bb8:	bne	10bc4 <abort@plt+0x590>
   10bbc:	mvn	r0, #0
   10bc0:	b	10c50 <abort@plt+0x61c>
   10bc4:	ldr	ip, [r6]
   10bc8:	sub	r7, ip, #1
   10bcc:	cmp	r7, r4
   10bd0:	blt	10bfc <abort@plt+0x5c8>
   10bd4:	ldr	r2, [r6, #8]
   10bd8:	lsl	r0, r7, #2
   10bdc:	add	r1, r2, r0
   10be0:	add	r0, r1, #4
   10be4:	ldr	r1, [r6, #8]
   10be8:	add	ip, r1, r7, lsl #2
   10bec:	ldr	lr, [ip]
   10bf0:	str	lr, [r0]
   10bf4:	sub	r7, r7, #1
   10bf8:	b	10bcc <abort@plt+0x598>
   10bfc:	mov	r0, r5
   10c00:	bl	10610 <strlen@plt>
   10c04:	add	r0, r0, #1
   10c08:	mov	r1, #1
   10c0c:	bl	10568 <calloc@plt>
   10c10:	ldr	ip, [r6, #8]
   10c14:	str	r0, [ip, r4, lsl #2]
   10c18:	ldr	r2, [r6, #8]
   10c1c:	ldr	r3, [r2, r4, lsl #2]
   10c20:	cmp	r3, #0
   10c24:	bne	10c30 <abort@plt+0x5fc>
   10c28:	mvn	r0, #0
   10c2c:	b	10c50 <abort@plt+0x61c>
   10c30:	ldr	r1, [r6, #8]
   10c34:	ldr	r0, [r1, r4, lsl #2]
   10c38:	mov	r1, r5
   10c3c:	bl	105d4 <strcpy@plt>
   10c40:	ldr	r1, [r6]
   10c44:	add	r1, r1, #1
   10c48:	str	r1, [r6]
   10c4c:	mov	r0, r4
   10c50:	ldr	r4, [sp, #8]
   10c54:	ldr	r5, [sp, #12]
   10c58:	ldr	r6, [sp, #16]
   10c5c:	ldr	r7, [sp, #20]
   10c60:	ldr	lr, [sp, #4]
   10c64:	add	sp, sp, #24
   10c68:	bx	lr
   10c6c:	mov	ip, sp
   10c70:	sub	sp, sp, #16
   10c74:	str	ip, [sp]
   10c78:	str	lr, [sp, #4]
   10c7c:	str	r4, [sp, #8]
   10c80:	str	r5, [sp, #12]
   10c84:	mov	r4, r1
   10c88:	mov	r5, r0
   10c8c:	cmp	r5, #0
   10c90:	beq	10ca4 <abort@plt+0x670>
   10c94:	cmp	r4, #0
   10c98:	movlt	r0, #1
   10c9c:	movge	r0, #0
   10ca0:	b	10ca8 <abort@plt+0x674>
   10ca4:	mov	r0, #1
   10ca8:	cmp	r0, #0
   10cac:	bne	10cc4 <abort@plt+0x690>
   10cb0:	ldr	r2, [r5]
   10cb4:	cmp	r4, r2
   10cb8:	movge	r2, #1
   10cbc:	movlt	r2, #0
   10cc0:	b	10cc8 <abort@plt+0x694>
   10cc4:	mov	r2, #1
   10cc8:	cmp	r2, #0
   10ccc:	beq	10cd8 <abort@plt+0x6a4>
   10cd0:	mvn	r0, #0
   10cd4:	b	10d2c <abort@plt+0x6f8>
   10cd8:	ldr	ip, [r5, #8]
   10cdc:	ldr	r0, [ip, r4, lsl #2]
   10ce0:	bl	10598 <free@plt>
   10ce4:	add	r4, r4, #1
   10ce8:	ldr	r1, [r5]
   10cec:	cmp	r4, r1
   10cf0:	bge	10d1c <abort@plt+0x6e8>
   10cf4:	ldr	r3, [r5, #8]
   10cf8:	lsl	r1, r4, #2
   10cfc:	add	r2, r3, r1
   10d00:	sub	r0, r2, #4
   10d04:	ldr	r3, [r5, #8]
   10d08:	add	ip, r3, r4, lsl #2
   10d0c:	ldr	lr, [ip]
   10d10:	str	lr, [r0]
   10d14:	add	r4, r4, #1
   10d18:	b	10ce8 <abort@plt+0x6b4>
   10d1c:	ldr	r1, [r5]
   10d20:	sub	r0, r1, #1
   10d24:	str	r0, [r5]
   10d28:	mov	r0, #0
   10d2c:	ldr	r4, [sp, #8]
   10d30:	ldr	r5, [sp, #12]
   10d34:	ldr	lr, [sp, #4]
   10d38:	add	sp, sp, #16
   10d3c:	bx	lr
   10d40:	mov	ip, sp
   10d44:	sub	sp, sp, #24
   10d48:	str	ip, [sp]
   10d4c:	str	lr, [sp, #4]
   10d50:	str	r4, [sp, #8]
   10d54:	str	r5, [sp, #12]
   10d58:	str	r6, [sp, #16]
   10d5c:	mov	r4, r1
   10d60:	mov	r5, r0
   10d64:	cmp	r5, #0
   10d68:	bne	10d74 <abort@plt+0x740>
   10d6c:	mvn	r6, #0
   10d70:	b	10da8 <abort@plt+0x774>
   10d74:	mov	r6, #0
   10d78:	ldr	r1, [r5]
   10d7c:	cmp	r6, r1
   10d80:	bge	10da4 <abort@plt+0x770>
   10d84:	ldr	r0, [r5, #8]
   10d88:	ldr	r0, [r0, r6, lsl #2]
   10d8c:	mov	r1, r4
   10d90:	bl	10580 <strcmp@plt>
   10d94:	cmp	r0, #0
   10d98:	beq	10da8 <abort@plt+0x774>
   10d9c:	add	r6, r6, #1
   10da0:	b	10d78 <abort@plt+0x744>
   10da4:	mvn	r6, #0
   10da8:	mov	r0, r6
   10dac:	ldr	r4, [sp, #8]
   10db0:	ldr	r5, [sp, #12]
   10db4:	ldr	r6, [sp, #16]
   10db8:	ldr	lr, [sp, #4]
   10dbc:	add	sp, sp, #24
   10dc0:	bx	lr
   10dc4:	mov	ip, sp
   10dc8:	sub	sp, sp, #24
   10dcc:	str	ip, [sp]
   10dd0:	str	lr, [sp, #4]
   10dd4:	str	r4, [sp, #8]
   10dd8:	str	r5, [sp, #12]
   10ddc:	str	r6, [sp, #16]
   10de0:	str	r7, [sp, #20]
   10de4:	mov	r6, r0
   10de8:	cmp	r6, #0
   10dec:	bne	10df8 <abort@plt+0x7c4>
   10df0:	mvn	r0, #0
   10df4:	b	10e90 <abort@plt+0x85c>
   10df8:	mov	r4, #1
   10dfc:	ldr	r2, [r6]
   10e00:	cmp	r4, r2
   10e04:	bge	10e8c <abort@plt+0x858>
   10e08:	ldr	r2, [r6, #8]
   10e0c:	ldr	r7, [r2, r4, lsl #2]
   10e10:	mov	r5, r4
   10e14:	cmp	r5, #0
   10e18:	ble	10e48 <abort@plt+0x814>
   10e1c:	ldr	r3, [r6, #8]
   10e20:	lsl	r1, r5, #2
   10e24:	add	ip, r3, r1
   10e28:	sub	lr, ip, #4096	; 0x1000
   10e2c:	ldr	r1, [lr, #4092]	; 0xffc
   10e30:	mov	r0, r7
   10e34:	bl	10580 <strcmp@plt>
   10e38:	cmp	r0, #0
   10e3c:	movlt	r3, #1
   10e40:	movge	r3, #0
   10e44:	b	10e4c <abort@plt+0x818>
   10e48:	mov	r3, #0
   10e4c:	cmp	r3, #0
   10e50:	beq	10e7c <abort@plt+0x848>
   10e54:	ldr	r1, [r6, #8]
   10e58:	add	ip, r1, r5, lsl #2
   10e5c:	ldr	r1, [r6, #8]
   10e60:	lsl	r0, r5, #2
   10e64:	add	r3, r1, r0
   10e68:	sub	r0, r3, #4
   10e6c:	ldr	lr, [r0]
   10e70:	str	lr, [ip]
   10e74:	sub	r5, r5, #1
   10e78:	b	10e14 <abort@plt+0x7e0>
   10e7c:	ldr	r2, [r6, #8]
   10e80:	str	r7, [r2, r5, lsl #2]
   10e84:	add	r4, r4, #1
   10e88:	b	10dfc <abort@plt+0x7c8>
   10e8c:	mov	r0, #0
   10e90:	ldr	r4, [sp, #8]
   10e94:	ldr	r5, [sp, #12]
   10e98:	ldr	r6, [sp, #16]
   10e9c:	ldr	r7, [sp, #20]
   10ea0:	ldr	lr, [sp, #4]
   10ea4:	add	sp, sp, #24
   10ea8:	bx	lr
   10eac:	mov	ip, sp
   10eb0:	sub	sp, sp, #24
   10eb4:	str	ip, [sp]
   10eb8:	str	lr, [sp, #4]
   10ebc:	str	r4, [sp, #8]
   10ec0:	str	r5, [sp, #12]
   10ec4:	str	r6, [sp, #16]
   10ec8:	mov	r4, r1
   10ecc:	mov	r5, r0
   10ed0:	cmp	r5, #0
   10ed4:	beq	10ee8 <abort@plt+0x8b4>
   10ed8:	cmp	r4, #0
   10edc:	moveq	r3, #1
   10ee0:	movne	r3, #0
   10ee4:	b	10eec <abort@plt+0x8b8>
   10ee8:	mov	r3, #1
   10eec:	cmp	r3, #0
   10ef0:	beq	10efc <abort@plt+0x8c8>
   10ef4:	mov	r0, #0
   10ef8:	b	10f50 <abort@plt+0x91c>
   10efc:	bl	108a0 <abort@plt+0x26c>
   10f00:	mov	r6, r0
   10f04:	ldr	ip, [r5]
   10f08:	ldr	r0, [r4]
   10f0c:	add	r3, ip, r0, lsl #2
   10f10:	str	r3, [r6, #8]
   10f14:	ldr	r2, [r5, #4]
   10f18:	ldr	r1, [r4, #4]
   10f1c:	add	r3, r2, r1
   10f20:	str	r3, [r6, #4]
   10f24:	ldr	r0, [r6, #8]
   10f28:	ldr	r0, [r0]
   10f2c:	ldr	ip, [r5, #8]
   10f30:	ldr	r1, [ip]
   10f34:	bl	105d4 <strcpy@plt>
   10f38:	ldr	r0, [r6, #8]
   10f3c:	ldr	r0, [r0]
   10f40:	ldr	r1, [r4, #8]
   10f44:	ldr	r1, [r1]
   10f48:	bl	105c8 <strcat@plt>
   10f4c:	mov	r0, r6
   10f50:	ldr	r4, [sp, #8]
   10f54:	ldr	r5, [sp, #12]
   10f58:	ldr	r6, [sp, #16]
   10f5c:	ldr	lr, [sp, #4]
   10f60:	add	sp, sp, #24
   10f64:	bx	lr
   10f68:	mov	ip, sp
   10f6c:	sub	sp, sp, #24
   10f70:	str	ip, [sp]
   10f74:	str	lr, [sp, #4]
   10f78:	str	r4, [sp, #8]
   10f7c:	str	r5, [sp, #12]
   10f80:	mov	r4, r0
   10f84:	mov	r0, r4
   10f88:	bl	10a50 <abort@plt+0x41c>
   10f8c:	mov	r1, r0
   10f90:	cmp	r0, #0
   10f94:	ble	11004 <abort@plt+0x9d0>
   10f98:	mov	r5, #0
   10f9c:	cmp	r5, r0
   10fa0:	blt	10fac <abort@plt+0x978>
   10fa4:	mov	r3, #0
   10fa8:	b	10fb8 <abort@plt+0x984>
   10fac:	cmp	r5, r1
   10fb0:	movlt	r3, #1
   10fb4:	movge	r3, #0
   10fb8:	cmp	r3, #0
   10fbc:	beq	11004 <abort@plt+0x9d0>
   10fc0:	ldr	r2, [r4, #8]
   10fc4:	add	r2, r2, r5, lsl #2
   10fc8:	ldr	lr, [r2]
   10fcc:	str	lr, [sp, #16]
   10fd0:	ldr	r2, [r4, #8]
   10fd4:	add	r3, r2, r5, lsl #2
   10fd8:	ldr	ip, [r4, #8]
   10fdc:	add	r2, ip, r1, lsl #2
   10fe0:	ldr	lr, [r2]
   10fe4:	str	lr, [r3]
   10fe8:	ldr	ip, [r4, #8]
   10fec:	add	ip, ip, r1, lsl #2
   10ff0:	ldr	lr, [sp, #16]
   10ff4:	str	lr, [ip]
   10ff8:	sub	r1, r1, #1
   10ffc:	add	r5, r5, #1
   11000:	b	10f9c <abort@plt+0x968>
   11004:	mov	r0, #0
   11008:	ldr	r4, [sp, #8]
   1100c:	ldr	r5, [sp, #12]
   11010:	ldr	lr, [sp, #4]
   11014:	add	sp, sp, #24
   11018:	bx	lr
   1101c:	mov	ip, sp
   11020:	sub	sp, sp, #40	; 0x28
   11024:	str	ip, [sp]
   11028:	str	lr, [sp, #4]
   1102c:	str	r4, [sp, #8]
   11030:	str	r5, [sp, #12]
   11034:	str	r6, [sp, #16]
   11038:	str	r7, [sp, #20]
   1103c:	str	r8, [sp, #24]
   11040:	ldr	r7, [r0]
   11044:	bl	108a0 <abort@plt+0x26c>
   11048:	mov	r5, r0
   1104c:	add	r0, sp, #32
   11050:	bl	105b0 <time@plt>
   11054:	bl	1061c <srand@plt>
   11058:	mov	r8, #0
   1105c:	cmp	r8, r7
   11060:	bge	110c4 <abort@plt+0xa90>
   11064:	bl	10628 <rand@plt>
   11068:	mov	r4, r0
   1106c:	add	r6, r7, #1
   11070:	mov	r0, r4
   11074:	mov	r1, r6
   11078:	blx	110e8 <abort@plt+0xab4>
   1107c:	mul	r3, r0, r6
   11080:	sub	r4, r4, r3
   11084:	ldr	r1, [r5, #8]
   11088:	add	r2, r1, r8, lsl #2
   1108c:	ldr	lr, [r2]
   11090:	str	lr, [sp, #36]	; 0x24
   11094:	ldr	r2, [r5, #8]
   11098:	add	r1, r2, r8, lsl #2
   1109c:	ldr	ip, [r5, #8]
   110a0:	add	r0, ip, r4, lsl #2
   110a4:	ldr	lr, [r0]
   110a8:	str	lr, [r1]
   110ac:	ldr	r3, [r5, #8]
   110b0:	add	r0, r3, r4, lsl #2
   110b4:	ldr	lr, [sp, #36]	; 0x24
   110b8:	str	lr, [r0]
   110bc:	add	r8, r8, #1
   110c0:	b	1105c <abort@plt+0xa28>
   110c4:	mov	r0, r5
   110c8:	ldr	r4, [sp, #8]
   110cc:	ldr	r5, [sp, #12]
   110d0:	ldr	r6, [sp, #16]
   110d4:	ldr	r7, [sp, #20]
   110d8:	ldr	r8, [sp, #24]
   110dc:	ldr	lr, [sp, #4]
   110e0:	add	sp, sp, #40	; 0x28
   110e4:	bx	lr
   110e8:			; <UNDEFINED> instruction: 0xf0002900
   110ec:	b	fe0315ec <stdin@@GLIBC_2.4+0xfe00f58c>
   110f0:	svclt	0x00480c01
   110f4:	cdpne	2, 4, cr4, cr10, cr9, {2}
   110f8:	tsthi	pc, r0	; <UNPREDICTABLE>
   110fc:	svclt	0x00480003
   11100:	addmi	r4, fp, #805306372	; 0x30000004
   11104:	tsthi	lr, r0, asr #4	; <UNPREDICTABLE>
   11108:			; <UNDEFINED> instruction: 0xf0004211
   1110c:	blx	fecf15a0 <stdin@@GLIBC_2.4+0xfeccf540>
   11110:	blx	fec8db24 <stdin@@GLIBC_2.4+0xfec6bac4>
   11114:	bl	fe84d320 <stdin@@GLIBC_2.4+0xfe82b2c0>
   11118:			; <UNDEFINED> instruction: 0xf1c20202
   1111c:	andge	r0, r4, pc, lsl r2
   11120:	andne	lr, r2, #0, 22
   11124:	andeq	pc, r0, pc, asr #32
   11128:	svclt	0x00004697
   1112c:	andhi	pc, r0, pc, lsr #7
   11130:	svcvc	0x00c1ebb3
   11134:	bl	1040d3c <stdin@@GLIBC_2.4+0x101ecdc>
   11138:	svclt	0x00280000
   1113c:	bicvc	lr, r1, #166912	; 0x28c00
   11140:	svcvc	0x0081ebb3
   11144:	bl	1040d4c <stdin@@GLIBC_2.4+0x101ecec>
   11148:	svclt	0x00280000
   1114c:	orrvc	lr, r1, #166912	; 0x28c00
   11150:	svcvc	0x0041ebb3
   11154:	bl	1040d5c <stdin@@GLIBC_2.4+0x101ecfc>
   11158:	svclt	0x00280000
   1115c:	movtvc	lr, #7075	; 0x1ba3
   11160:	svcvc	0x0001ebb3
   11164:	bl	1040d6c <stdin@@GLIBC_2.4+0x101ed0c>
   11168:	svclt	0x00280000
   1116c:	movwvc	lr, #7075	; 0x1ba3
   11170:	svcvs	0x00c1ebb3
   11174:	bl	1040d7c <stdin@@GLIBC_2.4+0x101ed1c>
   11178:	svclt	0x00280000
   1117c:	bicvs	lr, r1, #166912	; 0x28c00
   11180:	svcvs	0x0081ebb3
   11184:	bl	1040d8c <stdin@@GLIBC_2.4+0x101ed2c>
   11188:	svclt	0x00280000
   1118c:	orrvs	lr, r1, #166912	; 0x28c00
   11190:	svcvs	0x0041ebb3
   11194:	bl	1040d9c <stdin@@GLIBC_2.4+0x101ed3c>
   11198:	svclt	0x00280000
   1119c:	movtvs	lr, #7075	; 0x1ba3
   111a0:	svcvs	0x0001ebb3
   111a4:	bl	1040dac <stdin@@GLIBC_2.4+0x101ed4c>
   111a8:	svclt	0x00280000
   111ac:	movwvs	lr, #7075	; 0x1ba3
   111b0:	svcpl	0x00c1ebb3
   111b4:	bl	1040dbc <stdin@@GLIBC_2.4+0x101ed5c>
   111b8:	svclt	0x00280000
   111bc:	bicpl	lr, r1, #166912	; 0x28c00
   111c0:	svcpl	0x0081ebb3
   111c4:	bl	1040dcc <stdin@@GLIBC_2.4+0x101ed6c>
   111c8:	svclt	0x00280000
   111cc:	orrpl	lr, r1, #166912	; 0x28c00
   111d0:	svcpl	0x0041ebb3
   111d4:	bl	1040ddc <stdin@@GLIBC_2.4+0x101ed7c>
   111d8:	svclt	0x00280000
   111dc:	movtpl	lr, #7075	; 0x1ba3
   111e0:	svcpl	0x0001ebb3
   111e4:	bl	1040dec <stdin@@GLIBC_2.4+0x101ed8c>
   111e8:	svclt	0x00280000
   111ec:	movwpl	lr, #7075	; 0x1ba3
   111f0:	svcmi	0x00c1ebb3
   111f4:	bl	1040dfc <stdin@@GLIBC_2.4+0x101ed9c>
   111f8:	svclt	0x00280000
   111fc:	bicmi	lr, r1, #166912	; 0x28c00
   11200:	svcmi	0x0081ebb3
   11204:	bl	1040e0c <stdin@@GLIBC_2.4+0x101edac>
   11208:	svclt	0x00280000
   1120c:	orrmi	lr, r1, #166912	; 0x28c00
   11210:	svcmi	0x0041ebb3
   11214:	bl	1040e1c <stdin@@GLIBC_2.4+0x101edbc>
   11218:	svclt	0x00280000
   1121c:	movtmi	lr, #7075	; 0x1ba3
   11220:	svcmi	0x0001ebb3
   11224:	bl	1040e2c <stdin@@GLIBC_2.4+0x101edcc>
   11228:	svclt	0x00280000
   1122c:	movwmi	lr, #7075	; 0x1ba3
   11230:	svccc	0x00c1ebb3
   11234:	bl	1040e3c <stdin@@GLIBC_2.4+0x101eddc>
   11238:	svclt	0x00280000
   1123c:	biccc	lr, r1, #166912	; 0x28c00
   11240:	svccc	0x0081ebb3
   11244:	bl	1040e4c <stdin@@GLIBC_2.4+0x101edec>
   11248:	svclt	0x00280000
   1124c:	orrcc	lr, r1, #166912	; 0x28c00
   11250:	svccc	0x0041ebb3
   11254:	bl	1040e5c <stdin@@GLIBC_2.4+0x101edfc>
   11258:	svclt	0x00280000
   1125c:	movtcc	lr, #7075	; 0x1ba3
   11260:	svccc	0x0001ebb3
   11264:	bl	1040e6c <stdin@@GLIBC_2.4+0x101ee0c>
   11268:	svclt	0x00280000
   1126c:	movwcc	lr, #7075	; 0x1ba3
   11270:	svccs	0x00c1ebb3
   11274:	bl	1040e7c <stdin@@GLIBC_2.4+0x101ee1c>
   11278:	svclt	0x00280000
   1127c:	biccs	lr, r1, #166912	; 0x28c00
   11280:	svccs	0x0081ebb3
   11284:	bl	1040e8c <stdin@@GLIBC_2.4+0x101ee2c>
   11288:	svclt	0x00280000
   1128c:	orrcs	lr, r1, #166912	; 0x28c00
   11290:	svccs	0x0041ebb3
   11294:	bl	1040e9c <stdin@@GLIBC_2.4+0x101ee3c>
   11298:	svclt	0x00280000
   1129c:	movtcs	lr, #7075	; 0x1ba3
   112a0:	svccs	0x0001ebb3
   112a4:	bl	1040eac <stdin@@GLIBC_2.4+0x101ee4c>
   112a8:	svclt	0x00280000
   112ac:	movwcs	lr, #7075	; 0x1ba3
   112b0:	svcne	0x00c1ebb3
   112b4:	bl	1040ebc <stdin@@GLIBC_2.4+0x101ee5c>
   112b8:	svclt	0x00280000
   112bc:	bicne	lr, r1, #166912	; 0x28c00
   112c0:	svcne	0x0081ebb3
   112c4:	bl	1040ecc <stdin@@GLIBC_2.4+0x101ee6c>
   112c8:	svclt	0x00280000
   112cc:	orrne	lr, r1, #166912	; 0x28c00
   112d0:	svcne	0x0041ebb3
   112d4:	bl	1040edc <stdin@@GLIBC_2.4+0x101ee7c>
   112d8:	svclt	0x00280000
   112dc:	movtne	lr, #7075	; 0x1ba3
   112e0:	svcne	0x0001ebb3
   112e4:	bl	1040eec <stdin@@GLIBC_2.4+0x101ee8c>
   112e8:	svclt	0x00280000
   112ec:	movwne	lr, #7075	; 0x1ba3
   112f0:	svceq	0x00c1ebb3
   112f4:	bl	1040efc <stdin@@GLIBC_2.4+0x101ee9c>
   112f8:	svclt	0x00280000
   112fc:	biceq	lr, r1, #166912	; 0x28c00
   11300:	svceq	0x0081ebb3
   11304:	bl	1040f0c <stdin@@GLIBC_2.4+0x101eeac>
   11308:	svclt	0x00280000
   1130c:	orreq	lr, r1, #166912	; 0x28c00
   11310:	svceq	0x0041ebb3
   11314:	bl	1040f1c <stdin@@GLIBC_2.4+0x101eebc>
   11318:	svclt	0x00280000
   1131c:	movteq	lr, #7075	; 0x1ba3
   11320:	svceq	0x0001ebb3
   11324:	bl	1040f2c <stdin@@GLIBC_2.4+0x101eecc>
   11328:	svclt	0x00280000
   1132c:	movweq	lr, #7075	; 0x1ba3
   11330:	svceq	0x0000f1bc
   11334:	submi	fp, r0, #72, 30	; 0x120
   11338:	b	fe723100 <stdin@@GLIBC_2.4+0xfe7010a0>
   1133c:	svclt	0x00480f00
   11340:	ldrbmi	r4, [r0, -r0, asr #4]!
   11344:	andcs	fp, r0, r8, lsr pc
   11348:	b	1400f60 <stdin@@GLIBC_2.4+0x13def00>
   1134c:			; <UNDEFINED> instruction: 0xf04070ec
   11350:	ldrbmi	r0, [r0, -r1]!
   11354:			; <UNDEFINED> instruction: 0xf281fab1
   11358:	andseq	pc, pc, #-2147483600	; 0x80000030
   1135c:	svceq	0x0000f1bc
   11360:			; <UNDEFINED> instruction: 0xf002fa23
   11364:	submi	fp, r0, #72, 30	; 0x120
   11368:	stmdacs	r0, {r4, r5, r6, r8, r9, sl, lr}
   1136c:			; <UNDEFINED> instruction: 0xf06fbfc8
   11370:	svclt	0x00b84000
   11374:	andmi	pc, r0, pc, asr #32
   11378:	stmdalt	lr, {ip, sp, lr, pc}
   1137c:	rscsle	r2, r4, r0, lsl #18
   11380:	andmi	lr, r3, sp, lsr #18
   11384:	mrc2	7, 5, pc, cr3, cr15, {7}
   11388:			; <UNDEFINED> instruction: 0x4006e8bd
   1138c:	vqrdmulh.s<illegal width 8>	d15, d0, d2
   11390:	smlatbeq	r3, r1, fp, lr
   11394:	svclt	0x00004770
   11398:			; <UNDEFINED> instruction: 0xf04fb502
   1139c:			; <UNDEFINED> instruction: 0xf7ff0008
   113a0:	stclt	8, cr14, [r2, #-936]	; 0xfffffc58
   113a4:	mvnsmi	lr, #737280	; 0xb4000
   113a8:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   113ac:	strmi	r4, [r8], ip, lsl #26
   113b0:			; <UNDEFINED> instruction: 0x4691447e
   113b4:			; <UNDEFINED> instruction: 0xf7ff447d
   113b8:	blne	1dcb6e0 <stdin@@GLIBC_2.4+0x1da9680>
   113bc:	strhle	r1, [sl], -r6
   113c0:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   113c4:	svccc	0x0004f855
   113c8:	strbmi	r4, [r1], -sl, asr #12
   113cc:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   113d0:	adcmi	r4, r6, #152, 14	; 0x2600000
   113d4:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   113d8:	svclt	0x000083f8
   113dc:	andeq	r0, r1, r0, ror #22
   113e0:	andeq	r0, r1, r8, asr fp
   113e4:	svclt	0x00004770

Disassembly of section .fini:

000113e8 <.fini>:
   113e8:	push	{r3, lr}
   113ec:	pop	{r3, pc}
