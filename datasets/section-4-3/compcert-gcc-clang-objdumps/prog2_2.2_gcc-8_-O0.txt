
../compcert-repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106b0 <.init>:
   106b0:	push	{r3, lr}
   106b4:	bl	107a8 <_start@@Base+0x3c>
   106b8:	pop	{r3, pc}

Disassembly of section .plt:

000106bc <printf@plt-0x14>:
   106bc:	push	{lr}		; (str lr, [sp, #-4]!)
   106c0:	ldr	lr, [pc, #4]	; 106cc <printf@plt-0x4>
   106c4:	add	lr, pc, lr
   106c8:	ldr	pc, [lr, #8]!
   106cc:	andeq	r0, r1, r4, lsr r9

000106d0 <printf@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #16, 20	; 0x10000
   106d8:	ldr	pc, [ip, #2356]!	; 0x934

000106dc <free@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #16, 20	; 0x10000
   106e4:	ldr	pc, [ip, #2348]!	; 0x92c

000106e8 <fgets@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #16, 20	; 0x10000
   106f0:	ldr	pc, [ip, #2340]!	; 0x924

000106f4 <getchar@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #16, 20	; 0x10000
   106fc:	ldr	pc, [ip, #2332]!	; 0x91c

00010700 <realloc@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #16, 20	; 0x10000
   10708:	ldr	pc, [ip, #2324]!	; 0x914

0001070c <strcpy@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #16, 20	; 0x10000
   10714:	ldr	pc, [ip, #2316]!	; 0x90c

00010718 <puts@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2308]!	; 0x904

00010724 <malloc@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010730 <__libc_start_main@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2292]!	; 0x8f4

0001073c <__gmon_start__@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2284]!	; 0x8ec

00010748 <strlen@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2276]!	; 0x8e4

00010754 <__isoc99_scanf@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010760 <abort@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2260]!	; 0x8d4

Disassembly of section .text:

0001076c <_start@@Base>:
   1076c:	mov	fp, #0
   10770:	mov	lr, #0
   10774:	pop	{r1}		; (ldr r1, [sp], #4)
   10778:	mov	r2, sp
   1077c:	push	{r2}		; (str r2, [sp, #-4]!)
   10780:	push	{r0}		; (str r0, [sp, #-4]!)
   10784:	ldr	ip, [pc, #16]	; 1079c <_start@@Base+0x30>
   10788:	push	{ip}		; (str ip, [sp, #-4]!)
   1078c:	ldr	r0, [pc, #12]	; 107a0 <_start@@Base+0x34>
   10790:	ldr	r3, [pc, #12]	; 107a4 <_start@@Base+0x38>
   10794:	bl	10730 <__libc_start_main@plt>
   10798:	bl	10760 <abort@plt>
   1079c:	andeq	r0, r1, ip, lsl fp
   107a0:	andeq	r0, r1, ip, asr r8
   107a4:			; <UNDEFINED> instruction: 0x00010abc
   107a8:	ldr	r3, [pc, #20]	; 107c4 <_start@@Base+0x58>
   107ac:	ldr	r2, [pc, #20]	; 107c8 <_start@@Base+0x5c>
   107b0:	add	r3, pc, r3
   107b4:	ldr	r2, [r3, r2]
   107b8:	cmp	r2, #0
   107bc:	bxeq	lr
   107c0:	b	1073c <__gmon_start__@plt>
   107c4:	andeq	r0, r1, r8, asr #16
   107c8:	andeq	r0, r0, r0, asr #32
   107cc:	ldr	r0, [pc, #24]	; 107ec <_start@@Base+0x80>
   107d0:	ldr	r3, [pc, #24]	; 107f0 <_start@@Base+0x84>
   107d4:	cmp	r3, r0
   107d8:	bxeq	lr
   107dc:	ldr	r3, [pc, #16]	; 107f4 <_start@@Base+0x88>
   107e0:	cmp	r3, #0
   107e4:	bxeq	lr
   107e8:	bx	r3
   107ec:	andeq	r1, r2, ip, asr #32
   107f0:	andeq	r1, r2, ip, asr #32
   107f4:	andeq	r0, r0, r0
   107f8:	ldr	r0, [pc, #36]	; 10824 <_start@@Base+0xb8>
   107fc:	ldr	r1, [pc, #36]	; 10828 <_start@@Base+0xbc>
   10800:	sub	r1, r1, r0
   10804:	asr	r1, r1, #2
   10808:	add	r1, r1, r1, lsr #31
   1080c:	asrs	r1, r1, #1
   10810:	bxeq	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <_start@@Base+0xc0>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	andeq	r1, r2, ip, asr #32
   10828:	andeq	r1, r2, ip, asr #32
   1082c:	andeq	r0, r0, r0
   10830:	push	{r4, lr}
   10834:	ldr	r4, [pc, #24]	; 10854 <_start@@Base+0xe8>
   10838:	ldrb	r3, [r4]
   1083c:	cmp	r3, #0
   10840:	popne	{r4, pc}
   10844:	bl	107cc <_start@@Base+0x60>
   10848:	mov	r3, #1
   1084c:	strb	r3, [r4]
   10850:	pop	{r4, pc}
   10854:	andeq	r1, r2, r4, asr r0
   10858:	b	107f8 <_start@@Base+0x8c>

0001085c <main@@Base>:
   1085c:	strd	r4, [sp, #-16]!
   10860:	str	fp, [sp, #8]
   10864:	str	lr, [sp, #12]
   10868:	add	fp, sp, #12
   1086c:	sub	sp, sp, #96	; 0x60
   10870:	mov	r0, #12
   10874:	bl	10724 <malloc@plt>
   10878:	mov	r3, r0
   1087c:	str	r3, [fp, #-20]	; 0xffffffec
   10880:	mov	r3, #0
   10884:	str	r3, [fp, #-16]
   10888:	b	108b0 <main@@Base+0x54>
   1088c:	ldr	r3, [fp, #-16]
   10890:	lsl	r3, r3, #2
   10894:	ldr	r2, [fp, #-20]	; 0xffffffec
   10898:	add	r3, r2, r3
   1089c:	mov	r2, #0
   108a0:	str	r2, [r3]
   108a4:	ldr	r3, [fp, #-16]
   108a8:	add	r3, r3, #1
   108ac:	str	r3, [fp, #-16]
   108b0:	ldr	r3, [fp, #-16]
   108b4:	cmp	r3, #2
   108b8:	ble	1088c <main@@Base+0x30>
   108bc:	mov	r3, #0
   108c0:	str	r3, [fp, #-16]
   108c4:	b	10934 <main@@Base+0xd8>
   108c8:	ldr	r3, [fp, #-16]
   108cc:	add	r3, r3, #1
   108d0:	mov	r1, r3
   108d4:	movw	r0, #2860	; 0xb2c
   108d8:	movt	r0, #1
   108dc:	bl	106d0 <printf@plt>
   108e0:	ldr	r3, [fp, #-16]
   108e4:	lsl	r3, r3, #2
   108e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   108ec:	add	r3, r2, r3
   108f0:	ldr	r3, [r3]
   108f4:	cmp	r3, #0
   108f8:	bne	1090c <main@@Base+0xb0>
   108fc:	movw	r0, #2868	; 0xb34
   10900:	movt	r0, #1
   10904:	bl	10718 <puts@plt>
   10908:	b	10928 <main@@Base+0xcc>
   1090c:	ldr	r3, [fp, #-16]
   10910:	lsl	r3, r3, #2
   10914:	ldr	r2, [fp, #-20]	; 0xffffffec
   10918:	add	r3, r2, r3
   1091c:	ldr	r3, [r3]
   10920:	mov	r0, r3
   10924:	bl	10718 <puts@plt>
   10928:	ldr	r3, [fp, #-16]
   1092c:	add	r3, r3, #1
   10930:	str	r3, [fp, #-16]
   10934:	ldr	r3, [fp, #-16]
   10938:	cmp	r3, #2
   1093c:	ble	108c8 <main@@Base+0x6c>
   10940:	mov	r1, #3
   10944:	movw	r0, #2876	; 0xb3c
   10948:	movt	r0, #1
   1094c:	bl	106d0 <printf@plt>
   10950:	sub	r3, fp, #104	; 0x68
   10954:	mov	r1, r3
   10958:	movw	r0, #2912	; 0xb60
   1095c:	movt	r0, #1
   10960:	bl	10754 <__isoc99_scanf@plt>
   10964:	bl	106f4 <getchar@plt>
   10968:	ldr	r3, [fp, #-104]	; 0xffffff98
   1096c:	cmp	r3, #0
   10970:	blt	10940 <main@@Base+0xe4>
   10974:	ldr	r3, [fp, #-104]	; 0xffffff98
   10978:	cmp	r3, #3
   1097c:	bgt	10940 <main@@Base+0xe4>
   10980:	ldr	r3, [fp, #-104]	; 0xffffff98
   10984:	cmp	r3, #0
   10988:	beq	10a54 <main@@Base+0x1f8>
   1098c:	movw	r0, #2916	; 0xb64
   10990:	movt	r0, #1
   10994:	bl	106d0 <printf@plt>
   10998:	movw	r3, #4176	; 0x1050
   1099c:	movt	r3, #2
   109a0:	ldr	r2, [r3]
   109a4:	sub	r3, fp, #100	; 0x64
   109a8:	mov	r1, #80	; 0x50
   109ac:	mov	r0, r3
   109b0:	bl	106e8 <fgets@plt>
   109b4:	sub	r3, fp, #100	; 0x64
   109b8:	mov	r0, r3
   109bc:	bl	10748 <strlen@plt>
   109c0:	mov	r3, r0
   109c4:	sub	r3, r3, #1
   109c8:	sub	r2, fp, #12
   109cc:	add	r3, r2, r3
   109d0:	mov	r2, #0
   109d4:	strb	r2, [r3, #-88]	; 0xffffffa8
   109d8:	ldr	r3, [fp, #-104]	; 0xffffff98
   109dc:	sub	r3, r3, #-1073741823	; 0xc0000001
   109e0:	lsl	r3, r3, #2
   109e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   109e8:	add	r3, r2, r3
   109ec:	ldr	r5, [r3]
   109f0:	sub	r3, fp, #100	; 0x64
   109f4:	mov	r0, r3
   109f8:	bl	10748 <strlen@plt>
   109fc:	mov	r3, r0
   10a00:	add	r1, r3, #1
   10a04:	ldr	r3, [fp, #-104]	; 0xffffff98
   10a08:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a0c:	lsl	r3, r3, #2
   10a10:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a14:	add	r4, r2, r3
   10a18:	mov	r0, r5
   10a1c:	bl	10700 <realloc@plt>
   10a20:	mov	r3, r0
   10a24:	str	r3, [r4]
   10a28:	ldr	r3, [fp, #-104]	; 0xffffff98
   10a2c:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a30:	lsl	r3, r3, #2
   10a34:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a38:	add	r3, r2, r3
   10a3c:	ldr	r3, [r3]
   10a40:	sub	r2, fp, #100	; 0x64
   10a44:	mov	r1, r2
   10a48:	mov	r0, r3
   10a4c:	bl	1070c <strcpy@plt>
   10a50:	b	108bc <main@@Base+0x60>
   10a54:	nop	{0}
   10a58:	mov	r3, #0
   10a5c:	str	r3, [fp, #-16]
   10a60:	b	10a8c <main@@Base+0x230>
   10a64:	ldr	r3, [fp, #-16]
   10a68:	lsl	r3, r3, #2
   10a6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a70:	add	r3, r2, r3
   10a74:	ldr	r3, [r3]
   10a78:	mov	r0, r3
   10a7c:	bl	106dc <free@plt>
   10a80:	ldr	r3, [fp, #-16]
   10a84:	add	r3, r3, #1
   10a88:	str	r3, [fp, #-16]
   10a8c:	ldr	r3, [fp, #-16]
   10a90:	cmp	r3, #2
   10a94:	ble	10a64 <main@@Base+0x208>
   10a98:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a9c:	bl	106dc <free@plt>
   10aa0:	mov	r3, #0
   10aa4:	mov	r0, r3
   10aa8:	sub	sp, fp, #12
   10aac:	ldrd	r4, [sp]
   10ab0:	ldr	fp, [sp, #8]
   10ab4:	add	sp, sp, #12
   10ab8:	pop	{pc}		; (ldr pc, [sp], #4)

00010abc <__libc_csu_init@@Base>:
   10abc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ac0:	mov	r7, r0
   10ac4:	ldr	r6, [pc, #72]	; 10b14 <__libc_csu_init@@Base+0x58>
   10ac8:	ldr	r5, [pc, #72]	; 10b18 <__libc_csu_init@@Base+0x5c>
   10acc:	add	r6, pc, r6
   10ad0:	add	r5, pc, r5
   10ad4:	sub	r6, r6, r5
   10ad8:	mov	r8, r1
   10adc:	mov	r9, r2
   10ae0:	bl	106b0 <printf@plt-0x20>
   10ae4:	asrs	r6, r6, #2
   10ae8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10aec:	mov	r4, #0
   10af0:	add	r4, r4, #1
   10af4:	ldr	r3, [r5], #4
   10af8:	mov	r2, r9
   10afc:	mov	r1, r8
   10b00:	mov	r0, r7
   10b04:	blx	r3
   10b08:	cmp	r6, r4
   10b0c:	bne	10af0 <__libc_csu_init@@Base+0x34>
   10b10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b14:	andeq	r0, r1, r0, asr #8
   10b18:	andeq	r0, r1, r8, lsr r4

00010b1c <__libc_csu_fini@@Base>:
   10b1c:	bx	lr

Disassembly of section .fini:

00010b20 <.fini>:
   10b20:	push	{r3, lr}
   10b24:	pop	{r3, pc}
