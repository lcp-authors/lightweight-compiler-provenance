
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-tree.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_tree_node_new>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #24
       c:	str	r0, [fp, #-16]
      10:	mov	r0, #28
      14:	bl	0 <malloc>
      18:	mov	r3, r0
      1c:	str	r3, [fp, #-8]
      20:	ldr	r3, [fp, #-8]
      24:	cmp	r3, #0
      28:	bne	50 <coda_tree_node_new+0x50>
      2c:	mov	r3, #53	; 0x35
      30:	str	r3, [sp]
      34:	ldr	r3, [pc, #120]	; b4 <coda_tree_node_new+0xb4>
      38:	mov	r2, #28
      3c:	ldr	r1, [pc, #116]	; b8 <coda_tree_node_new+0xb8>
      40:	mvn	r0, #0
      44:	bl	0 <coda_set_error>
      48:	mov	r3, #0
      4c:	b	a8 <coda_tree_node_new+0xa8>
      50:	ldr	r3, [fp, #-8]
      54:	ldr	r2, [fp, #-16]
      58:	str	r2, [r3]
      5c:	ldr	r3, [fp, #-8]
      60:	mov	r2, #0
      64:	str	r2, [r3, #4]
      68:	ldr	r3, [fp, #-8]
      6c:	mov	r2, #0
      70:	str	r2, [r3, #8]
      74:	ldr	r3, [fp, #-8]
      78:	mov	r2, #0
      7c:	str	r2, [r3, #12]
      80:	ldr	r3, [fp, #-8]
      84:	mov	r2, #0
      88:	str	r2, [r3, #16]
      8c:	ldr	r3, [fp, #-8]
      90:	mov	r2, #0
      94:	str	r2, [r3, #20]
      98:	ldr	r3, [fp, #-8]
      9c:	mov	r2, #0
      a0:	str	r2, [r3, #24]
      a4:	ldr	r3, [fp, #-8]
      a8:	mov	r0, r3
      ac:	sub	sp, fp, #4
      b0:	pop	{fp, pc}
      b4:	.word	0x00000000
      b8:	.word	0x00000048

000000bc <coda_tree_node_delete>:
      bc:	push	{fp, lr}
      c0:	add	fp, sp, #4
      c4:	sub	sp, sp, #16
      c8:	str	r0, [fp, #-16]
      cc:	str	r1, [fp, #-20]	; 0xffffffec
      d0:	ldr	r3, [fp, #-16]
      d4:	ldr	r3, [r3, #12]
      d8:	cmp	r3, #0
      dc:	beq	f4 <coda_tree_node_delete+0x38>
      e0:	ldr	r3, [fp, #-16]
      e4:	ldr	r3, [r3, #12]
      e8:	ldr	r1, [fp, #-20]	; 0xffffffec
      ec:	mov	r0, r3
      f0:	bl	bc <coda_tree_node_delete>
      f4:	ldr	r3, [fp, #-16]
      f8:	ldr	r3, [r3, #20]
      fc:	cmp	r3, #0
     100:	beq	114 <coda_tree_node_delete+0x58>
     104:	ldr	r3, [fp, #-16]
     108:	ldr	r3, [r3, #20]
     10c:	mov	r0, r3
     110:	bl	0 <free>
     114:	ldr	r3, [fp, #-16]
     118:	ldr	r3, [r3, #24]
     11c:	cmp	r3, #0
     120:	beq	1a4 <coda_tree_node_delete+0xe8>
     124:	mov	r3, #0
     128:	str	r3, [fp, #-8]
     12c:	b	180 <coda_tree_node_delete+0xc4>
     130:	ldr	r3, [fp, #-16]
     134:	ldr	r2, [r3, #24]
     138:	ldr	r3, [fp, #-8]
     13c:	lsl	r3, r3, #2
     140:	add	r3, r2, r3
     144:	ldr	r3, [r3]
     148:	cmp	r3, #0
     14c:	beq	174 <coda_tree_node_delete+0xb8>
     150:	ldr	r3, [fp, #-16]
     154:	ldr	r2, [r3, #24]
     158:	ldr	r3, [fp, #-8]
     15c:	lsl	r3, r3, #2
     160:	add	r3, r2, r3
     164:	ldr	r3, [r3]
     168:	ldr	r1, [fp, #-20]	; 0xffffffec
     16c:	mov	r0, r3
     170:	bl	bc <coda_tree_node_delete>
     174:	ldr	r3, [fp, #-8]
     178:	add	r3, r3, #1
     17c:	str	r3, [fp, #-8]
     180:	ldr	r3, [fp, #-16]
     184:	ldr	r2, [r3, #16]
     188:	ldr	r3, [fp, #-8]
     18c:	cmp	r2, r3
     190:	bgt	130 <coda_tree_node_delete+0x74>
     194:	ldr	r3, [fp, #-16]
     198:	ldr	r3, [r3, #24]
     19c:	mov	r0, r3
     1a0:	bl	0 <free>
     1a4:	ldr	r3, [fp, #-16]
     1a8:	ldr	r3, [r3, #8]
     1ac:	cmp	r3, #0
     1b0:	beq	240 <coda_tree_node_delete+0x184>
     1b4:	ldr	r3, [fp, #-20]	; 0xffffffec
     1b8:	cmp	r3, #0
     1bc:	beq	230 <coda_tree_node_delete+0x174>
     1c0:	mov	r3, #0
     1c4:	str	r3, [fp, #-8]
     1c8:	b	21c <coda_tree_node_delete+0x160>
     1cc:	ldr	r3, [fp, #-16]
     1d0:	ldr	r2, [r3, #8]
     1d4:	ldr	r3, [fp, #-8]
     1d8:	lsl	r3, r3, #2
     1dc:	add	r3, r2, r3
     1e0:	ldr	r3, [r3]
     1e4:	cmp	r3, #0
     1e8:	beq	210 <coda_tree_node_delete+0x154>
     1ec:	ldr	r3, [fp, #-16]
     1f0:	ldr	r2, [r3, #8]
     1f4:	ldr	r3, [fp, #-8]
     1f8:	lsl	r3, r3, #2
     1fc:	add	r3, r2, r3
     200:	ldr	r2, [r3]
     204:	ldr	r3, [fp, #-20]	; 0xffffffec
     208:	mov	r0, r2
     20c:	blx	r3
     210:	ldr	r3, [fp, #-8]
     214:	add	r3, r3, #1
     218:	str	r3, [fp, #-8]
     21c:	ldr	r3, [fp, #-16]
     220:	ldr	r2, [r3, #4]
     224:	ldr	r3, [fp, #-8]
     228:	cmp	r2, r3
     22c:	bgt	1cc <coda_tree_node_delete+0x110>
     230:	ldr	r3, [fp, #-16]
     234:	ldr	r3, [r3, #8]
     238:	mov	r0, r3
     23c:	bl	0 <free>
     240:	ldr	r0, [fp, #-16]
     244:	bl	0 <free>
     248:	nop			; (mov r0, r0)
     24c:	sub	sp, fp, #4
     250:	pop	{fp, pc}

00000254 <tree_node_add_item>:
     254:	push	{fp, lr}
     258:	add	fp, sp, #4
     25c:	sub	sp, sp, #24
     260:	str	r0, [fp, #-16]
     264:	str	r1, [fp, #-20]	; 0xffffffec
     268:	ldr	r3, [fp, #-16]
     26c:	ldr	r2, [r3, #8]
     270:	ldr	r3, [fp, #-16]
     274:	ldr	r3, [r3, #4]
     278:	add	r3, r3, #1
     27c:	lsl	r3, r3, #2
     280:	mov	r1, r3
     284:	mov	r0, r2
     288:	bl	0 <realloc>
     28c:	str	r0, [fp, #-8]
     290:	ldr	r3, [fp, #-8]
     294:	cmp	r3, #0
     298:	bne	2cc <tree_node_add_item+0x78>
     29c:	ldr	r3, [fp, #-16]
     2a0:	ldr	r3, [r3, #4]
     2a4:	add	r3, r3, #1
     2a8:	lsl	r2, r3, #2
     2ac:	mov	r3, #119	; 0x77
     2b0:	str	r3, [sp]
     2b4:	ldr	r3, [pc, #96]	; 31c <tree_node_add_item+0xc8>
     2b8:	ldr	r1, [pc, #96]	; 320 <tree_node_add_item+0xcc>
     2bc:	mvn	r0, #0
     2c0:	bl	0 <coda_set_error>
     2c4:	mvn	r3, #0
     2c8:	b	310 <tree_node_add_item+0xbc>
     2cc:	ldr	r3, [fp, #-16]
     2d0:	ldr	r2, [fp, #-8]
     2d4:	str	r2, [r3, #8]
     2d8:	ldr	r3, [fp, #-16]
     2dc:	ldr	r2, [r3, #8]
     2e0:	ldr	r3, [fp, #-16]
     2e4:	ldr	r3, [r3, #4]
     2e8:	lsl	r3, r3, #2
     2ec:	add	r3, r2, r3
     2f0:	ldr	r2, [fp, #-20]	; 0xffffffec
     2f4:	str	r2, [r3]
     2f8:	ldr	r3, [fp, #-16]
     2fc:	ldr	r3, [r3, #4]
     300:	add	r2, r3, #1
     304:	ldr	r3, [fp, #-16]
     308:	str	r2, [r3, #4]
     30c:	mov	r3, #0
     310:	mov	r0, r3
     314:	sub	sp, fp, #4
     318:	pop	{fp, pc}
     31c:	.word	0x00000000
     320:	.word	0x00000048

00000324 <tree_node_get_node_for_all>:
     324:	push	{fp, lr}
     328:	add	fp, sp, #4
     32c:	sub	sp, sp, #32
     330:	str	r0, [fp, #-24]	; 0xffffffe8
     334:	str	r1, [fp, #-28]	; 0xffffffe4
     338:	str	r2, [fp, #-32]	; 0xffffffe0
     33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     340:	ldr	r3, [r3, #12]
     344:	cmp	r3, #0
     348:	bne	430 <tree_node_get_node_for_all+0x10c>
     34c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     350:	cmp	r3, #0
     354:	beq	430 <tree_node_get_node_for_all+0x10c>
     358:	ldr	r3, [fp, #-24]	; 0xffffffe8
     35c:	ldr	r3, [r3]
     360:	str	r3, [fp, #-8]
     364:	sub	r3, fp, #12
     368:	mov	r1, r3
     36c:	ldr	r0, [fp, #-8]
     370:	bl	0 <coda_type_get_class>
     374:	ldr	r3, [fp, #-12]
     378:	cmp	r3, #6
     37c:	bne	3bc <tree_node_get_node_for_all+0x98>
     380:	sub	r3, fp, #16
     384:	mov	r1, r3
     388:	ldr	r0, [fp, #-8]
     38c:	bl	0 <coda_type_get_special_base_type>
     390:	mov	r3, r0
     394:	cmp	r3, #0
     398:	beq	3a4 <tree_node_get_node_for_all+0x80>
     39c:	mvn	r3, #0
     3a0:	b	444 <tree_node_get_node_for_all+0x120>
     3a4:	ldr	r3, [fp, #-16]
     3a8:	str	r3, [fp, #-8]
     3ac:	sub	r3, fp, #12
     3b0:	mov	r1, r3
     3b4:	ldr	r0, [fp, #-8]
     3b8:	bl	0 <coda_type_get_class>
     3bc:	ldr	r3, [fp, #-12]
     3c0:	cmp	r3, #1
     3c4:	beq	3dc <tree_node_get_node_for_all+0xb8>
     3c8:	ldr	r3, [pc, #128]	; 450 <tree_node_get_node_for_all+0x12c>
     3cc:	mov	r2, #149	; 0x95
     3d0:	ldr	r1, [pc, #124]	; 454 <tree_node_get_node_for_all+0x130>
     3d4:	ldr	r0, [pc, #124]	; 458 <tree_node_get_node_for_all+0x134>
     3d8:	bl	0 <__assert_fail>
     3dc:	sub	r3, fp, #16
     3e0:	mov	r1, r3
     3e4:	ldr	r0, [fp, #-8]
     3e8:	bl	0 <coda_type_get_array_base_type>
     3ec:	mov	r3, r0
     3f0:	cmp	r3, #0
     3f4:	beq	400 <tree_node_get_node_for_all+0xdc>
     3f8:	mvn	r3, #0
     3fc:	b	444 <tree_node_get_node_for_all+0x120>
     400:	ldr	r3, [fp, #-16]
     404:	mov	r0, r3
     408:	bl	0 <coda_tree_node_new>
     40c:	mov	r2, r0
     410:	ldr	r3, [fp, #-24]	; 0xffffffe8
     414:	str	r2, [r3, #12]
     418:	ldr	r3, [fp, #-24]	; 0xffffffe8
     41c:	ldr	r3, [r3, #12]
     420:	cmp	r3, #0
     424:	bne	430 <tree_node_get_node_for_all+0x10c>
     428:	mvn	r3, #0
     42c:	b	444 <tree_node_get_node_for_all+0x120>
     430:	ldr	r3, [fp, #-24]	; 0xffffffe8
     434:	ldr	r2, [r3, #12]
     438:	ldr	r3, [fp, #-28]	; 0xffffffe4
     43c:	str	r2, [r3]
     440:	mov	r3, #0
     444:	mov	r0, r3
     448:	sub	sp, fp, #4
     44c:	pop	{fp, pc}
     450:	.word	0x00000194
     454:	.word	0x00000000
     458:	.word	0x00000080

0000045c <tree_node_get_node_for_index>:
     45c:	push	{fp, lr}
     460:	add	fp, sp, #4
     464:	sub	sp, sp, #72	; 0x48
     468:	str	r0, [fp, #-56]	; 0xffffffc8
     46c:	str	r1, [fp, #-60]	; 0xffffffc4
     470:	str	r2, [fp, #-64]	; 0xffffffc0
     474:	str	r3, [fp, #-68]	; 0xffffffbc
     478:	mov	r3, #0
     47c:	str	r3, [fp, #-8]
     480:	ldr	r3, [fp, #-56]	; 0xffffffc8
     484:	ldr	r3, [r3, #16]
     488:	sub	r3, r3, #1
     48c:	str	r3, [fp, #-12]
     490:	ldr	r3, [fp, #-56]	; 0xffffffc8
     494:	ldr	r3, [r3, #16]
     498:	cmp	r3, #0
     49c:	ble	52c <tree_node_get_node_for_index+0xd0>
     4a0:	b	51c <tree_node_get_node_for_index+0xc0>
     4a4:	ldr	r2, [fp, #-8]
     4a8:	ldr	r3, [fp, #-12]
     4ac:	add	r3, r2, r3
     4b0:	lsr	r2, r3, #31
     4b4:	add	r3, r2, r3
     4b8:	asr	r3, r3, #1
     4bc:	str	r3, [fp, #-28]	; 0xffffffe4
     4c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4c4:	ldr	r2, [r3, #20]
     4c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     4cc:	lsl	r3, r3, #2
     4d0:	add	r3, r2, r3
     4d4:	ldr	r2, [r3]
     4d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
     4dc:	cmp	r2, r3
     4e0:	blt	4ec <tree_node_get_node_for_index+0x90>
     4e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     4e8:	str	r3, [fp, #-12]
     4ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4f0:	ldr	r2, [r3, #20]
     4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     4f8:	lsl	r3, r3, #2
     4fc:	add	r3, r2, r3
     500:	ldr	r2, [r3]
     504:	ldr	r3, [fp, #-60]	; 0xffffffc4
     508:	cmp	r2, r3
     50c:	bge	51c <tree_node_get_node_for_index+0xc0>
     510:	ldr	r3, [fp, #-28]	; 0xffffffe4
     514:	add	r3, r3, #1
     518:	str	r3, [fp, #-8]
     51c:	ldr	r2, [fp, #-12]
     520:	ldr	r3, [fp, #-8]
     524:	cmp	r2, r3
     528:	bne	4a4 <tree_node_get_node_for_index+0x48>
     52c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     530:	ldr	r3, [r3, #16]
     534:	cmp	r3, #0
     538:	ble	584 <tree_node_get_node_for_index+0x128>
     53c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     540:	ldr	r2, [r3, #20]
     544:	ldr	r3, [fp, #-12]
     548:	lsl	r3, r3, #2
     54c:	add	r3, r2, r3
     550:	ldr	r2, [r3]
     554:	ldr	r3, [fp, #-60]	; 0xffffffc4
     558:	cmp	r2, r3
     55c:	bne	584 <tree_node_get_node_for_index+0x128>
     560:	ldr	r3, [fp, #-56]	; 0xffffffc8
     564:	ldr	r2, [r3, #24]
     568:	ldr	r3, [fp, #-12]
     56c:	lsl	r3, r3, #2
     570:	add	r3, r2, r3
     574:	ldr	r2, [r3]
     578:	ldr	r3, [fp, #-64]	; 0xffffffc0
     57c:	str	r2, [r3]
     580:	b	8c0 <tree_node_get_node_for_index+0x464>
     584:	ldr	r3, [fp, #-68]	; 0xffffffbc
     588:	cmp	r3, #0
     58c:	beq	8b4 <tree_node_get_node_for_index+0x458>
     590:	ldr	r3, [fp, #-56]	; 0xffffffc8
     594:	ldr	r3, [r3]
     598:	str	r3, [fp, #-20]	; 0xffffffec
     59c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5a0:	ldr	r2, [r3, #20]
     5a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5a8:	ldr	r3, [r3, #16]
     5ac:	add	r3, r3, #1
     5b0:	lsl	r3, r3, #2
     5b4:	mov	r1, r3
     5b8:	mov	r0, r2
     5bc:	bl	0 <realloc>
     5c0:	str	r0, [fp, #-32]	; 0xffffffe0
     5c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     5c8:	cmp	r3, #0
     5cc:	bne	600 <tree_node_get_node_for_index+0x1a4>
     5d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5d4:	ldr	r3, [r3, #16]
     5d8:	add	r3, r3, #1
     5dc:	lsl	r2, r3, #2
     5e0:	mov	r3, #204	; 0xcc
     5e4:	str	r3, [sp]
     5e8:	ldr	r3, [pc, #736]	; 8d0 <tree_node_get_node_for_index+0x474>
     5ec:	ldr	r1, [pc, #736]	; 8d4 <tree_node_get_node_for_index+0x478>
     5f0:	mvn	r0, #0
     5f4:	bl	0 <coda_set_error>
     5f8:	mvn	r3, #0
     5fc:	b	8c4 <tree_node_get_node_for_index+0x468>
     600:	ldr	r3, [fp, #-56]	; 0xffffffc8
     604:	ldr	r2, [fp, #-32]	; 0xffffffe0
     608:	str	r2, [r3, #20]
     60c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     610:	ldr	r2, [r3, #24]
     614:	ldr	r3, [fp, #-56]	; 0xffffffc8
     618:	ldr	r3, [r3, #16]
     61c:	add	r3, r3, #1
     620:	lsl	r3, r3, #2
     624:	mov	r1, r3
     628:	mov	r0, r2
     62c:	bl	0 <realloc>
     630:	str	r0, [fp, #-36]	; 0xffffffdc
     634:	ldr	r3, [fp, #-36]	; 0xffffffdc
     638:	cmp	r3, #0
     63c:	bne	670 <tree_node_get_node_for_index+0x214>
     640:	ldr	r3, [fp, #-56]	; 0xffffffc8
     644:	ldr	r3, [r3, #16]
     648:	add	r3, r3, #1
     64c:	lsl	r2, r3, #2
     650:	mov	r3, #212	; 0xd4
     654:	str	r3, [sp]
     658:	ldr	r3, [pc, #624]	; 8d0 <tree_node_get_node_for_index+0x474>
     65c:	ldr	r1, [pc, #624]	; 8d4 <tree_node_get_node_for_index+0x478>
     660:	mvn	r0, #0
     664:	bl	0 <coda_set_error>
     668:	mvn	r3, #0
     66c:	b	8c4 <tree_node_get_node_for_index+0x468>
     670:	ldr	r3, [fp, #-56]	; 0xffffffc8
     674:	ldr	r2, [fp, #-36]	; 0xffffffdc
     678:	str	r2, [r3, #24]
     67c:	ldr	r3, [fp, #-60]	; 0xffffffc4
     680:	cmn	r3, #1
     684:	bne	6ac <tree_node_get_node_for_index+0x250>
     688:	sub	r3, fp, #48	; 0x30
     68c:	mov	r1, r3
     690:	ldr	r0, [fp, #-20]	; 0xffffffec
     694:	bl	0 <coda_type_get_attributes>
     698:	mov	r3, r0
     69c:	cmp	r3, #0
     6a0:	beq	75c <tree_node_get_node_for_index+0x300>
     6a4:	mvn	r3, #0
     6a8:	b	8c4 <tree_node_get_node_for_index+0x468>
     6ac:	sub	r3, fp, #52	; 0x34
     6b0:	mov	r1, r3
     6b4:	ldr	r0, [fp, #-20]	; 0xffffffec
     6b8:	bl	0 <coda_type_get_class>
     6bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
     6c0:	cmp	r3, #6
     6c4:	bne	704 <tree_node_get_node_for_index+0x2a8>
     6c8:	sub	r3, fp, #48	; 0x30
     6cc:	mov	r1, r3
     6d0:	ldr	r0, [fp, #-20]	; 0xffffffec
     6d4:	bl	0 <coda_type_get_special_base_type>
     6d8:	mov	r3, r0
     6dc:	cmp	r3, #0
     6e0:	beq	6ec <tree_node_get_node_for_index+0x290>
     6e4:	mvn	r3, #0
     6e8:	b	8c4 <tree_node_get_node_for_index+0x468>
     6ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
     6f0:	str	r3, [fp, #-20]	; 0xffffffec
     6f4:	sub	r3, fp, #52	; 0x34
     6f8:	mov	r1, r3
     6fc:	ldr	r0, [fp, #-20]	; 0xffffffec
     700:	bl	0 <coda_type_get_class>
     704:	ldr	r3, [fp, #-52]	; 0xffffffcc
     708:	cmp	r3, #1
     70c:	bne	734 <tree_node_get_node_for_index+0x2d8>
     710:	sub	r3, fp, #48	; 0x30
     714:	mov	r1, r3
     718:	ldr	r0, [fp, #-20]	; 0xffffffec
     71c:	bl	0 <coda_type_get_array_base_type>
     720:	mov	r3, r0
     724:	cmp	r3, #0
     728:	beq	75c <tree_node_get_node_for_index+0x300>
     72c:	mvn	r3, #0
     730:	b	758 <tree_node_get_node_for_index+0x2fc>
     734:	sub	r3, fp, #48	; 0x30
     738:	mov	r2, r3
     73c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     740:	ldr	r0, [fp, #-20]	; 0xffffffec
     744:	bl	0 <coda_type_get_record_field_type>
     748:	mov	r3, r0
     74c:	cmp	r3, #0
     750:	beq	75c <tree_node_get_node_for_index+0x300>
     754:	mvn	r3, #0
     758:	b	8c4 <tree_node_get_node_for_index+0x468>
     75c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     760:	mov	r0, r3
     764:	bl	0 <coda_tree_node_new>
     768:	str	r0, [fp, #-16]
     76c:	ldr	r3, [fp, #-16]
     770:	cmp	r3, #0
     774:	bne	780 <tree_node_get_node_for_index+0x324>
     778:	mvn	r3, #0
     77c:	b	8c4 <tree_node_get_node_for_index+0x468>
     780:	ldr	r3, [fp, #-64]	; 0xffffffc0
     784:	ldr	r2, [fp, #-16]
     788:	str	r2, [r3]
     78c:	mov	r3, #0
     790:	str	r3, [fp, #-24]	; 0xffffffe8
     794:	b	848 <tree_node_get_node_for_index+0x3ec>
     798:	ldr	r3, [fp, #-56]	; 0xffffffc8
     79c:	ldr	r2, [r3, #20]
     7a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7a4:	lsl	r3, r3, #2
     7a8:	add	r3, r2, r3
     7ac:	ldr	r2, [r3]
     7b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
     7b4:	cmp	r2, r3
     7b8:	ble	83c <tree_node_get_node_for_index+0x3e0>
     7bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7c0:	ldr	r2, [r3, #20]
     7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7c8:	lsl	r3, r3, #2
     7cc:	add	r3, r2, r3
     7d0:	ldr	r3, [r3]
     7d4:	str	r3, [fp, #-40]	; 0xffffffd8
     7d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7dc:	ldr	r2, [r3, #24]
     7e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7e4:	lsl	r3, r3, #2
     7e8:	add	r3, r2, r3
     7ec:	ldr	r3, [r3]
     7f0:	str	r3, [fp, #-44]	; 0xffffffd4
     7f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7f8:	ldr	r2, [r3, #20]
     7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     800:	lsl	r3, r3, #2
     804:	add	r3, r2, r3
     808:	ldr	r2, [fp, #-60]	; 0xffffffc4
     80c:	str	r2, [r3]
     810:	ldr	r3, [fp, #-56]	; 0xffffffc8
     814:	ldr	r2, [r3, #24]
     818:	ldr	r3, [fp, #-24]	; 0xffffffe8
     81c:	lsl	r3, r3, #2
     820:	add	r3, r2, r3
     824:	ldr	r2, [fp, #-16]
     828:	str	r2, [r3]
     82c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     830:	str	r3, [fp, #-60]	; 0xffffffc4
     834:	ldr	r3, [fp, #-44]	; 0xffffffd4
     838:	str	r3, [fp, #-16]
     83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     840:	add	r3, r3, #1
     844:	str	r3, [fp, #-24]	; 0xffffffe8
     848:	ldr	r3, [fp, #-56]	; 0xffffffc8
     84c:	ldr	r2, [r3, #16]
     850:	ldr	r3, [fp, #-24]	; 0xffffffe8
     854:	cmp	r2, r3
     858:	bgt	798 <tree_node_get_node_for_index+0x33c>
     85c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     860:	ldr	r2, [r3, #20]
     864:	ldr	r3, [fp, #-56]	; 0xffffffc8
     868:	ldr	r3, [r3, #16]
     86c:	lsl	r3, r3, #2
     870:	add	r3, r2, r3
     874:	ldr	r2, [fp, #-60]	; 0xffffffc4
     878:	str	r2, [r3]
     87c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     880:	ldr	r2, [r3, #24]
     884:	ldr	r3, [fp, #-56]	; 0xffffffc8
     888:	ldr	r3, [r3, #16]
     88c:	lsl	r3, r3, #2
     890:	add	r3, r2, r3
     894:	ldr	r2, [fp, #-16]
     898:	str	r2, [r3]
     89c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8a0:	ldr	r3, [r3, #16]
     8a4:	add	r2, r3, #1
     8a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8ac:	str	r2, [r3, #16]
     8b0:	b	8c0 <tree_node_get_node_for_index+0x464>
     8b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
     8b8:	mov	r2, #0
     8bc:	str	r2, [r3]
     8c0:	mov	r3, #0
     8c4:	mov	r0, r3
     8c8:	sub	sp, fp, #4
     8cc:	pop	{fp, pc}
     8d0:	.word	0x00000000
     8d4:	.word	0x00000048

000008d8 <coda_tree_node_add_item_for_path>:
     8d8:	push	{fp, lr}
     8dc:	add	fp, sp, #4
     8e0:	sub	sp, sp, #56	; 0x38
     8e4:	str	r0, [fp, #-40]	; 0xffffffd8
     8e8:	str	r1, [fp, #-44]	; 0xffffffd4
     8ec:	str	r2, [fp, #-48]	; 0xffffffd0
     8f0:	str	r3, [fp, #-52]	; 0xffffffcc
     8f4:	mov	r3, #0
     8f8:	str	r3, [fp, #-8]
     8fc:	ldr	r3, [fp, #-8]
     900:	ldr	r2, [fp, #-44]	; 0xffffffd4
     904:	add	r3, r2, r3
     908:	ldrb	r3, [r3]
     90c:	cmp	r3, #47	; 0x2f
     910:	bne	d50 <coda_tree_node_add_item_for_path+0x478>
     914:	ldr	r3, [fp, #-8]
     918:	add	r3, r3, #1
     91c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     920:	add	r3, r2, r3
     924:	ldrb	r3, [r3]
     928:	cmp	r3, #0
     92c:	beq	984 <coda_tree_node_add_item_for_path+0xac>
     930:	ldr	r3, [fp, #-8]
     934:	add	r3, r3, #1
     938:	ldr	r2, [fp, #-44]	; 0xffffffd4
     93c:	add	r3, r2, r3
     940:	ldrb	r3, [r3]
     944:	cmp	r3, #47	; 0x2f
     948:	beq	984 <coda_tree_node_add_item_for_path+0xac>
     94c:	ldr	r3, [fp, #-8]
     950:	add	r3, r3, #1
     954:	ldr	r2, [fp, #-44]	; 0xffffffd4
     958:	add	r3, r2, r3
     95c:	ldrb	r3, [r3]
     960:	cmp	r3, #91	; 0x5b
     964:	beq	984 <coda_tree_node_add_item_for_path+0xac>
     968:	ldr	r3, [fp, #-8]
     96c:	add	r3, r3, #1
     970:	ldr	r2, [fp, #-44]	; 0xffffffd4
     974:	add	r3, r2, r3
     978:	ldrb	r3, [r3]
     97c:	cmp	r3, #64	; 0x40
     980:	bne	d50 <coda_tree_node_add_item_for_path+0x478>
     984:	ldr	r3, [fp, #-8]
     988:	add	r3, r3, #1
     98c:	str	r3, [fp, #-8]
     990:	b	d50 <coda_tree_node_add_item_for_path+0x478>
     994:	ldr	r3, [fp, #-8]
     998:	ldr	r2, [fp, #-44]	; 0xffffffd4
     99c:	add	r3, r2, r3
     9a0:	ldrb	r3, [r3]
     9a4:	cmp	r3, #64	; 0x40
     9a8:	bne	9e4 <coda_tree_node_add_item_for_path+0x10c>
     9ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9b0:	sub	r2, fp, #40	; 0x28
     9b4:	mov	r3, #1
     9b8:	mvn	r1, #0
     9bc:	bl	45c <tree_node_get_node_for_index>
     9c0:	mov	r3, r0
     9c4:	cmp	r3, #0
     9c8:	beq	9d4 <coda_tree_node_add_item_for_path+0xfc>
     9cc:	mvn	r3, #0
     9d0:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     9d4:	ldr	r3, [fp, #-8]
     9d8:	add	r3, r3, #1
     9dc:	str	r3, [fp, #-8]
     9e0:	b	d50 <coda_tree_node_add_item_for_path+0x478>
     9e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     9e8:	ldr	r3, [r3]
     9ec:	sub	r2, fp, #24
     9f0:	mov	r1, r2
     9f4:	mov	r0, r3
     9f8:	bl	0 <coda_type_get_class>
     9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a00:	cmp	r3, #6
     a04:	bne	a48 <coda_tree_node_add_item_for_path+0x170>
     a08:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a0c:	ldr	r3, [r3]
     a10:	sub	r2, fp, #32
     a14:	mov	r1, r2
     a18:	mov	r0, r3
     a1c:	bl	0 <coda_type_get_special_base_type>
     a20:	mov	r3, r0
     a24:	cmp	r3, #0
     a28:	beq	a34 <coda_tree_node_add_item_for_path+0x15c>
     a2c:	mvn	r3, #0
     a30:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     a34:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a38:	sub	r2, fp, #24
     a3c:	mov	r1, r2
     a40:	mov	r0, r3
     a44:	bl	0 <coda_type_get_class>
     a48:	ldr	r3, [fp, #-8]
     a4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     a50:	add	r3, r2, r3
     a54:	ldrb	r3, [r3]
     a58:	cmp	r3, #91	; 0x5b
     a5c:	bne	bfc <coda_tree_node_add_item_for_path+0x324>
     a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a64:	cmp	r3, #1
     a68:	beq	a94 <coda_tree_node_add_item_for_path+0x1bc>
     a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a70:	mov	r0, r3
     a74:	bl	0 <coda_type_get_class_name>
     a78:	mov	r3, r0
     a7c:	str	r3, [sp]
     a80:	ldr	r3, [fp, #-44]	; 0xffffffd4
     a84:	ldr	r2, [fp, #-8]
     a88:	ldr	r1, [pc, #844]	; ddc <coda_tree_node_add_item_for_path+0x504>
     a8c:	mvn	r0, #99	; 0x63
     a90:	bl	0 <coda_set_error>
     a94:	ldr	r3, [fp, #-8]
     a98:	add	r3, r3, #1
     a9c:	str	r3, [fp, #-8]
     aa0:	ldr	r3, [fp, #-8]
     aa4:	str	r3, [fp, #-12]
     aa8:	b	ab8 <coda_tree_node_add_item_for_path+0x1e0>
     aac:	ldr	r3, [fp, #-12]
     ab0:	add	r3, r3, #1
     ab4:	str	r3, [fp, #-12]
     ab8:	ldr	r3, [fp, #-12]
     abc:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ac0:	add	r3, r2, r3
     ac4:	ldrb	r3, [r3]
     ac8:	cmp	r3, #0
     acc:	beq	ae8 <coda_tree_node_add_item_for_path+0x210>
     ad0:	ldr	r3, [fp, #-12]
     ad4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ad8:	add	r3, r2, r3
     adc:	ldrb	r3, [r3]
     ae0:	cmp	r3, #93	; 0x5d
     ae4:	bne	aac <coda_tree_node_add_item_for_path+0x1d4>
     ae8:	ldr	r3, [fp, #-12]
     aec:	ldr	r2, [fp, #-44]	; 0xffffffd4
     af0:	add	r3, r2, r3
     af4:	ldrb	r3, [r3]
     af8:	cmp	r3, #0
     afc:	bne	b18 <coda_tree_node_add_item_for_path+0x240>
     b00:	ldr	r2, [fp, #-44]	; 0xffffffd4
     b04:	ldr	r1, [pc, #724]	; de0 <coda_tree_node_add_item_for_path+0x508>
     b08:	mvn	r0, #99	; 0x63
     b0c:	bl	0 <coda_set_error>
     b10:	mvn	r3, #0
     b14:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     b18:	ldr	r2, [fp, #-8]
     b1c:	ldr	r3, [fp, #-12]
     b20:	cmp	r2, r3
     b24:	bne	b50 <coda_tree_node_add_item_for_path+0x278>
     b28:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b2c:	sub	r1, fp, #40	; 0x28
     b30:	mov	r2, #1
     b34:	mov	r0, r3
     b38:	bl	324 <tree_node_get_node_for_all>
     b3c:	mov	r3, r0
     b40:	cmp	r3, #0
     b44:	beq	bec <coda_tree_node_add_item_for_path+0x314>
     b48:	mvn	r3, #0
     b4c:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     b50:	ldr	r3, [fp, #-8]
     b54:	ldr	r2, [fp, #-44]	; 0xffffffd4
     b58:	add	r0, r2, r3
     b5c:	sub	r3, fp, #36	; 0x24
     b60:	sub	r2, fp, #28
     b64:	ldr	r1, [pc, #632]	; de4 <coda_tree_node_add_item_for_path+0x50c>
     b68:	bl	0 <__isoc99_sscanf>
     b6c:	str	r0, [fp, #-20]	; 0xffffffec
     b70:	ldr	r3, [fp, #-20]	; 0xffffffec
     b74:	cmp	r3, #1
     b78:	bne	b94 <coda_tree_node_add_item_for_path+0x2bc>
     b7c:	ldr	r2, [fp, #-12]
     b80:	ldr	r3, [fp, #-8]
     b84:	sub	r2, r2, r3
     b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
     b8c:	cmp	r2, r3
     b90:	beq	bc4 <coda_tree_node_add_item_for_path+0x2ec>
     b94:	ldr	r2, [fp, #-12]
     b98:	ldr	r3, [fp, #-8]
     b9c:	sub	r1, r2, r3
     ba0:	ldr	r3, [fp, #-8]
     ba4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ba8:	add	r3, r2, r3
     bac:	mov	r2, r1
     bb0:	ldr	r1, [pc, #560]	; de8 <coda_tree_node_add_item_for_path+0x510>
     bb4:	mvn	r0, #99	; 0x63
     bb8:	bl	0 <coda_set_error>
     bbc:	mvn	r3, #0
     bc0:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     bc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     bc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     bcc:	sub	r2, fp, #40	; 0x28
     bd0:	mov	r3, #1
     bd4:	bl	45c <tree_node_get_node_for_index>
     bd8:	mov	r3, r0
     bdc:	cmp	r3, #0
     be0:	beq	bec <coda_tree_node_add_item_for_path+0x314>
     be4:	mvn	r3, #0
     be8:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     bec:	ldr	r3, [fp, #-12]
     bf0:	add	r3, r3, #1
     bf4:	str	r3, [fp, #-8]
     bf8:	b	d50 <coda_tree_node_add_item_for_path+0x478>
     bfc:	ldr	r3, [fp, #-8]
     c00:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c04:	add	r3, r2, r3
     c08:	ldrb	r3, [r3]
     c0c:	cmp	r3, #47	; 0x2f
     c10:	beq	c2c <coda_tree_node_add_item_for_path+0x354>
     c14:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c18:	ldr	r1, [pc, #460]	; dec <coda_tree_node_add_item_for_path+0x514>
     c1c:	mvn	r0, #99	; 0x63
     c20:	bl	0 <coda_set_error>
     c24:	mvn	r3, #0
     c28:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c30:	cmp	r3, #0
     c34:	beq	c60 <coda_tree_node_add_item_for_path+0x388>
     c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c3c:	mov	r0, r3
     c40:	bl	0 <coda_type_get_class_name>
     c44:	mov	r3, r0
     c48:	str	r3, [sp]
     c4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c50:	ldr	r2, [fp, #-8]
     c54:	ldr	r1, [pc, #404]	; df0 <coda_tree_node_add_item_for_path+0x518>
     c58:	mvn	r0, #99	; 0x63
     c5c:	bl	0 <coda_set_error>
     c60:	ldr	r3, [fp, #-8]
     c64:	add	r3, r3, #1
     c68:	str	r3, [fp, #-8]
     c6c:	ldr	r3, [fp, #-8]
     c70:	str	r3, [fp, #-16]
     c74:	b	c84 <coda_tree_node_add_item_for_path+0x3ac>
     c78:	ldr	r3, [fp, #-16]
     c7c:	add	r3, r3, #1
     c80:	str	r3, [fp, #-16]
     c84:	ldr	r3, [fp, #-16]
     c88:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c8c:	add	r3, r2, r3
     c90:	ldrb	r3, [r3]
     c94:	cmp	r3, #0
     c98:	beq	ce4 <coda_tree_node_add_item_for_path+0x40c>
     c9c:	ldr	r3, [fp, #-16]
     ca0:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ca4:	add	r3, r2, r3
     ca8:	ldrb	r3, [r3]
     cac:	cmp	r3, #47	; 0x2f
     cb0:	beq	ce4 <coda_tree_node_add_item_for_path+0x40c>
     cb4:	ldr	r3, [fp, #-16]
     cb8:	ldr	r2, [fp, #-44]	; 0xffffffd4
     cbc:	add	r3, r2, r3
     cc0:	ldrb	r3, [r3]
     cc4:	cmp	r3, #91	; 0x5b
     cc8:	beq	ce4 <coda_tree_node_add_item_for_path+0x40c>
     ccc:	ldr	r3, [fp, #-16]
     cd0:	ldr	r2, [fp, #-44]	; 0xffffffd4
     cd4:	add	r3, r2, r3
     cd8:	ldrb	r3, [r3]
     cdc:	cmp	r3, #64	; 0x40
     ce0:	bne	c78 <coda_tree_node_add_item_for_path+0x3a0>
     ce4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ce8:	ldr	r0, [r3]
     cec:	ldr	r3, [fp, #-8]
     cf0:	ldr	r2, [fp, #-44]	; 0xffffffd4
     cf4:	add	r1, r2, r3
     cf8:	ldr	r2, [fp, #-16]
     cfc:	ldr	r3, [fp, #-8]
     d00:	sub	r2, r2, r3
     d04:	sub	r3, fp, #28
     d08:	bl	0 <coda_type_get_record_field_index_from_name_n>
     d0c:	mov	r3, r0
     d10:	cmp	r3, #0
     d14:	beq	d20 <coda_tree_node_add_item_for_path+0x448>
     d18:	mvn	r3, #0
     d1c:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d24:	ldr	r1, [fp, #-28]	; 0xffffffe4
     d28:	sub	r2, fp, #40	; 0x28
     d2c:	mov	r3, #1
     d30:	bl	45c <tree_node_get_node_for_index>
     d34:	mov	r3, r0
     d38:	cmp	r3, #0
     d3c:	beq	d48 <coda_tree_node_add_item_for_path+0x470>
     d40:	mvn	r3, #0
     d44:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     d48:	ldr	r3, [fp, #-16]
     d4c:	str	r3, [fp, #-8]
     d50:	ldr	r3, [fp, #-8]
     d54:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d58:	add	r3, r2, r3
     d5c:	ldrb	r3, [r3]
     d60:	cmp	r3, #0
     d64:	bne	994 <coda_tree_node_add_item_for_path+0xbc>
     d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d6c:	ldr	r3, [r3]
     d70:	sub	r2, fp, #24
     d74:	mov	r1, r2
     d78:	mov	r0, r3
     d7c:	bl	0 <coda_type_get_class>
     d80:	ldr	r3, [fp, #-52]	; 0xffffffcc
     d84:	cmp	r3, #0
     d88:	beq	dbc <coda_tree_node_add_item_for_path+0x4e4>
     d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d90:	cmp	r3, #1
     d94:	beq	da4 <coda_tree_node_add_item_for_path+0x4cc>
     d98:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d9c:	cmp	r3, #0
     da0:	bne	dbc <coda_tree_node_add_item_for_path+0x4e4>
     da4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     da8:	ldr	r1, [pc, #68]	; df4 <coda_tree_node_add_item_for_path+0x51c>
     dac:	mvn	r0, #99	; 0x63
     db0:	bl	0 <coda_set_error>
     db4:	mvn	r3, #0
     db8:	b	dd0 <coda_tree_node_add_item_for_path+0x4f8>
     dbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     dc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     dc4:	mov	r0, r3
     dc8:	bl	254 <tree_node_add_item>
     dcc:	mov	r3, r0
     dd0:	mov	r0, r3
     dd4:	sub	sp, fp, #4
     dd8:	pop	{fp, pc}
     ddc:	.word	0x000000a0
     de0:	.word	0x000000c4
     de4:	.word	0x000000e4
     de8:	.word	0x000000ec
     dec:	.word	0x00000110
     df0:	.word	0x00000134
     df4:	.word	0x00000158

00000df8 <get_item_for_cursor>:
     df8:	push	{fp, lr}
     dfc:	add	fp, sp, #4
     e00:	sub	sp, sp, #32
     e04:	str	r0, [fp, #-24]	; 0xffffffe8
     e08:	str	r1, [fp, #-28]	; 0xffffffe4
     e0c:	str	r2, [fp, #-32]	; 0xffffffe0
     e10:	str	r3, [fp, #-36]	; 0xffffffdc
     e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e18:	cmp	r3, #0
     e1c:	bne	e34 <get_item_for_cursor+0x3c>
     e20:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e24:	mov	r2, #0
     e28:	str	r2, [r3]
     e2c:	mov	r3, #0
     e30:	b	1038 <get_item_for_cursor+0x240>
     e34:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e38:	ldr	r3, [r3, #4]
     e3c:	sub	r2, r3, #1
     e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e44:	cmp	r2, r3
     e48:	ble	fe8 <get_item_for_cursor+0x1f0>
     e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e50:	ldr	r3, [r3, #16]
     e54:	cmp	r3, #0
     e58:	ble	f94 <get_item_for_cursor+0x19c>
     e5c:	mov	r3, #0
     e60:	str	r3, [fp, #-8]
     e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e68:	ldr	r3, [r3, #16]
     e6c:	sub	r3, r3, #1
     e70:	str	r3, [fp, #-12]
     e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e78:	add	r3, r3, #1
     e7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     e80:	lsl	r3, r3, #4
     e84:	add	r3, r2, r3
     e88:	ldr	r3, [r3, #12]
     e8c:	str	r3, [fp, #-16]
     e90:	b	f0c <get_item_for_cursor+0x114>
     e94:	ldr	r2, [fp, #-8]
     e98:	ldr	r3, [fp, #-12]
     e9c:	add	r3, r2, r3
     ea0:	lsr	r2, r3, #31
     ea4:	add	r3, r2, r3
     ea8:	asr	r3, r3, #1
     eac:	str	r3, [fp, #-20]	; 0xffffffec
     eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     eb4:	ldr	r2, [r3, #20]
     eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ebc:	lsl	r3, r3, #2
     ec0:	add	r3, r2, r3
     ec4:	ldr	r2, [r3]
     ec8:	ldr	r3, [fp, #-16]
     ecc:	cmp	r2, r3
     ed0:	blt	edc <get_item_for_cursor+0xe4>
     ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ed8:	str	r3, [fp, #-12]
     edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ee0:	ldr	r2, [r3, #20]
     ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ee8:	lsl	r3, r3, #2
     eec:	add	r3, r2, r3
     ef0:	ldr	r2, [r3]
     ef4:	ldr	r3, [fp, #-16]
     ef8:	cmp	r2, r3
     efc:	bge	f0c <get_item_for_cursor+0x114>
     f00:	ldr	r3, [fp, #-20]	; 0xffffffec
     f04:	add	r3, r3, #1
     f08:	str	r3, [fp, #-8]
     f0c:	ldr	r2, [fp, #-12]
     f10:	ldr	r3, [fp, #-8]
     f14:	cmp	r2, r3
     f18:	bne	e94 <get_item_for_cursor+0x9c>
     f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f20:	ldr	r2, [r3, #20]
     f24:	ldr	r3, [fp, #-12]
     f28:	lsl	r3, r3, #2
     f2c:	add	r3, r2, r3
     f30:	ldr	r2, [r3]
     f34:	ldr	r3, [fp, #-16]
     f38:	cmp	r2, r3
     f3c:	bne	f94 <get_item_for_cursor+0x19c>
     f40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f44:	ldr	r2, [r3, #24]
     f48:	ldr	r3, [fp, #-12]
     f4c:	lsl	r3, r3, #2
     f50:	add	r3, r2, r3
     f54:	ldr	r0, [r3]
     f58:	ldr	r3, [fp, #-28]	; 0xffffffe4
     f5c:	add	r1, r3, #1
     f60:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f64:	ldr	r2, [fp, #-32]	; 0xffffffe0
     f68:	bl	df8 <get_item_for_cursor>
     f6c:	mov	r3, r0
     f70:	cmp	r3, #0
     f74:	beq	f80 <get_item_for_cursor+0x188>
     f78:	mvn	r3, #0
     f7c:	b	1038 <get_item_for_cursor+0x240>
     f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f84:	cmp	r3, #0
     f88:	beq	f94 <get_item_for_cursor+0x19c>
     f8c:	mov	r3, #0
     f90:	b	1038 <get_item_for_cursor+0x240>
     f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f98:	ldr	r3, [r3, #12]
     f9c:	cmp	r3, #0
     fa0:	beq	1028 <get_item_for_cursor+0x230>
     fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fa8:	ldr	r0, [r3, #12]
     fac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fb0:	add	r1, r3, #1
     fb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     fbc:	bl	df8 <get_item_for_cursor>
     fc0:	mov	r3, r0
     fc4:	cmp	r3, #0
     fc8:	beq	fd4 <get_item_for_cursor+0x1dc>
     fcc:	mvn	r3, #0
     fd0:	b	1038 <get_item_for_cursor+0x240>
     fd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fd8:	cmp	r3, #0
     fdc:	beq	1028 <get_item_for_cursor+0x230>
     fe0:	mov	r3, #0
     fe4:	b	1038 <get_item_for_cursor+0x240>
     fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fec:	ldr	r3, [r3, #4]
     ff0:	cmp	r3, #0
     ff4:	ble	1028 <get_item_for_cursor+0x230>
     ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ffc:	ldr	r2, [r3, #8]
    1000:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1004:	ldr	r3, [r3, #4]
    1008:	sub	r3, r3, #-1073741823	; 0xc0000001
    100c:	lsl	r3, r3, #2
    1010:	add	r3, r2, r3
    1014:	ldr	r2, [r3]
    1018:	ldr	r3, [fp, #-36]	; 0xffffffdc
    101c:	str	r2, [r3]
    1020:	mov	r3, #0
    1024:	b	1038 <get_item_for_cursor+0x240>
    1028:	ldr	r3, [fp, #-36]	; 0xffffffdc
    102c:	mov	r2, #0
    1030:	str	r2, [r3]
    1034:	mov	r3, #0
    1038:	mov	r0, r3
    103c:	sub	sp, fp, #4
    1040:	pop	{fp, pc}

00001044 <coda_tree_node_get_item_for_cursor>:
    1044:	push	{fp, lr}
    1048:	add	fp, sp, #4
    104c:	sub	sp, sp, #16
    1050:	str	r0, [fp, #-8]
    1054:	str	r1, [fp, #-12]
    1058:	str	r2, [fp, #-16]
    105c:	ldr	r3, [fp, #-16]
    1060:	ldr	r2, [fp, #-12]
    1064:	mov	r1, #0
    1068:	ldr	r0, [fp, #-8]
    106c:	bl	df8 <get_item_for_cursor>
    1070:	mov	r3, r0
    1074:	mov	r0, r3
    1078:	sub	sp, fp, #4
    107c:	pop	{fp, pc}
