
../compcert-repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

00010694 <.init>:
   10694:	push	{r3, lr}
   10698:	bl	10768 <_start@@Base+0x3c>
   1069c:	pop	{r3, pc}

Disassembly of section .plt:

000106a0 <__isoc99_fscanf@plt-0x14>:
   106a0:	push	{lr}		; (str lr, [sp, #-4]!)
   106a4:	ldr	lr, [pc, #4]	; 106b0 <__isoc99_fscanf@plt-0x4>
   106a8:	add	lr, pc, lr
   106ac:	ldr	pc, [lr, #8]!
   106b0:	andeq	r0, r1, r0, asr r9

000106b4 <__isoc99_fscanf@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2384]!	; 0x950

000106c0 <fopen@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2376]!	; 0x948

000106cc <realloc@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2368]!	; 0x940

000106d8 <fwrite@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2360]!	; 0x938

000106e4 <malloc@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2352]!	; 0x930

000106f0 <__libc_start_main@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2344]!	; 0x928

000106fc <__gmon_start__@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2336]!	; 0x920

00010708 <fprintf@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2328]!	; 0x918

00010714 <fclose@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2320]!	; 0x910

00010720 <abort@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2312]!	; 0x908

Disassembly of section .text:

0001072c <_start@@Base>:
   1072c:	mov	fp, #0
   10730:	mov	lr, #0
   10734:	pop	{r1}		; (ldr r1, [sp], #4)
   10738:	mov	r2, sp
   1073c:	push	{r2}		; (str r2, [sp, #-4]!)
   10740:	push	{r0}		; (str r0, [sp, #-4]!)
   10744:	ldr	ip, [pc, #16]	; 1075c <_start@@Base+0x30>
   10748:	push	{ip}		; (str ip, [sp, #-4]!)
   1074c:	ldr	r0, [pc, #12]	; 10760 <_start@@Base+0x34>
   10750:	ldr	r3, [pc, #12]	; 10764 <_start@@Base+0x38>
   10754:	bl	106f0 <__libc_start_main@plt>
   10758:	bl	10720 <abort@plt>
   1075c:	andeq	r0, r1, ip, lsr #22
   10760:	andeq	r0, r1, ip, ror sl
   10764:	andeq	r0, r1, ip, asr #21
   10768:	ldr	r3, [pc, #20]	; 10784 <_start@@Base+0x58>
   1076c:	ldr	r2, [pc, #20]	; 10788 <_start@@Base+0x5c>
   10770:	add	r3, pc, r3
   10774:	ldr	r2, [r3, r2]
   10778:	cmp	r2, #0
   1077c:	bxeq	lr
   10780:	b	106fc <__gmon_start__@plt>
   10784:	andeq	r0, r1, r8, lsl #17
   10788:	andeq	r0, r0, r4, lsr r0
   1078c:	ldr	r3, [pc, #28]	; 107b0 <_start@@Base+0x84>
   10790:	ldr	r0, [pc, #28]	; 107b4 <_start@@Base+0x88>
   10794:	sub	r3, r3, r0
   10798:	cmp	r3, #6
   1079c:	bxls	lr
   107a0:	ldr	r3, [pc, #16]	; 107b8 <_start@@Base+0x8c>
   107a4:	cmp	r3, #0
   107a8:	bxeq	lr
   107ac:	bx	r3
   107b0:	andeq	r1, r2, r3, asr #32
   107b4:	andeq	r1, r2, r0, asr #32
   107b8:	andeq	r0, r0, r0
   107bc:	ldr	r1, [pc, #36]	; 107e8 <_start@@Base+0xbc>
   107c0:	ldr	r0, [pc, #36]	; 107ec <_start@@Base+0xc0>
   107c4:	sub	r1, r1, r0
   107c8:	asr	r1, r1, #2
   107cc:	add	r1, r1, r1, lsr #31
   107d0:	asrs	r1, r1, #1
   107d4:	bxeq	lr
   107d8:	ldr	r3, [pc, #16]	; 107f0 <_start@@Base+0xc4>
   107dc:	cmp	r3, #0
   107e0:	bxeq	lr
   107e4:	bx	r3
   107e8:	andeq	r1, r2, r0, asr #32
   107ec:	andeq	r1, r2, r0, asr #32
   107f0:	andeq	r0, r0, r0
   107f4:	push	{r4, lr}
   107f8:	ldr	r4, [pc, #24]	; 10818 <_start@@Base+0xec>
   107fc:	ldrb	r3, [r4]
   10800:	cmp	r3, #0
   10804:	popne	{r4, pc}
   10808:	bl	1078c <_start@@Base+0x60>
   1080c:	mov	r3, #1
   10810:	strb	r3, [r4]
   10814:	pop	{r4, pc}
   10818:	andeq	r1, r2, r0, asr #32
   1081c:	ldr	r0, [pc, #40]	; 1084c <_start@@Base+0x120>
   10820:	ldr	r3, [r0]
   10824:	cmp	r3, #0
   10828:	bne	10830 <_start@@Base+0x104>
   1082c:	b	107bc <_start@@Base+0x90>
   10830:	ldr	r3, [pc, #24]	; 10850 <_start@@Base+0x124>
   10834:	cmp	r3, #0
   10838:	beq	1082c <_start@@Base+0x100>
   1083c:	push	{r4, lr}
   10840:	blx	r3
   10844:	pop	{r4, lr}
   10848:	b	107bc <_start@@Base+0x90>
   1084c:	andeq	r0, r2, r4, lsl pc
   10850:	andeq	r0, r0, r0

00010854 <analisarFicheiro@@Base>:
   10854:	push	{fp, lr}
   10858:	add	fp, sp, #4
   1085c:	sub	sp, sp, #24
   10860:	str	r0, [fp, #-16]
   10864:	str	r1, [fp, #-20]	; 0xffffffec
   10868:	ldr	r1, [pc, #228]	; 10954 <analisarFicheiro@@Base+0x100>
   1086c:	ldr	r0, [pc, #228]	; 10958 <analisarFicheiro@@Base+0x104>
   10870:	bl	106c0 <fopen@plt>
   10874:	str	r0, [fp, #-16]
   10878:	mov	r3, #0
   1087c:	str	r3, [fp, #-8]
   10880:	mov	r0, #104	; 0x68
   10884:	bl	106e4 <malloc@plt>
   10888:	mov	r3, r0
   1088c:	str	r3, [fp, #-12]
   10890:	b	108c4 <analisarFicheiro@@Base+0x70>
   10894:	ldr	r3, [fp, #-8]
   10898:	add	r3, r3, #1
   1089c:	mov	r2, r3
   108a0:	mov	r3, #104	; 0x68
   108a4:	mul	r3, r3, r2
   108a8:	mov	r1, r3
   108ac:	ldr	r0, [fp, #-12]
   108b0:	bl	106cc <realloc@plt>
   108b4:	str	r0, [fp, #-12]
   108b8:	ldr	r3, [fp, #-8]
   108bc:	add	r3, r3, #1
   108c0:	str	r3, [fp, #-8]
   108c4:	ldr	r3, [fp, #-8]
   108c8:	mov	r2, #104	; 0x68
   108cc:	mul	r3, r2, r3
   108d0:	ldr	r2, [fp, #-12]
   108d4:	add	r3, r2, r3
   108d8:	mov	r0, r3
   108dc:	ldr	r3, [fp, #-8]
   108e0:	mov	r2, #104	; 0x68
   108e4:	mul	r3, r2, r3
   108e8:	ldr	r2, [fp, #-12]
   108ec:	add	r3, r2, r3
   108f0:	add	r1, r3, #50	; 0x32
   108f4:	ldr	r3, [fp, #-8]
   108f8:	mov	r2, #104	; 0x68
   108fc:	mul	r3, r2, r3
   10900:	ldr	r2, [fp, #-12]
   10904:	add	r3, r2, r3
   10908:	add	r3, r3, #100	; 0x64
   1090c:	str	r3, [sp]
   10910:	mov	r3, r1
   10914:	mov	r2, r0
   10918:	ldr	r1, [pc, #60]	; 1095c <analisarFicheiro@@Base+0x108>
   1091c:	ldr	r0, [fp, #-16]
   10920:	bl	106b4 <__isoc99_fscanf@plt>
   10924:	mov	r3, r0
   10928:	cmp	r3, #3
   1092c:	beq	10894 <analisarFicheiro@@Base+0x40>
   10930:	ldr	r3, [fp, #-20]	; 0xffffffec
   10934:	ldr	r2, [fp, #-8]
   10938:	str	r2, [r3]
   1093c:	ldr	r0, [fp, #-16]
   10940:	bl	10714 <fclose@plt>
   10944:	ldr	r3, [fp, #-12]
   10948:	mov	r0, r3
   1094c:	sub	sp, fp, #4
   10950:	pop	{fp, pc}
   10954:	andeq	r0, r1, ip, lsr fp
   10958:	andeq	r0, r1, r0, asr #22
   1095c:	andeq	r0, r1, r0, asr fp

00010960 <gerarRelatorio@@Base>:
   10960:	push	{fp, lr}
   10964:	add	fp, sp, #4
   10968:	sub	sp, sp, #32
   1096c:	str	r0, [fp, #-16]
   10970:	str	r1, [fp, #-20]	; 0xffffffec
   10974:	str	r2, [fp, #-24]	; 0xffffffe8
   10978:	ldr	r1, [pc, #240]	; 10a70 <gerarRelatorio@@Base+0x110>
   1097c:	ldr	r0, [fp, #-16]
   10980:	bl	106c0 <fopen@plt>
   10984:	str	r0, [fp, #-12]
   10988:	ldr	r3, [fp, #-12]
   1098c:	mov	r2, #10
   10990:	mov	r1, #1
   10994:	ldr	r0, [pc, #216]	; 10a74 <gerarRelatorio@@Base+0x114>
   10998:	bl	106d8 <fwrite@plt>
   1099c:	mov	r0, #104	; 0x68
   109a0:	bl	106e4 <malloc@plt>
   109a4:	mov	r3, r0
   109a8:	str	r3, [fp, #-20]	; 0xffffffec
   109ac:	mov	r3, #0
   109b0:	str	r3, [fp, #-8]
   109b4:	b	10a4c <gerarRelatorio@@Base+0xec>
   109b8:	ldr	r3, [fp, #-8]
   109bc:	add	r3, r3, #1
   109c0:	mov	r2, r3
   109c4:	mov	r3, #104	; 0x68
   109c8:	mul	r3, r3, r2
   109cc:	mov	r1, r3
   109d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   109d4:	bl	106cc <realloc@plt>
   109d8:	str	r0, [fp, #-20]	; 0xffffffec
   109dc:	ldr	r3, [fp, #-8]
   109e0:	mov	r2, #104	; 0x68
   109e4:	mul	r3, r2, r3
   109e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   109ec:	add	r3, r2, r3
   109f0:	add	r1, r3, #50	; 0x32
   109f4:	ldr	r3, [fp, #-8]
   109f8:	mov	r2, #104	; 0x68
   109fc:	mul	r3, r2, r3
   10a00:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a04:	add	r3, r2, r3
   10a08:	mov	r0, r3
   10a0c:	ldr	r3, [fp, #-8]
   10a10:	mov	r2, #104	; 0x68
   10a14:	mul	r3, r2, r3
   10a18:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a1c:	add	r3, r2, r3
   10a20:	ldr	r3, [r3, #100]	; 0x64
   10a24:	str	r3, [sp, #4]
   10a28:	str	r0, [sp]
   10a2c:	mov	r3, r1
   10a30:	ldr	r2, [fp, #-8]
   10a34:	ldr	r1, [pc, #60]	; 10a78 <gerarRelatorio@@Base+0x118>
   10a38:	ldr	r0, [fp, #-12]
   10a3c:	bl	10708 <fprintf@plt>
   10a40:	ldr	r3, [fp, #-8]
   10a44:	add	r3, r3, #1
   10a48:	str	r3, [fp, #-8]
   10a4c:	ldr	r2, [fp, #-8]
   10a50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a54:	cmp	r2, r3
   10a58:	blt	109b8 <gerarRelatorio@@Base+0x58>
   10a5c:	ldr	r0, [fp, #-12]
   10a60:	bl	10714 <fclose@plt>
   10a64:	nop			; (mov r0, r0)
   10a68:	sub	sp, fp, #4
   10a6c:	pop	{fp, pc}
   10a70:	andeq	r0, r1, ip, asr fp
   10a74:	andeq	r0, r1, r0, ror #22
   10a78:	andeq	r0, r1, ip, ror #22

00010a7c <main@@Base>:
   10a7c:	push	{fp, lr}
   10a80:	add	fp, sp, #4
   10a84:	sub	sp, sp, #16
   10a88:	mov	r3, #0
   10a8c:	str	r3, [fp, #-16]
   10a90:	sub	r3, fp, #16
   10a94:	mov	r1, r3
   10a98:	ldr	r0, [fp, #-8]
   10a9c:	bl	10854 <analisarFicheiro@@Base>
   10aa0:	str	r0, [fp, #-12]
   10aa4:	ldr	r3, [fp, #-16]
   10aa8:	mov	r2, r3
   10aac:	ldr	r1, [fp, #-12]
   10ab0:	ldr	r0, [pc, #16]	; 10ac8 <main@@Base+0x4c>
   10ab4:	bl	10960 <gerarRelatorio@@Base>
   10ab8:	mov	r3, #0
   10abc:	mov	r0, r3
   10ac0:	sub	sp, fp, #4
   10ac4:	pop	{fp, pc}
   10ac8:	andeq	r0, r1, r0, lsl #23

00010acc <__libc_csu_init@@Base>:
   10acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ad0:	mov	r7, r0
   10ad4:	ldr	r6, [pc, #72]	; 10b24 <__libc_csu_init@@Base+0x58>
   10ad8:	ldr	r5, [pc, #72]	; 10b28 <__libc_csu_init@@Base+0x5c>
   10adc:	add	r6, pc, r6
   10ae0:	add	r5, pc, r5
   10ae4:	sub	r6, r6, r5
   10ae8:	mov	r8, r1
   10aec:	mov	r9, r2
   10af0:	bl	10694 <__isoc99_fscanf@plt-0x20>
   10af4:	asrs	r6, r6, #2
   10af8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10afc:	mov	r4, #0
   10b00:	add	r4, r4, #1
   10b04:	ldr	r3, [r5], #4
   10b08:	mov	r2, r9
   10b0c:	mov	r1, r8
   10b10:	mov	r0, r7
   10b14:	blx	r3
   10b18:	cmp	r6, r4
   10b1c:	bne	10b00 <__libc_csu_init@@Base+0x34>
   10b20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b24:	andeq	r0, r1, ip, lsr #8
   10b28:	andeq	r0, r1, r4, lsr #8

00010b2c <__libc_csu_fini@@Base>:
   10b2c:	bx	lr

Disassembly of section .fini:

00010b30 <.fini>:
   10b30:	push	{r3, lr}
   10b34:	pop	{r3, pc}
