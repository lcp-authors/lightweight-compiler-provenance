
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000121a4 <.init>:
   121a4:	push	{r3, lr}
   121a8:	bl	13958 <_start@@Base+0x3c>
   121ac:	pop	{r3, pc}

Disassembly of section .plt:

000121b0 <coda_cursor_get_byte_size@plt-0x14>:
   121b0:	push	{lr}		; (str lr, [sp, #-4]!)
   121b4:	ldr	lr, [pc, #4]	; 121c0 <coda_cursor_get_byte_size@plt-0x4>
   121b8:	add	lr, pc, lr
   121bc:	ldr	pc, [lr, #8]!
   121c0:	andeq	r9, r1, r0, asr #28

000121c4 <coda_cursor_get_byte_size@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #102400	; 0x19000
   121cc:	ldr	pc, [ip, #3648]!	; 0xe40

000121d0 <coda_type_get_special_type_name@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #102400	; 0x19000
   121d8:	ldr	pc, [ip, #3640]!	; 0xe38

000121dc <coda_set_option_use_fast_size_expressions@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #102400	; 0x19000
   121e4:	ldr	pc, [ip, #3632]!	; 0xe30

000121e8 <raise@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #102400	; 0x19000
   121f0:	ldr	pc, [ip, #3624]!	; 0xe28

000121f4 <coda_get_option_bypass_special_types@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #102400	; 0x19000
   121fc:	ldr	pc, [ip, #3616]!	; 0xe20

00012200 <coda_set_option_perform_boundary_checks@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #102400	; 0x19000
   12208:	ldr	pc, [ip, #3608]!	; 0xe18

0001220c <strcmp@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #102400	; 0x19000
   12214:	ldr	pc, [ip, #3600]!	; 0xe10

00012218 <strtol@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #102400	; 0x19000
   12220:	ldr	pc, [ip, #3592]!	; 0xe08

00012224 <coda_type_get_record_field_hidden_status@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #102400	; 0x19000
   1222c:	ldr	pc, [ip, #3584]!	; 0xe00

00012230 <printf@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #102400	; 0x19000
   12238:	ldr	pc, [ip, #3576]!	; 0xdf8

0001223c <coda_cursor_get_record_field_available_status@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #102400	; 0x19000
   12244:	ldr	pc, [ip, #3568]!	; 0xdf0

00012248 <fopen@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #102400	; 0x19000
   12250:	ldr	pc, [ip, #3560]!	; 0xde8

00012254 <coda_set_error@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #102400	; 0x19000
   1225c:	ldr	pc, [ip, #3552]!	; 0xde0

00012260 <coda_open@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #102400	; 0x19000
   12268:	ldr	pc, [ip, #3544]!	; 0xdd8

0001226c <fflush@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #102400	; 0x19000
   12274:	ldr	pc, [ip, #3536]!	; 0xdd0

00012278 <coda_time_double_to_string@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #102400	; 0x19000
   12280:	ldr	pc, [ip, #3528]!	; 0xdc8

00012284 <coda_cursor_get_num_elements@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #102400	; 0x19000
   1228c:	ldr	pc, [ip, #3520]!	; 0xdc0

00012290 <coda_str64u@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #102400	; 0x19000
   12298:	ldr	pc, [ip, #3512]!	; 0xdb8

0001229c <free@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #102400	; 0x19000
   122a4:	ldr	pc, [ip, #3504]!	; 0xdb0

000122a8 <coda_set_option_use_mmap@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #102400	; 0x19000
   122b0:	ldr	pc, [ip, #3496]!	; 0xda8

000122b4 <coda_set_definition_path_conditional@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #102400	; 0x19000
   122bc:	ldr	pc, [ip, #3488]!	; 0xda0

000122c0 <coda_cursor_read_uint32@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #102400	; 0x19000
   122c8:	ldr	pc, [ip, #3480]!	; 0xd98

000122cc <coda_set_option_bypass_special_types@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #102400	; 0x19000
   122d4:	ldr	pc, [ip, #3472]!	; 0xd90

000122d8 <coda_type_get_record_field_type@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #102400	; 0x19000
   122e0:	ldr	pc, [ip, #3464]!	; 0xd88

000122e4 <coda_cursor_get_type@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #102400	; 0x19000
   122ec:	ldr	pc, [ip, #3456]!	; 0xd80

000122f0 <memcpy@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #102400	; 0x19000
   122f8:	ldr	pc, [ip, #3448]!	; 0xd78

000122fc <coda_isInf@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #102400	; 0x19000
   12304:	ldr	pc, [ip, #3440]!	; 0xd70

00012308 <coda_type_get_bit_size@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #102400	; 0x19000
   12310:	ldr	pc, [ip, #3432]!	; 0xd68

00012314 <coda_type_get_record_field_available_status@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #102400	; 0x19000
   1231c:	ldr	pc, [ip, #3424]!	; 0xd60

00012320 <coda_cursor_has_attributes@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #102400	; 0x19000
   12328:	ldr	pc, [ip, #3416]!	; 0xd58

0001232c <coda_cursor_get_type_class@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #102400	; 0x19000
   12334:	ldr	pc, [ip, #3408]!	; 0xd50

00012338 <coda_set_definition_path@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #102400	; 0x19000
   12340:	ldr	pc, [ip, #3400]!	; 0xd48

00012344 <coda_get_product_format@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #102400	; 0x19000
   1234c:	ldr	pc, [ip, #3392]!	; 0xd40

00012350 <coda_type_get_unit@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #102400	; 0x19000
   12358:	ldr	pc, [ip, #3384]!	; 0xd38

0001235c <coda_type_get_description@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #102400	; 0x19000
   12364:	ldr	pc, [ip, #3376]!	; 0xd30

00012368 <coda_cursor_get_special_type@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #102400	; 0x19000
   12370:	ldr	pc, [ip, #3368]!	; 0xd28

00012374 <coda_cursor_goto_first_array_element@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #102400	; 0x19000
   1237c:	ldr	pc, [ip, #3360]!	; 0xd20

00012380 <fwrite@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #102400	; 0x19000
   12388:	ldr	pc, [ip, #3352]!	; 0xd18

0001238c <coda_cursor_set_product@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #102400	; 0x19000
   12394:	ldr	pc, [ip, #3344]!	; 0xd10

00012398 <coda_cursor_goto_first_record_field@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #102400	; 0x19000
   123a0:	ldr	pc, [ip, #3336]!	; 0xd08

000123a4 <coda_cursor_goto_record_field_by_index@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #102400	; 0x19000
   123ac:	ldr	pc, [ip, #3328]!	; 0xd00

000123b0 <coda_done@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #102400	; 0x19000
   123b8:	ldr	pc, [ip, #3320]!	; 0xcf8

000123bc <puts@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #102400	; 0x19000
   123c4:	ldr	pc, [ip, #3312]!	; 0xcf0

000123c8 <coda_cursor_get_read_type@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #102400	; 0x19000
   123d0:	ldr	pc, [ip, #3304]!	; 0xce8

000123d4 <malloc@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #102400	; 0x19000
   123dc:	ldr	pc, [ip, #3296]!	; 0xce0

000123e0 <__libc_start_main@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #102400	; 0x19000
   123e8:	ldr	pc, [ip, #3288]!	; 0xcd8

000123ec <__gmon_start__@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #102400	; 0x19000
   123f4:	ldr	pc, [ip, #3280]!	; 0xcd0

000123f8 <coda_cursor_read_string@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #102400	; 0x19000
   12400:	ldr	pc, [ip, #3272]!	; 0xcc8

00012404 <coda_cursor_goto_parent@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #102400	; 0x19000
   1240c:	ldr	pc, [ip, #3264]!	; 0xcc0

00012410 <coda_type_get_num_record_fields@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #102400	; 0x19000
   12418:	ldr	pc, [ip, #3256]!	; 0xcb8

0001241c <exit@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #102400	; 0x19000
   12424:	ldr	pc, [ip, #3248]!	; 0xcb0

00012428 <coda_type_get_read_type@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #102400	; 0x19000
   12430:	ldr	pc, [ip, #3240]!	; 0xca8

00012434 <coda_cursor_get_string_length@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #102400	; 0x19000
   1243c:	ldr	pc, [ip, #3232]!	; 0xca0

00012440 <coda_cursor_read_uint64@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #102400	; 0x19000
   12448:	ldr	pc, [ip, #3224]!	; 0xc98

0001244c <coda_cursor_read_double@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #102400	; 0x19000
   12454:	ldr	pc, [ip, #3216]!	; 0xc90

00012458 <coda_isNaN@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #102400	; 0x19000
   12460:	ldr	pc, [ip, #3208]!	; 0xc88

00012464 <fprintf@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #102400	; 0x19000
   1246c:	ldr	pc, [ip, #3200]!	; 0xc80

00012470 <coda_cursor_goto_next_array_element@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #102400	; 0x19000
   12478:	ldr	pc, [ip, #3192]!	; 0xc78

0001247c <coda_open_as@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #102400	; 0x19000
   12484:	ldr	pc, [ip, #3184]!	; 0xc70

00012488 <coda_init@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #102400	; 0x19000
   12490:	ldr	pc, [ip, #3176]!	; 0xc68

00012494 <coda_set_option_perform_conversions@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #102400	; 0x19000
   1249c:	ldr	pc, [ip, #3168]!	; 0xc60

000124a0 <coda_cursor_goto_attributes@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #102400	; 0x19000
   124a8:	ldr	pc, [ip, #3160]!	; 0xc58

000124ac <coda_cursor_read_char@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #102400	; 0x19000
   124b4:	ldr	pc, [ip, #3152]!	; 0xc50

000124b8 <memset@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #102400	; 0x19000
   124c0:	ldr	pc, [ip, #3144]!	; 0xc48

000124c4 <putchar@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #102400	; 0x19000
   124cc:	ldr	pc, [ip, #3136]!	; 0xc40

000124d0 <strncpy@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #102400	; 0x19000
   124d8:	ldr	pc, [ip, #3128]!	; 0xc38

000124dc <coda_type_get_special_type@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #102400	; 0x19000
   124e4:	ldr	pc, [ip, #3120]!	; 0xc30

000124e8 <coda_type_get_record_union_status@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #102400	; 0x19000
   124f0:	ldr	pc, [ip, #3112]!	; 0xc28

000124f4 <coda_cursor_read_complex_double_split@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #102400	; 0x19000
   124fc:	ldr	pc, [ip, #3104]!	; 0xc20

00012500 <coda_type_get_array_base_type@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #102400	; 0x19000
   12508:	ldr	pc, [ip, #3096]!	; 0xc18

0001250c <fclose@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #102400	; 0x19000
   12514:	ldr	pc, [ip, #3088]!	; 0xc10

00012518 <coda_type_get_string_length@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #102400	; 0x19000
   12520:	ldr	pc, [ip, #3080]!	; 0xc08

00012524 <coda_type_get_native_type_name@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #102400	; 0x19000
   1252c:	ldr	pc, [ip, #3072]!	; 0xc00

00012530 <coda_cursor_get_array_dim@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #102400	; 0x19000
   12538:	ldr	pc, [ip, #3064]!	; 0xbf8

0001253c <coda_cursor_has_ascii_content@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #102400	; 0x19000
   12544:	ldr	pc, [ip, #3056]!	; 0xbf0

00012548 <coda_close@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #102400	; 0x19000
   12550:	ldr	pc, [ip, #3048]!	; 0xbe8

00012554 <coda_cursor_read_int64@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #102400	; 0x19000
   1255c:	ldr	pc, [ip, #3040]!	; 0xbe0

00012560 <vfprintf@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #102400	; 0x19000
   12568:	ldr	pc, [ip, #3032]!	; 0xbd8

0001256c <coda_cursor_goto@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #102400	; 0x19000
   12574:	ldr	pc, [ip, #3024]!	; 0xbd0

00012578 <coda_type_get_record_field_index_from_name@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #102400	; 0x19000
   12580:	ldr	pc, [ip, #3016]!	; 0xbc8

00012584 <coda_cursor_read_complex_double_pair@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #102400	; 0x19000
   1258c:	ldr	pc, [ip, #3008]!	; 0xbc0

00012590 <coda_cursor_goto_next_record_field@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #102400	; 0x19000
   12598:	ldr	pc, [ip, #3000]!	; 0xbb8

0001259c <fputc@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #102400	; 0x19000
   125a4:	ldr	pc, [ip, #2992]!	; 0xbb0

000125a8 <coda_type_get_array_dim@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #102400	; 0x19000
   125b0:	ldr	pc, [ip, #2984]!	; 0xba8

000125b4 <coda_cursor_get_bit_size@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #102400	; 0x19000
   125bc:	ldr	pc, [ip, #2976]!	; 0xba0

000125c0 <coda_errno_to_string@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #102400	; 0x19000
   125c8:	ldr	pc, [ip, #2968]!	; 0xb98

000125cc <coda_cursor_use_base_type_of_special_type@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #102400	; 0x19000
   125d4:	ldr	pc, [ip, #2960]!	; 0xb90

000125d8 <coda_cursor_get_available_union_field_index@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #102400	; 0x19000
   125e0:	ldr	pc, [ip, #2952]!	; 0xb88

000125e4 <coda_cursor_read_int32@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #102400	; 0x19000
   125ec:	ldr	pc, [ip, #2944]!	; 0xb80

000125f0 <coda_cursor_get_file_bit_offset@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #102400	; 0x19000
   125f8:	ldr	pc, [ip, #2936]!	; 0xb78

000125fc <coda_get_libcoda_version@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #102400	; 0x19000
   12604:	ldr	pc, [ip, #2928]!	; 0xb70

00012608 <coda_get_errno@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #102400	; 0x19000
   12610:	ldr	pc, [ip, #2920]!	; 0xb68

00012614 <coda_type_get_special_base_type@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #102400	; 0x19000
   1261c:	ldr	pc, [ip, #2912]!	; 0xb60

00012620 <coda_type_get_record_field_name@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #102400	; 0x19000
   12628:	ldr	pc, [ip, #2904]!	; 0xb58

0001262c <fputs@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #102400	; 0x19000
   12634:	ldr	pc, [ip, #2896]!	; 0xb50

00012638 <abort@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #102400	; 0x19000
   12640:	ldr	pc, [ip, #2888]!	; 0xb48

00012644 <coda_cursor_read_bits@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #102400	; 0x19000
   1264c:	ldr	pc, [ip, #2880]!	; 0xb40

00012650 <coda_str64@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #102400	; 0x19000
   12658:	ldr	pc, [ip, #2872]!	; 0xb38

0001265c <__assert_fail@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #102400	; 0x19000
   12664:	ldr	pc, [ip, #2864]!	; 0xb30

00012668 <coda_type_get_class@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #102400	; 0x19000
   12670:	ldr	pc, [ip, #2856]!	; 0xb28

Disassembly of section .text:

00012674 <main@@Base>:
   12674:	cmp	r0, #1
   12678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1267c:	sub	sp, sp, #44	; 0x2c
   12680:	beq	13878 <main@@Base+0x1204>
   12684:	ldr	r4, [r1, #4]
   12688:	mov	r5, r0
   1268c:	mov	r7, r1
   12690:	mov	r0, r4
   12694:	ldr	r1, [pc, #4072]	; 13684 <main@@Base+0x1010>
   12698:	bl	1220c <strcmp@plt>
   1269c:	cmp	r0, #0
   126a0:	beq	13878 <main@@Base+0x1204>
   126a4:	ldr	r1, [pc, #4060]	; 13688 <main@@Base+0x1014>
   126a8:	mov	r0, r4
   126ac:	bl	1220c <strcmp@plt>
   126b0:	cmp	r0, #0
   126b4:	beq	13878 <main@@Base+0x1204>
   126b8:	ldr	r1, [pc, #4044]	; 1368c <main@@Base+0x1018>
   126bc:	mov	r0, r4
   126c0:	bl	1220c <strcmp@plt>
   126c4:	cmp	r0, #0
   126c8:	beq	13884 <main@@Base+0x1210>
   126cc:	ldr	r1, [pc, #4028]	; 13690 <main@@Base+0x101c>
   126d0:	mov	r0, r4
   126d4:	bl	1220c <strcmp@plt>
   126d8:	cmp	r0, #0
   126dc:	beq	13884 <main@@Base+0x1210>
   126e0:	cmp	r5, #2
   126e4:	ble	126fc <main@@Base+0x88>
   126e8:	mov	r0, r4
   126ec:	ldr	r1, [pc, #4000]	; 13694 <main@@Base+0x1020>
   126f0:	bl	1220c <strcmp@plt>
   126f4:	cmp	r0, #0
   126f8:	beq	12c8c <main@@Base+0x618>
   126fc:	ldr	r2, [pc, #3988]	; 13698 <main@@Base+0x1024>
   12700:	mov	r1, #0
   12704:	ldr	r0, [r7]
   12708:	bl	122b4 <coda_set_definition_path_conditional@plt>
   1270c:	cmp	r0, #0
   12710:	bne	138d0 <main@@Base+0x125c>
   12714:	mov	r3, #4
   12718:	mov	r6, #1
   1271c:	ldr	r4, [r7, r3]
   12720:	ldr	r1, [pc, #3956]	; 1369c <main@@Base+0x1028>
   12724:	mov	r0, r4
   12728:	bl	1220c <strcmp@plt>
   1272c:	subs	fp, r0, #0
   12730:	beq	12a9c <main@@Base+0x428>
   12734:	ldr	r1, [pc, #3940]	; 136a0 <main@@Base+0x102c>
   12738:	mov	r0, r4
   1273c:	bl	1220c <strcmp@plt>
   12740:	subs	fp, r0, #0
   12744:	beq	12f58 <main@@Base+0x8e4>
   12748:	ldr	r1, [pc, #3924]	; 136a4 <main@@Base+0x1030>
   1274c:	mov	r0, r4
   12750:	bl	1220c <strcmp@plt>
   12754:	subs	fp, r0, #0
   12758:	beq	12cc0 <main@@Base+0x64c>
   1275c:	ldr	r1, [pc, #3908]	; 136a8 <main@@Base+0x1034>
   12760:	mov	r0, r4
   12764:	bl	1220c <strcmp@plt>
   12768:	subs	fp, r0, #0
   1276c:	beq	132b4 <main@@Base+0xc40>
   12770:	mov	r0, r4
   12774:	ldr	r1, [pc, #3888]	; 136ac <main@@Base+0x1038>
   12778:	bl	1220c <strcmp@plt>
   1277c:	subs	r4, r0, #0
   12780:	bne	135bc <main@@Base+0xf48>
   12784:	ldr	r2, [pc, #3876]	; 136b0 <main@@Base+0x103c>
   12788:	ldr	r3, [pc, #3876]	; 136b4 <main@@Base+0x1040>
   1278c:	add	r6, r6, #1
   12790:	mov	r1, r3
   12794:	ldr	r0, [pc, #3868]	; 136b8 <main@@Base+0x1044>
   12798:	ldr	r2, [r2]
   1279c:	ldr	ip, [pc, #3864]	; 136bc <main@@Base+0x1048>
   127a0:	ldr	lr, [pc, #3864]	; 136c0 <main@@Base+0x104c>
   127a4:	str	r3, [sp, #12]
   127a8:	ldr	r3, [pc, #3860]	; 136c4 <main@@Base+0x1050>
   127ac:	sub	r5, r5, r6
   127b0:	str	r2, [r1]
   127b4:	cmp	r5, #0
   127b8:	mov	r2, #5
   127bc:	str	r0, [sp, #4]
   127c0:	str	ip, [sp, #8]
   127c4:	add	r7, r7, r6, lsl #2
   127c8:	str	lr, [sp, #16]
   127cc:	str	r2, [r3]
   127d0:	str	r4, [r0]
   127d4:	str	r4, [ip]
   127d8:	str	r4, [lr]
   127dc:	ble	135bc <main@@Base+0xf48>
   127e0:	ldr	r9, [pc, #3808]	; 136c8 <main@@Base+0x1054>
   127e4:	ldr	fp, [pc, #3808]	; 136cc <main@@Base+0x1058>
   127e8:	str	r4, [sp, #28]
   127ec:	str	r4, [sp, #24]
   127f0:	str	r4, [sp, #20]
   127f4:	mov	sl, #1
   127f8:	b	12884 <main@@Base+0x210>
   127fc:	mov	r1, fp
   12800:	mov	r0, r6
   12804:	bl	1220c <strcmp@plt>
   12808:	cmp	r0, #0
   1280c:	beq	128a0 <main@@Base+0x22c>
   12810:	ldr	r1, [pc, #3768]	; 136d0 <main@@Base+0x105c>
   12814:	mov	r0, r6
   12818:	bl	1220c <strcmp@plt>
   1281c:	cmp	r0, #0
   12820:	beq	12944 <main@@Base+0x2d0>
   12824:	ldr	r1, [pc, #3752]	; 136d4 <main@@Base+0x1060>
   12828:	mov	r0, r6
   1282c:	bl	1220c <strcmp@plt>
   12830:	cmp	r0, #0
   12834:	beq	12944 <main@@Base+0x2d0>
   12838:	ldr	r1, [pc, #3736]	; 136d8 <main@@Base+0x1064>
   1283c:	mov	r0, r6
   12840:	bl	1220c <strcmp@plt>
   12844:	cmp	r0, #0
   12848:	bne	12a34 <main@@Base+0x3c0>
   1284c:	add	r3, r4, #1
   12850:	cmp	r5, r3
   12854:	ble	1298c <main@@Base+0x318>
   12858:	add	r2, r7, r8
   1285c:	ldr	r2, [r2, #4]
   12860:	ldrb	r1, [r2]
   12864:	cmp	r1, #45	; 0x2d
   12868:	beq	1298c <main@@Base+0x318>
   1286c:	ldr	r1, [sp, #16]
   12870:	mov	r4, r3
   12874:	str	r2, [r1]
   12878:	add	r4, r4, #1
   1287c:	cmp	r5, r4
   12880:	ble	128b0 <main@@Base+0x23c>
   12884:	ldr	r6, [r7, r4, lsl #2]
   12888:	mov	r1, r9
   1288c:	mov	r0, r6
   12890:	bl	1220c <strcmp@plt>
   12894:	lsl	r8, r4, #2
   12898:	cmp	r0, #0
   1289c:	bne	127fc <main@@Base+0x188>
   128a0:	add	r4, r4, #1
   128a4:	cmp	r5, r4
   128a8:	mov	sl, r0
   128ac:	bgt	12884 <main@@Base+0x210>
   128b0:	ldr	r3, [sp, #4]
   128b4:	ldr	r3, [r3]
   128b8:	cmp	r3, #0
   128bc:	beq	135bc <main@@Base+0xf48>
   128c0:	ldrb	r3, [r3]
   128c4:	cmp	r3, #0
   128c8:	beq	135bc <main@@Base+0xf48>
   128cc:	bl	12488 <coda_init@plt>
   128d0:	cmp	r0, #0
   128d4:	bne	138d0 <main@@Base+0x125c>
   128d8:	bl	12494 <coda_set_option_perform_conversions@plt>
   128dc:	mov	r0, sl
   128e0:	bl	121dc <coda_set_option_use_fast_size_expressions@plt>
   128e4:	ldr	r3, [sp, #8]
   128e8:	ldr	r0, [r3]
   128ec:	cmp	r0, #0
   128f0:	beq	1290c <main@@Base+0x298>
   128f4:	ldr	r1, [pc, #3552]	; 136dc <main@@Base+0x1068>
   128f8:	bl	12248 <fopen@plt>
   128fc:	ldr	r3, [sp, #12]
   12900:	cmp	r0, #0
   12904:	str	r0, [r3]
   12908:	beq	138fc <main@@Base+0x1288>
   1290c:	add	r0, sp, #20
   12910:	ldm	r0, {r0, r1, r2}
   12914:	bl	15480 <print_debug_data@@Base>
   12918:	ldr	r3, [sp, #8]
   1291c:	ldr	r3, [r3]
   12920:	cmp	r3, #0
   12924:	beq	12934 <main@@Base+0x2c0>
   12928:	ldr	r3, [sp, #12]
   1292c:	ldr	r0, [r3]
   12930:	bl	1250c <fclose@plt>
   12934:	bl	123b0 <coda_done@plt>
   12938:	mov	r0, #0
   1293c:	add	sp, sp, #44	; 0x2c
   12940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12944:	add	r3, r4, #1
   12948:	cmp	r5, r3
   1294c:	ble	12a20 <main@@Base+0x3ac>
   12950:	add	r2, r7, r8
   12954:	ldr	r1, [r2, #4]
   12958:	ldrb	r0, [r1]
   1295c:	cmp	r0, #45	; 0x2d
   12960:	ldrne	r2, [sp, #8]
   12964:	movne	r4, r3
   12968:	strne	r1, [r2]
   1296c:	bne	12878 <main@@Base+0x204>
   12970:	ldr	r1, [pc, #3424]	; 136d8 <main@@Base+0x1064>
   12974:	mov	r0, r6
   12978:	str	r2, [sp, #36]	; 0x24
   1297c:	str	r3, [sp, #32]
   12980:	bl	1220c <strcmp@plt>
   12984:	cmp	r0, #0
   12988:	bne	12ca0 <main@@Base+0x62c>
   1298c:	ldr	r1, [pc, #3404]	; 136e0 <main@@Base+0x106c>
   12990:	mov	r0, r6
   12994:	bl	1220c <strcmp@plt>
   12998:	subs	r1, r0, #0
   1299c:	bne	129fc <main@@Base+0x388>
   129a0:	add	r3, r4, #3
   129a4:	cmp	r5, r3
   129a8:	ble	129fc <main@@Base+0x388>
   129ac:	add	r8, r7, r8
   129b0:	ldr	ip, [r8, #4]
   129b4:	ldrb	r2, [ip]
   129b8:	cmp	r2, #45	; 0x2d
   129bc:	beq	129fc <main@@Base+0x388>
   129c0:	ldr	lr, [r8, #8]
   129c4:	ldrb	r2, [lr]
   129c8:	cmp	r2, #45	; 0x2d
   129cc:	beq	129fc <main@@Base+0x388>
   129d0:	ldr	r0, [r8, #12]
   129d4:	ldrb	r2, [r0]
   129d8:	cmp	r2, #45	; 0x2d
   129dc:	beq	129fc <main@@Base+0x388>
   129e0:	mov	r2, #10
   129e4:	mov	r4, r3
   129e8:	str	lr, [sp, #24]
   129ec:	str	ip, [sp, #20]
   129f0:	bl	12218 <strtol@plt>
   129f4:	str	r0, [sp, #28]
   129f8:	b	12878 <main@@Base+0x204>
   129fc:	sub	r3, r5, #1
   12a00:	cmp	r3, r4
   12a04:	bne	135bc <main@@Base+0xf48>
   12a08:	ldrb	r3, [r6]
   12a0c:	cmp	r3, #45	; 0x2d
   12a10:	beq	135bc <main@@Base+0xf48>
   12a14:	ldr	r3, [sp, #4]
   12a18:	str	r6, [r3]
   12a1c:	b	12878 <main@@Base+0x204>
   12a20:	ldr	r1, [pc, #3248]	; 136d8 <main@@Base+0x1064>
   12a24:	mov	r0, r6
   12a28:	bl	1220c <strcmp@plt>
   12a2c:	cmp	r0, #0
   12a30:	beq	1298c <main@@Base+0x318>
   12a34:	ldr	r1, [pc, #3240]	; 136e4 <main@@Base+0x1070>
   12a38:	mov	r0, r6
   12a3c:	bl	1220c <strcmp@plt>
   12a40:	cmp	r0, #0
   12a44:	beq	1284c <main@@Base+0x1d8>
   12a48:	ldr	r1, [pc, #3224]	; 136e8 <main@@Base+0x1074>
   12a4c:	mov	r0, r6
   12a50:	bl	1220c <strcmp@plt>
   12a54:	subs	r1, r0, #0
   12a58:	bne	1298c <main@@Base+0x318>
   12a5c:	add	r3, r4, #1
   12a60:	cmp	r5, r3
   12a64:	str	r3, [sp, #32]
   12a68:	ble	1298c <main@@Base+0x318>
   12a6c:	add	r2, r7, r8
   12a70:	ldr	r0, [r2, #4]
   12a74:	ldrb	r2, [r0]
   12a78:	cmp	r2, #45	; 0x2d
   12a7c:	beq	1298c <main@@Base+0x318>
   12a80:	mov	r2, #10
   12a84:	bl	12218 <strtol@plt>
   12a88:	ldr	r3, [sp, #32]
   12a8c:	mov	r4, r3
   12a90:	ldr	r3, [pc, #3156]	; 136ec <main@@Base+0x1078>
   12a94:	str	r0, [r3]
   12a98:	b	12878 <main@@Base+0x204>
   12a9c:	ldr	r3, [pc, #3092]	; 136b8 <main@@Base+0x1044>
   12aa0:	ldr	r2, [pc, #3100]	; 136c4 <main@@Base+0x1050>
   12aa4:	str	r3, [sp, #4]
   12aa8:	str	fp, [r3]
   12aac:	str	fp, [r3, #664]	; 0x298
   12ab0:	ldr	r3, [pc, #3252]	; 1376c <main@@Base+0x10f8>
   12ab4:	add	r6, r6, #1
   12ab8:	ldr	r1, [pc, #3120]	; 136f0 <main@@Base+0x107c>
   12abc:	str	fp, [r3]
   12ac0:	ldr	r3, [pc, #3116]	; 136f4 <main@@Base+0x1080>
   12ac4:	ldr	r9, [pc, #3116]	; 136f8 <main@@Base+0x1084>
   12ac8:	sub	r5, r5, r6
   12acc:	str	fp, [r3]
   12ad0:	ldr	r3, [pc, #3108]	; 136fc <main@@Base+0x1088>
   12ad4:	str	fp, [r2]
   12ad8:	cmp	r5, #0
   12adc:	str	fp, [r3]
   12ae0:	ldr	r3, [pc, #3096]	; 13700 <main@@Base+0x108c>
   12ae4:	mov	r2, #1
   12ae8:	add	r7, r7, r6, lsl #2
   12aec:	str	r2, [r1]
   12af0:	str	fp, [r9]
   12af4:	str	fp, [r3]
   12af8:	ble	135bc <main@@Base+0xf48>
   12afc:	ldr	r8, [pc, #3072]	; 13704 <main@@Base+0x1090>
   12b00:	ldr	sl, [pc, #3072]	; 13708 <main@@Base+0x1094>
   12b04:	sub	r3, r5, #1
   12b08:	str	r2, [sp, #8]
   12b0c:	str	r2, [sp, #16]
   12b10:	str	r3, [sp, #20]
   12b14:	ldr	r4, [r7, fp, lsl #2]
   12b18:	mov	r1, r8
   12b1c:	mov	r0, r4
   12b20:	bl	1220c <strcmp@plt>
   12b24:	lsl	r6, fp, #2
   12b28:	cmp	r0, #0
   12b2c:	beq	12c78 <main@@Base+0x604>
   12b30:	mov	r1, sl
   12b34:	mov	r0, r4
   12b38:	bl	1220c <strcmp@plt>
   12b3c:	cmp	r0, #0
   12b40:	beq	12c78 <main@@Base+0x604>
   12b44:	ldr	r1, [pc, #2940]	; 136c8 <main@@Base+0x1054>
   12b48:	mov	r0, r4
   12b4c:	bl	1220c <strcmp@plt>
   12b50:	cmp	r0, #0
   12b54:	beq	12c84 <main@@Base+0x610>
   12b58:	ldr	r1, [pc, #2988]	; 1370c <main@@Base+0x1098>
   12b5c:	mov	r0, r4
   12b60:	bl	1220c <strcmp@plt>
   12b64:	cmp	r0, #0
   12b68:	beq	12c84 <main@@Base+0x610>
   12b6c:	ldr	r1, [pc, #2972]	; 13710 <main@@Base+0x109c>
   12b70:	mov	r0, r4
   12b74:	bl	1220c <strcmp@plt>
   12b78:	cmp	r0, #0
   12b7c:	beq	12b94 <main@@Base+0x520>
   12b80:	ldr	r1, [pc, #2956]	; 13714 <main@@Base+0x10a0>
   12b84:	mov	r0, r4
   12b88:	bl	1220c <strcmp@plt>
   12b8c:	cmp	r0, #0
   12b90:	bne	12bd8 <main@@Base+0x564>
   12b94:	add	r2, fp, #1
   12b98:	cmp	r5, r2
   12b9c:	str	r2, [sp, #12]
   12ba0:	ble	12bd8 <main@@Base+0x564>
   12ba4:	add	r6, r7, r6
   12ba8:	ldr	r0, [r6, #4]
   12bac:	ldrb	r1, [r0]
   12bb0:	cmp	r1, #45	; 0x2d
   12bb4:	beq	12bd8 <main@@Base+0x564>
   12bb8:	bl	16de4 <codadump_filter_create@@Base>
   12bbc:	ldr	r3, [sp, #4]
   12bc0:	ldr	r2, [sp, #12]
   12bc4:	cmp	r0, #0
   12bc8:	str	r0, [r3, #664]	; 0x298
   12bcc:	beq	138ac <main@@Base+0x1238>
   12bd0:	mov	fp, r2
   12bd4:	b	12c0c <main@@Base+0x598>
   12bd8:	ldr	r1, [pc, #2960]	; 13770 <main@@Base+0x10fc>
   12bdc:	mov	r0, r4
   12be0:	bl	1220c <strcmp@plt>
   12be4:	cmp	r0, #0
   12be8:	beq	12c00 <main@@Base+0x58c>
   12bec:	ldr	r1, [pc, #2852]	; 13718 <main@@Base+0x10a4>
   12bf0:	mov	r0, r4
   12bf4:	bl	1220c <strcmp@plt>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12e84 <main@@Base+0x810>
   12c00:	ldr	r3, [pc, #2796]	; 136f4 <main@@Base+0x1080>
   12c04:	mov	r2, #1
   12c08:	str	r2, [r3]
   12c0c:	add	fp, fp, #1
   12c10:	cmp	r5, fp
   12c14:	bgt	12b14 <main@@Base+0x4a0>
   12c18:	ldr	r3, [sp, #4]
   12c1c:	ldr	r3, [r3]
   12c20:	cmp	r3, #0
   12c24:	beq	135bc <main@@Base+0xf48>
   12c28:	ldrb	r3, [r3]
   12c2c:	cmp	r3, #0
   12c30:	beq	135bc <main@@Base+0xf48>
   12c34:	bl	12488 <coda_init@plt>
   12c38:	subs	r4, r0, #0
   12c3c:	bne	138d0 <main@@Base+0x125c>
   12c40:	ldr	r3, [sp, #16]
   12c44:	eor	r0, r3, #1
   12c48:	bl	122cc <coda_set_option_bypass_special_types@plt>
   12c4c:	mov	r0, r4
   12c50:	bl	12200 <coda_set_option_perform_boundary_checks@plt>
   12c54:	ldr	r0, [sp, #8]
   12c58:	bl	12494 <coda_set_option_perform_conversions@plt>
   12c5c:	bl	184c4 <traverse_info_init@@Base>
   12c60:	bl	15cec <dim_info_init@@Base>
   12c64:	bl	1851c <traverse_product@@Base>
   12c68:	bl	15d0c <dim_info_done@@Base>
   12c6c:	bl	184e4 <traverse_info_done@@Base>
   12c70:	bl	123b0 <coda_done@plt>
   12c74:	b	12938 <main@@Base+0x2c4>
   12c78:	mov	r2, #1
   12c7c:	str	r2, [r9]
   12c80:	b	12c0c <main@@Base+0x598>
   12c84:	str	r0, [sp, #8]
   12c88:	b	12c0c <main@@Base+0x598>
   12c8c:	ldr	r0, [r7, #8]
   12c90:	bl	12338 <coda_set_definition_path@plt>
   12c94:	mov	r6, #3
   12c98:	mov	r3, #12
   12c9c:	b	1271c <main@@Base+0xa8>
   12ca0:	ldr	r1, [pc, #2620]	; 136e4 <main@@Base+0x1070>
   12ca4:	mov	r0, r6
   12ca8:	bl	1220c <strcmp@plt>
   12cac:	ldr	r3, [sp, #32]
   12cb0:	ldr	r2, [sp, #36]	; 0x24
   12cb4:	cmp	r0, #0
   12cb8:	beq	1285c <main@@Base+0x1e8>
   12cbc:	b	12a48 <main@@Base+0x3d4>
   12cc0:	ldr	r1, [pc, #2536]	; 136b0 <main@@Base+0x103c>
   12cc4:	ldr	r3, [pc, #2536]	; 136b4 <main@@Base+0x1040>
   12cc8:	add	r6, r6, #1
   12ccc:	ldr	r0, [pc, #2532]	; 136b8 <main@@Base+0x1044>
   12cd0:	ldr	r1, [r1]
   12cd4:	ldr	ip, [pc, #2528]	; 136bc <main@@Base+0x1048>
   12cd8:	ldr	lr, [pc, #2528]	; 136c0 <main@@Base+0x104c>
   12cdc:	ldr	r2, [pc, #2528]	; 136c4 <main@@Base+0x1050>
   12ce0:	sub	r4, r5, r6
   12ce4:	str	r1, [r3]
   12ce8:	cmp	r4, #0
   12cec:	mov	r1, #3
   12cf0:	str	r3, [sp, #12]
   12cf4:	str	r0, [sp, #4]
   12cf8:	str	ip, [sp, #8]
   12cfc:	add	r7, r7, r6, lsl #2
   12d00:	str	lr, [sp, #16]
   12d04:	str	r1, [r2]
   12d08:	str	fp, [r0]
   12d0c:	str	fp, [ip]
   12d10:	str	fp, [lr]
   12d14:	ble	135bc <main@@Base+0xf48>
   12d18:	ldr	r8, [pc, #2556]	; 1371c <main@@Base+0x10a8>
   12d1c:	mov	r3, #1
   12d20:	mov	r9, fp
   12d24:	str	r3, [sp, #20]
   12d28:	str	r3, [sp, #24]
   12d2c:	mov	sl, r3
   12d30:	sub	r3, r4, #1
   12d34:	str	r3, [sp, #28]
   12d38:	ldr	r5, [r7, fp, lsl #2]
   12d3c:	mov	r1, r8
   12d40:	mov	r0, r5
   12d44:	bl	1220c <strcmp@plt>
   12d48:	lsl	r6, fp, #2
   12d4c:	cmp	r0, #0
   12d50:	beq	12f14 <main@@Base+0x8a0>
   12d54:	ldr	r1, [pc, #2500]	; 13720 <main@@Base+0x10ac>
   12d58:	mov	r0, r5
   12d5c:	bl	1220c <strcmp@plt>
   12d60:	cmp	r0, #0
   12d64:	beq	12f14 <main@@Base+0x8a0>
   12d68:	ldr	r1, [pc, #2392]	; 136c8 <main@@Base+0x1054>
   12d6c:	mov	r0, r5
   12d70:	bl	1220c <strcmp@plt>
   12d74:	cmp	r0, #0
   12d78:	beq	12f1c <main@@Base+0x8a8>
   12d7c:	ldr	r1, [pc, #2440]	; 1370c <main@@Base+0x1098>
   12d80:	mov	r0, r5
   12d84:	bl	1220c <strcmp@plt>
   12d88:	cmp	r0, #0
   12d8c:	beq	12f1c <main@@Base+0x8a8>
   12d90:	ldr	r1, [pc, #2360]	; 136d0 <main@@Base+0x105c>
   12d94:	mov	r0, r5
   12d98:	bl	1220c <strcmp@plt>
   12d9c:	cmp	r0, #0
   12da0:	beq	12f28 <main@@Base+0x8b4>
   12da4:	ldr	r1, [pc, #2344]	; 136d4 <main@@Base+0x1060>
   12da8:	mov	r0, r5
   12dac:	bl	1220c <strcmp@plt>
   12db0:	cmp	r0, #0
   12db4:	beq	12f28 <main@@Base+0x8b4>
   12db8:	ldr	r1, [pc, #2328]	; 136d8 <main@@Base+0x1064>
   12dbc:	mov	r0, r5
   12dc0:	bl	1220c <strcmp@plt>
   12dc4:	cmp	r0, #0
   12dc8:	bne	12ed0 <main@@Base+0x85c>
   12dcc:	add	r3, fp, #1
   12dd0:	cmp	r4, r3
   12dd4:	ble	13534 <main@@Base+0xec0>
   12dd8:	add	r6, r7, r6
   12ddc:	ldr	r2, [r6, #4]
   12de0:	ldrb	r1, [r2]
   12de4:	cmp	r1, #45	; 0x2d
   12de8:	beq	13550 <main@@Base+0xedc>
   12dec:	ldr	r1, [sp, #16]
   12df0:	mov	fp, r3
   12df4:	str	r2, [r1]
   12df8:	add	fp, fp, #1
   12dfc:	cmp	r4, fp
   12e00:	bgt	12d38 <main@@Base+0x6c4>
   12e04:	ldr	r3, [sp, #4]
   12e08:	ldr	r3, [r3]
   12e0c:	cmp	r3, #0
   12e10:	beq	135bc <main@@Base+0xf48>
   12e14:	ldrb	r3, [r3]
   12e18:	cmp	r3, #0
   12e1c:	beq	135bc <main@@Base+0xf48>
   12e20:	bl	12488 <coda_init@plt>
   12e24:	cmp	r0, #0
   12e28:	bne	138d0 <main@@Base+0x125c>
   12e2c:	ldr	r3, [sp, #24]
   12e30:	eor	r0, r3, #1
   12e34:	bl	122cc <coda_set_option_bypass_special_types@plt>
   12e38:	ldr	r0, [sp, #20]
   12e3c:	bl	12494 <coda_set_option_perform_conversions@plt>
   12e40:	ldr	r3, [sp, #8]
   12e44:	ldr	r0, [r3]
   12e48:	cmp	r0, #0
   12e4c:	beq	12e68 <main@@Base+0x7f4>
   12e50:	ldr	r1, [pc, #2180]	; 136dc <main@@Base+0x1068>
   12e54:	bl	12248 <fopen@plt>
   12e58:	ldr	r3, [sp, #12]
   12e5c:	cmp	r0, #0
   12e60:	str	r0, [r3]
   12e64:	beq	138fc <main@@Base+0x1288>
   12e68:	mov	r0, r9
   12e6c:	bl	178b8 <print_json_data@@Base>
   12e70:	ldr	r3, [sp, #8]
   12e74:	ldr	r3, [r3]
   12e78:	cmp	r3, #0
   12e7c:	bne	12928 <main@@Base+0x2b4>
   12e80:	b	12934 <main@@Base+0x2c0>
   12e84:	ldr	r1, [pc, #2200]	; 13724 <main@@Base+0x10b0>
   12e88:	mov	r0, r4
   12e8c:	bl	1220c <strcmp@plt>
   12e90:	cmp	r0, #0
   12e94:	beq	12f04 <main@@Base+0x890>
   12e98:	ldr	r1, [pc, #2184]	; 13728 <main@@Base+0x10b4>
   12e9c:	mov	r0, r4
   12ea0:	bl	1220c <strcmp@plt>
   12ea4:	cmp	r0, #0
   12ea8:	beq	12f04 <main@@Base+0x890>
   12eac:	ldr	r1, [pc, #2168]	; 1372c <main@@Base+0x10b8>
   12eb0:	mov	r0, r4
   12eb4:	bl	1220c <strcmp@plt>
   12eb8:	cmp	r0, #0
   12ebc:	bne	13798 <main@@Base+0x1124>
   12ec0:	ldr	r3, [pc, #2104]	; 13700 <main@@Base+0x108c>
   12ec4:	mov	r2, #1
   12ec8:	str	r2, [r3]
   12ecc:	b	12c0c <main@@Base+0x598>
   12ed0:	ldr	r1, [pc, #2060]	; 136e4 <main@@Base+0x1070>
   12ed4:	mov	r0, r5
   12ed8:	bl	1220c <strcmp@plt>
   12edc:	cmp	r0, #0
   12ee0:	beq	12dcc <main@@Base+0x758>
   12ee4:	ldr	r1, [pc, #2192]	; 1377c <main@@Base+0x1108>
   12ee8:	mov	r0, r5
   12eec:	bl	1220c <strcmp@plt>
   12ef0:	cmp	r0, #0
   12ef4:	bne	13578 <main@@Base+0xf04>
   12ef8:	mov	r3, #0
   12efc:	str	r3, [sp, #24]
   12f00:	b	12df8 <main@@Base+0x784>
   12f04:	ldr	r3, [pc, #2032]	; 136fc <main@@Base+0x1088>
   12f08:	mov	r2, #1
   12f0c:	str	r2, [r3]
   12f10:	b	12c0c <main@@Base+0x598>
   12f14:	mov	r9, sl
   12f18:	b	12df8 <main@@Base+0x784>
   12f1c:	mov	r3, #0
   12f20:	str	r3, [sp, #20]
   12f24:	b	12df8 <main@@Base+0x784>
   12f28:	add	r3, fp, #1
   12f2c:	cmp	r4, r3
   12f30:	ble	13520 <main@@Base+0xeac>
   12f34:	add	r6, r7, r6
   12f38:	ldr	r2, [r6, #4]
   12f3c:	ldrb	r1, [r2]
   12f40:	cmp	r1, #45	; 0x2d
   12f44:	beq	135e0 <main@@Base+0xf6c>
   12f48:	ldr	r1, [sp, #8]
   12f4c:	mov	fp, r3
   12f50:	str	r2, [r1]
   12f54:	b	12df8 <main@@Base+0x784>
   12f58:	ldr	r3, [pc, #1876]	; 136b4 <main@@Base+0x1040>
   12f5c:	ldr	r2, [pc, #1940]	; 136f8 <main@@Base+0x1084>
   12f60:	mov	lr, r3
   12f64:	str	r3, [sp, #12]
   12f68:	ldr	r3, [pc, #1864]	; 136b8 <main@@Base+0x1044>
   12f6c:	mov	r9, #1
   12f70:	str	r3, [sp, #4]
   12f74:	str	fp, [r3]
   12f78:	str	fp, [r3, #664]	; 0x298
   12f7c:	ldr	r3, [pc, #1964]	; 13730 <main@@Base+0x10bc>
   12f80:	str	r9, [r2]
   12f84:	ldr	r2, [pc, #1960]	; 13734 <main@@Base+0x10c0>
   12f88:	ldr	ip, [pc, #1824]	; 136b0 <main@@Base+0x103c>
   12f8c:	str	r2, [r3]
   12f90:	ldr	r3, [pc, #1952]	; 13738 <main@@Base+0x10c4>
   12f94:	ldr	r4, [pc, #1824]	; 136bc <main@@Base+0x1048>
   12f98:	add	r6, r6, #1
   12f9c:	str	fp, [r3]
   12fa0:	ldr	r3, [pc, #1940]	; 1373c <main@@Base+0x10c8>
   12fa4:	ldr	r0, [pc, #1816]	; 136c4 <main@@Base+0x1050>
   12fa8:	ldr	r1, [pc, #1856]	; 136f0 <main@@Base+0x107c>
   12fac:	str	fp, [r3]
   12fb0:	ldr	r3, [pc, #1928]	; 13740 <main@@Base+0x10cc>
   12fb4:	mov	r8, r4
   12fb8:	str	r4, [sp, #8]
   12fbc:	str	fp, [r3]
   12fc0:	ldr	r3, [pc, #1968]	; 13778 <main@@Base+0x1104>
   12fc4:	sub	r4, r5, r6
   12fc8:	ldr	ip, [ip]
   12fcc:	cmp	r4, #0
   12fd0:	add	r6, r7, r6, lsl #2
   12fd4:	str	ip, [lr]
   12fd8:	str	r9, [r0]
   12fdc:	str	r9, [r1]
   12fe0:	str	fp, [r8]
   12fe4:	str	fp, [r3]
   12fe8:	ble	135bc <main@@Base+0xf48>
   12fec:	sub	r3, r4, #1
   12ff0:	ldr	r8, [pc, #1744]	; 136c8 <main@@Base+0x1054>
   12ff4:	ldr	sl, [pc, #1808]	; 1370c <main@@Base+0x1098>
   12ff8:	str	r9, [sp, #20]
   12ffc:	str	r3, [sp, #24]
   13000:	b	1308c <main@@Base+0xa18>
   13004:	mov	r1, sl
   13008:	mov	r0, r5
   1300c:	bl	1220c <strcmp@plt>
   13010:	cmp	r0, #0
   13014:	beq	130a8 <main@@Base+0xa34>
   13018:	ldr	r1, [pc, #1776]	; 13710 <main@@Base+0x109c>
   1301c:	mov	r0, r5
   13020:	bl	1220c <strcmp@plt>
   13024:	cmp	r0, #0
   13028:	beq	13040 <main@@Base+0x9cc>
   1302c:	ldr	r1, [pc, #1760]	; 13714 <main@@Base+0x10a0>
   13030:	mov	r0, r5
   13034:	bl	1220c <strcmp@plt>
   13038:	cmp	r0, #0
   1303c:	bne	1315c <main@@Base+0xae8>
   13040:	add	r2, fp, #1
   13044:	cmp	r4, r2
   13048:	str	r2, [sp, #16]
   1304c:	ble	1315c <main@@Base+0xae8>
   13050:	add	r1, r6, r7
   13054:	ldr	r0, [r1, #4]
   13058:	ldrb	r1, [r0]
   1305c:	cmp	r1, #45	; 0x2d
   13060:	beq	1315c <main@@Base+0xae8>
   13064:	bl	16de4 <codadump_filter_create@@Base>
   13068:	ldr	r3, [sp, #4]
   1306c:	ldr	r2, [sp, #16]
   13070:	cmp	r0, #0
   13074:	str	r0, [r3, #664]	; 0x298
   13078:	beq	138ac <main@@Base+0x1238>
   1307c:	mov	fp, r2
   13080:	add	fp, fp, #1
   13084:	cmp	r4, fp
   13088:	ble	130b8 <main@@Base+0xa44>
   1308c:	ldr	r5, [r6, fp, lsl #2]
   13090:	mov	r1, r8
   13094:	mov	r0, r5
   13098:	bl	1220c <strcmp@plt>
   1309c:	lsl	r7, fp, #2
   130a0:	cmp	r0, #0
   130a4:	bne	13004 <main@@Base+0x990>
   130a8:	add	fp, fp, #1
   130ac:	cmp	r4, fp
   130b0:	mov	r9, r0
   130b4:	bgt	1308c <main@@Base+0xa18>
   130b8:	ldr	r3, [sp, #4]
   130bc:	ldr	r3, [r3]
   130c0:	cmp	r3, #0
   130c4:	beq	135bc <main@@Base+0xf48>
   130c8:	ldrb	r3, [r3]
   130cc:	cmp	r3, #0
   130d0:	beq	135bc <main@@Base+0xf48>
   130d4:	bl	12488 <coda_init@plt>
   130d8:	subs	r4, r0, #0
   130dc:	bne	138d0 <main@@Base+0x125c>
   130e0:	ldr	r3, [sp, #20]
   130e4:	eor	r0, r3, #1
   130e8:	bl	122cc <coda_set_option_bypass_special_types@plt>
   130ec:	mov	r0, r4
   130f0:	bl	12200 <coda_set_option_perform_boundary_checks@plt>
   130f4:	mov	r0, r9
   130f8:	bl	12494 <coda_set_option_perform_conversions@plt>
   130fc:	bl	184c4 <traverse_info_init@@Base>
   13100:	bl	15cec <dim_info_init@@Base>
   13104:	ldr	r3, [sp, #8]
   13108:	ldr	r0, [r3]
   1310c:	cmp	r0, #0
   13110:	beq	1312c <main@@Base+0xab8>
   13114:	ldr	r1, [pc, #1472]	; 136dc <main@@Base+0x1068>
   13118:	bl	12248 <fopen@plt>
   1311c:	ldr	r3, [sp, #12]
   13120:	cmp	r0, #0
   13124:	str	r0, [r3]
   13128:	beq	138fc <main@@Base+0x1288>
   1312c:	bl	1851c <traverse_product@@Base>
   13130:	ldr	r3, [sp, #8]
   13134:	ldr	r3, [r3]
   13138:	cmp	r3, #0
   1313c:	beq	1314c <main@@Base+0xad8>
   13140:	ldr	r3, [sp, #12]
   13144:	ldr	r0, [r3]
   13148:	bl	1250c <fclose@plt>
   1314c:	bl	15d0c <dim_info_done@@Base>
   13150:	bl	184e4 <traverse_info_done@@Base>
   13154:	bl	123b0 <coda_done@plt>
   13158:	b	12938 <main@@Base+0x2c4>
   1315c:	ldr	r1, [pc, #1504]	; 13744 <main@@Base+0x10d0>
   13160:	mov	r0, r5
   13164:	bl	1220c <strcmp@plt>
   13168:	cmp	r0, #0
   1316c:	beq	13294 <main@@Base+0xc20>
   13170:	ldr	r1, [pc, #1488]	; 13748 <main@@Base+0x10d4>
   13174:	mov	r0, r5
   13178:	bl	1220c <strcmp@plt>
   1317c:	cmp	r0, #0
   13180:	beq	13294 <main@@Base+0xc20>
   13184:	ldr	r1, [pc, #1472]	; 1374c <main@@Base+0x10d8>
   13188:	mov	r0, r5
   1318c:	bl	1220c <strcmp@plt>
   13190:	cmp	r0, #0
   13194:	beq	132a4 <main@@Base+0xc30>
   13198:	ldr	r1, [pc, #1456]	; 13750 <main@@Base+0x10dc>
   1319c:	mov	r0, r5
   131a0:	bl	1220c <strcmp@plt>
   131a4:	cmp	r0, #0
   131a8:	beq	132a4 <main@@Base+0xc30>
   131ac:	ldr	r1, [pc, #1308]	; 136d0 <main@@Base+0x105c>
   131b0:	mov	r0, r5
   131b4:	bl	1220c <strcmp@plt>
   131b8:	cmp	r0, #0
   131bc:	bne	131f0 <main@@Base+0xb7c>
   131c0:	add	r2, fp, #1
   131c4:	cmp	r4, r2
   131c8:	ble	13204 <main@@Base+0xb90>
   131cc:	add	r1, r6, r7
   131d0:	ldr	r1, [r1, #4]
   131d4:	ldrb	r0, [r1]
   131d8:	cmp	r0, #45	; 0x2d
   131dc:	beq	13204 <main@@Base+0xb90>
   131e0:	ldr	r3, [sp, #8]
   131e4:	mov	fp, r2
   131e8:	str	r1, [r3]
   131ec:	b	13080 <main@@Base+0xa0c>
   131f0:	ldr	r1, [pc, #1244]	; 136d4 <main@@Base+0x1060>
   131f4:	mov	r0, r5
   131f8:	bl	1220c <strcmp@plt>
   131fc:	cmp	r0, #0
   13200:	beq	131c0 <main@@Base+0xb4c>
   13204:	ldr	r1, [pc, #1352]	; 13754 <main@@Base+0x10e0>
   13208:	mov	r0, r5
   1320c:	bl	1220c <strcmp@plt>
   13210:	cmp	r0, #0
   13214:	beq	13284 <main@@Base+0xc10>
   13218:	ldr	r1, [pc, #1336]	; 13758 <main@@Base+0x10e4>
   1321c:	mov	r0, r5
   13220:	bl	1220c <strcmp@plt>
   13224:	cmp	r0, #0
   13228:	beq	13284 <main@@Base+0xc10>
   1322c:	ldr	r1, [pc, #1320]	; 1375c <main@@Base+0x10e8>
   13230:	mov	r0, r5
   13234:	bl	1220c <strcmp@plt>
   13238:	cmp	r0, #0
   1323c:	beq	13254 <main@@Base+0xbe0>
   13240:	ldr	r1, [pc, #1304]	; 13760 <main@@Base+0x10ec>
   13244:	mov	r0, r5
   13248:	bl	1220c <strcmp@plt>
   1324c:	cmp	r0, #0
   13250:	bne	137c0 <main@@Base+0x114c>
   13254:	add	r2, fp, #1
   13258:	cmp	r4, r2
   1325c:	ble	137c0 <main@@Base+0x114c>
   13260:	add	r7, r6, r7
   13264:	ldr	r1, [r7, #4]
   13268:	ldrb	r0, [r1]
   1326c:	cmp	r0, #45	; 0x2d
   13270:	beq	137c0 <main@@Base+0x114c>
   13274:	ldr	r3, [pc, #1204]	; 13730 <main@@Base+0x10bc>
   13278:	mov	fp, r2
   1327c:	str	r1, [r3]
   13280:	b	13080 <main@@Base+0xa0c>
   13284:	ldr	r3, [pc, #1204]	; 13740 <main@@Base+0x10cc>
   13288:	mov	r2, #1
   1328c:	str	r2, [r3]
   13290:	b	13080 <main@@Base+0xa0c>
   13294:	ldr	r3, [pc, #1180]	; 13738 <main@@Base+0x10c4>
   13298:	mov	r2, #1
   1329c:	str	r2, [r3]
   132a0:	b	13080 <main@@Base+0xa0c>
   132a4:	ldr	r3, [pc, #1168]	; 1373c <main@@Base+0x10c8>
   132a8:	mov	r2, #1
   132ac:	str	r2, [r3]
   132b0:	b	13080 <main@@Base+0xa0c>
   132b4:	ldr	r1, [pc, #1012]	; 136b0 <main@@Base+0x103c>
   132b8:	ldr	r3, [pc, #1012]	; 136b4 <main@@Base+0x1040>
   132bc:	add	r6, r6, #1
   132c0:	ldr	r0, [pc, #1008]	; 136b8 <main@@Base+0x1044>
   132c4:	ldr	r1, [r1]
   132c8:	ldr	ip, [pc, #1004]	; 136bc <main@@Base+0x1048>
   132cc:	ldr	lr, [pc, #1004]	; 136c0 <main@@Base+0x104c>
   132d0:	ldr	r2, [pc, #1004]	; 136c4 <main@@Base+0x1050>
   132d4:	sub	r4, r5, r6
   132d8:	str	r1, [r3]
   132dc:	cmp	r4, #0
   132e0:	mov	r1, #4
   132e4:	str	r3, [sp, #12]
   132e8:	str	r0, [sp, #4]
   132ec:	str	ip, [sp, #8]
   132f0:	add	r7, r7, r6, lsl #2
   132f4:	str	lr, [sp, #16]
   132f8:	str	r1, [r2]
   132fc:	str	fp, [r0]
   13300:	str	fp, [ip]
   13304:	str	fp, [lr]
   13308:	ble	135bc <main@@Base+0xf48>
   1330c:	ldr	r8, [pc, #1032]	; 1371c <main@@Base+0x10a8>
   13310:	mov	r3, #1
   13314:	mov	r9, fp
   13318:	str	r3, [sp, #20]
   1331c:	str	r3, [sp, #24]
   13320:	mov	sl, r3
   13324:	sub	r3, r4, #1
   13328:	str	r3, [sp, #28]
   1332c:	ldr	r5, [r7, fp, lsl #2]
   13330:	mov	r1, r8
   13334:	mov	r0, r5
   13338:	bl	1220c <strcmp@plt>
   1333c:	lsl	r6, fp, #2
   13340:	cmp	r0, #0
   13344:	beq	134d0 <main@@Base+0xe5c>
   13348:	ldr	r1, [pc, #976]	; 13720 <main@@Base+0x10ac>
   1334c:	mov	r0, r5
   13350:	bl	1220c <strcmp@plt>
   13354:	cmp	r0, #0
   13358:	beq	134d0 <main@@Base+0xe5c>
   1335c:	ldr	r1, [pc, #868]	; 136c8 <main@@Base+0x1054>
   13360:	mov	r0, r5
   13364:	bl	1220c <strcmp@plt>
   13368:	cmp	r0, #0
   1336c:	beq	134e4 <main@@Base+0xe70>
   13370:	ldr	r1, [pc, #916]	; 1370c <main@@Base+0x1098>
   13374:	mov	r0, r5
   13378:	bl	1220c <strcmp@plt>
   1337c:	cmp	r0, #0
   13380:	beq	134e4 <main@@Base+0xe70>
   13384:	ldr	r1, [pc, #836]	; 136d0 <main@@Base+0x105c>
   13388:	mov	r0, r5
   1338c:	bl	1220c <strcmp@plt>
   13390:	cmp	r0, #0
   13394:	beq	134f0 <main@@Base+0xe7c>
   13398:	ldr	r1, [pc, #820]	; 136d4 <main@@Base+0x1060>
   1339c:	mov	r0, r5
   133a0:	bl	1220c <strcmp@plt>
   133a4:	cmp	r0, #0
   133a8:	beq	134f0 <main@@Base+0xe7c>
   133ac:	ldr	r1, [pc, #804]	; 136d8 <main@@Base+0x1064>
   133b0:	mov	r0, r5
   133b4:	bl	1220c <strcmp@plt>
   133b8:	cmp	r0, #0
   133bc:	bne	13404 <main@@Base+0xd90>
   133c0:	add	r3, fp, #1
   133c4:	cmp	r4, r3
   133c8:	ble	13438 <main@@Base+0xdc4>
   133cc:	add	r6, r7, r6
   133d0:	ldr	r2, [r6, #4]
   133d4:	ldrb	r1, [r2]
   133d8:	cmp	r1, #45	; 0x2d
   133dc:	beq	13658 <main@@Base+0xfe4>
   133e0:	ldr	r1, [sp, #16]
   133e4:	mov	fp, r3
   133e8:	str	r2, [r1]
   133ec:	b	134d4 <main@@Base+0xe60>
   133f0:	ldr	r1, [pc, #736]	; 136d8 <main@@Base+0x1064>
   133f4:	mov	r0, r5
   133f8:	bl	1220c <strcmp@plt>
   133fc:	cmp	r0, #0
   13400:	beq	13438 <main@@Base+0xdc4>
   13404:	ldr	r1, [pc, #728]	; 136e4 <main@@Base+0x1070>
   13408:	mov	r0, r5
   1340c:	bl	1220c <strcmp@plt>
   13410:	cmp	r0, #0
   13414:	beq	133c0 <main@@Base+0xd4c>
   13418:	ldr	r1, [pc, #860]	; 1377c <main@@Base+0x1108>
   1341c:	mov	r0, r5
   13420:	bl	1220c <strcmp@plt>
   13424:	cmp	r0, #0
   13428:	bne	1359c <main@@Base+0xf28>
   1342c:	mov	r3, #0
   13430:	str	r3, [sp, #24]
   13434:	b	134d4 <main@@Base+0xe60>
   13438:	ldr	r1, [pc, #828]	; 1377c <main@@Base+0x1108>
   1343c:	mov	r0, r5
   13440:	bl	1220c <strcmp@plt>
   13444:	cmp	r0, #0
   13448:	bne	1359c <main@@Base+0xf28>
   1344c:	str	r0, [sp, #24]
   13450:	ldr	r3, [sp, #4]
   13454:	ldr	r3, [r3]
   13458:	cmp	r3, #0
   1345c:	beq	135bc <main@@Base+0xf48>
   13460:	ldrb	r3, [r3]
   13464:	cmp	r3, #0
   13468:	beq	135bc <main@@Base+0xf48>
   1346c:	bl	12488 <coda_init@plt>
   13470:	cmp	r0, #0
   13474:	bne	138d0 <main@@Base+0x125c>
   13478:	ldr	r3, [sp, #24]
   1347c:	eor	r0, r3, #1
   13480:	bl	122cc <coda_set_option_bypass_special_types@plt>
   13484:	ldr	r0, [sp, #20]
   13488:	bl	12494 <coda_set_option_perform_conversions@plt>
   1348c:	ldr	r3, [sp, #8]
   13490:	ldr	r0, [r3]
   13494:	cmp	r0, #0
   13498:	beq	134b4 <main@@Base+0xe40>
   1349c:	ldr	r1, [pc, #568]	; 136dc <main@@Base+0x1068>
   134a0:	bl	12248 <fopen@plt>
   134a4:	ldr	r3, [sp, #12]
   134a8:	cmp	r0, #0
   134ac:	str	r0, [r3]
   134b0:	beq	138fc <main@@Base+0x1288>
   134b4:	mov	r0, r9
   134b8:	bl	19100 <print_yaml_data@@Base>
   134bc:	ldr	r3, [sp, #8]
   134c0:	ldr	r3, [r3]
   134c4:	cmp	r3, #0
   134c8:	bne	12928 <main@@Base+0x2b4>
   134cc:	b	12934 <main@@Base+0x2c0>
   134d0:	mov	r9, sl
   134d4:	add	fp, fp, #1
   134d8:	cmp	r4, fp
   134dc:	bgt	1332c <main@@Base+0xcb8>
   134e0:	b	13450 <main@@Base+0xddc>
   134e4:	mov	r3, #0
   134e8:	str	r3, [sp, #20]
   134ec:	b	134d4 <main@@Base+0xe60>
   134f0:	add	r3, fp, #1
   134f4:	cmp	r4, r3
   134f8:	ble	133f0 <main@@Base+0xd7c>
   134fc:	add	r6, r7, r6
   13500:	ldr	r2, [r6, #4]
   13504:	ldrb	r1, [r2]
   13508:	cmp	r1, #45	; 0x2d
   1350c:	beq	1361c <main@@Base+0xfa8>
   13510:	ldr	r1, [sp, #8]
   13514:	mov	fp, r3
   13518:	str	r2, [r1]
   1351c:	b	134d4 <main@@Base+0xe60>
   13520:	ldr	r1, [pc, #432]	; 136d8 <main@@Base+0x1064>
   13524:	mov	r0, r5
   13528:	bl	1220c <strcmp@plt>
   1352c:	cmp	r0, #0
   13530:	bne	12ed0 <main@@Base+0x85c>
   13534:	ldr	r1, [pc, #576]	; 1377c <main@@Base+0x1108>
   13538:	mov	r0, r5
   1353c:	bl	1220c <strcmp@plt>
   13540:	cmp	r0, #0
   13544:	bne	13578 <main@@Base+0xf04>
   13548:	str	r0, [sp, #24]
   1354c:	b	12e04 <main@@Base+0x790>
   13550:	ldr	r1, [pc, #548]	; 1377c <main@@Base+0x1108>
   13554:	mov	r0, r5
   13558:	str	r3, [sp, #32]
   1355c:	bl	1220c <strcmp@plt>
   13560:	ldr	r3, [sp, #32]
   13564:	cmp	r0, #0
   13568:	moveq	fp, r3
   1356c:	moveq	r3, #0
   13570:	streq	r3, [sp, #24]
   13574:	beq	12d38 <main@@Base+0x6c4>
   13578:	ldr	r3, [sp, #28]
   1357c:	cmp	r3, fp
   13580:	bne	135bc <main@@Base+0xf48>
   13584:	ldrb	r3, [r5]
   13588:	cmp	r3, #45	; 0x2d
   1358c:	beq	135bc <main@@Base+0xf48>
   13590:	ldr	r3, [sp, #4]
   13594:	str	r5, [r3]
   13598:	b	12df8 <main@@Base+0x784>
   1359c:	ldr	r3, [sp, #28]
   135a0:	cmp	r3, fp
   135a4:	bne	135bc <main@@Base+0xf48>
   135a8:	ldrb	r3, [r5]
   135ac:	cmp	r3, #45	; 0x2d
   135b0:	ldrne	r3, [sp, #4]
   135b4:	strne	r5, [r3]
   135b8:	bne	134d4 <main@@Base+0xe60>
   135bc:	ldr	r3, [pc, #460]	; 13790 <main@@Base+0x111c>
   135c0:	mov	r2, #25
   135c4:	mov	r1, #1
   135c8:	ldr	r3, [r3]
   135cc:	ldr	r0, [pc, #400]	; 13764 <main@@Base+0x10f0>
   135d0:	bl	12380 <fwrite@plt>
   135d4:	bl	191e0 <print_yaml_data@@Base+0xe0>
   135d8:	mov	r0, #1
   135dc:	bl	1241c <exit@plt>
   135e0:	ldr	r1, [pc, #240]	; 136d8 <main@@Base+0x1064>
   135e4:	mov	r0, r5
   135e8:	str	r3, [sp, #32]
   135ec:	bl	1220c <strcmp@plt>
   135f0:	ldr	r3, [sp, #32]
   135f4:	cmp	r0, #0
   135f8:	beq	13550 <main@@Base+0xedc>
   135fc:	ldr	r1, [pc, #224]	; 136e4 <main@@Base+0x1070>
   13600:	mov	r0, r5
   13604:	str	r3, [sp, #32]
   13608:	bl	1220c <strcmp@plt>
   1360c:	ldr	r3, [sp, #32]
   13610:	cmp	r0, #0
   13614:	beq	12ddc <main@@Base+0x768>
   13618:	b	12ee4 <main@@Base+0x870>
   1361c:	ldr	r1, [pc, #180]	; 136d8 <main@@Base+0x1064>
   13620:	mov	r0, r5
   13624:	str	r3, [sp, #32]
   13628:	bl	1220c <strcmp@plt>
   1362c:	ldr	r3, [sp, #32]
   13630:	cmp	r0, #0
   13634:	beq	13658 <main@@Base+0xfe4>
   13638:	ldr	r1, [pc, #164]	; 136e4 <main@@Base+0x1070>
   1363c:	mov	r0, r5
   13640:	str	r3, [sp, #32]
   13644:	bl	1220c <strcmp@plt>
   13648:	ldr	r3, [sp, #32]
   1364c:	cmp	r0, #0
   13650:	beq	133d0 <main@@Base+0xd5c>
   13654:	b	13418 <main@@Base+0xda4>
   13658:	ldr	r1, [pc, #284]	; 1377c <main@@Base+0x1108>
   1365c:	mov	r0, r5
   13660:	str	r3, [sp, #32]
   13664:	bl	1220c <strcmp@plt>
   13668:	ldr	r3, [sp, #32]
   1366c:	cmp	r0, #0
   13670:	bne	1359c <main@@Base+0xf28>
   13674:	mov	fp, r3
   13678:	mov	r3, #0
   1367c:	str	r3, [sp, #24]
   13680:	b	1332c <main@@Base+0xcb8>
   13684:	andeq	fp, r1, ip, asr r1
   13688:	andeq	fp, r1, r0, ror #2
   1368c:	andeq	fp, r1, r8, ror #2
   13690:	andeq	fp, r1, ip, ror #2
   13694:	andeq	fp, r1, r0, asr #3
   13698:	andeq	fp, r1, r4, asr #3
   1369c:	andeq	fp, r1, r0, ror #3
   136a0:	andeq	fp, r1, r0, asr r2
   136a4:	andeq	fp, r1, r0, asr #5
   136a8:	ldrdeq	fp, [r1], -r8
   136ac:	andeq	sl, r1, r4, ror #24
   136b0:			; <UNDEFINED> instruction: 0x0002c1bc
   136b4:	muleq	r2, r8, r0
   136b8:	strdeq	ip, [r2], -r0
   136bc:	andeq	ip, r2, r0, ror #3
   136c0:	strheq	sp, [r2], -r0
   136c4:	andeq	sp, r2, ip, lsr #1
   136c8:	andeq	fp, r1, r8, lsl #4
   136cc:	andeq	sl, r1, r0, lsl sp
   136d0:	andeq	fp, r1, r4, ror #4
   136d4:	andeq	fp, r1, r8, ror #4
   136d8:	andeq	fp, r1, ip, asr #5
   136dc:	muleq	r1, r0, r2
   136e0:	andeq	fp, r1, ip, ror #5
   136e4:	ldrdeq	fp, [r1], -r0
   136e8:	andeq	fp, r1, r0, ror #5
   136ec:			; <UNDEFINED> instruction: 0x0002c1b0
   136f0:	ldrdeq	ip, [r2], -r8
   136f4:	andeq	sp, r2, r0, lsr #1
   136f8:	andeq	ip, r2, ip, ror #3
   136fc:	andeq	ip, r2, r8, ror #3
   13700:	andeq	sp, r2, r4, lsr #1
   13704:	andeq	fp, r1, r4, lsl #4
   13708:	andeq	sl, r1, r0, ror #4
   1370c:			; <UNDEFINED> instruction: 0x0001a2b4
   13710:	andeq	fp, r1, ip, lsl #4
   13714:	andeq	fp, r1, r0, lsl r2
   13718:	muleq	r1, r0, r3
   1371c:	andeq	fp, r1, r8, asr #5
   13720:	andeq	sl, r1, r4, ror r9
   13724:	andeq	fp, r1, ip, asr #4
   13728:	ldrdeq	sl, [r1], -r4
   1372c:	andeq	sl, r1, r4, lsl r4
   13730:	muleq	r2, ip, r0
   13734:	andeq	fp, r1, r8, asr r2
   13738:	andeq	sp, r2, r8, lsr #1
   1373c:	andeq	sp, r2, r8, lsr #4
   13740:	andeq	sp, r2, ip, lsr #4
   13744:	andeq	fp, r1, ip, asr r2
   13748:	andeq	sl, r1, ip, asr r6
   1374c:	andeq	fp, r1, r0, ror #4
   13750:			; <UNDEFINED> instruction: 0x0001a6b8
   13754:	andeq	fp, r1, r4, ror r2
   13758:	andeq	sl, r1, r4, ror r7
   1375c:	andeq	fp, r1, r8, ror r2
   13760:	andeq	fp, r1, ip, ror r2
   13764:	andeq	fp, r1, r8, ror #3
   13768:	andeq	sl, r1, r4, ror #8
   1376c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   13770:	andeq	fp, r1, r8, asr #4
   13774:	andeq	sl, r1, r4, ror #16
   13778:	andeq	ip, r2, r4, ror #3
   1377c:	strdeq	sl, [r1], -r4
   13780:	andeq	fp, r1, r8, ror r1
   13784:	muleq	r1, r0, r1
   13788:	andeq	fp, r1, ip, lsl r2
   1378c:	andeq	fp, r1, r0, asr r1
   13790:			; <UNDEFINED> instruction: 0x0002c1b8
   13794:	muleq	r1, r4, r2
   13798:	ldr	r1, [pc, #-56]	; 13768 <main@@Base+0x10f4>
   1379c:	mov	r0, r4
   137a0:	bl	1220c <strcmp@plt>
   137a4:	cmp	r0, #0
   137a8:	bne	13830 <main@@Base+0x11bc>
   137ac:	ldr	r3, [pc, #-72]	; 1376c <main@@Base+0x10f8>
   137b0:	mov	r2, #1
   137b4:	str	r2, [r9]
   137b8:	str	r2, [r3]
   137bc:	b	12c0c <main@@Base+0x598>
   137c0:	ldr	r1, [pc, #-88]	; 13770 <main@@Base+0x10fc>
   137c4:	mov	r0, r5
   137c8:	bl	1220c <strcmp@plt>
   137cc:	cmp	r0, #0
   137d0:	beq	13820 <main@@Base+0x11ac>
   137d4:	ldr	r1, [pc, #-104]	; 13774 <main@@Base+0x1100>
   137d8:	mov	r0, r5
   137dc:	bl	1220c <strcmp@plt>
   137e0:	cmp	r0, #0
   137e4:	beq	13820 <main@@Base+0x11ac>
   137e8:	ldr	r1, [pc, #-116]	; 1377c <main@@Base+0x1108>
   137ec:	mov	r0, r5
   137f0:	bl	1220c <strcmp@plt>
   137f4:	cmp	r0, #0
   137f8:	beq	13870 <main@@Base+0x11fc>
   137fc:	ldr	r3, [sp, #24]
   13800:	cmp	r3, fp
   13804:	bne	135bc <main@@Base+0xf48>
   13808:	ldrb	r2, [r5]
   1380c:	cmp	r2, #45	; 0x2d
   13810:	beq	135bc <main@@Base+0xf48>
   13814:	ldr	r3, [sp, #4]
   13818:	str	r5, [r3]
   1381c:	b	13080 <main@@Base+0xa0c>
   13820:	ldr	r3, [pc, #-176]	; 13778 <main@@Base+0x1104>
   13824:	mov	r2, #1
   13828:	str	r2, [r3]
   1382c:	b	13080 <main@@Base+0xa0c>
   13830:	ldr	r1, [pc, #-188]	; 1377c <main@@Base+0x1108>
   13834:	mov	r0, r4
   13838:	bl	1220c <strcmp@plt>
   1383c:	cmp	r0, #0
   13840:	beq	13868 <main@@Base+0x11f4>
   13844:	ldr	r3, [sp, #20]
   13848:	cmp	r3, fp
   1384c:	bne	135bc <main@@Base+0xf48>
   13850:	ldrb	r2, [r4]
   13854:	cmp	r2, #45	; 0x2d
   13858:	beq	135bc <main@@Base+0xf48>
   1385c:	ldr	r3, [sp, #4]
   13860:	str	r4, [r3]
   13864:	b	12c0c <main@@Base+0x598>
   13868:	str	r0, [sp, #16]
   1386c:	b	12c0c <main@@Base+0x598>
   13870:	str	r0, [sp, #20]
   13874:	b	13080 <main@@Base+0xa0c>
   13878:	bl	191e0 <print_yaml_data@@Base+0xe0>
   1387c:	mov	r0, #0
   13880:	bl	1241c <exit@plt>
   13884:	bl	125fc <coda_get_libcoda_version@plt>
   13888:	mov	r1, r0
   1388c:	ldr	r0, [pc, #-276]	; 13780 <main@@Base+0x110c>
   13890:	bl	12230 <printf@plt>
   13894:	ldr	r0, [pc, #-280]	; 13784 <main@@Base+0x1110>
   13898:	bl	123bc <puts@plt>
   1389c:	mov	r0, #10
   138a0:	bl	124c4 <putchar@plt>
   138a4:	mov	r0, #0
   138a8:	bl	1241c <exit@plt>
   138ac:	ldr	r3, [pc, #-292]	; 13790 <main@@Base+0x111c>
   138b0:	mov	r2, #40	; 0x28
   138b4:	mov	r1, #1
   138b8:	ldr	r3, [r3]
   138bc:	ldr	r0, [pc, #-316]	; 13788 <main@@Base+0x1114>
   138c0:	bl	12380 <fwrite@plt>
   138c4:	bl	191e0 <print_yaml_data@@Base+0xe0>
   138c8:	mov	r0, #1
   138cc:	bl	1241c <exit@plt>
   138d0:	ldr	r3, [pc, #-328]	; 13790 <main@@Base+0x111c>
   138d4:	ldr	r4, [r3]
   138d8:	bl	12608 <coda_get_errno@plt>
   138dc:	ldr	r0, [r0]
   138e0:	bl	125c0 <coda_errno_to_string@plt>
   138e4:	ldr	r1, [pc, #-352]	; 1378c <main@@Base+0x1118>
   138e8:	mov	r2, r0
   138ec:	mov	r0, r4
   138f0:	bl	12464 <fprintf@plt>
   138f4:	mov	r0, #1
   138f8:	bl	1241c <exit@plt>
   138fc:	ldr	r3, [pc, #-372]	; 13790 <main@@Base+0x111c>
   13900:	ldr	r2, [sp, #8]
   13904:	ldr	r1, [pc, #-376]	; 13794 <main@@Base+0x1120>
   13908:	ldr	r0, [r3]
   1390c:	ldr	r2, [r2]
   13910:	bl	12464 <fprintf@plt>
   13914:	mov	r0, #1
   13918:	bl	1241c <exit@plt>

0001391c <_start@@Base>:
   1391c:	mov	fp, #0
   13920:	mov	lr, #0
   13924:	pop	{r1}		; (ldr r1, [sp], #4)
   13928:	mov	r2, sp
   1392c:	push	{r2}		; (str r2, [sp, #-4]!)
   13930:	push	{r0}		; (str r0, [sp, #-4]!)
   13934:	ldr	ip, [pc, #16]	; 1394c <_start@@Base+0x30>
   13938:	push	{ip}		; (str ip, [sp, #-4]!)
   1393c:	ldr	r0, [pc, #12]	; 13950 <_start@@Base+0x34>
   13940:	ldr	r3, [pc, #12]	; 13954 <_start@@Base+0x38>
   13944:	bl	123e0 <__libc_start_main@plt>
   13948:	bl	12638 <abort@plt>
   1394c:	muleq	r1, ip, r9
   13950:	andeq	r2, r1, r4, ror r6
   13954:	andeq	r9, r1, ip, lsr r9
   13958:	ldr	r3, [pc, #20]	; 13974 <_start@@Base+0x58>
   1395c:	ldr	r2, [pc, #20]	; 13978 <_start@@Base+0x5c>
   13960:	add	r3, pc, r3
   13964:	ldr	r2, [r3, r2]
   13968:	cmp	r2, #0
   1396c:	bxeq	lr
   13970:	b	123ec <__gmon_start__@plt>
   13974:	muleq	r1, r8, r6
   13978:	muleq	r0, ip, r1
   1397c:	ldr	r3, [pc, #28]	; 139a0 <_start@@Base+0x84>
   13980:	ldr	r0, [pc, #28]	; 139a4 <_start@@Base+0x88>
   13984:	sub	r3, r3, r0
   13988:	cmp	r3, #6
   1398c:	bxls	lr
   13990:	ldr	r3, [pc, #16]	; 139a8 <_start@@Base+0x8c>
   13994:	cmp	r3, #0
   13998:	bxeq	lr
   1399c:	bx	r3
   139a0:			; <UNDEFINED> instruction: 0x0002c1b7
   139a4:			; <UNDEFINED> instruction: 0x0002c1b4
   139a8:	andeq	r0, r0, r0
   139ac:	ldr	r1, [pc, #36]	; 139d8 <_start@@Base+0xbc>
   139b0:	ldr	r0, [pc, #36]	; 139dc <_start@@Base+0xc0>
   139b4:	sub	r1, r1, r0
   139b8:	asr	r1, r1, #2
   139bc:	add	r1, r1, r1, lsr #31
   139c0:	asrs	r1, r1, #1
   139c4:	bxeq	lr
   139c8:	ldr	r3, [pc, #16]	; 139e0 <_start@@Base+0xc4>
   139cc:	cmp	r3, #0
   139d0:	bxeq	lr
   139d4:	bx	r3
   139d8:			; <UNDEFINED> instruction: 0x0002c1b4
   139dc:			; <UNDEFINED> instruction: 0x0002c1b4
   139e0:	andeq	r0, r0, r0
   139e4:	push	{r4, lr}
   139e8:	ldr	r4, [pc, #24]	; 13a08 <_start@@Base+0xec>
   139ec:	ldrb	r3, [r4]
   139f0:	cmp	r3, #0
   139f4:	popne	{r4, pc}
   139f8:	bl	1397c <_start@@Base+0x60>
   139fc:	mov	r3, #1
   13a00:	strb	r3, [r4]
   13a04:	pop	{r4, pc}
   13a08:	andeq	ip, r2, r0, asr #3
   13a0c:	ldr	r0, [pc, #40]	; 13a3c <_start@@Base+0x120>
   13a10:	ldr	r3, [r0]
   13a14:	cmp	r3, #0
   13a18:	bne	13a20 <_start@@Base+0x104>
   13a1c:	b	139ac <_start@@Base+0x90>
   13a20:	ldr	r3, [pc, #24]	; 13a40 <_start@@Base+0x124>
   13a24:	cmp	r3, #0
   13a28:	beq	13a1c <_start@@Base+0x100>
   13a2c:	push	{r4, lr}
   13a30:	blx	r3
   13a34:	pop	{r4, lr}
   13a38:	b	139ac <_start@@Base+0x90>
   13a3c:	strdeq	fp, [r2], -ip
   13a40:	andeq	r0, r0, r0
   13a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a48:	mov	r6, r1
   13a4c:	ldr	sl, [pc, #2720]	; 144f4 <_start@@Base+0xbd8>
   13a50:	add	r1, r1, #2
   13a54:	sub	sp, sp, #108	; 0x6c
   13a58:	mov	ip, r1
   13a5c:	str	r1, [sp, #32]
   13a60:	mov	fp, r0
   13a64:	add	r1, sp, #52	; 0x34
   13a68:	ldr	r0, [sl, ip, lsl #2]
   13a6c:	mov	r4, r2
   13a70:	mov	r5, r3
   13a74:	bl	12668 <coda_type_get_class@plt>
   13a78:	cmp	r0, #0
   13a7c:	bne	13c14 <_start@@Base+0x2f8>
   13a80:	ldr	r3, [sp, #52]	; 0x34
   13a84:	cmp	r3, #0
   13a88:	beq	13bac <_start@@Base+0x290>
   13a8c:	cmp	r3, #1
   13a90:	beq	13ae8 <_start@@Base+0x1cc>
   13a94:	ldr	r3, [pc, #2652]	; 144f8 <_start@@Base+0xbdc>
   13a98:	ldr	r3, [r3]
   13a9c:	cmp	r3, #0
   13aa0:	bne	13dc4 <_start@@Base+0x4a8>
   13aa4:	ldr	r3, [sp, #32]
   13aa8:	add	r1, sp, #56	; 0x38
   13aac:	ldr	r0, [sl, r3, lsl #2]
   13ab0:	bl	12668 <coda_type_get_class@plt>
   13ab4:	cmp	r0, #0
   13ab8:	bne	13dbc <_start@@Base+0x4a0>
   13abc:	ldr	r3, [sp, #56]	; 0x38
   13ac0:	cmp	r3, #6
   13ac4:	ldrls	pc, [pc, r3, lsl #2]
   13ac8:	b	13c88 <_start@@Base+0x36c>
   13acc:	andeq	r3, r1, r0, lsr #27
   13ad0:	andeq	r3, r1, r0, lsr #27
   13ad4:	andeq	r3, r1, ip, lsr sp
   13ad8:	andeq	r3, r1, ip, lsr sp
   13adc:	andeq	r3, r1, ip, lsr sp
   13ae0:	andeq	r3, r1, ip, lsr sp
   13ae4:	andeq	r3, r1, ip, asr #25
   13ae8:	lsl	r3, r4, #2
   13aec:	str	r3, [sp, #20]
   13af0:	add	r3, r3, r4
   13af4:	cmp	r4, #0
   13af8:	add	r3, sl, r3, lsl #4
   13afc:	streq	r4, [sl, #844]	; 0x34c
   13b00:	ldr	lr, [r3, #800]	; 0x320
   13b04:	ldr	r3, [sp, #20]
   13b08:	add	r2, r3, r4
   13b0c:	ldr	r3, [pc, #2536]	; 144fc <_start@@Base+0xbe0>
   13b10:	add	r2, sl, r2, lsl #4
   13b14:	ldr	r0, [r2, #804]	; 0x324
   13b18:	ldr	r1, [r3, #104]	; 0x68
   13b1c:	add	ip, lr, r0
   13b20:	cmp	r1, ip
   13b24:	str	r1, [sp, #24]
   13b28:	str	ip, [sp, #28]
   13b2c:	bge	13c9c <_start@@Base+0x380>
   13b30:	cmp	r0, #0
   13b34:	ble	14280 <_start@@Base+0x964>
   13b38:	ldr	r2, [sp, #20]
   13b3c:	add	lr, lr, #1
   13b40:	add	ip, r2, r4
   13b44:	add	r2, sp, #72	; 0x48
   13b48:	lsl	ip, ip, #4
   13b4c:	add	r1, ip, #844	; 0x34c
   13b50:	add	r3, r3, lr, lsl #2
   13b54:	add	r1, sl, r1
   13b58:	add	ip, sl, ip
   13b5c:	add	r0, r2, r0, lsl #2
   13b60:	mov	r7, #1
   13b64:	mov	lr, #0
   13b68:	ldr	r8, [r3, #68]	; 0x44
   13b6c:	add	r2, r2, #4
   13b70:	cmp	r8, #0
   13b74:	add	r3, r3, #4
   13b78:	ldrne	r8, [r3, #100]	; 0x64
   13b7c:	ldrne	r9, [ip, #844]	; 0x34c
   13b80:	ldreq	r8, [r3, #-4]
   13b84:	ldrne	r8, [r8, r9, lsl #2]
   13b88:	str	r8, [r2, #-4]
   13b8c:	cmp	r2, r0
   13b90:	mul	r7, r8, r7
   13b94:	str	lr, [r1, #4]!
   13b98:	bne	13b68 <_start@@Base+0x24c>
   13b9c:	cmp	r7, #0
   13ba0:	bne	13e9c <_start@@Base+0x580>
   13ba4:	add	sp, sp, #108	; 0x6c
   13ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bac:	add	r7, r5, #872	; 0x368
   13bb0:	add	r2, sp, #72	; 0x48
   13bb4:	add	r3, sl, r7, lsl #2
   13bb8:	ldr	r0, [pc, #2368]	; 14500 <_start@@Base+0xbe4>
   13bbc:	ldr	r1, [r3, #4]
   13bc0:	bl	1223c <coda_cursor_get_record_field_available_status@plt>
   13bc4:	cmp	r0, #0
   13bc8:	bne	13db4 <_start@@Base+0x498>
   13bcc:	ldr	r3, [sp, #72]	; 0x48
   13bd0:	cmp	r3, #0
   13bd4:	beq	13ba4 <_start@@Base+0x288>
   13bd8:	add	r7, sl, r7, lsl #2
   13bdc:	ldr	r0, [pc, #2332]	; 14500 <_start@@Base+0xbe4>
   13be0:	ldr	r1, [r7, #4]
   13be4:	bl	123a4 <coda_cursor_goto_record_field_by_index@plt>
   13be8:	cmp	r0, #0
   13bec:	bne	1429c <_start@@Base+0x980>
   13bf0:	add	r3, r5, #1
   13bf4:	mov	r2, r4
   13bf8:	add	r1, r6, #1
   13bfc:	mov	r0, fp
   13c00:	bl	13a44 <_start@@Base+0x128>
   13c04:	ldr	r0, [pc, #2292]	; 14500 <_start@@Base+0xbe4>
   13c08:	bl	12404 <coda_cursor_goto_parent@plt>
   13c0c:	add	sp, sp, #108	; 0x6c
   13c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c14:	bl	196f0 <handle_coda_error@@Base>
   13c18:	b	13a80 <_start@@Base+0x164>
   13c1c:	add	r1, sp, #72	; 0x48
   13c20:	ldr	r0, [pc, #2264]	; 14500 <_start@@Base+0xbe4>
   13c24:	bl	12434 <coda_cursor_get_string_length@plt>
   13c28:	cmp	r0, #0
   13c2c:	bne	1442c <_start@@Base+0xb10>
   13c30:	ldr	r0, [sp, #72]	; 0x48
   13c34:	add	r0, r0, #1
   13c38:	bl	123d4 <malloc@plt>
   13c3c:	subs	r4, r0, #0
   13c40:	beq	144a4 <_start@@Base+0xb88>
   13c44:	ldr	r2, [sp, #72]	; 0x48
   13c48:	mov	r1, r4
   13c4c:	add	r2, r2, #1
   13c50:	ldr	r0, [pc, #2216]	; 14500 <_start@@Base+0xbe4>
   13c54:	bl	123f8 <coda_cursor_read_string@plt>
   13c58:	cmp	r0, #0
   13c5c:	bne	14424 <_start@@Base+0xb08>
   13c60:	ldr	r3, [pc, #2204]	; 14504 <_start@@Base+0xbe8>
   13c64:	ldr	r3, [r3]
   13c68:	cmp	r3, #0
   13c6c:	beq	1438c <_start@@Base+0xa70>
   13c70:	mov	r2, r4
   13c74:	ldr	r1, [pc, #2188]	; 14508 <_start@@Base+0xbec>
   13c78:	mov	r0, fp
   13c7c:	bl	12464 <fprintf@plt>
   13c80:	mov	r0, r4
   13c84:	bl	1229c <free@plt>
   13c88:	mov	r1, fp
   13c8c:	mov	r0, #10
   13c90:	bl	1259c <fputc@plt>
   13c94:	add	sp, sp, #108	; 0x6c
   13c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c9c:	ldr	r1, [sl, #3360]	; 0xd20
   13ca0:	sub	r1, r1, #1
   13ca4:	cmp	r4, r1
   13ca8:	bge	13b30 <_start@@Base+0x214>
   13cac:	ldr	ip, [r2, #844]	; 0x34c
   13cb0:	add	r1, r4, #1
   13cb4:	ldr	r2, [r2, #840]	; 0x348
   13cb8:	add	r1, r1, r1, lsl #2
   13cbc:	mul	r2, r2, ip
   13cc0:	add	r1, sl, r1, lsl #4
   13cc4:	str	r2, [r1, #844]	; 0x34c
   13cc8:	b	13b30 <_start@@Base+0x214>
   13ccc:	ldr	r3, [sp, #32]
   13cd0:	add	r1, sp, #60	; 0x3c
   13cd4:	ldr	r0, [sl, r3, lsl #2]
   13cd8:	bl	124dc <coda_type_get_special_type@plt>
   13cdc:	cmp	r0, #0
   13ce0:	bne	142a4 <_start@@Base+0x988>
   13ce4:	ldr	r3, [sp, #60]	; 0x3c
   13ce8:	cmp	r3, #1
   13cec:	bcc	13c88 <_start@@Base+0x36c>
   13cf0:	cmp	r3, #2
   13cf4:	bls	13ffc <_start@@Base+0x6e0>
   13cf8:	cmp	r3, #3
   13cfc:	bne	13c88 <_start@@Base+0x36c>
   13d00:	add	r1, sp, #72	; 0x48
   13d04:	ldr	r0, [pc, #2036]	; 14500 <_start@@Base+0xbe4>
   13d08:	bl	12584 <coda_cursor_read_complex_double_pair@plt>
   13d0c:	cmp	r0, #0
   13d10:	bne	1436c <_start@@Base+0xa50>
   13d14:	ldr	ip, [pc, #2032]	; 1450c <_start@@Base+0xbf0>
   13d18:	ldrd	r0, [sp, #80]	; 0x50
   13d1c:	ldrd	r2, [sp, #72]	; 0x48
   13d20:	ldr	ip, [ip]
   13d24:	strd	r0, [sp, #8]
   13d28:	str	ip, [sp]
   13d2c:	ldr	r1, [pc, #2012]	; 14510 <_start@@Base+0xbf4>
   13d30:	mov	r0, fp
   13d34:	bl	12464 <fprintf@plt>
   13d38:	b	13c88 <_start@@Base+0x36c>
   13d3c:	ldr	r3, [sp, #32]
   13d40:	add	r1, sp, #60	; 0x3c
   13d44:	ldr	r0, [sl, r3, lsl #2]
   13d48:	bl	12428 <coda_type_get_read_type@plt>
   13d4c:	cmp	r0, #0
   13d50:	bne	142ac <_start@@Base+0x990>
   13d54:	ldr	r3, [sp, #60]	; 0x3c
   13d58:	add	r3, r3, #1
   13d5c:	cmp	r3, #13
   13d60:	ldrls	pc, [pc, r3, lsl #2]
   13d64:	b	13c88 <_start@@Base+0x36c>
   13d68:	andeq	r4, r1, ip, ror #4
   13d6c:	andeq	r4, r1, r4, ror #3
   13d70:			; <UNDEFINED> instruction: 0x000141bc
   13d74:	andeq	r4, r1, r4, ror #3
   13d78:			; <UNDEFINED> instruction: 0x000141bc
   13d7c:	andeq	r4, r1, r4, ror #3
   13d80:			; <UNDEFINED> instruction: 0x000141bc
   13d84:	andeq	r4, r1, ip, lsr r2
   13d88:	andeq	r4, r1, ip, lsl #4
   13d8c:	andeq	r4, r1, r8, ror r0
   13d90:	andeq	r4, r1, r8, ror r0
   13d94:	andeq	r4, r1, r0, asr #32
   13d98:	andeq	r3, r1, ip, lsl ip
   13d9c:	andeq	r4, r1, ip, lsr #1
   13da0:	ldr	r3, [pc, #1900]	; 14514 <_start@@Base+0xbf8>
   13da4:	mov	r2, #368	; 0x170
   13da8:	ldr	r1, [pc, #1896]	; 14518 <_start@@Base+0xbfc>
   13dac:	ldr	r0, [pc, #1896]	; 1451c <_start@@Base+0xc00>
   13db0:	bl	1265c <__assert_fail@plt>
   13db4:	bl	196f0 <handle_coda_error@@Base>
   13db8:	b	13bcc <_start@@Base+0x2b0>
   13dbc:	bl	196f0 <handle_coda_error@@Base>
   13dc0:	b	13abc <_start@@Base+0x1a0>
   13dc4:	ldr	r3, [sl, #136]	; 0x88
   13dc8:	cmp	r3, #0
   13dcc:	ble	13aa4 <_start@@Base+0x188>
   13dd0:	mov	r3, #0
   13dd4:	ldr	r2, [pc, #1860]	; 14520 <_start@@Base+0xc04>
   13dd8:	str	r3, [sp, #28]
   13ddc:	mov	r7, r3
   13de0:	add	r3, sp, #72	; 0x48
   13de4:	str	r2, [sp, #20]
   13de8:	ldr	r9, [pc, #1820]	; 1450c <_start@@Base+0xbf0>
   13dec:	ldr	r8, [pc, #1840]	; 14524 <_start@@Base+0xc08>
   13df0:	str	r3, [sp, #24]
   13df4:	b	13e14 <_start@@Base+0x4f8>
   13df8:	ldr	r3, [sp, #72]	; 0x48
   13dfc:	cmp	r3, #1
   13e00:	beq	13e40 <_start@@Base+0x524>
   13e04:	ldr	r3, [sl, #136]	; 0x88
   13e08:	add	r7, r7, #1
   13e0c:	cmp	r7, r3
   13e10:	bge	13aa4 <_start@@Base+0x188>
   13e14:	ldr	r3, [sp, #20]
   13e18:	ldr	r1, [sp, #24]
   13e1c:	ldr	r0, [r3, #4]!
   13e20:	str	r3, [sp, #20]
   13e24:	bl	12668 <coda_type_get_class@plt>
   13e28:	cmp	r0, #0
   13e2c:	beq	13df8 <_start@@Base+0x4dc>
   13e30:	bl	196f0 <handle_coda_error@@Base>
   13e34:	ldr	r3, [sp, #72]	; 0x48
   13e38:	cmp	r3, #1
   13e3c:	bne	13e04 <_start@@Base+0x4e8>
   13e40:	ldr	r3, [sp, #28]
   13e44:	add	r5, r3, r3, lsl #2
   13e48:	lsl	r5, r5, #4
   13e4c:	add	r6, sl, r5
   13e50:	ldr	r3, [r6, #804]	; 0x324
   13e54:	cmp	r3, #0
   13e58:	addgt	r5, r5, #844	; 0x34c
   13e5c:	addgt	r5, sl, r5
   13e60:	movgt	r4, #0
   13e64:	ble	13e8c <_start@@Base+0x570>
   13e68:	ldr	r3, [r9]
   13e6c:	ldr	r2, [r5, #4]!
   13e70:	mov	r1, r8
   13e74:	mov	r0, fp
   13e78:	bl	12464 <fprintf@plt>
   13e7c:	ldr	r3, [r6, #804]	; 0x324
   13e80:	add	r4, r4, #1
   13e84:	cmp	r4, r3
   13e88:	blt	13e68 <_start@@Base+0x54c>
   13e8c:	ldr	r3, [sp, #28]
   13e90:	add	r3, r3, #1
   13e94:	str	r3, [sp, #28]
   13e98:	b	13e04 <_start@@Base+0x4e8>
   13e9c:	ldr	r0, [pc, #1628]	; 14500 <_start@@Base+0xbe4>
   13ea0:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   13ea4:	cmp	r0, #0
   13ea8:	bne	14294 <_start@@Base+0x978>
   13eac:	cmp	r7, #0
   13eb0:	ble	13c04 <_start@@Base+0x2e8>
   13eb4:	ldr	r3, [sp, #20]
   13eb8:	add	r8, r4, #1
   13ebc:	add	r3, r3, r4
   13ec0:	add	r2, r8, r8, lsl #2
   13ec4:	ldr	r9, [pc, #1580]	; 144f8 <_start@@Base+0xbdc>
   13ec8:	add	r1, r6, #1
   13ecc:	lsl	r3, r3, #2
   13ed0:	mov	r6, #0
   13ed4:	add	r2, sl, r2, lsl #4
   13ed8:	str	r3, [sp, #40]	; 0x28
   13edc:	sub	r3, r7, #1
   13ee0:	str	r1, [sp, #32]
   13ee4:	str	r2, [sp, #44]	; 0x2c
   13ee8:	str	r3, [sp, #36]	; 0x24
   13eec:	mov	r3, r5
   13ef0:	mov	r2, r8
   13ef4:	ldr	r1, [sp, #32]
   13ef8:	mov	r0, fp
   13efc:	bl	13a44 <_start@@Base+0x128>
   13f00:	ldr	r3, [sp, #36]	; 0x24
   13f04:	cmp	r6, r3
   13f08:	bge	13fe4 <_start@@Base+0x6c8>
   13f0c:	ldr	r0, [pc, #1516]	; 14500 <_start@@Base+0xbe4>
   13f10:	bl	12470 <coda_cursor_goto_next_array_element@plt>
   13f14:	cmp	r0, #0
   13f18:	bne	13ff4 <_start@@Base+0x6d8>
   13f1c:	ldr	r3, [sp, #24]
   13f20:	ldr	r2, [sp, #28]
   13f24:	cmp	r3, r2
   13f28:	blt	13f4c <_start@@Base+0x630>
   13f2c:	ldr	r3, [sl, #3360]	; 0xd20
   13f30:	sub	r3, r3, #1
   13f34:	cmp	r4, r3
   13f38:	ldrlt	r2, [sp, #44]	; 0x2c
   13f3c:	movlt	r3, r2
   13f40:	ldrlt	r3, [r3, #844]	; 0x34c
   13f44:	addlt	r3, r3, #1
   13f48:	strlt	r3, [r2, #844]	; 0x34c
   13f4c:	ldr	r3, [r9]
   13f50:	cmp	r3, #0
   13f54:	beq	13fe4 <_start@@Base+0x6c8>
   13f58:	ldr	r3, [sp, #20]
   13f5c:	add	r3, r3, r4
   13f60:	add	r2, sl, r3, lsl #4
   13f64:	ldr	r0, [r2, #804]	; 0x324
   13f68:	subs	r1, r0, #1
   13f6c:	bmi	13fe4 <_start@@Base+0x6c8>
   13f70:	add	r3, r1, r3, lsl #2
   13f74:	add	r3, r3, #212	; 0xd4
   13f78:	add	ip, sp, #104	; 0x68
   13f7c:	add	ip, ip, r1, lsl #2
   13f80:	ldr	r2, [sl, r3, lsl #2]
   13f84:	ldr	ip, [ip, #-32]	; 0xffffffe0
   13f88:	add	r2, r2, #1
   13f8c:	cmp	r2, ip
   13f90:	str	r2, [sl, r3, lsl #2]
   13f94:	bne	13fe4 <_start@@Base+0x6c8>
   13f98:	ldr	r3, [sp, #40]	; 0x28
   13f9c:	mov	lr, #0
   13fa0:	add	r2, r0, r3
   13fa4:	add	r3, sp, #104	; 0x68
   13fa8:	add	r0, r3, r0, lsl #2
   13fac:	add	r2, sl, r2, lsl #2
   13fb0:	add	r2, r2, #844	; 0x34c
   13fb4:	sub	r0, r0, #40	; 0x28
   13fb8:	b	13fd4 <_start@@Base+0x6b8>
   13fbc:	ldr	r3, [r2, #-4]
   13fc0:	ldr	ip, [r0], #-4
   13fc4:	add	r3, r3, #1
   13fc8:	cmp	r3, ip
   13fcc:	str	r3, [r2, #-4]!
   13fd0:	bne	13fe4 <_start@@Base+0x6c8>
   13fd4:	sub	r1, r1, #1
   13fd8:	cmn	r1, #1
   13fdc:	str	lr, [r2]
   13fe0:	bne	13fbc <_start@@Base+0x6a0>
   13fe4:	add	r6, r6, #1
   13fe8:	cmp	r6, r7
   13fec:	bne	13eec <_start@@Base+0x5d0>
   13ff0:	b	13c04 <_start@@Base+0x2e8>
   13ff4:	bl	196f0 <handle_coda_error@@Base>
   13ff8:	b	13f1c <_start@@Base+0x600>
   13ffc:	add	r1, sp, #64	; 0x40
   14000:	ldr	r0, [pc, #1272]	; 14500 <_start@@Base+0xbe4>
   14004:	bl	1244c <coda_cursor_read_double@plt>
   14008:	cmp	r0, #0
   1400c:	bne	14374 <_start@@Base+0xa58>
   14010:	ldr	r3, [sp, #60]	; 0x3c
   14014:	cmp	r3, #2
   14018:	bne	1402c <_start@@Base+0x710>
   1401c:	ldr	r3, [pc, #1284]	; 14528 <_start@@Base+0xc0c>
   14020:	ldr	r3, [r3]
   14024:	cmp	r3, #0
   14028:	bne	1439c <_start@@Base+0xa80>
   1402c:	ldrd	r2, [sp, #64]	; 0x40
   14030:	ldr	r1, [pc, #1268]	; 1452c <_start@@Base+0xc10>
   14034:	mov	r0, fp
   14038:	bl	12464 <fprintf@plt>
   1403c:	b	13c88 <_start@@Base+0x36c>
   14040:	add	r1, sp, #72	; 0x48
   14044:	ldr	r0, [pc, #1204]	; 14500 <_start@@Base+0xbe4>
   14048:	bl	124ac <coda_cursor_read_char@plt>
   1404c:	cmp	r0, #0
   14050:	bne	14414 <_start@@Base+0xaf8>
   14054:	ldr	r3, [pc, #1192]	; 14504 <_start@@Base+0xbe8>
   14058:	ldr	r3, [r3]
   1405c:	cmp	r3, #0
   14060:	beq	143fc <_start@@Base+0xae0>
   14064:	ldrb	r2, [sp, #72]	; 0x48
   14068:	ldr	r1, [pc, #1216]	; 14530 <_start@@Base+0xc14>
   1406c:	mov	r0, fp
   14070:	bl	12464 <fprintf@plt>
   14074:	b	13c88 <_start@@Base+0x36c>
   14078:	add	r1, sp, #72	; 0x48
   1407c:	ldr	r0, [pc, #1148]	; 14500 <_start@@Base+0xbe4>
   14080:	bl	1244c <coda_cursor_read_double@plt>
   14084:	cmp	r0, #0
   14088:	bne	14434 <_start@@Base+0xb18>
   1408c:	ldr	r3, [sp, #60]	; 0x3c
   14090:	cmp	r3, #8
   14094:	ldrd	r2, [sp, #72]	; 0x48
   14098:	bne	14030 <_start@@Base+0x714>
   1409c:	ldr	r1, [pc, #1168]	; 14534 <_start@@Base+0xc18>
   140a0:	mov	r0, fp
   140a4:	bl	12464 <fprintf@plt>
   140a8:	b	13c88 <_start@@Base+0x36c>
   140ac:	add	r1, sp, #72	; 0x48
   140b0:	ldr	r0, [pc, #1096]	; 14500 <_start@@Base+0xbe4>
   140b4:	bl	125b4 <coda_cursor_get_bit_size@plt>
   140b8:	cmp	r0, #0
   140bc:	bne	1440c <_start@@Base+0xaf0>
   140c0:	ldrd	r4, [sp, #72]	; 0x48
   140c4:	mov	r3, #0
   140c8:	and	r2, r4, #7
   140cc:	orrs	r3, r2, r3
   140d0:	lsr	r6, r4, #3
   140d4:	movne	r3, #1
   140d8:	moveq	r3, #0
   140dc:	orr	r6, r6, r5, lsl #29
   140e0:	adds	r6, r6, r3
   140e4:	asr	r7, r5, #3
   140e8:	mov	r0, r6
   140ec:	adc	r7, r7, #0
   140f0:	bl	123d4 <malloc@plt>
   140f4:	subs	r9, r0, #0
   140f8:	beq	144cc <_start@@Base+0xbb0>
   140fc:	strd	r4, [sp]
   14100:	mov	r2, #0
   14104:	mov	r3, #0
   14108:	mov	r1, r9
   1410c:	ldr	r0, [pc, #1004]	; 14500 <_start@@Base+0xbe4>
   14110:	bl	12644 <coda_cursor_read_bits@plt>
   14114:	cmp	r0, #0
   14118:	bne	14444 <_start@@Base+0xb28>
   1411c:	cmp	r6, #1
   14120:	sbcs	r3, r7, #0
   14124:	blt	14360 <_start@@Base+0xa44>
   14128:	ldr	sl, [pc, #1032]	; 14538 <_start@@Base+0xc1c>
   1412c:	sub	r8, r9, #1
   14130:	mov	r4, #0
   14134:	mov	r5, #0
   14138:	b	14180 <_start@@Base+0x864>
   1413c:	cmp	r2, #12
   14140:	beq	14300 <_start@@Base+0x9e4>
   14144:	bcc	142e8 <_start@@Base+0x9cc>
   14148:	cmp	r2, #13
   1414c:	beq	142d0 <_start@@Base+0x9b4>
   14150:	cmp	r2, #92	; 0x5c
   14154:	bne	142b4 <_start@@Base+0x998>
   14158:	mov	r3, fp
   1415c:	mov	r2, #2
   14160:	mov	r1, #1
   14164:	ldr	r0, [pc, #976]	; 1453c <_start@@Base+0xc20>
   14168:	bl	12380 <fwrite@plt>
   1416c:	adds	r4, r4, #1
   14170:	adc	r5, r5, #0
   14174:	cmp	r7, r5
   14178:	cmpeq	r6, r4
   1417c:	beq	14360 <_start@@Base+0xa44>
   14180:	ldrb	r2, [r8, #1]!
   14184:	cmp	r2, #10
   14188:	beq	14348 <_start@@Base+0xa2c>
   1418c:	bhi	1413c <_start@@Base+0x820>
   14190:	cmp	r2, #8
   14194:	beq	14330 <_start@@Base+0xa14>
   14198:	bhi	14318 <_start@@Base+0x9fc>
   1419c:	cmp	r2, #7
   141a0:	bne	142b4 <_start@@Base+0x998>
   141a4:	mov	r3, fp
   141a8:	mov	r2, #2
   141ac:	mov	r1, #1
   141b0:	ldr	r0, [pc, #904]	; 14540 <_start@@Base+0xc24>
   141b4:	bl	12380 <fwrite@plt>
   141b8:	b	1416c <_start@@Base+0x850>
   141bc:	add	r1, sp, #72	; 0x48
   141c0:	ldr	r0, [pc, #824]	; 14500 <_start@@Base+0xbe4>
   141c4:	bl	122c0 <coda_cursor_read_uint32@plt>
   141c8:	cmp	r0, #0
   141cc:	bne	1444c <_start@@Base+0xb30>
   141d0:	ldr	r2, [sp, #72]	; 0x48
   141d4:	ldr	r1, [pc, #872]	; 14544 <_start@@Base+0xc28>
   141d8:	mov	r0, fp
   141dc:	bl	12464 <fprintf@plt>
   141e0:	b	13c88 <_start@@Base+0x36c>
   141e4:	add	r1, sp, #72	; 0x48
   141e8:	ldr	r0, [pc, #784]	; 14500 <_start@@Base+0xbe4>
   141ec:	bl	125e4 <coda_cursor_read_int32@plt>
   141f0:	cmp	r0, #0
   141f4:	bne	1443c <_start@@Base+0xb20>
   141f8:	ldr	r2, [sp, #72]	; 0x48
   141fc:	ldr	r1, [pc, #836]	; 14548 <_start@@Base+0xc2c>
   14200:	mov	r0, fp
   14204:	bl	12464 <fprintf@plt>
   14208:	b	13c88 <_start@@Base+0x36c>
   1420c:	add	r1, sp, #64	; 0x40
   14210:	ldr	r0, [pc, #744]	; 14500 <_start@@Base+0xbe4>
   14214:	bl	12440 <coda_cursor_read_uint64@plt>
   14218:	cmp	r0, #0
   1421c:	bne	14454 <_start@@Base+0xb38>
   14220:	ldrd	r0, [sp, #64]	; 0x40
   14224:	add	r2, sp, #72	; 0x48
   14228:	bl	12290 <coda_str64u@plt>
   1422c:	mov	r1, fp
   14230:	add	r0, sp, #72	; 0x48
   14234:	bl	1262c <fputs@plt>
   14238:	b	13c88 <_start@@Base+0x36c>
   1423c:	add	r1, sp, #64	; 0x40
   14240:	ldr	r0, [pc, #696]	; 14500 <_start@@Base+0xbe4>
   14244:	bl	12554 <coda_cursor_read_int64@plt>
   14248:	cmp	r0, #0
   1424c:	bne	1441c <_start@@Base+0xb00>
   14250:	ldrd	r0, [sp, #64]	; 0x40
   14254:	add	r2, sp, #72	; 0x48
   14258:	bl	12650 <coda_str64@plt>
   1425c:	mov	r1, fp
   14260:	add	r0, sp, #72	; 0x48
   14264:	bl	1262c <fputs@plt>
   14268:	b	13c88 <_start@@Base+0x36c>
   1426c:	ldr	r3, [pc, #672]	; 14514 <_start@@Base+0xbf8>
   14270:	ldr	r2, [pc, #724]	; 1454c <_start@@Base+0xc30>
   14274:	ldr	r1, [pc, #668]	; 14518 <_start@@Base+0xbfc>
   14278:	ldr	r0, [pc, #668]	; 1451c <_start@@Base+0xc00>
   1427c:	bl	1265c <__assert_fail@plt>
   14280:	ldr	r0, [pc, #632]	; 14500 <_start@@Base+0xbe4>
   14284:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   14288:	mov	r7, #1
   1428c:	cmp	r0, #0
   14290:	beq	13eb4 <_start@@Base+0x598>
   14294:	bl	196f0 <handle_coda_error@@Base>
   14298:	b	13eac <_start@@Base+0x590>
   1429c:	bl	196f0 <handle_coda_error@@Base>
   142a0:	b	13bf0 <_start@@Base+0x2d4>
   142a4:	bl	196f0 <handle_coda_error@@Base>
   142a8:	b	13ce4 <_start@@Base+0x3c8>
   142ac:	bl	196f0 <handle_coda_error@@Base>
   142b0:	b	13d54 <_start@@Base+0x438>
   142b4:	sub	r3, r2, #32
   142b8:	cmp	r3, #94	; 0x5e
   142bc:	bhi	1437c <_start@@Base+0xa60>
   142c0:	mov	r0, r2
   142c4:	mov	r1, fp
   142c8:	bl	1259c <fputc@plt>
   142cc:	b	1416c <_start@@Base+0x850>
   142d0:	mov	r3, fp
   142d4:	mov	r2, #2
   142d8:	mov	r1, #1
   142dc:	ldr	r0, [pc, #620]	; 14550 <_start@@Base+0xc34>
   142e0:	bl	12380 <fwrite@plt>
   142e4:	b	1416c <_start@@Base+0x850>
   142e8:	mov	r3, fp
   142ec:	mov	r2, #2
   142f0:	mov	r1, #1
   142f4:	ldr	r0, [pc, #600]	; 14554 <_start@@Base+0xc38>
   142f8:	bl	12380 <fwrite@plt>
   142fc:	b	1416c <_start@@Base+0x850>
   14300:	mov	r3, fp
   14304:	mov	r2, #2
   14308:	mov	r1, #1
   1430c:	ldr	r0, [pc, #580]	; 14558 <_start@@Base+0xc3c>
   14310:	bl	12380 <fwrite@plt>
   14314:	b	1416c <_start@@Base+0x850>
   14318:	mov	r3, fp
   1431c:	mov	r2, #2
   14320:	mov	r1, #1
   14324:	ldr	r0, [pc, #560]	; 1455c <_start@@Base+0xc40>
   14328:	bl	12380 <fwrite@plt>
   1432c:	b	1416c <_start@@Base+0x850>
   14330:	mov	r3, fp
   14334:	mov	r2, #2
   14338:	mov	r1, #1
   1433c:	ldr	r0, [pc, #540]	; 14560 <_start@@Base+0xc44>
   14340:	bl	12380 <fwrite@plt>
   14344:	b	1416c <_start@@Base+0x850>
   14348:	mov	r3, fp
   1434c:	mov	r2, #2
   14350:	mov	r1, #1
   14354:	mov	r0, sl
   14358:	bl	12380 <fwrite@plt>
   1435c:	b	1416c <_start@@Base+0x850>
   14360:	mov	r0, r9
   14364:	bl	1229c <free@plt>
   14368:	b	13c88 <_start@@Base+0x36c>
   1436c:	bl	196f0 <handle_coda_error@@Base>
   14370:	b	13d14 <_start@@Base+0x3f8>
   14374:	bl	196f0 <handle_coda_error@@Base>
   14378:	b	14010 <_start@@Base+0x6f4>
   1437c:	ldr	r1, [pc, #480]	; 14564 <_start@@Base+0xc48>
   14380:	mov	r0, fp
   14384:	bl	12464 <fprintf@plt>
   14388:	b	1416c <_start@@Base+0x850>
   1438c:	mov	r1, fp
   14390:	mov	r0, r4
   14394:	bl	1262c <fputs@plt>
   14398:	b	13c80 <_start@@Base+0x364>
   1439c:	vldr	d0, [sp, #64]	; 0x40
   143a0:	bl	12458 <coda_isNaN@plt>
   143a4:	cmp	r0, #0
   143a8:	beq	1446c <_start@@Base+0xb50>
   143ac:	ldr	lr, [pc, #436]	; 14568 <_start@@Base+0xc4c>
   143b0:	add	r3, sp, #72	; 0x48
   143b4:	mov	ip, r3
   143b8:	str	r3, [sp, #24]
   143bc:	ldm	lr!, {r0, r1, r2, r3}
   143c0:	stmia	ip!, {r0, r1, r2, r3}
   143c4:	ldm	lr, {r0, r1, r2}
   143c8:	lsr	r3, r2, #16
   143cc:	stmia	ip!, {r0, r1}
   143d0:	strh	r2, [ip], #2
   143d4:	strb	r3, [ip]
   143d8:	ldr	r3, [pc, #292]	; 14504 <_start@@Base+0xbe8>
   143dc:	ldr	r3, [r3]
   143e0:	cmp	r3, #0
   143e4:	beq	1445c <_start@@Base+0xb40>
   143e8:	ldr	r2, [sp, #24]
   143ec:	ldr	r1, [pc, #276]	; 14508 <_start@@Base+0xbec>
   143f0:	mov	r0, fp
   143f4:	bl	12464 <fprintf@plt>
   143f8:	b	13c88 <_start@@Base+0x36c>
   143fc:	mov	r1, fp
   14400:	ldrb	r0, [sp, #72]	; 0x48
   14404:	bl	1259c <fputc@plt>
   14408:	b	13c88 <_start@@Base+0x36c>
   1440c:	bl	196f0 <handle_coda_error@@Base>
   14410:	b	140c0 <_start@@Base+0x7a4>
   14414:	bl	196f0 <handle_coda_error@@Base>
   14418:	b	14054 <_start@@Base+0x738>
   1441c:	bl	196f0 <handle_coda_error@@Base>
   14420:	b	14250 <_start@@Base+0x934>
   14424:	bl	196f0 <handle_coda_error@@Base>
   14428:	b	13c60 <_start@@Base+0x344>
   1442c:	bl	196f0 <handle_coda_error@@Base>
   14430:	b	13c30 <_start@@Base+0x314>
   14434:	bl	196f0 <handle_coda_error@@Base>
   14438:	b	1408c <_start@@Base+0x770>
   1443c:	bl	196f0 <handle_coda_error@@Base>
   14440:	b	141f8 <_start@@Base+0x8dc>
   14444:	bl	196f0 <handle_coda_error@@Base>
   14448:	b	1411c <_start@@Base+0x800>
   1444c:	bl	196f0 <handle_coda_error@@Base>
   14450:	b	141d0 <_start@@Base+0x8b4>
   14454:	bl	196f0 <handle_coda_error@@Base>
   14458:	b	14220 <_start@@Base+0x904>
   1445c:	ldr	r0, [sp, #24]
   14460:	mov	r1, fp
   14464:	bl	1262c <fputs@plt>
   14468:	b	13c88 <_start@@Base+0x36c>
   1446c:	vldr	d0, [sp, #64]	; 0x40
   14470:	bl	122fc <coda_isInf@plt>
   14474:	cmp	r0, #0
   14478:	bne	143ac <_start@@Base+0xa90>
   1447c:	add	r3, sp, #72	; 0x48
   14480:	mov	r1, r3
   14484:	ldr	r0, [pc, #224]	; 1456c <_start@@Base+0xc50>
   14488:	vldr	d0, [sp, #64]	; 0x40
   1448c:	str	r3, [sp, #24]
   14490:	bl	12278 <coda_time_double_to_string@plt>
   14494:	cmp	r0, #0
   14498:	beq	143d8 <_start@@Base+0xabc>
   1449c:	bl	196f0 <handle_coda_error@@Base>
   144a0:	b	143d8 <_start@@Base+0xabc>
   144a4:	ldr	r2, [sp, #72]	; 0x48
   144a8:	mov	r3, #126	; 0x7e
   144ac:	add	r2, r2, #1
   144b0:	str	r3, [sp]
   144b4:	ldr	r1, [pc, #180]	; 14570 <_start@@Base+0xc54>
   144b8:	ldr	r3, [pc, #88]	; 14518 <_start@@Base+0xbfc>
   144bc:	mvn	r0, #0
   144c0:	bl	12254 <coda_set_error@plt>
   144c4:	bl	196f0 <handle_coda_error@@Base>
   144c8:	b	13c44 <_start@@Base+0x328>
   144cc:	mov	r3, #163	; 0xa3
   144d0:	str	r3, [sp]
   144d4:	mov	r2, r6
   144d8:	ldr	r3, [pc, #56]	; 14518 <_start@@Base+0xbfc>
   144dc:	ldr	r1, [pc, #140]	; 14570 <_start@@Base+0xc54>
   144e0:	mvn	r0, #0
   144e4:	bl	12254 <coda_set_error@plt>
   144e8:	bl	196f0 <handle_coda_error@@Base>
   144ec:	ldrd	r4, [sp, #72]	; 0x48
   144f0:	b	140fc <_start@@Base+0x7e0>
   144f4:	strdeq	ip, [r2], -r0
   144f8:	andeq	sp, r2, r8, lsr #1
   144fc:	strheq	sp, [r2], -r8
   14500:	andeq	ip, r2, r0, lsl #5
   14504:	andeq	sp, r2, ip, lsr #4
   14508:	andeq	r9, r1, ip, asr sl
   1450c:	muleq	r2, ip, r0
   14510:			; <UNDEFINED> instruction: 0x00019abc
   14514:	andeq	r9, r1, ip, lsr #19
   14518:	ldrdeq	r9, [r1], -r0
   1451c:	andeq	r9, r1, ip, ror #27
   14520:	strdeq	ip, [r2], -r4
   14524:	andeq	r9, r1, r0, asr #19
   14528:	andeq	ip, r2, r4, ror #3
   1452c:	muleq	r1, r8, sl
   14530:	andeq	r9, r1, r8, asr #19
   14534:	muleq	r1, r0, sl
   14538:	andeq	r9, r1, r0, ror sl
   1453c:	andeq	r9, r1, r0, lsl #21
   14540:	andeq	r9, r1, r4, ror #20
   14544:	andeq	r9, r1, ip, lsl #21
   14548:	andeq	sl, r1, r8, asr #32
   1454c:	andeq	r0, r0, r6, lsr #2
   14550:	andeq	r9, r1, ip, ror sl
   14554:	andeq	r9, r1, r4, ror sl
   14558:	andeq	r9, r1, r8, ror sl
   1455c:	andeq	r9, r1, ip, ror #20
   14560:	andeq	r9, r1, r8, ror #20
   14564:	andeq	r9, r1, r4, lsl #21
   14568:	andeq	r9, r1, r4, asr #21
   1456c:	andeq	r9, r1, r0, lsr #21
   14570:	andeq	r9, r1, r4, lsr #20

00014574 <export_data_element_to_ascii@@Base>:
   14574:	ldr	r3, [pc, #172]	; 14628 <export_data_element_to_ascii@@Base+0xb4>
   14578:	push	{r4, lr}
   1457c:	ldr	r2, [r3]
   14580:	cmp	r2, #0
   14584:	beq	145e4 <export_data_element_to_ascii@@Base+0x70>
   14588:	mov	r2, #0
   1458c:	str	r2, [r3]
   14590:	ldr	r3, [pc, #148]	; 1462c <export_data_element_to_ascii@@Base+0xb8>
   14594:	ldr	r3, [r3]
   14598:	cmp	r3, #0
   1459c:	bne	14604 <export_data_element_to_ascii@@Base+0x90>
   145a0:	ldr	r2, [pc, #136]	; 14630 <export_data_element_to_ascii@@Base+0xbc>
   145a4:	ldr	r3, [r2]
   145a8:	cmp	r3, #0
   145ac:	ble	145c8 <export_data_element_to_ascii@@Base+0x54>
   145b0:	add	r3, r3, #37	; 0x25
   145b4:	lsl	r3, r3, #3
   145b8:	add	r2, r2, r3
   145bc:	ldrd	r2, [r2]
   145c0:	orrs	r3, r2, r3
   145c4:	popeq	{r4, pc}
   145c8:	ldr	r1, [pc, #100]	; 14634 <export_data_element_to_ascii@@Base+0xc0>
   145cc:	mov	r3, #0
   145d0:	mov	r2, r3
   145d4:	ldr	r0, [r1]
   145d8:	pop	{r4, lr}
   145dc:	mov	r1, r3
   145e0:	b	13a44 <_start@@Base+0x128>
   145e4:	ldr	r3, [pc, #72]	; 14634 <export_data_element_to_ascii@@Base+0xc0>
   145e8:	mov	r0, #10
   145ec:	ldr	r1, [r3]
   145f0:	bl	1259c <fputc@plt>
   145f4:	ldr	r3, [pc, #48]	; 1462c <export_data_element_to_ascii@@Base+0xb8>
   145f8:	ldr	r3, [r3]
   145fc:	cmp	r3, #0
   14600:	beq	145a0 <export_data_element_to_ascii@@Base+0x2c>
   14604:	ldr	r4, [pc, #40]	; 14634 <export_data_element_to_ascii@@Base+0xc0>
   14608:	mov	r2, #0
   1460c:	mov	r1, #2
   14610:	ldr	r0, [r4]
   14614:	bl	17aa4 <print_full_field_name@@Base>
   14618:	ldr	r1, [r4]
   1461c:	mov	r0, #10
   14620:	bl	1259c <fputc@plt>
   14624:	b	145a0 <export_data_element_to_ascii@@Base+0x2c>
   14628:	andeq	ip, r2, r8, lsr #3
   1462c:	andeq	sp, r2, r8, lsr #4
   14630:	strheq	sp, [r2], -r8
   14634:	muleq	r2, r8, r0
   14638:	push	{r0, r1, r2, r3}
   1463c:	ldr	r1, [pc, #44]	; 14670 <export_data_element_to_ascii@@Base+0xfc>
   14640:	push	{lr}		; (str lr, [sp, #-4]!)
   14644:	sub	sp, sp, #12
   14648:	add	r3, sp, #20
   1464c:	mov	r2, r3
   14650:	ldr	r0, [r1]
   14654:	ldr	r1, [sp, #16]
   14658:	str	r3, [sp, #4]
   1465c:	bl	12560 <vfprintf@plt>
   14660:	add	sp, sp, #12
   14664:	pop	{lr}		; (ldr lr, [sp], #4)
   14668:	add	sp, sp, #16
   1466c:	bx	lr
   14670:	muleq	r2, r8, r0
   14674:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14678:	subs	r4, r1, #0
   1467c:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14680:	mov	fp, r0
   14684:	ldr	r8, [pc, #220]	; 14768 <export_data_element_to_ascii@@Base+0x1f4>
   14688:	ldr	sl, [pc, #220]	; 1476c <export_data_element_to_ascii@@Base+0x1f8>
   1468c:	ldr	r9, [pc, #220]	; 14770 <export_data_element_to_ascii@@Base+0x1fc>
   14690:	ldr	r7, [pc, #220]	; 14774 <export_data_element_to_ascii@@Base+0x200>
   14694:	ldr	r6, [pc, #220]	; 14778 <export_data_element_to_ascii@@Base+0x204>
   14698:	ldr	r5, [pc, #220]	; 1477c <export_data_element_to_ascii@@Base+0x208>
   1469c:	add	r4, r0, r4
   146a0:	b	146d0 <export_data_element_to_ascii@@Base+0x15c>
   146a4:	cmp	r1, #12
   146a8:	beq	1475c <export_data_element_to_ascii@@Base+0x1e8>
   146ac:	bcc	14750 <export_data_element_to_ascii@@Base+0x1dc>
   146b0:	cmp	r1, #13
   146b4:	beq	14744 <export_data_element_to_ascii@@Base+0x1d0>
   146b8:	cmp	r1, #92	; 0x5c
   146bc:	bne	1472c <export_data_element_to_ascii@@Base+0x1b8>
   146c0:	ldr	r0, [pc, #184]	; 14780 <export_data_element_to_ascii@@Base+0x20c>
   146c4:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   146c8:	cmp	fp, r4
   146cc:	beq	14704 <export_data_element_to_ascii@@Base+0x190>
   146d0:	ldrb	r1, [fp], #1
   146d4:	cmp	r1, #10
   146d8:	beq	14708 <export_data_element_to_ascii@@Base+0x194>
   146dc:	bhi	146a4 <export_data_element_to_ascii@@Base+0x130>
   146e0:	cmp	r1, #8
   146e4:	beq	14720 <export_data_element_to_ascii@@Base+0x1ac>
   146e8:	bhi	14714 <export_data_element_to_ascii@@Base+0x1a0>
   146ec:	cmp	r1, #7
   146f0:	bne	1472c <export_data_element_to_ascii@@Base+0x1b8>
   146f4:	ldr	r0, [pc, #136]	; 14784 <export_data_element_to_ascii@@Base+0x210>
   146f8:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   146fc:	cmp	fp, r4
   14700:	bne	146d0 <export_data_element_to_ascii@@Base+0x15c>
   14704:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14708:	mov	r0, r8
   1470c:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14710:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   14714:	ldr	r0, [pc, #108]	; 14788 <export_data_element_to_ascii@@Base+0x214>
   14718:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   1471c:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   14720:	ldr	r0, [pc, #100]	; 1478c <export_data_element_to_ascii@@Base+0x218>
   14724:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14728:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   1472c:	sub	r3, r1, #32
   14730:	cmp	r3, #94	; 0x5e
   14734:	movls	r0, r9
   14738:	movhi	r0, sl
   1473c:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14740:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   14744:	mov	r0, r5
   14748:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   1474c:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   14750:	mov	r0, r6
   14754:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14758:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   1475c:	mov	r0, r7
   14760:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14764:	b	146c8 <export_data_element_to_ascii@@Base+0x154>
   14768:	andeq	r9, r1, r0, ror sl
   1476c:	andeq	r9, r1, r4, lsl #21
   14770:	strdeq	r9, [r1], -r4
   14774:	andeq	r9, r1, r8, ror sl
   14778:	andeq	r9, r1, r4, ror sl
   1477c:	andeq	r9, r1, ip, ror sl
   14780:	andeq	r9, r1, r0, lsl #21
   14784:	andeq	r9, r1, r4, ror #20
   14788:	andeq	r9, r1, ip, ror #20
   1478c:	andeq	r9, r1, r8, ror #20
   14790:	push	{r0, r1, r2, r3}
   14794:	ldr	r3, [pc, #124]	; 14818 <export_data_element_to_ascii@@Base+0x2a4>
   14798:	push	{r4, r5, r6, r7, r8, lr}
   1479c:	sub	sp, sp, #8
   147a0:	ldr	r4, [r3]
   147a4:	cmp	r4, #0
   147a8:	blt	14804 <export_data_element_to_ascii@@Base+0x290>
   147ac:	ldr	r5, [pc, #104]	; 1481c <export_data_element_to_ascii@@Base+0x2a8>
   147b0:	beq	147dc <export_data_element_to_ascii@@Base+0x268>
   147b4:	ldr	r8, [pc, #100]	; 14820 <export_data_element_to_ascii@@Base+0x2ac>
   147b8:	mov	r7, #2
   147bc:	mov	r6, #1
   147c0:	ldr	r3, [r5]
   147c4:	mov	r2, r7
   147c8:	mov	r1, r6
   147cc:	mov	r0, r8
   147d0:	bl	12380 <fwrite@plt>
   147d4:	subs	r4, r4, #1
   147d8:	bne	147c0 <export_data_element_to_ascii@@Base+0x24c>
   147dc:	add	r3, sp, #36	; 0x24
   147e0:	ldr	r0, [r5]
   147e4:	mov	r2, r3
   147e8:	ldr	r1, [sp, #32]
   147ec:	str	r3, [sp, #4]
   147f0:	bl	12560 <vfprintf@plt>
   147f4:	add	sp, sp, #8
   147f8:	pop	{r4, r5, r6, r7, r8, lr}
   147fc:	add	sp, sp, #16
   14800:	bx	lr
   14804:	ldr	r3, [pc, #24]	; 14824 <export_data_element_to_ascii@@Base+0x2b0>
   14808:	mov	r2, #44	; 0x2c
   1480c:	ldr	r1, [pc, #20]	; 14828 <export_data_element_to_ascii@@Base+0x2b4>
   14810:	ldr	r0, [pc, #20]	; 1482c <export_data_element_to_ascii@@Base+0x2b8>
   14814:	bl	1265c <__assert_fail@plt>
   14818:	andeq	ip, r2, r4, asr #3
   1481c:	muleq	r2, r8, r0
   14820:	ldrdeq	r9, [r1], -ip
   14824:	andeq	r9, r1, r0, ror #21
   14828:	strdeq	r9, [r1], -r8
   1482c:	andeq	r9, r1, ip, asr #22
   14830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14834:	sub	sp, sp, #636	; 0x27c
   14838:	mov	r6, r1
   1483c:	add	r1, sp, #32
   14840:	mov	r5, r0
   14844:	bl	12320 <coda_cursor_has_attributes@plt>
   14848:	cmp	r0, #0
   1484c:	bne	14d18 <export_data_element_to_ascii@@Base+0x7a4>
   14850:	ldr	r3, [sp, #32]
   14854:	cmp	r3, #0
   14858:	bne	14ccc <export_data_element_to_ascii@@Base+0x758>
   1485c:	add	r1, sp, #28
   14860:	mov	r0, r5
   14864:	bl	1232c <coda_cursor_get_type_class@plt>
   14868:	cmp	r0, #0
   1486c:	bne	14cc4 <export_data_element_to_ascii@@Base+0x750>
   14870:	ldr	r3, [sp, #28]
   14874:	cmp	r3, #6
   14878:	ldrls	pc, [pc, r3, lsl #2]
   1487c:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   14880:			; <UNDEFINED> instruction: 0x00014bbc
   14884:			; <UNDEFINED> instruction: 0x000149b4
   14888:	andeq	r4, r1, r4, lsr r9
   1488c:	andeq	r4, r1, r4, lsr r9
   14890:	andeq	r4, r1, r4, lsr r9
   14894:	andeq	r4, r1, r4, lsr r9
   14898:	andeq	r4, r1, r4, ror #17
   1489c:	mov	r0, r5
   148a0:	add	r1, sp, #80	; 0x50
   148a4:	bl	1244c <coda_cursor_read_double@plt>
   148a8:	cmp	r0, #0
   148ac:	bne	15310 <export_data_element_to_ascii@@Base+0xd9c>
   148b0:	vldr	d0, [sp, #80]	; 0x50
   148b4:	bl	12458 <coda_isNaN@plt>
   148b8:	cmp	r0, #0
   148bc:	bne	148d0 <export_data_element_to_ascii@@Base+0x35c>
   148c0:	vldr	d0, [sp, #80]	; 0x50
   148c4:	bl	122fc <coda_isInf@plt>
   148c8:	cmp	r0, #0
   148cc:	beq	15368 <export_data_element_to_ascii@@Base+0xdf4>
   148d0:	ldrd	r2, [sp, #80]	; 0x50
   148d4:	ldr	r0, [pc, #2840]	; 153f4 <export_data_element_to_ascii@@Base+0xe80>
   148d8:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   148dc:	add	sp, sp, #636	; 0x27c
   148e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148e4:	add	r1, sp, #56	; 0x38
   148e8:	mov	r0, r5
   148ec:	bl	12368 <coda_cursor_get_special_type@plt>
   148f0:	cmp	r0, #0
   148f4:	bne	14ddc <export_data_element_to_ascii@@Base+0x868>
   148f8:	ldr	r0, [sp, #56]	; 0x38
   148fc:	cmp	r0, #0
   14900:	bne	14da8 <export_data_element_to_ascii@@Base+0x834>
   14904:	bl	121d0 <coda_type_get_special_type_name@plt>
   14908:	mov	r1, r0
   1490c:	ldr	r0, [pc, #2788]	; 153f8 <export_data_element_to_ascii@@Base+0xe84>
   14910:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14914:	ldr	r3, [sp, #56]	; 0x38
   14918:	cmp	r3, #3
   1491c:	ldrls	pc, [pc, r3, lsl #2]
   14920:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   14924:	andeq	r5, r1, r8
   14928:	andeq	r5, r1, r4, asr #32
   1492c:	muleq	r1, ip, r8
   14930:	andeq	r5, r1, r4, lsl r0
   14934:	add	r1, sp, #56	; 0x38
   14938:	mov	r0, r5
   1493c:	bl	1253c <coda_cursor_has_ascii_content@plt>
   14940:	cmp	r0, #0
   14944:	bne	14de4 <export_data_element_to_ascii@@Base+0x870>
   14948:	ldr	r3, [sp, #56]	; 0x38
   1494c:	cmp	r3, #0
   14950:	bne	14d30 <export_data_element_to_ascii@@Base+0x7bc>
   14954:	add	r1, sp, #48	; 0x30
   14958:	mov	r0, r5
   1495c:	bl	123c8 <coda_cursor_get_read_type@plt>
   14960:	cmp	r0, #0
   14964:	bne	14d28 <export_data_element_to_ascii@@Base+0x7b4>
   14968:	ldr	r3, [sp, #48]	; 0x30
   1496c:	add	r3, r3, #1
   14970:	cmp	r3, #13
   14974:	ldrls	pc, [pc, r3, lsl #2]
   14978:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   1497c:	andeq	r5, r1, r8, ror #3
   14980:	andeq	r5, r1, r8, rrx
   14984:	andeq	r5, r1, ip, lsl #1
   14988:	andeq	r5, r1, r8, rrx
   1498c:	andeq	r5, r1, ip, lsl #1
   14990:	andeq	r5, r1, r8, rrx
   14994:	andeq	r5, r1, ip, lsl #1
   14998:	andeq	r5, r1, r0, ror #1
   1499c:	andeq	r5, r1, r8, lsl #4
   149a0:	strheq	r5, [r1], -r0
   149a4:	strheq	r5, [r1], -r0
   149a8:	andeq	r5, r1, r8, ror #3
   149ac:	andeq	r5, r1, r8, ror #3
   149b0:	andeq	r5, r1, r0, lsl r1
   149b4:	add	r2, sp, #80	; 0x50
   149b8:	add	r1, sp, #44	; 0x2c
   149bc:	mov	r0, r5
   149c0:	bl	12530 <coda_cursor_get_array_dim@plt>
   149c4:	cmp	r0, #0
   149c8:	bne	14da0 <export_data_element_to_ascii@@Base+0x82c>
   149cc:	ldr	r0, [sp, #44]	; 0x2c
   149d0:	cmp	r0, #0
   149d4:	blt	148dc <export_data_element_to_ascii@@Base+0x368>
   149d8:	beq	152fc <export_data_element_to_ascii@@Base+0xd88>
   149dc:	add	r3, sp, #80	; 0x50
   149e0:	add	r0, r3, r0, lsl #2
   149e4:	add	r2, sp, #112	; 0x70
   149e8:	mov	r9, #1
   149ec:	mov	ip, #0
   149f0:	ldr	r1, [r3], #4
   149f4:	str	ip, [r2], #4
   149f8:	cmp	r0, r3
   149fc:	mul	r9, r1, r9
   14a00:	bne	149f0 <export_data_element_to_ascii@@Base+0x47c>
   14a04:	cmp	r9, #0
   14a08:	subgt	r3, r9, #1
   14a0c:	strgt	r3, [sp, #20]
   14a10:	ble	148dc <export_data_element_to_ascii@@Base+0x368>
   14a14:	mov	r0, r5
   14a18:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   14a1c:	cmp	r0, #0
   14a20:	bne	152f4 <export_data_element_to_ascii@@Base+0xd80>
   14a24:	ldr	r3, [pc, #2512]	; 153fc <export_data_element_to_ascii@@Base+0xe88>
   14a28:	ldr	r2, [pc, #2512]	; 15400 <export_data_element_to_ascii@@Base+0xe8c>
   14a2c:	ldr	r4, [pc, #2512]	; 15404 <export_data_element_to_ascii@@Base+0xe90>
   14a30:	ldr	r8, [pc, #2512]	; 15408 <export_data_element_to_ascii@@Base+0xe94>
   14a34:	str	r9, [sp, #8]
   14a38:	mov	sl, #0
   14a3c:	mov	r9, r2
   14a40:	mov	fp, r3
   14a44:	str	r6, [sp, #16]
   14a48:	ldr	r0, [pc, #2492]	; 1540c <export_data_element_to_ascii@@Base+0xe98>
   14a4c:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14a50:	ldr	r3, [sp, #44]	; 0x2c
   14a54:	cmp	r3, #0
   14a58:	addgt	r7, sp, #112	; 0x70
   14a5c:	movgt	r6, #0
   14a60:	bgt	14a74 <export_data_element_to_ascii@@Base+0x500>
   14a64:	b	14aa8 <export_data_element_to_ascii@@Base+0x534>
   14a68:	add	r6, r6, #1
   14a6c:	cmp	r6, r3
   14a70:	bge	14aa8 <export_data_element_to_ascii@@Base+0x534>
   14a74:	ldr	r1, [r7], #4
   14a78:	mov	r0, r8
   14a7c:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14a80:	ldr	r3, [sp, #44]	; 0x2c
   14a84:	sub	r2, r3, #1
   14a88:	cmp	r2, r6
   14a8c:	ble	14a68 <export_data_element_to_ascii@@Base+0x4f4>
   14a90:	ldr	r0, [pc, #2424]	; 15410 <export_data_element_to_ascii@@Base+0xe9c>
   14a94:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14a98:	ldr	r3, [sp, #44]	; 0x2c
   14a9c:	add	r6, r6, #1
   14aa0:	cmp	r6, r3
   14aa4:	blt	14a74 <export_data_element_to_ascii@@Base+0x500>
   14aa8:	ldr	r0, [pc, #2404]	; 15414 <export_data_element_to_ascii@@Base+0xea0>
   14aac:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14ab0:	ldr	r3, [fp]
   14ab4:	cmp	r3, #0
   14ab8:	bne	14df4 <export_data_element_to_ascii@@Base+0x880>
   14abc:	ldr	r0, [pc, #2388]	; 15418 <export_data_element_to_ascii@@Base+0xea4>
   14ac0:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14ac4:	ldr	r2, [r9]
   14ac8:	ldr	r0, [sp, #16]
   14acc:	ldr	r3, [r4]
   14ad0:	cmp	r0, r2
   14ad4:	mov	r1, r0
   14ad8:	movge	r1, #0
   14adc:	movlt	r1, #1
   14ae0:	add	r3, r3, #1
   14ae4:	orrs	r2, r1, r2, lsr #31
   14ae8:	str	r3, [r4]
   14aec:	beq	14e5c <export_data_element_to_ascii@@Base+0x8e8>
   14af0:	add	r1, r0, #1
   14af4:	mov	r0, r5
   14af8:	bl	14830 <export_data_element_to_ascii@@Base+0x2bc>
   14afc:	ldr	r3, [r4]
   14b00:	ldr	r0, [sp, #44]	; 0x2c
   14b04:	sub	r3, r3, #1
   14b08:	subs	r1, r0, #1
   14b0c:	str	r3, [r4]
   14b10:	bmi	14b80 <export_data_element_to_ascii@@Base+0x60c>
   14b14:	add	r3, sp, #632	; 0x278
   14b18:	add	r2, r3, r1, lsl #2
   14b1c:	ldr	r3, [r2, #-520]	; 0xfffffdf8
   14b20:	ldr	ip, [r2, #-552]	; 0xfffffdd8
   14b24:	add	r3, r3, #1
   14b28:	cmp	ip, r3
   14b2c:	str	r3, [r2, #-520]	; 0xfffffdf8
   14b30:	bne	14b80 <export_data_element_to_ascii@@Base+0x60c>
   14b34:	sub	r0, r0, #-1073741822	; 0xc0000002
   14b38:	add	r3, sp, #632	; 0x278
   14b3c:	lsl	r0, r0, #2
   14b40:	add	r2, r3, r0
   14b44:	add	r3, sp, #80	; 0x50
   14b48:	mov	lr, #0
   14b4c:	sub	r2, r2, #516	; 0x204
   14b50:	add	r0, r3, r0
   14b54:	b	14b70 <export_data_element_to_ascii@@Base+0x5fc>
   14b58:	ldr	r3, [r2]
   14b5c:	ldr	ip, [r0], #-4
   14b60:	add	r3, r3, #1
   14b64:	cmp	r3, ip
   14b68:	str	r3, [r2]
   14b6c:	bne	14b80 <export_data_element_to_ascii@@Base+0x60c>
   14b70:	sub	r1, r1, #1
   14b74:	cmn	r1, #1
   14b78:	str	lr, [r2], #-4
   14b7c:	bne	14b58 <export_data_element_to_ascii@@Base+0x5e4>
   14b80:	ldr	r3, [sp, #20]
   14b84:	cmp	sl, r3
   14b88:	bge	14b9c <export_data_element_to_ascii@@Base+0x628>
   14b8c:	mov	r0, r5
   14b90:	bl	12470 <coda_cursor_goto_next_array_element@plt>
   14b94:	cmp	r0, #0
   14b98:	bne	14dec <export_data_element_to_ascii@@Base+0x878>
   14b9c:	ldr	r3, [sp, #8]
   14ba0:	add	sl, sl, #1
   14ba4:	cmp	r3, sl
   14ba8:	bgt	14a48 <export_data_element_to_ascii@@Base+0x4d4>
   14bac:	mov	r0, r5
   14bb0:	bl	12404 <coda_cursor_goto_parent@plt>
   14bb4:	add	sp, sp, #636	; 0x27c
   14bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bbc:	add	r1, sp, #36	; 0x24
   14bc0:	mov	r0, r5
   14bc4:	bl	12284 <coda_cursor_get_num_elements@plt>
   14bc8:	cmp	r0, #0
   14bcc:	bne	14d20 <export_data_element_to_ascii@@Base+0x7ac>
   14bd0:	ldr	r3, [sp, #36]	; 0x24
   14bd4:	cmp	r3, #0
   14bd8:	ble	148dc <export_data_element_to_ascii@@Base+0x368>
   14bdc:	add	r1, sp, #40	; 0x28
   14be0:	mov	r0, r5
   14be4:	bl	122e4 <coda_cursor_get_type@plt>
   14be8:	cmp	r0, #0
   14bec:	bne	152ec <export_data_element_to_ascii@@Base+0xd78>
   14bf0:	add	r1, sp, #44	; 0x2c
   14bf4:	ldr	r0, [sp, #40]	; 0x28
   14bf8:	bl	124e8 <coda_type_get_record_union_status@plt>
   14bfc:	cmp	r0, #0
   14c00:	bne	152e4 <export_data_element_to_ascii@@Base+0xd70>
   14c04:	ldr	r3, [sp, #44]	; 0x2c
   14c08:	cmp	r3, #0
   14c0c:	beq	14e78 <export_data_element_to_ascii@@Base+0x904>
   14c10:	add	r1, sp, #48	; 0x30
   14c14:	mov	r0, r5
   14c18:	bl	125d8 <coda_cursor_get_available_union_field_index@plt>
   14c1c:	cmp	r0, #0
   14c20:	bne	15248 <export_data_element_to_ascii@@Base+0xcd4>
   14c24:	add	r2, sp, #56	; 0x38
   14c28:	ldr	r1, [sp, #48]	; 0x30
   14c2c:	ldr	r0, [sp, #40]	; 0x28
   14c30:	bl	12620 <coda_type_get_record_field_name@plt>
   14c34:	cmp	r0, #0
   14c38:	bne	15240 <export_data_element_to_ascii@@Base+0xccc>
   14c3c:	ldr	r1, [sp, #48]	; 0x30
   14c40:	mov	r0, r5
   14c44:	bl	123a4 <coda_cursor_goto_record_field_by_index@plt>
   14c48:	cmp	r0, #0
   14c4c:	bne	152b8 <export_data_element_to_ascii@@Base+0xd44>
   14c50:	ldr	r1, [sp, #56]	; 0x38
   14c54:	ldr	r0, [pc, #1984]	; 1541c <export_data_element_to_ascii@@Base+0xea8>
   14c58:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14c5c:	ldr	r3, [pc, #1944]	; 153fc <export_data_element_to_ascii@@Base+0xe88>
   14c60:	ldr	r3, [r3]
   14c64:	cmp	r3, #0
   14c68:	bne	15250 <export_data_element_to_ascii@@Base+0xcdc>
   14c6c:	ldr	r0, [pc, #1956]	; 15418 <export_data_element_to_ascii@@Base+0xea4>
   14c70:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14c74:	ldr	r3, [pc, #1924]	; 15400 <export_data_element_to_ascii@@Base+0xe8c>
   14c78:	ldr	r4, [pc, #1924]	; 15404 <export_data_element_to_ascii@@Base+0xe90>
   14c7c:	ldr	r2, [r3]
   14c80:	ldr	r3, [r4]
   14c84:	cmp	r6, r2
   14c88:	movge	r1, #0
   14c8c:	movlt	r1, #1
   14c90:	add	r3, r3, #1
   14c94:	str	r3, [r4]
   14c98:	orrs	r2, r1, r2, lsr #31
   14c9c:	beq	152c0 <export_data_element_to_ascii@@Base+0xd4c>
   14ca0:	add	r1, r6, #1
   14ca4:	mov	r0, r5
   14ca8:	bl	14830 <export_data_element_to_ascii@@Base+0x2bc>
   14cac:	ldr	r3, [r4]
   14cb0:	mov	r0, r5
   14cb4:	sub	r3, r3, #1
   14cb8:	str	r3, [r4]
   14cbc:	bl	12404 <coda_cursor_goto_parent@plt>
   14cc0:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   14cc4:	bl	196f0 <handle_coda_error@@Base>
   14cc8:	b	14870 <export_data_element_to_ascii@@Base+0x2fc>
   14ccc:	mov	r0, r5
   14cd0:	bl	124a0 <coda_cursor_goto_attributes@plt>
   14cd4:	cmp	r0, #0
   14cd8:	bne	14e68 <export_data_element_to_ascii@@Base+0x8f4>
   14cdc:	ldr	r4, [pc, #1824]	; 15404 <export_data_element_to_ascii@@Base+0xe90>
   14ce0:	ldr	r0, [pc, #1848]	; 15420 <export_data_element_to_ascii@@Base+0xeac>
   14ce4:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14ce8:	ldr	r3, [r4]
   14cec:	mov	r0, r5
   14cf0:	add	r3, r3, #1
   14cf4:	mov	r1, r6
   14cf8:	str	r3, [r4]
   14cfc:	bl	14830 <export_data_element_to_ascii@@Base+0x2bc>
   14d00:	ldr	r3, [r4]
   14d04:	mov	r0, r5
   14d08:	sub	r3, r3, #1
   14d0c:	str	r3, [r4]
   14d10:	bl	12404 <coda_cursor_goto_parent@plt>
   14d14:	b	1485c <export_data_element_to_ascii@@Base+0x2e8>
   14d18:	bl	196f0 <handle_coda_error@@Base>
   14d1c:	b	14850 <export_data_element_to_ascii@@Base+0x2dc>
   14d20:	bl	196f0 <handle_coda_error@@Base>
   14d24:	b	14bd0 <export_data_element_to_ascii@@Base+0x65c>
   14d28:	bl	196f0 <handle_coda_error@@Base>
   14d2c:	b	14968 <export_data_element_to_ascii@@Base+0x3f4>
   14d30:	add	r1, sp, #112	; 0x70
   14d34:	mov	r0, r5
   14d38:	bl	12434 <coda_cursor_get_string_length@plt>
   14d3c:	cmp	r0, #0
   14d40:	bne	152cc <export_data_element_to_ascii@@Base+0xd58>
   14d44:	ldr	r0, [sp, #112]	; 0x70
   14d48:	add	r0, r0, #1
   14d4c:	bl	123d4 <malloc@plt>
   14d50:	subs	r4, r0, #0
   14d54:	beq	15394 <export_data_element_to_ascii@@Base+0xe20>
   14d58:	ldr	r2, [sp, #112]	; 0x70
   14d5c:	mov	r1, r4
   14d60:	add	r2, r2, #1
   14d64:	mov	r0, r5
   14d68:	bl	123f8 <coda_cursor_read_string@plt>
   14d6c:	cmp	r0, #0
   14d70:	bne	152dc <export_data_element_to_ascii@@Base+0xd68>
   14d74:	ldr	r0, [pc, #1704]	; 15424 <export_data_element_to_ascii@@Base+0xeb0>
   14d78:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14d7c:	ldr	r1, [sp, #112]	; 0x70
   14d80:	mov	r0, r4
   14d84:	bl	14674 <export_data_element_to_ascii@@Base+0x100>
   14d88:	ldr	r1, [sp, #112]	; 0x70
   14d8c:	ldr	r0, [pc, #1684]	; 15428 <export_data_element_to_ascii@@Base+0xeb4>
   14d90:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14d94:	mov	r0, r4
   14d98:	bl	1229c <free@plt>
   14d9c:	b	14954 <export_data_element_to_ascii@@Base+0x3e0>
   14da0:	bl	196f0 <handle_coda_error@@Base>
   14da4:	b	149cc <export_data_element_to_ascii@@Base+0x458>
   14da8:	mov	r2, #520	; 0x208
   14dac:	mov	r1, r5
   14db0:	add	r0, sp, #112	; 0x70
   14db4:	bl	122f0 <memcpy@plt>
   14db8:	add	r0, sp, #112	; 0x70
   14dbc:	bl	125cc <coda_cursor_use_base_type_of_special_type@plt>
   14dc0:	cmp	r0, #0
   14dc4:	bne	152d4 <export_data_element_to_ascii@@Base+0xd60>
   14dc8:	add	r0, sp, #112	; 0x70
   14dcc:	mov	r1, r6
   14dd0:	bl	14830 <export_data_element_to_ascii@@Base+0x2bc>
   14dd4:	ldr	r0, [sp, #56]	; 0x38
   14dd8:	b	14904 <export_data_element_to_ascii@@Base+0x390>
   14ddc:	bl	196f0 <handle_coda_error@@Base>
   14de0:	b	148f8 <export_data_element_to_ascii@@Base+0x384>
   14de4:	bl	196f0 <handle_coda_error@@Base>
   14de8:	b	14948 <export_data_element_to_ascii@@Base+0x3d4>
   14dec:	bl	196f0 <handle_coda_error@@Base>
   14df0:	b	14b9c <export_data_element_to_ascii@@Base+0x628>
   14df4:	add	r1, sp, #48	; 0x30
   14df8:	mov	r0, r5
   14dfc:	bl	125f0 <coda_cursor_get_file_bit_offset@plt>
   14e00:	cmp	r0, #0
   14e04:	bne	14e70 <export_data_element_to_ascii@@Base+0x8fc>
   14e08:	ldrd	r2, [sp, #48]	; 0x30
   14e0c:	cmp	r2, #0
   14e10:	sbcs	r1, r3, #0
   14e14:	blt	14abc <export_data_element_to_ascii@@Base+0x548>
   14e18:	lsr	r0, r2, #3
   14e1c:	orr	r0, r0, r3, lsl #29
   14e20:	asr	r1, r3, #3
   14e24:	add	r2, sp, #56	; 0x38
   14e28:	bl	12650 <coda_str64@plt>
   14e2c:	add	r1, sp, #56	; 0x38
   14e30:	ldr	r0, [pc, #1524]	; 1542c <export_data_element_to_ascii@@Base+0xeb8>
   14e34:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14e38:	ldrd	r2, [sp, #48]	; 0x30
   14e3c:	mov	r1, #0
   14e40:	and	r0, r2, #7
   14e44:	orrs	r1, r0, r1
   14e48:	beq	14abc <export_data_element_to_ascii@@Base+0x548>
   14e4c:	and	r1, r2, #7
   14e50:	ldr	r0, [pc, #1496]	; 15430 <export_data_element_to_ascii@@Base+0xebc>
   14e54:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14e58:	b	14abc <export_data_element_to_ascii@@Base+0x548>
   14e5c:	ldr	r0, [pc, #1488]	; 15434 <export_data_element_to_ascii@@Base+0xec0>
   14e60:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14e64:	b	14afc <export_data_element_to_ascii@@Base+0x588>
   14e68:	bl	196f0 <handle_coda_error@@Base>
   14e6c:	b	14cdc <export_data_element_to_ascii@@Base+0x768>
   14e70:	bl	196f0 <handle_coda_error@@Base>
   14e74:	b	14e08 <export_data_element_to_ascii@@Base+0x894>
   14e78:	mov	r0, r5
   14e7c:	bl	12398 <coda_cursor_goto_first_record_field@plt>
   14e80:	cmp	r0, #0
   14e84:	bne	15238 <export_data_element_to_ascii@@Base+0xcc4>
   14e88:	ldr	r3, [sp, #36]	; 0x24
   14e8c:	mov	r1, #0
   14e90:	cmp	r3, r1
   14e94:	str	r1, [sp, #48]	; 0x30
   14e98:	ble	14bac <export_data_element_to_ascii@@Base+0x638>
   14e9c:	ldr	r3, [pc, #1368]	; 153fc <export_data_element_to_ascii@@Base+0xe88>
   14ea0:	ldr	r2, [pc, #1368]	; 15400 <export_data_element_to_ascii@@Base+0xe8c>
   14ea4:	ldr	r4, [pc, #1368]	; 15404 <export_data_element_to_ascii@@Base+0xe90>
   14ea8:	ldr	r8, [pc, #1388]	; 1541c <export_data_element_to_ascii@@Base+0xea8>
   14eac:	ldr	r7, [pc, #1380]	; 15418 <export_data_element_to_ascii@@Base+0xea4>
   14eb0:	ldr	r9, [pc, #1404]	; 15434 <export_data_element_to_ascii@@Base+0xec0>
   14eb4:	mov	sl, r2
   14eb8:	mov	fp, r3
   14ebc:	b	14f40 <export_data_element_to_ascii@@Base+0x9cc>
   14ec0:	ldr	r1, [sp, #56]	; 0x38
   14ec4:	mov	r0, r8
   14ec8:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14ecc:	ldr	r3, [fp]
   14ed0:	cmp	r3, #0
   14ed4:	bne	14f78 <export_data_element_to_ascii@@Base+0xa04>
   14ed8:	mov	r0, r7
   14edc:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14ee0:	ldr	r2, [sl]
   14ee4:	ldr	r3, [r4]
   14ee8:	cmp	r6, r2
   14eec:	movge	r1, #0
   14ef0:	movlt	r1, #1
   14ef4:	add	r3, r3, #1
   14ef8:	str	r3, [r4]
   14efc:	orrs	r2, r1, r2, lsr #31
   14f00:	beq	14fec <export_data_element_to_ascii@@Base+0xa78>
   14f04:	add	r1, r6, #1
   14f08:	mov	r0, r5
   14f0c:	bl	14830 <export_data_element_to_ascii@@Base+0x2bc>
   14f10:	ldr	r2, [sp, #36]	; 0x24
   14f14:	ldr	r3, [r4]
   14f18:	ldr	r1, [sp, #48]	; 0x30
   14f1c:	sub	r0, r2, #1
   14f20:	sub	r3, r3, #1
   14f24:	cmp	r0, r1
   14f28:	str	r3, [r4]
   14f2c:	bgt	14f5c <export_data_element_to_ascii@@Base+0x9e8>
   14f30:	add	r1, r1, #1
   14f34:	cmp	r1, r2
   14f38:	str	r1, [sp, #48]	; 0x30
   14f3c:	bge	14bac <export_data_element_to_ascii@@Base+0x638>
   14f40:	add	r2, sp, #56	; 0x38
   14f44:	ldr	r0, [sp, #40]	; 0x28
   14f48:	bl	12620 <coda_type_get_record_field_name@plt>
   14f4c:	cmp	r0, #0
   14f50:	beq	14ec0 <export_data_element_to_ascii@@Base+0x94c>
   14f54:	bl	196f0 <handle_coda_error@@Base>
   14f58:	b	14ec0 <export_data_element_to_ascii@@Base+0x94c>
   14f5c:	mov	r0, r5
   14f60:	bl	12590 <coda_cursor_goto_next_record_field@plt>
   14f64:	cmp	r0, #0
   14f68:	bne	14ff8 <export_data_element_to_ascii@@Base+0xa84>
   14f6c:	ldr	r2, [sp, #36]	; 0x24
   14f70:	ldr	r1, [sp, #48]	; 0x30
   14f74:	b	14f30 <export_data_element_to_ascii@@Base+0x9bc>
   14f78:	add	r1, sp, #80	; 0x50
   14f7c:	mov	r0, r5
   14f80:	bl	125f0 <coda_cursor_get_file_bit_offset@plt>
   14f84:	cmp	r0, #0
   14f88:	bne	15000 <export_data_element_to_ascii@@Base+0xa8c>
   14f8c:	ldrd	r2, [sp, #80]	; 0x50
   14f90:	cmp	r2, #0
   14f94:	sbcs	r1, r3, #0
   14f98:	blt	14ed8 <export_data_element_to_ascii@@Base+0x964>
   14f9c:	strd	r2, [sp, #8]
   14fa0:	add	r3, sp, #112	; 0x70
   14fa4:	lsr	r0, r2, #3
   14fa8:	mov	r2, r3
   14fac:	ldr	r3, [sp, #12]
   14fb0:	orr	r0, r0, r3, lsl #29
   14fb4:	asr	r1, r3, #3
   14fb8:	bl	12650 <coda_str64@plt>
   14fbc:	add	r1, sp, #112	; 0x70
   14fc0:	ldr	r0, [pc, #1124]	; 1542c <export_data_element_to_ascii@@Base+0xeb8>
   14fc4:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14fc8:	ldrd	r2, [sp, #80]	; 0x50
   14fcc:	mov	r1, #0
   14fd0:	and	r0, r2, #7
   14fd4:	orrs	r1, r0, r1
   14fd8:	beq	14ed8 <export_data_element_to_ascii@@Base+0x964>
   14fdc:	and	r1, r2, #7
   14fe0:	ldr	r0, [pc, #1096]	; 15430 <export_data_element_to_ascii@@Base+0xebc>
   14fe4:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   14fe8:	b	14ed8 <export_data_element_to_ascii@@Base+0x964>
   14fec:	mov	r0, r9
   14ff0:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   14ff4:	b	14f10 <export_data_element_to_ascii@@Base+0x99c>
   14ff8:	bl	196f0 <handle_coda_error@@Base>
   14ffc:	b	14f6c <export_data_element_to_ascii@@Base+0x9f8>
   15000:	bl	196f0 <handle_coda_error@@Base>
   15004:	b	14f8c <export_data_element_to_ascii@@Base+0xa18>
   15008:	ldr	r0, [pc, #1032]	; 15418 <export_data_element_to_ascii@@Base+0xea4>
   1500c:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15010:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   15014:	mov	r0, r5
   15018:	add	r2, sp, #112	; 0x70
   1501c:	add	r1, sp, #80	; 0x50
   15020:	bl	124f4 <coda_cursor_read_complex_double_split@plt>
   15024:	cmp	r0, #0
   15028:	bne	15308 <export_data_element_to_ascii@@Base+0xd94>
   1502c:	ldrd	r4, [sp, #112]	; 0x70
   15030:	ldrd	r2, [sp, #80]	; 0x50
   15034:	ldr	r0, [pc, #1020]	; 15438 <export_data_element_to_ascii@@Base+0xec4>
   15038:	strd	r4, [sp]
   1503c:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15040:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   15044:	mov	r0, r5
   15048:	add	r1, sp, #112	; 0x70
   1504c:	bl	1244c <coda_cursor_read_double@plt>
   15050:	cmp	r0, #0
   15054:	bne	15318 <export_data_element_to_ascii@@Base+0xda4>
   15058:	ldrd	r2, [sp, #112]	; 0x70
   1505c:	ldr	r0, [pc, #984]	; 1543c <export_data_element_to_ascii@@Base+0xec8>
   15060:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15064:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   15068:	mov	r0, r5
   1506c:	add	r1, sp, #112	; 0x70
   15070:	bl	125e4 <coda_cursor_read_int32@plt>
   15074:	cmp	r0, #0
   15078:	bne	15328 <export_data_element_to_ascii@@Base+0xdb4>
   1507c:	ldr	r1, [sp, #112]	; 0x70
   15080:	ldr	r0, [pc, #952]	; 15440 <export_data_element_to_ascii@@Base+0xecc>
   15084:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   15088:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   1508c:	mov	r0, r5
   15090:	add	r1, sp, #112	; 0x70
   15094:	bl	122c0 <coda_cursor_read_uint32@plt>
   15098:	cmp	r0, #0
   1509c:	bne	15338 <export_data_element_to_ascii@@Base+0xdc4>
   150a0:	ldr	r1, [sp, #112]	; 0x70
   150a4:	ldr	r0, [pc, #920]	; 15444 <export_data_element_to_ascii@@Base+0xed0>
   150a8:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   150ac:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   150b0:	mov	r0, r5
   150b4:	add	r1, sp, #112	; 0x70
   150b8:	bl	1244c <coda_cursor_read_double@plt>
   150bc:	cmp	r0, #0
   150c0:	bne	15330 <export_data_element_to_ascii@@Base+0xdbc>
   150c4:	ldr	r3, [sp, #48]	; 0x30
   150c8:	cmp	r3, #8
   150cc:	ldrd	r2, [sp, #112]	; 0x70
   150d0:	ldreq	r0, [pc, #880]	; 15448 <export_data_element_to_ascii@@Base+0xed4>
   150d4:	ldrne	r0, [pc, #864]	; 1543c <export_data_element_to_ascii@@Base+0xec8>
   150d8:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   150dc:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   150e0:	mov	r0, r5
   150e4:	add	r1, sp, #80	; 0x50
   150e8:	bl	12554 <coda_cursor_read_int64@plt>
   150ec:	cmp	r0, #0
   150f0:	bne	15340 <export_data_element_to_ascii@@Base+0xdcc>
   150f4:	ldrd	r0, [sp, #80]	; 0x50
   150f8:	add	r2, sp, #112	; 0x70
   150fc:	bl	12650 <coda_str64@plt>
   15100:	add	r1, sp, #112	; 0x70
   15104:	ldr	r0, [pc, #832]	; 1544c <export_data_element_to_ascii@@Base+0xed8>
   15108:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   1510c:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   15110:	add	r1, sp, #80	; 0x50
   15114:	mov	r0, r5
   15118:	bl	125b4 <coda_cursor_get_bit_size@plt>
   1511c:	cmp	r0, #0
   15120:	bne	15360 <export_data_element_to_ascii@@Base+0xdec>
   15124:	ldrd	r6, [sp, #80]	; 0x50
   15128:	mov	r1, #0
   1512c:	and	r0, r6, #7
   15130:	orrs	r3, r0, r1
   15134:	lsr	r8, r6, #3
   15138:	movne	r1, #1
   1513c:	moveq	r1, #0
   15140:	orr	r8, r8, r7, lsl #29
   15144:	adds	r8, r8, r1
   15148:	mov	r0, r8
   1514c:	bl	123d4 <malloc@plt>
   15150:	subs	sl, r0, #0
   15154:	beq	153cc <export_data_element_to_ascii@@Base+0xe58>
   15158:	strd	r6, [sp]
   1515c:	mov	r0, r5
   15160:	mov	r2, #0
   15164:	mov	r3, #0
   15168:	mov	r1, sl
   1516c:	bl	12644 <coda_cursor_read_bits@plt>
   15170:	cmp	r0, #0
   15174:	bne	15358 <export_data_element_to_ascii@@Base+0xde4>
   15178:	ldr	r0, [pc, #676]	; 15424 <export_data_element_to_ascii@@Base+0xeb0>
   1517c:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   15180:	mov	r1, r8
   15184:	mov	r0, sl
   15188:	bl	14674 <export_data_element_to_ascii@@Base+0x100>
   1518c:	ldr	r0, [pc, #700]	; 15450 <export_data_element_to_ascii@@Base+0xedc>
   15190:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15194:	ldr	r0, [sp, #80]	; 0x50
   15198:	ldr	r1, [sp, #84]	; 0x54
   1519c:	add	r2, sp, #112	; 0x70
   151a0:	lsr	r0, r0, #3
   151a4:	orr	r0, r0, r1, lsl #29
   151a8:	asr	r1, r1, #3
   151ac:	bl	12650 <coda_str64@plt>
   151b0:	add	r1, sp, #112	; 0x70
   151b4:	ldr	r0, [pc, #664]	; 15454 <export_data_element_to_ascii@@Base+0xee0>
   151b8:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   151bc:	ldrd	r2, [sp, #80]	; 0x50
   151c0:	mov	r1, #0
   151c4:	and	r0, r2, #7
   151c8:	orrs	r1, r0, r1
   151cc:	bne	15348 <export_data_element_to_ascii@@Base+0xdd4>
   151d0:	ldr	r0, [pc, #640]	; 15458 <export_data_element_to_ascii@@Base+0xee4>
   151d4:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   151d8:	mov	r0, sl
   151dc:	add	sp, sp, #636	; 0x27c
   151e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151e4:	b	1229c <free@plt>
   151e8:	ldr	r3, [sp, #56]	; 0x38
   151ec:	cmp	r3, #0
   151f0:	bne	148dc <export_data_element_to_ascii@@Base+0x368>
   151f4:	ldr	r3, [pc, #608]	; 1545c <export_data_element_to_ascii@@Base+0xee8>
   151f8:	mov	r2, #548	; 0x224
   151fc:	ldr	r1, [pc, #604]	; 15460 <export_data_element_to_ascii@@Base+0xeec>
   15200:	ldr	r0, [pc, #604]	; 15464 <export_data_element_to_ascii@@Base+0xef0>
   15204:	bl	1265c <__assert_fail@plt>
   15208:	mov	r0, r5
   1520c:	add	r1, sp, #80	; 0x50
   15210:	bl	12440 <coda_cursor_read_uint64@plt>
   15214:	cmp	r0, #0
   15218:	bne	15320 <export_data_element_to_ascii@@Base+0xdac>
   1521c:	ldrd	r0, [sp, #80]	; 0x50
   15220:	add	r2, sp, #112	; 0x70
   15224:	bl	12290 <coda_str64u@plt>
   15228:	add	r1, sp, #112	; 0x70
   1522c:	ldr	r0, [pc, #536]	; 1544c <export_data_element_to_ascii@@Base+0xed8>
   15230:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   15234:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   15238:	bl	196f0 <handle_coda_error@@Base>
   1523c:	b	14e88 <export_data_element_to_ascii@@Base+0x914>
   15240:	bl	196f0 <handle_coda_error@@Base>
   15244:	b	14c3c <export_data_element_to_ascii@@Base+0x6c8>
   15248:	bl	196f0 <handle_coda_error@@Base>
   1524c:	b	14c24 <export_data_element_to_ascii@@Base+0x6b0>
   15250:	add	r1, sp, #80	; 0x50
   15254:	mov	r0, r5
   15258:	bl	125f0 <coda_cursor_get_file_bit_offset@plt>
   1525c:	cmp	r0, #0
   15260:	bne	1538c <export_data_element_to_ascii@@Base+0xe18>
   15264:	ldrd	r8, [sp, #80]	; 0x50
   15268:	cmp	r8, #0
   1526c:	sbcs	r3, r9, #0
   15270:	blt	14c6c <export_data_element_to_ascii@@Base+0x6f8>
   15274:	lsr	r0, r8, #3
   15278:	add	r2, sp, #112	; 0x70
   1527c:	orr	r0, r0, r9, lsl #29
   15280:	asr	r1, r9, #3
   15284:	bl	12650 <coda_str64@plt>
   15288:	add	r1, sp, #112	; 0x70
   1528c:	ldr	r0, [pc, #408]	; 1542c <export_data_element_to_ascii@@Base+0xeb8>
   15290:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15294:	ldrd	r2, [sp, #80]	; 0x50
   15298:	mov	r1, #0
   1529c:	and	r0, r2, #7
   152a0:	orrs	r1, r0, r1
   152a4:	beq	14c6c <export_data_element_to_ascii@@Base+0x6f8>
   152a8:	and	r1, r2, #7
   152ac:	ldr	r0, [pc, #380]	; 15430 <export_data_element_to_ascii@@Base+0xebc>
   152b0:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   152b4:	b	14c6c <export_data_element_to_ascii@@Base+0x6f8>
   152b8:	bl	196f0 <handle_coda_error@@Base>
   152bc:	b	14c50 <export_data_element_to_ascii@@Base+0x6dc>
   152c0:	ldr	r0, [pc, #364]	; 15434 <export_data_element_to_ascii@@Base+0xec0>
   152c4:	bl	14790 <export_data_element_to_ascii@@Base+0x21c>
   152c8:	b	14cac <export_data_element_to_ascii@@Base+0x738>
   152cc:	bl	196f0 <handle_coda_error@@Base>
   152d0:	b	14d44 <export_data_element_to_ascii@@Base+0x7d0>
   152d4:	bl	196f0 <handle_coda_error@@Base>
   152d8:	b	14dc8 <export_data_element_to_ascii@@Base+0x854>
   152dc:	bl	196f0 <handle_coda_error@@Base>
   152e0:	b	14d74 <export_data_element_to_ascii@@Base+0x800>
   152e4:	bl	196f0 <handle_coda_error@@Base>
   152e8:	b	14c04 <export_data_element_to_ascii@@Base+0x690>
   152ec:	bl	196f0 <handle_coda_error@@Base>
   152f0:	b	14bf0 <export_data_element_to_ascii@@Base+0x67c>
   152f4:	bl	196f0 <handle_coda_error@@Base>
   152f8:	b	14a24 <export_data_element_to_ascii@@Base+0x4b0>
   152fc:	str	r0, [sp, #20]
   15300:	mov	r9, #1
   15304:	b	14a14 <export_data_element_to_ascii@@Base+0x4a0>
   15308:	bl	196f0 <handle_coda_error@@Base>
   1530c:	b	1502c <export_data_element_to_ascii@@Base+0xab8>
   15310:	bl	196f0 <handle_coda_error@@Base>
   15314:	b	148b0 <export_data_element_to_ascii@@Base+0x33c>
   15318:	bl	196f0 <handle_coda_error@@Base>
   1531c:	b	15058 <export_data_element_to_ascii@@Base+0xae4>
   15320:	bl	196f0 <handle_coda_error@@Base>
   15324:	b	1521c <export_data_element_to_ascii@@Base+0xca8>
   15328:	bl	196f0 <handle_coda_error@@Base>
   1532c:	b	1507c <export_data_element_to_ascii@@Base+0xb08>
   15330:	bl	196f0 <handle_coda_error@@Base>
   15334:	b	150c4 <export_data_element_to_ascii@@Base+0xb50>
   15338:	bl	196f0 <handle_coda_error@@Base>
   1533c:	b	150a0 <export_data_element_to_ascii@@Base+0xb2c>
   15340:	bl	196f0 <handle_coda_error@@Base>
   15344:	b	150f4 <export_data_element_to_ascii@@Base+0xb80>
   15348:	and	r1, r2, #7
   1534c:	ldr	r0, [pc, #220]	; 15430 <export_data_element_to_ascii@@Base+0xebc>
   15350:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15354:	b	151d0 <export_data_element_to_ascii@@Base+0xc5c>
   15358:	bl	196f0 <handle_coda_error@@Base>
   1535c:	b	15178 <export_data_element_to_ascii@@Base+0xc04>
   15360:	bl	196f0 <handle_coda_error@@Base>
   15364:	b	15124 <export_data_element_to_ascii@@Base+0xbb0>
   15368:	add	r1, sp, #112	; 0x70
   1536c:	ldr	r0, [pc, #244]	; 15468 <export_data_element_to_ascii@@Base+0xef4>
   15370:	vldr	d0, [sp, #80]	; 0x50
   15374:	bl	12278 <coda_time_double_to_string@plt>
   15378:	cmp	r0, #0
   1537c:	beq	153bc <export_data_element_to_ascii@@Base+0xe48>
   15380:	ldr	r0, [pc, #228]	; 1546c <export_data_element_to_ascii@@Base+0xef8>
   15384:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   15388:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   1538c:	bl	196f0 <handle_coda_error@@Base>
   15390:	b	15264 <export_data_element_to_ascii@@Base+0xcf0>
   15394:	ldr	r2, [sp, #112]	; 0x70
   15398:	ldr	r3, [pc, #208]	; 15470 <export_data_element_to_ascii@@Base+0xefc>
   1539c:	add	r2, r2, #1
   153a0:	str	r3, [sp]
   153a4:	ldr	r1, [pc, #200]	; 15474 <export_data_element_to_ascii@@Base+0xf00>
   153a8:	ldr	r3, [pc, #176]	; 15460 <export_data_element_to_ascii@@Base+0xeec>
   153ac:	mvn	r0, #0
   153b0:	bl	12254 <coda_set_error@plt>
   153b4:	bl	196f0 <handle_coda_error@@Base>
   153b8:	b	14d58 <export_data_element_to_ascii@@Base+0x7e4>
   153bc:	add	r1, sp, #112	; 0x70
   153c0:	ldr	r0, [pc, #176]	; 15478 <export_data_element_to_ascii@@Base+0xf04>
   153c4:	bl	14638 <export_data_element_to_ascii@@Base+0xc4>
   153c8:	b	148dc <export_data_element_to_ascii@@Base+0x368>
   153cc:	ldr	r2, [pc, #168]	; 1547c <export_data_element_to_ascii@@Base+0xf08>
   153d0:	ldr	r3, [pc, #136]	; 15460 <export_data_element_to_ascii@@Base+0xeec>
   153d4:	str	r2, [sp]
   153d8:	ldr	r1, [pc, #148]	; 15474 <export_data_element_to_ascii@@Base+0xf00>
   153dc:	mov	r2, r8
   153e0:	mvn	r0, #0
   153e4:	bl	12254 <coda_set_error@plt>
   153e8:	bl	196f0 <handle_coda_error@@Base>
   153ec:	ldrd	r6, [sp, #80]	; 0x50
   153f0:	b	15158 <export_data_element_to_ascii@@Base+0xbe4>
   153f4:	strdeq	r9, [r1], -r0
   153f8:	andeq	r9, r1, r8, ror #23
   153fc:	andeq	ip, r2, ip, lsr #3
   15400:			; <UNDEFINED> instruction: 0x0002c1b0
   15404:	andeq	ip, r2, r4, asr #3
   15408:	andeq	r9, r1, r4, lsl #23
   1540c:	andeq	r9, r1, r0, lsl #23
   15410:	andeq	r9, r1, r8, lsl #23
   15414:	andeq	sl, r1, r0, lsr #30
   15418:			; <UNDEFINED> instruction: 0x0001b2bc
   1541c:	andeq	r9, r1, r8, ror #22
   15420:	andeq	r9, r1, r8, asr fp
   15424:	ldrdeq	sl, [r1], -ip
   15428:	andeq	r9, r1, ip, lsl #23
   1542c:	andeq	r9, r1, r0, ror fp
   15430:	andeq	r9, r1, r4, ror fp
   15434:	andeq	r9, r1, r8, ror fp
   15438:	andeq	r9, r1, r4, lsl ip
   1543c:	andeq	r9, r1, ip, asr #23
   15440:			; <UNDEFINED> instruction: 0x00019bb0
   15444:			; <UNDEFINED> instruction: 0x00019bb8
   15448:	andeq	r9, r1, r4, asr #23
   1544c:	andeq	r9, r1, r0, asr #23
   15450:	muleq	r1, ip, fp
   15454:	andeq	r9, r1, r8, lsr #23
   15458:	andeq	r9, r1, ip, lsr #23
   1545c:	andeq	r9, r1, r8, ror #21
   15460:	strdeq	r9, [r1], -r8
   15464:	ldrdeq	r9, [r1], -r4
   15468:	andeq	r9, r1, r0, lsr #21
   1546c:	strdeq	r9, [r1], -r8
   15470:	muleq	r0, sl, r1
   15474:	andeq	r9, r1, r4, lsr #20
   15478:	andeq	fp, r1, r8, lsl #3
   1547c:			; <UNDEFINED> instruction: 0x000001bf

00015480 <print_debug_data@@Base>:
   15480:	push	{r4, r5, r6, r7, r8, lr}
   15484:	subs	r6, r0, #0
   15488:	sub	sp, sp, #536	; 0x218
   1548c:	ldr	r5, [pc, #324]	; 155d8 <print_debug_data@@Base+0x158>
   15490:	add	r4, sp, #8
   15494:	mov	r7, r1
   15498:	mov	r8, r2
   1549c:	beq	15574 <print_debug_data@@Base+0xf4>
   154a0:	mov	r3, r2
   154a4:	str	r4, [sp]
   154a8:	mov	r2, r1
   154ac:	ldr	r0, [r5]
   154b0:	mov	r1, r6
   154b4:	bl	1247c <coda_open_as@plt>
   154b8:	cmp	r0, #0
   154bc:	bne	1555c <print_debug_data@@Base+0xdc>
   154c0:	add	r1, sp, #12
   154c4:	ldr	r0, [sp, #8]
   154c8:	bl	12344 <coda_get_product_format@plt>
   154cc:	cmp	r0, #0
   154d0:	bne	15554 <print_debug_data@@Base+0xd4>
   154d4:	ldr	r3, [sp, #12]
   154d8:	ldr	r2, [pc, #252]	; 155dc <print_debug_data@@Base+0x15c>
   154dc:	cmp	r3, #2
   154e0:	movhi	r3, #0
   154e4:	movls	r3, #1
   154e8:	add	r0, sp, #16
   154ec:	ldr	r1, [sp, #8]
   154f0:	str	r3, [r2]
   154f4:	bl	1238c <coda_cursor_set_product@plt>
   154f8:	cmp	r0, #0
   154fc:	bne	1554c <print_debug_data@@Base+0xcc>
   15500:	ldr	r3, [pc, #216]	; 155e0 <print_debug_data@@Base+0x160>
   15504:	ldr	r1, [r3]
   15508:	cmp	r1, #0
   1550c:	beq	15520 <print_debug_data@@Base+0xa0>
   15510:	add	r0, sp, #16
   15514:	bl	1256c <coda_cursor_goto@plt>
   15518:	cmp	r0, #0
   1551c:	bne	15544 <print_debug_data@@Base+0xc4>
   15520:	mov	r0, #0
   15524:	bl	12200 <coda_set_option_perform_boundary_checks@plt>
   15528:	add	r0, sp, #16
   1552c:	mov	r1, #0
   15530:	bl	14830 <export_data_element_to_ascii@@Base+0x2bc>
   15534:	ldr	r0, [sp, #8]
   15538:	bl	12548 <coda_close@plt>
   1553c:	add	sp, sp, #536	; 0x218
   15540:	pop	{r4, r5, r6, r7, r8, pc}
   15544:	bl	196f0 <handle_coda_error@@Base>
   15548:	b	15520 <print_debug_data@@Base+0xa0>
   1554c:	bl	196f0 <handle_coda_error@@Base>
   15550:	b	15500 <print_debug_data@@Base+0x80>
   15554:	bl	196f0 <handle_coda_error@@Base>
   15558:	b	154d4 <print_debug_data@@Base+0x54>
   1555c:	bl	12608 <coda_get_errno@plt>
   15560:	ldr	r3, [r0]
   15564:	cmn	r3, #21
   15568:	beq	15584 <print_debug_data@@Base+0x104>
   1556c:	bl	196f0 <handle_coda_error@@Base>
   15570:	b	154c0 <print_debug_data@@Base+0x40>
   15574:	mov	r1, r4
   15578:	ldr	r0, [r5]
   1557c:	bl	12260 <coda_open@plt>
   15580:	b	154b8 <print_debug_data@@Base+0x38>
   15584:	mov	r0, #0
   15588:	bl	122a8 <coda_set_option_use_mmap@plt>
   1558c:	cmp	r6, #0
   15590:	beq	155c4 <print_debug_data@@Base+0x144>
   15594:	str	r4, [sp]
   15598:	ldr	r0, [r5]
   1559c:	mov	r3, r8
   155a0:	mov	r2, r7
   155a4:	mov	r1, r6
   155a8:	bl	1247c <coda_open_as@plt>
   155ac:	mov	r4, r0
   155b0:	mov	r0, #1
   155b4:	bl	122a8 <coda_set_option_use_mmap@plt>
   155b8:	cmp	r4, #0
   155bc:	bne	1556c <print_debug_data@@Base+0xec>
   155c0:	b	154c0 <print_debug_data@@Base+0x40>
   155c4:	mov	r1, r4
   155c8:	ldr	r0, [r5]
   155cc:	bl	12260 <coda_open@plt>
   155d0:	mov	r4, r0
   155d4:	b	155b0 <print_debug_data@@Base+0x130>
   155d8:	strdeq	ip, [r2], -r0
   155dc:	andeq	ip, r2, ip, lsr #3
   155e0:	strheq	sp, [r2], -r0
   155e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155e8:	sub	sp, sp, #12
   155ec:	mov	r9, r0
   155f0:	mov	r7, r1
   155f4:	ldr	r0, [pc, #608]	; 1585c <print_debug_data@@Base+0x3dc>
   155f8:	mov	r1, sp
   155fc:	mov	r8, r2
   15600:	bl	1232c <coda_cursor_get_type_class@plt>
   15604:	cmp	r0, #0
   15608:	bne	157f4 <print_debug_data@@Base+0x374>
   1560c:	ldr	r3, [sp]
   15610:	cmp	r3, #0
   15614:	beq	15764 <print_debug_data@@Base+0x2e4>
   15618:	cmp	r3, #1
   1561c:	bne	15740 <print_debug_data@@Base+0x2c0>
   15620:	ldr	r6, [pc, #568]	; 15860 <print_debug_data@@Base+0x3e0>
   15624:	lsl	r1, r7, #2
   15628:	add	r3, r1, r7
   1562c:	ldr	r2, [r6, #3360]	; 0xd20
   15630:	add	r3, r6, r3, lsl #4
   15634:	cmp	r7, r2
   15638:	ldr	r3, [r3, #800]	; 0x320
   1563c:	bge	15848 <print_debug_data@@Base+0x3c8>
   15640:	add	r1, r1, r7
   15644:	cmp	r7, #0
   15648:	add	r1, r6, r1, lsl #4
   1564c:	streq	r7, [r6, #844]	; 0x34c
   15650:	add	r7, r7, #1
   15654:	ldr	lr, [r1, #844]	; 0x34c
   15658:	ldr	ip, [r1, #840]	; 0x348
   1565c:	lsl	r4, r7, #2
   15660:	add	r2, r4, r7
   15664:	ldr	r0, [r1, #804]	; 0x324
   15668:	mul	ip, ip, lr
   1566c:	add	r2, r6, r2, lsl #4
   15670:	add	r0, r3, r0
   15674:	cmp	r0, r3
   15678:	str	ip, [r2, #844]	; 0x34c
   1567c:	ble	15838 <print_debug_data@@Base+0x3b8>
   15680:	add	r2, r0, #1
   15684:	add	r3, r3, #1
   15688:	ldr	r0, [pc, #468]	; 15864 <print_debug_data@@Base+0x3e4>
   1568c:	mov	r5, #1
   15690:	add	r3, r0, r3, lsl #2
   15694:	add	r0, r0, r2, lsl #2
   15698:	ldr	r2, [r3, #68]	; 0x44
   1569c:	add	r3, r3, #4
   156a0:	cmp	r2, #0
   156a4:	ldrne	r2, [r3, #100]	; 0x64
   156a8:	ldrne	ip, [r1, #844]	; 0x34c
   156ac:	ldreq	r2, [r3, #-4]
   156b0:	ldrne	r2, [r2, ip, lsl #2]
   156b4:	cmp	r3, r0
   156b8:	mul	r5, r2, r5
   156bc:	bne	15698 <print_debug_data@@Base+0x218>
   156c0:	cmp	r5, #0
   156c4:	ble	15754 <print_debug_data@@Base+0x2d4>
   156c8:	ldr	r0, [pc, #396]	; 1585c <print_debug_data@@Base+0x3dc>
   156cc:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   156d0:	cmp	r0, #0
   156d4:	bne	157fc <print_debug_data@@Base+0x37c>
   156d8:	add	r4, r4, r7
   156dc:	add	r9, r9, #1
   156e0:	add	r6, r6, r4, lsl #4
   156e4:	sub	fp, r5, #1
   156e8:	mov	r4, #0
   156ec:	b	15708 <print_debug_data@@Base+0x288>
   156f0:	ldr	r3, [r6, #844]	; 0x34c
   156f4:	add	r3, r3, #1
   156f8:	str	r3, [r6, #844]	; 0x34c
   156fc:	add	r4, r4, #1
   15700:	cmp	r5, r4
   15704:	ble	15804 <print_debug_data@@Base+0x384>
   15708:	mov	r2, r8
   1570c:	mov	r1, r7
   15710:	mov	r0, r9
   15714:	bl	155e4 <print_debug_data@@Base+0x164>
   15718:	subs	sl, r0, #0
   1571c:	bne	15818 <print_debug_data@@Base+0x398>
   15720:	cmp	fp, r4
   15724:	ble	156fc <print_debug_data@@Base+0x27c>
   15728:	ldr	r0, [pc, #300]	; 1585c <print_debug_data@@Base+0x3dc>
   1572c:	bl	12470 <coda_cursor_goto_next_array_element@plt>
   15730:	cmp	r0, #0
   15734:	beq	156f0 <print_debug_data@@Base+0x270>
   15738:	bl	196f0 <handle_coda_error@@Base>
   1573c:	b	156f0 <print_debug_data@@Base+0x270>
   15740:	ldr	r3, [pc, #288]	; 15868 <print_debug_data@@Base+0x3e8>
   15744:	ldr	r2, [pc, #288]	; 1586c <print_debug_data@@Base+0x3ec>
   15748:	ldr	r1, [pc, #288]	; 15870 <print_debug_data@@Base+0x3f0>
   1574c:	ldr	r0, [pc, #288]	; 15874 <print_debug_data@@Base+0x3f4>
   15750:	bl	1265c <__assert_fail@plt>
   15754:	mov	sl, #0
   15758:	mov	r0, sl
   1575c:	add	sp, sp, #12
   15760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15764:	ldr	r6, [pc, #244]	; 15860 <print_debug_data@@Base+0x3e0>
   15768:	add	r4, r8, #872	; 0x368
   1576c:	add	r0, r6, #144	; 0x90
   15770:	add	r3, r6, r4, lsl #2
   15774:	add	r2, sp, #4
   15778:	ldr	r1, [r3, #4]
   1577c:	bl	1223c <coda_cursor_get_record_field_available_status@plt>
   15780:	cmp	r0, #0
   15784:	bne	15830 <print_debug_data@@Base+0x3b0>
   15788:	ldr	r3, [sp, #4]
   1578c:	cmp	r3, #0
   15790:	beq	15754 <print_debug_data@@Base+0x2d4>
   15794:	ldr	r3, [r6, #3748]	; 0xea4
   15798:	sub	r3, r3, #1
   1579c:	cmp	r8, r3
   157a0:	beq	157e4 <print_debug_data@@Base+0x364>
   157a4:	add	r6, r6, r4, lsl #2
   157a8:	ldr	r0, [pc, #172]	; 1585c <print_debug_data@@Base+0x3dc>
   157ac:	ldr	r1, [r6, #4]
   157b0:	bl	123a4 <coda_cursor_goto_record_field_by_index@plt>
   157b4:	cmp	r0, #0
   157b8:	bne	15840 <print_debug_data@@Base+0x3c0>
   157bc:	add	r2, r8, #1
   157c0:	mov	r1, r7
   157c4:	add	r0, r9, #1
   157c8:	bl	155e4 <print_debug_data@@Base+0x164>
   157cc:	str	r0, [sp, #4]
   157d0:	ldr	r0, [pc, #132]	; 1585c <print_debug_data@@Base+0x3dc>
   157d4:	bl	12404 <coda_cursor_goto_parent@plt>
   157d8:	ldr	r3, [sp, #4]
   157dc:	cmp	r3, #0
   157e0:	beq	15754 <print_debug_data@@Base+0x2d4>
   157e4:	mov	sl, #1
   157e8:	mov	r0, sl
   157ec:	add	sp, sp, #12
   157f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f4:	bl	196f0 <handle_coda_error@@Base>
   157f8:	b	1560c <print_debug_data@@Base+0x18c>
   157fc:	bl	196f0 <handle_coda_error@@Base>
   15800:	b	156d8 <print_debug_data@@Base+0x258>
   15804:	ldr	r0, [pc, #80]	; 1585c <print_debug_data@@Base+0x3dc>
   15808:	bl	12404 <coda_cursor_goto_parent@plt>
   1580c:	mov	r0, sl
   15810:	add	sp, sp, #12
   15814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15818:	ldr	r0, [pc, #60]	; 1585c <print_debug_data@@Base+0x3dc>
   1581c:	bl	12404 <coda_cursor_goto_parent@plt>
   15820:	mov	sl, #1
   15824:	mov	r0, sl
   15828:	add	sp, sp, #12
   1582c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15830:	bl	196f0 <handle_coda_error@@Base>
   15834:	b	15788 <print_debug_data@@Base+0x308>
   15838:	mov	r5, #1
   1583c:	b	156c8 <print_debug_data@@Base+0x248>
   15840:	bl	196f0 <handle_coda_error@@Base>
   15844:	b	157bc <print_debug_data@@Base+0x33c>
   15848:	ldr	r3, [pc, #24]	; 15868 <print_debug_data@@Base+0x3e8>
   1584c:	ldr	r2, [pc, #36]	; 15878 <print_debug_data@@Base+0x3f8>
   15850:	ldr	r1, [pc, #24]	; 15870 <print_debug_data@@Base+0x3f0>
   15854:	ldr	r0, [pc, #32]	; 1587c <print_debug_data@@Base+0x3fc>
   15858:	bl	1265c <__assert_fail@plt>
   1585c:	andeq	ip, r2, r0, lsl #5
   15860:	strdeq	ip, [r2], -r0
   15864:	strheq	sp, [r2], -r8
   15868:	andeq	r9, r1, r0, lsr #24
   1586c:	ldrdeq	r0, [r0], -r9
   15870:	muleq	r1, r4, ip
   15874:	andeq	r9, r1, ip, ror #27
   15878:	andeq	r0, r0, lr, ror r2
   1587c:	andeq	r9, r1, r8, ror #25
   15880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15884:	sub	sp, sp, #44	; 0x2c
   15888:	mov	r8, r0
   1588c:	mov	r5, r1
   15890:	ldr	r0, [pc, #1072]	; 15cc8 <print_debug_data@@Base+0x848>
   15894:	mov	r1, sp
   15898:	mov	r9, r2
   1589c:	bl	1232c <coda_cursor_get_type_class@plt>
   158a0:	cmp	r0, #0
   158a4:	bne	15b4c <print_debug_data@@Base+0x6cc>
   158a8:	ldr	r3, [sp]
   158ac:	cmp	r3, #5
   158b0:	ldrls	pc, [pc, r3, lsl #2]
   158b4:	b	15b38 <print_debug_data@@Base+0x6b8>
   158b8:	andeq	r5, r1, ip, lsl #21
   158bc:	andeq	r5, r1, r0, ror r9
   158c0:	andeq	r5, r1, r8, lsr fp
   158c4:	andeq	r5, r1, r8, lsr fp
   158c8:	ldrdeq	r5, [r1], -r0
   158cc:	ldrdeq	r5, [r1], -r0
   158d0:	ldr	r6, [pc, #1012]	; 15ccc <print_debug_data@@Base+0x84c>
   158d4:	ldr	r2, [r6, #3360]	; 0xd20
   158d8:	cmp	r5, r2
   158dc:	bne	15ca0 <print_debug_data@@Base+0x820>
   158e0:	cmp	r3, #4
   158e4:	beq	15b94 <print_debug_data@@Base+0x714>
   158e8:	add	r1, sp, #8
   158ec:	add	r0, r6, #144	; 0x90
   158f0:	bl	121c4 <coda_cursor_get_byte_size@plt>
   158f4:	cmp	r0, #0
   158f8:	bne	15bb4 <print_debug_data@@Base+0x734>
   158fc:	ldrd	r0, [sp, #8]
   15900:	add	r5, r5, r5, lsl #2
   15904:	ldr	r2, [pc, #964]	; 15cd0 <print_debug_data@@Base+0x850>
   15908:	add	r4, r6, r5, lsl #4
   1590c:	ldr	r3, [r4, #800]	; 0x320
   15910:	ldr	r5, [r4, #844]	; 0x34c
   15914:	add	r4, r2, r3, lsl #2
   15918:	mov	lr, r4
   1591c:	ldr	r4, [r4, #108]	; 0x6c
   15920:	str	r0, [r4, r5, lsl #2]
   15924:	ldr	r4, [lr, #4]
   15928:	cmn	r4, #1
   1592c:	moveq	r3, lr
   15930:	streq	r0, [lr, #4]
   15934:	streq	r0, [r3, #36]	; 0x24
   15938:	beq	15968 <print_debug_data@@Base+0x4e8>
   1593c:	add	r3, r3, #8
   15940:	asr	r5, r4, #31
   15944:	add	r3, r2, r3, lsl #2
   15948:	cmp	r4, r0
   1594c:	sbcs	r4, r5, r1
   15950:	ldr	r4, [r3, #4]
   15954:	strlt	r0, [lr, #4]
   15958:	cmp	r0, r4
   1595c:	asr	r5, r4, #31
   15960:	sbcs	r2, r1, r5
   15964:	strlt	r0, [r3, #4]
   15968:	add	sp, sp, #44	; 0x2c
   1596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15970:	ldr	r6, [pc, #852]	; 15ccc <print_debug_data@@Base+0x84c>
   15974:	lsl	r4, r5, #2
   15978:	add	r3, r4, r5
   1597c:	ldr	r2, [r6, #3360]	; 0xd20
   15980:	add	r3, r6, r3, lsl #4
   15984:	cmp	r5, r2
   15988:	ldr	r7, [r3, #800]	; 0x320
   1598c:	beq	15bd8 <print_debug_data@@Base+0x758>
   15990:	add	r2, r4, r5
   15994:	cmp	r5, #0
   15998:	add	r2, r6, r2, lsl #4
   1599c:	streq	r5, [r6, #844]	; 0x34c
   159a0:	add	r5, r5, #1
   159a4:	ldr	ip, [r2, #844]	; 0x34c
   159a8:	ldr	r1, [r2, #840]	; 0x348
   159ac:	lsl	r4, r5, #2
   159b0:	add	r3, r4, r5
   159b4:	ldr	r0, [r2, #804]	; 0x324
   159b8:	mul	r1, r1, ip
   159bc:	add	r3, r6, r3, lsl #4
   159c0:	add	r0, r7, r0
   159c4:	cmp	r7, r0
   159c8:	str	r1, [r3, #844]	; 0x34c
   159cc:	bge	15bbc <print_debug_data@@Base+0x73c>
   159d0:	add	r3, r7, #1
   159d4:	add	r1, r0, #1
   159d8:	ldr	r0, [pc, #752]	; 15cd0 <print_debug_data@@Base+0x850>
   159dc:	mov	r7, #1
   159e0:	add	r3, r0, r3, lsl #2
   159e4:	add	r0, r0, r1, lsl #2
   159e8:	ldr	r1, [r3, #68]	; 0x44
   159ec:	add	r3, r3, #4
   159f0:	cmp	r1, #0
   159f4:	ldrne	r1, [r3, #100]	; 0x64
   159f8:	ldrne	ip, [r2, #844]	; 0x34c
   159fc:	ldreq	r1, [r3, #-4]
   15a00:	ldrne	r1, [r1, ip, lsl #2]
   15a04:	cmp	r3, r0
   15a08:	mul	r7, r1, r7
   15a0c:	bne	159e8 <print_debug_data@@Base+0x568>
   15a10:	cmp	r7, #0
   15a14:	subgt	sl, r7, #1
   15a18:	ble	15968 <print_debug_data@@Base+0x4e8>
   15a1c:	ldr	r0, [pc, #676]	; 15cc8 <print_debug_data@@Base+0x848>
   15a20:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   15a24:	cmp	r0, #0
   15a28:	bne	15bd0 <print_debug_data@@Base+0x750>
   15a2c:	add	r4, r4, r5
   15a30:	ldr	fp, [pc, #656]	; 15cc8 <print_debug_data@@Base+0x848>
   15a34:	add	r4, r6, r4, lsl #4
   15a38:	add	r8, r8, #1
   15a3c:	mov	r6, #0
   15a40:	b	15a5c <print_debug_data@@Base+0x5dc>
   15a44:	ldr	r3, [r4, #844]	; 0x34c
   15a48:	add	r3, r3, #1
   15a4c:	str	r3, [r4, #844]	; 0x34c
   15a50:	add	r6, r6, #1
   15a54:	cmp	r6, r7
   15a58:	bge	15b7c <print_debug_data@@Base+0x6fc>
   15a5c:	mov	r2, r9
   15a60:	mov	r1, r5
   15a64:	mov	r0, r8
   15a68:	bl	15880 <print_debug_data@@Base+0x400>
   15a6c:	cmp	r6, sl
   15a70:	bge	15a50 <print_debug_data@@Base+0x5d0>
   15a74:	mov	r0, fp
   15a78:	bl	12470 <coda_cursor_goto_next_array_element@plt>
   15a7c:	cmp	r0, #0
   15a80:	beq	15a44 <print_debug_data@@Base+0x5c4>
   15a84:	bl	196f0 <handle_coda_error@@Base>
   15a88:	b	15a44 <print_debug_data@@Base+0x5c4>
   15a8c:	ldr	r6, [pc, #568]	; 15ccc <print_debug_data@@Base+0x84c>
   15a90:	add	r4, r9, #872	; 0x368
   15a94:	add	r0, r6, #144	; 0x90
   15a98:	add	r3, r6, r4, lsl #2
   15a9c:	add	r2, sp, #8
   15aa0:	ldr	r1, [r3, #4]
   15aa4:	bl	1223c <coda_cursor_get_record_field_available_status@plt>
   15aa8:	cmp	r0, #0
   15aac:	bne	15b8c <print_debug_data@@Base+0x70c>
   15ab0:	ldr	r3, [sp, #8]
   15ab4:	cmp	r3, #0
   15ab8:	bne	15b54 <print_debug_data@@Base+0x6d4>
   15abc:	ldr	r2, [r6, #3360]	; 0xd20
   15ac0:	add	r2, r2, r2, lsl #2
   15ac4:	lsl	r4, r2, #4
   15ac8:	add	r0, r6, r4
   15acc:	ldr	r1, [r0, #804]	; 0x324
   15ad0:	ldr	r2, [r0, #800]	; 0x320
   15ad4:	cmp	r1, #0
   15ad8:	ble	15968 <print_debug_data@@Base+0x4e8>
   15adc:	add	r1, r2, #1
   15ae0:	ldr	r2, [pc, #488]	; 15cd0 <print_debug_data@@Base+0x850>
   15ae4:	add	r4, r4, #804	; 0x324
   15ae8:	add	r4, r6, r4
   15aec:	add	r2, r2, r1, lsl #2
   15af0:	mov	ip, r3
   15af4:	b	15b0c <print_debug_data@@Base+0x68c>
   15af8:	ldr	r1, [r0, #804]	; 0x324
   15afc:	add	r3, r3, #1
   15b00:	cmp	r1, r3
   15b04:	add	r2, r2, #4
   15b08:	ble	15968 <print_debug_data@@Base+0x4e8>
   15b0c:	ldr	r1, [r4, #4]!
   15b10:	cmn	r1, #1
   15b14:	bne	15af8 <print_debug_data@@Base+0x678>
   15b18:	ldr	r1, [r2, #104]	; 0x68
   15b1c:	ldr	lr, [r0, #844]	; 0x34c
   15b20:	str	ip, [r1, lr, lsl #2]
   15b24:	ldr	r1, [r2]
   15b28:	str	ip, [r2, #32]
   15b2c:	cmn	r1, #1
   15b30:	streq	ip, [r2]
   15b34:	b	15af8 <print_debug_data@@Base+0x678>
   15b38:	ldr	r3, [pc, #404]	; 15cd4 <print_debug_data@@Base+0x854>
   15b3c:	ldr	r2, [pc, #404]	; 15cd8 <print_debug_data@@Base+0x858>
   15b40:	ldr	r1, [pc, #404]	; 15cdc <print_debug_data@@Base+0x85c>
   15b44:	ldr	r0, [pc, #404]	; 15ce0 <print_debug_data@@Base+0x860>
   15b48:	bl	1265c <__assert_fail@plt>
   15b4c:	bl	196f0 <handle_coda_error@@Base>
   15b50:	b	158a8 <print_debug_data@@Base+0x428>
   15b54:	add	r4, r6, r4, lsl #2
   15b58:	ldr	r0, [pc, #360]	; 15cc8 <print_debug_data@@Base+0x848>
   15b5c:	ldr	r1, [r4, #4]
   15b60:	bl	123a4 <coda_cursor_goto_record_field_by_index@plt>
   15b64:	cmp	r0, #0
   15b68:	bne	15c90 <print_debug_data@@Base+0x810>
   15b6c:	add	r2, r9, #1
   15b70:	mov	r1, r5
   15b74:	add	r0, r8, #1
   15b78:	bl	15880 <print_debug_data@@Base+0x400>
   15b7c:	ldr	r0, [pc, #324]	; 15cc8 <print_debug_data@@Base+0x848>
   15b80:	bl	12404 <coda_cursor_goto_parent@plt>
   15b84:	add	sp, sp, #44	; 0x2c
   15b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b8c:	bl	196f0 <handle_coda_error@@Base>
   15b90:	b	15ab0 <print_debug_data@@Base+0x630>
   15b94:	add	r1, sp, #4
   15b98:	add	r0, r6, #144	; 0x90
   15b9c:	bl	12434 <coda_cursor_get_string_length@plt>
   15ba0:	cmp	r0, #0
   15ba4:	bne	15bc8 <print_debug_data@@Base+0x748>
   15ba8:	ldr	r0, [sp, #4]
   15bac:	asr	r1, r0, #31
   15bb0:	b	15900 <print_debug_data@@Base+0x480>
   15bb4:	bl	196f0 <handle_coda_error@@Base>
   15bb8:	b	158fc <print_debug_data@@Base+0x47c>
   15bbc:	mov	sl, #0
   15bc0:	mov	r7, #1
   15bc4:	b	15a1c <print_debug_data@@Base+0x59c>
   15bc8:	bl	196f0 <handle_coda_error@@Base>
   15bcc:	b	15ba8 <print_debug_data@@Base+0x728>
   15bd0:	bl	196f0 <handle_coda_error@@Base>
   15bd4:	b	15a2c <print_debug_data@@Base+0x5ac>
   15bd8:	add	r8, sp, #8
   15bdc:	mov	r2, r8
   15be0:	add	r1, sp, #4
   15be4:	add	r0, r6, #144	; 0x90
   15be8:	bl	12530 <coda_cursor_get_array_dim@plt>
   15bec:	cmp	r0, #0
   15bf0:	bne	15c98 <print_debug_data@@Base+0x818>
   15bf4:	add	r5, r4, r5
   15bf8:	ldr	r2, [sp, #4]
   15bfc:	lsl	r4, r5, #4
   15c00:	add	r0, r6, r4
   15c04:	ldr	r3, [r0, #804]	; 0x324
   15c08:	cmp	r3, r2
   15c0c:	bne	15cb4 <print_debug_data@@Base+0x834>
   15c10:	cmp	r3, #0
   15c14:	ble	15968 <print_debug_data@@Base+0x4e8>
   15c18:	add	r7, r7, #1
   15c1c:	ldr	r3, [pc, #172]	; 15cd0 <print_debug_data@@Base+0x850>
   15c20:	add	r4, r4, #804	; 0x324
   15c24:	add	r4, r6, r4
   15c28:	add	r3, r3, r7, lsl #2
   15c2c:	mov	r2, #0
   15c30:	b	15c48 <print_debug_data@@Base+0x7c8>
   15c34:	ldr	r1, [r0, #804]	; 0x324
   15c38:	add	r2, r2, #1
   15c3c:	cmp	r1, r2
   15c40:	add	r3, r3, #4
   15c44:	ble	15968 <print_debug_data@@Base+0x4e8>
   15c48:	ldr	r1, [r4, #4]!
   15c4c:	cmn	r1, #1
   15c50:	bne	15c34 <print_debug_data@@Base+0x7b4>
   15c54:	ldr	ip, [r3, #104]	; 0x68
   15c58:	ldr	lr, [r0, #844]	; 0x34c
   15c5c:	ldr	r1, [r8, r2, lsl #2]
   15c60:	str	r1, [ip, lr, lsl #2]
   15c64:	ldr	ip, [r3]
   15c68:	cmn	ip, #1
   15c6c:	streq	r1, [r3]
   15c70:	streq	r1, [r3, #32]
   15c74:	beq	15c34 <print_debug_data@@Base+0x7b4>
   15c78:	cmp	r1, ip
   15c7c:	ldr	ip, [r3, #32]
   15c80:	strgt	r1, [r3]
   15c84:	cmp	r1, ip
   15c88:	strlt	r1, [r3, #32]
   15c8c:	b	15c34 <print_debug_data@@Base+0x7b4>
   15c90:	bl	196f0 <handle_coda_error@@Base>
   15c94:	b	15b6c <print_debug_data@@Base+0x6ec>
   15c98:	bl	196f0 <handle_coda_error@@Base>
   15c9c:	b	15bf4 <print_debug_data@@Base+0x774>
   15ca0:	ldr	r3, [pc, #44]	; 15cd4 <print_debug_data@@Base+0x854>
   15ca4:	mov	r2, #252	; 0xfc
   15ca8:	ldr	r1, [pc, #44]	; 15cdc <print_debug_data@@Base+0x85c>
   15cac:	ldr	r0, [pc, #48]	; 15ce4 <print_debug_data@@Base+0x864>
   15cb0:	bl	1265c <__assert_fail@plt>
   15cb4:	ldr	r3, [pc, #24]	; 15cd4 <print_debug_data@@Base+0x854>
   15cb8:	mov	r2, #125	; 0x7d
   15cbc:	ldr	r1, [pc, #24]	; 15cdc <print_debug_data@@Base+0x85c>
   15cc0:	ldr	r0, [pc, #32]	; 15ce8 <print_debug_data@@Base+0x868>
   15cc4:	bl	1265c <__assert_fail@plt>
   15cc8:	andeq	ip, r2, r0, lsl #5
   15ccc:	strdeq	ip, [r2], -r0
   15cd0:	strheq	sp, [r2], -r8
   15cd4:	andeq	r9, r1, r4, asr #24
   15cd8:	andeq	r0, r0, r6, lsr #2
   15cdc:	muleq	r1, r4, ip
   15ce0:	andeq	r9, r1, ip, ror #27
   15ce4:	andeq	r9, r1, r4, lsr sp
   15ce8:	andeq	r9, r1, r0, lsl sp

00015cec <dim_info_init@@Base>:
   15cec:	ldr	r3, [pc, #20]	; 15d08 <dim_info_init@@Base+0x1c>
   15cf0:	mov	r2, #0
   15cf4:	mvn	r1, #0
   15cf8:	str	r1, [r3, #104]	; 0x68
   15cfc:	str	r2, [r3]
   15d00:	str	r2, [r3, #68]	; 0x44
   15d04:	bx	lr
   15d08:	strheq	sp, [r2], -r8

00015d0c <dim_info_done@@Base>:
   15d0c:	bx	lr

00015d10 <print_all_distinct_dims@@Base>:
   15d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d14:	sub	sp, sp, #12
   15d18:	ldr	r5, [pc, #432]	; 15ed0 <print_all_distinct_dims@@Base+0x1c0>
   15d1c:	ldr	r3, [r5]
   15d20:	cmp	r3, r0
   15d24:	ble	15ebc <print_all_distinct_dims@@Base+0x1ac>
   15d28:	add	r3, r0, #18
   15d2c:	mov	r4, r0
   15d30:	ldr	r3, [r5, r3, lsl #2]
   15d34:	cmp	r3, #0
   15d38:	bne	15d44 <print_all_distinct_dims@@Base+0x34>
   15d3c:	add	sp, sp, #12
   15d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d44:	lsl	r7, r0, #2
   15d48:	add	r9, r5, r7
   15d4c:	ldr	r8, [r9, #4]
   15d50:	add	r8, r8, #1
   15d54:	lsl	r8, r8, #2
   15d58:	mov	r0, r8
   15d5c:	bl	123d4 <malloc@plt>
   15d60:	subs	r6, r0, #0
   15d64:	beq	15e8c <print_all_distinct_dims@@Base+0x17c>
   15d68:	mov	r1, #0
   15d6c:	mov	r2, r8
   15d70:	mov	r0, r6
   15d74:	bl	124b8 <memset@plt>
   15d78:	add	r3, r5, r4, lsl #2
   15d7c:	ldr	r3, [r3, #140]	; 0x8c
   15d80:	add	r3, r5, r3, lsl #3
   15d84:	ldrd	r0, [r3, #232]	; 0xe8
   15d88:	cmp	r0, #1
   15d8c:	sbcs	r3, r1, #0
   15d90:	blt	15dbc <print_all_distinct_dims@@Base+0xac>
   15d94:	add	r3, r5, r4, lsl #2
   15d98:	ldr	r2, [r3, #108]	; 0x6c
   15d9c:	add	r0, r2, r0, lsl #2
   15da0:	ldr	r3, [r2], #4
   15da4:	cmp	r3, #0
   15da8:	ldrge	r1, [r6, r3, lsl #2]
   15dac:	addge	r1, r1, #1
   15db0:	strge	r1, [r6, r3, lsl #2]
   15db4:	cmp	r0, r2
   15db8:	bne	15da0 <print_all_distinct_dims@@Base+0x90>
   15dbc:	add	r9, r4, #8
   15dc0:	add	r1, r4, #1
   15dc4:	ldr	r0, [pc, #264]	; 15ed4 <print_all_distinct_dims@@Base+0x1c4>
   15dc8:	bl	12230 <printf@plt>
   15dcc:	add	fp, r5, r7
   15dd0:	add	r3, r5, r9, lsl #2
   15dd4:	ldr	r1, [fp, #4]
   15dd8:	ldr	r4, [r3, #4]
   15ddc:	cmp	r4, r1
   15de0:	addlt	r8, r6, r4, lsl #2
   15de4:	ldrlt	sl, [pc, #236]	; 15ed8 <print_all_distinct_dims@@Base+0x1c8>
   15de8:	bge	15e14 <print_all_distinct_dims@@Base+0x104>
   15dec:	ldr	r3, [r8], #4
   15df0:	cmp	r3, #0
   15df4:	ble	15e04 <print_all_distinct_dims@@Base+0xf4>
   15df8:	mov	r1, r4
   15dfc:	mov	r0, sl
   15e00:	bl	12230 <printf@plt>
   15e04:	ldr	r1, [fp, #4]
   15e08:	add	r4, r4, #1
   15e0c:	cmp	r1, r4
   15e10:	bgt	15dec <print_all_distinct_dims@@Base+0xdc>
   15e14:	add	r9, r5, r9, lsl #2
   15e18:	ldr	r0, [pc, #188]	; 15edc <print_all_distinct_dims@@Base+0x1cc>
   15e1c:	add	r5, r5, r7
   15e20:	bl	12230 <printf@plt>
   15e24:	ldr	r0, [pc, #180]	; 15ee0 <print_all_distinct_dims@@Base+0x1d0>
   15e28:	bl	12230 <printf@plt>
   15e2c:	ldr	r4, [r9, #4]
   15e30:	ldr	r3, [r5, #4]
   15e34:	cmp	r4, r3
   15e38:	bge	15e68 <print_all_distinct_dims@@Base+0x158>
   15e3c:	ldr	r8, [pc, #148]	; 15ed8 <print_all_distinct_dims@@Base+0x1c8>
   15e40:	add	r7, r6, r4, lsl #2
   15e44:	ldr	r1, [r7], #4
   15e48:	cmp	r1, #0
   15e4c:	ble	15e58 <print_all_distinct_dims@@Base+0x148>
   15e50:	mov	r0, r8
   15e54:	bl	12230 <printf@plt>
   15e58:	ldr	r3, [r5, #4]
   15e5c:	add	r4, r4, #1
   15e60:	cmp	r3, r4
   15e64:	bgt	15e44 <print_all_distinct_dims@@Base+0x134>
   15e68:	ldr	r1, [r6, r3, lsl #2]
   15e6c:	ldr	r0, [pc, #104]	; 15edc <print_all_distinct_dims@@Base+0x1cc>
   15e70:	bl	12230 <printf@plt>
   15e74:	mov	r0, #10
   15e78:	bl	124c4 <putchar@plt>
   15e7c:	mov	r0, r6
   15e80:	add	sp, sp, #12
   15e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e88:	b	1229c <free@plt>
   15e8c:	mov	r3, #61	; 0x3d
   15e90:	mov	r2, r8
   15e94:	str	r3, [sp]
   15e98:	ldr	r1, [pc, #68]	; 15ee4 <print_all_distinct_dims@@Base+0x1d4>
   15e9c:	ldr	r3, [pc, #68]	; 15ee8 <print_all_distinct_dims@@Base+0x1d8>
   15ea0:	mvn	r0, #0
   15ea4:	bl	12254 <coda_set_error@plt>
   15ea8:	bl	196f0 <handle_coda_error@@Base>
   15eac:	ldr	r8, [r9, #4]
   15eb0:	add	r8, r8, #1
   15eb4:	lsl	r8, r8, #2
   15eb8:	b	15d68 <print_all_distinct_dims@@Base+0x58>
   15ebc:	ldr	r3, [pc, #40]	; 15eec <print_all_distinct_dims@@Base+0x1dc>
   15ec0:	mov	r2, #50	; 0x32
   15ec4:	ldr	r1, [pc, #28]	; 15ee8 <print_all_distinct_dims@@Base+0x1d8>
   15ec8:	ldr	r0, [pc, #32]	; 15ef0 <print_all_distinct_dims@@Base+0x1e0>
   15ecc:	bl	1265c <__assert_fail@plt>
   15ed0:	strheq	sp, [r2], -r8
   15ed4:	andeq	r9, r1, r8, ror sp
   15ed8:	andeq	r9, r1, r4, lsl #27
   15edc:	andeq	r9, r1, r8, lsl #27
   15ee0:	andeq	r9, r1, ip, lsl #27
   15ee4:	andeq	r9, r1, r4, lsr #20
   15ee8:	muleq	r1, r4, ip
   15eec:	andeq	r9, r1, ip, asr ip
   15ef0:	andeq	r9, r1, ip, asr sp

00015ef4 <dim_enter_array@@Base>:
   15ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ef8:	sub	sp, sp, #92	; 0x5c
   15efc:	ldr	sl, [pc, #2388]	; 16858 <dim_enter_array@@Base+0x964>
   15f00:	add	r1, sp, #48	; 0x30
   15f04:	ldr	r3, [sl, #136]	; 0x88
   15f08:	ldr	r2, [sl, #3360]	; 0xd20
   15f0c:	add	r3, r3, #2
   15f10:	str	r2, [sp, #8]
   15f14:	ldr	r0, [sl, r3, lsl #2]
   15f18:	bl	12668 <coda_type_get_class@plt>
   15f1c:	cmp	r0, #0
   15f20:	bne	16290 <dim_enter_array@@Base+0x39c>
   15f24:	ldr	r3, [sp, #48]	; 0x30
   15f28:	sub	r3, r3, #1
   15f2c:	cmp	r3, #5
   15f30:	ldrls	pc, [pc, r3, lsl #2]
   15f34:	b	1627c <dim_enter_array@@Base+0x388>
   15f38:	andeq	r6, r1, r0, lsl r2
   15f3c:	andeq	r6, r1, ip, ror r2
   15f40:	andeq	r6, r1, ip, ror r2
   15f44:	andeq	r6, r1, ip, asr #3
   15f48:	andeq	r6, r1, ip, lsr #2
   15f4c:	andeq	r5, r1, r0, asr pc
   15f50:	ldr	r3, [sl, #136]	; 0x88
   15f54:	add	r1, sp, #56	; 0x38
   15f58:	add	r3, r3, #2
   15f5c:	ldr	r0, [sl, r3, lsl #2]
   15f60:	bl	124dc <coda_type_get_special_type@plt>
   15f64:	cmp	r0, #0
   15f68:	bne	16720 <dim_enter_array@@Base+0x82c>
   15f6c:	ldr	r3, [sp, #56]	; 0x38
   15f70:	cmp	r3, #3
   15f74:	bne	16844 <dim_enter_array@@Base+0x950>
   15f78:	ldr	r2, [sp, #8]
   15f7c:	mov	r1, #1
   15f80:	lsl	r3, r2, #2
   15f84:	str	r3, [sp, #28]
   15f88:	add	r3, r3, r2
   15f8c:	mov	r2, #2
   15f90:	add	r3, sl, r3, lsl #4
   15f94:	str	r1, [r3, #804]	; 0x324
   15f98:	str	r2, [r3, #808]	; 0x328
   15f9c:	ldr	r3, [pc, #2232]	; 1685c <dim_enter_array@@Base+0x968>
   15fa0:	ldr	r3, [r3]
   15fa4:	cmp	r3, #0
   15fa8:	beq	161a4 <dim_enter_array@@Base+0x2b0>
   15fac:	ldr	r2, [sp, #8]
   15fb0:	ldr	r3, [sp, #28]
   15fb4:	ldr	fp, [pc, #2212]	; 16860 <dim_enter_array@@Base+0x96c>
   15fb8:	add	r3, r3, r2
   15fbc:	add	r3, sl, r3, lsl #4
   15fc0:	ldr	r2, [fp]
   15fc4:	ldr	r4, [r3, #804]	; 0x324
   15fc8:	str	r2, [sp, #12]
   15fcc:	add	r0, r2, r4
   15fd0:	cmp	r0, #8
   15fd4:	str	r2, [r3, #800]	; 0x320
   15fd8:	bgt	16830 <dim_enter_array@@Base+0x93c>
   15fdc:	ldr	r2, [sp, #12]
   15fe0:	str	r0, [fp]
   15fe4:	cmp	r2, #0
   15fe8:	ble	1675c <dim_enter_array@@Base+0x868>
   15fec:	add	r3, r2, #37	; 0x25
   15ff0:	add	r2, fp, r2, lsl #3
   15ff4:	lsl	r3, r3, #3
   15ff8:	ldrd	r6, [r2, #232]	; 0xe8
   15ffc:	ldrd	r2, [r3, fp]
   16000:	strd	r6, [sp, #16]
   16004:	cmp	r2, #1
   16008:	strd	r2, [sp, #32]
   1600c:	sbcs	r3, r3, #0
   16010:	blt	1632c <dim_enter_array@@Base+0x438>
   16014:	cmp	r4, #0
   16018:	ble	16770 <dim_enter_array@@Base+0x87c>
   1601c:	ldr	r2, [sp, #8]
   16020:	ldr	r3, [sp, #28]
   16024:	mov	r5, #0
   16028:	add	r3, r3, r2
   1602c:	ldr	r2, [sp, #12]
   16030:	add	r3, sl, r3, lsl #4
   16034:	add	ip, r2, #1
   16038:	add	lr, r4, ip
   1603c:	add	r9, r3, #804	; 0x324
   16040:	lsl	r3, ip, #2
   16044:	str	r3, [sp, #40]	; 0x28
   16048:	mov	r1, r9
   1604c:	add	lr, fp, lr, lsl #2
   16050:	add	r3, fp, r3
   16054:	mov	r6, r5
   16058:	ldr	r2, [r1, #4]!
   1605c:	cmn	r2, #1
   16060:	str	r2, [r3], #4
   16064:	moveq	r5, #1
   16068:	cmp	r3, lr
   1606c:	str	r6, [r3, #64]	; 0x40
   16070:	bne	16058 <dim_enter_array@@Base+0x164>
   16074:	cmp	r5, #0
   16078:	beq	1635c <dim_enter_array@@Base+0x468>
   1607c:	ldr	r3, [sp, #28]
   16080:	ldr	r2, [sp, #8]
   16084:	mov	r6, #0
   16088:	add	r7, r3, r2
   1608c:	ldr	r3, [sp, #40]	; 0x28
   16090:	add	r7, sl, r7, lsl #4
   16094:	add	r4, r3, #104	; 0x68
   16098:	ldr	r3, [sp, #16]
   1609c:	add	r4, fp, r4
   160a0:	mov	r8, r9
   160a4:	lsl	r3, r3, #2
   160a8:	str	r3, [sp, #24]
   160ac:	b	160c8 <dim_enter_array@@Base+0x1d4>
   160b0:	ldr	r3, [r7, #804]	; 0x324
   160b4:	add	r6, r6, #1
   160b8:	cmp	r3, r6
   160bc:	add	r4, r4, #4
   160c0:	add	r3, r7, #804	; 0x324
   160c4:	ble	16298 <dim_enter_array@@Base+0x3a4>
   160c8:	ldr	r3, [r8, #4]!
   160cc:	cmn	r3, #1
   160d0:	movne	r3, #0
   160d4:	strne	r3, [r4, #32]
   160d8:	strne	r3, [r4]
   160dc:	bne	160b0 <dim_enter_array@@Base+0x1bc>
   160e0:	ldr	r3, [sp, #12]
   160e4:	ldr	r0, [sp, #24]
   160e8:	str	r3, [r4, #32]
   160ec:	bl	123d4 <malloc@plt>
   160f0:	cmp	r0, #0
   160f4:	str	r0, [r4]
   160f8:	beq	1680c <dim_enter_array@@Base+0x918>
   160fc:	ldrd	r2, [sp, #16]
   16100:	cmp	r2, #1
   16104:	sbcs	r3, r3, #0
   16108:	blt	160b0 <dim_enter_array@@Base+0x1bc>
   1610c:	ldr	r3, [r4]
   16110:	ldr	r2, [sp, #24]
   16114:	add	r2, r3, r2
   16118:	mvn	r1, #0
   1611c:	str	r1, [r3], #4
   16120:	cmp	r3, r2
   16124:	bne	16118 <dim_enter_array@@Base+0x224>
   16128:	b	160b0 <dim_enter_array@@Base+0x1bc>
   1612c:	ldr	r3, [sl, #136]	; 0x88
   16130:	add	r1, sp, #56	; 0x38
   16134:	add	r3, r3, #2
   16138:	ldr	r0, [sl, r3, lsl #2]
   1613c:	bl	12308 <coda_type_get_bit_size@plt>
   16140:	cmp	r0, #0
   16144:	bne	16718 <dim_enter_array@@Base+0x824>
   16148:	ldr	r2, [sp, #8]
   1614c:	ldrd	r0, [sp, #56]	; 0x38
   16150:	lsl	r3, r2, #2
   16154:	str	r3, [sp, #28]
   16158:	add	r3, r3, r2
   1615c:	cmp	r0, #0
   16160:	add	r3, sl, r3, lsl #4
   16164:	mov	r2, #1
   16168:	sbcs	ip, r1, #0
   1616c:	str	r2, [r3, #804]	; 0x324
   16170:	blt	16750 <dim_enter_array@@Base+0x85c>
   16174:	and	r4, r0, #7
   16178:	mov	r5, #0
   1617c:	lsr	r2, r0, #3
   16180:	orr	r4, r4, r5
   16184:	orr	r2, r2, r1, lsl #29
   16188:	cmp	r4, #0
   1618c:	addne	r2, r2, #1
   16190:	str	r2, [r3, #808]	; 0x328
   16194:	ldr	r3, [pc, #1728]	; 1685c <dim_enter_array@@Base+0x968>
   16198:	ldr	r3, [r3]
   1619c:	cmp	r3, #0
   161a0:	bne	15fac <dim_enter_array@@Base+0xb8>
   161a4:	ldr	r1, [sp, #8]
   161a8:	ldr	r2, [sp, #28]
   161ac:	add	r2, r2, r1
   161b0:	mvn	r1, #0
   161b4:	add	sl, sl, r2, lsl #4
   161b8:	str	r3, [sl, #840]	; 0x348
   161bc:	str	r3, [sl, #844]	; 0x34c
   161c0:	str	r1, [sl, #800]	; 0x320
   161c4:	add	sp, sp, #92	; 0x5c
   161c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161cc:	ldr	r3, [sl, #136]	; 0x88
   161d0:	add	r1, sp, #56	; 0x38
   161d4:	add	r3, r3, #2
   161d8:	ldr	r0, [sl, r3, lsl #2]
   161dc:	bl	12518 <coda_type_get_string_length@plt>
   161e0:	cmp	r0, #0
   161e4:	bne	16710 <dim_enter_array@@Base+0x81c>
   161e8:	ldr	r2, [sp, #8]
   161ec:	mov	r1, #1
   161f0:	lsl	r3, r2, #2
   161f4:	str	r3, [sp, #28]
   161f8:	add	r3, r3, r2
   161fc:	ldr	r2, [sp, #56]	; 0x38
   16200:	add	r3, sl, r3, lsl #4
   16204:	str	r1, [r3, #804]	; 0x324
   16208:	str	r2, [r3, #808]	; 0x328
   1620c:	b	15f9c <dim_enter_array@@Base+0xa8>
   16210:	ldr	r3, [sl, #136]	; 0x88
   16214:	add	r2, sp, #56	; 0x38
   16218:	add	r3, r3, #2
   1621c:	add	r1, sp, #52	; 0x34
   16220:	ldr	r0, [sl, r3, lsl #2]
   16224:	bl	125a8 <coda_type_get_array_dim@plt>
   16228:	cmp	r0, #0
   1622c:	bne	16728 <dim_enter_array@@Base+0x834>
   16230:	ldr	r2, [sp, #8]
   16234:	ldr	r0, [sp, #52]	; 0x34
   16238:	lsl	r3, r2, #2
   1623c:	add	r2, r3, r2
   16240:	str	r3, [sp, #28]
   16244:	lsl	r2, r2, #4
   16248:	add	r3, sl, r2
   1624c:	cmp	r0, #0
   16250:	str	r0, [r3, #804]	; 0x324
   16254:	ble	15f9c <dim_enter_array@@Base+0xa8>
   16258:	add	r3, sp, #56	; 0x38
   1625c:	add	r2, r2, #804	; 0x324
   16260:	add	r0, r3, r0, lsl #2
   16264:	add	r2, sl, r2
   16268:	ldr	r1, [r3], #4
   1626c:	cmp	r3, r0
   16270:	str	r1, [r2, #4]!
   16274:	bne	16268 <dim_enter_array@@Base+0x374>
   16278:	b	15f9c <dim_enter_array@@Base+0xa8>
   1627c:	ldr	r3, [pc, #1504]	; 16864 <dim_enter_array@@Base+0x970>
   16280:	ldr	r2, [pc, #1504]	; 16868 <dim_enter_array@@Base+0x974>
   16284:	ldr	r1, [pc, #1504]	; 1686c <dim_enter_array@@Base+0x978>
   16288:	ldr	r0, [pc, #1504]	; 16870 <dim_enter_array@@Base+0x97c>
   1628c:	bl	1265c <__assert_fail@plt>
   16290:	bl	196f0 <handle_coda_error@@Base>
   16294:	b	15f24 <dim_enter_array@@Base+0x30>
   16298:	mov	r6, #0
   1629c:	mov	r0, r6
   162a0:	mov	r2, r6
   162a4:	mov	r1, r6
   162a8:	str	r6, [r7, #844]	; 0x34c
   162ac:	str	r3, [sp, #24]
   162b0:	bl	15880 <print_debug_data@@Base+0x400>
   162b4:	ldr	r3, [sp, #24]
   162b8:	ldr	r4, [r3]
   162bc:	cmp	r4, r6
   162c0:	ldrle	r0, [fp]
   162c4:	ble	16770 <dim_enter_array@@Base+0x87c>
   162c8:	ldr	r3, [sp, #28]
   162cc:	ldr	r2, [sp, #8]
   162d0:	str	r6, [sp, #24]
   162d4:	add	r8, r3, r2
   162d8:	ldr	r3, [sp, #40]	; 0x28
   162dc:	mov	r1, r6
   162e0:	add	r7, fp, r3
   162e4:	add	r8, sl, r8, lsl #4
   162e8:	mov	r2, #1
   162ec:	b	16304 <dim_enter_array@@Base+0x410>
   162f0:	ldr	r4, [r8, #804]	; 0x324
   162f4:	add	r6, r6, #1
   162f8:	cmp	r4, r6
   162fc:	add	r7, r7, #4
   16300:	ble	166f0 <dim_enter_array@@Base+0x7fc>
   16304:	ldr	r0, [r9, #4]!
   16308:	cmn	r0, #1
   1630c:	bne	162f0 <dim_enter_array@@Base+0x3fc>
   16310:	ldr	ip, [r7]
   16314:	ldr	r0, [r7, #32]
   16318:	cmp	ip, r0
   1631c:	beq	167d4 <dim_enter_array@@Base+0x8e0>
   16320:	str	r2, [r7, #68]	; 0x44
   16324:	str	r5, [sp, #24]
   16328:	b	162f0 <dim_enter_array@@Base+0x3fc>
   1632c:	cmp	r4, #0
   16330:	ble	16770 <dim_enter_array@@Base+0x87c>
   16334:	ldr	r3, [sp, #12]
   16338:	mov	r2, #0
   1633c:	add	ip, r3, #1
   16340:	add	r1, r4, ip
   16344:	add	r3, fp, ip, lsl #2
   16348:	add	r1, fp, r1, lsl #2
   1634c:	str	r2, [r3], #4
   16350:	cmp	r3, r1
   16354:	str	r2, [r3, #64]	; 0x40
   16358:	bne	1634c <dim_enter_array@@Base+0x458>
   1635c:	mov	r3, #0
   16360:	mvn	r2, #0
   16364:	cmp	r0, #0
   16368:	str	r3, [fp, #68]	; 0x44
   1636c:	str	r2, [fp, #104]	; 0x68
   16370:	ble	16730 <dim_enter_array@@Base+0x83c>
   16374:	str	r3, [sp, #24]
   16378:	mov	lr, #0
   1637c:	ldr	r2, [pc, #1264]	; 16874 <dim_enter_array@@Base+0x980>
   16380:	mov	ip, lr
   16384:	mov	r6, lr
   16388:	mov	r3, lr
   1638c:	mvn	r5, #0
   16390:	mov	r7, #1
   16394:	ldr	r1, [r2, #4]!
   16398:	cmp	r1, #0
   1639c:	movne	ip, #1
   163a0:	movne	r5, r3
   163a4:	add	r3, r3, #1
   163a8:	movne	r6, ip
   163ac:	movne	lr, r7
   163b0:	cmp	r3, r0
   163b4:	bne	16394 <dim_enter_array@@Base+0x4a0>
   163b8:	cmp	ip, #0
   163bc:	strne	r6, [fp, #68]	; 0x44
   163c0:	cmp	lr, #0
   163c4:	strne	r5, [fp, #104]	; 0x68
   163c8:	ldr	r2, [sp, #8]
   163cc:	ldr	r3, [sp, #28]
   163d0:	cmp	r4, #0
   163d4:	add	r3, r3, r2
   163d8:	mov	r2, #1
   163dc:	add	r3, sl, r3, lsl #4
   163e0:	str	r2, [r3, #840]	; 0x348
   163e4:	ble	167fc <dim_enter_array@@Base+0x908>
   163e8:	ldr	r3, [sp, #12]
   163ec:	add	ip, r3, r2
   163f0:	ldr	r3, [sp, #12]
   163f4:	add	ip, fp, ip, lsl #2
   163f8:	add	r3, r3, #29
   163fc:	mov	lr, #1
   16400:	lsl	r3, r3, #3
   16404:	str	r3, [sp, #40]	; 0x28
   16408:	add	r0, fp, r3
   1640c:	mov	r1, #0
   16410:	ldrd	r8, [sp, #16]
   16414:	mov	r7, r4
   16418:	b	16444 <dim_enter_array@@Base+0x550>
   1641c:	mul	r6, r2, r9
   16420:	asr	r5, r2, #31
   16424:	umull	r2, r3, r2, r8
   16428:	mla	r6, r8, r5, r6
   1642c:	add	r1, r1, #1
   16430:	add	r3, r6, r3
   16434:	cmp	r1, r7
   16438:	strd	r2, [r0, #8]
   1643c:	add	r0, r0, #8
   16440:	beq	16484 <dim_enter_array@@Base+0x590>
   16444:	ldr	r2, [ip], #4
   16448:	cmp	r1, #0
   1644c:	mul	lr, r2, lr
   16450:	beq	1641c <dim_enter_array@@Base+0x528>
   16454:	ldm	r0, {r3, r6}
   16458:	asr	r5, r2, #31
   1645c:	ldr	r4, [r0]
   16460:	mul	r3, r5, r3
   16464:	umull	r4, r5, r4, r2
   16468:	mla	r2, r2, r6, r3
   1646c:	add	r1, r1, #1
   16470:	add	r5, r2, r5
   16474:	cmp	r1, r7
   16478:	strd	r4, [r0, #8]
   1647c:	add	r0, r0, #8
   16480:	bne	16444 <dim_enter_array@@Base+0x550>
   16484:	ldr	r2, [sp, #8]
   16488:	ldr	r3, [sp, #28]
   1648c:	mov	r4, r7
   16490:	add	r3, r3, r2
   16494:	ldr	r2, [sp, #24]
   16498:	add	r3, sl, r3, lsl #4
   1649c:	cmp	r2, #0
   164a0:	str	lr, [r3, #840]	; 0x348
   164a4:	beq	16670 <dim_enter_array@@Base+0x77c>
   164a8:	ldr	r3, [sp, #12]
   164ac:	mov	r2, #0
   164b0:	add	r0, r3, #38	; 0x26
   164b4:	ldr	r3, [sp, #40]	; 0x28
   164b8:	add	r0, r0, r4
   164bc:	add	r1, r3, #72	; 0x48
   164c0:	add	r1, fp, r1
   164c4:	add	r0, fp, r0, lsl #3
   164c8:	mov	r3, #0
   164cc:	strd	r2, [r1], #8
   164d0:	cmp	r1, r0
   164d4:	bne	164cc <dim_enter_array@@Base+0x5d8>
   164d8:	ldrd	r2, [sp, #16]
   164dc:	cmp	r2, #1
   164e0:	sbcs	r3, r3, #0
   164e4:	blt	16578 <dim_enter_array@@Base+0x684>
   164e8:	ldr	r3, [sp, #12]
   164ec:	ldr	r8, [sp, #16]
   164f0:	add	r7, r3, #38	; 0x26
   164f4:	add	lr, r4, r3
   164f8:	add	r7, fp, r7, lsl #3
   164fc:	add	lr, fp, lr, lsl #2
   16500:	add	r9, fp, r3, lsl #2
   16504:	mov	r6, #0
   16508:	cmp	r4, #0
   1650c:	ble	1656c <dim_enter_array@@Base+0x678>
   16510:	lsl	r5, r6, #2
   16514:	mov	r2, r7
   16518:	mov	r3, r9
   1651c:	mov	ip, #1
   16520:	str	r6, [sp, #16]
   16524:	str	r7, [sp, #24]
   16528:	ldr	r1, [r3, #72]	; 0x48
   1652c:	add	r3, r3, #4
   16530:	cmp	r1, #0
   16534:	ldrne	r1, [r3, #104]	; 0x68
   16538:	ldreq	r1, [r3]
   1653c:	ldrne	r1, [r1, r5]
   16540:	mul	ip, r1, ip
   16544:	ldrd	r0, [r2]
   16548:	adds	r6, r0, ip
   1654c:	adc	r7, r1, ip, asr #31
   16550:	mov	r0, r6
   16554:	mov	r1, r7
   16558:	cmp	r3, lr
   1655c:	strd	r0, [r2], #8
   16560:	bne	16528 <dim_enter_array@@Base+0x634>
   16564:	ldr	r6, [sp, #16]
   16568:	ldr	r7, [sp, #24]
   1656c:	add	r6, r6, #1
   16570:	cmp	r6, r8
   16574:	bne	16508 <dim_enter_array@@Base+0x614>
   16578:	ldr	r2, [sp, #8]
   1657c:	ldr	r3, [sp, #28]
   16580:	add	r3, r3, r2
   16584:	add	sl, sl, r3, lsl #4
   16588:	ldr	r3, [sp, #12]
   1658c:	ldr	r2, [sl, #804]	; 0x324
   16590:	add	r3, r3, r2
   16594:	add	r3, r3, #37	; 0x25
   16598:	lsl	r3, r3, #3
   1659c:	ldrd	r0, [fp, r3]
   165a0:	cmp	r0, #1
   165a4:	sbcs	r3, r1, #0
   165a8:	blt	161c4 <dim_enter_array@@Base+0x2d0>
   165ac:	ldr	r3, [fp]
   165b0:	cmp	r2, #1
   165b4:	ldr	r0, [fp, r3, lsl #2]
   165b8:	add	r3, fp, r3, lsl #3
   165bc:	asr	r1, r0, #31
   165c0:	strd	r0, [r3, #168]	; 0xa8
   165c4:	ble	16618 <dim_enter_array@@Base+0x724>
   165c8:	ldr	r3, [sp, #12]
   165cc:	add	ip, r3, #20
   165d0:	add	ip, ip, r2
   165d4:	add	r6, r3, #1
   165d8:	add	r2, r3, r2
   165dc:	add	ip, fp, ip, lsl #3
   165e0:	add	ip, ip, #8
   165e4:	add	lr, fp, r2, lsl #2
   165e8:	add	r6, fp, r6, lsl #2
   165ec:	ldr	r2, [lr, #-4]!
   165f0:	ldr	r0, [ip, #4]
   165f4:	ldr	r1, [ip]
   165f8:	asr	r5, r2, #31
   165fc:	mul	r0, r2, r0
   16600:	umull	r2, r3, r1, r2
   16604:	mla	r1, r1, r5, r0
   16608:	cmp	r6, lr
   1660c:	add	r3, r1, r3
   16610:	strd	r2, [ip, #-8]!
   16614:	bne	165ec <dim_enter_array@@Base+0x6f8>
   16618:	ldr	r3, [sp, #12]
   1661c:	cmp	r3, #0
   16620:	ble	161c4 <dim_enter_array@@Base+0x2d0>
   16624:	ldr	r3, [sp, #12]
   16628:	ldr	lr, [pc, #584]	; 16878 <dim_enter_array@@Base+0x984>
   1662c:	add	r0, r3, #21
   16630:	add	ip, r3, #22
   16634:	add	r0, fp, r0, lsl #3
   16638:	add	ip, fp, ip, lsl #3
   1663c:	ldr	r2, [r0]
   16640:	ldr	r4, [ip, #4]
   16644:	ldr	r5, [ip]
   16648:	ldr	r1, [r0, #4]
   1664c:	mul	r4, r2, r4
   16650:	umull	r2, r3, r2, r5
   16654:	mla	r1, r5, r1, r4
   16658:	add	r3, r1, r3
   1665c:	strd	r2, [r0], #-8
   16660:	cmp	lr, r0
   16664:	bne	1663c <dim_enter_array@@Base+0x748>
   16668:	add	sp, sp, #92	; 0x5c
   1666c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16670:	ldr	r6, [sp, #12]
   16674:	ldrd	r8, [sp, #32]
   16678:	add	r0, r6, #38	; 0x26
   1667c:	add	r3, fp, r6, lsl #2
   16680:	lsl	r0, r0, #3
   16684:	ldr	r2, [r3, #4]
   16688:	cmp	r1, #1
   1668c:	add	lr, fp, r0
   16690:	mul	ip, r2, r9
   16694:	asr	r5, r2, #31
   16698:	umull	r2, r3, r2, r8
   1669c:	mla	ip, r8, r5, ip
   166a0:	add	r3, ip, r3
   166a4:	strd	r2, [fp, r0]
   166a8:	ble	16578 <dim_enter_array@@Base+0x684>
   166ac:	add	r5, r6, #37	; 0x25
   166b0:	add	r1, r5, r1
   166b4:	add	r4, r6, #2
   166b8:	add	r5, fp, r1, lsl #3
   166bc:	add	r4, fp, r4, lsl #2
   166c0:	ldr	r2, [r4], #4
   166c4:	ldr	r0, [lr, #4]
   166c8:	ldr	r1, [lr]
   166cc:	asr	r7, r2, #31
   166d0:	mul	r0, r2, r0
   166d4:	umull	r2, r3, r2, r1
   166d8:	mla	r1, r1, r7, r0
   166dc:	add	r3, r1, r3
   166e0:	strd	r2, [lr, #8]!
   166e4:	cmp	lr, r5
   166e8:	bne	166c0 <dim_enter_array@@Base+0x7cc>
   166ec:	b	16578 <dim_enter_array@@Base+0x684>
   166f0:	ldr	r0, [fp]
   166f4:	mov	r2, #0
   166f8:	mvn	r3, #0
   166fc:	cmp	r0, r2
   16700:	str	r2, [fp, #68]	; 0x44
   16704:	str	r3, [fp, #104]	; 0x68
   16708:	bgt	16378 <dim_enter_array@@Base+0x484>
   1670c:	b	163c8 <dim_enter_array@@Base+0x4d4>
   16710:	bl	196f0 <handle_coda_error@@Base>
   16714:	b	161e8 <dim_enter_array@@Base+0x2f4>
   16718:	bl	196f0 <handle_coda_error@@Base>
   1671c:	b	16148 <dim_enter_array@@Base+0x254>
   16720:	bl	196f0 <handle_coda_error@@Base>
   16724:	b	15f6c <dim_enter_array@@Base+0x78>
   16728:	bl	196f0 <handle_coda_error@@Base>
   1672c:	b	16230 <dim_enter_array@@Base+0x33c>
   16730:	ldr	r1, [sp, #8]
   16734:	ldr	r2, [sp, #28]
   16738:	str	r3, [sp, #24]
   1673c:	add	r2, r2, r1
   16740:	mov	r1, #1
   16744:	add	r2, sl, r2, lsl #4
   16748:	str	r1, [r2, #840]	; 0x348
   1674c:	b	163f0 <dim_enter_array@@Base+0x4fc>
   16750:	mvn	r2, #0
   16754:	str	r2, [r3, #808]	; 0x328
   16758:	b	15f9c <dim_enter_array@@Base+0xa8>
   1675c:	mov	r2, #1
   16760:	mov	r3, #0
   16764:	strd	r2, [sp, #32]
   16768:	strd	r2, [sp, #16]
   1676c:	b	16014 <dim_enter_array@@Base+0x120>
   16770:	mov	r3, #0
   16774:	mvn	r2, #0
   16778:	cmp	r0, #0
   1677c:	str	r3, [fp, #68]	; 0x44
   16780:	str	r2, [fp, #104]	; 0x68
   16784:	bgt	16374 <dim_enter_array@@Base+0x480>
   16788:	ldr	r2, [sp, #8]
   1678c:	ldr	r3, [sp, #28]
   16790:	add	r3, r3, r2
   16794:	mov	r2, #1
   16798:	add	r3, sl, r3, lsl #4
   1679c:	str	r2, [r3, #840]	; 0x348
   167a0:	ldr	r2, [sp, #12]
   167a4:	ldrd	r4, [sp, #32]
   167a8:	add	ip, r2, #38	; 0x26
   167ac:	add	r3, fp, r2, lsl #2
   167b0:	lsl	ip, ip, #3
   167b4:	ldr	r0, [r3, #4]
   167b8:	mul	r2, r0, r5
   167bc:	asr	r7, r0, #31
   167c0:	umull	r0, r1, r0, r4
   167c4:	mla	r3, r4, r7, r2
   167c8:	add	r1, r3, r1
   167cc:	strd	r0, [fp, ip]
   167d0:	b	16578 <dim_enter_array@@Base+0x684>
   167d4:	str	r1, [r7, #68]	; 0x44
   167d8:	ldr	r0, [r7, #104]	; 0x68
   167dc:	str	r2, [sp, #44]	; 0x2c
   167e0:	str	r1, [sp, #40]	; 0x28
   167e4:	bl	1229c <free@plt>
   167e8:	ldr	r1, [sp, #40]	; 0x28
   167ec:	ldr	r2, [sp, #44]	; 0x2c
   167f0:	str	r1, [r7, #104]	; 0x68
   167f4:	str	r1, [r7, #136]	; 0x88
   167f8:	b	162f0 <dim_enter_array@@Base+0x3fc>
   167fc:	ldr	r3, [sp, #24]
   16800:	cmp	r3, #0
   16804:	bne	164d8 <dim_enter_array@@Base+0x5e4>
   16808:	b	167a0 <dim_enter_array@@Base+0x8ac>
   1680c:	mov	r3, #456	; 0x1c8
   16810:	str	r3, [sp]
   16814:	ldr	r2, [sp, #24]
   16818:	ldr	r3, [pc, #76]	; 1686c <dim_enter_array@@Base+0x978>
   1681c:	ldr	r1, [pc, #88]	; 1687c <dim_enter_array@@Base+0x988>
   16820:	mvn	r0, #0
   16824:	bl	12254 <coda_set_error@plt>
   16828:	bl	196f0 <handle_coda_error@@Base>
   1682c:	b	160fc <dim_enter_array@@Base+0x208>
   16830:	ldr	r3, [pc, #44]	; 16864 <dim_enter_array@@Base+0x970>
   16834:	ldr	r2, [pc, #68]	; 16880 <dim_enter_array@@Base+0x98c>
   16838:	ldr	r1, [pc, #44]	; 1686c <dim_enter_array@@Base+0x978>
   1683c:	ldr	r0, [pc, #64]	; 16884 <dim_enter_array@@Base+0x990>
   16840:	bl	1265c <__assert_fail@plt>
   16844:	ldr	r3, [pc, #24]	; 16864 <dim_enter_array@@Base+0x970>
   16848:	ldr	r2, [pc, #56]	; 16888 <dim_enter_array@@Base+0x994>
   1684c:	ldr	r1, [pc, #24]	; 1686c <dim_enter_array@@Base+0x978>
   16850:	ldr	r0, [pc, #24]	; 16870 <dim_enter_array@@Base+0x97c>
   16854:	bl	1265c <__assert_fail@plt>
   16858:	strdeq	ip, [r2], -r0
   1685c:	andeq	ip, r2, ip, ror #3
   16860:	strheq	sp, [r2], -r8
   16864:	andeq	r9, r1, r4, ror ip
   16868:	andeq	r0, r0, r2, lsl #3
   1686c:	muleq	r1, r4, ip
   16870:	andeq	r9, r1, ip, ror #27
   16874:	strdeq	sp, [r2], -ip
   16878:	andeq	sp, r2, r0, ror #2
   1687c:	andeq	r9, r1, r4, lsr #20
   16880:	muleq	r0, r2, r1
   16884:	muleq	r1, r4, sp
   16888:	andeq	r0, r0, sp, asr r1

0001688c <dim_leave_array@@Base>:
   1688c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16890:	ldr	r8, [pc, #324]	; 169dc <dim_leave_array@@Base+0x150>
   16894:	ldr	r3, [r8, #3360]	; 0xd20
   16898:	cmp	r3, #0
   1689c:	blt	169c8 <dim_leave_array@@Base+0x13c>
   168a0:	add	r3, r3, r3, lsl #2
   168a4:	ldr	r6, [pc, #308]	; 169e0 <dim_leave_array@@Base+0x154>
   168a8:	add	r8, r8, r3, lsl #4
   168ac:	ldr	ip, [r6]
   168b0:	ldr	r2, [r8, #804]	; 0x324
   168b4:	ldr	r7, [r8, #800]	; 0x320
   168b8:	sub	ip, ip, r2
   168bc:	cmp	r2, #0
   168c0:	str	ip, [r6]
   168c4:	ble	16910 <dim_leave_array@@Base+0x84>
   168c8:	add	r5, r7, #18
   168cc:	mov	r4, #0
   168d0:	add	r5, r6, r5, lsl #2
   168d4:	b	168e8 <dim_leave_array@@Base+0x5c>
   168d8:	ldr	r2, [r8, #804]	; 0x324
   168dc:	add	r4, r4, #1
   168e0:	cmp	r2, r4
   168e4:	ble	1690c <dim_leave_array@@Base+0x80>
   168e8:	ldr	r3, [r5], #4
   168ec:	cmp	r3, #0
   168f0:	beq	168d8 <dim_leave_array@@Base+0x4c>
   168f4:	ldr	r0, [r5, #32]
   168f8:	bl	1229c <free@plt>
   168fc:	ldr	r2, [r8, #804]	; 0x324
   16900:	add	r4, r4, #1
   16904:	cmp	r2, r4
   16908:	bgt	168e8 <dim_leave_array@@Base+0x5c>
   1690c:	ldr	ip, [r6]
   16910:	mov	lr, #0
   16914:	mvn	r5, #0
   16918:	cmp	ip, #0
   1691c:	str	lr, [r6, #68]	; 0x44
   16920:	str	r5, [r6, #104]	; 0x68
   16924:	ble	16970 <dim_leave_array@@Base+0xe4>
   16928:	ldr	r1, [pc, #180]	; 169e4 <dim_leave_array@@Base+0x158>
   1692c:	mov	r4, lr
   16930:	mov	r8, lr
   16934:	mov	r3, lr
   16938:	mov	r9, #1
   1693c:	ldr	r0, [r1, #4]!
   16940:	cmp	r0, #0
   16944:	movne	r4, #1
   16948:	movne	r5, r3
   1694c:	add	r3, r3, #1
   16950:	movne	r8, r4
   16954:	movne	lr, r9
   16958:	cmp	r3, ip
   1695c:	bne	1693c <dim_leave_array@@Base+0xb0>
   16960:	cmp	r4, #0
   16964:	strne	r8, [r6, #68]	; 0x44
   16968:	cmp	lr, #0
   1696c:	strne	r5, [r6, #104]	; 0x68
   16970:	add	r2, r7, r2
   16974:	add	r2, r2, #37	; 0x25
   16978:	lsl	r2, r2, #3
   1697c:	ldrd	r2, [r2, r6]
   16980:	cmp	r2, #1
   16984:	sbcs	r3, r3, #0
   16988:	blt	169c4 <dim_leave_array@@Base+0x138>
   1698c:	cmp	r7, #0
   16990:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   16994:	add	r4, r7, #21
   16998:	add	r7, r7, #22
   1699c:	ldr	r5, [pc, #68]	; 169e8 <dim_leave_array@@Base+0x15c>
   169a0:	add	r4, r6, r4, lsl #3
   169a4:	add	r6, r6, r7, lsl #3
   169a8:	ldrd	r2, [r6]
   169ac:	ldrd	r0, [r4]
   169b0:	bl	19730 <handle_coda_error@@Base+0x40>
   169b4:	strd	r0, [r4], #-8
   169b8:	cmp	r4, r5
   169bc:	bne	169a8 <dim_leave_array@@Base+0x11c>
   169c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169c8:	ldr	r3, [pc, #28]	; 169ec <dim_leave_array@@Base+0x160>
   169cc:	ldr	r2, [pc, #28]	; 169f0 <dim_leave_array@@Base+0x164>
   169d0:	ldr	r1, [pc, #28]	; 169f4 <dim_leave_array@@Base+0x168>
   169d4:	ldr	r0, [pc, #28]	; 169f8 <dim_leave_array@@Base+0x16c>
   169d8:	bl	1265c <__assert_fail@plt>
   169dc:	strdeq	ip, [r2], -r0
   169e0:	strheq	sp, [r2], -r8
   169e4:	strdeq	sp, [r2], -ip
   169e8:	andeq	sp, r2, r0, ror #2
   169ec:	andeq	r9, r1, r4, lsl #25
   169f0:	andeq	r0, r0, r3, asr #4
   169f4:	muleq	r1, r4, ip
   169f8:	ldrdeq	r9, [r1], -r0

000169fc <dim_record_field_available@@Base>:
   169fc:	mov	r2, #0
   16a00:	mov	r1, r2
   16a04:	mov	r0, r2
   16a08:	b	155e4 <print_debug_data@@Base+0x164>

00016a0c <codadump_filter_remove@@Base>:
   16a0c:	push	{r4, lr}
   16a10:	subs	r4, r0, #0
   16a14:	beq	16a84 <codadump_filter_remove@@Base+0x78>
   16a18:	ldr	r0, [r4]
   16a1c:	cmp	r0, #0
   16a20:	popeq	{r4, pc}
   16a24:	ldr	r3, [r0, #8]
   16a28:	cmp	r3, #0
   16a2c:	beq	16a3c <codadump_filter_remove@@Base+0x30>
   16a30:	add	r0, r0, #8
   16a34:	bl	16a0c <codadump_filter_remove@@Base>
   16a38:	ldr	r0, [r4]
   16a3c:	ldr	r3, [r0, #4]
   16a40:	cmp	r3, #0
   16a44:	beq	16a54 <codadump_filter_remove@@Base+0x48>
   16a48:	add	r0, r0, #4
   16a4c:	bl	16a0c <codadump_filter_remove@@Base>
   16a50:	ldr	r0, [r4]
   16a54:	ldr	r3, [r0]
   16a58:	cmp	r3, #0
   16a5c:	beq	16a74 <codadump_filter_remove@@Base+0x68>
   16a60:	mov	r0, r3
   16a64:	bl	1229c <free@plt>
   16a68:	ldr	r0, [r4]
   16a6c:	mov	r3, #0
   16a70:	str	r3, [r0]
   16a74:	bl	1229c <free@plt>
   16a78:	mov	r3, #0
   16a7c:	str	r3, [r4]
   16a80:	pop	{r4, pc}
   16a84:	ldr	r3, [pc, #12]	; 16a98 <codadump_filter_remove@@Base+0x8c>
   16a88:	mov	r2, #192	; 0xc0
   16a8c:	ldr	r1, [pc, #8]	; 16a9c <codadump_filter_remove@@Base+0x90>
   16a90:	ldr	r0, [pc, #8]	; 16aa0 <codadump_filter_remove@@Base+0x94>
   16a94:	bl	1265c <__assert_fail@plt>
   16a98:	strdeq	r9, [r1], -r0
   16a9c:	andeq	r9, r1, r4, lsl #29
   16aa0:	ldrdeq	r9, [r1], -ip
   16aa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16aa8:	subs	r4, r0, #0
   16aac:	sub	sp, sp, #8
   16ab0:	beq	16cdc <codadump_filter_remove@@Base+0x2d0>
   16ab4:	cmp	r1, #0
   16ab8:	mov	r6, r1
   16abc:	beq	16cc8 <codadump_filter_remove@@Base+0x2bc>
   16ac0:	cmp	r2, #0
   16ac4:	mov	r5, r2
   16ac8:	beq	16cf0 <codadump_filter_remove@@Base+0x2e4>
   16acc:	ldrb	r3, [r4]
   16ad0:	sub	r2, r3, #9
   16ad4:	cmp	r3, #32
   16ad8:	cmpne	r2, #1
   16adc:	bhi	16af4 <codadump_filter_remove@@Base+0xe8>
   16ae0:	ldrb	r3, [r4, #1]!
   16ae4:	sub	r2, r3, #9
   16ae8:	cmp	r3, #32
   16aec:	cmpne	r2, #1
   16af0:	bls	16ae0 <codadump_filter_remove@@Base+0xd4>
   16af4:	cmp	r3, #0
   16af8:	cmpne	r3, #59	; 0x3b
   16afc:	movne	r2, #1
   16b00:	moveq	r2, #0
   16b04:	and	r3, r3, #253	; 0xfd
   16b08:	cmp	r3, #44	; 0x2c
   16b0c:	moveq	r3, #0
   16b10:	andne	r3, r2, #1
   16b14:	cmp	r3, #0
   16b18:	beq	16c30 <codadump_filter_remove@@Base+0x224>
   16b1c:	add	r1, r4, #1
   16b20:	mov	r7, #0
   16b24:	b	16b2c <codadump_filter_remove@@Base+0x120>
   16b28:	mov	r7, r9
   16b2c:	ldrb	r3, [r1]
   16b30:	mov	r8, r1
   16b34:	add	r9, r7, #1
   16b38:	cmp	r3, #0
   16b3c:	cmpne	r3, #59	; 0x3b
   16b40:	movne	r2, #1
   16b44:	moveq	r2, #0
   16b48:	and	r3, r3, #253	; 0xfd
   16b4c:	cmp	r3, #44	; 0x2c
   16b50:	moveq	r3, #0
   16b54:	andne	r3, r2, #1
   16b58:	cmp	r3, #0
   16b5c:	add	r1, r1, #1
   16b60:	bne	16b28 <codadump_filter_remove@@Base+0x11c>
   16b64:	mov	r0, #12
   16b68:	bl	123d4 <malloc@plt>
   16b6c:	cmp	r0, #0
   16b70:	str	r0, [r6]
   16b74:	movne	sl, r0
   16b78:	beq	16ca0 <codadump_filter_remove@@Base+0x294>
   16b7c:	add	r7, r7, #2
   16b80:	mov	r0, r7
   16b84:	bl	123d4 <malloc@plt>
   16b88:	cmp	r0, #0
   16b8c:	str	r0, [sl]
   16b90:	beq	16c74 <codadump_filter_remove@@Base+0x268>
   16b94:	mov	r2, r9
   16b98:	mov	r1, r4
   16b9c:	bl	124d0 <strncpy@plt>
   16ba0:	ldr	r1, [r6]
   16ba4:	mov	r3, #0
   16ba8:	sub	r2, r9, #1
   16bac:	str	r3, [r1, #4]
   16bb0:	ldr	r1, [r6]
   16bb4:	str	r3, [r1, #8]
   16bb8:	ldr	r3, [r6]
   16bbc:	ldr	lr, [r3]
   16bc0:	add	r1, lr, r2
   16bc4:	ldrb	r3, [lr, r2]
   16bc8:	sub	r0, r3, #9
   16bcc:	cmp	r3, #32
   16bd0:	cmpne	r0, #1
   16bd4:	bls	16c14 <codadump_filter_remove@@Base+0x208>
   16bd8:	mov	ip, r9
   16bdc:	mov	r3, #0
   16be0:	strb	r3, [lr, ip]
   16be4:	ldrb	r3, [r8]
   16be8:	cmp	r3, #46	; 0x2e
   16bec:	beq	16c3c <codadump_filter_remove@@Base+0x230>
   16bf0:	cmp	r3, #44	; 0x2c
   16bf4:	cmpne	r3, #59	; 0x3b
   16bf8:	addeq	r9, r9, #1
   16bfc:	addeq	r4, r4, r9
   16c00:	streq	r4, [r5]
   16c04:	strne	r8, [r5]
   16c08:	add	sp, sp, #8
   16c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c10:	sub	r2, r2, #1
   16c14:	ldrb	r3, [r1, #-1]!
   16c18:	mov	ip, r2
   16c1c:	sub	r0, r3, #9
   16c20:	cmp	r3, #32
   16c24:	cmpne	r0, #1
   16c28:	bls	16c10 <codadump_filter_remove@@Base+0x204>
   16c2c:	b	16bdc <codadump_filter_remove@@Base+0x1d0>
   16c30:	str	r3, [r6]
   16c34:	add	sp, sp, #8
   16c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c3c:	ldr	r1, [r6]
   16c40:	add	r0, r9, #1
   16c44:	add	r0, r4, r0
   16c48:	mov	r2, r5
   16c4c:	add	r1, r1, #4
   16c50:	bl	16aa4 <codadump_filter_remove@@Base+0x98>
   16c54:	ldr	r3, [r6]
   16c58:	ldr	r3, [r3, #4]
   16c5c:	cmp	r3, #0
   16c60:	bne	16c08 <codadump_filter_remove@@Base+0x1fc>
   16c64:	mov	r0, r6
   16c68:	add	sp, sp, #8
   16c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16c70:	b	16a0c <codadump_filter_remove@@Base>
   16c74:	mov	r3, #76	; 0x4c
   16c78:	mvn	r0, #0
   16c7c:	mov	r2, r7
   16c80:	str	r3, [sp]
   16c84:	ldr	r1, [pc, #120]	; 16d04 <codadump_filter_remove@@Base+0x2f8>
   16c88:	ldr	r3, [pc, #120]	; 16d08 <codadump_filter_remove@@Base+0x2fc>
   16c8c:	bl	12254 <coda_set_error@plt>
   16c90:	bl	196f0 <handle_coda_error@@Base>
   16c94:	ldr	r3, [r6]
   16c98:	ldr	r0, [r3]
   16c9c:	b	16b94 <codadump_filter_remove@@Base+0x188>
   16ca0:	mov	r3, #69	; 0x45
   16ca4:	str	r3, [sp]
   16ca8:	mov	r2, #12
   16cac:	ldr	r3, [pc, #84]	; 16d08 <codadump_filter_remove@@Base+0x2fc>
   16cb0:	ldr	r1, [pc, #84]	; 16d0c <codadump_filter_remove@@Base+0x300>
   16cb4:	mvn	r0, #0
   16cb8:	bl	12254 <coda_set_error@plt>
   16cbc:	bl	196f0 <handle_coda_error@@Base>
   16cc0:	ldr	sl, [r6]
   16cc4:	b	16b7c <codadump_filter_remove@@Base+0x170>
   16cc8:	ldr	r3, [pc, #64]	; 16d10 <codadump_filter_remove@@Base+0x304>
   16ccc:	mov	r2, #45	; 0x2d
   16cd0:	ldr	r1, [pc, #48]	; 16d08 <codadump_filter_remove@@Base+0x2fc>
   16cd4:	ldr	r0, [pc, #56]	; 16d14 <codadump_filter_remove@@Base+0x308>
   16cd8:	bl	1265c <__assert_fail@plt>
   16cdc:	ldr	r3, [pc, #44]	; 16d10 <codadump_filter_remove@@Base+0x304>
   16ce0:	mov	r2, #44	; 0x2c
   16ce4:	ldr	r1, [pc, #28]	; 16d08 <codadump_filter_remove@@Base+0x2fc>
   16ce8:	ldr	r0, [pc, #40]	; 16d18 <codadump_filter_remove@@Base+0x30c>
   16cec:	bl	1265c <__assert_fail@plt>
   16cf0:	ldr	r3, [pc, #24]	; 16d10 <codadump_filter_remove@@Base+0x304>
   16cf4:	mov	r2, #46	; 0x2e
   16cf8:	ldr	r1, [pc, #8]	; 16d08 <codadump_filter_remove@@Base+0x2fc>
   16cfc:	ldr	r0, [pc, #24]	; 16d1c <codadump_filter_remove@@Base+0x310>
   16d00:	bl	1265c <__assert_fail@plt>
   16d04:	andeq	r9, r1, r0, lsl pc
   16d08:	andeq	r9, r1, r4, lsl #29
   16d0c:	andeq	r9, r1, r4, lsr #20
   16d10:	andeq	r9, r1, r8, lsl #28
   16d14:	ldrdeq	r9, [r1], -ip
   16d18:	andeq	r9, r1, ip, ror #29
   16d1c:	andeq	r9, r1, r0, lsl #30
   16d20:	push	{r4, r5, r6, lr}
   16d24:	sub	sp, sp, #8
   16d28:	cmp	r0, #0
   16d2c:	str	r1, [sp, #4]
   16d30:	beq	16dc4 <codadump_filter_remove@@Base+0x3b8>
   16d34:	subs	r5, r1, #0
   16d38:	beq	16d90 <codadump_filter_remove@@Base+0x384>
   16d3c:	ldr	r4, [r0]
   16d40:	cmp	r4, #0
   16d44:	streq	r5, [r0]
   16d48:	beq	16d90 <codadump_filter_remove@@Base+0x384>
   16d4c:	ldr	r1, [r5]
   16d50:	ldr	r0, [r4]
   16d54:	bl	1220c <strcmp@plt>
   16d58:	subs	r6, r0, #0
   16d5c:	bne	16d98 <codadump_filter_remove@@Base+0x38c>
   16d60:	ldr	r3, [r4, #4]
   16d64:	cmp	r3, #0
   16d68:	beq	16d88 <codadump_filter_remove@@Base+0x37c>
   16d6c:	ldr	r1, [r5, #4]
   16d70:	add	r0, r4, #4
   16d74:	cmp	r1, #0
   16d78:	beq	16dbc <codadump_filter_remove@@Base+0x3b0>
   16d7c:	bl	16d20 <codadump_filter_remove@@Base+0x314>
   16d80:	ldr	r3, [sp, #4]
   16d84:	str	r6, [r3, #4]
   16d88:	add	r0, sp, #4
   16d8c:	bl	16a0c <codadump_filter_remove@@Base>
   16d90:	add	sp, sp, #8
   16d94:	pop	{r4, r5, r6, pc}
   16d98:	ldr	r3, [r4, #8]
   16d9c:	cmp	r3, #0
   16da0:	streq	r5, [r4, #8]
   16da4:	beq	16d90 <codadump_filter_remove@@Base+0x384>
   16da8:	mov	r1, r5
   16dac:	add	r0, r4, #8
   16db0:	bl	16d20 <codadump_filter_remove@@Base+0x314>
   16db4:	add	sp, sp, #8
   16db8:	pop	{r4, r5, r6, pc}
   16dbc:	bl	16a0c <codadump_filter_remove@@Base>
   16dc0:	b	16d88 <codadump_filter_remove@@Base+0x37c>
   16dc4:	ldr	r3, [pc, #12]	; 16dd8 <codadump_filter_remove@@Base+0x3cc>
   16dc8:	mov	r2, #117	; 0x75
   16dcc:	ldr	r1, [pc, #8]	; 16ddc <codadump_filter_remove@@Base+0x3d0>
   16dd0:	ldr	r0, [pc, #8]	; 16de0 <codadump_filter_remove@@Base+0x3d4>
   16dd4:	bl	1265c <__assert_fail@plt>
   16dd8:	andeq	r9, r1, r8, lsl lr
   16ddc:	andeq	r9, r1, r4, lsl #29
   16de0:	ldrdeq	r9, [r1], -ip

00016de4 <codadump_filter_create@@Base>:
   16de4:	push	{r4, lr}
   16de8:	sub	sp, sp, #16
   16dec:	mov	r4, #0
   16df0:	cmp	r0, #0
   16df4:	str	r0, [sp, #12]
   16df8:	str	r4, [sp, #4]
   16dfc:	str	r4, [sp, #8]
   16e00:	beq	16e50 <codadump_filter_create@@Base+0x6c>
   16e04:	ldrb	r3, [r0]
   16e08:	cmp	r3, r4
   16e0c:	bne	16e2c <codadump_filter_create@@Base+0x48>
   16e10:	b	16e64 <codadump_filter_create@@Base+0x80>
   16e14:	bl	16d20 <codadump_filter_remove@@Base+0x314>
   16e18:	ldr	r0, [sp, #12]
   16e1c:	str	r4, [sp, #8]
   16e20:	ldrb	r3, [r0]
   16e24:	cmp	r3, #0
   16e28:	beq	16e58 <codadump_filter_create@@Base+0x74>
   16e2c:	add	r1, sp, #8
   16e30:	add	r2, sp, #12
   16e34:	bl	16aa4 <codadump_filter_remove@@Base+0x98>
   16e38:	ldr	r3, [sp, #8]
   16e3c:	add	r0, sp, #4
   16e40:	subs	r1, r3, #0
   16e44:	bne	16e14 <codadump_filter_create@@Base+0x30>
   16e48:	bl	16a0c <codadump_filter_remove@@Base>
   16e4c:	ldr	r0, [sp, #4]
   16e50:	add	sp, sp, #16
   16e54:	pop	{r4, pc}
   16e58:	ldr	r0, [sp, #4]
   16e5c:	add	sp, sp, #16
   16e60:	pop	{r4, pc}
   16e64:	mov	r0, r3
   16e68:	b	16e50 <codadump_filter_create@@Base+0x6c>

00016e6c <codadump_filter_get_fieldname@@Base>:
   16e6c:	cmp	r0, #0
   16e70:	beq	16e7c <codadump_filter_get_fieldname@@Base+0x10>
   16e74:	ldr	r0, [r0]
   16e78:	bx	lr
   16e7c:	push	{r4, lr}
   16e80:	mov	r2, #216	; 0xd8
   16e84:	ldr	r3, [pc, #8]	; 16e94 <codadump_filter_get_fieldname@@Base+0x28>
   16e88:	ldr	r1, [pc, #8]	; 16e98 <codadump_filter_get_fieldname@@Base+0x2c>
   16e8c:	ldr	r0, [pc, #8]	; 16e9c <codadump_filter_get_fieldname@@Base+0x30>
   16e90:	bl	1265c <__assert_fail@plt>
   16e94:	andeq	r9, r1, r4, lsr #28
   16e98:	andeq	r9, r1, r4, lsl #29
   16e9c:	ldrdeq	r9, [r1], -ip

00016ea0 <codadump_filter_get_subfilter@@Base>:
   16ea0:	cmp	r0, #0
   16ea4:	beq	16eb0 <codadump_filter_get_subfilter@@Base+0x10>
   16ea8:	ldr	r0, [r0, #4]
   16eac:	bx	lr
   16eb0:	push	{r4, lr}
   16eb4:	mov	r2, #223	; 0xdf
   16eb8:	ldr	r3, [pc, #8]	; 16ec8 <codadump_filter_get_subfilter@@Base+0x28>
   16ebc:	ldr	r1, [pc, #8]	; 16ecc <codadump_filter_get_subfilter@@Base+0x2c>
   16ec0:	ldr	r0, [pc, #8]	; 16ed0 <codadump_filter_get_subfilter@@Base+0x30>
   16ec4:	bl	1265c <__assert_fail@plt>
   16ec8:	andeq	r9, r1, r4, asr #28
   16ecc:	andeq	r9, r1, r4, lsl #29
   16ed0:	ldrdeq	r9, [r1], -ip

00016ed4 <codadump_filter_get_next_filter@@Base>:
   16ed4:	cmp	r0, #0
   16ed8:	beq	16ee4 <codadump_filter_get_next_filter@@Base+0x10>
   16edc:	ldr	r0, [r0, #8]
   16ee0:	bx	lr
   16ee4:	push	{r4, lr}
   16ee8:	mov	r2, #230	; 0xe6
   16eec:	ldr	r3, [pc, #8]	; 16efc <codadump_filter_get_next_filter@@Base+0x28>
   16ef0:	ldr	r1, [pc, #8]	; 16f00 <codadump_filter_get_next_filter@@Base+0x2c>
   16ef4:	ldr	r0, [pc, #8]	; 16f04 <codadump_filter_get_next_filter@@Base+0x30>
   16ef8:	bl	1265c <__assert_fail@plt>
   16efc:	andeq	r9, r1, r4, ror #28
   16f00:	andeq	r9, r1, r4, lsl #29
   16f04:	ldrdeq	r9, [r1], -ip
   16f08:	push	{r0, r1, r2, r3}
   16f0c:	ldr	r1, [pc, #44]	; 16f40 <codadump_filter_get_next_filter@@Base+0x6c>
   16f10:	push	{lr}		; (str lr, [sp, #-4]!)
   16f14:	sub	sp, sp, #12
   16f18:	add	r3, sp, #20
   16f1c:	mov	r2, r3
   16f20:	ldr	r0, [r1]
   16f24:	ldr	r1, [sp, #16]
   16f28:	str	r3, [sp, #4]
   16f2c:	bl	12560 <vfprintf@plt>
   16f30:	add	sp, sp, #12
   16f34:	pop	{lr}		; (ldr lr, [sp], #4)
   16f38:	add	sp, sp, #16
   16f3c:	bx	lr
   16f40:	muleq	r2, r8, r0
   16f44:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f48:	subs	r4, r1, #0
   16f4c:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f50:	mov	fp, r0
   16f54:	ldr	r8, [pc, #208]	; 1702c <codadump_filter_get_next_filter@@Base+0x158>
   16f58:	ldr	sl, [pc, #208]	; 17030 <codadump_filter_get_next_filter@@Base+0x15c>
   16f5c:	ldr	r9, [pc, #208]	; 17034 <codadump_filter_get_next_filter@@Base+0x160>
   16f60:	ldr	r7, [pc, #208]	; 17038 <codadump_filter_get_next_filter@@Base+0x164>
   16f64:	ldr	r6, [pc, #208]	; 1703c <codadump_filter_get_next_filter@@Base+0x168>
   16f68:	ldr	r5, [pc, #208]	; 17040 <codadump_filter_get_next_filter@@Base+0x16c>
   16f6c:	add	r4, r0, r4
   16f70:	b	16fa8 <codadump_filter_get_next_filter@@Base+0xd4>
   16f74:	cmp	r1, #9
   16f78:	beq	17020 <codadump_filter_get_next_filter@@Base+0x14c>
   16f7c:	cmp	r1, #10
   16f80:	beq	17014 <codadump_filter_get_next_filter@@Base+0x140>
   16f84:	cmp	r1, #8
   16f88:	beq	17008 <codadump_filter_get_next_filter@@Base+0x134>
   16f8c:	sub	r3, r1, #32
   16f90:	cmp	r3, #94	; 0x5e
   16f94:	movls	r0, r9
   16f98:	movhi	r0, sl
   16f9c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   16fa0:	cmp	fp, r4
   16fa4:	beq	16fe0 <codadump_filter_get_next_filter@@Base+0x10c>
   16fa8:	ldrb	r1, [fp], #1
   16fac:	cmp	r1, #12
   16fb0:	beq	16fe4 <codadump_filter_get_next_filter@@Base+0x110>
   16fb4:	bls	16f74 <codadump_filter_get_next_filter@@Base+0xa0>
   16fb8:	cmp	r1, #34	; 0x22
   16fbc:	beq	16ffc <codadump_filter_get_next_filter@@Base+0x128>
   16fc0:	cmp	r1, #92	; 0x5c
   16fc4:	beq	16ff0 <codadump_filter_get_next_filter@@Base+0x11c>
   16fc8:	cmp	r1, #13
   16fcc:	bne	16f8c <codadump_filter_get_next_filter@@Base+0xb8>
   16fd0:	mov	r0, r5
   16fd4:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   16fd8:	cmp	fp, r4
   16fdc:	bne	16fa8 <codadump_filter_get_next_filter@@Base+0xd4>
   16fe0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fe4:	mov	r0, r8
   16fe8:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   16fec:	b	16fa0 <codadump_filter_get_next_filter@@Base+0xcc>
   16ff0:	mov	r0, r6
   16ff4:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   16ff8:	b	16fa0 <codadump_filter_get_next_filter@@Base+0xcc>
   16ffc:	mov	r0, r7
   17000:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17004:	b	16fa0 <codadump_filter_get_next_filter@@Base+0xcc>
   17008:	ldr	r0, [pc, #52]	; 17044 <codadump_filter_get_next_filter@@Base+0x170>
   1700c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17010:	b	16fa0 <codadump_filter_get_next_filter@@Base+0xcc>
   17014:	ldr	r0, [pc, #44]	; 17048 <codadump_filter_get_next_filter@@Base+0x174>
   17018:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   1701c:	b	16fa0 <codadump_filter_get_next_filter@@Base+0xcc>
   17020:	ldr	r0, [pc, #36]	; 1704c <codadump_filter_get_next_filter@@Base+0x178>
   17024:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17028:	b	16fa0 <codadump_filter_get_next_filter@@Base+0xcc>
   1702c:	andeq	r9, r1, r8, ror sl
   17030:	andeq	r9, r1, r8, asr #30
   17034:	strdeq	r9, [r1], -r4
   17038:	andeq	r9, r1, r4, asr #30
   1703c:	andeq	r9, r1, r0, lsl #21
   17040:	andeq	r9, r1, ip, ror sl
   17044:	andeq	r9, r1, r8, ror #20
   17048:	andeq	r9, r1, r0, ror sl
   1704c:	andeq	r9, r1, ip, ror #20
   17050:	ldr	r3, [pc, #2048]	; 17858 <codadump_filter_get_next_filter@@Base+0x984>
   17054:	push	{r4, r5, r6, r7, r8, r9, lr}
   17058:	mov	r2, #0
   1705c:	ldr	r3, [r3]
   17060:	sub	sp, sp, #76	; 0x4c
   17064:	cmp	r3, r2
   17068:	str	r2, [sp, #12]
   1706c:	mov	r4, r0
   17070:	bne	17338 <codadump_filter_get_next_filter@@Base+0x464>
   17074:	add	r1, sp, #8
   17078:	mov	r0, r4
   1707c:	bl	1232c <coda_cursor_get_type_class@plt>
   17080:	cmp	r0, #0
   17084:	bne	17330 <codadump_filter_get_next_filter@@Base+0x45c>
   17088:	ldr	r3, [sp, #8]
   1708c:	cmp	r3, #6
   17090:	ldrls	pc, [pc, r3, lsl #2]
   17094:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17098:	andeq	r7, r1, r8, asr r2
   1709c:	andeq	r7, r1, r4, lsr #3
   170a0:	andeq	r7, r1, r4, asr #2
   170a4:	andeq	r7, r1, r4, asr #2
   170a8:	andeq	r7, r1, r4, asr #2
   170ac:	andeq	r7, r1, r4, asr #2
   170b0:	andeq	r7, r1, r0, lsl r1
   170b4:	mov	r0, r4
   170b8:	add	r1, sp, #32
   170bc:	bl	1244c <coda_cursor_read_double@plt>
   170c0:	cmp	r0, #0
   170c4:	bne	1776c <codadump_filter_get_next_filter@@Base+0x898>
   170c8:	vldr	d0, [sp, #32]
   170cc:	bl	12458 <coda_isNaN@plt>
   170d0:	cmp	r0, #0
   170d4:	bne	170e8 <codadump_filter_get_next_filter@@Base+0x214>
   170d8:	vldr	d0, [sp, #32]
   170dc:	bl	122fc <coda_isInf@plt>
   170e0:	cmp	r0, #0
   170e4:	beq	17784 <codadump_filter_get_next_filter@@Base+0x8b0>
   170e8:	ldrd	r2, [sp, #32]
   170ec:	ldr	r0, [pc, #1896]	; 1785c <codadump_filter_get_next_filter@@Base+0x988>
   170f0:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   170f4:	ldr	r3, [sp, #12]
   170f8:	cmp	r3, #0
   170fc:	beq	17108 <codadump_filter_get_next_filter@@Base+0x234>
   17100:	ldr	r0, [pc, #1880]	; 17860 <codadump_filter_get_next_filter@@Base+0x98c>
   17104:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17108:	add	sp, sp, #76	; 0x4c
   1710c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17110:	add	r1, sp, #28
   17114:	mov	r0, r4
   17118:	bl	12368 <coda_cursor_get_special_type@plt>
   1711c:	cmp	r0, #0
   17120:	bne	173a0 <codadump_filter_get_next_filter@@Base+0x4cc>
   17124:	ldr	r3, [sp, #28]
   17128:	cmp	r3, #3
   1712c:	ldrls	pc, [pc, r3, lsl #2]
   17130:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17134:	andeq	r7, r1, r8, lsr #7
   17138:			; <UNDEFINED> instruction: 0x000174b4
   1713c:	strheq	r7, [r1], -r4
   17140:	andeq	r7, r1, r4, lsl #9
   17144:	add	r1, sp, #28
   17148:	mov	r0, r4
   1714c:	bl	123c8 <coda_cursor_get_read_type@plt>
   17150:	cmp	r0, #0
   17154:	bne	17398 <codadump_filter_get_next_filter@@Base+0x4c4>
   17158:	ldr	r3, [sp, #28]
   1715c:	add	r3, r3, #1
   17160:	cmp	r3, #13
   17164:	ldrls	pc, [pc, r3, lsl #2]
   17168:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   1716c:	andeq	r7, r1, r8, lsr #7
   17170:	andeq	r7, r1, r4, asr #13
   17174:	andeq	r7, r1, r0, lsr #11
   17178:	andeq	r7, r1, r4, asr #13
   1717c:	andeq	r7, r1, r0, lsr #11
   17180:	andeq	r7, r1, r4, asr #13
   17184:	andeq	r7, r1, r0, lsr #11
   17188:	muleq	r1, r4, r6
   1718c:	andeq	r7, r1, r4, asr #11
   17190:	strdeq	r7, [r1], -r4
   17194:	strdeq	r7, [r1], -r4
   17198:	ldrdeq	r7, [r1], -r8
   1719c:	andeq	r7, r1, r4, lsr #12
   171a0:	andeq	r7, r1, r0, lsl r5
   171a4:	ldr	r0, [pc, #1720]	; 17864 <codadump_filter_get_next_filter@@Base+0x990>
   171a8:	add	r5, sp, #40	; 0x28
   171ac:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   171b0:	mov	r2, r5
   171b4:	add	r1, sp, #32
   171b8:	mov	r0, r4
   171bc:	bl	12530 <coda_cursor_get_array_dim@plt>
   171c0:	cmp	r0, #0
   171c4:	bne	17390 <codadump_filter_get_next_filter@@Base+0x4bc>
   171c8:	ldr	r3, [sp, #32]
   171cc:	cmp	r3, #0
   171d0:	blt	17324 <codadump_filter_get_next_filter@@Base+0x450>
   171d4:	beq	17760 <codadump_filter_get_next_filter@@Base+0x88c>
   171d8:	mov	r2, r5
   171dc:	add	r3, r5, r3, lsl #2
   171e0:	mov	r5, #1
   171e4:	ldr	r1, [r2], #4
   171e8:	cmp	r2, r3
   171ec:	mul	r5, r1, r5
   171f0:	bne	171e4 <codadump_filter_get_next_filter@@Base+0x310>
   171f4:	cmp	r5, #0
   171f8:	subgt	r7, r5, #1
   171fc:	ble	17324 <codadump_filter_get_next_filter@@Base+0x450>
   17200:	mov	r0, r4
   17204:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   17208:	cmp	r0, #0
   1720c:	bne	17758 <codadump_filter_get_next_filter@@Base+0x884>
   17210:	ldr	r8, [pc, #1616]	; 17868 <codadump_filter_get_next_filter@@Base+0x994>
   17214:	mov	r6, #0
   17218:	b	17224 <codadump_filter_get_next_filter@@Base+0x350>
   1721c:	cmp	r5, r6
   17220:	ble	1731c <codadump_filter_get_next_filter@@Base+0x448>
   17224:	mov	r0, r4
   17228:	bl	17050 <codadump_filter_get_next_filter@@Base+0x17c>
   1722c:	cmp	r6, r7
   17230:	mov	r0, r8
   17234:	add	r6, r6, #1
   17238:	bge	1721c <codadump_filter_get_next_filter@@Base+0x348>
   1723c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17240:	mov	r0, r4
   17244:	bl	12470 <coda_cursor_goto_next_array_element@plt>
   17248:	cmp	r0, #0
   1724c:	beq	1721c <codadump_filter_get_next_filter@@Base+0x348>
   17250:	bl	196f0 <handle_coda_error@@Base>
   17254:	b	1721c <codadump_filter_get_next_filter@@Base+0x348>
   17258:	ldr	r0, [pc, #1548]	; 1786c <codadump_filter_get_next_filter@@Base+0x998>
   1725c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17260:	add	r1, sp, #16
   17264:	mov	r0, r4
   17268:	bl	12284 <coda_cursor_get_num_elements@plt>
   1726c:	cmp	r0, #0
   17270:	bne	17388 <codadump_filter_get_next_filter@@Base+0x4b4>
   17274:	ldr	r3, [sp, #16]
   17278:	cmp	r3, #0
   1727c:	ble	17310 <codadump_filter_get_next_filter@@Base+0x43c>
   17280:	add	r1, sp, #20
   17284:	mov	r0, r4
   17288:	bl	122e4 <coda_cursor_get_type@plt>
   1728c:	cmp	r0, #0
   17290:	bne	17748 <codadump_filter_get_next_filter@@Base+0x874>
   17294:	add	r1, sp, #24
   17298:	ldr	r0, [sp, #20]
   1729c:	bl	124e8 <coda_type_get_record_union_status@plt>
   172a0:	cmp	r0, #0
   172a4:	bne	17740 <codadump_filter_get_next_filter@@Base+0x86c>
   172a8:	ldr	r3, [sp, #24]
   172ac:	cmp	r3, #0
   172b0:	beq	173bc <codadump_filter_get_next_filter@@Base+0x4e8>
   172b4:	add	r1, sp, #28
   172b8:	mov	r0, r4
   172bc:	bl	125d8 <coda_cursor_get_available_union_field_index@plt>
   172c0:	cmp	r0, #0
   172c4:	bne	176f0 <codadump_filter_get_next_filter@@Base+0x81c>
   172c8:	add	r2, sp, #40	; 0x28
   172cc:	ldr	r1, [sp, #28]
   172d0:	ldr	r0, [sp, #20]
   172d4:	bl	12620 <coda_type_get_record_field_name@plt>
   172d8:	cmp	r0, #0
   172dc:	bne	17700 <codadump_filter_get_next_filter@@Base+0x82c>
   172e0:	ldr	r1, [sp, #28]
   172e4:	mov	r0, r4
   172e8:	bl	123a4 <coda_cursor_goto_record_field_by_index@plt>
   172ec:	cmp	r0, #0
   172f0:	bne	176f8 <codadump_filter_get_next_filter@@Base+0x824>
   172f4:	ldr	r1, [sp, #40]	; 0x28
   172f8:	ldr	r0, [pc, #1392]	; 17870 <codadump_filter_get_next_filter@@Base+0x99c>
   172fc:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17300:	mov	r0, r4
   17304:	bl	17050 <codadump_filter_get_next_filter@@Base+0x17c>
   17308:	mov	r0, r4
   1730c:	bl	12404 <coda_cursor_goto_parent@plt>
   17310:	ldr	r0, [pc, #1352]	; 17860 <codadump_filter_get_next_filter@@Base+0x98c>
   17314:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17318:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   1731c:	mov	r0, r4
   17320:	bl	12404 <coda_cursor_goto_parent@plt>
   17324:	ldr	r0, [pc, #1352]	; 17874 <codadump_filter_get_next_filter@@Base+0x9a0>
   17328:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   1732c:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17330:	bl	196f0 <handle_coda_error@@Base>
   17334:	b	17088 <codadump_filter_get_next_filter@@Base+0x1b4>
   17338:	add	r1, sp, #12
   1733c:	bl	12320 <coda_cursor_has_attributes@plt>
   17340:	cmp	r0, #0
   17344:	bne	173b4 <codadump_filter_get_next_filter@@Base+0x4e0>
   17348:	ldr	r3, [sp, #12]
   1734c:	cmp	r3, #0
   17350:	beq	17074 <codadump_filter_get_next_filter@@Base+0x1a0>
   17354:	ldr	r0, [pc, #1308]	; 17878 <codadump_filter_get_next_filter@@Base+0x9a4>
   17358:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   1735c:	mov	r0, r4
   17360:	bl	124a0 <coda_cursor_goto_attributes@plt>
   17364:	cmp	r0, #0
   17368:	bne	17750 <codadump_filter_get_next_filter@@Base+0x87c>
   1736c:	mov	r0, r4
   17370:	bl	17050 <codadump_filter_get_next_filter@@Base+0x17c>
   17374:	mov	r0, r4
   17378:	bl	12404 <coda_cursor_goto_parent@plt>
   1737c:	ldr	r0, [pc, #1272]	; 1787c <codadump_filter_get_next_filter@@Base+0x9a8>
   17380:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17384:	b	17074 <codadump_filter_get_next_filter@@Base+0x1a0>
   17388:	bl	196f0 <handle_coda_error@@Base>
   1738c:	b	17274 <codadump_filter_get_next_filter@@Base+0x3a0>
   17390:	bl	196f0 <handle_coda_error@@Base>
   17394:	b	171c8 <codadump_filter_get_next_filter@@Base+0x2f4>
   17398:	bl	196f0 <handle_coda_error@@Base>
   1739c:	b	17158 <codadump_filter_get_next_filter@@Base+0x284>
   173a0:	bl	196f0 <handle_coda_error@@Base>
   173a4:	b	17124 <codadump_filter_get_next_filter@@Base+0x250>
   173a8:	ldr	r0, [pc, #1232]	; 17880 <codadump_filter_get_next_filter@@Base+0x9ac>
   173ac:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   173b0:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   173b4:	bl	196f0 <handle_coda_error@@Base>
   173b8:	b	17348 <codadump_filter_get_next_filter@@Base+0x474>
   173bc:	mov	r0, r4
   173c0:	bl	12398 <coda_cursor_goto_first_record_field@plt>
   173c4:	cmp	r0, #0
   173c8:	bne	176e8 <codadump_filter_get_next_filter@@Base+0x814>
   173cc:	ldr	r3, [sp, #16]
   173d0:	mov	r1, #0
   173d4:	cmp	r3, r1
   173d8:	str	r1, [sp, #28]
   173dc:	ble	17478 <codadump_filter_get_next_filter@@Base+0x5a4>
   173e0:	ldr	r6, [pc, #1160]	; 17870 <codadump_filter_get_next_filter@@Base+0x99c>
   173e4:	ldr	r7, [pc, #1148]	; 17868 <codadump_filter_get_next_filter@@Base+0x994>
   173e8:	mov	r8, #1
   173ec:	add	r5, sp, #40	; 0x28
   173f0:	b	1745c <codadump_filter_get_next_filter@@Base+0x588>
   173f4:	ldr	r9, [sp, #40]	; 0x28
   173f8:	cmp	r9, #0
   173fc:	bne	17438 <codadump_filter_get_next_filter@@Base+0x564>
   17400:	cmp	r8, #0
   17404:	beq	1772c <codadump_filter_get_next_filter@@Base+0x858>
   17408:	add	r2, sp, #32
   1740c:	ldr	r1, [sp, #28]
   17410:	ldr	r0, [sp, #20]
   17414:	bl	12620 <coda_type_get_record_field_name@plt>
   17418:	cmp	r0, #0
   1741c:	bne	17724 <codadump_filter_get_next_filter@@Base+0x850>
   17420:	ldr	r1, [sp, #32]
   17424:	mov	r0, r6
   17428:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   1742c:	mov	r0, r4
   17430:	bl	17050 <codadump_filter_get_next_filter@@Base+0x17c>
   17434:	mov	r8, r9
   17438:	ldr	r3, [sp, #16]
   1743c:	ldr	r1, [sp, #28]
   17440:	sub	r2, r3, #1
   17444:	cmp	r2, r1
   17448:	bgt	17708 <codadump_filter_get_next_filter@@Base+0x834>
   1744c:	add	r1, r1, #1
   17450:	cmp	r1, r3
   17454:	str	r1, [sp, #28]
   17458:	bge	17478 <codadump_filter_get_next_filter@@Base+0x5a4>
   1745c:	mov	r2, r5
   17460:	ldr	r0, [sp, #20]
   17464:	bl	12224 <coda_type_get_record_field_hidden_status@plt>
   17468:	cmp	r0, #0
   1746c:	beq	173f4 <codadump_filter_get_next_filter@@Base+0x520>
   17470:	bl	196f0 <handle_coda_error@@Base>
   17474:	b	173f4 <codadump_filter_get_next_filter@@Base+0x520>
   17478:	mov	r0, r4
   1747c:	bl	12404 <coda_cursor_goto_parent@plt>
   17480:	b	17310 <codadump_filter_get_next_filter@@Base+0x43c>
   17484:	mov	r0, r4
   17488:	add	r2, sp, #40	; 0x28
   1748c:	add	r1, sp, #32
   17490:	bl	124f4 <coda_cursor_read_complex_double_split@plt>
   17494:	cmp	r0, #0
   17498:	bne	17774 <codadump_filter_get_next_filter@@Base+0x8a0>
   1749c:	ldrd	r4, [sp, #40]	; 0x28
   174a0:	ldrd	r2, [sp, #32]
   174a4:	ldr	r0, [pc, #984]	; 17884 <codadump_filter_get_next_filter@@Base+0x9b0>
   174a8:	strd	r4, [sp]
   174ac:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   174b0:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   174b4:	mov	r0, r4
   174b8:	add	r1, sp, #40	; 0x28
   174bc:	bl	1244c <coda_cursor_read_double@plt>
   174c0:	cmp	r0, #0
   174c4:	bne	1777c <codadump_filter_get_next_filter@@Base+0x8a8>
   174c8:	ldrd	r2, [sp, #40]	; 0x28
   174cc:	ldr	r0, [pc, #904]	; 1785c <codadump_filter_get_next_filter@@Base+0x988>
   174d0:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   174d4:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   174d8:	add	r5, sp, #40	; 0x28
   174dc:	mov	r0, r4
   174e0:	mov	r1, r5
   174e4:	bl	124ac <coda_cursor_read_char@plt>
   174e8:	cmp	r0, #0
   174ec:	bne	177c0 <codadump_filter_get_next_filter@@Base+0x8ec>
   174f0:	ldr	r0, [pc, #912]	; 17888 <codadump_filter_get_next_filter@@Base+0x9b4>
   174f4:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   174f8:	mov	r0, r5
   174fc:	mov	r1, #1
   17500:	bl	16f44 <codadump_filter_get_next_filter@@Base+0x70>
   17504:	ldr	r0, [pc, #892]	; 17888 <codadump_filter_get_next_filter@@Base+0x9b4>
   17508:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   1750c:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17510:	add	r1, sp, #40	; 0x28
   17514:	mov	r0, r4
   17518:	bl	125b4 <coda_cursor_get_bit_size@plt>
   1751c:	cmp	r0, #0
   17520:	bne	177b0 <codadump_filter_get_next_filter@@Base+0x8dc>
   17524:	ldrd	r8, [sp, #40]	; 0x28
   17528:	mov	r1, #0
   1752c:	and	r0, r8, #7
   17530:	orrs	r3, r0, r1
   17534:	lsr	r6, r8, #3
   17538:	movne	r1, #1
   1753c:	moveq	r1, #0
   17540:	orr	r6, r6, r9, lsl #29
   17544:	adds	r6, r6, r1
   17548:	mov	r0, r6
   1754c:	bl	123d4 <malloc@plt>
   17550:	subs	r5, r0, #0
   17554:	beq	17830 <codadump_filter_get_next_filter@@Base+0x95c>
   17558:	strd	r8, [sp]
   1755c:	mov	r0, r4
   17560:	mov	r2, #0
   17564:	mov	r3, #0
   17568:	mov	r1, r5
   1756c:	bl	12644 <coda_cursor_read_bits@plt>
   17570:	cmp	r0, #0
   17574:	bne	177e0 <codadump_filter_get_next_filter@@Base+0x90c>
   17578:	ldr	r0, [pc, #776]	; 17888 <codadump_filter_get_next_filter@@Base+0x9b4>
   1757c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17580:	mov	r1, r6
   17584:	mov	r0, r5
   17588:	bl	16f44 <codadump_filter_get_next_filter@@Base+0x70>
   1758c:	ldr	r0, [pc, #756]	; 17888 <codadump_filter_get_next_filter@@Base+0x9b4>
   17590:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17594:	mov	r0, r5
   17598:	bl	1229c <free@plt>
   1759c:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   175a0:	mov	r0, r4
   175a4:	add	r1, sp, #40	; 0x28
   175a8:	bl	122c0 <coda_cursor_read_uint32@plt>
   175ac:	cmp	r0, #0
   175b0:	bne	177a8 <codadump_filter_get_next_filter@@Base+0x8d4>
   175b4:	ldr	r1, [sp, #40]	; 0x28
   175b8:	ldr	r0, [pc, #716]	; 1788c <codadump_filter_get_next_filter@@Base+0x9b8>
   175bc:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   175c0:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   175c4:	mov	r0, r4
   175c8:	add	r1, sp, #32
   175cc:	bl	12440 <coda_cursor_read_uint64@plt>
   175d0:	cmp	r0, #0
   175d4:	bne	177b8 <codadump_filter_get_next_filter@@Base+0x8e4>
   175d8:	ldrd	r0, [sp, #32]
   175dc:	add	r2, sp, #40	; 0x28
   175e0:	bl	12290 <coda_str64u@plt>
   175e4:	add	r1, sp, #40	; 0x28
   175e8:	ldr	r0, [pc, #672]	; 17890 <codadump_filter_get_next_filter@@Base+0x9bc>
   175ec:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   175f0:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   175f4:	mov	r0, r4
   175f8:	add	r1, sp, #40	; 0x28
   175fc:	bl	1244c <coda_cursor_read_double@plt>
   17600:	cmp	r0, #0
   17604:	bne	177d0 <codadump_filter_get_next_filter@@Base+0x8fc>
   17608:	ldr	r3, [sp, #28]
   1760c:	cmp	r3, #8
   17610:	ldrd	r2, [sp, #40]	; 0x28
   17614:	bne	174cc <codadump_filter_get_next_filter@@Base+0x5f8>
   17618:	ldr	r0, [pc, #628]	; 17894 <codadump_filter_get_next_filter@@Base+0x9c0>
   1761c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17620:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17624:	add	r1, sp, #40	; 0x28
   17628:	mov	r0, r4
   1762c:	bl	12434 <coda_cursor_get_string_length@plt>
   17630:	cmp	r0, #0
   17634:	bne	177f0 <codadump_filter_get_next_filter@@Base+0x91c>
   17638:	ldr	r0, [sp, #40]	; 0x28
   1763c:	add	r0, r0, #1
   17640:	bl	123d4 <malloc@plt>
   17644:	subs	r5, r0, #0
   17648:	beq	17808 <codadump_filter_get_next_filter@@Base+0x934>
   1764c:	ldr	r2, [sp, #40]	; 0x28
   17650:	mov	r0, r4
   17654:	add	r2, r2, #1
   17658:	mov	r1, r5
   1765c:	bl	123f8 <coda_cursor_read_string@plt>
   17660:	cmp	r0, #0
   17664:	bne	177e8 <codadump_filter_get_next_filter@@Base+0x914>
   17668:	ldr	r0, [pc, #536]	; 17888 <codadump_filter_get_next_filter@@Base+0x9b4>
   1766c:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17670:	ldr	r1, [sp, #40]	; 0x28
   17674:	mov	r0, r5
   17678:	bl	16f44 <codadump_filter_get_next_filter@@Base+0x70>
   1767c:	ldr	r1, [sp, #40]	; 0x28
   17680:	ldr	r0, [pc, #512]	; 17888 <codadump_filter_get_next_filter@@Base+0x9b4>
   17684:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17688:	mov	r0, r5
   1768c:	bl	1229c <free@plt>
   17690:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17694:	mov	r0, r4
   17698:	add	r1, sp, #32
   1769c:	bl	12554 <coda_cursor_read_int64@plt>
   176a0:	cmp	r0, #0
   176a4:	bne	177d8 <codadump_filter_get_next_filter@@Base+0x904>
   176a8:	ldrd	r0, [sp, #32]
   176ac:	add	r2, sp, #40	; 0x28
   176b0:	bl	12650 <coda_str64@plt>
   176b4:	add	r1, sp, #40	; 0x28
   176b8:	ldr	r0, [pc, #464]	; 17890 <codadump_filter_get_next_filter@@Base+0x9bc>
   176bc:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   176c0:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   176c4:	mov	r0, r4
   176c8:	add	r1, sp, #40	; 0x28
   176cc:	bl	125e4 <coda_cursor_read_int32@plt>
   176d0:	cmp	r0, #0
   176d4:	bne	177c8 <codadump_filter_get_next_filter@@Base+0x8f4>
   176d8:	ldr	r1, [sp, #40]	; 0x28
   176dc:	ldr	r0, [pc, #436]	; 17898 <codadump_filter_get_next_filter@@Base+0x9c4>
   176e0:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   176e4:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   176e8:	bl	196f0 <handle_coda_error@@Base>
   176ec:	b	173cc <codadump_filter_get_next_filter@@Base+0x4f8>
   176f0:	bl	196f0 <handle_coda_error@@Base>
   176f4:	b	172c8 <codadump_filter_get_next_filter@@Base+0x3f4>
   176f8:	bl	196f0 <handle_coda_error@@Base>
   176fc:	b	172f4 <codadump_filter_get_next_filter@@Base+0x420>
   17700:	bl	196f0 <handle_coda_error@@Base>
   17704:	b	172e0 <codadump_filter_get_next_filter@@Base+0x40c>
   17708:	mov	r0, r4
   1770c:	bl	12590 <coda_cursor_goto_next_record_field@plt>
   17710:	cmp	r0, #0
   17714:	bne	17738 <codadump_filter_get_next_filter@@Base+0x864>
   17718:	ldr	r3, [sp, #16]
   1771c:	ldr	r1, [sp, #28]
   17720:	b	1744c <codadump_filter_get_next_filter@@Base+0x578>
   17724:	bl	196f0 <handle_coda_error@@Base>
   17728:	b	17420 <codadump_filter_get_next_filter@@Base+0x54c>
   1772c:	mov	r0, r7
   17730:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17734:	b	17408 <codadump_filter_get_next_filter@@Base+0x534>
   17738:	bl	196f0 <handle_coda_error@@Base>
   1773c:	b	17718 <codadump_filter_get_next_filter@@Base+0x844>
   17740:	bl	196f0 <handle_coda_error@@Base>
   17744:	b	172a8 <codadump_filter_get_next_filter@@Base+0x3d4>
   17748:	bl	196f0 <handle_coda_error@@Base>
   1774c:	b	17294 <codadump_filter_get_next_filter@@Base+0x3c0>
   17750:	bl	196f0 <handle_coda_error@@Base>
   17754:	b	1736c <codadump_filter_get_next_filter@@Base+0x498>
   17758:	bl	196f0 <handle_coda_error@@Base>
   1775c:	b	17210 <codadump_filter_get_next_filter@@Base+0x33c>
   17760:	mov	r7, r3
   17764:	mov	r5, #1
   17768:	b	17200 <codadump_filter_get_next_filter@@Base+0x32c>
   1776c:	bl	196f0 <handle_coda_error@@Base>
   17770:	b	170c8 <codadump_filter_get_next_filter@@Base+0x1f4>
   17774:	bl	196f0 <handle_coda_error@@Base>
   17778:	b	1749c <codadump_filter_get_next_filter@@Base+0x5c8>
   1777c:	bl	196f0 <handle_coda_error@@Base>
   17780:	b	174c8 <codadump_filter_get_next_filter@@Base+0x5f4>
   17784:	add	r1, sp, #40	; 0x28
   17788:	ldr	r0, [pc, #268]	; 1789c <codadump_filter_get_next_filter@@Base+0x9c8>
   1778c:	vldr	d0, [sp, #32]
   17790:	bl	12278 <coda_time_double_to_string@plt>
   17794:	cmp	r0, #0
   17798:	beq	177f8 <codadump_filter_get_next_filter@@Base+0x924>
   1779c:	ldr	r0, [pc, #252]	; 178a0 <codadump_filter_get_next_filter@@Base+0x9cc>
   177a0:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   177a4:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   177a8:	bl	196f0 <handle_coda_error@@Base>
   177ac:	b	175b4 <codadump_filter_get_next_filter@@Base+0x6e0>
   177b0:	bl	196f0 <handle_coda_error@@Base>
   177b4:	b	17524 <codadump_filter_get_next_filter@@Base+0x650>
   177b8:	bl	196f0 <handle_coda_error@@Base>
   177bc:	b	175d8 <codadump_filter_get_next_filter@@Base+0x704>
   177c0:	bl	196f0 <handle_coda_error@@Base>
   177c4:	b	174f0 <codadump_filter_get_next_filter@@Base+0x61c>
   177c8:	bl	196f0 <handle_coda_error@@Base>
   177cc:	b	176d8 <codadump_filter_get_next_filter@@Base+0x804>
   177d0:	bl	196f0 <handle_coda_error@@Base>
   177d4:	b	17608 <codadump_filter_get_next_filter@@Base+0x734>
   177d8:	bl	196f0 <handle_coda_error@@Base>
   177dc:	b	176a8 <codadump_filter_get_next_filter@@Base+0x7d4>
   177e0:	bl	196f0 <handle_coda_error@@Base>
   177e4:	b	17578 <codadump_filter_get_next_filter@@Base+0x6a4>
   177e8:	bl	196f0 <handle_coda_error@@Base>
   177ec:	b	17668 <codadump_filter_get_next_filter@@Base+0x794>
   177f0:	bl	196f0 <handle_coda_error@@Base>
   177f4:	b	17638 <codadump_filter_get_next_filter@@Base+0x764>
   177f8:	add	r1, sp, #40	; 0x28
   177fc:	ldr	r0, [pc, #160]	; 178a4 <codadump_filter_get_next_filter@@Base+0x9d0>
   17800:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   17804:	b	170f4 <codadump_filter_get_next_filter@@Base+0x220>
   17808:	ldr	r2, [sp, #40]	; 0x28
   1780c:	ldr	r3, [pc, #148]	; 178a8 <codadump_filter_get_next_filter@@Base+0x9d4>
   17810:	add	r2, r2, #1
   17814:	str	r3, [sp]
   17818:	ldr	r1, [pc, #140]	; 178ac <codadump_filter_get_next_filter@@Base+0x9d8>
   1781c:	ldr	r3, [pc, #140]	; 178b0 <codadump_filter_get_next_filter@@Base+0x9dc>
   17820:	mvn	r0, #0
   17824:	bl	12254 <coda_set_error@plt>
   17828:	bl	196f0 <handle_coda_error@@Base>
   1782c:	b	1764c <codadump_filter_get_next_filter@@Base+0x778>
   17830:	ldr	r2, [pc, #124]	; 178b4 <codadump_filter_get_next_filter@@Base+0x9e0>
   17834:	ldr	r3, [pc, #116]	; 178b0 <codadump_filter_get_next_filter@@Base+0x9dc>
   17838:	str	r2, [sp]
   1783c:	ldr	r1, [pc, #104]	; 178ac <codadump_filter_get_next_filter@@Base+0x9d8>
   17840:	mov	r2, r6
   17844:	mvn	r0, #0
   17848:	bl	12254 <coda_set_error@plt>
   1784c:	bl	196f0 <handle_coda_error@@Base>
   17850:	ldrd	r8, [sp, #40]	; 0x28
   17854:	b	17558 <codadump_filter_get_next_filter@@Base+0x684>
   17858:	andeq	ip, r2, r8, asr #3
   1785c:	muleq	r1, r8, sl
   17860:	andeq	r9, r1, r4, ror pc
   17864:	andeq	r9, r1, r8, ror pc
   17868:	andeq	r9, r1, r8, lsl #23
   1786c:	andeq	r9, r1, r8, ror #30
   17870:	andeq	r9, r1, ip, ror #30
   17874:	ldrdeq	sl, [r1], -r4
   17878:	andeq	r9, r1, r0, asr pc
   1787c:	andeq	r9, r1, ip, asr pc
   17880:	ldrdeq	r9, [r1], -r0
   17884:	andeq	sl, r1, r4, lsl r0
   17888:	ldrdeq	sl, [r1], -ip
   1788c:	andeq	r9, r1, ip, lsl #21
   17890:	andeq	r9, r1, r8, lsr #23
   17894:	muleq	r1, r0, sl
   17898:	andeq	sl, r1, r8, asr #32
   1789c:	ldrdeq	r9, [r1], -r8
   178a0:	strdeq	r9, [r1], -r8
   178a4:	andeq	r9, r1, ip, asr sl
   178a8:	andeq	r0, r0, pc, lsr #2
   178ac:	andeq	r9, r1, r4, lsr #20
   178b0:	andeq	r9, r1, ip, ror pc
   178b4:	andeq	r0, r0, lr, asr #2

000178b8 <print_json_data@@Base>:
   178b8:	push	{r4, lr}
   178bc:	sub	sp, sp, #528	; 0x210
   178c0:	ldr	r3, [pc, #200]	; 17990 <print_json_data@@Base+0xd8>
   178c4:	ldr	r4, [pc, #200]	; 17994 <print_json_data@@Base+0xdc>
   178c8:	add	r1, sp, #4
   178cc:	str	r0, [r3]
   178d0:	ldr	r0, [r4]
   178d4:	bl	12260 <coda_open@plt>
   178d8:	cmp	r0, #0
   178dc:	bne	1794c <print_json_data@@Base+0x94>
   178e0:	add	r0, sp, #8
   178e4:	ldr	r1, [sp, #4]
   178e8:	bl	1238c <coda_cursor_set_product@plt>
   178ec:	cmp	r0, #0
   178f0:	bne	17944 <print_json_data@@Base+0x8c>
   178f4:	ldr	r3, [pc, #156]	; 17998 <print_json_data@@Base+0xe0>
   178f8:	ldr	r1, [r3]
   178fc:	cmp	r1, #0
   17900:	beq	17914 <print_json_data@@Base+0x5c>
   17904:	add	r0, sp, #8
   17908:	bl	1256c <coda_cursor_goto@plt>
   1790c:	cmp	r0, #0
   17910:	bne	1793c <print_json_data@@Base+0x84>
   17914:	mov	r0, #0
   17918:	bl	12200 <coda_set_option_perform_boundary_checks@plt>
   1791c:	add	r0, sp, #8
   17920:	bl	17050 <codadump_filter_get_next_filter@@Base+0x17c>
   17924:	ldr	r0, [pc, #112]	; 1799c <print_json_data@@Base+0xe4>
   17928:	bl	16f08 <codadump_filter_get_next_filter@@Base+0x34>
   1792c:	ldr	r0, [sp, #4]
   17930:	bl	12548 <coda_close@plt>
   17934:	add	sp, sp, #528	; 0x210
   17938:	pop	{r4, pc}
   1793c:	bl	196f0 <handle_coda_error@@Base>
   17940:	b	17914 <print_json_data@@Base+0x5c>
   17944:	bl	196f0 <handle_coda_error@@Base>
   17948:	b	178f4 <print_json_data@@Base+0x3c>
   1794c:	bl	12608 <coda_get_errno@plt>
   17950:	ldr	r3, [r0]
   17954:	cmn	r3, #21
   17958:	beq	17964 <print_json_data@@Base+0xac>
   1795c:	bl	196f0 <handle_coda_error@@Base>
   17960:	b	178e0 <print_json_data@@Base+0x28>
   17964:	mov	r0, #0
   17968:	bl	122a8 <coda_set_option_use_mmap@plt>
   1796c:	add	r1, sp, #4
   17970:	ldr	r0, [r4]
   17974:	bl	12260 <coda_open@plt>
   17978:	mov	r4, r0
   1797c:	mov	r0, #1
   17980:	bl	122a8 <coda_set_option_use_mmap@plt>
   17984:	cmp	r4, #0
   17988:	bne	1795c <print_json_data@@Base+0xa4>
   1798c:	b	178e0 <print_json_data@@Base+0x28>
   17990:	andeq	ip, r2, r8, asr #3
   17994:	strdeq	ip, [r2], -r0
   17998:	strheq	sp, [r2], -r0
   1799c:			; <UNDEFINED> instruction: 0x0001b2bc
   179a0:	add	r1, r1, r1, lsl #2
   179a4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179a8:	lsl	r1, r1, #4
   179ac:	ldr	r5, [pc, #220]	; 17a90 <print_json_data@@Base+0x1d8>
   179b0:	add	r8, r5, r1
   179b4:	ldr	r3, [r8, #804]	; 0x324
   179b8:	cmp	r3, #0
   179bc:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179c0:	ldr	r9, [pc, #204]	; 17a94 <print_json_data@@Base+0x1dc>
   179c4:	add	r1, r1, #808	; 0x328
   179c8:	mov	r6, r0
   179cc:	ldr	r3, [r9]
   179d0:	add	r5, r5, r1
   179d4:	cmp	r3, #0
   179d8:	mov	r4, #0
   179dc:	ldr	sl, [pc, #180]	; 17a98 <print_json_data@@Base+0x1e0>
   179e0:	ldr	r7, [pc, #180]	; 17a9c <print_json_data@@Base+0x1e4>
   179e4:	ldr	fp, [pc, #180]	; 17aa0 <print_json_data@@Base+0x1e8>
   179e8:	beq	17a4c <print_json_data@@Base+0x194>
   179ec:	ldr	r3, [r8, #800]	; 0x320
   179f0:	mov	r1, fp
   179f4:	add	r3, r4, r3
   179f8:	add	r2, r3, #18
   179fc:	add	ip, r7, r3, lsl #2
   17a00:	ldr	r0, [r7, r2, lsl #2]
   17a04:	cmp	r0, #0
   17a08:	mov	r0, r6
   17a0c:	beq	17a6c <print_json_data@@Base+0x1b4>
   17a10:	ldr	r3, [ip, #4]
   17a14:	ldr	r2, [ip, #36]	; 0x24
   17a18:	bl	12464 <fprintf@plt>
   17a1c:	ldr	r3, [r8, #804]	; 0x324
   17a20:	add	r4, r4, #1
   17a24:	cmp	r4, r3
   17a28:	mov	r1, r6
   17a2c:	mov	r0, #44	; 0x2c
   17a30:	add	r5, r5, #4
   17a34:	blt	17a3c <print_json_data@@Base+0x184>
   17a38:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a3c:	bl	1259c <fputc@plt>
   17a40:	ldr	r3, [r9]
   17a44:	cmp	r3, #0
   17a48:	bne	179ec <print_json_data@@Base+0x134>
   17a4c:	ldr	r3, [r5]
   17a50:	mov	r1, sl
   17a54:	cmn	r3, #1
   17a58:	mov	r0, r6
   17a5c:	mov	r2, r3
   17a60:	beq	17a80 <print_json_data@@Base+0x1c8>
   17a64:	bl	12464 <fprintf@plt>
   17a68:	b	17a1c <print_json_data@@Base+0x164>
   17a6c:	ldr	r2, [ip, #4]
   17a70:	mov	r1, sl
   17a74:	mov	r0, r6
   17a78:	bl	12464 <fprintf@plt>
   17a7c:	b	17a1c <print_json_data@@Base+0x164>
   17a80:	mov	r1, r6
   17a84:	mov	r0, #63	; 0x3f
   17a88:	bl	1259c <fputc@plt>
   17a8c:	b	17a1c <print_json_data@@Base+0x164>
   17a90:	strdeq	ip, [r2], -r0
   17a94:	andeq	ip, r2, ip, ror #3
   17a98:	andeq	sl, r1, r8, asr #32
   17a9c:	strheq	sp, [r2], -r8
   17aa0:	andeq	sl, r1, r4, asr #32

00017aa4 <print_full_field_name@@Base>:
   17aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17aa8:	sub	sp, sp, #20
   17aac:	cmp	r1, #1
   17ab0:	mov	r4, r0
   17ab4:	str	r2, [sp, #4]
   17ab8:	beq	17c44 <print_full_field_name@@Base+0x1a0>
   17abc:	ldr	r5, [pc, #736]	; 17da4 <print_full_field_name@@Base+0x300>
   17ac0:	mov	sl, r1
   17ac4:	ldr	r3, [r5, #3748]	; 0xea4
   17ac8:	cmp	r3, #0
   17acc:	addgt	r7, r5, #3616	; 0xe20
   17ad0:	movgt	r6, #0
   17ad4:	movgt	r8, #46	; 0x2e
   17ad8:	bgt	17ae4 <print_full_field_name@@Base+0x40>
   17adc:	b	17b08 <print_full_field_name@@Base+0x64>
   17ae0:	bl	1259c <fputc@plt>
   17ae4:	mov	r1, r4
   17ae8:	ldr	r0, [r7, #4]!
   17aec:	bl	1262c <fputs@plt>
   17af0:	ldr	r3, [r5, #3748]	; 0xea4
   17af4:	add	r6, r6, #1
   17af8:	cmp	r3, r6
   17afc:	mov	r1, r4
   17b00:	mov	r0, r8
   17b04:	bgt	17ae0 <print_full_field_name@@Base+0x3c>
   17b08:	cmp	sl, #2
   17b0c:	beq	17b18 <print_full_field_name@@Base+0x74>
   17b10:	add	sp, sp, #20
   17b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b18:	ldr	r3, [r5, #136]	; 0x88
   17b1c:	cmp	r3, #0
   17b20:	ble	17d84 <print_full_field_name@@Base+0x2e0>
   17b24:	mov	r9, #0
   17b28:	ldr	r8, [pc, #632]	; 17da8 <print_full_field_name@@Base+0x304>
   17b2c:	mov	r6, r9
   17b30:	add	r7, sp, #12
   17b34:	mov	fp, #44	; 0x2c
   17b38:	b	17b58 <print_full_field_name@@Base+0xb4>
   17b3c:	ldr	r3, [sp, #12]
   17b40:	cmp	r3, #1
   17b44:	beq	17b7c <print_full_field_name@@Base+0xd8>
   17b48:	ldr	r3, [r5, #136]	; 0x88
   17b4c:	add	r6, r6, #1
   17b50:	cmp	r3, r6
   17b54:	ble	17bd8 <print_full_field_name@@Base+0x134>
   17b58:	mov	r1, r7
   17b5c:	ldr	r0, [r8, #4]!
   17b60:	bl	12668 <coda_type_get_class@plt>
   17b64:	cmp	r0, #0
   17b68:	beq	17b3c <print_full_field_name@@Base+0x98>
   17b6c:	bl	196f0 <handle_coda_error@@Base>
   17b70:	ldr	r3, [sp, #12]
   17b74:	cmp	r3, #1
   17b78:	bne	17b48 <print_full_field_name@@Base+0xa4>
   17b7c:	add	r3, r9, r9, lsl #2
   17b80:	add	r3, r5, r3, lsl #4
   17b84:	ldr	r2, [r3, #804]	; 0x324
   17b88:	cmp	r2, #0
   17b8c:	ble	17b48 <print_full_field_name@@Base+0xa4>
   17b90:	ldr	r2, [r3, #800]	; 0x320
   17b94:	mov	r1, r4
   17b98:	cmp	r2, #0
   17b9c:	mov	r0, fp
   17ba0:	mov	r3, r4
   17ba4:	mov	r2, sl
   17ba8:	bne	17c3c <print_full_field_name@@Base+0x198>
   17bac:	mov	r1, #1
   17bb0:	ldr	r0, [pc, #500]	; 17dac <print_full_field_name@@Base+0x308>
   17bb4:	bl	12380 <fwrite@plt>
   17bb8:	mov	r1, r9
   17bbc:	mov	r0, r4
   17bc0:	bl	179a0 <print_json_data@@Base+0xe8>
   17bc4:	ldr	r3, [r5, #136]	; 0x88
   17bc8:	add	r6, r6, #1
   17bcc:	cmp	r3, r6
   17bd0:	add	r9, r9, #1
   17bd4:	bgt	17b58 <print_full_field_name@@Base+0xb4>
   17bd8:	ldr	r3, [sp, #4]
   17bdc:	cmp	r3, #0
   17be0:	beq	17c20 <print_full_field_name@@Base+0x17c>
   17be4:	ldr	r3, [r5, #3360]	; 0xd20
   17be8:	cmp	r9, r3
   17bec:	bge	17c20 <print_full_field_name@@Base+0x17c>
   17bf0:	add	r3, r9, r9, lsl #2
   17bf4:	add	r5, r5, r3, lsl #4
   17bf8:	ldr	r3, [r5, #800]	; 0x320
   17bfc:	cmp	r3, #0
   17c00:	beq	17d6c <print_full_field_name@@Base+0x2c8>
   17c04:	mov	r1, r4
   17c08:	mov	r0, #44	; 0x2c
   17c0c:	bl	1259c <fputc@plt>
   17c10:	mov	r1, r9
   17c14:	mov	r0, r4
   17c18:	bl	179a0 <print_json_data@@Base+0xe8>
   17c1c:	add	r9, r9, #1
   17c20:	cmp	r9, #0
   17c24:	ble	17b10 <print_full_field_name@@Base+0x6c>
   17c28:	mov	r1, r4
   17c2c:	mov	r0, #93	; 0x5d
   17c30:	bl	1259c <fputc@plt>
   17c34:	add	sp, sp, #20
   17c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c3c:	bl	1259c <fputc@plt>
   17c40:	b	17bb8 <print_full_field_name@@Base+0x114>
   17c44:	ldr	r5, [pc, #344]	; 17da4 <print_full_field_name@@Base+0x300>
   17c48:	mov	r9, #0
   17c4c:	ldr	r3, [r5, #136]	; 0x88
   17c50:	cmp	r3, #0
   17c54:	ble	17d14 <print_full_field_name@@Base+0x270>
   17c58:	ldr	fp, [pc, #336]	; 17db0 <print_full_field_name@@Base+0x30c>
   17c5c:	mov	sl, r9
   17c60:	mov	r6, r9
   17c64:	add	r8, r5, #4
   17c68:	add	r7, sp, #12
   17c6c:	b	17ccc <print_full_field_name@@Base+0x228>
   17c70:	cmp	r3, #1
   17c74:	bne	17cbc <print_full_field_name@@Base+0x218>
   17c78:	cmp	r6, #0
   17c7c:	beq	17d5c <print_full_field_name@@Base+0x2b8>
   17c80:	add	r3, r9, r9, lsl #2
   17c84:	add	r3, r5, r3, lsl #4
   17c88:	ldr	r3, [r3, #804]	; 0x324
   17c8c:	cmp	r3, #0
   17c90:	ble	17cb8 <print_full_field_name@@Base+0x214>
   17c94:	mov	r1, r4
   17c98:	mov	r0, #91	; 0x5b
   17c9c:	bl	1259c <fputc@plt>
   17ca0:	mov	r1, r9
   17ca4:	mov	r0, r4
   17ca8:	bl	179a0 <print_json_data@@Base+0xe8>
   17cac:	mov	r1, r4
   17cb0:	mov	r0, #93	; 0x5d
   17cb4:	bl	1259c <fputc@plt>
   17cb8:	add	r9, r9, #1
   17cbc:	ldr	r3, [r5, #136]	; 0x88
   17cc0:	add	r6, r6, #1
   17cc4:	cmp	r3, r6
   17cc8:	ble	17d14 <print_full_field_name@@Base+0x270>
   17ccc:	mov	r1, r7
   17cd0:	ldr	r0, [r8, #4]!
   17cd4:	bl	12668 <coda_type_get_class@plt>
   17cd8:	cmp	r0, #0
   17cdc:	bne	17d54 <print_full_field_name@@Base+0x2b0>
   17ce0:	ldr	r3, [sp, #12]
   17ce4:	cmp	r3, #0
   17ce8:	bne	17c70 <print_full_field_name@@Base+0x1cc>
   17cec:	add	r3, r5, sl, lsl #2
   17cf0:	mov	r1, fp
   17cf4:	ldr	r2, [r3, #3620]	; 0xe24
   17cf8:	mov	r0, r4
   17cfc:	bl	12464 <fprintf@plt>
   17d00:	ldr	r3, [r5, #136]	; 0x88
   17d04:	add	r6, r6, #1
   17d08:	cmp	r3, r6
   17d0c:	add	sl, sl, #1
   17d10:	bgt	17ccc <print_full_field_name@@Base+0x228>
   17d14:	ldr	r3, [sp, #4]
   17d18:	cmp	r3, #0
   17d1c:	beq	17b10 <print_full_field_name@@Base+0x6c>
   17d20:	ldr	r3, [r5, #3360]	; 0xd20
   17d24:	cmp	r3, r9
   17d28:	ble	17b10 <print_full_field_name@@Base+0x6c>
   17d2c:	mov	r1, r4
   17d30:	mov	r0, #91	; 0x5b
   17d34:	bl	1259c <fputc@plt>
   17d38:	mov	r1, r9
   17d3c:	mov	r0, r4
   17d40:	bl	179a0 <print_json_data@@Base+0xe8>
   17d44:	mov	r1, r4
   17d48:	mov	r0, #93	; 0x5d
   17d4c:	bl	1259c <fputc@plt>
   17d50:	b	17b10 <print_full_field_name@@Base+0x6c>
   17d54:	bl	196f0 <handle_coda_error@@Base>
   17d58:	b	17ce0 <print_full_field_name@@Base+0x23c>
   17d5c:	mov	r1, r4
   17d60:	mov	r0, #47	; 0x2f
   17d64:	bl	1259c <fputc@plt>
   17d68:	b	17c80 <print_full_field_name@@Base+0x1dc>
   17d6c:	mov	r3, r4
   17d70:	mov	r2, #2
   17d74:	mov	r1, #1
   17d78:	ldr	r0, [pc, #44]	; 17dac <print_full_field_name@@Base+0x308>
   17d7c:	bl	12380 <fwrite@plt>
   17d80:	b	17c10 <print_full_field_name@@Base+0x16c>
   17d84:	ldr	r3, [sp, #4]
   17d88:	cmp	r3, #0
   17d8c:	beq	17b10 <print_full_field_name@@Base+0x6c>
   17d90:	ldr	r3, [r5, #3360]	; 0xd20
   17d94:	cmp	r3, #0
   17d98:	movgt	r9, #0
   17d9c:	bgt	17bf0 <print_full_field_name@@Base+0x14c>
   17da0:	b	17b10 <print_full_field_name@@Base+0x6c>
   17da4:	strdeq	ip, [r2], -r0
   17da8:	strdeq	ip, [r2], -r4
   17dac:	andeq	sl, r1, r0, asr r0
   17db0:	andeq	sl, r1, ip, asr #32
   17db4:	ldr	r3, [pc, #568]	; 17ff4 <print_full_field_name@@Base+0x550>
   17db8:	push	{r4, r5, lr}
   17dbc:	sub	sp, sp, #12
   17dc0:	ldr	r2, [r3]
   17dc4:	cmp	r2, #0
   17dc8:	beq	17ddc <print_full_field_name@@Base+0x338>
   17dcc:	cmp	r2, #1
   17dd0:	beq	17e68 <print_full_field_name@@Base+0x3c4>
   17dd4:	add	sp, sp, #12
   17dd8:	pop	{r4, r5, pc}
   17ddc:	ldr	r4, [pc, #532]	; 17ff8 <print_full_field_name@@Base+0x554>
   17de0:	mov	r1, #1
   17de4:	ldr	r0, [r4]
   17de8:	bl	17aa4 <print_full_field_name@@Base>
   17dec:	ldr	r3, [pc, #520]	; 17ffc <print_full_field_name@@Base+0x558>
   17df0:	ldr	r3, [r3]
   17df4:	cmp	r3, #0
   17df8:	bne	17e74 <print_full_field_name@@Base+0x3d0>
   17dfc:	ldr	r3, [pc, #508]	; 18000 <print_full_field_name@@Base+0x55c>
   17e00:	ldr	r3, [r3]
   17e04:	cmp	r3, #0
   17e08:	bne	17f50 <print_full_field_name@@Base+0x4ac>
   17e0c:	ldr	r3, [pc, #496]	; 18004 <print_full_field_name@@Base+0x560>
   17e10:	ldr	r3, [r3]
   17e14:	cmp	r3, #0
   17e18:	bne	17f0c <print_full_field_name@@Base+0x468>
   17e1c:	mov	r0, #10
   17e20:	bl	124c4 <putchar@plt>
   17e24:	ldr	r3, [pc, #476]	; 18008 <print_full_field_name@@Base+0x564>
   17e28:	ldr	r3, [r3]
   17e2c:	cmp	r3, #0
   17e30:	beq	17dd4 <print_full_field_name@@Base+0x330>
   17e34:	ldr	r5, [pc, #464]	; 1800c <print_full_field_name@@Base+0x568>
   17e38:	ldr	r3, [r5]
   17e3c:	cmp	r3, #0
   17e40:	ble	17dd4 <print_full_field_name@@Base+0x330>
   17e44:	mov	r4, #0
   17e48:	mov	r0, r4
   17e4c:	bl	15d10 <print_all_distinct_dims@@Base>
   17e50:	ldr	r3, [r5]
   17e54:	add	r4, r4, #1
   17e58:	cmp	r4, r3
   17e5c:	blt	17e48 <print_full_field_name@@Base+0x3a4>
   17e60:	add	sp, sp, #12
   17e64:	pop	{r4, r5, pc}
   17e68:	bl	14574 <export_data_element_to_ascii@@Base>
   17e6c:	add	sp, sp, #12
   17e70:	pop	{r4, r5, pc}
   17e74:	ldr	r5, [pc, #404]	; 18010 <print_full_field_name@@Base+0x56c>
   17e78:	mov	r1, sp
   17e7c:	ldr	r3, [r5, #136]	; 0x88
   17e80:	add	r3, r3, #2
   17e84:	ldr	r0, [r5, r3, lsl #2]
   17e88:	bl	12668 <coda_type_get_class@plt>
   17e8c:	cmp	r0, #0
   17e90:	bne	17fa4 <print_full_field_name@@Base+0x500>
   17e94:	ldr	r3, [sp]
   17e98:	add	r1, sp, #4
   17e9c:	cmp	r3, #6
   17ea0:	ldr	r3, [r5, #136]	; 0x88
   17ea4:	add	r3, r3, #2
   17ea8:	ldr	r0, [r5, r3, lsl #2]
   17eac:	beq	17fb4 <print_full_field_name@@Base+0x510>
   17eb0:	bl	12428 <coda_type_get_read_type@plt>
   17eb4:	cmp	r0, #0
   17eb8:	bne	17f94 <print_full_field_name@@Base+0x4f0>
   17ebc:	ldr	r0, [sp, #4]
   17ec0:	bl	12524 <coda_type_get_native_type_name@plt>
   17ec4:	mov	r1, r0
   17ec8:	ldr	r0, [pc, #324]	; 18014 <print_full_field_name@@Base+0x570>
   17ecc:	bl	12230 <printf@plt>
   17ed0:	ldr	r3, [sp, #4]
   17ed4:	sub	r3, r3, #11
   17ed8:	cmp	r3, #1
   17edc:	bhi	17dfc <print_full_field_name@@Base+0x358>
   17ee0:	mov	r0, #40	; 0x28
   17ee4:	bl	124c4 <putchar@plt>
   17ee8:	ldr	r1, [r5, #3360]	; 0xd20
   17eec:	cmp	r1, #0
   17ef0:	ble	17fe0 <print_full_field_name@@Base+0x53c>
   17ef4:	ldr	r0, [r4]
   17ef8:	sub	r1, r1, #1
   17efc:	bl	179a0 <print_json_data@@Base+0xe8>
   17f00:	mov	r0, #41	; 0x29
   17f04:	bl	124c4 <putchar@plt>
   17f08:	b	17dfc <print_full_field_name@@Base+0x358>
   17f0c:	ldr	r2, [pc, #252]	; 18010 <print_full_field_name@@Base+0x56c>
   17f10:	add	r1, sp, #4
   17f14:	ldr	r3, [r2, #136]	; 0x88
   17f18:	add	r3, r3, #2
   17f1c:	ldr	r0, [r2, r3, lsl #2]
   17f20:	bl	1235c <coda_type_get_description@plt>
   17f24:	cmp	r0, #0
   17f28:	bne	17fac <print_full_field_name@@Base+0x508>
   17f2c:	ldr	r1, [sp, #4]
   17f30:	cmp	r1, #0
   17f34:	beq	17e1c <print_full_field_name@@Base+0x378>
   17f38:	ldrb	r3, [r1]
   17f3c:	cmp	r3, #0
   17f40:	beq	17e1c <print_full_field_name@@Base+0x378>
   17f44:	ldr	r0, [pc, #204]	; 18018 <print_full_field_name@@Base+0x574>
   17f48:	bl	12230 <printf@plt>
   17f4c:	b	17e1c <print_full_field_name@@Base+0x378>
   17f50:	ldr	r2, [pc, #184]	; 18010 <print_full_field_name@@Base+0x56c>
   17f54:	add	r1, sp, #4
   17f58:	ldr	r3, [r2, #136]	; 0x88
   17f5c:	add	r3, r3, #2
   17f60:	ldr	r0, [r2, r3, lsl #2]
   17f64:	bl	12350 <coda_type_get_unit@plt>
   17f68:	cmp	r0, #0
   17f6c:	bne	17f9c <print_full_field_name@@Base+0x4f8>
   17f70:	ldr	r1, [sp, #4]
   17f74:	cmp	r1, #0
   17f78:	beq	17e0c <print_full_field_name@@Base+0x368>
   17f7c:	ldrb	r3, [r1]
   17f80:	cmp	r3, #0
   17f84:	beq	17e0c <print_full_field_name@@Base+0x368>
   17f88:	ldr	r0, [pc, #140]	; 1801c <print_full_field_name@@Base+0x578>
   17f8c:	bl	12230 <printf@plt>
   17f90:	b	17e0c <print_full_field_name@@Base+0x368>
   17f94:	bl	196f0 <handle_coda_error@@Base>
   17f98:	b	17ebc <print_full_field_name@@Base+0x418>
   17f9c:	bl	196f0 <handle_coda_error@@Base>
   17fa0:	b	17f70 <print_full_field_name@@Base+0x4cc>
   17fa4:	bl	196f0 <handle_coda_error@@Base>
   17fa8:	b	17e94 <print_full_field_name@@Base+0x3f0>
   17fac:	bl	196f0 <handle_coda_error@@Base>
   17fb0:	b	17f2c <print_full_field_name@@Base+0x488>
   17fb4:	bl	124dc <coda_type_get_special_type@plt>
   17fb8:	cmp	r0, #0
   17fbc:	bne	17fd8 <print_full_field_name@@Base+0x534>
   17fc0:	ldr	r0, [sp, #4]
   17fc4:	bl	121d0 <coda_type_get_special_type_name@plt>
   17fc8:	mov	r1, r0
   17fcc:	ldr	r0, [pc, #64]	; 18014 <print_full_field_name@@Base+0x570>
   17fd0:	bl	12230 <printf@plt>
   17fd4:	b	17dfc <print_full_field_name@@Base+0x358>
   17fd8:	bl	196f0 <handle_coda_error@@Base>
   17fdc:	b	17fc0 <print_full_field_name@@Base+0x51c>
   17fe0:	ldr	r3, [pc, #56]	; 18020 <print_full_field_name@@Base+0x57c>
   17fe4:	mov	r2, #238	; 0xee
   17fe8:	ldr	r1, [pc, #52]	; 18024 <print_full_field_name@@Base+0x580>
   17fec:	ldr	r0, [pc, #52]	; 18028 <print_full_field_name@@Base+0x584>
   17ff0:	bl	1265c <__assert_fail@plt>
   17ff4:	andeq	sp, r2, ip, lsr #1
   17ff8:			; <UNDEFINED> instruction: 0x0002c1bc
   17ffc:	andeq	sp, r2, r0, lsr #1
   18000:	andeq	ip, r2, r8, ror #3
   18004:	andeq	sp, r2, r4, lsr #1
   18008:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1800c:	strheq	sp, [r2], -r8
   18010:	strdeq	ip, [r2], -r0
   18014:	andeq	sl, r1, r4, asr r0
   18018:	ldrdeq	sl, [r1], -r8
   1801c:	ldrdeq	sl, [r1], -r0
   18020:	andeq	sl, r1, r0, lsr #32
   18024:	andeq	sl, r1, r8, asr r0
   18028:	strheq	sl, [r1], -r0
   1802c:	push	{r4, r5, r6, r7, lr}
   18030:	sub	sp, sp, #20
   18034:	ldr	r4, [pc, #816]	; 1836c <print_full_field_name@@Base+0x8c8>
   18038:	add	r1, sp, #4
   1803c:	ldr	r3, [r4, #136]	; 0x88
   18040:	add	r3, r3, #2
   18044:	ldr	r0, [r4, r3, lsl #2]
   18048:	bl	12668 <coda_type_get_class@plt>
   1804c:	cmp	r0, #0
   18050:	bne	18274 <print_full_field_name@@Base+0x7d0>
   18054:	ldr	r3, [sp, #4]
   18058:	cmp	r3, #6
   1805c:	ldrls	pc, [pc, r3, lsl #2]
   18060:	b	18198 <print_full_field_name@@Base+0x6f4>
   18064:	andeq	r8, r1, r0, lsl #1
   18068:	andeq	r8, r1, ip, lsl #4
   1806c:	ldrdeq	r8, [r1], -r4
   18070:	ldrdeq	r8, [r1], -r4
   18074:	ldrdeq	r8, [r1], -r4
   18078:	ldrdeq	r8, [r1], -r4
   1807c:	andeq	r8, r1, r0, lsr #3
   18080:	ldr	r3, [r4, #136]	; 0x88
   18084:	cmp	r3, #30
   18088:	bgt	18198 <print_full_field_name@@Base+0x6f4>
   1808c:	ldr	r2, [r4, #3748]	; 0xea4
   18090:	add	r3, r3, #2
   18094:	add	r1, sp, #8
   18098:	ldr	r0, [r4, r3, lsl #2]
   1809c:	add	r3, r2, #1
   180a0:	str	r3, [r4, #3748]	; 0xea4
   180a4:	bl	12410 <coda_type_get_num_record_fields@plt>
   180a8:	cmp	r0, #0
   180ac:	beq	180b4 <print_full_field_name@@Base+0x610>
   180b0:	bl	196f0 <handle_coda_error@@Base>
   180b4:	ldr	r2, [r4, #796]	; 0x31c
   180b8:	ldr	r3, [r4, #136]	; 0x88
   180bc:	add	r2, r2, #166	; 0xa6
   180c0:	add	r3, r3, #1
   180c4:	ldr	r7, [r4, r2, lsl #2]
   180c8:	str	r3, [r4, #136]	; 0x88
   180cc:	cmp	r7, #0
   180d0:	beq	182f0 <print_full_field_name@@Base+0x84c>
   180d4:	mov	r0, r7
   180d8:	mov	r6, #1
   180dc:	bl	16e6c <codadump_filter_get_fieldname@@Base>
   180e0:	subs	r5, r0, #0
   180e4:	beq	1833c <print_full_field_name@@Base+0x898>
   180e8:	ldr	r3, [r4, #136]	; 0x88
   180ec:	add	r2, sp, #12
   180f0:	add	r3, r3, #1
   180f4:	mov	r1, r5
   180f8:	ldr	r0, [r4, r3, lsl #2]
   180fc:	bl	12578 <coda_type_get_record_field_index_from_name@plt>
   18100:	cmp	r0, #0
   18104:	beq	1811c <print_full_field_name@@Base+0x678>
   18108:	bl	12608 <coda_get_errno@plt>
   1810c:	ldr	r3, [r0]
   18110:	cmn	r3, #102	; 0x66
   18114:	beq	18350 <print_full_field_name@@Base+0x8ac>
   18118:	bl	196f0 <handle_coda_error@@Base>
   1811c:	ldr	r5, [r4, #796]	; 0x31c
   18120:	add	r3, r5, #166	; 0xa6
   18124:	add	r5, r5, #167	; 0xa7
   18128:	ldr	r0, [r4, r3, lsl #2]
   1812c:	bl	16ea0 <codadump_filter_get_subfilter@@Base>
   18130:	ldr	r3, [r4, #796]	; 0x31c
   18134:	mov	r1, r6
   18138:	add	r3, r3, #1
   1813c:	str	r3, [r4, #796]	; 0x31c
   18140:	str	r0, [r4, r5, lsl #2]
   18144:	ldr	r0, [sp, #12]
   18148:	bl	18388 <print_full_field_name@@Base+0x8e4>
   1814c:	ldr	r3, [r4, #796]	; 0x31c
   18150:	add	r5, r3, #165	; 0xa5
   18154:	sub	r3, r3, #1
   18158:	ldr	r0, [r4, r5, lsl #2]
   1815c:	str	r3, [r4, #796]	; 0x31c
   18160:	bl	16ed4 <codadump_filter_get_next_filter@@Base>
   18164:	ldr	r3, [r4, #796]	; 0x31c
   18168:	add	r3, r3, #166	; 0xa6
   1816c:	str	r0, [r4, r5, lsl #2]
   18170:	ldr	r0, [r4, r3, lsl #2]
   18174:	cmp	r0, #0
   18178:	bne	180dc <print_full_field_name@@Base+0x638>
   1817c:	str	r7, [r4, r3, lsl #2]
   18180:	ldr	r2, [r4, #136]	; 0x88
   18184:	ldr	r3, [r4, #3748]	; 0xea4
   18188:	sub	r2, r2, #1
   1818c:	sub	r3, r3, #1
   18190:	str	r2, [r4, #136]	; 0x88
   18194:	str	r3, [r4, #3748]	; 0xea4
   18198:	add	sp, sp, #20
   1819c:	pop	{r4, r5, r6, r7, pc}
   181a0:	bl	121f4 <coda_get_option_bypass_special_types@plt>
   181a4:	ldr	r3, [r4, #136]	; 0x88
   181a8:	cmp	r0, #0
   181ac:	beq	182a8 <print_full_field_name@@Base+0x804>
   181b0:	add	r3, r3, #2
   181b4:	add	r1, r4, r3, lsl #2
   181b8:	ldr	r0, [r4, r3, lsl #2]
   181bc:	bl	12614 <coda_type_get_special_base_type@plt>
   181c0:	cmp	r0, #0
   181c4:	bne	1832c <print_full_field_name@@Base+0x888>
   181c8:	bl	1802c <print_full_field_name@@Base+0x588>
   181cc:	add	sp, sp, #20
   181d0:	pop	{r4, r5, r6, r7, pc}
   181d4:	ldr	r3, [r4, #136]	; 0x88
   181d8:	add	r1, sp, #12
   181dc:	add	r3, r3, #2
   181e0:	ldr	r0, [r4, r3, lsl #2]
   181e4:	bl	12428 <coda_type_get_read_type@plt>
   181e8:	cmp	r0, #0
   181ec:	bne	182e0 <print_full_field_name@@Base+0x83c>
   181f0:	ldr	r3, [sp, #12]
   181f4:	sub	r3, r3, #11
   181f8:	cmp	r3, #1
   181fc:	bls	1827c <print_full_field_name@@Base+0x7d8>
   18200:	bl	17db4 <print_full_field_name@@Base+0x310>
   18204:	add	sp, sp, #20
   18208:	pop	{r4, r5, r6, r7, pc}
   1820c:	ldr	r3, [r4, #136]	; 0x88
   18210:	cmp	r3, #30
   18214:	bgt	18198 <print_full_field_name@@Base+0x6f4>
   18218:	bl	15ef4 <dim_enter_array@@Base>
   1821c:	ldr	r3, [r4, #136]	; 0x88
   18220:	ldr	r2, [r4, #3360]	; 0xd20
   18224:	add	r1, r3, #3
   18228:	add	r0, r3, #2
   1822c:	add	r2, r2, #1
   18230:	add	r3, r3, #1
   18234:	add	r1, r4, r1, lsl #2
   18238:	ldr	r0, [r4, r0, lsl #2]
   1823c:	str	r3, [r4, #136]	; 0x88
   18240:	str	r2, [r4, #3360]	; 0xd20
   18244:	bl	12500 <coda_type_get_array_base_type@plt>
   18248:	cmp	r0, #0
   1824c:	bne	182e8 <print_full_field_name@@Base+0x844>
   18250:	bl	1802c <print_full_field_name@@Base+0x588>
   18254:	ldr	r2, [r4, #136]	; 0x88
   18258:	ldr	r3, [r4, #3360]	; 0xd20
   1825c:	sub	r2, r2, #1
   18260:	sub	r3, r3, #1
   18264:	str	r2, [r4, #136]	; 0x88
   18268:	str	r3, [r4, #3360]	; 0xd20
   1826c:	bl	1688c <dim_leave_array@@Base>
   18270:	b	18198 <print_full_field_name@@Base+0x6f4>
   18274:	bl	196f0 <handle_coda_error@@Base>
   18278:	b	18054 <print_full_field_name@@Base+0x5b0>
   1827c:	bl	15ef4 <dim_enter_array@@Base>
   18280:	ldr	r3, [r4, #3360]	; 0xd20
   18284:	add	r3, r3, #1
   18288:	str	r3, [r4, #3360]	; 0xd20
   1828c:	bl	17db4 <print_full_field_name@@Base+0x310>
   18290:	ldr	r3, [r4, #3360]	; 0xd20
   18294:	sub	r3, r3, #1
   18298:	str	r3, [r4, #3360]	; 0xd20
   1829c:	bl	1688c <dim_leave_array@@Base>
   182a0:	add	sp, sp, #20
   182a4:	pop	{r4, r5, r6, r7, pc}
   182a8:	add	r3, r3, #2
   182ac:	add	r1, sp, #12
   182b0:	ldr	r0, [r4, r3, lsl #2]
   182b4:	bl	124dc <coda_type_get_special_type@plt>
   182b8:	cmp	r0, #0
   182bc:	bne	18334 <print_full_field_name@@Base+0x890>
   182c0:	ldr	r3, [sp, #12]
   182c4:	cmp	r3, #3
   182c8:	ldrls	pc, [pc, r3, lsl #2]
   182cc:	b	18198 <print_full_field_name@@Base+0x6f4>
   182d0:	muleq	r1, r8, r1
   182d4:	andeq	r8, r1, r0, lsl #4
   182d8:	andeq	r8, r1, r0, lsl #4
   182dc:	andeq	r8, r1, ip, ror r2
   182e0:	bl	196f0 <handle_coda_error@@Base>
   182e4:	b	181f0 <print_full_field_name@@Base+0x74c>
   182e8:	bl	196f0 <handle_coda_error@@Base>
   182ec:	b	18250 <print_full_field_name@@Base+0x7ac>
   182f0:	ldr	r3, [sp, #8]
   182f4:	str	r7, [sp, #12]
   182f8:	cmp	r3, #0
   182fc:	ble	18180 <print_full_field_name@@Base+0x6dc>
   18300:	mov	r0, r7
   18304:	mov	r5, r7
   18308:	mov	r1, r5
   1830c:	bl	18388 <print_full_field_name@@Base+0x8e4>
   18310:	ldr	r0, [sp, #12]
   18314:	ldr	r3, [sp, #8]
   18318:	add	r0, r0, #1
   1831c:	cmp	r3, r0
   18320:	str	r0, [sp, #12]
   18324:	bgt	18308 <print_full_field_name@@Base+0x864>
   18328:	b	18180 <print_full_field_name@@Base+0x6dc>
   1832c:	bl	196f0 <handle_coda_error@@Base>
   18330:	b	181c8 <print_full_field_name@@Base+0x724>
   18334:	bl	196f0 <handle_coda_error@@Base>
   18338:	b	182c0 <print_full_field_name@@Base+0x81c>
   1833c:	ldr	r3, [pc, #44]	; 18370 <print_full_field_name@@Base+0x8cc>
   18340:	ldr	r2, [pc, #44]	; 18374 <print_full_field_name@@Base+0x8d0>
   18344:	ldr	r1, [pc, #44]	; 18378 <print_full_field_name@@Base+0x8d4>
   18348:	ldr	r0, [pc, #44]	; 1837c <print_full_field_name@@Base+0x8d8>
   1834c:	bl	1265c <__assert_fail@plt>
   18350:	ldr	r3, [pc, #40]	; 18380 <print_full_field_name@@Base+0x8dc>
   18354:	mov	r2, r5
   18358:	ldr	r1, [pc, #36]	; 18384 <print_full_field_name@@Base+0x8e0>
   1835c:	ldr	r0, [r3]
   18360:	bl	12464 <fprintf@plt>
   18364:	mov	r0, #1
   18368:	bl	1241c <exit@plt>
   1836c:	strdeq	ip, [r2], -r0
   18370:	andeq	sl, r1, r4, lsr r0
   18374:	andeq	r0, r0, r9, lsl #3
   18378:	andeq	sl, r1, r8, asr r0
   1837c:	andeq	sl, r1, r0, ror #1
   18380:			; <UNDEFINED> instruction: 0x0002c1b8
   18384:	strdeq	sl, [r1], -r0
   18388:	push	{r4, r5, r6, lr}
   1838c:	sub	sp, sp, #8
   18390:	ldr	r4, [pc, #292]	; 184bc <print_full_field_name@@Base+0xa18>
   18394:	mov	r5, r0
   18398:	mov	r6, r1
   1839c:	ldr	r3, [r4, #3748]	; 0xea4
   183a0:	ldr	r2, [r4, #136]	; 0x88
   183a4:	mov	r1, r0
   183a8:	add	r2, r2, #1
   183ac:	add	r3, r4, r3, lsl #2
   183b0:	ldr	r0, [r4, r2, lsl #2]
   183b4:	mov	r2, sp
   183b8:	str	r5, [r3, #3488]	; 0xda0
   183bc:	bl	12224 <coda_type_get_record_field_hidden_status@plt>
   183c0:	cmp	r0, #0
   183c4:	bne	18490 <print_full_field_name@@Base+0x9ec>
   183c8:	ldr	r3, [sp]
   183cc:	adds	r3, r3, #0
   183d0:	movne	r3, #1
   183d4:	cmp	r6, #0
   183d8:	movne	r3, #0
   183dc:	cmp	r3, #0
   183e0:	bne	1844c <print_full_field_name@@Base+0x9a8>
   183e4:	ldr	r3, [pc, #212]	; 184c0 <print_full_field_name@@Base+0xa1c>
   183e8:	ldr	r3, [r3]
   183ec:	cmp	r3, #0
   183f0:	ldr	r3, [r4, #136]	; 0x88
   183f4:	bne	18454 <print_full_field_name@@Base+0x9b0>
   183f8:	sub	r3, r3, #1
   183fc:	ldr	r2, [r4, #3748]	; 0xea4
   18400:	add	r3, r3, #2
   18404:	add	r2, r2, #904	; 0x388
   18408:	ldr	r0, [r4, r3, lsl #2]
   1840c:	add	r2, r4, r2, lsl #2
   18410:	mov	r1, r5
   18414:	bl	12620 <coda_type_get_record_field_name@plt>
   18418:	cmp	r0, #0
   1841c:	bne	18498 <print_full_field_name@@Base+0x9f4>
   18420:	ldr	r3, [r4, #136]	; 0x88
   18424:	mov	r1, r5
   18428:	add	r2, r3, #2
   1842c:	add	r3, r3, #1
   18430:	add	r2, r4, r2, lsl #2
   18434:	ldr	r0, [r4, r3, lsl #2]
   18438:	bl	122d8 <coda_type_get_record_field_type@plt>
   1843c:	cmp	r0, #0
   18440:	beq	18448 <print_full_field_name@@Base+0x9a4>
   18444:	bl	196f0 <handle_coda_error@@Base>
   18448:	bl	1802c <print_full_field_name@@Base+0x588>
   1844c:	add	sp, sp, #8
   18450:	pop	{r4, r5, r6, pc}
   18454:	add	r3, r3, #1
   18458:	add	r2, sp, #4
   1845c:	mov	r1, r5
   18460:	ldr	r0, [r4, r3, lsl #2]
   18464:	bl	12314 <coda_type_get_record_field_available_status@plt>
   18468:	cmp	r0, #0
   1846c:	bne	184a0 <print_full_field_name@@Base+0x9fc>
   18470:	ldr	r2, [sp, #4]
   18474:	cmn	r2, #1
   18478:	beq	184a8 <print_full_field_name@@Base+0xa04>
   1847c:	ldr	r3, [r4, #136]	; 0x88
   18480:	sub	r3, r3, #1
   18484:	add	r1, r4, r3, lsl #2
   18488:	str	r2, [r1, #3364]	; 0xd24
   1848c:	b	183fc <print_full_field_name@@Base+0x958>
   18490:	bl	196f0 <handle_coda_error@@Base>
   18494:	b	183c8 <print_full_field_name@@Base+0x924>
   18498:	bl	196f0 <handle_coda_error@@Base>
   1849c:	b	18420 <print_full_field_name@@Base+0x97c>
   184a0:	bl	196f0 <handle_coda_error@@Base>
   184a4:	b	18470 <print_full_field_name@@Base+0x9cc>
   184a8:	bl	169fc <dim_record_field_available@@Base>
   184ac:	cmp	r0, #0
   184b0:	beq	1844c <print_full_field_name@@Base+0x9a8>
   184b4:	ldr	r2, [sp, #4]
   184b8:	b	1847c <print_full_field_name@@Base+0x9d8>
   184bc:	strdeq	ip, [r2], -r0
   184c0:	andeq	ip, r2, ip, ror #3

000184c4 <traverse_info_init@@Base>:
   184c4:	ldr	r3, [pc, #20]	; 184e0 <traverse_info_init@@Base+0x1c>
   184c8:	mov	r2, #0
   184cc:	str	r2, [r3, #4]
   184d0:	str	r2, [r3, #136]	; 0x88
   184d4:	str	r2, [r3, #3360]	; 0xd20
   184d8:	str	r2, [r3, #3748]	; 0xea4
   184dc:	bx	lr
   184e0:	strdeq	ip, [r2], -r0

000184e4 <traverse_info_done@@Base>:
   184e4:	push	{r4, lr}
   184e8:	ldr	r4, [pc, #36]	; 18514 <traverse_info_done@@Base+0x30>
   184ec:	ldr	r0, [r4, #4]
   184f0:	cmp	r0, #0
   184f4:	beq	184fc <traverse_info_done@@Base+0x18>
   184f8:	bl	12548 <coda_close@plt>
   184fc:	ldr	r3, [r4, #664]	; 0x298
   18500:	cmp	r3, #0
   18504:	popeq	{r4, pc}
   18508:	ldr	r0, [pc, #8]	; 18518 <traverse_info_done@@Base+0x34>
   1850c:	pop	{r4, lr}
   18510:	b	16a0c <codadump_filter_remove@@Base>
   18514:	strdeq	ip, [r2], -r0
   18518:	andeq	ip, r2, r8, lsl #9

0001851c <traverse_product@@Base>:
   1851c:	push	{r4, lr}
   18520:	ldr	r4, [pc, #172]	; 185d4 <traverse_product@@Base+0xb8>
   18524:	mov	r1, r4
   18528:	ldr	r0, [r4, #-4]
   1852c:	bl	12260 <coda_open@plt>
   18530:	cmp	r0, #0
   18534:	bne	18590 <traverse_product@@Base+0x74>
   18538:	ldr	r4, [pc, #152]	; 185d8 <traverse_product@@Base+0xbc>
   1853c:	add	r0, r4, #144	; 0x90
   18540:	ldr	r1, [r4, #4]
   18544:	bl	1238c <coda_cursor_set_product@plt>
   18548:	cmp	r0, #0
   1854c:	bne	18588 <traverse_product@@Base+0x6c>
   18550:	ldr	r1, [r4, #136]	; 0x88
   18554:	ldr	r0, [pc, #128]	; 185dc <traverse_product@@Base+0xc0>
   18558:	add	r1, r1, #2
   1855c:	add	r1, r4, r1, lsl #2
   18560:	bl	122e4 <coda_cursor_get_type@plt>
   18564:	cmp	r0, #0
   18568:	beq	18570 <traverse_product@@Base+0x54>
   1856c:	bl	196f0 <handle_coda_error@@Base>
   18570:	bl	1802c <print_full_field_name@@Base+0x588>
   18574:	ldr	r0, [r4, #4]
   18578:	bl	12548 <coda_close@plt>
   1857c:	mov	r3, #0
   18580:	str	r3, [r4, #4]
   18584:	pop	{r4, pc}
   18588:	bl	196f0 <handle_coda_error@@Base>
   1858c:	b	18550 <traverse_product@@Base+0x34>
   18590:	bl	12608 <coda_get_errno@plt>
   18594:	ldr	r3, [r0]
   18598:	cmn	r3, #21
   1859c:	beq	185a8 <traverse_product@@Base+0x8c>
   185a0:	bl	196f0 <handle_coda_error@@Base>
   185a4:	b	18538 <traverse_product@@Base+0x1c>
   185a8:	mov	r0, #0
   185ac:	bl	122a8 <coda_set_option_use_mmap@plt>
   185b0:	mov	r1, r4
   185b4:	ldr	r0, [r4, #-4]
   185b8:	bl	12260 <coda_open@plt>
   185bc:	mov	r4, r0
   185c0:	mov	r0, #1
   185c4:	bl	122a8 <coda_set_option_use_mmap@plt>
   185c8:	cmp	r4, #0
   185cc:	bne	185a0 <traverse_product@@Base+0x84>
   185d0:	b	18538 <traverse_product@@Base+0x1c>
   185d4:	strdeq	ip, [r2], -r4
   185d8:	strdeq	ip, [r2], -r0
   185dc:	andeq	ip, r2, r0, lsl #5
   185e0:	push	{r0, r1, r2, r3}
   185e4:	ldr	r1, [pc, #44]	; 18618 <traverse_product@@Base+0xfc>
   185e8:	push	{lr}		; (str lr, [sp, #-4]!)
   185ec:	sub	sp, sp, #12
   185f0:	add	r3, sp, #20
   185f4:	mov	r2, r3
   185f8:	ldr	r0, [r1]
   185fc:	ldr	r1, [sp, #16]
   18600:	str	r3, [sp, #4]
   18604:	bl	12560 <vfprintf@plt>
   18608:	add	sp, sp, #12
   1860c:	pop	{lr}		; (ldr lr, [sp], #4)
   18610:	add	sp, sp, #16
   18614:	bx	lr
   18618:	muleq	r2, r8, r0
   1861c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18620:	subs	r4, r1, #0
   18624:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18628:	mov	fp, r0
   1862c:	ldr	r8, [pc, #208]	; 18704 <traverse_product@@Base+0x1e8>
   18630:	ldr	sl, [pc, #208]	; 18708 <traverse_product@@Base+0x1ec>
   18634:	ldr	r9, [pc, #208]	; 1870c <traverse_product@@Base+0x1f0>
   18638:	ldr	r7, [pc, #208]	; 18710 <traverse_product@@Base+0x1f4>
   1863c:	ldr	r6, [pc, #208]	; 18714 <traverse_product@@Base+0x1f8>
   18640:	ldr	r5, [pc, #208]	; 18718 <traverse_product@@Base+0x1fc>
   18644:	add	r4, r0, r4
   18648:	b	18680 <traverse_product@@Base+0x164>
   1864c:	cmp	r1, #9
   18650:	beq	186f8 <traverse_product@@Base+0x1dc>
   18654:	cmp	r1, #10
   18658:	beq	186ec <traverse_product@@Base+0x1d0>
   1865c:	cmp	r1, #8
   18660:	beq	186e0 <traverse_product@@Base+0x1c4>
   18664:	sub	r3, r1, #32
   18668:	cmp	r3, #94	; 0x5e
   1866c:	movls	r0, r9
   18670:	movhi	r0, sl
   18674:	bl	185e0 <traverse_product@@Base+0xc4>
   18678:	cmp	fp, r4
   1867c:	beq	186b8 <traverse_product@@Base+0x19c>
   18680:	ldrb	r1, [fp], #1
   18684:	cmp	r1, #12
   18688:	beq	186bc <traverse_product@@Base+0x1a0>
   1868c:	bls	1864c <traverse_product@@Base+0x130>
   18690:	cmp	r1, #34	; 0x22
   18694:	beq	186d4 <traverse_product@@Base+0x1b8>
   18698:	cmp	r1, #92	; 0x5c
   1869c:	beq	186c8 <traverse_product@@Base+0x1ac>
   186a0:	cmp	r1, #13
   186a4:	bne	18664 <traverse_product@@Base+0x148>
   186a8:	mov	r0, r5
   186ac:	bl	185e0 <traverse_product@@Base+0xc4>
   186b0:	cmp	fp, r4
   186b4:	bne	18680 <traverse_product@@Base+0x164>
   186b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186bc:	mov	r0, r8
   186c0:	bl	185e0 <traverse_product@@Base+0xc4>
   186c4:	b	18678 <traverse_product@@Base+0x15c>
   186c8:	mov	r0, r6
   186cc:	bl	185e0 <traverse_product@@Base+0xc4>
   186d0:	b	18678 <traverse_product@@Base+0x15c>
   186d4:	mov	r0, r7
   186d8:	bl	185e0 <traverse_product@@Base+0xc4>
   186dc:	b	18678 <traverse_product@@Base+0x15c>
   186e0:	ldr	r0, [pc, #52]	; 1871c <traverse_product@@Base+0x200>
   186e4:	bl	185e0 <traverse_product@@Base+0xc4>
   186e8:	b	18678 <traverse_product@@Base+0x15c>
   186ec:	ldr	r0, [pc, #44]	; 18720 <traverse_product@@Base+0x204>
   186f0:	bl	185e0 <traverse_product@@Base+0xc4>
   186f4:	b	18678 <traverse_product@@Base+0x15c>
   186f8:	ldr	r0, [pc, #36]	; 18724 <traverse_product@@Base+0x208>
   186fc:	bl	185e0 <traverse_product@@Base+0xc4>
   18700:	b	18678 <traverse_product@@Base+0x15c>
   18704:	andeq	r9, r1, r8, ror sl
   18708:	andeq	r9, r1, r8, asr #30
   1870c:	strdeq	r9, [r1], -r4
   18710:	andeq	r9, r1, r4, asr #30
   18714:	andeq	r9, r1, r0, lsl #21
   18718:	andeq	r9, r1, ip, ror sl
   1871c:	andeq	r9, r1, r8, ror #20
   18720:	andeq	r9, r1, r0, ror sl
   18724:	andeq	r9, r1, ip, ror #20
   18728:	ldr	r3, [pc, #88]	; 18788 <traverse_product@@Base+0x26c>
   1872c:	push	{r4, r5, r6, r7, r8, lr}
   18730:	ldr	r4, [r3]
   18734:	cmp	r4, #0
   18738:	blt	18774 <traverse_product@@Base+0x258>
   1873c:	beq	18770 <traverse_product@@Base+0x254>
   18740:	ldr	r8, [pc, #68]	; 1878c <traverse_product@@Base+0x270>
   18744:	ldr	r7, [pc, #68]	; 18790 <traverse_product@@Base+0x274>
   18748:	mov	r6, #2
   1874c:	mov	r5, #1
   18750:	ldr	r3, [r8]
   18754:	mov	r2, r6
   18758:	mov	r1, r5
   1875c:	mov	r0, r7
   18760:	bl	12380 <fwrite@plt>
   18764:	subs	r4, r4, #1
   18768:	bne	18750 <traverse_product@@Base+0x234>
   1876c:	pop	{r4, r5, r6, r7, r8, pc}
   18770:	pop	{r4, r5, r6, r7, r8, pc}
   18774:	ldr	r3, [pc, #24]	; 18794 <traverse_product@@Base+0x278>
   18778:	mov	r2, #44	; 0x2c
   1877c:	ldr	r1, [pc, #20]	; 18798 <traverse_product@@Base+0x27c>
   18780:	ldr	r0, [pc, #20]	; 1879c <traverse_product@@Base+0x280>
   18784:	bl	1265c <__assert_fail@plt>
   18788:	andeq	ip, r2, ip, asr #3
   1878c:	muleq	r2, r8, r0
   18790:	ldrdeq	r9, [r1], -ip
   18794:	andeq	sl, r1, r4, lsr #2
   18798:	andeq	sl, r1, ip, lsr #2
   1879c:	andeq	r9, r1, ip, asr #22
   187a0:	push	{r0, r1, r2, r3}
   187a4:	push	{lr}		; (str lr, [sp, #-4]!)
   187a8:	sub	sp, sp, #12
   187ac:	bl	18728 <traverse_product@@Base+0x20c>
   187b0:	ldr	r2, [pc, #36]	; 187dc <traverse_product@@Base+0x2c0>
   187b4:	add	r3, sp, #20
   187b8:	ldr	r1, [sp, #16]
   187bc:	ldr	r0, [r2]
   187c0:	mov	r2, r3
   187c4:	str	r3, [sp, #4]
   187c8:	bl	12560 <vfprintf@plt>
   187cc:	add	sp, sp, #12
   187d0:	pop	{lr}		; (ldr lr, [sp], #4)
   187d4:	add	sp, sp, #16
   187d8:	bx	lr
   187dc:	muleq	r2, r8, r0
   187e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187e4:	mov	r2, #0
   187e8:	ldr	r4, [pc, #2232]	; 190a8 <traverse_product@@Base+0xb8c>
   187ec:	sub	sp, sp, #76	; 0x4c
   187f0:	mov	r8, r1
   187f4:	ldr	r3, [r4, #4]
   187f8:	str	r2, [sp, #12]
   187fc:	cmp	r3, r2
   18800:	mov	r5, r0
   18804:	bne	18ac0 <traverse_product@@Base+0x5a4>
   18808:	add	r1, sp, #8
   1880c:	mov	r0, r5
   18810:	bl	1232c <coda_cursor_get_type_class@plt>
   18814:	cmp	r0, #0
   18818:	bne	18ab8 <traverse_product@@Base+0x59c>
   1881c:	ldr	r3, [sp, #8]
   18820:	cmp	r3, #6
   18824:	ldrls	pc, [pc, r3, lsl #2]
   18828:	b	18928 <traverse_product@@Base+0x40c>
   1882c:	andeq	r8, r1, r8, asr #16
   18830:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18834:	andeq	r8, r1, r8, ror r9
   18838:	andeq	r8, r1, r8, ror r9
   1883c:	andeq	r8, r1, r8, ror r9
   18840:	andeq	r8, r1, r8, ror r9
   18844:	andeq	r8, r1, r4, asr #18
   18848:	add	r1, sp, #16
   1884c:	mov	r0, r5
   18850:	bl	12284 <coda_cursor_get_num_elements@plt>
   18854:	cmp	r0, #0
   18858:	beq	18860 <traverse_product@@Base+0x344>
   1885c:	bl	196f0 <handle_coda_error@@Base>
   18860:	ldr	r3, [sp, #16]
   18864:	cmp	r3, #0
   18868:	ble	18d50 <traverse_product@@Base+0x834>
   1886c:	cmp	r8, #0
   18870:	bne	18cac <traverse_product@@Base+0x790>
   18874:	add	r1, sp, #20
   18878:	mov	r0, r5
   1887c:	bl	122e4 <coda_cursor_get_type@plt>
   18880:	cmp	r0, #0
   18884:	bne	18ca4 <traverse_product@@Base+0x788>
   18888:	add	r1, sp, #24
   1888c:	ldr	r0, [sp, #20]
   18890:	bl	124e8 <coda_type_get_record_union_status@plt>
   18894:	cmp	r0, #0
   18898:	bne	18c9c <traverse_product@@Base+0x780>
   1889c:	ldr	r3, [sp, #24]
   188a0:	cmp	r3, #0
   188a4:	beq	18b70 <traverse_product@@Base+0x654>
   188a8:	add	r1, sp, #28
   188ac:	mov	r0, r5
   188b0:	bl	125d8 <coda_cursor_get_available_union_field_index@plt>
   188b4:	cmp	r0, #0
   188b8:	bne	18fac <traverse_product@@Base+0xa90>
   188bc:	add	r2, sp, #40	; 0x28
   188c0:	ldr	r1, [sp, #28]
   188c4:	ldr	r0, [sp, #20]
   188c8:	bl	12620 <coda_type_get_record_field_name@plt>
   188cc:	cmp	r0, #0
   188d0:	bne	18fa4 <traverse_product@@Base+0xa88>
   188d4:	ldr	r1, [sp, #28]
   188d8:	mov	r0, r5
   188dc:	bl	123a4 <coda_cursor_goto_record_field_by_index@plt>
   188e0:	cmp	r0, #0
   188e4:	bne	18f9c <traverse_product@@Base+0xa80>
   188e8:	cmp	r8, #0
   188ec:	bne	18f8c <traverse_product@@Base+0xa70>
   188f0:	ldr	r1, [sp, #40]	; 0x28
   188f4:	ldr	r0, [pc, #1968]	; 190ac <traverse_product@@Base+0xb90>
   188f8:	bl	185e0 <traverse_product@@Base+0xc4>
   188fc:	ldr	r3, [r4]
   18900:	mov	r1, #1
   18904:	add	r3, r3, r1
   18908:	mov	r0, r5
   1890c:	str	r3, [r4]
   18910:	bl	187e0 <traverse_product@@Base+0x2c4>
   18914:	ldr	r3, [r4]
   18918:	mov	r0, r5
   1891c:	sub	r3, r3, #1
   18920:	str	r3, [r4]
   18924:	bl	12404 <coda_cursor_goto_parent@plt>
   18928:	ldr	r3, [sp, #12]
   1892c:	cmp	r3, #0
   18930:	ldrne	r3, [r4]
   18934:	subne	r3, r3, #1
   18938:	strne	r3, [r4]
   1893c:	add	sp, sp, #76	; 0x4c
   18940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18944:	add	r1, sp, #28
   18948:	mov	r0, r5
   1894c:	bl	12368 <coda_cursor_get_special_type@plt>
   18950:	cmp	r0, #0
   18954:	bne	18b50 <traverse_product@@Base+0x634>
   18958:	ldr	r3, [sp, #28]
   1895c:	cmp	r3, #3
   18960:	ldrls	pc, [pc, r3, lsl #2]
   18964:	b	18928 <traverse_product@@Base+0x40c>
   18968:	andeq	r8, r1, r8, asr fp
   1896c:	andeq	r8, r1, ip, lsr #26
   18970:			; <UNDEFINED> instruction: 0x00018cb8
   18974:	strdeq	r8, [r1], -ip
   18978:	add	r1, sp, #28
   1897c:	mov	r0, r5
   18980:	bl	123c8 <coda_cursor_get_read_type@plt>
   18984:	cmp	r0, #0
   18988:	bne	18b48 <traverse_product@@Base+0x62c>
   1898c:	ldr	r3, [sp, #28]
   18990:	add	r3, r3, #1
   18994:	cmp	r3, #13
   18998:	ldrls	pc, [pc, r3, lsl #2]
   1899c:	b	18928 <traverse_product@@Base+0x40c>
   189a0:	andeq	r8, r1, r8, asr fp
   189a4:	andeq	r8, r1, r8, asr #30
   189a8:	andeq	r8, r1, r4, lsr #30
   189ac:	andeq	r8, r1, r8, asr #30
   189b0:	andeq	r8, r1, r4, lsr #30
   189b4:	andeq	r8, r1, r8, asr #30
   189b8:	andeq	r8, r1, r4, lsr #30
   189bc:	strdeq	r8, [r1], -r4
   189c0:	andeq	r8, r1, ip, asr sp
   189c4:	andeq	r8, r1, ip, lsl #27
   189c8:	andeq	r8, r1, ip, lsl #27
   189cc:	andeq	r8, r1, ip, lsr #28
   189d0:			; <UNDEFINED> instruction: 0x00018dbc
   189d4:	andeq	r8, r1, r4, ror #28
   189d8:	add	r6, sp, #40	; 0x28
   189dc:	mov	r2, r6
   189e0:	add	r1, sp, #32
   189e4:	mov	r0, r5
   189e8:	bl	12530 <coda_cursor_get_array_dim@plt>
   189ec:	cmp	r0, #0
   189f0:	bne	18b40 <traverse_product@@Base+0x624>
   189f4:	ldr	r8, [sp, #32]
   189f8:	cmp	r8, #0
   189fc:	blt	18b64 <traverse_product@@Base+0x648>
   18a00:	beq	18fb4 <traverse_product@@Base+0xa98>
   18a04:	add	r8, r6, r8, lsl #2
   18a08:	mov	r7, #1
   18a0c:	ldr	r3, [r6], #4
   18a10:	cmp	r6, r8
   18a14:	mul	r7, r3, r7
   18a18:	bne	18a0c <traverse_product@@Base+0x4f0>
   18a1c:	cmp	r7, #0
   18a20:	subgt	r8, r7, #1
   18a24:	ble	18b64 <traverse_product@@Base+0x648>
   18a28:	ldr	r0, [pc, #1664]	; 190b0 <traverse_product@@Base+0xb94>
   18a2c:	bl	185e0 <traverse_product@@Base+0xc4>
   18a30:	mov	r0, r5
   18a34:	bl	12374 <coda_cursor_goto_first_array_element@plt>
   18a38:	cmp	r0, #0
   18a3c:	bne	18f84 <traverse_product@@Base+0xa68>
   18a40:	mov	r6, #0
   18a44:	ldr	sl, [pc, #1640]	; 190b4 <traverse_product@@Base+0xb98>
   18a48:	mov	r9, r6
   18a4c:	b	18a58 <traverse_product@@Base+0x53c>
   18a50:	cmp	r7, r6
   18a54:	ble	18aac <traverse_product@@Base+0x590>
   18a58:	mov	r0, sl
   18a5c:	bl	187a0 <traverse_product@@Base+0x284>
   18a60:	ldr	r3, [r4]
   18a64:	mov	r0, r5
   18a68:	add	r3, r3, #1
   18a6c:	mov	r1, r9
   18a70:	str	r3, [r4]
   18a74:	bl	187e0 <traverse_product@@Base+0x2c4>
   18a78:	ldr	r3, [r4]
   18a7c:	cmp	r6, r8
   18a80:	sub	r3, r3, #1
   18a84:	mov	r0, r5
   18a88:	add	r6, r6, #1
   18a8c:	str	r3, [r4]
   18a90:	bge	18a50 <traverse_product@@Base+0x534>
   18a94:	bl	12470 <coda_cursor_goto_next_array_element@plt>
   18a98:	cmp	r0, #0
   18a9c:	beq	18a50 <traverse_product@@Base+0x534>
   18aa0:	bl	196f0 <handle_coda_error@@Base>
   18aa4:	cmp	r7, r6
   18aa8:	bgt	18a58 <traverse_product@@Base+0x53c>
   18aac:	mov	r0, r5
   18ab0:	bl	12404 <coda_cursor_goto_parent@plt>
   18ab4:	b	18928 <traverse_product@@Base+0x40c>
   18ab8:	bl	196f0 <handle_coda_error@@Base>
   18abc:	b	1881c <traverse_product@@Base+0x300>
   18ac0:	add	r1, sp, #12
   18ac4:	bl	12320 <coda_cursor_has_attributes@plt>
   18ac8:	cmp	r0, #0
   18acc:	bne	18c7c <traverse_product@@Base+0x760>
   18ad0:	ldr	r3, [sp, #12]
   18ad4:	cmp	r3, #0
   18ad8:	beq	18808 <traverse_product@@Base+0x2ec>
   18adc:	cmp	r8, #0
   18ae0:	bne	18f74 <traverse_product@@Base+0xa58>
   18ae4:	ldr	r0, [pc, #1484]	; 190b8 <traverse_product@@Base+0xb9c>
   18ae8:	bl	185e0 <traverse_product@@Base+0xc4>
   18aec:	mov	r0, r5
   18af0:	bl	124a0 <coda_cursor_goto_attributes@plt>
   18af4:	cmp	r0, #0
   18af8:	bne	18f6c <traverse_product@@Base+0xa50>
   18afc:	ldr	r3, [r4]
   18b00:	mov	r1, #1
   18b04:	add	r3, r3, r1
   18b08:	mov	r0, r5
   18b0c:	str	r3, [r4]
   18b10:	bl	187e0 <traverse_product@@Base+0x2c4>
   18b14:	ldr	r3, [r4]
   18b18:	mov	r0, r5
   18b1c:	sub	r3, r3, #1
   18b20:	str	r3, [r4]
   18b24:	bl	12404 <coda_cursor_goto_parent@plt>
   18b28:	ldr	r0, [pc, #1420]	; 190bc <traverse_product@@Base+0xba0>
   18b2c:	bl	187a0 <traverse_product@@Base+0x284>
   18b30:	ldr	r3, [r4]
   18b34:	add	r3, r3, #1
   18b38:	str	r3, [r4]
   18b3c:	b	18808 <traverse_product@@Base+0x2ec>
   18b40:	bl	196f0 <handle_coda_error@@Base>
   18b44:	b	189f4 <traverse_product@@Base+0x4d8>
   18b48:	bl	196f0 <handle_coda_error@@Base>
   18b4c:	b	1898c <traverse_product@@Base+0x470>
   18b50:	bl	196f0 <handle_coda_error@@Base>
   18b54:	b	18958 <traverse_product@@Base+0x43c>
   18b58:	ldr	r0, [pc, #1376]	; 190c0 <traverse_product@@Base+0xba4>
   18b5c:	bl	185e0 <traverse_product@@Base+0xc4>
   18b60:	b	18928 <traverse_product@@Base+0x40c>
   18b64:	ldr	r0, [pc, #1368]	; 190c4 <traverse_product@@Base+0xba8>
   18b68:	bl	185e0 <traverse_product@@Base+0xc4>
   18b6c:	b	18928 <traverse_product@@Base+0x40c>
   18b70:	mov	r0, r5
   18b74:	bl	12398 <coda_cursor_goto_first_record_field@plt>
   18b78:	cmp	r0, #0
   18b7c:	bne	18f94 <traverse_product@@Base+0xa78>
   18b80:	ldr	r3, [sp, #16]
   18b84:	mov	r1, #0
   18b88:	cmp	r3, r1
   18b8c:	str	r1, [sp, #28]
   18b90:	ble	18aac <traverse_product@@Base+0x590>
   18b94:	mov	r7, #1
   18b98:	ldr	sl, [pc, #1292]	; 190ac <traverse_product@@Base+0xb90>
   18b9c:	mov	r9, r7
   18ba0:	add	r6, sp, #40	; 0x28
   18ba4:	b	18bd8 <traverse_product@@Base+0x6bc>
   18ba8:	ldr	fp, [sp, #40]	; 0x28
   18bac:	cmp	fp, #0
   18bb0:	beq	18bfc <traverse_product@@Base+0x6e0>
   18bb4:	ldr	r3, [sp, #16]
   18bb8:	ldr	r1, [sp, #28]
   18bbc:	sub	r2, r3, #1
   18bc0:	cmp	r2, r1
   18bc4:	bgt	18c60 <traverse_product@@Base+0x744>
   18bc8:	add	r1, r1, #1
   18bcc:	cmp	r1, r3
   18bd0:	str	r1, [sp, #28]
   18bd4:	bge	18aac <traverse_product@@Base+0x590>
   18bd8:	mov	r2, r6
   18bdc:	ldr	r0, [sp, #20]
   18be0:	bl	12224 <coda_type_get_record_field_hidden_status@plt>
   18be4:	cmp	r0, #0
   18be8:	beq	18ba8 <traverse_product@@Base+0x68c>
   18bec:	bl	196f0 <handle_coda_error@@Base>
   18bf0:	ldr	fp, [sp, #40]	; 0x28
   18bf4:	cmp	fp, #0
   18bf8:	bne	18bb4 <traverse_product@@Base+0x698>
   18bfc:	add	r2, sp, #32
   18c00:	ldr	r1, [sp, #28]
   18c04:	ldr	r0, [sp, #20]
   18c08:	bl	12620 <coda_type_get_record_field_name@plt>
   18c0c:	cmp	r0, #0
   18c10:	bne	18c94 <traverse_product@@Base+0x778>
   18c14:	eor	r7, r7, #1
   18c18:	cmp	r8, #0
   18c1c:	orrne	r7, r7, #1
   18c20:	tst	r7, #1
   18c24:	bne	18c8c <traverse_product@@Base+0x770>
   18c28:	ldr	r1, [sp, #32]
   18c2c:	mov	r0, sl
   18c30:	bl	185e0 <traverse_product@@Base+0xc4>
   18c34:	ldr	r3, [r4]
   18c38:	mov	r1, r9
   18c3c:	add	r3, r3, #1
   18c40:	mov	r0, r5
   18c44:	str	r3, [r4]
   18c48:	bl	187e0 <traverse_product@@Base+0x2c4>
   18c4c:	ldr	r3, [r4]
   18c50:	mov	r7, fp
   18c54:	sub	r3, r3, #1
   18c58:	str	r3, [r4]
   18c5c:	b	18bb4 <traverse_product@@Base+0x698>
   18c60:	mov	r0, r5
   18c64:	bl	12590 <coda_cursor_goto_next_record_field@plt>
   18c68:	cmp	r0, #0
   18c6c:	bne	18c84 <traverse_product@@Base+0x768>
   18c70:	ldr	r3, [sp, #16]
   18c74:	ldr	r1, [sp, #28]
   18c78:	b	18bc8 <traverse_product@@Base+0x6ac>
   18c7c:	bl	196f0 <handle_coda_error@@Base>
   18c80:	b	18ad0 <traverse_product@@Base+0x5b4>
   18c84:	bl	196f0 <handle_coda_error@@Base>
   18c88:	b	18c70 <traverse_product@@Base+0x754>
   18c8c:	bl	18728 <traverse_product@@Base+0x20c>
   18c90:	b	18c28 <traverse_product@@Base+0x70c>
   18c94:	bl	196f0 <handle_coda_error@@Base>
   18c98:	b	18c14 <traverse_product@@Base+0x6f8>
   18c9c:	bl	196f0 <handle_coda_error@@Base>
   18ca0:	b	1889c <traverse_product@@Base+0x380>
   18ca4:	bl	196f0 <handle_coda_error@@Base>
   18ca8:	b	18888 <traverse_product@@Base+0x36c>
   18cac:	ldr	r0, [pc, #1020]	; 190b0 <traverse_product@@Base+0xb94>
   18cb0:	bl	185e0 <traverse_product@@Base+0xc4>
   18cb4:	b	18874 <traverse_product@@Base+0x358>
   18cb8:	mov	r0, r5
   18cbc:	add	r1, sp, #32
   18cc0:	bl	1244c <coda_cursor_read_double@plt>
   18cc4:	cmp	r0, #0
   18cc8:	bne	18fc4 <traverse_product@@Base+0xaa8>
   18ccc:	vldr	d0, [sp, #32]
   18cd0:	bl	12458 <coda_isNaN@plt>
   18cd4:	cmp	r0, #0
   18cd8:	bne	18cec <traverse_product@@Base+0x7d0>
   18cdc:	vldr	d0, [sp, #32]
   18ce0:	bl	122fc <coda_isInf@plt>
   18ce4:	cmp	r0, #0
   18ce8:	beq	1900c <traverse_product@@Base+0xaf0>
   18cec:	ldrd	r2, [sp, #32]
   18cf0:	ldr	r0, [pc, #976]	; 190c8 <traverse_product@@Base+0xbac>
   18cf4:	bl	185e0 <traverse_product@@Base+0xc4>
   18cf8:	b	18928 <traverse_product@@Base+0x40c>
   18cfc:	mov	r0, r5
   18d00:	add	r2, sp, #40	; 0x28
   18d04:	add	r1, sp, #32
   18d08:	bl	124f4 <coda_cursor_read_complex_double_split@plt>
   18d0c:	cmp	r0, #0
   18d10:	bne	18fbc <traverse_product@@Base+0xaa0>
   18d14:	ldrd	r6, [sp, #40]	; 0x28
   18d18:	ldrd	r2, [sp, #32]
   18d1c:	ldr	r0, [pc, #936]	; 190cc <traverse_product@@Base+0xbb0>
   18d20:	strd	r6, [sp]
   18d24:	bl	185e0 <traverse_product@@Base+0xc4>
   18d28:	b	18928 <traverse_product@@Base+0x40c>
   18d2c:	mov	r0, r5
   18d30:	add	r1, sp, #40	; 0x28
   18d34:	bl	1244c <coda_cursor_read_double@plt>
   18d38:	cmp	r0, #0
   18d3c:	bne	18fcc <traverse_product@@Base+0xab0>
   18d40:	ldrd	r2, [sp, #40]	; 0x28
   18d44:	ldr	r0, [pc, #892]	; 190c8 <traverse_product@@Base+0xbac>
   18d48:	bl	185e0 <traverse_product@@Base+0xc4>
   18d4c:	b	18928 <traverse_product@@Base+0x40c>
   18d50:	ldr	r0, [pc, #888]	; 190d0 <traverse_product@@Base+0xbb4>
   18d54:	bl	185e0 <traverse_product@@Base+0xc4>
   18d58:	b	18928 <traverse_product@@Base+0x40c>
   18d5c:	mov	r0, r5
   18d60:	add	r1, sp, #32
   18d64:	bl	12440 <coda_cursor_read_uint64@plt>
   18d68:	cmp	r0, #0
   18d6c:	bne	18fdc <traverse_product@@Base+0xac0>
   18d70:	ldrd	r0, [sp, #32]
   18d74:	add	r2, sp, #40	; 0x28
   18d78:	bl	12290 <coda_str64u@plt>
   18d7c:	add	r1, sp, #40	; 0x28
   18d80:	ldr	r0, [pc, #844]	; 190d4 <traverse_product@@Base+0xbb8>
   18d84:	bl	185e0 <traverse_product@@Base+0xc4>
   18d88:	b	18928 <traverse_product@@Base+0x40c>
   18d8c:	mov	r0, r5
   18d90:	add	r1, sp, #40	; 0x28
   18d94:	bl	1244c <coda_cursor_read_double@plt>
   18d98:	cmp	r0, #0
   18d9c:	bne	18ff4 <traverse_product@@Base+0xad8>
   18da0:	ldr	r3, [sp, #28]
   18da4:	cmp	r3, #8
   18da8:	ldrd	r2, [sp, #40]	; 0x28
   18dac:	bne	18d44 <traverse_product@@Base+0x828>
   18db0:	ldr	r0, [pc, #800]	; 190d8 <traverse_product@@Base+0xbbc>
   18db4:	bl	185e0 <traverse_product@@Base+0xc4>
   18db8:	b	18928 <traverse_product@@Base+0x40c>
   18dbc:	add	r1, sp, #40	; 0x28
   18dc0:	mov	r0, r5
   18dc4:	bl	12434 <coda_cursor_get_string_length@plt>
   18dc8:	cmp	r0, #0
   18dcc:	bne	18fec <traverse_product@@Base+0xad0>
   18dd0:	ldr	r0, [sp, #40]	; 0x28
   18dd4:	add	r0, r0, #1
   18dd8:	bl	123d4 <malloc@plt>
   18ddc:	subs	r6, r0, #0
   18de0:	beq	19058 <traverse_product@@Base+0xb3c>
   18de4:	ldr	r2, [sp, #40]	; 0x28
   18de8:	mov	r0, r5
   18dec:	add	r2, r2, #1
   18df0:	mov	r1, r6
   18df4:	bl	123f8 <coda_cursor_read_string@plt>
   18df8:	cmp	r0, #0
   18dfc:	bne	18fe4 <traverse_product@@Base+0xac8>
   18e00:	ldr	r0, [pc, #724]	; 190dc <traverse_product@@Base+0xbc0>
   18e04:	bl	185e0 <traverse_product@@Base+0xc4>
   18e08:	ldr	r1, [sp, #40]	; 0x28
   18e0c:	mov	r0, r6
   18e10:	bl	1861c <traverse_product@@Base+0x100>
   18e14:	ldr	r1, [sp, #40]	; 0x28
   18e18:	ldr	r0, [pc, #704]	; 190e0 <traverse_product@@Base+0xbc4>
   18e1c:	bl	185e0 <traverse_product@@Base+0xc4>
   18e20:	mov	r0, r6
   18e24:	bl	1229c <free@plt>
   18e28:	b	18928 <traverse_product@@Base+0x40c>
   18e2c:	add	r6, sp, #40	; 0x28
   18e30:	mov	r0, r5
   18e34:	mov	r1, r6
   18e38:	bl	124ac <coda_cursor_read_char@plt>
   18e3c:	cmp	r0, #0
   18e40:	bne	18fd4 <traverse_product@@Base+0xab8>
   18e44:	ldr	r0, [pc, #656]	; 190dc <traverse_product@@Base+0xbc0>
   18e48:	bl	185e0 <traverse_product@@Base+0xc4>
   18e4c:	mov	r0, r6
   18e50:	mov	r1, #1
   18e54:	bl	1861c <traverse_product@@Base+0x100>
   18e58:	ldr	r0, [pc, #640]	; 190e0 <traverse_product@@Base+0xbc4>
   18e5c:	bl	185e0 <traverse_product@@Base+0xc4>
   18e60:	b	18928 <traverse_product@@Base+0x40c>
   18e64:	add	r1, sp, #40	; 0x28
   18e68:	mov	r0, r5
   18e6c:	bl	125b4 <coda_cursor_get_bit_size@plt>
   18e70:	cmp	r0, #0
   18e74:	bne	19030 <traverse_product@@Base+0xb14>
   18e78:	ldrd	r8, [sp, #40]	; 0x28
   18e7c:	mov	r3, #0
   18e80:	and	r2, r8, #7
   18e84:	orrs	r3, r2, r3
   18e88:	lsr	r6, r8, #3
   18e8c:	movne	r3, #1
   18e90:	moveq	r3, #0
   18e94:	orr	r6, r6, r9, lsl #29
   18e98:	adds	r6, r6, r3
   18e9c:	mov	r0, r6
   18ea0:	bl	123d4 <malloc@plt>
   18ea4:	subs	sl, r0, #0
   18ea8:	beq	19080 <traverse_product@@Base+0xb64>
   18eac:	strd	r8, [sp]
   18eb0:	mov	r0, r5
   18eb4:	mov	r2, #0
   18eb8:	mov	r3, #0
   18ebc:	mov	r1, sl
   18ec0:	bl	12644 <coda_cursor_read_bits@plt>
   18ec4:	cmp	r0, #0
   18ec8:	bne	19038 <traverse_product@@Base+0xb1c>
   18ecc:	ldr	r0, [pc, #520]	; 190dc <traverse_product@@Base+0xbc0>
   18ed0:	bl	185e0 <traverse_product@@Base+0xc4>
   18ed4:	mov	r1, r6
   18ed8:	mov	r0, sl
   18edc:	bl	1861c <traverse_product@@Base+0x100>
   18ee0:	ldr	r0, [pc, #504]	; 190e0 <traverse_product@@Base+0xbc4>
   18ee4:	bl	185e0 <traverse_product@@Base+0xc4>
   18ee8:	mov	r0, sl
   18eec:	bl	1229c <free@plt>
   18ef0:	b	18928 <traverse_product@@Base+0x40c>
   18ef4:	mov	r0, r5
   18ef8:	add	r1, sp, #32
   18efc:	bl	12554 <coda_cursor_read_int64@plt>
   18f00:	cmp	r0, #0
   18f04:	bne	18ffc <traverse_product@@Base+0xae0>
   18f08:	ldrd	r0, [sp, #32]
   18f0c:	add	r2, sp, #40	; 0x28
   18f10:	bl	12650 <coda_str64@plt>
   18f14:	add	r1, sp, #40	; 0x28
   18f18:	ldr	r0, [pc, #436]	; 190d4 <traverse_product@@Base+0xbb8>
   18f1c:	bl	185e0 <traverse_product@@Base+0xc4>
   18f20:	b	18928 <traverse_product@@Base+0x40c>
   18f24:	mov	r0, r5
   18f28:	add	r1, sp, #40	; 0x28
   18f2c:	bl	122c0 <coda_cursor_read_uint32@plt>
   18f30:	cmp	r0, #0
   18f34:	bne	19040 <traverse_product@@Base+0xb24>
   18f38:	ldr	r1, [sp, #40]	; 0x28
   18f3c:	ldr	r0, [pc, #416]	; 190e4 <traverse_product@@Base+0xbc8>
   18f40:	bl	185e0 <traverse_product@@Base+0xc4>
   18f44:	b	18928 <traverse_product@@Base+0x40c>
   18f48:	mov	r0, r5
   18f4c:	add	r1, sp, #40	; 0x28
   18f50:	bl	125e4 <coda_cursor_read_int32@plt>
   18f54:	cmp	r0, #0
   18f58:	bne	19004 <traverse_product@@Base+0xae8>
   18f5c:	ldr	r1, [sp, #40]	; 0x28
   18f60:	ldr	r0, [pc, #384]	; 190e8 <traverse_product@@Base+0xbcc>
   18f64:	bl	185e0 <traverse_product@@Base+0xc4>
   18f68:	b	18928 <traverse_product@@Base+0x40c>
   18f6c:	bl	196f0 <handle_coda_error@@Base>
   18f70:	b	18afc <traverse_product@@Base+0x5e0>
   18f74:	ldr	r0, [pc, #308]	; 190b0 <traverse_product@@Base+0xb94>
   18f78:	bl	185e0 <traverse_product@@Base+0xc4>
   18f7c:	bl	18728 <traverse_product@@Base+0x20c>
   18f80:	b	18ae4 <traverse_product@@Base+0x5c8>
   18f84:	bl	196f0 <handle_coda_error@@Base>
   18f88:	b	18a40 <traverse_product@@Base+0x524>
   18f8c:	bl	18728 <traverse_product@@Base+0x20c>
   18f90:	b	188f0 <traverse_product@@Base+0x3d4>
   18f94:	bl	196f0 <handle_coda_error@@Base>
   18f98:	b	18b80 <traverse_product@@Base+0x664>
   18f9c:	bl	196f0 <handle_coda_error@@Base>
   18fa0:	b	188e8 <traverse_product@@Base+0x3cc>
   18fa4:	bl	196f0 <handle_coda_error@@Base>
   18fa8:	b	188d4 <traverse_product@@Base+0x3b8>
   18fac:	bl	196f0 <handle_coda_error@@Base>
   18fb0:	b	188bc <traverse_product@@Base+0x3a0>
   18fb4:	mov	r7, #1
   18fb8:	b	18a28 <traverse_product@@Base+0x50c>
   18fbc:	bl	196f0 <handle_coda_error@@Base>
   18fc0:	b	18d14 <traverse_product@@Base+0x7f8>
   18fc4:	bl	196f0 <handle_coda_error@@Base>
   18fc8:	b	18ccc <traverse_product@@Base+0x7b0>
   18fcc:	bl	196f0 <handle_coda_error@@Base>
   18fd0:	b	18d40 <traverse_product@@Base+0x824>
   18fd4:	bl	196f0 <handle_coda_error@@Base>
   18fd8:	b	18e44 <traverse_product@@Base+0x928>
   18fdc:	bl	196f0 <handle_coda_error@@Base>
   18fe0:	b	18d70 <traverse_product@@Base+0x854>
   18fe4:	bl	196f0 <handle_coda_error@@Base>
   18fe8:	b	18e00 <traverse_product@@Base+0x8e4>
   18fec:	bl	196f0 <handle_coda_error@@Base>
   18ff0:	b	18dd0 <traverse_product@@Base+0x8b4>
   18ff4:	bl	196f0 <handle_coda_error@@Base>
   18ff8:	b	18da0 <traverse_product@@Base+0x884>
   18ffc:	bl	196f0 <handle_coda_error@@Base>
   19000:	b	18f08 <traverse_product@@Base+0x9ec>
   19004:	bl	196f0 <handle_coda_error@@Base>
   19008:	b	18f5c <traverse_product@@Base+0xa40>
   1900c:	add	r1, sp, #40	; 0x28
   19010:	ldr	r0, [pc, #212]	; 190ec <traverse_product@@Base+0xbd0>
   19014:	vldr	d0, [sp, #32]
   19018:	bl	12278 <coda_time_double_to_string@plt>
   1901c:	cmp	r0, #0
   19020:	beq	19048 <traverse_product@@Base+0xb2c>
   19024:	ldr	r0, [pc, #196]	; 190f0 <traverse_product@@Base+0xbd4>
   19028:	bl	185e0 <traverse_product@@Base+0xc4>
   1902c:	b	18928 <traverse_product@@Base+0x40c>
   19030:	bl	196f0 <handle_coda_error@@Base>
   19034:	b	18e78 <traverse_product@@Base+0x95c>
   19038:	bl	196f0 <handle_coda_error@@Base>
   1903c:	b	18ecc <traverse_product@@Base+0x9b0>
   19040:	bl	196f0 <handle_coda_error@@Base>
   19044:	b	18f38 <traverse_product@@Base+0xa1c>
   19048:	add	r1, sp, #40	; 0x28
   1904c:	ldr	r0, [pc, #128]	; 190d4 <traverse_product@@Base+0xbb8>
   19050:	bl	185e0 <traverse_product@@Base+0xc4>
   19054:	b	18928 <traverse_product@@Base+0x40c>
   19058:	ldr	r2, [sp, #40]	; 0x28
   1905c:	ldr	r3, [pc, #144]	; 190f4 <traverse_product@@Base+0xbd8>
   19060:	add	r2, r2, #1
   19064:	str	r3, [sp]
   19068:	ldr	r1, [pc, #136]	; 190f8 <traverse_product@@Base+0xbdc>
   1906c:	ldr	r3, [pc, #136]	; 190fc <traverse_product@@Base+0xbe0>
   19070:	mvn	r0, #0
   19074:	bl	12254 <coda_set_error@plt>
   19078:	bl	196f0 <handle_coda_error@@Base>
   1907c:	b	18de4 <traverse_product@@Base+0x8c8>
   19080:	mov	r3, #392	; 0x188
   19084:	str	r3, [sp]
   19088:	mov	r2, r6
   1908c:	ldr	r3, [pc, #104]	; 190fc <traverse_product@@Base+0xbe0>
   19090:	ldr	r1, [pc, #96]	; 190f8 <traverse_product@@Base+0xbdc>
   19094:	mvn	r0, #0
   19098:	bl	12254 <coda_set_error@plt>
   1909c:	bl	196f0 <handle_coda_error@@Base>
   190a0:	ldrd	r8, [sp, #40]	; 0x28
   190a4:	b	18eac <traverse_product@@Base+0x990>
   190a8:	andeq	ip, r2, ip, asr #3
   190ac:	muleq	r1, r0, r1
   190b0:			; <UNDEFINED> instruction: 0x0001b2bc
   190b4:	muleq	r1, ip, r1
   190b8:	andeq	sl, r1, r0, lsl #3
   190bc:	andeq	sl, r1, r8, lsl #3
   190c0:	andeq	sl, r1, r8, lsr #3
   190c4:	andeq	sl, r1, r0, lsr #3
   190c8:	andeq	r9, r1, ip, asr #23
   190cc:			; <UNDEFINED> instruction: 0x0001a1b0
   190d0:	muleq	r1, r8, r1
   190d4:	andeq	r9, r1, r0, asr #23
   190d8:	andeq	r9, r1, r4, asr #23
   190dc:	ldrdeq	sl, [r1], -ip
   190e0:	andeq	sl, r1, r4, lsr #3
   190e4:			; <UNDEFINED> instruction: 0x00019bb8
   190e8:			; <UNDEFINED> instruction: 0x00019bb0
   190ec:	ldrdeq	r9, [r1], -r8
   190f0:	strdeq	r9, [r1], -r8
   190f4:	andeq	r0, r0, r9, ror #2
   190f8:	andeq	r9, r1, r4, lsr #20
   190fc:	andeq	sl, r1, ip, lsr #2

00019100 <print_yaml_data@@Base>:
   19100:	push	{r4, lr}
   19104:	sub	sp, sp, #528	; 0x210
   19108:	ldr	r3, [pc, #196]	; 191d4 <print_yaml_data@@Base+0xd4>
   1910c:	ldr	r4, [pc, #196]	; 191d8 <print_yaml_data@@Base+0xd8>
   19110:	add	r1, sp, #4
   19114:	str	r0, [r3, #4]
   19118:	ldr	r0, [r4]
   1911c:	bl	12260 <coda_open@plt>
   19120:	cmp	r0, #0
   19124:	bne	19190 <print_yaml_data@@Base+0x90>
   19128:	add	r0, sp, #8
   1912c:	ldr	r1, [sp, #4]
   19130:	bl	1238c <coda_cursor_set_product@plt>
   19134:	cmp	r0, #0
   19138:	bne	19188 <print_yaml_data@@Base+0x88>
   1913c:	ldr	r3, [pc, #152]	; 191dc <print_yaml_data@@Base+0xdc>
   19140:	ldr	r1, [r3]
   19144:	cmp	r1, #0
   19148:	beq	1915c <print_yaml_data@@Base+0x5c>
   1914c:	add	r0, sp, #8
   19150:	bl	1256c <coda_cursor_goto@plt>
   19154:	cmp	r0, #0
   19158:	bne	19180 <print_yaml_data@@Base+0x80>
   1915c:	mov	r0, #0
   19160:	bl	12200 <coda_set_option_perform_boundary_checks@plt>
   19164:	add	r0, sp, #8
   19168:	mov	r1, #0
   1916c:	bl	187e0 <traverse_product@@Base+0x2c4>
   19170:	ldr	r0, [sp, #4]
   19174:	bl	12548 <coda_close@plt>
   19178:	add	sp, sp, #528	; 0x210
   1917c:	pop	{r4, pc}
   19180:	bl	196f0 <handle_coda_error@@Base>
   19184:	b	1915c <print_yaml_data@@Base+0x5c>
   19188:	bl	196f0 <handle_coda_error@@Base>
   1918c:	b	1913c <print_yaml_data@@Base+0x3c>
   19190:	bl	12608 <coda_get_errno@plt>
   19194:	ldr	r3, [r0]
   19198:	cmn	r3, #21
   1919c:	beq	191a8 <print_yaml_data@@Base+0xa8>
   191a0:	bl	196f0 <handle_coda_error@@Base>
   191a4:	b	19128 <print_yaml_data@@Base+0x28>
   191a8:	mov	r0, #0
   191ac:	bl	122a8 <coda_set_option_use_mmap@plt>
   191b0:	add	r1, sp, #4
   191b4:	ldr	r0, [r4]
   191b8:	bl	12260 <coda_open@plt>
   191bc:	mov	r4, r0
   191c0:	mov	r0, #1
   191c4:	bl	122a8 <coda_set_option_use_mmap@plt>
   191c8:	cmp	r4, #0
   191cc:	bne	191a0 <print_yaml_data@@Base+0xa0>
   191d0:	b	19128 <print_yaml_data@@Base+0x28>
   191d4:	andeq	ip, r2, ip, asr #3
   191d8:	strdeq	ip, [r2], -r0
   191dc:	strheq	sp, [r2], -r0
   191e0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191e4:	ldr	r0, [pc, #984]	; 195c4 <print_yaml_data@@Base+0x4c4>
   191e8:	bl	123bc <puts@plt>
   191ec:	ldr	fp, [pc, #980]	; 195c8 <print_yaml_data@@Base+0x4c8>
   191f0:	ldr	r0, [pc, #980]	; 195cc <print_yaml_data@@Base+0x4cc>
   191f4:	bl	123bc <puts@plt>
   191f8:	ldr	r0, [pc, #976]	; 195d0 <print_yaml_data@@Base+0x4d0>
   191fc:	bl	123bc <puts@plt>
   19200:	mov	r0, fp
   19204:	ldr	r8, [pc, #968]	; 195d4 <print_yaml_data@@Base+0x4d4>
   19208:	bl	123bc <puts@plt>
   1920c:	ldr	r0, [pc, #964]	; 195d8 <print_yaml_data@@Base+0x4d8>
   19210:	ldr	r7, [pc, #964]	; 195dc <print_yaml_data@@Base+0x4dc>
   19214:	bl	123bc <puts@plt>
   19218:	ldr	r0, [pc, #960]	; 195e0 <print_yaml_data@@Base+0x4e0>
   1921c:	bl	123bc <puts@plt>
   19220:	ldr	sl, [pc, #956]	; 195e4 <print_yaml_data@@Base+0x4e4>
   19224:	mov	r0, r8
   19228:	bl	123bc <puts@plt>
   1922c:	ldr	r9, [pc, #948]	; 195e8 <print_yaml_data@@Base+0x4e8>
   19230:	mov	r0, r7
   19234:	bl	123bc <puts@plt>
   19238:	mov	r0, sl
   1923c:	bl	123bc <puts@plt>
   19240:	mov	r0, r9
   19244:	bl	123bc <puts@plt>
   19248:	ldr	r0, [pc, #924]	; 195ec <print_yaml_data@@Base+0x4ec>
   1924c:	bl	123bc <puts@plt>
   19250:	ldr	r0, [pc, #920]	; 195f0 <print_yaml_data@@Base+0x4f0>
   19254:	bl	123bc <puts@plt>
   19258:	ldr	r0, [pc, #916]	; 195f4 <print_yaml_data@@Base+0x4f4>
   1925c:	bl	123bc <puts@plt>
   19260:	ldr	r0, [pc, #912]	; 195f8 <print_yaml_data@@Base+0x4f8>
   19264:	bl	123bc <puts@plt>
   19268:	ldr	r0, [pc, #908]	; 195fc <print_yaml_data@@Base+0x4fc>
   1926c:	bl	123bc <puts@plt>
   19270:	ldr	r0, [pc, #904]	; 19600 <print_yaml_data@@Base+0x500>
   19274:	bl	123bc <puts@plt>
   19278:	ldr	r0, [pc, #900]	; 19604 <print_yaml_data@@Base+0x504>
   1927c:	ldr	r6, [pc, #900]	; 19608 <print_yaml_data@@Base+0x508>
   19280:	bl	123bc <puts@plt>
   19284:	ldr	r0, [pc, #896]	; 1960c <print_yaml_data@@Base+0x50c>
   19288:	ldr	r5, [pc, #896]	; 19610 <print_yaml_data@@Base+0x510>
   1928c:	bl	123bc <puts@plt>
   19290:	ldr	r0, [pc, #892]	; 19614 <print_yaml_data@@Base+0x514>
   19294:	ldr	r4, [pc, #892]	; 19618 <print_yaml_data@@Base+0x518>
   19298:	bl	123bc <puts@plt>
   1929c:	mov	r0, r6
   192a0:	bl	123bc <puts@plt>
   192a4:	mov	r0, r5
   192a8:	bl	123bc <puts@plt>
   192ac:	mov	r0, r4
   192b0:	bl	123bc <puts@plt>
   192b4:	ldr	r0, [pc, #864]	; 1961c <print_yaml_data@@Base+0x51c>
   192b8:	bl	123bc <puts@plt>
   192bc:	mov	r0, #10
   192c0:	bl	124c4 <putchar@plt>
   192c4:	ldr	r0, [pc, #852]	; 19620 <print_yaml_data@@Base+0x520>
   192c8:	bl	123bc <puts@plt>
   192cc:	ldr	r0, [pc, #848]	; 19624 <print_yaml_data@@Base+0x524>
   192d0:	bl	123bc <puts@plt>
   192d4:	mov	r0, fp
   192d8:	bl	123bc <puts@plt>
   192dc:	mov	r0, r8
   192e0:	bl	123bc <puts@plt>
   192e4:	mov	r0, r7
   192e8:	bl	123bc <puts@plt>
   192ec:	mov	r0, sl
   192f0:	bl	123bc <puts@plt>
   192f4:	mov	r0, r9
   192f8:	bl	123bc <puts@plt>
   192fc:	ldr	r0, [pc, #804]	; 19628 <print_yaml_data@@Base+0x528>
   19300:	bl	123bc <puts@plt>
   19304:	ldr	r0, [pc, #800]	; 1962c <print_yaml_data@@Base+0x52c>
   19308:	bl	123bc <puts@plt>
   1930c:	ldr	sl, [pc, #796]	; 19630 <print_yaml_data@@Base+0x530>
   19310:	ldr	r0, [pc, #796]	; 19634 <print_yaml_data@@Base+0x534>
   19314:	ldr	r9, [pc, #796]	; 19638 <print_yaml_data@@Base+0x538>
   19318:	bl	123bc <puts@plt>
   1931c:	ldr	r0, [pc, #792]	; 1963c <print_yaml_data@@Base+0x53c>
   19320:	bl	123bc <puts@plt>
   19324:	mov	r0, sl
   19328:	bl	123bc <puts@plt>
   1932c:	mov	r0, r9
   19330:	bl	123bc <puts@plt>
   19334:	ldr	r0, [pc, #772]	; 19640 <print_yaml_data@@Base+0x540>
   19338:	bl	123bc <puts@plt>
   1933c:	ldr	r0, [pc, #768]	; 19644 <print_yaml_data@@Base+0x544>
   19340:	bl	123bc <puts@plt>
   19344:	ldr	r0, [pc, #764]	; 19648 <print_yaml_data@@Base+0x548>
   19348:	bl	123bc <puts@plt>
   1934c:	ldr	r0, [pc, #760]	; 1964c <print_yaml_data@@Base+0x54c>
   19350:	bl	123bc <puts@plt>
   19354:	ldr	r0, [pc, #756]	; 19650 <print_yaml_data@@Base+0x550>
   19358:	bl	123bc <puts@plt>
   1935c:	ldr	r0, [pc, #752]	; 19654 <print_yaml_data@@Base+0x554>
   19360:	bl	123bc <puts@plt>
   19364:	mov	r0, r6
   19368:	bl	123bc <puts@plt>
   1936c:	mov	r0, r5
   19370:	bl	123bc <puts@plt>
   19374:	mov	r0, r4
   19378:	bl	123bc <puts@plt>
   1937c:	ldr	r0, [pc, #664]	; 1961c <print_yaml_data@@Base+0x51c>
   19380:	bl	123bc <puts@plt>
   19384:	mov	r0, #10
   19388:	bl	124c4 <putchar@plt>
   1938c:	ldr	r0, [pc, #708]	; 19658 <print_yaml_data@@Base+0x558>
   19390:	bl	123bc <puts@plt>
   19394:	ldr	r0, [pc, #704]	; 1965c <print_yaml_data@@Base+0x55c>
   19398:	bl	123bc <puts@plt>
   1939c:	ldr	r0, [pc, #700]	; 19660 <print_yaml_data@@Base+0x560>
   193a0:	bl	123bc <puts@plt>
   193a4:	ldr	r0, [pc, #696]	; 19664 <print_yaml_data@@Base+0x564>
   193a8:	bl	123bc <puts@plt>
   193ac:	ldr	r0, [pc, #692]	; 19668 <print_yaml_data@@Base+0x568>
   193b0:	bl	123bc <puts@plt>
   193b4:	ldr	r0, [pc, #688]	; 1966c <print_yaml_data@@Base+0x56c>
   193b8:	bl	123bc <puts@plt>
   193bc:	mov	r0, r8
   193c0:	bl	123bc <puts@plt>
   193c4:	mov	r0, r7
   193c8:	bl	123bc <puts@plt>
   193cc:	mov	r0, sl
   193d0:	bl	123bc <puts@plt>
   193d4:	mov	r0, r9
   193d8:	bl	123bc <puts@plt>
   193dc:	ldr	fp, [pc, #652]	; 19670 <print_yaml_data@@Base+0x570>
   193e0:	ldr	r0, [pc, #652]	; 19674 <print_yaml_data@@Base+0x574>
   193e4:	bl	123bc <puts@plt>
   193e8:	ldr	r0, [pc, #648]	; 19678 <print_yaml_data@@Base+0x578>
   193ec:	bl	123bc <puts@plt>
   193f0:	mov	r0, fp
   193f4:	bl	123bc <puts@plt>
   193f8:	mov	r0, r6
   193fc:	bl	123bc <puts@plt>
   19400:	mov	r0, r5
   19404:	bl	123bc <puts@plt>
   19408:	mov	r0, r4
   1940c:	bl	123bc <puts@plt>
   19410:	ldr	r0, [pc, #516]	; 1961c <print_yaml_data@@Base+0x51c>
   19414:	bl	123bc <puts@plt>
   19418:	mov	r0, #10
   1941c:	bl	124c4 <putchar@plt>
   19420:	ldr	r0, [pc, #596]	; 1967c <print_yaml_data@@Base+0x57c>
   19424:	bl	123bc <puts@plt>
   19428:	ldr	r0, [pc, #592]	; 19680 <print_yaml_data@@Base+0x580>
   1942c:	bl	123bc <puts@plt>
   19430:	ldr	r0, [pc, #588]	; 19684 <print_yaml_data@@Base+0x584>
   19434:	bl	123bc <puts@plt>
   19438:	ldr	r0, [pc, #548]	; 19664 <print_yaml_data@@Base+0x564>
   1943c:	bl	123bc <puts@plt>
   19440:	ldr	r0, [pc, #544]	; 19668 <print_yaml_data@@Base+0x568>
   19444:	bl	123bc <puts@plt>
   19448:	ldr	r0, [pc, #568]	; 19688 <print_yaml_data@@Base+0x588>
   1944c:	bl	123bc <puts@plt>
   19450:	ldr	r0, [pc, #564]	; 1968c <print_yaml_data@@Base+0x58c>
   19454:	bl	123bc <puts@plt>
   19458:	mov	r0, r8
   1945c:	bl	123bc <puts@plt>
   19460:	mov	r0, r7
   19464:	bl	123bc <puts@plt>
   19468:	mov	r0, sl
   1946c:	bl	123bc <puts@plt>
   19470:	mov	r0, r9
   19474:	bl	123bc <puts@plt>
   19478:	ldr	r0, [pc, #500]	; 19674 <print_yaml_data@@Base+0x574>
   1947c:	bl	123bc <puts@plt>
   19480:	ldr	r0, [pc, #496]	; 19678 <print_yaml_data@@Base+0x578>
   19484:	bl	123bc <puts@plt>
   19488:	mov	r0, fp
   1948c:	bl	123bc <puts@plt>
   19490:	mov	r0, r6
   19494:	bl	123bc <puts@plt>
   19498:	mov	r0, r5
   1949c:	bl	123bc <puts@plt>
   194a0:	mov	r0, r4
   194a4:	bl	123bc <puts@plt>
   194a8:	ldr	r0, [pc, #364]	; 1961c <print_yaml_data@@Base+0x51c>
   194ac:	bl	123bc <puts@plt>
   194b0:	mov	r0, #10
   194b4:	bl	124c4 <putchar@plt>
   194b8:	ldr	r0, [pc, #464]	; 19690 <print_yaml_data@@Base+0x590>
   194bc:	bl	123bc <puts@plt>
   194c0:	ldr	r0, [pc, #460]	; 19694 <print_yaml_data@@Base+0x594>
   194c4:	bl	123bc <puts@plt>
   194c8:	ldr	r0, [pc, #456]	; 19698 <print_yaml_data@@Base+0x598>
   194cc:	bl	123bc <puts@plt>
   194d0:	ldr	r0, [pc, #452]	; 1969c <print_yaml_data@@Base+0x59c>
   194d4:	bl	123bc <puts@plt>
   194d8:	ldr	r0, [pc, #448]	; 196a0 <print_yaml_data@@Base+0x5a0>
   194dc:	bl	123bc <puts@plt>
   194e0:	ldr	r0, [pc, #444]	; 196a4 <print_yaml_data@@Base+0x5a4>
   194e4:	bl	123bc <puts@plt>
   194e8:	ldr	r0, [pc, #440]	; 196a8 <print_yaml_data@@Base+0x5a8>
   194ec:	bl	123bc <puts@plt>
   194f0:	mov	r0, sl
   194f4:	bl	123bc <puts@plt>
   194f8:	mov	r0, r9
   194fc:	bl	123bc <puts@plt>
   19500:	ldr	r0, [pc, #364]	; 19674 <print_yaml_data@@Base+0x574>
   19504:	bl	123bc <puts@plt>
   19508:	ldr	r0, [pc, #360]	; 19678 <print_yaml_data@@Base+0x578>
   1950c:	bl	123bc <puts@plt>
   19510:	mov	r0, fp
   19514:	bl	123bc <puts@plt>
   19518:	ldr	r0, [pc, #396]	; 196ac <print_yaml_data@@Base+0x5ac>
   1951c:	bl	123bc <puts@plt>
   19520:	ldr	r0, [pc, #392]	; 196b0 <print_yaml_data@@Base+0x5b0>
   19524:	bl	123bc <puts@plt>
   19528:	ldr	r0, [pc, #388]	; 196b4 <print_yaml_data@@Base+0x5b4>
   1952c:	bl	123bc <puts@plt>
   19530:	ldr	r0, [pc, #384]	; 196b8 <print_yaml_data@@Base+0x5b8>
   19534:	bl	123bc <puts@plt>
   19538:	ldr	r0, [pc, #380]	; 196bc <print_yaml_data@@Base+0x5bc>
   1953c:	bl	123bc <puts@plt>
   19540:	ldr	r0, [pc, #376]	; 196c0 <print_yaml_data@@Base+0x5c0>
   19544:	bl	123bc <puts@plt>
   19548:	mov	r0, #10
   1954c:	bl	124c4 <putchar@plt>
   19550:	ldr	r0, [pc, #364]	; 196c4 <print_yaml_data@@Base+0x5c4>
   19554:	bl	123bc <puts@plt>
   19558:	ldr	r0, [pc, #360]	; 196c8 <print_yaml_data@@Base+0x5c8>
   1955c:	bl	123bc <puts@plt>
   19560:	mov	r0, #10
   19564:	bl	124c4 <putchar@plt>
   19568:	ldr	r0, [pc, #348]	; 196cc <print_yaml_data@@Base+0x5cc>
   1956c:	bl	123bc <puts@plt>
   19570:	ldr	r0, [pc, #344]	; 196d0 <print_yaml_data@@Base+0x5d0>
   19574:	bl	123bc <puts@plt>
   19578:	mov	r0, #10
   1957c:	bl	124c4 <putchar@plt>
   19580:	ldr	r0, [pc, #332]	; 196d4 <print_yaml_data@@Base+0x5d4>
   19584:	bl	123bc <puts@plt>
   19588:	ldr	r0, [pc, #328]	; 196d8 <print_yaml_data@@Base+0x5d8>
   1958c:	bl	123bc <puts@plt>
   19590:	ldr	r0, [pc, #324]	; 196dc <print_yaml_data@@Base+0x5dc>
   19594:	bl	123bc <puts@plt>
   19598:	ldr	r0, [pc, #320]	; 196e0 <print_yaml_data@@Base+0x5e0>
   1959c:	bl	123bc <puts@plt>
   195a0:	ldr	r0, [pc, #316]	; 196e4 <print_yaml_data@@Base+0x5e4>
   195a4:	bl	123bc <puts@plt>
   195a8:	ldr	r0, [pc, #312]	; 196e8 <print_yaml_data@@Base+0x5e8>
   195ac:	bl	123bc <puts@plt>
   195b0:	ldr	r0, [pc, #308]	; 196ec <print_yaml_data@@Base+0x5ec>
   195b4:	bl	123bc <puts@plt>
   195b8:	mov	r0, #10
   195bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195c0:	b	124c4 <putchar@plt>
   195c4:			; <UNDEFINED> instruction: 0x0001a1bc
   195c8:	andeq	sl, r1, r8, lsr r2
   195cc:	andeq	sl, r1, r4, asr #3
   195d0:	andeq	sl, r1, ip, lsl #4
   195d4:	andeq	sl, r1, r4, lsr #5
   195d8:	andeq	sl, r1, r0, asr r2
   195dc:	andeq	sl, r1, ip, asr #5
   195e0:	andeq	sl, r1, ip, ror #4
   195e4:	andeq	sl, r1, r8, lsl #6
   195e8:	andeq	sl, r1, r8, lsr r3
   195ec:	andeq	sl, r1, r0, lsl #7
   195f0:	muleq	r1, r8, r3
   195f4:	andeq	sl, r1, r4, asr #7
   195f8:	ldrdeq	sl, [r1], -ip
   195fc:	andeq	sl, r1, r8, lsl #8
   19600:	andeq	sl, r1, r4, lsr #8
   19604:	andeq	sl, r1, r8, asr r4
   19608:	andeq	sl, r1, r8, ror #9
   1960c:	andeq	sl, r1, r4, ror r4
   19610:	andeq	sl, r1, r8, lsl #10
   19614:			; <UNDEFINED> instruction: 0x0001a4bc
   19618:	andeq	sl, r1, r8, asr r5
   1961c:	andeq	sl, r1, r8, lsr #11
   19620:	andeq	sl, r1, r8, asr #11
   19624:	andeq	sl, r1, r0, lsl r6
   19628:	andeq	sl, r1, ip, asr #12
   1962c:	andeq	sl, r1, r4, ror #12
   19630:	andeq	sl, r1, ip, lsl #14
   19634:	andeq	sl, r1, r8, lsr #13
   19638:	andeq	sl, r1, r0, lsr r7
   1963c:	andeq	sl, r1, r0, asr #13
   19640:	andeq	sl, r1, r4, ror #14
   19644:	andeq	sl, r1, r4, lsl #15
   19648:	ldrdeq	sl, [r1], -r0
   1964c:	andeq	sl, r1, r8, lsl #16
   19650:	andeq	sl, r1, r4, asr r8
   19654:	andeq	sl, r1, r8, ror r8
   19658:	andeq	sl, r1, r8, asr #17
   1965c:	andeq	sl, r1, r0, lsl r9
   19660:	andeq	sl, r1, ip, asr #18
   19664:	andeq	sl, r1, r4, ror #18
   19668:	andeq	sl, r1, r4, lsl #19
   1966c:	andeq	sl, r1, ip, asr #19
   19670:	andeq	sl, r1, r0, lsl #21
   19674:	andeq	sl, r1, r8, lsl sl
   19678:	andeq	sl, r1, r8, lsr sl
   1967c:	ldrdeq	sl, [r1], -r0
   19680:	andeq	sl, r1, r8, lsl fp
   19684:	andeq	sl, r1, r4, asr fp
   19688:	andeq	sl, r1, ip, ror #22
   1968c:			; <UNDEFINED> instruction: 0x0001abb8
   19690:	ldrdeq	sl, [r1], -r8
   19694:	andeq	sl, r1, r0, lsr #24
   19698:	andeq	sl, r1, ip, ror #24
   1969c:			; <UNDEFINED> instruction: 0x0001acb8
   196a0:	andeq	sl, r1, r8, ror #25
   196a4:	andeq	sl, r1, r0, lsl #26
   196a8:	andeq	sl, r1, r0, lsr sp
   196ac:	andeq	sl, r1, r8, ror #26
   196b0:	andeq	sl, r1, r8, lsl #27
   196b4:	ldrdeq	sl, [r1], -r8
   196b8:	andeq	sl, r1, r4, lsr #28
   196bc:	andeq	sl, r1, r4, ror #28
   196c0:			; <UNDEFINED> instruction: 0x0001aeb4
   196c4:	andeq	sl, r1, ip, ror #29
   196c8:	andeq	sl, r1, r4, lsl #30
   196cc:	andeq	sl, r1, r4, lsr #30
   196d0:	andeq	sl, r1, r0, asr #30
   196d4:	andeq	sl, r1, r4, ror pc
   196d8:	andeq	sl, r1, r4, asr #31
   196dc:	andeq	fp, r1, r0, lsl r0
   196e0:	andeq	fp, r1, ip, lsr r0
   196e4:	andeq	fp, r1, r8, lsl #1
   196e8:	ldrdeq	fp, [r1], -r0
   196ec:	andeq	fp, r1, r0, lsl r1

000196f0 <handle_coda_error@@Base>:
   196f0:	push	{r4, lr}
   196f4:	ldr	r4, [pc, #44]	; 19728 <handle_coda_error@@Base+0x38>
   196f8:	ldr	r5, [r4]
   196fc:	bl	12608 <coda_get_errno@plt>
   19700:	ldr	r0, [r0]
   19704:	bl	125c0 <coda_errno_to_string@plt>
   19708:	ldr	r1, [pc, #28]	; 1972c <handle_coda_error@@Base+0x3c>
   1970c:	mov	r2, r0
   19710:	mov	r0, r5
   19714:	bl	12464 <fprintf@plt>
   19718:	ldr	r0, [r4]
   1971c:	bl	1226c <fflush@plt>
   19720:	mov	r0, #1
   19724:	bl	1241c <exit@plt>
   19728:			; <UNDEFINED> instruction: 0x0002c1b8
   1972c:	andeq	fp, r1, r0, asr r1
   19730:	cmp	r3, #0
   19734:	cmpeq	r2, #0
   19738:	bne	1975c <handle_coda_error@@Base+0x6c>
   1973c:	cmp	r1, #0
   19740:	movlt	r1, #-2147483648	; 0x80000000
   19744:	movlt	r0, #0
   19748:	blt	19758 <handle_coda_error@@Base+0x68>
   1974c:	cmpeq	r0, #0
   19750:	mvnne	r1, #-2147483648	; 0x80000000
   19754:	mvnne	r0, #0
   19758:	b	19804 <handle_coda_error@@Base+0x114>
   1975c:	sub	sp, sp, #8
   19760:	push	{sp, lr}
   19764:	cmp	r1, #0
   19768:	blt	19788 <handle_coda_error@@Base+0x98>
   1976c:	cmp	r3, #0
   19770:	blt	197bc <handle_coda_error@@Base+0xcc>
   19774:	bl	19814 <handle_coda_error@@Base+0x124>
   19778:	ldr	lr, [sp, #4]
   1977c:	add	sp, sp, #8
   19780:	pop	{r2, r3}
   19784:	bx	lr
   19788:	rsbs	r0, r0, #0
   1978c:	sbc	r1, r1, r1, lsl #1
   19790:	cmp	r3, #0
   19794:	blt	197e0 <handle_coda_error@@Base+0xf0>
   19798:	bl	19814 <handle_coda_error@@Base+0x124>
   1979c:	ldr	lr, [sp, #4]
   197a0:	add	sp, sp, #8
   197a4:	pop	{r2, r3}
   197a8:	rsbs	r0, r0, #0
   197ac:	sbc	r1, r1, r1, lsl #1
   197b0:	rsbs	r2, r2, #0
   197b4:	sbc	r3, r3, r3, lsl #1
   197b8:	bx	lr
   197bc:	rsbs	r2, r2, #0
   197c0:	sbc	r3, r3, r3, lsl #1
   197c4:	bl	19814 <handle_coda_error@@Base+0x124>
   197c8:	ldr	lr, [sp, #4]
   197cc:	add	sp, sp, #8
   197d0:	pop	{r2, r3}
   197d4:	rsbs	r0, r0, #0
   197d8:	sbc	r1, r1, r1, lsl #1
   197dc:	bx	lr
   197e0:	rsbs	r2, r2, #0
   197e4:	sbc	r3, r3, r3, lsl #1
   197e8:	bl	19814 <handle_coda_error@@Base+0x124>
   197ec:	ldr	lr, [sp, #4]
   197f0:	add	sp, sp, #8
   197f4:	pop	{r2, r3}
   197f8:	rsbs	r2, r2, #0
   197fc:	sbc	r3, r3, r3, lsl #1
   19800:	bx	lr
   19804:	push	{r1, lr}
   19808:	mov	r0, #8
   1980c:	bl	121e8 <raise@plt>
   19810:	pop	{r1, pc}
   19814:	cmp	r1, r3
   19818:	push	{r4, r5, r6, r7, r8, r9, lr}
   1981c:	cmpeq	r0, r2
   19820:	mov	r4, r0
   19824:	mov	r5, r1
   19828:	ldr	r9, [sp, #28]
   1982c:	movcc	r0, #0
   19830:	movcc	r1, #0
   19834:	bcc	1992c <handle_coda_error@@Base+0x23c>
   19838:	cmp	r3, #0
   1983c:	clzeq	ip, r2
   19840:	clzne	ip, r3
   19844:	addeq	ip, ip, #32
   19848:	cmp	r5, #0
   1984c:	clzeq	r1, r4
   19850:	addeq	r1, r1, #32
   19854:	clzne	r1, r5
   19858:	sub	ip, ip, r1
   1985c:	sub	lr, ip, #32
   19860:	lsl	r7, r3, ip
   19864:	rsb	r8, ip, #32
   19868:	orr	r7, r7, r2, lsl lr
   1986c:	orr	r7, r7, r2, lsr r8
   19870:	lsl	r6, r2, ip
   19874:	cmp	r5, r7
   19878:	cmpeq	r4, r6
   1987c:	movcc	r0, #0
   19880:	movcc	r1, #0
   19884:	bcc	198a0 <handle_coda_error@@Base+0x1b0>
   19888:	mov	r3, #1
   1988c:	subs	r4, r4, r6
   19890:	lsl	r1, r3, lr
   19894:	lsl	r0, r3, ip
   19898:	orr	r1, r1, r3, lsr r8
   1989c:	sbc	r5, r5, r7
   198a0:	cmp	ip, #0
   198a4:	beq	1992c <handle_coda_error@@Base+0x23c>
   198a8:	lsrs	r3, r7, #1
   198ac:	rrx	r2, r6
   198b0:	mov	r6, ip
   198b4:	b	198d8 <handle_coda_error@@Base+0x1e8>
   198b8:	subs	r4, r4, r2
   198bc:	sbc	r5, r5, r3
   198c0:	adds	r4, r4, r4
   198c4:	adc	r5, r5, r5
   198c8:	adds	r4, r4, #1
   198cc:	adc	r5, r5, #0
   198d0:	subs	r6, r6, #1
   198d4:	beq	198f4 <handle_coda_error@@Base+0x204>
   198d8:	cmp	r5, r3
   198dc:	cmpeq	r4, r2
   198e0:	bcs	198b8 <handle_coda_error@@Base+0x1c8>
   198e4:	adds	r4, r4, r4
   198e8:	adc	r5, r5, r5
   198ec:	subs	r6, r6, #1
   198f0:	bne	198d8 <handle_coda_error@@Base+0x1e8>
   198f4:	lsr	r6, r4, ip
   198f8:	lsr	r7, r5, ip
   198fc:	orr	r6, r6, r5, lsl r8
   19900:	adds	r2, r0, r4
   19904:	orr	r6, r6, r5, lsr lr
   19908:	adc	r3, r1, r5
   1990c:	lsl	r1, r7, ip
   19910:	orr	r1, r1, r6, lsl lr
   19914:	lsl	r0, r6, ip
   19918:	orr	r1, r1, r6, lsr r8
   1991c:	subs	r0, r2, r0
   19920:	mov	r4, r6
   19924:	mov	r5, r7
   19928:	sbc	r1, r3, r1
   1992c:	cmp	r9, #0
   19930:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   19934:	strd	r4, [r9]
   19938:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001993c <__libc_csu_init@@Base>:
   1993c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19940:	mov	r7, r0
   19944:	ldr	r6, [pc, #72]	; 19994 <__libc_csu_init@@Base+0x58>
   19948:	ldr	r5, [pc, #72]	; 19998 <__libc_csu_init@@Base+0x5c>
   1994c:	add	r6, pc, r6
   19950:	add	r5, pc, r5
   19954:	sub	r6, r6, r5
   19958:	mov	r8, r1
   1995c:	mov	r9, r2
   19960:	bl	121a4 <coda_cursor_get_byte_size@plt-0x20>
   19964:	asrs	r6, r6, #2
   19968:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1996c:	mov	r4, #0
   19970:	add	r4, r4, #1
   19974:	ldr	r3, [r5], #4
   19978:	mov	r2, r9
   1997c:	mov	r1, r8
   19980:	mov	r0, r7
   19984:	blx	r3
   19988:	cmp	r6, r4
   1998c:	bne	19970 <__libc_csu_init@@Base+0x34>
   19990:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19994:	andeq	r2, r1, r4, lsr #11
   19998:	muleq	r1, ip, r5

0001999c <__libc_csu_fini@@Base>:
   1999c:	bx	lr

Disassembly of section .fini:

000199a0 <.fini>:
   199a0:	push	{r3, lr}
   199a4:	pop	{r3, pc}
