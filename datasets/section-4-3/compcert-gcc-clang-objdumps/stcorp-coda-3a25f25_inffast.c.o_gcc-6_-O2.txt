
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inffast.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflate_fast>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	mov	r4, #1
   8:	ldr	fp, [r0, #28]
   c:	ldr	r2, [r0, #16]
  10:	sub	sp, sp, #76	; 0x4c
  14:	ldr	r6, [fp, #88]	; 0x58
  18:	sub	r1, r2, r1
  1c:	ldr	lr, [r0, #12]
  20:	sub	r5, r2, #256	; 0x100
  24:	lsl	r6, r4, r6
  28:	ldr	r2, [fp, #44]	; 0x2c
  2c:	ldr	ip, [fp, #40]	; 0x28
  30:	ldr	r8, [fp, #48]	; 0x30
  34:	mov	sl, r0
  38:	ldr	r7, [fp, #84]	; 0x54
  3c:	ldm	r0, {r0, r3}
  40:	sub	r5, r5, #1
  44:	sub	lr, lr, #1
  48:	sub	r6, r6, #1
  4c:	str	r2, [sp, #32]
  50:	ldr	r2, [fp, #52]	; 0x34
  54:	str	ip, [sp, #20]
  58:	str	r8, [sp, #16]
  5c:	str	r6, [sp, #24]
  60:	add	r6, lr, r5
  64:	sub	r8, r0, #1
  68:	lsl	r7, r4, r7
  6c:	sub	r3, r3, #5
  70:	str	r2, [sp, #36]	; 0x24
  74:	str	r6, [sp, #4]
  78:	ldr	r5, [sp, #16]
  7c:	add	r6, lr, r1
  80:	ldr	r2, [fp, #56]	; 0x38
  84:	ldr	r1, [sp, #20]
  88:	ldr	r0, [fp, #60]	; 0x3c
  8c:	ldr	ip, [fp, #76]	; 0x4c
  90:	ldr	r9, [fp, #80]	; 0x50
  94:	add	r3, r8, r3
  98:	sub	r7, r7, #1
  9c:	add	r1, r1, r5
  a0:	str	r3, [sp, #8]
  a4:	add	r3, fp, #4096	; 0x1000
  a8:	str	r7, [sp, #12]
  ac:	str	r6, [sp, #28]
  b0:	str	r1, [sp, #44]	; 0x2c
  b4:	str	r3, [sp, #40]	; 0x28
  b8:	cmp	r0, #14
  bc:	bhi	e0 <coda_inflate_fast+0xe0>
  c0:	ldrb	r3, [r8, #1]
  c4:	ldrb	r5, [r8, #2]
  c8:	add	r1, r0, #8
  cc:	add	r8, r8, #2
  d0:	lsl	r3, r3, r0
  d4:	add	r3, r3, r5, lsl r1
  d8:	add	r0, r0, #16
  dc:	add	r2, r2, r3
  e0:	ldr	r3, [sp, #12]
  e4:	and	r3, r2, r3
  e8:	add	r1, ip, r3, lsl #2
  ec:	ldrb	r3, [ip, r3, lsl #2]
  f0:	ldrb	r5, [r1, #1]
  f4:	ldrh	r1, [r1, #2]
  f8:	cmp	r3, #0
  fc:	sub	r0, r0, r5
 100:	lsr	r2, r2, r5
 104:	bne	144 <coda_inflate_fast+0x144>
 108:	b	31c <coda_inflate_fast+0x31c>
 10c:	tst	r3, #64	; 0x40
 110:	bne	3b0 <coda_inflate_fast+0x3b0>
 114:	lsl	r3, r4, r3
 118:	sub	r3, r3, #1
 11c:	and	r3, r3, r2
 120:	add	r1, r3, r1
 124:	add	r6, ip, r1, lsl #2
 128:	ldrb	r3, [ip, r1, lsl #2]
 12c:	ldrb	r5, [r6, #1]
 130:	ldrh	r1, [r6, #2]
 134:	cmp	r3, #0
 138:	sub	r0, r0, r5
 13c:	lsr	r2, r2, r5
 140:	beq	31c <coda_inflate_fast+0x31c>
 144:	tst	r3, #16
 148:	beq	10c <coda_inflate_fast+0x10c>
 14c:	ands	r5, r3, #15
 150:	mov	r3, r1
 154:	beq	184 <coda_inflate_fast+0x184>
 158:	cmp	r5, r0
 15c:	ldrbhi	r3, [r8, #1]
 160:	addhi	r8, r8, #1
 164:	addhi	r2, r2, r3, lsl r0
 168:	lsl	r3, r4, r5
 16c:	sub	r3, r3, #1
 170:	and	r3, r3, r2
 174:	addhi	r0, r0, #8
 178:	lsr	r2, r2, r5
 17c:	sub	r0, r0, r5
 180:	add	r3, r1, r3
 184:	cmp	r0, #14
 188:	bls	3cc <coda_inflate_fast+0x3cc>
 18c:	ldr	r1, [sp, #24]
 190:	and	r1, r2, r1
 194:	b	1b0 <coda_inflate_fast+0x1b0>
 198:	tst	r1, #64	; 0x40
 19c:	bne	3f0 <coda_inflate_fast+0x3f0>
 1a0:	lsl	r1, r4, r1
 1a4:	sub	r1, r1, #1
 1a8:	and	r1, r1, r2
 1ac:	add	r1, r1, r5
 1b0:	add	r5, r9, r1, lsl #2
 1b4:	ldrb	r1, [r9, r1, lsl #2]
 1b8:	ldrb	r6, [r5, #1]
 1bc:	ldrh	r5, [r5, #2]
 1c0:	tst	r1, #16
 1c4:	sub	r0, r0, r6
 1c8:	lsr	r2, r2, r6
 1cc:	beq	198 <coda_inflate_fast+0x198>
 1d0:	and	r1, r1, #15
 1d4:	cmp	r1, r0
 1d8:	bls	204 <coda_inflate_fast+0x204>
 1dc:	ldrb	r7, [r8, #1]
 1e0:	add	r6, r0, #8
 1e4:	cmp	r1, r6
 1e8:	addls	r8, r8, #1
 1ec:	add	r2, r2, r7, lsl r0
 1f0:	ldrbhi	r7, [r8, #2]
 1f4:	movls	r0, r6
 1f8:	addhi	r0, r0, #16
 1fc:	addhi	r8, r8, #2
 200:	addhi	r2, r2, r7, lsl r6
 204:	lsl	r6, r4, r1
 208:	sub	r6, r6, #1
 20c:	and	r6, r6, r2
 210:	add	r7, r6, r5
 214:	ldr	r5, [sp, #28]
 218:	sub	r0, r0, r1
 21c:	sub	r5, lr, r5
 220:	cmp	r7, r5
 224:	lsr	r2, r2, r1
 228:	bls	404 <coda_inflate_fast+0x404>
 22c:	sub	r1, r7, r5
 230:	ldr	r5, [sp, #32]
 234:	str	r1, [sp, #52]	; 0x34
 238:	cmp	r5, r1
 23c:	bcs	250 <coda_inflate_fast+0x250>
 240:	ldr	r1, [sp, #40]	; 0x28
 244:	ldr	r1, [r1, #3008]	; 0xbc0
 248:	cmp	r1, #0
 24c:	bne	56c <coda_inflate_fast+0x56c>
 250:	ldr	r1, [sp, #16]
 254:	cmp	r1, #0
 258:	ldr	r1, [sp, #36]	; 0x24
 25c:	sub	r5, r1, #1
 260:	str	r5, [sp, #48]	; 0x30
 264:	bne	468 <coda_inflate_fast+0x468>
 268:	ldr	r5, [sp, #52]	; 0x34
 26c:	ldr	r6, [sp, #20]
 270:	cmp	r3, r5
 274:	sub	r1, r6, r5
 278:	str	r5, [sp, #56]	; 0x38
 27c:	ldr	r5, [sp, #48]	; 0x30
 280:	add	r1, r5, r1
 284:	bls	2c8 <coda_inflate_fast+0x2c8>
 288:	ldr	r5, [sp, #56]	; 0x38
 28c:	sub	r3, r3, r5
 290:	ldr	r5, [sp, #48]	; 0x30
 294:	str	r8, [sp, #48]	; 0x30
 298:	add	r5, r5, r6
 29c:	mov	r6, r5
 2a0:	mov	r8, r6
 2a4:	mov	r5, lr
 2a8:	ldrb	r6, [r1, #1]!
 2ac:	cmp	r1, r8
 2b0:	strb	r6, [r5, #1]!
 2b4:	bne	2a8 <coda_inflate_fast+0x2a8>
 2b8:	ldr	r1, [sp, #52]	; 0x34
 2bc:	ldr	r8, [sp, #48]	; 0x30
 2c0:	add	lr, lr, r1
 2c4:	sub	r1, lr, r7
 2c8:	cmp	r3, #2
 2cc:	bls	2f4 <coda_inflate_fast+0x2f4>
 2d0:	ldrb	r5, [r1, #1]
 2d4:	sub	r3, r3, #3
 2d8:	cmp	r3, #2
 2dc:	strb	r5, [lr, #1]
 2e0:	ldrb	r5, [r1, #2]
 2e4:	strb	r5, [lr, #2]
 2e8:	ldrb	r5, [r1, #3]!
 2ec:	strb	r5, [lr, #3]!
 2f0:	bhi	2d0 <coda_inflate_fast+0x2d0>
 2f4:	cmp	r3, #0
 2f8:	beq	324 <coda_inflate_fast+0x324>
 2fc:	ldrb	r5, [r1, #1]
 300:	cmp	r3, #2
 304:	strb	r5, [lr, #1]
 308:	ldrbeq	r3, [r1, #2]
 30c:	addne	lr, lr, #1
 310:	strbeq	r3, [lr, #2]
 314:	addeq	lr, lr, #2
 318:	b	324 <coda_inflate_fast+0x324>
 31c:	strb	r1, [lr, #1]
 320:	add	lr, lr, #1
 324:	ldmib	sp, {r1, r3}
 328:	cmp	r8, r3
 32c:	cmpcc	lr, r1
 330:	bcc	b8 <coda_inflate_fast+0xb8>
 334:	ldr	r4, [sp, #8]
 338:	sub	r3, r8, r0, lsr #3
 33c:	mvn	r1, #0
 340:	and	r0, r0, #7
 344:	cmp	r4, r3
 348:	bic	r2, r2, r1, lsl r0
 34c:	add	r1, lr, #1
 350:	str	r1, [sl, #12]
 354:	ldrls	r1, [sp, #8]
 358:	add	ip, r3, #1
 35c:	str	ip, [sl]
 360:	subls	r3, r3, r1
 364:	movhi	ip, r4
 368:	ldr	r1, [sp, #4]
 36c:	subhi	r3, ip, r3
 370:	addhi	r3, r3, #5
 374:	rsbls	r3, r3, #5
 378:	cmp	lr, r1
 37c:	str	r3, [sl, #4]
 380:	ldrcs	r3, [sp, #4]
 384:	movcc	r3, r1
 388:	subcc	lr, r3, lr
 38c:	subcs	lr, lr, r3
 390:	addcc	lr, lr, #256	; 0x100
 394:	rsbcs	lr, lr, #256	; 0x100
 398:	add	lr, lr, #1
 39c:	str	lr, [sl, #16]
 3a0:	str	r2, [fp, #56]	; 0x38
 3a4:	str	r0, [fp, #60]	; 0x3c
 3a8:	add	sp, sp, #76	; 0x4c
 3ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 3b0:	tst	r3, #32
 3b4:	movne	r3, #11
 3b8:	ldreq	r1, [pc, #448]	; 580 <coda_inflate_fast+0x580>
 3bc:	moveq	r3, #29
 3c0:	streq	r1, [sl, #24]
 3c4:	str	r3, [fp]
 3c8:	b	334 <coda_inflate_fast+0x334>
 3cc:	ldrb	r1, [r8, #1]
 3d0:	ldrb	r6, [r8, #2]
 3d4:	add	r5, r0, #8
 3d8:	add	r8, r8, #2
 3dc:	lsl	r1, r1, r0
 3e0:	add	r1, r1, r6, lsl r5
 3e4:	add	r0, r0, #16
 3e8:	add	r2, r2, r1
 3ec:	b	18c <coda_inflate_fast+0x18c>
 3f0:	ldr	r1, [pc, #396]	; 584 <coda_inflate_fast+0x584>
 3f4:	mov	r3, #29
 3f8:	str	r1, [sl, #24]
 3fc:	str	r3, [fp]
 400:	b	334 <coda_inflate_fast+0x334>
 404:	sub	r1, lr, r7
 408:	mov	r7, lr
 40c:	b	418 <coda_inflate_fast+0x418>
 410:	mov	r1, r6
 414:	mov	r7, lr
 418:	ldrb	r5, [r1, #1]
 41c:	sub	r3, r3, #3
 420:	cmp	r3, #2
 424:	strb	r5, [lr, #1]
 428:	ldrb	r5, [r1, #2]
 42c:	add	r6, r1, #3
 430:	strb	r5, [lr, #2]
 434:	ldrb	r5, [r1, #3]
 438:	strb	r5, [lr, #3]!
 43c:	bhi	410 <coda_inflate_fast+0x410>
 440:	cmp	r3, #0
 444:	beq	324 <coda_inflate_fast+0x324>
 448:	ldrb	lr, [r1, #4]
 44c:	cmp	r3, #2
 450:	strb	lr, [r7, #4]
 454:	ldrbeq	r3, [r1, #5]
 458:	addne	lr, r7, #4
 45c:	addeq	lr, r7, #5
 460:	strbeq	r3, [r7, #5]
 464:	b	324 <coda_inflate_fast+0x324>
 468:	ldr	r5, [sp, #16]
 46c:	ldr	r1, [sp, #52]	; 0x34
 470:	cmp	r5, r1
 474:	bcs	50c <coda_inflate_fast+0x50c>
 478:	ldr	r6, [sp, #44]	; 0x2c
 47c:	sub	r5, r1, r5
 480:	sub	r1, r6, r1
 484:	ldr	r6, [sp, #48]	; 0x30
 488:	cmp	r3, r5
 48c:	str	r5, [sp, #56]	; 0x38
 490:	add	r1, r6, r1
 494:	bls	2c8 <coda_inflate_fast+0x2c8>
 498:	mov	r6, r5
 49c:	add	r6, r1, r6
 4a0:	str	r6, [sp, #60]	; 0x3c
 4a4:	str	r8, [sp, #64]	; 0x40
 4a8:	ldr	r6, [sp, #48]	; 0x30
 4ac:	ldr	r8, [sp, #60]	; 0x3c
 4b0:	sub	r3, r3, r5
 4b4:	mov	r5, lr
 4b8:	str	lr, [sp, #68]	; 0x44
 4bc:	ldrb	lr, [r1, #1]!
 4c0:	cmp	r1, r8
 4c4:	strb	lr, [r5, #1]!
 4c8:	bne	4bc <coda_inflate_fast+0x4bc>
 4cc:	ldr	r1, [sp, #16]
 4d0:	ldr	lr, [sp, #68]	; 0x44
 4d4:	ldr	r5, [sp, #56]	; 0x38
 4d8:	cmp	r1, r3
 4dc:	ldr	r8, [sp, #64]	; 0x40
 4e0:	str	r6, [sp, #48]	; 0x30
 4e4:	add	r5, lr, r5
 4e8:	bcs	560 <coda_inflate_fast+0x560>
 4ec:	sub	r3, r3, r1
 4f0:	ldr	r1, [sp, #52]	; 0x34
 4f4:	add	lr, lr, r1
 4f8:	ldrb	r1, [r6, #1]!
 4fc:	strb	r1, [r5, #1]!
 500:	cmp	lr, r5
 504:	bne	4f8 <coda_inflate_fast+0x4f8>
 508:	b	2c4 <coda_inflate_fast+0x2c4>
 50c:	ldr	r5, [sp, #52]	; 0x34
 510:	ldr	r6, [sp, #16]
 514:	cmp	r3, r5
 518:	sub	r1, r6, r5
 51c:	str	r5, [sp, #56]	; 0x38
 520:	ldr	r5, [sp, #48]	; 0x30
 524:	add	r1, r5, r1
 528:	bls	2c8 <coda_inflate_fast+0x2c8>
 52c:	ldr	r5, [sp, #56]	; 0x38
 530:	sub	r3, r3, r5
 534:	ldr	r5, [sp, #48]	; 0x30
 538:	str	r8, [sp, #48]	; 0x30
 53c:	add	r5, r5, r6
 540:	mov	r6, r5
 544:	mov	r8, r6
 548:	mov	r5, lr
 54c:	ldrb	r6, [r1, #1]!
 550:	cmp	r1, r8
 554:	strb	r6, [r5, #1]!
 558:	bne	54c <coda_inflate_fast+0x54c>
 55c:	b	2b8 <coda_inflate_fast+0x2b8>
 560:	ldr	r1, [sp, #48]	; 0x30
 564:	mov	lr, r5
 568:	b	2c8 <coda_inflate_fast+0x2c8>
 56c:	ldr	r1, [pc, #20]	; 588 <coda_inflate_fast+0x588>
 570:	mov	r3, #29
 574:	str	r1, [sl, #24]
 578:	str	r3, [fp]
 57c:	b	334 <coda_inflate_fast+0x334>
 580:	.word	0x00000038
 584:	.word	0x00000020
 588:	.word	0x00000000
