
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <find_minlength>:
       0:	strd	r4, [sp, #-20]!	; 0xffffffec
       4:	str	r6, [sp, #8]
       8:	str	fp, [sp, #12]
       c:	str	lr, [sp, #16]
      10:	add	fp, sp, #16
      14:	sub	sp, sp, #92	; 0x5c
      18:	str	r0, [fp, #-88]	; 0xffffffa8
      1c:	str	r1, [fp, #-92]	; 0xffffffa4
      20:	str	r2, [fp, #-96]	; 0xffffffa0
      24:	str	r3, [fp, #-100]	; 0xffffff9c
      28:	mvn	r3, #0
      2c:	str	r3, [fp, #-24]	; 0xffffffe8
      30:	ldr	r3, [fp, #-100]	; 0xffffff9c
      34:	and	r3, r3, #2048	; 0x800
      38:	cmp	r3, #0
      3c:	movne	r3, #1
      40:	moveq	r3, #0
      44:	uxtb	r3, r3
      48:	str	r3, [fp, #-64]	; 0xffffffc0
      4c:	mov	r3, #0
      50:	str	r3, [fp, #-28]	; 0xffffffe4
      54:	mov	r5, #0
      58:	ldr	r3, [fp, #-92]	; 0xffffffa4
      5c:	add	r4, r3, #3
      60:	ldr	r3, [fp, #8]
      64:	ldr	r3, [r3]
      68:	add	r1, r3, #1
      6c:	ldr	r2, [fp, #8]
      70:	str	r1, [r2]
      74:	cmp	r3, #1000	; 0x3e8
      78:	ble	84 <find_minlength+0x84>
      7c:	mvn	r3, #0
      80:	b	ce8 <find_minlength+0xce8>
      84:	ldr	r3, [fp, #-92]	; 0xffffffa4
      88:	ldrb	r3, [r3]
      8c:	cmp	r3, #133	; 0x85
      90:	beq	c4 <find_minlength+0xc4>
      94:	ldr	r3, [fp, #-92]	; 0xffffffa4
      98:	ldrb	r3, [r3]
      9c:	cmp	r3, #138	; 0x8a
      a0:	beq	c4 <find_minlength+0xc4>
      a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
      a8:	ldrb	r3, [r3]
      ac:	cmp	r3, #134	; 0x86
      b0:	beq	c4 <find_minlength+0xc4>
      b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
      b8:	ldrb	r3, [r3]
      bc:	cmp	r3, #139	; 0x8b
      c0:	bne	c8 <find_minlength+0xc8>
      c4:	add	r4, r4, #2
      c8:	ldrb	r6, [r4]
      cc:	mov	r3, r6
      d0:	cmp	r3, #161	; 0xa1
      d4:	ldrls	pc, [pc, r3, lsl #2]
      d8:	b	cdc <find_minlength+0xcdc>
      dc:	.word	0x0000041c
      e0:	.word	0x00000494
      e4:	.word	0x00000494
      e8:	.word	0x00000cc4
      ec:	.word	0x00000494
      f0:	.word	0x00000494
      f4:	.word	0x000005cc
      f8:	.word	0x000005cc
      fc:	.word	0x000005cc
     100:	.word	0x000005cc
     104:	.word	0x000005cc
     108:	.word	0x000005cc
     10c:	.word	0x000005cc
     110:	.word	0x000005cc
     114:	.word	0x000005e4
     118:	.word	0x000005c8
     11c:	.word	0x000005c8
     120:	.word	0x000005d8
     124:	.word	0x000005cc
     128:	.word	0x000005cc
     12c:	.word	0x000005cc
     130:	.word	0x000005cc
     134:	.word	0x000005cc
     138:	.word	0x00000494
     13c:	.word	0x00000494
     140:	.word	0x00000494
     144:	.word	0x00000494
     148:	.word	0x00000494
     14c:	.word	0x00000494
     150:	.word	0x000004f8
     154:	.word	0x000004f8
     158:	.word	0x000004f8
     15c:	.word	0x000004f8
     160:	.word	0x00000c84
     164:	.word	0x00000c84
     168:	.word	0x000004f8
     16c:	.word	0x000004f8
     170:	.word	0x00000c84
     174:	.word	0x00000c84
     178:	.word	0x00000c84
     17c:	.word	0x00000c84
     180:	.word	0x0000053c
     184:	.word	0x00000c84
     188:	.word	0x000004f8
     18c:	.word	0x00000c84
     190:	.word	0x00000c84
     194:	.word	0x00000c84
     198:	.word	0x00000c84
     19c:	.word	0x000004f8
     1a0:	.word	0x000004f8
     1a4:	.word	0x00000c84
     1a8:	.word	0x00000c84
     1ac:	.word	0x00000c84
     1b0:	.word	0x00000c84
     1b4:	.word	0x0000053c
     1b8:	.word	0x00000c84
     1bc:	.word	0x000004f8
     1c0:	.word	0x00000c84
     1c4:	.word	0x00000c84
     1c8:	.word	0x00000c84
     1cc:	.word	0x00000c84
     1d0:	.word	0x000004f8
     1d4:	.word	0x000004f8
     1d8:	.word	0x00000c84
     1dc:	.word	0x00000c84
     1e0:	.word	0x00000c84
     1e4:	.word	0x00000c84
     1e8:	.word	0x0000053c
     1ec:	.word	0x00000c84
     1f0:	.word	0x000004f8
     1f4:	.word	0x00000c84
     1f8:	.word	0x00000c84
     1fc:	.word	0x00000c84
     200:	.word	0x00000c84
     204:	.word	0x000004f8
     208:	.word	0x000004f8
     20c:	.word	0x00000c84
     210:	.word	0x00000c84
     214:	.word	0x00000c84
     218:	.word	0x00000c84
     21c:	.word	0x0000053c
     220:	.word	0x00000c84
     224:	.word	0x000004f8
     228:	.word	0x00000c84
     22c:	.word	0x00000c84
     230:	.word	0x000005f0
     234:	.word	0x000005f0
     238:	.word	0x00000504
     23c:	.word	0x00000504
     240:	.word	0x000005f0
     244:	.word	0x000005f0
     248:	.word	0x0000062c
     24c:	.word	0x0000062c
     250:	.word	0x0000056c
     254:	.word	0x000005f0
     258:	.word	0x00000504
     25c:	.word	0x000005f0
     260:	.word	0x0000062c
     264:	.word	0x00000cdc
     268:	.word	0x00000cdc
     26c:	.word	0x00000cdc
     270:	.word	0x00000cdc
     274:	.word	0x00000cdc
     278:	.word	0x00000cdc
     27c:	.word	0x00000cdc
     280:	.word	0x00000cdc
     284:	.word	0x00000cdc
     288:	.word	0x00000cdc
     28c:	.word	0x00000cdc
     290:	.word	0x00000cdc
     294:	.word	0x00000668
     298:	.word	0x00000668
     29c:	.word	0x00000cdc
     2a0:	.word	0x00000930
     2a4:	.word	0x00000930
     2a8:	.word	0x00000704
     2ac:	.word	0x00000704
     2b0:	.word	0x00000b4c
     2b4:	.word	0x00000494
     2b8:	.word	0x0000041c
     2bc:	.word	0x0000041c
     2c0:	.word	0x0000041c
     2c4:	.word	0x0000041c
     2c8:	.word	0x0000041c
     2cc:	.word	0x00000494
     2d0:	.word	0x0000046c
     2d4:	.word	0x0000046c
     2d8:	.word	0x0000046c
     2dc:	.word	0x0000046c
     2e0:	.word	0x000003a0
     2e4:	.word	0x000003a0
     2e8:	.word	0x000003a0
     2ec:	.word	0x000003a0
     2f0:	.word	0x000003a0
     2f4:	.word	0x000003a0
     2f8:	.word	0x00000364
     2fc:	.word	0x000003a0
     300:	.word	0x000003a0
     304:	.word	0x000003a0
     308:	.word	0x000003a0
     30c:	.word	0x00000364
     310:	.word	0x00000494
     314:	.word	0x00000494
     318:	.word	0x00000494
     31c:	.word	0x00000494
     320:	.word	0x00000494
     324:	.word	0x000004b0
     328:	.word	0x000004b0
     32c:	.word	0x000004b0
     330:	.word	0x00000c9c
     334:	.word	0x00000cc4
     338:	.word	0x00000c9c
     33c:	.word	0x00000cc4
     340:	.word	0x00000c9c
     344:	.word	0x00000cc4
     348:	.word	0x00000c9c
     34c:	.word	0x00000cc4
     350:	.word	0x00000cc4
     354:	.word	0x00000414
     358:	.word	0x00000414
     35c:	.word	0x00000cc4
     360:	.word	0x000004b0
     364:	add	r3, r4, #1
     368:	ldrb	r3, [r3]
     36c:	lsl	r3, r3, #8
     370:	add	r2, r4, #2
     374:	ldrb	r2, [r2]
     378:	orr	r3, r3, r2
     37c:	add	r3, r4, r3
     380:	str	r3, [fp, #-68]	; 0xffffffbc
     384:	ldr	r3, [fp, #-68]	; 0xffffffbc
     388:	ldrb	r3, [r3]
     38c:	cmp	r3, #119	; 0x77
     390:	beq	3a0 <find_minlength+0x3a0>
     394:	ldr	r3, [fp, #-68]	; 0xffffffbc
     398:	add	r4, r3, #3
     39c:	b	ce4 <find_minlength+0xce4>
     3a0:	ldr	r3, [fp, #8]
     3a4:	str	r3, [sp, #4]
     3a8:	ldr	r3, [fp, #4]
     3ac:	str	r3, [sp]
     3b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
     3b4:	ldr	r2, [fp, #-96]	; 0xffffffa0
     3b8:	mov	r1, r4
     3bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
     3c0:	bl	0 <find_minlength>
     3c4:	str	r0, [fp, #-32]	; 0xffffffe0
     3c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3cc:	cmp	r3, #0
     3d0:	bge	3dc <find_minlength+0x3dc>
     3d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3d8:	b	ce8 <find_minlength+0xce8>
     3dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3e0:	add	r5, r5, r3
     3e4:	add	r3, r4, #1
     3e8:	ldrb	r3, [r3]
     3ec:	lsl	r3, r3, #8
     3f0:	add	r2, r4, #2
     3f4:	ldrb	r2, [r2]
     3f8:	orr	r3, r3, r2
     3fc:	add	r4, r4, r3
     400:	ldrb	r3, [r4]
     404:	cmp	r3, #119	; 0x77
     408:	beq	3e4 <find_minlength+0x3e4>
     40c:	add	r4, r4, #3
     410:	b	ce4 <find_minlength+0xce4>
     414:	mvn	r3, #0
     418:	b	ce8 <find_minlength+0xce8>
     41c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     420:	cmp	r3, #0
     424:	blt	440 <find_minlength+0x440>
     428:	ldr	r3, [fp, #-28]	; 0xffffffe4
     42c:	cmp	r3, #0
     430:	bne	444 <find_minlength+0x444>
     434:	ldr	r3, [fp, #-24]	; 0xffffffe8
     438:	cmp	r5, r3
     43c:	bge	444 <find_minlength+0x444>
     440:	str	r5, [fp, #-24]	; 0xffffffe8
     444:	cmp	r6, #119	; 0x77
     448:	beq	454 <find_minlength+0x454>
     44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     450:	b	ce8 <find_minlength+0xce8>
     454:	add	r4, r4, #3
     458:	mov	r5, #0
     45c:	mov	r3, #0
     460:	str	r3, [fp, #-28]	; 0xffffffe4
     464:	b	ce4 <find_minlength+0xce4>
     468:	nop	{0}
     46c:	add	r3, r4, #1
     470:	ldrb	r3, [r3]
     474:	lsl	r3, r3, #8
     478:	add	r2, r4, #2
     47c:	ldrb	r2, [r2]
     480:	orr	r3, r3, r2
     484:	add	r4, r4, r3
     488:	ldrb	r3, [r4]
     48c:	cmp	r3, #119	; 0x77
     490:	beq	468 <find_minlength+0x468>
     494:	ldrb	r3, [r4]
     498:	mov	r2, r3
     49c:	movw	r3, #0
     4a0:	movt	r3, #0
     4a4:	ldrb	r3, [r3, r2]
     4a8:	add	r4, r4, r3
     4ac:	b	ce4 <find_minlength+0xce4>
     4b0:	ldrb	r3, [r4]
     4b4:	mov	r2, r3
     4b8:	movw	r3, #0
     4bc:	movt	r3, #0
     4c0:	ldrb	r3, [r3, r2]
     4c4:	add	r4, r4, r3
     4c8:	add	r3, r4, #1
     4cc:	ldrb	r3, [r3]
     4d0:	lsl	r3, r3, #8
     4d4:	add	r2, r4, #2
     4d8:	ldrb	r2, [r2]
     4dc:	orr	r3, r3, r2
     4e0:	add	r4, r4, r3
     4e4:	ldrb	r3, [r4]
     4e8:	cmp	r3, #119	; 0x77
     4ec:	beq	4c8 <find_minlength+0x4c8>
     4f0:	add	r4, r4, #3
     4f4:	b	ce4 <find_minlength+0xce4>
     4f8:	add	r5, r5, #1
     4fc:	add	r4, r4, #2
     500:	b	ce4 <find_minlength+0xce4>
     504:	add	r5, r5, #1
     508:	add	r3, r4, #1
     50c:	ldrb	r3, [r3]
     510:	cmp	r3, #16
     514:	beq	528 <find_minlength+0x528>
     518:	add	r3, r4, #1
     51c:	ldrb	r3, [r3]
     520:	cmp	r3, #15
     524:	bne	530 <find_minlength+0x530>
     528:	mov	r3, #4
     52c:	b	534 <find_minlength+0x534>
     530:	mov	r3, #2
     534:	add	r4, r4, r3
     538:	b	ce4 <find_minlength+0xce4>
     53c:	add	r3, r4, #1
     540:	ldrb	r3, [r3]
     544:	lsl	r3, r3, #8
     548:	add	r2, r4, #2
     54c:	ldrb	r2, [r2]
     550:	orr	r3, r3, r2
     554:	mov	r2, r3
     558:	mov	r3, r5
     55c:	add	r3, r2, r3
     560:	mov	r5, r3
     564:	add	r4, r4, #4
     568:	b	ce4 <find_minlength+0xce4>
     56c:	add	r3, r4, #1
     570:	ldrb	r3, [r3]
     574:	lsl	r3, r3, #8
     578:	add	r2, r4, #2
     57c:	ldrb	r2, [r2]
     580:	orr	r3, r3, r2
     584:	mov	r2, r3
     588:	mov	r3, r5
     58c:	add	r3, r2, r3
     590:	mov	r5, r3
     594:	add	r3, r4, #3
     598:	ldrb	r3, [r3]
     59c:	cmp	r3, #16
     5a0:	beq	5b4 <find_minlength+0x5b4>
     5a4:	add	r3, r4, #3
     5a8:	ldrb	r3, [r3]
     5ac:	cmp	r3, #15
     5b0:	bne	5bc <find_minlength+0x5bc>
     5b4:	mov	r3, #6
     5b8:	b	5c0 <find_minlength+0x5c0>
     5bc:	mov	r3, #4
     5c0:	add	r4, r4, r3
     5c4:	b	ce4 <find_minlength+0xce4>
     5c8:	add	r4, r4, #2
     5cc:	add	r5, r5, #1
     5d0:	add	r4, r4, #1
     5d4:	b	ce4 <find_minlength+0xce4>
     5d8:	add	r5, r5, #1
     5dc:	add	r4, r4, #1
     5e0:	b	ce4 <find_minlength+0xce4>
     5e4:	add	r5, r5, #1
     5e8:	add	r4, r4, #1
     5ec:	b	ce4 <find_minlength+0xce4>
     5f0:	add	r3, r4, #1
     5f4:	ldrb	r3, [r3]
     5f8:	cmp	r3, #16
     5fc:	beq	610 <find_minlength+0x610>
     600:	add	r3, r4, #1
     604:	ldrb	r3, [r3]
     608:	cmp	r3, #15
     60c:	bne	614 <find_minlength+0x614>
     610:	add	r4, r4, #2
     614:	mov	r2, r6
     618:	movw	r3, #0
     61c:	movt	r3, #0
     620:	ldrb	r3, [r3, r2]
     624:	add	r4, r4, r3
     628:	b	ce4 <find_minlength+0xce4>
     62c:	add	r3, r4, #3
     630:	ldrb	r3, [r3]
     634:	cmp	r3, #16
     638:	beq	64c <find_minlength+0x64c>
     63c:	add	r3, r4, #3
     640:	ldrb	r3, [r3]
     644:	cmp	r3, #15
     648:	bne	650 <find_minlength+0x650>
     64c:	add	r4, r4, #2
     650:	mov	r2, r6
     654:	movw	r3, #0
     658:	movt	r3, #0
     65c:	ldrb	r3, [r3, r2]
     660:	add	r4, r4, r3
     664:	b	ce4 <find_minlength+0xce4>
     668:	movw	r3, #0
     66c:	movt	r3, #0
     670:	ldrb	r3, [r3, #110]	; 0x6e
     674:	add	r4, r4, r3
     678:	ldrb	r3, [r4]
     67c:	sub	r3, r3, #98	; 0x62
     680:	cmp	r3, #11
     684:	ldrls	pc, [pc, r3, lsl #2]
     688:	b	6f8 <find_minlength+0x6f8>
     68c:	.word	0x000006c0
     690:	.word	0x000006c0
     694:	.word	0x000006bc
     698:	.word	0x000006bc
     69c:	.word	0x000006c0
     6a0:	.word	0x000006c0
     6a4:	.word	0x000006c8
     6a8:	.word	0x000006c8
     6ac:	.word	0x000006c0
     6b0:	.word	0x000006bc
     6b4:	.word	0x000006c0
     6b8:	.word	0x000006c8
     6bc:	add	r5, r5, #1
     6c0:	add	r4, r4, #1
     6c4:	b	700 <find_minlength+0x700>
     6c8:	add	r3, r4, #1
     6cc:	ldrb	r3, [r3]
     6d0:	lsl	r3, r3, #8
     6d4:	add	r2, r4, #2
     6d8:	ldrb	r2, [r2]
     6dc:	orr	r3, r3, r2
     6e0:	mov	r2, r3
     6e4:	mov	r3, r5
     6e8:	add	r3, r2, r3
     6ec:	mov	r5, r3
     6f0:	add	r4, r4, #5
     6f4:	b	700 <find_minlength+0x700>
     6f8:	add	r5, r5, #1
     6fc:	nop	{0}
     700:	b	ce4 <find_minlength+0xce4>
     704:	ldr	r3, [fp, #-100]	; 0xffffff9c
     708:	and	r3, r3, #33554432	; 0x2000000
     70c:	cmp	r3, #0
     710:	bne	920 <find_minlength+0x920>
     714:	add	r3, r4, #3
     718:	ldrb	r3, [r3]
     71c:	lsl	r3, r3, #8
     720:	add	r2, r4, #4
     724:	ldrb	r2, [r2]
     728:	orr	r3, r3, r2
     72c:	str	r3, [fp, #-44]	; 0xffffffd4
     730:	ldr	r3, [fp, #-88]	; 0xffffffa8
     734:	ldrh	r3, [r3, #34]	; 0x22
     738:	mov	r1, r3
     73c:	add	r3, r4, #1
     740:	ldrb	r3, [r3]
     744:	lsl	r3, r3, #8
     748:	add	r2, r4, #2
     74c:	ldrb	r2, [r2]
     750:	orr	r3, r3, r2
     754:	mov	r2, r3
     758:	ldr	r3, [fp, #-88]	; 0xffffffa8
     75c:	ldrh	r3, [r3, #36]	; 0x24
     760:	mul	r3, r3, r2
     764:	add	r3, r1, r3
     768:	ldr	r2, [fp, #-88]	; 0xffffffa8
     76c:	add	r3, r2, r3
     770:	str	r3, [fp, #-48]	; 0xffffffd0
     774:	mvn	r3, #-2147483648	; 0x80000000
     778:	str	r3, [fp, #-32]	; 0xffffffe0
     77c:	b	908 <find_minlength+0x908>
     780:	ldr	r3, [fp, #-48]	; 0xffffffd0
     784:	ldrb	r3, [r3]
     788:	lsl	r3, r3, #8
     78c:	ldr	r2, [fp, #-48]	; 0xffffffd0
     790:	add	r2, r2, #1
     794:	ldrb	r2, [r2]
     798:	orr	r3, r3, r2
     79c:	mov	r2, r3
     7a0:	ldr	r1, [fp, #-64]	; 0xffffffc0
     7a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
     7a8:	bl	0 <coda__pcre_find_bracket>
     7ac:	str	r0, [fp, #-68]	; 0xffffffbc
     7b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
     7b4:	str	r3, [fp, #-40]	; 0xffffffd8
     7b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     7bc:	cmp	r3, #0
     7c0:	bne	7cc <find_minlength+0x7cc>
     7c4:	mvn	r3, #1
     7c8:	b	ce8 <find_minlength+0xce8>
     7cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     7d0:	add	r3, r3, #1
     7d4:	ldrb	r3, [r3]
     7d8:	lsl	r3, r3, #8
     7dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
     7e0:	add	r2, r2, #2
     7e4:	ldrb	r2, [r2]
     7e8:	orr	r3, r3, r2
     7ec:	mov	r2, r3
     7f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     7f4:	add	r3, r3, r2
     7f8:	str	r3, [fp, #-40]	; 0xffffffd8
     7fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     800:	ldrb	r3, [r3]
     804:	cmp	r3, #119	; 0x77
     808:	beq	7cc <find_minlength+0x7cc>
     80c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     810:	cmp	r4, r3
     814:	bls	838 <find_minlength+0x838>
     818:	ldr	r3, [fp, #-40]	; 0xffffffd8
     81c:	cmp	r4, r3
     820:	bcs	838 <find_minlength+0x838>
     824:	mov	r3, #0
     828:	str	r3, [fp, #-32]	; 0xffffffe0
     82c:	mov	r3, #1
     830:	str	r3, [fp, #-28]	; 0xffffffe4
     834:	b	928 <find_minlength+0x928>
     838:	ldr	r3, [fp, #4]
     83c:	str	r3, [fp, #-52]	; 0xffffffcc
     840:	ldr	r3, [fp, #4]
     844:	str	r3, [fp, #-52]	; 0xffffffcc
     848:	b	86c <find_minlength+0x86c>
     84c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     850:	ldr	r3, [r3, #4]
     854:	ldr	r2, [fp, #-68]	; 0xffffffbc
     858:	cmp	r2, r3
     85c:	beq	87c <find_minlength+0x87c>
     860:	ldr	r3, [fp, #-52]	; 0xffffffcc
     864:	ldr	r3, [r3]
     868:	str	r3, [fp, #-52]	; 0xffffffcc
     86c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     870:	cmp	r3, #0
     874:	bne	84c <find_minlength+0x84c>
     878:	b	880 <find_minlength+0x880>
     87c:	nop	{0}
     880:	ldr	r3, [fp, #-52]	; 0xffffffcc
     884:	cmp	r3, #0
     888:	beq	8a0 <find_minlength+0x8a0>
     88c:	mov	r3, #0
     890:	str	r3, [fp, #-32]	; 0xffffffe0
     894:	mov	r3, #1
     898:	str	r3, [fp, #-28]	; 0xffffffe4
     89c:	b	928 <find_minlength+0x928>
     8a0:	ldr	r3, [fp, #4]
     8a4:	str	r3, [fp, #-80]	; 0xffffffb0
     8a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     8ac:	str	r3, [fp, #-76]	; 0xffffffb4
     8b0:	ldr	r3, [fp, #8]
     8b4:	str	r3, [sp, #4]
     8b8:	sub	r3, fp, #80	; 0x50
     8bc:	str	r3, [sp]
     8c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
     8c4:	ldr	r2, [fp, #-96]	; 0xffffffa0
     8c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
     8cc:	ldr	r0, [fp, #-88]	; 0xffffffa8
     8d0:	bl	0 <find_minlength>
     8d4:	str	r0, [fp, #-72]	; 0xffffffb8
     8d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
     8dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     8e0:	cmp	r2, r3
     8e4:	bge	8f0 <find_minlength+0x8f0>
     8e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8ec:	str	r3, [fp, #-32]	; 0xffffffe0
     8f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
     8f4:	ldrh	r3, [r3, #36]	; 0x24
     8f8:	mov	r2, r3
     8fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     900:	add	r3, r3, r2
     904:	str	r3, [fp, #-48]	; 0xffffffd0
     908:	ldr	r3, [fp, #-44]	; 0xffffffd4
     90c:	sub	r2, r3, #1
     910:	str	r2, [fp, #-44]	; 0xffffffd4
     914:	cmp	r3, #0
     918:	bgt	780 <find_minlength+0x780>
     91c:	b	928 <find_minlength+0x928>
     920:	mov	r3, #0
     924:	str	r3, [fp, #-32]	; 0xffffffe0
     928:	add	r4, r4, #5
     92c:	b	aa4 <find_minlength+0xaa4>
     930:	ldr	r3, [fp, #-100]	; 0xffffff9c
     934:	and	r3, r3, #33554432	; 0x2000000
     938:	cmp	r3, #0
     93c:	bne	a98 <find_minlength+0xa98>
     940:	add	r3, r4, #1
     944:	ldrb	r3, [r3]
     948:	lsl	r3, r3, #8
     94c:	add	r2, r4, #2
     950:	ldrb	r2, [r2]
     954:	orr	r3, r3, r2
     958:	mov	r2, r3
     95c:	ldr	r1, [fp, #-64]	; 0xffffffc0
     960:	ldr	r0, [fp, #-96]	; 0xffffffa0
     964:	bl	0 <coda__pcre_find_bracket>
     968:	str	r0, [fp, #-68]	; 0xffffffbc
     96c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     970:	str	r3, [fp, #-40]	; 0xffffffd8
     974:	ldr	r3, [fp, #-68]	; 0xffffffbc
     978:	cmp	r3, #0
     97c:	bne	988 <find_minlength+0x988>
     980:	mvn	r3, #1
     984:	b	ce8 <find_minlength+0xce8>
     988:	ldr	r3, [fp, #-40]	; 0xffffffd8
     98c:	add	r3, r3, #1
     990:	ldrb	r3, [r3]
     994:	lsl	r3, r3, #8
     998:	ldr	r2, [fp, #-40]	; 0xffffffd8
     99c:	add	r2, r2, #2
     9a0:	ldrb	r2, [r2]
     9a4:	orr	r3, r3, r2
     9a8:	mov	r2, r3
     9ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
     9b0:	add	r3, r3, r2
     9b4:	str	r3, [fp, #-40]	; 0xffffffd8
     9b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     9bc:	ldrb	r3, [r3]
     9c0:	cmp	r3, #119	; 0x77
     9c4:	beq	988 <find_minlength+0x988>
     9c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     9cc:	cmp	r4, r3
     9d0:	bls	9f4 <find_minlength+0x9f4>
     9d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     9d8:	cmp	r4, r3
     9dc:	bcs	9f4 <find_minlength+0x9f4>
     9e0:	mov	r3, #0
     9e4:	str	r3, [fp, #-32]	; 0xffffffe0
     9e8:	mov	r3, #1
     9ec:	str	r3, [fp, #-28]	; 0xffffffe4
     9f0:	b	aa0 <find_minlength+0xaa0>
     9f4:	ldr	r3, [fp, #4]
     9f8:	str	r3, [fp, #-56]	; 0xffffffc8
     9fc:	ldr	r3, [fp, #4]
     a00:	str	r3, [fp, #-56]	; 0xffffffc8
     a04:	b	a28 <find_minlength+0xa28>
     a08:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a0c:	ldr	r3, [r3, #4]
     a10:	ldr	r2, [fp, #-68]	; 0xffffffbc
     a14:	cmp	r2, r3
     a18:	beq	a38 <find_minlength+0xa38>
     a1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a20:	ldr	r3, [r3]
     a24:	str	r3, [fp, #-56]	; 0xffffffc8
     a28:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a2c:	cmp	r3, #0
     a30:	bne	a08 <find_minlength+0xa08>
     a34:	b	a3c <find_minlength+0xa3c>
     a38:	nop	{0}
     a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a40:	cmp	r3, #0
     a44:	beq	a5c <find_minlength+0xa5c>
     a48:	mov	r3, #0
     a4c:	str	r3, [fp, #-32]	; 0xffffffe0
     a50:	mov	r3, #1
     a54:	str	r3, [fp, #-28]	; 0xffffffe4
     a58:	b	aa0 <find_minlength+0xaa0>
     a5c:	ldr	r3, [fp, #4]
     a60:	str	r3, [fp, #-80]	; 0xffffffb0
     a64:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a68:	str	r3, [fp, #-76]	; 0xffffffb4
     a6c:	ldr	r3, [fp, #8]
     a70:	str	r3, [sp, #4]
     a74:	sub	r3, fp, #80	; 0x50
     a78:	str	r3, [sp]
     a7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
     a80:	ldr	r2, [fp, #-96]	; 0xffffffa0
     a84:	ldr	r1, [fp, #-68]	; 0xffffffbc
     a88:	ldr	r0, [fp, #-88]	; 0xffffffa8
     a8c:	bl	0 <find_minlength>
     a90:	str	r0, [fp, #-32]	; 0xffffffe0
     a94:	b	aa0 <find_minlength+0xaa0>
     a98:	mov	r3, #0
     a9c:	str	r3, [fp, #-32]	; 0xffffffe0
     aa0:	add	r4, r4, #3
     aa4:	ldrb	r3, [r4]
     aa8:	sub	r3, r3, #98	; 0x62
     aac:	cmp	r3, #11
     ab0:	ldrls	pc, [pc, r3, lsl #2]
     ab4:	b	b2c <find_minlength+0xb2c>
     ab8:	.word	0x00000ae8
     abc:	.word	0x00000ae8
     ac0:	.word	0x00000af8
     ac4:	.word	0x00000af8
     ac8:	.word	0x00000ae8
     acc:	.word	0x00000ae8
     ad0:	.word	0x00000b08
     ad4:	.word	0x00000b08
     ad8:	.word	0x00000ae8
     adc:	.word	0x00000af8
     ae0:	.word	0x00000ae8
     ae4:	.word	0x00000b08
     ae8:	mov	r3, #0
     aec:	str	r3, [fp, #-36]	; 0xffffffdc
     af0:	add	r4, r4, #1
     af4:	b	b38 <find_minlength+0xb38>
     af8:	mov	r3, #1
     afc:	str	r3, [fp, #-36]	; 0xffffffdc
     b00:	add	r4, r4, #1
     b04:	b	b38 <find_minlength+0xb38>
     b08:	add	r3, r4, #1
     b0c:	ldrb	r3, [r3]
     b10:	lsl	r3, r3, #8
     b14:	add	r2, r4, #2
     b18:	ldrb	r2, [r2]
     b1c:	orr	r3, r3, r2
     b20:	str	r3, [fp, #-36]	; 0xffffffdc
     b24:	add	r4, r4, #5
     b28:	b	b38 <find_minlength+0xb38>
     b2c:	mov	r3, #1
     b30:	str	r3, [fp, #-36]	; 0xffffffdc
     b34:	nop	{0}
     b38:	ldr	r3, [fp, #-36]	; 0xffffffdc
     b3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     b40:	mul	r3, r2, r3
     b44:	add	r5, r5, r3
     b48:	b	ce4 <find_minlength+0xce4>
     b4c:	add	r3, r4, #1
     b50:	ldrb	r3, [r3]
     b54:	lsl	r3, r3, #8
     b58:	add	r2, r4, #2
     b5c:	ldrb	r2, [r2]
     b60:	orr	r3, r3, r2
     b64:	mov	r2, r3
     b68:	ldr	r3, [fp, #-96]	; 0xffffffa0
     b6c:	add	r3, r3, r2
     b70:	str	r3, [fp, #-40]	; 0xffffffd8
     b74:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b78:	str	r3, [fp, #-68]	; 0xffffffbc
     b7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b80:	add	r3, r3, #1
     b84:	ldrb	r3, [r3]
     b88:	lsl	r3, r3, #8
     b8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
     b90:	add	r2, r2, #2
     b94:	ldrb	r2, [r2]
     b98:	orr	r3, r3, r2
     b9c:	mov	r2, r3
     ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ba4:	add	r3, r3, r2
     ba8:	str	r3, [fp, #-40]	; 0xffffffd8
     bac:	ldr	r3, [fp, #-40]	; 0xffffffd8
     bb0:	ldrb	r3, [r3]
     bb4:	cmp	r3, #119	; 0x77
     bb8:	beq	b7c <find_minlength+0xb7c>
     bbc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     bc0:	cmp	r4, r3
     bc4:	bls	be0 <find_minlength+0xbe0>
     bc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     bcc:	cmp	r4, r3
     bd0:	bcs	be0 <find_minlength+0xbe0>
     bd4:	mov	r3, #1
     bd8:	str	r3, [fp, #-28]	; 0xffffffe4
     bdc:	b	c7c <find_minlength+0xc7c>
     be0:	ldr	r3, [fp, #4]
     be4:	str	r3, [fp, #-60]	; 0xffffffc4
     be8:	ldr	r3, [fp, #4]
     bec:	str	r3, [fp, #-60]	; 0xffffffc4
     bf0:	b	c14 <find_minlength+0xc14>
     bf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
     bf8:	ldr	r3, [r3, #4]
     bfc:	ldr	r2, [fp, #-68]	; 0xffffffbc
     c00:	cmp	r2, r3
     c04:	beq	c24 <find_minlength+0xc24>
     c08:	ldr	r3, [fp, #-60]	; 0xffffffc4
     c0c:	ldr	r3, [r3]
     c10:	str	r3, [fp, #-60]	; 0xffffffc4
     c14:	ldr	r3, [fp, #-60]	; 0xffffffc4
     c18:	cmp	r3, #0
     c1c:	bne	bf4 <find_minlength+0xbf4>
     c20:	b	c28 <find_minlength+0xc28>
     c24:	nop	{0}
     c28:	ldr	r3, [fp, #-60]	; 0xffffffc4
     c2c:	cmp	r3, #0
     c30:	beq	c40 <find_minlength+0xc40>
     c34:	mov	r3, #1
     c38:	str	r3, [fp, #-28]	; 0xffffffe4
     c3c:	b	c7c <find_minlength+0xc7c>
     c40:	ldr	r3, [fp, #4]
     c44:	str	r3, [fp, #-80]	; 0xffffffb0
     c48:	ldr	r3, [fp, #-68]	; 0xffffffbc
     c4c:	str	r3, [fp, #-76]	; 0xffffffb4
     c50:	ldr	r3, [fp, #8]
     c54:	str	r3, [sp, #4]
     c58:	sub	r3, fp, #80	; 0x50
     c5c:	str	r3, [sp]
     c60:	ldr	r3, [fp, #-100]	; 0xffffff9c
     c64:	ldr	r2, [fp, #-96]	; 0xffffffa0
     c68:	ldr	r1, [fp, #-68]	; 0xffffffbc
     c6c:	ldr	r0, [fp, #-88]	; 0xffffffa8
     c70:	bl	0 <find_minlength>
     c74:	mov	r3, r0
     c78:	add	r5, r5, r3
     c7c:	add	r4, r4, #3
     c80:	b	ce4 <find_minlength+0xce4>
     c84:	mov	r2, r6
     c88:	movw	r3, #0
     c8c:	movt	r3, #0
     c90:	ldrb	r3, [r3, r2]
     c94:	add	r4, r4, r3
     c98:	b	ce4 <find_minlength+0xce4>
     c9c:	mov	r2, r6
     ca0:	movw	r3, #0
     ca4:	movt	r3, #0
     ca8:	ldrb	r3, [r3, r2]
     cac:	mov	r2, r3
     cb0:	add	r3, r4, #1
     cb4:	ldrb	r3, [r3]
     cb8:	add	r3, r2, r3
     cbc:	add	r4, r4, r3
     cc0:	b	ce4 <find_minlength+0xce4>
     cc4:	mov	r2, r6
     cc8:	movw	r3, #0
     ccc:	movt	r3, #0
     cd0:	ldrb	r3, [r3, r2]
     cd4:	add	r4, r4, r3
     cd8:	b	ce4 <find_minlength+0xce4>
     cdc:	mvn	r3, #2
     ce0:	b	ce8 <find_minlength+0xce8>
     ce4:	b	c8 <find_minlength+0xc8>
     ce8:	mov	r0, r3
     cec:	sub	sp, fp, #16
     cf0:	ldrd	r4, [sp]
     cf4:	ldr	r6, [sp, #8]
     cf8:	ldr	fp, [sp, #12]
     cfc:	add	sp, sp, #16
     d00:	pop	{pc}		; (ldr pc, [sp], #4)

00000d04 <set_table_bit>:
     d04:	push	{fp}		; (str fp, [sp, #-4]!)
     d08:	add	fp, sp, #0
     d0c:	sub	sp, sp, #28
     d10:	str	r0, [fp, #-16]
     d14:	str	r1, [fp, #-20]	; 0xffffffec
     d18:	str	r2, [fp, #-24]	; 0xffffffe8
     d1c:	str	r3, [fp, #-28]	; 0xffffffe4
     d20:	ldr	r3, [fp, #-20]	; 0xffffffec
     d24:	ldrb	r3, [r3]
     d28:	str	r3, [fp, #-8]
     d2c:	ldr	r3, [fp, #-8]
     d30:	lsr	r3, r3, #3
     d34:	ldr	r2, [fp, #-16]
     d38:	add	r2, r2, r3
     d3c:	ldrb	r2, [r2]
     d40:	sxtb	r1, r2
     d44:	ldr	r2, [fp, #-8]
     d48:	and	r2, r2, #7
     d4c:	mov	r0, #1
     d50:	lsl	r2, r0, r2
     d54:	sxtb	r2, r2
     d58:	orr	r2, r1, r2
     d5c:	sxtb	r1, r2
     d60:	ldr	r2, [fp, #-16]
     d64:	add	r3, r2, r3
     d68:	uxtb	r2, r1
     d6c:	strb	r2, [r3]
     d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d74:	cmp	r3, #0
     d78:	beq	e28 <set_table_bit+0x124>
     d7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d80:	ldr	r2, [r3, #12]
     d84:	ldr	r3, [fp, #-8]
     d88:	add	r3, r2, r3
     d8c:	ldrb	r3, [r3]
     d90:	and	r3, r3, #2
     d94:	cmp	r3, #0
     d98:	beq	e28 <set_table_bit+0x124>
     d9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     da0:	ldr	r2, [r3, #4]
     da4:	ldr	r3, [fp, #-8]
     da8:	add	r3, r2, r3
     dac:	ldrb	r3, [r3]
     db0:	lsr	r3, r3, #3
     db4:	uxtb	r3, r3
     db8:	mov	r2, r3
     dbc:	ldr	r3, [fp, #-16]
     dc0:	add	r3, r3, r2
     dc4:	ldrb	r3, [r3]
     dc8:	sxtb	r2, r3
     dcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dd0:	ldr	r1, [r3, #4]
     dd4:	ldr	r3, [fp, #-8]
     dd8:	add	r3, r1, r3
     ddc:	ldrb	r3, [r3]
     de0:	and	r3, r3, #7
     de4:	mov	r1, #1
     de8:	lsl	r3, r1, r3
     dec:	sxtb	r3, r3
     df0:	orr	r3, r2, r3
     df4:	sxtb	r1, r3
     df8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     dfc:	ldr	r2, [r3, #4]
     e00:	ldr	r3, [fp, #-8]
     e04:	add	r3, r2, r3
     e08:	ldrb	r3, [r3]
     e0c:	lsr	r3, r3, #3
     e10:	uxtb	r3, r3
     e14:	mov	r2, r3
     e18:	ldr	r3, [fp, #-16]
     e1c:	add	r3, r3, r2
     e20:	uxtb	r2, r1
     e24:	strb	r2, [r3]
     e28:	ldr	r3, [fp, #-20]	; 0xffffffec
     e2c:	add	r3, r3, #1
     e30:	mov	r0, r3
     e34:	add	sp, fp, #0
     e38:	pop	{fp}		; (ldr fp, [sp], #4)
     e3c:	bx	lr

00000e40 <set_type_bits>:
     e40:	str	r4, [sp, #-8]!
     e44:	str	fp, [sp, #4]
     e48:	add	fp, sp, #4
     e4c:	sub	sp, sp, #16
     e50:	str	r0, [fp, #-8]
     e54:	str	r1, [fp, #-12]
     e58:	str	r2, [fp, #-16]
     e5c:	str	r3, [fp, #-20]	; 0xffffffec
     e60:	mov	r4, #0
     e64:	b	ea4 <set_type_bits+0x64>
     e68:	ldr	r3, [fp, #-8]
     e6c:	add	r3, r3, r4
     e70:	ldrb	r1, [r3]
     e74:	ldr	r3, [fp, #-20]	; 0xffffffec
     e78:	ldr	r2, [r3, #8]
     e7c:	ldr	r3, [fp, #-12]
     e80:	add	r3, r4, r3
     e84:	add	r3, r2, r3
     e88:	ldrb	r2, [r3]
     e8c:	ldr	r3, [fp, #-8]
     e90:	add	r3, r3, r4
     e94:	orr	r2, r1, r2
     e98:	uxtb	r2, r2
     e9c:	strb	r2, [r3]
     ea0:	add	r4, r4, #1
     ea4:	ldr	r3, [fp, #-16]
     ea8:	cmp	r4, r3
     eac:	bcc	e68 <set_type_bits+0x28>
     eb0:	nop	{0}
     eb4:	sub	sp, fp, #4
     eb8:	ldr	r4, [sp]
     ebc:	ldr	fp, [sp, #4]
     ec0:	add	sp, sp, #8
     ec4:	bx	lr

00000ec8 <set_nottype_bits>:
     ec8:	str	r4, [sp, #-8]!
     ecc:	str	fp, [sp, #4]
     ed0:	add	fp, sp, #4
     ed4:	sub	sp, sp, #16
     ed8:	str	r0, [fp, #-8]
     edc:	str	r1, [fp, #-12]
     ee0:	str	r2, [fp, #-16]
     ee4:	str	r3, [fp, #-20]	; 0xffffffec
     ee8:	mov	r4, #0
     eec:	b	f40 <set_nottype_bits+0x78>
     ef0:	ldr	r3, [fp, #-8]
     ef4:	add	r3, r3, r4
     ef8:	ldrb	r3, [r3]
     efc:	sxtb	r2, r3
     f00:	ldr	r3, [fp, #-20]	; 0xffffffec
     f04:	ldr	r1, [r3, #8]
     f08:	ldr	r3, [fp, #-12]
     f0c:	add	r3, r4, r3
     f10:	add	r3, r1, r3
     f14:	ldrb	r3, [r3]
     f18:	sxtb	r3, r3
     f1c:	mvn	r3, r3
     f20:	sxtb	r3, r3
     f24:	orr	r3, r2, r3
     f28:	sxtb	r2, r3
     f2c:	ldr	r3, [fp, #-8]
     f30:	add	r3, r3, r4
     f34:	uxtb	r2, r2
     f38:	strb	r2, [r3]
     f3c:	add	r4, r4, #1
     f40:	ldr	r3, [fp, #-16]
     f44:	cmp	r4, r3
     f48:	bcc	ef0 <set_nottype_bits+0x28>
     f4c:	nop	{0}
     f50:	sub	sp, fp, #4
     f54:	ldr	r4, [sp]
     f58:	ldr	fp, [sp, #4]
     f5c:	add	sp, sp, #8
     f60:	bx	lr

00000f64 <set_start_bits>:
     f64:	str	r4, [sp, #-12]!
     f68:	str	fp, [sp, #4]
     f6c:	str	lr, [sp, #8]
     f70:	add	fp, sp, #8
     f74:	sub	sp, sp, #60	; 0x3c
     f78:	str	r0, [fp, #-48]	; 0xffffffd0
     f7c:	str	r1, [fp, #-52]	; 0xffffffcc
     f80:	str	r2, [fp, #-56]	; 0xffffffc8
     f84:	str	r3, [fp, #-60]	; 0xffffffc4
     f88:	mov	r3, #1
     f8c:	str	r3, [fp, #-16]
     f90:	mov	r3, #32
     f94:	str	r3, [fp, #-32]	; 0xffffffe0
     f98:	mov	r3, #1
     f9c:	str	r3, [fp, #-20]	; 0xffffffec
     fa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     fa4:	add	r3, r3, #3
     fa8:	str	r3, [fp, #-24]	; 0xffffffe8
     fac:	ldr	r3, [fp, #-48]	; 0xffffffd0
     fb0:	ldrb	r3, [r3]
     fb4:	cmp	r3, #133	; 0x85
     fb8:	beq	fec <set_start_bits+0x88>
     fbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     fc0:	ldrb	r3, [r3]
     fc4:	cmp	r3, #138	; 0x8a
     fc8:	beq	fec <set_start_bits+0x88>
     fcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     fd0:	ldrb	r3, [r3]
     fd4:	cmp	r3, #134	; 0x86
     fd8:	beq	fec <set_start_bits+0x88>
     fdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
     fe0:	ldrb	r3, [r3]
     fe4:	cmp	r3, #139	; 0x8b
     fe8:	bne	1bc8 <set_start_bits+0xc64>
     fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ff0:	add	r3, r3, #2
     ff4:	str	r3, [fp, #-24]	; 0xffffffe8
     ff8:	b	1bc8 <set_start_bits+0xc64>
     ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1000:	ldrb	r3, [r3]
    1004:	cmp	r3, #161	; 0xa1
    1008:	ldrls	pc, [pc, r3, lsl #2]
    100c:	b	1298 <set_start_bits+0x334>
    1010:	.word	0x000012a0
    1014:	.word	0x000012a0
    1018:	.word	0x000012a0
    101c:	.word	0x000012a0
    1020:	.word	0x0000137c
    1024:	.word	0x0000137c
    1028:	.word	0x000017c4
    102c:	.word	0x000017e4
    1030:	.word	0x00001804
    1034:	.word	0x00001824
    1038:	.word	0x00001844
    103c:	.word	0x00001864
    1040:	.word	0x000012a0
    1044:	.word	0x000012a0
    1048:	.word	0x000012a0
    104c:	.word	0x000012a0
    1050:	.word	0x000012a8
    1054:	.word	0x00001718
    1058:	.word	0x000012a0
    105c:	.word	0x000016ac
    1060:	.word	0x000012a0
    1064:	.word	0x00001718
    1068:	.word	0x000012a0
    106c:	.word	0x000012a0
    1070:	.word	0x000012a0
    1074:	.word	0x000012a0
    1078:	.word	0x000012a0
    107c:	.word	0x000012a0
    1080:	.word	0x000012a0
    1084:	.word	0x00001648
    1088:	.word	0x00001680
    108c:	.word	0x000012a0
    1090:	.word	0x000012a0
    1094:	.word	0x0000159c
    1098:	.word	0x0000159c
    109c:	.word	0x00001648
    10a0:	.word	0x00001648
    10a4:	.word	0x0000159c
    10a8:	.word	0x0000159c
    10ac:	.word	0x000015ec
    10b0:	.word	0x000015ec
    10b4:	.word	0x0000163c
    10b8:	.word	0x0000159c
    10bc:	.word	0x00001648
    10c0:	.word	0x0000159c
    10c4:	.word	0x000015ec
    10c8:	.word	0x000015c4
    10cc:	.word	0x000015c4
    10d0:	.word	0x00001680
    10d4:	.word	0x00001680
    10d8:	.word	0x000015c4
    10dc:	.word	0x000015c4
    10e0:	.word	0x00001614
    10e4:	.word	0x00001614
    10e8:	.word	0x00001674
    10ec:	.word	0x000015c4
    10f0:	.word	0x00001680
    10f4:	.word	0x000015c4
    10f8:	.word	0x00001614
    10fc:	.word	0x000012a0
    1100:	.word	0x000012a0
    1104:	.word	0x000012a0
    1108:	.word	0x000012a0
    110c:	.word	0x000012a0
    1110:	.word	0x000012a0
    1114:	.word	0x000012a0
    1118:	.word	0x000012a0
    111c:	.word	0x000012a0
    1120:	.word	0x000012a0
    1124:	.word	0x000012a0
    1128:	.word	0x000012a0
    112c:	.word	0x000012a0
    1130:	.word	0x000012a0
    1134:	.word	0x000012a0
    1138:	.word	0x000012a0
    113c:	.word	0x000012a0
    1140:	.word	0x000012a0
    1144:	.word	0x000012a0
    1148:	.word	0x000012a0
    114c:	.word	0x000012a0
    1150:	.word	0x000012a0
    1154:	.word	0x000012a0
    1158:	.word	0x000012a0
    115c:	.word	0x000012a0
    1160:	.word	0x000012a0
    1164:	.word	0x000018b0
    1168:	.word	0x000018b0
    116c:	.word	0x00001884
    1170:	.word	0x00001884
    1174:	.word	0x000018b0
    1178:	.word	0x000018b0
    117c:	.word	0x000018a4
    1180:	.word	0x000018a4
    1184:	.word	0x00001894
    1188:	.word	0x000018b0
    118c:	.word	0x00001884
    1190:	.word	0x000018b0
    1194:	.word	0x000018a4
    1198:	.word	0x00001298
    119c:	.word	0x00001298
    11a0:	.word	0x00001298
    11a4:	.word	0x00001298
    11a8:	.word	0x00001298
    11ac:	.word	0x00001298
    11b0:	.word	0x00001298
    11b4:	.word	0x00001298
    11b8:	.word	0x00001298
    11bc:	.word	0x00001298
    11c0:	.word	0x00001298
    11c4:	.word	0x00001298
    11c8:	.word	0x00001abc
    11cc:	.word	0x00001abc
    11d0:	.word	0x00001298
    11d4:	.word	0x000012a0
    11d8:	.word	0x000012a0
    11dc:	.word	0x000012a0
    11e0:	.word	0x000012a0
    11e4:	.word	0x000012a0
    11e8:	.word	0x00001448
    11ec:	.word	0x0000142c
    11f0:	.word	0x00001440
    11f4:	.word	0x00001440
    11f8:	.word	0x00001440
    11fc:	.word	0x00001440
    1200:	.word	0x000012a0
    1204:	.word	0x0000138c
    1208:	.word	0x0000145c
    120c:	.word	0x0000145c
    1210:	.word	0x0000145c
    1214:	.word	0x0000138c
    1218:	.word	0x0000138c
    121c:	.word	0x0000138c
    1220:	.word	0x0000138c
    1224:	.word	0x0000138c
    1228:	.word	0x0000138c
    122c:	.word	0x000012a0
    1230:	.word	0x0000138c
    1234:	.word	0x0000138c
    1238:	.word	0x0000138c
    123c:	.word	0x0000138c
    1240:	.word	0x000012a0
    1244:	.word	0x000012a0
    1248:	.word	0x000012a0
    124c:	.word	0x000012a0
    1250:	.word	0x000012a0
    1254:	.word	0x000012a0
    1258:	.word	0x000014ac
    125c:	.word	0x000014ac
    1260:	.word	0x000014ac
    1264:	.word	0x000012a0
    1268:	.word	0x000012a0
    126c:	.word	0x000012a0
    1270:	.word	0x000012a0
    1274:	.word	0x000012a0
    1278:	.word	0x000012a0
    127c:	.word	0x000012a0
    1280:	.word	0x000012a0
    1284:	.word	0x000012a0
    1288:	.word	0x000012a0
    128c:	.word	0x000012a0
    1290:	.word	0x000012a0
    1294:	.word	0x00001540
    1298:	mov	r3, #3
    129c:	b	1c18 <set_start_bits+0xcb4>
    12a0:	mov	r3, #0
    12a4:	b	1c18 <set_start_bits+0xcb4>
    12a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12ac:	add	r3, r3, #1
    12b0:	ldrb	r3, [r3]
    12b4:	cmp	r3, #9
    12b8:	beq	12c4 <set_start_bits+0x360>
    12bc:	mov	r3, #0
    12c0:	b	1c18 <set_start_bits+0xcb4>
    12c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12c8:	add	r3, r3, #2
    12cc:	ldrb	r3, [r3]
    12d0:	lsl	r2, r3, #2
    12d4:	movw	r3, #0
    12d8:	movt	r3, #0
    12dc:	add	r3, r2, r3
    12e0:	str	r3, [fp, #-28]	; 0xffffffe4
    12e4:	b	1354 <set_start_bits+0x3f0>
    12e8:	cmp	r4, #255	; 0xff
    12ec:	bls	1318 <set_start_bits+0x3b4>
    12f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    12f4:	add	r3, r3, #31
    12f8:	ldrb	r3, [r3]
    12fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1300:	add	r2, r2, #31
    1304:	mvn	r3, r3, lsl #25
    1308:	mvn	r3, r3, lsr #25
    130c:	uxtb	r3, r3
    1310:	strb	r3, [r2]
    1314:	b	1354 <set_start_bits+0x3f0>
    1318:	lsr	r3, r4, #3
    131c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1320:	add	r2, r2, r3
    1324:	ldrb	r2, [r2]
    1328:	sxtb	r1, r2
    132c:	and	r2, r4, #7
    1330:	mov	r0, #1
    1334:	lsl	r2, r0, r2
    1338:	sxtb	r2, r2
    133c:	orr	r2, r1, r2
    1340:	sxtb	r1, r2
    1344:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1348:	add	r3, r2, r3
    134c:	uxtb	r2, r1
    1350:	strb	r2, [r3]
    1354:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1358:	add	r2, r3, #4
    135c:	str	r2, [fp, #-28]	; 0xffffffe4
    1360:	ldr	r4, [r3]
    1364:	cmn	r4, #1
    1368:	bne	12e8 <set_start_bits+0x384>
    136c:	nop	{0}
    1370:	mov	r3, #0
    1374:	str	r3, [fp, #-20]	; 0xffffffec
    1378:	b	1bc8 <set_start_bits+0xc64>
    137c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1380:	add	r3, r3, #1
    1384:	str	r3, [fp, #-24]	; 0xffffffe8
    1388:	b	1bc8 <set_start_bits+0xc64>
    138c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1390:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1394:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1398:	ldr	r0, [fp, #-24]	; 0xffffffe8
    139c:	bl	f64 <set_start_bits>
    13a0:	str	r0, [fp, #-36]	; 0xffffffdc
    13a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13a8:	cmp	r3, #0
    13ac:	beq	13bc <set_start_bits+0x458>
    13b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13b4:	cmp	r3, #3
    13b8:	bne	13c4 <set_start_bits+0x460>
    13bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13c0:	b	1c18 <set_start_bits+0xcb4>
    13c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    13c8:	cmp	r3, #1
    13cc:	bne	13dc <set_start_bits+0x478>
    13d0:	mov	r3, #0
    13d4:	str	r3, [fp, #-20]	; 0xffffffec
    13d8:	b	1bc8 <set_start_bits+0xc64>
    13dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13e0:	add	r3, r3, #1
    13e4:	ldrb	r3, [r3]
    13e8:	lsl	r3, r3, #8
    13ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    13f0:	add	r2, r2, #2
    13f4:	ldrb	r2, [r2]
    13f8:	orr	r3, r3, r2
    13fc:	mov	r2, r3
    1400:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1404:	add	r3, r3, r2
    1408:	str	r3, [fp, #-24]	; 0xffffffe8
    140c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1410:	ldrb	r3, [r3]
    1414:	cmp	r3, #119	; 0x77
    1418:	beq	13dc <set_start_bits+0x478>
    141c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1420:	add	r3, r3, #3
    1424:	str	r3, [fp, #-24]	; 0xffffffe8
    1428:	b	1bc8 <set_start_bits+0xc64>
    142c:	mov	r3, #2
    1430:	str	r3, [fp, #-16]
    1434:	mov	r3, #0
    1438:	str	r3, [fp, #-20]	; 0xffffffec
    143c:	b	1bc8 <set_start_bits+0xc64>
    1440:	mov	r3, #2
    1444:	b	1c18 <set_start_bits+0xcb4>
    1448:	ldr	r3, [fp, #-24]	; 0xffffffe8
    144c:	add	r3, r3, #6
    1450:	str	r3, [fp, #-24]	; 0xffffffe8
    1454:	b	1bc8 <set_start_bits+0xc64>
    1458:	nop	{0}
    145c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1460:	add	r3, r3, #1
    1464:	ldrb	r3, [r3]
    1468:	lsl	r3, r3, #8
    146c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1470:	add	r2, r2, #2
    1474:	ldrb	r2, [r2]
    1478:	orr	r3, r3, r2
    147c:	mov	r2, r3
    1480:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1484:	add	r3, r3, r2
    1488:	str	r3, [fp, #-24]	; 0xffffffe8
    148c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1490:	ldrb	r3, [r3]
    1494:	cmp	r3, #119	; 0x77
    1498:	beq	1458 <set_start_bits+0x4f4>
    149c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14a0:	add	r3, r3, #3
    14a4:	str	r3, [fp, #-24]	; 0xffffffe8
    14a8:	b	1bc8 <set_start_bits+0xc64>
    14ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14b0:	add	r3, r3, #1
    14b4:	str	r3, [fp, #-24]	; 0xffffffe8
    14b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    14bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    14c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    14c8:	bl	f64 <set_start_bits>
    14cc:	str	r0, [fp, #-36]	; 0xffffffdc
    14d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    14d4:	cmp	r3, #0
    14d8:	beq	14e8 <set_start_bits+0x584>
    14dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    14e0:	cmp	r3, #3
    14e4:	bne	14f0 <set_start_bits+0x58c>
    14e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    14ec:	b	1c18 <set_start_bits+0xcb4>
    14f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14f4:	add	r3, r3, #1
    14f8:	ldrb	r3, [r3]
    14fc:	lsl	r3, r3, #8
    1500:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1504:	add	r2, r2, #2
    1508:	ldrb	r2, [r2]
    150c:	orr	r3, r3, r2
    1510:	mov	r2, r3
    1514:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1518:	add	r3, r3, r2
    151c:	str	r3, [fp, #-24]	; 0xffffffe8
    1520:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1524:	ldrb	r3, [r3]
    1528:	cmp	r3, #119	; 0x77
    152c:	beq	14f0 <set_start_bits+0x58c>
    1530:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1534:	add	r3, r3, #3
    1538:	str	r3, [fp, #-24]	; 0xffffffe8
    153c:	b	1bc8 <set_start_bits+0xc64>
    1540:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1544:	add	r3, r3, #1
    1548:	str	r3, [fp, #-24]	; 0xffffffe8
    154c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1550:	add	r3, r3, #1
    1554:	ldrb	r3, [r3]
    1558:	lsl	r3, r3, #8
    155c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1560:	add	r2, r2, #2
    1564:	ldrb	r2, [r2]
    1568:	orr	r3, r3, r2
    156c:	mov	r2, r3
    1570:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1574:	add	r3, r3, r2
    1578:	str	r3, [fp, #-24]	; 0xffffffe8
    157c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1580:	ldrb	r3, [r3]
    1584:	cmp	r3, #119	; 0x77
    1588:	beq	154c <set_start_bits+0x5e8>
    158c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1590:	add	r3, r3, #3
    1594:	str	r3, [fp, #-24]	; 0xffffffe8
    1598:	b	1bc8 <set_start_bits+0xc64>
    159c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15a0:	add	r1, r3, #1
    15a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15a8:	str	r3, [sp]
    15ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    15b0:	mov	r2, #0
    15b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    15b8:	bl	d04 <set_table_bit>
    15bc:	str	r0, [fp, #-24]	; 0xffffffe8
    15c0:	b	1bc8 <set_start_bits+0xc64>
    15c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15c8:	add	r1, r3, #1
    15cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15d0:	str	r3, [sp]
    15d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    15d8:	mov	r2, #1
    15dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    15e0:	bl	d04 <set_table_bit>
    15e4:	str	r0, [fp, #-24]	; 0xffffffe8
    15e8:	b	1bc8 <set_start_bits+0xc64>
    15ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15f0:	add	r1, r3, #3
    15f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15f8:	str	r3, [sp]
    15fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1600:	mov	r2, #0
    1604:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1608:	bl	d04 <set_table_bit>
    160c:	str	r0, [fp, #-24]	; 0xffffffe8
    1610:	b	1bc8 <set_start_bits+0xc64>
    1614:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1618:	add	r1, r3, #3
    161c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1620:	str	r3, [sp]
    1624:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1628:	mov	r2, #1
    162c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1630:	bl	d04 <set_table_bit>
    1634:	str	r0, [fp, #-24]	; 0xffffffe8
    1638:	b	1bc8 <set_start_bits+0xc64>
    163c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1640:	add	r3, r3, #2
    1644:	str	r3, [fp, #-24]	; 0xffffffe8
    1648:	ldr	r3, [fp, #-24]	; 0xffffffe8
    164c:	add	r1, r3, #1
    1650:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1654:	str	r3, [sp]
    1658:	ldr	r3, [fp, #-60]	; 0xffffffc4
    165c:	mov	r2, #0
    1660:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1664:	bl	d04 <set_table_bit>
    1668:	mov	r3, #0
    166c:	str	r3, [fp, #-20]	; 0xffffffec
    1670:	b	1bc8 <set_start_bits+0xc64>
    1674:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1678:	add	r3, r3, #2
    167c:	str	r3, [fp, #-24]	; 0xffffffe8
    1680:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1684:	add	r1, r3, #1
    1688:	ldr	r3, [fp, #-56]	; 0xffffffc8
    168c:	str	r3, [sp]
    1690:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1694:	mov	r2, #1
    1698:	ldr	r0, [fp, #-52]	; 0xffffffcc
    169c:	bl	d04 <set_table_bit>
    16a0:	mov	r3, #0
    16a4:	str	r3, [fp, #-20]	; 0xffffffec
    16a8:	b	1bc8 <set_start_bits+0xc64>
    16ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16b0:	add	r3, r3, #1
    16b4:	ldrb	r2, [r3]
    16b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16bc:	add	r3, r3, #1
    16c0:	orr	r2, r2, #2
    16c4:	uxtb	r2, r2
    16c8:	strb	r2, [r3]
    16cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16d0:	add	r3, r3, #4
    16d4:	ldrb	r2, [r3]
    16d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16dc:	add	r3, r3, #4
    16e0:	orr	r2, r2, #1
    16e4:	uxtb	r2, r2
    16e8:	strb	r2, [r3]
    16ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16f0:	add	r3, r3, #20
    16f4:	ldrb	r2, [r3]
    16f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16fc:	add	r3, r3, #20
    1700:	orr	r2, r2, #1
    1704:	uxtb	r2, r2
    1708:	strb	r2, [r3]
    170c:	mov	r3, #0
    1710:	str	r3, [fp, #-20]	; 0xffffffec
    1714:	b	1bc8 <set_start_bits+0xc64>
    1718:	ldr	r3, [fp, #-52]	; 0xffffffcc
    171c:	add	r3, r3, #1
    1720:	ldrb	r2, [r3]
    1724:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1728:	add	r3, r3, #1
    172c:	orr	r2, r2, #4
    1730:	uxtb	r2, r2
    1734:	strb	r2, [r3]
    1738:	ldr	r3, [fp, #-52]	; 0xffffffcc
    173c:	add	r3, r3, #1
    1740:	ldrb	r2, [r3]
    1744:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1748:	add	r3, r3, #1
    174c:	orr	r2, r2, #8
    1750:	uxtb	r2, r2
    1754:	strb	r2, [r3]
    1758:	ldr	r3, [fp, #-52]	; 0xffffffcc
    175c:	add	r3, r3, #1
    1760:	ldrb	r2, [r3]
    1764:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1768:	add	r3, r3, #1
    176c:	orr	r2, r2, #16
    1770:	uxtb	r2, r2
    1774:	strb	r2, [r3]
    1778:	ldr	r3, [fp, #-52]	; 0xffffffcc
    177c:	add	r3, r3, #1
    1780:	ldrb	r2, [r3]
    1784:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1788:	add	r3, r3, #1
    178c:	orr	r2, r2, #32
    1790:	uxtb	r2, r2
    1794:	strb	r2, [r3]
    1798:	ldr	r3, [fp, #-52]	; 0xffffffcc
    179c:	add	r3, r3, #16
    17a0:	ldrb	r2, [r3]
    17a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    17a8:	add	r3, r3, #16
    17ac:	orr	r2, r2, #32
    17b0:	uxtb	r2, r2
    17b4:	strb	r2, [r3]
    17b8:	mov	r3, #0
    17bc:	str	r3, [fp, #-20]	; 0xffffffec
    17c0:	b	1bc8 <set_start_bits+0xc64>
    17c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    17c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17cc:	mov	r1, #64	; 0x40
    17d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    17d4:	bl	ec8 <set_nottype_bits>
    17d8:	mov	r3, #0
    17dc:	str	r3, [fp, #-20]	; 0xffffffec
    17e0:	b	1bc8 <set_start_bits+0xc64>
    17e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    17e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17ec:	mov	r1, #64	; 0x40
    17f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    17f4:	bl	e40 <set_type_bits>
    17f8:	mov	r3, #0
    17fc:	str	r3, [fp, #-20]	; 0xffffffec
    1800:	b	1bc8 <set_start_bits+0xc64>
    1804:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1808:	ldr	r3, [fp, #-60]	; 0xffffffc4
    180c:	mov	r1, #0
    1810:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1814:	bl	ec8 <set_nottype_bits>
    1818:	mov	r3, #0
    181c:	str	r3, [fp, #-20]	; 0xffffffec
    1820:	b	1bc8 <set_start_bits+0xc64>
    1824:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1828:	ldr	r3, [fp, #-60]	; 0xffffffc4
    182c:	mov	r1, #0
    1830:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1834:	bl	e40 <set_type_bits>
    1838:	mov	r3, #0
    183c:	str	r3, [fp, #-20]	; 0xffffffec
    1840:	b	1bc8 <set_start_bits+0xc64>
    1844:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1848:	ldr	r3, [fp, #-60]	; 0xffffffc4
    184c:	mov	r1, #160	; 0xa0
    1850:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1854:	bl	ec8 <set_nottype_bits>
    1858:	mov	r3, #0
    185c:	str	r3, [fp, #-20]	; 0xffffffec
    1860:	b	1bc8 <set_start_bits+0xc64>
    1864:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1868:	ldr	r3, [fp, #-60]	; 0xffffffc4
    186c:	mov	r1, #160	; 0xa0
    1870:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1874:	bl	e40 <set_type_bits>
    1878:	mov	r3, #0
    187c:	str	r3, [fp, #-20]	; 0xffffffec
    1880:	b	1bc8 <set_start_bits+0xc64>
    1884:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1888:	add	r3, r3, #1
    188c:	str	r3, [fp, #-24]	; 0xffffffe8
    1890:	b	1bc8 <set_start_bits+0xc64>
    1894:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1898:	add	r3, r3, #3
    189c:	str	r3, [fp, #-24]	; 0xffffffe8
    18a0:	b	1bc8 <set_start_bits+0xc64>
    18a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    18a8:	add	r3, r3, #2
    18ac:	str	r3, [fp, #-24]	; 0xffffffe8
    18b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    18b4:	add	r3, r3, #1
    18b8:	ldrb	r3, [r3]
    18bc:	sub	r3, r3, #6
    18c0:	cmp	r3, #15
    18c4:	ldrls	pc, [pc, r3, lsl #2]
    18c8:	b	190c <set_start_bits+0x9a8>
    18cc:	.word	0x00001a1c
    18d0:	.word	0x00001a34
    18d4:	.word	0x00001a4c
    18d8:	.word	0x00001a64
    18dc:	.word	0x00001a7c
    18e0:	.word	0x00001a94
    18e4:	.word	0x0000190c
    18e8:	.word	0x0000190c
    18ec:	.word	0x0000190c
    18f0:	.word	0x0000190c
    18f4:	.word	0x0000190c
    18f8:	.word	0x00001978
    18fc:	.word	0x0000190c
    1900:	.word	0x00001914
    1904:	.word	0x0000190c
    1908:	.word	0x00001978
    190c:	mov	r3, #0
    1910:	b	1c18 <set_start_bits+0xcb4>
    1914:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1918:	add	r3, r3, #1
    191c:	ldrb	r2, [r3]
    1920:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1924:	add	r3, r3, #1
    1928:	orr	r2, r2, #2
    192c:	uxtb	r2, r2
    1930:	strb	r2, [r3]
    1934:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1938:	add	r3, r3, #4
    193c:	ldrb	r2, [r3]
    1940:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1944:	add	r3, r3, #4
    1948:	orr	r2, r2, #1
    194c:	uxtb	r2, r2
    1950:	strb	r2, [r3]
    1954:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1958:	add	r3, r3, #20
    195c:	ldrb	r2, [r3]
    1960:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1964:	add	r3, r3, #20
    1968:	orr	r2, r2, #1
    196c:	uxtb	r2, r2
    1970:	strb	r2, [r3]
    1974:	b	1aac <set_start_bits+0xb48>
    1978:	ldr	r3, [fp, #-52]	; 0xffffffcc
    197c:	add	r3, r3, #1
    1980:	ldrb	r2, [r3]
    1984:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1988:	add	r3, r3, #1
    198c:	orr	r2, r2, #4
    1990:	uxtb	r2, r2
    1994:	strb	r2, [r3]
    1998:	ldr	r3, [fp, #-52]	; 0xffffffcc
    199c:	add	r3, r3, #1
    19a0:	ldrb	r2, [r3]
    19a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19a8:	add	r3, r3, #1
    19ac:	orr	r2, r2, #8
    19b0:	uxtb	r2, r2
    19b4:	strb	r2, [r3]
    19b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19bc:	add	r3, r3, #1
    19c0:	ldrb	r2, [r3]
    19c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19c8:	add	r3, r3, #1
    19cc:	orr	r2, r2, #16
    19d0:	uxtb	r2, r2
    19d4:	strb	r2, [r3]
    19d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19dc:	add	r3, r3, #1
    19e0:	ldrb	r2, [r3]
    19e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19e8:	add	r3, r3, #1
    19ec:	orr	r2, r2, #32
    19f0:	uxtb	r2, r2
    19f4:	strb	r2, [r3]
    19f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    19fc:	add	r3, r3, #16
    1a00:	ldrb	r2, [r3]
    1a04:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1a08:	add	r3, r3, #16
    1a0c:	orr	r2, r2, #32
    1a10:	uxtb	r2, r2
    1a14:	strb	r2, [r3]
    1a18:	b	1aac <set_start_bits+0xb48>
    1a1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a20:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a24:	mov	r1, #64	; 0x40
    1a28:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a2c:	bl	ec8 <set_nottype_bits>
    1a30:	b	1aac <set_start_bits+0xb48>
    1a34:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a38:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a3c:	mov	r1, #64	; 0x40
    1a40:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a44:	bl	e40 <set_type_bits>
    1a48:	b	1aac <set_start_bits+0xb48>
    1a4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a50:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a54:	mov	r1, #0
    1a58:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a5c:	bl	ec8 <set_nottype_bits>
    1a60:	b	1aac <set_start_bits+0xb48>
    1a64:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a68:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a6c:	mov	r1, #0
    1a70:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a74:	bl	e40 <set_type_bits>
    1a78:	b	1aac <set_start_bits+0xb48>
    1a7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a80:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a84:	mov	r1, #160	; 0xa0
    1a88:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a8c:	bl	ec8 <set_nottype_bits>
    1a90:	b	1aac <set_start_bits+0xb48>
    1a94:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a98:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a9c:	mov	r1, #160	; 0xa0
    1aa0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1aa4:	bl	e40 <set_type_bits>
    1aa8:	nop	{0}
    1aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ab0:	add	r3, r3, #2
    1ab4:	str	r3, [fp, #-24]	; 0xffffffe8
    1ab8:	b	1bc8 <set_start_bits+0xc64>
    1abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ac0:	add	r3, r3, #1
    1ac4:	str	r3, [fp, #-24]	; 0xffffffe8
    1ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1acc:	str	r3, [fp, #-40]	; 0xffffffd8
    1ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ad4:	add	r3, r3, #32
    1ad8:	str	r3, [fp, #-24]	; 0xffffffe8
    1adc:	mov	r4, #0
    1ae0:	b	1b14 <set_start_bits+0xbb0>
    1ae4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1ae8:	add	r3, r3, r4
    1aec:	ldrb	r1, [r3]
    1af0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1af4:	add	r3, r3, r4
    1af8:	ldrb	r2, [r3]
    1afc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1b00:	add	r3, r3, r4
    1b04:	orr	r2, r1, r2
    1b08:	uxtb	r2, r2
    1b0c:	strb	r2, [r3]
    1b10:	add	r4, r4, #1
    1b14:	cmp	r4, #31
    1b18:	bls	1ae4 <set_start_bits+0xb80>
    1b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b20:	ldrb	r3, [r3]
    1b24:	sub	r3, r3, #98	; 0x62
    1b28:	cmp	r3, #11
    1b2c:	ldrls	pc, [pc, r3, lsl #2]
    1b30:	b	1bb8 <set_start_bits+0xc54>
    1b34:	.word	0x00001b64
    1b38:	.word	0x00001b64
    1b3c:	.word	0x00001bb8
    1b40:	.word	0x00001bb8
    1b44:	.word	0x00001b64
    1b48:	.word	0x00001b64
    1b4c:	.word	0x00001b74
    1b50:	.word	0x00001b74
    1b54:	.word	0x00001b64
    1b58:	.word	0x00001bb8
    1b5c:	.word	0x00001b64
    1b60:	.word	0x00001b74
    1b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b68:	add	r3, r3, #1
    1b6c:	str	r3, [fp, #-24]	; 0xffffffe8
    1b70:	b	1bc4 <set_start_bits+0xc60>
    1b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b78:	add	r3, r3, #1
    1b7c:	ldrb	r3, [r3]
    1b80:	lsl	r3, r3, #8
    1b84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1b88:	add	r2, r2, #2
    1b8c:	ldrb	r2, [r2]
    1b90:	orr	r3, r3, r2
    1b94:	cmp	r3, #0
    1b98:	bne	1bac <set_start_bits+0xc48>
    1b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ba0:	add	r3, r3, #5
    1ba4:	str	r3, [fp, #-24]	; 0xffffffe8
    1ba8:	b	1bc4 <set_start_bits+0xc60>
    1bac:	mov	r3, #0
    1bb0:	str	r3, [fp, #-20]	; 0xffffffec
    1bb4:	b	1bc4 <set_start_bits+0xc60>
    1bb8:	mov	r3, #0
    1bbc:	str	r3, [fp, #-20]	; 0xffffffec
    1bc0:	nop	{0}
    1bc4:	nop	{0}
    1bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1bcc:	cmp	r3, #0
    1bd0:	bne	ffc <set_start_bits+0x98>
    1bd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1bd8:	add	r3, r3, #1
    1bdc:	ldrb	r3, [r3]
    1be0:	lsl	r3, r3, #8
    1be4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1be8:	add	r2, r2, #2
    1bec:	ldrb	r2, [r2]
    1bf0:	orr	r3, r3, r2
    1bf4:	mov	r2, r3
    1bf8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1bfc:	add	r3, r3, r2
    1c00:	str	r3, [fp, #-48]	; 0xffffffd0
    1c04:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1c08:	ldrb	r3, [r3]
    1c0c:	cmp	r3, #119	; 0x77
    1c10:	beq	f98 <set_start_bits+0x34>
    1c14:	ldr	r3, [fp, #-16]
    1c18:	mov	r0, r3
    1c1c:	sub	sp, fp, #8
    1c20:	ldr	r4, [sp]
    1c24:	ldr	fp, [sp, #4]
    1c28:	add	sp, sp, #8
    1c2c:	pop	{pc}		; (ldr pc, [sp], #4)

00001c30 <coda_pcre_study>:
    1c30:	str	fp, [sp, #-8]!
    1c34:	str	lr, [sp, #4]
    1c38:	add	fp, sp, #4
    1c3c:	sub	sp, sp, #240	; 0xf0
    1c40:	str	r0, [fp, #-224]	; 0xffffff20
    1c44:	str	r1, [fp, #-228]	; 0xffffff1c
    1c48:	str	r2, [fp, #-232]	; 0xffffff18
    1c4c:	mov	r3, #0
    1c50:	str	r3, [fp, #-36]	; 0xffffffdc
    1c54:	mov	r3, #0
    1c58:	str	r3, [fp, #-8]
    1c5c:	mov	r3, #0
    1c60:	str	r3, [fp, #-12]
    1c64:	ldr	r3, [fp, #-224]	; 0xffffff20
    1c68:	str	r3, [fp, #-16]
    1c6c:	ldr	r3, [fp, #-232]	; 0xffffff18
    1c70:	mov	r2, #0
    1c74:	str	r2, [r3]
    1c78:	ldr	r3, [fp, #-16]
    1c7c:	cmp	r3, #0
    1c80:	beq	1c9c <coda_pcre_study+0x6c>
    1c84:	ldr	r3, [fp, #-16]
    1c88:	ldr	r2, [r3]
    1c8c:	movw	r3, #21061	; 0x5245
    1c90:	movt	r3, #20547	; 0x5043
    1c94:	cmp	r2, r3
    1c98:	beq	1cb4 <coda_pcre_study+0x84>
    1c9c:	ldr	r2, [fp, #-232]	; 0xffffff18
    1ca0:	movw	r3, #0
    1ca4:	movt	r3, #0
    1ca8:	str	r3, [r2]
    1cac:	mov	r3, #0
    1cb0:	b	2014 <coda_pcre_study+0x3e4>
    1cb4:	ldr	r3, [fp, #-16]
    1cb8:	ldr	r3, [r3, #12]
    1cbc:	and	r3, r3, #1
    1cc0:	cmp	r3, #0
    1cc4:	bne	1ce0 <coda_pcre_study+0xb0>
    1cc8:	ldr	r2, [fp, #-232]	; 0xffffff18
    1ccc:	movw	r3, #0
    1cd0:	movt	r3, #0
    1cd4:	str	r3, [r2]
    1cd8:	mov	r3, #0
    1cdc:	b	2014 <coda_pcre_study+0x3e4>
    1ce0:	ldr	r3, [fp, #-228]	; 0xffffff1c
    1ce4:	bic	r3, r3, #15
    1ce8:	cmp	r3, #0
    1cec:	beq	1d08 <coda_pcre_study+0xd8>
    1cf0:	ldr	r2, [fp, #-232]	; 0xffffff18
    1cf4:	movw	r3, #0
    1cf8:	movt	r3, #0
    1cfc:	str	r3, [r2]
    1d00:	mov	r3, #0
    1d04:	b	2014 <coda_pcre_study+0x3e4>
    1d08:	ldr	r3, [fp, #-16]
    1d0c:	ldrh	r3, [r3, #34]	; 0x22
    1d10:	mov	r2, r3
    1d14:	ldr	r3, [fp, #-16]
    1d18:	ldrh	r3, [r3, #38]	; 0x26
    1d1c:	mov	r1, r3
    1d20:	ldr	r3, [fp, #-16]
    1d24:	ldrh	r3, [r3, #36]	; 0x24
    1d28:	mul	r3, r3, r1
    1d2c:	add	r3, r2, r3
    1d30:	ldr	r2, [fp, #-16]
    1d34:	add	r3, r2, r3
    1d38:	str	r3, [fp, #-20]	; 0xffffffec
    1d3c:	ldr	r3, [fp, #-16]
    1d40:	ldr	r3, [r3, #8]
    1d44:	and	r3, r3, #16
    1d48:	cmp	r3, #0
    1d4c:	bne	1e40 <coda_pcre_study+0x210>
    1d50:	ldr	r3, [fp, #-16]
    1d54:	ldr	r3, [r3, #12]
    1d58:	and	r3, r3, #272	; 0x110
    1d5c:	cmp	r3, #0
    1d60:	bne	1e40 <coda_pcre_study+0x210>
    1d64:	ldr	r3, [fp, #-16]
    1d68:	ldr	r3, [r3, #48]	; 0x30
    1d6c:	str	r3, [fp, #-72]	; 0xffffffb8
    1d70:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d74:	cmp	r3, #0
    1d78:	bne	1d90 <coda_pcre_study+0x160>
    1d7c:	sub	r3, fp, #72	; 0x48
    1d80:	mov	r2, #11
    1d84:	mov	r1, #0
    1d88:	ldr	r0, [fp, #-224]	; 0xffffff20
    1d8c:	bl	0 <coda_pcre_fullinfo>
    1d90:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d94:	str	r3, [fp, #-216]	; 0xffffff28
    1d98:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d9c:	add	r3, r3, #256	; 0x100
    1da0:	str	r3, [fp, #-212]	; 0xffffff2c
    1da4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1da8:	add	r3, r3, #512	; 0x200
    1dac:	str	r3, [fp, #-208]	; 0xffffff30
    1db0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1db4:	add	r3, r3, #832	; 0x340
    1db8:	str	r3, [fp, #-204]	; 0xffffff34
    1dbc:	sub	r3, fp, #68	; 0x44
    1dc0:	mov	r2, #32
    1dc4:	mov	r1, #0
    1dc8:	mov	r0, r3
    1dcc:	bl	0 <memset>
    1dd0:	ldr	r3, [fp, #-16]
    1dd4:	ldr	r3, [r3, #8]
    1dd8:	and	r3, r3, #2048	; 0x800
    1ddc:	cmp	r3, #0
    1de0:	movne	r3, #1
    1de4:	moveq	r3, #0
    1de8:	uxtb	r3, r3
    1dec:	mov	r2, r3
    1df0:	sub	r3, fp, #216	; 0xd8
    1df4:	sub	r1, fp, #68	; 0x44
    1df8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1dfc:	bl	f64 <set_start_bits>
    1e00:	str	r0, [fp, #-24]	; 0xffffffe8
    1e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e08:	cmp	r3, #1
    1e0c:	moveq	r3, #1
    1e10:	movne	r3, #0
    1e14:	uxtb	r3, r3
    1e18:	str	r3, [fp, #-8]
    1e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e20:	cmp	r3, #3
    1e24:	bne	1e40 <coda_pcre_study+0x210>
    1e28:	ldr	r2, [fp, #-232]	; 0xffffff18
    1e2c:	movw	r3, #0
    1e30:	movt	r3, #0
    1e34:	str	r3, [r2]
    1e38:	mov	r3, #0
    1e3c:	b	2014 <coda_pcre_study+0x3e4>
    1e40:	ldr	r3, [fp, #-16]
    1e44:	ldr	r3, [r3, #8]
    1e48:	mov	r2, r3
    1e4c:	sub	r3, fp, #36	; 0x24
    1e50:	str	r3, [sp, #4]
    1e54:	mov	r3, #0
    1e58:	str	r3, [sp]
    1e5c:	mov	r3, r2
    1e60:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e64:	ldr	r1, [fp, #-20]	; 0xffffffec
    1e68:	ldr	r0, [fp, #-16]
    1e6c:	bl	0 <find_minlength>
    1e70:	str	r0, [fp, #-28]	; 0xffffffe4
    1e74:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1e78:	cmn	r3, #3
    1e7c:	beq	1ea4 <coda_pcre_study+0x274>
    1e80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1e84:	cmn	r3, #2
    1e88:	bne	1ebc <coda_pcre_study+0x28c>
    1e8c:	ldr	r2, [fp, #-232]	; 0xffffff18
    1e90:	movw	r3, #0
    1e94:	movt	r3, #0
    1e98:	str	r3, [r2]
    1e9c:	mov	r3, #0
    1ea0:	b	2014 <coda_pcre_study+0x3e4>
    1ea4:	ldr	r2, [fp, #-232]	; 0xffffff18
    1ea8:	movw	r3, #0
    1eac:	movt	r3, #0
    1eb0:	str	r3, [r2]
    1eb4:	mov	r3, #0
    1eb8:	b	2014 <coda_pcre_study+0x3e4>
    1ebc:	ldr	r3, [fp, #-8]
    1ec0:	cmp	r3, #0
    1ec4:	bne	1ee4 <coda_pcre_study+0x2b4>
    1ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ecc:	cmp	r3, #0
    1ed0:	bgt	1ee4 <coda_pcre_study+0x2b4>
    1ed4:	ldr	r3, [fp, #-228]	; 0xffffff1c
    1ed8:	and	r3, r3, #8
    1edc:	cmp	r3, #0
    1ee0:	beq	2010 <coda_pcre_study+0x3e0>
    1ee4:	movw	r3, #0
    1ee8:	movt	r3, #0
    1eec:	ldr	r3, [r3]
    1ef0:	mov	r0, #76	; 0x4c
    1ef4:	blx	r3
    1ef8:	str	r0, [fp, #-12]
    1efc:	ldr	r3, [fp, #-12]
    1f00:	cmp	r3, #0
    1f04:	bne	1f20 <coda_pcre_study+0x2f0>
    1f08:	ldr	r2, [fp, #-232]	; 0xffffff18
    1f0c:	movw	r3, #0
    1f10:	movt	r3, #0
    1f14:	str	r3, [r2]
    1f18:	mov	r3, #0
    1f1c:	b	2014 <coda_pcre_study+0x3e4>
    1f20:	ldr	r3, [fp, #-12]
    1f24:	add	r3, r3, #32
    1f28:	str	r3, [fp, #-32]	; 0xffffffe0
    1f2c:	ldr	r3, [fp, #-12]
    1f30:	mov	r2, #1
    1f34:	str	r2, [r3]
    1f38:	ldr	r3, [fp, #-12]
    1f3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1f40:	str	r2, [r3, #4]
    1f44:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f48:	mov	r2, #44	; 0x2c
    1f4c:	str	r2, [r3]
    1f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f54:	mov	r2, #0
    1f58:	str	r2, [r3, #4]
    1f5c:	ldr	r3, [fp, #-8]
    1f60:	cmp	r3, #0
    1f64:	beq	1fbc <coda_pcre_study+0x38c>
    1f68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f6c:	ldr	r3, [r3, #4]
    1f70:	orr	r2, r3, #1
    1f74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f78:	str	r2, [r3, #4]
    1f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f80:	add	r3, r3, #8
    1f84:	sub	r2, fp, #68	; 0x44
    1f88:	ldrd	r0, [r2]
    1f8c:	str	r0, [r3]
    1f90:	str	r1, [r3, #4]
    1f94:	ldrd	r0, [r2, #8]
    1f98:	str	r0, [r3, #8]
    1f9c:	str	r1, [r3, #12]
    1fa0:	ldrd	r0, [r2, #16]
    1fa4:	str	r0, [r3, #16]
    1fa8:	str	r1, [r3, #20]
    1fac:	ldrd	r0, [r2, #24]
    1fb0:	str	r0, [r3, #24]
    1fb4:	str	r1, [r3, #28]
    1fb8:	b	1fd4 <coda_pcre_study+0x3a4>
    1fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1fc0:	add	r3, r3, #8
    1fc4:	mov	r2, #32
    1fc8:	mov	r1, #0
    1fcc:	mov	r0, r3
    1fd0:	bl	0 <memset>
    1fd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1fd8:	cmp	r3, #0
    1fdc:	ble	2004 <coda_pcre_study+0x3d4>
    1fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1fe4:	ldr	r3, [r3, #4]
    1fe8:	orr	r2, r3, #2
    1fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ff0:	str	r2, [r3, #4]
    1ff4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1ff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ffc:	str	r2, [r3, #40]	; 0x28
    2000:	b	2010 <coda_pcre_study+0x3e0>
    2004:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2008:	mov	r2, #0
    200c:	str	r2, [r3, #40]	; 0x28
    2010:	ldr	r3, [fp, #-12]
    2014:	mov	r0, r3
    2018:	sub	sp, fp, #4
    201c:	ldr	fp, [sp]
    2020:	add	sp, sp, #4
    2024:	pop	{pc}		; (ldr pc, [sp], #4)

00002028 <coda_pcre_free_study>:
    2028:	str	fp, [sp, #-8]!
    202c:	str	lr, [sp, #4]
    2030:	add	fp, sp, #4
    2034:	sub	sp, sp, #8
    2038:	str	r0, [fp, #-8]
    203c:	ldr	r3, [fp, #-8]
    2040:	cmp	r3, #0
    2044:	beq	2060 <coda_pcre_free_study+0x38>
    2048:	movw	r3, #0
    204c:	movt	r3, #0
    2050:	ldr	r3, [r3]
    2054:	ldr	r0, [fp, #-8]
    2058:	blx	r3
    205c:	b	2064 <coda_pcre_free_study+0x3c>
    2060:	nop	{0}
    2064:	sub	sp, fp, #4
    2068:	ldr	fp, [sp]
    206c:	add	sp, sp, #4
    2070:	pop	{pc}		; (ldr pc, [sp], #4)
