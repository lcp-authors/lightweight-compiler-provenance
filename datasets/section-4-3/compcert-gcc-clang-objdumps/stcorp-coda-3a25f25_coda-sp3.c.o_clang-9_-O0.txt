
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-sp3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_sp3_done>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #32
       c:	ldr	r0, [pc, #236]	; 100 <coda_sp3_done+0x100>
      10:	str	r0, [fp, #-8]
      14:	bl	0 <__aeabi_read_tp>
      18:	ldr	r1, [fp, #-8]
      1c:	ldr	r0, [r0, r1]
      20:	movw	r1, #0
      24:	cmp	r0, r1
      28:	bne	30 <coda_sp3_done+0x30>
      2c:	b	f8 <coda_sp3_done+0xf8>
      30:	movw	r0, #0
      34:	str	r0, [fp, #-4]
      38:	ldr	r0, [fp, #-4]
      3c:	cmp	r0, #75	; 0x4b
      40:	bge	c8 <coda_sp3_done+0xc8>
      44:	ldr	r0, [pc, #180]	; 100 <coda_sp3_done+0x100>
      48:	str	r0, [fp, #-12]
      4c:	bl	0 <__aeabi_read_tp>
      50:	ldr	r1, [fp, #-12]
      54:	ldr	r0, [r0, r1]
      58:	ldr	r1, [fp, #-4]
      5c:	add	r0, r0, r1, lsl #2
      60:	ldr	r0, [r0]
      64:	movw	r1, #0
      68:	cmp	r0, r1
      6c:	beq	b4 <coda_sp3_done+0xb4>
      70:	ldr	r0, [pc, #136]	; 100 <coda_sp3_done+0x100>
      74:	str	r0, [sp, #16]
      78:	bl	0 <__aeabi_read_tp>
      7c:	ldr	r1, [sp, #16]
      80:	ldr	r2, [r0, r1]
      84:	ldr	r3, [fp, #-4]
      88:	ldr	r2, [r2, r3, lsl #2]
      8c:	str	r0, [sp, #12]
      90:	mov	r0, r2
      94:	bl	0 <coda_type_release>
      98:	ldr	r0, [sp, #12]
      9c:	ldr	r1, [sp, #16]
      a0:	ldr	r2, [r0, r1]
      a4:	ldr	r3, [fp, #-4]
      a8:	add	r2, r2, r3, lsl #2
      ac:	movw	r3, #0
      b0:	str	r3, [r2]
      b4:	b	b8 <coda_sp3_done+0xb8>
      b8:	ldr	r0, [fp, #-4]
      bc:	add	r0, r0, #1
      c0:	str	r0, [fp, #-4]
      c4:	b	38 <coda_sp3_done+0x38>
      c8:	ldr	r0, [pc, #48]	; 100 <coda_sp3_done+0x100>
      cc:	str	r0, [sp, #8]
      d0:	bl	0 <__aeabi_read_tp>
      d4:	ldr	r1, [sp, #8]
      d8:	ldr	r2, [r0, r1]
      dc:	str	r0, [sp, #4]
      e0:	mov	r0, r2
      e4:	bl	0 <free>
      e8:	mov	r0, #0
      ec:	ldr	r1, [sp, #4]
      f0:	ldr	r2, [sp, #8]
      f4:	str	r0, [r1, r2]
      f8:	mov	sp, fp
      fc:	pop	{fp, pc}
     100:	.word	0x00000000

00000104 <coda_sp3_reopen>:
     104:	push	{fp, lr}
     108:	mov	fp, sp
     10c:	sub	sp, sp, #24
     110:	str	r0, [fp, #-8]
     114:	bl	2c4 <sp3_init>
     118:	cmp	r0, #0
     11c:	beq	138 <coda_sp3_reopen+0x34>
     120:	ldr	r0, [fp, #-8]
     124:	ldr	r0, [r0]
     128:	bl	0 <coda_close>
     12c:	mvn	r1, #0
     130:	str	r1, [fp, #-4]
     134:	b	2b8 <coda_sp3_reopen+0x1b4>
     138:	movw	r0, #56	; 0x38
     13c:	bl	0 <malloc>
     140:	str	r0, [sp, #12]
     144:	ldr	r0, [sp, #12]
     148:	movw	r1, #0
     14c:	cmp	r0, r1
     150:	bne	190 <coda_sp3_reopen+0x8c>
     154:	mvn	r0, #0
     158:	movw	r1, #0
     15c:	movt	r1, #0
     160:	movw	r2, #56	; 0x38
     164:	movw	r3, #0
     168:	movt	r3, #0
     16c:	movw	ip, #1946	; 0x79a
     170:	str	ip, [sp]
     174:	bl	0 <coda_set_error>
     178:	ldr	r0, [fp, #-8]
     17c:	ldr	r0, [r0]
     180:	bl	0 <coda_close>
     184:	mvn	r1, #0
     188:	str	r1, [fp, #-4]
     18c:	b	2b8 <coda_sp3_reopen+0x1b4>
     190:	ldr	r0, [sp, #12]
     194:	mov	r1, #0
     198:	str	r1, [r0]
     19c:	ldr	r0, [fp, #-8]
     1a0:	ldr	r0, [r0]
     1a4:	ldr	r2, [r0, #8]
     1a8:	ldr	r0, [r0, #12]
     1ac:	ldr	r3, [sp, #12]
     1b0:	str	r0, [r3, #12]
     1b4:	str	r2, [r3, #8]
     1b8:	ldr	r0, [sp, #12]
     1bc:	mov	r2, #9
     1c0:	str	r2, [r0, #16]
     1c4:	ldr	r0, [sp, #12]
     1c8:	str	r1, [r0, #20]
     1cc:	ldr	r0, [sp, #12]
     1d0:	str	r1, [r0, #24]
     1d4:	ldr	r0, [sp, #12]
     1d8:	str	r1, [r0, #28]
     1dc:	ldr	r0, [sp, #12]
     1e0:	str	r1, [r0, #32]
     1e4:	ldr	r0, [sp, #12]
     1e8:	str	r1, [r0, #44]	; 0x2c
     1ec:	str	r1, [r0, #40]	; 0x28
     1f0:	ldr	r0, [sp, #12]
     1f4:	movw	r1, #0
     1f8:	str	r1, [r0, #48]	; 0x30
     1fc:	ldr	r0, [fp, #-8]
     200:	ldr	r0, [r0]
     204:	ldr	r0, [r0]
     208:	bl	0 <strdup>
     20c:	ldr	r1, [sp, #12]
     210:	str	r0, [r1]
     214:	ldr	r0, [sp, #12]
     218:	ldr	r0, [r0]
     21c:	movw	r1, #0
     220:	cmp	r0, r1
     224:	bne	26c <coda_sp3_reopen+0x168>
     228:	mvn	r0, #0
     22c:	movw	r1, #0
     230:	movt	r1, #0
     234:	movw	r2, #0
     238:	movt	r2, #0
     23c:	movw	r3, #1964	; 0x7ac
     240:	bl	0 <coda_set_error>
     244:	ldr	r0, [sp, #12]
     248:	bl	0 <coda_close>
     24c:	ldr	r1, [fp, #-8]
     250:	ldr	r1, [r1]
     254:	str	r0, [sp, #8]
     258:	mov	r0, r1
     25c:	bl	0 <coda_close>
     260:	mvn	r1, #0
     264:	str	r1, [fp, #-4]
     268:	b	2b8 <coda_sp3_reopen+0x1b4>
     26c:	ldr	r0, [fp, #-8]
     270:	ldr	r0, [r0]
     274:	bl	0 <coda_close>
     278:	ldr	r1, [sp, #12]
     27c:	str	r0, [sp, #4]
     280:	mov	r0, r1
     284:	bl	3e40 <read_file>
     288:	cmp	r0, #0
     28c:	beq	2a4 <coda_sp3_reopen+0x1a0>
     290:	ldr	r0, [sp, #12]
     294:	bl	0 <coda_close>
     298:	mvn	r1, #0
     29c:	str	r1, [fp, #-4]
     2a0:	b	2b8 <coda_sp3_reopen+0x1b4>
     2a4:	ldr	r0, [sp, #12]
     2a8:	ldr	r1, [fp, #-8]
     2ac:	str	r0, [r1]
     2b0:	movw	r0, #0
     2b4:	str	r0, [fp, #-4]
     2b8:	ldr	r0, [fp, #-4]
     2bc:	mov	sp, fp
     2c0:	pop	{fp, pc}

000002c4 <sp3_init>:
     2c4:	push	{r4, r5, fp, lr}
     2c8:	add	fp, sp, #8
     2cc:	sub	sp, sp, #1680	; 0x690
     2d0:	ldr	r0, [pc, #216]	; 3b0 <sp3_init+0xec>
     2d4:	str	r0, [fp, #-32]	; 0xffffffe0
     2d8:	bl	0 <__aeabi_read_tp>
     2dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
     2e0:	ldr	r0, [r0, r1]
     2e4:	movw	r1, #0
     2e8:	cmp	r0, r1
     2ec:	beq	2fc <sp3_init+0x38>
     2f0:	movw	r0, #0
     2f4:	str	r0, [fp, #-12]
     2f8:	b	3e34 <sp3_init+0x3b70>
     2fc:	mov	r0, #1
     300:	str	r0, [fp, #-16]
     304:	mov	r0, #300	; 0x12c
     308:	bl	0 <malloc>
     30c:	ldr	r1, [pc, #156]	; 3b0 <sp3_init+0xec>
     310:	str	r0, [fp, #-36]	; 0xffffffdc
     314:	str	r1, [fp, #-40]	; 0xffffffd8
     318:	bl	0 <__aeabi_read_tp>
     31c:	ldr	r1, [fp, #-36]	; 0xffffffdc
     320:	ldr	r2, [fp, #-40]	; 0xffffffd8
     324:	str	r1, [r0, r2]
     328:	ldr	r0, [r0, r2]
     32c:	movw	r3, #0
     330:	cmp	r0, r3
     334:	bne	368 <sp3_init+0xa4>
     338:	mvn	r0, #0
     33c:	movw	r1, #0
     340:	movt	r1, #0
     344:	movw	r2, #300	; 0x12c
     348:	movw	r3, #0
     34c:	movt	r3, #0
     350:	movw	ip, #230	; 0xe6
     354:	str	ip, [sp]
     358:	bl	0 <coda_set_error>
     35c:	mvn	r0, #0
     360:	str	r0, [fp, #-12]
     364:	b	3e34 <sp3_init+0x3b70>
     368:	movw	r0, #0
     36c:	str	r0, [fp, #-28]	; 0xffffffe4
     370:	ldr	r0, [fp, #-28]	; 0xffffffe4
     374:	cmp	r0, #75	; 0x4b
     378:	bge	3b4 <sp3_init+0xf0>
     37c:	ldr	r0, [pc, #44]	; 3b0 <sp3_init+0xec>
     380:	str	r0, [fp, #-44]	; 0xffffffd4
     384:	bl	0 <__aeabi_read_tp>
     388:	ldr	r1, [fp, #-44]	; 0xffffffd4
     38c:	ldr	r0, [r0, r1]
     390:	ldr	r1, [fp, #-28]	; 0xffffffe4
     394:	add	r0, r0, r1, lsl #2
     398:	movw	r1, #0
     39c:	str	r1, [r0]
     3a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3a4:	add	r0, r0, #1
     3a8:	str	r0, [fp, #-28]	; 0xffffffe4
     3ac:	b	370 <sp3_init+0xac>
     3b0:	.word	0x00000000
     3b4:	mov	r0, #9
     3b8:	str	r0, [fp, #-48]	; 0xffffffd0
     3bc:	bl	0 <coda_type_text_new>
     3c0:	ldr	r1, [pc, #-24]	; 3b0 <sp3_init+0xec>
     3c4:	str	r0, [fp, #-52]	; 0xffffffcc
     3c8:	str	r1, [fp, #-56]	; 0xffffffc8
     3cc:	bl	0 <__aeabi_read_tp>
     3d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
     3d4:	ldr	r2, [r0, r1]
     3d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     3dc:	str	r3, [r2]
     3e0:	ldr	r2, [r0, r1]
     3e4:	ldr	r2, [r2]
     3e8:	mov	ip, #1
     3ec:	mov	lr, #0
     3f0:	str	r0, [fp, #-60]	; 0xffffffc4
     3f4:	mov	r0, r2
     3f8:	mov	r2, ip
     3fc:	mov	r3, lr
     400:	str	ip, [fp, #-64]	; 0xffffffc0
     404:	str	lr, [fp, #-68]	; 0xffffffbc
     408:	bl	0 <coda_type_set_byte_size>
     40c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     410:	ldr	r2, [fp, #-56]	; 0xffffffc8
     414:	ldr	r3, [r1, r2]
     418:	ldr	r3, [r3]
     41c:	movw	r1, #0
     420:	movt	r1, #0
     424:	str	r0, [fp, #-72]	; 0xffffffb8
     428:	mov	r0, r3
     42c:	bl	0 <coda_type_set_description>
     430:	ldr	r1, [fp, #-48]	; 0xffffffd0
     434:	str	r0, [fp, #-76]	; 0xffffffb4
     438:	mov	r0, r1
     43c:	bl	0 <coda_type_text_new>
     440:	ldr	r1, [fp, #-60]	; 0xffffffc4
     444:	ldr	r2, [fp, #-56]	; 0xffffffc8
     448:	ldr	r3, [r1, r2]
     44c:	str	r0, [r3, #4]
     450:	ldr	r0, [fp, #-68]	; 0xffffffbc
     454:	str	r0, [fp, #-24]	; 0xffffffe8
     458:	movw	r3, #0
     45c:	movt	r3, #0
     460:	sub	ip, fp, #24
     464:	mov	r0, r3
     468:	mov	r1, ip
     46c:	str	r3, [fp, #-80]	; 0xffffffb0
     470:	str	ip, [fp, #-84]	; 0xffffffac
     474:	bl	0 <coda_expression_from_string>
     478:	ldr	r1, [fp, #-24]	; 0xffffffe8
     47c:	ldr	r2, [fp, #-48]	; 0xffffffd0
     480:	str	r0, [fp, #-88]	; 0xffffffa8
     484:	mov	r0, r2
     488:	bl	0 <coda_type_time_new>
     48c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     490:	ldr	r2, [fp, #-56]	; 0xffffffc8
     494:	ldr	r3, [r1, r2]
     498:	str	r0, [r3, #8]
     49c:	ldr	r0, [r1, r2]
     4a0:	ldr	r1, [r0, #4]
     4a4:	ldr	r0, [r0, #8]
     4a8:	bl	0 <coda_type_time_set_base_type>
     4ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
     4b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     4b4:	ldr	r3, [r1, r2]
     4b8:	ldr	r3, [r3, #8]
     4bc:	movw	r1, #0
     4c0:	movt	r1, #0
     4c4:	str	r0, [fp, #-92]	; 0xffffffa4
     4c8:	mov	r0, r3
     4cc:	bl	0 <coda_type_set_description>
     4d0:	mov	r1, #2
     4d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
     4d8:	str	r0, [fp, #-96]	; 0xffffffa0
     4dc:	mov	r0, r2
     4e0:	str	r1, [fp, #-100]	; 0xffffff9c
     4e4:	bl	0 <coda_type_number_new>
     4e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     4ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
     4f0:	ldr	r3, [r1, r2]
     4f4:	str	r0, [r3, #12]
     4f8:	ldr	r0, [r1, r2]
     4fc:	ldr	r0, [r0, #12]
     500:	ldr	r1, [fp, #-16]
     504:	bl	0 <coda_type_number_set_endianness>
     508:	ldr	r1, [fp, #-60]	; 0xffffffc4
     50c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     510:	ldr	r3, [r1, r2]
     514:	ldr	r3, [r3, #12]
     518:	mov	ip, #4
     51c:	str	r0, [fp, #-104]	; 0xffffff98
     520:	mov	r0, r3
     524:	mov	r1, ip
     528:	str	ip, [fp, #-108]	; 0xffffff94
     52c:	bl	0 <coda_type_set_read_type>
     530:	ldr	r1, [fp, #-60]	; 0xffffffc4
     534:	ldr	r2, [fp, #-56]	; 0xffffffc8
     538:	ldr	r3, [r1, r2]
     53c:	ldr	r3, [r3, #12]
     540:	mov	ip, #32
     544:	str	r0, [fp, #-112]	; 0xffffff90
     548:	mov	r0, r3
     54c:	mov	r2, ip
     550:	ldr	r3, [fp, #-68]	; 0xffffffbc
     554:	str	ip, [fp, #-116]	; 0xffffff8c
     558:	bl	0 <coda_type_set_bit_size>
     55c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     560:	ldr	r2, [fp, #-56]	; 0xffffffc8
     564:	ldr	r3, [r1, r2]
     568:	ldr	r3, [r3, #12]
     56c:	movw	r1, #0
     570:	movt	r1, #0
     574:	str	r0, [fp, #-120]	; 0xffffff88
     578:	mov	r0, r3
     57c:	bl	0 <coda_type_set_description>
     580:	ldr	r1, [fp, #-48]	; 0xffffffd0
     584:	str	r0, [fp, #-124]	; 0xffffff84
     588:	mov	r0, r1
     58c:	bl	0 <coda_type_text_new>
     590:	ldr	r1, [fp, #-60]	; 0xffffffc4
     594:	ldr	r2, [fp, #-56]	; 0xffffffc8
     598:	ldr	r3, [r1, r2]
     59c:	str	r0, [r3, #16]
     5a0:	ldr	r0, [r1, r2]
     5a4:	ldr	r0, [r0, #16]
     5a8:	mov	r3, #5
     5ac:	mov	r2, r3
     5b0:	ldr	ip, [fp, #-68]	; 0xffffffbc
     5b4:	str	r3, [fp, #-128]	; 0xffffff80
     5b8:	mov	r3, ip
     5bc:	bl	0 <coda_type_set_byte_size>
     5c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     5c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     5c8:	ldr	r3, [r1, r2]
     5cc:	ldr	r3, [r3, #16]
     5d0:	movw	r1, #0
     5d4:	movt	r1, #0
     5d8:	str	r0, [fp, #-132]	; 0xffffff7c
     5dc:	mov	r0, r3
     5e0:	bl	0 <coda_type_set_description>
     5e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     5e8:	str	r0, [fp, #-136]	; 0xffffff78
     5ec:	mov	r0, r1
     5f0:	bl	0 <coda_type_text_new>
     5f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     5f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     5fc:	ldr	r3, [r1, r2]
     600:	str	r0, [r3, #20]
     604:	ldr	r0, [r1, r2]
     608:	ldr	r0, [r0, #20]
     60c:	ldr	r2, [fp, #-128]	; 0xffffff80
     610:	ldr	r3, [fp, #-68]	; 0xffffffbc
     614:	bl	0 <coda_type_set_byte_size>
     618:	ldr	r1, [fp, #-60]	; 0xffffffc4
     61c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     620:	ldr	r3, [r1, r2]
     624:	ldr	r3, [r3, #20]
     628:	movw	r1, #0
     62c:	movt	r1, #0
     630:	str	r0, [fp, #-140]	; 0xffffff74
     634:	mov	r0, r3
     638:	bl	0 <coda_type_set_description>
     63c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     640:	str	r0, [fp, #-144]	; 0xffffff70
     644:	mov	r0, r1
     648:	bl	0 <coda_type_text_new>
     64c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     650:	ldr	r2, [fp, #-56]	; 0xffffffc8
     654:	ldr	r3, [r1, r2]
     658:	str	r0, [r3, #24]
     65c:	ldr	r0, [r1, r2]
     660:	ldr	r0, [r0, #24]
     664:	mov	r3, #3
     668:	mov	r2, r3
     66c:	ldr	ip, [fp, #-68]	; 0xffffffbc
     670:	str	r3, [fp, #-148]	; 0xffffff6c
     674:	mov	r3, ip
     678:	bl	0 <coda_type_set_byte_size>
     67c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     680:	ldr	r2, [fp, #-56]	; 0xffffffc8
     684:	ldr	r3, [r1, r2]
     688:	ldr	r3, [r3, #24]
     68c:	movw	r1, #0
     690:	movt	r1, #0
     694:	str	r0, [fp, #-152]	; 0xffffff68
     698:	mov	r0, r3
     69c:	bl	0 <coda_type_set_description>
     6a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     6a4:	str	r0, [fp, #-156]	; 0xffffff64
     6a8:	mov	r0, r1
     6ac:	bl	0 <coda_type_text_new>
     6b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     6b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     6b8:	ldr	r3, [r1, r2]
     6bc:	str	r0, [r3, #28]
     6c0:	ldr	r0, [r1, r2]
     6c4:	ldr	r0, [r0, #28]
     6c8:	ldr	r2, [fp, #-108]	; 0xffffff94
     6cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     6d0:	bl	0 <coda_type_set_byte_size>
     6d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     6d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     6dc:	ldr	r3, [r1, r2]
     6e0:	ldr	r3, [r3, #28]
     6e4:	movw	r1, #0
     6e8:	movt	r1, #0
     6ec:	str	r0, [fp, #-160]	; 0xffffff60
     6f0:	mov	r0, r3
     6f4:	bl	0 <coda_type_set_description>
     6f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     6fc:	str	r0, [fp, #-164]	; 0xffffff5c
     700:	mov	r0, r1
     704:	ldr	r1, [fp, #-100]	; 0xffffff9c
     708:	bl	0 <coda_type_number_new>
     70c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     710:	ldr	r2, [fp, #-56]	; 0xffffffc8
     714:	ldr	r3, [r1, r2]
     718:	str	r0, [r3, #32]
     71c:	ldr	r0, [r1, r2]
     720:	ldr	r0, [r0, #32]
     724:	ldr	r1, [fp, #-16]
     728:	bl	0 <coda_type_number_set_endianness>
     72c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     730:	ldr	r2, [fp, #-56]	; 0xffffffc8
     734:	ldr	r3, [r1, r2]
     738:	ldr	r3, [r3, #32]
     73c:	str	r0, [fp, #-168]	; 0xffffff58
     740:	mov	r0, r3
     744:	ldr	r1, [fp, #-100]	; 0xffffff9c
     748:	bl	0 <coda_type_set_read_type>
     74c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     750:	ldr	r2, [fp, #-56]	; 0xffffffc8
     754:	ldr	r3, [r1, r2]
     758:	ldr	r3, [r3, #32]
     75c:	mov	ip, #16
     760:	str	r0, [fp, #-172]	; 0xffffff54
     764:	mov	r0, r3
     768:	mov	r2, ip
     76c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     770:	str	ip, [fp, #-176]	; 0xffffff50
     774:	bl	0 <coda_type_set_bit_size>
     778:	ldr	r1, [fp, #-60]	; 0xffffffc4
     77c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     780:	ldr	r3, [r1, r2]
     784:	ldr	r3, [r3, #32]
     788:	movw	r1, #0
     78c:	movt	r1, #0
     790:	str	r0, [fp, #-180]	; 0xffffff4c
     794:	mov	r0, r3
     798:	bl	0 <coda_type_set_description>
     79c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     7a0:	str	r0, [fp, #-184]	; 0xffffff48
     7a4:	mov	r0, r1
     7a8:	ldr	r1, [fp, #-148]	; 0xffffff6c
     7ac:	bl	0 <coda_type_number_new>
     7b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     7b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     7b8:	ldr	r3, [r1, r2]
     7bc:	str	r0, [r3, #36]	; 0x24
     7c0:	ldr	r0, [r1, r2]
     7c4:	ldr	r0, [r0, #36]	; 0x24
     7c8:	ldr	r1, [fp, #-16]
     7cc:	bl	0 <coda_type_number_set_endianness>
     7d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     7d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     7d8:	ldr	r3, [r1, r2]
     7dc:	ldr	r3, [r3, #36]	; 0x24
     7e0:	mov	ip, #64	; 0x40
     7e4:	str	r0, [fp, #-188]	; 0xffffff44
     7e8:	mov	r0, r3
     7ec:	mov	r2, ip
     7f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
     7f4:	str	ip, [fp, #-192]	; 0xffffff40
     7f8:	bl	0 <coda_type_set_bit_size>
     7fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     800:	ldr	r2, [fp, #-56]	; 0xffffffc8
     804:	ldr	r3, [r1, r2]
     808:	ldr	r3, [r3, #36]	; 0x24
     80c:	movw	r1, #0
     810:	movt	r1, #0
     814:	str	r0, [fp, #-196]	; 0xffffff3c
     818:	mov	r0, r3
     81c:	bl	0 <coda_type_set_description>
     820:	ldr	r1, [fp, #-48]	; 0xffffffd0
     824:	str	r0, [fp, #-200]	; 0xffffff38
     828:	mov	r0, r1
     82c:	ldr	r1, [fp, #-148]	; 0xffffff6c
     830:	bl	0 <coda_type_number_new>
     834:	ldr	r1, [fp, #-60]	; 0xffffffc4
     838:	ldr	r2, [fp, #-56]	; 0xffffffc8
     83c:	ldr	r3, [r1, r2]
     840:	str	r0, [r3, #40]	; 0x28
     844:	ldr	r0, [r1, r2]
     848:	ldr	r0, [r0, #40]	; 0x28
     84c:	ldr	r1, [fp, #-16]
     850:	bl	0 <coda_type_number_set_endianness>
     854:	ldr	r1, [fp, #-60]	; 0xffffffc4
     858:	ldr	r2, [fp, #-56]	; 0xffffffc8
     85c:	ldr	r3, [r1, r2]
     860:	ldr	r3, [r3, #40]	; 0x28
     864:	str	r0, [fp, #-204]	; 0xffffff34
     868:	mov	r0, r3
     86c:	ldr	r2, [fp, #-192]	; 0xffffff40
     870:	ldr	r3, [fp, #-68]	; 0xffffffbc
     874:	bl	0 <coda_type_set_bit_size>
     878:	ldr	r1, [fp, #-60]	; 0xffffffc4
     87c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     880:	ldr	r3, [r1, r2]
     884:	ldr	r3, [r3, #40]	; 0x28
     888:	movw	r1, #0
     88c:	movt	r1, #0
     890:	str	r0, [fp, #-208]	; 0xffffff30
     894:	mov	r0, r3
     898:	bl	0 <coda_type_set_description>
     89c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     8a0:	str	r0, [fp, #-212]	; 0xffffff2c
     8a4:	mov	r0, r1
     8a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
     8ac:	bl	0 <coda_type_number_new>
     8b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     8b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     8b8:	ldr	r3, [r1, r2]
     8bc:	str	r0, [r3, #44]	; 0x2c
     8c0:	ldr	r0, [r1, r2]
     8c4:	ldr	r0, [r0, #44]	; 0x2c
     8c8:	ldr	r1, [fp, #-16]
     8cc:	bl	0 <coda_type_number_set_endianness>
     8d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     8d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     8d8:	ldr	r3, [r1, r2]
     8dc:	ldr	r3, [r3, #44]	; 0x2c
     8e0:	str	r0, [fp, #-216]	; 0xffffff28
     8e4:	mov	r0, r3
     8e8:	ldr	r1, [fp, #-108]	; 0xffffff94
     8ec:	bl	0 <coda_type_set_read_type>
     8f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     8f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     8f8:	ldr	r3, [r1, r2]
     8fc:	ldr	r3, [r3, #44]	; 0x2c
     900:	str	r0, [fp, #-220]	; 0xffffff24
     904:	mov	r0, r3
     908:	ldr	r2, [fp, #-116]	; 0xffffff8c
     90c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     910:	bl	0 <coda_type_set_bit_size>
     914:	ldr	r1, [fp, #-60]	; 0xffffffc4
     918:	ldr	r2, [fp, #-56]	; 0xffffffc8
     91c:	ldr	r3, [r1, r2]
     920:	ldr	r3, [r3, #44]	; 0x2c
     924:	movw	r1, #0
     928:	movt	r1, #0
     92c:	str	r0, [fp, #-224]	; 0xffffff20
     930:	mov	r0, r3
     934:	bl	0 <coda_type_set_description>
     938:	ldr	r1, [fp, #-48]	; 0xffffffd0
     93c:	str	r0, [fp, #-228]	; 0xffffff1c
     940:	mov	r0, r1
     944:	ldr	r1, [fp, #-148]	; 0xffffff6c
     948:	bl	0 <coda_type_number_new>
     94c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     950:	ldr	r2, [fp, #-56]	; 0xffffffc8
     954:	ldr	r3, [r1, r2]
     958:	str	r0, [r3, #48]	; 0x30
     95c:	ldr	r0, [r1, r2]
     960:	ldr	r0, [r0, #48]	; 0x30
     964:	ldr	r1, [fp, #-16]
     968:	bl	0 <coda_type_number_set_endianness>
     96c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     970:	ldr	r2, [fp, #-56]	; 0xffffffc8
     974:	ldr	r3, [r1, r2]
     978:	ldr	r3, [r3, #48]	; 0x30
     97c:	str	r0, [fp, #-232]	; 0xffffff18
     980:	mov	r0, r3
     984:	ldr	r2, [fp, #-192]	; 0xffffff40
     988:	ldr	r3, [fp, #-68]	; 0xffffffbc
     98c:	bl	0 <coda_type_set_bit_size>
     990:	ldr	r1, [fp, #-60]	; 0xffffffc4
     994:	ldr	r2, [fp, #-56]	; 0xffffffc8
     998:	ldr	r3, [r1, r2]
     99c:	ldr	r3, [r3, #48]	; 0x30
     9a0:	movw	r1, #0
     9a4:	movt	r1, #0
     9a8:	str	r0, [fp, #-236]	; 0xffffff14
     9ac:	mov	r0, r3
     9b0:	bl	0 <coda_type_set_description>
     9b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     9b8:	str	r0, [fp, #-240]	; 0xffffff10
     9bc:	mov	r0, r1
     9c0:	ldr	r1, [fp, #-100]	; 0xffffff9c
     9c4:	bl	0 <coda_type_number_new>
     9c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     9cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     9d0:	ldr	r3, [r1, r2]
     9d4:	str	r0, [r3, #52]	; 0x34
     9d8:	ldr	r0, [r1, r2]
     9dc:	ldr	r0, [r0, #52]	; 0x34
     9e0:	ldr	r1, [fp, #-16]
     9e4:	bl	0 <coda_type_number_set_endianness>
     9e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     9ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
     9f0:	ldr	r3, [r1, r2]
     9f4:	ldr	r3, [r3, #52]	; 0x34
     9f8:	str	r0, [fp, #-244]	; 0xffffff0c
     9fc:	mov	r0, r3
     a00:	ldr	r1, [fp, #-64]	; 0xffffffc0
     a04:	bl	0 <coda_type_set_read_type>
     a08:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a10:	ldr	r3, [r1, r2]
     a14:	ldr	r3, [r3, #52]	; 0x34
     a18:	mov	ip, #8
     a1c:	str	r0, [fp, #-248]	; 0xffffff08
     a20:	mov	r0, r3
     a24:	mov	r2, ip
     a28:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a2c:	str	ip, [fp, #-252]	; 0xffffff04
     a30:	bl	0 <coda_type_set_bit_size>
     a34:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a38:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a3c:	ldr	r3, [r1, r2]
     a40:	ldr	r3, [r3, #52]	; 0x34
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	str	r0, [fp, #-256]	; 0xffffff00
     a50:	mov	r0, r3
     a54:	bl	0 <coda_type_set_description>
     a58:	ldr	r1, [fp, #-48]	; 0xffffffd0
     a5c:	str	r0, [fp, #-260]	; 0xfffffefc
     a60:	mov	r0, r1
     a64:	bl	0 <coda_type_text_new>
     a68:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a70:	ldr	r3, [r1, r2]
     a74:	str	r0, [r3, #56]	; 0x38
     a78:	ldr	r0, [r1, r2]
     a7c:	ldr	r0, [r0, #56]	; 0x38
     a80:	ldr	r2, [fp, #-148]	; 0xffffff6c
     a84:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a88:	bl	0 <coda_type_set_byte_size>
     a8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     a90:	ldr	r2, [fp, #-56]	; 0xffffffc8
     a94:	ldr	r3, [r1, r2]
     a98:	ldr	r3, [r3, #56]	; 0x38
     a9c:	movw	r1, #0
     aa0:	movt	r1, #0
     aa4:	str	r0, [fp, #-264]	; 0xfffffef8
     aa8:	mov	r0, r3
     aac:	bl	0 <coda_type_set_description>
     ab0:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ab4:	str	r0, [fp, #-268]	; 0xfffffef4
     ab8:	mov	r0, r1
     abc:	ldr	r1, [fp, #-100]	; 0xffffff9c
     ac0:	bl	0 <coda_type_number_new>
     ac4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ac8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     acc:	ldr	r3, [r1, r2]
     ad0:	str	r0, [r3, #64]	; 0x40
     ad4:	ldr	r0, [r1, r2]
     ad8:	ldr	r0, [r0, #64]	; 0x40
     adc:	ldr	r1, [fp, #-16]
     ae0:	bl	0 <coda_type_number_set_endianness>
     ae4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ae8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     aec:	ldr	r3, [r1, r2]
     af0:	ldr	r3, [r3, #64]	; 0x40
     af4:	str	r0, [fp, #-272]	; 0xfffffef0
     af8:	mov	r0, r3
     afc:	ldr	r1, [fp, #-100]	; 0xffffff9c
     b00:	bl	0 <coda_type_set_read_type>
     b04:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b08:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b0c:	ldr	r3, [r1, r2]
     b10:	ldr	r3, [r3, #64]	; 0x40
     b14:	str	r0, [fp, #-276]	; 0xfffffeec
     b18:	mov	r0, r3
     b1c:	ldr	r2, [fp, #-176]	; 0xffffff50
     b20:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b24:	bl	0 <coda_type_set_bit_size>
     b28:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b30:	ldr	r3, [r1, r2]
     b34:	ldr	r3, [r3, #64]	; 0x40
     b38:	movw	r1, #0
     b3c:	movt	r1, #0
     b40:	str	r0, [fp, #-280]	; 0xfffffee8
     b44:	mov	r0, r3
     b48:	bl	0 <coda_type_set_description>
     b4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     b50:	str	r0, [fp, #-284]	; 0xfffffee4
     b54:	mov	r0, r1
     b58:	bl	0 <coda_type_text_new>
     b5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b60:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b64:	ldr	r3, [r1, r2]
     b68:	str	r0, [r3, #72]	; 0x48
     b6c:	ldr	r0, [r1, r2]
     b70:	ldr	r0, [r0, #72]	; 0x48
     b74:	ldr	r2, [fp, #-100]	; 0xffffff9c
     b78:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b7c:	bl	0 <coda_type_set_byte_size>
     b80:	ldr	r1, [fp, #-60]	; 0xffffffc4
     b84:	ldr	r2, [fp, #-56]	; 0xffffffc8
     b88:	ldr	r3, [r1, r2]
     b8c:	ldr	r3, [r3, #72]	; 0x48
     b90:	movw	r1, #0
     b94:	movt	r1, #0
     b98:	str	r0, [fp, #-288]	; 0xfffffee0
     b9c:	mov	r0, r3
     ba0:	bl	0 <coda_type_set_description>
     ba4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ba8:	str	r0, [fp, #-292]	; 0xfffffedc
     bac:	mov	r0, r1
     bb0:	bl	0 <coda_type_text_new>
     bb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     bb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     bbc:	ldr	r3, [r1, r2]
     bc0:	str	r0, [r3, #76]	; 0x4c
     bc4:	ldr	r0, [r1, r2]
     bc8:	ldr	r0, [r0, #76]	; 0x4c
     bcc:	ldr	r2, [fp, #-148]	; 0xffffff6c
     bd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
     bd4:	bl	0 <coda_type_set_byte_size>
     bd8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     bdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     be0:	ldr	r3, [r1, r2]
     be4:	ldr	r3, [r3, #76]	; 0x4c
     be8:	movw	r1, #0
     bec:	movt	r1, #0
     bf0:	str	r0, [fp, #-296]	; 0xfffffed8
     bf4:	mov	r0, r3
     bf8:	bl	0 <coda_type_set_description>
     bfc:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c00:	str	r0, [fp, #-300]	; 0xfffffed4
     c04:	mov	r0, r1
     c08:	ldr	r1, [fp, #-148]	; 0xffffff6c
     c0c:	bl	0 <coda_type_number_new>
     c10:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c14:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c18:	ldr	r3, [r1, r2]
     c1c:	str	r0, [r3, #80]	; 0x50
     c20:	ldr	r0, [r1, r2]
     c24:	ldr	r0, [r0, #80]	; 0x50
     c28:	ldr	r1, [fp, #-16]
     c2c:	bl	0 <coda_type_number_set_endianness>
     c30:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c34:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c38:	ldr	r3, [r1, r2]
     c3c:	ldr	r3, [r3, #80]	; 0x50
     c40:	str	r0, [fp, #-304]	; 0xfffffed0
     c44:	mov	r0, r3
     c48:	ldr	r2, [fp, #-192]	; 0xffffff40
     c4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     c50:	bl	0 <coda_type_set_bit_size>
     c54:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c58:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c5c:	ldr	r3, [r1, r2]
     c60:	ldr	r3, [r3, #80]	; 0x50
     c64:	movw	r1, #0
     c68:	movt	r1, #0
     c6c:	str	r0, [fp, #-308]	; 0xfffffecc
     c70:	mov	r0, r3
     c74:	bl	0 <coda_type_set_description>
     c78:	ldr	r1, [fp, #-48]	; 0xffffffd0
     c7c:	str	r0, [fp, #-312]	; 0xfffffec8
     c80:	mov	r0, r1
     c84:	ldr	r1, [fp, #-148]	; 0xffffff6c
     c88:	bl	0 <coda_type_number_new>
     c8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     c90:	ldr	r2, [fp, #-56]	; 0xffffffc8
     c94:	ldr	r3, [r1, r2]
     c98:	str	r0, [r3, #84]	; 0x54
     c9c:	ldr	r0, [r1, r2]
     ca0:	ldr	r0, [r0, #84]	; 0x54
     ca4:	ldr	r1, [fp, #-16]
     ca8:	bl	0 <coda_type_number_set_endianness>
     cac:	ldr	r1, [fp, #-60]	; 0xffffffc4
     cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     cb4:	ldr	r3, [r1, r2]
     cb8:	ldr	r3, [r3, #84]	; 0x54
     cbc:	str	r0, [fp, #-316]	; 0xfffffec4
     cc0:	mov	r0, r3
     cc4:	ldr	r2, [fp, #-192]	; 0xffffff40
     cc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     ccc:	bl	0 <coda_type_set_bit_size>
     cd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
     cd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
     cd8:	ldr	r3, [r1, r2]
     cdc:	ldr	r3, [r3, #84]	; 0x54
     ce0:	movw	r1, #0
     ce4:	movt	r1, #0
     ce8:	str	r0, [fp, #-320]	; 0xfffffec0
     cec:	mov	r0, r3
     cf0:	bl	0 <coda_type_set_description>
     cf4:	ldr	r1, [fp, #-48]	; 0xffffffd0
     cf8:	str	r0, [fp, #-324]	; 0xfffffebc
     cfc:	mov	r0, r1
     d00:	bl	0 <coda_type_text_new>
     d04:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d08:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d0c:	ldr	r3, [r1, r2]
     d10:	str	r0, [r3, #260]	; 0x104
     d14:	ldr	r0, [fp, #-68]	; 0xffffffbc
     d18:	str	r0, [fp, #-24]	; 0xffffffe8
     d1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
     d20:	ldr	r1, [fp, #-84]	; 0xffffffac
     d24:	bl	0 <coda_expression_from_string>
     d28:	ldr	r1, [fp, #-24]	; 0xffffffe8
     d2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
     d30:	str	r0, [fp, #-328]	; 0xfffffeb8
     d34:	mov	r0, r2
     d38:	bl	0 <coda_type_time_new>
     d3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d40:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d44:	ldr	r3, [r1, r2]
     d48:	str	r0, [r3, #264]	; 0x108
     d4c:	ldr	r0, [r1, r2]
     d50:	ldr	r1, [r0, #260]	; 0x104
     d54:	ldr	r0, [r0, #264]	; 0x108
     d58:	bl	0 <coda_type_time_set_base_type>
     d5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d60:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d64:	ldr	r3, [r1, r2]
     d68:	ldr	r3, [r3, #264]	; 0x108
     d6c:	movw	r1, #0
     d70:	movt	r1, #0
     d74:	str	r0, [fp, #-332]	; 0xfffffeb4
     d78:	mov	r0, r3
     d7c:	bl	0 <coda_type_set_description>
     d80:	ldr	r1, [fp, #-48]	; 0xffffffd0
     d84:	str	r0, [fp, #-336]	; 0xfffffeb0
     d88:	mov	r0, r1
     d8c:	bl	0 <coda_type_text_new>
     d90:	ldr	r1, [fp, #-60]	; 0xffffffc4
     d94:	ldr	r2, [fp, #-56]	; 0xffffffc8
     d98:	ldr	r3, [r1, r2]
     d9c:	str	r0, [r3, #88]	; 0x58
     da0:	ldr	r0, [r1, r2]
     da4:	ldr	r0, [r0, #88]	; 0x58
     da8:	ldr	r2, [fp, #-148]	; 0xffffff6c
     dac:	ldr	r3, [fp, #-68]	; 0xffffffbc
     db0:	bl	0 <coda_type_set_byte_size>
     db4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     db8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     dbc:	ldr	r3, [r1, r2]
     dc0:	ldr	r3, [r3, #88]	; 0x58
     dc4:	movw	r1, #0
     dc8:	movt	r1, #0
     dcc:	str	r0, [fp, #-340]	; 0xfffffeac
     dd0:	mov	r0, r3
     dd4:	bl	0 <coda_type_set_description>
     dd8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     ddc:	str	r0, [fp, #-344]	; 0xfffffea8
     de0:	mov	r0, r1
     de4:	ldr	r1, [fp, #-148]	; 0xffffff6c
     de8:	bl	0 <coda_type_number_new>
     dec:	ldr	r1, [fp, #-60]	; 0xffffffc4
     df0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     df4:	ldr	r3, [r1, r2]
     df8:	str	r0, [r3, #92]	; 0x5c
     dfc:	ldr	r0, [r1, r2]
     e00:	ldr	r0, [r0, #92]	; 0x5c
     e04:	ldr	r1, [fp, #-16]
     e08:	bl	0 <coda_type_number_set_endianness>
     e0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e10:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e14:	ldr	r3, [r1, r2]
     e18:	ldr	r3, [r3, #92]	; 0x5c
     e1c:	str	r0, [fp, #-348]	; 0xfffffea4
     e20:	mov	r0, r3
     e24:	ldr	r2, [fp, #-192]	; 0xffffff40
     e28:	ldr	r3, [fp, #-68]	; 0xffffffbc
     e2c:	bl	0 <coda_type_set_bit_size>
     e30:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e34:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e38:	ldr	r3, [r1, r2]
     e3c:	ldr	r3, [r3, #92]	; 0x5c
     e40:	movw	r1, #0
     e44:	movt	r1, #0
     e48:	str	r0, [fp, #-352]	; 0xfffffea0
     e4c:	mov	r0, r3
     e50:	bl	0 <coda_type_set_description>
     e54:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e58:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e5c:	ldr	r3, [r1, r2]
     e60:	ldr	r3, [r3, #92]	; 0x5c
     e64:	movw	ip, #0
     e68:	movt	ip, #0
     e6c:	str	r0, [fp, #-356]	; 0xfffffe9c
     e70:	mov	r0, r3
     e74:	mov	r1, ip
     e78:	str	ip, [fp, #-360]	; 0xfffffe98
     e7c:	bl	0 <coda_type_number_set_unit>
     e80:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e84:	str	r0, [fp, #-364]	; 0xfffffe94
     e88:	mov	r0, r1
     e8c:	ldr	r1, [fp, #-148]	; 0xffffff6c
     e90:	bl	0 <coda_type_number_new>
     e94:	ldr	r1, [fp, #-60]	; 0xffffffc4
     e98:	ldr	r2, [fp, #-56]	; 0xffffffc8
     e9c:	ldr	r3, [r1, r2]
     ea0:	str	r0, [r3, #96]	; 0x60
     ea4:	ldr	r0, [r1, r2]
     ea8:	ldr	r0, [r0, #96]	; 0x60
     eac:	ldr	r1, [fp, #-16]
     eb0:	bl	0 <coda_type_number_set_endianness>
     eb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
     eb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ebc:	ldr	r3, [r1, r2]
     ec0:	ldr	r3, [r3, #96]	; 0x60
     ec4:	str	r0, [fp, #-368]	; 0xfffffe90
     ec8:	mov	r0, r3
     ecc:	ldr	r2, [fp, #-192]	; 0xffffff40
     ed0:	ldr	r3, [fp, #-68]	; 0xffffffbc
     ed4:	bl	0 <coda_type_set_bit_size>
     ed8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     edc:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ee0:	ldr	r3, [r1, r2]
     ee4:	ldr	r3, [r3, #96]	; 0x60
     ee8:	movw	r1, #0
     eec:	movt	r1, #0
     ef0:	str	r0, [fp, #-372]	; 0xfffffe8c
     ef4:	mov	r0, r3
     ef8:	bl	0 <coda_type_set_description>
     efc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f00:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f04:	ldr	r3, [r1, r2]
     f08:	ldr	r3, [r3, #96]	; 0x60
     f0c:	str	r0, [fp, #-376]	; 0xfffffe88
     f10:	mov	r0, r3
     f14:	ldr	r1, [fp, #-360]	; 0xfffffe98
     f18:	bl	0 <coda_type_number_set_unit>
     f1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     f20:	str	r0, [fp, #-380]	; 0xfffffe84
     f24:	mov	r0, r1
     f28:	ldr	r1, [fp, #-148]	; 0xffffff6c
     f2c:	bl	0 <coda_type_number_new>
     f30:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f34:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f38:	ldr	r3, [r1, r2]
     f3c:	str	r0, [r3, #100]	; 0x64
     f40:	ldr	r0, [r1, r2]
     f44:	ldr	r0, [r0, #100]	; 0x64
     f48:	ldr	r1, [fp, #-16]
     f4c:	bl	0 <coda_type_number_set_endianness>
     f50:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f54:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f58:	ldr	r3, [r1, r2]
     f5c:	ldr	r3, [r3, #100]	; 0x64
     f60:	str	r0, [fp, #-384]	; 0xfffffe80
     f64:	mov	r0, r3
     f68:	ldr	r2, [fp, #-192]	; 0xffffff40
     f6c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     f70:	bl	0 <coda_type_set_bit_size>
     f74:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f78:	ldr	r2, [fp, #-56]	; 0xffffffc8
     f7c:	ldr	r3, [r1, r2]
     f80:	ldr	r3, [r3, #100]	; 0x64
     f84:	movw	r1, #0
     f88:	movt	r1, #0
     f8c:	str	r0, [fp, #-388]	; 0xfffffe7c
     f90:	mov	r0, r3
     f94:	bl	0 <coda_type_set_description>
     f98:	ldr	r1, [fp, #-60]	; 0xffffffc4
     f9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     fa0:	ldr	r3, [r1, r2]
     fa4:	ldr	r3, [r3, #100]	; 0x64
     fa8:	str	r0, [fp, #-392]	; 0xfffffe78
     fac:	mov	r0, r3
     fb0:	ldr	r1, [fp, #-360]	; 0xfffffe98
     fb4:	bl	0 <coda_type_number_set_unit>
     fb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
     fbc:	str	r0, [fp, #-396]	; 0xfffffe74
     fc0:	mov	r0, r1
     fc4:	ldr	r1, [fp, #-148]	; 0xffffff6c
     fc8:	bl	0 <coda_type_number_new>
     fcc:	ldr	r1, [fp, #-60]	; 0xffffffc4
     fd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     fd4:	ldr	r3, [r1, r2]
     fd8:	str	r0, [r3, #104]	; 0x68
     fdc:	ldr	r0, [r1, r2]
     fe0:	ldr	r0, [r0, #104]	; 0x68
     fe4:	ldr	r1, [fp, #-16]
     fe8:	bl	0 <coda_type_number_set_endianness>
     fec:	ldr	r1, [fp, #-60]	; 0xffffffc4
     ff0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     ff4:	ldr	r3, [r1, r2]
     ff8:	ldr	r3, [r3, #104]	; 0x68
     ffc:	str	r0, [fp, #-400]	; 0xfffffe70
    1000:	mov	r0, r3
    1004:	ldr	r2, [fp, #-192]	; 0xffffff40
    1008:	ldr	r3, [fp, #-68]	; 0xffffffbc
    100c:	bl	0 <coda_type_set_bit_size>
    1010:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1014:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1018:	ldr	r3, [r1, r2]
    101c:	ldr	r3, [r3, #104]	; 0x68
    1020:	movw	ip, #0
    1024:	movt	ip, #0
    1028:	str	r0, [fp, #-404]	; 0xfffffe6c
    102c:	mov	r0, r3
    1030:	mov	r1, ip
    1034:	str	ip, [fp, #-408]	; 0xfffffe68
    1038:	bl	0 <coda_type_set_description>
    103c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1040:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1044:	ldr	r3, [r1, r2]
    1048:	ldr	r3, [r3, #104]	; 0x68
    104c:	movw	r1, #0
    1050:	movt	r1, #0
    1054:	str	r0, [fp, #-412]	; 0xfffffe64
    1058:	mov	r0, r3
    105c:	bl	0 <coda_type_number_set_unit>
    1060:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1064:	str	r0, [fp, #-416]	; 0xfffffe60
    1068:	mov	r0, r1
    106c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1070:	bl	0 <coda_type_number_new>
    1074:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1078:	ldr	r2, [fp, #-56]	; 0xffffffc8
    107c:	ldr	r3, [r1, r2]
    1080:	str	r0, [r3, #108]	; 0x6c
    1084:	ldr	r0, [r1, r2]
    1088:	ldr	r0, [r0, #108]	; 0x6c
    108c:	ldr	r1, [fp, #-16]
    1090:	bl	0 <coda_type_number_set_endianness>
    1094:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1098:	ldr	r2, [fp, #-56]	; 0xffffffc8
    109c:	ldr	r3, [r1, r2]
    10a0:	ldr	r3, [r3, #108]	; 0x6c
    10a4:	str	r0, [fp, #-420]	; 0xfffffe5c
    10a8:	mov	r0, r3
    10ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
    10b0:	bl	0 <coda_type_set_read_type>
    10b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    10bc:	ldr	r3, [r1, r2]
    10c0:	ldr	r3, [r3, #108]	; 0x6c
    10c4:	str	r0, [fp, #-424]	; 0xfffffe58
    10c8:	mov	r0, r3
    10cc:	ldr	r2, [fp, #-252]	; 0xffffff04
    10d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    10d4:	bl	0 <coda_type_set_bit_size>
    10d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    10dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    10e0:	ldr	r3, [r1, r2]
    10e4:	ldr	r3, [r3, #108]	; 0x6c
    10e8:	movw	r1, #0
    10ec:	movt	r1, #0
    10f0:	str	r0, [fp, #-428]	; 0xfffffe54
    10f4:	mov	r0, r3
    10f8:	bl	0 <coda_type_set_description>
    10fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1100:	str	r0, [fp, #-432]	; 0xfffffe50
    1104:	mov	r0, r1
    1108:	ldr	r1, [fp, #-100]	; 0xffffff9c
    110c:	bl	0 <coda_type_number_new>
    1110:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1114:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1118:	ldr	r3, [r1, r2]
    111c:	str	r0, [r3, #112]	; 0x70
    1120:	ldr	r0, [r1, r2]
    1124:	ldr	r0, [r0, #112]	; 0x70
    1128:	ldr	r1, [fp, #-16]
    112c:	bl	0 <coda_type_number_set_endianness>
    1130:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1134:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1138:	ldr	r3, [r1, r2]
    113c:	ldr	r3, [r3, #112]	; 0x70
    1140:	str	r0, [fp, #-436]	; 0xfffffe4c
    1144:	mov	r0, r3
    1148:	ldr	r1, [fp, #-68]	; 0xffffffbc
    114c:	bl	0 <coda_type_set_read_type>
    1150:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1154:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1158:	ldr	r3, [r1, r2]
    115c:	ldr	r3, [r3, #112]	; 0x70
    1160:	str	r0, [fp, #-440]	; 0xfffffe48
    1164:	mov	r0, r3
    1168:	ldr	r2, [fp, #-252]	; 0xffffff04
    116c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1170:	bl	0 <coda_type_set_bit_size>
    1174:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1178:	ldr	r2, [fp, #-56]	; 0xffffffc8
    117c:	ldr	r3, [r1, r2]
    1180:	ldr	r3, [r3, #112]	; 0x70
    1184:	movw	r1, #0
    1188:	movt	r1, #0
    118c:	str	r0, [fp, #-444]	; 0xfffffe44
    1190:	mov	r0, r3
    1194:	bl	0 <coda_type_set_description>
    1198:	ldr	r1, [fp, #-48]	; 0xffffffd0
    119c:	str	r0, [fp, #-448]	; 0xfffffe40
    11a0:	mov	r0, r1
    11a4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    11a8:	bl	0 <coda_type_number_new>
    11ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    11b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11b4:	ldr	r3, [r1, r2]
    11b8:	str	r0, [r3, #116]	; 0x74
    11bc:	ldr	r0, [r1, r2]
    11c0:	ldr	r0, [r0, #116]	; 0x74
    11c4:	ldr	r1, [fp, #-16]
    11c8:	bl	0 <coda_type_number_set_endianness>
    11cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    11d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11d4:	ldr	r3, [r1, r2]
    11d8:	ldr	r3, [r3, #116]	; 0x74
    11dc:	str	r0, [fp, #-452]	; 0xfffffe3c
    11e0:	mov	r0, r3
    11e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    11e8:	bl	0 <coda_type_set_read_type>
    11ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    11f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    11f4:	ldr	r3, [r1, r2]
    11f8:	ldr	r3, [r3, #116]	; 0x74
    11fc:	str	r0, [fp, #-456]	; 0xfffffe38
    1200:	mov	r0, r3
    1204:	ldr	r2, [fp, #-252]	; 0xffffff04
    1208:	ldr	r3, [fp, #-68]	; 0xffffffbc
    120c:	bl	0 <coda_type_set_bit_size>
    1210:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1214:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1218:	ldr	r3, [r1, r2]
    121c:	ldr	r3, [r3, #116]	; 0x74
    1220:	movw	r1, #0
    1224:	movt	r1, #0
    1228:	str	r0, [fp, #-460]	; 0xfffffe34
    122c:	mov	r0, r3
    1230:	bl	0 <coda_type_set_description>
    1234:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1238:	str	r0, [fp, #-464]	; 0xfffffe30
    123c:	mov	r0, r1
    1240:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1244:	bl	0 <coda_type_number_new>
    1248:	ldr	r1, [fp, #-60]	; 0xffffffc4
    124c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1250:	ldr	r3, [r1, r2]
    1254:	str	r0, [r3, #120]	; 0x78
    1258:	ldr	r0, [r1, r2]
    125c:	ldr	r0, [r0, #120]	; 0x78
    1260:	ldr	r1, [fp, #-16]
    1264:	bl	0 <coda_type_number_set_endianness>
    1268:	ldr	r1, [fp, #-60]	; 0xffffffc4
    126c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1270:	ldr	r3, [r1, r2]
    1274:	ldr	r3, [r3, #120]	; 0x78
    1278:	str	r0, [fp, #-468]	; 0xfffffe2c
    127c:	mov	r0, r3
    1280:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1284:	bl	0 <coda_type_set_read_type>
    1288:	ldr	r1, [fp, #-60]	; 0xffffffc4
    128c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1290:	ldr	r3, [r1, r2]
    1294:	ldr	r3, [r3, #120]	; 0x78
    1298:	str	r0, [fp, #-472]	; 0xfffffe28
    129c:	mov	r0, r3
    12a0:	ldr	r2, [fp, #-176]	; 0xffffff50
    12a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    12a8:	bl	0 <coda_type_set_bit_size>
    12ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    12b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12b4:	ldr	r3, [r1, r2]
    12b8:	ldr	r3, [r3, #120]	; 0x78
    12bc:	movw	r1, #0
    12c0:	movt	r1, #0
    12c4:	str	r0, [fp, #-476]	; 0xfffffe24
    12c8:	mov	r0, r3
    12cc:	bl	0 <coda_type_set_description>
    12d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    12d4:	str	r0, [fp, #-480]	; 0xfffffe20
    12d8:	mov	r0, r1
    12dc:	bl	0 <coda_type_text_new>
    12e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    12e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    12e8:	ldr	r3, [r1, r2]
    12ec:	str	r0, [r3, #124]	; 0x7c
    12f0:	ldr	r0, [r1, r2]
    12f4:	ldr	r0, [r0, #124]	; 0x7c
    12f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    12fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1300:	bl	0 <coda_type_set_byte_size>
    1304:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1308:	ldr	r2, [fp, #-56]	; 0xffffffc8
    130c:	ldr	r3, [r1, r2]
    1310:	ldr	r3, [r3, #124]	; 0x7c
    1314:	movw	r1, #0
    1318:	movt	r1, #0
    131c:	str	r0, [fp, #-484]	; 0xfffffe1c
    1320:	mov	r0, r3
    1324:	bl	0 <coda_type_set_description>
    1328:	ldr	r1, [fp, #-48]	; 0xffffffd0
    132c:	str	r0, [fp, #-488]	; 0xfffffe18
    1330:	mov	r0, r1
    1334:	bl	0 <coda_type_text_new>
    1338:	ldr	r1, [fp, #-60]	; 0xffffffc4
    133c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1340:	ldr	r3, [r1, r2]
    1344:	str	r0, [r3, #128]	; 0x80
    1348:	ldr	r0, [r1, r2]
    134c:	ldr	r0, [r0, #128]	; 0x80
    1350:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1354:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1358:	bl	0 <coda_type_set_byte_size>
    135c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1360:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1364:	ldr	r3, [r1, r2]
    1368:	ldr	r3, [r3, #128]	; 0x80
    136c:	movw	r1, #0
    1370:	movt	r1, #0
    1374:	str	r0, [fp, #-492]	; 0xfffffe14
    1378:	mov	r0, r3
    137c:	bl	0 <coda_type_set_description>
    1380:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1384:	str	r0, [fp, #-496]	; 0xfffffe10
    1388:	mov	r0, r1
    138c:	bl	0 <coda_type_text_new>
    1390:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1394:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1398:	ldr	r3, [r1, r2]
    139c:	str	r0, [r3, #132]	; 0x84
    13a0:	ldr	r0, [r1, r2]
    13a4:	ldr	r0, [r0, #132]	; 0x84
    13a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    13ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
    13b0:	bl	0 <coda_type_set_byte_size>
    13b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    13b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13bc:	ldr	r3, [r1, r2]
    13c0:	ldr	r3, [r3, #132]	; 0x84
    13c4:	movw	r1, #0
    13c8:	movt	r1, #0
    13cc:	str	r0, [fp, #-500]	; 0xfffffe0c
    13d0:	mov	r0, r3
    13d4:	bl	0 <coda_type_set_description>
    13d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    13dc:	str	r0, [fp, #-504]	; 0xfffffe08
    13e0:	mov	r0, r1
    13e4:	bl	0 <coda_type_text_new>
    13e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    13ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    13f0:	ldr	r3, [r1, r2]
    13f4:	str	r0, [r3, #136]	; 0x88
    13f8:	ldr	r0, [r1, r2]
    13fc:	ldr	r0, [r0, #136]	; 0x88
    1400:	ldr	r2, [fp, #-64]	; 0xffffffc0
    1404:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1408:	bl	0 <coda_type_set_byte_size>
    140c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1410:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1414:	ldr	r3, [r1, r2]
    1418:	ldr	r3, [r3, #136]	; 0x88
    141c:	movw	r1, #0
    1420:	movt	r1, #0
    1424:	str	r0, [fp, #-508]	; 0xfffffe04
    1428:	mov	r0, r3
    142c:	bl	0 <coda_type_set_description>
    1430:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1434:	str	r0, [fp, #-512]	; 0xfffffe00
    1438:	mov	r0, r1
    143c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1440:	bl	0 <coda_type_number_new>
    1444:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1448:	ldr	r2, [fp, #-56]	; 0xffffffc8
    144c:	ldr	r3, [r1, r2]
    1450:	str	r0, [r3, #144]	; 0x90
    1454:	ldr	r0, [r1, r2]
    1458:	ldr	r0, [r0, #144]	; 0x90
    145c:	ldr	r1, [fp, #-16]
    1460:	bl	0 <coda_type_number_set_endianness>
    1464:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1468:	ldr	r2, [fp, #-56]	; 0xffffffc8
    146c:	ldr	r3, [r1, r2]
    1470:	ldr	r3, [r3, #144]	; 0x90
    1474:	str	r0, [fp, #-516]	; 0xfffffdfc
    1478:	mov	r0, r3
    147c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1480:	bl	0 <coda_type_set_read_type>
    1484:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1488:	ldr	r2, [fp, #-56]	; 0xffffffc8
    148c:	ldr	r3, [r1, r2]
    1490:	ldr	r3, [r3, #144]	; 0x90
    1494:	str	r0, [fp, #-520]	; 0xfffffdf8
    1498:	mov	r0, r3
    149c:	ldr	r2, [fp, #-176]	; 0xffffff50
    14a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    14a4:	bl	0 <coda_type_set_bit_size>
    14a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    14ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14b0:	ldr	r3, [r1, r2]
    14b4:	ldr	r3, [r3, #144]	; 0x90
    14b8:	movw	r1, #0
    14bc:	movt	r1, #0
    14c0:	str	r0, [fp, #-524]	; 0xfffffdf4
    14c4:	mov	r0, r3
    14c8:	bl	0 <coda_type_set_description>
    14cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    14d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14d4:	ldr	r3, [r1, r2]
    14d8:	ldr	r3, [r3, #144]	; 0x90
    14dc:	movw	ip, #0
    14e0:	movt	ip, #0
    14e4:	str	r0, [fp, #-528]	; 0xfffffdf0
    14e8:	mov	r0, r3
    14ec:	mov	r1, ip
    14f0:	str	ip, [fp, #-532]	; 0xfffffdec
    14f4:	bl	0 <coda_type_number_set_unit>
    14f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    14fc:	str	r0, [fp, #-536]	; 0xfffffde8
    1500:	mov	r0, r1
    1504:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1508:	bl	0 <coda_type_number_new>
    150c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1510:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1514:	ldr	r3, [r1, r2]
    1518:	str	r0, [r3, #148]	; 0x94
    151c:	ldr	r0, [r1, r2]
    1520:	ldr	r0, [r0, #148]	; 0x94
    1524:	ldr	r1, [fp, #-16]
    1528:	bl	0 <coda_type_number_set_endianness>
    152c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1530:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1534:	ldr	r3, [r1, r2]
    1538:	ldr	r3, [r3, #148]	; 0x94
    153c:	str	r0, [fp, #-540]	; 0xfffffde4
    1540:	mov	r0, r3
    1544:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1548:	bl	0 <coda_type_set_read_type>
    154c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1550:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1554:	ldr	r3, [r1, r2]
    1558:	ldr	r3, [r3, #148]	; 0x94
    155c:	str	r0, [fp, #-544]	; 0xfffffde0
    1560:	mov	r0, r3
    1564:	ldr	r2, [fp, #-176]	; 0xffffff50
    1568:	ldr	r3, [fp, #-68]	; 0xffffffbc
    156c:	bl	0 <coda_type_set_bit_size>
    1570:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1574:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1578:	ldr	r3, [r1, r2]
    157c:	ldr	r3, [r3, #148]	; 0x94
    1580:	movw	r1, #0
    1584:	movt	r1, #0
    1588:	str	r0, [fp, #-548]	; 0xfffffddc
    158c:	mov	r0, r3
    1590:	bl	0 <coda_type_set_description>
    1594:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1598:	ldr	r2, [fp, #-56]	; 0xffffffc8
    159c:	ldr	r3, [r1, r2]
    15a0:	ldr	r3, [r3, #148]	; 0x94
    15a4:	str	r0, [fp, #-552]	; 0xfffffdd8
    15a8:	mov	r0, r3
    15ac:	ldr	r1, [fp, #-532]	; 0xfffffdec
    15b0:	bl	0 <coda_type_number_set_unit>
    15b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    15b8:	str	r0, [fp, #-556]	; 0xfffffdd4
    15bc:	mov	r0, r1
    15c0:	ldr	r1, [fp, #-100]	; 0xffffff9c
    15c4:	bl	0 <coda_type_number_new>
    15c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    15cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15d0:	ldr	r3, [r1, r2]
    15d4:	str	r0, [r3, #152]	; 0x98
    15d8:	ldr	r0, [r1, r2]
    15dc:	ldr	r0, [r0, #152]	; 0x98
    15e0:	ldr	r1, [fp, #-16]
    15e4:	bl	0 <coda_type_number_set_endianness>
    15e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    15ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    15f0:	ldr	r3, [r1, r2]
    15f4:	ldr	r3, [r3, #152]	; 0x98
    15f8:	str	r0, [fp, #-560]	; 0xfffffdd0
    15fc:	mov	r0, r3
    1600:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1604:	bl	0 <coda_type_set_read_type>
    1608:	ldr	r1, [fp, #-60]	; 0xffffffc4
    160c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1610:	ldr	r3, [r1, r2]
    1614:	ldr	r3, [r3, #152]	; 0x98
    1618:	str	r0, [fp, #-564]	; 0xfffffdcc
    161c:	mov	r0, r3
    1620:	ldr	r2, [fp, #-176]	; 0xffffff50
    1624:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1628:	bl	0 <coda_type_set_bit_size>
    162c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1630:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1634:	ldr	r3, [r1, r2]
    1638:	ldr	r3, [r3, #152]	; 0x98
    163c:	movw	r1, #0
    1640:	movt	r1, #0
    1644:	str	r0, [fp, #-568]	; 0xfffffdc8
    1648:	mov	r0, r3
    164c:	bl	0 <coda_type_set_description>
    1650:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1654:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1658:	ldr	r3, [r1, r2]
    165c:	ldr	r3, [r3, #152]	; 0x98
    1660:	str	r0, [fp, #-572]	; 0xfffffdc4
    1664:	mov	r0, r3
    1668:	ldr	r1, [fp, #-532]	; 0xfffffdec
    166c:	bl	0 <coda_type_number_set_unit>
    1670:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1674:	str	r0, [fp, #-576]	; 0xfffffdc0
    1678:	mov	r0, r1
    167c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1680:	bl	0 <coda_type_number_new>
    1684:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1688:	ldr	r2, [fp, #-56]	; 0xffffffc8
    168c:	ldr	r3, [r1, r2]
    1690:	str	r0, [r3, #156]	; 0x9c
    1694:	ldr	r0, [r1, r2]
    1698:	ldr	r0, [r0, #156]	; 0x9c
    169c:	ldr	r1, [fp, #-16]
    16a0:	bl	0 <coda_type_number_set_endianness>
    16a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16ac:	ldr	r3, [r1, r2]
    16b0:	ldr	r3, [r3, #156]	; 0x9c
    16b4:	str	r0, [fp, #-580]	; 0xfffffdbc
    16b8:	mov	r0, r3
    16bc:	ldr	r1, [fp, #-108]	; 0xffffff94
    16c0:	bl	0 <coda_type_set_read_type>
    16c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16cc:	ldr	r3, [r1, r2]
    16d0:	ldr	r3, [r3, #156]	; 0x9c
    16d4:	str	r0, [fp, #-584]	; 0xfffffdb8
    16d8:	mov	r0, r3
    16dc:	ldr	r2, [fp, #-116]	; 0xffffff8c
    16e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    16e4:	bl	0 <coda_type_set_bit_size>
    16e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    16ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    16f0:	ldr	r3, [r1, r2]
    16f4:	ldr	r3, [r3, #156]	; 0x9c
    16f8:	movw	r1, #0
    16fc:	movt	r1, #0
    1700:	str	r0, [fp, #-588]	; 0xfffffdb4
    1704:	mov	r0, r3
    1708:	bl	0 <coda_type_set_description>
    170c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1710:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1714:	ldr	r3, [r1, r2]
    1718:	ldr	r3, [r3, #156]	; 0x9c
    171c:	movw	r1, #0
    1720:	movt	r1, #0
    1724:	str	r0, [fp, #-592]	; 0xfffffdb0
    1728:	mov	r0, r3
    172c:	bl	0 <coda_type_number_set_unit>
    1730:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1734:	str	r0, [fp, #-596]	; 0xfffffdac
    1738:	mov	r0, r1
    173c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1740:	bl	0 <coda_type_number_new>
    1744:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1748:	ldr	r2, [fp, #-56]	; 0xffffffc8
    174c:	ldr	r3, [r1, r2]
    1750:	str	r0, [r3, #160]	; 0xa0
    1754:	ldr	r0, [r1, r2]
    1758:	ldr	r0, [r0, #160]	; 0xa0
    175c:	ldr	r1, [fp, #-16]
    1760:	bl	0 <coda_type_number_set_endianness>
    1764:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1768:	ldr	r2, [fp, #-56]	; 0xffffffc8
    176c:	ldr	r3, [r1, r2]
    1770:	ldr	r3, [r3, #160]	; 0xa0
    1774:	str	r0, [fp, #-600]	; 0xfffffda8
    1778:	mov	r0, r3
    177c:	ldr	r1, [fp, #-108]	; 0xffffff94
    1780:	bl	0 <coda_type_set_read_type>
    1784:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1788:	ldr	r2, [fp, #-56]	; 0xffffffc8
    178c:	ldr	r3, [r1, r2]
    1790:	ldr	r3, [r3, #160]	; 0xa0
    1794:	str	r0, [fp, #-604]	; 0xfffffda4
    1798:	mov	r0, r3
    179c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    17a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    17a4:	bl	0 <coda_type_set_bit_size>
    17a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    17ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    17b0:	ldr	r3, [r1, r2]
    17b4:	ldr	r3, [r3, #160]	; 0xa0
    17b8:	movw	ip, #0
    17bc:	movt	ip, #0
    17c0:	str	r0, [fp, #-608]	; 0xfffffda0
    17c4:	mov	r0, r3
    17c8:	mov	r1, ip
    17cc:	str	ip, [fp, #-612]	; 0xfffffd9c
    17d0:	bl	0 <coda_type_set_description>
    17d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    17d8:	str	r0, [fp, #-616]	; 0xfffffd98
    17dc:	mov	r0, r1
    17e0:	ldr	r1, [fp, #-100]	; 0xffffff9c
    17e4:	bl	0 <coda_type_number_new>
    17e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    17ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    17f0:	ldr	r3, [r1, r2]
    17f4:	str	r0, [r3, #164]	; 0xa4
    17f8:	ldr	r0, [r1, r2]
    17fc:	ldr	r0, [r0, #164]	; 0xa4
    1800:	ldr	r1, [fp, #-16]
    1804:	bl	0 <coda_type_number_set_endianness>
    1808:	ldr	r1, [fp, #-60]	; 0xffffffc4
    180c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1810:	ldr	r3, [r1, r2]
    1814:	ldr	r3, [r3, #164]	; 0xa4
    1818:	str	r0, [fp, #-620]	; 0xfffffd94
    181c:	mov	r0, r3
    1820:	ldr	r1, [fp, #-108]	; 0xffffff94
    1824:	bl	0 <coda_type_set_read_type>
    1828:	ldr	r1, [fp, #-60]	; 0xffffffc4
    182c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1830:	ldr	r3, [r1, r2]
    1834:	ldr	r3, [r3, #164]	; 0xa4
    1838:	str	r0, [fp, #-624]	; 0xfffffd90
    183c:	mov	r0, r3
    1840:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1844:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1848:	bl	0 <coda_type_set_bit_size>
    184c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1850:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1854:	ldr	r3, [r1, r2]
    1858:	ldr	r3, [r3, #164]	; 0xa4
    185c:	movw	ip, #0
    1860:	movt	ip, #0
    1864:	str	r0, [fp, #-628]	; 0xfffffd8c
    1868:	mov	r0, r3
    186c:	mov	r1, ip
    1870:	str	ip, [fp, #-632]	; 0xfffffd88
    1874:	bl	0 <coda_type_set_description>
    1878:	ldr	r1, [fp, #-48]	; 0xffffffd0
    187c:	str	r0, [fp, #-636]	; 0xfffffd84
    1880:	mov	r0, r1
    1884:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1888:	bl	0 <coda_type_number_new>
    188c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1890:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1894:	ldr	r3, [r1, r2]
    1898:	str	r0, [r3, #168]	; 0xa8
    189c:	ldr	r0, [r1, r2]
    18a0:	ldr	r0, [r0, #168]	; 0xa8
    18a4:	ldr	r1, [fp, #-16]
    18a8:	bl	0 <coda_type_number_set_endianness>
    18ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    18b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18b4:	ldr	r3, [r1, r2]
    18b8:	ldr	r3, [r3, #168]	; 0xa8
    18bc:	str	r0, [fp, #-640]	; 0xfffffd80
    18c0:	mov	r0, r3
    18c4:	ldr	r1, [fp, #-108]	; 0xffffff94
    18c8:	bl	0 <coda_type_set_read_type>
    18cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    18d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18d4:	ldr	r3, [r1, r2]
    18d8:	ldr	r3, [r3, #168]	; 0xa8
    18dc:	str	r0, [fp, #-644]	; 0xfffffd7c
    18e0:	mov	r0, r3
    18e4:	ldr	r2, [fp, #-116]	; 0xffffff8c
    18e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    18ec:	bl	0 <coda_type_set_bit_size>
    18f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    18f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    18f8:	ldr	r3, [r1, r2]
    18fc:	ldr	r3, [r3, #168]	; 0xa8
    1900:	movw	ip, #0
    1904:	movt	ip, #0
    1908:	str	r0, [fp, #-648]	; 0xfffffd78
    190c:	mov	r0, r3
    1910:	mov	r1, ip
    1914:	str	ip, [fp, #-652]	; 0xfffffd74
    1918:	bl	0 <coda_type_set_description>
    191c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1920:	str	r0, [fp, #-656]	; 0xfffffd70
    1924:	mov	r0, r1
    1928:	ldr	r1, [fp, #-100]	; 0xffffff9c
    192c:	bl	0 <coda_type_number_new>
    1930:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1934:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1938:	ldr	r3, [r1, r2]
    193c:	str	r0, [r3, #172]	; 0xac
    1940:	ldr	r0, [r1, r2]
    1944:	ldr	r0, [r0, #172]	; 0xac
    1948:	ldr	r1, [fp, #-16]
    194c:	bl	0 <coda_type_number_set_endianness>
    1950:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1954:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1958:	ldr	r3, [r1, r2]
    195c:	ldr	r3, [r3, #172]	; 0xac
    1960:	str	r0, [fp, #-660]	; 0xfffffd6c
    1964:	mov	r0, r3
    1968:	ldr	r1, [fp, #-108]	; 0xffffff94
    196c:	bl	0 <coda_type_set_read_type>
    1970:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1974:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1978:	ldr	r3, [r1, r2]
    197c:	ldr	r3, [r3, #172]	; 0xac
    1980:	str	r0, [fp, #-664]	; 0xfffffd68
    1984:	mov	r0, r3
    1988:	ldr	r2, [fp, #-116]	; 0xffffff8c
    198c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1990:	bl	0 <coda_type_set_bit_size>
    1994:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1998:	ldr	r2, [fp, #-56]	; 0xffffffc8
    199c:	ldr	r3, [r1, r2]
    19a0:	ldr	r3, [r3, #172]	; 0xac
    19a4:	movw	ip, #0
    19a8:	movt	ip, #0
    19ac:	str	r0, [fp, #-668]	; 0xfffffd64
    19b0:	mov	r0, r3
    19b4:	mov	r1, ip
    19b8:	str	ip, [fp, #-672]	; 0xfffffd60
    19bc:	bl	0 <coda_type_set_description>
    19c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    19c4:	str	r0, [fp, #-676]	; 0xfffffd5c
    19c8:	mov	r0, r1
    19cc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    19d0:	bl	0 <coda_type_number_new>
    19d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    19d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19dc:	ldr	r3, [r1, r2]
    19e0:	str	r0, [r3, #176]	; 0xb0
    19e4:	ldr	r0, [r1, r2]
    19e8:	ldr	r0, [r0, #176]	; 0xb0
    19ec:	ldr	r1, [fp, #-16]
    19f0:	bl	0 <coda_type_number_set_endianness>
    19f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    19f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    19fc:	ldr	r3, [r1, r2]
    1a00:	ldr	r3, [r3, #176]	; 0xb0
    1a04:	str	r0, [fp, #-680]	; 0xfffffd58
    1a08:	mov	r0, r3
    1a0c:	ldr	r1, [fp, #-108]	; 0xffffff94
    1a10:	bl	0 <coda_type_set_read_type>
    1a14:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a18:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a1c:	ldr	r3, [r1, r2]
    1a20:	ldr	r3, [r3, #176]	; 0xb0
    1a24:	str	r0, [fp, #-684]	; 0xfffffd54
    1a28:	mov	r0, r3
    1a2c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1a30:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1a34:	bl	0 <coda_type_set_bit_size>
    1a38:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a40:	ldr	r3, [r1, r2]
    1a44:	ldr	r3, [r3, #176]	; 0xb0
    1a48:	movw	ip, #0
    1a4c:	movt	ip, #0
    1a50:	str	r0, [fp, #-688]	; 0xfffffd50
    1a54:	mov	r0, r3
    1a58:	mov	r1, ip
    1a5c:	str	ip, [fp, #-692]	; 0xfffffd4c
    1a60:	bl	0 <coda_type_set_description>
    1a64:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1a68:	str	r0, [fp, #-696]	; 0xfffffd48
    1a6c:	mov	r0, r1
    1a70:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1a74:	bl	0 <coda_type_number_new>
    1a78:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1a80:	ldr	r3, [r1, r2]
    1a84:	str	r0, [r3, #180]	; 0xb4
    1a88:	ldr	r0, [r1, r2]
    1a8c:	ldr	r0, [r0, #180]	; 0xb4
    1a90:	ldr	r1, [fp, #-16]
    1a94:	bl	0 <coda_type_number_set_endianness>
    1a98:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1a9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1aa0:	ldr	r3, [r1, r2]
    1aa4:	ldr	r3, [r3, #180]	; 0xb4
    1aa8:	str	r0, [fp, #-700]	; 0xfffffd44
    1aac:	mov	r0, r3
    1ab0:	ldr	r1, [fp, #-108]	; 0xffffff94
    1ab4:	bl	0 <coda_type_set_read_type>
    1ab8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1abc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ac0:	ldr	r3, [r1, r2]
    1ac4:	ldr	r3, [r3, #180]	; 0xb4
    1ac8:	str	r0, [fp, #-704]	; 0xfffffd40
    1acc:	mov	r0, r3
    1ad0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    1ad4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1ad8:	bl	0 <coda_type_set_bit_size>
    1adc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ae0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ae4:	ldr	r3, [r1, r2]
    1ae8:	ldr	r3, [r3, #180]	; 0xb4
    1aec:	movw	ip, #0
    1af0:	movt	ip, #0
    1af4:	str	r0, [fp, #-708]	; 0xfffffd3c
    1af8:	mov	r0, r3
    1afc:	mov	r1, ip
    1b00:	str	ip, [fp, #-712]	; 0xfffffd38
    1b04:	bl	0 <coda_type_set_description>
    1b08:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1b0c:	str	r0, [fp, #-716]	; 0xfffffd34
    1b10:	mov	r0, r1
    1b14:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1b18:	bl	0 <coda_type_number_new>
    1b1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b24:	ldr	r3, [r1, r2]
    1b28:	str	r0, [r3, #184]	; 0xb8
    1b2c:	ldr	r0, [r1, r2]
    1b30:	ldr	r0, [r0, #184]	; 0xb8
    1b34:	ldr	r1, [fp, #-16]
    1b38:	bl	0 <coda_type_number_set_endianness>
    1b3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b40:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b44:	ldr	r3, [r1, r2]
    1b48:	ldr	r3, [r3, #184]	; 0xb8
    1b4c:	str	r0, [fp, #-720]	; 0xfffffd30
    1b50:	mov	r0, r3
    1b54:	ldr	r2, [fp, #-192]	; 0xffffff40
    1b58:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1b5c:	bl	0 <coda_type_set_bit_size>
    1b60:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b68:	ldr	r3, [r1, r2]
    1b6c:	ldr	r3, [r3, #184]	; 0xb8
    1b70:	movw	r1, #0
    1b74:	movt	r1, #0
    1b78:	str	r0, [fp, #-724]	; 0xfffffd2c
    1b7c:	mov	r0, r3
    1b80:	bl	0 <coda_type_set_description>
    1b84:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1b88:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1b8c:	ldr	r3, [r1, r2]
    1b90:	ldr	r3, [r3, #184]	; 0xb8
    1b94:	movw	ip, #0
    1b98:	movt	ip, #0
    1b9c:	str	r0, [fp, #-728]	; 0xfffffd28
    1ba0:	mov	r0, r3
    1ba4:	mov	r1, ip
    1ba8:	str	ip, [fp, #-732]	; 0xfffffd24
    1bac:	bl	0 <coda_type_number_set_unit>
    1bb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1bb4:	str	r0, [fp, #-736]	; 0xfffffd20
    1bb8:	mov	r0, r1
    1bbc:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1bc0:	bl	0 <coda_type_number_new>
    1bc4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1bc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bcc:	ldr	r3, [r1, r2]
    1bd0:	str	r0, [r3, #188]	; 0xbc
    1bd4:	ldr	r0, [r1, r2]
    1bd8:	ldr	r0, [r0, #188]	; 0xbc
    1bdc:	ldr	r1, [fp, #-16]
    1be0:	bl	0 <coda_type_number_set_endianness>
    1be4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1be8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1bec:	ldr	r3, [r1, r2]
    1bf0:	ldr	r3, [r3, #188]	; 0xbc
    1bf4:	str	r0, [fp, #-740]	; 0xfffffd1c
    1bf8:	mov	r0, r3
    1bfc:	ldr	r2, [fp, #-192]	; 0xffffff40
    1c00:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1c04:	bl	0 <coda_type_set_bit_size>
    1c08:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c10:	ldr	r3, [r1, r2]
    1c14:	ldr	r3, [r3, #188]	; 0xbc
    1c18:	movw	r1, #0
    1c1c:	movt	r1, #0
    1c20:	str	r0, [fp, #-744]	; 0xfffffd18
    1c24:	mov	r0, r3
    1c28:	bl	0 <coda_type_set_description>
    1c2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c34:	ldr	r3, [r1, r2]
    1c38:	ldr	r3, [r3, #188]	; 0xbc
    1c3c:	str	r0, [fp, #-748]	; 0xfffffd14
    1c40:	mov	r0, r3
    1c44:	ldr	r1, [fp, #-732]	; 0xfffffd24
    1c48:	bl	0 <coda_type_number_set_unit>
    1c4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1c50:	str	r0, [fp, #-752]	; 0xfffffd10
    1c54:	mov	r0, r1
    1c58:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1c5c:	bl	0 <coda_type_number_new>
    1c60:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c68:	ldr	r3, [r1, r2]
    1c6c:	str	r0, [r3, #192]	; 0xc0
    1c70:	ldr	r0, [r1, r2]
    1c74:	ldr	r0, [r0, #192]	; 0xc0
    1c78:	ldr	r1, [fp, #-16]
    1c7c:	bl	0 <coda_type_number_set_endianness>
    1c80:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1c84:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1c88:	ldr	r3, [r1, r2]
    1c8c:	ldr	r3, [r3, #192]	; 0xc0
    1c90:	str	r0, [fp, #-756]	; 0xfffffd0c
    1c94:	mov	r0, r3
    1c98:	ldr	r2, [fp, #-192]	; 0xffffff40
    1c9c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1ca0:	bl	0 <coda_type_set_bit_size>
    1ca4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ca8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1cac:	ldr	r3, [r1, r2]
    1cb0:	ldr	r3, [r3, #192]	; 0xc0
    1cb4:	movw	r1, #0
    1cb8:	movt	r1, #0
    1cbc:	str	r0, [fp, #-760]	; 0xfffffd08
    1cc0:	mov	r0, r3
    1cc4:	bl	0 <coda_type_set_description>
    1cc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ccc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1cd0:	ldr	r3, [r1, r2]
    1cd4:	ldr	r3, [r3, #192]	; 0xc0
    1cd8:	str	r0, [fp, #-764]	; 0xfffffd04
    1cdc:	mov	r0, r3
    1ce0:	ldr	r1, [fp, #-732]	; 0xfffffd24
    1ce4:	bl	0 <coda_type_number_set_unit>
    1ce8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1cec:	str	r0, [fp, #-768]	; 0xfffffd00
    1cf0:	mov	r0, r1
    1cf4:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1cf8:	bl	0 <coda_type_number_new>
    1cfc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d04:	ldr	r3, [r1, r2]
    1d08:	str	r0, [r3, #196]	; 0xc4
    1d0c:	ldr	r0, [r1, r2]
    1d10:	ldr	r0, [r0, #196]	; 0xc4
    1d14:	ldr	r1, [fp, #-16]
    1d18:	bl	0 <coda_type_number_set_endianness>
    1d1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d24:	ldr	r3, [r1, r2]
    1d28:	ldr	r3, [r3, #196]	; 0xc4
    1d2c:	str	r0, [fp, #-772]	; 0xfffffcfc
    1d30:	mov	r0, r3
    1d34:	ldr	r2, [fp, #-192]	; 0xffffff40
    1d38:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1d3c:	bl	0 <coda_type_set_bit_size>
    1d40:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d48:	ldr	r3, [r1, r2]
    1d4c:	ldr	r3, [r3, #196]	; 0xc4
    1d50:	movw	r1, #0
    1d54:	movt	r1, #0
    1d58:	str	r0, [fp, #-776]	; 0xfffffcf8
    1d5c:	mov	r0, r3
    1d60:	bl	0 <coda_type_set_description>
    1d64:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1d68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1d6c:	ldr	r3, [r1, r2]
    1d70:	ldr	r3, [r3, #196]	; 0xc4
    1d74:	movw	r1, #0
    1d78:	movt	r1, #0
    1d7c:	str	r0, [fp, #-780]	; 0xfffffcf4
    1d80:	mov	r0, r3
    1d84:	bl	0 <coda_type_number_set_unit>
    1d88:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1d8c:	str	r0, [fp, #-784]	; 0xfffffcf0
    1d90:	mov	r0, r1
    1d94:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1d98:	bl	0 <coda_type_number_new>
    1d9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1da0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1da4:	ldr	r3, [r1, r2]
    1da8:	str	r0, [r3, #200]	; 0xc8
    1dac:	ldr	r0, [r1, r2]
    1db0:	ldr	r0, [r0, #200]	; 0xc8
    1db4:	ldr	r1, [fp, #-16]
    1db8:	bl	0 <coda_type_number_set_endianness>
    1dbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1dc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1dc4:	ldr	r3, [r1, r2]
    1dc8:	ldr	r3, [r3, #200]	; 0xc8
    1dcc:	str	r0, [fp, #-788]	; 0xfffffcec
    1dd0:	mov	r0, r3
    1dd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1dd8:	bl	0 <coda_type_set_read_type>
    1ddc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1de0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1de4:	ldr	r3, [r1, r2]
    1de8:	ldr	r3, [r3, #200]	; 0xc8
    1dec:	str	r0, [fp, #-792]	; 0xfffffce8
    1df0:	mov	r0, r3
    1df4:	ldr	r2, [fp, #-252]	; 0xffffff04
    1df8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1dfc:	bl	0 <coda_type_set_bit_size>
    1e00:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e04:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e08:	ldr	r3, [r1, r2]
    1e0c:	ldr	r3, [r3, #200]	; 0xc8
    1e10:	movw	r1, #0
    1e14:	movt	r1, #0
    1e18:	str	r0, [fp, #-796]	; 0xfffffce4
    1e1c:	mov	r0, r3
    1e20:	bl	0 <coda_type_set_description>
    1e24:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1e28:	str	r0, [fp, #-800]	; 0xfffffce0
    1e2c:	mov	r0, r1
    1e30:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1e34:	bl	0 <coda_type_number_new>
    1e38:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e40:	ldr	r3, [r1, r2]
    1e44:	str	r0, [r3, #204]	; 0xcc
    1e48:	ldr	r0, [r1, r2]
    1e4c:	ldr	r0, [r0, #204]	; 0xcc
    1e50:	ldr	r1, [fp, #-16]
    1e54:	bl	0 <coda_type_number_set_endianness>
    1e58:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e60:	ldr	r3, [r1, r2]
    1e64:	ldr	r3, [r3, #204]	; 0xcc
    1e68:	str	r0, [fp, #-804]	; 0xfffffcdc
    1e6c:	mov	r0, r3
    1e70:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1e74:	bl	0 <coda_type_set_read_type>
    1e78:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1e7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1e80:	ldr	r3, [r1, r2]
    1e84:	ldr	r3, [r3, #204]	; 0xcc
    1e88:	str	r0, [fp, #-808]	; 0xfffffcd8
    1e8c:	mov	r0, r3
    1e90:	ldr	r2, [fp, #-252]	; 0xffffff04
    1e94:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1e98:	bl	0 <coda_type_set_bit_size>
    1e9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ea0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1ea4:	ldr	r3, [r1, r2]
    1ea8:	ldr	r3, [r3, #204]	; 0xcc
    1eac:	movw	r1, #0
    1eb0:	movt	r1, #0
    1eb4:	str	r0, [fp, #-812]	; 0xfffffcd4
    1eb8:	mov	r0, r3
    1ebc:	bl	0 <coda_type_set_description>
    1ec0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ec4:	str	r0, [fp, #-816]	; 0xfffffcd0
    1ec8:	mov	r0, r1
    1ecc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1ed0:	bl	0 <coda_type_number_new>
    1ed4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ed8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1edc:	ldr	r3, [r1, r2]
    1ee0:	str	r0, [r3, #208]	; 0xd0
    1ee4:	ldr	r0, [r1, r2]
    1ee8:	ldr	r0, [r0, #208]	; 0xd0
    1eec:	ldr	r1, [fp, #-16]
    1ef0:	bl	0 <coda_type_number_set_endianness>
    1ef4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1ef8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1efc:	ldr	r3, [r1, r2]
    1f00:	ldr	r3, [r3, #208]	; 0xd0
    1f04:	str	r0, [fp, #-820]	; 0xfffffccc
    1f08:	mov	r0, r3
    1f0c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1f10:	bl	0 <coda_type_set_read_type>
    1f14:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f18:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f1c:	ldr	r3, [r1, r2]
    1f20:	ldr	r3, [r3, #208]	; 0xd0
    1f24:	str	r0, [fp, #-824]	; 0xfffffcc8
    1f28:	mov	r0, r3
    1f2c:	ldr	r2, [fp, #-252]	; 0xffffff04
    1f30:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1f34:	bl	0 <coda_type_set_bit_size>
    1f38:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f40:	ldr	r3, [r1, r2]
    1f44:	ldr	r3, [r3, #208]	; 0xd0
    1f48:	movw	r1, #0
    1f4c:	movt	r1, #0
    1f50:	str	r0, [fp, #-828]	; 0xfffffcc4
    1f54:	mov	r0, r3
    1f58:	bl	0 <coda_type_set_description>
    1f5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1f60:	str	r0, [fp, #-832]	; 0xfffffcc0
    1f64:	mov	r0, r1
    1f68:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1f6c:	bl	0 <coda_type_number_new>
    1f70:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f78:	ldr	r3, [r1, r2]
    1f7c:	str	r0, [r3, #212]	; 0xd4
    1f80:	ldr	r0, [r1, r2]
    1f84:	ldr	r0, [r0, #212]	; 0xd4
    1f88:	ldr	r1, [fp, #-16]
    1f8c:	bl	0 <coda_type_number_set_endianness>
    1f90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1f94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1f98:	ldr	r3, [r1, r2]
    1f9c:	ldr	r3, [r3, #212]	; 0xd4
    1fa0:	str	r0, [fp, #-836]	; 0xfffffcbc
    1fa4:	mov	r0, r3
    1fa8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    1fac:	bl	0 <coda_type_set_read_type>
    1fb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1fb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fb8:	ldr	r3, [r1, r2]
    1fbc:	ldr	r3, [r3, #212]	; 0xd4
    1fc0:	str	r0, [fp, #-840]	; 0xfffffcb8
    1fc4:	mov	r0, r3
    1fc8:	ldr	r2, [fp, #-176]	; 0xffffff50
    1fcc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1fd0:	bl	0 <coda_type_set_bit_size>
    1fd4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1fd8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1fdc:	ldr	r3, [r1, r2]
    1fe0:	ldr	r3, [r3, #212]	; 0xd4
    1fe4:	movw	r1, #0
    1fe8:	movt	r1, #0
    1fec:	str	r0, [sp, #844]	; 0x34c
    1ff0:	mov	r0, r3
    1ff4:	bl	0 <coda_type_set_description>
    1ff8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    1ffc:	str	r0, [sp, #840]	; 0x348
    2000:	mov	r0, r1
    2004:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2008:	bl	0 <coda_type_number_new>
    200c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2010:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2014:	ldr	r3, [r1, r2]
    2018:	str	r0, [r3, #220]	; 0xdc
    201c:	ldr	r0, [r1, r2]
    2020:	ldr	r0, [r0, #220]	; 0xdc
    2024:	ldr	r1, [fp, #-16]
    2028:	bl	0 <coda_type_number_set_endianness>
    202c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2030:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2034:	ldr	r3, [r1, r2]
    2038:	ldr	r3, [r3, #220]	; 0xdc
    203c:	str	r0, [sp, #836]	; 0x344
    2040:	mov	r0, r3
    2044:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2048:	bl	0 <coda_type_set_read_type>
    204c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2050:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2054:	ldr	r3, [r1, r2]
    2058:	ldr	r3, [r3, #220]	; 0xdc
    205c:	str	r0, [sp, #832]	; 0x340
    2060:	mov	r0, r3
    2064:	ldr	r2, [fp, #-176]	; 0xffffff50
    2068:	ldr	r3, [fp, #-68]	; 0xffffffbc
    206c:	bl	0 <coda_type_set_bit_size>
    2070:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2074:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2078:	ldr	r3, [r1, r2]
    207c:	ldr	r3, [r3, #220]	; 0xdc
    2080:	movw	r1, #0
    2084:	movt	r1, #0
    2088:	str	r0, [sp, #828]	; 0x33c
    208c:	mov	r0, r3
    2090:	bl	0 <coda_type_set_description>
    2094:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2098:	ldr	r2, [fp, #-56]	; 0xffffffc8
    209c:	ldr	r3, [r1, r2]
    20a0:	ldr	r3, [r3, #220]	; 0xdc
    20a4:	movw	ip, #0
    20a8:	movt	ip, #0
    20ac:	str	r0, [sp, #824]	; 0x338
    20b0:	mov	r0, r3
    20b4:	mov	r1, ip
    20b8:	str	ip, [sp, #820]	; 0x334
    20bc:	bl	0 <coda_type_number_set_unit>
    20c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    20c4:	str	r0, [sp, #816]	; 0x330
    20c8:	mov	r0, r1
    20cc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    20d0:	bl	0 <coda_type_number_new>
    20d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    20d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20dc:	ldr	r3, [r1, r2]
    20e0:	str	r0, [r3, #224]	; 0xe0
    20e4:	ldr	r0, [r1, r2]
    20e8:	ldr	r0, [r0, #224]	; 0xe0
    20ec:	ldr	r1, [fp, #-16]
    20f0:	bl	0 <coda_type_number_set_endianness>
    20f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    20f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    20fc:	ldr	r3, [r1, r2]
    2100:	ldr	r3, [r3, #224]	; 0xe0
    2104:	str	r0, [sp, #812]	; 0x32c
    2108:	mov	r0, r3
    210c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2110:	bl	0 <coda_type_set_read_type>
    2114:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2118:	ldr	r2, [fp, #-56]	; 0xffffffc8
    211c:	ldr	r3, [r1, r2]
    2120:	ldr	r3, [r3, #224]	; 0xe0
    2124:	str	r0, [sp, #808]	; 0x328
    2128:	mov	r0, r3
    212c:	ldr	r2, [fp, #-176]	; 0xffffff50
    2130:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2134:	bl	0 <coda_type_set_bit_size>
    2138:	ldr	r1, [fp, #-60]	; 0xffffffc4
    213c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2140:	ldr	r3, [r1, r2]
    2144:	ldr	r3, [r3, #224]	; 0xe0
    2148:	movw	r1, #0
    214c:	movt	r1, #0
    2150:	str	r0, [sp, #804]	; 0x324
    2154:	mov	r0, r3
    2158:	bl	0 <coda_type_set_description>
    215c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2160:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2164:	ldr	r3, [r1, r2]
    2168:	ldr	r3, [r3, #224]	; 0xe0
    216c:	str	r0, [sp, #800]	; 0x320
    2170:	mov	r0, r3
    2174:	ldr	r1, [sp, #820]	; 0x334
    2178:	bl	0 <coda_type_number_set_unit>
    217c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2180:	str	r0, [sp, #796]	; 0x31c
    2184:	mov	r0, r1
    2188:	ldr	r1, [fp, #-100]	; 0xffffff9c
    218c:	bl	0 <coda_type_number_new>
    2190:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2194:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2198:	ldr	r3, [r1, r2]
    219c:	str	r0, [r3, #228]	; 0xe4
    21a0:	ldr	r0, [r1, r2]
    21a4:	ldr	r0, [r0, #228]	; 0xe4
    21a8:	ldr	r1, [fp, #-16]
    21ac:	bl	0 <coda_type_number_set_endianness>
    21b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21b8:	ldr	r3, [r1, r2]
    21bc:	ldr	r3, [r3, #228]	; 0xe4
    21c0:	str	r0, [sp, #792]	; 0x318
    21c4:	mov	r0, r3
    21c8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    21cc:	bl	0 <coda_type_set_read_type>
    21d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21d8:	ldr	r3, [r1, r2]
    21dc:	ldr	r3, [r3, #228]	; 0xe4
    21e0:	str	r0, [sp, #788]	; 0x314
    21e4:	mov	r0, r3
    21e8:	ldr	r2, [fp, #-176]	; 0xffffff50
    21ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    21f0:	bl	0 <coda_type_set_bit_size>
    21f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    21f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    21fc:	ldr	r3, [r1, r2]
    2200:	ldr	r3, [r3, #228]	; 0xe4
    2204:	movw	r1, #0
    2208:	movt	r1, #0
    220c:	str	r0, [sp, #784]	; 0x310
    2210:	mov	r0, r3
    2214:	bl	0 <coda_type_set_description>
    2218:	ldr	r1, [fp, #-60]	; 0xffffffc4
    221c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2220:	ldr	r3, [r1, r2]
    2224:	ldr	r3, [r3, #228]	; 0xe4
    2228:	str	r0, [sp, #780]	; 0x30c
    222c:	mov	r0, r3
    2230:	ldr	r1, [sp, #820]	; 0x334
    2234:	bl	0 <coda_type_number_set_unit>
    2238:	ldr	r1, [fp, #-48]	; 0xffffffd0
    223c:	str	r0, [sp, #776]	; 0x308
    2240:	mov	r0, r1
    2244:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2248:	bl	0 <coda_type_number_new>
    224c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2250:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2254:	ldr	r3, [r1, r2]
    2258:	str	r0, [r3, #232]	; 0xe8
    225c:	ldr	r0, [r1, r2]
    2260:	ldr	r0, [r0, #232]	; 0xe8
    2264:	ldr	r1, [fp, #-16]
    2268:	bl	0 <coda_type_number_set_endianness>
    226c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2270:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2274:	ldr	r3, [r1, r2]
    2278:	ldr	r3, [r3, #232]	; 0xe8
    227c:	str	r0, [sp, #772]	; 0x304
    2280:	mov	r0, r3
    2284:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2288:	bl	0 <coda_type_set_read_type>
    228c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2290:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2294:	ldr	r3, [r1, r2]
    2298:	ldr	r3, [r3, #232]	; 0xe8
    229c:	str	r0, [sp, #768]	; 0x300
    22a0:	mov	r0, r3
    22a4:	ldr	r2, [fp, #-176]	; 0xffffff50
    22a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    22ac:	bl	0 <coda_type_set_bit_size>
    22b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    22b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22b8:	ldr	r3, [r1, r2]
    22bc:	ldr	r3, [r3, #232]	; 0xe8
    22c0:	movw	r1, #0
    22c4:	movt	r1, #0
    22c8:	str	r0, [sp, #764]	; 0x2fc
    22cc:	mov	r0, r3
    22d0:	bl	0 <coda_type_set_description>
    22d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    22d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    22dc:	ldr	r3, [r1, r2]
    22e0:	ldr	r3, [r3, #232]	; 0xe8
    22e4:	movw	r1, #0
    22e8:	movt	r1, #0
    22ec:	str	r0, [sp, #760]	; 0x2f8
    22f0:	mov	r0, r3
    22f4:	bl	0 <coda_type_number_set_unit>
    22f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    22fc:	str	r0, [sp, #756]	; 0x2f4
    2300:	mov	r0, r1
    2304:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2308:	bl	0 <coda_type_number_new>
    230c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2310:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2314:	ldr	r3, [r1, r2]
    2318:	str	r0, [r3, #236]	; 0xec
    231c:	ldr	r0, [r1, r2]
    2320:	ldr	r0, [r0, #236]	; 0xec
    2324:	ldr	r1, [fp, #-16]
    2328:	bl	0 <coda_type_number_set_endianness>
    232c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2330:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2334:	ldr	r3, [r1, r2]
    2338:	ldr	r3, [r3, #236]	; 0xec
    233c:	str	r0, [sp, #752]	; 0x2f0
    2340:	mov	r0, r3
    2344:	ldr	r1, [fp, #-108]	; 0xffffff94
    2348:	bl	0 <coda_type_set_read_type>
    234c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2350:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2354:	ldr	r3, [r1, r2]
    2358:	ldr	r3, [r3, #236]	; 0xec
    235c:	str	r0, [sp, #748]	; 0x2ec
    2360:	mov	r0, r3
    2364:	ldr	r2, [fp, #-116]	; 0xffffff8c
    2368:	ldr	r3, [fp, #-68]	; 0xffffffbc
    236c:	bl	0 <coda_type_set_bit_size>
    2370:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2374:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2378:	ldr	r3, [r1, r2]
    237c:	ldr	r3, [r3, #236]	; 0xec
    2380:	str	r0, [sp, #744]	; 0x2e8
    2384:	mov	r0, r3
    2388:	ldr	r1, [fp, #-612]	; 0xfffffd9c
    238c:	bl	0 <coda_type_set_description>
    2390:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2394:	str	r0, [sp, #740]	; 0x2e4
    2398:	mov	r0, r1
    239c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    23a0:	bl	0 <coda_type_number_new>
    23a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    23a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23ac:	ldr	r3, [r1, r2]
    23b0:	str	r0, [r3, #240]	; 0xf0
    23b4:	ldr	r0, [r1, r2]
    23b8:	ldr	r0, [r0, #240]	; 0xf0
    23bc:	ldr	r1, [fp, #-16]
    23c0:	bl	0 <coda_type_number_set_endianness>
    23c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    23c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23cc:	ldr	r3, [r1, r2]
    23d0:	ldr	r3, [r3, #240]	; 0xf0
    23d4:	str	r0, [sp, #736]	; 0x2e0
    23d8:	mov	r0, r3
    23dc:	ldr	r1, [fp, #-108]	; 0xffffff94
    23e0:	bl	0 <coda_type_set_read_type>
    23e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    23e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    23ec:	ldr	r3, [r1, r2]
    23f0:	ldr	r3, [r3, #240]	; 0xf0
    23f4:	str	r0, [sp, #732]	; 0x2dc
    23f8:	mov	r0, r3
    23fc:	ldr	r2, [fp, #-116]	; 0xffffff8c
    2400:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2404:	bl	0 <coda_type_set_bit_size>
    2408:	ldr	r1, [fp, #-60]	; 0xffffffc4
    240c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2410:	ldr	r3, [r1, r2]
    2414:	ldr	r3, [r3, #240]	; 0xf0
    2418:	str	r0, [sp, #728]	; 0x2d8
    241c:	mov	r0, r3
    2420:	ldr	r1, [fp, #-632]	; 0xfffffd88
    2424:	bl	0 <coda_type_set_description>
    2428:	ldr	r1, [fp, #-48]	; 0xffffffd0
    242c:	str	r0, [sp, #724]	; 0x2d4
    2430:	mov	r0, r1
    2434:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2438:	bl	0 <coda_type_number_new>
    243c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2440:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2444:	ldr	r3, [r1, r2]
    2448:	str	r0, [r3, #244]	; 0xf4
    244c:	ldr	r0, [r1, r2]
    2450:	ldr	r0, [r0, #244]	; 0xf4
    2454:	ldr	r1, [fp, #-16]
    2458:	bl	0 <coda_type_number_set_endianness>
    245c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2460:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2464:	ldr	r3, [r1, r2]
    2468:	ldr	r3, [r3, #244]	; 0xf4
    246c:	str	r0, [sp, #720]	; 0x2d0
    2470:	mov	r0, r3
    2474:	ldr	r1, [fp, #-108]	; 0xffffff94
    2478:	bl	0 <coda_type_set_read_type>
    247c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2480:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2484:	ldr	r3, [r1, r2]
    2488:	ldr	r3, [r3, #244]	; 0xf4
    248c:	str	r0, [sp, #716]	; 0x2cc
    2490:	mov	r0, r3
    2494:	ldr	r2, [fp, #-116]	; 0xffffff8c
    2498:	ldr	r3, [fp, #-68]	; 0xffffffbc
    249c:	bl	0 <coda_type_set_bit_size>
    24a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    24a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24a8:	ldr	r3, [r1, r2]
    24ac:	ldr	r3, [r3, #244]	; 0xf4
    24b0:	str	r0, [sp, #712]	; 0x2c8
    24b4:	mov	r0, r3
    24b8:	ldr	r1, [fp, #-652]	; 0xfffffd74
    24bc:	bl	0 <coda_type_set_description>
    24c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    24c4:	str	r0, [sp, #708]	; 0x2c4
    24c8:	mov	r0, r1
    24cc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    24d0:	bl	0 <coda_type_number_new>
    24d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    24d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24dc:	ldr	r3, [r1, r2]
    24e0:	str	r0, [r3, #248]	; 0xf8
    24e4:	ldr	r0, [r1, r2]
    24e8:	ldr	r0, [r0, #248]	; 0xf8
    24ec:	ldr	r1, [fp, #-16]
    24f0:	bl	0 <coda_type_number_set_endianness>
    24f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    24f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24fc:	ldr	r3, [r1, r2]
    2500:	ldr	r3, [r3, #248]	; 0xf8
    2504:	str	r0, [sp, #704]	; 0x2c0
    2508:	mov	r0, r3
    250c:	ldr	r1, [fp, #-108]	; 0xffffff94
    2510:	bl	0 <coda_type_set_read_type>
    2514:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2518:	ldr	r2, [fp, #-56]	; 0xffffffc8
    251c:	ldr	r3, [r1, r2]
    2520:	ldr	r3, [r3, #248]	; 0xf8
    2524:	str	r0, [sp, #700]	; 0x2bc
    2528:	mov	r0, r3
    252c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    2530:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2534:	bl	0 <coda_type_set_bit_size>
    2538:	ldr	r1, [fp, #-60]	; 0xffffffc4
    253c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2540:	ldr	r3, [r1, r2]
    2544:	ldr	r3, [r3, #248]	; 0xf8
    2548:	str	r0, [sp, #696]	; 0x2b8
    254c:	mov	r0, r3
    2550:	ldr	r1, [fp, #-672]	; 0xfffffd60
    2554:	bl	0 <coda_type_set_description>
    2558:	ldr	r1, [fp, #-48]	; 0xffffffd0
    255c:	str	r0, [sp, #692]	; 0x2b4
    2560:	mov	r0, r1
    2564:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2568:	bl	0 <coda_type_number_new>
    256c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2570:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2574:	ldr	r3, [r1, r2]
    2578:	str	r0, [r3, #252]	; 0xfc
    257c:	ldr	r0, [r1, r2]
    2580:	ldr	r0, [r0, #252]	; 0xfc
    2584:	ldr	r1, [fp, #-16]
    2588:	bl	0 <coda_type_number_set_endianness>
    258c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2590:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2594:	ldr	r3, [r1, r2]
    2598:	ldr	r3, [r3, #252]	; 0xfc
    259c:	str	r0, [sp, #688]	; 0x2b0
    25a0:	mov	r0, r3
    25a4:	ldr	r1, [fp, #-108]	; 0xffffff94
    25a8:	bl	0 <coda_type_set_read_type>
    25ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    25b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    25b4:	ldr	r3, [r1, r2]
    25b8:	ldr	r3, [r3, #252]	; 0xfc
    25bc:	str	r0, [sp, #684]	; 0x2ac
    25c0:	mov	r0, r3
    25c4:	ldr	r2, [fp, #-116]	; 0xffffff8c
    25c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    25cc:	bl	0 <coda_type_set_bit_size>
    25d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    25d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    25d8:	ldr	r3, [r1, r2]
    25dc:	ldr	r3, [r3, #252]	; 0xfc
    25e0:	str	r0, [sp, #680]	; 0x2a8
    25e4:	mov	r0, r3
    25e8:	ldr	r1, [fp, #-692]	; 0xfffffd4c
    25ec:	bl	0 <coda_type_set_description>
    25f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    25f4:	str	r0, [sp, #676]	; 0x2a4
    25f8:	mov	r0, r1
    25fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    2600:	bl	0 <coda_type_number_new>
    2604:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2608:	ldr	r2, [fp, #-56]	; 0xffffffc8
    260c:	ldr	r3, [r1, r2]
    2610:	str	r0, [r3, #256]	; 0x100
    2614:	ldr	r0, [r1, r2]
    2618:	ldr	r0, [r0, #256]	; 0x100
    261c:	ldr	r1, [fp, #-16]
    2620:	bl	0 <coda_type_number_set_endianness>
    2624:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2628:	ldr	r2, [fp, #-56]	; 0xffffffc8
    262c:	ldr	r3, [r1, r2]
    2630:	ldr	r3, [r3, #256]	; 0x100
    2634:	str	r0, [sp, #672]	; 0x2a0
    2638:	mov	r0, r3
    263c:	ldr	r1, [fp, #-108]	; 0xffffff94
    2640:	bl	0 <coda_type_set_read_type>
    2644:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2648:	ldr	r2, [fp, #-56]	; 0xffffffc8
    264c:	ldr	r3, [r1, r2]
    2650:	ldr	r3, [r3, #256]	; 0x100
    2654:	str	r0, [sp, #668]	; 0x29c
    2658:	mov	r0, r3
    265c:	ldr	r2, [fp, #-116]	; 0xffffff8c
    2660:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2664:	bl	0 <coda_type_set_bit_size>
    2668:	ldr	r1, [fp, #-60]	; 0xffffffc4
    266c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2670:	ldr	r3, [r1, r2]
    2674:	ldr	r3, [r3, #256]	; 0x100
    2678:	str	r0, [sp, #664]	; 0x298
    267c:	mov	r0, r3
    2680:	ldr	r1, [fp, #-712]	; 0xfffffd38
    2684:	bl	0 <coda_type_set_description>
    2688:	ldr	r1, [fp, #-48]	; 0xffffffd0
    268c:	str	r0, [sp, #660]	; 0x294
    2690:	mov	r0, r1
    2694:	bl	0 <coda_type_array_new>
    2698:	ldr	r1, [fp, #-60]	; 0xffffffc4
    269c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26a0:	ldr	r3, [r1, r2]
    26a4:	str	r0, [r3, #60]	; 0x3c
    26a8:	ldr	r0, [r1, r2]
    26ac:	ldr	r0, [r0, #60]	; 0x3c
    26b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    26b4:	bl	0 <coda_type_array_add_variable_dimension>
    26b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    26bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26c0:	ldr	r3, [r1, r2]
    26c4:	ldr	r1, [r3, #56]	; 0x38
    26c8:	ldr	r3, [r3, #60]	; 0x3c
    26cc:	str	r0, [sp, #656]	; 0x290
    26d0:	mov	r0, r3
    26d4:	bl	0 <coda_type_array_set_base_type>
    26d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    26dc:	str	r0, [sp, #652]	; 0x28c
    26e0:	mov	r0, r1
    26e4:	bl	0 <coda_type_array_new>
    26e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    26ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26f0:	ldr	r3, [r1, r2]
    26f4:	str	r0, [r3, #68]	; 0x44
    26f8:	ldr	r0, [r1, r2]
    26fc:	ldr	r0, [r0, #68]	; 0x44
    2700:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2704:	bl	0 <coda_type_array_add_variable_dimension>
    2708:	ldr	r1, [fp, #-60]	; 0xffffffc4
    270c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2710:	ldr	r3, [r1, r2]
    2714:	ldr	r1, [r3, #64]	; 0x40
    2718:	ldr	r3, [r3, #68]	; 0x44
    271c:	str	r0, [sp, #648]	; 0x288
    2720:	mov	r0, r3
    2724:	bl	0 <coda_type_array_set_base_type>
    2728:	ldr	r1, [fp, #-48]	; 0xffffffd0
    272c:	str	r0, [sp, #644]	; 0x284
    2730:	mov	r0, r1
    2734:	bl	0 <coda_type_record_new>
    2738:	ldr	r1, [fp, #-60]	; 0xffffffc4
    273c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2740:	ldr	r3, [r1, r2]
    2744:	str	r0, [r3, #284]	; 0x11c
    2748:	movw	r0, #0
    274c:	movt	r0, #0
    2750:	bl	0 <coda_type_record_field_new>
    2754:	str	r0, [fp, #-20]	; 0xffffffec
    2758:	ldr	r0, [fp, #-20]	; 0xffffffec
    275c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2760:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2764:	ldr	r3, [r1, r2]
    2768:	ldr	r1, [r3]
    276c:	bl	0 <coda_type_record_field_set_type>
    2770:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2774:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2778:	ldr	r3, [r1, r2]
    277c:	ldr	r3, [r3, #284]	; 0x11c
    2780:	ldr	r1, [fp, #-20]	; 0xffffffec
    2784:	str	r0, [sp, #640]	; 0x280
    2788:	mov	r0, r3
    278c:	bl	0 <coda_type_record_add_field>
    2790:	movw	r1, #0
    2794:	movt	r1, #0
    2798:	str	r0, [sp, #636]	; 0x27c
    279c:	mov	r0, r1
    27a0:	bl	0 <coda_type_record_field_new>
    27a4:	str	r0, [fp, #-20]	; 0xffffffec
    27a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    27ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    27b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    27b4:	ldr	r3, [r1, r2]
    27b8:	ldr	r1, [r3, #8]
    27bc:	bl	0 <coda_type_record_field_set_type>
    27c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    27c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    27c8:	ldr	r3, [r1, r2]
    27cc:	ldr	r3, [r3, #284]	; 0x11c
    27d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    27d4:	str	r0, [sp, #632]	; 0x278
    27d8:	mov	r0, r3
    27dc:	bl	0 <coda_type_record_add_field>
    27e0:	movw	r1, #0
    27e4:	movt	r1, #0
    27e8:	str	r0, [sp, #628]	; 0x274
    27ec:	mov	r0, r1
    27f0:	bl	0 <coda_type_record_field_new>
    27f4:	str	r0, [fp, #-20]	; 0xffffffec
    27f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    27fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2800:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2804:	ldr	r3, [r1, r2]
    2808:	ldr	r1, [r3, #12]
    280c:	bl	0 <coda_type_record_field_set_type>
    2810:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2814:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2818:	ldr	r3, [r1, r2]
    281c:	ldr	r3, [r3, #284]	; 0x11c
    2820:	ldr	r1, [fp, #-20]	; 0xffffffec
    2824:	str	r0, [sp, #624]	; 0x270
    2828:	mov	r0, r3
    282c:	bl	0 <coda_type_record_add_field>
    2830:	movw	r1, #0
    2834:	movt	r1, #0
    2838:	str	r0, [sp, #620]	; 0x26c
    283c:	mov	r0, r1
    2840:	bl	0 <coda_type_record_field_new>
    2844:	str	r0, [fp, #-20]	; 0xffffffec
    2848:	ldr	r0, [fp, #-20]	; 0xffffffec
    284c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2850:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2854:	ldr	r3, [r1, r2]
    2858:	ldr	r1, [r3, #16]
    285c:	bl	0 <coda_type_record_field_set_type>
    2860:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2864:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2868:	ldr	r3, [r1, r2]
    286c:	ldr	r3, [r3, #284]	; 0x11c
    2870:	ldr	r1, [fp, #-20]	; 0xffffffec
    2874:	str	r0, [sp, #616]	; 0x268
    2878:	mov	r0, r3
    287c:	bl	0 <coda_type_record_add_field>
    2880:	movw	r1, #0
    2884:	movt	r1, #0
    2888:	str	r0, [sp, #612]	; 0x264
    288c:	mov	r0, r1
    2890:	bl	0 <coda_type_record_field_new>
    2894:	str	r0, [fp, #-20]	; 0xffffffec
    2898:	ldr	r0, [fp, #-20]	; 0xffffffec
    289c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    28a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28a4:	ldr	r3, [r1, r2]
    28a8:	ldr	r1, [r3, #20]
    28ac:	bl	0 <coda_type_record_field_set_type>
    28b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    28b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28b8:	ldr	r3, [r1, r2]
    28bc:	ldr	r3, [r3, #284]	; 0x11c
    28c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    28c4:	str	r0, [sp, #608]	; 0x260
    28c8:	mov	r0, r3
    28cc:	bl	0 <coda_type_record_add_field>
    28d0:	movw	r1, #0
    28d4:	movt	r1, #0
    28d8:	str	r0, [sp, #604]	; 0x25c
    28dc:	mov	r0, r1
    28e0:	bl	0 <coda_type_record_field_new>
    28e4:	str	r0, [fp, #-20]	; 0xffffffec
    28e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    28ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    28f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    28f4:	ldr	r3, [r1, r2]
    28f8:	ldr	r1, [r3, #24]
    28fc:	bl	0 <coda_type_record_field_set_type>
    2900:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2904:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2908:	ldr	r3, [r1, r2]
    290c:	ldr	r3, [r3, #284]	; 0x11c
    2910:	ldr	r1, [fp, #-20]	; 0xffffffec
    2914:	str	r0, [sp, #600]	; 0x258
    2918:	mov	r0, r3
    291c:	bl	0 <coda_type_record_add_field>
    2920:	movw	r1, #0
    2924:	movt	r1, #0
    2928:	str	r0, [sp, #596]	; 0x254
    292c:	mov	r0, r1
    2930:	bl	0 <coda_type_record_field_new>
    2934:	str	r0, [fp, #-20]	; 0xffffffec
    2938:	ldr	r0, [fp, #-20]	; 0xffffffec
    293c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2940:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2944:	ldr	r3, [r1, r2]
    2948:	ldr	r1, [r3, #28]
    294c:	bl	0 <coda_type_record_field_set_type>
    2950:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2954:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2958:	ldr	r3, [r1, r2]
    295c:	ldr	r3, [r3, #284]	; 0x11c
    2960:	ldr	r1, [fp, #-20]	; 0xffffffec
    2964:	str	r0, [sp, #592]	; 0x250
    2968:	mov	r0, r3
    296c:	bl	0 <coda_type_record_add_field>
    2970:	movw	r1, #0
    2974:	movt	r1, #0
    2978:	str	r0, [sp, #588]	; 0x24c
    297c:	mov	r0, r1
    2980:	bl	0 <coda_type_record_field_new>
    2984:	str	r0, [fp, #-20]	; 0xffffffec
    2988:	ldr	r0, [fp, #-20]	; 0xffffffec
    298c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2990:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2994:	ldr	r3, [r1, r2]
    2998:	ldr	r1, [r3, #32]
    299c:	bl	0 <coda_type_record_field_set_type>
    29a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    29a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29a8:	ldr	r3, [r1, r2]
    29ac:	ldr	r3, [r3, #284]	; 0x11c
    29b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    29b4:	str	r0, [sp, #584]	; 0x248
    29b8:	mov	r0, r3
    29bc:	bl	0 <coda_type_record_add_field>
    29c0:	movw	r1, #0
    29c4:	movt	r1, #0
    29c8:	str	r0, [sp, #580]	; 0x244
    29cc:	mov	r0, r1
    29d0:	bl	0 <coda_type_record_field_new>
    29d4:	str	r0, [fp, #-20]	; 0xffffffec
    29d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    29dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    29e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29e4:	ldr	r3, [r1, r2]
    29e8:	ldr	r1, [r3, #36]	; 0x24
    29ec:	bl	0 <coda_type_record_field_set_type>
    29f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    29f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29f8:	ldr	r3, [r1, r2]
    29fc:	ldr	r3, [r3, #284]	; 0x11c
    2a00:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a04:	str	r0, [sp, #576]	; 0x240
    2a08:	mov	r0, r3
    2a0c:	bl	0 <coda_type_record_add_field>
    2a10:	movw	r1, #0
    2a14:	movt	r1, #0
    2a18:	str	r0, [sp, #572]	; 0x23c
    2a1c:	mov	r0, r1
    2a20:	bl	0 <coda_type_record_field_new>
    2a24:	str	r0, [fp, #-20]	; 0xffffffec
    2a28:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a34:	ldr	r3, [r1, r2]
    2a38:	ldr	r1, [r3, #40]	; 0x28
    2a3c:	bl	0 <coda_type_record_field_set_type>
    2a40:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a48:	ldr	r3, [r1, r2]
    2a4c:	ldr	r3, [r3, #284]	; 0x11c
    2a50:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a54:	str	r0, [sp, #568]	; 0x238
    2a58:	mov	r0, r3
    2a5c:	bl	0 <coda_type_record_add_field>
    2a60:	movw	r1, #0
    2a64:	movt	r1, #0
    2a68:	str	r0, [sp, #564]	; 0x234
    2a6c:	mov	r0, r1
    2a70:	bl	0 <coda_type_record_field_new>
    2a74:	str	r0, [fp, #-20]	; 0xffffffec
    2a78:	ldr	r0, [fp, #-20]	; 0xffffffec
    2a7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a80:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a84:	ldr	r3, [r1, r2]
    2a88:	ldr	r1, [r3, #44]	; 0x2c
    2a8c:	bl	0 <coda_type_record_field_set_type>
    2a90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2a94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a98:	ldr	r3, [r1, r2]
    2a9c:	ldr	r3, [r3, #284]	; 0x11c
    2aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2aa4:	str	r0, [sp, #560]	; 0x230
    2aa8:	mov	r0, r3
    2aac:	bl	0 <coda_type_record_add_field>
    2ab0:	movw	r1, #0
    2ab4:	movt	r1, #0
    2ab8:	str	r0, [sp, #556]	; 0x22c
    2abc:	mov	r0, r1
    2ac0:	bl	0 <coda_type_record_field_new>
    2ac4:	str	r0, [fp, #-20]	; 0xffffffec
    2ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
    2acc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ad0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ad4:	ldr	r3, [r1, r2]
    2ad8:	ldr	r1, [r3, #48]	; 0x30
    2adc:	bl	0 <coda_type_record_field_set_type>
    2ae0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ae4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ae8:	ldr	r3, [r1, r2]
    2aec:	ldr	r3, [r3, #284]	; 0x11c
    2af0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2af4:	str	r0, [sp, #552]	; 0x228
    2af8:	mov	r0, r3
    2afc:	bl	0 <coda_type_record_add_field>
    2b00:	movw	r1, #0
    2b04:	movt	r1, #0
    2b08:	str	r0, [sp, #548]	; 0x224
    2b0c:	mov	r0, r1
    2b10:	bl	0 <coda_type_record_field_new>
    2b14:	str	r0, [fp, #-20]	; 0xffffffec
    2b18:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b24:	ldr	r3, [r1, r2]
    2b28:	ldr	r1, [r3, #52]	; 0x34
    2b2c:	bl	0 <coda_type_record_field_set_type>
    2b30:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b34:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b38:	ldr	r3, [r1, r2]
    2b3c:	ldr	r3, [r3, #284]	; 0x11c
    2b40:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b44:	str	r0, [sp, #544]	; 0x220
    2b48:	mov	r0, r3
    2b4c:	bl	0 <coda_type_record_add_field>
    2b50:	movw	r1, #0
    2b54:	movt	r1, #0
    2b58:	str	r0, [sp, #540]	; 0x21c
    2b5c:	mov	r0, r1
    2b60:	bl	0 <coda_type_record_field_new>
    2b64:	str	r0, [fp, #-20]	; 0xffffffec
    2b68:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b70:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b74:	ldr	r3, [r1, r2]
    2b78:	ldr	r1, [r3, #60]	; 0x3c
    2b7c:	bl	0 <coda_type_record_field_set_type>
    2b80:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2b84:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b88:	ldr	r3, [r1, r2]
    2b8c:	ldr	r3, [r3, #284]	; 0x11c
    2b90:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b94:	str	r0, [sp, #536]	; 0x218
    2b98:	mov	r0, r3
    2b9c:	bl	0 <coda_type_record_add_field>
    2ba0:	movw	r1, #0
    2ba4:	movt	r1, #0
    2ba8:	str	r0, [sp, #532]	; 0x214
    2bac:	mov	r0, r1
    2bb0:	bl	0 <coda_type_record_field_new>
    2bb4:	str	r0, [fp, #-20]	; 0xffffffec
    2bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    2bbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2bc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2bc4:	ldr	r3, [r1, r2]
    2bc8:	ldr	r1, [r3, #68]	; 0x44
    2bcc:	bl	0 <coda_type_record_field_set_type>
    2bd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2bd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2bd8:	ldr	r3, [r1, r2]
    2bdc:	ldr	r3, [r3, #284]	; 0x11c
    2be0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2be4:	str	r0, [sp, #528]	; 0x210
    2be8:	mov	r0, r3
    2bec:	bl	0 <coda_type_record_add_field>
    2bf0:	movw	r1, #0
    2bf4:	movt	r1, #0
    2bf8:	str	r0, [sp, #524]	; 0x20c
    2bfc:	mov	r0, r1
    2c00:	bl	0 <coda_type_record_field_new>
    2c04:	str	r0, [fp, #-20]	; 0xffffffec
    2c08:	ldr	r0, [fp, #-20]	; 0xffffffec
    2c0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c10:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c14:	ldr	r3, [r1, r2]
    2c18:	ldr	r1, [r3, #72]	; 0x48
    2c1c:	bl	0 <coda_type_record_field_set_type>
    2c20:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c24:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c28:	ldr	r3, [r1, r2]
    2c2c:	ldr	r3, [r3, #284]	; 0x11c
    2c30:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c34:	str	r0, [sp, #520]	; 0x208
    2c38:	mov	r0, r3
    2c3c:	bl	0 <coda_type_record_add_field>
    2c40:	movw	r1, #0
    2c44:	movt	r1, #0
    2c48:	str	r0, [sp, #516]	; 0x204
    2c4c:	mov	r0, r1
    2c50:	bl	0 <coda_type_record_field_new>
    2c54:	str	r0, [fp, #-20]	; 0xffffffec
    2c58:	ldr	r0, [fp, #-20]	; 0xffffffec
    2c5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c60:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c64:	ldr	r3, [r1, r2]
    2c68:	ldr	r1, [r3, #76]	; 0x4c
    2c6c:	bl	0 <coda_type_record_field_set_type>
    2c70:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2c74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c78:	ldr	r3, [r1, r2]
    2c7c:	ldr	r3, [r3, #284]	; 0x11c
    2c80:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c84:	str	r0, [sp, #512]	; 0x200
    2c88:	mov	r0, r3
    2c8c:	bl	0 <coda_type_record_add_field>
    2c90:	movw	r1, #0
    2c94:	movt	r1, #0
    2c98:	str	r0, [sp, #508]	; 0x1fc
    2c9c:	mov	r0, r1
    2ca0:	bl	0 <coda_type_record_field_new>
    2ca4:	str	r0, [fp, #-20]	; 0xffffffec
    2ca8:	ldr	r0, [fp, #-20]	; 0xffffffec
    2cac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2cb4:	ldr	r3, [r1, r2]
    2cb8:	ldr	r1, [r3, #80]	; 0x50
    2cbc:	bl	0 <coda_type_record_field_set_type>
    2cc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2cc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2cc8:	ldr	r3, [r1, r2]
    2ccc:	ldr	r3, [r3, #284]	; 0x11c
    2cd0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2cd4:	str	r0, [sp, #504]	; 0x1f8
    2cd8:	mov	r0, r3
    2cdc:	bl	0 <coda_type_record_add_field>
    2ce0:	movw	r1, #0
    2ce4:	movt	r1, #0
    2ce8:	str	r0, [sp, #500]	; 0x1f4
    2cec:	mov	r0, r1
    2cf0:	bl	0 <coda_type_record_field_new>
    2cf4:	str	r0, [fp, #-20]	; 0xffffffec
    2cf8:	ldr	r0, [fp, #-20]	; 0xffffffec
    2cfc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d04:	ldr	r3, [r1, r2]
    2d08:	ldr	r1, [r3, #84]	; 0x54
    2d0c:	bl	0 <coda_type_record_field_set_type>
    2d10:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d14:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d18:	ldr	r3, [r1, r2]
    2d1c:	ldr	r3, [r3, #284]	; 0x11c
    2d20:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d24:	str	r0, [sp, #496]	; 0x1f0
    2d28:	mov	r0, r3
    2d2c:	bl	0 <coda_type_record_add_field>
    2d30:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2d34:	str	r0, [sp, #492]	; 0x1ec
    2d38:	mov	r0, r1
    2d3c:	bl	0 <coda_type_record_new>
    2d40:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d48:	ldr	r3, [r1, r2]
    2d4c:	str	r0, [r3, #140]	; 0x8c
    2d50:	movw	r0, #0
    2d54:	movt	r0, #0
    2d58:	str	r0, [sp, #488]	; 0x1e8
    2d5c:	bl	0 <coda_type_record_field_new>
    2d60:	str	r0, [fp, #-20]	; 0xffffffec
    2d64:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d68:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d70:	ldr	r3, [r1, r2]
    2d74:	ldr	r1, [r3, #144]	; 0x90
    2d78:	bl	0 <coda_type_record_field_set_type>
    2d7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2d80:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2d84:	ldr	r3, [r1, r2]
    2d88:	ldr	r3, [r3, #140]	; 0x8c
    2d8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d90:	str	r0, [sp, #484]	; 0x1e4
    2d94:	mov	r0, r3
    2d98:	bl	0 <coda_type_record_add_field>
    2d9c:	movw	r1, #0
    2da0:	movt	r1, #0
    2da4:	str	r0, [sp, #480]	; 0x1e0
    2da8:	mov	r0, r1
    2dac:	str	r1, [sp, #476]	; 0x1dc
    2db0:	bl	0 <coda_type_record_field_new>
    2db4:	str	r0, [fp, #-20]	; 0xffffffec
    2db8:	ldr	r0, [fp, #-20]	; 0xffffffec
    2dbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2dc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2dc4:	ldr	r3, [r1, r2]
    2dc8:	ldr	r1, [r3, #148]	; 0x94
    2dcc:	bl	0 <coda_type_record_field_set_type>
    2dd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2dd4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2dd8:	ldr	r3, [r1, r2]
    2ddc:	ldr	r3, [r3, #140]	; 0x8c
    2de0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2de4:	str	r0, [sp, #472]	; 0x1d8
    2de8:	mov	r0, r3
    2dec:	bl	0 <coda_type_record_add_field>
    2df0:	movw	r1, #0
    2df4:	movt	r1, #0
    2df8:	str	r0, [sp, #468]	; 0x1d4
    2dfc:	mov	r0, r1
    2e00:	str	r1, [sp, #464]	; 0x1d0
    2e04:	bl	0 <coda_type_record_field_new>
    2e08:	str	r0, [fp, #-20]	; 0xffffffec
    2e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e10:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e14:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e18:	ldr	r3, [r1, r2]
    2e1c:	ldr	r1, [r3, #152]	; 0x98
    2e20:	bl	0 <coda_type_record_field_set_type>
    2e24:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e28:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e2c:	ldr	r3, [r1, r2]
    2e30:	ldr	r3, [r3, #140]	; 0x8c
    2e34:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e38:	str	r0, [sp, #460]	; 0x1cc
    2e3c:	mov	r0, r3
    2e40:	bl	0 <coda_type_record_add_field>
    2e44:	movw	r1, #0
    2e48:	movt	r1, #0
    2e4c:	str	r0, [sp, #456]	; 0x1c8
    2e50:	mov	r0, r1
    2e54:	str	r1, [sp, #452]	; 0x1c4
    2e58:	bl	0 <coda_type_record_field_new>
    2e5c:	str	r0, [fp, #-20]	; 0xffffffec
    2e60:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e64:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e6c:	ldr	r3, [r1, r2]
    2e70:	ldr	r1, [r3, #156]	; 0x9c
    2e74:	bl	0 <coda_type_record_field_set_type>
    2e78:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2e7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e80:	ldr	r3, [r1, r2]
    2e84:	ldr	r3, [r3, #140]	; 0x8c
    2e88:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e8c:	str	r0, [sp, #448]	; 0x1c0
    2e90:	mov	r0, r3
    2e94:	bl	0 <coda_type_record_add_field>
    2e98:	movw	r1, #0
    2e9c:	movt	r1, #0
    2ea0:	str	r0, [sp, #444]	; 0x1bc
    2ea4:	mov	r0, r1
    2ea8:	str	r1, [sp, #440]	; 0x1b8
    2eac:	bl	0 <coda_type_record_field_new>
    2eb0:	str	r0, [fp, #-20]	; 0xffffffec
    2eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2eb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ebc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ec0:	ldr	r3, [r1, r2]
    2ec4:	ldr	r1, [r3, #160]	; 0xa0
    2ec8:	bl	0 <coda_type_record_field_set_type>
    2ecc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2ed0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ed4:	ldr	r3, [r1, r2]
    2ed8:	ldr	r3, [r3, #140]	; 0x8c
    2edc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ee0:	str	r0, [sp, #436]	; 0x1b4
    2ee4:	mov	r0, r3
    2ee8:	bl	0 <coda_type_record_add_field>
    2eec:	movw	r1, #0
    2ef0:	movt	r1, #0
    2ef4:	str	r0, [sp, #432]	; 0x1b0
    2ef8:	mov	r0, r1
    2efc:	str	r1, [sp, #428]	; 0x1ac
    2f00:	bl	0 <coda_type_record_field_new>
    2f04:	str	r0, [fp, #-20]	; 0xffffffec
    2f08:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f10:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f14:	ldr	r3, [r1, r2]
    2f18:	ldr	r1, [r3, #164]	; 0xa4
    2f1c:	bl	0 <coda_type_record_field_set_type>
    2f20:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f24:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f28:	ldr	r3, [r1, r2]
    2f2c:	ldr	r3, [r3, #140]	; 0x8c
    2f30:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f34:	str	r0, [sp, #424]	; 0x1a8
    2f38:	mov	r0, r3
    2f3c:	bl	0 <coda_type_record_add_field>
    2f40:	movw	r1, #0
    2f44:	movt	r1, #0
    2f48:	str	r0, [sp, #420]	; 0x1a4
    2f4c:	mov	r0, r1
    2f50:	str	r1, [sp, #416]	; 0x1a0
    2f54:	bl	0 <coda_type_record_field_new>
    2f58:	str	r0, [fp, #-20]	; 0xffffffec
    2f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f60:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f64:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f68:	ldr	r3, [r1, r2]
    2f6c:	ldr	r1, [r3, #168]	; 0xa8
    2f70:	bl	0 <coda_type_record_field_set_type>
    2f74:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2f78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f7c:	ldr	r3, [r1, r2]
    2f80:	ldr	r3, [r3, #140]	; 0x8c
    2f84:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f88:	str	r0, [sp, #412]	; 0x19c
    2f8c:	mov	r0, r3
    2f90:	bl	0 <coda_type_record_add_field>
    2f94:	movw	r1, #0
    2f98:	movt	r1, #0
    2f9c:	str	r0, [sp, #408]	; 0x198
    2fa0:	mov	r0, r1
    2fa4:	str	r1, [sp, #404]	; 0x194
    2fa8:	bl	0 <coda_type_record_field_new>
    2fac:	str	r0, [fp, #-20]	; 0xffffffec
    2fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
    2fb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2fb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2fbc:	ldr	r3, [r1, r2]
    2fc0:	ldr	r1, [r3, #172]	; 0xac
    2fc4:	bl	0 <coda_type_record_field_set_type>
    2fc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    2fcc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2fd0:	ldr	r3, [r1, r2]
    2fd4:	ldr	r3, [r3, #140]	; 0x8c
    2fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fdc:	str	r0, [sp, #400]	; 0x190
    2fe0:	mov	r0, r3
    2fe4:	bl	0 <coda_type_record_add_field>
    2fe8:	movw	r1, #0
    2fec:	movt	r1, #0
    2ff0:	str	r0, [sp, #396]	; 0x18c
    2ff4:	mov	r0, r1
    2ff8:	str	r1, [sp, #392]	; 0x188
    2ffc:	bl	0 <coda_type_record_field_new>
    3000:	str	r0, [fp, #-20]	; 0xffffffec
    3004:	ldr	r0, [fp, #-20]	; 0xffffffec
    3008:	ldr	r1, [fp, #-60]	; 0xffffffc4
    300c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3010:	ldr	r3, [r1, r2]
    3014:	ldr	r1, [r3, #176]	; 0xb0
    3018:	bl	0 <coda_type_record_field_set_type>
    301c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3020:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3024:	ldr	r3, [r1, r2]
    3028:	ldr	r3, [r3, #140]	; 0x8c
    302c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3030:	str	r0, [sp, #388]	; 0x184
    3034:	mov	r0, r3
    3038:	bl	0 <coda_type_record_add_field>
    303c:	movw	r1, #0
    3040:	movt	r1, #0
    3044:	str	r0, [sp, #384]	; 0x180
    3048:	mov	r0, r1
    304c:	str	r1, [sp, #380]	; 0x17c
    3050:	bl	0 <coda_type_record_field_new>
    3054:	str	r0, [fp, #-20]	; 0xffffffec
    3058:	ldr	r0, [fp, #-20]	; 0xffffffec
    305c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3060:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3064:	ldr	r3, [r1, r2]
    3068:	ldr	r1, [r3, #180]	; 0xb4
    306c:	bl	0 <coda_type_record_field_set_type>
    3070:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3074:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3078:	ldr	r3, [r1, r2]
    307c:	ldr	r3, [r3, #140]	; 0x8c
    3080:	ldr	r1, [fp, #-20]	; 0xffffffec
    3084:	str	r0, [sp, #376]	; 0x178
    3088:	mov	r0, r3
    308c:	bl	0 <coda_type_record_add_field>
    3090:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3094:	str	r0, [sp, #372]	; 0x174
    3098:	mov	r0, r1
    309c:	bl	0 <coda_type_record_new>
    30a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    30a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30a8:	ldr	r3, [r1, r2]
    30ac:	str	r0, [r3, #268]	; 0x10c
    30b0:	movw	r0, #0
    30b4:	movt	r0, #0
    30b8:	str	r0, [sp, #368]	; 0x170
    30bc:	bl	0 <coda_type_record_field_new>
    30c0:	str	r0, [fp, #-20]	; 0xffffffec
    30c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    30c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    30cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30d0:	ldr	r3, [r1, r2]
    30d4:	ldr	r1, [r3, #88]	; 0x58
    30d8:	bl	0 <coda_type_record_field_set_type>
    30dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    30e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30e4:	ldr	r3, [r1, r2]
    30e8:	ldr	r3, [r3, #268]	; 0x10c
    30ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    30f0:	str	r0, [sp, #364]	; 0x16c
    30f4:	mov	r0, r3
    30f8:	bl	0 <coda_type_record_add_field>
    30fc:	movw	r1, #0
    3100:	movt	r1, #0
    3104:	str	r0, [sp, #360]	; 0x168
    3108:	mov	r0, r1
    310c:	bl	0 <coda_type_record_field_new>
    3110:	str	r0, [fp, #-20]	; 0xffffffec
    3114:	ldr	r0, [fp, #-20]	; 0xffffffec
    3118:	ldr	r1, [fp, #-60]	; 0xffffffc4
    311c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3120:	ldr	r3, [r1, r2]
    3124:	ldr	r1, [r3, #92]	; 0x5c
    3128:	bl	0 <coda_type_record_field_set_type>
    312c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3130:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3134:	ldr	r3, [r1, r2]
    3138:	ldr	r3, [r3, #268]	; 0x10c
    313c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3140:	str	r0, [sp, #356]	; 0x164
    3144:	mov	r0, r3
    3148:	bl	0 <coda_type_record_add_field>
    314c:	movw	r1, #0
    3150:	movt	r1, #0
    3154:	str	r0, [sp, #352]	; 0x160
    3158:	mov	r0, r1
    315c:	bl	0 <coda_type_record_field_new>
    3160:	str	r0, [fp, #-20]	; 0xffffffec
    3164:	ldr	r0, [fp, #-20]	; 0xffffffec
    3168:	ldr	r1, [fp, #-60]	; 0xffffffc4
    316c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3170:	ldr	r3, [r1, r2]
    3174:	ldr	r1, [r3, #96]	; 0x60
    3178:	bl	0 <coda_type_record_field_set_type>
    317c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3180:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3184:	ldr	r3, [r1, r2]
    3188:	ldr	r3, [r3, #268]	; 0x10c
    318c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3190:	str	r0, [sp, #348]	; 0x15c
    3194:	mov	r0, r3
    3198:	bl	0 <coda_type_record_add_field>
    319c:	movw	r1, #0
    31a0:	movt	r1, #0
    31a4:	str	r0, [sp, #344]	; 0x158
    31a8:	mov	r0, r1
    31ac:	bl	0 <coda_type_record_field_new>
    31b0:	str	r0, [fp, #-20]	; 0xffffffec
    31b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    31b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    31bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    31c0:	ldr	r3, [r1, r2]
    31c4:	ldr	r1, [r3, #100]	; 0x64
    31c8:	bl	0 <coda_type_record_field_set_type>
    31cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    31d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    31d4:	ldr	r3, [r1, r2]
    31d8:	ldr	r3, [r3, #268]	; 0x10c
    31dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    31e0:	str	r0, [sp, #340]	; 0x154
    31e4:	mov	r0, r3
    31e8:	bl	0 <coda_type_record_add_field>
    31ec:	ldr	r1, [fp, #-408]	; 0xfffffe68
    31f0:	str	r0, [sp, #336]	; 0x150
    31f4:	mov	r0, r1
    31f8:	bl	0 <coda_type_record_field_new>
    31fc:	str	r0, [fp, #-20]	; 0xffffffec
    3200:	ldr	r0, [fp, #-20]	; 0xffffffec
    3204:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3208:	ldr	r2, [fp, #-56]	; 0xffffffc8
    320c:	ldr	r3, [r1, r2]
    3210:	ldr	r1, [r3, #104]	; 0x68
    3214:	bl	0 <coda_type_record_field_set_type>
    3218:	ldr	r1, [fp, #-60]	; 0xffffffc4
    321c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3220:	ldr	r3, [r1, r2]
    3224:	ldr	r3, [r3, #268]	; 0x10c
    3228:	ldr	r1, [fp, #-20]	; 0xffffffec
    322c:	str	r0, [sp, #332]	; 0x14c
    3230:	mov	r0, r3
    3234:	bl	0 <coda_type_record_add_field>
    3238:	ldr	r1, [sp, #488]	; 0x1e8
    323c:	str	r0, [sp, #328]	; 0x148
    3240:	mov	r0, r1
    3244:	bl	0 <coda_type_record_field_new>
    3248:	str	r0, [fp, #-20]	; 0xffffffec
    324c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3250:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3254:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3258:	ldr	r3, [r1, r2]
    325c:	ldr	r1, [r3, #108]	; 0x6c
    3260:	bl	0 <coda_type_record_field_set_type>
    3264:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3268:	ldr	r2, [fp, #-56]	; 0xffffffc8
    326c:	ldr	r3, [r1, r2]
    3270:	ldr	r3, [r3, #268]	; 0x10c
    3274:	ldr	r1, [fp, #-20]	; 0xffffffec
    3278:	str	r0, [sp, #324]	; 0x144
    327c:	mov	r0, r3
    3280:	bl	0 <coda_type_record_add_field>
    3284:	ldr	r1, [sp, #476]	; 0x1dc
    3288:	str	r0, [sp, #320]	; 0x140
    328c:	mov	r0, r1
    3290:	bl	0 <coda_type_record_field_new>
    3294:	str	r0, [fp, #-20]	; 0xffffffec
    3298:	ldr	r0, [fp, #-20]	; 0xffffffec
    329c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    32a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32a4:	ldr	r3, [r1, r2]
    32a8:	ldr	r1, [r3, #112]	; 0x70
    32ac:	bl	0 <coda_type_record_field_set_type>
    32b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    32b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32b8:	ldr	r3, [r1, r2]
    32bc:	ldr	r3, [r3, #268]	; 0x10c
    32c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    32c4:	str	r0, [sp, #316]	; 0x13c
    32c8:	mov	r0, r3
    32cc:	bl	0 <coda_type_record_add_field>
    32d0:	ldr	r1, [sp, #464]	; 0x1d0
    32d4:	str	r0, [sp, #312]	; 0x138
    32d8:	mov	r0, r1
    32dc:	bl	0 <coda_type_record_field_new>
    32e0:	str	r0, [fp, #-20]	; 0xffffffec
    32e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    32e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    32ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32f0:	ldr	r3, [r1, r2]
    32f4:	ldr	r1, [r3, #116]	; 0x74
    32f8:	bl	0 <coda_type_record_field_set_type>
    32fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3300:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3304:	ldr	r3, [r1, r2]
    3308:	ldr	r3, [r3, #268]	; 0x10c
    330c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3310:	str	r0, [sp, #308]	; 0x134
    3314:	mov	r0, r3
    3318:	bl	0 <coda_type_record_add_field>
    331c:	ldr	r1, [sp, #452]	; 0x1c4
    3320:	str	r0, [sp, #304]	; 0x130
    3324:	mov	r0, r1
    3328:	bl	0 <coda_type_record_field_new>
    332c:	str	r0, [fp, #-20]	; 0xffffffec
    3330:	ldr	r0, [fp, #-20]	; 0xffffffec
    3334:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3338:	ldr	r2, [fp, #-56]	; 0xffffffc8
    333c:	ldr	r3, [r1, r2]
    3340:	ldr	r1, [r3, #120]	; 0x78
    3344:	bl	0 <coda_type_record_field_set_type>
    3348:	ldr	r1, [fp, #-60]	; 0xffffffc4
    334c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3350:	ldr	r3, [r1, r2]
    3354:	ldr	r3, [r3, #268]	; 0x10c
    3358:	ldr	r1, [fp, #-20]	; 0xffffffec
    335c:	str	r0, [sp, #300]	; 0x12c
    3360:	mov	r0, r3
    3364:	bl	0 <coda_type_record_add_field>
    3368:	movw	r1, #0
    336c:	movt	r1, #0
    3370:	str	r0, [sp, #296]	; 0x128
    3374:	mov	r0, r1
    3378:	bl	0 <coda_type_record_field_new>
    337c:	str	r0, [fp, #-20]	; 0xffffffec
    3380:	ldr	r0, [fp, #-20]	; 0xffffffec
    3384:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3388:	ldr	r2, [fp, #-56]	; 0xffffffc8
    338c:	ldr	r3, [r1, r2]
    3390:	ldr	r1, [r3, #124]	; 0x7c
    3394:	bl	0 <coda_type_record_field_set_type>
    3398:	ldr	r1, [fp, #-60]	; 0xffffffc4
    339c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33a0:	ldr	r3, [r1, r2]
    33a4:	ldr	r3, [r3, #268]	; 0x10c
    33a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    33ac:	str	r0, [sp, #292]	; 0x124
    33b0:	mov	r0, r3
    33b4:	bl	0 <coda_type_record_add_field>
    33b8:	movw	r1, #0
    33bc:	movt	r1, #0
    33c0:	str	r0, [sp, #288]	; 0x120
    33c4:	mov	r0, r1
    33c8:	bl	0 <coda_type_record_field_new>
    33cc:	str	r0, [fp, #-20]	; 0xffffffec
    33d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    33d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    33d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33dc:	ldr	r3, [r1, r2]
    33e0:	ldr	r1, [r3, #128]	; 0x80
    33e4:	bl	0 <coda_type_record_field_set_type>
    33e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    33ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    33f0:	ldr	r3, [r1, r2]
    33f4:	ldr	r3, [r3, #268]	; 0x10c
    33f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    33fc:	str	r0, [sp, #284]	; 0x11c
    3400:	mov	r0, r3
    3404:	bl	0 <coda_type_record_add_field>
    3408:	movw	r1, #0
    340c:	movt	r1, #0
    3410:	str	r0, [sp, #280]	; 0x118
    3414:	mov	r0, r1
    3418:	bl	0 <coda_type_record_field_new>
    341c:	str	r0, [fp, #-20]	; 0xffffffec
    3420:	ldr	r0, [fp, #-20]	; 0xffffffec
    3424:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3428:	ldr	r2, [fp, #-56]	; 0xffffffc8
    342c:	ldr	r3, [r1, r2]
    3430:	ldr	r1, [r3, #132]	; 0x84
    3434:	bl	0 <coda_type_record_field_set_type>
    3438:	ldr	r1, [fp, #-60]	; 0xffffffc4
    343c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3440:	ldr	r3, [r1, r2]
    3444:	ldr	r3, [r3, #268]	; 0x10c
    3448:	ldr	r1, [fp, #-20]	; 0xffffffec
    344c:	str	r0, [sp, #276]	; 0x114
    3450:	mov	r0, r3
    3454:	bl	0 <coda_type_record_add_field>
    3458:	movw	r1, #0
    345c:	movt	r1, #0
    3460:	str	r0, [sp, #272]	; 0x110
    3464:	mov	r0, r1
    3468:	bl	0 <coda_type_record_field_new>
    346c:	str	r0, [fp, #-20]	; 0xffffffec
    3470:	ldr	r0, [fp, #-20]	; 0xffffffec
    3474:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3478:	ldr	r2, [fp, #-56]	; 0xffffffc8
    347c:	ldr	r3, [r1, r2]
    3480:	ldr	r1, [r3, #136]	; 0x88
    3484:	bl	0 <coda_type_record_field_set_type>
    3488:	ldr	r1, [fp, #-60]	; 0xffffffc4
    348c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3490:	ldr	r3, [r1, r2]
    3494:	ldr	r3, [r3, #268]	; 0x10c
    3498:	ldr	r1, [fp, #-20]	; 0xffffffec
    349c:	str	r0, [sp, #268]	; 0x10c
    34a0:	mov	r0, r3
    34a4:	bl	0 <coda_type_record_add_field>
    34a8:	movw	r1, #0
    34ac:	movt	r1, #0
    34b0:	str	r0, [sp, #264]	; 0x108
    34b4:	mov	r0, r1
    34b8:	str	r1, [sp, #260]	; 0x104
    34bc:	bl	0 <coda_type_record_field_new>
    34c0:	str	r0, [fp, #-20]	; 0xffffffec
    34c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    34c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    34cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    34d0:	ldr	r3, [r1, r2]
    34d4:	ldr	r1, [r3, #140]	; 0x8c
    34d8:	bl	0 <coda_type_record_field_set_type>
    34dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    34e0:	str	r0, [sp, #256]	; 0x100
    34e4:	mov	r0, r1
    34e8:	bl	0 <coda_type_record_field_set_optional>
    34ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    34f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    34f4:	ldr	r3, [r1, r2]
    34f8:	ldr	r3, [r3, #268]	; 0x10c
    34fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3500:	str	r0, [sp, #252]	; 0xfc
    3504:	mov	r0, r3
    3508:	bl	0 <coda_type_record_add_field>
    350c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3510:	str	r0, [sp, #248]	; 0xf8
    3514:	mov	r0, r1
    3518:	bl	0 <coda_type_array_new>
    351c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3520:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3524:	ldr	r3, [r1, r2]
    3528:	str	r0, [r3, #272]	; 0x110
    352c:	ldr	r0, [r1, r2]
    3530:	ldr	r0, [r0, #272]	; 0x110
    3534:	ldr	r1, [fp, #-68]	; 0xffffffbc
    3538:	bl	0 <coda_type_array_add_variable_dimension>
    353c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3540:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3544:	ldr	r3, [r1, r2]
    3548:	ldr	r1, [r3, #268]	; 0x10c
    354c:	ldr	r3, [r3, #272]	; 0x110
    3550:	str	r0, [sp, #244]	; 0xf4
    3554:	mov	r0, r3
    3558:	bl	0 <coda_type_array_set_base_type>
    355c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3560:	str	r0, [sp, #240]	; 0xf0
    3564:	mov	r0, r1
    3568:	bl	0 <coda_type_record_new>
    356c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3570:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3574:	ldr	r3, [r1, r2]
    3578:	str	r0, [r3, #216]	; 0xd8
    357c:	movw	r0, #0
    3580:	movt	r0, #0
    3584:	str	r0, [sp, #236]	; 0xec
    3588:	bl	0 <coda_type_record_field_new>
    358c:	str	r0, [fp, #-20]	; 0xffffffec
    3590:	ldr	r0, [fp, #-20]	; 0xffffffec
    3594:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3598:	ldr	r2, [fp, #-56]	; 0xffffffc8
    359c:	ldr	r3, [r1, r2]
    35a0:	ldr	r1, [r3, #220]	; 0xdc
    35a4:	bl	0 <coda_type_record_field_set_type>
    35a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    35ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    35b0:	ldr	r3, [r1, r2]
    35b4:	ldr	r3, [r3, #216]	; 0xd8
    35b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    35bc:	str	r0, [sp, #232]	; 0xe8
    35c0:	mov	r0, r3
    35c4:	bl	0 <coda_type_record_add_field>
    35c8:	movw	r1, #0
    35cc:	movt	r1, #0
    35d0:	str	r0, [sp, #228]	; 0xe4
    35d4:	mov	r0, r1
    35d8:	str	r1, [sp, #224]	; 0xe0
    35dc:	bl	0 <coda_type_record_field_new>
    35e0:	str	r0, [fp, #-20]	; 0xffffffec
    35e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    35e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    35ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    35f0:	ldr	r3, [r1, r2]
    35f4:	ldr	r1, [r3, #224]	; 0xe0
    35f8:	bl	0 <coda_type_record_field_set_type>
    35fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3600:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3604:	ldr	r3, [r1, r2]
    3608:	ldr	r3, [r3, #216]	; 0xd8
    360c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3610:	str	r0, [sp, #220]	; 0xdc
    3614:	mov	r0, r3
    3618:	bl	0 <coda_type_record_add_field>
    361c:	movw	r1, #0
    3620:	movt	r1, #0
    3624:	str	r0, [sp, #216]	; 0xd8
    3628:	mov	r0, r1
    362c:	str	r1, [sp, #212]	; 0xd4
    3630:	bl	0 <coda_type_record_field_new>
    3634:	str	r0, [fp, #-20]	; 0xffffffec
    3638:	ldr	r0, [fp, #-20]	; 0xffffffec
    363c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3640:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3644:	ldr	r3, [r1, r2]
    3648:	ldr	r1, [r3, #228]	; 0xe4
    364c:	bl	0 <coda_type_record_field_set_type>
    3650:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3654:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3658:	ldr	r3, [r1, r2]
    365c:	ldr	r3, [r3, #216]	; 0xd8
    3660:	ldr	r1, [fp, #-20]	; 0xffffffec
    3664:	str	r0, [sp, #208]	; 0xd0
    3668:	mov	r0, r3
    366c:	bl	0 <coda_type_record_add_field>
    3670:	movw	r1, #0
    3674:	movt	r1, #0
    3678:	str	r0, [sp, #204]	; 0xcc
    367c:	mov	r0, r1
    3680:	str	r1, [sp, #200]	; 0xc8
    3684:	bl	0 <coda_type_record_field_new>
    3688:	str	r0, [fp, #-20]	; 0xffffffec
    368c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3690:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3694:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3698:	ldr	r3, [r1, r2]
    369c:	ldr	r1, [r3, #232]	; 0xe8
    36a0:	bl	0 <coda_type_record_field_set_type>
    36a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    36a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36ac:	ldr	r3, [r1, r2]
    36b0:	ldr	r3, [r3, #216]	; 0xd8
    36b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    36b8:	str	r0, [sp, #196]	; 0xc4
    36bc:	mov	r0, r3
    36c0:	bl	0 <coda_type_record_add_field>
    36c4:	ldr	r1, [sp, #440]	; 0x1b8
    36c8:	str	r0, [sp, #192]	; 0xc0
    36cc:	mov	r0, r1
    36d0:	bl	0 <coda_type_record_field_new>
    36d4:	str	r0, [fp, #-20]	; 0xffffffec
    36d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    36dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    36e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36e4:	ldr	r3, [r1, r2]
    36e8:	ldr	r1, [r3, #236]	; 0xec
    36ec:	bl	0 <coda_type_record_field_set_type>
    36f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    36f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    36f8:	ldr	r3, [r1, r2]
    36fc:	ldr	r3, [r3, #216]	; 0xd8
    3700:	ldr	r1, [fp, #-20]	; 0xffffffec
    3704:	str	r0, [sp, #188]	; 0xbc
    3708:	mov	r0, r3
    370c:	bl	0 <coda_type_record_add_field>
    3710:	ldr	r1, [sp, #428]	; 0x1ac
    3714:	str	r0, [sp, #184]	; 0xb8
    3718:	mov	r0, r1
    371c:	bl	0 <coda_type_record_field_new>
    3720:	str	r0, [fp, #-20]	; 0xffffffec
    3724:	ldr	r0, [fp, #-20]	; 0xffffffec
    3728:	ldr	r1, [fp, #-60]	; 0xffffffc4
    372c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3730:	ldr	r3, [r1, r2]
    3734:	ldr	r1, [r3, #240]	; 0xf0
    3738:	bl	0 <coda_type_record_field_set_type>
    373c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3740:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3744:	ldr	r3, [r1, r2]
    3748:	ldr	r3, [r3, #216]	; 0xd8
    374c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3750:	str	r0, [sp, #180]	; 0xb4
    3754:	mov	r0, r3
    3758:	bl	0 <coda_type_record_add_field>
    375c:	ldr	r1, [sp, #416]	; 0x1a0
    3760:	str	r0, [sp, #176]	; 0xb0
    3764:	mov	r0, r1
    3768:	bl	0 <coda_type_record_field_new>
    376c:	str	r0, [fp, #-20]	; 0xffffffec
    3770:	ldr	r0, [fp, #-20]	; 0xffffffec
    3774:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3778:	ldr	r2, [fp, #-56]	; 0xffffffc8
    377c:	ldr	r3, [r1, r2]
    3780:	ldr	r1, [r3, #244]	; 0xf4
    3784:	bl	0 <coda_type_record_field_set_type>
    3788:	ldr	r1, [fp, #-60]	; 0xffffffc4
    378c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3790:	ldr	r3, [r1, r2]
    3794:	ldr	r3, [r3, #216]	; 0xd8
    3798:	ldr	r1, [fp, #-20]	; 0xffffffec
    379c:	str	r0, [sp, #172]	; 0xac
    37a0:	mov	r0, r3
    37a4:	bl	0 <coda_type_record_add_field>
    37a8:	ldr	r1, [sp, #404]	; 0x194
    37ac:	str	r0, [sp, #168]	; 0xa8
    37b0:	mov	r0, r1
    37b4:	bl	0 <coda_type_record_field_new>
    37b8:	str	r0, [fp, #-20]	; 0xffffffec
    37bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    37c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    37c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    37c8:	ldr	r3, [r1, r2]
    37cc:	ldr	r1, [r3, #248]	; 0xf8
    37d0:	bl	0 <coda_type_record_field_set_type>
    37d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    37d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    37dc:	ldr	r3, [r1, r2]
    37e0:	ldr	r3, [r3, #216]	; 0xd8
    37e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    37e8:	str	r0, [sp, #164]	; 0xa4
    37ec:	mov	r0, r3
    37f0:	bl	0 <coda_type_record_add_field>
    37f4:	ldr	r1, [sp, #392]	; 0x188
    37f8:	str	r0, [sp, #160]	; 0xa0
    37fc:	mov	r0, r1
    3800:	bl	0 <coda_type_record_field_new>
    3804:	str	r0, [fp, #-20]	; 0xffffffec
    3808:	ldr	r0, [fp, #-20]	; 0xffffffec
    380c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3810:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3814:	ldr	r3, [r1, r2]
    3818:	ldr	r1, [r3, #252]	; 0xfc
    381c:	bl	0 <coda_type_record_field_set_type>
    3820:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3824:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3828:	ldr	r3, [r1, r2]
    382c:	ldr	r3, [r3, #216]	; 0xd8
    3830:	ldr	r1, [fp, #-20]	; 0xffffffec
    3834:	str	r0, [sp, #156]	; 0x9c
    3838:	mov	r0, r3
    383c:	bl	0 <coda_type_record_add_field>
    3840:	ldr	r1, [sp, #380]	; 0x17c
    3844:	str	r0, [sp, #152]	; 0x98
    3848:	mov	r0, r1
    384c:	bl	0 <coda_type_record_field_new>
    3850:	str	r0, [fp, #-20]	; 0xffffffec
    3854:	ldr	r0, [fp, #-20]	; 0xffffffec
    3858:	ldr	r1, [fp, #-60]	; 0xffffffc4
    385c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3860:	ldr	r3, [r1, r2]
    3864:	ldr	r1, [r3, #256]	; 0x100
    3868:	bl	0 <coda_type_record_field_set_type>
    386c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3870:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3874:	ldr	r3, [r1, r2]
    3878:	ldr	r3, [r3, #216]	; 0xd8
    387c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3880:	str	r0, [sp, #148]	; 0x94
    3884:	mov	r0, r3
    3888:	bl	0 <coda_type_record_add_field>
    388c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3890:	str	r0, [sp, #144]	; 0x90
    3894:	mov	r0, r1
    3898:	bl	0 <coda_type_record_new>
    389c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38a4:	ldr	r3, [r1, r2]
    38a8:	str	r0, [r3, #276]	; 0x114
    38ac:	ldr	r0, [sp, #368]	; 0x170
    38b0:	bl	0 <coda_type_record_field_new>
    38b4:	str	r0, [fp, #-20]	; 0xffffffec
    38b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    38bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38c4:	ldr	r3, [r1, r2]
    38c8:	ldr	r1, [r3, #88]	; 0x58
    38cc:	bl	0 <coda_type_record_field_set_type>
    38d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    38d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    38d8:	ldr	r3, [r1, r2]
    38dc:	ldr	r3, [r3, #276]	; 0x114
    38e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    38e4:	str	r0, [sp, #140]	; 0x8c
    38e8:	mov	r0, r3
    38ec:	bl	0 <coda_type_record_add_field>
    38f0:	movw	r1, #0
    38f4:	movt	r1, #0
    38f8:	str	r0, [sp, #136]	; 0x88
    38fc:	mov	r0, r1
    3900:	bl	0 <coda_type_record_field_new>
    3904:	str	r0, [fp, #-20]	; 0xffffffec
    3908:	ldr	r0, [fp, #-20]	; 0xffffffec
    390c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3910:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3914:	ldr	r3, [r1, r2]
    3918:	ldr	r1, [r3, #184]	; 0xb8
    391c:	bl	0 <coda_type_record_field_set_type>
    3920:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3924:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3928:	ldr	r3, [r1, r2]
    392c:	ldr	r3, [r3, #276]	; 0x114
    3930:	ldr	r1, [fp, #-20]	; 0xffffffec
    3934:	str	r0, [sp, #132]	; 0x84
    3938:	mov	r0, r3
    393c:	bl	0 <coda_type_record_add_field>
    3940:	movw	r1, #0
    3944:	movt	r1, #0
    3948:	str	r0, [sp, #128]	; 0x80
    394c:	mov	r0, r1
    3950:	bl	0 <coda_type_record_field_new>
    3954:	str	r0, [fp, #-20]	; 0xffffffec
    3958:	ldr	r0, [fp, #-20]	; 0xffffffec
    395c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3960:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3964:	ldr	r3, [r1, r2]
    3968:	ldr	r1, [r3, #188]	; 0xbc
    396c:	bl	0 <coda_type_record_field_set_type>
    3970:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3974:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3978:	ldr	r3, [r1, r2]
    397c:	ldr	r3, [r3, #276]	; 0x114
    3980:	ldr	r1, [fp, #-20]	; 0xffffffec
    3984:	str	r0, [sp, #124]	; 0x7c
    3988:	mov	r0, r3
    398c:	bl	0 <coda_type_record_add_field>
    3990:	movw	r1, #0
    3994:	movt	r1, #0
    3998:	str	r0, [sp, #120]	; 0x78
    399c:	mov	r0, r1
    39a0:	bl	0 <coda_type_record_field_new>
    39a4:	str	r0, [fp, #-20]	; 0xffffffec
    39a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    39ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
    39b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    39b4:	ldr	r3, [r1, r2]
    39b8:	ldr	r1, [r3, #192]	; 0xc0
    39bc:	bl	0 <coda_type_record_field_set_type>
    39c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    39c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    39c8:	ldr	r3, [r1, r2]
    39cc:	ldr	r3, [r3, #276]	; 0x114
    39d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    39d4:	str	r0, [sp, #116]	; 0x74
    39d8:	mov	r0, r3
    39dc:	bl	0 <coda_type_record_add_field>
    39e0:	movw	r1, #0
    39e4:	movt	r1, #0
    39e8:	str	r0, [sp, #112]	; 0x70
    39ec:	mov	r0, r1
    39f0:	bl	0 <coda_type_record_field_new>
    39f4:	str	r0, [fp, #-20]	; 0xffffffec
    39f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    39fc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a00:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a04:	ldr	r3, [r1, r2]
    3a08:	ldr	r1, [r3, #196]	; 0xc4
    3a0c:	bl	0 <coda_type_record_field_set_type>
    3a10:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a14:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a18:	ldr	r3, [r1, r2]
    3a1c:	ldr	r3, [r3, #276]	; 0x114
    3a20:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a24:	str	r0, [sp, #108]	; 0x6c
    3a28:	mov	r0, r3
    3a2c:	bl	0 <coda_type_record_add_field>
    3a30:	ldr	r1, [sp, #236]	; 0xec
    3a34:	str	r0, [sp, #104]	; 0x68
    3a38:	mov	r0, r1
    3a3c:	bl	0 <coda_type_record_field_new>
    3a40:	str	r0, [fp, #-20]	; 0xffffffec
    3a44:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a48:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a50:	ldr	r3, [r1, r2]
    3a54:	ldr	r1, [r3, #200]	; 0xc8
    3a58:	bl	0 <coda_type_record_field_set_type>
    3a5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a60:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a64:	ldr	r3, [r1, r2]
    3a68:	ldr	r3, [r3, #276]	; 0x114
    3a6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a70:	str	r0, [sp, #100]	; 0x64
    3a74:	mov	r0, r3
    3a78:	bl	0 <coda_type_record_add_field>
    3a7c:	ldr	r1, [sp, #224]	; 0xe0
    3a80:	str	r0, [sp, #96]	; 0x60
    3a84:	mov	r0, r1
    3a88:	bl	0 <coda_type_record_field_new>
    3a8c:	str	r0, [fp, #-20]	; 0xffffffec
    3a90:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a94:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3a98:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3a9c:	ldr	r3, [r1, r2]
    3aa0:	ldr	r1, [r3, #204]	; 0xcc
    3aa4:	bl	0 <coda_type_record_field_set_type>
    3aa8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3aac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3ab0:	ldr	r3, [r1, r2]
    3ab4:	ldr	r3, [r3, #276]	; 0x114
    3ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3abc:	str	r0, [sp, #92]	; 0x5c
    3ac0:	mov	r0, r3
    3ac4:	bl	0 <coda_type_record_add_field>
    3ac8:	ldr	r1, [sp, #212]	; 0xd4
    3acc:	str	r0, [sp, #88]	; 0x58
    3ad0:	mov	r0, r1
    3ad4:	bl	0 <coda_type_record_field_new>
    3ad8:	str	r0, [fp, #-20]	; 0xffffffec
    3adc:	ldr	r0, [fp, #-20]	; 0xffffffec
    3ae0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ae4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3ae8:	ldr	r3, [r1, r2]
    3aec:	ldr	r1, [r3, #208]	; 0xd0
    3af0:	bl	0 <coda_type_record_field_set_type>
    3af4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3af8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3afc:	ldr	r3, [r1, r2]
    3b00:	ldr	r3, [r3, #276]	; 0x114
    3b04:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b08:	str	r0, [sp, #84]	; 0x54
    3b0c:	mov	r0, r3
    3b10:	bl	0 <coda_type_record_add_field>
    3b14:	ldr	r1, [sp, #200]	; 0xc8
    3b18:	str	r0, [sp, #80]	; 0x50
    3b1c:	mov	r0, r1
    3b20:	bl	0 <coda_type_record_field_new>
    3b24:	str	r0, [fp, #-20]	; 0xffffffec
    3b28:	ldr	r0, [fp, #-20]	; 0xffffffec
    3b2c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b34:	ldr	r3, [r1, r2]
    3b38:	ldr	r1, [r3, #212]	; 0xd4
    3b3c:	bl	0 <coda_type_record_field_set_type>
    3b40:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b48:	ldr	r3, [r1, r2]
    3b4c:	ldr	r3, [r3, #276]	; 0x114
    3b50:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b54:	str	r0, [sp, #76]	; 0x4c
    3b58:	mov	r0, r3
    3b5c:	bl	0 <coda_type_record_add_field>
    3b60:	ldr	r1, [sp, #260]	; 0x104
    3b64:	str	r0, [sp, #72]	; 0x48
    3b68:	mov	r0, r1
    3b6c:	bl	0 <coda_type_record_field_new>
    3b70:	str	r0, [fp, #-20]	; 0xffffffec
    3b74:	ldr	r0, [fp, #-20]	; 0xffffffec
    3b78:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3b7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3b80:	ldr	r3, [r1, r2]
    3b84:	ldr	r1, [r3, #216]	; 0xd8
    3b88:	bl	0 <coda_type_record_field_set_type>
    3b8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b90:	str	r0, [sp, #68]	; 0x44
    3b94:	mov	r0, r1
    3b98:	bl	0 <coda_type_record_field_set_optional>
    3b9c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ba0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3ba4:	ldr	r3, [r1, r2]
    3ba8:	ldr	r3, [r3, #276]	; 0x114
    3bac:	ldr	r1, [fp, #-20]	; 0xffffffec
    3bb0:	str	r0, [sp, #64]	; 0x40
    3bb4:	mov	r0, r3
    3bb8:	bl	0 <coda_type_record_add_field>
    3bbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3bc0:	str	r0, [sp, #60]	; 0x3c
    3bc4:	mov	r0, r1
    3bc8:	bl	0 <coda_type_array_new>
    3bcc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3bd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3bd4:	ldr	r3, [r1, r2]
    3bd8:	str	r0, [r3, #280]	; 0x118
    3bdc:	ldr	r0, [r1, r2]
    3be0:	ldr	r0, [r0, #280]	; 0x118
    3be4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    3be8:	bl	0 <coda_type_array_add_variable_dimension>
    3bec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3bf0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3bf4:	ldr	r3, [r1, r2]
    3bf8:	ldr	r1, [r3, #276]	; 0x114
    3bfc:	ldr	r3, [r3, #280]	; 0x118
    3c00:	str	r0, [sp, #56]	; 0x38
    3c04:	mov	r0, r3
    3c08:	bl	0 <coda_type_array_set_base_type>
    3c0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3c10:	str	r0, [sp, #52]	; 0x34
    3c14:	mov	r0, r1
    3c18:	bl	0 <coda_type_record_new>
    3c1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c20:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c24:	ldr	r3, [r1, r2]
    3c28:	str	r0, [r3, #292]	; 0x124
    3c2c:	movw	r0, #0
    3c30:	movt	r0, #0
    3c34:	bl	0 <coda_type_record_field_new>
    3c38:	str	r0, [fp, #-20]	; 0xffffffec
    3c3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3c40:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c48:	ldr	r3, [r1, r2]
    3c4c:	ldr	r1, [r3, #264]	; 0x108
    3c50:	bl	0 <coda_type_record_field_set_type>
    3c54:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c58:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c5c:	ldr	r3, [r1, r2]
    3c60:	ldr	r3, [r3, #292]	; 0x124
    3c64:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c68:	str	r0, [sp, #48]	; 0x30
    3c6c:	mov	r0, r3
    3c70:	bl	0 <coda_type_record_add_field>
    3c74:	movw	r1, #0
    3c78:	movt	r1, #0
    3c7c:	str	r0, [sp, #44]	; 0x2c
    3c80:	mov	r0, r1
    3c84:	bl	0 <coda_type_record_field_new>
    3c88:	str	r0, [fp, #-20]	; 0xffffffec
    3c8c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3c90:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3c94:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3c98:	ldr	r3, [r1, r2]
    3c9c:	ldr	r1, [r3, #272]	; 0x110
    3ca0:	bl	0 <coda_type_record_field_set_type>
    3ca4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ca8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3cac:	ldr	r3, [r1, r2]
    3cb0:	ldr	r3, [r3, #292]	; 0x124
    3cb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cb8:	str	r0, [sp, #40]	; 0x28
    3cbc:	mov	r0, r3
    3cc0:	bl	0 <coda_type_record_add_field>
    3cc4:	movw	r1, #0
    3cc8:	movt	r1, #0
    3ccc:	str	r0, [sp, #36]	; 0x24
    3cd0:	mov	r0, r1
    3cd4:	bl	0 <coda_type_record_field_new>
    3cd8:	str	r0, [fp, #-20]	; 0xffffffec
    3cdc:	ldr	r0, [fp, #-20]	; 0xffffffec
    3ce0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ce4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3ce8:	ldr	r3, [r1, r2]
    3cec:	ldr	r1, [r3, #280]	; 0x118
    3cf0:	bl	0 <coda_type_record_field_set_type>
    3cf4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cf8:	str	r0, [sp, #32]
    3cfc:	mov	r0, r1
    3d00:	bl	0 <coda_type_record_field_set_optional>
    3d04:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d08:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d0c:	ldr	r3, [r1, r2]
    3d10:	ldr	r3, [r3, #292]	; 0x124
    3d14:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d18:	str	r0, [sp, #28]
    3d1c:	mov	r0, r3
    3d20:	bl	0 <coda_type_record_add_field>
    3d24:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d28:	str	r0, [sp, #24]
    3d2c:	mov	r0, r1
    3d30:	bl	0 <coda_type_array_new>
    3d34:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d38:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d3c:	ldr	r3, [r1, r2]
    3d40:	str	r0, [r3, #288]	; 0x120
    3d44:	ldr	r0, [r1, r2]
    3d48:	ldr	r0, [r0, #288]	; 0x120
    3d4c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    3d50:	bl	0 <coda_type_array_add_variable_dimension>
    3d54:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d58:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d5c:	ldr	r3, [r1, r2]
    3d60:	ldr	ip, [r3, #288]	; 0x120
    3d64:	ldr	r1, [r3, #292]	; 0x124
    3d68:	str	r0, [sp, #20]
    3d6c:	mov	r0, ip
    3d70:	bl	0 <coda_type_array_set_base_type>
    3d74:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d78:	str	r0, [sp, #16]
    3d7c:	mov	r0, r1
    3d80:	bl	0 <coda_type_record_new>
    3d84:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3d88:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3d8c:	ldr	r3, [r1, r2]
    3d90:	str	r0, [r3, #296]	; 0x128
    3d94:	movw	r0, #0
    3d98:	movt	r0, #0
    3d9c:	bl	0 <coda_type_record_field_new>
    3da0:	str	r0, [fp, #-20]	; 0xffffffec
    3da4:	ldr	r0, [fp, #-20]	; 0xffffffec
    3da8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3dac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3db0:	ldr	r3, [r1, r2]
    3db4:	ldr	r1, [r3, #284]	; 0x11c
    3db8:	bl	0 <coda_type_record_field_set_type>
    3dbc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3dc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3dc4:	ldr	r3, [r1, r2]
    3dc8:	ldr	r3, [r3, #296]	; 0x128
    3dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3dd0:	str	r0, [sp, #12]
    3dd4:	mov	r0, r3
    3dd8:	bl	0 <coda_type_record_add_field>
    3ddc:	movw	r1, #0
    3de0:	movt	r1, #0
    3de4:	str	r0, [sp, #8]
    3de8:	mov	r0, r1
    3dec:	bl	0 <coda_type_record_field_new>
    3df0:	str	r0, [fp, #-20]	; 0xffffffec
    3df4:	ldr	r0, [fp, #-20]	; 0xffffffec
    3df8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3dfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3e00:	ldr	r3, [r1, r2]
    3e04:	ldr	r1, [r3, #288]	; 0x120
    3e08:	bl	0 <coda_type_record_field_set_type>
    3e0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3e10:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3e14:	ldr	r3, [r1, r2]
    3e18:	ldr	r3, [r3, #296]	; 0x128
    3e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e20:	str	r0, [sp, #4]
    3e24:	mov	r0, r3
    3e28:	bl	0 <coda_type_record_add_field>
    3e2c:	movw	r1, #0
    3e30:	str	r1, [fp, #-12]
    3e34:	ldr	r0, [fp, #-12]
    3e38:	sub	sp, fp, #8
    3e3c:	pop	{r4, r5, fp, pc}

00003e40 <read_file>:
    3e40:	push	{fp, lr}
    3e44:	mov	fp, sp
    3e48:	sub	sp, sp, #96	; 0x60
    3e4c:	str	r0, [fp, #-8]
    3e50:	movw	r0, #0
    3e54:	str	r0, [fp, #-12]
    3e58:	add	r0, sp, #28
    3e5c:	bl	40bc <ingest_info_init>
    3e60:	ldr	r0, [fp, #-8]
    3e64:	str	r0, [sp, #32]
    3e68:	ldr	r0, [fp, #-8]
    3e6c:	ldr	r0, [r0]
    3e70:	movw	r1, #0
    3e74:	movt	r1, #0
    3e78:	bl	0 <fopen>
    3e7c:	str	r0, [sp, #28]
    3e80:	ldr	r0, [sp, #28]
    3e84:	movw	r1, #0
    3e88:	cmp	r0, r1
    3e8c:	bne	3eb4 <read_file+0x74>
    3e90:	ldr	r0, [fp, #-8]
    3e94:	ldr	r2, [r0]
    3e98:	mvn	r0, #20
    3e9c:	movw	r1, #0
    3ea0:	movt	r1, #0
    3ea4:	bl	0 <coda_set_error>
    3ea8:	mvn	r0, #0
    3eac:	str	r0, [fp, #-4]
    3eb0:	b	3ff0 <read_file+0x1b0>
    3eb4:	ldr	r0, [pc, #320]	; 3ffc <read_file+0x1bc>
    3eb8:	str	r0, [sp, #24]
    3ebc:	bl	0 <__aeabi_read_tp>
    3ec0:	ldr	r1, [sp, #24]
    3ec4:	ldr	r2, [r0, r1]
    3ec8:	ldr	r2, [r2, #284]	; 0x11c
    3ecc:	mov	r1, #0
    3ed0:	str	r0, [sp, #20]
    3ed4:	mov	r0, r2
    3ed8:	bl	0 <coda_mem_record_new>
    3edc:	str	r0, [sp, #36]	; 0x24
    3ee0:	ldr	r0, [sp, #20]
    3ee4:	ldr	r1, [sp, #24]
    3ee8:	ldr	r2, [r0, r1]
    3eec:	ldr	r2, [r2, #288]	; 0x120
    3ef0:	mov	r0, r2
    3ef4:	movw	r1, #0
    3ef8:	bl	0 <coda_mem_array_new>
    3efc:	str	r0, [sp, #40]	; 0x28
    3f00:	add	r0, sp, #28
    3f04:	bl	4130 <read_header>
    3f08:	cmp	r0, #0
    3f0c:	beq	3f24 <read_file+0xe4>
    3f10:	add	r0, sp, #28
    3f14:	bl	5544 <ingest_info_cleanup>
    3f18:	mvn	r0, #0
    3f1c:	str	r0, [fp, #-4]
    3f20:	b	3ff0 <read_file+0x1b0>
    3f24:	add	r0, sp, #28
    3f28:	bl	567c <read_records>
    3f2c:	cmp	r0, #0
    3f30:	beq	3f48 <read_file+0x108>
    3f34:	add	r0, sp, #28
    3f38:	bl	5544 <ingest_info_cleanup>
    3f3c:	mvn	r0, #0
    3f40:	str	r0, [fp, #-4]
    3f44:	b	3ff0 <read_file+0x1b0>
    3f48:	ldr	r0, [pc, #172]	; 3ffc <read_file+0x1bc>
    3f4c:	str	r0, [sp, #16]
    3f50:	bl	0 <__aeabi_read_tp>
    3f54:	ldr	r1, [sp, #16]
    3f58:	ldr	r0, [r0, r1]
    3f5c:	ldr	r0, [r0, #296]	; 0x128
    3f60:	movw	r1, #0
    3f64:	bl	0 <coda_mem_record_new>
    3f68:	str	r0, [fp, #-12]
    3f6c:	ldr	r0, [fp, #-12]
    3f70:	ldr	r1, [sp, #36]	; 0x24
    3f74:	movw	r2, #0
    3f78:	movt	r2, #0
    3f7c:	str	r1, [sp, #12]
    3f80:	mov	r1, r2
    3f84:	ldr	r2, [sp, #12]
    3f88:	movw	r3, #0
    3f8c:	bl	0 <coda_mem_record_add_field>
    3f90:	movw	r1, #0
    3f94:	str	r1, [sp, #36]	; 0x24
    3f98:	ldr	r2, [fp, #-12]
    3f9c:	ldr	r3, [sp, #40]	; 0x28
    3fa0:	str	r0, [sp, #8]
    3fa4:	mov	r0, r2
    3fa8:	movw	r2, #0
    3fac:	movt	r2, #0
    3fb0:	str	r1, [sp, #4]
    3fb4:	mov	r1, r2
    3fb8:	mov	r2, r3
    3fbc:	ldr	r3, [sp, #4]
    3fc0:	bl	0 <coda_mem_record_add_field>
    3fc4:	movw	r1, #0
    3fc8:	str	r1, [sp, #40]	; 0x28
    3fcc:	ldr	r1, [fp, #-12]
    3fd0:	ldr	r2, [fp, #-8]
    3fd4:	str	r1, [r2, #20]
    3fd8:	add	r1, sp, #28
    3fdc:	str	r0, [sp]
    3fe0:	mov	r0, r1
    3fe4:	bl	5544 <ingest_info_cleanup>
    3fe8:	movw	r0, #0
    3fec:	str	r0, [fp, #-4]
    3ff0:	ldr	r0, [fp, #-4]
    3ff4:	mov	sp, fp
    3ff8:	pop	{fp, pc}
    3ffc:	.word	0x00000000

00004000 <coda_sp3_close>:
    4000:	push	{fp, lr}
    4004:	mov	fp, sp
    4008:	sub	sp, sp, #8
    400c:	str	r0, [sp, #4]
    4010:	ldr	r0, [sp, #4]
    4014:	ldr	r0, [r0, #20]
    4018:	movw	r1, #0
    401c:	cmp	r0, r1
    4020:	beq	4030 <coda_sp3_close+0x30>
    4024:	ldr	r0, [sp, #4]
    4028:	ldr	r0, [r0, #20]
    402c:	bl	0 <coda_dynamic_type_delete>
    4030:	ldr	r0, [sp, #4]
    4034:	ldr	r0, [r0]
    4038:	movw	r1, #0
    403c:	cmp	r0, r1
    4040:	beq	4050 <coda_sp3_close+0x50>
    4044:	ldr	r0, [sp, #4]
    4048:	ldr	r0, [r0]
    404c:	bl	0 <free>
    4050:	ldr	r0, [sp, #4]
    4054:	bl	0 <free>
    4058:	movw	r0, #0
    405c:	mov	sp, fp
    4060:	pop	{fp, pc}

00004064 <coda_sp3_cursor_set_product>:
    4064:	sub	sp, sp, #8
    4068:	str	r0, [sp, #4]
    406c:	str	r1, [sp]
    4070:	ldr	r0, [sp]
    4074:	ldr	r1, [sp, #4]
    4078:	str	r0, [r1]
    407c:	ldr	r0, [sp, #4]
    4080:	mov	r1, #1
    4084:	str	r1, [r0, #4]
    4088:	ldr	r0, [sp]
    408c:	ldr	r0, [r0, #20]
    4090:	ldr	r1, [sp, #4]
    4094:	str	r0, [r1, #8]
    4098:	ldr	r0, [sp, #4]
    409c:	mvn	r1, #0
    40a0:	str	r1, [r0, #12]
    40a4:	ldr	r0, [sp, #4]
    40a8:	str	r1, [r0, #20]
    40ac:	str	r1, [r0, #16]
    40b0:	movw	r0, #0
    40b4:	add	sp, sp, #8
    40b8:	bx	lr

000040bc <ingest_info_init>:
    40bc:	sub	sp, sp, #4
    40c0:	str	r0, [sp]
    40c4:	ldr	r0, [sp]
    40c8:	movw	r1, #0
    40cc:	str	r1, [r0]
    40d0:	ldr	r0, [sp]
    40d4:	str	r1, [r0, #8]
    40d8:	ldr	r0, [sp]
    40dc:	str	r1, [r0, #12]
    40e0:	ldr	r0, [sp]
    40e4:	str	r1, [r0, #16]
    40e8:	ldr	r0, [sp]
    40ec:	str	r1, [r0, #20]
    40f0:	ldr	r0, [sp]
    40f4:	str	r1, [r0, #24]
    40f8:	ldr	r0, [sp]
    40fc:	str	r1, [r0, #28]
    4100:	ldr	r0, [sp]
    4104:	str	r1, [r0, #32]
    4108:	ldr	r0, [sp]
    410c:	str	r1, [r0, #36]	; 0x24
    4110:	ldr	r0, [sp]
    4114:	str	r1, [r0, #40]	; 0x28
    4118:	ldr	r0, [sp]
    411c:	str	r1, [r0, #48]	; 0x30
    4120:	ldr	r0, [sp]
    4124:	str	r1, [r0, #52]	; 0x34
    4128:	add	sp, sp, #4
    412c:	bx	lr

00004130 <read_header>:
    4130:	push	{r4, r5, fp, lr}
    4134:	add	fp, sp, #8
    4138:	sub	sp, sp, #312	; 0x138
    413c:	sub	sp, sp, #1024	; 0x400
    4140:	str	r0, [fp, #-16]
    4144:	ldr	r0, [fp, #-16]
    4148:	ldr	r0, [r0]
    414c:	bl	0 <ftell>
    4150:	add	r1, sp, #316	; 0x13c
    4154:	ldr	r2, [fp, #-16]
    4158:	str	r0, [r2, #52]	; 0x34
    415c:	ldr	r0, [fp, #-16]
    4160:	ldr	r2, [r0, #48]	; 0x30
    4164:	add	r2, r2, #1
    4168:	str	r2, [r0, #48]	; 0x30
    416c:	ldr	r0, [fp, #-16]
    4170:	ldr	r0, [r0]
    4174:	bl	7f44 <get_line>
    4178:	str	r0, [sp, #228]	; 0xe4
    417c:	ldr	r0, [sp, #228]	; 0xe4
    4180:	cmp	r0, #0
    4184:	bge	4194 <read_header+0x64>
    4188:	mvn	r0, #0
    418c:	str	r0, [fp, #-12]
    4190:	b	5534 <read_header+0x1404>
    4194:	ldr	r0, [sp, #228]	; 0xe4
    4198:	cmp	r0, #60	; 0x3c
    419c:	bge	41e0 <read_header+0xb0>
    41a0:	ldr	r2, [sp, #228]	; 0xe4
    41a4:	ldr	r0, [fp, #-16]
    41a8:	ldr	r3, [r0, #48]	; 0x30
    41ac:	ldr	r0, [fp, #-16]
    41b0:	ldr	r0, [r0, #52]	; 0x34
    41b4:	mvn	r1, #21
    41b8:	str	r0, [sp, #220]	; 0xdc
    41bc:	mov	r0, r1
    41c0:	movw	r1, #0
    41c4:	movt	r1, #0
    41c8:	ldr	ip, [sp, #220]	; 0xdc
    41cc:	str	ip, [sp]
    41d0:	bl	0 <coda_set_error>
    41d4:	mvn	r0, #0
    41d8:	str	r0, [fp, #-12]
    41dc:	b	5534 <read_header+0x1404>
    41e0:	ldrb	r0, [sp, #318]	; 0x13e
    41e4:	ldr	r1, [fp, #-16]
    41e8:	strb	r0, [r1, #44]	; 0x2c
    41ec:	ldrb	r0, [sp, #318]	; 0x13e
    41f0:	strb	r0, [sp, #232]	; 0xe8
    41f4:	mov	r0, #0
    41f8:	strb	r0, [sp, #233]	; 0xe9
    41fc:	ldr	r1, [pc, #4092]	; 5200 <read_header+0x10d0>
    4200:	str	r0, [sp, #216]	; 0xd8
    4204:	str	r1, [sp, #212]	; 0xd4
    4208:	bl	0 <__aeabi_read_tp>
    420c:	ldr	r1, [sp, #212]	; 0xd4
    4210:	ldr	r2, [r0, r1]
    4214:	ldr	r2, [r2]
    4218:	ldr	r3, [fp, #-16]
    421c:	ldr	r3, [r3, #4]
    4220:	add	ip, sp, #232	; 0xe8
    4224:	str	r0, [sp, #208]	; 0xd0
    4228:	mov	r0, r2
    422c:	ldr	r1, [sp, #216]	; 0xd8
    4230:	mov	r2, r3
    4234:	mov	r3, ip
    4238:	str	ip, [sp, #204]	; 0xcc
    423c:	bl	0 <coda_mem_string_new>
    4240:	str	r0, [fp, #-24]	; 0xffffffe8
    4244:	ldr	r0, [fp, #-16]
    4248:	ldr	r0, [r0, #8]
    424c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4250:	movw	r1, #0
    4254:	movt	r1, #0
    4258:	ldr	r3, [sp, #216]	; 0xd8
    425c:	bl	0 <coda_mem_record_add_field>
    4260:	add	r1, sp, #316	; 0x13c
    4264:	add	r2, r1, #3
    4268:	ldr	r3, [sp, #204]	; 0xcc
    426c:	add	ip, r3, #12
    4270:	add	r1, r1, #15
    4274:	vld1.8	{d16-d17}, [r1]
    4278:	vst1.32	{d16-d17}, [ip]
    427c:	vld1.8	{d16-d17}, [r2]
    4280:	mov	r1, #28
    4284:	vst1.64	{d16-d17}, [r3], r1
    4288:	ldr	r1, [sp, #216]	; 0xd8
    428c:	strb	r1, [r3]
    4290:	ldr	r2, [sp, #208]	; 0xd0
    4294:	ldr	r3, [sp, #212]	; 0xd4
    4298:	ldr	ip, [r2, r3]
    429c:	ldr	ip, [ip, #4]
    42a0:	ldr	lr, [fp, #-16]
    42a4:	ldr	r2, [lr, #4]
    42a8:	str	r0, [sp, #200]	; 0xc8
    42ac:	mov	r0, ip
    42b0:	ldr	r3, [sp, #204]	; 0xcc
    42b4:	bl	0 <coda_mem_string_new>
    42b8:	str	r0, [fp, #-20]	; 0xffffffec
    42bc:	ldr	r0, [sp, #208]	; 0xd0
    42c0:	ldr	r1, [sp, #212]	; 0xd4
    42c4:	ldr	r2, [r0, r1]
    42c8:	ldr	r2, [r2, #8]
    42cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    42d0:	mov	r0, r2
    42d4:	movw	r1, #0
    42d8:	mov	r2, r3
    42dc:	bl	0 <coda_mem_time_new>
    42e0:	str	r0, [fp, #-24]	; 0xffffffe8
    42e4:	ldr	r0, [fp, #-16]
    42e8:	ldr	r0, [r0, #8]
    42ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42f0:	movw	r1, #0
    42f4:	movt	r1, #0
    42f8:	movw	r3, #0
    42fc:	bl	0 <coda_mem_record_add_field>
    4300:	add	r1, sp, #316	; 0x13c
    4304:	add	r1, r1, #32
    4308:	str	r0, [sp, #196]	; 0xc4
    430c:	mov	r0, r1
    4310:	movw	r1, #7
    4314:	add	r2, sp, #296	; 0x128
    4318:	movw	r3, #0
    431c:	bl	0 <coda_ascii_parse_int64>
    4320:	cmp	r0, #0
    4324:	bge	4354 <read_header+0x224>
    4328:	ldr	r0, [fp, #-16]
    432c:	ldr	r1, [r0, #48]	; 0x30
    4330:	ldr	r0, [fp, #-16]
    4334:	ldr	r0, [r0, #52]	; 0x34
    4338:	add	r2, r0, #32
    433c:	movw	r0, #0
    4340:	movt	r0, #0
    4344:	bl	0 <coda_add_error_message>
    4348:	mvn	r0, #0
    434c:	str	r0, [fp, #-12]
    4350:	b	5534 <read_header+0x1404>
    4354:	add	r3, sp, #232	; 0xe8
    4358:	ldr	r0, [pc, #3744]	; 5200 <read_header+0x10d0>
    435c:	str	r3, [sp, #192]	; 0xc0
    4360:	str	r0, [sp, #188]	; 0xbc
    4364:	bl	0 <__aeabi_read_tp>
    4368:	ldr	r1, [sp, #188]	; 0xbc
    436c:	ldr	r2, [r0, r1]
    4370:	ldr	r2, [r2, #12]
    4374:	ldr	r3, [fp, #-16]
    4378:	ldr	r3, [r3, #4]
    437c:	ldr	ip, [sp, #296]	; 0x128
    4380:	mov	lr, #0
    4384:	str	r0, [sp, #184]	; 0xb8
    4388:	mov	r0, r2
    438c:	mov	r1, lr
    4390:	mov	r2, r3
    4394:	mov	r3, ip
    4398:	str	lr, [sp, #180]	; 0xb4
    439c:	bl	0 <coda_mem_int32_new>
    43a0:	str	r0, [fp, #-24]	; 0xffffffe8
    43a4:	ldr	r0, [fp, #-16]
    43a8:	ldr	r0, [r0, #8]
    43ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43b0:	movw	r1, #0
    43b4:	movt	r1, #0
    43b8:	ldr	r3, [sp, #180]	; 0xb4
    43bc:	bl	0 <coda_mem_record_add_field>
    43c0:	ldrb	r1, [sp, #360]	; 0x168
    43c4:	strb	r1, [sp, #236]	; 0xec
    43c8:	ldr	r1, [sp, #356]	; 0x164
    43cc:	str	r1, [sp, #232]	; 0xe8
    43d0:	ldr	r1, [sp, #180]	; 0xb4
    43d4:	strb	r1, [sp, #237]	; 0xed
    43d8:	ldr	r2, [sp, #184]	; 0xb8
    43dc:	ldr	r3, [sp, #188]	; 0xbc
    43e0:	ldr	ip, [r2, r3]
    43e4:	ldr	ip, [ip, #16]
    43e8:	ldr	lr, [fp, #-16]
    43ec:	ldr	r2, [lr, #4]
    43f0:	add	lr, sp, #232	; 0xe8
    43f4:	str	r0, [sp, #176]	; 0xb0
    43f8:	mov	r0, ip
    43fc:	mov	r3, lr
    4400:	str	lr, [sp, #172]	; 0xac
    4404:	bl	0 <coda_mem_string_new>
    4408:	str	r0, [fp, #-24]	; 0xffffffe8
    440c:	ldr	r0, [fp, #-16]
    4410:	ldr	r0, [r0, #8]
    4414:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4418:	movw	r1, #0
    441c:	movt	r1, #0
    4420:	ldr	r3, [sp, #180]	; 0xb4
    4424:	bl	0 <coda_mem_record_add_field>
    4428:	ldrb	r1, [sp, #366]	; 0x16e
    442c:	strb	r1, [sp, #236]	; 0xec
    4430:	ldr	r1, [sp, #362]	; 0x16a
    4434:	str	r1, [sp, #232]	; 0xe8
    4438:	ldr	r1, [sp, #180]	; 0xb4
    443c:	strb	r1, [sp, #237]	; 0xed
    4440:	ldr	r2, [sp, #184]	; 0xb8
    4444:	ldr	r3, [sp, #188]	; 0xbc
    4448:	ldr	ip, [r2, r3]
    444c:	ldr	ip, [ip, #20]
    4450:	ldr	lr, [fp, #-16]
    4454:	ldr	r2, [lr, #4]
    4458:	str	r0, [sp, #168]	; 0xa8
    445c:	mov	r0, ip
    4460:	ldr	r3, [sp, #172]	; 0xac
    4464:	bl	0 <coda_mem_string_new>
    4468:	str	r0, [fp, #-24]	; 0xffffffe8
    446c:	ldr	r0, [fp, #-16]
    4470:	ldr	r0, [r0, #8]
    4474:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4478:	movw	r1, #0
    447c:	movt	r1, #0
    4480:	ldr	r3, [sp, #180]	; 0xb4
    4484:	bl	0 <coda_mem_record_add_field>
    4488:	ldrb	r1, [sp, #370]	; 0x172
    448c:	strb	r1, [sp, #234]	; 0xea
    4490:	add	lr, sp, #256	; 0x100
    4494:	ldrh	r1, [lr, #112]	; 0x70
    4498:	strh	r1, [sp, #232]	; 0xe8
    449c:	ldr	r1, [sp, #180]	; 0xb4
    44a0:	strb	r1, [sp, #235]	; 0xeb
    44a4:	ldr	r2, [sp, #184]	; 0xb8
    44a8:	ldr	r3, [sp, #188]	; 0xbc
    44ac:	ldr	ip, [r2, r3]
    44b0:	ldr	ip, [ip, #24]
    44b4:	ldr	lr, [fp, #-16]
    44b8:	ldr	r2, [lr, #4]
    44bc:	str	r0, [sp, #164]	; 0xa4
    44c0:	mov	r0, ip
    44c4:	ldr	r3, [sp, #172]	; 0xac
    44c8:	bl	0 <coda_mem_string_new>
    44cc:	str	r0, [fp, #-24]	; 0xffffffe8
    44d0:	ldr	r0, [fp, #-16]
    44d4:	ldr	r0, [r0, #8]
    44d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44dc:	movw	r1, #0
    44e0:	movt	r1, #0
    44e4:	ldr	r3, [sp, #180]	; 0xb4
    44e8:	bl	0 <coda_mem_record_add_field>
    44ec:	ldr	r1, [sp, #372]	; 0x174
    44f0:	str	r1, [sp, #232]	; 0xe8
    44f4:	ldr	r1, [sp, #180]	; 0xb4
    44f8:	strb	r1, [sp, #236]	; 0xec
    44fc:	ldr	r2, [sp, #184]	; 0xb8
    4500:	ldr	r3, [sp, #188]	; 0xbc
    4504:	ldr	ip, [r2, r3]
    4508:	ldr	ip, [ip, #28]
    450c:	ldr	lr, [fp, #-16]
    4510:	ldr	r2, [lr, #4]
    4514:	str	r0, [sp, #160]	; 0xa0
    4518:	mov	r0, ip
    451c:	movw	r1, #0
    4520:	ldr	r3, [sp, #192]	; 0xc0
    4524:	bl	0 <coda_mem_string_new>
    4528:	str	r0, [fp, #-24]	; 0xffffffe8
    452c:	ldr	r0, [fp, #-16]
    4530:	ldr	r0, [r0, #8]
    4534:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4538:	movw	r1, #0
    453c:	movt	r1, #0
    4540:	movw	r3, #0
    4544:	bl	0 <coda_mem_record_add_field>
    4548:	ldr	r1, [fp, #-16]
    454c:	ldr	r1, [r1]
    4550:	str	r0, [sp, #156]	; 0x9c
    4554:	mov	r0, r1
    4558:	bl	0 <ftell>
    455c:	add	r1, sp, #316	; 0x13c
    4560:	ldr	r2, [fp, #-16]
    4564:	str	r0, [r2, #52]	; 0x34
    4568:	ldr	r0, [fp, #-16]
    456c:	ldr	r2, [r0, #48]	; 0x30
    4570:	add	r2, r2, #1
    4574:	str	r2, [r0, #48]	; 0x30
    4578:	ldr	r0, [fp, #-16]
    457c:	ldr	r0, [r0]
    4580:	bl	7f44 <get_line>
    4584:	str	r0, [sp, #228]	; 0xe4
    4588:	ldr	r0, [sp, #228]	; 0xe4
    458c:	cmp	r0, #0
    4590:	bge	45a0 <read_header+0x470>
    4594:	mvn	r0, #0
    4598:	str	r0, [fp, #-12]
    459c:	b	5534 <read_header+0x1404>
    45a0:	ldr	r0, [sp, #228]	; 0xe4
    45a4:	cmp	r0, #60	; 0x3c
    45a8:	bge	45ec <read_header+0x4bc>
    45ac:	ldr	r2, [sp, #228]	; 0xe4
    45b0:	ldr	r0, [fp, #-16]
    45b4:	ldr	r3, [r0, #48]	; 0x30
    45b8:	ldr	r0, [fp, #-16]
    45bc:	ldr	r0, [r0, #52]	; 0x34
    45c0:	mvn	r1, #21
    45c4:	str	r0, [sp, #152]	; 0x98
    45c8:	mov	r0, r1
    45cc:	movw	r1, #0
    45d0:	movt	r1, #0
    45d4:	ldr	ip, [sp, #152]	; 0x98
    45d8:	str	ip, [sp]
    45dc:	bl	0 <coda_set_error>
    45e0:	mvn	r0, #0
    45e4:	str	r0, [fp, #-12]
    45e8:	b	5534 <read_header+0x1404>
    45ec:	add	r0, sp, #316	; 0x13c
    45f0:	movw	r1, #0
    45f4:	movt	r1, #0
    45f8:	mov	r2, #3
    45fc:	bl	0 <memcmp>
    4600:	cmp	r0, #0
    4604:	beq	4634 <read_header+0x504>
    4608:	ldr	r0, [fp, #-16]
    460c:	ldr	r2, [r0, #48]	; 0x30
    4610:	ldr	r0, [fp, #-16]
    4614:	ldr	r3, [r0, #52]	; 0x34
    4618:	mvn	r0, #21
    461c:	movw	r1, #0
    4620:	movt	r1, #0
    4624:	bl	0 <coda_set_error>
    4628:	mvn	r0, #0
    462c:	str	r0, [fp, #-12]
    4630:	b	5534 <read_header+0x1404>
    4634:	add	r0, sp, #316	; 0x13c
    4638:	add	r0, r0, #3
    463c:	movw	r1, #4
    4640:	add	r2, sp, #296	; 0x128
    4644:	movw	r3, #0
    4648:	bl	0 <coda_ascii_parse_int64>
    464c:	cmp	r0, #0
    4650:	bge	4680 <read_header+0x550>
    4654:	ldr	r0, [fp, #-16]
    4658:	ldr	r1, [r0, #48]	; 0x30
    465c:	ldr	r0, [fp, #-16]
    4660:	ldr	r0, [r0, #52]	; 0x34
    4664:	add	r2, r0, #3
    4668:	movw	r0, #0
    466c:	movt	r0, #0
    4670:	bl	0 <coda_add_error_message>
    4674:	mvn	r0, #0
    4678:	str	r0, [fp, #-12]
    467c:	b	5534 <read_header+0x1404>
    4680:	ldr	r0, [pc, #3768]	; 5540 <read_header+0x1410>
    4684:	str	r0, [sp, #148]	; 0x94
    4688:	bl	0 <__aeabi_read_tp>
    468c:	ldr	r1, [sp, #148]	; 0x94
    4690:	ldr	r0, [r0, r1]
    4694:	ldr	r0, [r0, #32]
    4698:	ldr	r1, [fp, #-16]
    469c:	ldr	r2, [r1, #4]
    46a0:	add	lr, sp, #256	; 0x100
    46a4:	ldrh	r1, [lr, #40]	; 0x28
    46a8:	movw	r3, #0
    46ac:	str	r1, [sp, #144]	; 0x90
    46b0:	mov	r1, r3
    46b4:	ldr	r3, [sp, #144]	; 0x90
    46b8:	sxth	r3, r3
    46bc:	bl	0 <coda_mem_int16_new>
    46c0:	str	r0, [fp, #-24]	; 0xffffffe8
    46c4:	ldr	r0, [fp, #-16]
    46c8:	ldr	r0, [r0, #8]
    46cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    46d0:	movw	r1, #0
    46d4:	movt	r1, #0
    46d8:	movw	r3, #0
    46dc:	bl	0 <coda_mem_record_add_field>
    46e0:	add	r1, sp, #316	; 0x13c
    46e4:	add	r1, r1, #8
    46e8:	str	r0, [sp, #140]	; 0x8c
    46ec:	mov	r0, r1
    46f0:	movw	r1, #15
    46f4:	add	r2, sp, #304	; 0x130
    46f8:	movw	r3, #0
    46fc:	bl	0 <coda_ascii_parse_double>
    4700:	cmp	r0, #0
    4704:	bge	4734 <read_header+0x604>
    4708:	ldr	r0, [fp, #-16]
    470c:	ldr	r1, [r0, #48]	; 0x30
    4710:	ldr	r0, [fp, #-16]
    4714:	ldr	r0, [r0, #52]	; 0x34
    4718:	add	r2, r0, #8
    471c:	movw	r0, #0
    4720:	movt	r0, #0
    4724:	bl	0 <coda_add_error_message>
    4728:	mvn	r0, #0
    472c:	str	r0, [fp, #-12]
    4730:	b	5534 <read_header+0x1404>
    4734:	ldr	r0, [pc, #3588]	; 5540 <read_header+0x1410>
    4738:	str	r0, [sp, #136]	; 0x88
    473c:	bl	0 <__aeabi_read_tp>
    4740:	ldr	r1, [sp, #136]	; 0x88
    4744:	ldr	r0, [r0, r1]
    4748:	ldr	r0, [r0, #36]	; 0x24
    474c:	ldr	r1, [fp, #-16]
    4750:	ldr	r2, [r1, #4]
    4754:	vldr	d0, [sp, #304]	; 0x130
    4758:	movw	r1, #0
    475c:	bl	0 <coda_mem_double_new>
    4760:	str	r0, [fp, #-24]	; 0xffffffe8
    4764:	ldr	r0, [fp, #-16]
    4768:	ldr	r0, [r0, #8]
    476c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4770:	movw	r1, #0
    4774:	movt	r1, #0
    4778:	movw	r3, #0
    477c:	bl	0 <coda_mem_record_add_field>
    4780:	add	r1, sp, #316	; 0x13c
    4784:	add	r1, r1, #24
    4788:	str	r0, [sp, #132]	; 0x84
    478c:	mov	r0, r1
    4790:	movw	r1, #14
    4794:	add	r2, sp, #304	; 0x130
    4798:	movw	r3, #0
    479c:	bl	0 <coda_ascii_parse_double>
    47a0:	cmp	r0, #0
    47a4:	bge	47d4 <read_header+0x6a4>
    47a8:	ldr	r0, [fp, #-16]
    47ac:	ldr	r1, [r0, #48]	; 0x30
    47b0:	ldr	r0, [fp, #-16]
    47b4:	ldr	r0, [r0, #52]	; 0x34
    47b8:	add	r2, r0, #24
    47bc:	movw	r0, #0
    47c0:	movt	r0, #0
    47c4:	bl	0 <coda_add_error_message>
    47c8:	mvn	r0, #0
    47cc:	str	r0, [fp, #-12]
    47d0:	b	5534 <read_header+0x1404>
    47d4:	ldr	r0, [pc, #3428]	; 5540 <read_header+0x1410>
    47d8:	str	r0, [sp, #128]	; 0x80
    47dc:	bl	0 <__aeabi_read_tp>
    47e0:	ldr	r1, [sp, #128]	; 0x80
    47e4:	ldr	r0, [r0, r1]
    47e8:	ldr	r0, [r0, #40]	; 0x28
    47ec:	ldr	r1, [fp, #-16]
    47f0:	ldr	r2, [r1, #4]
    47f4:	vldr	d0, [sp, #304]	; 0x130
    47f8:	movw	r1, #0
    47fc:	bl	0 <coda_mem_double_new>
    4800:	str	r0, [fp, #-24]	; 0xffffffe8
    4804:	ldr	r0, [fp, #-16]
    4808:	ldr	r0, [r0, #8]
    480c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4810:	movw	r1, #0
    4814:	movt	r1, #0
    4818:	movw	r3, #0
    481c:	bl	0 <coda_mem_record_add_field>
    4820:	add	r1, sp, #316	; 0x13c
    4824:	add	r1, r1, #39	; 0x27
    4828:	str	r0, [sp, #124]	; 0x7c
    482c:	mov	r0, r1
    4830:	movw	r1, #5
    4834:	add	r2, sp, #296	; 0x128
    4838:	movw	r3, #0
    483c:	bl	0 <coda_ascii_parse_int64>
    4840:	cmp	r0, #0
    4844:	bge	4874 <read_header+0x744>
    4848:	ldr	r0, [fp, #-16]
    484c:	ldr	r1, [r0, #48]	; 0x30
    4850:	ldr	r0, [fp, #-16]
    4854:	ldr	r0, [r0, #52]	; 0x34
    4858:	add	r2, r0, #39	; 0x27
    485c:	movw	r0, #0
    4860:	movt	r0, #0
    4864:	bl	0 <coda_add_error_message>
    4868:	mvn	r0, #0
    486c:	str	r0, [fp, #-12]
    4870:	b	5534 <read_header+0x1404>
    4874:	ldr	r0, [pc, #3268]	; 5540 <read_header+0x1410>
    4878:	str	r0, [sp, #120]	; 0x78
    487c:	bl	0 <__aeabi_read_tp>
    4880:	ldr	r1, [sp, #120]	; 0x78
    4884:	ldr	r0, [r0, r1]
    4888:	ldr	r0, [r0, #44]	; 0x2c
    488c:	ldr	r1, [fp, #-16]
    4890:	ldr	r2, [r1, #4]
    4894:	ldr	r3, [sp, #296]	; 0x128
    4898:	movw	r1, #0
    489c:	bl	0 <coda_mem_int32_new>
    48a0:	str	r0, [fp, #-24]	; 0xffffffe8
    48a4:	ldr	r0, [fp, #-16]
    48a8:	ldr	r0, [r0, #8]
    48ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48b0:	movw	r1, #0
    48b4:	movt	r1, #0
    48b8:	movw	r3, #0
    48bc:	bl	0 <coda_mem_record_add_field>
    48c0:	add	r1, sp, #316	; 0x13c
    48c4:	add	r1, r1, #45	; 0x2d
    48c8:	str	r0, [sp, #116]	; 0x74
    48cc:	mov	r0, r1
    48d0:	movw	r1, #15
    48d4:	add	r2, sp, #304	; 0x130
    48d8:	movw	r3, #0
    48dc:	bl	0 <coda_ascii_parse_double>
    48e0:	cmp	r0, #0
    48e4:	bge	4914 <read_header+0x7e4>
    48e8:	ldr	r0, [fp, #-16]
    48ec:	ldr	r1, [r0, #48]	; 0x30
    48f0:	ldr	r0, [fp, #-16]
    48f4:	ldr	r0, [r0, #52]	; 0x34
    48f8:	add	r2, r0, #45	; 0x2d
    48fc:	movw	r0, #0
    4900:	movt	r0, #0
    4904:	bl	0 <coda_add_error_message>
    4908:	mvn	r0, #0
    490c:	str	r0, [fp, #-12]
    4910:	b	5534 <read_header+0x1404>
    4914:	ldr	r0, [pc, #3108]	; 5540 <read_header+0x1410>
    4918:	str	r0, [sp, #112]	; 0x70
    491c:	bl	0 <__aeabi_read_tp>
    4920:	ldr	r1, [sp, #112]	; 0x70
    4924:	ldr	r0, [r0, r1]
    4928:	ldr	r0, [r0, #48]	; 0x30
    492c:	ldr	r1, [fp, #-16]
    4930:	ldr	r2, [r1, #4]
    4934:	vldr	d0, [sp, #304]	; 0x130
    4938:	movw	r1, #0
    493c:	bl	0 <coda_mem_double_new>
    4940:	str	r0, [fp, #-24]	; 0xffffffe8
    4944:	ldr	r0, [fp, #-16]
    4948:	ldr	r0, [r0, #8]
    494c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4950:	movw	r1, #0
    4954:	movt	r1, #0
    4958:	movw	r3, #0
    495c:	bl	0 <coda_mem_record_add_field>
    4960:	ldr	r1, [fp, #-16]
    4964:	ldr	r1, [r1]
    4968:	str	r0, [sp, #108]	; 0x6c
    496c:	mov	r0, r1
    4970:	bl	0 <ftell>
    4974:	add	r1, sp, #316	; 0x13c
    4978:	ldr	r2, [fp, #-16]
    497c:	str	r0, [r2, #52]	; 0x34
    4980:	ldr	r0, [fp, #-16]
    4984:	ldr	r2, [r0, #48]	; 0x30
    4988:	add	r2, r2, #1
    498c:	str	r2, [r0, #48]	; 0x30
    4990:	ldr	r0, [fp, #-16]
    4994:	ldr	r0, [r0]
    4998:	bl	7f44 <get_line>
    499c:	str	r0, [sp, #228]	; 0xe4
    49a0:	ldr	r0, [sp, #228]	; 0xe4
    49a4:	cmp	r0, #0
    49a8:	bge	49b8 <read_header+0x888>
    49ac:	mvn	r0, #0
    49b0:	str	r0, [fp, #-12]
    49b4:	b	5534 <read_header+0x1404>
    49b8:	ldr	r0, [sp, #228]	; 0xe4
    49bc:	cmp	r0, #60	; 0x3c
    49c0:	bge	4a04 <read_header+0x8d4>
    49c4:	ldr	r2, [sp, #228]	; 0xe4
    49c8:	ldr	r0, [fp, #-16]
    49cc:	ldr	r3, [r0, #48]	; 0x30
    49d0:	ldr	r0, [fp, #-16]
    49d4:	ldr	r0, [r0, #52]	; 0x34
    49d8:	mvn	r1, #21
    49dc:	str	r0, [sp, #104]	; 0x68
    49e0:	mov	r0, r1
    49e4:	movw	r1, #0
    49e8:	movt	r1, #0
    49ec:	ldr	ip, [sp, #104]	; 0x68
    49f0:	str	ip, [sp]
    49f4:	bl	0 <coda_set_error>
    49f8:	mvn	r0, #0
    49fc:	str	r0, [fp, #-12]
    4a00:	b	5534 <read_header+0x1404>
    4a04:	add	r0, sp, #316	; 0x13c
    4a08:	ldr	r0, [r0]
    4a0c:	movw	r1, #8235	; 0x202b
    4a10:	movt	r1, #8224	; 0x2020
    4a14:	subs	r0, r0, r1
    4a18:	movwne	r0, #1
    4a1c:	cmp	r0, #0
    4a20:	beq	4a50 <read_header+0x920>
    4a24:	ldr	r0, [fp, #-16]
    4a28:	ldr	r2, [r0, #48]	; 0x30
    4a2c:	ldr	r0, [fp, #-16]
    4a30:	ldr	r3, [r0, #52]	; 0x34
    4a34:	mvn	r0, #21
    4a38:	movw	r1, #0
    4a3c:	movt	r1, #0
    4a40:	bl	0 <coda_set_error>
    4a44:	mvn	r0, #0
    4a48:	str	r0, [fp, #-12]
    4a4c:	b	5534 <read_header+0x1404>
    4a50:	add	r0, sp, #316	; 0x13c
    4a54:	add	r0, r0, #4
    4a58:	movw	r1, #2
    4a5c:	add	r2, sp, #296	; 0x128
    4a60:	movw	r3, #0
    4a64:	bl	0 <coda_ascii_parse_int64>
    4a68:	cmp	r0, #0
    4a6c:	bge	4a9c <read_header+0x96c>
    4a70:	ldr	r0, [fp, #-16]
    4a74:	ldr	r1, [r0, #48]	; 0x30
    4a78:	ldr	r0, [fp, #-16]
    4a7c:	ldr	r0, [r0, #52]	; 0x34
    4a80:	add	r2, r0, #4
    4a84:	movw	r0, #0
    4a88:	movt	r0, #0
    4a8c:	bl	0 <coda_add_error_message>
    4a90:	mvn	r0, #0
    4a94:	str	r0, [fp, #-12]
    4a98:	b	5534 <read_header+0x1404>
    4a9c:	ldr	r0, [pc, #2716]	; 5540 <read_header+0x1410>
    4aa0:	str	r0, [sp, #100]	; 0x64
    4aa4:	bl	0 <__aeabi_read_tp>
    4aa8:	ldr	r1, [sp, #100]	; 0x64
    4aac:	ldr	r2, [r0, r1]
    4ab0:	ldr	r2, [r2, #52]	; 0x34
    4ab4:	ldr	r3, [fp, #-16]
    4ab8:	ldr	r3, [r3, #4]
    4abc:	ldrb	ip, [sp, #296]	; 0x128
    4ac0:	mov	lr, #0
    4ac4:	str	r0, [sp, #96]	; 0x60
    4ac8:	mov	r0, r2
    4acc:	mov	r1, lr
    4ad0:	mov	r2, r3
    4ad4:	mov	r3, ip
    4ad8:	str	lr, [sp, #92]	; 0x5c
    4adc:	bl	0 <coda_mem_uint8_new>
    4ae0:	str	r0, [fp, #-24]	; 0xffffffe8
    4ae4:	ldr	r0, [fp, #-16]
    4ae8:	ldr	r0, [r0, #8]
    4aec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4af0:	movw	r1, #0
    4af4:	movt	r1, #0
    4af8:	ldr	r3, [sp, #92]	; 0x5c
    4afc:	bl	0 <coda_mem_record_add_field>
    4b00:	ldr	r1, [sp, #296]	; 0x128
    4b04:	ldr	r2, [fp, #-16]
    4b08:	str	r1, [r2, #40]	; 0x28
    4b0c:	ldr	r1, [sp, #96]	; 0x60
    4b10:	ldr	r2, [sp, #100]	; 0x64
    4b14:	ldr	r3, [r1, r2]
    4b18:	ldr	r3, [r3, #60]	; 0x3c
    4b1c:	str	r0, [sp, #88]	; 0x58
    4b20:	mov	r0, r3
    4b24:	movw	r1, #0
    4b28:	bl	0 <coda_mem_array_new>
    4b2c:	str	r0, [fp, #-28]	; 0xffffffe4
    4b30:	movw	r0, #0
    4b34:	str	r0, [sp, #224]	; 0xe0
    4b38:	ldr	r0, [sp, #224]	; 0xe0
    4b3c:	cmp	r0, #85	; 0x55
    4b40:	bge	4d28 <read_header+0xbf8>
    4b44:	ldr	r0, [sp, #224]	; 0xe0
    4b48:	movw	r1, #30841	; 0x7879
    4b4c:	movt	r1, #30840	; 0x7878
    4b50:	smmul	r1, r0, r1
    4b54:	asr	r2, r1, #3
    4b58:	add	r1, r2, r1, lsr #31
    4b5c:	add	r1, r1, r1, lsl #4
    4b60:	sub	r0, r0, r1
    4b64:	cmp	r0, #0
    4b68:	bne	4c78 <read_header+0xb48>
    4b6c:	ldr	r0, [sp, #224]	; 0xe0
    4b70:	cmp	r0, #0
    4b74:	ble	4c78 <read_header+0xb48>
    4b78:	ldr	r0, [fp, #-16]
    4b7c:	ldr	r0, [r0]
    4b80:	bl	0 <ftell>
    4b84:	add	r1, sp, #316	; 0x13c
    4b88:	ldr	r2, [fp, #-16]
    4b8c:	str	r0, [r2, #52]	; 0x34
    4b90:	ldr	r0, [fp, #-16]
    4b94:	ldr	r2, [r0, #48]	; 0x30
    4b98:	add	r2, r2, #1
    4b9c:	str	r2, [r0, #48]	; 0x30
    4ba0:	ldr	r0, [fp, #-16]
    4ba4:	ldr	r0, [r0]
    4ba8:	bl	7f44 <get_line>
    4bac:	str	r0, [sp, #228]	; 0xe4
    4bb0:	ldr	r0, [sp, #228]	; 0xe4
    4bb4:	cmp	r0, #0
    4bb8:	bge	4bd0 <read_header+0xaa0>
    4bbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4bc0:	bl	0 <coda_dynamic_type_delete>
    4bc4:	mvn	r0, #0
    4bc8:	str	r0, [fp, #-12]
    4bcc:	b	5534 <read_header+0x1404>
    4bd0:	ldr	r0, [sp, #228]	; 0xe4
    4bd4:	cmp	r0, #60	; 0x3c
    4bd8:	bge	4c24 <read_header+0xaf4>
    4bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4be0:	bl	0 <coda_dynamic_type_delete>
    4be4:	ldr	r2, [sp, #228]	; 0xe4
    4be8:	ldr	r0, [fp, #-16]
    4bec:	ldr	r3, [r0, #48]	; 0x30
    4bf0:	ldr	r0, [fp, #-16]
    4bf4:	ldr	r0, [r0, #52]	; 0x34
    4bf8:	mvn	r1, #21
    4bfc:	str	r0, [sp, #84]	; 0x54
    4c00:	mov	r0, r1
    4c04:	movw	r1, #0
    4c08:	movt	r1, #0
    4c0c:	ldr	ip, [sp, #84]	; 0x54
    4c10:	str	ip, [sp]
    4c14:	bl	0 <coda_set_error>
    4c18:	mvn	r0, #0
    4c1c:	str	r0, [fp, #-12]
    4c20:	b	5534 <read_header+0x1404>
    4c24:	add	r0, sp, #316	; 0x13c
    4c28:	movw	r1, #0
    4c2c:	movt	r1, #0
    4c30:	mov	r2, #9
    4c34:	bl	0 <memcmp>
    4c38:	cmp	r0, #0
    4c3c:	beq	4c74 <read_header+0xb44>
    4c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4c44:	bl	0 <coda_dynamic_type_delete>
    4c48:	ldr	r0, [fp, #-16]
    4c4c:	ldr	r2, [r0, #48]	; 0x30
    4c50:	ldr	r0, [fp, #-16]
    4c54:	ldr	r3, [r0, #52]	; 0x34
    4c58:	mvn	r0, #21
    4c5c:	movw	r1, #0
    4c60:	movt	r1, #0
    4c64:	bl	0 <coda_set_error>
    4c68:	mvn	r0, #0
    4c6c:	str	r0, [fp, #-12]
    4c70:	b	5534 <read_header+0x1404>
    4c74:	b	4c78 <read_header+0xb48>
    4c78:	ldr	r0, [sp, #224]	; 0xe0
    4c7c:	ldr	r1, [fp, #-16]
    4c80:	ldr	r1, [r1, #40]	; 0x28
    4c84:	cmp	r0, r1
    4c88:	bge	4d14 <read_header+0xbe4>
    4c8c:	add	r3, sp, #232	; 0xe8
    4c90:	ldr	r0, [sp, #224]	; 0xe0
    4c94:	movw	r1, #30841	; 0x7879
    4c98:	movt	r1, #30840	; 0x7878
    4c9c:	smmul	r1, r0, r1
    4ca0:	asr	r2, r1, #3
    4ca4:	add	r1, r2, r1, lsr #31
    4ca8:	add	r1, r1, r1, lsl #4
    4cac:	sub	r0, r0, r1
    4cb0:	add	r0, r0, r0, lsl #1
    4cb4:	add	r1, sp, #316	; 0x13c
    4cb8:	add	r0, r0, r1
    4cbc:	ldrb	r1, [r0, #11]
    4cc0:	strb	r1, [sp, #234]	; 0xea
    4cc4:	ldrh	r0, [r0, #9]
    4cc8:	strh	r0, [sp, #232]	; 0xe8
    4ccc:	mov	r0, #0
    4cd0:	strb	r0, [sp, #235]	; 0xeb
    4cd4:	ldr	r0, [pc, #2148]	; 5540 <read_header+0x1410>
    4cd8:	str	r3, [sp, #80]	; 0x50
    4cdc:	str	r0, [sp, #76]	; 0x4c
    4ce0:	bl	0 <__aeabi_read_tp>
    4ce4:	ldr	r1, [sp, #76]	; 0x4c
    4ce8:	ldr	r0, [r0, r1]
    4cec:	ldr	r0, [r0, #56]	; 0x38
    4cf0:	ldr	r1, [fp, #-16]
    4cf4:	ldr	r2, [r1, #4]
    4cf8:	movw	r1, #0
    4cfc:	ldr	r3, [sp, #80]	; 0x50
    4d00:	bl	0 <coda_mem_string_new>
    4d04:	str	r0, [fp, #-24]	; 0xffffffe8
    4d08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4d10:	bl	0 <coda_mem_array_add_element>
    4d14:	b	4d18 <read_header+0xbe8>
    4d18:	ldr	r0, [sp, #224]	; 0xe0
    4d1c:	add	r0, r0, #1
    4d20:	str	r0, [sp, #224]	; 0xe0
    4d24:	b	4b38 <read_header+0xa08>
    4d28:	ldr	r0, [fp, #-16]
    4d2c:	ldr	r0, [r0, #8]
    4d30:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4d34:	movw	r1, #0
    4d38:	movt	r1, #0
    4d3c:	mov	r3, #0
    4d40:	bl	0 <coda_mem_record_add_field>
    4d44:	ldr	r1, [pc, #2036]	; 5540 <read_header+0x1410>
    4d48:	str	r0, [sp, #72]	; 0x48
    4d4c:	str	r1, [sp, #68]	; 0x44
    4d50:	bl	0 <__aeabi_read_tp>
    4d54:	ldr	r1, [sp, #68]	; 0x44
    4d58:	ldr	r0, [r0, r1]
    4d5c:	ldr	r0, [r0, #68]	; 0x44
    4d60:	movw	r1, #0
    4d64:	bl	0 <coda_mem_array_new>
    4d68:	str	r0, [fp, #-28]	; 0xffffffe4
    4d6c:	movw	r0, #0
    4d70:	str	r0, [sp, #224]	; 0xe0
    4d74:	ldr	r0, [sp, #224]	; 0xe0
    4d78:	cmp	r0, #85	; 0x55
    4d7c:	bge	4fbc <read_header+0xe8c>
    4d80:	ldr	r0, [sp, #224]	; 0xe0
    4d84:	movw	r1, #30841	; 0x7879
    4d88:	movt	r1, #30840	; 0x7878
    4d8c:	smmul	r1, r0, r1
    4d90:	asr	r2, r1, #3
    4d94:	add	r1, r2, r1, lsr #31
    4d98:	add	r1, r1, r1, lsl #4
    4d9c:	sub	r0, r0, r1
    4da0:	cmp	r0, #0
    4da4:	bne	4ea8 <read_header+0xd78>
    4da8:	ldr	r0, [fp, #-16]
    4dac:	ldr	r0, [r0]
    4db0:	bl	0 <ftell>
    4db4:	add	r1, sp, #316	; 0x13c
    4db8:	ldr	r2, [fp, #-16]
    4dbc:	str	r0, [r2, #52]	; 0x34
    4dc0:	ldr	r0, [fp, #-16]
    4dc4:	ldr	r2, [r0, #48]	; 0x30
    4dc8:	add	r2, r2, #1
    4dcc:	str	r2, [r0, #48]	; 0x30
    4dd0:	ldr	r0, [fp, #-16]
    4dd4:	ldr	r0, [r0]
    4dd8:	bl	7f44 <get_line>
    4ddc:	str	r0, [sp, #228]	; 0xe4
    4de0:	ldr	r0, [sp, #228]	; 0xe4
    4de4:	cmp	r0, #0
    4de8:	bge	4e00 <read_header+0xcd0>
    4dec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4df0:	bl	0 <coda_dynamic_type_delete>
    4df4:	mvn	r0, #0
    4df8:	str	r0, [fp, #-12]
    4dfc:	b	5534 <read_header+0x1404>
    4e00:	ldr	r0, [sp, #228]	; 0xe4
    4e04:	cmp	r0, #60	; 0x3c
    4e08:	bge	4e54 <read_header+0xd24>
    4e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4e10:	bl	0 <coda_dynamic_type_delete>
    4e14:	ldr	r2, [sp, #228]	; 0xe4
    4e18:	ldr	r0, [fp, #-16]
    4e1c:	ldr	r3, [r0, #48]	; 0x30
    4e20:	ldr	r0, [fp, #-16]
    4e24:	ldr	r0, [r0, #52]	; 0x34
    4e28:	mvn	r1, #21
    4e2c:	str	r0, [sp, #64]	; 0x40
    4e30:	mov	r0, r1
    4e34:	movw	r1, #0
    4e38:	movt	r1, #0
    4e3c:	ldr	ip, [sp, #64]	; 0x40
    4e40:	str	ip, [sp]
    4e44:	bl	0 <coda_set_error>
    4e48:	mvn	r0, #0
    4e4c:	str	r0, [fp, #-12]
    4e50:	b	5534 <read_header+0x1404>
    4e54:	add	r0, sp, #316	; 0x13c
    4e58:	movw	r1, #0
    4e5c:	movt	r1, #0
    4e60:	mov	r2, #9
    4e64:	bl	0 <memcmp>
    4e68:	cmp	r0, #0
    4e6c:	beq	4ea4 <read_header+0xd74>
    4e70:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4e74:	bl	0 <coda_dynamic_type_delete>
    4e78:	ldr	r0, [fp, #-16]
    4e7c:	ldr	r2, [r0, #48]	; 0x30
    4e80:	ldr	r0, [fp, #-16]
    4e84:	ldr	r3, [r0, #52]	; 0x34
    4e88:	mvn	r0, #21
    4e8c:	movw	r1, #0
    4e90:	movt	r1, #0
    4e94:	bl	0 <coda_set_error>
    4e98:	mvn	r0, #0
    4e9c:	str	r0, [fp, #-12]
    4ea0:	b	5534 <read_header+0x1404>
    4ea4:	b	4ea8 <read_header+0xd78>
    4ea8:	ldr	r0, [sp, #224]	; 0xe0
    4eac:	ldr	r1, [fp, #-16]
    4eb0:	ldr	r1, [r1, #40]	; 0x28
    4eb4:	cmp	r0, r1
    4eb8:	bge	4fa8 <read_header+0xe78>
    4ebc:	ldr	r0, [sp, #224]	; 0xe0
    4ec0:	movw	r1, #30841	; 0x7879
    4ec4:	movt	r1, #30840	; 0x7878
    4ec8:	smmul	r1, r0, r1
    4ecc:	asr	r2, r1, #3
    4ed0:	add	r1, r2, r1, lsr #31
    4ed4:	add	r1, r1, r1, lsl #4
    4ed8:	sub	r0, r0, r1
    4edc:	movw	r1, #3
    4ee0:	mul	r0, r0, r1
    4ee4:	add	r0, r0, #9
    4ee8:	add	r2, sp, #316	; 0x13c
    4eec:	add	r0, r2, r0
    4ef0:	add	r2, sp, #296	; 0x128
    4ef4:	movw	r3, #0
    4ef8:	bl	0 <coda_ascii_parse_int64>
    4efc:	cmp	r0, #0
    4f00:	bge	4f58 <read_header+0xe28>
    4f04:	ldr	r0, [fp, #-16]
    4f08:	ldr	r1, [r0, #48]	; 0x30
    4f0c:	ldr	r0, [r0, #52]	; 0x34
    4f10:	add	r0, r0, #9
    4f14:	ldr	r2, [sp, #224]	; 0xe0
    4f18:	movw	r3, #30841	; 0x7879
    4f1c:	movt	r3, #30840	; 0x7878
    4f20:	smmul	r3, r2, r3
    4f24:	asr	ip, r3, #3
    4f28:	add	r3, ip, r3, lsr #31
    4f2c:	add	r3, r3, r3, lsl #4
    4f30:	sub	r2, r2, r3
    4f34:	movw	r3, #3
    4f38:	mul	r2, r2, r3
    4f3c:	add	r2, r0, r2
    4f40:	movw	r0, #0
    4f44:	movt	r0, #0
    4f48:	bl	0 <coda_add_error_message>
    4f4c:	mvn	r0, #0
    4f50:	str	r0, [fp, #-12]
    4f54:	b	5534 <read_header+0x1404>
    4f58:	ldr	r0, [pc, #1504]	; 5540 <read_header+0x1410>
    4f5c:	str	r0, [sp, #60]	; 0x3c
    4f60:	bl	0 <__aeabi_read_tp>
    4f64:	ldr	r1, [sp, #60]	; 0x3c
    4f68:	ldr	r0, [r0, r1]
    4f6c:	ldr	r0, [r0, #64]	; 0x40
    4f70:	ldr	r1, [fp, #-16]
    4f74:	ldr	r2, [r1, #4]
    4f78:	add	lr, sp, #256	; 0x100
    4f7c:	ldrh	r1, [lr, #40]	; 0x28
    4f80:	movw	r3, #0
    4f84:	str	r1, [sp, #56]	; 0x38
    4f88:	mov	r1, r3
    4f8c:	ldr	r3, [sp, #56]	; 0x38
    4f90:	sxth	r3, r3
    4f94:	bl	0 <coda_mem_int16_new>
    4f98:	str	r0, [fp, #-24]	; 0xffffffe8
    4f9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4fa4:	bl	0 <coda_mem_array_add_element>
    4fa8:	b	4fac <read_header+0xe7c>
    4fac:	ldr	r0, [sp, #224]	; 0xe0
    4fb0:	add	r0, r0, #1
    4fb4:	str	r0, [sp, #224]	; 0xe0
    4fb8:	b	4d74 <read_header+0xc44>
    4fbc:	ldr	r0, [fp, #-16]
    4fc0:	ldr	r0, [r0, #8]
    4fc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4fc8:	movw	r1, #0
    4fcc:	movt	r1, #0
    4fd0:	movw	r3, #0
    4fd4:	bl	0 <coda_mem_record_add_field>
    4fd8:	ldr	r1, [fp, #-16]
    4fdc:	ldr	r1, [r1]
    4fe0:	str	r0, [sp, #52]	; 0x34
    4fe4:	mov	r0, r1
    4fe8:	bl	0 <ftell>
    4fec:	add	r1, sp, #316	; 0x13c
    4ff0:	ldr	r2, [fp, #-16]
    4ff4:	str	r0, [r2, #52]	; 0x34
    4ff8:	ldr	r0, [fp, #-16]
    4ffc:	ldr	r2, [r0, #48]	; 0x30
    5000:	add	r2, r2, #1
    5004:	str	r2, [r0, #48]	; 0x30
    5008:	ldr	r0, [fp, #-16]
    500c:	ldr	r0, [r0]
    5010:	bl	7f44 <get_line>
    5014:	str	r0, [sp, #228]	; 0xe4
    5018:	ldr	r0, [sp, #228]	; 0xe4
    501c:	cmp	r0, #0
    5020:	bge	5030 <read_header+0xf00>
    5024:	mvn	r0, #0
    5028:	str	r0, [fp, #-12]
    502c:	b	5534 <read_header+0x1404>
    5030:	ldr	r0, [sp, #228]	; 0xe4
    5034:	cmp	r0, #60	; 0x3c
    5038:	bge	507c <read_header+0xf4c>
    503c:	ldr	r2, [sp, #228]	; 0xe4
    5040:	ldr	r0, [fp, #-16]
    5044:	ldr	r3, [r0, #48]	; 0x30
    5048:	ldr	r0, [fp, #-16]
    504c:	ldr	r0, [r0, #52]	; 0x34
    5050:	mvn	r1, #21
    5054:	str	r0, [sp, #48]	; 0x30
    5058:	mov	r0, r1
    505c:	movw	r1, #0
    5060:	movt	r1, #0
    5064:	ldr	ip, [sp, #48]	; 0x30
    5068:	str	ip, [sp]
    506c:	bl	0 <coda_set_error>
    5070:	mvn	r0, #0
    5074:	str	r0, [fp, #-12]
    5078:	b	5534 <read_header+0x1404>
    507c:	add	r0, sp, #316	; 0x13c
    5080:	movw	r1, #0
    5084:	movt	r1, #0
    5088:	mov	r2, #3
    508c:	bl	0 <memcmp>
    5090:	cmp	r0, #0
    5094:	beq	50c4 <read_header+0xf94>
    5098:	ldr	r0, [fp, #-16]
    509c:	ldr	r2, [r0, #48]	; 0x30
    50a0:	ldr	r0, [fp, #-16]
    50a4:	ldr	r3, [r0, #52]	; 0x34
    50a8:	mvn	r0, #21
    50ac:	movw	r1, #0
    50b0:	movt	r1, #0
    50b4:	bl	0 <coda_set_error>
    50b8:	mvn	r0, #0
    50bc:	str	r0, [fp, #-12]
    50c0:	b	5534 <read_header+0x1404>
    50c4:	add	r3, sp, #232	; 0xe8
    50c8:	add	lr, sp, #256	; 0x100
    50cc:	ldrh	r0, [lr, #63]	; 0x3f
    50d0:	strh	r0, [sp, #232]	; 0xe8
    50d4:	mov	r0, #0
    50d8:	strb	r0, [sp, #234]	; 0xea
    50dc:	ldr	r1, [pc, #1116]	; 5540 <read_header+0x1410>
    50e0:	str	r3, [sp, #44]	; 0x2c
    50e4:	str	r0, [sp, #40]	; 0x28
    50e8:	str	r1, [sp, #36]	; 0x24
    50ec:	bl	0 <__aeabi_read_tp>
    50f0:	ldr	r1, [sp, #36]	; 0x24
    50f4:	ldr	r2, [r0, r1]
    50f8:	ldr	r2, [r2, #72]	; 0x48
    50fc:	ldr	r3, [fp, #-16]
    5100:	ldr	r3, [r3, #4]
    5104:	add	ip, sp, #232	; 0xe8
    5108:	str	r0, [sp, #32]
    510c:	mov	r0, r2
    5110:	ldr	r1, [sp, #40]	; 0x28
    5114:	mov	r2, r3
    5118:	mov	r3, ip
    511c:	bl	0 <coda_mem_string_new>
    5120:	str	r0, [fp, #-24]	; 0xffffffe8
    5124:	ldr	r0, [fp, #-16]
    5128:	ldr	r0, [r0, #8]
    512c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5130:	movw	r1, #0
    5134:	movt	r1, #0
    5138:	ldr	r3, [sp, #40]	; 0x28
    513c:	bl	0 <coda_mem_record_add_field>
    5140:	ldrb	r1, [sp, #327]	; 0x147
    5144:	strb	r1, [sp, #234]	; 0xea
    5148:	add	lr, sp, #256	; 0x100
    514c:	ldrh	r1, [lr, #69]	; 0x45
    5150:	strh	r1, [sp, #232]	; 0xe8
    5154:	ldr	r1, [sp, #40]	; 0x28
    5158:	strb	r1, [sp, #235]	; 0xeb
    515c:	ldr	r2, [sp, #32]
    5160:	ldr	r3, [sp, #36]	; 0x24
    5164:	ldr	ip, [r2, r3]
    5168:	ldr	ip, [ip, #76]	; 0x4c
    516c:	ldr	lr, [fp, #-16]
    5170:	ldr	r2, [lr, #4]
    5174:	str	r0, [sp, #28]
    5178:	mov	r0, ip
    517c:	movw	r1, #0
    5180:	ldr	r3, [sp, #44]	; 0x2c
    5184:	bl	0 <coda_mem_string_new>
    5188:	str	r0, [fp, #-24]	; 0xffffffe8
    518c:	ldr	r0, [fp, #-16]
    5190:	ldr	r0, [r0, #8]
    5194:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5198:	movw	r1, #0
    519c:	movt	r1, #0
    51a0:	movw	r3, #0
    51a4:	bl	0 <coda_mem_record_add_field>
    51a8:	ldr	r1, [fp, #-16]
    51ac:	ldr	r1, [r1]
    51b0:	str	r0, [sp, #24]
    51b4:	mov	r0, r1
    51b8:	bl	0 <ftell>
    51bc:	add	r1, sp, #316	; 0x13c
    51c0:	ldr	r2, [fp, #-16]
    51c4:	str	r0, [r2, #52]	; 0x34
    51c8:	ldr	r0, [fp, #-16]
    51cc:	ldr	r2, [r0, #48]	; 0x30
    51d0:	add	r2, r2, #1
    51d4:	str	r2, [r0, #48]	; 0x30
    51d8:	ldr	r0, [fp, #-16]
    51dc:	ldr	r0, [r0]
    51e0:	bl	7f44 <get_line>
    51e4:	str	r0, [sp, #228]	; 0xe4
    51e8:	ldr	r0, [sp, #228]	; 0xe4
    51ec:	cmp	r0, #0
    51f0:	bge	5204 <read_header+0x10d4>
    51f4:	mvn	r0, #0
    51f8:	str	r0, [fp, #-12]
    51fc:	b	5534 <read_header+0x1404>
    5200:	.word	0x00000000
    5204:	ldr	r0, [sp, #228]	; 0xe4
    5208:	cmp	r0, #60	; 0x3c
    520c:	bge	5250 <read_header+0x1120>
    5210:	ldr	r2, [sp, #228]	; 0xe4
    5214:	ldr	r0, [fp, #-16]
    5218:	ldr	r3, [r0, #48]	; 0x30
    521c:	ldr	r0, [fp, #-16]
    5220:	ldr	r0, [r0, #52]	; 0x34
    5224:	mvn	r1, #21
    5228:	str	r0, [sp, #20]
    522c:	mov	r0, r1
    5230:	movw	r1, #0
    5234:	movt	r1, #0
    5238:	ldr	ip, [sp, #20]
    523c:	str	ip, [sp]
    5240:	bl	0 <coda_set_error>
    5244:	mvn	r0, #0
    5248:	str	r0, [fp, #-12]
    524c:	b	5534 <read_header+0x1404>
    5250:	add	r0, sp, #316	; 0x13c
    5254:	movw	r1, #0
    5258:	movt	r1, #0
    525c:	mov	r2, #3
    5260:	bl	0 <memcmp>
    5264:	cmp	r0, #0
    5268:	beq	5298 <read_header+0x1168>
    526c:	ldr	r0, [fp, #-16]
    5270:	ldr	r2, [r0, #48]	; 0x30
    5274:	ldr	r0, [fp, #-16]
    5278:	ldr	r3, [r0, #52]	; 0x34
    527c:	mvn	r0, #21
    5280:	movw	r1, #0
    5284:	movt	r1, #0
    5288:	bl	0 <coda_set_error>
    528c:	mvn	r0, #0
    5290:	str	r0, [fp, #-12]
    5294:	b	5534 <read_header+0x1404>
    5298:	ldr	r0, [fp, #-16]
    529c:	ldr	r0, [r0]
    52a0:	bl	0 <ftell>
    52a4:	add	r1, sp, #316	; 0x13c
    52a8:	ldr	r2, [fp, #-16]
    52ac:	str	r0, [r2, #52]	; 0x34
    52b0:	ldr	r0, [fp, #-16]
    52b4:	ldr	r2, [r0, #48]	; 0x30
    52b8:	add	r2, r2, #1
    52bc:	str	r2, [r0, #48]	; 0x30
    52c0:	ldr	r0, [fp, #-16]
    52c4:	ldr	r0, [r0]
    52c8:	bl	7f44 <get_line>
    52cc:	str	r0, [sp, #228]	; 0xe4
    52d0:	ldr	r0, [sp, #228]	; 0xe4
    52d4:	cmp	r0, #0
    52d8:	bge	52e8 <read_header+0x11b8>
    52dc:	mvn	r0, #0
    52e0:	str	r0, [fp, #-12]
    52e4:	b	5534 <read_header+0x1404>
    52e8:	ldr	r0, [sp, #228]	; 0xe4
    52ec:	cmp	r0, #60	; 0x3c
    52f0:	bge	5334 <read_header+0x1204>
    52f4:	ldr	r2, [sp, #228]	; 0xe4
    52f8:	ldr	r0, [fp, #-16]
    52fc:	ldr	r3, [r0, #48]	; 0x30
    5300:	ldr	r0, [fp, #-16]
    5304:	ldr	r0, [r0, #52]	; 0x34
    5308:	mvn	r1, #21
    530c:	str	r0, [sp, #16]
    5310:	mov	r0, r1
    5314:	movw	r1, #0
    5318:	movt	r1, #0
    531c:	ldr	ip, [sp, #16]
    5320:	str	ip, [sp]
    5324:	bl	0 <coda_set_error>
    5328:	mvn	r0, #0
    532c:	str	r0, [fp, #-12]
    5330:	b	5534 <read_header+0x1404>
    5334:	add	r0, sp, #316	; 0x13c
    5338:	movw	r1, #0
    533c:	movt	r1, #0
    5340:	mov	r2, #3
    5344:	bl	0 <memcmp>
    5348:	cmp	r0, #0
    534c:	beq	537c <read_header+0x124c>
    5350:	ldr	r0, [fp, #-16]
    5354:	ldr	r2, [r0, #48]	; 0x30
    5358:	ldr	r0, [fp, #-16]
    535c:	ldr	r3, [r0, #52]	; 0x34
    5360:	mvn	r0, #21
    5364:	movw	r1, #0
    5368:	movt	r1, #0
    536c:	bl	0 <coda_set_error>
    5370:	mvn	r0, #0
    5374:	str	r0, [fp, #-12]
    5378:	b	5534 <read_header+0x1404>
    537c:	add	r0, sp, #316	; 0x13c
    5380:	add	r0, r0, #3
    5384:	movw	r1, #10
    5388:	add	r2, sp, #304	; 0x130
    538c:	movw	r3, #0
    5390:	bl	0 <coda_ascii_parse_double>
    5394:	cmp	r0, #0
    5398:	bge	53c8 <read_header+0x1298>
    539c:	ldr	r0, [fp, #-16]
    53a0:	ldr	r1, [r0, #48]	; 0x30
    53a4:	ldr	r0, [fp, #-16]
    53a8:	ldr	r0, [r0, #52]	; 0x34
    53ac:	add	r2, r0, #3
    53b0:	movw	r0, #0
    53b4:	movt	r0, #0
    53b8:	bl	0 <coda_add_error_message>
    53bc:	mvn	r0, #0
    53c0:	str	r0, [fp, #-12]
    53c4:	b	5534 <read_header+0x1404>
    53c8:	ldr	r0, [pc, #368]	; 5540 <read_header+0x1410>
    53cc:	str	r0, [sp, #12]
    53d0:	bl	0 <__aeabi_read_tp>
    53d4:	ldr	r1, [sp, #12]
    53d8:	ldr	r0, [r0, r1]
    53dc:	ldr	r0, [r0, #80]	; 0x50
    53e0:	ldr	r1, [fp, #-16]
    53e4:	ldr	r2, [r1, #4]
    53e8:	vldr	d0, [sp, #304]	; 0x130
    53ec:	movw	r1, #0
    53f0:	bl	0 <coda_mem_double_new>
    53f4:	str	r0, [fp, #-24]	; 0xffffffe8
    53f8:	ldr	r0, [fp, #-16]
    53fc:	ldr	r0, [r0, #8]
    5400:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5404:	movw	r1, #0
    5408:	movt	r1, #0
    540c:	movw	r3, #0
    5410:	bl	0 <coda_mem_record_add_field>
    5414:	add	r1, sp, #316	; 0x13c
    5418:	add	r1, r1, #14
    541c:	str	r0, [sp, #8]
    5420:	mov	r0, r1
    5424:	movw	r1, #12
    5428:	add	r2, sp, #304	; 0x130
    542c:	movw	r3, #0
    5430:	bl	0 <coda_ascii_parse_double>
    5434:	cmp	r0, #0
    5438:	bge	5468 <read_header+0x1338>
    543c:	ldr	r0, [fp, #-16]
    5440:	ldr	r1, [r0, #48]	; 0x30
    5444:	ldr	r0, [fp, #-16]
    5448:	ldr	r0, [r0, #52]	; 0x34
    544c:	add	r2, r0, #14
    5450:	movw	r0, #0
    5454:	movt	r0, #0
    5458:	bl	0 <coda_add_error_message>
    545c:	mvn	r0, #0
    5460:	str	r0, [fp, #-12]
    5464:	b	5534 <read_header+0x1404>
    5468:	ldr	r0, [pc, #208]	; 5540 <read_header+0x1410>
    546c:	str	r0, [sp, #4]
    5470:	bl	0 <__aeabi_read_tp>
    5474:	ldr	r1, [sp, #4]
    5478:	ldr	r0, [r0, r1]
    547c:	ldr	r0, [r0, #84]	; 0x54
    5480:	ldr	r1, [fp, #-16]
    5484:	ldr	r2, [r1, #4]
    5488:	vldr	d0, [sp, #304]	; 0x130
    548c:	movw	r1, #0
    5490:	bl	0 <coda_mem_double_new>
    5494:	str	r0, [fp, #-24]	; 0xffffffe8
    5498:	ldr	r0, [fp, #-16]
    549c:	ldr	r0, [r0, #8]
    54a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    54a4:	movw	r1, #0
    54a8:	movt	r1, #0
    54ac:	movw	r3, #0
    54b0:	bl	0 <coda_mem_record_add_field>
    54b4:	movw	r1, #0
    54b8:	str	r1, [sp, #224]	; 0xe0
    54bc:	ldr	r0, [sp, #224]	; 0xe0
    54c0:	cmp	r0, #7
    54c4:	bge	552c <read_header+0x13fc>
    54c8:	ldr	r0, [fp, #-16]
    54cc:	ldr	r0, [r0]
    54d0:	bl	0 <ftell>
    54d4:	add	r1, sp, #316	; 0x13c
    54d8:	ldr	r2, [fp, #-16]
    54dc:	str	r0, [r2, #52]	; 0x34
    54e0:	ldr	r0, [fp, #-16]
    54e4:	ldr	r2, [r0, #48]	; 0x30
    54e8:	add	r2, r2, #1
    54ec:	str	r2, [r0, #48]	; 0x30
    54f0:	ldr	r0, [fp, #-16]
    54f4:	ldr	r0, [r0]
    54f8:	bl	7f44 <get_line>
    54fc:	str	r0, [sp, #228]	; 0xe4
    5500:	ldr	r0, [sp, #228]	; 0xe4
    5504:	cmp	r0, #0
    5508:	bge	5518 <read_header+0x13e8>
    550c:	mvn	r0, #0
    5510:	str	r0, [fp, #-12]
    5514:	b	5534 <read_header+0x1404>
    5518:	b	551c <read_header+0x13ec>
    551c:	ldr	r0, [sp, #224]	; 0xe0
    5520:	add	r0, r0, #1
    5524:	str	r0, [sp, #224]	; 0xe0
    5528:	b	54bc <read_header+0x138c>
    552c:	movw	r0, #0
    5530:	str	r0, [fp, #-12]
    5534:	ldr	r0, [fp, #-12]
    5538:	sub	sp, fp, #8
    553c:	pop	{r4, r5, fp, pc}
    5540:	.word	0x00000000

00005544 <ingest_info_cleanup>:
    5544:	push	{fp, lr}
    5548:	mov	fp, sp
    554c:	sub	sp, sp, #8
    5550:	str	r0, [sp, #4]
    5554:	ldr	r0, [sp, #4]
    5558:	ldr	r0, [r0]
    555c:	movw	r1, #0
    5560:	cmp	r0, r1
    5564:	beq	5574 <ingest_info_cleanup+0x30>
    5568:	ldr	r0, [sp, #4]
    556c:	ldr	r0, [r0]
    5570:	bl	0 <fclose>
    5574:	ldr	r0, [sp, #4]
    5578:	ldr	r0, [r0, #8]
    557c:	movw	r1, #0
    5580:	cmp	r0, r1
    5584:	beq	5594 <ingest_info_cleanup+0x50>
    5588:	ldr	r0, [sp, #4]
    558c:	ldr	r0, [r0, #8]
    5590:	bl	0 <coda_dynamic_type_delete>
    5594:	ldr	r0, [sp, #4]
    5598:	ldr	r0, [r0, #12]
    559c:	movw	r1, #0
    55a0:	cmp	r0, r1
    55a4:	beq	55b4 <ingest_info_cleanup+0x70>
    55a8:	ldr	r0, [sp, #4]
    55ac:	ldr	r0, [r0, #12]
    55b0:	bl	0 <coda_dynamic_type_delete>
    55b4:	ldr	r0, [sp, #4]
    55b8:	ldr	r0, [r0, #16]
    55bc:	movw	r1, #0
    55c0:	cmp	r0, r1
    55c4:	beq	55d4 <ingest_info_cleanup+0x90>
    55c8:	ldr	r0, [sp, #4]
    55cc:	ldr	r0, [r0, #16]
    55d0:	bl	0 <coda_dynamic_type_delete>
    55d4:	ldr	r0, [sp, #4]
    55d8:	ldr	r0, [r0, #20]
    55dc:	movw	r1, #0
    55e0:	cmp	r0, r1
    55e4:	beq	55f4 <ingest_info_cleanup+0xb0>
    55e8:	ldr	r0, [sp, #4]
    55ec:	ldr	r0, [r0, #20]
    55f0:	bl	0 <coda_dynamic_type_delete>
    55f4:	ldr	r0, [sp, #4]
    55f8:	ldr	r0, [r0, #24]
    55fc:	movw	r1, #0
    5600:	cmp	r0, r1
    5604:	beq	5614 <ingest_info_cleanup+0xd0>
    5608:	ldr	r0, [sp, #4]
    560c:	ldr	r0, [r0, #24]
    5610:	bl	0 <coda_dynamic_type_delete>
    5614:	ldr	r0, [sp, #4]
    5618:	ldr	r0, [r0, #28]
    561c:	movw	r1, #0
    5620:	cmp	r0, r1
    5624:	beq	5634 <ingest_info_cleanup+0xf0>
    5628:	ldr	r0, [sp, #4]
    562c:	ldr	r0, [r0, #28]
    5630:	bl	0 <coda_dynamic_type_delete>
    5634:	ldr	r0, [sp, #4]
    5638:	ldr	r0, [r0, #32]
    563c:	movw	r1, #0
    5640:	cmp	r0, r1
    5644:	beq	5654 <ingest_info_cleanup+0x110>
    5648:	ldr	r0, [sp, #4]
    564c:	ldr	r0, [r0, #32]
    5650:	bl	0 <coda_dynamic_type_delete>
    5654:	ldr	r0, [sp, #4]
    5658:	ldr	r0, [r0, #36]	; 0x24
    565c:	movw	r1, #0
    5660:	cmp	r0, r1
    5664:	beq	5674 <ingest_info_cleanup+0x130>
    5668:	ldr	r0, [sp, #4]
    566c:	ldr	r0, [r0, #36]	; 0x24
    5670:	bl	0 <coda_dynamic_type_delete>
    5674:	mov	sp, fp
    5678:	pop	{fp, pc}

0000567c <read_records>:
    567c:	push	{r4, r5, fp, lr}
    5680:	add	fp, sp, #8
    5684:	sub	sp, sp, #472	; 0x1d8
    5688:	sub	sp, sp, #1024	; 0x400
    568c:	str	r0, [fp, #-16]
    5690:	ldr	r0, [fp, #-16]
    5694:	ldr	r0, [r0]
    5698:	bl	0 <ftell>
    569c:	add	r1, sp, #480	; 0x1e0
    56a0:	ldr	r2, [fp, #-16]
    56a4:	str	r0, [r2, #52]	; 0x34
    56a8:	ldr	r0, [fp, #-16]
    56ac:	ldr	r2, [r0, #48]	; 0x30
    56b0:	add	r2, r2, #1
    56b4:	str	r2, [r0, #48]	; 0x30
    56b8:	ldr	r0, [fp, #-16]
    56bc:	ldr	r0, [r0]
    56c0:	bl	7f44 <get_line>
    56c4:	str	r0, [sp, #396]	; 0x18c
    56c8:	ldr	r0, [sp, #396]	; 0x18c
    56cc:	cmp	r0, #0
    56d0:	bge	56e0 <read_records+0x64>
    56d4:	mvn	r0, #0
    56d8:	str	r0, [fp, #-12]
    56dc:	b	7f34 <read_records+0x28b8>
    56e0:	b	56e4 <read_records+0x68>
    56e4:	add	r0, sp, #480	; 0x1e0
    56e8:	movw	r1, #0
    56ec:	movt	r1, #0
    56f0:	mov	r2, #3
    56f4:	bl	0 <memcmp>
    56f8:	cmp	r0, #0
    56fc:	beq	7e78 <read_records+0x27fc>
    5700:	ldrb	r0, [sp, #480]	; 0x1e0
    5704:	cmp	r0, #42	; 0x2a
    5708:	bne	5954 <read_records+0x2d8>
    570c:	ldr	r0, [fp, #-16]
    5710:	ldr	r0, [r0, #16]
    5714:	movw	r1, #0
    5718:	cmp	r0, r1
    571c:	beq	57c0 <read_records+0x144>
    5720:	ldr	r0, [fp, #-16]
    5724:	ldr	r0, [r0, #16]
    5728:	ldr	r1, [fp, #-16]
    572c:	ldr	r1, [r1, #20]
    5730:	movw	r2, #0
    5734:	movt	r2, #0
    5738:	str	r1, [sp, #392]	; 0x188
    573c:	mov	r1, r2
    5740:	ldr	r2, [sp, #392]	; 0x188
    5744:	movw	r3, #0
    5748:	bl	0 <coda_mem_record_add_field>
    574c:	ldr	r1, [fp, #-16]
    5750:	movw	r2, #0
    5754:	str	r2, [r1, #20]
    5758:	ldr	r1, [fp, #-16]
    575c:	ldr	r1, [r1, #28]
    5760:	cmp	r1, r2
    5764:	beq	57a0 <read_records+0x124>
    5768:	ldr	r0, [fp, #-16]
    576c:	ldr	r0, [r0, #16]
    5770:	ldr	r1, [fp, #-16]
    5774:	ldr	r1, [r1, #28]
    5778:	movw	r2, #0
    577c:	movt	r2, #0
    5780:	str	r1, [sp, #388]	; 0x184
    5784:	mov	r1, r2
    5788:	ldr	r2, [sp, #388]	; 0x184
    578c:	movw	r3, #0
    5790:	bl	0 <coda_mem_record_add_field>
    5794:	ldr	r1, [fp, #-16]
    5798:	movw	r2, #0
    579c:	str	r2, [r1, #28]
    57a0:	ldr	r0, [fp, #-16]
    57a4:	ldr	r0, [r0, #12]
    57a8:	ldr	r1, [fp, #-16]
    57ac:	ldr	r1, [r1, #16]
    57b0:	bl	0 <coda_mem_array_add_element>
    57b4:	ldr	r1, [fp, #-16]
    57b8:	movw	r2, #0
    57bc:	str	r2, [r1, #16]
    57c0:	ldr	r0, [pc, #4084]	; 67bc <read_records+0x1140>
    57c4:	str	r0, [sp, #384]	; 0x180
    57c8:	bl	0 <__aeabi_read_tp>
    57cc:	ldr	r1, [sp, #384]	; 0x180
    57d0:	ldr	r0, [r0, r1]
    57d4:	ldr	r0, [r0, #272]	; 0x110
    57d8:	movw	r1, #0
    57dc:	bl	0 <coda_mem_array_new>
    57e0:	ldr	r1, [fp, #-16]
    57e4:	str	r0, [r1, #20]
    57e8:	ldr	r0, [fp, #-16]
    57ec:	ldrb	r0, [r0, #44]	; 0x2c
    57f0:	cmp	r0, #86	; 0x56
    57f4:	bne	5820 <read_records+0x1a4>
    57f8:	ldr	r0, [pc, #4028]	; 67bc <read_records+0x1140>
    57fc:	str	r0, [sp, #380]	; 0x17c
    5800:	bl	0 <__aeabi_read_tp>
    5804:	ldr	r1, [sp, #380]	; 0x17c
    5808:	ldr	r0, [r0, r1]
    580c:	ldr	r0, [r0, #280]	; 0x118
    5810:	movw	r1, #0
    5814:	bl	0 <coda_mem_array_new>
    5818:	ldr	r1, [fp, #-16]
    581c:	str	r0, [r1, #28]
    5820:	ldr	r0, [pc, #3988]	; 67bc <read_records+0x1140>
    5824:	str	r0, [sp, #376]	; 0x178
    5828:	bl	0 <__aeabi_read_tp>
    582c:	ldr	r1, [sp, #376]	; 0x178
    5830:	ldr	r0, [r0, r1]
    5834:	ldr	r0, [r0, #292]	; 0x124
    5838:	movw	r1, #0
    583c:	bl	0 <coda_mem_record_new>
    5840:	ldr	r1, [fp, #-16]
    5844:	str	r0, [r1, #16]
    5848:	ldr	r0, [sp, #396]	; 0x18c
    584c:	cmp	r0, #31
    5850:	bge	5894 <read_records+0x218>
    5854:	ldr	r2, [sp, #396]	; 0x18c
    5858:	ldr	r0, [fp, #-16]
    585c:	ldr	r3, [r0, #48]	; 0x30
    5860:	ldr	r0, [fp, #-16]
    5864:	ldr	r0, [r0, #52]	; 0x34
    5868:	mvn	r1, #21
    586c:	str	r0, [sp, #372]	; 0x174
    5870:	mov	r0, r1
    5874:	movw	r1, #0
    5878:	movt	r1, #0
    587c:	ldr	ip, [sp, #372]	; 0x174
    5880:	str	ip, [sp]
    5884:	bl	0 <coda_set_error>
    5888:	mvn	r0, #0
    588c:	str	r0, [fp, #-12]
    5890:	b	7f34 <read_records+0x28b8>
    5894:	add	r0, sp, #480	; 0x1e0
    5898:	add	r1, r0, #3
    589c:	add	r2, sp, #400	; 0x190
    58a0:	add	r3, r2, #12
    58a4:	add	r0, r0, #15
    58a8:	vld1.8	{d16-d17}, [r0]
    58ac:	vst1.32	{d16-d17}, [r3]
    58b0:	vld1.8	{d16-d17}, [r1]
    58b4:	mov	r0, #28
    58b8:	mov	r1, r2
    58bc:	vst1.64	{d16-d17}, [r1], r0
    58c0:	mov	r0, #0
    58c4:	strb	r0, [r1]
    58c8:	ldr	r1, [pc, #3820]	; 67bc <read_records+0x1140>
    58cc:	str	r2, [sp, #368]	; 0x170
    58d0:	str	r0, [sp, #364]	; 0x16c
    58d4:	str	r1, [sp, #360]	; 0x168
    58d8:	bl	0 <__aeabi_read_tp>
    58dc:	ldr	r1, [sp, #360]	; 0x168
    58e0:	ldr	r2, [r0, r1]
    58e4:	ldr	r2, [r2, #260]	; 0x104
    58e8:	ldr	r3, [fp, #-16]
    58ec:	ldr	r3, [r3, #4]
    58f0:	str	r0, [sp, #356]	; 0x164
    58f4:	mov	r0, r2
    58f8:	ldr	r1, [sp, #364]	; 0x16c
    58fc:	mov	r2, r3
    5900:	ldr	r3, [sp, #368]	; 0x170
    5904:	bl	0 <coda_mem_string_new>
    5908:	str	r0, [fp, #-20]	; 0xffffffec
    590c:	ldr	r0, [sp, #356]	; 0x164
    5910:	ldr	r1, [sp, #360]	; 0x168
    5914:	ldr	r2, [r0, r1]
    5918:	ldr	r2, [r2, #264]	; 0x108
    591c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5920:	mov	r0, r2
    5924:	movw	r1, #0
    5928:	mov	r2, r3
    592c:	bl	0 <coda_mem_time_new>
    5930:	str	r0, [fp, #-24]	; 0xffffffe8
    5934:	ldr	r0, [fp, #-16]
    5938:	ldr	r0, [r0, #16]
    593c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5940:	movw	r1, #0
    5944:	movt	r1, #0
    5948:	movw	r3, #0
    594c:	bl	0 <coda_mem_record_add_field>
    5950:	b	6a78 <read_records+0x13fc>
    5954:	ldrb	r0, [sp, #480]	; 0x1e0
    5958:	cmp	r0, #80	; 0x50
    595c:	bne	62a8 <read_records+0xc2c>
    5960:	ldr	r0, [fp, #-16]
    5964:	ldr	r0, [r0, #20]
    5968:	movw	r1, #0
    596c:	cmp	r0, r1
    5970:	bne	59a0 <read_records+0x324>
    5974:	ldr	r0, [fp, #-16]
    5978:	ldr	r2, [r0, #48]	; 0x30
    597c:	ldr	r0, [fp, #-16]
    5980:	ldr	r3, [r0, #52]	; 0x34
    5984:	mvn	r0, #21
    5988:	movw	r1, #0
    598c:	movt	r1, #0
    5990:	bl	0 <coda_set_error>
    5994:	mvn	r0, #0
    5998:	str	r0, [fp, #-12]
    599c:	b	7f34 <read_records+0x28b8>
    59a0:	ldr	r0, [pc, #3604]	; 67bc <read_records+0x1140>
    59a4:	str	r0, [sp, #352]	; 0x160
    59a8:	bl	0 <__aeabi_read_tp>
    59ac:	ldr	r1, [sp, #352]	; 0x160
    59b0:	ldr	r0, [r0, r1]
    59b4:	ldr	r0, [r0, #268]	; 0x10c
    59b8:	movw	r1, #0
    59bc:	bl	0 <coda_mem_record_new>
    59c0:	ldr	r1, [fp, #-16]
    59c4:	str	r0, [r1, #24]
    59c8:	ldr	r0, [sp, #396]	; 0x18c
    59cc:	cmp	r0, #60	; 0x3c
    59d0:	bge	5a14 <read_records+0x398>
    59d4:	ldr	r2, [sp, #396]	; 0x18c
    59d8:	ldr	r0, [fp, #-16]
    59dc:	ldr	r3, [r0, #48]	; 0x30
    59e0:	ldr	r0, [fp, #-16]
    59e4:	ldr	r0, [r0, #52]	; 0x34
    59e8:	mvn	r1, #21
    59ec:	str	r0, [sp, #348]	; 0x15c
    59f0:	mov	r0, r1
    59f4:	movw	r1, #0
    59f8:	movt	r1, #0
    59fc:	ldr	ip, [sp, #348]	; 0x15c
    5a00:	str	ip, [sp]
    5a04:	bl	0 <coda_set_error>
    5a08:	mvn	r0, #0
    5a0c:	str	r0, [fp, #-12]
    5a10:	b	7f34 <read_records+0x28b8>
    5a14:	add	r3, sp, #400	; 0x190
    5a18:	ldrb	r0, [sp, #483]	; 0x1e3
    5a1c:	strb	r0, [sp, #402]	; 0x192
    5a20:	add	lr, sp, #256	; 0x100
    5a24:	ldrh	r0, [lr, #225]	; 0xe1
    5a28:	add	lr, sp, #256	; 0x100
    5a2c:	strh	r0, [lr, #144]	; 0x90
    5a30:	mov	r0, #0
    5a34:	strb	r0, [sp, #403]	; 0x193
    5a38:	ldr	r0, [pc, #3452]	; 67bc <read_records+0x1140>
    5a3c:	str	r3, [sp, #344]	; 0x158
    5a40:	str	r0, [sp, #340]	; 0x154
    5a44:	bl	0 <__aeabi_read_tp>
    5a48:	ldr	r1, [sp, #340]	; 0x154
    5a4c:	ldr	r0, [r0, r1]
    5a50:	ldr	r0, [r0, #88]	; 0x58
    5a54:	ldr	r1, [fp, #-16]
    5a58:	ldr	r2, [r1, #4]
    5a5c:	movw	r1, #0
    5a60:	ldr	r3, [sp, #344]	; 0x158
    5a64:	bl	0 <coda_mem_string_new>
    5a68:	str	r0, [fp, #-24]	; 0xffffffe8
    5a6c:	ldr	r0, [fp, #-16]
    5a70:	ldr	r0, [r0, #24]
    5a74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5a78:	movw	r1, #0
    5a7c:	movt	r1, #0
    5a80:	movw	r3, #0
    5a84:	bl	0 <coda_mem_record_add_field>
    5a88:	add	r1, sp, #480	; 0x1e0
    5a8c:	add	r1, r1, #4
    5a90:	str	r0, [sp, #336]	; 0x150
    5a94:	mov	r0, r1
    5a98:	movw	r1, #14
    5a9c:	add	r2, sp, #472	; 0x1d8
    5aa0:	movw	r3, #0
    5aa4:	bl	0 <coda_ascii_parse_double>
    5aa8:	cmp	r0, #0
    5aac:	bge	5adc <read_records+0x460>
    5ab0:	ldr	r0, [fp, #-16]
    5ab4:	ldr	r1, [r0, #48]	; 0x30
    5ab8:	ldr	r0, [fp, #-16]
    5abc:	ldr	r0, [r0, #52]	; 0x34
    5ac0:	add	r2, r0, #4
    5ac4:	movw	r0, #0
    5ac8:	movt	r0, #0
    5acc:	bl	0 <coda_add_error_message>
    5ad0:	mvn	r0, #0
    5ad4:	str	r0, [fp, #-12]
    5ad8:	b	7f34 <read_records+0x28b8>
    5adc:	ldr	r0, [pc, #3288]	; 67bc <read_records+0x1140>
    5ae0:	str	r0, [sp, #332]	; 0x14c
    5ae4:	bl	0 <__aeabi_read_tp>
    5ae8:	ldr	r1, [sp, #332]	; 0x14c
    5aec:	ldr	r0, [r0, r1]
    5af0:	ldr	r0, [r0, #92]	; 0x5c
    5af4:	ldr	r1, [fp, #-16]
    5af8:	ldr	r2, [r1, #4]
    5afc:	vldr	d0, [sp, #472]	; 0x1d8
    5b00:	movw	r1, #0
    5b04:	bl	0 <coda_mem_double_new>
    5b08:	str	r0, [fp, #-24]	; 0xffffffe8
    5b0c:	ldr	r0, [fp, #-16]
    5b10:	ldr	r0, [r0, #24]
    5b14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5b18:	movw	r1, #0
    5b1c:	movt	r1, #0
    5b20:	movw	r3, #0
    5b24:	bl	0 <coda_mem_record_add_field>
    5b28:	add	r1, sp, #480	; 0x1e0
    5b2c:	add	r1, r1, #18
    5b30:	str	r0, [sp, #328]	; 0x148
    5b34:	mov	r0, r1
    5b38:	movw	r1, #14
    5b3c:	add	r2, sp, #472	; 0x1d8
    5b40:	movw	r3, #0
    5b44:	bl	0 <coda_ascii_parse_double>
    5b48:	cmp	r0, #0
    5b4c:	bge	5b7c <read_records+0x500>
    5b50:	ldr	r0, [fp, #-16]
    5b54:	ldr	r1, [r0, #48]	; 0x30
    5b58:	ldr	r0, [fp, #-16]
    5b5c:	ldr	r0, [r0, #52]	; 0x34
    5b60:	add	r2, r0, #18
    5b64:	movw	r0, #0
    5b68:	movt	r0, #0
    5b6c:	bl	0 <coda_add_error_message>
    5b70:	mvn	r0, #0
    5b74:	str	r0, [fp, #-12]
    5b78:	b	7f34 <read_records+0x28b8>
    5b7c:	ldr	r0, [pc, #3128]	; 67bc <read_records+0x1140>
    5b80:	str	r0, [sp, #324]	; 0x144
    5b84:	bl	0 <__aeabi_read_tp>
    5b88:	ldr	r1, [sp, #324]	; 0x144
    5b8c:	ldr	r0, [r0, r1]
    5b90:	ldr	r0, [r0, #96]	; 0x60
    5b94:	ldr	r1, [fp, #-16]
    5b98:	ldr	r2, [r1, #4]
    5b9c:	vldr	d0, [sp, #472]	; 0x1d8
    5ba0:	movw	r1, #0
    5ba4:	bl	0 <coda_mem_double_new>
    5ba8:	str	r0, [fp, #-24]	; 0xffffffe8
    5bac:	ldr	r0, [fp, #-16]
    5bb0:	ldr	r0, [r0, #24]
    5bb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5bb8:	movw	r1, #0
    5bbc:	movt	r1, #0
    5bc0:	movw	r3, #0
    5bc4:	bl	0 <coda_mem_record_add_field>
    5bc8:	add	r1, sp, #480	; 0x1e0
    5bcc:	add	r1, r1, #32
    5bd0:	str	r0, [sp, #320]	; 0x140
    5bd4:	mov	r0, r1
    5bd8:	movw	r1, #14
    5bdc:	add	r2, sp, #472	; 0x1d8
    5be0:	movw	r3, #0
    5be4:	bl	0 <coda_ascii_parse_double>
    5be8:	cmp	r0, #0
    5bec:	bge	5c1c <read_records+0x5a0>
    5bf0:	ldr	r0, [fp, #-16]
    5bf4:	ldr	r1, [r0, #48]	; 0x30
    5bf8:	ldr	r0, [fp, #-16]
    5bfc:	ldr	r0, [r0, #52]	; 0x34
    5c00:	add	r2, r0, #32
    5c04:	movw	r0, #0
    5c08:	movt	r0, #0
    5c0c:	bl	0 <coda_add_error_message>
    5c10:	mvn	r0, #0
    5c14:	str	r0, [fp, #-12]
    5c18:	b	7f34 <read_records+0x28b8>
    5c1c:	ldr	r0, [pc, #2968]	; 67bc <read_records+0x1140>
    5c20:	str	r0, [sp, #316]	; 0x13c
    5c24:	bl	0 <__aeabi_read_tp>
    5c28:	ldr	r1, [sp, #316]	; 0x13c
    5c2c:	ldr	r0, [r0, r1]
    5c30:	ldr	r0, [r0, #100]	; 0x64
    5c34:	ldr	r1, [fp, #-16]
    5c38:	ldr	r2, [r1, #4]
    5c3c:	vldr	d0, [sp, #472]	; 0x1d8
    5c40:	movw	r1, #0
    5c44:	bl	0 <coda_mem_double_new>
    5c48:	str	r0, [fp, #-24]	; 0xffffffe8
    5c4c:	ldr	r0, [fp, #-16]
    5c50:	ldr	r0, [r0, #24]
    5c54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5c58:	movw	r1, #0
    5c5c:	movt	r1, #0
    5c60:	movw	r3, #0
    5c64:	bl	0 <coda_mem_record_add_field>
    5c68:	add	r1, sp, #480	; 0x1e0
    5c6c:	add	r1, r1, #46	; 0x2e
    5c70:	str	r0, [sp, #312]	; 0x138
    5c74:	mov	r0, r1
    5c78:	movw	r1, #14
    5c7c:	add	r2, sp, #472	; 0x1d8
    5c80:	movw	r3, #0
    5c84:	bl	0 <coda_ascii_parse_double>
    5c88:	cmp	r0, #0
    5c8c:	bge	5cbc <read_records+0x640>
    5c90:	ldr	r0, [fp, #-16]
    5c94:	ldr	r1, [r0, #48]	; 0x30
    5c98:	ldr	r0, [fp, #-16]
    5c9c:	ldr	r0, [r0, #52]	; 0x34
    5ca0:	add	r2, r0, #46	; 0x2e
    5ca4:	movw	r0, #0
    5ca8:	movt	r0, #0
    5cac:	bl	0 <coda_add_error_message>
    5cb0:	mvn	r0, #0
    5cb4:	str	r0, [fp, #-12]
    5cb8:	b	7f34 <read_records+0x28b8>
    5cbc:	ldr	r0, [pc, #2808]	; 67bc <read_records+0x1140>
    5cc0:	str	r0, [sp, #308]	; 0x134
    5cc4:	bl	0 <__aeabi_read_tp>
    5cc8:	ldr	r1, [sp, #308]	; 0x134
    5ccc:	ldr	r0, [r0, r1]
    5cd0:	ldr	r0, [r0, #104]	; 0x68
    5cd4:	ldr	r1, [fp, #-16]
    5cd8:	ldr	r2, [r1, #4]
    5cdc:	vldr	d0, [sp, #472]	; 0x1d8
    5ce0:	movw	r1, #0
    5ce4:	bl	0 <coda_mem_double_new>
    5ce8:	str	r0, [fp, #-24]	; 0xffffffe8
    5cec:	ldr	r0, [fp, #-16]
    5cf0:	ldr	r0, [r0, #24]
    5cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5cf8:	movw	r1, #0
    5cfc:	movt	r1, #0
    5d00:	movw	r3, #0
    5d04:	bl	0 <coda_mem_record_add_field>
    5d08:	ldr	r1, [sp, #396]	; 0x18c
    5d0c:	cmp	r1, #64	; 0x40
    5d10:	blt	5d34 <read_records+0x6b8>
    5d14:	add	r0, sp, #480	; 0x1e0
    5d18:	add	r0, r0, #61	; 0x3d
    5d1c:	ldrh	r0, [r0]
    5d20:	movw	r1, #8224	; 0x2020
    5d24:	subs	r0, r0, r1
    5d28:	movwne	r0, #1
    5d2c:	cmp	r0, #0
    5d30:	bne	5d44 <read_records+0x6c8>
    5d34:	mov	r0, #0
    5d38:	str	r0, [sp, #468]	; 0x1d4
    5d3c:	str	r0, [sp, #464]	; 0x1d0
    5d40:	b	5d94 <read_records+0x718>
    5d44:	add	r0, sp, #480	; 0x1e0
    5d48:	add	r0, r0, #61	; 0x3d
    5d4c:	movw	r1, #2
    5d50:	add	r2, sp, #464	; 0x1d0
    5d54:	movw	r3, #0
    5d58:	bl	0 <coda_ascii_parse_int64>
    5d5c:	cmp	r0, #0
    5d60:	bge	5d90 <read_records+0x714>
    5d64:	ldr	r0, [fp, #-16]
    5d68:	ldr	r1, [r0, #48]	; 0x30
    5d6c:	ldr	r0, [fp, #-16]
    5d70:	ldr	r0, [r0, #52]	; 0x34
    5d74:	add	r2, r0, #61	; 0x3d
    5d78:	movw	r0, #0
    5d7c:	movt	r0, #0
    5d80:	bl	0 <coda_add_error_message>
    5d84:	mvn	r0, #0
    5d88:	str	r0, [fp, #-12]
    5d8c:	b	7f34 <read_records+0x28b8>
    5d90:	b	5d94 <read_records+0x718>
    5d94:	ldr	r0, [pc, #2592]	; 67bc <read_records+0x1140>
    5d98:	str	r0, [sp, #304]	; 0x130
    5d9c:	bl	0 <__aeabi_read_tp>
    5da0:	ldr	r1, [sp, #304]	; 0x130
    5da4:	ldr	r0, [r0, r1]
    5da8:	ldr	r0, [r0, #108]	; 0x6c
    5dac:	ldr	r1, [fp, #-16]
    5db0:	ldr	r2, [r1, #4]
    5db4:	ldrb	r1, [sp, #464]	; 0x1d0
    5db8:	movw	r3, #0
    5dbc:	str	r1, [sp, #300]	; 0x12c
    5dc0:	mov	r1, r3
    5dc4:	ldr	r3, [sp, #300]	; 0x12c
    5dc8:	sxtb	r3, r3
    5dcc:	bl	0 <coda_mem_int8_new>
    5dd0:	str	r0, [fp, #-24]	; 0xffffffe8
    5dd4:	ldr	r0, [fp, #-16]
    5dd8:	ldr	r0, [r0, #24]
    5ddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5de0:	movw	r1, #0
    5de4:	movt	r1, #0
    5de8:	movw	r3, #0
    5dec:	bl	0 <coda_mem_record_add_field>
    5df0:	ldr	r1, [sp, #396]	; 0x18c
    5df4:	cmp	r1, #66	; 0x42
    5df8:	blt	5e1c <read_records+0x7a0>
    5dfc:	add	r0, sp, #480	; 0x1e0
    5e00:	add	r0, r0, #64	; 0x40
    5e04:	ldrh	r0, [r0]
    5e08:	movw	r1, #8224	; 0x2020
    5e0c:	subs	r0, r0, r1
    5e10:	movwne	r0, #1
    5e14:	cmp	r0, #0
    5e18:	bne	5e2c <read_records+0x7b0>
    5e1c:	mov	r0, #0
    5e20:	str	r0, [sp, #468]	; 0x1d4
    5e24:	str	r0, [sp, #464]	; 0x1d0
    5e28:	b	5e7c <read_records+0x800>
    5e2c:	add	r0, sp, #480	; 0x1e0
    5e30:	add	r0, r0, #64	; 0x40
    5e34:	movw	r1, #2
    5e38:	add	r2, sp, #464	; 0x1d0
    5e3c:	movw	r3, #0
    5e40:	bl	0 <coda_ascii_parse_int64>
    5e44:	cmp	r0, #0
    5e48:	bge	5e78 <read_records+0x7fc>
    5e4c:	ldr	r0, [fp, #-16]
    5e50:	ldr	r1, [r0, #48]	; 0x30
    5e54:	ldr	r0, [fp, #-16]
    5e58:	ldr	r0, [r0, #52]	; 0x34
    5e5c:	add	r2, r0, #64	; 0x40
    5e60:	movw	r0, #0
    5e64:	movt	r0, #0
    5e68:	bl	0 <coda_add_error_message>
    5e6c:	mvn	r0, #0
    5e70:	str	r0, [fp, #-12]
    5e74:	b	7f34 <read_records+0x28b8>
    5e78:	b	5e7c <read_records+0x800>
    5e7c:	ldr	r0, [pc, #2360]	; 67bc <read_records+0x1140>
    5e80:	str	r0, [sp, #296]	; 0x128
    5e84:	bl	0 <__aeabi_read_tp>
    5e88:	ldr	r1, [sp, #296]	; 0x128
    5e8c:	ldr	r0, [r0, r1]
    5e90:	ldr	r0, [r0, #112]	; 0x70
    5e94:	ldr	r1, [fp, #-16]
    5e98:	ldr	r2, [r1, #4]
    5e9c:	ldrb	r1, [sp, #464]	; 0x1d0
    5ea0:	movw	r3, #0
    5ea4:	str	r1, [sp, #292]	; 0x124
    5ea8:	mov	r1, r3
    5eac:	ldr	r3, [sp, #292]	; 0x124
    5eb0:	sxtb	r3, r3
    5eb4:	bl	0 <coda_mem_int8_new>
    5eb8:	str	r0, [fp, #-24]	; 0xffffffe8
    5ebc:	ldr	r0, [fp, #-16]
    5ec0:	ldr	r0, [r0, #24]
    5ec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ec8:	movw	r1, #0
    5ecc:	movt	r1, #0
    5ed0:	movw	r3, #0
    5ed4:	bl	0 <coda_mem_record_add_field>
    5ed8:	ldr	r1, [sp, #396]	; 0x18c
    5edc:	cmp	r1, #69	; 0x45
    5ee0:	blt	5f04 <read_records+0x888>
    5ee4:	add	r0, sp, #480	; 0x1e0
    5ee8:	add	r0, r0, #67	; 0x43
    5eec:	ldrh	r0, [r0]
    5ef0:	movw	r1, #8224	; 0x2020
    5ef4:	subs	r0, r0, r1
    5ef8:	movwne	r0, #1
    5efc:	cmp	r0, #0
    5f00:	bne	5f14 <read_records+0x898>
    5f04:	mov	r0, #0
    5f08:	str	r0, [sp, #468]	; 0x1d4
    5f0c:	str	r0, [sp, #464]	; 0x1d0
    5f10:	b	5f64 <read_records+0x8e8>
    5f14:	add	r0, sp, #480	; 0x1e0
    5f18:	add	r0, r0, #67	; 0x43
    5f1c:	movw	r1, #2
    5f20:	add	r2, sp, #464	; 0x1d0
    5f24:	movw	r3, #0
    5f28:	bl	0 <coda_ascii_parse_int64>
    5f2c:	cmp	r0, #0
    5f30:	bge	5f60 <read_records+0x8e4>
    5f34:	ldr	r0, [fp, #-16]
    5f38:	ldr	r1, [r0, #48]	; 0x30
    5f3c:	ldr	r0, [fp, #-16]
    5f40:	ldr	r0, [r0, #52]	; 0x34
    5f44:	add	r2, r0, #67	; 0x43
    5f48:	movw	r0, #0
    5f4c:	movt	r0, #0
    5f50:	bl	0 <coda_add_error_message>
    5f54:	mvn	r0, #0
    5f58:	str	r0, [fp, #-12]
    5f5c:	b	7f34 <read_records+0x28b8>
    5f60:	b	5f64 <read_records+0x8e8>
    5f64:	ldr	r0, [pc, #2128]	; 67bc <read_records+0x1140>
    5f68:	str	r0, [sp, #288]	; 0x120
    5f6c:	bl	0 <__aeabi_read_tp>
    5f70:	ldr	r1, [sp, #288]	; 0x120
    5f74:	ldr	r0, [r0, r1]
    5f78:	ldr	r0, [r0, #116]	; 0x74
    5f7c:	ldr	r1, [fp, #-16]
    5f80:	ldr	r2, [r1, #4]
    5f84:	ldrb	r1, [sp, #464]	; 0x1d0
    5f88:	movw	r3, #0
    5f8c:	str	r1, [sp, #284]	; 0x11c
    5f90:	mov	r1, r3
    5f94:	ldr	r3, [sp, #284]	; 0x11c
    5f98:	sxtb	r3, r3
    5f9c:	bl	0 <coda_mem_int8_new>
    5fa0:	str	r0, [fp, #-24]	; 0xffffffe8
    5fa4:	ldr	r0, [fp, #-16]
    5fa8:	ldr	r0, [r0, #24]
    5fac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5fb0:	movw	r1, #0
    5fb4:	movt	r1, #0
    5fb8:	movw	r3, #0
    5fbc:	bl	0 <coda_mem_record_add_field>
    5fc0:	ldr	r1, [sp, #396]	; 0x18c
    5fc4:	cmp	r1, #73	; 0x49
    5fc8:	blt	5fec <read_records+0x970>
    5fcc:	add	r0, sp, #480	; 0x1e0
    5fd0:	add	r0, r0, #70	; 0x46
    5fd4:	movw	r1, #0
    5fd8:	movt	r1, #0
    5fdc:	mov	r2, #3
    5fe0:	bl	0 <memcmp>
    5fe4:	cmp	r0, #0
    5fe8:	bne	5ffc <read_records+0x980>
    5fec:	mov	r0, #0
    5ff0:	str	r0, [sp, #468]	; 0x1d4
    5ff4:	str	r0, [sp, #464]	; 0x1d0
    5ff8:	b	604c <read_records+0x9d0>
    5ffc:	add	r0, sp, #480	; 0x1e0
    6000:	add	r0, r0, #70	; 0x46
    6004:	movw	r1, #3
    6008:	add	r2, sp, #464	; 0x1d0
    600c:	movw	r3, #0
    6010:	bl	0 <coda_ascii_parse_int64>
    6014:	cmp	r0, #0
    6018:	bge	6048 <read_records+0x9cc>
    601c:	ldr	r0, [fp, #-16]
    6020:	ldr	r1, [r0, #48]	; 0x30
    6024:	ldr	r0, [fp, #-16]
    6028:	ldr	r0, [r0, #52]	; 0x34
    602c:	add	r2, r0, #70	; 0x46
    6030:	movw	r0, #0
    6034:	movt	r0, #0
    6038:	bl	0 <coda_add_error_message>
    603c:	mvn	r0, #0
    6040:	str	r0, [fp, #-12]
    6044:	b	7f34 <read_records+0x28b8>
    6048:	b	604c <read_records+0x9d0>
    604c:	ldr	r0, [pc, #1896]	; 67bc <read_records+0x1140>
    6050:	str	r0, [sp, #280]	; 0x118
    6054:	bl	0 <__aeabi_read_tp>
    6058:	ldr	r1, [sp, #280]	; 0x118
    605c:	ldr	r0, [r0, r1]
    6060:	ldr	r0, [r0, #120]	; 0x78
    6064:	ldr	r1, [fp, #-16]
    6068:	ldr	r2, [r1, #4]
    606c:	add	lr, sp, #256	; 0x100
    6070:	ldrh	r1, [lr, #208]	; 0xd0
    6074:	movw	r3, #0
    6078:	str	r1, [sp, #276]	; 0x114
    607c:	mov	r1, r3
    6080:	ldr	r3, [sp, #276]	; 0x114
    6084:	sxth	r3, r3
    6088:	bl	0 <coda_mem_int16_new>
    608c:	str	r0, [fp, #-24]	; 0xffffffe8
    6090:	ldr	r0, [fp, #-16]
    6094:	ldr	r0, [r0, #24]
    6098:	ldr	r2, [fp, #-24]	; 0xffffffe8
    609c:	movw	r1, #0
    60a0:	movt	r1, #0
    60a4:	movw	r3, #0
    60a8:	bl	0 <coda_mem_record_add_field>
    60ac:	ldr	r1, [sp, #396]	; 0x18c
    60b0:	cmp	r1, #75	; 0x4b
    60b4:	bge	60c4 <read_records+0xa48>
    60b8:	movw	r0, #32
    60bc:	str	r0, [sp, #272]	; 0x110
    60c0:	b	60cc <read_records+0xa50>
    60c4:	ldrb	r0, [sp, #554]	; 0x22a
    60c8:	str	r0, [sp, #272]	; 0x110
    60cc:	ldr	r0, [sp, #272]	; 0x110
    60d0:	add	r3, sp, #400	; 0x190
    60d4:	strb	r0, [sp, #400]	; 0x190
    60d8:	mov	r0, #0
    60dc:	strb	r0, [sp, #401]	; 0x191
    60e0:	ldr	r0, [pc, #1748]	; 67bc <read_records+0x1140>
    60e4:	str	r3, [sp, #268]	; 0x10c
    60e8:	str	r0, [sp, #264]	; 0x108
    60ec:	bl	0 <__aeabi_read_tp>
    60f0:	ldr	r1, [sp, #264]	; 0x108
    60f4:	ldr	r0, [r0, r1]
    60f8:	ldr	r0, [r0, #124]	; 0x7c
    60fc:	ldr	r1, [fp, #-16]
    6100:	ldr	r2, [r1, #4]
    6104:	movw	r1, #0
    6108:	ldr	r3, [sp, #268]	; 0x10c
    610c:	bl	0 <coda_mem_string_new>
    6110:	str	r0, [fp, #-24]	; 0xffffffe8
    6114:	ldr	r0, [fp, #-16]
    6118:	ldr	r0, [r0, #24]
    611c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6120:	movw	r1, #0
    6124:	movt	r1, #0
    6128:	movw	r3, #0
    612c:	bl	0 <coda_mem_record_add_field>
    6130:	ldr	r1, [sp, #396]	; 0x18c
    6134:	cmp	r1, #76	; 0x4c
    6138:	bge	6148 <read_records+0xacc>
    613c:	movw	r0, #32
    6140:	str	r0, [sp, #260]	; 0x104
    6144:	b	6150 <read_records+0xad4>
    6148:	ldrb	r0, [sp, #555]	; 0x22b
    614c:	str	r0, [sp, #260]	; 0x104
    6150:	ldr	r0, [sp, #260]	; 0x104
    6154:	add	r3, sp, #400	; 0x190
    6158:	strb	r0, [sp, #400]	; 0x190
    615c:	ldr	r0, [pc, #1624]	; 67bc <read_records+0x1140>
    6160:	str	r3, [sp, #256]	; 0x100
    6164:	str	r0, [sp, #252]	; 0xfc
    6168:	bl	0 <__aeabi_read_tp>
    616c:	ldr	r1, [sp, #252]	; 0xfc
    6170:	ldr	r0, [r0, r1]
    6174:	ldr	r0, [r0, #128]	; 0x80
    6178:	ldr	r1, [fp, #-16]
    617c:	ldr	r2, [r1, #4]
    6180:	movw	r1, #0
    6184:	ldr	r3, [sp, #256]	; 0x100
    6188:	bl	0 <coda_mem_string_new>
    618c:	str	r0, [fp, #-24]	; 0xffffffe8
    6190:	ldr	r0, [fp, #-16]
    6194:	ldr	r0, [r0, #24]
    6198:	ldr	r2, [fp, #-24]	; 0xffffffe8
    619c:	movw	r1, #0
    61a0:	movt	r1, #0
    61a4:	movw	r3, #0
    61a8:	bl	0 <coda_mem_record_add_field>
    61ac:	ldr	r1, [sp, #396]	; 0x18c
    61b0:	cmp	r1, #79	; 0x4f
    61b4:	bge	61c4 <read_records+0xb48>
    61b8:	movw	r0, #32
    61bc:	str	r0, [sp, #248]	; 0xf8
    61c0:	b	61cc <read_records+0xb50>
    61c4:	ldrb	r0, [sp, #558]	; 0x22e
    61c8:	str	r0, [sp, #248]	; 0xf8
    61cc:	ldr	r0, [sp, #248]	; 0xf8
    61d0:	add	r3, sp, #400	; 0x190
    61d4:	strb	r0, [sp, #400]	; 0x190
    61d8:	ldr	r0, [pc, #1500]	; 67bc <read_records+0x1140>
    61dc:	str	r3, [sp, #244]	; 0xf4
    61e0:	str	r0, [sp, #240]	; 0xf0
    61e4:	bl	0 <__aeabi_read_tp>
    61e8:	ldr	r1, [sp, #240]	; 0xf0
    61ec:	ldr	r0, [r0, r1]
    61f0:	ldr	r0, [r0, #132]	; 0x84
    61f4:	ldr	r1, [fp, #-16]
    61f8:	ldr	r2, [r1, #4]
    61fc:	movw	r1, #0
    6200:	ldr	r3, [sp, #244]	; 0xf4
    6204:	bl	0 <coda_mem_string_new>
    6208:	str	r0, [fp, #-24]	; 0xffffffe8
    620c:	ldr	r0, [fp, #-16]
    6210:	ldr	r0, [r0, #24]
    6214:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6218:	movw	r1, #0
    621c:	movt	r1, #0
    6220:	movw	r3, #0
    6224:	bl	0 <coda_mem_record_add_field>
    6228:	ldr	r1, [sp, #396]	; 0x18c
    622c:	cmp	r1, #80	; 0x50
    6230:	bge	6240 <read_records+0xbc4>
    6234:	movw	r0, #32
    6238:	str	r0, [sp, #236]	; 0xec
    623c:	b	6248 <read_records+0xbcc>
    6240:	ldrb	r0, [sp, #559]	; 0x22f
    6244:	str	r0, [sp, #236]	; 0xec
    6248:	ldr	r0, [sp, #236]	; 0xec
    624c:	add	r3, sp, #400	; 0x190
    6250:	strb	r0, [sp, #400]	; 0x190
    6254:	ldr	r0, [pc, #1376]	; 67bc <read_records+0x1140>
    6258:	str	r3, [sp, #232]	; 0xe8
    625c:	str	r0, [sp, #228]	; 0xe4
    6260:	bl	0 <__aeabi_read_tp>
    6264:	ldr	r1, [sp, #228]	; 0xe4
    6268:	ldr	r0, [r0, r1]
    626c:	ldr	r0, [r0, #136]	; 0x88
    6270:	ldr	r1, [fp, #-16]
    6274:	ldr	r2, [r1, #4]
    6278:	movw	r1, #0
    627c:	ldr	r3, [sp, #232]	; 0xe8
    6280:	bl	0 <coda_mem_string_new>
    6284:	str	r0, [fp, #-24]	; 0xffffffe8
    6288:	ldr	r0, [fp, #-16]
    628c:	ldr	r0, [r0, #24]
    6290:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6294:	movw	r1, #0
    6298:	movt	r1, #0
    629c:	movw	r3, #0
    62a0:	bl	0 <coda_mem_record_add_field>
    62a4:	b	6a74 <read_records+0x13f8>
    62a8:	ldrb	r0, [sp, #480]	; 0x1e0
    62ac:	cmp	r0, #86	; 0x56
    62b0:	bne	6a44 <read_records+0x13c8>
    62b4:	ldr	r0, [fp, #-16]
    62b8:	ldrb	r0, [r0, #44]	; 0x2c
    62bc:	cmp	r0, #86	; 0x56
    62c0:	beq	62f0 <read_records+0xc74>
    62c4:	ldr	r0, [fp, #-16]
    62c8:	ldr	r2, [r0, #48]	; 0x30
    62cc:	ldr	r0, [fp, #-16]
    62d0:	ldr	r3, [r0, #52]	; 0x34
    62d4:	mvn	r0, #21
    62d8:	movw	r1, #0
    62dc:	movt	r1, #0
    62e0:	bl	0 <coda_set_error>
    62e4:	mvn	r0, #0
    62e8:	str	r0, [fp, #-12]
    62ec:	b	7f34 <read_records+0x28b8>
    62f0:	ldr	r0, [fp, #-16]
    62f4:	ldr	r0, [r0, #28]
    62f8:	movw	r1, #0
    62fc:	cmp	r0, r1
    6300:	bne	6330 <read_records+0xcb4>
    6304:	ldr	r0, [fp, #-16]
    6308:	ldr	r2, [r0, #48]	; 0x30
    630c:	ldr	r0, [fp, #-16]
    6310:	ldr	r3, [r0, #52]	; 0x34
    6314:	mvn	r0, #21
    6318:	movw	r1, #0
    631c:	movt	r1, #0
    6320:	bl	0 <coda_set_error>
    6324:	mvn	r0, #0
    6328:	str	r0, [fp, #-12]
    632c:	b	7f34 <read_records+0x28b8>
    6330:	ldr	r0, [pc, #1156]	; 67bc <read_records+0x1140>
    6334:	str	r0, [sp, #224]	; 0xe0
    6338:	bl	0 <__aeabi_read_tp>
    633c:	ldr	r1, [sp, #224]	; 0xe0
    6340:	ldr	r0, [r0, r1]
    6344:	ldr	r0, [r0, #276]	; 0x114
    6348:	movw	r1, #0
    634c:	bl	0 <coda_mem_record_new>
    6350:	ldr	r1, [fp, #-16]
    6354:	str	r0, [r1, #32]
    6358:	ldr	r0, [sp, #396]	; 0x18c
    635c:	cmp	r0, #60	; 0x3c
    6360:	bge	63a4 <read_records+0xd28>
    6364:	ldr	r2, [sp, #396]	; 0x18c
    6368:	ldr	r0, [fp, #-16]
    636c:	ldr	r3, [r0, #48]	; 0x30
    6370:	ldr	r0, [fp, #-16]
    6374:	ldr	r0, [r0, #52]	; 0x34
    6378:	mvn	r1, #21
    637c:	str	r0, [sp, #220]	; 0xdc
    6380:	mov	r0, r1
    6384:	movw	r1, #0
    6388:	movt	r1, #0
    638c:	ldr	ip, [sp, #220]	; 0xdc
    6390:	str	ip, [sp]
    6394:	bl	0 <coda_set_error>
    6398:	mvn	r0, #0
    639c:	str	r0, [fp, #-12]
    63a0:	b	7f34 <read_records+0x28b8>
    63a4:	add	r3, sp, #400	; 0x190
    63a8:	ldrb	r0, [sp, #483]	; 0x1e3
    63ac:	strb	r0, [sp, #402]	; 0x192
    63b0:	add	lr, sp, #256	; 0x100
    63b4:	ldrh	r0, [lr, #225]	; 0xe1
    63b8:	add	lr, sp, #256	; 0x100
    63bc:	strh	r0, [lr, #144]	; 0x90
    63c0:	mov	r0, #0
    63c4:	strb	r0, [sp, #403]	; 0x193
    63c8:	ldr	r0, [pc, #1004]	; 67bc <read_records+0x1140>
    63cc:	str	r3, [sp, #216]	; 0xd8
    63d0:	str	r0, [sp, #212]	; 0xd4
    63d4:	bl	0 <__aeabi_read_tp>
    63d8:	ldr	r1, [sp, #212]	; 0xd4
    63dc:	ldr	r0, [r0, r1]
    63e0:	ldr	r0, [r0, #88]	; 0x58
    63e4:	ldr	r1, [fp, #-16]
    63e8:	ldr	r2, [r1, #4]
    63ec:	movw	r1, #0
    63f0:	ldr	r3, [sp, #216]	; 0xd8
    63f4:	bl	0 <coda_mem_string_new>
    63f8:	str	r0, [fp, #-24]	; 0xffffffe8
    63fc:	ldr	r0, [fp, #-16]
    6400:	ldr	r0, [r0, #32]
    6404:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6408:	movw	r1, #0
    640c:	movt	r1, #0
    6410:	movw	r3, #0
    6414:	bl	0 <coda_mem_record_add_field>
    6418:	add	r1, sp, #480	; 0x1e0
    641c:	add	r1, r1, #4
    6420:	str	r0, [sp, #208]	; 0xd0
    6424:	mov	r0, r1
    6428:	movw	r1, #14
    642c:	add	r2, sp, #472	; 0x1d8
    6430:	movw	r3, #0
    6434:	bl	0 <coda_ascii_parse_double>
    6438:	cmp	r0, #0
    643c:	bge	646c <read_records+0xdf0>
    6440:	ldr	r0, [fp, #-16]
    6444:	ldr	r1, [r0, #48]	; 0x30
    6448:	ldr	r0, [fp, #-16]
    644c:	ldr	r0, [r0, #52]	; 0x34
    6450:	add	r2, r0, #4
    6454:	movw	r0, #0
    6458:	movt	r0, #0
    645c:	bl	0 <coda_add_error_message>
    6460:	mvn	r0, #0
    6464:	str	r0, [fp, #-12]
    6468:	b	7f34 <read_records+0x28b8>
    646c:	ldr	r0, [pc, #840]	; 67bc <read_records+0x1140>
    6470:	str	r0, [sp, #204]	; 0xcc
    6474:	bl	0 <__aeabi_read_tp>
    6478:	ldr	r1, [sp, #204]	; 0xcc
    647c:	ldr	r0, [r0, r1]
    6480:	ldr	r0, [r0, #184]	; 0xb8
    6484:	ldr	r1, [fp, #-16]
    6488:	ldr	r2, [r1, #4]
    648c:	vldr	d0, [sp, #472]	; 0x1d8
    6490:	movw	r1, #0
    6494:	bl	0 <coda_mem_double_new>
    6498:	str	r0, [fp, #-24]	; 0xffffffe8
    649c:	ldr	r0, [fp, #-16]
    64a0:	ldr	r0, [r0, #32]
    64a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    64a8:	movw	r1, #0
    64ac:	movt	r1, #0
    64b0:	movw	r3, #0
    64b4:	bl	0 <coda_mem_record_add_field>
    64b8:	add	r1, sp, #480	; 0x1e0
    64bc:	add	r1, r1, #18
    64c0:	str	r0, [sp, #200]	; 0xc8
    64c4:	mov	r0, r1
    64c8:	movw	r1, #14
    64cc:	add	r2, sp, #472	; 0x1d8
    64d0:	movw	r3, #0
    64d4:	bl	0 <coda_ascii_parse_double>
    64d8:	cmp	r0, #0
    64dc:	bge	650c <read_records+0xe90>
    64e0:	ldr	r0, [fp, #-16]
    64e4:	ldr	r1, [r0, #48]	; 0x30
    64e8:	ldr	r0, [fp, #-16]
    64ec:	ldr	r0, [r0, #52]	; 0x34
    64f0:	add	r2, r0, #18
    64f4:	movw	r0, #0
    64f8:	movt	r0, #0
    64fc:	bl	0 <coda_add_error_message>
    6500:	mvn	r0, #0
    6504:	str	r0, [fp, #-12]
    6508:	b	7f34 <read_records+0x28b8>
    650c:	ldr	r0, [pc, #680]	; 67bc <read_records+0x1140>
    6510:	str	r0, [sp, #196]	; 0xc4
    6514:	bl	0 <__aeabi_read_tp>
    6518:	ldr	r1, [sp, #196]	; 0xc4
    651c:	ldr	r0, [r0, r1]
    6520:	ldr	r0, [r0, #188]	; 0xbc
    6524:	ldr	r1, [fp, #-16]
    6528:	ldr	r2, [r1, #4]
    652c:	vldr	d0, [sp, #472]	; 0x1d8
    6530:	movw	r1, #0
    6534:	bl	0 <coda_mem_double_new>
    6538:	str	r0, [fp, #-24]	; 0xffffffe8
    653c:	ldr	r0, [fp, #-16]
    6540:	ldr	r0, [r0, #32]
    6544:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6548:	movw	r1, #0
    654c:	movt	r1, #0
    6550:	movw	r3, #0
    6554:	bl	0 <coda_mem_record_add_field>
    6558:	add	r1, sp, #480	; 0x1e0
    655c:	add	r1, r1, #32
    6560:	str	r0, [sp, #192]	; 0xc0
    6564:	mov	r0, r1
    6568:	movw	r1, #14
    656c:	add	r2, sp, #472	; 0x1d8
    6570:	movw	r3, #0
    6574:	bl	0 <coda_ascii_parse_double>
    6578:	cmp	r0, #0
    657c:	bge	65ac <read_records+0xf30>
    6580:	ldr	r0, [fp, #-16]
    6584:	ldr	r1, [r0, #48]	; 0x30
    6588:	ldr	r0, [fp, #-16]
    658c:	ldr	r0, [r0, #52]	; 0x34
    6590:	add	r2, r0, #32
    6594:	movw	r0, #0
    6598:	movt	r0, #0
    659c:	bl	0 <coda_add_error_message>
    65a0:	mvn	r0, #0
    65a4:	str	r0, [fp, #-12]
    65a8:	b	7f34 <read_records+0x28b8>
    65ac:	ldr	r0, [pc, #520]	; 67bc <read_records+0x1140>
    65b0:	str	r0, [sp, #188]	; 0xbc
    65b4:	bl	0 <__aeabi_read_tp>
    65b8:	ldr	r1, [sp, #188]	; 0xbc
    65bc:	ldr	r0, [r0, r1]
    65c0:	ldr	r0, [r0, #192]	; 0xc0
    65c4:	ldr	r1, [fp, #-16]
    65c8:	ldr	r2, [r1, #4]
    65cc:	vldr	d0, [sp, #472]	; 0x1d8
    65d0:	movw	r1, #0
    65d4:	bl	0 <coda_mem_double_new>
    65d8:	str	r0, [fp, #-24]	; 0xffffffe8
    65dc:	ldr	r0, [fp, #-16]
    65e0:	ldr	r0, [r0, #32]
    65e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    65e8:	movw	r1, #0
    65ec:	movt	r1, #0
    65f0:	movw	r3, #0
    65f4:	bl	0 <coda_mem_record_add_field>
    65f8:	add	r1, sp, #480	; 0x1e0
    65fc:	add	r1, r1, #46	; 0x2e
    6600:	str	r0, [sp, #184]	; 0xb8
    6604:	mov	r0, r1
    6608:	movw	r1, #14
    660c:	add	r2, sp, #472	; 0x1d8
    6610:	movw	r3, #0
    6614:	bl	0 <coda_ascii_parse_double>
    6618:	cmp	r0, #0
    661c:	bge	664c <read_records+0xfd0>
    6620:	ldr	r0, [fp, #-16]
    6624:	ldr	r1, [r0, #48]	; 0x30
    6628:	ldr	r0, [fp, #-16]
    662c:	ldr	r0, [r0, #52]	; 0x34
    6630:	add	r2, r0, #46	; 0x2e
    6634:	movw	r0, #0
    6638:	movt	r0, #0
    663c:	bl	0 <coda_add_error_message>
    6640:	mvn	r0, #0
    6644:	str	r0, [fp, #-12]
    6648:	b	7f34 <read_records+0x28b8>
    664c:	ldr	r0, [pc, #360]	; 67bc <read_records+0x1140>
    6650:	str	r0, [sp, #180]	; 0xb4
    6654:	bl	0 <__aeabi_read_tp>
    6658:	ldr	r1, [sp, #180]	; 0xb4
    665c:	ldr	r0, [r0, r1]
    6660:	ldr	r0, [r0, #196]	; 0xc4
    6664:	ldr	r1, [fp, #-16]
    6668:	ldr	r2, [r1, #4]
    666c:	vldr	d0, [sp, #472]	; 0x1d8
    6670:	movw	r1, #0
    6674:	bl	0 <coda_mem_double_new>
    6678:	str	r0, [fp, #-24]	; 0xffffffe8
    667c:	ldr	r0, [fp, #-16]
    6680:	ldr	r0, [r0, #32]
    6684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6688:	movw	r1, #0
    668c:	movt	r1, #0
    6690:	movw	r3, #0
    6694:	bl	0 <coda_mem_record_add_field>
    6698:	ldr	r1, [sp, #396]	; 0x18c
    669c:	cmp	r1, #63	; 0x3f
    66a0:	blt	66c4 <read_records+0x1048>
    66a4:	add	r0, sp, #480	; 0x1e0
    66a8:	add	r0, r0, #61	; 0x3d
    66ac:	ldrh	r0, [r0]
    66b0:	movw	r1, #8224	; 0x2020
    66b4:	subs	r0, r0, r1
    66b8:	movwne	r0, #1
    66bc:	cmp	r0, #0
    66c0:	bne	66d4 <read_records+0x1058>
    66c4:	mov	r0, #0
    66c8:	str	r0, [sp, #468]	; 0x1d4
    66cc:	str	r0, [sp, #464]	; 0x1d0
    66d0:	b	6724 <read_records+0x10a8>
    66d4:	add	r0, sp, #480	; 0x1e0
    66d8:	add	r0, r0, #61	; 0x3d
    66dc:	movw	r1, #2
    66e0:	add	r2, sp, #464	; 0x1d0
    66e4:	movw	r3, #0
    66e8:	bl	0 <coda_ascii_parse_int64>
    66ec:	cmp	r0, #0
    66f0:	bge	6720 <read_records+0x10a4>
    66f4:	ldr	r0, [fp, #-16]
    66f8:	ldr	r1, [r0, #48]	; 0x30
    66fc:	ldr	r0, [fp, #-16]
    6700:	ldr	r0, [r0, #52]	; 0x34
    6704:	add	r2, r0, #61	; 0x3d
    6708:	movw	r0, #0
    670c:	movt	r0, #0
    6710:	bl	0 <coda_add_error_message>
    6714:	mvn	r0, #0
    6718:	str	r0, [fp, #-12]
    671c:	b	7f34 <read_records+0x28b8>
    6720:	b	6724 <read_records+0x10a8>
    6724:	ldr	r0, [pc, #144]	; 67bc <read_records+0x1140>
    6728:	str	r0, [sp, #176]	; 0xb0
    672c:	bl	0 <__aeabi_read_tp>
    6730:	ldr	r1, [sp, #176]	; 0xb0
    6734:	ldr	r0, [r0, r1]
    6738:	ldr	r0, [r0, #200]	; 0xc8
    673c:	ldr	r1, [fp, #-16]
    6740:	ldr	r2, [r1, #4]
    6744:	ldrb	r1, [sp, #464]	; 0x1d0
    6748:	movw	r3, #0
    674c:	str	r1, [sp, #172]	; 0xac
    6750:	mov	r1, r3
    6754:	ldr	r3, [sp, #172]	; 0xac
    6758:	sxtb	r3, r3
    675c:	bl	0 <coda_mem_int8_new>
    6760:	str	r0, [fp, #-24]	; 0xffffffe8
    6764:	ldr	r0, [fp, #-16]
    6768:	ldr	r0, [r0, #32]
    676c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6770:	movw	r1, #0
    6774:	movt	r1, #0
    6778:	movw	r3, #0
    677c:	bl	0 <coda_mem_record_add_field>
    6780:	ldr	r1, [sp, #396]	; 0x18c
    6784:	cmp	r1, #66	; 0x42
    6788:	blt	67ac <read_records+0x1130>
    678c:	add	r0, sp, #480	; 0x1e0
    6790:	add	r0, r0, #64	; 0x40
    6794:	ldrh	r0, [r0]
    6798:	movw	r1, #8224	; 0x2020
    679c:	subs	r0, r0, r1
    67a0:	movwne	r0, #1
    67a4:	cmp	r0, #0
    67a8:	bne	67c0 <read_records+0x1144>
    67ac:	mov	r0, #0
    67b0:	str	r0, [sp, #468]	; 0x1d4
    67b4:	str	r0, [sp, #464]	; 0x1d0
    67b8:	b	6810 <read_records+0x1194>
    67bc:	.word	0x00000000
    67c0:	add	r0, sp, #480	; 0x1e0
    67c4:	add	r0, r0, #64	; 0x40
    67c8:	movw	r1, #2
    67cc:	add	r2, sp, #464	; 0x1d0
    67d0:	movw	r3, #0
    67d4:	bl	0 <coda_ascii_parse_int64>
    67d8:	cmp	r0, #0
    67dc:	bge	680c <read_records+0x1190>
    67e0:	ldr	r0, [fp, #-16]
    67e4:	ldr	r1, [r0, #48]	; 0x30
    67e8:	ldr	r0, [fp, #-16]
    67ec:	ldr	r0, [r0, #52]	; 0x34
    67f0:	add	r2, r0, #64	; 0x40
    67f4:	movw	r0, #0
    67f8:	movt	r0, #0
    67fc:	bl	0 <coda_add_error_message>
    6800:	mvn	r0, #0
    6804:	str	r0, [fp, #-12]
    6808:	b	7f34 <read_records+0x28b8>
    680c:	b	6810 <read_records+0x1194>
    6810:	ldr	r0, [pc, #-92]	; 67bc <read_records+0x1140>
    6814:	str	r0, [sp, #168]	; 0xa8
    6818:	bl	0 <__aeabi_read_tp>
    681c:	ldr	r1, [sp, #168]	; 0xa8
    6820:	ldr	r0, [r0, r1]
    6824:	ldr	r0, [r0, #204]	; 0xcc
    6828:	ldr	r1, [fp, #-16]
    682c:	ldr	r2, [r1, #4]
    6830:	ldrb	r1, [sp, #464]	; 0x1d0
    6834:	movw	r3, #0
    6838:	str	r1, [sp, #164]	; 0xa4
    683c:	mov	r1, r3
    6840:	ldr	r3, [sp, #164]	; 0xa4
    6844:	sxtb	r3, r3
    6848:	bl	0 <coda_mem_int8_new>
    684c:	str	r0, [fp, #-24]	; 0xffffffe8
    6850:	ldr	r0, [fp, #-16]
    6854:	ldr	r0, [r0, #32]
    6858:	ldr	r2, [fp, #-24]	; 0xffffffe8
    685c:	movw	r1, #0
    6860:	movt	r1, #0
    6864:	movw	r3, #0
    6868:	bl	0 <coda_mem_record_add_field>
    686c:	ldr	r1, [sp, #396]	; 0x18c
    6870:	cmp	r1, #69	; 0x45
    6874:	blt	6898 <read_records+0x121c>
    6878:	add	r0, sp, #480	; 0x1e0
    687c:	add	r0, r0, #67	; 0x43
    6880:	ldrh	r0, [r0]
    6884:	movw	r1, #8224	; 0x2020
    6888:	subs	r0, r0, r1
    688c:	movwne	r0, #1
    6890:	cmp	r0, #0
    6894:	bne	68a8 <read_records+0x122c>
    6898:	mov	r0, #0
    689c:	str	r0, [sp, #468]	; 0x1d4
    68a0:	str	r0, [sp, #464]	; 0x1d0
    68a4:	b	68f8 <read_records+0x127c>
    68a8:	add	r0, sp, #480	; 0x1e0
    68ac:	add	r0, r0, #67	; 0x43
    68b0:	movw	r1, #2
    68b4:	add	r2, sp, #464	; 0x1d0
    68b8:	movw	r3, #0
    68bc:	bl	0 <coda_ascii_parse_int64>
    68c0:	cmp	r0, #0
    68c4:	bge	68f4 <read_records+0x1278>
    68c8:	ldr	r0, [fp, #-16]
    68cc:	ldr	r1, [r0, #48]	; 0x30
    68d0:	ldr	r0, [fp, #-16]
    68d4:	ldr	r0, [r0, #52]	; 0x34
    68d8:	add	r2, r0, #67	; 0x43
    68dc:	movw	r0, #0
    68e0:	movt	r0, #0
    68e4:	bl	0 <coda_add_error_message>
    68e8:	mvn	r0, #0
    68ec:	str	r0, [fp, #-12]
    68f0:	b	7f34 <read_records+0x28b8>
    68f4:	b	68f8 <read_records+0x127c>
    68f8:	ldr	r0, [pc, #-324]	; 67bc <read_records+0x1140>
    68fc:	str	r0, [sp, #160]	; 0xa0
    6900:	bl	0 <__aeabi_read_tp>
    6904:	ldr	r1, [sp, #160]	; 0xa0
    6908:	ldr	r0, [r0, r1]
    690c:	ldr	r0, [r0, #208]	; 0xd0
    6910:	ldr	r1, [fp, #-16]
    6914:	ldr	r2, [r1, #4]
    6918:	ldrb	r1, [sp, #464]	; 0x1d0
    691c:	movw	r3, #0
    6920:	str	r1, [sp, #156]	; 0x9c
    6924:	mov	r1, r3
    6928:	ldr	r3, [sp, #156]	; 0x9c
    692c:	sxtb	r3, r3
    6930:	bl	0 <coda_mem_int8_new>
    6934:	str	r0, [fp, #-24]	; 0xffffffe8
    6938:	ldr	r0, [fp, #-16]
    693c:	ldr	r0, [r0, #32]
    6940:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6944:	movw	r1, #0
    6948:	movt	r1, #0
    694c:	movw	r3, #0
    6950:	bl	0 <coda_mem_record_add_field>
    6954:	ldr	r1, [sp, #396]	; 0x18c
    6958:	cmp	r1, #73	; 0x49
    695c:	blt	6980 <read_records+0x1304>
    6960:	add	r0, sp, #480	; 0x1e0
    6964:	add	r0, r0, #70	; 0x46
    6968:	movw	r1, #0
    696c:	movt	r1, #0
    6970:	mov	r2, #3
    6974:	bl	0 <memcmp>
    6978:	cmp	r0, #0
    697c:	bne	6990 <read_records+0x1314>
    6980:	mov	r0, #0
    6984:	str	r0, [sp, #468]	; 0x1d4
    6988:	str	r0, [sp, #464]	; 0x1d0
    698c:	b	69e0 <read_records+0x1364>
    6990:	add	r0, sp, #480	; 0x1e0
    6994:	add	r0, r0, #70	; 0x46
    6998:	movw	r1, #3
    699c:	add	r2, sp, #464	; 0x1d0
    69a0:	movw	r3, #0
    69a4:	bl	0 <coda_ascii_parse_int64>
    69a8:	cmp	r0, #0
    69ac:	bge	69dc <read_records+0x1360>
    69b0:	ldr	r0, [fp, #-16]
    69b4:	ldr	r1, [r0, #48]	; 0x30
    69b8:	ldr	r0, [fp, #-16]
    69bc:	ldr	r0, [r0, #52]	; 0x34
    69c0:	add	r2, r0, #70	; 0x46
    69c4:	movw	r0, #0
    69c8:	movt	r0, #0
    69cc:	bl	0 <coda_add_error_message>
    69d0:	mvn	r0, #0
    69d4:	str	r0, [fp, #-12]
    69d8:	b	7f34 <read_records+0x28b8>
    69dc:	b	69e0 <read_records+0x1364>
    69e0:	ldr	r0, [pc, #-556]	; 67bc <read_records+0x1140>
    69e4:	str	r0, [sp, #152]	; 0x98
    69e8:	bl	0 <__aeabi_read_tp>
    69ec:	ldr	r1, [sp, #152]	; 0x98
    69f0:	ldr	r0, [r0, r1]
    69f4:	ldr	r0, [r0, #212]	; 0xd4
    69f8:	ldr	r1, [fp, #-16]
    69fc:	ldr	r2, [r1, #4]
    6a00:	add	lr, sp, #256	; 0x100
    6a04:	ldrh	r1, [lr, #208]	; 0xd0
    6a08:	movw	r3, #0
    6a0c:	str	r1, [sp, #148]	; 0x94
    6a10:	mov	r1, r3
    6a14:	ldr	r3, [sp, #148]	; 0x94
    6a18:	sxth	r3, r3
    6a1c:	bl	0 <coda_mem_int16_new>
    6a20:	str	r0, [fp, #-24]	; 0xffffffe8
    6a24:	ldr	r0, [fp, #-16]
    6a28:	ldr	r0, [r0, #32]
    6a2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6a30:	movw	r1, #0
    6a34:	movt	r1, #0
    6a38:	movw	r3, #0
    6a3c:	bl	0 <coda_mem_record_add_field>
    6a40:	b	6a70 <read_records+0x13f4>
    6a44:	ldr	r0, [fp, #-16]
    6a48:	ldr	r2, [r0, #48]	; 0x30
    6a4c:	ldr	r0, [fp, #-16]
    6a50:	ldr	r3, [r0, #52]	; 0x34
    6a54:	mvn	r0, #21
    6a58:	movw	r1, #0
    6a5c:	movt	r1, #0
    6a60:	bl	0 <coda_set_error>
    6a64:	mvn	r0, #0
    6a68:	str	r0, [fp, #-12]
    6a6c:	b	7f34 <read_records+0x28b8>
    6a70:	b	6a74 <read_records+0x13f8>
    6a74:	b	6a78 <read_records+0x13fc>
    6a78:	ldr	r0, [fp, #-16]
    6a7c:	ldr	r0, [r0]
    6a80:	bl	0 <ftell>
    6a84:	add	r1, sp, #480	; 0x1e0
    6a88:	ldr	r2, [fp, #-16]
    6a8c:	str	r0, [r2, #52]	; 0x34
    6a90:	ldr	r0, [fp, #-16]
    6a94:	ldr	r2, [r0, #48]	; 0x30
    6a98:	add	r2, r2, #1
    6a9c:	str	r2, [r0, #48]	; 0x30
    6aa0:	ldr	r0, [fp, #-16]
    6aa4:	ldr	r0, [r0]
    6aa8:	bl	7f44 <get_line>
    6aac:	str	r0, [sp, #396]	; 0x18c
    6ab0:	ldr	r0, [sp, #396]	; 0x18c
    6ab4:	cmp	r0, #0
    6ab8:	bge	6ac8 <read_records+0x144c>
    6abc:	mvn	r0, #0
    6ac0:	str	r0, [fp, #-12]
    6ac4:	b	7f34 <read_records+0x28b8>
    6ac8:	ldrb	r0, [sp, #480]	; 0x1e0
    6acc:	cmp	r0, #69	; 0x45
    6ad0:	bne	7e0c <read_records+0x2790>
    6ad4:	ldrb	r0, [sp, #481]	; 0x1e1
    6ad8:	cmp	r0, #80	; 0x50
    6adc:	beq	6aec <read_records+0x1470>
    6ae0:	ldrb	r0, [sp, #481]	; 0x1e1
    6ae4:	cmp	r0, #86	; 0x56
    6ae8:	bne	7e0c <read_records+0x2790>
    6aec:	ldrb	r0, [sp, #481]	; 0x1e1
    6af0:	cmp	r0, #80	; 0x50
    6af4:	bne	7450 <read_records+0x1dd4>
    6af8:	ldr	r0, [fp, #-16]
    6afc:	ldr	r0, [r0, #24]
    6b00:	movw	r1, #0
    6b04:	cmp	r0, r1
    6b08:	bne	6b38 <read_records+0x14bc>
    6b0c:	ldr	r0, [fp, #-16]
    6b10:	ldr	r2, [r0, #48]	; 0x30
    6b14:	ldr	r0, [fp, #-16]
    6b18:	ldr	r3, [r0, #52]	; 0x34
    6b1c:	mvn	r0, #21
    6b20:	movw	r1, #0
    6b24:	movt	r1, #0
    6b28:	bl	0 <coda_set_error>
    6b2c:	mvn	r0, #0
    6b30:	str	r0, [fp, #-12]
    6b34:	b	7f34 <read_records+0x28b8>
    6b38:	ldr	r0, [pc, #-900]	; 67bc <read_records+0x1140>
    6b3c:	str	r0, [sp, #144]	; 0x90
    6b40:	bl	0 <__aeabi_read_tp>
    6b44:	ldr	r1, [sp, #144]	; 0x90
    6b48:	ldr	r0, [r0, r1]
    6b4c:	ldr	r0, [r0, #140]	; 0x8c
    6b50:	movw	r1, #0
    6b54:	bl	0 <coda_mem_record_new>
    6b58:	ldr	r1, [fp, #-16]
    6b5c:	str	r0, [r1, #36]	; 0x24
    6b60:	ldr	r0, [sp, #396]	; 0x18c
    6b64:	cmp	r0, #8
    6b68:	blt	6b90 <read_records+0x1514>
    6b6c:	add	r0, sp, #480	; 0x1e0
    6b70:	add	r0, r0, #4
    6b74:	ldr	r0, [r0]
    6b78:	movw	r1, #8224	; 0x2020
    6b7c:	movt	r1, #8224	; 0x2020
    6b80:	subs	r0, r0, r1
    6b84:	movwne	r0, #1
    6b88:	cmp	r0, #0
    6b8c:	bne	6ba0 <read_records+0x1524>
    6b90:	mov	r0, #0
    6b94:	str	r0, [sp, #468]	; 0x1d4
    6b98:	str	r0, [sp, #464]	; 0x1d0
    6b9c:	b	6bf0 <read_records+0x1574>
    6ba0:	add	r0, sp, #480	; 0x1e0
    6ba4:	add	r0, r0, #4
    6ba8:	movw	r1, #4
    6bac:	add	r2, sp, #464	; 0x1d0
    6bb0:	movw	r3, #0
    6bb4:	bl	0 <coda_ascii_parse_int64>
    6bb8:	cmp	r0, #0
    6bbc:	bge	6bec <read_records+0x1570>
    6bc0:	ldr	r0, [fp, #-16]
    6bc4:	ldr	r1, [r0, #48]	; 0x30
    6bc8:	ldr	r0, [fp, #-16]
    6bcc:	ldr	r0, [r0, #52]	; 0x34
    6bd0:	add	r2, r0, #4
    6bd4:	movw	r0, #0
    6bd8:	movt	r0, #0
    6bdc:	bl	0 <coda_add_error_message>
    6be0:	mvn	r0, #0
    6be4:	str	r0, [fp, #-12]
    6be8:	b	7f34 <read_records+0x28b8>
    6bec:	b	6bf0 <read_records+0x1574>
    6bf0:	ldr	r0, [pc, #-1084]	; 67bc <read_records+0x1140>
    6bf4:	str	r0, [sp, #140]	; 0x8c
    6bf8:	bl	0 <__aeabi_read_tp>
    6bfc:	ldr	r1, [sp, #140]	; 0x8c
    6c00:	ldr	r0, [r0, r1]
    6c04:	ldr	r0, [r0, #144]	; 0x90
    6c08:	ldr	r1, [fp, #-16]
    6c0c:	ldr	r2, [r1, #4]
    6c10:	add	lr, sp, #256	; 0x100
    6c14:	ldrh	r1, [lr, #208]	; 0xd0
    6c18:	movw	r3, #0
    6c1c:	str	r1, [sp, #136]	; 0x88
    6c20:	mov	r1, r3
    6c24:	ldr	r3, [sp, #136]	; 0x88
    6c28:	sxth	r3, r3
    6c2c:	bl	0 <coda_mem_int16_new>
    6c30:	str	r0, [fp, #-24]	; 0xffffffe8
    6c34:	ldr	r0, [fp, #-16]
    6c38:	ldr	r0, [r0, #36]	; 0x24
    6c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6c40:	movw	r1, #0
    6c44:	movt	r1, #0
    6c48:	movw	r3, #0
    6c4c:	bl	0 <coda_mem_record_add_field>
    6c50:	ldr	r1, [sp, #396]	; 0x18c
    6c54:	cmp	r1, #13
    6c58:	blt	6c80 <read_records+0x1604>
    6c5c:	add	r0, sp, #480	; 0x1e0
    6c60:	add	r0, r0, #9
    6c64:	ldr	r0, [r0]
    6c68:	movw	r1, #8224	; 0x2020
    6c6c:	movt	r1, #8224	; 0x2020
    6c70:	subs	r0, r0, r1
    6c74:	movwne	r0, #1
    6c78:	cmp	r0, #0
    6c7c:	bne	6c90 <read_records+0x1614>
    6c80:	mov	r0, #0
    6c84:	str	r0, [sp, #468]	; 0x1d4
    6c88:	str	r0, [sp, #464]	; 0x1d0
    6c8c:	b	6ce0 <read_records+0x1664>
    6c90:	add	r0, sp, #480	; 0x1e0
    6c94:	add	r0, r0, #9
    6c98:	movw	r1, #4
    6c9c:	add	r2, sp, #464	; 0x1d0
    6ca0:	movw	r3, #0
    6ca4:	bl	0 <coda_ascii_parse_int64>
    6ca8:	cmp	r0, #0
    6cac:	bge	6cdc <read_records+0x1660>
    6cb0:	ldr	r0, [fp, #-16]
    6cb4:	ldr	r1, [r0, #48]	; 0x30
    6cb8:	ldr	r0, [fp, #-16]
    6cbc:	ldr	r0, [r0, #52]	; 0x34
    6cc0:	add	r2, r0, #9
    6cc4:	movw	r0, #0
    6cc8:	movt	r0, #0
    6ccc:	bl	0 <coda_add_error_message>
    6cd0:	mvn	r0, #0
    6cd4:	str	r0, [fp, #-12]
    6cd8:	b	7f34 <read_records+0x28b8>
    6cdc:	b	6ce0 <read_records+0x1664>
    6ce0:	ldr	r0, [pc, #-1324]	; 67bc <read_records+0x1140>
    6ce4:	str	r0, [sp, #132]	; 0x84
    6ce8:	bl	0 <__aeabi_read_tp>
    6cec:	ldr	r1, [sp, #132]	; 0x84
    6cf0:	ldr	r0, [r0, r1]
    6cf4:	ldr	r0, [r0, #148]	; 0x94
    6cf8:	ldr	r1, [fp, #-16]
    6cfc:	ldr	r2, [r1, #4]
    6d00:	add	lr, sp, #256	; 0x100
    6d04:	ldrh	r1, [lr, #208]	; 0xd0
    6d08:	movw	r3, #0
    6d0c:	str	r1, [sp, #128]	; 0x80
    6d10:	mov	r1, r3
    6d14:	ldr	r3, [sp, #128]	; 0x80
    6d18:	sxth	r3, r3
    6d1c:	bl	0 <coda_mem_int16_new>
    6d20:	str	r0, [fp, #-24]	; 0xffffffe8
    6d24:	ldr	r0, [fp, #-16]
    6d28:	ldr	r0, [r0, #36]	; 0x24
    6d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6d30:	movw	r1, #0
    6d34:	movt	r1, #0
    6d38:	movw	r3, #0
    6d3c:	bl	0 <coda_mem_record_add_field>
    6d40:	ldr	r1, [sp, #396]	; 0x18c
    6d44:	cmp	r1, #18
    6d48:	blt	6d70 <read_records+0x16f4>
    6d4c:	add	r0, sp, #480	; 0x1e0
    6d50:	add	r0, r0, #14
    6d54:	ldr	r0, [r0]
    6d58:	movw	r1, #8224	; 0x2020
    6d5c:	movt	r1, #8224	; 0x2020
    6d60:	subs	r0, r0, r1
    6d64:	movwne	r0, #1
    6d68:	cmp	r0, #0
    6d6c:	bne	6d80 <read_records+0x1704>
    6d70:	mov	r0, #0
    6d74:	str	r0, [sp, #468]	; 0x1d4
    6d78:	str	r0, [sp, #464]	; 0x1d0
    6d7c:	b	6dd0 <read_records+0x1754>
    6d80:	add	r0, sp, #480	; 0x1e0
    6d84:	add	r0, r0, #14
    6d88:	movw	r1, #4
    6d8c:	add	r2, sp, #464	; 0x1d0
    6d90:	movw	r3, #0
    6d94:	bl	0 <coda_ascii_parse_int64>
    6d98:	cmp	r0, #0
    6d9c:	bge	6dcc <read_records+0x1750>
    6da0:	ldr	r0, [fp, #-16]
    6da4:	ldr	r1, [r0, #48]	; 0x30
    6da8:	ldr	r0, [fp, #-16]
    6dac:	ldr	r0, [r0, #52]	; 0x34
    6db0:	add	r2, r0, #14
    6db4:	movw	r0, #0
    6db8:	movt	r0, #0
    6dbc:	bl	0 <coda_add_error_message>
    6dc0:	mvn	r0, #0
    6dc4:	str	r0, [fp, #-12]
    6dc8:	b	7f34 <read_records+0x28b8>
    6dcc:	b	6dd0 <read_records+0x1754>
    6dd0:	ldr	r0, [pc, #-1564]	; 67bc <read_records+0x1140>
    6dd4:	str	r0, [sp, #124]	; 0x7c
    6dd8:	bl	0 <__aeabi_read_tp>
    6ddc:	ldr	r1, [sp, #124]	; 0x7c
    6de0:	ldr	r0, [r0, r1]
    6de4:	ldr	r0, [r0, #152]	; 0x98
    6de8:	ldr	r1, [fp, #-16]
    6dec:	ldr	r2, [r1, #4]
    6df0:	add	lr, sp, #256	; 0x100
    6df4:	ldrh	r1, [lr, #208]	; 0xd0
    6df8:	movw	r3, #0
    6dfc:	str	r1, [sp, #120]	; 0x78
    6e00:	mov	r1, r3
    6e04:	ldr	r3, [sp, #120]	; 0x78
    6e08:	sxth	r3, r3
    6e0c:	bl	0 <coda_mem_int16_new>
    6e10:	str	r0, [fp, #-24]	; 0xffffffe8
    6e14:	ldr	r0, [fp, #-16]
    6e18:	ldr	r0, [r0, #36]	; 0x24
    6e1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6e20:	movw	r1, #0
    6e24:	movt	r1, #0
    6e28:	movw	r3, #0
    6e2c:	bl	0 <coda_mem_record_add_field>
    6e30:	ldr	r1, [sp, #396]	; 0x18c
    6e34:	cmp	r1, #26
    6e38:	blt	6e5c <read_records+0x17e0>
    6e3c:	add	r0, sp, #480	; 0x1e0
    6e40:	add	r0, r0, #19
    6e44:	movw	r1, #0
    6e48:	movt	r1, #0
    6e4c:	mov	r2, #7
    6e50:	bl	0 <memcmp>
    6e54:	cmp	r0, #0
    6e58:	bne	6e6c <read_records+0x17f0>
    6e5c:	mov	r0, #0
    6e60:	str	r0, [sp, #468]	; 0x1d4
    6e64:	str	r0, [sp, #464]	; 0x1d0
    6e68:	b	6ebc <read_records+0x1840>
    6e6c:	add	r0, sp, #480	; 0x1e0
    6e70:	add	r0, r0, #19
    6e74:	movw	r1, #7
    6e78:	add	r2, sp, #464	; 0x1d0
    6e7c:	movw	r3, #0
    6e80:	bl	0 <coda_ascii_parse_int64>
    6e84:	cmp	r0, #0
    6e88:	bge	6eb8 <read_records+0x183c>
    6e8c:	ldr	r0, [fp, #-16]
    6e90:	ldr	r1, [r0, #48]	; 0x30
    6e94:	ldr	r0, [fp, #-16]
    6e98:	ldr	r0, [r0, #52]	; 0x34
    6e9c:	add	r2, r0, #19
    6ea0:	movw	r0, #0
    6ea4:	movt	r0, #0
    6ea8:	bl	0 <coda_add_error_message>
    6eac:	mvn	r0, #0
    6eb0:	str	r0, [fp, #-12]
    6eb4:	b	7f34 <read_records+0x28b8>
    6eb8:	b	6ebc <read_records+0x1840>
    6ebc:	ldr	r0, [pc, #-1800]	; 67bc <read_records+0x1140>
    6ec0:	str	r0, [sp, #116]	; 0x74
    6ec4:	bl	0 <__aeabi_read_tp>
    6ec8:	ldr	r1, [sp, #116]	; 0x74
    6ecc:	ldr	r0, [r0, r1]
    6ed0:	ldr	r0, [r0, #156]	; 0x9c
    6ed4:	ldr	r1, [fp, #-16]
    6ed8:	ldr	r2, [r1, #4]
    6edc:	ldr	r3, [sp, #464]	; 0x1d0
    6ee0:	movw	r1, #0
    6ee4:	bl	0 <coda_mem_int32_new>
    6ee8:	str	r0, [fp, #-24]	; 0xffffffe8
    6eec:	ldr	r0, [fp, #-16]
    6ef0:	ldr	r0, [r0, #36]	; 0x24
    6ef4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6ef8:	movw	r1, #0
    6efc:	movt	r1, #0
    6f00:	movw	r3, #0
    6f04:	bl	0 <coda_mem_record_add_field>
    6f08:	ldr	r1, [sp, #396]	; 0x18c
    6f0c:	cmp	r1, #35	; 0x23
    6f10:	blt	6f34 <read_records+0x18b8>
    6f14:	add	r0, sp, #480	; 0x1e0
    6f18:	add	r0, r0, #27
    6f1c:	movw	r1, #0
    6f20:	movt	r1, #0
    6f24:	mov	r2, #8
    6f28:	bl	0 <memcmp>
    6f2c:	cmp	r0, #0
    6f30:	bne	6f44 <read_records+0x18c8>
    6f34:	mov	r0, #0
    6f38:	str	r0, [sp, #468]	; 0x1d4
    6f3c:	str	r0, [sp, #464]	; 0x1d0
    6f40:	b	6f94 <read_records+0x1918>
    6f44:	add	r0, sp, #480	; 0x1e0
    6f48:	add	r0, r0, #27
    6f4c:	movw	r1, #8
    6f50:	add	r2, sp, #464	; 0x1d0
    6f54:	movw	r3, #0
    6f58:	bl	0 <coda_ascii_parse_int64>
    6f5c:	cmp	r0, #0
    6f60:	bge	6f90 <read_records+0x1914>
    6f64:	ldr	r0, [fp, #-16]
    6f68:	ldr	r1, [r0, #48]	; 0x30
    6f6c:	ldr	r0, [fp, #-16]
    6f70:	ldr	r0, [r0, #52]	; 0x34
    6f74:	add	r2, r0, #27
    6f78:	movw	r0, #0
    6f7c:	movt	r0, #0
    6f80:	bl	0 <coda_add_error_message>
    6f84:	mvn	r0, #0
    6f88:	str	r0, [fp, #-12]
    6f8c:	b	7f34 <read_records+0x28b8>
    6f90:	b	6f94 <read_records+0x1918>
    6f94:	ldr	r0, [pc, #4004]	; 7f40 <read_records+0x28c4>
    6f98:	str	r0, [sp, #112]	; 0x70
    6f9c:	bl	0 <__aeabi_read_tp>
    6fa0:	ldr	r1, [sp, #112]	; 0x70
    6fa4:	ldr	r0, [r0, r1]
    6fa8:	ldr	r0, [r0, #160]	; 0xa0
    6fac:	ldr	r1, [fp, #-16]
    6fb0:	ldr	r2, [r1, #4]
    6fb4:	ldr	r3, [sp, #464]	; 0x1d0
    6fb8:	movw	r1, #0
    6fbc:	bl	0 <coda_mem_int32_new>
    6fc0:	str	r0, [fp, #-24]	; 0xffffffe8
    6fc4:	ldr	r0, [fp, #-16]
    6fc8:	ldr	r0, [r0, #36]	; 0x24
    6fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6fd0:	movw	r1, #0
    6fd4:	movt	r1, #0
    6fd8:	movw	r3, #0
    6fdc:	bl	0 <coda_mem_record_add_field>
    6fe0:	ldr	r1, [sp, #396]	; 0x18c
    6fe4:	cmp	r1, #44	; 0x2c
    6fe8:	blt	700c <read_records+0x1990>
    6fec:	add	r0, sp, #480	; 0x1e0
    6ff0:	add	r0, r0, #36	; 0x24
    6ff4:	movw	r1, #0
    6ff8:	movt	r1, #0
    6ffc:	mov	r2, #8
    7000:	bl	0 <memcmp>
    7004:	cmp	r0, #0
    7008:	bne	701c <read_records+0x19a0>
    700c:	mov	r0, #0
    7010:	str	r0, [sp, #468]	; 0x1d4
    7014:	str	r0, [sp, #464]	; 0x1d0
    7018:	b	706c <read_records+0x19f0>
    701c:	add	r0, sp, #480	; 0x1e0
    7020:	add	r0, r0, #36	; 0x24
    7024:	movw	r1, #8
    7028:	add	r2, sp, #464	; 0x1d0
    702c:	movw	r3, #0
    7030:	bl	0 <coda_ascii_parse_int64>
    7034:	cmp	r0, #0
    7038:	bge	7068 <read_records+0x19ec>
    703c:	ldr	r0, [fp, #-16]
    7040:	ldr	r1, [r0, #48]	; 0x30
    7044:	ldr	r0, [fp, #-16]
    7048:	ldr	r0, [r0, #52]	; 0x34
    704c:	add	r2, r0, #36	; 0x24
    7050:	movw	r0, #0
    7054:	movt	r0, #0
    7058:	bl	0 <coda_add_error_message>
    705c:	mvn	r0, #0
    7060:	str	r0, [fp, #-12]
    7064:	b	7f34 <read_records+0x28b8>
    7068:	b	706c <read_records+0x19f0>
    706c:	ldr	r0, [pc, #3788]	; 7f40 <read_records+0x28c4>
    7070:	str	r0, [sp, #108]	; 0x6c
    7074:	bl	0 <__aeabi_read_tp>
    7078:	ldr	r1, [sp, #108]	; 0x6c
    707c:	ldr	r0, [r0, r1]
    7080:	ldr	r0, [r0, #164]	; 0xa4
    7084:	ldr	r1, [fp, #-16]
    7088:	ldr	r2, [r1, #4]
    708c:	ldr	r3, [sp, #464]	; 0x1d0
    7090:	movw	r1, #0
    7094:	bl	0 <coda_mem_int32_new>
    7098:	str	r0, [fp, #-24]	; 0xffffffe8
    709c:	ldr	r0, [fp, #-16]
    70a0:	ldr	r0, [r0, #36]	; 0x24
    70a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    70a8:	movw	r1, #0
    70ac:	movt	r1, #0
    70b0:	movw	r3, #0
    70b4:	bl	0 <coda_mem_record_add_field>
    70b8:	ldr	r1, [sp, #396]	; 0x18c
    70bc:	cmp	r1, #53	; 0x35
    70c0:	blt	70e4 <read_records+0x1a68>
    70c4:	add	r0, sp, #480	; 0x1e0
    70c8:	add	r0, r0, #45	; 0x2d
    70cc:	movw	r1, #0
    70d0:	movt	r1, #0
    70d4:	mov	r2, #8
    70d8:	bl	0 <memcmp>
    70dc:	cmp	r0, #0
    70e0:	bne	70f4 <read_records+0x1a78>
    70e4:	mov	r0, #0
    70e8:	str	r0, [sp, #468]	; 0x1d4
    70ec:	str	r0, [sp, #464]	; 0x1d0
    70f0:	b	7144 <read_records+0x1ac8>
    70f4:	add	r0, sp, #480	; 0x1e0
    70f8:	add	r0, r0, #45	; 0x2d
    70fc:	movw	r1, #8
    7100:	add	r2, sp, #464	; 0x1d0
    7104:	movw	r3, #0
    7108:	bl	0 <coda_ascii_parse_int64>
    710c:	cmp	r0, #0
    7110:	bge	7140 <read_records+0x1ac4>
    7114:	ldr	r0, [fp, #-16]
    7118:	ldr	r1, [r0, #48]	; 0x30
    711c:	ldr	r0, [fp, #-16]
    7120:	ldr	r0, [r0, #52]	; 0x34
    7124:	add	r2, r0, #45	; 0x2d
    7128:	movw	r0, #0
    712c:	movt	r0, #0
    7130:	bl	0 <coda_add_error_message>
    7134:	mvn	r0, #0
    7138:	str	r0, [fp, #-12]
    713c:	b	7f34 <read_records+0x28b8>
    7140:	b	7144 <read_records+0x1ac8>
    7144:	ldr	r0, [pc, #3572]	; 7f40 <read_records+0x28c4>
    7148:	str	r0, [sp, #104]	; 0x68
    714c:	bl	0 <__aeabi_read_tp>
    7150:	ldr	r1, [sp, #104]	; 0x68
    7154:	ldr	r0, [r0, r1]
    7158:	ldr	r0, [r0, #168]	; 0xa8
    715c:	ldr	r1, [fp, #-16]
    7160:	ldr	r2, [r1, #4]
    7164:	ldr	r3, [sp, #464]	; 0x1d0
    7168:	movw	r1, #0
    716c:	bl	0 <coda_mem_int32_new>
    7170:	str	r0, [fp, #-24]	; 0xffffffe8
    7174:	ldr	r0, [fp, #-16]
    7178:	ldr	r0, [r0, #36]	; 0x24
    717c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7180:	movw	r1, #0
    7184:	movt	r1, #0
    7188:	movw	r3, #0
    718c:	bl	0 <coda_mem_record_add_field>
    7190:	ldr	r1, [sp, #396]	; 0x18c
    7194:	cmp	r1, #62	; 0x3e
    7198:	blt	71bc <read_records+0x1b40>
    719c:	add	r0, sp, #480	; 0x1e0
    71a0:	add	r0, r0, #54	; 0x36
    71a4:	movw	r1, #0
    71a8:	movt	r1, #0
    71ac:	mov	r2, #8
    71b0:	bl	0 <memcmp>
    71b4:	cmp	r0, #0
    71b8:	bne	71cc <read_records+0x1b50>
    71bc:	mov	r0, #0
    71c0:	str	r0, [sp, #468]	; 0x1d4
    71c4:	str	r0, [sp, #464]	; 0x1d0
    71c8:	b	721c <read_records+0x1ba0>
    71cc:	add	r0, sp, #480	; 0x1e0
    71d0:	add	r0, r0, #54	; 0x36
    71d4:	movw	r1, #8
    71d8:	add	r2, sp, #464	; 0x1d0
    71dc:	movw	r3, #0
    71e0:	bl	0 <coda_ascii_parse_int64>
    71e4:	cmp	r0, #0
    71e8:	bge	7218 <read_records+0x1b9c>
    71ec:	ldr	r0, [fp, #-16]
    71f0:	ldr	r1, [r0, #48]	; 0x30
    71f4:	ldr	r0, [fp, #-16]
    71f8:	ldr	r0, [r0, #52]	; 0x34
    71fc:	add	r2, r0, #54	; 0x36
    7200:	movw	r0, #0
    7204:	movt	r0, #0
    7208:	bl	0 <coda_add_error_message>
    720c:	mvn	r0, #0
    7210:	str	r0, [fp, #-12]
    7214:	b	7f34 <read_records+0x28b8>
    7218:	b	721c <read_records+0x1ba0>
    721c:	ldr	r0, [pc, #3356]	; 7f40 <read_records+0x28c4>
    7220:	str	r0, [sp, #100]	; 0x64
    7224:	bl	0 <__aeabi_read_tp>
    7228:	ldr	r1, [sp, #100]	; 0x64
    722c:	ldr	r0, [r0, r1]
    7230:	ldr	r0, [r0, #172]	; 0xac
    7234:	ldr	r1, [fp, #-16]
    7238:	ldr	r2, [r1, #4]
    723c:	ldr	r3, [sp, #464]	; 0x1d0
    7240:	movw	r1, #0
    7244:	bl	0 <coda_mem_int32_new>
    7248:	str	r0, [fp, #-24]	; 0xffffffe8
    724c:	ldr	r0, [fp, #-16]
    7250:	ldr	r0, [r0, #36]	; 0x24
    7254:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7258:	movw	r1, #0
    725c:	movt	r1, #0
    7260:	movw	r3, #0
    7264:	bl	0 <coda_mem_record_add_field>
    7268:	ldr	r1, [sp, #396]	; 0x18c
    726c:	cmp	r1, #71	; 0x47
    7270:	blt	7294 <read_records+0x1c18>
    7274:	add	r0, sp, #480	; 0x1e0
    7278:	add	r0, r0, #63	; 0x3f
    727c:	movw	r1, #0
    7280:	movt	r1, #0
    7284:	mov	r2, #8
    7288:	bl	0 <memcmp>
    728c:	cmp	r0, #0
    7290:	bne	72a4 <read_records+0x1c28>
    7294:	mov	r0, #0
    7298:	str	r0, [sp, #468]	; 0x1d4
    729c:	str	r0, [sp, #464]	; 0x1d0
    72a0:	b	72f4 <read_records+0x1c78>
    72a4:	add	r0, sp, #480	; 0x1e0
    72a8:	add	r0, r0, #63	; 0x3f
    72ac:	movw	r1, #8
    72b0:	add	r2, sp, #464	; 0x1d0
    72b4:	movw	r3, #0
    72b8:	bl	0 <coda_ascii_parse_int64>
    72bc:	cmp	r0, #0
    72c0:	bge	72f0 <read_records+0x1c74>
    72c4:	ldr	r0, [fp, #-16]
    72c8:	ldr	r1, [r0, #48]	; 0x30
    72cc:	ldr	r0, [fp, #-16]
    72d0:	ldr	r0, [r0, #52]	; 0x34
    72d4:	add	r2, r0, #63	; 0x3f
    72d8:	movw	r0, #0
    72dc:	movt	r0, #0
    72e0:	bl	0 <coda_add_error_message>
    72e4:	mvn	r0, #0
    72e8:	str	r0, [fp, #-12]
    72ec:	b	7f34 <read_records+0x28b8>
    72f0:	b	72f4 <read_records+0x1c78>
    72f4:	ldr	r0, [pc, #3140]	; 7f40 <read_records+0x28c4>
    72f8:	str	r0, [sp, #96]	; 0x60
    72fc:	bl	0 <__aeabi_read_tp>
    7300:	ldr	r1, [sp, #96]	; 0x60
    7304:	ldr	r0, [r0, r1]
    7308:	ldr	r0, [r0, #176]	; 0xb0
    730c:	ldr	r1, [fp, #-16]
    7310:	ldr	r2, [r1, #4]
    7314:	ldr	r3, [sp, #464]	; 0x1d0
    7318:	movw	r1, #0
    731c:	bl	0 <coda_mem_int32_new>
    7320:	str	r0, [fp, #-24]	; 0xffffffe8
    7324:	ldr	r0, [fp, #-16]
    7328:	ldr	r0, [r0, #36]	; 0x24
    732c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7330:	movw	r1, #0
    7334:	movt	r1, #0
    7338:	movw	r3, #0
    733c:	bl	0 <coda_mem_record_add_field>
    7340:	ldr	r1, [sp, #396]	; 0x18c
    7344:	cmp	r1, #80	; 0x50
    7348:	blt	736c <read_records+0x1cf0>
    734c:	add	r0, sp, #480	; 0x1e0
    7350:	add	r0, r0, #72	; 0x48
    7354:	movw	r1, #0
    7358:	movt	r1, #0
    735c:	mov	r2, #8
    7360:	bl	0 <memcmp>
    7364:	cmp	r0, #0
    7368:	bne	737c <read_records+0x1d00>
    736c:	mov	r0, #0
    7370:	str	r0, [sp, #468]	; 0x1d4
    7374:	str	r0, [sp, #464]	; 0x1d0
    7378:	b	73cc <read_records+0x1d50>
    737c:	add	r0, sp, #480	; 0x1e0
    7380:	add	r0, r0, #72	; 0x48
    7384:	movw	r1, #8
    7388:	add	r2, sp, #464	; 0x1d0
    738c:	movw	r3, #0
    7390:	bl	0 <coda_ascii_parse_int64>
    7394:	cmp	r0, #0
    7398:	bge	73c8 <read_records+0x1d4c>
    739c:	ldr	r0, [fp, #-16]
    73a0:	ldr	r1, [r0, #48]	; 0x30
    73a4:	ldr	r0, [fp, #-16]
    73a8:	ldr	r0, [r0, #52]	; 0x34
    73ac:	add	r2, r0, #72	; 0x48
    73b0:	movw	r0, #0
    73b4:	movt	r0, #0
    73b8:	bl	0 <coda_add_error_message>
    73bc:	mvn	r0, #0
    73c0:	str	r0, [fp, #-12]
    73c4:	b	7f34 <read_records+0x28b8>
    73c8:	b	73cc <read_records+0x1d50>
    73cc:	ldr	r0, [pc, #2924]	; 7f40 <read_records+0x28c4>
    73d0:	str	r0, [sp, #92]	; 0x5c
    73d4:	bl	0 <__aeabi_read_tp>
    73d8:	ldr	r1, [sp, #92]	; 0x5c
    73dc:	ldr	r0, [r0, r1]
    73e0:	ldr	r0, [r0, #180]	; 0xb4
    73e4:	ldr	r1, [fp, #-16]
    73e8:	ldr	r2, [r1, #4]
    73ec:	ldr	r3, [sp, #464]	; 0x1d0
    73f0:	movw	r1, #0
    73f4:	bl	0 <coda_mem_int32_new>
    73f8:	str	r0, [fp, #-24]	; 0xffffffe8
    73fc:	ldr	r0, [fp, #-16]
    7400:	ldr	r0, [r0, #36]	; 0x24
    7404:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7408:	movw	r1, #0
    740c:	movt	r1, #0
    7410:	movw	r3, #0
    7414:	bl	0 <coda_mem_record_add_field>
    7418:	ldr	r1, [fp, #-16]
    741c:	ldr	r1, [r1, #24]
    7420:	ldr	r2, [fp, #-16]
    7424:	ldr	r2, [r2, #36]	; 0x24
    7428:	str	r0, [sp, #88]	; 0x58
    742c:	mov	r0, r1
    7430:	movw	r1, #0
    7434:	movt	r1, #0
    7438:	movw	r3, #0
    743c:	bl	0 <coda_mem_record_add_field>
    7440:	ldr	r1, [fp, #-16]
    7444:	movw	r2, #0
    7448:	str	r2, [r1, #36]	; 0x24
    744c:	b	7db8 <read_records+0x273c>
    7450:	ldr	r0, [fp, #-16]
    7454:	ldr	r0, [r0, #32]
    7458:	movw	r1, #0
    745c:	cmp	r0, r1
    7460:	bne	7490 <read_records+0x1e14>
    7464:	ldr	r0, [fp, #-16]
    7468:	ldr	r2, [r0, #48]	; 0x30
    746c:	ldr	r0, [fp, #-16]
    7470:	ldr	r3, [r0, #52]	; 0x34
    7474:	mvn	r0, #21
    7478:	movw	r1, #0
    747c:	movt	r1, #0
    7480:	bl	0 <coda_set_error>
    7484:	mvn	r0, #0
    7488:	str	r0, [fp, #-12]
    748c:	b	7f34 <read_records+0x28b8>
    7490:	ldr	r0, [pc, #2728]	; 7f40 <read_records+0x28c4>
    7494:	str	r0, [sp, #84]	; 0x54
    7498:	bl	0 <__aeabi_read_tp>
    749c:	ldr	r1, [sp, #84]	; 0x54
    74a0:	ldr	r0, [r0, r1]
    74a4:	ldr	r0, [r0, #216]	; 0xd8
    74a8:	movw	r1, #0
    74ac:	bl	0 <coda_mem_record_new>
    74b0:	ldr	r1, [fp, #-16]
    74b4:	str	r0, [r1, #36]	; 0x24
    74b8:	ldr	r0, [sp, #396]	; 0x18c
    74bc:	cmp	r0, #8
    74c0:	blt	74e8 <read_records+0x1e6c>
    74c4:	add	r0, sp, #480	; 0x1e0
    74c8:	add	r0, r0, #4
    74cc:	ldr	r0, [r0]
    74d0:	movw	r1, #8224	; 0x2020
    74d4:	movt	r1, #8224	; 0x2020
    74d8:	subs	r0, r0, r1
    74dc:	movwne	r0, #1
    74e0:	cmp	r0, #0
    74e4:	bne	74f8 <read_records+0x1e7c>
    74e8:	mov	r0, #0
    74ec:	str	r0, [sp, #468]	; 0x1d4
    74f0:	str	r0, [sp, #464]	; 0x1d0
    74f4:	b	7548 <read_records+0x1ecc>
    74f8:	add	r0, sp, #480	; 0x1e0
    74fc:	add	r0, r0, #4
    7500:	movw	r1, #4
    7504:	add	r2, sp, #464	; 0x1d0
    7508:	movw	r3, #0
    750c:	bl	0 <coda_ascii_parse_int64>
    7510:	cmp	r0, #0
    7514:	bge	7544 <read_records+0x1ec8>
    7518:	ldr	r0, [fp, #-16]
    751c:	ldr	r1, [r0, #48]	; 0x30
    7520:	ldr	r0, [fp, #-16]
    7524:	ldr	r0, [r0, #52]	; 0x34
    7528:	add	r2, r0, #4
    752c:	movw	r0, #0
    7530:	movt	r0, #0
    7534:	bl	0 <coda_add_error_message>
    7538:	mvn	r0, #0
    753c:	str	r0, [fp, #-12]
    7540:	b	7f34 <read_records+0x28b8>
    7544:	b	7548 <read_records+0x1ecc>
    7548:	ldr	r0, [pc, #2544]	; 7f40 <read_records+0x28c4>
    754c:	str	r0, [sp, #80]	; 0x50
    7550:	bl	0 <__aeabi_read_tp>
    7554:	ldr	r1, [sp, #80]	; 0x50
    7558:	ldr	r0, [r0, r1]
    755c:	ldr	r0, [r0, #220]	; 0xdc
    7560:	ldr	r1, [fp, #-16]
    7564:	ldr	r2, [r1, #4]
    7568:	add	lr, sp, #256	; 0x100
    756c:	ldrh	r1, [lr, #208]	; 0xd0
    7570:	movw	r3, #0
    7574:	str	r1, [sp, #76]	; 0x4c
    7578:	mov	r1, r3
    757c:	ldr	r3, [sp, #76]	; 0x4c
    7580:	sxth	r3, r3
    7584:	bl	0 <coda_mem_int16_new>
    7588:	str	r0, [fp, #-24]	; 0xffffffe8
    758c:	ldr	r0, [fp, #-16]
    7590:	ldr	r0, [r0, #36]	; 0x24
    7594:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7598:	movw	r1, #0
    759c:	movt	r1, #0
    75a0:	movw	r3, #0
    75a4:	bl	0 <coda_mem_record_add_field>
    75a8:	ldr	r1, [sp, #396]	; 0x18c
    75ac:	cmp	r1, #13
    75b0:	blt	75d8 <read_records+0x1f5c>
    75b4:	add	r0, sp, #480	; 0x1e0
    75b8:	add	r0, r0, #9
    75bc:	ldr	r0, [r0]
    75c0:	movw	r1, #8224	; 0x2020
    75c4:	movt	r1, #8224	; 0x2020
    75c8:	subs	r0, r0, r1
    75cc:	movwne	r0, #1
    75d0:	cmp	r0, #0
    75d4:	bne	75e8 <read_records+0x1f6c>
    75d8:	mov	r0, #0
    75dc:	str	r0, [sp, #468]	; 0x1d4
    75e0:	str	r0, [sp, #464]	; 0x1d0
    75e4:	b	7638 <read_records+0x1fbc>
    75e8:	add	r0, sp, #480	; 0x1e0
    75ec:	add	r0, r0, #9
    75f0:	movw	r1, #4
    75f4:	add	r2, sp, #464	; 0x1d0
    75f8:	movw	r3, #0
    75fc:	bl	0 <coda_ascii_parse_int64>
    7600:	cmp	r0, #0
    7604:	bge	7634 <read_records+0x1fb8>
    7608:	ldr	r0, [fp, #-16]
    760c:	ldr	r1, [r0, #48]	; 0x30
    7610:	ldr	r0, [fp, #-16]
    7614:	ldr	r0, [r0, #52]	; 0x34
    7618:	add	r2, r0, #9
    761c:	movw	r0, #0
    7620:	movt	r0, #0
    7624:	bl	0 <coda_add_error_message>
    7628:	mvn	r0, #0
    762c:	str	r0, [fp, #-12]
    7630:	b	7f34 <read_records+0x28b8>
    7634:	b	7638 <read_records+0x1fbc>
    7638:	ldr	r0, [pc, #2304]	; 7f40 <read_records+0x28c4>
    763c:	str	r0, [sp, #72]	; 0x48
    7640:	bl	0 <__aeabi_read_tp>
    7644:	ldr	r1, [sp, #72]	; 0x48
    7648:	ldr	r0, [r0, r1]
    764c:	ldr	r0, [r0, #224]	; 0xe0
    7650:	ldr	r1, [fp, #-16]
    7654:	ldr	r2, [r1, #4]
    7658:	add	lr, sp, #256	; 0x100
    765c:	ldrh	r1, [lr, #208]	; 0xd0
    7660:	movw	r3, #0
    7664:	str	r1, [sp, #68]	; 0x44
    7668:	mov	r1, r3
    766c:	ldr	r3, [sp, #68]	; 0x44
    7670:	sxth	r3, r3
    7674:	bl	0 <coda_mem_int16_new>
    7678:	str	r0, [fp, #-24]	; 0xffffffe8
    767c:	ldr	r0, [fp, #-16]
    7680:	ldr	r0, [r0, #36]	; 0x24
    7684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7688:	movw	r1, #0
    768c:	movt	r1, #0
    7690:	movw	r3, #0
    7694:	bl	0 <coda_mem_record_add_field>
    7698:	ldr	r1, [sp, #396]	; 0x18c
    769c:	cmp	r1, #18
    76a0:	blt	76c8 <read_records+0x204c>
    76a4:	add	r0, sp, #480	; 0x1e0
    76a8:	add	r0, r0, #14
    76ac:	ldr	r0, [r0]
    76b0:	movw	r1, #8224	; 0x2020
    76b4:	movt	r1, #8224	; 0x2020
    76b8:	subs	r0, r0, r1
    76bc:	movwne	r0, #1
    76c0:	cmp	r0, #0
    76c4:	bne	76d8 <read_records+0x205c>
    76c8:	mov	r0, #0
    76cc:	str	r0, [sp, #468]	; 0x1d4
    76d0:	str	r0, [sp, #464]	; 0x1d0
    76d4:	b	7728 <read_records+0x20ac>
    76d8:	add	r0, sp, #480	; 0x1e0
    76dc:	add	r0, r0, #14
    76e0:	movw	r1, #4
    76e4:	add	r2, sp, #464	; 0x1d0
    76e8:	movw	r3, #0
    76ec:	bl	0 <coda_ascii_parse_int64>
    76f0:	cmp	r0, #0
    76f4:	bge	7724 <read_records+0x20a8>
    76f8:	ldr	r0, [fp, #-16]
    76fc:	ldr	r1, [r0, #48]	; 0x30
    7700:	ldr	r0, [fp, #-16]
    7704:	ldr	r0, [r0, #52]	; 0x34
    7708:	add	r2, r0, #14
    770c:	movw	r0, #0
    7710:	movt	r0, #0
    7714:	bl	0 <coda_add_error_message>
    7718:	mvn	r0, #0
    771c:	str	r0, [fp, #-12]
    7720:	b	7f34 <read_records+0x28b8>
    7724:	b	7728 <read_records+0x20ac>
    7728:	ldr	r0, [pc, #2064]	; 7f40 <read_records+0x28c4>
    772c:	str	r0, [sp, #64]	; 0x40
    7730:	bl	0 <__aeabi_read_tp>
    7734:	ldr	r1, [sp, #64]	; 0x40
    7738:	ldr	r0, [r0, r1]
    773c:	ldr	r0, [r0, #228]	; 0xe4
    7740:	ldr	r1, [fp, #-16]
    7744:	ldr	r2, [r1, #4]
    7748:	add	lr, sp, #256	; 0x100
    774c:	ldrh	r1, [lr, #208]	; 0xd0
    7750:	movw	r3, #0
    7754:	str	r1, [sp, #60]	; 0x3c
    7758:	mov	r1, r3
    775c:	ldr	r3, [sp, #60]	; 0x3c
    7760:	sxth	r3, r3
    7764:	bl	0 <coda_mem_int16_new>
    7768:	str	r0, [fp, #-24]	; 0xffffffe8
    776c:	ldr	r0, [fp, #-16]
    7770:	ldr	r0, [r0, #36]	; 0x24
    7774:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7778:	movw	r1, #0
    777c:	movt	r1, #0
    7780:	movw	r3, #0
    7784:	bl	0 <coda_mem_record_add_field>
    7788:	ldr	r1, [sp, #396]	; 0x18c
    778c:	cmp	r1, #28
    7790:	blt	77b4 <read_records+0x2138>
    7794:	add	r0, sp, #480	; 0x1e0
    7798:	add	r0, r0, #19
    779c:	movw	r1, #0
    77a0:	movt	r1, #0
    77a4:	mov	r2, #7
    77a8:	bl	0 <memcmp>
    77ac:	cmp	r0, #0
    77b0:	bne	77c4 <read_records+0x2148>
    77b4:	mov	r0, #0
    77b8:	str	r0, [sp, #468]	; 0x1d4
    77bc:	str	r0, [sp, #464]	; 0x1d0
    77c0:	b	7814 <read_records+0x2198>
    77c4:	add	r0, sp, #480	; 0x1e0
    77c8:	add	r0, r0, #19
    77cc:	movw	r1, #7
    77d0:	add	r2, sp, #464	; 0x1d0
    77d4:	movw	r3, #0
    77d8:	bl	0 <coda_ascii_parse_int64>
    77dc:	cmp	r0, #0
    77e0:	bge	7810 <read_records+0x2194>
    77e4:	ldr	r0, [fp, #-16]
    77e8:	ldr	r1, [r0, #48]	; 0x30
    77ec:	ldr	r0, [fp, #-16]
    77f0:	ldr	r0, [r0, #52]	; 0x34
    77f4:	add	r2, r0, #19
    77f8:	movw	r0, #0
    77fc:	movt	r0, #0
    7800:	bl	0 <coda_add_error_message>
    7804:	mvn	r0, #0
    7808:	str	r0, [fp, #-12]
    780c:	b	7f34 <read_records+0x28b8>
    7810:	b	7814 <read_records+0x2198>
    7814:	ldr	r0, [pc, #1828]	; 7f40 <read_records+0x28c4>
    7818:	str	r0, [sp, #56]	; 0x38
    781c:	bl	0 <__aeabi_read_tp>
    7820:	ldr	r1, [sp, #56]	; 0x38
    7824:	ldr	r0, [r0, r1]
    7828:	ldr	r0, [r0, #232]	; 0xe8
    782c:	ldr	r1, [fp, #-16]
    7830:	ldr	r2, [r1, #4]
    7834:	add	lr, sp, #256	; 0x100
    7838:	ldrh	r1, [lr, #208]	; 0xd0
    783c:	movw	r3, #0
    7840:	str	r1, [sp, #52]	; 0x34
    7844:	mov	r1, r3
    7848:	ldr	r3, [sp, #52]	; 0x34
    784c:	sxth	r3, r3
    7850:	bl	0 <coda_mem_int16_new>
    7854:	str	r0, [fp, #-24]	; 0xffffffe8
    7858:	ldr	r0, [fp, #-16]
    785c:	ldr	r0, [r0, #36]	; 0x24
    7860:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7864:	movw	r1, #0
    7868:	movt	r1, #0
    786c:	movw	r3, #0
    7870:	bl	0 <coda_mem_record_add_field>
    7874:	ldr	r1, [sp, #396]	; 0x18c
    7878:	cmp	r1, #35	; 0x23
    787c:	blt	78a0 <read_records+0x2224>
    7880:	add	r0, sp, #480	; 0x1e0
    7884:	add	r0, r0, #27
    7888:	movw	r1, #0
    788c:	movt	r1, #0
    7890:	mov	r2, #8
    7894:	bl	0 <memcmp>
    7898:	cmp	r0, #0
    789c:	bne	78b0 <read_records+0x2234>
    78a0:	mov	r0, #0
    78a4:	str	r0, [sp, #468]	; 0x1d4
    78a8:	str	r0, [sp, #464]	; 0x1d0
    78ac:	b	7900 <read_records+0x2284>
    78b0:	add	r0, sp, #480	; 0x1e0
    78b4:	add	r0, r0, #27
    78b8:	movw	r1, #8
    78bc:	add	r2, sp, #464	; 0x1d0
    78c0:	movw	r3, #0
    78c4:	bl	0 <coda_ascii_parse_int64>
    78c8:	cmp	r0, #0
    78cc:	bge	78fc <read_records+0x2280>
    78d0:	ldr	r0, [fp, #-16]
    78d4:	ldr	r1, [r0, #48]	; 0x30
    78d8:	ldr	r0, [fp, #-16]
    78dc:	ldr	r0, [r0, #52]	; 0x34
    78e0:	add	r2, r0, #27
    78e4:	movw	r0, #0
    78e8:	movt	r0, #0
    78ec:	bl	0 <coda_add_error_message>
    78f0:	mvn	r0, #0
    78f4:	str	r0, [fp, #-12]
    78f8:	b	7f34 <read_records+0x28b8>
    78fc:	b	7900 <read_records+0x2284>
    7900:	ldr	r0, [pc, #1592]	; 7f40 <read_records+0x28c4>
    7904:	str	r0, [sp, #48]	; 0x30
    7908:	bl	0 <__aeabi_read_tp>
    790c:	ldr	r1, [sp, #48]	; 0x30
    7910:	ldr	r0, [r0, r1]
    7914:	ldr	r0, [r0, #236]	; 0xec
    7918:	ldr	r1, [fp, #-16]
    791c:	ldr	r2, [r1, #4]
    7920:	ldr	r3, [sp, #464]	; 0x1d0
    7924:	movw	r1, #0
    7928:	bl	0 <coda_mem_int32_new>
    792c:	str	r0, [fp, #-24]	; 0xffffffe8
    7930:	ldr	r0, [fp, #-16]
    7934:	ldr	r0, [r0, #36]	; 0x24
    7938:	ldr	r2, [fp, #-24]	; 0xffffffe8
    793c:	movw	r1, #0
    7940:	movt	r1, #0
    7944:	movw	r3, #0
    7948:	bl	0 <coda_mem_record_add_field>
    794c:	ldr	r1, [sp, #396]	; 0x18c
    7950:	cmp	r1, #44	; 0x2c
    7954:	blt	7978 <read_records+0x22fc>
    7958:	add	r0, sp, #480	; 0x1e0
    795c:	add	r0, r0, #36	; 0x24
    7960:	movw	r1, #0
    7964:	movt	r1, #0
    7968:	mov	r2, #8
    796c:	bl	0 <memcmp>
    7970:	cmp	r0, #0
    7974:	bne	7988 <read_records+0x230c>
    7978:	mov	r0, #0
    797c:	str	r0, [sp, #468]	; 0x1d4
    7980:	str	r0, [sp, #464]	; 0x1d0
    7984:	b	79d8 <read_records+0x235c>
    7988:	add	r0, sp, #480	; 0x1e0
    798c:	add	r0, r0, #36	; 0x24
    7990:	movw	r1, #8
    7994:	add	r2, sp, #464	; 0x1d0
    7998:	movw	r3, #0
    799c:	bl	0 <coda_ascii_parse_int64>
    79a0:	cmp	r0, #0
    79a4:	bge	79d4 <read_records+0x2358>
    79a8:	ldr	r0, [fp, #-16]
    79ac:	ldr	r1, [r0, #48]	; 0x30
    79b0:	ldr	r0, [fp, #-16]
    79b4:	ldr	r0, [r0, #52]	; 0x34
    79b8:	add	r2, r0, #36	; 0x24
    79bc:	movw	r0, #0
    79c0:	movt	r0, #0
    79c4:	bl	0 <coda_add_error_message>
    79c8:	mvn	r0, #0
    79cc:	str	r0, [fp, #-12]
    79d0:	b	7f34 <read_records+0x28b8>
    79d4:	b	79d8 <read_records+0x235c>
    79d8:	ldr	r0, [pc, #1376]	; 7f40 <read_records+0x28c4>
    79dc:	str	r0, [sp, #44]	; 0x2c
    79e0:	bl	0 <__aeabi_read_tp>
    79e4:	ldr	r1, [sp, #44]	; 0x2c
    79e8:	ldr	r0, [r0, r1]
    79ec:	ldr	r0, [r0, #240]	; 0xf0
    79f0:	ldr	r1, [fp, #-16]
    79f4:	ldr	r2, [r1, #4]
    79f8:	ldr	r3, [sp, #464]	; 0x1d0
    79fc:	movw	r1, #0
    7a00:	bl	0 <coda_mem_int32_new>
    7a04:	str	r0, [fp, #-24]	; 0xffffffe8
    7a08:	ldr	r0, [fp, #-16]
    7a0c:	ldr	r0, [r0, #36]	; 0x24
    7a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7a14:	movw	r1, #0
    7a18:	movt	r1, #0
    7a1c:	movw	r3, #0
    7a20:	bl	0 <coda_mem_record_add_field>
    7a24:	ldr	r1, [sp, #396]	; 0x18c
    7a28:	cmp	r1, #53	; 0x35
    7a2c:	blt	7a50 <read_records+0x23d4>
    7a30:	add	r0, sp, #480	; 0x1e0
    7a34:	add	r0, r0, #45	; 0x2d
    7a38:	movw	r1, #0
    7a3c:	movt	r1, #0
    7a40:	mov	r2, #8
    7a44:	bl	0 <memcmp>
    7a48:	cmp	r0, #0
    7a4c:	bne	7a60 <read_records+0x23e4>
    7a50:	mov	r0, #0
    7a54:	str	r0, [sp, #468]	; 0x1d4
    7a58:	str	r0, [sp, #464]	; 0x1d0
    7a5c:	b	7ab0 <read_records+0x2434>
    7a60:	add	r0, sp, #480	; 0x1e0
    7a64:	add	r0, r0, #45	; 0x2d
    7a68:	movw	r1, #8
    7a6c:	add	r2, sp, #464	; 0x1d0
    7a70:	movw	r3, #0
    7a74:	bl	0 <coda_ascii_parse_int64>
    7a78:	cmp	r0, #0
    7a7c:	bge	7aac <read_records+0x2430>
    7a80:	ldr	r0, [fp, #-16]
    7a84:	ldr	r1, [r0, #48]	; 0x30
    7a88:	ldr	r0, [fp, #-16]
    7a8c:	ldr	r0, [r0, #52]	; 0x34
    7a90:	add	r2, r0, #45	; 0x2d
    7a94:	movw	r0, #0
    7a98:	movt	r0, #0
    7a9c:	bl	0 <coda_add_error_message>
    7aa0:	mvn	r0, #0
    7aa4:	str	r0, [fp, #-12]
    7aa8:	b	7f34 <read_records+0x28b8>
    7aac:	b	7ab0 <read_records+0x2434>
    7ab0:	ldr	r0, [pc, #1160]	; 7f40 <read_records+0x28c4>
    7ab4:	str	r0, [sp, #40]	; 0x28
    7ab8:	bl	0 <__aeabi_read_tp>
    7abc:	ldr	r1, [sp, #40]	; 0x28
    7ac0:	ldr	r0, [r0, r1]
    7ac4:	ldr	r0, [r0, #244]	; 0xf4
    7ac8:	ldr	r1, [fp, #-16]
    7acc:	ldr	r2, [r1, #4]
    7ad0:	ldr	r3, [sp, #464]	; 0x1d0
    7ad4:	movw	r1, #0
    7ad8:	bl	0 <coda_mem_int32_new>
    7adc:	str	r0, [fp, #-24]	; 0xffffffe8
    7ae0:	ldr	r0, [fp, #-16]
    7ae4:	ldr	r0, [r0, #36]	; 0x24
    7ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7aec:	movw	r1, #0
    7af0:	movt	r1, #0
    7af4:	movw	r3, #0
    7af8:	bl	0 <coda_mem_record_add_field>
    7afc:	ldr	r1, [sp, #396]	; 0x18c
    7b00:	cmp	r1, #62	; 0x3e
    7b04:	blt	7b28 <read_records+0x24ac>
    7b08:	add	r0, sp, #480	; 0x1e0
    7b0c:	add	r0, r0, #54	; 0x36
    7b10:	movw	r1, #0
    7b14:	movt	r1, #0
    7b18:	mov	r2, #8
    7b1c:	bl	0 <memcmp>
    7b20:	cmp	r0, #0
    7b24:	bne	7b38 <read_records+0x24bc>
    7b28:	mov	r0, #0
    7b2c:	str	r0, [sp, #468]	; 0x1d4
    7b30:	str	r0, [sp, #464]	; 0x1d0
    7b34:	b	7b88 <read_records+0x250c>
    7b38:	add	r0, sp, #480	; 0x1e0
    7b3c:	add	r0, r0, #54	; 0x36
    7b40:	movw	r1, #8
    7b44:	add	r2, sp, #464	; 0x1d0
    7b48:	movw	r3, #0
    7b4c:	bl	0 <coda_ascii_parse_int64>
    7b50:	cmp	r0, #0
    7b54:	bge	7b84 <read_records+0x2508>
    7b58:	ldr	r0, [fp, #-16]
    7b5c:	ldr	r1, [r0, #48]	; 0x30
    7b60:	ldr	r0, [fp, #-16]
    7b64:	ldr	r0, [r0, #52]	; 0x34
    7b68:	add	r2, r0, #54	; 0x36
    7b6c:	movw	r0, #0
    7b70:	movt	r0, #0
    7b74:	bl	0 <coda_add_error_message>
    7b78:	mvn	r0, #0
    7b7c:	str	r0, [fp, #-12]
    7b80:	b	7f34 <read_records+0x28b8>
    7b84:	b	7b88 <read_records+0x250c>
    7b88:	ldr	r0, [pc, #944]	; 7f40 <read_records+0x28c4>
    7b8c:	str	r0, [sp, #36]	; 0x24
    7b90:	bl	0 <__aeabi_read_tp>
    7b94:	ldr	r1, [sp, #36]	; 0x24
    7b98:	ldr	r0, [r0, r1]
    7b9c:	ldr	r0, [r0, #248]	; 0xf8
    7ba0:	ldr	r1, [fp, #-16]
    7ba4:	ldr	r2, [r1, #4]
    7ba8:	ldr	r3, [sp, #464]	; 0x1d0
    7bac:	movw	r1, #0
    7bb0:	bl	0 <coda_mem_int32_new>
    7bb4:	str	r0, [fp, #-24]	; 0xffffffe8
    7bb8:	ldr	r0, [fp, #-16]
    7bbc:	ldr	r0, [r0, #36]	; 0x24
    7bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7bc4:	movw	r1, #0
    7bc8:	movt	r1, #0
    7bcc:	movw	r3, #0
    7bd0:	bl	0 <coda_mem_record_add_field>
    7bd4:	ldr	r1, [sp, #396]	; 0x18c
    7bd8:	cmp	r1, #71	; 0x47
    7bdc:	blt	7c00 <read_records+0x2584>
    7be0:	add	r0, sp, #480	; 0x1e0
    7be4:	add	r0, r0, #63	; 0x3f
    7be8:	movw	r1, #0
    7bec:	movt	r1, #0
    7bf0:	mov	r2, #8
    7bf4:	bl	0 <memcmp>
    7bf8:	cmp	r0, #0
    7bfc:	bne	7c10 <read_records+0x2594>
    7c00:	mov	r0, #0
    7c04:	str	r0, [sp, #468]	; 0x1d4
    7c08:	str	r0, [sp, #464]	; 0x1d0
    7c0c:	b	7c60 <read_records+0x25e4>
    7c10:	add	r0, sp, #480	; 0x1e0
    7c14:	add	r0, r0, #63	; 0x3f
    7c18:	movw	r1, #8
    7c1c:	add	r2, sp, #464	; 0x1d0
    7c20:	movw	r3, #0
    7c24:	bl	0 <coda_ascii_parse_int64>
    7c28:	cmp	r0, #0
    7c2c:	bge	7c5c <read_records+0x25e0>
    7c30:	ldr	r0, [fp, #-16]
    7c34:	ldr	r1, [r0, #48]	; 0x30
    7c38:	ldr	r0, [fp, #-16]
    7c3c:	ldr	r0, [r0, #52]	; 0x34
    7c40:	add	r2, r0, #63	; 0x3f
    7c44:	movw	r0, #0
    7c48:	movt	r0, #0
    7c4c:	bl	0 <coda_add_error_message>
    7c50:	mvn	r0, #0
    7c54:	str	r0, [fp, #-12]
    7c58:	b	7f34 <read_records+0x28b8>
    7c5c:	b	7c60 <read_records+0x25e4>
    7c60:	ldr	r0, [pc, #728]	; 7f40 <read_records+0x28c4>
    7c64:	str	r0, [sp, #32]
    7c68:	bl	0 <__aeabi_read_tp>
    7c6c:	ldr	r1, [sp, #32]
    7c70:	ldr	r0, [r0, r1]
    7c74:	ldr	r0, [r0, #252]	; 0xfc
    7c78:	ldr	r1, [fp, #-16]
    7c7c:	ldr	r2, [r1, #4]
    7c80:	ldr	r3, [sp, #464]	; 0x1d0
    7c84:	movw	r1, #0
    7c88:	bl	0 <coda_mem_int32_new>
    7c8c:	str	r0, [fp, #-24]	; 0xffffffe8
    7c90:	ldr	r0, [fp, #-16]
    7c94:	ldr	r0, [r0, #36]	; 0x24
    7c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7c9c:	movw	r1, #0
    7ca0:	movt	r1, #0
    7ca4:	movw	r3, #0
    7ca8:	bl	0 <coda_mem_record_add_field>
    7cac:	ldr	r1, [sp, #396]	; 0x18c
    7cb0:	cmp	r1, #80	; 0x50
    7cb4:	blt	7cd8 <read_records+0x265c>
    7cb8:	add	r0, sp, #480	; 0x1e0
    7cbc:	add	r0, r0, #72	; 0x48
    7cc0:	movw	r1, #0
    7cc4:	movt	r1, #0
    7cc8:	mov	r2, #8
    7ccc:	bl	0 <memcmp>
    7cd0:	cmp	r0, #0
    7cd4:	bne	7ce8 <read_records+0x266c>
    7cd8:	mov	r0, #0
    7cdc:	str	r0, [sp, #468]	; 0x1d4
    7ce0:	str	r0, [sp, #464]	; 0x1d0
    7ce4:	b	7d38 <read_records+0x26bc>
    7ce8:	add	r0, sp, #480	; 0x1e0
    7cec:	add	r0, r0, #72	; 0x48
    7cf0:	movw	r1, #8
    7cf4:	add	r2, sp, #464	; 0x1d0
    7cf8:	movw	r3, #0
    7cfc:	bl	0 <coda_ascii_parse_int64>
    7d00:	cmp	r0, #0
    7d04:	bge	7d34 <read_records+0x26b8>
    7d08:	ldr	r0, [fp, #-16]
    7d0c:	ldr	r1, [r0, #48]	; 0x30
    7d10:	ldr	r0, [fp, #-16]
    7d14:	ldr	r0, [r0, #52]	; 0x34
    7d18:	add	r2, r0, #72	; 0x48
    7d1c:	movw	r0, #0
    7d20:	movt	r0, #0
    7d24:	bl	0 <coda_add_error_message>
    7d28:	mvn	r0, #0
    7d2c:	str	r0, [fp, #-12]
    7d30:	b	7f34 <read_records+0x28b8>
    7d34:	b	7d38 <read_records+0x26bc>
    7d38:	ldr	r0, [pc, #512]	; 7f40 <read_records+0x28c4>
    7d3c:	str	r0, [sp, #28]
    7d40:	bl	0 <__aeabi_read_tp>
    7d44:	ldr	r1, [sp, #28]
    7d48:	ldr	r0, [r0, r1]
    7d4c:	ldr	r0, [r0, #256]	; 0x100
    7d50:	ldr	r1, [fp, #-16]
    7d54:	ldr	r2, [r1, #4]
    7d58:	ldr	r3, [sp, #464]	; 0x1d0
    7d5c:	movw	r1, #0
    7d60:	bl	0 <coda_mem_int32_new>
    7d64:	str	r0, [fp, #-24]	; 0xffffffe8
    7d68:	ldr	r0, [fp, #-16]
    7d6c:	ldr	r0, [r0, #36]	; 0x24
    7d70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7d74:	movw	r1, #0
    7d78:	movt	r1, #0
    7d7c:	movw	r3, #0
    7d80:	bl	0 <coda_mem_record_add_field>
    7d84:	ldr	r1, [fp, #-16]
    7d88:	ldr	r1, [r1, #32]
    7d8c:	ldr	r2, [fp, #-16]
    7d90:	ldr	r2, [r2, #36]	; 0x24
    7d94:	str	r0, [sp, #24]
    7d98:	mov	r0, r1
    7d9c:	movw	r1, #0
    7da0:	movt	r1, #0
    7da4:	movw	r3, #0
    7da8:	bl	0 <coda_mem_record_add_field>
    7dac:	ldr	r1, [fp, #-16]
    7db0:	movw	r2, #0
    7db4:	str	r2, [r1, #36]	; 0x24
    7db8:	ldr	r0, [fp, #-16]
    7dbc:	ldr	r0, [r0]
    7dc0:	bl	0 <ftell>
    7dc4:	add	r1, sp, #480	; 0x1e0
    7dc8:	ldr	r2, [fp, #-16]
    7dcc:	str	r0, [r2, #52]	; 0x34
    7dd0:	ldr	r0, [fp, #-16]
    7dd4:	ldr	r2, [r0, #48]	; 0x30
    7dd8:	add	r2, r2, #1
    7ddc:	str	r2, [r0, #48]	; 0x30
    7de0:	ldr	r0, [fp, #-16]
    7de4:	ldr	r0, [r0]
    7de8:	bl	7f44 <get_line>
    7dec:	str	r0, [sp, #396]	; 0x18c
    7df0:	ldr	r0, [sp, #396]	; 0x18c
    7df4:	cmp	r0, #0
    7df8:	bge	7e08 <read_records+0x278c>
    7dfc:	mvn	r0, #0
    7e00:	str	r0, [fp, #-12]
    7e04:	b	7f34 <read_records+0x28b8>
    7e08:	b	7e0c <read_records+0x2790>
    7e0c:	ldr	r0, [fp, #-16]
    7e10:	ldr	r0, [r0, #24]
    7e14:	movw	r1, #0
    7e18:	cmp	r0, r1
    7e1c:	beq	7e40 <read_records+0x27c4>
    7e20:	ldr	r0, [fp, #-16]
    7e24:	ldr	r0, [r0, #20]
    7e28:	ldr	r1, [fp, #-16]
    7e2c:	ldr	r1, [r1, #24]
    7e30:	bl	0 <coda_mem_array_add_element>
    7e34:	ldr	r1, [fp, #-16]
    7e38:	movw	r2, #0
    7e3c:	str	r2, [r1, #24]
    7e40:	ldr	r0, [fp, #-16]
    7e44:	ldr	r0, [r0, #32]
    7e48:	movw	r1, #0
    7e4c:	cmp	r0, r1
    7e50:	beq	7e74 <read_records+0x27f8>
    7e54:	ldr	r0, [fp, #-16]
    7e58:	ldr	r0, [r0, #28]
    7e5c:	ldr	r1, [fp, #-16]
    7e60:	ldr	r1, [r1, #32]
    7e64:	bl	0 <coda_mem_array_add_element>
    7e68:	ldr	r1, [fp, #-16]
    7e6c:	movw	r2, #0
    7e70:	str	r2, [r1, #32]
    7e74:	b	56e4 <read_records+0x68>
    7e78:	ldr	r0, [fp, #-16]
    7e7c:	ldr	r0, [r0, #16]
    7e80:	movw	r1, #0
    7e84:	cmp	r0, r1
    7e88:	beq	7f2c <read_records+0x28b0>
    7e8c:	ldr	r0, [fp, #-16]
    7e90:	ldr	r0, [r0, #16]
    7e94:	ldr	r1, [fp, #-16]
    7e98:	ldr	r1, [r1, #20]
    7e9c:	movw	r2, #0
    7ea0:	movt	r2, #0
    7ea4:	str	r1, [sp, #20]
    7ea8:	mov	r1, r2
    7eac:	ldr	r2, [sp, #20]
    7eb0:	movw	r3, #0
    7eb4:	bl	0 <coda_mem_record_add_field>
    7eb8:	ldr	r1, [fp, #-16]
    7ebc:	movw	r2, #0
    7ec0:	str	r2, [r1, #20]
    7ec4:	ldr	r1, [fp, #-16]
    7ec8:	ldr	r1, [r1, #16]
    7ecc:	ldr	r3, [fp, #-16]
    7ed0:	ldr	r3, [r3, #28]
    7ed4:	str	r0, [sp, #16]
    7ed8:	mov	r0, r1
    7edc:	movw	r1, #0
    7ee0:	movt	r1, #0
    7ee4:	str	r2, [sp, #12]
    7ee8:	mov	r2, r3
    7eec:	ldr	r3, [sp, #12]
    7ef0:	bl	0 <coda_mem_record_add_field>
    7ef4:	ldr	r1, [fp, #-16]
    7ef8:	movw	r2, #0
    7efc:	str	r2, [r1, #28]
    7f00:	ldr	r1, [fp, #-16]
    7f04:	ldr	r1, [r1, #12]
    7f08:	ldr	r2, [fp, #-16]
    7f0c:	ldr	r2, [r2, #16]
    7f10:	str	r0, [sp, #8]
    7f14:	mov	r0, r1
    7f18:	mov	r1, r2
    7f1c:	bl	0 <coda_mem_array_add_element>
    7f20:	ldr	r1, [fp, #-16]
    7f24:	movw	r2, #0
    7f28:	str	r2, [r1, #16]
    7f2c:	movw	r0, #0
    7f30:	str	r0, [fp, #-12]
    7f34:	ldr	r0, [fp, #-12]
    7f38:	sub	sp, fp, #8
    7f3c:	pop	{r4, r5, fp, pc}
    7f40:	.word	0x00000000

00007f44 <get_line>:
    7f44:	push	{fp, lr}
    7f48:	mov	fp, sp
    7f4c:	sub	sp, sp, #24
    7f50:	str	r0, [fp, #-8]
    7f54:	str	r1, [sp, #12]
    7f58:	ldr	r0, [sp, #12]
    7f5c:	ldr	r2, [fp, #-8]
    7f60:	movw	r1, #1000	; 0x3e8
    7f64:	bl	0 <fgets>
    7f68:	movw	r1, #0
    7f6c:	cmp	r0, r1
    7f70:	bne	7fd0 <get_line+0x8c>
    7f74:	ldr	r0, [fp, #-8]
    7f78:	bl	0 <ferror>
    7f7c:	cmp	r0, #0
    7f80:	beq	7fb8 <get_line+0x74>
    7f84:	bl	0 <__errno_location>
    7f88:	ldr	r0, [r0]
    7f8c:	bl	0 <strerror>
    7f90:	mvn	r1, #21
    7f94:	str	r0, [sp, #4]
    7f98:	mov	r0, r1
    7f9c:	movw	r1, #0
    7fa0:	movt	r1, #0
    7fa4:	ldr	r2, [sp, #4]
    7fa8:	bl	0 <coda_set_error>
    7fac:	mvn	r0, #0
    7fb0:	str	r0, [fp, #-4]
    7fb4:	b	8084 <get_line+0x140>
    7fb8:	ldr	r0, [sp, #12]
    7fbc:	movw	r1, #0
    7fc0:	strb	r1, [r0]
    7fc4:	movw	r0, #0
    7fc8:	str	r0, [fp, #-4]
    7fcc:	b	8084 <get_line+0x140>
    7fd0:	ldr	r0, [sp, #12]
    7fd4:	bl	0 <strlen>
    7fd8:	str	r0, [sp, #8]
    7fdc:	ldr	r0, [sp, #8]
    7fe0:	cmp	r0, #0
    7fe4:	ble	802c <get_line+0xe8>
    7fe8:	ldr	r0, [sp, #12]
    7fec:	ldr	r1, [sp, #8]
    7ff0:	sub	r1, r1, #1
    7ff4:	add	r0, r0, r1
    7ff8:	ldrb	r0, [r0]
    7ffc:	cmp	r0, #10
    8000:	bne	802c <get_line+0xe8>
    8004:	ldr	r0, [sp, #12]
    8008:	ldr	r1, [sp, #8]
    800c:	sub	r1, r1, #1
    8010:	add	r0, r0, r1
    8014:	movw	r1, #0
    8018:	strb	r1, [r0]
    801c:	ldr	r0, [sp, #8]
    8020:	mvn	r1, #0
    8024:	add	r0, r0, r1
    8028:	str	r0, [sp, #8]
    802c:	ldr	r0, [sp, #8]
    8030:	cmp	r0, #0
    8034:	ble	807c <get_line+0x138>
    8038:	ldr	r0, [sp, #12]
    803c:	ldr	r1, [sp, #8]
    8040:	sub	r1, r1, #1
    8044:	add	r0, r0, r1
    8048:	ldrb	r0, [r0]
    804c:	cmp	r0, #13
    8050:	bne	807c <get_line+0x138>
    8054:	ldr	r0, [sp, #12]
    8058:	ldr	r1, [sp, #8]
    805c:	sub	r1, r1, #1
    8060:	add	r0, r0, r1
    8064:	movw	r1, #0
    8068:	strb	r1, [r0]
    806c:	ldr	r0, [sp, #8]
    8070:	mvn	r1, #0
    8074:	add	r0, r0, r1
    8078:	str	r0, [sp, #8]
    807c:	ldr	r0, [sp, #8]
    8080:	str	r0, [fp, #-4]
    8084:	ldr	r0, [fp, #-4]
    8088:	mov	sp, fp
    808c:	pop	{fp, pc}
