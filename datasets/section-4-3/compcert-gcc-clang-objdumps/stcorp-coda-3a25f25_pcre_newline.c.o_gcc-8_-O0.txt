
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_newline.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda__pcre_is_newline>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #28
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	str	r2, [fp, #-24]	; 0xffffffe8
  18:	str	r3, [fp, #-28]	; 0xffffffe4
  1c:	ldr	r3, [fp, #-16]
  20:	ldrb	r3, [r3]
  24:	str	r3, [fp, #-8]
  28:	ldr	r3, [fp, #-20]	; 0xffffffec
  2c:	cmp	r3, #2
  30:	bne	b0 <coda__pcre_is_newline+0xb0>
  34:	ldr	r3, [fp, #-8]
  38:	cmp	r3, #10
  3c:	beq	50 <coda__pcre_is_newline+0x50>
  40:	ldr	r3, [fp, #-8]
  44:	cmp	r3, #13
  48:	beq	64 <coda__pcre_is_newline+0x64>
  4c:	b	a8 <coda__pcre_is_newline+0xa8>
  50:	ldr	r3, [fp, #-28]	; 0xffffffe4
  54:	mov	r2, #1
  58:	str	r2, [r3]
  5c:	mov	r3, #1
  60:	b	1a0 <coda__pcre_is_newline+0x1a0>
  64:	ldr	r3, [fp, #-24]	; 0xffffffe8
  68:	sub	r3, r3, #1
  6c:	ldr	r2, [fp, #-16]
  70:	cmp	r2, r3
  74:	bcs	94 <coda__pcre_is_newline+0x94>
  78:	ldr	r3, [fp, #-16]
  7c:	add	r3, r3, #1
  80:	ldrb	r3, [r3]
  84:	cmp	r3, #10
  88:	bne	94 <coda__pcre_is_newline+0x94>
  8c:	mov	r2, #2
  90:	b	98 <coda__pcre_is_newline+0x98>
  94:	mov	r2, #1
  98:	ldr	r3, [fp, #-28]	; 0xffffffe4
  9c:	str	r2, [r3]
  a0:	mov	r3, #1
  a4:	b	1a0 <coda__pcre_is_newline+0x1a0>
  a8:	mov	r3, #0
  ac:	b	1a0 <coda__pcre_is_newline+0x1a0>
  b0:	ldr	r3, [fp, #-8]
  b4:	cmp	r3, #13
  b8:	beq	11c <coda__pcre_is_newline+0x11c>
  bc:	ldr	r3, [fp, #-8]
  c0:	cmp	r3, #13
  c4:	bhi	d8 <coda__pcre_is_newline+0xd8>
  c8:	ldr	r3, [fp, #-8]
  cc:	cmp	r3, #10
  d0:	bcc	19c <coda__pcre_is_newline+0x19c>
  d4:	b	108 <coda__pcre_is_newline+0x108>
  d8:	ldr	r3, [fp, #-8]
  dc:	cmp	r3, #133	; 0x85
  e0:	beq	160 <coda__pcre_is_newline+0x160>
  e4:	ldr	r3, [fp, #-8]
  e8:	cmp	r3, #133	; 0x85
  ec:	bcc	19c <coda__pcre_is_newline+0x19c>
  f0:	ldr	r3, [fp, #-8]
  f4:	sub	r3, r3, #8192	; 0x2000
  f8:	sub	r3, r3, #40	; 0x28
  fc:	cmp	r3, #1
 100:	bhi	19c <coda__pcre_is_newline+0x19c>
 104:	b	188 <coda__pcre_is_newline+0x188>
 108:	ldr	r3, [fp, #-28]	; 0xffffffe4
 10c:	mov	r2, #1
 110:	str	r2, [r3]
 114:	mov	r3, #1
 118:	b	1a0 <coda__pcre_is_newline+0x1a0>
 11c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 120:	sub	r3, r3, #1
 124:	ldr	r2, [fp, #-16]
 128:	cmp	r2, r3
 12c:	bcs	14c <coda__pcre_is_newline+0x14c>
 130:	ldr	r3, [fp, #-16]
 134:	add	r3, r3, #1
 138:	ldrb	r3, [r3]
 13c:	cmp	r3, #10
 140:	bne	14c <coda__pcre_is_newline+0x14c>
 144:	mov	r2, #2
 148:	b	150 <coda__pcre_is_newline+0x150>
 14c:	mov	r2, #1
 150:	ldr	r3, [fp, #-28]	; 0xffffffe4
 154:	str	r2, [r3]
 158:	mov	r3, #1
 15c:	b	1a0 <coda__pcre_is_newline+0x1a0>
 160:	ldr	r3, [fp, #4]
 164:	cmp	r3, #0
 168:	beq	174 <coda__pcre_is_newline+0x174>
 16c:	mov	r2, #2
 170:	b	178 <coda__pcre_is_newline+0x178>
 174:	mov	r2, #1
 178:	ldr	r3, [fp, #-28]	; 0xffffffe4
 17c:	str	r2, [r3]
 180:	mov	r3, #1
 184:	b	1a0 <coda__pcre_is_newline+0x1a0>
 188:	ldr	r3, [fp, #-28]	; 0xffffffe4
 18c:	mov	r2, #3
 190:	str	r2, [r3]
 194:	mov	r3, #1
 198:	b	1a0 <coda__pcre_is_newline+0x1a0>
 19c:	mov	r3, #0
 1a0:	mov	r0, r3
 1a4:	add	sp, fp, #0
 1a8:	pop	{fp}		; (ldr fp, [sp], #4)
 1ac:	bx	lr

000001b0 <coda__pcre_was_newline>:
 1b0:	push	{fp}		; (str fp, [sp, #-4]!)
 1b4:	add	fp, sp, #0
 1b8:	sub	sp, sp, #28
 1bc:	str	r0, [fp, #-16]
 1c0:	str	r1, [fp, #-20]	; 0xffffffec
 1c4:	str	r2, [fp, #-24]	; 0xffffffe8
 1c8:	str	r3, [fp, #-28]	; 0xffffffe4
 1cc:	ldr	r3, [fp, #-16]
 1d0:	sub	r3, r3, #1
 1d4:	str	r3, [fp, #-16]
 1d8:	ldr	r3, [fp, #-16]
 1dc:	ldrb	r3, [r3]
 1e0:	str	r3, [fp, #-8]
 1e4:	ldr	r3, [fp, #-20]	; 0xffffffec
 1e8:	cmp	r3, #2
 1ec:	bne	268 <coda__pcre_was_newline+0xb8>
 1f0:	ldr	r3, [fp, #-8]
 1f4:	cmp	r3, #10
 1f8:	beq	20c <coda__pcre_was_newline+0x5c>
 1fc:	ldr	r3, [fp, #-8]
 200:	cmp	r3, #13
 204:	beq	24c <coda__pcre_was_newline+0x9c>
 208:	b	260 <coda__pcre_was_newline+0xb0>
 20c:	ldr	r2, [fp, #-16]
 210:	ldr	r3, [fp, #-24]	; 0xffffffe8
 214:	cmp	r2, r3
 218:	bls	238 <coda__pcre_was_newline+0x88>
 21c:	ldr	r3, [fp, #-16]
 220:	sub	r3, r3, #1
 224:	ldrb	r3, [r3]
 228:	cmp	r3, #13
 22c:	bne	238 <coda__pcre_was_newline+0x88>
 230:	mov	r2, #2
 234:	b	23c <coda__pcre_was_newline+0x8c>
 238:	mov	r2, #1
 23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 240:	str	r2, [r3]
 244:	mov	r3, #1
 248:	b	354 <coda__pcre_was_newline+0x1a4>
 24c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 250:	mov	r2, #1
 254:	str	r2, [r3]
 258:	mov	r3, #1
 25c:	b	354 <coda__pcre_was_newline+0x1a4>
 260:	mov	r3, #0
 264:	b	354 <coda__pcre_was_newline+0x1a4>
 268:	ldr	r3, [fp, #-8]
 26c:	cmp	r3, #13
 270:	bhi	290 <coda__pcre_was_newline+0xe0>
 274:	ldr	r3, [fp, #-8]
 278:	cmp	r3, #11
 27c:	bcs	300 <coda__pcre_was_newline+0x150>
 280:	ldr	r3, [fp, #-8]
 284:	cmp	r3, #10
 288:	beq	2c0 <coda__pcre_was_newline+0x110>
 28c:	b	350 <coda__pcre_was_newline+0x1a0>
 290:	ldr	r3, [fp, #-8]
 294:	cmp	r3, #133	; 0x85
 298:	beq	314 <coda__pcre_was_newline+0x164>
 29c:	ldr	r3, [fp, #-8]
 2a0:	cmp	r3, #133	; 0x85
 2a4:	bcc	350 <coda__pcre_was_newline+0x1a0>
 2a8:	ldr	r3, [fp, #-8]
 2ac:	sub	r3, r3, #8192	; 0x2000
 2b0:	sub	r3, r3, #40	; 0x28
 2b4:	cmp	r3, #1
 2b8:	bhi	350 <coda__pcre_was_newline+0x1a0>
 2bc:	b	33c <coda__pcre_was_newline+0x18c>
 2c0:	ldr	r2, [fp, #-16]
 2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2c8:	cmp	r2, r3
 2cc:	bls	2ec <coda__pcre_was_newline+0x13c>
 2d0:	ldr	r3, [fp, #-16]
 2d4:	sub	r3, r3, #1
 2d8:	ldrb	r3, [r3]
 2dc:	cmp	r3, #13
 2e0:	bne	2ec <coda__pcre_was_newline+0x13c>
 2e4:	mov	r2, #2
 2e8:	b	2f0 <coda__pcre_was_newline+0x140>
 2ec:	mov	r2, #1
 2f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2f4:	str	r2, [r3]
 2f8:	mov	r3, #1
 2fc:	b	354 <coda__pcre_was_newline+0x1a4>
 300:	ldr	r3, [fp, #-28]	; 0xffffffe4
 304:	mov	r2, #1
 308:	str	r2, [r3]
 30c:	mov	r3, #1
 310:	b	354 <coda__pcre_was_newline+0x1a4>
 314:	ldr	r3, [fp, #4]
 318:	cmp	r3, #0
 31c:	beq	328 <coda__pcre_was_newline+0x178>
 320:	mov	r2, #2
 324:	b	32c <coda__pcre_was_newline+0x17c>
 328:	mov	r2, #1
 32c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 330:	str	r2, [r3]
 334:	mov	r3, #1
 338:	b	354 <coda__pcre_was_newline+0x1a4>
 33c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 340:	mov	r2, #3
 344:	str	r2, [r3]
 348:	mov	r3, #1
 34c:	b	354 <coda__pcre_was_newline+0x1a4>
 350:	mov	r3, #0
 354:	mov	r0, r3
 358:	add	sp, fp, #0
 35c:	pop	{fp}		; (ldr fp, [sp], #4)
 360:	bx	lr
