
../repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-detect.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <indent>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	ldr	r0, [pc, #80]	; 6c <indent+0x6c>
  18:	ldr	r0, [r0]
  1c:	cmp	r0, #0
  20:	bge	38 <indent+0x38>
  24:	ldr	r0, [pc, #68]	; 70 <indent+0x70>
  28:	ldr	r1, [pc, #72]	; 78 <indent+0x78>
  2c:	mov	r2, #52	; 0x34
  30:	ldr	r3, [pc, #48]	; 68 <indent+0x68>
  34:	bl	0 <__assert_fail>
  38:	ldr	r0, [pc, #44]	; 6c <indent+0x6c>
  3c:	ldr	r4, [r0]
  40:	cmp	r4, #0
  44:	beq	58 <indent+0x58>
  48:	ldr	r0, [pc, #36]	; 74 <indent+0x74>
  4c:	bl	0 <printf>
  50:	sub	r4, r4, #1
  54:	b	40 <indent+0x40>
  58:	ldr	r4, [sp, #8]
  5c:	ldr	lr, [sp, #4]
  60:	add	sp, sp, #16
  64:	bx	lr
  68:	.word	0x000000a6
  6c:	.word	0x00000000
  70:	.word	0x00000090
  74:	.word	0x00000070
  78:	.word	0x00000000

0000007c <generate_detection_tree_sub>:
  7c:	mov	ip, sp
  80:	sub	sp, sp, #24
  84:	str	ip, [sp]
  88:	str	lr, [sp, #4]
  8c:	str	r4, [sp, #8]
  90:	str	r5, [sp, #12]
  94:	str	r6, [sp, #16]
  98:	mov	r4, r1
  9c:	mov	r5, r0
  a0:	cmp	r5, #0
  a4:	beq	198 <generate_detection_tree_sub+0x11c>
  a8:	ldr	r2, [r5]
  ac:	cmp	r2, #0
  b0:	bne	c0 <generate_detection_tree_sub+0x44>
  b4:	ldr	r1, [r5, #4]
  b8:	cmp	r1, #0
  bc:	beq	150 <generate_detection_tree_sub+0xd4>
  c0:	ldr	r0, [r5]
  c4:	cmp	r0, #0
  c8:	bne	e4 <generate_detection_tree_sub+0x68>
  cc:	add	r4, r4, #1
  d0:	bl	0 <indent>
  d4:	ldr	r0, [r5, #4]
  d8:	ldr	r1, [pc, #224]	; 1c0 <generate_detection_tree_sub+0x144>
  dc:	bl	0 <coda_expression_print>
  e0:	b	f4 <generate_detection_tree_sub+0x78>
  e4:	bl	0 <indent>
  e8:	ldr	r0, [pc, #216]	; 1c8 <generate_detection_tree_sub+0x14c>
  ec:	ldr	r1, [r5]
  f0:	bl	0 <printf>
  f4:	ldr	r2, [r5, #8]
  f8:	cmp	r2, #0
  fc:	beq	148 <generate_detection_tree_sub+0xcc>
 100:	ldr	ip, [r2, #8]
 104:	ldr	r0, [pc, #168]	; 1b4 <generate_detection_tree_sub+0x138>
 108:	ldr	r2, [ip, #44]	; 0x2c
 10c:	ldr	r3, [r2, #20]
 110:	ldr	r1, [r3]
 114:	ldr	r2, [r2]
 118:	ldr	r3, [ip, #4]
 11c:	bl	0 <printf>
 120:	ldr	r2, [r5, #12]
 124:	cmp	r2, #0
 128:	ble	13c <generate_detection_tree_sub+0xc0>
 12c:	ldr	r0, [pc, #144]	; 1c4 <generate_detection_tree_sub+0x148>
 130:	mov	r1, r4
 134:	bl	0 <printf>
 138:	b	148 <generate_detection_tree_sub+0xcc>
 13c:	ldr	r0, [pc, #116]	; 1b8 <generate_detection_tree_sub+0x13c>
 140:	mov	r1, r4
 144:	bl	0 <printf>
 148:	ldr	r0, [pc, #96]	; 1b0 <generate_detection_tree_sub+0x134>
 14c:	bl	0 <printf>
 150:	mov	r6, #0
 154:	ldr	ip, [r5, #12]
 158:	cmp	r6, ip
 15c:	bge	198 <generate_detection_tree_sub+0x11c>
 160:	ldr	r3, [pc, #84]	; 1bc <generate_detection_tree_sub+0x140>
 164:	ldr	ip, [r3]
 168:	add	ip, ip, #1
 16c:	str	ip, [r3]
 170:	ldr	r2, [r5, #16]
 174:	ldr	r0, [r2, r6, lsl #2]
 178:	add	r1, r4, r6
 17c:	bl	7c <generate_detection_tree_sub>
 180:	ldr	r1, [pc, #52]	; 1bc <generate_detection_tree_sub+0x140>
 184:	ldr	r0, [r1]
 188:	sub	r2, r0, #1
 18c:	str	r2, [r1]
 190:	add	r6, r6, #1
 194:	b	154 <generate_detection_tree_sub+0xd8>
 198:	ldr	r4, [sp, #8]
 19c:	ldr	r5, [sp, #12]
 1a0:	ldr	r6, [sp, #16]
 1a4:	ldr	lr, [sp, #4]
 1a8:	add	sp, sp, #24
 1ac:	bx	lr
 1b0:	.word	0x00000073
 1b4:	.word	0x00000062
 1b8:	.word	0x00000075
	...
 1c4:	.word	0x00000081
 1c8:	.word	0x0000009c

000001cc <generate_detection_tree>:
 1cc:	mov	ip, sp
 1d0:	sub	sp, sp, #8
 1d4:	str	ip, [sp]
 1d8:	str	lr, [sp, #4]
 1dc:	bl	0 <coda_data_dictionary_get_detection_tree>
 1e0:	mov	r1, #0
 1e4:	ldr	lr, [sp, #4]
 1e8:	add	sp, sp, #8
 1ec:	b	7c <generate_detection_tree_sub>
