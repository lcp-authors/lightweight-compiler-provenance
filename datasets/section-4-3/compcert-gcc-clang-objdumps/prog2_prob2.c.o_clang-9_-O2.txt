
../compcert-repos/prog2/CMakeFiles/MT1E1-1.2.dir/Extras/Miniteste1-Exemplo1/2/prob2.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <analisarFicheiro>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #60	; 0x3c
   c:	mov	r6, r0
  10:	mov	r0, #104	; 0x68
  14:	str	r1, [sp, #4]
  18:	bl	0 <malloc>
  1c:	movw	r1, #0
  20:	mov	r7, r0
  24:	add	r2, sp, #10
  28:	mov	r0, r6
  2c:	movt	r1, #0
  30:	bl	0 <__isoc99_fscanf>
  34:	mov	r8, #0
  38:	cmn	r0, #1
  3c:	beq	ec <analisarFicheiro+0xec>
  40:	add	r4, sp, #10
  44:	cmp	r8, #0
  48:	bpl	80 <analisarFicheiro+0x80>
  4c:	b	5c <analisarFicheiro+0x5c>
  50:	ldr	r0, [r5, #100]	; 0x64
  54:	add	r0, r0, #1
  58:	str	r0, [r5, #100]	; 0x64
  5c:	movw	r1, #0
  60:	mov	r0, r6
  64:	mov	r2, r4
  68:	movt	r1, #0
  6c:	bl	0 <__isoc99_fscanf>
  70:	cmn	r0, #1
  74:	beq	ec <analisarFicheiro+0xec>
  78:	cmp	r8, #0
  7c:	bmi	5c <analisarFicheiro+0x5c>
  80:	rsb	r9, r8, #0
  84:	add	sl, r8, #1
  88:	mov	r5, r7
  8c:	mov	r0, r4
  90:	mov	r1, r5
  94:	bl	0 <strcmp>
  98:	cmp	r0, #0
  9c:	beq	50 <analisarFicheiro+0x50>
  a0:	cmp	r9, #0
  a4:	beq	bc <analisarFicheiro+0xbc>
  a8:	add	r9, r9, #1
  ac:	add	r5, r5, #104	; 0x68
  b0:	cmp	r9, #1
  b4:	bne	8c <analisarFicheiro+0x8c>
  b8:	b	5c <analisarFicheiro+0x5c>
  bc:	mov	r5, #104	; 0x68
  c0:	mov	r0, r7
  c4:	mul	r1, sl, r5
  c8:	bl	0 <realloc>
  cc:	mov	r7, r0
  d0:	mla	r0, r8, r5, r0
  d4:	mov	r1, r4
  d8:	bl	0 <strcpy>
  dc:	mov	r1, #1
  e0:	mov	r8, sl
  e4:	str	r1, [r0, #100]	; 0x64
  e8:	b	5c <analisarFicheiro+0x5c>
  ec:	ldr	r0, [sp, #4]
  f0:	str	r8, [r0]
  f4:	mov	r0, r7
  f8:	sub	sp, fp, #28
  fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00000100 <gerarRelatorio>:
 100:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 104:	add	fp, sp, #24
 108:	sub	sp, sp, #8
 10c:	mov	r6, r0
 110:	movw	r0, #0
 114:	mov	r4, r2
 118:	mov	r5, r1
 11c:	mov	r1, #53	; 0x35
 120:	mov	r2, #1
 124:	movt	r0, #0
 128:	mov	r3, r6
 12c:	bl	0 <fwrite>
 130:	cmp	r4, #1
 134:	blt	170 <gerarRelatorio+0x70>
 138:	movw	r8, #0
 13c:	mov	r7, #0
 140:	movt	r8, #0
 144:	ldr	r0, [r5, #100]	; 0x64
 148:	add	r7, r7, #1
 14c:	mov	r1, r8
 150:	mov	r3, r5
 154:	mov	r2, r7
 158:	str	r0, [sp]
 15c:	mov	r0, r6
 160:	bl	0 <fprintf>
 164:	add	r5, r5, #104	; 0x68
 168:	cmp	r4, r7
 16c:	bne	144 <gerarRelatorio+0x44>
 170:	sub	sp, fp, #24
 174:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000178 <main>:
 178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 17c:	add	fp, sp, #28
 180:	sub	sp, sp, #108	; 0x6c
 184:	movw	r0, #0
 188:	movt	r0, #0
 18c:	bl	0 <printf>
 190:	movw	r4, #0
 194:	add	r5, sp, #58	; 0x3a
 198:	movt	r4, #0
 19c:	mov	r1, r5
 1a0:	mov	r0, r4
 1a4:	bl	0 <__isoc99_scanf>
 1a8:	movw	r0, #0
 1ac:	movt	r0, #0
 1b0:	bl	0 <printf>
 1b4:	add	r1, sp, #8
 1b8:	mov	r0, r4
 1bc:	bl	0 <__isoc99_scanf>
 1c0:	movw	r1, #0
 1c4:	mov	r0, r5
 1c8:	movt	r1, #0
 1cc:	bl	0 <fopen>
 1d0:	mov	r6, #1
 1d4:	cmp	r0, #0
 1d8:	beq	288 <main+0x110>
 1dc:	movw	r1, #0
 1e0:	mov	r9, r0
 1e4:	add	r0, sp, #8
 1e8:	movt	r1, #0
 1ec:	bl	0 <fopen>
 1f0:	cmp	r0, #0
 1f4:	beq	288 <main+0x110>
 1f8:	mov	r5, r0
 1fc:	add	r1, sp, #4
 200:	mov	r0, r9
 204:	bl	0 <analisarFicheiro>
 208:	mov	r8, r0
 20c:	movw	r0, #0
 210:	ldr	r6, [sp, #4]
 214:	mov	r1, #53	; 0x35
 218:	mov	r2, #1
 21c:	mov	r3, r5
 220:	movt	r0, #0
 224:	bl	0 <fwrite_unlocked>
 228:	cmp	r6, #1
 22c:	blt	26c <main+0xf4>
 230:	movw	sl, #0
 234:	mov	r7, #0
 238:	mov	r4, r8
 23c:	movt	sl, #0
 240:	ldr	r0, [r4, #100]	; 0x64
 244:	add	r7, r7, #1
 248:	mov	r1, sl
 24c:	mov	r3, r4
 250:	mov	r2, r7
 254:	str	r0, [sp]
 258:	mov	r0, r5
 25c:	bl	0 <fprintf>
 260:	add	r4, r4, #104	; 0x68
 264:	cmp	r6, r7
 268:	bne	240 <main+0xc8>
 26c:	mov	r0, r9
 270:	bl	0 <fclose>
 274:	mov	r0, r5
 278:	bl	0 <fclose>
 27c:	mov	r0, r8
 280:	bl	0 <free>
 284:	mov	r6, #0
 288:	mov	r0, r6
 28c:	sub	sp, fp, #28
 290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
