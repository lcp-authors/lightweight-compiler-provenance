
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_XML_ParserCreate>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #8
       c:	str	r0, [fp, #-8]
      10:	mov	r2, #0
      14:	mov	r1, #0
      18:	ldr	r0, [fp, #-8]
      1c:	bl	128 <coda_XML_ParserCreate_MM>
      20:	mov	r3, r0
      24:	mov	r0, r3
      28:	sub	sp, fp, #4
      2c:	pop	{fp, pc}

00000030 <coda_XML_ParserCreateNS>:
      30:	push	{fp, lr}
      34:	add	fp, sp, #4
      38:	sub	sp, sp, #16
      3c:	str	r0, [fp, #-16]
      40:	mov	r3, r1
      44:	strb	r3, [fp, #-17]	; 0xffffffef
      48:	ldrb	r3, [fp, #-17]	; 0xffffffef
      4c:	strb	r3, [fp, #-8]
      50:	sub	r3, fp, #8
      54:	mov	r2, r3
      58:	mov	r1, #0
      5c:	ldr	r0, [fp, #-16]
      60:	bl	128 <coda_XML_ParserCreate_MM>
      64:	mov	r3, r0
      68:	mov	r0, r3
      6c:	sub	sp, fp, #4
      70:	pop	{fp, pc}

00000074 <generate_hash_secret_salt>:
      74:	push	{fp, lr}
      78:	add	fp, sp, #4
      7c:	sub	sp, sp, #8
      80:	mov	r0, #0
      84:	bl	0 <time>
      88:	mov	r3, r0
      8c:	cmn	r3, #1
      90:	movcs	r2, #1
      94:	movcc	r2, #0
      98:	rsb	r2, r2, #0
      9c:	sub	r3, r3, r2
      a0:	str	r3, [fp, #-8]
      a4:	ldr	r0, [fp, #-8]
      a8:	bl	0 <srand>
      ac:	bl	0 <rand>
      b0:	mov	r3, r0
      b4:	mov	r0, r3
      b8:	sub	sp, fp, #4
      bc:	pop	{fp, pc}

000000c0 <startParsing>:
      c0:	push	{fp, lr}
      c4:	add	fp, sp, #4
      c8:	sub	sp, sp, #8
      cc:	str	r0, [fp, #-8]
      d0:	ldr	r3, [fp, #-8]
      d4:	ldr	r3, [r3, #512]	; 0x200
      d8:	cmp	r3, #0
      dc:	bne	f0 <startParsing+0x30>
      e0:	bl	74 <generate_hash_secret_salt>
      e4:	mov	r2, r0
      e8:	ldr	r3, [fp, #-8]
      ec:	str	r2, [r3, #512]	; 0x200
      f0:	ldr	r3, [fp, #-8]
      f4:	ldrb	r3, [r3, #244]	; 0xf4
      f8:	cmp	r3, #0
      fc:	beq	114 <startParsing+0x54>
     100:	ldr	r1, [pc, #28]	; 124 <startParsing+0x64>
     104:	ldr	r0, [fp, #-8]
     108:	bl	c7b0 <setContext>
     10c:	mov	r3, r0
     110:	b	118 <startParsing+0x58>
     114:	mov	r3, #1
     118:	mov	r0, r3
     11c:	sub	sp, fp, #4
     120:	pop	{fp, pc}
     124:	.word	0x00000000

00000128 <coda_XML_ParserCreate_MM>:
     128:	push	{fp, lr}
     12c:	add	fp, sp, #4
     130:	sub	sp, sp, #16
     134:	str	r0, [fp, #-8]
     138:	str	r1, [fp, #-12]
     13c:	str	r2, [fp, #-16]
     140:	mov	r3, #0
     144:	ldr	r2, [fp, #-16]
     148:	ldr	r1, [fp, #-12]
     14c:	ldr	r0, [fp, #-8]
     150:	bl	164 <parserCreate>
     154:	mov	r3, r0
     158:	mov	r0, r3
     15c:	sub	sp, fp, #4
     160:	pop	{fp, pc}

00000164 <parserCreate>:
     164:	push	{fp, lr}
     168:	add	fp, sp, #4
     16c:	sub	sp, sp, #32
     170:	str	r0, [fp, #-24]	; 0xffffffe8
     174:	str	r1, [fp, #-28]	; 0xffffffe4
     178:	str	r2, [fp, #-32]	; 0xffffffe0
     17c:	str	r3, [fp, #-36]	; 0xffffffdc
     180:	ldr	r3, [fp, #-28]	; 0xffffffe4
     184:	cmp	r3, #0
     188:	beq	1ec <parserCreate+0x88>
     18c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     190:	ldr	r3, [r3]
     194:	mov	r0, #520	; 0x208
     198:	blx	r3
     19c:	str	r0, [fp, #-8]
     1a0:	ldr	r3, [fp, #-8]
     1a4:	cmp	r3, #0
     1a8:	beq	238 <parserCreate+0xd4>
     1ac:	ldr	r3, [fp, #-8]
     1b0:	add	r3, r3, #12
     1b4:	str	r3, [fp, #-12]
     1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1bc:	ldr	r2, [r3]
     1c0:	ldr	r3, [fp, #-12]
     1c4:	str	r2, [r3]
     1c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1cc:	ldr	r2, [r3, #4]
     1d0:	ldr	r3, [fp, #-12]
     1d4:	str	r2, [r3, #4]
     1d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     1dc:	ldr	r2, [r3, #8]
     1e0:	ldr	r3, [fp, #-12]
     1e4:	str	r2, [r3, #8]
     1e8:	b	238 <parserCreate+0xd4>
     1ec:	mov	r0, #520	; 0x208
     1f0:	bl	0 <malloc>
     1f4:	mov	r3, r0
     1f8:	str	r3, [fp, #-8]
     1fc:	ldr	r3, [fp, #-8]
     200:	cmp	r3, #0
     204:	beq	238 <parserCreate+0xd4>
     208:	ldr	r3, [fp, #-8]
     20c:	add	r3, r3, #12
     210:	str	r3, [fp, #-16]
     214:	ldr	r3, [fp, #-16]
     218:	ldr	r2, [pc, #776]	; 528 <parserCreate+0x3c4>
     21c:	str	r2, [r3]
     220:	ldr	r3, [fp, #-16]
     224:	ldr	r2, [pc, #768]	; 52c <parserCreate+0x3c8>
     228:	str	r2, [r3, #4]
     22c:	ldr	r3, [fp, #-16]
     230:	ldr	r2, [pc, #760]	; 530 <parserCreate+0x3cc>
     234:	str	r2, [r3, #8]
     238:	ldr	r3, [fp, #-8]
     23c:	cmp	r3, #0
     240:	bne	24c <parserCreate+0xe8>
     244:	ldr	r3, [fp, #-8]
     248:	b	51c <parserCreate+0x3b8>
     24c:	ldr	r3, [fp, #-8]
     250:	mov	r2, #0
     254:	str	r2, [r3, #8]
     258:	ldr	r3, [fp, #-8]
     25c:	mov	r2, #0
     260:	str	r2, [r3, #32]
     264:	ldr	r3, [fp, #-8]
     268:	mov	r2, #16
     26c:	str	r2, [r3, #388]	; 0x184
     270:	ldr	r3, [fp, #-8]
     274:	ldr	r3, [r3, #12]
     278:	ldr	r2, [fp, #-8]
     27c:	ldr	r2, [r2, #388]	; 0x184
     280:	lsl	r2, r2, #4
     284:	mov	r0, r2
     288:	blx	r3
     28c:	mov	r2, r0
     290:	ldr	r3, [fp, #-8]
     294:	str	r2, [r3, #400]	; 0x190
     298:	ldr	r3, [fp, #-8]
     29c:	ldr	r3, [r3, #400]	; 0x190
     2a0:	cmp	r3, #0
     2a4:	bne	2c0 <parserCreate+0x15c>
     2a8:	ldr	r3, [fp, #-8]
     2ac:	ldr	r3, [r3, #20]
     2b0:	ldr	r0, [fp, #-8]
     2b4:	blx	r3
     2b8:	mov	r3, #0
     2bc:	b	51c <parserCreate+0x3b8>
     2c0:	ldr	r3, [fp, #-8]
     2c4:	ldr	r3, [r3, #12]
     2c8:	mov	r0, #1024	; 0x400
     2cc:	blx	r3
     2d0:	mov	r2, r0
     2d4:	ldr	r3, [fp, #-8]
     2d8:	str	r2, [r3, #52]	; 0x34
     2dc:	ldr	r3, [fp, #-8]
     2e0:	ldr	r3, [r3, #52]	; 0x34
     2e4:	cmp	r3, #0
     2e8:	bne	31c <parserCreate+0x1b8>
     2ec:	ldr	r3, [fp, #-8]
     2f0:	ldr	r3, [r3, #20]
     2f4:	ldr	r2, [fp, #-8]
     2f8:	ldr	r2, [r2, #400]	; 0x190
     2fc:	mov	r0, r2
     300:	blx	r3
     304:	ldr	r3, [fp, #-8]
     308:	ldr	r3, [r3, #20]
     30c:	ldr	r0, [fp, #-8]
     310:	blx	r3
     314:	mov	r3, #0
     318:	b	51c <parserCreate+0x3b8>
     31c:	ldr	r3, [fp, #-8]
     320:	ldr	r3, [r3, #52]	; 0x34
     324:	add	r2, r3, #1024	; 0x400
     328:	ldr	r3, [fp, #-8]
     32c:	str	r2, [r3, #56]	; 0x38
     330:	ldr	r3, [fp, #-36]	; 0xffffffdc
     334:	cmp	r3, #0
     338:	beq	34c <parserCreate+0x1e8>
     33c:	ldr	r3, [fp, #-8]
     340:	ldr	r2, [fp, #-36]	; 0xffffffdc
     344:	str	r2, [r3, #364]	; 0x16c
     348:	b	3c0 <parserCreate+0x25c>
     34c:	ldr	r3, [fp, #-8]
     350:	add	r3, r3, #12
     354:	mov	r0, r3
     358:	bl	cd48 <dtdCreate>
     35c:	mov	r2, r0
     360:	ldr	r3, [fp, #-8]
     364:	str	r2, [r3, #364]	; 0x16c
     368:	ldr	r3, [fp, #-8]
     36c:	ldr	r3, [r3, #364]	; 0x16c
     370:	cmp	r3, #0
     374:	bne	3c0 <parserCreate+0x25c>
     378:	ldr	r3, [fp, #-8]
     37c:	ldr	r3, [r3, #20]
     380:	ldr	r2, [fp, #-8]
     384:	ldr	r2, [r2, #52]	; 0x34
     388:	mov	r0, r2
     38c:	blx	r3
     390:	ldr	r3, [fp, #-8]
     394:	ldr	r3, [r3, #20]
     398:	ldr	r2, [fp, #-8]
     39c:	ldr	r2, [r2, #400]	; 0x190
     3a0:	mov	r0, r2
     3a4:	blx	r3
     3a8:	ldr	r3, [fp, #-8]
     3ac:	ldr	r3, [r3, #20]
     3b0:	ldr	r0, [fp, #-8]
     3b4:	blx	r3
     3b8:	mov	r3, #0
     3bc:	b	51c <parserCreate+0x3b8>
     3c0:	ldr	r3, [fp, #-8]
     3c4:	mov	r2, #0
     3c8:	str	r2, [r3, #384]	; 0x180
     3cc:	ldr	r3, [fp, #-8]
     3d0:	mov	r2, #0
     3d4:	str	r2, [r3, #376]	; 0x178
     3d8:	ldr	r3, [fp, #-8]
     3dc:	mov	r2, #0
     3e0:	str	r2, [r3, #312]	; 0x138
     3e4:	ldr	r3, [fp, #-8]
     3e8:	mov	r2, #0
     3ec:	str	r2, [r3, #484]	; 0x1e4
     3f0:	ldr	r3, [fp, #-8]
     3f4:	mov	r2, #0
     3f8:	str	r2, [r3, #480]	; 0x1e0
     3fc:	ldr	r3, [fp, #-8]
     400:	mov	r2, #0
     404:	str	r2, [r3, #132]	; 0x84
     408:	ldr	r3, [fp, #-8]
     40c:	mov	r2, #0
     410:	str	r2, [r3, #256]	; 0x100
     414:	ldr	r3, [fp, #-8]
     418:	mov	r2, #33	; 0x21
     41c:	strb	r2, [r3, #488]	; 0x1e8
     420:	ldr	r3, [fp, #-8]
     424:	mov	r2, #0
     428:	strb	r2, [r3, #244]	; 0xf4
     42c:	ldr	r3, [fp, #-8]
     430:	mov	r2, #0
     434:	strb	r2, [r3, #245]	; 0xf5
     438:	ldr	r3, [fp, #-8]
     43c:	mov	r2, #0
     440:	str	r2, [r3, #404]	; 0x194
     444:	ldr	r3, [fp, #-8]
     448:	mov	r2, #0
     44c:	str	r2, [r3, #408]	; 0x198
     450:	ldr	r3, [fp, #-8]
     454:	mov	r2, #0
     458:	strb	r2, [r3, #412]	; 0x19c
     45c:	ldr	r3, [fp, #-8]
     460:	add	r2, r3, #432	; 0x1b0
     464:	ldr	r3, [fp, #-8]
     468:	add	r3, r3, #12
     46c:	mov	r1, r3
     470:	mov	r0, r2
     474:	bl	e448 <poolInit>
     478:	ldr	r3, [fp, #-8]
     47c:	add	r2, r3, #456	; 0x1c8
     480:	ldr	r3, [fp, #-8]
     484:	add	r3, r3, #12
     488:	mov	r1, r3
     48c:	mov	r0, r2
     490:	bl	e448 <poolInit>
     494:	ldr	r1, [fp, #-24]	; 0xffffffe8
     498:	ldr	r0, [fp, #-8]
     49c:	bl	534 <parserInit>
     4a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4a4:	cmp	r3, #0
     4a8:	beq	4cc <parserCreate+0x368>
     4ac:	ldr	r3, [fp, #-8]
     4b0:	ldr	r3, [r3, #240]	; 0xf0
     4b4:	cmp	r3, #0
     4b8:	bne	4cc <parserCreate+0x368>
     4bc:	ldr	r0, [fp, #-8]
     4c0:	bl	1008 <coda_XML_ParserFree>
     4c4:	mov	r3, #0
     4c8:	b	51c <parserCreate+0x3b8>
     4cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     4d0:	cmp	r3, #0
     4d4:	beq	508 <parserCreate+0x3a4>
     4d8:	ldr	r3, [fp, #-8]
     4dc:	mov	r2, #1
     4e0:	strb	r2, [r3, #244]	; 0xf4
     4e4:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
     4e8:	mov	r2, r0
     4ec:	ldr	r3, [fp, #-8]
     4f0:	str	r2, [r3, #236]	; 0xec
     4f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     4f8:	ldrb	r2, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	strb	r2, [r3, #488]	; 0x1e8
     504:	b	518 <parserCreate+0x3b4>
     508:	bl	0 <coda_XmlGetUtf8InternalEncoding>
     50c:	mov	r2, r0
     510:	ldr	r3, [fp, #-8]
     514:	str	r2, [r3, #236]	; 0xec
     518:	ldr	r3, [fp, #-8]
     51c:	mov	r0, r3
     520:	sub	sp, fp, #4
     524:	pop	{fp, pc}
	...

00000534 <parserInit>:
     534:	push	{fp, lr}
     538:	add	fp, sp, #4
     53c:	sub	sp, sp, #8
     540:	str	r0, [fp, #-8]
     544:	str	r1, [fp, #-12]
     548:	ldr	r3, [fp, #-8]
     54c:	ldr	r2, [pc, #852]	; 8a8 <parserInit+0x374>
     550:	str	r2, [r3, #288]	; 0x120
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #264	; 0x108
     55c:	mov	r0, r3
     560:	bl	0 <coda_XmlPrologStateInit>
     564:	ldr	r3, [fp, #-12]
     568:	cmp	r3, #0
     56c:	beq	58c <parserInit+0x58>
     570:	ldr	r3, [fp, #-8]
     574:	add	r3, r3, #432	; 0x1b0
     578:	ldr	r1, [fp, #-12]
     57c:	mov	r0, r3
     580:	bl	e6d4 <poolCopyString>
     584:	mov	r2, r0
     588:	b	590 <parserInit+0x5c>
     58c:	mov	r2, #0
     590:	ldr	r3, [fp, #-8]
     594:	str	r2, [r3, #240]	; 0xf0
     598:	ldr	r3, [fp, #-8]
     59c:	mov	r2, #0
     5a0:	str	r2, [r3, #368]	; 0x170
     5a4:	ldr	r3, [fp, #-8]
     5a8:	add	r0, r3, #156	; 0x9c
     5ac:	ldr	r3, [fp, #-8]
     5b0:	add	r3, r3, #152	; 0x98
     5b4:	mov	r2, #0
     5b8:	mov	r1, r3
     5bc:	bl	0 <coda_XmlInitEncoding>
     5c0:	ldr	r3, [fp, #-8]
     5c4:	mov	r2, #0
     5c8:	str	r2, [r3]
     5cc:	ldr	r3, [fp, #-8]
     5d0:	mov	r2, #0
     5d4:	str	r2, [r3, #4]
     5d8:	ldr	r3, [fp, #-8]
     5dc:	mov	r2, #0
     5e0:	str	r2, [r3, #60]	; 0x3c
     5e4:	ldr	r3, [fp, #-8]
     5e8:	mov	r2, #0
     5ec:	str	r2, [r3, #64]	; 0x40
     5f0:	ldr	r3, [fp, #-8]
     5f4:	mov	r2, #0
     5f8:	str	r2, [r3, #68]	; 0x44
     5fc:	ldr	r3, [fp, #-8]
     600:	mov	r2, #0
     604:	str	r2, [r3, #72]	; 0x48
     608:	ldr	r3, [fp, #-8]
     60c:	mov	r2, #0
     610:	str	r2, [r3, #76]	; 0x4c
     614:	ldr	r3, [fp, #-8]
     618:	mov	r2, #0
     61c:	str	r2, [r3, #80]	; 0x50
     620:	ldr	r3, [fp, #-8]
     624:	mov	r2, #0
     628:	str	r2, [r3, #84]	; 0x54
     62c:	ldr	r3, [fp, #-8]
     630:	mov	r2, #0
     634:	str	r2, [r3, #88]	; 0x58
     638:	ldr	r3, [fp, #-8]
     63c:	mov	r2, #0
     640:	str	r2, [r3, #92]	; 0x5c
     644:	ldr	r3, [fp, #-8]
     648:	mov	r2, #0
     64c:	str	r2, [r3, #96]	; 0x60
     650:	ldr	r3, [fp, #-8]
     654:	mov	r2, #0
     658:	str	r2, [r3, #100]	; 0x64
     65c:	ldr	r3, [fp, #-8]
     660:	mov	r2, #0
     664:	str	r2, [r3, #104]	; 0x68
     668:	ldr	r3, [fp, #-8]
     66c:	mov	r2, #0
     670:	str	r2, [r3, #108]	; 0x6c
     674:	ldr	r3, [fp, #-8]
     678:	mov	r2, #0
     67c:	str	r2, [r3, #112]	; 0x70
     680:	ldr	r3, [fp, #-8]
     684:	mov	r2, #0
     688:	str	r2, [r3, #116]	; 0x74
     68c:	ldr	r3, [fp, #-8]
     690:	mov	r2, #0
     694:	str	r2, [r3, #120]	; 0x78
     698:	ldr	r3, [fp, #-8]
     69c:	ldr	r2, [fp, #-8]
     6a0:	str	r2, [r3, #124]	; 0x7c
     6a4:	ldr	r3, [fp, #-8]
     6a8:	mov	r2, #0
     6ac:	str	r2, [r3, #128]	; 0x80
     6b0:	ldr	r3, [fp, #-8]
     6b4:	mov	r2, #0
     6b8:	str	r2, [r3, #136]	; 0x88
     6bc:	ldr	r3, [fp, #-8]
     6c0:	mov	r2, #0
     6c4:	str	r2, [r3, #140]	; 0x8c
     6c8:	ldr	r3, [fp, #-8]
     6cc:	mov	r2, #0
     6d0:	str	r2, [r3, #144]	; 0x90
     6d4:	ldr	r3, [fp, #-8]
     6d8:	mov	r2, #0
     6dc:	str	r2, [r3, #148]	; 0x94
     6e0:	ldr	r3, [fp, #-8]
     6e4:	ldr	r2, [r3, #8]
     6e8:	ldr	r3, [fp, #-8]
     6ec:	str	r2, [r3, #24]
     6f0:	ldr	r3, [fp, #-8]
     6f4:	ldr	r2, [r3, #8]
     6f8:	ldr	r3, [fp, #-8]
     6fc:	str	r2, [r3, #28]
     700:	ldr	r1, [fp, #-8]
     704:	mov	r2, #0
     708:	mov	r3, #0
     70c:	strd	r2, [r1, #40]	; 0x28
     710:	ldr	r3, [fp, #-8]
     714:	mov	r2, #0
     718:	str	r2, [r3, #48]	; 0x30
     71c:	ldr	r3, [fp, #-8]
     720:	mov	r2, #0
     724:	str	r2, [r3, #352]	; 0x160
     728:	ldr	r3, [fp, #-8]
     72c:	mov	r2, #0
     730:	str	r2, [r3, #356]	; 0x164
     734:	ldr	r3, [fp, #-8]
     738:	mov	r2, #0
     73c:	str	r2, [r3, #324]	; 0x144
     740:	ldr	r3, [fp, #-8]
     744:	mov	r2, #0
     748:	str	r2, [r3, #328]	; 0x148
     74c:	ldr	r3, [fp, #-8]
     750:	mov	r2, #0
     754:	str	r2, [r3, #332]	; 0x14c
     758:	ldr	r3, [fp, #-8]
     75c:	mov	r2, #0
     760:	str	r2, [r3, #336]	; 0x150
     764:	ldr	r3, [fp, #-8]
     768:	mov	r2, #0
     76c:	str	r2, [r3, #340]	; 0x154
     770:	ldr	r3, [fp, #-8]
     774:	mov	r2, #0
     778:	str	r2, [r3, #344]	; 0x158
     77c:	ldr	r3, [fp, #-8]
     780:	mov	r2, #0
     784:	str	r2, [r3, #348]	; 0x15c
     788:	ldr	r3, [fp, #-8]
     78c:	mov	r2, #0
     790:	strb	r2, [r3, #360]	; 0x168
     794:	ldr	r3, [fp, #-8]
     798:	mov	r2, #0
     79c:	strb	r2, [r3, #361]	; 0x169
     7a0:	ldr	r3, [fp, #-8]
     7a4:	add	r3, r3, #416	; 0x1a0
     7a8:	mov	r2, #16
     7ac:	mov	r1, #0
     7b0:	mov	r0, r3
     7b4:	bl	0 <memset>
     7b8:	ldr	r3, [fp, #-8]
     7bc:	mov	r2, #0
     7c0:	str	r2, [r3, #292]	; 0x124
     7c4:	ldr	r3, [fp, #-8]
     7c8:	mov	r2, #0
     7cc:	str	r2, [r3, #296]	; 0x128
     7d0:	ldr	r3, [fp, #-8]
     7d4:	mov	r2, #0
     7d8:	str	r2, [r3, #300]	; 0x12c
     7dc:	ldr	r3, [fp, #-8]
     7e0:	mov	r2, #0
     7e4:	str	r2, [r3, #304]	; 0x130
     7e8:	ldr	r3, [fp, #-8]
     7ec:	mov	r2, #0
     7f0:	str	r2, [r3, #308]	; 0x134
     7f4:	ldr	r3, [fp, #-8]
     7f8:	mov	r2, #1
     7fc:	strb	r2, [r3, #316]	; 0x13c
     800:	ldr	r3, [fp, #-8]
     804:	mov	r2, #0
     808:	str	r2, [r3, #320]	; 0x140
     80c:	ldr	r3, [fp, #-8]
     810:	mov	r2, #0
     814:	str	r2, [r3, #372]	; 0x174
     818:	ldr	r3, [fp, #-8]
     81c:	mov	r2, #0
     820:	str	r2, [r3, #380]	; 0x17c
     824:	ldr	r3, [fp, #-8]
     828:	mov	r2, #0
     82c:	str	r2, [r3, #392]	; 0x188
     830:	ldr	r3, [fp, #-8]
     834:	mov	r2, #0
     838:	str	r2, [r3, #248]	; 0xf8
     83c:	ldr	r3, [fp, #-8]
     840:	mov	r2, #0
     844:	str	r2, [r3, #260]	; 0x104
     848:	ldr	r3, [fp, #-8]
     84c:	mov	r2, #0
     850:	str	r2, [r3, #252]	; 0xfc
     854:	ldr	r3, [fp, #-8]
     858:	mov	r2, #0
     85c:	str	r2, [r3, #492]	; 0x1ec
     860:	ldr	r3, [fp, #-8]
     864:	mov	r2, #0
     868:	str	r2, [r3, #496]	; 0x1f0
     86c:	ldr	r3, [fp, #-8]
     870:	mov	r2, #0
     874:	strb	r2, [r3, #504]	; 0x1f8
     878:	ldr	r3, [fp, #-8]
     87c:	mov	r2, #0
     880:	strb	r2, [r3, #505]	; 0x1f9
     884:	ldr	r3, [fp, #-8]
     888:	mov	r2, #0
     88c:	str	r2, [r3, #508]	; 0x1fc
     890:	ldr	r3, [fp, #-8]
     894:	mov	r2, #0
     898:	str	r2, [r3, #512]	; 0x200
     89c:	nop			; (mov r0, r0)
     8a0:	sub	sp, fp, #4
     8a4:	pop	{fp, pc}
     8a8:	.word	0x00000000

000008ac <moveToFreeBindingList>:
     8ac:	push	{fp}		; (str fp, [sp, #-4]!)
     8b0:	add	fp, sp, #0
     8b4:	sub	sp, sp, #20
     8b8:	str	r0, [fp, #-16]
     8bc:	str	r1, [fp, #-20]	; 0xffffffec
     8c0:	b	8f4 <moveToFreeBindingList+0x48>
     8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     8c8:	str	r3, [fp, #-8]
     8cc:	ldr	r3, [fp, #-20]	; 0xffffffec
     8d0:	ldr	r3, [r3, #4]
     8d4:	str	r3, [fp, #-20]	; 0xffffffec
     8d8:	ldr	r3, [fp, #-16]
     8dc:	ldr	r2, [r3, #384]	; 0x180
     8e0:	ldr	r3, [fp, #-8]
     8e4:	str	r2, [r3, #4]
     8e8:	ldr	r3, [fp, #-16]
     8ec:	ldr	r2, [fp, #-8]
     8f0:	str	r2, [r3, #384]	; 0x180
     8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
     8f8:	cmp	r3, #0
     8fc:	bne	8c4 <moveToFreeBindingList+0x18>
     900:	nop			; (mov r0, r0)
     904:	add	sp, fp, #0
     908:	pop	{fp}		; (ldr fp, [sp], #4)
     90c:	bx	lr

00000910 <coda_XML_ParserReset>:
     910:	push	{fp, lr}
     914:	add	fp, sp, #4
     918:	sub	sp, sp, #24
     91c:	str	r0, [fp, #-24]	; 0xffffffe8
     920:	str	r1, [fp, #-28]	; 0xffffffe4
     924:	ldr	r3, [fp, #-24]	; 0xffffffe8
     928:	ldr	r3, [r3, #492]	; 0x1ec
     92c:	cmp	r3, #0
     930:	beq	93c <coda_XML_ParserReset+0x2c>
     934:	mov	r3, #0
     938:	b	a94 <coda_XML_ParserReset+0x184>
     93c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     940:	ldr	r3, [r3, #372]	; 0x174
     944:	str	r3, [fp, #-8]
     948:	b	99c <coda_XML_ParserReset+0x8c>
     94c:	ldr	r3, [fp, #-8]
     950:	str	r3, [fp, #-16]
     954:	ldr	r3, [fp, #-8]
     958:	ldr	r3, [r3]
     95c:	str	r3, [fp, #-8]
     960:	ldr	r3, [fp, #-24]	; 0xffffffe8
     964:	ldr	r2, [r3, #376]	; 0x178
     968:	ldr	r3, [fp, #-16]
     96c:	str	r2, [r3]
     970:	ldr	r3, [fp, #-16]
     974:	ldr	r3, [r3, #44]	; 0x2c
     978:	mov	r1, r3
     97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     980:	bl	8ac <moveToFreeBindingList>
     984:	ldr	r3, [fp, #-16]
     988:	mov	r2, #0
     98c:	str	r2, [r3, #44]	; 0x2c
     990:	ldr	r3, [fp, #-24]	; 0xffffffe8
     994:	ldr	r2, [fp, #-16]
     998:	str	r2, [r3, #376]	; 0x178
     99c:	ldr	r3, [fp, #-8]
     9a0:	cmp	r3, #0
     9a4:	bne	94c <coda_XML_ParserReset+0x3c>
     9a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9ac:	ldr	r3, [r3, #308]	; 0x134
     9b0:	str	r3, [fp, #-12]
     9b4:	b	9e8 <coda_XML_ParserReset+0xd8>
     9b8:	ldr	r3, [fp, #-12]
     9bc:	str	r3, [fp, #-20]	; 0xffffffec
     9c0:	ldr	r3, [fp, #-20]	; 0xffffffec
     9c4:	ldr	r3, [r3, #8]
     9c8:	str	r3, [fp, #-12]
     9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9d0:	ldr	r2, [r3, #312]	; 0x138
     9d4:	ldr	r3, [fp, #-20]	; 0xffffffec
     9d8:	str	r2, [r3, #8]
     9dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9e0:	ldr	r2, [fp, #-20]	; 0xffffffec
     9e4:	str	r2, [r3, #312]	; 0x138
     9e8:	ldr	r3, [fp, #-12]
     9ec:	cmp	r3, #0
     9f0:	bne	9b8 <coda_XML_ParserReset+0xa8>
     9f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9f8:	ldr	r3, [r3, #380]	; 0x17c
     9fc:	mov	r1, r3
     a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a04:	bl	8ac <moveToFreeBindingList>
     a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a0c:	ldr	r3, [r3, #20]
     a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a14:	ldr	r2, [r2, #248]	; 0xf8
     a18:	mov	r0, r2
     a1c:	blx	r3
     a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a24:	ldr	r3, [r3, #260]	; 0x104
     a28:	cmp	r3, #0
     a2c:	beq	a48 <coda_XML_ParserReset+0x138>
     a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a34:	ldr	r3, [r3, #260]	; 0x104
     a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
     a3c:	ldr	r2, [r2, #252]	; 0xfc
     a40:	mov	r0, r2
     a44:	blx	r3
     a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a4c:	add	r3, r3, #432	; 0x1b0
     a50:	mov	r0, r3
     a54:	bl	e4b4 <poolClear>
     a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a5c:	add	r3, r3, #456	; 0x1c8
     a60:	mov	r0, r3
     a64:	bl	e4b4 <poolClear>
     a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
     a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a70:	bl	534 <parserInit>
     a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a78:	ldr	r2, [r3, #364]	; 0x16c
     a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a80:	add	r3, r3, #12
     a84:	mov	r1, r3
     a88:	mov	r0, r2
     a8c:	bl	ceb4 <dtdReset>
     a90:	mov	r3, #1
     a94:	mov	r0, r3
     a98:	sub	sp, fp, #4
     a9c:	pop	{fp, pc}

00000aa0 <coda_XML_SetEncoding>:
     aa0:	push	{fp, lr}
     aa4:	add	fp, sp, #4
     aa8:	sub	sp, sp, #8
     aac:	str	r0, [fp, #-8]
     ab0:	str	r1, [fp, #-12]
     ab4:	ldr	r3, [fp, #-8]
     ab8:	ldr	r3, [r3, #496]	; 0x1f0
     abc:	cmp	r3, #1
     ac0:	beq	ad4 <coda_XML_SetEncoding+0x34>
     ac4:	ldr	r3, [fp, #-8]
     ac8:	ldr	r3, [r3, #496]	; 0x1f0
     acc:	cmp	r3, #3
     ad0:	bne	adc <coda_XML_SetEncoding+0x3c>
     ad4:	mov	r3, #0
     ad8:	b	b34 <coda_XML_SetEncoding+0x94>
     adc:	ldr	r3, [fp, #-12]
     ae0:	cmp	r3, #0
     ae4:	bne	af8 <coda_XML_SetEncoding+0x58>
     ae8:	ldr	r3, [fp, #-8]
     aec:	mov	r2, #0
     af0:	str	r2, [r3, #240]	; 0xf0
     af4:	b	b30 <coda_XML_SetEncoding+0x90>
     af8:	ldr	r3, [fp, #-8]
     afc:	add	r3, r3, #432	; 0x1b0
     b00:	ldr	r1, [fp, #-12]
     b04:	mov	r0, r3
     b08:	bl	e6d4 <poolCopyString>
     b0c:	mov	r2, r0
     b10:	ldr	r3, [fp, #-8]
     b14:	str	r2, [r3, #240]	; 0xf0
     b18:	ldr	r3, [fp, #-8]
     b1c:	ldr	r3, [r3, #240]	; 0xf0
     b20:	cmp	r3, #0
     b24:	bne	b30 <coda_XML_SetEncoding+0x90>
     b28:	mov	r3, #0
     b2c:	b	b34 <coda_XML_SetEncoding+0x94>
     b30:	mov	r3, #1
     b34:	mov	r0, r3
     b38:	sub	sp, fp, #4
     b3c:	pop	{fp, pc}

00000b40 <coda_XML_ExternalEntityParserCreate>:
     b40:	push	{fp, lr}
     b44:	add	fp, sp, #4
     b48:	sub	sp, sp, #152	; 0x98
     b4c:	str	r0, [fp, #-144]	; 0xffffff70
     b50:	str	r1, [fp, #-148]	; 0xffffff6c
     b54:	str	r2, [fp, #-152]	; 0xffffff68
     b58:	ldr	r3, [fp, #-144]	; 0xffffff70
     b5c:	str	r3, [fp, #-8]
     b60:	mov	r3, #0
     b64:	str	r3, [fp, #-12]
     b68:	ldr	r3, [fp, #-8]
     b6c:	ldr	r3, [r3, #364]	; 0x16c
     b70:	str	r3, [fp, #-16]
     b74:	ldr	r3, [fp, #-8]
     b78:	ldr	r3, [r3, #60]	; 0x3c
     b7c:	str	r3, [fp, #-20]	; 0xffffffec
     b80:	ldr	r3, [fp, #-8]
     b84:	ldr	r3, [r3, #64]	; 0x40
     b88:	str	r3, [fp, #-24]	; 0xffffffe8
     b8c:	ldr	r3, [fp, #-8]
     b90:	ldr	r3, [r3, #68]	; 0x44
     b94:	str	r3, [fp, #-28]	; 0xffffffe4
     b98:	ldr	r3, [fp, #-8]
     b9c:	ldr	r3, [r3, #72]	; 0x48
     ba0:	str	r3, [fp, #-32]	; 0xffffffe0
     ba4:	ldr	r3, [fp, #-8]
     ba8:	ldr	r3, [r3, #76]	; 0x4c
     bac:	str	r3, [fp, #-36]	; 0xffffffdc
     bb0:	ldr	r3, [fp, #-8]
     bb4:	ldr	r3, [r3, #80]	; 0x50
     bb8:	str	r3, [fp, #-40]	; 0xffffffd8
     bbc:	ldr	r3, [fp, #-8]
     bc0:	ldr	r3, [r3, #84]	; 0x54
     bc4:	str	r3, [fp, #-44]	; 0xffffffd4
     bc8:	ldr	r3, [fp, #-8]
     bcc:	ldr	r3, [r3, #88]	; 0x58
     bd0:	str	r3, [fp, #-48]	; 0xffffffd0
     bd4:	ldr	r3, [fp, #-8]
     bd8:	ldr	r3, [r3, #100]	; 0x64
     bdc:	str	r3, [fp, #-52]	; 0xffffffcc
     be0:	ldr	r3, [fp, #-8]
     be4:	ldr	r3, [r3, #104]	; 0x68
     be8:	str	r3, [fp, #-56]	; 0xffffffc8
     bec:	ldr	r3, [fp, #-8]
     bf0:	ldr	r3, [r3, #108]	; 0x6c
     bf4:	str	r3, [fp, #-60]	; 0xffffffc4
     bf8:	ldr	r3, [fp, #-8]
     bfc:	ldr	r3, [r3, #112]	; 0x70
     c00:	str	r3, [fp, #-64]	; 0xffffffc0
     c04:	ldr	r3, [fp, #-8]
     c08:	ldr	r3, [r3, #116]	; 0x74
     c0c:	str	r3, [fp, #-68]	; 0xffffffbc
     c10:	ldr	r3, [fp, #-8]
     c14:	ldr	r3, [r3, #120]	; 0x78
     c18:	str	r3, [fp, #-72]	; 0xffffffb8
     c1c:	ldr	r3, [fp, #-8]
     c20:	ldr	r3, [r3, #128]	; 0x80
     c24:	str	r3, [fp, #-76]	; 0xffffffb4
     c28:	ldr	r3, [fp, #-8]
     c2c:	ldr	r3, [r3, #132]	; 0x84
     c30:	str	r3, [fp, #-80]	; 0xffffffb0
     c34:	ldr	r3, [fp, #-8]
     c38:	ldr	r3, [r3, #136]	; 0x88
     c3c:	str	r3, [fp, #-84]	; 0xffffffac
     c40:	ldr	r3, [fp, #-8]
     c44:	ldr	r3, [r3, #140]	; 0x8c
     c48:	str	r3, [fp, #-88]	; 0xffffffa8
     c4c:	ldr	r3, [fp, #-8]
     c50:	ldr	r3, [r3, #144]	; 0x90
     c54:	str	r3, [fp, #-92]	; 0xffffffa4
     c58:	ldr	r3, [fp, #-8]
     c5c:	ldr	r3, [r3, #148]	; 0x94
     c60:	str	r3, [fp, #-96]	; 0xffffffa0
     c64:	ldr	r3, [fp, #-8]
     c68:	ldr	r3, [r3, #352]	; 0x160
     c6c:	str	r3, [fp, #-100]	; 0xffffff9c
     c70:	ldr	r3, [fp, #-8]
     c74:	ldr	r3, [r3]
     c78:	str	r3, [fp, #-104]	; 0xffffff98
     c7c:	ldr	r3, [fp, #-8]
     c80:	ldr	r3, [r3, #4]
     c84:	str	r3, [fp, #-108]	; 0xffffff94
     c88:	ldr	r3, [fp, #-8]
     c8c:	ldrb	r3, [r3, #316]	; 0x13c
     c90:	strb	r3, [fp, #-109]	; 0xffffff93
     c94:	ldr	r3, [fp, #-8]
     c98:	ldr	r3, [r3, #124]	; 0x7c
     c9c:	str	r3, [fp, #-116]	; 0xffffff8c
     ca0:	ldr	r3, [fp, #-8]
     ca4:	ldr	r3, [r3, #508]	; 0x1fc
     ca8:	str	r3, [fp, #-120]	; 0xffffff88
     cac:	ldr	r3, [fp, #-8]
     cb0:	ldr	r3, [r3, #284]	; 0x11c
     cb4:	str	r3, [fp, #-124]	; 0xffffff84
     cb8:	ldr	r3, [fp, #-8]
     cbc:	ldrb	r3, [r3, #245]	; 0xf5
     cc0:	strb	r3, [fp, #-125]	; 0xffffff83
     cc4:	ldr	r3, [fp, #-8]
     cc8:	ldr	r3, [r3, #512]	; 0x200
     ccc:	str	r3, [fp, #-132]	; 0xffffff7c
     cd0:	ldr	r3, [fp, #-148]	; 0xffffff6c
     cd4:	cmp	r3, #0
     cd8:	bne	ce4 <coda_XML_ExternalEntityParserCreate+0x1a4>
     cdc:	ldr	r3, [fp, #-16]
     ce0:	str	r3, [fp, #-12]
     ce4:	ldr	r3, [fp, #-8]
     ce8:	ldrb	r3, [r3, #244]	; 0xf4
     cec:	cmp	r3, #0
     cf0:	beq	d20 <coda_XML_ExternalEntityParserCreate+0x1e0>
     cf4:	ldr	r3, [fp, #-8]
     cf8:	ldrb	r3, [r3, #488]	; 0x1e8
     cfc:	strb	r3, [fp, #-136]	; 0xffffff78
     d00:	ldr	r3, [fp, #-8]
     d04:	add	r1, r3, #12
     d08:	sub	r2, fp, #136	; 0x88
     d0c:	ldr	r3, [fp, #-12]
     d10:	ldr	r0, [fp, #-152]	; 0xffffff68
     d14:	bl	164 <parserCreate>
     d18:	str	r0, [fp, #-8]
     d1c:	b	d3c <coda_XML_ExternalEntityParserCreate+0x1fc>
     d20:	ldr	r3, [fp, #-8]
     d24:	add	r1, r3, #12
     d28:	ldr	r3, [fp, #-12]
     d2c:	mov	r2, #0
     d30:	ldr	r0, [fp, #-152]	; 0xffffff68
     d34:	bl	164 <parserCreate>
     d38:	str	r0, [fp, #-8]
     d3c:	ldr	r3, [fp, #-8]
     d40:	cmp	r3, #0
     d44:	bne	d50 <coda_XML_ExternalEntityParserCreate+0x210>
     d48:	mov	r3, #0
     d4c:	b	f84 <coda_XML_ExternalEntityParserCreate+0x444>
     d50:	ldr	r3, [fp, #-8]
     d54:	ldr	r2, [fp, #-20]	; 0xffffffec
     d58:	str	r2, [r3, #60]	; 0x3c
     d5c:	ldr	r3, [fp, #-8]
     d60:	ldr	r2, [fp, #-24]	; 0xffffffe8
     d64:	str	r2, [r3, #64]	; 0x40
     d68:	ldr	r3, [fp, #-8]
     d6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d70:	str	r2, [r3, #68]	; 0x44
     d74:	ldr	r3, [fp, #-8]
     d78:	ldr	r2, [fp, #-32]	; 0xffffffe0
     d7c:	str	r2, [r3, #72]	; 0x48
     d80:	ldr	r3, [fp, #-8]
     d84:	ldr	r2, [fp, #-36]	; 0xffffffdc
     d88:	str	r2, [r3, #76]	; 0x4c
     d8c:	ldr	r3, [fp, #-8]
     d90:	ldr	r2, [fp, #-40]	; 0xffffffd8
     d94:	str	r2, [r3, #80]	; 0x50
     d98:	ldr	r3, [fp, #-8]
     d9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     da0:	str	r2, [r3, #84]	; 0x54
     da4:	ldr	r3, [fp, #-8]
     da8:	ldr	r2, [fp, #-48]	; 0xffffffd0
     dac:	str	r2, [r3, #88]	; 0x58
     db0:	ldr	r3, [fp, #-8]
     db4:	ldr	r2, [fp, #-52]	; 0xffffffcc
     db8:	str	r2, [r3, #100]	; 0x64
     dbc:	ldr	r3, [fp, #-8]
     dc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
     dc4:	str	r2, [r3, #104]	; 0x68
     dc8:	ldr	r3, [fp, #-8]
     dcc:	ldr	r2, [fp, #-60]	; 0xffffffc4
     dd0:	str	r2, [r3, #108]	; 0x6c
     dd4:	ldr	r3, [fp, #-8]
     dd8:	ldr	r2, [fp, #-64]	; 0xffffffc0
     ddc:	str	r2, [r3, #112]	; 0x70
     de0:	ldr	r3, [fp, #-8]
     de4:	ldr	r2, [fp, #-68]	; 0xffffffbc
     de8:	str	r2, [r3, #116]	; 0x74
     dec:	ldr	r3, [fp, #-8]
     df0:	ldr	r2, [fp, #-72]	; 0xffffffb8
     df4:	str	r2, [r3, #120]	; 0x78
     df8:	ldr	r3, [fp, #-8]
     dfc:	ldr	r2, [fp, #-76]	; 0xffffffb4
     e00:	str	r2, [r3, #128]	; 0x80
     e04:	ldr	r3, [fp, #-8]
     e08:	ldr	r2, [fp, #-80]	; 0xffffffb0
     e0c:	str	r2, [r3, #132]	; 0x84
     e10:	ldr	r3, [fp, #-8]
     e14:	ldr	r2, [fp, #-84]	; 0xffffffac
     e18:	str	r2, [r3, #136]	; 0x88
     e1c:	ldr	r3, [fp, #-8]
     e20:	ldr	r2, [fp, #-88]	; 0xffffffa8
     e24:	str	r2, [r3, #140]	; 0x8c
     e28:	ldr	r3, [fp, #-8]
     e2c:	ldr	r2, [fp, #-92]	; 0xffffffa4
     e30:	str	r2, [r3, #144]	; 0x90
     e34:	ldr	r3, [fp, #-8]
     e38:	ldr	r2, [fp, #-96]	; 0xffffffa0
     e3c:	str	r2, [r3, #148]	; 0x94
     e40:	ldr	r3, [fp, #-8]
     e44:	ldr	r2, [fp, #-100]	; 0xffffff9c
     e48:	str	r2, [r3, #352]	; 0x160
     e4c:	ldr	r3, [fp, #-8]
     e50:	ldr	r2, [fp, #-104]	; 0xffffff98
     e54:	str	r2, [r3]
     e58:	ldr	r2, [fp, #-104]	; 0xffffff98
     e5c:	ldr	r3, [fp, #-108]	; 0xffffff94
     e60:	cmp	r2, r3
     e64:	bne	e7c <coda_XML_ExternalEntityParserCreate+0x33c>
     e68:	ldr	r3, [fp, #-8]
     e6c:	ldr	r2, [r3]
     e70:	ldr	r3, [fp, #-8]
     e74:	str	r2, [r3, #4]
     e78:	b	e88 <coda_XML_ExternalEntityParserCreate+0x348>
     e7c:	ldr	r3, [fp, #-8]
     e80:	ldr	r2, [fp, #-8]
     e84:	str	r2, [r3, #4]
     e88:	ldr	r2, [fp, #-116]	; 0xffffff8c
     e8c:	ldr	r3, [fp, #-144]	; 0xffffff70
     e90:	cmp	r2, r3
     e94:	beq	ea4 <coda_XML_ExternalEntityParserCreate+0x364>
     e98:	ldr	r3, [fp, #-8]
     e9c:	ldr	r2, [fp, #-116]	; 0xffffff8c
     ea0:	str	r2, [r3, #124]	; 0x7c
     ea4:	ldr	r3, [fp, #-8]
     ea8:	ldrb	r2, [fp, #-109]	; 0xffffff93
     eac:	strb	r2, [r3, #316]	; 0x13c
     eb0:	ldr	r3, [fp, #-8]
     eb4:	ldrb	r2, [fp, #-125]	; 0xffffff83
     eb8:	strb	r2, [r3, #245]	; 0xf5
     ebc:	ldr	r3, [fp, #-8]
     ec0:	ldr	r2, [fp, #-132]	; 0xffffff7c
     ec4:	str	r2, [r3, #512]	; 0x200
     ec8:	ldr	r3, [fp, #-8]
     ecc:	ldr	r2, [fp, #-144]	; 0xffffff70
     ed0:	str	r2, [r3, #492]	; 0x1ec
     ed4:	ldr	r3, [fp, #-8]
     ed8:	ldr	r2, [fp, #-120]	; 0xffffff88
     edc:	str	r2, [r3, #508]	; 0x1fc
     ee0:	ldr	r3, [fp, #-8]
     ee4:	ldr	r2, [fp, #-124]	; 0xffffff84
     ee8:	str	r2, [r3, #284]	; 0x11c
     eec:	ldr	r3, [fp, #-148]	; 0xffffff6c
     ef0:	cmp	r3, #0
     ef4:	beq	f58 <coda_XML_ExternalEntityParserCreate+0x418>
     ef8:	ldr	r3, [fp, #-8]
     efc:	ldr	r1, [r3, #364]	; 0x16c
     f00:	ldr	r3, [fp, #-8]
     f04:	add	r3, r3, #12
     f08:	ldr	r2, [fp, #-16]
     f0c:	ldr	r0, [fp, #-144]	; 0xffffff70
     f10:	bl	d1b4 <dtdCopy>
     f14:	mov	r3, r0
     f18:	cmp	r3, #0
     f1c:	beq	f38 <coda_XML_ExternalEntityParserCreate+0x3f8>
     f20:	ldr	r1, [fp, #-148]	; 0xffffff6c
     f24:	ldr	r0, [fp, #-8]
     f28:	bl	c7b0 <setContext>
     f2c:	mov	r3, r0
     f30:	cmp	r3, #0
     f34:	bne	f48 <coda_XML_ExternalEntityParserCreate+0x408>
     f38:	ldr	r0, [fp, #-8]
     f3c:	bl	1008 <coda_XML_ParserFree>
     f40:	mov	r3, #0
     f44:	b	f84 <coda_XML_ExternalEntityParserCreate+0x444>
     f48:	ldr	r3, [fp, #-8]
     f4c:	ldr	r2, [pc, #60]	; f90 <coda_XML_ExternalEntityParserCreate+0x450>
     f50:	str	r2, [r3, #288]	; 0x120
     f54:	b	f80 <coda_XML_ExternalEntityParserCreate+0x440>
     f58:	ldr	r3, [fp, #-8]
     f5c:	mov	r2, #1
     f60:	strb	r2, [r3, #504]	; 0x1f8
     f64:	ldr	r3, [fp, #-8]
     f68:	add	r3, r3, #264	; 0x108
     f6c:	mov	r0, r3
     f70:	bl	0 <coda_XmlPrologStateInitExternalEntity>
     f74:	ldr	r3, [fp, #-8]
     f78:	ldr	r2, [pc, #20]	; f94 <coda_XML_ExternalEntityParserCreate+0x454>
     f7c:	str	r2, [r3, #288]	; 0x120
     f80:	ldr	r3, [fp, #-8]
     f84:	mov	r0, r3
     f88:	sub	sp, fp, #4
     f8c:	pop	{fp, pc}
	...

00000f98 <destroyBindings>:
     f98:	push	{fp, lr}
     f9c:	add	fp, sp, #4
     fa0:	sub	sp, sp, #16
     fa4:	str	r0, [fp, #-16]
     fa8:	str	r1, [fp, #-20]	; 0xffffffec
     fac:	ldr	r3, [fp, #-16]
     fb0:	str	r3, [fp, #-8]
     fb4:	ldr	r3, [fp, #-8]
     fb8:	cmp	r3, #0
     fbc:	beq	ff8 <destroyBindings+0x60>
     fc0:	ldr	r3, [fp, #-8]
     fc4:	ldr	r3, [r3, #4]
     fc8:	str	r3, [fp, #-16]
     fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
     fd0:	ldr	r3, [r3, #20]
     fd4:	ldr	r2, [fp, #-8]
     fd8:	ldr	r2, [r2, #16]
     fdc:	mov	r0, r2
     fe0:	blx	r3
     fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
     fe8:	ldr	r3, [r3, #20]
     fec:	ldr	r0, [fp, #-8]
     ff0:	blx	r3
     ff4:	b	fac <destroyBindings+0x14>
     ff8:	nop			; (mov r0, r0)
     ffc:	nop			; (mov r0, r0)
    1000:	sub	sp, fp, #4
    1004:	pop	{fp, pc}

00001008 <coda_XML_ParserFree>:
    1008:	push	{fp, lr}
    100c:	add	fp, sp, #4
    1010:	sub	sp, sp, #24
    1014:	str	r0, [fp, #-24]	; 0xffffffe8
    1018:	ldr	r3, [fp, #-24]	; 0xffffffe8
    101c:	cmp	r3, #0
    1020:	beq	1290 <coda_XML_ParserFree+0x288>
    1024:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1028:	ldr	r3, [r3, #372]	; 0x174
    102c:	str	r3, [fp, #-8]
    1030:	ldr	r3, [fp, #-8]
    1034:	cmp	r3, #0
    1038:	bne	1064 <coda_XML_ParserFree+0x5c>
    103c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1040:	ldr	r3, [r3, #376]	; 0x178
    1044:	cmp	r3, #0
    1048:	beq	10b8 <coda_XML_ParserFree+0xb0>
    104c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1050:	ldr	r3, [r3, #376]	; 0x178
    1054:	str	r3, [fp, #-8]
    1058:	ldr	r3, [fp, #-24]	; 0xffffffe8
    105c:	mov	r2, #0
    1060:	str	r2, [r3, #376]	; 0x178
    1064:	ldr	r3, [fp, #-8]
    1068:	str	r3, [fp, #-16]
    106c:	ldr	r3, [fp, #-8]
    1070:	ldr	r3, [r3]
    1074:	str	r3, [fp, #-8]
    1078:	ldr	r3, [fp, #-24]	; 0xffffffe8
    107c:	ldr	r3, [r3, #20]
    1080:	ldr	r2, [fp, #-16]
    1084:	ldr	r2, [r2, #36]	; 0x24
    1088:	mov	r0, r2
    108c:	blx	r3
    1090:	ldr	r3, [fp, #-16]
    1094:	ldr	r3, [r3, #44]	; 0x2c
    1098:	ldr	r1, [fp, #-24]	; 0xffffffe8
    109c:	mov	r0, r3
    10a0:	bl	f98 <destroyBindings>
    10a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10a8:	ldr	r3, [r3, #20]
    10ac:	ldr	r0, [fp, #-16]
    10b0:	blx	r3
    10b4:	b	1030 <coda_XML_ParserFree+0x28>
    10b8:	nop			; (mov r0, r0)
    10bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10c0:	ldr	r3, [r3, #308]	; 0x134
    10c4:	str	r3, [fp, #-12]
    10c8:	ldr	r3, [fp, #-12]
    10cc:	cmp	r3, #0
    10d0:	bne	10fc <coda_XML_ParserFree+0xf4>
    10d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10d8:	ldr	r3, [r3, #312]	; 0x138
    10dc:	cmp	r3, #0
    10e0:	beq	1124 <coda_XML_ParserFree+0x11c>
    10e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10e8:	ldr	r3, [r3, #312]	; 0x138
    10ec:	str	r3, [fp, #-12]
    10f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    10f4:	mov	r2, #0
    10f8:	str	r2, [r3, #312]	; 0x138
    10fc:	ldr	r3, [fp, #-12]
    1100:	str	r3, [fp, #-20]	; 0xffffffec
    1104:	ldr	r3, [fp, #-12]
    1108:	ldr	r3, [r3, #8]
    110c:	str	r3, [fp, #-12]
    1110:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1114:	ldr	r3, [r3, #20]
    1118:	ldr	r0, [fp, #-20]	; 0xffffffec
    111c:	blx	r3
    1120:	b	10c8 <coda_XML_ParserFree+0xc0>
    1124:	nop			; (mov r0, r0)
    1128:	ldr	r3, [fp, #-24]	; 0xffffffe8
    112c:	ldr	r3, [r3, #384]	; 0x180
    1130:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1134:	mov	r0, r3
    1138:	bl	f98 <destroyBindings>
    113c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1140:	ldr	r3, [r3, #380]	; 0x17c
    1144:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1148:	mov	r0, r3
    114c:	bl	f98 <destroyBindings>
    1150:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1154:	add	r3, r3, #432	; 0x1b0
    1158:	mov	r0, r3
    115c:	bl	e574 <poolDestroy>
    1160:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1164:	add	r3, r3, #456	; 0x1c8
    1168:	mov	r0, r3
    116c:	bl	e574 <poolDestroy>
    1170:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1174:	ldrb	r3, [r3, #504]	; 0x1f8
    1178:	cmp	r3, #0
    117c:	bne	11c4 <coda_XML_ParserFree+0x1bc>
    1180:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1184:	ldr	r3, [r3, #364]	; 0x16c
    1188:	cmp	r3, #0
    118c:	beq	11c4 <coda_XML_ParserFree+0x1bc>
    1190:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1194:	ldr	r0, [r3, #364]	; 0x16c
    1198:	ldr	r3, [fp, #-24]	; 0xffffffe8
    119c:	ldr	r3, [r3, #492]	; 0x1ec
    11a0:	cmp	r3, #0
    11a4:	moveq	r3, #1
    11a8:	movne	r3, #0
    11ac:	uxtb	r3, r3
    11b0:	mov	r1, r3
    11b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11b8:	add	r3, r3, #12
    11bc:	mov	r2, r3
    11c0:	bl	d070 <dtdDestroy>
    11c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11c8:	ldr	r3, [r3, #20]
    11cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    11d0:	ldr	r2, [r2, #400]	; 0x190
    11d4:	mov	r0, r2
    11d8:	blx	r3
    11dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11e0:	ldr	r3, [r3, #20]
    11e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    11e8:	ldr	r2, [r2, #480]	; 0x1e0
    11ec:	mov	r0, r2
    11f0:	blx	r3
    11f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    11f8:	ldr	r3, [r3, #20]
    11fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1200:	ldr	r2, [r2, #8]
    1204:	mov	r0, r2
    1208:	blx	r3
    120c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1210:	ldr	r3, [r3, #20]
    1214:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1218:	ldr	r2, [r2, #52]	; 0x34
    121c:	mov	r0, r2
    1220:	blx	r3
    1224:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1228:	ldr	r3, [r3, #20]
    122c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1230:	ldr	r2, [r2, #404]	; 0x194
    1234:	mov	r0, r2
    1238:	blx	r3
    123c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1240:	ldr	r3, [r3, #20]
    1244:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1248:	ldr	r2, [r2, #248]	; 0xf8
    124c:	mov	r0, r2
    1250:	blx	r3
    1254:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1258:	ldr	r3, [r3, #260]	; 0x104
    125c:	cmp	r3, #0
    1260:	beq	127c <coda_XML_ParserFree+0x274>
    1264:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1268:	ldr	r3, [r3, #260]	; 0x104
    126c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1270:	ldr	r2, [r2, #252]	; 0xfc
    1274:	mov	r0, r2
    1278:	blx	r3
    127c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1280:	ldr	r3, [r3, #20]
    1284:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1288:	blx	r3
    128c:	b	1294 <coda_XML_ParserFree+0x28c>
    1290:	nop			; (mov r0, r0)
    1294:	sub	sp, fp, #4
    1298:	pop	{fp, pc}

0000129c <coda_XML_UseParserAsHandlerArg>:
    129c:	push	{fp}		; (str fp, [sp, #-4]!)
    12a0:	add	fp, sp, #0
    12a4:	sub	sp, sp, #12
    12a8:	str	r0, [fp, #-8]
    12ac:	ldr	r3, [fp, #-8]
    12b0:	ldr	r2, [fp, #-8]
    12b4:	str	r2, [r3, #4]
    12b8:	nop			; (mov r0, r0)
    12bc:	add	sp, fp, #0
    12c0:	pop	{fp}		; (ldr fp, [sp], #4)
    12c4:	bx	lr

000012c8 <coda_XML_UseForeignDTD>:
    12c8:	push	{fp}		; (str fp, [sp, #-4]!)
    12cc:	add	fp, sp, #0
    12d0:	sub	sp, sp, #12
    12d4:	str	r0, [fp, #-8]
    12d8:	mov	r3, r1
    12dc:	strb	r3, [fp, #-9]
    12e0:	ldr	r3, [fp, #-8]
    12e4:	ldr	r3, [r3, #496]	; 0x1f0
    12e8:	cmp	r3, #1
    12ec:	beq	1300 <coda_XML_UseForeignDTD+0x38>
    12f0:	ldr	r3, [fp, #-8]
    12f4:	ldr	r3, [r3, #496]	; 0x1f0
    12f8:	cmp	r3, #3
    12fc:	bne	1308 <coda_XML_UseForeignDTD+0x40>
    1300:	mov	r3, #26
    1304:	b	1318 <coda_XML_UseForeignDTD+0x50>
    1308:	ldr	r3, [fp, #-8]
    130c:	ldrb	r2, [fp, #-9]
    1310:	strb	r2, [r3, #505]	; 0x1f9
    1314:	mov	r3, #0
    1318:	mov	r0, r3
    131c:	add	sp, fp, #0
    1320:	pop	{fp}		; (ldr fp, [sp], #4)
    1324:	bx	lr

00001328 <coda_XML_SetReturnNSTriplet>:
    1328:	push	{fp}		; (str fp, [sp, #-4]!)
    132c:	add	fp, sp, #0
    1330:	sub	sp, sp, #12
    1334:	str	r0, [fp, #-8]
    1338:	str	r1, [fp, #-12]
    133c:	ldr	r3, [fp, #-8]
    1340:	ldr	r3, [r3, #496]	; 0x1f0
    1344:	cmp	r3, #1
    1348:	beq	1380 <coda_XML_SetReturnNSTriplet+0x58>
    134c:	ldr	r3, [fp, #-8]
    1350:	ldr	r3, [r3, #496]	; 0x1f0
    1354:	cmp	r3, #3
    1358:	beq	1380 <coda_XML_SetReturnNSTriplet+0x58>
    135c:	ldr	r3, [fp, #-12]
    1360:	cmp	r3, #0
    1364:	movne	r3, #1
    1368:	moveq	r3, #0
    136c:	uxtb	r3, r3
    1370:	mov	r2, r3
    1374:	ldr	r3, [fp, #-8]
    1378:	strb	r2, [r3, #245]	; 0xf5
    137c:	b	1384 <coda_XML_SetReturnNSTriplet+0x5c>
    1380:	nop			; (mov r0, r0)
    1384:	add	sp, fp, #0
    1388:	pop	{fp}		; (ldr fp, [sp], #4)
    138c:	bx	lr

00001390 <coda_XML_SetUserData>:
    1390:	push	{fp}		; (str fp, [sp, #-4]!)
    1394:	add	fp, sp, #0
    1398:	sub	sp, sp, #12
    139c:	str	r0, [fp, #-8]
    13a0:	str	r1, [fp, #-12]
    13a4:	ldr	r3, [fp, #-8]
    13a8:	ldr	r2, [r3, #4]
    13ac:	ldr	r3, [fp, #-8]
    13b0:	ldr	r3, [r3]
    13b4:	cmp	r2, r3
    13b8:	bne	13dc <coda_XML_SetUserData+0x4c>
    13bc:	ldr	r3, [fp, #-8]
    13c0:	ldr	r2, [fp, #-12]
    13c4:	str	r2, [r3]
    13c8:	ldr	r3, [fp, #-8]
    13cc:	ldr	r2, [r3]
    13d0:	ldr	r3, [fp, #-8]
    13d4:	str	r2, [r3, #4]
    13d8:	b	13e8 <coda_XML_SetUserData+0x58>
    13dc:	ldr	r3, [fp, #-8]
    13e0:	ldr	r2, [fp, #-12]
    13e4:	str	r2, [r3]
    13e8:	nop			; (mov r0, r0)
    13ec:	add	sp, fp, #0
    13f0:	pop	{fp}		; (ldr fp, [sp], #4)
    13f4:	bx	lr

000013f8 <coda_XML_SetBase>:
    13f8:	push	{fp, lr}
    13fc:	add	fp, sp, #4
    1400:	sub	sp, sp, #8
    1404:	str	r0, [fp, #-8]
    1408:	str	r1, [fp, #-12]
    140c:	ldr	r3, [fp, #-12]
    1410:	cmp	r3, #0
    1414:	beq	1458 <coda_XML_SetBase+0x60>
    1418:	ldr	r3, [fp, #-8]
    141c:	ldr	r3, [r3, #364]	; 0x16c
    1420:	add	r3, r3, #80	; 0x50
    1424:	ldr	r1, [fp, #-12]
    1428:	mov	r0, r3
    142c:	bl	e6d4 <poolCopyString>
    1430:	str	r0, [fp, #-12]
    1434:	ldr	r3, [fp, #-12]
    1438:	cmp	r3, #0
    143c:	bne	1448 <coda_XML_SetBase+0x50>
    1440:	mov	r3, #0
    1444:	b	1468 <coda_XML_SetBase+0x70>
    1448:	ldr	r3, [fp, #-8]
    144c:	ldr	r2, [fp, #-12]
    1450:	str	r2, [r3, #368]	; 0x170
    1454:	b	1464 <coda_XML_SetBase+0x6c>
    1458:	ldr	r3, [fp, #-8]
    145c:	mov	r2, #0
    1460:	str	r2, [r3, #368]	; 0x170
    1464:	mov	r3, #1
    1468:	mov	r0, r3
    146c:	sub	sp, fp, #4
    1470:	pop	{fp, pc}

00001474 <coda_XML_GetBase>:
    1474:	push	{fp}		; (str fp, [sp, #-4]!)
    1478:	add	fp, sp, #0
    147c:	sub	sp, sp, #12
    1480:	str	r0, [fp, #-8]
    1484:	ldr	r3, [fp, #-8]
    1488:	ldr	r3, [r3, #368]	; 0x170
    148c:	mov	r0, r3
    1490:	add	sp, fp, #0
    1494:	pop	{fp}		; (ldr fp, [sp], #4)
    1498:	bx	lr

0000149c <coda_XML_GetSpecifiedAttributeCount>:
    149c:	push	{fp}		; (str fp, [sp, #-4]!)
    14a0:	add	fp, sp, #0
    14a4:	sub	sp, sp, #12
    14a8:	str	r0, [fp, #-8]
    14ac:	ldr	r3, [fp, #-8]
    14b0:	ldr	r3, [r3, #392]	; 0x188
    14b4:	mov	r0, r3
    14b8:	add	sp, fp, #0
    14bc:	pop	{fp}		; (ldr fp, [sp], #4)
    14c0:	bx	lr

000014c4 <coda_XML_GetIdAttributeIndex>:
    14c4:	push	{fp}		; (str fp, [sp, #-4]!)
    14c8:	add	fp, sp, #0
    14cc:	sub	sp, sp, #12
    14d0:	str	r0, [fp, #-8]
    14d4:	ldr	r3, [fp, #-8]
    14d8:	ldr	r3, [r3, #396]	; 0x18c
    14dc:	mov	r0, r3
    14e0:	add	sp, fp, #0
    14e4:	pop	{fp}		; (ldr fp, [sp], #4)
    14e8:	bx	lr

000014ec <coda_XML_SetElementHandler>:
    14ec:	push	{fp}		; (str fp, [sp, #-4]!)
    14f0:	add	fp, sp, #0
    14f4:	sub	sp, sp, #20
    14f8:	str	r0, [fp, #-8]
    14fc:	str	r1, [fp, #-12]
    1500:	str	r2, [fp, #-16]
    1504:	ldr	r3, [fp, #-8]
    1508:	ldr	r2, [fp, #-12]
    150c:	str	r2, [r3, #60]	; 0x3c
    1510:	ldr	r3, [fp, #-8]
    1514:	ldr	r2, [fp, #-16]
    1518:	str	r2, [r3, #64]	; 0x40
    151c:	nop			; (mov r0, r0)
    1520:	add	sp, fp, #0
    1524:	pop	{fp}		; (ldr fp, [sp], #4)
    1528:	bx	lr

0000152c <coda_XML_SetStartElementHandler>:
    152c:	push	{fp}		; (str fp, [sp, #-4]!)
    1530:	add	fp, sp, #0
    1534:	sub	sp, sp, #12
    1538:	str	r0, [fp, #-8]
    153c:	str	r1, [fp, #-12]
    1540:	ldr	r3, [fp, #-8]
    1544:	ldr	r2, [fp, #-12]
    1548:	str	r2, [r3, #60]	; 0x3c
    154c:	nop			; (mov r0, r0)
    1550:	add	sp, fp, #0
    1554:	pop	{fp}		; (ldr fp, [sp], #4)
    1558:	bx	lr

0000155c <coda_XML_SetEndElementHandler>:
    155c:	push	{fp}		; (str fp, [sp, #-4]!)
    1560:	add	fp, sp, #0
    1564:	sub	sp, sp, #12
    1568:	str	r0, [fp, #-8]
    156c:	str	r1, [fp, #-12]
    1570:	ldr	r3, [fp, #-8]
    1574:	ldr	r2, [fp, #-12]
    1578:	str	r2, [r3, #64]	; 0x40
    157c:	nop			; (mov r0, r0)
    1580:	add	sp, fp, #0
    1584:	pop	{fp}		; (ldr fp, [sp], #4)
    1588:	bx	lr

0000158c <coda_XML_SetCharacterDataHandler>:
    158c:	push	{fp}		; (str fp, [sp, #-4]!)
    1590:	add	fp, sp, #0
    1594:	sub	sp, sp, #12
    1598:	str	r0, [fp, #-8]
    159c:	str	r1, [fp, #-12]
    15a0:	ldr	r3, [fp, #-8]
    15a4:	ldr	r2, [fp, #-12]
    15a8:	str	r2, [r3, #68]	; 0x44
    15ac:	nop			; (mov r0, r0)
    15b0:	add	sp, fp, #0
    15b4:	pop	{fp}		; (ldr fp, [sp], #4)
    15b8:	bx	lr

000015bc <coda_XML_SetProcessingInstructionHandler>:
    15bc:	push	{fp}		; (str fp, [sp, #-4]!)
    15c0:	add	fp, sp, #0
    15c4:	sub	sp, sp, #12
    15c8:	str	r0, [fp, #-8]
    15cc:	str	r1, [fp, #-12]
    15d0:	ldr	r3, [fp, #-8]
    15d4:	ldr	r2, [fp, #-12]
    15d8:	str	r2, [r3, #72]	; 0x48
    15dc:	nop			; (mov r0, r0)
    15e0:	add	sp, fp, #0
    15e4:	pop	{fp}		; (ldr fp, [sp], #4)
    15e8:	bx	lr

000015ec <coda_XML_SetCommentHandler>:
    15ec:	push	{fp}		; (str fp, [sp, #-4]!)
    15f0:	add	fp, sp, #0
    15f4:	sub	sp, sp, #12
    15f8:	str	r0, [fp, #-8]
    15fc:	str	r1, [fp, #-12]
    1600:	ldr	r3, [fp, #-8]
    1604:	ldr	r2, [fp, #-12]
    1608:	str	r2, [r3, #76]	; 0x4c
    160c:	nop			; (mov r0, r0)
    1610:	add	sp, fp, #0
    1614:	pop	{fp}		; (ldr fp, [sp], #4)
    1618:	bx	lr

0000161c <coda_XML_SetCdataSectionHandler>:
    161c:	push	{fp}		; (str fp, [sp, #-4]!)
    1620:	add	fp, sp, #0
    1624:	sub	sp, sp, #20
    1628:	str	r0, [fp, #-8]
    162c:	str	r1, [fp, #-12]
    1630:	str	r2, [fp, #-16]
    1634:	ldr	r3, [fp, #-8]
    1638:	ldr	r2, [fp, #-12]
    163c:	str	r2, [r3, #80]	; 0x50
    1640:	ldr	r3, [fp, #-8]
    1644:	ldr	r2, [fp, #-16]
    1648:	str	r2, [r3, #84]	; 0x54
    164c:	nop			; (mov r0, r0)
    1650:	add	sp, fp, #0
    1654:	pop	{fp}		; (ldr fp, [sp], #4)
    1658:	bx	lr

0000165c <coda_XML_SetStartCdataSectionHandler>:
    165c:	push	{fp}		; (str fp, [sp, #-4]!)
    1660:	add	fp, sp, #0
    1664:	sub	sp, sp, #12
    1668:	str	r0, [fp, #-8]
    166c:	str	r1, [fp, #-12]
    1670:	ldr	r3, [fp, #-8]
    1674:	ldr	r2, [fp, #-12]
    1678:	str	r2, [r3, #80]	; 0x50
    167c:	nop			; (mov r0, r0)
    1680:	add	sp, fp, #0
    1684:	pop	{fp}		; (ldr fp, [sp], #4)
    1688:	bx	lr

0000168c <coda_XML_SetEndCdataSectionHandler>:
    168c:	push	{fp}		; (str fp, [sp, #-4]!)
    1690:	add	fp, sp, #0
    1694:	sub	sp, sp, #12
    1698:	str	r0, [fp, #-8]
    169c:	str	r1, [fp, #-12]
    16a0:	ldr	r3, [fp, #-8]
    16a4:	ldr	r2, [fp, #-12]
    16a8:	str	r2, [r3, #84]	; 0x54
    16ac:	nop			; (mov r0, r0)
    16b0:	add	sp, fp, #0
    16b4:	pop	{fp}		; (ldr fp, [sp], #4)
    16b8:	bx	lr

000016bc <coda_XML_SetDefaultHandler>:
    16bc:	push	{fp}		; (str fp, [sp, #-4]!)
    16c0:	add	fp, sp, #0
    16c4:	sub	sp, sp, #12
    16c8:	str	r0, [fp, #-8]
    16cc:	str	r1, [fp, #-12]
    16d0:	ldr	r3, [fp, #-8]
    16d4:	ldr	r2, [fp, #-12]
    16d8:	str	r2, [r3, #88]	; 0x58
    16dc:	ldr	r3, [fp, #-8]
    16e0:	mov	r2, #0
    16e4:	strb	r2, [r3, #316]	; 0x13c
    16e8:	nop			; (mov r0, r0)
    16ec:	add	sp, fp, #0
    16f0:	pop	{fp}		; (ldr fp, [sp], #4)
    16f4:	bx	lr

000016f8 <coda_XML_SetDefaultHandlerExpand>:
    16f8:	push	{fp}		; (str fp, [sp, #-4]!)
    16fc:	add	fp, sp, #0
    1700:	sub	sp, sp, #12
    1704:	str	r0, [fp, #-8]
    1708:	str	r1, [fp, #-12]
    170c:	ldr	r3, [fp, #-8]
    1710:	ldr	r2, [fp, #-12]
    1714:	str	r2, [r3, #88]	; 0x58
    1718:	ldr	r3, [fp, #-8]
    171c:	mov	r2, #1
    1720:	strb	r2, [r3, #316]	; 0x13c
    1724:	nop			; (mov r0, r0)
    1728:	add	sp, fp, #0
    172c:	pop	{fp}		; (ldr fp, [sp], #4)
    1730:	bx	lr

00001734 <coda_XML_SetDoctypeDeclHandler>:
    1734:	push	{fp}		; (str fp, [sp, #-4]!)
    1738:	add	fp, sp, #0
    173c:	sub	sp, sp, #20
    1740:	str	r0, [fp, #-8]
    1744:	str	r1, [fp, #-12]
    1748:	str	r2, [fp, #-16]
    174c:	ldr	r3, [fp, #-8]
    1750:	ldr	r2, [fp, #-12]
    1754:	str	r2, [r3, #92]	; 0x5c
    1758:	ldr	r3, [fp, #-8]
    175c:	ldr	r2, [fp, #-16]
    1760:	str	r2, [r3, #96]	; 0x60
    1764:	nop			; (mov r0, r0)
    1768:	add	sp, fp, #0
    176c:	pop	{fp}		; (ldr fp, [sp], #4)
    1770:	bx	lr

00001774 <coda_XML_SetStartDoctypeDeclHandler>:
    1774:	push	{fp}		; (str fp, [sp, #-4]!)
    1778:	add	fp, sp, #0
    177c:	sub	sp, sp, #12
    1780:	str	r0, [fp, #-8]
    1784:	str	r1, [fp, #-12]
    1788:	ldr	r3, [fp, #-8]
    178c:	ldr	r2, [fp, #-12]
    1790:	str	r2, [r3, #92]	; 0x5c
    1794:	nop			; (mov r0, r0)
    1798:	add	sp, fp, #0
    179c:	pop	{fp}		; (ldr fp, [sp], #4)
    17a0:	bx	lr

000017a4 <coda_XML_SetEndDoctypeDeclHandler>:
    17a4:	push	{fp}		; (str fp, [sp, #-4]!)
    17a8:	add	fp, sp, #0
    17ac:	sub	sp, sp, #12
    17b0:	str	r0, [fp, #-8]
    17b4:	str	r1, [fp, #-12]
    17b8:	ldr	r3, [fp, #-8]
    17bc:	ldr	r2, [fp, #-12]
    17c0:	str	r2, [r3, #96]	; 0x60
    17c4:	nop			; (mov r0, r0)
    17c8:	add	sp, fp, #0
    17cc:	pop	{fp}		; (ldr fp, [sp], #4)
    17d0:	bx	lr

000017d4 <coda_XML_SetUnparsedEntityDeclHandler>:
    17d4:	push	{fp}		; (str fp, [sp, #-4]!)
    17d8:	add	fp, sp, #0
    17dc:	sub	sp, sp, #12
    17e0:	str	r0, [fp, #-8]
    17e4:	str	r1, [fp, #-12]
    17e8:	ldr	r3, [fp, #-8]
    17ec:	ldr	r2, [fp, #-12]
    17f0:	str	r2, [r3, #100]	; 0x64
    17f4:	nop			; (mov r0, r0)
    17f8:	add	sp, fp, #0
    17fc:	pop	{fp}		; (ldr fp, [sp], #4)
    1800:	bx	lr

00001804 <coda_XML_SetNotationDeclHandler>:
    1804:	push	{fp}		; (str fp, [sp, #-4]!)
    1808:	add	fp, sp, #0
    180c:	sub	sp, sp, #12
    1810:	str	r0, [fp, #-8]
    1814:	str	r1, [fp, #-12]
    1818:	ldr	r3, [fp, #-8]
    181c:	ldr	r2, [fp, #-12]
    1820:	str	r2, [r3, #104]	; 0x68
    1824:	nop			; (mov r0, r0)
    1828:	add	sp, fp, #0
    182c:	pop	{fp}		; (ldr fp, [sp], #4)
    1830:	bx	lr

00001834 <coda_XML_SetNamespaceDeclHandler>:
    1834:	push	{fp}		; (str fp, [sp, #-4]!)
    1838:	add	fp, sp, #0
    183c:	sub	sp, sp, #20
    1840:	str	r0, [fp, #-8]
    1844:	str	r1, [fp, #-12]
    1848:	str	r2, [fp, #-16]
    184c:	ldr	r3, [fp, #-8]
    1850:	ldr	r2, [fp, #-12]
    1854:	str	r2, [r3, #108]	; 0x6c
    1858:	ldr	r3, [fp, #-8]
    185c:	ldr	r2, [fp, #-16]
    1860:	str	r2, [r3, #112]	; 0x70
    1864:	nop			; (mov r0, r0)
    1868:	add	sp, fp, #0
    186c:	pop	{fp}		; (ldr fp, [sp], #4)
    1870:	bx	lr

00001874 <coda_XML_SetStartNamespaceDeclHandler>:
    1874:	push	{fp}		; (str fp, [sp, #-4]!)
    1878:	add	fp, sp, #0
    187c:	sub	sp, sp, #12
    1880:	str	r0, [fp, #-8]
    1884:	str	r1, [fp, #-12]
    1888:	ldr	r3, [fp, #-8]
    188c:	ldr	r2, [fp, #-12]
    1890:	str	r2, [r3, #108]	; 0x6c
    1894:	nop			; (mov r0, r0)
    1898:	add	sp, fp, #0
    189c:	pop	{fp}		; (ldr fp, [sp], #4)
    18a0:	bx	lr

000018a4 <coda_XML_SetEndNamespaceDeclHandler>:
    18a4:	push	{fp}		; (str fp, [sp, #-4]!)
    18a8:	add	fp, sp, #0
    18ac:	sub	sp, sp, #12
    18b0:	str	r0, [fp, #-8]
    18b4:	str	r1, [fp, #-12]
    18b8:	ldr	r3, [fp, #-8]
    18bc:	ldr	r2, [fp, #-12]
    18c0:	str	r2, [r3, #112]	; 0x70
    18c4:	nop			; (mov r0, r0)
    18c8:	add	sp, fp, #0
    18cc:	pop	{fp}		; (ldr fp, [sp], #4)
    18d0:	bx	lr

000018d4 <coda_XML_SetNotStandaloneHandler>:
    18d4:	push	{fp}		; (str fp, [sp, #-4]!)
    18d8:	add	fp, sp, #0
    18dc:	sub	sp, sp, #12
    18e0:	str	r0, [fp, #-8]
    18e4:	str	r1, [fp, #-12]
    18e8:	ldr	r3, [fp, #-8]
    18ec:	ldr	r2, [fp, #-12]
    18f0:	str	r2, [r3, #116]	; 0x74
    18f4:	nop			; (mov r0, r0)
    18f8:	add	sp, fp, #0
    18fc:	pop	{fp}		; (ldr fp, [sp], #4)
    1900:	bx	lr

00001904 <coda_XML_SetExternalEntityRefHandler>:
    1904:	push	{fp}		; (str fp, [sp, #-4]!)
    1908:	add	fp, sp, #0
    190c:	sub	sp, sp, #12
    1910:	str	r0, [fp, #-8]
    1914:	str	r1, [fp, #-12]
    1918:	ldr	r3, [fp, #-8]
    191c:	ldr	r2, [fp, #-12]
    1920:	str	r2, [r3, #120]	; 0x78
    1924:	nop			; (mov r0, r0)
    1928:	add	sp, fp, #0
    192c:	pop	{fp}		; (ldr fp, [sp], #4)
    1930:	bx	lr

00001934 <coda_XML_SetExternalEntityRefHandlerArg>:
    1934:	push	{fp}		; (str fp, [sp, #-4]!)
    1938:	add	fp, sp, #0
    193c:	sub	sp, sp, #12
    1940:	str	r0, [fp, #-8]
    1944:	str	r1, [fp, #-12]
    1948:	ldr	r3, [fp, #-12]
    194c:	cmp	r3, #0
    1950:	beq	1964 <coda_XML_SetExternalEntityRefHandlerArg+0x30>
    1954:	ldr	r3, [fp, #-8]
    1958:	ldr	r2, [fp, #-12]
    195c:	str	r2, [r3, #124]	; 0x7c
    1960:	b	1970 <coda_XML_SetExternalEntityRefHandlerArg+0x3c>
    1964:	ldr	r3, [fp, #-8]
    1968:	ldr	r2, [fp, #-8]
    196c:	str	r2, [r3, #124]	; 0x7c
    1970:	nop			; (mov r0, r0)
    1974:	add	sp, fp, #0
    1978:	pop	{fp}		; (ldr fp, [sp], #4)
    197c:	bx	lr

00001980 <coda_XML_SetSkippedEntityHandler>:
    1980:	push	{fp}		; (str fp, [sp, #-4]!)
    1984:	add	fp, sp, #0
    1988:	sub	sp, sp, #12
    198c:	str	r0, [fp, #-8]
    1990:	str	r1, [fp, #-12]
    1994:	ldr	r3, [fp, #-8]
    1998:	ldr	r2, [fp, #-12]
    199c:	str	r2, [r3, #128]	; 0x80
    19a0:	nop			; (mov r0, r0)
    19a4:	add	sp, fp, #0
    19a8:	pop	{fp}		; (ldr fp, [sp], #4)
    19ac:	bx	lr

000019b0 <coda_XML_SetUnknownEncodingHandler>:
    19b0:	push	{fp}		; (str fp, [sp, #-4]!)
    19b4:	add	fp, sp, #0
    19b8:	sub	sp, sp, #20
    19bc:	str	r0, [fp, #-8]
    19c0:	str	r1, [fp, #-12]
    19c4:	str	r2, [fp, #-16]
    19c8:	ldr	r3, [fp, #-8]
    19cc:	ldr	r2, [fp, #-12]
    19d0:	str	r2, [r3, #132]	; 0x84
    19d4:	ldr	r3, [fp, #-8]
    19d8:	ldr	r2, [fp, #-16]
    19dc:	str	r2, [r3, #256]	; 0x100
    19e0:	nop			; (mov r0, r0)
    19e4:	add	sp, fp, #0
    19e8:	pop	{fp}		; (ldr fp, [sp], #4)
    19ec:	bx	lr

000019f0 <coda_XML_SetElementDeclHandler>:
    19f0:	push	{fp}		; (str fp, [sp, #-4]!)
    19f4:	add	fp, sp, #0
    19f8:	sub	sp, sp, #12
    19fc:	str	r0, [fp, #-8]
    1a00:	str	r1, [fp, #-12]
    1a04:	ldr	r3, [fp, #-8]
    1a08:	ldr	r2, [fp, #-12]
    1a0c:	str	r2, [r3, #136]	; 0x88
    1a10:	nop			; (mov r0, r0)
    1a14:	add	sp, fp, #0
    1a18:	pop	{fp}		; (ldr fp, [sp], #4)
    1a1c:	bx	lr

00001a20 <coda_XML_SetAttlistDeclHandler>:
    1a20:	push	{fp}		; (str fp, [sp, #-4]!)
    1a24:	add	fp, sp, #0
    1a28:	sub	sp, sp, #12
    1a2c:	str	r0, [fp, #-8]
    1a30:	str	r1, [fp, #-12]
    1a34:	ldr	r3, [fp, #-8]
    1a38:	ldr	r2, [fp, #-12]
    1a3c:	str	r2, [r3, #140]	; 0x8c
    1a40:	nop			; (mov r0, r0)
    1a44:	add	sp, fp, #0
    1a48:	pop	{fp}		; (ldr fp, [sp], #4)
    1a4c:	bx	lr

00001a50 <coda_XML_SetEntityDeclHandler>:
    1a50:	push	{fp}		; (str fp, [sp, #-4]!)
    1a54:	add	fp, sp, #0
    1a58:	sub	sp, sp, #12
    1a5c:	str	r0, [fp, #-8]
    1a60:	str	r1, [fp, #-12]
    1a64:	ldr	r3, [fp, #-8]
    1a68:	ldr	r2, [fp, #-12]
    1a6c:	str	r2, [r3, #144]	; 0x90
    1a70:	nop			; (mov r0, r0)
    1a74:	add	sp, fp, #0
    1a78:	pop	{fp}		; (ldr fp, [sp], #4)
    1a7c:	bx	lr

00001a80 <coda_XML_SetXmlDeclHandler>:
    1a80:	push	{fp}		; (str fp, [sp, #-4]!)
    1a84:	add	fp, sp, #0
    1a88:	sub	sp, sp, #12
    1a8c:	str	r0, [fp, #-8]
    1a90:	str	r1, [fp, #-12]
    1a94:	ldr	r3, [fp, #-8]
    1a98:	ldr	r2, [fp, #-12]
    1a9c:	str	r2, [r3, #148]	; 0x94
    1aa0:	nop			; (mov r0, r0)
    1aa4:	add	sp, fp, #0
    1aa8:	pop	{fp}		; (ldr fp, [sp], #4)
    1aac:	bx	lr

00001ab0 <coda_XML_SetParamEntityParsing>:
    1ab0:	push	{fp}		; (str fp, [sp, #-4]!)
    1ab4:	add	fp, sp, #0
    1ab8:	sub	sp, sp, #12
    1abc:	str	r0, [fp, #-8]
    1ac0:	str	r1, [fp, #-12]
    1ac4:	ldr	r3, [fp, #-8]
    1ac8:	ldr	r3, [r3, #496]	; 0x1f0
    1acc:	cmp	r3, #1
    1ad0:	beq	1ae4 <coda_XML_SetParamEntityParsing+0x34>
    1ad4:	ldr	r3, [fp, #-8]
    1ad8:	ldr	r3, [r3, #496]	; 0x1f0
    1adc:	cmp	r3, #3
    1ae0:	bne	1aec <coda_XML_SetParamEntityParsing+0x3c>
    1ae4:	mov	r3, #0
    1ae8:	b	1afc <coda_XML_SetParamEntityParsing+0x4c>
    1aec:	ldr	r3, [fp, #-8]
    1af0:	ldr	r2, [fp, #-12]
    1af4:	str	r2, [r3, #508]	; 0x1fc
    1af8:	mov	r3, #1
    1afc:	mov	r0, r3
    1b00:	add	sp, fp, #0
    1b04:	pop	{fp}		; (ldr fp, [sp], #4)
    1b08:	bx	lr

00001b0c <coda_XML_SetHashSalt>:
    1b0c:	push	{fp}		; (str fp, [sp, #-4]!)
    1b10:	add	fp, sp, #0
    1b14:	sub	sp, sp, #12
    1b18:	str	r0, [fp, #-8]
    1b1c:	str	r1, [fp, #-12]
    1b20:	ldr	r3, [fp, #-8]
    1b24:	ldr	r3, [r3, #496]	; 0x1f0
    1b28:	cmp	r3, #1
    1b2c:	beq	1b40 <coda_XML_SetHashSalt+0x34>
    1b30:	ldr	r3, [fp, #-8]
    1b34:	ldr	r3, [r3, #496]	; 0x1f0
    1b38:	cmp	r3, #3
    1b3c:	bne	1b48 <coda_XML_SetHashSalt+0x3c>
    1b40:	mov	r3, #0
    1b44:	b	1b58 <coda_XML_SetHashSalt+0x4c>
    1b48:	ldr	r3, [fp, #-8]
    1b4c:	ldr	r2, [fp, #-12]
    1b50:	str	r2, [r3, #512]	; 0x200
    1b54:	mov	r3, #1
    1b58:	mov	r0, r3
    1b5c:	add	sp, fp, #0
    1b60:	pop	{fp}		; (ldr fp, [sp], #4)
    1b64:	bx	lr

00001b68 <coda_XML_Parse>:
    1b68:	push	{r4, fp, lr}
    1b6c:	add	fp, sp, #8
    1b70:	sub	sp, sp, #28
    1b74:	str	r0, [fp, #-24]	; 0xffffffe8
    1b78:	str	r1, [fp, #-28]	; 0xffffffe4
    1b7c:	str	r2, [fp, #-32]	; 0xffffffe0
    1b80:	str	r3, [fp, #-36]	; 0xffffffdc
    1b84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b88:	ldr	r3, [r3, #496]	; 0x1f0
    1b8c:	cmp	r3, #2
    1b90:	beq	1bbc <coda_XML_Parse+0x54>
    1b94:	cmp	r3, #3
    1b98:	beq	1ba8 <coda_XML_Parse+0x40>
    1b9c:	cmp	r3, #0
    1ba0:	beq	1bd0 <coda_XML_Parse+0x68>
    1ba4:	b	1c08 <coda_XML_Parse+0xa0>
    1ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1bac:	mov	r2, #33	; 0x21
    1bb0:	str	r2, [r3, #292]	; 0x124
    1bb4:	mov	r3, #0
    1bb8:	b	1d8c <coda_XML_Parse+0x224>
    1bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1bc0:	mov	r2, #36	; 0x24
    1bc4:	str	r2, [r3, #292]	; 0x124
    1bc8:	mov	r3, #0
    1bcc:	b	1d8c <coda_XML_Parse+0x224>
    1bd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1bd4:	ldr	r3, [r3, #492]	; 0x1ec
    1bd8:	cmp	r3, #0
    1bdc:	bne	1c08 <coda_XML_Parse+0xa0>
    1be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1be4:	bl	c0 <startParsing>
    1be8:	mov	r3, r0
    1bec:	cmp	r3, #0
    1bf0:	bne	1c08 <coda_XML_Parse+0xa0>
    1bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1bf8:	mov	r2, #1
    1bfc:	str	r2, [r3, #292]	; 0x124
    1c00:	mov	r3, #0
    1c04:	b	1d8c <coda_XML_Parse+0x224>
    1c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c0c:	mov	r2, #1
    1c10:	str	r2, [r3, #496]	; 0x1f0
    1c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1c18:	cmp	r3, #0
    1c1c:	bne	1d40 <coda_XML_Parse+0x1d8>
    1c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c24:	uxtb	r2, r3
    1c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c2c:	strb	r2, [r3, #500]	; 0x1f4
    1c30:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c34:	cmp	r3, #0
    1c38:	bne	1c44 <coda_XML_Parse+0xdc>
    1c3c:	mov	r3, #1
    1c40:	b	1d8c <coda_XML_Parse+0x224>
    1c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c48:	ldr	r2, [r3, #24]
    1c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c50:	str	r2, [r3, #304]	; 0x130
    1c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c58:	ldr	r2, [r3, #28]
    1c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c60:	str	r2, [r3, #48]	; 0x30
    1c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c68:	ldr	r4, [r3, #288]	; 0x120
    1c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c70:	ldr	r1, [r3, #24]
    1c74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c78:	ldr	r2, [r3, #48]	; 0x30
    1c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c80:	add	r3, r3, #24
    1c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c88:	blx	r4
    1c8c:	mov	r2, r0
    1c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c94:	str	r2, [r3, #292]	; 0x124
    1c98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1c9c:	ldr	r3, [r3, #292]	; 0x124
    1ca0:	cmp	r3, #0
    1ca4:	bne	1d1c <coda_XML_Parse+0x1b4>
    1ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cac:	ldr	r3, [r3, #496]	; 0x1f0
    1cb0:	cmp	r3, #1
    1cb4:	bls	1d08 <coda_XML_Parse+0x1a0>
    1cb8:	cmp	r3, #3
    1cbc:	bne	1d14 <coda_XML_Parse+0x1ac>
    1cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cc4:	ldr	r3, [r3, #152]	; 0x98
    1cc8:	ldr	r4, [r3, #52]	; 0x34
    1ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cd0:	ldr	r0, [r3, #152]	; 0x98
    1cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cd8:	ldr	r1, [r3, #304]	; 0x130
    1cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ce0:	ldr	r2, [r3, #24]
    1ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ce8:	add	r3, r3, #416	; 0x1a0
    1cec:	blx	r4
    1cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cf4:	ldr	r2, [r3, #24]
    1cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1cfc:	str	r2, [r3, #304]	; 0x130
    1d00:	mov	r3, #2
    1d04:	b	1d8c <coda_XML_Parse+0x224>
    1d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d0c:	mov	r2, #2
    1d10:	str	r2, [r3, #496]	; 0x1f0
    1d14:	mov	r3, #1
    1d18:	b	1d8c <coda_XML_Parse+0x224>
    1d1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d20:	ldr	r2, [r3, #296]	; 0x128
    1d24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d28:	str	r2, [r3, #300]	; 0x12c
    1d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d30:	ldr	r2, [pc, #96]	; 1d98 <coda_XML_Parse+0x230>
    1d34:	str	r2, [r3, #288]	; 0x120
    1d38:	mov	r3, #0
    1d3c:	b	1d8c <coda_XML_Parse+0x224>
    1d40:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d48:	bl	1fbc <coda_XML_GetBuffer>
    1d4c:	str	r0, [fp, #-16]
    1d50:	ldr	r3, [fp, #-16]
    1d54:	cmp	r3, #0
    1d58:	bne	1d64 <coda_XML_Parse+0x1fc>
    1d5c:	mov	r3, #0
    1d60:	b	1d8c <coda_XML_Parse+0x224>
    1d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1d68:	mov	r2, r3
    1d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d70:	ldr	r0, [fp, #-16]
    1d74:	bl	0 <memcpy>
    1d78:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1d7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d84:	bl	1d9c <coda_XML_ParseBuffer>
    1d88:	mov	r3, r0
    1d8c:	mov	r0, r3
    1d90:	sub	sp, fp, #8
    1d94:	pop	{r4, fp, pc}
    1d98:	.word	0x00000000

00001d9c <coda_XML_ParseBuffer>:
    1d9c:	push	{r4, fp, lr}
    1da0:	add	fp, sp, #8
    1da4:	sub	sp, sp, #28
    1da8:	str	r0, [fp, #-24]	; 0xffffffe8
    1dac:	str	r1, [fp, #-28]	; 0xffffffe4
    1db0:	str	r2, [fp, #-32]	; 0xffffffe0
    1db4:	mov	r3, #1
    1db8:	str	r3, [fp, #-16]
    1dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dc0:	ldr	r3, [r3, #496]	; 0x1f0
    1dc4:	cmp	r3, #2
    1dc8:	beq	1df4 <coda_XML_ParseBuffer+0x58>
    1dcc:	cmp	r3, #3
    1dd0:	beq	1de0 <coda_XML_ParseBuffer+0x44>
    1dd4:	cmp	r3, #0
    1dd8:	beq	1e08 <coda_XML_ParseBuffer+0x6c>
    1ddc:	b	1e40 <coda_XML_ParseBuffer+0xa4>
    1de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1de4:	mov	r2, #33	; 0x21
    1de8:	str	r2, [r3, #292]	; 0x124
    1dec:	mov	r3, #0
    1df0:	b	1fac <coda_XML_ParseBuffer+0x210>
    1df4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1df8:	mov	r2, #36	; 0x24
    1dfc:	str	r2, [r3, #292]	; 0x124
    1e00:	mov	r3, #0
    1e04:	b	1fac <coda_XML_ParseBuffer+0x210>
    1e08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e0c:	ldr	r3, [r3, #492]	; 0x1ec
    1e10:	cmp	r3, #0
    1e14:	bne	1e40 <coda_XML_ParseBuffer+0xa4>
    1e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e1c:	bl	c0 <startParsing>
    1e20:	mov	r3, r0
    1e24:	cmp	r3, #0
    1e28:	bne	1e40 <coda_XML_ParseBuffer+0xa4>
    1e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e30:	mov	r2, #1
    1e34:	str	r2, [r3, #292]	; 0x124
    1e38:	mov	r3, #0
    1e3c:	b	1fac <coda_XML_ParseBuffer+0x210>
    1e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e44:	mov	r2, #1
    1e48:	str	r2, [r3, #496]	; 0x1f0
    1e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e50:	ldr	r3, [r3, #24]
    1e54:	str	r3, [fp, #-20]	; 0xffffffec
    1e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e5c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1e60:	str	r2, [r3, #304]	; 0x130
    1e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e68:	ldr	r2, [r3, #28]
    1e6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1e70:	add	r2, r2, r3
    1e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e78:	str	r2, [r3, #28]
    1e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e80:	ldr	r2, [r3, #28]
    1e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e88:	str	r2, [r3, #48]	; 0x30
    1e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e90:	ldrd	r0, [r3, #40]	; 0x28
    1e94:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1e98:	mov	r2, r3
    1e9c:	asr	r3, r2, #31
    1ea0:	adds	r2, r2, r0
    1ea4:	adc	r3, r3, r1
    1ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1eac:	strd	r2, [r1, #40]	; 0x28
    1eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1eb4:	uxtb	r2, r3
    1eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ebc:	strb	r2, [r3, #500]	; 0x1f4
    1ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ec4:	ldr	r4, [r3, #288]	; 0x120
    1ec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ecc:	ldr	r2, [r3, #48]	; 0x30
    1ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ed4:	add	r3, r3, #24
    1ed8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ee0:	blx	r4
    1ee4:	mov	r2, r0
    1ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1eec:	str	r2, [r3, #292]	; 0x124
    1ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ef4:	ldr	r3, [r3, #292]	; 0x124
    1ef8:	cmp	r3, #0
    1efc:	beq	1f24 <coda_XML_ParseBuffer+0x188>
    1f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f04:	ldr	r2, [r3, #296]	; 0x128
    1f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f0c:	str	r2, [r3, #300]	; 0x12c
    1f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f14:	ldr	r2, [pc, #156]	; 1fb8 <coda_XML_ParseBuffer+0x21c>
    1f18:	str	r2, [r3, #288]	; 0x120
    1f1c:	mov	r3, #0
    1f20:	b	1fac <coda_XML_ParseBuffer+0x210>
    1f24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f28:	ldr	r3, [r3, #496]	; 0x1f0
    1f2c:	cmp	r3, #1
    1f30:	bls	1f48 <coda_XML_ParseBuffer+0x1ac>
    1f34:	cmp	r3, #3
    1f38:	bne	1f68 <coda_XML_ParseBuffer+0x1cc>
    1f3c:	mov	r3, #2
    1f40:	str	r3, [fp, #-16]
    1f44:	b	1f68 <coda_XML_ParseBuffer+0x1cc>
    1f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f4c:	cmp	r3, #0
    1f50:	beq	1f68 <coda_XML_ParseBuffer+0x1cc>
    1f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f58:	mov	r2, #2
    1f5c:	str	r2, [r3, #496]	; 0x1f0
    1f60:	ldr	r3, [fp, #-16]
    1f64:	b	1fac <coda_XML_ParseBuffer+0x210>
    1f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f6c:	ldr	r3, [r3, #152]	; 0x98
    1f70:	ldr	r4, [r3, #52]	; 0x34
    1f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f78:	ldr	r0, [r3, #152]	; 0x98
    1f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f80:	ldr	r1, [r3, #304]	; 0x130
    1f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f88:	ldr	r2, [r3, #24]
    1f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f90:	add	r3, r3, #416	; 0x1a0
    1f94:	blx	r4
    1f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1f9c:	ldr	r2, [r3, #24]
    1fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fa4:	str	r2, [r3, #304]	; 0x130
    1fa8:	ldr	r3, [fp, #-16]
    1fac:	mov	r0, r3
    1fb0:	sub	sp, fp, #8
    1fb4:	pop	{r4, fp, pc}
    1fb8:	.word	0x00000000

00001fbc <coda_XML_GetBuffer>:
    1fbc:	push	{fp, lr}
    1fc0:	add	fp, sp, #4
    1fc4:	sub	sp, sp, #32
    1fc8:	str	r0, [fp, #-32]	; 0xffffffe0
    1fcc:	str	r1, [fp, #-36]	; 0xffffffdc
    1fd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1fd4:	cmp	r3, #0
    1fd8:	bge	1ff0 <coda_XML_GetBuffer+0x34>
    1fdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1fe0:	mov	r2, #1
    1fe4:	str	r2, [r3, #292]	; 0x124
    1fe8:	mov	r3, #0
    1fec:	b	23f4 <coda_XML_GetBuffer+0x438>
    1ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ff4:	ldr	r3, [r3, #496]	; 0x1f0
    1ff8:	cmp	r3, #2
    1ffc:	beq	201c <coda_XML_GetBuffer+0x60>
    2000:	cmp	r3, #3
    2004:	bne	2030 <coda_XML_GetBuffer+0x74>
    2008:	ldr	r3, [fp, #-32]	; 0xffffffe0
    200c:	mov	r2, #33	; 0x21
    2010:	str	r2, [r3, #292]	; 0x124
    2014:	mov	r3, #0
    2018:	b	23f4 <coda_XML_GetBuffer+0x438>
    201c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2020:	mov	r2, #36	; 0x24
    2024:	str	r2, [r3, #292]	; 0x124
    2028:	mov	r3, #0
    202c:	b	23f4 <coda_XML_GetBuffer+0x438>
    2030:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2034:	ldr	r3, [r3, #32]
    2038:	mov	r2, r3
    203c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2040:	ldr	r3, [r3, #28]
    2044:	sub	r2, r2, r3
    2048:	ldr	r3, [fp, #-36]	; 0xffffffdc
    204c:	cmp	r2, r3
    2050:	bge	23ec <coda_XML_GetBuffer+0x430>
    2054:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2058:	ldr	r3, [r3, #28]
    205c:	mov	r2, r3
    2060:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2064:	ldr	r3, [r3, #24]
    2068:	sub	r2, r2, r3
    206c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2070:	add	r3, r2, r3
    2074:	str	r3, [fp, #-20]	; 0xffffffec
    2078:	ldr	r3, [fp, #-32]	; 0xffffffe0
    207c:	ldr	r3, [r3, #24]
    2080:	mov	r2, r3
    2084:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2088:	ldr	r3, [r3, #8]
    208c:	sub	r3, r2, r3
    2090:	str	r3, [fp, #-8]
    2094:	ldr	r3, [fp, #-20]	; 0xffffffec
    2098:	cmp	r3, #0
    209c:	bge	20b4 <coda_XML_GetBuffer+0xf8>
    20a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20a4:	mov	r2, #1
    20a8:	str	r2, [r3, #292]	; 0x124
    20ac:	mov	r3, #0
    20b0:	b	23f4 <coda_XML_GetBuffer+0x438>
    20b4:	ldr	r3, [fp, #-8]
    20b8:	cmp	r3, #1024	; 0x400
    20bc:	ble	20c8 <coda_XML_GetBuffer+0x10c>
    20c0:	mov	r3, #1024	; 0x400
    20c4:	str	r3, [fp, #-8]
    20c8:	ldr	r2, [fp, #-20]	; 0xffffffec
    20cc:	ldr	r3, [fp, #-8]
    20d0:	add	r3, r2, r3
    20d4:	str	r3, [fp, #-20]	; 0xffffffec
    20d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20dc:	ldr	r3, [r3, #32]
    20e0:	mov	r2, r3
    20e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20e8:	ldr	r3, [r3, #8]
    20ec:	sub	r2, r2, r3
    20f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    20f4:	cmp	r2, r3
    20f8:	blt	21c0 <coda_XML_GetBuffer+0x204>
    20fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2100:	ldr	r3, [r3, #24]
    2104:	mov	r2, r3
    2108:	ldr	r3, [fp, #-32]	; 0xffffffe0
    210c:	ldr	r3, [r3, #8]
    2110:	sub	r2, r2, r3
    2114:	ldr	r3, [fp, #-8]
    2118:	cmp	r2, r3
    211c:	ble	23c4 <coda_XML_GetBuffer+0x408>
    2120:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2124:	ldr	r3, [r3, #24]
    2128:	mov	r2, r3
    212c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2130:	ldr	r3, [r3, #8]
    2134:	sub	r2, r2, r3
    2138:	ldr	r3, [fp, #-8]
    213c:	sub	r3, r2, r3
    2140:	str	r3, [fp, #-28]	; 0xffffffe4
    2144:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2148:	ldr	r0, [r3, #8]
    214c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2150:	ldr	r2, [r3, #8]
    2154:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2158:	add	r1, r2, r3
    215c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2160:	ldr	r3, [r3, #28]
    2164:	mov	r2, r3
    2168:	ldr	r3, [fp, #-32]	; 0xffffffe0
    216c:	ldr	r3, [r3, #24]
    2170:	sub	r2, r2, r3
    2174:	ldr	r3, [fp, #-8]
    2178:	add	r3, r2, r3
    217c:	mov	r2, r3
    2180:	bl	0 <memmove>
    2184:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2188:	ldr	r2, [r3, #28]
    218c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2190:	rsb	r3, r3, #0
    2194:	add	r2, r2, r3
    2198:	ldr	r3, [fp, #-32]	; 0xffffffe0
    219c:	str	r2, [r3, #28]
    21a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21a4:	ldr	r2, [r3, #24]
    21a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    21ac:	rsb	r3, r3, #0
    21b0:	add	r2, r2, r3
    21b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21b8:	str	r2, [r3, #24]
    21bc:	b	23c4 <coda_XML_GetBuffer+0x408>
    21c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21c4:	ldr	r3, [r3, #32]
    21c8:	mov	r2, r3
    21cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    21d0:	ldr	r3, [r3, #24]
    21d4:	sub	r3, r2, r3
    21d8:	str	r3, [fp, #-12]
    21dc:	ldr	r3, [fp, #-12]
    21e0:	cmp	r3, #0
    21e4:	bne	21f0 <coda_XML_GetBuffer+0x234>
    21e8:	mov	r3, #1024	; 0x400
    21ec:	str	r3, [fp, #-12]
    21f0:	ldr	r3, [fp, #-12]
    21f4:	lsl	r3, r3, #1
    21f8:	str	r3, [fp, #-12]
    21fc:	ldr	r2, [fp, #-12]
    2200:	ldr	r3, [fp, #-20]	; 0xffffffec
    2204:	cmp	r2, r3
    2208:	bge	2218 <coda_XML_GetBuffer+0x25c>
    220c:	ldr	r3, [fp, #-12]
    2210:	cmp	r3, #0
    2214:	bgt	21f0 <coda_XML_GetBuffer+0x234>
    2218:	ldr	r3, [fp, #-12]
    221c:	cmp	r3, #0
    2220:	bgt	2238 <coda_XML_GetBuffer+0x27c>
    2224:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2228:	mov	r2, #1
    222c:	str	r2, [r3, #292]	; 0x124
    2230:	mov	r3, #0
    2234:	b	23f4 <coda_XML_GetBuffer+0x438>
    2238:	ldr	r3, [fp, #-32]	; 0xffffffe0
    223c:	ldr	r3, [r3, #12]
    2240:	ldr	r2, [fp, #-12]
    2244:	mov	r0, r2
    2248:	blx	r3
    224c:	str	r0, [fp, #-24]	; 0xffffffe8
    2250:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2254:	cmp	r3, #0
    2258:	bne	2270 <coda_XML_GetBuffer+0x2b4>
    225c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2260:	mov	r2, #1
    2264:	str	r2, [r3, #292]	; 0x124
    2268:	mov	r3, #0
    226c:	b	23f4 <coda_XML_GetBuffer+0x438>
    2270:	ldr	r3, [fp, #-12]
    2274:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2278:	add	r2, r2, r3
    227c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2280:	str	r2, [r3, #32]
    2284:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2288:	ldr	r3, [r3, #24]
    228c:	cmp	r3, #0
    2290:	beq	237c <coda_XML_GetBuffer+0x3c0>
    2294:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2298:	ldr	r3, [r3, #24]
    229c:	mov	r2, r3
    22a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22a4:	ldr	r3, [r3, #8]
    22a8:	sub	r3, r2, r3
    22ac:	str	r3, [fp, #-16]
    22b0:	ldr	r3, [fp, #-16]
    22b4:	cmp	r3, #1024	; 0x400
    22b8:	ble	22c4 <coda_XML_GetBuffer+0x308>
    22bc:	mov	r3, #1024	; 0x400
    22c0:	str	r3, [fp, #-16]
    22c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22c8:	ldr	r3, [r3, #24]
    22cc:	ldr	r2, [fp, #-16]
    22d0:	rsb	r2, r2, #0
    22d4:	add	r1, r3, r2
    22d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22dc:	ldr	r3, [r3, #28]
    22e0:	mov	r2, r3
    22e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    22e8:	ldr	r3, [r3, #24]
    22ec:	sub	r2, r2, r3
    22f0:	ldr	r3, [fp, #-16]
    22f4:	add	r3, r2, r3
    22f8:	mov	r2, r3
    22fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2300:	bl	0 <memcpy>
    2304:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2308:	ldr	r3, [r3, #20]
    230c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2310:	ldr	r2, [r2, #8]
    2314:	mov	r0, r2
    2318:	blx	r3
    231c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2320:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2324:	str	r2, [r3, #8]
    2328:	ldr	r3, [fp, #-32]	; 0xffffffe0
    232c:	ldr	r2, [r3, #8]
    2330:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2334:	ldr	r3, [r3, #28]
    2338:	mov	r1, r3
    233c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2340:	ldr	r3, [r3, #24]
    2344:	sub	r3, r1, r3
    2348:	mov	r1, r3
    234c:	ldr	r3, [fp, #-16]
    2350:	add	r3, r1, r3
    2354:	add	r2, r2, r3
    2358:	ldr	r3, [fp, #-32]	; 0xffffffe0
    235c:	str	r2, [r3, #28]
    2360:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2364:	ldr	r2, [r3, #8]
    2368:	ldr	r3, [fp, #-16]
    236c:	add	r2, r2, r3
    2370:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2374:	str	r2, [r3, #24]
    2378:	b	23c4 <coda_XML_GetBuffer+0x408>
    237c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2380:	ldr	r3, [r3, #28]
    2384:	mov	r2, r3
    2388:	ldr	r3, [fp, #-32]	; 0xffffffe0
    238c:	ldr	r3, [r3, #24]
    2390:	sub	r3, r2, r3
    2394:	mov	r2, r3
    2398:	ldr	r3, [fp, #-24]	; 0xffffffe8
    239c:	add	r2, r3, r2
    23a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23a4:	str	r2, [r3, #28]
    23a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    23b0:	str	r2, [r3, #8]
    23b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23b8:	ldr	r2, [r3, #8]
    23bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23c0:	str	r2, [r3, #24]
    23c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23c8:	mov	r2, #0
    23cc:	str	r2, [r3, #300]	; 0x12c
    23d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23d4:	ldr	r2, [r3, #300]	; 0x12c
    23d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23dc:	str	r2, [r3, #296]	; 0x128
    23e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23e4:	mov	r2, #0
    23e8:	str	r2, [r3, #304]	; 0x130
    23ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    23f0:	ldr	r3, [r3, #28]
    23f4:	mov	r0, r3
    23f8:	sub	sp, fp, #4
    23fc:	pop	{fp, pc}

00002400 <coda_XML_StopParser>:
    2400:	push	{fp}		; (str fp, [sp, #-4]!)
    2404:	add	fp, sp, #0
    2408:	sub	sp, sp, #12
    240c:	str	r0, [fp, #-8]
    2410:	mov	r3, r1
    2414:	strb	r3, [fp, #-9]
    2418:	ldr	r3, [fp, #-8]
    241c:	ldr	r3, [r3, #496]	; 0x1f0
    2420:	cmp	r3, #2
    2424:	beq	2460 <coda_XML_StopParser+0x60>
    2428:	cmp	r3, #3
    242c:	bne	2474 <coda_XML_StopParser+0x74>
    2430:	ldrb	r3, [fp, #-9]
    2434:	cmp	r3, #0
    2438:	beq	2450 <coda_XML_StopParser+0x50>
    243c:	ldr	r3, [fp, #-8]
    2440:	mov	r2, #33	; 0x21
    2444:	str	r2, [r3, #292]	; 0x124
    2448:	mov	r3, #0
    244c:	b	24c4 <coda_XML_StopParser+0xc4>
    2450:	ldr	r3, [fp, #-8]
    2454:	mov	r2, #2
    2458:	str	r2, [r3, #496]	; 0x1f0
    245c:	b	24c0 <coda_XML_StopParser+0xc0>
    2460:	ldr	r3, [fp, #-8]
    2464:	mov	r2, #36	; 0x24
    2468:	str	r2, [r3, #292]	; 0x124
    246c:	mov	r3, #0
    2470:	b	24c4 <coda_XML_StopParser+0xc4>
    2474:	ldrb	r3, [fp, #-9]
    2478:	cmp	r3, #0
    247c:	beq	24b4 <coda_XML_StopParser+0xb4>
    2480:	ldr	r3, [fp, #-8]
    2484:	ldrb	r3, [r3, #504]	; 0x1f8
    2488:	cmp	r3, #0
    248c:	beq	24a4 <coda_XML_StopParser+0xa4>
    2490:	ldr	r3, [fp, #-8]
    2494:	mov	r2, #37	; 0x25
    2498:	str	r2, [r3, #292]	; 0x124
    249c:	mov	r3, #0
    24a0:	b	24c4 <coda_XML_StopParser+0xc4>
    24a4:	ldr	r3, [fp, #-8]
    24a8:	mov	r2, #3
    24ac:	str	r2, [r3, #496]	; 0x1f0
    24b0:	b	24c0 <coda_XML_StopParser+0xc0>
    24b4:	ldr	r3, [fp, #-8]
    24b8:	mov	r2, #2
    24bc:	str	r2, [r3, #496]	; 0x1f0
    24c0:	mov	r3, #1
    24c4:	mov	r0, r3
    24c8:	add	sp, fp, #0
    24cc:	pop	{fp}		; (ldr fp, [sp], #4)
    24d0:	bx	lr

000024d4 <coda_XML_ResumeParser>:
    24d4:	push	{r4, fp, lr}
    24d8:	add	fp, sp, #8
    24dc:	sub	sp, sp, #20
    24e0:	str	r0, [fp, #-24]	; 0xffffffe8
    24e4:	mov	r3, #1
    24e8:	str	r3, [fp, #-16]
    24ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
    24f0:	ldr	r3, [r3, #496]	; 0x1f0
    24f4:	cmp	r3, #3
    24f8:	beq	2510 <coda_XML_ResumeParser+0x3c>
    24fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2500:	mov	r2, #34	; 0x22
    2504:	str	r2, [r3, #292]	; 0x124
    2508:	mov	r3, #0
    250c:	b	2610 <coda_XML_ResumeParser+0x13c>
    2510:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2514:	mov	r2, #1
    2518:	str	r2, [r3, #496]	; 0x1f0
    251c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2520:	ldr	r4, [r3, #288]	; 0x120
    2524:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2528:	ldr	r1, [r3, #24]
    252c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2530:	ldr	r2, [r3, #48]	; 0x30
    2534:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2538:	add	r3, r3, #24
    253c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2540:	blx	r4
    2544:	mov	r2, r0
    2548:	ldr	r3, [fp, #-24]	; 0xffffffe8
    254c:	str	r2, [r3, #292]	; 0x124
    2550:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2554:	ldr	r3, [r3, #292]	; 0x124
    2558:	cmp	r3, #0
    255c:	beq	2584 <coda_XML_ResumeParser+0xb0>
    2560:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2564:	ldr	r2, [r3, #296]	; 0x128
    2568:	ldr	r3, [fp, #-24]	; 0xffffffe8
    256c:	str	r2, [r3, #300]	; 0x12c
    2570:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2574:	ldr	r2, [pc, #160]	; 261c <coda_XML_ResumeParser+0x148>
    2578:	str	r2, [r3, #288]	; 0x120
    257c:	mov	r3, #0
    2580:	b	2610 <coda_XML_ResumeParser+0x13c>
    2584:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2588:	ldr	r3, [r3, #496]	; 0x1f0
    258c:	cmp	r3, #1
    2590:	bls	25a8 <coda_XML_ResumeParser+0xd4>
    2594:	cmp	r3, #3
    2598:	bne	25cc <coda_XML_ResumeParser+0xf8>
    259c:	mov	r3, #2
    25a0:	str	r3, [fp, #-16]
    25a4:	b	25cc <coda_XML_ResumeParser+0xf8>
    25a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25ac:	ldrb	r3, [r3, #500]	; 0x1f4
    25b0:	cmp	r3, #0
    25b4:	beq	25cc <coda_XML_ResumeParser+0xf8>
    25b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25bc:	mov	r2, #2
    25c0:	str	r2, [r3, #496]	; 0x1f0
    25c4:	ldr	r3, [fp, #-16]
    25c8:	b	2610 <coda_XML_ResumeParser+0x13c>
    25cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25d0:	ldr	r3, [r3, #152]	; 0x98
    25d4:	ldr	r4, [r3, #52]	; 0x34
    25d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25dc:	ldr	r0, [r3, #152]	; 0x98
    25e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25e4:	ldr	r1, [r3, #304]	; 0x130
    25e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25ec:	ldr	r2, [r3, #24]
    25f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25f4:	add	r3, r3, #416	; 0x1a0
    25f8:	blx	r4
    25fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2600:	ldr	r2, [r3, #24]
    2604:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2608:	str	r2, [r3, #304]	; 0x130
    260c:	ldr	r3, [fp, #-16]
    2610:	mov	r0, r3
    2614:	sub	sp, fp, #8
    2618:	pop	{r4, fp, pc}
    261c:	.word	0x00000000

00002620 <coda_XML_GetParsingStatus>:
    2620:	push	{fp, lr}
    2624:	add	fp, sp, #4
    2628:	sub	sp, sp, #8
    262c:	str	r0, [fp, #-8]
    2630:	str	r1, [fp, #-12]
    2634:	ldr	r3, [fp, #-12]
    2638:	cmp	r3, #0
    263c:	bne	2654 <coda_XML_GetParsingStatus+0x34>
    2640:	ldr	r3, [pc, #44]	; 2674 <coda_XML_GetParsingStatus+0x54>
    2644:	ldr	r2, [pc, #44]	; 2678 <coda_XML_GetParsingStatus+0x58>
    2648:	ldr	r1, [pc, #44]	; 267c <coda_XML_GetParsingStatus+0x5c>
    264c:	ldr	r0, [pc, #44]	; 2680 <coda_XML_GetParsingStatus+0x60>
    2650:	bl	0 <__assert_fail>
    2654:	ldr	r2, [fp, #-12]
    2658:	ldr	r3, [fp, #-8]
    265c:	add	r3, r3, #496	; 0x1f0
    2660:	ldm	r3, {r0, r1}
    2664:	stm	r2, {r0, r1}
    2668:	nop			; (mov r0, r0)
    266c:	sub	sp, fp, #4
    2670:	pop	{fp, pc}
    2674:	.word	0x00000098
    2678:	.word	0x0000072b
    267c:	.word	0x0000002c
    2680:	.word	0x0000007c

00002684 <coda_XML_GetErrorCode>:
    2684:	push	{fp}		; (str fp, [sp, #-4]!)
    2688:	add	fp, sp, #0
    268c:	sub	sp, sp, #12
    2690:	str	r0, [fp, #-8]
    2694:	ldr	r3, [fp, #-8]
    2698:	ldr	r3, [r3, #292]	; 0x124
    269c:	mov	r0, r3
    26a0:	add	sp, fp, #0
    26a4:	pop	{fp}		; (ldr fp, [sp], #4)
    26a8:	bx	lr

000026ac <coda_XML_GetCurrentByteIndex>:
    26ac:	push	{fp}		; (str fp, [sp, #-4]!)
    26b0:	add	fp, sp, #0
    26b4:	sub	sp, sp, #12
    26b8:	str	r0, [fp, #-8]
    26bc:	ldr	r3, [fp, #-8]
    26c0:	ldr	r3, [r3, #296]	; 0x128
    26c4:	cmp	r3, #0
    26c8:	beq	2700 <coda_XML_GetCurrentByteIndex+0x54>
    26cc:	ldr	r3, [fp, #-8]
    26d0:	ldrd	r0, [r3, #40]	; 0x28
    26d4:	ldr	r3, [fp, #-8]
    26d8:	ldr	r3, [r3, #48]	; 0x30
    26dc:	mov	r2, r3
    26e0:	ldr	r3, [fp, #-8]
    26e4:	ldr	r3, [r3, #296]	; 0x128
    26e8:	sub	r3, r2, r3
    26ec:	mov	r2, r3
    26f0:	asr	r3, r2, #31
    26f4:	subs	r2, r0, r2
    26f8:	sbc	r3, r1, r3
    26fc:	b	2708 <coda_XML_GetCurrentByteIndex+0x5c>
    2700:	mvn	r2, #0
    2704:	mvn	r3, #0
    2708:	mov	r0, r2
    270c:	mov	r1, r3
    2710:	add	sp, fp, #0
    2714:	pop	{fp}		; (ldr fp, [sp], #4)
    2718:	bx	lr

0000271c <coda_XML_GetCurrentByteCount>:
    271c:	push	{fp}		; (str fp, [sp, #-4]!)
    2720:	add	fp, sp, #0
    2724:	sub	sp, sp, #12
    2728:	str	r0, [fp, #-8]
    272c:	ldr	r3, [fp, #-8]
    2730:	ldr	r3, [r3, #300]	; 0x12c
    2734:	cmp	r3, #0
    2738:	beq	2768 <coda_XML_GetCurrentByteCount+0x4c>
    273c:	ldr	r3, [fp, #-8]
    2740:	ldr	r3, [r3, #296]	; 0x128
    2744:	cmp	r3, #0
    2748:	beq	2768 <coda_XML_GetCurrentByteCount+0x4c>
    274c:	ldr	r3, [fp, #-8]
    2750:	ldr	r3, [r3, #300]	; 0x12c
    2754:	mov	r2, r3
    2758:	ldr	r3, [fp, #-8]
    275c:	ldr	r3, [r3, #296]	; 0x128
    2760:	sub	r3, r2, r3
    2764:	b	276c <coda_XML_GetCurrentByteCount+0x50>
    2768:	mov	r3, #0
    276c:	mov	r0, r3
    2770:	add	sp, fp, #0
    2774:	pop	{fp}		; (ldr fp, [sp], #4)
    2778:	bx	lr

0000277c <coda_XML_GetInputContext>:
    277c:	push	{fp}		; (str fp, [sp, #-4]!)
    2780:	add	fp, sp, #0
    2784:	sub	sp, sp, #20
    2788:	str	r0, [fp, #-8]
    278c:	str	r1, [fp, #-12]
    2790:	str	r2, [fp, #-16]
    2794:	ldr	r3, [fp, #-8]
    2798:	ldr	r3, [r3, #296]	; 0x128
    279c:	cmp	r3, #0
    27a0:	beq	2800 <coda_XML_GetInputContext+0x84>
    27a4:	ldr	r3, [fp, #-8]
    27a8:	ldr	r3, [r3, #8]
    27ac:	cmp	r3, #0
    27b0:	beq	2800 <coda_XML_GetInputContext+0x84>
    27b4:	ldr	r3, [fp, #-8]
    27b8:	ldr	r3, [r3, #296]	; 0x128
    27bc:	mov	r2, r3
    27c0:	ldr	r3, [fp, #-8]
    27c4:	ldr	r3, [r3, #8]
    27c8:	sub	r2, r2, r3
    27cc:	ldr	r3, [fp, #-12]
    27d0:	str	r2, [r3]
    27d4:	ldr	r3, [fp, #-8]
    27d8:	ldr	r3, [r3, #28]
    27dc:	mov	r2, r3
    27e0:	ldr	r3, [fp, #-8]
    27e4:	ldr	r3, [r3, #8]
    27e8:	sub	r2, r2, r3
    27ec:	ldr	r3, [fp, #-16]
    27f0:	str	r2, [r3]
    27f4:	ldr	r3, [fp, #-8]
    27f8:	ldr	r3, [r3, #8]
    27fc:	b	2804 <coda_XML_GetInputContext+0x88>
    2800:	mov	r3, #0
    2804:	mov	r0, r3
    2808:	add	sp, fp, #0
    280c:	pop	{fp}		; (ldr fp, [sp], #4)
    2810:	bx	lr

00002814 <coda_XML_GetCurrentLineNumber>:
    2814:	push	{r4, fp, lr}
    2818:	add	fp, sp, #8
    281c:	sub	sp, sp, #12
    2820:	str	r0, [fp, #-16]
    2824:	ldr	r3, [fp, #-16]
    2828:	ldr	r3, [r3, #296]	; 0x128
    282c:	cmp	r3, #0
    2830:	beq	288c <coda_XML_GetCurrentLineNumber+0x78>
    2834:	ldr	r3, [fp, #-16]
    2838:	ldr	r2, [r3, #296]	; 0x128
    283c:	ldr	r3, [fp, #-16]
    2840:	ldr	r3, [r3, #304]	; 0x130
    2844:	cmp	r2, r3
    2848:	bcc	288c <coda_XML_GetCurrentLineNumber+0x78>
    284c:	ldr	r3, [fp, #-16]
    2850:	ldr	r3, [r3, #152]	; 0x98
    2854:	ldr	r4, [r3, #52]	; 0x34
    2858:	ldr	r3, [fp, #-16]
    285c:	ldr	r0, [r3, #152]	; 0x98
    2860:	ldr	r3, [fp, #-16]
    2864:	ldr	r1, [r3, #304]	; 0x130
    2868:	ldr	r3, [fp, #-16]
    286c:	ldr	r2, [r3, #296]	; 0x128
    2870:	ldr	r3, [fp, #-16]
    2874:	add	r3, r3, #416	; 0x1a0
    2878:	blx	r4
    287c:	ldr	r3, [fp, #-16]
    2880:	ldr	r2, [r3, #296]	; 0x128
    2884:	ldr	r3, [fp, #-16]
    2888:	str	r2, [r3, #304]	; 0x130
    288c:	ldr	r3, [fp, #-16]
    2890:	add	r3, r3, #416	; 0x1a0
    2894:	ldrd	r2, [r3]
    2898:	adds	r2, r2, #1
    289c:	adc	r3, r3, #0
    28a0:	mov	r0, r2
    28a4:	mov	r1, r3
    28a8:	sub	sp, fp, #8
    28ac:	pop	{r4, fp, pc}

000028b0 <coda_XML_GetCurrentColumnNumber>:
    28b0:	push	{r4, fp, lr}
    28b4:	add	fp, sp, #8
    28b8:	sub	sp, sp, #12
    28bc:	str	r0, [fp, #-16]
    28c0:	ldr	r3, [fp, #-16]
    28c4:	ldr	r3, [r3, #296]	; 0x128
    28c8:	cmp	r3, #0
    28cc:	beq	2928 <coda_XML_GetCurrentColumnNumber+0x78>
    28d0:	ldr	r3, [fp, #-16]
    28d4:	ldr	r2, [r3, #296]	; 0x128
    28d8:	ldr	r3, [fp, #-16]
    28dc:	ldr	r3, [r3, #304]	; 0x130
    28e0:	cmp	r2, r3
    28e4:	bcc	2928 <coda_XML_GetCurrentColumnNumber+0x78>
    28e8:	ldr	r3, [fp, #-16]
    28ec:	ldr	r3, [r3, #152]	; 0x98
    28f0:	ldr	r4, [r3, #52]	; 0x34
    28f4:	ldr	r3, [fp, #-16]
    28f8:	ldr	r0, [r3, #152]	; 0x98
    28fc:	ldr	r3, [fp, #-16]
    2900:	ldr	r1, [r3, #304]	; 0x130
    2904:	ldr	r3, [fp, #-16]
    2908:	ldr	r2, [r3, #296]	; 0x128
    290c:	ldr	r3, [fp, #-16]
    2910:	add	r3, r3, #416	; 0x1a0
    2914:	blx	r4
    2918:	ldr	r3, [fp, #-16]
    291c:	ldr	r2, [r3, #296]	; 0x128
    2920:	ldr	r3, [fp, #-16]
    2924:	str	r2, [r3, #304]	; 0x130
    2928:	ldr	r3, [fp, #-16]
    292c:	add	r3, r3, #432	; 0x1b0
    2930:	ldrd	r2, [r3, #-8]
    2934:	mov	r0, r2
    2938:	mov	r1, r3
    293c:	sub	sp, fp, #8
    2940:	pop	{r4, fp, pc}

00002944 <coda_XML_FreeContentModel>:
    2944:	push	{fp, lr}
    2948:	add	fp, sp, #4
    294c:	sub	sp, sp, #8
    2950:	str	r0, [fp, #-8]
    2954:	str	r1, [fp, #-12]
    2958:	ldr	r3, [fp, #-8]
    295c:	ldr	r3, [r3, #20]
    2960:	ldr	r0, [fp, #-12]
    2964:	blx	r3
    2968:	nop			; (mov r0, r0)
    296c:	sub	sp, fp, #4
    2970:	pop	{fp, pc}

00002974 <coda_XML_MemMalloc>:
    2974:	push	{fp, lr}
    2978:	add	fp, sp, #4
    297c:	sub	sp, sp, #8
    2980:	str	r0, [fp, #-8]
    2984:	str	r1, [fp, #-12]
    2988:	ldr	r3, [fp, #-8]
    298c:	ldr	r3, [r3, #12]
    2990:	ldr	r0, [fp, #-12]
    2994:	blx	r3
    2998:	mov	r3, r0
    299c:	mov	r0, r3
    29a0:	sub	sp, fp, #4
    29a4:	pop	{fp, pc}

000029a8 <coda_XML_MemRealloc>:
    29a8:	push	{fp, lr}
    29ac:	add	fp, sp, #4
    29b0:	sub	sp, sp, #16
    29b4:	str	r0, [fp, #-8]
    29b8:	str	r1, [fp, #-12]
    29bc:	str	r2, [fp, #-16]
    29c0:	ldr	r3, [fp, #-8]
    29c4:	ldr	r3, [r3, #16]
    29c8:	ldr	r1, [fp, #-16]
    29cc:	ldr	r0, [fp, #-12]
    29d0:	blx	r3
    29d4:	mov	r3, r0
    29d8:	mov	r0, r3
    29dc:	sub	sp, fp, #4
    29e0:	pop	{fp, pc}

000029e4 <coda_XML_MemFree>:
    29e4:	push	{fp, lr}
    29e8:	add	fp, sp, #4
    29ec:	sub	sp, sp, #8
    29f0:	str	r0, [fp, #-8]
    29f4:	str	r1, [fp, #-12]
    29f8:	ldr	r3, [fp, #-8]
    29fc:	ldr	r3, [r3, #20]
    2a00:	ldr	r0, [fp, #-12]
    2a04:	blx	r3
    2a08:	nop			; (mov r0, r0)
    2a0c:	sub	sp, fp, #4
    2a10:	pop	{fp, pc}

00002a14 <coda_XML_DefaultCurrent>:
    2a14:	push	{fp, lr}
    2a18:	add	fp, sp, #4
    2a1c:	sub	sp, sp, #8
    2a20:	str	r0, [fp, #-8]
    2a24:	ldr	r3, [fp, #-8]
    2a28:	ldr	r3, [r3, #88]	; 0x58
    2a2c:	cmp	r3, #0
    2a30:	beq	2a90 <coda_XML_DefaultCurrent+0x7c>
    2a34:	ldr	r3, [fp, #-8]
    2a38:	ldr	r3, [r3, #308]	; 0x134
    2a3c:	cmp	r3, #0
    2a40:	beq	2a70 <coda_XML_DefaultCurrent+0x5c>
    2a44:	ldr	r3, [fp, #-8]
    2a48:	ldr	r1, [r3, #236]	; 0xec
    2a4c:	ldr	r3, [fp, #-8]
    2a50:	ldr	r3, [r3, #308]	; 0x134
    2a54:	ldr	r2, [r3]
    2a58:	ldr	r3, [fp, #-8]
    2a5c:	ldr	r3, [r3, #308]	; 0x134
    2a60:	ldr	r3, [r3, #4]
    2a64:	ldr	r0, [fp, #-8]
    2a68:	bl	b7f8 <reportDefault>
    2a6c:	b	2a90 <coda_XML_DefaultCurrent+0x7c>
    2a70:	ldr	r3, [fp, #-8]
    2a74:	ldr	r1, [r3, #152]	; 0x98
    2a78:	ldr	r3, [fp, #-8]
    2a7c:	ldr	r2, [r3, #296]	; 0x128
    2a80:	ldr	r3, [fp, #-8]
    2a84:	ldr	r3, [r3, #300]	; 0x12c
    2a88:	ldr	r0, [fp, #-8]
    2a8c:	bl	b7f8 <reportDefault>
    2a90:	nop			; (mov r0, r0)
    2a94:	sub	sp, fp, #4
    2a98:	pop	{fp, pc}

00002a9c <coda_XML_ErrorString>:
    2a9c:	push	{fp}		; (str fp, [sp, #-4]!)
    2aa0:	add	fp, sp, #0
    2aa4:	sub	sp, sp, #12
    2aa8:	str	r0, [fp, #-8]
    2aac:	ldr	r3, [fp, #-8]
    2ab0:	cmp	r3, #0
    2ab4:	beq	2ad4 <coda_XML_ErrorString+0x38>
    2ab8:	ldr	r3, [fp, #-8]
    2abc:	cmp	r3, #40	; 0x28
    2ac0:	bhi	2ad4 <coda_XML_ErrorString+0x38>
    2ac4:	ldr	r2, [pc, #28]	; 2ae8 <coda_XML_ErrorString+0x4c>
    2ac8:	ldr	r3, [fp, #-8]
    2acc:	ldr	r3, [r2, r3, lsl #2]
    2ad0:	b	2ad8 <coda_XML_ErrorString+0x3c>
    2ad4:	mov	r3, #0
    2ad8:	mov	r0, r3
    2adc:	add	sp, fp, #0
    2ae0:	pop	{fp}		; (ldr fp, [sp], #4)
    2ae4:	bx	lr
    2ae8:	.word	0x000005e0

00002aec <coda_XML_ExpatVersion>:
    2aec:	push	{fp}		; (str fp, [sp, #-4]!)
    2af0:	add	fp, sp, #0
    2af4:	ldr	r3, [pc, #12]	; 2b08 <coda_XML_ExpatVersion+0x1c>
    2af8:	mov	r0, r3
    2afc:	add	sp, fp, #0
    2b00:	pop	{fp}		; (ldr fp, [sp], #4)
    2b04:	bx	lr
    2b08:	.word	0x0000008c

00002b0c <coda_XML_ExpatVersionInfo>:
    2b0c:	push	{fp}		; (str fp, [sp, #-4]!)
    2b10:	add	fp, sp, #0
    2b14:	sub	sp, sp, #28
    2b18:	str	r0, [fp, #-24]	; 0xffffffe8
    2b1c:	mov	r3, #2
    2b20:	str	r3, [fp, #-16]
    2b24:	mov	r3, #1
    2b28:	str	r3, [fp, #-12]
    2b2c:	mov	r3, #1
    2b30:	str	r3, [fp, #-8]
    2b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2b38:	mov	ip, r3
    2b3c:	sub	r3, fp, #16
    2b40:	ldm	r3, {r0, r1, r2}
    2b44:	stm	ip, {r0, r1, r2}
    2b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b4c:	add	sp, fp, #0
    2b50:	pop	{fp}		; (ldr fp, [sp], #4)
    2b54:	bx	lr

00002b58 <coda_XML_GetFeatureList>:
    2b58:	push	{fp}		; (str fp, [sp, #-4]!)
    2b5c:	add	fp, sp, #0
    2b60:	ldr	r3, [pc, #12]	; 2b74 <coda_XML_GetFeatureList+0x1c>
    2b64:	mov	r0, r3
    2b68:	add	sp, fp, #0
    2b6c:	pop	{fp}		; (ldr fp, [sp], #4)
    2b70:	bx	lr
    2b74:	.word	0x000006e0

00002b78 <storeRawNames>:
    2b78:	push	{fp, lr}
    2b7c:	add	fp, sp, #4
    2b80:	sub	sp, sp, #32
    2b84:	str	r0, [fp, #-32]	; 0xffffffe0
    2b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b8c:	ldr	r3, [r3, #372]	; 0x174
    2b90:	str	r3, [fp, #-8]
    2b94:	b	2d04 <storeRawNames+0x18c>
    2b98:	ldr	r3, [fp, #-8]
    2b9c:	ldr	r3, [r3, #24]
    2ba0:	add	r3, r3, #1
    2ba4:	str	r3, [fp, #-16]
    2ba8:	ldr	r3, [fp, #-8]
    2bac:	ldr	r2, [r3, #36]	; 0x24
    2bb0:	ldr	r3, [fp, #-16]
    2bb4:	add	r3, r2, r3
    2bb8:	str	r3, [fp, #-12]
    2bbc:	ldr	r3, [fp, #-8]
    2bc0:	ldr	r2, [r3, #4]
    2bc4:	ldr	r3, [fp, #-12]
    2bc8:	cmp	r2, r3
    2bcc:	beq	2d14 <storeRawNames+0x19c>
    2bd0:	ldr	r3, [fp, #-8]
    2bd4:	ldr	r3, [r3, #8]
    2bd8:	mov	r2, r3
    2bdc:	ldr	r3, [fp, #-16]
    2be0:	add	r3, r2, r3
    2be4:	str	r3, [fp, #-20]	; 0xffffffec
    2be8:	ldr	r3, [fp, #-8]
    2bec:	ldr	r3, [r3, #40]	; 0x28
    2bf0:	mov	r2, r3
    2bf4:	ldr	r3, [fp, #-8]
    2bf8:	ldr	r3, [r3, #36]	; 0x24
    2bfc:	sub	r2, r2, r3
    2c00:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c04:	cmp	r2, r3
    2c08:	bge	2cd0 <storeRawNames+0x158>
    2c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c10:	ldr	r3, [r3, #16]
    2c14:	ldr	r2, [fp, #-8]
    2c18:	ldr	r2, [r2, #36]	; 0x24
    2c1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c20:	mov	r0, r2
    2c24:	blx	r3
    2c28:	str	r0, [fp, #-24]	; 0xffffffe8
    2c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c30:	cmp	r3, #0
    2c34:	bne	2c40 <storeRawNames+0xc8>
    2c38:	mov	r3, #0
    2c3c:	b	2d1c <storeRawNames+0x1a4>
    2c40:	ldr	r3, [fp, #-8]
    2c44:	ldr	r2, [r3, #12]
    2c48:	ldr	r3, [fp, #-8]
    2c4c:	ldr	r3, [r3, #36]	; 0x24
    2c50:	cmp	r2, r3
    2c54:	bne	2c64 <storeRawNames+0xec>
    2c58:	ldr	r3, [fp, #-8]
    2c5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c60:	str	r2, [r3, #12]
    2c64:	ldr	r3, [fp, #-8]
    2c68:	ldr	r3, [r3, #16]
    2c6c:	cmp	r3, #0
    2c70:	beq	2ca0 <storeRawNames+0x128>
    2c74:	ldr	r3, [fp, #-8]
    2c78:	ldr	r3, [r3, #16]
    2c7c:	mov	r2, r3
    2c80:	ldr	r3, [fp, #-8]
    2c84:	ldr	r3, [r3, #36]	; 0x24
    2c88:	sub	r3, r2, r3
    2c8c:	mov	r2, r3
    2c90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c94:	add	r2, r3, r2
    2c98:	ldr	r3, [fp, #-8]
    2c9c:	str	r2, [r3, #16]
    2ca0:	ldr	r3, [fp, #-8]
    2ca4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2ca8:	str	r2, [r3, #36]	; 0x24
    2cac:	ldr	r3, [fp, #-20]	; 0xffffffec
    2cb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2cb4:	add	r2, r2, r3
    2cb8:	ldr	r3, [fp, #-8]
    2cbc:	str	r2, [r3, #40]	; 0x28
    2cc0:	ldr	r3, [fp, #-16]
    2cc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2cc8:	add	r3, r2, r3
    2ccc:	str	r3, [fp, #-12]
    2cd0:	ldr	r3, [fp, #-8]
    2cd4:	ldr	r1, [r3, #4]
    2cd8:	ldr	r3, [fp, #-8]
    2cdc:	ldr	r3, [r3, #8]
    2ce0:	mov	r2, r3
    2ce4:	ldr	r0, [fp, #-12]
    2ce8:	bl	0 <memcpy>
    2cec:	ldr	r3, [fp, #-8]
    2cf0:	ldr	r2, [fp, #-12]
    2cf4:	str	r2, [r3, #4]
    2cf8:	ldr	r3, [fp, #-8]
    2cfc:	ldr	r3, [r3]
    2d00:	str	r3, [fp, #-8]
    2d04:	ldr	r3, [fp, #-8]
    2d08:	cmp	r3, #0
    2d0c:	bne	2b98 <storeRawNames+0x20>
    2d10:	b	2d18 <storeRawNames+0x1a0>
    2d14:	nop			; (mov r0, r0)
    2d18:	mov	r3, #1
    2d1c:	mov	r0, r3
    2d20:	sub	sp, fp, #4
    2d24:	pop	{fp, pc}

00002d28 <contentProcessor>:
    2d28:	push	{fp, lr}
    2d2c:	add	fp, sp, #4
    2d30:	sub	sp, sp, #40	; 0x28
    2d34:	str	r0, [fp, #-16]
    2d38:	str	r1, [fp, #-20]	; 0xffffffec
    2d3c:	str	r2, [fp, #-24]	; 0xffffffe8
    2d40:	str	r3, [fp, #-28]	; 0xffffffe4
    2d44:	ldr	r3, [fp, #-16]
    2d48:	ldr	r2, [r3, #152]	; 0x98
    2d4c:	ldr	r3, [fp, #-16]
    2d50:	ldrb	r3, [r3, #500]	; 0x1f4
    2d54:	cmp	r3, #0
    2d58:	moveq	r3, #1
    2d5c:	movne	r3, #0
    2d60:	uxtb	r3, r3
    2d64:	str	r3, [sp, #8]
    2d68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2d6c:	str	r3, [sp, #4]
    2d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2d74:	str	r3, [sp]
    2d78:	ldr	r3, [fp, #-20]	; 0xffffffec
    2d7c:	mov	r1, #0
    2d80:	ldr	r0, [fp, #-16]
    2d84:	bl	31a8 <doContent>
    2d88:	str	r0, [fp, #-8]
    2d8c:	ldr	r3, [fp, #-8]
    2d90:	cmp	r3, #0
    2d94:	bne	2db4 <contentProcessor+0x8c>
    2d98:	ldr	r0, [fp, #-16]
    2d9c:	bl	2b78 <storeRawNames>
    2da0:	mov	r3, r0
    2da4:	cmp	r3, #0
    2da8:	bne	2db4 <contentProcessor+0x8c>
    2dac:	mov	r3, #1
    2db0:	b	2db8 <contentProcessor+0x90>
    2db4:	ldr	r3, [fp, #-8]
    2db8:	mov	r0, r3
    2dbc:	sub	sp, fp, #4
    2dc0:	pop	{fp, pc}

00002dc4 <externalEntityInitProcessor>:
    2dc4:	push	{fp, lr}
    2dc8:	add	fp, sp, #4
    2dcc:	sub	sp, sp, #24
    2dd0:	str	r0, [fp, #-16]
    2dd4:	str	r1, [fp, #-20]	; 0xffffffec
    2dd8:	str	r2, [fp, #-24]	; 0xffffffe8
    2ddc:	str	r3, [fp, #-28]	; 0xffffffe4
    2de0:	ldr	r0, [fp, #-16]
    2de4:	bl	6620 <initializeEncoding>
    2de8:	str	r0, [fp, #-8]
    2dec:	ldr	r3, [fp, #-8]
    2df0:	cmp	r3, #0
    2df4:	beq	2e00 <externalEntityInitProcessor+0x3c>
    2df8:	ldr	r3, [fp, #-8]
    2dfc:	b	2e24 <externalEntityInitProcessor+0x60>
    2e00:	ldr	r3, [fp, #-16]
    2e04:	ldr	r2, [pc, #36]	; 2e30 <externalEntityInitProcessor+0x6c>
    2e08:	str	r2, [r3, #288]	; 0x120
    2e0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2e10:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e14:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e18:	ldr	r0, [fp, #-16]
    2e1c:	bl	2e34 <externalEntityInitProcessor2>
    2e20:	mov	r3, r0
    2e24:	mov	r0, r3
    2e28:	sub	sp, fp, #4
    2e2c:	pop	{fp, pc}
    2e30:	.word	0x00000000

00002e34 <externalEntityInitProcessor2>:
    2e34:	push	{r4, fp, lr}
    2e38:	add	fp, sp, #8
    2e3c:	sub	sp, sp, #28
    2e40:	str	r0, [fp, #-24]	; 0xffffffe8
    2e44:	str	r1, [fp, #-28]	; 0xffffffe4
    2e48:	str	r2, [fp, #-32]	; 0xffffffe0
    2e4c:	str	r3, [fp, #-36]	; 0xffffffdc
    2e50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2e54:	str	r3, [fp, #-20]	; 0xffffffec
    2e58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e5c:	ldr	r3, [r3, #152]	; 0x98
    2e60:	ldr	r4, [r3, #4]
    2e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e68:	ldr	r0, [r3, #152]	; 0x98
    2e6c:	sub	r3, fp, #20
    2e70:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2e78:	blx	r4
    2e7c:	str	r0, [fp, #-16]
    2e80:	ldr	r3, [fp, #-16]
    2e84:	cmn	r3, #1
    2e88:	beq	2ee0 <externalEntityInitProcessor2+0xac>
    2e8c:	cmp	r3, #14
    2e90:	beq	2ea0 <externalEntityInitProcessor2+0x6c>
    2e94:	cmn	r3, #2
    2e98:	beq	2f18 <externalEntityInitProcessor2+0xe4>
    2e9c:	b	2f50 <externalEntityInitProcessor2+0x11c>
    2ea0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2ea8:	cmp	r2, r3
    2eac:	bne	2ed4 <externalEntityInitProcessor2+0xa0>
    2eb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2eb4:	ldrb	r3, [r3, #500]	; 0x1f4
    2eb8:	cmp	r3, #0
    2ebc:	bne	2ed4 <externalEntityInitProcessor2+0xa0>
    2ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ec4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ec8:	str	r2, [r3]
    2ecc:	mov	r3, #0
    2ed0:	b	2f74 <externalEntityInitProcessor2+0x140>
    2ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ed8:	str	r3, [fp, #-28]	; 0xffffffe4
    2edc:	b	2f50 <externalEntityInitProcessor2+0x11c>
    2ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ee4:	ldrb	r3, [r3, #500]	; 0x1f4
    2ee8:	cmp	r3, #0
    2eec:	bne	2f04 <externalEntityInitProcessor2+0xd0>
    2ef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ef4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2ef8:	str	r2, [r3]
    2efc:	mov	r3, #0
    2f00:	b	2f74 <externalEntityInitProcessor2+0x140>
    2f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f08:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2f0c:	str	r2, [r3, #296]	; 0x128
    2f10:	mov	r3, #5
    2f14:	b	2f74 <externalEntityInitProcessor2+0x140>
    2f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f1c:	ldrb	r3, [r3, #500]	; 0x1f4
    2f20:	cmp	r3, #0
    2f24:	bne	2f3c <externalEntityInitProcessor2+0x108>
    2f28:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2f2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2f30:	str	r2, [r3]
    2f34:	mov	r3, #0
    2f38:	b	2f74 <externalEntityInitProcessor2+0x140>
    2f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f40:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2f44:	str	r2, [r3, #296]	; 0x128
    2f48:	mov	r3, #6
    2f4c:	b	2f74 <externalEntityInitProcessor2+0x140>
    2f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2f54:	ldr	r2, [pc, #36]	; 2f80 <externalEntityInitProcessor2+0x14c>
    2f58:	str	r2, [r3, #288]	; 0x120
    2f5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2f60:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2f64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f6c:	bl	2f84 <externalEntityInitProcessor3>
    2f70:	mov	r3, r0
    2f74:	mov	r0, r3
    2f78:	sub	sp, fp, #8
    2f7c:	pop	{r4, fp, pc}
    2f80:	.word	0x00000000

00002f84 <externalEntityInitProcessor3>:
    2f84:	push	{r4, fp, lr}
    2f88:	add	fp, sp, #8
    2f8c:	sub	sp, sp, #36	; 0x24
    2f90:	str	r0, [fp, #-32]	; 0xffffffe0
    2f94:	str	r1, [fp, #-36]	; 0xffffffdc
    2f98:	str	r2, [fp, #-40]	; 0xffffffd8
    2f9c:	str	r3, [fp, #-44]	; 0xffffffd4
    2fa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2fa4:	str	r3, [fp, #-24]	; 0xffffffe8
    2fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fac:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2fb0:	str	r2, [r3, #296]	; 0x128
    2fb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fb8:	ldr	r3, [r3, #152]	; 0x98
    2fbc:	ldr	r4, [r3, #4]
    2fc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fc4:	ldr	r0, [r3, #152]	; 0x98
    2fc8:	sub	r3, fp, #24
    2fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2fd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2fd4:	blx	r4
    2fd8:	str	r0, [fp, #-16]
    2fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2fe4:	str	r2, [r3, #300]	; 0x12c
    2fe8:	ldr	r3, [fp, #-16]
    2fec:	cmn	r3, #1
    2ff0:	beq	3074 <externalEntityInitProcessor3+0xf0>
    2ff4:	cmp	r3, #12
    2ff8:	beq	3008 <externalEntityInitProcessor3+0x84>
    2ffc:	cmn	r3, #2
    3000:	beq	30a0 <externalEntityInitProcessor3+0x11c>
    3004:	b	30cc <externalEntityInitProcessor3+0x148>
    3008:	ldr	r3, [fp, #-24]	; 0xffffffe8
    300c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3010:	mov	r1, #1
    3014:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3018:	bl	66b0 <processXmlDecl>
    301c:	str	r0, [fp, #-20]	; 0xffffffec
    3020:	ldr	r3, [fp, #-20]	; 0xffffffec
    3024:	cmp	r3, #0
    3028:	beq	3034 <externalEntityInitProcessor3+0xb0>
    302c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3030:	b	30fc <externalEntityInitProcessor3+0x178>
    3034:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3038:	ldr	r3, [r3, #496]	; 0x1f0
    303c:	cmp	r3, #2
    3040:	beq	3060 <externalEntityInitProcessor3+0xdc>
    3044:	cmp	r3, #3
    3048:	bne	3068 <externalEntityInitProcessor3+0xe4>
    304c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3050:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3054:	str	r2, [r3]
    3058:	mov	r3, #0
    305c:	b	30fc <externalEntityInitProcessor3+0x178>
    3060:	mov	r3, #35	; 0x23
    3064:	b	30fc <externalEntityInitProcessor3+0x178>
    3068:	ldr	r3, [fp, #-24]	; 0xffffffe8
    306c:	str	r3, [fp, #-36]	; 0xffffffdc
    3070:	b	30cc <externalEntityInitProcessor3+0x148>
    3074:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3078:	ldrb	r3, [r3, #500]	; 0x1f4
    307c:	cmp	r3, #0
    3080:	bne	3098 <externalEntityInitProcessor3+0x114>
    3084:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3088:	ldr	r2, [fp, #-36]	; 0xffffffdc
    308c:	str	r2, [r3]
    3090:	mov	r3, #0
    3094:	b	30fc <externalEntityInitProcessor3+0x178>
    3098:	mov	r3, #5
    309c:	b	30fc <externalEntityInitProcessor3+0x178>
    30a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    30a4:	ldrb	r3, [r3, #500]	; 0x1f4
    30a8:	cmp	r3, #0
    30ac:	bne	30c4 <externalEntityInitProcessor3+0x140>
    30b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    30b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    30b8:	str	r2, [r3]
    30bc:	mov	r3, #0
    30c0:	b	30fc <externalEntityInitProcessor3+0x178>
    30c4:	mov	r3, #6
    30c8:	b	30fc <externalEntityInitProcessor3+0x178>
    30cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    30d0:	ldr	r2, [pc, #48]	; 3108 <externalEntityInitProcessor3+0x184>
    30d4:	str	r2, [r3, #288]	; 0x120
    30d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    30dc:	mov	r2, #1
    30e0:	str	r2, [r3, #320]	; 0x140
    30e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    30e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    30ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
    30f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    30f4:	bl	310c <externalEntityContentProcessor>
    30f8:	mov	r3, r0
    30fc:	mov	r0, r3
    3100:	sub	sp, fp, #8
    3104:	pop	{r4, fp, pc}
    3108:	.word	0x00000000

0000310c <externalEntityContentProcessor>:
    310c:	push	{fp, lr}
    3110:	add	fp, sp, #4
    3114:	sub	sp, sp, #40	; 0x28
    3118:	str	r0, [fp, #-16]
    311c:	str	r1, [fp, #-20]	; 0xffffffec
    3120:	str	r2, [fp, #-24]	; 0xffffffe8
    3124:	str	r3, [fp, #-28]	; 0xffffffe4
    3128:	ldr	r3, [fp, #-16]
    312c:	ldr	r2, [r3, #152]	; 0x98
    3130:	ldr	r3, [fp, #-16]
    3134:	ldrb	r3, [r3, #500]	; 0x1f4
    3138:	cmp	r3, #0
    313c:	moveq	r3, #1
    3140:	movne	r3, #0
    3144:	uxtb	r3, r3
    3148:	str	r3, [sp, #8]
    314c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3150:	str	r3, [sp, #4]
    3154:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3158:	str	r3, [sp]
    315c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3160:	mov	r1, #1
    3164:	ldr	r0, [fp, #-16]
    3168:	bl	31a8 <doContent>
    316c:	str	r0, [fp, #-8]
    3170:	ldr	r3, [fp, #-8]
    3174:	cmp	r3, #0
    3178:	bne	3198 <externalEntityContentProcessor+0x8c>
    317c:	ldr	r0, [fp, #-16]
    3180:	bl	2b78 <storeRawNames>
    3184:	mov	r3, r0
    3188:	cmp	r3, #0
    318c:	bne	3198 <externalEntityContentProcessor+0x8c>
    3190:	mov	r3, #1
    3194:	b	319c <externalEntityContentProcessor+0x90>
    3198:	ldr	r3, [fp, #-8]
    319c:	mov	r0, r3
    31a0:	sub	sp, fp, #4
    31a4:	pop	{fp, pc}

000031a8 <doContent>:
    31a8:	push	{r4, r5, fp, lr}
    31ac:	add	fp, sp, #12
    31b0:	sub	sp, sp, #200	; 0xc8
    31b4:	str	r0, [fp, #-192]	; 0xffffff40
    31b8:	str	r1, [fp, #-196]	; 0xffffff3c
    31bc:	str	r2, [fp, #-200]	; 0xffffff38
    31c0:	str	r3, [fp, #-204]	; 0xffffff34
    31c4:	ldr	r3, [fp, #-192]	; 0xffffff40
    31c8:	ldr	r3, [r3, #364]	; 0x16c
    31cc:	str	r3, [fp, #-44]	; 0xffffffd4
    31d0:	ldr	r3, [fp, #-192]	; 0xffffff40
    31d4:	ldr	r2, [r3, #152]	; 0x98
    31d8:	ldr	r3, [fp, #-200]	; 0xffffff38
    31dc:	cmp	r2, r3
    31e0:	bne	3200 <doContent+0x58>
    31e4:	ldr	r3, [fp, #-192]	; 0xffffff40
    31e8:	add	r3, r3, #296	; 0x128
    31ec:	str	r3, [fp, #-16]
    31f0:	ldr	r3, [fp, #-192]	; 0xffffff40
    31f4:	add	r3, r3, #300	; 0x12c
    31f8:	str	r3, [fp, #-20]	; 0xffffffec
    31fc:	b	321c <doContent+0x74>
    3200:	ldr	r3, [fp, #-192]	; 0xffffff40
    3204:	ldr	r3, [r3, #308]	; 0x134
    3208:	str	r3, [fp, #-16]
    320c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3210:	ldr	r3, [r3, #308]	; 0x134
    3214:	add	r3, r3, #4
    3218:	str	r3, [fp, #-20]	; 0xffffffec
    321c:	ldr	r2, [fp, #-204]	; 0xffffff34
    3220:	ldr	r3, [fp, #-16]
    3224:	str	r2, [r3]
    3228:	ldr	r3, [fp, #-204]	; 0xffffff34
    322c:	str	r3, [fp, #-128]	; 0xffffff80
    3230:	ldr	r3, [fp, #-200]	; 0xffffff38
    3234:	ldr	r4, [r3, #4]
    3238:	ldr	r1, [fp, #-204]	; 0xffffff34
    323c:	sub	r3, fp, #128	; 0x80
    3240:	ldr	r2, [fp, #4]
    3244:	ldr	r0, [fp, #-200]	; 0xffffff38
    3248:	blx	r4
    324c:	str	r0, [fp, #-48]	; 0xffffffd0
    3250:	ldr	r2, [fp, #-128]	; 0xffffff80
    3254:	ldr	r3, [fp, #-20]	; 0xffffffec
    3258:	str	r2, [r3]
    325c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3260:	add	r3, r3, #5
    3264:	cmp	r3, #18
    3268:	ldrls	pc, [pc, r3, lsl #2]
    326c:	b	44ac <doContent+0x1304>
    3270:	.word	0x00004200
    3274:	.word	0x00003388
    3278:	.word	0x000032bc
    327c:	.word	0x00003428
    3280:	.word	0x00003400
    3284:	.word	0x000033ec
    3288:	.word	0x000037cc
    328c:	.word	0x000037cc
    3290:	.word	0x00003b04
    3294:	.word	0x00003b04
    3298:	.word	0x00003d58
    329c:	.word	0x00004354
    32a0:	.word	0x000040f4
    32a4:	.word	0x00004154
    32a8:	.word	0x00003450
    32ac:	.word	0x0000404c
    32b0:	.word	0x0000445c
    32b4:	.word	0x000040ec
    32b8:	.word	0x00004484
    32bc:	ldrb	r3, [fp, #12]
    32c0:	cmp	r3, #0
    32c4:	beq	32dc <doContent+0x134>
    32c8:	ldr	r2, [fp, #-204]	; 0xffffff34
    32cc:	ldr	r3, [fp, #8]
    32d0:	str	r2, [r3]
    32d4:	mov	r3, #0
    32d8:	b	4584 <doContent+0x13dc>
    32dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    32e0:	ldr	r2, [fp, #4]
    32e4:	str	r2, [r3]
    32e8:	ldr	r3, [fp, #-192]	; 0xffffff40
    32ec:	ldr	r3, [r3, #68]	; 0x44
    32f0:	cmp	r3, #0
    32f4:	beq	3320 <doContent+0x178>
    32f8:	mov	r3, #10
    32fc:	strb	r3, [fp, #-129]	; 0xffffff7f
    3300:	ldr	r3, [fp, #-192]	; 0xffffff40
    3304:	ldr	r3, [r3, #68]	; 0x44
    3308:	ldr	r2, [fp, #-192]	; 0xffffff40
    330c:	ldr	r0, [r2, #4]
    3310:	sub	r1, fp, #129	; 0x81
    3314:	mov	r2, #1
    3318:	blx	r3
    331c:	b	3344 <doContent+0x19c>
    3320:	ldr	r3, [fp, #-192]	; 0xffffff40
    3324:	ldr	r3, [r3, #88]	; 0x58
    3328:	cmp	r3, #0
    332c:	beq	3344 <doContent+0x19c>
    3330:	ldr	r2, [fp, #-204]	; 0xffffff34
    3334:	ldr	r3, [fp, #4]
    3338:	ldr	r1, [fp, #-200]	; 0xffffff38
    333c:	ldr	r0, [fp, #-192]	; 0xffffff40
    3340:	bl	b7f8 <reportDefault>
    3344:	ldr	r3, [fp, #-196]	; 0xffffff3c
    3348:	cmp	r3, #0
    334c:	bne	3358 <doContent+0x1b0>
    3350:	mov	r3, #3
    3354:	b	4584 <doContent+0x13dc>
    3358:	ldr	r3, [fp, #-192]	; 0xffffff40
    335c:	ldr	r2, [r3, #320]	; 0x140
    3360:	ldr	r3, [fp, #-196]	; 0xffffff3c
    3364:	cmp	r2, r3
    3368:	beq	3374 <doContent+0x1cc>
    336c:	mov	r3, #13
    3370:	b	4584 <doContent+0x13dc>
    3374:	ldr	r3, [fp, #8]
    3378:	ldr	r2, [fp, #4]
    337c:	str	r2, [r3]
    3380:	mov	r3, #0
    3384:	b	4584 <doContent+0x13dc>
    3388:	ldrb	r3, [fp, #12]
    338c:	cmp	r3, #0
    3390:	beq	33a8 <doContent+0x200>
    3394:	ldr	r2, [fp, #-204]	; 0xffffff34
    3398:	ldr	r3, [fp, #8]
    339c:	str	r2, [r3]
    33a0:	mov	r3, #0
    33a4:	b	4584 <doContent+0x13dc>
    33a8:	ldr	r3, [fp, #-196]	; 0xffffff3c
    33ac:	cmp	r3, #0
    33b0:	ble	33e4 <doContent+0x23c>
    33b4:	ldr	r3, [fp, #-192]	; 0xffffff40
    33b8:	ldr	r2, [r3, #320]	; 0x140
    33bc:	ldr	r3, [fp, #-196]	; 0xffffff3c
    33c0:	cmp	r2, r3
    33c4:	beq	33d0 <doContent+0x228>
    33c8:	mov	r3, #13
    33cc:	b	4584 <doContent+0x13dc>
    33d0:	ldr	r2, [fp, #-204]	; 0xffffff34
    33d4:	ldr	r3, [fp, #8]
    33d8:	str	r2, [r3]
    33dc:	mov	r3, #0
    33e0:	b	4584 <doContent+0x13dc>
    33e4:	mov	r3, #3
    33e8:	b	4584 <doContent+0x13dc>
    33ec:	ldr	r2, [fp, #-128]	; 0xffffff80
    33f0:	ldr	r3, [fp, #-16]
    33f4:	str	r2, [r3]
    33f8:	mov	r3, #4
    33fc:	b	4584 <doContent+0x13dc>
    3400:	ldrb	r3, [fp, #12]
    3404:	cmp	r3, #0
    3408:	beq	3420 <doContent+0x278>
    340c:	ldr	r2, [fp, #-204]	; 0xffffff34
    3410:	ldr	r3, [fp, #8]
    3414:	str	r2, [r3]
    3418:	mov	r3, #0
    341c:	b	4584 <doContent+0x13dc>
    3420:	mov	r3, #5
    3424:	b	4584 <doContent+0x13dc>
    3428:	ldrb	r3, [fp, #12]
    342c:	cmp	r3, #0
    3430:	beq	3448 <doContent+0x2a0>
    3434:	ldr	r2, [fp, #-204]	; 0xffffff34
    3438:	ldr	r3, [fp, #8]
    343c:	str	r2, [r3]
    3440:	mov	r3, #0
    3444:	b	4584 <doContent+0x13dc>
    3448:	mov	r3, #6
    344c:	b	4584 <doContent+0x13dc>
    3450:	ldr	r3, [fp, #-200]	; 0xffffff38
    3454:	ldr	r3, [r3, #48]	; 0x30
    3458:	ldr	r2, [fp, #-204]	; 0xffffff34
    345c:	ldr	r1, [fp, #-200]	; 0xffffff38
    3460:	ldr	r1, [r1, #68]	; 0x44
    3464:	add	r0, r2, r1
    3468:	ldr	r1, [fp, #-128]	; 0xffffff80
    346c:	ldr	r2, [fp, #-200]	; 0xffffff38
    3470:	ldr	r2, [r2, #68]	; 0x44
    3474:	rsb	r2, r2, #0
    3478:	add	r2, r1, r2
    347c:	mov	r1, r0
    3480:	ldr	r0, [fp, #-200]	; 0xffffff38
    3484:	blx	r3
    3488:	mov	r3, r0
    348c:	uxtb	r3, r3
    3490:	strb	r3, [fp, #-130]	; 0xffffff7e
    3494:	ldrb	r3, [fp, #-130]	; 0xffffff7e
    3498:	cmp	r3, #0
    349c:	beq	34f8 <doContent+0x350>
    34a0:	ldr	r3, [fp, #-192]	; 0xffffff40
    34a4:	ldr	r3, [r3, #68]	; 0x44
    34a8:	cmp	r3, #0
    34ac:	beq	34d0 <doContent+0x328>
    34b0:	ldr	r3, [fp, #-192]	; 0xffffff40
    34b4:	ldr	r3, [r3, #68]	; 0x44
    34b8:	ldr	r2, [fp, #-192]	; 0xffffff40
    34bc:	ldr	r0, [r2, #4]
    34c0:	sub	r1, fp, #130	; 0x82
    34c4:	mov	r2, #1
    34c8:	blx	r3
    34cc:	b	44d4 <doContent+0x132c>
    34d0:	ldr	r3, [fp, #-192]	; 0xffffff40
    34d4:	ldr	r3, [r3, #88]	; 0x58
    34d8:	cmp	r3, #0
    34dc:	beq	44d4 <doContent+0x132c>
    34e0:	ldr	r2, [fp, #-204]	; 0xffffff34
    34e4:	ldr	r3, [fp, #-128]	; 0xffffff80
    34e8:	ldr	r1, [fp, #-200]	; 0xffffff38
    34ec:	ldr	r0, [fp, #-192]	; 0xffffff40
    34f0:	bl	b7f8 <reportDefault>
    34f4:	b	44d4 <doContent+0x132c>
    34f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    34fc:	add	r0, r3, #80	; 0x50
    3500:	ldr	r3, [fp, #-204]	; 0xffffff34
    3504:	ldr	r2, [fp, #-200]	; 0xffffff38
    3508:	ldr	r2, [r2, #68]	; 0x44
    350c:	add	r1, r3, r2
    3510:	ldr	r2, [fp, #-128]	; 0xffffff80
    3514:	ldr	r3, [fp, #-200]	; 0xffffff38
    3518:	ldr	r3, [r3, #68]	; 0x44
    351c:	rsb	r3, r3, #0
    3520:	add	r3, r2, r3
    3524:	mov	r2, r1
    3528:	ldr	r1, [fp, #-200]	; 0xffffff38
    352c:	bl	e940 <poolStoreString>
    3530:	str	r0, [fp, #-52]	; 0xffffffcc
    3534:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3538:	cmp	r3, #0
    353c:	bne	3548 <doContent+0x3a0>
    3540:	mov	r3, #1
    3544:	b	4584 <doContent+0x13dc>
    3548:	ldr	r1, [fp, #-44]	; 0xffffffd4
    354c:	mov	r3, #0
    3550:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3554:	ldr	r0, [fp, #-192]	; 0xffffff40
    3558:	bl	dbf4 <lookup>
    355c:	str	r0, [fp, #-56]	; 0xffffffc8
    3560:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3564:	ldr	r2, [r3, #96]	; 0x60
    3568:	ldr	r3, [fp, #-44]	; 0xffffffd4
    356c:	str	r2, [r3, #92]	; 0x5c
    3570:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3574:	ldrb	r3, [r3, #129]	; 0x81
    3578:	cmp	r3, #0
    357c:	beq	3590 <doContent+0x3e8>
    3580:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3584:	ldrb	r3, [r3, #130]	; 0x82
    3588:	cmp	r3, #0
    358c:	beq	35bc <doContent+0x414>
    3590:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3594:	cmp	r3, #0
    3598:	bne	35a4 <doContent+0x3fc>
    359c:	mov	r3, #11
    35a0:	b	4584 <doContent+0x13dc>
    35a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    35a8:	ldrb	r3, [r3, #34]	; 0x22
    35ac:	cmp	r3, #0
    35b0:	bne	3620 <doContent+0x478>
    35b4:	mov	r3, #24
    35b8:	b	4584 <doContent+0x13dc>
    35bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    35c0:	cmp	r3, #0
    35c4:	bne	3624 <doContent+0x47c>
    35c8:	ldr	r3, [fp, #-192]	; 0xffffff40
    35cc:	ldr	r3, [r3, #128]	; 0x80
    35d0:	cmp	r3, #0
    35d4:	beq	35f8 <doContent+0x450>
    35d8:	ldr	r3, [fp, #-192]	; 0xffffff40
    35dc:	ldr	r3, [r3, #128]	; 0x80
    35e0:	ldr	r2, [fp, #-192]	; 0xffffff40
    35e4:	ldr	r0, [r2, #4]
    35e8:	mov	r2, #0
    35ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    35f0:	blx	r3
    35f4:	b	44dc <doContent+0x1334>
    35f8:	ldr	r3, [fp, #-192]	; 0xffffff40
    35fc:	ldr	r3, [r3, #88]	; 0x58
    3600:	cmp	r3, #0
    3604:	beq	44dc <doContent+0x1334>
    3608:	ldr	r2, [fp, #-204]	; 0xffffff34
    360c:	ldr	r3, [fp, #-128]	; 0xffffff80
    3610:	ldr	r1, [fp, #-200]	; 0xffffff38
    3614:	ldr	r0, [fp, #-192]	; 0xffffff40
    3618:	bl	b7f8 <reportDefault>
    361c:	b	44dc <doContent+0x1334>
    3620:	nop			; (mov r0, r0)
    3624:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3628:	ldrb	r3, [r3, #32]
    362c:	cmp	r3, #0
    3630:	beq	363c <doContent+0x494>
    3634:	mov	r3, #12
    3638:	b	4584 <doContent+0x13dc>
    363c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3640:	ldr	r3, [r3, #28]
    3644:	cmp	r3, #0
    3648:	beq	3654 <doContent+0x4ac>
    364c:	mov	r3, #15
    3650:	b	4584 <doContent+0x13dc>
    3654:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3658:	ldr	r3, [r3, #4]
    365c:	cmp	r3, #0
    3660:	beq	36f8 <doContent+0x550>
    3664:	ldr	r3, [fp, #-192]	; 0xffffff40
    3668:	ldrb	r3, [r3, #316]	; 0x13c
    366c:	cmp	r3, #0
    3670:	bne	36d0 <doContent+0x528>
    3674:	ldr	r3, [fp, #-192]	; 0xffffff40
    3678:	ldr	r3, [r3, #128]	; 0x80
    367c:	cmp	r3, #0
    3680:	beq	36a8 <doContent+0x500>
    3684:	ldr	r3, [fp, #-192]	; 0xffffff40
    3688:	ldr	r3, [r3, #128]	; 0x80
    368c:	ldr	r2, [fp, #-192]	; 0xffffff40
    3690:	ldr	r0, [r2, #4]
    3694:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3698:	ldr	r1, [r2]
    369c:	mov	r2, #0
    36a0:	blx	r3
    36a4:	b	44e4 <doContent+0x133c>
    36a8:	ldr	r3, [fp, #-192]	; 0xffffff40
    36ac:	ldr	r3, [r3, #88]	; 0x58
    36b0:	cmp	r3, #0
    36b4:	beq	44e4 <doContent+0x133c>
    36b8:	ldr	r2, [fp, #-204]	; 0xffffff34
    36bc:	ldr	r3, [fp, #-128]	; 0xffffff80
    36c0:	ldr	r1, [fp, #-200]	; 0xffffff38
    36c4:	ldr	r0, [fp, #-192]	; 0xffffff40
    36c8:	bl	b7f8 <reportDefault>
    36cc:	b	44e4 <doContent+0x133c>
    36d0:	mov	r2, #0
    36d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    36d8:	ldr	r0, [fp, #-192]	; 0xffffff40
    36dc:	bl	a098 <processInternalEntity>
    36e0:	str	r0, [fp, #-60]	; 0xffffffc4
    36e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    36e8:	cmp	r3, #0
    36ec:	beq	44ec <doContent+0x1344>
    36f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    36f4:	b	4584 <doContent+0x13dc>
    36f8:	ldr	r3, [fp, #-192]	; 0xffffff40
    36fc:	ldr	r3, [r3, #120]	; 0x78
    3700:	cmp	r3, #0
    3704:	beq	37a0 <doContent+0x5f8>
    3708:	ldr	r3, [fp, #-56]	; 0xffffffc8
    370c:	mov	r2, #1
    3710:	strb	r2, [r3, #32]
    3714:	ldr	r0, [fp, #-192]	; 0xffffff40
    3718:	bl	c198 <getContext>
    371c:	str	r0, [fp, #-64]	; 0xffffffc0
    3720:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3724:	mov	r2, #0
    3728:	strb	r2, [r3, #32]
    372c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3730:	cmp	r3, #0
    3734:	bne	3740 <doContent+0x598>
    3738:	mov	r3, #1
    373c:	b	4584 <doContent+0x13dc>
    3740:	ldr	r3, [fp, #-192]	; 0xffffff40
    3744:	ldr	r4, [r3, #120]	; 0x78
    3748:	ldr	r3, [fp, #-192]	; 0xffffff40
    374c:	ldr	r0, [r3, #124]	; 0x7c
    3750:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3754:	ldr	r2, [r3, #20]
    3758:	ldr	r3, [fp, #-56]	; 0xffffffc8
    375c:	ldr	r1, [r3, #16]
    3760:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3764:	ldr	r3, [r3, #24]
    3768:	str	r3, [sp]
    376c:	mov	r3, r1
    3770:	ldr	r1, [fp, #-64]	; 0xffffffc0
    3774:	blx	r4
    3778:	mov	r3, r0
    377c:	cmp	r3, #0
    3780:	bne	378c <doContent+0x5e4>
    3784:	mov	r3, #21
    3788:	b	4584 <doContent+0x13dc>
    378c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3790:	ldr	r2, [r3, #448]	; 0x1c0
    3794:	ldr	r3, [fp, #-192]	; 0xffffff40
    3798:	str	r2, [r3, #444]	; 0x1bc
    379c:	b	44ec <doContent+0x1344>
    37a0:	ldr	r3, [fp, #-192]	; 0xffffff40
    37a4:	ldr	r3, [r3, #88]	; 0x58
    37a8:	cmp	r3, #0
    37ac:	beq	44ec <doContent+0x1344>
    37b0:	ldr	r2, [fp, #-204]	; 0xffffff34
    37b4:	ldr	r3, [fp, #-128]	; 0xffffff80
    37b8:	ldr	r1, [fp, #-200]	; 0xffffff38
    37bc:	ldr	r0, [fp, #-192]	; 0xffffff40
    37c0:	bl	b7f8 <reportDefault>
    37c4:	nop			; (mov r0, r0)
    37c8:	b	44ec <doContent+0x1344>
    37cc:	ldr	r3, [fp, #-192]	; 0xffffff40
    37d0:	ldr	r3, [r3, #376]	; 0x178
    37d4:	cmp	r3, #0
    37d8:	beq	3800 <doContent+0x658>
    37dc:	ldr	r3, [fp, #-192]	; 0xffffff40
    37e0:	ldr	r3, [r3, #376]	; 0x178
    37e4:	str	r3, [fp, #-24]	; 0xffffffe8
    37e8:	ldr	r3, [fp, #-192]	; 0xffffff40
    37ec:	ldr	r3, [r3, #376]	; 0x178
    37f0:	ldr	r2, [r3]
    37f4:	ldr	r3, [fp, #-192]	; 0xffffff40
    37f8:	str	r2, [r3, #376]	; 0x178
    37fc:	b	3880 <doContent+0x6d8>
    3800:	ldr	r3, [fp, #-192]	; 0xffffff40
    3804:	ldr	r3, [r3, #12]
    3808:	mov	r0, #48	; 0x30
    380c:	blx	r3
    3810:	str	r0, [fp, #-24]	; 0xffffffe8
    3814:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3818:	cmp	r3, #0
    381c:	bne	3828 <doContent+0x680>
    3820:	mov	r3, #1
    3824:	b	4584 <doContent+0x13dc>
    3828:	ldr	r3, [fp, #-192]	; 0xffffff40
    382c:	ldr	r3, [r3, #12]
    3830:	mov	r0, #32
    3834:	blx	r3
    3838:	mov	r2, r0
    383c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3840:	str	r2, [r3, #36]	; 0x24
    3844:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3848:	ldr	r3, [r3, #36]	; 0x24
    384c:	cmp	r3, #0
    3850:	bne	386c <doContent+0x6c4>
    3854:	ldr	r3, [fp, #-192]	; 0xffffff40
    3858:	ldr	r3, [r3, #20]
    385c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3860:	blx	r3
    3864:	mov	r3, #1
    3868:	b	4584 <doContent+0x13dc>
    386c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3870:	ldr	r3, [r3, #36]	; 0x24
    3874:	add	r2, r3, #32
    3878:	ldr	r3, [fp, #-24]	; 0xffffffe8
    387c:	str	r2, [r3, #40]	; 0x28
    3880:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3884:	mov	r2, #0
    3888:	str	r2, [r3, #44]	; 0x2c
    388c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3890:	ldr	r2, [r3, #372]	; 0x174
    3894:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3898:	str	r2, [r3]
    389c:	ldr	r3, [fp, #-192]	; 0xffffff40
    38a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    38a4:	str	r2, [r3, #372]	; 0x174
    38a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    38ac:	mov	r2, #0
    38b0:	str	r2, [r3, #16]
    38b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    38b8:	mov	r2, #0
    38bc:	str	r2, [r3, #20]
    38c0:	ldr	r3, [fp, #-204]	; 0xffffff34
    38c4:	ldr	r2, [fp, #-200]	; 0xffffff38
    38c8:	ldr	r2, [r2, #68]	; 0x44
    38cc:	add	r2, r3, r2
    38d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    38d4:	str	r2, [r3, #4]
    38d8:	ldr	r3, [fp, #-200]	; 0xffffff38
    38dc:	ldr	r3, [r3, #32]
    38e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    38e4:	ldr	r2, [r2, #4]
    38e8:	mov	r1, r2
    38ec:	ldr	r0, [fp, #-200]	; 0xffffff38
    38f0:	blx	r3
    38f4:	mov	r2, r0
    38f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    38fc:	str	r2, [r3, #8]
    3900:	ldr	r3, [fp, #-192]	; 0xffffff40
    3904:	ldr	r3, [r3, #320]	; 0x140
    3908:	add	r2, r3, #1
    390c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3910:	str	r2, [r3, #320]	; 0x140
    3914:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3918:	ldr	r3, [r3, #4]
    391c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3920:	ldr	r2, [r2, #8]
    3924:	add	r3, r3, r2
    3928:	str	r3, [fp, #-68]	; 0xffffffbc
    392c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3930:	ldr	r3, [r3, #4]
    3934:	str	r3, [fp, #-140]	; 0xffffff74
    3938:	ldr	r3, [fp, #-24]	; 0xffffffe8
    393c:	ldr	r3, [r3, #36]	; 0x24
    3940:	str	r3, [fp, #-136]	; 0xffffff78
    3944:	ldr	r3, [fp, #-200]	; 0xffffff38
    3948:	ldr	r4, [r3, #60]	; 0x3c
    394c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3950:	ldr	r3, [r3, #40]	; 0x28
    3954:	sub	r3, r3, #1
    3958:	sub	r2, fp, #136	; 0x88
    395c:	sub	r1, fp, #140	; 0x8c
    3960:	str	r3, [sp]
    3964:	mov	r3, r2
    3968:	ldr	r2, [fp, #-68]	; 0xffffffbc
    396c:	ldr	r0, [fp, #-200]	; 0xffffff38
    3970:	blx	r4
    3974:	ldr	r3, [fp, #-136]	; 0xffffff78
    3978:	mov	r2, r3
    397c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3980:	ldr	r3, [r3, #36]	; 0x24
    3984:	sub	r3, r2, r3
    3988:	str	r3, [fp, #-72]	; 0xffffffb8
    398c:	ldr	r2, [fp, #-140]	; 0xffffff74
    3990:	ldr	r3, [fp, #-68]	; 0xffffffbc
    3994:	cmp	r2, r3
    3998:	bne	3a04 <doContent+0x85c>
    399c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    39a4:	str	r2, [r3, #24]
    39a8:	nop			; (mov r0, r0)
    39ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39b0:	ldr	r2, [r3, #36]	; 0x24
    39b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39b8:	str	r2, [r3, #12]
    39bc:	ldr	r3, [fp, #-136]	; 0xffffff78
    39c0:	mov	r2, #0
    39c4:	strb	r2, [r3]
    39c8:	ldr	r2, [fp, #-204]	; 0xffffff34
    39cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39d0:	add	r1, r3, #12
    39d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    39d8:	add	r3, r3, #44	; 0x2c
    39dc:	str	r3, [sp]
    39e0:	mov	r3, r1
    39e4:	ldr	r1, [fp, #-200]	; 0xffffff38
    39e8:	ldr	r0, [fp, #-192]	; 0xffffff40
    39ec:	bl	4594 <storeAtts>
    39f0:	str	r0, [fp, #-84]	; 0xffffffac
    39f4:	ldr	r3, [fp, #-84]	; 0xffffffac
    39f8:	cmp	r3, #0
    39fc:	beq	3a94 <doContent+0x8ec>
    3a00:	b	3a8c <doContent+0x8e4>
    3a04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a08:	ldr	r3, [r3, #40]	; 0x28
    3a0c:	mov	r2, r3
    3a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a14:	ldr	r3, [r3, #36]	; 0x24
    3a18:	sub	r3, r2, r3
    3a1c:	lsl	r3, r3, #1
    3a20:	str	r3, [fp, #-76]	; 0xffffffb4
    3a24:	ldr	r3, [fp, #-192]	; 0xffffff40
    3a28:	ldr	r3, [r3, #16]
    3a2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3a30:	ldr	r2, [r2, #36]	; 0x24
    3a34:	ldr	r1, [fp, #-76]	; 0xffffffb4
    3a38:	mov	r0, r2
    3a3c:	blx	r3
    3a40:	str	r0, [fp, #-80]	; 0xffffffb0
    3a44:	ldr	r3, [fp, #-80]	; 0xffffffb0
    3a48:	cmp	r3, #0
    3a4c:	bne	3a58 <doContent+0x8b0>
    3a50:	mov	r3, #1
    3a54:	b	4584 <doContent+0x13dc>
    3a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a5c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    3a60:	str	r2, [r3, #36]	; 0x24
    3a64:	ldr	r3, [fp, #-76]	; 0xffffffb4
    3a68:	ldr	r2, [fp, #-80]	; 0xffffffb0
    3a6c:	add	r2, r2, r3
    3a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3a74:	str	r2, [r3, #40]	; 0x28
    3a78:	ldr	r3, [fp, #-72]	; 0xffffffb8
    3a7c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    3a80:	add	r3, r2, r3
    3a84:	str	r3, [fp, #-136]	; 0xffffff78
    3a88:	b	3944 <doContent+0x79c>
    3a8c:	ldr	r3, [fp, #-84]	; 0xffffffac
    3a90:	b	4584 <doContent+0x13dc>
    3a94:	ldr	r3, [fp, #-192]	; 0xffffff40
    3a98:	ldr	r3, [r3, #60]	; 0x3c
    3a9c:	cmp	r3, #0
    3aa0:	beq	3acc <doContent+0x924>
    3aa4:	ldr	r3, [fp, #-192]	; 0xffffff40
    3aa8:	ldr	r3, [r3, #60]	; 0x3c
    3aac:	ldr	r2, [fp, #-192]	; 0xffffff40
    3ab0:	ldr	r0, [r2, #4]
    3ab4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3ab8:	ldr	r1, [r2, #12]
    3abc:	ldr	r2, [fp, #-192]	; 0xffffff40
    3ac0:	ldr	r2, [r2, #400]	; 0x190
    3ac4:	blx	r3
    3ac8:	b	3af0 <doContent+0x948>
    3acc:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ad0:	ldr	r3, [r3, #88]	; 0x58
    3ad4:	cmp	r3, #0
    3ad8:	beq	3af0 <doContent+0x948>
    3adc:	ldr	r2, [fp, #-204]	; 0xffffff34
    3ae0:	ldr	r3, [fp, #-128]	; 0xffffff80
    3ae4:	ldr	r1, [fp, #-200]	; 0xffffff38
    3ae8:	ldr	r0, [fp, #-192]	; 0xffffff40
    3aec:	bl	b7f8 <reportDefault>
    3af0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3af4:	add	r3, r3, #432	; 0x1b0
    3af8:	mov	r0, r3
    3afc:	bl	e4b4 <poolClear>
    3b00:	b	4538 <doContent+0x1390>
    3b04:	ldr	r3, [fp, #-204]	; 0xffffff34
    3b08:	ldr	r2, [fp, #-200]	; 0xffffff38
    3b0c:	ldr	r2, [r2, #68]	; 0x44
    3b10:	add	r3, r3, r2
    3b14:	str	r3, [fp, #-88]	; 0xffffffa8
    3b18:	mov	r3, #0
    3b1c:	str	r3, [fp, #-144]	; 0xffffff70
    3b20:	mov	r3, #1
    3b24:	strb	r3, [fp, #-25]	; 0xffffffe7
    3b28:	ldr	r3, [fp, #-192]	; 0xffffff40
    3b2c:	add	r4, r3, #432	; 0x1b0
    3b30:	ldr	r3, [fp, #-200]	; 0xffffff38
    3b34:	ldr	r3, [r3, #32]
    3b38:	ldr	r1, [fp, #-88]	; 0xffffffa8
    3b3c:	ldr	r0, [fp, #-200]	; 0xffffff38
    3b40:	blx	r3
    3b44:	mov	r3, r0
    3b48:	mov	r2, r3
    3b4c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    3b50:	add	r3, r3, r2
    3b54:	ldr	r2, [fp, #-88]	; 0xffffffa8
    3b58:	ldr	r1, [fp, #-200]	; 0xffffff38
    3b5c:	mov	r0, r4
    3b60:	bl	e940 <poolStoreString>
    3b64:	mov	r3, r0
    3b68:	str	r3, [fp, #-168]	; 0xffffff58
    3b6c:	ldr	r3, [fp, #-168]	; 0xffffff58
    3b70:	cmp	r3, #0
    3b74:	bne	3b80 <doContent+0x9d8>
    3b78:	mov	r3, #1
    3b7c:	b	4584 <doContent+0x13dc>
    3b80:	ldr	r3, [fp, #-192]	; 0xffffff40
    3b84:	ldr	r2, [r3, #444]	; 0x1bc
    3b88:	ldr	r3, [fp, #-192]	; 0xffffff40
    3b8c:	str	r2, [r3, #448]	; 0x1c0
    3b90:	ldr	r2, [fp, #-204]	; 0xffffff34
    3b94:	sub	r1, fp, #168	; 0xa8
    3b98:	sub	r3, fp, #144	; 0x90
    3b9c:	str	r3, [sp]
    3ba0:	mov	r3, r1
    3ba4:	ldr	r1, [fp, #-200]	; 0xffffff38
    3ba8:	ldr	r0, [fp, #-192]	; 0xffffff40
    3bac:	bl	4594 <storeAtts>
    3bb0:	str	r0, [fp, #-92]	; 0xffffffa4
    3bb4:	ldr	r3, [fp, #-92]	; 0xffffffa4
    3bb8:	cmp	r3, #0
    3bbc:	beq	3bc8 <doContent+0xa20>
    3bc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    3bc4:	b	4584 <doContent+0x13dc>
    3bc8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3bcc:	ldr	r2, [r3, #444]	; 0x1bc
    3bd0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3bd4:	str	r2, [r3, #448]	; 0x1c0
    3bd8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3bdc:	ldr	r3, [r3, #60]	; 0x3c
    3be0:	cmp	r3, #0
    3be4:	beq	3c10 <doContent+0xa68>
    3be8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3bec:	ldr	r3, [r3, #60]	; 0x3c
    3bf0:	ldr	r2, [fp, #-192]	; 0xffffff40
    3bf4:	ldr	r0, [r2, #4]
    3bf8:	ldr	r1, [fp, #-168]	; 0xffffff58
    3bfc:	ldr	r2, [fp, #-192]	; 0xffffff40
    3c00:	ldr	r2, [r2, #400]	; 0x190
    3c04:	blx	r3
    3c08:	mov	r3, #0
    3c0c:	strb	r3, [fp, #-25]	; 0xffffffe7
    3c10:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c14:	ldr	r3, [r3, #64]	; 0x40
    3c18:	cmp	r3, #0
    3c1c:	beq	3c64 <doContent+0xabc>
    3c20:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c24:	ldr	r3, [r3, #60]	; 0x3c
    3c28:	cmp	r3, #0
    3c2c:	beq	3c40 <doContent+0xa98>
    3c30:	ldr	r3, [fp, #-20]	; 0xffffffec
    3c34:	ldr	r2, [r3]
    3c38:	ldr	r3, [fp, #-16]
    3c3c:	str	r2, [r3]
    3c40:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c44:	ldr	r3, [r3, #64]	; 0x40
    3c48:	ldr	r2, [fp, #-192]	; 0xffffff40
    3c4c:	ldr	r2, [r2, #4]
    3c50:	ldr	r1, [fp, #-168]	; 0xffffff58
    3c54:	mov	r0, r2
    3c58:	blx	r3
    3c5c:	mov	r3, #0
    3c60:	strb	r3, [fp, #-25]	; 0xffffffe7
    3c64:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    3c68:	cmp	r3, #0
    3c6c:	beq	3c94 <doContent+0xaec>
    3c70:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c74:	ldr	r3, [r3, #88]	; 0x58
    3c78:	cmp	r3, #0
    3c7c:	beq	3c94 <doContent+0xaec>
    3c80:	ldr	r2, [fp, #-204]	; 0xffffff34
    3c84:	ldr	r3, [fp, #-128]	; 0xffffff80
    3c88:	ldr	r1, [fp, #-200]	; 0xffffff38
    3c8c:	ldr	r0, [fp, #-192]	; 0xffffff40
    3c90:	bl	b7f8 <reportDefault>
    3c94:	ldr	r3, [fp, #-192]	; 0xffffff40
    3c98:	add	r3, r3, #432	; 0x1b0
    3c9c:	mov	r0, r3
    3ca0:	bl	e4b4 <poolClear>
    3ca4:	b	3d20 <doContent+0xb78>
    3ca8:	ldr	r3, [fp, #-144]	; 0xffffff70
    3cac:	str	r3, [fp, #-96]	; 0xffffffa0
    3cb0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3cb4:	ldr	r3, [r3, #112]	; 0x70
    3cb8:	cmp	r3, #0
    3cbc:	beq	3ce4 <doContent+0xb3c>
    3cc0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3cc4:	ldr	r3, [r3, #112]	; 0x70
    3cc8:	ldr	r2, [fp, #-192]	; 0xffffff40
    3ccc:	ldr	r0, [r2, #4]
    3cd0:	ldr	r2, [fp, #-96]	; 0xffffffa0
    3cd4:	ldr	r2, [r2]
    3cd8:	ldr	r2, [r2]
    3cdc:	mov	r1, r2
    3ce0:	blx	r3
    3ce4:	ldr	r3, [fp, #-144]	; 0xffffff70
    3ce8:	ldr	r3, [r3, #4]
    3cec:	str	r3, [fp, #-144]	; 0xffffff70
    3cf0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3cf4:	ldr	r2, [r3, #384]	; 0x180
    3cf8:	ldr	r3, [fp, #-96]	; 0xffffffa0
    3cfc:	str	r2, [r3, #4]
    3d00:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d04:	ldr	r2, [fp, #-96]	; 0xffffffa0
    3d08:	str	r2, [r3, #384]	; 0x180
    3d0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    3d10:	ldr	r3, [r3]
    3d14:	ldr	r2, [fp, #-96]	; 0xffffffa0
    3d18:	ldr	r2, [r2, #8]
    3d1c:	str	r2, [r3, #4]
    3d20:	ldr	r3, [fp, #-144]	; 0xffffff70
    3d24:	cmp	r3, #0
    3d28:	bne	3ca8 <doContent+0xb00>
    3d2c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d30:	ldr	r3, [r3, #320]	; 0x140
    3d34:	cmp	r3, #0
    3d38:	bne	44f4 <doContent+0x134c>
    3d3c:	ldr	r1, [fp, #-128]	; 0xffffff80
    3d40:	ldr	r3, [fp, #8]
    3d44:	ldr	r2, [fp, #4]
    3d48:	ldr	r0, [fp, #-192]	; 0xffffff40
    3d4c:	bl	9dc8 <epilogProcessor>
    3d50:	mov	r3, r0
    3d54:	b	4584 <doContent+0x13dc>
    3d58:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d5c:	ldr	r2, [r3, #320]	; 0x140
    3d60:	ldr	r3, [fp, #-196]	; 0xffffff3c
    3d64:	cmp	r2, r3
    3d68:	bne	3d74 <doContent+0xbcc>
    3d6c:	mov	r3, #13
    3d70:	b	4584 <doContent+0x13dc>
    3d74:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d78:	ldr	r3, [r3, #372]	; 0x174
    3d7c:	str	r3, [fp, #-100]	; 0xffffff9c
    3d80:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3d84:	ldr	r2, [r3]
    3d88:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d8c:	str	r2, [r3, #372]	; 0x174
    3d90:	ldr	r3, [fp, #-192]	; 0xffffff40
    3d94:	ldr	r2, [r3, #376]	; 0x178
    3d98:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3d9c:	str	r2, [r3]
    3da0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3da4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    3da8:	str	r2, [r3, #376]	; 0x178
    3dac:	ldr	r3, [fp, #-204]	; 0xffffff34
    3db0:	ldr	r2, [fp, #-200]	; 0xffffff38
    3db4:	ldr	r2, [r2, #68]	; 0x44
    3db8:	lsl	r2, r2, #1
    3dbc:	add	r3, r3, r2
    3dc0:	str	r3, [fp, #-104]	; 0xffffff98
    3dc4:	ldr	r3, [fp, #-200]	; 0xffffff38
    3dc8:	ldr	r3, [r3, #32]
    3dcc:	ldr	r1, [fp, #-104]	; 0xffffff98
    3dd0:	ldr	r0, [fp, #-200]	; 0xffffff38
    3dd4:	blx	r3
    3dd8:	str	r0, [fp, #-108]	; 0xffffff94
    3ddc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3de0:	ldr	r2, [r3, #8]
    3de4:	ldr	r3, [fp, #-108]	; 0xffffff94
    3de8:	cmp	r2, r3
    3dec:	bne	3e14 <doContent+0xc6c>
    3df0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3df4:	ldr	r3, [r3, #4]
    3df8:	ldr	r2, [fp, #-108]	; 0xffffff94
    3dfc:	ldr	r1, [fp, #-104]	; 0xffffff98
    3e00:	mov	r0, r3
    3e04:	bl	0 <memcmp>
    3e08:	mov	r3, r0
    3e0c:	cmp	r3, #0
    3e10:	beq	3e28 <doContent+0xc80>
    3e14:	ldr	r3, [fp, #-16]
    3e18:	ldr	r2, [fp, #-104]	; 0xffffff98
    3e1c:	str	r2, [r3]
    3e20:	mov	r3, #7
    3e24:	b	4584 <doContent+0x13dc>
    3e28:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e2c:	ldr	r3, [r3, #320]	; 0x140
    3e30:	sub	r2, r3, #1
    3e34:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e38:	str	r2, [r3, #320]	; 0x140
    3e3c:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e40:	ldr	r3, [r3, #64]	; 0x40
    3e44:	cmp	r3, #0
    3e48:	beq	3f64 <doContent+0xdbc>
    3e4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3e50:	ldr	r3, [r3, #16]
    3e54:	str	r3, [fp, #-32]	; 0xffffffe0
    3e58:	ldr	r3, [fp, #-192]	; 0xffffff40
    3e5c:	ldrb	r3, [r3, #244]	; 0xf4
    3e60:	cmp	r3, #0
    3e64:	beq	3f40 <doContent+0xd98>
    3e68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3e6c:	cmp	r3, #0
    3e70:	beq	3f40 <doContent+0xd98>
    3e74:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3e78:	ldr	r3, [r3, #12]
    3e7c:	ldr	r2, [fp, #-100]	; 0xffffff9c
    3e80:	ldr	r2, [r2, #28]
    3e84:	add	r3, r3, r2
    3e88:	str	r3, [fp, #-40]	; 0xffffffd8
    3e8c:	b	3eb0 <doContent+0xd08>
    3e90:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3e94:	add	r2, r3, #1
    3e98:	str	r2, [fp, #-40]	; 0xffffffd8
    3e9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    3ea0:	add	r1, r2, #1
    3ea4:	str	r1, [fp, #-32]	; 0xffffffe0
    3ea8:	ldrb	r2, [r2]
    3eac:	strb	r2, [r3]
    3eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3eb4:	ldrb	r3, [r3]
    3eb8:	cmp	r3, #0
    3ebc:	bne	3e90 <doContent+0xce8>
    3ec0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3ec4:	ldr	r3, [r3, #20]
    3ec8:	str	r3, [fp, #-36]	; 0xffffffdc
    3ecc:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ed0:	ldrb	r3, [r3, #245]	; 0xf5
    3ed4:	cmp	r3, #0
    3ed8:	beq	3f34 <doContent+0xd8c>
    3edc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3ee0:	cmp	r3, #0
    3ee4:	beq	3f34 <doContent+0xd8c>
    3ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3eec:	add	r2, r3, #1
    3ef0:	str	r2, [fp, #-40]	; 0xffffffd8
    3ef4:	ldr	r2, [fp, #-192]	; 0xffffff40
    3ef8:	ldrb	r2, [r2, #488]	; 0x1e8
    3efc:	strb	r2, [r3]
    3f00:	b	3f24 <doContent+0xd7c>
    3f04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3f08:	add	r2, r3, #1
    3f0c:	str	r2, [fp, #-40]	; 0xffffffd8
    3f10:	ldr	r2, [fp, #-36]	; 0xffffffdc
    3f14:	add	r1, r2, #1
    3f18:	str	r1, [fp, #-36]	; 0xffffffdc
    3f1c:	ldrb	r2, [r2]
    3f20:	strb	r2, [r3]
    3f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3f28:	ldrb	r3, [r3]
    3f2c:	cmp	r3, #0
    3f30:	bne	3f04 <doContent+0xd5c>
    3f34:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3f38:	mov	r2, #0
    3f3c:	strb	r2, [r3]
    3f40:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f44:	ldr	r3, [r3, #64]	; 0x40
    3f48:	ldr	r2, [fp, #-192]	; 0xffffff40
    3f4c:	ldr	r0, [r2, #4]
    3f50:	ldr	r2, [fp, #-100]	; 0xffffff9c
    3f54:	ldr	r2, [r2, #12]
    3f58:	mov	r1, r2
    3f5c:	blx	r3
    3f60:	b	4010 <doContent+0xe68>
    3f64:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f68:	ldr	r3, [r3, #88]	; 0x58
    3f6c:	cmp	r3, #0
    3f70:	beq	4010 <doContent+0xe68>
    3f74:	ldr	r2, [fp, #-204]	; 0xffffff34
    3f78:	ldr	r3, [fp, #-128]	; 0xffffff80
    3f7c:	ldr	r1, [fp, #-200]	; 0xffffff38
    3f80:	ldr	r0, [fp, #-192]	; 0xffffff40
    3f84:	bl	b7f8 <reportDefault>
    3f88:	b	4010 <doContent+0xe68>
    3f8c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3f90:	ldr	r3, [r3, #44]	; 0x2c
    3f94:	str	r3, [fp, #-112]	; 0xffffff90
    3f98:	ldr	r3, [fp, #-192]	; 0xffffff40
    3f9c:	ldr	r3, [r3, #112]	; 0x70
    3fa0:	cmp	r3, #0
    3fa4:	beq	3fcc <doContent+0xe24>
    3fa8:	ldr	r3, [fp, #-192]	; 0xffffff40
    3fac:	ldr	r3, [r3, #112]	; 0x70
    3fb0:	ldr	r2, [fp, #-192]	; 0xffffff40
    3fb4:	ldr	r0, [r2, #4]
    3fb8:	ldr	r2, [fp, #-112]	; 0xffffff90
    3fbc:	ldr	r2, [r2]
    3fc0:	ldr	r2, [r2]
    3fc4:	mov	r1, r2
    3fc8:	blx	r3
    3fcc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3fd0:	ldr	r3, [r3, #44]	; 0x2c
    3fd4:	ldr	r2, [r3, #4]
    3fd8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    3fdc:	str	r2, [r3, #44]	; 0x2c
    3fe0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3fe4:	ldr	r2, [r3, #384]	; 0x180
    3fe8:	ldr	r3, [fp, #-112]	; 0xffffff90
    3fec:	str	r2, [r3, #4]
    3ff0:	ldr	r3, [fp, #-192]	; 0xffffff40
    3ff4:	ldr	r2, [fp, #-112]	; 0xffffff90
    3ff8:	str	r2, [r3, #384]	; 0x180
    3ffc:	ldr	r3, [fp, #-112]	; 0xffffff90
    4000:	ldr	r3, [r3]
    4004:	ldr	r2, [fp, #-112]	; 0xffffff90
    4008:	ldr	r2, [r2, #8]
    400c:	str	r2, [r3, #4]
    4010:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4014:	ldr	r3, [r3, #44]	; 0x2c
    4018:	cmp	r3, #0
    401c:	bne	3f8c <doContent+0xde4>
    4020:	ldr	r3, [fp, #-192]	; 0xffffff40
    4024:	ldr	r3, [r3, #320]	; 0x140
    4028:	cmp	r3, #0
    402c:	bne	44fc <doContent+0x1354>
    4030:	ldr	r1, [fp, #-128]	; 0xffffff80
    4034:	ldr	r3, [fp, #8]
    4038:	ldr	r2, [fp, #4]
    403c:	ldr	r0, [fp, #-192]	; 0xffffff40
    4040:	bl	9dc8 <epilogProcessor>
    4044:	mov	r3, r0
    4048:	b	4584 <doContent+0x13dc>
    404c:	ldr	r3, [fp, #-200]	; 0xffffff38
    4050:	ldr	r3, [r3, #44]	; 0x2c
    4054:	ldr	r2, [fp, #-204]	; 0xffffff34
    4058:	mov	r1, r2
    405c:	ldr	r0, [fp, #-200]	; 0xffffff38
    4060:	blx	r3
    4064:	str	r0, [fp, #-116]	; 0xffffff8c
    4068:	ldr	r3, [fp, #-116]	; 0xffffff8c
    406c:	cmp	r3, #0
    4070:	bge	407c <doContent+0xed4>
    4074:	mov	r3, #14
    4078:	b	4584 <doContent+0x13dc>
    407c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4080:	ldr	r3, [r3, #68]	; 0x44
    4084:	cmp	r3, #0
    4088:	beq	40c4 <doContent+0xf1c>
    408c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4090:	ldr	r4, [r3, #68]	; 0x44
    4094:	ldr	r3, [fp, #-192]	; 0xffffff40
    4098:	ldr	r5, [r3, #4]
    409c:	sub	r3, fp, #172	; 0xac
    40a0:	mov	r1, r3
    40a4:	ldr	r0, [fp, #-116]	; 0xffffff8c
    40a8:	bl	0 <coda_XmlUtf8Encode>
    40ac:	mov	r2, r0
    40b0:	sub	r3, fp, #172	; 0xac
    40b4:	mov	r1, r3
    40b8:	mov	r0, r5
    40bc:	blx	r4
    40c0:	b	4504 <doContent+0x135c>
    40c4:	ldr	r3, [fp, #-192]	; 0xffffff40
    40c8:	ldr	r3, [r3, #88]	; 0x58
    40cc:	cmp	r3, #0
    40d0:	beq	4504 <doContent+0x135c>
    40d4:	ldr	r2, [fp, #-204]	; 0xffffff34
    40d8:	ldr	r3, [fp, #-128]	; 0xffffff80
    40dc:	ldr	r1, [fp, #-200]	; 0xffffff38
    40e0:	ldr	r0, [fp, #-192]	; 0xffffff40
    40e4:	bl	b7f8 <reportDefault>
    40e8:	b	4504 <doContent+0x135c>
    40ec:	mov	r3, #17
    40f0:	b	4584 <doContent+0x13dc>
    40f4:	ldr	r3, [fp, #-192]	; 0xffffff40
    40f8:	ldr	r3, [r3, #68]	; 0x44
    40fc:	cmp	r3, #0
    4100:	beq	412c <doContent+0xf84>
    4104:	mov	r3, #10
    4108:	strb	r3, [fp, #-173]	; 0xffffff53
    410c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4110:	ldr	r3, [r3, #68]	; 0x44
    4114:	ldr	r2, [fp, #-192]	; 0xffffff40
    4118:	ldr	r0, [r2, #4]
    411c:	sub	r1, fp, #173	; 0xad
    4120:	mov	r2, #1
    4124:	blx	r3
    4128:	b	450c <doContent+0x1364>
    412c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4130:	ldr	r3, [r3, #88]	; 0x58
    4134:	cmp	r3, #0
    4138:	beq	450c <doContent+0x1364>
    413c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4140:	ldr	r3, [fp, #-128]	; 0xffffff80
    4144:	ldr	r1, [fp, #-200]	; 0xffffff38
    4148:	ldr	r0, [fp, #-192]	; 0xffffff40
    414c:	bl	b7f8 <reportDefault>
    4150:	b	450c <doContent+0x1364>
    4154:	ldr	r3, [fp, #-192]	; 0xffffff40
    4158:	ldr	r3, [r3, #80]	; 0x50
    415c:	cmp	r3, #0
    4160:	beq	4180 <doContent+0xfd8>
    4164:	ldr	r3, [fp, #-192]	; 0xffffff40
    4168:	ldr	r3, [r3, #80]	; 0x50
    416c:	ldr	r2, [fp, #-192]	; 0xffffff40
    4170:	ldr	r2, [r2, #4]
    4174:	mov	r0, r2
    4178:	blx	r3
    417c:	b	41a4 <doContent+0xffc>
    4180:	ldr	r3, [fp, #-192]	; 0xffffff40
    4184:	ldr	r3, [r3, #88]	; 0x58
    4188:	cmp	r3, #0
    418c:	beq	41a4 <doContent+0xffc>
    4190:	ldr	r2, [fp, #-204]	; 0xffffff34
    4194:	ldr	r3, [fp, #-128]	; 0xffffff80
    4198:	ldr	r1, [fp, #-200]	; 0xffffff38
    419c:	ldr	r0, [fp, #-192]	; 0xffffff40
    41a0:	bl	b7f8 <reportDefault>
    41a4:	sub	r2, fp, #128	; 0x80
    41a8:	ldrb	r3, [fp, #12]
    41ac:	str	r3, [sp, #4]
    41b0:	ldr	r3, [fp, #8]
    41b4:	str	r3, [sp]
    41b8:	ldr	r3, [fp, #4]
    41bc:	ldr	r1, [fp, #-200]	; 0xffffff38
    41c0:	ldr	r0, [fp, #-192]	; 0xffffff40
    41c4:	bl	5ea0 <doCdataSection>
    41c8:	str	r0, [fp, #-120]	; 0xffffff88
    41cc:	ldr	r3, [fp, #-120]	; 0xffffff88
    41d0:	cmp	r3, #0
    41d4:	beq	41e0 <doContent+0x1038>
    41d8:	ldr	r3, [fp, #-120]	; 0xffffff88
    41dc:	b	4584 <doContent+0x13dc>
    41e0:	ldr	r3, [fp, #-128]	; 0xffffff80
    41e4:	cmp	r3, #0
    41e8:	bne	4514 <doContent+0x136c>
    41ec:	ldr	r3, [fp, #-192]	; 0xffffff40
    41f0:	ldr	r2, [pc, #920]	; 4590 <doContent+0x13e8>
    41f4:	str	r2, [r3, #288]	; 0x120
    41f8:	ldr	r3, [fp, #-120]	; 0xffffff88
    41fc:	b	4584 <doContent+0x13dc>
    4200:	ldrb	r3, [fp, #12]
    4204:	cmp	r3, #0
    4208:	beq	4220 <doContent+0x1078>
    420c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4210:	ldr	r3, [fp, #8]
    4214:	str	r2, [r3]
    4218:	mov	r3, #0
    421c:	b	4584 <doContent+0x13dc>
    4220:	ldr	r3, [fp, #-192]	; 0xffffff40
    4224:	ldr	r3, [r3, #68]	; 0x44
    4228:	cmp	r3, #0
    422c:	beq	42d4 <doContent+0x112c>
    4230:	ldr	r3, [fp, #-200]	; 0xffffff38
    4234:	ldrb	r3, [r3, #72]	; 0x48
    4238:	cmp	r3, #0
    423c:	bne	42ac <doContent+0x1104>
    4240:	ldr	r3, [fp, #-192]	; 0xffffff40
    4244:	ldr	r3, [r3, #52]	; 0x34
    4248:	str	r3, [fp, #-180]	; 0xffffff4c
    424c:	ldr	r3, [fp, #-200]	; 0xffffff38
    4250:	ldr	r4, [r3, #60]	; 0x3c
    4254:	ldr	r3, [fp, #-192]	; 0xffffff40
    4258:	ldr	r3, [r3, #56]	; 0x38
    425c:	sub	r2, fp, #180	; 0xb4
    4260:	sub	r1, fp, #204	; 0xcc
    4264:	str	r3, [sp]
    4268:	mov	r3, r2
    426c:	ldr	r2, [fp, #4]
    4270:	ldr	r0, [fp, #-200]	; 0xffffff38
    4274:	blx	r4
    4278:	ldr	r3, [fp, #-192]	; 0xffffff40
    427c:	ldr	r3, [r3, #68]	; 0x44
    4280:	ldr	r2, [fp, #-192]	; 0xffffff40
    4284:	ldr	r0, [r2, #4]
    4288:	ldr	r2, [fp, #-192]	; 0xffffff40
    428c:	ldr	r1, [r2, #52]	; 0x34
    4290:	ldr	r2, [fp, #-180]	; 0xffffff4c
    4294:	mov	ip, r2
    4298:	ldr	r2, [fp, #-192]	; 0xffffff40
    429c:	ldr	r2, [r2, #52]	; 0x34
    42a0:	sub	r2, ip, r2
    42a4:	blx	r3
    42a8:	b	42f8 <doContent+0x1150>
    42ac:	ldr	r3, [fp, #-192]	; 0xffffff40
    42b0:	ldr	r3, [r3, #68]	; 0x44
    42b4:	ldr	r2, [fp, #-192]	; 0xffffff40
    42b8:	ldr	r0, [r2, #4]
    42bc:	ldr	r1, [fp, #-204]	; 0xffffff34
    42c0:	ldr	r2, [fp, #4]
    42c4:	ldr	ip, [fp, #-204]	; 0xffffff34
    42c8:	sub	r2, r2, ip
    42cc:	blx	r3
    42d0:	b	42f8 <doContent+0x1150>
    42d4:	ldr	r3, [fp, #-192]	; 0xffffff40
    42d8:	ldr	r3, [r3, #88]	; 0x58
    42dc:	cmp	r3, #0
    42e0:	beq	42f8 <doContent+0x1150>
    42e4:	ldr	r2, [fp, #-204]	; 0xffffff34
    42e8:	ldr	r3, [fp, #4]
    42ec:	ldr	r1, [fp, #-200]	; 0xffffff38
    42f0:	ldr	r0, [fp, #-192]	; 0xffffff40
    42f4:	bl	b7f8 <reportDefault>
    42f8:	ldr	r3, [fp, #-196]	; 0xffffff3c
    42fc:	cmp	r3, #0
    4300:	bne	4318 <doContent+0x1170>
    4304:	ldr	r3, [fp, #-16]
    4308:	ldr	r2, [fp, #4]
    430c:	str	r2, [r3]
    4310:	mov	r3, #3
    4314:	b	4584 <doContent+0x13dc>
    4318:	ldr	r3, [fp, #-192]	; 0xffffff40
    431c:	ldr	r2, [r3, #320]	; 0x140
    4320:	ldr	r3, [fp, #-196]	; 0xffffff3c
    4324:	cmp	r2, r3
    4328:	beq	4340 <doContent+0x1198>
    432c:	ldr	r3, [fp, #-16]
    4330:	ldr	r2, [fp, #4]
    4334:	str	r2, [r3]
    4338:	mov	r3, #13
    433c:	b	4584 <doContent+0x13dc>
    4340:	ldr	r3, [fp, #8]
    4344:	ldr	r2, [fp, #4]
    4348:	str	r2, [r3]
    434c:	mov	r3, #0
    4350:	b	4584 <doContent+0x13dc>
    4354:	ldr	r3, [fp, #-192]	; 0xffffff40
    4358:	ldr	r3, [r3, #68]	; 0x44
    435c:	str	r3, [fp, #-124]	; 0xffffff84
    4360:	ldr	r3, [fp, #-124]	; 0xffffff84
    4364:	cmp	r3, #0
    4368:	beq	4434 <doContent+0x128c>
    436c:	ldr	r3, [fp, #-200]	; 0xffffff38
    4370:	ldrb	r3, [r3, #72]	; 0x48
    4374:	cmp	r3, #0
    4378:	bne	440c <doContent+0x1264>
    437c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4380:	ldr	r3, [r3, #52]	; 0x34
    4384:	str	r3, [fp, #-184]	; 0xffffff48
    4388:	ldr	r3, [fp, #-200]	; 0xffffff38
    438c:	ldr	r4, [r3, #60]	; 0x3c
    4390:	ldr	r2, [fp, #-128]	; 0xffffff80
    4394:	ldr	r3, [fp, #-192]	; 0xffffff40
    4398:	ldr	r3, [r3, #56]	; 0x38
    439c:	sub	r0, fp, #184	; 0xb8
    43a0:	sub	r1, fp, #204	; 0xcc
    43a4:	str	r3, [sp]
    43a8:	mov	r3, r0
    43ac:	ldr	r0, [fp, #-200]	; 0xffffff38
    43b0:	blx	r4
    43b4:	ldr	r2, [fp, #-204]	; 0xffffff34
    43b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    43bc:	str	r2, [r3]
    43c0:	ldr	r3, [fp, #-192]	; 0xffffff40
    43c4:	ldr	r0, [r3, #4]
    43c8:	ldr	r3, [fp, #-192]	; 0xffffff40
    43cc:	ldr	r1, [r3, #52]	; 0x34
    43d0:	ldr	r3, [fp, #-184]	; 0xffffff48
    43d4:	mov	r2, r3
    43d8:	ldr	r3, [fp, #-192]	; 0xffffff40
    43dc:	ldr	r3, [r3, #52]	; 0x34
    43e0:	sub	r2, r2, r3
    43e4:	ldr	r3, [fp, #-124]	; 0xffffff84
    43e8:	blx	r3
    43ec:	ldr	r2, [fp, #-204]	; 0xffffff34
    43f0:	ldr	r3, [fp, #-128]	; 0xffffff80
    43f4:	cmp	r2, r3
    43f8:	beq	451c <doContent+0x1374>
    43fc:	ldr	r2, [fp, #-204]	; 0xffffff34
    4400:	ldr	r3, [fp, #-16]
    4404:	str	r2, [r3]
    4408:	b	437c <doContent+0x11d4>
    440c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4410:	ldr	r0, [r3, #4]
    4414:	ldr	r1, [fp, #-204]	; 0xffffff34
    4418:	ldr	r3, [fp, #-128]	; 0xffffff80
    441c:	mov	r2, r3
    4420:	ldr	r3, [fp, #-204]	; 0xffffff34
    4424:	sub	r2, r2, r3
    4428:	ldr	r3, [fp, #-124]	; 0xffffff84
    442c:	blx	r3
    4430:	b	451c <doContent+0x1374>
    4434:	ldr	r3, [fp, #-192]	; 0xffffff40
    4438:	ldr	r3, [r3, #88]	; 0x58
    443c:	cmp	r3, #0
    4440:	beq	451c <doContent+0x1374>
    4444:	ldr	r2, [fp, #-204]	; 0xffffff34
    4448:	ldr	r3, [fp, #-128]	; 0xffffff80
    444c:	ldr	r1, [fp, #-200]	; 0xffffff38
    4450:	ldr	r0, [fp, #-192]	; 0xffffff40
    4454:	bl	b7f8 <reportDefault>
    4458:	b	451c <doContent+0x1374>
    445c:	ldr	r2, [fp, #-204]	; 0xffffff34
    4460:	ldr	r3, [fp, #-128]	; 0xffffff80
    4464:	ldr	r1, [fp, #-200]	; 0xffffff38
    4468:	ldr	r0, [fp, #-192]	; 0xffffff40
    446c:	bl	b578 <reportProcessingInstruction>
    4470:	mov	r3, r0
    4474:	cmp	r3, #0
    4478:	bne	4524 <doContent+0x137c>
    447c:	mov	r3, #1
    4480:	b	4584 <doContent+0x13dc>
    4484:	ldr	r2, [fp, #-204]	; 0xffffff34
    4488:	ldr	r3, [fp, #-128]	; 0xffffff80
    448c:	ldr	r1, [fp, #-200]	; 0xffffff38
    4490:	ldr	r0, [fp, #-192]	; 0xffffff40
    4494:	bl	b6f8 <reportComment>
    4498:	mov	r3, r0
    449c:	cmp	r3, #0
    44a0:	bne	452c <doContent+0x1384>
    44a4:	mov	r3, #1
    44a8:	b	4584 <doContent+0x13dc>
    44ac:	ldr	r3, [fp, #-192]	; 0xffffff40
    44b0:	ldr	r3, [r3, #88]	; 0x58
    44b4:	cmp	r3, #0
    44b8:	beq	4534 <doContent+0x138c>
    44bc:	ldr	r2, [fp, #-204]	; 0xffffff34
    44c0:	ldr	r3, [fp, #-128]	; 0xffffff80
    44c4:	ldr	r1, [fp, #-200]	; 0xffffff38
    44c8:	ldr	r0, [fp, #-192]	; 0xffffff40
    44cc:	bl	b7f8 <reportDefault>
    44d0:	b	4534 <doContent+0x138c>
    44d4:	nop			; (mov r0, r0)
    44d8:	b	4538 <doContent+0x1390>
    44dc:	nop			; (mov r0, r0)
    44e0:	b	4538 <doContent+0x1390>
    44e4:	nop			; (mov r0, r0)
    44e8:	b	4538 <doContent+0x1390>
    44ec:	nop			; (mov r0, r0)
    44f0:	b	4538 <doContent+0x1390>
    44f4:	nop			; (mov r0, r0)
    44f8:	b	4538 <doContent+0x1390>
    44fc:	nop			; (mov r0, r0)
    4500:	b	4538 <doContent+0x1390>
    4504:	nop			; (mov r0, r0)
    4508:	b	4538 <doContent+0x1390>
    450c:	nop			; (mov r0, r0)
    4510:	b	4538 <doContent+0x1390>
    4514:	nop			; (mov r0, r0)
    4518:	b	4538 <doContent+0x1390>
    451c:	nop			; (mov r0, r0)
    4520:	b	4538 <doContent+0x1390>
    4524:	nop			; (mov r0, r0)
    4528:	b	4538 <doContent+0x1390>
    452c:	nop			; (mov r0, r0)
    4530:	b	4538 <doContent+0x1390>
    4534:	nop			; (mov r0, r0)
    4538:	ldr	r3, [fp, #-128]	; 0xffffff80
    453c:	str	r3, [fp, #-204]	; 0xffffff34
    4540:	ldr	r2, [fp, #-204]	; 0xffffff34
    4544:	ldr	r3, [fp, #-16]
    4548:	str	r2, [r3]
    454c:	ldr	r3, [fp, #-192]	; 0xffffff40
    4550:	ldr	r3, [r3, #496]	; 0x1f0
    4554:	cmp	r3, #2
    4558:	beq	4578 <doContent+0x13d0>
    455c:	cmp	r3, #3
    4560:	bne	4580 <doContent+0x13d8>
    4564:	ldr	r2, [fp, #-128]	; 0xffffff80
    4568:	ldr	r3, [fp, #8]
    456c:	str	r2, [r3]
    4570:	mov	r3, #0
    4574:	b	4584 <doContent+0x13dc>
    4578:	mov	r3, #35	; 0x23
    457c:	b	4584 <doContent+0x13dc>
    4580:	b	3228 <doContent+0x80>
    4584:	mov	r0, r3
    4588:	sub	sp, fp, #12
    458c:	pop	{r4, r5, fp, pc}
    4590:	.word	0x00000000

00004594 <storeAtts>:
    4594:	push	{r4, r5, fp, lr}
    4598:	add	fp, sp, #12
    459c:	sub	sp, sp, #176	; 0xb0
    45a0:	str	r0, [fp, #-168]	; 0xffffff58
    45a4:	str	r1, [fp, #-172]	; 0xffffff54
    45a8:	str	r2, [fp, #-176]	; 0xffffff50
    45ac:	str	r3, [fp, #-180]	; 0xffffff4c
    45b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    45b4:	ldr	r3, [r3, #364]	; 0x16c
    45b8:	str	r3, [fp, #-88]	; 0xffffffa8
    45bc:	mov	r3, #0
    45c0:	str	r3, [fp, #-20]	; 0xffffffec
    45c4:	mov	r3, #0
    45c8:	str	r3, [fp, #-32]	; 0xffffffe0
    45cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    45d0:	add	r1, r3, #20
    45d4:	ldr	r3, [fp, #-180]	; 0xffffff4c
    45d8:	ldr	r2, [r3]
    45dc:	mov	r3, #0
    45e0:	ldr	r0, [fp, #-168]	; 0xffffff58
    45e4:	bl	dbf4 <lookup>
    45e8:	str	r0, [fp, #-16]
    45ec:	ldr	r3, [fp, #-16]
    45f0:	cmp	r3, #0
    45f4:	bne	468c <storeAtts+0xf8>
    45f8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    45fc:	add	r2, r3, #80	; 0x50
    4600:	ldr	r3, [fp, #-180]	; 0xffffff4c
    4604:	ldr	r3, [r3]
    4608:	mov	r1, r3
    460c:	mov	r0, r2
    4610:	bl	e6d4 <poolCopyString>
    4614:	str	r0, [fp, #-92]	; 0xffffffa4
    4618:	ldr	r3, [fp, #-92]	; 0xffffffa4
    461c:	cmp	r3, #0
    4620:	bne	462c <storeAtts+0x98>
    4624:	mov	r3, #1
    4628:	b	5878 <storeAtts+0x12e4>
    462c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    4630:	add	r1, r3, #20
    4634:	mov	r3, #24
    4638:	ldr	r2, [fp, #-92]	; 0xffffffa4
    463c:	ldr	r0, [fp, #-168]	; 0xffffff58
    4640:	bl	dbf4 <lookup>
    4644:	str	r0, [fp, #-16]
    4648:	ldr	r3, [fp, #-16]
    464c:	cmp	r3, #0
    4650:	bne	465c <storeAtts+0xc8>
    4654:	mov	r3, #1
    4658:	b	5878 <storeAtts+0x12e4>
    465c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4660:	ldrb	r3, [r3, #244]	; 0xf4
    4664:	cmp	r3, #0
    4668:	beq	468c <storeAtts+0xf8>
    466c:	ldr	r1, [fp, #-16]
    4670:	ldr	r0, [fp, #-168]	; 0xffffff58
    4674:	bl	bb90 <setElementTypePrefix>
    4678:	mov	r3, r0
    467c:	cmp	r3, #0
    4680:	bne	468c <storeAtts+0xf8>
    4684:	mov	r3, #1
    4688:	b	5878 <storeAtts+0x12e4>
    468c:	ldr	r3, [fp, #-16]
    4690:	ldr	r3, [r3, #12]
    4694:	str	r3, [fp, #-96]	; 0xffffffa0
    4698:	ldr	r3, [fp, #-172]	; 0xffffff54
    469c:	ldr	r4, [r3, #40]	; 0x28
    46a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    46a4:	ldr	r2, [r3, #388]	; 0x184
    46a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    46ac:	ldr	r3, [r3, #400]	; 0x190
    46b0:	ldr	r1, [fp, #-176]	; 0xffffff50
    46b4:	ldr	r0, [fp, #-172]	; 0xffffff54
    46b8:	blx	r4
    46bc:	str	r0, [fp, #-100]	; 0xffffff9c
    46c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
    46c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
    46c8:	add	r2, r2, r3
    46cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    46d0:	ldr	r3, [r3, #388]	; 0x184
    46d4:	cmp	r2, r3
    46d8:	ble	4778 <storeAtts+0x1e4>
    46dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    46e0:	ldr	r3, [r3, #388]	; 0x184
    46e4:	str	r3, [fp, #-104]	; 0xffffff98
    46e8:	ldr	r2, [fp, #-100]	; 0xffffff9c
    46ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
    46f0:	add	r3, r2, r3
    46f4:	add	r2, r3, #16
    46f8:	ldr	r3, [fp, #-168]	; 0xffffff58
    46fc:	str	r2, [r3, #388]	; 0x184
    4700:	ldr	r3, [fp, #-168]	; 0xffffff58
    4704:	ldr	r3, [r3, #16]
    4708:	ldr	r2, [fp, #-168]	; 0xffffff58
    470c:	ldr	r0, [r2, #400]	; 0x190
    4710:	ldr	r2, [fp, #-168]	; 0xffffff58
    4714:	ldr	r2, [r2, #388]	; 0x184
    4718:	lsl	r2, r2, #4
    471c:	mov	r1, r2
    4720:	blx	r3
    4724:	str	r0, [fp, #-108]	; 0xffffff94
    4728:	ldr	r3, [fp, #-108]	; 0xffffff94
    472c:	cmp	r3, #0
    4730:	bne	473c <storeAtts+0x1a8>
    4734:	mov	r3, #1
    4738:	b	5878 <storeAtts+0x12e4>
    473c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4740:	ldr	r2, [fp, #-108]	; 0xffffff94
    4744:	str	r2, [r3, #400]	; 0x190
    4748:	ldr	r2, [fp, #-100]	; 0xffffff9c
    474c:	ldr	r3, [fp, #-104]	; 0xffffff98
    4750:	cmp	r2, r3
    4754:	ble	4778 <storeAtts+0x1e4>
    4758:	ldr	r3, [fp, #-172]	; 0xffffff54
    475c:	ldr	r4, [r3, #40]	; 0x28
    4760:	ldr	r3, [fp, #-168]	; 0xffffff58
    4764:	ldr	r3, [r3, #400]	; 0x190
    4768:	ldr	r2, [fp, #-100]	; 0xffffff9c
    476c:	ldr	r1, [fp, #-176]	; 0xffffff50
    4770:	ldr	r0, [fp, #-172]	; 0xffffff54
    4774:	blx	r4
    4778:	ldr	r3, [fp, #-168]	; 0xffffff58
    477c:	ldr	r3, [r3, #400]	; 0x190
    4780:	str	r3, [fp, #-112]	; 0xffffff90
    4784:	mov	r3, #0
    4788:	str	r3, [fp, #-28]	; 0xffffffe4
    478c:	b	4b40 <storeAtts+0x5ac>
    4790:	ldr	r3, [fp, #-168]	; 0xffffff58
    4794:	ldr	r2, [r3, #400]	; 0x190
    4798:	ldr	r3, [fp, #-28]	; 0xffffffe4
    479c:	lsl	r3, r3, #4
    47a0:	add	r3, r2, r3
    47a4:	str	r3, [fp, #-116]	; 0xffffff8c
    47a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
    47ac:	ldr	r5, [r3]
    47b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
    47b4:	ldr	r4, [r3]
    47b8:	ldr	r3, [fp, #-172]	; 0xffffff54
    47bc:	ldr	r3, [r3, #32]
    47c0:	ldr	r2, [fp, #-116]	; 0xffffff8c
    47c4:	ldr	r2, [r2]
    47c8:	mov	r1, r2
    47cc:	ldr	r0, [fp, #-172]	; 0xffffff54
    47d0:	blx	r3
    47d4:	mov	r3, r0
    47d8:	add	r3, r4, r3
    47dc:	mov	r2, r5
    47e0:	ldr	r1, [fp, #-172]	; 0xffffff54
    47e4:	ldr	r0, [fp, #-168]	; 0xffffff58
    47e8:	bl	bd80 <getAttributeId>
    47ec:	str	r0, [fp, #-120]	; 0xffffff88
    47f0:	ldr	r3, [fp, #-120]	; 0xffffff88
    47f4:	cmp	r3, #0
    47f8:	bne	4804 <storeAtts+0x270>
    47fc:	mov	r3, #1
    4800:	b	5878 <storeAtts+0x12e4>
    4804:	ldr	r3, [fp, #-120]	; 0xffffff88
    4808:	ldr	r3, [r3]
    480c:	sub	r3, r3, #1
    4810:	ldrb	r3, [r3]
    4814:	cmp	r3, #0
    4818:	beq	4858 <storeAtts+0x2c4>
    481c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4820:	ldr	r2, [r3, #152]	; 0x98
    4824:	ldr	r3, [fp, #-172]	; 0xffffff54
    4828:	cmp	r2, r3
    482c:	bne	4850 <storeAtts+0x2bc>
    4830:	ldr	r3, [fp, #-168]	; 0xffffff58
    4834:	ldr	r2, [r3, #400]	; 0x190
    4838:	ldr	r3, [fp, #-28]	; 0xffffffe4
    483c:	lsl	r3, r3, #4
    4840:	add	r3, r2, r3
    4844:	ldr	r2, [r3]
    4848:	ldr	r3, [fp, #-168]	; 0xffffff58
    484c:	str	r2, [r3, #296]	; 0x128
    4850:	mov	r3, #8
    4854:	b	5878 <storeAtts+0x12e4>
    4858:	ldr	r3, [fp, #-120]	; 0xffffff88
    485c:	ldr	r3, [r3]
    4860:	sub	r3, r3, #1
    4864:	mov	r2, #1
    4868:	strb	r2, [r3]
    486c:	ldr	r3, [fp, #-20]	; 0xffffffec
    4870:	add	r2, r3, #1
    4874:	str	r2, [fp, #-20]	; 0xffffffec
    4878:	lsl	r3, r3, #2
    487c:	ldr	r2, [fp, #-112]	; 0xffffff90
    4880:	add	r3, r2, r3
    4884:	ldr	r2, [fp, #-120]	; 0xffffff88
    4888:	ldr	r2, [r2]
    488c:	str	r2, [r3]
    4890:	ldr	r3, [fp, #-168]	; 0xffffff58
    4894:	ldr	r2, [r3, #400]	; 0x190
    4898:	ldr	r3, [fp, #-28]	; 0xffffffe4
    489c:	lsl	r3, r3, #4
    48a0:	add	r3, r2, r3
    48a4:	ldrb	r3, [r3, #12]
    48a8:	cmp	r3, #0
    48ac:	bne	49ec <storeAtts+0x458>
    48b0:	mov	r3, #1
    48b4:	strb	r3, [fp, #-41]	; 0xffffffd7
    48b8:	ldr	r3, [fp, #-120]	; 0xffffff88
    48bc:	ldrb	r3, [r3, #8]
    48c0:	cmp	r3, #0
    48c4:	beq	494c <storeAtts+0x3b8>
    48c8:	mov	r3, #0
    48cc:	str	r3, [fp, #-48]	; 0xffffffd0
    48d0:	b	493c <storeAtts+0x3a8>
    48d4:	ldr	r3, [fp, #-16]
    48d8:	ldr	r1, [r3, #20]
    48dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    48e0:	mov	r3, r2
    48e4:	lsl	r3, r3, #1
    48e8:	add	r3, r3, r2
    48ec:	lsl	r3, r3, #2
    48f0:	add	r3, r1, r3
    48f4:	ldr	r2, [r3]
    48f8:	ldr	r3, [fp, #-120]	; 0xffffff88
    48fc:	cmp	r2, r3
    4900:	bne	4930 <storeAtts+0x39c>
    4904:	ldr	r3, [fp, #-16]
    4908:	ldr	r1, [r3, #20]
    490c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    4910:	mov	r3, r2
    4914:	lsl	r3, r3, #1
    4918:	add	r3, r3, r2
    491c:	lsl	r3, r3, #2
    4920:	add	r3, r1, r3
    4924:	ldrb	r3, [r3, #4]
    4928:	strb	r3, [fp, #-41]	; 0xffffffd7
    492c:	b	494c <storeAtts+0x3b8>
    4930:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4934:	add	r3, r3, #1
    4938:	str	r3, [fp, #-48]	; 0xffffffd0
    493c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    4940:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4944:	cmp	r2, r3
    4948:	blt	48d4 <storeAtts+0x340>
    494c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4950:	ldr	r2, [r3, #400]	; 0x190
    4954:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4958:	lsl	r3, r3, #4
    495c:	add	r3, r2, r3
    4960:	ldr	r0, [r3, #4]
    4964:	ldr	r3, [fp, #-168]	; 0xffffff58
    4968:	ldr	r2, [r3, #400]	; 0x190
    496c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4970:	lsl	r3, r3, #4
    4974:	add	r3, r2, r3
    4978:	ldr	r3, [r3, #8]
    497c:	ldr	r2, [fp, #-168]	; 0xffffff58
    4980:	add	r2, r2, #432	; 0x1b0
    4984:	ldrb	r1, [fp, #-41]	; 0xffffffd7
    4988:	str	r2, [sp, #4]
    498c:	str	r3, [sp]
    4990:	mov	r3, r0
    4994:	mov	r2, r1
    4998:	ldr	r1, [fp, #-172]	; 0xffffff54
    499c:	ldr	r0, [fp, #-168]	; 0xffffff58
    49a0:	bl	a5f8 <storeAttributeValue>
    49a4:	str	r0, [fp, #-124]	; 0xffffff84
    49a8:	ldr	r3, [fp, #-124]	; 0xffffff84
    49ac:	cmp	r3, #0
    49b0:	beq	49bc <storeAtts+0x428>
    49b4:	ldr	r3, [fp, #-124]	; 0xffffff84
    49b8:	b	5878 <storeAtts+0x12e4>
    49bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    49c0:	lsl	r3, r3, #2
    49c4:	ldr	r2, [fp, #-112]	; 0xffffff90
    49c8:	add	r3, r2, r3
    49cc:	ldr	r2, [fp, #-168]	; 0xffffff58
    49d0:	ldr	r2, [r2, #448]	; 0x1c0
    49d4:	str	r2, [r3]
    49d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    49dc:	ldr	r2, [r3, #444]	; 0x1bc
    49e0:	ldr	r3, [fp, #-168]	; 0xffffff58
    49e4:	str	r2, [r3, #448]	; 0x1c0
    49e8:	b	4a7c <storeAtts+0x4e8>
    49ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    49f0:	lsl	r3, r3, #2
    49f4:	ldr	r2, [fp, #-112]	; 0xffffff90
    49f8:	add	r4, r2, r3
    49fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    4a00:	add	r0, r3, #432	; 0x1b0
    4a04:	ldr	r3, [fp, #-168]	; 0xffffff58
    4a08:	ldr	r2, [r3, #400]	; 0x190
    4a0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4a10:	lsl	r3, r3, #4
    4a14:	add	r3, r2, r3
    4a18:	ldr	r1, [r3, #4]
    4a1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4a20:	ldr	r2, [r3, #400]	; 0x190
    4a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4a28:	lsl	r3, r3, #4
    4a2c:	add	r3, r2, r3
    4a30:	ldr	r3, [r3, #8]
    4a34:	mov	r2, r1
    4a38:	ldr	r1, [fp, #-172]	; 0xffffff54
    4a3c:	bl	e940 <poolStoreString>
    4a40:	mov	r3, r0
    4a44:	str	r3, [r4]
    4a48:	ldr	r3, [fp, #-20]	; 0xffffffec
    4a4c:	lsl	r3, r3, #2
    4a50:	ldr	r2, [fp, #-112]	; 0xffffff90
    4a54:	add	r3, r2, r3
    4a58:	ldr	r3, [r3]
    4a5c:	cmp	r3, #0
    4a60:	bne	4a6c <storeAtts+0x4d8>
    4a64:	mov	r3, #1
    4a68:	b	5878 <storeAtts+0x12e4>
    4a6c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4a70:	ldr	r2, [r3, #444]	; 0x1bc
    4a74:	ldr	r3, [fp, #-168]	; 0xffffff58
    4a78:	str	r2, [r3, #448]	; 0x1c0
    4a7c:	ldr	r3, [fp, #-120]	; 0xffffff88
    4a80:	ldr	r3, [r3, #4]
    4a84:	cmp	r3, #0
    4a88:	beq	4b28 <storeAtts+0x594>
    4a8c:	ldr	r3, [fp, #-120]	; 0xffffff88
    4a90:	ldrb	r3, [r3, #9]
    4a94:	cmp	r3, #0
    4a98:	beq	4af8 <storeAtts+0x564>
    4a9c:	ldr	r3, [fp, #-120]	; 0xffffff88
    4aa0:	ldr	r1, [r3, #4]
    4aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
    4aa8:	lsl	r3, r3, #2
    4aac:	ldr	r2, [fp, #-112]	; 0xffffff90
    4ab0:	add	r3, r2, r3
    4ab4:	ldr	r2, [r3]
    4ab8:	ldr	r3, [fp, #4]
    4abc:	str	r3, [sp]
    4ac0:	mov	r3, r2
    4ac4:	ldr	r2, [fp, #-120]	; 0xffffff88
    4ac8:	ldr	r0, [fp, #-168]	; 0xffffff58
    4acc:	bl	5888 <addBinding>
    4ad0:	str	r0, [fp, #-128]	; 0xffffff80
    4ad4:	ldr	r3, [fp, #-128]	; 0xffffff80
    4ad8:	cmp	r3, #0
    4adc:	beq	4ae8 <storeAtts+0x554>
    4ae0:	ldr	r3, [fp, #-128]	; 0xffffff80
    4ae4:	b	5878 <storeAtts+0x12e4>
    4ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
    4aec:	sub	r3, r3, #1
    4af0:	str	r3, [fp, #-20]	; 0xffffffec
    4af4:	b	4b34 <storeAtts+0x5a0>
    4af8:	ldr	r3, [fp, #-20]	; 0xffffffec
    4afc:	add	r3, r3, #1
    4b00:	str	r3, [fp, #-20]	; 0xffffffec
    4b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4b08:	add	r3, r3, #1
    4b0c:	str	r3, [fp, #-32]	; 0xffffffe0
    4b10:	ldr	r3, [fp, #-120]	; 0xffffff88
    4b14:	ldr	r3, [r3]
    4b18:	sub	r3, r3, #1
    4b1c:	mov	r2, #2
    4b20:	strb	r2, [r3]
    4b24:	b	4b34 <storeAtts+0x5a0>
    4b28:	ldr	r3, [fp, #-20]	; 0xffffffec
    4b2c:	add	r3, r3, #1
    4b30:	str	r3, [fp, #-20]	; 0xffffffec
    4b34:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4b38:	add	r3, r3, #1
    4b3c:	str	r3, [fp, #-28]	; 0xffffffe4
    4b40:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4b44:	ldr	r3, [fp, #-100]	; 0xffffff9c
    4b48:	cmp	r2, r3
    4b4c:	blt	4790 <storeAtts+0x1fc>
    4b50:	ldr	r3, [fp, #-168]	; 0xffffff58
    4b54:	ldr	r2, [fp, #-20]	; 0xffffffec
    4b58:	str	r2, [r3, #392]	; 0x188
    4b5c:	ldr	r3, [fp, #-16]
    4b60:	ldr	r3, [r3, #8]
    4b64:	cmp	r3, #0
    4b68:	beq	4bf0 <storeAtts+0x65c>
    4b6c:	ldr	r3, [fp, #-16]
    4b70:	ldr	r3, [r3, #8]
    4b74:	ldr	r3, [r3]
    4b78:	sub	r3, r3, #1
    4b7c:	ldrb	r3, [r3]
    4b80:	cmp	r3, #0
    4b84:	beq	4bf0 <storeAtts+0x65c>
    4b88:	mov	r3, #0
    4b8c:	str	r3, [fp, #-28]	; 0xffffffe4
    4b90:	b	4bdc <storeAtts+0x648>
    4b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4b98:	lsl	r3, r3, #2
    4b9c:	ldr	r2, [fp, #-112]	; 0xffffff90
    4ba0:	add	r3, r2, r3
    4ba4:	ldr	r2, [r3]
    4ba8:	ldr	r3, [fp, #-16]
    4bac:	ldr	r3, [r3, #8]
    4bb0:	ldr	r3, [r3]
    4bb4:	cmp	r2, r3
    4bb8:	bne	4bd0 <storeAtts+0x63c>
    4bbc:	ldr	r3, [fp, #-168]	; 0xffffff58
    4bc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4bc4:	str	r2, [r3, #396]	; 0x18c
    4bc8:	nop			; (mov r0, r0)
    4bcc:	b	4bfc <storeAtts+0x668>
    4bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4bd4:	add	r3, r3, #2
    4bd8:	str	r3, [fp, #-28]	; 0xffffffe4
    4bdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4be0:	ldr	r3, [fp, #-20]	; 0xffffffec
    4be4:	cmp	r2, r3
    4be8:	blt	4b94 <storeAtts+0x600>
    4bec:	b	4bfc <storeAtts+0x668>
    4bf0:	ldr	r3, [fp, #-168]	; 0xffffff58
    4bf4:	mvn	r2, #0
    4bf8:	str	r2, [r3, #396]	; 0x18c
    4bfc:	mov	r3, #0
    4c00:	str	r3, [fp, #-28]	; 0xffffffe4
    4c04:	b	4dac <storeAtts+0x818>
    4c08:	ldr	r3, [fp, #-16]
    4c0c:	ldr	r1, [r3, #20]
    4c10:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4c14:	mov	r3, r2
    4c18:	lsl	r3, r3, #1
    4c1c:	add	r3, r3, r2
    4c20:	lsl	r3, r3, #2
    4c24:	add	r3, r1, r3
    4c28:	str	r3, [fp, #-132]	; 0xffffff7c
    4c2c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c30:	ldr	r3, [r3]
    4c34:	ldr	r3, [r3]
    4c38:	sub	r3, r3, #1
    4c3c:	ldrb	r3, [r3]
    4c40:	cmp	r3, #0
    4c44:	bne	4da0 <storeAtts+0x80c>
    4c48:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c4c:	ldr	r3, [r3, #8]
    4c50:	cmp	r3, #0
    4c54:	beq	4da0 <storeAtts+0x80c>
    4c58:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c5c:	ldr	r3, [r3]
    4c60:	ldr	r3, [r3, #4]
    4c64:	cmp	r3, #0
    4c68:	beq	4d3c <storeAtts+0x7a8>
    4c6c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c70:	ldr	r3, [r3]
    4c74:	ldrb	r3, [r3, #9]
    4c78:	cmp	r3, #0
    4c7c:	beq	4cc8 <storeAtts+0x734>
    4c80:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c84:	ldr	r3, [r3]
    4c88:	ldr	r1, [r3, #4]
    4c8c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c90:	ldr	r2, [r3]
    4c94:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4c98:	ldr	r0, [r3, #8]
    4c9c:	ldr	r3, [fp, #4]
    4ca0:	str	r3, [sp]
    4ca4:	mov	r3, r0
    4ca8:	ldr	r0, [fp, #-168]	; 0xffffff58
    4cac:	bl	5888 <addBinding>
    4cb0:	str	r0, [fp, #-136]	; 0xffffff78
    4cb4:	ldr	r3, [fp, #-136]	; 0xffffff78
    4cb8:	cmp	r3, #0
    4cbc:	beq	4da0 <storeAtts+0x80c>
    4cc0:	ldr	r3, [fp, #-136]	; 0xffffff78
    4cc4:	b	5878 <storeAtts+0x12e4>
    4cc8:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4ccc:	ldr	r3, [r3]
    4cd0:	ldr	r3, [r3]
    4cd4:	sub	r3, r3, #1
    4cd8:	mov	r2, #2
    4cdc:	strb	r2, [r3]
    4ce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4ce4:	add	r3, r3, #1
    4ce8:	str	r3, [fp, #-32]	; 0xffffffe0
    4cec:	ldr	r3, [fp, #-20]	; 0xffffffec
    4cf0:	add	r2, r3, #1
    4cf4:	str	r2, [fp, #-20]	; 0xffffffec
    4cf8:	lsl	r3, r3, #2
    4cfc:	ldr	r2, [fp, #-112]	; 0xffffff90
    4d00:	add	r3, r2, r3
    4d04:	ldr	r2, [fp, #-132]	; 0xffffff7c
    4d08:	ldr	r2, [r2]
    4d0c:	ldr	r2, [r2]
    4d10:	str	r2, [r3]
    4d14:	ldr	r3, [fp, #-20]	; 0xffffffec
    4d18:	add	r2, r3, #1
    4d1c:	str	r2, [fp, #-20]	; 0xffffffec
    4d20:	lsl	r3, r3, #2
    4d24:	ldr	r2, [fp, #-112]	; 0xffffff90
    4d28:	add	r3, r2, r3
    4d2c:	ldr	r2, [fp, #-132]	; 0xffffff7c
    4d30:	ldr	r2, [r2, #8]
    4d34:	str	r2, [r3]
    4d38:	b	4da0 <storeAtts+0x80c>
    4d3c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    4d40:	ldr	r3, [r3]
    4d44:	ldr	r3, [r3]
    4d48:	sub	r3, r3, #1
    4d4c:	mov	r2, #1
    4d50:	strb	r2, [r3]
    4d54:	ldr	r3, [fp, #-20]	; 0xffffffec
    4d58:	add	r2, r3, #1
    4d5c:	str	r2, [fp, #-20]	; 0xffffffec
    4d60:	lsl	r3, r3, #2
    4d64:	ldr	r2, [fp, #-112]	; 0xffffff90
    4d68:	add	r3, r2, r3
    4d6c:	ldr	r2, [fp, #-132]	; 0xffffff7c
    4d70:	ldr	r2, [r2]
    4d74:	ldr	r2, [r2]
    4d78:	str	r2, [r3]
    4d7c:	ldr	r3, [fp, #-20]	; 0xffffffec
    4d80:	add	r2, r3, #1
    4d84:	str	r2, [fp, #-20]	; 0xffffffec
    4d88:	lsl	r3, r3, #2
    4d8c:	ldr	r2, [fp, #-112]	; 0xffffff90
    4d90:	add	r3, r2, r3
    4d94:	ldr	r2, [fp, #-132]	; 0xffffff7c
    4d98:	ldr	r2, [r2, #8]
    4d9c:	str	r2, [r3]
    4da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4da4:	add	r3, r3, #1
    4da8:	str	r3, [fp, #-28]	; 0xffffffe4
    4dac:	ldr	r2, [fp, #-28]	; 0xffffffe4
    4db0:	ldr	r3, [fp, #-96]	; 0xffffffa0
    4db4:	cmp	r2, r3
    4db8:	blt	4c08 <storeAtts+0x674>
    4dbc:	ldr	r3, [fp, #-20]	; 0xffffffec
    4dc0:	lsl	r3, r3, #2
    4dc4:	ldr	r2, [fp, #-112]	; 0xffffff90
    4dc8:	add	r3, r2, r3
    4dcc:	mov	r2, #0
    4dd0:	str	r2, [r3]
    4dd4:	mov	r3, #0
    4dd8:	str	r3, [fp, #-28]	; 0xffffffe4
    4ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4de0:	cmp	r3, #0
    4de4:	beq	552c <storeAtts+0xf98>
    4de8:	ldr	r3, [fp, #-168]	; 0xffffff58
    4dec:	ldr	r3, [r3, #408]	; 0x198
    4df0:	str	r3, [fp, #-56]	; 0xffffffc8
    4df4:	ldr	r3, [fp, #-168]	; 0xffffff58
    4df8:	ldrb	r3, [r3, #412]	; 0x19c
    4dfc:	mov	r2, r3
    4e00:	mov	r3, #1
    4e04:	lsl	r3, r3, r2
    4e08:	str	r3, [fp, #-60]	; 0xffffffc4
    4e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4e10:	lsl	r3, r3, #1
    4e14:	ldr	r2, [fp, #-168]	; 0xffffff58
    4e18:	ldrb	r2, [r2, #412]	; 0x19c
    4e1c:	asr	r3, r3, r2
    4e20:	cmp	r3, #0
    4e24:	beq	4ee4 <storeAtts+0x950>
    4e28:	nop			; (mov r0, r0)
    4e2c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4e30:	ldrb	r3, [r3, #412]	; 0x19c
    4e34:	add	r2, r3, #1
    4e38:	uxtb	r1, r2
    4e3c:	ldr	r2, [fp, #-168]	; 0xffffff58
    4e40:	strb	r1, [r2, #412]	; 0x19c
    4e44:	mov	r2, r3
    4e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4e4c:	asr	r3, r3, r2
    4e50:	cmp	r3, #0
    4e54:	bne	4e2c <storeAtts+0x898>
    4e58:	ldr	r3, [fp, #-168]	; 0xffffff58
    4e5c:	ldrb	r3, [r3, #412]	; 0x19c
    4e60:	cmp	r3, #2
    4e64:	bhi	4e74 <storeAtts+0x8e0>
    4e68:	ldr	r3, [fp, #-168]	; 0xffffff58
    4e6c:	mov	r2, #3
    4e70:	strb	r2, [r3, #412]	; 0x19c
    4e74:	ldr	r3, [fp, #-168]	; 0xffffff58
    4e78:	ldrb	r3, [r3, #412]	; 0x19c
    4e7c:	mov	r2, r3
    4e80:	mov	r3, #1
    4e84:	lsl	r3, r3, r2
    4e88:	str	r3, [fp, #-60]	; 0xffffffc4
    4e8c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4e90:	ldr	r4, [r3, #16]
    4e94:	ldr	r3, [fp, #-168]	; 0xffffff58
    4e98:	ldr	r0, [r3, #404]	; 0x194
    4e9c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4ea0:	mov	r3, r2
    4ea4:	lsl	r3, r3, #1
    4ea8:	add	r3, r3, r2
    4eac:	lsl	r3, r3, #2
    4eb0:	mov	r1, r3
    4eb4:	blx	r4
    4eb8:	str	r0, [fp, #-140]	; 0xffffff74
    4ebc:	ldr	r3, [fp, #-140]	; 0xffffff74
    4ec0:	cmp	r3, #0
    4ec4:	bne	4ed0 <storeAtts+0x93c>
    4ec8:	mov	r3, #1
    4ecc:	b	5878 <storeAtts+0x12e4>
    4ed0:	ldr	r3, [fp, #-168]	; 0xffffff58
    4ed4:	ldr	r2, [fp, #-140]	; 0xffffff74
    4ed8:	str	r2, [r3, #404]	; 0x194
    4edc:	mov	r3, #0
    4ee0:	str	r3, [fp, #-56]	; 0xffffffc8
    4ee4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    4ee8:	cmp	r3, #0
    4eec:	bne	4f44 <storeAtts+0x9b0>
    4ef0:	mvn	r3, #0
    4ef4:	str	r3, [fp, #-56]	; 0xffffffc8
    4ef8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4efc:	str	r3, [fp, #-52]	; 0xffffffcc
    4f00:	b	4f38 <storeAtts+0x9a4>
    4f04:	ldr	r3, [fp, #-168]	; 0xffffff58
    4f08:	ldr	r1, [r3, #404]	; 0x194
    4f0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4f10:	sub	r3, r3, #1
    4f14:	str	r3, [fp, #-52]	; 0xffffffcc
    4f18:	ldr	r2, [fp, #-52]	; 0xffffffcc
    4f1c:	mov	r3, r2
    4f20:	lsl	r3, r3, #1
    4f24:	add	r3, r3, r2
    4f28:	lsl	r3, r3, #2
    4f2c:	add	r3, r1, r3
    4f30:	ldr	r2, [fp, #-56]	; 0xffffffc8
    4f34:	str	r2, [r3]
    4f38:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4f3c:	cmp	r3, #0
    4f40:	bne	4f04 <storeAtts+0x970>
    4f44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    4f48:	sub	r3, r3, #1
    4f4c:	str	r3, [fp, #-56]	; 0xffffffc8
    4f50:	ldr	r3, [fp, #-168]	; 0xffffff58
    4f54:	ldr	r2, [fp, #-56]	; 0xffffffc8
    4f58:	str	r2, [r3, #408]	; 0x198
    4f5c:	b	54ec <storeAtts+0xf58>
    4f60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4f64:	lsl	r3, r3, #2
    4f68:	ldr	r2, [fp, #-112]	; 0xffffff90
    4f6c:	add	r3, r2, r3
    4f70:	ldr	r3, [r3]
    4f74:	str	r3, [fp, #-64]	; 0xffffffc0
    4f78:	ldr	r3, [fp, #-64]	; 0xffffffc0
    4f7c:	sub	r3, r3, #1
    4f80:	ldrb	r3, [r3]
    4f84:	cmp	r3, #2
    4f88:	bne	54d0 <storeAtts+0xf3c>
    4f8c:	ldr	r3, [fp, #-168]	; 0xffffff58
    4f90:	ldr	r3, [r3, #512]	; 0x200
    4f94:	str	r3, [fp, #-68]	; 0xffffffbc
    4f98:	ldr	r3, [fp, #-64]	; 0xffffffc0
    4f9c:	sub	r3, r3, #1
    4fa0:	mov	r2, #0
    4fa4:	strb	r2, [r3]
    4fa8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    4fac:	add	r1, r3, #40	; 0x28
    4fb0:	mov	r3, #0
    4fb4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4fb8:	ldr	r0, [fp, #-168]	; 0xffffff58
    4fbc:	bl	dbf4 <lookup>
    4fc0:	str	r0, [fp, #-144]	; 0xffffff70
    4fc4:	ldr	r3, [fp, #-144]	; 0xffffff70
    4fc8:	cmp	r3, #0
    4fcc:	beq	4fe0 <storeAtts+0xa4c>
    4fd0:	ldr	r3, [fp, #-144]	; 0xffffff70
    4fd4:	ldr	r3, [r3, #4]
    4fd8:	cmp	r3, #0
    4fdc:	bne	4fe8 <storeAtts+0xa54>
    4fe0:	mov	r3, #1
    4fe4:	b	5878 <storeAtts+0x12e4>
    4fe8:	ldr	r3, [fp, #-144]	; 0xffffff70
    4fec:	ldr	r3, [r3, #4]
    4ff0:	ldr	r3, [r3, #4]
    4ff4:	str	r3, [fp, #-148]	; 0xffffff6c
    4ff8:	ldr	r3, [fp, #-148]	; 0xffffff6c
    4ffc:	cmp	r3, #0
    5000:	bne	500c <storeAtts+0xa78>
    5004:	mov	r3, #27
    5008:	b	5878 <storeAtts+0x12e4>
    500c:	mov	r3, #0
    5010:	str	r3, [fp, #-52]	; 0xffffffcc
    5014:	b	50c0 <storeAtts+0xb2c>
    5018:	ldr	r3, [fp, #-148]	; 0xffffff6c
    501c:	ldr	r2, [r3, #16]
    5020:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5024:	add	r3, r2, r3
    5028:	ldrb	r3, [r3]
    502c:	strb	r3, [fp, #-149]	; 0xffffff6b
    5030:	ldr	r3, [fp, #-168]	; 0xffffff58
    5034:	ldr	r2, [r3, #444]	; 0x1bc
    5038:	ldr	r3, [fp, #-168]	; 0xffffff58
    503c:	ldr	r3, [r3, #440]	; 0x1b8
    5040:	cmp	r2, r3
    5044:	bne	5064 <storeAtts+0xad0>
    5048:	ldr	r3, [fp, #-168]	; 0xffffff58
    504c:	add	r3, r3, #432	; 0x1b0
    5050:	mov	r0, r3
    5054:	bl	e9e8 <poolGrow>
    5058:	mov	r3, r0
    505c:	cmp	r3, #0
    5060:	beq	5088 <storeAtts+0xaf4>
    5064:	ldr	r3, [fp, #-168]	; 0xffffff58
    5068:	ldr	r3, [r3, #444]	; 0x1bc
    506c:	add	r1, r3, #1
    5070:	ldr	r2, [fp, #-168]	; 0xffffff58
    5074:	str	r1, [r2, #444]	; 0x1bc
    5078:	ldrb	r2, [fp, #-149]	; 0xffffff6b
    507c:	strb	r2, [r3]
    5080:	mov	r3, #0
    5084:	b	508c <storeAtts+0xaf8>
    5088:	mov	r3, #1
    508c:	cmp	r3, #0
    5090:	beq	509c <storeAtts+0xb08>
    5094:	mov	r3, #1
    5098:	b	5878 <storeAtts+0x12e4>
    509c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    50a0:	ldr	r2, [pc, #2012]	; 5884 <storeAtts+0x12f0>
    50a4:	mul	r2, r2, r3
    50a8:	ldrb	r3, [fp, #-149]	; 0xffffff6b
    50ac:	eor	r3, r3, r2
    50b0:	str	r3, [fp, #-68]	; 0xffffffbc
    50b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    50b8:	add	r3, r3, #1
    50bc:	str	r3, [fp, #-52]	; 0xffffffcc
    50c0:	ldr	r3, [fp, #-148]	; 0xffffff6c
    50c4:	ldr	r2, [r3, #20]
    50c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    50cc:	cmp	r2, r3
    50d0:	bgt	5018 <storeAtts+0xa84>
    50d4:	nop			; (mov r0, r0)
    50d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    50dc:	add	r2, r3, #1
    50e0:	str	r2, [fp, #-64]	; 0xffffffc0
    50e4:	ldrb	r3, [r3]
    50e8:	cmp	r3, #58	; 0x3a
    50ec:	bne	50d8 <storeAtts+0xb44>
    50f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    50f4:	ldrb	r3, [r3]
    50f8:	strb	r3, [fp, #-150]	; 0xffffff6a
    50fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    5100:	ldr	r2, [r3, #444]	; 0x1bc
    5104:	ldr	r3, [fp, #-168]	; 0xffffff58
    5108:	ldr	r3, [r3, #440]	; 0x1b8
    510c:	cmp	r2, r3
    5110:	bne	5130 <storeAtts+0xb9c>
    5114:	ldr	r3, [fp, #-168]	; 0xffffff58
    5118:	add	r3, r3, #432	; 0x1b0
    511c:	mov	r0, r3
    5120:	bl	e9e8 <poolGrow>
    5124:	mov	r3, r0
    5128:	cmp	r3, #0
    512c:	beq	5158 <storeAtts+0xbc4>
    5130:	ldr	r3, [fp, #-168]	; 0xffffff58
    5134:	ldr	r3, [r3, #444]	; 0x1bc
    5138:	add	r1, r3, #1
    513c:	ldr	r2, [fp, #-168]	; 0xffffff58
    5140:	str	r1, [r2, #444]	; 0x1bc
    5144:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5148:	ldrb	r2, [r2]
    514c:	strb	r2, [r3]
    5150:	mov	r3, #0
    5154:	b	515c <storeAtts+0xbc8>
    5158:	mov	r3, #1
    515c:	cmp	r3, #0
    5160:	beq	516c <storeAtts+0xbd8>
    5164:	mov	r3, #1
    5168:	b	5878 <storeAtts+0x12e4>
    516c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    5170:	ldr	r2, [pc, #1804]	; 5884 <storeAtts+0x12f0>
    5174:	mul	r2, r2, r3
    5178:	ldrb	r3, [fp, #-150]	; 0xffffff6a
    517c:	eor	r3, r3, r2
    5180:	str	r3, [fp, #-68]	; 0xffffffbc
    5184:	ldr	r3, [fp, #-64]	; 0xffffffc0
    5188:	add	r2, r3, #1
    518c:	str	r2, [fp, #-64]	; 0xffffffc0
    5190:	ldrb	r3, [r3]
    5194:	cmp	r3, #0
    5198:	bne	50f0 <storeAtts+0xb5c>
    519c:	mov	r3, #0
    51a0:	strb	r3, [fp, #-69]	; 0xffffffbb
    51a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    51a8:	sub	r3, r3, #1
    51ac:	str	r3, [fp, #-156]	; 0xffffff64
    51b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
    51b4:	ldr	r3, [fp, #-156]	; 0xffffff64
    51b8:	and	r3, r3, r2
    51bc:	str	r3, [fp, #-52]	; 0xffffffcc
    51c0:	b	530c <storeAtts+0xd78>
    51c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    51c8:	ldr	r1, [r3, #404]	; 0x194
    51cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    51d0:	mov	r3, r2
    51d4:	lsl	r3, r3, #1
    51d8:	add	r3, r3, r2
    51dc:	lsl	r3, r3, #2
    51e0:	add	r3, r1, r3
    51e4:	ldr	r2, [r3, #4]
    51e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    51ec:	cmp	r2, r3
    51f0:	bne	5284 <storeAtts+0xcf0>
    51f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    51f8:	ldr	r3, [r3, #448]	; 0x1c0
    51fc:	str	r3, [fp, #-76]	; 0xffffffb4
    5200:	ldr	r3, [fp, #-168]	; 0xffffff58
    5204:	ldr	r1, [r3, #404]	; 0x194
    5208:	ldr	r2, [fp, #-52]	; 0xffffffcc
    520c:	mov	r3, r2
    5210:	lsl	r3, r3, #1
    5214:	add	r3, r3, r2
    5218:	lsl	r3, r3, #2
    521c:	add	r3, r1, r3
    5220:	ldr	r3, [r3, #8]
    5224:	str	r3, [fp, #-80]	; 0xffffffb0
    5228:	b	5244 <storeAtts+0xcb0>
    522c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    5230:	add	r3, r3, #1
    5234:	str	r3, [fp, #-76]	; 0xffffffb4
    5238:	ldr	r3, [fp, #-80]	; 0xffffffb0
    523c:	add	r3, r3, #1
    5240:	str	r3, [fp, #-80]	; 0xffffffb0
    5244:	ldr	r3, [fp, #-76]	; 0xffffffb4
    5248:	ldrb	r2, [r3]
    524c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    5250:	ldrb	r3, [r3]
    5254:	cmp	r2, r3
    5258:	bne	526c <storeAtts+0xcd8>
    525c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    5260:	ldrb	r3, [r3]
    5264:	cmp	r3, #0
    5268:	bne	522c <storeAtts+0xc98>
    526c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    5270:	ldrb	r3, [r3]
    5274:	cmp	r3, #0
    5278:	bne	5284 <storeAtts+0xcf0>
    527c:	mov	r3, #8
    5280:	b	5878 <storeAtts+0x12e4>
    5284:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    5288:	cmp	r3, #0
    528c:	bne	52d0 <storeAtts+0xd3c>
    5290:	ldr	r3, [fp, #-156]	; 0xffffff64
    5294:	mvn	r2, r3
    5298:	ldr	r3, [fp, #-68]	; 0xffffffbc
    529c:	and	r2, r2, r3
    52a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    52a4:	ldrb	r3, [r3, #412]	; 0x19c
    52a8:	sub	r3, r3, #1
    52ac:	lsr	r3, r2, r3
    52b0:	uxtb	r2, r3
    52b4:	ldr	r3, [fp, #-156]	; 0xffffff64
    52b8:	lsr	r3, r3, #2
    52bc:	uxtb	r3, r3
    52c0:	and	r3, r3, r2
    52c4:	uxtb	r3, r3
    52c8:	orr	r3, r3, #1
    52cc:	strb	r3, [fp, #-69]	; 0xffffffbb
    52d0:	ldrb	r2, [fp, #-69]	; 0xffffffbb
    52d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    52d8:	cmp	r2, r3
    52dc:	ble	52fc <storeAtts+0xd68>
    52e0:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    52e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    52e8:	sub	r3, r2, r3
    52ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
    52f0:	add	r3, r2, r3
    52f4:	str	r3, [fp, #-52]	; 0xffffffcc
    52f8:	b	530c <storeAtts+0xd78>
    52fc:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    5300:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5304:	sub	r3, r2, r3
    5308:	str	r3, [fp, #-52]	; 0xffffffcc
    530c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5310:	ldr	r1, [r3, #404]	; 0x194
    5314:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5318:	mov	r3, r2
    531c:	lsl	r3, r3, #1
    5320:	add	r3, r3, r2
    5324:	lsl	r3, r3, #2
    5328:	add	r3, r1, r3
    532c:	ldr	r2, [r3]
    5330:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5334:	cmp	r2, r3
    5338:	beq	51c4 <storeAtts+0xc30>
    533c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5340:	ldrb	r3, [r3, #245]	; 0xf5
    5344:	cmp	r3, #0
    5348:	beq	53fc <storeAtts+0xe68>
    534c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5350:	ldr	r3, [r3, #444]	; 0x1bc
    5354:	sub	r3, r3, #1
    5358:	ldr	r2, [fp, #-168]	; 0xffffff58
    535c:	ldrb	r2, [r2, #488]	; 0x1e8
    5360:	strb	r2, [r3]
    5364:	ldr	r3, [fp, #-148]	; 0xffffff6c
    5368:	ldr	r3, [r3]
    536c:	ldr	r3, [r3]
    5370:	str	r3, [fp, #-64]	; 0xffffffc0
    5374:	ldr	r3, [fp, #-168]	; 0xffffff58
    5378:	ldr	r2, [r3, #444]	; 0x1bc
    537c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5380:	ldr	r3, [r3, #440]	; 0x1b8
    5384:	cmp	r2, r3
    5388:	bne	53a8 <storeAtts+0xe14>
    538c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5390:	add	r3, r3, #432	; 0x1b0
    5394:	mov	r0, r3
    5398:	bl	e9e8 <poolGrow>
    539c:	mov	r3, r0
    53a0:	cmp	r3, #0
    53a4:	beq	53d0 <storeAtts+0xe3c>
    53a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    53ac:	ldr	r3, [r3, #444]	; 0x1bc
    53b0:	add	r1, r3, #1
    53b4:	ldr	r2, [fp, #-168]	; 0xffffff58
    53b8:	str	r1, [r2, #444]	; 0x1bc
    53bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    53c0:	ldrb	r2, [r2]
    53c4:	strb	r2, [r3]
    53c8:	mov	r3, #0
    53cc:	b	53d4 <storeAtts+0xe40>
    53d0:	mov	r3, #1
    53d4:	cmp	r3, #0
    53d8:	beq	53e4 <storeAtts+0xe50>
    53dc:	mov	r3, #1
    53e0:	b	5878 <storeAtts+0x12e4>
    53e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    53e8:	add	r2, r3, #1
    53ec:	str	r2, [fp, #-64]	; 0xffffffc0
    53f0:	ldrb	r3, [r3]
    53f4:	cmp	r3, #0
    53f8:	bne	5374 <storeAtts+0xde0>
    53fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    5400:	ldr	r3, [r3, #448]	; 0x1c0
    5404:	str	r3, [fp, #-64]	; 0xffffffc0
    5408:	ldr	r3, [fp, #-168]	; 0xffffff58
    540c:	ldr	r2, [r3, #444]	; 0x1bc
    5410:	ldr	r3, [fp, #-168]	; 0xffffff58
    5414:	str	r2, [r3, #448]	; 0x1c0
    5418:	ldr	r3, [fp, #-28]	; 0xffffffe4
    541c:	lsl	r3, r3, #2
    5420:	ldr	r2, [fp, #-112]	; 0xffffff90
    5424:	add	r3, r2, r3
    5428:	ldr	r2, [fp, #-64]	; 0xffffffc0
    542c:	str	r2, [r3]
    5430:	ldr	r3, [fp, #-168]	; 0xffffff58
    5434:	ldr	r1, [r3, #404]	; 0x194
    5438:	ldr	r2, [fp, #-52]	; 0xffffffcc
    543c:	mov	r3, r2
    5440:	lsl	r3, r3, #1
    5444:	add	r3, r3, r2
    5448:	lsl	r3, r3, #2
    544c:	add	r3, r1, r3
    5450:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5454:	str	r2, [r3]
    5458:	ldr	r3, [fp, #-168]	; 0xffffff58
    545c:	ldr	r1, [r3, #404]	; 0x194
    5460:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5464:	mov	r3, r2
    5468:	lsl	r3, r3, #1
    546c:	add	r3, r3, r2
    5470:	lsl	r3, r3, #2
    5474:	add	r3, r1, r3
    5478:	ldr	r2, [fp, #-68]	; 0xffffffbc
    547c:	str	r2, [r3, #4]
    5480:	ldr	r3, [fp, #-168]	; 0xffffff58
    5484:	ldr	r1, [r3, #404]	; 0x194
    5488:	ldr	r2, [fp, #-52]	; 0xffffffcc
    548c:	mov	r3, r2
    5490:	lsl	r3, r3, #1
    5494:	add	r3, r3, r2
    5498:	lsl	r3, r3, #2
    549c:	add	r3, r1, r3
    54a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    54a4:	str	r2, [r3, #8]
    54a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    54ac:	sub	r3, r3, #1
    54b0:	str	r3, [fp, #-32]	; 0xffffffe0
    54b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    54b8:	cmp	r3, #0
    54bc:	bne	54e0 <storeAtts+0xf4c>
    54c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    54c4:	add	r3, r3, #2
    54c8:	str	r3, [fp, #-28]	; 0xffffffe4
    54cc:	b	54fc <storeAtts+0xf68>
    54d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    54d4:	sub	r3, r3, #1
    54d8:	mov	r2, #0
    54dc:	strb	r2, [r3]
    54e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    54e4:	add	r3, r3, #2
    54e8:	str	r3, [fp, #-28]	; 0xffffffe4
    54ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    54f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    54f4:	cmp	r2, r3
    54f8:	blt	4f60 <storeAtts+0x9cc>
    54fc:	b	552c <storeAtts+0xf98>
    5500:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5504:	lsl	r3, r3, #2
    5508:	ldr	r2, [fp, #-112]	; 0xffffff90
    550c:	add	r3, r2, r3
    5510:	ldr	r3, [r3]
    5514:	sub	r3, r3, #1
    5518:	mov	r2, #0
    551c:	strb	r2, [r3]
    5520:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5524:	add	r3, r3, #2
    5528:	str	r3, [fp, #-28]	; 0xffffffe4
    552c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5530:	ldr	r3, [fp, #-20]	; 0xffffffec
    5534:	cmp	r2, r3
    5538:	blt	5500 <storeAtts+0xf6c>
    553c:	ldr	r3, [fp, #4]
    5540:	ldr	r3, [r3]
    5544:	str	r3, [fp, #-36]	; 0xffffffdc
    5548:	b	5570 <storeAtts+0xfdc>
    554c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5550:	ldr	r3, [r3, #12]
    5554:	ldr	r3, [r3]
    5558:	sub	r3, r3, #1
    555c:	mov	r2, #0
    5560:	strb	r2, [r3]
    5564:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5568:	ldr	r3, [r3, #4]
    556c:	str	r3, [fp, #-36]	; 0xffffffdc
    5570:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5574:	cmp	r3, #0
    5578:	bne	554c <storeAtts+0xfb8>
    557c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5580:	ldrb	r3, [r3, #244]	; 0xf4
    5584:	cmp	r3, #0
    5588:	bne	5594 <storeAtts+0x1000>
    558c:	mov	r3, #0
    5590:	b	5878 <storeAtts+0x12e4>
    5594:	ldr	r3, [fp, #-16]
    5598:	ldr	r3, [r3, #4]
    559c:	cmp	r3, #0
    55a0:	beq	55f4 <storeAtts+0x1060>
    55a4:	ldr	r3, [fp, #-16]
    55a8:	ldr	r3, [r3, #4]
    55ac:	ldr	r3, [r3, #4]
    55b0:	str	r3, [fp, #-36]	; 0xffffffdc
    55b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    55b8:	cmp	r3, #0
    55bc:	bne	55c8 <storeAtts+0x1034>
    55c0:	mov	r3, #27
    55c4:	b	5878 <storeAtts+0x12e4>
    55c8:	ldr	r3, [fp, #-180]	; 0xffffff4c
    55cc:	ldr	r3, [r3]
    55d0:	str	r3, [fp, #-40]	; 0xffffffd8
    55d4:	nop			; (mov r0, r0)
    55d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    55dc:	add	r2, r3, #1
    55e0:	str	r2, [fp, #-40]	; 0xffffffd8
    55e4:	ldrb	r3, [r3]
    55e8:	cmp	r3, #58	; 0x3a
    55ec:	bne	55d8 <storeAtts+0x1044>
    55f0:	b	5628 <storeAtts+0x1094>
    55f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    55f8:	ldr	r3, [r3, #156]	; 0x9c
    55fc:	cmp	r3, #0
    5600:	beq	5620 <storeAtts+0x108c>
    5604:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5608:	ldr	r3, [r3, #156]	; 0x9c
    560c:	str	r3, [fp, #-36]	; 0xffffffdc
    5610:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5614:	ldr	r3, [r3]
    5618:	str	r3, [fp, #-40]	; 0xffffffd8
    561c:	b	5628 <storeAtts+0x1094>
    5620:	mov	r3, #0
    5624:	b	5878 <storeAtts+0x12e4>
    5628:	mov	r3, #0
    562c:	str	r3, [fp, #-24]	; 0xffffffe8
    5630:	ldr	r3, [fp, #-168]	; 0xffffff58
    5634:	ldrb	r3, [r3, #245]	; 0xf5
    5638:	cmp	r3, #0
    563c:	beq	5680 <storeAtts+0x10ec>
    5640:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5644:	ldr	r3, [r3]
    5648:	ldr	r3, [r3]
    564c:	cmp	r3, #0
    5650:	beq	5680 <storeAtts+0x10ec>
    5654:	nop			; (mov r0, r0)
    5658:	ldr	r3, [fp, #-36]	; 0xffffffdc
    565c:	ldr	r3, [r3]
    5660:	ldr	r2, [r3]
    5664:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5668:	add	r1, r3, #1
    566c:	str	r1, [fp, #-24]	; 0xffffffe8
    5670:	add	r3, r2, r3
    5674:	ldrb	r3, [r3]
    5678:	cmp	r3, #0
    567c:	bne	5658 <storeAtts+0x10c4>
    5680:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5684:	ldr	r2, [fp, #-40]	; 0xffffffd8
    5688:	str	r2, [r3, #4]
    568c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5690:	ldr	r2, [r3, #20]
    5694:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5698:	str	r2, [r3, #16]
    569c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    56a0:	ldr	r3, [r3]
    56a4:	ldr	r2, [r3]
    56a8:	ldr	r3, [fp, #-180]	; 0xffffff4c
    56ac:	str	r2, [r3, #8]
    56b0:	ldr	r3, [fp, #-180]	; 0xffffff4c
    56b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    56b8:	str	r2, [r3, #20]
    56bc:	mov	r3, #0
    56c0:	str	r3, [fp, #-28]	; 0xffffffe4
    56c4:	nop			; (mov r0, r0)
    56c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    56cc:	add	r2, r3, #1
    56d0:	str	r2, [fp, #-28]	; 0xffffffe4
    56d4:	mov	r2, r3
    56d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    56dc:	add	r3, r3, r2
    56e0:	ldrb	r3, [r3]
    56e4:	cmp	r3, #0
    56e8:	bne	56c8 <storeAtts+0x1134>
    56ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    56f0:	ldr	r2, [r3, #20]
    56f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    56f8:	add	r2, r2, r3
    56fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5700:	add	r3, r2, r3
    5704:	str	r3, [fp, #-100]	; 0xffffff9c
    5708:	ldr	r3, [fp, #-36]	; 0xffffffdc
    570c:	ldr	r2, [r3, #24]
    5710:	ldr	r3, [fp, #-100]	; 0xffffff9c
    5714:	cmp	r2, r3
    5718:	bge	57e8 <storeAtts+0x1254>
    571c:	ldr	r3, [fp, #-168]	; 0xffffff58
    5720:	ldr	r3, [r3, #12]
    5724:	ldr	r2, [fp, #-100]	; 0xffffff9c
    5728:	add	r2, r2, #24
    572c:	mov	r0, r2
    5730:	blx	r3
    5734:	str	r0, [fp, #-160]	; 0xffffff60
    5738:	ldr	r3, [fp, #-160]	; 0xffffff60
    573c:	cmp	r3, #0
    5740:	bne	574c <storeAtts+0x11b8>
    5744:	mov	r3, #1
    5748:	b	5878 <storeAtts+0x12e4>
    574c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    5750:	add	r2, r3, #24
    5754:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5758:	str	r2, [r3, #24]
    575c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5760:	ldr	r1, [r3, #16]
    5764:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5768:	ldr	r3, [r3, #20]
    576c:	mov	r2, r3
    5770:	ldr	r0, [fp, #-160]	; 0xffffff60
    5774:	bl	0 <memcpy>
    5778:	ldr	r3, [fp, #-168]	; 0xffffff58
    577c:	ldr	r3, [r3, #372]	; 0x174
    5780:	str	r3, [fp, #-84]	; 0xffffffac
    5784:	b	57b8 <storeAtts+0x1224>
    5788:	ldr	r3, [fp, #-84]	; 0xffffffac
    578c:	ldr	r2, [r3, #12]
    5790:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5794:	ldr	r3, [r3, #16]
    5798:	cmp	r2, r3
    579c:	bne	57ac <storeAtts+0x1218>
    57a0:	ldr	r3, [fp, #-84]	; 0xffffffac
    57a4:	ldr	r2, [fp, #-160]	; 0xffffff60
    57a8:	str	r2, [r3, #12]
    57ac:	ldr	r3, [fp, #-84]	; 0xffffffac
    57b0:	ldr	r3, [r3]
    57b4:	str	r3, [fp, #-84]	; 0xffffffac
    57b8:	ldr	r3, [fp, #-84]	; 0xffffffac
    57bc:	cmp	r3, #0
    57c0:	bne	5788 <storeAtts+0x11f4>
    57c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    57c8:	ldr	r3, [r3, #20]
    57cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    57d0:	ldr	r2, [r2, #16]
    57d4:	mov	r0, r2
    57d8:	blx	r3
    57dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    57e0:	ldr	r2, [fp, #-160]	; 0xffffff60
    57e4:	str	r2, [r3, #16]
    57e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    57ec:	ldr	r3, [r3, #16]
    57f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    57f4:	ldr	r2, [r2, #20]
    57f8:	add	r3, r3, r2
    57fc:	str	r3, [fp, #-160]	; 0xffffff60
    5800:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5804:	mov	r2, r3
    5808:	ldr	r1, [fp, #-40]	; 0xffffffd8
    580c:	ldr	r0, [fp, #-160]	; 0xffffff60
    5810:	bl	0 <memcpy>
    5814:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5818:	cmp	r3, #0
    581c:	beq	5864 <storeAtts+0x12d0>
    5820:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5824:	sub	r3, r3, #1
    5828:	ldr	r2, [fp, #-160]	; 0xffffff60
    582c:	add	r3, r2, r3
    5830:	str	r3, [fp, #-160]	; 0xffffff60
    5834:	ldr	r3, [fp, #-168]	; 0xffffff58
    5838:	ldrb	r2, [r3, #488]	; 0x1e8
    583c:	ldr	r3, [fp, #-160]	; 0xffffff60
    5840:	strb	r2, [r3]
    5844:	ldr	r3, [fp, #-160]	; 0xffffff60
    5848:	add	r0, r3, #1
    584c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5850:	ldr	r3, [r3]
    5854:	ldr	r3, [r3]
    5858:	ldr	r2, [fp, #-24]	; 0xffffffe8
    585c:	mov	r1, r3
    5860:	bl	0 <memcpy>
    5864:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5868:	ldr	r2, [r3, #16]
    586c:	ldr	r3, [fp, #-180]	; 0xffffff4c
    5870:	str	r2, [r3]
    5874:	mov	r3, #0
    5878:	mov	r0, r3
    587c:	sub	sp, fp, #12
    5880:	pop	{r4, r5, fp, pc}
    5884:	.word	0x000f4243

00005888 <addBinding>:
    5888:	push	{fp, lr}
    588c:	add	fp, sp, #4
    5890:	sub	sp, sp, #32
    5894:	str	r0, [fp, #-24]	; 0xffffffe8
    5898:	str	r1, [fp, #-28]	; 0xffffffe4
    589c:	str	r2, [fp, #-32]	; 0xffffffe0
    58a0:	str	r3, [fp, #-36]	; 0xffffffdc
    58a4:	mov	r3, #0
    58a8:	strb	r3, [fp, #-5]
    58ac:	mov	r3, #1
    58b0:	strb	r3, [fp, #-6]
    58b4:	mov	r3, #1
    58b8:	strb	r3, [fp, #-7]
    58bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    58c0:	ldrb	r3, [r3]
    58c4:	cmp	r3, #0
    58c8:	bne	58e4 <addBinding+0x5c>
    58cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58d0:	ldr	r3, [r3]
    58d4:	cmp	r3, #0
    58d8:	beq	58e4 <addBinding+0x5c>
    58dc:	mov	r3, #28
    58e0:	b	5d90 <addBinding+0x508>
    58e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58e8:	ldr	r3, [r3]
    58ec:	cmp	r3, #0
    58f0:	beq	59a8 <addBinding+0x120>
    58f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    58f8:	ldr	r3, [r3]
    58fc:	ldrb	r3, [r3]
    5900:	cmp	r3, #120	; 0x78
    5904:	bne	59a8 <addBinding+0x120>
    5908:	ldr	r3, [fp, #-28]	; 0xffffffe4
    590c:	ldr	r3, [r3]
    5910:	add	r3, r3, #1
    5914:	ldrb	r3, [r3]
    5918:	cmp	r3, #109	; 0x6d
    591c:	bne	59a8 <addBinding+0x120>
    5920:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5924:	ldr	r3, [r3]
    5928:	add	r3, r3, #2
    592c:	ldrb	r3, [r3]
    5930:	cmp	r3, #108	; 0x6c
    5934:	bne	59a8 <addBinding+0x120>
    5938:	ldr	r3, [fp, #-28]	; 0xffffffe4
    593c:	ldr	r3, [r3]
    5940:	add	r3, r3, #3
    5944:	ldrb	r3, [r3]
    5948:	cmp	r3, #110	; 0x6e
    594c:	bne	5988 <addBinding+0x100>
    5950:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5954:	ldr	r3, [r3]
    5958:	add	r3, r3, #4
    595c:	ldrb	r3, [r3]
    5960:	cmp	r3, #115	; 0x73
    5964:	bne	5988 <addBinding+0x100>
    5968:	ldr	r3, [fp, #-28]	; 0xffffffe4
    596c:	ldr	r3, [r3]
    5970:	add	r3, r3, #5
    5974:	ldrb	r3, [r3]
    5978:	cmp	r3, #0
    597c:	bne	5988 <addBinding+0x100>
    5980:	mov	r3, #39	; 0x27
    5984:	b	5d90 <addBinding+0x508>
    5988:	ldr	r3, [fp, #-28]	; 0xffffffe4
    598c:	ldr	r3, [r3]
    5990:	add	r3, r3, #3
    5994:	ldrb	r3, [r3]
    5998:	cmp	r3, #0
    599c:	bne	59a8 <addBinding+0x120>
    59a0:	mov	r3, #1
    59a4:	strb	r3, [fp, #-5]
    59a8:	mov	r3, #0
    59ac:	str	r3, [fp, #-16]
    59b0:	b	5a6c <addBinding+0x1e4>
    59b4:	ldrb	r3, [fp, #-6]
    59b8:	cmp	r3, #0
    59bc:	beq	5a04 <addBinding+0x17c>
    59c0:	ldr	r3, [pc, #980]	; 5d9c <addBinding+0x514>
    59c4:	ldr	r3, [r3]
    59c8:	ldr	r2, [fp, #-16]
    59cc:	cmp	r2, r3
    59d0:	bgt	59fc <addBinding+0x174>
    59d4:	ldr	r3, [fp, #-16]
    59d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    59dc:	add	r3, r2, r3
    59e0:	ldrb	r2, [r3]
    59e4:	ldr	r1, [pc, #948]	; 5da0 <addBinding+0x518>
    59e8:	ldr	r3, [fp, #-16]
    59ec:	add	r3, r1, r3
    59f0:	ldrb	r3, [r3]
    59f4:	cmp	r2, r3
    59f8:	beq	5a04 <addBinding+0x17c>
    59fc:	mov	r3, #0
    5a00:	strb	r3, [fp, #-6]
    5a04:	ldrb	r3, [fp, #-5]
    5a08:	cmp	r3, #0
    5a0c:	bne	5a60 <addBinding+0x1d8>
    5a10:	ldrb	r3, [fp, #-7]
    5a14:	cmp	r3, #0
    5a18:	beq	5a60 <addBinding+0x1d8>
    5a1c:	ldr	r3, [pc, #896]	; 5da4 <addBinding+0x51c>
    5a20:	ldr	r3, [r3]
    5a24:	ldr	r2, [fp, #-16]
    5a28:	cmp	r2, r3
    5a2c:	bgt	5a58 <addBinding+0x1d0>
    5a30:	ldr	r3, [fp, #-16]
    5a34:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5a38:	add	r3, r2, r3
    5a3c:	ldrb	r2, [r3]
    5a40:	ldr	r1, [pc, #864]	; 5da8 <addBinding+0x520>
    5a44:	ldr	r3, [fp, #-16]
    5a48:	add	r3, r1, r3
    5a4c:	ldrb	r3, [r3]
    5a50:	cmp	r2, r3
    5a54:	beq	5a60 <addBinding+0x1d8>
    5a58:	mov	r3, #0
    5a5c:	strb	r3, [fp, #-7]
    5a60:	ldr	r3, [fp, #-16]
    5a64:	add	r3, r3, #1
    5a68:	str	r3, [fp, #-16]
    5a6c:	ldr	r3, [fp, #-16]
    5a70:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5a74:	add	r3, r2, r3
    5a78:	ldrb	r3, [r3]
    5a7c:	cmp	r3, #0
    5a80:	bne	59b4 <addBinding+0x12c>
    5a84:	ldrb	r3, [fp, #-6]
    5a88:	cmp	r3, #0
    5a8c:	beq	5aac <addBinding+0x224>
    5a90:	ldr	r3, [pc, #772]	; 5d9c <addBinding+0x514>
    5a94:	ldr	r3, [r3]
    5a98:	ldr	r2, [fp, #-16]
    5a9c:	cmp	r2, r3
    5aa0:	bne	5aac <addBinding+0x224>
    5aa4:	mov	r3, #1
    5aa8:	b	5ab0 <addBinding+0x228>
    5aac:	mov	r3, #0
    5ab0:	strb	r3, [fp, #-6]
    5ab4:	ldrb	r3, [fp, #-7]
    5ab8:	cmp	r3, #0
    5abc:	beq	5adc <addBinding+0x254>
    5ac0:	ldr	r3, [pc, #732]	; 5da4 <addBinding+0x51c>
    5ac4:	ldr	r3, [r3]
    5ac8:	ldr	r2, [fp, #-16]
    5acc:	cmp	r2, r3
    5ad0:	bne	5adc <addBinding+0x254>
    5ad4:	mov	r3, #1
    5ad8:	b	5ae0 <addBinding+0x258>
    5adc:	mov	r3, #0
    5ae0:	strb	r3, [fp, #-7]
    5ae4:	ldrb	r2, [fp, #-5]
    5ae8:	ldrb	r3, [fp, #-6]
    5aec:	cmp	r2, r3
    5af0:	beq	5b10 <addBinding+0x288>
    5af4:	ldrb	r3, [fp, #-5]
    5af8:	cmp	r3, #0
    5afc:	beq	5b08 <addBinding+0x280>
    5b00:	mov	r3, #38	; 0x26
    5b04:	b	5d90 <addBinding+0x508>
    5b08:	mov	r3, #40	; 0x28
    5b0c:	b	5d90 <addBinding+0x508>
    5b10:	ldrb	r3, [fp, #-7]
    5b14:	cmp	r3, #0
    5b18:	beq	5b24 <addBinding+0x29c>
    5b1c:	mov	r3, #40	; 0x28
    5b20:	b	5d90 <addBinding+0x508>
    5b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b28:	ldrb	r3, [r3, #488]	; 0x1e8
    5b2c:	cmp	r3, #0
    5b30:	beq	5b40 <addBinding+0x2b8>
    5b34:	ldr	r3, [fp, #-16]
    5b38:	add	r3, r3, #1
    5b3c:	str	r3, [fp, #-16]
    5b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b44:	ldr	r3, [r3, #384]	; 0x180
    5b48:	cmp	r3, #0
    5b4c:	beq	5bd8 <addBinding+0x350>
    5b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b54:	ldr	r3, [r3, #384]	; 0x180
    5b58:	str	r3, [fp, #-12]
    5b5c:	ldr	r3, [fp, #-12]
    5b60:	ldr	r2, [r3, #24]
    5b64:	ldr	r3, [fp, #-16]
    5b68:	cmp	r2, r3
    5b6c:	bge	5bc4 <addBinding+0x33c>
    5b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b74:	ldr	r3, [r3, #16]
    5b78:	ldr	r2, [fp, #-12]
    5b7c:	ldr	r0, [r2, #16]
    5b80:	ldr	r2, [fp, #-16]
    5b84:	add	r2, r2, #24
    5b88:	mov	r1, r2
    5b8c:	blx	r3
    5b90:	str	r0, [fp, #-20]	; 0xffffffec
    5b94:	ldr	r3, [fp, #-20]	; 0xffffffec
    5b98:	cmp	r3, #0
    5b9c:	bne	5ba8 <addBinding+0x320>
    5ba0:	mov	r3, #1
    5ba4:	b	5d90 <addBinding+0x508>
    5ba8:	ldr	r3, [fp, #-12]
    5bac:	ldr	r2, [fp, #-20]	; 0xffffffec
    5bb0:	str	r2, [r3, #16]
    5bb4:	ldr	r3, [fp, #-16]
    5bb8:	add	r2, r3, #24
    5bbc:	ldr	r3, [fp, #-12]
    5bc0:	str	r2, [r3, #24]
    5bc4:	ldr	r3, [fp, #-12]
    5bc8:	ldr	r2, [r3, #4]
    5bcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5bd0:	str	r2, [r3, #384]	; 0x180
    5bd4:	b	5c5c <addBinding+0x3d4>
    5bd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5bdc:	ldr	r3, [r3, #12]
    5be0:	mov	r0, #28
    5be4:	blx	r3
    5be8:	str	r0, [fp, #-12]
    5bec:	ldr	r3, [fp, #-12]
    5bf0:	cmp	r3, #0
    5bf4:	bne	5c00 <addBinding+0x378>
    5bf8:	mov	r3, #1
    5bfc:	b	5d90 <addBinding+0x508>
    5c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c04:	ldr	r3, [r3, #12]
    5c08:	ldr	r2, [fp, #-16]
    5c0c:	add	r2, r2, #24
    5c10:	mov	r0, r2
    5c14:	blx	r3
    5c18:	mov	r2, r0
    5c1c:	ldr	r3, [fp, #-12]
    5c20:	str	r2, [r3, #16]
    5c24:	ldr	r3, [fp, #-12]
    5c28:	ldr	r3, [r3, #16]
    5c2c:	cmp	r3, #0
    5c30:	bne	5c4c <addBinding+0x3c4>
    5c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c38:	ldr	r3, [r3, #20]
    5c3c:	ldr	r0, [fp, #-12]
    5c40:	blx	r3
    5c44:	mov	r3, #1
    5c48:	b	5d90 <addBinding+0x508>
    5c4c:	ldr	r3, [fp, #-16]
    5c50:	add	r2, r3, #24
    5c54:	ldr	r3, [fp, #-12]
    5c58:	str	r2, [r3, #24]
    5c5c:	ldr	r3, [fp, #-12]
    5c60:	ldr	r2, [fp, #-16]
    5c64:	str	r2, [r3, #20]
    5c68:	ldr	r3, [fp, #-12]
    5c6c:	ldr	r3, [r3, #16]
    5c70:	ldr	r2, [fp, #-16]
    5c74:	ldr	r1, [fp, #-36]	; 0xffffffdc
    5c78:	mov	r0, r3
    5c7c:	bl	0 <memcpy>
    5c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c84:	ldrb	r3, [r3, #488]	; 0x1e8
    5c88:	cmp	r3, #0
    5c8c:	beq	5cb0 <addBinding+0x428>
    5c90:	ldr	r3, [fp, #-12]
    5c94:	ldr	r2, [r3, #16]
    5c98:	ldr	r3, [fp, #-16]
    5c9c:	sub	r3, r3, #1
    5ca0:	add	r3, r2, r3
    5ca4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ca8:	ldrb	r2, [r2, #488]	; 0x1e8
    5cac:	strb	r2, [r3]
    5cb0:	ldr	r3, [fp, #-12]
    5cb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5cb8:	str	r2, [r3]
    5cbc:	ldr	r3, [fp, #-12]
    5cc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5cc4:	str	r2, [r3, #12]
    5cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ccc:	ldr	r2, [r3, #4]
    5cd0:	ldr	r3, [fp, #-12]
    5cd4:	str	r2, [r3, #8]
    5cd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    5cdc:	ldrb	r3, [r3]
    5ce0:	cmp	r3, #0
    5ce4:	bne	5d10 <addBinding+0x488>
    5ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5cec:	ldr	r3, [r3, #364]	; 0x16c
    5cf0:	add	r2, r3, #152	; 0x98
    5cf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5cf8:	cmp	r2, r3
    5cfc:	bne	5d10 <addBinding+0x488>
    5d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5d04:	mov	r2, #0
    5d08:	str	r2, [r3, #4]
    5d0c:	b	5d1c <addBinding+0x494>
    5d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5d14:	ldr	r2, [fp, #-12]
    5d18:	str	r2, [r3, #4]
    5d1c:	ldr	r3, [fp, #4]
    5d20:	ldr	r2, [r3]
    5d24:	ldr	r3, [fp, #-12]
    5d28:	str	r2, [r3, #4]
    5d2c:	ldr	r3, [fp, #4]
    5d30:	ldr	r2, [fp, #-12]
    5d34:	str	r2, [r3]
    5d38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5d3c:	cmp	r3, #0
    5d40:	beq	5d8c <addBinding+0x504>
    5d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5d48:	ldr	r3, [r3, #108]	; 0x6c
    5d4c:	cmp	r3, #0
    5d50:	beq	5d8c <addBinding+0x504>
    5d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5d58:	ldr	r3, [r3, #108]	; 0x6c
    5d5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5d60:	ldr	r0, [r2, #4]
    5d64:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5d68:	ldr	r1, [r2]
    5d6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    5d70:	ldr	r2, [r2, #4]
    5d74:	cmp	r2, #0
    5d78:	beq	5d84 <addBinding+0x4fc>
    5d7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5d80:	b	5d88 <addBinding+0x500>
    5d84:	mov	r2, #0
    5d88:	blx	r3
    5d8c:	mov	r3, #0
    5d90:	mov	r0, r3
    5d94:	sub	sp, fp, #4
    5d98:	pop	{fp, pc}
    5d9c:	.word	0x00000734
    5da0:	.word	0x00000738
    5da4:	.word	0x00000760
    5da8:	.word	0x00000764

00005dac <cdataSectionProcessor>:
    5dac:	push	{fp, lr}
    5db0:	add	fp, sp, #4
    5db4:	sub	sp, sp, #32
    5db8:	str	r0, [fp, #-16]
    5dbc:	str	r1, [fp, #-20]	; 0xffffffec
    5dc0:	str	r2, [fp, #-24]	; 0xffffffe8
    5dc4:	str	r3, [fp, #-28]	; 0xffffffe4
    5dc8:	ldr	r3, [fp, #-16]
    5dcc:	ldr	r1, [r3, #152]	; 0x98
    5dd0:	ldr	r3, [fp, #-16]
    5dd4:	ldrb	r3, [r3, #500]	; 0x1f4
    5dd8:	cmp	r3, #0
    5ddc:	moveq	r3, #1
    5de0:	movne	r3, #0
    5de4:	uxtb	r3, r3
    5de8:	sub	r2, fp, #20
    5dec:	str	r3, [sp, #4]
    5df0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5df4:	str	r3, [sp]
    5df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5dfc:	ldr	r0, [fp, #-16]
    5e00:	bl	5ea0 <doCdataSection>
    5e04:	str	r0, [fp, #-8]
    5e08:	ldr	r3, [fp, #-8]
    5e0c:	cmp	r3, #0
    5e10:	beq	5e1c <cdataSectionProcessor+0x70>
    5e14:	ldr	r3, [fp, #-8]
    5e18:	b	5e8c <cdataSectionProcessor+0xe0>
    5e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5e20:	cmp	r3, #0
    5e24:	beq	5e88 <cdataSectionProcessor+0xdc>
    5e28:	ldr	r3, [fp, #-16]
    5e2c:	ldr	r3, [r3, #492]	; 0x1ec
    5e30:	cmp	r3, #0
    5e34:	beq	5e60 <cdataSectionProcessor+0xb4>
    5e38:	ldr	r3, [fp, #-16]
    5e3c:	ldr	r2, [pc, #84]	; 5e98 <cdataSectionProcessor+0xec>
    5e40:	str	r2, [r3, #288]	; 0x120
    5e44:	ldr	r1, [fp, #-20]	; 0xffffffec
    5e48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5e4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e50:	ldr	r0, [fp, #-16]
    5e54:	bl	310c <externalEntityContentProcessor>
    5e58:	mov	r3, r0
    5e5c:	b	5e8c <cdataSectionProcessor+0xe0>
    5e60:	ldr	r3, [fp, #-16]
    5e64:	ldr	r2, [pc, #48]	; 5e9c <cdataSectionProcessor+0xf0>
    5e68:	str	r2, [r3, #288]	; 0x120
    5e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e78:	ldr	r0, [fp, #-16]
    5e7c:	bl	2d28 <contentProcessor>
    5e80:	mov	r3, r0
    5e84:	b	5e8c <cdataSectionProcessor+0xe0>
    5e88:	ldr	r3, [fp, #-8]
    5e8c:	mov	r0, r3
    5e90:	sub	sp, fp, #4
    5e94:	pop	{fp, pc}
	...

00005ea0 <doCdataSection>:
    5ea0:	push	{r4, fp, lr}
    5ea4:	add	fp, sp, #8
    5ea8:	sub	sp, sp, #60	; 0x3c
    5eac:	str	r0, [fp, #-48]	; 0xffffffd0
    5eb0:	str	r1, [fp, #-52]	; 0xffffffcc
    5eb4:	str	r2, [fp, #-56]	; 0xffffffc8
    5eb8:	str	r3, [fp, #-60]	; 0xffffffc4
    5ebc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5ec0:	ldr	r3, [r3]
    5ec4:	str	r3, [fp, #-32]	; 0xffffffe0
    5ec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5ecc:	ldr	r2, [r3, #152]	; 0x98
    5ed0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5ed4:	cmp	r2, r3
    5ed8:	bne	5f04 <doCdataSection+0x64>
    5edc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5ee0:	add	r3, r3, #296	; 0x128
    5ee4:	str	r3, [fp, #-16]
    5ee8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5eec:	ldr	r3, [fp, #-16]
    5ef0:	str	r2, [r3]
    5ef4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5ef8:	add	r3, r3, #300	; 0x12c
    5efc:	str	r3, [fp, #-20]	; 0xffffffec
    5f00:	b	5f20 <doCdataSection+0x80>
    5f04:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5f08:	ldr	r3, [r3, #308]	; 0x134
    5f0c:	str	r3, [fp, #-16]
    5f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5f14:	ldr	r3, [r3, #308]	; 0x134
    5f18:	add	r3, r3, #4
    5f1c:	str	r3, [fp, #-20]	; 0xffffffec
    5f20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5f24:	ldr	r3, [fp, #-16]
    5f28:	str	r2, [r3]
    5f2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5f30:	mov	r2, #0
    5f34:	str	r2, [r3]
    5f38:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5f3c:	ldr	r4, [r3, #8]
    5f40:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5f44:	sub	r3, fp, #36	; 0x24
    5f48:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5f4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    5f50:	blx	r4
    5f54:	str	r0, [fp, #-24]	; 0xffffffe8
    5f58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5f60:	str	r2, [r3]
    5f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5f68:	add	r3, r3, #4
    5f6c:	cmp	r3, #44	; 0x2c
    5f70:	ldrls	pc, [pc, r3, lsl #2]
    5f74:	b	6280 <doCdataSection+0x3e0>
    5f78:	.word	0x00006258
    5f7c:	.word	0x00006280
    5f80:	.word	0x00006230
    5f84:	.word	0x00006258
    5f88:	.word	0x0000621c
    5f8c:	.word	0x00006280
    5f90:	.word	0x00006280
    5f94:	.word	0x00006280
    5f98:	.word	0x00006280
    5f9c:	.word	0x00006280
    5fa0:	.word	0x00006114
    5fa4:	.word	0x000060b4
    5fa8:	.word	0x00006280
    5fac:	.word	0x00006280
    5fb0:	.word	0x00006280
    5fb4:	.word	0x00006280
    5fb8:	.word	0x00006280
    5fbc:	.word	0x00006280
    5fc0:	.word	0x00006280
    5fc4:	.word	0x00006280
    5fc8:	.word	0x00006280
    5fcc:	.word	0x00006280
    5fd0:	.word	0x00006280
    5fd4:	.word	0x00006280
    5fd8:	.word	0x00006280
    5fdc:	.word	0x00006280
    5fe0:	.word	0x00006280
    5fe4:	.word	0x00006280
    5fe8:	.word	0x00006280
    5fec:	.word	0x00006280
    5ff0:	.word	0x00006280
    5ff4:	.word	0x00006280
    5ff8:	.word	0x00006280
    5ffc:	.word	0x00006280
    6000:	.word	0x00006280
    6004:	.word	0x00006280
    6008:	.word	0x00006280
    600c:	.word	0x00006280
    6010:	.word	0x00006280
    6014:	.word	0x00006280
    6018:	.word	0x00006280
    601c:	.word	0x00006280
    6020:	.word	0x00006280
    6024:	.word	0x00006280
    6028:	.word	0x0000602c
    602c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6030:	ldr	r3, [r3, #84]	; 0x54
    6034:	cmp	r3, #0
    6038:	beq	6058 <doCdataSection+0x1b8>
    603c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6040:	ldr	r3, [r3, #84]	; 0x54
    6044:	ldr	r2, [fp, #-48]	; 0xffffffd0
    6048:	ldr	r2, [r2, #4]
    604c:	mov	r0, r2
    6050:	blx	r3
    6054:	b	607c <doCdataSection+0x1dc>
    6058:	ldr	r3, [fp, #-48]	; 0xffffffd0
    605c:	ldr	r3, [r3, #88]	; 0x58
    6060:	cmp	r3, #0
    6064:	beq	607c <doCdataSection+0x1dc>
    6068:	ldr	r2, [fp, #-32]	; 0xffffffe0
    606c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6070:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6074:	ldr	r0, [fp, #-48]	; 0xffffffd0
    6078:	bl	b7f8 <reportDefault>
    607c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6080:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6084:	str	r2, [r3]
    6088:	ldr	r2, [fp, #-36]	; 0xffffffdc
    608c:	ldr	r3, [fp, #4]
    6090:	str	r2, [r3]
    6094:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6098:	ldr	r3, [r3, #496]	; 0x1f0
    609c:	cmp	r3, #2
    60a0:	bne	60ac <doCdataSection+0x20c>
    60a4:	mov	r3, #35	; 0x23
    60a8:	b	62ec <doCdataSection+0x44c>
    60ac:	mov	r3, #0
    60b0:	b	62ec <doCdataSection+0x44c>
    60b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60b8:	ldr	r3, [r3, #68]	; 0x44
    60bc:	cmp	r3, #0
    60c0:	beq	60ec <doCdataSection+0x24c>
    60c4:	mov	r3, #10
    60c8:	strb	r3, [fp, #-37]	; 0xffffffdb
    60cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60d0:	ldr	r3, [r3, #68]	; 0x44
    60d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    60d8:	ldr	r0, [r2, #4]
    60dc:	sub	r1, fp, #37	; 0x25
    60e0:	mov	r2, #1
    60e4:	blx	r3
    60e8:	b	6294 <doCdataSection+0x3f4>
    60ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    60f0:	ldr	r3, [r3, #88]	; 0x58
    60f4:	cmp	r3, #0
    60f8:	beq	6294 <doCdataSection+0x3f4>
    60fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6100:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6104:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6108:	ldr	r0, [fp, #-48]	; 0xffffffd0
    610c:	bl	b7f8 <reportDefault>
    6110:	b	6294 <doCdataSection+0x3f4>
    6114:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6118:	ldr	r3, [r3, #68]	; 0x44
    611c:	str	r3, [fp, #-28]	; 0xffffffe4
    6120:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6124:	cmp	r3, #0
    6128:	beq	61f4 <doCdataSection+0x354>
    612c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6130:	ldrb	r3, [r3, #72]	; 0x48
    6134:	cmp	r3, #0
    6138:	bne	61cc <doCdataSection+0x32c>
    613c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6140:	ldr	r3, [r3, #52]	; 0x34
    6144:	str	r3, [fp, #-44]	; 0xffffffd4
    6148:	ldr	r3, [fp, #-52]	; 0xffffffcc
    614c:	ldr	r4, [r3, #60]	; 0x3c
    6150:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6154:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6158:	ldr	r3, [r3, #56]	; 0x38
    615c:	sub	r0, fp, #44	; 0x2c
    6160:	sub	r1, fp, #32
    6164:	str	r3, [sp]
    6168:	mov	r3, r0
    616c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    6170:	blx	r4
    6174:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6178:	ldr	r3, [fp, #-20]	; 0xffffffec
    617c:	str	r2, [r3]
    6180:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6184:	ldr	r0, [r3, #4]
    6188:	ldr	r3, [fp, #-48]	; 0xffffffd0
    618c:	ldr	r1, [r3, #52]	; 0x34
    6190:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6194:	mov	r2, r3
    6198:	ldr	r3, [fp, #-48]	; 0xffffffd0
    619c:	ldr	r3, [r3, #52]	; 0x34
    61a0:	sub	r2, r2, r3
    61a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    61a8:	blx	r3
    61ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    61b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    61b4:	cmp	r2, r3
    61b8:	beq	629c <doCdataSection+0x3fc>
    61bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    61c0:	ldr	r3, [fp, #-16]
    61c4:	str	r2, [r3]
    61c8:	b	613c <doCdataSection+0x29c>
    61cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    61d0:	ldr	r0, [r3, #4]
    61d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    61d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    61dc:	mov	r2, r3
    61e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    61e4:	sub	r2, r2, r3
    61e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    61ec:	blx	r3
    61f0:	b	629c <doCdataSection+0x3fc>
    61f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    61f8:	ldr	r3, [r3, #88]	; 0x58
    61fc:	cmp	r3, #0
    6200:	beq	629c <doCdataSection+0x3fc>
    6204:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6208:	ldr	r3, [fp, #-36]	; 0xffffffdc
    620c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    6210:	ldr	r0, [fp, #-48]	; 0xffffffd0
    6214:	bl	b7f8 <reportDefault>
    6218:	b	629c <doCdataSection+0x3fc>
    621c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6220:	ldr	r3, [fp, #-16]
    6224:	str	r2, [r3]
    6228:	mov	r3, #4
    622c:	b	62ec <doCdataSection+0x44c>
    6230:	ldrb	r3, [fp, #8]
    6234:	cmp	r3, #0
    6238:	beq	6250 <doCdataSection+0x3b0>
    623c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6240:	ldr	r3, [fp, #4]
    6244:	str	r2, [r3]
    6248:	mov	r3, #0
    624c:	b	62ec <doCdataSection+0x44c>
    6250:	mov	r3, #6
    6254:	b	62ec <doCdataSection+0x44c>
    6258:	ldrb	r3, [fp, #8]
    625c:	cmp	r3, #0
    6260:	beq	6278 <doCdataSection+0x3d8>
    6264:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6268:	ldr	r3, [fp, #4]
    626c:	str	r2, [r3]
    6270:	mov	r3, #0
    6274:	b	62ec <doCdataSection+0x44c>
    6278:	mov	r3, #20
    627c:	b	62ec <doCdataSection+0x44c>
    6280:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6284:	ldr	r3, [fp, #-16]
    6288:	str	r2, [r3]
    628c:	mov	r3, #23
    6290:	b	62ec <doCdataSection+0x44c>
    6294:	nop			; (mov r0, r0)
    6298:	b	62a0 <doCdataSection+0x400>
    629c:	nop			; (mov r0, r0)
    62a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    62a4:	str	r3, [fp, #-32]	; 0xffffffe0
    62a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    62ac:	ldr	r3, [fp, #-16]
    62b0:	str	r2, [r3]
    62b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    62b8:	ldr	r3, [r3, #496]	; 0x1f0
    62bc:	cmp	r3, #2
    62c0:	beq	62e0 <doCdataSection+0x440>
    62c4:	cmp	r3, #3
    62c8:	bne	62e8 <doCdataSection+0x448>
    62cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    62d0:	ldr	r3, [fp, #4]
    62d4:	str	r2, [r3]
    62d8:	mov	r3, #0
    62dc:	b	62ec <doCdataSection+0x44c>
    62e0:	mov	r3, #35	; 0x23
    62e4:	b	62ec <doCdataSection+0x44c>
    62e8:	b	5f38 <doCdataSection+0x98>
    62ec:	mov	r0, r3
    62f0:	sub	sp, fp, #8
    62f4:	pop	{r4, fp, pc}

000062f8 <ignoreSectionProcessor>:
    62f8:	push	{fp, lr}
    62fc:	add	fp, sp, #4
    6300:	sub	sp, sp, #32
    6304:	str	r0, [fp, #-16]
    6308:	str	r1, [fp, #-20]	; 0xffffffec
    630c:	str	r2, [fp, #-24]	; 0xffffffe8
    6310:	str	r3, [fp, #-28]	; 0xffffffe4
    6314:	ldr	r3, [fp, #-16]
    6318:	ldr	r1, [r3, #152]	; 0x98
    631c:	ldr	r3, [fp, #-16]
    6320:	ldrb	r3, [r3, #500]	; 0x1f4
    6324:	cmp	r3, #0
    6328:	moveq	r3, #1
    632c:	movne	r3, #0
    6330:	uxtb	r3, r3
    6334:	sub	r2, fp, #20
    6338:	str	r3, [sp, #4]
    633c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6340:	str	r3, [sp]
    6344:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6348:	ldr	r0, [fp, #-16]
    634c:	bl	63b0 <doIgnoreSection>
    6350:	str	r0, [fp, #-8]
    6354:	ldr	r3, [fp, #-8]
    6358:	cmp	r3, #0
    635c:	beq	6368 <ignoreSectionProcessor+0x70>
    6360:	ldr	r3, [fp, #-8]
    6364:	b	63a0 <ignoreSectionProcessor+0xa8>
    6368:	ldr	r3, [fp, #-20]	; 0xffffffec
    636c:	cmp	r3, #0
    6370:	beq	639c <ignoreSectionProcessor+0xa4>
    6374:	ldr	r3, [fp, #-16]
    6378:	ldr	r2, [pc, #44]	; 63ac <ignoreSectionProcessor+0xb4>
    637c:	str	r2, [r3, #288]	; 0x120
    6380:	ldr	r1, [fp, #-20]	; 0xffffffec
    6384:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6388:	ldr	r2, [fp, #-24]	; 0xffffffe8
    638c:	ldr	r0, [fp, #-16]
    6390:	bl	71b4 <prologProcessor>
    6394:	mov	r3, r0
    6398:	b	63a0 <ignoreSectionProcessor+0xa8>
    639c:	ldr	r3, [fp, #-8]
    63a0:	mov	r0, r3
    63a4:	sub	sp, fp, #4
    63a8:	pop	{fp, pc}
    63ac:	.word	0x00000000

000063b0 <doIgnoreSection>:
    63b0:	push	{r4, fp, lr}
    63b4:	add	fp, sp, #8
    63b8:	sub	sp, sp, #44	; 0x2c
    63bc:	str	r0, [fp, #-40]	; 0xffffffd8
    63c0:	str	r1, [fp, #-44]	; 0xffffffd4
    63c4:	str	r2, [fp, #-48]	; 0xffffffd0
    63c8:	str	r3, [fp, #-52]	; 0xffffffcc
    63cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    63d0:	ldr	r3, [r3]
    63d4:	str	r3, [fp, #-24]	; 0xffffffe8
    63d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    63dc:	ldr	r2, [r3, #152]	; 0x98
    63e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    63e4:	cmp	r2, r3
    63e8:	bne	6414 <doIgnoreSection+0x64>
    63ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    63f0:	add	r3, r3, #296	; 0x128
    63f4:	str	r3, [fp, #-16]
    63f8:	ldr	r3, [fp, #-16]
    63fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6400:	str	r2, [r3]
    6404:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6408:	add	r3, r3, #300	; 0x12c
    640c:	str	r3, [fp, #-20]	; 0xffffffec
    6410:	b	6430 <doIgnoreSection+0x80>
    6414:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6418:	ldr	r3, [r3, #308]	; 0x134
    641c:	str	r3, [fp, #-16]
    6420:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6424:	ldr	r3, [r3, #308]	; 0x134
    6428:	add	r3, r3, #4
    642c:	str	r3, [fp, #-20]	; 0xffffffec
    6430:	ldr	r3, [fp, #-16]
    6434:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6438:	str	r2, [r3]
    643c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6440:	mov	r2, #0
    6444:	str	r2, [r3]
    6448:	ldr	r3, [fp, #-44]	; 0xffffffd4
    644c:	ldr	r4, [r3, #12]
    6450:	sub	r3, fp, #32
    6454:	ldr	r2, [fp, #-52]	; 0xffffffcc
    6458:	ldr	r1, [fp, #-24]	; 0xffffffe8
    645c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6460:	blx	r4
    6464:	str	r0, [fp, #-28]	; 0xffffffe4
    6468:	ldr	r2, [fp, #-32]	; 0xffffffe0
    646c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6470:	str	r2, [r3]
    6474:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6478:	add	r3, r3, #4
    647c:	cmp	r3, #46	; 0x2e
    6480:	ldrls	pc, [pc, r3, lsl #2]
    6484:	b	6604 <doIgnoreSection+0x254>
    6488:	.word	0x000065dc
    648c:	.word	0x00006604
    6490:	.word	0x000065b4
    6494:	.word	0x000065dc
    6498:	.word	0x000065a0
    649c:	.word	0x00006604
    64a0:	.word	0x00006604
    64a4:	.word	0x00006604
    64a8:	.word	0x00006604
    64ac:	.word	0x00006604
    64b0:	.word	0x00006604
    64b4:	.word	0x00006604
    64b8:	.word	0x00006604
    64bc:	.word	0x00006604
    64c0:	.word	0x00006604
    64c4:	.word	0x00006604
    64c8:	.word	0x00006604
    64cc:	.word	0x00006604
    64d0:	.word	0x00006604
    64d4:	.word	0x00006604
    64d8:	.word	0x00006604
    64dc:	.word	0x00006604
    64e0:	.word	0x00006604
    64e4:	.word	0x00006604
    64e8:	.word	0x00006604
    64ec:	.word	0x00006604
    64f0:	.word	0x00006604
    64f4:	.word	0x00006604
    64f8:	.word	0x00006604
    64fc:	.word	0x00006604
    6500:	.word	0x00006604
    6504:	.word	0x00006604
    6508:	.word	0x00006604
    650c:	.word	0x00006604
    6510:	.word	0x00006604
    6514:	.word	0x00006604
    6518:	.word	0x00006604
    651c:	.word	0x00006604
    6520:	.word	0x00006604
    6524:	.word	0x00006604
    6528:	.word	0x00006604
    652c:	.word	0x00006604
    6530:	.word	0x00006604
    6534:	.word	0x00006604
    6538:	.word	0x00006604
    653c:	.word	0x00006604
    6540:	.word	0x00006544
    6544:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6548:	ldr	r3, [r3, #88]	; 0x58
    654c:	cmp	r3, #0
    6550:	beq	6568 <doIgnoreSection+0x1b8>
    6554:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6558:	ldr	r2, [fp, #-24]	; 0xffffffe8
    655c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6560:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6564:	bl	b7f8 <reportDefault>
    6568:	ldr	r2, [fp, #-32]	; 0xffffffe0
    656c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    6570:	str	r2, [r3]
    6574:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6578:	ldr	r3, [fp, #4]
    657c:	str	r2, [r3]
    6580:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6584:	ldr	r3, [r3, #496]	; 0x1f0
    6588:	cmp	r3, #2
    658c:	bne	6598 <doIgnoreSection+0x1e8>
    6590:	mov	r3, #35	; 0x23
    6594:	b	6614 <doIgnoreSection+0x264>
    6598:	mov	r3, #0
    659c:	b	6614 <doIgnoreSection+0x264>
    65a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    65a4:	ldr	r3, [fp, #-16]
    65a8:	str	r2, [r3]
    65ac:	mov	r3, #4
    65b0:	b	6614 <doIgnoreSection+0x264>
    65b4:	ldrb	r3, [fp, #8]
    65b8:	cmp	r3, #0
    65bc:	beq	65d4 <doIgnoreSection+0x224>
    65c0:	ldr	r3, [fp, #4]
    65c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    65c8:	str	r2, [r3]
    65cc:	mov	r3, #0
    65d0:	b	6614 <doIgnoreSection+0x264>
    65d4:	mov	r3, #6
    65d8:	b	6614 <doIgnoreSection+0x264>
    65dc:	ldrb	r3, [fp, #8]
    65e0:	cmp	r3, #0
    65e4:	beq	65fc <doIgnoreSection+0x24c>
    65e8:	ldr	r3, [fp, #4]
    65ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    65f0:	str	r2, [r3]
    65f4:	mov	r3, #0
    65f8:	b	6614 <doIgnoreSection+0x264>
    65fc:	mov	r3, #2
    6600:	b	6614 <doIgnoreSection+0x264>
    6604:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6608:	ldr	r3, [fp, #-16]
    660c:	str	r2, [r3]
    6610:	mov	r3, #23
    6614:	mov	r0, r3
    6618:	sub	sp, fp, #8
    661c:	pop	{r4, fp, pc}

00006620 <initializeEncoding>:
    6620:	push	{fp, lr}
    6624:	add	fp, sp, #4
    6628:	sub	sp, sp, #16
    662c:	str	r0, [fp, #-16]
    6630:	ldr	r3, [fp, #-16]
    6634:	ldr	r3, [r3, #240]	; 0xf0
    6638:	str	r3, [fp, #-8]
    663c:	ldr	r3, [fp, #-16]
    6640:	ldrb	r3, [r3, #244]	; 0xf4
    6644:	cmp	r3, #0
    6648:	beq	6654 <initializeEncoding+0x34>
    664c:	ldr	r3, [pc, #84]	; 66a8 <initializeEncoding+0x88>
    6650:	b	6658 <initializeEncoding+0x38>
    6654:	ldr	r3, [pc, #80]	; 66ac <initializeEncoding+0x8c>
    6658:	ldr	r2, [fp, #-16]
    665c:	add	r0, r2, #156	; 0x9c
    6660:	ldr	r2, [fp, #-16]
    6664:	add	r1, r2, #152	; 0x98
    6668:	ldr	r2, [fp, #-8]
    666c:	blx	r3
    6670:	mov	r3, r0
    6674:	cmp	r3, #0
    6678:	beq	6684 <initializeEncoding+0x64>
    667c:	mov	r3, #0
    6680:	b	669c <initializeEncoding+0x7c>
    6684:	ldr	r3, [fp, #-16]
    6688:	ldr	r3, [r3, #240]	; 0xf0
    668c:	mov	r1, r3
    6690:	ldr	r0, [fp, #-16]
    6694:	bl	6a64 <handleUnknownEncoding>
    6698:	mov	r3, r0
    669c:	mov	r0, r3
    66a0:	sub	sp, fp, #4
    66a4:	pop	{fp, pc}
	...

000066b0 <processXmlDecl>:
    66b0:	push	{r4, r5, r6, r7, fp, lr}
    66b4:	add	fp, sp, #20
    66b8:	sub	sp, sp, #72	; 0x48
    66bc:	str	r0, [fp, #-56]	; 0xffffffc8
    66c0:	str	r1, [fp, #-60]	; 0xffffffc4
    66c4:	str	r2, [fp, #-64]	; 0xffffffc0
    66c8:	str	r3, [fp, #-68]	; 0xffffffbc
    66cc:	mov	r3, #0
    66d0:	str	r3, [fp, #-36]	; 0xffffffdc
    66d4:	mov	r3, #0
    66d8:	str	r3, [fp, #-24]	; 0xffffffe8
    66dc:	mov	r3, #0
    66e0:	str	r3, [fp, #-40]	; 0xffffffd8
    66e4:	mov	r3, #0
    66e8:	str	r3, [fp, #-44]	; 0xffffffd4
    66ec:	mov	r3, #0
    66f0:	str	r3, [fp, #-28]	; 0xffffffe4
    66f4:	mvn	r3, #0
    66f8:	str	r3, [fp, #-52]	; 0xffffffcc
    66fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6700:	ldrb	r3, [r3, #244]	; 0xf4
    6704:	cmp	r3, #0
    6708:	beq	6714 <processXmlDecl+0x64>
    670c:	ldr	r4, [pc, #840]	; 6a5c <processXmlDecl+0x3ac>
    6710:	b	6718 <processXmlDecl+0x68>
    6714:	ldr	r4, [pc, #836]	; 6a60 <processXmlDecl+0x3b0>
    6718:	ldr	r3, [fp, #-56]	; 0xffffffc8
    671c:	ldr	r1, [r3, #152]	; 0x98
    6720:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6724:	add	r3, r3, #296	; 0x128
    6728:	sub	r2, fp, #52	; 0x34
    672c:	str	r2, [sp, #20]
    6730:	sub	r2, fp, #40	; 0x28
    6734:	str	r2, [sp, #16]
    6738:	sub	r2, fp, #36	; 0x24
    673c:	str	r2, [sp, #12]
    6740:	sub	r2, fp, #48	; 0x30
    6744:	str	r2, [sp, #8]
    6748:	sub	r2, fp, #44	; 0x2c
    674c:	str	r2, [sp, #4]
    6750:	str	r3, [sp]
    6754:	ldr	r3, [fp, #-68]	; 0xffffffbc
    6758:	ldr	r2, [fp, #-64]	; 0xffffffc0
    675c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    6760:	blx	r4
    6764:	mov	r3, r0
    6768:	cmp	r3, #0
    676c:	bne	678c <processXmlDecl+0xdc>
    6770:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6774:	cmp	r3, #0
    6778:	beq	6784 <processXmlDecl+0xd4>
    677c:	mov	r3, #31
    6780:	b	6a50 <processXmlDecl+0x3a0>
    6784:	mov	r3, #30
    6788:	b	6a50 <processXmlDecl+0x3a0>
    678c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6790:	cmp	r3, #0
    6794:	bne	67d0 <processXmlDecl+0x120>
    6798:	ldr	r3, [fp, #-52]	; 0xffffffcc
    679c:	cmp	r3, #1
    67a0:	bne	67d0 <processXmlDecl+0x120>
    67a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    67a8:	ldr	r3, [r3, #364]	; 0x16c
    67ac:	mov	r2, #1
    67b0:	strb	r2, [r3, #130]	; 0x82
    67b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    67b8:	ldr	r3, [r3, #508]	; 0x1fc
    67bc:	cmp	r3, #1
    67c0:	bne	67d0 <processXmlDecl+0x120>
    67c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    67c8:	mov	r2, #0
    67cc:	str	r2, [r3, #508]	; 0x1fc
    67d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    67d4:	ldr	r3, [r3, #148]	; 0x94
    67d8:	cmp	r3, #0
    67dc:	beq	68e0 <processXmlDecl+0x230>
    67e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    67e4:	cmp	r3, #0
    67e8:	beq	6864 <processXmlDecl+0x1b4>
    67ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    67f0:	add	r5, r3, #456	; 0x1c8
    67f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    67f8:	ldr	r6, [r3, #152]	; 0x98
    67fc:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6800:	ldr	r4, [fp, #-36]	; 0xffffffdc
    6804:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6808:	ldr	r3, [r3, #152]	; 0x98
    680c:	ldr	r3, [r3, #32]
    6810:	ldr	r2, [fp, #-56]	; 0xffffffc8
    6814:	ldr	r2, [r2, #152]	; 0x98
    6818:	ldr	r1, [fp, #-36]	; 0xffffffdc
    681c:	mov	r0, r2
    6820:	blx	r3
    6824:	mov	r3, r0
    6828:	add	r3, r4, r3
    682c:	mov	r2, r7
    6830:	mov	r1, r6
    6834:	mov	r0, r5
    6838:	bl	e940 <poolStoreString>
    683c:	str	r0, [fp, #-24]	; 0xffffffe8
    6840:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6844:	cmp	r3, #0
    6848:	bne	6854 <processXmlDecl+0x1a4>
    684c:	mov	r3, #1
    6850:	b	6a50 <processXmlDecl+0x3a0>
    6854:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6858:	ldr	r2, [r3, #468]	; 0x1d4
    685c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6860:	str	r2, [r3, #472]	; 0x1d8
    6864:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6868:	cmp	r3, #0
    686c:	beq	68bc <processXmlDecl+0x20c>
    6870:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6874:	add	r0, r3, #456	; 0x1c8
    6878:	ldr	r3, [fp, #-56]	; 0xffffffc8
    687c:	ldr	r1, [r3, #152]	; 0x98
    6880:	ldr	ip, [fp, #-44]	; 0xffffffd4
    6884:	ldr	r2, [fp, #-48]	; 0xffffffd0
    6888:	ldr	r3, [fp, #-56]	; 0xffffffc8
    688c:	ldr	r3, [r3, #152]	; 0x98
    6890:	ldr	r3, [r3, #68]	; 0x44
    6894:	rsb	r3, r3, #0
    6898:	add	r3, r2, r3
    689c:	mov	r2, ip
    68a0:	bl	e940 <poolStoreString>
    68a4:	str	r0, [fp, #-28]	; 0xffffffe4
    68a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    68ac:	cmp	r3, #0
    68b0:	bne	68bc <processXmlDecl+0x20c>
    68b4:	mov	r3, #1
    68b8:	b	6a50 <processXmlDecl+0x3a0>
    68bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    68c0:	ldr	r4, [r3, #148]	; 0x94
    68c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    68c8:	ldr	r0, [r3, #4]
    68cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    68d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    68d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    68d8:	blx	r4
    68dc:	b	6908 <processXmlDecl+0x258>
    68e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    68e4:	ldr	r3, [r3, #88]	; 0x58
    68e8:	cmp	r3, #0
    68ec:	beq	6908 <processXmlDecl+0x258>
    68f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    68f4:	ldr	r1, [r3, #152]	; 0x98
    68f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    68fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6900:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6904:	bl	b7f8 <reportDefault>
    6908:	ldr	r3, [fp, #-56]	; 0xffffffc8
    690c:	ldr	r3, [r3, #240]	; 0xf0
    6910:	cmp	r3, #0
    6914:	bne	6a24 <processXmlDecl+0x374>
    6918:	ldr	r3, [fp, #-40]	; 0xffffffd8
    691c:	cmp	r3, #0
    6920:	beq	6964 <processXmlDecl+0x2b4>
    6924:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6928:	ldr	r2, [r3, #68]	; 0x44
    692c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6930:	ldr	r3, [r3, #152]	; 0x98
    6934:	ldr	r3, [r3, #68]	; 0x44
    6938:	cmp	r2, r3
    693c:	beq	6954 <processXmlDecl+0x2a4>
    6940:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6944:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6948:	str	r2, [r3, #296]	; 0x128
    694c:	mov	r3, #19
    6950:	b	6a50 <processXmlDecl+0x3a0>
    6954:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6958:	ldr	r3, [fp, #-56]	; 0xffffffc8
    695c:	str	r2, [r3, #152]	; 0x98
    6960:	b	6a24 <processXmlDecl+0x374>
    6964:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6968:	cmp	r3, #0
    696c:	beq	6a24 <processXmlDecl+0x374>
    6970:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6974:	cmp	r3, #0
    6978:	bne	69e4 <processXmlDecl+0x334>
    697c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6980:	add	r5, r3, #456	; 0x1c8
    6984:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6988:	ldr	r6, [r3, #152]	; 0x98
    698c:	ldr	r7, [fp, #-36]	; 0xffffffdc
    6990:	ldr	r4, [fp, #-36]	; 0xffffffdc
    6994:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6998:	ldr	r3, [r3, #152]	; 0x98
    699c:	ldr	r3, [r3, #32]
    69a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    69a4:	ldr	r2, [r2, #152]	; 0x98
    69a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    69ac:	mov	r0, r2
    69b0:	blx	r3
    69b4:	mov	r3, r0
    69b8:	add	r3, r4, r3
    69bc:	mov	r2, r7
    69c0:	mov	r1, r6
    69c4:	mov	r0, r5
    69c8:	bl	e940 <poolStoreString>
    69cc:	str	r0, [fp, #-24]	; 0xffffffe8
    69d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    69d4:	cmp	r3, #0
    69d8:	bne	69e4 <processXmlDecl+0x334>
    69dc:	mov	r3, #1
    69e0:	b	6a50 <processXmlDecl+0x3a0>
    69e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    69e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    69ec:	bl	6a64 <handleUnknownEncoding>
    69f0:	str	r0, [fp, #-32]	; 0xffffffe0
    69f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    69f8:	add	r3, r3, #456	; 0x1c8
    69fc:	mov	r0, r3
    6a00:	bl	e4b4 <poolClear>
    6a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6a08:	cmp	r3, #18
    6a0c:	bne	6a1c <processXmlDecl+0x36c>
    6a10:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6a14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a18:	str	r2, [r3, #296]	; 0x128
    6a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6a20:	b	6a50 <processXmlDecl+0x3a0>
    6a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6a28:	cmp	r3, #0
    6a2c:	bne	6a3c <processXmlDecl+0x38c>
    6a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6a34:	cmp	r3, #0
    6a38:	beq	6a4c <processXmlDecl+0x39c>
    6a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6a40:	add	r3, r3, #456	; 0x1c8
    6a44:	mov	r0, r3
    6a48:	bl	e4b4 <poolClear>
    6a4c:	mov	r3, #0
    6a50:	mov	r0, r3
    6a54:	sub	sp, fp, #20
    6a58:	pop	{r4, r5, r6, r7, fp, pc}
	...

00006a64 <handleUnknownEncoding>:
    6a64:	push	{r4, fp, lr}
    6a68:	add	fp, sp, #8
    6a6c:	sub	sp, sp, #1056	; 0x420
    6a70:	sub	sp, sp, #4
    6a74:	str	r0, [fp, #-1064]	; 0xfffffbd8
    6a78:	str	r1, [fp, #-1068]	; 0xfffffbd4
    6a7c:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6a80:	ldr	r3, [r3, #132]	; 0x84
    6a84:	cmp	r3, #0
    6a88:	beq	6c00 <handleUnknownEncoding+0x19c>
    6a8c:	mov	r3, #0
    6a90:	str	r3, [fp, #-16]
    6a94:	b	6abc <handleUnknownEncoding+0x58>
    6a98:	ldr	r3, [fp, #-16]
    6a9c:	lsl	r3, r3, #2
    6aa0:	sub	r2, fp, #12
    6aa4:	add	r3, r2, r3
    6aa8:	mvn	r2, #0
    6aac:	str	r2, [r3, #-1044]	; 0xfffffbec
    6ab0:	ldr	r3, [fp, #-16]
    6ab4:	add	r3, r3, #1
    6ab8:	str	r3, [fp, #-16]
    6abc:	ldr	r3, [fp, #-16]
    6ac0:	cmp	r3, #255	; 0xff
    6ac4:	ble	6a98 <handleUnknownEncoding+0x34>
    6ac8:	mov	r3, #0
    6acc:	str	r3, [fp, #-28]	; 0xffffffe4
    6ad0:	mov	r3, #0
    6ad4:	str	r3, [fp, #-32]	; 0xffffffe0
    6ad8:	mov	r3, #0
    6adc:	str	r3, [fp, #-24]	; 0xffffffe8
    6ae0:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6ae4:	ldr	r4, [r3, #132]	; 0x84
    6ae8:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6aec:	ldr	r0, [r3, #256]	; 0x100
    6af0:	sub	r3, fp, #1040	; 0x410
    6af4:	sub	r3, r3, #12
    6af8:	sub	r3, r3, #4
    6afc:	mov	r2, r3
    6b00:	ldr	r1, [fp, #-1068]	; 0xfffffbd4
    6b04:	blx	r4
    6b08:	mov	r3, r0
    6b0c:	cmp	r3, #0
    6b10:	beq	6be4 <handleUnknownEncoding+0x180>
    6b14:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6b18:	ldr	r4, [r3, #12]
    6b1c:	bl	0 <coda_XmlSizeOfUnknownEncoding>
    6b20:	mov	r3, r0
    6b24:	mov	r0, r3
    6b28:	blx	r4
    6b2c:	mov	r2, r0
    6b30:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6b34:	str	r2, [r3, #248]	; 0xf8
    6b38:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6b3c:	ldr	r3, [r3, #248]	; 0xf8
    6b40:	cmp	r3, #0
    6b44:	bne	6b6c <handleUnknownEncoding+0x108>
    6b48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6b4c:	cmp	r3, #0
    6b50:	beq	6b64 <handleUnknownEncoding+0x100>
    6b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6b58:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6b5c:	mov	r0, r2
    6b60:	blx	r3
    6b64:	mov	r3, #1
    6b68:	b	6c04 <handleUnknownEncoding+0x1a0>
    6b6c:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6b70:	ldrb	r3, [r3, #244]	; 0xf4
    6b74:	cmp	r3, #0
    6b78:	beq	6b84 <handleUnknownEncoding+0x120>
    6b7c:	ldr	r4, [pc, #140]	; 6c10 <handleUnknownEncoding+0x1ac>
    6b80:	b	6b88 <handleUnknownEncoding+0x124>
    6b84:	ldr	r4, [pc, #136]	; 6c14 <handleUnknownEncoding+0x1b0>
    6b88:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6b8c:	ldr	r0, [r3, #248]	; 0xf8
    6b90:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6b94:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6b98:	sub	r1, fp, #1040	; 0x410
    6b9c:	sub	r1, r1, #12
    6ba0:	sub	r1, r1, #4
    6ba4:	blx	r4
    6ba8:	str	r0, [fp, #-20]	; 0xffffffec
    6bac:	ldr	r3, [fp, #-20]	; 0xffffffec
    6bb0:	cmp	r3, #0
    6bb4:	beq	6be4 <handleUnknownEncoding+0x180>
    6bb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6bbc:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6bc0:	str	r2, [r3, #252]	; 0xfc
    6bc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6bc8:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6bcc:	str	r2, [r3, #260]	; 0x104
    6bd0:	ldr	r3, [fp, #-1064]	; 0xfffffbd8
    6bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
    6bd8:	str	r2, [r3, #152]	; 0x98
    6bdc:	mov	r3, #0
    6be0:	b	6c04 <handleUnknownEncoding+0x1a0>
    6be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6be8:	cmp	r3, #0
    6bec:	beq	6c00 <handleUnknownEncoding+0x19c>
    6bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6bf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6bf8:	mov	r0, r2
    6bfc:	blx	r3
    6c00:	mov	r3, #18
    6c04:	mov	r0, r3
    6c08:	sub	sp, fp, #8
    6c0c:	pop	{r4, fp, pc}
	...

00006c18 <prologInitProcessor>:
    6c18:	push	{fp, lr}
    6c1c:	add	fp, sp, #4
    6c20:	sub	sp, sp, #24
    6c24:	str	r0, [fp, #-16]
    6c28:	str	r1, [fp, #-20]	; 0xffffffec
    6c2c:	str	r2, [fp, #-24]	; 0xffffffe8
    6c30:	str	r3, [fp, #-28]	; 0xffffffe4
    6c34:	ldr	r0, [fp, #-16]
    6c38:	bl	6620 <initializeEncoding>
    6c3c:	str	r0, [fp, #-8]
    6c40:	ldr	r3, [fp, #-8]
    6c44:	cmp	r3, #0
    6c48:	beq	6c54 <prologInitProcessor+0x3c>
    6c4c:	ldr	r3, [fp, #-8]
    6c50:	b	6c78 <prologInitProcessor+0x60>
    6c54:	ldr	r3, [fp, #-16]
    6c58:	ldr	r2, [pc, #36]	; 6c84 <prologInitProcessor+0x6c>
    6c5c:	str	r2, [r3, #288]	; 0x120
    6c60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6c68:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c6c:	ldr	r0, [fp, #-16]
    6c70:	bl	71b4 <prologProcessor>
    6c74:	mov	r3, r0
    6c78:	mov	r0, r3
    6c7c:	sub	sp, fp, #4
    6c80:	pop	{fp, pc}
    6c84:	.word	0x00000000

00006c88 <externalParEntInitProcessor>:
    6c88:	push	{fp, lr}
    6c8c:	add	fp, sp, #4
    6c90:	sub	sp, sp, #24
    6c94:	str	r0, [fp, #-16]
    6c98:	str	r1, [fp, #-20]	; 0xffffffec
    6c9c:	str	r2, [fp, #-24]	; 0xffffffe8
    6ca0:	str	r3, [fp, #-28]	; 0xffffffe4
    6ca4:	ldr	r0, [fp, #-16]
    6ca8:	bl	6620 <initializeEncoding>
    6cac:	str	r0, [fp, #-8]
    6cb0:	ldr	r3, [fp, #-8]
    6cb4:	cmp	r3, #0
    6cb8:	beq	6cc4 <externalParEntInitProcessor+0x3c>
    6cbc:	ldr	r3, [fp, #-8]
    6cc0:	b	6d30 <externalParEntInitProcessor+0xa8>
    6cc4:	ldr	r3, [fp, #-16]
    6cc8:	ldr	r3, [r3, #364]	; 0x16c
    6ccc:	mov	r2, #1
    6cd0:	strb	r2, [r3, #131]	; 0x83
    6cd4:	ldr	r3, [fp, #-16]
    6cd8:	ldr	r3, [r3, #284]	; 0x11c
    6cdc:	cmp	r3, #0
    6ce0:	beq	6d0c <externalParEntInitProcessor+0x84>
    6ce4:	ldr	r3, [fp, #-16]
    6ce8:	ldr	r2, [pc, #76]	; 6d3c <externalParEntInitProcessor+0xb4>
    6cec:	str	r2, [r3, #288]	; 0x120
    6cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6cf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    6cfc:	ldr	r0, [fp, #-16]
    6d00:	bl	6d44 <entityValueInitProcessor>
    6d04:	mov	r3, r0
    6d08:	b	6d30 <externalParEntInitProcessor+0xa8>
    6d0c:	ldr	r3, [fp, #-16]
    6d10:	ldr	r2, [pc, #40]	; 6d40 <externalParEntInitProcessor+0xb8>
    6d14:	str	r2, [r3, #288]	; 0x120
    6d18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6d20:	ldr	r1, [fp, #-20]	; 0xffffffec
    6d24:	ldr	r0, [fp, #-16]
    6d28:	bl	6f4c <externalParEntProcessor>
    6d2c:	mov	r3, r0
    6d30:	mov	r0, r3
    6d34:	sub	sp, fp, #4
    6d38:	pop	{fp, pc}
	...

00006d44 <entityValueInitProcessor>:
    6d44:	push	{r4, fp, lr}
    6d48:	add	fp, sp, #8
    6d4c:	sub	sp, sp, #36	; 0x24
    6d50:	str	r0, [fp, #-32]	; 0xffffffe0
    6d54:	str	r1, [fp, #-36]	; 0xffffffdc
    6d58:	str	r2, [fp, #-40]	; 0xffffffd8
    6d5c:	str	r3, [fp, #-44]	; 0xffffffd4
    6d60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6d64:	str	r3, [fp, #-16]
    6d68:	ldr	r3, [fp, #-16]
    6d6c:	str	r3, [fp, #-28]	; 0xffffffe4
    6d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6d74:	ldr	r2, [fp, #-16]
    6d78:	str	r2, [r3, #296]	; 0x128
    6d7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6d80:	ldr	r3, [r3, #152]	; 0x98
    6d84:	ldr	r4, [r3]
    6d88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6d8c:	ldr	r0, [r3, #152]	; 0x98
    6d90:	sub	r3, fp, #28
    6d94:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6d98:	ldr	r1, [fp, #-16]
    6d9c:	blx	r4
    6da0:	str	r0, [fp, #-20]	; 0xffffffec
    6da4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6dac:	str	r2, [r3, #300]	; 0x12c
    6db0:	ldr	r3, [fp, #-20]	; 0xffffffec
    6db4:	cmp	r3, #0
    6db8:	bgt	6e44 <entityValueInitProcessor+0x100>
    6dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6dc0:	ldrb	r3, [r3, #500]	; 0x1f4
    6dc4:	cmp	r3, #0
    6dc8:	bne	6dec <entityValueInitProcessor+0xa8>
    6dcc:	ldr	r3, [fp, #-20]	; 0xffffffec
    6dd0:	cmp	r3, #0
    6dd4:	beq	6dec <entityValueInitProcessor+0xa8>
    6dd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6ddc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6de0:	str	r2, [r3]
    6de4:	mov	r3, #0
    6de8:	b	6f3c <entityValueInitProcessor+0x1f8>
    6dec:	ldr	r3, [fp, #-20]	; 0xffffffec
    6df0:	cmn	r3, #1
    6df4:	beq	6e34 <entityValueInitProcessor+0xf0>
    6df8:	cmp	r3, #0
    6dfc:	beq	6e2c <entityValueInitProcessor+0xe8>
    6e00:	cmn	r3, #2
    6e04:	beq	6e3c <entityValueInitProcessor+0xf8>
    6e08:	nop			; (mov r0, r0)
    6e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6e10:	ldr	r1, [r3, #152]	; 0x98
    6e14:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6e18:	ldr	r2, [fp, #-36]	; 0xffffffdc
    6e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6e20:	bl	ae78 <storeEntityValue>
    6e24:	mov	r3, r0
    6e28:	b	6f3c <entityValueInitProcessor+0x1f8>
    6e2c:	mov	r3, #4
    6e30:	b	6f3c <entityValueInitProcessor+0x1f8>
    6e34:	mov	r3, #5
    6e38:	b	6f3c <entityValueInitProcessor+0x1f8>
    6e3c:	mov	r3, #6
    6e40:	b	6f3c <entityValueInitProcessor+0x1f8>
    6e44:	ldr	r3, [fp, #-20]	; 0xffffffec
    6e48:	cmp	r3, #12
    6e4c:	bne	6ee4 <entityValueInitProcessor+0x1a0>
    6e50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6e54:	ldr	r2, [fp, #-16]
    6e58:	mov	r1, #0
    6e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6e60:	bl	66b0 <processXmlDecl>
    6e64:	str	r0, [fp, #-24]	; 0xffffffe8
    6e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6e6c:	cmp	r3, #0
    6e70:	beq	6e7c <entityValueInitProcessor+0x138>
    6e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6e78:	b	6f3c <entityValueInitProcessor+0x1f8>
    6e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6e80:	ldr	r3, [r3, #496]	; 0x1f0
    6e84:	cmp	r3, #2
    6e88:	beq	6ea8 <entityValueInitProcessor+0x164>
    6e8c:	cmp	r3, #3
    6e90:	bne	6eb0 <entityValueInitProcessor+0x16c>
    6e94:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6e98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6e9c:	str	r2, [r3]
    6ea0:	mov	r3, #0
    6ea4:	b	6f3c <entityValueInitProcessor+0x1f8>
    6ea8:	mov	r3, #35	; 0x23
    6eac:	b	6f3c <entityValueInitProcessor+0x1f8>
    6eb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6eb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6eb8:	str	r2, [r3]
    6ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6ec0:	ldr	r2, [pc, #128]	; 6f48 <entityValueInitProcessor+0x204>
    6ec4:	str	r2, [r3, #288]	; 0x120
    6ec8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ecc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6ed0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6ed8:	bl	70b4 <entityValueProcessor>
    6edc:	mov	r3, r0
    6ee0:	b	6f3c <entityValueInitProcessor+0x1f8>
    6ee4:	ldr	r3, [fp, #-20]	; 0xffffffec
    6ee8:	cmp	r3, #14
    6eec:	bne	6f24 <entityValueInitProcessor+0x1e0>
    6ef0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6ef4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6ef8:	cmp	r2, r3
    6efc:	bne	6f24 <entityValueInitProcessor+0x1e0>
    6f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6f04:	ldrb	r3, [r3, #500]	; 0x1f4
    6f08:	cmp	r3, #0
    6f0c:	bne	6f24 <entityValueInitProcessor+0x1e0>
    6f10:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6f14:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6f18:	str	r2, [r3]
    6f1c:	mov	r3, #0
    6f20:	b	6f3c <entityValueInitProcessor+0x1f8>
    6f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f28:	str	r3, [fp, #-16]
    6f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    6f30:	ldr	r2, [fp, #-16]
    6f34:	str	r2, [r3, #296]	; 0x128
    6f38:	b	6d7c <entityValueInitProcessor+0x38>
    6f3c:	mov	r0, r3
    6f40:	sub	sp, fp, #8
    6f44:	pop	{r4, fp, pc}
    6f48:	.word	0x00000000

00006f4c <externalParEntProcessor>:
    6f4c:	push	{r4, fp, lr}
    6f50:	add	fp, sp, #8
    6f54:	sub	sp, sp, #44	; 0x2c
    6f58:	str	r0, [fp, #-24]	; 0xffffffe8
    6f5c:	str	r1, [fp, #-28]	; 0xffffffe4
    6f60:	str	r2, [fp, #-32]	; 0xffffffe0
    6f64:	str	r3, [fp, #-36]	; 0xffffffdc
    6f68:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6f6c:	str	r3, [fp, #-20]	; 0xffffffec
    6f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6f74:	ldr	r3, [r3, #152]	; 0x98
    6f78:	ldr	r4, [r3]
    6f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6f80:	ldr	r0, [r3, #152]	; 0x98
    6f84:	sub	r3, fp, #20
    6f88:	ldr	r2, [fp, #-32]	; 0xffffffe0
    6f8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6f90:	blx	r4
    6f94:	str	r0, [fp, #-16]
    6f98:	ldr	r3, [fp, #-16]
    6f9c:	cmp	r3, #0
    6fa0:	bgt	700c <externalParEntProcessor+0xc0>
    6fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6fa8:	ldrb	r3, [r3, #500]	; 0x1f4
    6fac:	cmp	r3, #0
    6fb0:	bne	6fd4 <externalParEntProcessor+0x88>
    6fb4:	ldr	r3, [fp, #-16]
    6fb8:	cmp	r3, #0
    6fbc:	beq	6fd4 <externalParEntProcessor+0x88>
    6fc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    6fc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    6fc8:	str	r2, [r3]
    6fcc:	mov	r3, #0
    6fd0:	b	70a4 <externalParEntProcessor+0x158>
    6fd4:	ldr	r3, [fp, #-16]
    6fd8:	cmn	r3, #1
    6fdc:	beq	6ffc <externalParEntProcessor+0xb0>
    6fe0:	cmp	r3, #0
    6fe4:	beq	6ff4 <externalParEntProcessor+0xa8>
    6fe8:	cmn	r3, #2
    6fec:	beq	7004 <externalParEntProcessor+0xb8>
    6ff0:	b	7048 <externalParEntProcessor+0xfc>
    6ff4:	mov	r3, #4
    6ff8:	b	70a4 <externalParEntProcessor+0x158>
    6ffc:	mov	r3, #5
    7000:	b	70a4 <externalParEntProcessor+0x158>
    7004:	mov	r3, #6
    7008:	b	70a4 <externalParEntProcessor+0x158>
    700c:	ldr	r3, [fp, #-16]
    7010:	cmp	r3, #14
    7014:	bne	7048 <externalParEntProcessor+0xfc>
    7018:	ldr	r3, [fp, #-20]	; 0xffffffec
    701c:	str	r3, [fp, #-28]	; 0xffffffe4
    7020:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7024:	ldr	r3, [r3, #152]	; 0x98
    7028:	ldr	r4, [r3]
    702c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7030:	ldr	r0, [r3, #152]	; 0x98
    7034:	sub	r3, fp, #20
    7038:	ldr	r2, [fp, #-32]	; 0xffffffe0
    703c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7040:	blx	r4
    7044:	str	r0, [fp, #-16]
    7048:	ldr	r3, [fp, #-24]	; 0xffffffe8
    704c:	ldr	r2, [pc, #92]	; 70b0 <externalParEntProcessor+0x164>
    7050:	str	r2, [r3, #288]	; 0x120
    7054:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7058:	ldr	r1, [r3, #152]	; 0x98
    705c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7060:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7064:	ldrb	r2, [r2, #500]	; 0x1f4
    7068:	cmp	r2, #0
    706c:	moveq	r2, #1
    7070:	movne	r2, #0
    7074:	uxtb	r2, r2
    7078:	str	r2, [sp, #12]
    707c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    7080:	str	r2, [sp, #8]
    7084:	str	r3, [sp, #4]
    7088:	ldr	r3, [fp, #-16]
    708c:	str	r3, [sp]
    7090:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7094:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7098:	ldr	r0, [fp, #-24]	; 0xffffffe8
    709c:	bl	725c <doProlog>
    70a0:	mov	r3, r0
    70a4:	mov	r0, r3
    70a8:	sub	sp, fp, #8
    70ac:	pop	{r4, fp, pc}
    70b0:	.word	0x00000000

000070b4 <entityValueProcessor>:
    70b4:	push	{r4, fp, lr}
    70b8:	add	fp, sp, #8
    70bc:	sub	sp, sp, #36	; 0x24
    70c0:	str	r0, [fp, #-32]	; 0xffffffe0
    70c4:	str	r1, [fp, #-36]	; 0xffffffdc
    70c8:	str	r2, [fp, #-40]	; 0xffffffd8
    70cc:	str	r3, [fp, #-44]	; 0xffffffd4
    70d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    70d4:	str	r3, [fp, #-16]
    70d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    70dc:	str	r3, [fp, #-28]	; 0xffffffe4
    70e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    70e4:	ldr	r3, [r3, #152]	; 0x98
    70e8:	str	r3, [fp, #-20]	; 0xffffffec
    70ec:	ldr	r3, [fp, #-20]	; 0xffffffec
    70f0:	ldr	r4, [r3]
    70f4:	sub	r3, fp, #28
    70f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    70fc:	ldr	r1, [fp, #-16]
    7100:	ldr	r0, [fp, #-20]	; 0xffffffec
    7104:	blx	r4
    7108:	str	r0, [fp, #-24]	; 0xffffffe8
    710c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7110:	cmp	r3, #0
    7114:	bgt	719c <entityValueProcessor+0xe8>
    7118:	ldr	r3, [fp, #-32]	; 0xffffffe0
    711c:	ldrb	r3, [r3, #500]	; 0x1f4
    7120:	cmp	r3, #0
    7124:	bne	7148 <entityValueProcessor+0x94>
    7128:	ldr	r3, [fp, #-24]	; 0xffffffe8
    712c:	cmp	r3, #0
    7130:	beq	7148 <entityValueProcessor+0x94>
    7134:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7138:	ldr	r2, [fp, #-36]	; 0xffffffdc
    713c:	str	r2, [r3]
    7140:	mov	r3, #0
    7144:	b	71a8 <entityValueProcessor+0xf4>
    7148:	ldr	r3, [fp, #-24]	; 0xffffffe8
    714c:	cmn	r3, #1
    7150:	beq	718c <entityValueProcessor+0xd8>
    7154:	cmp	r3, #0
    7158:	beq	7184 <entityValueProcessor+0xd0>
    715c:	cmn	r3, #2
    7160:	beq	7194 <entityValueProcessor+0xe0>
    7164:	nop			; (mov r0, r0)
    7168:	ldr	r3, [fp, #-40]	; 0xffffffd8
    716c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    7170:	ldr	r1, [fp, #-20]	; 0xffffffec
    7174:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7178:	bl	ae78 <storeEntityValue>
    717c:	mov	r3, r0
    7180:	b	71a8 <entityValueProcessor+0xf4>
    7184:	mov	r3, #4
    7188:	b	71a8 <entityValueProcessor+0xf4>
    718c:	mov	r3, #5
    7190:	b	71a8 <entityValueProcessor+0xf4>
    7194:	mov	r3, #6
    7198:	b	71a8 <entityValueProcessor+0xf4>
    719c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    71a0:	str	r3, [fp, #-16]
    71a4:	b	70ec <entityValueProcessor+0x38>
    71a8:	mov	r0, r3
    71ac:	sub	sp, fp, #8
    71b0:	pop	{r4, fp, pc}

000071b4 <prologProcessor>:
    71b4:	push	{r4, fp, lr}
    71b8:	add	fp, sp, #8
    71bc:	sub	sp, sp, #44	; 0x2c
    71c0:	str	r0, [fp, #-24]	; 0xffffffe8
    71c4:	str	r1, [fp, #-28]	; 0xffffffe4
    71c8:	str	r2, [fp, #-32]	; 0xffffffe0
    71cc:	str	r3, [fp, #-36]	; 0xffffffdc
    71d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    71d4:	str	r3, [fp, #-20]	; 0xffffffec
    71d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    71dc:	ldr	r3, [r3, #152]	; 0x98
    71e0:	ldr	r4, [r3]
    71e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    71e8:	ldr	r0, [r3, #152]	; 0x98
    71ec:	sub	r3, fp, #20
    71f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    71f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    71f8:	blx	r4
    71fc:	str	r0, [fp, #-16]
    7200:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7204:	ldr	r1, [r3, #152]	; 0x98
    7208:	ldr	r3, [fp, #-20]	; 0xffffffec
    720c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7210:	ldrb	r2, [r2, #500]	; 0x1f4
    7214:	cmp	r2, #0
    7218:	moveq	r2, #1
    721c:	movne	r2, #0
    7220:	uxtb	r2, r2
    7224:	str	r2, [sp, #12]
    7228:	ldr	r2, [fp, #-36]	; 0xffffffdc
    722c:	str	r2, [sp, #8]
    7230:	str	r3, [sp, #4]
    7234:	ldr	r3, [fp, #-16]
    7238:	str	r3, [sp]
    723c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7240:	ldr	r2, [fp, #-28]	; 0xffffffe4
    7244:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7248:	bl	725c <doProlog>
    724c:	mov	r3, r0
    7250:	mov	r0, r3
    7254:	sub	sp, fp, #8
    7258:	pop	{r4, fp, pc}

0000725c <doProlog>:
    725c:	push	{r4, r5, fp, lr}
    7260:	add	fp, sp, #12
    7264:	sub	sp, sp, #192	; 0xc0
    7268:	str	r0, [fp, #-168]	; 0xffffff58
    726c:	str	r1, [fp, #-172]	; 0xffffff54
    7270:	str	r2, [fp, #-176]	; 0xffffff50
    7274:	str	r3, [fp, #-180]	; 0xffffff4c
    7278:	ldr	r3, [fp, #-168]	; 0xffffff58
    727c:	ldr	r3, [r3, #364]	; 0x16c
    7280:	str	r3, [fp, #-40]	; 0xffffffd8
    7284:	ldr	r3, [fp, #-168]	; 0xffffff58
    7288:	ldr	r2, [r3, #152]	; 0x98
    728c:	ldr	r3, [fp, #-172]	; 0xffffff54
    7290:	cmp	r2, r3
    7294:	bne	72b4 <doProlog+0x58>
    7298:	ldr	r3, [fp, #-168]	; 0xffffff58
    729c:	add	r3, r3, #296	; 0x128
    72a0:	str	r3, [fp, #-16]
    72a4:	ldr	r3, [fp, #-168]	; 0xffffff58
    72a8:	add	r3, r3, #300	; 0x12c
    72ac:	str	r3, [fp, #-20]	; 0xffffffec
    72b0:	b	72d0 <doProlog+0x74>
    72b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    72b8:	ldr	r3, [r3, #308]	; 0x134
    72bc:	str	r3, [fp, #-16]
    72c0:	ldr	r3, [fp, #-168]	; 0xffffff58
    72c4:	ldr	r3, [r3, #308]	; 0x134
    72c8:	add	r3, r3, #4
    72cc:	str	r3, [fp, #-20]	; 0xffffffec
    72d0:	mov	r3, #1
    72d4:	strb	r3, [fp, #-25]	; 0xffffffe7
    72d8:	ldr	r3, [fp, #-16]
    72dc:	ldr	r2, [fp, #-176]	; 0xffffff50
    72e0:	str	r2, [r3]
    72e4:	ldr	r2, [fp, #8]
    72e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    72ec:	str	r2, [r3]
    72f0:	ldr	r3, [fp, #4]
    72f4:	cmp	r3, #0
    72f8:	bgt	7480 <doProlog+0x224>
    72fc:	ldrb	r3, [fp, #16]
    7300:	cmp	r3, #0
    7304:	beq	7328 <doProlog+0xcc>
    7308:	ldr	r3, [fp, #4]
    730c:	cmp	r3, #0
    7310:	beq	7328 <doProlog+0xcc>
    7314:	ldr	r3, [fp, #12]
    7318:	ldr	r2, [fp, #-176]	; 0xffffff50
    731c:	str	r2, [r3]
    7320:	mov	r3, #0
    7324:	b	9dbc <doProlog+0x2b60>
    7328:	ldr	r3, [fp, #4]
    732c:	add	r3, r3, #15
    7330:	cmp	r3, #15
    7334:	ldrls	pc, [pc, r3, lsl #2]
    7338:	b	7468 <doProlog+0x20c>
    733c:	.word	0x000073a0
    7340:	.word	0x00007468
    7344:	.word	0x00007468
    7348:	.word	0x00007468
    734c:	.word	0x00007468
    7350:	.word	0x00007468
    7354:	.word	0x00007468
    7358:	.word	0x00007468
    735c:	.word	0x00007468
    7360:	.word	0x00007468
    7364:	.word	0x00007468
    7368:	.word	0x000073b0
    736c:	.word	0x00007468
    7370:	.word	0x00007398
    7374:	.word	0x00007390
    7378:	.word	0x0000737c
    737c:	ldr	r2, [fp, #8]
    7380:	ldr	r3, [fp, #-16]
    7384:	str	r2, [r3]
    7388:	mov	r3, #4
    738c:	b	9dbc <doProlog+0x2b60>
    7390:	mov	r3, #5
    7394:	b	9dbc <doProlog+0x2b60>
    7398:	mov	r3, #6
    739c:	b	9dbc <doProlog+0x2b60>
    73a0:	ldr	r3, [fp, #4]
    73a4:	rsb	r3, r3, #0
    73a8:	str	r3, [fp, #4]
    73ac:	b	7480 <doProlog+0x224>
    73b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    73b4:	ldr	r2, [r3, #152]	; 0x98
    73b8:	ldr	r3, [fp, #-172]	; 0xffffff54
    73bc:	cmp	r2, r3
    73c0:	beq	73ec <doProlog+0x190>
    73c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    73c8:	ldr	r3, [r3, #308]	; 0x134
    73cc:	ldrb	r3, [r3, #20]
    73d0:	cmp	r3, #0
    73d4:	bne	73ec <doProlog+0x190>
    73d8:	ldr	r3, [fp, #12]
    73dc:	ldr	r2, [fp, #-176]	; 0xffffff50
    73e0:	str	r2, [r3]
    73e4:	mov	r3, #0
    73e8:	b	9dbc <doProlog+0x2b60>
    73ec:	ldr	r3, [fp, #-168]	; 0xffffff58
    73f0:	ldrb	r3, [r3, #504]	; 0x1f8
    73f4:	cmp	r3, #0
    73f8:	bne	7410 <doProlog+0x1b4>
    73fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7400:	ldr	r2, [r3, #152]	; 0x98
    7404:	ldr	r3, [fp, #-172]	; 0xffffff54
    7408:	cmp	r2, r3
    740c:	beq	7460 <doProlog+0x204>
    7410:	ldr	r3, [fp, #-168]	; 0xffffff58
    7414:	ldr	r4, [r3, #264]	; 0x108
    7418:	ldr	r3, [fp, #-168]	; 0xffffff58
    741c:	add	r0, r3, #264	; 0x108
    7420:	ldr	r3, [fp, #-172]	; 0xffffff54
    7424:	str	r3, [sp]
    7428:	ldr	r3, [fp, #-180]	; 0xffffff4c
    742c:	ldr	r2, [fp, #-180]	; 0xffffff4c
    7430:	mvn	r1, #3
    7434:	blx	r4
    7438:	mov	r3, r0
    743c:	cmn	r3, #1
    7440:	bne	744c <doProlog+0x1f0>
    7444:	mov	r3, #29
    7448:	b	9dbc <doProlog+0x2b60>
    744c:	ldr	r3, [fp, #12]
    7450:	ldr	r2, [fp, #-176]	; 0xffffff50
    7454:	str	r2, [r3]
    7458:	mov	r3, #0
    745c:	b	9dbc <doProlog+0x2b60>
    7460:	mov	r3, #3
    7464:	b	9dbc <doProlog+0x2b60>
    7468:	ldr	r3, [fp, #4]
    746c:	rsb	r3, r3, #0
    7470:	str	r3, [fp, #4]
    7474:	ldr	r3, [fp, #-180]	; 0xffffff4c
    7478:	str	r3, [fp, #8]
    747c:	nop			; (mov r0, r0)
    7480:	ldr	r3, [fp, #-168]	; 0xffffff58
    7484:	ldr	r4, [r3, #264]	; 0x108
    7488:	ldr	r3, [fp, #-168]	; 0xffffff58
    748c:	add	r0, r3, #264	; 0x108
    7490:	ldr	r2, [fp, #8]
    7494:	ldr	r3, [fp, #-172]	; 0xffffff54
    7498:	str	r3, [sp]
    749c:	mov	r3, r2
    74a0:	ldr	r2, [fp, #-176]	; 0xffffff50
    74a4:	ldr	r1, [fp, #4]
    74a8:	blx	r4
    74ac:	str	r0, [fp, #-44]	; 0xffffffd4
    74b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    74b4:	add	r3, r3, #1
    74b8:	cmp	r3, #61	; 0x3d
    74bc:	ldrls	pc, [pc, r3, lsl #2]
    74c0:	b	9d2c <doProlog+0x2ad0>
    74c4:	.word	0x00008f2c
    74c8:	.word	0x00009b74
    74cc:	.word	0x000075bc
    74d0:	.word	0x00007b4c
    74d4:	.word	0x00009b94
    74d8:	.word	0x00007600
    74dc:	.word	0x000084e8
    74e0:	.word	0x00007734
    74e4:	.word	0x00007680
    74e8:	.word	0x00007934
    74ec:	.word	0x000089b4
    74f0:	.word	0x00008b40
    74f4:	.word	0x00009bb0
    74f8:	.word	0x0000837c
    74fc:	.word	0x00008650
    7500:	.word	0x0000784c
    7504:	.word	0x00008750
    7508:	.word	0x00008818
    750c:	.word	0x00009bdc
    7510:	.word	0x00008c9c
    7514:	.word	0x00008de0
    7518:	.word	0x00008eb0
    751c:	.word	0x00008d1c
    7520:	.word	0x00007cf4
    7524:	.word	0x00007d54
    7528:	.word	0x00007d70
    752c:	.word	0x00007d8c
    7530:	.word	0x00007d9c
    7534:	.word	0x00007dac
    7538:	.word	0x00007dbc
    753c:	.word	0x00007dcc
    7540:	.word	0x00007ddc
    7544:	.word	0x00007e1c
    7548:	.word	0x00007e1c
    754c:	.word	0x00009bf8
    7550:	.word	0x00007cbc
    7554:	.word	0x00007ee4
    7558:	.word	0x00007ee4
    755c:	.word	0x000080f0
    7560:	.word	0x000080f0
    7564:	.word	0x00009c24
    7568:	.word	0x00009670
    756c:	.word	0x000096e8
    7570:	.word	0x000096e8
    7574:	.word	0x000097c8
    7578:	.word	0x00008fe0
    757c:	.word	0x000099d8
    7580:	.word	0x000099f0
    7584:	.word	0x000099e4
    7588:	.word	0x000099fc
    758c:	.word	0x00009238
    7590:	.word	0x000091c8
    7594:	.word	0x0000983c
    7598:	.word	0x00009854
    759c:	.word	0x00009848
    75a0:	.word	0x00009860
    75a4:	.word	0x00009b0c
    75a8:	.word	0x00009b40
    75ac:	.word	0x000076f0
    75b0:	.word	0x00008f58
    75b4:	.word	0x0000935c
    75b8:	.word	0x0000935c
    75bc:	ldr	r3, [fp, #8]
    75c0:	ldr	r2, [fp, #-176]	; 0xffffff50
    75c4:	mov	r1, #0
    75c8:	ldr	r0, [fp, #-168]	; 0xffffff58
    75cc:	bl	66b0 <processXmlDecl>
    75d0:	str	r0, [fp, #-48]	; 0xffffffd0
    75d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    75d8:	cmp	r3, #0
    75dc:	beq	75e8 <doProlog+0x38c>
    75e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    75e4:	b	9dbc <doProlog+0x2b60>
    75e8:	ldr	r3, [fp, #-168]	; 0xffffff58
    75ec:	ldr	r3, [r3, #152]	; 0x98
    75f0:	str	r3, [fp, #-172]	; 0xffffff54
    75f4:	mov	r3, #0
    75f8:	strb	r3, [fp, #-25]	; 0xffffffe7
    75fc:	b	9d2c <doProlog+0x2ad0>
    7600:	ldr	r3, [fp, #-168]	; 0xffffff58
    7604:	ldr	r3, [r3, #92]	; 0x5c
    7608:	cmp	r3, #0
    760c:	beq	7670 <doProlog+0x414>
    7610:	ldr	r3, [fp, #-168]	; 0xffffff58
    7614:	add	r0, r3, #432	; 0x1b0
    7618:	ldr	r3, [fp, #8]
    761c:	ldr	r2, [fp, #-176]	; 0xffffff50
    7620:	ldr	r1, [fp, #-172]	; 0xffffff54
    7624:	bl	e940 <poolStoreString>
    7628:	mov	r2, r0
    762c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7630:	str	r2, [r3, #328]	; 0x148
    7634:	ldr	r3, [fp, #-168]	; 0xffffff58
    7638:	ldr	r3, [r3, #328]	; 0x148
    763c:	cmp	r3, #0
    7640:	bne	764c <doProlog+0x3f0>
    7644:	mov	r3, #1
    7648:	b	9dbc <doProlog+0x2b60>
    764c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7650:	ldr	r2, [r3, #444]	; 0x1bc
    7654:	ldr	r3, [fp, #-168]	; 0xffffff58
    7658:	str	r2, [r3, #448]	; 0x1c0
    765c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7660:	mov	r2, #0
    7664:	str	r2, [r3, #336]	; 0x150
    7668:	mov	r3, #0
    766c:	strb	r3, [fp, #-25]	; 0xffffffe7
    7670:	ldr	r3, [fp, #-168]	; 0xffffff58
    7674:	mov	r2, #0
    7678:	str	r2, [r3, #332]	; 0x14c
    767c:	b	9d2c <doProlog+0x2ad0>
    7680:	ldr	r3, [fp, #-168]	; 0xffffff58
    7684:	ldr	r3, [r3, #92]	; 0x5c
    7688:	cmp	r3, #0
    768c:	beq	9c40 <doProlog+0x29e4>
    7690:	ldr	r3, [fp, #-168]	; 0xffffff58
    7694:	ldr	r4, [r3, #92]	; 0x5c
    7698:	ldr	r3, [fp, #-168]	; 0xffffff58
    769c:	ldr	r0, [r3, #4]
    76a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    76a4:	ldr	r1, [r3, #328]	; 0x148
    76a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    76ac:	ldr	r2, [r3, #332]	; 0x14c
    76b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    76b4:	ldr	ip, [r3, #336]	; 0x150
    76b8:	mov	r3, #1
    76bc:	str	r3, [sp]
    76c0:	mov	r3, ip
    76c4:	blx	r4
    76c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    76cc:	mov	r2, #0
    76d0:	str	r2, [r3, #328]	; 0x148
    76d4:	ldr	r3, [fp, #-168]	; 0xffffff58
    76d8:	add	r3, r3, #432	; 0x1b0
    76dc:	mov	r0, r3
    76e0:	bl	e4b4 <poolClear>
    76e4:	mov	r3, #0
    76e8:	strb	r3, [fp, #-25]	; 0xffffffe7
    76ec:	b	9c40 <doProlog+0x29e4>
    76f0:	ldr	r3, [fp, #8]
    76f4:	ldr	r2, [fp, #-176]	; 0xffffff50
    76f8:	mov	r1, #1
    76fc:	ldr	r0, [fp, #-168]	; 0xffffff58
    7700:	bl	66b0 <processXmlDecl>
    7704:	str	r0, [fp, #-52]	; 0xffffffcc
    7708:	ldr	r3, [fp, #-52]	; 0xffffffcc
    770c:	cmp	r3, #0
    7710:	beq	771c <doProlog+0x4c0>
    7714:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7718:	b	9dbc <doProlog+0x2b60>
    771c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7720:	ldr	r3, [r3, #152]	; 0x98
    7724:	str	r3, [fp, #-172]	; 0xffffff54
    7728:	mov	r3, #0
    772c:	strb	r3, [fp, #-25]	; 0xffffffe7
    7730:	b	9d2c <doProlog+0x2ad0>
    7734:	ldr	r3, [fp, #-168]	; 0xffffff58
    7738:	mov	r2, #0
    773c:	strb	r2, [r3, #505]	; 0x1f9
    7740:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7744:	add	r1, r3, #132	; 0x84
    7748:	mov	r3, #36	; 0x24
    774c:	ldr	r2, [pc, #4036]	; 8718 <doProlog+0x14bc>
    7750:	ldr	r0, [fp, #-168]	; 0xffffff58
    7754:	bl	dbf4 <lookup>
    7758:	mov	r2, r0
    775c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7760:	str	r2, [r3, #324]	; 0x144
    7764:	ldr	r3, [fp, #-168]	; 0xffffff58
    7768:	ldr	r3, [r3, #324]	; 0x144
    776c:	cmp	r3, #0
    7770:	bne	777c <doProlog+0x520>
    7774:	mov	r3, #1
    7778:	b	9dbc <doProlog+0x2b60>
    777c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7780:	mov	r2, #1
    7784:	strb	r2, [r3, #129]	; 0x81
    7788:	ldr	r3, [fp, #-168]	; 0xffffff58
    778c:	ldr	r3, [r3, #92]	; 0x5c
    7790:	cmp	r3, #0
    7794:	beq	784c <doProlog+0x5f0>
    7798:	ldr	r3, [fp, #-172]	; 0xffffff54
    779c:	ldr	r4, [r3, #56]	; 0x38
    77a0:	ldr	r2, [fp, #8]
    77a4:	ldr	r3, [fp, #-16]
    77a8:	ldr	r1, [fp, #-176]	; 0xffffff50
    77ac:	ldr	r0, [fp, #-172]	; 0xffffff54
    77b0:	blx	r4
    77b4:	mov	r3, r0
    77b8:	cmp	r3, #0
    77bc:	bne	77c8 <doProlog+0x56c>
    77c0:	mov	r3, #32
    77c4:	b	9dbc <doProlog+0x2b60>
    77c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    77cc:	add	r0, r3, #432	; 0x1b0
    77d0:	ldr	r3, [fp, #-172]	; 0xffffff54
    77d4:	ldr	r3, [r3, #68]	; 0x44
    77d8:	mov	r2, r3
    77dc:	ldr	r3, [fp, #-176]	; 0xffffff50
    77e0:	add	r1, r3, r2
    77e4:	ldr	r2, [fp, #8]
    77e8:	ldr	r3, [fp, #-172]	; 0xffffff54
    77ec:	ldr	r3, [r3, #68]	; 0x44
    77f0:	rsb	r3, r3, #0
    77f4:	add	r3, r2, r3
    77f8:	mov	r2, r1
    77fc:	ldr	r1, [fp, #-172]	; 0xffffff54
    7800:	bl	e940 <poolStoreString>
    7804:	str	r0, [fp, #-56]	; 0xffffffc8
    7808:	ldr	r3, [fp, #-56]	; 0xffffffc8
    780c:	cmp	r3, #0
    7810:	bne	781c <doProlog+0x5c0>
    7814:	mov	r3, #1
    7818:	b	9dbc <doProlog+0x2b60>
    781c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    7820:	bl	cc40 <normalizePublicId>
    7824:	ldr	r3, [fp, #-168]	; 0xffffff58
    7828:	ldr	r2, [r3, #444]	; 0x1bc
    782c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7830:	str	r2, [r3, #448]	; 0x1c0
    7834:	ldr	r3, [fp, #-168]	; 0xffffff58
    7838:	ldr	r2, [fp, #-56]	; 0xffffffc8
    783c:	str	r2, [r3, #336]	; 0x150
    7840:	mov	r3, #0
    7844:	strb	r3, [fp, #-25]	; 0xffffffe7
    7848:	b	787c <doProlog+0x620>
    784c:	ldr	r3, [fp, #-172]	; 0xffffff54
    7850:	ldr	r4, [r3, #56]	; 0x38
    7854:	ldr	r2, [fp, #8]
    7858:	ldr	r3, [fp, #-16]
    785c:	ldr	r1, [fp, #-176]	; 0xffffff50
    7860:	ldr	r0, [fp, #-172]	; 0xffffff54
    7864:	blx	r4
    7868:	mov	r3, r0
    786c:	cmp	r3, #0
    7870:	bne	787c <doProlog+0x620>
    7874:	mov	r3, #32
    7878:	b	9dbc <doProlog+0x2b60>
    787c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7880:	ldrb	r3, [r3, #128]	; 0x80
    7884:	cmp	r3, #0
    7888:	beq	9c48 <doProlog+0x29ec>
    788c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7890:	ldr	r3, [r3, #324]	; 0x144
    7894:	cmp	r3, #0
    7898:	beq	9c48 <doProlog+0x29ec>
    789c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    78a0:	add	r0, r3, #80	; 0x50
    78a4:	ldr	r3, [fp, #-172]	; 0xffffff54
    78a8:	ldr	r3, [r3, #68]	; 0x44
    78ac:	mov	r2, r3
    78b0:	ldr	r3, [fp, #-176]	; 0xffffff50
    78b4:	add	r1, r3, r2
    78b8:	ldr	r2, [fp, #8]
    78bc:	ldr	r3, [fp, #-172]	; 0xffffff54
    78c0:	ldr	r3, [r3, #68]	; 0x44
    78c4:	rsb	r3, r3, #0
    78c8:	add	r3, r2, r3
    78cc:	mov	r2, r1
    78d0:	ldr	r1, [fp, #-172]	; 0xffffff54
    78d4:	bl	e940 <poolStoreString>
    78d8:	str	r0, [fp, #-60]	; 0xffffffc4
    78dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    78e0:	cmp	r3, #0
    78e4:	bne	78f0 <doProlog+0x694>
    78e8:	mov	r3, #1
    78ec:	b	9dbc <doProlog+0x2b60>
    78f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    78f4:	bl	cc40 <normalizePublicId>
    78f8:	ldr	r3, [fp, #-168]	; 0xffffff58
    78fc:	ldr	r3, [r3, #324]	; 0x144
    7900:	ldr	r2, [fp, #-60]	; 0xffffffc4
    7904:	str	r2, [r3, #24]
    7908:	ldr	r3, [fp, #-40]	; 0xffffffd8
    790c:	ldr	r2, [r3, #92]	; 0x5c
    7910:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7914:	str	r2, [r3, #96]	; 0x60
    7918:	ldr	r3, [fp, #-168]	; 0xffffff58
    791c:	ldr	r3, [r3, #144]	; 0x90
    7920:	cmp	r3, #0
    7924:	beq	9c48 <doProlog+0x29ec>
    7928:	mov	r3, #0
    792c:	strb	r3, [fp, #-25]	; 0xffffffe7
    7930:	b	9c48 <doProlog+0x29ec>
    7934:	ldr	r3, [fp, #-168]	; 0xffffff58
    7938:	ldr	r3, [r3, #328]	; 0x148
    793c:	cmp	r3, #0
    7940:	beq	7994 <doProlog+0x738>
    7944:	ldr	r3, [fp, #-168]	; 0xffffff58
    7948:	ldr	r4, [r3, #92]	; 0x5c
    794c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7950:	ldr	r0, [r3, #4]
    7954:	ldr	r3, [fp, #-168]	; 0xffffff58
    7958:	ldr	r1, [r3, #328]	; 0x148
    795c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7960:	ldr	r2, [r3, #332]	; 0x14c
    7964:	ldr	r3, [fp, #-168]	; 0xffffff58
    7968:	ldr	ip, [r3, #336]	; 0x150
    796c:	mov	r3, #0
    7970:	str	r3, [sp]
    7974:	mov	r3, ip
    7978:	blx	r4
    797c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7980:	add	r3, r3, #432	; 0x1b0
    7984:	mov	r0, r3
    7988:	bl	e4b4 <poolClear>
    798c:	mov	r3, #0
    7990:	strb	r3, [fp, #-25]	; 0xffffffe7
    7994:	ldr	r3, [fp, #-168]	; 0xffffff58
    7998:	ldr	r3, [r3, #332]	; 0x14c
    799c:	cmp	r3, #0
    79a0:	bne	79b4 <doProlog+0x758>
    79a4:	ldr	r3, [fp, #-168]	; 0xffffff58
    79a8:	ldrb	r3, [r3, #505]	; 0x1f9
    79ac:	cmp	r3, #0
    79b0:	beq	7b18 <doProlog+0x8bc>
    79b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    79b8:	ldrb	r3, [r3, #129]	; 0x81
    79bc:	strb	r3, [fp, #-61]	; 0xffffffc3
    79c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    79c4:	mov	r2, #1
    79c8:	strb	r2, [r3, #129]	; 0x81
    79cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    79d0:	ldr	r3, [r3, #508]	; 0x1fc
    79d4:	cmp	r3, #0
    79d8:	beq	7b0c <doProlog+0x8b0>
    79dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    79e0:	ldr	r3, [r3, #120]	; 0x78
    79e4:	cmp	r3, #0
    79e8:	beq	7b0c <doProlog+0x8b0>
    79ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    79f0:	add	r1, r3, #132	; 0x84
    79f4:	mov	r3, #36	; 0x24
    79f8:	ldr	r2, [pc, #3352]	; 8718 <doProlog+0x14bc>
    79fc:	ldr	r0, [fp, #-168]	; 0xffffff58
    7a00:	bl	dbf4 <lookup>
    7a04:	str	r0, [fp, #-68]	; 0xffffffbc
    7a08:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7a0c:	cmp	r3, #0
    7a10:	bne	7a1c <doProlog+0x7c0>
    7a14:	mov	r3, #1
    7a18:	b	9dbc <doProlog+0x2b60>
    7a1c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a20:	ldrb	r3, [r3, #505]	; 0x1f9
    7a24:	cmp	r3, #0
    7a28:	beq	7a3c <doProlog+0x7e0>
    7a2c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a30:	ldr	r2, [r3, #368]	; 0x170
    7a34:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7a38:	str	r2, [r3, #20]
    7a3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7a40:	mov	r2, #0
    7a44:	strb	r2, [r3, #131]	; 0x83
    7a48:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a4c:	ldr	r4, [r3, #120]	; 0x78
    7a50:	ldr	r3, [fp, #-168]	; 0xffffff58
    7a54:	ldr	r0, [r3, #124]	; 0x7c
    7a58:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7a5c:	ldr	r2, [r3, #20]
    7a60:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7a64:	ldr	r1, [r3, #16]
    7a68:	ldr	r3, [fp, #-68]	; 0xffffffbc
    7a6c:	ldr	r3, [r3, #24]
    7a70:	str	r3, [sp]
    7a74:	mov	r3, r1
    7a78:	mov	r1, #0
    7a7c:	blx	r4
    7a80:	mov	r3, r0
    7a84:	cmp	r3, #0
    7a88:	bne	7a94 <doProlog+0x838>
    7a8c:	mov	r3, #21
    7a90:	b	9dbc <doProlog+0x2b60>
    7a94:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7a98:	ldrb	r3, [r3, #131]	; 0x83
    7a9c:	cmp	r3, #0
    7aa0:	beq	7af0 <doProlog+0x894>
    7aa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7aa8:	ldrb	r3, [r3, #130]	; 0x82
    7aac:	cmp	r3, #0
    7ab0:	bne	7b0c <doProlog+0x8b0>
    7ab4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ab8:	ldr	r3, [r3, #116]	; 0x74
    7abc:	cmp	r3, #0
    7ac0:	beq	7b0c <doProlog+0x8b0>
    7ac4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ac8:	ldr	r3, [r3, #116]	; 0x74
    7acc:	ldr	r2, [fp, #-168]	; 0xffffff58
    7ad0:	ldr	r2, [r2, #4]
    7ad4:	mov	r0, r2
    7ad8:	blx	r3
    7adc:	mov	r3, r0
    7ae0:	cmp	r3, #0
    7ae4:	bne	7b0c <doProlog+0x8b0>
    7ae8:	mov	r3, #22
    7aec:	b	9dbc <doProlog+0x2b60>
    7af0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7af4:	ldr	r3, [r3, #332]	; 0x14c
    7af8:	cmp	r3, #0
    7afc:	bne	7b0c <doProlog+0x8b0>
    7b00:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b04:	ldrb	r2, [fp, #-61]	; 0xffffffc3
    7b08:	strb	r2, [r3, #129]	; 0x81
    7b0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b10:	mov	r2, #0
    7b14:	strb	r2, [r3, #505]	; 0x1f9
    7b18:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b1c:	ldr	r3, [r3, #96]	; 0x60
    7b20:	cmp	r3, #0
    7b24:	beq	9c50 <doProlog+0x29f4>
    7b28:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b2c:	ldr	r3, [r3, #96]	; 0x60
    7b30:	ldr	r2, [fp, #-168]	; 0xffffff58
    7b34:	ldr	r2, [r2, #4]
    7b38:	mov	r0, r2
    7b3c:	blx	r3
    7b40:	mov	r3, #0
    7b44:	strb	r3, [fp, #-25]	; 0xffffffe7
    7b48:	b	9c50 <doProlog+0x29f4>
    7b4c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b50:	ldrb	r3, [r3, #505]	; 0x1f9
    7b54:	cmp	r3, #0
    7b58:	beq	7c94 <doProlog+0xa38>
    7b5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b60:	ldrb	r3, [r3, #129]	; 0x81
    7b64:	strb	r3, [fp, #-153]	; 0xffffff67
    7b68:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b6c:	mov	r2, #1
    7b70:	strb	r2, [r3, #129]	; 0x81
    7b74:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b78:	ldr	r3, [r3, #508]	; 0x1fc
    7b7c:	cmp	r3, #0
    7b80:	beq	7c94 <doProlog+0xa38>
    7b84:	ldr	r3, [fp, #-168]	; 0xffffff58
    7b88:	ldr	r3, [r3, #120]	; 0x78
    7b8c:	cmp	r3, #0
    7b90:	beq	7c94 <doProlog+0xa38>
    7b94:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7b98:	add	r1, r3, #132	; 0x84
    7b9c:	mov	r3, #36	; 0x24
    7ba0:	ldr	r2, [pc, #2928]	; 8718 <doProlog+0x14bc>
    7ba4:	ldr	r0, [fp, #-168]	; 0xffffff58
    7ba8:	bl	dbf4 <lookup>
    7bac:	str	r0, [fp, #-160]	; 0xffffff60
    7bb0:	ldr	r3, [fp, #-160]	; 0xffffff60
    7bb4:	cmp	r3, #0
    7bb8:	bne	7bc4 <doProlog+0x968>
    7bbc:	mov	r3, #1
    7bc0:	b	9dbc <doProlog+0x2b60>
    7bc4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7bc8:	ldr	r2, [r3, #368]	; 0x170
    7bcc:	ldr	r3, [fp, #-160]	; 0xffffff60
    7bd0:	str	r2, [r3, #20]
    7bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7bd8:	mov	r2, #0
    7bdc:	strb	r2, [r3, #131]	; 0x83
    7be0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7be4:	ldr	r4, [r3, #120]	; 0x78
    7be8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7bec:	ldr	r0, [r3, #124]	; 0x7c
    7bf0:	ldr	r3, [fp, #-160]	; 0xffffff60
    7bf4:	ldr	r2, [r3, #20]
    7bf8:	ldr	r3, [fp, #-160]	; 0xffffff60
    7bfc:	ldr	r1, [r3, #16]
    7c00:	ldr	r3, [fp, #-160]	; 0xffffff60
    7c04:	ldr	r3, [r3, #24]
    7c08:	str	r3, [sp]
    7c0c:	mov	r3, r1
    7c10:	mov	r1, #0
    7c14:	blx	r4
    7c18:	mov	r3, r0
    7c1c:	cmp	r3, #0
    7c20:	bne	7c2c <doProlog+0x9d0>
    7c24:	mov	r3, #21
    7c28:	b	9dbc <doProlog+0x2b60>
    7c2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7c30:	ldrb	r3, [r3, #131]	; 0x83
    7c34:	cmp	r3, #0
    7c38:	beq	7c88 <doProlog+0xa2c>
    7c3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7c40:	ldrb	r3, [r3, #130]	; 0x82
    7c44:	cmp	r3, #0
    7c48:	bne	7c94 <doProlog+0xa38>
    7c4c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c50:	ldr	r3, [r3, #116]	; 0x74
    7c54:	cmp	r3, #0
    7c58:	beq	7c94 <doProlog+0xa38>
    7c5c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c60:	ldr	r3, [r3, #116]	; 0x74
    7c64:	ldr	r2, [fp, #-168]	; 0xffffff58
    7c68:	ldr	r2, [r2, #4]
    7c6c:	mov	r0, r2
    7c70:	blx	r3
    7c74:	mov	r3, r0
    7c78:	cmp	r3, #0
    7c7c:	bne	7c94 <doProlog+0xa38>
    7c80:	mov	r3, #22
    7c84:	b	9dbc <doProlog+0x2b60>
    7c88:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7c8c:	ldrb	r2, [fp, #-153]	; 0xffffff67
    7c90:	strb	r2, [r3, #129]	; 0x81
    7c94:	ldr	r3, [fp, #-168]	; 0xffffff58
    7c98:	ldr	r2, [pc, #2684]	; 871c <doProlog+0x14c0>
    7c9c:	str	r2, [r3, #288]	; 0x120
    7ca0:	ldr	r3, [fp, #12]
    7ca4:	ldr	r2, [fp, #-180]	; 0xffffff4c
    7ca8:	ldr	r1, [fp, #-176]	; 0xffffff50
    7cac:	ldr	r0, [fp, #-168]	; 0xffffff58
    7cb0:	bl	2d28 <contentProcessor>
    7cb4:	mov	r3, r0
    7cb8:	b	9dbc <doProlog+0x2b60>
    7cbc:	ldr	r3, [fp, #8]
    7cc0:	ldr	r2, [fp, #-176]	; 0xffffff50
    7cc4:	ldr	r1, [fp, #-172]	; 0xffffff54
    7cc8:	ldr	r0, [fp, #-168]	; 0xffffff58
    7ccc:	bl	f3c4 <getElementType>
    7cd0:	mov	r2, r0
    7cd4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7cd8:	str	r2, [r3, #352]	; 0x160
    7cdc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ce0:	ldr	r3, [r3, #352]	; 0x160
    7ce4:	cmp	r3, #0
    7ce8:	bne	7dec <doProlog+0xb90>
    7cec:	mov	r3, #1
    7cf0:	b	9dbc <doProlog+0x2b60>
    7cf4:	ldr	r3, [fp, #8]
    7cf8:	ldr	r2, [fp, #-176]	; 0xffffff50
    7cfc:	ldr	r1, [fp, #-172]	; 0xffffff54
    7d00:	ldr	r0, [fp, #-168]	; 0xffffff58
    7d04:	bl	bd80 <getAttributeId>
    7d08:	mov	r2, r0
    7d0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d10:	str	r2, [r3, #356]	; 0x164
    7d14:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d18:	ldr	r3, [r3, #356]	; 0x164
    7d1c:	cmp	r3, #0
    7d20:	bne	7d2c <doProlog+0xad0>
    7d24:	mov	r3, #1
    7d28:	b	9dbc <doProlog+0x2b60>
    7d2c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d30:	mov	r2, #0
    7d34:	strb	r2, [r3, #360]	; 0x168
    7d38:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d3c:	mov	r2, #0
    7d40:	str	r2, [r3, #340]	; 0x154
    7d44:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d48:	mov	r2, #0
    7d4c:	strb	r2, [r3, #361]	; 0x169
    7d50:	b	7df0 <doProlog+0xb94>
    7d54:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d58:	mov	r2, #1
    7d5c:	strb	r2, [r3, #360]	; 0x168
    7d60:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d64:	ldr	r2, [pc, #2484]	; 8720 <doProlog+0x14c4>
    7d68:	str	r2, [r3, #340]	; 0x154
    7d6c:	b	7df0 <doProlog+0xb94>
    7d70:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d74:	mov	r2, #1
    7d78:	strb	r2, [r3, #361]	; 0x169
    7d7c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d80:	ldr	r2, [pc, #2460]	; 8724 <doProlog+0x14c8>
    7d84:	str	r2, [r3, #340]	; 0x154
    7d88:	b	7df0 <doProlog+0xb94>
    7d8c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7d90:	ldr	r2, [pc, #2448]	; 8728 <doProlog+0x14cc>
    7d94:	str	r2, [r3, #340]	; 0x154
    7d98:	b	7df0 <doProlog+0xb94>
    7d9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7da0:	ldr	r2, [pc, #2436]	; 872c <doProlog+0x14d0>
    7da4:	str	r2, [r3, #340]	; 0x154
    7da8:	b	7df0 <doProlog+0xb94>
    7dac:	ldr	r3, [fp, #-168]	; 0xffffff58
    7db0:	ldr	r2, [pc, #2424]	; 8730 <doProlog+0x14d4>
    7db4:	str	r2, [r3, #340]	; 0x154
    7db8:	b	7df0 <doProlog+0xb94>
    7dbc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7dc0:	ldr	r2, [pc, #2412]	; 8734 <doProlog+0x14d8>
    7dc4:	str	r2, [r3, #340]	; 0x154
    7dc8:	b	7df0 <doProlog+0xb94>
    7dcc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7dd0:	ldr	r2, [pc, #2400]	; 8738 <doProlog+0x14dc>
    7dd4:	str	r2, [r3, #340]	; 0x154
    7dd8:	b	7df0 <doProlog+0xb94>
    7ddc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7de0:	ldr	r2, [pc, #2388]	; 873c <doProlog+0x14e0>
    7de4:	str	r2, [r3, #340]	; 0x154
    7de8:	b	7df0 <doProlog+0xb94>
    7dec:	nop			; (mov r0, r0)
    7df0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7df4:	ldrb	r3, [r3, #128]	; 0x80
    7df8:	cmp	r3, #0
    7dfc:	beq	9c58 <doProlog+0x29fc>
    7e00:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e04:	ldr	r3, [r3, #140]	; 0x8c
    7e08:	cmp	r3, #0
    7e0c:	beq	9c58 <doProlog+0x29fc>
    7e10:	mov	r3, #0
    7e14:	strb	r3, [fp, #-25]	; 0xffffffe7
    7e18:	b	9c58 <doProlog+0x29fc>
    7e1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7e20:	ldrb	r3, [r3, #128]	; 0x80
    7e24:	cmp	r3, #0
    7e28:	beq	9c60 <doProlog+0x2a04>
    7e2c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e30:	ldr	r3, [r3, #140]	; 0x8c
    7e34:	cmp	r3, #0
    7e38:	beq	9c60 <doProlog+0x2a04>
    7e3c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e40:	ldr	r3, [r3, #340]	; 0x154
    7e44:	cmp	r3, #0
    7e48:	beq	7e58 <doProlog+0xbfc>
    7e4c:	ldr	r3, [pc, #2284]	; 8740 <doProlog+0x14e4>
    7e50:	str	r3, [fp, #-32]	; 0xffffffe0
    7e54:	b	7e74 <doProlog+0xc18>
    7e58:	ldr	r3, [fp, #-44]	; 0xffffffd4
    7e5c:	cmp	r3, #32
    7e60:	bne	7e6c <doProlog+0xc10>
    7e64:	ldr	r3, [pc, #2264]	; 8744 <doProlog+0x14e8>
    7e68:	b	7e70 <doProlog+0xc14>
    7e6c:	ldr	r3, [pc, #2260]	; 8748 <doProlog+0x14ec>
    7e70:	str	r3, [fp, #-32]	; 0xffffffe0
    7e74:	ldr	r3, [fp, #-168]	; 0xffffff58
    7e78:	add	r3, r3, #432	; 0x1b0
    7e7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    7e80:	mov	r0, r3
    7e84:	bl	e890 <poolAppendString>
    7e88:	mov	r3, r0
    7e8c:	cmp	r3, #0
    7e90:	bne	7e9c <doProlog+0xc40>
    7e94:	mov	r3, #1
    7e98:	b	9dbc <doProlog+0x2b60>
    7e9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ea0:	add	r0, r3, #432	; 0x1b0
    7ea4:	ldr	r3, [fp, #8]
    7ea8:	ldr	r2, [fp, #-176]	; 0xffffff50
    7eac:	ldr	r1, [fp, #-172]	; 0xffffff54
    7eb0:	bl	e618 <poolAppend>
    7eb4:	mov	r3, r0
    7eb8:	cmp	r3, #0
    7ebc:	bne	7ec8 <doProlog+0xc6c>
    7ec0:	mov	r3, #1
    7ec4:	b	9dbc <doProlog+0x2b60>
    7ec8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ecc:	ldr	r2, [r3, #448]	; 0x1c0
    7ed0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ed4:	str	r2, [r3, #340]	; 0x154
    7ed8:	mov	r3, #0
    7edc:	strb	r3, [fp, #-25]	; 0xffffffe7
    7ee0:	b	9c60 <doProlog+0x2a04>
    7ee4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7ee8:	ldrb	r3, [r3, #128]	; 0x80
    7eec:	cmp	r3, #0
    7ef0:	beq	9c68 <doProlog+0x2a0c>
    7ef4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ef8:	ldr	r0, [r3, #352]	; 0x160
    7efc:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f00:	ldr	r1, [r3, #356]	; 0x164
    7f04:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f08:	ldrb	r2, [r3, #360]	; 0x168
    7f0c:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f10:	ldrb	ip, [r3, #361]	; 0x169
    7f14:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f18:	str	r3, [sp, #4]
    7f1c:	mov	r3, #0
    7f20:	str	r3, [sp]
    7f24:	mov	r3, ip
    7f28:	bl	b934 <defineAttribute>
    7f2c:	mov	r3, r0
    7f30:	cmp	r3, #0
    7f34:	bne	7f40 <doProlog+0xce4>
    7f38:	mov	r3, #1
    7f3c:	b	9dbc <doProlog+0x2b60>
    7f40:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f44:	ldr	r3, [r3, #140]	; 0x8c
    7f48:	cmp	r3, #0
    7f4c:	beq	9c68 <doProlog+0x2a0c>
    7f50:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f54:	ldr	r3, [r3, #340]	; 0x154
    7f58:	cmp	r3, #0
    7f5c:	beq	9c68 <doProlog+0x2a0c>
    7f60:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f64:	ldr	r3, [r3, #340]	; 0x154
    7f68:	ldrb	r3, [r3]
    7f6c:	cmp	r3, #40	; 0x28
    7f70:	beq	7fa0 <doProlog+0xd44>
    7f74:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f78:	ldr	r3, [r3, #340]	; 0x154
    7f7c:	ldrb	r3, [r3]
    7f80:	cmp	r3, #78	; 0x4e
    7f84:	bne	8070 <doProlog+0xe14>
    7f88:	ldr	r3, [fp, #-168]	; 0xffffff58
    7f8c:	ldr	r3, [r3, #340]	; 0x154
    7f90:	add	r3, r3, #1
    7f94:	ldrb	r3, [r3]
    7f98:	cmp	r3, #79	; 0x4f
    7f9c:	bne	8070 <doProlog+0xe14>
    7fa0:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fa4:	ldr	r2, [r3, #444]	; 0x1bc
    7fa8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fac:	ldr	r3, [r3, #440]	; 0x1b8
    7fb0:	cmp	r2, r3
    7fb4:	bne	7fd4 <doProlog+0xd78>
    7fb8:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fbc:	add	r3, r3, #432	; 0x1b0
    7fc0:	mov	r0, r3
    7fc4:	bl	e9e8 <poolGrow>
    7fc8:	mov	r3, r0
    7fcc:	cmp	r3, #0
    7fd0:	beq	8068 <doProlog+0xe0c>
    7fd4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7fd8:	ldr	r3, [r3, #444]	; 0x1bc
    7fdc:	add	r1, r3, #1
    7fe0:	ldr	r2, [fp, #-168]	; 0xffffff58
    7fe4:	str	r1, [r2, #444]	; 0x1bc
    7fe8:	mov	r2, #41	; 0x29
    7fec:	strb	r2, [r3]
    7ff0:	nop			; (mov r0, r0)
    7ff4:	ldr	r3, [fp, #-168]	; 0xffffff58
    7ff8:	ldr	r2, [r3, #444]	; 0x1bc
    7ffc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8000:	ldr	r3, [r3, #440]	; 0x1b8
    8004:	cmp	r2, r3
    8008:	bne	8028 <doProlog+0xdcc>
    800c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8010:	add	r3, r3, #432	; 0x1b0
    8014:	mov	r0, r3
    8018:	bl	e9e8 <poolGrow>
    801c:	mov	r3, r0
    8020:	cmp	r3, #0
    8024:	beq	8068 <doProlog+0xe0c>
    8028:	ldr	r3, [fp, #-168]	; 0xffffff58
    802c:	ldr	r3, [r3, #444]	; 0x1bc
    8030:	add	r1, r3, #1
    8034:	ldr	r2, [fp, #-168]	; 0xffffff58
    8038:	str	r1, [r2, #444]	; 0x1bc
    803c:	mov	r2, #0
    8040:	strb	r2, [r3]
    8044:	ldr	r3, [fp, #-168]	; 0xffffff58
    8048:	ldr	r2, [r3, #448]	; 0x1c0
    804c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8050:	str	r2, [r3, #340]	; 0x154
    8054:	ldr	r3, [fp, #-168]	; 0xffffff58
    8058:	ldr	r2, [r3, #444]	; 0x1bc
    805c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8060:	str	r2, [r3, #448]	; 0x1c0
    8064:	b	8070 <doProlog+0xe14>
    8068:	mov	r3, #1
    806c:	b	9dbc <doProlog+0x2b60>
    8070:	ldr	r3, [fp, #-20]	; 0xffffffec
    8074:	ldr	r2, [fp, #-176]	; 0xffffff50
    8078:	str	r2, [r3]
    807c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8080:	ldr	r4, [r3, #140]	; 0x8c
    8084:	ldr	r3, [fp, #-168]	; 0xffffff58
    8088:	ldr	r0, [r3, #4]
    808c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8090:	ldr	r3, [r3, #352]	; 0x160
    8094:	ldr	r1, [r3]
    8098:	ldr	r3, [fp, #-168]	; 0xffffff58
    809c:	ldr	r3, [r3, #356]	; 0x164
    80a0:	ldr	r2, [r3]
    80a4:	ldr	r3, [fp, #-168]	; 0xffffff58
    80a8:	ldr	ip, [r3, #340]	; 0x154
    80ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    80b0:	cmp	r3, #36	; 0x24
    80b4:	moveq	r3, #1
    80b8:	movne	r3, #0
    80bc:	uxtb	r3, r3
    80c0:	str	r3, [sp, #4]
    80c4:	mov	r3, #0
    80c8:	str	r3, [sp]
    80cc:	mov	r3, ip
    80d0:	blx	r4
    80d4:	ldr	r3, [fp, #-168]	; 0xffffff58
    80d8:	add	r3, r3, #432	; 0x1b0
    80dc:	mov	r0, r3
    80e0:	bl	e4b4 <poolClear>
    80e4:	mov	r3, #0
    80e8:	strb	r3, [fp, #-25]	; 0xffffffe7
    80ec:	b	9c68 <doProlog+0x2a0c>
    80f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    80f4:	ldrb	r3, [r3, #128]	; 0x80
    80f8:	cmp	r3, #0
    80fc:	beq	9c70 <doProlog+0x2a14>
    8100:	ldr	r3, [fp, #-168]	; 0xffffff58
    8104:	ldrb	r1, [r3, #360]	; 0x168
    8108:	ldr	r3, [fp, #-172]	; 0xffffff54
    810c:	ldr	r3, [r3, #68]	; 0x44
    8110:	mov	r2, r3
    8114:	ldr	r3, [fp, #-176]	; 0xffffff50
    8118:	add	r0, r3, r2
    811c:	ldr	r2, [fp, #8]
    8120:	ldr	r3, [fp, #-172]	; 0xffffff54
    8124:	ldr	r3, [r3, #68]	; 0x44
    8128:	rsb	r3, r3, #0
    812c:	add	r3, r2, r3
    8130:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8134:	add	r2, r2, #80	; 0x50
    8138:	str	r2, [sp, #4]
    813c:	str	r3, [sp]
    8140:	mov	r3, r0
    8144:	mov	r2, r1
    8148:	ldr	r1, [fp, #-172]	; 0xffffff54
    814c:	ldr	r0, [fp, #-168]	; 0xffffff58
    8150:	bl	a5f8 <storeAttributeValue>
    8154:	str	r0, [fp, #-72]	; 0xffffffb8
    8158:	ldr	r3, [fp, #-72]	; 0xffffffb8
    815c:	cmp	r3, #0
    8160:	beq	816c <doProlog+0xf10>
    8164:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8168:	b	9dbc <doProlog+0x2b60>
    816c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8170:	ldr	r3, [r3, #96]	; 0x60
    8174:	str	r3, [fp, #-76]	; 0xffffffb4
    8178:	ldr	r3, [fp, #-40]	; 0xffffffd8
    817c:	ldr	r2, [r3, #92]	; 0x5c
    8180:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8184:	str	r2, [r3, #96]	; 0x60
    8188:	ldr	r3, [fp, #-168]	; 0xffffff58
    818c:	ldr	r0, [r3, #352]	; 0x160
    8190:	ldr	r3, [fp, #-168]	; 0xffffff58
    8194:	ldr	r1, [r3, #356]	; 0x164
    8198:	ldr	r3, [fp, #-168]	; 0xffffff58
    819c:	ldrb	r2, [r3, #360]	; 0x168
    81a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    81a4:	str	r3, [sp, #4]
    81a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    81ac:	str	r3, [sp]
    81b0:	mov	r3, #0
    81b4:	bl	b934 <defineAttribute>
    81b8:	mov	r3, r0
    81bc:	cmp	r3, #0
    81c0:	bne	81cc <doProlog+0xf70>
    81c4:	mov	r3, #1
    81c8:	b	9dbc <doProlog+0x2b60>
    81cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    81d0:	ldr	r3, [r3, #140]	; 0x8c
    81d4:	cmp	r3, #0
    81d8:	beq	9c70 <doProlog+0x2a14>
    81dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    81e0:	ldr	r3, [r3, #340]	; 0x154
    81e4:	cmp	r3, #0
    81e8:	beq	9c70 <doProlog+0x2a14>
    81ec:	ldr	r3, [fp, #-168]	; 0xffffff58
    81f0:	ldr	r3, [r3, #340]	; 0x154
    81f4:	ldrb	r3, [r3]
    81f8:	cmp	r3, #40	; 0x28
    81fc:	beq	822c <doProlog+0xfd0>
    8200:	ldr	r3, [fp, #-168]	; 0xffffff58
    8204:	ldr	r3, [r3, #340]	; 0x154
    8208:	ldrb	r3, [r3]
    820c:	cmp	r3, #78	; 0x4e
    8210:	bne	82fc <doProlog+0x10a0>
    8214:	ldr	r3, [fp, #-168]	; 0xffffff58
    8218:	ldr	r3, [r3, #340]	; 0x154
    821c:	add	r3, r3, #1
    8220:	ldrb	r3, [r3]
    8224:	cmp	r3, #79	; 0x4f
    8228:	bne	82fc <doProlog+0x10a0>
    822c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8230:	ldr	r2, [r3, #444]	; 0x1bc
    8234:	ldr	r3, [fp, #-168]	; 0xffffff58
    8238:	ldr	r3, [r3, #440]	; 0x1b8
    823c:	cmp	r2, r3
    8240:	bne	8260 <doProlog+0x1004>
    8244:	ldr	r3, [fp, #-168]	; 0xffffff58
    8248:	add	r3, r3, #432	; 0x1b0
    824c:	mov	r0, r3
    8250:	bl	e9e8 <poolGrow>
    8254:	mov	r3, r0
    8258:	cmp	r3, #0
    825c:	beq	82f4 <doProlog+0x1098>
    8260:	ldr	r3, [fp, #-168]	; 0xffffff58
    8264:	ldr	r3, [r3, #444]	; 0x1bc
    8268:	add	r1, r3, #1
    826c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8270:	str	r1, [r2, #444]	; 0x1bc
    8274:	mov	r2, #41	; 0x29
    8278:	strb	r2, [r3]
    827c:	nop			; (mov r0, r0)
    8280:	ldr	r3, [fp, #-168]	; 0xffffff58
    8284:	ldr	r2, [r3, #444]	; 0x1bc
    8288:	ldr	r3, [fp, #-168]	; 0xffffff58
    828c:	ldr	r3, [r3, #440]	; 0x1b8
    8290:	cmp	r2, r3
    8294:	bne	82b4 <doProlog+0x1058>
    8298:	ldr	r3, [fp, #-168]	; 0xffffff58
    829c:	add	r3, r3, #432	; 0x1b0
    82a0:	mov	r0, r3
    82a4:	bl	e9e8 <poolGrow>
    82a8:	mov	r3, r0
    82ac:	cmp	r3, #0
    82b0:	beq	82f4 <doProlog+0x1098>
    82b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    82b8:	ldr	r3, [r3, #444]	; 0x1bc
    82bc:	add	r1, r3, #1
    82c0:	ldr	r2, [fp, #-168]	; 0xffffff58
    82c4:	str	r1, [r2, #444]	; 0x1bc
    82c8:	mov	r2, #0
    82cc:	strb	r2, [r3]
    82d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    82d4:	ldr	r2, [r3, #448]	; 0x1c0
    82d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    82dc:	str	r2, [r3, #340]	; 0x154
    82e0:	ldr	r3, [fp, #-168]	; 0xffffff58
    82e4:	ldr	r2, [r3, #444]	; 0x1bc
    82e8:	ldr	r3, [fp, #-168]	; 0xffffff58
    82ec:	str	r2, [r3, #448]	; 0x1c0
    82f0:	b	82fc <doProlog+0x10a0>
    82f4:	mov	r3, #1
    82f8:	b	9dbc <doProlog+0x2b60>
    82fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    8300:	ldr	r2, [fp, #-176]	; 0xffffff50
    8304:	str	r2, [r3]
    8308:	ldr	r3, [fp, #-168]	; 0xffffff58
    830c:	ldr	r4, [r3, #140]	; 0x8c
    8310:	ldr	r3, [fp, #-168]	; 0xffffff58
    8314:	ldr	r0, [r3, #4]
    8318:	ldr	r3, [fp, #-168]	; 0xffffff58
    831c:	ldr	r3, [r3, #352]	; 0x160
    8320:	ldr	r1, [r3]
    8324:	ldr	r3, [fp, #-168]	; 0xffffff58
    8328:	ldr	r3, [r3, #356]	; 0x164
    832c:	ldr	r2, [r3]
    8330:	ldr	r3, [fp, #-168]	; 0xffffff58
    8334:	ldr	ip, [r3, #340]	; 0x154
    8338:	ldr	r3, [fp, #-44]	; 0xffffffd4
    833c:	cmp	r3, #38	; 0x26
    8340:	moveq	r3, #1
    8344:	movne	r3, #0
    8348:	uxtb	r3, r3
    834c:	str	r3, [sp, #4]
    8350:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8354:	str	r3, [sp]
    8358:	mov	r3, ip
    835c:	blx	r4
    8360:	ldr	r3, [fp, #-168]	; 0xffffff58
    8364:	add	r3, r3, #432	; 0x1b0
    8368:	mov	r0, r3
    836c:	bl	e4b4 <poolClear>
    8370:	mov	r3, #0
    8374:	strb	r3, [fp, #-25]	; 0xffffffe7
    8378:	b	9c70 <doProlog+0x2a14>
    837c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8380:	ldrb	r3, [r3, #128]	; 0x80
    8384:	cmp	r3, #0
    8388:	beq	9c78 <doProlog+0x2a1c>
    838c:	ldr	r3, [fp, #-172]	; 0xffffff54
    8390:	ldr	r3, [r3, #68]	; 0x44
    8394:	mov	r2, r3
    8398:	ldr	r3, [fp, #-176]	; 0xffffff50
    839c:	add	r1, r3, r2
    83a0:	ldr	r2, [fp, #8]
    83a4:	ldr	r3, [fp, #-172]	; 0xffffff54
    83a8:	ldr	r3, [r3, #68]	; 0x44
    83ac:	rsb	r3, r3, #0
    83b0:	add	r3, r2, r3
    83b4:	mov	r2, r1
    83b8:	ldr	r1, [fp, #-172]	; 0xffffff54
    83bc:	ldr	r0, [fp, #-168]	; 0xffffff58
    83c0:	bl	ae78 <storeEntityValue>
    83c4:	str	r0, [fp, #-80]	; 0xffffffb0
    83c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    83cc:	ldr	r3, [r3, #324]	; 0x144
    83d0:	cmp	r3, #0
    83d4:	beq	84c4 <doProlog+0x1268>
    83d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    83dc:	ldr	r3, [r3, #324]	; 0x144
    83e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    83e4:	ldr	r2, [r2, #120]	; 0x78
    83e8:	str	r2, [r3, #4]
    83ec:	ldr	r3, [fp, #-168]	; 0xffffff58
    83f0:	ldr	r3, [r3, #324]	; 0x144
    83f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    83f8:	ldr	r2, [r2, #116]	; 0x74
    83fc:	mov	r1, r2
    8400:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8404:	ldr	r2, [r2, #120]	; 0x78
    8408:	sub	r2, r1, r2
    840c:	str	r2, [r3, #8]
    8410:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8414:	ldr	r2, [r3, #116]	; 0x74
    8418:	ldr	r3, [fp, #-40]	; 0xffffffd8
    841c:	str	r2, [r3, #120]	; 0x78
    8420:	ldr	r3, [fp, #-168]	; 0xffffff58
    8424:	ldr	r3, [r3, #144]	; 0x90
    8428:	cmp	r3, #0
    842c:	beq	84d4 <doProlog+0x1278>
    8430:	ldr	r3, [fp, #-20]	; 0xffffffec
    8434:	ldr	r2, [fp, #-176]	; 0xffffff50
    8438:	str	r2, [r3]
    843c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8440:	ldr	r4, [r3, #144]	; 0x90
    8444:	ldr	r3, [fp, #-168]	; 0xffffff58
    8448:	ldr	r0, [r3, #4]
    844c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8450:	ldr	r3, [r3, #324]	; 0x144
    8454:	ldr	ip, [r3]
    8458:	ldr	r3, [fp, #-168]	; 0xffffff58
    845c:	ldr	r3, [r3, #324]	; 0x144
    8460:	ldrb	r3, [r3, #33]	; 0x21
    8464:	mov	r5, r3
    8468:	ldr	r3, [fp, #-168]	; 0xffffff58
    846c:	ldr	r3, [r3, #324]	; 0x144
    8470:	ldr	lr, [r3, #4]
    8474:	ldr	r3, [fp, #-168]	; 0xffffff58
    8478:	ldr	r3, [r3, #324]	; 0x144
    847c:	ldr	r3, [r3, #8]
    8480:	ldr	r2, [fp, #-168]	; 0xffffff58
    8484:	ldr	r2, [r2, #368]	; 0x170
    8488:	mov	r1, #0
    848c:	str	r1, [sp, #16]
    8490:	mov	r1, #0
    8494:	str	r1, [sp, #12]
    8498:	mov	r1, #0
    849c:	str	r1, [sp, #8]
    84a0:	str	r2, [sp, #4]
    84a4:	str	r3, [sp]
    84a8:	mov	r3, lr
    84ac:	mov	r2, r5
    84b0:	mov	r1, ip
    84b4:	blx	r4
    84b8:	mov	r3, #0
    84bc:	strb	r3, [fp, #-25]	; 0xffffffe7
    84c0:	b	84d4 <doProlog+0x1278>
    84c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    84c8:	ldr	r2, [r3, #120]	; 0x78
    84cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    84d0:	str	r2, [r3, #116]	; 0x74
    84d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
    84d8:	cmp	r3, #0
    84dc:	beq	9c78 <doProlog+0x2a1c>
    84e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    84e4:	b	9dbc <doProlog+0x2b60>
    84e8:	ldr	r3, [fp, #-168]	; 0xffffff58
    84ec:	mov	r2, #0
    84f0:	strb	r2, [r3, #505]	; 0x1f9
    84f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    84f8:	mov	r2, #1
    84fc:	strb	r2, [r3, #129]	; 0x81
    8500:	ldr	r3, [fp, #-168]	; 0xffffff58
    8504:	ldr	r3, [r3, #92]	; 0x5c
    8508:	cmp	r3, #0
    850c:	beq	858c <doProlog+0x1330>
    8510:	ldr	r3, [fp, #-168]	; 0xffffff58
    8514:	add	r0, r3, #432	; 0x1b0
    8518:	ldr	r3, [fp, #-172]	; 0xffffff54
    851c:	ldr	r3, [r3, #68]	; 0x44
    8520:	mov	r2, r3
    8524:	ldr	r3, [fp, #-176]	; 0xffffff50
    8528:	add	r1, r3, r2
    852c:	ldr	r2, [fp, #8]
    8530:	ldr	r3, [fp, #-172]	; 0xffffff54
    8534:	ldr	r3, [r3, #68]	; 0x44
    8538:	rsb	r3, r3, #0
    853c:	add	r3, r2, r3
    8540:	mov	r2, r1
    8544:	ldr	r1, [fp, #-172]	; 0xffffff54
    8548:	bl	e940 <poolStoreString>
    854c:	mov	r2, r0
    8550:	ldr	r3, [fp, #-168]	; 0xffffff58
    8554:	str	r2, [r3, #332]	; 0x14c
    8558:	ldr	r3, [fp, #-168]	; 0xffffff58
    855c:	ldr	r3, [r3, #332]	; 0x14c
    8560:	cmp	r3, #0
    8564:	bne	8570 <doProlog+0x1314>
    8568:	mov	r3, #1
    856c:	b	9dbc <doProlog+0x2b60>
    8570:	ldr	r3, [fp, #-168]	; 0xffffff58
    8574:	ldr	r2, [r3, #444]	; 0x1bc
    8578:	ldr	r3, [fp, #-168]	; 0xffffff58
    857c:	str	r2, [r3, #448]	; 0x1c0
    8580:	mov	r3, #0
    8584:	strb	r3, [fp, #-25]	; 0xffffffe7
    8588:	b	8598 <doProlog+0x133c>
    858c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8590:	ldr	r2, [pc, #384]	; 8718 <doProlog+0x14bc>
    8594:	str	r2, [r3, #332]	; 0x14c
    8598:	ldr	r3, [fp, #-40]	; 0xffffffd8
    859c:	ldrb	r3, [r3, #130]	; 0x82
    85a0:	cmp	r3, #0
    85a4:	bne	85f4 <doProlog+0x1398>
    85a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    85ac:	ldr	r3, [r3, #508]	; 0x1fc
    85b0:	cmp	r3, #0
    85b4:	bne	85f4 <doProlog+0x1398>
    85b8:	ldr	r3, [fp, #-168]	; 0xffffff58
    85bc:	ldr	r3, [r3, #116]	; 0x74
    85c0:	cmp	r3, #0
    85c4:	beq	85f4 <doProlog+0x1398>
    85c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    85cc:	ldr	r3, [r3, #116]	; 0x74
    85d0:	ldr	r2, [fp, #-168]	; 0xffffff58
    85d4:	ldr	r2, [r2, #4]
    85d8:	mov	r0, r2
    85dc:	blx	r3
    85e0:	mov	r3, r0
    85e4:	cmp	r3, #0
    85e8:	bne	85f4 <doProlog+0x1398>
    85ec:	mov	r3, #22
    85f0:	b	9dbc <doProlog+0x2b60>
    85f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    85f8:	ldr	r3, [r3, #324]	; 0x144
    85fc:	cmp	r3, #0
    8600:	bne	8650 <doProlog+0x13f4>
    8604:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8608:	add	r1, r3, #132	; 0x84
    860c:	mov	r3, #36	; 0x24
    8610:	ldr	r2, [pc, #256]	; 8718 <doProlog+0x14bc>
    8614:	ldr	r0, [fp, #-168]	; 0xffffff58
    8618:	bl	dbf4 <lookup>
    861c:	mov	r2, r0
    8620:	ldr	r3, [fp, #-168]	; 0xffffff58
    8624:	str	r2, [r3, #324]	; 0x144
    8628:	ldr	r3, [fp, #-168]	; 0xffffff58
    862c:	ldr	r3, [r3, #324]	; 0x144
    8630:	cmp	r3, #0
    8634:	bne	8640 <doProlog+0x13e4>
    8638:	mov	r3, #1
    863c:	b	9dbc <doProlog+0x2b60>
    8640:	ldr	r3, [fp, #-168]	; 0xffffff58
    8644:	ldr	r3, [r3, #324]	; 0x144
    8648:	mov	r2, #0
    864c:	str	r2, [r3, #24]
    8650:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8654:	ldrb	r3, [r3, #128]	; 0x80
    8658:	cmp	r3, #0
    865c:	beq	9c80 <doProlog+0x2a24>
    8660:	ldr	r3, [fp, #-168]	; 0xffffff58
    8664:	ldr	r3, [r3, #324]	; 0x144
    8668:	cmp	r3, #0
    866c:	beq	9c80 <doProlog+0x2a24>
    8670:	ldr	r3, [fp, #-168]	; 0xffffff58
    8674:	ldr	r4, [r3, #324]	; 0x144
    8678:	ldr	r3, [fp, #-40]	; 0xffffffd8
    867c:	add	r0, r3, #80	; 0x50
    8680:	ldr	r3, [fp, #-172]	; 0xffffff54
    8684:	ldr	r3, [r3, #68]	; 0x44
    8688:	mov	r2, r3
    868c:	ldr	r3, [fp, #-176]	; 0xffffff50
    8690:	add	r1, r3, r2
    8694:	ldr	r2, [fp, #8]
    8698:	ldr	r3, [fp, #-172]	; 0xffffff54
    869c:	ldr	r3, [r3, #68]	; 0x44
    86a0:	rsb	r3, r3, #0
    86a4:	add	r3, r2, r3
    86a8:	mov	r2, r1
    86ac:	ldr	r1, [fp, #-172]	; 0xffffff54
    86b0:	bl	e940 <poolStoreString>
    86b4:	mov	r3, r0
    86b8:	str	r3, [r4, #16]
    86bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    86c0:	ldr	r3, [r3, #324]	; 0x144
    86c4:	ldr	r3, [r3, #16]
    86c8:	cmp	r3, #0
    86cc:	bne	86d8 <doProlog+0x147c>
    86d0:	mov	r3, #1
    86d4:	b	9dbc <doProlog+0x2b60>
    86d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    86dc:	ldr	r3, [r3, #324]	; 0x144
    86e0:	ldr	r2, [fp, #-168]	; 0xffffff58
    86e4:	ldr	r2, [r2, #368]	; 0x170
    86e8:	str	r2, [r3, #20]
    86ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    86f0:	ldr	r2, [r3, #92]	; 0x5c
    86f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    86f8:	str	r2, [r3, #96]	; 0x60
    86fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8700:	ldr	r3, [r3, #144]	; 0x90
    8704:	cmp	r3, #0
    8708:	beq	9c80 <doProlog+0x2a24>
    870c:	mov	r3, #0
    8710:	strb	r3, [fp, #-25]	; 0xffffffe7
    8714:	b	9c80 <doProlog+0x2a24>
    8718:	.word	0x00000784
    871c:	.word	0x00000000
    8720:	.word	0x00000788
    8724:	.word	0x00000790
    8728:	.word	0x00000794
    872c:	.word	0x0000079c
    8730:	.word	0x000007a4
    8734:	.word	0x000007ac
    8738:	.word	0x000007b8
    873c:	.word	0x000007c0
    8740:	.word	0x000007cc
    8744:	.word	0x000007d0
    8748:	.word	0x000007dc
    874c:	.word	0x00000000
    8750:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8754:	ldrb	r3, [r3, #128]	; 0x80
    8758:	cmp	r3, #0
    875c:	beq	9c88 <doProlog+0x2a2c>
    8760:	ldr	r3, [fp, #-168]	; 0xffffff58
    8764:	ldr	r3, [r3, #324]	; 0x144
    8768:	cmp	r3, #0
    876c:	beq	9c88 <doProlog+0x2a2c>
    8770:	ldr	r3, [fp, #-168]	; 0xffffff58
    8774:	ldr	r3, [r3, #144]	; 0x90
    8778:	cmp	r3, #0
    877c:	beq	9c88 <doProlog+0x2a2c>
    8780:	ldr	r3, [fp, #-20]	; 0xffffffec
    8784:	ldr	r2, [fp, #-176]	; 0xffffff50
    8788:	str	r2, [r3]
    878c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8790:	ldr	r4, [r3, #144]	; 0x90
    8794:	ldr	r3, [fp, #-168]	; 0xffffff58
    8798:	ldr	ip, [r3, #4]
    879c:	ldr	r3, [fp, #-168]	; 0xffffff58
    87a0:	ldr	r3, [r3, #324]	; 0x144
    87a4:	ldr	lr, [r3]
    87a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    87ac:	ldr	r3, [r3, #324]	; 0x144
    87b0:	ldrb	r3, [r3, #33]	; 0x21
    87b4:	mov	r5, r3
    87b8:	ldr	r3, [fp, #-168]	; 0xffffff58
    87bc:	ldr	r3, [r3, #324]	; 0x144
    87c0:	ldr	r3, [r3, #20]
    87c4:	ldr	r2, [fp, #-168]	; 0xffffff58
    87c8:	ldr	r2, [r2, #324]	; 0x144
    87cc:	ldr	r2, [r2, #16]
    87d0:	ldr	r1, [fp, #-168]	; 0xffffff58
    87d4:	ldr	r1, [r1, #324]	; 0x144
    87d8:	ldr	r1, [r1, #24]
    87dc:	mov	r0, #0
    87e0:	str	r0, [sp, #16]
    87e4:	str	r1, [sp, #12]
    87e8:	str	r2, [sp, #8]
    87ec:	str	r3, [sp, #4]
    87f0:	mov	r3, #0
    87f4:	str	r3, [sp]
    87f8:	mov	r3, #0
    87fc:	mov	r2, r5
    8800:	mov	r1, lr
    8804:	mov	r0, ip
    8808:	blx	r4
    880c:	mov	r3, #0
    8810:	strb	r3, [fp, #-25]	; 0xffffffe7
    8814:	b	9c88 <doProlog+0x2a2c>
    8818:	ldr	r3, [fp, #-40]	; 0xffffffd8
    881c:	ldrb	r3, [r3, #128]	; 0x80
    8820:	cmp	r3, #0
    8824:	beq	9c90 <doProlog+0x2a34>
    8828:	ldr	r3, [fp, #-168]	; 0xffffff58
    882c:	ldr	r3, [r3, #324]	; 0x144
    8830:	cmp	r3, #0
    8834:	beq	9c90 <doProlog+0x2a34>
    8838:	ldr	r3, [fp, #-168]	; 0xffffff58
    883c:	ldr	r4, [r3, #324]	; 0x144
    8840:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8844:	add	r0, r3, #80	; 0x50
    8848:	ldr	r3, [fp, #8]
    884c:	ldr	r2, [fp, #-176]	; 0xffffff50
    8850:	ldr	r1, [fp, #-172]	; 0xffffff54
    8854:	bl	e940 <poolStoreString>
    8858:	mov	r3, r0
    885c:	str	r3, [r4, #28]
    8860:	ldr	r3, [fp, #-168]	; 0xffffff58
    8864:	ldr	r3, [r3, #324]	; 0x144
    8868:	ldr	r3, [r3, #28]
    886c:	cmp	r3, #0
    8870:	bne	887c <doProlog+0x1620>
    8874:	mov	r3, #1
    8878:	b	9dbc <doProlog+0x2b60>
    887c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8880:	ldr	r2, [r3, #92]	; 0x5c
    8884:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8888:	str	r2, [r3, #96]	; 0x60
    888c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8890:	ldr	r3, [r3, #100]	; 0x64
    8894:	cmp	r3, #0
    8898:	beq	8914 <doProlog+0x16b8>
    889c:	ldr	r3, [fp, #-20]	; 0xffffffec
    88a0:	ldr	r2, [fp, #-176]	; 0xffffff50
    88a4:	str	r2, [r3]
    88a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    88ac:	ldr	r4, [r3, #100]	; 0x64
    88b0:	ldr	r3, [fp, #-168]	; 0xffffff58
    88b4:	ldr	r0, [r3, #4]
    88b8:	ldr	r3, [fp, #-168]	; 0xffffff58
    88bc:	ldr	r3, [r3, #324]	; 0x144
    88c0:	ldr	r1, [r3]
    88c4:	ldr	r3, [fp, #-168]	; 0xffffff58
    88c8:	ldr	r3, [r3, #324]	; 0x144
    88cc:	ldr	ip, [r3, #20]
    88d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    88d4:	ldr	r3, [r3, #324]	; 0x144
    88d8:	ldr	lr, [r3, #16]
    88dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    88e0:	ldr	r3, [r3, #324]	; 0x144
    88e4:	ldr	r3, [r3, #24]
    88e8:	ldr	r2, [fp, #-168]	; 0xffffff58
    88ec:	ldr	r2, [r2, #324]	; 0x144
    88f0:	ldr	r2, [r2, #28]
    88f4:	str	r2, [sp, #4]
    88f8:	str	r3, [sp]
    88fc:	mov	r3, lr
    8900:	mov	r2, ip
    8904:	blx	r4
    8908:	mov	r3, #0
    890c:	strb	r3, [fp, #-25]	; 0xffffffe7
    8910:	b	9c90 <doProlog+0x2a34>
    8914:	ldr	r3, [fp, #-168]	; 0xffffff58
    8918:	ldr	r3, [r3, #144]	; 0x90
    891c:	cmp	r3, #0
    8920:	beq	9c90 <doProlog+0x2a34>
    8924:	ldr	r3, [fp, #-20]	; 0xffffffec
    8928:	ldr	r2, [fp, #-176]	; 0xffffff50
    892c:	str	r2, [r3]
    8930:	ldr	r3, [fp, #-168]	; 0xffffff58
    8934:	ldr	r4, [r3, #144]	; 0x90
    8938:	ldr	r3, [fp, #-168]	; 0xffffff58
    893c:	ldr	ip, [r3, #4]
    8940:	ldr	r3, [fp, #-168]	; 0xffffff58
    8944:	ldr	r3, [r3, #324]	; 0x144
    8948:	ldr	lr, [r3]
    894c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8950:	ldr	r3, [r3, #324]	; 0x144
    8954:	ldr	r3, [r3, #20]
    8958:	ldr	r2, [fp, #-168]	; 0xffffff58
    895c:	ldr	r2, [r2, #324]	; 0x144
    8960:	ldr	r2, [r2, #16]
    8964:	ldr	r1, [fp, #-168]	; 0xffffff58
    8968:	ldr	r1, [r1, #324]	; 0x144
    896c:	ldr	r1, [r1, #24]
    8970:	ldr	r0, [fp, #-168]	; 0xffffff58
    8974:	ldr	r0, [r0, #324]	; 0x144
    8978:	ldr	r0, [r0, #28]
    897c:	str	r0, [sp, #16]
    8980:	str	r1, [sp, #12]
    8984:	str	r2, [sp, #8]
    8988:	str	r3, [sp, #4]
    898c:	mov	r3, #0
    8990:	str	r3, [sp]
    8994:	mov	r3, #0
    8998:	mov	r2, #0
    899c:	mov	r1, lr
    89a0:	mov	r0, ip
    89a4:	blx	r4
    89a8:	mov	r3, #0
    89ac:	strb	r3, [fp, #-25]	; 0xffffffe7
    89b0:	b	9c90 <doProlog+0x2a34>
    89b4:	ldr	r3, [fp, #-172]	; 0xffffff54
    89b8:	ldr	r3, [r3, #48]	; 0x30
    89bc:	ldr	r2, [fp, #8]
    89c0:	ldr	r1, [fp, #-176]	; 0xffffff50
    89c4:	ldr	r0, [fp, #-172]	; 0xffffff54
    89c8:	blx	r3
    89cc:	mov	r3, r0
    89d0:	cmp	r3, #0
    89d4:	beq	89e8 <doProlog+0x178c>
    89d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    89dc:	mov	r2, #0
    89e0:	str	r2, [r3, #324]	; 0x144
    89e4:	b	9d2c <doProlog+0x2ad0>
    89e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    89ec:	ldrb	r3, [r3, #128]	; 0x80
    89f0:	cmp	r3, #0
    89f4:	beq	8b20 <doProlog+0x18c4>
    89f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    89fc:	add	r0, r3, #80	; 0x50
    8a00:	ldr	r3, [fp, #8]
    8a04:	ldr	r2, [fp, #-176]	; 0xffffff50
    8a08:	ldr	r1, [fp, #-172]	; 0xffffff54
    8a0c:	bl	e940 <poolStoreString>
    8a10:	str	r0, [fp, #-84]	; 0xffffffac
    8a14:	ldr	r3, [fp, #-84]	; 0xffffffac
    8a18:	cmp	r3, #0
    8a1c:	bne	8a28 <doProlog+0x17cc>
    8a20:	mov	r3, #1
    8a24:	b	9dbc <doProlog+0x2b60>
    8a28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8a2c:	mov	r3, #36	; 0x24
    8a30:	ldr	r2, [fp, #-84]	; 0xffffffac
    8a34:	ldr	r0, [fp, #-168]	; 0xffffff58
    8a38:	bl	dbf4 <lookup>
    8a3c:	mov	r2, r0
    8a40:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a44:	str	r2, [r3, #324]	; 0x144
    8a48:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a4c:	ldr	r3, [r3, #324]	; 0x144
    8a50:	cmp	r3, #0
    8a54:	bne	8a60 <doProlog+0x1804>
    8a58:	mov	r3, #1
    8a5c:	b	9dbc <doProlog+0x2b60>
    8a60:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a64:	ldr	r3, [r3, #324]	; 0x144
    8a68:	ldr	r2, [r3]
    8a6c:	ldr	r3, [fp, #-84]	; 0xffffffac
    8a70:	cmp	r2, r3
    8a74:	beq	8a98 <doProlog+0x183c>
    8a78:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a7c:	ldr	r2, [r3, #96]	; 0x60
    8a80:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a84:	str	r2, [r3, #92]	; 0x5c
    8a88:	ldr	r3, [fp, #-168]	; 0xffffff58
    8a8c:	mov	r2, #0
    8a90:	str	r2, [r3, #324]	; 0x144
    8a94:	b	9c98 <doProlog+0x2a3c>
    8a98:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8a9c:	ldr	r2, [r3, #92]	; 0x5c
    8aa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8aa4:	str	r2, [r3, #96]	; 0x60
    8aa8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8aac:	ldr	r3, [r3, #324]	; 0x144
    8ab0:	mov	r2, #0
    8ab4:	str	r2, [r3, #24]
    8ab8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8abc:	ldr	r3, [r3, #324]	; 0x144
    8ac0:	mov	r2, #0
    8ac4:	strb	r2, [r3, #33]	; 0x21
    8ac8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8acc:	ldr	r3, [r3, #324]	; 0x144
    8ad0:	ldr	r2, [fp, #-168]	; 0xffffff58
    8ad4:	ldr	r2, [r2, #492]	; 0x1ec
    8ad8:	cmp	r2, #0
    8adc:	bne	8af8 <doProlog+0x189c>
    8ae0:	ldr	r2, [fp, #-168]	; 0xffffff58
    8ae4:	ldr	r2, [r2, #308]	; 0x134
    8ae8:	cmp	r2, #0
    8aec:	bne	8af8 <doProlog+0x189c>
    8af0:	mov	r2, #1
    8af4:	b	8afc <doProlog+0x18a0>
    8af8:	mov	r2, #0
    8afc:	uxtb	r2, r2
    8b00:	strb	r2, [r3, #34]	; 0x22
    8b04:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b08:	ldr	r3, [r3, #144]	; 0x90
    8b0c:	cmp	r3, #0
    8b10:	beq	9c98 <doProlog+0x2a3c>
    8b14:	mov	r3, #0
    8b18:	strb	r3, [fp, #-25]	; 0xffffffe7
    8b1c:	b	9c98 <doProlog+0x2a3c>
    8b20:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b24:	ldr	r2, [r3, #96]	; 0x60
    8b28:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b2c:	str	r2, [r3, #92]	; 0x5c
    8b30:	ldr	r3, [fp, #-168]	; 0xffffff58
    8b34:	mov	r2, #0
    8b38:	str	r2, [r3, #324]	; 0x144
    8b3c:	b	9c98 <doProlog+0x2a3c>
    8b40:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b44:	ldrb	r3, [r3, #128]	; 0x80
    8b48:	cmp	r3, #0
    8b4c:	beq	8c7c <doProlog+0x1a20>
    8b50:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b54:	add	r0, r3, #80	; 0x50
    8b58:	ldr	r3, [fp, #8]
    8b5c:	ldr	r2, [fp, #-176]	; 0xffffff50
    8b60:	ldr	r1, [fp, #-172]	; 0xffffff54
    8b64:	bl	e940 <poolStoreString>
    8b68:	str	r0, [fp, #-88]	; 0xffffffa8
    8b6c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8b70:	cmp	r3, #0
    8b74:	bne	8b80 <doProlog+0x1924>
    8b78:	mov	r3, #1
    8b7c:	b	9dbc <doProlog+0x2b60>
    8b80:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8b84:	add	r1, r3, #132	; 0x84
    8b88:	mov	r3, #36	; 0x24
    8b8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    8b90:	ldr	r0, [fp, #-168]	; 0xffffff58
    8b94:	bl	dbf4 <lookup>
    8b98:	mov	r2, r0
    8b9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ba0:	str	r2, [r3, #324]	; 0x144
    8ba4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ba8:	ldr	r3, [r3, #324]	; 0x144
    8bac:	cmp	r3, #0
    8bb0:	bne	8bbc <doProlog+0x1960>
    8bb4:	mov	r3, #1
    8bb8:	b	9dbc <doProlog+0x2b60>
    8bbc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8bc0:	ldr	r3, [r3, #324]	; 0x144
    8bc4:	ldr	r2, [r3]
    8bc8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8bcc:	cmp	r2, r3
    8bd0:	beq	8bf4 <doProlog+0x1998>
    8bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8bd8:	ldr	r2, [r3, #96]	; 0x60
    8bdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8be0:	str	r2, [r3, #92]	; 0x5c
    8be4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8be8:	mov	r2, #0
    8bec:	str	r2, [r3, #324]	; 0x144
    8bf0:	b	9ca0 <doProlog+0x2a44>
    8bf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8bf8:	ldr	r2, [r3, #92]	; 0x5c
    8bfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8c00:	str	r2, [r3, #96]	; 0x60
    8c04:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c08:	ldr	r3, [r3, #324]	; 0x144
    8c0c:	mov	r2, #0
    8c10:	str	r2, [r3, #24]
    8c14:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c18:	ldr	r3, [r3, #324]	; 0x144
    8c1c:	mov	r2, #1
    8c20:	strb	r2, [r3, #33]	; 0x21
    8c24:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c28:	ldr	r3, [r3, #324]	; 0x144
    8c2c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8c30:	ldr	r2, [r2, #492]	; 0x1ec
    8c34:	cmp	r2, #0
    8c38:	bne	8c54 <doProlog+0x19f8>
    8c3c:	ldr	r2, [fp, #-168]	; 0xffffff58
    8c40:	ldr	r2, [r2, #308]	; 0x134
    8c44:	cmp	r2, #0
    8c48:	bne	8c54 <doProlog+0x19f8>
    8c4c:	mov	r2, #1
    8c50:	b	8c58 <doProlog+0x19fc>
    8c54:	mov	r2, #0
    8c58:	uxtb	r2, r2
    8c5c:	strb	r2, [r3, #34]	; 0x22
    8c60:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c64:	ldr	r3, [r3, #144]	; 0x90
    8c68:	cmp	r3, #0
    8c6c:	beq	9ca0 <doProlog+0x2a44>
    8c70:	mov	r3, #0
    8c74:	strb	r3, [fp, #-25]	; 0xffffffe7
    8c78:	b	9ca0 <doProlog+0x2a44>
    8c7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8c80:	ldr	r2, [r3, #96]	; 0x60
    8c84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8c88:	str	r2, [r3, #92]	; 0x5c
    8c8c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8c90:	mov	r2, #0
    8c94:	str	r2, [r3, #324]	; 0x144
    8c98:	b	9ca0 <doProlog+0x2a44>
    8c9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ca0:	mov	r2, #0
    8ca4:	str	r2, [r3, #348]	; 0x15c
    8ca8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8cac:	mov	r2, #0
    8cb0:	str	r2, [r3, #344]	; 0x158
    8cb4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8cb8:	ldr	r3, [r3, #104]	; 0x68
    8cbc:	cmp	r3, #0
    8cc0:	beq	9ca8 <doProlog+0x2a4c>
    8cc4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8cc8:	add	r0, r3, #432	; 0x1b0
    8ccc:	ldr	r3, [fp, #8]
    8cd0:	ldr	r2, [fp, #-176]	; 0xffffff50
    8cd4:	ldr	r1, [fp, #-172]	; 0xffffff54
    8cd8:	bl	e940 <poolStoreString>
    8cdc:	mov	r2, r0
    8ce0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ce4:	str	r2, [r3, #344]	; 0x158
    8ce8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8cec:	ldr	r3, [r3, #344]	; 0x158
    8cf0:	cmp	r3, #0
    8cf4:	bne	8d00 <doProlog+0x1aa4>
    8cf8:	mov	r3, #1
    8cfc:	b	9dbc <doProlog+0x2b60>
    8d00:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d04:	ldr	r2, [r3, #444]	; 0x1bc
    8d08:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d0c:	str	r2, [r3, #448]	; 0x1c0
    8d10:	mov	r3, #0
    8d14:	strb	r3, [fp, #-25]	; 0xffffffe7
    8d18:	b	9ca8 <doProlog+0x2a4c>
    8d1c:	ldr	r3, [fp, #-172]	; 0xffffff54
    8d20:	ldr	r4, [r3, #56]	; 0x38
    8d24:	ldr	r2, [fp, #8]
    8d28:	ldr	r3, [fp, #-16]
    8d2c:	ldr	r1, [fp, #-176]	; 0xffffff50
    8d30:	ldr	r0, [fp, #-172]	; 0xffffff54
    8d34:	blx	r4
    8d38:	mov	r3, r0
    8d3c:	cmp	r3, #0
    8d40:	bne	8d4c <doProlog+0x1af0>
    8d44:	mov	r3, #32
    8d48:	b	9dbc <doProlog+0x2b60>
    8d4c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d50:	ldr	r3, [r3, #344]	; 0x158
    8d54:	cmp	r3, #0
    8d58:	beq	9cb0 <doProlog+0x2a54>
    8d5c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8d60:	add	r0, r3, #432	; 0x1b0
    8d64:	ldr	r3, [fp, #-172]	; 0xffffff54
    8d68:	ldr	r3, [r3, #68]	; 0x44
    8d6c:	mov	r2, r3
    8d70:	ldr	r3, [fp, #-176]	; 0xffffff50
    8d74:	add	r1, r3, r2
    8d78:	ldr	r2, [fp, #8]
    8d7c:	ldr	r3, [fp, #-172]	; 0xffffff54
    8d80:	ldr	r3, [r3, #68]	; 0x44
    8d84:	rsb	r3, r3, #0
    8d88:	add	r3, r2, r3
    8d8c:	mov	r2, r1
    8d90:	ldr	r1, [fp, #-172]	; 0xffffff54
    8d94:	bl	e940 <poolStoreString>
    8d98:	str	r0, [fp, #-92]	; 0xffffffa4
    8d9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8da0:	cmp	r3, #0
    8da4:	bne	8db0 <doProlog+0x1b54>
    8da8:	mov	r3, #1
    8dac:	b	9dbc <doProlog+0x2b60>
    8db0:	ldr	r0, [fp, #-92]	; 0xffffffa4
    8db4:	bl	cc40 <normalizePublicId>
    8db8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8dbc:	ldr	r2, [fp, #-92]	; 0xffffffa4
    8dc0:	str	r2, [r3, #348]	; 0x15c
    8dc4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8dc8:	ldr	r2, [r3, #444]	; 0x1bc
    8dcc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8dd0:	str	r2, [r3, #448]	; 0x1c0
    8dd4:	mov	r3, #0
    8dd8:	strb	r3, [fp, #-25]	; 0xffffffe7
    8ddc:	b	9cb0 <doProlog+0x2a54>
    8de0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8de4:	ldr	r3, [r3, #344]	; 0x158
    8de8:	cmp	r3, #0
    8dec:	beq	8e9c <doProlog+0x1c40>
    8df0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8df4:	ldr	r3, [r3, #104]	; 0x68
    8df8:	cmp	r3, #0
    8dfc:	beq	8e9c <doProlog+0x1c40>
    8e00:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e04:	add	r0, r3, #432	; 0x1b0
    8e08:	ldr	r3, [fp, #-172]	; 0xffffff54
    8e0c:	ldr	r3, [r3, #68]	; 0x44
    8e10:	mov	r2, r3
    8e14:	ldr	r3, [fp, #-176]	; 0xffffff50
    8e18:	add	r1, r3, r2
    8e1c:	ldr	r2, [fp, #8]
    8e20:	ldr	r3, [fp, #-172]	; 0xffffff54
    8e24:	ldr	r3, [r3, #68]	; 0x44
    8e28:	rsb	r3, r3, #0
    8e2c:	add	r3, r2, r3
    8e30:	mov	r2, r1
    8e34:	ldr	r1, [fp, #-172]	; 0xffffff54
    8e38:	bl	e940 <poolStoreString>
    8e3c:	str	r0, [fp, #-96]	; 0xffffffa0
    8e40:	ldr	r3, [fp, #-96]	; 0xffffffa0
    8e44:	cmp	r3, #0
    8e48:	bne	8e54 <doProlog+0x1bf8>
    8e4c:	mov	r3, #1
    8e50:	b	9dbc <doProlog+0x2b60>
    8e54:	ldr	r3, [fp, #-20]	; 0xffffffec
    8e58:	ldr	r2, [fp, #-176]	; 0xffffff50
    8e5c:	str	r2, [r3]
    8e60:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e64:	ldr	r4, [r3, #104]	; 0x68
    8e68:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e6c:	ldr	r0, [r3, #4]
    8e70:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e74:	ldr	r1, [r3, #344]	; 0x158
    8e78:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e7c:	ldr	r2, [r3, #368]	; 0x170
    8e80:	ldr	r3, [fp, #-168]	; 0xffffff58
    8e84:	ldr	r3, [r3, #348]	; 0x15c
    8e88:	str	r3, [sp]
    8e8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    8e90:	blx	r4
    8e94:	mov	r3, #0
    8e98:	strb	r3, [fp, #-25]	; 0xffffffe7
    8e9c:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ea0:	add	r3, r3, #432	; 0x1b0
    8ea4:	mov	r0, r3
    8ea8:	bl	e4b4 <poolClear>
    8eac:	b	9d2c <doProlog+0x2ad0>
    8eb0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8eb4:	ldr	r3, [r3, #348]	; 0x15c
    8eb8:	cmp	r3, #0
    8ebc:	beq	8f18 <doProlog+0x1cbc>
    8ec0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ec4:	ldr	r3, [r3, #104]	; 0x68
    8ec8:	cmp	r3, #0
    8ecc:	beq	8f18 <doProlog+0x1cbc>
    8ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
    8ed4:	ldr	r2, [fp, #-176]	; 0xffffff50
    8ed8:	str	r2, [r3]
    8edc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ee0:	ldr	r4, [r3, #104]	; 0x68
    8ee4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ee8:	ldr	r0, [r3, #4]
    8eec:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ef0:	ldr	r1, [r3, #344]	; 0x158
    8ef4:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ef8:	ldr	r2, [r3, #368]	; 0x170
    8efc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f00:	ldr	r3, [r3, #348]	; 0x15c
    8f04:	str	r3, [sp]
    8f08:	mov	r3, #0
    8f0c:	blx	r4
    8f10:	mov	r3, #0
    8f14:	strb	r3, [fp, #-25]	; 0xffffffe7
    8f18:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f1c:	add	r3, r3, #432	; 0x1b0
    8f20:	mov	r0, r3
    8f24:	bl	e4b4 <poolClear>
    8f28:	b	9d2c <doProlog+0x2ad0>
    8f2c:	ldr	r3, [fp, #4]
    8f30:	cmp	r3, #12
    8f34:	beq	8f48 <doProlog+0x1cec>
    8f38:	cmp	r3, #28
    8f3c:	bne	8f50 <doProlog+0x1cf4>
    8f40:	mov	r3, #10
    8f44:	b	9dbc <doProlog+0x2b60>
    8f48:	mov	r3, #17
    8f4c:	b	9dbc <doProlog+0x2b60>
    8f50:	mov	r3, #2
    8f54:	b	9dbc <doProlog+0x2b60>
    8f58:	ldr	r3, [fp, #-168]	; 0xffffff58
    8f5c:	ldr	r3, [r3, #88]	; 0x58
    8f60:	cmp	r3, #0
    8f64:	beq	8f7c <doProlog+0x1d20>
    8f68:	ldr	r3, [fp, #8]
    8f6c:	ldr	r2, [fp, #-176]	; 0xffffff50
    8f70:	ldr	r1, [fp, #-172]	; 0xffffff54
    8f74:	ldr	r0, [fp, #-168]	; 0xffffff58
    8f78:	bl	b7f8 <reportDefault>
    8f7c:	mov	r3, #0
    8f80:	strb	r3, [fp, #-25]	; 0xffffffe7
    8f84:	add	r2, fp, #8
    8f88:	ldrb	r3, [fp, #16]
    8f8c:	str	r3, [sp, #4]
    8f90:	ldr	r3, [fp, #12]
    8f94:	str	r3, [sp]
    8f98:	ldr	r3, [fp, #-180]	; 0xffffff4c
    8f9c:	ldr	r1, [fp, #-172]	; 0xffffff54
    8fa0:	ldr	r0, [fp, #-168]	; 0xffffff58
    8fa4:	bl	63b0 <doIgnoreSection>
    8fa8:	str	r0, [fp, #-100]	; 0xffffff9c
    8fac:	ldr	r3, [fp, #-100]	; 0xffffff9c
    8fb0:	cmp	r3, #0
    8fb4:	beq	8fc0 <doProlog+0x1d64>
    8fb8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    8fbc:	b	9dbc <doProlog+0x2b60>
    8fc0:	ldr	r3, [fp, #8]
    8fc4:	cmp	r3, #0
    8fc8:	bne	9cb8 <doProlog+0x2a5c>
    8fcc:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fd0:	ldr	r2, [pc, #-2188]	; 874c <doProlog+0x14f0>
    8fd4:	str	r2, [r3, #288]	; 0x120
    8fd8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    8fdc:	b	9dbc <doProlog+0x2b60>
    8fe0:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fe4:	ldr	r2, [r3, #268]	; 0x10c
    8fe8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8fec:	ldr	r3, [r3, #484]	; 0x1e4
    8ff0:	cmp	r2, r3
    8ff4:	bcc	9104 <doProlog+0x1ea8>
    8ff8:	ldr	r3, [fp, #-168]	; 0xffffff58
    8ffc:	ldr	r3, [r3, #484]	; 0x1e4
    9000:	cmp	r3, #0
    9004:	beq	90bc <doProlog+0x1e60>
    9008:	ldr	r3, [fp, #-168]	; 0xffffff58
    900c:	ldr	r3, [r3, #16]
    9010:	ldr	r2, [fp, #-168]	; 0xffffff58
    9014:	ldr	r0, [r2, #480]	; 0x1e0
    9018:	ldr	r2, [fp, #-168]	; 0xffffff58
    901c:	ldr	r2, [r2, #484]	; 0x1e4
    9020:	lsl	r1, r2, #1
    9024:	ldr	r2, [fp, #-168]	; 0xffffff58
    9028:	str	r1, [r2, #484]	; 0x1e4
    902c:	ldr	r2, [fp, #-168]	; 0xffffff58
    9030:	ldr	r2, [r2, #484]	; 0x1e4
    9034:	mov	r1, r2
    9038:	blx	r3
    903c:	str	r0, [fp, #-104]	; 0xffffff98
    9040:	ldr	r3, [fp, #-104]	; 0xffffff98
    9044:	cmp	r3, #0
    9048:	bne	9054 <doProlog+0x1df8>
    904c:	mov	r3, #1
    9050:	b	9dbc <doProlog+0x2b60>
    9054:	ldr	r3, [fp, #-168]	; 0xffffff58
    9058:	ldr	r2, [fp, #-104]	; 0xffffff98
    905c:	str	r2, [r3, #480]	; 0x1e0
    9060:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9064:	ldr	r3, [r3, #184]	; 0xb8
    9068:	cmp	r3, #0
    906c:	beq	9104 <doProlog+0x1ea8>
    9070:	ldr	r3, [fp, #-168]	; 0xffffff58
    9074:	ldr	r3, [r3, #16]
    9078:	ldr	r2, [fp, #-40]	; 0xffffffd8
    907c:	ldr	r0, [r2, #184]	; 0xb8
    9080:	ldr	r2, [fp, #-168]	; 0xffffff58
    9084:	ldr	r2, [r2, #484]	; 0x1e4
    9088:	lsl	r2, r2, #2
    908c:	mov	r1, r2
    9090:	blx	r3
    9094:	str	r0, [fp, #-108]	; 0xffffff94
    9098:	ldr	r3, [fp, #-108]	; 0xffffff94
    909c:	cmp	r3, #0
    90a0:	bne	90ac <doProlog+0x1e50>
    90a4:	mov	r3, #1
    90a8:	b	9dbc <doProlog+0x2b60>
    90ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    90b0:	ldr	r2, [fp, #-108]	; 0xffffff94
    90b4:	str	r2, [r3, #184]	; 0xb8
    90b8:	b	9104 <doProlog+0x1ea8>
    90bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    90c0:	ldr	r3, [r3, #12]
    90c4:	ldr	r2, [fp, #-168]	; 0xffffff58
    90c8:	mov	r1, #32
    90cc:	str	r1, [r2, #484]	; 0x1e4
    90d0:	ldr	r2, [fp, #-168]	; 0xffffff58
    90d4:	ldr	r2, [r2, #484]	; 0x1e4
    90d8:	mov	r0, r2
    90dc:	blx	r3
    90e0:	mov	r2, r0
    90e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    90e8:	str	r2, [r3, #480]	; 0x1e0
    90ec:	ldr	r3, [fp, #-168]	; 0xffffff58
    90f0:	ldr	r3, [r3, #480]	; 0x1e0
    90f4:	cmp	r3, #0
    90f8:	bne	9104 <doProlog+0x1ea8>
    90fc:	mov	r3, #1
    9100:	b	9dbc <doProlog+0x2b60>
    9104:	ldr	r3, [fp, #-168]	; 0xffffff58
    9108:	ldr	r2, [r3, #480]	; 0x1e0
    910c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9110:	ldr	r3, [r3, #268]	; 0x10c
    9114:	add	r3, r2, r3
    9118:	mov	r2, #0
    911c:	strb	r2, [r3]
    9120:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9124:	ldrb	r3, [r3, #160]	; 0xa0
    9128:	cmp	r3, #0
    912c:	beq	9cc0 <doProlog+0x2a64>
    9130:	ldr	r0, [fp, #-168]	; 0xffffff58
    9134:	bl	edf0 <nextScaffoldPart>
    9138:	str	r0, [fp, #-112]	; 0xffffff90
    913c:	ldr	r3, [fp, #-112]	; 0xffffff90
    9140:	cmp	r3, #0
    9144:	bge	9150 <doProlog+0x1ef4>
    9148:	mov	r3, #1
    914c:	b	9dbc <doProlog+0x2b60>
    9150:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9154:	ldr	r2, [r3, #184]	; 0xb8
    9158:	ldr	r3, [fp, #-40]	; 0xffffffd8
    915c:	ldr	r3, [r3, #180]	; 0xb4
    9160:	lsl	r3, r3, #2
    9164:	add	r3, r2, r3
    9168:	ldr	r2, [fp, #-112]	; 0xffffff90
    916c:	str	r2, [r3]
    9170:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9174:	ldr	r3, [r3, #180]	; 0xb4
    9178:	add	r2, r3, #1
    917c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9180:	str	r2, [r3, #180]	; 0xb4
    9184:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9188:	ldr	r1, [r3, #164]	; 0xa4
    918c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9190:	mov	r3, r2
    9194:	lsl	r3, r3, #3
    9198:	sub	r3, r3, r2
    919c:	lsl	r3, r3, #2
    91a0:	add	r3, r1, r3
    91a4:	mov	r2, #6
    91a8:	str	r2, [r3]
    91ac:	ldr	r3, [fp, #-168]	; 0xffffff58
    91b0:	ldr	r3, [r3, #136]	; 0x88
    91b4:	cmp	r3, #0
    91b8:	beq	9cc0 <doProlog+0x2a64>
    91bc:	mov	r3, #0
    91c0:	strb	r3, [fp, #-25]	; 0xffffffe7
    91c4:	b	9cc0 <doProlog+0x2a64>
    91c8:	ldr	r3, [fp, #-168]	; 0xffffff58
    91cc:	ldr	r2, [r3, #480]	; 0x1e0
    91d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    91d4:	ldr	r3, [r3, #268]	; 0x10c
    91d8:	add	r3, r2, r3
    91dc:	ldrb	r3, [r3]
    91e0:	cmp	r3, #124	; 0x7c
    91e4:	bne	91f0 <doProlog+0x1f94>
    91e8:	mov	r3, #2
    91ec:	b	9dbc <doProlog+0x2b60>
    91f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    91f4:	ldr	r2, [r3, #480]	; 0x1e0
    91f8:	ldr	r3, [fp, #-168]	; 0xffffff58
    91fc:	ldr	r3, [r3, #268]	; 0x10c
    9200:	add	r3, r2, r3
    9204:	mov	r2, #44	; 0x2c
    9208:	strb	r2, [r3]
    920c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9210:	ldrb	r3, [r3, #160]	; 0xa0
    9214:	cmp	r3, #0
    9218:	beq	9cc8 <doProlog+0x2a6c>
    921c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9220:	ldr	r3, [r3, #136]	; 0x88
    9224:	cmp	r3, #0
    9228:	beq	9cc8 <doProlog+0x2a6c>
    922c:	mov	r3, #0
    9230:	strb	r3, [fp, #-25]	; 0xffffffe7
    9234:	b	9cc8 <doProlog+0x2a6c>
    9238:	ldr	r3, [fp, #-168]	; 0xffffff58
    923c:	ldr	r2, [r3, #480]	; 0x1e0
    9240:	ldr	r3, [fp, #-168]	; 0xffffff58
    9244:	ldr	r3, [r3, #268]	; 0x10c
    9248:	add	r3, r2, r3
    924c:	ldrb	r3, [r3]
    9250:	cmp	r3, #44	; 0x2c
    9254:	bne	9260 <doProlog+0x2004>
    9258:	mov	r3, #2
    925c:	b	9dbc <doProlog+0x2b60>
    9260:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9264:	ldrb	r3, [r3, #160]	; 0xa0
    9268:	cmp	r3, #0
    926c:	beq	933c <doProlog+0x20e0>
    9270:	ldr	r3, [fp, #-168]	; 0xffffff58
    9274:	ldr	r2, [r3, #480]	; 0x1e0
    9278:	ldr	r3, [fp, #-168]	; 0xffffff58
    927c:	ldr	r3, [r3, #268]	; 0x10c
    9280:	add	r3, r2, r3
    9284:	ldrb	r3, [r3]
    9288:	cmp	r3, #0
    928c:	bne	933c <doProlog+0x20e0>
    9290:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9294:	ldr	r2, [r3, #164]	; 0xa4
    9298:	ldr	r3, [fp, #-40]	; 0xffffffd8
    929c:	ldr	r1, [r3, #184]	; 0xb8
    92a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92a4:	ldr	r3, [r3, #180]	; 0xb4
    92a8:	sub	r3, r3, #-1073741823	; 0xc0000001
    92ac:	lsl	r3, r3, #2
    92b0:	add	r3, r1, r3
    92b4:	ldr	r3, [r3]
    92b8:	mov	r1, r3
    92bc:	mov	r3, r1
    92c0:	lsl	r3, r3, #3
    92c4:	sub	r3, r3, r1
    92c8:	lsl	r3, r3, #2
    92cc:	add	r3, r2, r3
    92d0:	ldr	r3, [r3]
    92d4:	cmp	r3, #3
    92d8:	beq	933c <doProlog+0x20e0>
    92dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92e0:	ldr	r2, [r3, #164]	; 0xa4
    92e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92e8:	ldr	r1, [r3, #184]	; 0xb8
    92ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92f0:	ldr	r3, [r3, #180]	; 0xb4
    92f4:	sub	r3, r3, #-1073741823	; 0xc0000001
    92f8:	lsl	r3, r3, #2
    92fc:	add	r3, r1, r3
    9300:	ldr	r3, [r3]
    9304:	mov	r1, r3
    9308:	mov	r3, r1
    930c:	lsl	r3, r3, #3
    9310:	sub	r3, r3, r1
    9314:	lsl	r3, r3, #2
    9318:	add	r3, r2, r3
    931c:	mov	r2, #5
    9320:	str	r2, [r3]
    9324:	ldr	r3, [fp, #-168]	; 0xffffff58
    9328:	ldr	r3, [r3, #136]	; 0x88
    932c:	cmp	r3, #0
    9330:	beq	933c <doProlog+0x20e0>
    9334:	mov	r3, #0
    9338:	strb	r3, [fp, #-25]	; 0xffffffe7
    933c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9340:	ldr	r2, [r3, #480]	; 0x1e0
    9344:	ldr	r3, [fp, #-168]	; 0xffffff58
    9348:	ldr	r3, [r3, #268]	; 0x10c
    934c:	add	r3, r2, r3
    9350:	mov	r2, #124	; 0x7c
    9354:	strb	r2, [r3]
    9358:	b	9d2c <doProlog+0x2ad0>
    935c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9360:	mov	r2, #1
    9364:	strb	r2, [r3, #129]	; 0x81
    9368:	ldr	r3, [fp, #-168]	; 0xffffff58
    936c:	ldr	r3, [r3, #508]	; 0x1fc
    9370:	cmp	r3, #0
    9374:	bne	938c <doProlog+0x2130>
    9378:	ldr	r3, [fp, #-40]	; 0xffffffd8
    937c:	ldrb	r2, [r3, #130]	; 0x82
    9380:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9384:	strb	r2, [r3, #128]	; 0x80
    9388:	b	9624 <doProlog+0x23c8>
    938c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9390:	add	r0, r3, #80	; 0x50
    9394:	ldr	r3, [fp, #-172]	; 0xffffff54
    9398:	ldr	r3, [r3, #68]	; 0x44
    939c:	mov	r2, r3
    93a0:	ldr	r3, [fp, #-176]	; 0xffffff50
    93a4:	add	r1, r3, r2
    93a8:	ldr	r2, [fp, #8]
    93ac:	ldr	r3, [fp, #-172]	; 0xffffff54
    93b0:	ldr	r3, [r3, #68]	; 0x44
    93b4:	rsb	r3, r3, #0
    93b8:	add	r3, r2, r3
    93bc:	mov	r2, r1
    93c0:	ldr	r1, [fp, #-172]	; 0xffffff54
    93c4:	bl	e940 <poolStoreString>
    93c8:	str	r0, [fp, #-116]	; 0xffffff8c
    93cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    93d0:	cmp	r3, #0
    93d4:	bne	93e0 <doProlog+0x2184>
    93d8:	mov	r3, #1
    93dc:	b	9dbc <doProlog+0x2b60>
    93e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    93e4:	add	r1, r3, #132	; 0x84
    93e8:	mov	r3, #0
    93ec:	ldr	r2, [fp, #-116]	; 0xffffff8c
    93f0:	ldr	r0, [fp, #-168]	; 0xffffff58
    93f4:	bl	dbf4 <lookup>
    93f8:	str	r0, [fp, #-120]	; 0xffffff88
    93fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9400:	ldr	r2, [r3, #96]	; 0x60
    9404:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9408:	str	r2, [r3, #92]	; 0x5c
    940c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9410:	ldr	r3, [r3, #280]	; 0x118
    9414:	cmp	r3, #0
    9418:	beq	947c <doProlog+0x2220>
    941c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9420:	ldrb	r3, [r3, #130]	; 0x82
    9424:	cmp	r3, #0
    9428:	beq	9440 <doProlog+0x21e4>
    942c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9430:	ldr	r3, [r3, #308]	; 0x134
    9434:	cmp	r3, #0
    9438:	beq	9450 <doProlog+0x21f4>
    943c:	b	947c <doProlog+0x2220>
    9440:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9444:	ldrb	r3, [r3, #129]	; 0x81
    9448:	cmp	r3, #0
    944c:	bne	947c <doProlog+0x2220>
    9450:	ldr	r3, [fp, #-120]	; 0xffffff88
    9454:	cmp	r3, #0
    9458:	bne	9464 <doProlog+0x2208>
    945c:	mov	r3, #11
    9460:	b	9dbc <doProlog+0x2b60>
    9464:	ldr	r3, [fp, #-120]	; 0xffffff88
    9468:	ldrb	r3, [r3, #34]	; 0x22
    946c:	cmp	r3, #0
    9470:	bne	94dc <doProlog+0x2280>
    9474:	mov	r3, #24
    9478:	b	9dbc <doProlog+0x2b60>
    947c:	ldr	r3, [fp, #-120]	; 0xffffff88
    9480:	cmp	r3, #0
    9484:	bne	94e0 <doProlog+0x2284>
    9488:	ldr	r3, [fp, #-40]	; 0xffffffd8
    948c:	ldrb	r2, [r3, #130]	; 0x82
    9490:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9494:	strb	r2, [r3, #128]	; 0x80
    9498:	ldr	r3, [fp, #-44]	; 0xffffffd4
    949c:	cmp	r3, #60	; 0x3c
    94a0:	bne	9cd0 <doProlog+0x2a74>
    94a4:	ldr	r3, [fp, #-168]	; 0xffffff58
    94a8:	ldr	r3, [r3, #128]	; 0x80
    94ac:	cmp	r3, #0
    94b0:	beq	9cd0 <doProlog+0x2a74>
    94b4:	ldr	r3, [fp, #-168]	; 0xffffff58
    94b8:	ldr	r3, [r3, #128]	; 0x80
    94bc:	ldr	r2, [fp, #-168]	; 0xffffff58
    94c0:	ldr	r0, [r2, #4]
    94c4:	mov	r2, #1
    94c8:	ldr	r1, [fp, #-116]	; 0xffffff8c
    94cc:	blx	r3
    94d0:	mov	r3, #0
    94d4:	strb	r3, [fp, #-25]	; 0xffffffe7
    94d8:	b	9cd0 <doProlog+0x2a74>
    94dc:	nop			; (mov r0, r0)
    94e0:	ldr	r3, [fp, #-120]	; 0xffffff88
    94e4:	ldrb	r3, [r3, #32]
    94e8:	cmp	r3, #0
    94ec:	beq	94f8 <doProlog+0x229c>
    94f0:	mov	r3, #12
    94f4:	b	9dbc <doProlog+0x2b60>
    94f8:	ldr	r3, [fp, #-120]	; 0xffffff88
    94fc:	ldr	r3, [r3, #4]
    9500:	cmp	r3, #0
    9504:	beq	9558 <doProlog+0x22fc>
    9508:	ldr	r3, [fp, #-44]	; 0xffffffd4
    950c:	cmp	r3, #60	; 0x3c
    9510:	moveq	r3, #1
    9514:	movne	r3, #0
    9518:	uxtb	r3, r3
    951c:	strb	r3, [fp, #-121]	; 0xffffff87
    9520:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9524:	mov	r2, r3
    9528:	ldr	r1, [fp, #-120]	; 0xffffff88
    952c:	ldr	r0, [fp, #-168]	; 0xffffff58
    9530:	bl	a098 <processInternalEntity>
    9534:	str	r0, [fp, #-128]	; 0xffffff80
    9538:	ldr	r3, [fp, #-128]	; 0xffffff80
    953c:	cmp	r3, #0
    9540:	beq	954c <doProlog+0x22f0>
    9544:	ldr	r3, [fp, #-128]	; 0xffffff80
    9548:	b	9dbc <doProlog+0x2b60>
    954c:	mov	r3, #0
    9550:	strb	r3, [fp, #-25]	; 0xffffffe7
    9554:	b	9d2c <doProlog+0x2ad0>
    9558:	ldr	r3, [fp, #-168]	; 0xffffff58
    955c:	ldr	r3, [r3, #120]	; 0x78
    9560:	cmp	r3, #0
    9564:	beq	9610 <doProlog+0x23b4>
    9568:	ldr	r3, [fp, #-40]	; 0xffffffd8
    956c:	mov	r2, #0
    9570:	strb	r2, [r3, #131]	; 0x83
    9574:	ldr	r3, [fp, #-120]	; 0xffffff88
    9578:	mov	r2, #1
    957c:	strb	r2, [r3, #32]
    9580:	ldr	r3, [fp, #-168]	; 0xffffff58
    9584:	ldr	r4, [r3, #120]	; 0x78
    9588:	ldr	r3, [fp, #-168]	; 0xffffff58
    958c:	ldr	r0, [r3, #124]	; 0x7c
    9590:	ldr	r3, [fp, #-120]	; 0xffffff88
    9594:	ldr	r2, [r3, #20]
    9598:	ldr	r3, [fp, #-120]	; 0xffffff88
    959c:	ldr	r1, [r3, #16]
    95a0:	ldr	r3, [fp, #-120]	; 0xffffff88
    95a4:	ldr	r3, [r3, #24]
    95a8:	str	r3, [sp]
    95ac:	mov	r3, r1
    95b0:	mov	r1, #0
    95b4:	blx	r4
    95b8:	mov	r3, r0
    95bc:	cmp	r3, #0
    95c0:	bne	95d8 <doProlog+0x237c>
    95c4:	ldr	r3, [fp, #-120]	; 0xffffff88
    95c8:	mov	r2, #0
    95cc:	strb	r2, [r3, #32]
    95d0:	mov	r3, #21
    95d4:	b	9dbc <doProlog+0x2b60>
    95d8:	ldr	r3, [fp, #-120]	; 0xffffff88
    95dc:	mov	r2, #0
    95e0:	strb	r2, [r3, #32]
    95e4:	mov	r3, #0
    95e8:	strb	r3, [fp, #-25]	; 0xffffffe7
    95ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    95f0:	ldrb	r3, [r3, #131]	; 0x83
    95f4:	cmp	r3, #0
    95f8:	bne	9624 <doProlog+0x23c8>
    95fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9600:	ldrb	r2, [r3, #130]	; 0x82
    9604:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9608:	strb	r2, [r3, #128]	; 0x80
    960c:	b	9d2c <doProlog+0x2ad0>
    9610:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9614:	ldrb	r2, [r3, #130]	; 0x82
    9618:	ldr	r3, [fp, #-40]	; 0xffffffd8
    961c:	strb	r2, [r3, #128]	; 0x80
    9620:	b	9d2c <doProlog+0x2ad0>
    9624:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9628:	ldrb	r3, [r3, #130]	; 0x82
    962c:	cmp	r3, #0
    9630:	bne	9cd8 <doProlog+0x2a7c>
    9634:	ldr	r3, [fp, #-168]	; 0xffffff58
    9638:	ldr	r3, [r3, #116]	; 0x74
    963c:	cmp	r3, #0
    9640:	beq	9cd8 <doProlog+0x2a7c>
    9644:	ldr	r3, [fp, #-168]	; 0xffffff58
    9648:	ldr	r3, [r3, #116]	; 0x74
    964c:	ldr	r2, [fp, #-168]	; 0xffffff58
    9650:	ldr	r2, [r2, #4]
    9654:	mov	r0, r2
    9658:	blx	r3
    965c:	mov	r3, r0
    9660:	cmp	r3, #0
    9664:	bne	9cd8 <doProlog+0x2a7c>
    9668:	mov	r3, #22
    966c:	b	9dbc <doProlog+0x2b60>
    9670:	ldr	r3, [fp, #-168]	; 0xffffff58
    9674:	ldr	r3, [r3, #136]	; 0x88
    9678:	cmp	r3, #0
    967c:	beq	9ce0 <doProlog+0x2a84>
    9680:	ldr	r3, [fp, #8]
    9684:	ldr	r2, [fp, #-176]	; 0xffffff50
    9688:	ldr	r1, [fp, #-172]	; 0xffffff54
    968c:	ldr	r0, [fp, #-168]	; 0xffffff58
    9690:	bl	f3c4 <getElementType>
    9694:	mov	r2, r0
    9698:	ldr	r3, [fp, #-168]	; 0xffffff58
    969c:	str	r2, [r3, #352]	; 0x160
    96a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    96a4:	ldr	r3, [r3, #352]	; 0x160
    96a8:	cmp	r3, #0
    96ac:	bne	96b8 <doProlog+0x245c>
    96b0:	mov	r3, #1
    96b4:	b	9dbc <doProlog+0x2b60>
    96b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96bc:	mov	r2, #0
    96c0:	str	r2, [r3, #180]	; 0xb4
    96c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96c8:	mov	r2, #0
    96cc:	str	r2, [r3, #176]	; 0xb0
    96d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96d4:	mov	r2, #1
    96d8:	strb	r2, [r3, #160]	; 0xa0
    96dc:	mov	r3, #0
    96e0:	strb	r3, [fp, #-25]	; 0xffffffe7
    96e4:	b	9ce0 <doProlog+0x2a84>
    96e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    96ec:	ldrb	r3, [r3, #160]	; 0xa0
    96f0:	cmp	r3, #0
    96f4:	beq	9ce8 <doProlog+0x2a8c>
    96f8:	ldr	r3, [fp, #-168]	; 0xffffff58
    96fc:	ldr	r3, [r3, #136]	; 0x88
    9700:	cmp	r3, #0
    9704:	beq	97b8 <doProlog+0x255c>
    9708:	ldr	r3, [fp, #-168]	; 0xffffff58
    970c:	ldr	r3, [r3, #12]
    9710:	mov	r0, #20
    9714:	blx	r3
    9718:	str	r0, [fp, #-132]	; 0xffffff7c
    971c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    9720:	cmp	r3, #0
    9724:	bne	9730 <doProlog+0x24d4>
    9728:	mov	r3, #1
    972c:	b	9dbc <doProlog+0x2b60>
    9730:	ldr	r3, [fp, #-132]	; 0xffffff7c
    9734:	mov	r2, #0
    9738:	str	r2, [r3, #4]
    973c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    9740:	mov	r2, #0
    9744:	str	r2, [r3, #8]
    9748:	ldr	r3, [fp, #-132]	; 0xffffff7c
    974c:	mov	r2, #0
    9750:	str	r2, [r3, #12]
    9754:	ldr	r3, [fp, #-132]	; 0xffffff7c
    9758:	mov	r2, #0
    975c:	str	r2, [r3, #16]
    9760:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9764:	cmp	r3, #41	; 0x29
    9768:	bne	9774 <doProlog+0x2518>
    976c:	mov	r2, #2
    9770:	b	9778 <doProlog+0x251c>
    9774:	mov	r2, #1
    9778:	ldr	r3, [fp, #-132]	; 0xffffff7c
    977c:	str	r2, [r3]
    9780:	ldr	r3, [fp, #-20]	; 0xffffffec
    9784:	ldr	r2, [fp, #-176]	; 0xffffff50
    9788:	str	r2, [r3]
    978c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9790:	ldr	r3, [r3, #136]	; 0x88
    9794:	ldr	r2, [fp, #-168]	; 0xffffff58
    9798:	ldr	r0, [r2, #4]
    979c:	ldr	r2, [fp, #-168]	; 0xffffff58
    97a0:	ldr	r2, [r2, #352]	; 0x160
    97a4:	ldr	r1, [r2]
    97a8:	ldr	r2, [fp, #-132]	; 0xffffff7c
    97ac:	blx	r3
    97b0:	mov	r3, #0
    97b4:	strb	r3, [fp, #-25]	; 0xffffffe7
    97b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    97bc:	mov	r2, #0
    97c0:	strb	r2, [r3, #160]	; 0xa0
    97c4:	b	9ce8 <doProlog+0x2a8c>
    97c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    97cc:	ldrb	r3, [r3, #160]	; 0xa0
    97d0:	cmp	r3, #0
    97d4:	beq	9cf0 <doProlog+0x2a94>
    97d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    97dc:	ldr	r2, [r3, #164]	; 0xa4
    97e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    97e4:	ldr	r1, [r3, #184]	; 0xb8
    97e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    97ec:	ldr	r3, [r3, #180]	; 0xb4
    97f0:	sub	r3, r3, #-1073741823	; 0xc0000001
    97f4:	lsl	r3, r3, #2
    97f8:	add	r3, r1, r3
    97fc:	ldr	r3, [r3]
    9800:	mov	r1, r3
    9804:	mov	r3, r1
    9808:	lsl	r3, r3, #3
    980c:	sub	r3, r3, r1
    9810:	lsl	r3, r3, #2
    9814:	add	r3, r2, r3
    9818:	mov	r2, #3
    981c:	str	r2, [r3]
    9820:	ldr	r3, [fp, #-168]	; 0xffffff58
    9824:	ldr	r3, [r3, #136]	; 0x88
    9828:	cmp	r3, #0
    982c:	beq	9cf0 <doProlog+0x2a94>
    9830:	mov	r3, #0
    9834:	strb	r3, [fp, #-25]	; 0xffffffe7
    9838:	b	9cf0 <doProlog+0x2a94>
    983c:	mov	r3, #0
    9840:	str	r3, [fp, #-24]	; 0xffffffe8
    9844:	b	9868 <doProlog+0x260c>
    9848:	mov	r3, #1
    984c:	str	r3, [fp, #-24]	; 0xffffffe8
    9850:	b	9868 <doProlog+0x260c>
    9854:	mov	r3, #2
    9858:	str	r3, [fp, #-24]	; 0xffffffe8
    985c:	b	9868 <doProlog+0x260c>
    9860:	mov	r3, #3
    9864:	str	r3, [fp, #-24]	; 0xffffffe8
    9868:	ldr	r3, [fp, #-40]	; 0xffffffd8
    986c:	ldrb	r3, [r3, #160]	; 0xa0
    9870:	cmp	r3, #0
    9874:	beq	9cf8 <doProlog+0x2a9c>
    9878:	ldr	r3, [fp, #-24]	; 0xffffffe8
    987c:	cmp	r3, #0
    9880:	beq	989c <doProlog+0x2640>
    9884:	ldr	r2, [fp, #8]
    9888:	ldr	r3, [fp, #-172]	; 0xffffff54
    988c:	ldr	r3, [r3, #68]	; 0x44
    9890:	rsb	r3, r3, #0
    9894:	add	r3, r2, r3
    9898:	b	98a0 <doProlog+0x2644>
    989c:	ldr	r3, [fp, #8]
    98a0:	str	r3, [fp, #-136]	; 0xffffff78
    98a4:	ldr	r0, [fp, #-168]	; 0xffffff58
    98a8:	bl	edf0 <nextScaffoldPart>
    98ac:	str	r0, [fp, #-140]	; 0xffffff74
    98b0:	ldr	r3, [fp, #-140]	; 0xffffff74
    98b4:	cmp	r3, #0
    98b8:	bge	98c4 <doProlog+0x2668>
    98bc:	mov	r3, #1
    98c0:	b	9dbc <doProlog+0x2b60>
    98c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    98c8:	ldr	r1, [r3, #164]	; 0xa4
    98cc:	ldr	r2, [fp, #-140]	; 0xffffff74
    98d0:	mov	r3, r2
    98d4:	lsl	r3, r3, #3
    98d8:	sub	r3, r3, r2
    98dc:	lsl	r3, r3, #2
    98e0:	add	r3, r1, r3
    98e4:	mov	r2, #4
    98e8:	str	r2, [r3]
    98ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    98f0:	ldr	r1, [r3, #164]	; 0xa4
    98f4:	ldr	r2, [fp, #-140]	; 0xffffff74
    98f8:	mov	r3, r2
    98fc:	lsl	r3, r3, #3
    9900:	sub	r3, r3, r2
    9904:	lsl	r3, r3, #2
    9908:	add	r3, r1, r3
    990c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9910:	str	r2, [r3, #4]
    9914:	ldr	r3, [fp, #-136]	; 0xffffff78
    9918:	ldr	r2, [fp, #-176]	; 0xffffff50
    991c:	ldr	r1, [fp, #-172]	; 0xffffff54
    9920:	ldr	r0, [fp, #-168]	; 0xffffff58
    9924:	bl	f3c4 <getElementType>
    9928:	str	r0, [fp, #-144]	; 0xffffff70
    992c:	ldr	r3, [fp, #-144]	; 0xffffff70
    9930:	cmp	r3, #0
    9934:	bne	9940 <doProlog+0x26e4>
    9938:	mov	r3, #1
    993c:	b	9dbc <doProlog+0x2b60>
    9940:	ldr	r3, [fp, #-144]	; 0xffffff70
    9944:	ldr	r3, [r3]
    9948:	str	r3, [fp, #-148]	; 0xffffff6c
    994c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9950:	ldr	r1, [r3, #164]	; 0xa4
    9954:	ldr	r2, [fp, #-140]	; 0xffffff74
    9958:	mov	r3, r2
    995c:	lsl	r3, r3, #3
    9960:	sub	r3, r3, r2
    9964:	lsl	r3, r3, #2
    9968:	add	r3, r1, r3
    996c:	ldr	r2, [fp, #-148]	; 0xffffff6c
    9970:	str	r2, [r3, #8]
    9974:	mov	r3, #0
    9978:	str	r3, [fp, #-36]	; 0xffffffdc
    997c:	nop			; (mov r0, r0)
    9980:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9984:	add	r2, r3, #1
    9988:	str	r2, [fp, #-36]	; 0xffffffdc
    998c:	mov	r2, r3
    9990:	ldr	r3, [fp, #-148]	; 0xffffff6c
    9994:	add	r3, r3, r2
    9998:	ldrb	r3, [r3]
    999c:	cmp	r3, #0
    99a0:	bne	9980 <doProlog+0x2724>
    99a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99a8:	ldr	r2, [r3, #168]	; 0xa8
    99ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    99b0:	add	r2, r2, r3
    99b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99b8:	str	r2, [r3, #168]	; 0xa8
    99bc:	ldr	r3, [fp, #-168]	; 0xffffff58
    99c0:	ldr	r3, [r3, #136]	; 0x88
    99c4:	cmp	r3, #0
    99c8:	beq	9cf8 <doProlog+0x2a9c>
    99cc:	mov	r3, #0
    99d0:	strb	r3, [fp, #-25]	; 0xffffffe7
    99d4:	b	9cf8 <doProlog+0x2a9c>
    99d8:	mov	r3, #0
    99dc:	str	r3, [fp, #-24]	; 0xffffffe8
    99e0:	b	9a04 <doProlog+0x27a8>
    99e4:	mov	r3, #1
    99e8:	str	r3, [fp, #-24]	; 0xffffffe8
    99ec:	b	9a04 <doProlog+0x27a8>
    99f0:	mov	r3, #2
    99f4:	str	r3, [fp, #-24]	; 0xffffffe8
    99f8:	b	9a04 <doProlog+0x27a8>
    99fc:	mov	r3, #3
    9a00:	str	r3, [fp, #-24]	; 0xffffffe8
    9a04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a08:	ldrb	r3, [r3, #160]	; 0xa0
    9a0c:	cmp	r3, #0
    9a10:	beq	9d00 <doProlog+0x2aa4>
    9a14:	ldr	r3, [fp, #-168]	; 0xffffff58
    9a18:	ldr	r3, [r3, #136]	; 0x88
    9a1c:	cmp	r3, #0
    9a20:	beq	9a2c <doProlog+0x27d0>
    9a24:	mov	r3, #0
    9a28:	strb	r3, [fp, #-25]	; 0xffffffe7
    9a2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a30:	ldr	r3, [r3, #180]	; 0xb4
    9a34:	sub	r2, r3, #1
    9a38:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a3c:	str	r2, [r3, #180]	; 0xb4
    9a40:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a44:	ldr	r2, [r3, #164]	; 0xa4
    9a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a4c:	ldr	r1, [r3, #184]	; 0xb8
    9a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a54:	ldr	r3, [r3, #180]	; 0xb4
    9a58:	lsl	r3, r3, #2
    9a5c:	add	r3, r1, r3
    9a60:	ldr	r3, [r3]
    9a64:	mov	r1, r3
    9a68:	mov	r3, r1
    9a6c:	lsl	r3, r3, #3
    9a70:	sub	r3, r3, r1
    9a74:	lsl	r3, r3, #2
    9a78:	add	r3, r2, r3
    9a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9a80:	str	r2, [r3, #4]
    9a84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9a88:	ldr	r3, [r3, #180]	; 0xb4
    9a8c:	cmp	r3, #0
    9a90:	bne	9d00 <doProlog+0x2aa4>
    9a94:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    9a98:	cmp	r3, #0
    9a9c:	bne	9af0 <doProlog+0x2894>
    9aa0:	ldr	r0, [fp, #-168]	; 0xffffff58
    9aa4:	bl	f2ec <build_model>
    9aa8:	str	r0, [fp, #-152]	; 0xffffff68
    9aac:	ldr	r3, [fp, #-152]	; 0xffffff68
    9ab0:	cmp	r3, #0
    9ab4:	bne	9ac0 <doProlog+0x2864>
    9ab8:	mov	r3, #1
    9abc:	b	9dbc <doProlog+0x2b60>
    9ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
    9ac4:	ldr	r2, [fp, #-176]	; 0xffffff50
    9ac8:	str	r2, [r3]
    9acc:	ldr	r3, [fp, #-168]	; 0xffffff58
    9ad0:	ldr	r3, [r3, #136]	; 0x88
    9ad4:	ldr	r2, [fp, #-168]	; 0xffffff58
    9ad8:	ldr	r0, [r2, #4]
    9adc:	ldr	r2, [fp, #-168]	; 0xffffff58
    9ae0:	ldr	r2, [r2, #352]	; 0x160
    9ae4:	ldr	r1, [r2]
    9ae8:	ldr	r2, [fp, #-152]	; 0xffffff68
    9aec:	blx	r3
    9af0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9af4:	mov	r2, #0
    9af8:	strb	r2, [r3, #160]	; 0xa0
    9afc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9b00:	mov	r2, #0
    9b04:	str	r2, [r3, #168]	; 0xa8
    9b08:	b	9d00 <doProlog+0x2aa4>
    9b0c:	ldr	r3, [fp, #8]
    9b10:	ldr	r2, [fp, #-176]	; 0xffffff50
    9b14:	ldr	r1, [fp, #-172]	; 0xffffff54
    9b18:	ldr	r0, [fp, #-168]	; 0xffffff58
    9b1c:	bl	b578 <reportProcessingInstruction>
    9b20:	mov	r3, r0
    9b24:	cmp	r3, #0
    9b28:	bne	9b34 <doProlog+0x28d8>
    9b2c:	mov	r3, #1
    9b30:	b	9dbc <doProlog+0x2b60>
    9b34:	mov	r3, #0
    9b38:	strb	r3, [fp, #-25]	; 0xffffffe7
    9b3c:	b	9d2c <doProlog+0x2ad0>
    9b40:	ldr	r3, [fp, #8]
    9b44:	ldr	r2, [fp, #-176]	; 0xffffff50
    9b48:	ldr	r1, [fp, #-172]	; 0xffffff54
    9b4c:	ldr	r0, [fp, #-168]	; 0xffffff58
    9b50:	bl	b6f8 <reportComment>
    9b54:	mov	r3, r0
    9b58:	cmp	r3, #0
    9b5c:	bne	9b68 <doProlog+0x290c>
    9b60:	mov	r3, #1
    9b64:	b	9dbc <doProlog+0x2b60>
    9b68:	mov	r3, #0
    9b6c:	strb	r3, [fp, #-25]	; 0xffffffe7
    9b70:	b	9d2c <doProlog+0x2ad0>
    9b74:	ldr	r3, [fp, #4]
    9b78:	cmp	r3, #14
    9b7c:	beq	9b84 <doProlog+0x2928>
    9b80:	b	9d2c <doProlog+0x2ad0>
    9b84:	mov	r3, #0
    9b88:	strb	r3, [fp, #-25]	; 0xffffffe7
    9b8c:	nop			; (mov r0, r0)
    9b90:	b	9d2c <doProlog+0x2ad0>
    9b94:	ldr	r3, [fp, #-168]	; 0xffffff58
    9b98:	ldr	r3, [r3, #92]	; 0x5c
    9b9c:	cmp	r3, #0
    9ba0:	beq	9d08 <doProlog+0x2aac>
    9ba4:	mov	r3, #0
    9ba8:	strb	r3, [fp, #-25]	; 0xffffffe7
    9bac:	b	9d08 <doProlog+0x2aac>
    9bb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9bb4:	ldrb	r3, [r3, #128]	; 0x80
    9bb8:	cmp	r3, #0
    9bbc:	beq	9d10 <doProlog+0x2ab4>
    9bc0:	ldr	r3, [fp, #-168]	; 0xffffff58
    9bc4:	ldr	r3, [r3, #144]	; 0x90
    9bc8:	cmp	r3, #0
    9bcc:	beq	9d10 <doProlog+0x2ab4>
    9bd0:	mov	r3, #0
    9bd4:	strb	r3, [fp, #-25]	; 0xffffffe7
    9bd8:	b	9d10 <doProlog+0x2ab4>
    9bdc:	ldr	r3, [fp, #-168]	; 0xffffff58
    9be0:	ldr	r3, [r3, #104]	; 0x68
    9be4:	cmp	r3, #0
    9be8:	beq	9d18 <doProlog+0x2abc>
    9bec:	mov	r3, #0
    9bf0:	strb	r3, [fp, #-25]	; 0xffffffe7
    9bf4:	b	9d18 <doProlog+0x2abc>
    9bf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9bfc:	ldrb	r3, [r3, #128]	; 0x80
    9c00:	cmp	r3, #0
    9c04:	beq	9d20 <doProlog+0x2ac4>
    9c08:	ldr	r3, [fp, #-168]	; 0xffffff58
    9c0c:	ldr	r3, [r3, #140]	; 0x8c
    9c10:	cmp	r3, #0
    9c14:	beq	9d20 <doProlog+0x2ac4>
    9c18:	mov	r3, #0
    9c1c:	strb	r3, [fp, #-25]	; 0xffffffe7
    9c20:	b	9d20 <doProlog+0x2ac4>
    9c24:	ldr	r3, [fp, #-168]	; 0xffffff58
    9c28:	ldr	r3, [r3, #136]	; 0x88
    9c2c:	cmp	r3, #0
    9c30:	beq	9d28 <doProlog+0x2acc>
    9c34:	mov	r3, #0
    9c38:	strb	r3, [fp, #-25]	; 0xffffffe7
    9c3c:	b	9d28 <doProlog+0x2acc>
    9c40:	nop			; (mov r0, r0)
    9c44:	b	9d2c <doProlog+0x2ad0>
    9c48:	nop			; (mov r0, r0)
    9c4c:	b	9d2c <doProlog+0x2ad0>
    9c50:	nop			; (mov r0, r0)
    9c54:	b	9d2c <doProlog+0x2ad0>
    9c58:	nop			; (mov r0, r0)
    9c5c:	b	9d2c <doProlog+0x2ad0>
    9c60:	nop			; (mov r0, r0)
    9c64:	b	9d2c <doProlog+0x2ad0>
    9c68:	nop			; (mov r0, r0)
    9c6c:	b	9d2c <doProlog+0x2ad0>
    9c70:	nop			; (mov r0, r0)
    9c74:	b	9d2c <doProlog+0x2ad0>
    9c78:	nop			; (mov r0, r0)
    9c7c:	b	9d2c <doProlog+0x2ad0>
    9c80:	nop			; (mov r0, r0)
    9c84:	b	9d2c <doProlog+0x2ad0>
    9c88:	nop			; (mov r0, r0)
    9c8c:	b	9d2c <doProlog+0x2ad0>
    9c90:	nop			; (mov r0, r0)
    9c94:	b	9d2c <doProlog+0x2ad0>
    9c98:	nop			; (mov r0, r0)
    9c9c:	b	9d2c <doProlog+0x2ad0>
    9ca0:	nop			; (mov r0, r0)
    9ca4:	b	9d2c <doProlog+0x2ad0>
    9ca8:	nop			; (mov r0, r0)
    9cac:	b	9d2c <doProlog+0x2ad0>
    9cb0:	nop			; (mov r0, r0)
    9cb4:	b	9d2c <doProlog+0x2ad0>
    9cb8:	nop			; (mov r0, r0)
    9cbc:	b	9d2c <doProlog+0x2ad0>
    9cc0:	nop			; (mov r0, r0)
    9cc4:	b	9d2c <doProlog+0x2ad0>
    9cc8:	nop			; (mov r0, r0)
    9ccc:	b	9d2c <doProlog+0x2ad0>
    9cd0:	nop			; (mov r0, r0)
    9cd4:	b	9d2c <doProlog+0x2ad0>
    9cd8:	nop			; (mov r0, r0)
    9cdc:	b	9d2c <doProlog+0x2ad0>
    9ce0:	nop			; (mov r0, r0)
    9ce4:	b	9d2c <doProlog+0x2ad0>
    9ce8:	nop			; (mov r0, r0)
    9cec:	b	9d2c <doProlog+0x2ad0>
    9cf0:	nop			; (mov r0, r0)
    9cf4:	b	9d2c <doProlog+0x2ad0>
    9cf8:	nop			; (mov r0, r0)
    9cfc:	b	9d2c <doProlog+0x2ad0>
    9d00:	nop			; (mov r0, r0)
    9d04:	b	9d2c <doProlog+0x2ad0>
    9d08:	nop			; (mov r0, r0)
    9d0c:	b	9d2c <doProlog+0x2ad0>
    9d10:	nop			; (mov r0, r0)
    9d14:	b	9d2c <doProlog+0x2ad0>
    9d18:	nop			; (mov r0, r0)
    9d1c:	b	9d2c <doProlog+0x2ad0>
    9d20:	nop			; (mov r0, r0)
    9d24:	b	9d2c <doProlog+0x2ad0>
    9d28:	nop			; (mov r0, r0)
    9d2c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    9d30:	cmp	r3, #0
    9d34:	beq	9d5c <doProlog+0x2b00>
    9d38:	ldr	r3, [fp, #-168]	; 0xffffff58
    9d3c:	ldr	r3, [r3, #88]	; 0x58
    9d40:	cmp	r3, #0
    9d44:	beq	9d5c <doProlog+0x2b00>
    9d48:	ldr	r3, [fp, #8]
    9d4c:	ldr	r2, [fp, #-176]	; 0xffffff50
    9d50:	ldr	r1, [fp, #-172]	; 0xffffff54
    9d54:	ldr	r0, [fp, #-168]	; 0xffffff58
    9d58:	bl	b7f8 <reportDefault>
    9d5c:	ldr	r3, [fp, #-168]	; 0xffffff58
    9d60:	ldr	r3, [r3, #496]	; 0x1f0
    9d64:	cmp	r3, #2
    9d68:	beq	9d88 <doProlog+0x2b2c>
    9d6c:	cmp	r3, #3
    9d70:	bne	9d90 <doProlog+0x2b34>
    9d74:	ldr	r2, [fp, #8]
    9d78:	ldr	r3, [fp, #12]
    9d7c:	str	r2, [r3]
    9d80:	mov	r3, #0
    9d84:	b	9dbc <doProlog+0x2b60>
    9d88:	mov	r3, #35	; 0x23
    9d8c:	b	9dbc <doProlog+0x2b60>
    9d90:	ldr	r3, [fp, #8]
    9d94:	str	r3, [fp, #-176]	; 0xffffff50
    9d98:	ldr	r3, [fp, #-172]	; 0xffffff54
    9d9c:	ldr	r4, [r3]
    9da0:	add	r3, fp, #8
    9da4:	ldr	r2, [fp, #-180]	; 0xffffff4c
    9da8:	ldr	r1, [fp, #-176]	; 0xffffff50
    9dac:	ldr	r0, [fp, #-172]	; 0xffffff54
    9db0:	blx	r4
    9db4:	str	r0, [fp, #4]
    9db8:	b	72d0 <doProlog+0x74>
    9dbc:	mov	r0, r3
    9dc0:	sub	sp, fp, #12
    9dc4:	pop	{r4, r5, fp, pc}

00009dc8 <epilogProcessor>:
    9dc8:	push	{r4, fp, lr}
    9dcc:	add	fp, sp, #8
    9dd0:	sub	sp, sp, #28
    9dd4:	str	r0, [fp, #-24]	; 0xffffffe8
    9dd8:	str	r1, [fp, #-28]	; 0xffffffe4
    9ddc:	str	r2, [fp, #-32]	; 0xffffffe0
    9de0:	str	r3, [fp, #-36]	; 0xffffffdc
    9de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9de8:	ldr	r2, [pc, #676]	; a094 <epilogProcessor+0x2cc>
    9dec:	str	r2, [r3, #288]	; 0x120
    9df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9df4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9df8:	str	r2, [r3, #296]	; 0x128
    9dfc:	mov	r3, #0
    9e00:	str	r3, [fp, #-20]	; 0xffffffec
    9e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9e08:	ldr	r3, [r3, #152]	; 0x98
    9e0c:	ldr	r4, [r3]
    9e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9e14:	ldr	r0, [r3, #152]	; 0x98
    9e18:	sub	r3, fp, #20
    9e1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9e24:	blx	r4
    9e28:	str	r0, [fp, #-16]
    9e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
    9e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9e34:	str	r2, [r3, #300]	; 0x12c
    9e38:	ldr	r3, [fp, #-16]
    9e3c:	add	r3, r3, #15
    9e40:	cmp	r3, #30
    9e44:	ldrls	pc, [pc, r3, lsl #2]
    9e48:	b	a020 <epilogProcessor+0x258>
    9e4c:	.word	0x00009ec8
    9e50:	.word	0x0000a020
    9e54:	.word	0x0000a020
    9e58:	.word	0x0000a020
    9e5c:	.word	0x0000a020
    9e60:	.word	0x0000a020
    9e64:	.word	0x0000a020
    9e68:	.word	0x0000a020
    9e6c:	.word	0x0000a020
    9e70:	.word	0x0000a020
    9e74:	.word	0x0000a020
    9e78:	.word	0x00009f1c
    9e7c:	.word	0x0000a020
    9e80:	.word	0x00009ff4
    9e84:	.word	0x00009fc8
    9e88:	.word	0x00009fb4
    9e8c:	.word	0x0000a020
    9e90:	.word	0x0000a020
    9e94:	.word	0x0000a020
    9e98:	.word	0x0000a020
    9e9c:	.word	0x0000a020
    9ea0:	.word	0x0000a020
    9ea4:	.word	0x0000a020
    9ea8:	.word	0x0000a020
    9eac:	.word	0x0000a020
    9eb0:	.word	0x0000a020
    9eb4:	.word	0x00009f5c
    9eb8:	.word	0x0000a020
    9ebc:	.word	0x00009f88
    9ec0:	.word	0x0000a020
    9ec4:	.word	0x00009f30
    9ec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9ecc:	ldr	r3, [r3, #88]	; 0x58
    9ed0:	cmp	r3, #0
    9ed4:	beq	9f08 <epilogProcessor+0x140>
    9ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9edc:	ldr	r1, [r3, #152]	; 0x98
    9ee0:	ldr	r3, [fp, #-20]	; 0xffffffec
    9ee4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9eec:	bl	b7f8 <reportDefault>
    9ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9ef4:	ldr	r3, [r3, #496]	; 0x1f0
    9ef8:	cmp	r3, #2
    9efc:	bne	9f08 <epilogProcessor+0x140>
    9f00:	mov	r3, #35	; 0x23
    9f04:	b	a088 <epilogProcessor+0x2c0>
    9f08:	ldr	r2, [fp, #-20]	; 0xffffffec
    9f0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9f10:	str	r2, [r3]
    9f14:	mov	r3, #0
    9f18:	b	a088 <epilogProcessor+0x2c0>
    9f1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9f20:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9f24:	str	r2, [r3]
    9f28:	mov	r3, #0
    9f2c:	b	a088 <epilogProcessor+0x2c0>
    9f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9f34:	ldr	r3, [r3, #88]	; 0x58
    9f38:	cmp	r3, #0
    9f3c:	beq	a028 <epilogProcessor+0x260>
    9f40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9f44:	ldr	r1, [r3, #152]	; 0x98
    9f48:	ldr	r3, [fp, #-20]	; 0xffffffec
    9f4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f54:	bl	b7f8 <reportDefault>
    9f58:	b	a028 <epilogProcessor+0x260>
    9f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9f60:	ldr	r1, [r3, #152]	; 0x98
    9f64:	ldr	r3, [fp, #-20]	; 0xffffffec
    9f68:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f70:	bl	b578 <reportProcessingInstruction>
    9f74:	mov	r3, r0
    9f78:	cmp	r3, #0
    9f7c:	bne	a030 <epilogProcessor+0x268>
    9f80:	mov	r3, #1
    9f84:	b	a088 <epilogProcessor+0x2c0>
    9f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9f8c:	ldr	r1, [r3, #152]	; 0x98
    9f90:	ldr	r3, [fp, #-20]	; 0xffffffec
    9f94:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9f9c:	bl	b6f8 <reportComment>
    9fa0:	mov	r3, r0
    9fa4:	cmp	r3, #0
    9fa8:	bne	a038 <epilogProcessor+0x270>
    9fac:	mov	r3, #1
    9fb0:	b	a088 <epilogProcessor+0x2c0>
    9fb4:	ldr	r2, [fp, #-20]	; 0xffffffec
    9fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9fbc:	str	r2, [r3, #296]	; 0x128
    9fc0:	mov	r3, #4
    9fc4:	b	a088 <epilogProcessor+0x2c0>
    9fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9fcc:	ldrb	r3, [r3, #500]	; 0x1f4
    9fd0:	cmp	r3, #0
    9fd4:	bne	9fec <epilogProcessor+0x224>
    9fd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9fdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    9fe0:	str	r2, [r3]
    9fe4:	mov	r3, #0
    9fe8:	b	a088 <epilogProcessor+0x2c0>
    9fec:	mov	r3, #5
    9ff0:	b	a088 <epilogProcessor+0x2c0>
    9ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9ff8:	ldrb	r3, [r3, #500]	; 0x1f4
    9ffc:	cmp	r3, #0
    a000:	bne	a018 <epilogProcessor+0x250>
    a004:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a008:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a00c:	str	r2, [r3]
    a010:	mov	r3, #0
    a014:	b	a088 <epilogProcessor+0x2c0>
    a018:	mov	r3, #6
    a01c:	b	a088 <epilogProcessor+0x2c0>
    a020:	mov	r3, #9
    a024:	b	a088 <epilogProcessor+0x2c0>
    a028:	nop			; (mov r0, r0)
    a02c:	b	a03c <epilogProcessor+0x274>
    a030:	nop			; (mov r0, r0)
    a034:	b	a03c <epilogProcessor+0x274>
    a038:	nop			; (mov r0, r0)
    a03c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a040:	str	r3, [fp, #-28]	; 0xffffffe4
    a044:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a048:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a04c:	str	r2, [r3, #296]	; 0x128
    a050:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a054:	ldr	r3, [r3, #496]	; 0x1f0
    a058:	cmp	r3, #2
    a05c:	beq	a07c <epilogProcessor+0x2b4>
    a060:	cmp	r3, #3
    a064:	bne	a084 <epilogProcessor+0x2bc>
    a068:	ldr	r2, [fp, #-20]	; 0xffffffec
    a06c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a070:	str	r2, [r3]
    a074:	mov	r3, #0
    a078:	b	a088 <epilogProcessor+0x2c0>
    a07c:	mov	r3, #35	; 0x23
    a080:	b	a088 <epilogProcessor+0x2c0>
    a084:	b	9dfc <epilogProcessor+0x34>
    a088:	mov	r0, r3
    a08c:	sub	sp, fp, #8
    a090:	pop	{r4, fp, pc}
    a094:	.word	0x00000000

0000a098 <processInternalEntity>:
    a098:	push	{r4, fp, lr}
    a09c:	add	fp, sp, #8
    a0a0:	sub	sp, sp, #60	; 0x3c
    a0a4:	str	r0, [fp, #-40]	; 0xffffffd8
    a0a8:	str	r1, [fp, #-44]	; 0xffffffd4
    a0ac:	mov	r3, r2
    a0b0:	strb	r3, [fp, #-45]	; 0xffffffd3
    a0b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a0b8:	ldr	r3, [r3, #312]	; 0x138
    a0bc:	cmp	r3, #0
    a0c0:	beq	a0e4 <processInternalEntity+0x4c>
    a0c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a0c8:	ldr	r3, [r3, #312]	; 0x138
    a0cc:	str	r3, [fp, #-20]	; 0xffffffec
    a0d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    a0d4:	ldr	r2, [r3, #8]
    a0d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a0dc:	str	r2, [r3, #312]	; 0x138
    a0e0:	b	a10c <processInternalEntity+0x74>
    a0e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a0e8:	ldr	r3, [r3, #12]
    a0ec:	mov	r0, #24
    a0f0:	blx	r3
    a0f4:	str	r0, [fp, #-20]	; 0xffffffec
    a0f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    a0fc:	cmp	r3, #0
    a100:	bne	a10c <processInternalEntity+0x74>
    a104:	mov	r3, #1
    a108:	b	a2e4 <processInternalEntity+0x24c>
    a10c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a110:	mov	r2, #1
    a114:	strb	r2, [r3, #32]
    a118:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a11c:	mov	r2, #0
    a120:	str	r2, [r3, #12]
    a124:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a128:	ldr	r2, [r3, #308]	; 0x134
    a12c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a130:	str	r2, [r3, #8]
    a134:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a138:	ldr	r2, [fp, #-20]	; 0xffffffec
    a13c:	str	r2, [r3, #308]	; 0x134
    a140:	ldr	r3, [fp, #-20]	; 0xffffffec
    a144:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a148:	str	r2, [r3, #12]
    a14c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a150:	ldr	r2, [r3, #320]	; 0x140
    a154:	ldr	r3, [fp, #-20]	; 0xffffffec
    a158:	str	r2, [r3, #16]
    a15c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a160:	ldrb	r2, [fp, #-45]	; 0xffffffd3
    a164:	strb	r2, [r3, #20]
    a168:	ldr	r3, [fp, #-20]	; 0xffffffec
    a16c:	mov	r2, #0
    a170:	str	r2, [r3]
    a174:	ldr	r3, [fp, #-20]	; 0xffffffec
    a178:	mov	r2, #0
    a17c:	str	r2, [r3, #4]
    a180:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a184:	ldr	r3, [r3, #4]
    a188:	str	r3, [fp, #-24]	; 0xffffffe8
    a18c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a190:	ldr	r3, [r3, #4]
    a194:	ldr	r2, [fp, #-44]	; 0xffffffd4
    a198:	ldr	r2, [r2, #8]
    a19c:	add	r3, r3, r2
    a1a0:	str	r3, [fp, #-28]	; 0xffffffe4
    a1a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a1a8:	ldrb	r3, [r3, #33]	; 0x21
    a1ac:	cmp	r3, #0
    a1b0:	beq	a21c <processInternalEntity+0x184>
    a1b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a1b8:	ldr	r3, [r3, #236]	; 0xec
    a1bc:	ldr	r4, [r3]
    a1c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a1c4:	ldr	r0, [r3, #236]	; 0xec
    a1c8:	sub	r3, fp, #36	; 0x24
    a1cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a1d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a1d4:	blx	r4
    a1d8:	str	r0, [fp, #-32]	; 0xffffffe0
    a1dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a1e0:	ldr	r1, [r3, #236]	; 0xec
    a1e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a1e8:	mov	r2, #0
    a1ec:	str	r2, [sp, #12]
    a1f0:	sub	r2, fp, #36	; 0x24
    a1f4:	str	r2, [sp, #8]
    a1f8:	str	r3, [sp, #4]
    a1fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a200:	str	r3, [sp]
    a204:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a208:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a20c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a210:	bl	725c <doProlog>
    a214:	str	r0, [fp, #-16]
    a218:	b	a254 <processInternalEntity+0x1bc>
    a21c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a220:	ldr	r1, [r3, #320]	; 0x140
    a224:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a228:	ldr	r2, [r3, #236]	; 0xec
    a22c:	mov	r3, #0
    a230:	str	r3, [sp, #8]
    a234:	sub	r3, fp, #36	; 0x24
    a238:	str	r3, [sp, #4]
    a23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a240:	str	r3, [sp]
    a244:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a248:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a24c:	bl	31a8 <doContent>
    a250:	str	r0, [fp, #-16]
    a254:	ldr	r3, [fp, #-16]
    a258:	cmp	r3, #0
    a25c:	bne	a2e0 <processInternalEntity+0x248>
    a260:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a264:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a268:	cmp	r2, r3
    a26c:	beq	a2a8 <processInternalEntity+0x210>
    a270:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a274:	ldr	r3, [r3, #496]	; 0x1f0
    a278:	cmp	r3, #3
    a27c:	bne	a2a8 <processInternalEntity+0x210>
    a280:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a284:	mov	r2, r3
    a288:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a28c:	sub	r2, r2, r3
    a290:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a294:	str	r2, [r3, #12]
    a298:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a29c:	ldr	r2, [pc, #76]	; a2f0 <processInternalEntity+0x258>
    a2a0:	str	r2, [r3, #288]	; 0x120
    a2a4:	b	a2e0 <processInternalEntity+0x248>
    a2a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a2ac:	mov	r2, #0
    a2b0:	strb	r2, [r3, #32]
    a2b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    a2b8:	ldr	r2, [r3, #8]
    a2bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a2c0:	str	r2, [r3, #308]	; 0x134
    a2c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a2c8:	ldr	r2, [r3, #312]	; 0x138
    a2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    a2d0:	str	r2, [r3, #8]
    a2d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a2d8:	ldr	r2, [fp, #-20]	; 0xffffffec
    a2dc:	str	r2, [r3, #312]	; 0x138
    a2e0:	ldr	r3, [fp, #-16]
    a2e4:	mov	r0, r3
    a2e8:	sub	sp, fp, #8
    a2ec:	pop	{r4, fp, pc}
    a2f0:	.word	0x00000000

0000a2f4 <internalEntityProcessor>:
    a2f4:	push	{r4, fp, lr}
    a2f8:	add	fp, sp, #8
    a2fc:	sub	sp, sp, #68	; 0x44
    a300:	str	r0, [fp, #-48]	; 0xffffffd0
    a304:	str	r1, [fp, #-52]	; 0xffffffcc
    a308:	str	r2, [fp, #-56]	; 0xffffffc8
    a30c:	str	r3, [fp, #-60]	; 0xffffffc4
    a310:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a314:	ldr	r3, [r3, #308]	; 0x134
    a318:	str	r3, [fp, #-20]	; 0xffffffec
    a31c:	ldr	r3, [fp, #-20]	; 0xffffffec
    a320:	cmp	r3, #0
    a324:	bne	a330 <internalEntityProcessor+0x3c>
    a328:	mov	r3, #23
    a32c:	b	a5b0 <internalEntityProcessor+0x2bc>
    a330:	ldr	r3, [fp, #-20]	; 0xffffffec
    a334:	ldr	r3, [r3, #12]
    a338:	str	r3, [fp, #-24]	; 0xffffffe8
    a33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a340:	ldr	r3, [r3, #4]
    a344:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a348:	ldr	r2, [r2, #12]
    a34c:	add	r3, r3, r2
    a350:	str	r3, [fp, #-28]	; 0xffffffe4
    a354:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a358:	ldr	r3, [r3, #4]
    a35c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a360:	ldr	r2, [r2, #8]
    a364:	add	r3, r3, r2
    a368:	str	r3, [fp, #-32]	; 0xffffffe0
    a36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a370:	ldrb	r3, [r3, #33]	; 0x21
    a374:	cmp	r3, #0
    a378:	beq	a3e4 <internalEntityProcessor+0xf0>
    a37c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a380:	ldr	r3, [r3, #236]	; 0xec
    a384:	ldr	r4, [r3]
    a388:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a38c:	ldr	r0, [r3, #236]	; 0xec
    a390:	sub	r3, fp, #44	; 0x2c
    a394:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a398:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a39c:	blx	r4
    a3a0:	str	r0, [fp, #-36]	; 0xffffffdc
    a3a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a3a8:	ldr	r1, [r3, #236]	; 0xec
    a3ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a3b0:	mov	r2, #0
    a3b4:	str	r2, [sp, #12]
    a3b8:	sub	r2, fp, #44	; 0x2c
    a3bc:	str	r2, [sp, #8]
    a3c0:	str	r3, [sp, #4]
    a3c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a3c8:	str	r3, [sp]
    a3cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a3d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a3d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a3d8:	bl	725c <doProlog>
    a3dc:	str	r0, [fp, #-16]
    a3e0:	b	a41c <internalEntityProcessor+0x128>
    a3e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    a3e8:	ldr	r1, [r3, #16]
    a3ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a3f0:	ldr	r2, [r3, #236]	; 0xec
    a3f4:	mov	r3, #0
    a3f8:	str	r3, [sp, #8]
    a3fc:	sub	r3, fp, #44	; 0x2c
    a400:	str	r3, [sp, #4]
    a404:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a408:	str	r3, [sp]
    a40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a410:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a414:	bl	31a8 <doContent>
    a418:	str	r0, [fp, #-16]
    a41c:	ldr	r3, [fp, #-16]
    a420:	cmp	r3, #0
    a424:	beq	a430 <internalEntityProcessor+0x13c>
    a428:	ldr	r3, [fp, #-16]
    a42c:	b	a5b0 <internalEntityProcessor+0x2bc>
    a430:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a434:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a438:	cmp	r2, r3
    a43c:	beq	a474 <internalEntityProcessor+0x180>
    a440:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a444:	ldr	r3, [r3, #496]	; 0x1f0
    a448:	cmp	r3, #3
    a44c:	bne	a474 <internalEntityProcessor+0x180>
    a450:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a454:	mov	r2, r3
    a458:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a45c:	ldr	r3, [r3, #4]
    a460:	sub	r2, r2, r3
    a464:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a468:	str	r2, [r3, #12]
    a46c:	ldr	r3, [fp, #-16]
    a470:	b	a5b0 <internalEntityProcessor+0x2bc>
    a474:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a478:	mov	r2, #0
    a47c:	strb	r2, [r3, #32]
    a480:	ldr	r3, [fp, #-20]	; 0xffffffec
    a484:	ldr	r2, [r3, #8]
    a488:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a48c:	str	r2, [r3, #308]	; 0x134
    a490:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a494:	ldr	r2, [r3, #312]	; 0x138
    a498:	ldr	r3, [fp, #-20]	; 0xffffffec
    a49c:	str	r2, [r3, #8]
    a4a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a4a4:	ldr	r2, [fp, #-20]	; 0xffffffec
    a4a8:	str	r2, [r3, #312]	; 0x138
    a4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    a4b0:	ldrb	r3, [r3, #33]	; 0x21
    a4b4:	cmp	r3, #0
    a4b8:	beq	a544 <internalEntityProcessor+0x250>
    a4bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a4c0:	ldr	r2, [pc, #244]	; a5bc <internalEntityProcessor+0x2c8>
    a4c4:	str	r2, [r3, #288]	; 0x120
    a4c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a4cc:	ldr	r3, [r3, #152]	; 0x98
    a4d0:	ldr	r4, [r3]
    a4d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a4d8:	ldr	r0, [r3, #152]	; 0x98
    a4dc:	sub	r3, fp, #44	; 0x2c
    a4e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    a4e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    a4e8:	blx	r4
    a4ec:	str	r0, [fp, #-40]	; 0xffffffd8
    a4f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a4f4:	ldr	r1, [r3, #152]	; 0x98
    a4f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a4fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a500:	ldrb	r2, [r2, #500]	; 0x1f4
    a504:	cmp	r2, #0
    a508:	moveq	r2, #1
    a50c:	movne	r2, #0
    a510:	uxtb	r2, r2
    a514:	str	r2, [sp, #12]
    a518:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a51c:	str	r2, [sp, #8]
    a520:	str	r3, [sp, #4]
    a524:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a528:	str	r3, [sp]
    a52c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a530:	ldr	r2, [fp, #-52]	; 0xffffffcc
    a534:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a538:	bl	725c <doProlog>
    a53c:	mov	r3, r0
    a540:	b	a5b0 <internalEntityProcessor+0x2bc>
    a544:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a548:	ldr	r2, [pc, #112]	; a5c0 <internalEntityProcessor+0x2cc>
    a54c:	str	r2, [r3, #288]	; 0x120
    a550:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a554:	ldr	r3, [r3, #492]	; 0x1ec
    a558:	cmp	r3, #0
    a55c:	movne	r3, #1
    a560:	moveq	r3, #0
    a564:	uxtb	r3, r3
    a568:	mov	r1, r3
    a56c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a570:	ldr	r2, [r3, #152]	; 0x98
    a574:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a578:	ldrb	r3, [r3, #500]	; 0x1f4
    a57c:	cmp	r3, #0
    a580:	moveq	r3, #1
    a584:	movne	r3, #0
    a588:	uxtb	r3, r3
    a58c:	str	r3, [sp, #8]
    a590:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a594:	str	r3, [sp, #4]
    a598:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a59c:	str	r3, [sp]
    a5a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a5a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    a5a8:	bl	31a8 <doContent>
    a5ac:	mov	r3, r0
    a5b0:	mov	r0, r3
    a5b4:	sub	sp, fp, #8
    a5b8:	pop	{r4, fp, pc}
	...

0000a5c4 <errorProcessor>:
    a5c4:	push	{fp}		; (str fp, [sp, #-4]!)
    a5c8:	add	fp, sp, #0
    a5cc:	sub	sp, sp, #20
    a5d0:	str	r0, [fp, #-8]
    a5d4:	str	r1, [fp, #-12]
    a5d8:	str	r2, [fp, #-16]
    a5dc:	str	r3, [fp, #-20]	; 0xffffffec
    a5e0:	ldr	r3, [fp, #-8]
    a5e4:	ldr	r3, [r3, #292]	; 0x124
    a5e8:	mov	r0, r3
    a5ec:	add	sp, fp, #0
    a5f0:	pop	{fp}		; (ldr fp, [sp], #4)
    a5f4:	bx	lr

0000a5f8 <storeAttributeValue>:
    a5f8:	push	{fp, lr}
    a5fc:	add	fp, sp, #4
    a600:	sub	sp, sp, #32
    a604:	str	r0, [fp, #-16]
    a608:	str	r1, [fp, #-20]	; 0xffffffec
    a60c:	str	r3, [fp, #-28]	; 0xffffffe4
    a610:	mov	r3, r2
    a614:	strb	r3, [fp, #-21]	; 0xffffffeb
    a618:	ldrb	r2, [fp, #-21]	; 0xffffffeb
    a61c:	ldr	r3, [fp, #8]
    a620:	str	r3, [sp, #4]
    a624:	ldr	r3, [fp, #4]
    a628:	str	r3, [sp]
    a62c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a630:	ldr	r1, [fp, #-20]	; 0xffffffec
    a634:	ldr	r0, [fp, #-16]
    a638:	bl	a71c <appendAttributeValue>
    a63c:	str	r0, [fp, #-8]
    a640:	ldr	r3, [fp, #-8]
    a644:	cmp	r3, #0
    a648:	beq	a654 <storeAttributeValue+0x5c>
    a64c:	ldr	r3, [fp, #-8]
    a650:	b	a710 <storeAttributeValue+0x118>
    a654:	ldrb	r3, [fp, #-21]	; 0xffffffeb
    a658:	cmp	r3, #0
    a65c:	bne	a6a8 <storeAttributeValue+0xb0>
    a660:	ldr	r3, [fp, #8]
    a664:	ldr	r3, [r3, #12]
    a668:	mov	r2, r3
    a66c:	ldr	r3, [fp, #8]
    a670:	ldr	r3, [r3, #16]
    a674:	cmp	r2, r3
    a678:	beq	a6a8 <storeAttributeValue+0xb0>
    a67c:	ldr	r3, [fp, #8]
    a680:	ldr	r3, [r3, #12]
    a684:	sub	r3, r3, #1
    a688:	ldrb	r3, [r3]
    a68c:	cmp	r3, #32
    a690:	bne	a6a8 <storeAttributeValue+0xb0>
    a694:	ldr	r3, [fp, #8]
    a698:	ldr	r3, [r3, #12]
    a69c:	sub	r2, r3, #1
    a6a0:	ldr	r3, [fp, #8]
    a6a4:	str	r2, [r3, #12]
    a6a8:	ldr	r3, [fp, #8]
    a6ac:	ldr	r2, [r3, #12]
    a6b0:	ldr	r3, [fp, #8]
    a6b4:	ldr	r3, [r3, #8]
    a6b8:	cmp	r2, r3
    a6bc:	bne	a6d4 <storeAttributeValue+0xdc>
    a6c0:	ldr	r0, [fp, #8]
    a6c4:	bl	e9e8 <poolGrow>
    a6c8:	mov	r3, r0
    a6cc:	cmp	r3, #0
    a6d0:	beq	a6f8 <storeAttributeValue+0x100>
    a6d4:	ldr	r3, [fp, #8]
    a6d8:	ldr	r3, [r3, #12]
    a6dc:	add	r1, r3, #1
    a6e0:	ldr	r2, [fp, #8]
    a6e4:	str	r1, [r2, #12]
    a6e8:	mov	r2, #0
    a6ec:	strb	r2, [r3]
    a6f0:	mov	r3, #0
    a6f4:	b	a6fc <storeAttributeValue+0x104>
    a6f8:	mov	r3, #1
    a6fc:	cmp	r3, #0
    a700:	beq	a70c <storeAttributeValue+0x114>
    a704:	mov	r3, #1
    a708:	b	a710 <storeAttributeValue+0x118>
    a70c:	mov	r3, #0
    a710:	mov	r0, r3
    a714:	sub	sp, fp, #4
    a718:	pop	{fp, pc}

0000a71c <appendAttributeValue>:
    a71c:	push	{r4, fp, lr}
    a720:	add	fp, sp, #8
    a724:	sub	sp, sp, #76	; 0x4c
    a728:	str	r0, [fp, #-64]	; 0xffffffc0
    a72c:	str	r1, [fp, #-68]	; 0xffffffbc
    a730:	str	r3, [fp, #-76]	; 0xffffffb4
    a734:	mov	r3, r2
    a738:	strb	r3, [fp, #-69]	; 0xffffffbb
    a73c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a740:	ldr	r3, [r3, #364]	; 0x16c
    a744:	str	r3, [fp, #-24]	; 0xffffffe8
    a748:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a74c:	ldr	r4, [r3, #16]
    a750:	sub	r3, fp, #56	; 0x38
    a754:	ldr	r2, [fp, #4]
    a758:	ldr	r1, [fp, #-76]	; 0xffffffb4
    a75c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    a760:	blx	r4
    a764:	str	r0, [fp, #-28]	; 0xffffffe4
    a768:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a76c:	add	r3, r3, #4
    a770:	cmp	r3, #43	; 0x2b
    a774:	ldrls	pc, [pc, r3, lsl #2]
    a778:	b	ae14 <appendAttributeValue+0x6f8>
    a77c:	.word	0x0000a82c
    a780:	.word	0x0000aa28
    a784:	.word	0x0000ae14
    a788:	.word	0x0000a85c
    a78c:	.word	0x0000a834
    a790:	.word	0x0000ae14
    a794:	.word	0x0000ae14
    a798:	.word	0x0000ae14
    a79c:	.word	0x0000ae14
    a7a0:	.word	0x0000ae14
    a7a4:	.word	0x0000aa00
    a7a8:	.word	0x0000aa40
    a7ac:	.word	0x0000ae14
    a7b0:	.word	0x0000aae4
    a7b4:	.word	0x0000a884
    a7b8:	.word	0x0000ae14
    a7bc:	.word	0x0000ae14
    a7c0:	.word	0x0000ae14
    a7c4:	.word	0x0000ae14
    a7c8:	.word	0x0000ae14
    a7cc:	.word	0x0000ae14
    a7d0:	.word	0x0000ae14
    a7d4:	.word	0x0000ae14
    a7d8:	.word	0x0000ae14
    a7dc:	.word	0x0000ae14
    a7e0:	.word	0x0000ae14
    a7e4:	.word	0x0000ae14
    a7e8:	.word	0x0000ae14
    a7ec:	.word	0x0000ae14
    a7f0:	.word	0x0000ae14
    a7f4:	.word	0x0000ae14
    a7f8:	.word	0x0000ae14
    a7fc:	.word	0x0000ae14
    a800:	.word	0x0000ae14
    a804:	.word	0x0000ae14
    a808:	.word	0x0000ae14
    a80c:	.word	0x0000ae14
    a810:	.word	0x0000ae14
    a814:	.word	0x0000ae14
    a818:	.word	0x0000ae14
    a81c:	.word	0x0000ae14
    a820:	.word	0x0000ae14
    a824:	.word	0x0000ae14
    a828:	.word	0x0000aa40
    a82c:	mov	r3, #0
    a830:	b	ae6c <appendAttributeValue+0x750>
    a834:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a838:	ldr	r2, [r3, #152]	; 0x98
    a83c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a840:	cmp	r2, r3
    a844:	bne	a854 <appendAttributeValue+0x138>
    a848:	ldr	r2, [fp, #-56]	; 0xffffffc8
    a84c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a850:	str	r2, [r3, #296]	; 0x128
    a854:	mov	r3, #4
    a858:	b	ae6c <appendAttributeValue+0x750>
    a85c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a860:	ldr	r2, [r3, #152]	; 0x98
    a864:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a868:	cmp	r2, r3
    a86c:	bne	a87c <appendAttributeValue+0x160>
    a870:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a874:	ldr	r2, [fp, #-76]	; 0xffffffb4
    a878:	str	r2, [r3, #296]	; 0x128
    a87c:	mov	r3, #4
    a880:	b	ae6c <appendAttributeValue+0x750>
    a884:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a888:	ldr	r3, [r3, #44]	; 0x2c
    a88c:	ldr	r1, [fp, #-76]	; 0xffffffb4
    a890:	ldr	r0, [fp, #-68]	; 0xffffffbc
    a894:	blx	r3
    a898:	str	r0, [fp, #-32]	; 0xffffffe0
    a89c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a8a0:	cmp	r3, #0
    a8a4:	bge	a8d0 <appendAttributeValue+0x1b4>
    a8a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a8ac:	ldr	r2, [r3, #152]	; 0x98
    a8b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a8b4:	cmp	r2, r3
    a8b8:	bne	a8c8 <appendAttributeValue+0x1ac>
    a8bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a8c0:	ldr	r2, [fp, #-76]	; 0xffffffb4
    a8c4:	str	r2, [r3, #296]	; 0x128
    a8c8:	mov	r3, #14
    a8cc:	b	ae6c <appendAttributeValue+0x750>
    a8d0:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    a8d4:	cmp	r3, #0
    a8d8:	bne	a91c <appendAttributeValue+0x200>
    a8dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a8e0:	cmp	r3, #32
    a8e4:	bne	a91c <appendAttributeValue+0x200>
    a8e8:	ldr	r3, [fp, #8]
    a8ec:	ldr	r3, [r3, #12]
    a8f0:	mov	r2, r3
    a8f4:	ldr	r3, [fp, #8]
    a8f8:	ldr	r3, [r3, #16]
    a8fc:	cmp	r2, r3
    a900:	beq	ae60 <appendAttributeValue+0x744>
    a904:	ldr	r3, [fp, #8]
    a908:	ldr	r3, [r3, #12]
    a90c:	sub	r3, r3, #1
    a910:	ldrb	r3, [r3]
    a914:	cmp	r3, #32
    a918:	beq	ae60 <appendAttributeValue+0x744>
    a91c:	sub	r3, fp, #60	; 0x3c
    a920:	mov	r1, r3
    a924:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a928:	bl	0 <coda_XmlUtf8Encode>
    a92c:	str	r0, [fp, #-32]	; 0xffffffe0
    a930:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a934:	cmp	r3, #0
    a938:	bne	a964 <appendAttributeValue+0x248>
    a93c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a940:	ldr	r2, [r3, #152]	; 0x98
    a944:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a948:	cmp	r2, r3
    a94c:	bne	a95c <appendAttributeValue+0x240>
    a950:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a954:	ldr	r2, [fp, #-76]	; 0xffffffb4
    a958:	str	r2, [r3, #296]	; 0x128
    a95c:	mov	r3, #14
    a960:	b	ae6c <appendAttributeValue+0x750>
    a964:	mov	r3, #0
    a968:	str	r3, [fp, #-16]
    a96c:	b	a9ec <appendAttributeValue+0x2d0>
    a970:	ldr	r3, [fp, #8]
    a974:	ldr	r2, [r3, #12]
    a978:	ldr	r3, [fp, #8]
    a97c:	ldr	r3, [r3, #8]
    a980:	cmp	r2, r3
    a984:	bne	a99c <appendAttributeValue+0x280>
    a988:	ldr	r0, [fp, #8]
    a98c:	bl	e9e8 <poolGrow>
    a990:	mov	r3, r0
    a994:	cmp	r3, #0
    a998:	beq	a9cc <appendAttributeValue+0x2b0>
    a99c:	ldr	r3, [fp, #8]
    a9a0:	ldr	r3, [r3, #12]
    a9a4:	add	r1, r3, #1
    a9a8:	ldr	r2, [fp, #8]
    a9ac:	str	r1, [r2, #12]
    a9b0:	sub	r1, fp, #60	; 0x3c
    a9b4:	ldr	r2, [fp, #-16]
    a9b8:	add	r2, r1, r2
    a9bc:	ldrb	r2, [r2]
    a9c0:	strb	r2, [r3]
    a9c4:	mov	r3, #0
    a9c8:	b	a9d0 <appendAttributeValue+0x2b4>
    a9cc:	mov	r3, #1
    a9d0:	cmp	r3, #0
    a9d4:	beq	a9e0 <appendAttributeValue+0x2c4>
    a9d8:	mov	r3, #1
    a9dc:	b	ae6c <appendAttributeValue+0x750>
    a9e0:	ldr	r3, [fp, #-16]
    a9e4:	add	r3, r3, #1
    a9e8:	str	r3, [fp, #-16]
    a9ec:	ldr	r2, [fp, #-16]
    a9f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a9f4:	cmp	r2, r3
    a9f8:	blt	a970 <appendAttributeValue+0x254>
    a9fc:	b	ae60 <appendAttributeValue+0x744>
    aa00:	ldr	r3, [fp, #-56]	; 0xffffffc8
    aa04:	ldr	r2, [fp, #-76]	; 0xffffffb4
    aa08:	ldr	r1, [fp, #-68]	; 0xffffffbc
    aa0c:	ldr	r0, [fp, #8]
    aa10:	bl	e618 <poolAppend>
    aa14:	mov	r3, r0
    aa18:	cmp	r3, #0
    aa1c:	bne	ae3c <appendAttributeValue+0x720>
    aa20:	mov	r3, #1
    aa24:	b	ae6c <appendAttributeValue+0x750>
    aa28:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aa2c:	ldr	r3, [r3, #68]	; 0x44
    aa30:	mov	r2, r3
    aa34:	ldr	r3, [fp, #-76]	; 0xffffffb4
    aa38:	add	r3, r3, r2
    aa3c:	str	r3, [fp, #-56]	; 0xffffffc8
    aa40:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    aa44:	cmp	r3, #0
    aa48:	bne	aa80 <appendAttributeValue+0x364>
    aa4c:	ldr	r3, [fp, #8]
    aa50:	ldr	r3, [r3, #12]
    aa54:	mov	r2, r3
    aa58:	ldr	r3, [fp, #8]
    aa5c:	ldr	r3, [r3, #16]
    aa60:	cmp	r2, r3
    aa64:	beq	ae60 <appendAttributeValue+0x744>
    aa68:	ldr	r3, [fp, #8]
    aa6c:	ldr	r3, [r3, #12]
    aa70:	sub	r3, r3, #1
    aa74:	ldrb	r3, [r3]
    aa78:	cmp	r3, #32
    aa7c:	beq	ae60 <appendAttributeValue+0x744>
    aa80:	ldr	r3, [fp, #8]
    aa84:	ldr	r2, [r3, #12]
    aa88:	ldr	r3, [fp, #8]
    aa8c:	ldr	r3, [r3, #8]
    aa90:	cmp	r2, r3
    aa94:	bne	aaac <appendAttributeValue+0x390>
    aa98:	ldr	r0, [fp, #8]
    aa9c:	bl	e9e8 <poolGrow>
    aaa0:	mov	r3, r0
    aaa4:	cmp	r3, #0
    aaa8:	beq	aad0 <appendAttributeValue+0x3b4>
    aaac:	ldr	r3, [fp, #8]
    aab0:	ldr	r3, [r3, #12]
    aab4:	add	r1, r3, #1
    aab8:	ldr	r2, [fp, #8]
    aabc:	str	r1, [r2, #12]
    aac0:	mov	r2, #32
    aac4:	strb	r2, [r3]
    aac8:	mov	r3, #0
    aacc:	b	aad4 <appendAttributeValue+0x3b8>
    aad0:	mov	r3, #1
    aad4:	cmp	r3, #0
    aad8:	beq	ae44 <appendAttributeValue+0x728>
    aadc:	mov	r3, #1
    aae0:	b	ae6c <appendAttributeValue+0x750>
    aae4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aae8:	ldr	r3, [r3, #48]	; 0x30
    aaec:	ldr	r2, [fp, #-68]	; 0xffffffbc
    aaf0:	ldr	r2, [r2, #68]	; 0x44
    aaf4:	mov	r1, r2
    aaf8:	ldr	r2, [fp, #-76]	; 0xffffffb4
    aafc:	add	r0, r2, r1
    ab00:	ldr	r1, [fp, #-56]	; 0xffffffc8
    ab04:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ab08:	ldr	r2, [r2, #68]	; 0x44
    ab0c:	rsb	r2, r2, #0
    ab10:	add	r2, r1, r2
    ab14:	mov	r1, r0
    ab18:	ldr	r0, [fp, #-68]	; 0xffffffbc
    ab1c:	blx	r3
    ab20:	mov	r3, r0
    ab24:	strb	r3, [fp, #-33]	; 0xffffffdf
    ab28:	ldrb	r3, [fp, #-33]	; 0xffffffdf
    ab2c:	cmp	r3, #0
    ab30:	beq	ab98 <appendAttributeValue+0x47c>
    ab34:	ldr	r3, [fp, #8]
    ab38:	ldr	r2, [r3, #12]
    ab3c:	ldr	r3, [fp, #8]
    ab40:	ldr	r3, [r3, #8]
    ab44:	cmp	r2, r3
    ab48:	bne	ab60 <appendAttributeValue+0x444>
    ab4c:	ldr	r0, [fp, #8]
    ab50:	bl	e9e8 <poolGrow>
    ab54:	mov	r3, r0
    ab58:	cmp	r3, #0
    ab5c:	beq	ab84 <appendAttributeValue+0x468>
    ab60:	ldr	r3, [fp, #8]
    ab64:	ldr	r3, [r3, #12]
    ab68:	add	r1, r3, #1
    ab6c:	ldr	r2, [fp, #8]
    ab70:	str	r1, [r2, #12]
    ab74:	ldrb	r2, [fp, #-33]	; 0xffffffdf
    ab78:	strb	r2, [r3]
    ab7c:	mov	r3, #0
    ab80:	b	ab88 <appendAttributeValue+0x46c>
    ab84:	mov	r3, #1
    ab88:	cmp	r3, #0
    ab8c:	beq	ae4c <appendAttributeValue+0x730>
    ab90:	mov	r3, #1
    ab94:	b	ae6c <appendAttributeValue+0x750>
    ab98:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ab9c:	add	r0, r3, #456	; 0x1c8
    aba0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aba4:	ldr	r3, [r3, #68]	; 0x44
    aba8:	mov	r2, r3
    abac:	ldr	r3, [fp, #-76]	; 0xffffffb4
    abb0:	add	r1, r3, r2
    abb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    abb8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    abbc:	ldr	r3, [r3, #68]	; 0x44
    abc0:	rsb	r3, r3, #0
    abc4:	add	r3, r2, r3
    abc8:	mov	r2, r1
    abcc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    abd0:	bl	e940 <poolStoreString>
    abd4:	str	r0, [fp, #-40]	; 0xffffffd8
    abd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    abdc:	cmp	r3, #0
    abe0:	bne	abec <appendAttributeValue+0x4d0>
    abe4:	mov	r3, #1
    abe8:	b	ae6c <appendAttributeValue+0x750>
    abec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    abf0:	mov	r3, #0
    abf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    abf8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    abfc:	bl	dbf4 <lookup>
    ac00:	str	r0, [fp, #-44]	; 0xffffffd4
    ac04:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ac08:	ldr	r2, [r3, #472]	; 0x1d8
    ac0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ac10:	str	r2, [r3, #468]	; 0x1d4
    ac14:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ac18:	add	r2, r3, #80	; 0x50
    ac1c:	ldr	r3, [fp, #8]
    ac20:	cmp	r2, r3
    ac24:	bne	ac80 <appendAttributeValue+0x564>
    ac28:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ac2c:	ldr	r3, [r3, #280]	; 0x118
    ac30:	cmp	r3, #0
    ac34:	beq	ac74 <appendAttributeValue+0x558>
    ac38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ac3c:	ldrb	r3, [r3, #130]	; 0x82
    ac40:	cmp	r3, #0
    ac44:	beq	ac5c <appendAttributeValue+0x540>
    ac48:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ac4c:	ldr	r3, [r3, #308]	; 0x134
    ac50:	cmp	r3, #0
    ac54:	beq	ac6c <appendAttributeValue+0x550>
    ac58:	b	ac74 <appendAttributeValue+0x558>
    ac5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ac60:	ldrb	r3, [r3, #129]	; 0x81
    ac64:	cmp	r3, #0
    ac68:	bne	ac74 <appendAttributeValue+0x558>
    ac6c:	mov	r3, #1
    ac70:	b	ac78 <appendAttributeValue+0x55c>
    ac74:	mov	r3, #0
    ac78:	strb	r3, [fp, #-17]	; 0xffffffef
    ac7c:	b	acb0 <appendAttributeValue+0x594>
    ac80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ac84:	ldrb	r3, [r3, #129]	; 0x81
    ac88:	cmp	r3, #0
    ac8c:	beq	aca0 <appendAttributeValue+0x584>
    ac90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ac94:	ldrb	r3, [r3, #130]	; 0x82
    ac98:	cmp	r3, #0
    ac9c:	beq	aca8 <appendAttributeValue+0x58c>
    aca0:	mov	r3, #1
    aca4:	b	acac <appendAttributeValue+0x590>
    aca8:	mov	r3, #0
    acac:	strb	r3, [fp, #-17]	; 0xffffffef
    acb0:	ldrb	r3, [fp, #-17]	; 0xffffffef
    acb4:	cmp	r3, #0
    acb8:	beq	ace8 <appendAttributeValue+0x5cc>
    acbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    acc0:	cmp	r3, #0
    acc4:	bne	acd0 <appendAttributeValue+0x5b4>
    acc8:	mov	r3, #11
    accc:	b	ae6c <appendAttributeValue+0x750>
    acd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    acd4:	ldrb	r3, [r3, #34]	; 0x22
    acd8:	cmp	r3, #0
    acdc:	bne	acf4 <appendAttributeValue+0x5d8>
    ace0:	mov	r3, #24
    ace4:	b	ae6c <appendAttributeValue+0x750>
    ace8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    acec:	cmp	r3, #0
    acf0:	beq	ae54 <appendAttributeValue+0x738>
    acf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    acf8:	ldrb	r3, [r3, #32]
    acfc:	cmp	r3, #0
    ad00:	beq	ad2c <appendAttributeValue+0x610>
    ad04:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ad08:	ldr	r2, [r3, #152]	; 0x98
    ad0c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ad10:	cmp	r2, r3
    ad14:	bne	ad24 <appendAttributeValue+0x608>
    ad18:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ad1c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ad20:	str	r2, [r3, #296]	; 0x128
    ad24:	mov	r3, #12
    ad28:	b	ae6c <appendAttributeValue+0x750>
    ad2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ad30:	ldr	r3, [r3, #28]
    ad34:	cmp	r3, #0
    ad38:	beq	ad64 <appendAttributeValue+0x648>
    ad3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ad40:	ldr	r2, [r3, #152]	; 0x98
    ad44:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ad48:	cmp	r2, r3
    ad4c:	bne	ad5c <appendAttributeValue+0x640>
    ad50:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ad54:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ad58:	str	r2, [r3, #296]	; 0x128
    ad5c:	mov	r3, #15
    ad60:	b	ae6c <appendAttributeValue+0x750>
    ad64:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ad68:	ldr	r3, [r3, #4]
    ad6c:	cmp	r3, #0
    ad70:	bne	ad9c <appendAttributeValue+0x680>
    ad74:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ad78:	ldr	r2, [r3, #152]	; 0x98
    ad7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ad80:	cmp	r2, r3
    ad84:	bne	ad94 <appendAttributeValue+0x678>
    ad88:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ad8c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ad90:	str	r2, [r3, #296]	; 0x128
    ad94:	mov	r3, #16
    ad98:	b	ae6c <appendAttributeValue+0x750>
    ad9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ada0:	ldr	r3, [r3, #4]
    ada4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    ada8:	ldr	r2, [r2, #8]
    adac:	add	r3, r3, r2
    adb0:	str	r3, [fp, #-48]	; 0xffffffd0
    adb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    adb8:	mov	r2, #1
    adbc:	strb	r2, [r3, #32]
    adc0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    adc4:	ldr	r1, [r3, #236]	; 0xec
    adc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    adcc:	ldr	r0, [r3, #4]
    add0:	ldrb	r2, [fp, #-69]	; 0xffffffbb
    add4:	ldr	r3, [fp, #8]
    add8:	str	r3, [sp, #4]
    addc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ade0:	str	r3, [sp]
    ade4:	mov	r3, r0
    ade8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    adec:	bl	a71c <appendAttributeValue>
    adf0:	str	r0, [fp, #-52]	; 0xffffffcc
    adf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    adf8:	mov	r2, #0
    adfc:	strb	r2, [r3, #32]
    ae00:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ae04:	cmp	r3, #0
    ae08:	beq	ae5c <appendAttributeValue+0x740>
    ae0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ae10:	b	ae6c <appendAttributeValue+0x750>
    ae14:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ae18:	ldr	r2, [r3, #152]	; 0x98
    ae1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ae20:	cmp	r2, r3
    ae24:	bne	ae34 <appendAttributeValue+0x718>
    ae28:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ae2c:	ldr	r2, [fp, #-76]	; 0xffffffb4
    ae30:	str	r2, [r3, #296]	; 0x128
    ae34:	mov	r3, #23
    ae38:	b	ae6c <appendAttributeValue+0x750>
    ae3c:	nop			; (mov r0, r0)
    ae40:	b	ae60 <appendAttributeValue+0x744>
    ae44:	nop			; (mov r0, r0)
    ae48:	b	ae60 <appendAttributeValue+0x744>
    ae4c:	nop			; (mov r0, r0)
    ae50:	b	ae60 <appendAttributeValue+0x744>
    ae54:	nop			; (mov r0, r0)
    ae58:	b	ae60 <appendAttributeValue+0x744>
    ae5c:	nop			; (mov r0, r0)
    ae60:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ae64:	str	r3, [fp, #-76]	; 0xffffffb4
    ae68:	b	a748 <appendAttributeValue+0x2c>
    ae6c:	mov	r0, r3
    ae70:	sub	sp, fp, #8
    ae74:	pop	{r4, fp, pc}

0000ae78 <storeEntityValue>:
    ae78:	push	{r4, fp, lr}
    ae7c:	add	fp, sp, #8
    ae80:	sub	sp, sp, #76	; 0x4c
    ae84:	str	r0, [fp, #-64]	; 0xffffffc0
    ae88:	str	r1, [fp, #-68]	; 0xffffffbc
    ae8c:	str	r2, [fp, #-72]	; 0xffffffb8
    ae90:	str	r3, [fp, #-76]	; 0xffffffb4
    ae94:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ae98:	ldr	r3, [r3, #364]	; 0x16c
    ae9c:	str	r3, [fp, #-24]	; 0xffffffe8
    aea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    aea4:	add	r3, r3, #104	; 0x68
    aea8:	str	r3, [fp, #-28]	; 0xffffffe4
    aeac:	mov	r3, #0
    aeb0:	str	r3, [fp, #-16]
    aeb4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    aeb8:	ldr	r3, [r3, #284]	; 0x11c
    aebc:	str	r3, [fp, #-32]	; 0xffffffe0
    aec0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    aec4:	mov	r2, #1
    aec8:	str	r2, [r3, #284]	; 0x11c
    aecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    aed0:	ldr	r3, [r3]
    aed4:	cmp	r3, #0
    aed8:	bne	aef8 <storeEntityValue+0x80>
    aedc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    aee0:	bl	e9e8 <poolGrow>
    aee4:	mov	r3, r0
    aee8:	cmp	r3, #0
    aeec:	bne	aef8 <storeEntityValue+0x80>
    aef0:	mov	r3, #1
    aef4:	b	b480 <storeEntityValue+0x608>
    aef8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aefc:	ldr	r4, [r3, #20]
    af00:	sub	r3, fp, #52	; 0x34
    af04:	ldr	r2, [fp, #-76]	; 0xffffffb4
    af08:	ldr	r1, [fp, #-72]	; 0xffffffb8
    af0c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    af10:	blx	r4
    af14:	str	r0, [fp, #-36]	; 0xffffffdc
    af18:	ldr	r3, [fp, #-36]	; 0xffffffdc
    af1c:	add	r3, r3, #4
    af20:	cmp	r3, #32
    af24:	ldrls	pc, [pc, r3, lsl #2]
    af28:	b	b42c <storeEntityValue+0x5b4>
    af2c:	.word	0x0000b200
    af30:	.word	0x0000b238
    af34:	.word	0x0000b42c
    af38:	.word	0x0000b3d4
    af3c:	.word	0x0000b400
    af40:	.word	0x0000b42c
    af44:	.word	0x0000b42c
    af48:	.word	0x0000b42c
    af4c:	.word	0x0000b42c
    af50:	.word	0x0000b42c
    af54:	.word	0x0000b20c
    af58:	.word	0x0000b250
    af5c:	.word	0x0000b42c
    af60:	.word	0x0000b20c
    af64:	.word	0x0000b2a8
    af68:	.word	0x0000b42c
    af6c:	.word	0x0000b42c
    af70:	.word	0x0000b42c
    af74:	.word	0x0000b42c
    af78:	.word	0x0000b42c
    af7c:	.word	0x0000b42c
    af80:	.word	0x0000b42c
    af84:	.word	0x0000b42c
    af88:	.word	0x0000b42c
    af8c:	.word	0x0000b42c
    af90:	.word	0x0000b42c
    af94:	.word	0x0000b42c
    af98:	.word	0x0000b42c
    af9c:	.word	0x0000b42c
    afa0:	.word	0x0000b42c
    afa4:	.word	0x0000b42c
    afa8:	.word	0x0000b42c
    afac:	.word	0x0000afb0
    afb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    afb4:	ldrb	r3, [r3, #504]	; 0x1f8
    afb8:	cmp	r3, #0
    afbc:	bne	afd4 <storeEntityValue+0x15c>
    afc0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    afc4:	ldr	r2, [r3, #152]	; 0x98
    afc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    afcc:	cmp	r2, r3
    afd0:	beq	b1e8 <storeEntityValue+0x370>
    afd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    afd8:	add	r0, r3, #432	; 0x1b0
    afdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    afe0:	ldr	r3, [r3, #68]	; 0x44
    afe4:	mov	r2, r3
    afe8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    afec:	add	r1, r3, r2
    aff0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    aff4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    aff8:	ldr	r3, [r3, #68]	; 0x44
    affc:	rsb	r3, r3, #0
    b000:	add	r3, r2, r3
    b004:	mov	r2, r1
    b008:	ldr	r1, [fp, #-68]	; 0xffffffbc
    b00c:	bl	e940 <poolStoreString>
    b010:	str	r0, [fp, #-44]	; 0xffffffd4
    b014:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b018:	cmp	r3, #0
    b01c:	bne	b02c <storeEntityValue+0x1b4>
    b020:	mov	r3, #1
    b024:	str	r3, [fp, #-16]
    b028:	b	b470 <storeEntityValue+0x5f8>
    b02c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b030:	add	r1, r3, #132	; 0x84
    b034:	mov	r3, #0
    b038:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b03c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    b040:	bl	dbf4 <lookup>
    b044:	str	r0, [fp, #-48]	; 0xffffffd0
    b048:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b04c:	ldr	r2, [r3, #448]	; 0x1c0
    b050:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b054:	str	r2, [r3, #444]	; 0x1bc
    b058:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b05c:	cmp	r3, #0
    b060:	bne	b078 <storeEntityValue+0x200>
    b064:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b068:	ldrb	r2, [r3, #130]	; 0x82
    b06c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b070:	strb	r2, [r3, #128]	; 0x80
    b074:	b	b470 <storeEntityValue+0x5f8>
    b078:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b07c:	ldrb	r3, [r3, #32]
    b080:	cmp	r3, #0
    b084:	beq	b0b4 <storeEntityValue+0x23c>
    b088:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b08c:	ldr	r2, [r3, #152]	; 0x98
    b090:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b094:	cmp	r2, r3
    b098:	bne	b0a8 <storeEntityValue+0x230>
    b09c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b0a4:	str	r2, [r3, #296]	; 0x128
    b0a8:	mov	r3, #12
    b0ac:	str	r3, [fp, #-16]
    b0b0:	b	b470 <storeEntityValue+0x5f8>
    b0b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b0b8:	ldr	r3, [r3, #16]
    b0bc:	cmp	r3, #0
    b0c0:	beq	b18c <storeEntityValue+0x314>
    b0c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0c8:	ldr	r3, [r3, #120]	; 0x78
    b0cc:	cmp	r3, #0
    b0d0:	beq	b178 <storeEntityValue+0x300>
    b0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b0d8:	mov	r2, #0
    b0dc:	strb	r2, [r3, #131]	; 0x83
    b0e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b0e4:	mov	r2, #1
    b0e8:	strb	r2, [r3, #32]
    b0ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0f0:	ldr	r4, [r3, #120]	; 0x78
    b0f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b0f8:	ldr	r0, [r3, #124]	; 0x7c
    b0fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b100:	ldr	r2, [r3, #20]
    b104:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b108:	ldr	r1, [r3, #16]
    b10c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b110:	ldr	r3, [r3, #24]
    b114:	str	r3, [sp]
    b118:	mov	r3, r1
    b11c:	mov	r1, #0
    b120:	blx	r4
    b124:	mov	r3, r0
    b128:	cmp	r3, #0
    b12c:	bne	b148 <storeEntityValue+0x2d0>
    b130:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b134:	mov	r2, #0
    b138:	strb	r2, [r3, #32]
    b13c:	mov	r3, #21
    b140:	str	r3, [fp, #-16]
    b144:	b	b470 <storeEntityValue+0x5f8>
    b148:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b14c:	mov	r2, #0
    b150:	strb	r2, [r3, #32]
    b154:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b158:	ldrb	r3, [r3, #131]	; 0x83
    b15c:	cmp	r3, #0
    b160:	bne	b458 <storeEntityValue+0x5e0>
    b164:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b168:	ldrb	r2, [r3, #130]	; 0x82
    b16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b170:	strb	r2, [r3, #128]	; 0x80
    b174:	b	b458 <storeEntityValue+0x5e0>
    b178:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b17c:	ldrb	r2, [r3, #130]	; 0x82
    b180:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b184:	strb	r2, [r3, #128]	; 0x80
    b188:	b	b458 <storeEntityValue+0x5e0>
    b18c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b190:	mov	r2, #1
    b194:	strb	r2, [r3, #32]
    b198:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b19c:	ldr	r1, [r3, #236]	; 0xec
    b1a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b1a4:	ldr	r0, [r3, #4]
    b1a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b1ac:	ldr	r3, [r3, #4]
    b1b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    b1b4:	ldr	r2, [r2, #8]
    b1b8:	add	r3, r3, r2
    b1bc:	mov	r2, r0
    b1c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    b1c4:	bl	ae78 <storeEntityValue>
    b1c8:	str	r0, [fp, #-16]
    b1cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b1d0:	mov	r2, #0
    b1d4:	strb	r2, [r3, #32]
    b1d8:	ldr	r3, [fp, #-16]
    b1dc:	cmp	r3, #0
    b1e0:	beq	b458 <storeEntityValue+0x5e0>
    b1e4:	b	b470 <storeEntityValue+0x5f8>
    b1e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b1ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b1f0:	str	r2, [r3, #296]	; 0x128
    b1f4:	mov	r3, #10
    b1f8:	str	r3, [fp, #-16]
    b1fc:	b	b470 <storeEntityValue+0x5f8>
    b200:	mov	r3, #0
    b204:	str	r3, [fp, #-16]
    b208:	b	b470 <storeEntityValue+0x5f8>
    b20c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b210:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b214:	ldr	r1, [fp, #-68]	; 0xffffffbc
    b218:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b21c:	bl	e618 <poolAppend>
    b220:	mov	r3, r0
    b224:	cmp	r3, #0
    b228:	bne	b460 <storeEntityValue+0x5e8>
    b22c:	mov	r3, #1
    b230:	str	r3, [fp, #-16]
    b234:	b	b470 <storeEntityValue+0x5f8>
    b238:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b23c:	ldr	r3, [r3, #68]	; 0x44
    b240:	mov	r2, r3
    b244:	ldr	r3, [fp, #-72]	; 0xffffffb8
    b248:	add	r3, r3, r2
    b24c:	str	r3, [fp, #-52]	; 0xffffffcc
    b250:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b254:	ldr	r2, [r3, #8]
    b258:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b25c:	ldr	r3, [r3, #12]
    b260:	cmp	r2, r3
    b264:	bne	b288 <storeEntityValue+0x410>
    b268:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b26c:	bl	e9e8 <poolGrow>
    b270:	mov	r3, r0
    b274:	cmp	r3, #0
    b278:	bne	b288 <storeEntityValue+0x410>
    b27c:	mov	r3, #1
    b280:	str	r3, [fp, #-16]
    b284:	b	b470 <storeEntityValue+0x5f8>
    b288:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b28c:	ldr	r3, [r3, #12]
    b290:	add	r1, r3, #1
    b294:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b298:	str	r1, [r2, #12]
    b29c:	mov	r2, #10
    b2a0:	strb	r2, [r3]
    b2a4:	b	b464 <storeEntityValue+0x5ec>
    b2a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b2ac:	ldr	r3, [r3, #44]	; 0x2c
    b2b0:	ldr	r1, [fp, #-72]	; 0xffffffb8
    b2b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
    b2b8:	blx	r3
    b2bc:	str	r0, [fp, #-40]	; 0xffffffd8
    b2c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b2c4:	cmp	r3, #0
    b2c8:	bge	b2f8 <storeEntityValue+0x480>
    b2cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b2d0:	ldr	r2, [r3, #152]	; 0x98
    b2d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b2d8:	cmp	r2, r3
    b2dc:	bne	b2ec <storeEntityValue+0x474>
    b2e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b2e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b2e8:	str	r2, [r3, #296]	; 0x128
    b2ec:	mov	r3, #14
    b2f0:	str	r3, [fp, #-16]
    b2f4:	b	b470 <storeEntityValue+0x5f8>
    b2f8:	sub	r3, fp, #56	; 0x38
    b2fc:	mov	r1, r3
    b300:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b304:	bl	0 <coda_XmlUtf8Encode>
    b308:	str	r0, [fp, #-40]	; 0xffffffd8
    b30c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b310:	cmp	r3, #0
    b314:	bne	b344 <storeEntityValue+0x4cc>
    b318:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b31c:	ldr	r2, [r3, #152]	; 0x98
    b320:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b324:	cmp	r2, r3
    b328:	bne	b338 <storeEntityValue+0x4c0>
    b32c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b330:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b334:	str	r2, [r3, #296]	; 0x128
    b338:	mov	r3, #14
    b33c:	str	r3, [fp, #-16]
    b340:	b	b470 <storeEntityValue+0x5f8>
    b344:	mov	r3, #0
    b348:	str	r3, [fp, #-20]	; 0xffffffec
    b34c:	b	b3c0 <storeEntityValue+0x548>
    b350:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b354:	ldr	r2, [r3, #8]
    b358:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b35c:	ldr	r3, [r3, #12]
    b360:	cmp	r2, r3
    b364:	bne	b38c <storeEntityValue+0x514>
    b368:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b36c:	bl	e9e8 <poolGrow>
    b370:	mov	r3, r0
    b374:	cmp	r3, #0
    b378:	bne	b38c <storeEntityValue+0x514>
    b37c:	mov	r3, #1
    b380:	str	r3, [fp, #-16]
    b384:	nop			; (mov r0, r0)
    b388:	b	b470 <storeEntityValue+0x5f8>
    b38c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b390:	ldr	r3, [r3, #12]
    b394:	add	r1, r3, #1
    b398:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b39c:	str	r1, [r2, #12]
    b3a0:	sub	r1, fp, #56	; 0x38
    b3a4:	ldr	r2, [fp, #-20]	; 0xffffffec
    b3a8:	add	r2, r1, r2
    b3ac:	ldrb	r2, [r2]
    b3b0:	strb	r2, [r3]
    b3b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    b3b8:	add	r3, r3, #1
    b3bc:	str	r3, [fp, #-20]	; 0xffffffec
    b3c0:	ldr	r2, [fp, #-20]	; 0xffffffec
    b3c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b3c8:	cmp	r2, r3
    b3cc:	blt	b350 <storeEntityValue+0x4d8>
    b3d0:	b	b464 <storeEntityValue+0x5ec>
    b3d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b3d8:	ldr	r2, [r3, #152]	; 0x98
    b3dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b3e0:	cmp	r2, r3
    b3e4:	bne	b3f4 <storeEntityValue+0x57c>
    b3e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b3ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b3f0:	str	r2, [r3, #296]	; 0x128
    b3f4:	mov	r3, #4
    b3f8:	str	r3, [fp, #-16]
    b3fc:	b	b470 <storeEntityValue+0x5f8>
    b400:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b404:	ldr	r2, [r3, #152]	; 0x98
    b408:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b40c:	cmp	r2, r3
    b410:	bne	b420 <storeEntityValue+0x5a8>
    b414:	ldr	r2, [fp, #-52]	; 0xffffffcc
    b418:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b41c:	str	r2, [r3, #296]	; 0x128
    b420:	mov	r3, #4
    b424:	str	r3, [fp, #-16]
    b428:	b	b470 <storeEntityValue+0x5f8>
    b42c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b430:	ldr	r2, [r3, #152]	; 0x98
    b434:	ldr	r3, [fp, #-68]	; 0xffffffbc
    b438:	cmp	r2, r3
    b43c:	bne	b44c <storeEntityValue+0x5d4>
    b440:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b444:	ldr	r2, [fp, #-72]	; 0xffffffb8
    b448:	str	r2, [r3, #296]	; 0x128
    b44c:	mov	r3, #23
    b450:	str	r3, [fp, #-16]
    b454:	b	b470 <storeEntityValue+0x5f8>
    b458:	nop			; (mov r0, r0)
    b45c:	b	b464 <storeEntityValue+0x5ec>
    b460:	nop			; (mov r0, r0)
    b464:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b468:	str	r3, [fp, #-72]	; 0xffffffb8
    b46c:	b	aef8 <storeEntityValue+0x80>
    b470:	ldr	r3, [fp, #-64]	; 0xffffffc0
    b474:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b478:	str	r2, [r3, #284]	; 0x11c
    b47c:	ldr	r3, [fp, #-16]
    b480:	mov	r0, r3
    b484:	sub	sp, fp, #8
    b488:	pop	{r4, fp, pc}

0000b48c <normalizeLines>:
    b48c:	push	{fp}		; (str fp, [sp, #-4]!)
    b490:	add	fp, sp, #0
    b494:	sub	sp, sp, #20
    b498:	str	r0, [fp, #-16]
    b49c:	ldr	r3, [fp, #-16]
    b4a0:	ldrb	r3, [r3]
    b4a4:	cmp	r3, #0
    b4a8:	beq	b568 <normalizeLines+0xdc>
    b4ac:	ldr	r3, [fp, #-16]
    b4b0:	ldrb	r3, [r3]
    b4b4:	cmp	r3, #13
    b4b8:	beq	b4cc <normalizeLines+0x40>
    b4bc:	ldr	r3, [fp, #-16]
    b4c0:	add	r3, r3, #1
    b4c4:	str	r3, [fp, #-16]
    b4c8:	b	b49c <normalizeLines+0x10>
    b4cc:	nop			; (mov r0, r0)
    b4d0:	ldr	r3, [fp, #-16]
    b4d4:	str	r3, [fp, #-8]
    b4d8:	ldr	r3, [fp, #-16]
    b4dc:	ldrb	r3, [r3]
    b4e0:	cmp	r3, #13
    b4e4:	bne	b528 <normalizeLines+0x9c>
    b4e8:	ldr	r3, [fp, #-8]
    b4ec:	add	r2, r3, #1
    b4f0:	str	r2, [fp, #-8]
    b4f4:	mov	r2, #10
    b4f8:	strb	r2, [r3]
    b4fc:	ldr	r3, [fp, #-16]
    b500:	add	r3, r3, #1
    b504:	str	r3, [fp, #-16]
    b508:	ldr	r3, [fp, #-16]
    b50c:	ldrb	r3, [r3]
    b510:	cmp	r3, #10
    b514:	bne	b548 <normalizeLines+0xbc>
    b518:	ldr	r3, [fp, #-16]
    b51c:	add	r3, r3, #1
    b520:	str	r3, [fp, #-16]
    b524:	b	b548 <normalizeLines+0xbc>
    b528:	ldr	r3, [fp, #-8]
    b52c:	add	r2, r3, #1
    b530:	str	r2, [fp, #-8]
    b534:	ldr	r2, [fp, #-16]
    b538:	add	r1, r2, #1
    b53c:	str	r1, [fp, #-16]
    b540:	ldrb	r2, [r2]
    b544:	strb	r2, [r3]
    b548:	ldr	r3, [fp, #-16]
    b54c:	ldrb	r3, [r3]
    b550:	cmp	r3, #0
    b554:	bne	b4d8 <normalizeLines+0x4c>
    b558:	ldr	r3, [fp, #-8]
    b55c:	mov	r2, #0
    b560:	strb	r2, [r3]
    b564:	b	b56c <normalizeLines+0xe0>
    b568:	nop			; (mov r0, r0)
    b56c:	add	sp, fp, #0
    b570:	pop	{fp}		; (ldr fp, [sp], #4)
    b574:	bx	lr

0000b578 <reportProcessingInstruction>:
    b578:	push	{r4, fp, lr}
    b57c:	add	fp, sp, #8
    b580:	sub	sp, sp, #36	; 0x24
    b584:	str	r0, [fp, #-32]	; 0xffffffe0
    b588:	str	r1, [fp, #-36]	; 0xffffffdc
    b58c:	str	r2, [fp, #-40]	; 0xffffffd8
    b590:	str	r3, [fp, #-44]	; 0xffffffd4
    b594:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b598:	ldr	r3, [r3, #72]	; 0x48
    b59c:	cmp	r3, #0
    b5a0:	bne	b5d0 <reportProcessingInstruction+0x58>
    b5a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b5a8:	ldr	r3, [r3, #88]	; 0x58
    b5ac:	cmp	r3, #0
    b5b0:	beq	b5c8 <reportProcessingInstruction+0x50>
    b5b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b5b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b5bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b5c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b5c4:	bl	b7f8 <reportDefault>
    b5c8:	mov	r3, #1
    b5cc:	b	b6ec <reportProcessingInstruction+0x174>
    b5d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b5d4:	ldr	r3, [r3, #68]	; 0x44
    b5d8:	lsl	r3, r3, #1
    b5dc:	mov	r2, r3
    b5e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b5e4:	add	r3, r3, r2
    b5e8:	str	r3, [fp, #-40]	; 0xffffffd8
    b5ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b5f0:	ldr	r3, [r3, #32]
    b5f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b5f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b5fc:	blx	r3
    b600:	mov	r3, r0
    b604:	mov	r2, r3
    b608:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b60c:	add	r3, r3, r2
    b610:	str	r3, [fp, #-16]
    b614:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b618:	add	r0, r3, #432	; 0x1b0
    b61c:	ldr	r3, [fp, #-16]
    b620:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b624:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b628:	bl	e940 <poolStoreString>
    b62c:	str	r0, [fp, #-20]	; 0xffffffec
    b630:	ldr	r3, [fp, #-20]	; 0xffffffec
    b634:	cmp	r3, #0
    b638:	bne	b644 <reportProcessingInstruction+0xcc>
    b63c:	mov	r3, #0
    b640:	b	b6ec <reportProcessingInstruction+0x174>
    b644:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b648:	ldr	r2, [r3, #444]	; 0x1bc
    b64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b650:	str	r2, [r3, #448]	; 0x1c0
    b654:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b658:	add	r4, r3, #432	; 0x1b0
    b65c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b660:	ldr	r3, [r3, #36]	; 0x24
    b664:	ldr	r1, [fp, #-16]
    b668:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b66c:	blx	r3
    b670:	mov	r1, r0
    b674:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b678:	ldr	r3, [r3, #68]	; 0x44
    b67c:	lsl	r3, r3, #1
    b680:	rsb	r3, r3, #0
    b684:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b688:	add	r3, r2, r3
    b68c:	mov	r2, r1
    b690:	ldr	r1, [fp, #-36]	; 0xffffffdc
    b694:	mov	r0, r4
    b698:	bl	e940 <poolStoreString>
    b69c:	str	r0, [fp, #-24]	; 0xffffffe8
    b6a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b6a4:	cmp	r3, #0
    b6a8:	bne	b6b4 <reportProcessingInstruction+0x13c>
    b6ac:	mov	r3, #0
    b6b0:	b	b6ec <reportProcessingInstruction+0x174>
    b6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b6b8:	bl	b48c <normalizeLines>
    b6bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b6c0:	ldr	r3, [r3, #72]	; 0x48
    b6c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b6c8:	ldr	r0, [r2, #4]
    b6cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b6d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    b6d4:	blx	r3
    b6d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b6dc:	add	r3, r3, #432	; 0x1b0
    b6e0:	mov	r0, r3
    b6e4:	bl	e4b4 <poolClear>
    b6e8:	mov	r3, #1
    b6ec:	mov	r0, r3
    b6f0:	sub	sp, fp, #8
    b6f4:	pop	{r4, fp, pc}

0000b6f8 <reportComment>:
    b6f8:	push	{fp, lr}
    b6fc:	add	fp, sp, #4
    b700:	sub	sp, sp, #24
    b704:	str	r0, [fp, #-16]
    b708:	str	r1, [fp, #-20]	; 0xffffffec
    b70c:	str	r2, [fp, #-24]	; 0xffffffe8
    b710:	str	r3, [fp, #-28]	; 0xffffffe4
    b714:	ldr	r3, [fp, #-16]
    b718:	ldr	r3, [r3, #76]	; 0x4c
    b71c:	cmp	r3, #0
    b720:	bne	b750 <reportComment+0x58>
    b724:	ldr	r3, [fp, #-16]
    b728:	ldr	r3, [r3, #88]	; 0x58
    b72c:	cmp	r3, #0
    b730:	beq	b748 <reportComment+0x50>
    b734:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b738:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b73c:	ldr	r1, [fp, #-20]	; 0xffffffec
    b740:	ldr	r0, [fp, #-16]
    b744:	bl	b7f8 <reportDefault>
    b748:	mov	r3, #1
    b74c:	b	b7ec <reportComment+0xf4>
    b750:	ldr	r3, [fp, #-16]
    b754:	add	r0, r3, #432	; 0x1b0
    b758:	ldr	r3, [fp, #-20]	; 0xffffffec
    b75c:	ldr	r3, [r3, #68]	; 0x44
    b760:	lsl	r3, r3, #2
    b764:	mov	r2, r3
    b768:	ldr	r3, [fp, #-24]	; 0xffffffe8
    b76c:	add	r1, r3, r2
    b770:	ldr	r3, [fp, #-20]	; 0xffffffec
    b774:	ldr	r2, [r3, #68]	; 0x44
    b778:	mov	r3, r2
    b77c:	lsl	r3, r3, #1
    b780:	add	r3, r3, r2
    b784:	rsb	r3, r3, #0
    b788:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b78c:	add	r3, r2, r3
    b790:	mov	r2, r1
    b794:	ldr	r1, [fp, #-20]	; 0xffffffec
    b798:	bl	e940 <poolStoreString>
    b79c:	str	r0, [fp, #-8]
    b7a0:	ldr	r3, [fp, #-8]
    b7a4:	cmp	r3, #0
    b7a8:	bne	b7b4 <reportComment+0xbc>
    b7ac:	mov	r3, #0
    b7b0:	b	b7ec <reportComment+0xf4>
    b7b4:	ldr	r0, [fp, #-8]
    b7b8:	bl	b48c <normalizeLines>
    b7bc:	ldr	r3, [fp, #-16]
    b7c0:	ldr	r3, [r3, #76]	; 0x4c
    b7c4:	ldr	r2, [fp, #-16]
    b7c8:	ldr	r2, [r2, #4]
    b7cc:	ldr	r1, [fp, #-8]
    b7d0:	mov	r0, r2
    b7d4:	blx	r3
    b7d8:	ldr	r3, [fp, #-16]
    b7dc:	add	r3, r3, #432	; 0x1b0
    b7e0:	mov	r0, r3
    b7e4:	bl	e4b4 <poolClear>
    b7e8:	mov	r3, #1
    b7ec:	mov	r0, r3
    b7f0:	sub	sp, fp, #4
    b7f4:	pop	{fp, pc}

0000b7f8 <reportDefault>:
    b7f8:	push	{r4, fp, lr}
    b7fc:	add	fp, sp, #8
    b800:	sub	sp, sp, #44	; 0x2c
    b804:	str	r0, [fp, #-32]	; 0xffffffe0
    b808:	str	r1, [fp, #-36]	; 0xffffffdc
    b80c:	str	r2, [fp, #-40]	; 0xffffffd8
    b810:	str	r3, [fp, #-44]	; 0xffffffd4
    b814:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b818:	ldrb	r3, [r3, #72]	; 0x48
    b81c:	cmp	r3, #0
    b820:	bne	b904 <reportDefault+0x10c>
    b824:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b828:	ldr	r2, [r3, #152]	; 0x98
    b82c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b830:	cmp	r2, r3
    b834:	bne	b854 <reportDefault+0x5c>
    b838:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b83c:	add	r3, r3, #296	; 0x128
    b840:	str	r3, [fp, #-16]
    b844:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b848:	add	r3, r3, #300	; 0x12c
    b84c:	str	r3, [fp, #-20]	; 0xffffffec
    b850:	b	b870 <reportDefault+0x78>
    b854:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b858:	ldr	r3, [r3, #308]	; 0x134
    b85c:	str	r3, [fp, #-16]
    b860:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b864:	ldr	r3, [r3, #308]	; 0x134
    b868:	add	r3, r3, #4
    b86c:	str	r3, [fp, #-20]	; 0xffffffec
    b870:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b874:	ldr	r3, [r3, #52]	; 0x34
    b878:	str	r3, [fp, #-24]	; 0xffffffe8
    b87c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b880:	ldr	r4, [r3, #60]	; 0x3c
    b884:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b888:	ldr	r3, [r3, #56]	; 0x38
    b88c:	sub	r2, fp, #24
    b890:	sub	r1, fp, #40	; 0x28
    b894:	str	r3, [sp]
    b898:	mov	r3, r2
    b89c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b8a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b8a4:	blx	r4
    b8a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b8ac:	ldr	r3, [fp, #-20]	; 0xffffffec
    b8b0:	str	r2, [r3]
    b8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b8b8:	ldr	r3, [r3, #88]	; 0x58
    b8bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b8c0:	ldr	r0, [r2, #4]
    b8c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b8c8:	ldr	r1, [r2, #52]	; 0x34
    b8cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b8d0:	mov	ip, r2
    b8d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b8d8:	ldr	r2, [r2, #52]	; 0x34
    b8dc:	sub	r2, ip, r2
    b8e0:	blx	r3
    b8e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b8e8:	ldr	r3, [fp, #-16]
    b8ec:	str	r2, [r3]
    b8f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b8f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b8f8:	cmp	r2, r3
    b8fc:	bne	b870 <reportDefault+0x78>
    b900:	b	b928 <reportDefault+0x130>
    b904:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b908:	ldr	r3, [r3, #88]	; 0x58
    b90c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b910:	ldr	r0, [r2, #4]
    b914:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b918:	ldr	r2, [fp, #-44]	; 0xffffffd4
    b91c:	ldr	ip, [fp, #-40]	; 0xffffffd8
    b920:	sub	r2, r2, ip
    b924:	blx	r3
    b928:	nop			; (mov r0, r0)
    b92c:	sub	sp, fp, #8
    b930:	pop	{r4, fp, pc}

0000b934 <defineAttribute>:
    b934:	push	{r4, fp, lr}
    b938:	add	fp, sp, #8
    b93c:	sub	sp, sp, #36	; 0x24
    b940:	str	r0, [fp, #-32]	; 0xffffffe0
    b944:	str	r1, [fp, #-36]	; 0xffffffdc
    b948:	mov	r1, r2
    b94c:	mov	r2, r3
    b950:	mov	r3, r1
    b954:	strb	r3, [fp, #-37]	; 0xffffffdb
    b958:	mov	r3, r2
    b95c:	strb	r3, [fp, #-38]	; 0xffffffda
    b960:	ldr	r3, [fp, #4]
    b964:	cmp	r3, #0
    b968:	bne	b978 <defineAttribute+0x44>
    b96c:	ldrb	r3, [fp, #-38]	; 0xffffffda
    b970:	cmp	r3, #0
    b974:	beq	ba14 <defineAttribute+0xe0>
    b978:	mov	r3, #0
    b97c:	str	r3, [fp, #-16]
    b980:	b	b9c8 <defineAttribute+0x94>
    b984:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b988:	ldr	r1, [r3, #20]
    b98c:	ldr	r2, [fp, #-16]
    b990:	mov	r3, r2
    b994:	lsl	r3, r3, #1
    b998:	add	r3, r3, r2
    b99c:	lsl	r3, r3, #2
    b9a0:	add	r3, r1, r3
    b9a4:	ldr	r2, [r3]
    b9a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b9ac:	cmp	r2, r3
    b9b0:	bne	b9bc <defineAttribute+0x88>
    b9b4:	mov	r3, #1
    b9b8:	b	bb84 <defineAttribute+0x250>
    b9bc:	ldr	r3, [fp, #-16]
    b9c0:	add	r3, r3, #1
    b9c4:	str	r3, [fp, #-16]
    b9c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b9cc:	ldr	r2, [r3, #12]
    b9d0:	ldr	r3, [fp, #-16]
    b9d4:	cmp	r2, r3
    b9d8:	bgt	b984 <defineAttribute+0x50>
    b9dc:	ldrb	r3, [fp, #-38]	; 0xffffffda
    b9e0:	cmp	r3, #0
    b9e4:	beq	ba14 <defineAttribute+0xe0>
    b9e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b9ec:	ldr	r3, [r3, #8]
    b9f0:	cmp	r3, #0
    b9f4:	bne	ba14 <defineAttribute+0xe0>
    b9f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b9fc:	ldrb	r3, [r3, #9]
    ba00:	cmp	r3, #0
    ba04:	bne	ba14 <defineAttribute+0xe0>
    ba08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    ba10:	str	r2, [r3, #8]
    ba14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba18:	ldr	r2, [r3, #12]
    ba1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba20:	ldr	r3, [r3, #16]
    ba24:	cmp	r2, r3
    ba28:	bne	bb04 <defineAttribute+0x1d0>
    ba2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba30:	ldr	r3, [r3, #16]
    ba34:	cmp	r3, #0
    ba38:	bne	ba98 <defineAttribute+0x164>
    ba3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba40:	mov	r2, #8
    ba44:	str	r2, [r3, #16]
    ba48:	ldr	r3, [fp, #8]
    ba4c:	ldr	r2, [r3, #12]
    ba50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba54:	ldr	r3, [r3, #16]
    ba58:	mov	r1, r3
    ba5c:	mov	r3, r1
    ba60:	lsl	r3, r3, #1
    ba64:	add	r3, r3, r1
    ba68:	lsl	r3, r3, #2
    ba6c:	mov	r0, r3
    ba70:	blx	r2
    ba74:	mov	r2, r0
    ba78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba7c:	str	r2, [r3, #20]
    ba80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba84:	ldr	r3, [r3, #20]
    ba88:	cmp	r3, #0
    ba8c:	bne	bb04 <defineAttribute+0x1d0>
    ba90:	mov	r3, #0
    ba94:	b	bb84 <defineAttribute+0x250>
    ba98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba9c:	ldr	r3, [r3, #16]
    baa0:	lsl	r3, r3, #1
    baa4:	str	r3, [fp, #-20]	; 0xffffffec
    baa8:	ldr	r3, [fp, #8]
    baac:	ldr	r4, [r3, #16]
    bab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bab4:	ldr	r0, [r3, #20]
    bab8:	ldr	r2, [fp, #-20]	; 0xffffffec
    babc:	mov	r3, r2
    bac0:	lsl	r3, r3, #1
    bac4:	add	r3, r3, r2
    bac8:	lsl	r3, r3, #2
    bacc:	mov	r1, r3
    bad0:	blx	r4
    bad4:	str	r0, [fp, #-24]	; 0xffffffe8
    bad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    badc:	cmp	r3, #0
    bae0:	bne	baec <defineAttribute+0x1b8>
    bae4:	mov	r3, #0
    bae8:	b	bb84 <defineAttribute+0x250>
    baec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    baf0:	ldr	r2, [fp, #-20]	; 0xffffffec
    baf4:	str	r2, [r3, #16]
    baf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bafc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bb00:	str	r2, [r3, #20]
    bb04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bb08:	ldr	r2, [r3, #20]
    bb0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bb10:	ldr	r3, [r3, #12]
    bb14:	mov	r1, r3
    bb18:	mov	r3, r1
    bb1c:	lsl	r3, r3, #1
    bb20:	add	r3, r3, r1
    bb24:	lsl	r3, r3, #2
    bb28:	add	r3, r2, r3
    bb2c:	str	r3, [fp, #-28]	; 0xffffffe4
    bb30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bb34:	ldr	r2, [fp, #-36]	; 0xffffffdc
    bb38:	str	r2, [r3]
    bb3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bb40:	ldr	r2, [fp, #4]
    bb44:	str	r2, [r3, #8]
    bb48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bb4c:	ldrb	r2, [fp, #-37]	; 0xffffffdb
    bb50:	strb	r2, [r3, #4]
    bb54:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    bb58:	cmp	r3, #0
    bb5c:	bne	bb6c <defineAttribute+0x238>
    bb60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bb64:	mov	r2, #1
    bb68:	strb	r2, [r3, #8]
    bb6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bb70:	ldr	r3, [r3, #12]
    bb74:	add	r2, r3, #1
    bb78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bb7c:	str	r2, [r3, #12]
    bb80:	mov	r3, #1
    bb84:	mov	r0, r3
    bb88:	sub	sp, fp, #8
    bb8c:	pop	{r4, fp, pc}

0000bb90 <setElementTypePrefix>:
    bb90:	push	{fp, lr}
    bb94:	add	fp, sp, #4
    bb98:	sub	sp, sp, #24
    bb9c:	str	r0, [fp, #-24]	; 0xffffffe8
    bba0:	str	r1, [fp, #-28]	; 0xffffffe4
    bba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bba8:	ldr	r3, [r3, #364]	; 0x16c
    bbac:	str	r3, [fp, #-16]
    bbb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bbb4:	ldr	r3, [r3]
    bbb8:	str	r3, [fp, #-8]
    bbbc:	b	bd60 <setElementTypePrefix+0x1d0>
    bbc0:	ldr	r3, [fp, #-8]
    bbc4:	ldrb	r3, [r3]
    bbc8:	cmp	r3, #58	; 0x3a
    bbcc:	bne	bd54 <setElementTypePrefix+0x1c4>
    bbd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bbd4:	ldr	r3, [r3]
    bbd8:	str	r3, [fp, #-12]
    bbdc:	b	bc5c <setElementTypePrefix+0xcc>
    bbe0:	ldr	r3, [fp, #-16]
    bbe4:	ldr	r2, [r3, #92]	; 0x5c
    bbe8:	ldr	r3, [fp, #-16]
    bbec:	ldr	r3, [r3, #88]	; 0x58
    bbf0:	cmp	r2, r3
    bbf4:	bne	bc14 <setElementTypePrefix+0x84>
    bbf8:	ldr	r3, [fp, #-16]
    bbfc:	add	r3, r3, #80	; 0x50
    bc00:	mov	r0, r3
    bc04:	bl	e9e8 <poolGrow>
    bc08:	mov	r3, r0
    bc0c:	cmp	r3, #0
    bc10:	beq	bc3c <setElementTypePrefix+0xac>
    bc14:	ldr	r3, [fp, #-16]
    bc18:	ldr	r3, [r3, #92]	; 0x5c
    bc1c:	add	r1, r3, #1
    bc20:	ldr	r2, [fp, #-16]
    bc24:	str	r1, [r2, #92]	; 0x5c
    bc28:	ldr	r2, [fp, #-12]
    bc2c:	ldrb	r2, [r2]
    bc30:	strb	r2, [r3]
    bc34:	mov	r3, #0
    bc38:	b	bc40 <setElementTypePrefix+0xb0>
    bc3c:	mov	r3, #1
    bc40:	cmp	r3, #0
    bc44:	beq	bc50 <setElementTypePrefix+0xc0>
    bc48:	mov	r3, #0
    bc4c:	b	bd74 <setElementTypePrefix+0x1e4>
    bc50:	ldr	r3, [fp, #-12]
    bc54:	add	r3, r3, #1
    bc58:	str	r3, [fp, #-12]
    bc5c:	ldr	r2, [fp, #-12]
    bc60:	ldr	r3, [fp, #-8]
    bc64:	cmp	r2, r3
    bc68:	bne	bbe0 <setElementTypePrefix+0x50>
    bc6c:	ldr	r3, [fp, #-16]
    bc70:	ldr	r2, [r3, #92]	; 0x5c
    bc74:	ldr	r3, [fp, #-16]
    bc78:	ldr	r3, [r3, #88]	; 0x58
    bc7c:	cmp	r2, r3
    bc80:	bne	bca0 <setElementTypePrefix+0x110>
    bc84:	ldr	r3, [fp, #-16]
    bc88:	add	r3, r3, #80	; 0x50
    bc8c:	mov	r0, r3
    bc90:	bl	e9e8 <poolGrow>
    bc94:	mov	r3, r0
    bc98:	cmp	r3, #0
    bc9c:	beq	bcc4 <setElementTypePrefix+0x134>
    bca0:	ldr	r3, [fp, #-16]
    bca4:	ldr	r3, [r3, #92]	; 0x5c
    bca8:	add	r1, r3, #1
    bcac:	ldr	r2, [fp, #-16]
    bcb0:	str	r1, [r2, #92]	; 0x5c
    bcb4:	mov	r2, #0
    bcb8:	strb	r2, [r3]
    bcbc:	mov	r3, #0
    bcc0:	b	bcc8 <setElementTypePrefix+0x138>
    bcc4:	mov	r3, #1
    bcc8:	cmp	r3, #0
    bccc:	beq	bcd8 <setElementTypePrefix+0x148>
    bcd0:	mov	r3, #0
    bcd4:	b	bd74 <setElementTypePrefix+0x1e4>
    bcd8:	ldr	r3, [fp, #-16]
    bcdc:	add	r1, r3, #60	; 0x3c
    bce0:	ldr	r3, [fp, #-16]
    bce4:	ldr	r2, [r3, #96]	; 0x60
    bce8:	mov	r3, #8
    bcec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bcf0:	bl	dbf4 <lookup>
    bcf4:	str	r0, [fp, #-20]	; 0xffffffec
    bcf8:	ldr	r3, [fp, #-20]	; 0xffffffec
    bcfc:	cmp	r3, #0
    bd00:	bne	bd0c <setElementTypePrefix+0x17c>
    bd04:	mov	r3, #0
    bd08:	b	bd74 <setElementTypePrefix+0x1e4>
    bd0c:	ldr	r3, [fp, #-20]	; 0xffffffec
    bd10:	ldr	r2, [r3]
    bd14:	ldr	r3, [fp, #-16]
    bd18:	ldr	r3, [r3, #96]	; 0x60
    bd1c:	cmp	r2, r3
    bd20:	bne	bd38 <setElementTypePrefix+0x1a8>
    bd24:	ldr	r3, [fp, #-16]
    bd28:	ldr	r2, [r3, #92]	; 0x5c
    bd2c:	ldr	r3, [fp, #-16]
    bd30:	str	r2, [r3, #96]	; 0x60
    bd34:	b	bd48 <setElementTypePrefix+0x1b8>
    bd38:	ldr	r3, [fp, #-16]
    bd3c:	ldr	r2, [r3, #96]	; 0x60
    bd40:	ldr	r3, [fp, #-16]
    bd44:	str	r2, [r3, #92]	; 0x5c
    bd48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bd4c:	ldr	r2, [fp, #-20]	; 0xffffffec
    bd50:	str	r2, [r3, #4]
    bd54:	ldr	r3, [fp, #-8]
    bd58:	add	r3, r3, #1
    bd5c:	str	r3, [fp, #-8]
    bd60:	ldr	r3, [fp, #-8]
    bd64:	ldrb	r3, [r3]
    bd68:	cmp	r3, #0
    bd6c:	bne	bbc0 <setElementTypePrefix+0x30>
    bd70:	mov	r3, #1
    bd74:	mov	r0, r3
    bd78:	sub	sp, fp, #4
    bd7c:	pop	{fp, pc}

0000bd80 <getAttributeId>:
    bd80:	push	{fp, lr}
    bd84:	add	fp, sp, #4
    bd88:	sub	sp, sp, #40	; 0x28
    bd8c:	str	r0, [fp, #-32]	; 0xffffffe0
    bd90:	str	r1, [fp, #-36]	; 0xffffffdc
    bd94:	str	r2, [fp, #-40]	; 0xffffffd8
    bd98:	str	r3, [fp, #-44]	; 0xffffffd4
    bd9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bda0:	ldr	r3, [r3, #364]	; 0x16c
    bda4:	str	r3, [fp, #-16]
    bda8:	ldr	r3, [fp, #-16]
    bdac:	ldr	r2, [r3, #92]	; 0x5c
    bdb0:	ldr	r3, [fp, #-16]
    bdb4:	ldr	r3, [r3, #88]	; 0x58
    bdb8:	cmp	r2, r3
    bdbc:	bne	bddc <getAttributeId+0x5c>
    bdc0:	ldr	r3, [fp, #-16]
    bdc4:	add	r3, r3, #80	; 0x50
    bdc8:	mov	r0, r3
    bdcc:	bl	e9e8 <poolGrow>
    bdd0:	mov	r3, r0
    bdd4:	cmp	r3, #0
    bdd8:	beq	be00 <getAttributeId+0x80>
    bddc:	ldr	r3, [fp, #-16]
    bde0:	ldr	r3, [r3, #92]	; 0x5c
    bde4:	add	r1, r3, #1
    bde8:	ldr	r2, [fp, #-16]
    bdec:	str	r1, [r2, #92]	; 0x5c
    bdf0:	mov	r2, #0
    bdf4:	strb	r2, [r3]
    bdf8:	mov	r3, #0
    bdfc:	b	be04 <getAttributeId+0x84>
    be00:	mov	r3, #1
    be04:	cmp	r3, #0
    be08:	beq	be14 <getAttributeId+0x94>
    be0c:	mov	r3, #0
    be10:	b	c18c <getAttributeId+0x40c>
    be14:	ldr	r3, [fp, #-16]
    be18:	add	r0, r3, #80	; 0x50
    be1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    be20:	ldr	r2, [fp, #-40]	; 0xffffffd8
    be24:	ldr	r1, [fp, #-36]	; 0xffffffdc
    be28:	bl	e940 <poolStoreString>
    be2c:	str	r0, [fp, #-20]	; 0xffffffec
    be30:	ldr	r3, [fp, #-20]	; 0xffffffec
    be34:	cmp	r3, #0
    be38:	bne	be44 <getAttributeId+0xc4>
    be3c:	mov	r3, #0
    be40:	b	c18c <getAttributeId+0x40c>
    be44:	ldr	r3, [fp, #-20]	; 0xffffffec
    be48:	add	r3, r3, #1
    be4c:	str	r3, [fp, #-20]	; 0xffffffec
    be50:	ldr	r3, [fp, #-16]
    be54:	add	r1, r3, #40	; 0x28
    be58:	mov	r3, #12
    be5c:	ldr	r2, [fp, #-20]	; 0xffffffec
    be60:	ldr	r0, [fp, #-32]	; 0xffffffe0
    be64:	bl	dbf4 <lookup>
    be68:	str	r0, [fp, #-24]	; 0xffffffe8
    be6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    be70:	cmp	r3, #0
    be74:	bne	be80 <getAttributeId+0x100>
    be78:	mov	r3, #0
    be7c:	b	c18c <getAttributeId+0x40c>
    be80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    be84:	ldr	r2, [r3]
    be88:	ldr	r3, [fp, #-20]	; 0xffffffec
    be8c:	cmp	r2, r3
    be90:	beq	bea8 <getAttributeId+0x128>
    be94:	ldr	r3, [fp, #-16]
    be98:	ldr	r2, [r3, #96]	; 0x60
    be9c:	ldr	r3, [fp, #-16]
    bea0:	str	r2, [r3, #92]	; 0x5c
    bea4:	b	c188 <getAttributeId+0x408>
    bea8:	ldr	r3, [fp, #-16]
    beac:	ldr	r2, [r3, #92]	; 0x5c
    beb0:	ldr	r3, [fp, #-16]
    beb4:	str	r2, [r3, #96]	; 0x60
    beb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bebc:	ldrb	r3, [r3, #244]	; 0xf4
    bec0:	cmp	r3, #0
    bec4:	beq	c188 <getAttributeId+0x408>
    bec8:	ldr	r3, [fp, #-20]	; 0xffffffec
    becc:	ldrb	r3, [r3]
    bed0:	cmp	r3, #120	; 0x78
    bed4:	bne	bfb0 <getAttributeId+0x230>
    bed8:	ldr	r3, [fp, #-20]	; 0xffffffec
    bedc:	add	r3, r3, #1
    bee0:	ldrb	r3, [r3]
    bee4:	cmp	r3, #109	; 0x6d
    bee8:	bne	bfb0 <getAttributeId+0x230>
    beec:	ldr	r3, [fp, #-20]	; 0xffffffec
    bef0:	add	r3, r3, #2
    bef4:	ldrb	r3, [r3]
    bef8:	cmp	r3, #108	; 0x6c
    befc:	bne	bfb0 <getAttributeId+0x230>
    bf00:	ldr	r3, [fp, #-20]	; 0xffffffec
    bf04:	add	r3, r3, #3
    bf08:	ldrb	r3, [r3]
    bf0c:	cmp	r3, #110	; 0x6e
    bf10:	bne	bfb0 <getAttributeId+0x230>
    bf14:	ldr	r3, [fp, #-20]	; 0xffffffec
    bf18:	add	r3, r3, #4
    bf1c:	ldrb	r3, [r3]
    bf20:	cmp	r3, #115	; 0x73
    bf24:	bne	bfb0 <getAttributeId+0x230>
    bf28:	ldr	r3, [fp, #-20]	; 0xffffffec
    bf2c:	add	r3, r3, #5
    bf30:	ldrb	r3, [r3]
    bf34:	cmp	r3, #0
    bf38:	beq	bf50 <getAttributeId+0x1d0>
    bf3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    bf40:	add	r3, r3, #5
    bf44:	ldrb	r3, [r3]
    bf48:	cmp	r3, #58	; 0x3a
    bf4c:	bne	bfb0 <getAttributeId+0x230>
    bf50:	ldr	r3, [fp, #-20]	; 0xffffffec
    bf54:	add	r3, r3, #5
    bf58:	ldrb	r3, [r3]
    bf5c:	cmp	r3, #0
    bf60:	bne	bf78 <getAttributeId+0x1f8>
    bf64:	ldr	r3, [fp, #-16]
    bf68:	add	r2, r3, #152	; 0x98
    bf6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bf70:	str	r2, [r3, #4]
    bf74:	b	bfa0 <getAttributeId+0x220>
    bf78:	ldr	r3, [fp, #-16]
    bf7c:	add	r1, r3, #60	; 0x3c
    bf80:	ldr	r3, [fp, #-20]	; 0xffffffec
    bf84:	add	r2, r3, #6
    bf88:	mov	r3, #8
    bf8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bf90:	bl	dbf4 <lookup>
    bf94:	mov	r2, r0
    bf98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bf9c:	str	r2, [r3, #4]
    bfa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    bfa4:	mov	r2, #1
    bfa8:	strb	r2, [r3, #9]
    bfac:	b	c188 <getAttributeId+0x408>
    bfb0:	mov	r3, #0
    bfb4:	str	r3, [fp, #-8]
    bfb8:	b	c170 <getAttributeId+0x3f0>
    bfbc:	ldr	r3, [fp, #-8]
    bfc0:	ldr	r2, [fp, #-20]	; 0xffffffec
    bfc4:	add	r3, r2, r3
    bfc8:	ldrb	r3, [r3]
    bfcc:	cmp	r3, #58	; 0x3a
    bfd0:	bne	c164 <getAttributeId+0x3e4>
    bfd4:	mov	r3, #0
    bfd8:	str	r3, [fp, #-12]
    bfdc:	b	c064 <getAttributeId+0x2e4>
    bfe0:	ldr	r3, [fp, #-16]
    bfe4:	ldr	r2, [r3, #92]	; 0x5c
    bfe8:	ldr	r3, [fp, #-16]
    bfec:	ldr	r3, [r3, #88]	; 0x58
    bff0:	cmp	r2, r3
    bff4:	bne	c014 <getAttributeId+0x294>
    bff8:	ldr	r3, [fp, #-16]
    bffc:	add	r3, r3, #80	; 0x50
    c000:	mov	r0, r3
    c004:	bl	e9e8 <poolGrow>
    c008:	mov	r3, r0
    c00c:	cmp	r3, #0
    c010:	beq	c044 <getAttributeId+0x2c4>
    c014:	ldr	r3, [fp, #-16]
    c018:	ldr	r3, [r3, #92]	; 0x5c
    c01c:	add	r1, r3, #1
    c020:	ldr	r2, [fp, #-16]
    c024:	str	r1, [r2, #92]	; 0x5c
    c028:	ldr	r2, [fp, #-12]
    c02c:	ldr	r1, [fp, #-20]	; 0xffffffec
    c030:	add	r2, r1, r2
    c034:	ldrb	r2, [r2]
    c038:	strb	r2, [r3]
    c03c:	mov	r3, #0
    c040:	b	c048 <getAttributeId+0x2c8>
    c044:	mov	r3, #1
    c048:	cmp	r3, #0
    c04c:	beq	c058 <getAttributeId+0x2d8>
    c050:	mov	r3, #0
    c054:	b	c18c <getAttributeId+0x40c>
    c058:	ldr	r3, [fp, #-12]
    c05c:	add	r3, r3, #1
    c060:	str	r3, [fp, #-12]
    c064:	ldr	r2, [fp, #-12]
    c068:	ldr	r3, [fp, #-8]
    c06c:	cmp	r2, r3
    c070:	blt	bfe0 <getAttributeId+0x260>
    c074:	ldr	r3, [fp, #-16]
    c078:	ldr	r2, [r3, #92]	; 0x5c
    c07c:	ldr	r3, [fp, #-16]
    c080:	ldr	r3, [r3, #88]	; 0x58
    c084:	cmp	r2, r3
    c088:	bne	c0a8 <getAttributeId+0x328>
    c08c:	ldr	r3, [fp, #-16]
    c090:	add	r3, r3, #80	; 0x50
    c094:	mov	r0, r3
    c098:	bl	e9e8 <poolGrow>
    c09c:	mov	r3, r0
    c0a0:	cmp	r3, #0
    c0a4:	beq	c0cc <getAttributeId+0x34c>
    c0a8:	ldr	r3, [fp, #-16]
    c0ac:	ldr	r3, [r3, #92]	; 0x5c
    c0b0:	add	r1, r3, #1
    c0b4:	ldr	r2, [fp, #-16]
    c0b8:	str	r1, [r2, #92]	; 0x5c
    c0bc:	mov	r2, #0
    c0c0:	strb	r2, [r3]
    c0c4:	mov	r3, #0
    c0c8:	b	c0d0 <getAttributeId+0x350>
    c0cc:	mov	r3, #1
    c0d0:	cmp	r3, #0
    c0d4:	beq	c0e0 <getAttributeId+0x360>
    c0d8:	mov	r3, #0
    c0dc:	b	c18c <getAttributeId+0x40c>
    c0e0:	ldr	r3, [fp, #-16]
    c0e4:	add	r1, r3, #60	; 0x3c
    c0e8:	ldr	r3, [fp, #-16]
    c0ec:	ldr	r2, [r3, #96]	; 0x60
    c0f0:	mov	r3, #8
    c0f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c0f8:	bl	dbf4 <lookup>
    c0fc:	mov	r2, r0
    c100:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c104:	str	r2, [r3, #4]
    c108:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c10c:	ldr	r3, [r3, #4]
    c110:	cmp	r3, #0
    c114:	bne	c120 <getAttributeId+0x3a0>
    c118:	mov	r3, #0
    c11c:	b	c18c <getAttributeId+0x40c>
    c120:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c124:	ldr	r3, [r3, #4]
    c128:	ldr	r2, [r3]
    c12c:	ldr	r3, [fp, #-16]
    c130:	ldr	r3, [r3, #96]	; 0x60
    c134:	cmp	r2, r3
    c138:	bne	c150 <getAttributeId+0x3d0>
    c13c:	ldr	r3, [fp, #-16]
    c140:	ldr	r2, [r3, #92]	; 0x5c
    c144:	ldr	r3, [fp, #-16]
    c148:	str	r2, [r3, #96]	; 0x60
    c14c:	b	c188 <getAttributeId+0x408>
    c150:	ldr	r3, [fp, #-16]
    c154:	ldr	r2, [r3, #96]	; 0x60
    c158:	ldr	r3, [fp, #-16]
    c15c:	str	r2, [r3, #92]	; 0x5c
    c160:	b	c188 <getAttributeId+0x408>
    c164:	ldr	r3, [fp, #-8]
    c168:	add	r3, r3, #1
    c16c:	str	r3, [fp, #-8]
    c170:	ldr	r3, [fp, #-8]
    c174:	ldr	r2, [fp, #-20]	; 0xffffffec
    c178:	add	r3, r2, r3
    c17c:	ldrb	r3, [r3]
    c180:	cmp	r3, #0
    c184:	bne	bfbc <getAttributeId+0x23c>
    c188:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c18c:	mov	r0, r3
    c190:	sub	sp, fp, #4
    c194:	pop	{fp, pc}

0000c198 <getContext>:
    c198:	push	{fp, lr}
    c19c:	add	fp, sp, #4
    c1a0:	sub	sp, sp, #56	; 0x38
    c1a4:	str	r0, [fp, #-56]	; 0xffffffc8
    c1a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c1ac:	ldr	r3, [r3, #364]	; 0x16c
    c1b0:	str	r3, [fp, #-36]	; 0xffffffdc
    c1b4:	mov	r3, #0
    c1b8:	strb	r3, [fp, #-5]
    c1bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c1c0:	ldr	r3, [r3, #156]	; 0x9c
    c1c4:	cmp	r3, #0
    c1c8:	beq	c314 <getContext+0x17c>
    c1cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c1d0:	ldr	r2, [r3, #444]	; 0x1bc
    c1d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c1d8:	ldr	r3, [r3, #440]	; 0x1b8
    c1dc:	cmp	r2, r3
    c1e0:	bne	c200 <getContext+0x68>
    c1e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c1e8:	add	r3, r3, #432	; 0x1b0
    c1ec:	mov	r0, r3
    c1f0:	bl	e9e8 <poolGrow>
    c1f4:	mov	r3, r0
    c1f8:	cmp	r3, #0
    c1fc:	beq	c224 <getContext+0x8c>
    c200:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c204:	ldr	r3, [r3, #444]	; 0x1bc
    c208:	add	r1, r3, #1
    c20c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c210:	str	r1, [r2, #444]	; 0x1bc
    c214:	mov	r2, #61	; 0x3d
    c218:	strb	r2, [r3]
    c21c:	mov	r3, #0
    c220:	b	c228 <getContext+0x90>
    c224:	mov	r3, #1
    c228:	cmp	r3, #0
    c22c:	beq	c238 <getContext+0xa0>
    c230:	mov	r3, #0
    c234:	b	c7a4 <getContext+0x60c>
    c238:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c23c:	ldr	r3, [r3, #156]	; 0x9c
    c240:	ldr	r3, [r3, #20]
    c244:	str	r3, [fp, #-16]
    c248:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c24c:	ldrb	r3, [r3, #488]	; 0x1e8
    c250:	cmp	r3, #0
    c254:	beq	c264 <getContext+0xcc>
    c258:	ldr	r3, [fp, #-16]
    c25c:	sub	r3, r3, #1
    c260:	str	r3, [fp, #-16]
    c264:	mov	r3, #0
    c268:	str	r3, [fp, #-12]
    c26c:	b	c2fc <getContext+0x164>
    c270:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c274:	ldr	r2, [r3, #444]	; 0x1bc
    c278:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c27c:	ldr	r3, [r3, #440]	; 0x1b8
    c280:	cmp	r2, r3
    c284:	bne	c2a4 <getContext+0x10c>
    c288:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c28c:	add	r3, r3, #432	; 0x1b0
    c290:	mov	r0, r3
    c294:	bl	e9e8 <poolGrow>
    c298:	mov	r3, r0
    c29c:	cmp	r3, #0
    c2a0:	beq	c2dc <getContext+0x144>
    c2a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c2a8:	ldr	r3, [r3, #444]	; 0x1bc
    c2ac:	add	r1, r3, #1
    c2b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c2b4:	str	r1, [r2, #444]	; 0x1bc
    c2b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    c2bc:	ldr	r2, [r2, #156]	; 0x9c
    c2c0:	ldr	r1, [r2, #16]
    c2c4:	ldr	r2, [fp, #-12]
    c2c8:	add	r2, r1, r2
    c2cc:	ldrb	r2, [r2]
    c2d0:	strb	r2, [r3]
    c2d4:	mov	r3, #0
    c2d8:	b	c2e0 <getContext+0x148>
    c2dc:	mov	r3, #1
    c2e0:	cmp	r3, #0
    c2e4:	beq	c2f0 <getContext+0x158>
    c2e8:	mov	r3, #0
    c2ec:	b	c7a4 <getContext+0x60c>
    c2f0:	ldr	r3, [fp, #-12]
    c2f4:	add	r3, r3, #1
    c2f8:	str	r3, [fp, #-12]
    c2fc:	ldr	r2, [fp, #-12]
    c300:	ldr	r3, [fp, #-16]
    c304:	cmp	r2, r3
    c308:	blt	c270 <getContext+0xd8>
    c30c:	mov	r3, #1
    c310:	strb	r3, [fp, #-5]
    c314:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c318:	add	r2, r3, #60	; 0x3c
    c31c:	sub	r3, fp, #52	; 0x34
    c320:	mov	r1, r2
    c324:	mov	r0, r3
    c328:	bl	e384 <hashTableIterInit>
    c32c:	sub	r3, fp, #52	; 0x34
    c330:	mov	r0, r3
    c334:	bl	e3d8 <hashTableIterNext>
    c338:	str	r0, [fp, #-40]	; 0xffffffd8
    c33c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c340:	cmp	r3, #0
    c344:	beq	c5c0 <getContext+0x428>
    c348:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c34c:	ldr	r3, [r3, #4]
    c350:	cmp	r3, #0
    c354:	beq	c5b8 <getContext+0x420>
    c358:	ldrb	r3, [fp, #-5]
    c35c:	cmp	r3, #0
    c360:	beq	c3d0 <getContext+0x238>
    c364:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c368:	ldr	r2, [r3, #444]	; 0x1bc
    c36c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c370:	ldr	r3, [r3, #440]	; 0x1b8
    c374:	cmp	r2, r3
    c378:	bne	c398 <getContext+0x200>
    c37c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c380:	add	r3, r3, #432	; 0x1b0
    c384:	mov	r0, r3
    c388:	bl	e9e8 <poolGrow>
    c38c:	mov	r3, r0
    c390:	cmp	r3, #0
    c394:	beq	c3bc <getContext+0x224>
    c398:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c39c:	ldr	r3, [r3, #444]	; 0x1bc
    c3a0:	add	r1, r3, #1
    c3a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c3a8:	str	r1, [r2, #444]	; 0x1bc
    c3ac:	mov	r2, #12
    c3b0:	strb	r2, [r3]
    c3b4:	mov	r3, #0
    c3b8:	b	c3c0 <getContext+0x228>
    c3bc:	mov	r3, #1
    c3c0:	cmp	r3, #0
    c3c4:	beq	c3d0 <getContext+0x238>
    c3c8:	mov	r3, #0
    c3cc:	b	c7a4 <getContext+0x60c>
    c3d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c3d4:	ldr	r3, [r3]
    c3d8:	str	r3, [fp, #-28]	; 0xffffffe4
    c3dc:	b	c45c <getContext+0x2c4>
    c3e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c3e4:	ldr	r2, [r3, #444]	; 0x1bc
    c3e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c3ec:	ldr	r3, [r3, #440]	; 0x1b8
    c3f0:	cmp	r2, r3
    c3f4:	bne	c414 <getContext+0x27c>
    c3f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c3fc:	add	r3, r3, #432	; 0x1b0
    c400:	mov	r0, r3
    c404:	bl	e9e8 <poolGrow>
    c408:	mov	r3, r0
    c40c:	cmp	r3, #0
    c410:	beq	c43c <getContext+0x2a4>
    c414:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c418:	ldr	r3, [r3, #444]	; 0x1bc
    c41c:	add	r1, r3, #1
    c420:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c424:	str	r1, [r2, #444]	; 0x1bc
    c428:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c42c:	ldrb	r2, [r2]
    c430:	strb	r2, [r3]
    c434:	mov	r3, #0
    c438:	b	c440 <getContext+0x2a8>
    c43c:	mov	r3, #1
    c440:	cmp	r3, #0
    c444:	beq	c450 <getContext+0x2b8>
    c448:	mov	r3, #0
    c44c:	b	c7a4 <getContext+0x60c>
    c450:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c454:	add	r3, r3, #1
    c458:	str	r3, [fp, #-28]	; 0xffffffe4
    c45c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c460:	ldrb	r3, [r3]
    c464:	cmp	r3, #0
    c468:	bne	c3e0 <getContext+0x248>
    c46c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c470:	ldr	r2, [r3, #444]	; 0x1bc
    c474:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c478:	ldr	r3, [r3, #440]	; 0x1b8
    c47c:	cmp	r2, r3
    c480:	bne	c4a0 <getContext+0x308>
    c484:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c488:	add	r3, r3, #432	; 0x1b0
    c48c:	mov	r0, r3
    c490:	bl	e9e8 <poolGrow>
    c494:	mov	r3, r0
    c498:	cmp	r3, #0
    c49c:	beq	c4c4 <getContext+0x32c>
    c4a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c4a4:	ldr	r3, [r3, #444]	; 0x1bc
    c4a8:	add	r1, r3, #1
    c4ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c4b0:	str	r1, [r2, #444]	; 0x1bc
    c4b4:	mov	r2, #61	; 0x3d
    c4b8:	strb	r2, [r3]
    c4bc:	mov	r3, #0
    c4c0:	b	c4c8 <getContext+0x330>
    c4c4:	mov	r3, #1
    c4c8:	cmp	r3, #0
    c4cc:	beq	c4d8 <getContext+0x340>
    c4d0:	mov	r3, #0
    c4d4:	b	c7a4 <getContext+0x60c>
    c4d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c4dc:	ldr	r3, [r3, #4]
    c4e0:	ldr	r3, [r3, #20]
    c4e4:	str	r3, [fp, #-24]	; 0xffffffe8
    c4e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c4ec:	ldrb	r3, [r3, #488]	; 0x1e8
    c4f0:	cmp	r3, #0
    c4f4:	beq	c504 <getContext+0x36c>
    c4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c4fc:	sub	r3, r3, #1
    c500:	str	r3, [fp, #-24]	; 0xffffffe8
    c504:	mov	r3, #0
    c508:	str	r3, [fp, #-20]	; 0xffffffec
    c50c:	b	c59c <getContext+0x404>
    c510:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c514:	ldr	r2, [r3, #444]	; 0x1bc
    c518:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c51c:	ldr	r3, [r3, #440]	; 0x1b8
    c520:	cmp	r2, r3
    c524:	bne	c544 <getContext+0x3ac>
    c528:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c52c:	add	r3, r3, #432	; 0x1b0
    c530:	mov	r0, r3
    c534:	bl	e9e8 <poolGrow>
    c538:	mov	r3, r0
    c53c:	cmp	r3, #0
    c540:	beq	c57c <getContext+0x3e4>
    c544:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c548:	ldr	r3, [r3, #444]	; 0x1bc
    c54c:	add	r1, r3, #1
    c550:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c554:	str	r1, [r2, #444]	; 0x1bc
    c558:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c55c:	ldr	r2, [r2, #4]
    c560:	ldr	r1, [r2, #16]
    c564:	ldr	r2, [fp, #-20]	; 0xffffffec
    c568:	add	r2, r1, r2
    c56c:	ldrb	r2, [r2]
    c570:	strb	r2, [r3]
    c574:	mov	r3, #0
    c578:	b	c580 <getContext+0x3e8>
    c57c:	mov	r3, #1
    c580:	cmp	r3, #0
    c584:	beq	c590 <getContext+0x3f8>
    c588:	mov	r3, #0
    c58c:	b	c7a4 <getContext+0x60c>
    c590:	ldr	r3, [fp, #-20]	; 0xffffffec
    c594:	add	r3, r3, #1
    c598:	str	r3, [fp, #-20]	; 0xffffffec
    c59c:	ldr	r2, [fp, #-20]	; 0xffffffec
    c5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c5a4:	cmp	r2, r3
    c5a8:	blt	c510 <getContext+0x378>
    c5ac:	mov	r3, #1
    c5b0:	strb	r3, [fp, #-5]
    c5b4:	b	c32c <getContext+0x194>
    c5b8:	nop			; (mov r0, r0)
    c5bc:	b	c32c <getContext+0x194>
    c5c0:	nop			; (mov r0, r0)
    c5c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    c5c8:	sub	r3, fp, #52	; 0x34
    c5cc:	mov	r1, r2
    c5d0:	mov	r0, r3
    c5d4:	bl	e384 <hashTableIterInit>
    c5d8:	sub	r3, fp, #52	; 0x34
    c5dc:	mov	r0, r3
    c5e0:	bl	e3d8 <hashTableIterNext>
    c5e4:	str	r0, [fp, #-44]	; 0xffffffd4
    c5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c5ec:	cmp	r3, #0
    c5f0:	beq	c72c <getContext+0x594>
    c5f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c5f8:	ldrb	r3, [r3, #32]
    c5fc:	cmp	r3, #0
    c600:	beq	c724 <getContext+0x58c>
    c604:	ldrb	r3, [fp, #-5]
    c608:	cmp	r3, #0
    c60c:	beq	c67c <getContext+0x4e4>
    c610:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c614:	ldr	r2, [r3, #444]	; 0x1bc
    c618:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c61c:	ldr	r3, [r3, #440]	; 0x1b8
    c620:	cmp	r2, r3
    c624:	bne	c644 <getContext+0x4ac>
    c628:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c62c:	add	r3, r3, #432	; 0x1b0
    c630:	mov	r0, r3
    c634:	bl	e9e8 <poolGrow>
    c638:	mov	r3, r0
    c63c:	cmp	r3, #0
    c640:	beq	c668 <getContext+0x4d0>
    c644:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c648:	ldr	r3, [r3, #444]	; 0x1bc
    c64c:	add	r1, r3, #1
    c650:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c654:	str	r1, [r2, #444]	; 0x1bc
    c658:	mov	r2, #12
    c65c:	strb	r2, [r3]
    c660:	mov	r3, #0
    c664:	b	c66c <getContext+0x4d4>
    c668:	mov	r3, #1
    c66c:	cmp	r3, #0
    c670:	beq	c67c <getContext+0x4e4>
    c674:	mov	r3, #0
    c678:	b	c7a4 <getContext+0x60c>
    c67c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c680:	ldr	r3, [r3]
    c684:	str	r3, [fp, #-32]	; 0xffffffe0
    c688:	b	c708 <getContext+0x570>
    c68c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c690:	ldr	r2, [r3, #444]	; 0x1bc
    c694:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c698:	ldr	r3, [r3, #440]	; 0x1b8
    c69c:	cmp	r2, r3
    c6a0:	bne	c6c0 <getContext+0x528>
    c6a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c6a8:	add	r3, r3, #432	; 0x1b0
    c6ac:	mov	r0, r3
    c6b0:	bl	e9e8 <poolGrow>
    c6b4:	mov	r3, r0
    c6b8:	cmp	r3, #0
    c6bc:	beq	c6e8 <getContext+0x550>
    c6c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c6c4:	ldr	r3, [r3, #444]	; 0x1bc
    c6c8:	add	r1, r3, #1
    c6cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c6d0:	str	r1, [r2, #444]	; 0x1bc
    c6d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c6d8:	ldrb	r2, [r2]
    c6dc:	strb	r2, [r3]
    c6e0:	mov	r3, #0
    c6e4:	b	c6ec <getContext+0x554>
    c6e8:	mov	r3, #1
    c6ec:	cmp	r3, #0
    c6f0:	beq	c6fc <getContext+0x564>
    c6f4:	mov	r3, #0
    c6f8:	b	c7a4 <getContext+0x60c>
    c6fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c700:	add	r3, r3, #1
    c704:	str	r3, [fp, #-32]	; 0xffffffe0
    c708:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c70c:	ldrb	r3, [r3]
    c710:	cmp	r3, #0
    c714:	bne	c68c <getContext+0x4f4>
    c718:	mov	r3, #1
    c71c:	strb	r3, [fp, #-5]
    c720:	b	c5d8 <getContext+0x440>
    c724:	nop			; (mov r0, r0)
    c728:	b	c5d8 <getContext+0x440>
    c72c:	nop			; (mov r0, r0)
    c730:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c734:	ldr	r2, [r3, #444]	; 0x1bc
    c738:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c73c:	ldr	r3, [r3, #440]	; 0x1b8
    c740:	cmp	r2, r3
    c744:	bne	c764 <getContext+0x5cc>
    c748:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c74c:	add	r3, r3, #432	; 0x1b0
    c750:	mov	r0, r3
    c754:	bl	e9e8 <poolGrow>
    c758:	mov	r3, r0
    c75c:	cmp	r3, #0
    c760:	beq	c788 <getContext+0x5f0>
    c764:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c768:	ldr	r3, [r3, #444]	; 0x1bc
    c76c:	add	r1, r3, #1
    c770:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c774:	str	r1, [r2, #444]	; 0x1bc
    c778:	mov	r2, #0
    c77c:	strb	r2, [r3]
    c780:	mov	r3, #0
    c784:	b	c78c <getContext+0x5f4>
    c788:	mov	r3, #1
    c78c:	cmp	r3, #0
    c790:	beq	c79c <getContext+0x604>
    c794:	mov	r3, #0
    c798:	b	c7a4 <getContext+0x60c>
    c79c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c7a0:	ldr	r3, [r3, #448]	; 0x1c0
    c7a4:	mov	r0, r3
    c7a8:	sub	sp, fp, #4
    c7ac:	pop	{fp, pc}

0000c7b0 <setContext>:
    c7b0:	push	{fp, lr}
    c7b4:	add	fp, sp, #4
    c7b8:	sub	sp, sp, #32
    c7bc:	str	r0, [fp, #-24]	; 0xffffffe8
    c7c0:	str	r1, [fp, #-28]	; 0xffffffe4
    c7c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c7c8:	ldr	r3, [r3, #364]	; 0x16c
    c7cc:	str	r3, [fp, #-16]
    c7d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c7d4:	str	r3, [fp, #-8]
    c7d8:	b	cc20 <setContext+0x470>
    c7dc:	ldr	r3, [fp, #-8]
    c7e0:	ldrb	r3, [r3]
    c7e4:	cmp	r3, #12
    c7e8:	beq	c7fc <setContext+0x4c>
    c7ec:	ldr	r3, [fp, #-8]
    c7f0:	ldrb	r3, [r3]
    c7f4:	cmp	r3, #0
    c7f8:	bne	c8d4 <setContext+0x124>
    c7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c800:	ldr	r2, [r3, #444]	; 0x1bc
    c804:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c808:	ldr	r3, [r3, #440]	; 0x1b8
    c80c:	cmp	r2, r3
    c810:	bne	c830 <setContext+0x80>
    c814:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c818:	add	r3, r3, #432	; 0x1b0
    c81c:	mov	r0, r3
    c820:	bl	e9e8 <poolGrow>
    c824:	mov	r3, r0
    c828:	cmp	r3, #0
    c82c:	beq	c854 <setContext+0xa4>
    c830:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c834:	ldr	r3, [r3, #444]	; 0x1bc
    c838:	add	r1, r3, #1
    c83c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c840:	str	r1, [r2, #444]	; 0x1bc
    c844:	mov	r2, #0
    c848:	strb	r2, [r3]
    c84c:	mov	r3, #0
    c850:	b	c858 <setContext+0xa8>
    c854:	mov	r3, #1
    c858:	cmp	r3, #0
    c85c:	beq	c868 <setContext+0xb8>
    c860:	mov	r3, #0
    c864:	b	cc34 <setContext+0x484>
    c868:	ldr	r1, [fp, #-16]
    c86c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c870:	ldr	r2, [r3, #448]	; 0x1c0
    c874:	mov	r3, #0
    c878:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c87c:	bl	dbf4 <lookup>
    c880:	str	r0, [fp, #-20]	; 0xffffffec
    c884:	ldr	r3, [fp, #-20]	; 0xffffffec
    c888:	cmp	r3, #0
    c88c:	beq	c89c <setContext+0xec>
    c890:	ldr	r3, [fp, #-20]	; 0xffffffec
    c894:	mov	r2, #1
    c898:	strb	r2, [r3, #32]
    c89c:	ldr	r3, [fp, #-8]
    c8a0:	ldrb	r3, [r3]
    c8a4:	cmp	r3, #0
    c8a8:	beq	c8b8 <setContext+0x108>
    c8ac:	ldr	r3, [fp, #-8]
    c8b0:	add	r3, r3, #1
    c8b4:	str	r3, [fp, #-8]
    c8b8:	ldr	r3, [fp, #-8]
    c8bc:	str	r3, [fp, #-28]	; 0xffffffe4
    c8c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8c4:	ldr	r2, [r3, #448]	; 0x1c0
    c8c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8cc:	str	r2, [r3, #444]	; 0x1bc
    c8d0:	b	cc20 <setContext+0x470>
    c8d4:	ldr	r3, [fp, #-8]
    c8d8:	ldrb	r3, [r3]
    c8dc:	cmp	r3, #61	; 0x3d
    c8e0:	bne	cba4 <setContext+0x3f4>
    c8e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8e8:	ldr	r3, [r3, #444]	; 0x1bc
    c8ec:	mov	r2, r3
    c8f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8f4:	ldr	r3, [r3, #448]	; 0x1c0
    c8f8:	cmp	r2, r3
    c8fc:	bne	c910 <setContext+0x160>
    c900:	ldr	r3, [fp, #-16]
    c904:	add	r3, r3, #152	; 0x98
    c908:	str	r3, [fp, #-12]
    c90c:	b	ca18 <setContext+0x268>
    c910:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c914:	ldr	r2, [r3, #444]	; 0x1bc
    c918:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c91c:	ldr	r3, [r3, #440]	; 0x1b8
    c920:	cmp	r2, r3
    c924:	bne	c944 <setContext+0x194>
    c928:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c92c:	add	r3, r3, #432	; 0x1b0
    c930:	mov	r0, r3
    c934:	bl	e9e8 <poolGrow>
    c938:	mov	r3, r0
    c93c:	cmp	r3, #0
    c940:	beq	c968 <setContext+0x1b8>
    c944:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c948:	ldr	r3, [r3, #444]	; 0x1bc
    c94c:	add	r1, r3, #1
    c950:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c954:	str	r1, [r2, #444]	; 0x1bc
    c958:	mov	r2, #0
    c95c:	strb	r2, [r3]
    c960:	mov	r3, #0
    c964:	b	c96c <setContext+0x1bc>
    c968:	mov	r3, #1
    c96c:	cmp	r3, #0
    c970:	beq	c97c <setContext+0x1cc>
    c974:	mov	r3, #0
    c978:	b	cc34 <setContext+0x484>
    c97c:	ldr	r3, [fp, #-16]
    c980:	add	r1, r3, #60	; 0x3c
    c984:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c988:	ldr	r2, [r3, #448]	; 0x1c0
    c98c:	mov	r3, #8
    c990:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c994:	bl	dbf4 <lookup>
    c998:	str	r0, [fp, #-12]
    c99c:	ldr	r3, [fp, #-12]
    c9a0:	cmp	r3, #0
    c9a4:	bne	c9b0 <setContext+0x200>
    c9a8:	mov	r3, #0
    c9ac:	b	cc34 <setContext+0x484>
    c9b0:	ldr	r3, [fp, #-12]
    c9b4:	ldr	r2, [r3]
    c9b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c9bc:	ldr	r3, [r3, #448]	; 0x1c0
    c9c0:	cmp	r2, r3
    c9c4:	bne	ca08 <setContext+0x258>
    c9c8:	ldr	r3, [fp, #-16]
    c9cc:	add	r2, r3, #80	; 0x50
    c9d0:	ldr	r3, [fp, #-12]
    c9d4:	ldr	r3, [r3]
    c9d8:	mov	r1, r3
    c9dc:	mov	r0, r2
    c9e0:	bl	e6d4 <poolCopyString>
    c9e4:	mov	r2, r0
    c9e8:	ldr	r3, [fp, #-12]
    c9ec:	str	r2, [r3]
    c9f0:	ldr	r3, [fp, #-12]
    c9f4:	ldr	r3, [r3]
    c9f8:	cmp	r3, #0
    c9fc:	bne	ca08 <setContext+0x258>
    ca00:	mov	r3, #0
    ca04:	b	cc34 <setContext+0x484>
    ca08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca0c:	ldr	r2, [r3, #448]	; 0x1c0
    ca10:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca14:	str	r2, [r3, #444]	; 0x1bc
    ca18:	ldr	r3, [fp, #-8]
    ca1c:	add	r3, r3, #1
    ca20:	str	r3, [fp, #-28]	; 0xffffffe4
    ca24:	b	caa4 <setContext+0x2f4>
    ca28:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca2c:	ldr	r2, [r3, #444]	; 0x1bc
    ca30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca34:	ldr	r3, [r3, #440]	; 0x1b8
    ca38:	cmp	r2, r3
    ca3c:	bne	ca5c <setContext+0x2ac>
    ca40:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca44:	add	r3, r3, #432	; 0x1b0
    ca48:	mov	r0, r3
    ca4c:	bl	e9e8 <poolGrow>
    ca50:	mov	r3, r0
    ca54:	cmp	r3, #0
    ca58:	beq	ca84 <setContext+0x2d4>
    ca5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ca60:	ldr	r3, [r3, #444]	; 0x1bc
    ca64:	add	r1, r3, #1
    ca68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ca6c:	str	r1, [r2, #444]	; 0x1bc
    ca70:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ca74:	ldrb	r2, [r2]
    ca78:	strb	r2, [r3]
    ca7c:	mov	r3, #0
    ca80:	b	ca88 <setContext+0x2d8>
    ca84:	mov	r3, #1
    ca88:	cmp	r3, #0
    ca8c:	beq	ca98 <setContext+0x2e8>
    ca90:	mov	r3, #0
    ca94:	b	cc34 <setContext+0x484>
    ca98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ca9c:	add	r3, r3, #1
    caa0:	str	r3, [fp, #-28]	; 0xffffffe4
    caa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    caa8:	ldrb	r3, [r3]
    caac:	cmp	r3, #12
    cab0:	beq	cac4 <setContext+0x314>
    cab4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cab8:	ldrb	r3, [r3]
    cabc:	cmp	r3, #0
    cac0:	bne	ca28 <setContext+0x278>
    cac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cac8:	ldr	r2, [r3, #444]	; 0x1bc
    cacc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cad0:	ldr	r3, [r3, #440]	; 0x1b8
    cad4:	cmp	r2, r3
    cad8:	bne	caf8 <setContext+0x348>
    cadc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cae0:	add	r3, r3, #432	; 0x1b0
    cae4:	mov	r0, r3
    cae8:	bl	e9e8 <poolGrow>
    caec:	mov	r3, r0
    caf0:	cmp	r3, #0
    caf4:	beq	cb1c <setContext+0x36c>
    caf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cafc:	ldr	r3, [r3, #444]	; 0x1bc
    cb00:	add	r1, r3, #1
    cb04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cb08:	str	r1, [r2, #444]	; 0x1bc
    cb0c:	mov	r2, #0
    cb10:	strb	r2, [r3]
    cb14:	mov	r3, #0
    cb18:	b	cb20 <setContext+0x370>
    cb1c:	mov	r3, #1
    cb20:	cmp	r3, #0
    cb24:	beq	cb30 <setContext+0x380>
    cb28:	mov	r3, #0
    cb2c:	b	cc34 <setContext+0x484>
    cb30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb34:	ldr	r2, [r3, #448]	; 0x1c0
    cb38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb3c:	add	r3, r3, #380	; 0x17c
    cb40:	str	r3, [sp]
    cb44:	mov	r3, r2
    cb48:	mov	r2, #0
    cb4c:	ldr	r1, [fp, #-12]
    cb50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb54:	bl	5888 <addBinding>
    cb58:	mov	r3, r0
    cb5c:	cmp	r3, #0
    cb60:	beq	cb6c <setContext+0x3bc>
    cb64:	mov	r3, #0
    cb68:	b	cc34 <setContext+0x484>
    cb6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb70:	ldr	r2, [r3, #448]	; 0x1c0
    cb74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cb78:	str	r2, [r3, #444]	; 0x1bc
    cb7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cb80:	ldrb	r3, [r3]
    cb84:	cmp	r3, #0
    cb88:	beq	cb98 <setContext+0x3e8>
    cb8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cb90:	add	r3, r3, #1
    cb94:	str	r3, [fp, #-28]	; 0xffffffe4
    cb98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cb9c:	str	r3, [fp, #-8]
    cba0:	b	cc20 <setContext+0x470>
    cba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cba8:	ldr	r2, [r3, #444]	; 0x1bc
    cbac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbb0:	ldr	r3, [r3, #440]	; 0x1b8
    cbb4:	cmp	r2, r3
    cbb8:	bne	cbd8 <setContext+0x428>
    cbbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbc0:	add	r3, r3, #432	; 0x1b0
    cbc4:	mov	r0, r3
    cbc8:	bl	e9e8 <poolGrow>
    cbcc:	mov	r3, r0
    cbd0:	cmp	r3, #0
    cbd4:	beq	cc00 <setContext+0x450>
    cbd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cbdc:	ldr	r3, [r3, #444]	; 0x1bc
    cbe0:	add	r1, r3, #1
    cbe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cbe8:	str	r1, [r2, #444]	; 0x1bc
    cbec:	ldr	r2, [fp, #-8]
    cbf0:	ldrb	r2, [r2]
    cbf4:	strb	r2, [r3]
    cbf8:	mov	r3, #0
    cbfc:	b	cc04 <setContext+0x454>
    cc00:	mov	r3, #1
    cc04:	cmp	r3, #0
    cc08:	beq	cc14 <setContext+0x464>
    cc0c:	mov	r3, #0
    cc10:	b	cc34 <setContext+0x484>
    cc14:	ldr	r3, [fp, #-8]
    cc18:	add	r3, r3, #1
    cc1c:	str	r3, [fp, #-8]
    cc20:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cc24:	ldrb	r3, [r3]
    cc28:	cmp	r3, #0
    cc2c:	bne	c7dc <setContext+0x2c>
    cc30:	mov	r3, #1
    cc34:	mov	r0, r3
    cc38:	sub	sp, fp, #4
    cc3c:	pop	{fp, pc}

0000cc40 <normalizePublicId>:
    cc40:	push	{fp}		; (str fp, [sp, #-4]!)
    cc44:	add	fp, sp, #0
    cc48:	sub	sp, sp, #20
    cc4c:	str	r0, [fp, #-16]
    cc50:	ldr	r3, [fp, #-16]
    cc54:	str	r3, [fp, #-8]
    cc58:	ldr	r3, [fp, #-16]
    cc5c:	str	r3, [fp, #-12]
    cc60:	b	ccec <normalizePublicId+0xac>
    cc64:	ldr	r3, [fp, #-12]
    cc68:	ldrb	r3, [r3]
    cc6c:	cmp	r3, #13
    cc70:	beq	cc84 <normalizePublicId+0x44>
    cc74:	cmp	r3, #32
    cc78:	beq	cc84 <normalizePublicId+0x44>
    cc7c:	cmp	r3, #10
    cc80:	bne	ccc0 <normalizePublicId+0x80>
    cc84:	ldr	r2, [fp, #-8]
    cc88:	ldr	r3, [fp, #-16]
    cc8c:	cmp	r2, r3
    cc90:	beq	ccdc <normalizePublicId+0x9c>
    cc94:	ldr	r3, [fp, #-8]
    cc98:	sub	r3, r3, #1
    cc9c:	ldrb	r3, [r3]
    cca0:	cmp	r3, #32
    cca4:	beq	ccdc <normalizePublicId+0x9c>
    cca8:	ldr	r3, [fp, #-8]
    ccac:	add	r2, r3, #1
    ccb0:	str	r2, [fp, #-8]
    ccb4:	mov	r2, #32
    ccb8:	strb	r2, [r3]
    ccbc:	b	ccdc <normalizePublicId+0x9c>
    ccc0:	ldr	r3, [fp, #-8]
    ccc4:	add	r2, r3, #1
    ccc8:	str	r2, [fp, #-8]
    cccc:	ldr	r2, [fp, #-12]
    ccd0:	ldrb	r2, [r2]
    ccd4:	strb	r2, [r3]
    ccd8:	b	cce0 <normalizePublicId+0xa0>
    ccdc:	nop			; (mov r0, r0)
    cce0:	ldr	r3, [fp, #-12]
    cce4:	add	r3, r3, #1
    cce8:	str	r3, [fp, #-12]
    ccec:	ldr	r3, [fp, #-12]
    ccf0:	ldrb	r3, [r3]
    ccf4:	cmp	r3, #0
    ccf8:	bne	cc64 <normalizePublicId+0x24>
    ccfc:	ldr	r2, [fp, #-8]
    cd00:	ldr	r3, [fp, #-16]
    cd04:	cmp	r2, r3
    cd08:	beq	cd2c <normalizePublicId+0xec>
    cd0c:	ldr	r3, [fp, #-8]
    cd10:	sub	r3, r3, #1
    cd14:	ldrb	r3, [r3]
    cd18:	cmp	r3, #32
    cd1c:	bne	cd2c <normalizePublicId+0xec>
    cd20:	ldr	r3, [fp, #-8]
    cd24:	sub	r3, r3, #1
    cd28:	str	r3, [fp, #-8]
    cd2c:	ldr	r3, [fp, #-8]
    cd30:	mov	r2, #0
    cd34:	strb	r2, [r3]
    cd38:	nop			; (mov r0, r0)
    cd3c:	add	sp, fp, #0
    cd40:	pop	{fp}		; (ldr fp, [sp], #4)
    cd44:	bx	lr

0000cd48 <dtdCreate>:
    cd48:	push	{fp, lr}
    cd4c:	add	fp, sp, #4
    cd50:	sub	sp, sp, #16
    cd54:	str	r0, [fp, #-16]
    cd58:	ldr	r3, [fp, #-16]
    cd5c:	ldr	r3, [r3]
    cd60:	mov	r0, #188	; 0xbc
    cd64:	blx	r3
    cd68:	str	r0, [fp, #-8]
    cd6c:	ldr	r3, [fp, #-8]
    cd70:	cmp	r3, #0
    cd74:	bne	cd80 <dtdCreate+0x38>
    cd78:	ldr	r3, [fp, #-8]
    cd7c:	b	cea8 <dtdCreate+0x160>
    cd80:	ldr	r3, [fp, #-8]
    cd84:	add	r3, r3, #80	; 0x50
    cd88:	ldr	r1, [fp, #-16]
    cd8c:	mov	r0, r3
    cd90:	bl	e448 <poolInit>
    cd94:	ldr	r3, [fp, #-8]
    cd98:	add	r3, r3, #104	; 0x68
    cd9c:	ldr	r1, [fp, #-16]
    cda0:	mov	r0, r3
    cda4:	bl	e448 <poolInit>
    cda8:	ldr	r3, [fp, #-8]
    cdac:	ldr	r1, [fp, #-16]
    cdb0:	mov	r0, r3
    cdb4:	bl	e324 <hashTableInit>
    cdb8:	ldr	r3, [fp, #-8]
    cdbc:	add	r3, r3, #20
    cdc0:	ldr	r1, [fp, #-16]
    cdc4:	mov	r0, r3
    cdc8:	bl	e324 <hashTableInit>
    cdcc:	ldr	r3, [fp, #-8]
    cdd0:	add	r3, r3, #40	; 0x28
    cdd4:	ldr	r1, [fp, #-16]
    cdd8:	mov	r0, r3
    cddc:	bl	e324 <hashTableInit>
    cde0:	ldr	r3, [fp, #-8]
    cde4:	add	r3, r3, #60	; 0x3c
    cde8:	ldr	r1, [fp, #-16]
    cdec:	mov	r0, r3
    cdf0:	bl	e324 <hashTableInit>
    cdf4:	ldr	r3, [fp, #-8]
    cdf8:	mov	r2, #0
    cdfc:	strb	r2, [r3, #131]	; 0x83
    ce00:	ldr	r3, [fp, #-8]
    ce04:	add	r3, r3, #132	; 0x84
    ce08:	ldr	r1, [fp, #-16]
    ce0c:	mov	r0, r3
    ce10:	bl	e324 <hashTableInit>
    ce14:	ldr	r3, [fp, #-8]
    ce18:	mov	r2, #0
    ce1c:	str	r2, [r3, #152]	; 0x98
    ce20:	ldr	r3, [fp, #-8]
    ce24:	mov	r2, #0
    ce28:	str	r2, [r3, #156]	; 0x9c
    ce2c:	ldr	r3, [fp, #-8]
    ce30:	mov	r2, #0
    ce34:	strb	r2, [r3, #160]	; 0xa0
    ce38:	ldr	r3, [fp, #-8]
    ce3c:	mov	r2, #0
    ce40:	str	r2, [r3, #184]	; 0xb8
    ce44:	ldr	r3, [fp, #-8]
    ce48:	mov	r2, #0
    ce4c:	str	r2, [r3, #164]	; 0xa4
    ce50:	ldr	r3, [fp, #-8]
    ce54:	mov	r2, #0
    ce58:	str	r2, [r3, #180]	; 0xb4
    ce5c:	ldr	r3, [fp, #-8]
    ce60:	mov	r2, #0
    ce64:	str	r2, [r3, #172]	; 0xac
    ce68:	ldr	r3, [fp, #-8]
    ce6c:	mov	r2, #0
    ce70:	str	r2, [r3, #176]	; 0xb0
    ce74:	ldr	r3, [fp, #-8]
    ce78:	mov	r2, #0
    ce7c:	str	r2, [r3, #168]	; 0xa8
    ce80:	ldr	r3, [fp, #-8]
    ce84:	mov	r2, #1
    ce88:	strb	r2, [r3, #128]	; 0x80
    ce8c:	ldr	r3, [fp, #-8]
    ce90:	mov	r2, #0
    ce94:	strb	r2, [r3, #129]	; 0x81
    ce98:	ldr	r3, [fp, #-8]
    ce9c:	mov	r2, #0
    cea0:	strb	r2, [r3, #130]	; 0x82
    cea4:	ldr	r3, [fp, #-8]
    cea8:	mov	r0, r3
    ceac:	sub	sp, fp, #4
    ceb0:	pop	{fp, pc}

0000ceb4 <dtdReset>:
    ceb4:	push	{fp, lr}
    ceb8:	add	fp, sp, #4
    cebc:	sub	sp, sp, #24
    cec0:	str	r0, [fp, #-24]	; 0xffffffe8
    cec4:	str	r1, [fp, #-28]	; 0xffffffe4
    cec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cecc:	add	r2, r3, #20
    ced0:	sub	r3, fp, #16
    ced4:	mov	r1, r2
    ced8:	mov	r0, r3
    cedc:	bl	e384 <hashTableIterInit>
    cee0:	sub	r3, fp, #16
    cee4:	mov	r0, r3
    cee8:	bl	e3d8 <hashTableIterNext>
    ceec:	str	r0, [fp, #-8]
    cef0:	ldr	r3, [fp, #-8]
    cef4:	cmp	r3, #0
    cef8:	beq	cf28 <dtdReset+0x74>
    cefc:	ldr	r3, [fp, #-8]
    cf00:	ldr	r3, [r3, #16]
    cf04:	cmp	r3, #0
    cf08:	beq	cee0 <dtdReset+0x2c>
    cf0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cf10:	ldr	r3, [r3, #8]
    cf14:	ldr	r2, [fp, #-8]
    cf18:	ldr	r2, [r2, #20]
    cf1c:	mov	r0, r2
    cf20:	blx	r3
    cf24:	b	cee0 <dtdReset+0x2c>
    cf28:	nop			; (mov r0, r0)
    cf2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf30:	mov	r0, r3
    cf34:	bl	e1f8 <hashTableClear>
    cf38:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf3c:	mov	r2, #0
    cf40:	strb	r2, [r3, #131]	; 0x83
    cf44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf48:	add	r3, r3, #132	; 0x84
    cf4c:	mov	r0, r3
    cf50:	bl	e1f8 <hashTableClear>
    cf54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf58:	add	r3, r3, #20
    cf5c:	mov	r0, r3
    cf60:	bl	e1f8 <hashTableClear>
    cf64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf68:	add	r3, r3, #40	; 0x28
    cf6c:	mov	r0, r3
    cf70:	bl	e1f8 <hashTableClear>
    cf74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf78:	add	r3, r3, #60	; 0x3c
    cf7c:	mov	r0, r3
    cf80:	bl	e1f8 <hashTableClear>
    cf84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf88:	add	r3, r3, #80	; 0x50
    cf8c:	mov	r0, r3
    cf90:	bl	e4b4 <poolClear>
    cf94:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cf98:	add	r3, r3, #104	; 0x68
    cf9c:	mov	r0, r3
    cfa0:	bl	e4b4 <poolClear>
    cfa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cfa8:	mov	r2, #0
    cfac:	str	r2, [r3, #152]	; 0x98
    cfb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cfb4:	mov	r2, #0
    cfb8:	str	r2, [r3, #156]	; 0x9c
    cfbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cfc0:	mov	r2, #0
    cfc4:	strb	r2, [r3, #160]	; 0xa0
    cfc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cfcc:	ldr	r3, [r3, #8]
    cfd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cfd4:	ldr	r2, [r2, #184]	; 0xb8
    cfd8:	mov	r0, r2
    cfdc:	blx	r3
    cfe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    cfe4:	mov	r2, #0
    cfe8:	str	r2, [r3, #184]	; 0xb8
    cfec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    cff0:	ldr	r3, [r3, #8]
    cff4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cff8:	ldr	r2, [r2, #164]	; 0xa4
    cffc:	mov	r0, r2
    d000:	blx	r3
    d004:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d008:	mov	r2, #0
    d00c:	str	r2, [r3, #164]	; 0xa4
    d010:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d014:	mov	r2, #0
    d018:	str	r2, [r3, #180]	; 0xb4
    d01c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d020:	mov	r2, #0
    d024:	str	r2, [r3, #172]	; 0xac
    d028:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d02c:	mov	r2, #0
    d030:	str	r2, [r3, #176]	; 0xb0
    d034:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d038:	mov	r2, #0
    d03c:	str	r2, [r3, #168]	; 0xa8
    d040:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d044:	mov	r2, #1
    d048:	strb	r2, [r3, #128]	; 0x80
    d04c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d050:	mov	r2, #0
    d054:	strb	r2, [r3, #129]	; 0x81
    d058:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d05c:	mov	r2, #0
    d060:	strb	r2, [r3, #130]	; 0x82
    d064:	nop			; (mov r0, r0)
    d068:	sub	sp, fp, #4
    d06c:	pop	{fp, pc}

0000d070 <dtdDestroy>:
    d070:	push	{fp, lr}
    d074:	add	fp, sp, #4
    d078:	sub	sp, sp, #32
    d07c:	str	r0, [fp, #-24]	; 0xffffffe8
    d080:	mov	r3, r1
    d084:	str	r2, [fp, #-32]	; 0xffffffe0
    d088:	strb	r3, [fp, #-25]	; 0xffffffe7
    d08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d090:	add	r2, r3, #20
    d094:	sub	r3, fp, #16
    d098:	mov	r1, r2
    d09c:	mov	r0, r3
    d0a0:	bl	e384 <hashTableIterInit>
    d0a4:	sub	r3, fp, #16
    d0a8:	mov	r0, r3
    d0ac:	bl	e3d8 <hashTableIterNext>
    d0b0:	str	r0, [fp, #-8]
    d0b4:	ldr	r3, [fp, #-8]
    d0b8:	cmp	r3, #0
    d0bc:	beq	d0ec <dtdDestroy+0x7c>
    d0c0:	ldr	r3, [fp, #-8]
    d0c4:	ldr	r3, [r3, #16]
    d0c8:	cmp	r3, #0
    d0cc:	beq	d0a4 <dtdDestroy+0x34>
    d0d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d0d4:	ldr	r3, [r3, #8]
    d0d8:	ldr	r2, [fp, #-8]
    d0dc:	ldr	r2, [r2, #20]
    d0e0:	mov	r0, r2
    d0e4:	blx	r3
    d0e8:	b	d0a4 <dtdDestroy+0x34>
    d0ec:	nop			; (mov r0, r0)
    d0f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d0f4:	mov	r0, r3
    d0f8:	bl	e294 <hashTableDestroy>
    d0fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d100:	add	r3, r3, #132	; 0x84
    d104:	mov	r0, r3
    d108:	bl	e294 <hashTableDestroy>
    d10c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d110:	add	r3, r3, #20
    d114:	mov	r0, r3
    d118:	bl	e294 <hashTableDestroy>
    d11c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d120:	add	r3, r3, #40	; 0x28
    d124:	mov	r0, r3
    d128:	bl	e294 <hashTableDestroy>
    d12c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d130:	add	r3, r3, #60	; 0x3c
    d134:	mov	r0, r3
    d138:	bl	e294 <hashTableDestroy>
    d13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d140:	add	r3, r3, #80	; 0x50
    d144:	mov	r0, r3
    d148:	bl	e574 <poolDestroy>
    d14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d150:	add	r3, r3, #104	; 0x68
    d154:	mov	r0, r3
    d158:	bl	e574 <poolDestroy>
    d15c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    d160:	cmp	r3, #0
    d164:	beq	d198 <dtdDestroy+0x128>
    d168:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d16c:	ldr	r3, [r3, #8]
    d170:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d174:	ldr	r2, [r2, #184]	; 0xb8
    d178:	mov	r0, r2
    d17c:	blx	r3
    d180:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d184:	ldr	r3, [r3, #8]
    d188:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d18c:	ldr	r2, [r2, #164]	; 0xa4
    d190:	mov	r0, r2
    d194:	blx	r3
    d198:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d19c:	ldr	r3, [r3, #8]
    d1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1a4:	blx	r3
    d1a8:	nop			; (mov r0, r0)
    d1ac:	sub	sp, fp, #4
    d1b0:	pop	{fp, pc}

0000d1b4 <dtdCopy>:
    d1b4:	push	{r4, fp, lr}
    d1b8:	add	fp, sp, #8
    d1bc:	sub	sp, sp, #68	; 0x44
    d1c0:	str	r0, [fp, #-64]	; 0xffffffc0
    d1c4:	str	r1, [fp, #-68]	; 0xffffffbc
    d1c8:	str	r2, [fp, #-72]	; 0xffffffb8
    d1cc:	str	r3, [fp, #-76]	; 0xffffffb4
    d1d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d1d4:	add	r2, r3, #60	; 0x3c
    d1d8:	sub	r3, fp, #56	; 0x38
    d1dc:	mov	r1, r2
    d1e0:	mov	r0, r3
    d1e4:	bl	e384 <hashTableIterInit>
    d1e8:	sub	r3, fp, #56	; 0x38
    d1ec:	mov	r0, r3
    d1f0:	bl	e3d8 <hashTableIterNext>
    d1f4:	str	r0, [fp, #-20]	; 0xffffffec
    d1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    d1fc:	cmp	r3, #0
    d200:	beq	d264 <dtdCopy+0xb0>
    d204:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d208:	add	r2, r3, #80	; 0x50
    d20c:	ldr	r3, [fp, #-20]	; 0xffffffec
    d210:	ldr	r3, [r3]
    d214:	mov	r1, r3
    d218:	mov	r0, r2
    d21c:	bl	e6d4 <poolCopyString>
    d220:	str	r0, [fp, #-24]	; 0xffffffe8
    d224:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d228:	cmp	r3, #0
    d22c:	bne	d238 <dtdCopy+0x84>
    d230:	mov	r3, #0
    d234:	b	d874 <dtdCopy+0x6c0>
    d238:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d23c:	add	r1, r3, #60	; 0x3c
    d240:	mov	r3, #8
    d244:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d248:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d24c:	bl	dbf4 <lookup>
    d250:	mov	r3, r0
    d254:	cmp	r3, #0
    d258:	bne	d1e8 <dtdCopy+0x34>
    d25c:	mov	r3, #0
    d260:	b	d874 <dtdCopy+0x6c0>
    d264:	nop			; (mov r0, r0)
    d268:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d26c:	add	r2, r3, #40	; 0x28
    d270:	sub	r3, fp, #56	; 0x38
    d274:	mov	r1, r2
    d278:	mov	r0, r3
    d27c:	bl	e384 <hashTableIterInit>
    d280:	sub	r3, fp, #56	; 0x38
    d284:	mov	r0, r3
    d288:	bl	e3d8 <hashTableIterNext>
    d28c:	str	r0, [fp, #-28]	; 0xffffffe4
    d290:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d294:	cmp	r3, #0
    d298:	beq	d404 <dtdCopy+0x250>
    d29c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d2a0:	ldr	r2, [r3, #92]	; 0x5c
    d2a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d2a8:	ldr	r3, [r3, #88]	; 0x58
    d2ac:	cmp	r2, r3
    d2b0:	bne	d2d0 <dtdCopy+0x11c>
    d2b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d2b8:	add	r3, r3, #80	; 0x50
    d2bc:	mov	r0, r3
    d2c0:	bl	e9e8 <poolGrow>
    d2c4:	mov	r3, r0
    d2c8:	cmp	r3, #0
    d2cc:	beq	d2f4 <dtdCopy+0x140>
    d2d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d2d4:	ldr	r3, [r3, #92]	; 0x5c
    d2d8:	add	r1, r3, #1
    d2dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    d2e0:	str	r1, [r2, #92]	; 0x5c
    d2e4:	mov	r2, #0
    d2e8:	strb	r2, [r3]
    d2ec:	mov	r3, #0
    d2f0:	b	d2f8 <dtdCopy+0x144>
    d2f4:	mov	r3, #1
    d2f8:	cmp	r3, #0
    d2fc:	beq	d308 <dtdCopy+0x154>
    d300:	mov	r3, #0
    d304:	b	d874 <dtdCopy+0x6c0>
    d308:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d30c:	add	r2, r3, #80	; 0x50
    d310:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d314:	ldr	r3, [r3]
    d318:	mov	r1, r3
    d31c:	mov	r0, r2
    d320:	bl	e6d4 <poolCopyString>
    d324:	str	r0, [fp, #-32]	; 0xffffffe0
    d328:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d32c:	cmp	r3, #0
    d330:	bne	d33c <dtdCopy+0x188>
    d334:	mov	r3, #0
    d338:	b	d874 <dtdCopy+0x6c0>
    d33c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d340:	add	r3, r3, #1
    d344:	str	r3, [fp, #-32]	; 0xffffffe0
    d348:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d34c:	add	r1, r3, #40	; 0x28
    d350:	mov	r3, #12
    d354:	ldr	r2, [fp, #-32]	; 0xffffffe0
    d358:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d35c:	bl	dbf4 <lookup>
    d360:	str	r0, [fp, #-36]	; 0xffffffdc
    d364:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d368:	cmp	r3, #0
    d36c:	bne	d378 <dtdCopy+0x1c4>
    d370:	mov	r3, #0
    d374:	b	d874 <dtdCopy+0x6c0>
    d378:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d37c:	ldrb	r2, [r3, #8]
    d380:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d384:	strb	r2, [r3, #8]
    d388:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d38c:	ldr	r3, [r3, #4]
    d390:	cmp	r3, #0
    d394:	beq	d280 <dtdCopy+0xcc>
    d398:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d39c:	ldrb	r2, [r3, #9]
    d3a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d3a4:	strb	r2, [r3, #9]
    d3a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d3ac:	ldr	r2, [r3, #4]
    d3b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d3b4:	add	r3, r3, #152	; 0x98
    d3b8:	cmp	r2, r3
    d3bc:	bne	d3d4 <dtdCopy+0x220>
    d3c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d3c4:	add	r2, r3, #152	; 0x98
    d3c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d3cc:	str	r2, [r3, #4]
    d3d0:	b	d280 <dtdCopy+0xcc>
    d3d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d3d8:	add	r1, r3, #60	; 0x3c
    d3dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d3e0:	ldr	r3, [r3, #4]
    d3e4:	ldr	r2, [r3]
    d3e8:	mov	r3, #0
    d3ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d3f0:	bl	dbf4 <lookup>
    d3f4:	mov	r2, r0
    d3f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d3fc:	str	r2, [r3, #4]
    d400:	b	d280 <dtdCopy+0xcc>
    d404:	nop			; (mov r0, r0)
    d408:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d40c:	add	r2, r3, #20
    d410:	sub	r3, fp, #56	; 0x38
    d414:	mov	r1, r2
    d418:	mov	r0, r3
    d41c:	bl	e384 <hashTableIterInit>
    d420:	sub	r3, fp, #56	; 0x38
    d424:	mov	r0, r3
    d428:	bl	e3d8 <hashTableIterNext>
    d42c:	str	r0, [fp, #-40]	; 0xffffffd8
    d430:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d434:	cmp	r3, #0
    d438:	beq	d76c <dtdCopy+0x5b8>
    d43c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d440:	add	r2, r3, #80	; 0x50
    d444:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d448:	ldr	r3, [r3]
    d44c:	mov	r1, r3
    d450:	mov	r0, r2
    d454:	bl	e6d4 <poolCopyString>
    d458:	str	r0, [fp, #-44]	; 0xffffffd4
    d45c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    d460:	cmp	r3, #0
    d464:	bne	d470 <dtdCopy+0x2bc>
    d468:	mov	r3, #0
    d46c:	b	d874 <dtdCopy+0x6c0>
    d470:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d474:	add	r1, r3, #20
    d478:	mov	r3, #24
    d47c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    d480:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d484:	bl	dbf4 <lookup>
    d488:	str	r0, [fp, #-48]	; 0xffffffd0
    d48c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d490:	cmp	r3, #0
    d494:	bne	d4a0 <dtdCopy+0x2ec>
    d498:	mov	r3, #0
    d49c:	b	d874 <dtdCopy+0x6c0>
    d4a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d4a4:	ldr	r3, [r3, #12]
    d4a8:	cmp	r3, #0
    d4ac:	beq	d510 <dtdCopy+0x35c>
    d4b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    d4b4:	ldr	r2, [r3]
    d4b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d4bc:	ldr	r3, [r3, #12]
    d4c0:	mov	r1, r3
    d4c4:	mov	r3, r1
    d4c8:	lsl	r3, r3, #1
    d4cc:	add	r3, r3, r1
    d4d0:	lsl	r3, r3, #2
    d4d4:	mov	r0, r3
    d4d8:	blx	r2
    d4dc:	mov	r2, r0
    d4e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d4e4:	str	r2, [r3, #20]
    d4e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d4ec:	ldr	r3, [r3, #20]
    d4f0:	cmp	r3, #0
    d4f4:	bne	d510 <dtdCopy+0x35c>
    d4f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    d4fc:	ldr	r3, [r3, #8]
    d500:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d504:	blx	r3
    d508:	mov	r3, #0
    d50c:	b	d874 <dtdCopy+0x6c0>
    d510:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d514:	ldr	r3, [r3, #8]
    d518:	cmp	r3, #0
    d51c:	beq	d54c <dtdCopy+0x398>
    d520:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d524:	add	r1, r3, #40	; 0x28
    d528:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d52c:	ldr	r3, [r3, #8]
    d530:	ldr	r2, [r3]
    d534:	mov	r3, #0
    d538:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d53c:	bl	dbf4 <lookup>
    d540:	mov	r2, r0
    d544:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d548:	str	r2, [r3, #8]
    d54c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d550:	ldr	r2, [r3, #12]
    d554:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d558:	str	r2, [r3, #12]
    d55c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d560:	ldr	r2, [r3, #12]
    d564:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d568:	str	r2, [r3, #16]
    d56c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d570:	ldr	r3, [r3, #4]
    d574:	cmp	r3, #0
    d578:	beq	d5a8 <dtdCopy+0x3f4>
    d57c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d580:	add	r1, r3, #60	; 0x3c
    d584:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d588:	ldr	r3, [r3, #4]
    d58c:	ldr	r2, [r3]
    d590:	mov	r3, #0
    d594:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d598:	bl	dbf4 <lookup>
    d59c:	mov	r2, r0
    d5a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d5a4:	str	r2, [r3, #4]
    d5a8:	mov	r3, #0
    d5ac:	str	r3, [fp, #-16]
    d5b0:	b	d754 <dtdCopy+0x5a0>
    d5b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d5b8:	ldr	r1, [r3, #20]
    d5bc:	ldr	r2, [fp, #-16]
    d5c0:	mov	r3, r2
    d5c4:	lsl	r3, r3, #1
    d5c8:	add	r3, r3, r2
    d5cc:	lsl	r3, r3, #2
    d5d0:	add	r4, r1, r3
    d5d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d5d8:	add	r0, r3, #40	; 0x28
    d5dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d5e0:	ldr	r1, [r3, #20]
    d5e4:	ldr	r2, [fp, #-16]
    d5e8:	mov	r3, r2
    d5ec:	lsl	r3, r3, #1
    d5f0:	add	r3, r3, r2
    d5f4:	lsl	r3, r3, #2
    d5f8:	add	r3, r1, r3
    d5fc:	ldr	r3, [r3]
    d600:	ldr	r2, [r3]
    d604:	mov	r3, #0
    d608:	mov	r1, r0
    d60c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d610:	bl	dbf4 <lookup>
    d614:	mov	r3, r0
    d618:	str	r3, [r4]
    d61c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d620:	ldr	r1, [r3, #20]
    d624:	ldr	r2, [fp, #-16]
    d628:	mov	r3, r2
    d62c:	lsl	r3, r3, #1
    d630:	add	r3, r3, r2
    d634:	lsl	r3, r3, #2
    d638:	add	r1, r1, r3
    d63c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d640:	ldr	r0, [r3, #20]
    d644:	ldr	r2, [fp, #-16]
    d648:	mov	r3, r2
    d64c:	lsl	r3, r3, #1
    d650:	add	r3, r3, r2
    d654:	lsl	r3, r3, #2
    d658:	add	r3, r0, r3
    d65c:	ldrb	r3, [r3, #4]
    d660:	strb	r3, [r1, #4]
    d664:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d668:	ldr	r1, [r3, #20]
    d66c:	ldr	r2, [fp, #-16]
    d670:	mov	r3, r2
    d674:	lsl	r3, r3, #1
    d678:	add	r3, r3, r2
    d67c:	lsl	r3, r3, #2
    d680:	add	r3, r1, r3
    d684:	ldr	r3, [r3, #8]
    d688:	cmp	r3, #0
    d68c:	beq	d720 <dtdCopy+0x56c>
    d690:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d694:	ldr	r1, [r3, #20]
    d698:	ldr	r2, [fp, #-16]
    d69c:	mov	r3, r2
    d6a0:	lsl	r3, r3, #1
    d6a4:	add	r3, r3, r2
    d6a8:	lsl	r3, r3, #2
    d6ac:	add	r4, r1, r3
    d6b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d6b4:	add	r0, r3, #80	; 0x50
    d6b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d6bc:	ldr	r1, [r3, #20]
    d6c0:	ldr	r2, [fp, #-16]
    d6c4:	mov	r3, r2
    d6c8:	lsl	r3, r3, #1
    d6cc:	add	r3, r3, r2
    d6d0:	lsl	r3, r3, #2
    d6d4:	add	r3, r1, r3
    d6d8:	ldr	r3, [r3, #8]
    d6dc:	mov	r1, r3
    d6e0:	bl	e6d4 <poolCopyString>
    d6e4:	mov	r3, r0
    d6e8:	str	r3, [r4, #8]
    d6ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d6f0:	ldr	r1, [r3, #20]
    d6f4:	ldr	r2, [fp, #-16]
    d6f8:	mov	r3, r2
    d6fc:	lsl	r3, r3, #1
    d700:	add	r3, r3, r2
    d704:	lsl	r3, r3, #2
    d708:	add	r3, r1, r3
    d70c:	ldr	r3, [r3, #8]
    d710:	cmp	r3, #0
    d714:	bne	d748 <dtdCopy+0x594>
    d718:	mov	r3, #0
    d71c:	b	d874 <dtdCopy+0x6c0>
    d720:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d724:	ldr	r1, [r3, #20]
    d728:	ldr	r2, [fp, #-16]
    d72c:	mov	r3, r2
    d730:	lsl	r3, r3, #1
    d734:	add	r3, r3, r2
    d738:	lsl	r3, r3, #2
    d73c:	add	r3, r1, r3
    d740:	mov	r2, #0
    d744:	str	r2, [r3, #8]
    d748:	ldr	r3, [fp, #-16]
    d74c:	add	r3, r3, #1
    d750:	str	r3, [fp, #-16]
    d754:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d758:	ldr	r2, [r3, #12]
    d75c:	ldr	r3, [fp, #-16]
    d760:	cmp	r2, r3
    d764:	bgt	d5b4 <dtdCopy+0x400>
    d768:	b	d420 <dtdCopy+0x26c>
    d76c:	nop			; (mov r0, r0)
    d770:	ldr	r1, [fp, #-68]	; 0xffffffbc
    d774:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d778:	add	r2, r3, #80	; 0x50
    d77c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d780:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d784:	bl	d880 <copyEntityTable>
    d788:	mov	r3, r0
    d78c:	cmp	r3, #0
    d790:	bne	d79c <dtdCopy+0x5e8>
    d794:	mov	r3, #0
    d798:	b	d874 <dtdCopy+0x6c0>
    d79c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7a0:	add	r1, r3, #132	; 0x84
    d7a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7a8:	add	r2, r3, #80	; 0x50
    d7ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d7b0:	add	r3, r3, #132	; 0x84
    d7b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    d7b8:	bl	d880 <copyEntityTable>
    d7bc:	mov	r3, r0
    d7c0:	cmp	r3, #0
    d7c4:	bne	d7d0 <dtdCopy+0x61c>
    d7c8:	mov	r3, #0
    d7cc:	b	d874 <dtdCopy+0x6c0>
    d7d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d7d4:	ldrb	r2, [r3, #131]	; 0x83
    d7d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7dc:	strb	r2, [r3, #131]	; 0x83
    d7e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d7e4:	ldrb	r2, [r3, #128]	; 0x80
    d7e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7ec:	strb	r2, [r3, #128]	; 0x80
    d7f0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d7f4:	ldrb	r2, [r3, #129]	; 0x81
    d7f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d7fc:	strb	r2, [r3, #129]	; 0x81
    d800:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d804:	ldrb	r2, [r3, #130]	; 0x82
    d808:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d80c:	strb	r2, [r3, #130]	; 0x82
    d810:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d814:	ldrb	r2, [r3, #160]	; 0xa0
    d818:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d81c:	strb	r2, [r3, #160]	; 0xa0
    d820:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d824:	ldr	r2, [r3, #164]	; 0xa4
    d828:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d82c:	str	r2, [r3, #164]	; 0xa4
    d830:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d834:	ldr	r2, [r3, #168]	; 0xa8
    d838:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d83c:	str	r2, [r3, #168]	; 0xa8
    d840:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d844:	ldr	r2, [r3, #172]	; 0xac
    d848:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d84c:	str	r2, [r3, #172]	; 0xac
    d850:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d854:	ldr	r2, [r3, #180]	; 0xb4
    d858:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d85c:	str	r2, [r3, #180]	; 0xb4
    d860:	ldr	r3, [fp, #-72]	; 0xffffffb8
    d864:	ldr	r2, [r3, #184]	; 0xb8
    d868:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d86c:	str	r2, [r3, #184]	; 0xb8
    d870:	mov	r3, #1
    d874:	mov	r0, r3
    d878:	sub	sp, fp, #8
    d87c:	pop	{r4, fp, pc}

0000d880 <copyEntityTable>:
    d880:	push	{fp, lr}
    d884:	add	fp, sp, #4
    d888:	sub	sp, sp, #56	; 0x38
    d88c:	str	r0, [fp, #-48]	; 0xffffffd0
    d890:	str	r1, [fp, #-52]	; 0xffffffcc
    d894:	str	r2, [fp, #-56]	; 0xffffffc8
    d898:	str	r3, [fp, #-60]	; 0xffffffc4
    d89c:	mov	r3, #0
    d8a0:	str	r3, [fp, #-8]
    d8a4:	mov	r3, #0
    d8a8:	str	r3, [fp, #-12]
    d8ac:	sub	r3, fp, #44	; 0x2c
    d8b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    d8b4:	mov	r0, r3
    d8b8:	bl	e384 <hashTableIterInit>
    d8bc:	sub	r3, fp, #44	; 0x2c
    d8c0:	mov	r0, r3
    d8c4:	bl	e3d8 <hashTableIterNext>
    d8c8:	str	r0, [fp, #-16]
    d8cc:	ldr	r3, [fp, #-16]
    d8d0:	cmp	r3, #0
    d8d4:	beq	dafc <copyEntityTable+0x27c>
    d8d8:	ldr	r3, [fp, #-16]
    d8dc:	ldr	r3, [r3]
    d8e0:	mov	r1, r3
    d8e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    d8e8:	bl	e6d4 <poolCopyString>
    d8ec:	str	r0, [fp, #-20]	; 0xffffffec
    d8f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    d8f4:	cmp	r3, #0
    d8f8:	bne	d904 <copyEntityTable+0x84>
    d8fc:	mov	r3, #0
    d900:	b	db04 <copyEntityTable+0x284>
    d904:	mov	r3, #36	; 0x24
    d908:	ldr	r2, [fp, #-20]	; 0xffffffec
    d90c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    d910:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d914:	bl	dbf4 <lookup>
    d918:	str	r0, [fp, #-24]	; 0xffffffe8
    d91c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d920:	cmp	r3, #0
    d924:	bne	d930 <copyEntityTable+0xb0>
    d928:	mov	r3, #0
    d92c:	b	db04 <copyEntityTable+0x284>
    d930:	ldr	r3, [fp, #-16]
    d934:	ldr	r3, [r3, #16]
    d938:	cmp	r3, #0
    d93c:	beq	da40 <copyEntityTable+0x1c0>
    d940:	ldr	r3, [fp, #-16]
    d944:	ldr	r3, [r3, #16]
    d948:	mov	r1, r3
    d94c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    d950:	bl	e6d4 <poolCopyString>
    d954:	str	r0, [fp, #-28]	; 0xffffffe4
    d958:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d95c:	cmp	r3, #0
    d960:	bne	d96c <copyEntityTable+0xec>
    d964:	mov	r3, #0
    d968:	b	db04 <copyEntityTable+0x284>
    d96c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d970:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d974:	str	r2, [r3, #16]
    d978:	ldr	r3, [fp, #-16]
    d97c:	ldr	r3, [r3, #20]
    d980:	cmp	r3, #0
    d984:	beq	d9f4 <copyEntityTable+0x174>
    d988:	ldr	r3, [fp, #-16]
    d98c:	ldr	r2, [r3, #20]
    d990:	ldr	r3, [fp, #-8]
    d994:	cmp	r2, r3
    d998:	bne	d9ac <copyEntityTable+0x12c>
    d99c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d9a0:	ldr	r2, [fp, #-12]
    d9a4:	str	r2, [r3, #20]
    d9a8:	b	d9f4 <copyEntityTable+0x174>
    d9ac:	ldr	r3, [fp, #-16]
    d9b0:	ldr	r3, [r3, #20]
    d9b4:	str	r3, [fp, #-8]
    d9b8:	ldr	r1, [fp, #-8]
    d9bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    d9c0:	bl	e6d4 <poolCopyString>
    d9c4:	str	r0, [fp, #-28]	; 0xffffffe4
    d9c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d9cc:	cmp	r3, #0
    d9d0:	bne	d9dc <copyEntityTable+0x15c>
    d9d4:	mov	r3, #0
    d9d8:	b	db04 <copyEntityTable+0x284>
    d9dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d9e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d9e4:	str	r2, [r3, #20]
    d9e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    d9ec:	ldr	r3, [r3, #20]
    d9f0:	str	r3, [fp, #-12]
    d9f4:	ldr	r3, [fp, #-16]
    d9f8:	ldr	r3, [r3, #24]
    d9fc:	cmp	r3, #0
    da00:	beq	da90 <copyEntityTable+0x210>
    da04:	ldr	r3, [fp, #-16]
    da08:	ldr	r3, [r3, #24]
    da0c:	mov	r1, r3
    da10:	ldr	r0, [fp, #-56]	; 0xffffffc8
    da14:	bl	e6d4 <poolCopyString>
    da18:	str	r0, [fp, #-28]	; 0xffffffe4
    da1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da20:	cmp	r3, #0
    da24:	bne	da30 <copyEntityTable+0x1b0>
    da28:	mov	r3, #0
    da2c:	b	db04 <copyEntityTable+0x284>
    da30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    da34:	ldr	r2, [fp, #-28]	; 0xffffffe4
    da38:	str	r2, [r3, #24]
    da3c:	b	da90 <copyEntityTable+0x210>
    da40:	ldr	r3, [fp, #-16]
    da44:	ldr	r1, [r3, #4]
    da48:	ldr	r3, [fp, #-16]
    da4c:	ldr	r3, [r3, #8]
    da50:	mov	r2, r3
    da54:	ldr	r0, [fp, #-56]	; 0xffffffc8
    da58:	bl	e794 <poolCopyStringN>
    da5c:	str	r0, [fp, #-32]	; 0xffffffe0
    da60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    da64:	cmp	r3, #0
    da68:	bne	da74 <copyEntityTable+0x1f4>
    da6c:	mov	r3, #0
    da70:	b	db04 <copyEntityTable+0x284>
    da74:	ldr	r3, [fp, #-24]	; 0xffffffe8
    da78:	ldr	r2, [fp, #-32]	; 0xffffffe0
    da7c:	str	r2, [r3, #4]
    da80:	ldr	r3, [fp, #-16]
    da84:	ldr	r2, [r3, #8]
    da88:	ldr	r3, [fp, #-24]	; 0xffffffe8
    da8c:	str	r2, [r3, #8]
    da90:	ldr	r3, [fp, #-16]
    da94:	ldr	r3, [r3, #28]
    da98:	cmp	r3, #0
    da9c:	beq	dad8 <copyEntityTable+0x258>
    daa0:	ldr	r3, [fp, #-16]
    daa4:	ldr	r3, [r3, #28]
    daa8:	mov	r1, r3
    daac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    dab0:	bl	e6d4 <poolCopyString>
    dab4:	str	r0, [fp, #-36]	; 0xffffffdc
    dab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dabc:	cmp	r3, #0
    dac0:	bne	dacc <copyEntityTable+0x24c>
    dac4:	mov	r3, #0
    dac8:	b	db04 <copyEntityTable+0x284>
    dacc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dad0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    dad4:	str	r2, [r3, #28]
    dad8:	ldr	r3, [fp, #-16]
    dadc:	ldrb	r2, [r3, #33]	; 0x21
    dae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dae4:	strb	r2, [r3, #33]	; 0x21
    dae8:	ldr	r3, [fp, #-16]
    daec:	ldrb	r2, [r3, #34]	; 0x22
    daf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    daf4:	strb	r2, [r3, #34]	; 0x22
    daf8:	b	d8bc <copyEntityTable+0x3c>
    dafc:	nop			; (mov r0, r0)
    db00:	mov	r3, #1
    db04:	mov	r0, r3
    db08:	sub	sp, fp, #4
    db0c:	pop	{fp, pc}

0000db10 <keyeq>:
    db10:	push	{fp}		; (str fp, [sp, #-4]!)
    db14:	add	fp, sp, #0
    db18:	sub	sp, sp, #12
    db1c:	str	r0, [fp, #-8]
    db20:	str	r1, [fp, #-12]
    db24:	b	db58 <keyeq+0x48>
    db28:	ldr	r3, [fp, #-8]
    db2c:	ldrb	r3, [r3]
    db30:	cmp	r3, #0
    db34:	bne	db40 <keyeq+0x30>
    db38:	mov	r3, #1
    db3c:	b	db74 <keyeq+0x64>
    db40:	ldr	r3, [fp, #-8]
    db44:	add	r3, r3, #1
    db48:	str	r3, [fp, #-8]
    db4c:	ldr	r3, [fp, #-12]
    db50:	add	r3, r3, #1
    db54:	str	r3, [fp, #-12]
    db58:	ldr	r3, [fp, #-8]
    db5c:	ldrb	r2, [r3]
    db60:	ldr	r3, [fp, #-12]
    db64:	ldrb	r3, [r3]
    db68:	cmp	r2, r3
    db6c:	beq	db28 <keyeq+0x18>
    db70:	mov	r3, #0
    db74:	mov	r0, r3
    db78:	add	sp, fp, #0
    db7c:	pop	{fp}		; (ldr fp, [sp], #4)
    db80:	bx	lr

0000db84 <hash>:
    db84:	push	{fp}		; (str fp, [sp, #-4]!)
    db88:	add	fp, sp, #0
    db8c:	sub	sp, sp, #20
    db90:	str	r0, [fp, #-16]
    db94:	str	r1, [fp, #-20]	; 0xffffffec
    db98:	ldr	r3, [fp, #-16]
    db9c:	ldr	r3, [r3, #512]	; 0x200
    dba0:	str	r3, [fp, #-8]
    dba4:	b	dbcc <hash+0x48>
    dba8:	ldr	r3, [fp, #-8]
    dbac:	ldr	r2, [pc, #60]	; dbf0 <hash+0x6c>
    dbb0:	mul	r2, r2, r3
    dbb4:	ldr	r3, [fp, #-20]	; 0xffffffec
    dbb8:	add	r1, r3, #1
    dbbc:	str	r1, [fp, #-20]	; 0xffffffec
    dbc0:	ldrb	r3, [r3]
    dbc4:	eor	r3, r3, r2
    dbc8:	str	r3, [fp, #-8]
    dbcc:	ldr	r3, [fp, #-20]	; 0xffffffec
    dbd0:	ldrb	r3, [r3]
    dbd4:	cmp	r3, #0
    dbd8:	bne	dba8 <hash+0x24>
    dbdc:	ldr	r3, [fp, #-8]
    dbe0:	mov	r0, r3
    dbe4:	add	sp, fp, #0
    dbe8:	pop	{fp}		; (ldr fp, [sp], #4)
    dbec:	bx	lr
    dbf0:	.word	0x000f4243

0000dbf4 <lookup>:
    dbf4:	push	{r4, fp, lr}
    dbf8:	add	fp, sp, #8
    dbfc:	sub	sp, sp, #68	; 0x44
    dc00:	str	r0, [fp, #-64]	; 0xffffffc0
    dc04:	str	r1, [fp, #-68]	; 0xffffffbc
    dc08:	str	r2, [fp, #-72]	; 0xffffffb8
    dc0c:	str	r3, [fp, #-76]	; 0xffffffb4
    dc10:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc14:	ldr	r3, [r3, #8]
    dc18:	cmp	r3, #0
    dc1c:	bne	dce0 <lookup+0xec>
    dc20:	ldr	r3, [fp, #-76]	; 0xffffffb4
    dc24:	cmp	r3, #0
    dc28:	bne	dc34 <lookup+0x40>
    dc2c:	mov	r3, #0
    dc30:	b	e1ec <lookup+0x5f8>
    dc34:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc38:	mov	r2, #6
    dc3c:	strb	r2, [r3, #4]
    dc40:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc44:	mov	r2, #64	; 0x40
    dc48:	str	r2, [r3, #8]
    dc4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc50:	ldr	r3, [r3, #8]
    dc54:	lsl	r3, r3, #2
    dc58:	str	r3, [fp, #-28]	; 0xffffffe4
    dc5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc60:	ldr	r3, [r3, #16]
    dc64:	ldr	r3, [r3]
    dc68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dc6c:	blx	r3
    dc70:	mov	r2, r0
    dc74:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc78:	str	r2, [r3]
    dc7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc80:	ldr	r3, [r3]
    dc84:	cmp	r3, #0
    dc88:	bne	dca0 <lookup+0xac>
    dc8c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dc90:	mov	r2, #0
    dc94:	str	r2, [r3, #8]
    dc98:	mov	r3, #0
    dc9c:	b	e1ec <lookup+0x5f8>
    dca0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dca4:	ldr	r3, [r3]
    dca8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    dcac:	mov	r1, #0
    dcb0:	mov	r0, r3
    dcb4:	bl	0 <memset>
    dcb8:	ldr	r1, [fp, #-72]	; 0xffffffb8
    dcbc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    dcc0:	bl	db84 <hash>
    dcc4:	mov	r2, r0
    dcc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dccc:	ldr	r3, [r3, #8]
    dcd0:	sub	r3, r3, #1
    dcd4:	and	r3, r3, r2
    dcd8:	str	r3, [fp, #-16]
    dcdc:	b	e120 <lookup+0x52c>
    dce0:	ldr	r1, [fp, #-72]	; 0xffffffb8
    dce4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    dce8:	bl	db84 <hash>
    dcec:	str	r0, [fp, #-32]	; 0xffffffe0
    dcf0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dcf4:	ldr	r3, [r3, #8]
    dcf8:	sub	r3, r3, #1
    dcfc:	str	r3, [fp, #-36]	; 0xffffffdc
    dd00:	mov	r3, #0
    dd04:	strb	r3, [fp, #-17]	; 0xffffffef
    dd08:	ldr	r2, [fp, #-32]	; 0xffffffe0
    dd0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dd10:	and	r3, r3, r2
    dd14:	str	r3, [fp, #-16]
    dd18:	b	ddf8 <lookup+0x204>
    dd1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dd20:	ldr	r2, [r3]
    dd24:	ldr	r3, [fp, #-16]
    dd28:	lsl	r3, r3, #2
    dd2c:	add	r3, r2, r3
    dd30:	ldr	r3, [r3]
    dd34:	ldr	r3, [r3]
    dd38:	mov	r1, r3
    dd3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    dd40:	bl	db10 <keyeq>
    dd44:	mov	r3, r0
    dd48:	cmp	r3, #0
    dd4c:	beq	dd6c <lookup+0x178>
    dd50:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dd54:	ldr	r2, [r3]
    dd58:	ldr	r3, [fp, #-16]
    dd5c:	lsl	r3, r3, #2
    dd60:	add	r3, r2, r3
    dd64:	ldr	r3, [r3]
    dd68:	b	e1ec <lookup+0x5f8>
    dd6c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    dd70:	cmp	r3, #0
    dd74:	bne	ddb8 <lookup+0x1c4>
    dd78:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dd7c:	mvn	r2, r3
    dd80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    dd84:	and	r2, r2, r3
    dd88:	ldr	r3, [fp, #-68]	; 0xffffffbc
    dd8c:	ldrb	r3, [r3, #4]
    dd90:	sub	r3, r3, #1
    dd94:	lsr	r3, r2, r3
    dd98:	uxtb	r2, r3
    dd9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dda0:	lsr	r3, r3, #2
    dda4:	uxtb	r3, r3
    dda8:	and	r3, r3, r2
    ddac:	uxtb	r3, r3
    ddb0:	orr	r3, r3, #1
    ddb4:	strb	r3, [fp, #-17]	; 0xffffffef
    ddb8:	ldrb	r2, [fp, #-17]	; 0xffffffef
    ddbc:	ldr	r3, [fp, #-16]
    ddc0:	cmp	r2, r3
    ddc4:	bls	dde8 <lookup+0x1f4>
    ddc8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ddcc:	ldr	r2, [r3, #8]
    ddd0:	ldrb	r3, [fp, #-17]	; 0xffffffef
    ddd4:	sub	r3, r2, r3
    ddd8:	ldr	r2, [fp, #-16]
    dddc:	add	r3, r2, r3
    dde0:	str	r3, [fp, #-16]
    dde4:	b	ddf8 <lookup+0x204>
    dde8:	ldrb	r3, [fp, #-17]	; 0xffffffef
    ddec:	ldr	r2, [fp, #-16]
    ddf0:	sub	r3, r2, r3
    ddf4:	str	r3, [fp, #-16]
    ddf8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ddfc:	ldr	r2, [r3]
    de00:	ldr	r3, [fp, #-16]
    de04:	lsl	r3, r3, #2
    de08:	add	r3, r2, r3
    de0c:	ldr	r3, [r3]
    de10:	cmp	r3, #0
    de14:	bne	dd1c <lookup+0x128>
    de18:	ldr	r3, [fp, #-76]	; 0xffffffb4
    de1c:	cmp	r3, #0
    de20:	bne	de2c <lookup+0x238>
    de24:	mov	r3, #0
    de28:	b	e1ec <lookup+0x5f8>
    de2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    de30:	ldr	r2, [r3, #12]
    de34:	ldr	r3, [fp, #-68]	; 0xffffffbc
    de38:	ldrb	r3, [r3, #4]
    de3c:	sub	r3, r3, #1
    de40:	lsr	r3, r2, r3
    de44:	cmp	r3, #0
    de48:	beq	e120 <lookup+0x52c>
    de4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    de50:	ldrb	r3, [r3, #4]
    de54:	add	r3, r3, #1
    de58:	strb	r3, [fp, #-37]	; 0xffffffdb
    de5c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    de60:	mov	r2, #1
    de64:	lsl	r3, r2, r3
    de68:	str	r3, [fp, #-44]	; 0xffffffd4
    de6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    de70:	sub	r3, r3, #1
    de74:	str	r3, [fp, #-48]	; 0xffffffd0
    de78:	ldr	r3, [fp, #-44]	; 0xffffffd4
    de7c:	lsl	r3, r3, #2
    de80:	str	r3, [fp, #-52]	; 0xffffffcc
    de84:	ldr	r3, [fp, #-68]	; 0xffffffbc
    de88:	ldr	r3, [r3, #16]
    de8c:	ldr	r3, [r3]
    de90:	ldr	r0, [fp, #-52]	; 0xffffffcc
    de94:	blx	r3
    de98:	str	r0, [fp, #-56]	; 0xffffffc8
    de9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    dea0:	cmp	r3, #0
    dea4:	bne	deb0 <lookup+0x2bc>
    dea8:	mov	r3, #0
    deac:	b	e1ec <lookup+0x5f8>
    deb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    deb4:	mov	r1, #0
    deb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    debc:	bl	0 <memset>
    dec0:	mov	r3, #0
    dec4:	str	r3, [fp, #-16]
    dec8:	b	e00c <lookup+0x418>
    decc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    ded0:	ldr	r2, [r3]
    ded4:	ldr	r3, [fp, #-16]
    ded8:	lsl	r3, r3, #2
    dedc:	add	r3, r2, r3
    dee0:	ldr	r3, [r3]
    dee4:	cmp	r3, #0
    dee8:	beq	e000 <lookup+0x40c>
    deec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    def0:	ldr	r2, [r3]
    def4:	ldr	r3, [fp, #-16]
    def8:	lsl	r3, r3, #2
    defc:	add	r3, r2, r3
    df00:	ldr	r3, [r3]
    df04:	ldr	r3, [r3]
    df08:	mov	r1, r3
    df0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    df10:	bl	db84 <hash>
    df14:	str	r0, [fp, #-60]	; 0xffffffc4
    df18:	ldr	r2, [fp, #-60]	; 0xffffffc4
    df1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    df20:	and	r3, r3, r2
    df24:	str	r3, [fp, #-24]	; 0xffffffe8
    df28:	mov	r3, #0
    df2c:	strb	r3, [fp, #-17]	; 0xffffffef
    df30:	b	dfb8 <lookup+0x3c4>
    df34:	ldrb	r3, [fp, #-17]	; 0xffffffef
    df38:	cmp	r3, #0
    df3c:	bne	df7c <lookup+0x388>
    df40:	ldr	r3, [fp, #-48]	; 0xffffffd0
    df44:	mvn	r2, r3
    df48:	ldr	r3, [fp, #-60]	; 0xffffffc4
    df4c:	and	r2, r2, r3
    df50:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    df54:	sub	r3, r3, #1
    df58:	lsr	r3, r2, r3
    df5c:	uxtb	r2, r3
    df60:	ldr	r3, [fp, #-48]	; 0xffffffd0
    df64:	lsr	r3, r3, #2
    df68:	uxtb	r3, r3
    df6c:	and	r3, r3, r2
    df70:	uxtb	r3, r3
    df74:	orr	r3, r3, #1
    df78:	strb	r3, [fp, #-17]	; 0xffffffef
    df7c:	ldrb	r2, [fp, #-17]	; 0xffffffef
    df80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    df84:	cmp	r2, r3
    df88:	bls	dfa8 <lookup+0x3b4>
    df8c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    df90:	ldr	r2, [fp, #-44]	; 0xffffffd4
    df94:	sub	r3, r2, r3
    df98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    df9c:	add	r3, r2, r3
    dfa0:	str	r3, [fp, #-24]	; 0xffffffe8
    dfa4:	b	dfb8 <lookup+0x3c4>
    dfa8:	ldrb	r3, [fp, #-17]	; 0xffffffef
    dfac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dfb0:	sub	r3, r2, r3
    dfb4:	str	r3, [fp, #-24]	; 0xffffffe8
    dfb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dfbc:	lsl	r3, r3, #2
    dfc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    dfc4:	add	r3, r2, r3
    dfc8:	ldr	r3, [r3]
    dfcc:	cmp	r3, #0
    dfd0:	bne	df34 <lookup+0x340>
    dfd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    dfd8:	lsl	r3, r3, #2
    dfdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    dfe0:	add	r3, r2, r3
    dfe4:	ldr	r2, [fp, #-68]	; 0xffffffbc
    dfe8:	ldr	r1, [r2]
    dfec:	ldr	r2, [fp, #-16]
    dff0:	lsl	r2, r2, #2
    dff4:	add	r2, r1, r2
    dff8:	ldr	r2, [r2]
    dffc:	str	r2, [r3]
    e000:	ldr	r3, [fp, #-16]
    e004:	add	r3, r3, #1
    e008:	str	r3, [fp, #-16]
    e00c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e010:	ldr	r2, [r3, #8]
    e014:	ldr	r3, [fp, #-16]
    e018:	cmp	r2, r3
    e01c:	bhi	decc <lookup+0x2d8>
    e020:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e024:	ldr	r3, [r3, #16]
    e028:	ldr	r3, [r3, #8]
    e02c:	ldr	r2, [fp, #-68]	; 0xffffffbc
    e030:	ldr	r2, [r2]
    e034:	mov	r0, r2
    e038:	blx	r3
    e03c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e040:	ldr	r2, [fp, #-56]	; 0xffffffc8
    e044:	str	r2, [r3]
    e048:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e04c:	ldrb	r2, [fp, #-37]	; 0xffffffdb
    e050:	strb	r2, [r3, #4]
    e054:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e058:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e05c:	str	r2, [r3, #8]
    e060:	ldr	r2, [fp, #-32]	; 0xffffffe0
    e064:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e068:	and	r3, r3, r2
    e06c:	str	r3, [fp, #-16]
    e070:	mov	r3, #0
    e074:	strb	r3, [fp, #-17]	; 0xffffffef
    e078:	b	e100 <lookup+0x50c>
    e07c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e080:	cmp	r3, #0
    e084:	bne	e0c4 <lookup+0x4d0>
    e088:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e08c:	mvn	r2, r3
    e090:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e094:	and	r2, r2, r3
    e098:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    e09c:	sub	r3, r3, #1
    e0a0:	lsr	r3, r2, r3
    e0a4:	uxtb	r2, r3
    e0a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e0ac:	lsr	r3, r3, #2
    e0b0:	uxtb	r3, r3
    e0b4:	and	r3, r3, r2
    e0b8:	uxtb	r3, r3
    e0bc:	orr	r3, r3, #1
    e0c0:	strb	r3, [fp, #-17]	; 0xffffffef
    e0c4:	ldrb	r2, [fp, #-17]	; 0xffffffef
    e0c8:	ldr	r3, [fp, #-16]
    e0cc:	cmp	r2, r3
    e0d0:	bls	e0f0 <lookup+0x4fc>
    e0d4:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e0d8:	ldr	r2, [fp, #-44]	; 0xffffffd4
    e0dc:	sub	r3, r2, r3
    e0e0:	ldr	r2, [fp, #-16]
    e0e4:	add	r3, r2, r3
    e0e8:	str	r3, [fp, #-16]
    e0ec:	b	e100 <lookup+0x50c>
    e0f0:	ldrb	r3, [fp, #-17]	; 0xffffffef
    e0f4:	ldr	r2, [fp, #-16]
    e0f8:	sub	r3, r2, r3
    e0fc:	str	r3, [fp, #-16]
    e100:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e104:	ldr	r2, [r3]
    e108:	ldr	r3, [fp, #-16]
    e10c:	lsl	r3, r3, #2
    e110:	add	r3, r2, r3
    e114:	ldr	r3, [r3]
    e118:	cmp	r3, #0
    e11c:	bne	e07c <lookup+0x488>
    e120:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e124:	ldr	r2, [r3]
    e128:	ldr	r3, [fp, #-16]
    e12c:	lsl	r3, r3, #2
    e130:	add	r4, r2, r3
    e134:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e138:	ldr	r3, [r3, #16]
    e13c:	ldr	r3, [r3]
    e140:	ldr	r0, [fp, #-76]	; 0xffffffb4
    e144:	blx	r3
    e148:	mov	r3, r0
    e14c:	str	r3, [r4]
    e150:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e154:	ldr	r2, [r3]
    e158:	ldr	r3, [fp, #-16]
    e15c:	lsl	r3, r3, #2
    e160:	add	r3, r2, r3
    e164:	ldr	r3, [r3]
    e168:	cmp	r3, #0
    e16c:	bne	e178 <lookup+0x584>
    e170:	mov	r3, #0
    e174:	b	e1ec <lookup+0x5f8>
    e178:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e17c:	ldr	r2, [r3]
    e180:	ldr	r3, [fp, #-16]
    e184:	lsl	r3, r3, #2
    e188:	add	r3, r2, r3
    e18c:	ldr	r3, [r3]
    e190:	ldr	r2, [fp, #-76]	; 0xffffffb4
    e194:	mov	r1, #0
    e198:	mov	r0, r3
    e19c:	bl	0 <memset>
    e1a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e1a4:	ldr	r2, [r3]
    e1a8:	ldr	r3, [fp, #-16]
    e1ac:	lsl	r3, r3, #2
    e1b0:	add	r3, r2, r3
    e1b4:	ldr	r3, [r3]
    e1b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    e1bc:	str	r2, [r3]
    e1c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e1c4:	ldr	r3, [r3, #12]
    e1c8:	add	r2, r3, #1
    e1cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e1d0:	str	r2, [r3, #12]
    e1d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    e1d8:	ldr	r2, [r3]
    e1dc:	ldr	r3, [fp, #-16]
    e1e0:	lsl	r3, r3, #2
    e1e4:	add	r3, r2, r3
    e1e8:	ldr	r3, [r3]
    e1ec:	mov	r0, r3
    e1f0:	sub	sp, fp, #8
    e1f4:	pop	{r4, fp, pc}

0000e1f8 <hashTableClear>:
    e1f8:	push	{fp, lr}
    e1fc:	add	fp, sp, #4
    e200:	sub	sp, sp, #16
    e204:	str	r0, [fp, #-16]
    e208:	mov	r3, #0
    e20c:	str	r3, [fp, #-8]
    e210:	b	e268 <hashTableClear+0x70>
    e214:	ldr	r3, [fp, #-16]
    e218:	ldr	r3, [r3, #16]
    e21c:	ldr	r3, [r3, #8]
    e220:	ldr	r2, [fp, #-16]
    e224:	ldr	r1, [r2]
    e228:	ldr	r2, [fp, #-8]
    e22c:	lsl	r2, r2, #2
    e230:	add	r2, r1, r2
    e234:	ldr	r2, [r2]
    e238:	mov	r0, r2
    e23c:	blx	r3
    e240:	ldr	r3, [fp, #-16]
    e244:	ldr	r2, [r3]
    e248:	ldr	r3, [fp, #-8]
    e24c:	lsl	r3, r3, #2
    e250:	add	r3, r2, r3
    e254:	mov	r2, #0
    e258:	str	r2, [r3]
    e25c:	ldr	r3, [fp, #-8]
    e260:	add	r3, r3, #1
    e264:	str	r3, [fp, #-8]
    e268:	ldr	r3, [fp, #-16]
    e26c:	ldr	r2, [r3, #8]
    e270:	ldr	r3, [fp, #-8]
    e274:	cmp	r2, r3
    e278:	bhi	e214 <hashTableClear+0x1c>
    e27c:	ldr	r3, [fp, #-16]
    e280:	mov	r2, #0
    e284:	str	r2, [r3, #12]
    e288:	nop			; (mov r0, r0)
    e28c:	sub	sp, fp, #4
    e290:	pop	{fp, pc}

0000e294 <hashTableDestroy>:
    e294:	push	{fp, lr}
    e298:	add	fp, sp, #4
    e29c:	sub	sp, sp, #16
    e2a0:	str	r0, [fp, #-16]
    e2a4:	mov	r3, #0
    e2a8:	str	r3, [fp, #-8]
    e2ac:	b	e2e8 <hashTableDestroy+0x54>
    e2b0:	ldr	r3, [fp, #-16]
    e2b4:	ldr	r3, [r3, #16]
    e2b8:	ldr	r3, [r3, #8]
    e2bc:	ldr	r2, [fp, #-16]
    e2c0:	ldr	r1, [r2]
    e2c4:	ldr	r2, [fp, #-8]
    e2c8:	lsl	r2, r2, #2
    e2cc:	add	r2, r1, r2
    e2d0:	ldr	r2, [r2]
    e2d4:	mov	r0, r2
    e2d8:	blx	r3
    e2dc:	ldr	r3, [fp, #-8]
    e2e0:	add	r3, r3, #1
    e2e4:	str	r3, [fp, #-8]
    e2e8:	ldr	r3, [fp, #-16]
    e2ec:	ldr	r2, [r3, #8]
    e2f0:	ldr	r3, [fp, #-8]
    e2f4:	cmp	r2, r3
    e2f8:	bhi	e2b0 <hashTableDestroy+0x1c>
    e2fc:	ldr	r3, [fp, #-16]
    e300:	ldr	r3, [r3, #16]
    e304:	ldr	r3, [r3, #8]
    e308:	ldr	r2, [fp, #-16]
    e30c:	ldr	r2, [r2]
    e310:	mov	r0, r2
    e314:	blx	r3
    e318:	nop			; (mov r0, r0)
    e31c:	sub	sp, fp, #4
    e320:	pop	{fp, pc}

0000e324 <hashTableInit>:
    e324:	push	{fp}		; (str fp, [sp, #-4]!)
    e328:	add	fp, sp, #0
    e32c:	sub	sp, sp, #12
    e330:	str	r0, [fp, #-8]
    e334:	str	r1, [fp, #-12]
    e338:	ldr	r3, [fp, #-8]
    e33c:	mov	r2, #0
    e340:	strb	r2, [r3, #4]
    e344:	ldr	r3, [fp, #-8]
    e348:	mov	r2, #0
    e34c:	str	r2, [r3, #8]
    e350:	ldr	r3, [fp, #-8]
    e354:	mov	r2, #0
    e358:	str	r2, [r3, #12]
    e35c:	ldr	r3, [fp, #-8]
    e360:	mov	r2, #0
    e364:	str	r2, [r3]
    e368:	ldr	r3, [fp, #-8]
    e36c:	ldr	r2, [fp, #-12]
    e370:	str	r2, [r3, #16]
    e374:	nop			; (mov r0, r0)
    e378:	add	sp, fp, #0
    e37c:	pop	{fp}		; (ldr fp, [sp], #4)
    e380:	bx	lr

0000e384 <hashTableIterInit>:
    e384:	push	{fp}		; (str fp, [sp, #-4]!)
    e388:	add	fp, sp, #0
    e38c:	sub	sp, sp, #12
    e390:	str	r0, [fp, #-8]
    e394:	str	r1, [fp, #-12]
    e398:	ldr	r3, [fp, #-12]
    e39c:	ldr	r2, [r3]
    e3a0:	ldr	r3, [fp, #-8]
    e3a4:	str	r2, [r3]
    e3a8:	ldr	r3, [fp, #-8]
    e3ac:	ldr	r2, [r3]
    e3b0:	ldr	r3, [fp, #-12]
    e3b4:	ldr	r3, [r3, #8]
    e3b8:	lsl	r3, r3, #2
    e3bc:	add	r2, r2, r3
    e3c0:	ldr	r3, [fp, #-8]
    e3c4:	str	r2, [r3, #4]
    e3c8:	nop			; (mov r0, r0)
    e3cc:	add	sp, fp, #0
    e3d0:	pop	{fp}		; (ldr fp, [sp], #4)
    e3d4:	bx	lr

0000e3d8 <hashTableIterNext>:
    e3d8:	push	{fp}		; (str fp, [sp, #-4]!)
    e3dc:	add	fp, sp, #0
    e3e0:	sub	sp, sp, #20
    e3e4:	str	r0, [fp, #-16]
    e3e8:	b	e41c <hashTableIterNext+0x44>
    e3ec:	ldr	r3, [fp, #-16]
    e3f0:	ldr	r3, [r3]
    e3f4:	add	r1, r3, #4
    e3f8:	ldr	r2, [fp, #-16]
    e3fc:	str	r1, [r2]
    e400:	ldr	r3, [r3]
    e404:	str	r3, [fp, #-8]
    e408:	ldr	r3, [fp, #-8]
    e40c:	cmp	r3, #0
    e410:	beq	e41c <hashTableIterNext+0x44>
    e414:	ldr	r3, [fp, #-8]
    e418:	b	e438 <hashTableIterNext+0x60>
    e41c:	ldr	r3, [fp, #-16]
    e420:	ldr	r2, [r3]
    e424:	ldr	r3, [fp, #-16]
    e428:	ldr	r3, [r3, #4]
    e42c:	cmp	r2, r3
    e430:	bne	e3ec <hashTableIterNext+0x14>
    e434:	mov	r3, #0
    e438:	mov	r0, r3
    e43c:	add	sp, fp, #0
    e440:	pop	{fp}		; (ldr fp, [sp], #4)
    e444:	bx	lr

0000e448 <poolInit>:
    e448:	push	{fp}		; (str fp, [sp, #-4]!)
    e44c:	add	fp, sp, #0
    e450:	sub	sp, sp, #12
    e454:	str	r0, [fp, #-8]
    e458:	str	r1, [fp, #-12]
    e45c:	ldr	r3, [fp, #-8]
    e460:	mov	r2, #0
    e464:	str	r2, [r3]
    e468:	ldr	r3, [fp, #-8]
    e46c:	mov	r2, #0
    e470:	str	r2, [r3, #4]
    e474:	ldr	r3, [fp, #-8]
    e478:	mov	r2, #0
    e47c:	str	r2, [r3, #16]
    e480:	ldr	r3, [fp, #-8]
    e484:	mov	r2, #0
    e488:	str	r2, [r3, #12]
    e48c:	ldr	r3, [fp, #-8]
    e490:	mov	r2, #0
    e494:	str	r2, [r3, #8]
    e498:	ldr	r3, [fp, #-8]
    e49c:	ldr	r2, [fp, #-12]
    e4a0:	str	r2, [r3, #20]
    e4a4:	nop			; (mov r0, r0)
    e4a8:	add	sp, fp, #0
    e4ac:	pop	{fp}		; (ldr fp, [sp], #4)
    e4b0:	bx	lr

0000e4b4 <poolClear>:
    e4b4:	push	{fp}		; (str fp, [sp, #-4]!)
    e4b8:	add	fp, sp, #0
    e4bc:	sub	sp, sp, #20
    e4c0:	str	r0, [fp, #-16]
    e4c4:	ldr	r3, [fp, #-16]
    e4c8:	ldr	r3, [r3, #4]
    e4cc:	cmp	r3, #0
    e4d0:	bne	e4e8 <poolClear+0x34>
    e4d4:	ldr	r3, [fp, #-16]
    e4d8:	ldr	r2, [r3]
    e4dc:	ldr	r3, [fp, #-16]
    e4e0:	str	r2, [r3, #4]
    e4e4:	b	e534 <poolClear+0x80>
    e4e8:	ldr	r3, [fp, #-16]
    e4ec:	ldr	r3, [r3]
    e4f0:	str	r3, [fp, #-8]
    e4f4:	b	e528 <poolClear+0x74>
    e4f8:	ldr	r3, [fp, #-8]
    e4fc:	ldr	r3, [r3]
    e500:	str	r3, [fp, #-12]
    e504:	ldr	r3, [fp, #-16]
    e508:	ldr	r2, [r3, #4]
    e50c:	ldr	r3, [fp, #-8]
    e510:	str	r2, [r3]
    e514:	ldr	r3, [fp, #-16]
    e518:	ldr	r2, [fp, #-8]
    e51c:	str	r2, [r3, #4]
    e520:	ldr	r3, [fp, #-12]
    e524:	str	r3, [fp, #-8]
    e528:	ldr	r3, [fp, #-8]
    e52c:	cmp	r3, #0
    e530:	bne	e4f8 <poolClear+0x44>
    e534:	ldr	r3, [fp, #-16]
    e538:	mov	r2, #0
    e53c:	str	r2, [r3]
    e540:	ldr	r3, [fp, #-16]
    e544:	mov	r2, #0
    e548:	str	r2, [r3, #16]
    e54c:	ldr	r3, [fp, #-16]
    e550:	mov	r2, #0
    e554:	str	r2, [r3, #12]
    e558:	ldr	r3, [fp, #-16]
    e55c:	mov	r2, #0
    e560:	str	r2, [r3, #8]
    e564:	nop			; (mov r0, r0)
    e568:	add	sp, fp, #0
    e56c:	pop	{fp}		; (ldr fp, [sp], #4)
    e570:	bx	lr

0000e574 <poolDestroy>:
    e574:	push	{fp, lr}
    e578:	add	fp, sp, #4
    e57c:	sub	sp, sp, #24
    e580:	str	r0, [fp, #-24]	; 0xffffffe8
    e584:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e588:	ldr	r3, [r3]
    e58c:	str	r3, [fp, #-8]
    e590:	b	e5bc <poolDestroy+0x48>
    e594:	ldr	r3, [fp, #-8]
    e598:	ldr	r3, [r3]
    e59c:	str	r3, [fp, #-12]
    e5a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e5a4:	ldr	r3, [r3, #20]
    e5a8:	ldr	r3, [r3, #8]
    e5ac:	ldr	r0, [fp, #-8]
    e5b0:	blx	r3
    e5b4:	ldr	r3, [fp, #-12]
    e5b8:	str	r3, [fp, #-8]
    e5bc:	ldr	r3, [fp, #-8]
    e5c0:	cmp	r3, #0
    e5c4:	bne	e594 <poolDestroy+0x20>
    e5c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e5cc:	ldr	r3, [r3, #4]
    e5d0:	str	r3, [fp, #-8]
    e5d4:	b	e600 <poolDestroy+0x8c>
    e5d8:	ldr	r3, [fp, #-8]
    e5dc:	ldr	r3, [r3]
    e5e0:	str	r3, [fp, #-16]
    e5e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    e5e8:	ldr	r3, [r3, #20]
    e5ec:	ldr	r3, [r3, #8]
    e5f0:	ldr	r0, [fp, #-8]
    e5f4:	blx	r3
    e5f8:	ldr	r3, [fp, #-16]
    e5fc:	str	r3, [fp, #-8]
    e600:	ldr	r3, [fp, #-8]
    e604:	cmp	r3, #0
    e608:	bne	e5d8 <poolDestroy+0x64>
    e60c:	nop			; (mov r0, r0)
    e610:	sub	sp, fp, #4
    e614:	pop	{fp, pc}

0000e618 <poolAppend>:
    e618:	push	{r4, fp, lr}
    e61c:	add	fp, sp, #8
    e620:	sub	sp, sp, #28
    e624:	str	r0, [fp, #-16]
    e628:	str	r1, [fp, #-20]	; 0xffffffec
    e62c:	str	r2, [fp, #-24]	; 0xffffffe8
    e630:	str	r3, [fp, #-28]	; 0xffffffe4
    e634:	ldr	r3, [fp, #-16]
    e638:	ldr	r3, [r3, #12]
    e63c:	cmp	r3, #0
    e640:	bne	e660 <poolAppend+0x48>
    e644:	ldr	r0, [fp, #-16]
    e648:	bl	e9e8 <poolGrow>
    e64c:	mov	r3, r0
    e650:	cmp	r3, #0
    e654:	bne	e660 <poolAppend+0x48>
    e658:	mov	r3, #0
    e65c:	b	e6c8 <poolAppend+0xb0>
    e660:	ldr	r3, [fp, #-20]	; 0xffffffec
    e664:	ldr	r4, [r3, #60]	; 0x3c
    e668:	ldr	r3, [fp, #-16]
    e66c:	add	r2, r3, #12
    e670:	ldr	r3, [fp, #-16]
    e674:	ldr	r3, [r3, #8]
    e678:	sub	r1, fp, #24
    e67c:	str	r3, [sp]
    e680:	mov	r3, r2
    e684:	ldr	r2, [fp, #-28]	; 0xffffffe4
    e688:	ldr	r0, [fp, #-20]	; 0xffffffec
    e68c:	blx	r4
    e690:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e694:	ldr	r3, [fp, #-28]	; 0xffffffe4
    e698:	cmp	r2, r3
    e69c:	beq	e6bc <poolAppend+0xa4>
    e6a0:	ldr	r0, [fp, #-16]
    e6a4:	bl	e9e8 <poolGrow>
    e6a8:	mov	r3, r0
    e6ac:	cmp	r3, #0
    e6b0:	bne	e660 <poolAppend+0x48>
    e6b4:	mov	r3, #0
    e6b8:	b	e6c8 <poolAppend+0xb0>
    e6bc:	nop			; (mov r0, r0)
    e6c0:	ldr	r3, [fp, #-16]
    e6c4:	ldr	r3, [r3, #16]
    e6c8:	mov	r0, r3
    e6cc:	sub	sp, fp, #8
    e6d0:	pop	{r4, fp, pc}

0000e6d4 <poolCopyString>:
    e6d4:	push	{fp, lr}
    e6d8:	add	fp, sp, #4
    e6dc:	sub	sp, sp, #8
    e6e0:	str	r0, [fp, #-8]
    e6e4:	str	r1, [fp, #-12]
    e6e8:	ldr	r3, [fp, #-8]
    e6ec:	ldr	r2, [r3, #12]
    e6f0:	ldr	r3, [fp, #-8]
    e6f4:	ldr	r3, [r3, #8]
    e6f8:	cmp	r2, r3
    e6fc:	bne	e714 <poolCopyString+0x40>
    e700:	ldr	r0, [fp, #-8]
    e704:	bl	e9e8 <poolGrow>
    e708:	mov	r3, r0
    e70c:	cmp	r3, #0
    e710:	beq	e73c <poolCopyString+0x68>
    e714:	ldr	r3, [fp, #-8]
    e718:	ldr	r3, [r3, #12]
    e71c:	add	r1, r3, #1
    e720:	ldr	r2, [fp, #-8]
    e724:	str	r1, [r2, #12]
    e728:	ldr	r2, [fp, #-12]
    e72c:	ldrb	r2, [r2]
    e730:	strb	r2, [r3]
    e734:	mov	r3, #0
    e738:	b	e740 <poolCopyString+0x6c>
    e73c:	mov	r3, #1
    e740:	cmp	r3, #0
    e744:	beq	e750 <poolCopyString+0x7c>
    e748:	mov	r3, #0
    e74c:	b	e788 <poolCopyString+0xb4>
    e750:	ldr	r3, [fp, #-12]
    e754:	add	r2, r3, #1
    e758:	str	r2, [fp, #-12]
    e75c:	ldrb	r3, [r3]
    e760:	cmp	r3, #0
    e764:	bne	e6e8 <poolCopyString+0x14>
    e768:	ldr	r3, [fp, #-8]
    e76c:	ldr	r3, [r3, #16]
    e770:	str	r3, [fp, #-12]
    e774:	ldr	r3, [fp, #-8]
    e778:	ldr	r2, [r3, #12]
    e77c:	ldr	r3, [fp, #-8]
    e780:	str	r2, [r3, #16]
    e784:	ldr	r3, [fp, #-12]
    e788:	mov	r0, r3
    e78c:	sub	sp, fp, #4
    e790:	pop	{fp, pc}

0000e794 <poolCopyStringN>:
    e794:	push	{fp, lr}
    e798:	add	fp, sp, #4
    e79c:	sub	sp, sp, #16
    e7a0:	str	r0, [fp, #-8]
    e7a4:	str	r1, [fp, #-12]
    e7a8:	str	r2, [fp, #-16]
    e7ac:	ldr	r3, [fp, #-8]
    e7b0:	ldr	r3, [r3, #12]
    e7b4:	cmp	r3, #0
    e7b8:	bne	e858 <poolCopyStringN+0xc4>
    e7bc:	ldr	r0, [fp, #-8]
    e7c0:	bl	e9e8 <poolGrow>
    e7c4:	mov	r3, r0
    e7c8:	cmp	r3, #0
    e7cc:	bne	e858 <poolCopyStringN+0xc4>
    e7d0:	mov	r3, #0
    e7d4:	b	e884 <poolCopyStringN+0xf0>
    e7d8:	ldr	r3, [fp, #-8]
    e7dc:	ldr	r2, [r3, #12]
    e7e0:	ldr	r3, [fp, #-8]
    e7e4:	ldr	r3, [r3, #8]
    e7e8:	cmp	r2, r3
    e7ec:	bne	e804 <poolCopyStringN+0x70>
    e7f0:	ldr	r0, [fp, #-8]
    e7f4:	bl	e9e8 <poolGrow>
    e7f8:	mov	r3, r0
    e7fc:	cmp	r3, #0
    e800:	beq	e82c <poolCopyStringN+0x98>
    e804:	ldr	r3, [fp, #-8]
    e808:	ldr	r3, [r3, #12]
    e80c:	add	r1, r3, #1
    e810:	ldr	r2, [fp, #-8]
    e814:	str	r1, [r2, #12]
    e818:	ldr	r2, [fp, #-12]
    e81c:	ldrb	r2, [r2]
    e820:	strb	r2, [r3]
    e824:	mov	r3, #0
    e828:	b	e830 <poolCopyStringN+0x9c>
    e82c:	mov	r3, #1
    e830:	cmp	r3, #0
    e834:	beq	e840 <poolCopyStringN+0xac>
    e838:	mov	r3, #0
    e83c:	b	e884 <poolCopyStringN+0xf0>
    e840:	ldr	r3, [fp, #-16]
    e844:	sub	r3, r3, #1
    e848:	str	r3, [fp, #-16]
    e84c:	ldr	r3, [fp, #-12]
    e850:	add	r3, r3, #1
    e854:	str	r3, [fp, #-12]
    e858:	ldr	r3, [fp, #-16]
    e85c:	cmp	r3, #0
    e860:	bgt	e7d8 <poolCopyStringN+0x44>
    e864:	ldr	r3, [fp, #-8]
    e868:	ldr	r3, [r3, #16]
    e86c:	str	r3, [fp, #-12]
    e870:	ldr	r3, [fp, #-8]
    e874:	ldr	r2, [r3, #12]
    e878:	ldr	r3, [fp, #-8]
    e87c:	str	r2, [r3, #16]
    e880:	ldr	r3, [fp, #-12]
    e884:	mov	r0, r3
    e888:	sub	sp, fp, #4
    e88c:	pop	{fp, pc}

0000e890 <poolAppendString>:
    e890:	push	{fp, lr}
    e894:	add	fp, sp, #4
    e898:	sub	sp, sp, #8
    e89c:	str	r0, [fp, #-8]
    e8a0:	str	r1, [fp, #-12]
    e8a4:	b	e91c <poolAppendString+0x8c>
    e8a8:	ldr	r3, [fp, #-8]
    e8ac:	ldr	r2, [r3, #12]
    e8b0:	ldr	r3, [fp, #-8]
    e8b4:	ldr	r3, [r3, #8]
    e8b8:	cmp	r2, r3
    e8bc:	bne	e8d4 <poolAppendString+0x44>
    e8c0:	ldr	r0, [fp, #-8]
    e8c4:	bl	e9e8 <poolGrow>
    e8c8:	mov	r3, r0
    e8cc:	cmp	r3, #0
    e8d0:	beq	e8fc <poolAppendString+0x6c>
    e8d4:	ldr	r3, [fp, #-8]
    e8d8:	ldr	r3, [r3, #12]
    e8dc:	add	r1, r3, #1
    e8e0:	ldr	r2, [fp, #-8]
    e8e4:	str	r1, [r2, #12]
    e8e8:	ldr	r2, [fp, #-12]
    e8ec:	ldrb	r2, [r2]
    e8f0:	strb	r2, [r3]
    e8f4:	mov	r3, #0
    e8f8:	b	e900 <poolAppendString+0x70>
    e8fc:	mov	r3, #1
    e900:	cmp	r3, #0
    e904:	beq	e910 <poolAppendString+0x80>
    e908:	mov	r3, #0
    e90c:	b	e934 <poolAppendString+0xa4>
    e910:	ldr	r3, [fp, #-12]
    e914:	add	r3, r3, #1
    e918:	str	r3, [fp, #-12]
    e91c:	ldr	r3, [fp, #-12]
    e920:	ldrb	r3, [r3]
    e924:	cmp	r3, #0
    e928:	bne	e8a8 <poolAppendString+0x18>
    e92c:	ldr	r3, [fp, #-8]
    e930:	ldr	r3, [r3, #16]
    e934:	mov	r0, r3
    e938:	sub	sp, fp, #4
    e93c:	pop	{fp, pc}

0000e940 <poolStoreString>:
    e940:	push	{fp, lr}
    e944:	add	fp, sp, #4
    e948:	sub	sp, sp, #16
    e94c:	str	r0, [fp, #-8]
    e950:	str	r1, [fp, #-12]
    e954:	str	r2, [fp, #-16]
    e958:	str	r3, [fp, #-20]	; 0xffffffec
    e95c:	ldr	r3, [fp, #-20]	; 0xffffffec
    e960:	ldr	r2, [fp, #-16]
    e964:	ldr	r1, [fp, #-12]
    e968:	ldr	r0, [fp, #-8]
    e96c:	bl	e618 <poolAppend>
    e970:	mov	r3, r0
    e974:	cmp	r3, #0
    e978:	bne	e984 <poolStoreString+0x44>
    e97c:	mov	r3, #0
    e980:	b	e9dc <poolStoreString+0x9c>
    e984:	ldr	r3, [fp, #-8]
    e988:	ldr	r2, [r3, #12]
    e98c:	ldr	r3, [fp, #-8]
    e990:	ldr	r3, [r3, #8]
    e994:	cmp	r2, r3
    e998:	bne	e9b8 <poolStoreString+0x78>
    e99c:	ldr	r0, [fp, #-8]
    e9a0:	bl	e9e8 <poolGrow>
    e9a4:	mov	r3, r0
    e9a8:	cmp	r3, #0
    e9ac:	bne	e9b8 <poolStoreString+0x78>
    e9b0:	mov	r3, #0
    e9b4:	b	e9dc <poolStoreString+0x9c>
    e9b8:	ldr	r3, [fp, #-8]
    e9bc:	ldr	r3, [r3, #12]
    e9c0:	add	r1, r3, #1
    e9c4:	ldr	r2, [fp, #-8]
    e9c8:	str	r1, [r2, #12]
    e9cc:	mov	r2, #0
    e9d0:	strb	r2, [r3]
    e9d4:	ldr	r3, [fp, #-8]
    e9d8:	ldr	r3, [r3, #16]
    e9dc:	mov	r0, r3
    e9e0:	sub	sp, fp, #4
    e9e4:	pop	{fp, pc}

0000e9e8 <poolGrow>:
    e9e8:	push	{fp, lr}
    e9ec:	add	fp, sp, #4
    e9f0:	sub	sp, sp, #32
    e9f4:	str	r0, [fp, #-32]	; 0xffffffe0
    e9f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    e9fc:	ldr	r3, [r3, #4]
    ea00:	cmp	r3, #0
    ea04:	beq	eba4 <poolGrow+0x1bc>
    ea08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea0c:	ldr	r3, [r3, #16]
    ea10:	cmp	r3, #0
    ea14:	bne	ea98 <poolGrow+0xb0>
    ea18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea1c:	ldr	r2, [r3, #4]
    ea20:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea24:	str	r2, [r3]
    ea28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea2c:	ldr	r3, [r3, #4]
    ea30:	ldr	r2, [r3]
    ea34:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea38:	str	r2, [r3, #4]
    ea3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea40:	ldr	r3, [r3]
    ea44:	mov	r2, #0
    ea48:	str	r2, [r3]
    ea4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea50:	ldr	r3, [r3]
    ea54:	add	r2, r3, #8
    ea58:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea5c:	str	r2, [r3, #16]
    ea60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea64:	ldr	r3, [r3, #16]
    ea68:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ea6c:	ldr	r2, [r2]
    ea70:	ldr	r2, [r2, #4]
    ea74:	add	r2, r3, r2
    ea78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea7c:	str	r2, [r3, #8]
    ea80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea84:	ldr	r2, [r3, #16]
    ea88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea8c:	str	r2, [r3, #12]
    ea90:	mov	r3, #1
    ea94:	b	ede4 <poolGrow+0x3fc>
    ea98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ea9c:	ldr	r3, [r3, #8]
    eaa0:	mov	r2, r3
    eaa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eaa8:	ldr	r3, [r3, #16]
    eaac:	sub	r2, r2, r3
    eab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eab4:	ldr	r3, [r3, #4]
    eab8:	ldr	r3, [r3, #4]
    eabc:	cmp	r2, r3
    eac0:	bge	eba4 <poolGrow+0x1bc>
    eac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eac8:	ldr	r3, [r3, #4]
    eacc:	ldr	r3, [r3]
    ead0:	str	r3, [fp, #-12]
    ead4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ead8:	ldr	r3, [r3, #4]
    eadc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    eae0:	ldr	r2, [r2]
    eae4:	str	r2, [r3]
    eae8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eaec:	ldr	r2, [r3, #4]
    eaf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eaf4:	str	r2, [r3]
    eaf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eafc:	ldr	r2, [fp, #-12]
    eb00:	str	r2, [r3, #4]
    eb04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb08:	ldr	r3, [r3]
    eb0c:	add	r0, r3, #8
    eb10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb14:	ldr	r1, [r3, #16]
    eb18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb1c:	ldr	r3, [r3, #8]
    eb20:	mov	r2, r3
    eb24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb28:	ldr	r3, [r3, #16]
    eb2c:	sub	r3, r2, r3
    eb30:	mov	r2, r3
    eb34:	bl	0 <memcpy>
    eb38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb3c:	ldr	r3, [r3]
    eb40:	add	r3, r3, #8
    eb44:	ldr	r2, [fp, #-32]	; 0xffffffe0
    eb48:	ldr	r2, [r2, #12]
    eb4c:	mov	r1, r2
    eb50:	ldr	r2, [fp, #-32]	; 0xffffffe0
    eb54:	ldr	r2, [r2, #16]
    eb58:	sub	r2, r1, r2
    eb5c:	add	r2, r3, r2
    eb60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb64:	str	r2, [r3, #12]
    eb68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb6c:	ldr	r3, [r3]
    eb70:	add	r2, r3, #8
    eb74:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb78:	str	r2, [r3, #16]
    eb7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb80:	ldr	r3, [r3, #16]
    eb84:	ldr	r2, [fp, #-32]	; 0xffffffe0
    eb88:	ldr	r2, [r2]
    eb8c:	ldr	r2, [r2, #4]
    eb90:	add	r2, r3, r2
    eb94:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eb98:	str	r2, [r3, #8]
    eb9c:	mov	r3, #1
    eba0:	b	ede4 <poolGrow+0x3fc>
    eba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eba8:	ldr	r3, [r3]
    ebac:	cmp	r3, #0
    ebb0:	beq	eca8 <poolGrow+0x2c0>
    ebb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ebb8:	ldr	r2, [r3, #16]
    ebbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ebc0:	ldr	r3, [r3]
    ebc4:	add	r3, r3, #8
    ebc8:	cmp	r2, r3
    ebcc:	bne	eca8 <poolGrow+0x2c0>
    ebd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ebd4:	ldr	r3, [r3, #8]
    ebd8:	mov	r2, r3
    ebdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ebe0:	ldr	r3, [r3, #16]
    ebe4:	sub	r3, r2, r3
    ebe8:	lsl	r3, r3, #1
    ebec:	str	r3, [fp, #-16]
    ebf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ebf4:	ldr	r3, [r3, #20]
    ebf8:	ldr	r3, [r3, #4]
    ebfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ec00:	ldr	r0, [r2]
    ec04:	ldr	r2, [fp, #-16]
    ec08:	add	r2, r2, #8
    ec0c:	mov	r1, r2
    ec10:	blx	r3
    ec14:	str	r0, [fp, #-20]	; 0xffffffec
    ec18:	ldr	r3, [fp, #-20]	; 0xffffffec
    ec1c:	cmp	r3, #0
    ec20:	bne	ec2c <poolGrow+0x244>
    ec24:	mov	r3, #0
    ec28:	b	ede4 <poolGrow+0x3fc>
    ec2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec30:	ldr	r2, [fp, #-20]	; 0xffffffec
    ec34:	str	r2, [r3]
    ec38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec3c:	ldr	r3, [r3]
    ec40:	ldr	r2, [fp, #-16]
    ec44:	str	r2, [r3, #4]
    ec48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec4c:	ldr	r3, [r3]
    ec50:	add	r3, r3, #8
    ec54:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ec58:	ldr	r2, [r2, #12]
    ec5c:	mov	r1, r2
    ec60:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ec64:	ldr	r2, [r2, #16]
    ec68:	sub	r2, r1, r2
    ec6c:	add	r2, r3, r2
    ec70:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec74:	str	r2, [r3, #12]
    ec78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec7c:	ldr	r3, [r3]
    ec80:	add	r2, r3, #8
    ec84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec88:	str	r2, [r3, #16]
    ec8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ec90:	ldr	r2, [r3, #16]
    ec94:	ldr	r3, [fp, #-16]
    ec98:	add	r2, r2, r3
    ec9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eca0:	str	r2, [r3, #8]
    eca4:	b	ede0 <poolGrow+0x3f8>
    eca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ecac:	ldr	r3, [r3, #8]
    ecb0:	mov	r2, r3
    ecb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ecb8:	ldr	r3, [r3, #16]
    ecbc:	sub	r3, r2, r3
    ecc0:	str	r3, [fp, #-8]
    ecc4:	ldr	r3, [fp, #-8]
    ecc8:	cmp	r3, #1024	; 0x400
    eccc:	bge	ecdc <poolGrow+0x2f4>
    ecd0:	mov	r3, #1024	; 0x400
    ecd4:	str	r3, [fp, #-8]
    ecd8:	b	ece8 <poolGrow+0x300>
    ecdc:	ldr	r3, [fp, #-8]
    ece0:	lsl	r3, r3, #1
    ece4:	str	r3, [fp, #-8]
    ece8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ecec:	ldr	r3, [r3, #20]
    ecf0:	ldr	r3, [r3]
    ecf4:	ldr	r2, [fp, #-8]
    ecf8:	add	r2, r2, #8
    ecfc:	mov	r0, r2
    ed00:	blx	r3
    ed04:	str	r0, [fp, #-24]	; 0xffffffe8
    ed08:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed0c:	cmp	r3, #0
    ed10:	bne	ed1c <poolGrow+0x334>
    ed14:	mov	r3, #0
    ed18:	b	ede4 <poolGrow+0x3fc>
    ed1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed20:	ldr	r2, [fp, #-8]
    ed24:	str	r2, [r3, #4]
    ed28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed2c:	ldr	r2, [r3]
    ed30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed34:	str	r2, [r3]
    ed38:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ed40:	str	r2, [r3]
    ed44:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed48:	ldr	r2, [r3, #12]
    ed4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed50:	ldr	r3, [r3, #16]
    ed54:	cmp	r2, r3
    ed58:	beq	ed8c <poolGrow+0x3a4>
    ed5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed60:	add	r0, r3, #8
    ed64:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed68:	ldr	r1, [r3, #16]
    ed6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed70:	ldr	r3, [r3, #12]
    ed74:	mov	r2, r3
    ed78:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ed7c:	ldr	r3, [r3, #16]
    ed80:	sub	r3, r2, r3
    ed84:	mov	r2, r3
    ed88:	bl	0 <memcpy>
    ed8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    ed90:	add	r3, r3, #8
    ed94:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ed98:	ldr	r2, [r2, #12]
    ed9c:	mov	r1, r2
    eda0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    eda4:	ldr	r2, [r2, #16]
    eda8:	sub	r2, r1, r2
    edac:	add	r2, r3, r2
    edb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    edb4:	str	r2, [r3, #12]
    edb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    edbc:	add	r2, r3, #8
    edc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    edc4:	str	r2, [r3, #16]
    edc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    edcc:	add	r2, r3, #8
    edd0:	ldr	r3, [fp, #-8]
    edd4:	add	r2, r2, r3
    edd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    eddc:	str	r2, [r3, #8]
    ede0:	mov	r3, #1
    ede4:	mov	r0, r3
    ede8:	sub	sp, fp, #4
    edec:	pop	{fp, pc}

0000edf0 <nextScaffoldPart>:
    edf0:	push	{r4, fp, lr}
    edf4:	add	fp, sp, #8
    edf8:	sub	sp, sp, #36	; 0x24
    edfc:	str	r0, [fp, #-40]	; 0xffffffd8
    ee00:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ee04:	ldr	r3, [r3, #364]	; 0x16c
    ee08:	str	r3, [fp, #-20]	; 0xffffffec
    ee0c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee10:	ldr	r3, [r3, #184]	; 0xb8
    ee14:	cmp	r3, #0
    ee18:	bne	ee6c <nextScaffoldPart+0x7c>
    ee1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ee20:	ldr	r3, [r3, #12]
    ee24:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ee28:	ldr	r2, [r2, #484]	; 0x1e4
    ee2c:	lsl	r2, r2, #2
    ee30:	mov	r0, r2
    ee34:	blx	r3
    ee38:	mov	r2, r0
    ee3c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee40:	str	r2, [r3, #184]	; 0xb8
    ee44:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee48:	ldr	r3, [r3, #184]	; 0xb8
    ee4c:	cmp	r3, #0
    ee50:	bne	ee5c <nextScaffoldPart+0x6c>
    ee54:	mvn	r3, #0
    ee58:	b	f080 <nextScaffoldPart+0x290>
    ee5c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee60:	ldr	r3, [r3, #184]	; 0xb8
    ee64:	mov	r2, #0
    ee68:	str	r2, [r3]
    ee6c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee70:	ldr	r2, [r3, #176]	; 0xb0
    ee74:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee78:	ldr	r3, [r3, #172]	; 0xac
    ee7c:	cmp	r2, r3
    ee80:	bcc	ef34 <nextScaffoldPart+0x144>
    ee84:	ldr	r3, [fp, #-20]	; 0xffffffec
    ee88:	ldr	r3, [r3, #164]	; 0xa4
    ee8c:	cmp	r3, #0
    ee90:	beq	eef4 <nextScaffoldPart+0x104>
    ee94:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ee98:	ldr	r4, [r3, #16]
    ee9c:	ldr	r3, [fp, #-20]	; 0xffffffec
    eea0:	ldr	r0, [r3, #164]	; 0xa4
    eea4:	ldr	r3, [fp, #-20]	; 0xffffffec
    eea8:	ldr	r2, [r3, #172]	; 0xac
    eeac:	mov	r3, r2
    eeb0:	lsl	r3, r3, #3
    eeb4:	sub	r3, r3, r2
    eeb8:	lsl	r3, r3, #3
    eebc:	mov	r1, r3
    eec0:	blx	r4
    eec4:	str	r0, [fp, #-16]
    eec8:	ldr	r3, [fp, #-16]
    eecc:	cmp	r3, #0
    eed0:	bne	eedc <nextScaffoldPart+0xec>
    eed4:	mvn	r3, #0
    eed8:	b	f080 <nextScaffoldPart+0x290>
    eedc:	ldr	r3, [fp, #-20]	; 0xffffffec
    eee0:	ldr	r3, [r3, #172]	; 0xac
    eee4:	lsl	r2, r3, #1
    eee8:	ldr	r3, [fp, #-20]	; 0xffffffec
    eeec:	str	r2, [r3, #172]	; 0xac
    eef0:	b	ef28 <nextScaffoldPart+0x138>
    eef4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    eef8:	ldr	r3, [r3, #12]
    eefc:	mov	r0, #896	; 0x380
    ef00:	blx	r3
    ef04:	str	r0, [fp, #-16]
    ef08:	ldr	r3, [fp, #-16]
    ef0c:	cmp	r3, #0
    ef10:	bne	ef1c <nextScaffoldPart+0x12c>
    ef14:	mvn	r3, #0
    ef18:	b	f080 <nextScaffoldPart+0x290>
    ef1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef20:	mov	r2, #32
    ef24:	str	r2, [r3, #172]	; 0xac
    ef28:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef2c:	ldr	r2, [fp, #-16]
    ef30:	str	r2, [r3, #164]	; 0xa4
    ef34:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef38:	ldr	r3, [r3, #176]	; 0xb0
    ef3c:	add	r1, r3, #1
    ef40:	ldr	r2, [fp, #-20]	; 0xffffffec
    ef44:	str	r1, [r2, #176]	; 0xb0
    ef48:	str	r3, [fp, #-24]	; 0xffffffe8
    ef4c:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef50:	ldr	r1, [r3, #164]	; 0xa4
    ef54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ef58:	mov	r3, r2
    ef5c:	lsl	r3, r3, #3
    ef60:	sub	r3, r3, r2
    ef64:	lsl	r3, r3, #2
    ef68:	add	r3, r1, r3
    ef6c:	str	r3, [fp, #-28]	; 0xffffffe4
    ef70:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef74:	ldr	r3, [r3, #180]	; 0xb4
    ef78:	cmp	r3, #0
    ef7c:	beq	f040 <nextScaffoldPart+0x250>
    ef80:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef84:	ldr	r2, [r3, #164]	; 0xa4
    ef88:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef8c:	ldr	r1, [r3, #184]	; 0xb8
    ef90:	ldr	r3, [fp, #-20]	; 0xffffffec
    ef94:	ldr	r3, [r3, #180]	; 0xb4
    ef98:	sub	r3, r3, #-1073741823	; 0xc0000001
    ef9c:	lsl	r3, r3, #2
    efa0:	add	r3, r1, r3
    efa4:	ldr	r3, [r3]
    efa8:	mov	r1, r3
    efac:	mov	r3, r1
    efb0:	lsl	r3, r3, #3
    efb4:	sub	r3, r3, r1
    efb8:	lsl	r3, r3, #2
    efbc:	add	r3, r2, r3
    efc0:	str	r3, [fp, #-32]	; 0xffffffe0
    efc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    efc8:	ldr	r3, [r3, #16]
    efcc:	cmp	r3, #0
    efd0:	beq	f004 <nextScaffoldPart+0x214>
    efd4:	ldr	r3, [fp, #-20]	; 0xffffffec
    efd8:	ldr	r2, [r3, #164]	; 0xa4
    efdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    efe0:	ldr	r3, [r3, #16]
    efe4:	mov	r1, r3
    efe8:	mov	r3, r1
    efec:	lsl	r3, r3, #3
    eff0:	sub	r3, r3, r1
    eff4:	lsl	r3, r3, #2
    eff8:	add	r3, r2, r3
    effc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f000:	str	r2, [r3, #24]
    f004:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f008:	ldr	r3, [r3, #20]
    f00c:	cmp	r3, #0
    f010:	bne	f020 <nextScaffoldPart+0x230>
    f014:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f018:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f01c:	str	r2, [r3, #12]
    f020:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f024:	ldr	r2, [fp, #-24]	; 0xffffffe8
    f028:	str	r2, [r3, #16]
    f02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f030:	ldr	r3, [r3, #20]
    f034:	add	r2, r3, #1
    f038:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f03c:	str	r2, [r3, #20]
    f040:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f044:	mov	r2, #0
    f048:	str	r2, [r3, #24]
    f04c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f050:	ldr	r2, [r3, #24]
    f054:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f058:	str	r2, [r3, #20]
    f05c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f060:	ldr	r2, [r3, #20]
    f064:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f068:	str	r2, [r3, #16]
    f06c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f070:	ldr	r2, [r3, #16]
    f074:	ldr	r3, [fp, #-28]	; 0xffffffe4
    f078:	str	r2, [r3, #12]
    f07c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f080:	mov	r0, r3
    f084:	sub	sp, fp, #8
    f088:	pop	{r4, fp, pc}

0000f08c <build_node>:
    f08c:	push	{fp, lr}
    f090:	add	fp, sp, #4
    f094:	sub	sp, sp, #40	; 0x28
    f098:	str	r0, [fp, #-24]	; 0xffffffe8
    f09c:	str	r1, [fp, #-28]	; 0xffffffe4
    f0a0:	str	r2, [fp, #-32]	; 0xffffffe0
    f0a4:	str	r3, [fp, #-36]	; 0xffffffdc
    f0a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f0ac:	ldr	r3, [r3, #364]	; 0x16c
    f0b0:	str	r3, [fp, #-20]	; 0xffffffec
    f0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f0b8:	ldr	r1, [r3, #164]	; 0xa4
    f0bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f0c0:	mov	r3, r2
    f0c4:	lsl	r3, r3, #3
    f0c8:	sub	r3, r3, r2
    f0cc:	lsl	r3, r3, #2
    f0d0:	add	r3, r1, r3
    f0d4:	ldr	r2, [r3]
    f0d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f0dc:	str	r2, [r3]
    f0e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    f0e4:	ldr	r1, [r3, #164]	; 0xa4
    f0e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f0ec:	mov	r3, r2
    f0f0:	lsl	r3, r3, #3
    f0f4:	sub	r3, r3, r2
    f0f8:	lsl	r3, r3, #2
    f0fc:	add	r3, r1, r3
    f100:	ldr	r2, [r3, #4]
    f104:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f108:	str	r2, [r3, #4]
    f10c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f110:	ldr	r3, [r3]
    f114:	cmp	r3, #4
    f118:	bne	f1b4 <build_node+0x128>
    f11c:	ldr	r3, [fp, #4]
    f120:	ldr	r2, [r3]
    f124:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f128:	str	r2, [r3, #8]
    f12c:	ldr	r3, [fp, #-20]	; 0xffffffec
    f130:	ldr	r1, [r3, #164]	; 0xa4
    f134:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f138:	mov	r3, r2
    f13c:	lsl	r3, r3, #3
    f140:	sub	r3, r3, r2
    f144:	lsl	r3, r3, #2
    f148:	add	r3, r1, r3
    f14c:	ldr	r3, [r3, #8]
    f150:	str	r3, [fp, #-8]
    f154:	ldr	r3, [fp, #4]
    f158:	ldr	r3, [r3]
    f15c:	add	r1, r3, #1
    f160:	ldr	r2, [fp, #4]
    f164:	str	r1, [r2]
    f168:	ldr	r2, [fp, #-8]
    f16c:	ldrb	r2, [r2]
    f170:	strb	r2, [r3]
    f174:	ldr	r3, [fp, #-8]
    f178:	ldrb	r3, [r3]
    f17c:	cmp	r3, #0
    f180:	beq	f194 <build_node+0x108>
    f184:	ldr	r3, [fp, #-8]
    f188:	add	r3, r3, #1
    f18c:	str	r3, [fp, #-8]
    f190:	b	f154 <build_node+0xc8>
    f194:	nop			; (mov r0, r0)
    f198:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f19c:	mov	r2, #0
    f1a0:	str	r2, [r3, #12]
    f1a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1a8:	mov	r2, #0
    f1ac:	str	r2, [r3, #16]
    f1b0:	b	f2e0 <build_node+0x254>
    f1b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    f1b8:	ldr	r1, [r3, #164]	; 0xa4
    f1bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f1c0:	mov	r3, r2
    f1c4:	lsl	r3, r3, #3
    f1c8:	sub	r3, r3, r2
    f1cc:	lsl	r3, r3, #2
    f1d0:	add	r3, r1, r3
    f1d4:	ldr	r3, [r3, #20]
    f1d8:	mov	r2, r3
    f1dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1e0:	str	r2, [r3, #12]
    f1e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f1e8:	ldr	r2, [r3]
    f1ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f1f0:	str	r2, [r3, #16]
    f1f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f1f8:	ldr	r1, [r3]
    f1fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f200:	ldr	r2, [r3, #12]
    f204:	mov	r3, r2
    f208:	lsl	r3, r3, #2
    f20c:	add	r3, r3, r2
    f210:	lsl	r3, r3, #2
    f214:	add	r2, r1, r3
    f218:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f21c:	str	r2, [r3]
    f220:	mov	r3, #0
    f224:	str	r3, [fp, #-12]
    f228:	ldr	r3, [fp, #-20]	; 0xffffffec
    f22c:	ldr	r1, [r3, #164]	; 0xa4
    f230:	ldr	r2, [fp, #-28]	; 0xffffffe4
    f234:	mov	r3, r2
    f238:	lsl	r3, r3, #3
    f23c:	sub	r3, r3, r2
    f240:	lsl	r3, r3, #2
    f244:	add	r3, r1, r3
    f248:	ldr	r3, [r3, #12]
    f24c:	str	r3, [fp, #-16]
    f250:	b	f2c0 <build_node+0x234>
    f254:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f258:	ldr	r1, [r3, #16]
    f25c:	ldr	r2, [fp, #-12]
    f260:	mov	r3, r2
    f264:	lsl	r3, r3, #2
    f268:	add	r3, r3, r2
    f26c:	lsl	r3, r3, #2
    f270:	add	r2, r1, r3
    f274:	ldr	r3, [fp, #4]
    f278:	str	r3, [sp]
    f27c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f280:	ldr	r1, [fp, #-16]
    f284:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f288:	bl	f08c <build_node>
    f28c:	ldr	r3, [fp, #-12]
    f290:	add	r3, r3, #1
    f294:	str	r3, [fp, #-12]
    f298:	ldr	r3, [fp, #-20]	; 0xffffffec
    f29c:	ldr	r1, [r3, #164]	; 0xa4
    f2a0:	ldr	r2, [fp, #-16]
    f2a4:	mov	r3, r2
    f2a8:	lsl	r3, r3, #3
    f2ac:	sub	r3, r3, r2
    f2b0:	lsl	r3, r3, #2
    f2b4:	add	r3, r1, r3
    f2b8:	ldr	r3, [r3, #24]
    f2bc:	str	r3, [fp, #-16]
    f2c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f2c4:	ldr	r2, [r3, #12]
    f2c8:	ldr	r3, [fp, #-12]
    f2cc:	cmp	r2, r3
    f2d0:	bhi	f254 <build_node+0x1c8>
    f2d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f2d8:	mov	r2, #0
    f2dc:	str	r2, [r3, #8]
    f2e0:	nop			; (mov r0, r0)
    f2e4:	sub	sp, fp, #4
    f2e8:	pop	{fp, pc}

0000f2ec <build_model>:
    f2ec:	push	{fp, lr}
    f2f0:	add	fp, sp, #4
    f2f4:	sub	sp, sp, #40	; 0x28
    f2f8:	str	r0, [fp, #-32]	; 0xffffffe0
    f2fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f300:	ldr	r3, [r3, #364]	; 0x16c
    f304:	str	r3, [fp, #-8]
    f308:	ldr	r3, [fp, #-8]
    f30c:	ldr	r2, [r3, #176]	; 0xb0
    f310:	mov	r3, r2
    f314:	lsl	r3, r3, #2
    f318:	add	r3, r3, r2
    f31c:	lsl	r3, r3, #2
    f320:	mov	r2, r3
    f324:	ldr	r3, [fp, #-8]
    f328:	ldr	r3, [r3, #168]	; 0xa8
    f32c:	add	r3, r2, r3
    f330:	str	r3, [fp, #-12]
    f334:	ldr	r3, [fp, #-32]	; 0xffffffe0
    f338:	ldr	r3, [r3, #12]
    f33c:	ldr	r2, [fp, #-12]
    f340:	mov	r0, r2
    f344:	blx	r3
    f348:	str	r0, [fp, #-16]
    f34c:	ldr	r3, [fp, #-16]
    f350:	cmp	r3, #0
    f354:	bne	f360 <build_model+0x74>
    f358:	mov	r3, #0
    f35c:	b	f3b8 <build_model+0xcc>
    f360:	ldr	r3, [fp, #-8]
    f364:	ldr	r2, [r3, #176]	; 0xb0
    f368:	mov	r3, r2
    f36c:	lsl	r3, r3, #2
    f370:	add	r3, r3, r2
    f374:	lsl	r3, r3, #2
    f378:	mov	r2, r3
    f37c:	ldr	r3, [fp, #-16]
    f380:	add	r3, r3, r2
    f384:	str	r3, [fp, #-24]	; 0xffffffe8
    f388:	ldr	r3, [fp, #-16]
    f38c:	add	r3, r3, #20
    f390:	str	r3, [fp, #-20]	; 0xffffffec
    f394:	sub	r2, fp, #20
    f398:	sub	r3, fp, #24
    f39c:	str	r3, [sp]
    f3a0:	mov	r3, r2
    f3a4:	ldr	r2, [fp, #-16]
    f3a8:	mov	r1, #0
    f3ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
    f3b0:	bl	f08c <build_node>
    f3b4:	ldr	r3, [fp, #-16]
    f3b8:	mov	r0, r3
    f3bc:	sub	sp, fp, #4
    f3c0:	pop	{fp, pc}

0000f3c4 <getElementType>:
    f3c4:	push	{fp, lr}
    f3c8:	add	fp, sp, #4
    f3cc:	sub	sp, sp, #32
    f3d0:	str	r0, [fp, #-24]	; 0xffffffe8
    f3d4:	str	r1, [fp, #-28]	; 0xffffffe4
    f3d8:	str	r2, [fp, #-32]	; 0xffffffe0
    f3dc:	str	r3, [fp, #-36]	; 0xffffffdc
    f3e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    f3e4:	ldr	r3, [r3, #364]	; 0x16c
    f3e8:	str	r3, [fp, #-8]
    f3ec:	ldr	r3, [fp, #-8]
    f3f0:	add	r0, r3, #80	; 0x50
    f3f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f3f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    f3fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    f400:	bl	e940 <poolStoreString>
    f404:	str	r0, [fp, #-12]
    f408:	ldr	r3, [fp, #-12]
    f40c:	cmp	r3, #0
    f410:	bne	f41c <getElementType+0x58>
    f414:	mov	r3, #0
    f418:	b	f4a8 <getElementType+0xe4>
    f41c:	ldr	r3, [fp, #-8]
    f420:	add	r1, r3, #20
    f424:	mov	r3, #24
    f428:	ldr	r2, [fp, #-12]
    f42c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f430:	bl	dbf4 <lookup>
    f434:	str	r0, [fp, #-16]
    f438:	ldr	r3, [fp, #-16]
    f43c:	cmp	r3, #0
    f440:	bne	f44c <getElementType+0x88>
    f444:	mov	r3, #0
    f448:	b	f4a8 <getElementType+0xe4>
    f44c:	ldr	r3, [fp, #-16]
    f450:	ldr	r2, [r3]
    f454:	ldr	r3, [fp, #-12]
    f458:	cmp	r2, r3
    f45c:	beq	f474 <getElementType+0xb0>
    f460:	ldr	r3, [fp, #-8]
    f464:	ldr	r2, [r3, #96]	; 0x60
    f468:	ldr	r3, [fp, #-8]
    f46c:	str	r2, [r3, #92]	; 0x5c
    f470:	b	f4a4 <getElementType+0xe0>
    f474:	ldr	r3, [fp, #-8]
    f478:	ldr	r2, [r3, #92]	; 0x5c
    f47c:	ldr	r3, [fp, #-8]
    f480:	str	r2, [r3, #96]	; 0x60
    f484:	ldr	r1, [fp, #-16]
    f488:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f48c:	bl	bb90 <setElementTypePrefix>
    f490:	mov	r3, r0
    f494:	cmp	r3, #0
    f498:	bne	f4a4 <getElementType+0xe0>
    f49c:	mov	r3, #0
    f4a0:	b	f4a8 <getElementType+0xe4>
    f4a4:	ldr	r3, [fp, #-16]
    f4a8:	mov	r0, r3
    f4ac:	sub	sp, fp, #4
    f4b0:	pop	{fp, pc}
