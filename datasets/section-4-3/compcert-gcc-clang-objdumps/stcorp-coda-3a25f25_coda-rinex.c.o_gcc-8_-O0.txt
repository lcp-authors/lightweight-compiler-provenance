
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-rinex.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <satellite_info_cleanup>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #16
      10:	str	r0, [fp, #-16]
      14:	ldr	r3, [fp, #-16]
      18:	ldr	r3, [r3, #4]
      1c:	cmp	r3, #0
      20:	beq	a0 <satellite_info_cleanup+0xa0>
      24:	mov	r3, #0
      28:	str	r3, [fp, #-8]
      2c:	b	7c <satellite_info_cleanup+0x7c>
      30:	ldr	r3, [fp, #-16]
      34:	ldr	r2, [r3, #4]
      38:	ldr	r3, [fp, #-8]
      3c:	lsl	r3, r3, #2
      40:	add	r3, r2, r3
      44:	ldr	r3, [r3]
      48:	cmp	r3, #0
      4c:	beq	70 <satellite_info_cleanup+0x70>
      50:	ldr	r3, [fp, #-16]
      54:	ldr	r2, [r3, #4]
      58:	ldr	r3, [fp, #-8]
      5c:	lsl	r3, r3, #2
      60:	add	r3, r2, r3
      64:	ldr	r3, [r3]
      68:	mov	r0, r3
      6c:	bl	0 <free>
      70:	ldr	r3, [fp, #-8]
      74:	add	r3, r3, #1
      78:	str	r3, [fp, #-8]
      7c:	ldr	r3, [fp, #-16]
      80:	ldr	r3, [r3]
      84:	ldr	r2, [fp, #-8]
      88:	cmp	r2, r3
      8c:	blt	30 <satellite_info_cleanup+0x30>
      90:	ldr	r3, [fp, #-16]
      94:	ldr	r3, [r3, #4]
      98:	mov	r0, r3
      9c:	bl	0 <free>
      a0:	ldr	r3, [fp, #-16]
      a4:	ldr	r3, [r3, #8]
      a8:	cmp	r3, #0
      ac:	beq	c0 <satellite_info_cleanup+0xc0>
      b0:	ldr	r3, [fp, #-16]
      b4:	ldr	r3, [r3, #8]
      b8:	mov	r0, r3
      bc:	bl	0 <coda_type_release>
      c0:	ldr	r3, [fp, #-16]
      c4:	ldr	r3, [r3, #12]
      c8:	cmp	r3, #0
      cc:	beq	e0 <satellite_info_cleanup+0xe0>
      d0:	ldr	r3, [fp, #-16]
      d4:	ldr	r3, [r3, #12]
      d8:	mov	r0, r3
      dc:	bl	0 <coda_type_release>
      e0:	ldr	r3, [fp, #-16]
      e4:	ldr	r3, [r3, #16]
      e8:	cmp	r3, #0
      ec:	beq	100 <satellite_info_cleanup+0x100>
      f0:	ldr	r3, [fp, #-16]
      f4:	ldr	r3, [r3, #16]
      f8:	mov	r0, r3
      fc:	bl	0 <coda_dynamic_type_delete>
     100:	ldr	r3, [fp, #-16]
     104:	ldr	r3, [r3, #20]
     108:	cmp	r3, #0
     10c:	beq	120 <satellite_info_cleanup+0x120>
     110:	ldr	r3, [fp, #-16]
     114:	ldr	r3, [r3, #20]
     118:	mov	r0, r3
     11c:	bl	0 <coda_dynamic_type_delete>
     120:	nop	{0}
     124:	sub	sp, fp, #4
     128:	ldr	fp, [sp]
     12c:	add	sp, sp, #4
     130:	pop	{pc}		; (ldr pc, [sp], #4)

00000134 <ingest_info_cleanup>:
     134:	str	fp, [sp, #-8]!
     138:	str	lr, [sp, #4]
     13c:	add	fp, sp, #4
     140:	sub	sp, sp, #8
     144:	str	r0, [fp, #-8]
     148:	ldr	r3, [fp, #-8]
     14c:	ldr	r3, [r3]
     150:	cmp	r3, #0
     154:	beq	168 <ingest_info_cleanup+0x34>
     158:	ldr	r3, [fp, #-8]
     15c:	ldr	r3, [r3]
     160:	mov	r0, r3
     164:	bl	0 <fclose>
     168:	ldr	r3, [fp, #-8]
     16c:	ldr	r3, [r3, #8]
     170:	cmp	r3, #0
     174:	beq	188 <ingest_info_cleanup+0x54>
     178:	ldr	r3, [fp, #-8]
     17c:	ldr	r3, [r3, #8]
     180:	mov	r0, r3
     184:	bl	0 <coda_dynamic_type_delete>
     188:	ldr	r3, [fp, #-8]
     18c:	add	r3, r3, #12
     190:	mov	r0, r3
     194:	bl	0 <satellite_info_cleanup>
     198:	ldr	r3, [fp, #-8]
     19c:	add	r3, r3, #36	; 0x24
     1a0:	mov	r0, r3
     1a4:	bl	0 <satellite_info_cleanup>
     1a8:	ldr	r3, [fp, #-8]
     1ac:	add	r3, r3, #60	; 0x3c
     1b0:	mov	r0, r3
     1b4:	bl	0 <satellite_info_cleanup>
     1b8:	ldr	r3, [fp, #-8]
     1bc:	add	r3, r3, #84	; 0x54
     1c0:	mov	r0, r3
     1c4:	bl	0 <satellite_info_cleanup>
     1c8:	ldr	r3, [fp, #-8]
     1cc:	ldr	r3, [r3, #132]	; 0x84
     1d0:	cmp	r3, #0
     1d4:	beq	1e8 <ingest_info_cleanup+0xb4>
     1d8:	ldr	r3, [fp, #-8]
     1dc:	ldr	r3, [r3, #132]	; 0x84
     1e0:	mov	r0, r3
     1e4:	bl	0 <coda_type_release>
     1e8:	ldr	r3, [fp, #-8]
     1ec:	ldr	r3, [r3, #140]	; 0x8c
     1f0:	cmp	r3, #0
     1f4:	beq	208 <ingest_info_cleanup+0xd4>
     1f8:	ldr	r3, [fp, #-8]
     1fc:	ldr	r3, [r3, #140]	; 0x8c
     200:	mov	r0, r3
     204:	bl	0 <coda_dynamic_type_delete>
     208:	ldr	r3, [fp, #-8]
     20c:	ldr	r3, [r3, #144]	; 0x90
     210:	cmp	r3, #0
     214:	beq	228 <ingest_info_cleanup+0xf4>
     218:	ldr	r3, [fp, #-8]
     21c:	ldr	r3, [r3, #144]	; 0x90
     220:	mov	r0, r3
     224:	bl	0 <coda_dynamic_type_delete>
     228:	ldr	r3, [fp, #-8]
     22c:	ldr	r3, [r3, #136]	; 0x88
     230:	cmp	r3, #0
     234:	beq	248 <ingest_info_cleanup+0x114>
     238:	ldr	r3, [fp, #-8]
     23c:	ldr	r3, [r3, #136]	; 0x88
     240:	mov	r0, r3
     244:	bl	0 <coda_dynamic_type_delete>
     248:	ldr	r3, [fp, #-8]
     24c:	ldr	r3, [r3, #148]	; 0x94
     250:	cmp	r3, #0
     254:	beq	268 <ingest_info_cleanup+0x134>
     258:	ldr	r3, [fp, #-8]
     25c:	ldr	r3, [r3, #148]	; 0x94
     260:	mov	r0, r3
     264:	bl	0 <coda_dynamic_type_delete>
     268:	ldr	r3, [fp, #-8]
     26c:	ldr	r3, [r3, #152]	; 0x98
     270:	cmp	r3, #0
     274:	beq	288 <ingest_info_cleanup+0x154>
     278:	ldr	r3, [fp, #-8]
     27c:	ldr	r3, [r3, #152]	; 0x98
     280:	mov	r0, r3
     284:	bl	0 <coda_dynamic_type_delete>
     288:	nop	{0}
     28c:	sub	sp, fp, #4
     290:	ldr	fp, [sp]
     294:	add	sp, sp, #4
     298:	pop	{pc}		; (ldr pc, [sp], #4)

0000029c <satellite_info_init>:
     29c:	push	{fp}		; (str fp, [sp, #-4]!)
     2a0:	add	fp, sp, #0
     2a4:	sub	sp, sp, #12
     2a8:	str	r0, [fp, #-8]
     2ac:	ldr	r3, [fp, #-8]
     2b0:	mov	r2, #0
     2b4:	str	r2, [r3]
     2b8:	ldr	r3, [fp, #-8]
     2bc:	mov	r2, #0
     2c0:	str	r2, [r3, #4]
     2c4:	ldr	r3, [fp, #-8]
     2c8:	mov	r2, #0
     2cc:	str	r2, [r3, #8]
     2d0:	ldr	r3, [fp, #-8]
     2d4:	mov	r2, #0
     2d8:	str	r2, [r3, #12]
     2dc:	ldr	r3, [fp, #-8]
     2e0:	mov	r2, #0
     2e4:	str	r2, [r3, #16]
     2e8:	ldr	r3, [fp, #-8]
     2ec:	mov	r2, #0
     2f0:	str	r2, [r3, #20]
     2f4:	nop	{0}
     2f8:	add	sp, fp, #0
     2fc:	pop	{fp}		; (ldr fp, [sp], #4)
     300:	bx	lr

00000304 <ingest_info_init>:
     304:	str	fp, [sp, #-8]!
     308:	str	lr, [sp, #4]
     30c:	add	fp, sp, #4
     310:	sub	sp, sp, #8
     314:	str	r0, [fp, #-8]
     318:	ldr	r3, [fp, #-8]
     31c:	mov	r2, #0
     320:	str	r2, [r3]
     324:	ldr	r3, [fp, #-8]
     328:	mov	r2, #0
     32c:	str	r2, [r3, #8]
     330:	ldr	r3, [fp, #-8]
     334:	add	r3, r3, #12
     338:	mov	r0, r3
     33c:	bl	29c <satellite_info_init>
     340:	ldr	r3, [fp, #-8]
     344:	add	r3, r3, #36	; 0x24
     348:	mov	r0, r3
     34c:	bl	29c <satellite_info_init>
     350:	ldr	r3, [fp, #-8]
     354:	add	r3, r3, #60	; 0x3c
     358:	mov	r0, r3
     35c:	bl	29c <satellite_info_init>
     360:	ldr	r3, [fp, #-8]
     364:	add	r3, r3, #84	; 0x54
     368:	mov	r0, r3
     36c:	bl	29c <satellite_info_init>
     370:	ldr	r1, [fp, #-8]
     374:	mov	r2, #0
     378:	mov	r3, #0
     37c:	strd	r2, [r1, #112]	; 0x70
     380:	ldr	r3, [fp, #-8]
     384:	mov	r2, #32
     388:	strb	r2, [r3, #120]	; 0x78
     38c:	ldr	r3, [fp, #-8]
     390:	mov	r2, #32
     394:	strb	r2, [r3, #121]	; 0x79
     398:	ldr	r3, [fp, #-8]
     39c:	mov	r2, #0
     3a0:	str	r2, [r3, #124]	; 0x7c
     3a4:	ldr	r3, [fp, #-8]
     3a8:	mov	r2, #0
     3ac:	str	r2, [r3, #128]	; 0x80
     3b0:	ldr	r3, [fp, #-8]
     3b4:	mov	r2, #0
     3b8:	str	r2, [r3, #132]	; 0x84
     3bc:	ldr	r3, [fp, #-8]
     3c0:	mov	r2, #0
     3c4:	str	r2, [r3, #140]	; 0x8c
     3c8:	ldr	r3, [fp, #-8]
     3cc:	mov	r2, #0
     3d0:	str	r2, [r3, #144]	; 0x90
     3d4:	ldr	r3, [fp, #-8]
     3d8:	mov	r2, #0
     3dc:	str	r2, [r3, #136]	; 0x88
     3e0:	ldr	r3, [fp, #-8]
     3e4:	mov	r2, #0
     3e8:	str	r2, [r3, #148]	; 0x94
     3ec:	ldr	r3, [fp, #-8]
     3f0:	mov	r2, #0
     3f4:	str	r2, [r3, #152]	; 0x98
     3f8:	nop	{0}
     3fc:	sub	sp, fp, #4
     400:	ldr	fp, [sp]
     404:	add	sp, sp, #4
     408:	pop	{pc}		; (ldr pc, [sp], #4)

0000040c <rinex_init>:
     40c:	str	r4, [sp, #-12]!
     410:	str	fp, [sp, #4]
     414:	str	lr, [sp, #8]
     418:	add	fp, sp, #8
     41c:	sub	sp, sp, #28
     420:	mrc	15, 0, r3, cr13, cr0, {3}
     424:	ldr	r2, [pc, #128]	; 4ac <rinex_init+0xa0>
     428:	ldr	r3, [r3, r2]
     42c:	cmp	r3, #0
     430:	beq	43c <rinex_init+0x30>
     434:	mov	r3, #0
     438:	b	85ac <rinex_init+0x81a0>
     43c:	mov	r3, #1
     440:	str	r3, [fp, #-20]	; 0xffffffec
     444:	mov	r0, #576	; 0x240
     448:	bl	0 <malloc>
     44c:	mov	r3, r0
     450:	mov	r1, r3
     454:	mrc	15, 0, r3, cr13, cr0, {3}
     458:	ldr	r2, [pc, #76]	; 4ac <rinex_init+0xa0>
     45c:	str	r1, [r3, r2]
     460:	mrc	15, 0, r3, cr13, cr0, {3}
     464:	ldr	r2, [pc, #64]	; 4ac <rinex_init+0xa0>
     468:	ldr	r3, [r3, r2]
     46c:	cmp	r3, #0
     470:	bne	4a0 <rinex_init+0x94>
     474:	mov	r3, #372	; 0x174
     478:	str	r3, [sp]
     47c:	movw	r3, #0
     480:	movt	r3, #0
     484:	mov	r2, #576	; 0x240
     488:	movw	r1, #0
     48c:	movt	r1, #0
     490:	mvn	r0, #0
     494:	bl	0 <coda_set_error>
     498:	mvn	r3, #0
     49c:	b	85ac <rinex_init+0x81a0>
     4a0:	mov	r3, #0
     4a4:	str	r3, [fp, #-16]
     4a8:	b	4dc <rinex_init+0xd0>
     4ac:	.word	0x00000000
     4b0:	mrc	15, 0, r3, cr13, cr0, {3}
     4b4:	ldr	r2, [pc, #-16]	; 4ac <rinex_init+0xa0>
     4b8:	ldr	r2, [r3, r2]
     4bc:	ldr	r3, [fp, #-16]
     4c0:	lsl	r3, r3, #2
     4c4:	add	r3, r2, r3
     4c8:	mov	r2, #0
     4cc:	str	r2, [r3]
     4d0:	ldr	r3, [fp, #-16]
     4d4:	add	r3, r3, #1
     4d8:	str	r3, [fp, #-16]
     4dc:	ldr	r3, [fp, #-16]
     4e0:	cmp	r3, #143	; 0x8f
     4e4:	ble	4b0 <rinex_init+0xa4>
     4e8:	mrc	15, 0, r3, cr13, cr0, {3}
     4ec:	ldr	r2, [pc, #-72]	; 4ac <rinex_init+0xa0>
     4f0:	ldr	r4, [r3, r2]
     4f4:	mov	r1, #3
     4f8:	mov	r0, #8
     4fc:	bl	0 <coda_type_number_new>
     500:	mov	r3, r0
     504:	str	r3, [r4]
     508:	mrc	15, 0, r3, cr13, cr0, {3}
     50c:	ldr	r2, [pc, #-104]	; 4ac <rinex_init+0xa0>
     510:	ldr	r3, [r3, r2]
     514:	ldr	r3, [r3]
     518:	ldr	r1, [fp, #-20]	; 0xffffffec
     51c:	mov	r0, r3
     520:	bl	0 <coda_type_number_set_endianness>
     524:	mrc	15, 0, r3, cr13, cr0, {3}
     528:	ldr	r2, [pc, #-132]	; 4ac <rinex_init+0xa0>
     52c:	ldr	r3, [r3, r2]
     530:	ldr	r3, [r3]
     534:	mov	r1, #8
     538:	mov	r0, r3
     53c:	bl	0 <coda_type_set_read_type>
     540:	mrc	15, 0, r3, cr13, cr0, {3}
     544:	ldr	r2, [pc, #-160]	; 4ac <rinex_init+0xa0>
     548:	ldr	r3, [r3, r2]
     54c:	ldr	r1, [r3]
     550:	mov	r2, #32
     554:	mov	r3, #0
     558:	mov	r0, r1
     55c:	bl	0 <coda_type_set_bit_size>
     560:	mrc	15, 0, r3, cr13, cr0, {3}
     564:	ldr	r2, [pc, #-192]	; 4ac <rinex_init+0xa0>
     568:	ldr	r3, [r3, r2]
     56c:	ldr	r3, [r3]
     570:	movw	r1, #0
     574:	movt	r1, #0
     578:	mov	r0, r3
     57c:	bl	0 <coda_type_set_description>
     580:	mrc	15, 0, r3, cr13, cr0, {3}
     584:	ldr	r2, [pc, #-224]	; 4ac <rinex_init+0xa0>
     588:	ldr	r3, [r3, r2]
     58c:	add	r4, r3, #4
     590:	mov	r0, #8
     594:	bl	0 <coda_type_text_new>
     598:	mov	r3, r0
     59c:	str	r3, [r4]
     5a0:	mrc	15, 0, r3, cr13, cr0, {3}
     5a4:	ldr	r2, [pc, #-256]	; 4ac <rinex_init+0xa0>
     5a8:	ldr	r3, [r3, r2]
     5ac:	add	r3, r3, #4
     5b0:	ldr	r1, [r3]
     5b4:	mov	r2, #1
     5b8:	mov	r3, #0
     5bc:	mov	r0, r1
     5c0:	bl	0 <coda_type_set_byte_size>
     5c4:	mrc	15, 0, r3, cr13, cr0, {3}
     5c8:	ldr	r2, [pc, #-292]	; 4ac <rinex_init+0xa0>
     5cc:	ldr	r3, [r3, r2]
     5d0:	add	r3, r3, #4
     5d4:	ldr	r3, [r3]
     5d8:	mov	r1, #10
     5dc:	mov	r0, r3
     5e0:	bl	0 <coda_type_set_read_type>
     5e4:	mrc	15, 0, r3, cr13, cr0, {3}
     5e8:	ldr	r2, [pc, #-324]	; 4ac <rinex_init+0xa0>
     5ec:	ldr	r3, [r3, r2]
     5f0:	add	r3, r3, #4
     5f4:	ldr	r3, [r3]
     5f8:	movw	r1, #0
     5fc:	movt	r1, #0
     600:	mov	r0, r3
     604:	bl	0 <coda_type_set_description>
     608:	mrc	15, 0, r3, cr13, cr0, {3}
     60c:	ldr	r2, [pc, #-360]	; 4ac <rinex_init+0xa0>
     610:	ldr	r3, [r3, r2]
     614:	add	r4, r3, #8
     618:	mov	r0, #8
     61c:	bl	0 <coda_type_text_new>
     620:	mov	r3, r0
     624:	str	r3, [r4]
     628:	mrc	15, 0, r3, cr13, cr0, {3}
     62c:	ldr	r2, [pc, #-392]	; 4ac <rinex_init+0xa0>
     630:	ldr	r3, [r3, r2]
     634:	add	r3, r3, #8
     638:	ldr	r1, [r3]
     63c:	mov	r2, #1
     640:	mov	r3, #0
     644:	mov	r0, r1
     648:	bl	0 <coda_type_set_byte_size>
     64c:	mrc	15, 0, r3, cr13, cr0, {3}
     650:	ldr	r2, [pc, #-428]	; 4ac <rinex_init+0xa0>
     654:	ldr	r3, [r3, r2]
     658:	add	r3, r3, #8
     65c:	ldr	r3, [r3]
     660:	mov	r1, #10
     664:	mov	r0, r3
     668:	bl	0 <coda_type_set_read_type>
     66c:	mrc	15, 0, r3, cr13, cr0, {3}
     670:	ldr	r2, [pc, #-460]	; 4ac <rinex_init+0xa0>
     674:	ldr	r3, [r3, r2]
     678:	add	r3, r3, #8
     67c:	ldr	r3, [r3]
     680:	movw	r1, #0
     684:	movt	r1, #0
     688:	mov	r0, r3
     68c:	bl	0 <coda_type_set_description>
     690:	mrc	15, 0, r3, cr13, cr0, {3}
     694:	ldr	r2, [pc, #-496]	; 4ac <rinex_init+0xa0>
     698:	ldr	r3, [r3, r2]
     69c:	add	r4, r3, #12
     6a0:	mov	r0, #8
     6a4:	bl	0 <coda_type_text_new>
     6a8:	mov	r3, r0
     6ac:	str	r3, [r4]
     6b0:	mrc	15, 0, r3, cr13, cr0, {3}
     6b4:	ldr	r2, [pc, #-528]	; 4ac <rinex_init+0xa0>
     6b8:	ldr	r3, [r3, r2]
     6bc:	add	r3, r3, #12
     6c0:	ldr	r3, [r3]
     6c4:	movw	r1, #0
     6c8:	movt	r1, #0
     6cc:	mov	r0, r3
     6d0:	bl	0 <coda_type_set_description>
     6d4:	mrc	15, 0, r3, cr13, cr0, {3}
     6d8:	ldr	r2, [pc, #-564]	; 4ac <rinex_init+0xa0>
     6dc:	ldr	r3, [r3, r2]
     6e0:	add	r4, r3, #16
     6e4:	mov	r0, #8
     6e8:	bl	0 <coda_type_text_new>
     6ec:	mov	r3, r0
     6f0:	str	r3, [r4]
     6f4:	mrc	15, 0, r3, cr13, cr0, {3}
     6f8:	ldr	r2, [pc, #-596]	; 4ac <rinex_init+0xa0>
     6fc:	ldr	r3, [r3, r2]
     700:	add	r3, r3, #16
     704:	ldr	r3, [r3]
     708:	movw	r1, #0
     70c:	movt	r1, #0
     710:	mov	r0, r3
     714:	bl	0 <coda_type_set_description>
     718:	mrc	15, 0, r3, cr13, cr0, {3}
     71c:	ldr	r2, [pc, #-632]	; 4ac <rinex_init+0xa0>
     720:	ldr	r3, [r3, r2]
     724:	add	r4, r3, #24
     728:	mov	r0, #8
     72c:	bl	0 <coda_type_text_new>
     730:	mov	r3, r0
     734:	str	r3, [r4]
     738:	mov	r3, #0
     73c:	str	r3, [fp, #-28]	; 0xffffffe4
     740:	sub	r3, fp, #28
     744:	mov	r1, r3
     748:	movw	r0, #0
     74c:	movt	r0, #0
     750:	bl	0 <coda_expression_from_string>
     754:	ldr	r1, [fp, #-28]	; 0xffffffe4
     758:	mrc	15, 0, r3, cr13, cr0, {3}
     75c:	ldr	r2, [pc, #-696]	; 4ac <rinex_init+0xa0>
     760:	ldr	r3, [r3, r2]
     764:	add	r4, r3, #20
     768:	mov	r0, #8
     76c:	bl	0 <coda_type_time_new>
     770:	mov	r3, r0
     774:	str	r3, [r4]
     778:	mrc	15, 0, r3, cr13, cr0, {3}
     77c:	ldr	r2, [pc, #-728]	; 4ac <rinex_init+0xa0>
     780:	ldr	r3, [r3, r2]
     784:	add	r3, r3, #20
     788:	ldr	r0, [r3]
     78c:	mrc	15, 0, r3, cr13, cr0, {3}
     790:	ldr	r2, [pc, #-748]	; 4ac <rinex_init+0xa0>
     794:	ldr	r3, [r3, r2]
     798:	add	r3, r3, #24
     79c:	ldr	r3, [r3]
     7a0:	mov	r1, r3
     7a4:	bl	0 <coda_type_time_set_base_type>
     7a8:	mrc	15, 0, r3, cr13, cr0, {3}
     7ac:	ldr	r2, [pc, #-776]	; 4ac <rinex_init+0xa0>
     7b0:	ldr	r3, [r3, r2]
     7b4:	add	r3, r3, #20
     7b8:	ldr	r3, [r3]
     7bc:	movw	r1, #0
     7c0:	movt	r1, #0
     7c4:	mov	r0, r3
     7c8:	bl	0 <coda_type_set_description>
     7cc:	mrc	15, 0, r3, cr13, cr0, {3}
     7d0:	ldr	r2, [pc, #-812]	; 4ac <rinex_init+0xa0>
     7d4:	ldr	r3, [r3, r2]
     7d8:	add	r4, r3, #28
     7dc:	mov	r0, #8
     7e0:	bl	0 <coda_type_text_new>
     7e4:	mov	r3, r0
     7e8:	str	r3, [r4]
     7ec:	mrc	15, 0, r3, cr13, cr0, {3}
     7f0:	ldr	r2, [pc, #-844]	; 4ac <rinex_init+0xa0>
     7f4:	ldr	r3, [r3, r2]
     7f8:	add	r3, r3, #28
     7fc:	ldr	r3, [r3]
     800:	movw	r1, #0
     804:	movt	r1, #0
     808:	mov	r0, r3
     80c:	bl	0 <coda_type_set_description>
     810:	mrc	15, 0, r3, cr13, cr0, {3}
     814:	ldr	r2, [pc, #-880]	; 4ac <rinex_init+0xa0>
     818:	ldr	r3, [r3, r2]
     81c:	add	r4, r3, #32
     820:	mov	r0, #8
     824:	bl	0 <coda_type_text_new>
     828:	mov	r3, r0
     82c:	str	r3, [r4]
     830:	mrc	15, 0, r3, cr13, cr0, {3}
     834:	ldr	r2, [pc, #-912]	; 4ac <rinex_init+0xa0>
     838:	ldr	r3, [r3, r2]
     83c:	add	r3, r3, #32
     840:	ldr	r3, [r3]
     844:	movw	r1, #0
     848:	movt	r1, #0
     84c:	mov	r0, r3
     850:	bl	0 <coda_type_set_description>
     854:	mrc	15, 0, r3, cr13, cr0, {3}
     858:	ldr	r2, [pc, #-948]	; 4ac <rinex_init+0xa0>
     85c:	ldr	r3, [r3, r2]
     860:	add	r4, r3, #36	; 0x24
     864:	mov	r0, #8
     868:	bl	0 <coda_type_text_new>
     86c:	mov	r3, r0
     870:	str	r3, [r4]
     874:	mrc	15, 0, r3, cr13, cr0, {3}
     878:	ldr	r2, [pc, #-980]	; 4ac <rinex_init+0xa0>
     87c:	ldr	r3, [r3, r2]
     880:	add	r3, r3, #36	; 0x24
     884:	ldr	r3, [r3]
     888:	movw	r1, #0
     88c:	movt	r1, #0
     890:	mov	r0, r3
     894:	bl	0 <coda_type_set_description>
     898:	mrc	15, 0, r3, cr13, cr0, {3}
     89c:	ldr	r2, [pc, #-1016]	; 4ac <rinex_init+0xa0>
     8a0:	ldr	r3, [r3, r2]
     8a4:	add	r4, r3, #40	; 0x28
     8a8:	mov	r0, #8
     8ac:	bl	0 <coda_type_text_new>
     8b0:	mov	r3, r0
     8b4:	str	r3, [r4]
     8b8:	mrc	15, 0, r3, cr13, cr0, {3}
     8bc:	ldr	r2, [pc, #-1048]	; 4ac <rinex_init+0xa0>
     8c0:	ldr	r3, [r3, r2]
     8c4:	add	r3, r3, #40	; 0x28
     8c8:	ldr	r3, [r3]
     8cc:	movw	r1, #0
     8d0:	movt	r1, #0
     8d4:	mov	r0, r3
     8d8:	bl	0 <coda_type_set_description>
     8dc:	mrc	15, 0, r3, cr13, cr0, {3}
     8e0:	ldr	r2, [pc, #-1084]	; 4ac <rinex_init+0xa0>
     8e4:	ldr	r3, [r3, r2]
     8e8:	add	r4, r3, #44	; 0x2c
     8ec:	mov	r0, #8
     8f0:	bl	0 <coda_type_text_new>
     8f4:	mov	r3, r0
     8f8:	str	r3, [r4]
     8fc:	mrc	15, 0, r3, cr13, cr0, {3}
     900:	ldr	r2, [pc, #-1116]	; 4ac <rinex_init+0xa0>
     904:	ldr	r3, [r3, r2]
     908:	add	r3, r3, #44	; 0x2c
     90c:	ldr	r3, [r3]
     910:	movw	r1, #0
     914:	movt	r1, #0
     918:	mov	r0, r3
     91c:	bl	0 <coda_type_set_description>
     920:	mrc	15, 0, r3, cr13, cr0, {3}
     924:	ldr	r2, [pc, #-1152]	; 4ac <rinex_init+0xa0>
     928:	ldr	r3, [r3, r2]
     92c:	add	r4, r3, #48	; 0x30
     930:	mov	r0, #8
     934:	bl	0 <coda_type_text_new>
     938:	mov	r3, r0
     93c:	str	r3, [r4]
     940:	mrc	15, 0, r3, cr13, cr0, {3}
     944:	ldr	r2, [pc, #-1184]	; 4ac <rinex_init+0xa0>
     948:	ldr	r3, [r3, r2]
     94c:	add	r3, r3, #48	; 0x30
     950:	ldr	r3, [r3]
     954:	movw	r1, #0
     958:	movt	r1, #0
     95c:	mov	r0, r3
     960:	bl	0 <coda_type_set_description>
     964:	mrc	15, 0, r3, cr13, cr0, {3}
     968:	ldr	r2, [pc, #-1220]	; 4ac <rinex_init+0xa0>
     96c:	ldr	r3, [r3, r2]
     970:	add	r4, r3, #52	; 0x34
     974:	mov	r0, #8
     978:	bl	0 <coda_type_text_new>
     97c:	mov	r3, r0
     980:	str	r3, [r4]
     984:	mrc	15, 0, r3, cr13, cr0, {3}
     988:	ldr	r2, [pc, #-1252]	; 4ac <rinex_init+0xa0>
     98c:	ldr	r3, [r3, r2]
     990:	add	r3, r3, #52	; 0x34
     994:	ldr	r3, [r3]
     998:	movw	r1, #0
     99c:	movt	r1, #0
     9a0:	mov	r0, r3
     9a4:	bl	0 <coda_type_set_description>
     9a8:	mrc	15, 0, r3, cr13, cr0, {3}
     9ac:	ldr	r2, [pc, #-1288]	; 4ac <rinex_init+0xa0>
     9b0:	ldr	r3, [r3, r2]
     9b4:	add	r4, r3, #56	; 0x38
     9b8:	mov	r0, #8
     9bc:	bl	0 <coda_type_text_new>
     9c0:	mov	r3, r0
     9c4:	str	r3, [r4]
     9c8:	mrc	15, 0, r3, cr13, cr0, {3}
     9cc:	ldr	r2, [pc, #-1320]	; 4ac <rinex_init+0xa0>
     9d0:	ldr	r3, [r3, r2]
     9d4:	add	r3, r3, #56	; 0x38
     9d8:	ldr	r3, [r3]
     9dc:	movw	r1, #0
     9e0:	movt	r1, #0
     9e4:	mov	r0, r3
     9e8:	bl	0 <coda_type_set_description>
     9ec:	mrc	15, 0, r3, cr13, cr0, {3}
     9f0:	ldr	r2, [pc, #-1356]	; 4ac <rinex_init+0xa0>
     9f4:	ldr	r3, [r3, r2]
     9f8:	add	r4, r3, #60	; 0x3c
     9fc:	mov	r0, #8
     a00:	bl	0 <coda_type_text_new>
     a04:	mov	r3, r0
     a08:	str	r3, [r4]
     a0c:	mrc	15, 0, r3, cr13, cr0, {3}
     a10:	ldr	r2, [pc, #-1388]	; 4ac <rinex_init+0xa0>
     a14:	ldr	r3, [r3, r2]
     a18:	add	r3, r3, #60	; 0x3c
     a1c:	ldr	r3, [r3]
     a20:	movw	r1, #0
     a24:	movt	r1, #0
     a28:	mov	r0, r3
     a2c:	bl	0 <coda_type_set_description>
     a30:	mrc	15, 0, r3, cr13, cr0, {3}
     a34:	ldr	r2, [pc, #-1424]	; 4ac <rinex_init+0xa0>
     a38:	ldr	r3, [r3, r2]
     a3c:	add	r4, r3, #64	; 0x40
     a40:	mov	r0, #8
     a44:	bl	0 <coda_type_text_new>
     a48:	mov	r3, r0
     a4c:	str	r3, [r4]
     a50:	mrc	15, 0, r3, cr13, cr0, {3}
     a54:	ldr	r2, [pc, #-1456]	; 4ac <rinex_init+0xa0>
     a58:	ldr	r3, [r3, r2]
     a5c:	add	r3, r3, #64	; 0x40
     a60:	ldr	r3, [r3]
     a64:	movw	r1, #0
     a68:	movt	r1, #0
     a6c:	mov	r0, r3
     a70:	bl	0 <coda_type_set_description>
     a74:	mrc	15, 0, r3, cr13, cr0, {3}
     a78:	ldr	r2, [pc, #-1492]	; 4ac <rinex_init+0xa0>
     a7c:	ldr	r3, [r3, r2]
     a80:	add	r4, r3, #68	; 0x44
     a84:	mov	r0, #8
     a88:	bl	0 <coda_type_text_new>
     a8c:	mov	r3, r0
     a90:	str	r3, [r4]
     a94:	mrc	15, 0, r3, cr13, cr0, {3}
     a98:	ldr	r2, [pc, #-1524]	; 4ac <rinex_init+0xa0>
     a9c:	ldr	r3, [r3, r2]
     aa0:	add	r3, r3, #68	; 0x44
     aa4:	ldr	r3, [r3]
     aa8:	movw	r1, #0
     aac:	movt	r1, #0
     ab0:	mov	r0, r3
     ab4:	bl	0 <coda_type_set_description>
     ab8:	mrc	15, 0, r3, cr13, cr0, {3}
     abc:	ldr	r2, [pc, #-1560]	; 4ac <rinex_init+0xa0>
     ac0:	ldr	r3, [r3, r2]
     ac4:	add	r4, r3, #72	; 0x48
     ac8:	mov	r1, #3
     acc:	mov	r0, #8
     ad0:	bl	0 <coda_type_number_new>
     ad4:	mov	r3, r0
     ad8:	str	r3, [r4]
     adc:	mrc	15, 0, r3, cr13, cr0, {3}
     ae0:	ldr	r2, [pc, #-1596]	; 4ac <rinex_init+0xa0>
     ae4:	ldr	r3, [r3, r2]
     ae8:	add	r3, r3, #72	; 0x48
     aec:	ldr	r3, [r3]
     af0:	ldr	r1, [fp, #-20]	; 0xffffffec
     af4:	mov	r0, r3
     af8:	bl	0 <coda_type_number_set_endianness>
     afc:	mrc	15, 0, r3, cr13, cr0, {3}
     b00:	ldr	r2, [pc, #-1628]	; 4ac <rinex_init+0xa0>
     b04:	ldr	r3, [r3, r2]
     b08:	add	r3, r3, #72	; 0x48
     b0c:	ldr	r3, [r3]
     b10:	mov	r1, #8
     b14:	mov	r0, r3
     b18:	bl	0 <coda_type_set_read_type>
     b1c:	mrc	15, 0, r3, cr13, cr0, {3}
     b20:	ldr	r2, [pc, #-1660]	; 4ac <rinex_init+0xa0>
     b24:	ldr	r3, [r3, r2]
     b28:	add	r3, r3, #72	; 0x48
     b2c:	ldr	r1, [r3]
     b30:	mov	r2, #32
     b34:	mov	r3, #0
     b38:	mov	r0, r1
     b3c:	bl	0 <coda_type_set_bit_size>
     b40:	mrc	15, 0, r3, cr13, cr0, {3}
     b44:	ldr	r2, [pc, #-1696]	; 4ac <rinex_init+0xa0>
     b48:	ldr	r3, [r3, r2]
     b4c:	add	r3, r3, #72	; 0x48
     b50:	ldr	r3, [r3]
     b54:	movw	r1, #0
     b58:	movt	r1, #0
     b5c:	mov	r0, r3
     b60:	bl	0 <coda_type_set_description>
     b64:	mrc	15, 0, r3, cr13, cr0, {3}
     b68:	ldr	r2, [pc, #-1732]	; 4ac <rinex_init+0xa0>
     b6c:	ldr	r3, [r3, r2]
     b70:	add	r3, r3, #72	; 0x48
     b74:	ldr	r3, [r3]
     b78:	movw	r1, #0
     b7c:	movt	r1, #0
     b80:	mov	r0, r3
     b84:	bl	0 <coda_type_number_set_unit>
     b88:	mrc	15, 0, r3, cr13, cr0, {3}
     b8c:	ldr	r2, [pc, #-1768]	; 4ac <rinex_init+0xa0>
     b90:	ldr	r3, [r3, r2]
     b94:	add	r4, r3, #76	; 0x4c
     b98:	mov	r1, #3
     b9c:	mov	r0, #8
     ba0:	bl	0 <coda_type_number_new>
     ba4:	mov	r3, r0
     ba8:	str	r3, [r4]
     bac:	mrc	15, 0, r3, cr13, cr0, {3}
     bb0:	ldr	r2, [pc, #-1804]	; 4ac <rinex_init+0xa0>
     bb4:	ldr	r3, [r3, r2]
     bb8:	add	r3, r3, #76	; 0x4c
     bbc:	ldr	r3, [r3]
     bc0:	ldr	r1, [fp, #-20]	; 0xffffffec
     bc4:	mov	r0, r3
     bc8:	bl	0 <coda_type_number_set_endianness>
     bcc:	mrc	15, 0, r3, cr13, cr0, {3}
     bd0:	ldr	r2, [pc, #-1836]	; 4ac <rinex_init+0xa0>
     bd4:	ldr	r3, [r3, r2]
     bd8:	add	r3, r3, #76	; 0x4c
     bdc:	ldr	r3, [r3]
     be0:	mov	r1, #8
     be4:	mov	r0, r3
     be8:	bl	0 <coda_type_set_read_type>
     bec:	mrc	15, 0, r3, cr13, cr0, {3}
     bf0:	ldr	r2, [pc, #-1868]	; 4ac <rinex_init+0xa0>
     bf4:	ldr	r3, [r3, r2]
     bf8:	add	r3, r3, #76	; 0x4c
     bfc:	ldr	r1, [r3]
     c00:	mov	r2, #32
     c04:	mov	r3, #0
     c08:	mov	r0, r1
     c0c:	bl	0 <coda_type_set_bit_size>
     c10:	mrc	15, 0, r3, cr13, cr0, {3}
     c14:	ldr	r2, [pc, #-1904]	; 4ac <rinex_init+0xa0>
     c18:	ldr	r3, [r3, r2]
     c1c:	add	r3, r3, #76	; 0x4c
     c20:	ldr	r3, [r3]
     c24:	movw	r1, #0
     c28:	movt	r1, #0
     c2c:	mov	r0, r3
     c30:	bl	0 <coda_type_set_description>
     c34:	mrc	15, 0, r3, cr13, cr0, {3}
     c38:	ldr	r2, [pc, #-1940]	; 4ac <rinex_init+0xa0>
     c3c:	ldr	r3, [r3, r2]
     c40:	add	r3, r3, #76	; 0x4c
     c44:	ldr	r3, [r3]
     c48:	movw	r1, #0
     c4c:	movt	r1, #0
     c50:	mov	r0, r3
     c54:	bl	0 <coda_type_number_set_unit>
     c58:	mrc	15, 0, r3, cr13, cr0, {3}
     c5c:	ldr	r2, [pc, #-1976]	; 4ac <rinex_init+0xa0>
     c60:	ldr	r3, [r3, r2]
     c64:	add	r4, r3, #80	; 0x50
     c68:	mov	r1, #3
     c6c:	mov	r0, #8
     c70:	bl	0 <coda_type_number_new>
     c74:	mov	r3, r0
     c78:	str	r3, [r4]
     c7c:	mrc	15, 0, r3, cr13, cr0, {3}
     c80:	ldr	r2, [pc, #-2012]	; 4ac <rinex_init+0xa0>
     c84:	ldr	r3, [r3, r2]
     c88:	add	r3, r3, #80	; 0x50
     c8c:	ldr	r3, [r3]
     c90:	ldr	r1, [fp, #-20]	; 0xffffffec
     c94:	mov	r0, r3
     c98:	bl	0 <coda_type_number_set_endianness>
     c9c:	mrc	15, 0, r3, cr13, cr0, {3}
     ca0:	ldr	r2, [pc, #-2044]	; 4ac <rinex_init+0xa0>
     ca4:	ldr	r3, [r3, r2]
     ca8:	add	r3, r3, #80	; 0x50
     cac:	ldr	r3, [r3]
     cb0:	mov	r1, #8
     cb4:	mov	r0, r3
     cb8:	bl	0 <coda_type_set_read_type>
     cbc:	mrc	15, 0, r3, cr13, cr0, {3}
     cc0:	ldr	r2, [pc, #-2076]	; 4ac <rinex_init+0xa0>
     cc4:	ldr	r3, [r3, r2]
     cc8:	add	r3, r3, #80	; 0x50
     ccc:	ldr	r1, [r3]
     cd0:	mov	r2, #32
     cd4:	mov	r3, #0
     cd8:	mov	r0, r1
     cdc:	bl	0 <coda_type_set_bit_size>
     ce0:	mrc	15, 0, r3, cr13, cr0, {3}
     ce4:	ldr	r2, [pc, #-2112]	; 4ac <rinex_init+0xa0>
     ce8:	ldr	r3, [r3, r2]
     cec:	add	r3, r3, #80	; 0x50
     cf0:	ldr	r3, [r3]
     cf4:	movw	r1, #0
     cf8:	movt	r1, #0
     cfc:	mov	r0, r3
     d00:	bl	0 <coda_type_set_description>
     d04:	mrc	15, 0, r3, cr13, cr0, {3}
     d08:	ldr	r2, [pc, #-2148]	; 4ac <rinex_init+0xa0>
     d0c:	ldr	r3, [r3, r2]
     d10:	add	r3, r3, #80	; 0x50
     d14:	ldr	r3, [r3]
     d18:	movw	r1, #0
     d1c:	movt	r1, #0
     d20:	mov	r0, r3
     d24:	bl	0 <coda_type_number_set_unit>
     d28:	mrc	15, 0, r3, cr13, cr0, {3}
     d2c:	ldr	r2, [pc, #-2184]	; 4ac <rinex_init+0xa0>
     d30:	ldr	r3, [r3, r2]
     d34:	add	r4, r3, #84	; 0x54
     d38:	mov	r1, #3
     d3c:	mov	r0, #8
     d40:	bl	0 <coda_type_number_new>
     d44:	mov	r3, r0
     d48:	str	r3, [r4]
     d4c:	mrc	15, 0, r3, cr13, cr0, {3}
     d50:	ldr	r2, [pc, #-2220]	; 4ac <rinex_init+0xa0>
     d54:	ldr	r3, [r3, r2]
     d58:	add	r3, r3, #84	; 0x54
     d5c:	ldr	r3, [r3]
     d60:	ldr	r1, [fp, #-20]	; 0xffffffec
     d64:	mov	r0, r3
     d68:	bl	0 <coda_type_number_set_endianness>
     d6c:	mrc	15, 0, r3, cr13, cr0, {3}
     d70:	ldr	r2, [pc, #-2252]	; 4ac <rinex_init+0xa0>
     d74:	ldr	r3, [r3, r2]
     d78:	add	r3, r3, #84	; 0x54
     d7c:	ldr	r3, [r3]
     d80:	mov	r1, #8
     d84:	mov	r0, r3
     d88:	bl	0 <coda_type_set_read_type>
     d8c:	mrc	15, 0, r3, cr13, cr0, {3}
     d90:	ldr	r2, [pc, #-2284]	; 4ac <rinex_init+0xa0>
     d94:	ldr	r3, [r3, r2]
     d98:	add	r3, r3, #84	; 0x54
     d9c:	ldr	r1, [r3]
     da0:	mov	r2, #32
     da4:	mov	r3, #0
     da8:	mov	r0, r1
     dac:	bl	0 <coda_type_set_bit_size>
     db0:	mrc	15, 0, r3, cr13, cr0, {3}
     db4:	ldr	r2, [pc, #-2320]	; 4ac <rinex_init+0xa0>
     db8:	ldr	r3, [r3, r2]
     dbc:	add	r3, r3, #84	; 0x54
     dc0:	ldr	r3, [r3]
     dc4:	movw	r1, #0
     dc8:	movt	r1, #0
     dcc:	mov	r0, r3
     dd0:	bl	0 <coda_type_set_description>
     dd4:	mrc	15, 0, r3, cr13, cr0, {3}
     dd8:	ldr	r2, [pc, #-2356]	; 4ac <rinex_init+0xa0>
     ddc:	ldr	r3, [r3, r2]
     de0:	add	r3, r3, #84	; 0x54
     de4:	ldr	r3, [r3]
     de8:	movw	r1, #0
     dec:	movt	r1, #0
     df0:	mov	r0, r3
     df4:	bl	0 <coda_type_number_set_unit>
     df8:	mrc	15, 0, r3, cr13, cr0, {3}
     dfc:	ldr	r2, [pc, #-2392]	; 4ac <rinex_init+0xa0>
     e00:	ldr	r3, [r3, r2]
     e04:	add	r4, r3, #88	; 0x58
     e08:	mov	r1, #3
     e0c:	mov	r0, #8
     e10:	bl	0 <coda_type_number_new>
     e14:	mov	r3, r0
     e18:	str	r3, [r4]
     e1c:	mrc	15, 0, r3, cr13, cr0, {3}
     e20:	ldr	r2, [pc, #-2428]	; 4ac <rinex_init+0xa0>
     e24:	ldr	r3, [r3, r2]
     e28:	add	r3, r3, #88	; 0x58
     e2c:	ldr	r3, [r3]
     e30:	ldr	r1, [fp, #-20]	; 0xffffffec
     e34:	mov	r0, r3
     e38:	bl	0 <coda_type_number_set_endianness>
     e3c:	mrc	15, 0, r3, cr13, cr0, {3}
     e40:	ldr	r2, [pc, #-2460]	; 4ac <rinex_init+0xa0>
     e44:	ldr	r3, [r3, r2]
     e48:	add	r3, r3, #88	; 0x58
     e4c:	ldr	r3, [r3]
     e50:	mov	r1, #8
     e54:	mov	r0, r3
     e58:	bl	0 <coda_type_set_read_type>
     e5c:	mrc	15, 0, r3, cr13, cr0, {3}
     e60:	ldr	r2, [pc, #-2492]	; 4ac <rinex_init+0xa0>
     e64:	ldr	r3, [r3, r2]
     e68:	add	r3, r3, #88	; 0x58
     e6c:	ldr	r1, [r3]
     e70:	mov	r2, #32
     e74:	mov	r3, #0
     e78:	mov	r0, r1
     e7c:	bl	0 <coda_type_set_bit_size>
     e80:	mrc	15, 0, r3, cr13, cr0, {3}
     e84:	ldr	r2, [pc, #-2528]	; 4ac <rinex_init+0xa0>
     e88:	ldr	r3, [r3, r2]
     e8c:	add	r3, r3, #88	; 0x58
     e90:	ldr	r3, [r3]
     e94:	movw	r1, #0
     e98:	movt	r1, #0
     e9c:	mov	r0, r3
     ea0:	bl	0 <coda_type_set_description>
     ea4:	mrc	15, 0, r3, cr13, cr0, {3}
     ea8:	ldr	r2, [pc, #-2564]	; 4ac <rinex_init+0xa0>
     eac:	ldr	r3, [r3, r2]
     eb0:	add	r3, r3, #88	; 0x58
     eb4:	ldr	r3, [r3]
     eb8:	movw	r1, #0
     ebc:	movt	r1, #0
     ec0:	mov	r0, r3
     ec4:	bl	0 <coda_type_number_set_unit>
     ec8:	mrc	15, 0, r3, cr13, cr0, {3}
     ecc:	ldr	r2, [pc, #-2600]	; 4ac <rinex_init+0xa0>
     ed0:	ldr	r3, [r3, r2]
     ed4:	add	r4, r3, #92	; 0x5c
     ed8:	mov	r1, #3
     edc:	mov	r0, #8
     ee0:	bl	0 <coda_type_number_new>
     ee4:	mov	r3, r0
     ee8:	str	r3, [r4]
     eec:	mrc	15, 0, r3, cr13, cr0, {3}
     ef0:	ldr	r2, [pc, #-2636]	; 4ac <rinex_init+0xa0>
     ef4:	ldr	r3, [r3, r2]
     ef8:	add	r3, r3, #92	; 0x5c
     efc:	ldr	r3, [r3]
     f00:	ldr	r1, [fp, #-20]	; 0xffffffec
     f04:	mov	r0, r3
     f08:	bl	0 <coda_type_number_set_endianness>
     f0c:	mrc	15, 0, r3, cr13, cr0, {3}
     f10:	ldr	r2, [pc, #-2668]	; 4ac <rinex_init+0xa0>
     f14:	ldr	r3, [r3, r2]
     f18:	add	r3, r3, #92	; 0x5c
     f1c:	ldr	r3, [r3]
     f20:	mov	r1, #8
     f24:	mov	r0, r3
     f28:	bl	0 <coda_type_set_read_type>
     f2c:	mrc	15, 0, r3, cr13, cr0, {3}
     f30:	ldr	r2, [pc, #-2700]	; 4ac <rinex_init+0xa0>
     f34:	ldr	r3, [r3, r2]
     f38:	add	r3, r3, #92	; 0x5c
     f3c:	ldr	r1, [r3]
     f40:	mov	r2, #32
     f44:	mov	r3, #0
     f48:	mov	r0, r1
     f4c:	bl	0 <coda_type_set_bit_size>
     f50:	mrc	15, 0, r3, cr13, cr0, {3}
     f54:	ldr	r2, [pc, #-2736]	; 4ac <rinex_init+0xa0>
     f58:	ldr	r3, [r3, r2]
     f5c:	add	r3, r3, #92	; 0x5c
     f60:	ldr	r3, [r3]
     f64:	movw	r1, #0
     f68:	movt	r1, #0
     f6c:	mov	r0, r3
     f70:	bl	0 <coda_type_set_description>
     f74:	mrc	15, 0, r3, cr13, cr0, {3}
     f78:	ldr	r2, [pc, #-2772]	; 4ac <rinex_init+0xa0>
     f7c:	ldr	r3, [r3, r2]
     f80:	add	r3, r3, #92	; 0x5c
     f84:	ldr	r3, [r3]
     f88:	movw	r1, #0
     f8c:	movt	r1, #0
     f90:	mov	r0, r3
     f94:	bl	0 <coda_type_number_set_unit>
     f98:	mrc	15, 0, r3, cr13, cr0, {3}
     f9c:	ldr	r2, [pc, #-2808]	; 4ac <rinex_init+0xa0>
     fa0:	ldr	r3, [r3, r2]
     fa4:	add	r4, r3, #108	; 0x6c
     fa8:	mov	r0, #8
     fac:	bl	0 <coda_type_text_new>
     fb0:	mov	r3, r0
     fb4:	str	r3, [r4]
     fb8:	mrc	15, 0, r3, cr13, cr0, {3}
     fbc:	ldr	r2, [pc, #-2840]	; 4ac <rinex_init+0xa0>
     fc0:	ldr	r3, [r3, r2]
     fc4:	add	r3, r3, #108	; 0x6c
     fc8:	ldr	r1, [r3]
     fcc:	mov	r2, #1
     fd0:	mov	r3, #0
     fd4:	mov	r0, r1
     fd8:	bl	0 <coda_type_set_byte_size>
     fdc:	mrc	15, 0, r3, cr13, cr0, {3}
     fe0:	ldr	r2, [pc, #-2876]	; 4ac <rinex_init+0xa0>
     fe4:	ldr	r3, [r3, r2]
     fe8:	add	r3, r3, #108	; 0x6c
     fec:	ldr	r3, [r3]
     ff0:	mov	r1, #10
     ff4:	mov	r0, r3
     ff8:	bl	0 <coda_type_set_read_type>
     ffc:	mrc	15, 0, r3, cr13, cr0, {3}
    1000:	ldr	r2, [pc, #-2908]	; 4ac <rinex_init+0xa0>
    1004:	ldr	r3, [r3, r2]
    1008:	add	r3, r3, #108	; 0x6c
    100c:	ldr	r3, [r3]
    1010:	movw	r1, #0
    1014:	movt	r1, #0
    1018:	mov	r0, r3
    101c:	bl	0 <coda_type_set_description>
    1020:	mrc	15, 0, r3, cr13, cr0, {3}
    1024:	ldr	r2, [pc, #-2944]	; 4ac <rinex_init+0xa0>
    1028:	ldr	r3, [r3, r2]
    102c:	add	r4, r3, #112	; 0x70
    1030:	mov	r1, #2
    1034:	mov	r0, #8
    1038:	bl	0 <coda_type_number_new>
    103c:	mov	r3, r0
    1040:	str	r3, [r4]
    1044:	mrc	15, 0, r3, cr13, cr0, {3}
    1048:	ldr	r2, [pc, #-2980]	; 4ac <rinex_init+0xa0>
    104c:	ldr	r3, [r3, r2]
    1050:	add	r3, r3, #112	; 0x70
    1054:	ldr	r3, [r3]
    1058:	ldr	r1, [fp, #-20]	; 0xffffffec
    105c:	mov	r0, r3
    1060:	bl	0 <coda_type_number_set_endianness>
    1064:	mrc	15, 0, r3, cr13, cr0, {3}
    1068:	ldr	r2, [pc, #-3012]	; 4ac <rinex_init+0xa0>
    106c:	ldr	r3, [r3, r2]
    1070:	add	r3, r3, #112	; 0x70
    1074:	ldr	r3, [r3]
    1078:	mov	r1, #2
    107c:	mov	r0, r3
    1080:	bl	0 <coda_type_set_read_type>
    1084:	mrc	15, 0, r3, cr13, cr0, {3}
    1088:	ldr	r2, [pc, #-3044]	; 4ac <rinex_init+0xa0>
    108c:	ldr	r3, [r3, r2]
    1090:	add	r3, r3, #112	; 0x70
    1094:	ldr	r1, [r3]
    1098:	mov	r2, #16
    109c:	mov	r3, #0
    10a0:	mov	r0, r1
    10a4:	bl	0 <coda_type_set_bit_size>
    10a8:	mrc	15, 0, r3, cr13, cr0, {3}
    10ac:	ldr	r2, [pc, #-3080]	; 4ac <rinex_init+0xa0>
    10b0:	ldr	r3, [r3, r2]
    10b4:	add	r3, r3, #112	; 0x70
    10b8:	ldr	r3, [r3]
    10bc:	movw	r1, #0
    10c0:	movt	r1, #0
    10c4:	mov	r0, r3
    10c8:	bl	0 <coda_type_set_description>
    10cc:	mrc	15, 0, r3, cr13, cr0, {3}
    10d0:	ldr	r2, [pc, #-3116]	; 4ac <rinex_init+0xa0>
    10d4:	ldr	r3, [r3, r2]
    10d8:	add	r4, r3, #116	; 0x74
    10dc:	mov	r0, #8
    10e0:	bl	0 <coda_type_text_new>
    10e4:	mov	r3, r0
    10e8:	str	r3, [r4]
    10ec:	mrc	15, 0, r3, cr13, cr0, {3}
    10f0:	ldr	r2, [pc, #-3148]	; 4ac <rinex_init+0xa0>
    10f4:	ldr	r3, [r3, r2]
    10f8:	add	r3, r3, #116	; 0x74
    10fc:	ldr	r3, [r3]
    1100:	movw	r1, #0
    1104:	movt	r1, #0
    1108:	mov	r0, r3
    110c:	bl	0 <coda_type_set_description>
    1110:	mrc	15, 0, r3, cr13, cr0, {3}
    1114:	ldr	r2, [pc, #-3184]	; 4ac <rinex_init+0xa0>
    1118:	ldr	r3, [r3, r2]
    111c:	add	r4, r3, #120	; 0x78
    1120:	mov	r0, #8
    1124:	bl	0 <coda_type_array_new>
    1128:	mov	r3, r0
    112c:	str	r3, [r4]
    1130:	mrc	15, 0, r3, cr13, cr0, {3}
    1134:	ldr	r2, [pc, #-3216]	; 4ac <rinex_init+0xa0>
    1138:	ldr	r3, [r3, r2]
    113c:	add	r3, r3, #120	; 0x78
    1140:	ldr	r3, [r3]
    1144:	mov	r1, #0
    1148:	mov	r0, r3
    114c:	bl	0 <coda_type_array_add_variable_dimension>
    1150:	mrc	15, 0, r3, cr13, cr0, {3}
    1154:	ldr	r2, [pc, #-3248]	; 4ac <rinex_init+0xa0>
    1158:	ldr	r3, [r3, r2]
    115c:	add	r3, r3, #120	; 0x78
    1160:	ldr	r0, [r3]
    1164:	mrc	15, 0, r3, cr13, cr0, {3}
    1168:	ldr	r2, [pc, #-3268]	; 4ac <rinex_init+0xa0>
    116c:	ldr	r3, [r3, r2]
    1170:	add	r3, r3, #116	; 0x74
    1174:	ldr	r3, [r3]
    1178:	mov	r1, r3
    117c:	bl	0 <coda_type_array_set_base_type>
    1180:	mrc	15, 0, r3, cr13, cr0, {3}
    1184:	ldr	r2, [pc, #-3296]	; 4ac <rinex_init+0xa0>
    1188:	ldr	r3, [r3, r2]
    118c:	add	r4, r3, #124	; 0x7c
    1190:	mov	r0, #8
    1194:	bl	0 <coda_type_record_new>
    1198:	mov	r3, r0
    119c:	str	r3, [r4]
    11a0:	movw	r0, #0
    11a4:	movt	r0, #0
    11a8:	bl	0 <coda_type_record_field_new>
    11ac:	str	r0, [fp, #-24]	; 0xffffffe8
    11b0:	mrc	15, 0, r3, cr13, cr0, {3}
    11b4:	ldr	r2, [pc, #-3344]	; 4ac <rinex_init+0xa0>
    11b8:	ldr	r3, [r3, r2]
    11bc:	add	r3, r3, #108	; 0x6c
    11c0:	ldr	r3, [r3]
    11c4:	mov	r1, r3
    11c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    11cc:	bl	0 <coda_type_record_field_set_type>
    11d0:	mrc	15, 0, r3, cr13, cr0, {3}
    11d4:	ldr	r2, [pc, #-3376]	; 4ac <rinex_init+0xa0>
    11d8:	ldr	r3, [r3, r2]
    11dc:	add	r3, r3, #124	; 0x7c
    11e0:	ldr	r3, [r3]
    11e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11e8:	mov	r0, r3
    11ec:	bl	0 <coda_type_record_add_field>
    11f0:	movw	r0, #0
    11f4:	movt	r0, #0
    11f8:	bl	0 <coda_type_record_field_new>
    11fc:	str	r0, [fp, #-24]	; 0xffffffe8
    1200:	mrc	15, 0, r3, cr13, cr0, {3}
    1204:	ldr	r2, [pc, #-3424]	; 4ac <rinex_init+0xa0>
    1208:	ldr	r3, [r3, r2]
    120c:	add	r3, r3, #112	; 0x70
    1210:	ldr	r3, [r3]
    1214:	mov	r1, r3
    1218:	ldr	r0, [fp, #-24]	; 0xffffffe8
    121c:	bl	0 <coda_type_record_field_set_type>
    1220:	mrc	15, 0, r3, cr13, cr0, {3}
    1224:	ldr	r2, [pc, #-3456]	; 4ac <rinex_init+0xa0>
    1228:	ldr	r3, [r3, r2]
    122c:	add	r3, r3, #124	; 0x7c
    1230:	ldr	r3, [r3]
    1234:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1238:	mov	r0, r3
    123c:	bl	0 <coda_type_record_add_field>
    1240:	movw	r0, #0
    1244:	movt	r0, #0
    1248:	bl	0 <coda_type_record_field_new>
    124c:	str	r0, [fp, #-24]	; 0xffffffe8
    1250:	mrc	15, 0, r3, cr13, cr0, {3}
    1254:	ldr	r2, [pc, #-3504]	; 4ac <rinex_init+0xa0>
    1258:	ldr	r3, [r3, r2]
    125c:	add	r3, r3, #120	; 0x78
    1260:	ldr	r3, [r3]
    1264:	mov	r1, r3
    1268:	ldr	r0, [fp, #-24]	; 0xffffffe8
    126c:	bl	0 <coda_type_record_field_set_type>
    1270:	mrc	15, 0, r3, cr13, cr0, {3}
    1274:	ldr	r2, [pc, #-3536]	; 4ac <rinex_init+0xa0>
    1278:	ldr	r3, [r3, r2]
    127c:	add	r3, r3, #124	; 0x7c
    1280:	ldr	r3, [r3]
    1284:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1288:	mov	r0, r3
    128c:	bl	0 <coda_type_record_add_field>
    1290:	mrc	15, 0, r3, cr13, cr0, {3}
    1294:	ldr	r2, [pc, #-3568]	; 4ac <rinex_init+0xa0>
    1298:	ldr	r3, [r3, r2]
    129c:	add	r4, r3, #128	; 0x80
    12a0:	mov	r0, #8
    12a4:	bl	0 <coda_type_array_new>
    12a8:	mov	r3, r0
    12ac:	str	r3, [r4]
    12b0:	mrc	15, 0, r3, cr13, cr0, {3}
    12b4:	ldr	r2, [pc, #-3600]	; 4ac <rinex_init+0xa0>
    12b8:	ldr	r3, [r3, r2]
    12bc:	add	r3, r3, #128	; 0x80
    12c0:	ldr	r3, [r3]
    12c4:	mov	r1, #0
    12c8:	mov	r0, r3
    12cc:	bl	0 <coda_type_array_add_variable_dimension>
    12d0:	mrc	15, 0, r3, cr13, cr0, {3}
    12d4:	ldr	r2, [pc, #-3632]	; 4ac <rinex_init+0xa0>
    12d8:	ldr	r3, [r3, r2]
    12dc:	add	r3, r3, #128	; 0x80
    12e0:	ldr	r0, [r3]
    12e4:	mrc	15, 0, r3, cr13, cr0, {3}
    12e8:	ldr	r2, [pc, #-3652]	; 4ac <rinex_init+0xa0>
    12ec:	ldr	r3, [r3, r2]
    12f0:	add	r3, r3, #124	; 0x7c
    12f4:	ldr	r3, [r3]
    12f8:	mov	r1, r3
    12fc:	bl	0 <coda_type_array_set_base_type>
    1300:	mrc	15, 0, r3, cr13, cr0, {3}
    1304:	ldr	r2, [pc, #-3680]	; 4ac <rinex_init+0xa0>
    1308:	ldr	r3, [r3, r2]
    130c:	add	r4, r3, #132	; 0x84
    1310:	mov	r0, #8
    1314:	bl	0 <coda_type_text_new>
    1318:	mov	r3, r0
    131c:	str	r3, [r4]
    1320:	mrc	15, 0, r3, cr13, cr0, {3}
    1324:	ldr	r2, [pc, #-3712]	; 4ac <rinex_init+0xa0>
    1328:	ldr	r3, [r3, r2]
    132c:	add	r3, r3, #132	; 0x84
    1330:	ldr	r3, [r3]
    1334:	movw	r1, #0
    1338:	movt	r1, #0
    133c:	mov	r0, r3
    1340:	bl	0 <coda_type_set_description>
    1344:	mrc	15, 0, r3, cr13, cr0, {3}
    1348:	ldr	r2, [pc, #-3748]	; 4ac <rinex_init+0xa0>
    134c:	ldr	r3, [r3, r2]
    1350:	add	r4, r3, #136	; 0x88
    1354:	mov	r1, #3
    1358:	mov	r0, #8
    135c:	bl	0 <coda_type_number_new>
    1360:	mov	r3, r0
    1364:	str	r3, [r4]
    1368:	mrc	15, 0, r3, cr13, cr0, {3}
    136c:	ldr	r2, [pc, #-3784]	; 4ac <rinex_init+0xa0>
    1370:	ldr	r3, [r3, r2]
    1374:	add	r3, r3, #136	; 0x88
    1378:	ldr	r3, [r3]
    137c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1380:	mov	r0, r3
    1384:	bl	0 <coda_type_number_set_endianness>
    1388:	mrc	15, 0, r3, cr13, cr0, {3}
    138c:	ldr	r2, [pc, #-3816]	; 4ac <rinex_init+0xa0>
    1390:	ldr	r3, [r3, r2]
    1394:	add	r3, r3, #136	; 0x88
    1398:	ldr	r1, [r3]
    139c:	mov	r2, #64	; 0x40
    13a0:	mov	r3, #0
    13a4:	mov	r0, r1
    13a8:	bl	0 <coda_type_set_bit_size>
    13ac:	mrc	15, 0, r3, cr13, cr0, {3}
    13b0:	ldr	r2, [pc, #-3852]	; 4ac <rinex_init+0xa0>
    13b4:	ldr	r3, [r3, r2]
    13b8:	add	r3, r3, #136	; 0x88
    13bc:	ldr	r3, [r3]
    13c0:	movw	r1, #0
    13c4:	movt	r1, #0
    13c8:	mov	r0, r3
    13cc:	bl	0 <coda_type_set_description>
    13d0:	mrc	15, 0, r3, cr13, cr0, {3}
    13d4:	ldr	r2, [pc, #-3888]	; 4ac <rinex_init+0xa0>
    13d8:	ldr	r3, [r3, r2]
    13dc:	add	r3, r3, #136	; 0x88
    13e0:	ldr	r3, [r3]
    13e4:	movw	r1, #0
    13e8:	movt	r1, #0
    13ec:	mov	r0, r3
    13f0:	bl	0 <coda_type_number_set_unit>
    13f4:	mrc	15, 0, r3, cr13, cr0, {3}
    13f8:	ldr	r2, [pc, #-3924]	; 4ac <rinex_init+0xa0>
    13fc:	ldr	r3, [r3, r2]
    1400:	add	r4, r3, #144	; 0x90
    1404:	mov	r0, #8
    1408:	bl	0 <coda_type_text_new>
    140c:	mov	r3, r0
    1410:	str	r3, [r4]
    1414:	mov	r3, #0
    1418:	str	r3, [fp, #-28]	; 0xffffffe4
    141c:	sub	r3, fp, #28
    1420:	mov	r1, r3
    1424:	movw	r0, #0
    1428:	movt	r0, #0
    142c:	bl	0 <coda_expression_from_string>
    1430:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1434:	mrc	15, 0, r3, cr13, cr0, {3}
    1438:	ldr	r2, [pc, #-3988]	; 4ac <rinex_init+0xa0>
    143c:	ldr	r3, [r3, r2]
    1440:	add	r4, r3, #140	; 0x8c
    1444:	mov	r0, #8
    1448:	bl	0 <coda_type_time_new>
    144c:	mov	r3, r0
    1450:	str	r3, [r4]
    1454:	mrc	15, 0, r3, cr13, cr0, {3}
    1458:	ldr	r2, [pc, #-4020]	; 4ac <rinex_init+0xa0>
    145c:	ldr	r3, [r3, r2]
    1460:	add	r3, r3, #140	; 0x8c
    1464:	ldr	r0, [r3]
    1468:	mrc	15, 0, r3, cr13, cr0, {3}
    146c:	ldr	r2, [pc, #-4040]	; 4ac <rinex_init+0xa0>
    1470:	ldr	r3, [r3, r2]
    1474:	add	r3, r3, #144	; 0x90
    1478:	ldr	r3, [r3]
    147c:	mov	r1, r3
    1480:	bl	0 <coda_type_time_set_base_type>
    1484:	mrc	15, 0, r3, cr13, cr0, {3}
    1488:	ldr	r2, [pc, #-4068]	; 4ac <rinex_init+0xa0>
    148c:	ldr	r3, [r3, r2]
    1490:	add	r3, r3, #140	; 0x8c
    1494:	ldr	r3, [r3]
    1498:	movw	r1, #0
    149c:	movt	r1, #0
    14a0:	mov	r0, r3
    14a4:	bl	0 <coda_type_set_description>
    14a8:	mrc	15, 0, r3, cr13, cr0, {3}
    14ac:	ldr	r2, [pc, #4088]	; 24ac <rinex_init+0x20a0>
    14b0:	ldr	r3, [r3, r2]
    14b4:	add	r4, r3, #152	; 0x98
    14b8:	mov	r0, #8
    14bc:	bl	0 <coda_type_text_new>
    14c0:	mov	r3, r0
    14c4:	str	r3, [r4]
    14c8:	mov	r3, #0
    14cc:	str	r3, [fp, #-28]	; 0xffffffe4
    14d0:	sub	r3, fp, #28
    14d4:	mov	r1, r3
    14d8:	movw	r0, #0
    14dc:	movt	r0, #0
    14e0:	bl	0 <coda_expression_from_string>
    14e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    14e8:	mrc	15, 0, r3, cr13, cr0, {3}
    14ec:	ldr	r2, [pc, #4024]	; 24ac <rinex_init+0x20a0>
    14f0:	ldr	r3, [r3, r2]
    14f4:	add	r4, r3, #148	; 0x94
    14f8:	mov	r0, #8
    14fc:	bl	0 <coda_type_time_new>
    1500:	mov	r3, r0
    1504:	str	r3, [r4]
    1508:	mrc	15, 0, r3, cr13, cr0, {3}
    150c:	ldr	r2, [pc, #3992]	; 24ac <rinex_init+0x20a0>
    1510:	ldr	r3, [r3, r2]
    1514:	add	r3, r3, #148	; 0x94
    1518:	ldr	r0, [r3]
    151c:	mrc	15, 0, r3, cr13, cr0, {3}
    1520:	ldr	r2, [pc, #3972]	; 24ac <rinex_init+0x20a0>
    1524:	ldr	r3, [r3, r2]
    1528:	add	r3, r3, #152	; 0x98
    152c:	ldr	r3, [r3]
    1530:	mov	r1, r3
    1534:	bl	0 <coda_type_time_set_base_type>
    1538:	mrc	15, 0, r3, cr13, cr0, {3}
    153c:	ldr	r2, [pc, #3944]	; 24ac <rinex_init+0x20a0>
    1540:	ldr	r3, [r3, r2]
    1544:	add	r3, r3, #148	; 0x94
    1548:	ldr	r3, [r3]
    154c:	movw	r1, #0
    1550:	movt	r1, #0
    1554:	mov	r0, r3
    1558:	bl	0 <coda_type_set_description>
    155c:	mrc	15, 0, r3, cr13, cr0, {3}
    1560:	ldr	r2, [pc, #3908]	; 24ac <rinex_init+0x20a0>
    1564:	ldr	r3, [r3, r2]
    1568:	add	r4, r3, #156	; 0x9c
    156c:	mov	r0, #8
    1570:	bl	0 <coda_type_text_new>
    1574:	mov	r3, r0
    1578:	str	r3, [r4]
    157c:	mrc	15, 0, r3, cr13, cr0, {3}
    1580:	ldr	r2, [pc, #3876]	; 24ac <rinex_init+0x20a0>
    1584:	ldr	r3, [r3, r2]
    1588:	add	r3, r3, #156	; 0x9c
    158c:	ldr	r3, [r3]
    1590:	movw	r1, #0
    1594:	movt	r1, #0
    1598:	mov	r0, r3
    159c:	bl	0 <coda_type_set_description>
    15a0:	mrc	15, 0, r3, cr13, cr0, {3}
    15a4:	ldr	r2, [pc, #3840]	; 24ac <rinex_init+0x20a0>
    15a8:	ldr	r3, [r3, r2]
    15ac:	add	r4, r3, #160	; 0xa0
    15b0:	mov	r1, #2
    15b4:	mov	r0, #8
    15b8:	bl	0 <coda_type_number_new>
    15bc:	mov	r3, r0
    15c0:	str	r3, [r4]
    15c4:	mrc	15, 0, r3, cr13, cr0, {3}
    15c8:	ldr	r2, [pc, #3804]	; 24ac <rinex_init+0x20a0>
    15cc:	ldr	r3, [r3, r2]
    15d0:	add	r3, r3, #160	; 0xa0
    15d4:	ldr	r3, [r3]
    15d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    15dc:	mov	r0, r3
    15e0:	bl	0 <coda_type_number_set_endianness>
    15e4:	mrc	15, 0, r3, cr13, cr0, {3}
    15e8:	ldr	r2, [pc, #3772]	; 24ac <rinex_init+0x20a0>
    15ec:	ldr	r3, [r3, r2]
    15f0:	add	r3, r3, #160	; 0xa0
    15f4:	ldr	r3, [r3]
    15f8:	mov	r1, #1
    15fc:	mov	r0, r3
    1600:	bl	0 <coda_type_set_read_type>
    1604:	mrc	15, 0, r3, cr13, cr0, {3}
    1608:	ldr	r2, [pc, #3740]	; 24ac <rinex_init+0x20a0>
    160c:	ldr	r3, [r3, r2]
    1610:	add	r3, r3, #160	; 0xa0
    1614:	ldr	r1, [r3]
    1618:	mov	r2, #8
    161c:	mov	r3, #0
    1620:	mov	r0, r1
    1624:	bl	0 <coda_type_set_bit_size>
    1628:	mrc	15, 0, r3, cr13, cr0, {3}
    162c:	ldr	r2, [pc, #3704]	; 24ac <rinex_init+0x20a0>
    1630:	ldr	r3, [r3, r2]
    1634:	add	r3, r3, #160	; 0xa0
    1638:	ldr	r3, [r3]
    163c:	movw	r1, #0
    1640:	movt	r1, #0
    1644:	mov	r0, r3
    1648:	bl	0 <coda_type_set_description>
    164c:	mrc	15, 0, r3, cr13, cr0, {3}
    1650:	ldr	r2, [pc, #3668]	; 24ac <rinex_init+0x20a0>
    1654:	ldr	r3, [r3, r2]
    1658:	add	r4, r3, #164	; 0xa4
    165c:	mov	r1, #2
    1660:	mov	r0, #8
    1664:	bl	0 <coda_type_number_new>
    1668:	mov	r3, r0
    166c:	str	r3, [r4]
    1670:	mrc	15, 0, r3, cr13, cr0, {3}
    1674:	ldr	r2, [pc, #3632]	; 24ac <rinex_init+0x20a0>
    1678:	ldr	r3, [r3, r2]
    167c:	add	r3, r3, #164	; 0xa4
    1680:	ldr	r3, [r3]
    1684:	ldr	r1, [fp, #-20]	; 0xffffffec
    1688:	mov	r0, r3
    168c:	bl	0 <coda_type_number_set_endianness>
    1690:	mrc	15, 0, r3, cr13, cr0, {3}
    1694:	ldr	r2, [pc, #3600]	; 24ac <rinex_init+0x20a0>
    1698:	ldr	r3, [r3, r2]
    169c:	add	r3, r3, #164	; 0xa4
    16a0:	ldr	r3, [r3]
    16a4:	mov	r1, #4
    16a8:	mov	r0, r3
    16ac:	bl	0 <coda_type_set_read_type>
    16b0:	mrc	15, 0, r3, cr13, cr0, {3}
    16b4:	ldr	r2, [pc, #3568]	; 24ac <rinex_init+0x20a0>
    16b8:	ldr	r3, [r3, r2]
    16bc:	add	r3, r3, #164	; 0xa4
    16c0:	ldr	r1, [r3]
    16c4:	mov	r2, #32
    16c8:	mov	r3, #0
    16cc:	mov	r0, r1
    16d0:	bl	0 <coda_type_set_bit_size>
    16d4:	mrc	15, 0, r3, cr13, cr0, {3}
    16d8:	ldr	r2, [pc, #3532]	; 24ac <rinex_init+0x20a0>
    16dc:	ldr	r3, [r3, r2]
    16e0:	add	r3, r3, #164	; 0xa4
    16e4:	ldr	r3, [r3]
    16e8:	movw	r1, #0
    16ec:	movt	r1, #0
    16f0:	mov	r0, r3
    16f4:	bl	0 <coda_type_set_description>
    16f8:	mrc	15, 0, r3, cr13, cr0, {3}
    16fc:	ldr	r2, [pc, #3496]	; 24ac <rinex_init+0x20a0>
    1700:	ldr	r3, [r3, r2]
    1704:	add	r4, r3, #168	; 0xa8
    1708:	mov	r1, #2
    170c:	mov	r0, #8
    1710:	bl	0 <coda_type_number_new>
    1714:	mov	r3, r0
    1718:	str	r3, [r4]
    171c:	mrc	15, 0, r3, cr13, cr0, {3}
    1720:	ldr	r2, [pc, #3460]	; 24ac <rinex_init+0x20a0>
    1724:	ldr	r3, [r3, r2]
    1728:	add	r3, r3, #168	; 0xa8
    172c:	ldr	r3, [r3]
    1730:	ldr	r1, [fp, #-20]	; 0xffffffec
    1734:	mov	r0, r3
    1738:	bl	0 <coda_type_number_set_endianness>
    173c:	mrc	15, 0, r3, cr13, cr0, {3}
    1740:	ldr	r2, [pc, #3428]	; 24ac <rinex_init+0x20a0>
    1744:	ldr	r3, [r3, r2]
    1748:	add	r3, r3, #168	; 0xa8
    174c:	ldr	r3, [r3]
    1750:	mov	r1, #3
    1754:	mov	r0, r3
    1758:	bl	0 <coda_type_set_read_type>
    175c:	mrc	15, 0, r3, cr13, cr0, {3}
    1760:	ldr	r2, [pc, #3396]	; 24ac <rinex_init+0x20a0>
    1764:	ldr	r3, [r3, r2]
    1768:	add	r3, r3, #168	; 0xa8
    176c:	ldr	r1, [r3]
    1770:	mov	r2, #16
    1774:	mov	r3, #0
    1778:	mov	r0, r1
    177c:	bl	0 <coda_type_set_bit_size>
    1780:	mrc	15, 0, r3, cr13, cr0, {3}
    1784:	ldr	r2, [pc, #3360]	; 24ac <rinex_init+0x20a0>
    1788:	ldr	r3, [r3, r2]
    178c:	add	r3, r3, #168	; 0xa8
    1790:	ldr	r3, [r3]
    1794:	movw	r1, #0
    1798:	movt	r1, #0
    179c:	mov	r0, r3
    17a0:	bl	0 <coda_type_set_description>
    17a4:	mrc	15, 0, r3, cr13, cr0, {3}
    17a8:	ldr	r2, [pc, #3324]	; 24ac <rinex_init+0x20a0>
    17ac:	ldr	r3, [r3, r2]
    17b0:	add	r4, r3, #172	; 0xac
    17b4:	mov	r0, #8
    17b8:	bl	0 <coda_type_text_new>
    17bc:	mov	r3, r0
    17c0:	str	r3, [r4]
    17c4:	mrc	15, 0, r3, cr13, cr0, {3}
    17c8:	ldr	r2, [pc, #3292]	; 24ac <rinex_init+0x20a0>
    17cc:	ldr	r3, [r3, r2]
    17d0:	add	r3, r3, #172	; 0xac
    17d4:	ldr	r3, [r3]
    17d8:	movw	r1, #0
    17dc:	movt	r1, #0
    17e0:	mov	r0, r3
    17e4:	bl	0 <coda_type_set_description>
    17e8:	mrc	15, 0, r3, cr13, cr0, {3}
    17ec:	ldr	r2, [pc, #3256]	; 24ac <rinex_init+0x20a0>
    17f0:	ldr	r3, [r3, r2]
    17f4:	add	r4, r3, #176	; 0xb0
    17f8:	mov	r0, #8
    17fc:	bl	0 <coda_type_text_new>
    1800:	mov	r3, r0
    1804:	str	r3, [r4]
    1808:	mov	r3, #0
    180c:	str	r3, [fp, #-28]	; 0xffffffe4
    1810:	sub	r3, fp, #28
    1814:	mov	r1, r3
    1818:	movw	r0, #0
    181c:	movt	r0, #0
    1820:	bl	0 <coda_expression_from_string>
    1824:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1828:	mrc	15, 0, r3, cr13, cr0, {3}
    182c:	ldr	r2, [pc, #3192]	; 24ac <rinex_init+0x20a0>
    1830:	ldr	r3, [r3, r2]
    1834:	add	r4, r3, #180	; 0xb4
    1838:	mov	r0, #8
    183c:	bl	0 <coda_type_time_new>
    1840:	mov	r3, r0
    1844:	str	r3, [r4]
    1848:	mrc	15, 0, r3, cr13, cr0, {3}
    184c:	ldr	r2, [pc, #3160]	; 24ac <rinex_init+0x20a0>
    1850:	ldr	r3, [r3, r2]
    1854:	add	r3, r3, #180	; 0xb4
    1858:	ldr	r0, [r3]
    185c:	mrc	15, 0, r3, cr13, cr0, {3}
    1860:	ldr	r2, [pc, #3140]	; 24ac <rinex_init+0x20a0>
    1864:	ldr	r3, [r3, r2]
    1868:	add	r3, r3, #176	; 0xb0
    186c:	ldr	r3, [r3]
    1870:	mov	r1, r3
    1874:	bl	0 <coda_type_time_set_base_type>
    1878:	mrc	15, 0, r3, cr13, cr0, {3}
    187c:	ldr	r2, [pc, #3112]	; 24ac <rinex_init+0x20a0>
    1880:	ldr	r3, [r3, r2]
    1884:	add	r3, r3, #180	; 0xb4
    1888:	ldr	r3, [r3]
    188c:	movw	r1, #0
    1890:	movt	r1, #0
    1894:	mov	r0, r3
    1898:	bl	0 <coda_type_set_description>
    189c:	mrc	15, 0, r3, cr13, cr0, {3}
    18a0:	ldr	r2, [pc, #3076]	; 24ac <rinex_init+0x20a0>
    18a4:	ldr	r3, [r3, r2]
    18a8:	add	r4, r3, #184	; 0xb8
    18ac:	mov	r0, #8
    18b0:	bl	0 <coda_type_text_new>
    18b4:	mov	r3, r0
    18b8:	str	r3, [r4]
    18bc:	mrc	15, 0, r3, cr13, cr0, {3}
    18c0:	ldr	r2, [pc, #3044]	; 24ac <rinex_init+0x20a0>
    18c4:	ldr	r3, [r3, r2]
    18c8:	add	r3, r3, #184	; 0xb8
    18cc:	ldr	r1, [r3]
    18d0:	mov	r2, #1
    18d4:	mov	r3, #0
    18d8:	mov	r0, r1
    18dc:	bl	0 <coda_type_set_byte_size>
    18e0:	mrc	15, 0, r3, cr13, cr0, {3}
    18e4:	ldr	r2, [pc, #3008]	; 24ac <rinex_init+0x20a0>
    18e8:	ldr	r3, [r3, r2]
    18ec:	add	r3, r3, #184	; 0xb8
    18f0:	ldr	r3, [r3]
    18f4:	mov	r1, #10
    18f8:	mov	r0, r3
    18fc:	bl	0 <coda_type_set_read_type>
    1900:	mrc	15, 0, r3, cr13, cr0, {3}
    1904:	ldr	r2, [pc, #2976]	; 24ac <rinex_init+0x20a0>
    1908:	ldr	r3, [r3, r2]
    190c:	add	r3, r3, #184	; 0xb8
    1910:	ldr	r3, [r3]
    1914:	movw	r1, #0
    1918:	movt	r1, #0
    191c:	mov	r0, r3
    1920:	bl	0 <coda_type_set_description>
    1924:	mrc	15, 0, r3, cr13, cr0, {3}
    1928:	ldr	r2, [pc, #2940]	; 24ac <rinex_init+0x20a0>
    192c:	ldr	r3, [r3, r2]
    1930:	add	r4, r3, #188	; 0xbc
    1934:	mov	r1, #3
    1938:	mov	r0, #8
    193c:	bl	0 <coda_type_number_new>
    1940:	mov	r3, r0
    1944:	str	r3, [r4]
    1948:	mrc	15, 0, r3, cr13, cr0, {3}
    194c:	ldr	r2, [pc, #2904]	; 24ac <rinex_init+0x20a0>
    1950:	ldr	r3, [r3, r2]
    1954:	add	r3, r3, #188	; 0xbc
    1958:	ldr	r3, [r3]
    195c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1960:	mov	r0, r3
    1964:	bl	0 <coda_type_number_set_endianness>
    1968:	mrc	15, 0, r3, cr13, cr0, {3}
    196c:	ldr	r2, [pc, #2872]	; 24ac <rinex_init+0x20a0>
    1970:	ldr	r3, [r3, r2]
    1974:	add	r3, r3, #188	; 0xbc
    1978:	ldr	r1, [r3]
    197c:	mov	r2, #64	; 0x40
    1980:	mov	r3, #0
    1984:	mov	r0, r1
    1988:	bl	0 <coda_type_set_bit_size>
    198c:	mrc	15, 0, r3, cr13, cr0, {3}
    1990:	ldr	r2, [pc, #2836]	; 24ac <rinex_init+0x20a0>
    1994:	ldr	r3, [r3, r2]
    1998:	add	r3, r3, #188	; 0xbc
    199c:	ldr	r3, [r3]
    19a0:	movw	r1, #0
    19a4:	movt	r1, #0
    19a8:	mov	r0, r3
    19ac:	bl	0 <coda_type_set_description>
    19b0:	mrc	15, 0, r3, cr13, cr0, {3}
    19b4:	ldr	r2, [pc, #2800]	; 24ac <rinex_init+0x20a0>
    19b8:	ldr	r3, [r3, r2]
    19bc:	add	r3, r3, #188	; 0xbc
    19c0:	ldr	r3, [r3]
    19c4:	movw	r1, #0
    19c8:	movt	r1, #0
    19cc:	mov	r0, r3
    19d0:	bl	0 <coda_type_number_set_unit>
    19d4:	mrc	15, 0, r3, cr13, cr0, {3}
    19d8:	ldr	r2, [pc, #2764]	; 24ac <rinex_init+0x20a0>
    19dc:	ldr	r3, [r3, r2]
    19e0:	add	r4, r3, #192	; 0xc0
    19e4:	mov	r1, #2
    19e8:	mov	r0, #8
    19ec:	bl	0 <coda_type_number_new>
    19f0:	mov	r3, r0
    19f4:	str	r3, [r4]
    19f8:	mrc	15, 0, r3, cr13, cr0, {3}
    19fc:	ldr	r2, [pc, #2728]	; 24ac <rinex_init+0x20a0>
    1a00:	ldr	r3, [r3, r2]
    1a04:	add	r3, r3, #192	; 0xc0
    1a08:	ldr	r3, [r3]
    1a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a10:	mov	r0, r3
    1a14:	bl	0 <coda_type_number_set_endianness>
    1a18:	mrc	15, 0, r3, cr13, cr0, {3}
    1a1c:	ldr	r2, [pc, #2696]	; 24ac <rinex_init+0x20a0>
    1a20:	ldr	r3, [r3, r2]
    1a24:	add	r3, r3, #192	; 0xc0
    1a28:	ldr	r3, [r3]
    1a2c:	mov	r1, #1
    1a30:	mov	r0, r3
    1a34:	bl	0 <coda_type_set_read_type>
    1a38:	mrc	15, 0, r3, cr13, cr0, {3}
    1a3c:	ldr	r2, [pc, #2664]	; 24ac <rinex_init+0x20a0>
    1a40:	ldr	r3, [r3, r2]
    1a44:	add	r3, r3, #192	; 0xc0
    1a48:	ldr	r1, [r3]
    1a4c:	mov	r2, #8
    1a50:	mov	r3, #0
    1a54:	mov	r0, r1
    1a58:	bl	0 <coda_type_set_bit_size>
    1a5c:	mrc	15, 0, r3, cr13, cr0, {3}
    1a60:	ldr	r2, [pc, #2628]	; 24ac <rinex_init+0x20a0>
    1a64:	ldr	r3, [r3, r2]
    1a68:	add	r3, r3, #192	; 0xc0
    1a6c:	ldr	r3, [r3]
    1a70:	movw	r1, #0
    1a74:	movt	r1, #0
    1a78:	mov	r0, r3
    1a7c:	bl	0 <coda_type_set_description>
    1a80:	mrc	15, 0, r3, cr13, cr0, {3}
    1a84:	ldr	r2, [pc, #2592]	; 24ac <rinex_init+0x20a0>
    1a88:	ldr	r3, [r3, r2]
    1a8c:	add	r4, r3, #196	; 0xc4
    1a90:	mov	r1, #3
    1a94:	mov	r0, #8
    1a98:	bl	0 <coda_type_number_new>
    1a9c:	mov	r3, r0
    1aa0:	str	r3, [r4]
    1aa4:	mrc	15, 0, r3, cr13, cr0, {3}
    1aa8:	ldr	r2, [pc, #2556]	; 24ac <rinex_init+0x20a0>
    1aac:	ldr	r3, [r3, r2]
    1ab0:	add	r3, r3, #196	; 0xc4
    1ab4:	ldr	r3, [r3]
    1ab8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1abc:	mov	r0, r3
    1ac0:	bl	0 <coda_type_number_set_endianness>
    1ac4:	mrc	15, 0, r3, cr13, cr0, {3}
    1ac8:	ldr	r2, [pc, #2524]	; 24ac <rinex_init+0x20a0>
    1acc:	ldr	r3, [r3, r2]
    1ad0:	add	r3, r3, #196	; 0xc4
    1ad4:	ldr	r1, [r3]
    1ad8:	mov	r2, #64	; 0x40
    1adc:	mov	r3, #0
    1ae0:	mov	r0, r1
    1ae4:	bl	0 <coda_type_set_bit_size>
    1ae8:	mrc	15, 0, r3, cr13, cr0, {3}
    1aec:	ldr	r2, [pc, #2488]	; 24ac <rinex_init+0x20a0>
    1af0:	ldr	r3, [r3, r2]
    1af4:	add	r3, r3, #196	; 0xc4
    1af8:	ldr	r3, [r3]
    1afc:	movw	r1, #0
    1b00:	movt	r1, #0
    1b04:	mov	r0, r3
    1b08:	bl	0 <coda_type_set_description>
    1b0c:	mrc	15, 0, r3, cr13, cr0, {3}
    1b10:	ldr	r2, [pc, #2452]	; 24ac <rinex_init+0x20a0>
    1b14:	ldr	r3, [r3, r2]
    1b18:	add	r4, r3, #200	; 0xc8
    1b1c:	mov	r1, #2
    1b20:	mov	r0, #8
    1b24:	bl	0 <coda_type_number_new>
    1b28:	mov	r3, r0
    1b2c:	str	r3, [r4]
    1b30:	mrc	15, 0, r3, cr13, cr0, {3}
    1b34:	ldr	r2, [pc, #2416]	; 24ac <rinex_init+0x20a0>
    1b38:	ldr	r3, [r3, r2]
    1b3c:	add	r3, r3, #200	; 0xc8
    1b40:	ldr	r3, [r3]
    1b44:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b48:	mov	r0, r3
    1b4c:	bl	0 <coda_type_number_set_endianness>
    1b50:	mrc	15, 0, r3, cr13, cr0, {3}
    1b54:	ldr	r2, [pc, #2384]	; 24ac <rinex_init+0x20a0>
    1b58:	ldr	r3, [r3, r2]
    1b5c:	add	r3, r3, #200	; 0xc8
    1b60:	ldr	r3, [r3]
    1b64:	mov	r1, #1
    1b68:	mov	r0, r3
    1b6c:	bl	0 <coda_type_set_read_type>
    1b70:	mrc	15, 0, r3, cr13, cr0, {3}
    1b74:	ldr	r2, [pc, #2352]	; 24ac <rinex_init+0x20a0>
    1b78:	ldr	r3, [r3, r2]
    1b7c:	add	r3, r3, #200	; 0xc8
    1b80:	ldr	r1, [r3]
    1b84:	mov	r2, #8
    1b88:	mov	r3, #0
    1b8c:	mov	r0, r1
    1b90:	bl	0 <coda_type_set_bit_size>
    1b94:	mrc	15, 0, r3, cr13, cr0, {3}
    1b98:	ldr	r2, [pc, #2316]	; 24ac <rinex_init+0x20a0>
    1b9c:	ldr	r3, [r3, r2]
    1ba0:	add	r3, r3, #200	; 0xc8
    1ba4:	ldr	r3, [r3]
    1ba8:	movw	r1, #0
    1bac:	movt	r1, #0
    1bb0:	mov	r0, r3
    1bb4:	bl	0 <coda_type_set_description>
    1bb8:	mrc	15, 0, r3, cr13, cr0, {3}
    1bbc:	ldr	r2, [pc, #2280]	; 24ac <rinex_init+0x20a0>
    1bc0:	ldr	r3, [r3, r2]
    1bc4:	add	r4, r3, #204	; 0xcc
    1bc8:	mov	r1, #2
    1bcc:	mov	r0, #8
    1bd0:	bl	0 <coda_type_number_new>
    1bd4:	mov	r3, r0
    1bd8:	str	r3, [r4]
    1bdc:	mrc	15, 0, r3, cr13, cr0, {3}
    1be0:	ldr	r2, [pc, #2244]	; 24ac <rinex_init+0x20a0>
    1be4:	ldr	r3, [r3, r2]
    1be8:	add	r3, r3, #204	; 0xcc
    1bec:	ldr	r3, [r3]
    1bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bf4:	mov	r0, r3
    1bf8:	bl	0 <coda_type_number_set_endianness>
    1bfc:	mrc	15, 0, r3, cr13, cr0, {3}
    1c00:	ldr	r2, [pc, #2212]	; 24ac <rinex_init+0x20a0>
    1c04:	ldr	r3, [r3, r2]
    1c08:	add	r3, r3, #204	; 0xcc
    1c0c:	ldr	r3, [r3]
    1c10:	mov	r1, #1
    1c14:	mov	r0, r3
    1c18:	bl	0 <coda_type_set_read_type>
    1c1c:	mrc	15, 0, r3, cr13, cr0, {3}
    1c20:	ldr	r2, [pc, #2180]	; 24ac <rinex_init+0x20a0>
    1c24:	ldr	r3, [r3, r2]
    1c28:	add	r3, r3, #204	; 0xcc
    1c2c:	ldr	r1, [r3]
    1c30:	mov	r2, #8
    1c34:	mov	r3, #0
    1c38:	mov	r0, r1
    1c3c:	bl	0 <coda_type_set_bit_size>
    1c40:	mrc	15, 0, r3, cr13, cr0, {3}
    1c44:	ldr	r2, [pc, #2144]	; 24ac <rinex_init+0x20a0>
    1c48:	ldr	r3, [r3, r2]
    1c4c:	add	r3, r3, #204	; 0xcc
    1c50:	ldr	r3, [r3]
    1c54:	movw	r1, #0
    1c58:	movt	r1, #0
    1c5c:	mov	r0, r3
    1c60:	bl	0 <coda_type_set_description>
    1c64:	mrc	15, 0, r3, cr13, cr0, {3}
    1c68:	ldr	r2, [pc, #2108]	; 24ac <rinex_init+0x20a0>
    1c6c:	ldr	r3, [r3, r2]
    1c70:	add	r4, r3, #208	; 0xd0
    1c74:	mov	r0, #8
    1c78:	bl	0 <coda_type_record_new>
    1c7c:	mov	r3, r0
    1c80:	str	r3, [r4]
    1c84:	movw	r0, #0
    1c88:	movt	r0, #0
    1c8c:	bl	0 <coda_type_record_field_new>
    1c90:	str	r0, [fp, #-24]	; 0xffffffe8
    1c94:	mrc	15, 0, r3, cr13, cr0, {3}
    1c98:	ldr	r2, [pc, #2060]	; 24ac <rinex_init+0x20a0>
    1c9c:	ldr	r3, [r3, r2]
    1ca0:	add	r3, r3, #196	; 0xc4
    1ca4:	ldr	r3, [r3]
    1ca8:	mov	r1, r3
    1cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1cb0:	bl	0 <coda_type_record_field_set_type>
    1cb4:	mrc	15, 0, r3, cr13, cr0, {3}
    1cb8:	ldr	r2, [pc, #2028]	; 24ac <rinex_init+0x20a0>
    1cbc:	ldr	r3, [r3, r2]
    1cc0:	add	r3, r3, #208	; 0xd0
    1cc4:	ldr	r3, [r3]
    1cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ccc:	mov	r0, r3
    1cd0:	bl	0 <coda_type_record_add_field>
    1cd4:	movw	r0, #0
    1cd8:	movt	r0, #0
    1cdc:	bl	0 <coda_type_record_field_new>
    1ce0:	str	r0, [fp, #-24]	; 0xffffffe8
    1ce4:	mrc	15, 0, r3, cr13, cr0, {3}
    1ce8:	ldr	r2, [pc, #1980]	; 24ac <rinex_init+0x20a0>
    1cec:	ldr	r3, [r3, r2]
    1cf0:	add	r3, r3, #200	; 0xc8
    1cf4:	ldr	r3, [r3]
    1cf8:	mov	r1, r3
    1cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d00:	bl	0 <coda_type_record_field_set_type>
    1d04:	mrc	15, 0, r3, cr13, cr0, {3}
    1d08:	ldr	r2, [pc, #1948]	; 24ac <rinex_init+0x20a0>
    1d0c:	ldr	r3, [r3, r2]
    1d10:	add	r3, r3, #208	; 0xd0
    1d14:	ldr	r3, [r3]
    1d18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d1c:	mov	r0, r3
    1d20:	bl	0 <coda_type_record_add_field>
    1d24:	movw	r0, #0
    1d28:	movt	r0, #0
    1d2c:	bl	0 <coda_type_record_field_new>
    1d30:	str	r0, [fp, #-24]	; 0xffffffe8
    1d34:	mrc	15, 0, r3, cr13, cr0, {3}
    1d38:	ldr	r2, [pc, #1900]	; 24ac <rinex_init+0x20a0>
    1d3c:	ldr	r3, [r3, r2]
    1d40:	add	r3, r3, #204	; 0xcc
    1d44:	ldr	r3, [r3]
    1d48:	mov	r1, r3
    1d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d50:	bl	0 <coda_type_record_field_set_type>
    1d54:	mrc	15, 0, r3, cr13, cr0, {3}
    1d58:	ldr	r2, [pc, #1868]	; 24ac <rinex_init+0x20a0>
    1d5c:	ldr	r3, [r3, r2]
    1d60:	add	r3, r3, #208	; 0xd0
    1d64:	ldr	r3, [r3]
    1d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1d6c:	mov	r0, r3
    1d70:	bl	0 <coda_type_record_add_field>
    1d74:	mrc	15, 0, r3, cr13, cr0, {3}
    1d78:	ldr	r2, [pc, #1836]	; 24ac <rinex_init+0x20a0>
    1d7c:	ldr	r3, [r3, r2]
    1d80:	add	r4, r3, #212	; 0xd4
    1d84:	mov	r0, #8
    1d88:	bl	0 <coda_type_record_new>
    1d8c:	mov	r3, r0
    1d90:	str	r3, [r4]
    1d94:	movw	r0, #0
    1d98:	movt	r0, #0
    1d9c:	bl	0 <coda_type_record_field_new>
    1da0:	str	r0, [fp, #-24]	; 0xffffffe8
    1da4:	mrc	15, 0, r3, cr13, cr0, {3}
    1da8:	ldr	r2, [pc, #1788]	; 24ac <rinex_init+0x20a0>
    1dac:	ldr	r3, [r3, r2]
    1db0:	ldr	r3, [r3]
    1db4:	mov	r1, r3
    1db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dbc:	bl	0 <coda_type_record_field_set_type>
    1dc0:	mrc	15, 0, r3, cr13, cr0, {3}
    1dc4:	ldr	r2, [pc, #1760]	; 24ac <rinex_init+0x20a0>
    1dc8:	ldr	r3, [r3, r2]
    1dcc:	add	r3, r3, #212	; 0xd4
    1dd0:	ldr	r3, [r3]
    1dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1dd8:	mov	r0, r3
    1ddc:	bl	0 <coda_type_record_add_field>
    1de0:	movw	r0, #0
    1de4:	movt	r0, #0
    1de8:	bl	0 <coda_type_record_field_new>
    1dec:	str	r0, [fp, #-24]	; 0xffffffe8
    1df0:	mrc	15, 0, r3, cr13, cr0, {3}
    1df4:	ldr	r2, [pc, #1712]	; 24ac <rinex_init+0x20a0>
    1df8:	ldr	r3, [r3, r2]
    1dfc:	add	r3, r3, #4
    1e00:	ldr	r3, [r3]
    1e04:	mov	r1, r3
    1e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e0c:	bl	0 <coda_type_record_field_set_type>
    1e10:	mrc	15, 0, r3, cr13, cr0, {3}
    1e14:	ldr	r2, [pc, #1680]	; 24ac <rinex_init+0x20a0>
    1e18:	ldr	r3, [r3, r2]
    1e1c:	add	r3, r3, #212	; 0xd4
    1e20:	ldr	r3, [r3]
    1e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e28:	mov	r0, r3
    1e2c:	bl	0 <coda_type_record_add_field>
    1e30:	movw	r0, #0
    1e34:	movt	r0, #0
    1e38:	bl	0 <coda_type_record_field_new>
    1e3c:	str	r0, [fp, #-24]	; 0xffffffe8
    1e40:	mrc	15, 0, r3, cr13, cr0, {3}
    1e44:	ldr	r2, [pc, #1632]	; 24ac <rinex_init+0x20a0>
    1e48:	ldr	r3, [r3, r2]
    1e4c:	add	r3, r3, #8
    1e50:	ldr	r3, [r3]
    1e54:	mov	r1, r3
    1e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e5c:	bl	0 <coda_type_record_field_set_type>
    1e60:	mrc	15, 0, r3, cr13, cr0, {3}
    1e64:	ldr	r2, [pc, #1600]	; 24ac <rinex_init+0x20a0>
    1e68:	ldr	r3, [r3, r2]
    1e6c:	add	r3, r3, #212	; 0xd4
    1e70:	ldr	r3, [r3]
    1e74:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1e78:	mov	r0, r3
    1e7c:	bl	0 <coda_type_record_add_field>
    1e80:	movw	r0, #0
    1e84:	movt	r0, #0
    1e88:	bl	0 <coda_type_record_field_new>
    1e8c:	str	r0, [fp, #-24]	; 0xffffffe8
    1e90:	mrc	15, 0, r3, cr13, cr0, {3}
    1e94:	ldr	r2, [pc, #1552]	; 24ac <rinex_init+0x20a0>
    1e98:	ldr	r3, [r3, r2]
    1e9c:	add	r3, r3, #12
    1ea0:	ldr	r3, [r3]
    1ea4:	mov	r1, r3
    1ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1eac:	bl	0 <coda_type_record_field_set_type>
    1eb0:	mrc	15, 0, r3, cr13, cr0, {3}
    1eb4:	ldr	r2, [pc, #1520]	; 24ac <rinex_init+0x20a0>
    1eb8:	ldr	r3, [r3, r2]
    1ebc:	add	r3, r3, #212	; 0xd4
    1ec0:	ldr	r3, [r3]
    1ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1ec8:	mov	r0, r3
    1ecc:	bl	0 <coda_type_record_add_field>
    1ed0:	movw	r0, #0
    1ed4:	movt	r0, #0
    1ed8:	bl	0 <coda_type_record_field_new>
    1edc:	str	r0, [fp, #-24]	; 0xffffffe8
    1ee0:	mrc	15, 0, r3, cr13, cr0, {3}
    1ee4:	ldr	r2, [pc, #1472]	; 24ac <rinex_init+0x20a0>
    1ee8:	ldr	r3, [r3, r2]
    1eec:	add	r3, r3, #16
    1ef0:	ldr	r3, [r3]
    1ef4:	mov	r1, r3
    1ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1efc:	bl	0 <coda_type_record_field_set_type>
    1f00:	mrc	15, 0, r3, cr13, cr0, {3}
    1f04:	ldr	r2, [pc, #1440]	; 24ac <rinex_init+0x20a0>
    1f08:	ldr	r3, [r3, r2]
    1f0c:	add	r3, r3, #212	; 0xd4
    1f10:	ldr	r3, [r3]
    1f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f18:	mov	r0, r3
    1f1c:	bl	0 <coda_type_record_add_field>
    1f20:	movw	r0, #0
    1f24:	movt	r0, #0
    1f28:	bl	0 <coda_type_record_field_new>
    1f2c:	str	r0, [fp, #-24]	; 0xffffffe8
    1f30:	mrc	15, 0, r3, cr13, cr0, {3}
    1f34:	ldr	r2, [pc, #1392]	; 24ac <rinex_init+0x20a0>
    1f38:	ldr	r3, [r3, r2]
    1f3c:	add	r3, r3, #20
    1f40:	ldr	r3, [r3]
    1f44:	mov	r1, r3
    1f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1f4c:	bl	0 <coda_type_record_field_set_type>
    1f50:	mrc	15, 0, r3, cr13, cr0, {3}
    1f54:	ldr	r2, [pc, #1360]	; 24ac <rinex_init+0x20a0>
    1f58:	ldr	r3, [r3, r2]
    1f5c:	add	r3, r3, #212	; 0xd4
    1f60:	ldr	r3, [r3]
    1f64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1f68:	mov	r0, r3
    1f6c:	bl	0 <coda_type_record_add_field>
    1f70:	movw	r0, #0
    1f74:	movt	r0, #0
    1f78:	bl	0 <coda_type_record_field_new>
    1f7c:	str	r0, [fp, #-24]	; 0xffffffe8
    1f80:	mrc	15, 0, r3, cr13, cr0, {3}
    1f84:	ldr	r2, [pc, #1312]	; 24ac <rinex_init+0x20a0>
    1f88:	ldr	r3, [r3, r2]
    1f8c:	add	r3, r3, #28
    1f90:	ldr	r3, [r3]
    1f94:	mov	r1, r3
    1f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1f9c:	bl	0 <coda_type_record_field_set_type>
    1fa0:	mrc	15, 0, r3, cr13, cr0, {3}
    1fa4:	ldr	r2, [pc, #1280]	; 24ac <rinex_init+0x20a0>
    1fa8:	ldr	r3, [r3, r2]
    1fac:	add	r3, r3, #212	; 0xd4
    1fb0:	ldr	r3, [r3]
    1fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1fb8:	mov	r0, r3
    1fbc:	bl	0 <coda_type_record_add_field>
    1fc0:	movw	r0, #0
    1fc4:	movt	r0, #0
    1fc8:	bl	0 <coda_type_record_field_new>
    1fcc:	str	r0, [fp, #-24]	; 0xffffffe8
    1fd0:	mrc	15, 0, r3, cr13, cr0, {3}
    1fd4:	ldr	r2, [pc, #1232]	; 24ac <rinex_init+0x20a0>
    1fd8:	ldr	r3, [r3, r2]
    1fdc:	add	r3, r3, #32
    1fe0:	ldr	r3, [r3]
    1fe4:	mov	r1, r3
    1fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1fec:	bl	0 <coda_type_record_field_set_type>
    1ff0:	mrc	15, 0, r3, cr13, cr0, {3}
    1ff4:	ldr	r2, [pc, #1200]	; 24ac <rinex_init+0x20a0>
    1ff8:	ldr	r3, [r3, r2]
    1ffc:	add	r3, r3, #212	; 0xd4
    2000:	ldr	r3, [r3]
    2004:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2008:	mov	r0, r3
    200c:	bl	0 <coda_type_record_add_field>
    2010:	movw	r0, #0
    2014:	movt	r0, #0
    2018:	bl	0 <coda_type_record_field_new>
    201c:	str	r0, [fp, #-24]	; 0xffffffe8
    2020:	mrc	15, 0, r3, cr13, cr0, {3}
    2024:	ldr	r2, [pc, #1152]	; 24ac <rinex_init+0x20a0>
    2028:	ldr	r3, [r3, r2]
    202c:	add	r3, r3, #36	; 0x24
    2030:	ldr	r3, [r3]
    2034:	mov	r1, r3
    2038:	ldr	r0, [fp, #-24]	; 0xffffffe8
    203c:	bl	0 <coda_type_record_field_set_type>
    2040:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2044:	bl	0 <coda_type_record_field_set_optional>
    2048:	mrc	15, 0, r3, cr13, cr0, {3}
    204c:	ldr	r2, [pc, #1112]	; 24ac <rinex_init+0x20a0>
    2050:	ldr	r3, [r3, r2]
    2054:	add	r3, r3, #212	; 0xd4
    2058:	ldr	r3, [r3]
    205c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2060:	mov	r0, r3
    2064:	bl	0 <coda_type_record_add_field>
    2068:	movw	r0, #0
    206c:	movt	r0, #0
    2070:	bl	0 <coda_type_record_field_new>
    2074:	str	r0, [fp, #-24]	; 0xffffffe8
    2078:	mrc	15, 0, r3, cr13, cr0, {3}
    207c:	ldr	r2, [pc, #1064]	; 24ac <rinex_init+0x20a0>
    2080:	ldr	r3, [r3, r2]
    2084:	add	r3, r3, #40	; 0x28
    2088:	ldr	r3, [r3]
    208c:	mov	r1, r3
    2090:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2094:	bl	0 <coda_type_record_field_set_type>
    2098:	ldr	r0, [fp, #-24]	; 0xffffffe8
    209c:	bl	0 <coda_type_record_field_set_optional>
    20a0:	mrc	15, 0, r3, cr13, cr0, {3}
    20a4:	ldr	r2, [pc, #1024]	; 24ac <rinex_init+0x20a0>
    20a8:	ldr	r3, [r3, r2]
    20ac:	add	r3, r3, #212	; 0xd4
    20b0:	ldr	r3, [r3]
    20b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    20b8:	mov	r0, r3
    20bc:	bl	0 <coda_type_record_add_field>
    20c0:	movw	r0, #0
    20c4:	movt	r0, #0
    20c8:	bl	0 <coda_type_record_field_new>
    20cc:	str	r0, [fp, #-24]	; 0xffffffe8
    20d0:	mrc	15, 0, r3, cr13, cr0, {3}
    20d4:	ldr	r2, [pc, #976]	; 24ac <rinex_init+0x20a0>
    20d8:	ldr	r3, [r3, r2]
    20dc:	add	r3, r3, #44	; 0x2c
    20e0:	ldr	r3, [r3]
    20e4:	mov	r1, r3
    20e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    20ec:	bl	0 <coda_type_record_field_set_type>
    20f0:	mrc	15, 0, r3, cr13, cr0, {3}
    20f4:	ldr	r2, [pc, #944]	; 24ac <rinex_init+0x20a0>
    20f8:	ldr	r3, [r3, r2]
    20fc:	add	r3, r3, #212	; 0xd4
    2100:	ldr	r3, [r3]
    2104:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2108:	mov	r0, r3
    210c:	bl	0 <coda_type_record_add_field>
    2110:	movw	r0, #0
    2114:	movt	r0, #0
    2118:	bl	0 <coda_type_record_field_new>
    211c:	str	r0, [fp, #-24]	; 0xffffffe8
    2120:	mrc	15, 0, r3, cr13, cr0, {3}
    2124:	ldr	r2, [pc, #896]	; 24ac <rinex_init+0x20a0>
    2128:	ldr	r3, [r3, r2]
    212c:	add	r3, r3, #48	; 0x30
    2130:	ldr	r3, [r3]
    2134:	mov	r1, r3
    2138:	ldr	r0, [fp, #-24]	; 0xffffffe8
    213c:	bl	0 <coda_type_record_field_set_type>
    2140:	mrc	15, 0, r3, cr13, cr0, {3}
    2144:	ldr	r2, [pc, #864]	; 24ac <rinex_init+0x20a0>
    2148:	ldr	r3, [r3, r2]
    214c:	add	r3, r3, #212	; 0xd4
    2150:	ldr	r3, [r3]
    2154:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2158:	mov	r0, r3
    215c:	bl	0 <coda_type_record_add_field>
    2160:	movw	r0, #0
    2164:	movt	r0, #0
    2168:	bl	0 <coda_type_record_field_new>
    216c:	str	r0, [fp, #-24]	; 0xffffffe8
    2170:	mrc	15, 0, r3, cr13, cr0, {3}
    2174:	ldr	r2, [pc, #816]	; 24ac <rinex_init+0x20a0>
    2178:	ldr	r3, [r3, r2]
    217c:	add	r3, r3, #52	; 0x34
    2180:	ldr	r3, [r3]
    2184:	mov	r1, r3
    2188:	ldr	r0, [fp, #-24]	; 0xffffffe8
    218c:	bl	0 <coda_type_record_field_set_type>
    2190:	mrc	15, 0, r3, cr13, cr0, {3}
    2194:	ldr	r2, [pc, #784]	; 24ac <rinex_init+0x20a0>
    2198:	ldr	r3, [r3, r2]
    219c:	add	r3, r3, #212	; 0xd4
    21a0:	ldr	r3, [r3]
    21a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    21a8:	mov	r0, r3
    21ac:	bl	0 <coda_type_record_add_field>
    21b0:	movw	r0, #0
    21b4:	movt	r0, #0
    21b8:	bl	0 <coda_type_record_field_new>
    21bc:	str	r0, [fp, #-24]	; 0xffffffe8
    21c0:	mrc	15, 0, r3, cr13, cr0, {3}
    21c4:	ldr	r2, [pc, #736]	; 24ac <rinex_init+0x20a0>
    21c8:	ldr	r3, [r3, r2]
    21cc:	add	r3, r3, #56	; 0x38
    21d0:	ldr	r3, [r3]
    21d4:	mov	r1, r3
    21d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    21dc:	bl	0 <coda_type_record_field_set_type>
    21e0:	mrc	15, 0, r3, cr13, cr0, {3}
    21e4:	ldr	r2, [pc, #704]	; 24ac <rinex_init+0x20a0>
    21e8:	ldr	r3, [r3, r2]
    21ec:	add	r3, r3, #212	; 0xd4
    21f0:	ldr	r3, [r3]
    21f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    21f8:	mov	r0, r3
    21fc:	bl	0 <coda_type_record_add_field>
    2200:	movw	r0, #0
    2204:	movt	r0, #0
    2208:	bl	0 <coda_type_record_field_new>
    220c:	str	r0, [fp, #-24]	; 0xffffffe8
    2210:	mrc	15, 0, r3, cr13, cr0, {3}
    2214:	ldr	r2, [pc, #656]	; 24ac <rinex_init+0x20a0>
    2218:	ldr	r3, [r3, r2]
    221c:	add	r3, r3, #60	; 0x3c
    2220:	ldr	r3, [r3]
    2224:	mov	r1, r3
    2228:	ldr	r0, [fp, #-24]	; 0xffffffe8
    222c:	bl	0 <coda_type_record_field_set_type>
    2230:	mrc	15, 0, r3, cr13, cr0, {3}
    2234:	ldr	r2, [pc, #624]	; 24ac <rinex_init+0x20a0>
    2238:	ldr	r3, [r3, r2]
    223c:	add	r3, r3, #212	; 0xd4
    2240:	ldr	r3, [r3]
    2244:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2248:	mov	r0, r3
    224c:	bl	0 <coda_type_record_add_field>
    2250:	movw	r0, #0
    2254:	movt	r0, #0
    2258:	bl	0 <coda_type_record_field_new>
    225c:	str	r0, [fp, #-24]	; 0xffffffe8
    2260:	mrc	15, 0, r3, cr13, cr0, {3}
    2264:	ldr	r2, [pc, #576]	; 24ac <rinex_init+0x20a0>
    2268:	ldr	r3, [r3, r2]
    226c:	add	r3, r3, #64	; 0x40
    2270:	ldr	r3, [r3]
    2274:	mov	r1, r3
    2278:	ldr	r0, [fp, #-24]	; 0xffffffe8
    227c:	bl	0 <coda_type_record_field_set_type>
    2280:	mrc	15, 0, r3, cr13, cr0, {3}
    2284:	ldr	r2, [pc, #544]	; 24ac <rinex_init+0x20a0>
    2288:	ldr	r3, [r3, r2]
    228c:	add	r3, r3, #212	; 0xd4
    2290:	ldr	r3, [r3]
    2294:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2298:	mov	r0, r3
    229c:	bl	0 <coda_type_record_add_field>
    22a0:	movw	r0, #0
    22a4:	movt	r0, #0
    22a8:	bl	0 <coda_type_record_field_new>
    22ac:	str	r0, [fp, #-24]	; 0xffffffe8
    22b0:	mrc	15, 0, r3, cr13, cr0, {3}
    22b4:	ldr	r2, [pc, #496]	; 24ac <rinex_init+0x20a0>
    22b8:	ldr	r3, [r3, r2]
    22bc:	add	r3, r3, #68	; 0x44
    22c0:	ldr	r3, [r3]
    22c4:	mov	r1, r3
    22c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    22cc:	bl	0 <coda_type_record_field_set_type>
    22d0:	mrc	15, 0, r3, cr13, cr0, {3}
    22d4:	ldr	r2, [pc, #464]	; 24ac <rinex_init+0x20a0>
    22d8:	ldr	r3, [r3, r2]
    22dc:	add	r3, r3, #212	; 0xd4
    22e0:	ldr	r3, [r3]
    22e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    22e8:	mov	r0, r3
    22ec:	bl	0 <coda_type_record_add_field>
    22f0:	movw	r0, #0
    22f4:	movt	r0, #0
    22f8:	bl	0 <coda_type_record_field_new>
    22fc:	str	r0, [fp, #-24]	; 0xffffffe8
    2300:	mrc	15, 0, r3, cr13, cr0, {3}
    2304:	ldr	r2, [pc, #416]	; 24ac <rinex_init+0x20a0>
    2308:	ldr	r3, [r3, r2]
    230c:	add	r3, r3, #72	; 0x48
    2310:	ldr	r3, [r3]
    2314:	mov	r1, r3
    2318:	ldr	r0, [fp, #-24]	; 0xffffffe8
    231c:	bl	0 <coda_type_record_field_set_type>
    2320:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2324:	bl	0 <coda_type_record_field_set_optional>
    2328:	mrc	15, 0, r3, cr13, cr0, {3}
    232c:	ldr	r2, [pc, #376]	; 24ac <rinex_init+0x20a0>
    2330:	ldr	r3, [r3, r2]
    2334:	add	r3, r3, #212	; 0xd4
    2338:	ldr	r3, [r3]
    233c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2340:	mov	r0, r3
    2344:	bl	0 <coda_type_record_add_field>
    2348:	movw	r0, #0
    234c:	movt	r0, #0
    2350:	bl	0 <coda_type_record_field_new>
    2354:	str	r0, [fp, #-24]	; 0xffffffe8
    2358:	mrc	15, 0, r3, cr13, cr0, {3}
    235c:	ldr	r2, [pc, #328]	; 24ac <rinex_init+0x20a0>
    2360:	ldr	r3, [r3, r2]
    2364:	add	r3, r3, #76	; 0x4c
    2368:	ldr	r3, [r3]
    236c:	mov	r1, r3
    2370:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2374:	bl	0 <coda_type_record_field_set_type>
    2378:	ldr	r0, [fp, #-24]	; 0xffffffe8
    237c:	bl	0 <coda_type_record_field_set_optional>
    2380:	mrc	15, 0, r3, cr13, cr0, {3}
    2384:	ldr	r2, [pc, #288]	; 24ac <rinex_init+0x20a0>
    2388:	ldr	r3, [r3, r2]
    238c:	add	r3, r3, #212	; 0xd4
    2390:	ldr	r3, [r3]
    2394:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2398:	mov	r0, r3
    239c:	bl	0 <coda_type_record_add_field>
    23a0:	movw	r0, #0
    23a4:	movt	r0, #0
    23a8:	bl	0 <coda_type_record_field_new>
    23ac:	str	r0, [fp, #-24]	; 0xffffffe8
    23b0:	mrc	15, 0, r3, cr13, cr0, {3}
    23b4:	ldr	r2, [pc, #240]	; 24ac <rinex_init+0x20a0>
    23b8:	ldr	r3, [r3, r2]
    23bc:	add	r3, r3, #80	; 0x50
    23c0:	ldr	r3, [r3]
    23c4:	mov	r1, r3
    23c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23cc:	bl	0 <coda_type_record_field_set_type>
    23d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    23d4:	bl	0 <coda_type_record_field_set_optional>
    23d8:	mrc	15, 0, r3, cr13, cr0, {3}
    23dc:	ldr	r2, [pc, #200]	; 24ac <rinex_init+0x20a0>
    23e0:	ldr	r3, [r3, r2]
    23e4:	add	r3, r3, #212	; 0xd4
    23e8:	ldr	r3, [r3]
    23ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    23f0:	mov	r0, r3
    23f4:	bl	0 <coda_type_record_add_field>
    23f8:	movw	r0, #0
    23fc:	movt	r0, #0
    2400:	bl	0 <coda_type_record_field_new>
    2404:	str	r0, [fp, #-24]	; 0xffffffe8
    2408:	mrc	15, 0, r3, cr13, cr0, {3}
    240c:	ldr	r2, [pc, #152]	; 24ac <rinex_init+0x20a0>
    2410:	ldr	r3, [r3, r2]
    2414:	add	r3, r3, #84	; 0x54
    2418:	ldr	r3, [r3]
    241c:	mov	r1, r3
    2420:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2424:	bl	0 <coda_type_record_field_set_type>
    2428:	mrc	15, 0, r3, cr13, cr0, {3}
    242c:	ldr	r2, [pc, #120]	; 24ac <rinex_init+0x20a0>
    2430:	ldr	r3, [r3, r2]
    2434:	add	r3, r3, #212	; 0xd4
    2438:	ldr	r3, [r3]
    243c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2440:	mov	r0, r3
    2444:	bl	0 <coda_type_record_add_field>
    2448:	movw	r0, #0
    244c:	movt	r0, #0
    2450:	bl	0 <coda_type_record_field_new>
    2454:	str	r0, [fp, #-24]	; 0xffffffe8
    2458:	mrc	15, 0, r3, cr13, cr0, {3}
    245c:	ldr	r2, [pc, #72]	; 24ac <rinex_init+0x20a0>
    2460:	ldr	r3, [r3, r2]
    2464:	add	r3, r3, #88	; 0x58
    2468:	ldr	r3, [r3]
    246c:	mov	r1, r3
    2470:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2474:	bl	0 <coda_type_record_field_set_type>
    2478:	mrc	15, 0, r3, cr13, cr0, {3}
    247c:	ldr	r2, [pc, #40]	; 24ac <rinex_init+0x20a0>
    2480:	ldr	r3, [r3, r2]
    2484:	add	r3, r3, #212	; 0xd4
    2488:	ldr	r3, [r3]
    248c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2490:	mov	r0, r3
    2494:	bl	0 <coda_type_record_add_field>
    2498:	movw	r0, #0
    249c:	movt	r0, #0
    24a0:	bl	0 <coda_type_record_field_new>
    24a4:	str	r0, [fp, #-24]	; 0xffffffe8
    24a8:	b	24b4 <rinex_init+0x20a8>
	...
    24b4:	mrc	15, 0, r3, cr13, cr0, {3}
    24b8:	ldr	r2, [pc, #-16]	; 24b0 <rinex_init+0x20a4>
    24bc:	ldr	r3, [r3, r2]
    24c0:	add	r3, r3, #92	; 0x5c
    24c4:	ldr	r3, [r3]
    24c8:	mov	r1, r3
    24cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24d0:	bl	0 <coda_type_record_field_set_type>
    24d4:	mrc	15, 0, r3, cr13, cr0, {3}
    24d8:	ldr	r2, [pc, #-48]	; 24b0 <rinex_init+0x20a4>
    24dc:	ldr	r3, [r3, r2]
    24e0:	add	r3, r3, #212	; 0xd4
    24e4:	ldr	r3, [r3]
    24e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    24ec:	mov	r0, r3
    24f0:	bl	0 <coda_type_record_add_field>
    24f4:	movw	r0, #0
    24f8:	movt	r0, #0
    24fc:	bl	0 <coda_type_record_field_new>
    2500:	str	r0, [fp, #-24]	; 0xffffffe8
    2504:	mrc	15, 0, r3, cr13, cr0, {3}
    2508:	ldr	r2, [pc, #-96]	; 24b0 <rinex_init+0x20a4>
    250c:	ldr	r3, [r3, r2]
    2510:	add	r3, r3, #128	; 0x80
    2514:	ldr	r3, [r3]
    2518:	mov	r1, r3
    251c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2520:	bl	0 <coda_type_record_field_set_type>
    2524:	mrc	15, 0, r3, cr13, cr0, {3}
    2528:	ldr	r2, [pc, #-128]	; 24b0 <rinex_init+0x20a4>
    252c:	ldr	r3, [r3, r2]
    2530:	add	r3, r3, #212	; 0xd4
    2534:	ldr	r3, [r3]
    2538:	ldr	r1, [fp, #-24]	; 0xffffffe8
    253c:	mov	r0, r3
    2540:	bl	0 <coda_type_record_add_field>
    2544:	movw	r0, #0
    2548:	movt	r0, #0
    254c:	bl	0 <coda_type_record_field_new>
    2550:	str	r0, [fp, #-24]	; 0xffffffe8
    2554:	mrc	15, 0, r3, cr13, cr0, {3}
    2558:	ldr	r2, [pc, #-176]	; 24b0 <rinex_init+0x20a4>
    255c:	ldr	r3, [r3, r2]
    2560:	add	r3, r3, #132	; 0x84
    2564:	ldr	r3, [r3]
    2568:	mov	r1, r3
    256c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2570:	bl	0 <coda_type_record_field_set_type>
    2574:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2578:	bl	0 <coda_type_record_field_set_optional>
    257c:	mrc	15, 0, r3, cr13, cr0, {3}
    2580:	ldr	r2, [pc, #-216]	; 24b0 <rinex_init+0x20a4>
    2584:	ldr	r3, [r3, r2]
    2588:	add	r3, r3, #212	; 0xd4
    258c:	ldr	r3, [r3]
    2590:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2594:	mov	r0, r3
    2598:	bl	0 <coda_type_record_add_field>
    259c:	movw	r0, #0
    25a0:	movt	r0, #0
    25a4:	bl	0 <coda_type_record_field_new>
    25a8:	str	r0, [fp, #-24]	; 0xffffffe8
    25ac:	mrc	15, 0, r3, cr13, cr0, {3}
    25b0:	ldr	r2, [pc, #-264]	; 24b0 <rinex_init+0x20a4>
    25b4:	ldr	r3, [r3, r2]
    25b8:	add	r3, r3, #136	; 0x88
    25bc:	ldr	r3, [r3]
    25c0:	mov	r1, r3
    25c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    25c8:	bl	0 <coda_type_record_field_set_type>
    25cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    25d0:	bl	0 <coda_type_record_field_set_optional>
    25d4:	mrc	15, 0, r3, cr13, cr0, {3}
    25d8:	ldr	r2, [pc, #-304]	; 24b0 <rinex_init+0x20a4>
    25dc:	ldr	r3, [r3, r2]
    25e0:	add	r3, r3, #212	; 0xd4
    25e4:	ldr	r3, [r3]
    25e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    25ec:	mov	r0, r3
    25f0:	bl	0 <coda_type_record_add_field>
    25f4:	movw	r0, #0
    25f8:	movt	r0, #0
    25fc:	bl	0 <coda_type_record_field_new>
    2600:	str	r0, [fp, #-24]	; 0xffffffe8
    2604:	mrc	15, 0, r3, cr13, cr0, {3}
    2608:	ldr	r2, [pc, #-352]	; 24b0 <rinex_init+0x20a4>
    260c:	ldr	r3, [r3, r2]
    2610:	add	r3, r3, #140	; 0x8c
    2614:	ldr	r3, [r3]
    2618:	mov	r1, r3
    261c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2620:	bl	0 <coda_type_record_field_set_type>
    2624:	mrc	15, 0, r3, cr13, cr0, {3}
    2628:	ldr	r2, [pc, #-384]	; 24b0 <rinex_init+0x20a4>
    262c:	ldr	r3, [r3, r2]
    2630:	add	r3, r3, #212	; 0xd4
    2634:	ldr	r3, [r3]
    2638:	ldr	r1, [fp, #-24]	; 0xffffffe8
    263c:	mov	r0, r3
    2640:	bl	0 <coda_type_record_add_field>
    2644:	movw	r0, #0
    2648:	movt	r0, #0
    264c:	bl	0 <coda_type_record_field_new>
    2650:	str	r0, [fp, #-24]	; 0xffffffe8
    2654:	mrc	15, 0, r3, cr13, cr0, {3}
    2658:	ldr	r2, [pc, #-432]	; 24b0 <rinex_init+0x20a4>
    265c:	ldr	r3, [r3, r2]
    2660:	add	r3, r3, #156	; 0x9c
    2664:	ldr	r3, [r3]
    2668:	mov	r1, r3
    266c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2670:	bl	0 <coda_type_record_field_set_type>
    2674:	mrc	15, 0, r3, cr13, cr0, {3}
    2678:	ldr	r2, [pc, #-464]	; 24b0 <rinex_init+0x20a4>
    267c:	ldr	r3, [r3, r2]
    2680:	add	r3, r3, #212	; 0xd4
    2684:	ldr	r3, [r3]
    2688:	ldr	r1, [fp, #-24]	; 0xffffffe8
    268c:	mov	r0, r3
    2690:	bl	0 <coda_type_record_add_field>
    2694:	movw	r0, #0
    2698:	movt	r0, #0
    269c:	bl	0 <coda_type_record_field_new>
    26a0:	str	r0, [fp, #-24]	; 0xffffffe8
    26a4:	mrc	15, 0, r3, cr13, cr0, {3}
    26a8:	ldr	r2, [pc, #-512]	; 24b0 <rinex_init+0x20a4>
    26ac:	ldr	r3, [r3, r2]
    26b0:	add	r3, r3, #148	; 0x94
    26b4:	ldr	r3, [r3]
    26b8:	mov	r1, r3
    26bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    26c0:	bl	0 <coda_type_record_field_set_type>
    26c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    26c8:	bl	0 <coda_type_record_field_set_optional>
    26cc:	mrc	15, 0, r3, cr13, cr0, {3}
    26d0:	ldr	r2, [pc, #-552]	; 24b0 <rinex_init+0x20a4>
    26d4:	ldr	r3, [r3, r2]
    26d8:	add	r3, r3, #212	; 0xd4
    26dc:	ldr	r3, [r3]
    26e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    26e4:	mov	r0, r3
    26e8:	bl	0 <coda_type_record_add_field>
    26ec:	movw	r0, #0
    26f0:	movt	r0, #0
    26f4:	bl	0 <coda_type_record_field_new>
    26f8:	str	r0, [fp, #-24]	; 0xffffffe8
    26fc:	mrc	15, 0, r3, cr13, cr0, {3}
    2700:	ldr	r2, [pc, #-600]	; 24b0 <rinex_init+0x20a4>
    2704:	ldr	r3, [r3, r2]
    2708:	add	r3, r3, #156	; 0x9c
    270c:	ldr	r3, [r3]
    2710:	mov	r1, r3
    2714:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2718:	bl	0 <coda_type_record_field_set_type>
    271c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2720:	bl	0 <coda_type_record_field_set_optional>
    2724:	mrc	15, 0, r3, cr13, cr0, {3}
    2728:	ldr	r2, [pc, #-640]	; 24b0 <rinex_init+0x20a4>
    272c:	ldr	r3, [r3, r2]
    2730:	add	r3, r3, #212	; 0xd4
    2734:	ldr	r3, [r3]
    2738:	ldr	r1, [fp, #-24]	; 0xffffffe8
    273c:	mov	r0, r3
    2740:	bl	0 <coda_type_record_add_field>
    2744:	movw	r0, #0
    2748:	movt	r0, #0
    274c:	bl	0 <coda_type_record_field_new>
    2750:	str	r0, [fp, #-24]	; 0xffffffe8
    2754:	mrc	15, 0, r3, cr13, cr0, {3}
    2758:	ldr	r2, [pc, #-688]	; 24b0 <rinex_init+0x20a4>
    275c:	ldr	r3, [r3, r2]
    2760:	add	r3, r3, #160	; 0xa0
    2764:	ldr	r3, [r3]
    2768:	mov	r1, r3
    276c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2770:	bl	0 <coda_type_record_field_set_type>
    2774:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2778:	bl	0 <coda_type_record_field_set_optional>
    277c:	mrc	15, 0, r3, cr13, cr0, {3}
    2780:	ldr	r2, [pc, #-728]	; 24b0 <rinex_init+0x20a4>
    2784:	ldr	r3, [r3, r2]
    2788:	add	r3, r3, #212	; 0xd4
    278c:	ldr	r3, [r3]
    2790:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2794:	mov	r0, r3
    2798:	bl	0 <coda_type_record_add_field>
    279c:	movw	r0, #0
    27a0:	movt	r0, #0
    27a4:	bl	0 <coda_type_record_field_new>
    27a8:	str	r0, [fp, #-24]	; 0xffffffe8
    27ac:	mrc	15, 0, r3, cr13, cr0, {3}
    27b0:	ldr	r2, [pc, #-776]	; 24b0 <rinex_init+0x20a4>
    27b4:	ldr	r3, [r3, r2]
    27b8:	add	r3, r3, #164	; 0xa4
    27bc:	ldr	r3, [r3]
    27c0:	mov	r1, r3
    27c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27c8:	bl	0 <coda_type_record_field_set_type>
    27cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27d0:	bl	0 <coda_type_record_field_set_optional>
    27d4:	mrc	15, 0, r3, cr13, cr0, {3}
    27d8:	ldr	r2, [pc, #-816]	; 24b0 <rinex_init+0x20a4>
    27dc:	ldr	r3, [r3, r2]
    27e0:	add	r3, r3, #212	; 0xd4
    27e4:	ldr	r3, [r3]
    27e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    27ec:	mov	r0, r3
    27f0:	bl	0 <coda_type_record_add_field>
    27f4:	movw	r0, #0
    27f8:	movt	r0, #0
    27fc:	bl	0 <coda_type_record_field_new>
    2800:	str	r0, [fp, #-24]	; 0xffffffe8
    2804:	mrc	15, 0, r3, cr13, cr0, {3}
    2808:	ldr	r2, [pc, #-864]	; 24b0 <rinex_init+0x20a4>
    280c:	ldr	r3, [r3, r2]
    2810:	add	r3, r3, #168	; 0xa8
    2814:	ldr	r3, [r3]
    2818:	mov	r1, r3
    281c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2820:	bl	0 <coda_type_record_field_set_type>
    2824:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2828:	bl	0 <coda_type_record_field_set_optional>
    282c:	mrc	15, 0, r3, cr13, cr0, {3}
    2830:	ldr	r2, [pc, #-904]	; 24b0 <rinex_init+0x20a4>
    2834:	ldr	r3, [r3, r2]
    2838:	add	r3, r3, #212	; 0xd4
    283c:	ldr	r3, [r3]
    2840:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2844:	mov	r0, r3
    2848:	bl	0 <coda_type_record_add_field>
    284c:	mrc	15, 0, r3, cr13, cr0, {3}
    2850:	ldr	r2, [pc, #-936]	; 24b0 <rinex_init+0x20a4>
    2854:	ldr	r3, [r3, r2]
    2858:	add	r4, r3, #216	; 0xd8
    285c:	mov	r0, #8
    2860:	bl	0 <coda_type_text_new>
    2864:	mov	r3, r0
    2868:	str	r3, [r4]
    286c:	mrc	15, 0, r3, cr13, cr0, {3}
    2870:	ldr	r2, [pc, #-968]	; 24b0 <rinex_init+0x20a4>
    2874:	ldr	r3, [r3, r2]
    2878:	add	r3, r3, #216	; 0xd8
    287c:	ldr	r3, [r3]
    2880:	movw	r1, #0
    2884:	movt	r1, #0
    2888:	mov	r0, r3
    288c:	bl	0 <coda_type_set_description>
    2890:	mrc	15, 0, r3, cr13, cr0, {3}
    2894:	ldr	r2, [pc, #-1004]	; 24b0 <rinex_init+0x20a4>
    2898:	ldr	r3, [r3, r2]
    289c:	add	r4, r3, #220	; 0xdc
    28a0:	mov	r1, #3
    28a4:	mov	r0, #8
    28a8:	bl	0 <coda_type_number_new>
    28ac:	mov	r3, r0
    28b0:	str	r3, [r4]
    28b4:	mrc	15, 0, r3, cr13, cr0, {3}
    28b8:	ldr	r2, [pc, #-1040]	; 24b0 <rinex_init+0x20a4>
    28bc:	ldr	r3, [r3, r2]
    28c0:	add	r3, r3, #220	; 0xdc
    28c4:	ldr	r3, [r3]
    28c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    28cc:	mov	r0, r3
    28d0:	bl	0 <coda_type_number_set_endianness>
    28d4:	mrc	15, 0, r3, cr13, cr0, {3}
    28d8:	ldr	r2, [pc, #-1072]	; 24b0 <rinex_init+0x20a4>
    28dc:	ldr	r3, [r3, r2]
    28e0:	add	r3, r3, #220	; 0xdc
    28e4:	ldr	r1, [r3]
    28e8:	mov	r2, #64	; 0x40
    28ec:	mov	r3, #0
    28f0:	mov	r0, r1
    28f4:	bl	0 <coda_type_set_bit_size>
    28f8:	mrc	15, 0, r3, cr13, cr0, {3}
    28fc:	ldr	r2, [pc, #-1108]	; 24b0 <rinex_init+0x20a4>
    2900:	ldr	r3, [r3, r2]
    2904:	add	r4, r3, #224	; 0xe0
    2908:	mov	r0, #8
    290c:	bl	0 <coda_type_array_new>
    2910:	mov	r3, r0
    2914:	str	r3, [r4]
    2918:	mrc	15, 0, r3, cr13, cr0, {3}
    291c:	ldr	r2, [pc, #-1140]	; 24b0 <rinex_init+0x20a4>
    2920:	ldr	r3, [r3, r2]
    2924:	add	r3, r3, #224	; 0xe0
    2928:	ldr	r3, [r3]
    292c:	mov	r1, #4
    2930:	mov	r0, r3
    2934:	bl	0 <coda_type_array_add_fixed_dimension>
    2938:	mrc	15, 0, r3, cr13, cr0, {3}
    293c:	ldr	r2, [pc, #-1172]	; 24b0 <rinex_init+0x20a4>
    2940:	ldr	r3, [r3, r2]
    2944:	add	r3, r3, #224	; 0xe0
    2948:	ldr	r0, [r3]
    294c:	mrc	15, 0, r3, cr13, cr0, {3}
    2950:	ldr	r2, [pc, #-1192]	; 24b0 <rinex_init+0x20a4>
    2954:	ldr	r3, [r3, r2]
    2958:	add	r3, r3, #220	; 0xdc
    295c:	ldr	r3, [r3]
    2960:	mov	r1, r3
    2964:	bl	0 <coda_type_array_set_base_type>
    2968:	mrc	15, 0, r3, cr13, cr0, {3}
    296c:	ldr	r2, [pc, #-1220]	; 24b0 <rinex_init+0x20a4>
    2970:	ldr	r3, [r3, r2]
    2974:	add	r3, r3, #224	; 0xe0
    2978:	ldr	r3, [r3]
    297c:	movw	r1, #0
    2980:	movt	r1, #0
    2984:	mov	r0, r3
    2988:	bl	0 <coda_type_set_description>
    298c:	mrc	15, 0, r3, cr13, cr0, {3}
    2990:	ldr	r2, [pc, #-1256]	; 24b0 <rinex_init+0x20a4>
    2994:	ldr	r3, [r3, r2]
    2998:	add	r4, r3, #228	; 0xe4
    299c:	mov	r0, #8
    29a0:	bl	0 <coda_type_record_new>
    29a4:	mov	r3, r0
    29a8:	str	r3, [r4]
    29ac:	movw	r0, #0
    29b0:	movt	r0, #0
    29b4:	bl	0 <coda_type_record_field_new>
    29b8:	str	r0, [fp, #-24]	; 0xffffffe8
    29bc:	mrc	15, 0, r3, cr13, cr0, {3}
    29c0:	ldr	r2, [pc, #-1304]	; 24b0 <rinex_init+0x20a4>
    29c4:	ldr	r3, [r3, r2]
    29c8:	add	r3, r3, #216	; 0xd8
    29cc:	ldr	r3, [r3]
    29d0:	mov	r1, r3
    29d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    29d8:	bl	0 <coda_type_record_field_set_type>
    29dc:	mrc	15, 0, r3, cr13, cr0, {3}
    29e0:	ldr	r2, [pc, #-1336]	; 24b0 <rinex_init+0x20a4>
    29e4:	ldr	r3, [r3, r2]
    29e8:	add	r3, r3, #228	; 0xe4
    29ec:	ldr	r3, [r3]
    29f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    29f4:	mov	r0, r3
    29f8:	bl	0 <coda_type_record_add_field>
    29fc:	movw	r0, #0
    2a00:	movt	r0, #0
    2a04:	bl	0 <coda_type_record_field_new>
    2a08:	str	r0, [fp, #-24]	; 0xffffffe8
    2a0c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a10:	ldr	r2, [pc, #-1384]	; 24b0 <rinex_init+0x20a4>
    2a14:	ldr	r3, [r3, r2]
    2a18:	add	r3, r3, #224	; 0xe0
    2a1c:	ldr	r3, [r3]
    2a20:	mov	r1, r3
    2a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2a28:	bl	0 <coda_type_record_field_set_type>
    2a2c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a30:	ldr	r2, [pc, #-1416]	; 24b0 <rinex_init+0x20a4>
    2a34:	ldr	r3, [r3, r2]
    2a38:	add	r3, r3, #228	; 0xe4
    2a3c:	ldr	r3, [r3]
    2a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2a44:	mov	r0, r3
    2a48:	bl	0 <coda_type_record_add_field>
    2a4c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a50:	ldr	r2, [pc, #-1448]	; 24b0 <rinex_init+0x20a4>
    2a54:	ldr	r3, [r3, r2]
    2a58:	add	r4, r3, #232	; 0xe8
    2a5c:	mov	r0, #8
    2a60:	bl	0 <coda_type_array_new>
    2a64:	mov	r3, r0
    2a68:	str	r3, [r4]
    2a6c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a70:	ldr	r2, [pc, #-1480]	; 24b0 <rinex_init+0x20a4>
    2a74:	ldr	r3, [r3, r2]
    2a78:	add	r3, r3, #232	; 0xe8
    2a7c:	ldr	r3, [r3]
    2a80:	mov	r1, #0
    2a84:	mov	r0, r3
    2a88:	bl	0 <coda_type_array_add_variable_dimension>
    2a8c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a90:	ldr	r2, [pc, #-1512]	; 24b0 <rinex_init+0x20a4>
    2a94:	ldr	r3, [r3, r2]
    2a98:	add	r3, r3, #232	; 0xe8
    2a9c:	ldr	r0, [r3]
    2aa0:	mrc	15, 0, r3, cr13, cr0, {3}
    2aa4:	ldr	r2, [pc, #-1532]	; 24b0 <rinex_init+0x20a4>
    2aa8:	ldr	r3, [r3, r2]
    2aac:	add	r3, r3, #228	; 0xe4
    2ab0:	ldr	r3, [r3]
    2ab4:	mov	r1, r3
    2ab8:	bl	0 <coda_type_array_set_base_type>
    2abc:	mrc	15, 0, r3, cr13, cr0, {3}
    2ac0:	ldr	r2, [pc, #-1560]	; 24b0 <rinex_init+0x20a4>
    2ac4:	ldr	r3, [r3, r2]
    2ac8:	add	r4, r3, #236	; 0xec
    2acc:	mov	r0, #8
    2ad0:	bl	0 <coda_type_text_new>
    2ad4:	mov	r3, r0
    2ad8:	str	r3, [r4]
    2adc:	mrc	15, 0, r3, cr13, cr0, {3}
    2ae0:	ldr	r2, [pc, #-1592]	; 24b0 <rinex_init+0x20a4>
    2ae4:	ldr	r3, [r3, r2]
    2ae8:	add	r3, r3, #236	; 0xec
    2aec:	ldr	r3, [r3]
    2af0:	movw	r1, #0
    2af4:	movt	r1, #0
    2af8:	mov	r0, r3
    2afc:	bl	0 <coda_type_set_description>
    2b00:	mrc	15, 0, r3, cr13, cr0, {3}
    2b04:	ldr	r2, [pc, #-1628]	; 24b0 <rinex_init+0x20a4>
    2b08:	ldr	r3, [r3, r2]
    2b0c:	add	r4, r3, #240	; 0xf0
    2b10:	mov	r1, #3
    2b14:	mov	r0, #8
    2b18:	bl	0 <coda_type_number_new>
    2b1c:	mov	r3, r0
    2b20:	str	r3, [r4]
    2b24:	mrc	15, 0, r3, cr13, cr0, {3}
    2b28:	ldr	r2, [pc, #-1664]	; 24b0 <rinex_init+0x20a4>
    2b2c:	ldr	r3, [r3, r2]
    2b30:	add	r3, r3, #240	; 0xf0
    2b34:	ldr	r3, [r3]
    2b38:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b3c:	mov	r0, r3
    2b40:	bl	0 <coda_type_number_set_endianness>
    2b44:	mrc	15, 0, r3, cr13, cr0, {3}
    2b48:	ldr	r2, [pc, #-1696]	; 24b0 <rinex_init+0x20a4>
    2b4c:	ldr	r3, [r3, r2]
    2b50:	add	r3, r3, #240	; 0xf0
    2b54:	ldr	r1, [r3]
    2b58:	mov	r2, #64	; 0x40
    2b5c:	mov	r3, #0
    2b60:	mov	r0, r1
    2b64:	bl	0 <coda_type_set_bit_size>
    2b68:	mrc	15, 0, r3, cr13, cr0, {3}
    2b6c:	ldr	r2, [pc, #-1732]	; 24b0 <rinex_init+0x20a4>
    2b70:	ldr	r3, [r3, r2]
    2b74:	add	r3, r3, #240	; 0xf0
    2b78:	ldr	r3, [r3]
    2b7c:	movw	r1, #0
    2b80:	movt	r1, #0
    2b84:	mov	r0, r3
    2b88:	bl	0 <coda_type_number_set_unit>
    2b8c:	mrc	15, 0, r3, cr13, cr0, {3}
    2b90:	ldr	r2, [pc, #-1768]	; 24b0 <rinex_init+0x20a4>
    2b94:	ldr	r3, [r3, r2]
    2b98:	add	r3, r3, #240	; 0xf0
    2b9c:	ldr	r3, [r3]
    2ba0:	movw	r1, #0
    2ba4:	movt	r1, #0
    2ba8:	mov	r0, r3
    2bac:	bl	0 <coda_type_set_description>
    2bb0:	mrc	15, 0, r3, cr13, cr0, {3}
    2bb4:	ldr	r2, [pc, #-1804]	; 24b0 <rinex_init+0x20a4>
    2bb8:	ldr	r3, [r3, r2]
    2bbc:	add	r4, r3, #244	; 0xf4
    2bc0:	mov	r1, #3
    2bc4:	mov	r0, #8
    2bc8:	bl	0 <coda_type_number_new>
    2bcc:	mov	r3, r0
    2bd0:	str	r3, [r4]
    2bd4:	mrc	15, 0, r3, cr13, cr0, {3}
    2bd8:	ldr	r2, [pc, #-1840]	; 24b0 <rinex_init+0x20a4>
    2bdc:	ldr	r3, [r3, r2]
    2be0:	add	r3, r3, #244	; 0xf4
    2be4:	ldr	r3, [r3]
    2be8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2bec:	mov	r0, r3
    2bf0:	bl	0 <coda_type_number_set_endianness>
    2bf4:	mrc	15, 0, r3, cr13, cr0, {3}
    2bf8:	ldr	r2, [pc, #-1872]	; 24b0 <rinex_init+0x20a4>
    2bfc:	ldr	r3, [r3, r2]
    2c00:	add	r3, r3, #244	; 0xf4
    2c04:	ldr	r1, [r3]
    2c08:	mov	r2, #64	; 0x40
    2c0c:	mov	r3, #0
    2c10:	mov	r0, r1
    2c14:	bl	0 <coda_type_set_bit_size>
    2c18:	mrc	15, 0, r3, cr13, cr0, {3}
    2c1c:	ldr	r2, [pc, #-1908]	; 24b0 <rinex_init+0x20a4>
    2c20:	ldr	r3, [r3, r2]
    2c24:	add	r3, r3, #244	; 0xf4
    2c28:	ldr	r3, [r3]
    2c2c:	movw	r1, #0
    2c30:	movt	r1, #0
    2c34:	mov	r0, r3
    2c38:	bl	0 <coda_type_number_set_unit>
    2c3c:	mrc	15, 0, r3, cr13, cr0, {3}
    2c40:	ldr	r2, [pc, #-1944]	; 24b0 <rinex_init+0x20a4>
    2c44:	ldr	r3, [r3, r2]
    2c48:	add	r3, r3, #244	; 0xf4
    2c4c:	ldr	r3, [r3]
    2c50:	movw	r1, #0
    2c54:	movt	r1, #0
    2c58:	mov	r0, r3
    2c5c:	bl	0 <coda_type_set_description>
    2c60:	mrc	15, 0, r3, cr13, cr0, {3}
    2c64:	ldr	r2, [pc, #-1980]	; 24b0 <rinex_init+0x20a4>
    2c68:	ldr	r3, [r3, r2]
    2c6c:	add	r4, r3, #248	; 0xf8
    2c70:	mov	r1, #2
    2c74:	mov	r0, #8
    2c78:	bl	0 <coda_type_number_new>
    2c7c:	mov	r3, r0
    2c80:	str	r3, [r4]
    2c84:	mrc	15, 0, r3, cr13, cr0, {3}
    2c88:	ldr	r2, [pc, #-2016]	; 24b0 <rinex_init+0x20a4>
    2c8c:	ldr	r3, [r3, r2]
    2c90:	add	r3, r3, #248	; 0xf8
    2c94:	ldr	r3, [r3]
    2c98:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c9c:	mov	r0, r3
    2ca0:	bl	0 <coda_type_number_set_endianness>
    2ca4:	mrc	15, 0, r3, cr13, cr0, {3}
    2ca8:	ldr	r2, [pc, #-2048]	; 24b0 <rinex_init+0x20a4>
    2cac:	ldr	r3, [r3, r2]
    2cb0:	add	r3, r3, #248	; 0xf8
    2cb4:	ldr	r3, [r3]
    2cb8:	mov	r1, #4
    2cbc:	mov	r0, r3
    2cc0:	bl	0 <coda_type_set_read_type>
    2cc4:	mrc	15, 0, r3, cr13, cr0, {3}
    2cc8:	ldr	r2, [pc, #-2080]	; 24b0 <rinex_init+0x20a4>
    2ccc:	ldr	r3, [r3, r2]
    2cd0:	add	r3, r3, #248	; 0xf8
    2cd4:	ldr	r1, [r3]
    2cd8:	mov	r2, #32
    2cdc:	mov	r3, #0
    2ce0:	mov	r0, r1
    2ce4:	bl	0 <coda_type_set_bit_size>
    2ce8:	mrc	15, 0, r3, cr13, cr0, {3}
    2cec:	ldr	r2, [pc, #-2116]	; 24b0 <rinex_init+0x20a4>
    2cf0:	ldr	r3, [r3, r2]
    2cf4:	add	r3, r3, #248	; 0xf8
    2cf8:	ldr	r3, [r3]
    2cfc:	movw	r1, #0
    2d00:	movt	r1, #0
    2d04:	mov	r0, r3
    2d08:	bl	0 <coda_type_number_set_unit>
    2d0c:	mrc	15, 0, r3, cr13, cr0, {3}
    2d10:	ldr	r2, [pc, #-2152]	; 24b0 <rinex_init+0x20a4>
    2d14:	ldr	r3, [r3, r2]
    2d18:	add	r3, r3, #248	; 0xf8
    2d1c:	ldr	r3, [r3]
    2d20:	movw	r1, #0
    2d24:	movt	r1, #0
    2d28:	mov	r0, r3
    2d2c:	bl	0 <coda_type_set_description>
    2d30:	mrc	15, 0, r3, cr13, cr0, {3}
    2d34:	ldr	r2, [pc, #-2188]	; 24b0 <rinex_init+0x20a4>
    2d38:	ldr	r3, [r3, r2]
    2d3c:	add	r4, r3, #252	; 0xfc
    2d40:	mov	r1, #2
    2d44:	mov	r0, #8
    2d48:	bl	0 <coda_type_number_new>
    2d4c:	mov	r3, r0
    2d50:	str	r3, [r4]
    2d54:	mrc	15, 0, r3, cr13, cr0, {3}
    2d58:	ldr	r2, [pc, #-2224]	; 24b0 <rinex_init+0x20a4>
    2d5c:	ldr	r3, [r3, r2]
    2d60:	add	r3, r3, #252	; 0xfc
    2d64:	ldr	r3, [r3]
    2d68:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d6c:	mov	r0, r3
    2d70:	bl	0 <coda_type_number_set_endianness>
    2d74:	mrc	15, 0, r3, cr13, cr0, {3}
    2d78:	ldr	r2, [pc, #-2256]	; 24b0 <rinex_init+0x20a4>
    2d7c:	ldr	r3, [r3, r2]
    2d80:	add	r3, r3, #252	; 0xfc
    2d84:	ldr	r3, [r3]
    2d88:	mov	r1, #2
    2d8c:	mov	r0, r3
    2d90:	bl	0 <coda_type_set_read_type>
    2d94:	mrc	15, 0, r3, cr13, cr0, {3}
    2d98:	ldr	r2, [pc, #-2288]	; 24b0 <rinex_init+0x20a4>
    2d9c:	ldr	r3, [r3, r2]
    2da0:	add	r3, r3, #252	; 0xfc
    2da4:	ldr	r1, [r3]
    2da8:	mov	r2, #16
    2dac:	mov	r3, #0
    2db0:	mov	r0, r1
    2db4:	bl	0 <coda_type_set_bit_size>
    2db8:	mrc	15, 0, r3, cr13, cr0, {3}
    2dbc:	ldr	r2, [pc, #-2324]	; 24b0 <rinex_init+0x20a4>
    2dc0:	ldr	r3, [r3, r2]
    2dc4:	add	r3, r3, #252	; 0xfc
    2dc8:	ldr	r3, [r3]
    2dcc:	movw	r1, #0
    2dd0:	movt	r1, #0
    2dd4:	mov	r0, r3
    2dd8:	bl	0 <coda_type_number_set_unit>
    2ddc:	mrc	15, 0, r3, cr13, cr0, {3}
    2de0:	ldr	r2, [pc, #-2360]	; 24b0 <rinex_init+0x20a4>
    2de4:	ldr	r3, [r3, r2]
    2de8:	add	r3, r3, #252	; 0xfc
    2dec:	ldr	r3, [r3]
    2df0:	movw	r1, #0
    2df4:	movt	r1, #0
    2df8:	mov	r0, r3
    2dfc:	bl	0 <coda_type_set_description>
    2e00:	mrc	15, 0, r3, cr13, cr0, {3}
    2e04:	ldr	r2, [pc, #-2396]	; 24b0 <rinex_init+0x20a4>
    2e08:	ldr	r3, [r3, r2]
    2e0c:	add	r4, r3, #256	; 0x100
    2e10:	mov	r0, #8
    2e14:	bl	0 <coda_type_text_new>
    2e18:	mov	r3, r0
    2e1c:	str	r3, [r4]
    2e20:	mrc	15, 0, r3, cr13, cr0, {3}
    2e24:	ldr	r2, [pc, #-2428]	; 24b0 <rinex_init+0x20a4>
    2e28:	ldr	r3, [r3, r2]
    2e2c:	add	r3, r3, #256	; 0x100
    2e30:	ldr	r3, [r3]
    2e34:	movw	r1, #0
    2e38:	movt	r1, #0
    2e3c:	mov	r0, r3
    2e40:	bl	0 <coda_type_set_description>
    2e44:	mrc	15, 0, r3, cr13, cr0, {3}
    2e48:	ldr	r2, [pc, #-2464]	; 24b0 <rinex_init+0x20a4>
    2e4c:	ldr	r3, [r3, r2]
    2e50:	add	r4, r3, #260	; 0x104
    2e54:	mov	r1, #2
    2e58:	mov	r0, #8
    2e5c:	bl	0 <coda_type_number_new>
    2e60:	mov	r3, r0
    2e64:	str	r3, [r4]
    2e68:	mrc	15, 0, r3, cr13, cr0, {3}
    2e6c:	ldr	r2, [pc, #-2500]	; 24b0 <rinex_init+0x20a4>
    2e70:	ldr	r3, [r3, r2]
    2e74:	add	r3, r3, #260	; 0x104
    2e78:	ldr	r3, [r3]
    2e7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e80:	mov	r0, r3
    2e84:	bl	0 <coda_type_number_set_endianness>
    2e88:	mrc	15, 0, r3, cr13, cr0, {3}
    2e8c:	ldr	r2, [pc, #-2532]	; 24b0 <rinex_init+0x20a4>
    2e90:	ldr	r3, [r3, r2]
    2e94:	add	r3, r3, #260	; 0x104
    2e98:	ldr	r3, [r3]
    2e9c:	mov	r1, #1
    2ea0:	mov	r0, r3
    2ea4:	bl	0 <coda_type_set_read_type>
    2ea8:	mrc	15, 0, r3, cr13, cr0, {3}
    2eac:	ldr	r2, [pc, #-2564]	; 24b0 <rinex_init+0x20a4>
    2eb0:	ldr	r3, [r3, r2]
    2eb4:	add	r3, r3, #260	; 0x104
    2eb8:	ldr	r1, [r3]
    2ebc:	mov	r2, #8
    2ec0:	mov	r3, #0
    2ec4:	mov	r0, r1
    2ec8:	bl	0 <coda_type_set_bit_size>
    2ecc:	mrc	15, 0, r3, cr13, cr0, {3}
    2ed0:	ldr	r2, [pc, #-2600]	; 24b0 <rinex_init+0x20a4>
    2ed4:	ldr	r3, [r3, r2]
    2ed8:	add	r3, r3, #260	; 0x104
    2edc:	ldr	r3, [r3]
    2ee0:	movw	r1, #0
    2ee4:	movt	r1, #0
    2ee8:	mov	r0, r3
    2eec:	bl	0 <coda_type_set_description>
    2ef0:	mrc	15, 0, r3, cr13, cr0, {3}
    2ef4:	ldr	r2, [pc, #-2636]	; 24b0 <rinex_init+0x20a4>
    2ef8:	ldr	r3, [r3, r2]
    2efc:	add	r4, r3, #264	; 0x108
    2f00:	mov	r0, #8
    2f04:	bl	0 <coda_type_record_new>
    2f08:	mov	r3, r0
    2f0c:	str	r3, [r4]
    2f10:	movw	r0, #0
    2f14:	movt	r0, #0
    2f18:	bl	0 <coda_type_record_field_new>
    2f1c:	str	r0, [fp, #-24]	; 0xffffffe8
    2f20:	mrc	15, 0, r3, cr13, cr0, {3}
    2f24:	ldr	r2, [pc, #-2684]	; 24b0 <rinex_init+0x20a4>
    2f28:	ldr	r3, [r3, r2]
    2f2c:	add	r3, r3, #236	; 0xec
    2f30:	ldr	r3, [r3]
    2f34:	mov	r1, r3
    2f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f3c:	bl	0 <coda_type_record_field_set_type>
    2f40:	mrc	15, 0, r3, cr13, cr0, {3}
    2f44:	ldr	r2, [pc, #-2716]	; 24b0 <rinex_init+0x20a4>
    2f48:	ldr	r3, [r3, r2]
    2f4c:	add	r3, r3, #264	; 0x108
    2f50:	ldr	r3, [r3]
    2f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f58:	mov	r0, r3
    2f5c:	bl	0 <coda_type_record_add_field>
    2f60:	movw	r0, #0
    2f64:	movt	r0, #0
    2f68:	bl	0 <coda_type_record_field_new>
    2f6c:	str	r0, [fp, #-24]	; 0xffffffe8
    2f70:	mrc	15, 0, r3, cr13, cr0, {3}
    2f74:	ldr	r2, [pc, #-2764]	; 24b0 <rinex_init+0x20a4>
    2f78:	ldr	r3, [r3, r2]
    2f7c:	add	r3, r3, #240	; 0xf0
    2f80:	ldr	r3, [r3]
    2f84:	mov	r1, r3
    2f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f8c:	bl	0 <coda_type_record_field_set_type>
    2f90:	mrc	15, 0, r3, cr13, cr0, {3}
    2f94:	ldr	r2, [pc, #-2796]	; 24b0 <rinex_init+0x20a4>
    2f98:	ldr	r3, [r3, r2]
    2f9c:	add	r3, r3, #264	; 0x108
    2fa0:	ldr	r3, [r3]
    2fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2fa8:	mov	r0, r3
    2fac:	bl	0 <coda_type_record_add_field>
    2fb0:	movw	r0, #0
    2fb4:	movt	r0, #0
    2fb8:	bl	0 <coda_type_record_field_new>
    2fbc:	str	r0, [fp, #-24]	; 0xffffffe8
    2fc0:	mrc	15, 0, r3, cr13, cr0, {3}
    2fc4:	ldr	r2, [pc, #-2844]	; 24b0 <rinex_init+0x20a4>
    2fc8:	ldr	r3, [r3, r2]
    2fcc:	add	r3, r3, #244	; 0xf4
    2fd0:	ldr	r3, [r3]
    2fd4:	mov	r1, r3
    2fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2fdc:	bl	0 <coda_type_record_field_set_type>
    2fe0:	mrc	15, 0, r3, cr13, cr0, {3}
    2fe4:	ldr	r2, [pc, #-2876]	; 24b0 <rinex_init+0x20a4>
    2fe8:	ldr	r3, [r3, r2]
    2fec:	add	r3, r3, #264	; 0x108
    2ff0:	ldr	r3, [r3]
    2ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ff8:	mov	r0, r3
    2ffc:	bl	0 <coda_type_record_add_field>
    3000:	movw	r0, #0
    3004:	movt	r0, #0
    3008:	bl	0 <coda_type_record_field_new>
    300c:	str	r0, [fp, #-24]	; 0xffffffe8
    3010:	mrc	15, 0, r3, cr13, cr0, {3}
    3014:	ldr	r2, [pc, #-2924]	; 24b0 <rinex_init+0x20a4>
    3018:	ldr	r3, [r3, r2]
    301c:	add	r3, r3, #248	; 0xf8
    3020:	ldr	r3, [r3]
    3024:	mov	r1, r3
    3028:	ldr	r0, [fp, #-24]	; 0xffffffe8
    302c:	bl	0 <coda_type_record_field_set_type>
    3030:	mrc	15, 0, r3, cr13, cr0, {3}
    3034:	ldr	r2, [pc, #-2956]	; 24b0 <rinex_init+0x20a4>
    3038:	ldr	r3, [r3, r2]
    303c:	add	r3, r3, #264	; 0x108
    3040:	ldr	r3, [r3]
    3044:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3048:	mov	r0, r3
    304c:	bl	0 <coda_type_record_add_field>
    3050:	movw	r0, #0
    3054:	movt	r0, #0
    3058:	bl	0 <coda_type_record_field_new>
    305c:	str	r0, [fp, #-24]	; 0xffffffe8
    3060:	mrc	15, 0, r3, cr13, cr0, {3}
    3064:	ldr	r2, [pc, #-3004]	; 24b0 <rinex_init+0x20a4>
    3068:	ldr	r3, [r3, r2]
    306c:	add	r3, r3, #252	; 0xfc
    3070:	ldr	r3, [r3]
    3074:	mov	r1, r3
    3078:	ldr	r0, [fp, #-24]	; 0xffffffe8
    307c:	bl	0 <coda_type_record_field_set_type>
    3080:	mrc	15, 0, r3, cr13, cr0, {3}
    3084:	ldr	r2, [pc, #-3036]	; 24b0 <rinex_init+0x20a4>
    3088:	ldr	r3, [r3, r2]
    308c:	add	r3, r3, #264	; 0x108
    3090:	ldr	r3, [r3]
    3094:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3098:	mov	r0, r3
    309c:	bl	0 <coda_type_record_add_field>
    30a0:	movw	r0, #0
    30a4:	movt	r0, #0
    30a8:	bl	0 <coda_type_record_field_new>
    30ac:	str	r0, [fp, #-24]	; 0xffffffe8
    30b0:	mrc	15, 0, r3, cr13, cr0, {3}
    30b4:	ldr	r2, [pc, #-3084]	; 24b0 <rinex_init+0x20a4>
    30b8:	ldr	r3, [r3, r2]
    30bc:	add	r3, r3, #256	; 0x100
    30c0:	ldr	r3, [r3]
    30c4:	mov	r1, r3
    30c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30cc:	bl	0 <coda_type_record_field_set_type>
    30d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30d4:	bl	0 <coda_type_record_field_set_optional>
    30d8:	mrc	15, 0, r3, cr13, cr0, {3}
    30dc:	ldr	r2, [pc, #-3124]	; 24b0 <rinex_init+0x20a4>
    30e0:	ldr	r3, [r3, r2]
    30e4:	add	r3, r3, #264	; 0x108
    30e8:	ldr	r3, [r3]
    30ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30f0:	mov	r0, r3
    30f4:	bl	0 <coda_type_record_add_field>
    30f8:	movw	r0, #0
    30fc:	movt	r0, #0
    3100:	bl	0 <coda_type_record_field_new>
    3104:	str	r0, [fp, #-24]	; 0xffffffe8
    3108:	mrc	15, 0, r3, cr13, cr0, {3}
    310c:	ldr	r2, [pc, #-3172]	; 24b0 <rinex_init+0x20a4>
    3110:	ldr	r3, [r3, r2]
    3114:	add	r3, r3, #260	; 0x104
    3118:	ldr	r3, [r3]
    311c:	mov	r1, r3
    3120:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3124:	bl	0 <coda_type_record_field_set_type>
    3128:	ldr	r0, [fp, #-24]	; 0xffffffe8
    312c:	bl	0 <coda_type_record_field_set_optional>
    3130:	mrc	15, 0, r3, cr13, cr0, {3}
    3134:	ldr	r2, [pc, #-3212]	; 24b0 <rinex_init+0x20a4>
    3138:	ldr	r3, [r3, r2]
    313c:	add	r3, r3, #264	; 0x108
    3140:	ldr	r3, [r3]
    3144:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3148:	mov	r0, r3
    314c:	bl	0 <coda_type_record_add_field>
    3150:	mrc	15, 0, r3, cr13, cr0, {3}
    3154:	ldr	r2, [pc, #-3244]	; 24b0 <rinex_init+0x20a4>
    3158:	ldr	r3, [r3, r2]
    315c:	add	r4, r3, #268	; 0x10c
    3160:	mov	r0, #8
    3164:	bl	0 <coda_type_array_new>
    3168:	mov	r3, r0
    316c:	str	r3, [r4]
    3170:	mrc	15, 0, r3, cr13, cr0, {3}
    3174:	ldr	r2, [pc, #-3276]	; 24b0 <rinex_init+0x20a4>
    3178:	ldr	r3, [r3, r2]
    317c:	add	r3, r3, #268	; 0x10c
    3180:	ldr	r3, [r3]
    3184:	mov	r1, #0
    3188:	mov	r0, r3
    318c:	bl	0 <coda_type_array_add_variable_dimension>
    3190:	mrc	15, 0, r3, cr13, cr0, {3}
    3194:	ldr	r2, [pc, #-3308]	; 24b0 <rinex_init+0x20a4>
    3198:	ldr	r3, [r3, r2]
    319c:	add	r3, r3, #268	; 0x10c
    31a0:	ldr	r0, [r3]
    31a4:	mrc	15, 0, r3, cr13, cr0, {3}
    31a8:	ldr	r2, [pc, #-3328]	; 24b0 <rinex_init+0x20a4>
    31ac:	ldr	r3, [r3, r2]
    31b0:	add	r3, r3, #264	; 0x108
    31b4:	ldr	r3, [r3]
    31b8:	mov	r1, r3
    31bc:	bl	0 <coda_type_array_set_base_type>
    31c0:	mov	r3, #0
    31c4:	str	r3, [fp, #-28]	; 0xffffffe4
    31c8:	sub	r3, fp, #28
    31cc:	mov	r1, r3
    31d0:	movw	r0, #0
    31d4:	movt	r0, #0
    31d8:	bl	0 <coda_expression_from_string>
    31dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    31e0:	mrc	15, 0, r3, cr13, cr0, {3}
    31e4:	ldr	r2, [pc, #-3388]	; 24b0 <rinex_init+0x20a4>
    31e8:	ldr	r3, [r3, r2]
    31ec:	add	r4, r3, #272	; 0x110
    31f0:	mov	r0, #8
    31f4:	bl	0 <coda_type_time_new>
    31f8:	mov	r3, r0
    31fc:	str	r3, [r4]
    3200:	mrc	15, 0, r3, cr13, cr0, {3}
    3204:	ldr	r2, [pc, #-3420]	; 24b0 <rinex_init+0x20a4>
    3208:	ldr	r3, [r3, r2]
    320c:	add	r3, r3, #272	; 0x110
    3210:	ldr	r0, [r3]
    3214:	mrc	15, 0, r3, cr13, cr0, {3}
    3218:	ldr	r2, [pc, #-3440]	; 24b0 <rinex_init+0x20a4>
    321c:	ldr	r3, [r3, r2]
    3220:	add	r3, r3, #176	; 0xb0
    3224:	ldr	r3, [r3]
    3228:	mov	r1, r3
    322c:	bl	0 <coda_type_time_set_base_type>
    3230:	mrc	15, 0, r3, cr13, cr0, {3}
    3234:	ldr	r2, [pc, #-3468]	; 24b0 <rinex_init+0x20a4>
    3238:	ldr	r3, [r3, r2]
    323c:	add	r3, r3, #272	; 0x110
    3240:	ldr	r3, [r3]
    3244:	movw	r1, #0
    3248:	movt	r1, #0
    324c:	mov	r0, r3
    3250:	bl	0 <coda_type_set_description>
    3254:	mrc	15, 0, r3, cr13, cr0, {3}
    3258:	ldr	r2, [pc, #-3504]	; 24b0 <rinex_init+0x20a4>
    325c:	ldr	r3, [r3, r2]
    3260:	add	r4, r3, #276	; 0x114
    3264:	mov	r1, #3
    3268:	mov	r0, #8
    326c:	bl	0 <coda_type_number_new>
    3270:	mov	r3, r0
    3274:	str	r3, [r4]
    3278:	mrc	15, 0, r3, cr13, cr0, {3}
    327c:	ldr	r2, [pc, #-3540]	; 24b0 <rinex_init+0x20a4>
    3280:	ldr	r3, [r3, r2]
    3284:	add	r3, r3, #276	; 0x114
    3288:	ldr	r3, [r3]
    328c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3290:	mov	r0, r3
    3294:	bl	0 <coda_type_number_set_endianness>
    3298:	mrc	15, 0, r3, cr13, cr0, {3}
    329c:	ldr	r2, [pc, #-3572]	; 24b0 <rinex_init+0x20a4>
    32a0:	ldr	r3, [r3, r2]
    32a4:	add	r3, r3, #276	; 0x114
    32a8:	ldr	r1, [r3]
    32ac:	mov	r2, #64	; 0x40
    32b0:	mov	r3, #0
    32b4:	mov	r0, r1
    32b8:	bl	0 <coda_type_set_bit_size>
    32bc:	mrc	15, 0, r3, cr13, cr0, {3}
    32c0:	ldr	r2, [pc, #-3608]	; 24b0 <rinex_init+0x20a4>
    32c4:	ldr	r3, [r3, r2]
    32c8:	add	r3, r3, #276	; 0x114
    32cc:	ldr	r3, [r3]
    32d0:	movw	r1, #0
    32d4:	movt	r1, #0
    32d8:	mov	r0, r3
    32dc:	bl	0 <coda_type_number_set_unit>
    32e0:	mrc	15, 0, r3, cr13, cr0, {3}
    32e4:	ldr	r2, [pc, #-3644]	; 24b0 <rinex_init+0x20a4>
    32e8:	ldr	r3, [r3, r2]
    32ec:	add	r3, r3, #276	; 0x114
    32f0:	ldr	r3, [r3]
    32f4:	movw	r1, #0
    32f8:	movt	r1, #0
    32fc:	mov	r0, r3
    3300:	bl	0 <coda_type_set_description>
    3304:	mrc	15, 0, r3, cr13, cr0, {3}
    3308:	ldr	r2, [pc, #-3680]	; 24b0 <rinex_init+0x20a4>
    330c:	ldr	r3, [r3, r2]
    3310:	add	r4, r3, #280	; 0x118
    3314:	mov	r1, #3
    3318:	mov	r0, #8
    331c:	bl	0 <coda_type_number_new>
    3320:	mov	r3, r0
    3324:	str	r3, [r4]
    3328:	mrc	15, 0, r3, cr13, cr0, {3}
    332c:	ldr	r2, [pc, #-3716]	; 24b0 <rinex_init+0x20a4>
    3330:	ldr	r3, [r3, r2]
    3334:	add	r3, r3, #280	; 0x118
    3338:	ldr	r3, [r3]
    333c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3340:	mov	r0, r3
    3344:	bl	0 <coda_type_number_set_endianness>
    3348:	mrc	15, 0, r3, cr13, cr0, {3}
    334c:	ldr	r2, [pc, #-3748]	; 24b0 <rinex_init+0x20a4>
    3350:	ldr	r3, [r3, r2]
    3354:	add	r3, r3, #280	; 0x118
    3358:	ldr	r1, [r3]
    335c:	mov	r2, #64	; 0x40
    3360:	mov	r3, #0
    3364:	mov	r0, r1
    3368:	bl	0 <coda_type_set_bit_size>
    336c:	mrc	15, 0, r3, cr13, cr0, {3}
    3370:	ldr	r2, [pc, #-3784]	; 24b0 <rinex_init+0x20a4>
    3374:	ldr	r3, [r3, r2]
    3378:	add	r3, r3, #280	; 0x118
    337c:	ldr	r3, [r3]
    3380:	movw	r1, #0
    3384:	movt	r1, #0
    3388:	mov	r0, r3
    338c:	bl	0 <coda_type_number_set_unit>
    3390:	mrc	15, 0, r3, cr13, cr0, {3}
    3394:	ldr	r2, [pc, #-3820]	; 24b0 <rinex_init+0x20a4>
    3398:	ldr	r3, [r3, r2]
    339c:	add	r3, r3, #280	; 0x118
    33a0:	ldr	r3, [r3]
    33a4:	movw	r1, #0
    33a8:	movt	r1, #0
    33ac:	mov	r0, r3
    33b0:	bl	0 <coda_type_set_description>
    33b4:	mrc	15, 0, r3, cr13, cr0, {3}
    33b8:	ldr	r2, [pc, #-3856]	; 24b0 <rinex_init+0x20a4>
    33bc:	ldr	r3, [r3, r2]
    33c0:	add	r4, r3, #284	; 0x11c
    33c4:	mov	r1, #3
    33c8:	mov	r0, #8
    33cc:	bl	0 <coda_type_number_new>
    33d0:	mov	r3, r0
    33d4:	str	r3, [r4]
    33d8:	mrc	15, 0, r3, cr13, cr0, {3}
    33dc:	ldr	r2, [pc, #-3892]	; 24b0 <rinex_init+0x20a4>
    33e0:	ldr	r3, [r3, r2]
    33e4:	add	r3, r3, #284	; 0x11c
    33e8:	ldr	r3, [r3]
    33ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    33f0:	mov	r0, r3
    33f4:	bl	0 <coda_type_number_set_endianness>
    33f8:	mrc	15, 0, r3, cr13, cr0, {3}
    33fc:	ldr	r2, [pc, #-3924]	; 24b0 <rinex_init+0x20a4>
    3400:	ldr	r3, [r3, r2]
    3404:	add	r3, r3, #284	; 0x11c
    3408:	ldr	r1, [r3]
    340c:	mov	r2, #64	; 0x40
    3410:	mov	r3, #0
    3414:	mov	r0, r1
    3418:	bl	0 <coda_type_set_bit_size>
    341c:	mrc	15, 0, r3, cr13, cr0, {3}
    3420:	ldr	r2, [pc, #-3960]	; 24b0 <rinex_init+0x20a4>
    3424:	ldr	r3, [r3, r2]
    3428:	add	r3, r3, #284	; 0x11c
    342c:	ldr	r3, [r3]
    3430:	movw	r1, #0
    3434:	movt	r1, #0
    3438:	mov	r0, r3
    343c:	bl	0 <coda_type_number_set_unit>
    3440:	mrc	15, 0, r3, cr13, cr0, {3}
    3444:	ldr	r2, [pc, #-3996]	; 24b0 <rinex_init+0x20a4>
    3448:	ldr	r3, [r3, r2]
    344c:	add	r3, r3, #284	; 0x11c
    3450:	ldr	r3, [r3]
    3454:	movw	r1, #0
    3458:	movt	r1, #0
    345c:	mov	r0, r3
    3460:	bl	0 <coda_type_set_description>
    3464:	mrc	15, 0, r3, cr13, cr0, {3}
    3468:	ldr	r2, [pc, #-4032]	; 24b0 <rinex_init+0x20a4>
    346c:	ldr	r3, [r3, r2]
    3470:	add	r4, r3, #288	; 0x120
    3474:	mov	r1, #3
    3478:	mov	r0, #8
    347c:	bl	0 <coda_type_number_new>
    3480:	mov	r3, r0
    3484:	str	r3, [r4]
    3488:	mrc	15, 0, r3, cr13, cr0, {3}
    348c:	ldr	r2, [pc, #-4068]	; 24b0 <rinex_init+0x20a4>
    3490:	ldr	r3, [r3, r2]
    3494:	add	r3, r3, #288	; 0x120
    3498:	ldr	r3, [r3]
    349c:	ldr	r1, [fp, #-20]	; 0xffffffec
    34a0:	mov	r0, r3
    34a4:	bl	0 <coda_type_number_set_endianness>
    34a8:	mrc	15, 0, r3, cr13, cr0, {3}
    34ac:	ldr	r2, [pc, #4088]	; 44ac <rinex_init+0x40a0>
    34b0:	ldr	r3, [r3, r2]
    34b4:	add	r3, r3, #288	; 0x120
    34b8:	ldr	r1, [r3]
    34bc:	mov	r2, #64	; 0x40
    34c0:	mov	r3, #0
    34c4:	mov	r0, r1
    34c8:	bl	0 <coda_type_set_bit_size>
    34cc:	mrc	15, 0, r3, cr13, cr0, {3}
    34d0:	ldr	r2, [pc, #4052]	; 44ac <rinex_init+0x40a0>
    34d4:	ldr	r3, [r3, r2]
    34d8:	add	r3, r3, #288	; 0x120
    34dc:	ldr	r3, [r3]
    34e0:	movw	r1, #0
    34e4:	movt	r1, #0
    34e8:	mov	r0, r3
    34ec:	bl	0 <coda_type_set_description>
    34f0:	mrc	15, 0, r3, cr13, cr0, {3}
    34f4:	ldr	r2, [pc, #4016]	; 44ac <rinex_init+0x40a0>
    34f8:	ldr	r3, [r3, r2]
    34fc:	add	r4, r3, #292	; 0x124
    3500:	mov	r1, #3
    3504:	mov	r0, #8
    3508:	bl	0 <coda_type_number_new>
    350c:	mov	r3, r0
    3510:	str	r3, [r4]
    3514:	mrc	15, 0, r3, cr13, cr0, {3}
    3518:	ldr	r2, [pc, #3980]	; 44ac <rinex_init+0x40a0>
    351c:	ldr	r3, [r3, r2]
    3520:	add	r3, r3, #292	; 0x124
    3524:	ldr	r3, [r3]
    3528:	ldr	r1, [fp, #-20]	; 0xffffffec
    352c:	mov	r0, r3
    3530:	bl	0 <coda_type_number_set_endianness>
    3534:	mrc	15, 0, r3, cr13, cr0, {3}
    3538:	ldr	r2, [pc, #3948]	; 44ac <rinex_init+0x40a0>
    353c:	ldr	r3, [r3, r2]
    3540:	add	r3, r3, #292	; 0x124
    3544:	ldr	r1, [r3]
    3548:	mov	r2, #64	; 0x40
    354c:	mov	r3, #0
    3550:	mov	r0, r1
    3554:	bl	0 <coda_type_set_bit_size>
    3558:	mrc	15, 0, r3, cr13, cr0, {3}
    355c:	ldr	r2, [pc, #3912]	; 44ac <rinex_init+0x40a0>
    3560:	ldr	r3, [r3, r2]
    3564:	add	r3, r3, #292	; 0x124
    3568:	ldr	r3, [r3]
    356c:	movw	r1, #0
    3570:	movt	r1, #0
    3574:	mov	r0, r3
    3578:	bl	0 <coda_type_number_set_unit>
    357c:	mrc	15, 0, r3, cr13, cr0, {3}
    3580:	ldr	r2, [pc, #3876]	; 44ac <rinex_init+0x40a0>
    3584:	ldr	r3, [r3, r2]
    3588:	add	r3, r3, #292	; 0x124
    358c:	ldr	r3, [r3]
    3590:	movw	r1, #0
    3594:	movt	r1, #0
    3598:	mov	r0, r3
    359c:	bl	0 <coda_type_set_description>
    35a0:	mrc	15, 0, r3, cr13, cr0, {3}
    35a4:	ldr	r2, [pc, #3840]	; 44ac <rinex_init+0x40a0>
    35a8:	ldr	r3, [r3, r2]
    35ac:	add	r4, r3, #296	; 0x128
    35b0:	mov	r1, #3
    35b4:	mov	r0, #8
    35b8:	bl	0 <coda_type_number_new>
    35bc:	mov	r3, r0
    35c0:	str	r3, [r4]
    35c4:	mrc	15, 0, r3, cr13, cr0, {3}
    35c8:	ldr	r2, [pc, #3804]	; 44ac <rinex_init+0x40a0>
    35cc:	ldr	r3, [r3, r2]
    35d0:	add	r3, r3, #296	; 0x128
    35d4:	ldr	r3, [r3]
    35d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    35dc:	mov	r0, r3
    35e0:	bl	0 <coda_type_number_set_endianness>
    35e4:	mrc	15, 0, r3, cr13, cr0, {3}
    35e8:	ldr	r2, [pc, #3772]	; 44ac <rinex_init+0x40a0>
    35ec:	ldr	r3, [r3, r2]
    35f0:	add	r3, r3, #296	; 0x128
    35f4:	ldr	r1, [r3]
    35f8:	mov	r2, #64	; 0x40
    35fc:	mov	r3, #0
    3600:	mov	r0, r1
    3604:	bl	0 <coda_type_set_bit_size>
    3608:	mrc	15, 0, r3, cr13, cr0, {3}
    360c:	ldr	r2, [pc, #3736]	; 44ac <rinex_init+0x40a0>
    3610:	ldr	r3, [r3, r2]
    3614:	add	r3, r3, #296	; 0x128
    3618:	ldr	r3, [r3]
    361c:	movw	r1, #0
    3620:	movt	r1, #0
    3624:	mov	r0, r3
    3628:	bl	0 <coda_type_number_set_unit>
    362c:	mrc	15, 0, r3, cr13, cr0, {3}
    3630:	ldr	r2, [pc, #3700]	; 44ac <rinex_init+0x40a0>
    3634:	ldr	r3, [r3, r2]
    3638:	add	r3, r3, #296	; 0x128
    363c:	ldr	r3, [r3]
    3640:	movw	r1, #0
    3644:	movt	r1, #0
    3648:	mov	r0, r3
    364c:	bl	0 <coda_type_set_description>
    3650:	mrc	15, 0, r3, cr13, cr0, {3}
    3654:	ldr	r2, [pc, #3664]	; 44ac <rinex_init+0x40a0>
    3658:	ldr	r3, [r3, r2]
    365c:	add	r4, r3, #300	; 0x12c
    3660:	mov	r1, #3
    3664:	mov	r0, #8
    3668:	bl	0 <coda_type_number_new>
    366c:	mov	r3, r0
    3670:	str	r3, [r4]
    3674:	mrc	15, 0, r3, cr13, cr0, {3}
    3678:	ldr	r2, [pc, #3628]	; 44ac <rinex_init+0x40a0>
    367c:	ldr	r3, [r3, r2]
    3680:	add	r3, r3, #300	; 0x12c
    3684:	ldr	r3, [r3]
    3688:	ldr	r1, [fp, #-20]	; 0xffffffec
    368c:	mov	r0, r3
    3690:	bl	0 <coda_type_number_set_endianness>
    3694:	mrc	15, 0, r3, cr13, cr0, {3}
    3698:	ldr	r2, [pc, #3596]	; 44ac <rinex_init+0x40a0>
    369c:	ldr	r3, [r3, r2]
    36a0:	add	r3, r3, #300	; 0x12c
    36a4:	ldr	r1, [r3]
    36a8:	mov	r2, #64	; 0x40
    36ac:	mov	r3, #0
    36b0:	mov	r0, r1
    36b4:	bl	0 <coda_type_set_bit_size>
    36b8:	mrc	15, 0, r3, cr13, cr0, {3}
    36bc:	ldr	r2, [pc, #3560]	; 44ac <rinex_init+0x40a0>
    36c0:	ldr	r3, [r3, r2]
    36c4:	add	r3, r3, #300	; 0x12c
    36c8:	ldr	r3, [r3]
    36cc:	movw	r1, #0
    36d0:	movt	r1, #0
    36d4:	mov	r0, r3
    36d8:	bl	0 <coda_type_number_set_unit>
    36dc:	mrc	15, 0, r3, cr13, cr0, {3}
    36e0:	ldr	r2, [pc, #3524]	; 44ac <rinex_init+0x40a0>
    36e4:	ldr	r3, [r3, r2]
    36e8:	add	r3, r3, #300	; 0x12c
    36ec:	ldr	r3, [r3]
    36f0:	movw	r1, #0
    36f4:	movt	r1, #0
    36f8:	mov	r0, r3
    36fc:	bl	0 <coda_type_set_description>
    3700:	mrc	15, 0, r3, cr13, cr0, {3}
    3704:	ldr	r2, [pc, #3488]	; 44ac <rinex_init+0x40a0>
    3708:	ldr	r3, [r3, r2]
    370c:	add	r4, r3, #304	; 0x130
    3710:	mov	r1, #3
    3714:	mov	r0, #8
    3718:	bl	0 <coda_type_number_new>
    371c:	mov	r3, r0
    3720:	str	r3, [r4]
    3724:	mrc	15, 0, r3, cr13, cr0, {3}
    3728:	ldr	r2, [pc, #3452]	; 44ac <rinex_init+0x40a0>
    372c:	ldr	r3, [r3, r2]
    3730:	add	r3, r3, #304	; 0x130
    3734:	ldr	r3, [r3]
    3738:	ldr	r1, [fp, #-20]	; 0xffffffec
    373c:	mov	r0, r3
    3740:	bl	0 <coda_type_number_set_endianness>
    3744:	mrc	15, 0, r3, cr13, cr0, {3}
    3748:	ldr	r2, [pc, #3420]	; 44ac <rinex_init+0x40a0>
    374c:	ldr	r3, [r3, r2]
    3750:	add	r3, r3, #304	; 0x130
    3754:	ldr	r1, [r3]
    3758:	mov	r2, #64	; 0x40
    375c:	mov	r3, #0
    3760:	mov	r0, r1
    3764:	bl	0 <coda_type_set_bit_size>
    3768:	mrc	15, 0, r3, cr13, cr0, {3}
    376c:	ldr	r2, [pc, #3384]	; 44ac <rinex_init+0x40a0>
    3770:	ldr	r3, [r3, r2]
    3774:	add	r3, r3, #304	; 0x130
    3778:	ldr	r3, [r3]
    377c:	movw	r1, #0
    3780:	movt	r1, #0
    3784:	mov	r0, r3
    3788:	bl	0 <coda_type_number_set_unit>
    378c:	mrc	15, 0, r3, cr13, cr0, {3}
    3790:	ldr	r2, [pc, #3348]	; 44ac <rinex_init+0x40a0>
    3794:	ldr	r3, [r3, r2]
    3798:	add	r3, r3, #304	; 0x130
    379c:	ldr	r3, [r3]
    37a0:	movw	r1, #0
    37a4:	movt	r1, #0
    37a8:	mov	r0, r3
    37ac:	bl	0 <coda_type_set_description>
    37b0:	mrc	15, 0, r3, cr13, cr0, {3}
    37b4:	ldr	r2, [pc, #3312]	; 44ac <rinex_init+0x40a0>
    37b8:	ldr	r3, [r3, r2]
    37bc:	add	r4, r3, #308	; 0x134
    37c0:	mov	r1, #3
    37c4:	mov	r0, #8
    37c8:	bl	0 <coda_type_number_new>
    37cc:	mov	r3, r0
    37d0:	str	r3, [r4]
    37d4:	mrc	15, 0, r3, cr13, cr0, {3}
    37d8:	ldr	r2, [pc, #3276]	; 44ac <rinex_init+0x40a0>
    37dc:	ldr	r3, [r3, r2]
    37e0:	add	r3, r3, #308	; 0x134
    37e4:	ldr	r3, [r3]
    37e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    37ec:	mov	r0, r3
    37f0:	bl	0 <coda_type_number_set_endianness>
    37f4:	mrc	15, 0, r3, cr13, cr0, {3}
    37f8:	ldr	r2, [pc, #3244]	; 44ac <rinex_init+0x40a0>
    37fc:	ldr	r3, [r3, r2]
    3800:	add	r3, r3, #308	; 0x134
    3804:	ldr	r1, [r3]
    3808:	mov	r2, #64	; 0x40
    380c:	mov	r3, #0
    3810:	mov	r0, r1
    3814:	bl	0 <coda_type_set_bit_size>
    3818:	mrc	15, 0, r3, cr13, cr0, {3}
    381c:	ldr	r2, [pc, #3208]	; 44ac <rinex_init+0x40a0>
    3820:	ldr	r3, [r3, r2]
    3824:	add	r3, r3, #308	; 0x134
    3828:	ldr	r3, [r3]
    382c:	movw	r1, #0
    3830:	movt	r1, #0
    3834:	mov	r0, r3
    3838:	bl	0 <coda_type_set_description>
    383c:	mrc	15, 0, r3, cr13, cr0, {3}
    3840:	ldr	r2, [pc, #3172]	; 44ac <rinex_init+0x40a0>
    3844:	ldr	r3, [r3, r2]
    3848:	add	r4, r3, #312	; 0x138
    384c:	mov	r1, #3
    3850:	mov	r0, #8
    3854:	bl	0 <coda_type_number_new>
    3858:	mov	r3, r0
    385c:	str	r3, [r4]
    3860:	mrc	15, 0, r3, cr13, cr0, {3}
    3864:	ldr	r2, [pc, #3136]	; 44ac <rinex_init+0x40a0>
    3868:	ldr	r3, [r3, r2]
    386c:	add	r3, r3, #312	; 0x138
    3870:	ldr	r3, [r3]
    3874:	ldr	r1, [fp, #-20]	; 0xffffffec
    3878:	mov	r0, r3
    387c:	bl	0 <coda_type_number_set_endianness>
    3880:	mrc	15, 0, r3, cr13, cr0, {3}
    3884:	ldr	r2, [pc, #3104]	; 44ac <rinex_init+0x40a0>
    3888:	ldr	r3, [r3, r2]
    388c:	add	r3, r3, #312	; 0x138
    3890:	ldr	r1, [r3]
    3894:	mov	r2, #64	; 0x40
    3898:	mov	r3, #0
    389c:	mov	r0, r1
    38a0:	bl	0 <coda_type_set_bit_size>
    38a4:	mrc	15, 0, r3, cr13, cr0, {3}
    38a8:	ldr	r2, [pc, #3068]	; 44ac <rinex_init+0x40a0>
    38ac:	ldr	r3, [r3, r2]
    38b0:	add	r3, r3, #312	; 0x138
    38b4:	ldr	r3, [r3]
    38b8:	movw	r1, #0
    38bc:	movt	r1, #0
    38c0:	mov	r0, r3
    38c4:	bl	0 <coda_type_number_set_unit>
    38c8:	mrc	15, 0, r3, cr13, cr0, {3}
    38cc:	ldr	r2, [pc, #3032]	; 44ac <rinex_init+0x40a0>
    38d0:	ldr	r3, [r3, r2]
    38d4:	add	r3, r3, #312	; 0x138
    38d8:	ldr	r3, [r3]
    38dc:	movw	r1, #0
    38e0:	movt	r1, #0
    38e4:	mov	r0, r3
    38e8:	bl	0 <coda_type_set_description>
    38ec:	mrc	15, 0, r3, cr13, cr0, {3}
    38f0:	ldr	r2, [pc, #2996]	; 44ac <rinex_init+0x40a0>
    38f4:	ldr	r3, [r3, r2]
    38f8:	add	r4, r3, #316	; 0x13c
    38fc:	mov	r1, #3
    3900:	mov	r0, #8
    3904:	bl	0 <coda_type_number_new>
    3908:	mov	r3, r0
    390c:	str	r3, [r4]
    3910:	mrc	15, 0, r3, cr13, cr0, {3}
    3914:	ldr	r2, [pc, #2960]	; 44ac <rinex_init+0x40a0>
    3918:	ldr	r3, [r3, r2]
    391c:	add	r3, r3, #316	; 0x13c
    3920:	ldr	r3, [r3]
    3924:	ldr	r1, [fp, #-20]	; 0xffffffec
    3928:	mov	r0, r3
    392c:	bl	0 <coda_type_number_set_endianness>
    3930:	mrc	15, 0, r3, cr13, cr0, {3}
    3934:	ldr	r2, [pc, #2928]	; 44ac <rinex_init+0x40a0>
    3938:	ldr	r3, [r3, r2]
    393c:	add	r3, r3, #316	; 0x13c
    3940:	ldr	r1, [r3]
    3944:	mov	r2, #64	; 0x40
    3948:	mov	r3, #0
    394c:	mov	r0, r1
    3950:	bl	0 <coda_type_set_bit_size>
    3954:	mrc	15, 0, r3, cr13, cr0, {3}
    3958:	ldr	r2, [pc, #2892]	; 44ac <rinex_init+0x40a0>
    395c:	ldr	r3, [r3, r2]
    3960:	add	r3, r3, #316	; 0x13c
    3964:	ldr	r3, [r3]
    3968:	movw	r1, #0
    396c:	movt	r1, #0
    3970:	mov	r0, r3
    3974:	bl	0 <coda_type_number_set_unit>
    3978:	mrc	15, 0, r3, cr13, cr0, {3}
    397c:	ldr	r2, [pc, #2856]	; 44ac <rinex_init+0x40a0>
    3980:	ldr	r3, [r3, r2]
    3984:	add	r3, r3, #316	; 0x13c
    3988:	ldr	r3, [r3]
    398c:	movw	r1, #0
    3990:	movt	r1, #0
    3994:	mov	r0, r3
    3998:	bl	0 <coda_type_set_description>
    399c:	mrc	15, 0, r3, cr13, cr0, {3}
    39a0:	ldr	r2, [pc, #2820]	; 44ac <rinex_init+0x40a0>
    39a4:	ldr	r3, [r3, r2]
    39a8:	add	r4, r3, #320	; 0x140
    39ac:	mov	r1, #3
    39b0:	mov	r0, #8
    39b4:	bl	0 <coda_type_number_new>
    39b8:	mov	r3, r0
    39bc:	str	r3, [r4]
    39c0:	mrc	15, 0, r3, cr13, cr0, {3}
    39c4:	ldr	r2, [pc, #2784]	; 44ac <rinex_init+0x40a0>
    39c8:	ldr	r3, [r3, r2]
    39cc:	add	r3, r3, #320	; 0x140
    39d0:	ldr	r3, [r3]
    39d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    39d8:	mov	r0, r3
    39dc:	bl	0 <coda_type_number_set_endianness>
    39e0:	mrc	15, 0, r3, cr13, cr0, {3}
    39e4:	ldr	r2, [pc, #2752]	; 44ac <rinex_init+0x40a0>
    39e8:	ldr	r3, [r3, r2]
    39ec:	add	r3, r3, #320	; 0x140
    39f0:	ldr	r1, [r3]
    39f4:	mov	r2, #64	; 0x40
    39f8:	mov	r3, #0
    39fc:	mov	r0, r1
    3a00:	bl	0 <coda_type_set_bit_size>
    3a04:	mrc	15, 0, r3, cr13, cr0, {3}
    3a08:	ldr	r2, [pc, #2716]	; 44ac <rinex_init+0x40a0>
    3a0c:	ldr	r3, [r3, r2]
    3a10:	add	r3, r3, #320	; 0x140
    3a14:	ldr	r3, [r3]
    3a18:	movw	r1, #0
    3a1c:	movt	r1, #0
    3a20:	mov	r0, r3
    3a24:	bl	0 <coda_type_number_set_unit>
    3a28:	mrc	15, 0, r3, cr13, cr0, {3}
    3a2c:	ldr	r2, [pc, #2680]	; 44ac <rinex_init+0x40a0>
    3a30:	ldr	r3, [r3, r2]
    3a34:	add	r3, r3, #320	; 0x140
    3a38:	ldr	r3, [r3]
    3a3c:	movw	r1, #0
    3a40:	movt	r1, #0
    3a44:	mov	r0, r3
    3a48:	bl	0 <coda_type_set_description>
    3a4c:	mrc	15, 0, r3, cr13, cr0, {3}
    3a50:	ldr	r2, [pc, #2644]	; 44ac <rinex_init+0x40a0>
    3a54:	ldr	r3, [r3, r2]
    3a58:	add	r4, r3, #324	; 0x144
    3a5c:	mov	r1, #3
    3a60:	mov	r0, #8
    3a64:	bl	0 <coda_type_number_new>
    3a68:	mov	r3, r0
    3a6c:	str	r3, [r4]
    3a70:	mrc	15, 0, r3, cr13, cr0, {3}
    3a74:	ldr	r2, [pc, #2608]	; 44ac <rinex_init+0x40a0>
    3a78:	ldr	r3, [r3, r2]
    3a7c:	add	r3, r3, #324	; 0x144
    3a80:	ldr	r3, [r3]
    3a84:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a88:	mov	r0, r3
    3a8c:	bl	0 <coda_type_number_set_endianness>
    3a90:	mrc	15, 0, r3, cr13, cr0, {3}
    3a94:	ldr	r2, [pc, #2576]	; 44ac <rinex_init+0x40a0>
    3a98:	ldr	r3, [r3, r2]
    3a9c:	add	r3, r3, #324	; 0x144
    3aa0:	ldr	r1, [r3]
    3aa4:	mov	r2, #64	; 0x40
    3aa8:	mov	r3, #0
    3aac:	mov	r0, r1
    3ab0:	bl	0 <coda_type_set_bit_size>
    3ab4:	mrc	15, 0, r3, cr13, cr0, {3}
    3ab8:	ldr	r2, [pc, #2540]	; 44ac <rinex_init+0x40a0>
    3abc:	ldr	r3, [r3, r2]
    3ac0:	add	r3, r3, #324	; 0x144
    3ac4:	ldr	r3, [r3]
    3ac8:	movw	r1, #0
    3acc:	movt	r1, #0
    3ad0:	mov	r0, r3
    3ad4:	bl	0 <coda_type_number_set_unit>
    3ad8:	mrc	15, 0, r3, cr13, cr0, {3}
    3adc:	ldr	r2, [pc, #2504]	; 44ac <rinex_init+0x40a0>
    3ae0:	ldr	r3, [r3, r2]
    3ae4:	add	r3, r3, #324	; 0x144
    3ae8:	ldr	r3, [r3]
    3aec:	movw	r1, #0
    3af0:	movt	r1, #0
    3af4:	mov	r0, r3
    3af8:	bl	0 <coda_type_set_description>
    3afc:	mrc	15, 0, r3, cr13, cr0, {3}
    3b00:	ldr	r2, [pc, #2468]	; 44ac <rinex_init+0x40a0>
    3b04:	ldr	r3, [r3, r2]
    3b08:	add	r4, r3, #328	; 0x148
    3b0c:	mov	r1, #3
    3b10:	mov	r0, #8
    3b14:	bl	0 <coda_type_number_new>
    3b18:	mov	r3, r0
    3b1c:	str	r3, [r4]
    3b20:	mrc	15, 0, r3, cr13, cr0, {3}
    3b24:	ldr	r2, [pc, #2432]	; 44ac <rinex_init+0x40a0>
    3b28:	ldr	r3, [r3, r2]
    3b2c:	add	r3, r3, #328	; 0x148
    3b30:	ldr	r3, [r3]
    3b34:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b38:	mov	r0, r3
    3b3c:	bl	0 <coda_type_number_set_endianness>
    3b40:	mrc	15, 0, r3, cr13, cr0, {3}
    3b44:	ldr	r2, [pc, #2400]	; 44ac <rinex_init+0x40a0>
    3b48:	ldr	r3, [r3, r2]
    3b4c:	add	r3, r3, #328	; 0x148
    3b50:	ldr	r1, [r3]
    3b54:	mov	r2, #64	; 0x40
    3b58:	mov	r3, #0
    3b5c:	mov	r0, r1
    3b60:	bl	0 <coda_type_set_bit_size>
    3b64:	mrc	15, 0, r3, cr13, cr0, {3}
    3b68:	ldr	r2, [pc, #2364]	; 44ac <rinex_init+0x40a0>
    3b6c:	ldr	r3, [r3, r2]
    3b70:	add	r3, r3, #328	; 0x148
    3b74:	ldr	r3, [r3]
    3b78:	movw	r1, #0
    3b7c:	movt	r1, #0
    3b80:	mov	r0, r3
    3b84:	bl	0 <coda_type_number_set_unit>
    3b88:	mrc	15, 0, r3, cr13, cr0, {3}
    3b8c:	ldr	r2, [pc, #2328]	; 44ac <rinex_init+0x40a0>
    3b90:	ldr	r3, [r3, r2]
    3b94:	add	r3, r3, #328	; 0x148
    3b98:	ldr	r3, [r3]
    3b9c:	movw	r1, #0
    3ba0:	movt	r1, #0
    3ba4:	mov	r0, r3
    3ba8:	bl	0 <coda_type_set_description>
    3bac:	mrc	15, 0, r3, cr13, cr0, {3}
    3bb0:	ldr	r2, [pc, #2292]	; 44ac <rinex_init+0x40a0>
    3bb4:	ldr	r3, [r3, r2]
    3bb8:	add	r4, r3, #332	; 0x14c
    3bbc:	mov	r1, #3
    3bc0:	mov	r0, #8
    3bc4:	bl	0 <coda_type_number_new>
    3bc8:	mov	r3, r0
    3bcc:	str	r3, [r4]
    3bd0:	mrc	15, 0, r3, cr13, cr0, {3}
    3bd4:	ldr	r2, [pc, #2256]	; 44ac <rinex_init+0x40a0>
    3bd8:	ldr	r3, [r3, r2]
    3bdc:	add	r3, r3, #332	; 0x14c
    3be0:	ldr	r3, [r3]
    3be4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3be8:	mov	r0, r3
    3bec:	bl	0 <coda_type_number_set_endianness>
    3bf0:	mrc	15, 0, r3, cr13, cr0, {3}
    3bf4:	ldr	r2, [pc, #2224]	; 44ac <rinex_init+0x40a0>
    3bf8:	ldr	r3, [r3, r2]
    3bfc:	add	r3, r3, #332	; 0x14c
    3c00:	ldr	r1, [r3]
    3c04:	mov	r2, #64	; 0x40
    3c08:	mov	r3, #0
    3c0c:	mov	r0, r1
    3c10:	bl	0 <coda_type_set_bit_size>
    3c14:	mrc	15, 0, r3, cr13, cr0, {3}
    3c18:	ldr	r2, [pc, #2188]	; 44ac <rinex_init+0x40a0>
    3c1c:	ldr	r3, [r3, r2]
    3c20:	add	r3, r3, #332	; 0x14c
    3c24:	ldr	r3, [r3]
    3c28:	movw	r1, #0
    3c2c:	movt	r1, #0
    3c30:	mov	r0, r3
    3c34:	bl	0 <coda_type_number_set_unit>
    3c38:	mrc	15, 0, r3, cr13, cr0, {3}
    3c3c:	ldr	r2, [pc, #2152]	; 44ac <rinex_init+0x40a0>
    3c40:	ldr	r3, [r3, r2]
    3c44:	add	r3, r3, #332	; 0x14c
    3c48:	ldr	r3, [r3]
    3c4c:	movw	r1, #0
    3c50:	movt	r1, #0
    3c54:	mov	r0, r3
    3c58:	bl	0 <coda_type_set_description>
    3c5c:	mrc	15, 0, r3, cr13, cr0, {3}
    3c60:	ldr	r2, [pc, #2116]	; 44ac <rinex_init+0x40a0>
    3c64:	ldr	r3, [r3, r2]
    3c68:	add	r4, r3, #336	; 0x150
    3c6c:	mov	r1, #3
    3c70:	mov	r0, #8
    3c74:	bl	0 <coda_type_number_new>
    3c78:	mov	r3, r0
    3c7c:	str	r3, [r4]
    3c80:	mrc	15, 0, r3, cr13, cr0, {3}
    3c84:	ldr	r2, [pc, #2080]	; 44ac <rinex_init+0x40a0>
    3c88:	ldr	r3, [r3, r2]
    3c8c:	add	r3, r3, #336	; 0x150
    3c90:	ldr	r3, [r3]
    3c94:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c98:	mov	r0, r3
    3c9c:	bl	0 <coda_type_number_set_endianness>
    3ca0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ca4:	ldr	r2, [pc, #2048]	; 44ac <rinex_init+0x40a0>
    3ca8:	ldr	r3, [r3, r2]
    3cac:	add	r3, r3, #336	; 0x150
    3cb0:	ldr	r1, [r3]
    3cb4:	mov	r2, #64	; 0x40
    3cb8:	mov	r3, #0
    3cbc:	mov	r0, r1
    3cc0:	bl	0 <coda_type_set_bit_size>
    3cc4:	mrc	15, 0, r3, cr13, cr0, {3}
    3cc8:	ldr	r2, [pc, #2012]	; 44ac <rinex_init+0x40a0>
    3ccc:	ldr	r3, [r3, r2]
    3cd0:	add	r3, r3, #336	; 0x150
    3cd4:	ldr	r3, [r3]
    3cd8:	movw	r1, #0
    3cdc:	movt	r1, #0
    3ce0:	mov	r0, r3
    3ce4:	bl	0 <coda_type_number_set_unit>
    3ce8:	mrc	15, 0, r3, cr13, cr0, {3}
    3cec:	ldr	r2, [pc, #1976]	; 44ac <rinex_init+0x40a0>
    3cf0:	ldr	r3, [r3, r2]
    3cf4:	add	r3, r3, #336	; 0x150
    3cf8:	ldr	r3, [r3]
    3cfc:	movw	r1, #0
    3d00:	movt	r1, #0
    3d04:	mov	r0, r3
    3d08:	bl	0 <coda_type_set_description>
    3d0c:	mrc	15, 0, r3, cr13, cr0, {3}
    3d10:	ldr	r2, [pc, #1940]	; 44ac <rinex_init+0x40a0>
    3d14:	ldr	r3, [r3, r2]
    3d18:	add	r4, r3, #340	; 0x154
    3d1c:	mov	r1, #3
    3d20:	mov	r0, #8
    3d24:	bl	0 <coda_type_number_new>
    3d28:	mov	r3, r0
    3d2c:	str	r3, [r4]
    3d30:	mrc	15, 0, r3, cr13, cr0, {3}
    3d34:	ldr	r2, [pc, #1904]	; 44ac <rinex_init+0x40a0>
    3d38:	ldr	r3, [r3, r2]
    3d3c:	add	r3, r3, #340	; 0x154
    3d40:	ldr	r3, [r3]
    3d44:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d48:	mov	r0, r3
    3d4c:	bl	0 <coda_type_number_set_endianness>
    3d50:	mrc	15, 0, r3, cr13, cr0, {3}
    3d54:	ldr	r2, [pc, #1872]	; 44ac <rinex_init+0x40a0>
    3d58:	ldr	r3, [r3, r2]
    3d5c:	add	r3, r3, #340	; 0x154
    3d60:	ldr	r1, [r3]
    3d64:	mov	r2, #64	; 0x40
    3d68:	mov	r3, #0
    3d6c:	mov	r0, r1
    3d70:	bl	0 <coda_type_set_bit_size>
    3d74:	mrc	15, 0, r3, cr13, cr0, {3}
    3d78:	ldr	r2, [pc, #1836]	; 44ac <rinex_init+0x40a0>
    3d7c:	ldr	r3, [r3, r2]
    3d80:	add	r3, r3, #340	; 0x154
    3d84:	ldr	r3, [r3]
    3d88:	movw	r1, #0
    3d8c:	movt	r1, #0
    3d90:	mov	r0, r3
    3d94:	bl	0 <coda_type_number_set_unit>
    3d98:	mrc	15, 0, r3, cr13, cr0, {3}
    3d9c:	ldr	r2, [pc, #1800]	; 44ac <rinex_init+0x40a0>
    3da0:	ldr	r3, [r3, r2]
    3da4:	add	r3, r3, #340	; 0x154
    3da8:	ldr	r3, [r3]
    3dac:	movw	r1, #0
    3db0:	movt	r1, #0
    3db4:	mov	r0, r3
    3db8:	bl	0 <coda_type_set_description>
    3dbc:	mrc	15, 0, r3, cr13, cr0, {3}
    3dc0:	ldr	r2, [pc, #1764]	; 44ac <rinex_init+0x40a0>
    3dc4:	ldr	r3, [r3, r2]
    3dc8:	add	r4, r3, #344	; 0x158
    3dcc:	mov	r1, #3
    3dd0:	mov	r0, #8
    3dd4:	bl	0 <coda_type_number_new>
    3dd8:	mov	r3, r0
    3ddc:	str	r3, [r4]
    3de0:	mrc	15, 0, r3, cr13, cr0, {3}
    3de4:	ldr	r2, [pc, #1728]	; 44ac <rinex_init+0x40a0>
    3de8:	ldr	r3, [r3, r2]
    3dec:	add	r3, r3, #344	; 0x158
    3df0:	ldr	r3, [r3]
    3df4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3df8:	mov	r0, r3
    3dfc:	bl	0 <coda_type_number_set_endianness>
    3e00:	mrc	15, 0, r3, cr13, cr0, {3}
    3e04:	ldr	r2, [pc, #1696]	; 44ac <rinex_init+0x40a0>
    3e08:	ldr	r3, [r3, r2]
    3e0c:	add	r3, r3, #344	; 0x158
    3e10:	ldr	r1, [r3]
    3e14:	mov	r2, #64	; 0x40
    3e18:	mov	r3, #0
    3e1c:	mov	r0, r1
    3e20:	bl	0 <coda_type_set_bit_size>
    3e24:	mrc	15, 0, r3, cr13, cr0, {3}
    3e28:	ldr	r2, [pc, #1660]	; 44ac <rinex_init+0x40a0>
    3e2c:	ldr	r3, [r3, r2]
    3e30:	add	r3, r3, #344	; 0x158
    3e34:	ldr	r3, [r3]
    3e38:	movw	r1, #0
    3e3c:	movt	r1, #0
    3e40:	mov	r0, r3
    3e44:	bl	0 <coda_type_number_set_unit>
    3e48:	mrc	15, 0, r3, cr13, cr0, {3}
    3e4c:	ldr	r2, [pc, #1624]	; 44ac <rinex_init+0x40a0>
    3e50:	ldr	r3, [r3, r2]
    3e54:	add	r3, r3, #344	; 0x158
    3e58:	ldr	r3, [r3]
    3e5c:	movw	r1, #0
    3e60:	movt	r1, #0
    3e64:	mov	r0, r3
    3e68:	bl	0 <coda_type_set_description>
    3e6c:	mrc	15, 0, r3, cr13, cr0, {3}
    3e70:	ldr	r2, [pc, #1588]	; 44ac <rinex_init+0x40a0>
    3e74:	ldr	r3, [r3, r2]
    3e78:	add	r4, r3, #348	; 0x15c
    3e7c:	mov	r1, #3
    3e80:	mov	r0, #8
    3e84:	bl	0 <coda_type_number_new>
    3e88:	mov	r3, r0
    3e8c:	str	r3, [r4]
    3e90:	mrc	15, 0, r3, cr13, cr0, {3}
    3e94:	ldr	r2, [pc, #1552]	; 44ac <rinex_init+0x40a0>
    3e98:	ldr	r3, [r3, r2]
    3e9c:	add	r3, r3, #348	; 0x15c
    3ea0:	ldr	r3, [r3]
    3ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3ea8:	mov	r0, r3
    3eac:	bl	0 <coda_type_number_set_endianness>
    3eb0:	mrc	15, 0, r3, cr13, cr0, {3}
    3eb4:	ldr	r2, [pc, #1520]	; 44ac <rinex_init+0x40a0>
    3eb8:	ldr	r3, [r3, r2]
    3ebc:	add	r3, r3, #348	; 0x15c
    3ec0:	ldr	r1, [r3]
    3ec4:	mov	r2, #64	; 0x40
    3ec8:	mov	r3, #0
    3ecc:	mov	r0, r1
    3ed0:	bl	0 <coda_type_set_bit_size>
    3ed4:	mrc	15, 0, r3, cr13, cr0, {3}
    3ed8:	ldr	r2, [pc, #1484]	; 44ac <rinex_init+0x40a0>
    3edc:	ldr	r3, [r3, r2]
    3ee0:	add	r3, r3, #348	; 0x15c
    3ee4:	ldr	r3, [r3]
    3ee8:	movw	r1, #0
    3eec:	movt	r1, #0
    3ef0:	mov	r0, r3
    3ef4:	bl	0 <coda_type_number_set_unit>
    3ef8:	mrc	15, 0, r3, cr13, cr0, {3}
    3efc:	ldr	r2, [pc, #1448]	; 44ac <rinex_init+0x40a0>
    3f00:	ldr	r3, [r3, r2]
    3f04:	add	r3, r3, #348	; 0x15c
    3f08:	ldr	r3, [r3]
    3f0c:	movw	r1, #0
    3f10:	movt	r1, #0
    3f14:	mov	r0, r3
    3f18:	bl	0 <coda_type_set_description>
    3f1c:	mrc	15, 0, r3, cr13, cr0, {3}
    3f20:	ldr	r2, [pc, #1412]	; 44ac <rinex_init+0x40a0>
    3f24:	ldr	r3, [r3, r2]
    3f28:	add	r4, r3, #352	; 0x160
    3f2c:	mov	r1, #3
    3f30:	mov	r0, #8
    3f34:	bl	0 <coda_type_number_new>
    3f38:	mov	r3, r0
    3f3c:	str	r3, [r4]
    3f40:	mrc	15, 0, r3, cr13, cr0, {3}
    3f44:	ldr	r2, [pc, #1376]	; 44ac <rinex_init+0x40a0>
    3f48:	ldr	r3, [r3, r2]
    3f4c:	add	r3, r3, #352	; 0x160
    3f50:	ldr	r3, [r3]
    3f54:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f58:	mov	r0, r3
    3f5c:	bl	0 <coda_type_number_set_endianness>
    3f60:	mrc	15, 0, r3, cr13, cr0, {3}
    3f64:	ldr	r2, [pc, #1344]	; 44ac <rinex_init+0x40a0>
    3f68:	ldr	r3, [r3, r2]
    3f6c:	add	r3, r3, #352	; 0x160
    3f70:	ldr	r1, [r3]
    3f74:	mov	r2, #64	; 0x40
    3f78:	mov	r3, #0
    3f7c:	mov	r0, r1
    3f80:	bl	0 <coda_type_set_bit_size>
    3f84:	mrc	15, 0, r3, cr13, cr0, {3}
    3f88:	ldr	r2, [pc, #1308]	; 44ac <rinex_init+0x40a0>
    3f8c:	ldr	r3, [r3, r2]
    3f90:	add	r3, r3, #352	; 0x160
    3f94:	ldr	r3, [r3]
    3f98:	movw	r1, #0
    3f9c:	movt	r1, #0
    3fa0:	mov	r0, r3
    3fa4:	bl	0 <coda_type_number_set_unit>
    3fa8:	mrc	15, 0, r3, cr13, cr0, {3}
    3fac:	ldr	r2, [pc, #1272]	; 44ac <rinex_init+0x40a0>
    3fb0:	ldr	r3, [r3, r2]
    3fb4:	add	r3, r3, #352	; 0x160
    3fb8:	ldr	r3, [r3]
    3fbc:	movw	r1, #0
    3fc0:	movt	r1, #0
    3fc4:	mov	r0, r3
    3fc8:	bl	0 <coda_type_set_description>
    3fcc:	mrc	15, 0, r3, cr13, cr0, {3}
    3fd0:	ldr	r2, [pc, #1236]	; 44ac <rinex_init+0x40a0>
    3fd4:	ldr	r3, [r3, r2]
    3fd8:	add	r4, r3, #356	; 0x164
    3fdc:	mov	r1, #3
    3fe0:	mov	r0, #8
    3fe4:	bl	0 <coda_type_number_new>
    3fe8:	mov	r3, r0
    3fec:	str	r3, [r4]
    3ff0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ff4:	ldr	r2, [pc, #1200]	; 44ac <rinex_init+0x40a0>
    3ff8:	ldr	r3, [r3, r2]
    3ffc:	add	r3, r3, #356	; 0x164
    4000:	ldr	r3, [r3]
    4004:	ldr	r1, [fp, #-20]	; 0xffffffec
    4008:	mov	r0, r3
    400c:	bl	0 <coda_type_number_set_endianness>
    4010:	mrc	15, 0, r3, cr13, cr0, {3}
    4014:	ldr	r2, [pc, #1168]	; 44ac <rinex_init+0x40a0>
    4018:	ldr	r3, [r3, r2]
    401c:	add	r3, r3, #356	; 0x164
    4020:	ldr	r1, [r3]
    4024:	mov	r2, #64	; 0x40
    4028:	mov	r3, #0
    402c:	mov	r0, r1
    4030:	bl	0 <coda_type_set_bit_size>
    4034:	mrc	15, 0, r3, cr13, cr0, {3}
    4038:	ldr	r2, [pc, #1132]	; 44ac <rinex_init+0x40a0>
    403c:	ldr	r3, [r3, r2]
    4040:	add	r3, r3, #356	; 0x164
    4044:	ldr	r3, [r3]
    4048:	movw	r1, #0
    404c:	movt	r1, #0
    4050:	mov	r0, r3
    4054:	bl	0 <coda_type_set_description>
    4058:	mrc	15, 0, r3, cr13, cr0, {3}
    405c:	ldr	r2, [pc, #1096]	; 44ac <rinex_init+0x40a0>
    4060:	ldr	r3, [r3, r2]
    4064:	add	r4, r3, #360	; 0x168
    4068:	mov	r1, #3
    406c:	mov	r0, #8
    4070:	bl	0 <coda_type_number_new>
    4074:	mov	r3, r0
    4078:	str	r3, [r4]
    407c:	mrc	15, 0, r3, cr13, cr0, {3}
    4080:	ldr	r2, [pc, #1060]	; 44ac <rinex_init+0x40a0>
    4084:	ldr	r3, [r3, r2]
    4088:	add	r3, r3, #360	; 0x168
    408c:	ldr	r3, [r3]
    4090:	ldr	r1, [fp, #-20]	; 0xffffffec
    4094:	mov	r0, r3
    4098:	bl	0 <coda_type_number_set_endianness>
    409c:	mrc	15, 0, r3, cr13, cr0, {3}
    40a0:	ldr	r2, [pc, #1028]	; 44ac <rinex_init+0x40a0>
    40a4:	ldr	r3, [r3, r2]
    40a8:	add	r3, r3, #360	; 0x168
    40ac:	ldr	r1, [r3]
    40b0:	mov	r2, #64	; 0x40
    40b4:	mov	r3, #0
    40b8:	mov	r0, r1
    40bc:	bl	0 <coda_type_set_bit_size>
    40c0:	mrc	15, 0, r3, cr13, cr0, {3}
    40c4:	ldr	r2, [pc, #992]	; 44ac <rinex_init+0x40a0>
    40c8:	ldr	r3, [r3, r2]
    40cc:	add	r3, r3, #360	; 0x168
    40d0:	ldr	r3, [r3]
    40d4:	movw	r1, #0
    40d8:	movt	r1, #0
    40dc:	mov	r0, r3
    40e0:	bl	0 <coda_type_set_description>
    40e4:	mrc	15, 0, r3, cr13, cr0, {3}
    40e8:	ldr	r2, [pc, #956]	; 44ac <rinex_init+0x40a0>
    40ec:	ldr	r3, [r3, r2]
    40f0:	add	r4, r3, #364	; 0x16c
    40f4:	mov	r1, #3
    40f8:	mov	r0, #8
    40fc:	bl	0 <coda_type_number_new>
    4100:	mov	r3, r0
    4104:	str	r3, [r4]
    4108:	mrc	15, 0, r3, cr13, cr0, {3}
    410c:	ldr	r2, [pc, #920]	; 44ac <rinex_init+0x40a0>
    4110:	ldr	r3, [r3, r2]
    4114:	add	r3, r3, #364	; 0x16c
    4118:	ldr	r3, [r3]
    411c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4120:	mov	r0, r3
    4124:	bl	0 <coda_type_number_set_endianness>
    4128:	mrc	15, 0, r3, cr13, cr0, {3}
    412c:	ldr	r2, [pc, #888]	; 44ac <rinex_init+0x40a0>
    4130:	ldr	r3, [r3, r2]
    4134:	add	r3, r3, #364	; 0x16c
    4138:	ldr	r1, [r3]
    413c:	mov	r2, #64	; 0x40
    4140:	mov	r3, #0
    4144:	mov	r0, r1
    4148:	bl	0 <coda_type_set_bit_size>
    414c:	mrc	15, 0, r3, cr13, cr0, {3}
    4150:	ldr	r2, [pc, #852]	; 44ac <rinex_init+0x40a0>
    4154:	ldr	r3, [r3, r2]
    4158:	add	r3, r3, #364	; 0x16c
    415c:	ldr	r3, [r3]
    4160:	movw	r1, #0
    4164:	movt	r1, #0
    4168:	mov	r0, r3
    416c:	bl	0 <coda_type_set_description>
    4170:	mrc	15, 0, r3, cr13, cr0, {3}
    4174:	ldr	r2, [pc, #816]	; 44ac <rinex_init+0x40a0>
    4178:	ldr	r3, [r3, r2]
    417c:	add	r4, r3, #368	; 0x170
    4180:	mov	r1, #3
    4184:	mov	r0, #8
    4188:	bl	0 <coda_type_number_new>
    418c:	mov	r3, r0
    4190:	str	r3, [r4]
    4194:	mrc	15, 0, r3, cr13, cr0, {3}
    4198:	ldr	r2, [pc, #780]	; 44ac <rinex_init+0x40a0>
    419c:	ldr	r3, [r3, r2]
    41a0:	add	r3, r3, #368	; 0x170
    41a4:	ldr	r3, [r3]
    41a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    41ac:	mov	r0, r3
    41b0:	bl	0 <coda_type_number_set_endianness>
    41b4:	mrc	15, 0, r3, cr13, cr0, {3}
    41b8:	ldr	r2, [pc, #748]	; 44ac <rinex_init+0x40a0>
    41bc:	ldr	r3, [r3, r2]
    41c0:	add	r3, r3, #368	; 0x170
    41c4:	ldr	r1, [r3]
    41c8:	mov	r2, #64	; 0x40
    41cc:	mov	r3, #0
    41d0:	mov	r0, r1
    41d4:	bl	0 <coda_type_set_bit_size>
    41d8:	mrc	15, 0, r3, cr13, cr0, {3}
    41dc:	ldr	r2, [pc, #712]	; 44ac <rinex_init+0x40a0>
    41e0:	ldr	r3, [r3, r2]
    41e4:	add	r3, r3, #368	; 0x170
    41e8:	ldr	r3, [r3]
    41ec:	movw	r1, #0
    41f0:	movt	r1, #0
    41f4:	mov	r0, r3
    41f8:	bl	0 <coda_type_number_set_unit>
    41fc:	mrc	15, 0, r3, cr13, cr0, {3}
    4200:	ldr	r2, [pc, #676]	; 44ac <rinex_init+0x40a0>
    4204:	ldr	r3, [r3, r2]
    4208:	add	r3, r3, #368	; 0x170
    420c:	ldr	r3, [r3]
    4210:	movw	r1, #0
    4214:	movt	r1, #0
    4218:	mov	r0, r3
    421c:	bl	0 <coda_type_set_description>
    4220:	mrc	15, 0, r3, cr13, cr0, {3}
    4224:	ldr	r2, [pc, #640]	; 44ac <rinex_init+0x40a0>
    4228:	ldr	r3, [r3, r2]
    422c:	add	r4, r3, #372	; 0x174
    4230:	mov	r1, #3
    4234:	mov	r0, #8
    4238:	bl	0 <coda_type_number_new>
    423c:	mov	r3, r0
    4240:	str	r3, [r4]
    4244:	mrc	15, 0, r3, cr13, cr0, {3}
    4248:	ldr	r2, [pc, #604]	; 44ac <rinex_init+0x40a0>
    424c:	ldr	r3, [r3, r2]
    4250:	add	r3, r3, #372	; 0x174
    4254:	ldr	r3, [r3]
    4258:	ldr	r1, [fp, #-20]	; 0xffffffec
    425c:	mov	r0, r3
    4260:	bl	0 <coda_type_number_set_endianness>
    4264:	mrc	15, 0, r3, cr13, cr0, {3}
    4268:	ldr	r2, [pc, #572]	; 44ac <rinex_init+0x40a0>
    426c:	ldr	r3, [r3, r2]
    4270:	add	r3, r3, #372	; 0x174
    4274:	ldr	r1, [r3]
    4278:	mov	r2, #64	; 0x40
    427c:	mov	r3, #0
    4280:	mov	r0, r1
    4284:	bl	0 <coda_type_set_bit_size>
    4288:	mrc	15, 0, r3, cr13, cr0, {3}
    428c:	ldr	r2, [pc, #536]	; 44ac <rinex_init+0x40a0>
    4290:	ldr	r3, [r3, r2]
    4294:	add	r3, r3, #372	; 0x174
    4298:	ldr	r3, [r3]
    429c:	movw	r1, #0
    42a0:	movt	r1, #0
    42a4:	mov	r0, r3
    42a8:	bl	0 <coda_type_set_description>
    42ac:	mrc	15, 0, r3, cr13, cr0, {3}
    42b0:	ldr	r2, [pc, #500]	; 44ac <rinex_init+0x40a0>
    42b4:	ldr	r3, [r3, r2]
    42b8:	add	r4, r3, #376	; 0x178
    42bc:	mov	r1, #3
    42c0:	mov	r0, #8
    42c4:	bl	0 <coda_type_number_new>
    42c8:	mov	r3, r0
    42cc:	str	r3, [r4]
    42d0:	mrc	15, 0, r3, cr13, cr0, {3}
    42d4:	ldr	r2, [pc, #464]	; 44ac <rinex_init+0x40a0>
    42d8:	ldr	r3, [r3, r2]
    42dc:	add	r3, r3, #376	; 0x178
    42e0:	ldr	r3, [r3]
    42e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    42e8:	mov	r0, r3
    42ec:	bl	0 <coda_type_number_set_endianness>
    42f0:	mrc	15, 0, r3, cr13, cr0, {3}
    42f4:	ldr	r2, [pc, #432]	; 44ac <rinex_init+0x40a0>
    42f8:	ldr	r3, [r3, r2]
    42fc:	add	r3, r3, #376	; 0x178
    4300:	ldr	r1, [r3]
    4304:	mov	r2, #64	; 0x40
    4308:	mov	r3, #0
    430c:	mov	r0, r1
    4310:	bl	0 <coda_type_set_bit_size>
    4314:	mrc	15, 0, r3, cr13, cr0, {3}
    4318:	ldr	r2, [pc, #396]	; 44ac <rinex_init+0x40a0>
    431c:	ldr	r3, [r3, r2]
    4320:	add	r3, r3, #376	; 0x178
    4324:	ldr	r3, [r3]
    4328:	movw	r1, #0
    432c:	movt	r1, #0
    4330:	mov	r0, r3
    4334:	bl	0 <coda_type_number_set_unit>
    4338:	mrc	15, 0, r3, cr13, cr0, {3}
    433c:	ldr	r2, [pc, #360]	; 44ac <rinex_init+0x40a0>
    4340:	ldr	r3, [r3, r2]
    4344:	add	r3, r3, #376	; 0x178
    4348:	ldr	r3, [r3]
    434c:	movw	r1, #0
    4350:	movt	r1, #0
    4354:	mov	r0, r3
    4358:	bl	0 <coda_type_set_description>
    435c:	mrc	15, 0, r3, cr13, cr0, {3}
    4360:	ldr	r2, [pc, #324]	; 44ac <rinex_init+0x40a0>
    4364:	ldr	r3, [r3, r2]
    4368:	add	r4, r3, #380	; 0x17c
    436c:	mov	r1, #3
    4370:	mov	r0, #8
    4374:	bl	0 <coda_type_number_new>
    4378:	mov	r3, r0
    437c:	str	r3, [r4]
    4380:	mrc	15, 0, r3, cr13, cr0, {3}
    4384:	ldr	r2, [pc, #288]	; 44ac <rinex_init+0x40a0>
    4388:	ldr	r3, [r3, r2]
    438c:	add	r3, r3, #380	; 0x17c
    4390:	ldr	r3, [r3]
    4394:	ldr	r1, [fp, #-20]	; 0xffffffec
    4398:	mov	r0, r3
    439c:	bl	0 <coda_type_number_set_endianness>
    43a0:	mrc	15, 0, r3, cr13, cr0, {3}
    43a4:	ldr	r2, [pc, #256]	; 44ac <rinex_init+0x40a0>
    43a8:	ldr	r3, [r3, r2]
    43ac:	add	r3, r3, #380	; 0x17c
    43b0:	ldr	r1, [r3]
    43b4:	mov	r2, #64	; 0x40
    43b8:	mov	r3, #0
    43bc:	mov	r0, r1
    43c0:	bl	0 <coda_type_set_bit_size>
    43c4:	mrc	15, 0, r3, cr13, cr0, {3}
    43c8:	ldr	r2, [pc, #220]	; 44ac <rinex_init+0x40a0>
    43cc:	ldr	r3, [r3, r2]
    43d0:	add	r3, r3, #380	; 0x17c
    43d4:	ldr	r3, [r3]
    43d8:	movw	r1, #0
    43dc:	movt	r1, #0
    43e0:	mov	r0, r3
    43e4:	bl	0 <coda_type_set_description>
    43e8:	mrc	15, 0, r3, cr13, cr0, {3}
    43ec:	ldr	r2, [pc, #184]	; 44ac <rinex_init+0x40a0>
    43f0:	ldr	r3, [r3, r2]
    43f4:	add	r4, r3, #384	; 0x180
    43f8:	mov	r1, #3
    43fc:	mov	r0, #8
    4400:	bl	0 <coda_type_number_new>
    4404:	mov	r3, r0
    4408:	str	r3, [r4]
    440c:	mrc	15, 0, r3, cr13, cr0, {3}
    4410:	ldr	r2, [pc, #148]	; 44ac <rinex_init+0x40a0>
    4414:	ldr	r3, [r3, r2]
    4418:	add	r3, r3, #384	; 0x180
    441c:	ldr	r3, [r3]
    4420:	ldr	r1, [fp, #-20]	; 0xffffffec
    4424:	mov	r0, r3
    4428:	bl	0 <coda_type_number_set_endianness>
    442c:	mrc	15, 0, r3, cr13, cr0, {3}
    4430:	ldr	r2, [pc, #116]	; 44ac <rinex_init+0x40a0>
    4434:	ldr	r3, [r3, r2]
    4438:	add	r3, r3, #384	; 0x180
    443c:	ldr	r1, [r3]
    4440:	mov	r2, #64	; 0x40
    4444:	mov	r3, #0
    4448:	mov	r0, r1
    444c:	bl	0 <coda_type_set_bit_size>
    4450:	mrc	15, 0, r3, cr13, cr0, {3}
    4454:	ldr	r2, [pc, #80]	; 44ac <rinex_init+0x40a0>
    4458:	ldr	r3, [r3, r2]
    445c:	add	r3, r3, #384	; 0x180
    4460:	ldr	r3, [r3]
    4464:	movw	r1, #0
    4468:	movt	r1, #0
    446c:	mov	r0, r3
    4470:	bl	0 <coda_type_number_set_unit>
    4474:	mrc	15, 0, r3, cr13, cr0, {3}
    4478:	ldr	r2, [pc, #44]	; 44ac <rinex_init+0x40a0>
    447c:	ldr	r3, [r3, r2]
    4480:	add	r3, r3, #384	; 0x180
    4484:	ldr	r3, [r3]
    4488:	movw	r1, #0
    448c:	movt	r1, #0
    4490:	mov	r0, r3
    4494:	bl	0 <coda_type_set_description>
    4498:	mrc	15, 0, r3, cr13, cr0, {3}
    449c:	ldr	r2, [pc, #8]	; 44ac <rinex_init+0x40a0>
    44a0:	ldr	r3, [r3, r2]
    44a4:	add	r4, r3, #388	; 0x184
    44a8:	b	44b4 <rinex_init+0x40a8>
	...
    44b4:	mov	r1, #3
    44b8:	mov	r0, #8
    44bc:	bl	0 <coda_type_number_new>
    44c0:	mov	r3, r0
    44c4:	str	r3, [r4]
    44c8:	mrc	15, 0, r3, cr13, cr0, {3}
    44cc:	ldr	r2, [pc, #-36]	; 44b0 <rinex_init+0x40a4>
    44d0:	ldr	r3, [r3, r2]
    44d4:	add	r3, r3, #388	; 0x184
    44d8:	ldr	r3, [r3]
    44dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    44e0:	mov	r0, r3
    44e4:	bl	0 <coda_type_number_set_endianness>
    44e8:	mrc	15, 0, r3, cr13, cr0, {3}
    44ec:	ldr	r2, [pc, #-68]	; 44b0 <rinex_init+0x40a4>
    44f0:	ldr	r3, [r3, r2]
    44f4:	add	r3, r3, #388	; 0x184
    44f8:	ldr	r1, [r3]
    44fc:	mov	r2, #64	; 0x40
    4500:	mov	r3, #0
    4504:	mov	r0, r1
    4508:	bl	0 <coda_type_set_bit_size>
    450c:	mrc	15, 0, r3, cr13, cr0, {3}
    4510:	ldr	r2, [pc, #-104]	; 44b0 <rinex_init+0x40a4>
    4514:	ldr	r3, [r3, r2]
    4518:	add	r3, r3, #388	; 0x184
    451c:	ldr	r3, [r3]
    4520:	movw	r1, #0
    4524:	movt	r1, #0
    4528:	mov	r0, r3
    452c:	bl	0 <coda_type_number_set_unit>
    4530:	mrc	15, 0, r3, cr13, cr0, {3}
    4534:	ldr	r2, [pc, #-140]	; 44b0 <rinex_init+0x40a4>
    4538:	ldr	r3, [r3, r2]
    453c:	add	r3, r3, #388	; 0x184
    4540:	ldr	r3, [r3]
    4544:	movw	r1, #0
    4548:	movt	r1, #0
    454c:	mov	r0, r3
    4550:	bl	0 <coda_type_set_description>
    4554:	mrc	15, 0, r3, cr13, cr0, {3}
    4558:	ldr	r2, [pc, #-176]	; 44b0 <rinex_init+0x40a4>
    455c:	ldr	r3, [r3, r2]
    4560:	add	r4, r3, #392	; 0x188
    4564:	mov	r1, #3
    4568:	mov	r0, #8
    456c:	bl	0 <coda_type_number_new>
    4570:	mov	r3, r0
    4574:	str	r3, [r4]
    4578:	mrc	15, 0, r3, cr13, cr0, {3}
    457c:	ldr	r2, [pc, #-212]	; 44b0 <rinex_init+0x40a4>
    4580:	ldr	r3, [r3, r2]
    4584:	add	r3, r3, #392	; 0x188
    4588:	ldr	r3, [r3]
    458c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4590:	mov	r0, r3
    4594:	bl	0 <coda_type_number_set_endianness>
    4598:	mrc	15, 0, r3, cr13, cr0, {3}
    459c:	ldr	r2, [pc, #-244]	; 44b0 <rinex_init+0x40a4>
    45a0:	ldr	r3, [r3, r2]
    45a4:	add	r3, r3, #392	; 0x188
    45a8:	ldr	r1, [r3]
    45ac:	mov	r2, #64	; 0x40
    45b0:	mov	r3, #0
    45b4:	mov	r0, r1
    45b8:	bl	0 <coda_type_set_bit_size>
    45bc:	mrc	15, 0, r3, cr13, cr0, {3}
    45c0:	ldr	r2, [pc, #-280]	; 44b0 <rinex_init+0x40a4>
    45c4:	ldr	r3, [r3, r2]
    45c8:	add	r3, r3, #392	; 0x188
    45cc:	ldr	r3, [r3]
    45d0:	movw	r1, #0
    45d4:	movt	r1, #0
    45d8:	mov	r0, r3
    45dc:	bl	0 <coda_type_set_description>
    45e0:	mrc	15, 0, r3, cr13, cr0, {3}
    45e4:	ldr	r2, [pc, #-316]	; 44b0 <rinex_init+0x40a4>
    45e8:	ldr	r3, [r3, r2]
    45ec:	add	r4, r3, #396	; 0x18c
    45f0:	mov	r1, #2
    45f4:	mov	r0, #8
    45f8:	bl	0 <coda_type_number_new>
    45fc:	mov	r3, r0
    4600:	str	r3, [r4]
    4604:	mrc	15, 0, r3, cr13, cr0, {3}
    4608:	ldr	r2, [pc, #-352]	; 44b0 <rinex_init+0x40a4>
    460c:	ldr	r3, [r3, r2]
    4610:	add	r3, r3, #396	; 0x18c
    4614:	ldr	r3, [r3]
    4618:	ldr	r1, [fp, #-20]	; 0xffffffec
    461c:	mov	r0, r3
    4620:	bl	0 <coda_type_number_set_endianness>
    4624:	mrc	15, 0, r3, cr13, cr0, {3}
    4628:	ldr	r2, [pc, #-384]	; 44b0 <rinex_init+0x40a4>
    462c:	ldr	r3, [r3, r2]
    4630:	add	r3, r3, #396	; 0x18c
    4634:	ldr	r3, [r3]
    4638:	mov	r1, #5
    463c:	mov	r0, r3
    4640:	bl	0 <coda_type_set_read_type>
    4644:	mrc	15, 0, r3, cr13, cr0, {3}
    4648:	ldr	r2, [pc, #-416]	; 44b0 <rinex_init+0x40a4>
    464c:	ldr	r3, [r3, r2]
    4650:	add	r3, r3, #396	; 0x18c
    4654:	ldr	r1, [r3]
    4658:	mov	r2, #32
    465c:	mov	r3, #0
    4660:	mov	r0, r1
    4664:	bl	0 <coda_type_set_bit_size>
    4668:	mrc	15, 0, r3, cr13, cr0, {3}
    466c:	ldr	r2, [pc, #-452]	; 44b0 <rinex_init+0x40a4>
    4670:	ldr	r3, [r3, r2]
    4674:	add	r3, r3, #396	; 0x18c
    4678:	ldr	r3, [r3]
    467c:	movw	r1, #0
    4680:	movt	r1, #0
    4684:	mov	r0, r3
    4688:	bl	0 <coda_type_set_description>
    468c:	mrc	15, 0, r3, cr13, cr0, {3}
    4690:	ldr	r2, [pc, #-488]	; 44b0 <rinex_init+0x40a4>
    4694:	ldr	r3, [r3, r2]
    4698:	add	r4, r3, #400	; 0x190
    469c:	mov	r1, #3
    46a0:	mov	r0, #8
    46a4:	bl	0 <coda_type_number_new>
    46a8:	mov	r3, r0
    46ac:	str	r3, [r4]
    46b0:	mrc	15, 0, r3, cr13, cr0, {3}
    46b4:	ldr	r2, [pc, #-524]	; 44b0 <rinex_init+0x40a4>
    46b8:	ldr	r3, [r3, r2]
    46bc:	add	r3, r3, #400	; 0x190
    46c0:	ldr	r3, [r3]
    46c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    46c8:	mov	r0, r3
    46cc:	bl	0 <coda_type_number_set_endianness>
    46d0:	mrc	15, 0, r3, cr13, cr0, {3}
    46d4:	ldr	r2, [pc, #-556]	; 44b0 <rinex_init+0x40a4>
    46d8:	ldr	r3, [r3, r2]
    46dc:	add	r3, r3, #400	; 0x190
    46e0:	ldr	r1, [r3]
    46e4:	mov	r2, #64	; 0x40
    46e8:	mov	r3, #0
    46ec:	mov	r0, r1
    46f0:	bl	0 <coda_type_set_bit_size>
    46f4:	mrc	15, 0, r3, cr13, cr0, {3}
    46f8:	ldr	r2, [pc, #-592]	; 44b0 <rinex_init+0x40a4>
    46fc:	ldr	r3, [r3, r2]
    4700:	add	r3, r3, #400	; 0x190
    4704:	ldr	r3, [r3]
    4708:	movw	r1, #0
    470c:	movt	r1, #0
    4710:	mov	r0, r3
    4714:	bl	0 <coda_type_set_description>
    4718:	mrc	15, 0, r3, cr13, cr0, {3}
    471c:	ldr	r2, [pc, #-628]	; 44b0 <rinex_init+0x40a4>
    4720:	ldr	r3, [r3, r2]
    4724:	add	r4, r3, #404	; 0x194
    4728:	mov	r1, #3
    472c:	mov	r0, #8
    4730:	bl	0 <coda_type_number_new>
    4734:	mov	r3, r0
    4738:	str	r3, [r4]
    473c:	mrc	15, 0, r3, cr13, cr0, {3}
    4740:	ldr	r2, [pc, #-664]	; 44b0 <rinex_init+0x40a4>
    4744:	ldr	r3, [r3, r2]
    4748:	add	r3, r3, #404	; 0x194
    474c:	ldr	r3, [r3]
    4750:	ldr	r1, [fp, #-20]	; 0xffffffec
    4754:	mov	r0, r3
    4758:	bl	0 <coda_type_number_set_endianness>
    475c:	mrc	15, 0, r3, cr13, cr0, {3}
    4760:	ldr	r2, [pc, #-696]	; 44b0 <rinex_init+0x40a4>
    4764:	ldr	r3, [r3, r2]
    4768:	add	r3, r3, #404	; 0x194
    476c:	ldr	r1, [r3]
    4770:	mov	r2, #64	; 0x40
    4774:	mov	r3, #0
    4778:	mov	r0, r1
    477c:	bl	0 <coda_type_set_bit_size>
    4780:	mrc	15, 0, r3, cr13, cr0, {3}
    4784:	ldr	r2, [pc, #-732]	; 44b0 <rinex_init+0x40a4>
    4788:	ldr	r3, [r3, r2]
    478c:	add	r3, r3, #404	; 0x194
    4790:	ldr	r3, [r3]
    4794:	movw	r1, #0
    4798:	movt	r1, #0
    479c:	mov	r0, r3
    47a0:	bl	0 <coda_type_number_set_unit>
    47a4:	mrc	15, 0, r3, cr13, cr0, {3}
    47a8:	ldr	r2, [pc, #-768]	; 44b0 <rinex_init+0x40a4>
    47ac:	ldr	r3, [r3, r2]
    47b0:	add	r3, r3, #404	; 0x194
    47b4:	ldr	r3, [r3]
    47b8:	movw	r1, #0
    47bc:	movt	r1, #0
    47c0:	mov	r0, r3
    47c4:	bl	0 <coda_type_set_description>
    47c8:	mrc	15, 0, r3, cr13, cr0, {3}
    47cc:	ldr	r2, [pc, #-804]	; 44b0 <rinex_init+0x40a4>
    47d0:	ldr	r3, [r3, r2]
    47d4:	add	r4, r3, #408	; 0x198
    47d8:	mov	r1, #2
    47dc:	mov	r0, #8
    47e0:	bl	0 <coda_type_number_new>
    47e4:	mov	r3, r0
    47e8:	str	r3, [r4]
    47ec:	mrc	15, 0, r3, cr13, cr0, {3}
    47f0:	ldr	r2, [pc, #-840]	; 44b0 <rinex_init+0x40a4>
    47f4:	ldr	r3, [r3, r2]
    47f8:	add	r3, r3, #408	; 0x198
    47fc:	ldr	r3, [r3]
    4800:	ldr	r1, [fp, #-20]	; 0xffffffec
    4804:	mov	r0, r3
    4808:	bl	0 <coda_type_number_set_endianness>
    480c:	mrc	15, 0, r3, cr13, cr0, {3}
    4810:	ldr	r2, [pc, #-872]	; 44b0 <rinex_init+0x40a4>
    4814:	ldr	r3, [r3, r2]
    4818:	add	r3, r3, #408	; 0x198
    481c:	ldr	r3, [r3]
    4820:	mov	r1, #5
    4824:	mov	r0, r3
    4828:	bl	0 <coda_type_set_read_type>
    482c:	mrc	15, 0, r3, cr13, cr0, {3}
    4830:	ldr	r2, [pc, #-904]	; 44b0 <rinex_init+0x40a4>
    4834:	ldr	r3, [r3, r2]
    4838:	add	r3, r3, #408	; 0x198
    483c:	ldr	r1, [r3]
    4840:	mov	r2, #32
    4844:	mov	r3, #0
    4848:	mov	r0, r1
    484c:	bl	0 <coda_type_set_bit_size>
    4850:	mrc	15, 0, r3, cr13, cr0, {3}
    4854:	ldr	r2, [pc, #-940]	; 44b0 <rinex_init+0x40a4>
    4858:	ldr	r3, [r3, r2]
    485c:	add	r3, r3, #408	; 0x198
    4860:	ldr	r3, [r3]
    4864:	movw	r1, #0
    4868:	movt	r1, #0
    486c:	mov	r0, r3
    4870:	bl	0 <coda_type_set_description>
    4874:	mrc	15, 0, r3, cr13, cr0, {3}
    4878:	ldr	r2, [pc, #-976]	; 44b0 <rinex_init+0x40a4>
    487c:	ldr	r3, [r3, r2]
    4880:	add	r4, r3, #412	; 0x19c
    4884:	mov	r1, #3
    4888:	mov	r0, #8
    488c:	bl	0 <coda_type_number_new>
    4890:	mov	r3, r0
    4894:	str	r3, [r4]
    4898:	mrc	15, 0, r3, cr13, cr0, {3}
    489c:	ldr	r2, [pc, #-1012]	; 44b0 <rinex_init+0x40a4>
    48a0:	ldr	r3, [r3, r2]
    48a4:	add	r3, r3, #412	; 0x19c
    48a8:	ldr	r3, [r3]
    48ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    48b0:	mov	r0, r3
    48b4:	bl	0 <coda_type_number_set_endianness>
    48b8:	mrc	15, 0, r3, cr13, cr0, {3}
    48bc:	ldr	r2, [pc, #-1044]	; 44b0 <rinex_init+0x40a4>
    48c0:	ldr	r3, [r3, r2]
    48c4:	add	r3, r3, #412	; 0x19c
    48c8:	ldr	r1, [r3]
    48cc:	mov	r2, #64	; 0x40
    48d0:	mov	r3, #0
    48d4:	mov	r0, r1
    48d8:	bl	0 <coda_type_set_bit_size>
    48dc:	mrc	15, 0, r3, cr13, cr0, {3}
    48e0:	ldr	r2, [pc, #-1080]	; 44b0 <rinex_init+0x40a4>
    48e4:	ldr	r3, [r3, r2]
    48e8:	add	r3, r3, #412	; 0x19c
    48ec:	ldr	r3, [r3]
    48f0:	movw	r1, #0
    48f4:	movt	r1, #0
    48f8:	mov	r0, r3
    48fc:	bl	0 <coda_type_number_set_unit>
    4900:	mrc	15, 0, r3, cr13, cr0, {3}
    4904:	ldr	r2, [pc, #-1116]	; 44b0 <rinex_init+0x40a4>
    4908:	ldr	r3, [r3, r2]
    490c:	add	r3, r3, #412	; 0x19c
    4910:	ldr	r3, [r3]
    4914:	movw	r1, #0
    4918:	movt	r1, #0
    491c:	mov	r0, r3
    4920:	bl	0 <coda_type_set_description>
    4924:	mrc	15, 0, r3, cr13, cr0, {3}
    4928:	ldr	r2, [pc, #-1152]	; 44b0 <rinex_init+0x40a4>
    492c:	ldr	r3, [r3, r2]
    4930:	add	r4, r3, #416	; 0x1a0
    4934:	mov	r1, #3
    4938:	mov	r0, #8
    493c:	bl	0 <coda_type_number_new>
    4940:	mov	r3, r0
    4944:	str	r3, [r4]
    4948:	mrc	15, 0, r3, cr13, cr0, {3}
    494c:	ldr	r2, [pc, #-1188]	; 44b0 <rinex_init+0x40a4>
    4950:	ldr	r3, [r3, r2]
    4954:	add	r3, r3, #416	; 0x1a0
    4958:	ldr	r3, [r3]
    495c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4960:	mov	r0, r3
    4964:	bl	0 <coda_type_number_set_endianness>
    4968:	mrc	15, 0, r3, cr13, cr0, {3}
    496c:	ldr	r2, [pc, #-1220]	; 44b0 <rinex_init+0x40a4>
    4970:	ldr	r3, [r3, r2]
    4974:	add	r3, r3, #416	; 0x1a0
    4978:	ldr	r1, [r3]
    497c:	mov	r2, #64	; 0x40
    4980:	mov	r3, #0
    4984:	mov	r0, r1
    4988:	bl	0 <coda_type_set_bit_size>
    498c:	mrc	15, 0, r3, cr13, cr0, {3}
    4990:	ldr	r2, [pc, #-1256]	; 44b0 <rinex_init+0x40a4>
    4994:	ldr	r3, [r3, r2]
    4998:	add	r3, r3, #416	; 0x1a0
    499c:	ldr	r3, [r3]
    49a0:	movw	r1, #0
    49a4:	movt	r1, #0
    49a8:	mov	r0, r3
    49ac:	bl	0 <coda_type_number_set_unit>
    49b0:	mrc	15, 0, r3, cr13, cr0, {3}
    49b4:	ldr	r2, [pc, #-1292]	; 44b0 <rinex_init+0x40a4>
    49b8:	ldr	r3, [r3, r2]
    49bc:	add	r3, r3, #416	; 0x1a0
    49c0:	ldr	r3, [r3]
    49c4:	movw	r1, #0
    49c8:	movt	r1, #0
    49cc:	mov	r0, r3
    49d0:	bl	0 <coda_type_set_description>
    49d4:	mrc	15, 0, r3, cr13, cr0, {3}
    49d8:	ldr	r2, [pc, #-1328]	; 44b0 <rinex_init+0x40a4>
    49dc:	ldr	r3, [r3, r2]
    49e0:	add	r4, r3, #420	; 0x1a4
    49e4:	mov	r1, #3
    49e8:	mov	r0, #8
    49ec:	bl	0 <coda_type_number_new>
    49f0:	mov	r3, r0
    49f4:	str	r3, [r4]
    49f8:	mrc	15, 0, r3, cr13, cr0, {3}
    49fc:	ldr	r2, [pc, #-1364]	; 44b0 <rinex_init+0x40a4>
    4a00:	ldr	r3, [r3, r2]
    4a04:	add	r3, r3, #420	; 0x1a4
    4a08:	ldr	r3, [r3]
    4a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a10:	mov	r0, r3
    4a14:	bl	0 <coda_type_number_set_endianness>
    4a18:	mrc	15, 0, r3, cr13, cr0, {3}
    4a1c:	ldr	r2, [pc, #-1396]	; 44b0 <rinex_init+0x40a4>
    4a20:	ldr	r3, [r3, r2]
    4a24:	add	r3, r3, #420	; 0x1a4
    4a28:	ldr	r1, [r3]
    4a2c:	mov	r2, #64	; 0x40
    4a30:	mov	r3, #0
    4a34:	mov	r0, r1
    4a38:	bl	0 <coda_type_set_bit_size>
    4a3c:	mrc	15, 0, r3, cr13, cr0, {3}
    4a40:	ldr	r2, [pc, #-1432]	; 44b0 <rinex_init+0x40a4>
    4a44:	ldr	r3, [r3, r2]
    4a48:	add	r3, r3, #420	; 0x1a4
    4a4c:	ldr	r3, [r3]
    4a50:	movw	r1, #0
    4a54:	movt	r1, #0
    4a58:	mov	r0, r3
    4a5c:	bl	0 <coda_type_number_set_unit>
    4a60:	mrc	15, 0, r3, cr13, cr0, {3}
    4a64:	ldr	r2, [pc, #-1468]	; 44b0 <rinex_init+0x40a4>
    4a68:	ldr	r3, [r3, r2]
    4a6c:	add	r3, r3, #420	; 0x1a4
    4a70:	ldr	r3, [r3]
    4a74:	movw	r1, #0
    4a78:	movt	r1, #0
    4a7c:	mov	r0, r3
    4a80:	bl	0 <coda_type_set_description>
    4a84:	mrc	15, 0, r3, cr13, cr0, {3}
    4a88:	ldr	r2, [pc, #-1504]	; 44b0 <rinex_init+0x40a4>
    4a8c:	ldr	r3, [r3, r2]
    4a90:	add	r4, r3, #424	; 0x1a8
    4a94:	mov	r1, #3
    4a98:	mov	r0, #8
    4a9c:	bl	0 <coda_type_number_new>
    4aa0:	mov	r3, r0
    4aa4:	str	r3, [r4]
    4aa8:	mrc	15, 0, r3, cr13, cr0, {3}
    4aac:	ldr	r2, [pc, #-1540]	; 44b0 <rinex_init+0x40a4>
    4ab0:	ldr	r3, [r3, r2]
    4ab4:	add	r3, r3, #424	; 0x1a8
    4ab8:	ldr	r3, [r3]
    4abc:	ldr	r1, [fp, #-20]	; 0xffffffec
    4ac0:	mov	r0, r3
    4ac4:	bl	0 <coda_type_number_set_endianness>
    4ac8:	mrc	15, 0, r3, cr13, cr0, {3}
    4acc:	ldr	r2, [pc, #-1572]	; 44b0 <rinex_init+0x40a4>
    4ad0:	ldr	r3, [r3, r2]
    4ad4:	add	r3, r3, #424	; 0x1a8
    4ad8:	ldr	r1, [r3]
    4adc:	mov	r2, #64	; 0x40
    4ae0:	mov	r3, #0
    4ae4:	mov	r0, r1
    4ae8:	bl	0 <coda_type_set_bit_size>
    4aec:	mrc	15, 0, r3, cr13, cr0, {3}
    4af0:	ldr	r2, [pc, #-1608]	; 44b0 <rinex_init+0x40a4>
    4af4:	ldr	r3, [r3, r2]
    4af8:	add	r3, r3, #424	; 0x1a8
    4afc:	ldr	r3, [r3]
    4b00:	movw	r1, #0
    4b04:	movt	r1, #0
    4b08:	mov	r0, r3
    4b0c:	bl	0 <coda_type_set_description>
    4b10:	mrc	15, 0, r3, cr13, cr0, {3}
    4b14:	ldr	r2, [pc, #-1644]	; 44b0 <rinex_init+0x40a4>
    4b18:	ldr	r3, [r3, r2]
    4b1c:	add	r4, r3, #428	; 0x1ac
    4b20:	mov	r1, #3
    4b24:	mov	r0, #8
    4b28:	bl	0 <coda_type_number_new>
    4b2c:	mov	r3, r0
    4b30:	str	r3, [r4]
    4b34:	mrc	15, 0, r3, cr13, cr0, {3}
    4b38:	ldr	r2, [pc, #-1680]	; 44b0 <rinex_init+0x40a4>
    4b3c:	ldr	r3, [r3, r2]
    4b40:	add	r3, r3, #428	; 0x1ac
    4b44:	ldr	r3, [r3]
    4b48:	ldr	r1, [fp, #-20]	; 0xffffffec
    4b4c:	mov	r0, r3
    4b50:	bl	0 <coda_type_number_set_endianness>
    4b54:	mrc	15, 0, r3, cr13, cr0, {3}
    4b58:	ldr	r2, [pc, #-1712]	; 44b0 <rinex_init+0x40a4>
    4b5c:	ldr	r3, [r3, r2]
    4b60:	add	r3, r3, #428	; 0x1ac
    4b64:	ldr	r1, [r3]
    4b68:	mov	r2, #64	; 0x40
    4b6c:	mov	r3, #0
    4b70:	mov	r0, r1
    4b74:	bl	0 <coda_type_set_bit_size>
    4b78:	mrc	15, 0, r3, cr13, cr0, {3}
    4b7c:	ldr	r2, [pc, #-1748]	; 44b0 <rinex_init+0x40a4>
    4b80:	ldr	r3, [r3, r2]
    4b84:	add	r3, r3, #428	; 0x1ac
    4b88:	ldr	r3, [r3]
    4b8c:	movw	r1, #0
    4b90:	movt	r1, #0
    4b94:	mov	r0, r3
    4b98:	bl	0 <coda_type_number_set_unit>
    4b9c:	mrc	15, 0, r3, cr13, cr0, {3}
    4ba0:	ldr	r2, [pc, #-1784]	; 44b0 <rinex_init+0x40a4>
    4ba4:	ldr	r3, [r3, r2]
    4ba8:	add	r3, r3, #428	; 0x1ac
    4bac:	ldr	r3, [r3]
    4bb0:	movw	r1, #0
    4bb4:	movt	r1, #0
    4bb8:	mov	r0, r3
    4bbc:	bl	0 <coda_type_set_description>
    4bc0:	mrc	15, 0, r3, cr13, cr0, {3}
    4bc4:	ldr	r2, [pc, #-1820]	; 44b0 <rinex_init+0x40a4>
    4bc8:	ldr	r3, [r3, r2]
    4bcc:	add	r4, r3, #432	; 0x1b0
    4bd0:	mov	r1, #3
    4bd4:	mov	r0, #8
    4bd8:	bl	0 <coda_type_number_new>
    4bdc:	mov	r3, r0
    4be0:	str	r3, [r4]
    4be4:	mrc	15, 0, r3, cr13, cr0, {3}
    4be8:	ldr	r2, [pc, #-1856]	; 44b0 <rinex_init+0x40a4>
    4bec:	ldr	r3, [r3, r2]
    4bf0:	add	r3, r3, #432	; 0x1b0
    4bf4:	ldr	r3, [r3]
    4bf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bfc:	mov	r0, r3
    4c00:	bl	0 <coda_type_number_set_endianness>
    4c04:	mrc	15, 0, r3, cr13, cr0, {3}
    4c08:	ldr	r2, [pc, #-1888]	; 44b0 <rinex_init+0x40a4>
    4c0c:	ldr	r3, [r3, r2]
    4c10:	add	r3, r3, #432	; 0x1b0
    4c14:	ldr	r1, [r3]
    4c18:	mov	r2, #64	; 0x40
    4c1c:	mov	r3, #0
    4c20:	mov	r0, r1
    4c24:	bl	0 <coda_type_set_bit_size>
    4c28:	mrc	15, 0, r3, cr13, cr0, {3}
    4c2c:	ldr	r2, [pc, #-1924]	; 44b0 <rinex_init+0x40a4>
    4c30:	ldr	r3, [r3, r2]
    4c34:	add	r3, r3, #432	; 0x1b0
    4c38:	ldr	r3, [r3]
    4c3c:	movw	r1, #0
    4c40:	movt	r1, #0
    4c44:	mov	r0, r3
    4c48:	bl	0 <coda_type_number_set_unit>
    4c4c:	mrc	15, 0, r3, cr13, cr0, {3}
    4c50:	ldr	r2, [pc, #-1960]	; 44b0 <rinex_init+0x40a4>
    4c54:	ldr	r3, [r3, r2]
    4c58:	add	r3, r3, #432	; 0x1b0
    4c5c:	ldr	r3, [r3]
    4c60:	movw	r1, #0
    4c64:	movt	r1, #0
    4c68:	mov	r0, r3
    4c6c:	bl	0 <coda_type_set_description>
    4c70:	mrc	15, 0, r3, cr13, cr0, {3}
    4c74:	ldr	r2, [pc, #-1996]	; 44b0 <rinex_init+0x40a4>
    4c78:	ldr	r3, [r3, r2]
    4c7c:	add	r4, r3, #436	; 0x1b4
    4c80:	mov	r1, #3
    4c84:	mov	r0, #8
    4c88:	bl	0 <coda_type_number_new>
    4c8c:	mov	r3, r0
    4c90:	str	r3, [r4]
    4c94:	mrc	15, 0, r3, cr13, cr0, {3}
    4c98:	ldr	r2, [pc, #-2032]	; 44b0 <rinex_init+0x40a4>
    4c9c:	ldr	r3, [r3, r2]
    4ca0:	add	r3, r3, #436	; 0x1b4
    4ca4:	ldr	r3, [r3]
    4ca8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4cac:	mov	r0, r3
    4cb0:	bl	0 <coda_type_number_set_endianness>
    4cb4:	mrc	15, 0, r3, cr13, cr0, {3}
    4cb8:	ldr	r2, [pc, #-2064]	; 44b0 <rinex_init+0x40a4>
    4cbc:	ldr	r3, [r3, r2]
    4cc0:	add	r3, r3, #436	; 0x1b4
    4cc4:	ldr	r1, [r3]
    4cc8:	mov	r2, #64	; 0x40
    4ccc:	mov	r3, #0
    4cd0:	mov	r0, r1
    4cd4:	bl	0 <coda_type_set_bit_size>
    4cd8:	mrc	15, 0, r3, cr13, cr0, {3}
    4cdc:	ldr	r2, [pc, #-2100]	; 44b0 <rinex_init+0x40a4>
    4ce0:	ldr	r3, [r3, r2]
    4ce4:	add	r3, r3, #436	; 0x1b4
    4ce8:	ldr	r3, [r3]
    4cec:	movw	r1, #0
    4cf0:	movt	r1, #0
    4cf4:	mov	r0, r3
    4cf8:	bl	0 <coda_type_number_set_unit>
    4cfc:	mrc	15, 0, r3, cr13, cr0, {3}
    4d00:	ldr	r2, [pc, #-2136]	; 44b0 <rinex_init+0x40a4>
    4d04:	ldr	r3, [r3, r2]
    4d08:	add	r3, r3, #436	; 0x1b4
    4d0c:	ldr	r3, [r3]
    4d10:	movw	r1, #0
    4d14:	movt	r1, #0
    4d18:	mov	r0, r3
    4d1c:	bl	0 <coda_type_set_description>
    4d20:	mrc	15, 0, r3, cr13, cr0, {3}
    4d24:	ldr	r2, [pc, #-2172]	; 44b0 <rinex_init+0x40a4>
    4d28:	ldr	r3, [r3, r2]
    4d2c:	add	r4, r3, #440	; 0x1b8
    4d30:	mov	r1, #3
    4d34:	mov	r0, #8
    4d38:	bl	0 <coda_type_number_new>
    4d3c:	mov	r3, r0
    4d40:	str	r3, [r4]
    4d44:	mrc	15, 0, r3, cr13, cr0, {3}
    4d48:	ldr	r2, [pc, #-2208]	; 44b0 <rinex_init+0x40a4>
    4d4c:	ldr	r3, [r3, r2]
    4d50:	add	r3, r3, #440	; 0x1b8
    4d54:	ldr	r3, [r3]
    4d58:	ldr	r1, [fp, #-20]	; 0xffffffec
    4d5c:	mov	r0, r3
    4d60:	bl	0 <coda_type_number_set_endianness>
    4d64:	mrc	15, 0, r3, cr13, cr0, {3}
    4d68:	ldr	r2, [pc, #-2240]	; 44b0 <rinex_init+0x40a4>
    4d6c:	ldr	r3, [r3, r2]
    4d70:	add	r3, r3, #440	; 0x1b8
    4d74:	ldr	r1, [r3]
    4d78:	mov	r2, #64	; 0x40
    4d7c:	mov	r3, #0
    4d80:	mov	r0, r1
    4d84:	bl	0 <coda_type_set_bit_size>
    4d88:	mrc	15, 0, r3, cr13, cr0, {3}
    4d8c:	ldr	r2, [pc, #-2276]	; 44b0 <rinex_init+0x40a4>
    4d90:	ldr	r3, [r3, r2]
    4d94:	add	r3, r3, #440	; 0x1b8
    4d98:	ldr	r3, [r3]
    4d9c:	movw	r1, #0
    4da0:	movt	r1, #0
    4da4:	mov	r0, r3
    4da8:	bl	0 <coda_type_number_set_unit>
    4dac:	mrc	15, 0, r3, cr13, cr0, {3}
    4db0:	ldr	r2, [pc, #-2312]	; 44b0 <rinex_init+0x40a4>
    4db4:	ldr	r3, [r3, r2]
    4db8:	add	r3, r3, #440	; 0x1b8
    4dbc:	ldr	r3, [r3]
    4dc0:	movw	r1, #0
    4dc4:	movt	r1, #0
    4dc8:	mov	r0, r3
    4dcc:	bl	0 <coda_type_set_description>
    4dd0:	mrc	15, 0, r3, cr13, cr0, {3}
    4dd4:	ldr	r2, [pc, #-2348]	; 44b0 <rinex_init+0x40a4>
    4dd8:	ldr	r3, [r3, r2]
    4ddc:	add	r4, r3, #444	; 0x1bc
    4de0:	mov	r1, #3
    4de4:	mov	r0, #8
    4de8:	bl	0 <coda_type_number_new>
    4dec:	mov	r3, r0
    4df0:	str	r3, [r4]
    4df4:	mrc	15, 0, r3, cr13, cr0, {3}
    4df8:	ldr	r2, [pc, #-2384]	; 44b0 <rinex_init+0x40a4>
    4dfc:	ldr	r3, [r3, r2]
    4e00:	add	r3, r3, #444	; 0x1bc
    4e04:	ldr	r3, [r3]
    4e08:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e0c:	mov	r0, r3
    4e10:	bl	0 <coda_type_number_set_endianness>
    4e14:	mrc	15, 0, r3, cr13, cr0, {3}
    4e18:	ldr	r2, [pc, #-2416]	; 44b0 <rinex_init+0x40a4>
    4e1c:	ldr	r3, [r3, r2]
    4e20:	add	r3, r3, #444	; 0x1bc
    4e24:	ldr	r1, [r3]
    4e28:	mov	r2, #64	; 0x40
    4e2c:	mov	r3, #0
    4e30:	mov	r0, r1
    4e34:	bl	0 <coda_type_set_bit_size>
    4e38:	mrc	15, 0, r3, cr13, cr0, {3}
    4e3c:	ldr	r2, [pc, #-2452]	; 44b0 <rinex_init+0x40a4>
    4e40:	ldr	r3, [r3, r2]
    4e44:	add	r3, r3, #444	; 0x1bc
    4e48:	ldr	r3, [r3]
    4e4c:	movw	r1, #0
    4e50:	movt	r1, #0
    4e54:	mov	r0, r3
    4e58:	bl	0 <coda_type_number_set_unit>
    4e5c:	mrc	15, 0, r3, cr13, cr0, {3}
    4e60:	ldr	r2, [pc, #-2488]	; 44b0 <rinex_init+0x40a4>
    4e64:	ldr	r3, [r3, r2]
    4e68:	add	r3, r3, #444	; 0x1bc
    4e6c:	ldr	r3, [r3]
    4e70:	movw	r1, #0
    4e74:	movt	r1, #0
    4e78:	mov	r0, r3
    4e7c:	bl	0 <coda_type_set_description>
    4e80:	mrc	15, 0, r3, cr13, cr0, {3}
    4e84:	ldr	r2, [pc, #-2524]	; 44b0 <rinex_init+0x40a4>
    4e88:	ldr	r3, [r3, r2]
    4e8c:	add	r4, r3, #448	; 0x1c0
    4e90:	mov	r1, #3
    4e94:	mov	r0, #8
    4e98:	bl	0 <coda_type_number_new>
    4e9c:	mov	r3, r0
    4ea0:	str	r3, [r4]
    4ea4:	mrc	15, 0, r3, cr13, cr0, {3}
    4ea8:	ldr	r2, [pc, #-2560]	; 44b0 <rinex_init+0x40a4>
    4eac:	ldr	r3, [r3, r2]
    4eb0:	add	r3, r3, #448	; 0x1c0
    4eb4:	ldr	r3, [r3]
    4eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4ebc:	mov	r0, r3
    4ec0:	bl	0 <coda_type_number_set_endianness>
    4ec4:	mrc	15, 0, r3, cr13, cr0, {3}
    4ec8:	ldr	r2, [pc, #-2592]	; 44b0 <rinex_init+0x40a4>
    4ecc:	ldr	r3, [r3, r2]
    4ed0:	add	r3, r3, #448	; 0x1c0
    4ed4:	ldr	r1, [r3]
    4ed8:	mov	r2, #64	; 0x40
    4edc:	mov	r3, #0
    4ee0:	mov	r0, r1
    4ee4:	bl	0 <coda_type_set_bit_size>
    4ee8:	mrc	15, 0, r3, cr13, cr0, {3}
    4eec:	ldr	r2, [pc, #-2628]	; 44b0 <rinex_init+0x40a4>
    4ef0:	ldr	r3, [r3, r2]
    4ef4:	add	r3, r3, #448	; 0x1c0
    4ef8:	ldr	r3, [r3]
    4efc:	movw	r1, #0
    4f00:	movt	r1, #0
    4f04:	mov	r0, r3
    4f08:	bl	0 <coda_type_number_set_unit>
    4f0c:	mrc	15, 0, r3, cr13, cr0, {3}
    4f10:	ldr	r2, [pc, #-2664]	; 44b0 <rinex_init+0x40a4>
    4f14:	ldr	r3, [r3, r2]
    4f18:	add	r3, r3, #448	; 0x1c0
    4f1c:	ldr	r3, [r3]
    4f20:	movw	r1, #0
    4f24:	movt	r1, #0
    4f28:	mov	r0, r3
    4f2c:	bl	0 <coda_type_set_description>
    4f30:	mrc	15, 0, r3, cr13, cr0, {3}
    4f34:	ldr	r2, [pc, #-2700]	; 44b0 <rinex_init+0x40a4>
    4f38:	ldr	r3, [r3, r2]
    4f3c:	add	r4, r3, #452	; 0x1c4
    4f40:	mov	r1, #3
    4f44:	mov	r0, #8
    4f48:	bl	0 <coda_type_number_new>
    4f4c:	mov	r3, r0
    4f50:	str	r3, [r4]
    4f54:	mrc	15, 0, r3, cr13, cr0, {3}
    4f58:	ldr	r2, [pc, #-2736]	; 44b0 <rinex_init+0x40a4>
    4f5c:	ldr	r3, [r3, r2]
    4f60:	add	r3, r3, #452	; 0x1c4
    4f64:	ldr	r3, [r3]
    4f68:	ldr	r1, [fp, #-20]	; 0xffffffec
    4f6c:	mov	r0, r3
    4f70:	bl	0 <coda_type_number_set_endianness>
    4f74:	mrc	15, 0, r3, cr13, cr0, {3}
    4f78:	ldr	r2, [pc, #-2768]	; 44b0 <rinex_init+0x40a4>
    4f7c:	ldr	r3, [r3, r2]
    4f80:	add	r3, r3, #452	; 0x1c4
    4f84:	ldr	r1, [r3]
    4f88:	mov	r2, #64	; 0x40
    4f8c:	mov	r3, #0
    4f90:	mov	r0, r1
    4f94:	bl	0 <coda_type_set_bit_size>
    4f98:	mrc	15, 0, r3, cr13, cr0, {3}
    4f9c:	ldr	r2, [pc, #-2804]	; 44b0 <rinex_init+0x40a4>
    4fa0:	ldr	r3, [r3, r2]
    4fa4:	add	r3, r3, #452	; 0x1c4
    4fa8:	ldr	r3, [r3]
    4fac:	movw	r1, #0
    4fb0:	movt	r1, #0
    4fb4:	mov	r0, r3
    4fb8:	bl	0 <coda_type_number_set_unit>
    4fbc:	mrc	15, 0, r3, cr13, cr0, {3}
    4fc0:	ldr	r2, [pc, #-2840]	; 44b0 <rinex_init+0x40a4>
    4fc4:	ldr	r3, [r3, r2]
    4fc8:	add	r3, r3, #452	; 0x1c4
    4fcc:	ldr	r3, [r3]
    4fd0:	movw	r1, #0
    4fd4:	movt	r1, #0
    4fd8:	mov	r0, r3
    4fdc:	bl	0 <coda_type_set_description>
    4fe0:	mrc	15, 0, r3, cr13, cr0, {3}
    4fe4:	ldr	r2, [pc, #-2876]	; 44b0 <rinex_init+0x40a4>
    4fe8:	ldr	r3, [r3, r2]
    4fec:	add	r4, r3, #456	; 0x1c8
    4ff0:	mov	r1, #3
    4ff4:	mov	r0, #8
    4ff8:	bl	0 <coda_type_number_new>
    4ffc:	mov	r3, r0
    5000:	str	r3, [r4]
    5004:	mrc	15, 0, r3, cr13, cr0, {3}
    5008:	ldr	r2, [pc, #-2912]	; 44b0 <rinex_init+0x40a4>
    500c:	ldr	r3, [r3, r2]
    5010:	add	r3, r3, #456	; 0x1c8
    5014:	ldr	r3, [r3]
    5018:	ldr	r1, [fp, #-20]	; 0xffffffec
    501c:	mov	r0, r3
    5020:	bl	0 <coda_type_number_set_endianness>
    5024:	mrc	15, 0, r3, cr13, cr0, {3}
    5028:	ldr	r2, [pc, #-2944]	; 44b0 <rinex_init+0x40a4>
    502c:	ldr	r3, [r3, r2]
    5030:	add	r3, r3, #456	; 0x1c8
    5034:	ldr	r1, [r3]
    5038:	mov	r2, #64	; 0x40
    503c:	mov	r3, #0
    5040:	mov	r0, r1
    5044:	bl	0 <coda_type_set_bit_size>
    5048:	mrc	15, 0, r3, cr13, cr0, {3}
    504c:	ldr	r2, [pc, #-2980]	; 44b0 <rinex_init+0x40a4>
    5050:	ldr	r3, [r3, r2]
    5054:	add	r3, r3, #456	; 0x1c8
    5058:	ldr	r3, [r3]
    505c:	movw	r1, #0
    5060:	movt	r1, #0
    5064:	mov	r0, r3
    5068:	bl	0 <coda_type_number_set_unit>
    506c:	mrc	15, 0, r3, cr13, cr0, {3}
    5070:	ldr	r2, [pc, #-3016]	; 44b0 <rinex_init+0x40a4>
    5074:	ldr	r3, [r3, r2]
    5078:	add	r3, r3, #456	; 0x1c8
    507c:	ldr	r3, [r3]
    5080:	movw	r1, #0
    5084:	movt	r1, #0
    5088:	mov	r0, r3
    508c:	bl	0 <coda_type_set_description>
    5090:	mrc	15, 0, r3, cr13, cr0, {3}
    5094:	ldr	r2, [pc, #-3052]	; 44b0 <rinex_init+0x40a4>
    5098:	ldr	r3, [r3, r2]
    509c:	add	r4, r3, #460	; 0x1cc
    50a0:	mov	r1, #3
    50a4:	mov	r0, #8
    50a8:	bl	0 <coda_type_number_new>
    50ac:	mov	r3, r0
    50b0:	str	r3, [r4]
    50b4:	mrc	15, 0, r3, cr13, cr0, {3}
    50b8:	ldr	r2, [pc, #-3088]	; 44b0 <rinex_init+0x40a4>
    50bc:	ldr	r3, [r3, r2]
    50c0:	add	r3, r3, #460	; 0x1cc
    50c4:	ldr	r3, [r3]
    50c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    50cc:	mov	r0, r3
    50d0:	bl	0 <coda_type_number_set_endianness>
    50d4:	mrc	15, 0, r3, cr13, cr0, {3}
    50d8:	ldr	r2, [pc, #-3120]	; 44b0 <rinex_init+0x40a4>
    50dc:	ldr	r3, [r3, r2]
    50e0:	add	r3, r3, #460	; 0x1cc
    50e4:	ldr	r1, [r3]
    50e8:	mov	r2, #64	; 0x40
    50ec:	mov	r3, #0
    50f0:	mov	r0, r1
    50f4:	bl	0 <coda_type_set_bit_size>
    50f8:	mrc	15, 0, r3, cr13, cr0, {3}
    50fc:	ldr	r2, [pc, #-3156]	; 44b0 <rinex_init+0x40a4>
    5100:	ldr	r3, [r3, r2]
    5104:	add	r3, r3, #460	; 0x1cc
    5108:	ldr	r3, [r3]
    510c:	movw	r1, #0
    5110:	movt	r1, #0
    5114:	mov	r0, r3
    5118:	bl	0 <coda_type_number_set_unit>
    511c:	mrc	15, 0, r3, cr13, cr0, {3}
    5120:	ldr	r2, [pc, #-3192]	; 44b0 <rinex_init+0x40a4>
    5124:	ldr	r3, [r3, r2]
    5128:	add	r3, r3, #460	; 0x1cc
    512c:	ldr	r3, [r3]
    5130:	movw	r1, #0
    5134:	movt	r1, #0
    5138:	mov	r0, r3
    513c:	bl	0 <coda_type_set_description>
    5140:	mrc	15, 0, r3, cr13, cr0, {3}
    5144:	ldr	r2, [pc, #-3228]	; 44b0 <rinex_init+0x40a4>
    5148:	ldr	r3, [r3, r2]
    514c:	add	r4, r3, #464	; 0x1d0
    5150:	mov	r1, #3
    5154:	mov	r0, #8
    5158:	bl	0 <coda_type_number_new>
    515c:	mov	r3, r0
    5160:	str	r3, [r4]
    5164:	mrc	15, 0, r3, cr13, cr0, {3}
    5168:	ldr	r2, [pc, #-3264]	; 44b0 <rinex_init+0x40a4>
    516c:	ldr	r3, [r3, r2]
    5170:	add	r3, r3, #464	; 0x1d0
    5174:	ldr	r3, [r3]
    5178:	ldr	r1, [fp, #-20]	; 0xffffffec
    517c:	mov	r0, r3
    5180:	bl	0 <coda_type_number_set_endianness>
    5184:	mrc	15, 0, r3, cr13, cr0, {3}
    5188:	ldr	r2, [pc, #-3296]	; 44b0 <rinex_init+0x40a4>
    518c:	ldr	r3, [r3, r2]
    5190:	add	r3, r3, #464	; 0x1d0
    5194:	ldr	r1, [r3]
    5198:	mov	r2, #64	; 0x40
    519c:	mov	r3, #0
    51a0:	mov	r0, r1
    51a4:	bl	0 <coda_type_set_bit_size>
    51a8:	mrc	15, 0, r3, cr13, cr0, {3}
    51ac:	ldr	r2, [pc, #-3332]	; 44b0 <rinex_init+0x40a4>
    51b0:	ldr	r3, [r3, r2]
    51b4:	add	r3, r3, #464	; 0x1d0
    51b8:	ldr	r3, [r3]
    51bc:	movw	r1, #0
    51c0:	movt	r1, #0
    51c4:	mov	r0, r3
    51c8:	bl	0 <coda_type_number_set_unit>
    51cc:	mrc	15, 0, r3, cr13, cr0, {3}
    51d0:	ldr	r2, [pc, #-3368]	; 44b0 <rinex_init+0x40a4>
    51d4:	ldr	r3, [r3, r2]
    51d8:	add	r3, r3, #464	; 0x1d0
    51dc:	ldr	r3, [r3]
    51e0:	movw	r1, #0
    51e4:	movt	r1, #0
    51e8:	mov	r0, r3
    51ec:	bl	0 <coda_type_set_description>
    51f0:	mrc	15, 0, r3, cr13, cr0, {3}
    51f4:	ldr	r2, [pc, #-3404]	; 44b0 <rinex_init+0x40a4>
    51f8:	ldr	r3, [r3, r2]
    51fc:	add	r4, r3, #468	; 0x1d4
    5200:	mov	r1, #3
    5204:	mov	r0, #8
    5208:	bl	0 <coda_type_number_new>
    520c:	mov	r3, r0
    5210:	str	r3, [r4]
    5214:	mrc	15, 0, r3, cr13, cr0, {3}
    5218:	ldr	r2, [pc, #-3440]	; 44b0 <rinex_init+0x40a4>
    521c:	ldr	r3, [r3, r2]
    5220:	add	r3, r3, #468	; 0x1d4
    5224:	ldr	r3, [r3]
    5228:	ldr	r1, [fp, #-20]	; 0xffffffec
    522c:	mov	r0, r3
    5230:	bl	0 <coda_type_number_set_endianness>
    5234:	mrc	15, 0, r3, cr13, cr0, {3}
    5238:	ldr	r2, [pc, #-3472]	; 44b0 <rinex_init+0x40a4>
    523c:	ldr	r3, [r3, r2]
    5240:	add	r3, r3, #468	; 0x1d4
    5244:	ldr	r1, [r3]
    5248:	mov	r2, #64	; 0x40
    524c:	mov	r3, #0
    5250:	mov	r0, r1
    5254:	bl	0 <coda_type_set_bit_size>
    5258:	mrc	15, 0, r3, cr13, cr0, {3}
    525c:	ldr	r2, [pc, #-3508]	; 44b0 <rinex_init+0x40a4>
    5260:	ldr	r3, [r3, r2]
    5264:	add	r3, r3, #468	; 0x1d4
    5268:	ldr	r3, [r3]
    526c:	movw	r1, #0
    5270:	movt	r1, #0
    5274:	mov	r0, r3
    5278:	bl	0 <coda_type_set_description>
    527c:	mrc	15, 0, r3, cr13, cr0, {3}
    5280:	ldr	r2, [pc, #-3544]	; 44b0 <rinex_init+0x40a4>
    5284:	ldr	r3, [r3, r2]
    5288:	add	r4, r3, #472	; 0x1d8
    528c:	mov	r1, #3
    5290:	mov	r0, #8
    5294:	bl	0 <coda_type_number_new>
    5298:	mov	r3, r0
    529c:	str	r3, [r4]
    52a0:	mrc	15, 0, r3, cr13, cr0, {3}
    52a4:	ldr	r2, [pc, #-3580]	; 44b0 <rinex_init+0x40a4>
    52a8:	ldr	r3, [r3, r2]
    52ac:	add	r3, r3, #472	; 0x1d8
    52b0:	ldr	r3, [r3]
    52b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    52b8:	mov	r0, r3
    52bc:	bl	0 <coda_type_number_set_endianness>
    52c0:	mrc	15, 0, r3, cr13, cr0, {3}
    52c4:	ldr	r2, [pc, #-3612]	; 44b0 <rinex_init+0x40a4>
    52c8:	ldr	r3, [r3, r2]
    52cc:	add	r3, r3, #472	; 0x1d8
    52d0:	ldr	r1, [r3]
    52d4:	mov	r2, #64	; 0x40
    52d8:	mov	r3, #0
    52dc:	mov	r0, r1
    52e0:	bl	0 <coda_type_set_bit_size>
    52e4:	mrc	15, 0, r3, cr13, cr0, {3}
    52e8:	ldr	r2, [pc, #-3648]	; 44b0 <rinex_init+0x40a4>
    52ec:	ldr	r3, [r3, r2]
    52f0:	add	r3, r3, #472	; 0x1d8
    52f4:	ldr	r3, [r3]
    52f8:	movw	r1, #0
    52fc:	movt	r1, #0
    5300:	mov	r0, r3
    5304:	bl	0 <coda_type_set_description>
    5308:	mrc	15, 0, r3, cr13, cr0, {3}
    530c:	ldr	r2, [pc, #-3684]	; 44b0 <rinex_init+0x40a4>
    5310:	ldr	r3, [r3, r2]
    5314:	add	r4, r3, #476	; 0x1dc
    5318:	mov	r1, #3
    531c:	mov	r0, #8
    5320:	bl	0 <coda_type_number_new>
    5324:	mov	r3, r0
    5328:	str	r3, [r4]
    532c:	mrc	15, 0, r3, cr13, cr0, {3}
    5330:	ldr	r2, [pc, #-3720]	; 44b0 <rinex_init+0x40a4>
    5334:	ldr	r3, [r3, r2]
    5338:	add	r3, r3, #476	; 0x1dc
    533c:	ldr	r3, [r3]
    5340:	ldr	r1, [fp, #-20]	; 0xffffffec
    5344:	mov	r0, r3
    5348:	bl	0 <coda_type_number_set_endianness>
    534c:	mrc	15, 0, r3, cr13, cr0, {3}
    5350:	ldr	r2, [pc, #-3752]	; 44b0 <rinex_init+0x40a4>
    5354:	ldr	r3, [r3, r2]
    5358:	add	r3, r3, #476	; 0x1dc
    535c:	ldr	r1, [r3]
    5360:	mov	r2, #64	; 0x40
    5364:	mov	r3, #0
    5368:	mov	r0, r1
    536c:	bl	0 <coda_type_set_bit_size>
    5370:	mrc	15, 0, r3, cr13, cr0, {3}
    5374:	ldr	r2, [pc, #-3788]	; 44b0 <rinex_init+0x40a4>
    5378:	ldr	r3, [r3, r2]
    537c:	add	r3, r3, #476	; 0x1dc
    5380:	ldr	r3, [r3]
    5384:	movw	r1, #0
    5388:	movt	r1, #0
    538c:	mov	r0, r3
    5390:	bl	0 <coda_type_number_set_unit>
    5394:	mrc	15, 0, r3, cr13, cr0, {3}
    5398:	ldr	r2, [pc, #-3824]	; 44b0 <rinex_init+0x40a4>
    539c:	ldr	r3, [r3, r2]
    53a0:	add	r3, r3, #476	; 0x1dc
    53a4:	ldr	r3, [r3]
    53a8:	movw	r1, #0
    53ac:	movt	r1, #0
    53b0:	mov	r0, r3
    53b4:	bl	0 <coda_type_set_description>
    53b8:	mrc	15, 0, r3, cr13, cr0, {3}
    53bc:	ldr	r2, [pc, #-3860]	; 44b0 <rinex_init+0x40a4>
    53c0:	ldr	r3, [r3, r2]
    53c4:	add	r4, r3, #480	; 0x1e0
    53c8:	mov	r1, #3
    53cc:	mov	r0, #8
    53d0:	bl	0 <coda_type_number_new>
    53d4:	mov	r3, r0
    53d8:	str	r3, [r4]
    53dc:	mrc	15, 0, r3, cr13, cr0, {3}
    53e0:	ldr	r2, [pc, #-3896]	; 44b0 <rinex_init+0x40a4>
    53e4:	ldr	r3, [r3, r2]
    53e8:	add	r3, r3, #480	; 0x1e0
    53ec:	ldr	r3, [r3]
    53f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    53f4:	mov	r0, r3
    53f8:	bl	0 <coda_type_number_set_endianness>
    53fc:	mrc	15, 0, r3, cr13, cr0, {3}
    5400:	ldr	r2, [pc, #-3928]	; 44b0 <rinex_init+0x40a4>
    5404:	ldr	r3, [r3, r2]
    5408:	add	r3, r3, #480	; 0x1e0
    540c:	ldr	r1, [r3]
    5410:	mov	r2, #64	; 0x40
    5414:	mov	r3, #0
    5418:	mov	r0, r1
    541c:	bl	0 <coda_type_set_bit_size>
    5420:	mrc	15, 0, r3, cr13, cr0, {3}
    5424:	ldr	r2, [pc, #-3964]	; 44b0 <rinex_init+0x40a4>
    5428:	ldr	r3, [r3, r2]
    542c:	add	r3, r3, #480	; 0x1e0
    5430:	ldr	r3, [r3]
    5434:	movw	r1, #0
    5438:	movt	r1, #0
    543c:	mov	r0, r3
    5440:	bl	0 <coda_type_number_set_unit>
    5444:	mrc	15, 0, r3, cr13, cr0, {3}
    5448:	ldr	r2, [pc, #-4000]	; 44b0 <rinex_init+0x40a4>
    544c:	ldr	r3, [r3, r2]
    5450:	add	r3, r3, #480	; 0x1e0
    5454:	ldr	r3, [r3]
    5458:	movw	r1, #0
    545c:	movt	r1, #0
    5460:	mov	r0, r3
    5464:	bl	0 <coda_type_set_description>
    5468:	mrc	15, 0, r3, cr13, cr0, {3}
    546c:	ldr	r2, [pc, #-4036]	; 44b0 <rinex_init+0x40a4>
    5470:	ldr	r3, [r3, r2]
    5474:	add	r4, r3, #484	; 0x1e4
    5478:	mov	r1, #3
    547c:	mov	r0, #8
    5480:	bl	0 <coda_type_number_new>
    5484:	mov	r3, r0
    5488:	str	r3, [r4]
    548c:	mrc	15, 0, r3, cr13, cr0, {3}
    5490:	ldr	r2, [pc, #-4072]	; 44b0 <rinex_init+0x40a4>
    5494:	ldr	r3, [r3, r2]
    5498:	add	r3, r3, #484	; 0x1e4
    549c:	ldr	r3, [r3]
    54a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    54a4:	mov	r0, r3
    54a8:	bl	0 <coda_type_number_set_endianness>
    54ac:	mrc	15, 0, r3, cr13, cr0, {3}
    54b0:	ldr	r2, [pc, #4088]	; 64b0 <rinex_init+0x60a4>
    54b4:	ldr	r3, [r3, r2]
    54b8:	add	r3, r3, #484	; 0x1e4
    54bc:	ldr	r1, [r3]
    54c0:	mov	r2, #64	; 0x40
    54c4:	mov	r3, #0
    54c8:	mov	r0, r1
    54cc:	bl	0 <coda_type_set_bit_size>
    54d0:	mrc	15, 0, r3, cr13, cr0, {3}
    54d4:	ldr	r2, [pc, #4052]	; 64b0 <rinex_init+0x60a4>
    54d8:	ldr	r3, [r3, r2]
    54dc:	add	r3, r3, #484	; 0x1e4
    54e0:	ldr	r3, [r3]
    54e4:	movw	r1, #0
    54e8:	movt	r1, #0
    54ec:	mov	r0, r3
    54f0:	bl	0 <coda_type_number_set_unit>
    54f4:	mrc	15, 0, r3, cr13, cr0, {3}
    54f8:	ldr	r2, [pc, #4016]	; 64b0 <rinex_init+0x60a4>
    54fc:	ldr	r3, [r3, r2]
    5500:	add	r3, r3, #484	; 0x1e4
    5504:	ldr	r3, [r3]
    5508:	movw	r1, #0
    550c:	movt	r1, #0
    5510:	mov	r0, r3
    5514:	bl	0 <coda_type_set_description>
    5518:	mrc	15, 0, r3, cr13, cr0, {3}
    551c:	ldr	r2, [pc, #3980]	; 64b0 <rinex_init+0x60a4>
    5520:	ldr	r3, [r3, r2]
    5524:	add	r4, r3, #488	; 0x1e8
    5528:	mov	r1, #3
    552c:	mov	r0, #8
    5530:	bl	0 <coda_type_number_new>
    5534:	mov	r3, r0
    5538:	str	r3, [r4]
    553c:	mrc	15, 0, r3, cr13, cr0, {3}
    5540:	ldr	r2, [pc, #3944]	; 64b0 <rinex_init+0x60a4>
    5544:	ldr	r3, [r3, r2]
    5548:	add	r3, r3, #488	; 0x1e8
    554c:	ldr	r3, [r3]
    5550:	ldr	r1, [fp, #-20]	; 0xffffffec
    5554:	mov	r0, r3
    5558:	bl	0 <coda_type_number_set_endianness>
    555c:	mrc	15, 0, r3, cr13, cr0, {3}
    5560:	ldr	r2, [pc, #3912]	; 64b0 <rinex_init+0x60a4>
    5564:	ldr	r3, [r3, r2]
    5568:	add	r3, r3, #488	; 0x1e8
    556c:	ldr	r1, [r3]
    5570:	mov	r2, #64	; 0x40
    5574:	mov	r3, #0
    5578:	mov	r0, r1
    557c:	bl	0 <coda_type_set_bit_size>
    5580:	mrc	15, 0, r3, cr13, cr0, {3}
    5584:	ldr	r2, [pc, #3876]	; 64b0 <rinex_init+0x60a4>
    5588:	ldr	r3, [r3, r2]
    558c:	add	r3, r3, #488	; 0x1e8
    5590:	ldr	r3, [r3]
    5594:	movw	r1, #0
    5598:	movt	r1, #0
    559c:	mov	r0, r3
    55a0:	bl	0 <coda_type_set_description>
    55a4:	mrc	15, 0, r3, cr13, cr0, {3}
    55a8:	ldr	r2, [pc, #3840]	; 64b0 <rinex_init+0x60a4>
    55ac:	ldr	r3, [r3, r2]
    55b0:	add	r4, r3, #508	; 0x1fc
    55b4:	mov	r0, #8
    55b8:	bl	0 <coda_type_record_new>
    55bc:	mov	r3, r0
    55c0:	str	r3, [r4]
    55c4:	movw	r0, #0
    55c8:	movt	r0, #0
    55cc:	bl	0 <coda_type_record_field_new>
    55d0:	str	r0, [fp, #-24]	; 0xffffffe8
    55d4:	mrc	15, 0, r3, cr13, cr0, {3}
    55d8:	ldr	r2, [pc, #3792]	; 64b0 <rinex_init+0x60a4>
    55dc:	ldr	r3, [r3, r2]
    55e0:	ldr	r3, [r3]
    55e4:	mov	r1, r3
    55e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    55ec:	bl	0 <coda_type_record_field_set_type>
    55f0:	mrc	15, 0, r3, cr13, cr0, {3}
    55f4:	ldr	r2, [pc, #3764]	; 64b0 <rinex_init+0x60a4>
    55f8:	ldr	r3, [r3, r2]
    55fc:	add	r3, r3, #508	; 0x1fc
    5600:	ldr	r3, [r3]
    5604:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5608:	mov	r0, r3
    560c:	bl	0 <coda_type_record_add_field>
    5610:	movw	r0, #0
    5614:	movt	r0, #0
    5618:	bl	0 <coda_type_record_field_new>
    561c:	str	r0, [fp, #-24]	; 0xffffffe8
    5620:	mrc	15, 0, r3, cr13, cr0, {3}
    5624:	ldr	r2, [pc, #3716]	; 64b0 <rinex_init+0x60a4>
    5628:	ldr	r3, [r3, r2]
    562c:	add	r3, r3, #4
    5630:	ldr	r3, [r3]
    5634:	mov	r1, r3
    5638:	ldr	r0, [fp, #-24]	; 0xffffffe8
    563c:	bl	0 <coda_type_record_field_set_type>
    5640:	mrc	15, 0, r3, cr13, cr0, {3}
    5644:	ldr	r2, [pc, #3684]	; 64b0 <rinex_init+0x60a4>
    5648:	ldr	r3, [r3, r2]
    564c:	add	r3, r3, #508	; 0x1fc
    5650:	ldr	r3, [r3]
    5654:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5658:	mov	r0, r3
    565c:	bl	0 <coda_type_record_add_field>
    5660:	movw	r0, #0
    5664:	movt	r0, #0
    5668:	bl	0 <coda_type_record_field_new>
    566c:	str	r0, [fp, #-24]	; 0xffffffe8
    5670:	mrc	15, 0, r3, cr13, cr0, {3}
    5674:	ldr	r2, [pc, #3636]	; 64b0 <rinex_init+0x60a4>
    5678:	ldr	r3, [r3, r2]
    567c:	add	r3, r3, #8
    5680:	ldr	r3, [r3]
    5684:	mov	r1, r3
    5688:	ldr	r0, [fp, #-24]	; 0xffffffe8
    568c:	bl	0 <coda_type_record_field_set_type>
    5690:	mrc	15, 0, r3, cr13, cr0, {3}
    5694:	ldr	r2, [pc, #3604]	; 64b0 <rinex_init+0x60a4>
    5698:	ldr	r3, [r3, r2]
    569c:	add	r3, r3, #508	; 0x1fc
    56a0:	ldr	r3, [r3]
    56a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    56a8:	mov	r0, r3
    56ac:	bl	0 <coda_type_record_add_field>
    56b0:	movw	r0, #0
    56b4:	movt	r0, #0
    56b8:	bl	0 <coda_type_record_field_new>
    56bc:	str	r0, [fp, #-24]	; 0xffffffe8
    56c0:	mrc	15, 0, r3, cr13, cr0, {3}
    56c4:	ldr	r2, [pc, #3556]	; 64b0 <rinex_init+0x60a4>
    56c8:	ldr	r3, [r3, r2]
    56cc:	add	r3, r3, #12
    56d0:	ldr	r3, [r3]
    56d4:	mov	r1, r3
    56d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    56dc:	bl	0 <coda_type_record_field_set_type>
    56e0:	mrc	15, 0, r3, cr13, cr0, {3}
    56e4:	ldr	r2, [pc, #3524]	; 64b0 <rinex_init+0x60a4>
    56e8:	ldr	r3, [r3, r2]
    56ec:	add	r3, r3, #508	; 0x1fc
    56f0:	ldr	r3, [r3]
    56f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    56f8:	mov	r0, r3
    56fc:	bl	0 <coda_type_record_add_field>
    5700:	movw	r0, #0
    5704:	movt	r0, #0
    5708:	bl	0 <coda_type_record_field_new>
    570c:	str	r0, [fp, #-24]	; 0xffffffe8
    5710:	mrc	15, 0, r3, cr13, cr0, {3}
    5714:	ldr	r2, [pc, #3476]	; 64b0 <rinex_init+0x60a4>
    5718:	ldr	r3, [r3, r2]
    571c:	add	r3, r3, #16
    5720:	ldr	r3, [r3]
    5724:	mov	r1, r3
    5728:	ldr	r0, [fp, #-24]	; 0xffffffe8
    572c:	bl	0 <coda_type_record_field_set_type>
    5730:	mrc	15, 0, r3, cr13, cr0, {3}
    5734:	ldr	r2, [pc, #3444]	; 64b0 <rinex_init+0x60a4>
    5738:	ldr	r3, [r3, r2]
    573c:	add	r3, r3, #508	; 0x1fc
    5740:	ldr	r3, [r3]
    5744:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5748:	mov	r0, r3
    574c:	bl	0 <coda_type_record_add_field>
    5750:	movw	r0, #0
    5754:	movt	r0, #0
    5758:	bl	0 <coda_type_record_field_new>
    575c:	str	r0, [fp, #-24]	; 0xffffffe8
    5760:	mrc	15, 0, r3, cr13, cr0, {3}
    5764:	ldr	r2, [pc, #3396]	; 64b0 <rinex_init+0x60a4>
    5768:	ldr	r3, [r3, r2]
    576c:	add	r3, r3, #20
    5770:	ldr	r3, [r3]
    5774:	mov	r1, r3
    5778:	ldr	r0, [fp, #-24]	; 0xffffffe8
    577c:	bl	0 <coda_type_record_field_set_type>
    5780:	mrc	15, 0, r3, cr13, cr0, {3}
    5784:	ldr	r2, [pc, #3364]	; 64b0 <rinex_init+0x60a4>
    5788:	ldr	r3, [r3, r2]
    578c:	add	r3, r3, #508	; 0x1fc
    5790:	ldr	r3, [r3]
    5794:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5798:	mov	r0, r3
    579c:	bl	0 <coda_type_record_add_field>
    57a0:	movw	r0, #0
    57a4:	movt	r0, #0
    57a8:	bl	0 <coda_type_record_field_new>
    57ac:	str	r0, [fp, #-24]	; 0xffffffe8
    57b0:	mrc	15, 0, r3, cr13, cr0, {3}
    57b4:	ldr	r2, [pc, #3316]	; 64b0 <rinex_init+0x60a4>
    57b8:	ldr	r3, [r3, r2]
    57bc:	add	r3, r3, #28
    57c0:	ldr	r3, [r3]
    57c4:	mov	r1, r3
    57c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    57cc:	bl	0 <coda_type_record_field_set_type>
    57d0:	mrc	15, 0, r3, cr13, cr0, {3}
    57d4:	ldr	r2, [pc, #3284]	; 64b0 <rinex_init+0x60a4>
    57d8:	ldr	r3, [r3, r2]
    57dc:	add	r3, r3, #508	; 0x1fc
    57e0:	ldr	r3, [r3]
    57e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    57e8:	mov	r0, r3
    57ec:	bl	0 <coda_type_record_add_field>
    57f0:	movw	r0, #0
    57f4:	movt	r0, #0
    57f8:	bl	0 <coda_type_record_field_new>
    57fc:	str	r0, [fp, #-24]	; 0xffffffe8
    5800:	mrc	15, 0, r3, cr13, cr0, {3}
    5804:	ldr	r2, [pc, #3236]	; 64b0 <rinex_init+0x60a4>
    5808:	ldr	r3, [r3, r2]
    580c:	add	r3, r3, #232	; 0xe8
    5810:	ldr	r3, [r3]
    5814:	mov	r1, r3
    5818:	ldr	r0, [fp, #-24]	; 0xffffffe8
    581c:	bl	0 <coda_type_record_field_set_type>
    5820:	mrc	15, 0, r3, cr13, cr0, {3}
    5824:	ldr	r2, [pc, #3204]	; 64b0 <rinex_init+0x60a4>
    5828:	ldr	r3, [r3, r2]
    582c:	add	r3, r3, #508	; 0x1fc
    5830:	ldr	r3, [r3]
    5834:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5838:	mov	r0, r3
    583c:	bl	0 <coda_type_record_add_field>
    5840:	movw	r0, #0
    5844:	movt	r0, #0
    5848:	bl	0 <coda_type_record_field_new>
    584c:	str	r0, [fp, #-24]	; 0xffffffe8
    5850:	mrc	15, 0, r3, cr13, cr0, {3}
    5854:	ldr	r2, [pc, #3156]	; 64b0 <rinex_init+0x60a4>
    5858:	ldr	r3, [r3, r2]
    585c:	add	r3, r3, #268	; 0x10c
    5860:	ldr	r3, [r3]
    5864:	mov	r1, r3
    5868:	ldr	r0, [fp, #-24]	; 0xffffffe8
    586c:	bl	0 <coda_type_record_field_set_type>
    5870:	mrc	15, 0, r3, cr13, cr0, {3}
    5874:	ldr	r2, [pc, #3124]	; 64b0 <rinex_init+0x60a4>
    5878:	ldr	r3, [r3, r2]
    587c:	add	r3, r3, #508	; 0x1fc
    5880:	ldr	r3, [r3]
    5884:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5888:	mov	r0, r3
    588c:	bl	0 <coda_type_record_add_field>
    5890:	movw	r0, #0
    5894:	movt	r0, #0
    5898:	bl	0 <coda_type_record_field_new>
    589c:	str	r0, [fp, #-24]	; 0xffffffe8
    58a0:	mrc	15, 0, r3, cr13, cr0, {3}
    58a4:	ldr	r2, [pc, #3076]	; 64b0 <rinex_init+0x60a4>
    58a8:	ldr	r3, [r3, r2]
    58ac:	add	r3, r3, #164	; 0xa4
    58b0:	ldr	r3, [r3]
    58b4:	mov	r1, r3
    58b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58bc:	bl	0 <coda_type_record_field_set_type>
    58c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    58c4:	bl	0 <coda_type_record_field_set_optional>
    58c8:	mrc	15, 0, r3, cr13, cr0, {3}
    58cc:	ldr	r2, [pc, #3036]	; 64b0 <rinex_init+0x60a4>
    58d0:	ldr	r3, [r3, r2]
    58d4:	add	r3, r3, #508	; 0x1fc
    58d8:	ldr	r3, [r3]
    58dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    58e0:	mov	r0, r3
    58e4:	bl	0 <coda_type_record_add_field>
    58e8:	mrc	15, 0, r3, cr13, cr0, {3}
    58ec:	ldr	r2, [pc, #3004]	; 64b0 <rinex_init+0x60a4>
    58f0:	ldr	r3, [r3, r2]
    58f4:	add	r4, r3, #492	; 0x1ec
    58f8:	mov	r0, #8
    58fc:	bl	0 <coda_type_record_new>
    5900:	mov	r3, r0
    5904:	str	r3, [r4]
    5908:	movw	r0, #0
    590c:	movt	r0, #0
    5910:	bl	0 <coda_type_record_field_new>
    5914:	str	r0, [fp, #-24]	; 0xffffffe8
    5918:	mrc	15, 0, r3, cr13, cr0, {3}
    591c:	ldr	r2, [pc, #2956]	; 64b0 <rinex_init+0x60a4>
    5920:	ldr	r3, [r3, r2]
    5924:	add	r3, r3, #192	; 0xc0
    5928:	ldr	r3, [r3]
    592c:	mov	r1, r3
    5930:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5934:	bl	0 <coda_type_record_field_set_type>
    5938:	mrc	15, 0, r3, cr13, cr0, {3}
    593c:	ldr	r2, [pc, #2924]	; 64b0 <rinex_init+0x60a4>
    5940:	ldr	r3, [r3, r2]
    5944:	add	r3, r3, #492	; 0x1ec
    5948:	ldr	r3, [r3]
    594c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5950:	mov	r0, r3
    5954:	bl	0 <coda_type_record_add_field>
    5958:	movw	r0, #0
    595c:	movt	r0, #0
    5960:	bl	0 <coda_type_record_field_new>
    5964:	str	r0, [fp, #-24]	; 0xffffffe8
    5968:	mrc	15, 0, r3, cr13, cr0, {3}
    596c:	ldr	r2, [pc, #2876]	; 64b0 <rinex_init+0x60a4>
    5970:	ldr	r3, [r3, r2]
    5974:	add	r3, r3, #272	; 0x110
    5978:	ldr	r3, [r3]
    597c:	mov	r1, r3
    5980:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5984:	bl	0 <coda_type_record_field_set_type>
    5988:	mrc	15, 0, r3, cr13, cr0, {3}
    598c:	ldr	r2, [pc, #2844]	; 64b0 <rinex_init+0x60a4>
    5990:	ldr	r3, [r3, r2]
    5994:	add	r3, r3, #492	; 0x1ec
    5998:	ldr	r3, [r3]
    599c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    59a0:	mov	r0, r3
    59a4:	bl	0 <coda_type_record_add_field>
    59a8:	movw	r0, #0
    59ac:	movt	r0, #0
    59b0:	bl	0 <coda_type_record_field_new>
    59b4:	str	r0, [fp, #-24]	; 0xffffffe8
    59b8:	mrc	15, 0, r3, cr13, cr0, {3}
    59bc:	ldr	r2, [pc, #2796]	; 64b0 <rinex_init+0x60a4>
    59c0:	ldr	r3, [r3, r2]
    59c4:	add	r3, r3, #276	; 0x114
    59c8:	ldr	r3, [r3]
    59cc:	mov	r1, r3
    59d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    59d4:	bl	0 <coda_type_record_field_set_type>
    59d8:	mrc	15, 0, r3, cr13, cr0, {3}
    59dc:	ldr	r2, [pc, #2764]	; 64b0 <rinex_init+0x60a4>
    59e0:	ldr	r3, [r3, r2]
    59e4:	add	r3, r3, #492	; 0x1ec
    59e8:	ldr	r3, [r3]
    59ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    59f0:	mov	r0, r3
    59f4:	bl	0 <coda_type_record_add_field>
    59f8:	movw	r0, #0
    59fc:	movt	r0, #0
    5a00:	bl	0 <coda_type_record_field_new>
    5a04:	str	r0, [fp, #-24]	; 0xffffffe8
    5a08:	mrc	15, 0, r3, cr13, cr0, {3}
    5a0c:	ldr	r2, [pc, #2716]	; 64b0 <rinex_init+0x60a4>
    5a10:	ldr	r3, [r3, r2]
    5a14:	add	r3, r3, #280	; 0x118
    5a18:	ldr	r3, [r3]
    5a1c:	mov	r1, r3
    5a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a24:	bl	0 <coda_type_record_field_set_type>
    5a28:	mrc	15, 0, r3, cr13, cr0, {3}
    5a2c:	ldr	r2, [pc, #2684]	; 64b0 <rinex_init+0x60a4>
    5a30:	ldr	r3, [r3, r2]
    5a34:	add	r3, r3, #492	; 0x1ec
    5a38:	ldr	r3, [r3]
    5a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5a40:	mov	r0, r3
    5a44:	bl	0 <coda_type_record_add_field>
    5a48:	movw	r0, #0
    5a4c:	movt	r0, #0
    5a50:	bl	0 <coda_type_record_field_new>
    5a54:	str	r0, [fp, #-24]	; 0xffffffe8
    5a58:	mrc	15, 0, r3, cr13, cr0, {3}
    5a5c:	ldr	r2, [pc, #2636]	; 64b0 <rinex_init+0x60a4>
    5a60:	ldr	r3, [r3, r2]
    5a64:	add	r3, r3, #284	; 0x11c
    5a68:	ldr	r3, [r3]
    5a6c:	mov	r1, r3
    5a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5a74:	bl	0 <coda_type_record_field_set_type>
    5a78:	mrc	15, 0, r3, cr13, cr0, {3}
    5a7c:	ldr	r2, [pc, #2604]	; 64b0 <rinex_init+0x60a4>
    5a80:	ldr	r3, [r3, r2]
    5a84:	add	r3, r3, #492	; 0x1ec
    5a88:	ldr	r3, [r3]
    5a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5a90:	mov	r0, r3
    5a94:	bl	0 <coda_type_record_add_field>
    5a98:	movw	r0, #0
    5a9c:	movt	r0, #0
    5aa0:	bl	0 <coda_type_record_field_new>
    5aa4:	str	r0, [fp, #-24]	; 0xffffffe8
    5aa8:	mrc	15, 0, r3, cr13, cr0, {3}
    5aac:	ldr	r2, [pc, #2556]	; 64b0 <rinex_init+0x60a4>
    5ab0:	ldr	r3, [r3, r2]
    5ab4:	add	r3, r3, #288	; 0x120
    5ab8:	ldr	r3, [r3]
    5abc:	mov	r1, r3
    5ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ac4:	bl	0 <coda_type_record_field_set_type>
    5ac8:	mrc	15, 0, r3, cr13, cr0, {3}
    5acc:	ldr	r2, [pc, #2524]	; 64b0 <rinex_init+0x60a4>
    5ad0:	ldr	r3, [r3, r2]
    5ad4:	add	r3, r3, #492	; 0x1ec
    5ad8:	ldr	r3, [r3]
    5adc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ae0:	mov	r0, r3
    5ae4:	bl	0 <coda_type_record_add_field>
    5ae8:	movw	r0, #0
    5aec:	movt	r0, #0
    5af0:	bl	0 <coda_type_record_field_new>
    5af4:	str	r0, [fp, #-24]	; 0xffffffe8
    5af8:	mrc	15, 0, r3, cr13, cr0, {3}
    5afc:	ldr	r2, [pc, #2476]	; 64b0 <rinex_init+0x60a4>
    5b00:	ldr	r3, [r3, r2]
    5b04:	add	r3, r3, #292	; 0x124
    5b08:	ldr	r3, [r3]
    5b0c:	mov	r1, r3
    5b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b14:	bl	0 <coda_type_record_field_set_type>
    5b18:	mrc	15, 0, r3, cr13, cr0, {3}
    5b1c:	ldr	r2, [pc, #2444]	; 64b0 <rinex_init+0x60a4>
    5b20:	ldr	r3, [r3, r2]
    5b24:	add	r3, r3, #492	; 0x1ec
    5b28:	ldr	r3, [r3]
    5b2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5b30:	mov	r0, r3
    5b34:	bl	0 <coda_type_record_add_field>
    5b38:	movw	r0, #0
    5b3c:	movt	r0, #0
    5b40:	bl	0 <coda_type_record_field_new>
    5b44:	str	r0, [fp, #-24]	; 0xffffffe8
    5b48:	mrc	15, 0, r3, cr13, cr0, {3}
    5b4c:	ldr	r2, [pc, #2396]	; 64b0 <rinex_init+0x60a4>
    5b50:	ldr	r3, [r3, r2]
    5b54:	add	r3, r3, #296	; 0x128
    5b58:	ldr	r3, [r3]
    5b5c:	mov	r1, r3
    5b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5b64:	bl	0 <coda_type_record_field_set_type>
    5b68:	mrc	15, 0, r3, cr13, cr0, {3}
    5b6c:	ldr	r2, [pc, #2364]	; 64b0 <rinex_init+0x60a4>
    5b70:	ldr	r3, [r3, r2]
    5b74:	add	r3, r3, #492	; 0x1ec
    5b78:	ldr	r3, [r3]
    5b7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5b80:	mov	r0, r3
    5b84:	bl	0 <coda_type_record_add_field>
    5b88:	movw	r0, #0
    5b8c:	movt	r0, #0
    5b90:	bl	0 <coda_type_record_field_new>
    5b94:	str	r0, [fp, #-24]	; 0xffffffe8
    5b98:	mrc	15, 0, r3, cr13, cr0, {3}
    5b9c:	ldr	r2, [pc, #2316]	; 64b0 <rinex_init+0x60a4>
    5ba0:	ldr	r3, [r3, r2]
    5ba4:	add	r3, r3, #300	; 0x12c
    5ba8:	ldr	r3, [r3]
    5bac:	mov	r1, r3
    5bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5bb4:	bl	0 <coda_type_record_field_set_type>
    5bb8:	mrc	15, 0, r3, cr13, cr0, {3}
    5bbc:	ldr	r2, [pc, #2284]	; 64b0 <rinex_init+0x60a4>
    5bc0:	ldr	r3, [r3, r2]
    5bc4:	add	r3, r3, #492	; 0x1ec
    5bc8:	ldr	r3, [r3]
    5bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5bd0:	mov	r0, r3
    5bd4:	bl	0 <coda_type_record_add_field>
    5bd8:	movw	r0, #0
    5bdc:	movt	r0, #0
    5be0:	bl	0 <coda_type_record_field_new>
    5be4:	str	r0, [fp, #-24]	; 0xffffffe8
    5be8:	mrc	15, 0, r3, cr13, cr0, {3}
    5bec:	ldr	r2, [pc, #2236]	; 64b0 <rinex_init+0x60a4>
    5bf0:	ldr	r3, [r3, r2]
    5bf4:	add	r3, r3, #304	; 0x130
    5bf8:	ldr	r3, [r3]
    5bfc:	mov	r1, r3
    5c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c04:	bl	0 <coda_type_record_field_set_type>
    5c08:	mrc	15, 0, r3, cr13, cr0, {3}
    5c0c:	ldr	r2, [pc, #2204]	; 64b0 <rinex_init+0x60a4>
    5c10:	ldr	r3, [r3, r2]
    5c14:	add	r3, r3, #492	; 0x1ec
    5c18:	ldr	r3, [r3]
    5c1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5c20:	mov	r0, r3
    5c24:	bl	0 <coda_type_record_add_field>
    5c28:	movw	r0, #0
    5c2c:	movt	r0, #0
    5c30:	bl	0 <coda_type_record_field_new>
    5c34:	str	r0, [fp, #-24]	; 0xffffffe8
    5c38:	mrc	15, 0, r3, cr13, cr0, {3}
    5c3c:	ldr	r2, [pc, #2156]	; 64b0 <rinex_init+0x60a4>
    5c40:	ldr	r3, [r3, r2]
    5c44:	add	r3, r3, #308	; 0x134
    5c48:	ldr	r3, [r3]
    5c4c:	mov	r1, r3
    5c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5c54:	bl	0 <coda_type_record_field_set_type>
    5c58:	mrc	15, 0, r3, cr13, cr0, {3}
    5c5c:	ldr	r2, [pc, #2124]	; 64b0 <rinex_init+0x60a4>
    5c60:	ldr	r3, [r3, r2]
    5c64:	add	r3, r3, #492	; 0x1ec
    5c68:	ldr	r3, [r3]
    5c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5c70:	mov	r0, r3
    5c74:	bl	0 <coda_type_record_add_field>
    5c78:	movw	r0, #0
    5c7c:	movt	r0, #0
    5c80:	bl	0 <coda_type_record_field_new>
    5c84:	str	r0, [fp, #-24]	; 0xffffffe8
    5c88:	mrc	15, 0, r3, cr13, cr0, {3}
    5c8c:	ldr	r2, [pc, #2076]	; 64b0 <rinex_init+0x60a4>
    5c90:	ldr	r3, [r3, r2]
    5c94:	add	r3, r3, #312	; 0x138
    5c98:	ldr	r3, [r3]
    5c9c:	mov	r1, r3
    5ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ca4:	bl	0 <coda_type_record_field_set_type>
    5ca8:	mrc	15, 0, r3, cr13, cr0, {3}
    5cac:	ldr	r2, [pc, #2044]	; 64b0 <rinex_init+0x60a4>
    5cb0:	ldr	r3, [r3, r2]
    5cb4:	add	r3, r3, #492	; 0x1ec
    5cb8:	ldr	r3, [r3]
    5cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5cc0:	mov	r0, r3
    5cc4:	bl	0 <coda_type_record_add_field>
    5cc8:	movw	r0, #0
    5ccc:	movt	r0, #0
    5cd0:	bl	0 <coda_type_record_field_new>
    5cd4:	str	r0, [fp, #-24]	; 0xffffffe8
    5cd8:	mrc	15, 0, r3, cr13, cr0, {3}
    5cdc:	ldr	r2, [pc, #1996]	; 64b0 <rinex_init+0x60a4>
    5ce0:	ldr	r3, [r3, r2]
    5ce4:	add	r3, r3, #316	; 0x13c
    5ce8:	ldr	r3, [r3]
    5cec:	mov	r1, r3
    5cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5cf4:	bl	0 <coda_type_record_field_set_type>
    5cf8:	mrc	15, 0, r3, cr13, cr0, {3}
    5cfc:	ldr	r2, [pc, #1964]	; 64b0 <rinex_init+0x60a4>
    5d00:	ldr	r3, [r3, r2]
    5d04:	add	r3, r3, #492	; 0x1ec
    5d08:	ldr	r3, [r3]
    5d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5d10:	mov	r0, r3
    5d14:	bl	0 <coda_type_record_add_field>
    5d18:	movw	r0, #0
    5d1c:	movt	r0, #0
    5d20:	bl	0 <coda_type_record_field_new>
    5d24:	str	r0, [fp, #-24]	; 0xffffffe8
    5d28:	mrc	15, 0, r3, cr13, cr0, {3}
    5d2c:	ldr	r2, [pc, #1916]	; 64b0 <rinex_init+0x60a4>
    5d30:	ldr	r3, [r3, r2]
    5d34:	add	r3, r3, #320	; 0x140
    5d38:	ldr	r3, [r3]
    5d3c:	mov	r1, r3
    5d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d44:	bl	0 <coda_type_record_field_set_type>
    5d48:	mrc	15, 0, r3, cr13, cr0, {3}
    5d4c:	ldr	r2, [pc, #1884]	; 64b0 <rinex_init+0x60a4>
    5d50:	ldr	r3, [r3, r2]
    5d54:	add	r3, r3, #492	; 0x1ec
    5d58:	ldr	r3, [r3]
    5d5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5d60:	mov	r0, r3
    5d64:	bl	0 <coda_type_record_add_field>
    5d68:	movw	r0, #0
    5d6c:	movt	r0, #0
    5d70:	bl	0 <coda_type_record_field_new>
    5d74:	str	r0, [fp, #-24]	; 0xffffffe8
    5d78:	mrc	15, 0, r3, cr13, cr0, {3}
    5d7c:	ldr	r2, [pc, #1836]	; 64b0 <rinex_init+0x60a4>
    5d80:	ldr	r3, [r3, r2]
    5d84:	add	r3, r3, #324	; 0x144
    5d88:	ldr	r3, [r3]
    5d8c:	mov	r1, r3
    5d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5d94:	bl	0 <coda_type_record_field_set_type>
    5d98:	mrc	15, 0, r3, cr13, cr0, {3}
    5d9c:	ldr	r2, [pc, #1804]	; 64b0 <rinex_init+0x60a4>
    5da0:	ldr	r3, [r3, r2]
    5da4:	add	r3, r3, #492	; 0x1ec
    5da8:	ldr	r3, [r3]
    5dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5db0:	mov	r0, r3
    5db4:	bl	0 <coda_type_record_add_field>
    5db8:	movw	r0, #0
    5dbc:	movt	r0, #0
    5dc0:	bl	0 <coda_type_record_field_new>
    5dc4:	str	r0, [fp, #-24]	; 0xffffffe8
    5dc8:	mrc	15, 0, r3, cr13, cr0, {3}
    5dcc:	ldr	r2, [pc, #1756]	; 64b0 <rinex_init+0x60a4>
    5dd0:	ldr	r3, [r3, r2]
    5dd4:	add	r3, r3, #328	; 0x148
    5dd8:	ldr	r3, [r3]
    5ddc:	mov	r1, r3
    5de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5de4:	bl	0 <coda_type_record_field_set_type>
    5de8:	mrc	15, 0, r3, cr13, cr0, {3}
    5dec:	ldr	r2, [pc, #1724]	; 64b0 <rinex_init+0x60a4>
    5df0:	ldr	r3, [r3, r2]
    5df4:	add	r3, r3, #492	; 0x1ec
    5df8:	ldr	r3, [r3]
    5dfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5e00:	mov	r0, r3
    5e04:	bl	0 <coda_type_record_add_field>
    5e08:	movw	r0, #0
    5e0c:	movt	r0, #0
    5e10:	bl	0 <coda_type_record_field_new>
    5e14:	str	r0, [fp, #-24]	; 0xffffffe8
    5e18:	mrc	15, 0, r3, cr13, cr0, {3}
    5e1c:	ldr	r2, [pc, #1676]	; 64b0 <rinex_init+0x60a4>
    5e20:	ldr	r3, [r3, r2]
    5e24:	add	r3, r3, #332	; 0x14c
    5e28:	ldr	r3, [r3]
    5e2c:	mov	r1, r3
    5e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e34:	bl	0 <coda_type_record_field_set_type>
    5e38:	mrc	15, 0, r3, cr13, cr0, {3}
    5e3c:	ldr	r2, [pc, #1644]	; 64b0 <rinex_init+0x60a4>
    5e40:	ldr	r3, [r3, r2]
    5e44:	add	r3, r3, #492	; 0x1ec
    5e48:	ldr	r3, [r3]
    5e4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5e50:	mov	r0, r3
    5e54:	bl	0 <coda_type_record_add_field>
    5e58:	movw	r0, #0
    5e5c:	movt	r0, #0
    5e60:	bl	0 <coda_type_record_field_new>
    5e64:	str	r0, [fp, #-24]	; 0xffffffe8
    5e68:	mrc	15, 0, r3, cr13, cr0, {3}
    5e6c:	ldr	r2, [pc, #1596]	; 64b0 <rinex_init+0x60a4>
    5e70:	ldr	r3, [r3, r2]
    5e74:	add	r3, r3, #336	; 0x150
    5e78:	ldr	r3, [r3]
    5e7c:	mov	r1, r3
    5e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5e84:	bl	0 <coda_type_record_field_set_type>
    5e88:	mrc	15, 0, r3, cr13, cr0, {3}
    5e8c:	ldr	r2, [pc, #1564]	; 64b0 <rinex_init+0x60a4>
    5e90:	ldr	r3, [r3, r2]
    5e94:	add	r3, r3, #492	; 0x1ec
    5e98:	ldr	r3, [r3]
    5e9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ea0:	mov	r0, r3
    5ea4:	bl	0 <coda_type_record_add_field>
    5ea8:	movw	r0, #0
    5eac:	movt	r0, #0
    5eb0:	bl	0 <coda_type_record_field_new>
    5eb4:	str	r0, [fp, #-24]	; 0xffffffe8
    5eb8:	mrc	15, 0, r3, cr13, cr0, {3}
    5ebc:	ldr	r2, [pc, #1516]	; 64b0 <rinex_init+0x60a4>
    5ec0:	ldr	r3, [r3, r2]
    5ec4:	add	r3, r3, #340	; 0x154
    5ec8:	ldr	r3, [r3]
    5ecc:	mov	r1, r3
    5ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5ed4:	bl	0 <coda_type_record_field_set_type>
    5ed8:	mrc	15, 0, r3, cr13, cr0, {3}
    5edc:	ldr	r2, [pc, #1484]	; 64b0 <rinex_init+0x60a4>
    5ee0:	ldr	r3, [r3, r2]
    5ee4:	add	r3, r3, #492	; 0x1ec
    5ee8:	ldr	r3, [r3]
    5eec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ef0:	mov	r0, r3
    5ef4:	bl	0 <coda_type_record_add_field>
    5ef8:	movw	r0, #0
    5efc:	movt	r0, #0
    5f00:	bl	0 <coda_type_record_field_new>
    5f04:	str	r0, [fp, #-24]	; 0xffffffe8
    5f08:	mrc	15, 0, r3, cr13, cr0, {3}
    5f0c:	ldr	r2, [pc, #1436]	; 64b0 <rinex_init+0x60a4>
    5f10:	ldr	r3, [r3, r2]
    5f14:	add	r3, r3, #344	; 0x158
    5f18:	ldr	r3, [r3]
    5f1c:	mov	r1, r3
    5f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f24:	bl	0 <coda_type_record_field_set_type>
    5f28:	mrc	15, 0, r3, cr13, cr0, {3}
    5f2c:	ldr	r2, [pc, #1404]	; 64b0 <rinex_init+0x60a4>
    5f30:	ldr	r3, [r3, r2]
    5f34:	add	r3, r3, #492	; 0x1ec
    5f38:	ldr	r3, [r3]
    5f3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5f40:	mov	r0, r3
    5f44:	bl	0 <coda_type_record_add_field>
    5f48:	movw	r0, #0
    5f4c:	movt	r0, #0
    5f50:	bl	0 <coda_type_record_field_new>
    5f54:	str	r0, [fp, #-24]	; 0xffffffe8
    5f58:	mrc	15, 0, r3, cr13, cr0, {3}
    5f5c:	ldr	r2, [pc, #1356]	; 64b0 <rinex_init+0x60a4>
    5f60:	ldr	r3, [r3, r2]
    5f64:	add	r3, r3, #348	; 0x15c
    5f68:	ldr	r3, [r3]
    5f6c:	mov	r1, r3
    5f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5f74:	bl	0 <coda_type_record_field_set_type>
    5f78:	mrc	15, 0, r3, cr13, cr0, {3}
    5f7c:	ldr	r2, [pc, #1324]	; 64b0 <rinex_init+0x60a4>
    5f80:	ldr	r3, [r3, r2]
    5f84:	add	r3, r3, #492	; 0x1ec
    5f88:	ldr	r3, [r3]
    5f8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5f90:	mov	r0, r3
    5f94:	bl	0 <coda_type_record_add_field>
    5f98:	movw	r0, #0
    5f9c:	movt	r0, #0
    5fa0:	bl	0 <coda_type_record_field_new>
    5fa4:	str	r0, [fp, #-24]	; 0xffffffe8
    5fa8:	mrc	15, 0, r3, cr13, cr0, {3}
    5fac:	ldr	r2, [pc, #1276]	; 64b0 <rinex_init+0x60a4>
    5fb0:	ldr	r3, [r3, r2]
    5fb4:	add	r3, r3, #352	; 0x160
    5fb8:	ldr	r3, [r3]
    5fbc:	mov	r1, r3
    5fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    5fc4:	bl	0 <coda_type_record_field_set_type>
    5fc8:	mrc	15, 0, r3, cr13, cr0, {3}
    5fcc:	ldr	r2, [pc, #1244]	; 64b0 <rinex_init+0x60a4>
    5fd0:	ldr	r3, [r3, r2]
    5fd4:	add	r3, r3, #492	; 0x1ec
    5fd8:	ldr	r3, [r3]
    5fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5fe0:	mov	r0, r3
    5fe4:	bl	0 <coda_type_record_add_field>
    5fe8:	movw	r0, #0
    5fec:	movt	r0, #0
    5ff0:	bl	0 <coda_type_record_field_new>
    5ff4:	str	r0, [fp, #-24]	; 0xffffffe8
    5ff8:	mrc	15, 0, r3, cr13, cr0, {3}
    5ffc:	ldr	r2, [pc, #1196]	; 64b0 <rinex_init+0x60a4>
    6000:	ldr	r3, [r3, r2]
    6004:	add	r3, r3, #356	; 0x164
    6008:	ldr	r3, [r3]
    600c:	mov	r1, r3
    6010:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6014:	bl	0 <coda_type_record_field_set_type>
    6018:	mrc	15, 0, r3, cr13, cr0, {3}
    601c:	ldr	r2, [pc, #1164]	; 64b0 <rinex_init+0x60a4>
    6020:	ldr	r3, [r3, r2]
    6024:	add	r3, r3, #492	; 0x1ec
    6028:	ldr	r3, [r3]
    602c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6030:	mov	r0, r3
    6034:	bl	0 <coda_type_record_add_field>
    6038:	movw	r0, #0
    603c:	movt	r0, #0
    6040:	bl	0 <coda_type_record_field_new>
    6044:	str	r0, [fp, #-24]	; 0xffffffe8
    6048:	mrc	15, 0, r3, cr13, cr0, {3}
    604c:	ldr	r2, [pc, #1116]	; 64b0 <rinex_init+0x60a4>
    6050:	ldr	r3, [r3, r2]
    6054:	add	r3, r3, #360	; 0x168
    6058:	ldr	r3, [r3]
    605c:	mov	r1, r3
    6060:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6064:	bl	0 <coda_type_record_field_set_type>
    6068:	mrc	15, 0, r3, cr13, cr0, {3}
    606c:	ldr	r2, [pc, #1084]	; 64b0 <rinex_init+0x60a4>
    6070:	ldr	r3, [r3, r2]
    6074:	add	r3, r3, #492	; 0x1ec
    6078:	ldr	r3, [r3]
    607c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6080:	mov	r0, r3
    6084:	bl	0 <coda_type_record_add_field>
    6088:	movw	r0, #0
    608c:	movt	r0, #0
    6090:	bl	0 <coda_type_record_field_new>
    6094:	str	r0, [fp, #-24]	; 0xffffffe8
    6098:	mrc	15, 0, r3, cr13, cr0, {3}
    609c:	ldr	r2, [pc, #1036]	; 64b0 <rinex_init+0x60a4>
    60a0:	ldr	r3, [r3, r2]
    60a4:	add	r3, r3, #364	; 0x16c
    60a8:	ldr	r3, [r3]
    60ac:	mov	r1, r3
    60b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    60b4:	bl	0 <coda_type_record_field_set_type>
    60b8:	mrc	15, 0, r3, cr13, cr0, {3}
    60bc:	ldr	r2, [pc, #1004]	; 64b0 <rinex_init+0x60a4>
    60c0:	ldr	r3, [r3, r2]
    60c4:	add	r3, r3, #492	; 0x1ec
    60c8:	ldr	r3, [r3]
    60cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    60d0:	mov	r0, r3
    60d4:	bl	0 <coda_type_record_add_field>
    60d8:	movw	r0, #0
    60dc:	movt	r0, #0
    60e0:	bl	0 <coda_type_record_field_new>
    60e4:	str	r0, [fp, #-24]	; 0xffffffe8
    60e8:	mrc	15, 0, r3, cr13, cr0, {3}
    60ec:	ldr	r2, [pc, #956]	; 64b0 <rinex_init+0x60a4>
    60f0:	ldr	r3, [r3, r2]
    60f4:	add	r3, r3, #368	; 0x170
    60f8:	ldr	r3, [r3]
    60fc:	mov	r1, r3
    6100:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6104:	bl	0 <coda_type_record_field_set_type>
    6108:	mrc	15, 0, r3, cr13, cr0, {3}
    610c:	ldr	r2, [pc, #924]	; 64b0 <rinex_init+0x60a4>
    6110:	ldr	r3, [r3, r2]
    6114:	add	r3, r3, #492	; 0x1ec
    6118:	ldr	r3, [r3]
    611c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6120:	mov	r0, r3
    6124:	bl	0 <coda_type_record_add_field>
    6128:	movw	r0, #0
    612c:	movt	r0, #0
    6130:	bl	0 <coda_type_record_field_new>
    6134:	str	r0, [fp, #-24]	; 0xffffffe8
    6138:	mrc	15, 0, r3, cr13, cr0, {3}
    613c:	ldr	r2, [pc, #876]	; 64b0 <rinex_init+0x60a4>
    6140:	ldr	r3, [r3, r2]
    6144:	add	r3, r3, #372	; 0x174
    6148:	ldr	r3, [r3]
    614c:	mov	r1, r3
    6150:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6154:	bl	0 <coda_type_record_field_set_type>
    6158:	mrc	15, 0, r3, cr13, cr0, {3}
    615c:	ldr	r2, [pc, #844]	; 64b0 <rinex_init+0x60a4>
    6160:	ldr	r3, [r3, r2]
    6164:	add	r3, r3, #492	; 0x1ec
    6168:	ldr	r3, [r3]
    616c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6170:	mov	r0, r3
    6174:	bl	0 <coda_type_record_add_field>
    6178:	movw	r0, #0
    617c:	movt	r0, #0
    6180:	bl	0 <coda_type_record_field_new>
    6184:	str	r0, [fp, #-24]	; 0xffffffe8
    6188:	mrc	15, 0, r3, cr13, cr0, {3}
    618c:	ldr	r2, [pc, #796]	; 64b0 <rinex_init+0x60a4>
    6190:	ldr	r3, [r3, r2]
    6194:	add	r3, r3, #376	; 0x178
    6198:	ldr	r3, [r3]
    619c:	mov	r1, r3
    61a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61a4:	bl	0 <coda_type_record_field_set_type>
    61a8:	mrc	15, 0, r3, cr13, cr0, {3}
    61ac:	ldr	r2, [pc, #764]	; 64b0 <rinex_init+0x60a4>
    61b0:	ldr	r3, [r3, r2]
    61b4:	add	r3, r3, #492	; 0x1ec
    61b8:	ldr	r3, [r3]
    61bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    61c0:	mov	r0, r3
    61c4:	bl	0 <coda_type_record_add_field>
    61c8:	movw	r0, #0
    61cc:	movt	r0, #0
    61d0:	bl	0 <coda_type_record_field_new>
    61d4:	str	r0, [fp, #-24]	; 0xffffffe8
    61d8:	mrc	15, 0, r3, cr13, cr0, {3}
    61dc:	ldr	r2, [pc, #716]	; 64b0 <rinex_init+0x60a4>
    61e0:	ldr	r3, [r3, r2]
    61e4:	add	r3, r3, #380	; 0x17c
    61e8:	ldr	r3, [r3]
    61ec:	mov	r1, r3
    61f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    61f4:	bl	0 <coda_type_record_field_set_type>
    61f8:	mrc	15, 0, r3, cr13, cr0, {3}
    61fc:	ldr	r2, [pc, #684]	; 64b0 <rinex_init+0x60a4>
    6200:	ldr	r3, [r3, r2]
    6204:	add	r3, r3, #492	; 0x1ec
    6208:	ldr	r3, [r3]
    620c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6210:	mov	r0, r3
    6214:	bl	0 <coda_type_record_add_field>
    6218:	movw	r0, #0
    621c:	movt	r0, #0
    6220:	bl	0 <coda_type_record_field_new>
    6224:	str	r0, [fp, #-24]	; 0xffffffe8
    6228:	mrc	15, 0, r3, cr13, cr0, {3}
    622c:	ldr	r2, [pc, #636]	; 64b0 <rinex_init+0x60a4>
    6230:	ldr	r3, [r3, r2]
    6234:	add	r3, r3, #384	; 0x180
    6238:	ldr	r3, [r3]
    623c:	mov	r1, r3
    6240:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6244:	bl	0 <coda_type_record_field_set_type>
    6248:	mrc	15, 0, r3, cr13, cr0, {3}
    624c:	ldr	r2, [pc, #604]	; 64b0 <rinex_init+0x60a4>
    6250:	ldr	r3, [r3, r2]
    6254:	add	r3, r3, #492	; 0x1ec
    6258:	ldr	r3, [r3]
    625c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6260:	mov	r0, r3
    6264:	bl	0 <coda_type_record_add_field>
    6268:	movw	r0, #0
    626c:	movt	r0, #0
    6270:	bl	0 <coda_type_record_field_new>
    6274:	str	r0, [fp, #-24]	; 0xffffffe8
    6278:	mrc	15, 0, r3, cr13, cr0, {3}
    627c:	ldr	r2, [pc, #556]	; 64b0 <rinex_init+0x60a4>
    6280:	ldr	r3, [r3, r2]
    6284:	add	r3, r3, #388	; 0x184
    6288:	ldr	r3, [r3]
    628c:	mov	r1, r3
    6290:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6294:	bl	0 <coda_type_record_field_set_type>
    6298:	mrc	15, 0, r3, cr13, cr0, {3}
    629c:	ldr	r2, [pc, #524]	; 64b0 <rinex_init+0x60a4>
    62a0:	ldr	r3, [r3, r2]
    62a4:	add	r3, r3, #492	; 0x1ec
    62a8:	ldr	r3, [r3]
    62ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    62b0:	mov	r0, r3
    62b4:	bl	0 <coda_type_record_add_field>
    62b8:	mrc	15, 0, r3, cr13, cr0, {3}
    62bc:	ldr	r2, [pc, #492]	; 64b0 <rinex_init+0x60a4>
    62c0:	ldr	r3, [r3, r2]
    62c4:	add	r4, r3, #496	; 0x1f0
    62c8:	mov	r0, #8
    62cc:	bl	0 <coda_type_record_new>
    62d0:	mov	r3, r0
    62d4:	str	r3, [r4]
    62d8:	movw	r0, #0
    62dc:	movt	r0, #0
    62e0:	bl	0 <coda_type_record_field_new>
    62e4:	str	r0, [fp, #-24]	; 0xffffffe8
    62e8:	mrc	15, 0, r3, cr13, cr0, {3}
    62ec:	ldr	r2, [pc, #444]	; 64b0 <rinex_init+0x60a4>
    62f0:	ldr	r3, [r3, r2]
    62f4:	add	r3, r3, #192	; 0xc0
    62f8:	ldr	r3, [r3]
    62fc:	mov	r1, r3
    6300:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6304:	bl	0 <coda_type_record_field_set_type>
    6308:	mrc	15, 0, r3, cr13, cr0, {3}
    630c:	ldr	r2, [pc, #412]	; 64b0 <rinex_init+0x60a4>
    6310:	ldr	r3, [r3, r2]
    6314:	add	r3, r3, #496	; 0x1f0
    6318:	ldr	r3, [r3]
    631c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6320:	mov	r0, r3
    6324:	bl	0 <coda_type_record_add_field>
    6328:	movw	r0, #0
    632c:	movt	r0, #0
    6330:	bl	0 <coda_type_record_field_new>
    6334:	str	r0, [fp, #-24]	; 0xffffffe8
    6338:	mrc	15, 0, r3, cr13, cr0, {3}
    633c:	ldr	r2, [pc, #364]	; 64b0 <rinex_init+0x60a4>
    6340:	ldr	r3, [r3, r2]
    6344:	add	r3, r3, #272	; 0x110
    6348:	ldr	r3, [r3]
    634c:	mov	r1, r3
    6350:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6354:	bl	0 <coda_type_record_field_set_type>
    6358:	mrc	15, 0, r3, cr13, cr0, {3}
    635c:	ldr	r2, [pc, #332]	; 64b0 <rinex_init+0x60a4>
    6360:	ldr	r3, [r3, r2]
    6364:	add	r3, r3, #496	; 0x1f0
    6368:	ldr	r3, [r3]
    636c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6370:	mov	r0, r3
    6374:	bl	0 <coda_type_record_add_field>
    6378:	movw	r0, #0
    637c:	movt	r0, #0
    6380:	bl	0 <coda_type_record_field_new>
    6384:	str	r0, [fp, #-24]	; 0xffffffe8
    6388:	mrc	15, 0, r3, cr13, cr0, {3}
    638c:	ldr	r2, [pc, #284]	; 64b0 <rinex_init+0x60a4>
    6390:	ldr	r3, [r3, r2]
    6394:	add	r3, r3, #276	; 0x114
    6398:	ldr	r3, [r3]
    639c:	mov	r1, r3
    63a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63a4:	bl	0 <coda_type_record_field_set_type>
    63a8:	mrc	15, 0, r3, cr13, cr0, {3}
    63ac:	ldr	r2, [pc, #252]	; 64b0 <rinex_init+0x60a4>
    63b0:	ldr	r3, [r3, r2]
    63b4:	add	r3, r3, #496	; 0x1f0
    63b8:	ldr	r3, [r3]
    63bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    63c0:	mov	r0, r3
    63c4:	bl	0 <coda_type_record_add_field>
    63c8:	movw	r0, #0
    63cc:	movt	r0, #0
    63d0:	bl	0 <coda_type_record_field_new>
    63d4:	str	r0, [fp, #-24]	; 0xffffffe8
    63d8:	mrc	15, 0, r3, cr13, cr0, {3}
    63dc:	ldr	r2, [pc, #204]	; 64b0 <rinex_init+0x60a4>
    63e0:	ldr	r3, [r3, r2]
    63e4:	add	r3, r3, #424	; 0x1a8
    63e8:	ldr	r3, [r3]
    63ec:	mov	r1, r3
    63f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    63f4:	bl	0 <coda_type_record_field_set_type>
    63f8:	mrc	15, 0, r3, cr13, cr0, {3}
    63fc:	ldr	r2, [pc, #172]	; 64b0 <rinex_init+0x60a4>
    6400:	ldr	r3, [r3, r2]
    6404:	add	r3, r3, #496	; 0x1f0
    6408:	ldr	r3, [r3]
    640c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6410:	mov	r0, r3
    6414:	bl	0 <coda_type_record_add_field>
    6418:	movw	r0, #0
    641c:	movt	r0, #0
    6420:	bl	0 <coda_type_record_field_new>
    6424:	str	r0, [fp, #-24]	; 0xffffffe8
    6428:	mrc	15, 0, r3, cr13, cr0, {3}
    642c:	ldr	r2, [pc, #124]	; 64b0 <rinex_init+0x60a4>
    6430:	ldr	r3, [r3, r2]
    6434:	add	r3, r3, #428	; 0x1ac
    6438:	ldr	r3, [r3]
    643c:	mov	r1, r3
    6440:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6444:	bl	0 <coda_type_record_field_set_type>
    6448:	mrc	15, 0, r3, cr13, cr0, {3}
    644c:	ldr	r2, [pc, #92]	; 64b0 <rinex_init+0x60a4>
    6450:	ldr	r3, [r3, r2]
    6454:	add	r3, r3, #496	; 0x1f0
    6458:	ldr	r3, [r3]
    645c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6460:	mov	r0, r3
    6464:	bl	0 <coda_type_record_add_field>
    6468:	movw	r0, #0
    646c:	movt	r0, #0
    6470:	bl	0 <coda_type_record_field_new>
    6474:	str	r0, [fp, #-24]	; 0xffffffe8
    6478:	mrc	15, 0, r3, cr13, cr0, {3}
    647c:	ldr	r2, [pc, #44]	; 64b0 <rinex_init+0x60a4>
    6480:	ldr	r3, [r3, r2]
    6484:	add	r3, r3, #432	; 0x1b0
    6488:	ldr	r3, [r3]
    648c:	mov	r1, r3
    6490:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6494:	bl	0 <coda_type_record_field_set_type>
    6498:	mrc	15, 0, r3, cr13, cr0, {3}
    649c:	ldr	r2, [pc, #12]	; 64b0 <rinex_init+0x60a4>
    64a0:	ldr	r3, [r3, r2]
    64a4:	add	r3, r3, #496	; 0x1f0
    64a8:	ldr	r3, [r3]
    64ac:	b	64b8 <rinex_init+0x60ac>
	...
    64b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    64bc:	mov	r0, r3
    64c0:	bl	0 <coda_type_record_add_field>
    64c4:	movw	r0, #0
    64c8:	movt	r0, #0
    64cc:	bl	0 <coda_type_record_field_new>
    64d0:	str	r0, [fp, #-24]	; 0xffffffe8
    64d4:	mrc	15, 0, r3, cr13, cr0, {3}
    64d8:	ldr	r2, [pc, #-44]	; 64b4 <rinex_init+0x60a8>
    64dc:	ldr	r3, [r3, r2]
    64e0:	add	r3, r3, #444	; 0x1bc
    64e4:	ldr	r3, [r3]
    64e8:	mov	r1, r3
    64ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    64f0:	bl	0 <coda_type_record_field_set_type>
    64f4:	mrc	15, 0, r3, cr13, cr0, {3}
    64f8:	ldr	r2, [pc, #-76]	; 64b4 <rinex_init+0x60a8>
    64fc:	ldr	r3, [r3, r2]
    6500:	add	r3, r3, #496	; 0x1f0
    6504:	ldr	r3, [r3]
    6508:	ldr	r1, [fp, #-24]	; 0xffffffe8
    650c:	mov	r0, r3
    6510:	bl	0 <coda_type_record_add_field>
    6514:	movw	r0, #0
    6518:	movt	r0, #0
    651c:	bl	0 <coda_type_record_field_new>
    6520:	str	r0, [fp, #-24]	; 0xffffffe8
    6524:	mrc	15, 0, r3, cr13, cr0, {3}
    6528:	ldr	r2, [pc, #-124]	; 64b4 <rinex_init+0x60a8>
    652c:	ldr	r3, [r3, r2]
    6530:	add	r3, r3, #456	; 0x1c8
    6534:	ldr	r3, [r3]
    6538:	mov	r1, r3
    653c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6540:	bl	0 <coda_type_record_field_set_type>
    6544:	mrc	15, 0, r3, cr13, cr0, {3}
    6548:	ldr	r2, [pc, #-156]	; 64b4 <rinex_init+0x60a8>
    654c:	ldr	r3, [r3, r2]
    6550:	add	r3, r3, #496	; 0x1f0
    6554:	ldr	r3, [r3]
    6558:	ldr	r1, [fp, #-24]	; 0xffffffe8
    655c:	mov	r0, r3
    6560:	bl	0 <coda_type_record_add_field>
    6564:	movw	r0, #0
    6568:	movt	r0, #0
    656c:	bl	0 <coda_type_record_field_new>
    6570:	str	r0, [fp, #-24]	; 0xffffffe8
    6574:	mrc	15, 0, r3, cr13, cr0, {3}
    6578:	ldr	r2, [pc, #-204]	; 64b4 <rinex_init+0x60a8>
    657c:	ldr	r3, [r3, r2]
    6580:	add	r3, r3, #468	; 0x1d4
    6584:	ldr	r3, [r3]
    6588:	mov	r1, r3
    658c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6590:	bl	0 <coda_type_record_field_set_type>
    6594:	mrc	15, 0, r3, cr13, cr0, {3}
    6598:	ldr	r2, [pc, #-236]	; 64b4 <rinex_init+0x60a8>
    659c:	ldr	r3, [r3, r2]
    65a0:	add	r3, r3, #496	; 0x1f0
    65a4:	ldr	r3, [r3]
    65a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    65ac:	mov	r0, r3
    65b0:	bl	0 <coda_type_record_add_field>
    65b4:	movw	r0, #0
    65b8:	movt	r0, #0
    65bc:	bl	0 <coda_type_record_field_new>
    65c0:	str	r0, [fp, #-24]	; 0xffffffe8
    65c4:	mrc	15, 0, r3, cr13, cr0, {3}
    65c8:	ldr	r2, [pc, #-284]	; 64b4 <rinex_init+0x60a8>
    65cc:	ldr	r3, [r3, r2]
    65d0:	add	r3, r3, #436	; 0x1b4
    65d4:	ldr	r3, [r3]
    65d8:	mov	r1, r3
    65dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    65e0:	bl	0 <coda_type_record_field_set_type>
    65e4:	mrc	15, 0, r3, cr13, cr0, {3}
    65e8:	ldr	r2, [pc, #-316]	; 64b4 <rinex_init+0x60a8>
    65ec:	ldr	r3, [r3, r2]
    65f0:	add	r3, r3, #496	; 0x1f0
    65f4:	ldr	r3, [r3]
    65f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    65fc:	mov	r0, r3
    6600:	bl	0 <coda_type_record_add_field>
    6604:	movw	r0, #0
    6608:	movt	r0, #0
    660c:	bl	0 <coda_type_record_field_new>
    6610:	str	r0, [fp, #-24]	; 0xffffffe8
    6614:	mrc	15, 0, r3, cr13, cr0, {3}
    6618:	ldr	r2, [pc, #-364]	; 64b4 <rinex_init+0x60a8>
    661c:	ldr	r3, [r3, r2]
    6620:	add	r3, r3, #448	; 0x1c0
    6624:	ldr	r3, [r3]
    6628:	mov	r1, r3
    662c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6630:	bl	0 <coda_type_record_field_set_type>
    6634:	mrc	15, 0, r3, cr13, cr0, {3}
    6638:	ldr	r2, [pc, #-396]	; 64b4 <rinex_init+0x60a8>
    663c:	ldr	r3, [r3, r2]
    6640:	add	r3, r3, #496	; 0x1f0
    6644:	ldr	r3, [r3]
    6648:	ldr	r1, [fp, #-24]	; 0xffffffe8
    664c:	mov	r0, r3
    6650:	bl	0 <coda_type_record_add_field>
    6654:	movw	r0, #0
    6658:	movt	r0, #0
    665c:	bl	0 <coda_type_record_field_new>
    6660:	str	r0, [fp, #-24]	; 0xffffffe8
    6664:	mrc	15, 0, r3, cr13, cr0, {3}
    6668:	ldr	r2, [pc, #-444]	; 64b4 <rinex_init+0x60a8>
    666c:	ldr	r3, [r3, r2]
    6670:	add	r3, r3, #460	; 0x1cc
    6674:	ldr	r3, [r3]
    6678:	mov	r1, r3
    667c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6680:	bl	0 <coda_type_record_field_set_type>
    6684:	mrc	15, 0, r3, cr13, cr0, {3}
    6688:	ldr	r2, [pc, #-476]	; 64b4 <rinex_init+0x60a8>
    668c:	ldr	r3, [r3, r2]
    6690:	add	r3, r3, #496	; 0x1f0
    6694:	ldr	r3, [r3]
    6698:	ldr	r1, [fp, #-24]	; 0xffffffe8
    669c:	mov	r0, r3
    66a0:	bl	0 <coda_type_record_add_field>
    66a4:	movw	r0, #0
    66a8:	movt	r0, #0
    66ac:	bl	0 <coda_type_record_field_new>
    66b0:	str	r0, [fp, #-24]	; 0xffffffe8
    66b4:	mrc	15, 0, r3, cr13, cr0, {3}
    66b8:	ldr	r2, [pc, #-524]	; 64b4 <rinex_init+0x60a8>
    66bc:	ldr	r3, [r3, r2]
    66c0:	add	r3, r3, #472	; 0x1d8
    66c4:	ldr	r3, [r3]
    66c8:	mov	r1, r3
    66cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    66d0:	bl	0 <coda_type_record_field_set_type>
    66d4:	mrc	15, 0, r3, cr13, cr0, {3}
    66d8:	ldr	r2, [pc, #-556]	; 64b4 <rinex_init+0x60a8>
    66dc:	ldr	r3, [r3, r2]
    66e0:	add	r3, r3, #496	; 0x1f0
    66e4:	ldr	r3, [r3]
    66e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    66ec:	mov	r0, r3
    66f0:	bl	0 <coda_type_record_add_field>
    66f4:	movw	r0, #0
    66f8:	movt	r0, #0
    66fc:	bl	0 <coda_type_record_field_new>
    6700:	str	r0, [fp, #-24]	; 0xffffffe8
    6704:	mrc	15, 0, r3, cr13, cr0, {3}
    6708:	ldr	r2, [pc, #-604]	; 64b4 <rinex_init+0x60a8>
    670c:	ldr	r3, [r3, r2]
    6710:	add	r3, r3, #440	; 0x1b8
    6714:	ldr	r3, [r3]
    6718:	mov	r1, r3
    671c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6720:	bl	0 <coda_type_record_field_set_type>
    6724:	mrc	15, 0, r3, cr13, cr0, {3}
    6728:	ldr	r2, [pc, #-636]	; 64b4 <rinex_init+0x60a8>
    672c:	ldr	r3, [r3, r2]
    6730:	add	r3, r3, #496	; 0x1f0
    6734:	ldr	r3, [r3]
    6738:	ldr	r1, [fp, #-24]	; 0xffffffe8
    673c:	mov	r0, r3
    6740:	bl	0 <coda_type_record_add_field>
    6744:	movw	r0, #0
    6748:	movt	r0, #0
    674c:	bl	0 <coda_type_record_field_new>
    6750:	str	r0, [fp, #-24]	; 0xffffffe8
    6754:	mrc	15, 0, r3, cr13, cr0, {3}
    6758:	ldr	r2, [pc, #-684]	; 64b4 <rinex_init+0x60a8>
    675c:	ldr	r3, [r3, r2]
    6760:	add	r3, r3, #452	; 0x1c4
    6764:	ldr	r3, [r3]
    6768:	mov	r1, r3
    676c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6770:	bl	0 <coda_type_record_field_set_type>
    6774:	mrc	15, 0, r3, cr13, cr0, {3}
    6778:	ldr	r2, [pc, #-716]	; 64b4 <rinex_init+0x60a8>
    677c:	ldr	r3, [r3, r2]
    6780:	add	r3, r3, #496	; 0x1f0
    6784:	ldr	r3, [r3]
    6788:	ldr	r1, [fp, #-24]	; 0xffffffe8
    678c:	mov	r0, r3
    6790:	bl	0 <coda_type_record_add_field>
    6794:	movw	r0, #0
    6798:	movt	r0, #0
    679c:	bl	0 <coda_type_record_field_new>
    67a0:	str	r0, [fp, #-24]	; 0xffffffe8
    67a4:	mrc	15, 0, r3, cr13, cr0, {3}
    67a8:	ldr	r2, [pc, #-764]	; 64b4 <rinex_init+0x60a8>
    67ac:	ldr	r3, [r3, r2]
    67b0:	add	r3, r3, #464	; 0x1d0
    67b4:	ldr	r3, [r3]
    67b8:	mov	r1, r3
    67bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    67c0:	bl	0 <coda_type_record_field_set_type>
    67c4:	mrc	15, 0, r3, cr13, cr0, {3}
    67c8:	ldr	r2, [pc, #-796]	; 64b4 <rinex_init+0x60a8>
    67cc:	ldr	r3, [r3, r2]
    67d0:	add	r3, r3, #496	; 0x1f0
    67d4:	ldr	r3, [r3]
    67d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    67dc:	mov	r0, r3
    67e0:	bl	0 <coda_type_record_add_field>
    67e4:	movw	r0, #0
    67e8:	movt	r0, #0
    67ec:	bl	0 <coda_type_record_field_new>
    67f0:	str	r0, [fp, #-24]	; 0xffffffe8
    67f4:	mrc	15, 0, r3, cr13, cr0, {3}
    67f8:	ldr	r2, [pc, #-844]	; 64b4 <rinex_init+0x60a8>
    67fc:	ldr	r3, [r3, r2]
    6800:	add	r3, r3, #476	; 0x1dc
    6804:	ldr	r3, [r3]
    6808:	mov	r1, r3
    680c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6810:	bl	0 <coda_type_record_field_set_type>
    6814:	mrc	15, 0, r3, cr13, cr0, {3}
    6818:	ldr	r2, [pc, #-876]	; 64b4 <rinex_init+0x60a8>
    681c:	ldr	r3, [r3, r2]
    6820:	add	r3, r3, #496	; 0x1f0
    6824:	ldr	r3, [r3]
    6828:	ldr	r1, [fp, #-24]	; 0xffffffe8
    682c:	mov	r0, r3
    6830:	bl	0 <coda_type_record_add_field>
    6834:	mrc	15, 0, r3, cr13, cr0, {3}
    6838:	ldr	r2, [pc, #-908]	; 64b4 <rinex_init+0x60a8>
    683c:	ldr	r3, [r3, r2]
    6840:	add	r4, r3, #500	; 0x1f4
    6844:	mov	r0, #8
    6848:	bl	0 <coda_type_record_new>
    684c:	mov	r3, r0
    6850:	str	r3, [r4]
    6854:	movw	r0, #0
    6858:	movt	r0, #0
    685c:	bl	0 <coda_type_record_field_new>
    6860:	str	r0, [fp, #-24]	; 0xffffffe8
    6864:	mrc	15, 0, r3, cr13, cr0, {3}
    6868:	ldr	r2, [pc, #-956]	; 64b4 <rinex_init+0x60a8>
    686c:	ldr	r3, [r3, r2]
    6870:	add	r3, r3, #192	; 0xc0
    6874:	ldr	r3, [r3]
    6878:	mov	r1, r3
    687c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6880:	bl	0 <coda_type_record_field_set_type>
    6884:	mrc	15, 0, r3, cr13, cr0, {3}
    6888:	ldr	r2, [pc, #-988]	; 64b4 <rinex_init+0x60a8>
    688c:	ldr	r3, [r3, r2]
    6890:	add	r3, r3, #500	; 0x1f4
    6894:	ldr	r3, [r3]
    6898:	ldr	r1, [fp, #-24]	; 0xffffffe8
    689c:	mov	r0, r3
    68a0:	bl	0 <coda_type_record_add_field>
    68a4:	movw	r0, #0
    68a8:	movt	r0, #0
    68ac:	bl	0 <coda_type_record_field_new>
    68b0:	str	r0, [fp, #-24]	; 0xffffffe8
    68b4:	mrc	15, 0, r3, cr13, cr0, {3}
    68b8:	ldr	r2, [pc, #-1036]	; 64b4 <rinex_init+0x60a8>
    68bc:	ldr	r3, [r3, r2]
    68c0:	add	r3, r3, #272	; 0x110
    68c4:	ldr	r3, [r3]
    68c8:	mov	r1, r3
    68cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    68d0:	bl	0 <coda_type_record_field_set_type>
    68d4:	mrc	15, 0, r3, cr13, cr0, {3}
    68d8:	ldr	r2, [pc, #-1068]	; 64b4 <rinex_init+0x60a8>
    68dc:	ldr	r3, [r3, r2]
    68e0:	add	r3, r3, #500	; 0x1f4
    68e4:	ldr	r3, [r3]
    68e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    68ec:	mov	r0, r3
    68f0:	bl	0 <coda_type_record_add_field>
    68f4:	movw	r0, #0
    68f8:	movt	r0, #0
    68fc:	bl	0 <coda_type_record_field_new>
    6900:	str	r0, [fp, #-24]	; 0xffffffe8
    6904:	mrc	15, 0, r3, cr13, cr0, {3}
    6908:	ldr	r2, [pc, #-1116]	; 64b4 <rinex_init+0x60a8>
    690c:	ldr	r3, [r3, r2]
    6910:	add	r3, r3, #276	; 0x114
    6914:	ldr	r3, [r3]
    6918:	mov	r1, r3
    691c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6920:	bl	0 <coda_type_record_field_set_type>
    6924:	mrc	15, 0, r3, cr13, cr0, {3}
    6928:	ldr	r2, [pc, #-1148]	; 64b4 <rinex_init+0x60a8>
    692c:	ldr	r3, [r3, r2]
    6930:	add	r3, r3, #500	; 0x1f4
    6934:	ldr	r3, [r3]
    6938:	ldr	r1, [fp, #-24]	; 0xffffffe8
    693c:	mov	r0, r3
    6940:	bl	0 <coda_type_record_add_field>
    6944:	movw	r0, #0
    6948:	movt	r0, #0
    694c:	bl	0 <coda_type_record_field_new>
    6950:	str	r0, [fp, #-24]	; 0xffffffe8
    6954:	mrc	15, 0, r3, cr13, cr0, {3}
    6958:	ldr	r2, [pc, #-1196]	; 64b4 <rinex_init+0x60a8>
    695c:	ldr	r3, [r3, r2]
    6960:	add	r3, r3, #280	; 0x118
    6964:	ldr	r3, [r3]
    6968:	mov	r1, r3
    696c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6970:	bl	0 <coda_type_record_field_set_type>
    6974:	mrc	15, 0, r3, cr13, cr0, {3}
    6978:	ldr	r2, [pc, #-1228]	; 64b4 <rinex_init+0x60a8>
    697c:	ldr	r3, [r3, r2]
    6980:	add	r3, r3, #500	; 0x1f4
    6984:	ldr	r3, [r3]
    6988:	ldr	r1, [fp, #-24]	; 0xffffffe8
    698c:	mov	r0, r3
    6990:	bl	0 <coda_type_record_add_field>
    6994:	movw	r0, #0
    6998:	movt	r0, #0
    699c:	bl	0 <coda_type_record_field_new>
    69a0:	str	r0, [fp, #-24]	; 0xffffffe8
    69a4:	mrc	15, 0, r3, cr13, cr0, {3}
    69a8:	ldr	r2, [pc, #-1276]	; 64b4 <rinex_init+0x60a8>
    69ac:	ldr	r3, [r3, r2]
    69b0:	add	r3, r3, #284	; 0x11c
    69b4:	ldr	r3, [r3]
    69b8:	mov	r1, r3
    69bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    69c0:	bl	0 <coda_type_record_field_set_type>
    69c4:	mrc	15, 0, r3, cr13, cr0, {3}
    69c8:	ldr	r2, [pc, #-1308]	; 64b4 <rinex_init+0x60a8>
    69cc:	ldr	r3, [r3, r2]
    69d0:	add	r3, r3, #500	; 0x1f4
    69d4:	ldr	r3, [r3]
    69d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    69dc:	mov	r0, r3
    69e0:	bl	0 <coda_type_record_add_field>
    69e4:	movw	r0, #0
    69e8:	movt	r0, #0
    69ec:	bl	0 <coda_type_record_field_new>
    69f0:	str	r0, [fp, #-24]	; 0xffffffe8
    69f4:	mrc	15, 0, r3, cr13, cr0, {3}
    69f8:	ldr	r2, [pc, #-1356]	; 64b4 <rinex_init+0x60a8>
    69fc:	ldr	r3, [r3, r2]
    6a00:	add	r3, r3, #392	; 0x188
    6a04:	ldr	r3, [r3]
    6a08:	mov	r1, r3
    6a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a10:	bl	0 <coda_type_record_field_set_type>
    6a14:	mrc	15, 0, r3, cr13, cr0, {3}
    6a18:	ldr	r2, [pc, #-1388]	; 64b4 <rinex_init+0x60a8>
    6a1c:	ldr	r3, [r3, r2]
    6a20:	add	r3, r3, #500	; 0x1f4
    6a24:	ldr	r3, [r3]
    6a28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6a2c:	mov	r0, r3
    6a30:	bl	0 <coda_type_record_add_field>
    6a34:	movw	r0, #0
    6a38:	movt	r0, #0
    6a3c:	bl	0 <coda_type_record_field_new>
    6a40:	str	r0, [fp, #-24]	; 0xffffffe8
    6a44:	mrc	15, 0, r3, cr13, cr0, {3}
    6a48:	ldr	r2, [pc, #-1436]	; 64b4 <rinex_init+0x60a8>
    6a4c:	ldr	r3, [r3, r2]
    6a50:	add	r3, r3, #292	; 0x124
    6a54:	ldr	r3, [r3]
    6a58:	mov	r1, r3
    6a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6a60:	bl	0 <coda_type_record_field_set_type>
    6a64:	mrc	15, 0, r3, cr13, cr0, {3}
    6a68:	ldr	r2, [pc, #-1468]	; 64b4 <rinex_init+0x60a8>
    6a6c:	ldr	r3, [r3, r2]
    6a70:	add	r3, r3, #500	; 0x1f4
    6a74:	ldr	r3, [r3]
    6a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6a7c:	mov	r0, r3
    6a80:	bl	0 <coda_type_record_add_field>
    6a84:	movw	r0, #0
    6a88:	movt	r0, #0
    6a8c:	bl	0 <coda_type_record_field_new>
    6a90:	str	r0, [fp, #-24]	; 0xffffffe8
    6a94:	mrc	15, 0, r3, cr13, cr0, {3}
    6a98:	ldr	r2, [pc, #-1516]	; 64b4 <rinex_init+0x60a8>
    6a9c:	ldr	r3, [r3, r2]
    6aa0:	add	r3, r3, #296	; 0x128
    6aa4:	ldr	r3, [r3]
    6aa8:	mov	r1, r3
    6aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ab0:	bl	0 <coda_type_record_field_set_type>
    6ab4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ab8:	ldr	r2, [pc, #-1548]	; 64b4 <rinex_init+0x60a8>
    6abc:	ldr	r3, [r3, r2]
    6ac0:	add	r3, r3, #500	; 0x1f4
    6ac4:	ldr	r3, [r3]
    6ac8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6acc:	mov	r0, r3
    6ad0:	bl	0 <coda_type_record_add_field>
    6ad4:	movw	r0, #0
    6ad8:	movt	r0, #0
    6adc:	bl	0 <coda_type_record_field_new>
    6ae0:	str	r0, [fp, #-24]	; 0xffffffe8
    6ae4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ae8:	ldr	r2, [pc, #-1596]	; 64b4 <rinex_init+0x60a8>
    6aec:	ldr	r3, [r3, r2]
    6af0:	add	r3, r3, #300	; 0x12c
    6af4:	ldr	r3, [r3]
    6af8:	mov	r1, r3
    6afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6b00:	bl	0 <coda_type_record_field_set_type>
    6b04:	mrc	15, 0, r3, cr13, cr0, {3}
    6b08:	ldr	r2, [pc, #-1628]	; 64b4 <rinex_init+0x60a8>
    6b0c:	ldr	r3, [r3, r2]
    6b10:	add	r3, r3, #500	; 0x1f4
    6b14:	ldr	r3, [r3]
    6b18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6b1c:	mov	r0, r3
    6b20:	bl	0 <coda_type_record_add_field>
    6b24:	movw	r0, #0
    6b28:	movt	r0, #0
    6b2c:	bl	0 <coda_type_record_field_new>
    6b30:	str	r0, [fp, #-24]	; 0xffffffe8
    6b34:	mrc	15, 0, r3, cr13, cr0, {3}
    6b38:	ldr	r2, [pc, #-1676]	; 64b4 <rinex_init+0x60a8>
    6b3c:	ldr	r3, [r3, r2]
    6b40:	add	r3, r3, #304	; 0x130
    6b44:	ldr	r3, [r3]
    6b48:	mov	r1, r3
    6b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6b50:	bl	0 <coda_type_record_field_set_type>
    6b54:	mrc	15, 0, r3, cr13, cr0, {3}
    6b58:	ldr	r2, [pc, #-1708]	; 64b4 <rinex_init+0x60a8>
    6b5c:	ldr	r3, [r3, r2]
    6b60:	add	r3, r3, #500	; 0x1f4
    6b64:	ldr	r3, [r3]
    6b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6b6c:	mov	r0, r3
    6b70:	bl	0 <coda_type_record_add_field>
    6b74:	movw	r0, #0
    6b78:	movt	r0, #0
    6b7c:	bl	0 <coda_type_record_field_new>
    6b80:	str	r0, [fp, #-24]	; 0xffffffe8
    6b84:	mrc	15, 0, r3, cr13, cr0, {3}
    6b88:	ldr	r2, [pc, #-1756]	; 64b4 <rinex_init+0x60a8>
    6b8c:	ldr	r3, [r3, r2]
    6b90:	add	r3, r3, #308	; 0x134
    6b94:	ldr	r3, [r3]
    6b98:	mov	r1, r3
    6b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ba0:	bl	0 <coda_type_record_field_set_type>
    6ba4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ba8:	ldr	r2, [pc, #-1788]	; 64b4 <rinex_init+0x60a8>
    6bac:	ldr	r3, [r3, r2]
    6bb0:	add	r3, r3, #500	; 0x1f4
    6bb4:	ldr	r3, [r3]
    6bb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6bbc:	mov	r0, r3
    6bc0:	bl	0 <coda_type_record_add_field>
    6bc4:	movw	r0, #0
    6bc8:	movt	r0, #0
    6bcc:	bl	0 <coda_type_record_field_new>
    6bd0:	str	r0, [fp, #-24]	; 0xffffffe8
    6bd4:	mrc	15, 0, r3, cr13, cr0, {3}
    6bd8:	ldr	r2, [pc, #-1836]	; 64b4 <rinex_init+0x60a8>
    6bdc:	ldr	r3, [r3, r2]
    6be0:	add	r3, r3, #312	; 0x138
    6be4:	ldr	r3, [r3]
    6be8:	mov	r1, r3
    6bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6bf0:	bl	0 <coda_type_record_field_set_type>
    6bf4:	mrc	15, 0, r3, cr13, cr0, {3}
    6bf8:	ldr	r2, [pc, #-1868]	; 64b4 <rinex_init+0x60a8>
    6bfc:	ldr	r3, [r3, r2]
    6c00:	add	r3, r3, #500	; 0x1f4
    6c04:	ldr	r3, [r3]
    6c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6c0c:	mov	r0, r3
    6c10:	bl	0 <coda_type_record_add_field>
    6c14:	movw	r0, #0
    6c18:	movt	r0, #0
    6c1c:	bl	0 <coda_type_record_field_new>
    6c20:	str	r0, [fp, #-24]	; 0xffffffe8
    6c24:	mrc	15, 0, r3, cr13, cr0, {3}
    6c28:	ldr	r2, [pc, #-1916]	; 64b4 <rinex_init+0x60a8>
    6c2c:	ldr	r3, [r3, r2]
    6c30:	add	r3, r3, #316	; 0x13c
    6c34:	ldr	r3, [r3]
    6c38:	mov	r1, r3
    6c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6c40:	bl	0 <coda_type_record_field_set_type>
    6c44:	mrc	15, 0, r3, cr13, cr0, {3}
    6c48:	ldr	r2, [pc, #-1948]	; 64b4 <rinex_init+0x60a8>
    6c4c:	ldr	r3, [r3, r2]
    6c50:	add	r3, r3, #500	; 0x1f4
    6c54:	ldr	r3, [r3]
    6c58:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6c5c:	mov	r0, r3
    6c60:	bl	0 <coda_type_record_add_field>
    6c64:	movw	r0, #0
    6c68:	movt	r0, #0
    6c6c:	bl	0 <coda_type_record_field_new>
    6c70:	str	r0, [fp, #-24]	; 0xffffffe8
    6c74:	mrc	15, 0, r3, cr13, cr0, {3}
    6c78:	ldr	r2, [pc, #-1996]	; 64b4 <rinex_init+0x60a8>
    6c7c:	ldr	r3, [r3, r2]
    6c80:	add	r3, r3, #320	; 0x140
    6c84:	ldr	r3, [r3]
    6c88:	mov	r1, r3
    6c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6c90:	bl	0 <coda_type_record_field_set_type>
    6c94:	mrc	15, 0, r3, cr13, cr0, {3}
    6c98:	ldr	r2, [pc, #-2028]	; 64b4 <rinex_init+0x60a8>
    6c9c:	ldr	r3, [r3, r2]
    6ca0:	add	r3, r3, #500	; 0x1f4
    6ca4:	ldr	r3, [r3]
    6ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6cac:	mov	r0, r3
    6cb0:	bl	0 <coda_type_record_add_field>
    6cb4:	movw	r0, #0
    6cb8:	movt	r0, #0
    6cbc:	bl	0 <coda_type_record_field_new>
    6cc0:	str	r0, [fp, #-24]	; 0xffffffe8
    6cc4:	mrc	15, 0, r3, cr13, cr0, {3}
    6cc8:	ldr	r2, [pc, #-2076]	; 64b4 <rinex_init+0x60a8>
    6ccc:	ldr	r3, [r3, r2]
    6cd0:	add	r3, r3, #324	; 0x144
    6cd4:	ldr	r3, [r3]
    6cd8:	mov	r1, r3
    6cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ce0:	bl	0 <coda_type_record_field_set_type>
    6ce4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ce8:	ldr	r2, [pc, #-2108]	; 64b4 <rinex_init+0x60a8>
    6cec:	ldr	r3, [r3, r2]
    6cf0:	add	r3, r3, #500	; 0x1f4
    6cf4:	ldr	r3, [r3]
    6cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6cfc:	mov	r0, r3
    6d00:	bl	0 <coda_type_record_add_field>
    6d04:	movw	r0, #0
    6d08:	movt	r0, #0
    6d0c:	bl	0 <coda_type_record_field_new>
    6d10:	str	r0, [fp, #-24]	; 0xffffffe8
    6d14:	mrc	15, 0, r3, cr13, cr0, {3}
    6d18:	ldr	r2, [pc, #-2156]	; 64b4 <rinex_init+0x60a8>
    6d1c:	ldr	r3, [r3, r2]
    6d20:	add	r3, r3, #328	; 0x148
    6d24:	ldr	r3, [r3]
    6d28:	mov	r1, r3
    6d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6d30:	bl	0 <coda_type_record_field_set_type>
    6d34:	mrc	15, 0, r3, cr13, cr0, {3}
    6d38:	ldr	r2, [pc, #-2188]	; 64b4 <rinex_init+0x60a8>
    6d3c:	ldr	r3, [r3, r2]
    6d40:	add	r3, r3, #500	; 0x1f4
    6d44:	ldr	r3, [r3]
    6d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6d4c:	mov	r0, r3
    6d50:	bl	0 <coda_type_record_add_field>
    6d54:	movw	r0, #0
    6d58:	movt	r0, #0
    6d5c:	bl	0 <coda_type_record_field_new>
    6d60:	str	r0, [fp, #-24]	; 0xffffffe8
    6d64:	mrc	15, 0, r3, cr13, cr0, {3}
    6d68:	ldr	r2, [pc, #-2236]	; 64b4 <rinex_init+0x60a8>
    6d6c:	ldr	r3, [r3, r2]
    6d70:	add	r3, r3, #332	; 0x14c
    6d74:	ldr	r3, [r3]
    6d78:	mov	r1, r3
    6d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6d80:	bl	0 <coda_type_record_field_set_type>
    6d84:	mrc	15, 0, r3, cr13, cr0, {3}
    6d88:	ldr	r2, [pc, #-2268]	; 64b4 <rinex_init+0x60a8>
    6d8c:	ldr	r3, [r3, r2]
    6d90:	add	r3, r3, #500	; 0x1f4
    6d94:	ldr	r3, [r3]
    6d98:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6d9c:	mov	r0, r3
    6da0:	bl	0 <coda_type_record_add_field>
    6da4:	movw	r0, #0
    6da8:	movt	r0, #0
    6dac:	bl	0 <coda_type_record_field_new>
    6db0:	str	r0, [fp, #-24]	; 0xffffffe8
    6db4:	mrc	15, 0, r3, cr13, cr0, {3}
    6db8:	ldr	r2, [pc, #-2316]	; 64b4 <rinex_init+0x60a8>
    6dbc:	ldr	r3, [r3, r2]
    6dc0:	add	r3, r3, #336	; 0x150
    6dc4:	ldr	r3, [r3]
    6dc8:	mov	r1, r3
    6dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6dd0:	bl	0 <coda_type_record_field_set_type>
    6dd4:	mrc	15, 0, r3, cr13, cr0, {3}
    6dd8:	ldr	r2, [pc, #-2348]	; 64b4 <rinex_init+0x60a8>
    6ddc:	ldr	r3, [r3, r2]
    6de0:	add	r3, r3, #500	; 0x1f4
    6de4:	ldr	r3, [r3]
    6de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6dec:	mov	r0, r3
    6df0:	bl	0 <coda_type_record_add_field>
    6df4:	movw	r0, #0
    6df8:	movt	r0, #0
    6dfc:	bl	0 <coda_type_record_field_new>
    6e00:	str	r0, [fp, #-24]	; 0xffffffe8
    6e04:	mrc	15, 0, r3, cr13, cr0, {3}
    6e08:	ldr	r2, [pc, #-2396]	; 64b4 <rinex_init+0x60a8>
    6e0c:	ldr	r3, [r3, r2]
    6e10:	add	r3, r3, #340	; 0x154
    6e14:	ldr	r3, [r3]
    6e18:	mov	r1, r3
    6e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6e20:	bl	0 <coda_type_record_field_set_type>
    6e24:	mrc	15, 0, r3, cr13, cr0, {3}
    6e28:	ldr	r2, [pc, #-2428]	; 64b4 <rinex_init+0x60a8>
    6e2c:	ldr	r3, [r3, r2]
    6e30:	add	r3, r3, #500	; 0x1f4
    6e34:	ldr	r3, [r3]
    6e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6e3c:	mov	r0, r3
    6e40:	bl	0 <coda_type_record_add_field>
    6e44:	movw	r0, #0
    6e48:	movt	r0, #0
    6e4c:	bl	0 <coda_type_record_field_new>
    6e50:	str	r0, [fp, #-24]	; 0xffffffe8
    6e54:	mrc	15, 0, r3, cr13, cr0, {3}
    6e58:	ldr	r2, [pc, #-2476]	; 64b4 <rinex_init+0x60a8>
    6e5c:	ldr	r3, [r3, r2]
    6e60:	add	r3, r3, #344	; 0x158
    6e64:	ldr	r3, [r3]
    6e68:	mov	r1, r3
    6e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6e70:	bl	0 <coda_type_record_field_set_type>
    6e74:	mrc	15, 0, r3, cr13, cr0, {3}
    6e78:	ldr	r2, [pc, #-2508]	; 64b4 <rinex_init+0x60a8>
    6e7c:	ldr	r3, [r3, r2]
    6e80:	add	r3, r3, #500	; 0x1f4
    6e84:	ldr	r3, [r3]
    6e88:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6e8c:	mov	r0, r3
    6e90:	bl	0 <coda_type_record_add_field>
    6e94:	movw	r0, #0
    6e98:	movt	r0, #0
    6e9c:	bl	0 <coda_type_record_field_new>
    6ea0:	str	r0, [fp, #-24]	; 0xffffffe8
    6ea4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ea8:	ldr	r2, [pc, #-2556]	; 64b4 <rinex_init+0x60a8>
    6eac:	ldr	r3, [r3, r2]
    6eb0:	add	r3, r3, #348	; 0x15c
    6eb4:	ldr	r3, [r3]
    6eb8:	mov	r1, r3
    6ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6ec0:	bl	0 <coda_type_record_field_set_type>
    6ec4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ec8:	ldr	r2, [pc, #-2588]	; 64b4 <rinex_init+0x60a8>
    6ecc:	ldr	r3, [r3, r2]
    6ed0:	add	r3, r3, #500	; 0x1f4
    6ed4:	ldr	r3, [r3]
    6ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6edc:	mov	r0, r3
    6ee0:	bl	0 <coda_type_record_add_field>
    6ee4:	movw	r0, #0
    6ee8:	movt	r0, #0
    6eec:	bl	0 <coda_type_record_field_new>
    6ef0:	str	r0, [fp, #-24]	; 0xffffffe8
    6ef4:	mrc	15, 0, r3, cr13, cr0, {3}
    6ef8:	ldr	r2, [pc, #-2636]	; 64b4 <rinex_init+0x60a8>
    6efc:	ldr	r3, [r3, r2]
    6f00:	add	r3, r3, #352	; 0x160
    6f04:	ldr	r3, [r3]
    6f08:	mov	r1, r3
    6f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f10:	bl	0 <coda_type_record_field_set_type>
    6f14:	mrc	15, 0, r3, cr13, cr0, {3}
    6f18:	ldr	r2, [pc, #-2668]	; 64b4 <rinex_init+0x60a8>
    6f1c:	ldr	r3, [r3, r2]
    6f20:	add	r3, r3, #500	; 0x1f4
    6f24:	ldr	r3, [r3]
    6f28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6f2c:	mov	r0, r3
    6f30:	bl	0 <coda_type_record_add_field>
    6f34:	movw	r0, #0
    6f38:	movt	r0, #0
    6f3c:	bl	0 <coda_type_record_field_new>
    6f40:	str	r0, [fp, #-24]	; 0xffffffe8
    6f44:	mrc	15, 0, r3, cr13, cr0, {3}
    6f48:	ldr	r2, [pc, #-2716]	; 64b4 <rinex_init+0x60a8>
    6f4c:	ldr	r3, [r3, r2]
    6f50:	add	r3, r3, #396	; 0x18c
    6f54:	ldr	r3, [r3]
    6f58:	mov	r1, r3
    6f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6f60:	bl	0 <coda_type_record_field_set_type>
    6f64:	mrc	15, 0, r3, cr13, cr0, {3}
    6f68:	ldr	r2, [pc, #-2748]	; 64b4 <rinex_init+0x60a8>
    6f6c:	ldr	r3, [r3, r2]
    6f70:	add	r3, r3, #500	; 0x1f4
    6f74:	ldr	r3, [r3]
    6f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6f7c:	mov	r0, r3
    6f80:	bl	0 <coda_type_record_add_field>
    6f84:	movw	r0, #0
    6f88:	movt	r0, #0
    6f8c:	bl	0 <coda_type_record_field_new>
    6f90:	str	r0, [fp, #-24]	; 0xffffffe8
    6f94:	mrc	15, 0, r3, cr13, cr0, {3}
    6f98:	ldr	r2, [pc, #-2796]	; 64b4 <rinex_init+0x60a8>
    6f9c:	ldr	r3, [r3, r2]
    6fa0:	add	r3, r3, #400	; 0x190
    6fa4:	ldr	r3, [r3]
    6fa8:	mov	r1, r3
    6fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6fb0:	bl	0 <coda_type_record_field_set_type>
    6fb4:	mrc	15, 0, r3, cr13, cr0, {3}
    6fb8:	ldr	r2, [pc, #-2828]	; 64b4 <rinex_init+0x60a8>
    6fbc:	ldr	r3, [r3, r2]
    6fc0:	add	r3, r3, #500	; 0x1f4
    6fc4:	ldr	r3, [r3]
    6fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6fcc:	mov	r0, r3
    6fd0:	bl	0 <coda_type_record_add_field>
    6fd4:	movw	r0, #0
    6fd8:	movt	r0, #0
    6fdc:	bl	0 <coda_type_record_field_new>
    6fe0:	str	r0, [fp, #-24]	; 0xffffffe8
    6fe4:	mrc	15, 0, r3, cr13, cr0, {3}
    6fe8:	ldr	r2, [pc, #-2876]	; 64b4 <rinex_init+0x60a8>
    6fec:	ldr	r3, [r3, r2]
    6ff0:	add	r3, r3, #404	; 0x194
    6ff4:	ldr	r3, [r3]
    6ff8:	mov	r1, r3
    6ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7000:	bl	0 <coda_type_record_field_set_type>
    7004:	mrc	15, 0, r3, cr13, cr0, {3}
    7008:	ldr	r2, [pc, #-2908]	; 64b4 <rinex_init+0x60a8>
    700c:	ldr	r3, [r3, r2]
    7010:	add	r3, r3, #500	; 0x1f4
    7014:	ldr	r3, [r3]
    7018:	ldr	r1, [fp, #-24]	; 0xffffffe8
    701c:	mov	r0, r3
    7020:	bl	0 <coda_type_record_add_field>
    7024:	movw	r0, #0
    7028:	movt	r0, #0
    702c:	bl	0 <coda_type_record_field_new>
    7030:	str	r0, [fp, #-24]	; 0xffffffe8
    7034:	mrc	15, 0, r3, cr13, cr0, {3}
    7038:	ldr	r2, [pc, #-2956]	; 64b4 <rinex_init+0x60a8>
    703c:	ldr	r3, [r3, r2]
    7040:	add	r3, r3, #408	; 0x198
    7044:	ldr	r3, [r3]
    7048:	mov	r1, r3
    704c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7050:	bl	0 <coda_type_record_field_set_type>
    7054:	mrc	15, 0, r3, cr13, cr0, {3}
    7058:	ldr	r2, [pc, #-2988]	; 64b4 <rinex_init+0x60a8>
    705c:	ldr	r3, [r3, r2]
    7060:	add	r3, r3, #500	; 0x1f4
    7064:	ldr	r3, [r3]
    7068:	ldr	r1, [fp, #-24]	; 0xffffffe8
    706c:	mov	r0, r3
    7070:	bl	0 <coda_type_record_add_field>
    7074:	movw	r0, #0
    7078:	movt	r0, #0
    707c:	bl	0 <coda_type_record_field_new>
    7080:	str	r0, [fp, #-24]	; 0xffffffe8
    7084:	mrc	15, 0, r3, cr13, cr0, {3}
    7088:	ldr	r2, [pc, #-3036]	; 64b4 <rinex_init+0x60a8>
    708c:	ldr	r3, [r3, r2]
    7090:	add	r3, r3, #412	; 0x19c
    7094:	ldr	r3, [r3]
    7098:	mov	r1, r3
    709c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    70a0:	bl	0 <coda_type_record_field_set_type>
    70a4:	mrc	15, 0, r3, cr13, cr0, {3}
    70a8:	ldr	r2, [pc, #-3068]	; 64b4 <rinex_init+0x60a8>
    70ac:	ldr	r3, [r3, r2]
    70b0:	add	r3, r3, #500	; 0x1f4
    70b4:	ldr	r3, [r3]
    70b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    70bc:	mov	r0, r3
    70c0:	bl	0 <coda_type_record_add_field>
    70c4:	movw	r0, #0
    70c8:	movt	r0, #0
    70cc:	bl	0 <coda_type_record_field_new>
    70d0:	str	r0, [fp, #-24]	; 0xffffffe8
    70d4:	mrc	15, 0, r3, cr13, cr0, {3}
    70d8:	ldr	r2, [pc, #-3116]	; 64b4 <rinex_init+0x60a8>
    70dc:	ldr	r3, [r3, r2]
    70e0:	add	r3, r3, #416	; 0x1a0
    70e4:	ldr	r3, [r3]
    70e8:	mov	r1, r3
    70ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    70f0:	bl	0 <coda_type_record_field_set_type>
    70f4:	mrc	15, 0, r3, cr13, cr0, {3}
    70f8:	ldr	r2, [pc, #-3148]	; 64b4 <rinex_init+0x60a8>
    70fc:	ldr	r3, [r3, r2]
    7100:	add	r3, r3, #500	; 0x1f4
    7104:	ldr	r3, [r3]
    7108:	ldr	r1, [fp, #-24]	; 0xffffffe8
    710c:	mov	r0, r3
    7110:	bl	0 <coda_type_record_add_field>
    7114:	movw	r0, #0
    7118:	movt	r0, #0
    711c:	bl	0 <coda_type_record_field_new>
    7120:	str	r0, [fp, #-24]	; 0xffffffe8
    7124:	mrc	15, 0, r3, cr13, cr0, {3}
    7128:	ldr	r2, [pc, #-3196]	; 64b4 <rinex_init+0x60a8>
    712c:	ldr	r3, [r3, r2]
    7130:	add	r3, r3, #420	; 0x1a4
    7134:	ldr	r3, [r3]
    7138:	mov	r1, r3
    713c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7140:	bl	0 <coda_type_record_field_set_type>
    7144:	mrc	15, 0, r3, cr13, cr0, {3}
    7148:	ldr	r2, [pc, #-3228]	; 64b4 <rinex_init+0x60a8>
    714c:	ldr	r3, [r3, r2]
    7150:	add	r3, r3, #500	; 0x1f4
    7154:	ldr	r3, [r3]
    7158:	ldr	r1, [fp, #-24]	; 0xffffffe8
    715c:	mov	r0, r3
    7160:	bl	0 <coda_type_record_add_field>
    7164:	mrc	15, 0, r3, cr13, cr0, {3}
    7168:	ldr	r2, [pc, #-3260]	; 64b4 <rinex_init+0x60a8>
    716c:	ldr	r3, [r3, r2]
    7170:	add	r4, r3, #504	; 0x1f8
    7174:	mov	r0, #8
    7178:	bl	0 <coda_type_record_new>
    717c:	mov	r3, r0
    7180:	str	r3, [r4]
    7184:	movw	r0, #0
    7188:	movt	r0, #0
    718c:	bl	0 <coda_type_record_field_new>
    7190:	str	r0, [fp, #-24]	; 0xffffffe8
    7194:	mrc	15, 0, r3, cr13, cr0, {3}
    7198:	ldr	r2, [pc, #-3308]	; 64b4 <rinex_init+0x60a8>
    719c:	ldr	r3, [r3, r2]
    71a0:	add	r3, r3, #192	; 0xc0
    71a4:	ldr	r3, [r3]
    71a8:	mov	r1, r3
    71ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    71b0:	bl	0 <coda_type_record_field_set_type>
    71b4:	mrc	15, 0, r3, cr13, cr0, {3}
    71b8:	ldr	r2, [pc, #-3340]	; 64b4 <rinex_init+0x60a8>
    71bc:	ldr	r3, [r3, r2]
    71c0:	add	r3, r3, #504	; 0x1f8
    71c4:	ldr	r3, [r3]
    71c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    71cc:	mov	r0, r3
    71d0:	bl	0 <coda_type_record_add_field>
    71d4:	movw	r0, #0
    71d8:	movt	r0, #0
    71dc:	bl	0 <coda_type_record_field_new>
    71e0:	str	r0, [fp, #-24]	; 0xffffffe8
    71e4:	mrc	15, 0, r3, cr13, cr0, {3}
    71e8:	ldr	r2, [pc, #-3388]	; 64b4 <rinex_init+0x60a8>
    71ec:	ldr	r3, [r3, r2]
    71f0:	add	r3, r3, #272	; 0x110
    71f4:	ldr	r3, [r3]
    71f8:	mov	r1, r3
    71fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7200:	bl	0 <coda_type_record_field_set_type>
    7204:	mrc	15, 0, r3, cr13, cr0, {3}
    7208:	ldr	r2, [pc, #-3420]	; 64b4 <rinex_init+0x60a8>
    720c:	ldr	r3, [r3, r2]
    7210:	add	r3, r3, #504	; 0x1f8
    7214:	ldr	r3, [r3]
    7218:	ldr	r1, [fp, #-24]	; 0xffffffe8
    721c:	mov	r0, r3
    7220:	bl	0 <coda_type_record_add_field>
    7224:	movw	r0, #0
    7228:	movt	r0, #0
    722c:	bl	0 <coda_type_record_field_new>
    7230:	str	r0, [fp, #-24]	; 0xffffffe8
    7234:	mrc	15, 0, r3, cr13, cr0, {3}
    7238:	ldr	r2, [pc, #-3468]	; 64b4 <rinex_init+0x60a8>
    723c:	ldr	r3, [r3, r2]
    7240:	add	r3, r3, #276	; 0x114
    7244:	ldr	r3, [r3]
    7248:	mov	r1, r3
    724c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7250:	bl	0 <coda_type_record_field_set_type>
    7254:	mrc	15, 0, r3, cr13, cr0, {3}
    7258:	ldr	r2, [pc, #-3500]	; 64b4 <rinex_init+0x60a8>
    725c:	ldr	r3, [r3, r2]
    7260:	add	r3, r3, #504	; 0x1f8
    7264:	ldr	r3, [r3]
    7268:	ldr	r1, [fp, #-24]	; 0xffffffe8
    726c:	mov	r0, r3
    7270:	bl	0 <coda_type_record_add_field>
    7274:	movw	r0, #0
    7278:	movt	r0, #0
    727c:	bl	0 <coda_type_record_field_new>
    7280:	str	r0, [fp, #-24]	; 0xffffffe8
    7284:	mrc	15, 0, r3, cr13, cr0, {3}
    7288:	ldr	r2, [pc, #-3548]	; 64b4 <rinex_init+0x60a8>
    728c:	ldr	r3, [r3, r2]
    7290:	add	r3, r3, #424	; 0x1a8
    7294:	ldr	r3, [r3]
    7298:	mov	r1, r3
    729c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    72a0:	bl	0 <coda_type_record_field_set_type>
    72a4:	mrc	15, 0, r3, cr13, cr0, {3}
    72a8:	ldr	r2, [pc, #-3580]	; 64b4 <rinex_init+0x60a8>
    72ac:	ldr	r3, [r3, r2]
    72b0:	add	r3, r3, #504	; 0x1f8
    72b4:	ldr	r3, [r3]
    72b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    72bc:	mov	r0, r3
    72c0:	bl	0 <coda_type_record_add_field>
    72c4:	movw	r0, #0
    72c8:	movt	r0, #0
    72cc:	bl	0 <coda_type_record_field_new>
    72d0:	str	r0, [fp, #-24]	; 0xffffffe8
    72d4:	mrc	15, 0, r3, cr13, cr0, {3}
    72d8:	ldr	r2, [pc, #-3628]	; 64b4 <rinex_init+0x60a8>
    72dc:	ldr	r3, [r3, r2]
    72e0:	add	r3, r3, #480	; 0x1e0
    72e4:	ldr	r3, [r3]
    72e8:	mov	r1, r3
    72ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    72f0:	bl	0 <coda_type_record_field_set_type>
    72f4:	mrc	15, 0, r3, cr13, cr0, {3}
    72f8:	ldr	r2, [pc, #-3660]	; 64b4 <rinex_init+0x60a8>
    72fc:	ldr	r3, [r3, r2]
    7300:	add	r3, r3, #504	; 0x1f8
    7304:	ldr	r3, [r3]
    7308:	ldr	r1, [fp, #-24]	; 0xffffffe8
    730c:	mov	r0, r3
    7310:	bl	0 <coda_type_record_add_field>
    7314:	movw	r0, #0
    7318:	movt	r0, #0
    731c:	bl	0 <coda_type_record_field_new>
    7320:	str	r0, [fp, #-24]	; 0xffffffe8
    7324:	mrc	15, 0, r3, cr13, cr0, {3}
    7328:	ldr	r2, [pc, #-3708]	; 64b4 <rinex_init+0x60a8>
    732c:	ldr	r3, [r3, r2]
    7330:	add	r3, r3, #432	; 0x1b0
    7334:	ldr	r3, [r3]
    7338:	mov	r1, r3
    733c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7340:	bl	0 <coda_type_record_field_set_type>
    7344:	mrc	15, 0, r3, cr13, cr0, {3}
    7348:	ldr	r2, [pc, #-3740]	; 64b4 <rinex_init+0x60a8>
    734c:	ldr	r3, [r3, r2]
    7350:	add	r3, r3, #504	; 0x1f8
    7354:	ldr	r3, [r3]
    7358:	ldr	r1, [fp, #-24]	; 0xffffffe8
    735c:	mov	r0, r3
    7360:	bl	0 <coda_type_record_add_field>
    7364:	movw	r0, #0
    7368:	movt	r0, #0
    736c:	bl	0 <coda_type_record_field_new>
    7370:	str	r0, [fp, #-24]	; 0xffffffe8
    7374:	mrc	15, 0, r3, cr13, cr0, {3}
    7378:	ldr	r2, [pc, #-3788]	; 64b4 <rinex_init+0x60a8>
    737c:	ldr	r3, [r3, r2]
    7380:	add	r3, r3, #444	; 0x1bc
    7384:	ldr	r3, [r3]
    7388:	mov	r1, r3
    738c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7390:	bl	0 <coda_type_record_field_set_type>
    7394:	mrc	15, 0, r3, cr13, cr0, {3}
    7398:	ldr	r2, [pc, #-3820]	; 64b4 <rinex_init+0x60a8>
    739c:	ldr	r3, [r3, r2]
    73a0:	add	r3, r3, #504	; 0x1f8
    73a4:	ldr	r3, [r3]
    73a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    73ac:	mov	r0, r3
    73b0:	bl	0 <coda_type_record_add_field>
    73b4:	movw	r0, #0
    73b8:	movt	r0, #0
    73bc:	bl	0 <coda_type_record_field_new>
    73c0:	str	r0, [fp, #-24]	; 0xffffffe8
    73c4:	mrc	15, 0, r3, cr13, cr0, {3}
    73c8:	ldr	r2, [pc, #-3868]	; 64b4 <rinex_init+0x60a8>
    73cc:	ldr	r3, [r3, r2]
    73d0:	add	r3, r3, #456	; 0x1c8
    73d4:	ldr	r3, [r3]
    73d8:	mov	r1, r3
    73dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    73e0:	bl	0 <coda_type_record_field_set_type>
    73e4:	mrc	15, 0, r3, cr13, cr0, {3}
    73e8:	ldr	r2, [pc, #-3900]	; 64b4 <rinex_init+0x60a8>
    73ec:	ldr	r3, [r3, r2]
    73f0:	add	r3, r3, #504	; 0x1f8
    73f4:	ldr	r3, [r3]
    73f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    73fc:	mov	r0, r3
    7400:	bl	0 <coda_type_record_add_field>
    7404:	movw	r0, #0
    7408:	movt	r0, #0
    740c:	bl	0 <coda_type_record_field_new>
    7410:	str	r0, [fp, #-24]	; 0xffffffe8
    7414:	mrc	15, 0, r3, cr13, cr0, {3}
    7418:	ldr	r2, [pc, #-3948]	; 64b4 <rinex_init+0x60a8>
    741c:	ldr	r3, [r3, r2]
    7420:	add	r3, r3, #468	; 0x1d4
    7424:	ldr	r3, [r3]
    7428:	mov	r1, r3
    742c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7430:	bl	0 <coda_type_record_field_set_type>
    7434:	mrc	15, 0, r3, cr13, cr0, {3}
    7438:	ldr	r2, [pc, #-3980]	; 64b4 <rinex_init+0x60a8>
    743c:	ldr	r3, [r3, r2]
    7440:	add	r3, r3, #504	; 0x1f8
    7444:	ldr	r3, [r3]
    7448:	ldr	r1, [fp, #-24]	; 0xffffffe8
    744c:	mov	r0, r3
    7450:	bl	0 <coda_type_record_add_field>
    7454:	movw	r0, #0
    7458:	movt	r0, #0
    745c:	bl	0 <coda_type_record_field_new>
    7460:	str	r0, [fp, #-24]	; 0xffffffe8
    7464:	mrc	15, 0, r3, cr13, cr0, {3}
    7468:	ldr	r2, [pc, #-4028]	; 64b4 <rinex_init+0x60a8>
    746c:	ldr	r3, [r3, r2]
    7470:	add	r3, r3, #436	; 0x1b4
    7474:	ldr	r3, [r3]
    7478:	mov	r1, r3
    747c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7480:	bl	0 <coda_type_record_field_set_type>
    7484:	mrc	15, 0, r3, cr13, cr0, {3}
    7488:	ldr	r2, [pc, #-4060]	; 64b4 <rinex_init+0x60a8>
    748c:	ldr	r3, [r3, r2]
    7490:	add	r3, r3, #504	; 0x1f8
    7494:	ldr	r3, [r3]
    7498:	ldr	r1, [fp, #-24]	; 0xffffffe8
    749c:	mov	r0, r3
    74a0:	bl	0 <coda_type_record_add_field>
    74a4:	movw	r0, #0
    74a8:	movt	r0, #0
    74ac:	bl	0 <coda_type_record_field_new>
    74b0:	str	r0, [fp, #-24]	; 0xffffffe8
    74b4:	mrc	15, 0, r3, cr13, cr0, {3}
    74b8:	ldr	r2, [pc, #4088]	; 84b8 <rinex_init+0x80ac>
    74bc:	ldr	r3, [r3, r2]
    74c0:	add	r3, r3, #448	; 0x1c0
    74c4:	ldr	r3, [r3]
    74c8:	mov	r1, r3
    74cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    74d0:	bl	0 <coda_type_record_field_set_type>
    74d4:	mrc	15, 0, r3, cr13, cr0, {3}
    74d8:	ldr	r2, [pc, #4056]	; 84b8 <rinex_init+0x80ac>
    74dc:	ldr	r3, [r3, r2]
    74e0:	add	r3, r3, #504	; 0x1f8
    74e4:	ldr	r3, [r3]
    74e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    74ec:	mov	r0, r3
    74f0:	bl	0 <coda_type_record_add_field>
    74f4:	movw	r0, #0
    74f8:	movt	r0, #0
    74fc:	bl	0 <coda_type_record_field_new>
    7500:	str	r0, [fp, #-24]	; 0xffffffe8
    7504:	mrc	15, 0, r3, cr13, cr0, {3}
    7508:	ldr	r2, [pc, #4008]	; 84b8 <rinex_init+0x80ac>
    750c:	ldr	r3, [r3, r2]
    7510:	add	r3, r3, #460	; 0x1cc
    7514:	ldr	r3, [r3]
    7518:	mov	r1, r3
    751c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7520:	bl	0 <coda_type_record_field_set_type>
    7524:	mrc	15, 0, r3, cr13, cr0, {3}
    7528:	ldr	r2, [pc, #3976]	; 84b8 <rinex_init+0x80ac>
    752c:	ldr	r3, [r3, r2]
    7530:	add	r3, r3, #504	; 0x1f8
    7534:	ldr	r3, [r3]
    7538:	ldr	r1, [fp, #-24]	; 0xffffffe8
    753c:	mov	r0, r3
    7540:	bl	0 <coda_type_record_add_field>
    7544:	movw	r0, #0
    7548:	movt	r0, #0
    754c:	bl	0 <coda_type_record_field_new>
    7550:	str	r0, [fp, #-24]	; 0xffffffe8
    7554:	mrc	15, 0, r3, cr13, cr0, {3}
    7558:	ldr	r2, [pc, #3928]	; 84b8 <rinex_init+0x80ac>
    755c:	ldr	r3, [r3, r2]
    7560:	add	r3, r3, #484	; 0x1e4
    7564:	ldr	r3, [r3]
    7568:	mov	r1, r3
    756c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7570:	bl	0 <coda_type_record_field_set_type>
    7574:	mrc	15, 0, r3, cr13, cr0, {3}
    7578:	ldr	r2, [pc, #3896]	; 84b8 <rinex_init+0x80ac>
    757c:	ldr	r3, [r3, r2]
    7580:	add	r3, r3, #504	; 0x1f8
    7584:	ldr	r3, [r3]
    7588:	ldr	r1, [fp, #-24]	; 0xffffffe8
    758c:	mov	r0, r3
    7590:	bl	0 <coda_type_record_add_field>
    7594:	movw	r0, #0
    7598:	movt	r0, #0
    759c:	bl	0 <coda_type_record_field_new>
    75a0:	str	r0, [fp, #-24]	; 0xffffffe8
    75a4:	mrc	15, 0, r3, cr13, cr0, {3}
    75a8:	ldr	r2, [pc, #3848]	; 84b8 <rinex_init+0x80ac>
    75ac:	ldr	r3, [r3, r2]
    75b0:	add	r3, r3, #440	; 0x1b8
    75b4:	ldr	r3, [r3]
    75b8:	mov	r1, r3
    75bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    75c0:	bl	0 <coda_type_record_field_set_type>
    75c4:	mrc	15, 0, r3, cr13, cr0, {3}
    75c8:	ldr	r2, [pc, #3816]	; 84b8 <rinex_init+0x80ac>
    75cc:	ldr	r3, [r3, r2]
    75d0:	add	r3, r3, #504	; 0x1f8
    75d4:	ldr	r3, [r3]
    75d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    75dc:	mov	r0, r3
    75e0:	bl	0 <coda_type_record_add_field>
    75e4:	movw	r0, #0
    75e8:	movt	r0, #0
    75ec:	bl	0 <coda_type_record_field_new>
    75f0:	str	r0, [fp, #-24]	; 0xffffffe8
    75f4:	mrc	15, 0, r3, cr13, cr0, {3}
    75f8:	ldr	r2, [pc, #3768]	; 84b8 <rinex_init+0x80ac>
    75fc:	ldr	r3, [r3, r2]
    7600:	add	r3, r3, #452	; 0x1c4
    7604:	ldr	r3, [r3]
    7608:	mov	r1, r3
    760c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7610:	bl	0 <coda_type_record_field_set_type>
    7614:	mrc	15, 0, r3, cr13, cr0, {3}
    7618:	ldr	r2, [pc, #3736]	; 84b8 <rinex_init+0x80ac>
    761c:	ldr	r3, [r3, r2]
    7620:	add	r3, r3, #504	; 0x1f8
    7624:	ldr	r3, [r3]
    7628:	ldr	r1, [fp, #-24]	; 0xffffffe8
    762c:	mov	r0, r3
    7630:	bl	0 <coda_type_record_add_field>
    7634:	movw	r0, #0
    7638:	movt	r0, #0
    763c:	bl	0 <coda_type_record_field_new>
    7640:	str	r0, [fp, #-24]	; 0xffffffe8
    7644:	mrc	15, 0, r3, cr13, cr0, {3}
    7648:	ldr	r2, [pc, #3688]	; 84b8 <rinex_init+0x80ac>
    764c:	ldr	r3, [r3, r2]
    7650:	add	r3, r3, #464	; 0x1d0
    7654:	ldr	r3, [r3]
    7658:	mov	r1, r3
    765c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7660:	bl	0 <coda_type_record_field_set_type>
    7664:	mrc	15, 0, r3, cr13, cr0, {3}
    7668:	ldr	r2, [pc, #3656]	; 84b8 <rinex_init+0x80ac>
    766c:	ldr	r3, [r3, r2]
    7670:	add	r3, r3, #504	; 0x1f8
    7674:	ldr	r3, [r3]
    7678:	ldr	r1, [fp, #-24]	; 0xffffffe8
    767c:	mov	r0, r3
    7680:	bl	0 <coda_type_record_add_field>
    7684:	movw	r0, #0
    7688:	movt	r0, #0
    768c:	bl	0 <coda_type_record_field_new>
    7690:	str	r0, [fp, #-24]	; 0xffffffe8
    7694:	mrc	15, 0, r3, cr13, cr0, {3}
    7698:	ldr	r2, [pc, #3608]	; 84b8 <rinex_init+0x80ac>
    769c:	ldr	r3, [r3, r2]
    76a0:	add	r3, r3, #488	; 0x1e8
    76a4:	ldr	r3, [r3]
    76a8:	mov	r1, r3
    76ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    76b0:	bl	0 <coda_type_record_field_set_type>
    76b4:	mrc	15, 0, r3, cr13, cr0, {3}
    76b8:	ldr	r2, [pc, #3576]	; 84b8 <rinex_init+0x80ac>
    76bc:	ldr	r3, [r3, r2]
    76c0:	add	r3, r3, #504	; 0x1f8
    76c4:	ldr	r3, [r3]
    76c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    76cc:	mov	r0, r3
    76d0:	bl	0 <coda_type_record_add_field>
    76d4:	mrc	15, 0, r3, cr13, cr0, {3}
    76d8:	ldr	r2, [pc, #3544]	; 84b8 <rinex_init+0x80ac>
    76dc:	ldr	r3, [r3, r2]
    76e0:	add	r4, r3, #512	; 0x200
    76e4:	mov	r0, #8
    76e8:	bl	0 <coda_type_array_new>
    76ec:	mov	r3, r0
    76f0:	str	r3, [r4]
    76f4:	mrc	15, 0, r3, cr13, cr0, {3}
    76f8:	ldr	r2, [pc, #3512]	; 84b8 <rinex_init+0x80ac>
    76fc:	ldr	r3, [r3, r2]
    7700:	add	r3, r3, #512	; 0x200
    7704:	ldr	r3, [r3]
    7708:	mov	r1, #0
    770c:	mov	r0, r3
    7710:	bl	0 <coda_type_array_add_variable_dimension>
    7714:	mrc	15, 0, r3, cr13, cr0, {3}
    7718:	ldr	r2, [pc, #3480]	; 84b8 <rinex_init+0x80ac>
    771c:	ldr	r3, [r3, r2]
    7720:	add	r3, r3, #512	; 0x200
    7724:	ldr	r0, [r3]
    7728:	mrc	15, 0, r3, cr13, cr0, {3}
    772c:	ldr	r2, [pc, #3460]	; 84b8 <rinex_init+0x80ac>
    7730:	ldr	r3, [r3, r2]
    7734:	add	r3, r3, #492	; 0x1ec
    7738:	ldr	r3, [r3]
    773c:	mov	r1, r3
    7740:	bl	0 <coda_type_array_set_base_type>
    7744:	mrc	15, 0, r3, cr13, cr0, {3}
    7748:	ldr	r2, [pc, #3432]	; 84b8 <rinex_init+0x80ac>
    774c:	ldr	r3, [r3, r2]
    7750:	add	r4, r3, #516	; 0x204
    7754:	mov	r0, #8
    7758:	bl	0 <coda_type_array_new>
    775c:	mov	r3, r0
    7760:	str	r3, [r4]
    7764:	mrc	15, 0, r3, cr13, cr0, {3}
    7768:	ldr	r2, [pc, #3400]	; 84b8 <rinex_init+0x80ac>
    776c:	ldr	r3, [r3, r2]
    7770:	add	r3, r3, #516	; 0x204
    7774:	ldr	r3, [r3]
    7778:	mov	r1, #0
    777c:	mov	r0, r3
    7780:	bl	0 <coda_type_array_add_variable_dimension>
    7784:	mrc	15, 0, r3, cr13, cr0, {3}
    7788:	ldr	r2, [pc, #3368]	; 84b8 <rinex_init+0x80ac>
    778c:	ldr	r3, [r3, r2]
    7790:	add	r3, r3, #516	; 0x204
    7794:	ldr	r0, [r3]
    7798:	mrc	15, 0, r3, cr13, cr0, {3}
    779c:	ldr	r2, [pc, #3348]	; 84b8 <rinex_init+0x80ac>
    77a0:	ldr	r3, [r3, r2]
    77a4:	add	r3, r3, #496	; 0x1f0
    77a8:	ldr	r3, [r3]
    77ac:	mov	r1, r3
    77b0:	bl	0 <coda_type_array_set_base_type>
    77b4:	mrc	15, 0, r3, cr13, cr0, {3}
    77b8:	ldr	r2, [pc, #3320]	; 84b8 <rinex_init+0x80ac>
    77bc:	ldr	r3, [r3, r2]
    77c0:	add	r4, r3, #520	; 0x208
    77c4:	mov	r0, #8
    77c8:	bl	0 <coda_type_array_new>
    77cc:	mov	r3, r0
    77d0:	str	r3, [r4]
    77d4:	mrc	15, 0, r3, cr13, cr0, {3}
    77d8:	ldr	r2, [pc, #3288]	; 84b8 <rinex_init+0x80ac>
    77dc:	ldr	r3, [r3, r2]
    77e0:	add	r3, r3, #520	; 0x208
    77e4:	ldr	r3, [r3]
    77e8:	mov	r1, #0
    77ec:	mov	r0, r3
    77f0:	bl	0 <coda_type_array_add_variable_dimension>
    77f4:	mrc	15, 0, r3, cr13, cr0, {3}
    77f8:	ldr	r2, [pc, #3256]	; 84b8 <rinex_init+0x80ac>
    77fc:	ldr	r3, [r3, r2]
    7800:	add	r3, r3, #520	; 0x208
    7804:	ldr	r0, [r3]
    7808:	mrc	15, 0, r3, cr13, cr0, {3}
    780c:	ldr	r2, [pc, #3236]	; 84b8 <rinex_init+0x80ac>
    7810:	ldr	r3, [r3, r2]
    7814:	add	r3, r3, #500	; 0x1f4
    7818:	ldr	r3, [r3]
    781c:	mov	r1, r3
    7820:	bl	0 <coda_type_array_set_base_type>
    7824:	mrc	15, 0, r3, cr13, cr0, {3}
    7828:	ldr	r2, [pc, #3208]	; 84b8 <rinex_init+0x80ac>
    782c:	ldr	r3, [r3, r2]
    7830:	add	r4, r3, #524	; 0x20c
    7834:	mov	r0, #8
    7838:	bl	0 <coda_type_array_new>
    783c:	mov	r3, r0
    7840:	str	r3, [r4]
    7844:	mrc	15, 0, r3, cr13, cr0, {3}
    7848:	ldr	r2, [pc, #3176]	; 84b8 <rinex_init+0x80ac>
    784c:	ldr	r3, [r3, r2]
    7850:	add	r3, r3, #524	; 0x20c
    7854:	ldr	r3, [r3]
    7858:	mov	r1, #0
    785c:	mov	r0, r3
    7860:	bl	0 <coda_type_array_add_variable_dimension>
    7864:	mrc	15, 0, r3, cr13, cr0, {3}
    7868:	ldr	r2, [pc, #3144]	; 84b8 <rinex_init+0x80ac>
    786c:	ldr	r3, [r3, r2]
    7870:	add	r3, r3, #524	; 0x20c
    7874:	ldr	r0, [r3]
    7878:	mrc	15, 0, r3, cr13, cr0, {3}
    787c:	ldr	r2, [pc, #3124]	; 84b8 <rinex_init+0x80ac>
    7880:	ldr	r3, [r3, r2]
    7884:	add	r3, r3, #504	; 0x1f8
    7888:	ldr	r3, [r3]
    788c:	mov	r1, r3
    7890:	bl	0 <coda_type_array_set_base_type>
    7894:	mrc	15, 0, r3, cr13, cr0, {3}
    7898:	ldr	r2, [pc, #3096]	; 84b8 <rinex_init+0x80ac>
    789c:	ldr	r3, [r3, r2]
    78a0:	add	r4, r3, #528	; 0x210
    78a4:	mov	r0, #8
    78a8:	bl	0 <coda_type_record_new>
    78ac:	mov	r3, r0
    78b0:	str	r3, [r4]
    78b4:	movw	r0, #0
    78b8:	movt	r0, #0
    78bc:	bl	0 <coda_type_record_field_new>
    78c0:	str	r0, [fp, #-24]	; 0xffffffe8
    78c4:	mrc	15, 0, r3, cr13, cr0, {3}
    78c8:	ldr	r2, [pc, #3048]	; 84b8 <rinex_init+0x80ac>
    78cc:	ldr	r3, [r3, r2]
    78d0:	add	r3, r3, #508	; 0x1fc
    78d4:	ldr	r3, [r3]
    78d8:	mov	r1, r3
    78dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    78e0:	bl	0 <coda_type_record_field_set_type>
    78e4:	mrc	15, 0, r3, cr13, cr0, {3}
    78e8:	ldr	r2, [pc, #3016]	; 84b8 <rinex_init+0x80ac>
    78ec:	ldr	r3, [r3, r2]
    78f0:	add	r3, r3, #528	; 0x210
    78f4:	ldr	r3, [r3]
    78f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    78fc:	mov	r0, r3
    7900:	bl	0 <coda_type_record_add_field>
    7904:	movw	r0, #0
    7908:	movt	r0, #0
    790c:	bl	0 <coda_type_record_field_new>
    7910:	str	r0, [fp, #-24]	; 0xffffffe8
    7914:	mrc	15, 0, r3, cr13, cr0, {3}
    7918:	ldr	r2, [pc, #2968]	; 84b8 <rinex_init+0x80ac>
    791c:	ldr	r3, [r3, r2]
    7920:	add	r3, r3, #512	; 0x200
    7924:	ldr	r3, [r3]
    7928:	mov	r1, r3
    792c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7930:	bl	0 <coda_type_record_field_set_type>
    7934:	mrc	15, 0, r3, cr13, cr0, {3}
    7938:	ldr	r2, [pc, #2936]	; 84b8 <rinex_init+0x80ac>
    793c:	ldr	r3, [r3, r2]
    7940:	add	r3, r3, #528	; 0x210
    7944:	ldr	r3, [r3]
    7948:	ldr	r1, [fp, #-24]	; 0xffffffe8
    794c:	mov	r0, r3
    7950:	bl	0 <coda_type_record_add_field>
    7954:	movw	r0, #0
    7958:	movt	r0, #0
    795c:	bl	0 <coda_type_record_field_new>
    7960:	str	r0, [fp, #-24]	; 0xffffffe8
    7964:	mrc	15, 0, r3, cr13, cr0, {3}
    7968:	ldr	r2, [pc, #2888]	; 84b8 <rinex_init+0x80ac>
    796c:	ldr	r3, [r3, r2]
    7970:	add	r3, r3, #516	; 0x204
    7974:	ldr	r3, [r3]
    7978:	mov	r1, r3
    797c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7980:	bl	0 <coda_type_record_field_set_type>
    7984:	mrc	15, 0, r3, cr13, cr0, {3}
    7988:	ldr	r2, [pc, #2856]	; 84b8 <rinex_init+0x80ac>
    798c:	ldr	r3, [r3, r2]
    7990:	add	r3, r3, #528	; 0x210
    7994:	ldr	r3, [r3]
    7998:	ldr	r1, [fp, #-24]	; 0xffffffe8
    799c:	mov	r0, r3
    79a0:	bl	0 <coda_type_record_add_field>
    79a4:	movw	r0, #0
    79a8:	movt	r0, #0
    79ac:	bl	0 <coda_type_record_field_new>
    79b0:	str	r0, [fp, #-24]	; 0xffffffe8
    79b4:	mrc	15, 0, r3, cr13, cr0, {3}
    79b8:	ldr	r2, [pc, #2808]	; 84b8 <rinex_init+0x80ac>
    79bc:	ldr	r3, [r3, r2]
    79c0:	add	r3, r3, #520	; 0x208
    79c4:	ldr	r3, [r3]
    79c8:	mov	r1, r3
    79cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    79d0:	bl	0 <coda_type_record_field_set_type>
    79d4:	mrc	15, 0, r3, cr13, cr0, {3}
    79d8:	ldr	r2, [pc, #2776]	; 84b8 <rinex_init+0x80ac>
    79dc:	ldr	r3, [r3, r2]
    79e0:	add	r3, r3, #528	; 0x210
    79e4:	ldr	r3, [r3]
    79e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    79ec:	mov	r0, r3
    79f0:	bl	0 <coda_type_record_add_field>
    79f4:	movw	r0, #0
    79f8:	movt	r0, #0
    79fc:	bl	0 <coda_type_record_field_new>
    7a00:	str	r0, [fp, #-24]	; 0xffffffe8
    7a04:	mrc	15, 0, r3, cr13, cr0, {3}
    7a08:	ldr	r2, [pc, #2728]	; 84b8 <rinex_init+0x80ac>
    7a0c:	ldr	r3, [r3, r2]
    7a10:	add	r3, r3, #524	; 0x20c
    7a14:	ldr	r3, [r3]
    7a18:	mov	r1, r3
    7a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7a20:	bl	0 <coda_type_record_field_set_type>
    7a24:	mrc	15, 0, r3, cr13, cr0, {3}
    7a28:	ldr	r2, [pc, #2696]	; 84b8 <rinex_init+0x80ac>
    7a2c:	ldr	r3, [r3, r2]
    7a30:	add	r3, r3, #528	; 0x210
    7a34:	ldr	r3, [r3]
    7a38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7a3c:	mov	r0, r3
    7a40:	bl	0 <coda_type_record_add_field>
    7a44:	mrc	15, 0, r3, cr13, cr0, {3}
    7a48:	ldr	r2, [pc, #2664]	; 84b8 <rinex_init+0x80ac>
    7a4c:	ldr	r3, [r3, r2]
    7a50:	add	r4, r3, #532	; 0x214
    7a54:	mov	r0, #8
    7a58:	bl	0 <coda_type_text_new>
    7a5c:	mov	r3, r0
    7a60:	str	r3, [r4]
    7a64:	mrc	15, 0, r3, cr13, cr0, {3}
    7a68:	ldr	r2, [pc, #2632]	; 84b8 <rinex_init+0x80ac>
    7a6c:	ldr	r3, [r3, r2]
    7a70:	add	r3, r3, #532	; 0x214
    7a74:	ldr	r3, [r3]
    7a78:	movw	r1, #0
    7a7c:	movt	r1, #0
    7a80:	mov	r0, r3
    7a84:	bl	0 <coda_type_set_description>
    7a88:	mrc	15, 0, r3, cr13, cr0, {3}
    7a8c:	ldr	r2, [pc, #2596]	; 84b8 <rinex_init+0x80ac>
    7a90:	ldr	r3, [r3, r2]
    7a94:	add	r4, r3, #536	; 0x218
    7a98:	mov	r0, #8
    7a9c:	bl	0 <coda_type_text_new>
    7aa0:	mov	r3, r0
    7aa4:	str	r3, [r4]
    7aa8:	mrc	15, 0, r3, cr13, cr0, {3}
    7aac:	ldr	r2, [pc, #2564]	; 84b8 <rinex_init+0x80ac>
    7ab0:	ldr	r3, [r3, r2]
    7ab4:	add	r3, r3, #536	; 0x218
    7ab8:	ldr	r3, [r3]
    7abc:	movw	r1, #0
    7ac0:	movt	r1, #0
    7ac4:	mov	r0, r3
    7ac8:	bl	0 <coda_type_set_description>
    7acc:	mov	r3, #0
    7ad0:	str	r3, [fp, #-28]	; 0xffffffe4
    7ad4:	sub	r3, fp, #28
    7ad8:	mov	r1, r3
    7adc:	movw	r0, #0
    7ae0:	movt	r0, #0
    7ae4:	bl	0 <coda_expression_from_string>
    7ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7aec:	mrc	15, 0, r3, cr13, cr0, {3}
    7af0:	ldr	r2, [pc, #2496]	; 84b8 <rinex_init+0x80ac>
    7af4:	ldr	r3, [r3, r2]
    7af8:	add	r4, r3, #540	; 0x21c
    7afc:	mov	r0, #8
    7b00:	bl	0 <coda_type_time_new>
    7b04:	mov	r3, r0
    7b08:	str	r3, [r4]
    7b0c:	mrc	15, 0, r3, cr13, cr0, {3}
    7b10:	ldr	r2, [pc, #2464]	; 84b8 <rinex_init+0x80ac>
    7b14:	ldr	r3, [r3, r2]
    7b18:	add	r3, r3, #540	; 0x21c
    7b1c:	ldr	r0, [r3]
    7b20:	mrc	15, 0, r3, cr13, cr0, {3}
    7b24:	ldr	r2, [pc, #2444]	; 84b8 <rinex_init+0x80ac>
    7b28:	ldr	r3, [r3, r2]
    7b2c:	add	r3, r3, #176	; 0xb0
    7b30:	ldr	r3, [r3]
    7b34:	mov	r1, r3
    7b38:	bl	0 <coda_type_time_set_base_type>
    7b3c:	mrc	15, 0, r3, cr13, cr0, {3}
    7b40:	ldr	r2, [pc, #2416]	; 84b8 <rinex_init+0x80ac>
    7b44:	ldr	r3, [r3, r2]
    7b48:	add	r3, r3, #180	; 0xb4
    7b4c:	ldr	r3, [r3]
    7b50:	movw	r1, #0
    7b54:	movt	r1, #0
    7b58:	mov	r0, r3
    7b5c:	bl	0 <coda_type_set_description>
    7b60:	mrc	15, 0, r3, cr13, cr0, {3}
    7b64:	ldr	r2, [pc, #2380]	; 84b8 <rinex_init+0x80ac>
    7b68:	ldr	r3, [r3, r2]
    7b6c:	add	r4, r3, #544	; 0x220
    7b70:	mov	r1, #3
    7b74:	mov	r0, #8
    7b78:	bl	0 <coda_type_number_new>
    7b7c:	mov	r3, r0
    7b80:	str	r3, [r4]
    7b84:	mrc	15, 0, r3, cr13, cr0, {3}
    7b88:	ldr	r2, [pc, #2344]	; 84b8 <rinex_init+0x80ac>
    7b8c:	ldr	r3, [r3, r2]
    7b90:	add	r3, r3, #544	; 0x220
    7b94:	ldr	r3, [r3]
    7b98:	ldr	r1, [fp, #-20]	; 0xffffffec
    7b9c:	mov	r0, r3
    7ba0:	bl	0 <coda_type_number_set_endianness>
    7ba4:	mrc	15, 0, r3, cr13, cr0, {3}
    7ba8:	ldr	r2, [pc, #2312]	; 84b8 <rinex_init+0x80ac>
    7bac:	ldr	r3, [r3, r2]
    7bb0:	add	r3, r3, #544	; 0x220
    7bb4:	ldr	r1, [r3]
    7bb8:	mov	r2, #64	; 0x40
    7bbc:	mov	r3, #0
    7bc0:	mov	r0, r1
    7bc4:	bl	0 <coda_type_set_bit_size>
    7bc8:	mrc	15, 0, r3, cr13, cr0, {3}
    7bcc:	ldr	r2, [pc, #2276]	; 84b8 <rinex_init+0x80ac>
    7bd0:	ldr	r3, [r3, r2]
    7bd4:	add	r3, r3, #544	; 0x220
    7bd8:	ldr	r3, [r3]
    7bdc:	movw	r1, #0
    7be0:	movt	r1, #0
    7be4:	mov	r0, r3
    7be8:	bl	0 <coda_type_set_description>
    7bec:	mrc	15, 0, r3, cr13, cr0, {3}
    7bf0:	ldr	r2, [pc, #2240]	; 84b8 <rinex_init+0x80ac>
    7bf4:	ldr	r3, [r3, r2]
    7bf8:	add	r3, r3, #544	; 0x220
    7bfc:	ldr	r3, [r3]
    7c00:	movw	r1, #0
    7c04:	movt	r1, #0
    7c08:	mov	r0, r3
    7c0c:	bl	0 <coda_type_number_set_unit>
    7c10:	mrc	15, 0, r3, cr13, cr0, {3}
    7c14:	ldr	r2, [pc, #2204]	; 84b8 <rinex_init+0x80ac>
    7c18:	ldr	r3, [r3, r2]
    7c1c:	add	r4, r3, #548	; 0x224
    7c20:	mov	r1, #3
    7c24:	mov	r0, #8
    7c28:	bl	0 <coda_type_number_new>
    7c2c:	mov	r3, r0
    7c30:	str	r3, [r4]
    7c34:	mrc	15, 0, r3, cr13, cr0, {3}
    7c38:	ldr	r2, [pc, #2168]	; 84b8 <rinex_init+0x80ac>
    7c3c:	ldr	r3, [r3, r2]
    7c40:	add	r3, r3, #548	; 0x224
    7c44:	ldr	r3, [r3]
    7c48:	ldr	r1, [fp, #-20]	; 0xffffffec
    7c4c:	mov	r0, r3
    7c50:	bl	0 <coda_type_number_set_endianness>
    7c54:	mrc	15, 0, r3, cr13, cr0, {3}
    7c58:	ldr	r2, [pc, #2136]	; 84b8 <rinex_init+0x80ac>
    7c5c:	ldr	r3, [r3, r2]
    7c60:	add	r3, r3, #548	; 0x224
    7c64:	ldr	r1, [r3]
    7c68:	mov	r2, #64	; 0x40
    7c6c:	mov	r3, #0
    7c70:	mov	r0, r1
    7c74:	bl	0 <coda_type_set_bit_size>
    7c78:	mrc	15, 0, r3, cr13, cr0, {3}
    7c7c:	ldr	r2, [pc, #2100]	; 84b8 <rinex_init+0x80ac>
    7c80:	ldr	r3, [r3, r2]
    7c84:	add	r3, r3, #548	; 0x224
    7c88:	ldr	r3, [r3]
    7c8c:	movw	r1, #0
    7c90:	movt	r1, #0
    7c94:	mov	r0, r3
    7c98:	bl	0 <coda_type_set_description>
    7c9c:	mrc	15, 0, r3, cr13, cr0, {3}
    7ca0:	ldr	r2, [pc, #2064]	; 84b8 <rinex_init+0x80ac>
    7ca4:	ldr	r3, [r3, r2]
    7ca8:	add	r3, r3, #548	; 0x224
    7cac:	ldr	r3, [r3]
    7cb0:	movw	r1, #0
    7cb4:	movt	r1, #0
    7cb8:	mov	r0, r3
    7cbc:	bl	0 <coda_type_number_set_unit>
    7cc0:	mrc	15, 0, r3, cr13, cr0, {3}
    7cc4:	ldr	r2, [pc, #2028]	; 84b8 <rinex_init+0x80ac>
    7cc8:	ldr	r3, [r3, r2]
    7ccc:	add	r4, r3, #552	; 0x228
    7cd0:	mov	r1, #3
    7cd4:	mov	r0, #8
    7cd8:	bl	0 <coda_type_number_new>
    7cdc:	mov	r3, r0
    7ce0:	str	r3, [r4]
    7ce4:	mrc	15, 0, r3, cr13, cr0, {3}
    7ce8:	ldr	r2, [pc, #1992]	; 84b8 <rinex_init+0x80ac>
    7cec:	ldr	r3, [r3, r2]
    7cf0:	add	r3, r3, #552	; 0x228
    7cf4:	ldr	r3, [r3]
    7cf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    7cfc:	mov	r0, r3
    7d00:	bl	0 <coda_type_number_set_endianness>
    7d04:	mrc	15, 0, r3, cr13, cr0, {3}
    7d08:	ldr	r2, [pc, #1960]	; 84b8 <rinex_init+0x80ac>
    7d0c:	ldr	r3, [r3, r2]
    7d10:	add	r3, r3, #552	; 0x228
    7d14:	ldr	r1, [r3]
    7d18:	mov	r2, #64	; 0x40
    7d1c:	mov	r3, #0
    7d20:	mov	r0, r1
    7d24:	bl	0 <coda_type_set_bit_size>
    7d28:	mrc	15, 0, r3, cr13, cr0, {3}
    7d2c:	ldr	r2, [pc, #1924]	; 84b8 <rinex_init+0x80ac>
    7d30:	ldr	r3, [r3, r2]
    7d34:	add	r3, r3, #552	; 0x228
    7d38:	ldr	r3, [r3]
    7d3c:	movw	r1, #0
    7d40:	movt	r1, #0
    7d44:	mov	r0, r3
    7d48:	bl	0 <coda_type_set_description>
    7d4c:	mrc	15, 0, r3, cr13, cr0, {3}
    7d50:	ldr	r2, [pc, #1888]	; 84b8 <rinex_init+0x80ac>
    7d54:	ldr	r3, [r3, r2]
    7d58:	add	r4, r3, #556	; 0x22c
    7d5c:	mov	r1, #3
    7d60:	mov	r0, #8
    7d64:	bl	0 <coda_type_number_new>
    7d68:	mov	r3, r0
    7d6c:	str	r3, [r4]
    7d70:	mrc	15, 0, r3, cr13, cr0, {3}
    7d74:	ldr	r2, [pc, #1852]	; 84b8 <rinex_init+0x80ac>
    7d78:	ldr	r3, [r3, r2]
    7d7c:	add	r3, r3, #556	; 0x22c
    7d80:	ldr	r3, [r3]
    7d84:	ldr	r1, [fp, #-20]	; 0xffffffec
    7d88:	mov	r0, r3
    7d8c:	bl	0 <coda_type_number_set_endianness>
    7d90:	mrc	15, 0, r3, cr13, cr0, {3}
    7d94:	ldr	r2, [pc, #1820]	; 84b8 <rinex_init+0x80ac>
    7d98:	ldr	r3, [r3, r2]
    7d9c:	add	r3, r3, #556	; 0x22c
    7da0:	ldr	r1, [r3]
    7da4:	mov	r2, #64	; 0x40
    7da8:	mov	r3, #0
    7dac:	mov	r0, r1
    7db0:	bl	0 <coda_type_set_bit_size>
    7db4:	mrc	15, 0, r3, cr13, cr0, {3}
    7db8:	ldr	r2, [pc, #1784]	; 84b8 <rinex_init+0x80ac>
    7dbc:	ldr	r3, [r3, r2]
    7dc0:	add	r3, r3, #556	; 0x22c
    7dc4:	ldr	r3, [r3]
    7dc8:	movw	r1, #0
    7dcc:	movt	r1, #0
    7dd0:	mov	r0, r3
    7dd4:	bl	0 <coda_type_set_description>
    7dd8:	mrc	15, 0, r3, cr13, cr0, {3}
    7ddc:	ldr	r2, [pc, #1748]	; 84b8 <rinex_init+0x80ac>
    7de0:	ldr	r3, [r3, r2]
    7de4:	add	r4, r3, #560	; 0x230
    7de8:	mov	r1, #3
    7dec:	mov	r0, #8
    7df0:	bl	0 <coda_type_number_new>
    7df4:	mov	r3, r0
    7df8:	str	r3, [r4]
    7dfc:	mrc	15, 0, r3, cr13, cr0, {3}
    7e00:	ldr	r2, [pc, #1712]	; 84b8 <rinex_init+0x80ac>
    7e04:	ldr	r3, [r3, r2]
    7e08:	add	r3, r3, #560	; 0x230
    7e0c:	ldr	r3, [r3]
    7e10:	ldr	r1, [fp, #-20]	; 0xffffffec
    7e14:	mov	r0, r3
    7e18:	bl	0 <coda_type_number_set_endianness>
    7e1c:	mrc	15, 0, r3, cr13, cr0, {3}
    7e20:	ldr	r2, [pc, #1680]	; 84b8 <rinex_init+0x80ac>
    7e24:	ldr	r3, [r3, r2]
    7e28:	add	r3, r3, #560	; 0x230
    7e2c:	ldr	r1, [r3]
    7e30:	mov	r2, #64	; 0x40
    7e34:	mov	r3, #0
    7e38:	mov	r0, r1
    7e3c:	bl	0 <coda_type_set_bit_size>
    7e40:	mrc	15, 0, r3, cr13, cr0, {3}
    7e44:	ldr	r2, [pc, #1644]	; 84b8 <rinex_init+0x80ac>
    7e48:	ldr	r3, [r3, r2]
    7e4c:	add	r3, r3, #560	; 0x230
    7e50:	ldr	r3, [r3]
    7e54:	movw	r1, #0
    7e58:	movt	r1, #0
    7e5c:	mov	r0, r3
    7e60:	bl	0 <coda_type_set_description>
    7e64:	mrc	15, 0, r3, cr13, cr0, {3}
    7e68:	ldr	r2, [pc, #1608]	; 84b8 <rinex_init+0x80ac>
    7e6c:	ldr	r3, [r3, r2]
    7e70:	add	r3, r3, #560	; 0x230
    7e74:	ldr	r3, [r3]
    7e78:	movw	r1, #0
    7e7c:	movt	r1, #0
    7e80:	mov	r0, r3
    7e84:	bl	0 <coda_type_number_set_unit>
    7e88:	mrc	15, 0, r3, cr13, cr0, {3}
    7e8c:	ldr	r2, [pc, #1572]	; 84b8 <rinex_init+0x80ac>
    7e90:	ldr	r3, [r3, r2]
    7e94:	add	r4, r3, #564	; 0x234
    7e98:	mov	r1, #3
    7e9c:	mov	r0, #8
    7ea0:	bl	0 <coda_type_number_new>
    7ea4:	mov	r3, r0
    7ea8:	str	r3, [r4]
    7eac:	mrc	15, 0, r3, cr13, cr0, {3}
    7eb0:	ldr	r2, [pc, #1536]	; 84b8 <rinex_init+0x80ac>
    7eb4:	ldr	r3, [r3, r2]
    7eb8:	add	r3, r3, #564	; 0x234
    7ebc:	ldr	r3, [r3]
    7ec0:	ldr	r1, [fp, #-20]	; 0xffffffec
    7ec4:	mov	r0, r3
    7ec8:	bl	0 <coda_type_number_set_endianness>
    7ecc:	mrc	15, 0, r3, cr13, cr0, {3}
    7ed0:	ldr	r2, [pc, #1504]	; 84b8 <rinex_init+0x80ac>
    7ed4:	ldr	r3, [r3, r2]
    7ed8:	add	r3, r3, #564	; 0x234
    7edc:	ldr	r1, [r3]
    7ee0:	mov	r2, #64	; 0x40
    7ee4:	mov	r3, #0
    7ee8:	mov	r0, r1
    7eec:	bl	0 <coda_type_set_bit_size>
    7ef0:	mrc	15, 0, r3, cr13, cr0, {3}
    7ef4:	ldr	r2, [pc, #1468]	; 84b8 <rinex_init+0x80ac>
    7ef8:	ldr	r3, [r3, r2]
    7efc:	add	r3, r3, #564	; 0x234
    7f00:	ldr	r3, [r3]
    7f04:	movw	r1, #0
    7f08:	movt	r1, #0
    7f0c:	mov	r0, r3
    7f10:	bl	0 <coda_type_set_description>
    7f14:	mrc	15, 0, r3, cr13, cr0, {3}
    7f18:	ldr	r2, [pc, #1432]	; 84b8 <rinex_init+0x80ac>
    7f1c:	ldr	r3, [r3, r2]
    7f20:	add	r3, r3, #564	; 0x234
    7f24:	ldr	r3, [r3]
    7f28:	movw	r1, #0
    7f2c:	movt	r1, #0
    7f30:	mov	r0, r3
    7f34:	bl	0 <coda_type_number_set_unit>
    7f38:	mrc	15, 0, r3, cr13, cr0, {3}
    7f3c:	ldr	r2, [pc, #1396]	; 84b8 <rinex_init+0x80ac>
    7f40:	ldr	r3, [r3, r2]
    7f44:	add	r4, r3, #568	; 0x238
    7f48:	mov	r0, #8
    7f4c:	bl	0 <coda_type_record_new>
    7f50:	mov	r3, r0
    7f54:	str	r3, [r4]
    7f58:	movw	r0, #0
    7f5c:	movt	r0, #0
    7f60:	bl	0 <coda_type_record_field_new>
    7f64:	str	r0, [fp, #-24]	; 0xffffffe8
    7f68:	mrc	15, 0, r3, cr13, cr0, {3}
    7f6c:	ldr	r2, [pc, #1348]	; 84b8 <rinex_init+0x80ac>
    7f70:	ldr	r3, [r3, r2]
    7f74:	ldr	r3, [r3]
    7f78:	mov	r1, r3
    7f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7f80:	bl	0 <coda_type_record_field_set_type>
    7f84:	mrc	15, 0, r3, cr13, cr0, {3}
    7f88:	ldr	r2, [pc, #1320]	; 84b8 <rinex_init+0x80ac>
    7f8c:	ldr	r3, [r3, r2]
    7f90:	add	r3, r3, #568	; 0x238
    7f94:	ldr	r3, [r3]
    7f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7f9c:	mov	r0, r3
    7fa0:	bl	0 <coda_type_record_add_field>
    7fa4:	movw	r0, #0
    7fa8:	movt	r0, #0
    7fac:	bl	0 <coda_type_record_field_new>
    7fb0:	str	r0, [fp, #-24]	; 0xffffffe8
    7fb4:	mrc	15, 0, r3, cr13, cr0, {3}
    7fb8:	ldr	r2, [pc, #1272]	; 84b8 <rinex_init+0x80ac>
    7fbc:	ldr	r3, [r3, r2]
    7fc0:	add	r3, r3, #4
    7fc4:	ldr	r3, [r3]
    7fc8:	mov	r1, r3
    7fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7fd0:	bl	0 <coda_type_record_field_set_type>
    7fd4:	mrc	15, 0, r3, cr13, cr0, {3}
    7fd8:	ldr	r2, [pc, #1240]	; 84b8 <rinex_init+0x80ac>
    7fdc:	ldr	r3, [r3, r2]
    7fe0:	add	r3, r3, #568	; 0x238
    7fe4:	ldr	r3, [r3]
    7fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7fec:	mov	r0, r3
    7ff0:	bl	0 <coda_type_record_add_field>
    7ff4:	movw	r0, #0
    7ff8:	movt	r0, #0
    7ffc:	bl	0 <coda_type_record_field_new>
    8000:	str	r0, [fp, #-24]	; 0xffffffe8
    8004:	mrc	15, 0, r3, cr13, cr0, {3}
    8008:	ldr	r2, [pc, #1192]	; 84b8 <rinex_init+0x80ac>
    800c:	ldr	r3, [r3, r2]
    8010:	add	r3, r3, #8
    8014:	ldr	r3, [r3]
    8018:	mov	r1, r3
    801c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8020:	bl	0 <coda_type_record_field_set_type>
    8024:	mrc	15, 0, r3, cr13, cr0, {3}
    8028:	ldr	r2, [pc, #1160]	; 84b8 <rinex_init+0x80ac>
    802c:	ldr	r3, [r3, r2]
    8030:	add	r3, r3, #568	; 0x238
    8034:	ldr	r3, [r3]
    8038:	ldr	r1, [fp, #-24]	; 0xffffffe8
    803c:	mov	r0, r3
    8040:	bl	0 <coda_type_record_add_field>
    8044:	movw	r0, #0
    8048:	movt	r0, #0
    804c:	bl	0 <coda_type_record_field_new>
    8050:	str	r0, [fp, #-24]	; 0xffffffe8
    8054:	mrc	15, 0, r3, cr13, cr0, {3}
    8058:	ldr	r2, [pc, #1112]	; 84b8 <rinex_init+0x80ac>
    805c:	ldr	r3, [r3, r2]
    8060:	add	r3, r3, #12
    8064:	ldr	r3, [r3]
    8068:	mov	r1, r3
    806c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8070:	bl	0 <coda_type_record_field_set_type>
    8074:	mrc	15, 0, r3, cr13, cr0, {3}
    8078:	ldr	r2, [pc, #1080]	; 84b8 <rinex_init+0x80ac>
    807c:	ldr	r3, [r3, r2]
    8080:	add	r3, r3, #568	; 0x238
    8084:	ldr	r3, [r3]
    8088:	ldr	r1, [fp, #-24]	; 0xffffffe8
    808c:	mov	r0, r3
    8090:	bl	0 <coda_type_record_add_field>
    8094:	movw	r0, #0
    8098:	movt	r0, #0
    809c:	bl	0 <coda_type_record_field_new>
    80a0:	str	r0, [fp, #-24]	; 0xffffffe8
    80a4:	mrc	15, 0, r3, cr13, cr0, {3}
    80a8:	ldr	r2, [pc, #1032]	; 84b8 <rinex_init+0x80ac>
    80ac:	ldr	r3, [r3, r2]
    80b0:	add	r3, r3, #16
    80b4:	ldr	r3, [r3]
    80b8:	mov	r1, r3
    80bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80c0:	bl	0 <coda_type_record_field_set_type>
    80c4:	mrc	15, 0, r3, cr13, cr0, {3}
    80c8:	ldr	r2, [pc, #1000]	; 84b8 <rinex_init+0x80ac>
    80cc:	ldr	r3, [r3, r2]
    80d0:	add	r3, r3, #568	; 0x238
    80d4:	ldr	r3, [r3]
    80d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    80dc:	mov	r0, r3
    80e0:	bl	0 <coda_type_record_add_field>
    80e4:	movw	r0, #0
    80e8:	movt	r0, #0
    80ec:	bl	0 <coda_type_record_field_new>
    80f0:	str	r0, [fp, #-24]	; 0xffffffe8
    80f4:	mrc	15, 0, r3, cr13, cr0, {3}
    80f8:	ldr	r2, [pc, #952]	; 84b8 <rinex_init+0x80ac>
    80fc:	ldr	r3, [r3, r2]
    8100:	add	r3, r3, #20
    8104:	ldr	r3, [r3]
    8108:	mov	r1, r3
    810c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8110:	bl	0 <coda_type_record_field_set_type>
    8114:	mrc	15, 0, r3, cr13, cr0, {3}
    8118:	ldr	r2, [pc, #920]	; 84b8 <rinex_init+0x80ac>
    811c:	ldr	r3, [r3, r2]
    8120:	add	r3, r3, #568	; 0x238
    8124:	ldr	r3, [r3]
    8128:	ldr	r1, [fp, #-24]	; 0xffffffe8
    812c:	mov	r0, r3
    8130:	bl	0 <coda_type_record_add_field>
    8134:	movw	r0, #0
    8138:	movt	r0, #0
    813c:	bl	0 <coda_type_record_field_new>
    8140:	str	r0, [fp, #-24]	; 0xffffffe8
    8144:	mrc	15, 0, r3, cr13, cr0, {3}
    8148:	ldr	r2, [pc, #872]	; 84b8 <rinex_init+0x80ac>
    814c:	ldr	r3, [r3, r2]
    8150:	add	r3, r3, #28
    8154:	ldr	r3, [r3]
    8158:	mov	r1, r3
    815c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8160:	bl	0 <coda_type_record_field_set_type>
    8164:	mrc	15, 0, r3, cr13, cr0, {3}
    8168:	ldr	r2, [pc, #840]	; 84b8 <rinex_init+0x80ac>
    816c:	ldr	r3, [r3, r2]
    8170:	add	r3, r3, #568	; 0x238
    8174:	ldr	r3, [r3]
    8178:	ldr	r1, [fp, #-24]	; 0xffffffe8
    817c:	mov	r0, r3
    8180:	bl	0 <coda_type_record_add_field>
    8184:	movw	r0, #0
    8188:	movt	r0, #0
    818c:	bl	0 <coda_type_record_field_new>
    8190:	str	r0, [fp, #-24]	; 0xffffffe8
    8194:	mrc	15, 0, r3, cr13, cr0, {3}
    8198:	ldr	r2, [pc, #792]	; 84b8 <rinex_init+0x80ac>
    819c:	ldr	r3, [r3, r2]
    81a0:	add	r3, r3, #128	; 0x80
    81a4:	ldr	r3, [r3]
    81a8:	mov	r1, r3
    81ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    81b0:	bl	0 <coda_type_record_field_set_type>
    81b4:	mrc	15, 0, r3, cr13, cr0, {3}
    81b8:	ldr	r2, [pc, #760]	; 84b8 <rinex_init+0x80ac>
    81bc:	ldr	r3, [r3, r2]
    81c0:	add	r3, r3, #568	; 0x238
    81c4:	ldr	r3, [r3]
    81c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    81cc:	mov	r0, r3
    81d0:	bl	0 <coda_type_record_add_field>
    81d4:	movw	r0, #0
    81d8:	movt	r0, #0
    81dc:	bl	0 <coda_type_record_field_new>
    81e0:	str	r0, [fp, #-24]	; 0xffffffe8
    81e4:	mrc	15, 0, r3, cr13, cr0, {3}
    81e8:	ldr	r2, [pc, #712]	; 84b8 <rinex_init+0x80ac>
    81ec:	ldr	r3, [r3, r2]
    81f0:	add	r3, r3, #172	; 0xac
    81f4:	ldr	r3, [r3]
    81f8:	mov	r1, r3
    81fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8200:	bl	0 <coda_type_record_field_set_type>
    8204:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8208:	bl	0 <coda_type_record_field_set_optional>
    820c:	mrc	15, 0, r3, cr13, cr0, {3}
    8210:	ldr	r2, [pc, #672]	; 84b8 <rinex_init+0x80ac>
    8214:	ldr	r3, [r3, r2]
    8218:	add	r3, r3, #568	; 0x238
    821c:	ldr	r3, [r3]
    8220:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8224:	mov	r0, r3
    8228:	bl	0 <coda_type_record_add_field>
    822c:	movw	r0, #0
    8230:	movt	r0, #0
    8234:	bl	0 <coda_type_record_field_new>
    8238:	str	r0, [fp, #-24]	; 0xffffffe8
    823c:	mrc	15, 0, r3, cr13, cr0, {3}
    8240:	ldr	r2, [pc, #624]	; 84b8 <rinex_init+0x80ac>
    8244:	ldr	r3, [r3, r2]
    8248:	add	r3, r3, #164	; 0xa4
    824c:	ldr	r3, [r3]
    8250:	mov	r1, r3
    8254:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8258:	bl	0 <coda_type_record_field_set_type>
    825c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8260:	bl	0 <coda_type_record_field_set_optional>
    8264:	mrc	15, 0, r3, cr13, cr0, {3}
    8268:	ldr	r2, [pc, #584]	; 84b8 <rinex_init+0x80ac>
    826c:	ldr	r3, [r3, r2]
    8270:	add	r3, r3, #568	; 0x238
    8274:	ldr	r3, [r3]
    8278:	ldr	r1, [fp, #-24]	; 0xffffffe8
    827c:	mov	r0, r3
    8280:	bl	0 <coda_type_record_add_field>
    8284:	mrc	15, 0, r3, cr13, cr0, {3}
    8288:	ldr	r2, [pc, #552]	; 84b8 <rinex_init+0x80ac>
    828c:	ldr	r3, [r3, r2]
    8290:	add	r4, r3, #572	; 0x23c
    8294:	mov	r0, #8
    8298:	bl	0 <coda_type_record_new>
    829c:	mov	r3, r0
    82a0:	str	r3, [r4]
    82a4:	movw	r0, #0
    82a8:	movt	r0, #0
    82ac:	bl	0 <coda_type_record_field_new>
    82b0:	str	r0, [fp, #-24]	; 0xffffffe8
    82b4:	mrc	15, 0, r3, cr13, cr0, {3}
    82b8:	ldr	r2, [pc, #504]	; 84b8 <rinex_init+0x80ac>
    82bc:	ldr	r3, [r3, r2]
    82c0:	add	r3, r3, #532	; 0x214
    82c4:	ldr	r3, [r3]
    82c8:	mov	r1, r3
    82cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    82d0:	bl	0 <coda_type_record_field_set_type>
    82d4:	mrc	15, 0, r3, cr13, cr0, {3}
    82d8:	ldr	r2, [pc, #472]	; 84b8 <rinex_init+0x80ac>
    82dc:	ldr	r3, [r3, r2]
    82e0:	add	r3, r3, #572	; 0x23c
    82e4:	ldr	r3, [r3]
    82e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    82ec:	mov	r0, r3
    82f0:	bl	0 <coda_type_record_add_field>
    82f4:	movw	r0, #0
    82f8:	movt	r0, #0
    82fc:	bl	0 <coda_type_record_field_new>
    8300:	str	r0, [fp, #-24]	; 0xffffffe8
    8304:	mrc	15, 0, r3, cr13, cr0, {3}
    8308:	ldr	r2, [pc, #424]	; 84b8 <rinex_init+0x80ac>
    830c:	ldr	r3, [r3, r2]
    8310:	add	r3, r3, #536	; 0x218
    8314:	ldr	r3, [r3]
    8318:	mov	r1, r3
    831c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8320:	bl	0 <coda_type_record_field_set_type>
    8324:	mrc	15, 0, r3, cr13, cr0, {3}
    8328:	ldr	r2, [pc, #392]	; 84b8 <rinex_init+0x80ac>
    832c:	ldr	r3, [r3, r2]
    8330:	add	r3, r3, #572	; 0x23c
    8334:	ldr	r3, [r3]
    8338:	ldr	r1, [fp, #-24]	; 0xffffffe8
    833c:	mov	r0, r3
    8340:	bl	0 <coda_type_record_add_field>
    8344:	movw	r0, #0
    8348:	movt	r0, #0
    834c:	bl	0 <coda_type_record_field_new>
    8350:	str	r0, [fp, #-24]	; 0xffffffe8
    8354:	mrc	15, 0, r3, cr13, cr0, {3}
    8358:	ldr	r2, [pc, #344]	; 84b8 <rinex_init+0x80ac>
    835c:	ldr	r3, [r3, r2]
    8360:	add	r3, r3, #540	; 0x21c
    8364:	ldr	r3, [r3]
    8368:	mov	r1, r3
    836c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8370:	bl	0 <coda_type_record_field_set_type>
    8374:	mrc	15, 0, r3, cr13, cr0, {3}
    8378:	ldr	r2, [pc, #312]	; 84b8 <rinex_init+0x80ac>
    837c:	ldr	r3, [r3, r2]
    8380:	add	r3, r3, #572	; 0x23c
    8384:	ldr	r3, [r3]
    8388:	ldr	r1, [fp, #-24]	; 0xffffffe8
    838c:	mov	r0, r3
    8390:	bl	0 <coda_type_record_add_field>
    8394:	movw	r0, #0
    8398:	movt	r0, #0
    839c:	bl	0 <coda_type_record_field_new>
    83a0:	str	r0, [fp, #-24]	; 0xffffffe8
    83a4:	mrc	15, 0, r3, cr13, cr0, {3}
    83a8:	ldr	r2, [pc, #264]	; 84b8 <rinex_init+0x80ac>
    83ac:	ldr	r3, [r3, r2]
    83b0:	add	r3, r3, #544	; 0x220
    83b4:	ldr	r3, [r3]
    83b8:	mov	r1, r3
    83bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    83c0:	bl	0 <coda_type_record_field_set_type>
    83c4:	mrc	15, 0, r3, cr13, cr0, {3}
    83c8:	ldr	r2, [pc, #232]	; 84b8 <rinex_init+0x80ac>
    83cc:	ldr	r3, [r3, r2]
    83d0:	add	r3, r3, #572	; 0x23c
    83d4:	ldr	r3, [r3]
    83d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    83dc:	mov	r0, r3
    83e0:	bl	0 <coda_type_record_add_field>
    83e4:	movw	r0, #0
    83e8:	movt	r0, #0
    83ec:	bl	0 <coda_type_record_field_new>
    83f0:	str	r0, [fp, #-24]	; 0xffffffe8
    83f4:	mrc	15, 0, r3, cr13, cr0, {3}
    83f8:	ldr	r2, [pc, #184]	; 84b8 <rinex_init+0x80ac>
    83fc:	ldr	r3, [r3, r2]
    8400:	add	r3, r3, #548	; 0x224
    8404:	ldr	r3, [r3]
    8408:	mov	r1, r3
    840c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8410:	bl	0 <coda_type_record_field_set_type>
    8414:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8418:	bl	0 <coda_type_record_field_set_optional>
    841c:	mrc	15, 0, r3, cr13, cr0, {3}
    8420:	ldr	r2, [pc, #144]	; 84b8 <rinex_init+0x80ac>
    8424:	ldr	r3, [r3, r2]
    8428:	add	r3, r3, #572	; 0x23c
    842c:	ldr	r3, [r3]
    8430:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8434:	mov	r0, r3
    8438:	bl	0 <coda_type_record_add_field>
    843c:	movw	r0, #0
    8440:	movt	r0, #0
    8444:	bl	0 <coda_type_record_field_new>
    8448:	str	r0, [fp, #-24]	; 0xffffffe8
    844c:	mrc	15, 0, r3, cr13, cr0, {3}
    8450:	ldr	r2, [pc, #96]	; 84b8 <rinex_init+0x80ac>
    8454:	ldr	r3, [r3, r2]
    8458:	add	r3, r3, #552	; 0x228
    845c:	ldr	r3, [r3]
    8460:	mov	r1, r3
    8464:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8468:	bl	0 <coda_type_record_field_set_type>
    846c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8470:	bl	0 <coda_type_record_field_set_optional>
    8474:	mrc	15, 0, r3, cr13, cr0, {3}
    8478:	ldr	r2, [pc, #56]	; 84b8 <rinex_init+0x80ac>
    847c:	ldr	r3, [r3, r2]
    8480:	add	r3, r3, #572	; 0x23c
    8484:	ldr	r3, [r3]
    8488:	ldr	r1, [fp, #-24]	; 0xffffffe8
    848c:	mov	r0, r3
    8490:	bl	0 <coda_type_record_add_field>
    8494:	movw	r0, #0
    8498:	movt	r0, #0
    849c:	bl	0 <coda_type_record_field_new>
    84a0:	str	r0, [fp, #-24]	; 0xffffffe8
    84a4:	mrc	15, 0, r3, cr13, cr0, {3}
    84a8:	ldr	r2, [pc, #8]	; 84b8 <rinex_init+0x80ac>
    84ac:	ldr	r3, [r3, r2]
    84b0:	add	r3, r3, #556	; 0x22c
    84b4:	b	84c0 <rinex_init+0x80b4>
	...
    84c0:	ldr	r3, [r3]
    84c4:	mov	r1, r3
    84c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    84cc:	bl	0 <coda_type_record_field_set_type>
    84d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    84d4:	bl	0 <coda_type_record_field_set_optional>
    84d8:	mrc	15, 0, r3, cr13, cr0, {3}
    84dc:	ldr	r2, [pc, #-40]	; 84bc <rinex_init+0x80b0>
    84e0:	ldr	r3, [r3, r2]
    84e4:	add	r3, r3, #572	; 0x23c
    84e8:	ldr	r3, [r3]
    84ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    84f0:	mov	r0, r3
    84f4:	bl	0 <coda_type_record_add_field>
    84f8:	movw	r0, #0
    84fc:	movt	r0, #0
    8500:	bl	0 <coda_type_record_field_new>
    8504:	str	r0, [fp, #-24]	; 0xffffffe8
    8508:	mrc	15, 0, r3, cr13, cr0, {3}
    850c:	ldr	r2, [pc, #-88]	; 84bc <rinex_init+0x80b0>
    8510:	ldr	r3, [r3, r2]
    8514:	add	r3, r3, #560	; 0x230
    8518:	ldr	r3, [r3]
    851c:	mov	r1, r3
    8520:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8524:	bl	0 <coda_type_record_field_set_type>
    8528:	ldr	r0, [fp, #-24]	; 0xffffffe8
    852c:	bl	0 <coda_type_record_field_set_optional>
    8530:	mrc	15, 0, r3, cr13, cr0, {3}
    8534:	ldr	r2, [pc, #-128]	; 84bc <rinex_init+0x80b0>
    8538:	ldr	r3, [r3, r2]
    853c:	add	r3, r3, #572	; 0x23c
    8540:	ldr	r3, [r3]
    8544:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8548:	mov	r0, r3
    854c:	bl	0 <coda_type_record_add_field>
    8550:	movw	r0, #0
    8554:	movt	r0, #0
    8558:	bl	0 <coda_type_record_field_new>
    855c:	str	r0, [fp, #-24]	; 0xffffffe8
    8560:	mrc	15, 0, r3, cr13, cr0, {3}
    8564:	ldr	r2, [pc, #-176]	; 84bc <rinex_init+0x80b0>
    8568:	ldr	r3, [r3, r2]
    856c:	add	r3, r3, #564	; 0x234
    8570:	ldr	r3, [r3]
    8574:	mov	r1, r3
    8578:	ldr	r0, [fp, #-24]	; 0xffffffe8
    857c:	bl	0 <coda_type_record_field_set_type>
    8580:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8584:	bl	0 <coda_type_record_field_set_optional>
    8588:	mrc	15, 0, r3, cr13, cr0, {3}
    858c:	ldr	r2, [pc, #-216]	; 84bc <rinex_init+0x80b0>
    8590:	ldr	r3, [r3, r2]
    8594:	add	r3, r3, #572	; 0x23c
    8598:	ldr	r3, [r3]
    859c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    85a0:	mov	r0, r3
    85a4:	bl	0 <coda_type_record_add_field>
    85a8:	mov	r3, #0
    85ac:	mov	r0, r3
    85b0:	sub	sp, fp, #8
    85b4:	ldr	r4, [sp]
    85b8:	ldr	fp, [sp, #4]
    85bc:	add	sp, sp, #8
    85c0:	pop	{pc}		; (ldr pc, [sp], #4)

000085c4 <coda_rinex_done>:
    85c4:	str	fp, [sp, #-8]!
    85c8:	str	lr, [sp, #4]
    85cc:	add	fp, sp, #4
    85d0:	sub	sp, sp, #8
    85d4:	mrc	15, 0, r3, cr13, cr0, {3}
    85d8:	ldr	r2, [pc, #208]	; 86b0 <coda_rinex_done+0xec>
    85dc:	ldr	r3, [r3, r2]
    85e0:	cmp	r3, #0
    85e4:	beq	869c <coda_rinex_done+0xd8>
    85e8:	mov	r3, #0
    85ec:	str	r3, [fp, #-8]
    85f0:	b	8668 <coda_rinex_done+0xa4>
    85f4:	mrc	15, 0, r3, cr13, cr0, {3}
    85f8:	ldr	r2, [pc, #176]	; 86b0 <coda_rinex_done+0xec>
    85fc:	ldr	r2, [r3, r2]
    8600:	ldr	r3, [fp, #-8]
    8604:	lsl	r3, r3, #2
    8608:	add	r3, r2, r3
    860c:	ldr	r3, [r3]
    8610:	cmp	r3, #0
    8614:	beq	865c <coda_rinex_done+0x98>
    8618:	mrc	15, 0, r3, cr13, cr0, {3}
    861c:	ldr	r2, [pc, #140]	; 86b0 <coda_rinex_done+0xec>
    8620:	ldr	r2, [r3, r2]
    8624:	ldr	r3, [fp, #-8]
    8628:	lsl	r3, r3, #2
    862c:	add	r3, r2, r3
    8630:	ldr	r3, [r3]
    8634:	mov	r0, r3
    8638:	bl	0 <coda_type_release>
    863c:	mrc	15, 0, r3, cr13, cr0, {3}
    8640:	ldr	r2, [pc, #104]	; 86b0 <coda_rinex_done+0xec>
    8644:	ldr	r2, [r3, r2]
    8648:	ldr	r3, [fp, #-8]
    864c:	lsl	r3, r3, #2
    8650:	add	r3, r2, r3
    8654:	mov	r2, #0
    8658:	str	r2, [r3]
    865c:	ldr	r3, [fp, #-8]
    8660:	add	r3, r3, #1
    8664:	str	r3, [fp, #-8]
    8668:	ldr	r3, [fp, #-8]
    866c:	cmp	r3, #143	; 0x8f
    8670:	ble	85f4 <coda_rinex_done+0x30>
    8674:	mrc	15, 0, r3, cr13, cr0, {3}
    8678:	ldr	r2, [pc, #48]	; 86b0 <coda_rinex_done+0xec>
    867c:	ldr	r3, [r3, r2]
    8680:	mov	r0, r3
    8684:	bl	0 <free>
    8688:	mrc	15, 0, r3, cr13, cr0, {3}
    868c:	ldr	r2, [pc, #28]	; 86b0 <coda_rinex_done+0xec>
    8690:	mov	r1, #0
    8694:	str	r1, [r3, r2]
    8698:	b	86a0 <coda_rinex_done+0xdc>
    869c:	nop	{0}
    86a0:	sub	sp, fp, #4
    86a4:	ldr	fp, [sp]
    86a8:	add	sp, sp, #4
    86ac:	pop	{pc}		; (ldr pc, [sp], #4)
    86b0:	.word	0x00000000

000086b4 <rtrim>:
    86b4:	str	fp, [sp, #-8]!
    86b8:	str	lr, [sp, #4]
    86bc:	add	fp, sp, #4
    86c0:	sub	sp, sp, #16
    86c4:	str	r0, [fp, #-16]
    86c8:	ldr	r0, [fp, #-16]
    86cc:	bl	0 <strlen>
    86d0:	mov	r3, r0
    86d4:	str	r3, [fp, #-8]
    86d8:	b	8700 <rtrim+0x4c>
    86dc:	ldr	r3, [fp, #-8]
    86e0:	sub	r3, r3, #1
    86e4:	ldr	r2, [fp, #-16]
    86e8:	add	r3, r2, r3
    86ec:	mov	r2, #0
    86f0:	strb	r2, [r3]
    86f4:	ldr	r3, [fp, #-8]
    86f8:	sub	r3, r3, #1
    86fc:	str	r3, [fp, #-8]
    8700:	ldr	r3, [fp, #-8]
    8704:	cmp	r3, #0
    8708:	ble	8728 <rtrim+0x74>
    870c:	ldr	r3, [fp, #-8]
    8710:	sub	r3, r3, #1
    8714:	ldr	r2, [fp, #-16]
    8718:	add	r3, r2, r3
    871c:	ldrb	r3, [r3]
    8720:	cmp	r3, #32
    8724:	beq	86dc <rtrim+0x28>
    8728:	nop	{0}
    872c:	sub	sp, fp, #4
    8730:	ldr	fp, [sp]
    8734:	add	sp, sp, #4
    8738:	pop	{pc}		; (ldr pc, [sp], #4)

0000873c <get_line>:
    873c:	str	fp, [sp, #-8]!
    8740:	str	lr, [sp, #4]
    8744:	add	fp, sp, #4
    8748:	sub	sp, sp, #16
    874c:	str	r0, [fp, #-16]
    8750:	str	r1, [fp, #-20]	; 0xffffffec
    8754:	ldr	r2, [fp, #-16]
    8758:	mov	r1, #1000	; 0x3e8
    875c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8760:	bl	0 <fgets>
    8764:	mov	r3, r0
    8768:	cmp	r3, #0
    876c:	bne	87cc <get_line+0x90>
    8770:	ldr	r0, [fp, #-16]
    8774:	bl	0 <ferror>
    8778:	mov	r3, r0
    877c:	cmp	r3, #0
    8780:	beq	87b8 <get_line+0x7c>
    8784:	bl	0 <__errno_location>
    8788:	mov	r3, r0
    878c:	ldr	r3, [r3]
    8790:	mov	r0, r3
    8794:	bl	0 <strerror>
    8798:	mov	r3, r0
    879c:	mov	r2, r3
    87a0:	movw	r1, #0
    87a4:	movt	r1, #0
    87a8:	mvn	r0, #21
    87ac:	bl	0 <coda_set_error>
    87b0:	mvn	r3, #0
    87b4:	b	8878 <get_line+0x13c>
    87b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    87bc:	mov	r2, #0
    87c0:	strb	r2, [r3]
    87c4:	mov	r3, #0
    87c8:	b	8878 <get_line+0x13c>
    87cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    87d0:	bl	0 <strlen>
    87d4:	mov	r3, r0
    87d8:	str	r3, [fp, #-8]
    87dc:	ldr	r3, [fp, #-8]
    87e0:	cmp	r3, #0
    87e4:	ble	8828 <get_line+0xec>
    87e8:	ldr	r3, [fp, #-8]
    87ec:	sub	r3, r3, #1
    87f0:	ldr	r2, [fp, #-20]	; 0xffffffec
    87f4:	add	r3, r2, r3
    87f8:	ldrb	r3, [r3]
    87fc:	cmp	r3, #10
    8800:	bne	8828 <get_line+0xec>
    8804:	ldr	r3, [fp, #-8]
    8808:	sub	r3, r3, #1
    880c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8810:	add	r3, r2, r3
    8814:	mov	r2, #0
    8818:	strb	r2, [r3]
    881c:	ldr	r3, [fp, #-8]
    8820:	sub	r3, r3, #1
    8824:	str	r3, [fp, #-8]
    8828:	ldr	r3, [fp, #-8]
    882c:	cmp	r3, #0
    8830:	ble	8874 <get_line+0x138>
    8834:	ldr	r3, [fp, #-8]
    8838:	sub	r3, r3, #1
    883c:	ldr	r2, [fp, #-20]	; 0xffffffec
    8840:	add	r3, r2, r3
    8844:	ldrb	r3, [r3]
    8848:	cmp	r3, #13
    884c:	bne	8874 <get_line+0x138>
    8850:	ldr	r3, [fp, #-8]
    8854:	sub	r3, r3, #1
    8858:	ldr	r2, [fp, #-20]	; 0xffffffec
    885c:	add	r3, r2, r3
    8860:	mov	r2, #0
    8864:	strb	r2, [r3]
    8868:	ldr	r3, [fp, #-8]
    886c:	sub	r3, r3, #1
    8870:	str	r3, [fp, #-8]
    8874:	ldr	r3, [fp, #-8]
    8878:	mov	r0, r3
    887c:	sub	sp, fp, #4
    8880:	ldr	fp, [sp]
    8884:	add	sp, sp, #4
    8888:	pop	{pc}		; (ldr pc, [sp], #4)

0000888c <read_main_header>:
    888c:	str	fp, [sp, #-8]!
    8890:	str	lr, [sp, #4]
    8894:	add	fp, sp, #4
    8898:	sub	sp, sp, #1024	; 0x400
    889c:	str	r0, [fp, #-1016]	; 0xfffffc08
    88a0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    88a4:	ldr	r3, [r3]
    88a8:	mov	r0, r3
    88ac:	bl	0 <ftell>
    88b0:	mov	r2, r0
    88b4:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    88b8:	str	r2, [r3, #128]	; 0x80
    88bc:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    88c0:	ldr	r3, [r3, #124]	; 0x7c
    88c4:	add	r2, r3, #1
    88c8:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    88cc:	str	r2, [r3, #124]	; 0x7c
    88d0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    88d4:	ldr	r3, [r3]
    88d8:	sub	r2, fp, #1012	; 0x3f4
    88dc:	mov	r1, r2
    88e0:	mov	r0, r3
    88e4:	bl	873c <get_line>
    88e8:	str	r0, [fp, #-8]
    88ec:	ldr	r3, [fp, #-8]
    88f0:	cmp	r3, #0
    88f4:	bge	8900 <read_main_header+0x74>
    88f8:	mvn	r3, #0
    88fc:	b	8cb4 <read_main_header+0x428>
    8900:	ldr	r3, [fp, #-8]
    8904:	cmp	r3, #60	; 0x3c
    8908:	bgt	8940 <read_main_header+0xb4>
    890c:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8910:	ldr	r2, [r3, #124]	; 0x7c
    8914:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8918:	ldr	r3, [r3, #128]	; 0x80
    891c:	str	r3, [sp]
    8920:	mov	r3, r2
    8924:	ldr	r2, [fp, #-8]
    8928:	movw	r1, #0
    892c:	movt	r1, #0
    8930:	mvn	r0, #21
    8934:	bl	0 <coda_set_error>
    8938:	mvn	r3, #0
    893c:	b	8cb4 <read_main_header+0x428>
    8940:	sub	r3, fp, #1012	; 0x3f4
    8944:	add	r3, r3, #60	; 0x3c
    8948:	mov	r2, #20
    894c:	movw	r1, #0
    8950:	movt	r1, #0
    8954:	mov	r0, r3
    8958:	bl	0 <strncmp>
    895c:	mov	r3, r0
    8960:	cmp	r3, #0
    8964:	beq	89a4 <read_main_header+0x118>
    8968:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    896c:	ldr	r1, [r3, #124]	; 0x7c
    8970:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8974:	ldr	r3, [r3, #128]	; 0x80
    8978:	add	r3, r3, #60	; 0x3c
    897c:	sub	r2, fp, #1012	; 0x3f4
    8980:	add	r2, r2, #60	; 0x3c
    8984:	str	r3, [sp]
    8988:	mov	r3, r1
    898c:	movw	r1, #0
    8990:	movt	r1, #0
    8994:	mvn	r0, #21
    8998:	bl	0 <coda_set_error>
    899c:	mvn	r3, #0
    89a0:	b	8cb4 <read_main_header+0x428>
    89a4:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    89a8:	add	r2, r3, #112	; 0x70
    89ac:	sub	r0, fp, #1012	; 0x3f4
    89b0:	mov	r3, #0
    89b4:	mov	r1, #9
    89b8:	bl	0 <coda_ascii_parse_double>
    89bc:	mov	r3, r0
    89c0:	cmp	r3, #0
    89c4:	bge	89f0 <read_main_header+0x164>
    89c8:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    89cc:	ldr	r1, [r3, #124]	; 0x7c
    89d0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    89d4:	ldr	r3, [r3, #128]	; 0x80
    89d8:	mov	r2, r3
    89dc:	movw	r0, #0
    89e0:	movt	r0, #0
    89e4:	bl	0 <coda_add_error_message>
    89e8:	mvn	r3, #0
    89ec:	b	8cb4 <read_main_header+0x428>
    89f0:	ldrb	r2, [fp, #-992]	; 0xfffffc20
    89f4:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    89f8:	strb	r2, [r3, #120]	; 0x78
    89fc:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8a00:	ldrb	r3, [r3, #120]	; 0x78
    8a04:	cmp	r3, #78	; 0x4e
    8a08:	beq	8a88 <read_main_header+0x1fc>
    8a0c:	cmp	r3, #79	; 0x4f
    8a10:	beq	8a20 <read_main_header+0x194>
    8a14:	cmp	r3, #67	; 0x43
    8a18:	beq	8af0 <read_main_header+0x264>
    8a1c:	b	8b70 <read_main_header+0x2e4>
    8a20:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8a24:	vldr	d7, [r3, #112]	; 0x70
    8a28:	vldr	d6, [pc, #664]	; 8cc8 <read_main_header+0x43c>
    8a2c:	vcmp.f64	d7, d6
    8a30:	vmrs	APSR_nzcv, fpscr
    8a34:	beq	8a58 <read_main_header+0x1cc>
    8a38:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8a3c:	ldrd	r2, [r3, #112]	; 0x70
    8a40:	movw	r1, #0
    8a44:	movt	r1, #0
    8a48:	mvn	r0, #199	; 0xc7
    8a4c:	bl	0 <coda_set_error>
    8a50:	mvn	r3, #0
    8a54:	b	8cb4 <read_main_header+0x428>
    8a58:	mrc	15, 0, r3, cr13, cr0, {3}
    8a5c:	ldr	r2, [pc, #628]	; 8cd8 <read_main_header+0x44c>
    8a60:	ldr	r3, [r3, r2]
    8a64:	add	r3, r3, #212	; 0xd4
    8a68:	ldr	r3, [r3]
    8a6c:	mov	r1, #0
    8a70:	mov	r0, r3
    8a74:	bl	0 <coda_mem_record_new>
    8a78:	mov	r2, r0
    8a7c:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8a80:	str	r2, [r3, #8]
    8a84:	b	8b94 <read_main_header+0x308>
    8a88:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8a8c:	vldr	d7, [r3, #112]	; 0x70
    8a90:	vldr	d6, [pc, #560]	; 8cc8 <read_main_header+0x43c>
    8a94:	vcmp.f64	d7, d6
    8a98:	vmrs	APSR_nzcv, fpscr
    8a9c:	beq	8ac0 <read_main_header+0x234>
    8aa0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8aa4:	ldrd	r2, [r3, #112]	; 0x70
    8aa8:	movw	r1, #0
    8aac:	movt	r1, #0
    8ab0:	mvn	r0, #199	; 0xc7
    8ab4:	bl	0 <coda_set_error>
    8ab8:	mvn	r3, #0
    8abc:	b	8cb4 <read_main_header+0x428>
    8ac0:	mrc	15, 0, r3, cr13, cr0, {3}
    8ac4:	ldr	r2, [pc, #524]	; 8cd8 <read_main_header+0x44c>
    8ac8:	ldr	r3, [r3, r2]
    8acc:	add	r3, r3, #508	; 0x1fc
    8ad0:	ldr	r3, [r3]
    8ad4:	mov	r1, #0
    8ad8:	mov	r0, r3
    8adc:	bl	0 <coda_mem_record_new>
    8ae0:	mov	r2, r0
    8ae4:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8ae8:	str	r2, [r3, #8]
    8aec:	b	8b94 <read_main_header+0x308>
    8af0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8af4:	vldr	d7, [r3, #112]	; 0x70
    8af8:	vldr	d6, [pc, #464]	; 8cd0 <read_main_header+0x444>
    8afc:	vcmp.f64	d7, d6
    8b00:	vmrs	APSR_nzcv, fpscr
    8b04:	beq	8b40 <read_main_header+0x2b4>
    8b08:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8b0c:	vldr	d7, [r3, #112]	; 0x70
    8b10:	vldr	d6, [pc, #432]	; 8cc8 <read_main_header+0x43c>
    8b14:	vcmp.f64	d7, d6
    8b18:	vmrs	APSR_nzcv, fpscr
    8b1c:	beq	8b40 <read_main_header+0x2b4>
    8b20:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8b24:	ldrd	r2, [r3, #112]	; 0x70
    8b28:	movw	r1, #0
    8b2c:	movt	r1, #0
    8b30:	mvn	r0, #199	; 0xc7
    8b34:	bl	0 <coda_set_error>
    8b38:	mvn	r3, #0
    8b3c:	b	8cb4 <read_main_header+0x428>
    8b40:	mrc	15, 0, r3, cr13, cr0, {3}
    8b44:	ldr	r2, [pc, #396]	; 8cd8 <read_main_header+0x44c>
    8b48:	ldr	r3, [r3, r2]
    8b4c:	add	r3, r3, #568	; 0x238
    8b50:	ldr	r3, [r3]
    8b54:	mov	r1, #0
    8b58:	mov	r0, r3
    8b5c:	bl	0 <coda_mem_record_new>
    8b60:	mov	r2, r0
    8b64:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8b68:	str	r2, [r3, #8]
    8b6c:	b	8b94 <read_main_header+0x308>
    8b70:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8b74:	ldrb	r3, [r3, #120]	; 0x78
    8b78:	mov	r2, r3
    8b7c:	movw	r1, #0
    8b80:	movt	r1, #0
    8b84:	mvn	r0, #199	; 0xc7
    8b88:	bl	0 <coda_set_error>
    8b8c:	mvn	r3, #0
    8b90:	b	8cb4 <read_main_header+0x428>
    8b94:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8b98:	vldr	d7, [r3, #112]	; 0x70
    8b9c:	vldr	d6, [pc, #292]	; 8cc8 <read_main_header+0x43c>
    8ba0:	vcmp.f64	d7, d6
    8ba4:	vmrs	APSR_nzcv, fpscr
    8ba8:	bne	8bbc <read_main_header+0x330>
    8bac:	ldrb	r2, [fp, #-972]	; 0xfffffc34
    8bb0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8bb4:	strb	r2, [r3, #121]	; 0x79
    8bb8:	b	8bc8 <read_main_header+0x33c>
    8bbc:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8bc0:	mov	r2, #71	; 0x47
    8bc4:	strb	r2, [r3, #121]	; 0x79
    8bc8:	mrc	15, 0, r3, cr13, cr0, {3}
    8bcc:	ldr	r2, [pc, #260]	; 8cd8 <read_main_header+0x44c>
    8bd0:	ldr	r3, [r3, r2]
    8bd4:	ldr	r0, [r3]
    8bd8:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8bdc:	ldr	r2, [r3, #4]
    8be0:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8be4:	vldr	d7, [r3, #112]	; 0x70
    8be8:	vcvt.f32.f64	s15, d7
    8bec:	vmov.f32	s0, s15
    8bf0:	mov	r1, #0
    8bf4:	bl	0 <coda_mem_float_new>
    8bf8:	str	r0, [fp, #-12]
    8bfc:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c00:	ldr	r0, [r3, #8]
    8c04:	mov	r3, #0
    8c08:	ldr	r2, [fp, #-12]
    8c0c:	movw	r1, #0
    8c10:	movt	r1, #0
    8c14:	bl	0 <coda_mem_record_add_field>
    8c18:	mrc	15, 0, r3, cr13, cr0, {3}
    8c1c:	ldr	r2, [pc, #180]	; 8cd8 <read_main_header+0x44c>
    8c20:	ldr	r3, [r3, r2]
    8c24:	add	r3, r3, #4
    8c28:	ldr	r0, [r3]
    8c2c:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c30:	ldr	r2, [r3, #4]
    8c34:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c38:	ldrb	r3, [r3, #120]	; 0x78
    8c3c:	mov	r1, #0
    8c40:	bl	0 <coda_mem_char_new>
    8c44:	str	r0, [fp, #-12]
    8c48:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c4c:	ldr	r0, [r3, #8]
    8c50:	mov	r3, #0
    8c54:	ldr	r2, [fp, #-12]
    8c58:	movw	r1, #0
    8c5c:	movt	r1, #0
    8c60:	bl	0 <coda_mem_record_add_field>
    8c64:	mrc	15, 0, r3, cr13, cr0, {3}
    8c68:	ldr	r2, [pc, #104]	; 8cd8 <read_main_header+0x44c>
    8c6c:	ldr	r3, [r3, r2]
    8c70:	add	r3, r3, #8
    8c74:	ldr	r0, [r3]
    8c78:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c7c:	ldr	r2, [r3, #4]
    8c80:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c84:	ldrb	r3, [r3, #121]	; 0x79
    8c88:	mov	r1, #0
    8c8c:	bl	0 <coda_mem_char_new>
    8c90:	str	r0, [fp, #-12]
    8c94:	ldr	r3, [fp, #-1016]	; 0xfffffc08
    8c98:	ldr	r0, [r3, #8]
    8c9c:	mov	r3, #0
    8ca0:	ldr	r2, [fp, #-12]
    8ca4:	movw	r1, #0
    8ca8:	movt	r1, #0
    8cac:	bl	0 <coda_mem_record_add_field>
    8cb0:	mov	r3, #0
    8cb4:	mov	r0, r3
    8cb8:	sub	sp, fp, #4
    8cbc:	ldr	fp, [sp]
    8cc0:	add	sp, sp, #4
    8cc4:	pop	{pc}		; (ldr pc, [sp], #4)
    8cc8:	.word	0x00000000
    8ccc:	.word	0x40080000
    8cd0:	.word	0x00000000
    8cd4:	.word	0x40000000
    8cd8:	.word	0x00000000

00008cdc <handle_observation_definition>:
    8cdc:	strd	r4, [sp, #-28]!	; 0xffffffe4
    8ce0:	strd	r6, [sp, #8]
    8ce4:	str	r8, [sp, #16]
    8ce8:	str	fp, [sp, #20]
    8cec:	str	lr, [sp, #24]
    8cf0:	add	fp, sp, #24
    8cf4:	sub	sp, sp, #76	; 0x4c
    8cf8:	str	r0, [fp, #-88]	; 0xffffffa8
    8cfc:	str	r1, [fp, #-92]	; 0xffffffa4
    8d00:	mov	r3, #0
    8d04:	str	r3, [fp, #-36]	; 0xffffffdc
    8d08:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8d0c:	ldrb	r3, [r3]
    8d10:	sub	r3, r3, #69	; 0x45
    8d14:	cmp	r3, #14
    8d18:	ldrls	pc, [pc, r3, lsl #2]
    8d1c:	b	8dcc <handle_observation_definition+0xf0>
    8d20:	.word	0x00008d94
    8d24:	.word	0x00008dcc
    8d28:	.word	0x00008d5c
    8d2c:	.word	0x00008dcc
    8d30:	.word	0x00008dcc
    8d34:	.word	0x00008dcc
    8d38:	.word	0x00008dcc
    8d3c:	.word	0x00008dcc
    8d40:	.word	0x00008dcc
    8d44:	.word	0x00008dcc
    8d48:	.word	0x00008dcc
    8d4c:	.word	0x00008dcc
    8d50:	.word	0x00008dcc
    8d54:	.word	0x00008d78
    8d58:	.word	0x00008db0
    8d5c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8d60:	add	r3, r3, #12
    8d64:	str	r3, [fp, #-32]	; 0xffffffe0
    8d68:	movw	r3, #0
    8d6c:	movt	r3, #0
    8d70:	str	r3, [fp, #-36]	; 0xffffffdc
    8d74:	b	8df4 <handle_observation_definition+0x118>
    8d78:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8d7c:	add	r3, r3, #36	; 0x24
    8d80:	str	r3, [fp, #-32]	; 0xffffffe0
    8d84:	movw	r3, #0
    8d88:	movt	r3, #0
    8d8c:	str	r3, [fp, #-36]	; 0xffffffdc
    8d90:	b	8df4 <handle_observation_definition+0x118>
    8d94:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8d98:	add	r3, r3, #60	; 0x3c
    8d9c:	str	r3, [fp, #-32]	; 0xffffffe0
    8da0:	movw	r3, #0
    8da4:	movt	r3, #0
    8da8:	str	r3, [fp, #-36]	; 0xffffffdc
    8dac:	b	8df4 <handle_observation_definition+0x118>
    8db0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8db4:	add	r3, r3, #84	; 0x54
    8db8:	str	r3, [fp, #-32]	; 0xffffffe0
    8dbc:	movw	r3, #0
    8dc0:	movt	r3, #0
    8dc4:	str	r3, [fp, #-36]	; 0xffffffdc
    8dc8:	b	8df4 <handle_observation_definition+0x118>
    8dcc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8dd0:	ldr	r2, [r3, #124]	; 0x7c
    8dd4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8dd8:	ldr	r3, [r3, #128]	; 0x80
    8ddc:	movw	r1, #0
    8de0:	movt	r1, #0
    8de4:	mvn	r0, #21
    8de8:	bl	0 <coda_set_error>
    8dec:	mvn	r3, #0
    8df0:	b	93f4 <handle_observation_definition+0x718>
    8df4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8df8:	ldr	r3, [r3, #8]
    8dfc:	cmp	r3, #0
    8e00:	beq	8e44 <handle_observation_definition+0x168>
    8e04:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8e08:	ldrb	r3, [r3]
    8e0c:	mov	r1, r3
    8e10:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8e14:	ldr	r2, [r3, #124]	; 0x7c
    8e18:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8e1c:	ldr	r3, [r3, #128]	; 0x80
    8e20:	str	r3, [sp]
    8e24:	mov	r3, r2
    8e28:	mov	r2, r1
    8e2c:	movw	r1, #0
    8e30:	movt	r1, #0
    8e34:	mvn	r0, #21
    8e38:	bl	0 <coda_set_error>
    8e3c:	mvn	r3, #0
    8e40:	b	93f4 <handle_observation_definition+0x718>
    8e44:	mov	r0, #8
    8e48:	bl	0 <coda_type_record_new>
    8e4c:	mov	r2, r0
    8e50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8e54:	str	r2, [r3, #8]
    8e58:	movw	r0, #0
    8e5c:	movt	r0, #0
    8e60:	bl	0 <coda_type_record_field_new>
    8e64:	str	r0, [fp, #-48]	; 0xffffffd0
    8e68:	mrc	15, 0, r3, cr13, cr0, {3}
    8e6c:	ldr	r2, [pc, #1440]	; 9414 <handle_observation_definition+0x738>
    8e70:	ldr	r3, [r3, r2]
    8e74:	add	r3, r3, #192	; 0xc0
    8e78:	ldr	r3, [r3]
    8e7c:	mov	r1, r3
    8e80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    8e84:	bl	0 <coda_type_record_field_set_type>
    8e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8e8c:	ldr	r3, [r3, #8]
    8e90:	ldr	r1, [fp, #-48]	; 0xffffffd0
    8e94:	mov	r0, r3
    8e98:	bl	0 <coda_type_record_add_field>
    8e9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8ea0:	add	r0, r3, #3
    8ea4:	sub	r2, fp, #76	; 0x4c
    8ea8:	mov	r3, #0
    8eac:	mov	r1, #3
    8eb0:	bl	0 <coda_ascii_parse_int64>
    8eb4:	mov	r3, r0
    8eb8:	cmp	r3, #0
    8ebc:	bge	8eec <handle_observation_definition+0x210>
    8ec0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8ec4:	ldr	r1, [r3, #124]	; 0x7c
    8ec8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8ecc:	ldr	r3, [r3, #128]	; 0x80
    8ed0:	add	r3, r3, #3
    8ed4:	mov	r2, r3
    8ed8:	movw	r0, #0
    8edc:	movt	r0, #0
    8ee0:	bl	0 <coda_add_error_message>
    8ee4:	mvn	r3, #0
    8ee8:	b	93f4 <handle_observation_definition+0x718>
    8eec:	mrc	15, 0, r3, cr13, cr0, {3}
    8ef0:	ldr	r2, [pc, #1308]	; 9414 <handle_observation_definition+0x738>
    8ef4:	ldr	r3, [r3, r2]
    8ef8:	add	r3, r3, #124	; 0x7c
    8efc:	ldr	r3, [r3]
    8f00:	mov	r1, #0
    8f04:	mov	r0, r3
    8f08:	bl	0 <coda_mem_record_new>
    8f0c:	str	r0, [fp, #-52]	; 0xffffffcc
    8f10:	mrc	15, 0, r3, cr13, cr0, {3}
    8f14:	ldr	r2, [pc, #1272]	; 9414 <handle_observation_definition+0x738>
    8f18:	ldr	r3, [r3, r2]
    8f1c:	add	r3, r3, #108	; 0x6c
    8f20:	ldr	r0, [r3]
    8f24:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8f28:	ldr	r2, [r3, #4]
    8f2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
    8f30:	ldrb	r3, [r3]
    8f34:	mov	r1, #0
    8f38:	bl	0 <coda_mem_char_new>
    8f3c:	str	r0, [fp, #-56]	; 0xffffffc8
    8f40:	mov	r3, #0
    8f44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8f48:	movw	r1, #0
    8f4c:	movt	r1, #0
    8f50:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8f54:	bl	0 <coda_mem_record_add_field>
    8f58:	mrc	15, 0, r3, cr13, cr0, {3}
    8f5c:	ldr	r2, [pc, #1200]	; 9414 <handle_observation_definition+0x738>
    8f60:	ldr	r3, [r3, r2]
    8f64:	add	r3, r3, #112	; 0x70
    8f68:	ldr	r0, [r3]
    8f6c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    8f70:	ldr	r1, [r3, #4]
    8f74:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    8f78:	sxth	r3, r2
    8f7c:	mov	r2, r1
    8f80:	mov	r1, #0
    8f84:	bl	0 <coda_mem_int16_new>
    8f88:	str	r0, [fp, #-56]	; 0xffffffc8
    8f8c:	mov	r3, #0
    8f90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8f94:	movw	r1, #0
    8f98:	movt	r1, #0
    8f9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    8fa0:	bl	0 <coda_mem_record_add_field>
    8fa4:	mrc	15, 0, r3, cr13, cr0, {3}
    8fa8:	ldr	r2, [pc, #1124]	; 9414 <handle_observation_definition+0x738>
    8fac:	ldr	r3, [r3, r2]
    8fb0:	add	r3, r3, #120	; 0x78
    8fb4:	ldr	r3, [r3]
    8fb8:	mov	r1, #0
    8fbc:	mov	r0, r3
    8fc0:	bl	0 <coda_mem_array_new>
    8fc4:	str	r0, [fp, #-60]	; 0xffffffc4
    8fc8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    8fcc:	mov	r3, r2
    8fd0:	lsl	r3, r3, #2
    8fd4:	mov	r0, r3
    8fd8:	bl	0 <malloc>
    8fdc:	mov	r3, r0
    8fe0:	mov	r2, r3
    8fe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8fe8:	str	r2, [r3, #4]
    8fec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8ff0:	ldr	r3, [r3, #4]
    8ff4:	cmp	r3, #0
    8ff8:	bne	9030 <handle_observation_definition+0x354>
    8ffc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    9000:	mov	r3, r2
    9004:	lsl	r2, r3, #2
    9008:	movw	r3, #1910	; 0x776
    900c:	str	r3, [sp]
    9010:	movw	r3, #0
    9014:	movt	r3, #0
    9018:	movw	r1, #0
    901c:	movt	r1, #0
    9020:	mvn	r0, #0
    9024:	bl	0 <coda_set_error>
    9028:	mvn	r3, #0
    902c:	b	93f4 <handle_observation_definition+0x718>
    9030:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    9034:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9038:	str	r2, [r3]
    903c:	mov	r3, #0
    9040:	str	r3, [fp, #-40]	; 0xffffffd8
    9044:	b	9070 <handle_observation_definition+0x394>
    9048:	ldr	r3, [fp, #-32]	; 0xffffffe0
    904c:	ldr	r2, [r3, #4]
    9050:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9054:	lsl	r3, r3, #2
    9058:	add	r3, r2, r3
    905c:	mov	r2, #0
    9060:	str	r2, [r3]
    9064:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9068:	add	r3, r3, #1
    906c:	str	r3, [fp, #-40]	; 0xffffffd8
    9070:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9074:	mov	r0, r3
    9078:	asr	r1, r0, #31
    907c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    9080:	cmp	r0, r2
    9084:	sbcs	r3, r1, r3
    9088:	blt	9048 <handle_observation_definition+0x36c>
    908c:	mov	r3, #0
    9090:	str	r3, [fp, #-40]	; 0xffffffd8
    9094:	b	9330 <handle_observation_definition+0x654>
    9098:	ldr	r2, [fp, #-40]	; 0xffffffd8
    909c:	movw	r3, #60495	; 0xec4f
    90a0:	movt	r3, #20164	; 0x4ec4
    90a4:	smull	r1, r3, r3, r2
    90a8:	asr	r1, r3, #2
    90ac:	asr	r3, r2, #31
    90b0:	sub	r3, r1, r3
    90b4:	mov	r1, #13
    90b8:	mul	r3, r1, r3
    90bc:	sub	r3, r2, r3
    90c0:	cmp	r3, #0
    90c4:	bne	91ec <handle_observation_definition+0x510>
    90c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    90cc:	cmp	r3, #0
    90d0:	ble	91ec <handle_observation_definition+0x510>
    90d4:	mov	r3, #58	; 0x3a
    90d8:	str	r3, [fp, #-44]	; 0xffffffd4
    90dc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    90e0:	ldr	r3, [r3]
    90e4:	mov	r0, r3
    90e8:	bl	0 <ftell>
    90ec:	mov	r2, r0
    90f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    90f4:	str	r2, [r3, #128]	; 0x80
    90f8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    90fc:	ldr	r3, [r3, #124]	; 0x7c
    9100:	add	r2, r3, #1
    9104:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9108:	str	r2, [r3, #124]	; 0x7c
    910c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9110:	ldr	r3, [r3]
    9114:	ldr	r1, [fp, #-92]	; 0xffffffa4
    9118:	mov	r0, r3
    911c:	bl	873c <get_line>
    9120:	str	r0, [fp, #-64]	; 0xffffffc0
    9124:	ldr	r3, [fp, #-64]	; 0xffffffc0
    9128:	cmp	r3, #0
    912c:	bge	9148 <handle_observation_definition+0x46c>
    9130:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9134:	bl	0 <coda_dynamic_type_delete>
    9138:	ldr	r0, [fp, #-60]	; 0xffffffc4
    913c:	bl	0 <coda_dynamic_type_delete>
    9140:	mvn	r3, #0
    9144:	b	93f4 <handle_observation_definition+0x718>
    9148:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    914c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9150:	mov	r2, r3
    9154:	asr	r3, r2, #31
    9158:	subs	r4, r0, r2
    915c:	sbc	r5, r1, r3
    9160:	cmp	r4, #13
    9164:	sbcs	r3, r5, #0
    9168:	bge	91a8 <handle_observation_definition+0x4cc>
    916c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    9170:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9174:	mov	r2, r3
    9178:	asr	r3, r2, #31
    917c:	subs	r6, r0, r2
    9180:	sbc	r7, r1, r3
    9184:	mov	r2, #13
    9188:	mov	r3, #0
    918c:	mov	r0, r6
    9190:	mov	r1, r7
    9194:	bl	0 <__aeabi_ldivmod>
    9198:	mov	r3, r2
    919c:	lsl	r3, r3, #2
    91a0:	add	r3, r3, #6
    91a4:	str	r3, [fp, #-44]	; 0xffffffd4
    91a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    91ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    91b0:	cmp	r2, r3
    91b4:	bge	91ec <handle_observation_definition+0x510>
    91b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
    91bc:	ldr	r2, [r3, #124]	; 0x7c
    91c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
    91c4:	ldr	r3, [r3, #128]	; 0x80
    91c8:	str	r3, [sp]
    91cc:	mov	r3, r2
    91d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    91d4:	movw	r1, #0
    91d8:	movt	r1, #0
    91dc:	mvn	r0, #21
    91e0:	bl	0 <coda_set_error>
    91e4:	mvn	r3, #0
    91e8:	b	93f4 <handle_observation_definition+0x718>
    91ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    91f0:	movw	r3, #60495	; 0xec4f
    91f4:	movt	r3, #20164	; 0x4ec4
    91f8:	smull	r1, r3, r3, r2
    91fc:	asr	r1, r3, #2
    9200:	asr	r3, r2, #31
    9204:	sub	r3, r1, r3
    9208:	mov	r1, #13
    920c:	mul	r3, r1, r3
    9210:	sub	r3, r2, r3
    9214:	lsl	r3, r3, #2
    9218:	add	r3, r3, #7
    921c:	ldr	r2, [fp, #-92]	; 0xffffffa4
    9220:	add	r1, r2, r3
    9224:	sub	r3, fp, #80	; 0x50
    9228:	mov	r2, #3
    922c:	mov	r0, r3
    9230:	bl	0 <memcpy>
    9234:	mov	r3, #0
    9238:	strb	r3, [fp, #-77]	; 0xffffffb3
    923c:	mrc	15, 0, r3, cr13, cr0, {3}
    9240:	ldr	r2, [pc, #460]	; 9414 <handle_observation_definition+0x738>
    9244:	ldr	r3, [r3, r2]
    9248:	add	r3, r3, #116	; 0x74
    924c:	ldr	r0, [r3]
    9250:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9254:	ldr	r2, [r3, #4]
    9258:	sub	r3, fp, #80	; 0x50
    925c:	mov	r1, #0
    9260:	bl	0 <coda_mem_string_new>
    9264:	str	r0, [fp, #-56]	; 0xffffffc8
    9268:	ldr	r1, [fp, #-56]	; 0xffffffc8
    926c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    9270:	bl	0 <coda_mem_array_add_element>
    9274:	sub	r3, fp, #80	; 0x50
    9278:	mov	r0, r3
    927c:	bl	0 <coda_type_record_field_new>
    9280:	str	r0, [fp, #-48]	; 0xffffffd0
    9284:	mrc	15, 0, r3, cr13, cr0, {3}
    9288:	ldr	r2, [pc, #388]	; 9414 <handle_observation_definition+0x738>
    928c:	ldr	r3, [r3, r2]
    9290:	add	r3, r3, #208	; 0xd0
    9294:	ldr	r3, [r3]
    9298:	mov	r1, r3
    929c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    92a0:	bl	0 <coda_type_record_field_set_type>
    92a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    92a8:	ldr	r3, [r3, #8]
    92ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
    92b0:	mov	r0, r3
    92b4:	bl	0 <coda_type_record_add_field>
    92b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    92bc:	ldr	r2, [r3, #4]
    92c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92c4:	lsl	r3, r3, #2
    92c8:	add	r8, r2, r3
    92cc:	sub	r3, fp, #80	; 0x50
    92d0:	mov	r0, r3
    92d4:	bl	0 <strdup>
    92d8:	mov	r3, r0
    92dc:	str	r3, [r8]
    92e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    92e4:	ldr	r2, [r3, #4]
    92e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92ec:	lsl	r3, r3, #2
    92f0:	add	r3, r2, r3
    92f4:	ldr	r3, [r3]
    92f8:	cmp	r3, #0
    92fc:	bne	9324 <handle_observation_definition+0x648>
    9300:	movw	r3, #1963	; 0x7ab
    9304:	movw	r2, #0
    9308:	movt	r2, #0
    930c:	movw	r1, #0
    9310:	movt	r1, #0
    9314:	mvn	r0, #0
    9318:	bl	0 <coda_set_error>
    931c:	mvn	r3, #0
    9320:	b	93f4 <handle_observation_definition+0x718>
    9324:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9328:	add	r3, r3, #1
    932c:	str	r3, [fp, #-40]	; 0xffffffd8
    9330:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9334:	mov	r0, r3
    9338:	asr	r1, r0, #31
    933c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    9340:	cmp	r0, r2
    9344:	sbcs	r3, r1, r3
    9348:	blt	9098 <handle_observation_definition+0x3bc>
    934c:	mov	r3, #0
    9350:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9354:	movw	r1, #0
    9358:	movt	r1, #0
    935c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    9360:	bl	0 <coda_mem_record_add_field>
    9364:	ldr	r3, [fp, #-88]	; 0xffffffa8
    9368:	ldr	r3, [r3, #140]	; 0x8c
    936c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    9370:	mov	r0, r3
    9374:	bl	0 <coda_mem_array_add_element>
    9378:	mov	r0, #8
    937c:	bl	0 <coda_type_array_new>
    9380:	mov	r2, r0
    9384:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9388:	str	r2, [r3, #12]
    938c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9390:	ldr	r3, [r3, #12]
    9394:	mov	r1, #0
    9398:	mov	r0, r3
    939c:	bl	0 <coda_type_array_add_variable_dimension>
    93a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    93a4:	ldr	r2, [r3, #12]
    93a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    93ac:	ldr	r3, [r3, #8]
    93b0:	mov	r1, r3
    93b4:	mov	r0, r2
    93b8:	bl	0 <coda_type_array_set_base_type>
    93bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    93c0:	bl	0 <coda_type_record_field_new>
    93c4:	str	r0, [fp, #-48]	; 0xffffffd0
    93c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    93cc:	ldr	r3, [r3, #12]
    93d0:	mov	r1, r3
    93d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    93d8:	bl	0 <coda_type_record_field_set_type>
    93dc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    93e0:	ldr	r3, [r3, #132]	; 0x84
    93e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    93e8:	mov	r0, r3
    93ec:	bl	0 <coda_type_record_add_field>
    93f0:	mov	r3, #0
    93f4:	mov	r0, r3
    93f8:	sub	sp, fp, #24
    93fc:	ldrd	r4, [sp]
    9400:	ldrd	r6, [sp, #8]
    9404:	ldr	r8, [sp, #16]
    9408:	ldr	fp, [sp, #20]
    940c:	add	sp, sp, #24
    9410:	pop	{pc}		; (ldr pc, [sp], #4)
    9414:	.word	0x00000000

00009418 <read_observation_header>:
    9418:	str	fp, [sp, #-8]!
    941c:	str	lr, [sp, #4]
    9420:	add	fp, sp, #4
    9424:	sub	sp, sp, #1120	; 0x460
    9428:	str	r0, [fp, #-1112]	; 0xfffffba8
    942c:	mrc	15, 0, r3, cr13, cr0, {3}
    9430:	ldr	r2, [pc, #4012]	; a3e4 <read_observation_header+0xfcc>
    9434:	ldr	r3, [r3, r2]
    9438:	add	r3, r3, #128	; 0x80
    943c:	ldr	r3, [r3]
    9440:	mov	r1, #0
    9444:	mov	r0, r3
    9448:	bl	0 <coda_mem_array_new>
    944c:	mov	r2, r0
    9450:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9454:	str	r2, [r3, #140]	; 0x8c
    9458:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    945c:	ldr	r3, [r3]
    9460:	mov	r0, r3
    9464:	bl	0 <ftell>
    9468:	mov	r2, r0
    946c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9470:	str	r2, [r3, #128]	; 0x80
    9474:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9478:	ldr	r3, [r3, #124]	; 0x7c
    947c:	add	r2, r3, #1
    9480:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9484:	str	r2, [r3, #124]	; 0x7c
    9488:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    948c:	ldr	r3, [r3]
    9490:	sub	r2, fp, #1024	; 0x400
    9494:	sub	r2, r2, #4
    9498:	mov	r1, r2
    949c:	mov	r0, r3
    94a0:	bl	873c <get_line>
    94a4:	str	r0, [fp, #-8]
    94a8:	ldr	r3, [fp, #-8]
    94ac:	cmp	r3, #0
    94b0:	bge	ad40 <read_observation_header+0x1928>
    94b4:	mvn	r3, #0
    94b8:	b	adb4 <read_observation_header+0x199c>
    94bc:	ldr	r3, [fp, #-8]
    94c0:	cmp	r3, #60	; 0x3c
    94c4:	bgt	94fc <read_observation_header+0xe4>
    94c8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    94cc:	ldr	r2, [r3, #124]	; 0x7c
    94d0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    94d4:	ldr	r3, [r3, #128]	; 0x80
    94d8:	str	r3, [sp]
    94dc:	mov	r3, r2
    94e0:	ldr	r2, [fp, #-8]
    94e4:	movw	r1, #0
    94e8:	movt	r1, #0
    94ec:	mvn	r0, #21
    94f0:	bl	0 <coda_set_error>
    94f4:	mvn	r3, #0
    94f8:	b	adb4 <read_observation_header+0x199c>
    94fc:	sub	r3, fp, #1024	; 0x400
    9500:	sub	r3, r3, #4
    9504:	add	r3, r3, #60	; 0x3c
    9508:	mov	r2, #19
    950c:	movw	r1, #0
    9510:	movt	r1, #0
    9514:	mov	r0, r3
    9518:	bl	0 <strncmp>
    951c:	mov	r3, r0
    9520:	cmp	r3, #0
    9524:	bne	9748 <read_observation_header+0x330>
    9528:	sub	r1, fp, #1024	; 0x400
    952c:	sub	r1, r1, #4
    9530:	sub	r3, fp, #1104	; 0x450
    9534:	sub	r3, r3, #4
    9538:	mov	r2, #20
    953c:	mov	r0, r3
    9540:	bl	0 <memcpy>
    9544:	mov	r3, #0
    9548:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    954c:	sub	r3, fp, #1104	; 0x450
    9550:	sub	r3, r3, #4
    9554:	mov	r0, r3
    9558:	bl	86b4 <rtrim>
    955c:	mrc	15, 0, r3, cr13, cr0, {3}
    9560:	ldr	r2, [pc, #3708]	; a3e4 <read_observation_header+0xfcc>
    9564:	ldr	r3, [r3, r2]
    9568:	ldr	r3, [r3, #12]
    956c:	str	r3, [fp, #-12]
    9570:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9574:	ldr	r2, [r3, #4]
    9578:	sub	r3, fp, #1104	; 0x450
    957c:	sub	r3, r3, #4
    9580:	mov	r1, #0
    9584:	ldr	r0, [fp, #-12]
    9588:	bl	0 <coda_mem_string_new>
    958c:	str	r0, [fp, #-16]
    9590:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9594:	ldr	r0, [r3, #8]
    9598:	mov	r3, #0
    959c:	ldr	r2, [fp, #-16]
    95a0:	movw	r1, #0
    95a4:	movt	r1, #0
    95a8:	bl	0 <coda_mem_record_add_field>
    95ac:	sub	r3, fp, #1024	; 0x400
    95b0:	sub	r3, r3, #4
    95b4:	add	r1, r3, #20
    95b8:	sub	r3, fp, #1104	; 0x450
    95bc:	sub	r3, r3, #4
    95c0:	mov	r2, #20
    95c4:	mov	r0, r3
    95c8:	bl	0 <memcpy>
    95cc:	sub	r3, fp, #1104	; 0x450
    95d0:	sub	r3, r3, #4
    95d4:	mov	r0, r3
    95d8:	bl	86b4 <rtrim>
    95dc:	mrc	15, 0, r3, cr13, cr0, {3}
    95e0:	ldr	r2, [pc, #3580]	; a3e4 <read_observation_header+0xfcc>
    95e4:	ldr	r3, [r3, r2]
    95e8:	ldr	r3, [r3, #16]
    95ec:	str	r3, [fp, #-12]
    95f0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    95f4:	ldr	r2, [r3, #4]
    95f8:	sub	r3, fp, #1104	; 0x450
    95fc:	sub	r3, r3, #4
    9600:	mov	r1, #0
    9604:	ldr	r0, [fp, #-12]
    9608:	bl	0 <coda_mem_string_new>
    960c:	str	r0, [fp, #-16]
    9610:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9614:	ldr	r0, [r3, #8]
    9618:	mov	r3, #0
    961c:	ldr	r2, [fp, #-16]
    9620:	movw	r1, #0
    9624:	movt	r1, #0
    9628:	bl	0 <coda_mem_record_add_field>
    962c:	sub	r3, fp, #1024	; 0x400
    9630:	sub	r3, r3, #4
    9634:	add	r1, r3, #40	; 0x28
    9638:	sub	r3, fp, #1104	; 0x450
    963c:	sub	r3, r3, #4
    9640:	mov	r2, #15
    9644:	mov	r0, r3
    9648:	bl	0 <memcpy>
    964c:	mov	r3, #0
    9650:	strb	r3, [fp, #-1093]	; 0xfffffbbb
    9654:	mrc	15, 0, r3, cr13, cr0, {3}
    9658:	ldr	r2, [pc, #3460]	; a3e4 <read_observation_header+0xfcc>
    965c:	ldr	r3, [r3, r2]
    9660:	ldr	r3, [r3, #24]
    9664:	str	r3, [fp, #-12]
    9668:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    966c:	ldr	r2, [r3, #4]
    9670:	sub	r3, fp, #1104	; 0x450
    9674:	sub	r3, r3, #4
    9678:	mov	r1, #0
    967c:	ldr	r0, [fp, #-12]
    9680:	bl	0 <coda_mem_string_new>
    9684:	str	r0, [fp, #-20]	; 0xffffffec
    9688:	mrc	15, 0, r3, cr13, cr0, {3}
    968c:	ldr	r2, [pc, #3408]	; a3e4 <read_observation_header+0xfcc>
    9690:	ldr	r3, [r3, r2]
    9694:	ldr	r3, [r3, #20]
    9698:	str	r3, [fp, #-12]
    969c:	ldr	r2, [fp, #-20]	; 0xffffffec
    96a0:	mov	r1, #0
    96a4:	ldr	r0, [fp, #-12]
    96a8:	bl	0 <coda_mem_time_new>
    96ac:	str	r0, [fp, #-16]
    96b0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    96b4:	ldr	r0, [r3, #8]
    96b8:	mov	r3, #0
    96bc:	ldr	r2, [fp, #-16]
    96c0:	movw	r1, #0
    96c4:	movt	r1, #0
    96c8:	bl	0 <coda_mem_record_add_field>
    96cc:	sub	r3, fp, #1024	; 0x400
    96d0:	sub	r3, r3, #4
    96d4:	add	r1, r3, #56	; 0x38
    96d8:	sub	r3, fp, #1104	; 0x450
    96dc:	sub	r3, r3, #4
    96e0:	mov	r2, #3
    96e4:	mov	r0, r3
    96e8:	bl	0 <memcpy>
    96ec:	mov	r3, #0
    96f0:	strb	r3, [fp, #-1105]	; 0xfffffbaf
    96f4:	mrc	15, 0, r3, cr13, cr0, {3}
    96f8:	ldr	r2, [pc, #3300]	; a3e4 <read_observation_header+0xfcc>
    96fc:	ldr	r3, [r3, r2]
    9700:	ldr	r3, [r3, #28]
    9704:	str	r3, [fp, #-12]
    9708:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    970c:	ldr	r2, [r3, #4]
    9710:	sub	r3, fp, #1104	; 0x450
    9714:	sub	r3, r3, #4
    9718:	mov	r1, #0
    971c:	ldr	r0, [fp, #-12]
    9720:	bl	0 <coda_mem_string_new>
    9724:	str	r0, [fp, #-16]
    9728:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    972c:	ldr	r0, [r3, #8]
    9730:	mov	r3, #0
    9734:	ldr	r2, [fp, #-16]
    9738:	movw	r1, #0
    973c:	movt	r1, #0
    9740:	bl	0 <coda_mem_record_add_field>
    9744:	b	acdc <read_observation_header+0x18c4>
    9748:	sub	r3, fp, #1024	; 0x400
    974c:	sub	r3, r3, #4
    9750:	add	r3, r3, #60	; 0x3c
    9754:	mov	r2, #7
    9758:	movw	r1, #0
    975c:	movt	r1, #0
    9760:	mov	r0, r3
    9764:	bl	0 <strncmp>
    9768:	mov	r3, r0
    976c:	cmp	r3, #0
    9770:	beq	acdc <read_observation_header+0x18c4>
    9774:	sub	r3, fp, #1024	; 0x400
    9778:	sub	r3, r3, #4
    977c:	add	r3, r3, #60	; 0x3c
    9780:	mov	r2, #11
    9784:	movw	r1, #0
    9788:	movt	r1, #0
    978c:	mov	r0, r3
    9790:	bl	0 <strncmp>
    9794:	mov	r3, r0
    9798:	cmp	r3, #0
    979c:	bne	9828 <read_observation_header+0x410>
    97a0:	sub	r1, fp, #1024	; 0x400
    97a4:	sub	r1, r1, #4
    97a8:	sub	r3, fp, #1104	; 0x450
    97ac:	sub	r3, r3, #4
    97b0:	mov	r2, #60	; 0x3c
    97b4:	mov	r0, r3
    97b8:	bl	0 <memcpy>
    97bc:	mov	r3, #0
    97c0:	strb	r3, [fp, #-1048]	; 0xfffffbe8
    97c4:	sub	r3, fp, #1104	; 0x450
    97c8:	sub	r3, r3, #4
    97cc:	mov	r0, r3
    97d0:	bl	86b4 <rtrim>
    97d4:	mrc	15, 0, r3, cr13, cr0, {3}
    97d8:	ldr	r2, [pc, #3076]	; a3e4 <read_observation_header+0xfcc>
    97dc:	ldr	r3, [r3, r2]
    97e0:	ldr	r3, [r3, #32]
    97e4:	str	r3, [fp, #-12]
    97e8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    97ec:	ldr	r2, [r3, #4]
    97f0:	sub	r3, fp, #1104	; 0x450
    97f4:	sub	r3, r3, #4
    97f8:	mov	r1, #0
    97fc:	ldr	r0, [fp, #-12]
    9800:	bl	0 <coda_mem_string_new>
    9804:	str	r0, [fp, #-16]
    9808:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    980c:	ldr	r0, [r3, #8]
    9810:	mov	r3, #0
    9814:	ldr	r2, [fp, #-16]
    9818:	movw	r1, #0
    981c:	movt	r1, #0
    9820:	bl	0 <coda_mem_record_add_field>
    9824:	b	acdc <read_observation_header+0x18c4>
    9828:	sub	r3, fp, #1024	; 0x400
    982c:	sub	r3, r3, #4
    9830:	add	r3, r3, #60	; 0x3c
    9834:	mov	r2, #13
    9838:	movw	r1, #0
    983c:	movt	r1, #0
    9840:	mov	r0, r3
    9844:	bl	0 <strncmp>
    9848:	mov	r3, r0
    984c:	cmp	r3, #0
    9850:	bne	98dc <read_observation_header+0x4c4>
    9854:	sub	r1, fp, #1024	; 0x400
    9858:	sub	r1, r1, #4
    985c:	sub	r3, fp, #1104	; 0x450
    9860:	sub	r3, r3, #4
    9864:	mov	r2, #20
    9868:	mov	r0, r3
    986c:	bl	0 <memcpy>
    9870:	mov	r3, #0
    9874:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    9878:	sub	r3, fp, #1104	; 0x450
    987c:	sub	r3, r3, #4
    9880:	mov	r0, r3
    9884:	bl	86b4 <rtrim>
    9888:	mrc	15, 0, r3, cr13, cr0, {3}
    988c:	ldr	r2, [pc, #2896]	; a3e4 <read_observation_header+0xfcc>
    9890:	ldr	r3, [r3, r2]
    9894:	ldr	r3, [r3, #36]	; 0x24
    9898:	str	r3, [fp, #-12]
    989c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    98a0:	ldr	r2, [r3, #4]
    98a4:	sub	r3, fp, #1104	; 0x450
    98a8:	sub	r3, r3, #4
    98ac:	mov	r1, #0
    98b0:	ldr	r0, [fp, #-12]
    98b4:	bl	0 <coda_mem_string_new>
    98b8:	str	r0, [fp, #-16]
    98bc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    98c0:	ldr	r0, [r3, #8]
    98c4:	mov	r3, #0
    98c8:	ldr	r2, [fp, #-16]
    98cc:	movw	r1, #0
    98d0:	movt	r1, #0
    98d4:	bl	0 <coda_mem_record_add_field>
    98d8:	b	acdc <read_observation_header+0x18c4>
    98dc:	sub	r3, fp, #1024	; 0x400
    98e0:	sub	r3, r3, #4
    98e4:	add	r3, r3, #60	; 0x3c
    98e8:	mov	r2, #10
    98ec:	movw	r1, #0
    98f0:	movt	r1, #0
    98f4:	mov	r0, r3
    98f8:	bl	0 <strncmp>
    98fc:	mov	r3, r0
    9900:	cmp	r3, #0
    9904:	bne	9990 <read_observation_header+0x578>
    9908:	sub	r1, fp, #1024	; 0x400
    990c:	sub	r1, r1, #4
    9910:	sub	r3, fp, #1104	; 0x450
    9914:	sub	r3, r3, #4
    9918:	mov	r2, #20
    991c:	mov	r0, r3
    9920:	bl	0 <memcpy>
    9924:	mov	r3, #0
    9928:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    992c:	sub	r3, fp, #1104	; 0x450
    9930:	sub	r3, r3, #4
    9934:	mov	r0, r3
    9938:	bl	86b4 <rtrim>
    993c:	mrc	15, 0, r3, cr13, cr0, {3}
    9940:	ldr	r2, [pc, #2716]	; a3e4 <read_observation_header+0xfcc>
    9944:	ldr	r3, [r3, r2]
    9948:	ldr	r3, [r3, #40]	; 0x28
    994c:	str	r3, [fp, #-12]
    9950:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9954:	ldr	r2, [r3, #4]
    9958:	sub	r3, fp, #1104	; 0x450
    995c:	sub	r3, r3, #4
    9960:	mov	r1, #0
    9964:	ldr	r0, [fp, #-12]
    9968:	bl	0 <coda_mem_string_new>
    996c:	str	r0, [fp, #-16]
    9970:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9974:	ldr	r0, [r3, #8]
    9978:	mov	r3, #0
    997c:	ldr	r2, [fp, #-16]
    9980:	movw	r1, #0
    9984:	movt	r1, #0
    9988:	bl	0 <coda_mem_record_add_field>
    998c:	b	acdc <read_observation_header+0x18c4>
    9990:	sub	r3, fp, #1024	; 0x400
    9994:	sub	r3, r3, #4
    9998:	add	r3, r3, #60	; 0x3c
    999c:	mov	r2, #17
    99a0:	movw	r1, #0
    99a4:	movt	r1, #0
    99a8:	mov	r0, r3
    99ac:	bl	0 <strncmp>
    99b0:	mov	r3, r0
    99b4:	cmp	r3, #0
    99b8:	bne	9acc <read_observation_header+0x6b4>
    99bc:	sub	r1, fp, #1024	; 0x400
    99c0:	sub	r1, r1, #4
    99c4:	sub	r3, fp, #1104	; 0x450
    99c8:	sub	r3, r3, #4
    99cc:	mov	r2, #20
    99d0:	mov	r0, r3
    99d4:	bl	0 <memcpy>
    99d8:	mov	r3, #0
    99dc:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    99e0:	sub	r3, fp, #1104	; 0x450
    99e4:	sub	r3, r3, #4
    99e8:	mov	r0, r3
    99ec:	bl	86b4 <rtrim>
    99f0:	mrc	15, 0, r3, cr13, cr0, {3}
    99f4:	ldr	r2, [pc, #2536]	; a3e4 <read_observation_header+0xfcc>
    99f8:	ldr	r3, [r3, r2]
    99fc:	ldr	r3, [r3, #44]	; 0x2c
    9a00:	str	r3, [fp, #-12]
    9a04:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9a08:	ldr	r2, [r3, #4]
    9a0c:	sub	r3, fp, #1104	; 0x450
    9a10:	sub	r3, r3, #4
    9a14:	mov	r1, #0
    9a18:	ldr	r0, [fp, #-12]
    9a1c:	bl	0 <coda_mem_string_new>
    9a20:	str	r0, [fp, #-16]
    9a24:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9a28:	ldr	r0, [r3, #8]
    9a2c:	mov	r3, #0
    9a30:	ldr	r2, [fp, #-16]
    9a34:	movw	r1, #0
    9a38:	movt	r1, #0
    9a3c:	bl	0 <coda_mem_record_add_field>
    9a40:	sub	r3, fp, #1024	; 0x400
    9a44:	sub	r3, r3, #4
    9a48:	add	r1, r3, #20
    9a4c:	sub	r3, fp, #1104	; 0x450
    9a50:	sub	r3, r3, #4
    9a54:	mov	r2, #40	; 0x28
    9a58:	mov	r0, r3
    9a5c:	bl	0 <memcpy>
    9a60:	mov	r3, #0
    9a64:	strb	r3, [fp, #-1068]	; 0xfffffbd4
    9a68:	sub	r3, fp, #1104	; 0x450
    9a6c:	sub	r3, r3, #4
    9a70:	mov	r0, r3
    9a74:	bl	86b4 <rtrim>
    9a78:	mrc	15, 0, r3, cr13, cr0, {3}
    9a7c:	ldr	r2, [pc, #2400]	; a3e4 <read_observation_header+0xfcc>
    9a80:	ldr	r3, [r3, r2]
    9a84:	ldr	r3, [r3, #48]	; 0x30
    9a88:	str	r3, [fp, #-12]
    9a8c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9a90:	ldr	r2, [r3, #4]
    9a94:	sub	r3, fp, #1104	; 0x450
    9a98:	sub	r3, r3, #4
    9a9c:	mov	r1, #0
    9aa0:	ldr	r0, [fp, #-12]
    9aa4:	bl	0 <coda_mem_string_new>
    9aa8:	str	r0, [fp, #-16]
    9aac:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9ab0:	ldr	r0, [r3, #8]
    9ab4:	mov	r3, #0
    9ab8:	ldr	r2, [fp, #-16]
    9abc:	movw	r1, #0
    9ac0:	movt	r1, #0
    9ac4:	bl	0 <coda_mem_record_add_field>
    9ac8:	b	acdc <read_observation_header+0x18c4>
    9acc:	sub	r3, fp, #1024	; 0x400
    9ad0:	sub	r3, r3, #4
    9ad4:	add	r3, r3, #60	; 0x3c
    9ad8:	mov	r2, #19
    9adc:	movw	r1, #0
    9ae0:	movt	r1, #0
    9ae4:	mov	r0, r3
    9ae8:	bl	0 <strncmp>
    9aec:	mov	r3, r0
    9af0:	cmp	r3, #0
    9af4:	bne	9c90 <read_observation_header+0x878>
    9af8:	sub	r1, fp, #1024	; 0x400
    9afc:	sub	r1, r1, #4
    9b00:	sub	r3, fp, #1104	; 0x450
    9b04:	sub	r3, r3, #4
    9b08:	mov	r2, #20
    9b0c:	mov	r0, r3
    9b10:	bl	0 <memcpy>
    9b14:	mov	r3, #0
    9b18:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    9b1c:	sub	r3, fp, #1104	; 0x450
    9b20:	sub	r3, r3, #4
    9b24:	mov	r0, r3
    9b28:	bl	86b4 <rtrim>
    9b2c:	mrc	15, 0, r3, cr13, cr0, {3}
    9b30:	ldr	r2, [pc, #2220]	; a3e4 <read_observation_header+0xfcc>
    9b34:	ldr	r3, [r3, r2]
    9b38:	ldr	r3, [r3, #52]	; 0x34
    9b3c:	str	r3, [fp, #-12]
    9b40:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9b44:	ldr	r2, [r3, #4]
    9b48:	sub	r3, fp, #1104	; 0x450
    9b4c:	sub	r3, r3, #4
    9b50:	mov	r1, #0
    9b54:	ldr	r0, [fp, #-12]
    9b58:	bl	0 <coda_mem_string_new>
    9b5c:	str	r0, [fp, #-16]
    9b60:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9b64:	ldr	r0, [r3, #8]
    9b68:	mov	r3, #0
    9b6c:	ldr	r2, [fp, #-16]
    9b70:	movw	r1, #0
    9b74:	movt	r1, #0
    9b78:	bl	0 <coda_mem_record_add_field>
    9b7c:	sub	r3, fp, #1024	; 0x400
    9b80:	sub	r3, r3, #4
    9b84:	add	r1, r3, #20
    9b88:	sub	r3, fp, #1104	; 0x450
    9b8c:	sub	r3, r3, #4
    9b90:	mov	r2, #20
    9b94:	mov	r0, r3
    9b98:	bl	0 <memcpy>
    9b9c:	mov	r3, #0
    9ba0:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    9ba4:	sub	r3, fp, #1104	; 0x450
    9ba8:	sub	r3, r3, #4
    9bac:	mov	r0, r3
    9bb0:	bl	86b4 <rtrim>
    9bb4:	mrc	15, 0, r3, cr13, cr0, {3}
    9bb8:	ldr	r2, [pc, #2084]	; a3e4 <read_observation_header+0xfcc>
    9bbc:	ldr	r3, [r3, r2]
    9bc0:	ldr	r3, [r3, #56]	; 0x38
    9bc4:	str	r3, [fp, #-12]
    9bc8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9bcc:	ldr	r2, [r3, #4]
    9bd0:	sub	r3, fp, #1104	; 0x450
    9bd4:	sub	r3, r3, #4
    9bd8:	mov	r1, #0
    9bdc:	ldr	r0, [fp, #-12]
    9be0:	bl	0 <coda_mem_string_new>
    9be4:	str	r0, [fp, #-16]
    9be8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9bec:	ldr	r0, [r3, #8]
    9bf0:	mov	r3, #0
    9bf4:	ldr	r2, [fp, #-16]
    9bf8:	movw	r1, #0
    9bfc:	movt	r1, #0
    9c00:	bl	0 <coda_mem_record_add_field>
    9c04:	sub	r3, fp, #1024	; 0x400
    9c08:	sub	r3, r3, #4
    9c0c:	add	r1, r3, #40	; 0x28
    9c10:	sub	r3, fp, #1104	; 0x450
    9c14:	sub	r3, r3, #4
    9c18:	mov	r2, #20
    9c1c:	mov	r0, r3
    9c20:	bl	0 <memcpy>
    9c24:	mov	r3, #0
    9c28:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    9c2c:	sub	r3, fp, #1104	; 0x450
    9c30:	sub	r3, r3, #4
    9c34:	mov	r0, r3
    9c38:	bl	86b4 <rtrim>
    9c3c:	mrc	15, 0, r3, cr13, cr0, {3}
    9c40:	ldr	r2, [pc, #1948]	; a3e4 <read_observation_header+0xfcc>
    9c44:	ldr	r3, [r3, r2]
    9c48:	ldr	r3, [r3, #60]	; 0x3c
    9c4c:	str	r3, [fp, #-12]
    9c50:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9c54:	ldr	r2, [r3, #4]
    9c58:	sub	r3, fp, #1104	; 0x450
    9c5c:	sub	r3, r3, #4
    9c60:	mov	r1, #0
    9c64:	ldr	r0, [fp, #-12]
    9c68:	bl	0 <coda_mem_string_new>
    9c6c:	str	r0, [fp, #-16]
    9c70:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9c74:	ldr	r0, [r3, #8]
    9c78:	mov	r3, #0
    9c7c:	ldr	r2, [fp, #-16]
    9c80:	movw	r1, #0
    9c84:	movt	r1, #0
    9c88:	bl	0 <coda_mem_record_add_field>
    9c8c:	b	acdc <read_observation_header+0x18c4>
    9c90:	sub	r3, fp, #1024	; 0x400
    9c94:	sub	r3, r3, #4
    9c98:	add	r3, r3, #60	; 0x3c
    9c9c:	mov	r2, #10
    9ca0:	movw	r1, #0
    9ca4:	movt	r1, #0
    9ca8:	mov	r0, r3
    9cac:	bl	0 <strncmp>
    9cb0:	mov	r3, r0
    9cb4:	cmp	r3, #0
    9cb8:	bne	9dcc <read_observation_header+0x9b4>
    9cbc:	sub	r1, fp, #1024	; 0x400
    9cc0:	sub	r1, r1, #4
    9cc4:	sub	r3, fp, #1104	; 0x450
    9cc8:	sub	r3, r3, #4
    9ccc:	mov	r2, #20
    9cd0:	mov	r0, r3
    9cd4:	bl	0 <memcpy>
    9cd8:	mov	r3, #0
    9cdc:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    9ce0:	sub	r3, fp, #1104	; 0x450
    9ce4:	sub	r3, r3, #4
    9ce8:	mov	r0, r3
    9cec:	bl	86b4 <rtrim>
    9cf0:	mrc	15, 0, r3, cr13, cr0, {3}
    9cf4:	ldr	r2, [pc, #1768]	; a3e4 <read_observation_header+0xfcc>
    9cf8:	ldr	r3, [r3, r2]
    9cfc:	ldr	r3, [r3, #64]	; 0x40
    9d00:	str	r3, [fp, #-12]
    9d04:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9d08:	ldr	r2, [r3, #4]
    9d0c:	sub	r3, fp, #1104	; 0x450
    9d10:	sub	r3, r3, #4
    9d14:	mov	r1, #0
    9d18:	ldr	r0, [fp, #-12]
    9d1c:	bl	0 <coda_mem_string_new>
    9d20:	str	r0, [fp, #-16]
    9d24:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9d28:	ldr	r0, [r3, #8]
    9d2c:	mov	r3, #0
    9d30:	ldr	r2, [fp, #-16]
    9d34:	movw	r1, #0
    9d38:	movt	r1, #0
    9d3c:	bl	0 <coda_mem_record_add_field>
    9d40:	sub	r3, fp, #1024	; 0x400
    9d44:	sub	r3, r3, #4
    9d48:	add	r1, r3, #20
    9d4c:	sub	r3, fp, #1104	; 0x450
    9d50:	sub	r3, r3, #4
    9d54:	mov	r2, #20
    9d58:	mov	r0, r3
    9d5c:	bl	0 <memcpy>
    9d60:	mov	r3, #0
    9d64:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    9d68:	sub	r3, fp, #1104	; 0x450
    9d6c:	sub	r3, r3, #4
    9d70:	mov	r0, r3
    9d74:	bl	86b4 <rtrim>
    9d78:	mrc	15, 0, r3, cr13, cr0, {3}
    9d7c:	ldr	r2, [pc, #1632]	; a3e4 <read_observation_header+0xfcc>
    9d80:	ldr	r3, [r3, r2]
    9d84:	ldr	r3, [r3, #68]	; 0x44
    9d88:	str	r3, [fp, #-12]
    9d8c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9d90:	ldr	r2, [r3, #4]
    9d94:	sub	r3, fp, #1104	; 0x450
    9d98:	sub	r3, r3, #4
    9d9c:	mov	r1, #0
    9da0:	ldr	r0, [fp, #-12]
    9da4:	bl	0 <coda_mem_string_new>
    9da8:	str	r0, [fp, #-16]
    9dac:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9db0:	ldr	r0, [r3, #8]
    9db4:	mov	r3, #0
    9db8:	ldr	r2, [fp, #-16]
    9dbc:	movw	r1, #0
    9dc0:	movt	r1, #0
    9dc4:	bl	0 <coda_mem_record_add_field>
    9dc8:	b	acdc <read_observation_header+0x18c4>
    9dcc:	sub	r3, fp, #1024	; 0x400
    9dd0:	sub	r3, r3, #4
    9dd4:	add	r3, r3, #60	; 0x3c
    9dd8:	mov	r2, #19
    9ddc:	movw	r1, #0
    9de0:	movt	r1, #0
    9de4:	mov	r0, r3
    9de8:	bl	0 <strncmp>
    9dec:	mov	r3, r0
    9df0:	cmp	r3, #0
    9df4:	bne	a028 <read_observation_header+0xc10>
    9df8:	sub	r2, fp, #1024	; 0x400
    9dfc:	sub	r2, r2, #4
    9e00:	sub	r2, r2, #8
    9e04:	sub	r0, fp, #1024	; 0x400
    9e08:	sub	r0, r0, #4
    9e0c:	mov	r3, #0
    9e10:	mov	r1, #14
    9e14:	bl	0 <coda_ascii_parse_double>
    9e18:	mov	r3, r0
    9e1c:	cmp	r3, #0
    9e20:	bge	9e4c <read_observation_header+0xa34>
    9e24:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9e28:	ldr	r1, [r3, #124]	; 0x7c
    9e2c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9e30:	ldr	r3, [r3, #128]	; 0x80
    9e34:	mov	r2, r3
    9e38:	movw	r0, #0
    9e3c:	movt	r0, #0
    9e40:	bl	0 <coda_add_error_message>
    9e44:	mvn	r3, #0
    9e48:	b	adb4 <read_observation_header+0x199c>
    9e4c:	mrc	15, 0, r3, cr13, cr0, {3}
    9e50:	ldr	r2, [pc, #1420]	; a3e4 <read_observation_header+0xfcc>
    9e54:	ldr	r3, [r3, r2]
    9e58:	ldr	r3, [r3, #72]	; 0x48
    9e5c:	str	r3, [fp, #-12]
    9e60:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9e64:	ldr	r3, [r3, #4]
    9e68:	sub	r2, fp, #1024	; 0x400
    9e6c:	sub	r2, r2, #4
    9e70:	vldr	d7, [r2, #-8]
    9e74:	vcvt.f32.f64	s15, d7
    9e78:	vmov.f32	s0, s15
    9e7c:	mov	r2, r3
    9e80:	mov	r1, #0
    9e84:	ldr	r0, [fp, #-12]
    9e88:	bl	0 <coda_mem_float_new>
    9e8c:	str	r0, [fp, #-16]
    9e90:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9e94:	ldr	r0, [r3, #8]
    9e98:	mov	r3, #0
    9e9c:	ldr	r2, [fp, #-16]
    9ea0:	movw	r1, #0
    9ea4:	movt	r1, #0
    9ea8:	bl	0 <coda_mem_record_add_field>
    9eac:	sub	r2, fp, #1024	; 0x400
    9eb0:	sub	r2, r2, #4
    9eb4:	sub	r2, r2, #8
    9eb8:	sub	r3, fp, #1024	; 0x400
    9ebc:	sub	r3, r3, #4
    9ec0:	add	r0, r3, #14
    9ec4:	mov	r3, #0
    9ec8:	mov	r1, #14
    9ecc:	bl	0 <coda_ascii_parse_double>
    9ed0:	mov	r3, r0
    9ed4:	cmp	r3, #0
    9ed8:	bge	9f08 <read_observation_header+0xaf0>
    9edc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9ee0:	ldr	r1, [r3, #124]	; 0x7c
    9ee4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9ee8:	ldr	r3, [r3, #128]	; 0x80
    9eec:	add	r3, r3, #14
    9ef0:	mov	r2, r3
    9ef4:	movw	r0, #0
    9ef8:	movt	r0, #0
    9efc:	bl	0 <coda_add_error_message>
    9f00:	mvn	r3, #0
    9f04:	b	adb4 <read_observation_header+0x199c>
    9f08:	mrc	15, 0, r3, cr13, cr0, {3}
    9f0c:	ldr	r2, [pc, #1232]	; a3e4 <read_observation_header+0xfcc>
    9f10:	ldr	r3, [r3, r2]
    9f14:	ldr	r3, [r3, #76]	; 0x4c
    9f18:	str	r3, [fp, #-12]
    9f1c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9f20:	ldr	r3, [r3, #4]
    9f24:	sub	r2, fp, #1024	; 0x400
    9f28:	sub	r2, r2, #4
    9f2c:	vldr	d7, [r2, #-8]
    9f30:	vcvt.f32.f64	s15, d7
    9f34:	vmov.f32	s0, s15
    9f38:	mov	r2, r3
    9f3c:	mov	r1, #0
    9f40:	ldr	r0, [fp, #-12]
    9f44:	bl	0 <coda_mem_float_new>
    9f48:	str	r0, [fp, #-16]
    9f4c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9f50:	ldr	r0, [r3, #8]
    9f54:	mov	r3, #0
    9f58:	ldr	r2, [fp, #-16]
    9f5c:	movw	r1, #0
    9f60:	movt	r1, #0
    9f64:	bl	0 <coda_mem_record_add_field>
    9f68:	sub	r2, fp, #1024	; 0x400
    9f6c:	sub	r2, r2, #4
    9f70:	sub	r2, r2, #8
    9f74:	sub	r3, fp, #1024	; 0x400
    9f78:	sub	r3, r3, #4
    9f7c:	add	r0, r3, #28
    9f80:	mov	r3, #0
    9f84:	mov	r1, #14
    9f88:	bl	0 <coda_ascii_parse_double>
    9f8c:	mov	r3, r0
    9f90:	cmp	r3, #0
    9f94:	bge	9fc4 <read_observation_header+0xbac>
    9f98:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9f9c:	ldr	r1, [r3, #124]	; 0x7c
    9fa0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9fa4:	ldr	r3, [r3, #128]	; 0x80
    9fa8:	add	r3, r3, #28
    9fac:	mov	r2, r3
    9fb0:	movw	r0, #0
    9fb4:	movt	r0, #0
    9fb8:	bl	0 <coda_add_error_message>
    9fbc:	mvn	r3, #0
    9fc0:	b	adb4 <read_observation_header+0x199c>
    9fc4:	mrc	15, 0, r3, cr13, cr0, {3}
    9fc8:	ldr	r2, [pc, #1044]	; a3e4 <read_observation_header+0xfcc>
    9fcc:	ldr	r3, [r3, r2]
    9fd0:	ldr	r3, [r3, #80]	; 0x50
    9fd4:	str	r3, [fp, #-12]
    9fd8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    9fdc:	ldr	r3, [r3, #4]
    9fe0:	sub	r2, fp, #1024	; 0x400
    9fe4:	sub	r2, r2, #4
    9fe8:	vldr	d7, [r2, #-8]
    9fec:	vcvt.f32.f64	s15, d7
    9ff0:	vmov.f32	s0, s15
    9ff4:	mov	r2, r3
    9ff8:	mov	r1, #0
    9ffc:	ldr	r0, [fp, #-12]
    a000:	bl	0 <coda_mem_float_new>
    a004:	str	r0, [fp, #-16]
    a008:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a00c:	ldr	r0, [r3, #8]
    a010:	mov	r3, #0
    a014:	ldr	r2, [fp, #-16]
    a018:	movw	r1, #0
    a01c:	movt	r1, #0
    a020:	bl	0 <coda_mem_record_add_field>
    a024:	b	acdc <read_observation_header+0x18c4>
    a028:	sub	r3, fp, #1024	; 0x400
    a02c:	sub	r3, r3, #4
    a030:	add	r3, r3, #60	; 0x3c
    a034:	mov	r2, #20
    a038:	movw	r1, #0
    a03c:	movt	r1, #0
    a040:	mov	r0, r3
    a044:	bl	0 <strncmp>
    a048:	mov	r3, r0
    a04c:	cmp	r3, #0
    a050:	bne	a288 <read_observation_header+0xe70>
    a054:	sub	r2, fp, #1024	; 0x400
    a058:	sub	r2, r2, #4
    a05c:	sub	r2, r2, #8
    a060:	sub	r0, fp, #1024	; 0x400
    a064:	sub	r0, r0, #4
    a068:	mov	r3, #0
    a06c:	mov	r1, #14
    a070:	bl	0 <coda_ascii_parse_double>
    a074:	mov	r3, r0
    a078:	cmp	r3, #0
    a07c:	bge	a0ac <read_observation_header+0xc94>
    a080:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a084:	ldr	r1, [r3, #124]	; 0x7c
    a088:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a08c:	ldr	r2, [r3, #4]
    a090:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a094:	ldr	r3, [r3, #128]	; 0x80
    a098:	movw	r0, #0
    a09c:	movt	r0, #0
    a0a0:	bl	0 <coda_add_error_message>
    a0a4:	mvn	r3, #0
    a0a8:	b	adb4 <read_observation_header+0x199c>
    a0ac:	mrc	15, 0, r3, cr13, cr0, {3}
    a0b0:	ldr	r2, [pc, #812]	; a3e4 <read_observation_header+0xfcc>
    a0b4:	ldr	r3, [r3, r2]
    a0b8:	ldr	r3, [r3, #84]	; 0x54
    a0bc:	str	r3, [fp, #-12]
    a0c0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a0c4:	ldr	r3, [r3, #4]
    a0c8:	sub	r2, fp, #1024	; 0x400
    a0cc:	sub	r2, r2, #4
    a0d0:	vldr	d7, [r2, #-8]
    a0d4:	vcvt.f32.f64	s15, d7
    a0d8:	vmov.f32	s0, s15
    a0dc:	mov	r2, r3
    a0e0:	mov	r1, #0
    a0e4:	ldr	r0, [fp, #-12]
    a0e8:	bl	0 <coda_mem_float_new>
    a0ec:	str	r0, [fp, #-16]
    a0f0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a0f4:	ldr	r0, [r3, #8]
    a0f8:	mov	r3, #0
    a0fc:	ldr	r2, [fp, #-16]
    a100:	movw	r1, #0
    a104:	movt	r1, #0
    a108:	bl	0 <coda_mem_record_add_field>
    a10c:	sub	r2, fp, #1024	; 0x400
    a110:	sub	r2, r2, #4
    a114:	sub	r2, r2, #8
    a118:	sub	r3, fp, #1024	; 0x400
    a11c:	sub	r3, r3, #4
    a120:	add	r0, r3, #14
    a124:	mov	r3, #0
    a128:	mov	r1, #14
    a12c:	bl	0 <coda_ascii_parse_double>
    a130:	mov	r3, r0
    a134:	cmp	r3, #0
    a138:	bge	a168 <read_observation_header+0xd50>
    a13c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a140:	ldr	r1, [r3, #124]	; 0x7c
    a144:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a148:	ldr	r3, [r3, #128]	; 0x80
    a14c:	add	r3, r3, #14
    a150:	mov	r2, r3
    a154:	movw	r0, #0
    a158:	movt	r0, #0
    a15c:	bl	0 <coda_add_error_message>
    a160:	mvn	r3, #0
    a164:	b	adb4 <read_observation_header+0x199c>
    a168:	mrc	15, 0, r3, cr13, cr0, {3}
    a16c:	ldr	r2, [pc, #624]	; a3e4 <read_observation_header+0xfcc>
    a170:	ldr	r3, [r3, r2]
    a174:	ldr	r3, [r3, #88]	; 0x58
    a178:	str	r3, [fp, #-12]
    a17c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a180:	ldr	r3, [r3, #4]
    a184:	sub	r2, fp, #1024	; 0x400
    a188:	sub	r2, r2, #4
    a18c:	vldr	d7, [r2, #-8]
    a190:	vcvt.f32.f64	s15, d7
    a194:	vmov.f32	s0, s15
    a198:	mov	r2, r3
    a19c:	mov	r1, #0
    a1a0:	ldr	r0, [fp, #-12]
    a1a4:	bl	0 <coda_mem_float_new>
    a1a8:	str	r0, [fp, #-16]
    a1ac:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a1b0:	ldr	r0, [r3, #8]
    a1b4:	mov	r3, #0
    a1b8:	ldr	r2, [fp, #-16]
    a1bc:	movw	r1, #0
    a1c0:	movt	r1, #0
    a1c4:	bl	0 <coda_mem_record_add_field>
    a1c8:	sub	r2, fp, #1024	; 0x400
    a1cc:	sub	r2, r2, #4
    a1d0:	sub	r2, r2, #8
    a1d4:	sub	r3, fp, #1024	; 0x400
    a1d8:	sub	r3, r3, #4
    a1dc:	add	r0, r3, #28
    a1e0:	mov	r3, #0
    a1e4:	mov	r1, #14
    a1e8:	bl	0 <coda_ascii_parse_double>
    a1ec:	mov	r3, r0
    a1f0:	cmp	r3, #0
    a1f4:	bge	a224 <read_observation_header+0xe0c>
    a1f8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a1fc:	ldr	r1, [r3, #124]	; 0x7c
    a200:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a204:	ldr	r3, [r3, #128]	; 0x80
    a208:	add	r3, r3, #28
    a20c:	mov	r2, r3
    a210:	movw	r0, #0
    a214:	movt	r0, #0
    a218:	bl	0 <coda_add_error_message>
    a21c:	mvn	r3, #0
    a220:	b	adb4 <read_observation_header+0x199c>
    a224:	mrc	15, 0, r3, cr13, cr0, {3}
    a228:	ldr	r2, [pc, #436]	; a3e4 <read_observation_header+0xfcc>
    a22c:	ldr	r3, [r3, r2]
    a230:	ldr	r3, [r3, #92]	; 0x5c
    a234:	str	r3, [fp, #-12]
    a238:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a23c:	ldr	r3, [r3, #4]
    a240:	sub	r2, fp, #1024	; 0x400
    a244:	sub	r2, r2, #4
    a248:	vldr	d7, [r2, #-8]
    a24c:	vcvt.f32.f64	s15, d7
    a250:	vmov.f32	s0, s15
    a254:	mov	r2, r3
    a258:	mov	r1, #0
    a25c:	ldr	r0, [fp, #-12]
    a260:	bl	0 <coda_mem_float_new>
    a264:	str	r0, [fp, #-16]
    a268:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a26c:	ldr	r0, [r3, #8]
    a270:	mov	r3, #0
    a274:	ldr	r2, [fp, #-16]
    a278:	movw	r1, #0
    a27c:	movt	r1, #0
    a280:	bl	0 <coda_mem_record_add_field>
    a284:	b	acdc <read_observation_header+0x18c4>
    a288:	sub	r3, fp, #1024	; 0x400
    a28c:	sub	r3, r3, #4
    a290:	add	r3, r3, #60	; 0x3c
    a294:	mov	r2, #20
    a298:	movw	r1, #0
    a29c:	movt	r1, #0
    a2a0:	mov	r0, r3
    a2a4:	bl	0 <strncmp>
    a2a8:	mov	r3, r0
    a2ac:	cmp	r3, #0
    a2b0:	beq	acdc <read_observation_header+0x18c4>
    a2b4:	sub	r3, fp, #1024	; 0x400
    a2b8:	sub	r3, r3, #4
    a2bc:	add	r3, r3, #60	; 0x3c
    a2c0:	mov	r2, #20
    a2c4:	movw	r1, #0
    a2c8:	movt	r1, #0
    a2cc:	mov	r0, r3
    a2d0:	bl	0 <strncmp>
    a2d4:	mov	r3, r0
    a2d8:	cmp	r3, #0
    a2dc:	beq	acdc <read_observation_header+0x18c4>
    a2e0:	sub	r3, fp, #1024	; 0x400
    a2e4:	sub	r3, r3, #4
    a2e8:	add	r3, r3, #60	; 0x3c
    a2ec:	mov	r2, #20
    a2f0:	movw	r1, #0
    a2f4:	movt	r1, #0
    a2f8:	mov	r0, r3
    a2fc:	bl	0 <strncmp>
    a300:	mov	r3, r0
    a304:	cmp	r3, #0
    a308:	beq	acdc <read_observation_header+0x18c4>
    a30c:	sub	r3, fp, #1024	; 0x400
    a310:	sub	r3, r3, #4
    a314:	add	r3, r3, #60	; 0x3c
    a318:	mov	r2, #20
    a31c:	movw	r1, #0
    a320:	movt	r1, #0
    a324:	mov	r0, r3
    a328:	bl	0 <strncmp>
    a32c:	mov	r3, r0
    a330:	cmp	r3, #0
    a334:	beq	acdc <read_observation_header+0x18c4>
    a338:	sub	r3, fp, #1024	; 0x400
    a33c:	sub	r3, r3, #4
    a340:	add	r3, r3, #60	; 0x3c
    a344:	mov	r2, #20
    a348:	movw	r1, #0
    a34c:	movt	r1, #0
    a350:	mov	r0, r3
    a354:	bl	0 <strncmp>
    a358:	mov	r3, r0
    a35c:	cmp	r3, #0
    a360:	beq	acdc <read_observation_header+0x18c4>
    a364:	sub	r3, fp, #1024	; 0x400
    a368:	sub	r3, r3, #4
    a36c:	add	r3, r3, #60	; 0x3c
    a370:	mov	r2, #19
    a374:	movw	r1, #0
    a378:	movt	r1, #0
    a37c:	mov	r0, r3
    a380:	bl	0 <strncmp>
    a384:	mov	r3, r0
    a388:	cmp	r3, #0
    a38c:	beq	acdc <read_observation_header+0x18c4>
    a390:	sub	r3, fp, #1024	; 0x400
    a394:	sub	r3, r3, #4
    a398:	add	r3, r3, #60	; 0x3c
    a39c:	mov	r2, #19
    a3a0:	movw	r1, #0
    a3a4:	movt	r1, #0
    a3a8:	mov	r0, r3
    a3ac:	bl	0 <strncmp>
    a3b0:	mov	r3, r0
    a3b4:	cmp	r3, #0
    a3b8:	bne	a3e8 <read_observation_header+0xfd0>
    a3bc:	sub	r3, fp, #1024	; 0x400
    a3c0:	sub	r3, r3, #4
    a3c4:	mov	r1, r3
    a3c8:	ldr	r0, [fp, #-1112]	; 0xfffffba8
    a3cc:	bl	8cdc <handle_observation_definition>
    a3d0:	mov	r3, r0
    a3d4:	cmp	r3, #0
    a3d8:	beq	acdc <read_observation_header+0x18c4>
    a3dc:	mvn	r3, #0
    a3e0:	b	adb4 <read_observation_header+0x199c>
    a3e4:	.word	0x00000000
    a3e8:	sub	r3, fp, #1024	; 0x400
    a3ec:	sub	r3, r3, #4
    a3f0:	add	r3, r3, #60	; 0x3c
    a3f4:	mov	r2, #20
    a3f8:	movw	r1, #0
    a3fc:	movt	r1, #0
    a400:	mov	r0, r3
    a404:	bl	0 <strncmp>
    a408:	mov	r3, r0
    a40c:	cmp	r3, #0
    a410:	bne	a49c <read_observation_header+0x1084>
    a414:	sub	r1, fp, #1024	; 0x400
    a418:	sub	r1, r1, #4
    a41c:	sub	r3, fp, #1104	; 0x450
    a420:	sub	r3, r3, #4
    a424:	mov	r2, #20
    a428:	mov	r0, r3
    a42c:	bl	0 <memcpy>
    a430:	mov	r3, #0
    a434:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    a438:	sub	r3, fp, #1104	; 0x450
    a43c:	sub	r3, r3, #4
    a440:	mov	r0, r3
    a444:	bl	86b4 <rtrim>
    a448:	mrc	15, 0, r3, cr13, cr0, {3}
    a44c:	ldr	r2, [pc, #-112]	; a3e4 <read_observation_header+0xfcc>
    a450:	ldr	r3, [r3, r2]
    a454:	ldr	r3, [r3, #132]	; 0x84
    a458:	str	r3, [fp, #-12]
    a45c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a460:	ldr	r2, [r3, #4]
    a464:	sub	r3, fp, #1104	; 0x450
    a468:	sub	r3, r3, #4
    a46c:	mov	r1, #0
    a470:	ldr	r0, [fp, #-12]
    a474:	bl	0 <coda_mem_string_new>
    a478:	str	r0, [fp, #-16]
    a47c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a480:	ldr	r0, [r3, #8]
    a484:	mov	r3, #0
    a488:	ldr	r2, [fp, #-16]
    a48c:	movw	r1, #0
    a490:	movt	r1, #0
    a494:	bl	0 <coda_mem_record_add_field>
    a498:	b	acdc <read_observation_header+0x18c4>
    a49c:	sub	r3, fp, #1024	; 0x400
    a4a0:	sub	r3, r3, #4
    a4a4:	add	r3, r3, #60	; 0x3c
    a4a8:	mov	r2, #8
    a4ac:	movw	r1, #0
    a4b0:	movt	r1, #0
    a4b4:	mov	r0, r3
    a4b8:	bl	0 <strncmp>
    a4bc:	mov	r3, r0
    a4c0:	cmp	r3, #0
    a4c4:	bne	a57c <read_observation_header+0x1164>
    a4c8:	sub	r2, fp, #1024	; 0x400
    a4cc:	sub	r2, r2, #4
    a4d0:	sub	r2, r2, #8
    a4d4:	sub	r0, fp, #1024	; 0x400
    a4d8:	sub	r0, r0, #4
    a4dc:	mov	r3, #0
    a4e0:	mov	r1, #10
    a4e4:	bl	0 <coda_ascii_parse_double>
    a4e8:	mov	r3, r0
    a4ec:	cmp	r3, #0
    a4f0:	bge	a51c <read_observation_header+0x1104>
    a4f4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a4f8:	ldr	r1, [r3, #124]	; 0x7c
    a4fc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a500:	ldr	r3, [r3, #128]	; 0x80
    a504:	mov	r2, r3
    a508:	movw	r0, #0
    a50c:	movt	r0, #0
    a510:	bl	0 <coda_add_error_message>
    a514:	mvn	r3, #0
    a518:	b	adb4 <read_observation_header+0x199c>
    a51c:	mrc	15, 0, r3, cr13, cr0, {3}
    a520:	ldr	r2, [pc, #-324]	; a3e4 <read_observation_header+0xfcc>
    a524:	ldr	r3, [r3, r2]
    a528:	ldr	r3, [r3, #136]	; 0x88
    a52c:	str	r3, [fp, #-12]
    a530:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a534:	ldr	r3, [r3, #4]
    a538:	sub	r2, fp, #1024	; 0x400
    a53c:	sub	r2, r2, #4
    a540:	vldr	d7, [r2, #-8]
    a544:	vmov.f64	d0, d7
    a548:	mov	r2, r3
    a54c:	mov	r1, #0
    a550:	ldr	r0, [fp, #-12]
    a554:	bl	0 <coda_mem_double_new>
    a558:	str	r0, [fp, #-16]
    a55c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a560:	ldr	r0, [r3, #8]
    a564:	mov	r3, #0
    a568:	ldr	r2, [fp, #-16]
    a56c:	movw	r1, #0
    a570:	movt	r1, #0
    a574:	bl	0 <coda_mem_record_add_field>
    a578:	b	acdc <read_observation_header+0x18c4>
    a57c:	sub	r3, fp, #1024	; 0x400
    a580:	sub	r3, r3, #4
    a584:	add	r3, r3, #60	; 0x3c
    a588:	mov	r2, #17
    a58c:	movw	r1, #0
    a590:	movt	r1, #0
    a594:	mov	r0, r3
    a598:	bl	0 <strncmp>
    a59c:	mov	r3, r0
    a5a0:	cmp	r3, #0
    a5a4:	bne	a754 <read_observation_header+0x133c>
    a5a8:	sub	r1, fp, #1024	; 0x400
    a5ac:	sub	r1, r1, #4
    a5b0:	sub	r3, fp, #1104	; 0x450
    a5b4:	sub	r3, r3, #4
    a5b8:	mov	r2, #43	; 0x2b
    a5bc:	mov	r0, r3
    a5c0:	bl	0 <memcpy>
    a5c4:	mov	r3, #0
    a5c8:	strb	r3, [fp, #-1065]	; 0xfffffbd7
    a5cc:	mrc	15, 0, r3, cr13, cr0, {3}
    a5d0:	ldr	r2, [pc, #-500]	; a3e4 <read_observation_header+0xfcc>
    a5d4:	ldr	r3, [r3, r2]
    a5d8:	ldr	r3, [r3, #144]	; 0x90
    a5dc:	str	r3, [fp, #-12]
    a5e0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a5e4:	ldr	r2, [r3, #4]
    a5e8:	sub	r3, fp, #1104	; 0x450
    a5ec:	sub	r3, r3, #4
    a5f0:	mov	r1, #0
    a5f4:	ldr	r0, [fp, #-12]
    a5f8:	bl	0 <coda_mem_string_new>
    a5fc:	str	r0, [fp, #-24]	; 0xffffffe8
    a600:	mrc	15, 0, r3, cr13, cr0, {3}
    a604:	ldr	r2, [pc, #-552]	; a3e4 <read_observation_header+0xfcc>
    a608:	ldr	r3, [r3, r2]
    a60c:	ldr	r3, [r3, #140]	; 0x8c
    a610:	str	r3, [fp, #-12]
    a614:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a618:	mov	r1, #0
    a61c:	ldr	r0, [fp, #-12]
    a620:	bl	0 <coda_mem_time_new>
    a624:	str	r0, [fp, #-16]
    a628:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a62c:	ldr	r0, [r3, #8]
    a630:	mov	r3, #0
    a634:	ldr	r2, [fp, #-16]
    a638:	movw	r1, #0
    a63c:	movt	r1, #0
    a640:	bl	0 <coda_mem_record_add_field>
    a644:	sub	r3, fp, #1024	; 0x400
    a648:	sub	r3, r3, #4
    a64c:	add	r1, r3, #48	; 0x30
    a650:	sub	r3, fp, #1104	; 0x450
    a654:	sub	r3, r3, #4
    a658:	mov	r2, #3
    a65c:	mov	r0, r3
    a660:	bl	0 <memcpy>
    a664:	mov	r3, #0
    a668:	strb	r3, [fp, #-1105]	; 0xfffffbaf
    a66c:	sub	r3, fp, #1104	; 0x450
    a670:	sub	r3, r3, #4
    a674:	movw	r1, #0
    a678:	movt	r1, #0
    a67c:	mov	r0, r3
    a680:	bl	0 <strcmp>
    a684:	mov	r3, r0
    a688:	cmp	r3, #0
    a68c:	bne	a6fc <read_observation_header+0x12e4>
    a690:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a694:	ldrb	r3, [r3, #121]	; 0x79
    a698:	cmp	r3, #71	; 0x47
    a69c:	beq	a6b4 <read_observation_header+0x129c>
    a6a0:	cmp	r3, #82	; 0x52
    a6a4:	beq	a6cc <read_observation_header+0x12b4>
    a6a8:	cmp	r3, #69	; 0x45
    a6ac:	beq	a6e4 <read_observation_header+0x12cc>
    a6b0:	b	a700 <read_observation_header+0x12e8>
    a6b4:	sub	r2, fp, #1104	; 0x450
    a6b8:	sub	r2, r2, #4
    a6bc:	movw	r3, #20551	; 0x5047
    a6c0:	movt	r3, #83	; 0x53
    a6c4:	str	r3, [r2]
    a6c8:	b	a700 <read_observation_header+0x12e8>
    a6cc:	sub	r2, fp, #1104	; 0x450
    a6d0:	sub	r2, r2, #4
    a6d4:	movw	r3, #19527	; 0x4c47
    a6d8:	movt	r3, #79	; 0x4f
    a6dc:	str	r3, [r2]
    a6e0:	b	a700 <read_observation_header+0x12e8>
    a6e4:	sub	r2, fp, #1104	; 0x450
    a6e8:	sub	r2, r2, #4
    a6ec:	movw	r3, #16711	; 0x4147
    a6f0:	movt	r3, #76	; 0x4c
    a6f4:	str	r3, [r2]
    a6f8:	b	a700 <read_observation_header+0x12e8>
    a6fc:	nop	{0}
    a700:	mrc	15, 0, r3, cr13, cr0, {3}
    a704:	ldr	r2, [pc, #-808]	; a3e4 <read_observation_header+0xfcc>
    a708:	ldr	r3, [r3, r2]
    a70c:	ldr	r3, [r3, #156]	; 0x9c
    a710:	str	r3, [fp, #-12]
    a714:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a718:	ldr	r2, [r3, #4]
    a71c:	sub	r3, fp, #1104	; 0x450
    a720:	sub	r3, r3, #4
    a724:	mov	r1, #0
    a728:	ldr	r0, [fp, #-12]
    a72c:	bl	0 <coda_mem_string_new>
    a730:	str	r0, [fp, #-16]
    a734:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a738:	ldr	r0, [r3, #8]
    a73c:	mov	r3, #0
    a740:	ldr	r2, [fp, #-16]
    a744:	movw	r1, #0
    a748:	movt	r1, #0
    a74c:	bl	0 <coda_mem_record_add_field>
    a750:	b	acdc <read_observation_header+0x18c4>
    a754:	sub	r3, fp, #1024	; 0x400
    a758:	sub	r3, r3, #4
    a75c:	add	r3, r3, #60	; 0x3c
    a760:	mov	r2, #16
    a764:	movw	r1, #0
    a768:	movt	r1, #0
    a76c:	mov	r0, r3
    a770:	bl	0 <strncmp>
    a774:	mov	r3, r0
    a778:	cmp	r3, #0
    a77c:	bne	a92c <read_observation_header+0x1514>
    a780:	sub	r1, fp, #1024	; 0x400
    a784:	sub	r1, r1, #4
    a788:	sub	r3, fp, #1104	; 0x450
    a78c:	sub	r3, r3, #4
    a790:	mov	r2, #43	; 0x2b
    a794:	mov	r0, r3
    a798:	bl	0 <memcpy>
    a79c:	mov	r3, #0
    a7a0:	strb	r3, [fp, #-1065]	; 0xfffffbd7
    a7a4:	mrc	15, 0, r3, cr13, cr0, {3}
    a7a8:	ldr	r2, [pc, #-972]	; a3e4 <read_observation_header+0xfcc>
    a7ac:	ldr	r3, [r3, r2]
    a7b0:	ldr	r3, [r3, #152]	; 0x98
    a7b4:	str	r3, [fp, #-12]
    a7b8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a7bc:	ldr	r2, [r3, #4]
    a7c0:	sub	r3, fp, #1104	; 0x450
    a7c4:	sub	r3, r3, #4
    a7c8:	mov	r1, #0
    a7cc:	ldr	r0, [fp, #-12]
    a7d0:	bl	0 <coda_mem_string_new>
    a7d4:	str	r0, [fp, #-28]	; 0xffffffe4
    a7d8:	mrc	15, 0, r3, cr13, cr0, {3}
    a7dc:	ldr	r2, [pc, #-1024]	; a3e4 <read_observation_header+0xfcc>
    a7e0:	ldr	r3, [r3, r2]
    a7e4:	ldr	r3, [r3, #148]	; 0x94
    a7e8:	str	r3, [fp, #-12]
    a7ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a7f0:	mov	r1, #0
    a7f4:	ldr	r0, [fp, #-12]
    a7f8:	bl	0 <coda_mem_time_new>
    a7fc:	str	r0, [fp, #-16]
    a800:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a804:	ldr	r0, [r3, #8]
    a808:	mov	r3, #0
    a80c:	ldr	r2, [fp, #-16]
    a810:	movw	r1, #0
    a814:	movt	r1, #0
    a818:	bl	0 <coda_mem_record_add_field>
    a81c:	sub	r3, fp, #1024	; 0x400
    a820:	sub	r3, r3, #4
    a824:	add	r1, r3, #48	; 0x30
    a828:	sub	r3, fp, #1104	; 0x450
    a82c:	sub	r3, r3, #4
    a830:	mov	r2, #3
    a834:	mov	r0, r3
    a838:	bl	0 <memcpy>
    a83c:	mov	r3, #0
    a840:	strb	r3, [fp, #-1105]	; 0xfffffbaf
    a844:	sub	r3, fp, #1104	; 0x450
    a848:	sub	r3, r3, #4
    a84c:	movw	r1, #0
    a850:	movt	r1, #0
    a854:	mov	r0, r3
    a858:	bl	0 <strcmp>
    a85c:	mov	r3, r0
    a860:	cmp	r3, #0
    a864:	bne	a8d4 <read_observation_header+0x14bc>
    a868:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a86c:	ldrb	r3, [r3, #121]	; 0x79
    a870:	cmp	r3, #71	; 0x47
    a874:	beq	a88c <read_observation_header+0x1474>
    a878:	cmp	r3, #82	; 0x52
    a87c:	beq	a8a4 <read_observation_header+0x148c>
    a880:	cmp	r3, #69	; 0x45
    a884:	beq	a8bc <read_observation_header+0x14a4>
    a888:	b	a8d8 <read_observation_header+0x14c0>
    a88c:	sub	r2, fp, #1104	; 0x450
    a890:	sub	r2, r2, #4
    a894:	movw	r3, #20551	; 0x5047
    a898:	movt	r3, #83	; 0x53
    a89c:	str	r3, [r2]
    a8a0:	b	a8d8 <read_observation_header+0x14c0>
    a8a4:	sub	r2, fp, #1104	; 0x450
    a8a8:	sub	r2, r2, #4
    a8ac:	movw	r3, #19527	; 0x4c47
    a8b0:	movt	r3, #79	; 0x4f
    a8b4:	str	r3, [r2]
    a8b8:	b	a8d8 <read_observation_header+0x14c0>
    a8bc:	sub	r2, fp, #1104	; 0x450
    a8c0:	sub	r2, r2, #4
    a8c4:	movw	r3, #16711	; 0x4147
    a8c8:	movt	r3, #76	; 0x4c
    a8cc:	str	r3, [r2]
    a8d0:	b	a8d8 <read_observation_header+0x14c0>
    a8d4:	nop	{0}
    a8d8:	mrc	15, 0, r3, cr13, cr0, {3}
    a8dc:	ldr	r2, [pc, #-1280]	; a3e4 <read_observation_header+0xfcc>
    a8e0:	ldr	r3, [r3, r2]
    a8e4:	ldr	r3, [r3, #156]	; 0x9c
    a8e8:	str	r3, [fp, #-12]
    a8ec:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a8f0:	ldr	r2, [r3, #4]
    a8f4:	sub	r3, fp, #1104	; 0x450
    a8f8:	sub	r3, r3, #4
    a8fc:	mov	r1, #0
    a900:	ldr	r0, [fp, #-12]
    a904:	bl	0 <coda_mem_string_new>
    a908:	str	r0, [fp, #-16]
    a90c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a910:	ldr	r0, [r3, #8]
    a914:	mov	r3, #0
    a918:	ldr	r2, [fp, #-16]
    a91c:	movw	r1, #0
    a920:	movt	r1, #0
    a924:	bl	0 <coda_mem_record_add_field>
    a928:	b	acdc <read_observation_header+0x18c4>
    a92c:	sub	r3, fp, #1024	; 0x400
    a930:	sub	r3, r3, #4
    a934:	add	r3, r3, #60	; 0x3c
    a938:	mov	r2, #19
    a93c:	movw	r1, #0
    a940:	movt	r1, #0
    a944:	mov	r0, r3
    a948:	bl	0 <strncmp>
    a94c:	mov	r3, r0
    a950:	cmp	r3, #0
    a954:	bne	aa08 <read_observation_header+0x15f0>
    a958:	sub	r2, fp, #1040	; 0x410
    a95c:	sub	r2, r2, #4
    a960:	sub	r0, fp, #1024	; 0x400
    a964:	sub	r0, r0, #4
    a968:	mov	r3, #0
    a96c:	mov	r1, #6
    a970:	bl	0 <coda_ascii_parse_int64>
    a974:	mov	r3, r0
    a978:	cmp	r3, #0
    a97c:	bge	a9a8 <read_observation_header+0x1590>
    a980:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a984:	ldr	r1, [r3, #124]	; 0x7c
    a988:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a98c:	ldr	r3, [r3, #128]	; 0x80
    a990:	mov	r2, r3
    a994:	movw	r0, #0
    a998:	movt	r0, #0
    a99c:	bl	0 <coda_add_error_message>
    a9a0:	mvn	r3, #0
    a9a4:	b	adb4 <read_observation_header+0x199c>
    a9a8:	mrc	15, 0, r3, cr13, cr0, {3}
    a9ac:	ldr	r2, [pc, #-1488]	; a3e4 <read_observation_header+0xfcc>
    a9b0:	ldr	r3, [r3, r2]
    a9b4:	ldr	r3, [r3, #160]	; 0xa0
    a9b8:	str	r3, [fp, #-12]
    a9bc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a9c0:	ldr	r1, [r3, #4]
    a9c4:	sub	r3, fp, #1040	; 0x410
    a9c8:	sub	r3, r3, #4
    a9cc:	ldrd	r2, [r3]
    a9d0:	uxtb	r3, r2
    a9d4:	mov	r2, r1
    a9d8:	mov	r1, #0
    a9dc:	ldr	r0, [fp, #-12]
    a9e0:	bl	0 <coda_mem_uint8_new>
    a9e4:	str	r0, [fp, #-16]
    a9e8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    a9ec:	ldr	r0, [r3, #8]
    a9f0:	mov	r3, #0
    a9f4:	ldr	r2, [fp, #-16]
    a9f8:	movw	r1, #0
    a9fc:	movt	r1, #0
    aa00:	bl	0 <coda_mem_record_add_field>
    aa04:	b	acdc <read_observation_header+0x18c4>
    aa08:	sub	r3, fp, #1024	; 0x400
    aa0c:	sub	r3, r3, #4
    aa10:	add	r3, r3, #60	; 0x3c
    aa14:	mov	r2, #18
    aa18:	movw	r1, #0
    aa1c:	movt	r1, #0
    aa20:	mov	r0, r3
    aa24:	bl	0 <strncmp>
    aa28:	mov	r3, r0
    aa2c:	cmp	r3, #0
    aa30:	beq	acdc <read_observation_header+0x18c4>
    aa34:	sub	r3, fp, #1024	; 0x400
    aa38:	sub	r3, r3, #4
    aa3c:	add	r3, r3, #60	; 0x3c
    aa40:	mov	r2, #18
    aa44:	movw	r1, #0
    aa48:	movt	r1, #0
    aa4c:	mov	r0, r3
    aa50:	bl	0 <strncmp>
    aa54:	mov	r3, r0
    aa58:	cmp	r3, #0
    aa5c:	beq	acdc <read_observation_header+0x18c4>
    aa60:	sub	r3, fp, #1024	; 0x400
    aa64:	sub	r3, r3, #4
    aa68:	add	r3, r3, #60	; 0x3c
    aa6c:	mov	r2, #18
    aa70:	movw	r1, #0
    aa74:	movt	r1, #0
    aa78:	mov	r0, r3
    aa7c:	bl	0 <strncmp>
    aa80:	mov	r3, r0
    aa84:	cmp	r3, #0
    aa88:	beq	acdc <read_observation_header+0x18c4>
    aa8c:	sub	r3, fp, #1024	; 0x400
    aa90:	sub	r3, r3, #4
    aa94:	add	r3, r3, #60	; 0x3c
    aa98:	mov	r2, #12
    aa9c:	movw	r1, #0
    aaa0:	movt	r1, #0
    aaa4:	mov	r0, r3
    aaa8:	bl	0 <strncmp>
    aaac:	mov	r3, r0
    aab0:	cmp	r3, #0
    aab4:	bne	ab68 <read_observation_header+0x1750>
    aab8:	sub	r2, fp, #1040	; 0x410
    aabc:	sub	r2, r2, #4
    aac0:	sub	r0, fp, #1024	; 0x400
    aac4:	sub	r0, r0, #4
    aac8:	mov	r3, #0
    aacc:	mov	r1, #6
    aad0:	bl	0 <coda_ascii_parse_int64>
    aad4:	mov	r3, r0
    aad8:	cmp	r3, #0
    aadc:	bge	ab08 <read_observation_header+0x16f0>
    aae0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    aae4:	ldr	r1, [r3, #124]	; 0x7c
    aae8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    aaec:	ldr	r3, [r3, #128]	; 0x80
    aaf0:	mov	r2, r3
    aaf4:	movw	r0, #0
    aaf8:	movt	r0, #0
    aafc:	bl	0 <coda_add_error_message>
    ab00:	mvn	r3, #0
    ab04:	b	adb4 <read_observation_header+0x199c>
    ab08:	mrc	15, 0, r3, cr13, cr0, {3}
    ab0c:	ldr	r2, [pc, #-1840]	; a3e4 <read_observation_header+0xfcc>
    ab10:	ldr	r3, [r3, r2]
    ab14:	ldr	r3, [r3, #164]	; 0xa4
    ab18:	str	r3, [fp, #-12]
    ab1c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ab20:	ldr	r1, [r3, #4]
    ab24:	sub	r3, fp, #1040	; 0x410
    ab28:	sub	r3, r3, #4
    ab2c:	ldrd	r2, [r3]
    ab30:	mov	r3, r2
    ab34:	mov	r2, r1
    ab38:	mov	r1, #0
    ab3c:	ldr	r0, [fp, #-12]
    ab40:	bl	0 <coda_mem_int32_new>
    ab44:	str	r0, [fp, #-16]
    ab48:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ab4c:	ldr	r0, [r3, #8]
    ab50:	mov	r3, #0
    ab54:	ldr	r2, [fp, #-16]
    ab58:	movw	r1, #0
    ab5c:	movt	r1, #0
    ab60:	bl	0 <coda_mem_record_add_field>
    ab64:	b	acdc <read_observation_header+0x18c4>
    ab68:	sub	r3, fp, #1024	; 0x400
    ab6c:	sub	r3, r3, #4
    ab70:	add	r3, r3, #60	; 0x3c
    ab74:	mov	r2, #15
    ab78:	movw	r1, #0
    ab7c:	movt	r1, #0
    ab80:	mov	r0, r3
    ab84:	bl	0 <strncmp>
    ab88:	mov	r3, r0
    ab8c:	cmp	r3, #0
    ab90:	bne	ac44 <read_observation_header+0x182c>
    ab94:	sub	r2, fp, #1040	; 0x410
    ab98:	sub	r2, r2, #4
    ab9c:	sub	r0, fp, #1024	; 0x400
    aba0:	sub	r0, r0, #4
    aba4:	mov	r3, #0
    aba8:	mov	r1, #6
    abac:	bl	0 <coda_ascii_parse_int64>
    abb0:	mov	r3, r0
    abb4:	cmp	r3, #0
    abb8:	bge	abe4 <read_observation_header+0x17cc>
    abbc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    abc0:	ldr	r1, [r3, #124]	; 0x7c
    abc4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    abc8:	ldr	r3, [r3, #128]	; 0x80
    abcc:	mov	r2, r3
    abd0:	movw	r0, #0
    abd4:	movt	r0, #0
    abd8:	bl	0 <coda_add_error_message>
    abdc:	mvn	r3, #0
    abe0:	b	adb4 <read_observation_header+0x199c>
    abe4:	mrc	15, 0, r3, cr13, cr0, {3}
    abe8:	ldr	r2, [pc, #-2060]	; a3e4 <read_observation_header+0xfcc>
    abec:	ldr	r3, [r3, r2]
    abf0:	ldr	r3, [r3, #168]	; 0xa8
    abf4:	str	r3, [fp, #-12]
    abf8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    abfc:	ldr	r1, [r3, #4]
    ac00:	sub	r3, fp, #1040	; 0x410
    ac04:	sub	r3, r3, #4
    ac08:	ldrd	r2, [r3]
    ac0c:	uxth	r3, r2
    ac10:	mov	r2, r1
    ac14:	mov	r1, #0
    ac18:	ldr	r0, [fp, #-12]
    ac1c:	bl	0 <coda_mem_uint16_new>
    ac20:	str	r0, [fp, #-16]
    ac24:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ac28:	ldr	r0, [r3, #8]
    ac2c:	mov	r3, #0
    ac30:	ldr	r2, [fp, #-16]
    ac34:	movw	r1, #0
    ac38:	movt	r1, #0
    ac3c:	bl	0 <coda_mem_record_add_field>
    ac40:	b	acdc <read_observation_header+0x18c4>
    ac44:	sub	r3, fp, #1024	; 0x400
    ac48:	sub	r3, r3, #4
    ac4c:	add	r3, r3, #60	; 0x3c
    ac50:	mov	r2, #14
    ac54:	movw	r1, #0
    ac58:	movt	r1, #0
    ac5c:	mov	r0, r3
    ac60:	bl	0 <strncmp>
    ac64:	mov	r3, r0
    ac68:	cmp	r3, #0
    ac6c:	beq	acdc <read_observation_header+0x18c4>
    ac70:	sub	r3, fp, #1024	; 0x400
    ac74:	sub	r3, r3, #4
    ac78:	add	r3, r3, #60	; 0x3c
    ac7c:	mov	r2, #13
    ac80:	movw	r1, #0
    ac84:	movt	r1, #0
    ac88:	mov	r0, r3
    ac8c:	bl	0 <strncmp>
    ac90:	mov	r3, r0
    ac94:	cmp	r3, #0
    ac98:	beq	ad50 <read_observation_header+0x1938>
    ac9c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    aca0:	ldr	r1, [r3, #124]	; 0x7c
    aca4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    aca8:	ldr	r3, [r3, #128]	; 0x80
    acac:	add	r3, r3, #60	; 0x3c
    acb0:	sub	r2, fp, #1024	; 0x400
    acb4:	sub	r2, r2, #4
    acb8:	add	r2, r2, #60	; 0x3c
    acbc:	str	r3, [sp]
    acc0:	mov	r3, r1
    acc4:	movw	r1, #0
    acc8:	movt	r1, #0
    accc:	mvn	r0, #21
    acd0:	bl	0 <coda_set_error>
    acd4:	mvn	r3, #0
    acd8:	b	adb4 <read_observation_header+0x199c>
    acdc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ace0:	ldr	r3, [r3]
    ace4:	mov	r0, r3
    ace8:	bl	0 <ftell>
    acec:	mov	r2, r0
    acf0:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    acf4:	str	r2, [r3, #128]	; 0x80
    acf8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    acfc:	ldr	r3, [r3, #124]	; 0x7c
    ad00:	add	r2, r3, #1
    ad04:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad08:	str	r2, [r3, #124]	; 0x7c
    ad0c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad10:	ldr	r3, [r3]
    ad14:	sub	r2, fp, #1024	; 0x400
    ad18:	sub	r2, r2, #4
    ad1c:	mov	r1, r2
    ad20:	mov	r0, r3
    ad24:	bl	873c <get_line>
    ad28:	str	r0, [fp, #-8]
    ad2c:	ldr	r3, [fp, #-8]
    ad30:	cmp	r3, #0
    ad34:	bge	ad40 <read_observation_header+0x1928>
    ad38:	mvn	r3, #0
    ad3c:	b	adb4 <read_observation_header+0x199c>
    ad40:	ldr	r3, [fp, #-8]
    ad44:	cmp	r3, #0
    ad48:	bgt	94bc <read_observation_header+0xa4>
    ad4c:	b	ad54 <read_observation_header+0x193c>
    ad50:	nop	{0}
    ad54:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad58:	ldr	r0, [r3, #8]
    ad5c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad60:	ldr	r2, [r3, #140]	; 0x8c
    ad64:	mov	r3, #0
    ad68:	movw	r1, #0
    ad6c:	movt	r1, #0
    ad70:	bl	0 <coda_mem_record_add_field>
    ad74:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad78:	mov	r2, #0
    ad7c:	str	r2, [r3, #140]	; 0x8c
    ad80:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad84:	ldr	r3, [r3]
    ad88:	mov	r0, r3
    ad8c:	bl	0 <ftell>
    ad90:	mov	r2, r0
    ad94:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ad98:	str	r2, [r3, #128]	; 0x80
    ad9c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    ada0:	ldr	r3, [r3, #124]	; 0x7c
    ada4:	add	r2, r3, #1
    ada8:	ldr	r3, [fp, #-1112]	; 0xfffffba8
    adac:	str	r2, [r3, #124]	; 0x7c
    adb0:	mov	r3, #0
    adb4:	mov	r0, r3
    adb8:	sub	sp, fp, #4
    adbc:	ldr	fp, [sp]
    adc0:	add	sp, sp, #4
    adc4:	pop	{pc}		; (ldr pc, [sp], #4)

0000adc8 <read_observation_record_for_satellite>:
    adc8:	str	fp, [sp, #-8]!
    adcc:	str	lr, [sp, #4]
    add0:	add	fp, sp, #4
    add4:	sub	sp, sp, #1072	; 0x430
    add8:	sub	sp, sp, #8
    addc:	str	r0, [fp, #-1072]	; 0xfffffbd0
    ade0:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    ade4:	ldr	r3, [r3]
    ade8:	mov	r0, r3
    adec:	bl	0 <ftell>
    adf0:	mov	r2, r0
    adf4:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    adf8:	str	r2, [r3, #128]	; 0x80
    adfc:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    ae00:	ldr	r3, [r3, #124]	; 0x7c
    ae04:	add	r2, r3, #1
    ae08:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    ae0c:	str	r2, [r3, #124]	; 0x7c
    ae10:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    ae14:	ldr	r2, [r3]
    ae18:	sub	r3, fp, #1024	; 0x400
    ae1c:	sub	r3, r3, #4
    ae20:	sub	r3, r3, #4
    ae24:	mov	r1, r3
    ae28:	mov	r0, r2
    ae2c:	bl	873c <get_line>
    ae30:	str	r0, [fp, #-12]
    ae34:	ldr	r3, [fp, #-12]
    ae38:	cmp	r3, #0
    ae3c:	bge	ae48 <read_observation_record_for_satellite+0x80>
    ae40:	mvn	r3, #0
    ae44:	b	b3e0 <read_observation_record_for_satellite+0x618>
    ae48:	ldrb	r3, [fp, #-1032]	; 0xfffffbf8
    ae4c:	sub	r3, r3, #69	; 0x45
    ae50:	cmp	r3, #14
    ae54:	ldrls	pc, [pc, r3, lsl #2]
    ae58:	b	aed8 <read_observation_record_for_satellite+0x110>
    ae5c:	.word	0x0000aeb8
    ae60:	.word	0x0000aed8
    ae64:	.word	0x0000ae98
    ae68:	.word	0x0000aed8
    ae6c:	.word	0x0000aed8
    ae70:	.word	0x0000aed8
    ae74:	.word	0x0000aed8
    ae78:	.word	0x0000aed8
    ae7c:	.word	0x0000aed8
    ae80:	.word	0x0000aed8
    ae84:	.word	0x0000aed8
    ae88:	.word	0x0000aed8
    ae8c:	.word	0x0000aed8
    ae90:	.word	0x0000aea8
    ae94:	.word	0x0000aec8
    ae98:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    ae9c:	add	r3, r3, #12
    aea0:	str	r3, [fp, #-8]
    aea4:	b	af00 <read_observation_record_for_satellite+0x138>
    aea8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    aeac:	add	r3, r3, #36	; 0x24
    aeb0:	str	r3, [fp, #-8]
    aeb4:	b	af00 <read_observation_record_for_satellite+0x138>
    aeb8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    aebc:	add	r3, r3, #60	; 0x3c
    aec0:	str	r3, [fp, #-8]
    aec4:	b	af00 <read_observation_record_for_satellite+0x138>
    aec8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    aecc:	add	r3, r3, #84	; 0x54
    aed0:	str	r3, [fp, #-8]
    aed4:	b	af00 <read_observation_record_for_satellite+0x138>
    aed8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    aedc:	ldr	r2, [r3, #124]	; 0x7c
    aee0:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    aee4:	ldr	r3, [r3, #128]	; 0x80
    aee8:	movw	r1, #0
    aeec:	movt	r1, #0
    aef0:	mvn	r0, #21
    aef4:	bl	0 <coda_set_error>
    aef8:	mvn	r3, #0
    aefc:	b	b3e0 <read_observation_record_for_satellite+0x618>
    af00:	ldr	r3, [fp, #-8]
    af04:	ldr	r3, [r3, #16]
    af08:	cmp	r3, #0
    af0c:	bne	af4c <read_observation_record_for_satellite+0x184>
    af10:	ldrb	r3, [fp, #-1032]	; 0xfffffbf8
    af14:	mov	r1, r3
    af18:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    af1c:	ldr	r2, [r3, #124]	; 0x7c
    af20:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    af24:	ldr	r3, [r3, #128]	; 0x80
    af28:	str	r3, [sp]
    af2c:	mov	r3, r2
    af30:	mov	r2, r1
    af34:	movw	r1, #0
    af38:	movt	r1, #0
    af3c:	mvn	r0, #21
    af40:	bl	0 <coda_set_error>
    af44:	mvn	r3, #0
    af48:	b	b3e0 <read_observation_record_for_satellite+0x618>
    af4c:	ldr	r3, [fp, #-8]
    af50:	ldr	r3, [r3, #8]
    af54:	cmp	r3, #0
    af58:	bne	af7c <read_observation_record_for_satellite+0x1b4>
    af5c:	movw	r3, #0
    af60:	movt	r3, #0
    af64:	movw	r2, #2414	; 0x96e
    af68:	movw	r1, #0
    af6c:	movt	r1, #0
    af70:	movw	r0, #0
    af74:	movt	r0, #0
    af78:	bl	0 <__assert_fail>
    af7c:	ldr	r3, [fp, #-8]
    af80:	ldr	r3, [r3]
    af84:	lsl	r3, r3, #4
    af88:	ldr	r2, [fp, #-12]
    af8c:	cmp	r2, r3
    af90:	ble	afdc <read_observation_record_for_satellite+0x214>
    af94:	b	afc0 <read_observation_record_for_satellite+0x1f8>
    af98:	sub	r3, fp, #1024	; 0x400
    af9c:	sub	r3, r3, #4
    afa0:	sub	r3, r3, #4
    afa4:	ldr	r2, [fp, #-12]
    afa8:	add	r3, r3, r2
    afac:	mov	r2, #32
    afb0:	strb	r2, [r3]
    afb4:	ldr	r3, [fp, #-12]
    afb8:	add	r3, r3, #1
    afbc:	str	r3, [fp, #-12]
    afc0:	ldr	r3, [fp, #-8]
    afc4:	ldr	r3, [r3]
    afc8:	lsl	r3, r3, #4
    afcc:	add	r3, r3, #2
    afd0:	ldr	r2, [fp, #-12]
    afd4:	cmp	r2, r3
    afd8:	ble	af98 <read_observation_record_for_satellite+0x1d0>
    afdc:	ldr	r3, [fp, #-8]
    afe0:	ldr	r3, [r3]
    afe4:	lsl	r3, r3, #4
    afe8:	add	r3, r3, #2
    afec:	ldr	r2, [fp, #-12]
    aff0:	cmp	r2, r3
    aff4:	bgt	b02c <read_observation_record_for_satellite+0x264>
    aff8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    affc:	ldr	r2, [r3, #124]	; 0x7c
    b000:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b004:	ldr	r3, [r3, #128]	; 0x80
    b008:	str	r3, [sp]
    b00c:	mov	r3, r2
    b010:	ldr	r2, [fp, #-12]
    b014:	movw	r1, #0
    b018:	movt	r1, #0
    b01c:	mvn	r0, #21
    b020:	bl	0 <coda_set_error>
    b024:	mvn	r3, #0
    b028:	b	b3e0 <read_observation_record_for_satellite+0x618>
    b02c:	ldr	r3, [fp, #-8]
    b030:	ldr	r3, [r3, #8]
    b034:	mov	r1, #0
    b038:	mov	r0, r3
    b03c:	bl	0 <coda_mem_record_new>
    b040:	str	r0, [fp, #-20]	; 0xffffffec
    b044:	sub	r3, fp, #4
    b048:	sub	r3, r3, #1024	; 0x400
    b04c:	sub	r3, r3, #4
    b050:	ldrh	r3, [r3, #1]
    b054:	uxth	r2, r3
    b058:	sub	r3, fp, #4
    b05c:	sub	r3, r3, #1040	; 0x410
    b060:	sub	r3, r3, #8
    b064:	strh	r2, [r3]
    b068:	mov	r3, #0
    b06c:	strb	r3, [fp, #-1050]	; 0xfffffbe6
    b070:	sub	r2, fp, #1040	; 0x410
    b074:	sub	r2, r2, #4
    b078:	sub	r2, r2, #12
    b07c:	sub	r3, fp, #1040	; 0x410
    b080:	sub	r3, r3, #4
    b084:	sub	r3, r3, #8
    b088:	movw	r1, #0
    b08c:	movt	r1, #0
    b090:	mov	r0, r3
    b094:	bl	0 <__isoc99_sscanf>
    b098:	mov	r3, r0
    b09c:	cmp	r3, #1
    b0a0:	beq	b0d8 <read_observation_record_for_satellite+0x310>
    b0a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    b0a8:	bl	0 <coda_dynamic_type_delete>
    b0ac:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b0b0:	ldr	r2, [r3, #124]	; 0x7c
    b0b4:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b0b8:	ldr	r3, [r3, #128]	; 0x80
    b0bc:	add	r3, r3, #1
    b0c0:	movw	r1, #0
    b0c4:	movt	r1, #0
    b0c8:	mvn	r0, #21
    b0cc:	bl	0 <coda_set_error>
    b0d0:	mvn	r3, #0
    b0d4:	b	b3e0 <read_observation_record_for_satellite+0x618>
    b0d8:	mrc	15, 0, r3, cr13, cr0, {3}
    b0dc:	ldr	r2, [pc, #784]	; b3f4 <read_observation_record_for_satellite+0x62c>
    b0e0:	ldr	r3, [r3, r2]
    b0e4:	add	r3, r3, #192	; 0xc0
    b0e8:	ldr	r0, [r3]
    b0ec:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b0f0:	ldr	r2, [r3, #4]
    b0f4:	ldr	r3, [fp, #-1056]	; 0xfffffbe0
    b0f8:	uxtb	r3, r3
    b0fc:	mov	r1, #0
    b100:	bl	0 <coda_mem_uint8_new>
    b104:	str	r0, [fp, #-24]	; 0xffffffe8
    b108:	mov	r3, #0
    b10c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b110:	movw	r1, #0
    b114:	movt	r1, #0
    b118:	ldr	r0, [fp, #-20]	; 0xffffffec
    b11c:	bl	0 <coda_mem_record_add_field>
    b120:	mov	r3, #0
    b124:	str	r3, [fp, #-16]
    b128:	b	b3b4 <read_observation_record_for_satellite+0x5ec>
    b12c:	ldr	r3, [fp, #-16]
    b130:	lsl	r3, r3, #4
    b134:	add	r2, r3, #3
    b138:	sub	r3, fp, #1024	; 0x400
    b13c:	sub	r3, r3, #4
    b140:	sub	r3, r3, #4
    b144:	add	r1, r3, r2
    b148:	sub	r3, fp, #1040	; 0x410
    b14c:	sub	r3, r3, #4
    b150:	sub	r3, r3, #8
    b154:	mov	r2, #16
    b158:	mov	r0, r3
    b15c:	bl	0 <memcpy>
    b160:	ldrb	r3, [fp, #-1038]	; 0xfffffbf2
    b164:	cmp	r3, #47	; 0x2f
    b168:	bls	b188 <read_observation_record_for_satellite+0x3c0>
    b16c:	ldrb	r3, [fp, #-1038]	; 0xfffffbf2
    b170:	cmp	r3, #57	; 0x39
    b174:	bhi	b188 <read_observation_record_for_satellite+0x3c0>
    b178:	ldrb	r3, [fp, #-1038]	; 0xfffffbf2
    b17c:	sub	r3, r3, #48	; 0x30
    b180:	uxtb	r3, r3
    b184:	b	b18c <read_observation_record_for_satellite+0x3c4>
    b188:	mov	r3, #0
    b18c:	strb	r3, [fp, #-25]	; 0xffffffe7
    b190:	ldrb	r3, [fp, #-1037]	; 0xfffffbf3
    b194:	cmp	r3, #47	; 0x2f
    b198:	bls	b1b8 <read_observation_record_for_satellite+0x3f0>
    b19c:	ldrb	r3, [fp, #-1037]	; 0xfffffbf3
    b1a0:	cmp	r3, #57	; 0x39
    b1a4:	bhi	b1b8 <read_observation_record_for_satellite+0x3f0>
    b1a8:	ldrb	r3, [fp, #-1037]	; 0xfffffbf3
    b1ac:	sub	r3, r3, #48	; 0x30
    b1b0:	uxtb	r3, r3
    b1b4:	b	b1bc <read_observation_record_for_satellite+0x3f4>
    b1b8:	mov	r3, #0
    b1bc:	strb	r3, [fp, #-26]	; 0xffffffe6
    b1c0:	mov	r3, #0
    b1c4:	strb	r3, [fp, #-1038]	; 0xfffffbf2
    b1c8:	sub	r2, fp, #1056	; 0x420
    b1cc:	sub	r2, r2, #4
    b1d0:	sub	r2, r2, #8
    b1d4:	sub	r3, fp, #1040	; 0x410
    b1d8:	sub	r3, r3, #4
    b1dc:	sub	r3, r3, #8
    b1e0:	movw	r1, #0
    b1e4:	movt	r1, #0
    b1e8:	mov	r0, r3
    b1ec:	bl	0 <__isoc99_sscanf>
    b1f0:	mov	r3, r0
    b1f4:	cmp	r3, #1
    b1f8:	beq	b280 <read_observation_record_for_satellite+0x4b8>
    b1fc:	sub	r3, fp, #1040	; 0x410
    b200:	sub	r3, r3, #4
    b204:	sub	r3, r3, #8
    b208:	movw	r1, #0
    b20c:	movt	r1, #0
    b210:	mov	r0, r3
    b214:	bl	0 <strcmp>
    b218:	mov	r3, r0
    b21c:	cmp	r3, #0
    b220:	beq	b268 <read_observation_record_for_satellite+0x4a0>
    b224:	ldr	r0, [fp, #-20]	; 0xffffffec
    b228:	bl	0 <coda_dynamic_type_delete>
    b22c:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b230:	ldr	r1, [r3, #124]	; 0x7c
    b234:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b238:	ldr	r3, [r3, #128]	; 0x80
    b23c:	add	r2, r3, #3
    b240:	ldr	r3, [fp, #-16]
    b244:	lsl	r3, r3, #4
    b248:	add	r3, r2, r3
    b24c:	mov	r2, r1
    b250:	movw	r1, #0
    b254:	movt	r1, #0
    b258:	mvn	r0, #21
    b25c:	bl	0 <coda_set_error>
    b260:	mvn	r3, #0
    b264:	b	b3e0 <read_observation_record_for_satellite+0x618>
    b268:	sub	r3, fp, #1056	; 0x420
    b26c:	sub	r3, r3, #4
    b270:	mov	r1, r3
    b274:	mov	r2, #0
    b278:	mov	r3, #0
    b27c:	strd	r2, [r1, #-8]
    b280:	mrc	15, 0, r3, cr13, cr0, {3}
    b284:	ldr	r2, [pc, #360]	; b3f4 <read_observation_record_for_satellite+0x62c>
    b288:	ldr	r3, [r3, r2]
    b28c:	add	r3, r3, #208	; 0xd0
    b290:	ldr	r3, [r3]
    b294:	mov	r1, #0
    b298:	mov	r0, r3
    b29c:	bl	0 <coda_mem_record_new>
    b2a0:	str	r0, [fp, #-32]	; 0xffffffe0
    b2a4:	mrc	15, 0, r3, cr13, cr0, {3}
    b2a8:	ldr	r2, [pc, #324]	; b3f4 <read_observation_record_for_satellite+0x62c>
    b2ac:	ldr	r3, [r3, r2]
    b2b0:	add	r3, r3, #196	; 0xc4
    b2b4:	ldr	r0, [r3]
    b2b8:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b2bc:	ldr	r3, [r3, #4]
    b2c0:	sub	r2, fp, #1056	; 0x420
    b2c4:	sub	r2, r2, #4
    b2c8:	vldr	d7, [r2, #-8]
    b2cc:	vmov.f64	d0, d7
    b2d0:	mov	r2, r3
    b2d4:	mov	r1, #0
    b2d8:	bl	0 <coda_mem_double_new>
    b2dc:	str	r0, [fp, #-24]	; 0xffffffe8
    b2e0:	mov	r3, #0
    b2e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b2e8:	movw	r1, #0
    b2ec:	movt	r1, #0
    b2f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b2f4:	bl	0 <coda_mem_record_add_field>
    b2f8:	mrc	15, 0, r3, cr13, cr0, {3}
    b2fc:	ldr	r2, [pc, #240]	; b3f4 <read_observation_record_for_satellite+0x62c>
    b300:	ldr	r3, [r3, r2]
    b304:	add	r3, r3, #200	; 0xc8
    b308:	ldr	r0, [r3]
    b30c:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b310:	ldr	r2, [r3, #4]
    b314:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    b318:	mov	r1, #0
    b31c:	bl	0 <coda_mem_uint8_new>
    b320:	str	r0, [fp, #-24]	; 0xffffffe8
    b324:	mov	r3, #0
    b328:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b32c:	movw	r1, #0
    b330:	movt	r1, #0
    b334:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b338:	bl	0 <coda_mem_record_add_field>
    b33c:	mrc	15, 0, r3, cr13, cr0, {3}
    b340:	ldr	r2, [pc, #172]	; b3f4 <read_observation_record_for_satellite+0x62c>
    b344:	ldr	r3, [r3, r2]
    b348:	add	r3, r3, #204	; 0xcc
    b34c:	ldr	r0, [r3]
    b350:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
    b354:	ldr	r2, [r3, #4]
    b358:	ldrb	r3, [fp, #-26]	; 0xffffffe6
    b35c:	mov	r1, #0
    b360:	bl	0 <coda_mem_uint8_new>
    b364:	str	r0, [fp, #-24]	; 0xffffffe8
    b368:	mov	r3, #0
    b36c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b370:	movw	r1, #0
    b374:	movt	r1, #0
    b378:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b37c:	bl	0 <coda_mem_record_add_field>
    b380:	ldr	r3, [fp, #-8]
    b384:	ldr	r2, [r3, #4]
    b388:	ldr	r3, [fp, #-16]
    b38c:	lsl	r3, r3, #2
    b390:	add	r3, r2, r3
    b394:	ldr	r1, [r3]
    b398:	mov	r3, #0
    b39c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b3a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    b3a4:	bl	0 <coda_mem_record_add_field>
    b3a8:	ldr	r3, [fp, #-16]
    b3ac:	add	r3, r3, #1
    b3b0:	str	r3, [fp, #-16]
    b3b4:	ldr	r3, [fp, #-8]
    b3b8:	ldr	r3, [r3]
    b3bc:	ldr	r2, [fp, #-16]
    b3c0:	cmp	r2, r3
    b3c4:	blt	b12c <read_observation_record_for_satellite+0x364>
    b3c8:	ldr	r3, [fp, #-8]
    b3cc:	ldr	r3, [r3, #16]
    b3d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    b3d4:	mov	r0, r3
    b3d8:	bl	0 <coda_mem_array_add_element>
    b3dc:	mov	r3, #0
    b3e0:	mov	r0, r3
    b3e4:	sub	sp, fp, #4
    b3e8:	ldr	fp, [sp]
    b3ec:	add	sp, sp, #4
    b3f0:	pop	{pc}		; (ldr pc, [sp], #4)
    b3f4:	.word	0x00000000

0000b3f8 <read_observation_records>:
    b3f8:	str	fp, [sp, #-8]!
    b3fc:	str	lr, [sp, #4]
    b400:	add	fp, sp, #4
    b404:	sub	sp, sp, #1136	; 0x470
    b408:	sub	sp, sp, #8
    b40c:	str	r0, [fp, #-1136]	; 0xfffffb90
    b410:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b414:	ldr	r3, [r3]
    b418:	mov	r0, r3
    b41c:	bl	0 <ftell>
    b420:	mov	r2, r0
    b424:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b428:	str	r2, [r3, #128]	; 0x80
    b42c:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b430:	ldr	r3, [r3, #124]	; 0x7c
    b434:	add	r2, r3, #1
    b438:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b43c:	str	r2, [r3, #124]	; 0x7c
    b440:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b444:	ldr	r3, [r3]
    b448:	sub	r2, fp, #1024	; 0x400
    b44c:	sub	r2, r2, #4
    b450:	mov	r1, r2
    b454:	mov	r0, r3
    b458:	bl	873c <get_line>
    b45c:	str	r0, [fp, #-8]
    b460:	ldr	r3, [fp, #-8]
    b464:	cmp	r3, #0
    b468:	bge	ba84 <read_observation_records+0x68c>
    b46c:	mvn	r3, #0
    b470:	b	ba94 <read_observation_records+0x69c>
    b474:	ldr	r3, [fp, #-8]
    b478:	cmp	r3, #34	; 0x22
    b47c:	bgt	b4b4 <read_observation_records+0xbc>
    b480:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b484:	ldr	r2, [r3, #124]	; 0x7c
    b488:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b48c:	ldr	r3, [r3, #128]	; 0x80
    b490:	str	r3, [sp]
    b494:	mov	r3, r2
    b498:	ldr	r2, [fp, #-8]
    b49c:	movw	r1, #0
    b4a0:	movt	r1, #0
    b4a4:	mvn	r0, #21
    b4a8:	bl	0 <coda_set_error>
    b4ac:	mvn	r3, #0
    b4b0:	b	ba94 <read_observation_records+0x69c>
    b4b4:	ldrb	r3, [fp, #-1028]	; 0xfffffbfc
    b4b8:	cmp	r3, #62	; 0x3e
    b4bc:	beq	b4e8 <read_observation_records+0xf0>
    b4c0:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b4c4:	ldr	r2, [r3, #124]	; 0x7c
    b4c8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b4cc:	ldr	r3, [r3, #128]	; 0x80
    b4d0:	movw	r1, #0
    b4d4:	movt	r1, #0
    b4d8:	mvn	r0, #21
    b4dc:	bl	0 <coda_set_error>
    b4e0:	mvn	r3, #0
    b4e4:	b	ba94 <read_observation_records+0x69c>
    b4e8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b4ec:	ldr	r3, [r3, #132]	; 0x84
    b4f0:	mov	r1, #0
    b4f4:	mov	r0, r3
    b4f8:	bl	0 <coda_mem_record_new>
    b4fc:	mov	r2, r0
    b500:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b504:	str	r2, [r3, #136]	; 0x88
    b508:	sub	r3, fp, #1024	; 0x400
    b50c:	sub	r3, r3, #4
    b510:	add	r1, r3, #2
    b514:	sub	r3, fp, #1120	; 0x460
    b518:	sub	r3, r3, #4
    b51c:	sub	r3, r3, #4
    b520:	mov	r2, #27
    b524:	mov	r0, r3
    b528:	bl	0 <memcpy>
    b52c:	mov	r3, #0
    b530:	strb	r3, [fp, #-1101]	; 0xfffffbb3
    b534:	mrc	15, 0, r3, cr13, cr0, {3}
    b538:	ldr	r2, [pc, #1384]	; baa8 <read_observation_records+0x6b0>
    b53c:	ldr	r3, [r3, r2]
    b540:	ldr	r3, [r3, #176]	; 0xb0
    b544:	str	r3, [fp, #-16]
    b548:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b54c:	ldr	r2, [r3, #4]
    b550:	sub	r3, fp, #1120	; 0x460
    b554:	sub	r3, r3, #4
    b558:	sub	r3, r3, #4
    b55c:	mov	r1, #0
    b560:	ldr	r0, [fp, #-16]
    b564:	bl	0 <coda_mem_string_new>
    b568:	str	r0, [fp, #-20]	; 0xffffffec
    b56c:	mrc	15, 0, r3, cr13, cr0, {3}
    b570:	ldr	r2, [pc, #1328]	; baa8 <read_observation_records+0x6b0>
    b574:	ldr	r3, [r3, r2]
    b578:	ldr	r3, [r3, #180]	; 0xb4
    b57c:	str	r3, [fp, #-16]
    b580:	ldr	r2, [fp, #-20]	; 0xffffffec
    b584:	mov	r1, #0
    b588:	ldr	r0, [fp, #-16]
    b58c:	bl	0 <coda_mem_time_new>
    b590:	str	r0, [fp, #-24]	; 0xffffffe8
    b594:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b598:	ldr	r0, [r3, #136]	; 0x88
    b59c:	mov	r3, #0
    b5a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b5a4:	movw	r1, #0
    b5a8:	movt	r1, #0
    b5ac:	bl	0 <coda_mem_record_add_field>
    b5b0:	ldrb	r3, [fp, #-997]	; 0xfffffc1b
    b5b4:	strb	r3, [fp, #-25]	; 0xffffffe7
    b5b8:	mrc	15, 0, r3, cr13, cr0, {3}
    b5bc:	ldr	r2, [pc, #1252]	; baa8 <read_observation_records+0x6b0>
    b5c0:	ldr	r3, [r3, r2]
    b5c4:	ldr	r3, [r3, #184]	; 0xb8
    b5c8:	str	r3, [fp, #-16]
    b5cc:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b5d0:	ldr	r2, [r3, #4]
    b5d4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    b5d8:	mov	r1, #0
    b5dc:	ldr	r0, [fp, #-16]
    b5e0:	bl	0 <coda_mem_char_new>
    b5e4:	str	r0, [fp, #-24]	; 0xffffffe8
    b5e8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b5ec:	ldr	r0, [r3, #136]	; 0x88
    b5f0:	mov	r3, #0
    b5f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b5f8:	movw	r1, #0
    b5fc:	movt	r1, #0
    b600:	bl	0 <coda_mem_record_add_field>
    b604:	sub	r3, fp, #1024	; 0x400
    b608:	sub	r3, r3, #4
    b60c:	add	r1, r3, #32
    b610:	sub	r3, fp, #1088	; 0x440
    b614:	sub	r3, r3, #4
    b618:	sub	r3, r3, #8
    b61c:	mov	r2, #3
    b620:	mov	r0, r3
    b624:	bl	0 <memcpy>
    b628:	mov	r3, #0
    b62c:	strb	r3, [fp, #-1097]	; 0xfffffbb7
    b630:	sub	r2, fp, #1120	; 0x460
    b634:	sub	r2, r2, #4
    b638:	sub	r2, r2, #8
    b63c:	sub	r3, fp, #1088	; 0x440
    b640:	sub	r3, r3, #4
    b644:	sub	r3, r3, #8
    b648:	movw	r1, #0
    b64c:	movt	r1, #0
    b650:	mov	r0, r3
    b654:	bl	0 <__isoc99_sscanf>
    b658:	mov	r3, r0
    b65c:	cmp	r3, #1
    b660:	beq	b690 <read_observation_records+0x298>
    b664:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b668:	ldr	r2, [r3, #124]	; 0x7c
    b66c:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b670:	ldr	r3, [r3, #128]	; 0x80
    b674:	add	r3, r3, #34	; 0x22
    b678:	movw	r1, #0
    b67c:	movt	r1, #0
    b680:	mvn	r0, #21
    b684:	bl	0 <coda_set_error>
    b688:	mvn	r3, #0
    b68c:	b	ba94 <read_observation_records+0x69c>
    b690:	ldr	r3, [fp, #-8]
    b694:	cmp	r3, #55	; 0x37
    b698:	ble	b6f4 <read_observation_records+0x2fc>
    b69c:	sub	r2, fp, #1024	; 0x400
    b6a0:	sub	r2, r2, #4
    b6a4:	sub	r2, r2, #8
    b6a8:	sub	r3, fp, #1024	; 0x400
    b6ac:	sub	r3, r3, #4
    b6b0:	add	r0, r3, #41	; 0x29
    b6b4:	mov	r3, #0
    b6b8:	mov	r1, #15
    b6bc:	bl	0 <coda_ascii_parse_double>
    b6c0:	mov	r3, r0
    b6c4:	cmp	r3, #0
    b6c8:	bge	b70c <read_observation_records+0x314>
    b6cc:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b6d0:	ldr	r1, [r3, #124]	; 0x7c
    b6d4:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b6d8:	ldr	r3, [r3, #128]	; 0x80
    b6dc:	mov	r2, r3
    b6e0:	movw	r0, #0
    b6e4:	movt	r0, #0
    b6e8:	bl	0 <coda_add_error_message>
    b6ec:	mvn	r3, #0
    b6f0:	b	ba94 <read_observation_records+0x69c>
    b6f4:	sub	r3, fp, #1024	; 0x400
    b6f8:	sub	r3, r3, #4
    b6fc:	mov	r1, r3
    b700:	mov	r2, #0
    b704:	mov	r3, #0
    b708:	strd	r2, [r1, #-8]
    b70c:	mrc	15, 0, r3, cr13, cr0, {3}
    b710:	ldr	r2, [pc, #912]	; baa8 <read_observation_records+0x6b0>
    b714:	ldr	r3, [r3, r2]
    b718:	ldr	r3, [r3, #188]	; 0xbc
    b71c:	str	r3, [fp, #-16]
    b720:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b724:	ldr	r3, [r3, #4]
    b728:	sub	r2, fp, #1024	; 0x400
    b72c:	sub	r2, r2, #4
    b730:	vldr	d7, [r2, #-8]
    b734:	vmov.f64	d0, d7
    b738:	mov	r2, r3
    b73c:	mov	r1, #0
    b740:	ldr	r0, [fp, #-16]
    b744:	bl	0 <coda_mem_double_new>
    b748:	str	r0, [fp, #-24]	; 0xffffffe8
    b74c:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b750:	ldr	r0, [r3, #136]	; 0x88
    b754:	mov	r3, #0
    b758:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b75c:	movw	r1, #0
    b760:	movt	r1, #0
    b764:	bl	0 <coda_mem_record_add_field>
    b768:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b76c:	ldr	r3, [r3, #24]
    b770:	cmp	r3, #0
    b774:	beq	b798 <read_observation_records+0x3a0>
    b778:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b77c:	ldr	r3, [r3, #24]
    b780:	mov	r1, #0
    b784:	mov	r0, r3
    b788:	bl	0 <coda_mem_array_new>
    b78c:	mov	r2, r0
    b790:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b794:	str	r2, [r3, #28]
    b798:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b79c:	ldr	r3, [r3, #48]	; 0x30
    b7a0:	cmp	r3, #0
    b7a4:	beq	b7c8 <read_observation_records+0x3d0>
    b7a8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b7ac:	ldr	r3, [r3, #48]	; 0x30
    b7b0:	mov	r1, #0
    b7b4:	mov	r0, r3
    b7b8:	bl	0 <coda_mem_array_new>
    b7bc:	mov	r2, r0
    b7c0:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b7c4:	str	r2, [r3, #52]	; 0x34
    b7c8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b7cc:	ldr	r3, [r3, #72]	; 0x48
    b7d0:	cmp	r3, #0
    b7d4:	beq	b7f8 <read_observation_records+0x400>
    b7d8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b7dc:	ldr	r3, [r3, #72]	; 0x48
    b7e0:	mov	r1, #0
    b7e4:	mov	r0, r3
    b7e8:	bl	0 <coda_mem_array_new>
    b7ec:	mov	r2, r0
    b7f0:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b7f4:	str	r2, [r3, #76]	; 0x4c
    b7f8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b7fc:	ldr	r3, [r3, #96]	; 0x60
    b800:	cmp	r3, #0
    b804:	beq	b828 <read_observation_records+0x430>
    b808:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b80c:	ldr	r3, [r3, #96]	; 0x60
    b810:	mov	r1, #0
    b814:	mov	r0, r3
    b818:	bl	0 <coda_mem_array_new>
    b81c:	mov	r2, r0
    b820:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b824:	str	r2, [r3, #100]	; 0x64
    b828:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    b82c:	cmp	r3, #48	; 0x30
    b830:	beq	b8c4 <read_observation_records+0x4cc>
    b834:	mov	r3, #0
    b838:	str	r3, [fp, #-12]
    b83c:	b	b8b0 <read_observation_records+0x4b8>
    b840:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b844:	ldr	r3, [r3]
    b848:	mov	r0, r3
    b84c:	bl	0 <ftell>
    b850:	mov	r2, r0
    b854:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b858:	str	r2, [r3, #128]	; 0x80
    b85c:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b860:	ldr	r3, [r3, #124]	; 0x7c
    b864:	add	r2, r3, #1
    b868:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b86c:	str	r2, [r3, #124]	; 0x7c
    b870:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b874:	ldr	r3, [r3]
    b878:	sub	r2, fp, #1024	; 0x400
    b87c:	sub	r2, r2, #4
    b880:	mov	r1, r2
    b884:	mov	r0, r3
    b888:	bl	873c <get_line>
    b88c:	str	r0, [fp, #-8]
    b890:	ldr	r3, [fp, #-8]
    b894:	cmp	r3, #0
    b898:	bge	b8a4 <read_observation_records+0x4ac>
    b89c:	mvn	r3, #0
    b8a0:	b	ba94 <read_observation_records+0x69c>
    b8a4:	ldr	r3, [fp, #-12]
    b8a8:	add	r3, r3, #1
    b8ac:	str	r3, [fp, #-12]
    b8b0:	ldr	r3, [fp, #-1132]	; 0xfffffb94
    b8b4:	ldr	r2, [fp, #-12]
    b8b8:	cmp	r2, r3
    b8bc:	blt	b840 <read_observation_records+0x448>
    b8c0:	b	b908 <read_observation_records+0x510>
    b8c4:	mov	r3, #0
    b8c8:	str	r3, [fp, #-12]
    b8cc:	b	b8f8 <read_observation_records+0x500>
    b8d0:	ldr	r0, [fp, #-1136]	; 0xfffffb90
    b8d4:	bl	adc8 <read_observation_record_for_satellite>
    b8d8:	mov	r3, r0
    b8dc:	cmp	r3, #0
    b8e0:	beq	b8ec <read_observation_records+0x4f4>
    b8e4:	mvn	r3, #0
    b8e8:	b	ba94 <read_observation_records+0x69c>
    b8ec:	ldr	r3, [fp, #-12]
    b8f0:	add	r3, r3, #1
    b8f4:	str	r3, [fp, #-12]
    b8f8:	ldr	r3, [fp, #-1132]	; 0xfffffb94
    b8fc:	ldr	r2, [fp, #-12]
    b900:	cmp	r2, r3
    b904:	blt	b8d0 <read_observation_records+0x4d8>
    b908:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b90c:	ldr	r3, [r3, #28]
    b910:	cmp	r3, #0
    b914:	beq	b944 <read_observation_records+0x54c>
    b918:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b91c:	ldr	r0, [r3, #136]	; 0x88
    b920:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b924:	ldr	r2, [r3, #28]
    b928:	mov	r3, #0
    b92c:	movw	r1, #0
    b930:	movt	r1, #0
    b934:	bl	0 <coda_mem_record_add_field>
    b938:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b93c:	mov	r2, #0
    b940:	str	r2, [r3, #28]
    b944:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b948:	ldr	r3, [r3, #52]	; 0x34
    b94c:	cmp	r3, #0
    b950:	beq	b980 <read_observation_records+0x588>
    b954:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b958:	ldr	r0, [r3, #136]	; 0x88
    b95c:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b960:	ldr	r2, [r3, #52]	; 0x34
    b964:	mov	r3, #0
    b968:	movw	r1, #0
    b96c:	movt	r1, #0
    b970:	bl	0 <coda_mem_record_add_field>
    b974:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b978:	mov	r2, #0
    b97c:	str	r2, [r3, #52]	; 0x34
    b980:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b984:	ldr	r3, [r3, #76]	; 0x4c
    b988:	cmp	r3, #0
    b98c:	beq	b9bc <read_observation_records+0x5c4>
    b990:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b994:	ldr	r0, [r3, #136]	; 0x88
    b998:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b99c:	ldr	r2, [r3, #76]	; 0x4c
    b9a0:	mov	r3, #0
    b9a4:	movw	r1, #0
    b9a8:	movt	r1, #0
    b9ac:	bl	0 <coda_mem_record_add_field>
    b9b0:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b9b4:	mov	r2, #0
    b9b8:	str	r2, [r3, #76]	; 0x4c
    b9bc:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b9c0:	ldr	r3, [r3, #100]	; 0x64
    b9c4:	cmp	r3, #0
    b9c8:	beq	b9f8 <read_observation_records+0x600>
    b9cc:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b9d0:	ldr	r0, [r3, #136]	; 0x88
    b9d4:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b9d8:	ldr	r2, [r3, #100]	; 0x64
    b9dc:	mov	r3, #0
    b9e0:	movw	r1, #0
    b9e4:	movt	r1, #0
    b9e8:	bl	0 <coda_mem_record_add_field>
    b9ec:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b9f0:	mov	r2, #0
    b9f4:	str	r2, [r3, #100]	; 0x64
    b9f8:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    b9fc:	ldr	r2, [r3, #144]	; 0x90
    ba00:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba04:	ldr	r3, [r3, #136]	; 0x88
    ba08:	mov	r1, r3
    ba0c:	mov	r0, r2
    ba10:	bl	0 <coda_mem_array_add_element>
    ba14:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba18:	mov	r2, #0
    ba1c:	str	r2, [r3, #136]	; 0x88
    ba20:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba24:	ldr	r3, [r3]
    ba28:	mov	r0, r3
    ba2c:	bl	0 <ftell>
    ba30:	mov	r2, r0
    ba34:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba38:	str	r2, [r3, #128]	; 0x80
    ba3c:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba40:	ldr	r3, [r3, #124]	; 0x7c
    ba44:	add	r2, r3, #1
    ba48:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba4c:	str	r2, [r3, #124]	; 0x7c
    ba50:	ldr	r3, [fp, #-1136]	; 0xfffffb90
    ba54:	ldr	r3, [r3]
    ba58:	sub	r2, fp, #1024	; 0x400
    ba5c:	sub	r2, r2, #4
    ba60:	mov	r1, r2
    ba64:	mov	r0, r3
    ba68:	bl	873c <get_line>
    ba6c:	str	r0, [fp, #-8]
    ba70:	ldr	r3, [fp, #-8]
    ba74:	cmp	r3, #0
    ba78:	bge	ba84 <read_observation_records+0x68c>
    ba7c:	mvn	r3, #0
    ba80:	b	ba94 <read_observation_records+0x69c>
    ba84:	ldr	r3, [fp, #-8]
    ba88:	cmp	r3, #0
    ba8c:	bgt	b474 <read_observation_records+0x7c>
    ba90:	mov	r3, #0
    ba94:	mov	r0, r3
    ba98:	sub	sp, fp, #4
    ba9c:	ldr	fp, [sp]
    baa0:	add	sp, sp, #4
    baa4:	pop	{pc}		; (ldr pc, [sp], #4)
    baa8:	.word	0x00000000

0000baac <read_navigation_header>:
    baac:	str	fp, [sp, #-8]!
    bab0:	str	lr, [sp, #4]
    bab4:	add	fp, sp, #4
    bab8:	sub	sp, sp, #1136	; 0x470
    babc:	str	r0, [fp, #-1128]	; 0xfffffb98
    bac0:	mrc	15, 0, r3, cr13, cr0, {3}
    bac4:	ldr	r2, [pc, #3408]	; c81c <read_navigation_header+0xd70>
    bac8:	ldr	r3, [r3, r2]
    bacc:	ldr	r3, [r3, #232]	; 0xe8
    bad0:	str	r3, [fp, #-16]
    bad4:	mov	r1, #0
    bad8:	ldr	r0, [fp, #-16]
    badc:	bl	0 <coda_mem_array_new>
    bae0:	mov	r2, r0
    bae4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bae8:	str	r2, [r3, #148]	; 0x94
    baec:	mrc	15, 0, r3, cr13, cr0, {3}
    baf0:	ldr	r2, [pc, #3364]	; c81c <read_navigation_header+0xd70>
    baf4:	ldr	r3, [r3, r2]
    baf8:	ldr	r3, [r3, #268]	; 0x10c
    bafc:	str	r3, [fp, #-16]
    bb00:	mov	r1, #0
    bb04:	ldr	r0, [fp, #-16]
    bb08:	bl	0 <coda_mem_array_new>
    bb0c:	mov	r2, r0
    bb10:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb14:	str	r2, [r3, #152]	; 0x98
    bb18:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb1c:	ldr	r3, [r3]
    bb20:	mov	r0, r3
    bb24:	bl	0 <ftell>
    bb28:	mov	r2, r0
    bb2c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb30:	str	r2, [r3, #128]	; 0x80
    bb34:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb38:	ldr	r3, [r3, #124]	; 0x7c
    bb3c:	add	r2, r3, #1
    bb40:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb44:	str	r2, [r3, #124]	; 0x7c
    bb48:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb4c:	ldr	r2, [r3]
    bb50:	sub	r3, fp, #1024	; 0x400
    bb54:	sub	r3, r3, #4
    bb58:	sub	r3, r3, #12
    bb5c:	mov	r1, r3
    bb60:	mov	r0, r2
    bb64:	bl	873c <get_line>
    bb68:	str	r0, [fp, #-8]
    bb6c:	ldr	r3, [fp, #-8]
    bb70:	cmp	r3, #0
    bb74:	bge	c768 <read_navigation_header+0xcbc>
    bb78:	mvn	r3, #0
    bb7c:	b	c808 <read_navigation_header+0xd5c>
    bb80:	ldr	r3, [fp, #-8]
    bb84:	cmp	r3, #60	; 0x3c
    bb88:	bgt	bbc0 <read_navigation_header+0x114>
    bb8c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb90:	ldr	r2, [r3, #124]	; 0x7c
    bb94:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bb98:	ldr	r3, [r3, #128]	; 0x80
    bb9c:	str	r3, [sp]
    bba0:	mov	r3, r2
    bba4:	ldr	r2, [fp, #-8]
    bba8:	movw	r1, #0
    bbac:	movt	r1, #0
    bbb0:	mvn	r0, #21
    bbb4:	bl	0 <coda_set_error>
    bbb8:	mvn	r3, #0
    bbbc:	b	c808 <read_navigation_header+0xd5c>
    bbc0:	sub	r3, fp, #1024	; 0x400
    bbc4:	sub	r3, r3, #4
    bbc8:	sub	r3, r3, #12
    bbcc:	add	r3, r3, #60	; 0x3c
    bbd0:	mov	r2, #19
    bbd4:	movw	r1, #0
    bbd8:	movt	r1, #0
    bbdc:	mov	r0, r3
    bbe0:	bl	0 <strncmp>
    bbe4:	mov	r3, r0
    bbe8:	cmp	r3, #0
    bbec:	bne	be20 <read_navigation_header+0x374>
    bbf0:	sub	r3, fp, #1024	; 0x400
    bbf4:	sub	r3, r3, #4
    bbf8:	sub	r3, r3, #12
    bbfc:	sub	r0, fp, #1120	; 0x460
    bc00:	sub	r0, r0, #4
    bc04:	mov	r2, #20
    bc08:	mov	r1, r3
    bc0c:	bl	0 <memcpy>
    bc10:	mov	r3, #0
    bc14:	strb	r3, [fp, #-1104]	; 0xfffffbb0
    bc18:	sub	r3, fp, #1120	; 0x460
    bc1c:	sub	r3, r3, #4
    bc20:	mov	r0, r3
    bc24:	bl	86b4 <rtrim>
    bc28:	mrc	15, 0, r3, cr13, cr0, {3}
    bc2c:	ldr	r2, [pc, #3048]	; c81c <read_navigation_header+0xd70>
    bc30:	ldr	r3, [r3, r2]
    bc34:	ldr	r3, [r3, #12]
    bc38:	str	r3, [fp, #-16]
    bc3c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bc40:	ldr	r2, [r3, #4]
    bc44:	sub	r3, fp, #1120	; 0x460
    bc48:	sub	r3, r3, #4
    bc4c:	mov	r1, #0
    bc50:	ldr	r0, [fp, #-16]
    bc54:	bl	0 <coda_mem_string_new>
    bc58:	str	r0, [fp, #-20]	; 0xffffffec
    bc5c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bc60:	ldr	r0, [r3, #8]
    bc64:	mov	r3, #0
    bc68:	ldr	r2, [fp, #-20]	; 0xffffffec
    bc6c:	movw	r1, #0
    bc70:	movt	r1, #0
    bc74:	bl	0 <coda_mem_record_add_field>
    bc78:	sub	r3, fp, #1024	; 0x400
    bc7c:	sub	r3, r3, #4
    bc80:	sub	r3, r3, #12
    bc84:	add	r1, r3, #20
    bc88:	sub	r3, fp, #1120	; 0x460
    bc8c:	sub	r3, r3, #4
    bc90:	mov	r2, #20
    bc94:	mov	r0, r3
    bc98:	bl	0 <memcpy>
    bc9c:	sub	r3, fp, #1120	; 0x460
    bca0:	sub	r3, r3, #4
    bca4:	mov	r0, r3
    bca8:	bl	86b4 <rtrim>
    bcac:	mrc	15, 0, r3, cr13, cr0, {3}
    bcb0:	ldr	r2, [pc, #2916]	; c81c <read_navigation_header+0xd70>
    bcb4:	ldr	r3, [r3, r2]
    bcb8:	ldr	r3, [r3, #16]
    bcbc:	str	r3, [fp, #-16]
    bcc0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bcc4:	ldr	r2, [r3, #4]
    bcc8:	sub	r3, fp, #1120	; 0x460
    bccc:	sub	r3, r3, #4
    bcd0:	mov	r1, #0
    bcd4:	ldr	r0, [fp, #-16]
    bcd8:	bl	0 <coda_mem_string_new>
    bcdc:	str	r0, [fp, #-20]	; 0xffffffec
    bce0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bce4:	ldr	r0, [r3, #8]
    bce8:	mov	r3, #0
    bcec:	ldr	r2, [fp, #-20]	; 0xffffffec
    bcf0:	movw	r1, #0
    bcf4:	movt	r1, #0
    bcf8:	bl	0 <coda_mem_record_add_field>
    bcfc:	sub	r3, fp, #1024	; 0x400
    bd00:	sub	r3, r3, #4
    bd04:	sub	r3, r3, #12
    bd08:	add	r1, r3, #40	; 0x28
    bd0c:	sub	r3, fp, #1120	; 0x460
    bd10:	sub	r3, r3, #4
    bd14:	mov	r2, #15
    bd18:	mov	r0, r3
    bd1c:	bl	0 <memcpy>
    bd20:	mov	r3, #0
    bd24:	strb	r3, [fp, #-1109]	; 0xfffffbab
    bd28:	mrc	15, 0, r3, cr13, cr0, {3}
    bd2c:	ldr	r2, [pc, #2792]	; c81c <read_navigation_header+0xd70>
    bd30:	ldr	r3, [r3, r2]
    bd34:	ldr	r3, [r3, #24]
    bd38:	str	r3, [fp, #-16]
    bd3c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bd40:	ldr	r2, [r3, #4]
    bd44:	sub	r3, fp, #1120	; 0x460
    bd48:	sub	r3, r3, #4
    bd4c:	mov	r1, #0
    bd50:	ldr	r0, [fp, #-16]
    bd54:	bl	0 <coda_mem_string_new>
    bd58:	str	r0, [fp, #-24]	; 0xffffffe8
    bd5c:	mrc	15, 0, r3, cr13, cr0, {3}
    bd60:	ldr	r2, [pc, #2740]	; c81c <read_navigation_header+0xd70>
    bd64:	ldr	r3, [r3, r2]
    bd68:	ldr	r3, [r3, #20]
    bd6c:	str	r3, [fp, #-16]
    bd70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bd74:	mov	r1, #0
    bd78:	ldr	r0, [fp, #-16]
    bd7c:	bl	0 <coda_mem_time_new>
    bd80:	str	r0, [fp, #-20]	; 0xffffffec
    bd84:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bd88:	ldr	r0, [r3, #8]
    bd8c:	mov	r3, #0
    bd90:	ldr	r2, [fp, #-20]	; 0xffffffec
    bd94:	movw	r1, #0
    bd98:	movt	r1, #0
    bd9c:	bl	0 <coda_mem_record_add_field>
    bda0:	sub	r3, fp, #1024	; 0x400
    bda4:	sub	r3, r3, #4
    bda8:	sub	r3, r3, #12
    bdac:	add	r1, r3, #56	; 0x38
    bdb0:	sub	r3, fp, #1120	; 0x460
    bdb4:	sub	r3, r3, #4
    bdb8:	mov	r2, #3
    bdbc:	mov	r0, r3
    bdc0:	bl	0 <memcpy>
    bdc4:	mov	r3, #0
    bdc8:	strb	r3, [fp, #-1121]	; 0xfffffb9f
    bdcc:	mrc	15, 0, r3, cr13, cr0, {3}
    bdd0:	ldr	r2, [pc, #2628]	; c81c <read_navigation_header+0xd70>
    bdd4:	ldr	r3, [r3, r2]
    bdd8:	ldr	r3, [r3, #28]
    bddc:	str	r3, [fp, #-16]
    bde0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bde4:	ldr	r2, [r3, #4]
    bde8:	sub	r3, fp, #1120	; 0x460
    bdec:	sub	r3, r3, #4
    bdf0:	mov	r1, #0
    bdf4:	ldr	r0, [fp, #-16]
    bdf8:	bl	0 <coda_mem_string_new>
    bdfc:	str	r0, [fp, #-20]	; 0xffffffec
    be00:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    be04:	ldr	r0, [r3, #8]
    be08:	mov	r3, #0
    be0c:	ldr	r2, [fp, #-20]	; 0xffffffec
    be10:	movw	r1, #0
    be14:	movt	r1, #0
    be18:	bl	0 <coda_mem_record_add_field>
    be1c:	b	c700 <read_navigation_header+0xc54>
    be20:	sub	r3, fp, #1024	; 0x400
    be24:	sub	r3, r3, #4
    be28:	sub	r3, r3, #12
    be2c:	add	r3, r3, #60	; 0x3c
    be30:	mov	r2, #7
    be34:	movw	r1, #0
    be38:	movt	r1, #0
    be3c:	mov	r0, r3
    be40:	bl	0 <strncmp>
    be44:	mov	r3, r0
    be48:	cmp	r3, #0
    be4c:	beq	c700 <read_navigation_header+0xc54>
    be50:	sub	r3, fp, #1024	; 0x400
    be54:	sub	r3, r3, #4
    be58:	sub	r3, r3, #12
    be5c:	add	r3, r3, #60	; 0x3c
    be60:	mov	r2, #16
    be64:	movw	r1, #0
    be68:	movt	r1, #0
    be6c:	mov	r0, r3
    be70:	bl	0 <strncmp>
    be74:	mov	r3, r0
    be78:	cmp	r3, #0
    be7c:	bne	c05c <read_navigation_header+0x5b0>
    be80:	mrc	15, 0, r3, cr13, cr0, {3}
    be84:	ldr	r2, [pc, #2448]	; c81c <read_navigation_header+0xd70>
    be88:	ldr	r3, [r3, r2]
    be8c:	add	r3, r3, #228	; 0xe4
    be90:	ldr	r3, [r3]
    be94:	mov	r1, #0
    be98:	mov	r0, r3
    be9c:	bl	0 <coda_mem_record_new>
    bea0:	str	r0, [fp, #-28]	; 0xffffffe4
    bea4:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
    bea8:	str	r3, [fp, #-1124]	; 0xfffffb9c
    beac:	mov	r3, #0
    beb0:	strb	r3, [fp, #-1120]	; 0xfffffba0
    beb4:	sub	r3, fp, #1120	; 0x460
    beb8:	sub	r3, r3, #4
    bebc:	mov	r0, r3
    bec0:	bl	86b4 <rtrim>
    bec4:	mrc	15, 0, r3, cr13, cr0, {3}
    bec8:	ldr	r2, [pc, #2380]	; c81c <read_navigation_header+0xd70>
    becc:	ldr	r3, [r3, r2]
    bed0:	ldr	r3, [r3, #216]	; 0xd8
    bed4:	str	r3, [fp, #-16]
    bed8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bedc:	ldr	r2, [r3, #4]
    bee0:	sub	r3, fp, #1120	; 0x460
    bee4:	sub	r3, r3, #4
    bee8:	mov	r1, #0
    beec:	ldr	r0, [fp, #-16]
    bef0:	bl	0 <coda_mem_string_new>
    bef4:	str	r0, [fp, #-20]	; 0xffffffec
    bef8:	mov	r3, #0
    befc:	ldr	r2, [fp, #-20]	; 0xffffffec
    bf00:	movw	r1, #0
    bf04:	movt	r1, #0
    bf08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bf0c:	bl	0 <coda_mem_record_add_field>
    bf10:	mrc	15, 0, r3, cr13, cr0, {3}
    bf14:	ldr	r2, [pc, #2304]	; c81c <read_navigation_header+0xd70>
    bf18:	ldr	r3, [r3, r2]
    bf1c:	ldr	r3, [r3, #224]	; 0xe0
    bf20:	str	r3, [fp, #-16]
    bf24:	mov	r1, #0
    bf28:	ldr	r0, [fp, #-16]
    bf2c:	bl	0 <coda_mem_array_new>
    bf30:	str	r0, [fp, #-32]	; 0xffffffe0
    bf34:	mov	r3, #0
    bf38:	str	r3, [fp, #-12]
    bf3c:	b	c020 <read_navigation_header+0x574>
    bf40:	ldr	r2, [fp, #-12]
    bf44:	mov	r3, r2
    bf48:	lsl	r3, r3, #1
    bf4c:	add	r3, r3, r2
    bf50:	lsl	r3, r3, #2
    bf54:	add	r2, r3, #5
    bf58:	sub	r3, fp, #1024	; 0x400
    bf5c:	sub	r3, r3, #4
    bf60:	sub	r3, r3, #12
    bf64:	add	r0, r3, r2
    bf68:	sub	r2, fp, #1040	; 0x410
    bf6c:	sub	r2, r2, #4
    bf70:	sub	r2, r2, #8
    bf74:	mov	r3, #0
    bf78:	mov	r1, #12
    bf7c:	bl	0 <coda_ascii_parse_double>
    bf80:	mov	r3, r0
    bf84:	cmp	r3, #0
    bf88:	bge	bfc4 <read_navigation_header+0x518>
    bf8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bf90:	bl	0 <coda_dynamic_type_delete>
    bf94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bf98:	bl	0 <coda_dynamic_type_delete>
    bf9c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bfa0:	ldr	r1, [r3, #124]	; 0x7c
    bfa4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bfa8:	ldr	r3, [r3, #128]	; 0x80
    bfac:	mov	r2, r3
    bfb0:	movw	r0, #0
    bfb4:	movt	r0, #0
    bfb8:	bl	0 <coda_add_error_message>
    bfbc:	mvn	r3, #0
    bfc0:	b	c808 <read_navigation_header+0xd5c>
    bfc4:	mrc	15, 0, r3, cr13, cr0, {3}
    bfc8:	ldr	r2, [pc, #2124]	; c81c <read_navigation_header+0xd70>
    bfcc:	ldr	r3, [r3, r2]
    bfd0:	ldr	r3, [r3, #220]	; 0xdc
    bfd4:	str	r3, [fp, #-16]
    bfd8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    bfdc:	ldr	r3, [r3, #4]
    bfe0:	sub	r2, fp, #1040	; 0x410
    bfe4:	sub	r2, r2, #4
    bfe8:	vldr	d7, [r2, #-8]
    bfec:	vmov.f64	d0, d7
    bff0:	mov	r2, r3
    bff4:	mov	r1, #0
    bff8:	ldr	r0, [fp, #-16]
    bffc:	bl	0 <coda_mem_double_new>
    c000:	str	r0, [fp, #-20]	; 0xffffffec
    c004:	ldr	r2, [fp, #-20]	; 0xffffffec
    c008:	ldr	r1, [fp, #-12]
    c00c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c010:	bl	0 <coda_mem_array_set_element>
    c014:	ldr	r3, [fp, #-12]
    c018:	add	r3, r3, #1
    c01c:	str	r3, [fp, #-12]
    c020:	ldr	r3, [fp, #-12]
    c024:	cmp	r3, #3
    c028:	ble	bf40 <read_navigation_header+0x494>
    c02c:	mov	r3, #0
    c030:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c034:	movw	r1, #0
    c038:	movt	r1, #0
    c03c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c040:	bl	0 <coda_mem_record_add_field>
    c044:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c048:	ldr	r3, [r3, #148]	; 0x94
    c04c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c050:	mov	r0, r3
    c054:	bl	0 <coda_mem_array_add_element>
    c058:	b	c700 <read_navigation_header+0xc54>
    c05c:	sub	r3, fp, #1024	; 0x400
    c060:	sub	r3, r3, #4
    c064:	sub	r3, r3, #12
    c068:	add	r3, r3, #60	; 0x3c
    c06c:	mov	r2, #16
    c070:	movw	r1, #0
    c074:	movt	r1, #0
    c078:	mov	r0, r3
    c07c:	bl	0 <strncmp>
    c080:	mov	r3, r0
    c084:	cmp	r3, #0
    c088:	bne	c5a4 <read_navigation_header+0xaf8>
    c08c:	mrc	15, 0, r3, cr13, cr0, {3}
    c090:	ldr	r2, [pc, #1924]	; c81c <read_navigation_header+0xd70>
    c094:	ldr	r3, [r3, r2]
    c098:	add	r3, r3, #264	; 0x108
    c09c:	ldr	r3, [r3]
    c0a0:	mov	r1, #0
    c0a4:	mov	r0, r3
    c0a8:	bl	0 <coda_mem_record_new>
    c0ac:	str	r0, [fp, #-36]	; 0xffffffdc
    c0b0:	ldr	r3, [fp, #-1040]	; 0xfffffbf0
    c0b4:	str	r3, [fp, #-1124]	; 0xfffffb9c
    c0b8:	mov	r3, #0
    c0bc:	strb	r3, [fp, #-1120]	; 0xfffffba0
    c0c0:	sub	r3, fp, #1120	; 0x460
    c0c4:	sub	r3, r3, #4
    c0c8:	mov	r0, r3
    c0cc:	bl	86b4 <rtrim>
    c0d0:	mrc	15, 0, r3, cr13, cr0, {3}
    c0d4:	ldr	r2, [pc, #1856]	; c81c <read_navigation_header+0xd70>
    c0d8:	ldr	r3, [r3, r2]
    c0dc:	ldr	r3, [r3, #236]	; 0xec
    c0e0:	str	r3, [fp, #-16]
    c0e4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c0e8:	ldr	r2, [r3, #4]
    c0ec:	sub	r3, fp, #1120	; 0x460
    c0f0:	sub	r3, r3, #4
    c0f4:	mov	r1, #0
    c0f8:	ldr	r0, [fp, #-16]
    c0fc:	bl	0 <coda_mem_string_new>
    c100:	str	r0, [fp, #-20]	; 0xffffffec
    c104:	mov	r3, #0
    c108:	ldr	r2, [fp, #-20]	; 0xffffffec
    c10c:	movw	r1, #0
    c110:	movt	r1, #0
    c114:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c118:	bl	0 <coda_mem_record_add_field>
    c11c:	ldrb	r3, [fp, #-1124]	; 0xfffffb9c
    c120:	cmp	r3, #83	; 0x53
    c124:	bne	c13c <read_navigation_header+0x690>
    c128:	ldrb	r3, [fp, #-1123]	; 0xfffffb9d
    c12c:	cmp	r3, #66	; 0x42
    c130:	bne	c13c <read_navigation_header+0x690>
    c134:	mov	r3, #1
    c138:	b	c140 <read_navigation_header+0x694>
    c13c:	mov	r3, #0
    c140:	str	r3, [fp, #-40]	; 0xffffffd8
    c144:	sub	r2, fp, #1040	; 0x410
    c148:	sub	r2, r2, #4
    c14c:	sub	r2, r2, #8
    c150:	sub	r3, fp, #1024	; 0x400
    c154:	sub	r3, r3, #4
    c158:	sub	r3, r3, #12
    c15c:	add	r0, r3, #5
    c160:	mov	r3, #0
    c164:	mov	r1, #17
    c168:	bl	0 <coda_ascii_parse_double>
    c16c:	mov	r3, r0
    c170:	cmp	r3, #0
    c174:	bge	c1ac <read_navigation_header+0x700>
    c178:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c17c:	bl	0 <coda_dynamic_type_delete>
    c180:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c184:	ldr	r1, [r3, #124]	; 0x7c
    c188:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c18c:	ldr	r3, [r3, #128]	; 0x80
    c190:	add	r3, r3, #5
    c194:	mov	r2, r3
    c198:	movw	r0, #0
    c19c:	movt	r0, #0
    c1a0:	bl	0 <coda_add_error_message>
    c1a4:	mvn	r3, #0
    c1a8:	b	c808 <read_navigation_header+0xd5c>
    c1ac:	mrc	15, 0, r3, cr13, cr0, {3}
    c1b0:	ldr	r2, [pc, #1636]	; c81c <read_navigation_header+0xd70>
    c1b4:	ldr	r3, [r3, r2]
    c1b8:	ldr	r3, [r3, #240]	; 0xf0
    c1bc:	str	r3, [fp, #-16]
    c1c0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c1c4:	ldr	r3, [r3, #4]
    c1c8:	sub	r2, fp, #1040	; 0x410
    c1cc:	sub	r2, r2, #4
    c1d0:	vldr	d7, [r2, #-8]
    c1d4:	vmov.f64	d0, d7
    c1d8:	mov	r2, r3
    c1dc:	mov	r1, #0
    c1e0:	ldr	r0, [fp, #-16]
    c1e4:	bl	0 <coda_mem_double_new>
    c1e8:	str	r0, [fp, #-20]	; 0xffffffec
    c1ec:	mov	r3, #0
    c1f0:	ldr	r2, [fp, #-20]	; 0xffffffec
    c1f4:	movw	r1, #0
    c1f8:	movt	r1, #0
    c1fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c200:	bl	0 <coda_mem_record_add_field>
    c204:	sub	r2, fp, #1040	; 0x410
    c208:	sub	r2, r2, #4
    c20c:	sub	r2, r2, #8
    c210:	sub	r3, fp, #1024	; 0x400
    c214:	sub	r3, r3, #4
    c218:	sub	r3, r3, #12
    c21c:	add	r0, r3, #22
    c220:	mov	r3, #0
    c224:	mov	r1, #16
    c228:	bl	0 <coda_ascii_parse_double>
    c22c:	mov	r3, r0
    c230:	cmp	r3, #0
    c234:	bge	c26c <read_navigation_header+0x7c0>
    c238:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c23c:	bl	0 <coda_dynamic_type_delete>
    c240:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c244:	ldr	r1, [r3, #124]	; 0x7c
    c248:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c24c:	ldr	r3, [r3, #128]	; 0x80
    c250:	add	r3, r3, #22
    c254:	mov	r2, r3
    c258:	movw	r0, #0
    c25c:	movt	r0, #0
    c260:	bl	0 <coda_add_error_message>
    c264:	mvn	r3, #0
    c268:	b	c808 <read_navigation_header+0xd5c>
    c26c:	mrc	15, 0, r3, cr13, cr0, {3}
    c270:	ldr	r2, [pc, #1444]	; c81c <read_navigation_header+0xd70>
    c274:	ldr	r3, [r3, r2]
    c278:	ldr	r3, [r3, #244]	; 0xf4
    c27c:	str	r3, [fp, #-16]
    c280:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c284:	ldr	r3, [r3, #4]
    c288:	sub	r2, fp, #1040	; 0x410
    c28c:	sub	r2, r2, #4
    c290:	vldr	d7, [r2, #-8]
    c294:	vmov.f64	d0, d7
    c298:	mov	r2, r3
    c29c:	mov	r1, #0
    c2a0:	ldr	r0, [fp, #-16]
    c2a4:	bl	0 <coda_mem_double_new>
    c2a8:	str	r0, [fp, #-20]	; 0xffffffec
    c2ac:	mov	r3, #0
    c2b0:	ldr	r2, [fp, #-20]	; 0xffffffec
    c2b4:	movw	r1, #0
    c2b8:	movt	r1, #0
    c2bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c2c0:	bl	0 <coda_mem_record_add_field>
    c2c4:	sub	r2, fp, #1056	; 0x420
    c2c8:	sub	r2, r2, #4
    c2cc:	sub	r3, fp, #1024	; 0x400
    c2d0:	sub	r3, r3, #4
    c2d4:	sub	r3, r3, #12
    c2d8:	add	r0, r3, #38	; 0x26
    c2dc:	mov	r3, #0
    c2e0:	mov	r1, #7
    c2e4:	bl	0 <coda_ascii_parse_int64>
    c2e8:	mov	r3, r0
    c2ec:	cmp	r3, #0
    c2f0:	bge	c328 <read_navigation_header+0x87c>
    c2f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c2f8:	bl	0 <coda_dynamic_type_delete>
    c2fc:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c300:	ldr	r1, [r3, #124]	; 0x7c
    c304:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c308:	ldr	r3, [r3, #128]	; 0x80
    c30c:	add	r3, r3, #38	; 0x26
    c310:	mov	r2, r3
    c314:	movw	r0, #0
    c318:	movt	r0, #0
    c31c:	bl	0 <coda_add_error_message>
    c320:	mvn	r3, #0
    c324:	b	c808 <read_navigation_header+0xd5c>
    c328:	mrc	15, 0, r3, cr13, cr0, {3}
    c32c:	ldr	r2, [pc, #1256]	; c81c <read_navigation_header+0xd70>
    c330:	ldr	r3, [r3, r2]
    c334:	ldr	r3, [r3, #248]	; 0xf8
    c338:	str	r3, [fp, #-16]
    c33c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c340:	ldr	r1, [r3, #4]
    c344:	sub	r3, fp, #1056	; 0x420
    c348:	sub	r3, r3, #4
    c34c:	ldrd	r2, [r3]
    c350:	mov	r3, r2
    c354:	mov	r2, r1
    c358:	mov	r1, #0
    c35c:	ldr	r0, [fp, #-16]
    c360:	bl	0 <coda_mem_int32_new>
    c364:	str	r0, [fp, #-20]	; 0xffffffec
    c368:	mov	r3, #0
    c36c:	ldr	r2, [fp, #-20]	; 0xffffffec
    c370:	movw	r1, #0
    c374:	movt	r1, #0
    c378:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c37c:	bl	0 <coda_mem_record_add_field>
    c380:	sub	r2, fp, #1056	; 0x420
    c384:	sub	r2, r2, #4
    c388:	sub	r3, fp, #1024	; 0x400
    c38c:	sub	r3, r3, #4
    c390:	sub	r3, r3, #12
    c394:	add	r0, r3, #45	; 0x2d
    c398:	mov	r3, #0
    c39c:	mov	r1, #5
    c3a0:	bl	0 <coda_ascii_parse_int64>
    c3a4:	mov	r3, r0
    c3a8:	cmp	r3, #0
    c3ac:	bge	c3e4 <read_navigation_header+0x938>
    c3b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c3b4:	bl	0 <coda_dynamic_type_delete>
    c3b8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c3bc:	ldr	r1, [r3, #124]	; 0x7c
    c3c0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c3c4:	ldr	r3, [r3, #128]	; 0x80
    c3c8:	add	r3, r3, #45	; 0x2d
    c3cc:	mov	r2, r3
    c3d0:	movw	r0, #0
    c3d4:	movt	r0, #0
    c3d8:	bl	0 <coda_add_error_message>
    c3dc:	mvn	r3, #0
    c3e0:	b	c808 <read_navigation_header+0xd5c>
    c3e4:	mrc	15, 0, r3, cr13, cr0, {3}
    c3e8:	ldr	r2, [pc, #1068]	; c81c <read_navigation_header+0xd70>
    c3ec:	ldr	r3, [r3, r2]
    c3f0:	ldr	r3, [r3, #252]	; 0xfc
    c3f4:	str	r3, [fp, #-16]
    c3f8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c3fc:	ldr	r1, [r3, #4]
    c400:	sub	r3, fp, #1056	; 0x420
    c404:	sub	r3, r3, #4
    c408:	ldrd	r2, [r3]
    c40c:	sxth	r3, r2
    c410:	mov	r2, r1
    c414:	mov	r1, #0
    c418:	ldr	r0, [fp, #-16]
    c41c:	bl	0 <coda_mem_int16_new>
    c420:	str	r0, [fp, #-20]	; 0xffffffec
    c424:	mov	r3, #0
    c428:	ldr	r2, [fp, #-20]	; 0xffffffec
    c42c:	movw	r1, #0
    c430:	movt	r1, #0
    c434:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c438:	bl	0 <coda_mem_record_add_field>
    c43c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c440:	cmp	r3, #0
    c444:	beq	c58c <read_navigation_header+0xae0>
    c448:	sub	r3, fp, #1024	; 0x400
    c44c:	sub	r3, r3, #4
    c450:	sub	r3, r3, #12
    c454:	add	r1, r3, #51	; 0x33
    c458:	sub	r3, fp, #1120	; 0x460
    c45c:	sub	r3, r3, #4
    c460:	mov	r2, #5
    c464:	mov	r0, r3
    c468:	bl	0 <memcpy>
    c46c:	mov	r3, #0
    c470:	strb	r3, [fp, #-1119]	; 0xfffffba1
    c474:	sub	r3, fp, #1120	; 0x460
    c478:	sub	r3, r3, #4
    c47c:	mov	r0, r3
    c480:	bl	86b4 <rtrim>
    c484:	mrc	15, 0, r3, cr13, cr0, {3}
    c488:	ldr	r2, [pc, #908]	; c81c <read_navigation_header+0xd70>
    c48c:	ldr	r3, [r3, r2]
    c490:	ldr	r3, [r3, #256]	; 0x100
    c494:	str	r3, [fp, #-16]
    c498:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c49c:	ldr	r2, [r3, #4]
    c4a0:	sub	r3, fp, #1120	; 0x460
    c4a4:	sub	r3, r3, #4
    c4a8:	mov	r1, #0
    c4ac:	ldr	r0, [fp, #-16]
    c4b0:	bl	0 <coda_mem_string_new>
    c4b4:	str	r0, [fp, #-20]	; 0xffffffec
    c4b8:	mov	r3, #0
    c4bc:	ldr	r2, [fp, #-20]	; 0xffffffec
    c4c0:	movw	r1, #0
    c4c4:	movt	r1, #0
    c4c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c4cc:	bl	0 <coda_mem_record_add_field>
    c4d0:	sub	r2, fp, #1056	; 0x420
    c4d4:	sub	r2, r2, #4
    c4d8:	sub	r3, fp, #1024	; 0x400
    c4dc:	sub	r3, r3, #4
    c4e0:	sub	r3, r3, #12
    c4e4:	add	r0, r3, #57	; 0x39
    c4e8:	mov	r3, #0
    c4ec:	mov	r1, #2
    c4f0:	bl	0 <coda_ascii_parse_int64>
    c4f4:	mov	r3, r0
    c4f8:	cmp	r3, #0
    c4fc:	bge	c534 <read_navigation_header+0xa88>
    c500:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c504:	bl	0 <coda_dynamic_type_delete>
    c508:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c50c:	ldr	r1, [r3, #124]	; 0x7c
    c510:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c514:	ldr	r3, [r3, #128]	; 0x80
    c518:	add	r3, r3, #57	; 0x39
    c51c:	mov	r2, r3
    c520:	movw	r0, #0
    c524:	movt	r0, #0
    c528:	bl	0 <coda_add_error_message>
    c52c:	mvn	r3, #0
    c530:	b	c808 <read_navigation_header+0xd5c>
    c534:	mrc	15, 0, r3, cr13, cr0, {3}
    c538:	ldr	r2, [pc, #732]	; c81c <read_navigation_header+0xd70>
    c53c:	ldr	r3, [r3, r2]
    c540:	ldr	r3, [r3, #260]	; 0x104
    c544:	str	r3, [fp, #-16]
    c548:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c54c:	ldr	r1, [r3, #4]
    c550:	sub	r3, fp, #1056	; 0x420
    c554:	sub	r3, r3, #4
    c558:	ldrd	r2, [r3]
    c55c:	uxtb	r3, r2
    c560:	mov	r2, r1
    c564:	mov	r1, #0
    c568:	ldr	r0, [fp, #-16]
    c56c:	bl	0 <coda_mem_uint8_new>
    c570:	str	r0, [fp, #-20]	; 0xffffffec
    c574:	mov	r3, #0
    c578:	ldr	r2, [fp, #-20]	; 0xffffffec
    c57c:	movw	r1, #0
    c580:	movt	r1, #0
    c584:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c588:	bl	0 <coda_mem_record_add_field>
    c58c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c590:	ldr	r3, [r3, #152]	; 0x98
    c594:	ldr	r1, [fp, #-36]	; 0xffffffdc
    c598:	mov	r0, r3
    c59c:	bl	0 <coda_mem_array_add_element>
    c5a0:	b	c700 <read_navigation_header+0xc54>
    c5a4:	sub	r3, fp, #1024	; 0x400
    c5a8:	sub	r3, r3, #4
    c5ac:	sub	r3, r3, #12
    c5b0:	add	r3, r3, #60	; 0x3c
    c5b4:	mov	r2, #12
    c5b8:	movw	r1, #0
    c5bc:	movt	r1, #0
    c5c0:	mov	r0, r3
    c5c4:	bl	0 <strncmp>
    c5c8:	mov	r3, r0
    c5cc:	cmp	r3, #0
    c5d0:	bne	c688 <read_navigation_header+0xbdc>
    c5d4:	sub	r2, fp, #1056	; 0x420
    c5d8:	sub	r2, r2, #4
    c5dc:	sub	r0, fp, #1024	; 0x400
    c5e0:	sub	r0, r0, #4
    c5e4:	sub	r0, r0, #12
    c5e8:	mov	r3, #0
    c5ec:	mov	r1, #6
    c5f0:	bl	0 <coda_ascii_parse_int64>
    c5f4:	mov	r3, r0
    c5f8:	cmp	r3, #0
    c5fc:	bge	c628 <read_navigation_header+0xb7c>
    c600:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c604:	ldr	r1, [r3, #124]	; 0x7c
    c608:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c60c:	ldr	r3, [r3, #128]	; 0x80
    c610:	mov	r2, r3
    c614:	movw	r0, #0
    c618:	movt	r0, #0
    c61c:	bl	0 <coda_add_error_message>
    c620:	mvn	r3, #0
    c624:	b	c808 <read_navigation_header+0xd5c>
    c628:	mrc	15, 0, r3, cr13, cr0, {3}
    c62c:	ldr	r2, [pc, #488]	; c81c <read_navigation_header+0xd70>
    c630:	ldr	r3, [r3, r2]
    c634:	ldr	r3, [r3, #164]	; 0xa4
    c638:	str	r3, [fp, #-16]
    c63c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c640:	ldr	r1, [r3, #4]
    c644:	sub	r3, fp, #1056	; 0x420
    c648:	sub	r3, r3, #4
    c64c:	ldrd	r2, [r3]
    c650:	mov	r3, r2
    c654:	mov	r2, r1
    c658:	mov	r1, #0
    c65c:	ldr	r0, [fp, #-16]
    c660:	bl	0 <coda_mem_int32_new>
    c664:	str	r0, [fp, #-20]	; 0xffffffec
    c668:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c66c:	ldr	r0, [r3, #8]
    c670:	mov	r3, #0
    c674:	ldr	r2, [fp, #-20]	; 0xffffffec
    c678:	movw	r1, #0
    c67c:	movt	r1, #0
    c680:	bl	0 <coda_mem_record_add_field>
    c684:	b	c700 <read_navigation_header+0xc54>
    c688:	sub	r3, fp, #1024	; 0x400
    c68c:	sub	r3, r3, #4
    c690:	sub	r3, r3, #12
    c694:	add	r3, r3, #60	; 0x3c
    c698:	mov	r2, #13
    c69c:	movw	r1, #0
    c6a0:	movt	r1, #0
    c6a4:	mov	r0, r3
    c6a8:	bl	0 <strncmp>
    c6ac:	mov	r3, r0
    c6b0:	cmp	r3, #0
    c6b4:	beq	c778 <read_navigation_header+0xccc>
    c6b8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c6bc:	ldr	r0, [r3, #124]	; 0x7c
    c6c0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c6c4:	ldr	r3, [r3, #128]	; 0x80
    c6c8:	add	r2, r3, #60	; 0x3c
    c6cc:	sub	r3, fp, #1024	; 0x400
    c6d0:	sub	r3, r3, #4
    c6d4:	sub	r3, r3, #12
    c6d8:	add	r1, r3, #60	; 0x3c
    c6dc:	str	r2, [sp]
    c6e0:	mov	r3, r0
    c6e4:	mov	r2, r1
    c6e8:	movw	r1, #0
    c6ec:	movt	r1, #0
    c6f0:	mvn	r0, #21
    c6f4:	bl	0 <coda_set_error>
    c6f8:	mvn	r3, #0
    c6fc:	b	c808 <read_navigation_header+0xd5c>
    c700:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c704:	ldr	r3, [r3]
    c708:	mov	r0, r3
    c70c:	bl	0 <ftell>
    c710:	mov	r2, r0
    c714:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c718:	str	r2, [r3, #128]	; 0x80
    c71c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c720:	ldr	r3, [r3, #124]	; 0x7c
    c724:	add	r2, r3, #1
    c728:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c72c:	str	r2, [r3, #124]	; 0x7c
    c730:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c734:	ldr	r2, [r3]
    c738:	sub	r3, fp, #1024	; 0x400
    c73c:	sub	r3, r3, #4
    c740:	sub	r3, r3, #12
    c744:	mov	r1, r3
    c748:	mov	r0, r2
    c74c:	bl	873c <get_line>
    c750:	str	r0, [fp, #-8]
    c754:	ldr	r3, [fp, #-8]
    c758:	cmp	r3, #0
    c75c:	bge	c768 <read_navigation_header+0xcbc>
    c760:	mvn	r3, #0
    c764:	b	c808 <read_navigation_header+0xd5c>
    c768:	ldr	r3, [fp, #-8]
    c76c:	cmp	r3, #0
    c770:	bgt	bb80 <read_navigation_header+0xd4>
    c774:	b	c77c <read_navigation_header+0xcd0>
    c778:	nop	{0}
    c77c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c780:	ldr	r0, [r3, #8]
    c784:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c788:	ldr	r2, [r3, #148]	; 0x94
    c78c:	mov	r3, #0
    c790:	movw	r1, #0
    c794:	movt	r1, #0
    c798:	bl	0 <coda_mem_record_add_field>
    c79c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7a0:	mov	r2, #0
    c7a4:	str	r2, [r3, #148]	; 0x94
    c7a8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7ac:	ldr	r0, [r3, #8]
    c7b0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7b4:	ldr	r2, [r3, #152]	; 0x98
    c7b8:	mov	r3, #0
    c7bc:	movw	r1, #0
    c7c0:	movt	r1, #0
    c7c4:	bl	0 <coda_mem_record_add_field>
    c7c8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7cc:	mov	r2, #0
    c7d0:	str	r2, [r3, #152]	; 0x98
    c7d4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7d8:	ldr	r3, [r3]
    c7dc:	mov	r0, r3
    c7e0:	bl	0 <ftell>
    c7e4:	mov	r2, r0
    c7e8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7ec:	str	r2, [r3, #128]	; 0x80
    c7f0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c7f4:	ldr	r3, [r3, #124]	; 0x7c
    c7f8:	add	r2, r3, #1
    c7fc:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    c800:	str	r2, [r3, #124]	; 0x7c
    c804:	mov	r3, #0
    c808:	mov	r0, r3
    c80c:	sub	sp, fp, #4
    c810:	ldr	fp, [sp]
    c814:	add	sp, sp, #4
    c818:	pop	{pc}		; (ldr pc, [sp], #4)
    c81c:	.word	0x00000000

0000c820 <read_navigation_record_values>:
    c820:	str	fp, [sp, #-8]!
    c824:	str	lr, [sp, #4]
    c828:	add	fp, sp, #4
    c82c:	sub	sp, sp, #40	; 0x28
    c830:	str	r0, [fp, #-24]	; 0xffffffe8
    c834:	str	r1, [fp, #-28]	; 0xffffffe4
    c838:	str	r2, [fp, #-32]	; 0xffffffe0
    c83c:	str	r3, [fp, #-36]	; 0xffffffdc
    c840:	mov	r3, #0
    c844:	str	r3, [fp, #-8]
    c848:	b	c9ec <read_navigation_record_values+0x1cc>
    c84c:	ldr	r3, [fp, #-8]
    c850:	add	r3, r3, #1
    c854:	rsbs	r2, r3, #0
    c858:	and	r3, r3, #3
    c85c:	and	r2, r2, #3
    c860:	rsbpl	r3, r2, #0
    c864:	str	r3, [fp, #-16]
    c868:	ldr	r3, [fp, #-16]
    c86c:	cmp	r3, #0
    c870:	bne	c95c <read_navigation_record_values+0x13c>
    c874:	mov	r3, #80	; 0x50
    c878:	str	r3, [fp, #-12]
    c87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c880:	ldr	r3, [r3]
    c884:	mov	r0, r3
    c888:	bl	0 <ftell>
    c88c:	mov	r2, r0
    c890:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c894:	str	r2, [r3, #128]	; 0x80
    c898:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c89c:	ldr	r3, [r3, #124]	; 0x7c
    c8a0:	add	r2, r3, #1
    c8a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8a8:	str	r2, [r3, #124]	; 0x7c
    c8ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c8b0:	ldr	r3, [r3]
    c8b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c8b8:	mov	r0, r3
    c8bc:	bl	873c <get_line>
    c8c0:	str	r0, [fp, #-20]	; 0xffffffec
    c8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
    c8c8:	cmp	r3, #0
    c8cc:	bge	c8d8 <read_navigation_record_values+0xb8>
    c8d0:	mvn	r3, #0
    c8d4:	b	ca00 <read_navigation_record_values+0x1e0>
    c8d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c8dc:	ldr	r3, [fp, #-8]
    c8e0:	sub	r3, r2, r3
    c8e4:	cmp	r3, #3
    c8e8:	bgt	c918 <read_navigation_record_values+0xf8>
    c8ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c8f0:	ldr	r3, [fp, #-8]
    c8f4:	sub	r3, r2, r3
    c8f8:	rsbs	r2, r3, #0
    c8fc:	and	r3, r3, #3
    c900:	and	r2, r2, #3
    c904:	rsbpl	r3, r2, #0
    c908:	mov	r2, #19
    c90c:	mul	r3, r2, r3
    c910:	add	r3, r3, #4
    c914:	str	r3, [fp, #-12]
    c918:	ldr	r2, [fp, #-20]	; 0xffffffec
    c91c:	ldr	r3, [fp, #-12]
    c920:	cmp	r2, r3
    c924:	bge	c95c <read_navigation_record_values+0x13c>
    c928:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c92c:	ldr	r2, [r3, #124]	; 0x7c
    c930:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c934:	ldr	r3, [r3, #128]	; 0x80
    c938:	str	r3, [sp]
    c93c:	mov	r3, r2
    c940:	ldr	r2, [fp, #-20]	; 0xffffffec
    c944:	movw	r1, #0
    c948:	movt	r1, #0
    c94c:	mvn	r0, #21
    c950:	bl	0 <coda_set_error>
    c954:	mvn	r3, #0
    c958:	b	ca00 <read_navigation_record_values+0x1e0>
    c95c:	ldr	r3, [fp, #-16]
    c960:	mov	r2, #19
    c964:	mul	r3, r2, r3
    c968:	add	r3, r3, #4
    c96c:	mov	r2, r3
    c970:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c974:	add	r0, r3, r2
    c978:	ldr	r3, [fp, #-8]
    c97c:	lsl	r3, r3, #3
    c980:	ldr	r2, [fp, #-36]	; 0xffffffdc
    c984:	add	r2, r2, r3
    c988:	mov	r3, #0
    c98c:	mov	r1, #19
    c990:	bl	0 <coda_ascii_parse_double>
    c994:	mov	r3, r0
    c998:	cmp	r3, #0
    c99c:	bge	c9e0 <read_navigation_record_values+0x1c0>
    c9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c9a4:	ldr	r0, [r3, #124]	; 0x7c
    c9a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    c9ac:	ldr	r3, [r3, #128]	; 0x80
    c9b0:	add	r2, r3, #4
    c9b4:	ldr	r3, [fp, #-16]
    c9b8:	mov	r1, #19
    c9bc:	mul	r3, r1, r3
    c9c0:	add	r3, r2, r3
    c9c4:	mov	r2, r3
    c9c8:	mov	r1, r0
    c9cc:	movw	r0, #0
    c9d0:	movt	r0, #0
    c9d4:	bl	0 <coda_add_error_message>
    c9d8:	mvn	r3, #0
    c9dc:	b	ca00 <read_navigation_record_values+0x1e0>
    c9e0:	ldr	r3, [fp, #-8]
    c9e4:	add	r3, r3, #1
    c9e8:	str	r3, [fp, #-8]
    c9ec:	ldr	r2, [fp, #-8]
    c9f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c9f4:	cmp	r2, r3
    c9f8:	blt	c84c <read_navigation_record_values+0x2c>
    c9fc:	mov	r3, #0
    ca00:	mov	r0, r3
    ca04:	sub	sp, fp, #4
    ca08:	ldr	fp, [sp]
    ca0c:	add	sp, sp, #4
    ca10:	pop	{pc}		; (ldr pc, [sp], #4)

0000ca14 <read_navigation_records>:
    ca14:	str	fp, [sp, #-8]!
    ca18:	str	lr, [sp, #4]
    ca1c:	add	fp, sp, #4
    ca20:	sub	sp, sp, #1376	; 0x560
    ca24:	str	r0, [fp, #-1368]	; 0xfffffaa8
    ca28:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ca2c:	ldr	r3, [r3]
    ca30:	mov	r0, r3
    ca34:	bl	0 <ftell>
    ca38:	mov	r2, r0
    ca3c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ca40:	str	r2, [r3, #128]	; 0x80
    ca44:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ca48:	ldr	r3, [r3, #124]	; 0x7c
    ca4c:	add	r2, r3, #1
    ca50:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ca54:	str	r2, [r3, #124]	; 0x7c
    ca58:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ca5c:	ldr	r3, [r3]
    ca60:	sub	r2, fp, #1024	; 0x400
    ca64:	sub	r2, r2, #4
    ca68:	mov	r1, r2
    ca6c:	mov	r0, r3
    ca70:	bl	873c <get_line>
    ca74:	str	r0, [fp, #-8]
    ca78:	ldr	r3, [fp, #-8]
    ca7c:	cmp	r3, #0
    ca80:	bge	ecc8 <read_navigation_records+0x22b4>
    ca84:	mvn	r3, #0
    ca88:	b	ecd8 <read_navigation_records+0x22c4>
    ca8c:	ldr	r3, [fp, #-8]
    ca90:	cmp	r3, #22
    ca94:	bgt	cacc <read_navigation_records+0xb8>
    ca98:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ca9c:	ldr	r2, [r3, #124]	; 0x7c
    caa0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    caa4:	ldr	r3, [r3, #128]	; 0x80
    caa8:	str	r3, [sp]
    caac:	mov	r3, r2
    cab0:	ldr	r2, [fp, #-8]
    cab4:	movw	r1, #0
    cab8:	movt	r1, #0
    cabc:	mvn	r0, #21
    cac0:	bl	0 <coda_set_error>
    cac4:	mvn	r3, #0
    cac8:	b	ecd8 <read_navigation_records+0x22c4>
    cacc:	ldrb	r3, [fp, #-1028]	; 0xfffffbfc
    cad0:	strb	r3, [fp, #-13]
    cad4:	ldrb	r3, [fp, #-13]
    cad8:	sub	r3, r3, #69	; 0x45
    cadc:	cmp	r3, #14
    cae0:	ldrls	pc, [pc, r3, lsl #2]
    cae4:	b	cbc4 <read_navigation_records+0x1b0>
    cae8:	.word	0x0000cb74
    caec:	.word	0x0000cbc4
    caf0:	.word	0x0000cb24
    caf4:	.word	0x0000cbc4
    caf8:	.word	0x0000cbc4
    cafc:	.word	0x0000cbc4
    cb00:	.word	0x0000cbc4
    cb04:	.word	0x0000cbc4
    cb08:	.word	0x0000cbc4
    cb0c:	.word	0x0000cbc4
    cb10:	.word	0x0000cbc4
    cb14:	.word	0x0000cbc4
    cb18:	.word	0x0000cbc4
    cb1c:	.word	0x0000cb4c
    cb20:	.word	0x0000cb9c
    cb24:	mrc	15, 0, r3, cr13, cr0, {3}
    cb28:	ldr	r2, [pc, #3276]	; d7fc <read_navigation_records+0xde8>
    cb2c:	ldr	r3, [r3, r2]
    cb30:	add	r3, r3, #492	; 0x1ec
    cb34:	ldr	r3, [r3]
    cb38:	mov	r1, #0
    cb3c:	mov	r0, r3
    cb40:	bl	0 <coda_mem_record_new>
    cb44:	str	r0, [fp, #-12]
    cb48:	b	cbec <read_navigation_records+0x1d8>
    cb4c:	mrc	15, 0, r3, cr13, cr0, {3}
    cb50:	ldr	r2, [pc, #3236]	; d7fc <read_navigation_records+0xde8>
    cb54:	ldr	r3, [r3, r2]
    cb58:	add	r3, r3, #496	; 0x1f0
    cb5c:	ldr	r3, [r3]
    cb60:	mov	r1, #0
    cb64:	mov	r0, r3
    cb68:	bl	0 <coda_mem_record_new>
    cb6c:	str	r0, [fp, #-12]
    cb70:	b	cbec <read_navigation_records+0x1d8>
    cb74:	mrc	15, 0, r3, cr13, cr0, {3}
    cb78:	ldr	r2, [pc, #3196]	; d7fc <read_navigation_records+0xde8>
    cb7c:	ldr	r3, [r3, r2]
    cb80:	add	r3, r3, #500	; 0x1f4
    cb84:	ldr	r3, [r3]
    cb88:	mov	r1, #0
    cb8c:	mov	r0, r3
    cb90:	bl	0 <coda_mem_record_new>
    cb94:	str	r0, [fp, #-12]
    cb98:	b	cbec <read_navigation_records+0x1d8>
    cb9c:	mrc	15, 0, r3, cr13, cr0, {3}
    cba0:	ldr	r2, [pc, #3156]	; d7fc <read_navigation_records+0xde8>
    cba4:	ldr	r3, [r3, r2]
    cba8:	add	r3, r3, #504	; 0x1f8
    cbac:	ldr	r3, [r3]
    cbb0:	mov	r1, #0
    cbb4:	mov	r0, r3
    cbb8:	bl	0 <coda_mem_record_new>
    cbbc:	str	r0, [fp, #-12]
    cbc0:	b	cbec <read_navigation_records+0x1d8>
    cbc4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cbc8:	ldr	r2, [r3, #124]	; 0x7c
    cbcc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cbd0:	ldr	r3, [r3, #128]	; 0x80
    cbd4:	movw	r1, #0
    cbd8:	movt	r1, #0
    cbdc:	mvn	r0, #21
    cbe0:	bl	0 <coda_set_error>
    cbe4:	mvn	r3, #0
    cbe8:	b	ecd8 <read_navigation_records+0x22c4>
    cbec:	sub	r3, fp, #4
    cbf0:	sub	r3, r3, #1024	; 0x400
    cbf4:	ldrh	r3, [r3, #1]
    cbf8:	uxth	r2, r3
    cbfc:	sub	r3, fp, #4
    cc00:	sub	r3, r3, #1088	; 0x440
    cc04:	strh	r2, [r3]
    cc08:	mov	r3, #0
    cc0c:	strb	r3, [fp, #-1090]	; 0xfffffbbe
    cc10:	sub	r3, fp, #1104	; 0x450
    cc14:	sub	r3, r3, #4
    cc18:	sub	r3, r3, #8
    cc1c:	sub	r0, fp, #1088	; 0x440
    cc20:	sub	r0, r0, #4
    cc24:	mov	r2, r3
    cc28:	movw	r1, #0
    cc2c:	movt	r1, #0
    cc30:	bl	0 <__isoc99_sscanf>
    cc34:	mov	r3, r0
    cc38:	cmp	r3, #1
    cc3c:	beq	cc74 <read_navigation_records+0x260>
    cc40:	ldr	r0, [fp, #-12]
    cc44:	bl	0 <coda_dynamic_type_delete>
    cc48:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cc4c:	ldr	r2, [r3, #124]	; 0x7c
    cc50:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cc54:	ldr	r3, [r3, #128]	; 0x80
    cc58:	add	r3, r3, #1
    cc5c:	movw	r1, #0
    cc60:	movt	r1, #0
    cc64:	mvn	r0, #21
    cc68:	bl	0 <coda_set_error>
    cc6c:	mvn	r3, #0
    cc70:	b	ecd8 <read_navigation_records+0x22c4>
    cc74:	mrc	15, 0, r3, cr13, cr0, {3}
    cc78:	ldr	r2, [pc, #2940]	; d7fc <read_navigation_records+0xde8>
    cc7c:	ldr	r3, [r3, r2]
    cc80:	ldr	r3, [r3, #192]	; 0xc0
    cc84:	str	r3, [fp, #-20]	; 0xffffffec
    cc88:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cc8c:	ldr	r2, [r3, #4]
    cc90:	ldr	r3, [fp, #-1116]	; 0xfffffba4
    cc94:	uxtb	r3, r3
    cc98:	mov	r1, #0
    cc9c:	ldr	r0, [fp, #-20]	; 0xffffffec
    cca0:	bl	0 <coda_mem_uint8_new>
    cca4:	str	r0, [fp, #-24]	; 0xffffffe8
    cca8:	mov	r3, #0
    ccac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ccb0:	movw	r1, #0
    ccb4:	movt	r1, #0
    ccb8:	ldr	r0, [fp, #-12]
    ccbc:	bl	0 <coda_mem_record_add_field>
    ccc0:	sub	r3, fp, #1024	; 0x400
    ccc4:	sub	r3, r3, #4
    ccc8:	add	r1, r3, #4
    cccc:	sub	r3, fp, #1104	; 0x450
    ccd0:	sub	r3, r3, #4
    ccd4:	sub	r3, r3, #4
    ccd8:	mov	r2, #19
    ccdc:	mov	r0, r3
    cce0:	bl	0 <memcpy>
    cce4:	mov	r3, #0
    cce8:	strb	r3, [fp, #-1093]	; 0xfffffbbb
    ccec:	mrc	15, 0, r3, cr13, cr0, {3}
    ccf0:	ldr	r2, [pc, #2820]	; d7fc <read_navigation_records+0xde8>
    ccf4:	ldr	r3, [r3, r2]
    ccf8:	ldr	r3, [r3, #176]	; 0xb0
    ccfc:	str	r3, [fp, #-20]	; 0xffffffec
    cd00:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cd04:	ldr	r2, [r3, #4]
    cd08:	sub	r3, fp, #1104	; 0x450
    cd0c:	sub	r3, r3, #4
    cd10:	sub	r3, r3, #4
    cd14:	mov	r1, #0
    cd18:	ldr	r0, [fp, #-20]	; 0xffffffec
    cd1c:	bl	0 <coda_mem_string_new>
    cd20:	str	r0, [fp, #-28]	; 0xffffffe4
    cd24:	mrc	15, 0, r3, cr13, cr0, {3}
    cd28:	ldr	r2, [pc, #2764]	; d7fc <read_navigation_records+0xde8>
    cd2c:	ldr	r3, [r3, r2]
    cd30:	ldr	r3, [r3, #272]	; 0x110
    cd34:	str	r3, [fp, #-20]	; 0xffffffec
    cd38:	ldr	r2, [fp, #-28]	; 0xffffffe4
    cd3c:	mov	r1, #0
    cd40:	ldr	r0, [fp, #-20]	; 0xffffffec
    cd44:	bl	0 <coda_mem_time_new>
    cd48:	str	r0, [fp, #-24]	; 0xffffffe8
    cd4c:	mov	r3, #0
    cd50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cd54:	movw	r1, #0
    cd58:	movt	r1, #0
    cd5c:	ldr	r0, [fp, #-12]
    cd60:	bl	0 <coda_mem_record_add_field>
    cd64:	ldrb	r3, [fp, #-13]
    cd68:	cmp	r3, #71	; 0x47
    cd6c:	bne	d7b8 <read_navigation_records+0xda4>
    cd70:	sub	r3, fp, #1360	; 0x550
    cd74:	sub	r3, r3, #4
    cd78:	sub	r1, fp, #1024	; 0x400
    cd7c:	sub	r1, r1, #4
    cd80:	mov	r2, #29
    cd84:	ldr	r0, [fp, #-1368]	; 0xfffffaa8
    cd88:	bl	c820 <read_navigation_record_values>
    cd8c:	mov	r3, r0
    cd90:	cmp	r3, #0
    cd94:	beq	cda8 <read_navigation_records+0x394>
    cd98:	ldr	r0, [fp, #-12]
    cd9c:	bl	0 <coda_dynamic_type_delete>
    cda0:	mvn	r3, #0
    cda4:	b	ecd8 <read_navigation_records+0x22c4>
    cda8:	mrc	15, 0, r3, cr13, cr0, {3}
    cdac:	ldr	r2, [pc, #2632]	; d7fc <read_navigation_records+0xde8>
    cdb0:	ldr	r3, [r3, r2]
    cdb4:	ldr	r3, [r3, #276]	; 0x114
    cdb8:	str	r3, [fp, #-20]	; 0xffffffec
    cdbc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cdc0:	ldr	r3, [r3, #4]
    cdc4:	sub	r2, fp, #1360	; 0x550
    cdc8:	sub	r2, r2, #4
    cdcc:	vldr	d7, [r2]
    cdd0:	vmov.f64	d0, d7
    cdd4:	mov	r2, r3
    cdd8:	mov	r1, #0
    cddc:	ldr	r0, [fp, #-20]	; 0xffffffec
    cde0:	bl	0 <coda_mem_double_new>
    cde4:	str	r0, [fp, #-24]	; 0xffffffe8
    cde8:	mov	r3, #0
    cdec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cdf0:	movw	r1, #0
    cdf4:	movt	r1, #0
    cdf8:	ldr	r0, [fp, #-12]
    cdfc:	bl	0 <coda_mem_record_add_field>
    ce00:	mrc	15, 0, r3, cr13, cr0, {3}
    ce04:	ldr	r2, [pc, #2544]	; d7fc <read_navigation_records+0xde8>
    ce08:	ldr	r3, [r3, r2]
    ce0c:	ldr	r3, [r3, #280]	; 0x118
    ce10:	str	r3, [fp, #-20]	; 0xffffffec
    ce14:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ce18:	ldr	r3, [r3, #4]
    ce1c:	sub	r2, fp, #1360	; 0x550
    ce20:	sub	r2, r2, #4
    ce24:	vldr	d7, [r2, #8]
    ce28:	vmov.f64	d0, d7
    ce2c:	mov	r2, r3
    ce30:	mov	r1, #0
    ce34:	ldr	r0, [fp, #-20]	; 0xffffffec
    ce38:	bl	0 <coda_mem_double_new>
    ce3c:	str	r0, [fp, #-24]	; 0xffffffe8
    ce40:	mov	r3, #0
    ce44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ce48:	movw	r1, #0
    ce4c:	movt	r1, #0
    ce50:	ldr	r0, [fp, #-12]
    ce54:	bl	0 <coda_mem_record_add_field>
    ce58:	mrc	15, 0, r3, cr13, cr0, {3}
    ce5c:	ldr	r2, [pc, #2456]	; d7fc <read_navigation_records+0xde8>
    ce60:	ldr	r3, [r3, r2]
    ce64:	ldr	r3, [r3, #284]	; 0x11c
    ce68:	str	r3, [fp, #-20]	; 0xffffffec
    ce6c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ce70:	ldr	r3, [r3, #4]
    ce74:	sub	r2, fp, #1360	; 0x550
    ce78:	sub	r2, r2, #4
    ce7c:	vldr	d7, [r2, #16]
    ce80:	vmov.f64	d0, d7
    ce84:	mov	r2, r3
    ce88:	mov	r1, #0
    ce8c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ce90:	bl	0 <coda_mem_double_new>
    ce94:	str	r0, [fp, #-24]	; 0xffffffe8
    ce98:	mov	r3, #0
    ce9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cea0:	movw	r1, #0
    cea4:	movt	r1, #0
    cea8:	ldr	r0, [fp, #-12]
    ceac:	bl	0 <coda_mem_record_add_field>
    ceb0:	mrc	15, 0, r3, cr13, cr0, {3}
    ceb4:	ldr	r2, [pc, #2368]	; d7fc <read_navigation_records+0xde8>
    ceb8:	ldr	r3, [r3, r2]
    cebc:	ldr	r3, [r3, #288]	; 0x120
    cec0:	str	r3, [fp, #-20]	; 0xffffffec
    cec4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cec8:	ldr	r3, [r3, #4]
    cecc:	sub	r2, fp, #1360	; 0x550
    ced0:	sub	r2, r2, #4
    ced4:	vldr	d7, [r2, #24]
    ced8:	vmov.f64	d0, d7
    cedc:	mov	r2, r3
    cee0:	mov	r1, #0
    cee4:	ldr	r0, [fp, #-20]	; 0xffffffec
    cee8:	bl	0 <coda_mem_double_new>
    ceec:	str	r0, [fp, #-24]	; 0xffffffe8
    cef0:	mov	r3, #0
    cef4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cef8:	movw	r1, #0
    cefc:	movt	r1, #0
    cf00:	ldr	r0, [fp, #-12]
    cf04:	bl	0 <coda_mem_record_add_field>
    cf08:	mrc	15, 0, r3, cr13, cr0, {3}
    cf0c:	ldr	r2, [pc, #2280]	; d7fc <read_navigation_records+0xde8>
    cf10:	ldr	r3, [r3, r2]
    cf14:	ldr	r3, [r3, #292]	; 0x124
    cf18:	str	r3, [fp, #-20]	; 0xffffffec
    cf1c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cf20:	ldr	r3, [r3, #4]
    cf24:	sub	r2, fp, #1360	; 0x550
    cf28:	sub	r2, r2, #4
    cf2c:	vldr	d7, [r2, #32]
    cf30:	vmov.f64	d0, d7
    cf34:	mov	r2, r3
    cf38:	mov	r1, #0
    cf3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    cf40:	bl	0 <coda_mem_double_new>
    cf44:	str	r0, [fp, #-24]	; 0xffffffe8
    cf48:	mov	r3, #0
    cf4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cf50:	movw	r1, #0
    cf54:	movt	r1, #0
    cf58:	ldr	r0, [fp, #-12]
    cf5c:	bl	0 <coda_mem_record_add_field>
    cf60:	mrc	15, 0, r3, cr13, cr0, {3}
    cf64:	ldr	r2, [pc, #2192]	; d7fc <read_navigation_records+0xde8>
    cf68:	ldr	r3, [r3, r2]
    cf6c:	ldr	r3, [r3, #296]	; 0x128
    cf70:	str	r3, [fp, #-20]	; 0xffffffec
    cf74:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cf78:	ldr	r3, [r3, #4]
    cf7c:	sub	r2, fp, #1360	; 0x550
    cf80:	sub	r2, r2, #4
    cf84:	vldr	d7, [r2, #40]	; 0x28
    cf88:	vmov.f64	d0, d7
    cf8c:	mov	r2, r3
    cf90:	mov	r1, #0
    cf94:	ldr	r0, [fp, #-20]	; 0xffffffec
    cf98:	bl	0 <coda_mem_double_new>
    cf9c:	str	r0, [fp, #-24]	; 0xffffffe8
    cfa0:	mov	r3, #0
    cfa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    cfa8:	movw	r1, #0
    cfac:	movt	r1, #0
    cfb0:	ldr	r0, [fp, #-12]
    cfb4:	bl	0 <coda_mem_record_add_field>
    cfb8:	mrc	15, 0, r3, cr13, cr0, {3}
    cfbc:	ldr	r2, [pc, #2104]	; d7fc <read_navigation_records+0xde8>
    cfc0:	ldr	r3, [r3, r2]
    cfc4:	ldr	r3, [r3, #300]	; 0x12c
    cfc8:	str	r3, [fp, #-20]	; 0xffffffec
    cfcc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    cfd0:	ldr	r3, [r3, #4]
    cfd4:	sub	r2, fp, #1360	; 0x550
    cfd8:	sub	r2, r2, #4
    cfdc:	vldr	d7, [r2, #48]	; 0x30
    cfe0:	vmov.f64	d0, d7
    cfe4:	mov	r2, r3
    cfe8:	mov	r1, #0
    cfec:	ldr	r0, [fp, #-20]	; 0xffffffec
    cff0:	bl	0 <coda_mem_double_new>
    cff4:	str	r0, [fp, #-24]	; 0xffffffe8
    cff8:	mov	r3, #0
    cffc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d000:	movw	r1, #0
    d004:	movt	r1, #0
    d008:	ldr	r0, [fp, #-12]
    d00c:	bl	0 <coda_mem_record_add_field>
    d010:	mrc	15, 0, r3, cr13, cr0, {3}
    d014:	ldr	r2, [pc, #2016]	; d7fc <read_navigation_records+0xde8>
    d018:	ldr	r3, [r3, r2]
    d01c:	ldr	r3, [r3, #304]	; 0x130
    d020:	str	r3, [fp, #-20]	; 0xffffffec
    d024:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d028:	ldr	r3, [r3, #4]
    d02c:	sub	r2, fp, #1360	; 0x550
    d030:	sub	r2, r2, #4
    d034:	vldr	d7, [r2, #56]	; 0x38
    d038:	vmov.f64	d0, d7
    d03c:	mov	r2, r3
    d040:	mov	r1, #0
    d044:	ldr	r0, [fp, #-20]	; 0xffffffec
    d048:	bl	0 <coda_mem_double_new>
    d04c:	str	r0, [fp, #-24]	; 0xffffffe8
    d050:	mov	r3, #0
    d054:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d058:	movw	r1, #0
    d05c:	movt	r1, #0
    d060:	ldr	r0, [fp, #-12]
    d064:	bl	0 <coda_mem_record_add_field>
    d068:	mrc	15, 0, r3, cr13, cr0, {3}
    d06c:	ldr	r2, [pc, #1928]	; d7fc <read_navigation_records+0xde8>
    d070:	ldr	r3, [r3, r2]
    d074:	ldr	r3, [r3, #308]	; 0x134
    d078:	str	r3, [fp, #-20]	; 0xffffffec
    d07c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d080:	ldr	r3, [r3, #4]
    d084:	sub	r2, fp, #1360	; 0x550
    d088:	sub	r2, r2, #4
    d08c:	vldr	d7, [r2, #64]	; 0x40
    d090:	vmov.f64	d0, d7
    d094:	mov	r2, r3
    d098:	mov	r1, #0
    d09c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d0a0:	bl	0 <coda_mem_double_new>
    d0a4:	str	r0, [fp, #-24]	; 0xffffffe8
    d0a8:	mov	r3, #0
    d0ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d0b0:	movw	r1, #0
    d0b4:	movt	r1, #0
    d0b8:	ldr	r0, [fp, #-12]
    d0bc:	bl	0 <coda_mem_record_add_field>
    d0c0:	mrc	15, 0, r3, cr13, cr0, {3}
    d0c4:	ldr	r2, [pc, #1840]	; d7fc <read_navigation_records+0xde8>
    d0c8:	ldr	r3, [r3, r2]
    d0cc:	ldr	r3, [r3, #312]	; 0x138
    d0d0:	str	r3, [fp, #-20]	; 0xffffffec
    d0d4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d0d8:	ldr	r3, [r3, #4]
    d0dc:	sub	r2, fp, #1360	; 0x550
    d0e0:	sub	r2, r2, #4
    d0e4:	vldr	d7, [r2, #72]	; 0x48
    d0e8:	vmov.f64	d0, d7
    d0ec:	mov	r2, r3
    d0f0:	mov	r1, #0
    d0f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d0f8:	bl	0 <coda_mem_double_new>
    d0fc:	str	r0, [fp, #-24]	; 0xffffffe8
    d100:	mov	r3, #0
    d104:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d108:	movw	r1, #0
    d10c:	movt	r1, #0
    d110:	ldr	r0, [fp, #-12]
    d114:	bl	0 <coda_mem_record_add_field>
    d118:	mrc	15, 0, r3, cr13, cr0, {3}
    d11c:	ldr	r2, [pc, #1752]	; d7fc <read_navigation_records+0xde8>
    d120:	ldr	r3, [r3, r2]
    d124:	ldr	r3, [r3, #316]	; 0x13c
    d128:	str	r3, [fp, #-20]	; 0xffffffec
    d12c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d130:	ldr	r3, [r3, #4]
    d134:	sub	r2, fp, #1360	; 0x550
    d138:	sub	r2, r2, #4
    d13c:	vldr	d7, [r2, #80]	; 0x50
    d140:	vmov.f64	d0, d7
    d144:	mov	r2, r3
    d148:	mov	r1, #0
    d14c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d150:	bl	0 <coda_mem_double_new>
    d154:	str	r0, [fp, #-24]	; 0xffffffe8
    d158:	mov	r3, #0
    d15c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d160:	movw	r1, #0
    d164:	movt	r1, #0
    d168:	ldr	r0, [fp, #-12]
    d16c:	bl	0 <coda_mem_record_add_field>
    d170:	mrc	15, 0, r3, cr13, cr0, {3}
    d174:	ldr	r2, [pc, #1664]	; d7fc <read_navigation_records+0xde8>
    d178:	ldr	r3, [r3, r2]
    d17c:	ldr	r3, [r3, #320]	; 0x140
    d180:	str	r3, [fp, #-20]	; 0xffffffec
    d184:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d188:	ldr	r3, [r3, #4]
    d18c:	sub	r2, fp, #1360	; 0x550
    d190:	sub	r2, r2, #4
    d194:	vldr	d7, [r2, #88]	; 0x58
    d198:	vmov.f64	d0, d7
    d19c:	mov	r2, r3
    d1a0:	mov	r1, #0
    d1a4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d1a8:	bl	0 <coda_mem_double_new>
    d1ac:	str	r0, [fp, #-24]	; 0xffffffe8
    d1b0:	mov	r3, #0
    d1b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d1b8:	movw	r1, #0
    d1bc:	movt	r1, #0
    d1c0:	ldr	r0, [fp, #-12]
    d1c4:	bl	0 <coda_mem_record_add_field>
    d1c8:	mrc	15, 0, r3, cr13, cr0, {3}
    d1cc:	ldr	r2, [pc, #1576]	; d7fc <read_navigation_records+0xde8>
    d1d0:	ldr	r3, [r3, r2]
    d1d4:	ldr	r3, [r3, #324]	; 0x144
    d1d8:	str	r3, [fp, #-20]	; 0xffffffec
    d1dc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d1e0:	ldr	r3, [r3, #4]
    d1e4:	sub	r2, fp, #1360	; 0x550
    d1e8:	sub	r2, r2, #4
    d1ec:	vldr	d7, [r2, #96]	; 0x60
    d1f0:	vmov.f64	d0, d7
    d1f4:	mov	r2, r3
    d1f8:	mov	r1, #0
    d1fc:	ldr	r0, [fp, #-20]	; 0xffffffec
    d200:	bl	0 <coda_mem_double_new>
    d204:	str	r0, [fp, #-24]	; 0xffffffe8
    d208:	mov	r3, #0
    d20c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d210:	movw	r1, #0
    d214:	movt	r1, #0
    d218:	ldr	r0, [fp, #-12]
    d21c:	bl	0 <coda_mem_record_add_field>
    d220:	mrc	15, 0, r3, cr13, cr0, {3}
    d224:	ldr	r2, [pc, #1488]	; d7fc <read_navigation_records+0xde8>
    d228:	ldr	r3, [r3, r2]
    d22c:	ldr	r3, [r3, #328]	; 0x148
    d230:	str	r3, [fp, #-20]	; 0xffffffec
    d234:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d238:	ldr	r3, [r3, #4]
    d23c:	sub	r2, fp, #1360	; 0x550
    d240:	sub	r2, r2, #4
    d244:	vldr	d7, [r2, #104]	; 0x68
    d248:	vmov.f64	d0, d7
    d24c:	mov	r2, r3
    d250:	mov	r1, #0
    d254:	ldr	r0, [fp, #-20]	; 0xffffffec
    d258:	bl	0 <coda_mem_double_new>
    d25c:	str	r0, [fp, #-24]	; 0xffffffe8
    d260:	mov	r3, #0
    d264:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d268:	movw	r1, #0
    d26c:	movt	r1, #0
    d270:	ldr	r0, [fp, #-12]
    d274:	bl	0 <coda_mem_record_add_field>
    d278:	mrc	15, 0, r3, cr13, cr0, {3}
    d27c:	ldr	r2, [pc, #1400]	; d7fc <read_navigation_records+0xde8>
    d280:	ldr	r3, [r3, r2]
    d284:	ldr	r3, [r3, #332]	; 0x14c
    d288:	str	r3, [fp, #-20]	; 0xffffffec
    d28c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d290:	ldr	r3, [r3, #4]
    d294:	sub	r2, fp, #1360	; 0x550
    d298:	sub	r2, r2, #4
    d29c:	vldr	d7, [r2, #112]	; 0x70
    d2a0:	vmov.f64	d0, d7
    d2a4:	mov	r2, r3
    d2a8:	mov	r1, #0
    d2ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    d2b0:	bl	0 <coda_mem_double_new>
    d2b4:	str	r0, [fp, #-24]	; 0xffffffe8
    d2b8:	mov	r3, #0
    d2bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d2c0:	movw	r1, #0
    d2c4:	movt	r1, #0
    d2c8:	ldr	r0, [fp, #-12]
    d2cc:	bl	0 <coda_mem_record_add_field>
    d2d0:	mrc	15, 0, r3, cr13, cr0, {3}
    d2d4:	ldr	r2, [pc, #1312]	; d7fc <read_navigation_records+0xde8>
    d2d8:	ldr	r3, [r3, r2]
    d2dc:	ldr	r3, [r3, #336]	; 0x150
    d2e0:	str	r3, [fp, #-20]	; 0xffffffec
    d2e4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d2e8:	ldr	r3, [r3, #4]
    d2ec:	sub	r2, fp, #1360	; 0x550
    d2f0:	sub	r2, r2, #4
    d2f4:	vldr	d7, [r2, #120]	; 0x78
    d2f8:	vmov.f64	d0, d7
    d2fc:	mov	r2, r3
    d300:	mov	r1, #0
    d304:	ldr	r0, [fp, #-20]	; 0xffffffec
    d308:	bl	0 <coda_mem_double_new>
    d30c:	str	r0, [fp, #-24]	; 0xffffffe8
    d310:	mov	r3, #0
    d314:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d318:	movw	r1, #0
    d31c:	movt	r1, #0
    d320:	ldr	r0, [fp, #-12]
    d324:	bl	0 <coda_mem_record_add_field>
    d328:	mrc	15, 0, r3, cr13, cr0, {3}
    d32c:	ldr	r2, [pc, #1224]	; d7fc <read_navigation_records+0xde8>
    d330:	ldr	r3, [r3, r2]
    d334:	ldr	r3, [r3, #340]	; 0x154
    d338:	str	r3, [fp, #-20]	; 0xffffffec
    d33c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d340:	ldr	r3, [r3, #4]
    d344:	sub	r2, fp, #1360	; 0x550
    d348:	sub	r2, r2, #4
    d34c:	vldr	d7, [r2, #128]	; 0x80
    d350:	vmov.f64	d0, d7
    d354:	mov	r2, r3
    d358:	mov	r1, #0
    d35c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d360:	bl	0 <coda_mem_double_new>
    d364:	str	r0, [fp, #-24]	; 0xffffffe8
    d368:	mov	r3, #0
    d36c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d370:	movw	r1, #0
    d374:	movt	r1, #0
    d378:	ldr	r0, [fp, #-12]
    d37c:	bl	0 <coda_mem_record_add_field>
    d380:	mrc	15, 0, r3, cr13, cr0, {3}
    d384:	ldr	r2, [pc, #1136]	; d7fc <read_navigation_records+0xde8>
    d388:	ldr	r3, [r3, r2]
    d38c:	ldr	r3, [r3, #344]	; 0x158
    d390:	str	r3, [fp, #-20]	; 0xffffffec
    d394:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d398:	ldr	r3, [r3, #4]
    d39c:	sub	r2, fp, #1360	; 0x550
    d3a0:	sub	r2, r2, #4
    d3a4:	vldr	d7, [r2, #136]	; 0x88
    d3a8:	vmov.f64	d0, d7
    d3ac:	mov	r2, r3
    d3b0:	mov	r1, #0
    d3b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d3b8:	bl	0 <coda_mem_double_new>
    d3bc:	str	r0, [fp, #-24]	; 0xffffffe8
    d3c0:	mov	r3, #0
    d3c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d3c8:	movw	r1, #0
    d3cc:	movt	r1, #0
    d3d0:	ldr	r0, [fp, #-12]
    d3d4:	bl	0 <coda_mem_record_add_field>
    d3d8:	mrc	15, 0, r3, cr13, cr0, {3}
    d3dc:	ldr	r2, [pc, #1048]	; d7fc <read_navigation_records+0xde8>
    d3e0:	ldr	r3, [r3, r2]
    d3e4:	ldr	r3, [r3, #348]	; 0x15c
    d3e8:	str	r3, [fp, #-20]	; 0xffffffec
    d3ec:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d3f0:	ldr	r3, [r3, #4]
    d3f4:	sub	r2, fp, #1360	; 0x550
    d3f8:	sub	r2, r2, #4
    d3fc:	vldr	d7, [r2, #144]	; 0x90
    d400:	vmov.f64	d0, d7
    d404:	mov	r2, r3
    d408:	mov	r1, #0
    d40c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d410:	bl	0 <coda_mem_double_new>
    d414:	str	r0, [fp, #-24]	; 0xffffffe8
    d418:	mov	r3, #0
    d41c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d420:	movw	r1, #0
    d424:	movt	r1, #0
    d428:	ldr	r0, [fp, #-12]
    d42c:	bl	0 <coda_mem_record_add_field>
    d430:	mrc	15, 0, r3, cr13, cr0, {3}
    d434:	ldr	r2, [pc, #960]	; d7fc <read_navigation_records+0xde8>
    d438:	ldr	r3, [r3, r2]
    d43c:	ldr	r3, [r3, #352]	; 0x160
    d440:	str	r3, [fp, #-20]	; 0xffffffec
    d444:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d448:	ldr	r3, [r3, #4]
    d44c:	sub	r2, fp, #1360	; 0x550
    d450:	sub	r2, r2, #4
    d454:	vldr	d7, [r2, #152]	; 0x98
    d458:	vmov.f64	d0, d7
    d45c:	mov	r2, r3
    d460:	mov	r1, #0
    d464:	ldr	r0, [fp, #-20]	; 0xffffffec
    d468:	bl	0 <coda_mem_double_new>
    d46c:	str	r0, [fp, #-24]	; 0xffffffe8
    d470:	mov	r3, #0
    d474:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d478:	movw	r1, #0
    d47c:	movt	r1, #0
    d480:	ldr	r0, [fp, #-12]
    d484:	bl	0 <coda_mem_record_add_field>
    d488:	mrc	15, 0, r3, cr13, cr0, {3}
    d48c:	ldr	r2, [pc, #872]	; d7fc <read_navigation_records+0xde8>
    d490:	ldr	r3, [r3, r2]
    d494:	ldr	r3, [r3, #356]	; 0x164
    d498:	str	r3, [fp, #-20]	; 0xffffffec
    d49c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d4a0:	ldr	r3, [r3, #4]
    d4a4:	sub	r2, fp, #1360	; 0x550
    d4a8:	sub	r2, r2, #4
    d4ac:	vldr	d7, [r2, #160]	; 0xa0
    d4b0:	vmov.f64	d0, d7
    d4b4:	mov	r2, r3
    d4b8:	mov	r1, #0
    d4bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    d4c0:	bl	0 <coda_mem_double_new>
    d4c4:	str	r0, [fp, #-24]	; 0xffffffe8
    d4c8:	mov	r3, #0
    d4cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d4d0:	movw	r1, #0
    d4d4:	movt	r1, #0
    d4d8:	ldr	r0, [fp, #-12]
    d4dc:	bl	0 <coda_mem_record_add_field>
    d4e0:	mrc	15, 0, r3, cr13, cr0, {3}
    d4e4:	ldr	r2, [pc, #784]	; d7fc <read_navigation_records+0xde8>
    d4e8:	ldr	r3, [r3, r2]
    d4ec:	ldr	r3, [r3, #360]	; 0x168
    d4f0:	str	r3, [fp, #-20]	; 0xffffffec
    d4f4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d4f8:	ldr	r3, [r3, #4]
    d4fc:	sub	r2, fp, #1360	; 0x550
    d500:	sub	r2, r2, #4
    d504:	vldr	d7, [r2, #168]	; 0xa8
    d508:	vmov.f64	d0, d7
    d50c:	mov	r2, r3
    d510:	mov	r1, #0
    d514:	ldr	r0, [fp, #-20]	; 0xffffffec
    d518:	bl	0 <coda_mem_double_new>
    d51c:	str	r0, [fp, #-24]	; 0xffffffe8
    d520:	mov	r3, #0
    d524:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d528:	movw	r1, #0
    d52c:	movt	r1, #0
    d530:	ldr	r0, [fp, #-12]
    d534:	bl	0 <coda_mem_record_add_field>
    d538:	mrc	15, 0, r3, cr13, cr0, {3}
    d53c:	ldr	r2, [pc, #696]	; d7fc <read_navigation_records+0xde8>
    d540:	ldr	r3, [r3, r2]
    d544:	ldr	r3, [r3, #364]	; 0x16c
    d548:	str	r3, [fp, #-20]	; 0xffffffec
    d54c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d550:	ldr	r3, [r3, #4]
    d554:	sub	r2, fp, #1360	; 0x550
    d558:	sub	r2, r2, #4
    d55c:	vldr	d7, [r2, #176]	; 0xb0
    d560:	vmov.f64	d0, d7
    d564:	mov	r2, r3
    d568:	mov	r1, #0
    d56c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d570:	bl	0 <coda_mem_double_new>
    d574:	str	r0, [fp, #-24]	; 0xffffffe8
    d578:	mov	r3, #0
    d57c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d580:	movw	r1, #0
    d584:	movt	r1, #0
    d588:	ldr	r0, [fp, #-12]
    d58c:	bl	0 <coda_mem_record_add_field>
    d590:	mrc	15, 0, r3, cr13, cr0, {3}
    d594:	ldr	r2, [pc, #608]	; d7fc <read_navigation_records+0xde8>
    d598:	ldr	r3, [r3, r2]
    d59c:	ldr	r3, [r3, #368]	; 0x170
    d5a0:	str	r3, [fp, #-20]	; 0xffffffec
    d5a4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d5a8:	ldr	r3, [r3, #4]
    d5ac:	sub	r2, fp, #1360	; 0x550
    d5b0:	sub	r2, r2, #4
    d5b4:	vldr	d7, [r2, #184]	; 0xb8
    d5b8:	vmov.f64	d0, d7
    d5bc:	mov	r2, r3
    d5c0:	mov	r1, #0
    d5c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d5c8:	bl	0 <coda_mem_double_new>
    d5cc:	str	r0, [fp, #-24]	; 0xffffffe8
    d5d0:	mov	r3, #0
    d5d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d5d8:	movw	r1, #0
    d5dc:	movt	r1, #0
    d5e0:	ldr	r0, [fp, #-12]
    d5e4:	bl	0 <coda_mem_record_add_field>
    d5e8:	mrc	15, 0, r3, cr13, cr0, {3}
    d5ec:	ldr	r2, [pc, #520]	; d7fc <read_navigation_records+0xde8>
    d5f0:	ldr	r3, [r3, r2]
    d5f4:	ldr	r3, [r3, #372]	; 0x174
    d5f8:	str	r3, [fp, #-20]	; 0xffffffec
    d5fc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d600:	ldr	r3, [r3, #4]
    d604:	sub	r2, fp, #1360	; 0x550
    d608:	sub	r2, r2, #4
    d60c:	vldr	d7, [r2, #192]	; 0xc0
    d610:	vmov.f64	d0, d7
    d614:	mov	r2, r3
    d618:	mov	r1, #0
    d61c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d620:	bl	0 <coda_mem_double_new>
    d624:	str	r0, [fp, #-24]	; 0xffffffe8
    d628:	mov	r3, #0
    d62c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d630:	movw	r1, #0
    d634:	movt	r1, #0
    d638:	ldr	r0, [fp, #-12]
    d63c:	bl	0 <coda_mem_record_add_field>
    d640:	mrc	15, 0, r3, cr13, cr0, {3}
    d644:	ldr	r2, [pc, #432]	; d7fc <read_navigation_records+0xde8>
    d648:	ldr	r3, [r3, r2]
    d64c:	ldr	r3, [r3, #376]	; 0x178
    d650:	str	r3, [fp, #-20]	; 0xffffffec
    d654:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d658:	ldr	r3, [r3, #4]
    d65c:	sub	r2, fp, #1360	; 0x550
    d660:	sub	r2, r2, #4
    d664:	vldr	d7, [r2, #200]	; 0xc8
    d668:	vmov.f64	d0, d7
    d66c:	mov	r2, r3
    d670:	mov	r1, #0
    d674:	ldr	r0, [fp, #-20]	; 0xffffffec
    d678:	bl	0 <coda_mem_double_new>
    d67c:	str	r0, [fp, #-24]	; 0xffffffe8
    d680:	mov	r3, #0
    d684:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d688:	movw	r1, #0
    d68c:	movt	r1, #0
    d690:	ldr	r0, [fp, #-12]
    d694:	bl	0 <coda_mem_record_add_field>
    d698:	mrc	15, 0, r3, cr13, cr0, {3}
    d69c:	ldr	r2, [pc, #344]	; d7fc <read_navigation_records+0xde8>
    d6a0:	ldr	r3, [r3, r2]
    d6a4:	ldr	r3, [r3, #380]	; 0x17c
    d6a8:	str	r3, [fp, #-20]	; 0xffffffec
    d6ac:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d6b0:	ldr	r3, [r3, #4]
    d6b4:	sub	r2, fp, #1360	; 0x550
    d6b8:	sub	r2, r2, #4
    d6bc:	vldr	d7, [r2, #208]	; 0xd0
    d6c0:	vmov.f64	d0, d7
    d6c4:	mov	r2, r3
    d6c8:	mov	r1, #0
    d6cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    d6d0:	bl	0 <coda_mem_double_new>
    d6d4:	str	r0, [fp, #-24]	; 0xffffffe8
    d6d8:	mov	r3, #0
    d6dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d6e0:	movw	r1, #0
    d6e4:	movt	r1, #0
    d6e8:	ldr	r0, [fp, #-12]
    d6ec:	bl	0 <coda_mem_record_add_field>
    d6f0:	mrc	15, 0, r3, cr13, cr0, {3}
    d6f4:	ldr	r2, [pc, #256]	; d7fc <read_navigation_records+0xde8>
    d6f8:	ldr	r3, [r3, r2]
    d6fc:	ldr	r3, [r3, #384]	; 0x180
    d700:	str	r3, [fp, #-20]	; 0xffffffec
    d704:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d708:	ldr	r3, [r3, #4]
    d70c:	sub	r2, fp, #1360	; 0x550
    d710:	sub	r2, r2, #4
    d714:	vldr	d7, [r2, #216]	; 0xd8
    d718:	vmov.f64	d0, d7
    d71c:	mov	r2, r3
    d720:	mov	r1, #0
    d724:	ldr	r0, [fp, #-20]	; 0xffffffec
    d728:	bl	0 <coda_mem_double_new>
    d72c:	str	r0, [fp, #-24]	; 0xffffffe8
    d730:	mov	r3, #0
    d734:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d738:	movw	r1, #0
    d73c:	movt	r1, #0
    d740:	ldr	r0, [fp, #-12]
    d744:	bl	0 <coda_mem_record_add_field>
    d748:	mrc	15, 0, r3, cr13, cr0, {3}
    d74c:	ldr	r2, [pc, #168]	; d7fc <read_navigation_records+0xde8>
    d750:	ldr	r3, [r3, r2]
    d754:	ldr	r3, [r3, #388]	; 0x184
    d758:	str	r3, [fp, #-20]	; 0xffffffec
    d75c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d760:	ldr	r3, [r3, #4]
    d764:	sub	r2, fp, #1360	; 0x550
    d768:	sub	r2, r2, #4
    d76c:	vldr	d7, [r2, #224]	; 0xe0
    d770:	vmov.f64	d0, d7
    d774:	mov	r2, r3
    d778:	mov	r1, #0
    d77c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d780:	bl	0 <coda_mem_double_new>
    d784:	str	r0, [fp, #-24]	; 0xffffffe8
    d788:	mov	r3, #0
    d78c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d790:	movw	r1, #0
    d794:	movt	r1, #0
    d798:	ldr	r0, [fp, #-12]
    d79c:	bl	0 <coda_mem_record_add_field>
    d7a0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d7a4:	ldr	r3, [r3, #32]
    d7a8:	ldr	r1, [fp, #-12]
    d7ac:	mov	r0, r3
    d7b0:	bl	0 <coda_mem_array_add_element>
    d7b4:	b	ec64 <read_navigation_records+0x2250>
    d7b8:	ldrb	r3, [fp, #-13]
    d7bc:	cmp	r3, #82	; 0x52
    d7c0:	bne	dd40 <read_navigation_records+0x132c>
    d7c4:	sub	r3, fp, #1360	; 0x550
    d7c8:	sub	r3, r3, #4
    d7cc:	sub	r1, fp, #1024	; 0x400
    d7d0:	sub	r1, r1, #4
    d7d4:	mov	r2, #15
    d7d8:	ldr	r0, [fp, #-1368]	; 0xfffffaa8
    d7dc:	bl	c820 <read_navigation_record_values>
    d7e0:	mov	r3, r0
    d7e4:	cmp	r3, #0
    d7e8:	beq	d800 <read_navigation_records+0xdec>
    d7ec:	ldr	r0, [fp, #-12]
    d7f0:	bl	0 <coda_dynamic_type_delete>
    d7f4:	mvn	r3, #0
    d7f8:	b	ecd8 <read_navigation_records+0x22c4>
    d7fc:	.word	0x00000000
    d800:	mrc	15, 0, r3, cr13, cr0, {3}
    d804:	ldr	r2, [pc, #-16]	; d7fc <read_navigation_records+0xde8>
    d808:	ldr	r3, [r3, r2]
    d80c:	ldr	r3, [r3, #276]	; 0x114
    d810:	str	r3, [fp, #-20]	; 0xffffffec
    d814:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d818:	ldr	r3, [r3, #4]
    d81c:	sub	r2, fp, #1360	; 0x550
    d820:	sub	r2, r2, #4
    d824:	vldr	d7, [r2]
    d828:	vmov.f64	d0, d7
    d82c:	mov	r2, r3
    d830:	mov	r1, #0
    d834:	ldr	r0, [fp, #-20]	; 0xffffffec
    d838:	bl	0 <coda_mem_double_new>
    d83c:	str	r0, [fp, #-24]	; 0xffffffe8
    d840:	mov	r3, #0
    d844:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d848:	movw	r1, #0
    d84c:	movt	r1, #0
    d850:	ldr	r0, [fp, #-12]
    d854:	bl	0 <coda_mem_record_add_field>
    d858:	mrc	15, 0, r3, cr13, cr0, {3}
    d85c:	ldr	r2, [pc, #-104]	; d7fc <read_navigation_records+0xde8>
    d860:	ldr	r3, [r3, r2]
    d864:	ldr	r3, [r3, #424]	; 0x1a8
    d868:	str	r3, [fp, #-20]	; 0xffffffec
    d86c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d870:	ldr	r3, [r3, #4]
    d874:	sub	r2, fp, #1360	; 0x550
    d878:	sub	r2, r2, #4
    d87c:	vldr	d7, [r2, #8]
    d880:	vmov.f64	d0, d7
    d884:	mov	r2, r3
    d888:	mov	r1, #0
    d88c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d890:	bl	0 <coda_mem_double_new>
    d894:	str	r0, [fp, #-24]	; 0xffffffe8
    d898:	mov	r3, #0
    d89c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d8a0:	movw	r1, #0
    d8a4:	movt	r1, #0
    d8a8:	ldr	r0, [fp, #-12]
    d8ac:	bl	0 <coda_mem_record_add_field>
    d8b0:	mrc	15, 0, r3, cr13, cr0, {3}
    d8b4:	ldr	r2, [pc, #-192]	; d7fc <read_navigation_records+0xde8>
    d8b8:	ldr	r3, [r3, r2]
    d8bc:	ldr	r3, [r3, #428]	; 0x1ac
    d8c0:	str	r3, [fp, #-20]	; 0xffffffec
    d8c4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d8c8:	ldr	r3, [r3, #4]
    d8cc:	sub	r2, fp, #1360	; 0x550
    d8d0:	sub	r2, r2, #4
    d8d4:	vldr	d7, [r2, #16]
    d8d8:	vmov.f64	d0, d7
    d8dc:	mov	r2, r3
    d8e0:	mov	r1, #0
    d8e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d8e8:	bl	0 <coda_mem_double_new>
    d8ec:	str	r0, [fp, #-24]	; 0xffffffe8
    d8f0:	mov	r3, #0
    d8f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d8f8:	movw	r1, #0
    d8fc:	movt	r1, #0
    d900:	ldr	r0, [fp, #-12]
    d904:	bl	0 <coda_mem_record_add_field>
    d908:	mrc	15, 0, r3, cr13, cr0, {3}
    d90c:	ldr	r2, [pc, #-280]	; d7fc <read_navigation_records+0xde8>
    d910:	ldr	r3, [r3, r2]
    d914:	ldr	r3, [r3, #432]	; 0x1b0
    d918:	str	r3, [fp, #-20]	; 0xffffffec
    d91c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d920:	ldr	r3, [r3, #4]
    d924:	sub	r2, fp, #1360	; 0x550
    d928:	sub	r2, r2, #4
    d92c:	vldr	d7, [r2, #24]
    d930:	vmov.f64	d0, d7
    d934:	mov	r2, r3
    d938:	mov	r1, #0
    d93c:	ldr	r0, [fp, #-20]	; 0xffffffec
    d940:	bl	0 <coda_mem_double_new>
    d944:	str	r0, [fp, #-24]	; 0xffffffe8
    d948:	mov	r3, #0
    d94c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d950:	movw	r1, #0
    d954:	movt	r1, #0
    d958:	ldr	r0, [fp, #-12]
    d95c:	bl	0 <coda_mem_record_add_field>
    d960:	mrc	15, 0, r3, cr13, cr0, {3}
    d964:	ldr	r2, [pc, #-368]	; d7fc <read_navigation_records+0xde8>
    d968:	ldr	r3, [r3, r2]
    d96c:	ldr	r3, [r3, #444]	; 0x1bc
    d970:	str	r3, [fp, #-20]	; 0xffffffec
    d974:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d978:	ldr	r3, [r3, #4]
    d97c:	sub	r2, fp, #1360	; 0x550
    d980:	sub	r2, r2, #4
    d984:	vldr	d7, [r2, #32]
    d988:	vmov.f64	d0, d7
    d98c:	mov	r2, r3
    d990:	mov	r1, #0
    d994:	ldr	r0, [fp, #-20]	; 0xffffffec
    d998:	bl	0 <coda_mem_double_new>
    d99c:	str	r0, [fp, #-24]	; 0xffffffe8
    d9a0:	mov	r3, #0
    d9a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    d9a8:	movw	r1, #0
    d9ac:	movt	r1, #0
    d9b0:	ldr	r0, [fp, #-12]
    d9b4:	bl	0 <coda_mem_record_add_field>
    d9b8:	mrc	15, 0, r3, cr13, cr0, {3}
    d9bc:	ldr	r2, [pc, #-456]	; d7fc <read_navigation_records+0xde8>
    d9c0:	ldr	r3, [r3, r2]
    d9c4:	ldr	r3, [r3, #456]	; 0x1c8
    d9c8:	str	r3, [fp, #-20]	; 0xffffffec
    d9cc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    d9d0:	ldr	r3, [r3, #4]
    d9d4:	sub	r2, fp, #1360	; 0x550
    d9d8:	sub	r2, r2, #4
    d9dc:	vldr	d7, [r2, #40]	; 0x28
    d9e0:	vmov.f64	d0, d7
    d9e4:	mov	r2, r3
    d9e8:	mov	r1, #0
    d9ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    d9f0:	bl	0 <coda_mem_double_new>
    d9f4:	str	r0, [fp, #-24]	; 0xffffffe8
    d9f8:	mov	r3, #0
    d9fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    da00:	movw	r1, #0
    da04:	movt	r1, #0
    da08:	ldr	r0, [fp, #-12]
    da0c:	bl	0 <coda_mem_record_add_field>
    da10:	mrc	15, 0, r3, cr13, cr0, {3}
    da14:	ldr	r2, [pc, #-544]	; d7fc <read_navigation_records+0xde8>
    da18:	ldr	r3, [r3, r2]
    da1c:	ldr	r3, [r3, #468]	; 0x1d4
    da20:	str	r3, [fp, #-20]	; 0xffffffec
    da24:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    da28:	ldr	r3, [r3, #4]
    da2c:	sub	r2, fp, #1360	; 0x550
    da30:	sub	r2, r2, #4
    da34:	vldr	d7, [r2, #48]	; 0x30
    da38:	vmov.f64	d0, d7
    da3c:	mov	r2, r3
    da40:	mov	r1, #0
    da44:	ldr	r0, [fp, #-20]	; 0xffffffec
    da48:	bl	0 <coda_mem_double_new>
    da4c:	str	r0, [fp, #-24]	; 0xffffffe8
    da50:	mov	r3, #0
    da54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    da58:	movw	r1, #0
    da5c:	movt	r1, #0
    da60:	ldr	r0, [fp, #-12]
    da64:	bl	0 <coda_mem_record_add_field>
    da68:	mrc	15, 0, r3, cr13, cr0, {3}
    da6c:	ldr	r2, [pc, #-632]	; d7fc <read_navigation_records+0xde8>
    da70:	ldr	r3, [r3, r2]
    da74:	ldr	r3, [r3, #436]	; 0x1b4
    da78:	str	r3, [fp, #-20]	; 0xffffffec
    da7c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    da80:	ldr	r3, [r3, #4]
    da84:	sub	r2, fp, #1360	; 0x550
    da88:	sub	r2, r2, #4
    da8c:	vldr	d7, [r2, #56]	; 0x38
    da90:	vmov.f64	d0, d7
    da94:	mov	r2, r3
    da98:	mov	r1, #0
    da9c:	ldr	r0, [fp, #-20]	; 0xffffffec
    daa0:	bl	0 <coda_mem_double_new>
    daa4:	str	r0, [fp, #-24]	; 0xffffffe8
    daa8:	mov	r3, #0
    daac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dab0:	movw	r1, #0
    dab4:	movt	r1, #0
    dab8:	ldr	r0, [fp, #-12]
    dabc:	bl	0 <coda_mem_record_add_field>
    dac0:	mrc	15, 0, r3, cr13, cr0, {3}
    dac4:	ldr	r2, [pc, #-720]	; d7fc <read_navigation_records+0xde8>
    dac8:	ldr	r3, [r3, r2]
    dacc:	ldr	r3, [r3, #448]	; 0x1c0
    dad0:	str	r3, [fp, #-20]	; 0xffffffec
    dad4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dad8:	ldr	r3, [r3, #4]
    dadc:	sub	r2, fp, #1360	; 0x550
    dae0:	sub	r2, r2, #4
    dae4:	vldr	d7, [r2, #64]	; 0x40
    dae8:	vmov.f64	d0, d7
    daec:	mov	r2, r3
    daf0:	mov	r1, #0
    daf4:	ldr	r0, [fp, #-20]	; 0xffffffec
    daf8:	bl	0 <coda_mem_double_new>
    dafc:	str	r0, [fp, #-24]	; 0xffffffe8
    db00:	mov	r3, #0
    db04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    db08:	movw	r1, #0
    db0c:	movt	r1, #0
    db10:	ldr	r0, [fp, #-12]
    db14:	bl	0 <coda_mem_record_add_field>
    db18:	mrc	15, 0, r3, cr13, cr0, {3}
    db1c:	ldr	r2, [pc, #-808]	; d7fc <read_navigation_records+0xde8>
    db20:	ldr	r3, [r3, r2]
    db24:	ldr	r3, [r3, #460]	; 0x1cc
    db28:	str	r3, [fp, #-20]	; 0xffffffec
    db2c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    db30:	ldr	r3, [r3, #4]
    db34:	sub	r2, fp, #1360	; 0x550
    db38:	sub	r2, r2, #4
    db3c:	vldr	d7, [r2, #72]	; 0x48
    db40:	vmov.f64	d0, d7
    db44:	mov	r2, r3
    db48:	mov	r1, #0
    db4c:	ldr	r0, [fp, #-20]	; 0xffffffec
    db50:	bl	0 <coda_mem_double_new>
    db54:	str	r0, [fp, #-24]	; 0xffffffe8
    db58:	mov	r3, #0
    db5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    db60:	movw	r1, #0
    db64:	movt	r1, #0
    db68:	ldr	r0, [fp, #-12]
    db6c:	bl	0 <coda_mem_record_add_field>
    db70:	mrc	15, 0, r3, cr13, cr0, {3}
    db74:	ldr	r2, [pc, #-896]	; d7fc <read_navigation_records+0xde8>
    db78:	ldr	r3, [r3, r2]
    db7c:	ldr	r3, [r3, #472]	; 0x1d8
    db80:	str	r3, [fp, #-20]	; 0xffffffec
    db84:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    db88:	ldr	r3, [r3, #4]
    db8c:	sub	r2, fp, #1360	; 0x550
    db90:	sub	r2, r2, #4
    db94:	vldr	d7, [r2, #80]	; 0x50
    db98:	vmov.f64	d0, d7
    db9c:	mov	r2, r3
    dba0:	mov	r1, #0
    dba4:	ldr	r0, [fp, #-20]	; 0xffffffec
    dba8:	bl	0 <coda_mem_double_new>
    dbac:	str	r0, [fp, #-24]	; 0xffffffe8
    dbb0:	mov	r3, #0
    dbb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dbb8:	movw	r1, #0
    dbbc:	movt	r1, #0
    dbc0:	ldr	r0, [fp, #-12]
    dbc4:	bl	0 <coda_mem_record_add_field>
    dbc8:	mrc	15, 0, r3, cr13, cr0, {3}
    dbcc:	ldr	r2, [pc, #-984]	; d7fc <read_navigation_records+0xde8>
    dbd0:	ldr	r3, [r3, r2]
    dbd4:	ldr	r3, [r3, #440]	; 0x1b8
    dbd8:	str	r3, [fp, #-20]	; 0xffffffec
    dbdc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dbe0:	ldr	r3, [r3, #4]
    dbe4:	sub	r2, fp, #1360	; 0x550
    dbe8:	sub	r2, r2, #4
    dbec:	vldr	d7, [r2, #88]	; 0x58
    dbf0:	vmov.f64	d0, d7
    dbf4:	mov	r2, r3
    dbf8:	mov	r1, #0
    dbfc:	ldr	r0, [fp, #-20]	; 0xffffffec
    dc00:	bl	0 <coda_mem_double_new>
    dc04:	str	r0, [fp, #-24]	; 0xffffffe8
    dc08:	mov	r3, #0
    dc0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dc10:	movw	r1, #0
    dc14:	movt	r1, #0
    dc18:	ldr	r0, [fp, #-12]
    dc1c:	bl	0 <coda_mem_record_add_field>
    dc20:	mrc	15, 0, r3, cr13, cr0, {3}
    dc24:	ldr	r2, [pc, #-1072]	; d7fc <read_navigation_records+0xde8>
    dc28:	ldr	r3, [r3, r2]
    dc2c:	ldr	r3, [r3, #452]	; 0x1c4
    dc30:	str	r3, [fp, #-20]	; 0xffffffec
    dc34:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dc38:	ldr	r3, [r3, #4]
    dc3c:	sub	r2, fp, #1360	; 0x550
    dc40:	sub	r2, r2, #4
    dc44:	vldr	d7, [r2, #96]	; 0x60
    dc48:	vmov.f64	d0, d7
    dc4c:	mov	r2, r3
    dc50:	mov	r1, #0
    dc54:	ldr	r0, [fp, #-20]	; 0xffffffec
    dc58:	bl	0 <coda_mem_double_new>
    dc5c:	str	r0, [fp, #-24]	; 0xffffffe8
    dc60:	mov	r3, #0
    dc64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dc68:	movw	r1, #0
    dc6c:	movt	r1, #0
    dc70:	ldr	r0, [fp, #-12]
    dc74:	bl	0 <coda_mem_record_add_field>
    dc78:	mrc	15, 0, r3, cr13, cr0, {3}
    dc7c:	ldr	r2, [pc, #-1160]	; d7fc <read_navigation_records+0xde8>
    dc80:	ldr	r3, [r3, r2]
    dc84:	ldr	r3, [r3, #464]	; 0x1d0
    dc88:	str	r3, [fp, #-20]	; 0xffffffec
    dc8c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dc90:	ldr	r3, [r3, #4]
    dc94:	sub	r2, fp, #1360	; 0x550
    dc98:	sub	r2, r2, #4
    dc9c:	vldr	d7, [r2, #104]	; 0x68
    dca0:	vmov.f64	d0, d7
    dca4:	mov	r2, r3
    dca8:	mov	r1, #0
    dcac:	ldr	r0, [fp, #-20]	; 0xffffffec
    dcb0:	bl	0 <coda_mem_double_new>
    dcb4:	str	r0, [fp, #-24]	; 0xffffffe8
    dcb8:	mov	r3, #0
    dcbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dcc0:	movw	r1, #0
    dcc4:	movt	r1, #0
    dcc8:	ldr	r0, [fp, #-12]
    dccc:	bl	0 <coda_mem_record_add_field>
    dcd0:	mrc	15, 0, r3, cr13, cr0, {3}
    dcd4:	ldr	r2, [pc, #-1248]	; d7fc <read_navigation_records+0xde8>
    dcd8:	ldr	r3, [r3, r2]
    dcdc:	ldr	r3, [r3, #476]	; 0x1dc
    dce0:	str	r3, [fp, #-20]	; 0xffffffec
    dce4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dce8:	ldr	r3, [r3, #4]
    dcec:	sub	r2, fp, #1360	; 0x550
    dcf0:	sub	r2, r2, #4
    dcf4:	vldr	d7, [r2, #112]	; 0x70
    dcf8:	vmov.f64	d0, d7
    dcfc:	mov	r2, r3
    dd00:	mov	r1, #0
    dd04:	ldr	r0, [fp, #-20]	; 0xffffffec
    dd08:	bl	0 <coda_mem_double_new>
    dd0c:	str	r0, [fp, #-24]	; 0xffffffe8
    dd10:	mov	r3, #0
    dd14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dd18:	movw	r1, #0
    dd1c:	movt	r1, #0
    dd20:	ldr	r0, [fp, #-12]
    dd24:	bl	0 <coda_mem_record_add_field>
    dd28:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dd2c:	ldr	r3, [r3, #56]	; 0x38
    dd30:	ldr	r1, [fp, #-12]
    dd34:	mov	r0, r3
    dd38:	bl	0 <coda_mem_array_add_element>
    dd3c:	b	ec64 <read_navigation_records+0x2250>
    dd40:	ldrb	r3, [fp, #-13]
    dd44:	cmp	r3, #69	; 0x45
    dd48:	bne	e6e4 <read_navigation_records+0x1cd0>
    dd4c:	sub	r3, fp, #1360	; 0x550
    dd50:	sub	r3, r3, #4
    dd54:	sub	r1, fp, #1024	; 0x400
    dd58:	sub	r1, r1, #4
    dd5c:	mov	r2, #28
    dd60:	ldr	r0, [fp, #-1368]	; 0xfffffaa8
    dd64:	bl	c820 <read_navigation_record_values>
    dd68:	mov	r3, r0
    dd6c:	cmp	r3, #0
    dd70:	beq	dd84 <read_navigation_records+0x1370>
    dd74:	ldr	r0, [fp, #-12]
    dd78:	bl	0 <coda_dynamic_type_delete>
    dd7c:	mvn	r3, #0
    dd80:	b	ecd8 <read_navigation_records+0x22c4>
    dd84:	mrc	15, 0, r3, cr13, cr0, {3}
    dd88:	ldr	r2, [pc, #-1428]	; d7fc <read_navigation_records+0xde8>
    dd8c:	ldr	r3, [r3, r2]
    dd90:	ldr	r3, [r3, #276]	; 0x114
    dd94:	str	r3, [fp, #-20]	; 0xffffffec
    dd98:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dd9c:	ldr	r3, [r3, #4]
    dda0:	sub	r2, fp, #1360	; 0x550
    dda4:	sub	r2, r2, #4
    dda8:	vldr	d7, [r2]
    ddac:	vmov.f64	d0, d7
    ddb0:	mov	r2, r3
    ddb4:	mov	r1, #0
    ddb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    ddbc:	bl	0 <coda_mem_double_new>
    ddc0:	str	r0, [fp, #-24]	; 0xffffffe8
    ddc4:	mov	r3, #0
    ddc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ddcc:	movw	r1, #0
    ddd0:	movt	r1, #0
    ddd4:	ldr	r0, [fp, #-12]
    ddd8:	bl	0 <coda_mem_record_add_field>
    dddc:	mrc	15, 0, r3, cr13, cr0, {3}
    dde0:	ldr	r2, [pc, #-1516]	; d7fc <read_navigation_records+0xde8>
    dde4:	ldr	r3, [r3, r2]
    dde8:	ldr	r3, [r3, #280]	; 0x118
    ddec:	str	r3, [fp, #-20]	; 0xffffffec
    ddf0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ddf4:	ldr	r3, [r3, #4]
    ddf8:	sub	r2, fp, #1360	; 0x550
    ddfc:	sub	r2, r2, #4
    de00:	vldr	d7, [r2, #8]
    de04:	vmov.f64	d0, d7
    de08:	mov	r2, r3
    de0c:	mov	r1, #0
    de10:	ldr	r0, [fp, #-20]	; 0xffffffec
    de14:	bl	0 <coda_mem_double_new>
    de18:	str	r0, [fp, #-24]	; 0xffffffe8
    de1c:	mov	r3, #0
    de20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    de24:	movw	r1, #0
    de28:	movt	r1, #0
    de2c:	ldr	r0, [fp, #-12]
    de30:	bl	0 <coda_mem_record_add_field>
    de34:	mrc	15, 0, r3, cr13, cr0, {3}
    de38:	ldr	r2, [pc, #-1604]	; d7fc <read_navigation_records+0xde8>
    de3c:	ldr	r3, [r3, r2]
    de40:	ldr	r3, [r3, #284]	; 0x11c
    de44:	str	r3, [fp, #-20]	; 0xffffffec
    de48:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    de4c:	ldr	r3, [r3, #4]
    de50:	sub	r2, fp, #1360	; 0x550
    de54:	sub	r2, r2, #4
    de58:	vldr	d7, [r2, #16]
    de5c:	vmov.f64	d0, d7
    de60:	mov	r2, r3
    de64:	mov	r1, #0
    de68:	ldr	r0, [fp, #-20]	; 0xffffffec
    de6c:	bl	0 <coda_mem_double_new>
    de70:	str	r0, [fp, #-24]	; 0xffffffe8
    de74:	mov	r3, #0
    de78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    de7c:	movw	r1, #0
    de80:	movt	r1, #0
    de84:	ldr	r0, [fp, #-12]
    de88:	bl	0 <coda_mem_record_add_field>
    de8c:	mrc	15, 0, r3, cr13, cr0, {3}
    de90:	ldr	r2, [pc, #-1692]	; d7fc <read_navigation_records+0xde8>
    de94:	ldr	r3, [r3, r2]
    de98:	ldr	r3, [r3, #392]	; 0x188
    de9c:	str	r3, [fp, #-20]	; 0xffffffec
    dea0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dea4:	ldr	r3, [r3, #4]
    dea8:	sub	r2, fp, #1360	; 0x550
    deac:	sub	r2, r2, #4
    deb0:	vldr	d7, [r2, #24]
    deb4:	vmov.f64	d0, d7
    deb8:	mov	r2, r3
    debc:	mov	r1, #0
    dec0:	ldr	r0, [fp, #-20]	; 0xffffffec
    dec4:	bl	0 <coda_mem_double_new>
    dec8:	str	r0, [fp, #-24]	; 0xffffffe8
    decc:	mov	r3, #0
    ded0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ded4:	movw	r1, #0
    ded8:	movt	r1, #0
    dedc:	ldr	r0, [fp, #-12]
    dee0:	bl	0 <coda_mem_record_add_field>
    dee4:	mrc	15, 0, r3, cr13, cr0, {3}
    dee8:	ldr	r2, [pc, #-1780]	; d7fc <read_navigation_records+0xde8>
    deec:	ldr	r3, [r3, r2]
    def0:	ldr	r3, [r3, #292]	; 0x124
    def4:	str	r3, [fp, #-20]	; 0xffffffec
    def8:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    defc:	ldr	r3, [r3, #4]
    df00:	sub	r2, fp, #1360	; 0x550
    df04:	sub	r2, r2, #4
    df08:	vldr	d7, [r2, #32]
    df0c:	vmov.f64	d0, d7
    df10:	mov	r2, r3
    df14:	mov	r1, #0
    df18:	ldr	r0, [fp, #-20]	; 0xffffffec
    df1c:	bl	0 <coda_mem_double_new>
    df20:	str	r0, [fp, #-24]	; 0xffffffe8
    df24:	mov	r3, #0
    df28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    df2c:	movw	r1, #0
    df30:	movt	r1, #0
    df34:	ldr	r0, [fp, #-12]
    df38:	bl	0 <coda_mem_record_add_field>
    df3c:	mrc	15, 0, r3, cr13, cr0, {3}
    df40:	ldr	r2, [pc, #-1868]	; d7fc <read_navigation_records+0xde8>
    df44:	ldr	r3, [r3, r2]
    df48:	ldr	r3, [r3, #296]	; 0x128
    df4c:	str	r3, [fp, #-20]	; 0xffffffec
    df50:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    df54:	ldr	r3, [r3, #4]
    df58:	sub	r2, fp, #1360	; 0x550
    df5c:	sub	r2, r2, #4
    df60:	vldr	d7, [r2, #40]	; 0x28
    df64:	vmov.f64	d0, d7
    df68:	mov	r2, r3
    df6c:	mov	r1, #0
    df70:	ldr	r0, [fp, #-20]	; 0xffffffec
    df74:	bl	0 <coda_mem_double_new>
    df78:	str	r0, [fp, #-24]	; 0xffffffe8
    df7c:	mov	r3, #0
    df80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    df84:	movw	r1, #0
    df88:	movt	r1, #0
    df8c:	ldr	r0, [fp, #-12]
    df90:	bl	0 <coda_mem_record_add_field>
    df94:	mrc	15, 0, r3, cr13, cr0, {3}
    df98:	ldr	r2, [pc, #-1956]	; d7fc <read_navigation_records+0xde8>
    df9c:	ldr	r3, [r3, r2]
    dfa0:	ldr	r3, [r3, #300]	; 0x12c
    dfa4:	str	r3, [fp, #-20]	; 0xffffffec
    dfa8:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    dfac:	ldr	r3, [r3, #4]
    dfb0:	sub	r2, fp, #1360	; 0x550
    dfb4:	sub	r2, r2, #4
    dfb8:	vldr	d7, [r2, #48]	; 0x30
    dfbc:	vmov.f64	d0, d7
    dfc0:	mov	r2, r3
    dfc4:	mov	r1, #0
    dfc8:	ldr	r0, [fp, #-20]	; 0xffffffec
    dfcc:	bl	0 <coda_mem_double_new>
    dfd0:	str	r0, [fp, #-24]	; 0xffffffe8
    dfd4:	mov	r3, #0
    dfd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dfdc:	movw	r1, #0
    dfe0:	movt	r1, #0
    dfe4:	ldr	r0, [fp, #-12]
    dfe8:	bl	0 <coda_mem_record_add_field>
    dfec:	mrc	15, 0, r3, cr13, cr0, {3}
    dff0:	ldr	r2, [pc, #-2044]	; d7fc <read_navigation_records+0xde8>
    dff4:	ldr	r3, [r3, r2]
    dff8:	ldr	r3, [r3, #304]	; 0x130
    dffc:	str	r3, [fp, #-20]	; 0xffffffec
    e000:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e004:	ldr	r3, [r3, #4]
    e008:	sub	r2, fp, #1360	; 0x550
    e00c:	sub	r2, r2, #4
    e010:	vldr	d7, [r2, #56]	; 0x38
    e014:	vmov.f64	d0, d7
    e018:	mov	r2, r3
    e01c:	mov	r1, #0
    e020:	ldr	r0, [fp, #-20]	; 0xffffffec
    e024:	bl	0 <coda_mem_double_new>
    e028:	str	r0, [fp, #-24]	; 0xffffffe8
    e02c:	mov	r3, #0
    e030:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e034:	movw	r1, #0
    e038:	movt	r1, #0
    e03c:	ldr	r0, [fp, #-12]
    e040:	bl	0 <coda_mem_record_add_field>
    e044:	mrc	15, 0, r3, cr13, cr0, {3}
    e048:	ldr	r2, [pc, #-2132]	; d7fc <read_navigation_records+0xde8>
    e04c:	ldr	r3, [r3, r2]
    e050:	ldr	r3, [r3, #308]	; 0x134
    e054:	str	r3, [fp, #-20]	; 0xffffffec
    e058:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e05c:	ldr	r3, [r3, #4]
    e060:	sub	r2, fp, #1360	; 0x550
    e064:	sub	r2, r2, #4
    e068:	vldr	d7, [r2, #64]	; 0x40
    e06c:	vmov.f64	d0, d7
    e070:	mov	r2, r3
    e074:	mov	r1, #0
    e078:	ldr	r0, [fp, #-20]	; 0xffffffec
    e07c:	bl	0 <coda_mem_double_new>
    e080:	str	r0, [fp, #-24]	; 0xffffffe8
    e084:	mov	r3, #0
    e088:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e08c:	movw	r1, #0
    e090:	movt	r1, #0
    e094:	ldr	r0, [fp, #-12]
    e098:	bl	0 <coda_mem_record_add_field>
    e09c:	mrc	15, 0, r3, cr13, cr0, {3}
    e0a0:	ldr	r2, [pc, #-2220]	; d7fc <read_navigation_records+0xde8>
    e0a4:	ldr	r3, [r3, r2]
    e0a8:	ldr	r3, [r3, #312]	; 0x138
    e0ac:	str	r3, [fp, #-20]	; 0xffffffec
    e0b0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e0b4:	ldr	r3, [r3, #4]
    e0b8:	sub	r2, fp, #1360	; 0x550
    e0bc:	sub	r2, r2, #4
    e0c0:	vldr	d7, [r2, #72]	; 0x48
    e0c4:	vmov.f64	d0, d7
    e0c8:	mov	r2, r3
    e0cc:	mov	r1, #0
    e0d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e0d4:	bl	0 <coda_mem_double_new>
    e0d8:	str	r0, [fp, #-24]	; 0xffffffe8
    e0dc:	mov	r3, #0
    e0e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e0e4:	movw	r1, #0
    e0e8:	movt	r1, #0
    e0ec:	ldr	r0, [fp, #-12]
    e0f0:	bl	0 <coda_mem_record_add_field>
    e0f4:	mrc	15, 0, r3, cr13, cr0, {3}
    e0f8:	ldr	r2, [pc, #-2308]	; d7fc <read_navigation_records+0xde8>
    e0fc:	ldr	r3, [r3, r2]
    e100:	ldr	r3, [r3, #316]	; 0x13c
    e104:	str	r3, [fp, #-20]	; 0xffffffec
    e108:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e10c:	ldr	r3, [r3, #4]
    e110:	sub	r2, fp, #1360	; 0x550
    e114:	sub	r2, r2, #4
    e118:	vldr	d7, [r2, #80]	; 0x50
    e11c:	vmov.f64	d0, d7
    e120:	mov	r2, r3
    e124:	mov	r1, #0
    e128:	ldr	r0, [fp, #-20]	; 0xffffffec
    e12c:	bl	0 <coda_mem_double_new>
    e130:	str	r0, [fp, #-24]	; 0xffffffe8
    e134:	mov	r3, #0
    e138:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e13c:	movw	r1, #0
    e140:	movt	r1, #0
    e144:	ldr	r0, [fp, #-12]
    e148:	bl	0 <coda_mem_record_add_field>
    e14c:	mrc	15, 0, r3, cr13, cr0, {3}
    e150:	ldr	r2, [pc, #-2396]	; d7fc <read_navigation_records+0xde8>
    e154:	ldr	r3, [r3, r2]
    e158:	ldr	r3, [r3, #320]	; 0x140
    e15c:	str	r3, [fp, #-20]	; 0xffffffec
    e160:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e164:	ldr	r3, [r3, #4]
    e168:	sub	r2, fp, #1360	; 0x550
    e16c:	sub	r2, r2, #4
    e170:	vldr	d7, [r2, #88]	; 0x58
    e174:	vmov.f64	d0, d7
    e178:	mov	r2, r3
    e17c:	mov	r1, #0
    e180:	ldr	r0, [fp, #-20]	; 0xffffffec
    e184:	bl	0 <coda_mem_double_new>
    e188:	str	r0, [fp, #-24]	; 0xffffffe8
    e18c:	mov	r3, #0
    e190:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e194:	movw	r1, #0
    e198:	movt	r1, #0
    e19c:	ldr	r0, [fp, #-12]
    e1a0:	bl	0 <coda_mem_record_add_field>
    e1a4:	mrc	15, 0, r3, cr13, cr0, {3}
    e1a8:	ldr	r2, [pc, #-2484]	; d7fc <read_navigation_records+0xde8>
    e1ac:	ldr	r3, [r3, r2]
    e1b0:	ldr	r3, [r3, #324]	; 0x144
    e1b4:	str	r3, [fp, #-20]	; 0xffffffec
    e1b8:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e1bc:	ldr	r3, [r3, #4]
    e1c0:	sub	r2, fp, #1360	; 0x550
    e1c4:	sub	r2, r2, #4
    e1c8:	vldr	d7, [r2, #96]	; 0x60
    e1cc:	vmov.f64	d0, d7
    e1d0:	mov	r2, r3
    e1d4:	mov	r1, #0
    e1d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    e1dc:	bl	0 <coda_mem_double_new>
    e1e0:	str	r0, [fp, #-24]	; 0xffffffe8
    e1e4:	mov	r3, #0
    e1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e1ec:	movw	r1, #0
    e1f0:	movt	r1, #0
    e1f4:	ldr	r0, [fp, #-12]
    e1f8:	bl	0 <coda_mem_record_add_field>
    e1fc:	mrc	15, 0, r3, cr13, cr0, {3}
    e200:	ldr	r2, [pc, #-2572]	; d7fc <read_navigation_records+0xde8>
    e204:	ldr	r3, [r3, r2]
    e208:	ldr	r3, [r3, #328]	; 0x148
    e20c:	str	r3, [fp, #-20]	; 0xffffffec
    e210:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e214:	ldr	r3, [r3, #4]
    e218:	sub	r2, fp, #1360	; 0x550
    e21c:	sub	r2, r2, #4
    e220:	vldr	d7, [r2, #104]	; 0x68
    e224:	vmov.f64	d0, d7
    e228:	mov	r2, r3
    e22c:	mov	r1, #0
    e230:	ldr	r0, [fp, #-20]	; 0xffffffec
    e234:	bl	0 <coda_mem_double_new>
    e238:	str	r0, [fp, #-24]	; 0xffffffe8
    e23c:	mov	r3, #0
    e240:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e244:	movw	r1, #0
    e248:	movt	r1, #0
    e24c:	ldr	r0, [fp, #-12]
    e250:	bl	0 <coda_mem_record_add_field>
    e254:	mrc	15, 0, r3, cr13, cr0, {3}
    e258:	ldr	r2, [pc, #-2660]	; d7fc <read_navigation_records+0xde8>
    e25c:	ldr	r3, [r3, r2]
    e260:	ldr	r3, [r3, #332]	; 0x14c
    e264:	str	r3, [fp, #-20]	; 0xffffffec
    e268:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e26c:	ldr	r3, [r3, #4]
    e270:	sub	r2, fp, #1360	; 0x550
    e274:	sub	r2, r2, #4
    e278:	vldr	d7, [r2, #112]	; 0x70
    e27c:	vmov.f64	d0, d7
    e280:	mov	r2, r3
    e284:	mov	r1, #0
    e288:	ldr	r0, [fp, #-20]	; 0xffffffec
    e28c:	bl	0 <coda_mem_double_new>
    e290:	str	r0, [fp, #-24]	; 0xffffffe8
    e294:	mov	r3, #0
    e298:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e29c:	movw	r1, #0
    e2a0:	movt	r1, #0
    e2a4:	ldr	r0, [fp, #-12]
    e2a8:	bl	0 <coda_mem_record_add_field>
    e2ac:	mrc	15, 0, r3, cr13, cr0, {3}
    e2b0:	ldr	r2, [pc, #-2748]	; d7fc <read_navigation_records+0xde8>
    e2b4:	ldr	r3, [r3, r2]
    e2b8:	ldr	r3, [r3, #336]	; 0x150
    e2bc:	str	r3, [fp, #-20]	; 0xffffffec
    e2c0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e2c4:	ldr	r3, [r3, #4]
    e2c8:	sub	r2, fp, #1360	; 0x550
    e2cc:	sub	r2, r2, #4
    e2d0:	vldr	d7, [r2, #120]	; 0x78
    e2d4:	vmov.f64	d0, d7
    e2d8:	mov	r2, r3
    e2dc:	mov	r1, #0
    e2e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e2e4:	bl	0 <coda_mem_double_new>
    e2e8:	str	r0, [fp, #-24]	; 0xffffffe8
    e2ec:	mov	r3, #0
    e2f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e2f4:	movw	r1, #0
    e2f8:	movt	r1, #0
    e2fc:	ldr	r0, [fp, #-12]
    e300:	bl	0 <coda_mem_record_add_field>
    e304:	mrc	15, 0, r3, cr13, cr0, {3}
    e308:	ldr	r2, [pc, #-2836]	; d7fc <read_navigation_records+0xde8>
    e30c:	ldr	r3, [r3, r2]
    e310:	ldr	r3, [r3, #340]	; 0x154
    e314:	str	r3, [fp, #-20]	; 0xffffffec
    e318:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e31c:	ldr	r3, [r3, #4]
    e320:	sub	r2, fp, #1360	; 0x550
    e324:	sub	r2, r2, #4
    e328:	vldr	d7, [r2, #128]	; 0x80
    e32c:	vmov.f64	d0, d7
    e330:	mov	r2, r3
    e334:	mov	r1, #0
    e338:	ldr	r0, [fp, #-20]	; 0xffffffec
    e33c:	bl	0 <coda_mem_double_new>
    e340:	str	r0, [fp, #-24]	; 0xffffffe8
    e344:	mov	r3, #0
    e348:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e34c:	movw	r1, #0
    e350:	movt	r1, #0
    e354:	ldr	r0, [fp, #-12]
    e358:	bl	0 <coda_mem_record_add_field>
    e35c:	mrc	15, 0, r3, cr13, cr0, {3}
    e360:	ldr	r2, [pc, #-2924]	; d7fc <read_navigation_records+0xde8>
    e364:	ldr	r3, [r3, r2]
    e368:	ldr	r3, [r3, #344]	; 0x158
    e36c:	str	r3, [fp, #-20]	; 0xffffffec
    e370:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e374:	ldr	r3, [r3, #4]
    e378:	sub	r2, fp, #1360	; 0x550
    e37c:	sub	r2, r2, #4
    e380:	vldr	d7, [r2, #136]	; 0x88
    e384:	vmov.f64	d0, d7
    e388:	mov	r2, r3
    e38c:	mov	r1, #0
    e390:	ldr	r0, [fp, #-20]	; 0xffffffec
    e394:	bl	0 <coda_mem_double_new>
    e398:	str	r0, [fp, #-24]	; 0xffffffe8
    e39c:	mov	r3, #0
    e3a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e3a4:	movw	r1, #0
    e3a8:	movt	r1, #0
    e3ac:	ldr	r0, [fp, #-12]
    e3b0:	bl	0 <coda_mem_record_add_field>
    e3b4:	mrc	15, 0, r3, cr13, cr0, {3}
    e3b8:	ldr	r2, [pc, #-3012]	; d7fc <read_navigation_records+0xde8>
    e3bc:	ldr	r3, [r3, r2]
    e3c0:	ldr	r3, [r3, #348]	; 0x15c
    e3c4:	str	r3, [fp, #-20]	; 0xffffffec
    e3c8:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e3cc:	ldr	r3, [r3, #4]
    e3d0:	sub	r2, fp, #1360	; 0x550
    e3d4:	sub	r2, r2, #4
    e3d8:	vldr	d7, [r2, #144]	; 0x90
    e3dc:	vmov.f64	d0, d7
    e3e0:	mov	r2, r3
    e3e4:	mov	r1, #0
    e3e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    e3ec:	bl	0 <coda_mem_double_new>
    e3f0:	str	r0, [fp, #-24]	; 0xffffffe8
    e3f4:	mov	r3, #0
    e3f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e3fc:	movw	r1, #0
    e400:	movt	r1, #0
    e404:	ldr	r0, [fp, #-12]
    e408:	bl	0 <coda_mem_record_add_field>
    e40c:	mrc	15, 0, r3, cr13, cr0, {3}
    e410:	ldr	r2, [pc, #-3100]	; d7fc <read_navigation_records+0xde8>
    e414:	ldr	r3, [r3, r2]
    e418:	ldr	r3, [r3, #352]	; 0x160
    e41c:	str	r3, [fp, #-20]	; 0xffffffec
    e420:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e424:	ldr	r3, [r3, #4]
    e428:	sub	r2, fp, #1360	; 0x550
    e42c:	sub	r2, r2, #4
    e430:	vldr	d7, [r2, #152]	; 0x98
    e434:	vmov.f64	d0, d7
    e438:	mov	r2, r3
    e43c:	mov	r1, #0
    e440:	ldr	r0, [fp, #-20]	; 0xffffffec
    e444:	bl	0 <coda_mem_double_new>
    e448:	str	r0, [fp, #-24]	; 0xffffffe8
    e44c:	mov	r3, #0
    e450:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e454:	movw	r1, #0
    e458:	movt	r1, #0
    e45c:	ldr	r0, [fp, #-12]
    e460:	bl	0 <coda_mem_record_add_field>
    e464:	mrc	15, 0, r3, cr13, cr0, {3}
    e468:	ldr	r2, [pc, #-3188]	; d7fc <read_navigation_records+0xde8>
    e46c:	ldr	r3, [r3, r2]
    e470:	ldr	r3, [r3, #396]	; 0x18c
    e474:	str	r3, [fp, #-20]	; 0xffffffec
    e478:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e47c:	ldr	r2, [r3, #4]
    e480:	sub	r3, fp, #1360	; 0x550
    e484:	sub	r3, r3, #4
    e488:	vldr	d7, [r3, #160]	; 0xa0
    e48c:	vcvt.u32.f64	s15, d7
    e490:	vmov	r3, s15
    e494:	mov	r1, #0
    e498:	ldr	r0, [fp, #-20]	; 0xffffffec
    e49c:	bl	0 <coda_mem_uint32_new>
    e4a0:	str	r0, [fp, #-24]	; 0xffffffe8
    e4a4:	mov	r3, #0
    e4a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e4ac:	movw	r1, #0
    e4b0:	movt	r1, #0
    e4b4:	ldr	r0, [fp, #-12]
    e4b8:	bl	0 <coda_mem_record_add_field>
    e4bc:	mrc	15, 0, r3, cr13, cr0, {3}
    e4c0:	ldr	r2, [pc, #-3276]	; d7fc <read_navigation_records+0xde8>
    e4c4:	ldr	r3, [r3, r2]
    e4c8:	ldr	r3, [r3, #400]	; 0x190
    e4cc:	str	r3, [fp, #-20]	; 0xffffffec
    e4d0:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e4d4:	ldr	r3, [r3, #4]
    e4d8:	sub	r2, fp, #1360	; 0x550
    e4dc:	sub	r2, r2, #4
    e4e0:	vldr	d7, [r2, #168]	; 0xa8
    e4e4:	vmov.f64	d0, d7
    e4e8:	mov	r2, r3
    e4ec:	mov	r1, #0
    e4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e4f4:	bl	0 <coda_mem_double_new>
    e4f8:	str	r0, [fp, #-24]	; 0xffffffe8
    e4fc:	mov	r3, #0
    e500:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e504:	movw	r1, #0
    e508:	movt	r1, #0
    e50c:	ldr	r0, [fp, #-12]
    e510:	bl	0 <coda_mem_record_add_field>
    e514:	mrc	15, 0, r3, cr13, cr0, {3}
    e518:	ldr	r2, [pc, #-3364]	; d7fc <read_navigation_records+0xde8>
    e51c:	ldr	r3, [r3, r2]
    e520:	ldr	r3, [r3, #404]	; 0x194
    e524:	str	r3, [fp, #-20]	; 0xffffffec
    e528:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e52c:	ldr	r3, [r3, #4]
    e530:	sub	r2, fp, #1360	; 0x550
    e534:	sub	r2, r2, #4
    e538:	vldr	d7, [r2, #184]	; 0xb8
    e53c:	vmov.f64	d0, d7
    e540:	mov	r2, r3
    e544:	mov	r1, #0
    e548:	ldr	r0, [fp, #-20]	; 0xffffffec
    e54c:	bl	0 <coda_mem_double_new>
    e550:	str	r0, [fp, #-24]	; 0xffffffe8
    e554:	mov	r3, #0
    e558:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e55c:	movw	r1, #0
    e560:	movt	r1, #0
    e564:	ldr	r0, [fp, #-12]
    e568:	bl	0 <coda_mem_record_add_field>
    e56c:	mrc	15, 0, r3, cr13, cr0, {3}
    e570:	ldr	r2, [pc, #-3452]	; d7fc <read_navigation_records+0xde8>
    e574:	ldr	r3, [r3, r2]
    e578:	ldr	r3, [r3, #408]	; 0x198
    e57c:	str	r3, [fp, #-20]	; 0xffffffec
    e580:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e584:	ldr	r2, [r3, #4]
    e588:	sub	r3, fp, #1360	; 0x550
    e58c:	sub	r3, r3, #4
    e590:	vldr	d7, [r3, #192]	; 0xc0
    e594:	vcvt.u32.f64	s15, d7
    e598:	vmov	r3, s15
    e59c:	mov	r1, #0
    e5a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    e5a4:	bl	0 <coda_mem_uint32_new>
    e5a8:	str	r0, [fp, #-24]	; 0xffffffe8
    e5ac:	mov	r3, #0
    e5b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e5b4:	movw	r1, #0
    e5b8:	movt	r1, #0
    e5bc:	ldr	r0, [fp, #-12]
    e5c0:	bl	0 <coda_mem_record_add_field>
    e5c4:	mrc	15, 0, r3, cr13, cr0, {3}
    e5c8:	ldr	r2, [pc, #-3540]	; d7fc <read_navigation_records+0xde8>
    e5cc:	ldr	r3, [r3, r2]
    e5d0:	ldr	r3, [r3, #412]	; 0x19c
    e5d4:	str	r3, [fp, #-20]	; 0xffffffec
    e5d8:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e5dc:	ldr	r3, [r3, #4]
    e5e0:	sub	r2, fp, #1360	; 0x550
    e5e4:	sub	r2, r2, #4
    e5e8:	vldr	d7, [r2, #200]	; 0xc8
    e5ec:	vmov.f64	d0, d7
    e5f0:	mov	r2, r3
    e5f4:	mov	r1, #0
    e5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    e5fc:	bl	0 <coda_mem_double_new>
    e600:	str	r0, [fp, #-24]	; 0xffffffe8
    e604:	mov	r3, #0
    e608:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e60c:	movw	r1, #0
    e610:	movt	r1, #0
    e614:	ldr	r0, [fp, #-12]
    e618:	bl	0 <coda_mem_record_add_field>
    e61c:	mrc	15, 0, r3, cr13, cr0, {3}
    e620:	ldr	r2, [pc, #-3628]	; d7fc <read_navigation_records+0xde8>
    e624:	ldr	r3, [r3, r2]
    e628:	ldr	r3, [r3, #416]	; 0x1a0
    e62c:	str	r3, [fp, #-20]	; 0xffffffec
    e630:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e634:	ldr	r3, [r3, #4]
    e638:	sub	r2, fp, #1360	; 0x550
    e63c:	sub	r2, r2, #4
    e640:	vldr	d7, [r2, #208]	; 0xd0
    e644:	vmov.f64	d0, d7
    e648:	mov	r2, r3
    e64c:	mov	r1, #0
    e650:	ldr	r0, [fp, #-20]	; 0xffffffec
    e654:	bl	0 <coda_mem_double_new>
    e658:	str	r0, [fp, #-24]	; 0xffffffe8
    e65c:	mov	r3, #0
    e660:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e664:	movw	r1, #0
    e668:	movt	r1, #0
    e66c:	ldr	r0, [fp, #-12]
    e670:	bl	0 <coda_mem_record_add_field>
    e674:	mrc	15, 0, r3, cr13, cr0, {3}
    e678:	ldr	r2, [pc, #-3716]	; d7fc <read_navigation_records+0xde8>
    e67c:	ldr	r3, [r3, r2]
    e680:	ldr	r3, [r3, #420]	; 0x1a4
    e684:	str	r3, [fp, #-20]	; 0xffffffec
    e688:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e68c:	ldr	r3, [r3, #4]
    e690:	sub	r2, fp, #1360	; 0x550
    e694:	sub	r2, r2, #4
    e698:	vldr	d7, [r2, #216]	; 0xd8
    e69c:	vmov.f64	d0, d7
    e6a0:	mov	r2, r3
    e6a4:	mov	r1, #0
    e6a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    e6ac:	bl	0 <coda_mem_double_new>
    e6b0:	str	r0, [fp, #-24]	; 0xffffffe8
    e6b4:	mov	r3, #0
    e6b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e6bc:	movw	r1, #0
    e6c0:	movt	r1, #0
    e6c4:	ldr	r0, [fp, #-12]
    e6c8:	bl	0 <coda_mem_record_add_field>
    e6cc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e6d0:	ldr	r3, [r3, #80]	; 0x50
    e6d4:	ldr	r1, [fp, #-12]
    e6d8:	mov	r0, r3
    e6dc:	bl	0 <coda_mem_array_add_element>
    e6e0:	b	ec64 <read_navigation_records+0x2250>
    e6e4:	ldrb	r3, [fp, #-13]
    e6e8:	cmp	r3, #83	; 0x53
    e6ec:	bne	ec64 <read_navigation_records+0x2250>
    e6f0:	sub	r3, fp, #1360	; 0x550
    e6f4:	sub	r3, r3, #4
    e6f8:	sub	r1, fp, #1024	; 0x400
    e6fc:	sub	r1, r1, #4
    e700:	mov	r2, #15
    e704:	ldr	r0, [fp, #-1368]	; 0xfffffaa8
    e708:	bl	c820 <read_navigation_record_values>
    e70c:	mov	r3, r0
    e710:	cmp	r3, #0
    e714:	beq	e728 <read_navigation_records+0x1d14>
    e718:	ldr	r0, [fp, #-12]
    e71c:	bl	0 <coda_dynamic_type_delete>
    e720:	mvn	r3, #0
    e724:	b	ecd8 <read_navigation_records+0x22c4>
    e728:	mrc	15, 0, r3, cr13, cr0, {3}
    e72c:	ldr	r2, [pc, #-3896]	; d7fc <read_navigation_records+0xde8>
    e730:	ldr	r3, [r3, r2]
    e734:	ldr	r3, [r3, #276]	; 0x114
    e738:	str	r3, [fp, #-20]	; 0xffffffec
    e73c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e740:	ldr	r3, [r3, #4]
    e744:	sub	r2, fp, #1360	; 0x550
    e748:	sub	r2, r2, #4
    e74c:	vldr	d7, [r2]
    e750:	vmov.f64	d0, d7
    e754:	mov	r2, r3
    e758:	mov	r1, #0
    e75c:	ldr	r0, [fp, #-20]	; 0xffffffec
    e760:	bl	0 <coda_mem_double_new>
    e764:	str	r0, [fp, #-24]	; 0xffffffe8
    e768:	mov	r3, #0
    e76c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e770:	movw	r1, #0
    e774:	movt	r1, #0
    e778:	ldr	r0, [fp, #-12]
    e77c:	bl	0 <coda_mem_record_add_field>
    e780:	mrc	15, 0, r3, cr13, cr0, {3}
    e784:	ldr	r2, [pc, #-3984]	; d7fc <read_navigation_records+0xde8>
    e788:	ldr	r3, [r3, r2]
    e78c:	ldr	r3, [r3, #424]	; 0x1a8
    e790:	str	r3, [fp, #-20]	; 0xffffffec
    e794:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e798:	ldr	r3, [r3, #4]
    e79c:	sub	r2, fp, #1360	; 0x550
    e7a0:	sub	r2, r2, #4
    e7a4:	vldr	d7, [r2, #8]
    e7a8:	vmov.f64	d0, d7
    e7ac:	mov	r2, r3
    e7b0:	mov	r1, #0
    e7b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    e7b8:	bl	0 <coda_mem_double_new>
    e7bc:	str	r0, [fp, #-24]	; 0xffffffe8
    e7c0:	mov	r3, #0
    e7c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e7c8:	movw	r1, #0
    e7cc:	movt	r1, #0
    e7d0:	ldr	r0, [fp, #-12]
    e7d4:	bl	0 <coda_mem_record_add_field>
    e7d8:	mrc	15, 0, r3, cr13, cr0, {3}
    e7dc:	ldr	r2, [pc, #-4072]	; d7fc <read_navigation_records+0xde8>
    e7e0:	ldr	r3, [r3, r2]
    e7e4:	ldr	r3, [r3, #480]	; 0x1e0
    e7e8:	str	r3, [fp, #-20]	; 0xffffffec
    e7ec:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e7f0:	ldr	r3, [r3, #4]
    e7f4:	sub	r2, fp, #1360	; 0x550
    e7f8:	sub	r2, r2, #4
    e7fc:	vldr	d7, [r2, #16]
    e800:	vmov.f64	d0, d7
    e804:	mov	r2, r3
    e808:	mov	r1, #0
    e80c:	ldr	r0, [fp, #-20]	; 0xffffffec
    e810:	bl	0 <coda_mem_double_new>
    e814:	str	r0, [fp, #-24]	; 0xffffffe8
    e818:	mov	r3, #0
    e81c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e820:	movw	r1, #0
    e824:	movt	r1, #0
    e828:	ldr	r0, [fp, #-12]
    e82c:	bl	0 <coda_mem_record_add_field>
    e830:	mrc	15, 0, r3, cr13, cr0, {3}
    e834:	ldr	r2, [pc, #1200]	; ecec <read_navigation_records+0x22d8>
    e838:	ldr	r3, [r3, r2]
    e83c:	ldr	r3, [r3, #432]	; 0x1b0
    e840:	str	r3, [fp, #-20]	; 0xffffffec
    e844:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e848:	ldr	r3, [r3, #4]
    e84c:	sub	r2, fp, #1360	; 0x550
    e850:	sub	r2, r2, #4
    e854:	vldr	d7, [r2, #24]
    e858:	vmov.f64	d0, d7
    e85c:	mov	r2, r3
    e860:	mov	r1, #0
    e864:	ldr	r0, [fp, #-20]	; 0xffffffec
    e868:	bl	0 <coda_mem_double_new>
    e86c:	str	r0, [fp, #-24]	; 0xffffffe8
    e870:	mov	r3, #0
    e874:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e878:	movw	r1, #0
    e87c:	movt	r1, #0
    e880:	ldr	r0, [fp, #-12]
    e884:	bl	0 <coda_mem_record_add_field>
    e888:	mrc	15, 0, r3, cr13, cr0, {3}
    e88c:	ldr	r2, [pc, #1112]	; ecec <read_navigation_records+0x22d8>
    e890:	ldr	r3, [r3, r2]
    e894:	ldr	r3, [r3, #444]	; 0x1bc
    e898:	str	r3, [fp, #-20]	; 0xffffffec
    e89c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e8a0:	ldr	r3, [r3, #4]
    e8a4:	sub	r2, fp, #1360	; 0x550
    e8a8:	sub	r2, r2, #4
    e8ac:	vldr	d7, [r2, #32]
    e8b0:	vmov.f64	d0, d7
    e8b4:	mov	r2, r3
    e8b8:	mov	r1, #0
    e8bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    e8c0:	bl	0 <coda_mem_double_new>
    e8c4:	str	r0, [fp, #-24]	; 0xffffffe8
    e8c8:	mov	r3, #0
    e8cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e8d0:	movw	r1, #0
    e8d4:	movt	r1, #0
    e8d8:	ldr	r0, [fp, #-12]
    e8dc:	bl	0 <coda_mem_record_add_field>
    e8e0:	mrc	15, 0, r3, cr13, cr0, {3}
    e8e4:	ldr	r2, [pc, #1024]	; ecec <read_navigation_records+0x22d8>
    e8e8:	ldr	r3, [r3, r2]
    e8ec:	ldr	r3, [r3, #456]	; 0x1c8
    e8f0:	str	r3, [fp, #-20]	; 0xffffffec
    e8f4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e8f8:	ldr	r3, [r3, #4]
    e8fc:	sub	r2, fp, #1360	; 0x550
    e900:	sub	r2, r2, #4
    e904:	vldr	d7, [r2, #40]	; 0x28
    e908:	vmov.f64	d0, d7
    e90c:	mov	r2, r3
    e910:	mov	r1, #0
    e914:	ldr	r0, [fp, #-20]	; 0xffffffec
    e918:	bl	0 <coda_mem_double_new>
    e91c:	str	r0, [fp, #-24]	; 0xffffffe8
    e920:	mov	r3, #0
    e924:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e928:	movw	r1, #0
    e92c:	movt	r1, #0
    e930:	ldr	r0, [fp, #-12]
    e934:	bl	0 <coda_mem_record_add_field>
    e938:	mrc	15, 0, r3, cr13, cr0, {3}
    e93c:	ldr	r2, [pc, #936]	; ecec <read_navigation_records+0x22d8>
    e940:	ldr	r3, [r3, r2]
    e944:	ldr	r3, [r3, #468]	; 0x1d4
    e948:	str	r3, [fp, #-20]	; 0xffffffec
    e94c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e950:	ldr	r3, [r3, #4]
    e954:	sub	r2, fp, #1360	; 0x550
    e958:	sub	r2, r2, #4
    e95c:	vldr	d7, [r2, #48]	; 0x30
    e960:	vmov.f64	d0, d7
    e964:	mov	r2, r3
    e968:	mov	r1, #0
    e96c:	ldr	r0, [fp, #-20]	; 0xffffffec
    e970:	bl	0 <coda_mem_double_new>
    e974:	str	r0, [fp, #-24]	; 0xffffffe8
    e978:	mov	r3, #0
    e97c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e980:	movw	r1, #0
    e984:	movt	r1, #0
    e988:	ldr	r0, [fp, #-12]
    e98c:	bl	0 <coda_mem_record_add_field>
    e990:	mrc	15, 0, r3, cr13, cr0, {3}
    e994:	ldr	r2, [pc, #848]	; ecec <read_navigation_records+0x22d8>
    e998:	ldr	r3, [r3, r2]
    e99c:	ldr	r3, [r3, #436]	; 0x1b4
    e9a0:	str	r3, [fp, #-20]	; 0xffffffec
    e9a4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    e9a8:	ldr	r3, [r3, #4]
    e9ac:	sub	r2, fp, #1360	; 0x550
    e9b0:	sub	r2, r2, #4
    e9b4:	vldr	d7, [r2, #56]	; 0x38
    e9b8:	vmov.f64	d0, d7
    e9bc:	mov	r2, r3
    e9c0:	mov	r1, #0
    e9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    e9c8:	bl	0 <coda_mem_double_new>
    e9cc:	str	r0, [fp, #-24]	; 0xffffffe8
    e9d0:	mov	r3, #0
    e9d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    e9d8:	movw	r1, #0
    e9dc:	movt	r1, #0
    e9e0:	ldr	r0, [fp, #-12]
    e9e4:	bl	0 <coda_mem_record_add_field>
    e9e8:	mrc	15, 0, r3, cr13, cr0, {3}
    e9ec:	ldr	r2, [pc, #760]	; ecec <read_navigation_records+0x22d8>
    e9f0:	ldr	r3, [r3, r2]
    e9f4:	ldr	r3, [r3, #448]	; 0x1c0
    e9f8:	str	r3, [fp, #-20]	; 0xffffffec
    e9fc:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ea00:	ldr	r3, [r3, #4]
    ea04:	sub	r2, fp, #1360	; 0x550
    ea08:	sub	r2, r2, #4
    ea0c:	vldr	d7, [r2, #64]	; 0x40
    ea10:	vmov.f64	d0, d7
    ea14:	mov	r2, r3
    ea18:	mov	r1, #0
    ea1c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ea20:	bl	0 <coda_mem_double_new>
    ea24:	str	r0, [fp, #-24]	; 0xffffffe8
    ea28:	mov	r3, #0
    ea2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ea30:	movw	r1, #0
    ea34:	movt	r1, #0
    ea38:	ldr	r0, [fp, #-12]
    ea3c:	bl	0 <coda_mem_record_add_field>
    ea40:	mrc	15, 0, r3, cr13, cr0, {3}
    ea44:	ldr	r2, [pc, #672]	; ecec <read_navigation_records+0x22d8>
    ea48:	ldr	r3, [r3, r2]
    ea4c:	ldr	r3, [r3, #460]	; 0x1cc
    ea50:	str	r3, [fp, #-20]	; 0xffffffec
    ea54:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ea58:	ldr	r3, [r3, #4]
    ea5c:	sub	r2, fp, #1360	; 0x550
    ea60:	sub	r2, r2, #4
    ea64:	vldr	d7, [r2, #72]	; 0x48
    ea68:	vmov.f64	d0, d7
    ea6c:	mov	r2, r3
    ea70:	mov	r1, #0
    ea74:	ldr	r0, [fp, #-20]	; 0xffffffec
    ea78:	bl	0 <coda_mem_double_new>
    ea7c:	str	r0, [fp, #-24]	; 0xffffffe8
    ea80:	mov	r3, #0
    ea84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ea88:	movw	r1, #0
    ea8c:	movt	r1, #0
    ea90:	ldr	r0, [fp, #-12]
    ea94:	bl	0 <coda_mem_record_add_field>
    ea98:	mrc	15, 0, r3, cr13, cr0, {3}
    ea9c:	ldr	r2, [pc, #584]	; ecec <read_navigation_records+0x22d8>
    eaa0:	ldr	r3, [r3, r2]
    eaa4:	ldr	r3, [r3, #484]	; 0x1e4
    eaa8:	str	r3, [fp, #-20]	; 0xffffffec
    eaac:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    eab0:	ldr	r3, [r3, #4]
    eab4:	sub	r2, fp, #1360	; 0x550
    eab8:	sub	r2, r2, #4
    eabc:	vldr	d7, [r2, #80]	; 0x50
    eac0:	vmov.f64	d0, d7
    eac4:	mov	r2, r3
    eac8:	mov	r1, #0
    eacc:	ldr	r0, [fp, #-20]	; 0xffffffec
    ead0:	bl	0 <coda_mem_double_new>
    ead4:	str	r0, [fp, #-24]	; 0xffffffe8
    ead8:	mov	r3, #0
    eadc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    eae0:	movw	r1, #0
    eae4:	movt	r1, #0
    eae8:	ldr	r0, [fp, #-12]
    eaec:	bl	0 <coda_mem_record_add_field>
    eaf0:	mrc	15, 0, r3, cr13, cr0, {3}
    eaf4:	ldr	r2, [pc, #496]	; ecec <read_navigation_records+0x22d8>
    eaf8:	ldr	r3, [r3, r2]
    eafc:	ldr	r3, [r3, #440]	; 0x1b8
    eb00:	str	r3, [fp, #-20]	; 0xffffffec
    eb04:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    eb08:	ldr	r3, [r3, #4]
    eb0c:	sub	r2, fp, #1360	; 0x550
    eb10:	sub	r2, r2, #4
    eb14:	vldr	d7, [r2, #88]	; 0x58
    eb18:	vmov.f64	d0, d7
    eb1c:	mov	r2, r3
    eb20:	mov	r1, #0
    eb24:	ldr	r0, [fp, #-20]	; 0xffffffec
    eb28:	bl	0 <coda_mem_double_new>
    eb2c:	str	r0, [fp, #-24]	; 0xffffffe8
    eb30:	mov	r3, #0
    eb34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    eb38:	movw	r1, #0
    eb3c:	movt	r1, #0
    eb40:	ldr	r0, [fp, #-12]
    eb44:	bl	0 <coda_mem_record_add_field>
    eb48:	mrc	15, 0, r3, cr13, cr0, {3}
    eb4c:	ldr	r2, [pc, #408]	; ecec <read_navigation_records+0x22d8>
    eb50:	ldr	r3, [r3, r2]
    eb54:	ldr	r3, [r3, #452]	; 0x1c4
    eb58:	str	r3, [fp, #-20]	; 0xffffffec
    eb5c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    eb60:	ldr	r3, [r3, #4]
    eb64:	sub	r2, fp, #1360	; 0x550
    eb68:	sub	r2, r2, #4
    eb6c:	vldr	d7, [r2, #96]	; 0x60
    eb70:	vmov.f64	d0, d7
    eb74:	mov	r2, r3
    eb78:	mov	r1, #0
    eb7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    eb80:	bl	0 <coda_mem_double_new>
    eb84:	str	r0, [fp, #-24]	; 0xffffffe8
    eb88:	mov	r3, #0
    eb8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    eb90:	movw	r1, #0
    eb94:	movt	r1, #0
    eb98:	ldr	r0, [fp, #-12]
    eb9c:	bl	0 <coda_mem_record_add_field>
    eba0:	mrc	15, 0, r3, cr13, cr0, {3}
    eba4:	ldr	r2, [pc, #320]	; ecec <read_navigation_records+0x22d8>
    eba8:	ldr	r3, [r3, r2]
    ebac:	ldr	r3, [r3, #464]	; 0x1d0
    ebb0:	str	r3, [fp, #-20]	; 0xffffffec
    ebb4:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ebb8:	ldr	r3, [r3, #4]
    ebbc:	sub	r2, fp, #1360	; 0x550
    ebc0:	sub	r2, r2, #4
    ebc4:	vldr	d7, [r2, #104]	; 0x68
    ebc8:	vmov.f64	d0, d7
    ebcc:	mov	r2, r3
    ebd0:	mov	r1, #0
    ebd4:	ldr	r0, [fp, #-20]	; 0xffffffec
    ebd8:	bl	0 <coda_mem_double_new>
    ebdc:	str	r0, [fp, #-24]	; 0xffffffe8
    ebe0:	mov	r3, #0
    ebe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ebe8:	movw	r1, #0
    ebec:	movt	r1, #0
    ebf0:	ldr	r0, [fp, #-12]
    ebf4:	bl	0 <coda_mem_record_add_field>
    ebf8:	mrc	15, 0, r3, cr13, cr0, {3}
    ebfc:	ldr	r2, [pc, #232]	; ecec <read_navigation_records+0x22d8>
    ec00:	ldr	r3, [r3, r2]
    ec04:	ldr	r3, [r3, #488]	; 0x1e8
    ec08:	str	r3, [fp, #-20]	; 0xffffffec
    ec0c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec10:	ldr	r3, [r3, #4]
    ec14:	sub	r2, fp, #1360	; 0x550
    ec18:	sub	r2, r2, #4
    ec1c:	vldr	d7, [r2, #112]	; 0x70
    ec20:	vmov.f64	d0, d7
    ec24:	mov	r2, r3
    ec28:	mov	r1, #0
    ec2c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ec30:	bl	0 <coda_mem_double_new>
    ec34:	str	r0, [fp, #-24]	; 0xffffffe8
    ec38:	mov	r3, #0
    ec3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ec40:	movw	r1, #0
    ec44:	movt	r1, #0
    ec48:	ldr	r0, [fp, #-12]
    ec4c:	bl	0 <coda_mem_record_add_field>
    ec50:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec54:	ldr	r3, [r3, #104]	; 0x68
    ec58:	ldr	r1, [fp, #-12]
    ec5c:	mov	r0, r3
    ec60:	bl	0 <coda_mem_array_add_element>
    ec64:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec68:	ldr	r3, [r3]
    ec6c:	mov	r0, r3
    ec70:	bl	0 <ftell>
    ec74:	mov	r2, r0
    ec78:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec7c:	str	r2, [r3, #128]	; 0x80
    ec80:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec84:	ldr	r3, [r3, #124]	; 0x7c
    ec88:	add	r2, r3, #1
    ec8c:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec90:	str	r2, [r3, #124]	; 0x7c
    ec94:	ldr	r3, [fp, #-1368]	; 0xfffffaa8
    ec98:	ldr	r3, [r3]
    ec9c:	sub	r2, fp, #1024	; 0x400
    eca0:	sub	r2, r2, #4
    eca4:	mov	r1, r2
    eca8:	mov	r0, r3
    ecac:	bl	873c <get_line>
    ecb0:	str	r0, [fp, #-8]
    ecb4:	ldr	r3, [fp, #-8]
    ecb8:	cmp	r3, #0
    ecbc:	bge	ecc8 <read_navigation_records+0x22b4>
    ecc0:	mvn	r3, #0
    ecc4:	b	ecd8 <read_navigation_records+0x22c4>
    ecc8:	ldr	r3, [fp, #-8]
    eccc:	cmp	r3, #0
    ecd0:	bgt	ca8c <read_navigation_records+0x78>
    ecd4:	mov	r3, #0
    ecd8:	mov	r0, r3
    ecdc:	sub	sp, fp, #4
    ece0:	ldr	fp, [sp]
    ece4:	add	sp, sp, #4
    ece8:	pop	{pc}		; (ldr pc, [sp], #4)
    ecec:	.word	0x00000000

0000ecf0 <read_clock_header>:
    ecf0:	str	fp, [sp, #-8]!
    ecf4:	str	lr, [sp, #4]
    ecf8:	add	fp, sp, #4
    ecfc:	sub	sp, sp, #1104	; 0x450
    ed00:	str	r0, [fp, #-1096]	; 0xfffffbb8
    ed04:	mrc	15, 0, r3, cr13, cr0, {3}
    ed08:	ldr	r2, [pc, #2076]	; f52c <read_clock_header+0x83c>
    ed0c:	ldr	r3, [r3, r2]
    ed10:	add	r3, r3, #128	; 0x80
    ed14:	ldr	r3, [r3]
    ed18:	mov	r1, #0
    ed1c:	mov	r0, r3
    ed20:	bl	0 <coda_mem_array_new>
    ed24:	mov	r2, r0
    ed28:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ed2c:	str	r2, [r3, #140]	; 0x8c
    ed30:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ed34:	ldr	r3, [r3]
    ed38:	mov	r0, r3
    ed3c:	bl	0 <ftell>
    ed40:	mov	r2, r0
    ed44:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ed48:	str	r2, [r3, #128]	; 0x80
    ed4c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ed50:	ldr	r3, [r3, #124]	; 0x7c
    ed54:	add	r2, r3, #1
    ed58:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ed5c:	str	r2, [r3, #124]	; 0x7c
    ed60:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ed64:	ldr	r3, [r3]
    ed68:	sub	r2, fp, #1020	; 0x3fc
    ed6c:	mov	r1, r2
    ed70:	mov	r0, r3
    ed74:	bl	873c <get_line>
    ed78:	str	r0, [fp, #-8]
    ed7c:	ldr	r3, [fp, #-8]
    ed80:	cmp	r3, #0
    ed84:	bge	f4a4 <read_clock_header+0x7b4>
    ed88:	mvn	r3, #0
    ed8c:	b	f518 <read_clock_header+0x828>
    ed90:	ldr	r3, [fp, #-8]
    ed94:	cmp	r3, #60	; 0x3c
    ed98:	bgt	edd0 <read_clock_header+0xe0>
    ed9c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    eda0:	ldr	r2, [r3, #124]	; 0x7c
    eda4:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    eda8:	ldr	r3, [r3, #128]	; 0x80
    edac:	str	r3, [sp]
    edb0:	mov	r3, r2
    edb4:	ldr	r2, [fp, #-8]
    edb8:	movw	r1, #0
    edbc:	movt	r1, #0
    edc0:	mvn	r0, #21
    edc4:	bl	0 <coda_set_error>
    edc8:	mvn	r3, #0
    edcc:	b	f518 <read_clock_header+0x828>
    edd0:	sub	r3, fp, #1020	; 0x3fc
    edd4:	add	r3, r3, #60	; 0x3c
    edd8:	mov	r2, #19
    eddc:	movw	r1, #0
    ede0:	movt	r1, #0
    ede4:	mov	r0, r3
    ede8:	bl	0 <strncmp>
    edec:	mov	r3, r0
    edf0:	cmp	r3, #0
    edf4:	bne	f008 <read_clock_header+0x318>
    edf8:	sub	r1, fp, #1020	; 0x3fc
    edfc:	sub	r3, fp, #1088	; 0x440
    ee00:	sub	r3, r3, #4
    ee04:	mov	r2, #20
    ee08:	mov	r0, r3
    ee0c:	bl	0 <memcpy>
    ee10:	mov	r3, #0
    ee14:	strb	r3, [fp, #-1072]	; 0xfffffbd0
    ee18:	sub	r3, fp, #1088	; 0x440
    ee1c:	sub	r3, r3, #4
    ee20:	mov	r0, r3
    ee24:	bl	86b4 <rtrim>
    ee28:	mrc	15, 0, r3, cr13, cr0, {3}
    ee2c:	ldr	r2, [pc, #1784]	; f52c <read_clock_header+0x83c>
    ee30:	ldr	r3, [r3, r2]
    ee34:	ldr	r3, [r3, #12]
    ee38:	str	r3, [fp, #-12]
    ee3c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ee40:	ldr	r2, [r3, #4]
    ee44:	sub	r3, fp, #1088	; 0x440
    ee48:	sub	r3, r3, #4
    ee4c:	mov	r1, #0
    ee50:	ldr	r0, [fp, #-12]
    ee54:	bl	0 <coda_mem_string_new>
    ee58:	str	r0, [fp, #-16]
    ee5c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ee60:	ldr	r0, [r3, #8]
    ee64:	mov	r3, #0
    ee68:	ldr	r2, [fp, #-16]
    ee6c:	movw	r1, #0
    ee70:	movt	r1, #0
    ee74:	bl	0 <coda_mem_record_add_field>
    ee78:	sub	r3, fp, #1020	; 0x3fc
    ee7c:	add	r1, r3, #20
    ee80:	sub	r3, fp, #1088	; 0x440
    ee84:	sub	r3, r3, #4
    ee88:	mov	r2, #20
    ee8c:	mov	r0, r3
    ee90:	bl	0 <memcpy>
    ee94:	sub	r3, fp, #1088	; 0x440
    ee98:	sub	r3, r3, #4
    ee9c:	mov	r0, r3
    eea0:	bl	86b4 <rtrim>
    eea4:	mrc	15, 0, r3, cr13, cr0, {3}
    eea8:	ldr	r2, [pc, #1660]	; f52c <read_clock_header+0x83c>
    eeac:	ldr	r3, [r3, r2]
    eeb0:	ldr	r3, [r3, #16]
    eeb4:	str	r3, [fp, #-12]
    eeb8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    eebc:	ldr	r2, [r3, #4]
    eec0:	sub	r3, fp, #1088	; 0x440
    eec4:	sub	r3, r3, #4
    eec8:	mov	r1, #0
    eecc:	ldr	r0, [fp, #-12]
    eed0:	bl	0 <coda_mem_string_new>
    eed4:	str	r0, [fp, #-16]
    eed8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    eedc:	ldr	r0, [r3, #8]
    eee0:	mov	r3, #0
    eee4:	ldr	r2, [fp, #-16]
    eee8:	movw	r1, #0
    eeec:	movt	r1, #0
    eef0:	bl	0 <coda_mem_record_add_field>
    eef4:	sub	r3, fp, #1020	; 0x3fc
    eef8:	add	r1, r3, #40	; 0x28
    eefc:	sub	r3, fp, #1088	; 0x440
    ef00:	sub	r3, r3, #4
    ef04:	mov	r2, #15
    ef08:	mov	r0, r3
    ef0c:	bl	0 <memcpy>
    ef10:	mov	r3, #0
    ef14:	strb	r3, [fp, #-1077]	; 0xfffffbcb
    ef18:	mrc	15, 0, r3, cr13, cr0, {3}
    ef1c:	ldr	r2, [pc, #1544]	; f52c <read_clock_header+0x83c>
    ef20:	ldr	r3, [r3, r2]
    ef24:	ldr	r3, [r3, #24]
    ef28:	str	r3, [fp, #-12]
    ef2c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ef30:	ldr	r2, [r3, #4]
    ef34:	sub	r3, fp, #1088	; 0x440
    ef38:	sub	r3, r3, #4
    ef3c:	mov	r1, #0
    ef40:	ldr	r0, [fp, #-12]
    ef44:	bl	0 <coda_mem_string_new>
    ef48:	str	r0, [fp, #-20]	; 0xffffffec
    ef4c:	mrc	15, 0, r3, cr13, cr0, {3}
    ef50:	ldr	r2, [pc, #1492]	; f52c <read_clock_header+0x83c>
    ef54:	ldr	r3, [r3, r2]
    ef58:	ldr	r3, [r3, #20]
    ef5c:	str	r3, [fp, #-12]
    ef60:	ldr	r2, [fp, #-20]	; 0xffffffec
    ef64:	mov	r1, #0
    ef68:	ldr	r0, [fp, #-12]
    ef6c:	bl	0 <coda_mem_time_new>
    ef70:	str	r0, [fp, #-16]
    ef74:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    ef78:	ldr	r0, [r3, #8]
    ef7c:	mov	r3, #0
    ef80:	ldr	r2, [fp, #-16]
    ef84:	movw	r1, #0
    ef88:	movt	r1, #0
    ef8c:	bl	0 <coda_mem_record_add_field>
    ef90:	sub	r3, fp, #1020	; 0x3fc
    ef94:	add	r1, r3, #56	; 0x38
    ef98:	sub	r3, fp, #1088	; 0x440
    ef9c:	sub	r3, r3, #4
    efa0:	mov	r2, #3
    efa4:	mov	r0, r3
    efa8:	bl	0 <memcpy>
    efac:	mov	r3, #0
    efb0:	strb	r3, [fp, #-1089]	; 0xfffffbbf
    efb4:	mrc	15, 0, r3, cr13, cr0, {3}
    efb8:	ldr	r2, [pc, #1388]	; f52c <read_clock_header+0x83c>
    efbc:	ldr	r3, [r3, r2]
    efc0:	ldr	r3, [r3, #28]
    efc4:	str	r3, [fp, #-12]
    efc8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    efcc:	ldr	r2, [r3, #4]
    efd0:	sub	r3, fp, #1088	; 0x440
    efd4:	sub	r3, r3, #4
    efd8:	mov	r1, #0
    efdc:	ldr	r0, [fp, #-12]
    efe0:	bl	0 <coda_mem_string_new>
    efe4:	str	r0, [fp, #-16]
    efe8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    efec:	ldr	r0, [r3, #8]
    eff0:	mov	r3, #0
    eff4:	ldr	r2, [fp, #-16]
    eff8:	movw	r1, #0
    effc:	movt	r1, #0
    f000:	bl	0 <coda_mem_record_add_field>
    f004:	b	f444 <read_clock_header+0x754>
    f008:	sub	r3, fp, #1020	; 0x3fc
    f00c:	add	r3, r3, #60	; 0x3c
    f010:	mov	r2, #7
    f014:	movw	r1, #0
    f018:	movt	r1, #0
    f01c:	mov	r0, r3
    f020:	bl	0 <strncmp>
    f024:	mov	r3, r0
    f028:	cmp	r3, #0
    f02c:	beq	f444 <read_clock_header+0x754>
    f030:	sub	r3, fp, #1020	; 0x3fc
    f034:	add	r3, r3, #60	; 0x3c
    f038:	mov	r2, #19
    f03c:	movw	r1, #0
    f040:	movt	r1, #0
    f044:	mov	r0, r3
    f048:	bl	0 <strncmp>
    f04c:	mov	r3, r0
    f050:	cmp	r3, #0
    f054:	bne	f07c <read_clock_header+0x38c>
    f058:	sub	r3, fp, #1020	; 0x3fc
    f05c:	mov	r1, r3
    f060:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
    f064:	bl	8cdc <handle_observation_definition>
    f068:	mov	r3, r0
    f06c:	cmp	r3, #0
    f070:	beq	f444 <read_clock_header+0x754>
    f074:	mvn	r3, #0
    f078:	b	f518 <read_clock_header+0x828>
    f07c:	sub	r3, fp, #1020	; 0x3fc
    f080:	add	r3, r3, #60	; 0x3c
    f084:	mov	r2, #14
    f088:	movw	r1, #0
    f08c:	movt	r1, #0
    f090:	mov	r0, r3
    f094:	bl	0 <strncmp>
    f098:	mov	r3, r0
    f09c:	cmp	r3, #0
    f0a0:	bne	f12c <read_clock_header+0x43c>
    f0a4:	sub	r3, fp, #1020	; 0x3fc
    f0a8:	add	r1, r3, #3
    f0ac:	sub	r3, fp, #1088	; 0x440
    f0b0:	sub	r3, r3, #4
    f0b4:	mov	r2, #3
    f0b8:	mov	r0, r3
    f0bc:	bl	0 <memcpy>
    f0c0:	mov	r3, #0
    f0c4:	strb	r3, [fp, #-1089]	; 0xfffffbbf
    f0c8:	sub	r3, fp, #1088	; 0x440
    f0cc:	sub	r3, r3, #4
    f0d0:	mov	r0, r3
    f0d4:	bl	86b4 <rtrim>
    f0d8:	mrc	15, 0, r3, cr13, cr0, {3}
    f0dc:	ldr	r2, [pc, #1096]	; f52c <read_clock_header+0x83c>
    f0e0:	ldr	r3, [r3, r2]
    f0e4:	ldr	r3, [r3, #172]	; 0xac
    f0e8:	str	r3, [fp, #-12]
    f0ec:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f0f0:	ldr	r2, [r3, #4]
    f0f4:	sub	r3, fp, #1088	; 0x440
    f0f8:	sub	r3, r3, #4
    f0fc:	mov	r1, #0
    f100:	ldr	r0, [fp, #-12]
    f104:	bl	0 <coda_mem_string_new>
    f108:	str	r0, [fp, #-16]
    f10c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f110:	ldr	r0, [r3, #8]
    f114:	mov	r3, #0
    f118:	ldr	r2, [fp, #-16]
    f11c:	movw	r1, #0
    f120:	movt	r1, #0
    f124:	bl	0 <coda_mem_record_add_field>
    f128:	b	f444 <read_clock_header+0x754>
    f12c:	sub	r3, fp, #1020	; 0x3fc
    f130:	add	r3, r3, #60	; 0x3c
    f134:	mov	r2, #12
    f138:	movw	r1, #0
    f13c:	movt	r1, #0
    f140:	mov	r0, r3
    f144:	bl	0 <strncmp>
    f148:	mov	r3, r0
    f14c:	cmp	r3, #0
    f150:	bne	f200 <read_clock_header+0x510>
    f154:	sub	r2, fp, #1024	; 0x400
    f158:	sub	r2, r2, #4
    f15c:	sub	r0, fp, #1020	; 0x3fc
    f160:	mov	r3, #0
    f164:	mov	r1, #6
    f168:	bl	0 <coda_ascii_parse_int64>
    f16c:	mov	r3, r0
    f170:	cmp	r3, #0
    f174:	bge	f1a0 <read_clock_header+0x4b0>
    f178:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f17c:	ldr	r1, [r3, #124]	; 0x7c
    f180:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f184:	ldr	r3, [r3, #128]	; 0x80
    f188:	mov	r2, r3
    f18c:	movw	r0, #0
    f190:	movt	r0, #0
    f194:	bl	0 <coda_add_error_message>
    f198:	mvn	r3, #0
    f19c:	b	f518 <read_clock_header+0x828>
    f1a0:	mrc	15, 0, r3, cr13, cr0, {3}
    f1a4:	ldr	r2, [pc, #896]	; f52c <read_clock_header+0x83c>
    f1a8:	ldr	r3, [r3, r2]
    f1ac:	ldr	r3, [r3, #164]	; 0xa4
    f1b0:	str	r3, [fp, #-12]
    f1b4:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f1b8:	ldr	r1, [r3, #4]
    f1bc:	sub	r3, fp, #1024	; 0x400
    f1c0:	sub	r3, r3, #4
    f1c4:	ldrd	r2, [r3]
    f1c8:	mov	r3, r2
    f1cc:	mov	r2, r1
    f1d0:	mov	r1, #0
    f1d4:	ldr	r0, [fp, #-12]
    f1d8:	bl	0 <coda_mem_int32_new>
    f1dc:	str	r0, [fp, #-16]
    f1e0:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f1e4:	ldr	r0, [r3, #8]
    f1e8:	mov	r3, #0
    f1ec:	ldr	r2, [fp, #-16]
    f1f0:	movw	r1, #0
    f1f4:	movt	r1, #0
    f1f8:	bl	0 <coda_mem_record_add_field>
    f1fc:	b	f444 <read_clock_header+0x754>
    f200:	sub	r3, fp, #1020	; 0x3fc
    f204:	add	r3, r3, #60	; 0x3c
    f208:	mov	r2, #18
    f20c:	movw	r1, #0
    f210:	movt	r1, #0
    f214:	mov	r0, r3
    f218:	bl	0 <strncmp>
    f21c:	mov	r3, r0
    f220:	cmp	r3, #0
    f224:	beq	f444 <read_clock_header+0x754>
    f228:	sub	r3, fp, #1020	; 0x3fc
    f22c:	add	r3, r3, #60	; 0x3c
    f230:	mov	r2, #18
    f234:	movw	r1, #0
    f238:	movt	r1, #0
    f23c:	mov	r0, r3
    f240:	bl	0 <strncmp>
    f244:	mov	r3, r0
    f248:	cmp	r3, #0
    f24c:	beq	f444 <read_clock_header+0x754>
    f250:	sub	r3, fp, #1020	; 0x3fc
    f254:	add	r3, r3, #60	; 0x3c
    f258:	mov	r2, #17
    f25c:	movw	r1, #0
    f260:	movt	r1, #0
    f264:	mov	r0, r3
    f268:	bl	0 <strncmp>
    f26c:	mov	r3, r0
    f270:	cmp	r3, #0
    f274:	beq	f444 <read_clock_header+0x754>
    f278:	sub	r3, fp, #1020	; 0x3fc
    f27c:	add	r3, r3, #60	; 0x3c
    f280:	mov	r2, #18
    f284:	movw	r1, #0
    f288:	movt	r1, #0
    f28c:	mov	r0, r3
    f290:	bl	0 <strncmp>
    f294:	mov	r3, r0
    f298:	cmp	r3, #0
    f29c:	beq	f444 <read_clock_header+0x754>
    f2a0:	sub	r3, fp, #1020	; 0x3fc
    f2a4:	add	r3, r3, #60	; 0x3c
    f2a8:	mov	r2, #15
    f2ac:	movw	r1, #0
    f2b0:	movt	r1, #0
    f2b4:	mov	r0, r3
    f2b8:	bl	0 <strncmp>
    f2bc:	mov	r3, r0
    f2c0:	cmp	r3, #0
    f2c4:	beq	f444 <read_clock_header+0x754>
    f2c8:	sub	r3, fp, #1020	; 0x3fc
    f2cc:	add	r3, r3, #60	; 0x3c
    f2d0:	mov	r2, #15
    f2d4:	movw	r1, #0
    f2d8:	movt	r1, #0
    f2dc:	mov	r0, r3
    f2e0:	bl	0 <strncmp>
    f2e4:	mov	r3, r0
    f2e8:	cmp	r3, #0
    f2ec:	beq	f444 <read_clock_header+0x754>
    f2f0:	sub	r3, fp, #1020	; 0x3fc
    f2f4:	add	r3, r3, #60	; 0x3c
    f2f8:	mov	r2, #12
    f2fc:	movw	r1, #0
    f300:	movt	r1, #0
    f304:	mov	r0, r3
    f308:	bl	0 <strncmp>
    f30c:	mov	r3, r0
    f310:	cmp	r3, #0
    f314:	beq	f444 <read_clock_header+0x754>
    f318:	sub	r3, fp, #1020	; 0x3fc
    f31c:	add	r3, r3, #60	; 0x3c
    f320:	mov	r2, #16
    f324:	movw	r1, #0
    f328:	movt	r1, #0
    f32c:	mov	r0, r3
    f330:	bl	0 <strncmp>
    f334:	mov	r3, r0
    f338:	cmp	r3, #0
    f33c:	beq	f444 <read_clock_header+0x754>
    f340:	sub	r3, fp, #1020	; 0x3fc
    f344:	add	r3, r3, #60	; 0x3c
    f348:	mov	r2, #19
    f34c:	movw	r1, #0
    f350:	movt	r1, #0
    f354:	mov	r0, r3
    f358:	bl	0 <strncmp>
    f35c:	mov	r3, r0
    f360:	cmp	r3, #0
    f364:	beq	f444 <read_clock_header+0x754>
    f368:	sub	r3, fp, #1020	; 0x3fc
    f36c:	add	r3, r3, #60	; 0x3c
    f370:	mov	r2, #19
    f374:	movw	r1, #0
    f378:	movt	r1, #0
    f37c:	mov	r0, r3
    f380:	bl	0 <strncmp>
    f384:	mov	r3, r0
    f388:	cmp	r3, #0
    f38c:	beq	f444 <read_clock_header+0x754>
    f390:	sub	r3, fp, #1020	; 0x3fc
    f394:	add	r3, r3, #60	; 0x3c
    f398:	mov	r2, #14
    f39c:	movw	r1, #0
    f3a0:	movt	r1, #0
    f3a4:	mov	r0, r3
    f3a8:	bl	0 <strncmp>
    f3ac:	mov	r3, r0
    f3b0:	cmp	r3, #0
    f3b4:	beq	f444 <read_clock_header+0x754>
    f3b8:	sub	r3, fp, #1020	; 0x3fc
    f3bc:	add	r3, r3, #60	; 0x3c
    f3c0:	mov	r2, #8
    f3c4:	movw	r1, #0
    f3c8:	movt	r1, #0
    f3cc:	mov	r0, r3
    f3d0:	bl	0 <strncmp>
    f3d4:	mov	r3, r0
    f3d8:	cmp	r3, #0
    f3dc:	beq	f444 <read_clock_header+0x754>
    f3e0:	sub	r3, fp, #1020	; 0x3fc
    f3e4:	add	r3, r3, #60	; 0x3c
    f3e8:	mov	r2, #13
    f3ec:	movw	r1, #0
    f3f0:	movt	r1, #0
    f3f4:	mov	r0, r3
    f3f8:	bl	0 <strncmp>
    f3fc:	mov	r3, r0
    f400:	cmp	r3, #0
    f404:	beq	f4b4 <read_clock_header+0x7c4>
    f408:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f40c:	ldr	r1, [r3, #124]	; 0x7c
    f410:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f414:	ldr	r3, [r3, #128]	; 0x80
    f418:	add	r3, r3, #60	; 0x3c
    f41c:	sub	r2, fp, #1020	; 0x3fc
    f420:	add	r2, r2, #60	; 0x3c
    f424:	str	r3, [sp]
    f428:	mov	r3, r1
    f42c:	movw	r1, #0
    f430:	movt	r1, #0
    f434:	mvn	r0, #21
    f438:	bl	0 <coda_set_error>
    f43c:	mvn	r3, #0
    f440:	b	f518 <read_clock_header+0x828>
    f444:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f448:	ldr	r3, [r3]
    f44c:	mov	r0, r3
    f450:	bl	0 <ftell>
    f454:	mov	r2, r0
    f458:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f45c:	str	r2, [r3, #128]	; 0x80
    f460:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f464:	ldr	r3, [r3, #124]	; 0x7c
    f468:	add	r2, r3, #1
    f46c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f470:	str	r2, [r3, #124]	; 0x7c
    f474:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f478:	ldr	r3, [r3]
    f47c:	sub	r2, fp, #1020	; 0x3fc
    f480:	mov	r1, r2
    f484:	mov	r0, r3
    f488:	bl	873c <get_line>
    f48c:	str	r0, [fp, #-8]
    f490:	ldr	r3, [fp, #-8]
    f494:	cmp	r3, #0
    f498:	bge	f4a4 <read_clock_header+0x7b4>
    f49c:	mvn	r3, #0
    f4a0:	b	f518 <read_clock_header+0x828>
    f4a4:	ldr	r3, [fp, #-8]
    f4a8:	cmp	r3, #0
    f4ac:	bgt	ed90 <read_clock_header+0xa0>
    f4b0:	b	f4b8 <read_clock_header+0x7c8>
    f4b4:	nop	{0}
    f4b8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f4bc:	ldr	r0, [r3, #8]
    f4c0:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f4c4:	ldr	r2, [r3, #140]	; 0x8c
    f4c8:	mov	r3, #0
    f4cc:	movw	r1, #0
    f4d0:	movt	r1, #0
    f4d4:	bl	0 <coda_mem_record_add_field>
    f4d8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f4dc:	mov	r2, #0
    f4e0:	str	r2, [r3, #140]	; 0x8c
    f4e4:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f4e8:	ldr	r3, [r3]
    f4ec:	mov	r0, r3
    f4f0:	bl	0 <ftell>
    f4f4:	mov	r2, r0
    f4f8:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f4fc:	str	r2, [r3, #128]	; 0x80
    f500:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f504:	ldr	r3, [r3, #124]	; 0x7c
    f508:	add	r2, r3, #1
    f50c:	ldr	r3, [fp, #-1096]	; 0xfffffbb8
    f510:	str	r2, [r3, #124]	; 0x7c
    f514:	mov	r3, #0
    f518:	mov	r0, r3
    f51c:	sub	sp, fp, #4
    f520:	ldr	fp, [sp]
    f524:	add	sp, sp, #4
    f528:	pop	{pc}		; (ldr pc, [sp], #4)
    f52c:	.word	0x00000000

0000f530 <read_clock_records>:
    f530:	str	fp, [sp, #-8]!
    f534:	str	lr, [sp, #4]
    f538:	add	fp, sp, #4
    f53c:	sub	sp, sp, #1136	; 0x470
    f540:	str	r0, [fp, #-1128]	; 0xfffffb98
    f544:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f548:	ldr	r3, [r3]
    f54c:	mov	r0, r3
    f550:	bl	0 <ftell>
    f554:	mov	r2, r0
    f558:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f55c:	str	r2, [r3, #128]	; 0x80
    f560:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f564:	ldr	r3, [r3, #124]	; 0x7c
    f568:	add	r2, r3, #1
    f56c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f570:	str	r2, [r3, #124]	; 0x7c
    f574:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f578:	ldr	r3, [r3]
    f57c:	sub	r2, fp, #1020	; 0x3fc
    f580:	mov	r1, r2
    f584:	mov	r0, r3
    f588:	bl	873c <get_line>
    f58c:	str	r0, [fp, #-8]
    f590:	ldr	r3, [fp, #-8]
    f594:	cmp	r3, #0
    f598:	bge	fdfc <read_clock_records+0x8cc>
    f59c:	mvn	r3, #0
    f5a0:	b	fe0c <read_clock_records+0x8dc>
    f5a4:	ldr	r3, [fp, #-8]
    f5a8:	cmp	r3, #39	; 0x27
    f5ac:	bgt	f5e4 <read_clock_records+0xb4>
    f5b0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f5b4:	ldr	r2, [r3, #124]	; 0x7c
    f5b8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f5bc:	ldr	r3, [r3, #128]	; 0x80
    f5c0:	str	r3, [sp]
    f5c4:	mov	r3, r2
    f5c8:	ldr	r2, [fp, #-8]
    f5cc:	movw	r1, #0
    f5d0:	movt	r1, #0
    f5d4:	mvn	r0, #21
    f5d8:	bl	0 <coda_set_error>
    f5dc:	mvn	r3, #0
    f5e0:	b	fe0c <read_clock_records+0x8dc>
    f5e4:	mrc	15, 0, r3, cr13, cr0, {3}
    f5e8:	ldr	r2, [pc, #2096]	; fe20 <read_clock_records+0x8f0>
    f5ec:	ldr	r3, [r3, r2]
    f5f0:	add	r3, r3, #572	; 0x23c
    f5f4:	ldr	r3, [r3]
    f5f8:	mov	r1, #0
    f5fc:	mov	r0, r3
    f600:	bl	0 <coda_mem_record_new>
    f604:	mov	r2, r0
    f608:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f60c:	str	r2, [r3, #136]	; 0x88
    f610:	sub	r3, fp, #4
    f614:	sub	r3, r3, #1016	; 0x3f8
    f618:	ldrh	r2, [r3]
    f61c:	sub	r3, fp, #4
    f620:	sub	r3, r3, #1088	; 0x440
    f624:	strh	r2, [r3]
    f628:	mov	r3, #0
    f62c:	strb	r3, [fp, #-1090]	; 0xfffffbbe
    f630:	sub	r3, fp, #1088	; 0x440
    f634:	sub	r3, r3, #4
    f638:	mov	r0, r3
    f63c:	bl	86b4 <rtrim>
    f640:	mrc	15, 0, r3, cr13, cr0, {3}
    f644:	ldr	r2, [pc, #2004]	; fe20 <read_clock_records+0x8f0>
    f648:	ldr	r3, [r3, r2]
    f64c:	ldr	r3, [r3, #532]	; 0x214
    f650:	str	r3, [fp, #-12]
    f654:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f658:	ldr	r2, [r3, #4]
    f65c:	sub	r3, fp, #1088	; 0x440
    f660:	sub	r3, r3, #4
    f664:	mov	r1, #0
    f668:	ldr	r0, [fp, #-12]
    f66c:	bl	0 <coda_mem_string_new>
    f670:	str	r0, [fp, #-16]
    f674:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f678:	ldr	r0, [r3, #136]	; 0x88
    f67c:	mov	r3, #0
    f680:	ldr	r2, [fp, #-16]
    f684:	movw	r1, #0
    f688:	movt	r1, #0
    f68c:	bl	0 <coda_mem_record_add_field>
    f690:	ldr	r3, [fp, #-1017]	; 0xfffffc07
    f694:	str	r3, [fp, #-1092]	; 0xfffffbbc
    f698:	mov	r3, #0
    f69c:	strb	r3, [fp, #-1088]	; 0xfffffbc0
    f6a0:	sub	r3, fp, #1088	; 0x440
    f6a4:	sub	r3, r3, #4
    f6a8:	mov	r0, r3
    f6ac:	bl	86b4 <rtrim>
    f6b0:	mrc	15, 0, r3, cr13, cr0, {3}
    f6b4:	ldr	r2, [pc, #1892]	; fe20 <read_clock_records+0x8f0>
    f6b8:	ldr	r3, [r3, r2]
    f6bc:	ldr	r3, [r3, #536]	; 0x218
    f6c0:	str	r3, [fp, #-12]
    f6c4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f6c8:	ldr	r2, [r3, #4]
    f6cc:	sub	r3, fp, #1088	; 0x440
    f6d0:	sub	r3, r3, #4
    f6d4:	mov	r1, #0
    f6d8:	ldr	r0, [fp, #-12]
    f6dc:	bl	0 <coda_mem_string_new>
    f6e0:	str	r0, [fp, #-16]
    f6e4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f6e8:	ldr	r0, [r3, #136]	; 0x88
    f6ec:	mov	r3, #0
    f6f0:	ldr	r2, [fp, #-16]
    f6f4:	movw	r1, #0
    f6f8:	movt	r1, #0
    f6fc:	bl	0 <coda_mem_record_add_field>
    f700:	sub	r3, fp, #1020	; 0x3fc
    f704:	add	r1, r3, #8
    f708:	sub	r3, fp, #1104	; 0x450
    f70c:	sub	r3, r3, #4
    f710:	sub	r3, r3, #12
    f714:	mov	r2, #27
    f718:	mov	r0, r3
    f71c:	bl	0 <memcpy>
    f720:	mov	r3, #0
    f724:	strb	r3, [fp, #-1093]	; 0xfffffbbb
    f728:	mrc	15, 0, r3, cr13, cr0, {3}
    f72c:	ldr	r2, [pc, #1772]	; fe20 <read_clock_records+0x8f0>
    f730:	ldr	r3, [r3, r2]
    f734:	ldr	r3, [r3, #176]	; 0xb0
    f738:	str	r3, [fp, #-12]
    f73c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f740:	ldr	r2, [r3, #4]
    f744:	sub	r3, fp, #1104	; 0x450
    f748:	sub	r3, r3, #4
    f74c:	sub	r3, r3, #12
    f750:	mov	r1, #0
    f754:	ldr	r0, [fp, #-12]
    f758:	bl	0 <coda_mem_string_new>
    f75c:	str	r0, [fp, #-20]	; 0xffffffec
    f760:	mrc	15, 0, r3, cr13, cr0, {3}
    f764:	ldr	r2, [pc, #1716]	; fe20 <read_clock_records+0x8f0>
    f768:	ldr	r3, [r3, r2]
    f76c:	ldr	r3, [r3, #540]	; 0x21c
    f770:	str	r3, [fp, #-12]
    f774:	ldr	r2, [fp, #-20]	; 0xffffffec
    f778:	mov	r1, #0
    f77c:	ldr	r0, [fp, #-12]
    f780:	bl	0 <coda_mem_time_new>
    f784:	str	r0, [fp, #-16]
    f788:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f78c:	ldr	r0, [r3, #136]	; 0x88
    f790:	mov	r3, #0
    f794:	ldr	r2, [fp, #-16]
    f798:	movw	r1, #0
    f79c:	movt	r1, #0
    f7a0:	bl	0 <coda_mem_record_add_field>
    f7a4:	sub	r3, fp, #1020	; 0x3fc
    f7a8:	add	r1, r3, #34	; 0x22
    f7ac:	sub	r3, fp, #1088	; 0x440
    f7b0:	sub	r3, r3, #4
    f7b4:	mov	r2, #3
    f7b8:	mov	r0, r3
    f7bc:	bl	0 <memcpy>
    f7c0:	mov	r3, #0
    f7c4:	strb	r3, [fp, #-1089]	; 0xfffffbbf
    f7c8:	sub	r2, fp, #1120	; 0x460
    f7cc:	sub	r2, r2, #4
    f7d0:	sub	r3, fp, #1088	; 0x440
    f7d4:	sub	r3, r3, #4
    f7d8:	movw	r1, #0
    f7dc:	movt	r1, #0
    f7e0:	mov	r0, r3
    f7e4:	bl	0 <__isoc99_sscanf>
    f7e8:	mov	r3, r0
    f7ec:	cmp	r3, #1
    f7f0:	bne	f80c <read_clock_records+0x2dc>
    f7f4:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    f7f8:	cmp	r3, #0
    f7fc:	ble	f80c <read_clock_records+0x2dc>
    f800:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    f804:	cmp	r3, #6
    f808:	ble	f838 <read_clock_records+0x308>
    f80c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f810:	ldr	r2, [r3, #124]	; 0x7c
    f814:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f818:	ldr	r3, [r3, #128]	; 0x80
    f81c:	add	r3, r3, #34	; 0x22
    f820:	movw	r1, #0
    f824:	movt	r1, #0
    f828:	mvn	r0, #21
    f82c:	bl	0 <coda_set_error>
    f830:	mvn	r3, #0
    f834:	b	fe0c <read_clock_records+0x8dc>
    f838:	sub	r2, fp, #1024	; 0x400
    f83c:	sub	r2, r2, #4
    f840:	sub	r3, fp, #1020	; 0x3fc
    f844:	add	r0, r3, #40	; 0x28
    f848:	mov	r3, #0
    f84c:	mov	r1, #19
    f850:	bl	0 <coda_ascii_parse_double>
    f854:	mov	r3, r0
    f858:	cmp	r3, #0
    f85c:	bge	f888 <read_clock_records+0x358>
    f860:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f864:	ldr	r1, [r3, #124]	; 0x7c
    f868:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f86c:	ldr	r3, [r3, #128]	; 0x80
    f870:	mov	r2, r3
    f874:	movw	r0, #0
    f878:	movt	r0, #0
    f87c:	bl	0 <coda_add_error_message>
    f880:	mvn	r3, #0
    f884:	b	fe0c <read_clock_records+0x8dc>
    f888:	mrc	15, 0, r3, cr13, cr0, {3}
    f88c:	ldr	r2, [pc, #1420]	; fe20 <read_clock_records+0x8f0>
    f890:	ldr	r3, [r3, r2]
    f894:	ldr	r3, [r3, #544]	; 0x220
    f898:	str	r3, [fp, #-12]
    f89c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f8a0:	ldr	r3, [r3, #4]
    f8a4:	sub	r2, fp, #1024	; 0x400
    f8a8:	sub	r2, r2, #4
    f8ac:	vldr	d7, [r2]
    f8b0:	vmov.f64	d0, d7
    f8b4:	mov	r2, r3
    f8b8:	mov	r1, #0
    f8bc:	ldr	r0, [fp, #-12]
    f8c0:	bl	0 <coda_mem_double_new>
    f8c4:	str	r0, [fp, #-16]
    f8c8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f8cc:	ldr	r0, [r3, #136]	; 0x88
    f8d0:	mov	r3, #0
    f8d4:	ldr	r2, [fp, #-16]
    f8d8:	movw	r1, #0
    f8dc:	movt	r1, #0
    f8e0:	bl	0 <coda_mem_record_add_field>
    f8e4:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    f8e8:	cmp	r3, #1
    f8ec:	ble	f9dc <read_clock_records+0x4ac>
    f8f0:	ldr	r3, [fp, #-8]
    f8f4:	cmp	r3, #78	; 0x4e
    f8f8:	bgt	f930 <read_clock_records+0x400>
    f8fc:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f900:	ldr	r2, [r3, #124]	; 0x7c
    f904:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f908:	ldr	r3, [r3, #128]	; 0x80
    f90c:	str	r3, [sp]
    f910:	mov	r3, r2
    f914:	ldr	r2, [fp, #-8]
    f918:	movw	r1, #0
    f91c:	movt	r1, #0
    f920:	mvn	r0, #21
    f924:	bl	0 <coda_set_error>
    f928:	mvn	r3, #0
    f92c:	b	fe0c <read_clock_records+0x8dc>
    f930:	sub	r2, fp, #1024	; 0x400
    f934:	sub	r2, r2, #4
    f938:	sub	r3, fp, #1020	; 0x3fc
    f93c:	add	r0, r3, #60	; 0x3c
    f940:	mov	r3, #0
    f944:	mov	r1, #19
    f948:	bl	0 <coda_ascii_parse_double>
    f94c:	mov	r3, r0
    f950:	cmp	r3, #0
    f954:	bge	f980 <read_clock_records+0x450>
    f958:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f95c:	ldr	r1, [r3, #124]	; 0x7c
    f960:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f964:	ldr	r3, [r3, #128]	; 0x80
    f968:	mov	r2, r3
    f96c:	movw	r0, #0
    f970:	movt	r0, #0
    f974:	bl	0 <coda_add_error_message>
    f978:	mvn	r3, #0
    f97c:	b	fe0c <read_clock_records+0x8dc>
    f980:	mrc	15, 0, r3, cr13, cr0, {3}
    f984:	ldr	r2, [pc, #1172]	; fe20 <read_clock_records+0x8f0>
    f988:	ldr	r3, [r3, r2]
    f98c:	ldr	r3, [r3, #548]	; 0x224
    f990:	str	r3, [fp, #-12]
    f994:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f998:	ldr	r3, [r3, #4]
    f99c:	sub	r2, fp, #1024	; 0x400
    f9a0:	sub	r2, r2, #4
    f9a4:	vldr	d7, [r2]
    f9a8:	vmov.f64	d0, d7
    f9ac:	mov	r2, r3
    f9b0:	mov	r1, #0
    f9b4:	ldr	r0, [fp, #-12]
    f9b8:	bl	0 <coda_mem_double_new>
    f9bc:	str	r0, [fp, #-16]
    f9c0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f9c4:	ldr	r0, [r3, #136]	; 0x88
    f9c8:	mov	r3, #0
    f9cc:	ldr	r2, [fp, #-16]
    f9d0:	movw	r1, #0
    f9d4:	movt	r1, #0
    f9d8:	bl	0 <coda_mem_record_add_field>
    f9dc:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    f9e0:	cmp	r3, #2
    f9e4:	ble	fd74 <read_clock_records+0x844>
    f9e8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    f9ec:	ldr	r3, [r3]
    f9f0:	mov	r0, r3
    f9f4:	bl	0 <ftell>
    f9f8:	mov	r2, r0
    f9fc:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fa00:	str	r2, [r3, #128]	; 0x80
    fa04:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fa08:	ldr	r3, [r3, #124]	; 0x7c
    fa0c:	add	r2, r3, #1
    fa10:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fa14:	str	r2, [r3, #124]	; 0x7c
    fa18:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fa1c:	ldr	r3, [r3]
    fa20:	sub	r2, fp, #1020	; 0x3fc
    fa24:	mov	r1, r2
    fa28:	mov	r0, r3
    fa2c:	bl	873c <get_line>
    fa30:	str	r0, [fp, #-8]
    fa34:	ldr	r3, [fp, #-8]
    fa38:	cmp	r3, #0
    fa3c:	bge	fa48 <read_clock_records+0x518>
    fa40:	mvn	r3, #0
    fa44:	b	fe0c <read_clock_records+0x8dc>
    fa48:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    fa4c:	sub	r2, r3, #2
    fa50:	mov	r3, r2
    fa54:	lsl	r3, r3, #2
    fa58:	add	r3, r3, r2
    fa5c:	lsl	r3, r3, #2
    fa60:	sub	r3, r3, #1
    fa64:	ldr	r2, [fp, #-8]
    fa68:	cmp	r2, r3
    fa6c:	bge	faa4 <read_clock_records+0x574>
    fa70:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fa74:	ldr	r2, [r3, #124]	; 0x7c
    fa78:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fa7c:	ldr	r3, [r3, #128]	; 0x80
    fa80:	str	r3, [sp]
    fa84:	mov	r3, r2
    fa88:	ldr	r2, [fp, #-8]
    fa8c:	movw	r1, #0
    fa90:	movt	r1, #0
    fa94:	mvn	r0, #21
    fa98:	bl	0 <coda_set_error>
    fa9c:	mvn	r3, #0
    faa0:	b	fe0c <read_clock_records+0x8dc>
    faa4:	sub	r2, fp, #1024	; 0x400
    faa8:	sub	r2, r2, #4
    faac:	sub	r0, fp, #1020	; 0x3fc
    fab0:	mov	r3, #0
    fab4:	mov	r1, #19
    fab8:	bl	0 <coda_ascii_parse_double>
    fabc:	mov	r3, r0
    fac0:	cmp	r3, #0
    fac4:	bge	faf0 <read_clock_records+0x5c0>
    fac8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    facc:	ldr	r1, [r3, #124]	; 0x7c
    fad0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fad4:	ldr	r3, [r3, #128]	; 0x80
    fad8:	mov	r2, r3
    fadc:	movw	r0, #0
    fae0:	movt	r0, #0
    fae4:	bl	0 <coda_add_error_message>
    fae8:	mvn	r3, #0
    faec:	b	fe0c <read_clock_records+0x8dc>
    faf0:	mrc	15, 0, r3, cr13, cr0, {3}
    faf4:	ldr	r2, [pc, #804]	; fe20 <read_clock_records+0x8f0>
    faf8:	ldr	r3, [r3, r2]
    fafc:	ldr	r3, [r3, #552]	; 0x228
    fb00:	str	r3, [fp, #-12]
    fb04:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fb08:	ldr	r3, [r3, #4]
    fb0c:	sub	r2, fp, #1024	; 0x400
    fb10:	sub	r2, r2, #4
    fb14:	vldr	d7, [r2]
    fb18:	vmov.f64	d0, d7
    fb1c:	mov	r2, r3
    fb20:	mov	r1, #0
    fb24:	ldr	r0, [fp, #-12]
    fb28:	bl	0 <coda_mem_double_new>
    fb2c:	str	r0, [fp, #-16]
    fb30:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fb34:	ldr	r0, [r3, #136]	; 0x88
    fb38:	mov	r3, #0
    fb3c:	ldr	r2, [fp, #-16]
    fb40:	movw	r1, #0
    fb44:	movt	r1, #0
    fb48:	bl	0 <coda_mem_record_add_field>
    fb4c:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    fb50:	cmp	r3, #3
    fb54:	ble	fc04 <read_clock_records+0x6d4>
    fb58:	sub	r2, fp, #1024	; 0x400
    fb5c:	sub	r2, r2, #4
    fb60:	sub	r3, fp, #1020	; 0x3fc
    fb64:	add	r0, r3, #20
    fb68:	mov	r3, #0
    fb6c:	mov	r1, #19
    fb70:	bl	0 <coda_ascii_parse_double>
    fb74:	mov	r3, r0
    fb78:	cmp	r3, #0
    fb7c:	bge	fba8 <read_clock_records+0x678>
    fb80:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fb84:	ldr	r1, [r3, #124]	; 0x7c
    fb88:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fb8c:	ldr	r3, [r3, #128]	; 0x80
    fb90:	mov	r2, r3
    fb94:	movw	r0, #0
    fb98:	movt	r0, #0
    fb9c:	bl	0 <coda_add_error_message>
    fba0:	mvn	r3, #0
    fba4:	b	fe0c <read_clock_records+0x8dc>
    fba8:	mrc	15, 0, r3, cr13, cr0, {3}
    fbac:	ldr	r2, [pc, #620]	; fe20 <read_clock_records+0x8f0>
    fbb0:	ldr	r3, [r3, r2]
    fbb4:	ldr	r3, [r3, #556]	; 0x22c
    fbb8:	str	r3, [fp, #-12]
    fbbc:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fbc0:	ldr	r3, [r3, #4]
    fbc4:	sub	r2, fp, #1024	; 0x400
    fbc8:	sub	r2, r2, #4
    fbcc:	vldr	d7, [r2]
    fbd0:	vmov.f64	d0, d7
    fbd4:	mov	r2, r3
    fbd8:	mov	r1, #0
    fbdc:	ldr	r0, [fp, #-12]
    fbe0:	bl	0 <coda_mem_double_new>
    fbe4:	str	r0, [fp, #-16]
    fbe8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fbec:	ldr	r0, [r3, #136]	; 0x88
    fbf0:	mov	r3, #0
    fbf4:	ldr	r2, [fp, #-16]
    fbf8:	movw	r1, #0
    fbfc:	movt	r1, #0
    fc00:	bl	0 <coda_mem_record_add_field>
    fc04:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    fc08:	cmp	r3, #4
    fc0c:	ble	fcbc <read_clock_records+0x78c>
    fc10:	sub	r2, fp, #1024	; 0x400
    fc14:	sub	r2, r2, #4
    fc18:	sub	r3, fp, #1020	; 0x3fc
    fc1c:	add	r0, r3, #40	; 0x28
    fc20:	mov	r3, #0
    fc24:	mov	r1, #19
    fc28:	bl	0 <coda_ascii_parse_double>
    fc2c:	mov	r3, r0
    fc30:	cmp	r3, #0
    fc34:	bge	fc60 <read_clock_records+0x730>
    fc38:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fc3c:	ldr	r1, [r3, #124]	; 0x7c
    fc40:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fc44:	ldr	r3, [r3, #128]	; 0x80
    fc48:	mov	r2, r3
    fc4c:	movw	r0, #0
    fc50:	movt	r0, #0
    fc54:	bl	0 <coda_add_error_message>
    fc58:	mvn	r3, #0
    fc5c:	b	fe0c <read_clock_records+0x8dc>
    fc60:	mrc	15, 0, r3, cr13, cr0, {3}
    fc64:	ldr	r2, [pc, #436]	; fe20 <read_clock_records+0x8f0>
    fc68:	ldr	r3, [r3, r2]
    fc6c:	ldr	r3, [r3, #560]	; 0x230
    fc70:	str	r3, [fp, #-12]
    fc74:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fc78:	ldr	r3, [r3, #4]
    fc7c:	sub	r2, fp, #1024	; 0x400
    fc80:	sub	r2, r2, #4
    fc84:	vldr	d7, [r2]
    fc88:	vmov.f64	d0, d7
    fc8c:	mov	r2, r3
    fc90:	mov	r1, #0
    fc94:	ldr	r0, [fp, #-12]
    fc98:	bl	0 <coda_mem_double_new>
    fc9c:	str	r0, [fp, #-16]
    fca0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fca4:	ldr	r0, [r3, #136]	; 0x88
    fca8:	mov	r3, #0
    fcac:	ldr	r2, [fp, #-16]
    fcb0:	movw	r1, #0
    fcb4:	movt	r1, #0
    fcb8:	bl	0 <coda_mem_record_add_field>
    fcbc:	ldr	r3, [fp, #-1124]	; 0xfffffb9c
    fcc0:	cmp	r3, #5
    fcc4:	ble	fd74 <read_clock_records+0x844>
    fcc8:	sub	r2, fp, #1024	; 0x400
    fccc:	sub	r2, r2, #4
    fcd0:	sub	r3, fp, #1020	; 0x3fc
    fcd4:	add	r0, r3, #60	; 0x3c
    fcd8:	mov	r3, #0
    fcdc:	mov	r1, #19
    fce0:	bl	0 <coda_ascii_parse_double>
    fce4:	mov	r3, r0
    fce8:	cmp	r3, #0
    fcec:	bge	fd18 <read_clock_records+0x7e8>
    fcf0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fcf4:	ldr	r1, [r3, #124]	; 0x7c
    fcf8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fcfc:	ldr	r3, [r3, #128]	; 0x80
    fd00:	mov	r2, r3
    fd04:	movw	r0, #0
    fd08:	movt	r0, #0
    fd0c:	bl	0 <coda_add_error_message>
    fd10:	mvn	r3, #0
    fd14:	b	fe0c <read_clock_records+0x8dc>
    fd18:	mrc	15, 0, r3, cr13, cr0, {3}
    fd1c:	ldr	r2, [pc, #252]	; fe20 <read_clock_records+0x8f0>
    fd20:	ldr	r3, [r3, r2]
    fd24:	ldr	r3, [r3, #564]	; 0x234
    fd28:	str	r3, [fp, #-12]
    fd2c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fd30:	ldr	r3, [r3, #4]
    fd34:	sub	r2, fp, #1024	; 0x400
    fd38:	sub	r2, r2, #4
    fd3c:	vldr	d7, [r2]
    fd40:	vmov.f64	d0, d7
    fd44:	mov	r2, r3
    fd48:	mov	r1, #0
    fd4c:	ldr	r0, [fp, #-12]
    fd50:	bl	0 <coda_mem_double_new>
    fd54:	str	r0, [fp, #-16]
    fd58:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fd5c:	ldr	r0, [r3, #136]	; 0x88
    fd60:	mov	r3, #0
    fd64:	ldr	r2, [fp, #-16]
    fd68:	movw	r1, #0
    fd6c:	movt	r1, #0
    fd70:	bl	0 <coda_mem_record_add_field>
    fd74:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fd78:	ldr	r2, [r3, #144]	; 0x90
    fd7c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fd80:	ldr	r3, [r3, #136]	; 0x88
    fd84:	mov	r1, r3
    fd88:	mov	r0, r2
    fd8c:	bl	0 <coda_mem_array_add_element>
    fd90:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fd94:	mov	r2, #0
    fd98:	str	r2, [r3, #136]	; 0x88
    fd9c:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fda0:	ldr	r3, [r3]
    fda4:	mov	r0, r3
    fda8:	bl	0 <ftell>
    fdac:	mov	r2, r0
    fdb0:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fdb4:	str	r2, [r3, #128]	; 0x80
    fdb8:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fdbc:	ldr	r3, [r3, #124]	; 0x7c
    fdc0:	add	r2, r3, #1
    fdc4:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fdc8:	str	r2, [r3, #124]	; 0x7c
    fdcc:	ldr	r3, [fp, #-1128]	; 0xfffffb98
    fdd0:	ldr	r3, [r3]
    fdd4:	sub	r2, fp, #1020	; 0x3fc
    fdd8:	mov	r1, r2
    fddc:	mov	r0, r3
    fde0:	bl	873c <get_line>
    fde4:	str	r0, [fp, #-8]
    fde8:	ldr	r3, [fp, #-8]
    fdec:	cmp	r3, #0
    fdf0:	bge	fdfc <read_clock_records+0x8cc>
    fdf4:	mvn	r3, #0
    fdf8:	b	fe0c <read_clock_records+0x8dc>
    fdfc:	ldr	r3, [fp, #-8]
    fe00:	cmp	r3, #0
    fe04:	bgt	f5a4 <read_clock_records+0x74>
    fe08:	mov	r3, #0
    fe0c:	mov	r0, r3
    fe10:	sub	sp, fp, #4
    fe14:	ldr	fp, [sp]
    fe18:	add	sp, sp, #4
    fe1c:	pop	{pc}		; (ldr pc, [sp], #4)
    fe20:	.word	0x00000000

0000fe24 <read_file>:
    fe24:	str	fp, [sp, #-8]!
    fe28:	str	lr, [sp, #4]
    fe2c:	add	fp, sp, #4
    fe30:	sub	sp, sp, #184	; 0xb8
    fe34:	str	r0, [fp, #-184]	; 0xffffff48
    fe38:	mov	r3, #0
    fe3c:	str	r3, [fp, #-8]
    fe40:	sub	r3, fp, #180	; 0xb4
    fe44:	mov	r0, r3
    fe48:	bl	304 <ingest_info_init>
    fe4c:	ldr	r3, [fp, #-184]	; 0xffffff48
    fe50:	str	r3, [fp, #-176]	; 0xffffff50
    fe54:	ldr	r3, [fp, #-184]	; 0xffffff48
    fe58:	ldr	r3, [r3]
    fe5c:	movw	r1, #0
    fe60:	movt	r1, #0
    fe64:	mov	r0, r3
    fe68:	bl	0 <fopen>
    fe6c:	mov	r3, r0
    fe70:	str	r3, [fp, #-180]	; 0xffffff4c
    fe74:	ldr	r3, [fp, #-180]	; 0xffffff4c
    fe78:	cmp	r3, #0
    fe7c:	bne	fea4 <read_file+0x80>
    fe80:	ldr	r3, [fp, #-184]	; 0xffffff48
    fe84:	ldr	r3, [r3]
    fe88:	mov	r2, r3
    fe8c:	movw	r1, #0
    fe90:	movt	r1, #0
    fe94:	mvn	r0, #20
    fe98:	bl	0 <coda_set_error>
    fe9c:	mvn	r3, #0
    fea0:	b	104fc <read_file+0x6d8>
    fea4:	sub	r3, fp, #180	; 0xb4
    fea8:	mov	r0, r3
    feac:	bl	888c <read_main_header>
    feb0:	mov	r3, r0
    feb4:	cmp	r3, #0
    feb8:	beq	fed0 <read_file+0xac>
    febc:	sub	r3, fp, #180	; 0xb4
    fec0:	mov	r0, r3
    fec4:	bl	134 <ingest_info_cleanup>
    fec8:	mvn	r3, #0
    fecc:	b	104fc <read_file+0x6d8>
    fed0:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    fed4:	cmp	r3, #79	; 0x4f
    fed8:	bne	100dc <read_file+0x2b8>
    fedc:	mov	r0, #8
    fee0:	bl	0 <coda_type_record_new>
    fee4:	mov	r3, r0
    fee8:	str	r3, [fp, #-48]	; 0xffffffd0
    feec:	movw	r0, #0
    fef0:	movt	r0, #0
    fef4:	bl	0 <coda_type_record_field_new>
    fef8:	str	r0, [fp, #-12]
    fefc:	mrc	15, 0, r3, cr13, cr0, {3}
    ff00:	ldr	r2, [pc, #1544]	; 10510 <read_file+0x6ec>
    ff04:	ldr	r3, [r3, r2]
    ff08:	add	r3, r3, #180	; 0xb4
    ff0c:	ldr	r3, [r3]
    ff10:	mov	r1, r3
    ff14:	ldr	r0, [fp, #-12]
    ff18:	bl	0 <coda_type_record_field_set_type>
    ff1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ff20:	ldr	r1, [fp, #-12]
    ff24:	mov	r0, r3
    ff28:	bl	0 <coda_type_record_add_field>
    ff2c:	movw	r0, #0
    ff30:	movt	r0, #0
    ff34:	bl	0 <coda_type_record_field_new>
    ff38:	str	r0, [fp, #-12]
    ff3c:	mrc	15, 0, r3, cr13, cr0, {3}
    ff40:	ldr	r2, [pc, #1480]	; 10510 <read_file+0x6ec>
    ff44:	ldr	r3, [r3, r2]
    ff48:	add	r3, r3, #184	; 0xb8
    ff4c:	ldr	r3, [r3]
    ff50:	mov	r1, r3
    ff54:	ldr	r0, [fp, #-12]
    ff58:	bl	0 <coda_type_record_field_set_type>
    ff5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ff60:	ldr	r1, [fp, #-12]
    ff64:	mov	r0, r3
    ff68:	bl	0 <coda_type_record_add_field>
    ff6c:	movw	r0, #0
    ff70:	movt	r0, #0
    ff74:	bl	0 <coda_type_record_field_new>
    ff78:	str	r0, [fp, #-12]
    ff7c:	mrc	15, 0, r3, cr13, cr0, {3}
    ff80:	ldr	r2, [pc, #1416]	; 10510 <read_file+0x6ec>
    ff84:	ldr	r3, [r3, r2]
    ff88:	add	r3, r3, #188	; 0xbc
    ff8c:	ldr	r3, [r3]
    ff90:	mov	r1, r3
    ff94:	ldr	r0, [fp, #-12]
    ff98:	bl	0 <coda_type_record_field_set_type>
    ff9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ffa0:	ldr	r1, [fp, #-12]
    ffa4:	mov	r0, r3
    ffa8:	bl	0 <coda_type_record_add_field>
    ffac:	sub	r3, fp, #180	; 0xb4
    ffb0:	mov	r0, r3
    ffb4:	bl	9418 <read_observation_header>
    ffb8:	mov	r3, r0
    ffbc:	cmp	r3, #0
    ffc0:	beq	ffd8 <read_file+0x1b4>
    ffc4:	sub	r3, fp, #180	; 0xb4
    ffc8:	mov	r0, r3
    ffcc:	bl	134 <ingest_info_cleanup>
    ffd0:	mvn	r3, #0
    ffd4:	b	104fc <read_file+0x6d8>
    ffd8:	ldr	r3, [fp, #-172]	; 0xffffff54
    ffdc:	mov	r0, r3
    ffe0:	bl	0 <coda_mem_record_validate>
    ffe4:	mov	r3, r0
    ffe8:	cmp	r3, #0
    ffec:	beq	10004 <read_file+0x1e0>
    fff0:	sub	r3, fp, #180	; 0xb4
    fff4:	mov	r0, r3
    fff8:	bl	134 <ingest_info_cleanup>
    fffc:	mvn	r3, #0
   10000:	b	104fc <read_file+0x6d8>
   10004:	mov	r0, #8
   10008:	bl	0 <coda_type_array_new>
   1000c:	str	r0, [fp, #-16]
   10010:	mov	r1, #0
   10014:	ldr	r0, [fp, #-16]
   10018:	bl	0 <coda_type_array_add_variable_dimension>
   1001c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10020:	mov	r1, r3
   10024:	ldr	r0, [fp, #-16]
   10028:	bl	0 <coda_type_array_set_base_type>
   1002c:	mov	r1, #0
   10030:	ldr	r0, [fp, #-16]
   10034:	bl	0 <coda_mem_array_new>
   10038:	mov	r3, r0
   1003c:	str	r3, [fp, #-36]	; 0xffffffdc
   10040:	ldr	r0, [fp, #-16]
   10044:	bl	0 <coda_type_release>
   10048:	sub	r3, fp, #180	; 0xb4
   1004c:	mov	r0, r3
   10050:	bl	b3f8 <read_observation_records>
   10054:	mov	r3, r0
   10058:	cmp	r3, #0
   1005c:	beq	10074 <read_file+0x250>
   10060:	sub	r3, fp, #180	; 0xb4
   10064:	mov	r0, r3
   10068:	bl	134 <ingest_info_cleanup>
   1006c:	mvn	r3, #0
   10070:	b	104fc <read_file+0x6d8>
   10074:	mov	r0, #8
   10078:	bl	0 <coda_type_record_new>
   1007c:	str	r0, [fp, #-20]	; 0xffffffec
   10080:	mov	r1, #0
   10084:	ldr	r0, [fp, #-20]	; 0xffffffec
   10088:	bl	0 <coda_mem_record_new>
   1008c:	str	r0, [fp, #-8]
   10090:	ldr	r0, [fp, #-20]	; 0xffffffec
   10094:	bl	0 <coda_type_release>
   10098:	ldr	r2, [fp, #-172]	; 0xffffff54
   1009c:	mov	r3, #1
   100a0:	movw	r1, #0
   100a4:	movt	r1, #0
   100a8:	ldr	r0, [fp, #-8]
   100ac:	bl	0 <coda_mem_record_add_field>
   100b0:	mov	r3, #0
   100b4:	str	r3, [fp, #-172]	; 0xffffff54
   100b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   100bc:	mov	r3, #1
   100c0:	movw	r1, #0
   100c4:	movt	r1, #0
   100c8:	ldr	r0, [fp, #-8]
   100cc:	bl	0 <coda_mem_record_add_field>
   100d0:	mov	r3, #0
   100d4:	str	r3, [fp, #-36]	; 0xffffffdc
   100d8:	b	104e0 <read_file+0x6bc>
   100dc:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   100e0:	cmp	r3, #78	; 0x4e
   100e4:	bne	103a4 <read_file+0x580>
   100e8:	mov	r0, #8
   100ec:	bl	0 <coda_type_record_new>
   100f0:	mov	r3, r0
   100f4:	str	r3, [fp, #-48]	; 0xffffffd0
   100f8:	movw	r0, #0
   100fc:	movt	r0, #0
   10100:	bl	0 <coda_type_record_field_new>
   10104:	str	r0, [fp, #-12]
   10108:	mrc	15, 0, r3, cr13, cr0, {3}
   1010c:	ldr	r2, [pc, #1020]	; 10510 <read_file+0x6ec>
   10110:	ldr	r3, [r3, r2]
   10114:	add	r3, r3, #180	; 0xb4
   10118:	ldr	r3, [r3]
   1011c:	mov	r1, r3
   10120:	ldr	r0, [fp, #-12]
   10124:	bl	0 <coda_type_record_field_set_type>
   10128:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1012c:	ldr	r1, [fp, #-12]
   10130:	mov	r0, r3
   10134:	bl	0 <coda_type_record_add_field>
   10138:	movw	r0, #0
   1013c:	movt	r0, #0
   10140:	bl	0 <coda_type_record_field_new>
   10144:	str	r0, [fp, #-12]
   10148:	mrc	15, 0, r3, cr13, cr0, {3}
   1014c:	ldr	r2, [pc, #956]	; 10510 <read_file+0x6ec>
   10150:	ldr	r3, [r3, r2]
   10154:	add	r3, r3, #184	; 0xb8
   10158:	ldr	r3, [r3]
   1015c:	mov	r1, r3
   10160:	ldr	r0, [fp, #-12]
   10164:	bl	0 <coda_type_record_field_set_type>
   10168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1016c:	ldr	r1, [fp, #-12]
   10170:	mov	r0, r3
   10174:	bl	0 <coda_type_record_add_field>
   10178:	movw	r0, #0
   1017c:	movt	r0, #0
   10180:	bl	0 <coda_type_record_field_new>
   10184:	str	r0, [fp, #-12]
   10188:	mrc	15, 0, r3, cr13, cr0, {3}
   1018c:	ldr	r2, [pc, #892]	; 10510 <read_file+0x6ec>
   10190:	ldr	r3, [r3, r2]
   10194:	add	r3, r3, #188	; 0xbc
   10198:	ldr	r3, [r3]
   1019c:	mov	r1, r3
   101a0:	ldr	r0, [fp, #-12]
   101a4:	bl	0 <coda_type_record_field_set_type>
   101a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   101ac:	ldr	r1, [fp, #-12]
   101b0:	mov	r0, r3
   101b4:	bl	0 <coda_type_record_add_field>
   101b8:	sub	r3, fp, #180	; 0xb4
   101bc:	mov	r0, r3
   101c0:	bl	baac <read_navigation_header>
   101c4:	mov	r3, r0
   101c8:	cmp	r3, #0
   101cc:	beq	101e4 <read_file+0x3c0>
   101d0:	sub	r3, fp, #180	; 0xb4
   101d4:	mov	r0, r3
   101d8:	bl	134 <ingest_info_cleanup>
   101dc:	mvn	r3, #0
   101e0:	b	104fc <read_file+0x6d8>
   101e4:	ldr	r3, [fp, #-172]	; 0xffffff54
   101e8:	mov	r0, r3
   101ec:	bl	0 <coda_mem_record_validate>
   101f0:	mov	r3, r0
   101f4:	cmp	r3, #0
   101f8:	beq	10210 <read_file+0x3ec>
   101fc:	sub	r3, fp, #180	; 0xb4
   10200:	mov	r0, r3
   10204:	bl	134 <ingest_info_cleanup>
   10208:	mvn	r3, #0
   1020c:	b	104fc <read_file+0x6d8>
   10210:	mrc	15, 0, r3, cr13, cr0, {3}
   10214:	ldr	r2, [pc, #756]	; 10510 <read_file+0x6ec>
   10218:	ldr	r3, [r3, r2]
   1021c:	add	r3, r3, #512	; 0x200
   10220:	ldr	r3, [r3]
   10224:	mov	r1, #0
   10228:	mov	r0, r3
   1022c:	bl	0 <coda_mem_array_new>
   10230:	mov	r3, r0
   10234:	str	r3, [fp, #-148]	; 0xffffff6c
   10238:	mrc	15, 0, r3, cr13, cr0, {3}
   1023c:	ldr	r2, [pc, #716]	; 10510 <read_file+0x6ec>
   10240:	ldr	r3, [r3, r2]
   10244:	add	r3, r3, #516	; 0x204
   10248:	ldr	r3, [r3]
   1024c:	mov	r1, #0
   10250:	mov	r0, r3
   10254:	bl	0 <coda_mem_array_new>
   10258:	mov	r3, r0
   1025c:	str	r3, [fp, #-124]	; 0xffffff84
   10260:	mrc	15, 0, r3, cr13, cr0, {3}
   10264:	ldr	r2, [pc, #676]	; 10510 <read_file+0x6ec>
   10268:	ldr	r3, [r3, r2]
   1026c:	add	r3, r3, #520	; 0x208
   10270:	ldr	r3, [r3]
   10274:	mov	r1, #0
   10278:	mov	r0, r3
   1027c:	bl	0 <coda_mem_array_new>
   10280:	mov	r3, r0
   10284:	str	r3, [fp, #-100]	; 0xffffff9c
   10288:	mrc	15, 0, r3, cr13, cr0, {3}
   1028c:	ldr	r2, [pc, #636]	; 10510 <read_file+0x6ec>
   10290:	ldr	r3, [r3, r2]
   10294:	add	r3, r3, #524	; 0x20c
   10298:	ldr	r3, [r3]
   1029c:	mov	r1, #0
   102a0:	mov	r0, r3
   102a4:	bl	0 <coda_mem_array_new>
   102a8:	mov	r3, r0
   102ac:	str	r3, [fp, #-76]	; 0xffffffb4
   102b0:	sub	r3, fp, #180	; 0xb4
   102b4:	mov	r0, r3
   102b8:	bl	ca14 <read_navigation_records>
   102bc:	mov	r3, r0
   102c0:	cmp	r3, #0
   102c4:	beq	102dc <read_file+0x4b8>
   102c8:	sub	r3, fp, #180	; 0xb4
   102cc:	mov	r0, r3
   102d0:	bl	134 <ingest_info_cleanup>
   102d4:	mvn	r3, #0
   102d8:	b	104fc <read_file+0x6d8>
   102dc:	mrc	15, 0, r3, cr13, cr0, {3}
   102e0:	ldr	r2, [pc, #552]	; 10510 <read_file+0x6ec>
   102e4:	ldr	r3, [r3, r2]
   102e8:	add	r3, r3, #528	; 0x210
   102ec:	ldr	r3, [r3]
   102f0:	mov	r1, #0
   102f4:	mov	r0, r3
   102f8:	bl	0 <coda_mem_record_new>
   102fc:	str	r0, [fp, #-8]
   10300:	ldr	r2, [fp, #-172]	; 0xffffff54
   10304:	mov	r3, #0
   10308:	movw	r1, #0
   1030c:	movt	r1, #0
   10310:	ldr	r0, [fp, #-8]
   10314:	bl	0 <coda_mem_record_add_field>
   10318:	mov	r3, #0
   1031c:	str	r3, [fp, #-172]	; 0xffffff54
   10320:	ldr	r2, [fp, #-148]	; 0xffffff6c
   10324:	mov	r3, #0
   10328:	movw	r1, #0
   1032c:	movt	r1, #0
   10330:	ldr	r0, [fp, #-8]
   10334:	bl	0 <coda_mem_record_add_field>
   10338:	mov	r3, #0
   1033c:	str	r3, [fp, #-148]	; 0xffffff6c
   10340:	ldr	r2, [fp, #-124]	; 0xffffff84
   10344:	mov	r3, #0
   10348:	movw	r1, #0
   1034c:	movt	r1, #0
   10350:	ldr	r0, [fp, #-8]
   10354:	bl	0 <coda_mem_record_add_field>
   10358:	mov	r3, #0
   1035c:	str	r3, [fp, #-124]	; 0xffffff84
   10360:	ldr	r2, [fp, #-100]	; 0xffffff9c
   10364:	mov	r3, #0
   10368:	movw	r1, #0
   1036c:	movt	r1, #0
   10370:	ldr	r0, [fp, #-8]
   10374:	bl	0 <coda_mem_record_add_field>
   10378:	mov	r3, #0
   1037c:	str	r3, [fp, #-100]	; 0xffffff9c
   10380:	ldr	r2, [fp, #-76]	; 0xffffffb4
   10384:	mov	r3, #0
   10388:	movw	r1, #0
   1038c:	movt	r1, #0
   10390:	ldr	r0, [fp, #-8]
   10394:	bl	0 <coda_mem_record_add_field>
   10398:	mov	r3, #0
   1039c:	str	r3, [fp, #-76]	; 0xffffffb4
   103a0:	b	104e0 <read_file+0x6bc>
   103a4:	sub	r3, fp, #180	; 0xb4
   103a8:	mov	r0, r3
   103ac:	bl	ecf0 <read_clock_header>
   103b0:	mov	r3, r0
   103b4:	cmp	r3, #0
   103b8:	beq	103d0 <read_file+0x5ac>
   103bc:	sub	r3, fp, #180	; 0xb4
   103c0:	mov	r0, r3
   103c4:	bl	134 <ingest_info_cleanup>
   103c8:	mvn	r3, #0
   103cc:	b	104fc <read_file+0x6d8>
   103d0:	ldr	r3, [fp, #-172]	; 0xffffff54
   103d4:	mov	r0, r3
   103d8:	bl	0 <coda_mem_record_validate>
   103dc:	mov	r3, r0
   103e0:	cmp	r3, #0
   103e4:	beq	103fc <read_file+0x5d8>
   103e8:	sub	r3, fp, #180	; 0xb4
   103ec:	mov	r0, r3
   103f0:	bl	134 <ingest_info_cleanup>
   103f4:	mvn	r3, #0
   103f8:	b	104fc <read_file+0x6d8>
   103fc:	mov	r0, #8
   10400:	bl	0 <coda_type_array_new>
   10404:	str	r0, [fp, #-16]
   10408:	mov	r1, #0
   1040c:	ldr	r0, [fp, #-16]
   10410:	bl	0 <coda_type_array_add_variable_dimension>
   10414:	mrc	15, 0, r3, cr13, cr0, {3}
   10418:	ldr	r2, [pc, #240]	; 10510 <read_file+0x6ec>
   1041c:	ldr	r3, [r3, r2]
   10420:	add	r3, r3, #572	; 0x23c
   10424:	ldr	r3, [r3]
   10428:	mov	r1, r3
   1042c:	ldr	r0, [fp, #-16]
   10430:	bl	0 <coda_type_array_set_base_type>
   10434:	mov	r1, #0
   10438:	ldr	r0, [fp, #-16]
   1043c:	bl	0 <coda_mem_array_new>
   10440:	mov	r3, r0
   10444:	str	r3, [fp, #-36]	; 0xffffffdc
   10448:	ldr	r0, [fp, #-16]
   1044c:	bl	0 <coda_type_release>
   10450:	sub	r3, fp, #180	; 0xb4
   10454:	mov	r0, r3
   10458:	bl	f530 <read_clock_records>
   1045c:	mov	r3, r0
   10460:	cmp	r3, #0
   10464:	beq	1047c <read_file+0x658>
   10468:	sub	r3, fp, #180	; 0xb4
   1046c:	mov	r0, r3
   10470:	bl	134 <ingest_info_cleanup>
   10474:	mvn	r3, #0
   10478:	b	104fc <read_file+0x6d8>
   1047c:	mov	r0, #8
   10480:	bl	0 <coda_type_record_new>
   10484:	str	r0, [fp, #-20]	; 0xffffffec
   10488:	mov	r1, #0
   1048c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10490:	bl	0 <coda_mem_record_new>
   10494:	str	r0, [fp, #-8]
   10498:	ldr	r0, [fp, #-20]	; 0xffffffec
   1049c:	bl	0 <coda_type_release>
   104a0:	ldr	r2, [fp, #-172]	; 0xffffff54
   104a4:	mov	r3, #1
   104a8:	movw	r1, #0
   104ac:	movt	r1, #0
   104b0:	ldr	r0, [fp, #-8]
   104b4:	bl	0 <coda_mem_record_add_field>
   104b8:	mov	r3, #0
   104bc:	str	r3, [fp, #-172]	; 0xffffff54
   104c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   104c4:	mov	r3, #1
   104c8:	movw	r1, #0
   104cc:	movt	r1, #0
   104d0:	ldr	r0, [fp, #-8]
   104d4:	bl	0 <coda_mem_record_add_field>
   104d8:	mov	r3, #0
   104dc:	str	r3, [fp, #-36]	; 0xffffffdc
   104e0:	ldr	r3, [fp, #-184]	; 0xffffff48
   104e4:	ldr	r2, [fp, #-8]
   104e8:	str	r2, [r3, #20]
   104ec:	sub	r3, fp, #180	; 0xb4
   104f0:	mov	r0, r3
   104f4:	bl	134 <ingest_info_cleanup>
   104f8:	mov	r3, #0
   104fc:	mov	r0, r3
   10500:	sub	sp, fp, #4
   10504:	ldr	fp, [sp]
   10508:	add	sp, sp, #4
   1050c:	pop	{pc}		; (ldr pc, [sp], #4)
   10510:	.word	0x00000000

00010514 <coda_rinex_reopen>:
   10514:	str	fp, [sp, #-8]!
   10518:	str	lr, [sp, #4]
   1051c:	add	fp, sp, #4
   10520:	sub	sp, sp, #24
   10524:	str	r0, [fp, #-16]
   10528:	bl	40c <rinex_init>
   1052c:	mov	r3, r0
   10530:	cmp	r3, #0
   10534:	beq	10550 <coda_rinex_reopen+0x3c>
   10538:	ldr	r3, [fp, #-16]
   1053c:	ldr	r3, [r3]
   10540:	mov	r0, r3
   10544:	bl	0 <coda_close>
   10548:	mvn	r3, #0
   1054c:	b	106d4 <coda_rinex_reopen+0x1c0>
   10550:	mov	r0, #56	; 0x38
   10554:	bl	0 <malloc>
   10558:	mov	r3, r0
   1055c:	str	r3, [fp, #-8]
   10560:	ldr	r3, [fp, #-8]
   10564:	cmp	r3, #0
   10568:	bne	105a8 <coda_rinex_reopen+0x94>
   1056c:	movw	r3, #3875	; 0xf23
   10570:	str	r3, [sp]
   10574:	movw	r3, #0
   10578:	movt	r3, #0
   1057c:	mov	r2, #56	; 0x38
   10580:	movw	r1, #0
   10584:	movt	r1, #0
   10588:	mvn	r0, #0
   1058c:	bl	0 <coda_set_error>
   10590:	ldr	r3, [fp, #-16]
   10594:	ldr	r3, [r3]
   10598:	mov	r0, r3
   1059c:	bl	0 <coda_close>
   105a0:	mvn	r3, #0
   105a4:	b	106d4 <coda_rinex_reopen+0x1c0>
   105a8:	ldr	r3, [fp, #-8]
   105ac:	mov	r2, #0
   105b0:	str	r2, [r3]
   105b4:	ldr	r3, [fp, #-16]
   105b8:	ldr	r3, [r3]
   105bc:	ldrd	r2, [r3, #8]
   105c0:	ldr	r1, [fp, #-8]
   105c4:	strd	r2, [r1, #8]
   105c8:	ldr	r3, [fp, #-8]
   105cc:	mov	r2, #8
   105d0:	str	r2, [r3, #16]
   105d4:	ldr	r3, [fp, #-8]
   105d8:	mov	r2, #0
   105dc:	str	r2, [r3, #20]
   105e0:	ldr	r3, [fp, #-8]
   105e4:	mov	r2, #0
   105e8:	str	r2, [r3, #24]
   105ec:	ldr	r3, [fp, #-8]
   105f0:	mov	r2, #0
   105f4:	str	r2, [r3, #28]
   105f8:	ldr	r3, [fp, #-8]
   105fc:	mov	r2, #0
   10600:	str	r2, [r3, #32]
   10604:	ldr	r1, [fp, #-8]
   10608:	mov	r2, #0
   1060c:	mov	r3, #0
   10610:	strd	r2, [r1, #40]	; 0x28
   10614:	ldr	r3, [fp, #-8]
   10618:	mov	r2, #0
   1061c:	str	r2, [r3, #48]	; 0x30
   10620:	ldr	r3, [fp, #-16]
   10624:	ldr	r3, [r3]
   10628:	ldr	r3, [r3]
   1062c:	mov	r0, r3
   10630:	bl	0 <strdup>
   10634:	mov	r3, r0
   10638:	mov	r2, r3
   1063c:	ldr	r3, [fp, #-8]
   10640:	str	r2, [r3]
   10644:	ldr	r3, [fp, #-8]
   10648:	ldr	r3, [r3]
   1064c:	cmp	r3, #0
   10650:	bne	10690 <coda_rinex_reopen+0x17c>
   10654:	movw	r3, #3893	; 0xf35
   10658:	movw	r2, #0
   1065c:	movt	r2, #0
   10660:	movw	r1, #0
   10664:	movt	r1, #0
   10668:	mvn	r0, #0
   1066c:	bl	0 <coda_set_error>
   10670:	ldr	r0, [fp, #-8]
   10674:	bl	0 <coda_close>
   10678:	ldr	r3, [fp, #-16]
   1067c:	ldr	r3, [r3]
   10680:	mov	r0, r3
   10684:	bl	0 <coda_close>
   10688:	mvn	r3, #0
   1068c:	b	106d4 <coda_rinex_reopen+0x1c0>
   10690:	ldr	r3, [fp, #-16]
   10694:	ldr	r3, [r3]
   10698:	mov	r0, r3
   1069c:	bl	0 <coda_close>
   106a0:	ldr	r0, [fp, #-8]
   106a4:	bl	fe24 <read_file>
   106a8:	mov	r3, r0
   106ac:	cmp	r3, #0
   106b0:	beq	106c4 <coda_rinex_reopen+0x1b0>
   106b4:	ldr	r0, [fp, #-8]
   106b8:	bl	0 <coda_close>
   106bc:	mvn	r3, #0
   106c0:	b	106d4 <coda_rinex_reopen+0x1c0>
   106c4:	ldr	r3, [fp, #-16]
   106c8:	ldr	r2, [fp, #-8]
   106cc:	str	r2, [r3]
   106d0:	mov	r3, #0
   106d4:	mov	r0, r3
   106d8:	sub	sp, fp, #4
   106dc:	ldr	fp, [sp]
   106e0:	add	sp, sp, #4
   106e4:	pop	{pc}		; (ldr pc, [sp], #4)

000106e8 <coda_rinex_close>:
   106e8:	str	fp, [sp, #-8]!
   106ec:	str	lr, [sp, #4]
   106f0:	add	fp, sp, #4
   106f4:	sub	sp, sp, #8
   106f8:	str	r0, [fp, #-8]
   106fc:	ldr	r3, [fp, #-8]
   10700:	ldr	r3, [r3, #20]
   10704:	cmp	r3, #0
   10708:	beq	1071c <coda_rinex_close+0x34>
   1070c:	ldr	r3, [fp, #-8]
   10710:	ldr	r3, [r3, #20]
   10714:	mov	r0, r3
   10718:	bl	0 <coda_dynamic_type_delete>
   1071c:	ldr	r3, [fp, #-8]
   10720:	ldr	r3, [r3]
   10724:	cmp	r3, #0
   10728:	beq	1073c <coda_rinex_close+0x54>
   1072c:	ldr	r3, [fp, #-8]
   10730:	ldr	r3, [r3]
   10734:	mov	r0, r3
   10738:	bl	0 <free>
   1073c:	ldr	r0, [fp, #-8]
   10740:	bl	0 <free>
   10744:	mov	r3, #0
   10748:	mov	r0, r3
   1074c:	sub	sp, fp, #4
   10750:	ldr	fp, [sp]
   10754:	add	sp, sp, #4
   10758:	pop	{pc}		; (ldr pc, [sp], #4)

0001075c <coda_rinex_cursor_set_product>:
   1075c:	push	{fp}		; (str fp, [sp, #-4]!)
   10760:	add	fp, sp, #0
   10764:	sub	sp, sp, #12
   10768:	str	r0, [fp, #-8]
   1076c:	str	r1, [fp, #-12]
   10770:	ldr	r3, [fp, #-8]
   10774:	ldr	r2, [fp, #-12]
   10778:	str	r2, [r3]
   1077c:	ldr	r3, [fp, #-8]
   10780:	mov	r2, #1
   10784:	str	r2, [r3, #4]
   10788:	ldr	r3, [fp, #-12]
   1078c:	ldr	r2, [r3, #20]
   10790:	ldr	r3, [fp, #-8]
   10794:	str	r2, [r3, #8]
   10798:	ldr	r3, [fp, #-8]
   1079c:	mvn	r2, #0
   107a0:	str	r2, [r3, #12]
   107a4:	ldr	r1, [fp, #-8]
   107a8:	mvn	r2, #0
   107ac:	mvn	r3, #0
   107b0:	strd	r2, [r1, #16]
   107b4:	mov	r3, #0
   107b8:	mov	r0, r3
   107bc:	add	sp, fp, #0
   107c0:	pop	{fp}		; (ldr fp, [sp], #4)
   107c4:	bx	lr
