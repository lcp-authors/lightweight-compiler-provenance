
../compcert-repos/prog2/0.6:     file format elf32-littlearm


Disassembly of section .init:

000105ec <.init>:
   105ec:	push	{r3, lr}
   105f0:	bl	106b4 <_start@@Base+0x3c>
   105f4:	pop	{r3, pc}

Disassembly of section .plt:

000105f8 <printf@plt-0x14>:
   105f8:	push	{lr}		; (str lr, [sp, #-4]!)
   105fc:	ldr	lr, [pc, #4]	; 10608 <printf@plt-0x4>
   10600:	add	lr, pc, lr
   10604:	ldr	pc, [lr, #8]!
   10608:	strdeq	r0, [r1], -r8

0001060c <printf@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #16, 20	; 0x10000
   10614:	ldr	pc, [ip, #2552]!	; 0x9f8

00010618 <realloc@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #16, 20	; 0x10000
   10620:	ldr	pc, [ip, #2544]!	; 0x9f0

00010624 <strcpy@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #16, 20	; 0x10000
   1062c:	ldr	pc, [ip, #2536]!	; 0x9e8

00010630 <malloc@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #16, 20	; 0x10000
   10638:	ldr	pc, [ip, #2528]!	; 0x9e0

0001063c <__libc_start_main@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #16, 20	; 0x10000
   10644:	ldr	pc, [ip, #2520]!	; 0x9d8

00010648 <__gmon_start__@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #16, 20	; 0x10000
   10650:	ldr	pc, [ip, #2512]!	; 0x9d0

00010654 <strlen@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #16, 20	; 0x10000
   1065c:	ldr	pc, [ip, #2504]!	; 0x9c8

00010660 <__isoc99_scanf@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #16, 20	; 0x10000
   10668:	ldr	pc, [ip, #2496]!	; 0x9c0

0001066c <abort@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2488]!	; 0x9b8

Disassembly of section .text:

00010678 <_start@@Base>:
   10678:	mov	fp, #0
   1067c:	mov	lr, #0
   10680:	pop	{r1}		; (ldr r1, [sp], #4)
   10684:	mov	r2, sp
   10688:	push	{r2}		; (str r2, [sp, #-4]!)
   1068c:	push	{r0}		; (str r0, [sp, #-4]!)
   10690:	ldr	ip, [pc, #16]	; 106a8 <_start@@Base+0x30>
   10694:	push	{ip}		; (str ip, [sp, #-4]!)
   10698:	ldr	r0, [pc, #12]	; 106ac <_start@@Base+0x34>
   1069c:	ldr	r3, [pc, #12]	; 106b0 <_start@@Base+0x38>
   106a0:	bl	1063c <__libc_start_main@plt>
   106a4:	bl	1066c <abort@plt>
   106a8:	andeq	r0, r1, r0, lsl #19
   106ac:	andeq	r0, r1, r8, ror #14
   106b0:	andeq	r0, r1, r0, lsr #18
   106b4:	ldr	r3, [pc, #20]	; 106d0 <_start@@Base+0x58>
   106b8:	ldr	r2, [pc, #20]	; 106d4 <_start@@Base+0x5c>
   106bc:	add	r3, pc, r3
   106c0:	ldr	r2, [r3, r2]
   106c4:	cmp	r2, #0
   106c8:	bxeq	lr
   106cc:	b	10648 <__gmon_start__@plt>
   106d0:	andeq	r0, r1, ip, lsr r9
   106d4:	andeq	r0, r0, r0, lsr r0
   106d8:	ldr	r0, [pc, #24]	; 106f8 <_start@@Base+0x80>
   106dc:	ldr	r3, [pc, #24]	; 106fc <_start@@Base+0x84>
   106e0:	cmp	r3, r0
   106e4:	bxeq	lr
   106e8:	ldr	r3, [pc, #16]	; 10700 <_start@@Base+0x88>
   106ec:	cmp	r3, #0
   106f0:	bxeq	lr
   106f4:	bx	r3
   106f8:	andeq	r1, r2, ip, lsr r0
   106fc:	andeq	r1, r2, ip, lsr r0
   10700:	andeq	r0, r0, r0
   10704:	ldr	r0, [pc, #36]	; 10730 <_start@@Base+0xb8>
   10708:	ldr	r1, [pc, #36]	; 10734 <_start@@Base+0xbc>
   1070c:	sub	r1, r1, r0
   10710:	asr	r1, r1, #2
   10714:	add	r1, r1, r1, lsr #31
   10718:	asrs	r1, r1, #1
   1071c:	bxeq	lr
   10720:	ldr	r3, [pc, #16]	; 10738 <_start@@Base+0xc0>
   10724:	cmp	r3, #0
   10728:	bxeq	lr
   1072c:	bx	r3
   10730:	andeq	r1, r2, ip, lsr r0
   10734:	andeq	r1, r2, ip, lsr r0
   10738:	andeq	r0, r0, r0
   1073c:	push	{r4, lr}
   10740:	ldr	r4, [pc, #24]	; 10760 <_start@@Base+0xe8>
   10744:	ldrb	r3, [r4]
   10748:	cmp	r3, #0
   1074c:	popne	{r4, pc}
   10750:	bl	106d8 <_start@@Base+0x60>
   10754:	mov	r3, #1
   10758:	strb	r3, [r4]
   1075c:	pop	{r4, pc}
   10760:	andeq	r1, r2, ip, lsr r0
   10764:	b	10704 <_start@@Base+0x8c>

00010768 <main@@Base>:
   10768:	str	r4, [sp, #-12]!
   1076c:	str	fp, [sp, #4]
   10770:	str	lr, [sp, #8]
   10774:	add	fp, sp, #8
   10778:	sub	sp, sp, #28
   1077c:	mov	r3, #0
   10780:	str	r3, [fp, #-24]	; 0xffffffe8
   10784:	mov	r3, #0
   10788:	str	r3, [fp, #-28]	; 0xffffffe4
   1078c:	mov	r3, #0
   10790:	str	r3, [fp, #-32]	; 0xffffffe0
   10794:	movw	r0, #2448	; 0x990
   10798:	movt	r0, #1
   1079c:	bl	1060c <printf@plt>
   107a0:	mov	r0, #1
   107a4:	bl	10630 <malloc@plt>
   107a8:	mov	r3, r0
   107ac:	str	r3, [fp, #-16]
   107b0:	mov	r0, #1
   107b4:	bl	10630 <malloc@plt>
   107b8:	mov	r3, r0
   107bc:	str	r3, [fp, #-20]	; 0xffffffec
   107c0:	b	1088c <main@@Base+0x124>
   107c4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   107c8:	cmp	r3, #32
   107cc:	beq	107dc <main@@Base+0x74>
   107d0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   107d4:	cmp	r3, #10
   107d8:	bne	10848 <main@@Base+0xe0>
   107dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   107e0:	bl	10654 <strlen@plt>
   107e4:	mov	r4, r0
   107e8:	ldr	r0, [fp, #-16]
   107ec:	bl	10654 <strlen@plt>
   107f0:	mov	r3, r0
   107f4:	cmp	r4, r3
   107f8:	bls	10824 <main@@Base+0xbc>
   107fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   10800:	bl	10654 <strlen@plt>
   10804:	mov	r3, r0
   10808:	mov	r1, r3
   1080c:	ldr	r0, [fp, #-16]
   10810:	bl	10618 <realloc@plt>
   10814:	str	r0, [fp, #-16]
   10818:	ldr	r1, [fp, #-20]	; 0xffffffec
   1081c:	ldr	r0, [fp, #-16]
   10820:	bl	10624 <strcpy@plt>
   10824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10828:	add	r3, r3, #1
   1082c:	str	r3, [fp, #-24]	; 0xffffffe8
   10830:	mov	r3, #0
   10834:	str	r3, [fp, #-32]	; 0xffffffe0
   10838:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1083c:	cmp	r3, #10
   10840:	beq	108b0 <main@@Base+0x148>
   10844:	b	1088c <main@@Base+0x124>
   10848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1084c:	add	r3, r3, #1
   10850:	mov	r1, r3
   10854:	ldr	r0, [fp, #-20]	; 0xffffffec
   10858:	bl	10618 <realloc@plt>
   1085c:	str	r0, [fp, #-20]	; 0xffffffec
   10860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10864:	ldr	r2, [fp, #-20]	; 0xffffffec
   10868:	add	r3, r2, r3
   1086c:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   10870:	strb	r2, [r3]
   10874:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10878:	add	r3, r3, #1
   1087c:	str	r3, [fp, #-28]	; 0xffffffe4
   10880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10884:	add	r3, r3, #1
   10888:	str	r3, [fp, #-32]	; 0xffffffe0
   1088c:	sub	r3, fp, #33	; 0x21
   10890:	mov	r1, r3
   10894:	movw	r0, #2456	; 0x998
   10898:	movt	r0, #1
   1089c:	bl	10660 <__isoc99_scanf@plt>
   108a0:	mov	r3, r0
   108a4:	cmp	r3, #1
   108a8:	beq	107c4 <main@@Base+0x5c>
   108ac:	b	108b4 <main@@Base+0x14c>
   108b0:	nop	{0}
   108b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   108b8:	movw	r0, #2460	; 0x99c
   108bc:	movt	r0, #1
   108c0:	bl	1060c <printf@plt>
   108c4:	ldr	r1, [fp, #-16]
   108c8:	movw	r0, #2484	; 0x9b4
   108cc:	movt	r0, #1
   108d0:	bl	1060c <printf@plt>
   108d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   108d8:	vmov	s15, r3
   108dc:	vcvt.f32.s32	s13, s15
   108e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108e4:	vmov	s15, r3
   108e8:	vcvt.f32.s32	s14, s15
   108ec:	vdiv.f32	s15, s13, s14
   108f0:	vcvt.f64.f32	d7, s15
   108f4:	vmov	r2, r3, d7
   108f8:	movw	r0, #2504	; 0x9c8
   108fc:	movt	r0, #1
   10900:	bl	1060c <printf@plt>
   10904:	mov	r3, #0
   10908:	mov	r0, r3
   1090c:	sub	sp, fp, #8
   10910:	ldr	r4, [sp]
   10914:	ldr	fp, [sp, #4]
   10918:	add	sp, sp, #8
   1091c:	pop	{pc}		; (ldr pc, [sp], #4)

00010920 <__libc_csu_init@@Base>:
   10920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10924:	mov	r7, r0
   10928:	ldr	r6, [pc, #72]	; 10978 <__libc_csu_init@@Base+0x58>
   1092c:	ldr	r5, [pc, #72]	; 1097c <__libc_csu_init@@Base+0x5c>
   10930:	add	r6, pc, r6
   10934:	add	r5, pc, r5
   10938:	sub	r6, r6, r5
   1093c:	mov	r8, r1
   10940:	mov	r9, r2
   10944:	bl	105ec <printf@plt-0x20>
   10948:	asrs	r6, r6, #2
   1094c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10950:	mov	r4, #0
   10954:	add	r4, r4, #1
   10958:	ldr	r3, [r5], #4
   1095c:	mov	r2, r9
   10960:	mov	r1, r8
   10964:	mov	r0, r7
   10968:	blx	r3
   1096c:	cmp	r6, r4
   10970:	bne	10954 <__libc_csu_init@@Base+0x34>
   10974:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10978:	ldrdeq	r0, [r1], -ip
   1097c:	ldrdeq	r0, [r1], -r4

00010980 <__libc_csu_fini@@Base>:
   10980:	bx	lr

Disassembly of section .fini:

00010984 <.fini>:
   10984:	push	{r3, lr}
   10988:	pop	{r3, pc}
