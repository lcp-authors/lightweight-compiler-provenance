
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_match_filefilter>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #64	; 0x40
   c:	ldr	ip, [fp, #8]
  10:	str	r0, [fp, #-8]
  14:	str	r1, [fp, #-12]
  18:	str	r2, [fp, #-16]
  1c:	str	r3, [fp, #-20]	; 0xffffffec
  20:	ldr	r0, [fp, #-12]
  24:	cmp	r0, #0
  28:	str	ip, [sp, #12]
  2c:	ble	50 <coda_match_filefilter+0x50>
  30:	ldr	r0, [fp, #-16]
  34:	movw	r1, #0
  38:	cmp	r0, r1
  3c:	beq	50 <coda_match_filefilter+0x50>
  40:	ldr	r0, [fp, #-20]	; 0xffffffec
  44:	movw	r1, #0
  48:	cmp	r0, r1
  4c:	bne	78 <coda_match_filefilter+0x78>
  50:	mvn	r0, #99	; 0x63
  54:	movw	r1, #0
  58:	movt	r1, #0
  5c:	movw	r2, #0
  60:	movt	r2, #0
  64:	movw	r3, #386	; 0x182
  68:	bl	0 <coda_set_error>
  6c:	mvn	r0, #0
  70:	str	r0, [fp, #-4]
  74:	b	1e4 <coda_match_filefilter+0x1e4>
  78:	ldr	r0, [fp, #-8]
  7c:	movw	r1, #0
  80:	cmp	r0, r1
  84:	beq	98 <coda_match_filefilter+0x98>
  88:	ldr	r0, [fp, #-8]
  8c:	ldrb	r0, [r0]
  90:	cmp	r0, #0
  94:	bne	a4 <coda_match_filefilter+0xa4>
  98:	movw	r0, #0
  9c:	movt	r0, #0
  a0:	str	r0, [fp, #-8]
  a4:	ldr	r0, [fp, #-8]
  a8:	add	r1, sp, #24
  ac:	bl	0 <coda_expression_from_string>
  b0:	cmp	r0, #0
  b4:	beq	c4 <coda_match_filefilter+0xc4>
  b8:	mvn	r0, #0
  bc:	str	r0, [fp, #-4]
  c0:	b	1e4 <coda_match_filefilter+0x1e4>
  c4:	ldr	r0, [sp, #24]
  c8:	add	r1, sp, #28
  cc:	bl	0 <coda_expression_get_type>
  d0:	cmp	r0, #0
  d4:	beq	ec <coda_match_filefilter+0xec>
  d8:	ldr	r0, [sp, #24]
  dc:	bl	0 <coda_expression_delete>
  e0:	mvn	r0, #0
  e4:	str	r0, [fp, #-4]
  e8:	b	1e4 <coda_match_filefilter+0x1e4>
  ec:	ldr	r0, [sp, #28]
  f0:	cmp	r0, #0
  f4:	beq	11c <coda_match_filefilter+0x11c>
  f8:	mvn	r0, #400	; 0x190
  fc:	movw	r1, #0
 100:	movt	r1, #0
 104:	bl	0 <coda_set_error>
 108:	ldr	r0, [sp, #24]
 10c:	bl	0 <coda_expression_delete>
 110:	mvn	r0, #0
 114:	str	r0, [fp, #-4]
 118:	b	1e4 <coda_match_filefilter+0x1e4>
 11c:	add	r0, sp, #32
 120:	bl	1f0 <name_buffer_init>
 124:	movw	r0, #0
 128:	str	r0, [sp, #16]
 12c:	ldr	r0, [sp, #16]
 130:	ldr	r1, [fp, #-12]
 134:	cmp	r0, r1
 138:	bge	1cc <coda_match_filefilter+0x1cc>
 13c:	ldr	r0, [fp, #-16]
 140:	ldr	r1, [sp, #16]
 144:	add	r0, r0, r1, lsl #2
 148:	ldr	r1, [r0]
 14c:	add	r0, sp, #32
 150:	bl	29c <append_string_to_name_buffer>
 154:	ldr	r1, [sp, #24]
 158:	ldr	r3, [fp, #-20]	; 0xffffffec
 15c:	ldr	r0, [fp, #8]
 160:	movw	lr, #0
 164:	str	r0, [sp, #8]
 168:	mov	r0, lr
 16c:	add	r2, sp, #32
 170:	ldr	lr, [sp, #8]
 174:	str	lr, [sp]
 178:	bl	434 <coda_match_filepath>
 17c:	str	r0, [sp, #20]
 180:	ldr	r0, [sp, #20]
 184:	cmp	r0, #0
 188:	beq	1a8 <coda_match_filefilter+0x1a8>
 18c:	add	r0, sp, #32
 190:	bl	5c0 <name_buffer_done>
 194:	ldr	r0, [sp, #24]
 198:	bl	0 <coda_expression_delete>
 19c:	ldr	r0, [sp, #20]
 1a0:	str	r0, [fp, #-4]
 1a4:	b	1e4 <coda_match_filefilter+0x1e4>
 1a8:	movw	r0, #0
 1ac:	str	r0, [sp, #32]
 1b0:	ldr	r0, [sp, #40]	; 0x28
 1b4:	movw	r1, #0
 1b8:	strb	r1, [r0]
 1bc:	ldr	r0, [sp, #16]
 1c0:	add	r0, r0, #1
 1c4:	str	r0, [sp, #16]
 1c8:	b	12c <coda_match_filefilter+0x12c>
 1cc:	add	r0, sp, #32
 1d0:	bl	5c0 <name_buffer_done>
 1d4:	ldr	r0, [sp, #24]
 1d8:	bl	0 <coda_expression_delete>
 1dc:	movw	r0, #0
 1e0:	str	r0, [fp, #-4]
 1e4:	ldr	r0, [fp, #-4]
 1e8:	mov	sp, fp
 1ec:	pop	{fp, pc}

000001f0 <name_buffer_init>:
 1f0:	push	{fp, lr}
 1f4:	mov	fp, sp
 1f8:	sub	sp, sp, #8
 1fc:	str	r0, [sp, #4]
 200:	ldr	r0, [sp, #4]
 204:	movw	r1, #0
 208:	cmp	r0, r1
 20c:	beq	214 <name_buffer_init+0x24>
 210:	b	234 <name_buffer_init+0x44>
 214:	movw	r0, #0
 218:	movt	r0, #0
 21c:	movw	r1, #0
 220:	movt	r1, #0
 224:	movw	r2, #62	; 0x3e
 228:	movw	r3, #0
 22c:	movt	r3, #0
 230:	bl	0 <__assert_fail>
 234:	ldr	r0, [sp, #4]
 238:	movw	r1, #0
 23c:	str	r1, [r0]
 240:	ldr	r0, [sp, #4]
 244:	movw	r1, #1024	; 0x400
 248:	str	r1, [r0, #4]
 24c:	mov	r0, r1
 250:	bl	0 <malloc>
 254:	ldr	r1, [sp, #4]
 258:	str	r0, [r1, #8]
 25c:	ldr	r0, [sp, #4]
 260:	ldr	r0, [r0, #8]
 264:	movw	r1, #0
 268:	cmp	r0, r1
 26c:	beq	274 <name_buffer_init+0x84>
 270:	b	294 <name_buffer_init+0xa4>
 274:	movw	r0, #0
 278:	movt	r0, #0
 27c:	movw	r1, #0
 280:	movt	r1, #0
 284:	movw	r2, #67	; 0x43
 288:	movw	r3, #0
 28c:	movt	r3, #0
 290:	bl	0 <__assert_fail>
 294:	mov	sp, fp
 298:	pop	{fp, pc}

0000029c <append_string_to_name_buffer>:
 29c:	push	{fp, lr}
 2a0:	mov	fp, sp
 2a4:	sub	sp, sp, #32
 2a8:	str	r0, [fp, #-4]
 2ac:	str	r1, [fp, #-8]
 2b0:	ldr	r0, [fp, #-4]
 2b4:	movw	r1, #0
 2b8:	cmp	r0, r1
 2bc:	beq	2c4 <append_string_to_name_buffer+0x28>
 2c0:	b	2e4 <append_string_to_name_buffer+0x48>
 2c4:	movw	r0, #0
 2c8:	movt	r0, #0
 2cc:	movw	r1, #0
 2d0:	movt	r1, #0
 2d4:	movw	r2, #84	; 0x54
 2d8:	movw	r3, #0
 2dc:	movt	r3, #0
 2e0:	bl	0 <__assert_fail>
 2e4:	ldr	r0, [fp, #-8]
 2e8:	movw	r1, #0
 2ec:	cmp	r0, r1
 2f0:	beq	2f8 <append_string_to_name_buffer+0x5c>
 2f4:	b	318 <append_string_to_name_buffer+0x7c>
 2f8:	movw	r0, #0
 2fc:	movt	r0, #0
 300:	movw	r1, #0
 304:	movt	r1, #0
 308:	movw	r2, #85	; 0x55
 30c:	movw	r3, #0
 310:	movt	r3, #0
 314:	bl	0 <__assert_fail>
 318:	ldr	r0, [fp, #-8]
 31c:	bl	0 <strlen>
 320:	str	r0, [fp, #-12]
 324:	ldr	r0, [fp, #-4]
 328:	ldr	r0, [r0]
 32c:	ldr	lr, [fp, #-12]
 330:	add	r0, r0, lr
 334:	ldr	lr, [fp, #-4]
 338:	ldr	lr, [lr, #4]
 33c:	cmp	r0, lr
 340:	blt	3f8 <append_string_to_name_buffer+0x15c>
 344:	ldr	r0, [fp, #-4]
 348:	ldr	r0, [r0, #4]
 34c:	str	r0, [sp, #12]
 350:	ldr	r0, [sp, #12]
 354:	ldr	r1, [fp, #-4]
 358:	ldr	r1, [r1]
 35c:	ldr	r2, [fp, #-12]
 360:	add	r1, r1, r2
 364:	cmp	r0, r1
 368:	bge	37c <append_string_to_name_buffer+0xe0>
 36c:	ldr	r0, [sp, #12]
 370:	add	r0, r0, #1024	; 0x400
 374:	str	r0, [sp, #12]
 378:	b	350 <append_string_to_name_buffer+0xb4>
 37c:	ldr	r0, [sp, #12]
 380:	bl	0 <malloc>
 384:	str	r0, [sp, #16]
 388:	ldr	r0, [sp, #16]
 38c:	movw	lr, #0
 390:	cmp	r0, lr
 394:	beq	39c <append_string_to_name_buffer+0x100>
 398:	b	3bc <append_string_to_name_buffer+0x120>
 39c:	movw	r0, #0
 3a0:	movt	r0, #0
 3a4:	movw	r1, #0
 3a8:	movt	r1, #0
 3ac:	movw	r2, #100	; 0x64
 3b0:	movw	r3, #0
 3b4:	movt	r3, #0
 3b8:	bl	0 <__assert_fail>
 3bc:	ldr	r0, [sp, #16]
 3c0:	ldr	r1, [fp, #-4]
 3c4:	ldr	r1, [r1, #8]
 3c8:	bl	0 <strcpy>
 3cc:	ldr	r1, [fp, #-4]
 3d0:	ldr	r1, [r1, #8]
 3d4:	str	r0, [sp, #8]
 3d8:	mov	r0, r1
 3dc:	bl	0 <free>
 3e0:	ldr	r0, [sp, #16]
 3e4:	ldr	r1, [fp, #-4]
 3e8:	str	r0, [r1, #8]
 3ec:	ldr	r0, [sp, #12]
 3f0:	ldr	r1, [fp, #-4]
 3f4:	str	r0, [r1, #4]
 3f8:	ldr	r0, [fp, #-4]
 3fc:	ldr	r0, [r0, #8]
 400:	ldr	r1, [fp, #-4]
 404:	ldr	r1, [r1]
 408:	add	r0, r0, r1
 40c:	ldr	r1, [fp, #-8]
 410:	bl	0 <strcpy>
 414:	ldr	r1, [fp, #-12]
 418:	ldr	lr, [fp, #-4]
 41c:	ldr	r2, [lr]
 420:	add	r1, r2, r1
 424:	str	r1, [lr]
 428:	str	r0, [sp, #4]
 42c:	mov	sp, fp
 430:	pop	{fp, pc}

00000434 <coda_match_filepath>:
 434:	push	{fp, lr}
 438:	mov	fp, sp
 43c:	sub	sp, sp, #136	; 0x88
 440:	ldr	ip, [fp, #8]
 444:	str	r0, [fp, #-8]
 448:	str	r1, [fp, #-12]
 44c:	str	r2, [fp, #-16]
 450:	str	r3, [fp, #-20]	; 0xffffffec
 454:	ldr	r0, [fp, #-16]
 458:	ldr	r0, [r0, #8]
 45c:	add	r1, sp, #24
 460:	str	ip, [sp, #20]
 464:	bl	0 <stat>
 468:	cmp	r0, #0
 46c:	beq	50c <coda_match_filepath+0xd8>
 470:	bl	0 <__errno_location>
 474:	ldr	r0, [r0]
 478:	cmp	r0, #2
 47c:	beq	490 <coda_match_filepath+0x5c>
 480:	bl	0 <__errno_location>
 484:	ldr	r0, [r0]
 488:	cmp	r0, #20
 48c:	bne	4c4 <coda_match_filepath+0x90>
 490:	ldr	r0, [fp, #-20]	; 0xffffffec
 494:	ldr	r1, [fp, #-16]
 498:	ldr	r1, [r1, #8]
 49c:	ldr	r3, [fp, #8]
 4a0:	str	r0, [sp, #16]
 4a4:	mov	r0, r1
 4a8:	movw	r1, #0
 4ac:	movw	r2, #0
 4b0:	movt	r2, #0
 4b4:	ldr	ip, [sp, #16]
 4b8:	blx	ip
 4bc:	str	r0, [fp, #-4]
 4c0:	b	5b4 <coda_match_filepath+0x180>
 4c4:	ldr	r0, [fp, #-20]	; 0xffffffec
 4c8:	ldr	r1, [fp, #-16]
 4cc:	ldr	r1, [r1, #8]
 4d0:	str	r0, [sp, #12]
 4d4:	str	r1, [sp, #8]
 4d8:	bl	0 <__errno_location>
 4dc:	ldr	r0, [r0]
 4e0:	bl	0 <strerror>
 4e4:	ldr	r3, [fp, #8]
 4e8:	ldr	r1, [sp, #8]
 4ec:	str	r0, [sp, #4]
 4f0:	mov	r0, r1
 4f4:	movw	r1, #0
 4f8:	ldr	r2, [sp, #4]
 4fc:	ldr	lr, [sp, #12]
 500:	blx	lr
 504:	str	r0, [fp, #-4]
 508:	b	5b4 <coda_match_filepath+0x180>
 50c:	ldr	r0, [sp, #40]	; 0x28
 510:	and	r0, r0, #16384	; 0x4000
 514:	cmp	r0, #0
 518:	beq	538 <coda_match_filepath+0x104>
 51c:	ldr	r0, [fp, #-12]
 520:	ldr	r1, [fp, #-16]
 524:	ldr	r2, [fp, #-20]	; 0xffffffec
 528:	ldr	r3, [fp, #8]
 52c:	bl	638 <coda_match_dir>
 530:	str	r0, [fp, #-4]
 534:	b	5b4 <coda_match_filepath+0x180>
 538:	ldr	r0, [sp, #40]	; 0x28
 53c:	and	r0, r0, #32768	; 0x8000
 540:	cmp	r0, #0
 544:	beq	564 <coda_match_filepath+0x130>
 548:	ldr	r0, [fp, #-12]
 54c:	ldr	r1, [fp, #-16]
 550:	ldr	r2, [fp, #-20]	; 0xffffffec
 554:	ldr	r3, [fp, #8]
 558:	bl	7c0 <coda_match_file>
 55c:	str	r0, [fp, #-4]
 560:	b	5b4 <coda_match_filepath+0x180>
 564:	ldr	r0, [fp, #-8]
 568:	cmp	r0, #0
 56c:	bne	5a4 <coda_match_filepath+0x170>
 570:	ldr	r0, [fp, #-20]	; 0xffffffec
 574:	ldr	r1, [fp, #-16]
 578:	ldr	r1, [r1, #8]
 57c:	ldr	r3, [fp, #8]
 580:	str	r0, [sp]
 584:	mov	r0, r1
 588:	movw	r1, #0
 58c:	movw	r2, #0
 590:	movt	r2, #0
 594:	ldr	ip, [sp]
 598:	blx	ip
 59c:	str	r0, [fp, #-4]
 5a0:	b	5b4 <coda_match_filepath+0x180>
 5a4:	b	5a8 <coda_match_filepath+0x174>
 5a8:	b	5ac <coda_match_filepath+0x178>
 5ac:	movw	r0, #0
 5b0:	str	r0, [fp, #-4]
 5b4:	ldr	r0, [fp, #-4]
 5b8:	mov	sp, fp
 5bc:	pop	{fp, pc}

000005c0 <name_buffer_done>:
 5c0:	push	{fp, lr}
 5c4:	mov	fp, sp
 5c8:	sub	sp, sp, #8
 5cc:	str	r0, [sp, #4]
 5d0:	ldr	r0, [sp, #4]
 5d4:	movw	r1, #0
 5d8:	cmp	r0, r1
 5dc:	beq	5e4 <name_buffer_done+0x24>
 5e0:	b	604 <name_buffer_done+0x44>
 5e4:	movw	r0, #0
 5e8:	movt	r0, #0
 5ec:	movw	r1, #0
 5f0:	movt	r1, #0
 5f4:	movw	r2, #72	; 0x48
 5f8:	movw	r3, #0
 5fc:	movt	r3, #0
 600:	bl	0 <__assert_fail>
 604:	ldr	r0, [sp, #4]
 608:	movw	r1, #0
 60c:	str	r1, [r0]
 610:	ldr	r0, [sp, #4]
 614:	str	r1, [r0, #4]
 618:	ldr	r0, [sp, #4]
 61c:	ldr	r0, [r0, #8]
 620:	bl	0 <free>
 624:	ldr	r0, [sp, #4]
 628:	movw	r1, #0
 62c:	str	r1, [r0, #8]
 630:	mov	sp, fp
 634:	pop	{fp, pc}

00000638 <coda_match_dir>:
 638:	push	{fp, lr}
 63c:	mov	fp, sp
 640:	sub	sp, sp, #56	; 0x38
 644:	str	r0, [fp, #-8]
 648:	str	r1, [fp, #-12]
 64c:	str	r2, [fp, #-16]
 650:	str	r3, [fp, #-20]	; 0xffffffec
 654:	ldr	r0, [fp, #-12]
 658:	ldr	r0, [r0, #8]
 65c:	bl	0 <opendir>
 660:	str	r0, [fp, #-24]	; 0xffffffe8
 664:	ldr	r0, [fp, #-24]	; 0xffffffe8
 668:	movw	r1, #0
 66c:	cmp	r0, r1
 670:	bne	6a8 <coda_match_dir+0x70>
 674:	ldr	r0, [fp, #-16]
 678:	ldr	r1, [fp, #-12]
 67c:	ldr	r1, [r1, #8]
 680:	ldr	r3, [fp, #-20]	; 0xffffffec
 684:	str	r0, [sp, #16]
 688:	mov	r0, r1
 68c:	movw	r1, #2
 690:	movw	r2, #0
 694:	movt	r2, #0
 698:	ldr	ip, [sp, #16]
 69c:	blx	ip
 6a0:	str	r0, [fp, #-4]
 6a4:	b	7b4 <coda_match_dir+0x17c>
 6a8:	ldr	r0, [fp, #-12]
 6ac:	ldr	r0, [r0]
 6b0:	str	r0, [sp, #24]
 6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 6b8:	bl	0 <readdir>
 6bc:	str	r0, [sp, #28]
 6c0:	movw	lr, #0
 6c4:	cmp	r0, lr
 6c8:	beq	7a0 <coda_match_dir+0x168>
 6cc:	ldr	r0, [sp, #28]
 6d0:	add	r0, r0, #11
 6d4:	movw	r1, #0
 6d8:	movt	r1, #0
 6dc:	bl	0 <strcmp>
 6e0:	cmp	r0, #0
 6e4:	beq	704 <coda_match_dir+0xcc>
 6e8:	ldr	r0, [sp, #28]
 6ec:	add	r0, r0, #11
 6f0:	movw	r1, #0
 6f4:	movt	r1, #0
 6f8:	bl	0 <strcmp>
 6fc:	cmp	r0, #0
 700:	bne	708 <coda_match_dir+0xd0>
 704:	b	6b4 <coda_match_dir+0x7c>
 708:	ldr	r0, [fp, #-12]
 70c:	movw	r1, #0
 710:	movt	r1, #0
 714:	bl	29c <append_string_to_name_buffer>
 718:	ldr	r0, [fp, #-12]
 71c:	ldr	r1, [sp, #28]
 720:	add	r1, r1, #11
 724:	bl	29c <append_string_to_name_buffer>
 728:	ldr	r1, [fp, #-8]
 72c:	ldr	r2, [fp, #-12]
 730:	ldr	r3, [fp, #-16]
 734:	ldr	r0, [fp, #-20]	; 0xffffffec
 738:	movw	lr, #1
 73c:	str	r0, [sp, #12]
 740:	mov	r0, lr
 744:	ldr	lr, [sp, #12]
 748:	str	lr, [sp]
 74c:	bl	434 <coda_match_filepath>
 750:	str	r0, [sp, #20]
 754:	ldr	r0, [sp, #20]
 758:	cmp	r0, #0
 75c:	beq	778 <coda_match_dir+0x140>
 760:	ldr	r0, [fp, #-24]	; 0xffffffe8
 764:	bl	0 <closedir>
 768:	ldr	lr, [sp, #20]
 76c:	str	lr, [fp, #-4]
 770:	str	r0, [sp, #8]
 774:	b	7b4 <coda_match_dir+0x17c>
 778:	ldr	r0, [sp, #24]
 77c:	ldr	r1, [fp, #-12]
 780:	str	r0, [r1]
 784:	ldr	r0, [fp, #-12]
 788:	ldr	r0, [r0, #8]
 78c:	ldr	r1, [sp, #24]
 790:	add	r0, r0, r1
 794:	movw	r1, #0
 798:	strb	r1, [r0]
 79c:	b	6b4 <coda_match_dir+0x7c>
 7a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 7a4:	bl	0 <closedir>
 7a8:	movw	lr, #0
 7ac:	str	lr, [fp, #-4]
 7b0:	str	r0, [sp, #4]
 7b4:	ldr	r0, [fp, #-4]
 7b8:	mov	sp, fp
 7bc:	pop	{fp, pc}

000007c0 <coda_match_file>:
 7c0:	push	{r4, r5, fp, lr}
 7c4:	add	fp, sp, #8
 7c8:	sub	sp, sp, #632	; 0x278
 7cc:	str	r0, [fp, #-16]
 7d0:	str	r1, [fp, #-20]	; 0xffffffec
 7d4:	str	r2, [fp, #-24]	; 0xffffffe8
 7d8:	str	r3, [fp, #-28]	; 0xffffffe4
 7dc:	ldr	r0, [fp, #-20]	; 0xffffffec
 7e0:	ldr	r0, [r0, #8]
 7e4:	sub	r1, fp, #32
 7e8:	bl	0 <coda_open>
 7ec:	str	r0, [sp, #80]	; 0x50
 7f0:	ldr	r0, [sp, #80]	; 0x50
 7f4:	cmp	r0, #0
 7f8:	beq	84c <coda_match_file+0x8c>
 7fc:	ldr	r0, [pc, #572]	; a40 <coda_match_file+0x280>
 800:	ldr	r0, [pc, r0]
 804:	str	r0, [sp, #76]	; 0x4c
 808:	bl	0 <__aeabi_read_tp>
 80c:	ldr	ip, [sp, #76]	; 0x4c
 810:	ldr	r0, [r0, ip]
 814:	cmn	r0, #21
 818:	bne	84c <coda_match_file+0x8c>
 81c:	movw	r0, #0
 820:	bl	0 <coda_set_option_use_mmap>
 824:	ldr	lr, [fp, #-20]	; 0xffffffec
 828:	ldr	lr, [lr, #8]
 82c:	str	r0, [sp, #72]	; 0x48
 830:	mov	r0, lr
 834:	sub	r1, fp, #32
 838:	bl	0 <coda_open>
 83c:	str	r0, [sp, #80]	; 0x50
 840:	movw	r0, #1
 844:	bl	0 <coda_set_option_use_mmap>
 848:	str	r0, [sp, #68]	; 0x44
 84c:	ldr	r0, [sp, #80]	; 0x50
 850:	cmp	r0, #0
 854:	beq	900 <coda_match_file+0x140>
 858:	ldr	r0, [pc, #492]	; a4c <coda_match_file+0x28c>
 85c:	ldr	r0, [pc, r0]
 860:	str	r0, [sp, #64]	; 0x40
 864:	bl	0 <__aeabi_read_tp>
 868:	ldr	ip, [sp, #64]	; 0x40
 86c:	ldr	r0, [r0, ip]
 870:	cmn	r0, #200	; 0xc8
 874:	bne	8a8 <coda_match_file+0xe8>
 878:	ldr	r0, [fp, #-24]	; 0xffffffe8
 87c:	ldr	r1, [fp, #-20]	; 0xffffffec
 880:	ldr	r1, [r1, #8]
 884:	ldr	r3, [fp, #-28]	; 0xffffffe4
 888:	str	r0, [sp, #60]	; 0x3c
 88c:	mov	r0, r1
 890:	movw	r1, #3
 894:	movw	r2, #0
 898:	ldr	ip, [sp, #60]	; 0x3c
 89c:	blx	ip
 8a0:	str	r0, [fp, #-12]
 8a4:	b	a34 <coda_match_file+0x274>
 8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8ac:	ldr	r1, [fp, #-20]	; 0xffffffec
 8b0:	ldr	r1, [r1, #8]
 8b4:	ldr	r2, [pc, #404]	; a50 <coda_match_file+0x290>
 8b8:	ldr	r2, [pc, r2]
 8bc:	str	r0, [sp, #56]	; 0x38
 8c0:	str	r1, [sp, #52]	; 0x34
 8c4:	str	r2, [sp, #48]	; 0x30
 8c8:	bl	0 <__aeabi_read_tp>
 8cc:	ldr	r1, [sp, #48]	; 0x30
 8d0:	ldr	r0, [r0, r1]
 8d4:	bl	0 <coda_errno_to_string>
 8d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8dc:	ldr	r1, [sp, #52]	; 0x34
 8e0:	str	r0, [sp, #44]	; 0x2c
 8e4:	mov	r0, r1
 8e8:	movw	r1, #1
 8ec:	ldr	r2, [sp, #44]	; 0x2c
 8f0:	ldr	ip, [sp, #56]	; 0x38
 8f4:	blx	ip
 8f8:	str	r0, [fp, #-12]
 8fc:	b	a34 <coda_match_file+0x274>
 900:	ldr	r1, [fp, #-32]	; 0xffffffe0
 904:	add	r0, sp, #88	; 0x58
 908:	bl	0 <coda_cursor_set_product>
 90c:	cmp	r0, #0
 910:	beq	978 <coda_match_file+0x1b8>
 914:	ldr	r0, [fp, #-32]	; 0xffffffe0
 918:	bl	0 <coda_close>
 91c:	ldr	lr, [fp, #-24]	; 0xffffffe8
 920:	ldr	r1, [fp, #-20]	; 0xffffffec
 924:	ldr	r1, [r1, #8]
 928:	ldr	r2, [pc, #280]	; a48 <coda_match_file+0x288>
 92c:	ldr	r2, [pc, r2]
 930:	str	r0, [sp, #40]	; 0x28
 934:	str	lr, [sp, #36]	; 0x24
 938:	str	r1, [sp, #32]
 93c:	str	r2, [sp, #28]
 940:	bl	0 <__aeabi_read_tp>
 944:	ldr	r1, [sp, #28]
 948:	ldr	r0, [r0, r1]
 94c:	bl	0 <coda_errno_to_string>
 950:	ldr	r3, [fp, #-28]	; 0xffffffe4
 954:	ldr	r1, [sp, #32]
 958:	str	r0, [sp, #24]
 95c:	mov	r0, r1
 960:	movw	r1, #0
 964:	ldr	r2, [sp, #24]
 968:	ldr	ip, [sp, #36]	; 0x24
 96c:	blx	ip
 970:	str	r0, [fp, #-12]
 974:	b	a34 <coda_match_file+0x274>
 978:	ldr	r0, [fp, #-16]
 97c:	add	r1, sp, #88	; 0x58
 980:	add	r2, sp, #84	; 0x54
 984:	bl	0 <coda_expression_eval_bool>
 988:	cmp	r0, #0
 98c:	beq	9e8 <coda_match_file+0x228>
 990:	ldr	r0, [fp, #-24]	; 0xffffffe8
 994:	ldr	r1, [fp, #-20]	; 0xffffffec
 998:	ldr	r1, [r1, #8]
 99c:	ldr	r2, [pc, #160]	; a44 <coda_match_file+0x284>
 9a0:	ldr	r2, [pc, r2]
 9a4:	str	r0, [sp, #20]
 9a8:	str	r1, [sp, #16]
 9ac:	str	r2, [sp, #12]
 9b0:	bl	0 <__aeabi_read_tp>
 9b4:	ldr	r1, [sp, #12]
 9b8:	ldr	r0, [r0, r1]
 9bc:	bl	0 <coda_errno_to_string>
 9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9c4:	ldr	r1, [sp, #16]
 9c8:	str	r0, [sp, #8]
 9cc:	mov	r0, r1
 9d0:	movw	r1, #0
 9d4:	ldr	r2, [sp, #8]
 9d8:	ldr	ip, [sp, #20]
 9dc:	blx	ip
 9e0:	str	r0, [fp, #-12]
 9e4:	b	a34 <coda_match_file+0x274>
 9e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 9ec:	bl	0 <coda_close>
 9f0:	ldr	lr, [fp, #-24]	; 0xffffffe8
 9f4:	ldr	r1, [fp, #-20]	; 0xffffffec
 9f8:	ldr	r1, [r1, #8]
 9fc:	ldr	r2, [sp, #84]	; 0x54
 a00:	cmp	r2, #0
 a04:	movw	r2, #0
 a08:	movne	r2, #1
 a0c:	tst	r2, #1
 a10:	movw	r2, #4
 a14:	moveq	r2, #5
 a18:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a1c:	str	r0, [sp, #4]
 a20:	mov	r0, r1
 a24:	mov	r1, r2
 a28:	movw	r2, #0
 a2c:	blx	lr
 a30:	str	r0, [fp, #-12]
 a34:	ldr	r0, [fp, #-12]
 a38:	sub	sp, fp, #8
 a3c:	pop	{r4, r5, fp, pc}
 a40:	.word	0x00000238
 a44:	.word	0x0000009c
 a48:	.word	0x00000114
 a4c:	.word	0x000001e8
 a50:	.word	0x00000190
