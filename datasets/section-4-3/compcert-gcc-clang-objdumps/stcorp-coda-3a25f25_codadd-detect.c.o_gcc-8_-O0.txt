
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-detect.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <indent>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #8
  10:	movw	r3, #0
  14:	movt	r3, #0
  18:	ldr	r3, [r3]
  1c:	cmp	r3, #0
  20:	bge	44 <indent+0x44>
  24:	movw	r3, #0
  28:	movt	r3, #0
  2c:	mov	r2, #52	; 0x34
  30:	movw	r1, #0
  34:	movt	r1, #0
  38:	movw	r0, #0
  3c:	movt	r0, #0
  40:	bl	0 <__assert_fail>
  44:	movw	r3, #0
  48:	movt	r3, #0
  4c:	ldr	r3, [r3]
  50:	str	r3, [fp, #-8]
  54:	b	70 <indent+0x70>
  58:	movw	r0, #0
  5c:	movt	r0, #0
  60:	bl	0 <printf>
  64:	ldr	r3, [fp, #-8]
  68:	sub	r3, r3, #1
  6c:	str	r3, [fp, #-8]
  70:	ldr	r3, [fp, #-8]
  74:	cmp	r3, #0
  78:	bne	58 <indent+0x58>
  7c:	nop	{0}
  80:	sub	sp, fp, #4
  84:	ldr	fp, [sp]
  88:	add	sp, sp, #4
  8c:	pop	{pc}		; (ldr pc, [sp], #4)

00000090 <generate_detection_tree_sub>:
  90:	str	fp, [sp, #-8]!
  94:	str	lr, [sp, #4]
  98:	add	fp, sp, #4
  9c:	sub	sp, sp, #16
  a0:	str	r0, [fp, #-16]
  a4:	str	r1, [fp, #-20]	; 0xffffffec
  a8:	ldr	r3, [fp, #-16]
  ac:	cmp	r3, #0
  b0:	beq	258 <generate_detection_tree_sub+0x1c8>
  b4:	ldr	r3, [fp, #-16]
  b8:	ldr	r3, [r3]
  bc:	cmp	r3, #0
  c0:	bne	d4 <generate_detection_tree_sub+0x44>
  c4:	ldr	r3, [fp, #-16]
  c8:	ldr	r3, [r3, #4]
  cc:	cmp	r3, #0
  d0:	beq	1c4 <generate_detection_tree_sub+0x134>
  d4:	ldr	r3, [fp, #-16]
  d8:	ldr	r3, [r3]
  dc:	cmp	r3, #0
  e0:	beq	104 <generate_detection_tree_sub+0x74>
  e4:	bl	0 <indent>
  e8:	ldr	r3, [fp, #-16]
  ec:	ldr	r3, [r3]
  f0:	mov	r1, r3
  f4:	movw	r0, #0
  f8:	movt	r0, #0
  fc:	bl	0 <printf>
 100:	b	12c <generate_detection_tree_sub+0x9c>
 104:	ldr	r3, [fp, #-20]	; 0xffffffec
 108:	add	r3, r3, #1
 10c:	str	r3, [fp, #-20]	; 0xffffffec
 110:	bl	0 <indent>
 114:	ldr	r3, [fp, #-16]
 118:	ldr	r3, [r3, #4]
 11c:	movw	r1, #0
 120:	movt	r1, #0
 124:	mov	r0, r3
 128:	bl	0 <coda_expression_print>
 12c:	ldr	r3, [fp, #-16]
 130:	ldr	r3, [r3, #8]
 134:	cmp	r3, #0
 138:	beq	1bc <generate_detection_tree_sub+0x12c>
 13c:	ldr	r3, [fp, #-16]
 140:	ldr	r3, [r3, #8]
 144:	ldr	r3, [r3, #8]
 148:	str	r3, [fp, #-12]
 14c:	ldr	r3, [fp, #-12]
 150:	ldr	r3, [r3, #44]	; 0x2c
 154:	ldr	r3, [r3, #20]
 158:	ldr	r1, [r3]
 15c:	ldr	r3, [fp, #-12]
 160:	ldr	r3, [r3, #44]	; 0x2c
 164:	ldr	r2, [r3]
 168:	ldr	r3, [fp, #-12]
 16c:	ldr	r3, [r3, #4]
 170:	movw	r0, #0
 174:	movt	r0, #0
 178:	bl	0 <printf>
 17c:	ldr	r3, [fp, #-16]
 180:	ldr	r3, [r3, #12]
 184:	cmp	r3, #0
 188:	ble	1ac <generate_detection_tree_sub+0x11c>
 18c:	ldr	r3, [fp, #-16]
 190:	ldr	r3, [r3, #12]
 194:	mov	r2, r3
 198:	ldr	r1, [fp, #-20]	; 0xffffffec
 19c:	movw	r0, #0
 1a0:	movt	r0, #0
 1a4:	bl	0 <printf>
 1a8:	b	1bc <generate_detection_tree_sub+0x12c>
 1ac:	ldr	r1, [fp, #-20]	; 0xffffffec
 1b0:	movw	r0, #0
 1b4:	movt	r0, #0
 1b8:	bl	0 <printf>
 1bc:	mov	r0, #10
 1c0:	bl	0 <putchar>
 1c4:	mov	r3, #0
 1c8:	str	r3, [fp, #-8]
 1cc:	b	240 <generate_detection_tree_sub+0x1b0>
 1d0:	movw	r3, #0
 1d4:	movt	r3, #0
 1d8:	ldr	r3, [r3]
 1dc:	add	r2, r3, #1
 1e0:	movw	r3, #0
 1e4:	movt	r3, #0
 1e8:	str	r2, [r3]
 1ec:	ldr	r3, [fp, #-16]
 1f0:	ldr	r2, [r3, #16]
 1f4:	ldr	r3, [fp, #-8]
 1f8:	lsl	r3, r3, #2
 1fc:	add	r3, r2, r3
 200:	ldr	r0, [r3]
 204:	ldr	r2, [fp, #-20]	; 0xffffffec
 208:	ldr	r3, [fp, #-8]
 20c:	add	r3, r2, r3
 210:	mov	r1, r3
 214:	bl	90 <generate_detection_tree_sub>
 218:	movw	r3, #0
 21c:	movt	r3, #0
 220:	ldr	r3, [r3]
 224:	sub	r2, r3, #1
 228:	movw	r3, #0
 22c:	movt	r3, #0
 230:	str	r2, [r3]
 234:	ldr	r3, [fp, #-8]
 238:	add	r3, r3, #1
 23c:	str	r3, [fp, #-8]
 240:	ldr	r3, [fp, #-16]
 244:	ldr	r3, [r3, #12]
 248:	ldr	r2, [fp, #-8]
 24c:	cmp	r2, r3
 250:	blt	1d0 <generate_detection_tree_sub+0x140>
 254:	b	25c <generate_detection_tree_sub+0x1cc>
 258:	nop	{0}
 25c:	sub	sp, fp, #4
 260:	ldr	fp, [sp]
 264:	add	sp, sp, #4
 268:	pop	{pc}		; (ldr pc, [sp], #4)

0000026c <generate_detection_tree>:
 26c:	str	fp, [sp, #-8]!
 270:	str	lr, [sp, #4]
 274:	add	fp, sp, #4
 278:	sub	sp, sp, #8
 27c:	str	r0, [fp, #-8]
 280:	ldr	r0, [fp, #-8]
 284:	bl	0 <coda_data_dictionary_get_detection_tree>
 288:	mov	r3, r0
 28c:	mov	r1, #0
 290:	mov	r0, r3
 294:	bl	90 <generate_detection_tree_sub>
 298:	nop	{0}
 29c:	sub	sp, fp, #4
 2a0:	ldr	fp, [sp]
 2a4:	add	sp, sp, #4
 2a8:	pop	{pc}		; (ldr pc, [sp], #4)
