
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_definition>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #56	; 0x38
       c:	str	r0, [fp, #-4]
      10:	str	r1, [fp, #-8]
      14:	ldr	r0, [fp, #-8]
      18:	sub	r1, fp, #12
      1c:	bl	0 <coda_open>
      20:	str	r0, [fp, #-16]
      24:	ldr	r0, [fp, #-16]
      28:	cmp	r0, #0
      2c:	beq	78 <generate_definition+0x78>
      30:	ldr	r0, [pc, #388]	; 1bc <generate_definition+0x1bc>
      34:	ldr	r0, [pc, r0]
      38:	str	r0, [fp, #-20]	; 0xffffffec
      3c:	bl	0 <__aeabi_read_tp>
      40:	ldr	r1, [fp, #-20]	; 0xffffffec
      44:	ldr	r0, [r0, r1]
      48:	cmn	r0, #21
      4c:	bne	78 <generate_definition+0x78>
      50:	movw	r0, #0
      54:	bl	0 <coda_set_option_use_mmap>
      58:	ldr	r1, [fp, #-8]
      5c:	str	r0, [fp, #-24]	; 0xffffffe8
      60:	mov	r0, r1
      64:	sub	r1, fp, #12
      68:	bl	0 <coda_open>
      6c:	str	r0, [fp, #-16]
      70:	movw	r0, #1
      74:	bl	0 <coda_set_option_use_mmap>
      78:	ldr	r0, [fp, #-16]
      7c:	cmp	r0, #0
      80:	beq	f4 <generate_definition+0xf4>
      84:	movw	r0, #0
      88:	movt	r0, #0
      8c:	ldr	r0, [r0]
      90:	ldr	r1, [pc, #296]	; 1c0 <generate_definition+0x1c0>
      94:	ldr	r1, [pc, r1]
      98:	str	r0, [sp, #28]
      9c:	str	r1, [sp, #24]
      a0:	bl	0 <__aeabi_read_tp>
      a4:	ldr	r1, [sp, #24]
      a8:	ldr	r0, [r0, r1]
      ac:	bl	0 <coda_errno_to_string>
      b0:	ldr	r1, [sp, #28]
      b4:	str	r0, [sp, #20]
      b8:	mov	r0, r1
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	ldr	r2, [sp, #20]
      c8:	bl	0 <fprintf>
      cc:	movw	r1, #0
      d0:	movt	r1, #0
      d4:	ldr	r1, [r1]
      d8:	str	r0, [sp, #16]
      dc:	mov	r0, r1
      e0:	bl	0 <fflush>
      e4:	movw	r1, #1
      e8:	str	r0, [sp, #12]
      ec:	mov	r0, r1
      f0:	bl	0 <exit>
      f4:	movw	r0, #0
      f8:	movt	r0, #0
      fc:	ldr	r0, [r0]
     100:	movw	r1, #0
     104:	movt	r1, #0
     108:	str	r0, [r1]
     10c:	ldr	r0, [fp, #-4]
     110:	movw	r1, #0
     114:	cmp	r0, r1
     118:	beq	190 <generate_definition+0x190>
     11c:	ldr	r0, [fp, #-4]
     120:	movw	r1, #0
     124:	movt	r1, #0
     128:	bl	0 <fopen>
     12c:	movw	r1, #0
     130:	movt	r1, #0
     134:	str	r0, [r1]
     138:	ldr	r0, [r1]
     13c:	movw	r1, #0
     140:	cmp	r0, r1
     144:	bne	18c <generate_definition+0x18c>
     148:	movw	r0, #0
     14c:	movt	r0, #0
     150:	ldr	r0, [r0]
     154:	ldr	r2, [fp, #-4]
     158:	movw	r1, #0
     15c:	movt	r1, #0
     160:	bl	0 <fprintf>
     164:	movw	r1, #0
     168:	movt	r1, #0
     16c:	ldr	r1, [r1]
     170:	str	r0, [sp, #8]
     174:	mov	r0, r1
     178:	bl	0 <fflush>
     17c:	movw	r1, #1
     180:	str	r0, [sp, #4]
     184:	mov	r0, r1
     188:	bl	0 <exit>
     18c:	b	190 <generate_definition+0x190>
     190:	movw	r0, #0
     194:	movt	r0, #0
     198:	bl	1c4 <ff_printf>
     19c:	ldr	r1, [fp, #-12]
     1a0:	str	r0, [sp]
     1a4:	mov	r0, r1
     1a8:	bl	228 <generate_product_definition>
     1ac:	ldr	r0, [fp, #-12]
     1b0:	bl	0 <coda_close>
     1b4:	mov	sp, fp
     1b8:	pop	{fp, pc}
     1bc:	.word	0x00000180
     1c0:	.word	0x00000124

000001c4 <ff_printf>:
     1c4:	sub	sp, sp, #12
     1c8:	push	{fp, lr}
     1cc:	mov	fp, sp
     1d0:	sub	sp, sp, #20
     1d4:	str	r3, [fp, #16]
     1d8:	str	r2, [fp, #12]
     1dc:	str	r1, [fp, #8]
     1e0:	str	r0, [fp, #-4]
     1e4:	add	r0, fp, #8
     1e8:	str	r0, [sp, #8]
     1ec:	movw	r0, #0
     1f0:	movt	r0, #0
     1f4:	ldr	r0, [r0]
     1f8:	ldr	r1, [fp, #-4]
     1fc:	ldr	r2, [sp, #8]
     200:	bl	0 <vfprintf>
     204:	str	r0, [fp, #-8]
     208:	add	r0, sp, #8
     20c:	ldr	r1, [fp, #-8]
     210:	str	r0, [sp, #4]
     214:	mov	r0, r1
     218:	mov	sp, fp
     21c:	pop	{fp, lr}
     220:	add	sp, sp, #12
     224:	bx	lr

00000228 <generate_product_definition>:
     228:	push	{fp, lr}
     22c:	mov	fp, sp
     230:	sub	sp, sp, #72	; 0x48
     234:	str	r0, [fp, #-4]
     238:	ldr	r0, [fp, #-4]
     23c:	ldr	r0, [r0, #24]
     240:	str	r0, [fp, #-8]
     244:	ldr	r0, [fp, #-4]
     248:	ldr	r0, [r0, #20]
     24c:	ldr	r0, [r0]
     250:	cmp	r0, #100	; 0x64
     254:	bcs	268 <generate_product_definition+0x40>
     258:	ldr	r0, [fp, #-4]
     25c:	ldr	r0, [r0, #20]
     260:	str	r0, [sp, #20]
     264:	b	278 <generate_product_definition+0x50>
     268:	ldr	r0, [fp, #-4]
     26c:	ldr	r0, [r0, #20]
     270:	ldr	r0, [r0, #4]
     274:	str	r0, [sp, #20]
     278:	ldr	r0, [sp, #20]
     27c:	str	r0, [fp, #-12]
     280:	ldr	r0, [fp, #-4]
     284:	ldr	r0, [r0, #16]
     288:	str	r0, [fp, #-16]
     28c:	movw	r0, #0
     290:	movt	r0, #0
     294:	str	r0, [fp, #-20]	; 0xffffffec
     298:	sub	r0, fp, #35	; 0x23
     29c:	movw	r1, #0
     2a0:	and	r1, r1, #255	; 0xff
     2a4:	movw	r2, #15
     2a8:	bl	0 <memset>
     2ac:	ldr	r0, [fp, #-8]
     2b0:	movw	r1, #0
     2b4:	cmp	r0, r1
     2b8:	beq	2e0 <generate_product_definition+0xb8>
     2bc:	ldr	r0, [fp, #-8]
     2c0:	ldr	r0, [r0, #8]
     2c4:	str	r0, [fp, #-20]	; 0xffffffec
     2c8:	ldr	r0, [fp, #-8]
     2cc:	ldr	r0, [r0]
     2d0:	str	r0, [fp, #-16]
     2d4:	ldr	r0, [fp, #-8]
     2d8:	ldr	r0, [r0, #28]
     2dc:	str	r0, [fp, #-12]
     2e0:	ldr	r0, [fp, #-12]
     2e4:	movw	r1, #0
     2e8:	cmp	r0, r1
     2ec:	bne	30c <generate_product_definition+0xe4>
     2f0:	ldr	r0, [fp, #-4]
     2f4:	ldr	r0, [r0, #16]
     2f8:	str	r0, [fp, #-16]
     2fc:	ldr	r0, [fp, #-4]
     300:	ldr	r0, [r0, #20]
     304:	ldr	r0, [r0, #4]
     308:	str	r0, [fp, #-12]
     30c:	movw	r0, #0
     310:	bl	0 <time>
     314:	str	r0, [sp, #28]
     318:	add	r0, sp, #28
     31c:	bl	0 <localtime>
     320:	str	r0, [sp, #32]
     324:	ldr	r0, [sp, #32]
     328:	movw	r1, #0
     32c:	cmp	r0, r1
     330:	beq	378 <generate_product_definition+0x150>
     334:	sub	r0, fp, #35	; 0x23
     338:	ldr	r1, [sp, #32]
     33c:	ldr	r1, [r1, #20]
     340:	movw	r2, #1900	; 0x76c
     344:	add	r2, r1, r2
     348:	ldr	r1, [sp, #32]
     34c:	ldr	r1, [r1, #16]
     350:	add	r3, r1, #1
     354:	ldr	r1, [sp, #32]
     358:	ldr	r1, [r1, #12]
     35c:	movw	ip, #0
     360:	movt	ip, #0
     364:	str	r1, [sp, #16]
     368:	mov	r1, ip
     36c:	ldr	ip, [sp, #16]
     370:	str	ip, [sp]
     374:	bl	0 <sprintf>
     378:	ldr	r1, [fp, #-20]	; 0xffffffec
     37c:	ldr	r0, [fp, #-4]
     380:	ldr	r0, [r0, #16]
     384:	str	r1, [sp, #12]
     388:	bl	0 <coda_type_get_format_name>
     38c:	sub	r3, fp, #35	; 0x23
     390:	movw	r1, #0
     394:	movt	r1, #0
     398:	str	r0, [sp, #8]
     39c:	mov	r0, r1
     3a0:	ldr	r1, [sp, #12]
     3a4:	ldr	r2, [sp, #8]
     3a8:	bl	45c <fi_printf>
     3ac:	movw	r1, #0
     3b0:	movt	r1, #0
     3b4:	ldr	r2, [r1]
     3b8:	add	r2, r2, #1
     3bc:	str	r2, [r1]
     3c0:	ldr	r1, [fp, #-12]
     3c4:	ldr	r2, [fp, #-16]
     3c8:	str	r0, [sp, #4]
     3cc:	mov	r0, r1
     3d0:	mov	r1, r2
     3d4:	bl	4c4 <generate_type>
     3d8:	ldr	r0, [fp, #-8]
     3dc:	movw	r1, #0
     3e0:	cmp	r0, r1
     3e4:	beq	430 <generate_product_definition+0x208>
     3e8:	movw	r0, #0
     3ec:	str	r0, [sp, #24]
     3f0:	ldr	r0, [sp, #24]
     3f4:	ldr	r1, [fp, #-8]
     3f8:	ldr	r1, [r1, #32]
     3fc:	cmp	r0, r1
     400:	bge	42c <generate_product_definition+0x204>
     404:	ldr	r0, [fp, #-8]
     408:	ldr	r0, [r0, #36]	; 0x24
     40c:	ldr	r1, [sp, #24]
     410:	add	r0, r0, r1, lsl #2
     414:	ldr	r0, [r0]
     418:	bl	1568 <generate_product_variable>
     41c:	ldr	r0, [sp, #24]
     420:	add	r0, r0, #1
     424:	str	r0, [sp, #24]
     428:	b	3f0 <generate_product_definition+0x1c8>
     42c:	b	430 <generate_product_definition+0x208>
     430:	movw	r0, #0
     434:	movt	r0, #0
     438:	ldr	r1, [r0]
     43c:	mvn	r2, #0
     440:	add	r1, r1, r2
     444:	str	r1, [r0]
     448:	movw	r0, #0
     44c:	movt	r0, #0
     450:	bl	45c <fi_printf>
     454:	mov	sp, fp
     458:	pop	{fp, pc}

0000045c <fi_printf>:
     45c:	sub	sp, sp, #12
     460:	push	{fp, lr}
     464:	mov	fp, sp
     468:	sub	sp, sp, #20
     46c:	str	r3, [fp, #16]
     470:	str	r2, [fp, #12]
     474:	str	r1, [fp, #8]
     478:	str	r0, [fp, #-4]
     47c:	bl	1660 <indent>
     480:	add	r0, fp, #8
     484:	str	r0, [sp, #8]
     488:	movw	r0, #0
     48c:	movt	r0, #0
     490:	ldr	r0, [r0]
     494:	ldr	r1, [fp, #-4]
     498:	ldr	r2, [sp, #8]
     49c:	bl	0 <vfprintf>
     4a0:	str	r0, [fp, #-8]
     4a4:	add	r0, sp, #8
     4a8:	ldr	r1, [fp, #-8]
     4ac:	str	r0, [sp, #4]
     4b0:	mov	r0, r1
     4b4:	mov	sp, fp
     4b8:	pop	{fp, lr}
     4bc:	add	sp, sp, #12
     4c0:	bx	lr

000004c4 <generate_type>:
     4c4:	push	{r4, r5, fp, lr}
     4c8:	add	fp, sp, #8
     4cc:	sub	sp, sp, #384	; 0x180
     4d0:	str	r0, [fp, #-12]
     4d4:	str	r1, [fp, #-16]
     4d8:	mov	r0, #0
     4dc:	str	r0, [fp, #-24]	; 0xffffffe8
     4e0:	movw	r1, #0
     4e4:	movt	r1, #0
     4e8:	str	r1, [fp, #-32]	; 0xffffffe0
     4ec:	str	r0, [fp, #-44]	; 0xffffffd4
     4f0:	str	r0, [fp, #-48]	; 0xffffffd0
     4f4:	ldr	r0, [fp, #-12]
     4f8:	sub	r1, fp, #20
     4fc:	bl	0 <coda_type_get_class>
     500:	ldr	r1, [fp, #-12]
     504:	sub	r2, fp, #28
     508:	str	r0, [sp, #184]	; 0xb8
     50c:	mov	r0, r1
     510:	mov	r1, r2
     514:	bl	0 <coda_type_get_format>
     518:	ldr	r1, [fp, #-12]
     51c:	sub	r2, fp, #36	; 0x24
     520:	str	r0, [sp, #180]	; 0xb4
     524:	mov	r0, r1
     528:	mov	r1, r2
     52c:	bl	0 <coda_type_get_description>
     530:	ldr	r1, [fp, #-12]
     534:	sub	r2, fp, #40	; 0x28
     538:	str	r0, [sp, #176]	; 0xb0
     53c:	mov	r0, r1
     540:	mov	r1, r2
     544:	bl	0 <coda_type_get_attributes>
     548:	ldr	r1, [fp, #-20]	; 0xffffffec
     54c:	cmp	r1, #6
     550:	str	r1, [sp, #172]	; 0xac
     554:	bhi	728 <generate_type+0x264>
     558:	add	r0, pc, #8
     55c:	ldr	r1, [sp, #172]	; 0xac
     560:	ldr	r0, [r0, r1, lsl #2]
     564:	mov	pc, r0
     568:	.word	0x00000584
     56c:	.word	0x000005c0
     570:	.word	0x000005d0
     574:	.word	0x000005e0
     578:	.word	0x000005f0
     57c:	.word	0x00000688
     580:	.word	0x00000698
     584:	ldr	r0, [fp, #-12]
     588:	sub	r1, fp, #48	; 0x30
     58c:	bl	0 <coda_type_get_record_union_status>
     590:	ldr	r1, [fp, #-48]	; 0xffffffd0
     594:	cmp	r1, #0
     598:	movw	r1, #0
     59c:	movne	r1, #1
     5a0:	tst	r1, #1
     5a4:	movw	r1, #0
     5a8:	movt	r1, #0
     5ac:	movw	r2, #0
     5b0:	movt	r2, #0
     5b4:	movne	r1, r2
     5b8:	str	r1, [fp, #-32]	; 0xffffffe0
     5bc:	b	728 <generate_type+0x264>
     5c0:	movw	r0, #0
     5c4:	movt	r0, #0
     5c8:	str	r0, [fp, #-32]	; 0xffffffe0
     5cc:	b	728 <generate_type+0x264>
     5d0:	movw	r0, #0
     5d4:	movt	r0, #0
     5d8:	str	r0, [fp, #-32]	; 0xffffffe0
     5dc:	b	728 <generate_type+0x264>
     5e0:	movw	r0, #0
     5e4:	movt	r0, #0
     5e8:	str	r0, [fp, #-32]	; 0xffffffe0
     5ec:	b	728 <generate_type+0x264>
     5f0:	ldr	r0, [fp, #-12]
     5f4:	ldr	r0, [r0, #44]	; 0x2c
     5f8:	cmp	r0, #4
     5fc:	str	r0, [sp, #168]	; 0xa8
     600:	bhi	684 <generate_type+0x1c0>
     604:	add	r0, pc, #8
     608:	ldr	r1, [sp, #168]	; 0xa8
     60c:	ldr	r0, [r0, r1, lsl #2]
     610:	mov	pc, r0
     614:	.word	0x00000628
     618:	.word	0x00000638
     61c:	.word	0x00000648
     620:	.word	0x00000668
     624:	.word	0x00000678
     628:	movw	r0, #0
     62c:	movt	r0, #0
     630:	str	r0, [fp, #-32]	; 0xffffffe0
     634:	b	684 <generate_type+0x1c0>
     638:	movw	r0, #0
     63c:	movt	r0, #0
     640:	str	r0, [fp, #-32]	; 0xffffffe0
     644:	b	684 <generate_type+0x1c0>
     648:	movw	r0, #0
     64c:	movt	r0, #0
     650:	movw	r1, #0
     654:	movt	r1, #0
     658:	movw	r2, #273	; 0x111
     65c:	movw	r3, #0
     660:	movt	r3, #0
     664:	bl	0 <__assert_fail>
     668:	movw	r0, #0
     66c:	movt	r0, #0
     670:	str	r0, [fp, #-32]	; 0xffffffe0
     674:	b	684 <generate_type+0x1c0>
     678:	movw	r0, #0
     67c:	movt	r0, #0
     680:	str	r0, [fp, #-32]	; 0xffffffe0
     684:	b	728 <generate_type+0x264>
     688:	movw	r0, #0
     68c:	movt	r0, #0
     690:	str	r0, [fp, #-32]	; 0xffffffe0
     694:	b	728 <generate_type+0x264>
     698:	ldr	r0, [fp, #-12]
     69c:	sub	r1, fp, #24
     6a0:	bl	0 <coda_type_get_special_type>
     6a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
     6a8:	cmp	r1, #3
     6ac:	str	r1, [sp, #164]	; 0xa4
     6b0:	bhi	724 <generate_type+0x260>
     6b4:	add	r0, pc, #8
     6b8:	ldr	r1, [sp, #164]	; 0xa4
     6bc:	ldr	r0, [r0, r1, lsl #2]
     6c0:	mov	pc, r0
     6c4:	.word	0x00000704
     6c8:	.word	0x000006d4
     6cc:	.word	0x000006e4
     6d0:	.word	0x000006f4
     6d4:	movw	r0, #0
     6d8:	movt	r0, #0
     6dc:	str	r0, [fp, #-32]	; 0xffffffe0
     6e0:	b	724 <generate_type+0x260>
     6e4:	movw	r0, #0
     6e8:	movt	r0, #0
     6ec:	str	r0, [fp, #-32]	; 0xffffffe0
     6f0:	b	724 <generate_type+0x260>
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	str	r0, [fp, #-32]	; 0xffffffe0
     700:	b	724 <generate_type+0x260>
     704:	movw	r0, #0
     708:	movt	r0, #0
     70c:	movw	r1, #0
     710:	movt	r1, #0
     714:	movw	r2, #301	; 0x12d
     718:	movw	r3, #0
     71c:	movt	r3, #0
     720:	bl	0 <__assert_fail>
     724:	b	728 <generate_type+0x264>
     728:	ldr	r1, [fp, #-32]	; 0xffffffe0
     72c:	movw	r0, #0
     730:	movt	r0, #0
     734:	bl	45c <fi_printf>
     738:	ldr	r1, [fp, #-28]	; 0xffffffe4
     73c:	ldr	r2, [fp, #-16]
     740:	cmp	r1, r2
     744:	beq	768 <generate_type+0x2a4>
     748:	ldr	r0, [fp, #-28]	; 0xffffffe4
     74c:	bl	0 <coda_type_get_format_name>
     750:	movw	r1, #0
     754:	movt	r1, #0
     758:	str	r0, [sp, #160]	; 0xa0
     75c:	mov	r0, r1
     760:	ldr	r1, [sp, #160]	; 0xa0
     764:	bl	1c4 <ff_printf>
     768:	ldr	r0, [fp, #-20]	; 0xffffffec
     76c:	cmp	r0, #6
     770:	bne	7bc <generate_type+0x2f8>
     774:	ldr	r0, [fp, #-24]	; 0xffffffe8
     778:	cmp	r0, #2
     77c:	bne	7bc <generate_type+0x2f8>
     780:	movw	r0, #0
     784:	movt	r0, #0
     788:	bl	1c4 <ff_printf>
     78c:	ldr	r1, [fp, #-12]
     790:	ldr	r1, [r1, #52]	; 0x34
     794:	str	r0, [sp, #156]	; 0x9c
     798:	mov	r0, r1
     79c:	movw	r1, #0
     7a0:	movt	r1, #0
     7a4:	bl	0 <coda_expression_print_xml>
     7a8:	movw	r1, #0
     7ac:	movt	r1, #0
     7b0:	str	r0, [sp, #152]	; 0x98
     7b4:	mov	r0, r1
     7b8:	bl	1c4 <ff_printf>
     7bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
     7c0:	movw	r1, #0
     7c4:	cmp	r0, r1
     7c8:	beq	7fc <generate_type+0x338>
     7cc:	sub	r0, fp, #44	; 0x2c
     7d0:	movw	r1, #0
     7d4:	movt	r1, #0
     7d8:	bl	16f4 <fic_printf>
     7dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
     7e0:	str	r0, [sp, #148]	; 0x94
     7e4:	mov	r0, r1
     7e8:	mvn	r1, #0
     7ec:	bl	1798 <generate_xml_string>
     7f0:	movw	r0, #0
     7f4:	movt	r0, #0
     7f8:	bl	1c4 <ff_printf>
     7fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
     800:	cmp	r0, #0
     804:	beq	814 <generate_type+0x350>
     808:	ldr	r0, [fp, #-28]	; 0xffffffe4
     80c:	cmp	r0, #1
     810:	bne	9ec <generate_type+0x528>
     814:	ldr	r0, [fp, #-20]	; 0xffffffec
     818:	cmp	r0, #2
     81c:	beq	844 <generate_type+0x380>
     820:	ldr	r0, [fp, #-20]	; 0xffffffec
     824:	cmp	r0, #3
     828:	beq	844 <generate_type+0x380>
     82c:	ldr	r0, [fp, #-20]	; 0xffffffec
     830:	cmp	r0, #4
     834:	beq	844 <generate_type+0x380>
     838:	ldr	r0, [fp, #-20]	; 0xffffffec
     83c:	cmp	r0, #5
     840:	bne	9ec <generate_type+0x528>
     844:	ldr	r0, [fp, #-12]
     848:	ldr	r0, [r0, #28]
     84c:	cmp	r0, #0
     850:	bmi	914 <generate_type+0x450>
     854:	b	858 <generate_type+0x394>
     858:	ldr	r0, [fp, #-12]
     85c:	ldr	r1, [r0, #24]
     860:	ldr	r0, [r0, #28]
     864:	asr	r2, r0, #31
     868:	adds	r2, r1, r2, lsr #29
     86c:	adc	r3, r0, #0
     870:	bic	r2, r2, #7
     874:	subs	r1, r1, r2
     878:	sbc	r0, r0, r3
     87c:	orr	r0, r1, r0
     880:	cmp	r0, #0
     884:	bne	8dc <generate_type+0x418>
     888:	b	88c <generate_type+0x3c8>
     88c:	sub	r2, fp, #73	; 0x49
     890:	ldr	r0, [fp, #-12]
     894:	ldr	r1, [r0, #24]
     898:	ldr	r0, [r0, #28]
     89c:	asr	r3, r0, #31
     8a0:	adds	r1, r1, r3, lsr #29
     8a4:	adc	r0, r0, #0
     8a8:	lsr	r1, r1, #3
     8ac:	orr	r1, r1, r0, lsl #29
     8b0:	asr	r0, r0, #3
     8b4:	str	r0, [sp, #144]	; 0x90
     8b8:	mov	r0, r1
     8bc:	ldr	r1, [sp, #144]	; 0x90
     8c0:	bl	0 <coda_str64>
     8c4:	sub	r2, fp, #73	; 0x49
     8c8:	sub	r0, fp, #44	; 0x2c
     8cc:	movw	r1, #0
     8d0:	movt	r1, #0
     8d4:	bl	16f4 <fic_printf>
     8d8:	b	910 <generate_type+0x44c>
     8dc:	sub	r2, fp, #73	; 0x49
     8e0:	ldr	r0, [fp, #-12]
     8e4:	ldr	r1, [r0, #24]
     8e8:	ldr	r0, [r0, #28]
     8ec:	str	r0, [sp, #140]	; 0x8c
     8f0:	mov	r0, r1
     8f4:	ldr	r1, [sp, #140]	; 0x8c
     8f8:	bl	0 <coda_str64>
     8fc:	sub	r2, fp, #73	; 0x49
     900:	sub	r0, fp, #44	; 0x2c
     904:	movw	r1, #0
     908:	movt	r1, #0
     90c:	bl	16f4 <fic_printf>
     910:	b	9e8 <generate_type+0x524>
     914:	ldr	r0, [fp, #-12]
     918:	ldr	r0, [r0, #32]
     91c:	movw	r1, #0
     920:	cmp	r0, r1
     924:	beq	9e4 <generate_type+0x520>
     928:	ldr	r0, [fp, #-12]
     92c:	ldr	r1, [r0, #24]
     930:	ldr	r0, [r0, #28]
     934:	mvn	r2, #7
     938:	eor	r1, r1, r2
     93c:	mvn	r0, r0
     940:	orr	r0, r1, r0
     944:	movw	r1, #0
     948:	movt	r1, #0
     94c:	movw	r3, #0
     950:	movt	r3, #0
     954:	cmp	r0, #0
     958:	moveq	r3, r1
     95c:	movw	r1, #0
     960:	movt	r1, #0
     964:	sub	r0, fp, #44	; 0x2c
     968:	str	r2, [sp, #136]	; 0x88
     96c:	mov	r2, r3
     970:	bl	16f4 <fic_printf>
     974:	ldr	r1, [fp, #-12]
     978:	ldr	r1, [r1, #32]
     97c:	movw	r2, #0
     980:	movt	r2, #0
     984:	str	r0, [sp, #132]	; 0x84
     988:	mov	r0, r1
     98c:	mov	r1, r2
     990:	bl	0 <coda_expression_print_xml>
     994:	ldr	r1, [fp, #-12]
     998:	ldr	r2, [r1, #24]
     99c:	ldr	r1, [r1, #28]
     9a0:	ldr	r3, [sp, #136]	; 0x88
     9a4:	eor	r2, r2, r3
     9a8:	mvn	r1, r1
     9ac:	orr	r1, r2, r1
     9b0:	clz	r1, r1
     9b4:	lsr	r1, r1, #5
     9b8:	tst	r1, #1
     9bc:	movw	r1, #0
     9c0:	movt	r1, #0
     9c4:	movw	r2, #0
     9c8:	movt	r2, #0
     9cc:	movne	r1, r2
     9d0:	movw	r2, #0
     9d4:	movt	r2, #0
     9d8:	str	r0, [sp, #128]	; 0x80
     9dc:	mov	r0, r2
     9e0:	bl	1c4 <ff_printf>
     9e4:	b	9e8 <generate_type+0x524>
     9e8:	b	9ec <generate_type+0x528>
     9ec:	ldr	r0, [fp, #-20]	; 0xffffffec
     9f0:	cmp	r0, #0
     9f4:	bne	a98 <generate_type+0x5d4>
     9f8:	ldr	r0, [fp, #-12]
     9fc:	ldr	r0, [r0, #32]
     a00:	movw	r1, #0
     a04:	cmp	r0, r1
     a08:	beq	a98 <generate_type+0x5d4>
     a0c:	ldr	r0, [fp, #-12]
     a10:	ldr	r1, [r0, #24]
     a14:	ldr	r0, [r0, #28]
     a18:	mvn	r2, #7
     a1c:	eor	r1, r1, r2
     a20:	mvn	r0, r0
     a24:	orr	r0, r1, r0
     a28:	cmp	r0, #0
     a2c:	beq	a38 <generate_type+0x574>
     a30:	b	a34 <generate_type+0x570>
     a34:	b	a58 <generate_type+0x594>
     a38:	movw	r0, #0
     a3c:	movt	r0, #0
     a40:	movw	r1, #0
     a44:	movt	r1, #0
     a48:	movw	r2, #352	; 0x160
     a4c:	movw	r3, #0
     a50:	movt	r3, #0
     a54:	bl	0 <__assert_fail>
     a58:	sub	r0, fp, #44	; 0x2c
     a5c:	movw	r1, #0
     a60:	movt	r1, #0
     a64:	bl	16f4 <fic_printf>
     a68:	ldr	r1, [fp, #-12]
     a6c:	ldr	r1, [r1, #32]
     a70:	str	r0, [sp, #124]	; 0x7c
     a74:	mov	r0, r1
     a78:	movw	r1, #0
     a7c:	movt	r1, #0
     a80:	bl	0 <coda_expression_print_xml>
     a84:	movw	r1, #0
     a88:	movt	r1, #0
     a8c:	str	r0, [sp, #120]	; 0x78
     a90:	mov	r0, r1
     a94:	bl	1c4 <ff_printf>
     a98:	ldr	r0, [fp, #-12]
     a9c:	ldr	r0, [r0, #36]	; 0x24
     aa0:	movw	r1, #0
     aa4:	cmp	r0, r1
     aa8:	beq	c64 <generate_type+0x7a0>
     aac:	movw	r0, #0
     ab0:	str	r0, [fp, #-52]	; 0xffffffcc
     ab4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     ab8:	ldr	r1, [fp, #-12]
     abc:	ldr	r1, [r1, #36]	; 0x24
     ac0:	ldr	r1, [r1, #48]	; 0x30
     ac4:	cmp	r0, r1
     ac8:	bge	c60 <generate_type+0x79c>
     acc:	ldr	r0, [fp, #-12]
     ad0:	ldr	r0, [r0, #36]	; 0x24
     ad4:	ldr	r0, [r0, #52]	; 0x34
     ad8:	ldr	r1, [fp, #-52]	; 0xffffffcc
     adc:	add	r0, r0, r1, lsl #2
     ae0:	ldr	r0, [r0]
     ae4:	str	r0, [fp, #-80]	; 0xffffffb0
     ae8:	ldr	r0, [fp, #-80]	; 0xffffffb0
     aec:	ldr	r2, [r0]
     af0:	sub	r0, fp, #44	; 0x2c
     af4:	movw	r1, #0
     af8:	movt	r1, #0
     afc:	bl	16f4 <fic_printf>
     b00:	ldr	r1, [fp, #-80]	; 0xffffffb0
     b04:	ldr	r1, [r1, #4]
     b08:	movw	r2, #0
     b0c:	cmp	r1, r2
     b10:	beq	b60 <generate_type+0x69c>
     b14:	ldr	r0, [fp, #-80]	; 0xffffffb0
     b18:	ldr	r0, [r0, #4]
     b1c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     b20:	ldr	r1, [r1]
     b24:	bl	0 <strcmp>
     b28:	cmp	r0, #0
     b2c:	beq	b60 <generate_type+0x69c>
     b30:	movw	r0, #0
     b34:	movt	r0, #0
     b38:	bl	1c4 <ff_printf>
     b3c:	ldr	r1, [fp, #-80]	; 0xffffffb0
     b40:	ldr	r1, [r1, #4]
     b44:	str	r0, [sp, #116]	; 0x74
     b48:	mov	r0, r1
     b4c:	mvn	r1, #0
     b50:	bl	1798 <generate_xml_string>
     b54:	movw	r0, #0
     b58:	movt	r0, #0
     b5c:	bl	1c4 <ff_printf>
     b60:	movw	r0, #0
     b64:	movt	r0, #0
     b68:	bl	1c4 <ff_printf>
     b6c:	movw	r1, #0
     b70:	movt	r1, #0
     b74:	ldr	r2, [r1]
     b78:	add	r2, r2, #1
     b7c:	str	r2, [r1]
     b80:	ldr	r1, [fp, #-80]	; 0xffffffb0
     b84:	ldr	r1, [r1, #8]
     b88:	ldr	r2, [fp, #-28]	; 0xffffffe4
     b8c:	str	r0, [sp, #112]	; 0x70
     b90:	mov	r0, r1
     b94:	mov	r1, r2
     b98:	bl	4c4 <generate_type>
     b9c:	ldr	r0, [fp, #-80]	; 0xffffffb0
     ba0:	ldr	r0, [r0, #12]
     ba4:	cmp	r0, #0
     ba8:	beq	bb8 <generate_type+0x6f4>
     bac:	movw	r0, #0
     bb0:	movt	r0, #0
     bb4:	bl	45c <fi_printf>
     bb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
     bbc:	ldrsb	r0, [r0, #16]
     bc0:	cmp	r0, #0
     bc4:	beq	c2c <generate_type+0x768>
     bc8:	ldr	r0, [fp, #-80]	; 0xffffffb0
     bcc:	ldr	r0, [r0, #20]
     bd0:	movw	r1, #0
     bd4:	cmp	r0, r1
     bd8:	beq	c1c <generate_type+0x758>
     bdc:	movw	r0, #0
     be0:	movt	r0, #0
     be4:	bl	45c <fi_printf>
     be8:	ldr	r1, [fp, #-80]	; 0xffffffb0
     bec:	ldr	r1, [r1, #20]
     bf0:	str	r0, [sp, #108]	; 0x6c
     bf4:	mov	r0, r1
     bf8:	movw	r1, #0
     bfc:	movt	r1, #0
     c00:	bl	0 <coda_expression_print_xml>
     c04:	movw	r1, #0
     c08:	movt	r1, #0
     c0c:	str	r0, [sp, #104]	; 0x68
     c10:	mov	r0, r1
     c14:	bl	1c4 <ff_printf>
     c18:	b	c28 <generate_type+0x764>
     c1c:	movw	r0, #0
     c20:	movt	r0, #0
     c24:	bl	45c <fi_printf>
     c28:	b	c2c <generate_type+0x768>
     c2c:	movw	r0, #0
     c30:	movt	r0, #0
     c34:	ldr	r1, [r0]
     c38:	mvn	r2, #0
     c3c:	add	r1, r1, r2
     c40:	str	r1, [r0]
     c44:	movw	r0, #0
     c48:	movt	r0, #0
     c4c:	bl	45c <fi_printf>
     c50:	ldr	r0, [fp, #-52]	; 0xffffffcc
     c54:	add	r0, r0, #1
     c58:	str	r0, [fp, #-52]	; 0xffffffcc
     c5c:	b	ab4 <generate_type+0x5f0>
     c60:	b	c64 <generate_type+0x7a0>
     c64:	ldr	r0, [fp, #-20]	; 0xffffffec
     c68:	cmp	r0, #6
     c6c:	str	r0, [sp, #100]	; 0x64
     c70:	bhi	151c <generate_type+0x1058>
     c74:	add	r0, pc, #8
     c78:	ldr	r1, [sp, #100]	; 0x64
     c7c:	ldr	r0, [r0, r1, lsl #2]
     c80:	mov	pc, r0
     c84:	.word	0x00000ca0
     c88:	.word	0x00000f54
     c8c:	.word	0x000010a8
     c90:	.word	0x000010a8
     c94:	.word	0x000013a0
     c98:	.word	0x0000142c
     c9c:	.word	0x00001488
     ca0:	ldr	r0, [fp, #-48]	; 0xffffffd0
     ca4:	cmp	r0, #0
     ca8:	beq	d00 <generate_type+0x83c>
     cac:	ldr	r0, [fp, #-12]
     cb0:	ldr	r0, [r0, #68]	; 0x44
     cb4:	movw	r1, #0
     cb8:	cmp	r0, r1
     cbc:	beq	d00 <generate_type+0x83c>
     cc0:	sub	r0, fp, #44	; 0x2c
     cc4:	movw	r1, #0
     cc8:	movt	r1, #0
     ccc:	bl	16f4 <fic_printf>
     cd0:	ldr	r1, [fp, #-12]
     cd4:	ldr	r1, [r1, #68]	; 0x44
     cd8:	str	r0, [sp, #96]	; 0x60
     cdc:	mov	r0, r1
     ce0:	movw	r1, #0
     ce4:	movt	r1, #0
     ce8:	bl	0 <coda_expression_print_xml>
     cec:	movw	r1, #0
     cf0:	movt	r1, #0
     cf4:	str	r0, [sp, #92]	; 0x5c
     cf8:	mov	r0, r1
     cfc:	bl	1c4 <ff_printf>
     d00:	ldr	r0, [fp, #-12]
     d04:	sub	r1, fp, #84	; 0x54
     d08:	bl	0 <coda_type_get_num_record_fields>
     d0c:	movw	r1, #0
     d10:	str	r1, [fp, #-52]	; 0xffffffcc
     d14:	ldr	r0, [fp, #-52]	; 0xffffffcc
     d18:	ldr	r1, [fp, #-84]	; 0xffffffac
     d1c:	cmp	r0, r1
     d20:	bge	f50 <generate_type+0xa8c>
     d24:	ldr	r0, [fp, #-12]
     d28:	ldr	r0, [r0, #52]	; 0x34
     d2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
     d30:	add	r0, r0, r1, lsl #2
     d34:	ldr	r0, [r0]
     d38:	str	r0, [fp, #-88]	; 0xffffffa8
     d3c:	ldr	r0, [fp, #-88]	; 0xffffffa8
     d40:	ldr	r2, [r0]
     d44:	sub	r0, fp, #44	; 0x2c
     d48:	movw	r1, #0
     d4c:	movt	r1, #0
     d50:	bl	16f4 <fic_printf>
     d54:	ldr	r1, [fp, #-88]	; 0xffffffa8
     d58:	ldr	r1, [r1, #4]
     d5c:	movw	r2, #0
     d60:	cmp	r1, r2
     d64:	beq	db4 <generate_type+0x8f0>
     d68:	ldr	r0, [fp, #-88]	; 0xffffffa8
     d6c:	ldr	r0, [r0, #4]
     d70:	ldr	r1, [fp, #-88]	; 0xffffffa8
     d74:	ldr	r1, [r1]
     d78:	bl	0 <strcmp>
     d7c:	cmp	r0, #0
     d80:	beq	db4 <generate_type+0x8f0>
     d84:	movw	r0, #0
     d88:	movt	r0, #0
     d8c:	bl	1c4 <ff_printf>
     d90:	ldr	r1, [fp, #-88]	; 0xffffffa8
     d94:	ldr	r1, [r1, #4]
     d98:	str	r0, [sp, #88]	; 0x58
     d9c:	mov	r0, r1
     da0:	mvn	r1, #0
     da4:	bl	1798 <generate_xml_string>
     da8:	movw	r0, #0
     dac:	movt	r0, #0
     db0:	bl	1c4 <ff_printf>
     db4:	movw	r0, #0
     db8:	movt	r0, #0
     dbc:	bl	1c4 <ff_printf>
     dc0:	movw	r1, #0
     dc4:	movt	r1, #0
     dc8:	ldr	r2, [r1]
     dcc:	add	r2, r2, #1
     dd0:	str	r2, [r1]
     dd4:	ldr	r1, [fp, #-88]	; 0xffffffa8
     dd8:	ldr	r1, [r1, #8]
     ddc:	ldr	r2, [fp, #-28]	; 0xffffffe4
     de0:	str	r0, [sp, #84]	; 0x54
     de4:	mov	r0, r1
     de8:	mov	r1, r2
     dec:	bl	4c4 <generate_type>
     df0:	ldr	r0, [fp, #-88]	; 0xffffffa8
     df4:	ldr	r0, [r0, #12]
     df8:	cmp	r0, #0
     dfc:	beq	e0c <generate_type+0x948>
     e00:	movw	r0, #0
     e04:	movt	r0, #0
     e08:	bl	45c <fi_printf>
     e0c:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e10:	ldrsb	r0, [r0, #16]
     e14:	cmp	r0, #0
     e18:	beq	e80 <generate_type+0x9bc>
     e1c:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e20:	ldr	r0, [r0, #20]
     e24:	movw	r1, #0
     e28:	cmp	r0, r1
     e2c:	beq	e70 <generate_type+0x9ac>
     e30:	movw	r0, #0
     e34:	movt	r0, #0
     e38:	bl	45c <fi_printf>
     e3c:	ldr	r1, [fp, #-88]	; 0xffffffa8
     e40:	ldr	r1, [r1, #20]
     e44:	str	r0, [sp, #80]	; 0x50
     e48:	mov	r0, r1
     e4c:	movw	r1, #0
     e50:	movt	r1, #0
     e54:	bl	0 <coda_expression_print_xml>
     e58:	movw	r1, #0
     e5c:	movt	r1, #0
     e60:	str	r0, [sp, #76]	; 0x4c
     e64:	mov	r0, r1
     e68:	bl	1c4 <ff_printf>
     e6c:	b	e7c <generate_type+0x9b8>
     e70:	movw	r0, #0
     e74:	movt	r0, #0
     e78:	bl	45c <fi_printf>
     e7c:	b	e80 <generate_type+0x9bc>
     e80:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e84:	ldr	r0, [r0, #28]
     e88:	cmp	r0, #0
     e8c:	bmi	ec8 <generate_type+0xa04>
     e90:	b	e94 <generate_type+0x9d0>
     e94:	sub	r2, fp, #109	; 0x6d
     e98:	ldr	r0, [fp, #-88]	; 0xffffffa8
     e9c:	ldr	r1, [r0, #24]
     ea0:	ldr	r0, [r0, #28]
     ea4:	str	r0, [sp, #72]	; 0x48
     ea8:	mov	r0, r1
     eac:	ldr	r1, [sp, #72]	; 0x48
     eb0:	bl	0 <coda_str64>
     eb4:	sub	r1, fp, #109	; 0x6d
     eb8:	movw	r0, #0
     ebc:	movt	r0, #0
     ec0:	bl	45c <fi_printf>
     ec4:	b	f1c <generate_type+0xa58>
     ec8:	ldr	r0, [fp, #-88]	; 0xffffffa8
     ecc:	ldr	r0, [r0, #32]
     ed0:	movw	r1, #0
     ed4:	cmp	r0, r1
     ed8:	beq	f18 <generate_type+0xa54>
     edc:	movw	r0, #0
     ee0:	movt	r0, #0
     ee4:	bl	45c <fi_printf>
     ee8:	ldr	r1, [fp, #-88]	; 0xffffffa8
     eec:	ldr	r1, [r1, #32]
     ef0:	str	r0, [sp, #68]	; 0x44
     ef4:	mov	r0, r1
     ef8:	movw	r1, #0
     efc:	movt	r1, #0
     f00:	bl	0 <coda_expression_print_xml>
     f04:	movw	r1, #0
     f08:	movt	r1, #0
     f0c:	str	r0, [sp, #64]	; 0x40
     f10:	mov	r0, r1
     f14:	bl	1c4 <ff_printf>
     f18:	b	f1c <generate_type+0xa58>
     f1c:	movw	r0, #0
     f20:	movt	r0, #0
     f24:	ldr	r1, [r0]
     f28:	mvn	r2, #0
     f2c:	add	r1, r1, r2
     f30:	str	r1, [r0]
     f34:	movw	r0, #0
     f38:	movt	r0, #0
     f3c:	bl	45c <fi_printf>
     f40:	ldr	r0, [fp, #-52]	; 0xffffffcc
     f44:	add	r0, r0, #1
     f48:	str	r0, [fp, #-52]	; 0xffffffcc
     f4c:	b	d14 <generate_type+0x850>
     f50:	b	151c <generate_type+0x1058>
     f54:	ldr	r0, [fp, #-12]
     f58:	str	r0, [fp, #-116]	; 0xffffff8c
     f5c:	movw	r0, #0
     f60:	str	r0, [fp, #-52]	; 0xffffffcc
     f64:	ldr	r0, [fp, #-52]	; 0xffffffcc
     f68:	ldr	r1, [fp, #-116]	; 0xffffff8c
     f6c:	ldr	r1, [r1, #48]	; 0x30
     f70:	cmp	r0, r1
     f74:	bge	1060 <generate_type+0xb9c>
     f78:	ldr	r0, [fp, #-116]	; 0xffffff8c
     f7c:	add	r0, r0, #52	; 0x34
     f80:	ldr	r1, [fp, #-52]	; 0xffffffcc
     f84:	add	r0, r0, r1, lsl #2
     f88:	ldr	r0, [r0]
     f8c:	cmp	r0, #0
     f90:	blt	fc8 <generate_type+0xb04>
     f94:	sub	r2, fp, #137	; 0x89
     f98:	ldr	r0, [fp, #-116]	; 0xffffff8c
     f9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
     fa0:	add	r0, r0, r1, lsl #2
     fa4:	ldr	r0, [r0, #52]	; 0x34
     fa8:	asr	r1, r0, #31
     fac:	bl	0 <coda_str64>
     fb0:	sub	r2, fp, #137	; 0x89
     fb4:	sub	r0, fp, #44	; 0x2c
     fb8:	movw	r1, #0
     fbc:	movt	r1, #0
     fc0:	bl	16f4 <fic_printf>
     fc4:	b	104c <generate_type+0xb88>
     fc8:	ldr	r0, [fp, #-116]	; 0xffffff8c
     fcc:	add	r0, r0, #84	; 0x54
     fd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
     fd4:	add	r0, r0, r1, lsl #2
     fd8:	ldr	r0, [r0]
     fdc:	movw	r1, #0
     fe0:	cmp	r0, r1
     fe4:	beq	1038 <generate_type+0xb74>
     fe8:	movw	r1, #0
     fec:	movt	r1, #0
     ff0:	sub	r0, fp, #44	; 0x2c
     ff4:	bl	16f4 <fic_printf>
     ff8:	ldr	r1, [fp, #-116]	; 0xffffff8c
     ffc:	add	r1, r1, #84	; 0x54
    1000:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1004:	add	r1, r1, r2, lsl #2
    1008:	ldr	r1, [r1]
    100c:	str	r0, [sp, #60]	; 0x3c
    1010:	mov	r0, r1
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	bl	0 <coda_expression_print_xml>
    1020:	movw	r1, #0
    1024:	movt	r1, #0
    1028:	str	r0, [sp, #56]	; 0x38
    102c:	mov	r0, r1
    1030:	bl	1c4 <ff_printf>
    1034:	b	1048 <generate_type+0xb84>
    1038:	sub	r0, fp, #44	; 0x2c
    103c:	movw	r1, #0
    1040:	movt	r1, #0
    1044:	bl	16f4 <fic_printf>
    1048:	b	104c <generate_type+0xb88>
    104c:	b	1050 <generate_type+0xb8c>
    1050:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1054:	add	r0, r0, #1
    1058:	str	r0, [fp, #-52]	; 0xffffffcc
    105c:	b	f64 <generate_type+0xaa0>
    1060:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1064:	cmp	r0, #0
    1068:	bne	1094 <generate_type+0xbd0>
    106c:	movw	r0, #0
    1070:	movt	r0, #0
    1074:	bl	1c4 <ff_printf>
    1078:	movw	r1, #1
    107c:	str	r1, [fp, #-44]	; 0xffffffd4
    1080:	movw	r1, #0
    1084:	movt	r1, #0
    1088:	ldr	r2, [r1]
    108c:	add	r2, r2, #1
    1090:	str	r2, [r1]
    1094:	ldr	r0, [fp, #-116]	; 0xffffff8c
    1098:	ldr	r0, [r0, #40]	; 0x28
    109c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10a0:	bl	4c4 <generate_type>
    10a4:	b	151c <generate_type+0x1058>
    10a8:	ldr	r0, [fp, #-12]
    10ac:	str	r0, [fp, #-144]	; 0xffffff70
    10b0:	ldr	r0, [fp, #-12]
    10b4:	ldr	r0, [r0, #12]
    10b8:	bl	0 <coda_type_get_native_type_name>
    10bc:	sub	r1, fp, #44	; 0x2c
    10c0:	str	r0, [sp, #52]	; 0x34
    10c4:	mov	r0, r1
    10c8:	movw	r1, #0
    10cc:	movt	r1, #0
    10d0:	ldr	r2, [sp, #52]	; 0x34
    10d4:	bl	16f4 <fic_printf>
    10d8:	ldr	r1, [fp, #-144]	; 0xffffff70
    10dc:	ldr	r1, [r1, #40]	; 0x28
    10e0:	movw	r2, #0
    10e4:	cmp	r1, r2
    10e8:	beq	111c <generate_type+0xc58>
    10ec:	movw	r0, #0
    10f0:	movt	r0, #0
    10f4:	bl	45c <fi_printf>
    10f8:	ldr	r1, [fp, #-144]	; 0xffffff70
    10fc:	ldr	r1, [r1, #40]	; 0x28
    1100:	str	r0, [sp, #48]	; 0x30
    1104:	mov	r0, r1
    1108:	mvn	r1, #0
    110c:	bl	1798 <generate_xml_string>
    1110:	movw	r0, #0
    1114:	movt	r0, #0
    1118:	bl	1c4 <ff_printf>
    111c:	ldr	r0, [fp, #-144]	; 0xffffff70
    1120:	ldr	r0, [r0, #44]	; 0x2c
    1124:	cmp	r0, #1
    1128:	bne	1138 <generate_type+0xc74>
    112c:	movw	r0, #0
    1130:	movt	r0, #0
    1134:	bl	45c <fi_printf>
    1138:	ldr	r0, [fp, #-144]	; 0xffffff70
    113c:	ldr	r0, [r0, #48]	; 0x30
    1140:	movw	r1, #0
    1144:	cmp	r0, r1
    1148:	beq	1294 <generate_type+0xdd0>
    114c:	ldr	r0, [fp, #-144]	; 0xffffff70
    1150:	ldr	r0, [r0, #48]	; 0x30
    1154:	vldr	d16, [r0]
    1158:	ldr	r0, [fp, #-144]	; 0xffffff70
    115c:	ldr	r0, [r0, #48]	; 0x30
    1160:	vldr	d17, [r0, #8]
    1164:	movw	r0, #0
    1168:	movt	r0, #0
    116c:	vmov	r2, r3, d16
    1170:	vstr	d17, [sp]
    1174:	bl	45c <fi_printf>
    1178:	ldr	r1, [fp, #-144]	; 0xffffff70
    117c:	ldr	r1, [r1, #48]	; 0x30
    1180:	vldr	d16, [r1, #16]
    1184:	vcmp.f64	d16, #0.0
    1188:	vmrs	APSR_nzcv, fpscr
    118c:	beq	11ac <generate_type+0xce8>
    1190:	ldr	r0, [fp, #-144]	; 0xffffff70
    1194:	ldr	r0, [r0, #48]	; 0x30
    1198:	vldr	d16, [r0, #16]
    119c:	movw	r0, #0
    11a0:	movt	r0, #0
    11a4:	vmov	r2, r3, d16
    11a8:	bl	1c4 <ff_printf>
    11ac:	ldr	r0, [fp, #-144]	; 0xffffff70
    11b0:	ldr	r0, [r0, #48]	; 0x30
    11b4:	vldr	d0, [r0, #24]
    11b8:	bl	0 <coda_isNaN>
    11bc:	cmp	r0, #0
    11c0:	bne	11e0 <generate_type+0xd1c>
    11c4:	ldr	r0, [fp, #-144]	; 0xffffff70
    11c8:	ldr	r0, [r0, #48]	; 0x30
    11cc:	vldr	d16, [r0, #24]
    11d0:	movw	r0, #0
    11d4:	movt	r0, #0
    11d8:	vmov	r2, r3, d16
    11dc:	bl	1c4 <ff_printf>
    11e0:	ldr	r0, [fp, #-144]	; 0xffffff70
    11e4:	ldr	r0, [r0, #48]	; 0x30
    11e8:	ldr	r0, [r0, #32]
    11ec:	movw	r1, #0
    11f0:	cmp	r0, r1
    11f4:	beq	1284 <generate_type+0xdc0>
    11f8:	movw	r0, #0
    11fc:	movt	r0, #0
    1200:	bl	1c4 <ff_printf>
    1204:	movw	r1, #0
    1208:	movt	r1, #0
    120c:	ldr	r2, [r1]
    1210:	add	r2, r2, #1
    1214:	str	r2, [r1]
    1218:	movw	r1, #0
    121c:	movt	r1, #0
    1220:	str	r0, [sp, #44]	; 0x2c
    1224:	mov	r0, r1
    1228:	bl	45c <fi_printf>
    122c:	ldr	r1, [fp, #-144]	; 0xffffff70
    1230:	ldr	r1, [r1, #48]	; 0x30
    1234:	ldr	r1, [r1, #32]
    1238:	str	r0, [sp, #40]	; 0x28
    123c:	mov	r0, r1
    1240:	mvn	r1, #0
    1244:	bl	1798 <generate_xml_string>
    1248:	movw	r0, #0
    124c:	movt	r0, #0
    1250:	bl	1c4 <ff_printf>
    1254:	movw	r1, #0
    1258:	movt	r1, #0
    125c:	ldr	r2, [r1]
    1260:	mvn	r3, #0
    1264:	add	r2, r2, r3
    1268:	str	r2, [r1]
    126c:	movw	r1, #0
    1270:	movt	r1, #0
    1274:	str	r0, [sp, #36]	; 0x24
    1278:	mov	r0, r1
    127c:	bl	45c <fi_printf>
    1280:	b	1290 <generate_type+0xdcc>
    1284:	movw	r0, #0
    1288:	movt	r0, #0
    128c:	bl	1c4 <ff_printf>
    1290:	b	1294 <generate_type+0xdd0>
    1294:	ldr	r0, [fp, #-144]	; 0xffffff70
    1298:	ldr	r0, [r0, #52]	; 0x34
    129c:	movw	r1, #0
    12a0:	cmp	r0, r1
    12a4:	beq	139c <generate_type+0xed8>
    12a8:	movw	r0, #0
    12ac:	str	r0, [fp, #-52]	; 0xffffffcc
    12b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    12b4:	ldr	r1, [fp, #-144]	; 0xffffff70
    12b8:	ldr	r1, [r1, #52]	; 0x34
    12bc:	ldr	r1, [r1, #8]
    12c0:	cmp	r0, r1
    12c4:	bge	1398 <generate_type+0xed4>
    12c8:	ldr	r0, [fp, #-144]	; 0xffffff70
    12cc:	ldr	r0, [r0, #52]	; 0x34
    12d0:	ldr	r0, [r0, #12]
    12d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    12d8:	add	r0, r0, r1, lsl #2
    12dc:	ldr	r0, [r0]
    12e0:	str	r0, [fp, #-148]	; 0xffffff6c
    12e4:	movw	r0, #0
    12e8:	movt	r0, #0
    12ec:	bl	45c <fi_printf>
    12f0:	ldr	r1, [fp, #-148]	; 0xffffff6c
    12f4:	ldr	r1, [r1, #4]
    12f8:	ldr	r2, [fp, #-148]	; 0xffffff6c
    12fc:	ldr	r2, [r2]
    1300:	str	r0, [sp, #32]
    1304:	mov	r0, r1
    1308:	mov	r1, r2
    130c:	bl	189c <generate_escaped_string>
    1310:	movw	r0, #0
    1314:	movt	r0, #0
    1318:	bl	1c4 <ff_printf>
    131c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1320:	cmp	r1, #2
    1324:	bne	135c <generate_type+0xe98>
    1328:	sub	r2, fp, #169	; 0xa9
    132c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    1330:	ldr	r1, [r0, #8]
    1334:	ldr	r0, [r0, #12]
    1338:	str	r0, [sp, #28]
    133c:	mov	r0, r1
    1340:	ldr	r1, [sp, #28]
    1344:	bl	0 <coda_str64>
    1348:	sub	r1, fp, #169	; 0xa9
    134c:	movw	r0, #0
    1350:	movt	r0, #0
    1354:	bl	1c4 <ff_printf>
    1358:	b	137c <generate_type+0xeb8>
    135c:	sub	r0, fp, #193	; 0xc1
    1360:	ldr	r1, [fp, #-148]	; 0xffffff6c
    1364:	vldr	d0, [r1, #8]
    1368:	bl	0 <coda_strfl>
    136c:	sub	r1, fp, #193	; 0xc1
    1370:	movw	r0, #0
    1374:	movt	r0, #0
    1378:	bl	1c4 <ff_printf>
    137c:	movw	r0, #0
    1380:	movt	r0, #0
    1384:	bl	1c4 <ff_printf>
    1388:	ldr	r0, [fp, #-52]	; 0xffffffcc
    138c:	add	r0, r0, #1
    1390:	str	r0, [fp, #-52]	; 0xffffffcc
    1394:	b	12b0 <generate_type+0xdec>
    1398:	b	139c <generate_type+0xed8>
    139c:	b	151c <generate_type+0x1058>
    13a0:	ldr	r0, [fp, #-12]
    13a4:	str	r0, [sp, #192]	; 0xc0
    13a8:	ldr	r0, [fp, #-12]
    13ac:	ldr	r0, [r0, #12]
    13b0:	cmp	r0, #11
    13b4:	beq	13e0 <generate_type+0xf1c>
    13b8:	ldr	r0, [fp, #-12]
    13bc:	ldr	r0, [r0, #12]
    13c0:	bl	0 <coda_type_get_native_type_name>
    13c4:	sub	r1, fp, #44	; 0x2c
    13c8:	str	r0, [sp, #24]
    13cc:	mov	r0, r1
    13d0:	movw	r1, #0
    13d4:	movt	r1, #0
    13d8:	ldr	r2, [sp, #24]
    13dc:	bl	16f4 <fic_printf>
    13e0:	ldr	r0, [sp, #192]	; 0xc0
    13e4:	ldr	r0, [r0, #40]	; 0x28
    13e8:	movw	r1, #0
    13ec:	cmp	r0, r1
    13f0:	beq	1428 <generate_type+0xf64>
    13f4:	sub	r0, fp, #44	; 0x2c
    13f8:	movw	r1, #0
    13fc:	movt	r1, #0
    1400:	bl	16f4 <fic_printf>
    1404:	ldr	r1, [sp, #192]	; 0xc0
    1408:	ldr	r1, [r1, #40]	; 0x28
    140c:	str	r0, [sp, #20]
    1410:	mov	r0, r1
    1414:	mvn	r1, #0
    1418:	bl	189c <generate_escaped_string>
    141c:	movw	r0, #0
    1420:	movt	r0, #0
    1424:	bl	1c4 <ff_printf>
    1428:	b	151c <generate_type+0x1058>
    142c:	ldr	r0, [fp, #-12]
    1430:	str	r0, [sp, #188]	; 0xbc
    1434:	ldr	r0, [sp, #188]	; 0xbc
    1438:	ldr	r0, [r0, #44]	; 0x2c
    143c:	movw	r1, #0
    1440:	cmp	r0, r1
    1444:	beq	1484 <generate_type+0xfc0>
    1448:	sub	r0, fp, #44	; 0x2c
    144c:	movw	r1, #0
    1450:	movt	r1, #0
    1454:	bl	16f4 <fic_printf>
    1458:	ldr	r1, [sp, #188]	; 0xbc
    145c:	ldr	r1, [r1, #44]	; 0x2c
    1460:	ldr	r2, [sp, #188]	; 0xbc
    1464:	ldr	r2, [r2, #40]	; 0x28
    1468:	str	r0, [sp, #16]
    146c:	mov	r0, r1
    1470:	mov	r1, r2
    1474:	bl	189c <generate_escaped_string>
    1478:	movw	r0, #0
    147c:	movt	r0, #0
    1480:	bl	1c4 <ff_printf>
    1484:	b	151c <generate_type+0x1058>
    1488:	ldr	r0, [fp, #-24]	; 0xffffffe8
    148c:	cmp	r0, #1
    1490:	bne	14d8 <generate_type+0x1014>
    1494:	ldr	r0, [fp, #-12]
    1498:	ldr	r0, [r0, #48]	; 0x30
    149c:	movw	r1, #0
    14a0:	cmp	r0, r1
    14a4:	beq	14d8 <generate_type+0x1014>
    14a8:	movw	r0, #0
    14ac:	movt	r0, #0
    14b0:	bl	45c <fi_printf>
    14b4:	ldr	r1, [fp, #-12]
    14b8:	ldr	r1, [r1, #48]	; 0x30
    14bc:	str	r0, [sp, #12]
    14c0:	mov	r0, r1
    14c4:	mvn	r1, #0
    14c8:	bl	1798 <generate_xml_string>
    14cc:	movw	r0, #0
    14d0:	movt	r0, #0
    14d4:	bl	1c4 <ff_printf>
    14d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    14dc:	cmp	r0, #0
    14e0:	bne	150c <generate_type+0x1048>
    14e4:	movw	r0, #0
    14e8:	movt	r0, #0
    14ec:	bl	1c4 <ff_printf>
    14f0:	movw	r1, #1
    14f4:	str	r1, [fp, #-44]	; 0xffffffd4
    14f8:	movw	r1, #0
    14fc:	movt	r1, #0
    1500:	ldr	r2, [r1]
    1504:	add	r2, r2, #1
    1508:	str	r2, [r1]
    150c:	ldr	r0, [fp, #-12]
    1510:	ldr	r0, [r0, #44]	; 0x2c
    1514:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1518:	bl	4c4 <generate_type>
    151c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1520:	cmp	r0, #0
    1524:	beq	1554 <generate_type+0x1090>
    1528:	movw	r0, #0
    152c:	movt	r0, #0
    1530:	ldr	r1, [r0]
    1534:	mvn	r2, #0
    1538:	add	r1, r1, r2
    153c:	str	r1, [r0]
    1540:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1544:	movw	r0, #0
    1548:	movt	r0, #0
    154c:	bl	45c <fi_printf>
    1550:	b	1560 <generate_type+0x109c>
    1554:	movw	r0, #0
    1558:	movt	r0, #0
    155c:	bl	1c4 <ff_printf>
    1560:	sub	sp, fp, #8
    1564:	pop	{r4, r5, fp, pc}

00001568 <generate_product_variable>:
    1568:	push	{fp, lr}
    156c:	mov	fp, sp
    1570:	sub	sp, sp, #24
    1574:	str	r0, [fp, #-4]
    1578:	ldr	r0, [fp, #-4]
    157c:	ldr	r1, [r0]
    1580:	movw	r0, #0
    1584:	movt	r0, #0
    1588:	bl	45c <fi_printf>
    158c:	movw	r1, #0
    1590:	movt	r1, #0
    1594:	ldr	r2, [r1]
    1598:	add	r2, r2, #1
    159c:	str	r2, [r1]
    15a0:	ldr	r1, [fp, #-4]
    15a4:	ldr	r1, [r1, #4]
    15a8:	movw	r2, #0
    15ac:	cmp	r1, r2
    15b0:	beq	15f0 <generate_product_variable+0x88>
    15b4:	movw	r0, #0
    15b8:	movt	r0, #0
    15bc:	bl	45c <fi_printf>
    15c0:	ldr	r1, [fp, #-4]
    15c4:	ldr	r1, [r1, #4]
    15c8:	str	r0, [fp, #-8]
    15cc:	mov	r0, r1
    15d0:	movw	r1, #0
    15d4:	movt	r1, #0
    15d8:	bl	0 <coda_expression_print_xml>
    15dc:	movw	r1, #0
    15e0:	movt	r1, #0
    15e4:	str	r0, [sp, #12]
    15e8:	mov	r0, r1
    15ec:	bl	1c4 <ff_printf>
    15f0:	movw	r0, #0
    15f4:	movt	r0, #0
    15f8:	bl	45c <fi_printf>
    15fc:	ldr	r1, [fp, #-4]
    1600:	ldr	r1, [r1, #8]
    1604:	str	r0, [sp, #8]
    1608:	mov	r0, r1
    160c:	movw	r1, #0
    1610:	movt	r1, #0
    1614:	bl	0 <coda_expression_print_xml>
    1618:	movw	r1, #0
    161c:	movt	r1, #0
    1620:	str	r0, [sp, #4]
    1624:	mov	r0, r1
    1628:	bl	1c4 <ff_printf>
    162c:	movw	r1, #0
    1630:	movt	r1, #0
    1634:	ldr	r2, [r1]
    1638:	mvn	r3, #0
    163c:	add	r2, r2, r3
    1640:	str	r2, [r1]
    1644:	movw	r1, #0
    1648:	movt	r1, #0
    164c:	str	r0, [sp]
    1650:	mov	r0, r1
    1654:	bl	45c <fi_printf>
    1658:	mov	sp, fp
    165c:	pop	{fp, pc}

00001660 <indent>:
    1660:	push	{fp, lr}
    1664:	mov	fp, sp
    1668:	sub	sp, sp, #8
    166c:	movw	r0, #0
    1670:	movt	r0, #0
    1674:	ldr	r0, [r0]
    1678:	cmp	r0, #0
    167c:	blt	1684 <indent+0x24>
    1680:	b	16a4 <indent+0x44>
    1684:	movw	r0, #0
    1688:	movt	r0, #0
    168c:	movw	r1, #0
    1690:	movt	r1, #0
    1694:	movw	r2, #68	; 0x44
    1698:	movw	r3, #0
    169c:	movt	r3, #0
    16a0:	bl	0 <__assert_fail>
    16a4:	movw	r0, #0
    16a8:	movt	r0, #0
    16ac:	ldr	r0, [r0]
    16b0:	str	r0, [sp, #4]
    16b4:	ldr	r0, [sp, #4]
    16b8:	cmp	r0, #0
    16bc:	beq	16ec <indent+0x8c>
    16c0:	movw	r0, #0
    16c4:	movt	r0, #0
    16c8:	ldr	r0, [r0]
    16cc:	movw	r1, #0
    16d0:	movt	r1, #0
    16d4:	bl	0 <fprintf>
    16d8:	ldr	r0, [sp, #4]
    16dc:	mvn	r1, #0
    16e0:	add	r0, r0, r1
    16e4:	str	r0, [sp, #4]
    16e8:	b	16b4 <indent+0x54>
    16ec:	mov	sp, fp
    16f0:	pop	{fp, pc}

000016f4 <fic_printf>:
    16f4:	sub	sp, sp, #8
    16f8:	push	{fp, lr}
    16fc:	mov	fp, sp
    1700:	sub	sp, sp, #24
    1704:	str	r3, [fp, #12]
    1708:	str	r2, [fp, #8]
    170c:	str	r0, [fp, #-4]
    1710:	str	r1, [fp, #-8]
    1714:	ldr	r0, [fp, #-4]
    1718:	ldr	r0, [r0]
    171c:	cmp	r0, #0
    1720:	bne	1750 <fic_printf+0x5c>
    1724:	movw	r0, #0
    1728:	movt	r0, #0
    172c:	bl	1c4 <ff_printf>
    1730:	ldr	r1, [fp, #-4]
    1734:	movw	r2, #1
    1738:	str	r2, [r1]
    173c:	movw	r1, #0
    1740:	movt	r1, #0
    1744:	ldr	r2, [r1]
    1748:	add	r2, r2, #1
    174c:	str	r2, [r1]
    1750:	bl	1660 <indent>
    1754:	add	r0, fp, #8
    1758:	str	r0, [sp, #8]
    175c:	movw	r0, #0
    1760:	movt	r0, #0
    1764:	ldr	r0, [r0]
    1768:	ldr	r1, [fp, #-8]
    176c:	ldr	r2, [sp, #8]
    1770:	bl	0 <vfprintf>
    1774:	str	r0, [sp, #12]
    1778:	add	r0, sp, #8
    177c:	ldr	r1, [sp, #12]
    1780:	str	r0, [sp, #4]
    1784:	mov	r0, r1
    1788:	mov	sp, fp
    178c:	pop	{fp, lr}
    1790:	add	sp, sp, #8
    1794:	bx	lr

00001798 <generate_xml_string>:
    1798:	push	{fp, lr}
    179c:	mov	fp, sp
    17a0:	sub	sp, sp, #16
    17a4:	str	r0, [fp, #-4]
    17a8:	str	r1, [sp, #8]
    17ac:	ldr	r0, [sp, #8]
    17b0:	cmp	r0, #0
    17b4:	beq	17c8 <generate_xml_string+0x30>
    17b8:	ldr	r0, [fp, #-4]
    17bc:	movw	r1, #0
    17c0:	cmp	r0, r1
    17c4:	bne	17cc <generate_xml_string+0x34>
    17c8:	b	1894 <generate_xml_string+0xfc>
    17cc:	ldr	r0, [sp, #8]
    17d0:	cmp	r0, #0
    17d4:	bge	17e4 <generate_xml_string+0x4c>
    17d8:	ldr	r0, [fp, #-4]
    17dc:	bl	0 <strlen>
    17e0:	str	r0, [sp, #8]
    17e4:	b	17e8 <generate_xml_string+0x50>
    17e8:	ldr	r0, [sp, #8]
    17ec:	cmp	r0, #0
    17f0:	ble	1894 <generate_xml_string+0xfc>
    17f4:	ldr	r0, [fp, #-4]
    17f8:	ldrb	r0, [r0]
    17fc:	mov	r1, r0
    1800:	cmp	r0, #38	; 0x26
    1804:	str	r1, [sp, #4]
    1808:	beq	1830 <generate_xml_string+0x98>
    180c:	b	1810 <generate_xml_string+0x78>
    1810:	ldr	r0, [sp, #4]
    1814:	cmp	r0, #60	; 0x3c
    1818:	beq	1840 <generate_xml_string+0xa8>
    181c:	b	1820 <generate_xml_string+0x88>
    1820:	ldr	r0, [sp, #4]
    1824:	cmp	r0, #62	; 0x3e
    1828:	beq	1850 <generate_xml_string+0xb8>
    182c:	b	1860 <generate_xml_string+0xc8>
    1830:	movw	r0, #0
    1834:	movt	r0, #0
    1838:	bl	1c4 <ff_printf>
    183c:	b	1874 <generate_xml_string+0xdc>
    1840:	movw	r0, #0
    1844:	movt	r0, #0
    1848:	bl	1c4 <ff_printf>
    184c:	b	1874 <generate_xml_string+0xdc>
    1850:	movw	r0, #0
    1854:	movt	r0, #0
    1858:	bl	1c4 <ff_printf>
    185c:	b	1874 <generate_xml_string+0xdc>
    1860:	ldr	r0, [fp, #-4]
    1864:	ldrb	r1, [r0]
    1868:	movw	r0, #0
    186c:	movt	r0, #0
    1870:	bl	1c4 <ff_printf>
    1874:	ldr	r0, [fp, #-4]
    1878:	add	r0, r0, #1
    187c:	str	r0, [fp, #-4]
    1880:	ldr	r0, [sp, #8]
    1884:	mvn	r1, #0
    1888:	add	r0, r0, r1
    188c:	str	r0, [sp, #8]
    1890:	b	17e8 <generate_xml_string+0x50>
    1894:	mov	sp, fp
    1898:	pop	{fp, pc}

0000189c <generate_escaped_string>:
    189c:	push	{fp, lr}
    18a0:	mov	fp, sp
    18a4:	sub	sp, sp, #16
    18a8:	str	r0, [fp, #-4]
    18ac:	str	r1, [sp, #8]
    18b0:	ldr	r0, [sp, #8]
    18b4:	cmp	r0, #0
    18b8:	beq	18cc <generate_escaped_string+0x30>
    18bc:	ldr	r0, [fp, #-4]
    18c0:	movw	r1, #0
    18c4:	cmp	r0, r1
    18c8:	bne	18d0 <generate_escaped_string+0x34>
    18cc:	b	1bd0 <generate_escaped_string+0x334>
    18d0:	ldr	r0, [sp, #8]
    18d4:	cmp	r0, #0
    18d8:	bge	18e8 <generate_escaped_string+0x4c>
    18dc:	ldr	r0, [fp, #-4]
    18e0:	bl	0 <strlen>
    18e4:	str	r0, [sp, #8]
    18e8:	b	18ec <generate_escaped_string+0x50>
    18ec:	ldr	r0, [sp, #8]
    18f0:	cmp	r0, #0
    18f4:	ble	1bd0 <generate_escaped_string+0x334>
    18f8:	ldr	r0, [fp, #-4]
    18fc:	ldrb	r0, [r0]
    1900:	sub	r0, r0, #7
    1904:	cmp	r0, #85	; 0x55
    1908:	str	r0, [sp, #4]
    190c:	bhi	1b58 <generate_escaped_string+0x2bc>
    1910:	add	r0, pc, #8
    1914:	ldr	r1, [sp, #4]
    1918:	ldr	r0, [r0, r1, lsl #2]
    191c:	mov	pc, r0
    1920:	.word	0x00001a88
    1924:	.word	0x00001a98
    1928:	.word	0x00001ad8
    192c:	.word	0x00001ab8
    1930:	.word	0x00001ae8
    1934:	.word	0x00001aa8
    1938:	.word	0x00001ac8
    193c:	.word	0x00001b58
    1940:	.word	0x00001b58
    1944:	.word	0x00001b58
    1948:	.word	0x00001b58
    194c:	.word	0x00001b58
    1950:	.word	0x00001b58
    1954:	.word	0x00001b58
    1958:	.word	0x00001b58
    195c:	.word	0x00001b58
    1960:	.word	0x00001b58
    1964:	.word	0x00001b58
    1968:	.word	0x00001b58
    196c:	.word	0x00001b58
    1970:	.word	0x00001a78
    1974:	.word	0x00001b58
    1978:	.word	0x00001b58
    197c:	.word	0x00001b58
    1980:	.word	0x00001b58
    1984:	.word	0x00001b48
    1988:	.word	0x00001b58
    198c:	.word	0x00001b08
    1990:	.word	0x00001b58
    1994:	.word	0x00001b58
    1998:	.word	0x00001b58
    199c:	.word	0x00001b38
    19a0:	.word	0x00001b58
    19a4:	.word	0x00001b58
    19a8:	.word	0x00001b58
    19ac:	.word	0x00001b58
    19b0:	.word	0x00001b58
    19b4:	.word	0x00001b58
    19b8:	.word	0x00001b58
    19bc:	.word	0x00001b58
    19c0:	.word	0x00001b58
    19c4:	.word	0x00001b58
    19c8:	.word	0x00001b58
    19cc:	.word	0x00001b58
    19d0:	.word	0x00001b58
    19d4:	.word	0x00001b58
    19d8:	.word	0x00001b58
    19dc:	.word	0x00001b58
    19e0:	.word	0x00001b58
    19e4:	.word	0x00001b58
    19e8:	.word	0x00001b58
    19ec:	.word	0x00001b58
    19f0:	.word	0x00001b58
    19f4:	.word	0x00001b18
    19f8:	.word	0x00001b58
    19fc:	.word	0x00001b28
    1a00:	.word	0x00001b58
    1a04:	.word	0x00001b58
    1a08:	.word	0x00001b58
    1a0c:	.word	0x00001b58
    1a10:	.word	0x00001b58
    1a14:	.word	0x00001b58
    1a18:	.word	0x00001b58
    1a1c:	.word	0x00001b58
    1a20:	.word	0x00001b58
    1a24:	.word	0x00001b58
    1a28:	.word	0x00001b58
    1a2c:	.word	0x00001b58
    1a30:	.word	0x00001b58
    1a34:	.word	0x00001b58
    1a38:	.word	0x00001b58
    1a3c:	.word	0x00001b58
    1a40:	.word	0x00001b58
    1a44:	.word	0x00001b58
    1a48:	.word	0x00001b58
    1a4c:	.word	0x00001b58
    1a50:	.word	0x00001b58
    1a54:	.word	0x00001b58
    1a58:	.word	0x00001b58
    1a5c:	.word	0x00001b58
    1a60:	.word	0x00001b58
    1a64:	.word	0x00001b58
    1a68:	.word	0x00001b58
    1a6c:	.word	0x00001b58
    1a70:	.word	0x00001b58
    1a74:	.word	0x00001af8
    1a78:	movw	r0, #0
    1a7c:	movt	r0, #0
    1a80:	bl	1c4 <ff_printf>
    1a84:	b	1bb0 <generate_escaped_string+0x314>
    1a88:	movw	r0, #0
    1a8c:	movt	r0, #0
    1a90:	bl	1c4 <ff_printf>
    1a94:	b	1bb0 <generate_escaped_string+0x314>
    1a98:	movw	r0, #0
    1a9c:	movt	r0, #0
    1aa0:	bl	1c4 <ff_printf>
    1aa4:	b	1bb0 <generate_escaped_string+0x314>
    1aa8:	movw	r0, #0
    1aac:	movt	r0, #0
    1ab0:	bl	1c4 <ff_printf>
    1ab4:	b	1bb0 <generate_escaped_string+0x314>
    1ab8:	movw	r0, #0
    1abc:	movt	r0, #0
    1ac0:	bl	1c4 <ff_printf>
    1ac4:	b	1bb0 <generate_escaped_string+0x314>
    1ac8:	movw	r0, #0
    1acc:	movt	r0, #0
    1ad0:	bl	1c4 <ff_printf>
    1ad4:	b	1bb0 <generate_escaped_string+0x314>
    1ad8:	movw	r0, #0
    1adc:	movt	r0, #0
    1ae0:	bl	1c4 <ff_printf>
    1ae4:	b	1bb0 <generate_escaped_string+0x314>
    1ae8:	movw	r0, #0
    1aec:	movt	r0, #0
    1af0:	bl	1c4 <ff_printf>
    1af4:	b	1bb0 <generate_escaped_string+0x314>
    1af8:	movw	r0, #0
    1afc:	movt	r0, #0
    1b00:	bl	1c4 <ff_printf>
    1b04:	b	1bb0 <generate_escaped_string+0x314>
    1b08:	movw	r0, #0
    1b0c:	movt	r0, #0
    1b10:	bl	1c4 <ff_printf>
    1b14:	b	1bb0 <generate_escaped_string+0x314>
    1b18:	movw	r0, #0
    1b1c:	movt	r0, #0
    1b20:	bl	1c4 <ff_printf>
    1b24:	b	1bb0 <generate_escaped_string+0x314>
    1b28:	movw	r0, #0
    1b2c:	movt	r0, #0
    1b30:	bl	1c4 <ff_printf>
    1b34:	b	1bb0 <generate_escaped_string+0x314>
    1b38:	movw	r0, #0
    1b3c:	movt	r0, #0
    1b40:	bl	1c4 <ff_printf>
    1b44:	b	1bb0 <generate_escaped_string+0x314>
    1b48:	movw	r0, #0
    1b4c:	movt	r0, #0
    1b50:	bl	1c4 <ff_printf>
    1b54:	b	1bb0 <generate_escaped_string+0x314>
    1b58:	bl	0 <__ctype_b_loc>
    1b5c:	ldr	r0, [r0]
    1b60:	ldr	r1, [fp, #-4]
    1b64:	ldrb	r1, [r1]
    1b68:	mov	r2, r1
    1b6c:	add	r0, r0, r1, lsl #1
    1b70:	ldrh	r0, [r0]
    1b74:	and	r0, r0, #16384	; 0x4000
    1b78:	cmp	r0, #0
    1b7c:	bne	1b98 <generate_escaped_string+0x2fc>
    1b80:	ldr	r0, [fp, #-4]
    1b84:	ldrb	r1, [r0]
    1b88:	movw	r0, #0
    1b8c:	movt	r0, #0
    1b90:	bl	1c4 <ff_printf>
    1b94:	b	1bac <generate_escaped_string+0x310>
    1b98:	ldr	r0, [fp, #-4]
    1b9c:	ldrb	r1, [r0]
    1ba0:	movw	r0, #0
    1ba4:	movt	r0, #0
    1ba8:	bl	1c4 <ff_printf>
    1bac:	b	1bb0 <generate_escaped_string+0x314>
    1bb0:	ldr	r0, [fp, #-4]
    1bb4:	add	r0, r0, #1
    1bb8:	str	r0, [fp, #-4]
    1bbc:	ldr	r0, [sp, #8]
    1bc0:	mvn	r1, #0
    1bc4:	add	r0, r0, r1
    1bc8:	str	r0, [sp, #8]
    1bcc:	b	18ec <generate_escaped_string+0x50>
    1bd0:	mov	sp, fp
    1bd4:	pop	{fp, pc}
