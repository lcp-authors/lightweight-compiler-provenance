
../repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-dim.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <dim_info_init>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldr	r0, [pc, #40]	; 40 <dim_info_init+0x40>
      14:	mov	r3, #0
      18:	str	r3, [r0]
      1c:	ldr	ip, [pc, #32]	; 44 <dim_info_init+0x44>
      20:	mov	r2, #0
      24:	str	r2, [ip]
      28:	ldr	r0, [pc, #24]	; 48 <dim_info_init+0x48>
      2c:	mvn	r1, #0
      30:	str	r1, [r0]
      34:	ldr	lr, [sp, #4]
      38:	add	sp, sp, #8
      3c:	bx	lr
      40:	.word	0x00000000
      44:	.word	0x00000044
      48:	.word	0x00000068

0000004c <dim_info_done>:
      4c:	mov	ip, sp
      50:	sub	sp, sp, #8
      54:	str	ip, [sp]
      58:	str	lr, [sp, #4]
      5c:	ldr	lr, [sp, #4]
      60:	add	sp, sp, #8
      64:	bx	lr

00000068 <print_all_distinct_dims>:
      68:	mov	ip, sp
      6c:	sub	sp, sp, #32
      70:	str	ip, [sp, #4]
      74:	str	lr, [sp, #8]
      78:	str	r4, [sp, #16]
      7c:	str	r5, [sp, #20]
      80:	str	r6, [sp, #24]
      84:	mov	r5, r0
      88:	ldr	r2, [pc, #472]	; 268 <print_all_distinct_dims+0x200>
      8c:	ldr	r1, [r2]
      90:	cmp	r5, r1
      94:	blt	ac <print_all_distinct_dims+0x44>
      98:	ldr	r0, [pc, #488]	; 288 <print_all_distinct_dims+0x220>
      9c:	ldr	r1, [pc, #508]	; 2a0 <print_all_distinct_dims+0x238>
      a0:	mov	r2, #50	; 0x32
      a4:	ldr	r3, [pc, #456]	; 274 <print_all_distinct_dims+0x20c>
      a8:	bl	0 <__assert_fail>
      ac:	ldr	r3, [pc, #464]	; 284 <print_all_distinct_dims+0x21c>
      b0:	ldr	ip, [r3, r5, lsl #2]
      b4:	cmp	ip, #0
      b8:	beq	250 <print_all_distinct_dims+0x1e8>
      bc:	ldr	r2, [pc, #436]	; 278 <print_all_distinct_dims+0x210>
      c0:	ldr	ip, [r2, r5, lsl #2]
      c4:	lsl	r1, ip, #2
      c8:	add	r0, r1, #4
      cc:	bl	0 <malloc>
      d0:	mov	r4, r0
      d4:	cmp	r4, #0
      d8:	bne	108 <print_all_distinct_dims+0xa0>
      dc:	mvn	r0, #0
      e0:	ldr	r1, [pc, #424]	; 290 <print_all_distinct_dims+0x228>
      e4:	ldr	ip, [pc, #396]	; 278 <print_all_distinct_dims+0x210>
      e8:	ldr	r2, [ip, r5, lsl #2]
      ec:	lsl	r2, r2, #2
      f0:	add	r2, r2, #4
      f4:	ldr	r3, [pc, #420]	; 2a0 <print_all_distinct_dims+0x238>
      f8:	mov	ip, #61	; 0x3d
      fc:	str	ip, [sp]
     100:	bl	0 <coda_set_error>
     104:	bl	0 <handle_coda_error>
     108:	mov	r1, #0
     10c:	ldr	r3, [pc, #356]	; 278 <print_all_distinct_dims+0x210>
     110:	ldr	r3, [r3, r5, lsl #2]
     114:	lsl	r0, r3, #2
     118:	add	r2, r0, #4
     11c:	mov	r0, r4
     120:	bl	0 <memset>
     124:	mov	r3, #0
     128:	mov	ip, r3
     12c:	asr	r0, ip, #31
     130:	ldr	r2, [pc, #352]	; 298 <print_all_distinct_dims+0x230>
     134:	ldr	r1, [pc, #336]	; 28c <print_all_distinct_dims+0x224>
     138:	ldr	r1, [r1, r5, lsl #2]
     13c:	lsl	r1, r1, #3
     140:	add	r2, r2, r1
     144:	sub	lr, r2, #4096	; 0x1000
     148:	ldr	r1, [lr, #4088]	; 0xff8
     14c:	sub	lr, r2, #4096	; 0x1000
     150:	ldr	r2, [lr, #4092]	; 0xffc
     154:	cmp	r0, r2
     158:	bne	168 <print_all_distinct_dims+0x100>
     15c:	cmp	ip, r1
     160:	bcc	170 <print_all_distinct_dims+0x108>
     164:	b	198 <print_all_distinct_dims+0x130>
     168:	cmp	r0, r2
     16c:	bge	198 <print_all_distinct_dims+0x130>
     170:	ldr	r0, [pc, #284]	; 294 <print_all_distinct_dims+0x22c>
     174:	ldr	ip, [r0, r5, lsl #2]
     178:	ldr	r2, [ip, r3, lsl #2]
     17c:	cmp	r2, #0
     180:	blt	190 <print_all_distinct_dims+0x128>
     184:	ldr	r1, [r4, r2, lsl #2]
     188:	add	ip, r1, #1
     18c:	str	ip, [r4, r2, lsl #2]
     190:	add	r3, r3, #1
     194:	b	128 <print_all_distinct_dims+0xc0>
     198:	ldr	r0, [pc, #260]	; 2a4 <print_all_distinct_dims+0x23c>
     19c:	add	r1, r5, #1
     1a0:	bl	0 <printf>
     1a4:	ldr	r2, [pc, #208]	; 27c <print_all_distinct_dims+0x214>
     1a8:	ldr	r6, [r2, r5, lsl #2]
     1ac:	ldr	ip, [pc, #196]	; 278 <print_all_distinct_dims+0x210>
     1b0:	ldr	r1, [ip, r5, lsl #2]
     1b4:	cmp	r6, r1
     1b8:	bge	1dc <print_all_distinct_dims+0x174>
     1bc:	ldr	ip, [r4, r6, lsl #2]
     1c0:	cmp	ip, #0
     1c4:	ble	1d4 <print_all_distinct_dims+0x16c>
     1c8:	ldr	r0, [pc, #176]	; 280 <print_all_distinct_dims+0x218>
     1cc:	mov	r1, r6
     1d0:	bl	0 <printf>
     1d4:	add	r6, r6, #1
     1d8:	b	1ac <print_all_distinct_dims+0x144>
     1dc:	ldr	r0, [pc, #136]	; 26c <print_all_distinct_dims+0x204>
     1e0:	bl	0 <printf>
     1e4:	ldr	r0, [pc, #176]	; 29c <print_all_distinct_dims+0x234>
     1e8:	bl	0 <printf>
     1ec:	ldr	r0, [pc, #136]	; 27c <print_all_distinct_dims+0x214>
     1f0:	ldr	r6, [r0, r5, lsl #2]
     1f4:	ldr	r3, [pc, #124]	; 278 <print_all_distinct_dims+0x210>
     1f8:	ldr	r1, [r3, r5, lsl #2]
     1fc:	cmp	r6, r1
     200:	bge	220 <print_all_distinct_dims+0x1b8>
     204:	ldr	r1, [r4, r6, lsl #2]
     208:	cmp	r1, #0
     20c:	ble	218 <print_all_distinct_dims+0x1b0>
     210:	ldr	r0, [pc, #104]	; 280 <print_all_distinct_dims+0x218>
     214:	bl	0 <printf>
     218:	add	r6, r6, #1
     21c:	b	1f4 <print_all_distinct_dims+0x18c>
     220:	ldr	r0, [pc, #68]	; 26c <print_all_distinct_dims+0x204>
     224:	ldr	r1, [r4, r1, lsl #2]
     228:	bl	0 <printf>
     22c:	ldr	r0, [pc, #60]	; 270 <print_all_distinct_dims+0x208>
     230:	bl	0 <printf>
     234:	mov	r0, r4
     238:	ldr	r4, [sp, #16]
     23c:	ldr	r5, [sp, #20]
     240:	ldr	r6, [sp, #24]
     244:	ldr	lr, [sp, #8]
     248:	add	sp, sp, #32
     24c:	b	0 <free>
     250:	ldr	r4, [sp, #16]
     254:	ldr	r5, [sp, #20]
     258:	ldr	r6, [sp, #24]
     25c:	ldr	lr, [sp, #8]
     260:	add	sp, sp, #32
     264:	bx	lr
     268:	.word	0x00000000
     26c:	.word	0x0000012c
     270:	.word	0x00000134
     274:	.word	0x0000019a
     278:	.word	0x00000004
     27c:	.word	0x00000024
     280:	.word	0x00000130
     284:	.word	0x00000048
     288:	.word	0x000000eb
     28c:	.word	0x0000008c
     290:	.word	0x00000165
     294:	.word	0x0000006c
     298:	.word	0x000000f0
     29c:	.word	0x00000106
     2a0:	.word	0x00000000
     2a4:	.word	0x00000157

000002a8 <get_all_dims_for_array>:
     2a8:	mov	ip, sp
     2ac:	sub	sp, sp, #88	; 0x58
     2b0:	str	ip, [sp]
     2b4:	str	lr, [sp, #4]
     2b8:	str	r4, [sp, #8]
     2bc:	str	r5, [sp, #12]
     2c0:	str	r6, [sp, #16]
     2c4:	str	r7, [sp, #20]
     2c8:	str	r8, [sp, #24]
     2cc:	str	r9, [sp, #28]
     2d0:	mov	r5, r2
     2d4:	mov	r4, r1
     2d8:	mov	r8, r0
     2dc:	ldr	r0, [pc, #1236]	; 7b8 <get_all_dims_for_array+0x510>
     2e0:	add	r1, sp, #36	; 0x24
     2e4:	bl	0 <coda_cursor_get_type_class>
     2e8:	cmp	r0, #0
     2ec:	beq	2f4 <get_all_dims_for_array+0x4c>
     2f0:	bl	0 <handle_coda_error>
     2f4:	ldr	r0, [sp, #36]	; 0x24
     2f8:	cmp	r0, #4
     2fc:	bcs	618 <get_all_dims_for_array+0x370>
     300:	cmp	r0, #0
     304:	beq	52c <get_all_dims_for_array+0x284>
     308:	cmp	r0, #1
     30c:	bne	628 <get_all_dims_for_array+0x380>
     310:	ldr	r2, [pc, #1196]	; 7c4 <get_all_dims_for_array+0x51c>
     314:	lsl	r3, r4, #6
     318:	add	ip, r3, r4, lsl #4
     31c:	add	r6, r2, ip
     320:	ldr	r7, [r6]
     324:	ldr	r0, [pc, #1136]	; 79c <get_all_dims_for_array+0x4f4>
     328:	ldr	r0, [r0]
     32c:	cmp	r4, r0
     330:	beq	440 <get_all_dims_for_array+0x198>
     334:	cmp	r4, #0
     338:	bne	344 <get_all_dims_for_array+0x9c>
     33c:	mov	r0, #0
     340:	str	r0, [r6, #44]	; 0x2c
     344:	ldr	r3, [pc, #1144]	; 7c4 <get_all_dims_for_array+0x51c>
     348:	lsl	ip, r4, #6
     34c:	add	r0, ip, r4, lsl #4
     350:	add	r1, r3, r0
     354:	ldr	r3, [r6, #44]	; 0x2c
     358:	ldr	ip, [r6, #40]	; 0x28
     35c:	mul	r2, r3, ip
     360:	str	r2, [r1, #124]	; 0x7c
     364:	mov	r9, #1
     368:	mov	r3, r7
     36c:	ldr	ip, [r6, #4]
     370:	add	r2, r7, ip
     374:	cmp	r3, r2
     378:	bge	3b8 <get_all_dims_for_array+0x110>
     37c:	ldr	r2, [pc, #1068]	; 7b0 <get_all_dims_for_array+0x508>
     380:	ldr	ip, [r2, r3, lsl #2]
     384:	cmp	ip, #0
     388:	beq	3a4 <get_all_dims_for_array+0xfc>
     38c:	ldr	r0, [pc, #1068]	; 7c0 <get_all_dims_for_array+0x518>
     390:	ldr	r0, [r0, r3, lsl #2]
     394:	ldr	ip, [r6, #44]	; 0x2c
     398:	ldr	ip, [r0, ip, lsl #2]
     39c:	mul	r9, r9, ip
     3a0:	b	3b0 <get_all_dims_for_array+0x108>
     3a4:	ldr	r1, [pc, #1020]	; 7a8 <get_all_dims_for_array+0x500>
     3a8:	ldr	ip, [r1, r3, lsl #2]
     3ac:	mul	r9, r9, ip
     3b0:	add	r3, r3, #1
     3b4:	b	36c <get_all_dims_for_array+0xc4>
     3b8:	cmp	r9, #0
     3bc:	ble	778 <get_all_dims_for_array+0x4d0>
     3c0:	ldr	r0, [pc, #1008]	; 7b8 <get_all_dims_for_array+0x510>
     3c4:	bl	0 <coda_cursor_goto_first_array_element>
     3c8:	cmp	r0, #0
     3cc:	beq	3d4 <get_all_dims_for_array+0x12c>
     3d0:	bl	0 <handle_coda_error>
     3d4:	mov	r6, #0
     3d8:	cmp	r6, r9
     3dc:	bge	434 <get_all_dims_for_array+0x18c>
     3e0:	add	r0, r8, #1
     3e4:	add	r1, r4, #1
     3e8:	mov	r2, r5
     3ec:	bl	2a8 <get_all_dims_for_array>
     3f0:	sub	r3, r9, #1
     3f4:	cmp	r6, r3
     3f8:	bge	42c <get_all_dims_for_array+0x184>
     3fc:	ldr	r0, [pc, #948]	; 7b8 <get_all_dims_for_array+0x510>
     400:	bl	0 <coda_cursor_goto_next_array_element>
     404:	cmp	r0, #0
     408:	beq	410 <get_all_dims_for_array+0x168>
     40c:	bl	0 <handle_coda_error>
     410:	ldr	r3, [pc, #940]	; 7c4 <get_all_dims_for_array+0x51c>
     414:	lsl	ip, r4, #6
     418:	add	ip, ip, r4, lsl #4
     41c:	add	r2, r3, ip
     420:	ldr	r1, [r2, #124]	; 0x7c
     424:	add	r1, r1, #1
     428:	str	r1, [r2, #124]	; 0x7c
     42c:	add	r6, r6, #1
     430:	b	3d8 <get_all_dims_for_array+0x130>
     434:	ldr	r0, [pc, #892]	; 7b8 <get_all_dims_for_array+0x510>
     438:	bl	0 <coda_cursor_goto_parent>
     43c:	b	778 <get_all_dims_for_array+0x4d0>
     440:	ldr	r0, [pc, #880]	; 7b8 <get_all_dims_for_array+0x510>
     444:	add	r1, sp, #40	; 0x28
     448:	add	r2, sp, #56	; 0x38
     44c:	bl	0 <coda_cursor_get_array_dim>
     450:	cmp	r0, #0
     454:	beq	45c <get_all_dims_for_array+0x1b4>
     458:	bl	0 <handle_coda_error>
     45c:	ldr	r3, [sp, #40]	; 0x28
     460:	ldr	r2, [r6, #4]
     464:	cmp	r3, r2
     468:	beq	480 <get_all_dims_for_array+0x1d8>
     46c:	ldr	r0, [pc, #812]	; 7a0 <get_all_dims_for_array+0x4f8>
     470:	ldr	r1, [pc, #848]	; 7c8 <get_all_dims_for_array+0x520>
     474:	mov	r2, #125	; 0x7d
     478:	ldr	r3, [pc, #820]	; 7b4 <get_all_dims_for_array+0x50c>
     47c:	bl	0 <__assert_fail>
     480:	mov	ip, #0
     484:	ldr	r2, [r6, #4]
     488:	cmp	ip, r2
     48c:	bge	778 <get_all_dims_for_array+0x4d0>
     490:	lsl	r0, ip, #2
     494:	add	r2, r6, r0
     498:	ldr	r0, [r2, #8]
     49c:	cmn	r0, #1
     4a0:	bne	524 <get_all_dims_for_array+0x27c>
     4a4:	ldr	r0, [pc, #788]	; 7c0 <get_all_dims_for_array+0x518>
     4a8:	add	r1, r7, ip
     4ac:	ldr	r2, [r0, r1, lsl #2]
     4b0:	ldr	r3, [r6, #44]	; 0x2c
     4b4:	add	r0, sp, #56	; 0x38
     4b8:	ldr	r0, [r0, ip, lsl #2]
     4bc:	str	r0, [r2, r3, lsl #2]
     4c0:	ldr	r0, [pc, #736]	; 7a8 <get_all_dims_for_array+0x500>
     4c4:	ldr	r3, [r0, r1, lsl #2]
     4c8:	cmn	r3, #1
     4cc:	beq	508 <get_all_dims_for_array+0x260>
     4d0:	add	r2, sp, #56	; 0x38
     4d4:	ldr	r2, [r2, ip, lsl #2]
     4d8:	cmp	r3, r2
     4dc:	bge	4e4 <get_all_dims_for_array+0x23c>
     4e0:	str	r2, [r0, r1, lsl #2]
     4e4:	ldr	r2, [pc, #704]	; 7ac <get_all_dims_for_array+0x504>
     4e8:	add	r0, r7, ip
     4ec:	ldr	r4, [r2, r0, lsl #2]
     4f0:	add	r1, sp, #56	; 0x38
     4f4:	ldr	r3, [r1, ip, lsl #2]
     4f8:	cmp	r4, r3
     4fc:	ble	524 <get_all_dims_for_array+0x27c>
     500:	str	r3, [r2, r0, lsl #2]
     504:	b	524 <get_all_dims_for_array+0x27c>
     508:	add	r2, sp, #56	; 0x38
     50c:	ldr	r2, [r2, ip, lsl #2]
     510:	str	r2, [r0, r1, lsl #2]
     514:	ldr	r3, [pc, #656]	; 7ac <get_all_dims_for_array+0x504>
     518:	add	r2, sp, #56	; 0x38
     51c:	ldr	r0, [r2, ip, lsl #2]
     520:	str	r0, [r3, r1, lsl #2]
     524:	add	ip, ip, #1
     528:	b	484 <get_all_dims_for_array+0x1dc>
     52c:	ldr	r0, [pc, #644]	; 7b8 <get_all_dims_for_array+0x510>
     530:	ldr	r2, [pc, #620]	; 7a4 <get_all_dims_for_array+0x4fc>
     534:	ldr	r1, [r2, r5, lsl #2]
     538:	add	r2, sp, #44	; 0x2c
     53c:	bl	0 <coda_cursor_get_record_field_available_status>
     540:	cmp	r0, #0
     544:	beq	54c <get_all_dims_for_array+0x2a4>
     548:	bl	0 <handle_coda_error>
     54c:	ldr	r3, [sp, #44]	; 0x2c
     550:	cmp	r3, #0
     554:	bne	5e0 <get_all_dims_for_array+0x338>
     558:	ldr	ip, [pc, #612]	; 7c4 <get_all_dims_for_array+0x51c>
     55c:	ldr	r3, [pc, #568]	; 79c <get_all_dims_for_array+0x4f4>
     560:	ldr	r2, [r3]
     564:	lsl	r0, r2, #6
     568:	add	r2, r0, r2, lsl #4
     56c:	add	r4, ip, r2
     570:	ldr	r5, [r4]
     574:	mov	r6, #0
     578:	ldr	r0, [r4, #4]
     57c:	cmp	r6, r0
     580:	bge	778 <get_all_dims_for_array+0x4d0>
     584:	lsl	r2, r6, #2
     588:	add	r2, r4, r2
     58c:	ldr	r0, [r2, #8]
     590:	cmn	r0, #1
     594:	bne	5d8 <get_all_dims_for_array+0x330>
     598:	ldr	r0, [pc, #544]	; 7c0 <get_all_dims_for_array+0x518>
     59c:	add	r1, r5, r6
     5a0:	ldr	r3, [r0, r1, lsl #2]
     5a4:	ldr	r2, [r4, #44]	; 0x2c
     5a8:	mov	r0, #0
     5ac:	str	r0, [r3, r2, lsl #2]
     5b0:	ldr	r2, [pc, #496]	; 7a8 <get_all_dims_for_array+0x500>
     5b4:	ldr	r3, [r2, r1, lsl #2]
     5b8:	cmn	r3, #1
     5bc:	bne	5c8 <get_all_dims_for_array+0x320>
     5c0:	mov	r3, #0
     5c4:	str	r3, [r2, r1, lsl #2]
     5c8:	ldr	r0, [pc, #476]	; 7ac <get_all_dims_for_array+0x504>
     5cc:	add	r1, r5, r6
     5d0:	mov	ip, #0
     5d4:	str	ip, [r0, r1, lsl #2]
     5d8:	add	r6, r6, #1
     5dc:	b	578 <get_all_dims_for_array+0x2d0>
     5e0:	ldr	r0, [pc, #464]	; 7b8 <get_all_dims_for_array+0x510>
     5e4:	ldr	r1, [pc, #440]	; 7a4 <get_all_dims_for_array+0x4fc>
     5e8:	ldr	r1, [r1, r5, lsl #2]
     5ec:	bl	0 <coda_cursor_goto_record_field_by_index>
     5f0:	cmp	r0, #0
     5f4:	beq	5fc <get_all_dims_for_array+0x354>
     5f8:	bl	0 <handle_coda_error>
     5fc:	add	r0, r8, #1
     600:	add	r2, r5, #1
     604:	mov	r1, r4
     608:	bl	2a8 <get_all_dims_for_array>
     60c:	ldr	r0, [pc, #420]	; 7b8 <get_all_dims_for_array+0x510>
     610:	bl	0 <coda_cursor_goto_parent>
     614:	b	778 <get_all_dims_for_array+0x4d0>
     618:	cmp	r0, #4
     61c:	beq	648 <get_all_dims_for_array+0x3a0>
     620:	cmp	r0, #5
     624:	beq	648 <get_all_dims_for_array+0x3a0>
     628:	ldr	r0, [pc, #396]	; 7bc <get_all_dims_for_array+0x514>
     62c:	ldr	r1, [pc, #404]	; 7c8 <get_all_dims_for_array+0x520>
     630:	movw	r2, #294	; 0x126
     634:	ldr	r3, [pc, #376]	; 7b4 <get_all_dims_for_array+0x50c>
     638:	bl	0 <__assert_fail>
     63c:	mov	r0, #1
     640:	bl	0 <exit>
     644:	b	778 <get_all_dims_for_array+0x4d0>
     648:	ldr	r1, [pc, #332]	; 79c <get_all_dims_for_array+0x4f4>
     64c:	ldr	r2, [r1]
     650:	cmp	r4, r2
     654:	beq	66c <get_all_dims_for_array+0x3c4>
     658:	ldr	r0, [pc, #364]	; 7cc <get_all_dims_for_array+0x524>
     65c:	ldr	r1, [pc, #356]	; 7c8 <get_all_dims_for_array+0x520>
     660:	mov	r2, #252	; 0xfc
     664:	ldr	r3, [pc, #328]	; 7b4 <get_all_dims_for_array+0x50c>
     668:	bl	0 <__assert_fail>
     66c:	ldr	r3, [sp, #36]	; 0x24
     670:	cmp	r3, #4
     674:	bne	6a4 <get_all_dims_for_array+0x3fc>
     678:	ldr	r0, [pc, #312]	; 7b8 <get_all_dims_for_array+0x510>
     67c:	add	r1, sp, #32
     680:	bl	0 <coda_cursor_get_string_length>
     684:	cmp	r0, #0
     688:	beq	690 <get_all_dims_for_array+0x3e8>
     68c:	bl	0 <handle_coda_error>
     690:	ldr	ip, [sp, #32]
     694:	asr	r0, ip, #31
     698:	str	ip, [sp, #48]	; 0x30
     69c:	str	r0, [sp, #52]	; 0x34
     6a0:	b	6bc <get_all_dims_for_array+0x414>
     6a4:	ldr	r0, [pc, #268]	; 7b8 <get_all_dims_for_array+0x510>
     6a8:	add	r1, sp, #48	; 0x30
     6ac:	bl	0 <coda_cursor_get_byte_size>
     6b0:	cmp	r0, #0
     6b4:	beq	6bc <get_all_dims_for_array+0x414>
     6b8:	bl	0 <handle_coda_error>
     6bc:	ldr	r3, [pc, #256]	; 7c4 <get_all_dims_for_array+0x51c>
     6c0:	lsl	ip, r4, #6
     6c4:	add	r1, ip, r4, lsl #4
     6c8:	add	r2, r3, r1
     6cc:	ldr	r1, [r2]
     6d0:	ldr	r0, [pc, #232]	; 7c0 <get_all_dims_for_array+0x518>
     6d4:	ldr	r3, [r0, r1, lsl #2]
     6d8:	ldr	r2, [r2, #44]	; 0x2c
     6dc:	ldr	r0, [sp, #48]	; 0x30
     6e0:	str	r0, [r3, r2, lsl #2]
     6e4:	ldr	r3, [pc, #188]	; 7a8 <get_all_dims_for_array+0x500>
     6e8:	ldr	r0, [r3, r1, lsl #2]
     6ec:	cmn	r0, #1
     6f0:	beq	768 <get_all_dims_for_array+0x4c0>
     6f4:	asr	r2, r0, #31
     6f8:	ldr	ip, [sp, #48]	; 0x30
     6fc:	ldr	r3, [sp, #52]	; 0x34
     700:	cmp	r2, r3
     704:	bne	714 <get_all_dims_for_array+0x46c>
     708:	cmp	r0, ip
     70c:	bcc	71c <get_all_dims_for_array+0x474>
     710:	b	728 <get_all_dims_for_array+0x480>
     714:	cmp	r2, r3
     718:	bge	728 <get_all_dims_for_array+0x480>
     71c:	ldr	r3, [pc, #132]	; 7a8 <get_all_dims_for_array+0x500>
     720:	ldr	r2, [sp, #48]	; 0x30
     724:	str	r2, [r3, r1, lsl #2]
     728:	ldr	r2, [pc, #124]	; 7ac <get_all_dims_for_array+0x504>
     72c:	ldr	r3, [r2, r1, lsl #2]
     730:	asr	r0, r3, #31
     734:	ldr	ip, [sp, #48]	; 0x30
     738:	ldr	r2, [sp, #52]	; 0x34
     73c:	cmp	r0, r2
     740:	bne	750 <get_all_dims_for_array+0x4a8>
     744:	cmp	r3, ip
     748:	bhi	758 <get_all_dims_for_array+0x4b0>
     74c:	b	778 <get_all_dims_for_array+0x4d0>
     750:	cmp	r0, r2
     754:	ble	778 <get_all_dims_for_array+0x4d0>
     758:	ldr	r0, [pc, #76]	; 7ac <get_all_dims_for_array+0x504>
     75c:	ldr	r2, [sp, #48]	; 0x30
     760:	str	r2, [r0, r1, lsl #2]
     764:	b	778 <get_all_dims_for_array+0x4d0>
     768:	ldr	r2, [sp, #48]	; 0x30
     76c:	str	r2, [r3, r1, lsl #2]
     770:	ldr	r0, [pc, #52]	; 7ac <get_all_dims_for_array+0x504>
     774:	str	r2, [r0, r1, lsl #2]
     778:	ldr	r4, [sp, #8]
     77c:	ldr	r5, [sp, #12]
     780:	ldr	r6, [sp, #16]
     784:	ldr	r7, [sp, #20]
     788:	ldr	r8, [sp, #24]
     78c:	ldr	r9, [sp, #28]
     790:	ldr	lr, [sp, #4]
     794:	add	sp, sp, #88	; 0x58
     798:	bx	lr
     79c:	.word	0x00000d20
     7a0:	.word	0x00000136
     7a4:	.word	0x00000da4
     7a8:	.word	0x00000004
     7ac:	.word	0x00000024
     7b0:	.word	0x00000048
     7b4:	.word	0x000001b2
     7b8:	.word	0x00000090
     7bc:	.word	0x00000163
     7c0:	.word	0x0000006c
     7c4:	.word	0x00000320
     7c8:	.word	0x00000000
     7cc:	.word	0x000000c3

000007d0 <dim_enter_array>:
     7d0:	mov	ip, sp
     7d4:	sub	sp, sp, #112	; 0x70
     7d8:	str	ip, [sp, #4]
     7dc:	str	lr, [sp, #8]
     7e0:	str	r4, [sp, #24]
     7e4:	str	r5, [sp, #28]
     7e8:	str	r6, [sp, #32]
     7ec:	str	r7, [sp, #36]	; 0x24
     7f0:	str	r8, [sp, #40]	; 0x28
     7f4:	str	r9, [sp, #44]	; 0x2c
     7f8:	str	sl, [sp, #48]	; 0x30
     7fc:	str	fp, [sp, #52]	; 0x34
     800:	ldr	ip, [pc, #2324]	; 111c <dim_enter_array+0x94c>
     804:	ldr	r2, [pc, #2276]	; 10f0 <dim_enter_array+0x920>
     808:	ldr	r2, [r2]
     80c:	lsl	r3, r2, #6
     810:	add	r2, r3, r2, lsl #4
     814:	add	r8, ip, r2
     818:	ldr	r2, [pc, #2252]	; 10ec <dim_enter_array+0x91c>
     81c:	ldr	ip, [pc, #2264]	; 10fc <dim_enter_array+0x92c>
     820:	ldr	r3, [ip]
     824:	ldr	r0, [r2, r3, lsl #2]
     828:	add	r1, sp, #60	; 0x3c
     82c:	bl	0 <coda_type_get_class>
     830:	cmp	r0, #0
     834:	beq	83c <dim_enter_array+0x6c>
     838:	bl	0 <handle_coda_error>
     83c:	ldr	r3, [sp, #60]	; 0x3c
     840:	cmp	r3, #5
     844:	bcs	8ec <dim_enter_array+0x11c>
     848:	cmp	r3, #1
     84c:	beq	890 <dim_enter_array+0xc0>
     850:	cmp	r3, #4
     854:	bne	960 <dim_enter_array+0x190>
     858:	ldr	r3, [pc, #2188]	; 10ec <dim_enter_array+0x91c>
     85c:	ldr	r0, [pc, #2200]	; 10fc <dim_enter_array+0x92c>
     860:	ldr	r1, [r0]
     864:	ldr	r0, [r3, r1, lsl #2]
     868:	add	r1, sp, #56	; 0x38
     86c:	bl	0 <coda_type_get_string_length>
     870:	cmp	r0, #0
     874:	beq	87c <dim_enter_array+0xac>
     878:	bl	0 <handle_coda_error>
     87c:	mov	r0, #1
     880:	str	r0, [r8, #4]
     884:	ldr	ip, [sp, #56]	; 0x38
     888:	str	ip, [r8, #8]
     88c:	b	a10 <dim_enter_array+0x240>
     890:	ldr	r0, [pc, #2132]	; 10ec <dim_enter_array+0x91c>
     894:	ldr	ip, [pc, #2144]	; 10fc <dim_enter_array+0x92c>
     898:	ldr	ip, [ip]
     89c:	ldr	r0, [r0, ip, lsl #2]
     8a0:	add	r1, sp, #64	; 0x40
     8a4:	add	r2, sp, #80	; 0x50
     8a8:	bl	0 <coda_type_get_array_dim>
     8ac:	cmp	r0, #0
     8b0:	beq	8b8 <dim_enter_array+0xe8>
     8b4:	bl	0 <handle_coda_error>
     8b8:	ldr	r3, [sp, #64]	; 0x40
     8bc:	str	r3, [r8, #4]
     8c0:	mov	r2, #0
     8c4:	ldr	r1, [sp, #64]	; 0x40
     8c8:	cmp	r2, r1
     8cc:	bge	a10 <dim_enter_array+0x240>
     8d0:	lsl	r3, r2, #2
     8d4:	add	r1, r8, r3
     8d8:	add	r0, sp, #80	; 0x50
     8dc:	ldr	ip, [r0, r2, lsl #2]
     8e0:	str	ip, [r1, #8]
     8e4:	add	r2, r2, #1
     8e8:	b	8c4 <dim_enter_array+0xf4>
     8ec:	cmp	r3, #5
     8f0:	beq	980 <dim_enter_array+0x1b0>
     8f4:	cmp	r3, #6
     8f8:	bne	960 <dim_enter_array+0x190>
     8fc:	ldr	r2, [pc, #2024]	; 10ec <dim_enter_array+0x91c>
     900:	ldr	ip, [pc, #2036]	; 10fc <dim_enter_array+0x92c>
     904:	ldr	ip, [ip]
     908:	ldr	r0, [r2, ip, lsl #2]
     90c:	add	r1, sp, #68	; 0x44
     910:	bl	0 <coda_type_get_special_type>
     914:	cmp	r0, #0
     918:	beq	920 <dim_enter_array+0x150>
     91c:	bl	0 <handle_coda_error>
     920:	ldr	ip, [sp, #68]	; 0x44
     924:	cmp	ip, #3
     928:	bne	940 <dim_enter_array+0x170>
     92c:	mov	ip, #1
     930:	str	ip, [r8, #4]
     934:	mov	ip, #2
     938:	str	ip, [r8, #8]
     93c:	b	a10 <dim_enter_array+0x240>
     940:	ldr	r0, [pc, #1996]	; 1114 <dim_enter_array+0x944>
     944:	ldr	r1, [pc, #2008]	; 1124 <dim_enter_array+0x954>
     948:	movw	r2, #349	; 0x15d
     94c:	ldr	r3, [pc, #1980]	; 1110 <dim_enter_array+0x940>
     950:	bl	0 <__assert_fail>
     954:	mov	r0, #1
     958:	bl	0 <exit>
     95c:	b	a10 <dim_enter_array+0x240>
     960:	ldr	r0, [pc, #1964]	; 1114 <dim_enter_array+0x944>
     964:	ldr	r1, [pc, #1976]	; 1124 <dim_enter_array+0x954>
     968:	movw	r2, #386	; 0x182
     96c:	ldr	r3, [pc, #1948]	; 1110 <dim_enter_array+0x940>
     970:	bl	0 <__assert_fail>
     974:	mov	r0, #1
     978:	bl	0 <exit>
     97c:	b	a10 <dim_enter_array+0x240>
     980:	ldr	ip, [pc, #1892]	; 10ec <dim_enter_array+0x91c>
     984:	ldr	r1, [pc, #1904]	; 10fc <dim_enter_array+0x92c>
     988:	ldr	r3, [r1]
     98c:	ldr	r0, [ip, r3, lsl #2]
     990:	add	r1, sp, #72	; 0x48
     994:	bl	0 <coda_type_get_bit_size>
     998:	cmp	r0, #0
     99c:	beq	9a4 <dim_enter_array+0x1d4>
     9a0:	bl	0 <handle_coda_error>
     9a4:	mov	r0, #1
     9a8:	str	r0, [r8, #4]
     9ac:	ldr	r3, [sp, #72]	; 0x48
     9b0:	ldr	r2, [sp, #76]	; 0x4c
     9b4:	cmp	r2, #0
     9b8:	blt	a08 <dim_enter_array+0x238>
     9bc:	mov	r4, #1
     9c0:	mov	r1, #0
     9c4:	mov	r0, #0
     9c8:	and	ip, r3, #7
     9cc:	orr	r0, r0, ip
     9d0:	cmp	r0, #0
     9d4:	movne	ip, #1
     9d8:	moveq	ip, #0
     9dc:	cmp	ip, #0
     9e0:	movne	r0, r4
     9e4:	moveq	r0, r1
     9e8:	asr	ip, r2, #3
     9ec:	lsr	r3, r3, #3
     9f0:	orr	r3, r3, r2, lsl #29
     9f4:	asr	r1, r0, #31
     9f8:	adds	r0, r3, r0
     9fc:	adc	r1, ip, r1
     a00:	str	r0, [r8, #8]
     a04:	b	a10 <dim_enter_array+0x240>
     a08:	mvn	ip, #0
     a0c:	str	ip, [r8, #8]
     a10:	ldr	r3, [pc, #1808]	; 1128 <dim_enter_array+0x958>
     a14:	ldr	r3, [r3]
     a18:	cmp	r3, #0
     a1c:	bne	a3c <dim_enter_array+0x26c>
     a20:	mvn	r2, #0
     a24:	str	r2, [r8]
     a28:	mov	r3, #0
     a2c:	str	r3, [r8, #40]	; 0x28
     a30:	mov	r0, #0
     a34:	str	r0, [r8, #44]	; 0x2c
     a38:	b	10b4 <dim_enter_array+0x8e4>
     a3c:	ldr	r2, [pc, #1692]	; 10e0 <dim_enter_array+0x910>
     a40:	ldr	r6, [r2]
     a44:	str	r6, [r8]
     a48:	ldr	r3, [r2]
     a4c:	ldr	r2, [r8, #4]
     a50:	add	r2, r3, r2
     a54:	cmp	r2, #8
     a58:	ble	a70 <dim_enter_array+0x2a0>
     a5c:	ldr	r0, [pc, #1668]	; 10e8 <dim_enter_array+0x918>
     a60:	ldr	r1, [pc, #1724]	; 1124 <dim_enter_array+0x954>
     a64:	movw	r2, #402	; 0x192
     a68:	ldr	r3, [pc, #1696]	; 1110 <dim_enter_array+0x940>
     a6c:	bl	0 <__assert_fail>
     a70:	ldr	ip, [pc, #1640]	; 10e0 <dim_enter_array+0x910>
     a74:	ldr	r1, [ip]
     a78:	ldr	r2, [r8, #4]
     a7c:	add	r0, r1, r2
     a80:	str	r0, [ip]
     a84:	cmp	r6, #0
     a88:	ble	ac8 <dim_enter_array+0x2f8>
     a8c:	ldr	r1, [pc, #1676]	; 1120 <dim_enter_array+0x950>
     a90:	lsl	r3, r6, #3
     a94:	add	ip, r1, r3
     a98:	sub	lr, ip, #4096	; 0x1000
     a9c:	ldr	r4, [lr, #4088]	; 0xff8
     aa0:	sub	lr, ip, #4096	; 0x1000
     aa4:	ldr	r5, [lr, #4092]	; 0xffc
     aa8:	ldr	r0, [pc, #1660]	; 112c <dim_enter_array+0x95c>
     aac:	add	r1, r0, r3
     ab0:	sub	lr, r1, #4096	; 0x1000
     ab4:	ldr	r7, [lr, #4088]	; 0xff8
     ab8:	sub	lr, r1, #4096	; 0x1000
     abc:	ldr	r3, [lr, #4092]	; 0xffc
     ac0:	str	r3, [sp, #16]
     ac4:	b	ad8 <dim_enter_array+0x308>
     ac8:	mov	r5, #0
     acc:	mov	r4, #1
     ad0:	str	r5, [sp, #16]
     ad4:	mov	r7, r4
     ad8:	mov	ip, #0
     adc:	mov	r2, #0
     ae0:	str	r2, [sp, #20]
     ae4:	ldr	r2, [sp, #16]
     ae8:	mov	r1, r7
     aec:	cmp	r2, #0
     af0:	bne	b00 <dim_enter_array+0x330>
     af4:	cmp	r1, #0
     af8:	bhi	b08 <dim_enter_array+0x338>
     afc:	b	b58 <dim_enter_array+0x388>
     b00:	cmp	r2, #0
     b04:	ble	b58 <dim_enter_array+0x388>
     b08:	mov	r1, #0
     b0c:	ldr	r3, [r8, #4]
     b10:	cmp	r1, r3
     b14:	bge	b8c <dim_enter_array+0x3bc>
     b18:	ldr	r2, [pc, #1496]	; 10f8 <dim_enter_array+0x928>
     b1c:	add	r3, r6, r1
     b20:	lsl	r0, r1, #2
     b24:	add	r0, r8, r0
     b28:	ldr	r9, [r0, #8]
     b2c:	str	r9, [r2, r3, lsl #2]
     b30:	ldr	r2, [pc, #1484]	; 1104 <dim_enter_array+0x934>
     b34:	mov	r9, #0
     b38:	str	r9, [r2, r3, lsl #2]
     b3c:	mov	r2, #1
     b40:	ldr	r3, [r0, #8]
     b44:	cmn	r3, #1
     b48:	moveq	ip, r2
     b4c:	movne	ip, ip
     b50:	add	r1, r1, #1
     b54:	b	b0c <dim_enter_array+0x33c>
     b58:	mov	r2, #0
     b5c:	ldr	r1, [r8, #4]
     b60:	cmp	r2, r1
     b64:	bge	b8c <dim_enter_array+0x3bc>
     b68:	ldr	r3, [pc, #1416]	; 10f8 <dim_enter_array+0x928>
     b6c:	add	r0, r6, r2
     b70:	mov	r1, #0
     b74:	str	r1, [r3, r0, lsl #2]
     b78:	ldr	r3, [pc, #1412]	; 1104 <dim_enter_array+0x934>
     b7c:	mov	r1, #0
     b80:	str	r1, [r3, r0, lsl #2]
     b84:	add	r2, r2, #1
     b88:	b	b5c <dim_enter_array+0x38c>
     b8c:	cmp	ip, #0
     b90:	beq	d1c <dim_enter_array+0x54c>
     b94:	mov	r9, #0
     b98:	ldr	ip, [r8, #4]
     b9c:	cmp	r9, ip
     ba0:	bge	c70 <dim_enter_array+0x4a0>
     ba4:	lsl	r3, r9, #2
     ba8:	add	r0, r8, r3
     bac:	ldr	r1, [r0, #8]
     bb0:	cmn	r1, #1
     bb4:	bne	c4c <dim_enter_array+0x47c>
     bb8:	ldr	r1, [pc, #1352]	; 1108 <dim_enter_array+0x938>
     bbc:	add	r0, r6, r9
     bc0:	str	r6, [r1, r0, lsl #2]
     bc4:	lsl	r0, r4, #2
     bc8:	bl	0 <malloc>
     bcc:	ldr	r3, [pc, #1348]	; 1118 <dim_enter_array+0x948>
     bd0:	add	r1, r6, r9
     bd4:	str	r0, [r3, r1, lsl #2]
     bd8:	cmp	r0, #0
     bdc:	bne	c00 <dim_enter_array+0x430>
     be0:	mvn	r0, #0
     be4:	ldr	r1, [pc, #1312]	; 110c <dim_enter_array+0x93c>
     be8:	lsl	r2, r4, #2
     bec:	ldr	r3, [pc, #1328]	; 1124 <dim_enter_array+0x954>
     bf0:	mov	sl, #456	; 0x1c8
     bf4:	str	sl, [sp]
     bf8:	bl	0 <coda_set_error>
     bfc:	bl	0 <handle_coda_error>
     c00:	mov	ip, #0
     c04:	asr	r3, ip, #31
     c08:	mov	r0, ip
     c0c:	mov	r2, r5
     c10:	mov	r1, r4
     c14:	cmp	r3, r2
     c18:	bne	c28 <dim_enter_array+0x458>
     c1c:	cmp	r0, r1
     c20:	bcc	c30 <dim_enter_array+0x460>
     c24:	b	c68 <dim_enter_array+0x498>
     c28:	cmp	r3, r2
     c2c:	bge	c68 <dim_enter_array+0x498>
     c30:	ldr	r0, [pc, #1248]	; 1118 <dim_enter_array+0x948>
     c34:	add	r1, r6, r9
     c38:	ldr	r1, [r0, r1, lsl #2]
     c3c:	mvn	r0, #0
     c40:	str	r0, [r1, ip, lsl #2]
     c44:	add	ip, ip, #1
     c48:	b	c04 <dim_enter_array+0x434>
     c4c:	ldr	r2, [pc, #1204]	; 1108 <dim_enter_array+0x938>
     c50:	add	r1, r6, r9
     c54:	mov	r0, #0
     c58:	str	r0, [r2, r1, lsl #2]
     c5c:	ldr	r2, [pc, #1204]	; 1118 <dim_enter_array+0x948>
     c60:	mov	r3, #0
     c64:	str	r3, [r2, r1, lsl #2]
     c68:	add	r9, r9, #1
     c6c:	b	b98 <dim_enter_array+0x3c8>
     c70:	mov	r3, #0
     c74:	str	r3, [r8, #44]	; 0x2c
     c78:	mov	r0, #0
     c7c:	mov	r1, #0
     c80:	mov	r2, #0
     c84:	bl	2a8 <get_all_dims_for_array>
     c88:	mov	r9, #0
     c8c:	ldr	r1, [r8, #4]
     c90:	cmp	r9, r1
     c94:	bge	d1c <dim_enter_array+0x54c>
     c98:	lsl	r2, r9, #2
     c9c:	add	ip, r8, r2
     ca0:	ldr	r0, [ip, #8]
     ca4:	cmn	r0, #1
     ca8:	bne	d14 <dim_enter_array+0x544>
     cac:	ldr	r1, [pc, #1092]	; 10f8 <dim_enter_array+0x928>
     cb0:	add	r3, r6, r9
     cb4:	ldr	ip, [r1, r3, lsl #2]
     cb8:	ldr	r2, [pc, #1088]	; 1100 <dim_enter_array+0x930>
     cbc:	ldr	r0, [r2, r3, lsl #2]
     cc0:	cmp	ip, r0
     cc4:	bne	d00 <dim_enter_array+0x530>
     cc8:	ldr	r2, [pc, #1076]	; 1104 <dim_enter_array+0x934>
     ccc:	mov	ip, #0
     cd0:	str	ip, [r2, r3, lsl #2]
     cd4:	ldr	ip, [pc, #1084]	; 1118 <dim_enter_array+0x948>
     cd8:	ldr	r0, [ip, r3, lsl #2]
     cdc:	bl	0 <free>
     ce0:	ldr	r0, [pc, #1072]	; 1118 <dim_enter_array+0x948>
     ce4:	add	r2, r6, r9
     ce8:	mov	r3, #0
     cec:	str	r3, [r0, r2, lsl #2]
     cf0:	ldr	r3, [pc, #1040]	; 1108 <dim_enter_array+0x938>
     cf4:	mov	ip, #0
     cf8:	str	ip, [r3, r2, lsl #2]
     cfc:	b	d14 <dim_enter_array+0x544>
     d00:	ldr	r0, [pc, #1020]	; 1104 <dim_enter_array+0x934>
     d04:	mov	r1, #1
     d08:	str	r1, [r0, r3, lsl #2]
     d0c:	mov	ip, #1
     d10:	str	ip, [sp, #20]
     d14:	add	r9, r9, #1
     d18:	b	c8c <dim_enter_array+0x4bc>
     d1c:	ldr	r1, [pc, #976]	; 10f4 <dim_enter_array+0x924>
     d20:	mov	r2, #0
     d24:	str	r2, [r1]
     d28:	ldr	r3, [pc, #1024]	; 1130 <dim_enter_array+0x960>
     d2c:	mvn	r1, #0
     d30:	str	r1, [r3]
     d34:	mov	ip, #0
     d38:	ldr	r1, [pc, #928]	; 10e0 <dim_enter_array+0x910>
     d3c:	ldr	r2, [r1]
     d40:	cmp	ip, r2
     d44:	bge	d74 <dim_enter_array+0x5a4>
     d48:	ldr	r3, [pc, #948]	; 1104 <dim_enter_array+0x934>
     d4c:	ldr	r2, [r3, ip, lsl #2]
     d50:	cmp	r2, #0
     d54:	beq	d6c <dim_enter_array+0x59c>
     d58:	ldr	r1, [pc, #916]	; 10f4 <dim_enter_array+0x924>
     d5c:	mov	r0, #1
     d60:	str	r0, [r1]
     d64:	ldr	r0, [pc, #964]	; 1130 <dim_enter_array+0x960>
     d68:	str	ip, [r0]
     d6c:	add	ip, ip, #1
     d70:	b	d38 <dim_enter_array+0x568>
     d74:	mov	r1, #1
     d78:	str	r1, [r8, #40]	; 0x28
     d7c:	mov	r9, #0
     d80:	ldr	r0, [r8, #4]
     d84:	cmp	r9, r0
     d88:	bge	e20 <dim_enter_array+0x650>
     d8c:	ldr	ip, [r8, #40]	; 0x28
     d90:	ldr	r2, [pc, #864]	; 10f8 <dim_enter_array+0x928>
     d94:	add	r0, r6, r9
     d98:	ldr	r3, [r2, r0, lsl #2]
     d9c:	mul	r1, ip, r3
     da0:	str	r1, [r8, #40]	; 0x28
     da4:	cmp	r9, #0
     da8:	beq	dec <dim_enter_array+0x61c>
     dac:	ldr	r1, [pc, #876]	; 1120 <dim_enter_array+0x950>
     db0:	add	sl, r1, r0, lsl #3
     db4:	lsl	r3, r0, #3
     db8:	add	ip, r1, r3
     dbc:	sub	lr, ip, #4096	; 0x1000
     dc0:	ldr	r3, [lr, #4088]	; 0xff8
     dc4:	sub	lr, ip, #4096	; 0x1000
     dc8:	ldr	ip, [lr, #4092]	; 0xffc
     dcc:	ldr	fp, [r2, r0, lsl #2]
     dd0:	asr	r2, fp, #31
     dd4:	umull	r0, r1, r3, fp
     dd8:	mla	r1, r3, r2, r1
     ddc:	mla	ip, ip, fp, r1
     de0:	str	r0, [sl]
     de4:	str	ip, [sl, #4]
     de8:	b	e18 <dim_enter_array+0x648>
     dec:	ldr	r3, [pc, #812]	; 1120 <dim_enter_array+0x950>
     df0:	add	r3, r3, r6, lsl #3
     df4:	ldr	fp, [r2, r6, lsl #2]
     df8:	asr	r2, fp, #31
     dfc:	mov	ip, r4
     e00:	umull	r0, r1, ip, fp
     e04:	mov	sl, r5
     e08:	mla	r1, ip, r2, r1
     e0c:	mla	r2, sl, fp, r1
     e10:	str	r0, [r3]
     e14:	str	r2, [r3, #4]
     e18:	add	r9, r9, #1
     e1c:	b	d80 <dim_enter_array+0x5b0>
     e20:	ldr	r1, [sp, #20]
     e24:	cmp	r1, #0
     e28:	beq	f18 <dim_enter_array+0x748>
     e2c:	mov	ip, #0
     e30:	ldr	r3, [r8, #4]
     e34:	cmp	ip, r3
     e38:	bge	e60 <dim_enter_array+0x690>
     e3c:	ldr	r2, [pc, #744]	; 112c <dim_enter_array+0x95c>
     e40:	add	r3, r6, ip
     e44:	add	r3, r2, r3, lsl #3
     e48:	mov	r1, #0
     e4c:	mov	r0, #0
     e50:	str	r0, [r3]
     e54:	str	r1, [r3, #4]
     e58:	add	ip, ip, #1
     e5c:	b	e30 <dim_enter_array+0x660>
     e60:	mov	r1, #0
     e64:	asr	r3, r1, #31
     e68:	mov	r2, r1
     e6c:	mov	ip, r5
     e70:	cmp	r3, ip
     e74:	bne	e88 <dim_enter_array+0x6b8>
     e78:	mov	ip, r4
     e7c:	cmp	r2, ip
     e80:	bcc	e90 <dim_enter_array+0x6c0>
     e84:	b	fa0 <dim_enter_array+0x7d0>
     e88:	cmp	r3, ip
     e8c:	bge	fa0 <dim_enter_array+0x7d0>
     e90:	mov	r2, #1
     e94:	mov	r7, #0
     e98:	ldr	ip, [r8, #4]
     e9c:	cmp	r7, ip
     ea0:	bge	f10 <dim_enter_array+0x740>
     ea4:	ldr	r3, [pc, #600]	; 1104 <dim_enter_array+0x934>
     ea8:	add	r0, r6, r7
     eac:	ldr	r3, [r3, r0, lsl #2]
     eb0:	cmp	r3, #0
     eb4:	beq	ecc <dim_enter_array+0x6fc>
     eb8:	ldr	r3, [pc, #600]	; 1118 <dim_enter_array+0x948>
     ebc:	ldr	r3, [r3, r0, lsl #2]
     ec0:	ldr	r0, [r3, r1, lsl #2]
     ec4:	mul	r2, r2, r0
     ec8:	b	ed8 <dim_enter_array+0x708>
     ecc:	ldr	r3, [pc, #548]	; 10f8 <dim_enter_array+0x928>
     ed0:	ldr	ip, [r3, r0, lsl #2]
     ed4:	mul	r2, r2, ip
     ed8:	ldr	r0, [pc, #588]	; 112c <dim_enter_array+0x95c>
     edc:	add	ip, r6, r7
     ee0:	add	r9, r0, ip, lsl #3
     ee4:	ldr	r0, [r9]
     ee8:	ldr	ip, [r9, #4]
     eec:	mov	r3, r2
     ef0:	asr	sl, r3, #31
     ef4:	adds	lr, r0, r3
     ef8:	adc	r3, ip, sl
     efc:	mov	ip, lr
     f00:	str	ip, [r9]
     f04:	str	r3, [r9, #4]
     f08:	add	r7, r7, #1
     f0c:	b	e98 <dim_enter_array+0x6c8>
     f10:	add	r1, r1, #1
     f14:	b	e64 <dim_enter_array+0x694>
     f18:	ldr	r1, [pc, #524]	; 112c <dim_enter_array+0x95c>
     f1c:	add	r3, r1, r6, lsl #3
     f20:	ldr	r0, [sp, #16]
     f24:	ldr	r1, [pc, #460]	; 10f8 <dim_enter_array+0x928>
     f28:	ldr	r1, [r1, r6, lsl #2]
     f2c:	asr	r2, r1, #31
     f30:	umull	r4, ip, r7, r1
     f34:	mla	r2, r7, r2, ip
     f38:	mla	r1, r0, r1, r2
     f3c:	str	r4, [r3]
     f40:	str	r1, [r3, #4]
     f44:	mov	r4, #1
     f48:	ldr	r3, [r8, #4]
     f4c:	cmp	r4, r3
     f50:	bge	fa0 <dim_enter_array+0x7d0>
     f54:	ldr	r2, [pc, #464]	; 112c <dim_enter_array+0x95c>
     f58:	add	r1, r6, r4
     f5c:	add	r0, r2, r1, lsl #3
     f60:	lsl	r3, r1, #3
     f64:	add	r2, r2, r3
     f68:	sub	lr, r2, #4096	; 0x1000
     f6c:	ldr	ip, [lr, #4088]	; 0xff8
     f70:	sub	lr, r2, #4096	; 0x1000
     f74:	ldr	r2, [lr, #4092]	; 0xffc
     f78:	ldr	r3, [pc, #376]	; 10f8 <dim_enter_array+0x928>
     f7c:	ldr	r5, [r3, r1, lsl #2]
     f80:	asr	r1, r5, #31
     f84:	umull	r3, r7, ip, r5
     f88:	mla	r1, ip, r1, r7
     f8c:	mla	ip, r2, r5, r1
     f90:	str	r3, [r0]
     f94:	str	ip, [r0, #4]
     f98:	add	r4, r4, #1
     f9c:	b	f48 <dim_enter_array+0x778>
     fa0:	ldr	r3, [pc, #388]	; 112c <dim_enter_array+0x95c>
     fa4:	ldr	r0, [r8, #4]
     fa8:	add	r1, r6, r0
     fac:	lsl	ip, r1, #3
     fb0:	add	r0, r3, ip
     fb4:	sub	lr, r0, #4096	; 0x1000
     fb8:	ldr	ip, [lr, #4088]	; 0xff8
     fbc:	sub	lr, r0, #4096	; 0x1000
     fc0:	ldr	r1, [lr, #4092]	; 0xffc
     fc4:	cmp	r1, #0
     fc8:	bne	fd8 <dim_enter_array+0x808>
     fcc:	cmp	ip, #0
     fd0:	bhi	fe0 <dim_enter_array+0x810>
     fd4:	b	10b4 <dim_enter_array+0x8e4>
     fd8:	cmp	r1, #0
     fdc:	ble	10b4 <dim_enter_array+0x8e4>
     fe0:	ldr	r2, [pc, #252]	; 10e4 <dim_enter_array+0x914>
     fe4:	ldr	r3, [pc, #244]	; 10e0 <dim_enter_array+0x910>
     fe8:	ldr	r3, [r3]
     fec:	lsl	r1, r3, #3
     ff0:	add	ip, r2, r1
     ff4:	ldr	r0, [pc, #252]	; 10f8 <dim_enter_array+0x928>
     ff8:	lsl	r2, r3, #2
     ffc:	add	r2, r0, r2
    1000:	sub	lr, r2, #4096	; 0x1000
    1004:	ldr	r1, [lr, #4092]	; 0xffc
    1008:	asr	r2, r1, #31
    100c:	sub	lr, ip, #4096	; 0x1000
    1010:	str	r1, [lr, #4088]	; 0xff8
    1014:	sub	lr, ip, #4096	; 0x1000
    1018:	str	r2, [lr, #4092]	; 0xffc
    101c:	ldr	r1, [r8, #4]
    1020:	sub	r4, r1, #2
    1024:	cmp	r4, #0
    1028:	blt	1070 <dim_enter_array+0x8a0>
    102c:	ldr	r1, [pc, #176]	; 10e4 <dim_enter_array+0x914>
    1030:	add	r0, r6, r4
    1034:	add	r5, r1, r0, lsl #3
    1038:	ldr	ip, [pc, #184]	; 10f8 <dim_enter_array+0x928>
    103c:	ldr	r7, [ip, r0, lsl #2]
    1040:	asr	r2, r7, #31
    1044:	lsl	r3, r0, #3
    1048:	add	r1, r1, r3
    104c:	ldr	r0, [r1, #8]
    1050:	ldr	r1, [r1, #12]
    1054:	umull	ip, r3, r7, r0
    1058:	mla	r1, r7, r1, r3
    105c:	mla	r0, r2, r0, r1
    1060:	str	ip, [r5]
    1064:	str	r0, [r5, #4]
    1068:	sub	r4, r4, #1
    106c:	b	1024 <dim_enter_array+0x854>
    1070:	sub	r3, r6, #1
    1074:	cmp	r3, #0
    1078:	blt	10b4 <dim_enter_array+0x8e4>
    107c:	ldr	r1, [pc, #96]	; 10e4 <dim_enter_array+0x914>
    1080:	add	ip, r1, r3, lsl #3
    1084:	ldr	r4, [ip]
    1088:	ldr	r2, [ip, #4]
    108c:	add	r0, r1, r6, lsl #3
    1090:	ldr	r5, [r0]
    1094:	ldr	r7, [r0, #4]
    1098:	umull	r1, r0, r4, r5
    109c:	mla	r0, r4, r7, r0
    10a0:	mla	r2, r2, r5, r0
    10a4:	str	r1, [ip]
    10a8:	str	r2, [ip, #4]
    10ac:	sub	r3, r3, #1
    10b0:	b	1074 <dim_enter_array+0x8a4>
    10b4:	ldr	r4, [sp, #24]
    10b8:	ldr	r5, [sp, #28]
    10bc:	ldr	r6, [sp, #32]
    10c0:	ldr	r7, [sp, #36]	; 0x24
    10c4:	ldr	r8, [sp, #40]	; 0x28
    10c8:	ldr	r9, [sp, #44]	; 0x2c
    10cc:	ldr	sl, [sp, #48]	; 0x30
    10d0:	ldr	fp, [sp, #52]	; 0x34
    10d4:	ldr	lr, [sp, #8]
    10d8:	add	sp, sp, #112	; 0x70
    10dc:	bx	lr
    10e0:	.word	0x00000000
    10e4:	.word	0x000000b0
    10e8:	.word	0x00000063
    10ec:	.word	0x00000008
    10f0:	.word	0x00000d20
    10f4:	.word	0x00000044
    10f8:	.word	0x00000004
    10fc:	.word	0x00000088
    1100:	.word	0x00000024
    1104:	.word	0x00000048
    1108:	.word	0x0000008c
    110c:	.word	0x00000165
    1110:	.word	0x000001c9
    1114:	.word	0x00000163
    1118:	.word	0x0000006c
    111c:	.word	0x00000320
    1120:	.word	0x000000f0
	...
    112c:	.word	0x00000130
    1130:	.word	0x00000068

00001134 <dim_leave_array>:
    1134:	mov	ip, sp
    1138:	sub	sp, sp, #24
    113c:	str	ip, [sp]
    1140:	str	lr, [sp, #4]
    1144:	str	r4, [sp, #8]
    1148:	str	r5, [sp, #12]
    114c:	str	r6, [sp, #16]
    1150:	ldr	r0, [pc, #376]	; 12d0 <dim_leave_array+0x19c>
    1154:	ldr	r0, [r0]
    1158:	cmp	r0, #0
    115c:	bge	1174 <dim_leave_array+0x40>
    1160:	ldr	r0, [pc, #372]	; 12dc <dim_leave_array+0x1a8>
    1164:	ldr	r1, [pc, #384]	; 12ec <dim_leave_array+0x1b8>
    1168:	movw	r2, #579	; 0x243
    116c:	ldr	r3, [pc, #356]	; 12d8 <dim_leave_array+0x1a4>
    1170:	bl	0 <__assert_fail>
    1174:	ldr	ip, [pc, #364]	; 12e8 <dim_leave_array+0x1b4>
    1178:	ldr	r3, [pc, #336]	; 12d0 <dim_leave_array+0x19c>
    117c:	ldr	r2, [r3]
    1180:	lsl	r0, r2, #6
    1184:	add	r0, r0, r2, lsl #4
    1188:	add	r5, ip, r0
    118c:	ldr	r4, [r5]
    1190:	ldr	r3, [pc, #304]	; 12c8 <dim_leave_array+0x194>
    1194:	ldr	r1, [r3]
    1198:	ldr	ip, [r5, #4]
    119c:	sub	r0, r1, ip
    11a0:	str	r0, [r3]
    11a4:	mov	r6, #0
    11a8:	ldr	r2, [r5, #4]
    11ac:	cmp	r6, r2
    11b0:	bge	11dc <dim_leave_array+0xa8>
    11b4:	ldr	r2, [pc, #292]	; 12e0 <dim_leave_array+0x1ac>
    11b8:	add	r1, r4, r6
    11bc:	ldr	r0, [r2, r1, lsl #2]
    11c0:	cmp	r0, #0
    11c4:	beq	11d4 <dim_leave_array+0xa0>
    11c8:	ldr	r2, [pc, #276]	; 12e4 <dim_leave_array+0x1b0>
    11cc:	ldr	r0, [r2, r1, lsl #2]
    11d0:	bl	0 <free>
    11d4:	add	r6, r6, #1
    11d8:	b	11a8 <dim_leave_array+0x74>
    11dc:	ldr	r0, [pc, #240]	; 12d4 <dim_leave_array+0x1a0>
    11e0:	mov	r3, #0
    11e4:	str	r3, [r0]
    11e8:	ldr	ip, [pc, #256]	; 12f0 <dim_leave_array+0x1bc>
    11ec:	mvn	r1, #0
    11f0:	str	r1, [ip]
    11f4:	mov	r0, #0
    11f8:	ldr	ip, [pc, #200]	; 12c8 <dim_leave_array+0x194>
    11fc:	ldr	ip, [ip]
    1200:	cmp	r0, ip
    1204:	bge	1234 <dim_leave_array+0x100>
    1208:	ldr	r3, [pc, #208]	; 12e0 <dim_leave_array+0x1ac>
    120c:	ldr	ip, [r3, r0, lsl #2]
    1210:	cmp	ip, #0
    1214:	beq	122c <dim_leave_array+0xf8>
    1218:	ldr	r1, [pc, #180]	; 12d4 <dim_leave_array+0x1a0>
    121c:	mov	r2, #1
    1220:	str	r2, [r1]
    1224:	ldr	r3, [pc, #196]	; 12f0 <dim_leave_array+0x1bc>
    1228:	str	r0, [r3]
    122c:	add	r0, r0, #1
    1230:	b	11f8 <dim_leave_array+0xc4>
    1234:	ldr	ip, [pc, #184]	; 12f4 <dim_leave_array+0x1c0>
    1238:	ldr	r3, [r5, #4]
    123c:	add	r3, r4, r3
    1240:	lsl	r2, r3, #3
    1244:	add	r1, ip, r2
    1248:	sub	lr, r1, #4096	; 0x1000
    124c:	ldr	r0, [lr, #4088]	; 0xff8
    1250:	sub	lr, r1, #4096	; 0x1000
    1254:	ldr	ip, [lr, #4092]	; 0xffc
    1258:	cmp	ip, #0
    125c:	bne	126c <dim_leave_array+0x138>
    1260:	cmp	r0, #0
    1264:	bhi	1274 <dim_leave_array+0x140>
    1268:	b	12b0 <dim_leave_array+0x17c>
    126c:	cmp	ip, #0
    1270:	ble	12b0 <dim_leave_array+0x17c>
    1274:	sub	r6, r4, #1
    1278:	cmp	r6, #0
    127c:	blt	12b0 <dim_leave_array+0x17c>
    1280:	ldr	r2, [pc, #68]	; 12cc <dim_leave_array+0x198>
    1284:	add	r5, r2, r6, lsl #3
    1288:	ldr	r0, [r5]
    128c:	ldr	r1, [r5, #4]
    1290:	add	r3, r2, r4, lsl #3
    1294:	ldr	r2, [r3]
    1298:	ldr	r3, [r3, #4]
    129c:	bl	0 <__compcert_i64_sdiv>
    12a0:	str	r0, [r5]
    12a4:	str	r1, [r5, #4]
    12a8:	sub	r6, r6, #1
    12ac:	b	1278 <dim_leave_array+0x144>
    12b0:	ldr	r4, [sp, #8]
    12b4:	ldr	r5, [sp, #12]
    12b8:	ldr	r6, [sp, #16]
    12bc:	ldr	lr, [sp, #4]
    12c0:	add	sp, sp, #24
    12c4:	bx	lr
    12c8:	.word	0x00000000
    12cc:	.word	0x000000b0
    12d0:	.word	0x00000d20
    12d4:	.word	0x00000044
    12d8:	.word	0x000001d9
    12dc:	.word	0x0000010e
    12e0:	.word	0x00000048
    12e4:	.word	0x0000006c
    12e8:	.word	0x00000320
    12ec:	.word	0x00000000
    12f0:	.word	0x00000068
    12f4:	.word	0x00000130

000012f8 <get_record_field_available_status>:
    12f8:	mov	ip, sp
    12fc:	sub	sp, sp, #40	; 0x28
    1300:	str	ip, [sp]
    1304:	str	lr, [sp, #4]
    1308:	str	r4, [sp, #8]
    130c:	str	r5, [sp, #12]
    1310:	str	r6, [sp, #16]
    1314:	str	r7, [sp, #20]
    1318:	str	r8, [sp, #24]
    131c:	str	r9, [sp, #28]
    1320:	mov	r6, r2
    1324:	mov	r4, r1
    1328:	mov	r7, r0
    132c:	ldr	r0, [pc, #644]	; 15b8 <get_record_field_available_status+0x2c0>
    1330:	add	r1, sp, #32
    1334:	bl	0 <coda_cursor_get_type_class>
    1338:	cmp	r0, #0
    133c:	beq	1344 <get_record_field_available_status+0x4c>
    1340:	bl	0 <handle_coda_error>
    1344:	ldr	r1, [sp, #32]
    1348:	cmp	r1, #0
    134c:	beq	14e4 <get_record_field_available_status+0x1ec>
    1350:	cmp	r1, #1
    1354:	bne	14c4 <get_record_field_available_status+0x1cc>
    1358:	ldr	r2, [pc, #612]	; 15c4 <get_record_field_available_status+0x2cc>
    135c:	lsl	r3, r4, #6
    1360:	add	ip, r3, r4, lsl #4
    1364:	add	r9, r2, ip
    1368:	ldr	r5, [r9]
    136c:	ldr	r3, [pc, #560]	; 15a4 <get_record_field_available_status+0x2ac>
    1370:	ldr	r3, [r3]
    1374:	cmp	r4, r3
    1378:	blt	1390 <get_record_field_available_status+0x98>
    137c:	ldr	r0, [pc, #540]	; 15a0 <get_record_field_available_status+0x2a8>
    1380:	ldr	r1, [pc, #580]	; 15cc <get_record_field_available_status+0x2d4>
    1384:	movw	r2, #638	; 0x27e
    1388:	ldr	r3, [pc, #568]	; 15c8 <get_record_field_available_status+0x2d0>
    138c:	bl	0 <__assert_fail>
    1390:	cmp	r4, #0
    1394:	bne	13a0 <get_record_field_available_status+0xa8>
    1398:	mov	r1, #0
    139c:	str	r1, [r9, #44]	; 0x2c
    13a0:	ldr	r2, [pc, #508]	; 15a4 <get_record_field_available_status+0x2ac>
    13a4:	ldr	r0, [r2]
    13a8:	cmp	r4, r0
    13ac:	bge	13d0 <get_record_field_available_status+0xd8>
    13b0:	ldr	r2, [pc, #524]	; 15c4 <get_record_field_available_status+0x2cc>
    13b4:	lsl	r0, r4, #6
    13b8:	add	r3, r0, r4, lsl #4
    13bc:	add	r3, r2, r3
    13c0:	ldr	r0, [r9, #44]	; 0x2c
    13c4:	ldr	r1, [r9, #40]	; 0x28
    13c8:	mul	r2, r0, r1
    13cc:	str	r2, [r3, #124]	; 0x7c
    13d0:	mov	r8, #1
    13d4:	mov	r0, r5
    13d8:	ldr	r1, [r9, #4]
    13dc:	add	ip, r5, r1
    13e0:	cmp	r0, ip
    13e4:	bge	1424 <get_record_field_available_status+0x12c>
    13e8:	ldr	r1, [pc, #452]	; 15b4 <get_record_field_available_status+0x2bc>
    13ec:	ldr	r3, [r1, r0, lsl #2]
    13f0:	cmp	r3, #0
    13f4:	beq	1410 <get_record_field_available_status+0x118>
    13f8:	ldr	r2, [pc, #448]	; 15c0 <get_record_field_available_status+0x2c8>
    13fc:	ldr	r1, [r2, r0, lsl #2]
    1400:	ldr	r2, [r9, #44]	; 0x2c
    1404:	ldr	r1, [r1, r2, lsl #2]
    1408:	mul	r8, r8, r1
    140c:	b	141c <get_record_field_available_status+0x124>
    1410:	ldr	ip, [pc, #408]	; 15b0 <get_record_field_available_status+0x2b8>
    1414:	ldr	r2, [ip, r0, lsl #2]
    1418:	mul	r8, r8, r2
    141c:	add	r0, r0, #1
    1420:	b	13d8 <get_record_field_available_status+0xe0>
    1424:	cmp	r8, #0
    1428:	ble	1578 <get_record_field_available_status+0x280>
    142c:	ldr	r0, [pc, #388]	; 15b8 <get_record_field_available_status+0x2c0>
    1430:	bl	0 <coda_cursor_goto_first_array_element>
    1434:	cmp	r0, #0
    1438:	beq	1440 <get_record_field_available_status+0x148>
    143c:	bl	0 <handle_coda_error>
    1440:	mov	r5, #0
    1444:	cmp	r5, r8
    1448:	bge	14b8 <get_record_field_available_status+0x1c0>
    144c:	add	r0, r7, #1
    1450:	add	r1, r4, #1
    1454:	mov	r2, r6
    1458:	bl	12f8 <get_record_field_available_status>
    145c:	cmp	r0, #0
    1460:	beq	1474 <get_record_field_available_status+0x17c>
    1464:	ldr	r0, [pc, #332]	; 15b8 <get_record_field_available_status+0x2c0>
    1468:	bl	0 <coda_cursor_goto_parent>
    146c:	mov	r0, #1
    1470:	b	157c <get_record_field_available_status+0x284>
    1474:	sub	r2, r8, #1
    1478:	cmp	r5, r2
    147c:	bge	14b0 <get_record_field_available_status+0x1b8>
    1480:	ldr	r0, [pc, #304]	; 15b8 <get_record_field_available_status+0x2c0>
    1484:	bl	0 <coda_cursor_goto_next_array_element>
    1488:	cmp	r0, #0
    148c:	beq	1494 <get_record_field_available_status+0x19c>
    1490:	bl	0 <handle_coda_error>
    1494:	ldr	r0, [pc, #296]	; 15c4 <get_record_field_available_status+0x2cc>
    1498:	lsl	ip, r4, #6
    149c:	add	r1, ip, r4, lsl #4
    14a0:	add	r1, r0, r1
    14a4:	ldr	r2, [r1, #124]	; 0x7c
    14a8:	add	ip, r2, #1
    14ac:	str	ip, [r1, #124]	; 0x7c
    14b0:	add	r5, r5, #1
    14b4:	b	1444 <get_record_field_available_status+0x14c>
    14b8:	ldr	r0, [pc, #248]	; 15b8 <get_record_field_available_status+0x2c0>
    14bc:	bl	0 <coda_cursor_goto_parent>
    14c0:	b	1578 <get_record_field_available_status+0x280>
    14c4:	ldr	r0, [pc, #240]	; 15bc <get_record_field_available_status+0x2c4>
    14c8:	ldr	r1, [pc, #252]	; 15cc <get_record_field_available_status+0x2d4>
    14cc:	movw	r2, #729	; 0x2d9
    14d0:	ldr	r3, [pc, #240]	; 15c8 <get_record_field_available_status+0x2d0>
    14d4:	bl	0 <__assert_fail>
    14d8:	mov	r0, #1
    14dc:	bl	0 <exit>
    14e0:	b	1578 <get_record_field_available_status+0x280>
    14e4:	ldr	r0, [pc, #204]	; 15b8 <get_record_field_available_status+0x2c0>
    14e8:	ldr	r1, [pc, #184]	; 15a8 <get_record_field_available_status+0x2b0>
    14ec:	ldr	r1, [r1, r6, lsl #2]
    14f0:	add	r2, sp, #36	; 0x24
    14f4:	bl	0 <coda_cursor_get_record_field_available_status>
    14f8:	cmp	r0, #0
    14fc:	beq	1504 <get_record_field_available_status+0x20c>
    1500:	bl	0 <handle_coda_error>
    1504:	ldr	r2, [sp, #36]	; 0x24
    1508:	cmp	r2, #0
    150c:	beq	1578 <get_record_field_available_status+0x280>
    1510:	ldr	ip, [pc, #148]	; 15ac <get_record_field_available_status+0x2b4>
    1514:	ldr	ip, [ip]
    1518:	sub	ip, ip, #1
    151c:	cmp	r6, ip
    1520:	beq	1570 <get_record_field_available_status+0x278>
    1524:	ldr	r0, [pc, #140]	; 15b8 <get_record_field_available_status+0x2c0>
    1528:	ldr	ip, [pc, #120]	; 15a8 <get_record_field_available_status+0x2b0>
    152c:	ldr	r1, [ip, r6, lsl #2]
    1530:	bl	0 <coda_cursor_goto_record_field_by_index>
    1534:	cmp	r0, #0
    1538:	beq	1540 <get_record_field_available_status+0x248>
    153c:	bl	0 <handle_coda_error>
    1540:	add	r0, r7, #1
    1544:	add	r2, r6, #1
    1548:	mov	r1, r4
    154c:	bl	12f8 <get_record_field_available_status>
    1550:	str	r0, [sp, #36]	; 0x24
    1554:	ldr	r0, [pc, #92]	; 15b8 <get_record_field_available_status+0x2c0>
    1558:	bl	0 <coda_cursor_goto_parent>
    155c:	ldr	r0, [sp, #36]	; 0x24
    1560:	cmp	r0, #0
    1564:	beq	1578 <get_record_field_available_status+0x280>
    1568:	mov	r0, #1
    156c:	b	157c <get_record_field_available_status+0x284>
    1570:	mov	r0, #1
    1574:	b	157c <get_record_field_available_status+0x284>
    1578:	mov	r0, #0
    157c:	ldr	r4, [sp, #8]
    1580:	ldr	r5, [sp, #12]
    1584:	ldr	r6, [sp, #16]
    1588:	ldr	r7, [sp, #20]
    158c:	ldr	r8, [sp, #24]
    1590:	ldr	r9, [sp, #28]
    1594:	ldr	lr, [sp, #4]
    1598:	add	sp, sp, #40	; 0x28
    159c:	bx	lr
    15a0:	.word	0x0000009c
    15a4:	.word	0x00000d20
    15a8:	.word	0x00000da4
    15ac:	.word	0x00000ea4
    15b0:	.word	0x00000004
    15b4:	.word	0x00000048
    15b8:	.word	0x00000090
    15bc:	.word	0x00000163
    15c0:	.word	0x0000006c
    15c4:	.word	0x00000320
    15c8:	.word	0x000001e9
    15cc:	.word	0x00000000

000015d0 <dim_record_field_available>:
    15d0:	mov	ip, sp
    15d4:	sub	sp, sp, #8
    15d8:	str	ip, [sp]
    15dc:	str	lr, [sp, #4]
    15e0:	mov	r0, #0
    15e4:	mov	r1, #0
    15e8:	mov	r2, #0
    15ec:	ldr	lr, [sp, #4]
    15f0:	add	sp, sp, #8
    15f4:	b	12f8 <get_record_field_available_status>
