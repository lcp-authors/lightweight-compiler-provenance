
../compcert-repos/prog2/CMakeFiles/1.1.3.dir/Aula01_Ficheiros_e_Formatos_de_dados/01.3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <in_array>:
   0:	sub	sp, sp, #20
   4:	str	r0, [sp, #12]
   8:	str	r1, [sp, #8]
   c:	str	r2, [sp, #4]
  10:	movw	r0, #0
  14:	str	r0, [sp]
  18:	str	r0, [sp]
  1c:	ldr	r0, [sp]
  20:	ldr	r1, [sp, #4]
  24:	cmp	r0, r1
  28:	bgt	68 <in_array+0x68>
  2c:	ldr	r0, [sp, #8]
  30:	ldr	r1, [sp]
  34:	add	r0, r0, r1, lsl #2
  38:	ldr	r0, [r0]
  3c:	ldr	r1, [sp, #12]
  40:	cmp	r0, r1
  44:	bne	54 <in_array+0x54>
  48:	movw	r0, #1
  4c:	str	r0, [sp, #16]
  50:	b	70 <in_array+0x70>
  54:	b	58 <in_array+0x58>
  58:	ldr	r0, [sp]
  5c:	add	r0, r0, #1
  60:	str	r0, [sp]
  64:	b	1c <in_array+0x1c>
  68:	movw	r0, #0
  6c:	str	r0, [sp, #16]
  70:	ldr	r0, [sp, #16]
  74:	add	sp, sp, #20
  78:	bx	lr

0000007c <main>:
  7c:	push	{fp, lr}
  80:	mov	fp, sp
  84:	sub	sp, sp, #72	; 0x48
  88:	movw	r0, #0
  8c:	str	r0, [fp, #-4]
  90:	movw	r0, #0
  94:	movt	r0, #0
  98:	ldr	r1, [r0]
  9c:	str	r1, [fp, #-16]
  a0:	ldr	r0, [r0, #4]
  a4:	str	r0, [fp, #-12]
  a8:	movw	r0, #0
  ac:	movt	r0, #0
  b0:	ldr	r1, [r0]
  b4:	str	r1, [fp, #-24]	; 0xffffffe8
  b8:	ldr	r0, [r0, #4]
  bc:	str	r0, [fp, #-20]	; 0xffffffec
  c0:	movw	r0, #0
  c4:	movt	r0, #0
  c8:	ldr	r1, [r0]
  cc:	str	r1, [fp, #-32]	; 0xffffffe0
  d0:	ldr	r0, [r0, #4]
  d4:	str	r0, [fp, #-28]	; 0xffffffe4
  d8:	movw	r0, #0
  dc:	movt	r0, #0
  e0:	movw	r1, #0
  e4:	movt	r1, #0
  e8:	bl	0 <fopen>
  ec:	str	r0, [fp, #-8]
  f0:	movw	r0, #0
  f4:	str	r0, [sp, #36]	; 0x24
  f8:	add	r0, sp, #24
  fc:	movw	r1, #0
 100:	and	r1, r1, #255	; 0xff
 104:	movw	r2, #12
 108:	bl	0 <memset>
 10c:	movw	r0, #0
 110:	movt	r0, #0
 114:	ldrb	r1, [r0]
 118:	strb	r1, [sp, #21]
 11c:	ldrb	r1, [r0, #1]
 120:	strb	r1, [sp, #22]
 124:	ldrb	r0, [r0, #2]
 128:	strb	r0, [sp, #23]
 12c:	ldr	r0, [sp, #36]	; 0x24
 130:	cmn	r0, #1
 134:	beq	1e0 <main+0x164>
 138:	ldr	r0, [fp, #-8]
 13c:	bl	0 <getc>
 140:	str	r0, [sp, #36]	; 0x24
 144:	ldr	r0, [sp, #36]	; 0x24
 148:	cmp	r0, #195	; 0xc3
 14c:	bne	1dc <main+0x160>
 150:	ldr	r0, [fp, #-8]
 154:	bl	0 <getc>
 158:	sub	r1, fp, #16
 15c:	str	r0, [sp, #36]	; 0x24
 160:	ldr	r0, [sp, #36]	; 0x24
 164:	movw	r2, #2
 168:	bl	0 <in_array>
 16c:	cmp	r0, #0
 170:	beq	184 <main+0x108>
 174:	ldr	r0, [sp, #24]
 178:	add	r0, r0, #1
 17c:	str	r0, [sp, #24]
 180:	b	1d8 <main+0x15c>
 184:	sub	r1, fp, #24
 188:	ldr	r0, [sp, #36]	; 0x24
 18c:	movw	r2, #2
 190:	bl	0 <in_array>
 194:	cmp	r0, #0
 198:	beq	1ac <main+0x130>
 19c:	ldr	r0, [sp, #28]
 1a0:	add	r0, r0, #1
 1a4:	str	r0, [sp, #28]
 1a8:	b	1d4 <main+0x158>
 1ac:	sub	r1, fp, #32
 1b0:	ldr	r0, [sp, #36]	; 0x24
 1b4:	movw	r2, #2
 1b8:	bl	0 <in_array>
 1bc:	cmp	r0, #0
 1c0:	beq	1d0 <main+0x154>
 1c4:	ldr	r0, [sp, #32]
 1c8:	add	r0, r0, #1
 1cc:	str	r0, [sp, #32]
 1d0:	b	1d4 <main+0x158>
 1d4:	b	1d8 <main+0x15c>
 1d8:	b	1dc <main+0x160>
 1dc:	b	12c <main+0xb0>
 1e0:	ldr	r0, [sp, #16]
 1e4:	str	r0, [sp, #12]
 1e8:	ldr	r0, [fp, #-8]
 1ec:	bl	0 <fclose>
 1f0:	movw	lr, #0
 1f4:	str	lr, [sp, #16]
 1f8:	str	r0, [sp, #8]
 1fc:	ldr	r0, [sp, #16]
 200:	cmp	r0, #2
 204:	bge	240 <main+0x1c4>
 208:	ldr	r0, [sp, #16]
 20c:	add	r1, sp, #21
 210:	ldrb	r1, [r1, r0]
 214:	add	r2, sp, #24
 218:	add	r0, r2, r0, lsl #2
 21c:	ldr	r2, [r0]
 220:	movw	r0, #0
 224:	movt	r0, #0
 228:	bl	0 <printf>
 22c:	str	r0, [sp, #4]
 230:	ldr	r0, [sp, #16]
 234:	add	r0, r0, #1
 238:	str	r0, [sp, #16]
 23c:	b	1fc <main+0x180>
 240:	ldr	r0, [sp, #16]
 244:	add	r1, sp, #21
 248:	add	r0, r1, r0
 24c:	ldrb	r1, [r0]
 250:	ldr	r2, [sp, #32]
 254:	movw	r0, #0
 258:	movt	r0, #0
 25c:	bl	0 <printf>
 260:	ldr	r1, [fp, #-4]
 264:	str	r0, [sp]
 268:	mov	r0, r1
 26c:	mov	sp, fp
 270:	pop	{fp, pc}
