
../compcert-repos/prog2/CMakeFiles/0.4.dir/Aula00_Conceitos_base/04.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ordenado>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	sub	sp, sp, #20
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	ldr	r3, [fp, #-16]
  18:	ldr	r3, [r3]
  1c:	str	r3, [fp, #-12]
  20:	mov	r3, #1
  24:	str	r3, [fp, #-8]
  28:	b	78 <ordenado+0x78>
  2c:	ldr	r3, [fp, #-8]
  30:	lsl	r3, r3, #2
  34:	ldr	r2, [fp, #-16]
  38:	add	r3, r2, r3
  3c:	ldr	r3, [r3]
  40:	ldr	r2, [fp, #-12]
  44:	cmp	r2, r3
  48:	ble	54 <ordenado+0x54>
  4c:	mov	r3, #0
  50:	b	8c <ordenado+0x8c>
  54:	ldr	r3, [fp, #-8]
  58:	lsl	r3, r3, #2
  5c:	ldr	r2, [fp, #-16]
  60:	add	r3, r2, r3
  64:	ldr	r3, [r3]
  68:	str	r3, [fp, #-12]
  6c:	ldr	r3, [fp, #-8]
  70:	add	r3, r3, #1
  74:	str	r3, [fp, #-8]
  78:	ldr	r2, [fp, #-8]
  7c:	ldr	r3, [fp, #-20]	; 0xffffffec
  80:	cmp	r2, r3
  84:	blt	2c <ordenado+0x2c>
  88:	mov	r3, #1
  8c:	mov	r0, r3
  90:	add	sp, fp, #0
  94:	pop	{fp}		; (ldr fp, [sp], #4)
  98:	bx	lr

0000009c <main>:
  9c:	str	fp, [sp, #-8]!
  a0:	str	lr, [sp, #4]
  a4:	add	fp, sp, #4
  a8:	sub	sp, sp, #16
  ac:	movw	r0, #0
  b0:	movt	r0, #0
  b4:	bl	0 <printf>
  b8:	sub	r3, fp, #16
  bc:	mov	r1, r3
  c0:	movw	r0, #0
  c4:	movt	r0, #0
  c8:	bl	0 <__isoc99_scanf>
  cc:	ldr	r3, [fp, #-16]
  d0:	cmp	r3, #100	; 0x64
  d4:	ble	ec <main+0x50>
  d8:	movw	r0, #0
  dc:	movt	r0, #0
  e0:	bl	0 <printf>
  e4:	mov	r3, #100	; 0x64
  e8:	str	r3, [fp, #-16]
  ec:	ldr	r3, [fp, #-16]
  f0:	lsl	r3, r3, #2
  f4:	mov	r0, r3
  f8:	bl	0 <malloc>
  fc:	mov	r3, r0
 100:	str	r3, [fp, #-12]
 104:	mov	r3, #0
 108:	str	r3, [fp, #-8]
 10c:	b	154 <main+0xb8>
 110:	ldr	r3, [fp, #-8]
 114:	add	r3, r3, #1
 118:	mov	r1, r3
 11c:	movw	r0, #0
 120:	movt	r0, #0
 124:	bl	0 <printf>
 128:	ldr	r3, [fp, #-8]
 12c:	lsl	r3, r3, #2
 130:	ldr	r2, [fp, #-12]
 134:	add	r3, r2, r3
 138:	mov	r1, r3
 13c:	movw	r0, #0
 140:	movt	r0, #0
 144:	bl	0 <__isoc99_scanf>
 148:	ldr	r3, [fp, #-8]
 14c:	add	r3, r3, #1
 150:	str	r3, [fp, #-8]
 154:	ldr	r3, [fp, #-16]
 158:	ldr	r2, [fp, #-8]
 15c:	cmp	r2, r3
 160:	blt	110 <main+0x74>
 164:	ldr	r3, [fp, #-16]
 168:	mov	r1, r3
 16c:	ldr	r0, [fp, #-12]
 170:	bl	0 <ordenado>
 174:	mov	r3, r0
 178:	cmp	r3, #0
 17c:	beq	200 <main+0x164>
 180:	movw	r0, #0
 184:	movt	r0, #0
 188:	bl	0 <printf>
 18c:	ldr	r3, [fp, #-16]
 190:	sub	r3, r3, #1
 194:	str	r3, [fp, #-8]
 198:	b	1cc <main+0x130>
 19c:	ldr	r3, [fp, #-8]
 1a0:	lsl	r3, r3, #2
 1a4:	ldr	r2, [fp, #-12]
 1a8:	add	r3, r2, r3
 1ac:	ldr	r3, [r3]
 1b0:	mov	r1, r3
 1b4:	movw	r0, #0
 1b8:	movt	r0, #0
 1bc:	bl	0 <printf>
 1c0:	ldr	r3, [fp, #-8]
 1c4:	sub	r3, r3, #1
 1c8:	str	r3, [fp, #-8]
 1cc:	ldr	r3, [fp, #-8]
 1d0:	cmp	r3, #0
 1d4:	bgt	19c <main+0x100>
 1d8:	ldr	r3, [fp, #-8]
 1dc:	lsl	r3, r3, #2
 1e0:	ldr	r2, [fp, #-12]
 1e4:	add	r3, r2, r3
 1e8:	ldr	r3, [r3]
 1ec:	mov	r1, r3
 1f0:	movw	r0, #0
 1f4:	movt	r0, #0
 1f8:	bl	0 <printf>
 1fc:	b	20c <main+0x170>
 200:	movw	r0, #0
 204:	movt	r0, #0
 208:	bl	0 <puts>
 20c:	mov	r3, #0
 210:	mov	r0, r3
 214:	sub	sp, fp, #4
 218:	ldr	fp, [sp]
 21c:	add	sp, sp, #4
 220:	pop	{pc}		; (ldr pc, [sp], #4)
