
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-detection.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <delete_detection_node>:
   0:	strd	r4, [sp, #-16]!
   4:	mov	r5, r0
   8:	ldr	r0, [r0]
   c:	str	r6, [sp, #8]
  10:	str	lr, [sp, #12]
  14:	cmp	r0, #0
  18:	beq	20 <delete_detection_node+0x20>
  1c:	bl	0 <free>
  20:	ldr	r0, [r5, #16]
  24:	cmp	r0, #0
  28:	beq	5c <delete_detection_node+0x5c>
  2c:	ldr	r3, [r5, #12]
  30:	cmp	r3, #0
  34:	ble	58 <delete_detection_node+0x58>
  38:	mov	r4, #0
  3c:	ldr	r0, [r0, r4, lsl #2]
  40:	add	r4, r4, #1
  44:	bl	0 <delete_detection_node>
  48:	ldr	r3, [r5, #12]
  4c:	ldr	r0, [r5, #16]
  50:	cmp	r3, r4
  54:	bgt	3c <delete_detection_node+0x3c>
  58:	bl	0 <free>
  5c:	mov	r0, r5
  60:	ldrd	r4, [sp]
  64:	ldr	r6, [sp, #8]
  68:	ldr	lr, [sp, #12]
  6c:	add	sp, sp, #16
  70:	b	0 <free>

00000074 <detection_node_new>:
  74:	mov	r0, #20
  78:	str	r4, [sp, #-8]!
  7c:	str	lr, [sp, #4]
  80:	sub	sp, sp, #8
  84:	bl	0 <malloc>
  88:	subs	r4, r0, #0
  8c:	beq	bc <detection_node_new+0x48>
  90:	mov	r3, #0
  94:	str	r3, [r4]
  98:	str	r3, [r4, #4]
  9c:	str	r3, [r4, #8]
  a0:	str	r3, [r4, #12]
  a4:	str	r3, [r4, #16]
  a8:	mov	r0, r4
  ac:	add	sp, sp, #8
  b0:	ldr	r4, [sp]
  b4:	add	sp, sp, #4
  b8:	pop	{pc}		; (ldr pc, [sp], #4)
  bc:	mov	r0, #202	; 0xca
  c0:	movw	r3, #0
  c4:	movt	r3, #0
  c8:	movw	r1, #0
  cc:	movt	r1, #0
  d0:	mov	r2, #20
  d4:	str	r0, [sp]
  d8:	mvn	r0, #0
  dc:	bl	0 <coda_set_error>
  e0:	b	a8 <detection_node_new+0x34>

000000e4 <detection_node_add_node.isra.1>:
  e4:	strd	r4, [sp, #-16]!
  e8:	mov	r5, r0
  ec:	mov	r4, r2
  f0:	str	r6, [sp, #8]
  f4:	mov	r6, r1
  f8:	ldr	r1, [r0]
  fc:	str	lr, [sp, #12]
 100:	sub	sp, sp, #8
 104:	ldr	r0, [r6]
 108:	tst	r1, #15
 10c:	beq	1b0 <detection_node_add_node.isra.1+0xcc>
 110:	lsl	r2, r1, #2
 114:	add	r3, r1, #1
 118:	cmp	r1, #0
 11c:	str	r4, [r0, r1, lsl #2]
 120:	add	ip, r0, r2
 124:	str	r3, [r5]
 128:	ble	198 <detection_node_add_node.isra.1+0xb4>
 12c:	ldr	r3, [r4]
 130:	cmp	r3, #0
 134:	beq	198 <detection_node_add_node.isra.1+0xb4>
 138:	sub	r2, r2, #4
 13c:	ldr	r3, [r0, r2]
 140:	add	r2, r0, r2
 144:	ldr	lr, [r3, #4]
 148:	cmp	lr, #0
 14c:	beq	198 <detection_node_add_node.isra.1+0xb4>
 150:	sub	r1, r1, #1
 154:	add	r0, r0, r1, lsl #2
 158:	b	180 <detection_node_add_node.isra.1+0x9c>
 15c:	ldr	r4, [r0], #-4
 160:	ldr	r3, [r4]
 164:	mov	r2, r0
 168:	cmp	r3, #0
 16c:	beq	198 <detection_node_add_node.isra.1+0xb4>
 170:	ldr	r3, [r0]
 174:	ldr	lr, [r3, #4]
 178:	cmp	lr, #0
 17c:	beq	198 <detection_node_add_node.isra.1+0xb4>
 180:	cmp	r1, #0
 184:	sub	r1, r1, #1
 188:	str	r3, [ip]
 18c:	mov	ip, r0
 190:	str	r4, [r2]
 194:	bne	15c <detection_node_add_node.isra.1+0x78>
 198:	mov	r0, #0
 19c:	add	sp, sp, #8
 1a0:	ldrd	r4, [sp]
 1a4:	ldr	r6, [sp, #8]
 1a8:	add	sp, sp, #12
 1ac:	pop	{pc}		; (ldr pc, [sp], #4)
 1b0:	add	r1, r1, #16
 1b4:	lsl	r1, r1, #2
 1b8:	bl	0 <realloc>
 1bc:	cmp	r0, #0
 1c0:	beq	1d0 <detection_node_add_node.isra.1+0xec>
 1c4:	ldr	r1, [r5]
 1c8:	str	r0, [r6]
 1cc:	b	110 <detection_node_add_node.isra.1+0x2c>
 1d0:	ldr	r2, [r5]
 1d4:	mov	ip, #226	; 0xe2
 1d8:	mvn	r0, #0
 1dc:	movw	r3, #0
 1e0:	movt	r3, #0
 1e4:	movw	r1, #0
 1e8:	movt	r1, #0
 1ec:	str	ip, [sp]
 1f0:	add	r2, r2, #16
 1f4:	lsl	r2, r2, #2
 1f8:	bl	0 <coda_set_error>
 1fc:	mvn	r0, #0
 200:	b	19c <detection_node_add_node.isra.1+0xb8>

00000204 <coda_detection_rule_entry_delete>:
 204:	str	r4, [sp, #-8]!
 208:	mov	r4, r0
 20c:	ldr	r0, [r0]
 210:	str	lr, [sp, #4]
 214:	cmp	r0, #0
 218:	beq	220 <coda_detection_rule_entry_delete+0x1c>
 21c:	bl	0 <free>
 220:	ldr	r0, [r4, #4]
 224:	cmp	r0, #0
 228:	beq	230 <coda_detection_rule_entry_delete+0x2c>
 22c:	bl	0 <coda_expression_delete>
 230:	mov	r0, r4
 234:	ldr	r4, [sp]
 238:	ldr	lr, [sp, #4]
 23c:	add	sp, sp, #8
 240:	b	0 <free>

00000244 <coda_detection_rule_entry_new>:
 244:	strd	r4, [sp, #-16]!
 248:	subs	r5, r0, #0
 24c:	str	r6, [sp, #8]
 250:	str	lr, [sp, #12]
 254:	sub	sp, sp, #16
 258:	beq	2e4 <coda_detection_rule_entry_new+0xa0>
 25c:	add	r1, sp, #12
 260:	bl	0 <coda_expression_from_string>
 264:	cmp	r0, #0
 268:	bne	2dc <coda_detection_rule_entry_new+0x98>
 26c:	add	r1, sp, #8
 270:	ldr	r0, [sp, #12]
 274:	bl	0 <coda_expression_get_type>
 278:	subs	r6, r0, #0
 27c:	ldr	r0, [sp, #12]
 280:	bne	2d8 <coda_detection_rule_entry_new+0x94>
 284:	bl	0 <coda_expression_delete>
 288:	ldr	r3, [sp, #8]
 28c:	cmp	r3, #4
 290:	bne	328 <coda_detection_rule_entry_new+0xe4>
 294:	mov	r0, #8
 298:	bl	0 <malloc>
 29c:	subs	r4, r0, #0
 2a0:	beq	2fc <coda_detection_rule_entry_new+0xb8>
 2a4:	mov	r0, r5
 2a8:	str	r6, [r4, #4]
 2ac:	bl	0 <strdup>
 2b0:	cmp	r0, #0
 2b4:	mov	r5, r0
 2b8:	str	r0, [r4]
 2bc:	beq	340 <coda_detection_rule_entry_new+0xfc>
 2c0:	mov	r0, r4
 2c4:	add	sp, sp, #16
 2c8:	ldrd	r4, [sp]
 2cc:	ldr	r6, [sp, #8]
 2d0:	add	sp, sp, #12
 2d4:	pop	{pc}		; (ldr pc, [sp], #4)
 2d8:	bl	0 <coda_expression_delete>
 2dc:	mov	r4, #0
 2e0:	b	2c0 <coda_detection_rule_entry_new+0x7c>
 2e4:	mov	r0, #8
 2e8:	bl	0 <malloc>
 2ec:	subs	r4, r0, #0
 2f0:	strne	r5, [r4]
 2f4:	strne	r5, [r4, #4]
 2f8:	bne	2c0 <coda_detection_rule_entry_new+0x7c>
 2fc:	mov	r0, #82	; 0x52
 300:	movw	r3, #0
 304:	movt	r3, #0
 308:	movw	r1, #0
 30c:	movt	r1, #0
 310:	mov	r2, #8
 314:	str	r0, [sp]
 318:	mvn	r0, #0
 31c:	mov	r4, #0
 320:	bl	0 <coda_set_error>
 324:	b	2c0 <coda_detection_rule_entry_new+0x7c>
 328:	movw	r1, #0
 32c:	movt	r1, #0
 330:	movw	r0, #65136	; 0xfe70
 334:	movt	r0, #65535	; 0xffff
 338:	bl	0 <coda_set_error>
 33c:	b	2dc <coda_detection_rule_entry_new+0x98>
 340:	mov	r3, #94	; 0x5e
 344:	mvn	r0, #0
 348:	movw	r2, #0
 34c:	movt	r2, #0
 350:	movw	r1, #0
 354:	movt	r1, #0
 358:	bl	0 <coda_set_error>
 35c:	mov	r0, r4
 360:	mov	r4, r5
 364:	bl	0 <free>
 368:	b	2c0 <coda_detection_rule_entry_new+0x7c>

0000036c <coda_detection_rule_entry_set_expression>:
 36c:	ldr	r3, [r0, #4]
 370:	cmp	r3, #0
 374:	bne	384 <coda_detection_rule_entry_set_expression+0x18>
 378:	str	r1, [r0, #4]
 37c:	mov	r0, r3
 380:	bx	lr
 384:	movw	r1, #0
 388:	movt	r1, #0
 38c:	str	r4, [sp, #-8]!
 390:	movw	r0, #65136	; 0xfe70
 394:	movt	r0, #65535	; 0xffff
 398:	str	lr, [sp, #4]
 39c:	bl	0 <coda_set_error>
 3a0:	mvn	r3, #0
 3a4:	ldr	r4, [sp]
 3a8:	add	sp, sp, #4
 3ac:	mov	r0, r3
 3b0:	pop	{pc}		; (ldr pc, [sp], #4)

000003b4 <coda_detection_rule_delete>:
 3b4:	ldr	r2, [r0, #4]
 3b8:	strd	r4, [sp, #-16]!
 3bc:	mov	r5, r0
 3c0:	str	r6, [sp, #8]
 3c4:	str	lr, [sp, #12]
 3c8:	cmp	r2, #0
 3cc:	beq	408 <coda_detection_rule_delete+0x54>
 3d0:	ldr	r1, [r0]
 3d4:	cmp	r1, #0
 3d8:	ble	400 <coda_detection_rule_delete+0x4c>
 3dc:	mov	r4, #0
 3e0:	ldr	r3, [r2, r4, lsl #2]
 3e4:	add	r4, r4, #1
 3e8:	subs	r0, r3, #0
 3ec:	beq	3f8 <coda_detection_rule_delete+0x44>
 3f0:	bl	204 <coda_detection_rule_entry_delete>
 3f4:	ldm	r5, {r1, r2}
 3f8:	cmp	r1, r4
 3fc:	bgt	3e0 <coda_detection_rule_delete+0x2c>
 400:	mov	r0, r2
 404:	bl	0 <free>
 408:	mov	r0, r5
 40c:	ldrd	r4, [sp]
 410:	ldr	r6, [sp, #8]
 414:	ldr	lr, [sp, #12]
 418:	add	sp, sp, #16
 41c:	b	0 <free>

00000420 <coda_detection_rule_new>:
 420:	mov	r0, #12
 424:	str	r4, [sp, #-8]!
 428:	str	lr, [sp, #4]
 42c:	sub	sp, sp, #8
 430:	bl	0 <malloc>
 434:	subs	r4, r0, #0
 438:	movne	r3, #0
 43c:	strne	r3, [r4]
 440:	strne	r3, [r4, #4]
 444:	strne	r3, [r4, #8]
 448:	beq	460 <coda_detection_rule_new+0x40>
 44c:	mov	r0, r4
 450:	add	sp, sp, #8
 454:	ldr	r4, [sp]
 458:	add	sp, sp, #4
 45c:	pop	{pc}		; (ldr pc, [sp], #4)
 460:	mov	r0, #141	; 0x8d
 464:	movw	r3, #0
 468:	movt	r3, #0
 46c:	movw	r1, #0
 470:	movt	r1, #0
 474:	mov	r2, #12
 478:	str	r0, [sp]
 47c:	mvn	r0, #0
 480:	bl	0 <coda_set_error>
 484:	b	44c <coda_detection_rule_new+0x2c>

00000488 <coda_detection_rule_add_entry>:
 488:	ldr	r3, [r1]
 48c:	strd	r4, [sp, #-12]!
 490:	mov	r5, r1
 494:	mov	r4, r0
 498:	str	lr, [sp, #8]
 49c:	sub	sp, sp, #12
 4a0:	cmp	r3, #0
 4a4:	beq	4e8 <coda_detection_rule_add_entry+0x60>
 4a8:	ldr	r1, [r4]
 4ac:	ldr	r0, [r4, #4]
 4b0:	add	r1, r1, #1
 4b4:	lsl	r1, r1, #2
 4b8:	bl	0 <realloc>
 4bc:	subs	r3, r0, #0
 4c0:	ldr	r2, [r4]
 4c4:	beq	510 <coda_detection_rule_add_entry+0x88>
 4c8:	add	r1, r2, #1
 4cc:	mov	r0, #0
 4d0:	stm	r4, {r1, r3}
 4d4:	str	r5, [r3, r2, lsl #2]
 4d8:	add	sp, sp, #12
 4dc:	ldrd	r4, [sp]
 4e0:	add	sp, sp, #8
 4e4:	pop	{pc}		; (ldr pc, [sp], #4)
 4e8:	ldr	r3, [r1, #4]
 4ec:	cmp	r3, #0
 4f0:	bne	4a8 <coda_detection_rule_add_entry+0x20>
 4f4:	movw	r1, #0
 4f8:	movt	r1, #0
 4fc:	movw	r0, #65136	; 0xfe70
 500:	movt	r0, #65535	; 0xffff
 504:	bl	0 <coda_set_error>
 508:	mvn	r0, #0
 50c:	b	4d8 <coda_detection_rule_add_entry+0x50>
 510:	mov	ip, #165	; 0xa5
 514:	add	r2, r2, #1
 518:	mvn	r0, #0
 51c:	movw	r3, #0
 520:	movt	r3, #0
 524:	movw	r1, #0
 528:	movt	r1, #0
 52c:	lsl	r2, r2, #2
 530:	str	ip, [sp]
 534:	bl	0 <coda_set_error>
 538:	mvn	r0, #0
 53c:	b	4d8 <coda_detection_rule_add_entry+0x50>

00000540 <coda_detection_tree_delete>:
 540:	b	0 <delete_detection_node>

00000544 <coda_detection_tree_add_rule>:
 544:	ldr	r3, [r1]
 548:	strd	r4, [sp, #-36]!	; 0xffffffdc
 54c:	strd	r6, [sp, #8]
 550:	strd	r8, [sp, #16]
 554:	strd	sl, [sp, #24]
 558:	mov	fp, r1
 55c:	cmp	r3, #0
 560:	str	lr, [sp, #32]
 564:	sub	sp, sp, #28
 568:	beq	95c <coda_detection_tree_add_rule+0x418>
 56c:	ldr	r5, [r0]
 570:	mov	r4, r0
 574:	cmp	r5, #0
 578:	beq	8f4 <coda_detection_tree_add_rule+0x3b0>
 57c:	cmp	r3, #0
 580:	ble	6e4 <coda_detection_tree_add_rule+0x1a0>
 584:	mov	r9, #0
 588:	ldr	r3, [fp, #4]
 58c:	ldr	r7, [r3, r9, lsl #2]
 590:	ldr	r4, [r7]
 594:	cmp	r4, #0
 598:	beq	5a8 <coda_detection_tree_add_rule+0x64>
 59c:	ldrb	r3, [r4]
 5a0:	cmp	r3, #0
 5a4:	moveq	r4, #0
 5a8:	ldr	r3, [r5, #12]
 5ac:	mov	r6, r5
 5b0:	cmp	r3, #0
 5b4:	movgt	sl, #0
 5b8:	ble	660 <coda_detection_tree_add_rule+0x11c>
 5bc:	ldr	r3, [r6, #16]
 5c0:	lsl	r2, sl, #2
 5c4:	cmp	r4, #0
 5c8:	str	r2, [sp, #12]
 5cc:	ldr	r5, [r3, sl, lsl #2]
 5d0:	ldr	r1, [r5]
 5d4:	beq	710 <coda_detection_tree_add_rule+0x1cc>
 5d8:	cmp	r1, #0
 5dc:	beq	650 <coda_detection_tree_add_rule+0x10c>
 5e0:	ldrb	r2, [r1]
 5e4:	ldrb	r3, [r4]
 5e8:	cmp	r2, #0
 5ec:	beq	628 <coda_detection_tree_add_rule+0xe4>
 5f0:	cmp	r2, r3
 5f4:	bne	650 <coda_detection_tree_add_rule+0x10c>
 5f8:	mov	ip, r1
 5fc:	mov	r0, r4
 600:	mov	r8, #0
 604:	b	614 <coda_detection_tree_add_rule+0xd0>
 608:	cmp	lr, r3
 60c:	bne	748 <coda_detection_tree_add_rule+0x204>
 610:	mov	r8, r2
 614:	ldrb	lr, [ip, #1]!
 618:	add	r2, r8, #1
 61c:	ldrb	r3, [r0, #1]!
 620:	cmp	lr, #0
 624:	bne	608 <coda_detection_tree_add_rule+0xc4>
 628:	cmp	r3, #0
 62c:	beq	6a0 <coda_detection_tree_add_rule+0x15c>
 630:	sub	r1, r3, #47	; 0x2f
 634:	cmp	r3, #47	; 0x2f
 638:	cmpne	r3, #64	; 0x40
 63c:	clz	r1, r1
 640:	lsr	r1, r1, #5
 644:	beq	8ac <coda_detection_tree_add_rule+0x368>
 648:	cmp	r3, #91	; 0x5b
 64c:	beq	8b0 <coda_detection_tree_add_rule+0x36c>
 650:	ldr	r3, [r6, #12]
 654:	add	sl, sl, #1
 658:	cmp	sl, r3
 65c:	blt	5bc <coda_detection_tree_add_rule+0x78>
 660:	bl	74 <detection_node_new>
 664:	subs	r5, r0, #0
 668:	beq	740 <coda_detection_tree_add_rule+0x1fc>
 66c:	cmp	r4, #0
 670:	beq	6b4 <coda_detection_tree_add_rule+0x170>
 674:	mov	r0, r4
 678:	bl	0 <strdup>
 67c:	cmp	r0, #0
 680:	str	r0, [r5]
 684:	beq	8d0 <coda_detection_tree_add_rule+0x38c>
 688:	mov	r2, r5
 68c:	add	r1, r6, #16
 690:	add	r0, r6, #12
 694:	bl	e4 <detection_node_add_node.isra.1>
 698:	cmp	r0, #0
 69c:	bne	8c0 <coda_detection_tree_add_rule+0x37c>
 6a0:	ldr	r3, [r7, #4]
 6a4:	cmp	r3, #0
 6a8:	beq	6d4 <coda_detection_tree_add_rule+0x190>
 6ac:	mov	r4, #0
 6b0:	b	5a8 <coda_detection_tree_add_rule+0x64>
 6b4:	ldr	r3, [r7, #4]
 6b8:	mov	r2, r5
 6bc:	add	r1, r6, #16
 6c0:	add	r0, r6, #12
 6c4:	str	r3, [r5, #4]
 6c8:	bl	e4 <detection_node_add_node.isra.1>
 6cc:	cmp	r0, #0
 6d0:	bne	8c0 <coda_detection_tree_add_rule+0x37c>
 6d4:	ldr	r3, [fp]
 6d8:	add	r9, r9, #1
 6dc:	cmp	r3, r9
 6e0:	bgt	588 <coda_detection_tree_add_rule+0x44>
 6e4:	ldr	r0, [r5, #8]
 6e8:	cmp	r0, #0
 6ec:	streq	fp, [r5, #8]
 6f0:	bne	934 <coda_detection_tree_add_rule+0x3f0>
 6f4:	add	sp, sp, #28
 6f8:	ldrd	r4, [sp]
 6fc:	ldrd	r6, [sp, #8]
 700:	ldrd	r8, [sp, #16]
 704:	ldrd	sl, [sp, #24]
 708:	add	sp, sp, #32
 70c:	pop	{pc}		; (ldr pc, [sp], #4)
 710:	cmp	r1, #0
 714:	bne	650 <coda_detection_tree_add_rule+0x10c>
 718:	ldr	r1, [r5, #4]
 71c:	ldr	r0, [r7, #4]
 720:	bl	0 <coda_expression_is_equal>
 724:	cmp	r0, #0
 728:	beq	650 <coda_detection_tree_add_rule+0x10c>
 72c:	ldr	r2, [sp, #12]
 730:	ldr	r3, [r6, #16]
 734:	ldr	r5, [r3, r2]
 738:	cmp	r5, #0
 73c:	bne	6d4 <coda_detection_tree_add_rule+0x190>
 740:	mvn	r0, #0
 744:	b	6f4 <coda_detection_tree_add_rule+0x1b0>
 748:	cmp	r2, #1
 74c:	beq	874 <coda_detection_tree_add_rule+0x330>
 750:	ldrb	r0, [r4, r8]
 754:	sub	ip, r0, #47	; 0x2f
 758:	cmp	r0, #47	; 0x2f
 75c:	cmpne	r0, #91	; 0x5b
 760:	clz	ip, ip
 764:	lsr	ip, ip, #5
 768:	bne	874 <coda_detection_tree_add_rule+0x330>
 76c:	mov	r2, r8
 770:	ldrb	r3, [r1, r8]
 774:	sub	r1, r3, #47	; 0x2f
 778:	cmp	r3, #47	; 0x2f
 77c:	cmpne	r3, #64	; 0x40
 780:	clz	r1, r1
 784:	lsr	r1, r1, #5
 788:	beq	8b8 <coda_detection_tree_add_rule+0x374>
 78c:	cmp	r3, #91	; 0x5b
 790:	bne	650 <coda_detection_tree_add_rule+0x10c>
 794:	mov	sl, r2
 798:	add	r3, ip, r2
 79c:	strd	r2, [sp, #16]
 7a0:	bl	74 <detection_node_new>
 7a4:	subs	r5, r0, #0
 7a8:	beq	740 <coda_detection_tree_add_rule+0x1fc>
 7ac:	ldr	r2, [sp, #16]
 7b0:	add	r0, r2, #1
 7b4:	bl	0 <malloc>
 7b8:	cmp	r0, #0
 7bc:	str	r0, [r5]
 7c0:	ldr	r2, [sp, #16]
 7c4:	beq	90c <coda_detection_tree_add_rule+0x3c8>
 7c8:	mov	r2, r8
 7cc:	mov	r1, r4
 7d0:	bl	0 <memcpy>
 7d4:	mov	r1, r5
 7d8:	mov	r2, #0
 7dc:	ldr	r3, [r1], #16
 7e0:	add	r0, r5, #12
 7e4:	strb	r2, [r3, r8]
 7e8:	ldr	r8, [sp, #12]
 7ec:	ldr	r3, [r6, #16]
 7f0:	ldr	r2, [r3, r8]
 7f4:	bl	e4 <detection_node_add_node.isra.1>
 7f8:	cmp	r0, #0
 7fc:	bne	8c0 <coda_detection_tree_add_rule+0x37c>
 800:	ldr	r3, [r6, #16]
 804:	ldr	r3, [r3, r8]
 808:	ldr	r3, [r3]
 80c:	ldrb	r1, [r3, sl]
 810:	cmp	r1, #0
 814:	beq	854 <coda_detection_tree_add_rule+0x310>
 818:	ldr	lr, [sp, #12]
 81c:	add	r2, sl, #1
 820:	mvn	ip, sl
 824:	add	r3, r3, r2
 828:	mov	r0, r2
 82c:	strb	r1, [r3, ip]
 830:	ldr	r3, [r6, #16]
 834:	ldr	r3, [r3, lr]
 838:	ldr	r3, [r3]
 83c:	ldrb	r1, [r3, r2]
 840:	add	r2, r2, #1
 844:	cmp	r1, #0
 848:	bne	824 <coda_detection_tree_add_rule+0x2e0>
 84c:	sub	sl, r0, sl
 850:	add	r3, r3, sl
 854:	mov	r2, #0
 858:	strb	r2, [r3]
 85c:	ldr	r2, [sp, #12]
 860:	ldr	r3, [sp, #20]
 864:	add	r4, r4, r3
 868:	ldr	r3, [r6, #16]
 86c:	str	r5, [r3, r2]
 870:	b	594 <coda_detection_tree_add_rule+0x50>
 874:	sub	r0, r3, #91	; 0x5b
 878:	sub	ip, r3, #47	; 0x2f
 87c:	clz	r0, r0
 880:	clz	ip, ip
 884:	lsr	r0, r0, #5
 888:	lsr	ip, ip, #5
 88c:	orr	r0, r0, ip
 890:	cmp	r3, #64	; 0x40
 894:	movne	r3, r0
 898:	orreq	r3, r0, #1
 89c:	tst	r3, #255	; 0xff
 8a0:	movne	r8, r2
 8a4:	beq	650 <coda_detection_tree_add_rule+0x10c>
 8a8:	b	770 <coda_detection_tree_add_rule+0x22c>
 8ac:	add	r2, r2, r1
 8b0:	add	r4, r4, r2
 8b4:	b	594 <coda_detection_tree_add_rule+0x50>
 8b8:	add	sl, r1, r2
 8bc:	b	798 <coda_detection_tree_add_rule+0x254>
 8c0:	mov	r0, r5
 8c4:	bl	0 <delete_detection_node>
 8c8:	mvn	r0, #0
 8cc:	b	6f4 <coda_detection_tree_add_rule+0x1b0>
 8d0:	mvn	r0, #0
 8d4:	movw	r2, #0
 8d8:	movt	r2, #0
 8dc:	movw	r1, #0
 8e0:	movt	r1, #0
 8e4:	movw	r3, #383	; 0x17f
 8e8:	bl	0 <coda_set_error>
 8ec:	mvn	r0, #0
 8f0:	b	6f4 <coda_detection_tree_add_rule+0x1b0>
 8f4:	bl	74 <detection_node_new>
 8f8:	subs	r5, r0, #0
 8fc:	beq	740 <coda_detection_tree_add_rule+0x1fc>
 900:	ldr	r3, [fp]
 904:	str	r5, [r4]
 908:	b	57c <coda_detection_tree_add_rule+0x38>
 90c:	movw	r0, #331	; 0x14b
 910:	movw	r3, #0
 914:	movt	r3, #0
 918:	movw	r1, #0
 91c:	movt	r1, #0
 920:	str	r0, [sp]
 924:	mvn	r0, #0
 928:	bl	0 <coda_set_error>
 92c:	mvn	r0, #0
 930:	b	6f4 <coda_detection_tree_add_rule+0x1b0>
 934:	ldr	r3, [r0, #8]
 938:	movw	r1, #0
 93c:	movt	r1, #0
 940:	movw	r0, #65136	; 0xfe70
 944:	movt	r0, #65535	; 0xffff
 948:	ldr	r2, [fp, #8]
 94c:	ldr	r3, [r3, #8]
 950:	ldr	r2, [r2, #8]
 954:	bl	0 <coda_set_error>
 958:	b	740 <coda_detection_tree_add_rule+0x1fc>
 95c:	ldr	r3, [fp, #8]
 960:	movw	r1, #0
 964:	movt	r1, #0
 968:	movw	r0, #65136	; 0xfe70
 96c:	movt	r0, #65535	; 0xffff
 970:	ldr	r2, [r3, #8]
 974:	bl	0 <coda_set_error>
 978:	mvn	r0, #0
 97c:	b	6f4 <coda_detection_tree_add_rule+0x1b0>

00000980 <coda_evaluate_detection_node>:
 980:	strd	r4, [sp, #-20]!	; 0xffffffec
 984:	mov	r5, r0
 988:	mov	r4, #0
 98c:	strd	r6, [sp, #8]
 990:	mov	r6, r2
 994:	mov	r2, #520	; 0x208
 998:	str	lr, [sp, #16]
 99c:	sub	sp, sp, #532	; 0x214
 9a0:	add	r0, sp, #8
 9a4:	bl	0 <memcpy>
 9a8:	cmp	r5, r4
 9ac:	str	r4, [r6]
 9b0:	beq	a68 <coda_evaluate_detection_node+0xe8>
 9b4:	ldr	r7, [r5]
 9b8:	cmp	r7, #0
 9bc:	beq	a38 <coda_evaluate_detection_node+0xb8>
 9c0:	mov	r1, r7
 9c4:	add	r0, sp, #8
 9c8:	bl	0 <coda_cursor_goto>
 9cc:	cmp	r0, #0
 9d0:	bne	a98 <coda_evaluate_detection_node+0x118>
 9d4:	ldr	r3, [r5, #12]
 9d8:	cmp	r3, #0
 9dc:	movgt	r4, #0
 9e0:	ble	a1c <coda_evaluate_detection_node+0x9c>
 9e4:	ldr	r3, [r5, #16]
 9e8:	mov	r2, r6
 9ec:	add	r1, sp, #8
 9f0:	ldr	r0, [r3, r4, lsl #2]
 9f4:	add	r4, r4, #1
 9f8:	bl	980 <coda_evaluate_detection_node>
 9fc:	cmp	r0, #0
 a00:	bne	a90 <coda_evaluate_detection_node+0x110>
 a04:	ldr	r3, [r6]
 a08:	cmp	r3, #0
 a0c:	bne	a68 <coda_evaluate_detection_node+0xe8>
 a10:	ldr	r3, [r5, #12]
 a14:	cmp	r3, r4
 a18:	bgt	9e4 <coda_evaluate_detection_node+0x64>
 a1c:	ldr	r3, [r5, #8]
 a20:	cmp	r3, #0
 a24:	beq	a68 <coda_evaluate_detection_node+0xe8>
 a28:	ldr	r3, [r3, #8]
 a2c:	mov	r0, #0
 a30:	str	r3, [r6]
 a34:	b	a6c <coda_evaluate_detection_node+0xec>
 a38:	ldr	r0, [r5, #4]
 a3c:	cmp	r0, #0
 a40:	beq	9d4 <coda_evaluate_detection_node+0x54>
 a44:	add	r2, sp, #4
 a48:	add	r1, sp, #8
 a4c:	bl	0 <coda_expression_eval_bool>
 a50:	cmp	r0, #0
 a54:	beq	a80 <coda_evaluate_detection_node+0x100>
 a58:	ldr	r3, [pc, #80]	; ab0 <coda_evaluate_detection_node+0x130>
 a5c:	mrc	15, 0, r2, cr13, cr0, {3}
 a60:	ldr	r3, [pc, r3]
 a64:	str	r7, [r2, r3]
 a68:	mov	r0, #0
 a6c:	add	sp, sp, #532	; 0x214
 a70:	ldrd	r4, [sp]
 a74:	ldrd	r6, [sp, #8]
 a78:	add	sp, sp, #16
 a7c:	pop	{pc}		; (ldr pc, [sp], #4)
 a80:	ldr	r3, [sp, #4]
 a84:	cmp	r3, #0
 a88:	bne	9d4 <coda_evaluate_detection_node+0x54>
 a8c:	b	a68 <coda_evaluate_detection_node+0xe8>
 a90:	mvn	r0, #0
 a94:	b	a6c <coda_evaluate_detection_node+0xec>
 a98:	ldr	r3, [pc, #20]	; ab4 <coda_evaluate_detection_node+0x134>
 a9c:	mrc	15, 0, r2, cr13, cr0, {3}
 aa0:	mov	r0, r4
 aa4:	ldr	r3, [pc, r3]
 aa8:	str	r4, [r2, r3]
 aac:	b	a6c <coda_evaluate_detection_node+0xec>
 ab0:	.word	0x00000048
 ab4:	.word	0x00000008
