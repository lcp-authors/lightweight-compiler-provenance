
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <name_buffer_done>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	mov	r4, r0
  18:	cmp	r4, #0
  1c:	bne	34 <name_buffer_done+0x34>
  20:	ldr	r0, [pc, #68]	; 6c <name_buffer_done+0x6c>
  24:	ldr	r1, [pc, #56]	; 64 <name_buffer_done+0x64>
  28:	mov	r2, #72	; 0x48
  2c:	ldr	r3, [pc, #52]	; 68 <name_buffer_done+0x68>
  30:	bl	0 <__assert_fail>
  34:	mov	r0, #0
  38:	str	r0, [r4]
  3c:	mov	r2, #0
  40:	str	r2, [r4, #4]
  44:	ldr	r0, [r4, #8]
  48:	bl	0 <free>
  4c:	mov	r3, #0
  50:	str	r3, [r4, #8]
  54:	ldr	r4, [sp, #8]
  58:	ldr	lr, [sp, #4]
  5c:	add	sp, sp, #16
  60:	bx	lr
  64:	.word	0x00000061
  68:	.word	0x0000015f
  6c:	.word	0x0000010f

00000070 <append_string_to_name_buffer>:
  70:	mov	ip, sp
  74:	sub	sp, sp, #32
  78:	str	ip, [sp]
  7c:	str	lr, [sp, #4]
  80:	str	r4, [sp, #8]
  84:	str	r5, [sp, #12]
  88:	str	r6, [sp, #16]
  8c:	str	r7, [sp, #20]
  90:	str	r8, [sp, #24]
  94:	mov	r6, r1
  98:	mov	r8, r0
  9c:	cmp	r8, #0
  a0:	bne	b8 <append_string_to_name_buffer+0x48>
  a4:	ldr	r0, [pc, #240]	; 19c <append_string_to_name_buffer+0x12c>
  a8:	ldr	r1, [pc, #224]	; 190 <append_string_to_name_buffer+0x120>
  ac:	mov	r2, #84	; 0x54
  b0:	ldr	r3, [pc, #232]	; 1a0 <append_string_to_name_buffer+0x130>
  b4:	bl	0 <__assert_fail>
  b8:	cmp	r6, #0
  bc:	bne	d4 <append_string_to_name_buffer+0x64>
  c0:	ldr	r0, [pc, #208]	; 198 <append_string_to_name_buffer+0x128>
  c4:	ldr	r1, [pc, #196]	; 190 <append_string_to_name_buffer+0x120>
  c8:	mov	r2, #85	; 0x55
  cc:	ldr	r3, [pc, #204]	; 1a0 <append_string_to_name_buffer+0x130>
  d0:	bl	0 <__assert_fail>
  d4:	mov	r0, r6
  d8:	bl	0 <strlen>
  dc:	mov	r5, r0
  e0:	ldr	ip, [r8]
  e4:	add	r1, ip, r5
  e8:	ldr	r4, [r8, #4]
  ec:	cmp	r1, r4
  f0:	blt	150 <append_string_to_name_buffer+0xe0>
  f4:	ldr	ip, [r8]
  f8:	add	r2, ip, r5
  fc:	cmp	r4, r2
 100:	bge	10c <append_string_to_name_buffer+0x9c>
 104:	add	r4, r4, #1024	; 0x400
 108:	b	f4 <append_string_to_name_buffer+0x84>
 10c:	mov	r0, r4
 110:	bl	0 <malloc>
 114:	mov	r7, r0
 118:	cmp	r7, #0
 11c:	bne	134 <append_string_to_name_buffer+0xc4>
 120:	ldr	r0, [pc, #108]	; 194 <append_string_to_name_buffer+0x124>
 124:	ldr	r1, [pc, #100]	; 190 <append_string_to_name_buffer+0x120>
 128:	mov	r2, #100	; 0x64
 12c:	ldr	r3, [pc, #108]	; 1a0 <append_string_to_name_buffer+0x130>
 130:	bl	0 <__assert_fail>
 134:	ldr	r1, [r8, #8]
 138:	mov	r0, r7
 13c:	bl	0 <strcpy>
 140:	ldr	r0, [r8, #8]
 144:	bl	0 <free>
 148:	str	r7, [r8, #8]
 14c:	str	r4, [r8, #4]
 150:	ldr	r0, [r8, #8]
 154:	ldr	r2, [r8]
 158:	add	r0, r0, r2
 15c:	mov	r1, r6
 160:	bl	0 <strcpy>
 164:	ldr	r3, [r8]
 168:	add	r1, r3, r5
 16c:	str	r1, [r8]
 170:	ldr	r4, [sp, #8]
 174:	ldr	r5, [sp, #12]
 178:	ldr	r6, [sp, #16]
 17c:	ldr	r7, [sp, #20]
 180:	ldr	r8, [sp, #24]
 184:	ldr	lr, [sp, #4]
 188:	add	sp, sp, #32
 18c:	bx	lr
 190:	.word	0x00000061
 194:	.word	0x000000fc
 198:	.word	0x00000002
 19c:	.word	0x0000010f
 1a0:	.word	0x00000170

000001a4 <coda_match_filepath>:
 1a4:	mov	ip, sp
 1a8:	sub	sp, sp, #664	; 0x298
 1ac:	str	ip, [sp, #4]
 1b0:	str	lr, [sp, #8]
 1b4:	str	r4, [sp, #16]
 1b8:	str	r5, [sp, #20]
 1bc:	str	r6, [sp, #24]
 1c0:	str	r7, [sp, #28]
 1c4:	str	r8, [sp, #32]
 1c8:	str	r9, [sp, #36]	; 0x24
 1cc:	str	sl, [sp, #40]	; 0x28
 1d0:	ldr	r9, [ip]
 1d4:	mov	r5, r3
 1d8:	mov	r6, r2
 1dc:	mov	r7, r1
 1e0:	mov	r4, r0
 1e4:	ldr	r0, [r6, #8]
 1e8:	add	r1, sp, #48	; 0x30
 1ec:	bl	0 <stat>
 1f0:	cmp	r0, #0
 1f4:	beq	254 <coda_match_filepath+0xb0>
 1f8:	bl	0 <__errno_location>
 1fc:	ldr	r1, [r0]
 200:	cmp	r1, #2
 204:	beq	23c <coda_match_filepath+0x98>
 208:	bl	0 <__errno_location>
 20c:	ldr	r3, [r0]
 210:	cmp	r3, #20
 214:	beq	23c <coda_match_filepath+0x98>
 218:	bl	0 <__errno_location>
 21c:	ldr	r0, [r0]
 220:	bl	0 <strerror>
 224:	mov	r2, r0
 228:	ldr	r0, [r6, #8]
 22c:	mov	r1, #0
 230:	mov	r3, r9
 234:	blx	r5
 238:	b	4c4 <coda_match_filepath+0x320>
 23c:	ldr	r0, [r6, #8]
 240:	mov	r1, #0
 244:	ldr	r2, [pc, #684]	; 4f8 <coda_match_filepath+0x354>
 248:	mov	r3, r9
 24c:	blx	r5
 250:	b	4c4 <coda_match_filepath+0x320>
 254:	ldr	r2, [sp, #64]	; 0x40
 258:	and	ip, r2, #16384	; 0x4000
 25c:	cmp	ip, #0
 260:	bne	3ec <coda_match_filepath+0x248>
 264:	and	ip, r2, #32768	; 0x8000
 268:	cmp	ip, #0
 26c:	bne	298 <coda_match_filepath+0xf4>
 270:	cmp	r4, #0
 274:	bne	290 <coda_match_filepath+0xec>
 278:	ldr	r0, [r6, #8]
 27c:	mov	r1, #0
 280:	ldr	r2, [pc, #612]	; 4ec <coda_match_filepath+0x348>
 284:	mov	r3, r9
 288:	blx	r5
 28c:	b	4c4 <coda_match_filepath+0x320>
 290:	mov	r0, #0
 294:	b	4c4 <coda_match_filepath+0x320>
 298:	ldr	r0, [r6, #8]
 29c:	add	r1, sp, #140	; 0x8c
 2a0:	bl	0 <coda_open>
 2a4:	mov	r4, r0
 2a8:	cmp	r4, #0
 2ac:	beq	2e0 <coda_match_filepath+0x13c>
 2b0:	ldr	ip, [pc, #584]	; 500 <coda_match_filepath+0x35c>
 2b4:	ldr	ip, [ip]
 2b8:	cmn	ip, #21
 2bc:	bne	2e0 <coda_match_filepath+0x13c>
 2c0:	mov	r0, #0
 2c4:	bl	0 <coda_set_option_use_mmap>
 2c8:	ldr	r0, [r6, #8]
 2cc:	add	r1, sp, #140	; 0x8c
 2d0:	bl	0 <coda_open>
 2d4:	mov	r4, r0
 2d8:	mov	r0, #1
 2dc:	bl	0 <coda_set_option_use_mmap>
 2e0:	cmp	r4, #0
 2e4:	beq	334 <coda_match_filepath+0x190>
 2e8:	ldr	ip, [pc, #528]	; 500 <coda_match_filepath+0x35c>
 2ec:	ldr	r0, [ip]
 2f0:	cmn	r0, #200	; 0xc8
 2f4:	beq	31c <coda_match_filepath+0x178>
 2f8:	bl	0 <coda_errno_to_string>
 2fc:	ldr	r2, [r6, #8]
 300:	mov	r1, #1
 304:	mov	r3, r9
 308:	mov	ip, r0
 30c:	mov	r0, r2
 310:	mov	r2, ip
 314:	blx	r5
 318:	b	4c4 <coda_match_filepath+0x320>
 31c:	ldr	r0, [r6, #8]
 320:	mov	r1, #3
 324:	mov	r2, #0
 328:	mov	r3, r9
 32c:	blx	r5
 330:	b	4c4 <coda_match_filepath+0x320>
 334:	add	r0, sp, #144	; 0x90
 338:	ldr	r1, [sp, #140]	; 0x8c
 33c:	bl	0 <coda_cursor_set_product>
 340:	cmp	r0, #0
 344:	beq	37c <coda_match_filepath+0x1d8>
 348:	ldr	r0, [sp, #140]	; 0x8c
 34c:	bl	0 <coda_close>
 350:	ldr	r3, [pc, #424]	; 500 <coda_match_filepath+0x35c>
 354:	ldr	r0, [r3]
 358:	bl	0 <coda_errno_to_string>
 35c:	ldr	r2, [r6, #8]
 360:	mov	r1, #0
 364:	mov	r3, r9
 368:	mov	ip, r0
 36c:	mov	r0, r2
 370:	mov	r2, ip
 374:	blx	r5
 378:	b	4c4 <coda_match_filepath+0x320>
 37c:	add	r1, sp, #144	; 0x90
 380:	add	r2, sp, #136	; 0x88
 384:	mov	r0, r7
 388:	bl	0 <coda_expression_eval_bool>
 38c:	cmp	r0, #0
 390:	beq	3b8 <coda_match_filepath+0x214>
 394:	ldr	r0, [pc, #356]	; 500 <coda_match_filepath+0x35c>
 398:	ldr	r0, [r0]
 39c:	bl	0 <coda_errno_to_string>
 3a0:	mov	r2, r0
 3a4:	ldr	r0, [r6, #8]
 3a8:	mov	r1, #0
 3ac:	mov	r3, r9
 3b0:	blx	r5
 3b4:	b	4c4 <coda_match_filepath+0x320>
 3b8:	ldr	r0, [sp, #140]	; 0x8c
 3bc:	bl	0 <coda_close>
 3c0:	mov	r2, #4
 3c4:	mov	ip, #5
 3c8:	ldr	r0, [sp, #136]	; 0x88
 3cc:	cmp	r0, #0
 3d0:	movne	r1, r2
 3d4:	moveq	r1, ip
 3d8:	ldr	r0, [r6, #8]
 3dc:	mov	r2, #0
 3e0:	mov	r3, r9
 3e4:	blx	r5
 3e8:	b	4c4 <coda_match_filepath+0x320>
 3ec:	ldr	r0, [r6, #8]
 3f0:	bl	0 <opendir>
 3f4:	mov	r8, r0
 3f8:	cmp	r8, #0
 3fc:	bne	418 <coda_match_filepath+0x274>
 400:	ldr	r0, [r6, #8]
 404:	mov	r1, #2
 408:	ldr	r2, [pc, #228]	; 4f4 <coda_match_filepath+0x350>
 40c:	mov	r3, r9
 410:	blx	r5
 414:	b	4c4 <coda_match_filepath+0x320>
 418:	ldr	sl, [r6]
 41c:	mov	r0, r8
 420:	bl	0 <readdir>
 424:	mov	r4, r0
 428:	cmp	r0, #0
 42c:	beq	4b8 <coda_match_filepath+0x314>
 430:	add	r0, r4, #11
 434:	ldr	r1, [pc, #180]	; 4f0 <coda_match_filepath+0x34c>
 438:	bl	0 <strcmp>
 43c:	cmp	r0, #0
 440:	beq	41c <coda_match_filepath+0x278>
 444:	add	r0, r4, #11
 448:	ldr	r1, [pc, #180]	; 504 <coda_match_filepath+0x360>
 44c:	bl	0 <strcmp>
 450:	cmp	r0, #0
 454:	beq	41c <coda_match_filepath+0x278>
 458:	ldr	r1, [pc, #156]	; 4fc <coda_match_filepath+0x358>
 45c:	mov	r0, r6
 460:	bl	70 <append_string_to_name_buffer>
 464:	add	r1, r4, #11
 468:	mov	r0, r6
 46c:	bl	70 <append_string_to_name_buffer>
 470:	mov	r0, #1
 474:	str	r9, [sp]
 478:	mov	r3, r5
 47c:	mov	r2, r6
 480:	mov	r1, r7
 484:	bl	1a4 <coda_match_filepath>
 488:	mov	r4, r0
 48c:	cmp	r4, #0
 490:	beq	4a4 <coda_match_filepath+0x300>
 494:	mov	r0, r8
 498:	bl	0 <closedir>
 49c:	mov	r0, r4
 4a0:	b	4c4 <coda_match_filepath+0x320>
 4a4:	str	sl, [r6]
 4a8:	ldr	r1, [r6, #8]
 4ac:	mov	r2, #0
 4b0:	strb	r2, [r1, sl]
 4b4:	b	41c <coda_match_filepath+0x278>
 4b8:	mov	r0, r8
 4bc:	bl	0 <closedir>
 4c0:	mov	r0, #0
 4c4:	ldr	r4, [sp, #16]
 4c8:	ldr	r5, [sp, #20]
 4cc:	ldr	r6, [sp, #24]
 4d0:	ldr	r7, [sp, #28]
 4d4:	ldr	r8, [sp, #32]
 4d8:	ldr	r9, [sp, #36]	; 0x24
 4dc:	ldr	sl, [sp, #40]	; 0x28
 4e0:	ldr	lr, [sp, #8]
 4e4:	add	sp, sp, #664	; 0x298
 4e8:	bx	lr
 4ec:	.word	0x00000041
 4f0:	.word	0x00000000
 4f4:	.word	0x000000c0
 4f8:	.word	0x00000134
 4fc:	.word	0x000000fa
 500:	.word	0x00000000
 504:	.word	0x00000131

00000508 <coda_match_filefilter>:
 508:	mov	ip, sp
 50c:	sub	sp, sp, #64	; 0x40
 510:	str	ip, [sp, #4]
 514:	str	lr, [sp, #8]
 518:	str	r4, [sp, #16]
 51c:	str	r5, [sp, #20]
 520:	str	r6, [sp, #24]
 524:	str	r7, [sp, #28]
 528:	str	r8, [sp, #32]
 52c:	str	r9, [sp, #36]	; 0x24
 530:	ldr	r7, [ip]
 534:	mov	r5, r3
 538:	mov	r8, r2
 53c:	mov	r6, r1
 540:	mov	r3, #1
 544:	cmp	r8, #0
 548:	moveq	ip, #1
 54c:	movne	ip, #0
 550:	cmp	r6, #0
 554:	movle	r3, r3
 558:	movgt	r3, ip
 55c:	mov	r1, #1
 560:	cmp	r5, #0
 564:	moveq	r2, #1
 568:	movne	r2, #0
 56c:	cmp	r3, #0
 570:	movne	r1, r1
 574:	moveq	r1, r2
 578:	cmp	r1, #0
 57c:	beq	59c <coda_match_filefilter+0x94>
 580:	mvn	r0, #99	; 0x63
 584:	ldr	r1, [pc, #396]	; 718 <coda_match_filefilter+0x210>
 588:	ldr	r2, [pc, #388]	; 714 <coda_match_filefilter+0x20c>
 58c:	movw	r3, #386	; 0x182
 590:	bl	0 <coda_set_error>
 594:	mvn	r4, #0
 598:	b	6e8 <coda_match_filefilter+0x1e0>
 59c:	cmp	r0, #0
 5a0:	beq	5b8 <coda_match_filefilter+0xb0>
 5a4:	ldrb	r1, [r0]
 5a8:	cmp	r1, #0
 5ac:	moveq	ip, #1
 5b0:	movne	ip, #0
 5b4:	b	5bc <coda_match_filefilter+0xb4>
 5b8:	mov	ip, #1
 5bc:	ldr	r1, [pc, #332]	; 710 <coda_match_filefilter+0x208>
 5c0:	cmp	ip, #0
 5c4:	movne	r0, r1
 5c8:	moveq	r0, r0
 5cc:	add	r1, sp, #40	; 0x28
 5d0:	bl	0 <coda_expression_from_string>
 5d4:	cmp	r0, #0
 5d8:	beq	5e4 <coda_match_filefilter+0xdc>
 5dc:	mvn	r4, #0
 5e0:	b	6e8 <coda_match_filefilter+0x1e0>
 5e4:	ldr	r0, [sp, #40]	; 0x28
 5e8:	add	r1, sp, #44	; 0x2c
 5ec:	bl	0 <coda_expression_get_type>
 5f0:	cmp	r0, #0
 5f4:	beq	608 <coda_match_filefilter+0x100>
 5f8:	ldr	r0, [sp, #40]	; 0x28
 5fc:	bl	0 <coda_expression_delete>
 600:	mvn	r4, #0
 604:	b	6e8 <coda_match_filefilter+0x1e0>
 608:	ldr	r2, [sp, #44]	; 0x2c
 60c:	cmp	r2, #0
 610:	beq	630 <coda_match_filefilter+0x128>
 614:	mvn	r0, #400	; 0x190
 618:	ldr	r1, [pc, #252]	; 71c <coda_match_filefilter+0x214>
 61c:	bl	0 <coda_set_error>
 620:	ldr	r0, [sp, #40]	; 0x28
 624:	bl	0 <coda_expression_delete>
 628:	mvn	r4, #0
 62c:	b	6e8 <coda_match_filefilter+0x1e0>
 630:	mov	r1, #0
 634:	str	r1, [sp, #48]	; 0x30
 638:	mov	ip, #1024	; 0x400
 63c:	str	ip, [sp, #52]	; 0x34
 640:	mov	r0, #1024	; 0x400
 644:	bl	0 <malloc>
 648:	str	r0, [sp, #56]	; 0x38
 64c:	cmp	r0, #0
 650:	bne	668 <coda_match_filefilter+0x160>
 654:	ldr	r0, [pc, #200]	; 724 <coda_match_filefilter+0x21c>
 658:	ldr	r1, [pc, #180]	; 714 <coda_match_filefilter+0x20c>
 65c:	mov	r2, #67	; 0x43
 660:	ldr	r3, [pc, #184]	; 720 <coda_match_filefilter+0x218>
 664:	bl	0 <__assert_fail>
 668:	mov	r9, #0
 66c:	cmp	r9, r6
 670:	bge	6d4 <coda_match_filefilter+0x1cc>
 674:	add	r0, sp, #48	; 0x30
 678:	ldr	r1, [r8, r9, lsl #2]
 67c:	bl	70 <append_string_to_name_buffer>
 680:	mov	r0, #0
 684:	ldr	r1, [sp, #40]	; 0x28
 688:	add	r2, sp, #48	; 0x30
 68c:	str	r7, [sp]
 690:	mov	r3, r5
 694:	bl	1a4 <coda_match_filepath>
 698:	mov	r4, r0
 69c:	cmp	r4, #0
 6a0:	beq	6b8 <coda_match_filefilter+0x1b0>
 6a4:	add	r0, sp, #48	; 0x30
 6a8:	bl	0 <name_buffer_done>
 6ac:	ldr	r0, [sp, #40]	; 0x28
 6b0:	bl	0 <coda_expression_delete>
 6b4:	b	6e8 <coda_match_filefilter+0x1e0>
 6b8:	mov	r1, #0
 6bc:	str	r1, [sp, #48]	; 0x30
 6c0:	ldr	r0, [sp, #56]	; 0x38
 6c4:	mov	r1, #0
 6c8:	strb	r1, [r0]
 6cc:	add	r9, r9, #1
 6d0:	b	66c <coda_match_filefilter+0x164>
 6d4:	add	r0, sp, #48	; 0x30
 6d8:	bl	0 <name_buffer_done>
 6dc:	ldr	r0, [sp, #40]	; 0x28
 6e0:	bl	0 <coda_expression_delete>
 6e4:	mov	r4, #0
 6e8:	mov	r0, r4
 6ec:	ldr	r4, [sp, #16]
 6f0:	ldr	r5, [sp, #20]
 6f4:	ldr	r6, [sp, #24]
 6f8:	ldr	r7, [sp, #28]
 6fc:	ldr	r8, [sp, #32]
 700:	ldr	r9, [sp, #36]	; 0x24
 704:	ldr	lr, [sp, #8]
 708:	add	sp, sp, #64	; 0x40
 70c:	bx	lr
 710:	.word	0x0000000e
 714:	.word	0x00000061
 718:	.word	0x000000e1
 71c:	.word	0x00000013
 720:	.word	0x0000014e
 724:	.word	0x0000011c
