
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_conversion_new>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #48	; 0x30
       c:	vstr	d0, [fp, #-20]	; 0xffffffec
      10:	vstr	d1, [fp, #-28]	; 0xffffffe4
      14:	vstr	d2, [fp, #-36]	; 0xffffffdc
      18:	vstr	d3, [fp, #-44]	; 0xffffffd4
      1c:	vldr	d7, [fp, #-28]	; 0xffffffe4
      20:	vcmp.f64	d7, #0.0
      24:	vmrs	APSR_nzcv, fpscr
      28:	bne	40 <coda_conversion_new+0x40>
      2c:	ldr	r1, [pc, #152]	; cc <coda_conversion_new+0xcc>
      30:	ldr	r0, [pc, #152]	; d0 <coda_conversion_new+0xd0>
      34:	bl	0 <coda_set_error>
      38:	mov	r3, #0
      3c:	b	c0 <coda_conversion_new+0xc0>
      40:	mov	r0, #40	; 0x28
      44:	bl	0 <malloc>
      48:	mov	r3, r0
      4c:	str	r3, [fp, #-8]
      50:	ldr	r3, [fp, #-8]
      54:	cmp	r3, #0
      58:	bne	80 <coda_conversion_new+0x80>
      5c:	mov	r3, #171	; 0xab
      60:	str	r3, [sp]
      64:	ldr	r3, [pc, #104]	; d4 <coda_conversion_new+0xd4>
      68:	mov	r2, #40	; 0x28
      6c:	ldr	r1, [pc, #100]	; d8 <coda_conversion_new+0xd8>
      70:	mvn	r0, #0
      74:	bl	0 <coda_set_error>
      78:	mov	r3, #0
      7c:	b	c0 <coda_conversion_new+0xc0>
      80:	ldr	r1, [fp, #-8]
      84:	ldrd	r2, [fp, #-20]	; 0xffffffec
      88:	strd	r2, [r1]
      8c:	ldr	r1, [fp, #-8]
      90:	ldrd	r2, [fp, #-28]	; 0xffffffe4
      94:	strd	r2, [r1, #8]
      98:	ldr	r1, [fp, #-8]
      9c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
      a0:	strd	r2, [r1, #16]
      a4:	ldr	r1, [fp, #-8]
      a8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
      ac:	strd	r2, [r1, #24]
      b0:	ldr	r3, [fp, #-8]
      b4:	mov	r2, #0
      b8:	str	r2, [r3, #32]
      bc:	ldr	r3, [fp, #-8]
      c0:	mov	r0, r3
      c4:	sub	sp, fp, #4
      c8:	pop	{fp, pc}
      cc:	.word	0x00000000
      d0:	.word	0xfffffe70
      d4:	.word	0x00000028
      d8:	.word	0x00000070

000000dc <coda_conversion_set_unit>:
      dc:	push	{fp, lr}
      e0:	add	fp, sp, #4
      e4:	sub	sp, sp, #16
      e8:	str	r0, [fp, #-16]
      ec:	str	r1, [fp, #-20]	; 0xffffffec
      f0:	mov	r3, #0
      f4:	str	r3, [fp, #-8]
      f8:	ldr	r3, [fp, #-16]
      fc:	ldr	r3, [r3, #32]
     100:	cmp	r3, #0
     104:	beq	11c <coda_conversion_set_unit+0x40>
     108:	ldr	r1, [pc, #108]	; 17c <coda_conversion_set_unit+0xa0>
     10c:	ldr	r0, [pc, #108]	; 180 <coda_conversion_set_unit+0xa4>
     110:	bl	0 <coda_set_error>
     114:	mvn	r3, #0
     118:	b	170 <coda_conversion_set_unit+0x94>
     11c:	ldr	r3, [fp, #-20]	; 0xffffffec
     120:	cmp	r3, #0
     124:	beq	160 <coda_conversion_set_unit+0x84>
     128:	ldr	r0, [fp, #-20]	; 0xffffffec
     12c:	bl	0 <strdup>
     130:	mov	r3, r0
     134:	str	r3, [fp, #-8]
     138:	ldr	r3, [fp, #-8]
     13c:	cmp	r3, #0
     140:	bne	160 <coda_conversion_set_unit+0x84>
     144:	mov	r3, #198	; 0xc6
     148:	ldr	r2, [pc, #52]	; 184 <coda_conversion_set_unit+0xa8>
     14c:	ldr	r1, [pc, #52]	; 188 <coda_conversion_set_unit+0xac>
     150:	mvn	r0, #0
     154:	bl	0 <coda_set_error>
     158:	mvn	r3, #0
     15c:	b	170 <coda_conversion_set_unit+0x94>
     160:	ldr	r3, [fp, #-16]
     164:	ldr	r2, [fp, #-8]
     168:	str	r2, [r3, #32]
     16c:	mov	r3, #0
     170:	mov	r0, r3
     174:	sub	sp, fp, #4
     178:	pop	{fp, pc}
     17c:	.word	0x000000a8
     180:	.word	0xfffffe70
     184:	.word	0x00000028
     188:	.word	0x000000c8

0000018c <coda_conversion_delete>:
     18c:	push	{fp, lr}
     190:	add	fp, sp, #4
     194:	sub	sp, sp, #8
     198:	str	r0, [fp, #-8]
     19c:	ldr	r3, [fp, #-8]
     1a0:	cmp	r3, #0
     1a4:	beq	1d4 <coda_conversion_delete+0x48>
     1a8:	ldr	r3, [fp, #-8]
     1ac:	ldr	r3, [r3, #32]
     1b0:	cmp	r3, #0
     1b4:	beq	1c8 <coda_conversion_delete+0x3c>
     1b8:	ldr	r3, [fp, #-8]
     1bc:	ldr	r3, [r3, #32]
     1c0:	mov	r0, r3
     1c4:	bl	0 <free>
     1c8:	ldr	r0, [fp, #-8]
     1cc:	bl	0 <free>
     1d0:	b	1d8 <coda_conversion_delete+0x4c>
     1d4:	nop			; (mov r0, r0)
     1d8:	sub	sp, fp, #4
     1dc:	pop	{fp, pc}

000001e0 <mapping_delete>:
     1e0:	push	{fp, lr}
     1e4:	add	fp, sp, #4
     1e8:	sub	sp, sp, #8
     1ec:	str	r0, [fp, #-8]
     1f0:	ldr	r3, [fp, #-8]
     1f4:	cmp	r3, #0
     1f8:	beq	228 <mapping_delete+0x48>
     1fc:	ldr	r3, [fp, #-8]
     200:	ldr	r3, [r3, #4]
     204:	cmp	r3, #0
     208:	beq	21c <mapping_delete+0x3c>
     20c:	ldr	r3, [fp, #-8]
     210:	ldr	r3, [r3, #4]
     214:	mov	r0, r3
     218:	bl	0 <free>
     21c:	ldr	r0, [fp, #-8]
     220:	bl	0 <free>
     224:	b	22c <mapping_delete+0x4c>
     228:	nop			; (mov r0, r0)
     22c:	sub	sp, fp, #4
     230:	pop	{fp, pc}

00000234 <mappings_delete>:
     234:	push	{fp, lr}
     238:	add	fp, sp, #4
     23c:	sub	sp, sp, #16
     240:	str	r0, [fp, #-16]
     244:	ldr	r3, [fp, #-16]
     248:	cmp	r3, #0
     24c:	beq	2e8 <mappings_delete+0xb4>
     250:	ldr	r3, [fp, #-16]
     254:	ldr	r3, [r3, #12]
     258:	cmp	r3, #0
     25c:	beq	2dc <mappings_delete+0xa8>
     260:	mov	r3, #0
     264:	str	r3, [fp, #-8]
     268:	b	2b8 <mappings_delete+0x84>
     26c:	ldr	r3, [fp, #-16]
     270:	ldr	r2, [r3, #12]
     274:	ldr	r3, [fp, #-8]
     278:	lsl	r3, r3, #2
     27c:	add	r3, r2, r3
     280:	ldr	r3, [r3]
     284:	cmp	r3, #0
     288:	beq	2ac <mappings_delete+0x78>
     28c:	ldr	r3, [fp, #-16]
     290:	ldr	r2, [r3, #12]
     294:	ldr	r3, [fp, #-8]
     298:	lsl	r3, r3, #2
     29c:	add	r3, r2, r3
     2a0:	ldr	r3, [r3]
     2a4:	mov	r0, r3
     2a8:	bl	1e0 <mapping_delete>
     2ac:	ldr	r3, [fp, #-8]
     2b0:	add	r3, r3, #1
     2b4:	str	r3, [fp, #-8]
     2b8:	ldr	r3, [fp, #-16]
     2bc:	ldr	r2, [r3, #8]
     2c0:	ldr	r3, [fp, #-8]
     2c4:	cmp	r2, r3
     2c8:	bgt	26c <mappings_delete+0x38>
     2cc:	ldr	r3, [fp, #-16]
     2d0:	ldr	r3, [r3, #12]
     2d4:	mov	r0, r3
     2d8:	bl	0 <free>
     2dc:	ldr	r0, [fp, #-16]
     2e0:	bl	0 <free>
     2e4:	b	2ec <mappings_delete+0xb8>
     2e8:	nop			; (mov r0, r0)
     2ec:	sub	sp, fp, #4
     2f0:	pop	{fp, pc}

000002f4 <coda_ascii_integer_mapping_new>:
     2f4:	push	{fp, lr}
     2f8:	add	fp, sp, #4
     2fc:	sub	sp, sp, #32
     300:	str	r0, [fp, #-16]
     304:	strd	r2, [fp, #-28]	; 0xffffffe4
     308:	ldr	r3, [fp, #-16]
     30c:	cmp	r3, #0
     310:	bne	330 <coda_ascii_integer_mapping_new+0x3c>
     314:	ldr	r3, [pc, #292]	; 440 <coda_ascii_integer_mapping_new+0x14c>
     318:	ldr	r2, [pc, #292]	; 444 <coda_ascii_integer_mapping_new+0x150>
     31c:	ldr	r1, [pc, #292]	; 448 <coda_ascii_integer_mapping_new+0x154>
     320:	mvn	r0, #99	; 0x63
     324:	bl	0 <coda_set_error>
     328:	mov	r3, #0
     32c:	b	434 <coda_ascii_integer_mapping_new+0x140>
     330:	ldr	r0, [fp, #-16]
     334:	bl	0 <strlen>
     338:	mov	r3, r0
     33c:	cmp	r3, #64	; 0x40
     340:	bls	368 <coda_ascii_integer_mapping_new+0x74>
     344:	ldr	r0, [fp, #-16]
     348:	bl	0 <strlen>
     34c:	mov	r3, r0
     350:	mov	r2, r3
     354:	ldr	r1, [pc, #240]	; 44c <coda_ascii_integer_mapping_new+0x158>
     358:	ldr	r0, [pc, #240]	; 450 <coda_ascii_integer_mapping_new+0x15c>
     35c:	bl	0 <coda_set_error>
     360:	mov	r3, #0
     364:	b	434 <coda_ascii_integer_mapping_new+0x140>
     368:	mov	r0, #16
     36c:	bl	0 <malloc>
     370:	mov	r3, r0
     374:	str	r3, [fp, #-8]
     378:	ldr	r3, [fp, #-8]
     37c:	cmp	r3, #0
     380:	bne	3a8 <coda_ascii_integer_mapping_new+0xb4>
     384:	ldr	r3, [pc, #200]	; 454 <coda_ascii_integer_mapping_new+0x160>
     388:	str	r3, [sp]
     38c:	ldr	r3, [pc, #176]	; 444 <coda_ascii_integer_mapping_new+0x150>
     390:	mov	r2, #16
     394:	ldr	r1, [pc, #188]	; 458 <coda_ascii_integer_mapping_new+0x164>
     398:	mvn	r0, #0
     39c:	bl	0 <coda_set_error>
     3a0:	mov	r3, #0
     3a4:	b	434 <coda_ascii_integer_mapping_new+0x140>
     3a8:	ldr	r3, [fp, #-8]
     3ac:	mov	r2, #0
     3b0:	str	r2, [r3]
     3b4:	ldr	r3, [fp, #-8]
     3b8:	mov	r2, #0
     3bc:	str	r2, [r3, #4]
     3c0:	ldr	r1, [fp, #-8]
     3c4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     3c8:	strd	r2, [r1, #8]
     3cc:	ldr	r0, [fp, #-16]
     3d0:	bl	0 <strdup>
     3d4:	mov	r3, r0
     3d8:	mov	r2, r3
     3dc:	ldr	r3, [fp, #-8]
     3e0:	str	r2, [r3, #4]
     3e4:	ldr	r3, [fp, #-8]
     3e8:	ldr	r3, [r3, #4]
     3ec:	cmp	r3, #0
     3f0:	bne	418 <coda_ascii_integer_mapping_new+0x124>
     3f4:	ldr	r3, [pc, #96]	; 45c <coda_ascii_integer_mapping_new+0x168>
     3f8:	ldr	r2, [pc, #68]	; 444 <coda_ascii_integer_mapping_new+0x150>
     3fc:	ldr	r1, [pc, #92]	; 460 <coda_ascii_integer_mapping_new+0x16c>
     400:	mvn	r0, #0
     404:	bl	0 <coda_set_error>
     408:	ldr	r0, [fp, #-8]
     40c:	bl	0 <free>
     410:	mov	r3, #0
     414:	b	434 <coda_ascii_integer_mapping_new+0x140>
     418:	ldr	r0, [fp, #-16]
     41c:	bl	0 <strlen>
     420:	mov	r3, r0
     424:	mov	r2, r3
     428:	ldr	r3, [fp, #-8]
     42c:	str	r2, [r3]
     430:	ldr	r3, [fp, #-8]
     434:	mov	r0, r3
     438:	sub	sp, fp, #4
     43c:	pop	{fp, pc}
     440:	.word	0x00000105
     444:	.word	0x00000028
     448:	.word	0x000000fc
     44c:	.word	0x00000118
     450:	.word	0xfffffe70
     454:	.word	0x00000113
     458:	.word	0x00000070
     45c:	.word	0x0000011e
     460:	.word	0x000000c8

00000464 <coda_ascii_integer_mapping_delete>:
     464:	push	{fp, lr}
     468:	add	fp, sp, #4
     46c:	sub	sp, sp, #8
     470:	str	r0, [fp, #-8]
     474:	ldr	r0, [fp, #-8]
     478:	bl	1e0 <mapping_delete>
     47c:	nop			; (mov r0, r0)
     480:	sub	sp, fp, #4
     484:	pop	{fp, pc}

00000488 <coda_ascii_float_mapping_new>:
     488:	push	{fp, lr}
     48c:	add	fp, sp, #4
     490:	sub	sp, sp, #32
     494:	str	r0, [fp, #-16]
     498:	vstr	d0, [fp, #-28]	; 0xffffffe4
     49c:	ldr	r3, [fp, #-16]
     4a0:	cmp	r3, #0
     4a4:	bne	4c4 <coda_ascii_float_mapping_new+0x3c>
     4a8:	ldr	r3, [pc, #292]	; 5d4 <coda_ascii_float_mapping_new+0x14c>
     4ac:	ldr	r2, [pc, #292]	; 5d8 <coda_ascii_float_mapping_new+0x150>
     4b0:	ldr	r1, [pc, #292]	; 5dc <coda_ascii_float_mapping_new+0x154>
     4b4:	mvn	r0, #99	; 0x63
     4b8:	bl	0 <coda_set_error>
     4bc:	mov	r3, #0
     4c0:	b	5c8 <coda_ascii_float_mapping_new+0x140>
     4c4:	ldr	r0, [fp, #-16]
     4c8:	bl	0 <strlen>
     4cc:	mov	r3, r0
     4d0:	cmp	r3, #64	; 0x40
     4d4:	bls	4fc <coda_ascii_float_mapping_new+0x74>
     4d8:	ldr	r0, [fp, #-16]
     4dc:	bl	0 <strlen>
     4e0:	mov	r3, r0
     4e4:	mov	r2, r3
     4e8:	ldr	r1, [pc, #240]	; 5e0 <coda_ascii_float_mapping_new+0x158>
     4ec:	ldr	r0, [pc, #240]	; 5e4 <coda_ascii_float_mapping_new+0x15c>
     4f0:	bl	0 <coda_set_error>
     4f4:	mov	r3, #0
     4f8:	b	5c8 <coda_ascii_float_mapping_new+0x140>
     4fc:	mov	r0, #16
     500:	bl	0 <malloc>
     504:	mov	r3, r0
     508:	str	r3, [fp, #-8]
     50c:	ldr	r3, [fp, #-8]
     510:	cmp	r3, #0
     514:	bne	53c <coda_ascii_float_mapping_new+0xb4>
     518:	ldr	r3, [pc, #200]	; 5e8 <coda_ascii_float_mapping_new+0x160>
     51c:	str	r3, [sp]
     520:	ldr	r3, [pc, #176]	; 5d8 <coda_ascii_float_mapping_new+0x150>
     524:	mov	r2, #16
     528:	ldr	r1, [pc, #188]	; 5ec <coda_ascii_float_mapping_new+0x164>
     52c:	mvn	r0, #0
     530:	bl	0 <coda_set_error>
     534:	mov	r3, #0
     538:	b	5c8 <coda_ascii_float_mapping_new+0x140>
     53c:	ldr	r3, [fp, #-8]
     540:	mov	r2, #0
     544:	str	r2, [r3]
     548:	ldr	r3, [fp, #-8]
     54c:	mov	r2, #0
     550:	str	r2, [r3, #4]
     554:	ldr	r1, [fp, #-8]
     558:	ldrd	r2, [fp, #-28]	; 0xffffffe4
     55c:	strd	r2, [r1, #8]
     560:	ldr	r0, [fp, #-16]
     564:	bl	0 <strdup>
     568:	mov	r3, r0
     56c:	mov	r2, r3
     570:	ldr	r3, [fp, #-8]
     574:	str	r2, [r3, #4]
     578:	ldr	r3, [fp, #-8]
     57c:	ldr	r3, [r3, #4]
     580:	cmp	r3, #0
     584:	bne	5ac <coda_ascii_float_mapping_new+0x124>
     588:	ldr	r3, [pc, #96]	; 5f0 <coda_ascii_float_mapping_new+0x168>
     58c:	ldr	r2, [pc, #68]	; 5d8 <coda_ascii_float_mapping_new+0x150>
     590:	ldr	r1, [pc, #92]	; 5f4 <coda_ascii_float_mapping_new+0x16c>
     594:	mvn	r0, #0
     598:	bl	0 <coda_set_error>
     59c:	ldr	r0, [fp, #-8]
     5a0:	bl	0 <free>
     5a4:	mov	r3, #0
     5a8:	b	5c8 <coda_ascii_float_mapping_new+0x140>
     5ac:	ldr	r0, [fp, #-16]
     5b0:	bl	0 <strlen>
     5b4:	mov	r3, r0
     5b8:	mov	r2, r3
     5bc:	ldr	r3, [fp, #-8]
     5c0:	str	r2, [r3]
     5c4:	ldr	r3, [fp, #-8]
     5c8:	mov	r0, r3
     5cc:	sub	sp, fp, #4
     5d0:	pop	{fp, pc}
     5d4:	.word	0x00000132
     5d8:	.word	0x00000028
     5dc:	.word	0x000000fc
     5e0:	.word	0x0000014c
     5e4:	.word	0xfffffe70
     5e8:	.word	0x0000013f
     5ec:	.word	0x00000070
     5f0:	.word	0x0000014a
     5f4:	.word	0x000000c8

000005f8 <coda_ascii_float_mapping_delete>:
     5f8:	push	{fp, lr}
     5fc:	add	fp, sp, #4
     600:	sub	sp, sp, #8
     604:	str	r0, [fp, #-8]
     608:	ldr	r0, [fp, #-8]
     60c:	bl	1e0 <mapping_delete>
     610:	nop			; (mov r0, r0)
     614:	sub	sp, fp, #4
     618:	pop	{fp, pc}

0000061c <mapping_type_add_mapping>:
     61c:	push	{r4, r5, fp, lr}
     620:	add	fp, sp, #12
     624:	sub	sp, sp, #32
     628:	str	r0, [fp, #-24]	; 0xffffffe8
     62c:	str	r1, [fp, #-28]	; 0xffffffe4
     630:	str	r2, [fp, #-32]	; 0xffffffe0
     634:	ldr	r3, [fp, #-32]	; 0xffffffe0
     638:	cmp	r3, #0
     63c:	bne	65c <mapping_type_add_mapping+0x40>
     640:	mov	r3, #348	; 0x15c
     644:	ldr	r2, [pc, #560]	; 87c <mapping_type_add_mapping+0x260>
     648:	ldr	r1, [pc, #560]	; 880 <mapping_type_add_mapping+0x264>
     64c:	mvn	r0, #99	; 0x63
     650:	bl	0 <coda_set_error>
     654:	mvn	r3, #0
     658:	b	870 <mapping_type_add_mapping+0x254>
     65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     660:	cmp	r3, #0
     664:	bne	684 <mapping_type_add_mapping+0x68>
     668:	ldr	r3, [pc, #532]	; 884 <mapping_type_add_mapping+0x268>
     66c:	ldr	r2, [pc, #520]	; 87c <mapping_type_add_mapping+0x260>
     670:	ldr	r1, [pc, #528]	; 888 <mapping_type_add_mapping+0x26c>
     674:	mvn	r0, #99	; 0x63
     678:	bl	0 <coda_set_error>
     67c:	mvn	r3, #0
     680:	b	870 <mapping_type_add_mapping+0x254>
     684:	ldr	r3, [fp, #-28]	; 0xffffffe4
     688:	ldr	r3, [r3]
     68c:	cmp	r3, #0
     690:	bne	728 <mapping_type_add_mapping+0x10c>
     694:	mov	r0, #16
     698:	bl	0 <malloc>
     69c:	mov	r3, r0
     6a0:	mov	r2, r3
     6a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6a8:	str	r2, [r3]
     6ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6b0:	ldr	r3, [r3]
     6b4:	cmp	r3, #0
     6b8:	bne	6e0 <mapping_type_add_mapping+0xc4>
     6bc:	ldr	r3, [pc, #456]	; 88c <mapping_type_add_mapping+0x270>
     6c0:	str	r3, [sp]
     6c4:	ldr	r3, [pc, #432]	; 87c <mapping_type_add_mapping+0x260>
     6c8:	mov	r2, #16
     6cc:	ldr	r1, [pc, #444]	; 890 <mapping_type_add_mapping+0x274>
     6d0:	mvn	r0, #0
     6d4:	bl	0 <coda_set_error>
     6d8:	mvn	r3, #0
     6dc:	b	870 <mapping_type_add_mapping+0x254>
     6e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6e4:	ldr	r1, [r3]
     6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6ec:	ldrd	r2, [r3, #24]
     6f0:	cmp	r2, #0
     6f4:	sbcs	r0, r3, #0
     6f8:	bge	704 <mapping_type_add_mapping+0xe8>
     6fc:	mvn	r2, #0
     700:	mvn	r3, #0
     704:	strd	r2, [r1]
     708:	ldr	r3, [fp, #-28]	; 0xffffffe4
     70c:	ldr	r3, [r3]
     710:	mov	r2, #0
     714:	str	r2, [r3, #8]
     718:	ldr	r3, [fp, #-28]	; 0xffffffe4
     71c:	ldr	r3, [r3]
     720:	mov	r2, #0
     724:	str	r2, [r3, #12]
     728:	ldr	r3, [fp, #-28]	; 0xffffffe4
     72c:	ldr	r3, [r3]
     730:	ldr	r3, [r3, #8]
     734:	and	r3, r3, #15
     738:	cmp	r3, #0
     73c:	bne	7c0 <mapping_type_add_mapping+0x1a4>
     740:	ldr	r3, [fp, #-28]	; 0xffffffe4
     744:	ldr	r3, [r3]
     748:	ldr	r2, [r3, #12]
     74c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     750:	ldr	r3, [r3]
     754:	ldr	r3, [r3, #8]
     758:	add	r3, r3, #16
     75c:	lsl	r3, r3, #2
     760:	mov	r1, r3
     764:	mov	r0, r2
     768:	bl	0 <realloc>
     76c:	str	r0, [fp, #-16]
     770:	ldr	r3, [fp, #-16]
     774:	cmp	r3, #0
     778:	bne	7b0 <mapping_type_add_mapping+0x194>
     77c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     780:	ldr	r3, [r3]
     784:	ldr	r3, [r3, #8]
     788:	add	r3, r3, #16
     78c:	lsl	r2, r3, #2
     790:	mov	r3, #380	; 0x17c
     794:	str	r3, [sp]
     798:	ldr	r3, [pc, #220]	; 87c <mapping_type_add_mapping+0x260>
     79c:	ldr	r1, [pc, #236]	; 890 <mapping_type_add_mapping+0x274>
     7a0:	mvn	r0, #0
     7a4:	bl	0 <coda_set_error>
     7a8:	mvn	r3, #0
     7ac:	b	870 <mapping_type_add_mapping+0x254>
     7b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7b4:	ldr	r3, [r3]
     7b8:	ldr	r2, [fp, #-16]
     7bc:	str	r2, [r3, #12]
     7c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7c4:	ldr	r3, [r3]
     7c8:	ldr	r2, [r3, #12]
     7cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7d0:	ldr	r3, [r3]
     7d4:	ldr	r3, [r3, #8]
     7d8:	lsl	r3, r3, #2
     7dc:	add	r3, r2, r3
     7e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     7e4:	str	r2, [r3]
     7e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7ec:	ldr	r3, [r3]
     7f0:	ldr	r2, [r3, #8]
     7f4:	add	r2, r2, #1
     7f8:	str	r2, [r3, #8]
     7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     800:	ldrd	r2, [r3, #24]
     804:	cmp	r2, #0
     808:	sbcs	r3, r3, #0
     80c:	blt	86c <mapping_type_add_mapping+0x250>
     810:	ldr	r3, [fp, #-28]	; 0xffffffe4
     814:	ldr	r3, [r3]
     818:	ldrd	r2, [r3]
     81c:	cmp	r2, #0
     820:	sbcs	r3, r3, #0
     824:	blt	86c <mapping_type_add_mapping+0x250>
     828:	ldr	r3, [fp, #-32]	; 0xffffffe0
     82c:	ldr	r3, [r3]
     830:	mov	r0, r3
     834:	asr	r1, r0, #31
     838:	ldr	r3, [fp, #-28]	; 0xffffffe4
     83c:	ldr	r3, [r3]
     840:	ldrd	r2, [r3]
     844:	lsr	r4, r2, #3
     848:	orr	r4, r4, r3, lsl #29
     84c:	asr	r5, r3, #3
     850:	cmp	r1, r5
     854:	cmpeq	r0, r4
     858:	beq	86c <mapping_type_add_mapping+0x250>
     85c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     860:	mvn	r2, #0
     864:	mvn	r3, #0
     868:	strd	r2, [r1, #24]
     86c:	mov	r3, #0
     870:	mov	r0, r3
     874:	sub	sp, fp, #12
     878:	pop	{r4, r5, fp, pc}
     87c:	.word	0x00000028
     880:	.word	0x0000017c
     884:	.word	0x00000161
     888:	.word	0x00000194
     88c:	.word	0x0000016b
     890:	.word	0x00000070

00000894 <mapping_type_set_bit_size>:
     894:	push	{r4, r5, fp, lr}
     898:	add	fp, sp, #12
     89c:	sub	sp, sp, #24
     8a0:	str	r0, [fp, #-24]	; 0xffffffe8
     8a4:	str	r1, [fp, #-28]	; 0xffffffe4
     8a8:	strd	r2, [fp, #-36]	; 0xffffffdc
     8ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     8b0:	cmp	r3, #0
     8b4:	bne	8cc <mapping_type_set_bit_size+0x38>
     8b8:	ldr	r3, [pc, #256]	; 9c0 <mapping_type_set_bit_size+0x12c>
     8bc:	ldr	r2, [pc, #256]	; 9c4 <mapping_type_set_bit_size+0x130>
     8c0:	ldr	r1, [pc, #256]	; 9c8 <mapping_type_set_bit_size+0x134>
     8c4:	ldr	r0, [pc, #256]	; 9cc <mapping_type_set_bit_size+0x138>
     8c8:	bl	0 <__assert_fail>
     8cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     8d0:	cmp	r2, #0
     8d4:	sbcs	r3, r3, #0
     8d8:	bge	8f0 <mapping_type_set_bit_size+0x5c>
     8dc:	ldr	r3, [pc, #220]	; 9c0 <mapping_type_set_bit_size+0x12c>
     8e0:	ldr	r2, [pc, #232]	; 9d0 <mapping_type_set_bit_size+0x13c>
     8e4:	ldr	r1, [pc, #220]	; 9c8 <mapping_type_set_bit_size+0x134>
     8e8:	ldr	r0, [pc, #228]	; 9d4 <mapping_type_set_bit_size+0x140>
     8ec:	bl	0 <__assert_fail>
     8f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     8f4:	ldrd	r2, [r3]
     8f8:	cmp	r2, #0
     8fc:	sbcs	r3, r3, #0
     900:	blt	918 <mapping_type_set_bit_size+0x84>
     904:	ldr	r1, [pc, #204]	; 9d8 <mapping_type_set_bit_size+0x144>
     908:	ldr	r0, [pc, #204]	; 9dc <mapping_type_set_bit_size+0x148>
     90c:	bl	0 <coda_set_error>
     910:	mvn	r3, #0
     914:	b	9b4 <mapping_type_set_bit_size+0x120>
     918:	ldr	r1, [fp, #-28]	; 0xffffffe4
     91c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     920:	strd	r2, [r1]
     924:	ldr	r1, [fp, #-24]	; 0xffffffe8
     928:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     92c:	strd	r2, [r1, #24]
     930:	mov	r3, #0
     934:	str	r3, [fp, #-16]
     938:	b	99c <mapping_type_set_bit_size+0x108>
     93c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     940:	ldr	r2, [r3, #12]
     944:	ldr	r3, [fp, #-16]
     948:	lsl	r3, r3, #2
     94c:	add	r3, r2, r3
     950:	ldr	r3, [r3]
     954:	ldr	r3, [r3]
     958:	mov	r0, r3
     95c:	asr	r1, r0, #31
     960:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     964:	lsr	r4, r2, #3
     968:	orr	r4, r4, r3, lsl #29
     96c:	asr	r5, r3, #3
     970:	cmp	r1, r5
     974:	cmpeq	r0, r4
     978:	beq	990 <mapping_type_set_bit_size+0xfc>
     97c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     980:	mvn	r2, #0
     984:	mvn	r3, #0
     988:	strd	r2, [r1, #24]
     98c:	b	9b0 <mapping_type_set_bit_size+0x11c>
     990:	ldr	r3, [fp, #-16]
     994:	add	r3, r3, #1
     998:	str	r3, [fp, #-16]
     99c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9a0:	ldr	r2, [r3, #8]
     9a4:	ldr	r3, [fp, #-16]
     9a8:	cmp	r2, r3
     9ac:	bgt	93c <mapping_type_set_bit_size+0xa8>
     9b0:	mov	r3, #0
     9b4:	mov	r0, r3
     9b8:	sub	sp, fp, #12
     9bc:	pop	{r4, r5, fp, pc}
     9c0:	.word	0x00001a2c
     9c4:	.word	0x00000191
     9c8:	.word	0x00000028
     9cc:	.word	0x000001ac
     9d0:	.word	0x00000192
     9d4:	.word	0x000001c0
     9d8:	.word	0x000001d0
     9dc:	.word	0xfffffe70

000009e0 <coda_type_record_field_delete>:
     9e0:	push	{fp, lr}
     9e4:	add	fp, sp, #4
     9e8:	sub	sp, sp, #8
     9ec:	str	r0, [fp, #-8]
     9f0:	ldr	r3, [fp, #-8]
     9f4:	cmp	r3, #0
     9f8:	beq	aa8 <coda_type_record_field_delete+0xc8>
     9fc:	ldr	r3, [fp, #-8]
     a00:	ldr	r3, [r3]
     a04:	cmp	r3, #0
     a08:	beq	a1c <coda_type_record_field_delete+0x3c>
     a0c:	ldr	r3, [fp, #-8]
     a10:	ldr	r3, [r3]
     a14:	mov	r0, r3
     a18:	bl	0 <free>
     a1c:	ldr	r3, [fp, #-8]
     a20:	ldr	r3, [r3, #4]
     a24:	cmp	r3, #0
     a28:	beq	a3c <coda_type_record_field_delete+0x5c>
     a2c:	ldr	r3, [fp, #-8]
     a30:	ldr	r3, [r3, #4]
     a34:	mov	r0, r3
     a38:	bl	0 <free>
     a3c:	ldr	r3, [fp, #-8]
     a40:	ldr	r3, [r3, #8]
     a44:	cmp	r3, #0
     a48:	beq	a5c <coda_type_record_field_delete+0x7c>
     a4c:	ldr	r3, [fp, #-8]
     a50:	ldr	r3, [r3, #8]
     a54:	mov	r0, r3
     a58:	bl	1144 <coda_type_release>
     a5c:	ldr	r3, [fp, #-8]
     a60:	ldr	r3, [r3, #20]
     a64:	cmp	r3, #0
     a68:	beq	a7c <coda_type_record_field_delete+0x9c>
     a6c:	ldr	r3, [fp, #-8]
     a70:	ldr	r3, [r3, #20]
     a74:	mov	r0, r3
     a78:	bl	0 <coda_expression_delete>
     a7c:	ldr	r3, [fp, #-8]
     a80:	ldr	r3, [r3, #32]
     a84:	cmp	r3, #0
     a88:	beq	a9c <coda_type_record_field_delete+0xbc>
     a8c:	ldr	r3, [fp, #-8]
     a90:	ldr	r3, [r3, #32]
     a94:	mov	r0, r3
     a98:	bl	0 <coda_expression_delete>
     a9c:	ldr	r0, [fp, #-8]
     aa0:	bl	0 <free>
     aa4:	b	aac <coda_type_record_field_delete+0xcc>
     aa8:	nop			; (mov r0, r0)
     aac:	sub	sp, fp, #4
     ab0:	pop	{fp, pc}

00000ab4 <record_delete>:
     ab4:	push	{fp, lr}
     ab8:	add	fp, sp, #4
     abc:	sub	sp, sp, #16
     ac0:	str	r0, [fp, #-16]
     ac4:	ldr	r3, [fp, #-16]
     ac8:	cmp	r3, #0
     acc:	beq	c28 <record_delete+0x174>
     ad0:	ldr	r3, [fp, #-16]
     ad4:	ldr	r3, [r3, #16]
     ad8:	cmp	r3, #0
     adc:	beq	af0 <record_delete+0x3c>
     ae0:	ldr	r3, [fp, #-16]
     ae4:	ldr	r3, [r3, #16]
     ae8:	mov	r0, r3
     aec:	bl	0 <free>
     af0:	ldr	r3, [fp, #-16]
     af4:	ldr	r3, [r3, #20]
     af8:	cmp	r3, #0
     afc:	beq	b10 <record_delete+0x5c>
     b00:	ldr	r3, [fp, #-16]
     b04:	ldr	r3, [r3, #20]
     b08:	mov	r0, r3
     b0c:	bl	0 <free>
     b10:	ldr	r3, [fp, #-16]
     b14:	ldr	r3, [r3, #32]
     b18:	cmp	r3, #0
     b1c:	beq	b30 <record_delete+0x7c>
     b20:	ldr	r3, [fp, #-16]
     b24:	ldr	r3, [r3, #32]
     b28:	mov	r0, r3
     b2c:	bl	0 <coda_expression_delete>
     b30:	ldr	r3, [fp, #-16]
     b34:	ldr	r3, [r3, #36]	; 0x24
     b38:	cmp	r3, #0
     b3c:	beq	b50 <record_delete+0x9c>
     b40:	ldr	r3, [fp, #-16]
     b44:	ldr	r3, [r3, #36]	; 0x24
     b48:	mov	r0, r3
     b4c:	bl	1144 <coda_type_release>
     b50:	ldr	r3, [fp, #-16]
     b54:	ldr	r3, [r3, #40]	; 0x28
     b58:	cmp	r3, #0
     b5c:	beq	b70 <record_delete+0xbc>
     b60:	ldr	r3, [fp, #-16]
     b64:	ldr	r3, [r3, #40]	; 0x28
     b68:	mov	r0, r3
     b6c:	bl	0 <coda_hashtable_delete>
     b70:	ldr	r3, [fp, #-16]
     b74:	ldr	r3, [r3, #44]	; 0x2c
     b78:	cmp	r3, #0
     b7c:	beq	b90 <record_delete+0xdc>
     b80:	ldr	r3, [fp, #-16]
     b84:	ldr	r3, [r3, #44]	; 0x2c
     b88:	mov	r0, r3
     b8c:	bl	0 <coda_hashtable_delete>
     b90:	ldr	r3, [fp, #-16]
     b94:	ldr	r3, [r3, #48]	; 0x30
     b98:	cmp	r3, #0
     b9c:	ble	bfc <record_delete+0x148>
     ba0:	mov	r3, #0
     ba4:	str	r3, [fp, #-8]
     ba8:	b	bd8 <record_delete+0x124>
     bac:	ldr	r3, [fp, #-16]
     bb0:	ldr	r2, [r3, #52]	; 0x34
     bb4:	ldr	r3, [fp, #-8]
     bb8:	lsl	r3, r3, #2
     bbc:	add	r3, r2, r3
     bc0:	ldr	r3, [r3]
     bc4:	mov	r0, r3
     bc8:	bl	9e0 <coda_type_record_field_delete>
     bcc:	ldr	r3, [fp, #-8]
     bd0:	add	r3, r3, #1
     bd4:	str	r3, [fp, #-8]
     bd8:	ldr	r3, [fp, #-16]
     bdc:	ldr	r2, [r3, #48]	; 0x30
     be0:	ldr	r3, [fp, #-8]
     be4:	cmp	r2, r3
     be8:	bgt	bac <record_delete+0xf8>
     bec:	ldr	r3, [fp, #-16]
     bf0:	ldr	r3, [r3, #52]	; 0x34
     bf4:	mov	r0, r3
     bf8:	bl	0 <free>
     bfc:	ldr	r3, [fp, #-16]
     c00:	ldr	r3, [r3, #68]	; 0x44
     c04:	cmp	r3, #0
     c08:	beq	c1c <record_delete+0x168>
     c0c:	ldr	r3, [fp, #-16]
     c10:	ldr	r3, [r3, #68]	; 0x44
     c14:	mov	r0, r3
     c18:	bl	0 <coda_expression_delete>
     c1c:	ldr	r0, [fp, #-16]
     c20:	bl	0 <free>
     c24:	b	c2c <record_delete+0x178>
     c28:	nop			; (mov r0, r0)
     c2c:	sub	sp, fp, #4
     c30:	pop	{fp, pc}

00000c34 <array_delete>:
     c34:	push	{fp, lr}
     c38:	add	fp, sp, #4
     c3c:	sub	sp, sp, #16
     c40:	str	r0, [fp, #-16]
     c44:	ldr	r3, [fp, #-16]
     c48:	cmp	r3, #0
     c4c:	beq	d68 <array_delete+0x134>
     c50:	ldr	r3, [fp, #-16]
     c54:	ldr	r3, [r3, #16]
     c58:	cmp	r3, #0
     c5c:	beq	c70 <array_delete+0x3c>
     c60:	ldr	r3, [fp, #-16]
     c64:	ldr	r3, [r3, #16]
     c68:	mov	r0, r3
     c6c:	bl	0 <free>
     c70:	ldr	r3, [fp, #-16]
     c74:	ldr	r3, [r3, #20]
     c78:	cmp	r3, #0
     c7c:	beq	c90 <array_delete+0x5c>
     c80:	ldr	r3, [fp, #-16]
     c84:	ldr	r3, [r3, #20]
     c88:	mov	r0, r3
     c8c:	bl	0 <free>
     c90:	ldr	r3, [fp, #-16]
     c94:	ldr	r3, [r3, #32]
     c98:	cmp	r3, #0
     c9c:	beq	cb0 <array_delete+0x7c>
     ca0:	ldr	r3, [fp, #-16]
     ca4:	ldr	r3, [r3, #32]
     ca8:	mov	r0, r3
     cac:	bl	0 <coda_expression_delete>
     cb0:	ldr	r3, [fp, #-16]
     cb4:	ldr	r3, [r3, #36]	; 0x24
     cb8:	cmp	r3, #0
     cbc:	beq	cd0 <array_delete+0x9c>
     cc0:	ldr	r3, [fp, #-16]
     cc4:	ldr	r3, [r3, #36]	; 0x24
     cc8:	mov	r0, r3
     ccc:	bl	1144 <coda_type_release>
     cd0:	ldr	r3, [fp, #-16]
     cd4:	ldr	r3, [r3, #40]	; 0x28
     cd8:	cmp	r3, #0
     cdc:	beq	cf0 <array_delete+0xbc>
     ce0:	ldr	r3, [fp, #-16]
     ce4:	ldr	r3, [r3, #40]	; 0x28
     ce8:	mov	r0, r3
     cec:	bl	1144 <coda_type_release>
     cf0:	mov	r3, #0
     cf4:	str	r3, [fp, #-8]
     cf8:	b	d48 <array_delete+0x114>
     cfc:	ldr	r2, [fp, #-16]
     d00:	ldr	r3, [fp, #-8]
     d04:	add	r3, r3, #20
     d08:	lsl	r3, r3, #2
     d0c:	add	r3, r2, r3
     d10:	ldr	r3, [r3, #4]
     d14:	cmp	r3, #0
     d18:	beq	d3c <array_delete+0x108>
     d1c:	ldr	r2, [fp, #-16]
     d20:	ldr	r3, [fp, #-8]
     d24:	add	r3, r3, #20
     d28:	lsl	r3, r3, #2
     d2c:	add	r3, r2, r3
     d30:	ldr	r3, [r3, #4]
     d34:	mov	r0, r3
     d38:	bl	0 <coda_expression_delete>
     d3c:	ldr	r3, [fp, #-8]
     d40:	add	r3, r3, #1
     d44:	str	r3, [fp, #-8]
     d48:	ldr	r3, [fp, #-16]
     d4c:	ldr	r2, [r3, #48]	; 0x30
     d50:	ldr	r3, [fp, #-8]
     d54:	cmp	r2, r3
     d58:	bgt	cfc <array_delete+0xc8>
     d5c:	ldr	r0, [fp, #-16]
     d60:	bl	0 <free>
     d64:	b	d6c <array_delete+0x138>
     d68:	nop			; (mov r0, r0)
     d6c:	sub	sp, fp, #4
     d70:	pop	{fp, pc}

00000d74 <number_delete>:
     d74:	push	{fp, lr}
     d78:	add	fp, sp, #4
     d7c:	sub	sp, sp, #8
     d80:	str	r0, [fp, #-8]
     d84:	ldr	r3, [fp, #-8]
     d88:	cmp	r3, #0
     d8c:	beq	e7c <number_delete+0x108>
     d90:	ldr	r3, [fp, #-8]
     d94:	ldr	r3, [r3, #16]
     d98:	cmp	r3, #0
     d9c:	beq	db0 <number_delete+0x3c>
     da0:	ldr	r3, [fp, #-8]
     da4:	ldr	r3, [r3, #16]
     da8:	mov	r0, r3
     dac:	bl	0 <free>
     db0:	ldr	r3, [fp, #-8]
     db4:	ldr	r3, [r3, #20]
     db8:	cmp	r3, #0
     dbc:	beq	dd0 <number_delete+0x5c>
     dc0:	ldr	r3, [fp, #-8]
     dc4:	ldr	r3, [r3, #20]
     dc8:	mov	r0, r3
     dcc:	bl	0 <free>
     dd0:	ldr	r3, [fp, #-8]
     dd4:	ldr	r3, [r3, #32]
     dd8:	cmp	r3, #0
     ddc:	beq	df0 <number_delete+0x7c>
     de0:	ldr	r3, [fp, #-8]
     de4:	ldr	r3, [r3, #32]
     de8:	mov	r0, r3
     dec:	bl	0 <coda_expression_delete>
     df0:	ldr	r3, [fp, #-8]
     df4:	ldr	r3, [r3, #36]	; 0x24
     df8:	cmp	r3, #0
     dfc:	beq	e10 <number_delete+0x9c>
     e00:	ldr	r3, [fp, #-8]
     e04:	ldr	r3, [r3, #36]	; 0x24
     e08:	mov	r0, r3
     e0c:	bl	1144 <coda_type_release>
     e10:	ldr	r3, [fp, #-8]
     e14:	ldr	r3, [r3, #40]	; 0x28
     e18:	cmp	r3, #0
     e1c:	beq	e30 <number_delete+0xbc>
     e20:	ldr	r3, [fp, #-8]
     e24:	ldr	r3, [r3, #40]	; 0x28
     e28:	mov	r0, r3
     e2c:	bl	0 <free>
     e30:	ldr	r3, [fp, #-8]
     e34:	ldr	r3, [r3, #48]	; 0x30
     e38:	cmp	r3, #0
     e3c:	beq	e50 <number_delete+0xdc>
     e40:	ldr	r3, [fp, #-8]
     e44:	ldr	r3, [r3, #48]	; 0x30
     e48:	mov	r0, r3
     e4c:	bl	18c <coda_conversion_delete>
     e50:	ldr	r3, [fp, #-8]
     e54:	ldr	r3, [r3, #52]	; 0x34
     e58:	cmp	r3, #0
     e5c:	beq	e70 <number_delete+0xfc>
     e60:	ldr	r3, [fp, #-8]
     e64:	ldr	r3, [r3, #52]	; 0x34
     e68:	mov	r0, r3
     e6c:	bl	234 <mappings_delete>
     e70:	ldr	r0, [fp, #-8]
     e74:	bl	0 <free>
     e78:	b	e80 <number_delete+0x10c>
     e7c:	nop			; (mov r0, r0)
     e80:	sub	sp, fp, #4
     e84:	pop	{fp, pc}

00000e88 <text_delete>:
     e88:	push	{fp, lr}
     e8c:	add	fp, sp, #4
     e90:	sub	sp, sp, #8
     e94:	str	r0, [fp, #-8]
     e98:	ldr	r3, [fp, #-8]
     e9c:	cmp	r3, #0
     ea0:	beq	f50 <text_delete+0xc8>
     ea4:	ldr	r3, [fp, #-8]
     ea8:	ldr	r3, [r3, #16]
     eac:	cmp	r3, #0
     eb0:	beq	ec4 <text_delete+0x3c>
     eb4:	ldr	r3, [fp, #-8]
     eb8:	ldr	r3, [r3, #16]
     ebc:	mov	r0, r3
     ec0:	bl	0 <free>
     ec4:	ldr	r3, [fp, #-8]
     ec8:	ldr	r3, [r3, #20]
     ecc:	cmp	r3, #0
     ed0:	beq	ee4 <text_delete+0x5c>
     ed4:	ldr	r3, [fp, #-8]
     ed8:	ldr	r3, [r3, #20]
     edc:	mov	r0, r3
     ee0:	bl	0 <free>
     ee4:	ldr	r3, [fp, #-8]
     ee8:	ldr	r3, [r3, #32]
     eec:	cmp	r3, #0
     ef0:	beq	f04 <text_delete+0x7c>
     ef4:	ldr	r3, [fp, #-8]
     ef8:	ldr	r3, [r3, #32]
     efc:	mov	r0, r3
     f00:	bl	0 <coda_expression_delete>
     f04:	ldr	r3, [fp, #-8]
     f08:	ldr	r3, [r3, #36]	; 0x24
     f0c:	cmp	r3, #0
     f10:	beq	f24 <text_delete+0x9c>
     f14:	ldr	r3, [fp, #-8]
     f18:	ldr	r3, [r3, #36]	; 0x24
     f1c:	mov	r0, r3
     f20:	bl	1144 <coda_type_release>
     f24:	ldr	r3, [fp, #-8]
     f28:	ldr	r3, [r3, #40]	; 0x28
     f2c:	cmp	r3, #0
     f30:	beq	f44 <text_delete+0xbc>
     f34:	ldr	r3, [fp, #-8]
     f38:	ldr	r3, [r3, #40]	; 0x28
     f3c:	mov	r0, r3
     f40:	bl	0 <free>
     f44:	ldr	r0, [fp, #-8]
     f48:	bl	0 <free>
     f4c:	b	f54 <text_delete+0xcc>
     f50:	nop			; (mov r0, r0)
     f54:	sub	sp, fp, #4
     f58:	pop	{fp, pc}

00000f5c <raw_delete>:
     f5c:	push	{fp, lr}
     f60:	add	fp, sp, #4
     f64:	sub	sp, sp, #8
     f68:	str	r0, [fp, #-8]
     f6c:	ldr	r3, [fp, #-8]
     f70:	cmp	r3, #0
     f74:	beq	1024 <raw_delete+0xc8>
     f78:	ldr	r3, [fp, #-8]
     f7c:	ldr	r3, [r3, #16]
     f80:	cmp	r3, #0
     f84:	beq	f98 <raw_delete+0x3c>
     f88:	ldr	r3, [fp, #-8]
     f8c:	ldr	r3, [r3, #16]
     f90:	mov	r0, r3
     f94:	bl	0 <free>
     f98:	ldr	r3, [fp, #-8]
     f9c:	ldr	r3, [r3, #20]
     fa0:	cmp	r3, #0
     fa4:	beq	fb8 <raw_delete+0x5c>
     fa8:	ldr	r3, [fp, #-8]
     fac:	ldr	r3, [r3, #20]
     fb0:	mov	r0, r3
     fb4:	bl	0 <free>
     fb8:	ldr	r3, [fp, #-8]
     fbc:	ldr	r3, [r3, #32]
     fc0:	cmp	r3, #0
     fc4:	beq	fd8 <raw_delete+0x7c>
     fc8:	ldr	r3, [fp, #-8]
     fcc:	ldr	r3, [r3, #32]
     fd0:	mov	r0, r3
     fd4:	bl	0 <coda_expression_delete>
     fd8:	ldr	r3, [fp, #-8]
     fdc:	ldr	r3, [r3, #36]	; 0x24
     fe0:	cmp	r3, #0
     fe4:	beq	ff8 <raw_delete+0x9c>
     fe8:	ldr	r3, [fp, #-8]
     fec:	ldr	r3, [r3, #36]	; 0x24
     ff0:	mov	r0, r3
     ff4:	bl	1144 <coda_type_release>
     ff8:	ldr	r3, [fp, #-8]
     ffc:	ldr	r3, [r3, #44]	; 0x2c
    1000:	cmp	r3, #0
    1004:	beq	1018 <raw_delete+0xbc>
    1008:	ldr	r3, [fp, #-8]
    100c:	ldr	r3, [r3, #44]	; 0x2c
    1010:	mov	r0, r3
    1014:	bl	0 <free>
    1018:	ldr	r0, [fp, #-8]
    101c:	bl	0 <free>
    1020:	b	1028 <raw_delete+0xcc>
    1024:	nop			; (mov r0, r0)
    1028:	sub	sp, fp, #4
    102c:	pop	{fp, pc}

00001030 <special_delete>:
    1030:	push	{fp, lr}
    1034:	add	fp, sp, #4
    1038:	sub	sp, sp, #8
    103c:	str	r0, [fp, #-8]
    1040:	ldr	r3, [fp, #-8]
    1044:	cmp	r3, #0
    1048:	beq	1138 <special_delete+0x108>
    104c:	ldr	r3, [fp, #-8]
    1050:	ldr	r3, [r3, #16]
    1054:	cmp	r3, #0
    1058:	beq	106c <special_delete+0x3c>
    105c:	ldr	r3, [fp, #-8]
    1060:	ldr	r3, [r3, #16]
    1064:	mov	r0, r3
    1068:	bl	0 <free>
    106c:	ldr	r3, [fp, #-8]
    1070:	ldr	r3, [r3, #20]
    1074:	cmp	r3, #0
    1078:	beq	108c <special_delete+0x5c>
    107c:	ldr	r3, [fp, #-8]
    1080:	ldr	r3, [r3, #20]
    1084:	mov	r0, r3
    1088:	bl	0 <free>
    108c:	ldr	r3, [fp, #-8]
    1090:	ldr	r3, [r3, #32]
    1094:	cmp	r3, #0
    1098:	beq	10ac <special_delete+0x7c>
    109c:	ldr	r3, [fp, #-8]
    10a0:	ldr	r3, [r3, #32]
    10a4:	mov	r0, r3
    10a8:	bl	0 <coda_expression_delete>
    10ac:	ldr	r3, [fp, #-8]
    10b0:	ldr	r3, [r3, #36]	; 0x24
    10b4:	cmp	r3, #0
    10b8:	beq	10cc <special_delete+0x9c>
    10bc:	ldr	r3, [fp, #-8]
    10c0:	ldr	r3, [r3, #36]	; 0x24
    10c4:	mov	r0, r3
    10c8:	bl	1144 <coda_type_release>
    10cc:	ldr	r3, [fp, #-8]
    10d0:	ldr	r3, [r3, #44]	; 0x2c
    10d4:	cmp	r3, #0
    10d8:	beq	10ec <special_delete+0xbc>
    10dc:	ldr	r3, [fp, #-8]
    10e0:	ldr	r3, [r3, #44]	; 0x2c
    10e4:	mov	r0, r3
    10e8:	bl	1144 <coda_type_release>
    10ec:	ldr	r3, [fp, #-8]
    10f0:	ldr	r3, [r3, #48]	; 0x30
    10f4:	cmp	r3, #0
    10f8:	beq	110c <special_delete+0xdc>
    10fc:	ldr	r3, [fp, #-8]
    1100:	ldr	r3, [r3, #48]	; 0x30
    1104:	mov	r0, r3
    1108:	bl	0 <free>
    110c:	ldr	r3, [fp, #-8]
    1110:	ldr	r3, [r3, #52]	; 0x34
    1114:	cmp	r3, #0
    1118:	beq	112c <special_delete+0xfc>
    111c:	ldr	r3, [fp, #-8]
    1120:	ldr	r3, [r3, #52]	; 0x34
    1124:	mov	r0, r3
    1128:	bl	0 <coda_expression_delete>
    112c:	ldr	r0, [fp, #-8]
    1130:	bl	0 <free>
    1134:	b	113c <special_delete+0x10c>
    1138:	nop			; (mov r0, r0)
    113c:	sub	sp, fp, #4
    1140:	pop	{fp, pc}

00001144 <coda_type_release>:
    1144:	push	{fp, lr}
    1148:	add	fp, sp, #4
    114c:	sub	sp, sp, #8
    1150:	str	r0, [fp, #-8]
    1154:	ldr	r3, [fp, #-8]
    1158:	cmp	r3, #0
    115c:	beq	1204 <coda_type_release+0xc0>
    1160:	ldr	r3, [fp, #-8]
    1164:	ldr	r3, [r3, #4]
    1168:	cmp	r3, #0
    116c:	ble	1188 <coda_type_release+0x44>
    1170:	ldr	r3, [fp, #-8]
    1174:	ldr	r3, [r3, #4]
    1178:	sub	r2, r3, #1
    117c:	ldr	r3, [fp, #-8]
    1180:	str	r2, [r3, #4]
    1184:	b	1208 <coda_type_release+0xc4>
    1188:	ldr	r3, [fp, #-8]
    118c:	ldr	r3, [r3, #8]
    1190:	cmp	r3, #6
    1194:	ldrls	pc, [pc, r3, lsl #2]
    1198:	b	1208 <coda_type_release+0xc4>
    119c:	.word	0x000011b8
    11a0:	.word	0x000011c4
    11a4:	.word	0x000011d0
    11a8:	.word	0x000011d0
    11ac:	.word	0x000011dc
    11b0:	.word	0x000011e8
    11b4:	.word	0x000011f4
    11b8:	ldr	r0, [fp, #-8]
    11bc:	bl	ab4 <record_delete>
    11c0:	b	1208 <coda_type_release+0xc4>
    11c4:	ldr	r0, [fp, #-8]
    11c8:	bl	c34 <array_delete>
    11cc:	b	1208 <coda_type_release+0xc4>
    11d0:	ldr	r0, [fp, #-8]
    11d4:	bl	d74 <number_delete>
    11d8:	b	1208 <coda_type_release+0xc4>
    11dc:	ldr	r0, [fp, #-8]
    11e0:	bl	e88 <text_delete>
    11e4:	b	1208 <coda_type_release+0xc4>
    11e8:	ldr	r0, [fp, #-8]
    11ec:	bl	f5c <raw_delete>
    11f0:	b	1208 <coda_type_release+0xc4>
    11f4:	ldr	r0, [fp, #-8]
    11f8:	bl	1030 <special_delete>
    11fc:	nop			; (mov r0, r0)
    1200:	b	1208 <coda_type_release+0xc4>
    1204:	nop			; (mov r0, r0)
    1208:	sub	sp, fp, #4
    120c:	pop	{fp, pc}

00001210 <coda_type_set_read_type>:
    1210:	push	{r4, fp, lr}
    1214:	add	fp, sp, #8
    1218:	sub	sp, sp, #12
    121c:	str	r0, [fp, #-16]
    1220:	str	r1, [fp, #-20]	; 0xffffffec
    1224:	ldr	r3, [fp, #-16]
    1228:	cmp	r3, #0
    122c:	bne	124c <coda_type_set_read_type+0x3c>
    1230:	ldr	r3, [pc, #400]	; 13c8 <coda_type_set_read_type+0x1b8>
    1234:	ldr	r2, [pc, #400]	; 13cc <coda_type_set_read_type+0x1bc>
    1238:	ldr	r1, [pc, #400]	; 13d0 <coda_type_set_read_type+0x1c0>
    123c:	mvn	r0, #99	; 0x63
    1240:	bl	0 <coda_set_error>
    1244:	mvn	r3, #0
    1248:	b	13bc <coda_type_set_read_type+0x1ac>
    124c:	ldr	r3, [fp, #-16]
    1250:	ldr	r3, [r3, #8]
    1254:	cmp	r3, #6
    1258:	ldrls	pc, [pc, r3, lsl #2]
    125c:	b	1388 <coda_type_set_read_type+0x178>
    1260:	.word	0x0000127c
    1264:	.word	0x0000127c
    1268:	.word	0x000012a8
    126c:	.word	0x0000131c
    1270:	.word	0x00001348
    1274:	.word	0x0000127c
    1278:	.word	0x0000127c
    127c:	ldr	r3, [fp, #-16]
    1280:	ldr	r3, [r3, #8]
    1284:	mov	r0, r3
    1288:	bl	5e54 <coda_type_get_class_name>
    128c:	mov	r3, r0
    1290:	mov	r2, r3
    1294:	ldr	r1, [pc, #312]	; 13d4 <coda_type_set_read_type+0x1c4>
    1298:	ldr	r0, [pc, #312]	; 13d8 <coda_type_set_read_type+0x1c8>
    129c:	bl	0 <coda_set_error>
    12a0:	mvn	r3, #0
    12a4:	b	13bc <coda_type_set_read_type+0x1ac>
    12a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    12ac:	cmp	r3, #0
    12b0:	beq	1308 <coda_type_set_read_type+0xf8>
    12b4:	ldr	r3, [fp, #-20]	; 0xffffffec
    12b8:	cmp	r3, #1
    12bc:	beq	1308 <coda_type_set_read_type+0xf8>
    12c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    12c4:	cmp	r3, #2
    12c8:	beq	1308 <coda_type_set_read_type+0xf8>
    12cc:	ldr	r3, [fp, #-20]	; 0xffffffec
    12d0:	cmp	r3, #3
    12d4:	beq	1308 <coda_type_set_read_type+0xf8>
    12d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    12dc:	cmp	r3, #4
    12e0:	beq	1308 <coda_type_set_read_type+0xf8>
    12e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    12e8:	cmp	r3, #5
    12ec:	beq	1308 <coda_type_set_read_type+0xf8>
    12f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    12f4:	cmp	r3, #6
    12f8:	beq	1308 <coda_type_set_read_type+0xf8>
    12fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1300:	cmp	r3, #7
    1304:	bne	1374 <coda_type_set_read_type+0x164>
    1308:	ldr	r3, [fp, #-16]
    130c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1310:	str	r2, [r3, #12]
    1314:	mov	r3, #0
    1318:	b	13bc <coda_type_set_read_type+0x1ac>
    131c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1320:	cmp	r3, #8
    1324:	beq	1334 <coda_type_set_read_type+0x124>
    1328:	ldr	r3, [fp, #-20]	; 0xffffffec
    132c:	cmp	r3, #9
    1330:	bne	137c <coda_type_set_read_type+0x16c>
    1334:	ldr	r3, [fp, #-16]
    1338:	ldr	r2, [fp, #-20]	; 0xffffffec
    133c:	str	r2, [r3, #12]
    1340:	mov	r3, #0
    1344:	b	13bc <coda_type_set_read_type+0x1ac>
    1348:	ldr	r3, [fp, #-20]	; 0xffffffec
    134c:	cmp	r3, #10
    1350:	beq	1360 <coda_type_set_read_type+0x150>
    1354:	ldr	r3, [fp, #-20]	; 0xffffffec
    1358:	cmp	r3, #11
    135c:	bne	1384 <coda_type_set_read_type+0x174>
    1360:	ldr	r3, [fp, #-16]
    1364:	ldr	r2, [fp, #-20]	; 0xffffffec
    1368:	str	r2, [r3, #12]
    136c:	mov	r3, #0
    1370:	b	13bc <coda_type_set_read_type+0x1ac>
    1374:	nop			; (mov r0, r0)
    1378:	b	1388 <coda_type_set_read_type+0x178>
    137c:	nop			; (mov r0, r0)
    1380:	b	1388 <coda_type_set_read_type+0x178>
    1384:	nop			; (mov r0, r0)
    1388:	ldr	r0, [fp, #-20]	; 0xffffffec
    138c:	bl	5efc <coda_type_get_native_type_name>
    1390:	mov	r4, r0
    1394:	ldr	r3, [fp, #-16]
    1398:	ldr	r3, [r3, #8]
    139c:	mov	r0, r3
    13a0:	bl	5e54 <coda_type_get_class_name>
    13a4:	mov	r3, r0
    13a8:	mov	r2, r4
    13ac:	ldr	r1, [pc, #40]	; 13dc <coda_type_set_read_type+0x1cc>
    13b0:	ldr	r0, [pc, #32]	; 13d8 <coda_type_set_read_type+0x1c8>
    13b4:	bl	0 <coda_set_error>
    13b8:	mvn	r3, #0
    13bc:	mov	r0, r3
    13c0:	sub	sp, fp, #8
    13c4:	pop	{r4, fp, pc}
    13c8:	.word	0x000002c6
    13cc:	.word	0x00000028
    13d0:	.word	0x000001f0
    13d4:	.word	0x00000210
    13d8:	.word	0xfffffe70
    13dc:	.word	0x00000240

000013e0 <coda_type_set_name>:
    13e0:	push	{fp, lr}
    13e4:	add	fp, sp, #4
    13e8:	sub	sp, sp, #16
    13ec:	str	r0, [fp, #-16]
    13f0:	str	r1, [fp, #-20]	; 0xffffffec
    13f4:	mov	r3, #0
    13f8:	str	r3, [fp, #-8]
    13fc:	ldr	r3, [fp, #-16]
    1400:	cmp	r3, #0
    1404:	bne	1424 <coda_type_set_name+0x44>
    1408:	ldr	r3, [pc, #224]	; 14f0 <coda_type_set_name+0x110>
    140c:	ldr	r2, [pc, #224]	; 14f4 <coda_type_set_name+0x114>
    1410:	ldr	r1, [pc, #224]	; 14f8 <coda_type_set_name+0x118>
    1414:	mvn	r0, #99	; 0x63
    1418:	bl	0 <coda_set_error>
    141c:	mvn	r3, #0
    1420:	b	14e4 <coda_type_set_name+0x104>
    1424:	ldr	r3, [fp, #-20]	; 0xffffffec
    1428:	cmp	r3, #0
    142c:	bne	144c <coda_type_set_name+0x6c>
    1430:	mov	r3, #764	; 0x2fc
    1434:	ldr	r2, [pc, #184]	; 14f4 <coda_type_set_name+0x114>
    1438:	ldr	r1, [pc, #188]	; 14fc <coda_type_set_name+0x11c>
    143c:	mvn	r0, #99	; 0x63
    1440:	bl	0 <coda_set_error>
    1444:	mvn	r3, #0
    1448:	b	14e4 <coda_type_set_name+0x104>
    144c:	ldr	r3, [fp, #-16]
    1450:	ldr	r3, [r3, #16]
    1454:	cmp	r3, #0
    1458:	beq	1470 <coda_type_set_name+0x90>
    145c:	ldr	r1, [pc, #156]	; 1500 <coda_type_set_name+0x120>
    1460:	ldr	r0, [pc, #156]	; 1504 <coda_type_set_name+0x124>
    1464:	bl	0 <coda_set_error>
    1468:	mvn	r3, #0
    146c:	b	14e4 <coda_type_set_name+0x104>
    1470:	ldr	r0, [fp, #-20]	; 0xffffffec
    1474:	bl	0 <coda_is_identifier>
    1478:	mov	r3, r0
    147c:	cmp	r3, #0
    1480:	bne	149c <coda_type_set_name+0xbc>
    1484:	ldr	r2, [fp, #-20]	; 0xffffffec
    1488:	ldr	r1, [pc, #120]	; 1508 <coda_type_set_name+0x128>
    148c:	ldr	r0, [pc, #112]	; 1504 <coda_type_set_name+0x124>
    1490:	bl	0 <coda_set_error>
    1494:	mvn	r3, #0
    1498:	b	14e4 <coda_type_set_name+0x104>
    149c:	ldr	r0, [fp, #-20]	; 0xffffffec
    14a0:	bl	0 <strdup>
    14a4:	mov	r3, r0
    14a8:	str	r3, [fp, #-8]
    14ac:	ldr	r3, [fp, #-8]
    14b0:	cmp	r3, #0
    14b4:	bne	14d4 <coda_type_set_name+0xf4>
    14b8:	ldr	r3, [pc, #76]	; 150c <coda_type_set_name+0x12c>
    14bc:	ldr	r2, [pc, #48]	; 14f4 <coda_type_set_name+0x114>
    14c0:	ldr	r1, [pc, #72]	; 1510 <coda_type_set_name+0x130>
    14c4:	mvn	r0, #0
    14c8:	bl	0 <coda_set_error>
    14cc:	mvn	r3, #0
    14d0:	b	14e4 <coda_type_set_name+0x104>
    14d4:	ldr	r3, [fp, #-16]
    14d8:	ldr	r2, [fp, #-8]
    14dc:	str	r2, [r3, #16]
    14e0:	mov	r3, #0
    14e4:	mov	r0, r3
    14e8:	sub	sp, fp, #4
    14ec:	pop	{fp, pc}
    14f0:	.word	0x000002f7
    14f4:	.word	0x00000028
    14f8:	.word	0x000001f0
    14fc:	.word	0x00000264
    1500:	.word	0x00000284
    1504:	.word	0xfffffe70
    1508:	.word	0x0000029c
    150c:	.word	0x0000030d
    1510:	.word	0x000000c8

00001514 <coda_type_set_description>:
    1514:	push	{fp, lr}
    1518:	add	fp, sp, #4
    151c:	sub	sp, sp, #16
    1520:	str	r0, [fp, #-16]
    1524:	str	r1, [fp, #-20]	; 0xffffffec
    1528:	mov	r3, #0
    152c:	str	r3, [fp, #-8]
    1530:	ldr	r3, [fp, #-16]
    1534:	cmp	r3, #0
    1538:	bne	1558 <coda_type_set_description+0x44>
    153c:	ldr	r3, [pc, #192]	; 1604 <coda_type_set_description+0xf0>
    1540:	ldr	r2, [pc, #192]	; 1608 <coda_type_set_description+0xf4>
    1544:	ldr	r1, [pc, #192]	; 160c <coda_type_set_description+0xf8>
    1548:	mvn	r0, #99	; 0x63
    154c:	bl	0 <coda_set_error>
    1550:	mvn	r3, #0
    1554:	b	15f8 <coda_type_set_description+0xe4>
    1558:	ldr	r3, [fp, #-20]	; 0xffffffec
    155c:	cmp	r3, #0
    1560:	bne	1580 <coda_type_set_description+0x6c>
    1564:	mov	r3, #800	; 0x320
    1568:	ldr	r2, [pc, #152]	; 1608 <coda_type_set_description+0xf4>
    156c:	ldr	r1, [pc, #156]	; 1610 <coda_type_set_description+0xfc>
    1570:	mvn	r0, #99	; 0x63
    1574:	bl	0 <coda_set_error>
    1578:	mvn	r3, #0
    157c:	b	15f8 <coda_type_set_description+0xe4>
    1580:	ldr	r3, [fp, #-16]
    1584:	ldr	r3, [r3, #20]
    1588:	cmp	r3, #0
    158c:	beq	15a4 <coda_type_set_description+0x90>
    1590:	ldr	r1, [pc, #124]	; 1614 <coda_type_set_description+0x100>
    1594:	ldr	r0, [pc, #124]	; 1618 <coda_type_set_description+0x104>
    1598:	bl	0 <coda_set_error>
    159c:	mvn	r3, #0
    15a0:	b	15f8 <coda_type_set_description+0xe4>
    15a4:	ldr	r3, [fp, #-20]	; 0xffffffec
    15a8:	cmp	r3, #0
    15ac:	beq	15e8 <coda_type_set_description+0xd4>
    15b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    15b4:	bl	0 <strdup>
    15b8:	mov	r3, r0
    15bc:	str	r3, [fp, #-8]
    15c0:	ldr	r3, [fp, #-8]
    15c4:	cmp	r3, #0
    15c8:	bne	15e8 <coda_type_set_description+0xd4>
    15cc:	ldr	r3, [pc, #72]	; 161c <coda_type_set_description+0x108>
    15d0:	ldr	r2, [pc, #48]	; 1608 <coda_type_set_description+0xf4>
    15d4:	ldr	r1, [pc, #68]	; 1620 <coda_type_set_description+0x10c>
    15d8:	mvn	r0, #0
    15dc:	bl	0 <coda_set_error>
    15e0:	mvn	r3, #0
    15e4:	b	15f8 <coda_type_set_description+0xe4>
    15e8:	ldr	r3, [fp, #-16]
    15ec:	ldr	r2, [fp, #-8]
    15f0:	str	r2, [r3, #20]
    15f4:	mov	r3, #0
    15f8:	mov	r0, r3
    15fc:	sub	sp, fp, #4
    1600:	pop	{fp, pc}
    1604:	.word	0x0000031b
    1608:	.word	0x00000028
    160c:	.word	0x000001f0
    1610:	.word	0x000002c0
    1614:	.word	0x000002e8
    1618:	.word	0xfffffe70
    161c:	.word	0x0000032e
    1620:	.word	0x000000c8

00001624 <coda_type_set_bit_size>:
    1624:	push	{fp, lr}
    1628:	add	fp, sp, #4
    162c:	sub	sp, sp, #64	; 0x40
    1630:	str	r0, [fp, #-56]	; 0xffffffc8
    1634:	strd	r2, [fp, #-68]	; 0xffffffbc
    1638:	ldr	r3, [fp, #-56]	; 0xffffffc8
    163c:	cmp	r3, #0
    1640:	bne	1660 <coda_type_set_bit_size+0x3c>
    1644:	ldr	r3, [pc, #368]	; 17bc <coda_type_set_bit_size+0x198>
    1648:	ldr	r2, [pc, #368]	; 17c0 <coda_type_set_bit_size+0x19c>
    164c:	ldr	r1, [pc, #368]	; 17c4 <coda_type_set_bit_size+0x1a0>
    1650:	mvn	r0, #99	; 0x63
    1654:	bl	0 <coda_set_error>
    1658:	mvn	r3, #0
    165c:	b	17b0 <coda_type_set_bit_size+0x18c>
    1660:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1664:	ldrd	r2, [r3, #24]
    1668:	cmp	r2, #0
    166c:	sbcs	r3, r3, #0
    1670:	blt	1688 <coda_type_set_bit_size+0x64>
    1674:	ldr	r1, [pc, #332]	; 17c8 <coda_type_set_bit_size+0x1a4>
    1678:	ldr	r0, [pc, #332]	; 17cc <coda_type_set_bit_size+0x1a8>
    167c:	bl	0 <coda_set_error>
    1680:	mvn	r3, #0
    1684:	b	17b0 <coda_type_set_bit_size+0x18c>
    1688:	ldr	r3, [fp, #-56]	; 0xffffffc8
    168c:	ldr	r3, [r3, #32]
    1690:	cmp	r3, #0
    1694:	beq	16ac <coda_type_set_bit_size+0x88>
    1698:	ldr	r1, [pc, #304]	; 17d0 <coda_type_set_bit_size+0x1ac>
    169c:	ldr	r0, [pc, #296]	; 17cc <coda_type_set_bit_size+0x1a8>
    16a0:	bl	0 <coda_set_error>
    16a4:	mvn	r3, #0
    16a8:	b	17b0 <coda_type_set_bit_size+0x18c>
    16ac:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    16b0:	cmp	r2, #0
    16b4:	sbcs	r3, r3, #0
    16b8:	bge	16e8 <coda_type_set_bit_size+0xc4>
    16bc:	sub	r3, fp, #28
    16c0:	mov	r2, r3
    16c4:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    16c8:	bl	0 <coda_str64>
    16cc:	sub	r3, fp, #28
    16d0:	mov	r2, r3
    16d4:	ldr	r1, [pc, #248]	; 17d4 <coda_type_set_bit_size+0x1b0>
    16d8:	ldr	r0, [pc, #236]	; 17cc <coda_type_set_bit_size+0x1a8>
    16dc:	bl	0 <coda_set_error>
    16e0:	mvn	r3, #0
    16e4:	b	17b0 <coda_type_set_bit_size+0x18c>
    16e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    16ec:	ldr	r3, [r3]
    16f0:	cmp	r3, #0
    16f4:	bne	1740 <coda_type_set_bit_size+0x11c>
    16f8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    16fc:	mov	r0, #7
    1700:	mov	r1, #0
    1704:	and	r2, r2, r0
    1708:	and	r3, r3, r1
    170c:	orrs	r3, r2, r3
    1710:	beq	1740 <coda_type_set_bit_size+0x11c>
    1714:	sub	r3, fp, #52	; 0x34
    1718:	mov	r2, r3
    171c:	ldrd	r0, [fp, #-68]	; 0xffffffbc
    1720:	bl	0 <coda_str64>
    1724:	sub	r3, fp, #52	; 0x34
    1728:	mov	r2, r3
    172c:	ldr	r1, [pc, #164]	; 17d8 <coda_type_set_bit_size+0x1b4>
    1730:	ldr	r0, [pc, #148]	; 17cc <coda_type_set_bit_size+0x1a8>
    1734:	bl	0 <coda_set_error>
    1738:	mvn	r3, #0
    173c:	b	17b0 <coda_type_set_bit_size+0x18c>
    1740:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1744:	ldr	r3, [r3, #8]
    1748:	cmp	r3, #6
    174c:	ldrls	pc, [pc, r3, lsl #2]
    1750:	b	17a0 <coda_type_set_bit_size+0x17c>
    1754:	.word	0x000017a0
    1758:	.word	0x000017a0
    175c:	.word	0x00001770
    1760:	.word	0x00001770
    1764:	.word	0x000017a0
    1768:	.word	0x000017a0
    176c:	.word	0x000017a0
    1770:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1774:	ldr	r3, [r3, #52]	; 0x34
    1778:	cmp	r3, #0
    177c:	beq	179c <coda_type_set_bit_size+0x178>
    1780:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1784:	ldr	r1, [r3, #52]	; 0x34
    1788:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    178c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1790:	bl	894 <mapping_type_set_bit_size>
    1794:	mov	r3, r0
    1798:	b	17b0 <coda_type_set_bit_size+0x18c>
    179c:	nop			; (mov r0, r0)
    17a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    17a4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    17a8:	strd	r2, [r1, #24]
    17ac:	mov	r3, #0
    17b0:	mov	r0, r3
    17b4:	sub	sp, fp, #4
    17b8:	pop	{fp, pc}
    17bc:	.word	0x0000033b
    17c0:	.word	0x00000028
    17c4:	.word	0x000001f0
    17c8:	.word	0x00000308
    17cc:	.word	0xfffffe70
    17d0:	.word	0x00000324
    17d4:	.word	0x0000034c
    17d8:	.word	0x00000368

000017dc <coda_type_set_byte_size>:
    17dc:	push	{r4, r5, fp, lr}
    17e0:	add	fp, sp, #12
    17e4:	sub	sp, sp, #16
    17e8:	str	r0, [fp, #-16]
    17ec:	strd	r2, [fp, #-28]	; 0xffffffe4
    17f0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    17f4:	lsl	r5, r3, #3
    17f8:	orr	r5, r5, r2, lsr #29
    17fc:	lsl	r4, r2, #3
    1800:	mov	r2, r4
    1804:	mov	r3, r5
    1808:	ldr	r0, [fp, #-16]
    180c:	bl	1624 <coda_type_set_bit_size>
    1810:	mov	r3, r0
    1814:	mov	r0, r3
    1818:	sub	sp, fp, #12
    181c:	pop	{r4, r5, fp, pc}

00001820 <coda_type_set_bit_size_expression>:
    1820:	push	{fp, lr}
    1824:	add	fp, sp, #4
    1828:	sub	sp, sp, #8
    182c:	str	r0, [fp, #-8]
    1830:	str	r1, [fp, #-12]
    1834:	ldr	r3, [fp, #-8]
    1838:	cmp	r3, #0
    183c:	bne	185c <coda_type_set_bit_size_expression+0x3c>
    1840:	mov	r3, #892	; 0x37c
    1844:	ldr	r2, [pc, #248]	; 1944 <coda_type_set_bit_size_expression+0x124>
    1848:	ldr	r1, [pc, #248]	; 1948 <coda_type_set_bit_size_expression+0x128>
    184c:	mvn	r0, #99	; 0x63
    1850:	bl	0 <coda_set_error>
    1854:	mvn	r3, #0
    1858:	b	1938 <coda_type_set_bit_size_expression+0x118>
    185c:	ldr	r3, [fp, #-12]
    1860:	cmp	r3, #0
    1864:	bne	1884 <coda_type_set_bit_size_expression+0x64>
    1868:	ldr	r3, [pc, #220]	; 194c <coda_type_set_bit_size_expression+0x12c>
    186c:	ldr	r2, [pc, #208]	; 1944 <coda_type_set_bit_size_expression+0x124>
    1870:	ldr	r1, [pc, #216]	; 1950 <coda_type_set_bit_size_expression+0x130>
    1874:	mvn	r0, #99	; 0x63
    1878:	bl	0 <coda_set_error>
    187c:	mvn	r3, #0
    1880:	b	1938 <coda_type_set_bit_size_expression+0x118>
    1884:	ldr	r3, [fp, #-8]
    1888:	ldr	r3, [r3, #32]
    188c:	cmp	r3, #0
    1890:	beq	18a8 <coda_type_set_bit_size_expression+0x88>
    1894:	ldr	r1, [pc, #184]	; 1954 <coda_type_set_bit_size_expression+0x134>
    1898:	ldr	r0, [pc, #184]	; 1958 <coda_type_set_bit_size_expression+0x138>
    189c:	bl	0 <coda_set_error>
    18a0:	mvn	r3, #0
    18a4:	b	1938 <coda_type_set_bit_size_expression+0x118>
    18a8:	ldr	r3, [fp, #-8]
    18ac:	ldr	r3, [r3, #8]
    18b0:	cmp	r3, #0
    18b4:	beq	18c8 <coda_type_set_bit_size_expression+0xa8>
    18b8:	ldr	r3, [fp, #-8]
    18bc:	ldr	r3, [r3, #8]
    18c0:	cmp	r3, #1
    18c4:	bne	18f0 <coda_type_set_bit_size_expression+0xd0>
    18c8:	ldr	r3, [fp, #-8]
    18cc:	ldrd	r2, [r3, #24]
    18d0:	cmp	r2, #1
    18d4:	sbcs	r3, r3, #0
    18d8:	blt	1918 <coda_type_set_bit_size_expression+0xf8>
    18dc:	ldr	r1, [pc, #120]	; 195c <coda_type_set_bit_size_expression+0x13c>
    18e0:	ldr	r0, [pc, #112]	; 1958 <coda_type_set_bit_size_expression+0x138>
    18e4:	bl	0 <coda_set_error>
    18e8:	mvn	r3, #0
    18ec:	b	1938 <coda_type_set_bit_size_expression+0x118>
    18f0:	ldr	r3, [fp, #-8]
    18f4:	ldrd	r2, [r3, #24]
    18f8:	cmp	r2, #0
    18fc:	sbcs	r3, r3, #0
    1900:	blt	1918 <coda_type_set_bit_size_expression+0xf8>
    1904:	ldr	r1, [pc, #80]	; 195c <coda_type_set_bit_size_expression+0x13c>
    1908:	ldr	r0, [pc, #72]	; 1958 <coda_type_set_bit_size_expression+0x138>
    190c:	bl	0 <coda_set_error>
    1910:	mvn	r3, #0
    1914:	b	1938 <coda_type_set_bit_size_expression+0x118>
    1918:	ldr	r3, [fp, #-8]
    191c:	ldr	r2, [fp, #-12]
    1920:	str	r2, [r3, #32]
    1924:	ldr	r1, [fp, #-8]
    1928:	mvn	r2, #0
    192c:	mvn	r3, #0
    1930:	strd	r2, [r1, #24]
    1934:	mov	r3, #0
    1938:	mov	r0, r3
    193c:	sub	sp, fp, #4
    1940:	pop	{fp, pc}
    1944:	.word	0x00000028
    1948:	.word	0x000001f0
    194c:	.word	0x00000381
    1950:	.word	0x000003ac
    1954:	.word	0x00000324
    1958:	.word	0xfffffe70
    195c:	.word	0x00000308

00001960 <coda_type_set_byte_size_expression>:
    1960:	push	{fp, lr}
    1964:	add	fp, sp, #4
    1968:	sub	sp, sp, #8
    196c:	str	r0, [fp, #-8]
    1970:	str	r1, [fp, #-12]
    1974:	ldr	r3, [fp, #-8]
    1978:	cmp	r3, #0
    197c:	bne	199c <coda_type_set_byte_size_expression+0x3c>
    1980:	ldr	r3, [pc, #252]	; 1a84 <coda_type_set_byte_size_expression+0x124>
    1984:	ldr	r2, [pc, #252]	; 1a88 <coda_type_set_byte_size_expression+0x128>
    1988:	ldr	r1, [pc, #252]	; 1a8c <coda_type_set_byte_size_expression+0x12c>
    198c:	mvn	r0, #99	; 0x63
    1990:	bl	0 <coda_set_error>
    1994:	mvn	r3, #0
    1998:	b	1a78 <coda_type_set_byte_size_expression+0x118>
    199c:	ldr	r3, [fp, #-12]
    19a0:	cmp	r3, #0
    19a4:	bne	19c4 <coda_type_set_byte_size_expression+0x64>
    19a8:	mov	r3, #936	; 0x3a8
    19ac:	ldr	r2, [pc, #212]	; 1a88 <coda_type_set_byte_size_expression+0x128>
    19b0:	ldr	r1, [pc, #216]	; 1a90 <coda_type_set_byte_size_expression+0x130>
    19b4:	mvn	r0, #99	; 0x63
    19b8:	bl	0 <coda_set_error>
    19bc:	mvn	r3, #0
    19c0:	b	1a78 <coda_type_set_byte_size_expression+0x118>
    19c4:	ldr	r3, [fp, #-8]
    19c8:	ldr	r3, [r3, #32]
    19cc:	cmp	r3, #0
    19d0:	beq	19e8 <coda_type_set_byte_size_expression+0x88>
    19d4:	ldr	r1, [pc, #184]	; 1a94 <coda_type_set_byte_size_expression+0x134>
    19d8:	ldr	r0, [pc, #184]	; 1a98 <coda_type_set_byte_size_expression+0x138>
    19dc:	bl	0 <coda_set_error>
    19e0:	mvn	r3, #0
    19e4:	b	1a78 <coda_type_set_byte_size_expression+0x118>
    19e8:	ldr	r3, [fp, #-8]
    19ec:	ldr	r3, [r3, #8]
    19f0:	cmp	r3, #0
    19f4:	beq	1a08 <coda_type_set_byte_size_expression+0xa8>
    19f8:	ldr	r3, [fp, #-8]
    19fc:	ldr	r3, [r3, #8]
    1a00:	cmp	r3, #1
    1a04:	bne	1a30 <coda_type_set_byte_size_expression+0xd0>
    1a08:	ldr	r3, [fp, #-8]
    1a0c:	ldrd	r2, [r3, #24]
    1a10:	cmp	r2, #1
    1a14:	sbcs	r3, r3, #0
    1a18:	blt	1a58 <coda_type_set_byte_size_expression+0xf8>
    1a1c:	ldr	r1, [pc, #120]	; 1a9c <coda_type_set_byte_size_expression+0x13c>
    1a20:	ldr	r0, [pc, #112]	; 1a98 <coda_type_set_byte_size_expression+0x138>
    1a24:	bl	0 <coda_set_error>
    1a28:	mvn	r3, #0
    1a2c:	b	1a78 <coda_type_set_byte_size_expression+0x118>
    1a30:	ldr	r3, [fp, #-8]
    1a34:	ldrd	r2, [r3, #24]
    1a38:	cmp	r2, #0
    1a3c:	sbcs	r3, r3, #0
    1a40:	blt	1a58 <coda_type_set_byte_size_expression+0xf8>
    1a44:	ldr	r1, [pc, #80]	; 1a9c <coda_type_set_byte_size_expression+0x13c>
    1a48:	ldr	r0, [pc, #72]	; 1a98 <coda_type_set_byte_size_expression+0x138>
    1a4c:	bl	0 <coda_set_error>
    1a50:	mvn	r3, #0
    1a54:	b	1a78 <coda_type_set_byte_size_expression+0x118>
    1a58:	ldr	r3, [fp, #-8]
    1a5c:	ldr	r2, [fp, #-12]
    1a60:	str	r2, [r3, #32]
    1a64:	ldr	r1, [fp, #-8]
    1a68:	mvn	r2, #7
    1a6c:	mvn	r3, #0
    1a70:	strd	r2, [r1, #24]
    1a74:	mov	r3, #0
    1a78:	mov	r0, r3
    1a7c:	sub	sp, fp, #4
    1a80:	pop	{fp, pc}
    1a84:	.word	0x000003a3
    1a88:	.word	0x00000028
    1a8c:	.word	0x000001f0
    1a90:	.word	0x000003d4
    1a94:	.word	0x000003fc
    1a98:	.word	0xfffffe70
    1a9c:	.word	0x00000424

00001aa0 <coda_type_add_attribute>:
    1aa0:	push	{fp, lr}
    1aa4:	add	fp, sp, #4
    1aa8:	sub	sp, sp, #8
    1aac:	str	r0, [fp, #-8]
    1ab0:	str	r1, [fp, #-12]
    1ab4:	ldr	r3, [fp, #-8]
    1ab8:	cmp	r3, #0
    1abc:	bne	1adc <coda_type_add_attribute+0x3c>
    1ac0:	ldr	r3, [pc, #164]	; 1b6c <coda_type_add_attribute+0xcc>
    1ac4:	ldr	r2, [pc, #164]	; 1b70 <coda_type_add_attribute+0xd0>
    1ac8:	ldr	r1, [pc, #164]	; 1b74 <coda_type_add_attribute+0xd4>
    1acc:	mvn	r0, #99	; 0x63
    1ad0:	bl	0 <coda_set_error>
    1ad4:	mvn	r3, #0
    1ad8:	b	1b60 <coda_type_add_attribute+0xc0>
    1adc:	ldr	r3, [fp, #-12]
    1ae0:	cmp	r3, #0
    1ae4:	bne	1b04 <coda_type_add_attribute+0x64>
    1ae8:	ldr	r3, [pc, #136]	; 1b78 <coda_type_add_attribute+0xd8>
    1aec:	ldr	r2, [pc, #124]	; 1b70 <coda_type_add_attribute+0xd0>
    1af0:	ldr	r1, [pc, #132]	; 1b7c <coda_type_add_attribute+0xdc>
    1af4:	mvn	r0, #99	; 0x63
    1af8:	bl	0 <coda_set_error>
    1afc:	mvn	r3, #0
    1b00:	b	1b60 <coda_type_add_attribute+0xc0>
    1b04:	ldr	r3, [fp, #-8]
    1b08:	ldr	r3, [r3, #36]	; 0x24
    1b0c:	cmp	r3, #0
    1b10:	bne	1b48 <coda_type_add_attribute+0xa8>
    1b14:	ldr	r3, [fp, #-8]
    1b18:	ldr	r3, [r3]
    1b1c:	mov	r0, r3
    1b20:	bl	2310 <coda_type_record_new>
    1b24:	mov	r2, r0
    1b28:	ldr	r3, [fp, #-8]
    1b2c:	str	r2, [r3, #36]	; 0x24
    1b30:	ldr	r3, [fp, #-8]
    1b34:	ldr	r3, [r3, #36]	; 0x24
    1b38:	cmp	r3, #0
    1b3c:	bne	1b48 <coda_type_add_attribute+0xa8>
    1b40:	mvn	r3, #0
    1b44:	b	1b60 <coda_type_add_attribute+0xc0>
    1b48:	ldr	r3, [fp, #-8]
    1b4c:	ldr	r3, [r3, #36]	; 0x24
    1b50:	ldr	r1, [fp, #-12]
    1b54:	mov	r0, r3
    1b58:	bl	2d70 <coda_type_record_add_field>
    1b5c:	mov	r3, r0
    1b60:	mov	r0, r3
    1b64:	sub	sp, fp, #4
    1b68:	pop	{fp, pc}
    1b6c:	.word	0x000003ca
    1b70:	.word	0x00000028
    1b74:	.word	0x000001f0
    1b78:	.word	0x000003cf
    1b7c:	.word	0x00000444

00001b80 <coda_type_set_attributes>:
    1b80:	push	{fp, lr}
    1b84:	add	fp, sp, #4
    1b88:	sub	sp, sp, #8
    1b8c:	str	r0, [fp, #-8]
    1b90:	str	r1, [fp, #-12]
    1b94:	ldr	r3, [fp, #-8]
    1b98:	cmp	r3, #0
    1b9c:	bne	1bbc <coda_type_set_attributes+0x3c>
    1ba0:	ldr	r3, [pc, #152]	; 1c40 <coda_type_set_attributes+0xc0>
    1ba4:	ldr	r2, [pc, #152]	; 1c44 <coda_type_set_attributes+0xc4>
    1ba8:	ldr	r1, [pc, #152]	; 1c48 <coda_type_set_attributes+0xc8>
    1bac:	mvn	r0, #99	; 0x63
    1bb0:	bl	0 <coda_set_error>
    1bb4:	mvn	r3, #0
    1bb8:	b	1c34 <coda_type_set_attributes+0xb4>
    1bbc:	ldr	r3, [fp, #-12]
    1bc0:	cmp	r3, #0
    1bc4:	bne	1be4 <coda_type_set_attributes+0x64>
    1bc8:	ldr	r3, [pc, #124]	; 1c4c <coda_type_set_attributes+0xcc>
    1bcc:	ldr	r2, [pc, #112]	; 1c44 <coda_type_set_attributes+0xc4>
    1bd0:	ldr	r1, [pc, #120]	; 1c50 <coda_type_set_attributes+0xd0>
    1bd4:	mvn	r0, #99	; 0x63
    1bd8:	bl	0 <coda_set_error>
    1bdc:	mvn	r3, #0
    1be0:	b	1c34 <coda_type_set_attributes+0xb4>
    1be4:	ldr	r3, [fp, #-8]
    1be8:	ldr	r3, [r3, #36]	; 0x24
    1bec:	cmp	r3, #0
    1bf0:	beq	1c10 <coda_type_set_attributes+0x90>
    1bf4:	ldr	r3, [pc, #88]	; 1c54 <coda_type_set_attributes+0xd4>
    1bf8:	ldr	r2, [pc, #68]	; 1c44 <coda_type_set_attributes+0xc4>
    1bfc:	ldr	r1, [pc, #84]	; 1c58 <coda_type_set_attributes+0xd8>
    1c00:	mvn	r0, #99	; 0x63
    1c04:	bl	0 <coda_set_error>
    1c08:	mvn	r3, #0
    1c0c:	b	1c34 <coda_type_set_attributes+0xb4>
    1c10:	ldr	r3, [fp, #-8]
    1c14:	ldr	r2, [fp, #-12]
    1c18:	str	r2, [r3, #36]	; 0x24
    1c1c:	ldr	r3, [fp, #-12]
    1c20:	ldr	r3, [r3, #4]
    1c24:	add	r2, r3, #1
    1c28:	ldr	r3, [fp, #-12]
    1c2c:	str	r2, [r3, #4]
    1c30:	mov	r3, #0
    1c34:	mov	r0, r3
    1c38:	sub	sp, fp, #4
    1c3c:	pop	{fp, pc}
    1c40:	.word	0x000003e1
    1c44:	.word	0x00000028
    1c48:	.word	0x000001f0
    1c4c:	.word	0x000003e6
    1c50:	.word	0x00000468
    1c54:	.word	0x000003eb
    1c58:	.word	0x0000048c

00001c5c <coda_type_record_field_new>:
    1c5c:	push	{fp, lr}
    1c60:	add	fp, sp, #4
    1c64:	sub	sp, sp, #24
    1c68:	str	r0, [fp, #-16]
    1c6c:	ldr	r3, [fp, #-16]
    1c70:	cmp	r3, #0
    1c74:	bne	1c94 <coda_type_record_field_new+0x38>
    1c78:	ldr	r3, [pc, #320]	; 1dc0 <coda_type_record_field_new+0x164>
    1c7c:	ldr	r2, [pc, #320]	; 1dc4 <coda_type_record_field_new+0x168>
    1c80:	ldr	r1, [pc, #320]	; 1dc8 <coda_type_record_field_new+0x16c>
    1c84:	mvn	r0, #99	; 0x63
    1c88:	bl	0 <coda_set_error>
    1c8c:	mov	r3, #0
    1c90:	b	1db4 <coda_type_record_field_new+0x158>
    1c94:	ldr	r0, [fp, #-16]
    1c98:	bl	0 <coda_is_identifier>
    1c9c:	mov	r3, r0
    1ca0:	cmp	r3, #0
    1ca4:	bne	1cc0 <coda_type_record_field_new+0x64>
    1ca8:	ldr	r2, [fp, #-16]
    1cac:	ldr	r1, [pc, #280]	; 1dcc <coda_type_record_field_new+0x170>
    1cb0:	ldr	r0, [pc, #280]	; 1dd0 <coda_type_record_field_new+0x174>
    1cb4:	bl	0 <coda_set_error>
    1cb8:	mov	r3, #0
    1cbc:	b	1db4 <coda_type_record_field_new+0x158>
    1cc0:	mov	r0, #40	; 0x28
    1cc4:	bl	0 <malloc>
    1cc8:	mov	r3, r0
    1ccc:	str	r3, [fp, #-8]
    1cd0:	ldr	r3, [fp, #-8]
    1cd4:	cmp	r3, #0
    1cd8:	bne	1d00 <coda_type_record_field_new+0xa4>
    1cdc:	ldr	r3, [pc, #240]	; 1dd4 <coda_type_record_field_new+0x178>
    1ce0:	str	r3, [sp]
    1ce4:	ldr	r3, [pc, #216]	; 1dc4 <coda_type_record_field_new+0x168>
    1ce8:	mov	r2, #40	; 0x28
    1cec:	ldr	r1, [pc, #228]	; 1dd8 <coda_type_record_field_new+0x17c>
    1cf0:	mvn	r0, #0
    1cf4:	bl	0 <coda_set_error>
    1cf8:	mov	r3, #0
    1cfc:	b	1db4 <coda_type_record_field_new+0x158>
    1d00:	ldr	r3, [fp, #-8]
    1d04:	mov	r2, #0
    1d08:	str	r2, [r3]
    1d0c:	ldr	r3, [fp, #-8]
    1d10:	mov	r2, #0
    1d14:	str	r2, [r3, #4]
    1d18:	ldr	r3, [fp, #-8]
    1d1c:	mov	r2, #0
    1d20:	str	r2, [r3, #8]
    1d24:	ldr	r3, [fp, #-8]
    1d28:	mov	r2, #0
    1d2c:	str	r2, [r3, #12]
    1d30:	ldr	r3, [fp, #-8]
    1d34:	mov	r2, #0
    1d38:	strb	r2, [r3, #16]
    1d3c:	ldr	r3, [fp, #-8]
    1d40:	mov	r2, #0
    1d44:	str	r2, [r3, #20]
    1d48:	ldr	r1, [fp, #-8]
    1d4c:	mvn	r2, #0
    1d50:	mvn	r3, #0
    1d54:	strd	r2, [r1, #24]
    1d58:	ldr	r3, [fp, #-8]
    1d5c:	mov	r2, #0
    1d60:	str	r2, [r3, #32]
    1d64:	ldr	r0, [fp, #-16]
    1d68:	bl	0 <strdup>
    1d6c:	mov	r3, r0
    1d70:	mov	r2, r3
    1d74:	ldr	r3, [fp, #-8]
    1d78:	str	r2, [r3]
    1d7c:	ldr	r3, [fp, #-8]
    1d80:	ldr	r3, [r3]
    1d84:	cmp	r3, #0
    1d88:	bne	1db0 <coda_type_record_field_new+0x154>
    1d8c:	ldr	r3, [pc, #72]	; 1ddc <coda_type_record_field_new+0x180>
    1d90:	ldr	r2, [pc, #44]	; 1dc4 <coda_type_record_field_new+0x168>
    1d94:	ldr	r1, [pc, #68]	; 1de0 <coda_type_record_field_new+0x184>
    1d98:	mvn	r0, #0
    1d9c:	bl	0 <coda_set_error>
    1da0:	ldr	r0, [fp, #-8]
    1da4:	bl	9e0 <coda_type_record_field_delete>
    1da8:	mov	r3, #0
    1dac:	b	1db4 <coda_type_record_field_new+0x158>
    1db0:	ldr	r3, [fp, #-8]
    1db4:	mov	r0, r3
    1db8:	sub	sp, fp, #4
    1dbc:	pop	{fp, pc}
    1dc0:	.word	0x000003f9
    1dc4:	.word	0x00000028
    1dc8:	.word	0x00000264
    1dcc:	.word	0x000004b0
    1dd0:	.word	0xfffffe70
    1dd4:	.word	0x00000407
    1dd8:	.word	0x00000070
    1ddc:	.word	0x00000417
    1de0:	.word	0x000000c8

00001de4 <coda_type_record_field_set_real_name>:
    1de4:	push	{fp, lr}
    1de8:	add	fp, sp, #4
    1dec:	sub	sp, sp, #8
    1df0:	str	r0, [fp, #-8]
    1df4:	str	r1, [fp, #-12]
    1df8:	ldr	r3, [fp, #-8]
    1dfc:	cmp	r3, #0
    1e00:	bne	1e20 <coda_type_record_field_set_real_name+0x3c>
    1e04:	ldr	r3, [pc, #180]	; 1ec0 <coda_type_record_field_set_real_name+0xdc>
    1e08:	ldr	r2, [pc, #180]	; 1ec4 <coda_type_record_field_set_real_name+0xe0>
    1e0c:	ldr	r1, [pc, #180]	; 1ec8 <coda_type_record_field_set_real_name+0xe4>
    1e10:	mvn	r0, #99	; 0x63
    1e14:	bl	0 <coda_set_error>
    1e18:	mvn	r3, #0
    1e1c:	b	1eb4 <coda_type_record_field_set_real_name+0xd0>
    1e20:	ldr	r3, [fp, #-12]
    1e24:	cmp	r3, #0
    1e28:	bne	1e48 <coda_type_record_field_set_real_name+0x64>
    1e2c:	ldr	r3, [pc, #152]	; 1ecc <coda_type_record_field_set_real_name+0xe8>
    1e30:	ldr	r2, [pc, #140]	; 1ec4 <coda_type_record_field_set_real_name+0xe0>
    1e34:	ldr	r1, [pc, #148]	; 1ed0 <coda_type_record_field_set_real_name+0xec>
    1e38:	mvn	r0, #99	; 0x63
    1e3c:	bl	0 <coda_set_error>
    1e40:	mvn	r3, #0
    1e44:	b	1eb4 <coda_type_record_field_set_real_name+0xd0>
    1e48:	ldr	r3, [fp, #-8]
    1e4c:	ldr	r3, [r3, #4]
    1e50:	cmp	r3, #0
    1e54:	beq	1e6c <coda_type_record_field_set_real_name+0x88>
    1e58:	ldr	r1, [pc, #116]	; 1ed4 <coda_type_record_field_set_real_name+0xf0>
    1e5c:	ldr	r0, [pc, #116]	; 1ed8 <coda_type_record_field_set_real_name+0xf4>
    1e60:	bl	0 <coda_set_error>
    1e64:	mvn	r3, #0
    1e68:	b	1eb4 <coda_type_record_field_set_real_name+0xd0>
    1e6c:	ldr	r0, [fp, #-12]
    1e70:	bl	0 <strdup>
    1e74:	mov	r3, r0
    1e78:	mov	r2, r3
    1e7c:	ldr	r3, [fp, #-8]
    1e80:	str	r2, [r3, #4]
    1e84:	ldr	r3, [fp, #-8]
    1e88:	ldr	r3, [r3, #4]
    1e8c:	cmp	r3, #0
    1e90:	bne	1eb0 <coda_type_record_field_set_real_name+0xcc>
    1e94:	ldr	r3, [pc, #64]	; 1edc <coda_type_record_field_set_real_name+0xf8>
    1e98:	ldr	r2, [pc, #36]	; 1ec4 <coda_type_record_field_set_real_name+0xe0>
    1e9c:	ldr	r1, [pc, #60]	; 1ee0 <coda_type_record_field_set_real_name+0xfc>
    1ea0:	mvn	r0, #0
    1ea4:	bl	0 <coda_set_error>
    1ea8:	mvn	r3, #0
    1eac:	b	1eb4 <coda_type_record_field_set_real_name+0xd0>
    1eb0:	mov	r3, #0
    1eb4:	mov	r0, r3
    1eb8:	sub	sp, fp, #4
    1ebc:	pop	{fp, pc}
    1ec0:	.word	0x00000423
    1ec4:	.word	0x00000028
    1ec8:	.word	0x000004f0
    1ecc:	.word	0x00000428
    1ed0:	.word	0x00000510
    1ed4:	.word	0x00000534
    1ed8:	.word	0xfffffe70
    1edc:	.word	0x00000434
    1ee0:	.word	0x000000c8

00001ee4 <coda_type_record_field_set_type>:
    1ee4:	push	{fp, lr}
    1ee8:	add	fp, sp, #4
    1eec:	sub	sp, sp, #8
    1ef0:	str	r0, [fp, #-8]
    1ef4:	str	r1, [fp, #-12]
    1ef8:	ldr	r3, [fp, #-8]
    1efc:	cmp	r3, #0
    1f00:	bne	1f20 <coda_type_record_field_set_type+0x3c>
    1f04:	ldr	r3, [pc, #144]	; 1f9c <coda_type_record_field_set_type+0xb8>
    1f08:	ldr	r2, [pc, #144]	; 1fa0 <coda_type_record_field_set_type+0xbc>
    1f0c:	ldr	r1, [pc, #144]	; 1fa4 <coda_type_record_field_set_type+0xc0>
    1f10:	mvn	r0, #99	; 0x63
    1f14:	bl	0 <coda_set_error>
    1f18:	mvn	r3, #0
    1f1c:	b	1f90 <coda_type_record_field_set_type+0xac>
    1f20:	ldr	r3, [fp, #-12]
    1f24:	cmp	r3, #0
    1f28:	bne	1f48 <coda_type_record_field_set_type+0x64>
    1f2c:	ldr	r3, [pc, #116]	; 1fa8 <coda_type_record_field_set_type+0xc4>
    1f30:	ldr	r2, [pc, #104]	; 1fa0 <coda_type_record_field_set_type+0xbc>
    1f34:	ldr	r1, [pc, #112]	; 1fac <coda_type_record_field_set_type+0xc8>
    1f38:	mvn	r0, #99	; 0x63
    1f3c:	bl	0 <coda_set_error>
    1f40:	mvn	r3, #0
    1f44:	b	1f90 <coda_type_record_field_set_type+0xac>
    1f48:	ldr	r3, [fp, #-8]
    1f4c:	ldr	r3, [r3, #8]
    1f50:	cmp	r3, #0
    1f54:	beq	1f6c <coda_type_record_field_set_type+0x88>
    1f58:	ldr	r1, [pc, #80]	; 1fb0 <coda_type_record_field_set_type+0xcc>
    1f5c:	ldr	r0, [pc, #80]	; 1fb4 <coda_type_record_field_set_type+0xd0>
    1f60:	bl	0 <coda_set_error>
    1f64:	mvn	r3, #0
    1f68:	b	1f90 <coda_type_record_field_set_type+0xac>
    1f6c:	ldr	r3, [fp, #-8]
    1f70:	ldr	r2, [fp, #-12]
    1f74:	str	r2, [r3, #8]
    1f78:	ldr	r3, [fp, #-12]
    1f7c:	ldr	r3, [r3, #4]
    1f80:	add	r2, r3, #1
    1f84:	ldr	r3, [fp, #-12]
    1f88:	str	r2, [r3, #4]
    1f8c:	mov	r3, #0
    1f90:	mov	r0, r3
    1f94:	sub	sp, fp, #4
    1f98:	pop	{fp, pc}
    1f9c:	.word	0x0000043f
    1fa0:	.word	0x00000028
    1fa4:	.word	0x000004f0
    1fa8:	.word	0x00000444
    1fac:	.word	0x000001f0
    1fb0:	.word	0x00000554
    1fb4:	.word	0xfffffe70

00001fb8 <coda_type_record_field_set_hidden>:
    1fb8:	push	{fp, lr}
    1fbc:	add	fp, sp, #4
    1fc0:	sub	sp, sp, #8
    1fc4:	str	r0, [fp, #-8]
    1fc8:	ldr	r3, [fp, #-8]
    1fcc:	cmp	r3, #0
    1fd0:	bne	1ff0 <coda_type_record_field_set_hidden+0x38>
    1fd4:	ldr	r3, [pc, #48]	; 200c <coda_type_record_field_set_hidden+0x54>
    1fd8:	ldr	r2, [pc, #48]	; 2010 <coda_type_record_field_set_hidden+0x58>
    1fdc:	ldr	r1, [pc, #48]	; 2014 <coda_type_record_field_set_hidden+0x5c>
    1fe0:	mvn	r0, #99	; 0x63
    1fe4:	bl	0 <coda_set_error>
    1fe8:	mvn	r3, #0
    1fec:	b	2000 <coda_type_record_field_set_hidden+0x48>
    1ff0:	ldr	r3, [fp, #-8]
    1ff4:	mov	r2, #1
    1ff8:	str	r2, [r3, #12]
    1ffc:	mov	r3, #0
    2000:	mov	r0, r3
    2004:	sub	sp, fp, #4
    2008:	pop	{fp, pc}
    200c:	.word	0x00000455
    2010:	.word	0x00000028
    2014:	.word	0x000004f0

00002018 <coda_type_record_field_set_optional>:
    2018:	push	{fp, lr}
    201c:	add	fp, sp, #4
    2020:	sub	sp, sp, #8
    2024:	str	r0, [fp, #-8]
    2028:	ldr	r3, [fp, #-8]
    202c:	cmp	r3, #0
    2030:	bne	2050 <coda_type_record_field_set_optional+0x38>
    2034:	mov	r3, #1120	; 0x460
    2038:	ldr	r2, [pc, #44]	; 206c <coda_type_record_field_set_optional+0x54>
    203c:	ldr	r1, [pc, #44]	; 2070 <coda_type_record_field_set_optional+0x58>
    2040:	mvn	r0, #99	; 0x63
    2044:	bl	0 <coda_set_error>
    2048:	mvn	r3, #0
    204c:	b	2060 <coda_type_record_field_set_optional+0x48>
    2050:	ldr	r3, [fp, #-8]
    2054:	mov	r2, #1
    2058:	strb	r2, [r3, #16]
    205c:	mov	r3, #0
    2060:	mov	r0, r3
    2064:	sub	sp, fp, #4
    2068:	pop	{fp, pc}
    206c:	.word	0x00000028
    2070:	.word	0x000004f0

00002074 <coda_type_record_field_set_available_expression>:
    2074:	push	{fp, lr}
    2078:	add	fp, sp, #4
    207c:	sub	sp, sp, #8
    2080:	str	r0, [fp, #-8]
    2084:	str	r1, [fp, #-12]
    2088:	ldr	r3, [fp, #-8]
    208c:	cmp	r3, #0
    2090:	bne	20b0 <coda_type_record_field_set_available_expression+0x3c>
    2094:	ldr	r3, [pc, #136]	; 2124 <coda_type_record_field_set_available_expression+0xb0>
    2098:	ldr	r2, [pc, #136]	; 2128 <coda_type_record_field_set_available_expression+0xb4>
    209c:	ldr	r1, [pc, #136]	; 212c <coda_type_record_field_set_available_expression+0xb8>
    20a0:	mvn	r0, #99	; 0x63
    20a4:	bl	0 <coda_set_error>
    20a8:	mvn	r3, #0
    20ac:	b	2118 <coda_type_record_field_set_available_expression+0xa4>
    20b0:	ldr	r3, [fp, #-12]
    20b4:	cmp	r3, #0
    20b8:	bne	20d8 <coda_type_record_field_set_available_expression+0x64>
    20bc:	mov	r3, #1136	; 0x470
    20c0:	ldr	r2, [pc, #96]	; 2128 <coda_type_record_field_set_available_expression+0xb4>
    20c4:	ldr	r1, [pc, #100]	; 2130 <coda_type_record_field_set_available_expression+0xbc>
    20c8:	mvn	r0, #99	; 0x63
    20cc:	bl	0 <coda_set_error>
    20d0:	mvn	r3, #0
    20d4:	b	2118 <coda_type_record_field_set_available_expression+0xa4>
    20d8:	ldr	r3, [fp, #-8]
    20dc:	ldr	r3, [r3, #20]
    20e0:	cmp	r3, #0
    20e4:	beq	20fc <coda_type_record_field_set_available_expression+0x88>
    20e8:	ldr	r1, [pc, #68]	; 2134 <coda_type_record_field_set_available_expression+0xc0>
    20ec:	ldr	r0, [pc, #68]	; 2138 <coda_type_record_field_set_available_expression+0xc4>
    20f0:	bl	0 <coda_set_error>
    20f4:	mvn	r3, #0
    20f8:	b	2118 <coda_type_record_field_set_available_expression+0xa4>
    20fc:	ldr	r3, [fp, #-8]
    2100:	ldr	r2, [fp, #-12]
    2104:	str	r2, [r3, #20]
    2108:	ldr	r3, [fp, #-8]
    210c:	mov	r2, #1
    2110:	strb	r2, [r3, #16]
    2114:	mov	r3, #0
    2118:	mov	r0, r3
    211c:	sub	sp, fp, #4
    2120:	pop	{fp, pc}
    2124:	.word	0x0000046b
    2128:	.word	0x00000028
    212c:	.word	0x000004f0
    2130:	.word	0x00000570
    2134:	.word	0x00000598
    2138:	.word	0xfffffe70

0000213c <coda_type_record_field_set_bit_offset_expression>:
    213c:	push	{fp, lr}
    2140:	add	fp, sp, #4
    2144:	sub	sp, sp, #8
    2148:	str	r0, [fp, #-8]
    214c:	str	r1, [fp, #-12]
    2150:	ldr	r3, [fp, #-8]
    2154:	cmp	r3, #0
    2158:	bne	2178 <coda_type_record_field_set_bit_offset_expression+0x3c>
    215c:	ldr	r3, [pc, #212]	; 2238 <coda_type_record_field_set_bit_offset_expression+0xfc>
    2160:	ldr	r2, [pc, #212]	; 223c <coda_type_record_field_set_bit_offset_expression+0x100>
    2164:	ldr	r1, [pc, #212]	; 2240 <coda_type_record_field_set_bit_offset_expression+0x104>
    2168:	mvn	r0, #99	; 0x63
    216c:	bl	0 <coda_set_error>
    2170:	mvn	r3, #0
    2174:	b	222c <coda_type_record_field_set_bit_offset_expression+0xf0>
    2178:	ldr	r3, [fp, #-12]
    217c:	cmp	r3, #0
    2180:	bne	21a0 <coda_type_record_field_set_bit_offset_expression+0x64>
    2184:	ldr	r3, [pc, #184]	; 2244 <coda_type_record_field_set_bit_offset_expression+0x108>
    2188:	ldr	r2, [pc, #172]	; 223c <coda_type_record_field_set_bit_offset_expression+0x100>
    218c:	ldr	r1, [pc, #180]	; 2248 <coda_type_record_field_set_bit_offset_expression+0x10c>
    2190:	mvn	r0, #99	; 0x63
    2194:	bl	0 <coda_set_error>
    2198:	mvn	r3, #0
    219c:	b	222c <coda_type_record_field_set_bit_offset_expression+0xf0>
    21a0:	ldr	r3, [fp, #-8]
    21a4:	ldr	r3, [r3, #32]
    21a8:	cmp	r3, #0
    21ac:	beq	21c4 <coda_type_record_field_set_bit_offset_expression+0x88>
    21b0:	ldr	r1, [pc, #148]	; 224c <coda_type_record_field_set_bit_offset_expression+0x110>
    21b4:	ldr	r0, [pc, #148]	; 2250 <coda_type_record_field_set_bit_offset_expression+0x114>
    21b8:	bl	0 <coda_set_error>
    21bc:	mvn	r3, #0
    21c0:	b	222c <coda_type_record_field_set_bit_offset_expression+0xf0>
    21c4:	ldr	r3, [fp, #-8]
    21c8:	ldr	r3, [r3, #8]
    21cc:	ldr	r3, [r3]
    21d0:	cmp	r3, #0
    21d4:	beq	221c <coda_type_record_field_set_bit_offset_expression+0xe0>
    21d8:	ldr	r3, [fp, #-8]
    21dc:	ldr	r3, [r3, #8]
    21e0:	ldr	r3, [r3]
    21e4:	cmp	r3, #1
    21e8:	beq	221c <coda_type_record_field_set_bit_offset_expression+0xe0>
    21ec:	ldr	r3, [fp, #-8]
    21f0:	ldr	r3, [r3, #8]
    21f4:	ldr	r3, [r3]
    21f8:	mov	r0, r3
    21fc:	bl	5d7c <coda_type_get_format_name>
    2200:	mov	r3, r0
    2204:	mov	r2, r3
    2208:	ldr	r1, [pc, #68]	; 2254 <coda_type_record_field_set_bit_offset_expression+0x118>
    220c:	ldr	r0, [pc, #60]	; 2250 <coda_type_record_field_set_bit_offset_expression+0x114>
    2210:	bl	0 <coda_set_error>
    2214:	mvn	r3, #0
    2218:	b	222c <coda_type_record_field_set_bit_offset_expression+0xf0>
    221c:	ldr	r3, [fp, #-8]
    2220:	ldr	r2, [fp, #-12]
    2224:	str	r2, [r3, #32]
    2228:	mov	r3, #0
    222c:	mov	r0, r3
    2230:	sub	sp, fp, #4
    2234:	pop	{fp, pc}
    2238:	.word	0x00000481
    223c:	.word	0x00000028
    2240:	.word	0x000004f0
    2244:	.word	0x00000486
    2248:	.word	0x000005c4
    224c:	.word	0x000005f0
    2250:	.word	0xfffffe70
    2254:	.word	0x0000061c

00002258 <coda_type_record_field_validate>:
    2258:	push	{fp, lr}
    225c:	add	fp, sp, #4
    2260:	sub	sp, sp, #8
    2264:	str	r0, [fp, #-8]
    2268:	ldr	r3, [fp, #-8]
    226c:	cmp	r3, #0
    2270:	bne	2290 <coda_type_record_field_validate+0x38>
    2274:	ldr	r3, [pc, #72]	; 22c4 <coda_type_record_field_validate+0x6c>
    2278:	ldr	r2, [pc, #72]	; 22c8 <coda_type_record_field_validate+0x70>
    227c:	ldr	r1, [pc, #72]	; 22cc <coda_type_record_field_validate+0x74>
    2280:	mvn	r0, #99	; 0x63
    2284:	bl	0 <coda_set_error>
    2288:	mvn	r3, #0
    228c:	b	22b8 <coda_type_record_field_validate+0x60>
    2290:	ldr	r3, [fp, #-8]
    2294:	ldr	r3, [r3, #8]
    2298:	cmp	r3, #0
    229c:	bne	22b4 <coda_type_record_field_validate+0x5c>
    22a0:	ldr	r1, [pc, #40]	; 22d0 <coda_type_record_field_validate+0x78>
    22a4:	ldr	r0, [pc, #40]	; 22d4 <coda_type_record_field_validate+0x7c>
    22a8:	bl	0 <coda_set_error>
    22ac:	mvn	r3, #0
    22b0:	b	22b8 <coda_type_record_field_validate+0x60>
    22b4:	mov	r3, #0
    22b8:	mov	r0, r3
    22bc:	sub	sp, fp, #4
    22c0:	pop	{fp, pc}
    22c4:	.word	0x0000049c
    22c8:	.word	0x00000028
    22cc:	.word	0x000004f0
    22d0:	.word	0x00000660
    22d4:	.word	0xfffffe70

000022d8 <coda_type_record_field_get_type>:
    22d8:	push	{fp}		; (str fp, [sp, #-4]!)
    22dc:	add	fp, sp, #0
    22e0:	sub	sp, sp, #12
    22e4:	str	r0, [fp, #-8]
    22e8:	str	r1, [fp, #-12]
    22ec:	ldr	r3, [fp, #-8]
    22f0:	ldr	r2, [r3, #8]
    22f4:	ldr	r3, [fp, #-12]
    22f8:	str	r2, [r3]
    22fc:	mov	r3, #0
    2300:	mov	r0, r3
    2304:	add	sp, fp, #0
    2308:	pop	{fp}		; (ldr fp, [sp], #4)
    230c:	bx	lr

00002310 <coda_type_record_new>:
    2310:	push	{fp, lr}
    2314:	add	fp, sp, #4
    2318:	sub	sp, sp, #24
    231c:	str	r0, [fp, #-16]
    2320:	mov	r0, #72	; 0x48
    2324:	bl	0 <malloc>
    2328:	mov	r3, r0
    232c:	str	r3, [fp, #-8]
    2330:	ldr	r3, [fp, #-8]
    2334:	cmp	r3, #0
    2338:	bne	2360 <coda_type_record_new+0x50>
    233c:	ldr	r3, [pc, #448]	; 2504 <coda_type_record_new+0x1f4>
    2340:	str	r3, [sp]
    2344:	ldr	r3, [pc, #444]	; 2508 <coda_type_record_new+0x1f8>
    2348:	mov	r2, #72	; 0x48
    234c:	ldr	r1, [pc, #440]	; 250c <coda_type_record_new+0x1fc>
    2350:	mvn	r0, #0
    2354:	bl	0 <coda_set_error>
    2358:	mov	r3, #0
    235c:	b	24f8 <coda_type_record_new+0x1e8>
    2360:	ldr	r3, [fp, #-8]
    2364:	ldr	r2, [fp, #-16]
    2368:	str	r2, [r3]
    236c:	ldr	r3, [fp, #-8]
    2370:	mov	r2, #0
    2374:	str	r2, [r3, #4]
    2378:	ldr	r3, [fp, #-8]
    237c:	mov	r2, #0
    2380:	str	r2, [r3, #8]
    2384:	ldr	r3, [fp, #-8]
    2388:	mvn	r2, #0
    238c:	str	r2, [r3, #12]
    2390:	ldr	r3, [fp, #-8]
    2394:	mov	r2, #0
    2398:	str	r2, [r3, #16]
    239c:	ldr	r3, [fp, #-8]
    23a0:	mov	r2, #0
    23a4:	str	r2, [r3, #20]
    23a8:	ldr	r1, [fp, #-8]
    23ac:	mvn	r2, #0
    23b0:	mvn	r3, #0
    23b4:	strd	r2, [r1, #24]
    23b8:	ldr	r3, [fp, #-8]
    23bc:	mov	r2, #0
    23c0:	str	r2, [r3, #32]
    23c4:	ldr	r3, [fp, #-8]
    23c8:	mov	r2, #0
    23cc:	str	r2, [r3, #36]	; 0x24
    23d0:	ldr	r3, [fp, #-8]
    23d4:	mov	r2, #0
    23d8:	str	r2, [r3, #40]	; 0x28
    23dc:	ldr	r3, [fp, #-8]
    23e0:	mov	r2, #0
    23e4:	str	r2, [r3, #44]	; 0x2c
    23e8:	ldr	r3, [fp, #-8]
    23ec:	mov	r2, #0
    23f0:	str	r2, [r3, #48]	; 0x30
    23f4:	ldr	r3, [fp, #-8]
    23f8:	mov	r2, #0
    23fc:	str	r2, [r3, #52]	; 0x34
    2400:	ldr	r3, [fp, #-8]
    2404:	mov	r2, #0
    2408:	str	r2, [r3, #56]	; 0x38
    240c:	ldr	r3, [fp, #-8]
    2410:	mov	r2, #0
    2414:	str	r2, [r3, #60]	; 0x3c
    2418:	ldr	r3, [fp, #-8]
    241c:	mov	r2, #0
    2420:	str	r2, [r3, #64]	; 0x40
    2424:	ldr	r3, [fp, #-8]
    2428:	mov	r2, #0
    242c:	str	r2, [r3, #68]	; 0x44
    2430:	ldr	r3, [fp, #-16]
    2434:	cmp	r3, #0
    2438:	beq	2448 <coda_type_record_new+0x138>
    243c:	ldr	r3, [fp, #-16]
    2440:	cmp	r3, #1
    2444:	bne	2464 <coda_type_record_new+0x154>
    2448:	ldr	r3, [fp, #-8]
    244c:	mov	r2, #12
    2450:	str	r2, [r3, #12]
    2454:	ldr	r1, [fp, #-8]
    2458:	mov	r2, #0
    245c:	mov	r3, #0
    2460:	strd	r2, [r1, #24]
    2464:	mov	r0, #0
    2468:	bl	0 <coda_hashtable_new>
    246c:	mov	r2, r0
    2470:	ldr	r3, [fp, #-8]
    2474:	str	r2, [r3, #40]	; 0x28
    2478:	ldr	r3, [fp, #-8]
    247c:	ldr	r3, [r3, #40]	; 0x28
    2480:	cmp	r3, #0
    2484:	bne	24ac <coda_type_record_new+0x19c>
    2488:	ldr	r3, [pc, #128]	; 2510 <coda_type_record_new+0x200>
    248c:	ldr	r2, [pc, #116]	; 2508 <coda_type_record_new+0x1f8>
    2490:	ldr	r1, [pc, #124]	; 2514 <coda_type_record_new+0x204>
    2494:	mvn	r0, #0
    2498:	bl	0 <coda_set_error>
    249c:	ldr	r0, [fp, #-8]
    24a0:	bl	ab4 <record_delete>
    24a4:	mov	r3, #0
    24a8:	b	24f8 <coda_type_record_new+0x1e8>
    24ac:	mov	r0, #1
    24b0:	bl	0 <coda_hashtable_new>
    24b4:	mov	r2, r0
    24b8:	ldr	r3, [fp, #-8]
    24bc:	str	r2, [r3, #44]	; 0x2c
    24c0:	ldr	r3, [fp, #-8]
    24c4:	ldr	r3, [r3, #44]	; 0x2c
    24c8:	cmp	r3, #0
    24cc:	bne	24f4 <coda_type_record_new+0x1e4>
    24d0:	ldr	r3, [pc, #64]	; 2518 <coda_type_record_new+0x208>
    24d4:	ldr	r2, [pc, #44]	; 2508 <coda_type_record_new+0x1f8>
    24d8:	ldr	r1, [pc, #52]	; 2514 <coda_type_record_new+0x204>
    24dc:	mvn	r0, #0
    24e0:	bl	0 <coda_set_error>
    24e4:	ldr	r0, [fp, #-8]
    24e8:	bl	ab4 <record_delete>
    24ec:	mov	r3, #0
    24f0:	b	24f8 <coda_type_record_new+0x1e8>
    24f4:	ldr	r3, [fp, #-8]
    24f8:	mov	r0, r3
    24fc:	sub	sp, fp, #4
    2500:	pop	{fp, pc}
    2504:	.word	0x000004b5
    2508:	.word	0x00000028
    250c:	.word	0x00000070
    2510:	.word	0x000004d4
    2514:	.word	0x00000684
    2518:	.word	0x000004dd

0000251c <coda_type_union_new>:
    251c:	push	{fp, lr}
    2520:	add	fp, sp, #4
    2524:	sub	sp, sp, #16
    2528:	str	r0, [fp, #-16]
    252c:	ldr	r0, [fp, #-16]
    2530:	bl	2310 <coda_type_record_new>
    2534:	str	r0, [fp, #-8]
    2538:	ldr	r3, [fp, #-8]
    253c:	cmp	r3, #0
    2540:	beq	2550 <coda_type_union_new+0x34>
    2544:	ldr	r3, [fp, #-8]
    2548:	mov	r2, #1
    254c:	str	r2, [r3, #64]	; 0x40
    2550:	ldr	r3, [fp, #-8]
    2554:	mov	r0, r3
    2558:	sub	sp, fp, #4
    255c:	pop	{fp, pc}

00002560 <coda_type_empty_record>:
    2560:	push	{fp, lr}
    2564:	add	fp, sp, #4
    2568:	sub	sp, sp, #8
    256c:	str	r0, [fp, #-8]
    2570:	ldr	r3, [fp, #-8]
    2574:	cmp	r3, #10
    2578:	bls	2590 <coda_type_empty_record+0x30>
    257c:	ldr	r3, [pc, #196]	; 2648 <coda_type_empty_record+0xe8>
    2580:	ldr	r2, [pc, #196]	; 264c <coda_type_empty_record+0xec>
    2584:	ldr	r1, [pc, #196]	; 2650 <coda_type_empty_record+0xf0>
    2588:	ldr	r0, [pc, #196]	; 2654 <coda_type_empty_record+0xf4>
    258c:	bl	0 <__assert_fail>
    2590:	bl	0 <__aeabi_read_tp>
    2594:	mov	r1, r0
    2598:	ldr	r2, [pc, #184]	; 2658 <coda_type_empty_record+0xf8>
    259c:	ldr	r3, [fp, #-8]
    25a0:	lsl	r3, r3, #2
    25a4:	add	r3, r3, r1
    25a8:	add	r3, r3, r2
    25ac:	ldr	r3, [r3]
    25b0:	cmp	r3, #0
    25b4:	bne	261c <coda_type_empty_record+0xbc>
    25b8:	ldr	r0, [fp, #-8]
    25bc:	bl	2310 <coda_type_record_new>
    25c0:	mov	r1, r0
    25c4:	bl	0 <__aeabi_read_tp>
    25c8:	ldr	r2, [pc, #136]	; 2658 <coda_type_empty_record+0xf8>
    25cc:	ldr	r3, [fp, #-8]
    25d0:	lsl	r3, r3, #2
    25d4:	add	r3, r3, r0
    25d8:	add	r3, r3, r2
    25dc:	str	r1, [r3]
    25e0:	bl	0 <__aeabi_read_tp>
    25e4:	mov	r1, r0
    25e8:	ldr	r2, [pc, #104]	; 2658 <coda_type_empty_record+0xf8>
    25ec:	ldr	r3, [fp, #-8]
    25f0:	lsl	r3, r3, #2
    25f4:	add	r3, r3, r1
    25f8:	add	r3, r3, r2
    25fc:	ldr	r3, [r3]
    2600:	cmp	r3, #0
    2604:	bne	261c <coda_type_empty_record+0xbc>
    2608:	ldr	r3, [pc, #56]	; 2648 <coda_type_empty_record+0xe8>
    260c:	ldr	r2, [pc, #72]	; 265c <coda_type_empty_record+0xfc>
    2610:	ldr	r1, [pc, #56]	; 2650 <coda_type_empty_record+0xf0>
    2614:	ldr	r0, [pc, #68]	; 2660 <coda_type_empty_record+0x100>
    2618:	bl	0 <__assert_fail>
    261c:	bl	0 <__aeabi_read_tp>
    2620:	mov	r1, r0
    2624:	ldr	r2, [pc, #44]	; 2658 <coda_type_empty_record+0xf8>
    2628:	ldr	r3, [fp, #-8]
    262c:	lsl	r3, r3, #2
    2630:	add	r3, r3, r1
    2634:	add	r3, r3, r2
    2638:	ldr	r3, [r3]
    263c:	mov	r0, r3
    2640:	sub	sp, fp, #4
    2644:	pop	{fp, pc}
    2648:	.word	0x00001a48
    264c:	.word	0x000004f4
    2650:	.word	0x00000028
    2654:	.word	0x000006b8
    2658:	.word	0x00000000
    265c:	.word	0x000004f8
    2660:	.word	0x000006e0

00002664 <coda_type_record_insert_field>:
    2664:	push	{r4, fp, lr}
    2668:	add	fp, sp, #8
    266c:	sub	sp, sp, #44	; 0x2c
    2670:	str	r0, [fp, #-32]	; 0xffffffe0
    2674:	str	r1, [fp, #-36]	; 0xffffffdc
    2678:	str	r2, [fp, #-40]	; 0xffffffd8
    267c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2680:	cmp	r3, #0
    2684:	bne	26a4 <coda_type_record_insert_field+0x40>
    2688:	ldr	r3, [pc, #1704]	; 2d38 <coda_type_record_insert_field+0x6d4>
    268c:	ldr	r2, [pc, #1704]	; 2d3c <coda_type_record_insert_field+0x6d8>
    2690:	ldr	r1, [pc, #1704]	; 2d40 <coda_type_record_insert_field+0x6dc>
    2694:	mvn	r0, #99	; 0x63
    2698:	bl	0 <coda_set_error>
    269c:	mvn	r3, #0
    26a0:	b	2d2c <coda_type_record_insert_field+0x6c8>
    26a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    26a8:	cmp	r3, #0
    26ac:	bne	26cc <coda_type_record_insert_field+0x68>
    26b0:	ldr	r3, [pc, #1676]	; 2d44 <coda_type_record_insert_field+0x6e0>
    26b4:	ldr	r2, [pc, #1664]	; 2d3c <coda_type_record_insert_field+0x6d8>
    26b8:	ldr	r1, [pc, #1672]	; 2d48 <coda_type_record_insert_field+0x6e4>
    26bc:	mvn	r0, #99	; 0x63
    26c0:	bl	0 <coda_set_error>
    26c4:	mvn	r3, #0
    26c8:	b	2d2c <coda_type_record_insert_field+0x6c8>
    26cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    26d0:	ldr	r3, [r3, #8]
    26d4:	cmp	r3, #0
    26d8:	bne	26f8 <coda_type_record_insert_field+0x94>
    26dc:	ldr	r3, [pc, #1640]	; 2d4c <coda_type_record_insert_field+0x6e8>
    26e0:	ldr	r2, [pc, #1620]	; 2d3c <coda_type_record_insert_field+0x6d8>
    26e4:	ldr	r1, [pc, #1636]	; 2d50 <coda_type_record_insert_field+0x6ec>
    26e8:	mvn	r0, #99	; 0x63
    26ec:	bl	0 <coda_set_error>
    26f0:	mvn	r3, #0
    26f4:	b	2d2c <coda_type_record_insert_field+0x6c8>
    26f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    26fc:	ldr	r3, [r3, #64]	; 0x40
    2700:	cmp	r3, #0
    2704:	beq	272c <coda_type_record_insert_field+0xc8>
    2708:	ldr	r3, [fp, #-40]	; 0xffffffd8
    270c:	ldrb	r3, [r3, #16]
    2710:	cmp	r3, #0
    2714:	bne	272c <coda_type_record_insert_field+0xc8>
    2718:	ldr	r1, [pc, #1588]	; 2d54 <coda_type_record_insert_field+0x6f0>
    271c:	ldr	r0, [pc, #1588]	; 2d58 <coda_type_record_insert_field+0x6f4>
    2720:	bl	0 <coda_set_error>
    2724:	mvn	r3, #0
    2728:	b	2d2c <coda_type_record_insert_field+0x6c8>
    272c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2730:	ldr	r2, [r3]
    2734:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2738:	ldr	r3, [r3, #8]
    273c:	ldr	r3, [r3]
    2740:	cmp	r2, r3
    2744:	beq	27c0 <coda_type_record_insert_field+0x15c>
    2748:	ldr	r3, [fp, #-40]	; 0xffffffd8
    274c:	ldr	r3, [r3, #8]
    2750:	ldr	r3, [r3]
    2754:	cmp	r3, #0
    2758:	bne	277c <coda_type_record_insert_field+0x118>
    275c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2760:	ldr	r3, [r3]
    2764:	cmp	r3, #1
    2768:	beq	27c0 <coda_type_record_insert_field+0x15c>
    276c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2770:	ldr	r3, [r3]
    2774:	cmp	r3, #2
    2778:	beq	27c0 <coda_type_record_insert_field+0x15c>
    277c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2780:	ldr	r3, [r3, #8]
    2784:	ldr	r3, [r3]
    2788:	mov	r0, r3
    278c:	bl	5d7c <coda_type_get_format_name>
    2790:	mov	r4, r0
    2794:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2798:	ldr	r3, [r3]
    279c:	mov	r0, r3
    27a0:	bl	5d7c <coda_type_get_format_name>
    27a4:	mov	r3, r0
    27a8:	mov	r2, r4
    27ac:	ldr	r1, [pc, #1448]	; 2d5c <coda_type_record_insert_field+0x6f8>
    27b0:	ldr	r0, [pc, #1440]	; 2d58 <coda_type_record_insert_field+0x6f4>
    27b4:	bl	0 <coda_set_error>
    27b8:	mvn	r3, #0
    27bc:	b	2d2c <coda_type_record_insert_field+0x6c8>
    27c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    27c4:	ldr	r3, [r3, #48]	; 0x30
    27c8:	and	r3, r3, #15
    27cc:	cmp	r3, #0
    27d0:	bne	2844 <coda_type_record_insert_field+0x1e0>
    27d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    27d8:	ldr	r2, [r3, #52]	; 0x34
    27dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    27e0:	ldr	r3, [r3, #48]	; 0x30
    27e4:	add	r3, r3, #16
    27e8:	lsl	r3, r3, #2
    27ec:	mov	r1, r3
    27f0:	mov	r0, r2
    27f4:	bl	0 <realloc>
    27f8:	str	r0, [fp, #-20]	; 0xffffffec
    27fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    2800:	cmp	r3, #0
    2804:	bne	2838 <coda_type_record_insert_field+0x1d4>
    2808:	ldr	r3, [fp, #-32]	; 0xffffffe0
    280c:	ldr	r3, [r3, #48]	; 0x30
    2810:	add	r3, r3, #16
    2814:	lsl	r2, r3, #2
    2818:	ldr	r3, [pc, #1344]	; 2d60 <coda_type_record_insert_field+0x6fc>
    281c:	str	r3, [sp]
    2820:	ldr	r3, [pc, #1300]	; 2d3c <coda_type_record_insert_field+0x6d8>
    2824:	ldr	r1, [pc, #1336]	; 2d64 <coda_type_record_insert_field+0x700>
    2828:	mvn	r0, #0
    282c:	bl	0 <coda_set_error>
    2830:	mvn	r3, #0
    2834:	b	2d2c <coda_type_record_insert_field+0x6c8>
    2838:	ldr	r3, [fp, #-32]	; 0xffffffe0
    283c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2840:	str	r2, [r3, #52]	; 0x34
    2844:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2848:	ldr	r0, [r3, #40]	; 0x28
    284c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2850:	ldr	r3, [r3]
    2854:	mov	r2, r3
    2858:	ldr	r1, [fp, #-36]	; 0xffffffdc
    285c:	bl	0 <coda_hashtable_insert_name>
    2860:	mov	r3, r0
    2864:	cmp	r3, #0
    2868:	beq	288c <coda_type_record_insert_field+0x228>
    286c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2870:	ldr	r3, [r3]
    2874:	mov	r2, r3
    2878:	ldr	r1, [pc, #1256]	; 2d68 <coda_type_record_insert_field+0x704>
    287c:	ldr	r0, [pc, #1236]	; 2d58 <coda_type_record_insert_field+0x6f4>
    2880:	bl	0 <coda_set_error>
    2884:	mvn	r3, #0
    2888:	b	2d2c <coda_type_record_insert_field+0x6c8>
    288c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2890:	ldr	r3, [r3, #4]
    2894:	cmp	r3, #0
    2898:	beq	28a8 <coda_type_record_insert_field+0x244>
    289c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    28a0:	ldr	r3, [r3, #4]
    28a4:	b	28b0 <coda_type_record_insert_field+0x24c>
    28a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    28ac:	ldr	r3, [r3]
    28b0:	str	r3, [fp, #-24]	; 0xffffffe8
    28b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    28b8:	ldr	r3, [r3, #44]	; 0x2c
    28bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    28c0:	mov	r0, r3
    28c4:	bl	0 <coda_hashtable_get_index_from_name>
    28c8:	mov	r3, r0
    28cc:	cmp	r3, #0
    28d0:	bge	28ec <coda_type_record_insert_field+0x288>
    28d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    28d8:	ldr	r3, [r3, #44]	; 0x2c
    28dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    28e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    28e4:	mov	r0, r3
    28e8:	bl	0 <coda_hashtable_insert_name>
    28ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    28f0:	ldr	r2, [r3, #48]	; 0x30
    28f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    28f8:	cmp	r2, r3
    28fc:	ble	2960 <coda_type_record_insert_field+0x2fc>
    2900:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2904:	ldr	r3, [r3, #48]	; 0x30
    2908:	str	r3, [fp, #-16]
    290c:	b	2950 <coda_type_record_insert_field+0x2ec>
    2910:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2914:	ldr	r2, [r3, #52]	; 0x34
    2918:	ldr	r3, [fp, #-16]
    291c:	lsl	r3, r3, #2
    2920:	add	r3, r2, r3
    2924:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2928:	ldr	r1, [r2, #52]	; 0x34
    292c:	ldr	r2, [fp, #-16]
    2930:	sub	r2, r2, #-1073741823	; 0xc0000001
    2934:	lsl	r2, r2, #2
    2938:	add	r2, r1, r2
    293c:	ldr	r2, [r2]
    2940:	str	r2, [r3]
    2944:	ldr	r3, [fp, #-16]
    2948:	sub	r3, r3, #1
    294c:	str	r3, [fp, #-16]
    2950:	ldr	r2, [fp, #-16]
    2954:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2958:	cmp	r2, r3
    295c:	bgt	2910 <coda_type_record_insert_field+0x2ac>
    2960:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2964:	ldr	r3, [r3, #48]	; 0x30
    2968:	add	r2, r3, #1
    296c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2970:	str	r2, [r3, #48]	; 0x30
    2974:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2978:	ldr	r2, [r3, #52]	; 0x34
    297c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2980:	lsl	r3, r3, #2
    2984:	add	r3, r2, r3
    2988:	ldr	r2, [fp, #-40]	; 0xffffffd8
    298c:	str	r2, [r3]
    2990:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2994:	ldr	r3, [r3]
    2998:	cmp	r3, #0
    299c:	beq	29b0 <coda_type_record_insert_field+0x34c>
    29a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    29a4:	ldr	r3, [r3]
    29a8:	cmp	r3, #1
    29ac:	bne	2d28 <coda_type_record_insert_field+0x6c4>
    29b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    29b4:	ldr	r3, [r3, #64]	; 0x40
    29b8:	cmp	r3, #0
    29bc:	beq	2a50 <coda_type_record_insert_field+0x3ec>
    29c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    29c4:	ldr	r3, [r3, #32]
    29c8:	cmp	r3, #0
    29cc:	beq	29e4 <coda_type_record_insert_field+0x380>
    29d0:	ldr	r1, [pc, #916]	; 2d6c <coda_type_record_insert_field+0x708>
    29d4:	ldr	r0, [pc, #892]	; 2d58 <coda_type_record_insert_field+0x6f4>
    29d8:	bl	0 <coda_set_error>
    29dc:	mvn	r3, #0
    29e0:	b	2d2c <coda_type_record_insert_field+0x6c8>
    29e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    29e8:	mov	r2, #0
    29ec:	mov	r3, #0
    29f0:	strd	r2, [r1, #24]
    29f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    29f8:	ldr	r3, [r3, #48]	; 0x30
    29fc:	cmp	r3, #1
    2a00:	bne	2a1c <coda_type_record_insert_field+0x3b8>
    2a04:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2a08:	ldr	r3, [r3, #8]
    2a0c:	ldrd	r2, [r3, #24]
    2a10:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2a14:	strd	r2, [r1, #24]
    2a18:	b	2d28 <coda_type_record_insert_field+0x6c4>
    2a1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2a20:	ldrd	r0, [r3, #24]
    2a24:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2a28:	ldr	r3, [r3, #8]
    2a2c:	ldrd	r2, [r3, #24]
    2a30:	cmp	r1, r3
    2a34:	cmpeq	r0, r2
    2a38:	beq	2d28 <coda_type_record_insert_field+0x6c4>
    2a3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2a40:	mvn	r2, #0
    2a44:	mvn	r3, #0
    2a48:	strd	r2, [r1, #24]
    2a4c:	b	2d28 <coda_type_record_insert_field+0x6c4>
    2a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2a54:	ldr	r3, [r3, #32]
    2a58:	cmp	r3, #0
    2a5c:	bne	2b58 <coda_type_record_insert_field+0x4f4>
    2a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2a64:	cmp	r3, #0
    2a68:	bne	2a80 <coda_type_record_insert_field+0x41c>
    2a6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2a70:	mov	r2, #0
    2a74:	mov	r3, #0
    2a78:	strd	r2, [r1, #24]
    2a7c:	b	2b58 <coda_type_record_insert_field+0x4f4>
    2a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2a84:	ldr	r2, [r3, #52]	; 0x34
    2a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2a8c:	sub	r3, r3, #-1073741823	; 0xc0000001
    2a90:	lsl	r3, r3, #2
    2a94:	add	r3, r2, r3
    2a98:	ldr	r3, [r3]
    2a9c:	ldrd	r2, [r3, #24]
    2aa0:	cmp	r2, #0
    2aa4:	sbcs	r3, r3, #0
    2aa8:	blt	2b58 <coda_type_record_insert_field+0x4f4>
    2aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2ab0:	ldr	r2, [r3, #52]	; 0x34
    2ab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ab8:	sub	r3, r3, #-1073741823	; 0xc0000001
    2abc:	lsl	r3, r3, #2
    2ac0:	add	r3, r2, r3
    2ac4:	ldr	r3, [r3]
    2ac8:	ldr	r3, [r3, #8]
    2acc:	ldrd	r2, [r3, #24]
    2ad0:	cmp	r2, #0
    2ad4:	sbcs	r3, r3, #0
    2ad8:	blt	2b58 <coda_type_record_insert_field+0x4f4>
    2adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2ae0:	ldr	r2, [r3, #52]	; 0x34
    2ae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ae8:	sub	r3, r3, #-1073741823	; 0xc0000001
    2aec:	lsl	r3, r3, #2
    2af0:	add	r3, r2, r3
    2af4:	ldr	r3, [r3]
    2af8:	ldrb	r3, [r3, #16]
    2afc:	cmp	r3, #0
    2b00:	bne	2b58 <coda_type_record_insert_field+0x4f4>
    2b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b08:	ldr	r2, [r3, #52]	; 0x34
    2b0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2b10:	sub	r3, r3, #-1073741823	; 0xc0000001
    2b14:	lsl	r3, r3, #2
    2b18:	add	r3, r2, r3
    2b1c:	ldr	r3, [r3]
    2b20:	ldrd	r0, [r3, #24]
    2b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b28:	ldr	r2, [r3, #52]	; 0x34
    2b2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2b30:	sub	r3, r3, #-1073741823	; 0xc0000001
    2b34:	lsl	r3, r3, #2
    2b38:	add	r3, r2, r3
    2b3c:	ldr	r3, [r3]
    2b40:	ldr	r3, [r3, #8]
    2b44:	ldrd	r2, [r3, #24]
    2b48:	adds	r2, r2, r0
    2b4c:	adc	r3, r3, r1
    2b50:	ldr	r1, [fp, #-40]	; 0xffffffd8
    2b54:	strd	r2, [r1, #24]
    2b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2b5c:	add	r3, r3, #1
    2b60:	str	r3, [fp, #-16]
    2b64:	b	2c84 <coda_type_record_insert_field+0x620>
    2b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b6c:	ldr	r2, [r3, #52]	; 0x34
    2b70:	ldr	r3, [fp, #-16]
    2b74:	lsl	r3, r3, #2
    2b78:	add	r3, r2, r3
    2b7c:	ldr	r3, [r3]
    2b80:	ldr	r3, [r3, #32]
    2b84:	cmp	r3, #0
    2b88:	bne	2c78 <coda_type_record_insert_field+0x614>
    2b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2b90:	ldr	r2, [r3, #52]	; 0x34
    2b94:	ldr	r3, [fp, #-16]
    2b98:	sub	r3, r3, #-1073741823	; 0xc0000001
    2b9c:	lsl	r3, r3, #2
    2ba0:	add	r3, r2, r3
    2ba4:	ldr	r3, [r3]
    2ba8:	ldrd	r2, [r3, #24]
    2bac:	cmp	r2, #0
    2bb0:	sbcs	r3, r3, #0
    2bb4:	blt	2c78 <coda_type_record_insert_field+0x614>
    2bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2bbc:	ldr	r2, [r3, #52]	; 0x34
    2bc0:	ldr	r3, [fp, #-16]
    2bc4:	sub	r3, r3, #-1073741823	; 0xc0000001
    2bc8:	lsl	r3, r3, #2
    2bcc:	add	r3, r2, r3
    2bd0:	ldr	r3, [r3]
    2bd4:	ldr	r3, [r3, #8]
    2bd8:	ldrd	r2, [r3, #24]
    2bdc:	cmp	r2, #0
    2be0:	sbcs	r3, r3, #0
    2be4:	blt	2c78 <coda_type_record_insert_field+0x614>
    2be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2bec:	ldr	r2, [r3, #52]	; 0x34
    2bf0:	ldr	r3, [fp, #-16]
    2bf4:	sub	r3, r3, #-1073741823	; 0xc0000001
    2bf8:	lsl	r3, r3, #2
    2bfc:	add	r3, r2, r3
    2c00:	ldr	r3, [r3]
    2c04:	ldrb	r3, [r3, #16]
    2c08:	cmp	r3, #0
    2c0c:	bne	2c78 <coda_type_record_insert_field+0x614>
    2c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c14:	ldr	r2, [r3, #52]	; 0x34
    2c18:	ldr	r3, [fp, #-16]
    2c1c:	lsl	r3, r3, #2
    2c20:	add	r3, r2, r3
    2c24:	ldr	ip, [r3]
    2c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c2c:	ldr	r2, [r3, #52]	; 0x34
    2c30:	ldr	r3, [fp, #-16]
    2c34:	sub	r3, r3, #-1073741823	; 0xc0000001
    2c38:	lsl	r3, r3, #2
    2c3c:	add	r3, r2, r3
    2c40:	ldr	r3, [r3]
    2c44:	ldrd	r0, [r3, #24]
    2c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c4c:	ldr	r2, [r3, #52]	; 0x34
    2c50:	ldr	r3, [fp, #-16]
    2c54:	sub	r3, r3, #-1073741823	; 0xc0000001
    2c58:	lsl	r3, r3, #2
    2c5c:	add	r3, r2, r3
    2c60:	ldr	r3, [r3]
    2c64:	ldr	r3, [r3, #8]
    2c68:	ldrd	r2, [r3, #24]
    2c6c:	adds	r2, r2, r0
    2c70:	adc	r3, r3, r1
    2c74:	strd	r2, [ip, #24]
    2c78:	ldr	r3, [fp, #-16]
    2c7c:	add	r3, r3, #1
    2c80:	str	r3, [fp, #-16]
    2c84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c88:	ldr	r2, [r3, #48]	; 0x30
    2c8c:	ldr	r3, [fp, #-16]
    2c90:	cmp	r2, r3
    2c94:	bgt	2b68 <coda_type_record_insert_field+0x504>
    2c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2c9c:	ldrd	r2, [r3, #24]
    2ca0:	cmp	r2, #0
    2ca4:	sbcs	r3, r3, #0
    2ca8:	blt	2d28 <coda_type_record_insert_field+0x6c4>
    2cac:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2cb0:	ldr	r3, [r3, #8]
    2cb4:	ldrd	r2, [r3, #24]
    2cb8:	cmp	r2, #0
    2cbc:	sbcs	r3, r3, #0
    2cc0:	blt	2d18 <coda_type_record_insert_field+0x6b4>
    2cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2cc8:	ldr	r2, [r3, #52]	; 0x34
    2ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2cd0:	ldr	r3, [r3, #48]	; 0x30
    2cd4:	sub	r3, r3, #-1073741823	; 0xc0000001
    2cd8:	lsl	r3, r3, #2
    2cdc:	add	r3, r2, r3
    2ce0:	ldr	r3, [r3]
    2ce4:	ldrb	r3, [r3, #16]
    2ce8:	cmp	r3, #0
    2cec:	bne	2d18 <coda_type_record_insert_field+0x6b4>
    2cf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2cf4:	ldrd	r0, [r3, #24]
    2cf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    2cfc:	ldr	r3, [r3, #8]
    2d00:	ldrd	r2, [r3, #24]
    2d04:	adds	r2, r2, r0
    2d08:	adc	r3, r3, r1
    2d0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2d10:	strd	r2, [r1, #24]
    2d14:	b	2d28 <coda_type_record_insert_field+0x6c4>
    2d18:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2d1c:	mvn	r2, #0
    2d20:	mvn	r3, #0
    2d24:	strd	r2, [r1, #24]
    2d28:	mov	r3, #0
    2d2c:	mov	r0, r3
    2d30:	sub	sp, fp, #8
    2d34:	pop	{r4, fp, pc}
    2d38:	.word	0x00000505
    2d3c:	.word	0x00000028
    2d40:	.word	0x000001f0
    2d44:	.word	0x0000050a
    2d48:	.word	0x000004f0
    2d4c:	.word	0x0000050f
    2d50:	.word	0x00000708
    2d54:	.word	0x00000730
    2d58:	.word	0xfffffe70
    2d5c:	.word	0x0000075c
    2d60:	.word	0x0000052e
    2d64:	.word	0x00000070
    2d68:	.word	0x00000798
    2d6c:	.word	0x000007cc

00002d70 <coda_type_record_add_field>:
    2d70:	push	{fp, lr}
    2d74:	add	fp, sp, #4
    2d78:	sub	sp, sp, #8
    2d7c:	str	r0, [fp, #-8]
    2d80:	str	r1, [fp, #-12]
    2d84:	ldr	r3, [fp, #-8]
    2d88:	cmp	r3, #0
    2d8c:	bne	2dac <coda_type_record_add_field+0x3c>
    2d90:	mov	r3, #1424	; 0x590
    2d94:	ldr	r2, [pc, #56]	; 2dd4 <coda_type_record_add_field+0x64>
    2d98:	ldr	r1, [pc, #56]	; 2dd8 <coda_type_record_add_field+0x68>
    2d9c:	mvn	r0, #99	; 0x63
    2da0:	bl	0 <coda_set_error>
    2da4:	mvn	r3, #0
    2da8:	b	2dc8 <coda_type_record_add_field+0x58>
    2dac:	ldr	r3, [fp, #-8]
    2db0:	ldr	r3, [r3, #48]	; 0x30
    2db4:	ldr	r2, [fp, #-12]
    2db8:	mov	r1, r3
    2dbc:	ldr	r0, [fp, #-8]
    2dc0:	bl	2664 <coda_type_record_insert_field>
    2dc4:	mov	r3, r0
    2dc8:	mov	r0, r3
    2dcc:	sub	sp, fp, #4
    2dd0:	pop	{fp, pc}
    2dd4:	.word	0x00000028
    2dd8:	.word	0x000001f0

00002ddc <coda_type_record_create_field>:
    2ddc:	push	{fp, lr}
    2de0:	add	fp, sp, #4
    2de4:	sub	sp, sp, #24
    2de8:	str	r0, [fp, #-16]
    2dec:	str	r1, [fp, #-20]	; 0xffffffec
    2df0:	str	r2, [fp, #-24]	; 0xffffffe8
    2df4:	ldr	r3, [fp, #-16]
    2df8:	cmp	r3, #0
    2dfc:	bne	2e1c <coda_type_record_create_field+0x40>
    2e00:	ldr	r3, [pc, #352]	; 2f68 <coda_type_record_create_field+0x18c>
    2e04:	ldr	r2, [pc, #352]	; 2f6c <coda_type_record_create_field+0x190>
    2e08:	ldr	r1, [pc, #352]	; 2f70 <coda_type_record_create_field+0x194>
    2e0c:	mvn	r0, #99	; 0x63
    2e10:	bl	0 <coda_set_error>
    2e14:	mvn	r3, #0
    2e18:	b	2f5c <coda_type_record_create_field+0x180>
    2e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2e20:	cmp	r3, #0
    2e24:	bne	2e44 <coda_type_record_create_field+0x68>
    2e28:	ldr	r3, [pc, #324]	; 2f74 <coda_type_record_create_field+0x198>
    2e2c:	ldr	r2, [pc, #312]	; 2f6c <coda_type_record_create_field+0x190>
    2e30:	ldr	r1, [pc, #320]	; 2f78 <coda_type_record_create_field+0x19c>
    2e34:	mvn	r0, #99	; 0x63
    2e38:	bl	0 <coda_set_error>
    2e3c:	mvn	r3, #0
    2e40:	b	2f5c <coda_type_record_create_field+0x180>
    2e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e48:	cmp	r3, #0
    2e4c:	bne	2e6c <coda_type_record_create_field+0x90>
    2e50:	ldr	r3, [pc, #292]	; 2f7c <coda_type_record_create_field+0x1a0>
    2e54:	ldr	r2, [pc, #272]	; 2f6c <coda_type_record_create_field+0x190>
    2e58:	ldr	r1, [pc, #288]	; 2f80 <coda_type_record_create_field+0x1a4>
    2e5c:	mvn	r0, #99	; 0x63
    2e60:	bl	0 <coda_set_error>
    2e64:	mvn	r3, #0
    2e68:	b	2f5c <coda_type_record_create_field+0x180>
    2e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e70:	ldr	r0, [fp, #-16]
    2e74:	bl	327c <coda_type_record_get_unique_field_name>
    2e78:	str	r0, [fp, #-8]
    2e7c:	ldr	r3, [fp, #-8]
    2e80:	cmp	r3, #0
    2e84:	bne	2e90 <coda_type_record_create_field+0xb4>
    2e88:	mvn	r3, #0
    2e8c:	b	2f5c <coda_type_record_create_field+0x180>
    2e90:	ldr	r0, [fp, #-8]
    2e94:	bl	1c5c <coda_type_record_field_new>
    2e98:	str	r0, [fp, #-12]
    2e9c:	ldr	r3, [fp, #-12]
    2ea0:	cmp	r3, #0
    2ea4:	bne	2eb8 <coda_type_record_create_field+0xdc>
    2ea8:	ldr	r0, [fp, #-8]
    2eac:	bl	0 <free>
    2eb0:	mvn	r3, #0
    2eb4:	b	2f5c <coda_type_record_create_field+0x180>
    2eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ebc:	ldr	r0, [fp, #-8]
    2ec0:	bl	0 <strcmp>
    2ec4:	mov	r3, r0
    2ec8:	cmp	r3, #0
    2ecc:	beq	2f00 <coda_type_record_create_field+0x124>
    2ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ed4:	ldr	r0, [fp, #-12]
    2ed8:	bl	1de4 <coda_type_record_field_set_real_name>
    2edc:	mov	r3, r0
    2ee0:	cmp	r3, #0
    2ee4:	beq	2f00 <coda_type_record_create_field+0x124>
    2ee8:	ldr	r0, [fp, #-12]
    2eec:	bl	9e0 <coda_type_record_field_delete>
    2ef0:	ldr	r0, [fp, #-8]
    2ef4:	bl	0 <free>
    2ef8:	mvn	r3, #0
    2efc:	b	2f5c <coda_type_record_create_field+0x180>
    2f00:	ldr	r0, [fp, #-8]
    2f04:	bl	0 <free>
    2f08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f0c:	ldr	r0, [fp, #-12]
    2f10:	bl	1ee4 <coda_type_record_field_set_type>
    2f14:	mov	r3, r0
    2f18:	cmp	r3, #0
    2f1c:	beq	2f30 <coda_type_record_create_field+0x154>
    2f20:	ldr	r0, [fp, #-12]
    2f24:	bl	9e0 <coda_type_record_field_delete>
    2f28:	mvn	r3, #0
    2f2c:	b	2f5c <coda_type_record_create_field+0x180>
    2f30:	ldr	r1, [fp, #-12]
    2f34:	ldr	r0, [fp, #-16]
    2f38:	bl	2d70 <coda_type_record_add_field>
    2f3c:	mov	r3, r0
    2f40:	cmp	r3, #0
    2f44:	beq	2f58 <coda_type_record_create_field+0x17c>
    2f48:	ldr	r0, [fp, #-12]
    2f4c:	bl	9e0 <coda_type_record_field_delete>
    2f50:	mvn	r3, #0
    2f54:	b	2f5c <coda_type_record_create_field+0x180>
    2f58:	mov	r3, #0
    2f5c:	mov	r0, r3
    2f60:	sub	sp, fp, #4
    2f64:	pop	{fp, pc}
    2f68:	.word	0x0000059d
    2f6c:	.word	0x00000028
    2f70:	.word	0x000001f0
    2f74:	.word	0x000005a2
    2f78:	.word	0x00000510
    2f7c:	.word	0x000005a7
    2f80:	.word	0x00000800

00002f84 <coda_type_union_set_field_expression>:
    2f84:	push	{fp, lr}
    2f88:	add	fp, sp, #4
    2f8c:	sub	sp, sp, #16
    2f90:	str	r0, [fp, #-16]
    2f94:	str	r1, [fp, #-20]	; 0xffffffec
    2f98:	ldr	r3, [fp, #-16]
    2f9c:	cmp	r3, #0
    2fa0:	bne	2fc0 <coda_type_union_set_field_expression+0x3c>
    2fa4:	ldr	r3, [pc, #468]	; 3180 <coda_type_union_set_field_expression+0x1fc>
    2fa8:	ldr	r2, [pc, #468]	; 3184 <coda_type_union_set_field_expression+0x200>
    2fac:	ldr	r1, [pc, #468]	; 3188 <coda_type_union_set_field_expression+0x204>
    2fb0:	mvn	r0, #99	; 0x63
    2fb4:	bl	0 <coda_set_error>
    2fb8:	mvn	r3, #0
    2fbc:	b	3174 <coda_type_union_set_field_expression+0x1f0>
    2fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2fc4:	cmp	r3, #0
    2fc8:	bne	2fe8 <coda_type_union_set_field_expression+0x64>
    2fcc:	ldr	r3, [pc, #440]	; 318c <coda_type_union_set_field_expression+0x208>
    2fd0:	ldr	r2, [pc, #428]	; 3184 <coda_type_union_set_field_expression+0x200>
    2fd4:	ldr	r1, [pc, #436]	; 3190 <coda_type_union_set_field_expression+0x20c>
    2fd8:	mvn	r0, #99	; 0x63
    2fdc:	bl	0 <coda_set_error>
    2fe0:	mvn	r3, #0
    2fe4:	b	3174 <coda_type_union_set_field_expression+0x1f0>
    2fe8:	ldr	r3, [fp, #-16]
    2fec:	ldr	r3, [r3, #64]	; 0x40
    2ff0:	cmp	r3, #0
    2ff4:	bne	300c <coda_type_union_set_field_expression+0x88>
    2ff8:	ldr	r1, [pc, #404]	; 3194 <coda_type_union_set_field_expression+0x210>
    2ffc:	ldr	r0, [pc, #404]	; 3198 <coda_type_union_set_field_expression+0x214>
    3000:	bl	0 <coda_set_error>
    3004:	mvn	r3, #0
    3008:	b	3174 <coda_type_union_set_field_expression+0x1f0>
    300c:	ldr	r3, [fp, #-16]
    3010:	ldr	r3, [r3, #68]	; 0x44
    3014:	cmp	r3, #0
    3018:	beq	3030 <coda_type_union_set_field_expression+0xac>
    301c:	ldr	r1, [pc, #376]	; 319c <coda_type_union_set_field_expression+0x218>
    3020:	ldr	r0, [pc, #368]	; 3198 <coda_type_union_set_field_expression+0x214>
    3024:	bl	0 <coda_set_error>
    3028:	mvn	r3, #0
    302c:	b	3174 <coda_type_union_set_field_expression+0x1f0>
    3030:	ldr	r3, [fp, #-16]
    3034:	ldr	r2, [fp, #-20]	; 0xffffffec
    3038:	str	r2, [r3, #68]	; 0x44
    303c:	ldr	r3, [fp, #-16]
    3040:	ldr	r3, [r3, #48]	; 0x30
    3044:	cmp	r3, #0
    3048:	ble	3170 <coda_type_union_set_field_expression+0x1ec>
    304c:	mov	r3, #0
    3050:	str	r3, [fp, #-8]
    3054:	b	315c <coda_type_union_set_field_expression+0x1d8>
    3058:	ldr	r3, [fp, #-16]
    305c:	ldr	r2, [r3, #52]	; 0x34
    3060:	ldr	r3, [fp, #-8]
    3064:	lsl	r3, r3, #2
    3068:	add	r3, r2, r3
    306c:	ldr	r3, [r3]
    3070:	ldr	r3, [r3, #32]
    3074:	cmp	r3, #0
    3078:	beq	30b0 <coda_type_union_set_field_expression+0x12c>
    307c:	ldr	r3, [fp, #-16]
    3080:	ldr	r2, [r3, #52]	; 0x34
    3084:	ldr	r3, [fp, #-8]
    3088:	lsl	r3, r3, #2
    308c:	add	r3, r2, r3
    3090:	ldr	r3, [r3]
    3094:	ldr	r3, [r3]
    3098:	mov	r2, r3
    309c:	ldr	r1, [pc, #252]	; 31a0 <coda_type_union_set_field_expression+0x21c>
    30a0:	ldr	r0, [pc, #240]	; 3198 <coda_type_union_set_field_expression+0x214>
    30a4:	bl	0 <coda_set_error>
    30a8:	mvn	r3, #0
    30ac:	b	3174 <coda_type_union_set_field_expression+0x1f0>
    30b0:	ldr	r3, [fp, #-16]
    30b4:	ldr	r2, [r3, #52]	; 0x34
    30b8:	ldr	r3, [fp, #-8]
    30bc:	lsl	r3, r3, #2
    30c0:	add	r3, r2, r3
    30c4:	ldr	r1, [r3]
    30c8:	mov	r2, #0
    30cc:	mov	r3, #0
    30d0:	strd	r2, [r1, #24]
    30d4:	ldr	r3, [fp, #-8]
    30d8:	cmp	r3, #0
    30dc:	bne	310c <coda_type_union_set_field_expression+0x188>
    30e0:	ldr	r3, [fp, #-16]
    30e4:	ldr	r2, [r3, #52]	; 0x34
    30e8:	ldr	r3, [fp, #-8]
    30ec:	lsl	r3, r3, #2
    30f0:	add	r3, r2, r3
    30f4:	ldr	r3, [r3]
    30f8:	ldr	r3, [r3, #8]
    30fc:	ldrd	r2, [r3, #24]
    3100:	ldr	r1, [fp, #-16]
    3104:	strd	r2, [r1, #24]
    3108:	b	3150 <coda_type_union_set_field_expression+0x1cc>
    310c:	ldr	r3, [fp, #-16]
    3110:	ldrd	r0, [r3, #24]
    3114:	ldr	r3, [fp, #-16]
    3118:	ldr	r2, [r3, #52]	; 0x34
    311c:	ldr	r3, [fp, #-8]
    3120:	lsl	r3, r3, #2
    3124:	add	r3, r2, r3
    3128:	ldr	r3, [r3]
    312c:	ldr	r3, [r3, #8]
    3130:	ldrd	r2, [r3, #24]
    3134:	cmp	r1, r3
    3138:	cmpeq	r0, r2
    313c:	beq	3150 <coda_type_union_set_field_expression+0x1cc>
    3140:	ldr	r1, [fp, #-16]
    3144:	mvn	r2, #0
    3148:	mvn	r3, #0
    314c:	strd	r2, [r1, #24]
    3150:	ldr	r3, [fp, #-8]
    3154:	add	r3, r3, #1
    3158:	str	r3, [fp, #-8]
    315c:	ldr	r3, [fp, #-16]
    3160:	ldr	r2, [r3, #48]	; 0x30
    3164:	ldr	r3, [fp, #-8]
    3168:	cmp	r2, r3
    316c:	bgt	3058 <coda_type_union_set_field_expression+0xd4>
    3170:	mov	r3, #0
    3174:	mov	r0, r3
    3178:	sub	sp, fp, #4
    317c:	pop	{fp, pc}
    3180:	.word	0x000005d2
    3184:	.word	0x00000028
    3188:	.word	0x000001f0
    318c:	.word	0x000005d7
    3190:	.word	0x00000824
    3194:	.word	0x00000848
    3198:	.word	0xfffffe70
    319c:	.word	0x00000864
    31a0:	.word	0x00000898

000031a4 <coda_type_record_validate>:
    31a4:	push	{fp, lr}
    31a8:	add	fp, sp, #4
    31ac:	sub	sp, sp, #8
    31b0:	str	r0, [fp, #-8]
    31b4:	ldr	r3, [fp, #-8]
    31b8:	cmp	r3, #0
    31bc:	bne	31dc <coda_type_record_validate+0x38>
    31c0:	ldr	r3, [pc, #156]	; 3264 <coda_type_record_validate+0xc0>
    31c4:	ldr	r2, [pc, #156]	; 3268 <coda_type_record_validate+0xc4>
    31c8:	ldr	r1, [pc, #156]	; 326c <coda_type_record_validate+0xc8>
    31cc:	mvn	r0, #99	; 0x63
    31d0:	bl	0 <coda_set_error>
    31d4:	mvn	r3, #0
    31d8:	b	3258 <coda_type_record_validate+0xb4>
    31dc:	ldr	r3, [fp, #-8]
    31e0:	ldr	r3, [r3, #64]	; 0x40
    31e4:	cmp	r3, #0
    31e8:	beq	3254 <coda_type_record_validate+0xb0>
    31ec:	ldr	r3, [fp, #-8]
    31f0:	ldr	r3, [r3, #48]	; 0x30
    31f4:	cmp	r3, #0
    31f8:	bne	3210 <coda_type_record_validate+0x6c>
    31fc:	ldr	r1, [pc, #108]	; 3270 <coda_type_record_validate+0xcc>
    3200:	ldr	r0, [pc, #108]	; 3274 <coda_type_record_validate+0xd0>
    3204:	bl	0 <coda_set_error>
    3208:	mvn	r3, #0
    320c:	b	3258 <coda_type_record_validate+0xb4>
    3210:	ldr	r3, [fp, #-8]
    3214:	ldr	r3, [r3]
    3218:	cmp	r3, #0
    321c:	beq	3230 <coda_type_record_validate+0x8c>
    3220:	ldr	r3, [fp, #-8]
    3224:	ldr	r3, [r3]
    3228:	cmp	r3, #1
    322c:	bne	3254 <coda_type_record_validate+0xb0>
    3230:	ldr	r3, [fp, #-8]
    3234:	ldr	r3, [r3, #68]	; 0x44
    3238:	cmp	r3, #0
    323c:	bne	3254 <coda_type_record_validate+0xb0>
    3240:	ldr	r1, [pc, #48]	; 3278 <coda_type_record_validate+0xd4>
    3244:	ldr	r0, [pc, #40]	; 3274 <coda_type_record_validate+0xd0>
    3248:	bl	0 <coda_set_error>
    324c:	mvn	r3, #0
    3250:	b	3258 <coda_type_record_validate+0xb4>
    3254:	mov	r3, #0
    3258:	mov	r0, r3
    325c:	sub	sp, fp, #4
    3260:	pop	{fp, pc}
    3264:	.word	0x00000606
    3268:	.word	0x00000028
    326c:	.word	0x000001f0
    3270:	.word	0x000008d0
    3274:	.word	0xfffffe70
    3278:	.word	0x00000900

0000327c <coda_type_record_get_unique_field_name>:
    327c:	push	{fp, lr}
    3280:	add	fp, sp, #4
    3284:	sub	sp, sp, #8
    3288:	str	r0, [fp, #-8]
    328c:	str	r1, [fp, #-12]
    3290:	ldr	r3, [fp, #-8]
    3294:	ldr	r3, [r3]
    3298:	cmp	r3, #2
    329c:	bne	32ac <coda_type_record_get_unique_field_name+0x30>
    32a0:	ldr	r0, [fp, #-12]
    32a4:	bl	0 <coda_element_name_from_xml_name>
    32a8:	str	r0, [fp, #-12]
    32ac:	ldr	r3, [fp, #-8]
    32b0:	ldr	r3, [r3, #40]	; 0x28
    32b4:	mov	r1, r3
    32b8:	ldr	r0, [fp, #-12]
    32bc:	bl	0 <coda_identifier_from_name>
    32c0:	mov	r3, r0
    32c4:	mov	r0, r3
    32c8:	sub	sp, fp, #4
    32cc:	pop	{fp, pc}

000032d0 <coda_type_array_new>:
    32d0:	push	{fp, lr}
    32d4:	add	fp, sp, #4
    32d8:	sub	sp, sp, #24
    32dc:	str	r0, [fp, #-16]
    32e0:	mov	r0, #120	; 0x78
    32e4:	bl	0 <malloc>
    32e8:	mov	r3, r0
    32ec:	str	r3, [fp, #-8]
    32f0:	ldr	r3, [fp, #-8]
    32f4:	cmp	r3, #0
    32f8:	bne	3320 <coda_type_array_new+0x50>
    32fc:	ldr	r3, [pc, #232]	; 33ec <coda_type_array_new+0x11c>
    3300:	str	r3, [sp]
    3304:	ldr	r3, [pc, #228]	; 33f0 <coda_type_array_new+0x120>
    3308:	mov	r2, #120	; 0x78
    330c:	ldr	r1, [pc, #224]	; 33f4 <coda_type_array_new+0x124>
    3310:	mvn	r0, #0
    3314:	bl	0 <coda_set_error>
    3318:	mov	r3, #0
    331c:	b	33e0 <coda_type_array_new+0x110>
    3320:	ldr	r3, [fp, #-8]
    3324:	ldr	r2, [fp, #-16]
    3328:	str	r2, [r3]
    332c:	ldr	r3, [fp, #-8]
    3330:	mov	r2, #0
    3334:	str	r2, [r3, #4]
    3338:	ldr	r3, [fp, #-8]
    333c:	mov	r2, #1
    3340:	str	r2, [r3, #8]
    3344:	ldr	r3, [fp, #-16]
    3348:	cmp	r3, #0
    334c:	beq	335c <coda_type_array_new+0x8c>
    3350:	ldr	r3, [fp, #-16]
    3354:	cmp	r3, #1
    3358:	bne	336c <coda_type_array_new+0x9c>
    335c:	ldr	r3, [fp, #-8]
    3360:	mov	r2, #12
    3364:	str	r2, [r3, #12]
    3368:	b	3378 <coda_type_array_new+0xa8>
    336c:	ldr	r3, [fp, #-8]
    3370:	mvn	r2, #0
    3374:	str	r2, [r3, #12]
    3378:	ldr	r3, [fp, #-8]
    337c:	mov	r2, #0
    3380:	str	r2, [r3, #16]
    3384:	ldr	r3, [fp, #-8]
    3388:	mov	r2, #0
    338c:	str	r2, [r3, #20]
    3390:	ldr	r1, [fp, #-8]
    3394:	mvn	r2, #0
    3398:	mvn	r3, #0
    339c:	strd	r2, [r1, #24]
    33a0:	ldr	r3, [fp, #-8]
    33a4:	mov	r2, #0
    33a8:	str	r2, [r3, #32]
    33ac:	ldr	r3, [fp, #-8]
    33b0:	mov	r2, #0
    33b4:	str	r2, [r3, #36]	; 0x24
    33b8:	ldr	r3, [fp, #-8]
    33bc:	mov	r2, #0
    33c0:	str	r2, [r3, #40]	; 0x28
    33c4:	ldr	r3, [fp, #-8]
    33c8:	mov	r2, #1
    33cc:	str	r2, [r3, #44]	; 0x2c
    33d0:	ldr	r3, [fp, #-8]
    33d4:	mov	r2, #0
    33d8:	str	r2, [r3, #48]	; 0x30
    33dc:	ldr	r3, [fp, #-8]
    33e0:	mov	r0, r3
    33e4:	sub	sp, fp, #4
    33e8:	pop	{fp, pc}
    33ec:	.word	0x0000062d
    33f0:	.word	0x00000028
    33f4:	.word	0x00000070

000033f8 <coda_type_array_set_base_type>:
    33f8:	push	{r4, fp, lr}
    33fc:	add	fp, sp, #8
    3400:	sub	sp, sp, #12
    3404:	str	r0, [fp, #-16]
    3408:	str	r1, [fp, #-20]	; 0xffffffec
    340c:	ldr	r3, [fp, #-16]
    3410:	cmp	r3, #0
    3414:	bne	3434 <coda_type_array_set_base_type+0x3c>
    3418:	ldr	r3, [pc, #432]	; 35d0 <coda_type_array_set_base_type+0x1d8>
    341c:	ldr	r2, [pc, #432]	; 35d4 <coda_type_array_set_base_type+0x1dc>
    3420:	ldr	r1, [pc, #432]	; 35d8 <coda_type_array_set_base_type+0x1e0>
    3424:	mvn	r0, #99	; 0x63
    3428:	bl	0 <coda_set_error>
    342c:	mvn	r3, #0
    3430:	b	35c4 <coda_type_array_set_base_type+0x1cc>
    3434:	ldr	r3, [fp, #-16]
    3438:	ldr	r3, [r3, #40]	; 0x28
    343c:	cmp	r3, #0
    3440:	beq	3458 <coda_type_array_set_base_type+0x60>
    3444:	ldr	r1, [pc, #400]	; 35dc <coda_type_array_set_base_type+0x1e4>
    3448:	ldr	r0, [pc, #400]	; 35e0 <coda_type_array_set_base_type+0x1e8>
    344c:	bl	0 <coda_set_error>
    3450:	mvn	r3, #0
    3454:	b	35c4 <coda_type_array_set_base_type+0x1cc>
    3458:	ldr	r3, [fp, #-16]
    345c:	ldr	r2, [r3]
    3460:	ldr	r3, [fp, #-20]	; 0xffffffec
    3464:	ldr	r3, [r3]
    3468:	cmp	r2, r3
    346c:	beq	34e0 <coda_type_array_set_base_type+0xe8>
    3470:	ldr	r3, [fp, #-20]	; 0xffffffec
    3474:	ldr	r3, [r3]
    3478:	cmp	r3, #0
    347c:	bne	34a0 <coda_type_array_set_base_type+0xa8>
    3480:	ldr	r3, [fp, #-16]
    3484:	ldr	r3, [r3]
    3488:	cmp	r3, #1
    348c:	beq	34e0 <coda_type_array_set_base_type+0xe8>
    3490:	ldr	r3, [fp, #-16]
    3494:	ldr	r3, [r3]
    3498:	cmp	r3, #2
    349c:	beq	34e0 <coda_type_array_set_base_type+0xe8>
    34a0:	ldr	r3, [fp, #-20]	; 0xffffffec
    34a4:	ldr	r3, [r3]
    34a8:	mov	r0, r3
    34ac:	bl	5d7c <coda_type_get_format_name>
    34b0:	mov	r4, r0
    34b4:	ldr	r3, [fp, #-16]
    34b8:	ldr	r3, [r3]
    34bc:	mov	r0, r3
    34c0:	bl	5d7c <coda_type_get_format_name>
    34c4:	mov	r3, r0
    34c8:	mov	r2, r4
    34cc:	ldr	r1, [pc, #272]	; 35e4 <coda_type_array_set_base_type+0x1ec>
    34d0:	ldr	r0, [pc, #264]	; 35e0 <coda_type_array_set_base_type+0x1e8>
    34d4:	bl	0 <coda_set_error>
    34d8:	mvn	r3, #0
    34dc:	b	35c4 <coda_type_array_set_base_type+0x1cc>
    34e0:	ldr	r3, [fp, #-16]
    34e4:	ldr	r3, [r3]
    34e8:	cmp	r3, #2
    34ec:	bne	3524 <coda_type_array_set_base_type+0x12c>
    34f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    34f4:	ldr	r3, [r3]
    34f8:	cmp	r3, #2
    34fc:	bne	3524 <coda_type_array_set_base_type+0x12c>
    3500:	ldr	r3, [fp, #-20]	; 0xffffffec
    3504:	ldr	r3, [r3, #8]
    3508:	cmp	r3, #1
    350c:	bne	3524 <coda_type_array_set_base_type+0x12c>
    3510:	ldr	r1, [pc, #208]	; 35e8 <coda_type_array_set_base_type+0x1f0>
    3514:	ldr	r0, [pc, #196]	; 35e0 <coda_type_array_set_base_type+0x1e8>
    3518:	bl	0 <coda_set_error>
    351c:	mvn	r3, #0
    3520:	b	35c4 <coda_type_array_set_base_type+0x1cc>
    3524:	ldr	r3, [fp, #-16]
    3528:	ldr	r2, [fp, #-20]	; 0xffffffec
    352c:	str	r2, [r3, #40]	; 0x28
    3530:	ldr	r3, [fp, #-20]	; 0xffffffec
    3534:	ldr	r3, [r3, #4]
    3538:	add	r2, r3, #1
    353c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3540:	str	r2, [r3, #4]
    3544:	ldr	r3, [fp, #-16]
    3548:	ldr	r3, [r3]
    354c:	cmp	r3, #0
    3550:	beq	3564 <coda_type_array_set_base_type+0x16c>
    3554:	ldr	r3, [fp, #-16]
    3558:	ldr	r3, [r3]
    355c:	cmp	r3, #1
    3560:	bne	35c0 <coda_type_array_set_base_type+0x1c8>
    3564:	ldr	r3, [fp, #-16]
    3568:	ldr	r3, [r3, #44]	; 0x2c
    356c:	cmp	r3, #0
    3570:	blt	35c0 <coda_type_array_set_base_type+0x1c8>
    3574:	ldr	r3, [fp, #-20]	; 0xffffffec
    3578:	ldrd	r2, [r3, #24]
    357c:	cmp	r2, #0
    3580:	sbcs	r3, r3, #0
    3584:	blt	35c0 <coda_type_array_set_base_type+0x1c8>
    3588:	ldr	r3, [fp, #-16]
    358c:	ldr	r3, [r3, #44]	; 0x2c
    3590:	mov	r0, r3
    3594:	asr	r1, r0, #31
    3598:	ldr	r3, [fp, #-20]	; 0xffffffec
    359c:	ldrd	r2, [r3, #24]
    35a0:	mul	lr, r2, r1
    35a4:	mul	ip, r0, r3
    35a8:	add	ip, lr, ip
    35ac:	umull	r2, r3, r0, r2
    35b0:	add	r1, ip, r3
    35b4:	mov	r3, r1
    35b8:	ldr	r1, [fp, #-16]
    35bc:	strd	r2, [r1, #24]
    35c0:	mov	r3, #0
    35c4:	mov	r0, r3
    35c8:	sub	sp, fp, #8
    35cc:	pop	{r4, fp, pc}
    35d0:	.word	0x0000064b
    35d4:	.word	0x00000028
    35d8:	.word	0x000001f0
    35dc:	.word	0x00000920
    35e0:	.word	0xfffffe70
    35e4:	.word	0x00000940
    35e8:	.word	0x0000097c

000035ec <coda_type_array_add_fixed_dimension>:
    35ec:	push	{fp, lr}
    35f0:	add	fp, sp, #4
    35f4:	sub	sp, sp, #8
    35f8:	str	r0, [fp, #-8]
    35fc:	str	r1, [fp, #-12]
    3600:	ldr	r3, [fp, #-8]
    3604:	cmp	r3, #0
    3608:	bne	3628 <coda_type_array_add_fixed_dimension+0x3c>
    360c:	ldr	r3, [pc, #400]	; 37a4 <coda_type_array_add_fixed_dimension+0x1b8>
    3610:	ldr	r2, [pc, #400]	; 37a8 <coda_type_array_add_fixed_dimension+0x1bc>
    3614:	ldr	r1, [pc, #400]	; 37ac <coda_type_array_add_fixed_dimension+0x1c0>
    3618:	mvn	r0, #99	; 0x63
    361c:	bl	0 <coda_set_error>
    3620:	mvn	r3, #0
    3624:	b	3798 <coda_type_array_add_fixed_dimension+0x1ac>
    3628:	ldr	r3, [fp, #-12]
    362c:	cmp	r3, #0
    3630:	bge	364c <coda_type_array_add_fixed_dimension+0x60>
    3634:	ldr	r2, [fp, #-12]
    3638:	ldr	r1, [pc, #368]	; 37b0 <coda_type_array_add_fixed_dimension+0x1c4>
    363c:	ldr	r0, [pc, #368]	; 37b4 <coda_type_array_add_fixed_dimension+0x1c8>
    3640:	bl	0 <coda_set_error>
    3644:	mvn	r3, #0
    3648:	b	3798 <coda_type_array_add_fixed_dimension+0x1ac>
    364c:	ldr	r3, [fp, #-8]
    3650:	ldr	r3, [r3, #48]	; 0x30
    3654:	cmp	r3, #8
    3658:	bne	3674 <coda_type_array_add_fixed_dimension+0x88>
    365c:	mov	r2, #8
    3660:	ldr	r1, [pc, #336]	; 37b8 <coda_type_array_add_fixed_dimension+0x1cc>
    3664:	ldr	r0, [pc, #328]	; 37b4 <coda_type_array_add_fixed_dimension+0x1c8>
    3668:	bl	0 <coda_set_error>
    366c:	mvn	r3, #0
    3670:	b	3798 <coda_type_array_add_fixed_dimension+0x1ac>
    3674:	ldr	r3, [fp, #-8]
    3678:	ldr	r3, [r3, #48]	; 0x30
    367c:	ldr	r2, [fp, #-8]
    3680:	add	r3, r3, #12
    3684:	lsl	r3, r3, #2
    3688:	add	r3, r2, r3
    368c:	ldr	r2, [fp, #-12]
    3690:	str	r2, [r3, #4]
    3694:	ldr	r3, [fp, #-8]
    3698:	ldr	r3, [r3, #48]	; 0x30
    369c:	ldr	r2, [fp, #-8]
    36a0:	add	r3, r3, #20
    36a4:	lsl	r3, r3, #2
    36a8:	add	r3, r2, r3
    36ac:	mov	r2, #0
    36b0:	str	r2, [r3, #4]
    36b4:	ldr	r3, [fp, #-8]
    36b8:	ldr	r3, [r3, #48]	; 0x30
    36bc:	add	r2, r3, #1
    36c0:	ldr	r3, [fp, #-8]
    36c4:	str	r2, [r3, #48]	; 0x30
    36c8:	ldr	r3, [fp, #-8]
    36cc:	ldr	r3, [r3, #44]	; 0x2c
    36d0:	cmn	r3, #1
    36d4:	beq	3794 <coda_type_array_add_fixed_dimension+0x1a8>
    36d8:	ldr	r3, [fp, #-8]
    36dc:	ldr	r3, [r3, #48]	; 0x30
    36e0:	cmp	r3, #1
    36e4:	bne	36f8 <coda_type_array_add_fixed_dimension+0x10c>
    36e8:	ldr	r3, [fp, #-8]
    36ec:	ldr	r2, [fp, #-12]
    36f0:	str	r2, [r3, #44]	; 0x2c
    36f4:	b	3710 <coda_type_array_add_fixed_dimension+0x124>
    36f8:	ldr	r3, [fp, #-8]
    36fc:	ldr	r3, [r3, #44]	; 0x2c
    3700:	ldr	r2, [fp, #-12]
    3704:	mul	r2, r2, r3
    3708:	ldr	r3, [fp, #-8]
    370c:	str	r2, [r3, #44]	; 0x2c
    3710:	ldr	r3, [fp, #-8]
    3714:	ldr	r3, [r3]
    3718:	cmp	r3, #0
    371c:	beq	3730 <coda_type_array_add_fixed_dimension+0x144>
    3720:	ldr	r3, [fp, #-8]
    3724:	ldr	r3, [r3]
    3728:	cmp	r3, #1
    372c:	bne	3794 <coda_type_array_add_fixed_dimension+0x1a8>
    3730:	ldr	r3, [fp, #-8]
    3734:	ldr	r3, [r3, #40]	; 0x28
    3738:	cmp	r3, #0
    373c:	beq	3794 <coda_type_array_add_fixed_dimension+0x1a8>
    3740:	ldr	r3, [fp, #-8]
    3744:	ldr	r3, [r3, #40]	; 0x28
    3748:	ldrd	r2, [r3, #24]
    374c:	cmp	r2, #0
    3750:	sbcs	r3, r3, #0
    3754:	blt	3794 <coda_type_array_add_fixed_dimension+0x1a8>
    3758:	ldr	r3, [fp, #-8]
    375c:	ldr	r3, [r3, #44]	; 0x2c
    3760:	mov	r0, r3
    3764:	asr	r1, r0, #31
    3768:	ldr	r3, [fp, #-8]
    376c:	ldr	r3, [r3, #40]	; 0x28
    3770:	ldrd	r2, [r3, #24]
    3774:	mul	lr, r2, r1
    3778:	mul	ip, r0, r3
    377c:	add	ip, lr, ip
    3780:	umull	r2, r3, r0, r2
    3784:	add	r1, ip, r3
    3788:	mov	r3, r1
    378c:	ldr	r1, [fp, #-8]
    3790:	strd	r2, [r1, #24]
    3794:	mov	r3, #0
    3798:	mov	r0, r3
    379c:	sub	sp, fp, #4
    37a0:	pop	{fp, pc}
    37a4:	.word	0x0000067a
    37a8:	.word	0x00000028
    37ac:	.word	0x000001f0
    37b0:	.word	0x000009ac
    37b4:	.word	0xfffffe70
    37b8:	.word	0x000009d8

000037bc <coda_type_array_add_variable_dimension>:
    37bc:	push	{fp, lr}
    37c0:	add	fp, sp, #4
    37c4:	sub	sp, sp, #8
    37c8:	str	r0, [fp, #-8]
    37cc:	str	r1, [fp, #-12]
    37d0:	ldr	r3, [fp, #-8]
    37d4:	cmp	r3, #0
    37d8:	bne	37f8 <coda_type_array_add_variable_dimension+0x3c>
    37dc:	ldr	r3, [pc, #328]	; 392c <coda_type_array_add_variable_dimension+0x170>
    37e0:	ldr	r2, [pc, #328]	; 3930 <coda_type_array_add_variable_dimension+0x174>
    37e4:	ldr	r1, [pc, #328]	; 3934 <coda_type_array_add_variable_dimension+0x178>
    37e8:	mvn	r0, #99	; 0x63
    37ec:	bl	0 <coda_set_error>
    37f0:	mvn	r3, #0
    37f4:	b	3920 <coda_type_array_add_variable_dimension+0x164>
    37f8:	ldr	r3, [fp, #-8]
    37fc:	ldr	r3, [r3, #48]	; 0x30
    3800:	cmp	r3, #8
    3804:	bne	3820 <coda_type_array_add_variable_dimension+0x64>
    3808:	mov	r2, #8
    380c:	ldr	r1, [pc, #292]	; 3938 <coda_type_array_add_variable_dimension+0x17c>
    3810:	ldr	r0, [pc, #292]	; 393c <coda_type_array_add_variable_dimension+0x180>
    3814:	bl	0 <coda_set_error>
    3818:	mvn	r3, #0
    381c:	b	3920 <coda_type_array_add_variable_dimension+0x164>
    3820:	ldr	r3, [fp, #-8]
    3824:	ldr	r3, [r3]
    3828:	cmp	r3, #0
    382c:	beq	3840 <coda_type_array_add_variable_dimension+0x84>
    3830:	ldr	r3, [fp, #-8]
    3834:	ldr	r3, [r3]
    3838:	cmp	r3, #1
    383c:	bne	3878 <coda_type_array_add_variable_dimension+0xbc>
    3840:	ldr	r3, [fp, #-12]
    3844:	cmp	r3, #0
    3848:	bne	3878 <coda_type_array_add_variable_dimension+0xbc>
    384c:	ldr	r3, [fp, #-8]
    3850:	ldr	r3, [r3]
    3854:	mov	r0, r3
    3858:	bl	5d7c <coda_type_get_format_name>
    385c:	mov	r3, r0
    3860:	mov	r2, r3
    3864:	ldr	r1, [pc, #212]	; 3940 <coda_type_array_add_variable_dimension+0x184>
    3868:	ldr	r0, [pc, #204]	; 393c <coda_type_array_add_variable_dimension+0x180>
    386c:	bl	0 <coda_set_error>
    3870:	mvn	r3, #0
    3874:	b	3920 <coda_type_array_add_variable_dimension+0x164>
    3878:	ldr	r3, [fp, #-8]
    387c:	ldr	r3, [r3, #48]	; 0x30
    3880:	ldr	r2, [fp, #-8]
    3884:	add	r3, r3, #12
    3888:	lsl	r3, r3, #2
    388c:	add	r3, r2, r3
    3890:	mvn	r2, #0
    3894:	str	r2, [r3, #4]
    3898:	ldr	r3, [fp, #-8]
    389c:	ldr	r3, [r3, #48]	; 0x30
    38a0:	ldr	r2, [fp, #-8]
    38a4:	add	r3, r3, #20
    38a8:	lsl	r3, r3, #2
    38ac:	add	r3, r2, r3
    38b0:	ldr	r2, [fp, #-12]
    38b4:	str	r2, [r3, #4]
    38b8:	ldr	r3, [fp, #-8]
    38bc:	ldr	r3, [r3, #48]	; 0x30
    38c0:	add	r2, r3, #1
    38c4:	ldr	r3, [fp, #-8]
    38c8:	str	r2, [r3, #48]	; 0x30
    38cc:	ldr	r3, [fp, #-8]
    38d0:	mvn	r2, #0
    38d4:	str	r2, [r3, #44]	; 0x2c
    38d8:	ldr	r3, [fp, #-8]
    38dc:	ldr	r3, [r3]
    38e0:	cmp	r3, #0
    38e4:	beq	38f8 <coda_type_array_add_variable_dimension+0x13c>
    38e8:	ldr	r3, [fp, #-8]
    38ec:	ldr	r3, [r3]
    38f0:	cmp	r3, #1
    38f4:	bne	391c <coda_type_array_add_variable_dimension+0x160>
    38f8:	ldr	r3, [fp, #-8]
    38fc:	ldrd	r2, [r3, #24]
    3900:	cmp	r2, #0
    3904:	sbcs	r3, r3, #0
    3908:	blt	391c <coda_type_array_add_variable_dimension+0x160>
    390c:	ldr	r1, [fp, #-8]
    3910:	mvn	r2, #0
    3914:	mvn	r3, #0
    3918:	strd	r2, [r1, #24]
    391c:	mov	r3, #0
    3920:	mov	r0, r3
    3924:	sub	sp, fp, #4
    3928:	pop	{fp, pc}
    392c:	.word	0x000006a9
    3930:	.word	0x00000028
    3934:	.word	0x000001f0
    3938:	.word	0x00000a14
    393c:	.word	0xfffffe70
    3940:	.word	0x00000a54

00003944 <coda_type_array_validate>:
    3944:	push	{fp, lr}
    3948:	add	fp, sp, #4
    394c:	sub	sp, sp, #8
    3950:	str	r0, [fp, #-8]
    3954:	ldr	r3, [fp, #-8]
    3958:	cmp	r3, #0
    395c:	bne	397c <coda_type_array_validate+0x38>
    3960:	ldr	r3, [pc, #72]	; 39b0 <coda_type_array_validate+0x6c>
    3964:	ldr	r2, [pc, #72]	; 39b4 <coda_type_array_validate+0x70>
    3968:	ldr	r1, [pc, #72]	; 39b8 <coda_type_array_validate+0x74>
    396c:	mvn	r0, #99	; 0x63
    3970:	bl	0 <coda_set_error>
    3974:	mvn	r3, #0
    3978:	b	39a4 <coda_type_array_validate+0x60>
    397c:	ldr	r3, [fp, #-8]
    3980:	ldr	r3, [r3, #48]	; 0x30
    3984:	cmp	r3, #0
    3988:	bne	39a0 <coda_type_array_validate+0x5c>
    398c:	ldr	r1, [pc, #40]	; 39bc <coda_type_array_validate+0x78>
    3990:	ldr	r0, [pc, #40]	; 39c0 <coda_type_array_validate+0x7c>
    3994:	bl	0 <coda_set_error>
    3998:	mvn	r3, #0
    399c:	b	39a4 <coda_type_array_validate+0x60>
    39a0:	mov	r3, #0
    39a4:	mov	r0, r3
    39a8:	sub	sp, fp, #4
    39ac:	pop	{fp, pc}
    39b0:	.word	0x000006ce
    39b4:	.word	0x00000028
    39b8:	.word	0x000001f0
    39bc:	.word	0x00000a94
    39c0:	.word	0xfffffe70

000039c4 <coda_type_number_new>:
    39c4:	push	{fp, lr}
    39c8:	add	fp, sp, #4
    39cc:	sub	sp, sp, #24
    39d0:	str	r0, [fp, #-16]
    39d4:	str	r1, [fp, #-20]	; 0xffffffec
    39d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    39dc:	cmp	r3, #2
    39e0:	beq	3a14 <coda_type_number_new+0x50>
    39e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    39e8:	cmp	r3, #3
    39ec:	beq	3a14 <coda_type_number_new+0x50>
    39f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    39f4:	bl	5e54 <coda_type_get_class_name>
    39f8:	mov	r3, r0
    39fc:	mov	r2, r3
    3a00:	ldr	r1, [pc, #272]	; 3b18 <coda_type_number_new+0x154>
    3a04:	ldr	r0, [pc, #272]	; 3b1c <coda_type_number_new+0x158>
    3a08:	bl	0 <coda_set_error>
    3a0c:	mov	r3, #0
    3a10:	b	3b0c <coda_type_number_new+0x148>
    3a14:	mov	r0, #56	; 0x38
    3a18:	bl	0 <malloc>
    3a1c:	mov	r3, r0
    3a20:	str	r3, [fp, #-8]
    3a24:	ldr	r3, [fp, #-8]
    3a28:	cmp	r3, #0
    3a2c:	bne	3a54 <coda_type_number_new+0x90>
    3a30:	ldr	r3, [pc, #232]	; 3b20 <coda_type_number_new+0x15c>
    3a34:	str	r3, [sp]
    3a38:	ldr	r3, [pc, #228]	; 3b24 <coda_type_number_new+0x160>
    3a3c:	mov	r2, #56	; 0x38
    3a40:	ldr	r1, [pc, #224]	; 3b28 <coda_type_number_new+0x164>
    3a44:	mvn	r0, #0
    3a48:	bl	0 <coda_set_error>
    3a4c:	mov	r3, #0
    3a50:	b	3b0c <coda_type_number_new+0x148>
    3a54:	ldr	r3, [fp, #-8]
    3a58:	ldr	r2, [fp, #-16]
    3a5c:	str	r2, [r3]
    3a60:	ldr	r3, [fp, #-8]
    3a64:	mov	r2, #0
    3a68:	str	r2, [r3, #4]
    3a6c:	ldr	r3, [fp, #-8]
    3a70:	ldr	r2, [fp, #-20]	; 0xffffffec
    3a74:	str	r2, [r3, #8]
    3a78:	ldr	r3, [fp, #-20]	; 0xffffffec
    3a7c:	cmp	r3, #2
    3a80:	bne	3a8c <coda_type_number_new+0xc8>
    3a84:	mov	r2, #6
    3a88:	b	3a90 <coda_type_number_new+0xcc>
    3a8c:	mov	r2, #9
    3a90:	ldr	r3, [fp, #-8]
    3a94:	str	r2, [r3, #12]
    3a98:	ldr	r3, [fp, #-8]
    3a9c:	mov	r2, #0
    3aa0:	str	r2, [r3, #16]
    3aa4:	ldr	r3, [fp, #-8]
    3aa8:	mov	r2, #0
    3aac:	str	r2, [r3, #20]
    3ab0:	ldr	r1, [fp, #-8]
    3ab4:	mvn	r2, #0
    3ab8:	mvn	r3, #0
    3abc:	strd	r2, [r1, #24]
    3ac0:	ldr	r3, [fp, #-8]
    3ac4:	mov	r2, #0
    3ac8:	str	r2, [r3, #32]
    3acc:	ldr	r3, [fp, #-8]
    3ad0:	mov	r2, #0
    3ad4:	str	r2, [r3, #36]	; 0x24
    3ad8:	ldr	r3, [fp, #-8]
    3adc:	mov	r2, #0
    3ae0:	str	r2, [r3, #40]	; 0x28
    3ae4:	ldr	r3, [fp, #-8]
    3ae8:	mov	r2, #0
    3aec:	str	r2, [r3, #44]	; 0x2c
    3af0:	ldr	r3, [fp, #-8]
    3af4:	mov	r2, #0
    3af8:	str	r2, [r3, #48]	; 0x30
    3afc:	ldr	r3, [fp, #-8]
    3b00:	mov	r2, #0
    3b04:	str	r2, [r3, #52]	; 0x34
    3b08:	ldr	r3, [fp, #-8]
    3b0c:	mov	r0, r3
    3b10:	sub	sp, fp, #4
    3b14:	pop	{fp, pc}
    3b18:	.word	0x00000ac4
    3b1c:	.word	0xfffffe70
    3b20:	.word	0x000006e9
    3b24:	.word	0x00000028
    3b28:	.word	0x00000070

00003b2c <coda_type_number_set_unit>:
    3b2c:	push	{fp, lr}
    3b30:	add	fp, sp, #4
    3b34:	sub	sp, sp, #8
    3b38:	str	r0, [fp, #-8]
    3b3c:	str	r1, [fp, #-12]
    3b40:	ldr	r3, [fp, #-12]
    3b44:	cmp	r3, #0
    3b48:	bne	3b68 <coda_type_number_set_unit+0x3c>
    3b4c:	ldr	r3, [pc, #140]	; 3be0 <coda_type_number_set_unit+0xb4>
    3b50:	ldr	r2, [pc, #140]	; 3be4 <coda_type_number_set_unit+0xb8>
    3b54:	ldr	r1, [pc, #140]	; 3be8 <coda_type_number_set_unit+0xbc>
    3b58:	mvn	r0, #99	; 0x63
    3b5c:	bl	0 <coda_set_error>
    3b60:	mvn	r3, #0
    3b64:	b	3bd4 <coda_type_number_set_unit+0xa8>
    3b68:	ldr	r3, [fp, #-8]
    3b6c:	ldr	r3, [r3, #40]	; 0x28
    3b70:	cmp	r3, #0
    3b74:	beq	3b8c <coda_type_number_set_unit+0x60>
    3b78:	ldr	r1, [pc, #108]	; 3bec <coda_type_number_set_unit+0xc0>
    3b7c:	ldr	r0, [pc, #108]	; 3bf0 <coda_type_number_set_unit+0xc4>
    3b80:	bl	0 <coda_set_error>
    3b84:	mvn	r3, #0
    3b88:	b	3bd4 <coda_type_number_set_unit+0xa8>
    3b8c:	ldr	r0, [fp, #-12]
    3b90:	bl	0 <strdup>
    3b94:	mov	r3, r0
    3b98:	mov	r2, r3
    3b9c:	ldr	r3, [fp, #-8]
    3ba0:	str	r2, [r3, #40]	; 0x28
    3ba4:	ldr	r3, [fp, #-8]
    3ba8:	ldr	r3, [r3, #40]	; 0x28
    3bac:	cmp	r3, #0
    3bb0:	bne	3bd0 <coda_type_number_set_unit+0xa4>
    3bb4:	ldr	r3, [pc, #56]	; 3bf4 <coda_type_number_set_unit+0xc8>
    3bb8:	ldr	r2, [pc, #36]	; 3be4 <coda_type_number_set_unit+0xb8>
    3bbc:	ldr	r1, [pc, #52]	; 3bf8 <coda_type_number_set_unit+0xcc>
    3bc0:	mvn	r0, #0
    3bc4:	bl	0 <coda_set_error>
    3bc8:	mvn	r3, #0
    3bcc:	b	3bd4 <coda_type_number_set_unit+0xa8>
    3bd0:	mov	r3, #0
    3bd4:	mov	r0, r3
    3bd8:	sub	sp, fp, #4
    3bdc:	pop	{fp, pc}
    3be0:	.word	0x00000701
    3be4:	.word	0x00000028
    3be8:	.word	0x00000aec
    3bec:	.word	0x00000b0c
    3bf0:	.word	0xfffffe70
    3bf4:	.word	0x0000070d
    3bf8:	.word	0x000000c8

00003bfc <coda_type_number_set_endianness>:
    3bfc:	push	{fp, lr}
    3c00:	add	fp, sp, #4
    3c04:	sub	sp, sp, #8
    3c08:	str	r0, [fp, #-8]
    3c0c:	str	r1, [fp, #-12]
    3c10:	ldr	r3, [fp, #-8]
    3c14:	cmp	r3, #0
    3c18:	bne	3c38 <coda_type_number_set_endianness+0x3c>
    3c1c:	ldr	r3, [pc, #48]	; 3c54 <coda_type_number_set_endianness+0x58>
    3c20:	ldr	r2, [pc, #48]	; 3c58 <coda_type_number_set_endianness+0x5c>
    3c24:	ldr	r1, [pc, #48]	; 3c5c <coda_type_number_set_endianness+0x60>
    3c28:	mvn	r0, #99	; 0x63
    3c2c:	bl	0 <coda_set_error>
    3c30:	mvn	r3, #0
    3c34:	b	3c48 <coda_type_number_set_endianness+0x4c>
    3c38:	ldr	r3, [fp, #-8]
    3c3c:	ldr	r2, [fp, #-12]
    3c40:	str	r2, [r3, #44]	; 0x2c
    3c44:	mov	r3, #0
    3c48:	mov	r0, r3
    3c4c:	sub	sp, fp, #4
    3c50:	pop	{fp, pc}
    3c54:	.word	0x00000718
    3c58:	.word	0x00000028
    3c5c:	.word	0x000001f0

00003c60 <coda_type_number_set_conversion>:
    3c60:	push	{fp, lr}
    3c64:	add	fp, sp, #4
    3c68:	sub	sp, sp, #8
    3c6c:	str	r0, [fp, #-8]
    3c70:	str	r1, [fp, #-12]
    3c74:	ldr	r3, [fp, #-8]
    3c78:	cmp	r3, #0
    3c7c:	bne	3c9c <coda_type_number_set_conversion+0x3c>
    3c80:	ldr	r3, [pc, #84]	; 3cdc <coda_type_number_set_conversion+0x7c>
    3c84:	ldr	r2, [pc, #84]	; 3ce0 <coda_type_number_set_conversion+0x80>
    3c88:	ldr	r1, [pc, #84]	; 3ce4 <coda_type_number_set_conversion+0x84>
    3c8c:	mvn	r0, #99	; 0x63
    3c90:	bl	0 <coda_set_error>
    3c94:	mvn	r3, #0
    3c98:	b	3cd0 <coda_type_number_set_conversion+0x70>
    3c9c:	ldr	r3, [fp, #-8]
    3ca0:	ldr	r3, [r3, #48]	; 0x30
    3ca4:	cmp	r3, #0
    3ca8:	beq	3cc0 <coda_type_number_set_conversion+0x60>
    3cac:	ldr	r1, [pc, #52]	; 3ce8 <coda_type_number_set_conversion+0x88>
    3cb0:	ldr	r0, [pc, #52]	; 3cec <coda_type_number_set_conversion+0x8c>
    3cb4:	bl	0 <coda_set_error>
    3cb8:	mvn	r3, #0
    3cbc:	b	3cd0 <coda_type_number_set_conversion+0x70>
    3cc0:	ldr	r3, [fp, #-8]
    3cc4:	ldr	r2, [fp, #-12]
    3cc8:	str	r2, [r3, #48]	; 0x30
    3ccc:	mov	r3, #0
    3cd0:	mov	r0, r3
    3cd4:	sub	sp, fp, #4
    3cd8:	pop	{fp, pc}
    3cdc:	.word	0x00000723
    3ce0:	.word	0x00000028
    3ce4:	.word	0x000001f0
    3ce8:	.word	0x00000b24
    3cec:	.word	0xfffffe70

00003cf0 <coda_type_number_add_ascii_float_mapping>:
    3cf0:	push	{fp, lr}
    3cf4:	add	fp, sp, #4
    3cf8:	sub	sp, sp, #8
    3cfc:	str	r0, [fp, #-8]
    3d00:	str	r1, [fp, #-12]
    3d04:	ldr	r3, [fp, #-8]
    3d08:	cmp	r3, #0
    3d0c:	bne	3d2c <coda_type_number_add_ascii_float_mapping+0x3c>
    3d10:	ldr	r3, [pc, #136]	; 3da0 <coda_type_number_add_ascii_float_mapping+0xb0>
    3d14:	ldr	r2, [pc, #136]	; 3da4 <coda_type_number_add_ascii_float_mapping+0xb4>
    3d18:	ldr	r1, [pc, #136]	; 3da8 <coda_type_number_add_ascii_float_mapping+0xb8>
    3d1c:	mvn	r0, #99	; 0x63
    3d20:	bl	0 <coda_set_error>
    3d24:	mvn	r3, #0
    3d28:	b	3d94 <coda_type_number_add_ascii_float_mapping+0xa4>
    3d2c:	ldr	r3, [fp, #-12]
    3d30:	cmp	r3, #0
    3d34:	bne	3d54 <coda_type_number_add_ascii_float_mapping+0x64>
    3d38:	ldr	r3, [pc, #108]	; 3dac <coda_type_number_add_ascii_float_mapping+0xbc>
    3d3c:	ldr	r2, [pc, #96]	; 3da4 <coda_type_number_add_ascii_float_mapping+0xb4>
    3d40:	ldr	r1, [pc, #104]	; 3db0 <coda_type_number_add_ascii_float_mapping+0xc0>
    3d44:	mvn	r0, #99	; 0x63
    3d48:	bl	0 <coda_set_error>
    3d4c:	mvn	r3, #0
    3d50:	b	3d94 <coda_type_number_add_ascii_float_mapping+0xa4>
    3d54:	ldr	r3, [fp, #-8]
    3d58:	ldr	r3, [r3, #8]
    3d5c:	cmp	r3, #3
    3d60:	beq	3d78 <coda_type_number_add_ascii_float_mapping+0x88>
    3d64:	ldr	r1, [pc, #72]	; 3db4 <coda_type_number_add_ascii_float_mapping+0xc4>
    3d68:	ldr	r0, [pc, #72]	; 3db8 <coda_type_number_add_ascii_float_mapping+0xc8>
    3d6c:	bl	0 <coda_set_error>
    3d70:	mvn	r3, #0
    3d74:	b	3d94 <coda_type_number_add_ascii_float_mapping+0xa4>
    3d78:	ldr	r3, [fp, #-8]
    3d7c:	add	r3, r3, #52	; 0x34
    3d80:	ldr	r2, [fp, #-12]
    3d84:	mov	r1, r3
    3d88:	ldr	r0, [fp, #-8]
    3d8c:	bl	61c <mapping_type_add_mapping>
    3d90:	mov	r3, r0
    3d94:	mov	r0, r3
    3d98:	sub	sp, fp, #4
    3d9c:	pop	{fp, pc}
    3da0:	.word	0x00000733
    3da4:	.word	0x00000028
    3da8:	.word	0x000001f0
    3dac:	.word	0x00000738
    3db0:	.word	0x00000b44
    3db4:	.word	0x00000b68
    3db8:	.word	0xfffffe70

00003dbc <coda_type_number_add_ascii_integer_mapping>:
    3dbc:	push	{fp, lr}
    3dc0:	add	fp, sp, #4
    3dc4:	sub	sp, sp, #8
    3dc8:	str	r0, [fp, #-8]
    3dcc:	str	r1, [fp, #-12]
    3dd0:	ldr	r3, [fp, #-8]
    3dd4:	cmp	r3, #0
    3dd8:	bne	3df8 <coda_type_number_add_ascii_integer_mapping+0x3c>
    3ddc:	ldr	r3, [pc, #136]	; 3e6c <coda_type_number_add_ascii_integer_mapping+0xb0>
    3de0:	ldr	r2, [pc, #136]	; 3e70 <coda_type_number_add_ascii_integer_mapping+0xb4>
    3de4:	ldr	r1, [pc, #136]	; 3e74 <coda_type_number_add_ascii_integer_mapping+0xb8>
    3de8:	mvn	r0, #99	; 0x63
    3dec:	bl	0 <coda_set_error>
    3df0:	mvn	r3, #0
    3df4:	b	3e60 <coda_type_number_add_ascii_integer_mapping+0xa4>
    3df8:	ldr	r3, [fp, #-12]
    3dfc:	cmp	r3, #0
    3e00:	bne	3e20 <coda_type_number_add_ascii_integer_mapping+0x64>
    3e04:	ldr	r3, [pc, #108]	; 3e78 <coda_type_number_add_ascii_integer_mapping+0xbc>
    3e08:	ldr	r2, [pc, #96]	; 3e70 <coda_type_number_add_ascii_integer_mapping+0xb4>
    3e0c:	ldr	r1, [pc, #104]	; 3e7c <coda_type_number_add_ascii_integer_mapping+0xc0>
    3e10:	mvn	r0, #99	; 0x63
    3e14:	bl	0 <coda_set_error>
    3e18:	mvn	r3, #0
    3e1c:	b	3e60 <coda_type_number_add_ascii_integer_mapping+0xa4>
    3e20:	ldr	r3, [fp, #-8]
    3e24:	ldr	r3, [r3, #8]
    3e28:	cmp	r3, #2
    3e2c:	beq	3e44 <coda_type_number_add_ascii_integer_mapping+0x88>
    3e30:	ldr	r1, [pc, #72]	; 3e80 <coda_type_number_add_ascii_integer_mapping+0xc4>
    3e34:	ldr	r0, [pc, #72]	; 3e84 <coda_type_number_add_ascii_integer_mapping+0xc8>
    3e38:	bl	0 <coda_set_error>
    3e3c:	mvn	r3, #0
    3e40:	b	3e60 <coda_type_number_add_ascii_integer_mapping+0xa4>
    3e44:	ldr	r3, [fp, #-8]
    3e48:	add	r3, r3, #52	; 0x34
    3e4c:	ldr	r2, [fp, #-12]
    3e50:	mov	r1, r3
    3e54:	ldr	r0, [fp, #-8]
    3e58:	bl	61c <mapping_type_add_mapping>
    3e5c:	mov	r3, r0
    3e60:	mov	r0, r3
    3e64:	sub	sp, fp, #4
    3e68:	pop	{fp, pc}
    3e6c:	.word	0x00000747
    3e70:	.word	0x00000028
    3e74:	.word	0x000001f0
    3e78:	.word	0x0000074c
    3e7c:	.word	0x00000b44
    3e80:	.word	0x00000ba0
    3e84:	.word	0xfffffe70

00003e88 <coda_type_number_validate>:
    3e88:	push	{r4, fp, lr}
    3e8c:	add	fp, sp, #8
    3e90:	sub	sp, sp, #12
    3e94:	str	r0, [fp, #-16]
    3e98:	ldr	r3, [fp, #-16]
    3e9c:	cmp	r3, #0
    3ea0:	bne	3ec0 <coda_type_number_validate+0x38>
    3ea4:	ldr	r3, [pc, #800]	; 41cc <coda_type_number_validate+0x344>
    3ea8:	ldr	r2, [pc, #800]	; 41d0 <coda_type_number_validate+0x348>
    3eac:	ldr	r1, [pc, #800]	; 41d4 <coda_type_number_validate+0x34c>
    3eb0:	mvn	r0, #99	; 0x63
    3eb4:	bl	0 <coda_set_error>
    3eb8:	mvn	r3, #0
    3ebc:	b	41c0 <coda_type_number_validate+0x338>
    3ec0:	ldr	r3, [fp, #-16]
    3ec4:	ldr	r3, [r3]
    3ec8:	cmp	r3, #1
    3ecc:	bne	41bc <coda_type_number_validate+0x334>
    3ed0:	ldr	r3, [fp, #-16]
    3ed4:	ldrd	r2, [r3, #24]
    3ed8:	cmp	r2, #0
    3edc:	sbcs	r3, r3, #0
    3ee0:	blt	40fc <coda_type_number_validate+0x274>
    3ee4:	ldr	r3, [fp, #-16]
    3ee8:	ldr	r3, [r3, #12]
    3eec:	cmp	r3, #9
    3ef0:	ldrls	pc, [pc, r3, lsl #2]
    3ef4:	b	40e8 <coda_type_number_validate+0x260>
    3ef8:	.word	0x00003f20
    3efc:	.word	0x00003f20
    3f00:	.word	0x00003f6c
    3f04:	.word	0x00003f6c
    3f08:	.word	0x00003fb8
    3f0c:	.word	0x00003fb8
    3f10:	.word	0x00004004
    3f14:	.word	0x00004004
    3f18:	.word	0x00004050
    3f1c:	.word	0x0000409c
    3f20:	ldr	r3, [fp, #-16]
    3f24:	ldrd	r2, [r3, #24]
    3f28:	cmp	r2, #9
    3f2c:	sbcs	r3, r3, #0
    3f30:	blt	4120 <coda_type_number_validate+0x298>
    3f34:	ldr	r3, [fp, #-16]
    3f38:	ldrd	r2, [r3, #24]
    3f3c:	mov	r4, r2
    3f40:	ldr	r3, [fp, #-16]
    3f44:	ldr	r3, [r3, #12]
    3f48:	mov	r0, r3
    3f4c:	bl	5efc <coda_type_get_native_type_name>
    3f50:	mov	r3, r0
    3f54:	mov	r2, r4
    3f58:	ldr	r1, [pc, #632]	; 41d8 <coda_type_number_validate+0x350>
    3f5c:	ldr	r0, [pc, #632]	; 41dc <coda_type_number_validate+0x354>
    3f60:	bl	0 <coda_set_error>
    3f64:	mvn	r3, #0
    3f68:	b	41c0 <coda_type_number_validate+0x338>
    3f6c:	ldr	r3, [fp, #-16]
    3f70:	ldrd	r2, [r3, #24]
    3f74:	cmp	r2, #17
    3f78:	sbcs	r3, r3, #0
    3f7c:	blt	4128 <coda_type_number_validate+0x2a0>
    3f80:	ldr	r3, [fp, #-16]
    3f84:	ldrd	r2, [r3, #24]
    3f88:	mov	r4, r2
    3f8c:	ldr	r3, [fp, #-16]
    3f90:	ldr	r3, [r3, #12]
    3f94:	mov	r0, r3
    3f98:	bl	5efc <coda_type_get_native_type_name>
    3f9c:	mov	r3, r0
    3fa0:	mov	r2, r4
    3fa4:	ldr	r1, [pc, #564]	; 41e0 <coda_type_number_validate+0x358>
    3fa8:	ldr	r0, [pc, #556]	; 41dc <coda_type_number_validate+0x354>
    3fac:	bl	0 <coda_set_error>
    3fb0:	mvn	r3, #0
    3fb4:	b	41c0 <coda_type_number_validate+0x338>
    3fb8:	ldr	r3, [fp, #-16]
    3fbc:	ldrd	r2, [r3, #24]
    3fc0:	cmp	r2, #33	; 0x21
    3fc4:	sbcs	r3, r3, #0
    3fc8:	blt	4130 <coda_type_number_validate+0x2a8>
    3fcc:	ldr	r3, [fp, #-16]
    3fd0:	ldrd	r2, [r3, #24]
    3fd4:	mov	r4, r2
    3fd8:	ldr	r3, [fp, #-16]
    3fdc:	ldr	r3, [r3, #12]
    3fe0:	mov	r0, r3
    3fe4:	bl	5efc <coda_type_get_native_type_name>
    3fe8:	mov	r3, r0
    3fec:	mov	r2, r4
    3ff0:	ldr	r1, [pc, #492]	; 41e4 <coda_type_number_validate+0x35c>
    3ff4:	ldr	r0, [pc, #480]	; 41dc <coda_type_number_validate+0x354>
    3ff8:	bl	0 <coda_set_error>
    3ffc:	mvn	r3, #0
    4000:	b	41c0 <coda_type_number_validate+0x338>
    4004:	ldr	r3, [fp, #-16]
    4008:	ldrd	r2, [r3, #24]
    400c:	cmp	r2, #65	; 0x41
    4010:	sbcs	r3, r3, #0
    4014:	blt	4138 <coda_type_number_validate+0x2b0>
    4018:	ldr	r3, [fp, #-16]
    401c:	ldrd	r2, [r3, #24]
    4020:	mov	r4, r2
    4024:	ldr	r3, [fp, #-16]
    4028:	ldr	r3, [r3, #12]
    402c:	mov	r0, r3
    4030:	bl	5efc <coda_type_get_native_type_name>
    4034:	mov	r3, r0
    4038:	mov	r2, r4
    403c:	ldr	r1, [pc, #420]	; 41e8 <coda_type_number_validate+0x360>
    4040:	ldr	r0, [pc, #404]	; 41dc <coda_type_number_validate+0x354>
    4044:	bl	0 <coda_set_error>
    4048:	mvn	r3, #0
    404c:	b	41c0 <coda_type_number_validate+0x338>
    4050:	ldr	r3, [fp, #-16]
    4054:	ldrd	r2, [r3, #24]
    4058:	cmp	r3, #0
    405c:	cmpeq	r2, #32
    4060:	beq	4140 <coda_type_number_validate+0x2b8>
    4064:	ldr	r3, [fp, #-16]
    4068:	ldrd	r2, [r3, #24]
    406c:	mov	r4, r2
    4070:	ldr	r3, [fp, #-16]
    4074:	ldr	r3, [r3, #12]
    4078:	mov	r0, r3
    407c:	bl	5efc <coda_type_get_native_type_name>
    4080:	mov	r3, r0
    4084:	mov	r2, r4
    4088:	ldr	r1, [pc, #348]	; 41ec <coda_type_number_validate+0x364>
    408c:	ldr	r0, [pc, #328]	; 41dc <coda_type_number_validate+0x354>
    4090:	bl	0 <coda_set_error>
    4094:	mvn	r3, #0
    4098:	b	41c0 <coda_type_number_validate+0x338>
    409c:	ldr	r3, [fp, #-16]
    40a0:	ldrd	r2, [r3, #24]
    40a4:	cmp	r3, #0
    40a8:	cmpeq	r2, #64	; 0x40
    40ac:	beq	4148 <coda_type_number_validate+0x2c0>
    40b0:	ldr	r3, [fp, #-16]
    40b4:	ldrd	r2, [r3, #24]
    40b8:	mov	r4, r2
    40bc:	ldr	r3, [fp, #-16]
    40c0:	ldr	r3, [r3, #12]
    40c4:	mov	r0, r3
    40c8:	bl	5efc <coda_type_get_native_type_name>
    40cc:	mov	r3, r0
    40d0:	mov	r2, r4
    40d4:	ldr	r1, [pc, #276]	; 41f0 <coda_type_number_validate+0x368>
    40d8:	ldr	r0, [pc, #252]	; 41dc <coda_type_number_validate+0x354>
    40dc:	bl	0 <coda_set_error>
    40e0:	mvn	r3, #0
    40e4:	b	41c0 <coda_type_number_validate+0x338>
    40e8:	ldr	r3, [pc, #260]	; 41f4 <coda_type_number_validate+0x36c>
    40ec:	ldr	r2, [pc, #260]	; 41f8 <coda_type_number_validate+0x370>
    40f0:	ldr	r1, [pc, #216]	; 41d0 <coda_type_number_validate+0x348>
    40f4:	ldr	r0, [pc, #256]	; 41fc <coda_type_number_validate+0x374>
    40f8:	bl	0 <__assert_fail>
    40fc:	ldr	r3, [fp, #-16]
    4100:	ldr	r3, [r3, #32]
    4104:	cmp	r3, #0
    4108:	bne	414c <coda_type_number_validate+0x2c4>
    410c:	ldr	r1, [pc, #236]	; 4200 <coda_type_number_validate+0x378>
    4110:	ldr	r0, [pc, #196]	; 41dc <coda_type_number_validate+0x354>
    4114:	bl	0 <coda_set_error>
    4118:	mvn	r3, #0
    411c:	b	41c0 <coda_type_number_validate+0x338>
    4120:	nop			; (mov r0, r0)
    4124:	b	414c <coda_type_number_validate+0x2c4>
    4128:	nop			; (mov r0, r0)
    412c:	b	414c <coda_type_number_validate+0x2c4>
    4130:	nop			; (mov r0, r0)
    4134:	b	414c <coda_type_number_validate+0x2c4>
    4138:	nop			; (mov r0, r0)
    413c:	b	414c <coda_type_number_validate+0x2c4>
    4140:	nop			; (mov r0, r0)
    4144:	b	414c <coda_type_number_validate+0x2c4>
    4148:	nop			; (mov r0, r0)
    414c:	ldr	r3, [fp, #-16]
    4150:	ldr	r3, [r3, #44]	; 0x2c
    4154:	cmp	r3, #1
    4158:	bne	41bc <coda_type_number_validate+0x334>
    415c:	ldr	r3, [fp, #-16]
    4160:	ldrd	r2, [r3, #24]
    4164:	cmp	r2, #0
    4168:	sbcs	r3, r3, #0
    416c:	blt	41bc <coda_type_number_validate+0x334>
    4170:	ldr	r3, [fp, #-16]
    4174:	ldrd	r2, [r3, #24]
    4178:	mov	r0, r2
    417c:	mov	r1, r3
    4180:	mov	r2, #7
    4184:	mov	r3, #0
    4188:	and	r2, r2, r0
    418c:	and	r3, r3, r1
    4190:	orrs	r3, r2, r3
    4194:	beq	41bc <coda_type_number_validate+0x334>
    4198:	ldr	r3, [fp, #-16]
    419c:	ldrd	r2, [r3, #24]
    41a0:	mov	r3, r2
    41a4:	mov	r2, r3
    41a8:	ldr	r1, [pc, #84]	; 4204 <coda_type_number_validate+0x37c>
    41ac:	ldr	r0, [pc, #40]	; 41dc <coda_type_number_validate+0x354>
    41b0:	bl	0 <coda_set_error>
    41b4:	mvn	r3, #0
    41b8:	b	41c0 <coda_type_number_validate+0x338>
    41bc:	mov	r3, #0
    41c0:	mov	r0, r3
    41c4:	sub	sp, fp, #8
    41c8:	pop	{r4, fp, pc}
    41cc:	.word	0x0000075b
    41d0:	.word	0x00000028
    41d4:	.word	0x000001f0
    41d8:	.word	0x00000bd8
    41dc:	.word	0xfffffe70
    41e0:	.word	0x00000c30
    41e4:	.word	0x00000c88
    41e8:	.word	0x00000ce0
    41ec:	.word	0x00000d38
    41f0:	.word	0x00000d94
    41f4:	.word	0x00001a60
    41f8:	.word	0x0000079f
    41fc:	.word	0x00000df0
    4200:	.word	0x00000df4
    4204:	.word	0x00000e34

00004208 <coda_type_text_new>:
    4208:	push	{fp, lr}
    420c:	add	fp, sp, #4
    4210:	sub	sp, sp, #24
    4214:	str	r0, [fp, #-16]
    4218:	mov	r0, #48	; 0x30
    421c:	bl	0 <malloc>
    4220:	mov	r3, r0
    4224:	str	r3, [fp, #-8]
    4228:	ldr	r3, [fp, #-8]
    422c:	cmp	r3, #0
    4230:	bne	4258 <coda_type_text_new+0x50>
    4234:	ldr	r3, [pc, #180]	; 42f0 <coda_type_text_new+0xe8>
    4238:	str	r3, [sp]
    423c:	ldr	r3, [pc, #176]	; 42f4 <coda_type_text_new+0xec>
    4240:	mov	r2, #48	; 0x30
    4244:	ldr	r1, [pc, #172]	; 42f8 <coda_type_text_new+0xf0>
    4248:	mvn	r0, #0
    424c:	bl	0 <coda_set_error>
    4250:	mov	r3, #0
    4254:	b	42e4 <coda_type_text_new+0xdc>
    4258:	ldr	r3, [fp, #-8]
    425c:	ldr	r2, [fp, #-16]
    4260:	str	r2, [r3]
    4264:	ldr	r3, [fp, #-8]
    4268:	mov	r2, #0
    426c:	str	r2, [r3, #4]
    4270:	ldr	r3, [fp, #-8]
    4274:	mov	r2, #4
    4278:	str	r2, [r3, #8]
    427c:	ldr	r3, [fp, #-8]
    4280:	mov	r2, #11
    4284:	str	r2, [r3, #12]
    4288:	ldr	r3, [fp, #-8]
    428c:	mov	r2, #0
    4290:	str	r2, [r3, #16]
    4294:	ldr	r3, [fp, #-8]
    4298:	mov	r2, #0
    429c:	str	r2, [r3, #20]
    42a0:	ldr	r1, [fp, #-8]
    42a4:	mvn	r2, #0
    42a8:	mvn	r3, #0
    42ac:	strd	r2, [r1, #24]
    42b0:	ldr	r3, [fp, #-8]
    42b4:	mov	r2, #0
    42b8:	str	r2, [r3, #32]
    42bc:	ldr	r3, [fp, #-8]
    42c0:	mov	r2, #0
    42c4:	str	r2, [r3, #36]	; 0x24
    42c8:	ldr	r3, [fp, #-8]
    42cc:	mov	r2, #0
    42d0:	str	r2, [r3, #40]	; 0x28
    42d4:	ldr	r3, [fp, #-8]
    42d8:	mov	r2, #0
    42dc:	str	r2, [r3, #44]	; 0x2c
    42e0:	ldr	r3, [fp, #-8]
    42e4:	mov	r0, r3
    42e8:	sub	sp, fp, #4
    42ec:	pop	{fp, pc}
    42f0:	.word	0x000007bc
    42f4:	.word	0x00000028
    42f8:	.word	0x00000070

000042fc <coda_type_text_set_fixed_value>:
    42fc:	push	{fp, lr}
    4300:	add	fp, sp, #4
    4304:	sub	sp, sp, #8
    4308:	str	r0, [fp, #-8]
    430c:	str	r1, [fp, #-12]
    4310:	ldr	r3, [fp, #-8]
    4314:	cmp	r3, #0
    4318:	bne	4338 <coda_type_text_set_fixed_value+0x3c>
    431c:	ldr	r3, [pc, #180]	; 43d8 <coda_type_text_set_fixed_value+0xdc>
    4320:	ldr	r2, [pc, #180]	; 43dc <coda_type_text_set_fixed_value+0xe0>
    4324:	ldr	r1, [pc, #180]	; 43e0 <coda_type_text_set_fixed_value+0xe4>
    4328:	mvn	r0, #99	; 0x63
    432c:	bl	0 <coda_set_error>
    4330:	mvn	r3, #0
    4334:	b	43cc <coda_type_text_set_fixed_value+0xd0>
    4338:	ldr	r3, [fp, #-12]
    433c:	cmp	r3, #0
    4340:	bne	4360 <coda_type_text_set_fixed_value+0x64>
    4344:	ldr	r3, [pc, #152]	; 43e4 <coda_type_text_set_fixed_value+0xe8>
    4348:	ldr	r2, [pc, #140]	; 43dc <coda_type_text_set_fixed_value+0xe0>
    434c:	ldr	r1, [pc, #148]	; 43e8 <coda_type_text_set_fixed_value+0xec>
    4350:	mvn	r0, #99	; 0x63
    4354:	bl	0 <coda_set_error>
    4358:	mvn	r3, #0
    435c:	b	43cc <coda_type_text_set_fixed_value+0xd0>
    4360:	ldr	r3, [fp, #-8]
    4364:	ldr	r3, [r3, #40]	; 0x28
    4368:	cmp	r3, #0
    436c:	beq	4384 <coda_type_text_set_fixed_value+0x88>
    4370:	ldr	r1, [pc, #116]	; 43ec <coda_type_text_set_fixed_value+0xf0>
    4374:	ldr	r0, [pc, #116]	; 43f0 <coda_type_text_set_fixed_value+0xf4>
    4378:	bl	0 <coda_set_error>
    437c:	mvn	r3, #0
    4380:	b	43cc <coda_type_text_set_fixed_value+0xd0>
    4384:	ldr	r0, [fp, #-12]
    4388:	bl	0 <strdup>
    438c:	mov	r3, r0
    4390:	mov	r2, r3
    4394:	ldr	r3, [fp, #-8]
    4398:	str	r2, [r3, #40]	; 0x28
    439c:	ldr	r3, [fp, #-8]
    43a0:	ldr	r3, [r3, #40]	; 0x28
    43a4:	cmp	r3, #0
    43a8:	bne	43c8 <coda_type_text_set_fixed_value+0xcc>
    43ac:	ldr	r3, [pc, #64]	; 43f4 <coda_type_text_set_fixed_value+0xf8>
    43b0:	ldr	r2, [pc, #36]	; 43dc <coda_type_text_set_fixed_value+0xe0>
    43b4:	ldr	r1, [pc, #60]	; 43f8 <coda_type_text_set_fixed_value+0xfc>
    43b8:	mvn	r0, #0
    43bc:	bl	0 <coda_set_error>
    43c0:	mvn	r3, #0
    43c4:	b	43cc <coda_type_text_set_fixed_value+0xd0>
    43c8:	mov	r3, #0
    43cc:	mov	r0, r3
    43d0:	sub	sp, fp, #4
    43d4:	pop	{fp, pc}
    43d8:	.word	0x000007d2
    43dc:	.word	0x00000028
    43e0:	.word	0x000001f0
    43e4:	.word	0x000007d7
    43e8:	.word	0x00000e84
    43ec:	.word	0x00000eac
    43f0:	.word	0xfffffe70
    43f4:	.word	0x000007e3
    43f8:	.word	0x000000c8

000043fc <coda_type_text_set_special_text_type>:
    43fc:	push	{fp, lr}
    4400:	add	fp, sp, #4
    4404:	sub	sp, sp, #8
    4408:	str	r0, [fp, #-8]
    440c:	str	r1, [fp, #-12]
    4410:	ldr	r3, [fp, #-8]
    4414:	cmp	r3, #0
    4418:	bne	4438 <coda_type_text_set_special_text_type+0x3c>
    441c:	ldr	r3, [pc, #144]	; 44b4 <coda_type_text_set_special_text_type+0xb8>
    4420:	ldr	r2, [pc, #144]	; 44b8 <coda_type_text_set_special_text_type+0xbc>
    4424:	ldr	r1, [pc, #144]	; 44bc <coda_type_text_set_special_text_type+0xc0>
    4428:	mvn	r0, #99	; 0x63
    442c:	bl	0 <coda_set_error>
    4430:	mvn	r3, #0
    4434:	b	44a8 <coda_type_text_set_special_text_type+0xac>
    4438:	ldr	r3, [fp, #-8]
    443c:	ldr	r3, [r3]
    4440:	cmp	r3, #0
    4444:	beq	4474 <coda_type_text_set_special_text_type+0x78>
    4448:	ldr	r3, [fp, #-8]
    444c:	ldr	r3, [r3]
    4450:	mov	r0, r3
    4454:	bl	5d7c <coda_type_get_format_name>
    4458:	mov	r3, r0
    445c:	mov	r2, r3
    4460:	ldr	r1, [pc, #88]	; 44c0 <coda_type_text_set_special_text_type+0xc4>
    4464:	ldr	r0, [pc, #88]	; 44c4 <coda_type_text_set_special_text_type+0xc8>
    4468:	bl	0 <coda_set_error>
    446c:	mvn	r3, #0
    4470:	b	44a8 <coda_type_text_set_special_text_type+0xac>
    4474:	ldr	r3, [fp, #-8]
    4478:	ldr	r3, [r3, #44]	; 0x2c
    447c:	cmp	r3, #0
    4480:	beq	4498 <coda_type_text_set_special_text_type+0x9c>
    4484:	ldr	r1, [pc, #60]	; 44c8 <coda_type_text_set_special_text_type+0xcc>
    4488:	ldr	r0, [pc, #52]	; 44c4 <coda_type_text_set_special_text_type+0xc8>
    448c:	bl	0 <coda_set_error>
    4490:	mvn	r3, #0
    4494:	b	44a8 <coda_type_text_set_special_text_type+0xac>
    4498:	ldr	r3, [fp, #-8]
    449c:	ldr	r2, [fp, #-12]
    44a0:	str	r2, [r3, #44]	; 0x2c
    44a4:	mov	r3, #0
    44a8:	mov	r0, r3
    44ac:	sub	sp, fp, #4
    44b0:	pop	{fp, pc}
    44b4:	.word	0x000007ee
    44b8:	.word	0x00000028
    44bc:	.word	0x000001f0
    44c0:	.word	0x00000ed0
    44c4:	.word	0xfffffe70
    44c8:	.word	0x00000f04

000044cc <coda_type_text_validate>:
    44cc:	push	{r4, r5, r6, r7, fp, lr}
    44d0:	add	fp, sp, #20
    44d4:	sub	sp, sp, #32
    44d8:	str	r0, [fp, #-48]	; 0xffffffd0
    44dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    44e0:	cmp	r3, #0
    44e4:	bne	4504 <coda_type_text_validate+0x38>
    44e8:	ldr	r3, [pc, #492]	; 46dc <coda_type_text_validate+0x210>
    44ec:	ldr	r2, [pc, #492]	; 46e0 <coda_type_text_validate+0x214>
    44f0:	ldr	r1, [pc, #492]	; 46e4 <coda_type_text_validate+0x218>
    44f4:	mvn	r0, #99	; 0x63
    44f8:	bl	0 <coda_set_error>
    44fc:	mvn	r3, #0
    4500:	b	46d0 <coda_type_text_validate+0x204>
    4504:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4508:	ldr	r3, [r3]
    450c:	cmp	r3, #0
    4510:	beq	4524 <coda_type_text_validate+0x58>
    4514:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4518:	ldr	r3, [r3]
    451c:	cmp	r3, #1
    4520:	bne	45bc <coda_type_text_validate+0xf0>
    4524:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4528:	ldr	r3, [r3, #32]
    452c:	cmp	r3, #0
    4530:	bne	455c <coda_type_text_validate+0x90>
    4534:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4538:	ldrd	r2, [r3, #24]
    453c:	cmp	r2, #0
    4540:	sbcs	r3, r3, #0
    4544:	bge	455c <coda_type_text_validate+0x90>
    4548:	ldr	r1, [pc, #408]	; 46e8 <coda_type_text_validate+0x21c>
    454c:	ldr	r0, [pc, #408]	; 46ec <coda_type_text_validate+0x220>
    4550:	bl	0 <coda_set_error>
    4554:	mvn	r3, #0
    4558:	b	46d0 <coda_type_text_validate+0x204>
    455c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4560:	ldrd	r2, [r3, #24]
    4564:	cmp	r2, #0
    4568:	sbcs	r3, r3, #0
    456c:	blt	45bc <coda_type_text_validate+0xf0>
    4570:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4574:	ldrd	r2, [r3, #24]
    4578:	mov	r0, r2
    457c:	mov	r1, r3
    4580:	mov	r2, #7
    4584:	mov	r3, #0
    4588:	and	r2, r2, r0
    458c:	and	r3, r3, r1
    4590:	orrs	r3, r2, r3
    4594:	beq	45bc <coda_type_text_validate+0xf0>
    4598:	ldr	r3, [fp, #-48]	; 0xffffffd0
    459c:	ldrd	r2, [r3, #24]
    45a0:	mov	r3, r2
    45a4:	mov	r2, r3
    45a8:	ldr	r1, [pc, #320]	; 46f0 <coda_type_text_validate+0x224>
    45ac:	ldr	r0, [pc, #312]	; 46ec <coda_type_text_validate+0x220>
    45b0:	bl	0 <coda_set_error>
    45b4:	mvn	r3, #0
    45b8:	b	46d0 <coda_type_text_validate+0x204>
    45bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    45c0:	ldr	r3, [r3, #12]
    45c4:	cmp	r3, #10
    45c8:	bne	4604 <coda_type_text_validate+0x138>
    45cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    45d0:	ldrd	r2, [r3, #24]
    45d4:	cmp	r3, #0
    45d8:	cmpeq	r2, #8
    45dc:	beq	4604 <coda_type_text_validate+0x138>
    45e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    45e4:	ldrd	r2, [r3, #24]
    45e8:	mov	r3, r2
    45ec:	mov	r2, r3
    45f0:	ldr	r1, [pc, #252]	; 46f4 <coda_type_text_validate+0x228>
    45f4:	ldr	r0, [pc, #240]	; 46ec <coda_type_text_validate+0x220>
    45f8:	bl	0 <coda_set_error>
    45fc:	mvn	r3, #0
    4600:	b	46d0 <coda_type_text_validate+0x204>
    4604:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4608:	ldr	r3, [r3, #40]	; 0x28
    460c:	cmp	r3, #0
    4610:	beq	46cc <coda_type_text_validate+0x200>
    4614:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4618:	ldrd	r2, [r3, #24]
    461c:	cmp	r2, #0
    4620:	sbcs	r3, r3, #0
    4624:	bge	463c <coda_type_text_validate+0x170>
    4628:	ldr	r1, [pc, #200]	; 46f8 <coda_type_text_validate+0x22c>
    462c:	ldr	r0, [pc, #184]	; 46ec <coda_type_text_validate+0x220>
    4630:	bl	0 <coda_set_error>
    4634:	mvn	r3, #0
    4638:	b	46d0 <coda_type_text_validate+0x204>
    463c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4640:	ldrd	r2, [r3, #24]
    4644:	lsr	r4, r2, #3
    4648:	orr	r4, r4, r3, lsl #29
    464c:	asr	r5, r3, #3
    4650:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4654:	ldr	r3, [r3, #40]	; 0x28
    4658:	mov	r0, r3
    465c:	bl	0 <strlen>
    4660:	mov	r3, r0
    4664:	mov	r2, r3
    4668:	mov	r3, #0
    466c:	cmp	r5, r3
    4670:	cmpeq	r4, r2
    4674:	beq	46cc <coda_type_text_validate+0x200>
    4678:	ldr	r3, [fp, #-48]	; 0xffffffd0
    467c:	ldrd	r2, [r3, #24]
    4680:	lsr	r6, r2, #3
    4684:	orr	r6, r6, r3, lsl #29
    4688:	asr	r7, r3, #3
    468c:	sub	r3, fp, #44	; 0x2c
    4690:	mov	r2, r3
    4694:	mov	r0, r6
    4698:	mov	r1, r7
    469c:	bl	0 <coda_str64>
    46a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    46a4:	ldr	r3, [r3, #40]	; 0x28
    46a8:	mov	r0, r3
    46ac:	bl	0 <strlen>
    46b0:	mov	r2, r0
    46b4:	sub	r3, fp, #44	; 0x2c
    46b8:	ldr	r1, [pc, #60]	; 46fc <coda_type_text_validate+0x230>
    46bc:	ldr	r0, [pc, #40]	; 46ec <coda_type_text_validate+0x220>
    46c0:	bl	0 <coda_set_error>
    46c4:	mvn	r3, #0
    46c8:	b	46d0 <coda_type_text_validate+0x204>
    46cc:	mov	r3, #0
    46d0:	mov	r0, r3
    46d4:	sub	sp, fp, #20
    46d8:	pop	{r4, r5, r6, r7, fp, pc}
    46dc:	.word	0x00000804
    46e0:	.word	0x00000028
    46e4:	.word	0x000001f0
    46e8:	.word	0x00000f34
    46ec:	.word	0xfffffe70
    46f0:	.word	0x00000f6c
    46f4:	.word	0x00000fa4
    46f8:	.word	0x00000fe4
    46fc:	.word	0x00001028

00004700 <coda_type_raw_new>:
    4700:	push	{fp, lr}
    4704:	add	fp, sp, #4
    4708:	sub	sp, sp, #24
    470c:	str	r0, [fp, #-16]
    4710:	mov	r0, #48	; 0x30
    4714:	bl	0 <malloc>
    4718:	mov	r3, r0
    471c:	str	r3, [fp, #-8]
    4720:	ldr	r3, [fp, #-8]
    4724:	cmp	r3, #0
    4728:	bne	4750 <coda_type_raw_new+0x50>
    472c:	ldr	r3, [pc, #180]	; 47e8 <coda_type_raw_new+0xe8>
    4730:	str	r3, [sp]
    4734:	ldr	r3, [pc, #176]	; 47ec <coda_type_raw_new+0xec>
    4738:	mov	r2, #48	; 0x30
    473c:	ldr	r1, [pc, #172]	; 47f0 <coda_type_raw_new+0xf0>
    4740:	mvn	r0, #0
    4744:	bl	0 <coda_set_error>
    4748:	mov	r3, #0
    474c:	b	47dc <coda_type_raw_new+0xdc>
    4750:	ldr	r3, [fp, #-8]
    4754:	ldr	r2, [fp, #-16]
    4758:	str	r2, [r3]
    475c:	ldr	r3, [fp, #-8]
    4760:	mov	r2, #0
    4764:	str	r2, [r3, #4]
    4768:	ldr	r3, [fp, #-8]
    476c:	mov	r2, #5
    4770:	str	r2, [r3, #8]
    4774:	ldr	r3, [fp, #-8]
    4778:	mov	r2, #12
    477c:	str	r2, [r3, #12]
    4780:	ldr	r3, [fp, #-8]
    4784:	mov	r2, #0
    4788:	str	r2, [r3, #16]
    478c:	ldr	r3, [fp, #-8]
    4790:	mov	r2, #0
    4794:	str	r2, [r3, #20]
    4798:	ldr	r1, [fp, #-8]
    479c:	mvn	r2, #0
    47a0:	mvn	r3, #0
    47a4:	strd	r2, [r1, #24]
    47a8:	ldr	r3, [fp, #-8]
    47ac:	mov	r2, #0
    47b0:	str	r2, [r3, #32]
    47b4:	ldr	r3, [fp, #-8]
    47b8:	mov	r2, #0
    47bc:	str	r2, [r3, #36]	; 0x24
    47c0:	ldr	r3, [fp, #-8]
    47c4:	mvn	r2, #0
    47c8:	str	r2, [r3, #40]	; 0x28
    47cc:	ldr	r3, [fp, #-8]
    47d0:	mov	r2, #0
    47d4:	str	r2, [r3, #44]	; 0x2c
    47d8:	ldr	r3, [fp, #-8]
    47dc:	mov	r0, r3
    47e0:	sub	sp, fp, #4
    47e4:	pop	{fp, pc}
    47e8:	.word	0x0000083a
    47ec:	.word	0x00000028
    47f0:	.word	0x00000070

000047f4 <coda_type_raw_set_fixed_value>:
    47f4:	push	{fp, lr}
    47f8:	add	fp, sp, #4
    47fc:	sub	sp, sp, #16
    4800:	str	r0, [fp, #-8]
    4804:	str	r1, [fp, #-12]
    4808:	str	r2, [fp, #-16]
    480c:	ldr	r3, [fp, #-8]
    4810:	cmp	r3, #0
    4814:	bne	4834 <coda_type_raw_set_fixed_value+0x40>
    4818:	mov	r3, #2128	; 0x850
    481c:	ldr	r2, [pc, #272]	; 4934 <coda_type_raw_set_fixed_value+0x140>
    4820:	ldr	r1, [pc, #272]	; 4938 <coda_type_raw_set_fixed_value+0x144>
    4824:	mvn	r0, #99	; 0x63
    4828:	bl	0 <coda_set_error>
    482c:	mvn	r3, #0
    4830:	b	4928 <coda_type_raw_set_fixed_value+0x134>
    4834:	ldr	r3, [fp, #-12]
    4838:	cmp	r3, #0
    483c:	ble	4868 <coda_type_raw_set_fixed_value+0x74>
    4840:	ldr	r3, [fp, #-16]
    4844:	cmp	r3, #0
    4848:	bne	4868 <coda_type_raw_set_fixed_value+0x74>
    484c:	ldr	r3, [pc, #232]	; 493c <coda_type_raw_set_fixed_value+0x148>
    4850:	ldr	r2, [pc, #220]	; 4934 <coda_type_raw_set_fixed_value+0x140>
    4854:	ldr	r1, [pc, #228]	; 4940 <coda_type_raw_set_fixed_value+0x14c>
    4858:	mvn	r0, #99	; 0x63
    485c:	bl	0 <coda_set_error>
    4860:	mvn	r3, #0
    4864:	b	4928 <coda_type_raw_set_fixed_value+0x134>
    4868:	ldr	r3, [fp, #-8]
    486c:	ldr	r3, [r3, #44]	; 0x2c
    4870:	cmp	r3, #0
    4874:	bne	4888 <coda_type_raw_set_fixed_value+0x94>
    4878:	ldr	r3, [fp, #-8]
    487c:	ldr	r3, [r3, #40]	; 0x28
    4880:	cmp	r3, #0
    4884:	blt	489c <coda_type_raw_set_fixed_value+0xa8>
    4888:	ldr	r1, [pc, #180]	; 4944 <coda_type_raw_set_fixed_value+0x150>
    488c:	ldr	r0, [pc, #180]	; 4948 <coda_type_raw_set_fixed_value+0x154>
    4890:	bl	0 <coda_set_error>
    4894:	mvn	r3, #0
    4898:	b	4928 <coda_type_raw_set_fixed_value+0x134>
    489c:	ldr	r3, [fp, #-12]
    48a0:	cmp	r3, #0
    48a4:	ble	4918 <coda_type_raw_set_fixed_value+0x124>
    48a8:	ldr	r3, [fp, #-12]
    48ac:	mov	r0, r3
    48b0:	bl	0 <malloc>
    48b4:	mov	r3, r0
    48b8:	mov	r2, r3
    48bc:	ldr	r3, [fp, #-8]
    48c0:	str	r2, [r3, #44]	; 0x2c
    48c4:	ldr	r3, [fp, #-8]
    48c8:	ldr	r3, [r3, #44]	; 0x2c
    48cc:	cmp	r3, #0
    48d0:	bne	48f0 <coda_type_raw_set_fixed_value+0xfc>
    48d4:	ldr	r3, [pc, #112]	; 494c <coda_type_raw_set_fixed_value+0x158>
    48d8:	ldr	r2, [pc, #84]	; 4934 <coda_type_raw_set_fixed_value+0x140>
    48dc:	ldr	r1, [pc, #108]	; 4950 <coda_type_raw_set_fixed_value+0x15c>
    48e0:	mvn	r0, #0
    48e4:	bl	0 <coda_set_error>
    48e8:	mvn	r3, #0
    48ec:	b	4928 <coda_type_raw_set_fixed_value+0x134>
    48f0:	ldr	r3, [fp, #-8]
    48f4:	ldr	r3, [r3, #44]	; 0x2c
    48f8:	ldr	r2, [fp, #-12]
    48fc:	ldr	r1, [fp, #-16]
    4900:	mov	r0, r3
    4904:	bl	0 <memcpy>
    4908:	ldr	r3, [fp, #-8]
    490c:	ldr	r2, [fp, #-12]
    4910:	str	r2, [r3, #40]	; 0x28
    4914:	b	4924 <coda_type_raw_set_fixed_value+0x130>
    4918:	ldr	r3, [fp, #-8]
    491c:	mov	r2, #0
    4920:	str	r2, [r3, #40]	; 0x28
    4924:	mov	r3, #0
    4928:	mov	r0, r3
    492c:	sub	sp, fp, #4
    4930:	pop	{fp, pc}
    4934:	.word	0x00000028
    4938:	.word	0x000001f0
    493c:	.word	0x00000855
    4940:	.word	0x00000e84
    4944:	.word	0x00000eac
    4948:	.word	0xfffffe70
    494c:	.word	0x00000863
    4950:	.word	0x000000c8

00004954 <coda_type_raw_validate>:
    4954:	push	{r4, r5, fp, lr}
    4958:	add	fp, sp, #12
    495c:	sub	sp, sp, #40	; 0x28
    4960:	str	r0, [fp, #-48]	; 0xffffffd0
    4964:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4968:	cmp	r1, #0
    496c:	bne	498c <coda_type_raw_validate+0x38>
    4970:	ldr	r3, [pc, #344]	; 4ad0 <coda_type_raw_validate+0x17c>
    4974:	ldr	r2, [pc, #344]	; 4ad4 <coda_type_raw_validate+0x180>
    4978:	ldr	r1, [pc, #344]	; 4ad8 <coda_type_raw_validate+0x184>
    497c:	mvn	r0, #99	; 0x63
    4980:	bl	0 <coda_set_error>
    4984:	mvn	r3, #0
    4988:	b	4ac4 <coda_type_raw_validate+0x170>
    498c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4990:	ldr	r1, [r1]
    4994:	cmp	r1, #0
    4998:	beq	49ac <coda_type_raw_validate+0x58>
    499c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49a0:	ldr	r1, [r1]
    49a4:	cmp	r1, #1
    49a8:	bne	49e4 <coda_type_raw_validate+0x90>
    49ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49b0:	ldr	r1, [r1, #32]
    49b4:	cmp	r1, #0
    49b8:	bne	49e4 <coda_type_raw_validate+0x90>
    49bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49c0:	ldrd	r0, [r1, #24]
    49c4:	cmp	r0, #0
    49c8:	sbcs	r1, r1, #0
    49cc:	bge	49e4 <coda_type_raw_validate+0x90>
    49d0:	ldr	r1, [pc, #260]	; 4adc <coda_type_raw_validate+0x188>
    49d4:	ldr	r0, [pc, #260]	; 4ae0 <coda_type_raw_validate+0x18c>
    49d8:	bl	0 <coda_set_error>
    49dc:	mvn	r3, #0
    49e0:	b	4ac4 <coda_type_raw_validate+0x170>
    49e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49e8:	ldr	r1, [r1, #44]	; 0x2c
    49ec:	cmp	r1, #0
    49f0:	beq	4ac0 <coda_type_raw_validate+0x16c>
    49f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49f8:	ldrd	r0, [r1, #24]
    49fc:	cmp	r0, #0
    4a00:	sbcs	r1, r1, #0
    4a04:	bge	4a1c <coda_type_raw_validate+0xc8>
    4a08:	ldr	r1, [pc, #212]	; 4ae4 <coda_type_raw_validate+0x190>
    4a0c:	ldr	r0, [pc, #204]	; 4ae0 <coda_type_raw_validate+0x18c>
    4a10:	bl	0 <coda_set_error>
    4a14:	mvn	r3, #0
    4a18:	b	4ac4 <coda_type_raw_validate+0x170>
    4a1c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4a20:	ldrd	r0, [r1, #24]
    4a24:	lsr	r2, r0, #3
    4a28:	orr	r2, r2, r1, lsl #29
    4a2c:	asr	r3, r1, #3
    4a30:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4a34:	ldrd	r0, [r1, #24]
    4a38:	mov	r4, #7
    4a3c:	mov	r5, #0
    4a40:	and	r0, r0, r4
    4a44:	and	r1, r1, r5
    4a48:	orrs	r1, r0, r1
    4a4c:	beq	4a5c <coda_type_raw_validate+0x108>
    4a50:	mov	r0, #1
    4a54:	mov	r1, #0
    4a58:	b	4a64 <coda_type_raw_validate+0x110>
    4a5c:	mov	r0, #0
    4a60:	mov	r1, #0
    4a64:	adds	r2, r2, r0
    4a68:	adc	r3, r3, r1
    4a6c:	strd	r2, [fp, #-20]	; 0xffffffec
    4a70:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4a74:	ldr	r3, [r3, #40]	; 0x28
    4a78:	mov	r0, r3
    4a7c:	asr	r1, r0, #31
    4a80:	ldrd	r2, [fp, #-20]	; 0xffffffec
    4a84:	cmp	r1, r3
    4a88:	cmpeq	r0, r2
    4a8c:	beq	4ac0 <coda_type_raw_validate+0x16c>
    4a90:	sub	r3, fp, #44	; 0x2c
    4a94:	mov	r2, r3
    4a98:	ldrd	r0, [fp, #-20]	; 0xffffffec
    4a9c:	bl	0 <coda_str64>
    4aa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4aa4:	ldr	r2, [r3, #40]	; 0x28
    4aa8:	sub	r3, fp, #44	; 0x2c
    4aac:	ldr	r1, [pc, #52]	; 4ae8 <coda_type_raw_validate+0x194>
    4ab0:	ldr	r0, [pc, #40]	; 4ae0 <coda_type_raw_validate+0x18c>
    4ab4:	bl	0 <coda_set_error>
    4ab8:	mvn	r3, #0
    4abc:	b	4ac4 <coda_type_raw_validate+0x170>
    4ac0:	mov	r3, #0
    4ac4:	mov	r0, r3
    4ac8:	sub	sp, fp, #12
    4acc:	pop	{r4, r5, fp, pc}
    4ad0:	.word	0x00000875
    4ad4:	.word	0x00000028
    4ad8:	.word	0x000001f0
    4adc:	.word	0x00001074
    4ae0:	.word	0xfffffe70
    4ae4:	.word	0x000010ac
    4ae8:	.word	0x000010f0

00004aec <coda_type_raw_file_singleton>:
    4aec:	push	{fp, lr}
    4af0:	add	fp, sp, #4
    4af4:	sub	sp, sp, #8
    4af8:	bl	0 <__aeabi_read_tp>
    4afc:	mov	r2, r0
    4b00:	ldr	r3, [pc, #180]	; 4bbc <coda_type_raw_file_singleton+0xd0>
    4b04:	ldr	r3, [r2, r3]
    4b08:	cmp	r3, #0
    4b0c:	bne	4ba0 <coda_type_raw_file_singleton+0xb4>
    4b10:	mov	r0, #1
    4b14:	bl	4700 <coda_type_raw_new>
    4b18:	str	r0, [fp, #-8]
    4b1c:	ldr	r3, [fp, #-8]
    4b20:	cmp	r3, #0
    4b24:	bne	4b30 <coda_type_raw_file_singleton+0x44>
    4b28:	mov	r3, #0
    4b2c:	b	4bb0 <coda_type_raw_file_singleton+0xc4>
    4b30:	sub	r3, fp, #12
    4b34:	mov	r1, r3
    4b38:	ldr	r0, [pc, #128]	; 4bc0 <coda_type_raw_file_singleton+0xd4>
    4b3c:	bl	0 <coda_expression_from_string>
    4b40:	mov	r3, r0
    4b44:	cmp	r3, #0
    4b48:	beq	4b54 <coda_type_raw_file_singleton+0x68>
    4b4c:	ldr	r0, [fp, #-8]
    4b50:	bl	f5c <raw_delete>
    4b54:	ldr	r3, [fp, #-12]
    4b58:	mov	r1, r3
    4b5c:	ldr	r0, [fp, #-8]
    4b60:	bl	1960 <coda_type_set_byte_size_expression>
    4b64:	mov	r3, r0
    4b68:	cmp	r3, #0
    4b6c:	beq	4b8c <coda_type_raw_file_singleton+0xa0>
    4b70:	ldr	r3, [fp, #-12]
    4b74:	mov	r0, r3
    4b78:	bl	0 <coda_expression_delete>
    4b7c:	ldr	r0, [fp, #-8]
    4b80:	bl	f5c <raw_delete>
    4b84:	mov	r3, #0
    4b88:	b	4bb0 <coda_type_raw_file_singleton+0xc4>
    4b8c:	bl	0 <__aeabi_read_tp>
    4b90:	mov	r1, r0
    4b94:	ldr	r2, [pc, #32]	; 4bbc <coda_type_raw_file_singleton+0xd0>
    4b98:	ldr	r3, [fp, #-8]
    4b9c:	str	r3, [r1, r2]
    4ba0:	bl	0 <__aeabi_read_tp>
    4ba4:	mov	r2, r0
    4ba8:	ldr	r3, [pc, #12]	; 4bbc <coda_type_raw_file_singleton+0xd0>
    4bac:	ldr	r3, [r2, r3]
    4bb0:	mov	r0, r3
    4bb4:	sub	sp, fp, #4
    4bb8:	pop	{fp, pc}
    4bbc:	.word	0x00000000
    4bc0:	.word	0x00001140

00004bc4 <coda_type_no_data_singleton>:
    4bc4:	push	{fp, lr}
    4bc8:	add	fp, sp, #4
    4bcc:	sub	sp, sp, #24
    4bd0:	str	r0, [fp, #-16]
    4bd4:	ldr	r3, [fp, #-16]
    4bd8:	cmp	r3, #10
    4bdc:	bls	4bf4 <coda_type_no_data_singleton+0x30>
    4be0:	ldr	r3, [pc, #460]	; 4db4 <coda_type_no_data_singleton+0x1f0>
    4be4:	ldr	r2, [pc, #460]	; 4db8 <coda_type_no_data_singleton+0x1f4>
    4be8:	ldr	r1, [pc, #460]	; 4dbc <coda_type_no_data_singleton+0x1f8>
    4bec:	ldr	r0, [pc, #460]	; 4dc0 <coda_type_no_data_singleton+0x1fc>
    4bf0:	bl	0 <__assert_fail>
    4bf4:	bl	0 <__aeabi_read_tp>
    4bf8:	mov	r1, r0
    4bfc:	ldr	r2, [pc, #448]	; 4dc4 <coda_type_no_data_singleton+0x200>
    4c00:	ldr	r3, [fp, #-16]
    4c04:	lsl	r3, r3, #2
    4c08:	add	r3, r3, r1
    4c0c:	add	r3, r3, r2
    4c10:	ldr	r3, [r3]
    4c14:	cmp	r3, #0
    4c18:	bne	4d88 <coda_type_no_data_singleton+0x1c4>
    4c1c:	mov	r0, #56	; 0x38
    4c20:	bl	0 <malloc>
    4c24:	mov	r3, r0
    4c28:	str	r3, [fp, #-8]
    4c2c:	ldr	r3, [fp, #-8]
    4c30:	cmp	r3, #0
    4c34:	bne	4c5c <coda_type_no_data_singleton+0x98>
    4c38:	ldr	r3, [pc, #392]	; 4dc8 <coda_type_no_data_singleton+0x204>
    4c3c:	str	r3, [sp]
    4c40:	ldr	r3, [pc, #372]	; 4dbc <coda_type_no_data_singleton+0x1f8>
    4c44:	mov	r2, #56	; 0x38
    4c48:	ldr	r1, [pc, #380]	; 4dcc <coda_type_no_data_singleton+0x208>
    4c4c:	mvn	r0, #0
    4c50:	bl	0 <coda_set_error>
    4c54:	mov	r3, #0
    4c58:	b	4da8 <coda_type_no_data_singleton+0x1e4>
    4c5c:	ldr	r3, [fp, #-8]
    4c60:	ldr	r2, [fp, #-16]
    4c64:	str	r2, [r3]
    4c68:	ldr	r3, [fp, #-8]
    4c6c:	mov	r2, #0
    4c70:	str	r2, [r3, #4]
    4c74:	ldr	r3, [fp, #-8]
    4c78:	mov	r2, #6
    4c7c:	str	r2, [r3, #8]
    4c80:	ldr	r3, [fp, #-8]
    4c84:	mvn	r2, #0
    4c88:	str	r2, [r3, #12]
    4c8c:	ldr	r3, [fp, #-8]
    4c90:	mov	r2, #0
    4c94:	str	r2, [r3, #16]
    4c98:	ldr	r3, [fp, #-8]
    4c9c:	mov	r2, #0
    4ca0:	str	r2, [r3, #20]
    4ca4:	ldr	r1, [fp, #-8]
    4ca8:	mov	r2, #0
    4cac:	mov	r3, #0
    4cb0:	strd	r2, [r1, #24]
    4cb4:	ldr	r3, [fp, #-8]
    4cb8:	mov	r2, #0
    4cbc:	str	r2, [r3, #32]
    4cc0:	ldr	r3, [fp, #-8]
    4cc4:	mov	r2, #0
    4cc8:	str	r2, [r3, #36]	; 0x24
    4ccc:	ldr	r3, [fp, #-8]
    4cd0:	mov	r2, #0
    4cd4:	str	r2, [r3, #40]	; 0x28
    4cd8:	ldr	r3, [fp, #-8]
    4cdc:	mov	r2, #0
    4ce0:	str	r2, [r3, #44]	; 0x2c
    4ce4:	ldr	r3, [fp, #-8]
    4ce8:	mov	r2, #0
    4cec:	str	r2, [r3, #48]	; 0x30
    4cf0:	ldr	r3, [fp, #-8]
    4cf4:	mov	r2, #0
    4cf8:	str	r2, [r3, #52]	; 0x34
    4cfc:	ldr	r0, [fp, #-16]
    4d00:	bl	4700 <coda_type_raw_new>
    4d04:	mov	r2, r0
    4d08:	ldr	r3, [fp, #-8]
    4d0c:	str	r2, [r3, #44]	; 0x2c
    4d10:	ldr	r3, [fp, #-8]
    4d14:	ldr	r3, [r3, #44]	; 0x2c
    4d18:	cmp	r3, #0
    4d1c:	bne	4d30 <coda_type_no_data_singleton+0x16c>
    4d20:	ldr	r0, [fp, #-8]
    4d24:	bl	1030 <special_delete>
    4d28:	mov	r3, #0
    4d2c:	b	4da8 <coda_type_no_data_singleton+0x1e4>
    4d30:	ldr	r3, [fp, #-8]
    4d34:	ldr	r1, [r3, #44]	; 0x2c
    4d38:	mov	r2, #0
    4d3c:	mov	r3, #0
    4d40:	mov	r0, r1
    4d44:	bl	1624 <coda_type_set_bit_size>
    4d48:	mov	r3, r0
    4d4c:	cmp	r3, #0
    4d50:	beq	4d64 <coda_type_no_data_singleton+0x1a0>
    4d54:	ldr	r0, [fp, #-8]
    4d58:	bl	1030 <special_delete>
    4d5c:	mov	r3, #0
    4d60:	b	4da8 <coda_type_no_data_singleton+0x1e4>
    4d64:	bl	0 <__aeabi_read_tp>
    4d68:	mov	r1, r0
    4d6c:	ldr	r2, [pc, #80]	; 4dc4 <coda_type_no_data_singleton+0x200>
    4d70:	ldr	r3, [fp, #-16]
    4d74:	lsl	r3, r3, #2
    4d78:	add	r3, r3, r1
    4d7c:	add	r3, r3, r2
    4d80:	ldr	r2, [fp, #-8]
    4d84:	str	r2, [r3]
    4d88:	bl	0 <__aeabi_read_tp>
    4d8c:	mov	r1, r0
    4d90:	ldr	r2, [pc, #44]	; 4dc4 <coda_type_no_data_singleton+0x200>
    4d94:	ldr	r3, [fp, #-16]
    4d98:	lsl	r3, r3, #2
    4d9c:	add	r3, r3, r1
    4da0:	add	r3, r3, r2
    4da4:	ldr	r3, [r3]
    4da8:	mov	r0, r3
    4dac:	sub	sp, fp, #4
    4db0:	pop	{fp, pc}
    4db4:	.word	0x00001a7c
    4db8:	.word	0x000008bb
    4dbc:	.word	0x00000028
    4dc0:	.word	0x0000114c
    4dc4:	.word	0x00000000
    4dc8:	.word	0x000008c5
    4dcc:	.word	0x00000070

00004dd0 <coda_type_vsf_integer_new>:
    4dd0:	push	{fp, lr}
    4dd4:	add	fp, sp, #4
    4dd8:	sub	sp, sp, #24
    4ddc:	str	r0, [fp, #-16]
    4de0:	mov	r0, #56	; 0x38
    4de4:	bl	0 <malloc>
    4de8:	mov	r3, r0
    4dec:	str	r3, [fp, #-8]
    4df0:	ldr	r3, [fp, #-8]
    4df4:	cmp	r3, #0
    4df8:	bne	4e20 <coda_type_vsf_integer_new+0x50>
    4dfc:	mov	r3, #2288	; 0x8f0
    4e00:	str	r3, [sp]
    4e04:	ldr	r3, [pc, #236]	; 4ef8 <coda_type_vsf_integer_new+0x128>
    4e08:	mov	r2, #56	; 0x38
    4e0c:	ldr	r1, [pc, #232]	; 4efc <coda_type_vsf_integer_new+0x12c>
    4e10:	mvn	r0, #0
    4e14:	bl	0 <coda_set_error>
    4e18:	mov	r3, #0
    4e1c:	b	4eec <coda_type_vsf_integer_new+0x11c>
    4e20:	ldr	r3, [fp, #-8]
    4e24:	ldr	r2, [fp, #-16]
    4e28:	str	r2, [r3]
    4e2c:	ldr	r3, [fp, #-8]
    4e30:	mov	r2, #0
    4e34:	str	r2, [r3, #4]
    4e38:	ldr	r3, [fp, #-8]
    4e3c:	mov	r2, #6
    4e40:	str	r2, [r3, #8]
    4e44:	ldr	r3, [fp, #-8]
    4e48:	mov	r2, #9
    4e4c:	str	r2, [r3, #12]
    4e50:	ldr	r3, [fp, #-8]
    4e54:	mov	r2, #0
    4e58:	str	r2, [r3, #16]
    4e5c:	ldr	r3, [fp, #-8]
    4e60:	mov	r2, #0
    4e64:	str	r2, [r3, #20]
    4e68:	ldr	r1, [fp, #-8]
    4e6c:	mvn	r2, #0
    4e70:	mvn	r3, #0
    4e74:	strd	r2, [r1, #24]
    4e78:	ldr	r3, [fp, #-8]
    4e7c:	mov	r2, #0
    4e80:	str	r2, [r3, #32]
    4e84:	ldr	r3, [fp, #-8]
    4e88:	mov	r2, #0
    4e8c:	str	r2, [r3, #36]	; 0x24
    4e90:	ldr	r3, [fp, #-8]
    4e94:	mov	r2, #1
    4e98:	str	r2, [r3, #40]	; 0x28
    4e9c:	ldr	r3, [fp, #-8]
    4ea0:	mov	r2, #0
    4ea4:	str	r2, [r3, #44]	; 0x2c
    4ea8:	ldr	r3, [fp, #-8]
    4eac:	mov	r2, #0
    4eb0:	str	r2, [r3, #48]	; 0x30
    4eb4:	ldr	r3, [fp, #-8]
    4eb8:	mov	r2, #0
    4ebc:	str	r2, [r3, #52]	; 0x34
    4ec0:	ldr	r0, [fp, #-16]
    4ec4:	bl	2310 <coda_type_record_new>
    4ec8:	mov	r2, r0
    4ecc:	ldr	r3, [fp, #-8]
    4ed0:	str	r2, [r3, #44]	; 0x2c
    4ed4:	ldr	r3, [fp, #-8]
    4ed8:	ldr	r3, [r3, #44]	; 0x2c
    4edc:	ldr	r1, [pc, #28]	; 4f00 <coda_type_vsf_integer_new+0x130>
    4ee0:	mov	r0, r3
    4ee4:	bl	1514 <coda_type_set_description>
    4ee8:	ldr	r3, [fp, #-8]
    4eec:	mov	r0, r3
    4ef0:	sub	sp, fp, #4
    4ef4:	pop	{fp, pc}
    4ef8:	.word	0x00000028
    4efc:	.word	0x00000070
    4f00:	.word	0x0000116c

00004f04 <coda_type_vsf_integer_set_type>:
    4f04:	push	{r4, fp, lr}
    4f08:	add	fp, sp, #8
    4f0c:	sub	sp, sp, #20
    4f10:	str	r0, [fp, #-24]	; 0xffffffe8
    4f14:	str	r1, [fp, #-28]	; 0xffffffe4
    4f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4f1c:	ldr	r2, [r3]
    4f20:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4f24:	ldr	r3, [r3]
    4f28:	cmp	r2, r3
    4f2c:	beq	4f70 <coda_type_vsf_integer_set_type+0x6c>
    4f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4f34:	ldr	r3, [r3]
    4f38:	mov	r0, r3
    4f3c:	bl	5d7c <coda_type_get_format_name>
    4f40:	mov	r4, r0
    4f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4f48:	ldr	r3, [r3]
    4f4c:	mov	r0, r3
    4f50:	bl	5d7c <coda_type_get_format_name>
    4f54:	mov	r3, r0
    4f58:	mov	r2, r4
    4f5c:	ldr	r1, [pc, #208]	; 5034 <coda_type_vsf_integer_set_type+0x130>
    4f60:	ldr	r0, [pc, #208]	; 5038 <coda_type_vsf_integer_set_type+0x134>
    4f64:	bl	0 <coda_set_error>
    4f68:	mvn	r3, #0
    4f6c:	b	5028 <coda_type_vsf_integer_set_type+0x124>
    4f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4f74:	ldr	r3, [r3, #44]	; 0x2c
    4f78:	ldr	r3, [r3, #48]	; 0x30
    4f7c:	cmp	r3, #1
    4f80:	beq	4f98 <coda_type_vsf_integer_set_type+0x94>
    4f84:	ldr	r1, [pc, #176]	; 503c <coda_type_vsf_integer_set_type+0x138>
    4f88:	ldr	r0, [pc, #168]	; 5038 <coda_type_vsf_integer_set_type+0x134>
    4f8c:	bl	0 <coda_set_error>
    4f90:	mvn	r3, #0
    4f94:	b	5028 <coda_type_vsf_integer_set_type+0x124>
    4f98:	ldr	r0, [pc, #160]	; 5040 <coda_type_vsf_integer_set_type+0x13c>
    4f9c:	bl	1c5c <coda_type_record_field_new>
    4fa0:	str	r0, [fp, #-16]
    4fa4:	ldr	r3, [fp, #-16]
    4fa8:	cmp	r3, #0
    4fac:	bne	4fb8 <coda_type_vsf_integer_set_type+0xb4>
    4fb0:	mvn	r3, #0
    4fb4:	b	5028 <coda_type_vsf_integer_set_type+0x124>
    4fb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4fbc:	ldr	r0, [fp, #-16]
    4fc0:	bl	1ee4 <coda_type_record_field_set_type>
    4fc4:	mov	r3, r0
    4fc8:	cmp	r3, #0
    4fcc:	beq	4fe0 <coda_type_vsf_integer_set_type+0xdc>
    4fd0:	ldr	r0, [fp, #-16]
    4fd4:	bl	9e0 <coda_type_record_field_delete>
    4fd8:	mvn	r3, #0
    4fdc:	b	5028 <coda_type_vsf_integer_set_type+0x124>
    4fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4fe4:	ldr	r3, [r3, #44]	; 0x2c
    4fe8:	ldr	r1, [fp, #-16]
    4fec:	mov	r0, r3
    4ff0:	bl	2d70 <coda_type_record_add_field>
    4ff4:	mov	r3, r0
    4ff8:	cmp	r3, #0
    4ffc:	beq	5010 <coda_type_vsf_integer_set_type+0x10c>
    5000:	ldr	r0, [fp, #-16]
    5004:	bl	9e0 <coda_type_record_field_delete>
    5008:	mvn	r3, #0
    500c:	b	5028 <coda_type_vsf_integer_set_type+0x124>
    5010:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5014:	ldr	r3, [r3, #44]	; 0x2c
    5018:	ldrd	r2, [r3, #24]
    501c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5020:	strd	r2, [r1, #24]
    5024:	mov	r3, #0
    5028:	mov	r0, r3
    502c:	sub	sp, fp, #8
    5030:	pop	{r4, fp, pc}
    5034:	.word	0x0000118c
    5038:	.word	0xfffffe70
    503c:	.word	0x000011d4
    5040:	.word	0x0000120c

00005044 <coda_type_vsf_integer_set_scale_factor>:
    5044:	push	{r4, fp, lr}
    5048:	add	fp, sp, #8
    504c:	sub	sp, sp, #20
    5050:	str	r0, [fp, #-24]	; 0xffffffe8
    5054:	str	r1, [fp, #-28]	; 0xffffffe4
    5058:	ldr	r3, [fp, #-24]	; 0xffffffe8
    505c:	ldr	r2, [r3]
    5060:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5064:	ldr	r3, [r3]
    5068:	cmp	r2, r3
    506c:	beq	50b0 <coda_type_vsf_integer_set_scale_factor+0x6c>
    5070:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5074:	ldr	r3, [r3]
    5078:	mov	r0, r3
    507c:	bl	5d7c <coda_type_get_format_name>
    5080:	mov	r4, r0
    5084:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5088:	ldr	r3, [r3]
    508c:	mov	r0, r3
    5090:	bl	5d7c <coda_type_get_format_name>
    5094:	mov	r3, r0
    5098:	mov	r2, r4
    509c:	ldr	r1, [pc, #304]	; 51d4 <coda_type_vsf_integer_set_scale_factor+0x190>
    50a0:	ldr	r0, [pc, #304]	; 51d8 <coda_type_vsf_integer_set_scale_factor+0x194>
    50a4:	bl	0 <coda_set_error>
    50a8:	mvn	r3, #0
    50ac:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    50b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    50b4:	ldr	r3, [r3, #44]	; 0x2c
    50b8:	ldr	r3, [r3, #48]	; 0x30
    50bc:	cmp	r3, #0
    50c0:	beq	50d8 <coda_type_vsf_integer_set_scale_factor+0x94>
    50c4:	ldr	r1, [pc, #272]	; 51dc <coda_type_vsf_integer_set_scale_factor+0x198>
    50c8:	ldr	r0, [pc, #264]	; 51d8 <coda_type_vsf_integer_set_scale_factor+0x194>
    50cc:	bl	0 <coda_set_error>
    50d0:	mvn	r3, #0
    50d4:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    50d8:	sub	r3, fp, #20
    50dc:	mov	r1, r3
    50e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    50e4:	bl	626c <coda_type_get_read_type>
    50e8:	mov	r3, r0
    50ec:	cmp	r3, #0
    50f0:	beq	50fc <coda_type_vsf_integer_set_scale_factor+0xb8>
    50f4:	mvn	r3, #0
    50f8:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    50fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    5100:	add	r3, r3, #0
    5104:	cmp	r3, #4
    5108:	bls	5134 <coda_type_vsf_integer_set_scale_factor+0xf0>
    510c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5110:	mov	r0, r3
    5114:	bl	5efc <coda_type_get_native_type_name>
    5118:	mov	r3, r0
    511c:	mov	r2, r3
    5120:	ldr	r1, [pc, #184]	; 51e0 <coda_type_vsf_integer_set_scale_factor+0x19c>
    5124:	ldr	r0, [pc, #172]	; 51d8 <coda_type_vsf_integer_set_scale_factor+0x194>
    5128:	bl	0 <coda_set_error>
    512c:	mvn	r3, #0
    5130:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    5134:	nop			; (mov r0, r0)
    5138:	ldr	r0, [pc, #164]	; 51e4 <coda_type_vsf_integer_set_scale_factor+0x1a0>
    513c:	bl	1c5c <coda_type_record_field_new>
    5140:	str	r0, [fp, #-16]
    5144:	ldr	r3, [fp, #-16]
    5148:	cmp	r3, #0
    514c:	bne	5158 <coda_type_vsf_integer_set_scale_factor+0x114>
    5150:	mvn	r3, #0
    5154:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    5158:	ldr	r1, [fp, #-28]	; 0xffffffe4
    515c:	ldr	r0, [fp, #-16]
    5160:	bl	1ee4 <coda_type_record_field_set_type>
    5164:	mov	r3, r0
    5168:	cmp	r3, #0
    516c:	beq	5180 <coda_type_vsf_integer_set_scale_factor+0x13c>
    5170:	ldr	r0, [fp, #-16]
    5174:	bl	9e0 <coda_type_record_field_delete>
    5178:	mvn	r3, #0
    517c:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    5180:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5184:	ldr	r3, [r3, #44]	; 0x2c
    5188:	ldr	r1, [fp, #-16]
    518c:	mov	r0, r3
    5190:	bl	2d70 <coda_type_record_add_field>
    5194:	mov	r3, r0
    5198:	cmp	r3, #0
    519c:	beq	51b0 <coda_type_vsf_integer_set_scale_factor+0x16c>
    51a0:	ldr	r0, [fp, #-16]
    51a4:	bl	9e0 <coda_type_record_field_delete>
    51a8:	mvn	r3, #0
    51ac:	b	51c8 <coda_type_vsf_integer_set_scale_factor+0x184>
    51b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    51b4:	ldr	r3, [r3, #44]	; 0x2c
    51b8:	ldrd	r2, [r3, #24]
    51bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    51c0:	strd	r2, [r1, #24]
    51c4:	mov	r3, #0
    51c8:	mov	r0, r3
    51cc:	sub	sp, fp, #8
    51d0:	pop	{r4, fp, pc}
    51d4:	.word	0x00001214
    51d8:	.word	0xfffffe70
    51dc:	.word	0x00001260
    51e0:	.word	0x0000129c
    51e4:	.word	0x000012d0

000051e8 <coda_type_vsf_integer_set_unit>:
    51e8:	push	{fp, lr}
    51ec:	add	fp, sp, #4
    51f0:	sub	sp, sp, #8
    51f4:	str	r0, [fp, #-8]
    51f8:	str	r1, [fp, #-12]
    51fc:	ldr	r3, [fp, #-12]
    5200:	cmp	r3, #0
    5204:	bne	5224 <coda_type_vsf_integer_set_unit+0x3c>
    5208:	ldr	r3, [pc, #140]	; 529c <coda_type_vsf_integer_set_unit+0xb4>
    520c:	ldr	r2, [pc, #140]	; 52a0 <coda_type_vsf_integer_set_unit+0xb8>
    5210:	ldr	r1, [pc, #140]	; 52a4 <coda_type_vsf_integer_set_unit+0xbc>
    5214:	mvn	r0, #99	; 0x63
    5218:	bl	0 <coda_set_error>
    521c:	mvn	r3, #0
    5220:	b	5290 <coda_type_vsf_integer_set_unit+0xa8>
    5224:	ldr	r3, [fp, #-8]
    5228:	ldr	r3, [r3, #48]	; 0x30
    522c:	cmp	r3, #0
    5230:	beq	5248 <coda_type_vsf_integer_set_unit+0x60>
    5234:	ldr	r1, [pc, #108]	; 52a8 <coda_type_vsf_integer_set_unit+0xc0>
    5238:	ldr	r0, [pc, #108]	; 52ac <coda_type_vsf_integer_set_unit+0xc4>
    523c:	bl	0 <coda_set_error>
    5240:	mvn	r3, #0
    5244:	b	5290 <coda_type_vsf_integer_set_unit+0xa8>
    5248:	ldr	r0, [fp, #-12]
    524c:	bl	0 <strdup>
    5250:	mov	r3, r0
    5254:	mov	r2, r3
    5258:	ldr	r3, [fp, #-8]
    525c:	str	r2, [r3, #48]	; 0x30
    5260:	ldr	r3, [fp, #-8]
    5264:	ldr	r3, [r3, #48]	; 0x30
    5268:	cmp	r3, #0
    526c:	bne	528c <coda_type_vsf_integer_set_unit+0xa4>
    5270:	ldr	r3, [pc, #56]	; 52b0 <coda_type_vsf_integer_set_unit+0xc8>
    5274:	ldr	r2, [pc, #36]	; 52a0 <coda_type_vsf_integer_set_unit+0xb8>
    5278:	ldr	r1, [pc, #52]	; 52b4 <coda_type_vsf_integer_set_unit+0xcc>
    527c:	mvn	r0, #0
    5280:	bl	0 <coda_set_error>
    5284:	mvn	r3, #0
    5288:	b	5290 <coda_type_vsf_integer_set_unit+0xa8>
    528c:	mov	r3, #0
    5290:	mov	r0, r3
    5294:	sub	sp, fp, #4
    5298:	pop	{fp, pc}
    529c:	.word	0x0000096c
    52a0:	.word	0x00000028
    52a4:	.word	0x00000aec
    52a8:	.word	0x00000b0c
    52ac:	.word	0xfffffe70
    52b0:	.word	0x00000978
    52b4:	.word	0x000000c8

000052b8 <coda_type_vsf_integer_validate>:
    52b8:	push	{fp, lr}
    52bc:	add	fp, sp, #4
    52c0:	sub	sp, sp, #8
    52c4:	str	r0, [fp, #-8]
    52c8:	ldr	r3, [fp, #-8]
    52cc:	ldr	r3, [r3, #44]	; 0x2c
    52d0:	ldr	r3, [r3, #48]	; 0x30
    52d4:	cmp	r3, #2
    52d8:	beq	52f0 <coda_type_vsf_integer_validate+0x38>
    52dc:	ldr	r1, [pc, #28]	; 5300 <coda_type_vsf_integer_validate+0x48>
    52e0:	ldr	r0, [pc, #28]	; 5304 <coda_type_vsf_integer_validate+0x4c>
    52e4:	bl	0 <coda_set_error>
    52e8:	mvn	r3, #0
    52ec:	b	52f4 <coda_type_vsf_integer_validate+0x3c>
    52f0:	mov	r3, #0
    52f4:	mov	r0, r3
    52f8:	sub	sp, fp, #4
    52fc:	pop	{fp, pc}
    5300:	.word	0x000012e0
    5304:	.word	0xfffffe70

00005308 <coda_type_time_new>:
    5308:	push	{fp, lr}
    530c:	add	fp, sp, #4
    5310:	sub	sp, sp, #24
    5314:	str	r0, [fp, #-16]
    5318:	str	r1, [fp, #-20]	; 0xffffffec
    531c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5320:	cmp	r3, #0
    5324:	bne	5344 <coda_type_time_new+0x3c>
    5328:	ldr	r3, [pc, #336]	; 5480 <coda_type_time_new+0x178>
    532c:	ldr	r2, [pc, #336]	; 5484 <coda_type_time_new+0x17c>
    5330:	ldr	r1, [pc, #336]	; 5488 <coda_type_time_new+0x180>
    5334:	mvn	r0, #99	; 0x63
    5338:	bl	0 <coda_set_error>
    533c:	mov	r3, #0
    5340:	b	5474 <coda_type_time_new+0x16c>
    5344:	mov	r0, #56	; 0x38
    5348:	bl	0 <malloc>
    534c:	mov	r3, r0
    5350:	str	r3, [fp, #-8]
    5354:	ldr	r3, [fp, #-8]
    5358:	cmp	r3, #0
    535c:	bne	5384 <coda_type_time_new+0x7c>
    5360:	ldr	r3, [pc, #292]	; 548c <coda_type_time_new+0x184>
    5364:	str	r3, [sp]
    5368:	ldr	r3, [pc, #276]	; 5484 <coda_type_time_new+0x17c>
    536c:	mov	r2, #56	; 0x38
    5370:	ldr	r1, [pc, #280]	; 5490 <coda_type_time_new+0x188>
    5374:	mvn	r0, #0
    5378:	bl	0 <coda_set_error>
    537c:	mov	r3, #0
    5380:	b	5474 <coda_type_time_new+0x16c>
    5384:	ldr	r3, [fp, #-8]
    5388:	ldr	r2, [fp, #-16]
    538c:	str	r2, [r3]
    5390:	ldr	r3, [fp, #-8]
    5394:	mov	r2, #0
    5398:	str	r2, [r3, #4]
    539c:	ldr	r3, [fp, #-8]
    53a0:	mov	r2, #6
    53a4:	str	r2, [r3, #8]
    53a8:	ldr	r3, [fp, #-8]
    53ac:	mov	r2, #9
    53b0:	str	r2, [r3, #12]
    53b4:	ldr	r3, [fp, #-8]
    53b8:	mov	r2, #0
    53bc:	str	r2, [r3, #16]
    53c0:	ldr	r3, [fp, #-8]
    53c4:	mov	r2, #0
    53c8:	str	r2, [r3, #20]
    53cc:	ldr	r1, [fp, #-8]
    53d0:	mvn	r2, #0
    53d4:	mvn	r3, #0
    53d8:	strd	r2, [r1, #24]
    53dc:	ldr	r3, [fp, #-8]
    53e0:	mov	r2, #0
    53e4:	str	r2, [r3, #32]
    53e8:	ldr	r3, [fp, #-8]
    53ec:	mov	r2, #0
    53f0:	str	r2, [r3, #36]	; 0x24
    53f4:	ldr	r3, [fp, #-8]
    53f8:	mov	r2, #2
    53fc:	str	r2, [r3, #40]	; 0x28
    5400:	ldr	r3, [fp, #-8]
    5404:	mov	r2, #0
    5408:	str	r2, [r3, #44]	; 0x2c
    540c:	ldr	r3, [fp, #-8]
    5410:	mov	r2, #0
    5414:	str	r2, [r3, #48]	; 0x30
    5418:	ldr	r3, [fp, #-8]
    541c:	ldr	r2, [fp, #-20]	; 0xffffffec
    5420:	str	r2, [r3, #52]	; 0x34
    5424:	ldr	r0, [pc, #104]	; 5494 <coda_type_time_new+0x18c>
    5428:	bl	0 <strdup>
    542c:	mov	r3, r0
    5430:	mov	r2, r3
    5434:	ldr	r3, [fp, #-8]
    5438:	str	r2, [r3, #48]	; 0x30
    543c:	ldr	r3, [fp, #-8]
    5440:	ldr	r3, [r3, #48]	; 0x30
    5444:	cmp	r3, #0
    5448:	bne	5470 <coda_type_time_new+0x168>
    544c:	ldr	r3, [pc, #68]	; 5498 <coda_type_time_new+0x190>
    5450:	ldr	r2, [pc, #44]	; 5484 <coda_type_time_new+0x17c>
    5454:	ldr	r1, [pc, #64]	; 549c <coda_type_time_new+0x194>
    5458:	mvn	r0, #0
    545c:	bl	0 <coda_set_error>
    5460:	ldr	r0, [fp, #-8]
    5464:	bl	1030 <special_delete>
    5468:	mov	r3, #0
    546c:	b	5474 <coda_type_time_new+0x16c>
    5470:	ldr	r3, [fp, #-8]
    5474:	mov	r0, r3
    5478:	sub	sp, fp, #4
    547c:	pop	{fp, pc}
    5480:	.word	0x0000098f
    5484:	.word	0x00000028
    5488:	.word	0x0000131c
    548c:	.word	0x00000997
    5490:	.word	0x00000070
    5494:	.word	0x00001340
    5498:	.word	0x000009ac
    549c:	.word	0x000000c8

000054a0 <coda_type_time_add_ascii_float_mapping>:
    54a0:	push	{fp, lr}
    54a4:	add	fp, sp, #4
    54a8:	sub	sp, sp, #96	; 0x60
    54ac:	str	r0, [fp, #-88]	; 0xffffffa8
    54b0:	str	r1, [fp, #-92]	; 0xffffffa4
    54b4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    54b8:	cmp	r3, #0
    54bc:	bne	54dc <coda_type_time_add_ascii_float_mapping+0x3c>
    54c0:	ldr	r3, [pc, #740]	; 57ac <coda_type_time_add_ascii_float_mapping+0x30c>
    54c4:	ldr	r2, [pc, #740]	; 57b0 <coda_type_time_add_ascii_float_mapping+0x310>
    54c8:	ldr	r1, [pc, #740]	; 57b4 <coda_type_time_add_ascii_float_mapping+0x314>
    54cc:	mvn	r0, #99	; 0x63
    54d0:	bl	0 <coda_set_error>
    54d4:	mvn	r3, #0
    54d8:	b	57a0 <coda_type_time_add_ascii_float_mapping+0x300>
    54dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
    54e0:	cmp	r3, #0
    54e4:	bne	5504 <coda_type_time_add_ascii_float_mapping+0x64>
    54e8:	ldr	r3, [pc, #712]	; 57b8 <coda_type_time_add_ascii_float_mapping+0x318>
    54ec:	ldr	r2, [pc, #700]	; 57b0 <coda_type_time_add_ascii_float_mapping+0x310>
    54f0:	ldr	r1, [pc, #708]	; 57bc <coda_type_time_add_ascii_float_mapping+0x31c>
    54f4:	mvn	r0, #99	; 0x63
    54f8:	bl	0 <coda_set_error>
    54fc:	mvn	r3, #0
    5500:	b	57a0 <coda_type_time_add_ascii_float_mapping+0x300>
    5504:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5508:	ldr	r3, [r3, #40]	; 0x28
    550c:	cmp	r3, #2
    5510:	beq	5540 <coda_type_time_add_ascii_float_mapping+0xa0>
    5514:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5518:	ldr	r3, [r3, #40]	; 0x28
    551c:	mov	r0, r3
    5520:	bl	6018 <coda_type_get_special_type_name>
    5524:	mov	r3, r0
    5528:	mov	r2, r3
    552c:	ldr	r1, [pc, #652]	; 57c0 <coda_type_time_add_ascii_float_mapping+0x320>
    5530:	ldr	r0, [pc, #652]	; 57c4 <coda_type_time_add_ascii_float_mapping+0x324>
    5534:	bl	0 <coda_set_error>
    5538:	mvn	r3, #0
    553c:	b	57a0 <coda_type_time_add_ascii_float_mapping+0x300>
    5540:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5544:	ldr	r3, [r3, #44]	; 0x2c
    5548:	cmp	r3, #0
    554c:	bne	5564 <coda_type_time_add_ascii_float_mapping+0xc4>
    5550:	ldr	r1, [pc, #624]	; 57c8 <coda_type_time_add_ascii_float_mapping+0x328>
    5554:	ldr	r0, [pc, #616]	; 57c4 <coda_type_time_add_ascii_float_mapping+0x324>
    5558:	bl	0 <coda_set_error>
    555c:	mvn	r3, #0
    5560:	b	57a0 <coda_type_time_add_ascii_float_mapping+0x300>
    5564:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5568:	ldr	r3, [r3, #44]	; 0x2c
    556c:	ldr	r3, [r3, #8]
    5570:	cmp	r3, #4
    5574:	beq	55a8 <coda_type_time_add_ascii_float_mapping+0x108>
    5578:	ldr	r3, [fp, #-88]	; 0xffffffa8
    557c:	ldr	r3, [r3, #44]	; 0x2c
    5580:	ldr	r3, [r3, #8]
    5584:	mov	r0, r3
    5588:	bl	5e54 <coda_type_get_class_name>
    558c:	mov	r3, r0
    5590:	mov	r2, r3
    5594:	ldr	r1, [pc, #560]	; 57cc <coda_type_time_add_ascii_float_mapping+0x32c>
    5598:	ldr	r0, [pc, #548]	; 57c4 <coda_type_time_add_ascii_float_mapping+0x324>
    559c:	bl	0 <coda_set_error>
    55a0:	mvn	r3, #0
    55a4:	b	57a0 <coda_type_time_add_ascii_float_mapping+0x300>
    55a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
    55ac:	ldr	r2, [r3]
    55b0:	sub	r3, fp, #80	; 0x50
    55b4:	ldr	r1, [pc, #532]	; 57d0 <coda_type_time_add_ascii_float_mapping+0x330>
    55b8:	mov	r0, r3
    55bc:	bl	0 <sprintf>
    55c0:	sub	r3, fp, #80	; 0x50
    55c4:	mov	r0, r3
    55c8:	bl	0 <strdup>
    55cc:	mov	r3, r0
    55d0:	mov	r1, r3
    55d4:	mov	r3, #0
    55d8:	str	r3, [sp, #4]
    55dc:	mov	r3, #0
    55e0:	str	r3, [sp]
    55e4:	mov	r3, #0
    55e8:	mov	r2, #0
    55ec:	mov	r0, #20
    55f0:	bl	0 <coda_expression_new>
    55f4:	str	r0, [fp, #-12]
    55f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
    55fc:	ldr	r3, [r3]
    5600:	cmp	r3, #0
    5604:	bne	565c <coda_type_time_add_ascii_float_mapping+0x1bc>
    5608:	mov	r3, #0
    560c:	str	r3, [sp, #4]
    5610:	mov	r3, #0
    5614:	str	r3, [sp]
    5618:	mov	r3, #0
    561c:	mov	r2, #0
    5620:	mov	r1, #0
    5624:	mov	r0, #36	; 0x24
    5628:	bl	0 <coda_expression_new>
    562c:	str	r0, [fp, #-16]
    5630:	mov	r3, #0
    5634:	str	r3, [sp, #4]
    5638:	mov	r3, #0
    563c:	str	r3, [sp]
    5640:	mov	r3, #0
    5644:	ldr	r2, [fp, #-16]
    5648:	mov	r1, #0
    564c:	mov	r0, #50	; 0x32
    5650:	bl	0 <coda_expression_new>
    5654:	str	r0, [fp, #-8]
    5658:	b	56e8 <coda_type_time_add_ascii_float_mapping+0x248>
    565c:	mov	r3, #0
    5660:	str	r3, [sp, #4]
    5664:	mov	r3, #0
    5668:	str	r3, [sp]
    566c:	mov	r3, #0
    5670:	mov	r2, #0
    5674:	mov	r1, #0
    5678:	mov	r0, #36	; 0x24
    567c:	bl	0 <coda_expression_new>
    5680:	str	r0, [fp, #-16]
    5684:	mov	r3, #0
    5688:	str	r3, [sp, #4]
    568c:	mov	r3, #0
    5690:	str	r3, [sp]
    5694:	ldr	r3, [fp, #-12]
    5698:	ldr	r2, [fp, #-16]
    569c:	mov	r1, #0
    56a0:	mov	r0, #75	; 0x4b
    56a4:	bl	0 <coda_expression_new>
    56a8:	str	r0, [fp, #-8]
    56ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
    56b0:	ldr	r3, [r3, #4]
    56b4:	mov	r0, r3
    56b8:	bl	0 <strdup>
    56bc:	mov	r3, r0
    56c0:	mov	r1, r3
    56c4:	mov	r3, #0
    56c8:	str	r3, [sp, #4]
    56cc:	mov	r3, #0
    56d0:	str	r3, [sp]
    56d4:	mov	r3, #0
    56d8:	mov	r2, #0
    56dc:	mov	r0, #22
    56e0:	bl	0 <coda_expression_new>
    56e4:	str	r0, [fp, #-12]
    56e8:	mov	r3, #0
    56ec:	str	r3, [sp, #4]
    56f0:	mov	r3, #0
    56f4:	str	r3, [sp]
    56f8:	ldr	r3, [fp, #-12]
    56fc:	ldr	r2, [fp, #-8]
    5700:	mov	r1, #0
    5704:	mov	r0, #25
    5708:	bl	0 <coda_expression_new>
    570c:	str	r0, [fp, #-8]
    5710:	ldr	r3, [fp, #-92]	; 0xffffffa4
    5714:	vldr	d7, [r3, #8]
    5718:	sub	r3, fp, #80	; 0x50
    571c:	mov	r0, r3
    5720:	vmov.f64	d0, d7
    5724:	bl	0 <coda_strfl>
    5728:	sub	r3, fp, #80	; 0x50
    572c:	mov	r0, r3
    5730:	bl	0 <strdup>
    5734:	mov	r3, r0
    5738:	mov	r1, r3
    573c:	mov	r3, #0
    5740:	str	r3, [sp, #4]
    5744:	mov	r3, #0
    5748:	str	r3, [sp]
    574c:	mov	r3, #0
    5750:	mov	r2, #0
    5754:	mov	r0, #19
    5758:	bl	0 <coda_expression_new>
    575c:	str	r0, [fp, #-12]
    5760:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5764:	ldr	r3, [r3, #52]	; 0x34
    5768:	mov	r2, #0
    576c:	str	r2, [sp, #4]
    5770:	str	r3, [sp]
    5774:	ldr	r3, [fp, #-12]
    5778:	ldr	r2, [fp, #-8]
    577c:	mov	r1, #0
    5780:	mov	r0, #42	; 0x2a
    5784:	bl	0 <coda_expression_new>
    5788:	mov	r2, r0
    578c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    5790:	str	r2, [r3, #52]	; 0x34
    5794:	ldr	r0, [fp, #-92]	; 0xffffffa4
    5798:	bl	5f8 <coda_ascii_float_mapping_delete>
    579c:	mov	r3, #0
    57a0:	mov	r0, r3
    57a4:	sub	sp, fp, #4
    57a8:	pop	{fp, pc}
    57ac:	.word	0x000009bd
    57b0:	.word	0x00000028
    57b4:	.word	0x000001f0
    57b8:	.word	0x000009c2
    57bc:	.word	0x00000b44
    57c0:	.word	0x00001354
    57c4:	.word	0xfffffe70
    57c8:	.word	0x00001394
    57cc:	.word	0x000013bc
    57d0:	.word	0x00001408

000057d4 <coda_type_time_set_base_type>:
    57d4:	push	{fp, lr}
    57d8:	add	fp, sp, #4
    57dc:	sub	sp, sp, #8
    57e0:	str	r0, [fp, #-8]
    57e4:	str	r1, [fp, #-12]
    57e8:	ldr	r3, [fp, #-8]
    57ec:	cmp	r3, #0
    57f0:	bne	5810 <coda_type_time_set_base_type+0x3c>
    57f4:	ldr	r3, [pc, #224]	; 58dc <coda_type_time_set_base_type+0x108>
    57f8:	ldr	r2, [pc, #224]	; 58e0 <coda_type_time_set_base_type+0x10c>
    57fc:	ldr	r1, [pc, #224]	; 58e4 <coda_type_time_set_base_type+0x110>
    5800:	mvn	r0, #99	; 0x63
    5804:	bl	0 <coda_set_error>
    5808:	mvn	r3, #0
    580c:	b	58d0 <coda_type_time_set_base_type+0xfc>
    5810:	ldr	r3, [fp, #-12]
    5814:	cmp	r3, #0
    5818:	bne	5838 <coda_type_time_set_base_type+0x64>
    581c:	ldr	r3, [pc, #196]	; 58e8 <coda_type_time_set_base_type+0x114>
    5820:	ldr	r2, [pc, #184]	; 58e0 <coda_type_time_set_base_type+0x10c>
    5824:	ldr	r1, [pc, #192]	; 58ec <coda_type_time_set_base_type+0x118>
    5828:	mvn	r0, #99	; 0x63
    582c:	bl	0 <coda_set_error>
    5830:	mvn	r3, #0
    5834:	b	58d0 <coda_type_time_set_base_type+0xfc>
    5838:	ldr	r3, [fp, #-8]
    583c:	ldr	r3, [r3, #40]	; 0x28
    5840:	cmp	r3, #2
    5844:	beq	5874 <coda_type_time_set_base_type+0xa0>
    5848:	ldr	r3, [fp, #-8]
    584c:	ldr	r3, [r3, #40]	; 0x28
    5850:	mov	r0, r3
    5854:	bl	6018 <coda_type_get_special_type_name>
    5858:	mov	r3, r0
    585c:	mov	r2, r3
    5860:	ldr	r1, [pc, #136]	; 58f0 <coda_type_time_set_base_type+0x11c>
    5864:	ldr	r0, [pc, #136]	; 58f4 <coda_type_time_set_base_type+0x120>
    5868:	bl	0 <coda_set_error>
    586c:	mvn	r3, #0
    5870:	b	58d0 <coda_type_time_set_base_type+0xfc>
    5874:	ldr	r3, [fp, #-8]
    5878:	ldr	r3, [r3, #44]	; 0x2c
    587c:	cmp	r3, #0
    5880:	beq	5898 <coda_type_time_set_base_type+0xc4>
    5884:	ldr	r1, [pc, #108]	; 58f8 <coda_type_time_set_base_type+0x124>
    5888:	ldr	r0, [pc, #100]	; 58f4 <coda_type_time_set_base_type+0x120>
    588c:	bl	0 <coda_set_error>
    5890:	mvn	r3, #0
    5894:	b	58d0 <coda_type_time_set_base_type+0xfc>
    5898:	ldr	r3, [fp, #-8]
    589c:	ldr	r2, [fp, #-12]
    58a0:	str	r2, [r3, #44]	; 0x2c
    58a4:	ldr	r3, [fp, #-12]
    58a8:	ldr	r3, [r3, #4]
    58ac:	add	r2, r3, #1
    58b0:	ldr	r3, [fp, #-12]
    58b4:	str	r2, [r3, #4]
    58b8:	ldr	r3, [fp, #-8]
    58bc:	ldr	r3, [r3, #44]	; 0x2c
    58c0:	ldrd	r2, [r3, #24]
    58c4:	ldr	r1, [fp, #-8]
    58c8:	strd	r2, [r1, #24]
    58cc:	mov	r3, #0
    58d0:	mov	r0, r3
    58d4:	sub	sp, fp, #4
    58d8:	pop	{fp, pc}
    58dc:	.word	0x000009f4
    58e0:	.word	0x00000028
    58e4:	.word	0x000001f0
    58e8:	.word	0x000009f9
    58ec:	.word	0x0000140c
    58f0:	.word	0x00001430
    58f4:	.word	0xfffffe70
    58f8:	.word	0x0000145c

000058fc <coda_type_time_validate>:
    58fc:	push	{fp, lr}
    5900:	add	fp, sp, #4
    5904:	sub	sp, sp, #8
    5908:	str	r0, [fp, #-8]
    590c:	ldr	r3, [fp, #-8]
    5910:	ldr	r3, [r3, #44]	; 0x2c
    5914:	cmp	r3, #0
    5918:	bne	5930 <coda_type_time_validate+0x34>
    591c:	ldr	r1, [pc, #28]	; 5940 <coda_type_time_validate+0x44>
    5920:	ldr	r0, [pc, #28]	; 5944 <coda_type_time_validate+0x48>
    5924:	bl	0 <coda_set_error>
    5928:	mvn	r3, #0
    592c:	b	5934 <coda_type_time_validate+0x38>
    5930:	mov	r3, #0
    5934:	mov	r0, r3
    5938:	sub	sp, fp, #4
    593c:	pop	{fp, pc}
    5940:	.word	0x00001484
    5944:	.word	0xfffffe70

00005948 <coda_type_complex_new>:
    5948:	push	{fp, lr}
    594c:	add	fp, sp, #4
    5950:	sub	sp, sp, #24
    5954:	str	r0, [fp, #-16]
    5958:	mov	r0, #56	; 0x38
    595c:	bl	0 <malloc>
    5960:	mov	r3, r0
    5964:	str	r3, [fp, #-8]
    5968:	ldr	r3, [fp, #-8]
    596c:	cmp	r3, #0
    5970:	bne	5998 <coda_type_complex_new+0x50>
    5974:	ldr	r3, [pc, #204]	; 5a48 <coda_type_complex_new+0x100>
    5978:	str	r3, [sp]
    597c:	ldr	r3, [pc, #200]	; 5a4c <coda_type_complex_new+0x104>
    5980:	mov	r2, #56	; 0x38
    5984:	ldr	r1, [pc, #196]	; 5a50 <coda_type_complex_new+0x108>
    5988:	mvn	r0, #0
    598c:	bl	0 <coda_set_error>
    5990:	mov	r3, #0
    5994:	b	5a3c <coda_type_complex_new+0xf4>
    5998:	ldr	r3, [fp, #-8]
    599c:	ldr	r2, [fp, #-16]
    59a0:	str	r2, [r3]
    59a4:	ldr	r3, [fp, #-8]
    59a8:	mov	r2, #0
    59ac:	str	r2, [r3, #4]
    59b0:	ldr	r3, [fp, #-8]
    59b4:	mov	r2, #6
    59b8:	str	r2, [r3, #8]
    59bc:	ldr	r3, [fp, #-8]
    59c0:	mvn	r2, #0
    59c4:	str	r2, [r3, #12]
    59c8:	ldr	r3, [fp, #-8]
    59cc:	mov	r2, #0
    59d0:	str	r2, [r3, #16]
    59d4:	ldr	r3, [fp, #-8]
    59d8:	mov	r2, #0
    59dc:	str	r2, [r3, #20]
    59e0:	ldr	r1, [fp, #-8]
    59e4:	mvn	r2, #0
    59e8:	mvn	r3, #0
    59ec:	strd	r2, [r1, #24]
    59f0:	ldr	r3, [fp, #-8]
    59f4:	mov	r2, #0
    59f8:	str	r2, [r3, #32]
    59fc:	ldr	r3, [fp, #-8]
    5a00:	mov	r2, #0
    5a04:	str	r2, [r3, #36]	; 0x24
    5a08:	ldr	r3, [fp, #-8]
    5a0c:	mov	r2, #3
    5a10:	str	r2, [r3, #40]	; 0x28
    5a14:	ldr	r3, [fp, #-8]
    5a18:	mov	r2, #0
    5a1c:	str	r2, [r3, #44]	; 0x2c
    5a20:	ldr	r3, [fp, #-8]
    5a24:	mov	r2, #0
    5a28:	str	r2, [r3, #48]	; 0x30
    5a2c:	ldr	r3, [fp, #-8]
    5a30:	mov	r2, #0
    5a34:	str	r2, [r3, #52]	; 0x34
    5a38:	ldr	r3, [fp, #-8]
    5a3c:	mov	r0, r3
    5a40:	sub	sp, fp, #4
    5a44:	pop	{fp, pc}
    5a48:	.word	0x00000a23
    5a4c:	.word	0x00000028
    5a50:	.word	0x00000070

00005a54 <coda_type_complex_set_type>:
    5a54:	push	{r4, fp, lr}
    5a58:	add	fp, sp, #8
    5a5c:	sub	sp, sp, #20
    5a60:	str	r0, [fp, #-24]	; 0xffffffe8
    5a64:	str	r1, [fp, #-28]	; 0xffffffe4
    5a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5a6c:	ldr	r3, [r3, #44]	; 0x2c
    5a70:	cmp	r3, #0
    5a74:	beq	5a8c <coda_type_complex_set_type+0x38>
    5a78:	ldr	r1, [pc, #328]	; 5bc8 <coda_type_complex_set_type+0x174>
    5a7c:	ldr	r0, [pc, #328]	; 5bcc <coda_type_complex_set_type+0x178>
    5a80:	bl	0 <coda_set_error>
    5a84:	mvn	r3, #0
    5a88:	b	5bbc <coda_type_complex_set_type+0x168>
    5a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5a90:	ldr	r3, [r3, #8]
    5a94:	cmp	r3, #2
    5a98:	beq	5ad8 <coda_type_complex_set_type+0x84>
    5a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5aa0:	ldr	r3, [r3, #8]
    5aa4:	cmp	r3, #3
    5aa8:	beq	5ad8 <coda_type_complex_set_type+0x84>
    5aac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ab0:	ldr	r3, [r3, #8]
    5ab4:	mov	r0, r3
    5ab8:	bl	5e54 <coda_type_get_class_name>
    5abc:	mov	r3, r0
    5ac0:	mov	r2, r3
    5ac4:	ldr	r1, [pc, #260]	; 5bd0 <coda_type_complex_set_type+0x17c>
    5ac8:	ldr	r0, [pc, #252]	; 5bcc <coda_type_complex_set_type+0x178>
    5acc:	bl	0 <coda_set_error>
    5ad0:	mvn	r3, #0
    5ad4:	b	5bbc <coda_type_complex_set_type+0x168>
    5ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5adc:	ldr	r2, [r3]
    5ae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5ae4:	ldr	r3, [r3]
    5ae8:	cmp	r2, r3
    5aec:	beq	5b30 <coda_type_complex_set_type+0xdc>
    5af0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5af4:	ldr	r3, [r3]
    5af8:	mov	r0, r3
    5afc:	bl	5d7c <coda_type_get_format_name>
    5b00:	mov	r4, r0
    5b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b08:	ldr	r3, [r3]
    5b0c:	mov	r0, r3
    5b10:	bl	5d7c <coda_type_get_format_name>
    5b14:	mov	r3, r0
    5b18:	mov	r2, r4
    5b1c:	ldr	r1, [pc, #176]	; 5bd4 <coda_type_complex_set_type+0x180>
    5b20:	ldr	r0, [pc, #164]	; 5bcc <coda_type_complex_set_type+0x178>
    5b24:	bl	0 <coda_set_error>
    5b28:	mvn	r3, #0
    5b2c:	b	5bbc <coda_type_complex_set_type+0x168>
    5b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b34:	ldr	r3, [r3]
    5b38:	mov	r0, r3
    5b3c:	bl	2310 <coda_type_record_new>
    5b40:	mov	r2, r0
    5b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b48:	str	r2, [r3, #44]	; 0x2c
    5b4c:	ldr	r0, [pc, #132]	; 5bd8 <coda_type_complex_set_type+0x184>
    5b50:	bl	1c5c <coda_type_record_field_new>
    5b54:	str	r0, [fp, #-16]
    5b58:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5b5c:	ldr	r0, [fp, #-16]
    5b60:	bl	1ee4 <coda_type_record_field_set_type>
    5b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b68:	ldr	r3, [r3, #44]	; 0x2c
    5b6c:	ldr	r1, [fp, #-16]
    5b70:	mov	r0, r3
    5b74:	bl	2d70 <coda_type_record_add_field>
    5b78:	ldr	r0, [pc, #92]	; 5bdc <coda_type_complex_set_type+0x188>
    5b7c:	bl	1c5c <coda_type_record_field_new>
    5b80:	str	r0, [fp, #-16]
    5b84:	ldr	r1, [fp, #-28]	; 0xffffffe4
    5b88:	ldr	r0, [fp, #-16]
    5b8c:	bl	1ee4 <coda_type_record_field_set_type>
    5b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5b94:	ldr	r3, [r3, #44]	; 0x2c
    5b98:	ldr	r1, [fp, #-16]
    5b9c:	mov	r0, r3
    5ba0:	bl	2d70 <coda_type_record_add_field>
    5ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ba8:	ldr	r3, [r3, #44]	; 0x2c
    5bac:	ldrd	r2, [r3, #24]
    5bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5bb4:	strd	r2, [r1, #24]
    5bb8:	mov	r3, #0
    5bbc:	mov	r0, r3
    5bc0:	sub	sp, fp, #8
    5bc4:	pop	{r4, fp, pc}
    5bc8:	.word	0x000014a4
    5bcc:	.word	0xfffffe70
    5bd0:	.word	0x000014d0
    5bd4:	.word	0x0000150c
    5bd8:	.word	0x00001554
    5bdc:	.word	0x0000155c

00005be0 <coda_type_complex_validate>:
    5be0:	push	{fp, lr}
    5be4:	add	fp, sp, #4
    5be8:	sub	sp, sp, #8
    5bec:	str	r0, [fp, #-8]
    5bf0:	ldr	r3, [fp, #-8]
    5bf4:	ldr	r3, [r3, #44]	; 0x2c
    5bf8:	cmp	r3, #0
    5bfc:	bne	5c14 <coda_type_complex_validate+0x34>
    5c00:	ldr	r1, [pc, #28]	; 5c24 <coda_type_complex_validate+0x44>
    5c04:	ldr	r0, [pc, #28]	; 5c28 <coda_type_complex_validate+0x48>
    5c08:	bl	0 <coda_set_error>
    5c0c:	mvn	r3, #0
    5c10:	b	5c18 <coda_type_complex_validate+0x38>
    5c14:	mov	r3, #0
    5c18:	mov	r0, r3
    5c1c:	sub	sp, fp, #4
    5c20:	pop	{fp, pc}
    5c24:	.word	0x00001568
    5c28:	.word	0xfffffe70

00005c2c <coda_type_done>:
    5c2c:	push	{fp, lr}
    5c30:	add	fp, sp, #4
    5c34:	sub	sp, sp, #8
    5c38:	mov	r3, #0
    5c3c:	str	r3, [fp, #-8]
    5c40:	b	5cc4 <coda_type_done+0x98>
    5c44:	bl	0 <__aeabi_read_tp>
    5c48:	mov	r1, r0
    5c4c:	ldr	r2, [pc, #288]	; 5d74 <coda_type_done+0x148>
    5c50:	ldr	r3, [fp, #-8]
    5c54:	lsl	r3, r3, #2
    5c58:	add	r3, r3, r1
    5c5c:	add	r3, r3, r2
    5c60:	ldr	r3, [r3]
    5c64:	cmp	r3, #0
    5c68:	beq	5c94 <coda_type_done+0x68>
    5c6c:	bl	0 <__aeabi_read_tp>
    5c70:	mov	r1, r0
    5c74:	ldr	r2, [pc, #248]	; 5d74 <coda_type_done+0x148>
    5c78:	ldr	r3, [fp, #-8]
    5c7c:	lsl	r3, r3, #2
    5c80:	add	r3, r3, r1
    5c84:	add	r3, r3, r2
    5c88:	ldr	r3, [r3]
    5c8c:	mov	r0, r3
    5c90:	bl	1144 <coda_type_release>
    5c94:	bl	0 <__aeabi_read_tp>
    5c98:	mov	r1, r0
    5c9c:	ldr	r2, [pc, #208]	; 5d74 <coda_type_done+0x148>
    5ca0:	ldr	r3, [fp, #-8]
    5ca4:	lsl	r3, r3, #2
    5ca8:	add	r3, r3, r1
    5cac:	add	r3, r3, r2
    5cb0:	mov	r2, #0
    5cb4:	str	r2, [r3]
    5cb8:	ldr	r3, [fp, #-8]
    5cbc:	add	r3, r3, #1
    5cc0:	str	r3, [fp, #-8]
    5cc4:	ldr	r3, [fp, #-8]
    5cc8:	cmp	r3, #10
    5ccc:	ble	5c44 <coda_type_done+0x18>
    5cd0:	mov	r3, #0
    5cd4:	str	r3, [fp, #-8]
    5cd8:	b	5d5c <coda_type_done+0x130>
    5cdc:	bl	0 <__aeabi_read_tp>
    5ce0:	mov	r1, r0
    5ce4:	ldr	r2, [pc, #140]	; 5d78 <coda_type_done+0x14c>
    5ce8:	ldr	r3, [fp, #-8]
    5cec:	lsl	r3, r3, #2
    5cf0:	add	r3, r3, r1
    5cf4:	add	r3, r3, r2
    5cf8:	ldr	r3, [r3]
    5cfc:	cmp	r3, #0
    5d00:	beq	5d2c <coda_type_done+0x100>
    5d04:	bl	0 <__aeabi_read_tp>
    5d08:	mov	r1, r0
    5d0c:	ldr	r2, [pc, #100]	; 5d78 <coda_type_done+0x14c>
    5d10:	ldr	r3, [fp, #-8]
    5d14:	lsl	r3, r3, #2
    5d18:	add	r3, r3, r1
    5d1c:	add	r3, r3, r2
    5d20:	ldr	r3, [r3]
    5d24:	mov	r0, r3
    5d28:	bl	1144 <coda_type_release>
    5d2c:	bl	0 <__aeabi_read_tp>
    5d30:	mov	r1, r0
    5d34:	ldr	r2, [pc, #60]	; 5d78 <coda_type_done+0x14c>
    5d38:	ldr	r3, [fp, #-8]
    5d3c:	lsl	r3, r3, #2
    5d40:	add	r3, r3, r1
    5d44:	add	r3, r3, r2
    5d48:	mov	r2, #0
    5d4c:	str	r2, [r3]
    5d50:	ldr	r3, [fp, #-8]
    5d54:	add	r3, r3, #1
    5d58:	str	r3, [fp, #-8]
    5d5c:	ldr	r3, [fp, #-8]
    5d60:	cmp	r3, #10
    5d64:	ble	5cdc <coda_type_done+0xb0>
    5d68:	nop			; (mov r0, r0)
    5d6c:	sub	sp, fp, #4
    5d70:	pop	{fp, pc}
	...

00005d7c <coda_type_get_format_name>:
    5d7c:	push	{fp}		; (str fp, [sp, #-4]!)
    5d80:	add	fp, sp, #0
    5d84:	sub	sp, sp, #12
    5d88:	str	r0, [fp, #-8]
    5d8c:	ldr	r3, [fp, #-8]
    5d90:	cmp	r3, #9
    5d94:	ldrls	pc, [pc, r3, lsl #2]
    5d98:	b	5e14 <coda_type_get_format_name+0x98>
    5d9c:	.word	0x00005dc4
    5da0:	.word	0x00005dcc
    5da4:	.word	0x00005dd4
    5da8:	.word	0x00005df4
    5dac:	.word	0x00005dfc
    5db0:	.word	0x00005dec
    5db4:	.word	0x00005ddc
    5db8:	.word	0x00005de4
    5dbc:	.word	0x00005e04
    5dc0:	.word	0x00005e0c
    5dc4:	ldr	r3, [pc, #92]	; 5e28 <coda_type_get_format_name+0xac>
    5dc8:	b	5e18 <coda_type_get_format_name+0x9c>
    5dcc:	ldr	r3, [pc, #88]	; 5e2c <coda_type_get_format_name+0xb0>
    5dd0:	b	5e18 <coda_type_get_format_name+0x9c>
    5dd4:	ldr	r3, [pc, #84]	; 5e30 <coda_type_get_format_name+0xb4>
    5dd8:	b	5e18 <coda_type_get_format_name+0x9c>
    5ddc:	ldr	r3, [pc, #80]	; 5e34 <coda_type_get_format_name+0xb8>
    5de0:	b	5e18 <coda_type_get_format_name+0x9c>
    5de4:	ldr	r3, [pc, #76]	; 5e38 <coda_type_get_format_name+0xbc>
    5de8:	b	5e18 <coda_type_get_format_name+0x9c>
    5dec:	ldr	r3, [pc, #72]	; 5e3c <coda_type_get_format_name+0xc0>
    5df0:	b	5e18 <coda_type_get_format_name+0x9c>
    5df4:	ldr	r3, [pc, #68]	; 5e40 <coda_type_get_format_name+0xc4>
    5df8:	b	5e18 <coda_type_get_format_name+0x9c>
    5dfc:	ldr	r3, [pc, #64]	; 5e44 <coda_type_get_format_name+0xc8>
    5e00:	b	5e18 <coda_type_get_format_name+0x9c>
    5e04:	ldr	r3, [pc, #60]	; 5e48 <coda_type_get_format_name+0xcc>
    5e08:	b	5e18 <coda_type_get_format_name+0x9c>
    5e0c:	ldr	r3, [pc, #56]	; 5e4c <coda_type_get_format_name+0xd0>
    5e10:	b	5e18 <coda_type_get_format_name+0x9c>
    5e14:	ldr	r3, [pc, #52]	; 5e50 <coda_type_get_format_name+0xd4>
    5e18:	mov	r0, r3
    5e1c:	add	sp, fp, #0
    5e20:	pop	{fp}		; (ldr fp, [sp], #4)
    5e24:	bx	lr
    5e28:	.word	0x00001590
    5e2c:	.word	0x00001598
    5e30:	.word	0x000015a0
    5e34:	.word	0x000015a4
    5e38:	.word	0x000015ac
    5e3c:	.word	0x000015b4
    5e40:	.word	0x000015b8
    5e44:	.word	0x000015c0
    5e48:	.word	0x000015c8
    5e4c:	.word	0x000015d0
    5e50:	.word	0x000015d4

00005e54 <coda_type_get_class_name>:
    5e54:	push	{fp}		; (str fp, [sp, #-4]!)
    5e58:	add	fp, sp, #0
    5e5c:	sub	sp, sp, #12
    5e60:	str	r0, [fp, #-8]
    5e64:	ldr	r3, [fp, #-8]
    5e68:	cmp	r3, #6
    5e6c:	ldrls	pc, [pc, r3, lsl #2]
    5e70:	b	5ec8 <coda_type_get_class_name+0x74>
    5e74:	.word	0x00005e90
    5e78:	.word	0x00005e98
    5e7c:	.word	0x00005ea0
    5e80:	.word	0x00005ea8
    5e84:	.word	0x00005eb0
    5e88:	.word	0x00005eb8
    5e8c:	.word	0x00005ec0
    5e90:	ldr	r3, [pc, #68]	; 5edc <coda_type_get_class_name+0x88>
    5e94:	b	5ecc <coda_type_get_class_name+0x78>
    5e98:	ldr	r3, [pc, #64]	; 5ee0 <coda_type_get_class_name+0x8c>
    5e9c:	b	5ecc <coda_type_get_class_name+0x78>
    5ea0:	ldr	r3, [pc, #60]	; 5ee4 <coda_type_get_class_name+0x90>
    5ea4:	b	5ecc <coda_type_get_class_name+0x78>
    5ea8:	ldr	r3, [pc, #56]	; 5ee8 <coda_type_get_class_name+0x94>
    5eac:	b	5ecc <coda_type_get_class_name+0x78>
    5eb0:	ldr	r3, [pc, #52]	; 5eec <coda_type_get_class_name+0x98>
    5eb4:	b	5ecc <coda_type_get_class_name+0x78>
    5eb8:	ldr	r3, [pc, #48]	; 5ef0 <coda_type_get_class_name+0x9c>
    5ebc:	b	5ecc <coda_type_get_class_name+0x78>
    5ec0:	ldr	r3, [pc, #44]	; 5ef4 <coda_type_get_class_name+0xa0>
    5ec4:	b	5ecc <coda_type_get_class_name+0x78>
    5ec8:	ldr	r3, [pc, #40]	; 5ef8 <coda_type_get_class_name+0xa4>
    5ecc:	mov	r0, r3
    5ed0:	add	sp, fp, #0
    5ed4:	pop	{fp}		; (ldr fp, [sp], #4)
    5ed8:	bx	lr
    5edc:	.word	0x000015dc
    5ee0:	.word	0x000015e4
    5ee4:	.word	0x000015ec
    5ee8:	.word	0x00001554
    5eec:	.word	0x000015f4
    5ef0:	.word	0x000015fc
    5ef4:	.word	0x00001600
    5ef8:	.word	0x000015d4

00005efc <coda_type_get_native_type_name>:
    5efc:	push	{fp}		; (str fp, [sp, #-4]!)
    5f00:	add	fp, sp, #0
    5f04:	sub	sp, sp, #12
    5f08:	str	r0, [fp, #-8]
    5f0c:	ldr	r3, [fp, #-8]
    5f10:	add	r3, r3, #1
    5f14:	cmp	r3, #13
    5f18:	ldrls	pc, [pc, r3, lsl #2]
    5f1c:	b	5fc8 <coda_type_get_native_type_name+0xcc>
    5f20:	.word	0x00005f58
    5f24:	.word	0x00005f60
    5f28:	.word	0x00005f68
    5f2c:	.word	0x00005f70
    5f30:	.word	0x00005f78
    5f34:	.word	0x00005f80
    5f38:	.word	0x00005f88
    5f3c:	.word	0x00005f90
    5f40:	.word	0x00005f98
    5f44:	.word	0x00005fa0
    5f48:	.word	0x00005fa8
    5f4c:	.word	0x00005fb0
    5f50:	.word	0x00005fb8
    5f54:	.word	0x00005fc0
    5f58:	ldr	r3, [pc, #124]	; 5fdc <coda_type_get_native_type_name+0xe0>
    5f5c:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f60:	ldr	r3, [pc, #120]	; 5fe0 <coda_type_get_native_type_name+0xe4>
    5f64:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f68:	ldr	r3, [pc, #116]	; 5fe4 <coda_type_get_native_type_name+0xe8>
    5f6c:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f70:	ldr	r3, [pc, #112]	; 5fe8 <coda_type_get_native_type_name+0xec>
    5f74:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f78:	ldr	r3, [pc, #108]	; 5fec <coda_type_get_native_type_name+0xf0>
    5f7c:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f80:	ldr	r3, [pc, #104]	; 5ff0 <coda_type_get_native_type_name+0xf4>
    5f84:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f88:	ldr	r3, [pc, #100]	; 5ff4 <coda_type_get_native_type_name+0xf8>
    5f8c:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f90:	ldr	r3, [pc, #96]	; 5ff8 <coda_type_get_native_type_name+0xfc>
    5f94:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5f98:	ldr	r3, [pc, #92]	; 5ffc <coda_type_get_native_type_name+0x100>
    5f9c:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5fa0:	ldr	r3, [pc, #88]	; 6000 <coda_type_get_native_type_name+0x104>
    5fa4:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5fa8:	ldr	r3, [pc, #84]	; 6004 <coda_type_get_native_type_name+0x108>
    5fac:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5fb0:	ldr	r3, [pc, #80]	; 6008 <coda_type_get_native_type_name+0x10c>
    5fb4:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5fb8:	ldr	r3, [pc, #76]	; 600c <coda_type_get_native_type_name+0x110>
    5fbc:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5fc0:	ldr	r3, [pc, #72]	; 6010 <coda_type_get_native_type_name+0x114>
    5fc4:	b	5fcc <coda_type_get_native_type_name+0xd0>
    5fc8:	ldr	r3, [pc, #68]	; 6014 <coda_type_get_native_type_name+0x118>
    5fcc:	mov	r0, r3
    5fd0:	add	sp, fp, #0
    5fd4:	pop	{fp}		; (ldr fp, [sp], #4)
    5fd8:	bx	lr
    5fdc:	.word	0x00001608
    5fe0:	.word	0x0000160c
    5fe4:	.word	0x00001614
    5fe8:	.word	0x0000161c
    5fec:	.word	0x00001624
    5ff0:	.word	0x0000162c
    5ff4:	.word	0x00001634
    5ff8:	.word	0x0000163c
    5ffc:	.word	0x00001644
    6000:	.word	0x0000164c
    6004:	.word	0x00001654
    6008:	.word	0x0000165c
    600c:	.word	0x00001664
    6010:	.word	0x0000166c
    6014:	.word	0x000015d4

00006018 <coda_type_get_special_type_name>:
    6018:	push	{fp}		; (str fp, [sp, #-4]!)
    601c:	add	fp, sp, #0
    6020:	sub	sp, sp, #12
    6024:	str	r0, [fp, #-8]
    6028:	ldr	r3, [fp, #-8]
    602c:	cmp	r3, #3
    6030:	ldrls	pc, [pc, r3, lsl #2]
    6034:	b	6068 <coda_type_get_special_type_name+0x50>
    6038:	.word	0x00006048
    603c:	.word	0x00006050
    6040:	.word	0x00006058
    6044:	.word	0x00006060
    6048:	ldr	r3, [pc, #44]	; 607c <coda_type_get_special_type_name+0x64>
    604c:	b	606c <coda_type_get_special_type_name+0x54>
    6050:	ldr	r3, [pc, #40]	; 6080 <coda_type_get_special_type_name+0x68>
    6054:	b	606c <coda_type_get_special_type_name+0x54>
    6058:	ldr	r3, [pc, #36]	; 6084 <coda_type_get_special_type_name+0x6c>
    605c:	b	606c <coda_type_get_special_type_name+0x54>
    6060:	ldr	r3, [pc, #32]	; 6088 <coda_type_get_special_type_name+0x70>
    6064:	b	606c <coda_type_get_special_type_name+0x54>
    6068:	ldr	r3, [pc, #28]	; 608c <coda_type_get_special_type_name+0x74>
    606c:	mov	r0, r3
    6070:	add	sp, fp, #0
    6074:	pop	{fp}		; (ldr fp, [sp], #4)
    6078:	bx	lr
    607c:	.word	0x00001674
    6080:	.word	0x0000167c
    6084:	.word	0x00001688
    6088:	.word	0x00001690
    608c:	.word	0x000015d4

00006090 <coda_type_has_attributes>:
    6090:	push	{fp, lr}
    6094:	add	fp, sp, #4
    6098:	sub	sp, sp, #8
    609c:	str	r0, [fp, #-8]
    60a0:	str	r1, [fp, #-12]
    60a4:	ldr	r3, [fp, #-8]
    60a8:	cmp	r3, #0
    60ac:	bne	60cc <coda_type_has_attributes+0x3c>
    60b0:	ldr	r3, [pc, #112]	; 6128 <coda_type_has_attributes+0x98>
    60b4:	ldr	r2, [pc, #112]	; 612c <coda_type_has_attributes+0x9c>
    60b8:	ldr	r1, [pc, #112]	; 6130 <coda_type_has_attributes+0xa0>
    60bc:	mvn	r0, #99	; 0x63
    60c0:	bl	0 <coda_set_error>
    60c4:	mvn	r3, #0
    60c8:	b	611c <coda_type_has_attributes+0x8c>
    60cc:	ldr	r3, [fp, #-12]
    60d0:	cmp	r3, #0
    60d4:	bne	60f4 <coda_type_has_attributes+0x64>
    60d8:	ldr	r3, [pc, #84]	; 6134 <coda_type_has_attributes+0xa4>
    60dc:	ldr	r2, [pc, #72]	; 612c <coda_type_has_attributes+0x9c>
    60e0:	ldr	r1, [pc, #80]	; 6138 <coda_type_has_attributes+0xa8>
    60e4:	mvn	r0, #99	; 0x63
    60e8:	bl	0 <coda_set_error>
    60ec:	mvn	r3, #0
    60f0:	b	611c <coda_type_has_attributes+0x8c>
    60f4:	ldr	r3, [fp, #-8]
    60f8:	ldr	r3, [r3, #36]	; 0x24
    60fc:	cmp	r3, #0
    6100:	movne	r3, #1
    6104:	moveq	r3, #0
    6108:	uxtb	r3, r3
    610c:	mov	r2, r3
    6110:	ldr	r3, [fp, #-12]
    6114:	str	r2, [r3]
    6118:	mov	r3, #0
    611c:	mov	r0, r3
    6120:	sub	sp, fp, #4
    6124:	pop	{fp, pc}
    6128:	.word	0x00000b0d
    612c:	.word	0x00000028
    6130:	.word	0x000001f0
    6134:	.word	0x00000b12
    6138:	.word	0x00001698

0000613c <coda_type_get_format>:
    613c:	push	{fp, lr}
    6140:	add	fp, sp, #4
    6144:	sub	sp, sp, #8
    6148:	str	r0, [fp, #-8]
    614c:	str	r1, [fp, #-12]
    6150:	ldr	r3, [fp, #-8]
    6154:	cmp	r3, #0
    6158:	bne	6178 <coda_type_get_format+0x3c>
    615c:	ldr	r3, [pc, #92]	; 61c0 <coda_type_get_format+0x84>
    6160:	ldr	r2, [pc, #92]	; 61c4 <coda_type_get_format+0x88>
    6164:	ldr	r1, [pc, #92]	; 61c8 <coda_type_get_format+0x8c>
    6168:	mvn	r0, #99	; 0x63
    616c:	bl	0 <coda_set_error>
    6170:	mvn	r3, #0
    6174:	b	61b4 <coda_type_get_format+0x78>
    6178:	ldr	r3, [fp, #-12]
    617c:	cmp	r3, #0
    6180:	bne	61a0 <coda_type_get_format+0x64>
    6184:	ldr	r3, [pc, #64]	; 61cc <coda_type_get_format+0x90>
    6188:	ldr	r2, [pc, #52]	; 61c4 <coda_type_get_format+0x88>
    618c:	ldr	r1, [pc, #60]	; 61d0 <coda_type_get_format+0x94>
    6190:	mvn	r0, #99	; 0x63
    6194:	bl	0 <coda_set_error>
    6198:	mvn	r3, #0
    619c:	b	61b4 <coda_type_get_format+0x78>
    61a0:	ldr	r3, [fp, #-8]
    61a4:	ldr	r2, [r3]
    61a8:	ldr	r3, [fp, #-12]
    61ac:	str	r2, [r3]
    61b0:	mov	r3, #0
    61b4:	mov	r0, r3
    61b8:	sub	sp, fp, #4
    61bc:	pop	{fp, pc}
    61c0:	.word	0x00000b25
    61c4:	.word	0x00000028
    61c8:	.word	0x000001f0
    61cc:	.word	0x00000b2a
    61d0:	.word	0x000016c0

000061d4 <coda_type_get_class>:
    61d4:	push	{fp, lr}
    61d8:	add	fp, sp, #4
    61dc:	sub	sp, sp, #8
    61e0:	str	r0, [fp, #-8]
    61e4:	str	r1, [fp, #-12]
    61e8:	ldr	r3, [fp, #-8]
    61ec:	cmp	r3, #0
    61f0:	bne	6210 <coda_type_get_class+0x3c>
    61f4:	ldr	r3, [pc, #92]	; 6258 <coda_type_get_class+0x84>
    61f8:	ldr	r2, [pc, #92]	; 625c <coda_type_get_class+0x88>
    61fc:	ldr	r1, [pc, #92]	; 6260 <coda_type_get_class+0x8c>
    6200:	mvn	r0, #99	; 0x63
    6204:	bl	0 <coda_set_error>
    6208:	mvn	r3, #0
    620c:	b	624c <coda_type_get_class+0x78>
    6210:	ldr	r3, [fp, #-12]
    6214:	cmp	r3, #0
    6218:	bne	6238 <coda_type_get_class+0x64>
    621c:	ldr	r3, [pc, #64]	; 6264 <coda_type_get_class+0x90>
    6220:	ldr	r2, [pc, #52]	; 625c <coda_type_get_class+0x88>
    6224:	ldr	r1, [pc, #60]	; 6268 <coda_type_get_class+0x94>
    6228:	mvn	r0, #99	; 0x63
    622c:	bl	0 <coda_set_error>
    6230:	mvn	r3, #0
    6234:	b	624c <coda_type_get_class+0x78>
    6238:	ldr	r3, [fp, #-8]
    623c:	ldr	r2, [r3, #8]
    6240:	ldr	r3, [fp, #-12]
    6244:	str	r2, [r3]
    6248:	mov	r3, #0
    624c:	mov	r0, r3
    6250:	sub	sp, fp, #4
    6254:	pop	{fp, pc}
    6258:	.word	0x00000b3d
    625c:	.word	0x00000028
    6260:	.word	0x000001f0
    6264:	.word	0x00000b42
    6268:	.word	0x000016e0

0000626c <coda_type_get_read_type>:
    626c:	push	{fp, lr}
    6270:	add	fp, sp, #4
    6274:	sub	sp, sp, #8
    6278:	str	r0, [fp, #-8]
    627c:	str	r1, [fp, #-12]
    6280:	ldr	r3, [fp, #-8]
    6284:	cmp	r3, #0
    6288:	bne	62a8 <coda_type_get_read_type+0x3c>
    628c:	ldr	r3, [pc, #188]	; 6350 <coda_type_get_read_type+0xe4>
    6290:	ldr	r2, [pc, #188]	; 6354 <coda_type_get_read_type+0xe8>
    6294:	ldr	r1, [pc, #188]	; 6358 <coda_type_get_read_type+0xec>
    6298:	mvn	r0, #99	; 0x63
    629c:	bl	0 <coda_set_error>
    62a0:	mvn	r3, #0
    62a4:	b	6344 <coda_type_get_read_type+0xd8>
    62a8:	ldr	r3, [fp, #-12]
    62ac:	cmp	r3, #0
    62b0:	bne	62d0 <coda_type_get_read_type+0x64>
    62b4:	ldr	r3, [pc, #160]	; 635c <coda_type_get_read_type+0xf0>
    62b8:	ldr	r2, [pc, #148]	; 6354 <coda_type_get_read_type+0xe8>
    62bc:	ldr	r1, [pc, #156]	; 6360 <coda_type_get_read_type+0xf4>
    62c0:	mvn	r0, #99	; 0x63
    62c4:	bl	0 <coda_set_error>
    62c8:	mvn	r3, #0
    62cc:	b	6344 <coda_type_get_read_type+0xd8>
    62d0:	ldr	r3, [fp, #-8]
    62d4:	ldr	r3, [r3, #8]
    62d8:	cmp	r3, #2
    62dc:	beq	62f0 <coda_type_get_read_type+0x84>
    62e0:	ldr	r3, [fp, #-8]
    62e4:	ldr	r3, [r3, #8]
    62e8:	cmp	r3, #3
    62ec:	bne	6330 <coda_type_get_read_type+0xc4>
    62f0:	ldr	r3, [pc, #108]	; 6364 <coda_type_get_read_type+0xf8>
    62f4:	ldr	r3, [pc, r3]
    62f8:	bl	0 <__aeabi_read_tp>
    62fc:	mov	r2, r0
    6300:	ldr	r3, [r2, r3]
    6304:	cmp	r3, #0
    6308:	beq	6330 <coda_type_get_read_type+0xc4>
    630c:	ldr	r3, [fp, #-8]
    6310:	ldr	r3, [r3, #48]	; 0x30
    6314:	cmp	r3, #0
    6318:	beq	6330 <coda_type_get_read_type+0xc4>
    631c:	ldr	r3, [fp, #-12]
    6320:	mov	r2, #9
    6324:	str	r2, [r3]
    6328:	mov	r3, #0
    632c:	b	6344 <coda_type_get_read_type+0xd8>
    6330:	ldr	r3, [fp, #-8]
    6334:	ldr	r2, [r3, #12]
    6338:	ldr	r3, [fp, #-12]
    633c:	str	r2, [r3]
    6340:	mov	r3, #0
    6344:	mov	r0, r3
    6348:	sub	sp, fp, #4
    634c:	pop	{fp, pc}
    6350:	.word	0x00000b5c
    6354:	.word	0x00000028
    6358:	.word	0x000001f0
    635c:	.word	0x00000b61
    6360:	.word	0x00001704
    6364:	.word	0x00000068

00006368 <coda_type_get_string_length>:
    6368:	push	{fp, lr}
    636c:	add	fp, sp, #4
    6370:	sub	sp, sp, #8
    6374:	str	r0, [fp, #-8]
    6378:	str	r1, [fp, #-12]
    637c:	ldr	r1, [fp, #-8]
    6380:	cmp	r1, #0
    6384:	bne	63a4 <coda_type_get_string_length+0x3c>
    6388:	ldr	r3, [pc, #192]	; 6450 <coda_type_get_string_length+0xe8>
    638c:	ldr	r2, [pc, #192]	; 6454 <coda_type_get_string_length+0xec>
    6390:	ldr	r1, [pc, #192]	; 6458 <coda_type_get_string_length+0xf0>
    6394:	mvn	r0, #99	; 0x63
    6398:	bl	0 <coda_set_error>
    639c:	mvn	r3, #0
    63a0:	b	6444 <coda_type_get_string_length+0xdc>
    63a4:	ldr	r1, [fp, #-8]
    63a8:	ldr	r1, [r1, #8]
    63ac:	cmp	r1, #4
    63b0:	beq	63e0 <coda_type_get_string_length+0x78>
    63b4:	ldr	r3, [fp, #-8]
    63b8:	ldr	r3, [r3, #8]
    63bc:	mov	r0, r3
    63c0:	bl	5e54 <coda_type_get_class_name>
    63c4:	mov	r3, r0
    63c8:	mov	r2, r3
    63cc:	ldr	r1, [pc, #136]	; 645c <coda_type_get_string_length+0xf4>
    63d0:	mvn	r0, #104	; 0x68
    63d4:	bl	0 <coda_set_error>
    63d8:	mvn	r3, #0
    63dc:	b	6444 <coda_type_get_string_length+0xdc>
    63e0:	ldr	r1, [fp, #-12]
    63e4:	cmp	r1, #0
    63e8:	bne	6408 <coda_type_get_string_length+0xa0>
    63ec:	ldr	r3, [pc, #108]	; 6460 <coda_type_get_string_length+0xf8>
    63f0:	ldr	r2, [pc, #92]	; 6454 <coda_type_get_string_length+0xec>
    63f4:	ldr	r1, [pc, #104]	; 6464 <coda_type_get_string_length+0xfc>
    63f8:	mvn	r0, #99	; 0x63
    63fc:	bl	0 <coda_set_error>
    6400:	mvn	r3, #0
    6404:	b	6444 <coda_type_get_string_length+0xdc>
    6408:	ldr	r1, [fp, #-8]
    640c:	ldrd	r0, [r1, #24]
    6410:	cmp	r0, #0
    6414:	sbcs	r1, r1, #0
    6418:	blt	6434 <coda_type_get_string_length+0xcc>
    641c:	ldr	r1, [fp, #-8]
    6420:	ldrd	r0, [r1, #24]
    6424:	lsr	r2, r0, #3
    6428:	orr	r2, r2, r1, lsl #29
    642c:	asr	r3, r1, #3
    6430:	b	6438 <coda_type_get_string_length+0xd0>
    6434:	mvn	r2, #0
    6438:	ldr	r3, [fp, #-12]
    643c:	str	r2, [r3]
    6440:	mov	r3, #0
    6444:	mov	r0, r3
    6448:	sub	sp, fp, #4
    644c:	pop	{fp, pc}
    6450:	.word	0x00000b7e
    6454:	.word	0x00000028
    6458:	.word	0x000001f0
    645c:	.word	0x00001728
    6460:	.word	0x00000b89
    6464:	.word	0x0000175c

00006468 <coda_type_get_bit_size>:
    6468:	push	{fp, lr}
    646c:	add	fp, sp, #4
    6470:	sub	sp, sp, #8
    6474:	str	r0, [fp, #-8]
    6478:	str	r1, [fp, #-12]
    647c:	ldr	r3, [fp, #-8]
    6480:	cmp	r3, #0
    6484:	bne	64a4 <coda_type_get_bit_size+0x3c>
    6488:	ldr	r3, [pc, #112]	; 6500 <coda_type_get_bit_size+0x98>
    648c:	ldr	r2, [pc, #112]	; 6504 <coda_type_get_bit_size+0x9c>
    6490:	ldr	r1, [pc, #112]	; 6508 <coda_type_get_bit_size+0xa0>
    6494:	mvn	r0, #99	; 0x63
    6498:	bl	0 <coda_set_error>
    649c:	mvn	r3, #0
    64a0:	b	64f4 <coda_type_get_bit_size+0x8c>
    64a4:	ldr	r3, [fp, #-12]
    64a8:	cmp	r3, #0
    64ac:	bne	64cc <coda_type_get_bit_size+0x64>
    64b0:	ldr	r3, [pc, #84]	; 650c <coda_type_get_bit_size+0xa4>
    64b4:	ldr	r2, [pc, #72]	; 6504 <coda_type_get_bit_size+0x9c>
    64b8:	ldr	r1, [pc, #80]	; 6510 <coda_type_get_bit_size+0xa8>
    64bc:	mvn	r0, #99	; 0x63
    64c0:	bl	0 <coda_set_error>
    64c4:	mvn	r3, #0
    64c8:	b	64f4 <coda_type_get_bit_size+0x8c>
    64cc:	ldr	r3, [fp, #-8]
    64d0:	ldrd	r2, [r3, #24]
    64d4:	cmp	r2, #0
    64d8:	sbcs	r1, r3, #0
    64dc:	bge	64e8 <coda_type_get_bit_size+0x80>
    64e0:	mvn	r2, #0
    64e4:	mvn	r3, #0
    64e8:	ldr	r1, [fp, #-12]
    64ec:	strd	r2, [r1]
    64f0:	mov	r3, #0
    64f4:	mov	r0, r3
    64f8:	sub	sp, fp, #4
    64fc:	pop	{fp, pc}
    6500:	.word	0x00000ba4
    6504:	.word	0x00000028
    6508:	.word	0x000001f0
    650c:	.word	0x00000ba9
    6510:	.word	0x0000177c

00006514 <coda_type_get_name>:
    6514:	push	{fp, lr}
    6518:	add	fp, sp, #4
    651c:	sub	sp, sp, #8
    6520:	str	r0, [fp, #-8]
    6524:	str	r1, [fp, #-12]
    6528:	ldr	r3, [fp, #-8]
    652c:	cmp	r3, #0
    6530:	bne	6550 <coda_type_get_name+0x3c>
    6534:	ldr	r3, [pc, #92]	; 6598 <coda_type_get_name+0x84>
    6538:	ldr	r2, [pc, #92]	; 659c <coda_type_get_name+0x88>
    653c:	ldr	r1, [pc, #92]	; 65a0 <coda_type_get_name+0x8c>
    6540:	mvn	r0, #99	; 0x63
    6544:	bl	0 <coda_set_error>
    6548:	mvn	r3, #0
    654c:	b	658c <coda_type_get_name+0x78>
    6550:	ldr	r3, [fp, #-12]
    6554:	cmp	r3, #0
    6558:	bne	6578 <coda_type_get_name+0x64>
    655c:	ldr	r3, [pc, #64]	; 65a4 <coda_type_get_name+0x90>
    6560:	ldr	r2, [pc, #52]	; 659c <coda_type_get_name+0x88>
    6564:	ldr	r1, [pc, #60]	; 65a8 <coda_type_get_name+0x94>
    6568:	mvn	r0, #99	; 0x63
    656c:	bl	0 <coda_set_error>
    6570:	mvn	r3, #0
    6574:	b	658c <coda_type_get_name+0x78>
    6578:	ldr	r3, [fp, #-8]
    657c:	ldr	r2, [r3, #16]
    6580:	ldr	r3, [fp, #-12]
    6584:	str	r2, [r3]
    6588:	mov	r3, #0
    658c:	mov	r0, r3
    6590:	sub	sp, fp, #4
    6594:	pop	{fp, pc}
    6598:	.word	0x00000bc4
    659c:	.word	0x00000028
    65a0:	.word	0x000001f0
    65a4:	.word	0x00000bc9
    65a8:	.word	0x00000264

000065ac <coda_type_get_description>:
    65ac:	push	{fp, lr}
    65b0:	add	fp, sp, #4
    65b4:	sub	sp, sp, #8
    65b8:	str	r0, [fp, #-8]
    65bc:	str	r1, [fp, #-12]
    65c0:	ldr	r3, [fp, #-8]
    65c4:	cmp	r3, #0
    65c8:	bne	65e8 <coda_type_get_description+0x3c>
    65cc:	ldr	r3, [pc, #92]	; 6630 <coda_type_get_description+0x84>
    65d0:	ldr	r2, [pc, #92]	; 6634 <coda_type_get_description+0x88>
    65d4:	ldr	r1, [pc, #92]	; 6638 <coda_type_get_description+0x8c>
    65d8:	mvn	r0, #99	; 0x63
    65dc:	bl	0 <coda_set_error>
    65e0:	mvn	r3, #0
    65e4:	b	6624 <coda_type_get_description+0x78>
    65e8:	ldr	r3, [fp, #-12]
    65ec:	cmp	r3, #0
    65f0:	bne	6610 <coda_type_get_description+0x64>
    65f4:	ldr	r3, [pc, #64]	; 663c <coda_type_get_description+0x90>
    65f8:	ldr	r2, [pc, #52]	; 6634 <coda_type_get_description+0x88>
    65fc:	ldr	r1, [pc, #60]	; 6640 <coda_type_get_description+0x94>
    6600:	mvn	r0, #99	; 0x63
    6604:	bl	0 <coda_set_error>
    6608:	mvn	r3, #0
    660c:	b	6624 <coda_type_get_description+0x78>
    6610:	ldr	r3, [fp, #-8]
    6614:	ldr	r2, [r3, #20]
    6618:	ldr	r3, [fp, #-12]
    661c:	str	r2, [r3]
    6620:	mov	r3, #0
    6624:	mov	r0, r3
    6628:	sub	sp, fp, #4
    662c:	pop	{fp, pc}
    6630:	.word	0x00000bde
    6634:	.word	0x00000028
    6638:	.word	0x000001f0
    663c:	.word	0x00000be3
    6640:	.word	0x000002c0

00006644 <coda_type_get_unit>:
    6644:	push	{fp, lr}
    6648:	add	fp, sp, #4
    664c:	sub	sp, sp, #16
    6650:	str	r0, [fp, #-16]
    6654:	str	r1, [fp, #-20]	; 0xffffffec
    6658:	ldr	r3, [fp, #-16]
    665c:	cmp	r3, #0
    6660:	bne	6680 <coda_type_get_unit+0x3c>
    6664:	ldr	r3, [pc, #308]	; 67a0 <coda_type_get_unit+0x15c>
    6668:	ldr	r2, [pc, #308]	; 67a4 <coda_type_get_unit+0x160>
    666c:	ldr	r1, [pc, #308]	; 67a8 <coda_type_get_unit+0x164>
    6670:	mvn	r0, #99	; 0x63
    6674:	bl	0 <coda_set_error>
    6678:	mvn	r3, #0
    667c:	b	6794 <coda_type_get_unit+0x150>
    6680:	ldr	r3, [fp, #-20]	; 0xffffffec
    6684:	cmp	r3, #0
    6688:	bne	66a8 <coda_type_get_unit+0x64>
    668c:	ldr	r3, [pc, #280]	; 67ac <coda_type_get_unit+0x168>
    6690:	ldr	r2, [pc, #268]	; 67a4 <coda_type_get_unit+0x160>
    6694:	ldr	r1, [pc, #276]	; 67b0 <coda_type_get_unit+0x16c>
    6698:	mvn	r0, #99	; 0x63
    669c:	bl	0 <coda_set_error>
    66a0:	mvn	r3, #0
    66a4:	b	6794 <coda_type_get_unit+0x150>
    66a8:	ldr	r3, [fp, #-16]
    66ac:	ldr	r3, [r3, #8]
    66b0:	sub	r3, r3, #1
    66b4:	cmp	r3, #5
    66b8:	ldrls	pc, [pc, r3, lsl #2]
    66bc:	b	6780 <coda_type_get_unit+0x13c>
    66c0:	.word	0x000066d8
    66c4:	.word	0x00006714
    66c8:	.word	0x00006714
    66cc:	.word	0x00006780
    66d0:	.word	0x00006780
    66d4:	.word	0x0000676c
    66d8:	sub	r3, fp, #8
    66dc:	mov	r1, r3
    66e0:	ldr	r0, [fp, #-16]
    66e4:	bl	78c4 <coda_type_get_array_base_type>
    66e8:	mov	r3, r0
    66ec:	cmp	r3, #0
    66f0:	beq	66fc <coda_type_get_unit+0xb8>
    66f4:	mvn	r3, #0
    66f8:	b	6794 <coda_type_get_unit+0x150>
    66fc:	ldr	r3, [fp, #-8]
    6700:	ldr	r1, [fp, #-20]	; 0xffffffec
    6704:	mov	r0, r3
    6708:	bl	6644 <coda_type_get_unit>
    670c:	mov	r3, r0
    6710:	b	6794 <coda_type_get_unit+0x150>
    6714:	ldr	r3, [pc, #152]	; 67b4 <coda_type_get_unit+0x170>
    6718:	ldr	r3, [pc, r3]
    671c:	bl	0 <__aeabi_read_tp>
    6720:	mov	r2, r0
    6724:	ldr	r3, [r2, r3]
    6728:	cmp	r3, #0
    672c:	beq	6758 <coda_type_get_unit+0x114>
    6730:	ldr	r3, [fp, #-16]
    6734:	ldr	r3, [r3, #48]	; 0x30
    6738:	cmp	r3, #0
    673c:	beq	6758 <coda_type_get_unit+0x114>
    6740:	ldr	r3, [fp, #-16]
    6744:	ldr	r3, [r3, #48]	; 0x30
    6748:	ldr	r2, [r3, #32]
    674c:	ldr	r3, [fp, #-20]	; 0xffffffec
    6750:	str	r2, [r3]
    6754:	b	6790 <coda_type_get_unit+0x14c>
    6758:	ldr	r3, [fp, #-16]
    675c:	ldr	r2, [r3, #40]	; 0x28
    6760:	ldr	r3, [fp, #-20]	; 0xffffffec
    6764:	str	r2, [r3]
    6768:	b	6790 <coda_type_get_unit+0x14c>
    676c:	ldr	r3, [fp, #-16]
    6770:	ldr	r2, [r3, #48]	; 0x30
    6774:	ldr	r3, [fp, #-20]	; 0xffffffec
    6778:	str	r2, [r3]
    677c:	b	6790 <coda_type_get_unit+0x14c>
    6780:	ldr	r3, [fp, #-20]	; 0xffffffec
    6784:	mov	r2, #0
    6788:	str	r2, [r3]
    678c:	nop			; (mov r0, r0)
    6790:	mov	r3, #0
    6794:	mov	r0, r3
    6798:	sub	sp, fp, #4
    679c:	pop	{fp, pc}
    67a0:	.word	0x00000bfc
    67a4:	.word	0x00000028
    67a8:	.word	0x000001f0
    67ac:	.word	0x00000c02
    67b0:	.word	0x00000aec
    67b4:	.word	0x00000094

000067b8 <coda_type_get_fixed_value>:
    67b8:	push	{fp, lr}
    67bc:	add	fp, sp, #4
    67c0:	sub	sp, sp, #16
    67c4:	str	r0, [fp, #-8]
    67c8:	str	r1, [fp, #-12]
    67cc:	str	r2, [fp, #-16]
    67d0:	ldr	r3, [fp, #-8]
    67d4:	cmp	r3, #0
    67d8:	bne	67f8 <coda_type_get_fixed_value+0x40>
    67dc:	ldr	r3, [pc, #292]	; 6908 <coda_type_get_fixed_value+0x150>
    67e0:	ldr	r2, [pc, #292]	; 690c <coda_type_get_fixed_value+0x154>
    67e4:	ldr	r1, [pc, #292]	; 6910 <coda_type_get_fixed_value+0x158>
    67e8:	mvn	r0, #99	; 0x63
    67ec:	bl	0 <coda_set_error>
    67f0:	mvn	r3, #0
    67f4:	b	68fc <coda_type_get_fixed_value+0x144>
    67f8:	ldr	r3, [fp, #-12]
    67fc:	cmp	r3, #0
    6800:	bne	6820 <coda_type_get_fixed_value+0x68>
    6804:	ldr	r3, [pc, #264]	; 6914 <coda_type_get_fixed_value+0x15c>
    6808:	ldr	r2, [pc, #252]	; 690c <coda_type_get_fixed_value+0x154>
    680c:	ldr	r1, [pc, #260]	; 6918 <coda_type_get_fixed_value+0x160>
    6810:	mvn	r0, #99	; 0x63
    6814:	bl	0 <coda_set_error>
    6818:	mvn	r3, #0
    681c:	b	68fc <coda_type_get_fixed_value+0x144>
    6820:	ldr	r3, [fp, #-8]
    6824:	ldr	r3, [r3, #8]
    6828:	cmp	r3, #4
    682c:	beq	683c <coda_type_get_fixed_value+0x84>
    6830:	cmp	r3, #5
    6834:	beq	6894 <coda_type_get_fixed_value+0xdc>
    6838:	b	68dc <coda_type_get_fixed_value+0x124>
    683c:	ldr	r3, [fp, #-8]
    6840:	ldr	r2, [r3, #40]	; 0x28
    6844:	ldr	r3, [fp, #-12]
    6848:	str	r2, [r3]
    684c:	ldr	r3, [fp, #-16]
    6850:	cmp	r3, #0
    6854:	beq	68ec <coda_type_get_fixed_value+0x134>
    6858:	ldr	r3, [fp, #-12]
    685c:	ldr	r3, [r3]
    6860:	cmp	r3, #0
    6864:	beq	6884 <coda_type_get_fixed_value+0xcc>
    6868:	ldr	r3, [fp, #-12]
    686c:	ldr	r3, [r3]
    6870:	mov	r0, r3
    6874:	bl	0 <strlen>
    6878:	mov	r3, r0
    687c:	mov	r2, r3
    6880:	b	6888 <coda_type_get_fixed_value+0xd0>
    6884:	mov	r2, #0
    6888:	ldr	r3, [fp, #-16]
    688c:	str	r2, [r3]
    6890:	b	68ec <coda_type_get_fixed_value+0x134>
    6894:	ldr	r3, [fp, #-8]
    6898:	ldr	r2, [r3, #44]	; 0x2c
    689c:	ldr	r3, [fp, #-12]
    68a0:	str	r2, [r3]
    68a4:	ldr	r3, [fp, #-16]
    68a8:	cmp	r3, #0
    68ac:	beq	68f4 <coda_type_get_fixed_value+0x13c>
    68b0:	ldr	r3, [fp, #-12]
    68b4:	ldr	r3, [r3]
    68b8:	cmp	r3, #0
    68bc:	beq	68cc <coda_type_get_fixed_value+0x114>
    68c0:	ldr	r3, [fp, #-8]
    68c4:	ldr	r3, [r3, #40]	; 0x28
    68c8:	b	68d0 <coda_type_get_fixed_value+0x118>
    68cc:	mov	r3, #0
    68d0:	ldr	r2, [fp, #-16]
    68d4:	str	r3, [r2]
    68d8:	b	68f4 <coda_type_get_fixed_value+0x13c>
    68dc:	ldr	r3, [fp, #-12]
    68e0:	mov	r2, #0
    68e4:	str	r2, [r3]
    68e8:	b	68f8 <coda_type_get_fixed_value+0x140>
    68ec:	nop			; (mov r0, r0)
    68f0:	b	68f8 <coda_type_get_fixed_value+0x140>
    68f4:	nop			; (mov r0, r0)
    68f8:	mov	r3, #0
    68fc:	mov	r0, r3
    6900:	sub	sp, fp, #4
    6904:	pop	{fp, pc}
    6908:	.word	0x00000c3d
    690c:	.word	0x00000028
    6910:	.word	0x000001f0
    6914:	.word	0x00000c42
    6918:	.word	0x00000e84

0000691c <coda_type_get_attributes>:
    691c:	push	{fp, lr}
    6920:	add	fp, sp, #4
    6924:	sub	sp, sp, #8
    6928:	str	r0, [fp, #-8]
    692c:	str	r1, [fp, #-12]
    6930:	ldr	r3, [fp, #-8]
    6934:	cmp	r3, #0
    6938:	bne	6958 <coda_type_get_attributes+0x3c>
    693c:	ldr	r3, [pc, #140]	; 69d0 <coda_type_get_attributes+0xb4>
    6940:	ldr	r2, [pc, #140]	; 69d4 <coda_type_get_attributes+0xb8>
    6944:	ldr	r1, [pc, #140]	; 69d8 <coda_type_get_attributes+0xbc>
    6948:	mvn	r0, #99	; 0x63
    694c:	bl	0 <coda_set_error>
    6950:	mvn	r3, #0
    6954:	b	69c4 <coda_type_get_attributes+0xa8>
    6958:	ldr	r3, [fp, #-12]
    695c:	cmp	r3, #0
    6960:	bne	6980 <coda_type_get_attributes+0x64>
    6964:	ldr	r3, [pc, #112]	; 69dc <coda_type_get_attributes+0xc0>
    6968:	ldr	r2, [pc, #100]	; 69d4 <coda_type_get_attributes+0xb8>
    696c:	ldr	r1, [pc, #108]	; 69e0 <coda_type_get_attributes+0xc4>
    6970:	mvn	r0, #99	; 0x63
    6974:	bl	0 <coda_set_error>
    6978:	mvn	r3, #0
    697c:	b	69c4 <coda_type_get_attributes+0xa8>
    6980:	ldr	r3, [fp, #-8]
    6984:	ldr	r3, [r3, #36]	; 0x24
    6988:	cmp	r3, #0
    698c:	bne	69b0 <coda_type_get_attributes+0x94>
    6990:	ldr	r3, [fp, #-8]
    6994:	ldr	r3, [r3]
    6998:	mov	r0, r3
    699c:	bl	2560 <coda_type_empty_record>
    69a0:	mov	r2, r0
    69a4:	ldr	r3, [fp, #-12]
    69a8:	str	r2, [r3]
    69ac:	b	69c0 <coda_type_get_attributes+0xa4>
    69b0:	ldr	r3, [fp, #-8]
    69b4:	ldr	r2, [r3, #36]	; 0x24
    69b8:	ldr	r3, [fp, #-12]
    69bc:	str	r2, [r3]
    69c0:	mov	r3, #0
    69c4:	mov	r0, r3
    69c8:	sub	sp, fp, #4
    69cc:	pop	{fp, pc}
    69d0:	.word	0x00000c6a
    69d4:	.word	0x00000028
    69d8:	.word	0x000001f0
    69dc:	.word	0x00000c6f
    69e0:	.word	0x00000468

000069e4 <coda_type_get_num_record_fields>:
    69e4:	push	{fp, lr}
    69e8:	add	fp, sp, #4
    69ec:	sub	sp, sp, #8
    69f0:	str	r0, [fp, #-8]
    69f4:	str	r1, [fp, #-12]
    69f8:	ldr	r3, [fp, #-8]
    69fc:	cmp	r3, #0
    6a00:	bne	6a20 <coda_type_get_num_record_fields+0x3c>
    6a04:	ldr	r3, [pc, #152]	; 6aa4 <coda_type_get_num_record_fields+0xc0>
    6a08:	ldr	r2, [pc, #152]	; 6aa8 <coda_type_get_num_record_fields+0xc4>
    6a0c:	ldr	r1, [pc, #152]	; 6aac <coda_type_get_num_record_fields+0xc8>
    6a10:	mvn	r0, #99	; 0x63
    6a14:	bl	0 <coda_set_error>
    6a18:	mvn	r3, #0
    6a1c:	b	6a98 <coda_type_get_num_record_fields+0xb4>
    6a20:	ldr	r3, [fp, #-8]
    6a24:	ldr	r3, [r3, #8]
    6a28:	cmp	r3, #0
    6a2c:	beq	6a5c <coda_type_get_num_record_fields+0x78>
    6a30:	ldr	r3, [fp, #-8]
    6a34:	ldr	r3, [r3, #8]
    6a38:	mov	r0, r3
    6a3c:	bl	5e54 <coda_type_get_class_name>
    6a40:	mov	r3, r0
    6a44:	mov	r2, r3
    6a48:	ldr	r1, [pc, #96]	; 6ab0 <coda_type_get_num_record_fields+0xcc>
    6a4c:	mvn	r0, #104	; 0x68
    6a50:	bl	0 <coda_set_error>
    6a54:	mvn	r3, #0
    6a58:	b	6a98 <coda_type_get_num_record_fields+0xb4>
    6a5c:	ldr	r3, [fp, #-12]
    6a60:	cmp	r3, #0
    6a64:	bne	6a84 <coda_type_get_num_record_fields+0xa0>
    6a68:	ldr	r3, [pc, #68]	; 6ab4 <coda_type_get_num_record_fields+0xd0>
    6a6c:	ldr	r2, [pc, #52]	; 6aa8 <coda_type_get_num_record_fields+0xc4>
    6a70:	ldr	r1, [pc, #64]	; 6ab8 <coda_type_get_num_record_fields+0xd4>
    6a74:	mvn	r0, #99	; 0x63
    6a78:	bl	0 <coda_set_error>
    6a7c:	mvn	r3, #0
    6a80:	b	6a98 <coda_type_get_num_record_fields+0xb4>
    6a84:	ldr	r3, [fp, #-8]
    6a88:	ldr	r2, [r3, #48]	; 0x30
    6a8c:	ldr	r3, [fp, #-12]
    6a90:	str	r2, [r3]
    6a94:	mov	r3, #0
    6a98:	mov	r0, r3
    6a9c:	sub	sp, fp, #4
    6aa0:	pop	{fp, pc}
    6aa4:	.word	0x00000c89
    6aa8:	.word	0x00000028
    6aac:	.word	0x000001f0
    6ab0:	.word	0x000017a0
    6ab4:	.word	0x00000c94
    6ab8:	.word	0x000017d8

00006abc <coda_type_get_record_field_index_from_name>:
    6abc:	push	{fp, lr}
    6ac0:	add	fp, sp, #4
    6ac4:	sub	sp, sp, #24
    6ac8:	str	r0, [fp, #-16]
    6acc:	str	r1, [fp, #-20]	; 0xffffffec
    6ad0:	str	r2, [fp, #-24]	; 0xffffffe8
    6ad4:	ldr	r3, [fp, #-16]
    6ad8:	cmp	r3, #0
    6adc:	bne	6afc <coda_type_get_record_field_index_from_name+0x40>
    6ae0:	ldr	r3, [pc, #248]	; 6be0 <coda_type_get_record_field_index_from_name+0x124>
    6ae4:	ldr	r2, [pc, #248]	; 6be4 <coda_type_get_record_field_index_from_name+0x128>
    6ae8:	ldr	r1, [pc, #248]	; 6be8 <coda_type_get_record_field_index_from_name+0x12c>
    6aec:	mvn	r0, #99	; 0x63
    6af0:	bl	0 <coda_set_error>
    6af4:	mvn	r3, #0
    6af8:	b	6bd4 <coda_type_get_record_field_index_from_name+0x118>
    6afc:	ldr	r3, [fp, #-16]
    6b00:	ldr	r3, [r3, #8]
    6b04:	cmp	r3, #0
    6b08:	beq	6b38 <coda_type_get_record_field_index_from_name+0x7c>
    6b0c:	ldr	r3, [fp, #-16]
    6b10:	ldr	r3, [r3, #8]
    6b14:	mov	r0, r3
    6b18:	bl	5e54 <coda_type_get_class_name>
    6b1c:	mov	r3, r0
    6b20:	mov	r2, r3
    6b24:	ldr	r1, [pc, #192]	; 6bec <coda_type_get_record_field_index_from_name+0x130>
    6b28:	mvn	r0, #104	; 0x68
    6b2c:	bl	0 <coda_set_error>
    6b30:	mvn	r3, #0
    6b34:	b	6bd4 <coda_type_get_record_field_index_from_name+0x118>
    6b38:	ldr	r3, [fp, #-20]	; 0xffffffec
    6b3c:	cmp	r3, #0
    6b40:	bne	6b60 <coda_type_get_record_field_index_from_name+0xa4>
    6b44:	ldr	r3, [pc, #164]	; 6bf0 <coda_type_get_record_field_index_from_name+0x134>
    6b48:	ldr	r2, [pc, #148]	; 6be4 <coda_type_get_record_field_index_from_name+0x128>
    6b4c:	ldr	r1, [pc, #160]	; 6bf4 <coda_type_get_record_field_index_from_name+0x138>
    6b50:	mvn	r0, #99	; 0x63
    6b54:	bl	0 <coda_set_error>
    6b58:	mvn	r3, #0
    6b5c:	b	6bd4 <coda_type_get_record_field_index_from_name+0x118>
    6b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6b64:	cmp	r3, #0
    6b68:	bne	6b88 <coda_type_get_record_field_index_from_name+0xcc>
    6b6c:	ldr	r3, [pc, #132]	; 6bf8 <coda_type_get_record_field_index_from_name+0x13c>
    6b70:	ldr	r2, [pc, #108]	; 6be4 <coda_type_get_record_field_index_from_name+0x128>
    6b74:	ldr	r1, [pc, #128]	; 6bfc <coda_type_get_record_field_index_from_name+0x140>
    6b78:	mvn	r0, #99	; 0x63
    6b7c:	bl	0 <coda_set_error>
    6b80:	mvn	r3, #0
    6b84:	b	6bd4 <coda_type_get_record_field_index_from_name+0x118>
    6b88:	ldr	r3, [fp, #-16]
    6b8c:	ldr	r3, [r3, #40]	; 0x28
    6b90:	ldr	r1, [fp, #-20]	; 0xffffffec
    6b94:	mov	r0, r3
    6b98:	bl	0 <coda_hashtable_get_index_from_name>
    6b9c:	str	r0, [fp, #-8]
    6ba0:	ldr	r3, [fp, #-8]
    6ba4:	cmp	r3, #0
    6ba8:	bge	6bc4 <coda_type_get_record_field_index_from_name+0x108>
    6bac:	ldr	r2, [fp, #-20]	; 0xffffffec
    6bb0:	ldr	r1, [pc, #72]	; 6c00 <coda_type_get_record_field_index_from_name+0x144>
    6bb4:	mvn	r0, #101	; 0x65
    6bb8:	bl	0 <coda_set_error>
    6bbc:	mvn	r3, #0
    6bc0:	b	6bd4 <coda_type_get_record_field_index_from_name+0x118>
    6bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6bc8:	ldr	r2, [fp, #-8]
    6bcc:	str	r2, [r3]
    6bd0:	mov	r3, #0
    6bd4:	mov	r0, r3
    6bd8:	sub	sp, fp, #4
    6bdc:	pop	{fp, pc}
    6be0:	.word	0x00000cac
    6be4:	.word	0x00000028
    6be8:	.word	0x000001f0
    6bec:	.word	0x000017a0
    6bf0:	.word	0x00000cb7
    6bf4:	.word	0x00000264
    6bf8:	.word	0x00000cbc
    6bfc:	.word	0x000017fc
    6c00:	.word	0x0000181c

00006c04 <coda_type_get_record_field_index_from_name_n>:
    6c04:	push	{fp, lr}
    6c08:	add	fp, sp, #4
    6c0c:	sub	sp, sp, #24
    6c10:	str	r0, [fp, #-16]
    6c14:	str	r1, [fp, #-20]	; 0xffffffec
    6c18:	str	r2, [fp, #-24]	; 0xffffffe8
    6c1c:	str	r3, [fp, #-28]	; 0xffffffe4
    6c20:	ldr	r3, [fp, #-16]
    6c24:	cmp	r3, #0
    6c28:	bne	6c48 <coda_type_get_record_field_index_from_name_n+0x44>
    6c2c:	ldr	r3, [pc, #256]	; 6d34 <coda_type_get_record_field_index_from_name_n+0x130>
    6c30:	ldr	r2, [pc, #256]	; 6d38 <coda_type_get_record_field_index_from_name_n+0x134>
    6c34:	ldr	r1, [pc, #256]	; 6d3c <coda_type_get_record_field_index_from_name_n+0x138>
    6c38:	mvn	r0, #99	; 0x63
    6c3c:	bl	0 <coda_set_error>
    6c40:	mvn	r3, #0
    6c44:	b	6d28 <coda_type_get_record_field_index_from_name_n+0x124>
    6c48:	ldr	r3, [fp, #-16]
    6c4c:	ldr	r3, [r3, #8]
    6c50:	cmp	r3, #0
    6c54:	beq	6c84 <coda_type_get_record_field_index_from_name_n+0x80>
    6c58:	ldr	r3, [fp, #-16]
    6c5c:	ldr	r3, [r3, #8]
    6c60:	mov	r0, r3
    6c64:	bl	5e54 <coda_type_get_class_name>
    6c68:	mov	r3, r0
    6c6c:	mov	r2, r3
    6c70:	ldr	r1, [pc, #200]	; 6d40 <coda_type_get_record_field_index_from_name_n+0x13c>
    6c74:	mvn	r0, #104	; 0x68
    6c78:	bl	0 <coda_set_error>
    6c7c:	mvn	r3, #0
    6c80:	b	6d28 <coda_type_get_record_field_index_from_name_n+0x124>
    6c84:	ldr	r3, [fp, #-20]	; 0xffffffec
    6c88:	cmp	r3, #0
    6c8c:	bne	6cac <coda_type_get_record_field_index_from_name_n+0xa8>
    6c90:	ldr	r3, [pc, #172]	; 6d44 <coda_type_get_record_field_index_from_name_n+0x140>
    6c94:	ldr	r2, [pc, #156]	; 6d38 <coda_type_get_record_field_index_from_name_n+0x134>
    6c98:	ldr	r1, [pc, #168]	; 6d48 <coda_type_get_record_field_index_from_name_n+0x144>
    6c9c:	mvn	r0, #99	; 0x63
    6ca0:	bl	0 <coda_set_error>
    6ca4:	mvn	r3, #0
    6ca8:	b	6d28 <coda_type_get_record_field_index_from_name_n+0x124>
    6cac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6cb0:	cmp	r3, #0
    6cb4:	bne	6cd4 <coda_type_get_record_field_index_from_name_n+0xd0>
    6cb8:	ldr	r3, [pc, #140]	; 6d4c <coda_type_get_record_field_index_from_name_n+0x148>
    6cbc:	ldr	r2, [pc, #116]	; 6d38 <coda_type_get_record_field_index_from_name_n+0x134>
    6cc0:	ldr	r1, [pc, #136]	; 6d50 <coda_type_get_record_field_index_from_name_n+0x14c>
    6cc4:	mvn	r0, #99	; 0x63
    6cc8:	bl	0 <coda_set_error>
    6ccc:	mvn	r3, #0
    6cd0:	b	6d28 <coda_type_get_record_field_index_from_name_n+0x124>
    6cd4:	ldr	r3, [fp, #-16]
    6cd8:	ldr	r3, [r3, #40]	; 0x28
    6cdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
    6ce4:	mov	r0, r3
    6ce8:	bl	0 <coda_hashtable_get_index_from_name_n>
    6cec:	str	r0, [fp, #-8]
    6cf0:	ldr	r3, [fp, #-8]
    6cf4:	cmp	r3, #0
    6cf8:	bge	6d18 <coda_type_get_record_field_index_from_name_n+0x114>
    6cfc:	ldr	r3, [fp, #-20]	; 0xffffffec
    6d00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6d04:	ldr	r1, [pc, #72]	; 6d54 <coda_type_get_record_field_index_from_name_n+0x150>
    6d08:	mvn	r0, #101	; 0x65
    6d0c:	bl	0 <coda_set_error>
    6d10:	mvn	r3, #0
    6d14:	b	6d28 <coda_type_get_record_field_index_from_name_n+0x124>
    6d18:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6d1c:	ldr	r2, [fp, #-8]
    6d20:	str	r2, [r3]
    6d24:	mov	r3, #0
    6d28:	mov	r0, r3
    6d2c:	sub	sp, fp, #4
    6d30:	pop	{fp, pc}
    6d34:	.word	0x00000cdb
    6d38:	.word	0x00000028
    6d3c:	.word	0x000001f0
    6d40:	.word	0x000017a0
    6d44:	.word	0x00000ce6
    6d48:	.word	0x00000264
    6d4c:	.word	0x00000ceb
    6d50:	.word	0x000017fc
    6d54:	.word	0x00001848

00006d58 <coda_type_get_record_field_index_from_real_name>:
    6d58:	push	{fp, lr}
    6d5c:	add	fp, sp, #4
    6d60:	sub	sp, sp, #24
    6d64:	str	r0, [fp, #-16]
    6d68:	str	r1, [fp, #-20]	; 0xffffffec
    6d6c:	str	r2, [fp, #-24]	; 0xffffffe8
    6d70:	ldr	r3, [fp, #-16]
    6d74:	cmp	r3, #0
    6d78:	bne	6d98 <coda_type_get_record_field_index_from_real_name+0x40>
    6d7c:	ldr	r3, [pc, #248]	; 6e7c <coda_type_get_record_field_index_from_real_name+0x124>
    6d80:	ldr	r2, [pc, #248]	; 6e80 <coda_type_get_record_field_index_from_real_name+0x128>
    6d84:	ldr	r1, [pc, #248]	; 6e84 <coda_type_get_record_field_index_from_real_name+0x12c>
    6d88:	mvn	r0, #99	; 0x63
    6d8c:	bl	0 <coda_set_error>
    6d90:	mvn	r3, #0
    6d94:	b	6e70 <coda_type_get_record_field_index_from_real_name+0x118>
    6d98:	ldr	r3, [fp, #-16]
    6d9c:	ldr	r3, [r3, #8]
    6da0:	cmp	r3, #0
    6da4:	beq	6dd4 <coda_type_get_record_field_index_from_real_name+0x7c>
    6da8:	ldr	r3, [fp, #-16]
    6dac:	ldr	r3, [r3, #8]
    6db0:	mov	r0, r3
    6db4:	bl	5e54 <coda_type_get_class_name>
    6db8:	mov	r3, r0
    6dbc:	mov	r2, r3
    6dc0:	ldr	r1, [pc, #192]	; 6e88 <coda_type_get_record_field_index_from_real_name+0x130>
    6dc4:	mvn	r0, #104	; 0x68
    6dc8:	bl	0 <coda_set_error>
    6dcc:	mvn	r3, #0
    6dd0:	b	6e70 <coda_type_get_record_field_index_from_real_name+0x118>
    6dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
    6dd8:	cmp	r3, #0
    6ddc:	bne	6dfc <coda_type_get_record_field_index_from_real_name+0xa4>
    6de0:	ldr	r3, [pc, #164]	; 6e8c <coda_type_get_record_field_index_from_real_name+0x134>
    6de4:	ldr	r2, [pc, #148]	; 6e80 <coda_type_get_record_field_index_from_real_name+0x128>
    6de8:	ldr	r1, [pc, #160]	; 6e90 <coda_type_get_record_field_index_from_real_name+0x138>
    6dec:	mvn	r0, #99	; 0x63
    6df0:	bl	0 <coda_set_error>
    6df4:	mvn	r3, #0
    6df8:	b	6e70 <coda_type_get_record_field_index_from_real_name+0x118>
    6dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6e00:	cmp	r3, #0
    6e04:	bne	6e24 <coda_type_get_record_field_index_from_real_name+0xcc>
    6e08:	ldr	r3, [pc, #132]	; 6e94 <coda_type_get_record_field_index_from_real_name+0x13c>
    6e0c:	ldr	r2, [pc, #108]	; 6e80 <coda_type_get_record_field_index_from_real_name+0x128>
    6e10:	ldr	r1, [pc, #128]	; 6e98 <coda_type_get_record_field_index_from_real_name+0x140>
    6e14:	mvn	r0, #99	; 0x63
    6e18:	bl	0 <coda_set_error>
    6e1c:	mvn	r3, #0
    6e20:	b	6e70 <coda_type_get_record_field_index_from_real_name+0x118>
    6e24:	ldr	r3, [fp, #-16]
    6e28:	ldr	r3, [r3, #44]	; 0x2c
    6e2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e30:	mov	r0, r3
    6e34:	bl	0 <coda_hashtable_get_index_from_name>
    6e38:	str	r0, [fp, #-8]
    6e3c:	ldr	r3, [fp, #-8]
    6e40:	cmp	r3, #0
    6e44:	bge	6e60 <coda_type_get_record_field_index_from_real_name+0x108>
    6e48:	ldr	r2, [fp, #-20]	; 0xffffffec
    6e4c:	ldr	r1, [pc, #72]	; 6e9c <coda_type_get_record_field_index_from_real_name+0x144>
    6e50:	mvn	r0, #101	; 0x65
    6e54:	bl	0 <coda_set_error>
    6e58:	mvn	r3, #0
    6e5c:	b	6e70 <coda_type_get_record_field_index_from_real_name+0x118>
    6e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    6e64:	ldr	r2, [fp, #-8]
    6e68:	str	r2, [r3]
    6e6c:	mov	r3, #0
    6e70:	mov	r0, r3
    6e74:	sub	sp, fp, #4
    6e78:	pop	{fp, pc}
    6e7c:	.word	0x00000d0a
    6e80:	.word	0x00000028
    6e84:	.word	0x000001f0
    6e88:	.word	0x000017a0
    6e8c:	.word	0x00000d15
    6e90:	.word	0x00000510
    6e94:	.word	0x00000d1a
    6e98:	.word	0x000017fc
    6e9c:	.word	0x00001878

00006ea0 <coda_type_get_record_field_type>:
    6ea0:	push	{fp, lr}
    6ea4:	add	fp, sp, #4
    6ea8:	sub	sp, sp, #24
    6eac:	str	r0, [fp, #-8]
    6eb0:	str	r1, [fp, #-12]
    6eb4:	str	r2, [fp, #-16]
    6eb8:	ldr	r3, [fp, #-8]
    6ebc:	cmp	r3, #0
    6ec0:	bne	6ee0 <coda_type_get_record_field_type+0x40>
    6ec4:	ldr	r3, [pc, #256]	; 6fcc <coda_type_get_record_field_type+0x12c>
    6ec8:	ldr	r2, [pc, #256]	; 6fd0 <coda_type_get_record_field_type+0x130>
    6ecc:	ldr	r1, [pc, #256]	; 6fd4 <coda_type_get_record_field_type+0x134>
    6ed0:	mvn	r0, #99	; 0x63
    6ed4:	bl	0 <coda_set_error>
    6ed8:	mvn	r3, #0
    6edc:	b	6fc0 <coda_type_get_record_field_type+0x120>
    6ee0:	ldr	r3, [fp, #-8]
    6ee4:	ldr	r3, [r3, #8]
    6ee8:	cmp	r3, #0
    6eec:	beq	6f1c <coda_type_get_record_field_type+0x7c>
    6ef0:	ldr	r3, [fp, #-8]
    6ef4:	ldr	r3, [r3, #8]
    6ef8:	mov	r0, r3
    6efc:	bl	5e54 <coda_type_get_class_name>
    6f00:	mov	r3, r0
    6f04:	mov	r2, r3
    6f08:	ldr	r1, [pc, #200]	; 6fd8 <coda_type_get_record_field_type+0x138>
    6f0c:	mvn	r0, #104	; 0x68
    6f10:	bl	0 <coda_set_error>
    6f14:	mvn	r3, #0
    6f18:	b	6fc0 <coda_type_get_record_field_type+0x120>
    6f1c:	ldr	r3, [fp, #-16]
    6f20:	cmp	r3, #0
    6f24:	bne	6f44 <coda_type_get_record_field_type+0xa4>
    6f28:	mov	r3, #3392	; 0xd40
    6f2c:	ldr	r2, [pc, #156]	; 6fd0 <coda_type_get_record_field_type+0x130>
    6f30:	ldr	r1, [pc, #164]	; 6fdc <coda_type_get_record_field_type+0x13c>
    6f34:	mvn	r0, #99	; 0x63
    6f38:	bl	0 <coda_set_error>
    6f3c:	mvn	r3, #0
    6f40:	b	6fc0 <coda_type_get_record_field_type+0x120>
    6f44:	ldr	r3, [fp, #-12]
    6f48:	cmp	r3, #0
    6f4c:	blt	6f64 <coda_type_get_record_field_type+0xc4>
    6f50:	ldr	r3, [fp, #-8]
    6f54:	ldr	r2, [r3, #48]	; 0x30
    6f58:	ldr	r3, [fp, #-12]
    6f5c:	cmp	r2, r3
    6f60:	bgt	6f98 <coda_type_get_record_field_type+0xf8>
    6f64:	ldr	r3, [fp, #-8]
    6f68:	ldr	r2, [r3, #48]	; 0x30
    6f6c:	ldr	r3, [pc, #108]	; 6fe0 <coda_type_get_record_field_type+0x140>
    6f70:	str	r3, [sp, #4]
    6f74:	ldr	r3, [pc, #84]	; 6fd0 <coda_type_get_record_field_type+0x130>
    6f78:	str	r3, [sp]
    6f7c:	mov	r3, r2
    6f80:	ldr	r2, [fp, #-12]
    6f84:	ldr	r1, [pc, #88]	; 6fe4 <coda_type_get_record_field_type+0x144>
    6f88:	mvn	r0, #100	; 0x64
    6f8c:	bl	0 <coda_set_error>
    6f90:	mvn	r3, #0
    6f94:	b	6fc0 <coda_type_get_record_field_type+0x120>
    6f98:	ldr	r3, [fp, #-8]
    6f9c:	ldr	r2, [r3, #52]	; 0x34
    6fa0:	ldr	r3, [fp, #-12]
    6fa4:	lsl	r3, r3, #2
    6fa8:	add	r3, r2, r3
    6fac:	ldr	r3, [r3]
    6fb0:	ldr	r2, [r3, #8]
    6fb4:	ldr	r3, [fp, #-16]
    6fb8:	str	r2, [r3]
    6fbc:	mov	r3, #0
    6fc0:	mov	r0, r3
    6fc4:	sub	sp, fp, #4
    6fc8:	pop	{fp, pc}
    6fcc:	.word	0x00000d35
    6fd0:	.word	0x00000028
    6fd4:	.word	0x000001f0
    6fd8:	.word	0x000017a0
    6fdc:	.word	0x00000800
    6fe0:	.word	0x00000d47
    6fe4:	.word	0x000018ac

00006fe8 <coda_type_get_record_field_name>:
    6fe8:	push	{fp, lr}
    6fec:	add	fp, sp, #4
    6ff0:	sub	sp, sp, #24
    6ff4:	str	r0, [fp, #-8]
    6ff8:	str	r1, [fp, #-12]
    6ffc:	str	r2, [fp, #-16]
    7000:	ldr	r3, [fp, #-8]
    7004:	cmp	r3, #0
    7008:	bne	7028 <coda_type_get_record_field_name+0x40>
    700c:	ldr	r3, [pc, #256]	; 7114 <coda_type_get_record_field_name+0x12c>
    7010:	ldr	r2, [pc, #256]	; 7118 <coda_type_get_record_field_name+0x130>
    7014:	ldr	r1, [pc, #256]	; 711c <coda_type_get_record_field_name+0x134>
    7018:	mvn	r0, #99	; 0x63
    701c:	bl	0 <coda_set_error>
    7020:	mvn	r3, #0
    7024:	b	7108 <coda_type_get_record_field_name+0x120>
    7028:	ldr	r3, [fp, #-8]
    702c:	ldr	r3, [r3, #8]
    7030:	cmp	r3, #0
    7034:	beq	7064 <coda_type_get_record_field_name+0x7c>
    7038:	ldr	r3, [fp, #-8]
    703c:	ldr	r3, [r3, #8]
    7040:	mov	r0, r3
    7044:	bl	5e54 <coda_type_get_class_name>
    7048:	mov	r3, r0
    704c:	mov	r2, r3
    7050:	ldr	r1, [pc, #200]	; 7120 <coda_type_get_record_field_name+0x138>
    7054:	mvn	r0, #104	; 0x68
    7058:	bl	0 <coda_set_error>
    705c:	mvn	r3, #0
    7060:	b	7108 <coda_type_get_record_field_name+0x120>
    7064:	ldr	r3, [fp, #-16]
    7068:	cmp	r3, #0
    706c:	bne	708c <coda_type_get_record_field_name+0xa4>
    7070:	ldr	r3, [pc, #172]	; 7124 <coda_type_get_record_field_name+0x13c>
    7074:	ldr	r2, [pc, #156]	; 7118 <coda_type_get_record_field_name+0x130>
    7078:	ldr	r1, [pc, #168]	; 7128 <coda_type_get_record_field_name+0x140>
    707c:	mvn	r0, #99	; 0x63
    7080:	bl	0 <coda_set_error>
    7084:	mvn	r3, #0
    7088:	b	7108 <coda_type_get_record_field_name+0x120>
    708c:	ldr	r3, [fp, #-12]
    7090:	cmp	r3, #0
    7094:	blt	70ac <coda_type_get_record_field_name+0xc4>
    7098:	ldr	r3, [fp, #-8]
    709c:	ldr	r2, [r3, #48]	; 0x30
    70a0:	ldr	r3, [fp, #-12]
    70a4:	cmp	r2, r3
    70a8:	bgt	70e0 <coda_type_get_record_field_name+0xf8>
    70ac:	ldr	r3, [fp, #-8]
    70b0:	ldr	r2, [r3, #48]	; 0x30
    70b4:	ldr	r3, [pc, #112]	; 712c <coda_type_get_record_field_name+0x144>
    70b8:	str	r3, [sp, #4]
    70bc:	ldr	r3, [pc, #84]	; 7118 <coda_type_get_record_field_name+0x130>
    70c0:	str	r3, [sp]
    70c4:	mov	r3, r2
    70c8:	ldr	r2, [fp, #-12]
    70cc:	ldr	r1, [pc, #92]	; 7130 <coda_type_get_record_field_name+0x148>
    70d0:	mvn	r0, #100	; 0x64
    70d4:	bl	0 <coda_set_error>
    70d8:	mvn	r3, #0
    70dc:	b	7108 <coda_type_get_record_field_name+0x120>
    70e0:	ldr	r3, [fp, #-8]
    70e4:	ldr	r2, [r3, #52]	; 0x34
    70e8:	ldr	r3, [fp, #-12]
    70ec:	lsl	r3, r3, #2
    70f0:	add	r3, r2, r3
    70f4:	ldr	r3, [r3]
    70f8:	ldr	r2, [r3]
    70fc:	ldr	r3, [fp, #-16]
    7100:	str	r2, [r3]
    7104:	mov	r3, #0
    7108:	mov	r0, r3
    710c:	sub	sp, fp, #4
    7110:	pop	{fp, pc}
    7114:	.word	0x00000d5c
    7118:	.word	0x00000028
    711c:	.word	0x000001f0
    7120:	.word	0x000017a0
    7124:	.word	0x00000d67
    7128:	.word	0x00000264
    712c:	.word	0x00000d6e
    7130:	.word	0x000018ac

00007134 <coda_type_get_record_field_real_name>:
    7134:	push	{fp, lr}
    7138:	add	fp, sp, #4
    713c:	sub	sp, sp, #24
    7140:	str	r0, [fp, #-8]
    7144:	str	r1, [fp, #-12]
    7148:	str	r2, [fp, #-16]
    714c:	ldr	r3, [fp, #-8]
    7150:	cmp	r3, #0
    7154:	bne	7174 <coda_type_get_record_field_real_name+0x40>
    7158:	ldr	r3, [pc, #400]	; 72f0 <coda_type_get_record_field_real_name+0x1bc>
    715c:	ldr	r2, [pc, #400]	; 72f4 <coda_type_get_record_field_real_name+0x1c0>
    7160:	ldr	r1, [pc, #400]	; 72f8 <coda_type_get_record_field_real_name+0x1c4>
    7164:	mvn	r0, #99	; 0x63
    7168:	bl	0 <coda_set_error>
    716c:	mvn	r3, #0
    7170:	b	72e4 <coda_type_get_record_field_real_name+0x1b0>
    7174:	ldr	r3, [fp, #-8]
    7178:	ldr	r3, [r3, #8]
    717c:	cmp	r3, #0
    7180:	beq	71b0 <coda_type_get_record_field_real_name+0x7c>
    7184:	ldr	r3, [fp, #-8]
    7188:	ldr	r3, [r3, #8]
    718c:	mov	r0, r3
    7190:	bl	5e54 <coda_type_get_class_name>
    7194:	mov	r3, r0
    7198:	mov	r2, r3
    719c:	ldr	r1, [pc, #344]	; 72fc <coda_type_get_record_field_real_name+0x1c8>
    71a0:	mvn	r0, #104	; 0x68
    71a4:	bl	0 <coda_set_error>
    71a8:	mvn	r3, #0
    71ac:	b	72e4 <coda_type_get_record_field_real_name+0x1b0>
    71b0:	ldr	r3, [fp, #-16]
    71b4:	cmp	r3, #0
    71b8:	bne	71d8 <coda_type_get_record_field_real_name+0xa4>
    71bc:	ldr	r3, [pc, #316]	; 7300 <coda_type_get_record_field_real_name+0x1cc>
    71c0:	ldr	r2, [pc, #300]	; 72f4 <coda_type_get_record_field_real_name+0x1c0>
    71c4:	ldr	r1, [pc, #312]	; 7304 <coda_type_get_record_field_real_name+0x1d0>
    71c8:	mvn	r0, #99	; 0x63
    71cc:	bl	0 <coda_set_error>
    71d0:	mvn	r3, #0
    71d4:	b	72e4 <coda_type_get_record_field_real_name+0x1b0>
    71d8:	ldr	r3, [fp, #-12]
    71dc:	cmp	r3, #0
    71e0:	blt	71f8 <coda_type_get_record_field_real_name+0xc4>
    71e4:	ldr	r3, [fp, #-8]
    71e8:	ldr	r2, [r3, #48]	; 0x30
    71ec:	ldr	r3, [fp, #-12]
    71f0:	cmp	r2, r3
    71f4:	bgt	722c <coda_type_get_record_field_real_name+0xf8>
    71f8:	ldr	r3, [fp, #-8]
    71fc:	ldr	r2, [r3, #48]	; 0x30
    7200:	ldr	r3, [pc, #256]	; 7308 <coda_type_get_record_field_real_name+0x1d4>
    7204:	str	r3, [sp, #4]
    7208:	ldr	r3, [pc, #228]	; 72f4 <coda_type_get_record_field_real_name+0x1c0>
    720c:	str	r3, [sp]
    7210:	mov	r3, r2
    7214:	ldr	r2, [fp, #-12]
    7218:	ldr	r1, [pc, #236]	; 730c <coda_type_get_record_field_real_name+0x1d8>
    721c:	mvn	r0, #100	; 0x64
    7220:	bl	0 <coda_set_error>
    7224:	mvn	r3, #0
    7228:	b	72e4 <coda_type_get_record_field_real_name+0x1b0>
    722c:	ldr	r3, [fp, #-8]
    7230:	ldr	r2, [r3, #52]	; 0x34
    7234:	ldr	r3, [fp, #-12]
    7238:	lsl	r3, r3, #2
    723c:	add	r3, r2, r3
    7240:	ldr	r3, [r3]
    7244:	ldr	r3, [r3, #4]
    7248:	cmp	r3, #0
    724c:	beq	72bc <coda_type_get_record_field_real_name+0x188>
    7250:	ldr	r3, [fp, #-8]
    7254:	ldr	r3, [r3]
    7258:	cmp	r3, #2
    725c:	bne	7294 <coda_type_get_record_field_real_name+0x160>
    7260:	ldr	r3, [fp, #-8]
    7264:	ldr	r2, [r3, #52]	; 0x34
    7268:	ldr	r3, [fp, #-12]
    726c:	lsl	r3, r3, #2
    7270:	add	r3, r2, r3
    7274:	ldr	r3, [r3]
    7278:	ldr	r3, [r3, #4]
    727c:	mov	r0, r3
    7280:	bl	0 <coda_element_name_from_xml_name>
    7284:	mov	r2, r0
    7288:	ldr	r3, [fp, #-16]
    728c:	str	r2, [r3]
    7290:	b	72e0 <coda_type_get_record_field_real_name+0x1ac>
    7294:	ldr	r3, [fp, #-8]
    7298:	ldr	r2, [r3, #52]	; 0x34
    729c:	ldr	r3, [fp, #-12]
    72a0:	lsl	r3, r3, #2
    72a4:	add	r3, r2, r3
    72a8:	ldr	r3, [r3]
    72ac:	ldr	r2, [r3, #4]
    72b0:	ldr	r3, [fp, #-16]
    72b4:	str	r2, [r3]
    72b8:	b	72e0 <coda_type_get_record_field_real_name+0x1ac>
    72bc:	ldr	r3, [fp, #-8]
    72c0:	ldr	r2, [r3, #52]	; 0x34
    72c4:	ldr	r3, [fp, #-12]
    72c8:	lsl	r3, r3, #2
    72cc:	add	r3, r2, r3
    72d0:	ldr	r3, [r3]
    72d4:	ldr	r2, [r3]
    72d8:	ldr	r3, [fp, #-16]
    72dc:	str	r2, [r3]
    72e0:	mov	r3, #0
    72e4:	mov	r0, r3
    72e8:	sub	sp, fp, #4
    72ec:	pop	{fp, pc}
    72f0:	.word	0x00000d8c
    72f4:	.word	0x00000028
    72f8:	.word	0x000001f0
    72fc:	.word	0x000017a0
    7300:	.word	0x00000d97
    7304:	.word	0x00000264
    7308:	.word	0x00000d9e
    730c:	.word	0x000018ac

00007310 <coda_type_get_record_field_hidden_status>:
    7310:	push	{fp, lr}
    7314:	add	fp, sp, #4
    7318:	sub	sp, sp, #24
    731c:	str	r0, [fp, #-8]
    7320:	str	r1, [fp, #-12]
    7324:	str	r2, [fp, #-16]
    7328:	ldr	r3, [fp, #-8]
    732c:	cmp	r3, #0
    7330:	bne	7350 <coda_type_get_record_field_hidden_status+0x40>
    7334:	ldr	r3, [pc, #256]	; 743c <coda_type_get_record_field_hidden_status+0x12c>
    7338:	ldr	r2, [pc, #256]	; 7440 <coda_type_get_record_field_hidden_status+0x130>
    733c:	ldr	r1, [pc, #256]	; 7444 <coda_type_get_record_field_hidden_status+0x134>
    7340:	mvn	r0, #99	; 0x63
    7344:	bl	0 <coda_set_error>
    7348:	mvn	r3, #0
    734c:	b	7430 <coda_type_get_record_field_hidden_status+0x120>
    7350:	ldr	r3, [fp, #-8]
    7354:	ldr	r3, [r3, #8]
    7358:	cmp	r3, #0
    735c:	beq	738c <coda_type_get_record_field_hidden_status+0x7c>
    7360:	ldr	r3, [fp, #-8]
    7364:	ldr	r3, [r3, #8]
    7368:	mov	r0, r3
    736c:	bl	5e54 <coda_type_get_class_name>
    7370:	mov	r3, r0
    7374:	mov	r2, r3
    7378:	ldr	r1, [pc, #200]	; 7448 <coda_type_get_record_field_hidden_status+0x138>
    737c:	mvn	r0, #104	; 0x68
    7380:	bl	0 <coda_set_error>
    7384:	mvn	r3, #0
    7388:	b	7430 <coda_type_get_record_field_hidden_status+0x120>
    738c:	ldr	r3, [fp, #-16]
    7390:	cmp	r3, #0
    7394:	bne	73b4 <coda_type_get_record_field_hidden_status+0xa4>
    7398:	ldr	r3, [pc, #172]	; 744c <coda_type_get_record_field_hidden_status+0x13c>
    739c:	ldr	r2, [pc, #156]	; 7440 <coda_type_get_record_field_hidden_status+0x130>
    73a0:	ldr	r1, [pc, #168]	; 7450 <coda_type_get_record_field_hidden_status+0x140>
    73a4:	mvn	r0, #99	; 0x63
    73a8:	bl	0 <coda_set_error>
    73ac:	mvn	r3, #0
    73b0:	b	7430 <coda_type_get_record_field_hidden_status+0x120>
    73b4:	ldr	r3, [fp, #-12]
    73b8:	cmp	r3, #0
    73bc:	blt	73d4 <coda_type_get_record_field_hidden_status+0xc4>
    73c0:	ldr	r3, [fp, #-8]
    73c4:	ldr	r2, [r3, #48]	; 0x30
    73c8:	ldr	r3, [fp, #-12]
    73cc:	cmp	r2, r3
    73d0:	bgt	7408 <coda_type_get_record_field_hidden_status+0xf8>
    73d4:	ldr	r3, [fp, #-8]
    73d8:	ldr	r2, [r3, #48]	; 0x30
    73dc:	ldr	r3, [pc, #112]	; 7454 <coda_type_get_record_field_hidden_status+0x144>
    73e0:	str	r3, [sp, #4]
    73e4:	ldr	r3, [pc, #84]	; 7440 <coda_type_get_record_field_hidden_status+0x130>
    73e8:	str	r3, [sp]
    73ec:	mov	r3, r2
    73f0:	ldr	r2, [fp, #-12]
    73f4:	ldr	r1, [pc, #92]	; 7458 <coda_type_get_record_field_hidden_status+0x148>
    73f8:	mvn	r0, #100	; 0x64
    73fc:	bl	0 <coda_set_error>
    7400:	mvn	r3, #0
    7404:	b	7430 <coda_type_get_record_field_hidden_status+0x120>
    7408:	ldr	r3, [fp, #-8]
    740c:	ldr	r2, [r3, #52]	; 0x34
    7410:	ldr	r3, [fp, #-12]
    7414:	lsl	r3, r3, #2
    7418:	add	r3, r2, r3
    741c:	ldr	r3, [r3]
    7420:	ldr	r2, [r3, #12]
    7424:	ldr	r3, [fp, #-16]
    7428:	str	r2, [r3]
    742c:	mov	r3, #0
    7430:	mov	r0, r3
    7434:	sub	sp, fp, #4
    7438:	pop	{fp, pc}
    743c:	.word	0x00000dc4
    7440:	.word	0x00000028
    7444:	.word	0x000001f0
    7448:	.word	0x000017a0
    744c:	.word	0x00000dcf
    7450:	.word	0x000018e4
    7454:	.word	0x00000dd6
    7458:	.word	0x000018ac

0000745c <coda_type_get_record_field_available_status>:
    745c:	push	{fp, lr}
    7460:	add	fp, sp, #4
    7464:	sub	sp, sp, #24
    7468:	str	r0, [fp, #-8]
    746c:	str	r1, [fp, #-12]
    7470:	str	r2, [fp, #-16]
    7474:	ldr	r3, [fp, #-8]
    7478:	cmp	r3, #0
    747c:	bne	749c <coda_type_get_record_field_available_status+0x40>
    7480:	mov	r3, #3568	; 0xdf0
    7484:	ldr	r2, [pc, #272]	; 759c <coda_type_get_record_field_available_status+0x140>
    7488:	ldr	r1, [pc, #272]	; 75a0 <coda_type_get_record_field_available_status+0x144>
    748c:	mvn	r0, #99	; 0x63
    7490:	bl	0 <coda_set_error>
    7494:	mvn	r3, #0
    7498:	b	7590 <coda_type_get_record_field_available_status+0x134>
    749c:	ldr	r3, [fp, #-8]
    74a0:	ldr	r3, [r3, #8]
    74a4:	cmp	r3, #0
    74a8:	beq	74d8 <coda_type_get_record_field_available_status+0x7c>
    74ac:	ldr	r3, [fp, #-8]
    74b0:	ldr	r3, [r3, #8]
    74b4:	mov	r0, r3
    74b8:	bl	5e54 <coda_type_get_class_name>
    74bc:	mov	r3, r0
    74c0:	mov	r2, r3
    74c4:	ldr	r1, [pc, #216]	; 75a4 <coda_type_get_record_field_available_status+0x148>
    74c8:	mvn	r0, #104	; 0x68
    74cc:	bl	0 <coda_set_error>
    74d0:	mvn	r3, #0
    74d4:	b	7590 <coda_type_get_record_field_available_status+0x134>
    74d8:	ldr	r3, [fp, #-16]
    74dc:	cmp	r3, #0
    74e0:	bne	7500 <coda_type_get_record_field_available_status+0xa4>
    74e4:	ldr	r3, [pc, #188]	; 75a8 <coda_type_get_record_field_available_status+0x14c>
    74e8:	ldr	r2, [pc, #172]	; 759c <coda_type_get_record_field_available_status+0x140>
    74ec:	ldr	r1, [pc, #184]	; 75ac <coda_type_get_record_field_available_status+0x150>
    74f0:	mvn	r0, #99	; 0x63
    74f4:	bl	0 <coda_set_error>
    74f8:	mvn	r3, #0
    74fc:	b	7590 <coda_type_get_record_field_available_status+0x134>
    7500:	ldr	r3, [fp, #-12]
    7504:	cmp	r3, #0
    7508:	blt	7520 <coda_type_get_record_field_available_status+0xc4>
    750c:	ldr	r3, [fp, #-8]
    7510:	ldr	r2, [r3, #48]	; 0x30
    7514:	ldr	r3, [fp, #-12]
    7518:	cmp	r2, r3
    751c:	bgt	7554 <coda_type_get_record_field_available_status+0xf8>
    7520:	ldr	r3, [fp, #-8]
    7524:	ldr	r2, [r3, #48]	; 0x30
    7528:	ldr	r3, [pc, #128]	; 75b0 <coda_type_get_record_field_available_status+0x154>
    752c:	str	r3, [sp, #4]
    7530:	ldr	r3, [pc, #100]	; 759c <coda_type_get_record_field_available_status+0x140>
    7534:	str	r3, [sp]
    7538:	mov	r3, r2
    753c:	ldr	r2, [fp, #-12]
    7540:	ldr	r1, [pc, #108]	; 75b4 <coda_type_get_record_field_available_status+0x158>
    7544:	mvn	r0, #100	; 0x64
    7548:	bl	0 <coda_set_error>
    754c:	mvn	r3, #0
    7550:	b	7590 <coda_type_get_record_field_available_status+0x134>
    7554:	ldr	r3, [fp, #-8]
    7558:	ldr	r2, [r3, #52]	; 0x34
    755c:	ldr	r3, [fp, #-12]
    7560:	lsl	r3, r3, #2
    7564:	add	r3, r2, r3
    7568:	ldr	r3, [r3]
    756c:	ldrb	r3, [r3, #16]
    7570:	cmp	r3, #0
    7574:	beq	7580 <coda_type_get_record_field_available_status+0x124>
    7578:	mvn	r2, #0
    757c:	b	7584 <coda_type_get_record_field_available_status+0x128>
    7580:	mov	r2, #1
    7584:	ldr	r3, [fp, #-16]
    7588:	str	r2, [r3]
    758c:	mov	r3, #0
    7590:	mov	r0, r3
    7594:	sub	sp, fp, #4
    7598:	pop	{fp, pc}
    759c:	.word	0x00000028
    75a0:	.word	0x000001f0
    75a4:	.word	0x000017a0
    75a8:	.word	0x00000dfb
    75ac:	.word	0x00001904
    75b0:	.word	0x00000e02
    75b4:	.word	0x000018ac

000075b8 <coda_type_get_record_union_status>:
    75b8:	push	{fp, lr}
    75bc:	add	fp, sp, #4
    75c0:	sub	sp, sp, #8
    75c4:	str	r0, [fp, #-8]
    75c8:	str	r1, [fp, #-12]
    75cc:	ldr	r3, [fp, #-8]
    75d0:	cmp	r3, #0
    75d4:	bne	75f4 <coda_type_get_record_union_status+0x3c>
    75d8:	ldr	r3, [pc, #152]	; 7678 <coda_type_get_record_union_status+0xc0>
    75dc:	ldr	r2, [pc, #152]	; 767c <coda_type_get_record_union_status+0xc4>
    75e0:	ldr	r1, [pc, #152]	; 7680 <coda_type_get_record_union_status+0xc8>
    75e4:	mvn	r0, #99	; 0x63
    75e8:	bl	0 <coda_set_error>
    75ec:	mvn	r3, #0
    75f0:	b	766c <coda_type_get_record_union_status+0xb4>
    75f4:	ldr	r3, [fp, #-8]
    75f8:	ldr	r3, [r3, #8]
    75fc:	cmp	r3, #0
    7600:	beq	7630 <coda_type_get_record_union_status+0x78>
    7604:	ldr	r3, [fp, #-8]
    7608:	ldr	r3, [r3, #8]
    760c:	mov	r0, r3
    7610:	bl	5e54 <coda_type_get_class_name>
    7614:	mov	r3, r0
    7618:	mov	r2, r3
    761c:	ldr	r1, [pc, #96]	; 7684 <coda_type_get_record_union_status+0xcc>
    7620:	mvn	r0, #104	; 0x68
    7624:	bl	0 <coda_set_error>
    7628:	mvn	r3, #0
    762c:	b	766c <coda_type_get_record_union_status+0xb4>
    7630:	ldr	r3, [fp, #-12]
    7634:	cmp	r3, #0
    7638:	bne	7658 <coda_type_get_record_union_status+0xa0>
    763c:	ldr	r3, [pc, #68]	; 7688 <coda_type_get_record_union_status+0xd0>
    7640:	ldr	r2, [pc, #52]	; 767c <coda_type_get_record_union_status+0xc4>
    7644:	ldr	r1, [pc, #64]	; 768c <coda_type_get_record_union_status+0xd4>
    7648:	mvn	r0, #99	; 0x63
    764c:	bl	0 <coda_set_error>
    7650:	mvn	r3, #0
    7654:	b	766c <coda_type_get_record_union_status+0xb4>
    7658:	ldr	r3, [fp, #-8]
    765c:	ldr	r2, [r3, #64]	; 0x40
    7660:	ldr	r3, [fp, #-12]
    7664:	str	r2, [r3]
    7668:	mov	r3, #0
    766c:	mov	r0, r3
    7670:	sub	sp, fp, #4
    7674:	pop	{fp, pc}
    7678:	.word	0x00000e17
    767c:	.word	0x00000028
    7680:	.word	0x000001f0
    7684:	.word	0x000017a0
    7688:	.word	0x00000e22
    768c:	.word	0x00001928

00007690 <coda_type_get_array_num_dims>:
    7690:	push	{fp, lr}
    7694:	add	fp, sp, #4
    7698:	sub	sp, sp, #8
    769c:	str	r0, [fp, #-8]
    76a0:	str	r1, [fp, #-12]
    76a4:	ldr	r3, [fp, #-8]
    76a8:	cmp	r3, #0
    76ac:	bne	76cc <coda_type_get_array_num_dims+0x3c>
    76b0:	ldr	r3, [pc, #152]	; 7750 <coda_type_get_array_num_dims+0xc0>
    76b4:	ldr	r2, [pc, #152]	; 7754 <coda_type_get_array_num_dims+0xc4>
    76b8:	ldr	r1, [pc, #152]	; 7758 <coda_type_get_array_num_dims+0xc8>
    76bc:	mvn	r0, #99	; 0x63
    76c0:	bl	0 <coda_set_error>
    76c4:	mvn	r3, #0
    76c8:	b	7744 <coda_type_get_array_num_dims+0xb4>
    76cc:	ldr	r3, [fp, #-8]
    76d0:	ldr	r3, [r3, #8]
    76d4:	cmp	r3, #1
    76d8:	beq	7708 <coda_type_get_array_num_dims+0x78>
    76dc:	ldr	r3, [fp, #-8]
    76e0:	ldr	r3, [r3, #8]
    76e4:	mov	r0, r3
    76e8:	bl	5e54 <coda_type_get_class_name>
    76ec:	mov	r3, r0
    76f0:	mov	r2, r3
    76f4:	ldr	r1, [pc, #96]	; 775c <coda_type_get_array_num_dims+0xcc>
    76f8:	mvn	r0, #104	; 0x68
    76fc:	bl	0 <coda_set_error>
    7700:	mvn	r3, #0
    7704:	b	7744 <coda_type_get_array_num_dims+0xb4>
    7708:	ldr	r3, [fp, #-12]
    770c:	cmp	r3, #0
    7710:	bne	7730 <coda_type_get_array_num_dims+0xa0>
    7714:	ldr	r3, [pc, #68]	; 7760 <coda_type_get_array_num_dims+0xd0>
    7718:	ldr	r2, [pc, #52]	; 7754 <coda_type_get_array_num_dims+0xc4>
    771c:	ldr	r1, [pc, #64]	; 7764 <coda_type_get_array_num_dims+0xd4>
    7720:	mvn	r0, #99	; 0x63
    7724:	bl	0 <coda_set_error>
    7728:	mvn	r3, #0
    772c:	b	7744 <coda_type_get_array_num_dims+0xb4>
    7730:	ldr	r3, [fp, #-8]
    7734:	ldr	r2, [r3, #48]	; 0x30
    7738:	ldr	r3, [fp, #-12]
    773c:	str	r2, [r3]
    7740:	mov	r3, #0
    7744:	mov	r0, r3
    7748:	sub	sp, fp, #4
    774c:	pop	{fp, pc}
    7750:	.word	0x00000e36
    7754:	.word	0x00000028
    7758:	.word	0x000001f0
    775c:	.word	0x0000194c
    7760:	.word	0x00000e41
    7764:	.word	0x00001984

00007768 <coda_type_get_array_dim>:
    7768:	push	{fp, lr}
    776c:	add	fp, sp, #4
    7770:	sub	sp, sp, #24
    7774:	str	r0, [fp, #-16]
    7778:	str	r1, [fp, #-20]	; 0xffffffec
    777c:	str	r2, [fp, #-24]	; 0xffffffe8
    7780:	ldr	r3, [fp, #-16]
    7784:	cmp	r3, #0
    7788:	bne	77a8 <coda_type_get_array_dim+0x40>
    778c:	mov	r3, #3680	; 0xe60
    7790:	ldr	r2, [pc, #276]	; 78ac <coda_type_get_array_dim+0x144>
    7794:	ldr	r1, [pc, #276]	; 78b0 <coda_type_get_array_dim+0x148>
    7798:	mvn	r0, #99	; 0x63
    779c:	bl	0 <coda_set_error>
    77a0:	mvn	r3, #0
    77a4:	b	78a0 <coda_type_get_array_dim+0x138>
    77a8:	ldr	r3, [fp, #-16]
    77ac:	ldr	r3, [r3, #8]
    77b0:	cmp	r3, #1
    77b4:	beq	77e4 <coda_type_get_array_dim+0x7c>
    77b8:	ldr	r3, [fp, #-16]
    77bc:	ldr	r3, [r3, #8]
    77c0:	mov	r0, r3
    77c4:	bl	5e54 <coda_type_get_class_name>
    77c8:	mov	r3, r0
    77cc:	mov	r2, r3
    77d0:	ldr	r1, [pc, #220]	; 78b4 <coda_type_get_array_dim+0x14c>
    77d4:	mvn	r0, #104	; 0x68
    77d8:	bl	0 <coda_set_error>
    77dc:	mvn	r3, #0
    77e0:	b	78a0 <coda_type_get_array_dim+0x138>
    77e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    77e8:	cmp	r3, #0
    77ec:	bne	780c <coda_type_get_array_dim+0xa4>
    77f0:	ldr	r3, [pc, #192]	; 78b8 <coda_type_get_array_dim+0x150>
    77f4:	ldr	r2, [pc, #176]	; 78ac <coda_type_get_array_dim+0x144>
    77f8:	ldr	r1, [pc, #188]	; 78bc <coda_type_get_array_dim+0x154>
    77fc:	mvn	r0, #99	; 0x63
    7800:	bl	0 <coda_set_error>
    7804:	mvn	r3, #0
    7808:	b	78a0 <coda_type_get_array_dim+0x138>
    780c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7810:	cmp	r3, #0
    7814:	bne	7834 <coda_type_get_array_dim+0xcc>
    7818:	mov	r3, #3696	; 0xe70
    781c:	ldr	r2, [pc, #136]	; 78ac <coda_type_get_array_dim+0x144>
    7820:	ldr	r1, [pc, #152]	; 78c0 <coda_type_get_array_dim+0x158>
    7824:	mvn	r0, #99	; 0x63
    7828:	bl	0 <coda_set_error>
    782c:	mvn	r3, #0
    7830:	b	78a0 <coda_type_get_array_dim+0x138>
    7834:	ldr	r3, [fp, #-16]
    7838:	ldr	r2, [r3, #48]	; 0x30
    783c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7840:	str	r2, [r3]
    7844:	mov	r3, #0
    7848:	str	r3, [fp, #-8]
    784c:	b	7888 <coda_type_get_array_dim+0x120>
    7850:	ldr	r3, [fp, #-8]
    7854:	lsl	r3, r3, #2
    7858:	ldr	r2, [fp, #-24]	; 0xffffffe8
    785c:	add	r2, r2, r3
    7860:	ldr	r1, [fp, #-16]
    7864:	ldr	r3, [fp, #-8]
    7868:	add	r3, r3, #12
    786c:	lsl	r3, r3, #2
    7870:	add	r3, r1, r3
    7874:	ldr	r3, [r3, #4]
    7878:	str	r3, [r2]
    787c:	ldr	r3, [fp, #-8]
    7880:	add	r3, r3, #1
    7884:	str	r3, [fp, #-8]
    7888:	ldr	r3, [fp, #-16]
    788c:	ldr	r2, [r3, #48]	; 0x30
    7890:	ldr	r3, [fp, #-8]
    7894:	cmp	r2, r3
    7898:	bgt	7850 <coda_type_get_array_dim+0xe8>
    789c:	mov	r3, #0
    78a0:	mov	r0, r3
    78a4:	sub	sp, fp, #4
    78a8:	pop	{fp, pc}
    78ac:	.word	0x00000028
    78b0:	.word	0x000001f0
    78b4:	.word	0x0000194c
    78b8:	.word	0x00000e6b
    78bc:	.word	0x00001984
    78c0:	.word	0x000019a8

000078c4 <coda_type_get_array_base_type>:
    78c4:	push	{fp, lr}
    78c8:	add	fp, sp, #4
    78cc:	sub	sp, sp, #8
    78d0:	str	r0, [fp, #-8]
    78d4:	str	r1, [fp, #-12]
    78d8:	ldr	r3, [fp, #-8]
    78dc:	cmp	r3, #0
    78e0:	bne	7900 <coda_type_get_array_base_type+0x3c>
    78e4:	ldr	r3, [pc, #152]	; 7984 <coda_type_get_array_base_type+0xc0>
    78e8:	ldr	r2, [pc, #152]	; 7988 <coda_type_get_array_base_type+0xc4>
    78ec:	ldr	r1, [pc, #152]	; 798c <coda_type_get_array_base_type+0xc8>
    78f0:	mvn	r0, #99	; 0x63
    78f4:	bl	0 <coda_set_error>
    78f8:	mvn	r3, #0
    78fc:	b	7978 <coda_type_get_array_base_type+0xb4>
    7900:	ldr	r3, [fp, #-8]
    7904:	ldr	r3, [r3, #8]
    7908:	cmp	r3, #1
    790c:	beq	793c <coda_type_get_array_base_type+0x78>
    7910:	ldr	r3, [fp, #-8]
    7914:	ldr	r3, [r3, #8]
    7918:	mov	r0, r3
    791c:	bl	5e54 <coda_type_get_class_name>
    7920:	mov	r3, r0
    7924:	mov	r2, r3
    7928:	ldr	r1, [pc, #96]	; 7990 <coda_type_get_array_base_type+0xcc>
    792c:	mvn	r0, #104	; 0x68
    7930:	bl	0 <coda_set_error>
    7934:	mvn	r3, #0
    7938:	b	7978 <coda_type_get_array_base_type+0xb4>
    793c:	ldr	r3, [fp, #-12]
    7940:	cmp	r3, #0
    7944:	bne	7964 <coda_type_get_array_base_type+0xa0>
    7948:	ldr	r3, [pc, #68]	; 7994 <coda_type_get_array_base_type+0xd0>
    794c:	ldr	r2, [pc, #52]	; 7988 <coda_type_get_array_base_type+0xc4>
    7950:	ldr	r1, [pc, #64]	; 7998 <coda_type_get_array_base_type+0xd4>
    7954:	mvn	r0, #99	; 0x63
    7958:	bl	0 <coda_set_error>
    795c:	mvn	r3, #0
    7960:	b	7978 <coda_type_get_array_base_type+0xb4>
    7964:	ldr	r3, [fp, #-8]
    7968:	ldr	r2, [r3, #40]	; 0x28
    796c:	ldr	r3, [fp, #-12]
    7970:	str	r2, [r3]
    7974:	mov	r3, #0
    7978:	mov	r0, r3
    797c:	sub	sp, fp, #4
    7980:	pop	{fp, pc}
    7984:	.word	0x00000e88
    7988:	.word	0x00000028
    798c:	.word	0x000001f0
    7990:	.word	0x0000194c
    7994:	.word	0x00000e93
    7998:	.word	0x0000140c

0000799c <coda_type_get_special_type>:
    799c:	push	{fp, lr}
    79a0:	add	fp, sp, #4
    79a4:	sub	sp, sp, #8
    79a8:	str	r0, [fp, #-8]
    79ac:	str	r1, [fp, #-12]
    79b0:	ldr	r3, [fp, #-8]
    79b4:	cmp	r3, #0
    79b8:	bne	79d8 <coda_type_get_special_type+0x3c>
    79bc:	ldr	r3, [pc, #152]	; 7a5c <coda_type_get_special_type+0xc0>
    79c0:	ldr	r2, [pc, #152]	; 7a60 <coda_type_get_special_type+0xc4>
    79c4:	ldr	r1, [pc, #152]	; 7a64 <coda_type_get_special_type+0xc8>
    79c8:	mvn	r0, #99	; 0x63
    79cc:	bl	0 <coda_set_error>
    79d0:	mvn	r3, #0
    79d4:	b	7a50 <coda_type_get_special_type+0xb4>
    79d8:	ldr	r3, [fp, #-8]
    79dc:	ldr	r3, [r3, #8]
    79e0:	cmp	r3, #6
    79e4:	beq	7a14 <coda_type_get_special_type+0x78>
    79e8:	ldr	r3, [fp, #-8]
    79ec:	ldr	r3, [r3, #8]
    79f0:	mov	r0, r3
    79f4:	bl	5e54 <coda_type_get_class_name>
    79f8:	mov	r3, r0
    79fc:	mov	r2, r3
    7a00:	ldr	r1, [pc, #96]	; 7a68 <coda_type_get_special_type+0xcc>
    7a04:	mvn	r0, #104	; 0x68
    7a08:	bl	0 <coda_set_error>
    7a0c:	mvn	r3, #0
    7a10:	b	7a50 <coda_type_get_special_type+0xb4>
    7a14:	ldr	r3, [fp, #-12]
    7a18:	cmp	r3, #0
    7a1c:	bne	7a3c <coda_type_get_special_type+0xa0>
    7a20:	ldr	r3, [pc, #68]	; 7a6c <coda_type_get_special_type+0xd0>
    7a24:	ldr	r2, [pc, #52]	; 7a60 <coda_type_get_special_type+0xc4>
    7a28:	ldr	r1, [pc, #64]	; 7a70 <coda_type_get_special_type+0xd4>
    7a2c:	mvn	r0, #99	; 0x63
    7a30:	bl	0 <coda_set_error>
    7a34:	mvn	r3, #0
    7a38:	b	7a50 <coda_type_get_special_type+0xb4>
    7a3c:	ldr	r3, [fp, #-8]
    7a40:	ldr	r2, [r3, #40]	; 0x28
    7a44:	ldr	r3, [fp, #-12]
    7a48:	str	r2, [r3]
    7a4c:	mov	r3, #0
    7a50:	mov	r0, r3
    7a54:	sub	sp, fp, #4
    7a58:	pop	{fp, pc}
    7a5c:	.word	0x00000ea8
    7a60:	.word	0x00000028
    7a64:	.word	0x000001f0
    7a68:	.word	0x000019c8
    7a6c:	.word	0x00000eb3
    7a70:	.word	0x00001a04

00007a74 <coda_type_get_special_base_type>:
    7a74:	push	{fp, lr}
    7a78:	add	fp, sp, #4
    7a7c:	sub	sp, sp, #8
    7a80:	str	r0, [fp, #-8]
    7a84:	str	r1, [fp, #-12]
    7a88:	ldr	r3, [fp, #-8]
    7a8c:	cmp	r3, #0
    7a90:	bne	7ab0 <coda_type_get_special_base_type+0x3c>
    7a94:	ldr	r3, [pc, #152]	; 7b34 <coda_type_get_special_base_type+0xc0>
    7a98:	ldr	r2, [pc, #152]	; 7b38 <coda_type_get_special_base_type+0xc4>
    7a9c:	ldr	r1, [pc, #152]	; 7b3c <coda_type_get_special_base_type+0xc8>
    7aa0:	mvn	r0, #99	; 0x63
    7aa4:	bl	0 <coda_set_error>
    7aa8:	mvn	r3, #0
    7aac:	b	7b28 <coda_type_get_special_base_type+0xb4>
    7ab0:	ldr	r3, [fp, #-8]
    7ab4:	ldr	r3, [r3, #8]
    7ab8:	cmp	r3, #6
    7abc:	beq	7aec <coda_type_get_special_base_type+0x78>
    7ac0:	ldr	r3, [fp, #-8]
    7ac4:	ldr	r3, [r3, #8]
    7ac8:	mov	r0, r3
    7acc:	bl	5e54 <coda_type_get_class_name>
    7ad0:	mov	r3, r0
    7ad4:	mov	r2, r3
    7ad8:	ldr	r1, [pc, #96]	; 7b40 <coda_type_get_special_base_type+0xcc>
    7adc:	mvn	r0, #104	; 0x68
    7ae0:	bl	0 <coda_set_error>
    7ae4:	mvn	r3, #0
    7ae8:	b	7b28 <coda_type_get_special_base_type+0xb4>
    7aec:	ldr	r3, [fp, #-12]
    7af0:	cmp	r3, #0
    7af4:	bne	7b14 <coda_type_get_special_base_type+0xa0>
    7af8:	ldr	r3, [pc, #68]	; 7b44 <coda_type_get_special_base_type+0xd0>
    7afc:	ldr	r2, [pc, #52]	; 7b38 <coda_type_get_special_base_type+0xc4>
    7b00:	ldr	r1, [pc, #64]	; 7b48 <coda_type_get_special_base_type+0xd4>
    7b04:	mvn	r0, #99	; 0x63
    7b08:	bl	0 <coda_set_error>
    7b0c:	mvn	r3, #0
    7b10:	b	7b28 <coda_type_get_special_base_type+0xb4>
    7b14:	ldr	r3, [fp, #-8]
    7b18:	ldr	r2, [r3, #44]	; 0x2c
    7b1c:	ldr	r3, [fp, #-12]
    7b20:	str	r2, [r3]
    7b24:	mov	r3, #0
    7b28:	mov	r0, r3
    7b2c:	sub	sp, fp, #4
    7b30:	pop	{fp, pc}
    7b34:	.word	0x00000ec7
    7b38:	.word	0x00000028
    7b3c:	.word	0x000001f0
    7b40:	.word	0x000019c8
    7b44:	.word	0x00000ed2
    7b48:	.word	0x0000140c
