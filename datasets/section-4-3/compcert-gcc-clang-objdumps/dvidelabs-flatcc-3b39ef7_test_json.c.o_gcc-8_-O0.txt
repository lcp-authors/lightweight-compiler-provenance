
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatbuffers_uint8_cast_to_pe>:
       0:	push	{fp}		; (str fp, [sp, #-4]!)
       4:	add	fp, sp, #0
       8:	sub	sp, sp, #12
       c:	mov	r3, r0
      10:	strb	r3, [fp, #-5]
      14:	ldrb	r3, [fp, #-5]
      18:	mov	r0, r3
      1c:	add	sp, fp, #0
      20:	pop	{fp}		; (ldr fp, [sp], #4)
      24:	bx	lr

00000028 <flatbuffers_uint8_write_to_pe>:
      28:	str	fp, [sp, #-8]!
      2c:	str	lr, [sp, #4]
      30:	add	fp, sp, #4
      34:	sub	sp, sp, #8
      38:	str	r0, [fp, #-8]
      3c:	mov	r3, r1
      40:	strb	r3, [fp, #-9]
      44:	ldrb	r3, [fp, #-9]
      48:	mov	r0, r3
      4c:	bl	0 <flatbuffers_uint8_cast_to_pe>
      50:	mov	r3, r0
      54:	mov	r2, r3
      58:	ldr	r3, [fp, #-8]
      5c:	strb	r2, [r3]
      60:	nop	{0}
      64:	sub	sp, fp, #4
      68:	ldr	fp, [sp]
      6c:	add	sp, sp, #4
      70:	pop	{pc}		; (ldr pc, [sp], #4)

00000074 <flatbuffers_uint16_cast_to_pe>:
      74:	push	{fp}		; (str fp, [sp, #-4]!)
      78:	add	fp, sp, #0
      7c:	sub	sp, sp, #12
      80:	mov	r3, r0
      84:	strh	r3, [fp, #-6]
      88:	ldrh	r3, [fp, #-6]
      8c:	mov	r0, r3
      90:	add	sp, fp, #0
      94:	pop	{fp}		; (ldr fp, [sp], #4)
      98:	bx	lr

0000009c <flatbuffers_uint16_write_to_pe>:
      9c:	str	fp, [sp, #-8]!
      a0:	str	lr, [sp, #4]
      a4:	add	fp, sp, #4
      a8:	sub	sp, sp, #8
      ac:	str	r0, [fp, #-8]
      b0:	mov	r3, r1
      b4:	strh	r3, [fp, #-10]
      b8:	ldrh	r3, [fp, #-10]
      bc:	mov	r0, r3
      c0:	bl	74 <flatbuffers_uint16_cast_to_pe>
      c4:	mov	r3, r0
      c8:	mov	r2, r3
      cc:	ldr	r3, [fp, #-8]
      d0:	strh	r2, [r3]
      d4:	nop	{0}
      d8:	sub	sp, fp, #4
      dc:	ldr	fp, [sp]
      e0:	add	sp, sp, #4
      e4:	pop	{pc}		; (ldr pc, [sp], #4)

000000e8 <flatbuffers_uint32_cast_to_pe>:
      e8:	push	{fp}		; (str fp, [sp, #-4]!)
      ec:	add	fp, sp, #0
      f0:	sub	sp, sp, #12
      f4:	str	r0, [fp, #-8]
      f8:	ldr	r3, [fp, #-8]
      fc:	mov	r0, r3
     100:	add	sp, fp, #0
     104:	pop	{fp}		; (ldr fp, [sp], #4)
     108:	bx	lr

0000010c <flatbuffers_uint32_write_to_pe>:
     10c:	str	fp, [sp, #-8]!
     110:	str	lr, [sp, #4]
     114:	add	fp, sp, #4
     118:	sub	sp, sp, #8
     11c:	str	r0, [fp, #-8]
     120:	str	r1, [fp, #-12]
     124:	ldr	r0, [fp, #-12]
     128:	bl	e8 <flatbuffers_uint32_cast_to_pe>
     12c:	mov	r2, r0
     130:	ldr	r3, [fp, #-8]
     134:	str	r2, [r3]
     138:	nop	{0}
     13c:	sub	sp, fp, #4
     140:	ldr	fp, [sp]
     144:	add	sp, sp, #4
     148:	pop	{pc}		; (ldr pc, [sp], #4)

0000014c <flatbuffers_uint64_cast_to_pe>:
     14c:	push	{fp}		; (str fp, [sp, #-4]!)
     150:	add	fp, sp, #0
     154:	sub	sp, sp, #12
     158:	strd	r0, [fp, #-12]
     15c:	ldrd	r2, [fp, #-12]
     160:	mov	r0, r2
     164:	mov	r1, r3
     168:	add	sp, fp, #0
     16c:	pop	{fp}		; (ldr fp, [sp], #4)
     170:	bx	lr

00000174 <flatbuffers_uint64_write_to_pe>:
     174:	str	fp, [sp, #-8]!
     178:	str	lr, [sp, #4]
     17c:	add	fp, sp, #4
     180:	sub	sp, sp, #16
     184:	str	r0, [fp, #-8]
     188:	strd	r2, [fp, #-20]	; 0xffffffec
     18c:	ldrd	r0, [fp, #-20]	; 0xffffffec
     190:	bl	14c <flatbuffers_uint64_cast_to_pe>
     194:	mov	r2, r0
     198:	mov	r3, r1
     19c:	ldr	r1, [fp, #-8]
     1a0:	strd	r2, [r1]
     1a4:	nop	{0}
     1a8:	sub	sp, fp, #4
     1ac:	ldr	fp, [sp]
     1b0:	add	sp, sp, #4
     1b4:	pop	{pc}		; (ldr pc, [sp], #4)

000001b8 <flatbuffers_int8_cast_to_pe>:
     1b8:	push	{fp}		; (str fp, [sp, #-4]!)
     1bc:	add	fp, sp, #0
     1c0:	sub	sp, sp, #12
     1c4:	mov	r3, r0
     1c8:	strb	r3, [fp, #-5]
     1cc:	ldrsb	r3, [fp, #-5]
     1d0:	mov	r0, r3
     1d4:	add	sp, fp, #0
     1d8:	pop	{fp}		; (ldr fp, [sp], #4)
     1dc:	bx	lr

000001e0 <flatbuffers_int8_write_to_pe>:
     1e0:	str	fp, [sp, #-8]!
     1e4:	str	lr, [sp, #4]
     1e8:	add	fp, sp, #4
     1ec:	sub	sp, sp, #8
     1f0:	str	r0, [fp, #-8]
     1f4:	mov	r3, r1
     1f8:	strb	r3, [fp, #-9]
     1fc:	ldrsb	r3, [fp, #-9]
     200:	mov	r0, r3
     204:	bl	1b8 <flatbuffers_int8_cast_to_pe>
     208:	mov	r3, r0
     20c:	mov	r2, r3
     210:	ldr	r3, [fp, #-8]
     214:	strb	r2, [r3]
     218:	nop	{0}
     21c:	sub	sp, fp, #4
     220:	ldr	fp, [sp]
     224:	add	sp, sp, #4
     228:	pop	{pc}		; (ldr pc, [sp], #4)

0000022c <flatbuffers_int16_cast_to_pe>:
     22c:	push	{fp}		; (str fp, [sp, #-4]!)
     230:	add	fp, sp, #0
     234:	sub	sp, sp, #12
     238:	mov	r3, r0
     23c:	strh	r3, [fp, #-6]
     240:	ldrsh	r3, [fp, #-6]
     244:	mov	r0, r3
     248:	add	sp, fp, #0
     24c:	pop	{fp}		; (ldr fp, [sp], #4)
     250:	bx	lr

00000254 <flatbuffers_int16_write_to_pe>:
     254:	str	fp, [sp, #-8]!
     258:	str	lr, [sp, #4]
     25c:	add	fp, sp, #4
     260:	sub	sp, sp, #8
     264:	str	r0, [fp, #-8]
     268:	mov	r3, r1
     26c:	strh	r3, [fp, #-10]
     270:	ldrsh	r3, [fp, #-10]
     274:	mov	r0, r3
     278:	bl	22c <flatbuffers_int16_cast_to_pe>
     27c:	mov	r3, r0
     280:	mov	r2, r3
     284:	ldr	r3, [fp, #-8]
     288:	strh	r2, [r3]
     28c:	nop	{0}
     290:	sub	sp, fp, #4
     294:	ldr	fp, [sp]
     298:	add	sp, sp, #4
     29c:	pop	{pc}		; (ldr pc, [sp], #4)

000002a0 <flatbuffers_int32_cast_to_pe>:
     2a0:	push	{fp}		; (str fp, [sp, #-4]!)
     2a4:	add	fp, sp, #0
     2a8:	sub	sp, sp, #12
     2ac:	str	r0, [fp, #-8]
     2b0:	ldr	r3, [fp, #-8]
     2b4:	mov	r0, r3
     2b8:	add	sp, fp, #0
     2bc:	pop	{fp}		; (ldr fp, [sp], #4)
     2c0:	bx	lr

000002c4 <flatbuffers_int32_write_to_pe>:
     2c4:	str	fp, [sp, #-8]!
     2c8:	str	lr, [sp, #4]
     2cc:	add	fp, sp, #4
     2d0:	sub	sp, sp, #8
     2d4:	str	r0, [fp, #-8]
     2d8:	str	r1, [fp, #-12]
     2dc:	ldr	r0, [fp, #-12]
     2e0:	bl	2a0 <flatbuffers_int32_cast_to_pe>
     2e4:	mov	r2, r0
     2e8:	ldr	r3, [fp, #-8]
     2ec:	str	r2, [r3]
     2f0:	nop	{0}
     2f4:	sub	sp, fp, #4
     2f8:	ldr	fp, [sp]
     2fc:	add	sp, sp, #4
     300:	pop	{pc}		; (ldr pc, [sp], #4)

00000304 <flatbuffers_int64_cast_to_pe>:
     304:	push	{fp}		; (str fp, [sp, #-4]!)
     308:	add	fp, sp, #0
     30c:	sub	sp, sp, #12
     310:	strd	r0, [fp, #-12]
     314:	ldrd	r2, [fp, #-12]
     318:	mov	r0, r2
     31c:	mov	r1, r3
     320:	add	sp, fp, #0
     324:	pop	{fp}		; (ldr fp, [sp], #4)
     328:	bx	lr

0000032c <flatbuffers_int64_write_to_pe>:
     32c:	str	fp, [sp, #-8]!
     330:	str	lr, [sp, #4]
     334:	add	fp, sp, #4
     338:	sub	sp, sp, #16
     33c:	str	r0, [fp, #-8]
     340:	strd	r2, [fp, #-20]	; 0xffffffec
     344:	ldrd	r0, [fp, #-20]	; 0xffffffec
     348:	bl	304 <flatbuffers_int64_cast_to_pe>
     34c:	mov	r2, r0
     350:	mov	r3, r1
     354:	ldr	r1, [fp, #-8]
     358:	strd	r2, [r1]
     35c:	nop	{0}
     360:	sub	sp, fp, #4
     364:	ldr	fp, [sp]
     368:	add	sp, sp, #4
     36c:	pop	{pc}		; (ldr pc, [sp], #4)

00000370 <flatbuffers_float_cast_to_pe>:
     370:	push	{fp}		; (str fp, [sp, #-4]!)
     374:	add	fp, sp, #0
     378:	sub	sp, sp, #20
     37c:	vstr	s0, [fp, #-16]
     380:	ldr	r3, [fp, #-16]
     384:	str	r3, [fp, #-8]
     388:	ldr	r3, [fp, #-8]
     38c:	str	r3, [fp, #-8]
     390:	ldr	r3, [fp, #-8]
     394:	vmov	s15, r3
     398:	vmov.f32	s0, s15
     39c:	add	sp, fp, #0
     3a0:	pop	{fp}		; (ldr fp, [sp], #4)
     3a4:	bx	lr

000003a8 <flatbuffers_float_write_to_pe>:
     3a8:	str	fp, [sp, #-8]!
     3ac:	str	lr, [sp, #4]
     3b0:	add	fp, sp, #4
     3b4:	sub	sp, sp, #8
     3b8:	str	r0, [fp, #-8]
     3bc:	vstr	s0, [fp, #-12]
     3c0:	vldr	s0, [fp, #-12]
     3c4:	bl	370 <flatbuffers_float_cast_to_pe>
     3c8:	vmov.f32	s15, s0
     3cc:	ldr	r3, [fp, #-8]
     3d0:	vstr	s15, [r3]
     3d4:	nop	{0}
     3d8:	sub	sp, fp, #4
     3dc:	ldr	fp, [sp]
     3e0:	add	sp, sp, #4
     3e4:	pop	{pc}		; (ldr pc, [sp], #4)

000003e8 <flatbuffers_double_cast_to_pe>:
     3e8:	push	{fp}		; (str fp, [sp, #-4]!)
     3ec:	add	fp, sp, #0
     3f0:	sub	sp, sp, #20
     3f4:	vstr	d0, [fp, #-20]	; 0xffffffec
     3f8:	ldrd	r2, [fp, #-20]	; 0xffffffec
     3fc:	strd	r2, [fp, #-12]
     400:	ldrd	r2, [fp, #-12]
     404:	strd	r2, [fp, #-12]
     408:	ldrd	r2, [fp, #-12]
     40c:	vmov	d7, r2, r3
     410:	vmov.f64	d0, d7
     414:	add	sp, fp, #0
     418:	pop	{fp}		; (ldr fp, [sp], #4)
     41c:	bx	lr

00000420 <flatbuffers_double_write_to_pe>:
     420:	str	fp, [sp, #-8]!
     424:	str	lr, [sp, #4]
     428:	add	fp, sp, #4
     42c:	sub	sp, sp, #16
     430:	str	r0, [fp, #-8]
     434:	vstr	d0, [fp, #-20]	; 0xffffffec
     438:	vldr	d0, [fp, #-20]	; 0xffffffec
     43c:	bl	3e8 <flatbuffers_double_cast_to_pe>
     440:	vmov.f64	d7, d0
     444:	ldr	r3, [fp, #-8]
     448:	vstr	d7, [r3]
     44c:	nop	{0}
     450:	sub	sp, fp, #4
     454:	ldr	fp, [sp]
     458:	add	sp, sp, #4
     45c:	pop	{pc}		; (ldr pc, [sp], #4)

00000460 <flatbuffers_bool_cast_to_pe>:
     460:	push	{fp}		; (str fp, [sp, #-4]!)
     464:	add	fp, sp, #0
     468:	sub	sp, sp, #12
     46c:	mov	r3, r0
     470:	strb	r3, [fp, #-5]
     474:	ldrb	r3, [fp, #-5]
     478:	mov	r0, r3
     47c:	add	sp, fp, #0
     480:	pop	{fp}		; (ldr fp, [sp], #4)
     484:	bx	lr

00000488 <flatbuffers_bool_write_to_pe>:
     488:	str	fp, [sp, #-8]!
     48c:	str	lr, [sp, #4]
     490:	add	fp, sp, #4
     494:	sub	sp, sp, #8
     498:	str	r0, [fp, #-8]
     49c:	mov	r3, r1
     4a0:	strb	r3, [fp, #-9]
     4a4:	ldrb	r3, [fp, #-9]
     4a8:	mov	r0, r3
     4ac:	bl	460 <flatbuffers_bool_cast_to_pe>
     4b0:	mov	r3, r0
     4b4:	mov	r2, r3
     4b8:	ldr	r3, [fp, #-8]
     4bc:	strb	r2, [r3]
     4c0:	nop	{0}
     4c4:	sub	sp, fp, #4
     4c8:	ldr	fp, [sp]
     4cc:	add	sp, sp, #4
     4d0:	pop	{pc}		; (ldr pc, [sp], #4)

000004d4 <flatcc_json_parser_init>:
     4d4:	str	fp, [sp, #-8]!
     4d8:	str	lr, [sp, #4]
     4dc:	add	fp, sp, #4
     4e0:	sub	sp, sp, #16
     4e4:	str	r0, [fp, #-8]
     4e8:	str	r1, [fp, #-12]
     4ec:	str	r2, [fp, #-16]
     4f0:	str	r3, [fp, #-20]	; 0xffffffec
     4f4:	mov	r2, #44	; 0x2c
     4f8:	mov	r1, #0
     4fc:	ldr	r0, [fp, #-8]
     500:	bl	0 <memset>
     504:	ldr	r3, [fp, #-8]
     508:	ldr	r2, [fp, #-12]
     50c:	str	r2, [r3]
     510:	ldr	r3, [fp, #-8]
     514:	ldr	r2, [fp, #-16]
     518:	str	r2, [r3, #4]
     51c:	ldr	r3, [fp, #-8]
     520:	mov	r2, #1
     524:	str	r2, [r3, #16]
     528:	ldr	r3, [fp, #-8]
     52c:	ldr	r2, [fp, #4]
     530:	str	r2, [r3, #8]
     534:	ldr	r3, [fp, #-8]
     538:	ldr	r2, [fp, #-16]
     53c:	str	r2, [r3, #28]
     540:	ldr	r3, [fp, #-8]
     544:	ldr	r2, [fp, #-20]	; 0xffffffec
     548:	str	r2, [r3, #32]
     54c:	ldr	r3, [fp, #-8]
     550:	ldr	r2, [fp, #-16]
     554:	str	r2, [r3, #36]	; 0x24
     558:	nop	{0}
     55c:	sub	sp, fp, #4
     560:	ldr	fp, [sp]
     564:	add	sp, sp, #4
     568:	pop	{pc}		; (ldr pc, [sp], #4)

0000056c <flatcc_json_parser_space>:
     56c:	str	fp, [sp, #-8]!
     570:	str	lr, [sp, #4]
     574:	add	fp, sp, #4
     578:	sub	sp, sp, #16
     57c:	str	r0, [fp, #-8]
     580:	str	r1, [fp, #-12]
     584:	str	r2, [fp, #-16]
     588:	ldr	r2, [fp, #-16]
     58c:	ldr	r3, [fp, #-12]
     590:	sub	r3, r2, r3
     594:	cmp	r3, #1
     598:	ble	5e4 <flatcc_json_parser_space+0x78>
     59c:	ldr	r3, [fp, #-12]
     5a0:	ldrb	r3, [r3]
     5a4:	cmp	r3, #32
     5a8:	bls	5b4 <flatcc_json_parser_space+0x48>
     5ac:	ldr	r3, [fp, #-12]
     5b0:	b	5f8 <flatcc_json_parser_space+0x8c>
     5b4:	ldr	r3, [fp, #-12]
     5b8:	ldrb	r3, [r3]
     5bc:	cmp	r3, #32
     5c0:	bne	5e4 <flatcc_json_parser_space+0x78>
     5c4:	ldr	r3, [fp, #-12]
     5c8:	add	r3, r3, #1
     5cc:	ldrb	r3, [r3]
     5d0:	cmp	r3, #32
     5d4:	bls	5e4 <flatcc_json_parser_space+0x78>
     5d8:	ldr	r3, [fp, #-12]
     5dc:	add	r3, r3, #1
     5e0:	b	5f8 <flatcc_json_parser_space+0x8c>
     5e4:	ldr	r2, [fp, #-16]
     5e8:	ldr	r1, [fp, #-12]
     5ec:	ldr	r0, [fp, #-8]
     5f0:	bl	0 <flatcc_json_parser_space_ext>
     5f4:	mov	r3, r0
     5f8:	mov	r0, r3
     5fc:	sub	sp, fp, #4
     600:	ldr	fp, [sp]
     604:	add	sp, sp, #4
     608:	pop	{pc}		; (ldr pc, [sp], #4)

0000060c <flatcc_json_parser_symbol_start>:
     60c:	str	fp, [sp, #-8]!
     610:	str	lr, [sp, #4]
     614:	add	fp, sp, #4
     618:	sub	sp, sp, #16
     61c:	str	r0, [fp, #-8]
     620:	str	r1, [fp, #-12]
     624:	str	r2, [fp, #-16]
     628:	ldr	r2, [fp, #-12]
     62c:	ldr	r3, [fp, #-16]
     630:	cmp	r2, r3
     634:	bne	640 <flatcc_json_parser_symbol_start+0x34>
     638:	ldr	r3, [fp, #-12]
     63c:	b	6a8 <flatcc_json_parser_symbol_start+0x9c>
     640:	ldr	r3, [fp, #-12]
     644:	ldrb	r3, [r3]
     648:	cmp	r3, #34	; 0x22
     64c:	bne	66c <flatcc_json_parser_symbol_start+0x60>
     650:	ldr	r3, [fp, #-12]
     654:	add	r3, r3, #1
     658:	str	r3, [fp, #-12]
     65c:	ldr	r3, [fp, #-8]
     660:	mov	r2, #0
     664:	str	r2, [r3, #12]
     668:	b	6a4 <flatcc_json_parser_symbol_start+0x98>
     66c:	ldr	r3, [fp, #-12]
     670:	ldrb	r3, [r3]
     674:	cmp	r3, #46	; 0x2e
     678:	bne	698 <flatcc_json_parser_symbol_start+0x8c>
     67c:	mov	r3, #5
     680:	ldr	r2, [fp, #-16]
     684:	ldr	r1, [fp, #-12]
     688:	ldr	r0, [fp, #-8]
     68c:	bl	0 <flatcc_json_parser_set_error>
     690:	mov	r3, r0
     694:	b	6a8 <flatcc_json_parser_symbol_start+0x9c>
     698:	ldr	r3, [fp, #-8]
     69c:	mov	r2, #1
     6a0:	str	r2, [r3, #12]
     6a4:	ldr	r3, [fp, #-12]
     6a8:	mov	r0, r3
     6ac:	sub	sp, fp, #4
     6b0:	ldr	fp, [sp]
     6b4:	add	sp, sp, #4
     6b8:	pop	{pc}		; (ldr pc, [sp], #4)

000006bc <flatcc_json_parser_symbol_part_ext>:
     6bc:	strd	r4, [sp, #-28]!	; 0xffffffe4
     6c0:	strd	r6, [sp, #8]
     6c4:	strd	r8, [sp, #16]
     6c8:	str	fp, [sp, #24]
     6cc:	add	fp, sp, #24
     6d0:	sub	sp, sp, #76	; 0x4c
     6d4:	str	r0, [fp, #-48]	; 0xffffffd0
     6d8:	str	r1, [fp, #-52]	; 0xffffffcc
     6dc:	mov	r2, #0
     6e0:	mov	r3, #0
     6e4:	strd	r2, [fp, #-36]	; 0xffffffdc
     6e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
     6ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
     6f0:	sub	r3, r2, r3
     6f4:	str	r3, [fp, #-40]	; 0xffffffd8
     6f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     6fc:	cmp	r3, #8
     700:	bls	70c <flatcc_json_parser_symbol_part_ext+0x50>
     704:	mov	r3, #8
     708:	str	r3, [fp, #-40]	; 0xffffffd8
     70c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     710:	cmp	r3, #8
     714:	ldrls	pc, [pc, r3, lsl #2]
     718:	b	918 <flatcc_json_parser_symbol_part_ext+0x25c>
     71c:	.word	0x00000918
     720:	.word	0x000008d8
     724:	.word	0x00000898
     728:	.word	0x00000858
     72c:	.word	0x00000818
     730:	.word	0x000007e0
     734:	.word	0x0000079c
     738:	.word	0x00000764
     73c:	.word	0x00000740
     740:	ldr	r3, [fp, #-48]	; 0xffffffd0
     744:	add	r3, r3, #7
     748:	ldrb	r3, [r3]
     74c:	uxtb	r0, r3
     750:	mov	r1, #0
     754:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     758:	orr	r6, r2, r0
     75c:	orr	r7, r3, r1
     760:	strd	r6, [fp, #-36]	; 0xffffffdc
     764:	ldr	r3, [fp, #-48]	; 0xffffffd0
     768:	add	r3, r3, #6
     76c:	ldrb	r3, [r3]
     770:	uxtb	r2, r3
     774:	mov	r3, #0
     778:	mov	r0, #0
     77c:	mov	r1, #0
     780:	lsl	r1, r3, #8
     784:	orr	r1, r1, r2, lsr #24
     788:	lsl	r0, r2, #8
     78c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     790:	orr	r8, r2, r0
     794:	orr	r9, r3, r1
     798:	strd	r8, [fp, #-36]	; 0xffffffdc
     79c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     7a0:	add	r3, r3, #5
     7a4:	ldrb	r3, [r3]
     7a8:	uxtb	r2, r3
     7ac:	mov	r3, #0
     7b0:	mov	r0, #0
     7b4:	mov	r1, #0
     7b8:	lsl	r1, r3, #16
     7bc:	orr	r1, r1, r2, lsr #16
     7c0:	lsl	r0, r2, #16
     7c4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     7c8:	orr	ip, r2, r0
     7cc:	str	ip, [fp, #-60]	; 0xffffffc4
     7d0:	orr	r3, r3, r1
     7d4:	str	r3, [fp, #-56]	; 0xffffffc8
     7d8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
     7dc:	strd	r2, [fp, #-36]	; 0xffffffdc
     7e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     7e4:	add	r3, r3, #4
     7e8:	ldrb	r3, [r3]
     7ec:	uxtb	r2, r3
     7f0:	mov	r3, #0
     7f4:	lsr	r5, r2, #8
     7f8:	lsl	r4, r2, #24
     7fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     800:	orr	r1, r2, r4
     804:	str	r1, [fp, #-68]	; 0xffffffbc
     808:	orr	r3, r3, r5
     80c:	str	r3, [fp, #-64]	; 0xffffffc0
     810:	ldrd	r2, [fp, #-68]	; 0xffffffbc
     814:	strd	r2, [fp, #-36]	; 0xffffffdc
     818:	ldr	r3, [fp, #-48]	; 0xffffffd0
     81c:	add	r3, r3, #3
     820:	ldrb	r3, [r3]
     824:	uxtb	r0, r3
     828:	mov	r1, #0
     82c:	mov	r2, #0
     830:	mov	r3, #0
     834:	mov	r3, r0
     838:	mov	r2, #0
     83c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     840:	orr	ip, r0, r2
     844:	str	ip, [fp, #-76]	; 0xffffffb4
     848:	orr	r3, r1, r3
     84c:	str	r3, [fp, #-72]	; 0xffffffb8
     850:	ldrd	r2, [fp, #-76]	; 0xffffffb4
     854:	strd	r2, [fp, #-36]	; 0xffffffdc
     858:	ldr	r3, [fp, #-48]	; 0xffffffd0
     85c:	add	r3, r3, #2
     860:	ldrb	r3, [r3]
     864:	uxtb	r0, r3
     868:	mov	r1, #0
     86c:	mov	r2, #0
     870:	mov	r3, #0
     874:	lsl	r3, r0, #8
     878:	mov	r2, #0
     87c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     880:	orr	ip, r0, r2
     884:	str	ip, [fp, #-84]	; 0xffffffac
     888:	orr	r3, r1, r3
     88c:	str	r3, [fp, #-80]	; 0xffffffb0
     890:	ldrd	r2, [fp, #-84]	; 0xffffffac
     894:	strd	r2, [fp, #-36]	; 0xffffffdc
     898:	ldr	r3, [fp, #-48]	; 0xffffffd0
     89c:	add	r3, r3, #1
     8a0:	ldrb	r3, [r3]
     8a4:	uxtb	r0, r3
     8a8:	mov	r1, #0
     8ac:	mov	r2, #0
     8b0:	mov	r3, #0
     8b4:	lsl	r3, r0, #16
     8b8:	mov	r2, #0
     8bc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     8c0:	orr	ip, r0, r2
     8c4:	str	ip, [fp, #-92]	; 0xffffffa4
     8c8:	orr	r3, r1, r3
     8cc:	str	r3, [fp, #-88]	; 0xffffffa8
     8d0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
     8d4:	strd	r2, [fp, #-36]	; 0xffffffdc
     8d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     8dc:	ldrb	r3, [r3]
     8e0:	uxtb	r0, r3
     8e4:	mov	r1, #0
     8e8:	mov	r2, #0
     8ec:	mov	r3, #0
     8f0:	lsl	r3, r0, #24
     8f4:	mov	r2, #0
     8f8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
     8fc:	orr	ip, r0, r2
     900:	str	ip, [fp, #-100]	; 0xffffff9c
     904:	orr	r3, r1, r3
     908:	str	r3, [fp, #-96]	; 0xffffffa0
     90c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
     910:	strd	r2, [fp, #-36]	; 0xffffffdc
     914:	nop	{0}
     918:	ldrd	r2, [fp, #-36]	; 0xffffffdc
     91c:	mov	r0, r2
     920:	mov	r1, r3
     924:	sub	sp, fp, #24
     928:	ldrd	r4, [sp]
     92c:	ldrd	r6, [sp, #8]
     930:	ldrd	r8, [sp, #16]
     934:	ldr	fp, [sp, #24]
     938:	add	sp, sp, #28
     93c:	bx	lr

00000940 <flatcc_json_parser_symbol_part>:
     940:	str	fp, [sp, #-8]!
     944:	str	lr, [sp, #4]
     948:	add	fp, sp, #4
     94c:	sub	sp, sp, #16
     950:	str	r0, [fp, #-16]
     954:	str	r1, [fp, #-20]	; 0xffffffec
     958:	ldr	r2, [fp, #-20]	; 0xffffffec
     95c:	ldr	r3, [fp, #-16]
     960:	sub	r3, r2, r3
     964:	str	r3, [fp, #-8]
     968:	ldr	r1, [fp, #-20]	; 0xffffffec
     96c:	ldr	r0, [fp, #-16]
     970:	bl	6bc <flatcc_json_parser_symbol_part_ext>
     974:	mov	r2, r0
     978:	mov	r3, r1
     97c:	mov	r0, r2
     980:	mov	r1, r3
     984:	sub	sp, fp, #4
     988:	ldr	fp, [sp]
     98c:	add	sp, sp, #4
     990:	pop	{pc}		; (ldr pc, [sp], #4)

00000994 <flatcc_json_parser_match_scope>:
     994:	push	{fp}		; (str fp, [sp, #-4]!)
     998:	add	fp, sp, #0
     99c:	sub	sp, sp, #28
     9a0:	str	r0, [fp, #-16]
     9a4:	str	r1, [fp, #-20]	; 0xffffffec
     9a8:	str	r2, [fp, #-24]	; 0xffffffe8
     9ac:	str	r3, [fp, #-28]	; 0xffffffe4
     9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
     9b4:	str	r3, [fp, #-8]
     9b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     9bc:	ldr	r3, [fp, #-20]	; 0xffffffec
     9c0:	sub	r3, r2, r3
     9c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     9c8:	cmp	r2, r3
     9cc:	blt	9d8 <flatcc_json_parser_match_scope+0x44>
     9d0:	ldr	r3, [fp, #-8]
     9d4:	b	a08 <flatcc_json_parser_match_scope+0x74>
     9d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9dc:	ldr	r2, [fp, #-20]	; 0xffffffec
     9e0:	add	r3, r2, r3
     9e4:	ldrb	r3, [r3]
     9e8:	cmp	r3, #46	; 0x2e
     9ec:	beq	9f8 <flatcc_json_parser_match_scope+0x64>
     9f0:	ldr	r3, [fp, #-8]
     9f4:	b	a08 <flatcc_json_parser_match_scope+0x74>
     9f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9fc:	add	r3, r3, #1
     a00:	ldr	r2, [fp, #-20]	; 0xffffffec
     a04:	add	r3, r2, r3
     a08:	mov	r0, r3
     a0c:	add	sp, fp, #0
     a10:	pop	{fp}		; (ldr fp, [sp], #4)
     a14:	bx	lr

00000a18 <flatcc_json_parser_constant_start>:
     a18:	str	fp, [sp, #-8]!
     a1c:	str	lr, [sp, #4]
     a20:	add	fp, sp, #4
     a24:	sub	sp, sp, #16
     a28:	str	r0, [fp, #-8]
     a2c:	str	r1, [fp, #-12]
     a30:	str	r2, [fp, #-16]
     a34:	ldr	r2, [fp, #-16]
     a38:	ldr	r1, [fp, #-12]
     a3c:	ldr	r0, [fp, #-8]
     a40:	bl	60c <flatcc_json_parser_symbol_start>
     a44:	str	r0, [fp, #-12]
     a48:	ldr	r3, [fp, #-8]
     a4c:	ldr	r3, [r3, #12]
     a50:	cmp	r3, #0
     a54:	bne	a6c <flatcc_json_parser_constant_start+0x54>
     a58:	ldr	r2, [fp, #-16]
     a5c:	ldr	r1, [fp, #-12]
     a60:	ldr	r0, [fp, #-8]
     a64:	bl	56c <flatcc_json_parser_space>
     a68:	str	r0, [fp, #-12]
     a6c:	ldr	r3, [fp, #-12]
     a70:	mov	r0, r3
     a74:	sub	sp, fp, #4
     a78:	ldr	fp, [sp]
     a7c:	add	sp, sp, #4
     a80:	pop	{pc}		; (ldr pc, [sp], #4)

00000a84 <flatcc_json_parser_object_start>:
     a84:	str	fp, [sp, #-8]!
     a88:	str	lr, [sp, #4]
     a8c:	add	fp, sp, #4
     a90:	sub	sp, sp, #16
     a94:	str	r0, [fp, #-8]
     a98:	str	r1, [fp, #-12]
     a9c:	str	r2, [fp, #-16]
     aa0:	str	r3, [fp, #-20]	; 0xffffffec
     aa4:	ldr	r2, [fp, #-12]
     aa8:	ldr	r3, [fp, #-16]
     aac:	cmp	r2, r3
     ab0:	beq	ac4 <flatcc_json_parser_object_start+0x40>
     ab4:	ldr	r3, [fp, #-12]
     ab8:	ldrb	r3, [r3]
     abc:	cmp	r3, #123	; 0x7b
     ac0:	beq	aec <flatcc_json_parser_object_start+0x68>
     ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ac8:	mov	r2, #0
     acc:	str	r2, [r3]
     ad0:	mov	r3, #21
     ad4:	ldr	r2, [fp, #-16]
     ad8:	ldr	r1, [fp, #-12]
     adc:	ldr	r0, [fp, #-8]
     ae0:	bl	0 <flatcc_json_parser_set_error>
     ae4:	mov	r3, r0
     ae8:	b	b64 <flatcc_json_parser_object_start+0xe0>
     aec:	ldr	r3, [fp, #-12]
     af0:	add	r3, r3, #1
     af4:	ldr	r2, [fp, #-16]
     af8:	mov	r1, r3
     afc:	ldr	r0, [fp, #-8]
     b00:	bl	56c <flatcc_json_parser_space>
     b04:	str	r0, [fp, #-12]
     b08:	ldr	r2, [fp, #-12]
     b0c:	ldr	r3, [fp, #-16]
     b10:	cmp	r2, r3
     b14:	beq	b54 <flatcc_json_parser_object_start+0xd0>
     b18:	ldr	r3, [fp, #-12]
     b1c:	ldrb	r3, [r3]
     b20:	cmp	r3, #125	; 0x7d
     b24:	bne	b54 <flatcc_json_parser_object_start+0xd0>
     b28:	ldr	r3, [fp, #-20]	; 0xffffffec
     b2c:	mov	r2, #0
     b30:	str	r2, [r3]
     b34:	ldr	r3, [fp, #-12]
     b38:	add	r3, r3, #1
     b3c:	ldr	r2, [fp, #-16]
     b40:	mov	r1, r3
     b44:	ldr	r0, [fp, #-8]
     b48:	bl	56c <flatcc_json_parser_space>
     b4c:	mov	r3, r0
     b50:	b	b64 <flatcc_json_parser_object_start+0xe0>
     b54:	ldr	r3, [fp, #-20]	; 0xffffffec
     b58:	mov	r2, #1
     b5c:	str	r2, [r3]
     b60:	ldr	r3, [fp, #-12]
     b64:	mov	r0, r3
     b68:	sub	sp, fp, #4
     b6c:	ldr	fp, [sp]
     b70:	add	sp, sp, #4
     b74:	pop	{pc}		; (ldr pc, [sp], #4)

00000b78 <flatcc_json_parser_object_end>:
     b78:	str	fp, [sp, #-8]!
     b7c:	str	lr, [sp, #4]
     b80:	add	fp, sp, #4
     b84:	sub	sp, sp, #16
     b88:	str	r0, [fp, #-8]
     b8c:	str	r1, [fp, #-12]
     b90:	str	r2, [fp, #-16]
     b94:	str	r3, [fp, #-20]	; 0xffffffec
     b98:	ldr	r2, [fp, #-16]
     b9c:	ldr	r1, [fp, #-12]
     ba0:	ldr	r0, [fp, #-8]
     ba4:	bl	56c <flatcc_json_parser_space>
     ba8:	str	r0, [fp, #-12]
     bac:	ldr	r2, [fp, #-12]
     bb0:	ldr	r3, [fp, #-16]
     bb4:	cmp	r2, r3
     bb8:	bne	bd0 <flatcc_json_parser_object_end+0x58>
     bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
     bc0:	mov	r2, #0
     bc4:	str	r2, [r3]
     bc8:	ldr	r3, [fp, #-12]
     bcc:	b	cd8 <flatcc_json_parser_object_end+0x160>
     bd0:	ldr	r3, [fp, #-12]
     bd4:	ldrb	r3, [r3]
     bd8:	cmp	r3, #44	; 0x2c
     bdc:	beq	c38 <flatcc_json_parser_object_end+0xc0>
     be0:	ldr	r3, [fp, #-20]	; 0xffffffec
     be4:	mov	r2, #0
     be8:	str	r2, [r3]
     bec:	ldr	r3, [fp, #-12]
     bf0:	ldrb	r3, [r3]
     bf4:	cmp	r3, #125	; 0x7d
     bf8:	beq	c18 <flatcc_json_parser_object_end+0xa0>
     bfc:	mov	r3, #10
     c00:	ldr	r2, [fp, #-16]
     c04:	ldr	r1, [fp, #-12]
     c08:	ldr	r0, [fp, #-8]
     c0c:	bl	0 <flatcc_json_parser_set_error>
     c10:	mov	r3, r0
     c14:	b	cd8 <flatcc_json_parser_object_end+0x160>
     c18:	ldr	r3, [fp, #-12]
     c1c:	add	r3, r3, #1
     c20:	ldr	r2, [fp, #-16]
     c24:	mov	r1, r3
     c28:	ldr	r0, [fp, #-8]
     c2c:	bl	56c <flatcc_json_parser_space>
     c30:	mov	r3, r0
     c34:	b	cd8 <flatcc_json_parser_object_end+0x160>
     c38:	ldr	r3, [fp, #-12]
     c3c:	add	r3, r3, #1
     c40:	ldr	r2, [fp, #-16]
     c44:	mov	r1, r3
     c48:	ldr	r0, [fp, #-8]
     c4c:	bl	56c <flatcc_json_parser_space>
     c50:	str	r0, [fp, #-12]
     c54:	ldr	r2, [fp, #-12]
     c58:	ldr	r3, [fp, #-16]
     c5c:	cmp	r2, r3
     c60:	bne	c8c <flatcc_json_parser_object_end+0x114>
     c64:	ldr	r3, [fp, #-20]	; 0xffffffec
     c68:	mov	r2, #0
     c6c:	str	r2, [r3]
     c70:	mov	r3, #10
     c74:	ldr	r2, [fp, #-16]
     c78:	ldr	r1, [fp, #-12]
     c7c:	ldr	r0, [fp, #-8]
     c80:	bl	0 <flatcc_json_parser_set_error>
     c84:	mov	r3, r0
     c88:	b	cd8 <flatcc_json_parser_object_end+0x160>
     c8c:	ldr	r3, [fp, #-12]
     c90:	ldrb	r3, [r3]
     c94:	cmp	r3, #125	; 0x7d
     c98:	bne	cc8 <flatcc_json_parser_object_end+0x150>
     c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
     ca0:	mov	r2, #0
     ca4:	str	r2, [r3]
     ca8:	ldr	r3, [fp, #-12]
     cac:	add	r3, r3, #1
     cb0:	ldr	r2, [fp, #-16]
     cb4:	mov	r1, r3
     cb8:	ldr	r0, [fp, #-8]
     cbc:	bl	56c <flatcc_json_parser_space>
     cc0:	mov	r3, r0
     cc4:	b	cd8 <flatcc_json_parser_object_end+0x160>
     cc8:	ldr	r3, [fp, #-20]	; 0xffffffec
     ccc:	mov	r2, #1
     cd0:	str	r2, [r3]
     cd4:	ldr	r3, [fp, #-12]
     cd8:	mov	r0, r3
     cdc:	sub	sp, fp, #4
     ce0:	ldr	fp, [sp]
     ce4:	add	sp, sp, #4
     ce8:	pop	{pc}		; (ldr pc, [sp], #4)

00000cec <flatcc_json_parser_array_start>:
     cec:	str	fp, [sp, #-8]!
     cf0:	str	lr, [sp, #4]
     cf4:	add	fp, sp, #4
     cf8:	sub	sp, sp, #16
     cfc:	str	r0, [fp, #-8]
     d00:	str	r1, [fp, #-12]
     d04:	str	r2, [fp, #-16]
     d08:	str	r3, [fp, #-20]	; 0xffffffec
     d0c:	ldr	r2, [fp, #-12]
     d10:	ldr	r3, [fp, #-16]
     d14:	cmp	r2, r3
     d18:	beq	d2c <flatcc_json_parser_array_start+0x40>
     d1c:	ldr	r3, [fp, #-12]
     d20:	ldrb	r3, [r3]
     d24:	cmp	r3, #91	; 0x5b
     d28:	beq	d54 <flatcc_json_parser_array_start+0x68>
     d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
     d30:	mov	r2, #0
     d34:	str	r2, [r3]
     d38:	mov	r3, #22
     d3c:	ldr	r2, [fp, #-16]
     d40:	ldr	r1, [fp, #-12]
     d44:	ldr	r0, [fp, #-8]
     d48:	bl	0 <flatcc_json_parser_set_error>
     d4c:	mov	r3, r0
     d50:	b	dcc <flatcc_json_parser_array_start+0xe0>
     d54:	ldr	r3, [fp, #-12]
     d58:	add	r3, r3, #1
     d5c:	ldr	r2, [fp, #-16]
     d60:	mov	r1, r3
     d64:	ldr	r0, [fp, #-8]
     d68:	bl	56c <flatcc_json_parser_space>
     d6c:	str	r0, [fp, #-12]
     d70:	ldr	r2, [fp, #-12]
     d74:	ldr	r3, [fp, #-16]
     d78:	cmp	r2, r3
     d7c:	beq	dbc <flatcc_json_parser_array_start+0xd0>
     d80:	ldr	r3, [fp, #-12]
     d84:	ldrb	r3, [r3]
     d88:	cmp	r3, #93	; 0x5d
     d8c:	bne	dbc <flatcc_json_parser_array_start+0xd0>
     d90:	ldr	r3, [fp, #-20]	; 0xffffffec
     d94:	mov	r2, #0
     d98:	str	r2, [r3]
     d9c:	ldr	r3, [fp, #-12]
     da0:	add	r3, r3, #1
     da4:	ldr	r2, [fp, #-16]
     da8:	mov	r1, r3
     dac:	ldr	r0, [fp, #-8]
     db0:	bl	56c <flatcc_json_parser_space>
     db4:	mov	r3, r0
     db8:	b	dcc <flatcc_json_parser_array_start+0xe0>
     dbc:	ldr	r3, [fp, #-20]	; 0xffffffec
     dc0:	mov	r2, #1
     dc4:	str	r2, [r3]
     dc8:	ldr	r3, [fp, #-12]
     dcc:	mov	r0, r3
     dd0:	sub	sp, fp, #4
     dd4:	ldr	fp, [sp]
     dd8:	add	sp, sp, #4
     ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00000de0 <flatcc_json_parser_array_end>:
     de0:	str	fp, [sp, #-8]!
     de4:	str	lr, [sp, #4]
     de8:	add	fp, sp, #4
     dec:	sub	sp, sp, #16
     df0:	str	r0, [fp, #-8]
     df4:	str	r1, [fp, #-12]
     df8:	str	r2, [fp, #-16]
     dfc:	str	r3, [fp, #-20]	; 0xffffffec
     e00:	ldr	r2, [fp, #-16]
     e04:	ldr	r1, [fp, #-12]
     e08:	ldr	r0, [fp, #-8]
     e0c:	bl	56c <flatcc_json_parser_space>
     e10:	str	r0, [fp, #-12]
     e14:	ldr	r2, [fp, #-12]
     e18:	ldr	r3, [fp, #-16]
     e1c:	cmp	r2, r3
     e20:	bne	e38 <flatcc_json_parser_array_end+0x58>
     e24:	ldr	r3, [fp, #-20]	; 0xffffffec
     e28:	mov	r2, #0
     e2c:	str	r2, [r3]
     e30:	ldr	r3, [fp, #-12]
     e34:	b	f40 <flatcc_json_parser_array_end+0x160>
     e38:	ldr	r3, [fp, #-12]
     e3c:	ldrb	r3, [r3]
     e40:	cmp	r3, #44	; 0x2c
     e44:	beq	ea0 <flatcc_json_parser_array_end+0xc0>
     e48:	ldr	r3, [fp, #-20]	; 0xffffffec
     e4c:	mov	r2, #0
     e50:	str	r2, [r3]
     e54:	ldr	r3, [fp, #-12]
     e58:	ldrb	r3, [r3]
     e5c:	cmp	r3, #93	; 0x5d
     e60:	beq	e80 <flatcc_json_parser_array_end+0xa0>
     e64:	mov	r3, #9
     e68:	ldr	r2, [fp, #-16]
     e6c:	ldr	r1, [fp, #-12]
     e70:	ldr	r0, [fp, #-8]
     e74:	bl	0 <flatcc_json_parser_set_error>
     e78:	mov	r3, r0
     e7c:	b	f40 <flatcc_json_parser_array_end+0x160>
     e80:	ldr	r3, [fp, #-12]
     e84:	add	r3, r3, #1
     e88:	ldr	r2, [fp, #-16]
     e8c:	mov	r1, r3
     e90:	ldr	r0, [fp, #-8]
     e94:	bl	56c <flatcc_json_parser_space>
     e98:	mov	r3, r0
     e9c:	b	f40 <flatcc_json_parser_array_end+0x160>
     ea0:	ldr	r3, [fp, #-12]
     ea4:	add	r3, r3, #1
     ea8:	ldr	r2, [fp, #-16]
     eac:	mov	r1, r3
     eb0:	ldr	r0, [fp, #-8]
     eb4:	bl	56c <flatcc_json_parser_space>
     eb8:	str	r0, [fp, #-12]
     ebc:	ldr	r2, [fp, #-12]
     ec0:	ldr	r3, [fp, #-16]
     ec4:	cmp	r2, r3
     ec8:	bne	ef4 <flatcc_json_parser_array_end+0x114>
     ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
     ed0:	mov	r2, #0
     ed4:	str	r2, [r3]
     ed8:	mov	r3, #9
     edc:	ldr	r2, [fp, #-16]
     ee0:	ldr	r1, [fp, #-12]
     ee4:	ldr	r0, [fp, #-8]
     ee8:	bl	0 <flatcc_json_parser_set_error>
     eec:	mov	r3, r0
     ef0:	b	f40 <flatcc_json_parser_array_end+0x160>
     ef4:	ldr	r3, [fp, #-12]
     ef8:	ldrb	r3, [r3]
     efc:	cmp	r3, #93	; 0x5d
     f00:	bne	f30 <flatcc_json_parser_array_end+0x150>
     f04:	ldr	r3, [fp, #-20]	; 0xffffffec
     f08:	mov	r2, #0
     f0c:	str	r2, [r3]
     f10:	ldr	r3, [fp, #-12]
     f14:	add	r3, r3, #1
     f18:	ldr	r2, [fp, #-16]
     f1c:	mov	r1, r3
     f20:	ldr	r0, [fp, #-8]
     f24:	bl	56c <flatcc_json_parser_space>
     f28:	mov	r3, r0
     f2c:	b	f40 <flatcc_json_parser_array_end+0x160>
     f30:	ldr	r3, [fp, #-20]	; 0xffffffec
     f34:	mov	r2, #1
     f38:	str	r2, [r3]
     f3c:	ldr	r3, [fp, #-12]
     f40:	mov	r0, r3
     f44:	sub	sp, fp, #4
     f48:	ldr	fp, [sp]
     f4c:	add	sp, sp, #4
     f50:	pop	{pc}		; (ldr pc, [sp], #4)

00000f54 <flatcc_json_parser_match_symbol>:
     f54:	str	fp, [sp, #-8]!
     f58:	str	lr, [sp, #4]
     f5c:	add	fp, sp, #4
     f60:	sub	sp, sp, #24
     f64:	str	r0, [fp, #-16]
     f68:	str	r1, [fp, #-20]	; 0xffffffec
     f6c:	str	r2, [fp, #-24]	; 0xffffffe8
     f70:	str	r3, [fp, #-28]	; 0xffffffe4
     f74:	ldr	r3, [fp, #-20]	; 0xffffffec
     f78:	str	r3, [fp, #-8]
     f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     f80:	ldr	r3, [fp, #-20]	; 0xffffffec
     f84:	sub	r3, r2, r3
     f88:	ldr	r2, [fp, #-28]	; 0xffffffe4
     f8c:	cmp	r2, r3
     f90:	blt	f9c <flatcc_json_parser_match_symbol+0x48>
     f94:	ldr	r3, [fp, #-8]
     f98:	b	10a8 <flatcc_json_parser_match_symbol+0x154>
     f9c:	ldr	r3, [fp, #-16]
     fa0:	ldr	r3, [r3, #12]
     fa4:	cmp	r3, #0
     fa8:	beq	1004 <flatcc_json_parser_match_symbol+0xb0>
     fac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fb0:	ldr	r2, [fp, #-20]	; 0xffffffec
     fb4:	add	r3, r2, r3
     fb8:	ldrb	r3, [r3]
     fbc:	cmp	r3, #32
     fc0:	bls	fe4 <flatcc_json_parser_match_symbol+0x90>
     fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
     fcc:	add	r3, r2, r3
     fd0:	ldrb	r3, [r3]
     fd4:	cmp	r3, #58	; 0x3a
     fd8:	beq	fe4 <flatcc_json_parser_match_symbol+0x90>
     fdc:	ldr	r3, [fp, #-8]
     fe0:	b	10a8 <flatcc_json_parser_match_symbol+0x154>
     fe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fe8:	ldr	r2, [fp, #-20]	; 0xffffffec
     fec:	add	r3, r2, r3
     ff0:	str	r3, [fp, #-20]	; 0xffffffec
     ff4:	ldr	r3, [fp, #-16]
     ff8:	mov	r2, #0
     ffc:	str	r2, [r3, #12]
    1000:	b	1038 <flatcc_json_parser_match_symbol+0xe4>
    1004:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1008:	ldr	r2, [fp, #-20]	; 0xffffffec
    100c:	add	r3, r2, r3
    1010:	ldrb	r3, [r3]
    1014:	cmp	r3, #34	; 0x22
    1018:	beq	1024 <flatcc_json_parser_match_symbol+0xd0>
    101c:	ldr	r3, [fp, #-8]
    1020:	b	10a8 <flatcc_json_parser_match_symbol+0x154>
    1024:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1028:	add	r3, r3, #1
    102c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1030:	add	r3, r2, r3
    1034:	str	r3, [fp, #-20]	; 0xffffffec
    1038:	ldr	r2, [fp, #-24]	; 0xffffffe8
    103c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1040:	ldr	r0, [fp, #-16]
    1044:	bl	56c <flatcc_json_parser_space>
    1048:	str	r0, [fp, #-20]	; 0xffffffec
    104c:	ldr	r2, [fp, #-20]	; 0xffffffec
    1050:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1054:	cmp	r2, r3
    1058:	beq	1090 <flatcc_json_parser_match_symbol+0x13c>
    105c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1060:	ldrb	r3, [r3]
    1064:	cmp	r3, #58	; 0x3a
    1068:	bne	1090 <flatcc_json_parser_match_symbol+0x13c>
    106c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1070:	add	r3, r3, #1
    1074:	str	r3, [fp, #-20]	; 0xffffffec
    1078:	ldr	r2, [fp, #-24]	; 0xffffffe8
    107c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1080:	ldr	r0, [fp, #-16]
    1084:	bl	56c <flatcc_json_parser_space>
    1088:	mov	r3, r0
    108c:	b	10a8 <flatcc_json_parser_match_symbol+0x154>
    1090:	mov	r3, #4
    1094:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1098:	ldr	r1, [fp, #-20]	; 0xffffffec
    109c:	ldr	r0, [fp, #-16]
    10a0:	bl	0 <flatcc_json_parser_set_error>
    10a4:	mov	r3, r0
    10a8:	mov	r0, r3
    10ac:	sub	sp, fp, #4
    10b0:	ldr	fp, [sp]
    10b4:	add	sp, sp, #4
    10b8:	pop	{pc}		; (ldr pc, [sp], #4)

000010bc <flatcc_json_parser_coerce_uint64>:
    10bc:	str	fp, [sp, #-8]!
    10c0:	str	lr, [sp, #4]
    10c4:	add	fp, sp, #4
    10c8:	sub	sp, sp, #16
    10cc:	str	r0, [fp, #-8]
    10d0:	str	r1, [fp, #-12]
    10d4:	str	r2, [fp, #-16]
    10d8:	str	r3, [fp, #-20]	; 0xffffffec
    10dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    10e0:	cmp	r3, #0
    10e4:	beq	1104 <flatcc_json_parser_coerce_uint64+0x48>
    10e8:	mov	r3, #8
    10ec:	ldr	r2, [fp, #-16]
    10f0:	ldr	r1, [fp, #-12]
    10f4:	ldr	r0, [fp, #-8]
    10f8:	bl	0 <flatcc_json_parser_set_error>
    10fc:	mov	r3, r0
    1100:	b	1114 <flatcc_json_parser_coerce_uint64+0x58>
    1104:	ldr	r1, [fp, #12]
    1108:	ldrd	r2, [fp, #4]
    110c:	strd	r2, [r1]
    1110:	ldr	r3, [fp, #-12]
    1114:	mov	r0, r3
    1118:	sub	sp, fp, #4
    111c:	ldr	fp, [sp]
    1120:	add	sp, sp, #4
    1124:	pop	{pc}		; (ldr pc, [sp], #4)

00001128 <flatcc_json_parser_coerce_bool>:
    1128:	str	fp, [sp, #-8]!
    112c:	str	lr, [sp, #4]
    1130:	add	fp, sp, #4
    1134:	sub	sp, sp, #16
    1138:	str	r0, [fp, #-8]
    113c:	str	r1, [fp, #-12]
    1140:	str	r2, [fp, #-16]
    1144:	str	r3, [fp, #-20]	; 0xffffffec
    1148:	ldr	r3, [fp, #-20]	; 0xffffffec
    114c:	cmp	r3, #0
    1150:	beq	1170 <flatcc_json_parser_coerce_bool+0x48>
    1154:	mov	r3, #8
    1158:	ldr	r2, [fp, #-16]
    115c:	ldr	r1, [fp, #-12]
    1160:	ldr	r0, [fp, #-8]
    1164:	bl	0 <flatcc_json_parser_set_error>
    1168:	mov	r3, r0
    116c:	b	119c <flatcc_json_parser_coerce_bool+0x74>
    1170:	ldr	r2, [fp, #4]
    1174:	ldr	r3, [fp, #8]
    1178:	orr	r3, r2, r3
    117c:	cmp	r3, #0
    1180:	movne	r3, #1
    1184:	moveq	r3, #0
    1188:	uxtb	r3, r3
    118c:	mov	r2, r3
    1190:	ldr	r3, [fp, #12]
    1194:	strb	r2, [r3]
    1198:	ldr	r3, [fp, #-12]
    119c:	mov	r0, r3
    11a0:	sub	sp, fp, #4
    11a4:	ldr	fp, [sp]
    11a8:	add	sp, sp, #4
    11ac:	pop	{pc}		; (ldr pc, [sp], #4)

000011b0 <flatcc_json_parser_coerce_uint32>:
    11b0:	str	fp, [sp, #-8]!
    11b4:	str	lr, [sp, #4]
    11b8:	add	fp, sp, #4
    11bc:	sub	sp, sp, #16
    11c0:	str	r0, [fp, #-8]
    11c4:	str	r1, [fp, #-12]
    11c8:	str	r2, [fp, #-16]
    11cc:	str	r3, [fp, #-20]	; 0xffffffec
    11d0:	ldr	r3, [fp, #-20]	; 0xffffffec
    11d4:	cmp	r3, #0
    11d8:	beq	11f8 <flatcc_json_parser_coerce_uint32+0x48>
    11dc:	mov	r3, #8
    11e0:	ldr	r2, [fp, #-16]
    11e4:	ldr	r1, [fp, #-12]
    11e8:	ldr	r0, [fp, #-8]
    11ec:	bl	0 <flatcc_json_parser_set_error>
    11f0:	mov	r3, r0
    11f4:	b	123c <flatcc_json_parser_coerce_uint32+0x8c>
    11f8:	ldrd	r2, [fp, #4]
    11fc:	mvn	r0, #0
    1200:	mov	r1, #0
    1204:	cmp	r3, r1
    1208:	cmpeq	r2, r0
    120c:	bls	122c <flatcc_json_parser_coerce_uint32+0x7c>
    1210:	mov	r3, #7
    1214:	ldr	r2, [fp, #-16]
    1218:	ldr	r1, [fp, #-12]
    121c:	ldr	r0, [fp, #-8]
    1220:	bl	0 <flatcc_json_parser_set_error>
    1224:	mov	r3, r0
    1228:	b	123c <flatcc_json_parser_coerce_uint32+0x8c>
    122c:	ldr	r2, [fp, #4]
    1230:	ldr	r3, [fp, #12]
    1234:	str	r2, [r3]
    1238:	ldr	r3, [fp, #-12]
    123c:	mov	r0, r3
    1240:	sub	sp, fp, #4
    1244:	ldr	fp, [sp]
    1248:	add	sp, sp, #4
    124c:	pop	{pc}		; (ldr pc, [sp], #4)

00001250 <flatcc_json_parser_coerce_uint16>:
    1250:	str	fp, [sp, #-8]!
    1254:	str	lr, [sp, #4]
    1258:	add	fp, sp, #4
    125c:	sub	sp, sp, #16
    1260:	str	r0, [fp, #-8]
    1264:	str	r1, [fp, #-12]
    1268:	str	r2, [fp, #-16]
    126c:	str	r3, [fp, #-20]	; 0xffffffec
    1270:	ldr	r3, [fp, #-20]	; 0xffffffec
    1274:	cmp	r3, #0
    1278:	beq	1298 <flatcc_json_parser_coerce_uint16+0x48>
    127c:	mov	r3, #8
    1280:	ldr	r2, [fp, #-16]
    1284:	ldr	r1, [fp, #-12]
    1288:	ldr	r0, [fp, #-8]
    128c:	bl	0 <flatcc_json_parser_set_error>
    1290:	mov	r3, r0
    1294:	b	12dc <flatcc_json_parser_coerce_uint16+0x8c>
    1298:	ldrd	r2, [fp, #4]
    129c:	movw	r0, #65535	; 0xffff
    12a0:	mov	r1, #0
    12a4:	cmp	r3, r1
    12a8:	cmpeq	r2, r0
    12ac:	bls	12cc <flatcc_json_parser_coerce_uint16+0x7c>
    12b0:	mov	r3, #7
    12b4:	ldr	r2, [fp, #-16]
    12b8:	ldr	r1, [fp, #-12]
    12bc:	ldr	r0, [fp, #-8]
    12c0:	bl	0 <flatcc_json_parser_set_error>
    12c4:	mov	r3, r0
    12c8:	b	12dc <flatcc_json_parser_coerce_uint16+0x8c>
    12cc:	ldrh	r2, [fp, #4]
    12d0:	ldr	r3, [fp, #12]
    12d4:	strh	r2, [r3]
    12d8:	ldr	r3, [fp, #-12]
    12dc:	mov	r0, r3
    12e0:	sub	sp, fp, #4
    12e4:	ldr	fp, [sp]
    12e8:	add	sp, sp, #4
    12ec:	pop	{pc}		; (ldr pc, [sp], #4)

000012f0 <flatcc_json_parser_coerce_uint8>:
    12f0:	str	fp, [sp, #-8]!
    12f4:	str	lr, [sp, #4]
    12f8:	add	fp, sp, #4
    12fc:	sub	sp, sp, #16
    1300:	str	r0, [fp, #-8]
    1304:	str	r1, [fp, #-12]
    1308:	str	r2, [fp, #-16]
    130c:	str	r3, [fp, #-20]	; 0xffffffec
    1310:	ldr	r3, [fp, #-20]	; 0xffffffec
    1314:	cmp	r3, #0
    1318:	beq	1338 <flatcc_json_parser_coerce_uint8+0x48>
    131c:	mov	r3, #8
    1320:	ldr	r2, [fp, #-16]
    1324:	ldr	r1, [fp, #-12]
    1328:	ldr	r0, [fp, #-8]
    132c:	bl	0 <flatcc_json_parser_set_error>
    1330:	mov	r3, r0
    1334:	b	1374 <flatcc_json_parser_coerce_uint8+0x84>
    1338:	ldrd	r2, [fp, #4]
    133c:	cmp	r3, #0
    1340:	cmpeq	r2, #255	; 0xff
    1344:	bls	1364 <flatcc_json_parser_coerce_uint8+0x74>
    1348:	mov	r3, #7
    134c:	ldr	r2, [fp, #-16]
    1350:	ldr	r1, [fp, #-12]
    1354:	ldr	r0, [fp, #-8]
    1358:	bl	0 <flatcc_json_parser_set_error>
    135c:	mov	r3, r0
    1360:	b	1374 <flatcc_json_parser_coerce_uint8+0x84>
    1364:	ldrb	r2, [fp, #4]
    1368:	ldr	r3, [fp, #12]
    136c:	strb	r2, [r3]
    1370:	ldr	r3, [fp, #-12]
    1374:	mov	r0, r3
    1378:	sub	sp, fp, #4
    137c:	ldr	fp, [sp]
    1380:	add	sp, sp, #4
    1384:	pop	{pc}		; (ldr pc, [sp], #4)

00001388 <flatcc_json_parser_coerce_int64>:
    1388:	str	fp, [sp, #-8]!
    138c:	str	lr, [sp, #4]
    1390:	add	fp, sp, #4
    1394:	sub	sp, sp, #16
    1398:	str	r0, [fp, #-8]
    139c:	str	r1, [fp, #-12]
    13a0:	str	r2, [fp, #-16]
    13a4:	str	r3, [fp, #-20]	; 0xffffffec
    13a8:	ldr	r3, [fp, #-20]	; 0xffffffec
    13ac:	cmp	r3, #0
    13b0:	beq	13f8 <flatcc_json_parser_coerce_int64+0x70>
    13b4:	ldrd	r2, [fp, #4]
    13b8:	cmp	r3, #-2147483648	; 0x80000000
    13bc:	cmpeq	r2, #0
    13c0:	bls	13e0 <flatcc_json_parser_coerce_int64+0x58>
    13c4:	mov	r3, #8
    13c8:	ldr	r2, [fp, #-16]
    13cc:	ldr	r1, [fp, #-12]
    13d0:	ldr	r0, [fp, #-8]
    13d4:	bl	0 <flatcc_json_parser_set_error>
    13d8:	mov	r3, r0
    13dc:	b	1434 <flatcc_json_parser_coerce_int64+0xac>
    13e0:	ldrd	r2, [fp, #4]
    13e4:	rsbs	r2, r2, #0
    13e8:	rsc	r3, r3, #0
    13ec:	ldr	r1, [fp, #12]
    13f0:	strd	r2, [r1]
    13f4:	b	1430 <flatcc_json_parser_coerce_int64+0xa8>
    13f8:	ldrd	r2, [fp, #4]
    13fc:	cmp	r2, #0
    1400:	sbcs	r3, r3, #0
    1404:	bge	1424 <flatcc_json_parser_coerce_int64+0x9c>
    1408:	mov	r3, #7
    140c:	ldr	r2, [fp, #-16]
    1410:	ldr	r1, [fp, #-12]
    1414:	ldr	r0, [fp, #-8]
    1418:	bl	0 <flatcc_json_parser_set_error>
    141c:	mov	r3, r0
    1420:	b	1434 <flatcc_json_parser_coerce_int64+0xac>
    1424:	ldrd	r2, [fp, #4]
    1428:	ldr	r1, [fp, #12]
    142c:	strd	r2, [r1]
    1430:	ldr	r3, [fp, #-12]
    1434:	mov	r0, r3
    1438:	sub	sp, fp, #4
    143c:	ldr	fp, [sp]
    1440:	add	sp, sp, #4
    1444:	pop	{pc}		; (ldr pc, [sp], #4)

00001448 <flatcc_json_parser_coerce_int32>:
    1448:	str	fp, [sp, #-8]!
    144c:	str	lr, [sp, #4]
    1450:	add	fp, sp, #4
    1454:	sub	sp, sp, #16
    1458:	str	r0, [fp, #-8]
    145c:	str	r1, [fp, #-12]
    1460:	str	r2, [fp, #-16]
    1464:	str	r3, [fp, #-20]	; 0xffffffec
    1468:	ldr	r3, [fp, #-20]	; 0xffffffec
    146c:	cmp	r3, #0
    1470:	beq	14b8 <flatcc_json_parser_coerce_int32+0x70>
    1474:	ldrd	r2, [fp, #4]
    1478:	cmp	r3, #0
    147c:	cmpeq	r2, #-2147483648	; 0x80000000
    1480:	bls	14a0 <flatcc_json_parser_coerce_int32+0x58>
    1484:	mov	r3, #8
    1488:	ldr	r2, [fp, #-16]
    148c:	ldr	r1, [fp, #-12]
    1490:	ldr	r0, [fp, #-8]
    1494:	bl	0 <flatcc_json_parser_set_error>
    1498:	mov	r3, r0
    149c:	b	14fc <flatcc_json_parser_coerce_int32+0xb4>
    14a0:	ldr	r3, [fp, #4]
    14a4:	rsb	r3, r3, #0
    14a8:	mov	r2, r3
    14ac:	ldr	r3, [fp, #12]
    14b0:	str	r2, [r3]
    14b4:	b	14f8 <flatcc_json_parser_coerce_int32+0xb0>
    14b8:	ldrd	r2, [fp, #4]
    14bc:	mvn	r0, #-2147483648	; 0x80000000
    14c0:	mov	r1, #0
    14c4:	cmp	r3, r1
    14c8:	cmpeq	r2, r0
    14cc:	bls	14ec <flatcc_json_parser_coerce_int32+0xa4>
    14d0:	mov	r3, #7
    14d4:	ldr	r2, [fp, #-16]
    14d8:	ldr	r1, [fp, #-12]
    14dc:	ldr	r0, [fp, #-8]
    14e0:	bl	0 <flatcc_json_parser_set_error>
    14e4:	mov	r3, r0
    14e8:	b	14fc <flatcc_json_parser_coerce_int32+0xb4>
    14ec:	ldr	r2, [fp, #4]
    14f0:	ldr	r3, [fp, #12]
    14f4:	str	r2, [r3]
    14f8:	ldr	r3, [fp, #-12]
    14fc:	mov	r0, r3
    1500:	sub	sp, fp, #4
    1504:	ldr	fp, [sp]
    1508:	add	sp, sp, #4
    150c:	pop	{pc}		; (ldr pc, [sp], #4)

00001510 <flatcc_json_parser_coerce_int16>:
    1510:	str	fp, [sp, #-8]!
    1514:	str	lr, [sp, #4]
    1518:	add	fp, sp, #4
    151c:	sub	sp, sp, #16
    1520:	str	r0, [fp, #-8]
    1524:	str	r1, [fp, #-12]
    1528:	str	r2, [fp, #-16]
    152c:	str	r3, [fp, #-20]	; 0xffffffec
    1530:	ldr	r3, [fp, #-20]	; 0xffffffec
    1534:	cmp	r3, #0
    1538:	beq	1584 <flatcc_json_parser_coerce_int16+0x74>
    153c:	ldrd	r2, [fp, #4]
    1540:	cmp	r3, #0
    1544:	cmpeq	r2, #32768	; 0x8000
    1548:	bls	1568 <flatcc_json_parser_coerce_int16+0x58>
    154c:	mov	r3, #8
    1550:	ldr	r2, [fp, #-16]
    1554:	ldr	r1, [fp, #-12]
    1558:	ldr	r0, [fp, #-8]
    155c:	bl	0 <flatcc_json_parser_set_error>
    1560:	mov	r3, r0
    1564:	b	15c8 <flatcc_json_parser_coerce_int16+0xb8>
    1568:	ldrh	r3, [fp, #4]
    156c:	rsb	r3, r3, #0
    1570:	uxth	r3, r3
    1574:	sxth	r2, r3
    1578:	ldr	r3, [fp, #12]
    157c:	strh	r2, [r3]
    1580:	b	15c4 <flatcc_json_parser_coerce_int16+0xb4>
    1584:	ldrd	r2, [fp, #4]
    1588:	movw	r0, #32767	; 0x7fff
    158c:	mov	r1, #0
    1590:	cmp	r3, r1
    1594:	cmpeq	r2, r0
    1598:	bls	15b8 <flatcc_json_parser_coerce_int16+0xa8>
    159c:	mov	r3, #7
    15a0:	ldr	r2, [fp, #-16]
    15a4:	ldr	r1, [fp, #-12]
    15a8:	ldr	r0, [fp, #-8]
    15ac:	bl	0 <flatcc_json_parser_set_error>
    15b0:	mov	r3, r0
    15b4:	b	15c8 <flatcc_json_parser_coerce_int16+0xb8>
    15b8:	ldrsh	r2, [fp, #4]
    15bc:	ldr	r3, [fp, #12]
    15c0:	strh	r2, [r3]
    15c4:	ldr	r3, [fp, #-12]
    15c8:	mov	r0, r3
    15cc:	sub	sp, fp, #4
    15d0:	ldr	fp, [sp]
    15d4:	add	sp, sp, #4
    15d8:	pop	{pc}		; (ldr pc, [sp], #4)

000015dc <flatcc_json_parser_coerce_int8>:
    15dc:	str	fp, [sp, #-8]!
    15e0:	str	lr, [sp, #4]
    15e4:	add	fp, sp, #4
    15e8:	sub	sp, sp, #16
    15ec:	str	r0, [fp, #-8]
    15f0:	str	r1, [fp, #-12]
    15f4:	str	r2, [fp, #-16]
    15f8:	str	r3, [fp, #-20]	; 0xffffffec
    15fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1600:	cmp	r3, #0
    1604:	beq	1650 <flatcc_json_parser_coerce_int8+0x74>
    1608:	ldrd	r2, [fp, #4]
    160c:	cmp	r3, #0
    1610:	cmpeq	r2, #128	; 0x80
    1614:	bls	1634 <flatcc_json_parser_coerce_int8+0x58>
    1618:	mov	r3, #8
    161c:	ldr	r2, [fp, #-16]
    1620:	ldr	r1, [fp, #-12]
    1624:	ldr	r0, [fp, #-8]
    1628:	bl	0 <flatcc_json_parser_set_error>
    162c:	mov	r3, r0
    1630:	b	168c <flatcc_json_parser_coerce_int8+0xb0>
    1634:	ldrb	r3, [fp, #4]
    1638:	rsb	r3, r3, #0
    163c:	uxtb	r3, r3
    1640:	sxtb	r2, r3
    1644:	ldr	r3, [fp, #12]
    1648:	strb	r2, [r3]
    164c:	b	1688 <flatcc_json_parser_coerce_int8+0xac>
    1650:	ldrd	r2, [fp, #4]
    1654:	cmp	r3, #0
    1658:	cmpeq	r2, #127	; 0x7f
    165c:	bls	167c <flatcc_json_parser_coerce_int8+0xa0>
    1660:	mov	r3, #7
    1664:	ldr	r2, [fp, #-16]
    1668:	ldr	r1, [fp, #-12]
    166c:	ldr	r0, [fp, #-8]
    1670:	bl	0 <flatcc_json_parser_set_error>
    1674:	mov	r3, r0
    1678:	b	168c <flatcc_json_parser_coerce_int8+0xb0>
    167c:	ldrsb	r2, [fp, #4]
    1680:	ldr	r3, [fp, #12]
    1684:	strb	r2, [r3]
    1688:	ldr	r3, [fp, #-12]
    168c:	mov	r0, r3
    1690:	sub	sp, fp, #4
    1694:	ldr	fp, [sp]
    1698:	add	sp, sp, #4
    169c:	pop	{pc}		; (ldr pc, [sp], #4)

000016a0 <flatcc_json_parser_coerce_float>:
    16a0:	str	fp, [sp, #-8]!
    16a4:	str	lr, [sp, #4]
    16a8:	add	fp, sp, #4
    16ac:	sub	sp, sp, #16
    16b0:	str	r0, [fp, #-8]
    16b4:	str	r1, [fp, #-12]
    16b8:	str	r2, [fp, #-16]
    16bc:	str	r3, [fp, #-20]	; 0xffffffec
    16c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    16c4:	cmp	r3, #0
    16c8:	beq	16e0 <flatcc_json_parser_coerce_float+0x40>
    16cc:	ldrd	r0, [fp, #4]
    16d0:	bl	0 <__aeabi_ul2f>
    16d4:	mov	r3, r0
    16d8:	eor	r2, r3, #-2147483648	; 0x80000000
    16dc:	b	16ec <flatcc_json_parser_coerce_float+0x4c>
    16e0:	ldrd	r0, [fp, #4]
    16e4:	bl	0 <__aeabi_ul2f>
    16e8:	mov	r2, r0
    16ec:	ldr	r3, [fp, #12]
    16f0:	str	r2, [r3]
    16f4:	ldr	r3, [fp, #-12]
    16f8:	mov	r0, r3
    16fc:	sub	sp, fp, #4
    1700:	ldr	fp, [sp]
    1704:	add	sp, sp, #4
    1708:	pop	{pc}		; (ldr pc, [sp], #4)

0000170c <flatcc_json_parser_coerce_double>:
    170c:	str	fp, [sp, #-8]!
    1710:	str	lr, [sp, #4]
    1714:	add	fp, sp, #4
    1718:	sub	sp, sp, #16
    171c:	str	r0, [fp, #-8]
    1720:	str	r1, [fp, #-12]
    1724:	str	r2, [fp, #-16]
    1728:	str	r3, [fp, #-20]	; 0xffffffec
    172c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1730:	cmp	r3, #0
    1734:	beq	1750 <flatcc_json_parser_coerce_double+0x44>
    1738:	ldrd	r0, [fp, #4]
    173c:	bl	0 <__aeabi_ul2d>
    1740:	mov	r2, r0
    1744:	mov	r3, r1
    1748:	eor	r3, r3, #-2147483648	; 0x80000000
    174c:	b	1760 <flatcc_json_parser_coerce_double+0x54>
    1750:	ldrd	r0, [fp, #4]
    1754:	bl	0 <__aeabi_ul2d>
    1758:	mov	r2, r0
    175c:	mov	r3, r1
    1760:	ldr	r1, [fp, #12]
    1764:	strd	r2, [r1]
    1768:	ldr	r3, [fp, #-12]
    176c:	mov	r0, r3
    1770:	sub	sp, fp, #4
    1774:	ldr	fp, [sp]
    1778:	add	sp, sp, #4
    177c:	pop	{pc}		; (ldr pc, [sp], #4)

00001780 <flatcc_json_parser_none>:
    1780:	str	fp, [sp, #-8]!
    1784:	str	lr, [sp, #4]
    1788:	add	fp, sp, #4
    178c:	sub	sp, sp, #16
    1790:	str	r0, [fp, #-8]
    1794:	str	r1, [fp, #-12]
    1798:	str	r2, [fp, #-16]
    179c:	ldr	r2, [fp, #-16]
    17a0:	ldr	r3, [fp, #-12]
    17a4:	sub	r3, r2, r3
    17a8:	cmp	r3, #3
    17ac:	ble	17dc <flatcc_json_parser_none+0x5c>
    17b0:	mov	r2, #4
    17b4:	movw	r1, #0
    17b8:	movt	r1, #0
    17bc:	ldr	r0, [fp, #-12]
    17c0:	bl	0 <memcmp>
    17c4:	mov	r3, r0
    17c8:	cmp	r3, #0
    17cc:	bne	17dc <flatcc_json_parser_none+0x5c>
    17d0:	ldr	r3, [fp, #-12]
    17d4:	add	r3, r3, #4
    17d8:	b	17f4 <flatcc_json_parser_none+0x74>
    17dc:	mov	r3, #26
    17e0:	ldr	r2, [fp, #-16]
    17e4:	ldr	r1, [fp, #-12]
    17e8:	ldr	r0, [fp, #-8]
    17ec:	bl	0 <flatcc_json_parser_set_error>
    17f0:	mov	r3, r0
    17f4:	mov	r0, r3
    17f8:	sub	sp, fp, #4
    17fc:	ldr	fp, [sp]
    1800:	add	sp, sp, #4
    1804:	pop	{pc}		; (ldr pc, [sp], #4)

00001808 <flatcc_json_parser_uint64>:
    1808:	str	fp, [sp, #-8]!
    180c:	str	lr, [sp, #4]
    1810:	add	fp, sp, #4
    1814:	sub	sp, sp, #56	; 0x38
    1818:	str	r0, [fp, #-32]	; 0xffffffe0
    181c:	str	r1, [fp, #-36]	; 0xffffffdc
    1820:	str	r2, [fp, #-40]	; 0xffffffd8
    1824:	str	r3, [fp, #-44]	; 0xffffffd4
    1828:	mov	r2, #0
    182c:	mov	r3, #0
    1830:	strd	r2, [fp, #-20]	; 0xffffffec
    1834:	mov	r3, #0
    1838:	str	r3, [fp, #-24]	; 0xffffffe8
    183c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1840:	str	r3, [fp, #-8]
    1844:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1848:	mov	r2, #0
    184c:	mov	r3, #0
    1850:	strd	r2, [r1]
    1854:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1858:	ldr	r3, [fp, #-40]	; 0xffffffd8
    185c:	cmp	r2, r3
    1860:	bne	186c <flatcc_json_parser_uint64+0x64>
    1864:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1868:	b	18d4 <flatcc_json_parser_uint64+0xcc>
    186c:	sub	r2, fp, #24
    1870:	sub	r3, fp, #20
    1874:	str	r3, [sp]
    1878:	mov	r3, r2
    187c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1880:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1884:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1888:	bl	0 <flatcc_json_parser_integer>
    188c:	str	r0, [fp, #-36]	; 0xffffffdc
    1890:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1894:	ldr	r3, [fp, #-8]
    1898:	cmp	r2, r3
    189c:	beq	18d0 <flatcc_json_parser_uint64+0xc8>
    18a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    18a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    18a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    18ac:	str	r1, [sp, #8]
    18b0:	strd	r2, [sp]
    18b4:	mov	r3, r0
    18b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    18bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    18c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    18c4:	bl	10bc <flatcc_json_parser_coerce_uint64>
    18c8:	mov	r3, r0
    18cc:	b	18d4 <flatcc_json_parser_uint64+0xcc>
    18d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    18d4:	mov	r0, r3
    18d8:	sub	sp, fp, #4
    18dc:	ldr	fp, [sp]
    18e0:	add	sp, sp, #4
    18e4:	pop	{pc}		; (ldr pc, [sp], #4)

000018e8 <flatcc_json_parser_uint32>:
    18e8:	str	fp, [sp, #-8]!
    18ec:	str	lr, [sp, #4]
    18f0:	add	fp, sp, #4
    18f4:	sub	sp, sp, #56	; 0x38
    18f8:	str	r0, [fp, #-32]	; 0xffffffe0
    18fc:	str	r1, [fp, #-36]	; 0xffffffdc
    1900:	str	r2, [fp, #-40]	; 0xffffffd8
    1904:	str	r3, [fp, #-44]	; 0xffffffd4
    1908:	mov	r2, #0
    190c:	mov	r3, #0
    1910:	strd	r2, [fp, #-20]	; 0xffffffec
    1914:	mov	r3, #0
    1918:	str	r3, [fp, #-24]	; 0xffffffe8
    191c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1920:	str	r3, [fp, #-8]
    1924:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1928:	mov	r2, #0
    192c:	str	r2, [r3]
    1930:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1934:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1938:	cmp	r2, r3
    193c:	bne	1948 <flatcc_json_parser_uint32+0x60>
    1940:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1944:	b	19b0 <flatcc_json_parser_uint32+0xc8>
    1948:	sub	r2, fp, #24
    194c:	sub	r3, fp, #20
    1950:	str	r3, [sp]
    1954:	mov	r3, r2
    1958:	ldr	r2, [fp, #-40]	; 0xffffffd8
    195c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1960:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1964:	bl	0 <flatcc_json_parser_integer>
    1968:	str	r0, [fp, #-36]	; 0xffffffdc
    196c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1970:	ldr	r3, [fp, #-8]
    1974:	cmp	r2, r3
    1978:	beq	19ac <flatcc_json_parser_uint32+0xc4>
    197c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1980:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1984:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1988:	str	r1, [sp, #8]
    198c:	strd	r2, [sp]
    1990:	mov	r3, r0
    1994:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1998:	ldr	r1, [fp, #-36]	; 0xffffffdc
    199c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    19a0:	bl	11b0 <flatcc_json_parser_coerce_uint32>
    19a4:	mov	r3, r0
    19a8:	b	19b0 <flatcc_json_parser_uint32+0xc8>
    19ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    19b0:	mov	r0, r3
    19b4:	sub	sp, fp, #4
    19b8:	ldr	fp, [sp]
    19bc:	add	sp, sp, #4
    19c0:	pop	{pc}		; (ldr pc, [sp], #4)

000019c4 <flatcc_json_parser_uint16>:
    19c4:	str	fp, [sp, #-8]!
    19c8:	str	lr, [sp, #4]
    19cc:	add	fp, sp, #4
    19d0:	sub	sp, sp, #56	; 0x38
    19d4:	str	r0, [fp, #-32]	; 0xffffffe0
    19d8:	str	r1, [fp, #-36]	; 0xffffffdc
    19dc:	str	r2, [fp, #-40]	; 0xffffffd8
    19e0:	str	r3, [fp, #-44]	; 0xffffffd4
    19e4:	mov	r2, #0
    19e8:	mov	r3, #0
    19ec:	strd	r2, [fp, #-20]	; 0xffffffec
    19f0:	mov	r3, #0
    19f4:	str	r3, [fp, #-24]	; 0xffffffe8
    19f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    19fc:	str	r3, [fp, #-8]
    1a00:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1a04:	mov	r2, #0
    1a08:	strh	r2, [r3]
    1a0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1a10:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1a14:	cmp	r2, r3
    1a18:	bne	1a24 <flatcc_json_parser_uint16+0x60>
    1a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1a20:	b	1a8c <flatcc_json_parser_uint16+0xc8>
    1a24:	sub	r2, fp, #24
    1a28:	sub	r3, fp, #20
    1a2c:	str	r3, [sp]
    1a30:	mov	r3, r2
    1a34:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1a38:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a40:	bl	0 <flatcc_json_parser_integer>
    1a44:	str	r0, [fp, #-36]	; 0xffffffdc
    1a48:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1a4c:	ldr	r3, [fp, #-8]
    1a50:	cmp	r2, r3
    1a54:	beq	1a88 <flatcc_json_parser_uint16+0xc4>
    1a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1a5c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1a64:	str	r1, [sp, #8]
    1a68:	strd	r2, [sp]
    1a6c:	mov	r3, r0
    1a70:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1a74:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1a78:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1a7c:	bl	1250 <flatcc_json_parser_coerce_uint16>
    1a80:	mov	r3, r0
    1a84:	b	1a8c <flatcc_json_parser_uint16+0xc8>
    1a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1a8c:	mov	r0, r3
    1a90:	sub	sp, fp, #4
    1a94:	ldr	fp, [sp]
    1a98:	add	sp, sp, #4
    1a9c:	pop	{pc}		; (ldr pc, [sp], #4)

00001aa0 <flatcc_json_parser_uint8>:
    1aa0:	str	fp, [sp, #-8]!
    1aa4:	str	lr, [sp, #4]
    1aa8:	add	fp, sp, #4
    1aac:	sub	sp, sp, #56	; 0x38
    1ab0:	str	r0, [fp, #-32]	; 0xffffffe0
    1ab4:	str	r1, [fp, #-36]	; 0xffffffdc
    1ab8:	str	r2, [fp, #-40]	; 0xffffffd8
    1abc:	str	r3, [fp, #-44]	; 0xffffffd4
    1ac0:	mov	r2, #0
    1ac4:	mov	r3, #0
    1ac8:	strd	r2, [fp, #-20]	; 0xffffffec
    1acc:	mov	r3, #0
    1ad0:	str	r3, [fp, #-24]	; 0xffffffe8
    1ad4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1ad8:	str	r3, [fp, #-8]
    1adc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1ae0:	mov	r2, #0
    1ae4:	strb	r2, [r3]
    1ae8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1aec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1af0:	cmp	r2, r3
    1af4:	bne	1b00 <flatcc_json_parser_uint8+0x60>
    1af8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1afc:	b	1b68 <flatcc_json_parser_uint8+0xc8>
    1b00:	sub	r2, fp, #24
    1b04:	sub	r3, fp, #20
    1b08:	str	r3, [sp]
    1b0c:	mov	r3, r2
    1b10:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1b14:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1b1c:	bl	0 <flatcc_json_parser_integer>
    1b20:	str	r0, [fp, #-36]	; 0xffffffdc
    1b24:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1b28:	ldr	r3, [fp, #-8]
    1b2c:	cmp	r2, r3
    1b30:	beq	1b64 <flatcc_json_parser_uint8+0xc4>
    1b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b38:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1b3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1b40:	str	r1, [sp, #8]
    1b44:	strd	r2, [sp]
    1b48:	mov	r3, r0
    1b4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1b50:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1b54:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1b58:	bl	12f0 <flatcc_json_parser_coerce_uint8>
    1b5c:	mov	r3, r0
    1b60:	b	1b68 <flatcc_json_parser_uint8+0xc8>
    1b64:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1b68:	mov	r0, r3
    1b6c:	sub	sp, fp, #4
    1b70:	ldr	fp, [sp]
    1b74:	add	sp, sp, #4
    1b78:	pop	{pc}		; (ldr pc, [sp], #4)

00001b7c <flatcc_json_parser_int64>:
    1b7c:	str	fp, [sp, #-8]!
    1b80:	str	lr, [sp, #4]
    1b84:	add	fp, sp, #4
    1b88:	sub	sp, sp, #56	; 0x38
    1b8c:	str	r0, [fp, #-32]	; 0xffffffe0
    1b90:	str	r1, [fp, #-36]	; 0xffffffdc
    1b94:	str	r2, [fp, #-40]	; 0xffffffd8
    1b98:	str	r3, [fp, #-44]	; 0xffffffd4
    1b9c:	mov	r2, #0
    1ba0:	mov	r3, #0
    1ba4:	strd	r2, [fp, #-20]	; 0xffffffec
    1ba8:	mov	r3, #0
    1bac:	str	r3, [fp, #-24]	; 0xffffffe8
    1bb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bb4:	str	r3, [fp, #-8]
    1bb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1bbc:	mov	r2, #0
    1bc0:	mov	r3, #0
    1bc4:	strd	r2, [r1]
    1bc8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1bcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1bd0:	cmp	r2, r3
    1bd4:	bne	1be0 <flatcc_json_parser_int64+0x64>
    1bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1bdc:	b	1c48 <flatcc_json_parser_int64+0xcc>
    1be0:	sub	r2, fp, #24
    1be4:	sub	r3, fp, #20
    1be8:	str	r3, [sp]
    1bec:	mov	r3, r2
    1bf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1bf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1bfc:	bl	0 <flatcc_json_parser_integer>
    1c00:	str	r0, [fp, #-36]	; 0xffffffdc
    1c04:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1c08:	ldr	r3, [fp, #-8]
    1c0c:	cmp	r2, r3
    1c10:	beq	1c44 <flatcc_json_parser_int64+0xc8>
    1c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c18:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1c1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1c20:	str	r1, [sp, #8]
    1c24:	strd	r2, [sp]
    1c28:	mov	r3, r0
    1c2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1c30:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1c38:	bl	1388 <flatcc_json_parser_coerce_int64>
    1c3c:	mov	r3, r0
    1c40:	b	1c48 <flatcc_json_parser_int64+0xcc>
    1c44:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c48:	mov	r0, r3
    1c4c:	sub	sp, fp, #4
    1c50:	ldr	fp, [sp]
    1c54:	add	sp, sp, #4
    1c58:	pop	{pc}		; (ldr pc, [sp], #4)

00001c5c <flatcc_json_parser_int32>:
    1c5c:	str	fp, [sp, #-8]!
    1c60:	str	lr, [sp, #4]
    1c64:	add	fp, sp, #4
    1c68:	sub	sp, sp, #56	; 0x38
    1c6c:	str	r0, [fp, #-32]	; 0xffffffe0
    1c70:	str	r1, [fp, #-36]	; 0xffffffdc
    1c74:	str	r2, [fp, #-40]	; 0xffffffd8
    1c78:	str	r3, [fp, #-44]	; 0xffffffd4
    1c7c:	mov	r2, #0
    1c80:	mov	r3, #0
    1c84:	strd	r2, [fp, #-20]	; 0xffffffec
    1c88:	mov	r3, #0
    1c8c:	str	r3, [fp, #-24]	; 0xffffffe8
    1c90:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1c94:	str	r3, [fp, #-8]
    1c98:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1c9c:	mov	r2, #0
    1ca0:	str	r2, [r3]
    1ca4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1ca8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1cac:	cmp	r2, r3
    1cb0:	bne	1cbc <flatcc_json_parser_int32+0x60>
    1cb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1cb8:	b	1d24 <flatcc_json_parser_int32+0xc8>
    1cbc:	sub	r2, fp, #24
    1cc0:	sub	r3, fp, #20
    1cc4:	str	r3, [sp]
    1cc8:	mov	r3, r2
    1ccc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1cd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1cd8:	bl	0 <flatcc_json_parser_integer>
    1cdc:	str	r0, [fp, #-36]	; 0xffffffdc
    1ce0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1ce4:	ldr	r3, [fp, #-8]
    1ce8:	cmp	r2, r3
    1cec:	beq	1d20 <flatcc_json_parser_int32+0xc4>
    1cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1cf4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1cf8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1cfc:	str	r1, [sp, #8]
    1d00:	strd	r2, [sp]
    1d04:	mov	r3, r0
    1d08:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1d0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1d14:	bl	1448 <flatcc_json_parser_coerce_int32>
    1d18:	mov	r3, r0
    1d1c:	b	1d24 <flatcc_json_parser_int32+0xc8>
    1d20:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1d24:	mov	r0, r3
    1d28:	sub	sp, fp, #4
    1d2c:	ldr	fp, [sp]
    1d30:	add	sp, sp, #4
    1d34:	pop	{pc}		; (ldr pc, [sp], #4)

00001d38 <flatcc_json_parser_int16>:
    1d38:	str	fp, [sp, #-8]!
    1d3c:	str	lr, [sp, #4]
    1d40:	add	fp, sp, #4
    1d44:	sub	sp, sp, #56	; 0x38
    1d48:	str	r0, [fp, #-32]	; 0xffffffe0
    1d4c:	str	r1, [fp, #-36]	; 0xffffffdc
    1d50:	str	r2, [fp, #-40]	; 0xffffffd8
    1d54:	str	r3, [fp, #-44]	; 0xffffffd4
    1d58:	mov	r2, #0
    1d5c:	mov	r3, #0
    1d60:	strd	r2, [fp, #-20]	; 0xffffffec
    1d64:	mov	r3, #0
    1d68:	str	r3, [fp, #-24]	; 0xffffffe8
    1d6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1d70:	str	r3, [fp, #-8]
    1d74:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1d78:	mov	r2, #0
    1d7c:	strh	r2, [r3]
    1d80:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1d84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1d88:	cmp	r2, r3
    1d8c:	bne	1d98 <flatcc_json_parser_int16+0x60>
    1d90:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1d94:	b	1e00 <flatcc_json_parser_int16+0xc8>
    1d98:	sub	r2, fp, #24
    1d9c:	sub	r3, fp, #20
    1da0:	str	r3, [sp]
    1da4:	mov	r3, r2
    1da8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1dac:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1db0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1db4:	bl	0 <flatcc_json_parser_integer>
    1db8:	str	r0, [fp, #-36]	; 0xffffffdc
    1dbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1dc0:	ldr	r3, [fp, #-8]
    1dc4:	cmp	r2, r3
    1dc8:	beq	1dfc <flatcc_json_parser_int16+0xc4>
    1dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1dd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1dd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1dd8:	str	r1, [sp, #8]
    1ddc:	strd	r2, [sp]
    1de0:	mov	r3, r0
    1de4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1dec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1df0:	bl	1510 <flatcc_json_parser_coerce_int16>
    1df4:	mov	r3, r0
    1df8:	b	1e00 <flatcc_json_parser_int16+0xc8>
    1dfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e00:	mov	r0, r3
    1e04:	sub	sp, fp, #4
    1e08:	ldr	fp, [sp]
    1e0c:	add	sp, sp, #4
    1e10:	pop	{pc}		; (ldr pc, [sp], #4)

00001e14 <flatcc_json_parser_int8>:
    1e14:	str	fp, [sp, #-8]!
    1e18:	str	lr, [sp, #4]
    1e1c:	add	fp, sp, #4
    1e20:	sub	sp, sp, #56	; 0x38
    1e24:	str	r0, [fp, #-32]	; 0xffffffe0
    1e28:	str	r1, [fp, #-36]	; 0xffffffdc
    1e2c:	str	r2, [fp, #-40]	; 0xffffffd8
    1e30:	str	r3, [fp, #-44]	; 0xffffffd4
    1e34:	mov	r2, #0
    1e38:	mov	r3, #0
    1e3c:	strd	r2, [fp, #-20]	; 0xffffffec
    1e40:	mov	r3, #0
    1e44:	str	r3, [fp, #-24]	; 0xffffffe8
    1e48:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e4c:	str	r3, [fp, #-8]
    1e50:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1e54:	mov	r2, #0
    1e58:	strb	r2, [r3]
    1e5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1e60:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1e64:	cmp	r2, r3
    1e68:	bne	1e74 <flatcc_json_parser_int8+0x60>
    1e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1e70:	b	1edc <flatcc_json_parser_int8+0xc8>
    1e74:	sub	r2, fp, #24
    1e78:	sub	r3, fp, #20
    1e7c:	str	r3, [sp]
    1e80:	mov	r3, r2
    1e84:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1e88:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1e8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1e90:	bl	0 <flatcc_json_parser_integer>
    1e94:	str	r0, [fp, #-36]	; 0xffffffdc
    1e98:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1e9c:	ldr	r3, [fp, #-8]
    1ea0:	cmp	r2, r3
    1ea4:	beq	1ed8 <flatcc_json_parser_int8+0xc4>
    1ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1eac:	ldrd	r2, [fp, #-20]	; 0xffffffec
    1eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    1eb4:	str	r1, [sp, #8]
    1eb8:	strd	r2, [sp]
    1ebc:	mov	r3, r0
    1ec0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1ec4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1ec8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1ecc:	bl	15dc <flatcc_json_parser_coerce_int8>
    1ed0:	mov	r3, r0
    1ed4:	b	1edc <flatcc_json_parser_int8+0xc8>
    1ed8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1edc:	mov	r0, r3
    1ee0:	sub	sp, fp, #4
    1ee4:	ldr	fp, [sp]
    1ee8:	add	sp, sp, #4
    1eec:	pop	{pc}		; (ldr pc, [sp], #4)

00001ef0 <flatcc_json_parser_bool>:
    1ef0:	str	fp, [sp, #-8]!
    1ef4:	str	lr, [sp, #4]
    1ef8:	add	fp, sp, #4
    1efc:	sub	sp, sp, #24
    1f00:	str	r0, [fp, #-16]
    1f04:	str	r1, [fp, #-20]	; 0xffffffec
    1f08:	str	r2, [fp, #-24]	; 0xffffffe8
    1f0c:	str	r3, [fp, #-28]	; 0xffffffe4
    1f10:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f14:	str	r3, [fp, #-8]
    1f18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f20:	sub	r3, r2, r3
    1f24:	cmp	r3, #3
    1f28:	ble	1f64 <flatcc_json_parser_bool+0x74>
    1f2c:	mov	r2, #4
    1f30:	movw	r1, #0
    1f34:	movt	r1, #0
    1f38:	ldr	r0, [fp, #-20]	; 0xffffffec
    1f3c:	bl	0 <memcmp>
    1f40:	mov	r3, r0
    1f44:	cmp	r3, #0
    1f48:	bne	1f64 <flatcc_json_parser_bool+0x74>
    1f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f50:	mov	r2, #1
    1f54:	strb	r2, [r3]
    1f58:	ldr	r3, [fp, #-8]
    1f5c:	add	r3, r3, #4
    1f60:	b	1fec <flatcc_json_parser_bool+0xfc>
    1f64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1f68:	ldr	r3, [fp, #-20]	; 0xffffffec
    1f6c:	sub	r3, r2, r3
    1f70:	cmp	r3, #4
    1f74:	ble	1fb0 <flatcc_json_parser_bool+0xc0>
    1f78:	mov	r2, #5
    1f7c:	movw	r1, #0
    1f80:	movt	r1, #0
    1f84:	ldr	r0, [fp, #-20]	; 0xffffffec
    1f88:	bl	0 <memcmp>
    1f8c:	mov	r3, r0
    1f90:	cmp	r3, #0
    1f94:	bne	1fb0 <flatcc_json_parser_bool+0xc0>
    1f98:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f9c:	mov	r2, #0
    1fa0:	strb	r2, [r3]
    1fa4:	ldr	r3, [fp, #-8]
    1fa8:	add	r3, r3, #5
    1fac:	b	1fec <flatcc_json_parser_bool+0xfc>
    1fb0:	sub	r3, fp, #9
    1fb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1fbc:	ldr	r0, [fp, #-16]
    1fc0:	bl	1aa0 <flatcc_json_parser_uint8>
    1fc4:	str	r0, [fp, #-20]	; 0xffffffec
    1fc8:	ldrb	r3, [fp, #-9]
    1fcc:	cmp	r3, #0
    1fd0:	movne	r3, #1
    1fd4:	moveq	r3, #0
    1fd8:	uxtb	r3, r3
    1fdc:	mov	r2, r3
    1fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1fe4:	strb	r2, [r3]
    1fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
    1fec:	mov	r0, r3
    1ff0:	sub	sp, fp, #4
    1ff4:	ldr	fp, [sp]
    1ff8:	add	sp, sp, #4
    1ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00002000 <flatcc_json_parser_symbolic_uint64>:
    2000:	strd	r4, [sp, #-20]!	; 0xffffffec
    2004:	str	r6, [sp, #8]
    2008:	str	fp, [sp, #12]
    200c:	str	lr, [sp, #16]
    2010:	add	fp, sp, #16
    2014:	sub	sp, sp, #76	; 0x4c
    2018:	str	r0, [fp, #-64]	; 0xffffffc0
    201c:	str	r1, [fp, #-68]	; 0xffffffbc
    2020:	str	r2, [fp, #-72]	; 0xffffffb8
    2024:	str	r3, [fp, #-76]	; 0xffffffb4
    2028:	mov	r2, #0
    202c:	mov	r3, #0
    2030:	strd	r2, [fp, #-44]	; 0xffffffd4
    2034:	mov	r3, #0
    2038:	str	r3, [fp, #-28]	; 0xffffffe4
    203c:	ldr	r1, [fp, #4]
    2040:	mov	r2, #0
    2044:	mov	r3, #0
    2048:	strd	r2, [r1]
    204c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2050:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2054:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2058:	bl	a18 <flatcc_json_parser_constant_start>
    205c:	str	r0, [fp, #-68]	; 0xffffffbc
    2060:	ldr	r2, [fp, #-68]	; 0xffffffbc
    2064:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2068:	cmp	r2, r3
    206c:	bne	2078 <flatcc_json_parser_symbolic_uint64+0x78>
    2070:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2074:	b	21d8 <flatcc_json_parser_symbolic_uint64+0x1d8>
    2078:	ldr	r3, [fp, #-76]	; 0xffffffb4
    207c:	str	r3, [fp, #-24]	; 0xffffffe8
    2080:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2084:	ldr	r6, [r3]
    2088:	ldr	r3, [fp, #-68]	; 0xffffffbc
    208c:	str	r3, [fp, #-32]	; 0xffffffe0
    2090:	sub	r2, fp, #56	; 0x38
    2094:	sub	r3, fp, #60	; 0x3c
    2098:	str	r3, [sp, #4]
    209c:	sub	r3, fp, #52	; 0x34
    20a0:	str	r3, [sp]
    20a4:	mov	r3, r2
    20a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    20ac:	ldr	r1, [fp, #-32]	; 0xffffffe0
    20b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    20b4:	blx	r6
    20b8:	str	r0, [fp, #-68]	; 0xffffffbc
    20bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    20c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    20c4:	cmp	r2, r3
    20c8:	bne	20d4 <flatcc_json_parser_symbolic_uint64+0xd4>
    20cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    20d0:	b	21d8 <flatcc_json_parser_symbolic_uint64+0x1d8>
    20d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
    20d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    20dc:	cmp	r2, r3
    20e0:	bne	2100 <flatcc_json_parser_symbolic_uint64+0x100>
    20e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20e8:	add	r3, r3, #4
    20ec:	str	r3, [fp, #-24]	; 0xffffffe8
    20f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    20f4:	ldr	r3, [r3]
    20f8:	cmp	r3, #0
    20fc:	bne	2080 <flatcc_json_parser_symbolic_uint64+0x80>
    2100:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2104:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2108:	cmp	r2, r3
    210c:	bne	212c <flatcc_json_parser_symbolic_uint64+0x12c>
    2110:	mov	r3, #23
    2114:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2118:	ldr	r1, [fp, #-68]	; 0xffffffbc
    211c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2120:	bl	0 <flatcc_json_parser_set_error>
    2124:	mov	r3, r0
    2128:	b	21d8 <flatcc_json_parser_symbolic_uint64+0x1d8>
    212c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2130:	add	r2, r3, #1
    2134:	str	r2, [fp, #-28]	; 0xffffffe4
    2138:	cmp	r3, #0
    213c:	beq	216c <flatcc_json_parser_symbolic_uint64+0x16c>
    2140:	ldr	r3, [fp, #-64]	; 0xffffffc0
    2144:	ldr	r3, [r3, #12]
    2148:	cmp	r3, #0
    214c:	beq	216c <flatcc_json_parser_symbolic_uint64+0x16c>
    2150:	mov	r3, #14
    2154:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2158:	ldr	r1, [fp, #-68]	; 0xffffffbc
    215c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2160:	bl	0 <flatcc_json_parser_set_error>
    2164:	mov	r3, r0
    2168:	b	21d8 <flatcc_json_parser_symbolic_uint64+0x1d8>
    216c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2170:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2174:	sub	r1, fp, #44	; 0x2c
    2178:	str	r1, [sp, #8]
    217c:	strd	r2, [sp]
    2180:	mov	r3, r0
    2184:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2188:	ldr	r1, [fp, #-68]	; 0xffffffbc
    218c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2190:	bl	10bc <flatcc_json_parser_coerce_uint64>
    2194:	mov	r2, r0
    2198:	ldr	r3, [fp, #-72]	; 0xffffffb8
    219c:	cmp	r3, r2
    21a0:	bne	21ac <flatcc_json_parser_symbolic_uint64+0x1ac>
    21a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    21a8:	b	21d8 <flatcc_json_parser_symbolic_uint64+0x1d8>
    21ac:	ldr	r3, [fp, #4]
    21b0:	ldrd	r0, [r3]
    21b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    21b8:	adds	r4, r0, r2
    21bc:	adc	r5, r1, r3
    21c0:	ldr	r3, [fp, #4]
    21c4:	strd	r4, [r3]
    21c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    21cc:	cmp	r3, #0
    21d0:	bne	2078 <flatcc_json_parser_symbolic_uint64+0x78>
    21d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    21d8:	mov	r0, r3
    21dc:	sub	sp, fp, #16
    21e0:	ldrd	r4, [sp]
    21e4:	ldr	r6, [sp, #8]
    21e8:	ldr	fp, [sp, #12]
    21ec:	add	sp, sp, #16
    21f0:	pop	{pc}		; (ldr pc, [sp], #4)

000021f4 <flatcc_json_parser_symbolic_uint32>:
    21f4:	str	r4, [sp, #-12]!
    21f8:	str	fp, [sp, #4]
    21fc:	str	lr, [sp, #8]
    2200:	add	fp, sp, #8
    2204:	sub	sp, sp, #68	; 0x44
    2208:	str	r0, [fp, #-48]	; 0xffffffd0
    220c:	str	r1, [fp, #-52]	; 0xffffffcc
    2210:	str	r2, [fp, #-56]	; 0xffffffc8
    2214:	str	r3, [fp, #-60]	; 0xffffffc4
    2218:	mov	r3, #0
    221c:	str	r3, [fp, #-28]	; 0xffffffe4
    2220:	mov	r3, #0
    2224:	str	r3, [fp, #-20]	; 0xffffffec
    2228:	ldr	r3, [fp, #4]
    222c:	mov	r2, #0
    2230:	str	r2, [r3]
    2234:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2238:	ldr	r1, [fp, #-52]	; 0xffffffcc
    223c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2240:	bl	a18 <flatcc_json_parser_constant_start>
    2244:	str	r0, [fp, #-52]	; 0xffffffcc
    2248:	ldr	r2, [fp, #-52]	; 0xffffffcc
    224c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2250:	cmp	r2, r3
    2254:	bne	2260 <flatcc_json_parser_symbolic_uint32+0x6c>
    2258:	ldr	r3, [fp, #-52]	; 0xffffffcc
    225c:	b	23bc <flatcc_json_parser_symbolic_uint32+0x1c8>
    2260:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2264:	str	r3, [fp, #-16]
    2268:	ldr	r3, [fp, #-16]
    226c:	ldr	r4, [r3]
    2270:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2274:	str	r3, [fp, #-24]	; 0xffffffe8
    2278:	sub	r2, fp, #40	; 0x28
    227c:	sub	r3, fp, #44	; 0x2c
    2280:	str	r3, [sp, #4]
    2284:	sub	r3, fp, #36	; 0x24
    2288:	str	r3, [sp]
    228c:	mov	r3, r2
    2290:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2294:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2298:	ldr	r0, [fp, #-48]	; 0xffffffd0
    229c:	blx	r4
    22a0:	str	r0, [fp, #-52]	; 0xffffffcc
    22a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    22a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    22ac:	cmp	r2, r3
    22b0:	bne	22bc <flatcc_json_parser_symbolic_uint32+0xc8>
    22b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22b8:	b	23bc <flatcc_json_parser_symbolic_uint32+0x1c8>
    22bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    22c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    22c4:	cmp	r2, r3
    22c8:	bne	22e8 <flatcc_json_parser_symbolic_uint32+0xf4>
    22cc:	ldr	r3, [fp, #-16]
    22d0:	add	r3, r3, #4
    22d4:	str	r3, [fp, #-16]
    22d8:	ldr	r3, [fp, #-16]
    22dc:	ldr	r3, [r3]
    22e0:	cmp	r3, #0
    22e4:	bne	2268 <flatcc_json_parser_symbolic_uint32+0x74>
    22e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    22ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    22f0:	cmp	r2, r3
    22f4:	bne	2314 <flatcc_json_parser_symbolic_uint32+0x120>
    22f8:	mov	r3, #23
    22fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2300:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2304:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2308:	bl	0 <flatcc_json_parser_set_error>
    230c:	mov	r3, r0
    2310:	b	23bc <flatcc_json_parser_symbolic_uint32+0x1c8>
    2314:	ldr	r3, [fp, #-20]	; 0xffffffec
    2318:	add	r2, r3, #1
    231c:	str	r2, [fp, #-20]	; 0xffffffec
    2320:	cmp	r3, #0
    2324:	beq	2354 <flatcc_json_parser_symbolic_uint32+0x160>
    2328:	ldr	r3, [fp, #-48]	; 0xffffffd0
    232c:	ldr	r3, [r3, #12]
    2330:	cmp	r3, #0
    2334:	beq	2354 <flatcc_json_parser_symbolic_uint32+0x160>
    2338:	mov	r3, #14
    233c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2340:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2344:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2348:	bl	0 <flatcc_json_parser_set_error>
    234c:	mov	r3, r0
    2350:	b	23bc <flatcc_json_parser_symbolic_uint32+0x1c8>
    2354:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2358:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    235c:	sub	r1, fp, #28
    2360:	str	r1, [sp, #8]
    2364:	strd	r2, [sp]
    2368:	mov	r3, r0
    236c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2370:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2374:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2378:	bl	11b0 <flatcc_json_parser_coerce_uint32>
    237c:	mov	r2, r0
    2380:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2384:	cmp	r3, r2
    2388:	bne	2394 <flatcc_json_parser_symbolic_uint32+0x1a0>
    238c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2390:	b	23bc <flatcc_json_parser_symbolic_uint32+0x1c8>
    2394:	ldr	r3, [fp, #4]
    2398:	ldr	r2, [r3]
    239c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    23a0:	add	r2, r2, r3
    23a4:	ldr	r3, [fp, #4]
    23a8:	str	r2, [r3]
    23ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    23b0:	cmp	r3, #0
    23b4:	bne	2260 <flatcc_json_parser_symbolic_uint32+0x6c>
    23b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    23bc:	mov	r0, r3
    23c0:	sub	sp, fp, #8
    23c4:	ldr	r4, [sp]
    23c8:	ldr	fp, [sp, #4]
    23cc:	add	sp, sp, #8
    23d0:	pop	{pc}		; (ldr pc, [sp], #4)

000023d4 <flatcc_json_parser_symbolic_uint16>:
    23d4:	str	r4, [sp, #-12]!
    23d8:	str	fp, [sp, #4]
    23dc:	str	lr, [sp, #8]
    23e0:	add	fp, sp, #8
    23e4:	sub	sp, sp, #68	; 0x44
    23e8:	str	r0, [fp, #-48]	; 0xffffffd0
    23ec:	str	r1, [fp, #-52]	; 0xffffffcc
    23f0:	str	r2, [fp, #-56]	; 0xffffffc8
    23f4:	str	r3, [fp, #-60]	; 0xffffffc4
    23f8:	mov	r3, #0
    23fc:	strh	r3, [fp, #-26]	; 0xffffffe6
    2400:	mov	r3, #0
    2404:	str	r3, [fp, #-20]	; 0xffffffec
    2408:	ldr	r3, [fp, #4]
    240c:	mov	r2, #0
    2410:	strh	r2, [r3]
    2414:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2418:	ldr	r1, [fp, #-52]	; 0xffffffcc
    241c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2420:	bl	a18 <flatcc_json_parser_constant_start>
    2424:	str	r0, [fp, #-52]	; 0xffffffcc
    2428:	ldr	r2, [fp, #-52]	; 0xffffffcc
    242c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2430:	cmp	r2, r3
    2434:	bne	2440 <flatcc_json_parser_symbolic_uint16+0x6c>
    2438:	ldr	r3, [fp, #-52]	; 0xffffffcc
    243c:	b	25a0 <flatcc_json_parser_symbolic_uint16+0x1cc>
    2440:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2444:	str	r3, [fp, #-16]
    2448:	ldr	r3, [fp, #-16]
    244c:	ldr	r4, [r3]
    2450:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2454:	str	r3, [fp, #-24]	; 0xffffffe8
    2458:	sub	r2, fp, #40	; 0x28
    245c:	sub	r3, fp, #44	; 0x2c
    2460:	str	r3, [sp, #4]
    2464:	sub	r3, fp, #36	; 0x24
    2468:	str	r3, [sp]
    246c:	mov	r3, r2
    2470:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2474:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2478:	ldr	r0, [fp, #-48]	; 0xffffffd0
    247c:	blx	r4
    2480:	str	r0, [fp, #-52]	; 0xffffffcc
    2484:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2488:	ldr	r3, [fp, #-56]	; 0xffffffc8
    248c:	cmp	r2, r3
    2490:	bne	249c <flatcc_json_parser_symbolic_uint16+0xc8>
    2494:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2498:	b	25a0 <flatcc_json_parser_symbolic_uint16+0x1cc>
    249c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    24a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    24a4:	cmp	r2, r3
    24a8:	bne	24c8 <flatcc_json_parser_symbolic_uint16+0xf4>
    24ac:	ldr	r3, [fp, #-16]
    24b0:	add	r3, r3, #4
    24b4:	str	r3, [fp, #-16]
    24b8:	ldr	r3, [fp, #-16]
    24bc:	ldr	r3, [r3]
    24c0:	cmp	r3, #0
    24c4:	bne	2448 <flatcc_json_parser_symbolic_uint16+0x74>
    24c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    24cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    24d0:	cmp	r2, r3
    24d4:	bne	24f4 <flatcc_json_parser_symbolic_uint16+0x120>
    24d8:	mov	r3, #23
    24dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    24e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    24e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    24e8:	bl	0 <flatcc_json_parser_set_error>
    24ec:	mov	r3, r0
    24f0:	b	25a0 <flatcc_json_parser_symbolic_uint16+0x1cc>
    24f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    24f8:	add	r2, r3, #1
    24fc:	str	r2, [fp, #-20]	; 0xffffffec
    2500:	cmp	r3, #0
    2504:	beq	2534 <flatcc_json_parser_symbolic_uint16+0x160>
    2508:	ldr	r3, [fp, #-48]	; 0xffffffd0
    250c:	ldr	r3, [r3, #12]
    2510:	cmp	r3, #0
    2514:	beq	2534 <flatcc_json_parser_symbolic_uint16+0x160>
    2518:	mov	r3, #14
    251c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2520:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2524:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2528:	bl	0 <flatcc_json_parser_set_error>
    252c:	mov	r3, r0
    2530:	b	25a0 <flatcc_json_parser_symbolic_uint16+0x1cc>
    2534:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2538:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    253c:	sub	r1, fp, #26
    2540:	str	r1, [sp, #8]
    2544:	strd	r2, [sp]
    2548:	mov	r3, r0
    254c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2550:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2554:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2558:	bl	1250 <flatcc_json_parser_coerce_uint16>
    255c:	mov	r2, r0
    2560:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2564:	cmp	r3, r2
    2568:	bne	2574 <flatcc_json_parser_symbolic_uint16+0x1a0>
    256c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2570:	b	25a0 <flatcc_json_parser_symbolic_uint16+0x1cc>
    2574:	ldr	r3, [fp, #4]
    2578:	ldrh	r2, [r3]
    257c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
    2580:	add	r3, r2, r3
    2584:	uxth	r2, r3
    2588:	ldr	r3, [fp, #4]
    258c:	strh	r2, [r3]
    2590:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2594:	cmp	r3, #0
    2598:	bne	2440 <flatcc_json_parser_symbolic_uint16+0x6c>
    259c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    25a0:	mov	r0, r3
    25a4:	sub	sp, fp, #8
    25a8:	ldr	r4, [sp]
    25ac:	ldr	fp, [sp, #4]
    25b0:	add	sp, sp, #8
    25b4:	pop	{pc}		; (ldr pc, [sp], #4)

000025b8 <flatcc_json_parser_symbolic_uint8>:
    25b8:	str	r4, [sp, #-12]!
    25bc:	str	fp, [sp, #4]
    25c0:	str	lr, [sp, #8]
    25c4:	add	fp, sp, #8
    25c8:	sub	sp, sp, #68	; 0x44
    25cc:	str	r0, [fp, #-48]	; 0xffffffd0
    25d0:	str	r1, [fp, #-52]	; 0xffffffcc
    25d4:	str	r2, [fp, #-56]	; 0xffffffc8
    25d8:	str	r3, [fp, #-60]	; 0xffffffc4
    25dc:	mov	r3, #0
    25e0:	strb	r3, [fp, #-25]	; 0xffffffe7
    25e4:	mov	r3, #0
    25e8:	str	r3, [fp, #-20]	; 0xffffffec
    25ec:	ldr	r3, [fp, #4]
    25f0:	mov	r2, #0
    25f4:	strb	r2, [r3]
    25f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    25fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2600:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2604:	bl	a18 <flatcc_json_parser_constant_start>
    2608:	str	r0, [fp, #-52]	; 0xffffffcc
    260c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2610:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2614:	cmp	r2, r3
    2618:	bne	2624 <flatcc_json_parser_symbolic_uint8+0x6c>
    261c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2620:	b	2784 <flatcc_json_parser_symbolic_uint8+0x1cc>
    2624:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2628:	str	r3, [fp, #-16]
    262c:	ldr	r3, [fp, #-16]
    2630:	ldr	r4, [r3]
    2634:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2638:	str	r3, [fp, #-24]	; 0xffffffe8
    263c:	sub	r2, fp, #40	; 0x28
    2640:	sub	r3, fp, #44	; 0x2c
    2644:	str	r3, [sp, #4]
    2648:	sub	r3, fp, #36	; 0x24
    264c:	str	r3, [sp]
    2650:	mov	r3, r2
    2654:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2658:	ldr	r1, [fp, #-24]	; 0xffffffe8
    265c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2660:	blx	r4
    2664:	str	r0, [fp, #-52]	; 0xffffffcc
    2668:	ldr	r2, [fp, #-52]	; 0xffffffcc
    266c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2670:	cmp	r2, r3
    2674:	bne	2680 <flatcc_json_parser_symbolic_uint8+0xc8>
    2678:	ldr	r3, [fp, #-52]	; 0xffffffcc
    267c:	b	2784 <flatcc_json_parser_symbolic_uint8+0x1cc>
    2680:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2684:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2688:	cmp	r2, r3
    268c:	bne	26ac <flatcc_json_parser_symbolic_uint8+0xf4>
    2690:	ldr	r3, [fp, #-16]
    2694:	add	r3, r3, #4
    2698:	str	r3, [fp, #-16]
    269c:	ldr	r3, [fp, #-16]
    26a0:	ldr	r3, [r3]
    26a4:	cmp	r3, #0
    26a8:	bne	262c <flatcc_json_parser_symbolic_uint8+0x74>
    26ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    26b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    26b4:	cmp	r2, r3
    26b8:	bne	26d8 <flatcc_json_parser_symbolic_uint8+0x120>
    26bc:	mov	r3, #23
    26c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    26c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    26c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    26cc:	bl	0 <flatcc_json_parser_set_error>
    26d0:	mov	r3, r0
    26d4:	b	2784 <flatcc_json_parser_symbolic_uint8+0x1cc>
    26d8:	ldr	r3, [fp, #-20]	; 0xffffffec
    26dc:	add	r2, r3, #1
    26e0:	str	r2, [fp, #-20]	; 0xffffffec
    26e4:	cmp	r3, #0
    26e8:	beq	2718 <flatcc_json_parser_symbolic_uint8+0x160>
    26ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    26f0:	ldr	r3, [r3, #12]
    26f4:	cmp	r3, #0
    26f8:	beq	2718 <flatcc_json_parser_symbolic_uint8+0x160>
    26fc:	mov	r3, #14
    2700:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2704:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2708:	ldr	r0, [fp, #-48]	; 0xffffffd0
    270c:	bl	0 <flatcc_json_parser_set_error>
    2710:	mov	r3, r0
    2714:	b	2784 <flatcc_json_parser_symbolic_uint8+0x1cc>
    2718:	ldr	r0, [fp, #-40]	; 0xffffffd8
    271c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2720:	sub	r1, fp, #25
    2724:	str	r1, [sp, #8]
    2728:	strd	r2, [sp]
    272c:	mov	r3, r0
    2730:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2734:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2738:	ldr	r0, [fp, #-48]	; 0xffffffd0
    273c:	bl	12f0 <flatcc_json_parser_coerce_uint8>
    2740:	mov	r2, r0
    2744:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2748:	cmp	r3, r2
    274c:	bne	2758 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2750:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2754:	b	2784 <flatcc_json_parser_symbolic_uint8+0x1cc>
    2758:	ldr	r3, [fp, #4]
    275c:	ldrb	r2, [r3]
    2760:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    2764:	add	r3, r2, r3
    2768:	uxtb	r2, r3
    276c:	ldr	r3, [fp, #4]
    2770:	strb	r2, [r3]
    2774:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2778:	cmp	r3, #0
    277c:	bne	2624 <flatcc_json_parser_symbolic_uint8+0x6c>
    2780:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2784:	mov	r0, r3
    2788:	sub	sp, fp, #8
    278c:	ldr	r4, [sp]
    2790:	ldr	fp, [sp, #4]
    2794:	add	sp, sp, #8
    2798:	pop	{pc}		; (ldr pc, [sp], #4)

0000279c <flatcc_json_parser_symbolic_int64>:
    279c:	strd	r4, [sp, #-20]!	; 0xffffffec
    27a0:	str	r6, [sp, #8]
    27a4:	str	fp, [sp, #12]
    27a8:	str	lr, [sp, #16]
    27ac:	add	fp, sp, #16
    27b0:	sub	sp, sp, #76	; 0x4c
    27b4:	str	r0, [fp, #-64]	; 0xffffffc0
    27b8:	str	r1, [fp, #-68]	; 0xffffffbc
    27bc:	str	r2, [fp, #-72]	; 0xffffffb8
    27c0:	str	r3, [fp, #-76]	; 0xffffffb4
    27c4:	mov	r2, #0
    27c8:	mov	r3, #0
    27cc:	strd	r2, [fp, #-44]	; 0xffffffd4
    27d0:	mov	r3, #0
    27d4:	str	r3, [fp, #-28]	; 0xffffffe4
    27d8:	ldr	r1, [fp, #4]
    27dc:	mov	r2, #0
    27e0:	mov	r3, #0
    27e4:	strd	r2, [r1]
    27e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    27ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
    27f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    27f4:	bl	a18 <flatcc_json_parser_constant_start>
    27f8:	str	r0, [fp, #-68]	; 0xffffffbc
    27fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
    2800:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2804:	cmp	r2, r3
    2808:	bne	2814 <flatcc_json_parser_symbolic_int64+0x78>
    280c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2810:	b	2974 <flatcc_json_parser_symbolic_int64+0x1d8>
    2814:	ldr	r3, [fp, #-76]	; 0xffffffb4
    2818:	str	r3, [fp, #-24]	; 0xffffffe8
    281c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2820:	ldr	r6, [r3]
    2824:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2828:	str	r3, [fp, #-32]	; 0xffffffe0
    282c:	sub	r2, fp, #56	; 0x38
    2830:	sub	r3, fp, #60	; 0x3c
    2834:	str	r3, [sp, #4]
    2838:	sub	r3, fp, #52	; 0x34
    283c:	str	r3, [sp]
    2840:	mov	r3, r2
    2844:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2848:	ldr	r1, [fp, #-32]	; 0xffffffe0
    284c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    2850:	blx	r6
    2854:	str	r0, [fp, #-68]	; 0xffffffbc
    2858:	ldr	r2, [fp, #-68]	; 0xffffffbc
    285c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2860:	cmp	r2, r3
    2864:	bne	2870 <flatcc_json_parser_symbolic_int64+0xd4>
    2868:	ldr	r3, [fp, #-68]	; 0xffffffbc
    286c:	b	2974 <flatcc_json_parser_symbolic_int64+0x1d8>
    2870:	ldr	r2, [fp, #-68]	; 0xffffffbc
    2874:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2878:	cmp	r2, r3
    287c:	bne	289c <flatcc_json_parser_symbolic_int64+0x100>
    2880:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2884:	add	r3, r3, #4
    2888:	str	r3, [fp, #-24]	; 0xffffffe8
    288c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2890:	ldr	r3, [r3]
    2894:	cmp	r3, #0
    2898:	bne	281c <flatcc_json_parser_symbolic_int64+0x80>
    289c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    28a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    28a4:	cmp	r2, r3
    28a8:	bne	28c8 <flatcc_json_parser_symbolic_int64+0x12c>
    28ac:	mov	r3, #23
    28b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    28b4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    28b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    28bc:	bl	0 <flatcc_json_parser_set_error>
    28c0:	mov	r3, r0
    28c4:	b	2974 <flatcc_json_parser_symbolic_int64+0x1d8>
    28c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    28cc:	add	r2, r3, #1
    28d0:	str	r2, [fp, #-28]	; 0xffffffe4
    28d4:	cmp	r3, #0
    28d8:	beq	2908 <flatcc_json_parser_symbolic_int64+0x16c>
    28dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    28e0:	ldr	r3, [r3, #12]
    28e4:	cmp	r3, #0
    28e8:	beq	2908 <flatcc_json_parser_symbolic_int64+0x16c>
    28ec:	mov	r3, #14
    28f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
    28f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
    28f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
    28fc:	bl	0 <flatcc_json_parser_set_error>
    2900:	mov	r3, r0
    2904:	b	2974 <flatcc_json_parser_symbolic_int64+0x1d8>
    2908:	ldr	r0, [fp, #-56]	; 0xffffffc8
    290c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    2910:	sub	r1, fp, #44	; 0x2c
    2914:	str	r1, [sp, #8]
    2918:	strd	r2, [sp]
    291c:	mov	r3, r0
    2920:	ldr	r2, [fp, #-72]	; 0xffffffb8
    2924:	ldr	r1, [fp, #-68]	; 0xffffffbc
    2928:	ldr	r0, [fp, #-64]	; 0xffffffc0
    292c:	bl	1388 <flatcc_json_parser_coerce_int64>
    2930:	mov	r2, r0
    2934:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2938:	cmp	r3, r2
    293c:	bne	2948 <flatcc_json_parser_symbolic_int64+0x1ac>
    2940:	ldr	r3, [fp, #-72]	; 0xffffffb8
    2944:	b	2974 <flatcc_json_parser_symbolic_int64+0x1d8>
    2948:	ldr	r3, [fp, #4]
    294c:	ldrd	r0, [r3]
    2950:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    2954:	adds	r4, r0, r2
    2958:	adc	r5, r1, r3
    295c:	ldr	r3, [fp, #4]
    2960:	strd	r4, [r3]
    2964:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2968:	cmp	r3, #0
    296c:	bne	2814 <flatcc_json_parser_symbolic_int64+0x78>
    2970:	ldr	r3, [fp, #-68]	; 0xffffffbc
    2974:	mov	r0, r3
    2978:	sub	sp, fp, #16
    297c:	ldrd	r4, [sp]
    2980:	ldr	r6, [sp, #8]
    2984:	ldr	fp, [sp, #12]
    2988:	add	sp, sp, #16
    298c:	pop	{pc}		; (ldr pc, [sp], #4)

00002990 <flatcc_json_parser_symbolic_int32>:
    2990:	str	r4, [sp, #-12]!
    2994:	str	fp, [sp, #4]
    2998:	str	lr, [sp, #8]
    299c:	add	fp, sp, #8
    29a0:	sub	sp, sp, #68	; 0x44
    29a4:	str	r0, [fp, #-48]	; 0xffffffd0
    29a8:	str	r1, [fp, #-52]	; 0xffffffcc
    29ac:	str	r2, [fp, #-56]	; 0xffffffc8
    29b0:	str	r3, [fp, #-60]	; 0xffffffc4
    29b4:	mov	r3, #0
    29b8:	str	r3, [fp, #-28]	; 0xffffffe4
    29bc:	mov	r3, #0
    29c0:	str	r3, [fp, #-20]	; 0xffffffec
    29c4:	ldr	r3, [fp, #4]
    29c8:	mov	r2, #0
    29cc:	str	r2, [r3]
    29d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    29d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    29d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29dc:	bl	a18 <flatcc_json_parser_constant_start>
    29e0:	str	r0, [fp, #-52]	; 0xffffffcc
    29e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    29e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    29ec:	cmp	r2, r3
    29f0:	bne	29fc <flatcc_json_parser_symbolic_int32+0x6c>
    29f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    29f8:	b	2b58 <flatcc_json_parser_symbolic_int32+0x1c8>
    29fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2a00:	str	r3, [fp, #-16]
    2a04:	ldr	r3, [fp, #-16]
    2a08:	ldr	r4, [r3]
    2a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2a10:	str	r3, [fp, #-24]	; 0xffffffe8
    2a14:	sub	r2, fp, #40	; 0x28
    2a18:	sub	r3, fp, #44	; 0x2c
    2a1c:	str	r3, [sp, #4]
    2a20:	sub	r3, fp, #36	; 0x24
    2a24:	str	r3, [sp]
    2a28:	mov	r3, r2
    2a2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a30:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2a34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a38:	blx	r4
    2a3c:	str	r0, [fp, #-52]	; 0xffffffcc
    2a40:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2a44:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2a48:	cmp	r2, r3
    2a4c:	bne	2a58 <flatcc_json_parser_symbolic_int32+0xc8>
    2a50:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2a54:	b	2b58 <flatcc_json_parser_symbolic_int32+0x1c8>
    2a58:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2a60:	cmp	r2, r3
    2a64:	bne	2a84 <flatcc_json_parser_symbolic_int32+0xf4>
    2a68:	ldr	r3, [fp, #-16]
    2a6c:	add	r3, r3, #4
    2a70:	str	r3, [fp, #-16]
    2a74:	ldr	r3, [fp, #-16]
    2a78:	ldr	r3, [r3]
    2a7c:	cmp	r3, #0
    2a80:	bne	2a04 <flatcc_json_parser_symbolic_int32+0x74>
    2a84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a88:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2a8c:	cmp	r2, r3
    2a90:	bne	2ab0 <flatcc_json_parser_symbolic_int32+0x120>
    2a94:	mov	r3, #23
    2a98:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2a9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2aa4:	bl	0 <flatcc_json_parser_set_error>
    2aa8:	mov	r3, r0
    2aac:	b	2b58 <flatcc_json_parser_symbolic_int32+0x1c8>
    2ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
    2ab4:	add	r2, r3, #1
    2ab8:	str	r2, [fp, #-20]	; 0xffffffec
    2abc:	cmp	r3, #0
    2ac0:	beq	2af0 <flatcc_json_parser_symbolic_int32+0x160>
    2ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2ac8:	ldr	r3, [r3, #12]
    2acc:	cmp	r3, #0
    2ad0:	beq	2af0 <flatcc_json_parser_symbolic_int32+0x160>
    2ad4:	mov	r3, #14
    2ad8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2adc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2ae0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ae4:	bl	0 <flatcc_json_parser_set_error>
    2ae8:	mov	r3, r0
    2aec:	b	2b58 <flatcc_json_parser_symbolic_int32+0x1c8>
    2af0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2af4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2af8:	sub	r1, fp, #28
    2afc:	str	r1, [sp, #8]
    2b00:	strd	r2, [sp]
    2b04:	mov	r3, r0
    2b08:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2b0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2b10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b14:	bl	1448 <flatcc_json_parser_coerce_int32>
    2b18:	mov	r2, r0
    2b1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2b20:	cmp	r3, r2
    2b24:	bne	2b30 <flatcc_json_parser_symbolic_int32+0x1a0>
    2b28:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2b2c:	b	2b58 <flatcc_json_parser_symbolic_int32+0x1c8>
    2b30:	ldr	r3, [fp, #4]
    2b34:	ldr	r2, [r3]
    2b38:	ldr	r3, [fp, #-28]	; 0xffffffe4
    2b3c:	add	r2, r2, r3
    2b40:	ldr	r3, [fp, #4]
    2b44:	str	r2, [r3]
    2b48:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2b4c:	cmp	r3, #0
    2b50:	bne	29fc <flatcc_json_parser_symbolic_int32+0x6c>
    2b54:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2b58:	mov	r0, r3
    2b5c:	sub	sp, fp, #8
    2b60:	ldr	r4, [sp]
    2b64:	ldr	fp, [sp, #4]
    2b68:	add	sp, sp, #8
    2b6c:	pop	{pc}		; (ldr pc, [sp], #4)

00002b70 <flatcc_json_parser_symbolic_int16>:
    2b70:	str	r4, [sp, #-12]!
    2b74:	str	fp, [sp, #4]
    2b78:	str	lr, [sp, #8]
    2b7c:	add	fp, sp, #8
    2b80:	sub	sp, sp, #68	; 0x44
    2b84:	str	r0, [fp, #-48]	; 0xffffffd0
    2b88:	str	r1, [fp, #-52]	; 0xffffffcc
    2b8c:	str	r2, [fp, #-56]	; 0xffffffc8
    2b90:	str	r3, [fp, #-60]	; 0xffffffc4
    2b94:	mov	r3, #0
    2b98:	strh	r3, [fp, #-26]	; 0xffffffe6
    2b9c:	mov	r3, #0
    2ba0:	str	r3, [fp, #-20]	; 0xffffffec
    2ba4:	ldr	r3, [fp, #4]
    2ba8:	mov	r2, #0
    2bac:	strh	r2, [r3]
    2bb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2bb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2bb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2bbc:	bl	a18 <flatcc_json_parser_constant_start>
    2bc0:	str	r0, [fp, #-52]	; 0xffffffcc
    2bc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2bc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2bcc:	cmp	r2, r3
    2bd0:	bne	2bdc <flatcc_json_parser_symbolic_int16+0x6c>
    2bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2bd8:	b	2d48 <flatcc_json_parser_symbolic_int16+0x1d8>
    2bdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2be0:	str	r3, [fp, #-16]
    2be4:	ldr	r3, [fp, #-16]
    2be8:	ldr	r4, [r3]
    2bec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2bf0:	str	r3, [fp, #-24]	; 0xffffffe8
    2bf4:	sub	r2, fp, #40	; 0x28
    2bf8:	sub	r3, fp, #44	; 0x2c
    2bfc:	str	r3, [sp, #4]
    2c00:	sub	r3, fp, #36	; 0x24
    2c04:	str	r3, [sp]
    2c08:	mov	r3, r2
    2c0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2c14:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c18:	blx	r4
    2c1c:	str	r0, [fp, #-52]	; 0xffffffcc
    2c20:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2c24:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2c28:	cmp	r2, r3
    2c2c:	bne	2c38 <flatcc_json_parser_symbolic_int16+0xc8>
    2c30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c34:	b	2d48 <flatcc_json_parser_symbolic_int16+0x1d8>
    2c38:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2c40:	cmp	r2, r3
    2c44:	bne	2c64 <flatcc_json_parser_symbolic_int16+0xf4>
    2c48:	ldr	r3, [fp, #-16]
    2c4c:	add	r3, r3, #4
    2c50:	str	r3, [fp, #-16]
    2c54:	ldr	r3, [fp, #-16]
    2c58:	ldr	r3, [r3]
    2c5c:	cmp	r3, #0
    2c60:	bne	2be4 <flatcc_json_parser_symbolic_int16+0x74>
    2c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c68:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2c6c:	cmp	r2, r3
    2c70:	bne	2c90 <flatcc_json_parser_symbolic_int16+0x120>
    2c74:	mov	r3, #23
    2c78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2c7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2c80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c84:	bl	0 <flatcc_json_parser_set_error>
    2c88:	mov	r3, r0
    2c8c:	b	2d48 <flatcc_json_parser_symbolic_int16+0x1d8>
    2c90:	ldr	r3, [fp, #-20]	; 0xffffffec
    2c94:	add	r2, r3, #1
    2c98:	str	r2, [fp, #-20]	; 0xffffffec
    2c9c:	cmp	r3, #0
    2ca0:	beq	2cd0 <flatcc_json_parser_symbolic_int16+0x160>
    2ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2ca8:	ldr	r3, [r3, #12]
    2cac:	cmp	r3, #0
    2cb0:	beq	2cd0 <flatcc_json_parser_symbolic_int16+0x160>
    2cb4:	mov	r3, #14
    2cb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2cbc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2cc4:	bl	0 <flatcc_json_parser_set_error>
    2cc8:	mov	r3, r0
    2ccc:	b	2d48 <flatcc_json_parser_symbolic_int16+0x1d8>
    2cd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2cd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2cd8:	sub	r1, fp, #26
    2cdc:	str	r1, [sp, #8]
    2ce0:	strd	r2, [sp]
    2ce4:	mov	r3, r0
    2ce8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2cec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2cf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2cf4:	bl	1510 <flatcc_json_parser_coerce_int16>
    2cf8:	mov	r2, r0
    2cfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2d00:	cmp	r3, r2
    2d04:	bne	2d10 <flatcc_json_parser_symbolic_int16+0x1a0>
    2d08:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2d0c:	b	2d48 <flatcc_json_parser_symbolic_int16+0x1d8>
    2d10:	ldr	r3, [fp, #4]
    2d14:	ldrsh	r3, [r3]
    2d18:	uxth	r2, r3
    2d1c:	ldrsh	r3, [fp, #-26]	; 0xffffffe6
    2d20:	uxth	r3, r3
    2d24:	add	r3, r2, r3
    2d28:	uxth	r3, r3
    2d2c:	sxth	r2, r3
    2d30:	ldr	r3, [fp, #4]
    2d34:	strh	r2, [r3]
    2d38:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2d3c:	cmp	r3, #0
    2d40:	bne	2bdc <flatcc_json_parser_symbolic_int16+0x6c>
    2d44:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2d48:	mov	r0, r3
    2d4c:	sub	sp, fp, #8
    2d50:	ldr	r4, [sp]
    2d54:	ldr	fp, [sp, #4]
    2d58:	add	sp, sp, #8
    2d5c:	pop	{pc}		; (ldr pc, [sp], #4)

00002d60 <flatcc_json_parser_symbolic_int8>:
    2d60:	str	r4, [sp, #-12]!
    2d64:	str	fp, [sp, #4]
    2d68:	str	lr, [sp, #8]
    2d6c:	add	fp, sp, #8
    2d70:	sub	sp, sp, #68	; 0x44
    2d74:	str	r0, [fp, #-48]	; 0xffffffd0
    2d78:	str	r1, [fp, #-52]	; 0xffffffcc
    2d7c:	str	r2, [fp, #-56]	; 0xffffffc8
    2d80:	str	r3, [fp, #-60]	; 0xffffffc4
    2d84:	mov	r3, #0
    2d88:	strb	r3, [fp, #-25]	; 0xffffffe7
    2d8c:	mov	r3, #0
    2d90:	str	r3, [fp, #-20]	; 0xffffffec
    2d94:	ldr	r3, [fp, #4]
    2d98:	mov	r2, #0
    2d9c:	strb	r2, [r3]
    2da0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2da4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2da8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2dac:	bl	a18 <flatcc_json_parser_constant_start>
    2db0:	str	r0, [fp, #-52]	; 0xffffffcc
    2db4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2db8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2dbc:	cmp	r2, r3
    2dc0:	bne	2dcc <flatcc_json_parser_symbolic_int8+0x6c>
    2dc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2dc8:	b	2f38 <flatcc_json_parser_symbolic_int8+0x1d8>
    2dcc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2dd0:	str	r3, [fp, #-16]
    2dd4:	ldr	r3, [fp, #-16]
    2dd8:	ldr	r4, [r3]
    2ddc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2de0:	str	r3, [fp, #-24]	; 0xffffffe8
    2de4:	sub	r2, fp, #40	; 0x28
    2de8:	sub	r3, fp, #44	; 0x2c
    2dec:	str	r3, [sp, #4]
    2df0:	sub	r3, fp, #36	; 0x24
    2df4:	str	r3, [sp]
    2df8:	mov	r3, r2
    2dfc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e00:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2e04:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e08:	blx	r4
    2e0c:	str	r0, [fp, #-52]	; 0xffffffcc
    2e10:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2e14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2e18:	cmp	r2, r3
    2e1c:	bne	2e28 <flatcc_json_parser_symbolic_int8+0xc8>
    2e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e24:	b	2f38 <flatcc_json_parser_symbolic_int8+0x1d8>
    2e28:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e30:	cmp	r2, r3
    2e34:	bne	2e54 <flatcc_json_parser_symbolic_int8+0xf4>
    2e38:	ldr	r3, [fp, #-16]
    2e3c:	add	r3, r3, #4
    2e40:	str	r3, [fp, #-16]
    2e44:	ldr	r3, [fp, #-16]
    2e48:	ldr	r3, [r3]
    2e4c:	cmp	r3, #0
    2e50:	bne	2dd4 <flatcc_json_parser_symbolic_int8+0x74>
    2e54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e58:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2e5c:	cmp	r2, r3
    2e60:	bne	2e80 <flatcc_json_parser_symbolic_int8+0x120>
    2e64:	mov	r3, #23
    2e68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2e6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e74:	bl	0 <flatcc_json_parser_set_error>
    2e78:	mov	r3, r0
    2e7c:	b	2f38 <flatcc_json_parser_symbolic_int8+0x1d8>
    2e80:	ldr	r3, [fp, #-20]	; 0xffffffec
    2e84:	add	r2, r3, #1
    2e88:	str	r2, [fp, #-20]	; 0xffffffec
    2e8c:	cmp	r3, #0
    2e90:	beq	2ec0 <flatcc_json_parser_symbolic_int8+0x160>
    2e94:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2e98:	ldr	r3, [r3, #12]
    2e9c:	cmp	r3, #0
    2ea0:	beq	2ec0 <flatcc_json_parser_symbolic_int8+0x160>
    2ea4:	mov	r3, #14
    2ea8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2eac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2eb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2eb4:	bl	0 <flatcc_json_parser_set_error>
    2eb8:	mov	r3, r0
    2ebc:	b	2f38 <flatcc_json_parser_symbolic_int8+0x1d8>
    2ec0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2ec4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    2ec8:	sub	r1, fp, #25
    2ecc:	str	r1, [sp, #8]
    2ed0:	strd	r2, [sp]
    2ed4:	mov	r3, r0
    2ed8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2edc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2ee0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ee4:	bl	15dc <flatcc_json_parser_coerce_int8>
    2ee8:	mov	r2, r0
    2eec:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2ef0:	cmp	r3, r2
    2ef4:	bne	2f00 <flatcc_json_parser_symbolic_int8+0x1a0>
    2ef8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2efc:	b	2f38 <flatcc_json_parser_symbolic_int8+0x1d8>
    2f00:	ldr	r3, [fp, #4]
    2f04:	ldrsb	r3, [r3]
    2f08:	uxtb	r2, r3
    2f0c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
    2f10:	uxtb	r3, r3
    2f14:	add	r3, r2, r3
    2f18:	uxtb	r3, r3
    2f1c:	sxtb	r2, r3
    2f20:	ldr	r3, [fp, #4]
    2f24:	strb	r2, [r3]
    2f28:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2f2c:	cmp	r3, #0
    2f30:	bne	2dcc <flatcc_json_parser_symbolic_int8+0x6c>
    2f34:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2f38:	mov	r0, r3
    2f3c:	sub	sp, fp, #8
    2f40:	ldr	r4, [sp]
    2f44:	ldr	fp, [sp, #4]
    2f48:	add	sp, sp, #8
    2f4c:	pop	{pc}		; (ldr pc, [sp], #4)

00002f50 <flatcc_json_parser_symbolic_bool>:
    2f50:	str	r4, [sp, #-12]!
    2f54:	str	fp, [sp, #4]
    2f58:	str	lr, [sp, #8]
    2f5c:	add	fp, sp, #8
    2f60:	sub	sp, sp, #68	; 0x44
    2f64:	str	r0, [fp, #-48]	; 0xffffffd0
    2f68:	str	r1, [fp, #-52]	; 0xffffffcc
    2f6c:	str	r2, [fp, #-56]	; 0xffffffc8
    2f70:	str	r3, [fp, #-60]	; 0xffffffc4
    2f74:	mov	r3, #0
    2f78:	strb	r3, [fp, #-25]	; 0xffffffe7
    2f7c:	mov	r3, #0
    2f80:	str	r3, [fp, #-20]	; 0xffffffec
    2f84:	ldr	r3, [fp, #4]
    2f88:	mov	r2, #0
    2f8c:	strb	r2, [r3]
    2f90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2f94:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2f98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f9c:	bl	a18 <flatcc_json_parser_constant_start>
    2fa0:	str	r0, [fp, #-52]	; 0xffffffcc
    2fa4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    2fa8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    2fac:	cmp	r2, r3
    2fb0:	bne	2fbc <flatcc_json_parser_symbolic_bool+0x6c>
    2fb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2fb8:	b	311c <flatcc_json_parser_symbolic_bool+0x1cc>
    2fbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    2fc0:	str	r3, [fp, #-16]
    2fc4:	ldr	r3, [fp, #-16]
    2fc8:	ldr	r4, [r3]
    2fcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    2fd0:	str	r3, [fp, #-24]	; 0xffffffe8
    2fd4:	sub	r2, fp, #40	; 0x28
    2fd8:	sub	r3, fp, #44	; 0x2c
    2fdc:	str	r3, [sp, #4]
    2fe0:	sub	r3, fp, #36	; 0x24
    2fe4:	str	r3, [sp]
    2fe8:	mov	r3, r2
    2fec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    2ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ff4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ff8:	blx	r4
    2ffc:	str	r0, [fp, #-52]	; 0xffffffcc
    3000:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3004:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3008:	cmp	r2, r3
    300c:	bne	3018 <flatcc_json_parser_symbolic_bool+0xc8>
    3010:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3014:	b	311c <flatcc_json_parser_symbolic_bool+0x1cc>
    3018:	ldr	r2, [fp, #-52]	; 0xffffffcc
    301c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3020:	cmp	r2, r3
    3024:	bne	3044 <flatcc_json_parser_symbolic_bool+0xf4>
    3028:	ldr	r3, [fp, #-16]
    302c:	add	r3, r3, #4
    3030:	str	r3, [fp, #-16]
    3034:	ldr	r3, [fp, #-16]
    3038:	ldr	r3, [r3]
    303c:	cmp	r3, #0
    3040:	bne	2fc4 <flatcc_json_parser_symbolic_bool+0x74>
    3044:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3048:	ldr	r3, [fp, #-52]	; 0xffffffcc
    304c:	cmp	r2, r3
    3050:	bne	3070 <flatcc_json_parser_symbolic_bool+0x120>
    3054:	mov	r3, #23
    3058:	ldr	r2, [fp, #-56]	; 0xffffffc8
    305c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3060:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3064:	bl	0 <flatcc_json_parser_set_error>
    3068:	mov	r3, r0
    306c:	b	311c <flatcc_json_parser_symbolic_bool+0x1cc>
    3070:	ldr	r3, [fp, #-20]	; 0xffffffec
    3074:	add	r2, r3, #1
    3078:	str	r2, [fp, #-20]	; 0xffffffec
    307c:	cmp	r3, #0
    3080:	beq	30b0 <flatcc_json_parser_symbolic_bool+0x160>
    3084:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3088:	ldr	r3, [r3, #12]
    308c:	cmp	r3, #0
    3090:	beq	30b0 <flatcc_json_parser_symbolic_bool+0x160>
    3094:	mov	r3, #14
    3098:	ldr	r2, [fp, #-56]	; 0xffffffc8
    309c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    30a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30a4:	bl	0 <flatcc_json_parser_set_error>
    30a8:	mov	r3, r0
    30ac:	b	311c <flatcc_json_parser_symbolic_bool+0x1cc>
    30b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    30b4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    30b8:	sub	r1, fp, #25
    30bc:	str	r1, [sp, #8]
    30c0:	strd	r2, [sp]
    30c4:	mov	r3, r0
    30c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    30cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    30d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30d4:	bl	1128 <flatcc_json_parser_coerce_bool>
    30d8:	mov	r2, r0
    30dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    30e0:	cmp	r3, r2
    30e4:	bne	30f0 <flatcc_json_parser_symbolic_bool+0x1a0>
    30e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    30ec:	b	311c <flatcc_json_parser_symbolic_bool+0x1cc>
    30f0:	ldr	r3, [fp, #4]
    30f4:	ldrb	r2, [r3]
    30f8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
    30fc:	add	r3, r2, r3
    3100:	uxtb	r2, r3
    3104:	ldr	r3, [fp, #4]
    3108:	strb	r2, [r3]
    310c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3110:	cmp	r3, #0
    3114:	bne	2fbc <flatcc_json_parser_symbolic_bool+0x6c>
    3118:	ldr	r3, [fp, #-52]	; 0xffffffcc
    311c:	mov	r0, r3
    3120:	sub	sp, fp, #8
    3124:	ldr	r4, [sp]
    3128:	ldr	fp, [sp, #4]
    312c:	add	sp, sp, #8
    3130:	pop	{pc}		; (ldr pc, [sp], #4)

00003134 <flatcc_json_parser_symbolic_float>:
    3134:	str	r4, [sp, #-12]!
    3138:	str	fp, [sp, #4]
    313c:	str	lr, [sp, #8]
    3140:	add	fp, sp, #8
    3144:	sub	sp, sp, #68	; 0x44
    3148:	str	r0, [fp, #-48]	; 0xffffffd0
    314c:	str	r1, [fp, #-52]	; 0xffffffcc
    3150:	str	r2, [fp, #-56]	; 0xffffffc8
    3154:	str	r3, [fp, #-60]	; 0xffffffc4
    3158:	mov	r3, #0
    315c:	str	r3, [fp, #-28]	; 0xffffffe4
    3160:	mov	r3, #0
    3164:	str	r3, [fp, #-20]	; 0xffffffec
    3168:	ldr	r3, [fp, #4]
    316c:	mov	r2, #0
    3170:	str	r2, [r3]
    3174:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3178:	ldr	r1, [fp, #-52]	; 0xffffffcc
    317c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3180:	bl	a18 <flatcc_json_parser_constant_start>
    3184:	str	r0, [fp, #-52]	; 0xffffffcc
    3188:	ldr	r2, [fp, #-52]	; 0xffffffcc
    318c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3190:	cmp	r2, r3
    3194:	bne	31a0 <flatcc_json_parser_symbolic_float+0x6c>
    3198:	ldr	r3, [fp, #-52]	; 0xffffffcc
    319c:	b	32fc <flatcc_json_parser_symbolic_float+0x1c8>
    31a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    31a4:	str	r3, [fp, #-16]
    31a8:	ldr	r3, [fp, #-16]
    31ac:	ldr	r4, [r3]
    31b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31b4:	str	r3, [fp, #-24]	; 0xffffffe8
    31b8:	sub	r2, fp, #40	; 0x28
    31bc:	sub	r3, fp, #44	; 0x2c
    31c0:	str	r3, [sp, #4]
    31c4:	sub	r3, fp, #36	; 0x24
    31c8:	str	r3, [sp]
    31cc:	mov	r3, r2
    31d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    31d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    31d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    31dc:	blx	r4
    31e0:	str	r0, [fp, #-52]	; 0xffffffcc
    31e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    31e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    31ec:	cmp	r2, r3
    31f0:	bne	31fc <flatcc_json_parser_symbolic_float+0xc8>
    31f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    31f8:	b	32fc <flatcc_json_parser_symbolic_float+0x1c8>
    31fc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3200:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3204:	cmp	r2, r3
    3208:	bne	3228 <flatcc_json_parser_symbolic_float+0xf4>
    320c:	ldr	r3, [fp, #-16]
    3210:	add	r3, r3, #4
    3214:	str	r3, [fp, #-16]
    3218:	ldr	r3, [fp, #-16]
    321c:	ldr	r3, [r3]
    3220:	cmp	r3, #0
    3224:	bne	31a8 <flatcc_json_parser_symbolic_float+0x74>
    3228:	ldr	r2, [fp, #-24]	; 0xffffffe8
    322c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3230:	cmp	r2, r3
    3234:	bne	3254 <flatcc_json_parser_symbolic_float+0x120>
    3238:	mov	r3, #23
    323c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3240:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3244:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3248:	bl	0 <flatcc_json_parser_set_error>
    324c:	mov	r3, r0
    3250:	b	32fc <flatcc_json_parser_symbolic_float+0x1c8>
    3254:	ldr	r3, [fp, #-20]	; 0xffffffec
    3258:	add	r2, r3, #1
    325c:	str	r2, [fp, #-20]	; 0xffffffec
    3260:	cmp	r3, #0
    3264:	beq	3294 <flatcc_json_parser_symbolic_float+0x160>
    3268:	ldr	r3, [fp, #-48]	; 0xffffffd0
    326c:	ldr	r3, [r3, #12]
    3270:	cmp	r3, #0
    3274:	beq	3294 <flatcc_json_parser_symbolic_float+0x160>
    3278:	mov	r3, #14
    327c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3280:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3284:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3288:	bl	0 <flatcc_json_parser_set_error>
    328c:	mov	r3, r0
    3290:	b	32fc <flatcc_json_parser_symbolic_float+0x1c8>
    3294:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3298:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    329c:	sub	r1, fp, #28
    32a0:	str	r1, [sp, #8]
    32a4:	strd	r2, [sp]
    32a8:	mov	r3, r0
    32ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    32b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    32b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    32b8:	bl	16a0 <flatcc_json_parser_coerce_float>
    32bc:	mov	r2, r0
    32c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    32c4:	cmp	r3, r2
    32c8:	bne	32d4 <flatcc_json_parser_symbolic_float+0x1a0>
    32cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    32d0:	b	32fc <flatcc_json_parser_symbolic_float+0x1c8>
    32d4:	ldr	r3, [fp, #4]
    32d8:	vldr	s14, [r3]
    32dc:	vldr	s15, [fp, #-28]	; 0xffffffe4
    32e0:	vadd.f32	s15, s14, s15
    32e4:	ldr	r3, [fp, #4]
    32e8:	vstr	s15, [r3]
    32ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    32f0:	cmp	r3, #0
    32f4:	bne	31a0 <flatcc_json_parser_symbolic_float+0x6c>
    32f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    32fc:	mov	r0, r3
    3300:	sub	sp, fp, #8
    3304:	ldr	r4, [sp]
    3308:	ldr	fp, [sp, #4]
    330c:	add	sp, sp, #8
    3310:	pop	{pc}		; (ldr pc, [sp], #4)

00003314 <flatcc_json_parser_symbolic_double>:
    3314:	str	r4, [sp, #-12]!
    3318:	str	fp, [sp, #4]
    331c:	str	lr, [sp, #8]
    3320:	add	fp, sp, #8
    3324:	sub	sp, sp, #76	; 0x4c
    3328:	str	r0, [fp, #-56]	; 0xffffffc8
    332c:	str	r1, [fp, #-60]	; 0xffffffc4
    3330:	str	r2, [fp, #-64]	; 0xffffffc0
    3334:	str	r3, [fp, #-68]	; 0xffffffbc
    3338:	mov	r2, #0
    333c:	mov	r3, #0
    3340:	strd	r2, [fp, #-36]	; 0xffffffdc
    3344:	mov	r3, #0
    3348:	str	r3, [fp, #-20]	; 0xffffffec
    334c:	ldr	r1, [fp, #4]
    3350:	mov	r2, #0
    3354:	mov	r3, #0
    3358:	strd	r2, [r1]
    335c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3360:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3364:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3368:	bl	a18 <flatcc_json_parser_constant_start>
    336c:	str	r0, [fp, #-60]	; 0xffffffc4
    3370:	ldr	r2, [fp, #-60]	; 0xffffffc4
    3374:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3378:	cmp	r2, r3
    337c:	bne	3388 <flatcc_json_parser_symbolic_double+0x74>
    3380:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3384:	b	34e4 <flatcc_json_parser_symbolic_double+0x1d0>
    3388:	ldr	r3, [fp, #-68]	; 0xffffffbc
    338c:	str	r3, [fp, #-16]
    3390:	ldr	r3, [fp, #-16]
    3394:	ldr	r4, [r3]
    3398:	ldr	r3, [fp, #-60]	; 0xffffffc4
    339c:	str	r3, [fp, #-24]	; 0xffffffe8
    33a0:	sub	r2, fp, #48	; 0x30
    33a4:	sub	r3, fp, #52	; 0x34
    33a8:	str	r3, [sp, #4]
    33ac:	sub	r3, fp, #44	; 0x2c
    33b0:	str	r3, [sp]
    33b4:	mov	r3, r2
    33b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    33bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    33c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    33c4:	blx	r4
    33c8:	str	r0, [fp, #-60]	; 0xffffffc4
    33cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    33d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    33d4:	cmp	r2, r3
    33d8:	bne	33e4 <flatcc_json_parser_symbolic_double+0xd0>
    33dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    33e0:	b	34e4 <flatcc_json_parser_symbolic_double+0x1d0>
    33e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    33e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    33ec:	cmp	r2, r3
    33f0:	bne	3410 <flatcc_json_parser_symbolic_double+0xfc>
    33f4:	ldr	r3, [fp, #-16]
    33f8:	add	r3, r3, #4
    33fc:	str	r3, [fp, #-16]
    3400:	ldr	r3, [fp, #-16]
    3404:	ldr	r3, [r3]
    3408:	cmp	r3, #0
    340c:	bne	3390 <flatcc_json_parser_symbolic_double+0x7c>
    3410:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3414:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3418:	cmp	r2, r3
    341c:	bne	343c <flatcc_json_parser_symbolic_double+0x128>
    3420:	mov	r3, #23
    3424:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3428:	ldr	r1, [fp, #-60]	; 0xffffffc4
    342c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3430:	bl	0 <flatcc_json_parser_set_error>
    3434:	mov	r3, r0
    3438:	b	34e4 <flatcc_json_parser_symbolic_double+0x1d0>
    343c:	ldr	r3, [fp, #-20]	; 0xffffffec
    3440:	add	r2, r3, #1
    3444:	str	r2, [fp, #-20]	; 0xffffffec
    3448:	cmp	r3, #0
    344c:	beq	347c <flatcc_json_parser_symbolic_double+0x168>
    3450:	ldr	r3, [fp, #-56]	; 0xffffffc8
    3454:	ldr	r3, [r3, #12]
    3458:	cmp	r3, #0
    345c:	beq	347c <flatcc_json_parser_symbolic_double+0x168>
    3460:	mov	r3, #14
    3464:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3468:	ldr	r1, [fp, #-60]	; 0xffffffc4
    346c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3470:	bl	0 <flatcc_json_parser_set_error>
    3474:	mov	r3, r0
    3478:	b	34e4 <flatcc_json_parser_symbolic_double+0x1d0>
    347c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3480:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    3484:	sub	r1, fp, #36	; 0x24
    3488:	str	r1, [sp, #8]
    348c:	strd	r2, [sp]
    3490:	mov	r3, r0
    3494:	ldr	r2, [fp, #-64]	; 0xffffffc0
    3498:	ldr	r1, [fp, #-60]	; 0xffffffc4
    349c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    34a0:	bl	170c <flatcc_json_parser_coerce_double>
    34a4:	mov	r2, r0
    34a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    34ac:	cmp	r3, r2
    34b0:	bne	34bc <flatcc_json_parser_symbolic_double+0x1a8>
    34b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    34b8:	b	34e4 <flatcc_json_parser_symbolic_double+0x1d0>
    34bc:	ldr	r3, [fp, #4]
    34c0:	vldr	d6, [r3]
    34c4:	vldr	d7, [fp, #-36]	; 0xffffffdc
    34c8:	vadd.f64	d7, d6, d7
    34cc:	ldr	r3, [fp, #4]
    34d0:	vstr	d7, [r3]
    34d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34d8:	cmp	r3, #0
    34dc:	bne	3388 <flatcc_json_parser_symbolic_double+0x74>
    34e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    34e4:	mov	r0, r3
    34e8:	sub	sp, fp, #8
    34ec:	ldr	r4, [sp]
    34f0:	ldr	fp, [sp, #4]
    34f4:	add	sp, sp, #8
    34f8:	pop	{pc}		; (ldr pc, [sp], #4)

000034fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    34fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    3500:	strd	r6, [sp, #8]
    3504:	str	fp, [sp, #16]
    3508:	str	lr, [sp, #20]
    350c:	add	fp, sp, #20
    3510:	sub	sp, sp, #48	; 0x30
    3514:	str	r0, [fp, #-48]	; 0xffffffd0
    3518:	str	r1, [fp, #-52]	; 0xffffffcc
    351c:	str	r2, [fp, #-56]	; 0xffffffc8
    3520:	str	r3, [fp, #-60]	; 0xffffffc4
    3524:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3528:	str	r3, [fp, #-24]	; 0xffffffe8
    352c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3530:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3534:	bl	940 <flatcc_json_parser_symbol_part>
    3538:	strd	r0, [fp, #-36]	; 0xffffffdc
    353c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3540:	mov	r0, #0
    3544:	mvn	r1, #255	; 0xff
    3548:	and	r6, r2, r0
    354c:	and	r7, r3, r1
    3550:	add	r3, pc, #360	; 0x168
    3554:	ldrd	r2, [r3]
    3558:	cmp	r7, r3
    355c:	cmpeq	r6, r2
    3560:	bne	35bc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc0>
    3564:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3568:	str	r3, [fp, #-40]	; 0xffffffd8
    356c:	ldr	r3, [fp, #8]
    3570:	str	r3, [sp]
    3574:	mov	r3, #3
    3578:	ldr	r2, [fp, #-56]	; 0xffffffc8
    357c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3580:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3584:	bl	0 <flatcc_json_parser_match_constant>
    3588:	str	r0, [fp, #-52]	; 0xffffffcc
    358c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3590:	ldr	r3, [fp, #-40]	; 0xffffffd8
    3594:	cmp	r2, r3
    3598:	beq	35c4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc8>
    359c:	ldr	r1, [fp, #4]
    35a0:	mov	r2, #17
    35a4:	mov	r3, #0
    35a8:	strd	r2, [r1]
    35ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    35b0:	mov	r2, #0
    35b4:	str	r2, [r3]
    35b8:	b	369c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a0>
    35bc:	nop	{0}
    35c0:	b	35c8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xcc>
    35c4:	nop	{0}
    35c8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    35cc:	add	r1, pc, #244	; 0xf4
    35d0:	ldrd	r0, [r1]
    35d4:	cmp	r3, r1
    35d8:	cmpeq	r2, r0
    35dc:	bne	3694 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x198>
    35e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    35e4:	add	r3, r3, #8
    35e8:	str	r3, [fp, #-52]	; 0xffffffcc
    35ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
    35f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    35f4:	bl	940 <flatcc_json_parser_symbol_part>
    35f8:	strd	r0, [fp, #-36]	; 0xffffffdc
    35fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    3600:	mov	r0, #0
    3604:	mov	r1, #0
    3608:	movt	r1, #65535	; 0xffff
    360c:	and	r4, r2, r0
    3610:	and	r5, r3, r1
    3614:	mov	r2, #0
    3618:	mov	r3, #0
    361c:	movt	r3, #24940	; 0x616c
    3620:	cmp	r5, r3
    3624:	cmpeq	r4, r2
    3628:	bne	368c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x190>
    362c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3630:	str	r3, [fp, #-40]	; 0xffffffd8
    3634:	ldr	r3, [fp, #8]
    3638:	str	r3, [sp]
    363c:	mov	r3, #2
    3640:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3644:	ldr	r1, [fp, #-40]	; 0xffffffd8
    3648:	ldr	r0, [fp, #-48]	; 0xffffffd0
    364c:	bl	0 <flatcc_json_parser_match_constant>
    3650:	str	r0, [fp, #-52]	; 0xffffffcc
    3654:	ldr	r2, [fp, #-52]	; 0xffffffcc
    3658:	ldr	r3, [fp, #-40]	; 0xffffffd8
    365c:	cmp	r2, r3
    3660:	beq	3684 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x188>
    3664:	ldr	r1, [fp, #4]
    3668:	mov	r2, #0
    366c:	mov	r3, #0
    3670:	strd	r2, [r1]
    3674:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3678:	mov	r2, #0
    367c:	str	r2, [r3]
    3680:	b	369c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a0>
    3684:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3688:	b	36a0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a4>
    368c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3690:	b	36a0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a4>
    3694:	ldr	r3, [fp, #-24]	; 0xffffffe8
    3698:	b	36a0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a4>
    369c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    36a0:	mov	r0, r3
    36a4:	sub	sp, fp, #20
    36a8:	ldrd	r4, [sp]
    36ac:	ldrd	r6, [sp, #8]
    36b0:	ldr	fp, [sp, #16]
    36b4:	add	sp, sp, #20
    36b8:	pop	{pc}		; (ldr pc, [sp], #4)
    36bc:	nop	{0}
    36c0:	.word	0x00000000
    36c4:	.word	0x466f6f00
    36c8:	.word	0x75646556
    36cc:	.word	0x496e636c

000036d0 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline>:
    36d0:	str	fp, [sp, #-8]!
    36d4:	str	lr, [sp, #4]
    36d8:	add	fp, sp, #4
    36dc:	sub	sp, sp, #24
    36e0:	str	r0, [fp, #-16]
    36e4:	str	r1, [fp, #-20]	; 0xffffffec
    36e8:	str	r2, [fp, #-24]	; 0xffffffe8
    36ec:	str	r3, [fp, #-28]	; 0xffffffe4
    36f0:	sub	r3, fp, #8
    36f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    36f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    36fc:	ldr	r0, [fp, #-16]
    3700:	bl	a84 <flatcc_json_parser_object_start>
    3704:	str	r0, [fp, #-20]	; 0xffffffec
    3708:	b	3738 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline+0x68>
    370c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3710:	ldr	r1, [fp, #-20]	; 0xffffffec
    3714:	ldr	r0, [fp, #-16]
    3718:	bl	0 <flatcc_json_parser_unmatched_symbol>
    371c:	str	r0, [fp, #-20]	; 0xffffffec
    3720:	sub	r3, fp, #8
    3724:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3728:	ldr	r1, [fp, #-20]	; 0xffffffec
    372c:	ldr	r0, [fp, #-16]
    3730:	bl	b78 <flatcc_json_parser_object_end>
    3734:	str	r0, [fp, #-20]	; 0xffffffec
    3738:	ldr	r3, [fp, #-8]
    373c:	cmp	r3, #0
    3740:	bne	370c <MyGame_OtherNameSpace_Unused_parse_json_struct_inline+0x3c>
    3744:	ldr	r3, [fp, #-20]	; 0xffffffec
    3748:	mov	r0, r3
    374c:	sub	sp, fp, #4
    3750:	ldr	fp, [sp]
    3754:	add	sp, sp, #4
    3758:	pop	{pc}		; (ldr pc, [sp], #4)

0000375c <MyGame_OtherNameSpace_Unused_parse_json_struct>:
    375c:	str	fp, [sp, #-8]!
    3760:	str	lr, [sp, #4]
    3764:	add	fp, sp, #4
    3768:	sub	sp, sp, #24
    376c:	str	r0, [fp, #-16]
    3770:	str	r1, [fp, #-20]	; 0xffffffec
    3774:	str	r2, [fp, #-24]	; 0xffffffe8
    3778:	str	r3, [fp, #-28]	; 0xffffffe4
    377c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    3780:	mov	r2, #0
    3784:	str	r2, [r3]
    3788:	ldr	r3, [fp, #-16]
    378c:	ldr	r3, [r3]
    3790:	mov	r2, #1
    3794:	mov	r1, #0
    3798:	mov	r0, r3
    379c:	bl	0 <flatcc_builder_start_struct>
    37a0:	str	r0, [fp, #-8]
    37a4:	ldr	r3, [fp, #-8]
    37a8:	cmp	r3, #0
    37ac:	beq	380c <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb0>
    37b0:	ldr	r3, [fp, #-8]
    37b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    37b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    37bc:	ldr	r0, [fp, #-16]
    37c0:	bl	36d0 <MyGame_OtherNameSpace_Unused_parse_json_struct_inline>
    37c4:	str	r0, [fp, #-20]	; 0xffffffec
    37c8:	ldr	r2, [fp, #-20]	; 0xffffffec
    37cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    37d0:	cmp	r2, r3
    37d4:	beq	3814 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb8>
    37d8:	ldr	r3, [fp, #-16]
    37dc:	ldr	r3, [r3]
    37e0:	mov	r0, r3
    37e4:	bl	0 <flatcc_builder_end_struct>
    37e8:	mov	r2, r0
    37ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    37f0:	str	r2, [r3]
    37f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    37f8:	ldr	r3, [r3]
    37fc:	cmp	r3, #0
    3800:	beq	3814 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xb8>
    3804:	ldr	r3, [fp, #-20]	; 0xffffffec
    3808:	b	3830 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xd4>
    380c:	nop	{0}
    3810:	b	3818 <MyGame_OtherNameSpace_Unused_parse_json_struct+0xbc>
    3814:	nop	{0}
    3818:	mov	r3, #33	; 0x21
    381c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3820:	ldr	r1, [fp, #-20]	; 0xffffffec
    3824:	ldr	r0, [fp, #-16]
    3828:	bl	0 <flatcc_json_parser_set_error>
    382c:	mov	r3, r0
    3830:	mov	r0, r3
    3834:	sub	sp, fp, #4
    3838:	ldr	fp, [sp]
    383c:	add	sp, sp, #4
    3840:	pop	{pc}		; (ldr pc, [sp], #4)

00003844 <include_test2_local_json_parser_enum>:
    3844:	push	{fp}		; (str fp, [sp, #-4]!)
    3848:	add	fp, sp, #0
    384c:	sub	sp, sp, #20
    3850:	str	r0, [fp, #-8]
    3854:	str	r1, [fp, #-12]
    3858:	str	r2, [fp, #-16]
    385c:	str	r3, [fp, #-20]	; 0xffffffec
    3860:	ldr	r3, [fp, #-12]
    3864:	mov	r0, r3
    3868:	add	sp, fp, #0
    386c:	pop	{fp}		; (ldr fp, [sp], #4)
    3870:	bx	lr

00003874 <include_test2_local_MyGame_Example_json_parser_enum>:
    3874:	push	{fp}		; (str fp, [sp, #-4]!)
    3878:	add	fp, sp, #0
    387c:	sub	sp, sp, #20
    3880:	str	r0, [fp, #-8]
    3884:	str	r1, [fp, #-12]
    3888:	str	r2, [fp, #-16]
    388c:	str	r3, [fp, #-20]	; 0xffffffec
    3890:	ldr	r3, [fp, #-12]
    3894:	mov	r0, r3
    3898:	add	sp, fp, #0
    389c:	pop	{fp}		; (ldr fp, [sp], #4)
    38a0:	bx	lr

000038a4 <include_test2_local_MyGame_Example2_json_parser_enum>:
    38a4:	push	{fp}		; (str fp, [sp, #-4]!)
    38a8:	add	fp, sp, #0
    38ac:	sub	sp, sp, #20
    38b0:	str	r0, [fp, #-8]
    38b4:	str	r1, [fp, #-12]
    38b8:	str	r2, [fp, #-16]
    38bc:	str	r3, [fp, #-20]	; 0xffffffec
    38c0:	ldr	r3, [fp, #-12]
    38c4:	mov	r0, r3
    38c8:	add	sp, fp, #0
    38cc:	pop	{fp}		; (ldr fp, [sp], #4)
    38d0:	bx	lr

000038d4 <include_test2_local_MyGame_json_parser_enum>:
    38d4:	push	{fp}		; (str fp, [sp, #-4]!)
    38d8:	add	fp, sp, #0
    38dc:	sub	sp, sp, #20
    38e0:	str	r0, [fp, #-8]
    38e4:	str	r1, [fp, #-12]
    38e8:	str	r2, [fp, #-16]
    38ec:	str	r3, [fp, #-20]	; 0xffffffec
    38f0:	ldr	r3, [fp, #-12]
    38f4:	mov	r0, r3
    38f8:	add	sp, fp, #0
    38fc:	pop	{fp}		; (ldr fp, [sp], #4)
    3900:	bx	lr

00003904 <include_test2_local_Fantasy_json_parser_enum>:
    3904:	push	{fp}		; (str fp, [sp, #-4]!)
    3908:	add	fp, sp, #0
    390c:	sub	sp, sp, #20
    3910:	str	r0, [fp, #-8]
    3914:	str	r1, [fp, #-12]
    3918:	str	r2, [fp, #-16]
    391c:	str	r3, [fp, #-20]	; 0xffffffec
    3920:	ldr	r3, [fp, #-12]
    3924:	mov	r0, r3
    3928:	add	sp, fp, #0
    392c:	pop	{fp}		; (ldr fp, [sp], #4)
    3930:	bx	lr

00003934 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum>:
    3934:	strd	r4, [sp, #-16]!
    3938:	str	fp, [sp, #8]
    393c:	str	lr, [sp, #12]
    3940:	add	fp, sp, #12
    3944:	sub	sp, sp, #48	; 0x30
    3948:	str	r0, [fp, #-40]	; 0xffffffd8
    394c:	str	r1, [fp, #-44]	; 0xffffffd4
    3950:	str	r2, [fp, #-48]	; 0xffffffd0
    3954:	str	r3, [fp, #-52]	; 0xffffffcc
    3958:	ldr	r3, [fp, #-44]	; 0xffffffd4
    395c:	str	r3, [fp, #-16]
    3960:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3964:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3968:	bl	940 <flatcc_json_parser_symbol_part>
    396c:	strd	r0, [fp, #-28]	; 0xffffffe4
    3970:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3974:	add	r1, pc, #220	; 0xdc
    3978:	ldrd	r0, [r1]
    397c:	cmp	r3, r1
    3980:	cmpeq	r2, r0
    3984:	bne	3a3c <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x108>
    3988:	ldr	r3, [fp, #-44]	; 0xffffffd4
    398c:	add	r3, r3, #8
    3990:	str	r3, [fp, #-44]	; 0xffffffd4
    3994:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3998:	ldr	r0, [fp, #-44]	; 0xffffffd4
    399c:	bl	940 <flatcc_json_parser_symbol_part>
    39a0:	strd	r0, [fp, #-28]	; 0xffffffe4
    39a4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    39a8:	mov	r0, #0
    39ac:	mvn	r1, #255	; 0xff
    39b0:	and	r4, r2, r0
    39b4:	and	r5, r3, r1
    39b8:	add	r3, pc, #160	; 0xa0
    39bc:	ldrd	r2, [r3]
    39c0:	cmp	r5, r3
    39c4:	cmpeq	r4, r2
    39c8:	bne	3a34 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
    39cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    39d0:	str	r3, [fp, #-32]	; 0xffffffe0
    39d4:	mov	r3, #3
    39d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    39dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    39e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    39e4:	bl	994 <flatcc_json_parser_match_scope>
    39e8:	str	r0, [fp, #-44]	; 0xffffffd4
    39ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
    39f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    39f4:	cmp	r2, r3
    39f8:	beq	3a2c <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
    39fc:	ldr	r3, [fp, #8]
    3a00:	str	r3, [sp, #4]
    3a04:	ldr	r3, [fp, #4]
    3a08:	str	r3, [sp]
    3a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3a10:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3a14:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3a18:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3a1c:	bl	34fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3a20:	str	r0, [fp, #-44]	; 0xffffffd4
    3a24:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3a28:	b	3a40 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
    3a2c:	ldr	r3, [fp, #-16]
    3a30:	b	3a40 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
    3a34:	ldr	r3, [fp, #-16]
    3a38:	b	3a40 <include_test2_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
    3a3c:	ldr	r3, [fp, #-16]
    3a40:	mov	r0, r3
    3a44:	sub	sp, fp, #12
    3a48:	ldrd	r4, [sp]
    3a4c:	ldr	fp, [sp, #8]
    3a50:	add	sp, sp, #12
    3a54:	pop	{pc}		; (ldr pc, [sp], #4)
    3a58:	.word	0x496e636c
    3a5c:	.word	0x46726f6d
    3a60:	.word	0x00000000
    3a64:	.word	0x75646500

00003a68 <include_test2_global_json_parser_enum>:
    3a68:	strd	r4, [sp, #-16]!
    3a6c:	str	fp, [sp, #8]
    3a70:	str	lr, [sp, #12]
    3a74:	add	fp, sp, #12
    3a78:	sub	sp, sp, #48	; 0x30
    3a7c:	str	r0, [fp, #-40]	; 0xffffffd8
    3a80:	str	r1, [fp, #-44]	; 0xffffffd4
    3a84:	str	r2, [fp, #-48]	; 0xffffffd0
    3a88:	str	r3, [fp, #-52]	; 0xffffffcc
    3a8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3a90:	str	r3, [fp, #-16]
    3a94:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3a9c:	bl	940 <flatcc_json_parser_symbol_part>
    3aa0:	strd	r0, [fp, #-28]	; 0xffffffe4
    3aa4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3aa8:	add	r1, pc, #392	; 0x188
    3aac:	ldrd	r0, [r1]
    3ab0:	cmp	r3, r1
    3ab4:	cmpeq	r2, r0
    3ab8:	bne	3c1c <include_test2_global_json_parser_enum+0x1b4>
    3abc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3ac0:	add	r3, r3, #8
    3ac4:	str	r3, [fp, #-44]	; 0xffffffd4
    3ac8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3ad0:	bl	940 <flatcc_json_parser_symbol_part>
    3ad4:	strd	r0, [fp, #-28]	; 0xffffffe4
    3ad8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3adc:	add	r1, pc, #348	; 0x15c
    3ae0:	ldrd	r0, [r1]
    3ae4:	cmp	r3, r1
    3ae8:	cmpeq	r2, r0
    3aec:	bne	3c14 <include_test2_global_json_parser_enum+0x1ac>
    3af0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3af4:	add	r3, r3, #8
    3af8:	str	r3, [fp, #-44]	; 0xffffffd4
    3afc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3b04:	bl	940 <flatcc_json_parser_symbol_part>
    3b08:	strd	r0, [fp, #-28]	; 0xffffffe4
    3b0c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3b10:	add	r1, pc, #304	; 0x130
    3b14:	ldrd	r0, [r1]
    3b18:	cmp	r3, r1
    3b1c:	cmpeq	r2, r0
    3b20:	bne	3c0c <include_test2_global_json_parser_enum+0x1a4>
    3b24:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3b28:	add	r3, r3, #8
    3b2c:	str	r3, [fp, #-44]	; 0xffffffd4
    3b30:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3b38:	bl	940 <flatcc_json_parser_symbol_part>
    3b3c:	strd	r0, [fp, #-28]	; 0xffffffe4
    3b40:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3b44:	add	r1, pc, #260	; 0x104
    3b48:	ldrd	r0, [r1]
    3b4c:	cmp	r3, r1
    3b50:	cmpeq	r2, r0
    3b54:	bne	3c04 <include_test2_global_json_parser_enum+0x19c>
    3b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3b5c:	add	r3, r3, #8
    3b60:	str	r3, [fp, #-44]	; 0xffffffd4
    3b64:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3b68:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3b6c:	bl	940 <flatcc_json_parser_symbol_part>
    3b70:	strd	r0, [fp, #-28]	; 0xffffffe4
    3b74:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3b78:	mov	r0, #0
    3b7c:	mov	r1, #-16777216	; 0xff000000
    3b80:	and	r4, r2, r0
    3b84:	and	r5, r3, r1
    3b88:	cmp	r5, #1694498816	; 0x65000000
    3b8c:	cmpeq	r4, #0
    3b90:	bne	3bfc <include_test2_global_json_parser_enum+0x194>
    3b94:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3b98:	str	r3, [fp, #-32]	; 0xffffffe0
    3b9c:	mov	r3, #1
    3ba0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3ba4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3bac:	bl	994 <flatcc_json_parser_match_scope>
    3bb0:	str	r0, [fp, #-44]	; 0xffffffd4
    3bb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3bbc:	cmp	r2, r3
    3bc0:	beq	3bf4 <include_test2_global_json_parser_enum+0x18c>
    3bc4:	ldr	r3, [fp, #8]
    3bc8:	str	r3, [sp, #4]
    3bcc:	ldr	r3, [fp, #4]
    3bd0:	str	r3, [sp]
    3bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3bd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3be4:	bl	34fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3be8:	str	r0, [fp, #-44]	; 0xffffffd4
    3bec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3bf0:	b	3c20 <include_test2_global_json_parser_enum+0x1b8>
    3bf4:	ldr	r3, [fp, #-16]
    3bf8:	b	3c20 <include_test2_global_json_parser_enum+0x1b8>
    3bfc:	ldr	r3, [fp, #-16]
    3c00:	b	3c20 <include_test2_global_json_parser_enum+0x1b8>
    3c04:	ldr	r3, [fp, #-16]
    3c08:	b	3c20 <include_test2_global_json_parser_enum+0x1b8>
    3c0c:	ldr	r3, [fp, #-16]
    3c10:	b	3c20 <include_test2_global_json_parser_enum+0x1b8>
    3c14:	ldr	r3, [fp, #-16]
    3c18:	b	3c20 <include_test2_global_json_parser_enum+0x1b8>
    3c1c:	ldr	r3, [fp, #-16]
    3c20:	mov	r0, r3
    3c24:	sub	sp, fp, #12
    3c28:	ldrd	r4, [sp]
    3c2c:	ldr	fp, [sp, #8]
    3c30:	add	sp, sp, #12
    3c34:	pop	{pc}		; (ldr pc, [sp], #4)
    3c38:	.word	0x6d652e4f
    3c3c:	.word	0x4d794761
    3c40:	.word	0x4e616d65
    3c44:	.word	0x74686572
    3c48:	.word	0x652e4672
    3c4c:	.word	0x53706163
    3c50:	.word	0x636c7564
    3c54:	.word	0x6f6d496e

00003c58 <include_test1_local_json_parser_enum>:
    3c58:	push	{fp}		; (str fp, [sp, #-4]!)
    3c5c:	add	fp, sp, #0
    3c60:	sub	sp, sp, #20
    3c64:	str	r0, [fp, #-8]
    3c68:	str	r1, [fp, #-12]
    3c6c:	str	r2, [fp, #-16]
    3c70:	str	r3, [fp, #-20]	; 0xffffffec
    3c74:	ldr	r3, [fp, #-12]
    3c78:	mov	r0, r3
    3c7c:	add	sp, fp, #0
    3c80:	pop	{fp}		; (ldr fp, [sp], #4)
    3c84:	bx	lr

00003c88 <include_test1_local_MyGame_Example_json_parser_enum>:
    3c88:	push	{fp}		; (str fp, [sp, #-4]!)
    3c8c:	add	fp, sp, #0
    3c90:	sub	sp, sp, #20
    3c94:	str	r0, [fp, #-8]
    3c98:	str	r1, [fp, #-12]
    3c9c:	str	r2, [fp, #-16]
    3ca0:	str	r3, [fp, #-20]	; 0xffffffec
    3ca4:	ldr	r3, [fp, #-12]
    3ca8:	mov	r0, r3
    3cac:	add	sp, fp, #0
    3cb0:	pop	{fp}		; (ldr fp, [sp], #4)
    3cb4:	bx	lr

00003cb8 <include_test1_local_MyGame_Example2_json_parser_enum>:
    3cb8:	push	{fp}		; (str fp, [sp, #-4]!)
    3cbc:	add	fp, sp, #0
    3cc0:	sub	sp, sp, #20
    3cc4:	str	r0, [fp, #-8]
    3cc8:	str	r1, [fp, #-12]
    3ccc:	str	r2, [fp, #-16]
    3cd0:	str	r3, [fp, #-20]	; 0xffffffec
    3cd4:	ldr	r3, [fp, #-12]
    3cd8:	mov	r0, r3
    3cdc:	add	sp, fp, #0
    3ce0:	pop	{fp}		; (ldr fp, [sp], #4)
    3ce4:	bx	lr

00003ce8 <include_test1_local_MyGame_json_parser_enum>:
    3ce8:	push	{fp}		; (str fp, [sp, #-4]!)
    3cec:	add	fp, sp, #0
    3cf0:	sub	sp, sp, #20
    3cf4:	str	r0, [fp, #-8]
    3cf8:	str	r1, [fp, #-12]
    3cfc:	str	r2, [fp, #-16]
    3d00:	str	r3, [fp, #-20]	; 0xffffffec
    3d04:	ldr	r3, [fp, #-12]
    3d08:	mov	r0, r3
    3d0c:	add	sp, fp, #0
    3d10:	pop	{fp}		; (ldr fp, [sp], #4)
    3d14:	bx	lr

00003d18 <include_test1_local_Fantasy_json_parser_enum>:
    3d18:	push	{fp}		; (str fp, [sp, #-4]!)
    3d1c:	add	fp, sp, #0
    3d20:	sub	sp, sp, #20
    3d24:	str	r0, [fp, #-8]
    3d28:	str	r1, [fp, #-12]
    3d2c:	str	r2, [fp, #-16]
    3d30:	str	r3, [fp, #-20]	; 0xffffffec
    3d34:	ldr	r3, [fp, #-12]
    3d38:	mov	r0, r3
    3d3c:	add	sp, fp, #0
    3d40:	pop	{fp}		; (ldr fp, [sp], #4)
    3d44:	bx	lr

00003d48 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum>:
    3d48:	strd	r4, [sp, #-16]!
    3d4c:	str	fp, [sp, #8]
    3d50:	str	lr, [sp, #12]
    3d54:	add	fp, sp, #12
    3d58:	sub	sp, sp, #48	; 0x30
    3d5c:	str	r0, [fp, #-40]	; 0xffffffd8
    3d60:	str	r1, [fp, #-44]	; 0xffffffd4
    3d64:	str	r2, [fp, #-48]	; 0xffffffd0
    3d68:	str	r3, [fp, #-52]	; 0xffffffcc
    3d6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3d70:	str	r3, [fp, #-16]
    3d74:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3d7c:	bl	940 <flatcc_json_parser_symbol_part>
    3d80:	strd	r0, [fp, #-28]	; 0xffffffe4
    3d84:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3d88:	add	r1, pc, #224	; 0xe0
    3d8c:	ldrd	r0, [r1]
    3d90:	cmp	r3, r1
    3d94:	cmpeq	r2, r0
    3d98:	bne	3e50 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x108>
    3d9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3da0:	add	r3, r3, #8
    3da4:	str	r3, [fp, #-44]	; 0xffffffd4
    3da8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3db0:	bl	940 <flatcc_json_parser_symbol_part>
    3db4:	strd	r0, [fp, #-28]	; 0xffffffe4
    3db8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3dbc:	mov	r0, #0
    3dc0:	mvn	r1, #255	; 0xff
    3dc4:	and	r4, r2, r0
    3dc8:	and	r5, r3, r1
    3dcc:	add	r3, pc, #164	; 0xa4
    3dd0:	ldrd	r2, [r3]
    3dd4:	cmp	r5, r3
    3dd8:	cmpeq	r4, r2
    3ddc:	bne	3e48 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
    3de0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3de4:	str	r3, [fp, #-32]	; 0xffffffe0
    3de8:	mov	r3, #3
    3dec:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3df0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3df4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3df8:	bl	994 <flatcc_json_parser_match_scope>
    3dfc:	str	r0, [fp, #-44]	; 0xffffffd4
    3e00:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3e08:	cmp	r2, r3
    3e0c:	beq	3e40 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
    3e10:	ldr	r3, [fp, #8]
    3e14:	str	r3, [sp, #4]
    3e18:	ldr	r3, [fp, #4]
    3e1c:	str	r3, [sp]
    3e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3e24:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3e28:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3e2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3e30:	bl	34fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    3e34:	str	r0, [fp, #-44]	; 0xffffffd4
    3e38:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3e3c:	b	3e54 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
    3e40:	ldr	r3, [fp, #-16]
    3e44:	b	3e54 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
    3e48:	ldr	r3, [fp, #-16]
    3e4c:	b	3e54 <include_test1_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
    3e50:	ldr	r3, [fp, #-16]
    3e54:	mov	r0, r3
    3e58:	sub	sp, fp, #12
    3e5c:	ldrd	r4, [sp]
    3e60:	ldr	fp, [sp, #8]
    3e64:	add	sp, sp, #12
    3e68:	pop	{pc}		; (ldr pc, [sp], #4)
    3e6c:	nop	{0}
    3e70:	.word	0x496e636c
    3e74:	.word	0x46726f6d
    3e78:	.word	0x00000000
    3e7c:	.word	0x75646500

00003e80 <include_test1_global_json_parser_enum>:
    3e80:	strd	r4, [sp, #-16]!
    3e84:	str	fp, [sp, #8]
    3e88:	str	lr, [sp, #12]
    3e8c:	add	fp, sp, #12
    3e90:	sub	sp, sp, #48	; 0x30
    3e94:	str	r0, [fp, #-40]	; 0xffffffd8
    3e98:	str	r1, [fp, #-44]	; 0xffffffd4
    3e9c:	str	r2, [fp, #-48]	; 0xffffffd0
    3ea0:	str	r3, [fp, #-52]	; 0xffffffcc
    3ea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3ea8:	str	r3, [fp, #-16]
    3eac:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3eb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3eb4:	bl	940 <flatcc_json_parser_symbol_part>
    3eb8:	strd	r0, [fp, #-28]	; 0xffffffe4
    3ebc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3ec0:	add	r1, pc, #392	; 0x188
    3ec4:	ldrd	r0, [r1]
    3ec8:	cmp	r3, r1
    3ecc:	cmpeq	r2, r0
    3ed0:	bne	4034 <include_test1_global_json_parser_enum+0x1b4>
    3ed4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3ed8:	add	r3, r3, #8
    3edc:	str	r3, [fp, #-44]	; 0xffffffd4
    3ee0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3ee8:	bl	940 <flatcc_json_parser_symbol_part>
    3eec:	strd	r0, [fp, #-28]	; 0xffffffe4
    3ef0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3ef4:	add	r1, pc, #348	; 0x15c
    3ef8:	ldrd	r0, [r1]
    3efc:	cmp	r3, r1
    3f00:	cmpeq	r2, r0
    3f04:	bne	402c <include_test1_global_json_parser_enum+0x1ac>
    3f08:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3f0c:	add	r3, r3, #8
    3f10:	str	r3, [fp, #-44]	; 0xffffffd4
    3f14:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3f1c:	bl	940 <flatcc_json_parser_symbol_part>
    3f20:	strd	r0, [fp, #-28]	; 0xffffffe4
    3f24:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3f28:	add	r1, pc, #304	; 0x130
    3f2c:	ldrd	r0, [r1]
    3f30:	cmp	r3, r1
    3f34:	cmpeq	r2, r0
    3f38:	bne	4024 <include_test1_global_json_parser_enum+0x1a4>
    3f3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3f40:	add	r3, r3, #8
    3f44:	str	r3, [fp, #-44]	; 0xffffffd4
    3f48:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3f50:	bl	940 <flatcc_json_parser_symbol_part>
    3f54:	strd	r0, [fp, #-28]	; 0xffffffe4
    3f58:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3f5c:	add	r1, pc, #260	; 0x104
    3f60:	ldrd	r0, [r1]
    3f64:	cmp	r3, r1
    3f68:	cmpeq	r2, r0
    3f6c:	bne	401c <include_test1_global_json_parser_enum+0x19c>
    3f70:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3f74:	add	r3, r3, #8
    3f78:	str	r3, [fp, #-44]	; 0xffffffd4
    3f7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3f80:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3f84:	bl	940 <flatcc_json_parser_symbol_part>
    3f88:	strd	r0, [fp, #-28]	; 0xffffffe4
    3f8c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    3f90:	mov	r0, #0
    3f94:	mov	r1, #-16777216	; 0xff000000
    3f98:	and	r4, r2, r0
    3f9c:	and	r5, r3, r1
    3fa0:	cmp	r5, #1694498816	; 0x65000000
    3fa4:	cmpeq	r4, #0
    3fa8:	bne	4014 <include_test1_global_json_parser_enum+0x194>
    3fac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    3fb0:	str	r3, [fp, #-32]	; 0xffffffe0
    3fb4:	mov	r3, #1
    3fb8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3fc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3fc4:	bl	994 <flatcc_json_parser_match_scope>
    3fc8:	str	r0, [fp, #-44]	; 0xffffffd4
    3fcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    3fd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    3fd4:	cmp	r2, r3
    3fd8:	beq	400c <include_test1_global_json_parser_enum+0x18c>
    3fdc:	ldr	r3, [fp, #8]
    3fe0:	str	r3, [sp, #4]
    3fe4:	ldr	r3, [fp, #4]
    3fe8:	str	r3, [sp]
    3fec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3ff0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3ff4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3ff8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3ffc:	bl	34fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    4000:	str	r0, [fp, #-44]	; 0xffffffd4
    4004:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4008:	b	4038 <include_test1_global_json_parser_enum+0x1b8>
    400c:	ldr	r3, [fp, #-16]
    4010:	b	4038 <include_test1_global_json_parser_enum+0x1b8>
    4014:	ldr	r3, [fp, #-16]
    4018:	b	4038 <include_test1_global_json_parser_enum+0x1b8>
    401c:	ldr	r3, [fp, #-16]
    4020:	b	4038 <include_test1_global_json_parser_enum+0x1b8>
    4024:	ldr	r3, [fp, #-16]
    4028:	b	4038 <include_test1_global_json_parser_enum+0x1b8>
    402c:	ldr	r3, [fp, #-16]
    4030:	b	4038 <include_test1_global_json_parser_enum+0x1b8>
    4034:	ldr	r3, [fp, #-16]
    4038:	mov	r0, r3
    403c:	sub	sp, fp, #12
    4040:	ldrd	r4, [sp]
    4044:	ldr	fp, [sp, #8]
    4048:	add	sp, sp, #12
    404c:	pop	{pc}		; (ldr pc, [sp], #4)
    4050:	.word	0x6d652e4f
    4054:	.word	0x4d794761
    4058:	.word	0x4e616d65
    405c:	.word	0x74686572
    4060:	.word	0x652e4672
    4064:	.word	0x53706163
    4068:	.word	0x636c7564
    406c:	.word	0x6f6d496e

00004070 <attributes_local_json_parser_enum>:
    4070:	push	{fp}		; (str fp, [sp, #-4]!)
    4074:	add	fp, sp, #0
    4078:	sub	sp, sp, #20
    407c:	str	r0, [fp, #-8]
    4080:	str	r1, [fp, #-12]
    4084:	str	r2, [fp, #-16]
    4088:	str	r3, [fp, #-20]	; 0xffffffec
    408c:	ldr	r3, [fp, #-12]
    4090:	mov	r0, r3
    4094:	add	sp, fp, #0
    4098:	pop	{fp}		; (ldr fp, [sp], #4)
    409c:	bx	lr

000040a0 <attributes_local_MyGame_Example_json_parser_enum>:
    40a0:	push	{fp}		; (str fp, [sp, #-4]!)
    40a4:	add	fp, sp, #0
    40a8:	sub	sp, sp, #20
    40ac:	str	r0, [fp, #-8]
    40b0:	str	r1, [fp, #-12]
    40b4:	str	r2, [fp, #-16]
    40b8:	str	r3, [fp, #-20]	; 0xffffffec
    40bc:	ldr	r3, [fp, #-12]
    40c0:	mov	r0, r3
    40c4:	add	sp, fp, #0
    40c8:	pop	{fp}		; (ldr fp, [sp], #4)
    40cc:	bx	lr

000040d0 <attributes_local_MyGame_Example2_json_parser_enum>:
    40d0:	push	{fp}		; (str fp, [sp, #-4]!)
    40d4:	add	fp, sp, #0
    40d8:	sub	sp, sp, #20
    40dc:	str	r0, [fp, #-8]
    40e0:	str	r1, [fp, #-12]
    40e4:	str	r2, [fp, #-16]
    40e8:	str	r3, [fp, #-20]	; 0xffffffec
    40ec:	ldr	r3, [fp, #-12]
    40f0:	mov	r0, r3
    40f4:	add	sp, fp, #0
    40f8:	pop	{fp}		; (ldr fp, [sp], #4)
    40fc:	bx	lr

00004100 <attributes_local_MyGame_json_parser_enum>:
    4100:	push	{fp}		; (str fp, [sp, #-4]!)
    4104:	add	fp, sp, #0
    4108:	sub	sp, sp, #20
    410c:	str	r0, [fp, #-8]
    4110:	str	r1, [fp, #-12]
    4114:	str	r2, [fp, #-16]
    4118:	str	r3, [fp, #-20]	; 0xffffffec
    411c:	ldr	r3, [fp, #-12]
    4120:	mov	r0, r3
    4124:	add	sp, fp, #0
    4128:	pop	{fp}		; (ldr fp, [sp], #4)
    412c:	bx	lr

00004130 <attributes_local_Fantasy_json_parser_enum>:
    4130:	push	{fp}		; (str fp, [sp, #-4]!)
    4134:	add	fp, sp, #0
    4138:	sub	sp, sp, #20
    413c:	str	r0, [fp, #-8]
    4140:	str	r1, [fp, #-12]
    4144:	str	r2, [fp, #-16]
    4148:	str	r3, [fp, #-20]	; 0xffffffec
    414c:	ldr	r3, [fp, #-12]
    4150:	mov	r0, r3
    4154:	add	sp, fp, #0
    4158:	pop	{fp}		; (ldr fp, [sp], #4)
    415c:	bx	lr

00004160 <attributes_local_MyGame_OtherNameSpace_json_parser_enum>:
    4160:	push	{fp}		; (str fp, [sp, #-4]!)
    4164:	add	fp, sp, #0
    4168:	sub	sp, sp, #20
    416c:	str	r0, [fp, #-8]
    4170:	str	r1, [fp, #-12]
    4174:	str	r2, [fp, #-16]
    4178:	str	r3, [fp, #-20]	; 0xffffffec
    417c:	ldr	r3, [fp, #-12]
    4180:	mov	r0, r3
    4184:	add	sp, fp, #0
    4188:	pop	{fp}		; (ldr fp, [sp], #4)
    418c:	bx	lr

00004190 <attributes_global_json_parser_enum>:
    4190:	push	{fp}		; (str fp, [sp, #-4]!)
    4194:	add	fp, sp, #0
    4198:	sub	sp, sp, #20
    419c:	str	r0, [fp, #-8]
    41a0:	str	r1, [fp, #-12]
    41a4:	str	r2, [fp, #-16]
    41a8:	str	r3, [fp, #-20]	; 0xffffffec
    41ac:	ldr	r3, [fp, #-12]
    41b0:	mov	r0, r3
    41b4:	add	sp, fp, #0
    41b8:	pop	{fp}		; (ldr fp, [sp], #4)
    41bc:	bx	lr

000041c0 <InGlobalNamespace_parse_json_struct_inline>:
    41c0:	str	fp, [sp, #-8]!
    41c4:	str	lr, [sp, #4]
    41c8:	add	fp, sp, #4
    41cc:	sub	sp, sp, #24
    41d0:	str	r0, [fp, #-16]
    41d4:	str	r1, [fp, #-20]	; 0xffffffec
    41d8:	str	r2, [fp, #-24]	; 0xffffffe8
    41dc:	str	r3, [fp, #-28]	; 0xffffffe4
    41e0:	sub	r3, fp, #8
    41e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    41e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    41ec:	ldr	r0, [fp, #-16]
    41f0:	bl	a84 <flatcc_json_parser_object_start>
    41f4:	str	r0, [fp, #-20]	; 0xffffffec
    41f8:	b	4228 <InGlobalNamespace_parse_json_struct_inline+0x68>
    41fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4200:	ldr	r1, [fp, #-20]	; 0xffffffec
    4204:	ldr	r0, [fp, #-16]
    4208:	bl	0 <flatcc_json_parser_unmatched_symbol>
    420c:	str	r0, [fp, #-20]	; 0xffffffec
    4210:	sub	r3, fp, #8
    4214:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4218:	ldr	r1, [fp, #-20]	; 0xffffffec
    421c:	ldr	r0, [fp, #-16]
    4220:	bl	b78 <flatcc_json_parser_object_end>
    4224:	str	r0, [fp, #-20]	; 0xffffffec
    4228:	ldr	r3, [fp, #-8]
    422c:	cmp	r3, #0
    4230:	bne	41fc <InGlobalNamespace_parse_json_struct_inline+0x3c>
    4234:	ldr	r3, [fp, #-20]	; 0xffffffec
    4238:	mov	r0, r3
    423c:	sub	sp, fp, #4
    4240:	ldr	fp, [sp]
    4244:	add	sp, sp, #4
    4248:	pop	{pc}		; (ldr pc, [sp], #4)

0000424c <InGlobalNamespace_parse_json_struct>:
    424c:	str	fp, [sp, #-8]!
    4250:	str	lr, [sp, #4]
    4254:	add	fp, sp, #4
    4258:	sub	sp, sp, #24
    425c:	str	r0, [fp, #-16]
    4260:	str	r1, [fp, #-20]	; 0xffffffec
    4264:	str	r2, [fp, #-24]	; 0xffffffe8
    4268:	str	r3, [fp, #-28]	; 0xffffffe4
    426c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4270:	mov	r2, #0
    4274:	str	r2, [r3]
    4278:	ldr	r3, [fp, #-16]
    427c:	ldr	r3, [r3]
    4280:	mov	r2, #1
    4284:	mov	r1, #0
    4288:	mov	r0, r3
    428c:	bl	0 <flatcc_builder_start_struct>
    4290:	str	r0, [fp, #-8]
    4294:	ldr	r3, [fp, #-8]
    4298:	cmp	r3, #0
    429c:	beq	42fc <InGlobalNamespace_parse_json_struct+0xb0>
    42a0:	ldr	r3, [fp, #-8]
    42a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    42ac:	ldr	r0, [fp, #-16]
    42b0:	bl	41c0 <InGlobalNamespace_parse_json_struct_inline>
    42b4:	str	r0, [fp, #-20]	; 0xffffffec
    42b8:	ldr	r2, [fp, #-20]	; 0xffffffec
    42bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    42c0:	cmp	r2, r3
    42c4:	beq	4304 <InGlobalNamespace_parse_json_struct+0xb8>
    42c8:	ldr	r3, [fp, #-16]
    42cc:	ldr	r3, [r3]
    42d0:	mov	r0, r3
    42d4:	bl	0 <flatcc_builder_end_struct>
    42d8:	mov	r2, r0
    42dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    42e0:	str	r2, [r3]
    42e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    42e8:	ldr	r3, [r3]
    42ec:	cmp	r3, #0
    42f0:	beq	4304 <InGlobalNamespace_parse_json_struct+0xb8>
    42f4:	ldr	r3, [fp, #-20]	; 0xffffffec
    42f8:	b	4320 <InGlobalNamespace_parse_json_struct+0xd4>
    42fc:	nop	{0}
    4300:	b	4308 <InGlobalNamespace_parse_json_struct+0xbc>
    4304:	nop	{0}
    4308:	mov	r3, #33	; 0x21
    430c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4310:	ldr	r1, [fp, #-20]	; 0xffffffec
    4314:	ldr	r0, [fp, #-16]
    4318:	bl	0 <flatcc_json_parser_set_error>
    431c:	mov	r3, r0
    4320:	mov	r0, r3
    4324:	sub	sp, fp, #4
    4328:	ldr	fp, [sp]
    432c:	add	sp, sp, #4
    4330:	pop	{pc}		; (ldr pc, [sp], #4)

00004334 <MyGame_InParentNamespace_parse_json_table>:
    4334:	str	fp, [sp, #-8]!
    4338:	str	lr, [sp, #4]
    433c:	add	fp, sp, #4
    4340:	sub	sp, sp, #24
    4344:	str	r0, [fp, #-16]
    4348:	str	r1, [fp, #-20]	; 0xffffffec
    434c:	str	r2, [fp, #-24]	; 0xffffffe8
    4350:	str	r3, [fp, #-28]	; 0xffffffe4
    4354:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4358:	mov	r2, #0
    435c:	str	r2, [r3]
    4360:	ldr	r3, [fp, #-16]
    4364:	ldr	r3, [r3]
    4368:	mov	r1, #0
    436c:	mov	r0, r3
    4370:	bl	0 <flatcc_builder_start_table>
    4374:	mov	r3, r0
    4378:	cmp	r3, #0
    437c:	bne	442c <MyGame_InParentNamespace_parse_json_table+0xf8>
    4380:	sub	r3, fp, #8
    4384:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4388:	ldr	r1, [fp, #-20]	; 0xffffffec
    438c:	ldr	r0, [fp, #-16]
    4390:	bl	a84 <flatcc_json_parser_object_start>
    4394:	str	r0, [fp, #-20]	; 0xffffffec
    4398:	b	43dc <MyGame_InParentNamespace_parse_json_table+0xa8>
    439c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    43a4:	ldr	r0, [fp, #-16]
    43a8:	bl	60c <flatcc_json_parser_symbol_start>
    43ac:	str	r0, [fp, #-20]	; 0xffffffec
    43b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    43b8:	ldr	r0, [fp, #-16]
    43bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    43c0:	str	r0, [fp, #-20]	; 0xffffffec
    43c4:	sub	r3, fp, #8
    43c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    43d0:	ldr	r0, [fp, #-16]
    43d4:	bl	b78 <flatcc_json_parser_object_end>
    43d8:	str	r0, [fp, #-20]	; 0xffffffec
    43dc:	ldr	r3, [fp, #-8]
    43e0:	cmp	r3, #0
    43e4:	bne	439c <MyGame_InParentNamespace_parse_json_table+0x68>
    43e8:	ldr	r3, [fp, #-16]
    43ec:	ldr	r3, [r3, #24]
    43f0:	cmp	r3, #0
    43f4:	bne	4434 <MyGame_InParentNamespace_parse_json_table+0x100>
    43f8:	ldr	r3, [fp, #-16]
    43fc:	ldr	r3, [r3]
    4400:	mov	r0, r3
    4404:	bl	0 <flatcc_builder_end_table>
    4408:	mov	r2, r0
    440c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4410:	str	r2, [r3]
    4414:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4418:	ldr	r3, [r3]
    441c:	cmp	r3, #0
    4420:	beq	443c <MyGame_InParentNamespace_parse_json_table+0x108>
    4424:	ldr	r3, [fp, #-20]	; 0xffffffec
    4428:	b	4458 <MyGame_InParentNamespace_parse_json_table+0x124>
    442c:	nop	{0}
    4430:	b	4440 <MyGame_InParentNamespace_parse_json_table+0x10c>
    4434:	nop	{0}
    4438:	b	4440 <MyGame_InParentNamespace_parse_json_table+0x10c>
    443c:	nop	{0}
    4440:	mov	r3, #33	; 0x21
    4444:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4448:	ldr	r1, [fp, #-20]	; 0xffffffec
    444c:	ldr	r0, [fp, #-16]
    4450:	bl	0 <flatcc_json_parser_set_error>
    4454:	mov	r3, r0
    4458:	mov	r0, r3
    445c:	sub	sp, fp, #4
    4460:	ldr	fp, [sp]
    4464:	add	sp, sp, #4
    4468:	pop	{pc}		; (ldr pc, [sp], #4)

0000446c <MyGame_Example2_Monster_parse_json_table>:
    446c:	str	fp, [sp, #-8]!
    4470:	str	lr, [sp, #4]
    4474:	add	fp, sp, #4
    4478:	sub	sp, sp, #24
    447c:	str	r0, [fp, #-16]
    4480:	str	r1, [fp, #-20]	; 0xffffffec
    4484:	str	r2, [fp, #-24]	; 0xffffffe8
    4488:	str	r3, [fp, #-28]	; 0xffffffe4
    448c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4490:	mov	r2, #0
    4494:	str	r2, [r3]
    4498:	ldr	r3, [fp, #-16]
    449c:	ldr	r3, [r3]
    44a0:	mov	r1, #0
    44a4:	mov	r0, r3
    44a8:	bl	0 <flatcc_builder_start_table>
    44ac:	mov	r3, r0
    44b0:	cmp	r3, #0
    44b4:	bne	4564 <MyGame_Example2_Monster_parse_json_table+0xf8>
    44b8:	sub	r3, fp, #8
    44bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    44c4:	ldr	r0, [fp, #-16]
    44c8:	bl	a84 <flatcc_json_parser_object_start>
    44cc:	str	r0, [fp, #-20]	; 0xffffffec
    44d0:	b	4514 <MyGame_Example2_Monster_parse_json_table+0xa8>
    44d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    44dc:	ldr	r0, [fp, #-16]
    44e0:	bl	60c <flatcc_json_parser_symbol_start>
    44e4:	str	r0, [fp, #-20]	; 0xffffffec
    44e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    44f0:	ldr	r0, [fp, #-16]
    44f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    44f8:	str	r0, [fp, #-20]	; 0xffffffec
    44fc:	sub	r3, fp, #8
    4500:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4504:	ldr	r1, [fp, #-20]	; 0xffffffec
    4508:	ldr	r0, [fp, #-16]
    450c:	bl	b78 <flatcc_json_parser_object_end>
    4510:	str	r0, [fp, #-20]	; 0xffffffec
    4514:	ldr	r3, [fp, #-8]
    4518:	cmp	r3, #0
    451c:	bne	44d4 <MyGame_Example2_Monster_parse_json_table+0x68>
    4520:	ldr	r3, [fp, #-16]
    4524:	ldr	r3, [r3, #24]
    4528:	cmp	r3, #0
    452c:	bne	456c <MyGame_Example2_Monster_parse_json_table+0x100>
    4530:	ldr	r3, [fp, #-16]
    4534:	ldr	r3, [r3]
    4538:	mov	r0, r3
    453c:	bl	0 <flatcc_builder_end_table>
    4540:	mov	r2, r0
    4544:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4548:	str	r2, [r3]
    454c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4550:	ldr	r3, [r3]
    4554:	cmp	r3, #0
    4558:	beq	4574 <MyGame_Example2_Monster_parse_json_table+0x108>
    455c:	ldr	r3, [fp, #-20]	; 0xffffffec
    4560:	b	4590 <MyGame_Example2_Monster_parse_json_table+0x124>
    4564:	nop	{0}
    4568:	b	4578 <MyGame_Example2_Monster_parse_json_table+0x10c>
    456c:	nop	{0}
    4570:	b	4578 <MyGame_Example2_Monster_parse_json_table+0x10c>
    4574:	nop	{0}
    4578:	mov	r3, #33	; 0x21
    457c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4580:	ldr	r1, [fp, #-20]	; 0xffffffec
    4584:	ldr	r0, [fp, #-16]
    4588:	bl	0 <flatcc_json_parser_set_error>
    458c:	mov	r3, r0
    4590:	mov	r0, r3
    4594:	sub	sp, fp, #4
    4598:	ldr	fp, [sp]
    459c:	add	sp, sp, #4
    45a0:	pop	{pc}		; (ldr pc, [sp], #4)

000045a4 <MyGame_Example_Foo_parse_json_union>:
    45a4:	str	fp, [sp, #-8]!
    45a8:	str	lr, [sp, #4]
    45ac:	add	fp, sp, #4
    45b0:	sub	sp, sp, #16
    45b4:	str	r0, [fp, #-8]
    45b8:	str	r1, [fp, #-12]
    45bc:	str	r2, [fp, #-16]
    45c0:	strb	r3, [fp, #-17]	; 0xffffffef
    45c4:	ldr	r3, [fp, #4]
    45c8:	mov	r2, #0
    45cc:	str	r2, [r3]
    45d0:	ldrb	r3, [fp, #-17]	; 0xffffffef
    45d4:	cmp	r3, #0
    45d8:	beq	45e8 <MyGame_Example_Foo_parse_json_union+0x44>
    45dc:	cmp	r3, #1
    45e0:	beq	4600 <MyGame_Example_Foo_parse_json_union+0x5c>
    45e4:	b	4630 <MyGame_Example_Foo_parse_json_union+0x8c>
    45e8:	ldr	r2, [fp, #-16]
    45ec:	ldr	r1, [fp, #-12]
    45f0:	ldr	r0, [fp, #-8]
    45f4:	bl	1780 <flatcc_json_parser_none>
    45f8:	mov	r3, r0
    45fc:	b	46b0 <MyGame_Example_Foo_parse_json_union+0x10c>
    4600:	ldr	r3, [fp, #4]
    4604:	ldr	r2, [fp, #-16]
    4608:	ldr	r1, [fp, #-12]
    460c:	ldr	r0, [fp, #-8]
    4610:	bl	4334 <MyGame_InParentNamespace_parse_json_table>
    4614:	str	r0, [fp, #-12]
    4618:	nop	{0}
    461c:	ldr	r3, [fp, #-8]
    4620:	ldr	r3, [r3, #24]
    4624:	cmp	r3, #0
    4628:	beq	4680 <MyGame_Example_Foo_parse_json_union+0xdc>
    462c:	b	4678 <MyGame_Example_Foo_parse_json_union+0xd4>
    4630:	ldr	r3, [fp, #-8]
    4634:	ldr	r3, [r3, #8]
    4638:	and	r3, r3, #1
    463c:	cmp	r3, #0
    4640:	bne	4660 <MyGame_Example_Foo_parse_json_union+0xbc>
    4644:	mov	r3, #15
    4648:	ldr	r2, [fp, #-16]
    464c:	ldr	r1, [fp, #-12]
    4650:	ldr	r0, [fp, #-8]
    4654:	bl	0 <flatcc_json_parser_set_error>
    4658:	mov	r3, r0
    465c:	b	46b0 <MyGame_Example_Foo_parse_json_union+0x10c>
    4660:	ldr	r2, [fp, #-16]
    4664:	ldr	r1, [fp, #-12]
    4668:	ldr	r0, [fp, #-8]
    466c:	bl	0 <flatcc_json_parser_generic_json>
    4670:	mov	r3, r0
    4674:	b	46b0 <MyGame_Example_Foo_parse_json_union+0x10c>
    4678:	ldr	r3, [fp, #-12]
    467c:	b	46b0 <MyGame_Example_Foo_parse_json_union+0x10c>
    4680:	ldr	r3, [fp, #4]
    4684:	ldr	r3, [r3]
    4688:	cmp	r3, #0
    468c:	bne	46ac <MyGame_Example_Foo_parse_json_union+0x108>
    4690:	mov	r3, #33	; 0x21
    4694:	ldr	r2, [fp, #-16]
    4698:	ldr	r1, [fp, #-12]
    469c:	ldr	r0, [fp, #-8]
    46a0:	bl	0 <flatcc_json_parser_set_error>
    46a4:	mov	r3, r0
    46a8:	b	46b0 <MyGame_Example_Foo_parse_json_union+0x10c>
    46ac:	ldr	r3, [fp, #-12]
    46b0:	mov	r0, r3
    46b4:	sub	sp, fp, #4
    46b8:	ldr	fp, [sp]
    46bc:	add	sp, sp, #4
    46c0:	pop	{pc}		; (ldr pc, [sp], #4)

000046c4 <MyGame_Example_Foo_json_union_accept_type>:
    46c4:	push	{fp}		; (str fp, [sp, #-4]!)
    46c8:	add	fp, sp, #0
    46cc:	sub	sp, sp, #12
    46d0:	mov	r3, r0
    46d4:	strb	r3, [fp, #-5]
    46d8:	ldrb	r3, [fp, #-5]
    46dc:	cmp	r3, #0
    46e0:	beq	46f0 <MyGame_Example_Foo_json_union_accept_type+0x2c>
    46e4:	cmp	r3, #1
    46e8:	beq	46f8 <MyGame_Example_Foo_json_union_accept_type+0x34>
    46ec:	b	4700 <MyGame_Example_Foo_json_union_accept_type+0x3c>
    46f0:	mov	r3, #1
    46f4:	b	4704 <MyGame_Example_Foo_json_union_accept_type+0x40>
    46f8:	mov	r3, #1
    46fc:	b	4704 <MyGame_Example_Foo_json_union_accept_type+0x40>
    4700:	mov	r3, #0
    4704:	mov	r0, r3
    4708:	add	sp, fp, #0
    470c:	pop	{fp}		; (ldr fp, [sp], #4)
    4710:	bx	lr

00004714 <MyGame_Example_Foo_parse_json_enum>:
    4714:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4718:	strd	r6, [sp, #8]
    471c:	str	fp, [sp, #16]
    4720:	str	lr, [sp, #20]
    4724:	add	fp, sp, #20
    4728:	sub	sp, sp, #48	; 0x30
    472c:	str	r0, [fp, #-48]	; 0xffffffd0
    4730:	str	r1, [fp, #-52]	; 0xffffffcc
    4734:	str	r2, [fp, #-56]	; 0xffffffc8
    4738:	str	r3, [fp, #-60]	; 0xffffffc4
    473c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4740:	str	r3, [fp, #-24]	; 0xffffffe8
    4744:	ldr	r1, [fp, #-56]	; 0xffffffc8
    4748:	ldr	r0, [fp, #-52]	; 0xffffffcc
    474c:	bl	940 <flatcc_json_parser_symbol_part>
    4750:	strd	r0, [fp, #-36]	; 0xffffffdc
    4754:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    4758:	add	r1, pc, #416	; 0x1a0
    475c:	ldrd	r0, [r1]
    4760:	cmp	r3, r1
    4764:	cmpeq	r2, r0
    4768:	bne	484c <MyGame_Example_Foo_parse_json_enum+0x138>
    476c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4770:	add	r3, r3, #8
    4774:	str	r3, [fp, #-52]	; 0xffffffcc
    4778:	ldr	r1, [fp, #-56]	; 0xffffffc8
    477c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4780:	bl	940 <flatcc_json_parser_symbol_part>
    4784:	strd	r0, [fp, #-36]	; 0xffffffdc
    4788:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    478c:	add	r1, pc, #372	; 0x174
    4790:	ldrd	r0, [r1]
    4794:	cmp	r3, r1
    4798:	cmpeq	r2, r0
    479c:	bne	4844 <MyGame_Example_Foo_parse_json_enum+0x130>
    47a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    47a4:	add	r3, r3, #8
    47a8:	str	r3, [fp, #-52]	; 0xffffffcc
    47ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
    47b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    47b4:	bl	940 <flatcc_json_parser_symbol_part>
    47b8:	strd	r0, [fp, #-36]	; 0xffffffdc
    47bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    47c0:	mov	r0, #0
    47c4:	mov	r1, #-16777216	; 0xff000000
    47c8:	and	r6, r2, r0
    47cc:	and	r7, r3, r1
    47d0:	cmp	r7, #1694498816	; 0x65000000
    47d4:	cmpeq	r6, #0
    47d8:	bne	483c <MyGame_Example_Foo_parse_json_enum+0x128>
    47dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    47e0:	str	r3, [fp, #-40]	; 0xffffffd8
    47e4:	ldr	r3, [fp, #8]
    47e8:	str	r3, [sp]
    47ec:	mov	r3, #1
    47f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    47f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    47f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    47fc:	bl	0 <flatcc_json_parser_match_constant>
    4800:	str	r0, [fp, #-52]	; 0xffffffcc
    4804:	ldr	r2, [fp, #-52]	; 0xffffffcc
    4808:	ldr	r3, [fp, #-40]	; 0xffffffd8
    480c:	cmp	r2, r3
    4810:	beq	4834 <MyGame_Example_Foo_parse_json_enum+0x120>
    4814:	ldr	r1, [fp, #4]
    4818:	mov	r2, #1
    481c:	mov	r3, #0
    4820:	strd	r2, [r1]
    4824:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4828:	mov	r2, #0
    482c:	str	r2, [r3]
    4830:	b	48dc <MyGame_Example_Foo_parse_json_enum+0x1c8>
    4834:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4838:	b	48e0 <MyGame_Example_Foo_parse_json_enum+0x1cc>
    483c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4840:	b	48e0 <MyGame_Example_Foo_parse_json_enum+0x1cc>
    4844:	ldr	r3, [fp, #-24]	; 0xffffffe8
    4848:	b	48e0 <MyGame_Example_Foo_parse_json_enum+0x1cc>
    484c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    4850:	mov	r0, #0
    4854:	mvn	r1, #0
    4858:	and	r4, r2, r0
    485c:	and	r5, r3, r1
    4860:	add	r3, pc, #168	; 0xa8
    4864:	ldrd	r2, [r3]
    4868:	cmp	r5, r3
    486c:	cmpeq	r4, r2
    4870:	bne	48d4 <MyGame_Example_Foo_parse_json_enum+0x1c0>
    4874:	ldr	r3, [fp, #-52]	; 0xffffffcc
    4878:	str	r3, [fp, #-40]	; 0xffffffd8
    487c:	ldr	r3, [fp, #8]
    4880:	str	r3, [sp]
    4884:	mov	r3, #4
    4888:	ldr	r2, [fp, #-56]	; 0xffffffc8
    488c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    4890:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4894:	bl	0 <flatcc_json_parser_match_constant>
    4898:	str	r0, [fp, #-52]	; 0xffffffcc
    489c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    48a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    48a4:	cmp	r2, r3
    48a8:	beq	48cc <MyGame_Example_Foo_parse_json_enum+0x1b8>
    48ac:	ldr	r1, [fp, #4]
    48b0:	mov	r2, #0
    48b4:	mov	r3, #0
    48b8:	strd	r2, [r1]
    48bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    48c0:	mov	r2, #0
    48c4:	str	r2, [r3]
    48c8:	b	48dc <MyGame_Example_Foo_parse_json_enum+0x1c8>
    48cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    48d0:	b	48e0 <MyGame_Example_Foo_parse_json_enum+0x1cc>
    48d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    48d8:	b	48e0 <MyGame_Example_Foo_parse_json_enum+0x1cc>
    48dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    48e0:	mov	r0, r3
    48e4:	sub	sp, fp, #20
    48e8:	ldrd	r4, [sp]
    48ec:	ldrd	r6, [sp, #8]
    48f0:	ldr	fp, [sp, #16]
    48f4:	add	sp, sp, #20
    48f8:	pop	{pc}		; (ldr pc, [sp], #4)
    48fc:	nop	{0}
    4900:	.word	0x72656e74
    4904:	.word	0x496e5061
    4908:	.word	0x73706163
    490c:	.word	0x4e616d65
    4910:	.word	0x00000000
    4914:	.word	0x4e4f4e45

00004918 <MyGame_Example_neg_enum_parse_json_enum>:
    4918:	strd	r4, [sp, #-32]!	; 0xffffffe0
    491c:	strd	r6, [sp, #8]
    4920:	strd	r8, [sp, #16]
    4924:	str	fp, [sp, #24]
    4928:	str	lr, [sp, #28]
    492c:	add	fp, sp, #28
    4930:	sub	sp, sp, #48	; 0x30
    4934:	str	r0, [fp, #-56]	; 0xffffffc8
    4938:	str	r1, [fp, #-60]	; 0xffffffc4
    493c:	str	r2, [fp, #-64]	; 0xffffffc0
    4940:	str	r3, [fp, #-68]	; 0xffffffbc
    4944:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4948:	str	r3, [fp, #-32]	; 0xffffffe0
    494c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    4950:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4954:	bl	940 <flatcc_json_parser_symbol_part>
    4958:	strd	r0, [fp, #-44]	; 0xffffffd4
    495c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4960:	add	r1, pc, #472	; 0x1d8
    4964:	ldrd	r0, [r1]
    4968:	cmp	r3, r1
    496c:	cmpeq	r2, r0
    4970:	bhi	4a04 <MyGame_Example_neg_enum_parse_json_enum+0xec>
    4974:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4978:	mov	r0, #0
    497c:	mvn	r1, #0
    4980:	and	r8, r2, r0
    4984:	and	r9, r3, r1
    4988:	add	r3, pc, #440	; 0x1b8
    498c:	ldrd	r2, [r3]
    4990:	cmp	r9, r3
    4994:	cmpeq	r8, r2
    4998:	bne	49fc <MyGame_Example_neg_enum_parse_json_enum+0xe4>
    499c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    49a0:	str	r3, [fp, #-48]	; 0xffffffd0
    49a4:	ldr	r3, [fp, #8]
    49a8:	str	r3, [sp]
    49ac:	mov	r3, #4
    49b0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    49b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    49bc:	bl	0 <flatcc_json_parser_match_constant>
    49c0:	str	r0, [fp, #-60]	; 0xffffffc4
    49c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    49c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    49cc:	cmp	r2, r3
    49d0:	beq	49f4 <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    49d4:	ldr	r1, [fp, #4]
    49d8:	mvn	r2, #11
    49dc:	mvn	r3, #0
    49e0:	strd	r2, [r1]
    49e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    49e8:	mov	r2, #1
    49ec:	str	r2, [r3]
    49f0:	b	4b1c <MyGame_Example_neg_enum_parse_json_enum+0x204>
    49f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    49f8:	b	4b20 <MyGame_Example_neg_enum_parse_json_enum+0x208>
    49fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4a00:	b	4b20 <MyGame_Example_neg_enum_parse_json_enum+0x208>
    4a04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4a08:	mov	r0, #0
    4a0c:	mvn	r1, #0
    4a10:	and	r6, r2, r0
    4a14:	and	r7, r3, r1
    4a18:	add	r3, pc, #304	; 0x130
    4a1c:	ldrd	r2, [r3]
    4a20:	cmp	r7, r3
    4a24:	cmpeq	r6, r2
    4a28:	bne	4a8c <MyGame_Example_neg_enum_parse_json_enum+0x174>
    4a2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4a30:	str	r3, [fp, #-48]	; 0xffffffd0
    4a34:	ldr	r3, [fp, #8]
    4a38:	str	r3, [sp]
    4a3c:	mov	r3, #4
    4a40:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4a44:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4a48:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4a4c:	bl	0 <flatcc_json_parser_match_constant>
    4a50:	str	r0, [fp, #-60]	; 0xffffffc4
    4a54:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4a58:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4a5c:	cmp	r2, r3
    4a60:	beq	4a84 <MyGame_Example_neg_enum_parse_json_enum+0x16c>
    4a64:	ldr	r1, [fp, #4]
    4a68:	mvn	r2, #9
    4a6c:	mvn	r3, #0
    4a70:	strd	r2, [r1]
    4a74:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4a78:	mov	r2, #1
    4a7c:	str	r2, [r3]
    4a80:	b	4b1c <MyGame_Example_neg_enum_parse_json_enum+0x204>
    4a84:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4a88:	b	4b20 <MyGame_Example_neg_enum_parse_json_enum+0x208>
    4a8c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4a90:	mov	r0, #0
    4a94:	mvn	r1, #0
    4a98:	and	r4, r2, r0
    4a9c:	and	r5, r3, r1
    4aa0:	add	r3, pc, #176	; 0xb0
    4aa4:	ldrd	r2, [r3]
    4aa8:	cmp	r5, r3
    4aac:	cmpeq	r4, r2
    4ab0:	bne	4b14 <MyGame_Example_neg_enum_parse_json_enum+0x1fc>
    4ab4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4ab8:	str	r3, [fp, #-48]	; 0xffffffd0
    4abc:	ldr	r3, [fp, #8]
    4ac0:	str	r3, [sp]
    4ac4:	mov	r3, #4
    4ac8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4acc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4ad0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4ad4:	bl	0 <flatcc_json_parser_match_constant>
    4ad8:	str	r0, [fp, #-60]	; 0xffffffc4
    4adc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4ae0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4ae4:	cmp	r2, r3
    4ae8:	beq	4b0c <MyGame_Example_neg_enum_parse_json_enum+0x1f4>
    4aec:	ldr	r1, [fp, #4]
    4af0:	mvn	r2, #10
    4af4:	mvn	r3, #0
    4af8:	strd	r2, [r1]
    4afc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4b00:	mov	r2, #1
    4b04:	str	r2, [r3]
    4b08:	b	4b1c <MyGame_Example_neg_enum_parse_json_enum+0x204>
    4b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4b10:	b	4b20 <MyGame_Example_neg_enum_parse_json_enum+0x208>
    4b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4b18:	b	4b20 <MyGame_Example_neg_enum_parse_json_enum+0x208>
    4b1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4b20:	mov	r0, r3
    4b24:	sub	sp, fp, #28
    4b28:	ldrd	r4, [sp]
    4b2c:	ldrd	r6, [sp, #8]
    4b30:	ldrd	r8, [sp, #16]
    4b34:	ldr	fp, [sp, #24]
    4b38:	add	sp, sp, #28
    4b3c:	pop	{pc}		; (ldr pc, [sp], #4)
    4b40:	.word	0xffffffff
    4b44:	.word	0x6e656731
    4b48:	.word	0x00000000
    4b4c:	.word	0x6e656731
    4b50:	.word	0x00000000
    4b54:	.word	0x6e656733
    4b58:	.word	0x00000000
    4b5c:	.word	0x6e656732

00004b60 <MyGame_Example_int_enum_parse_json_enum>:
    4b60:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4b64:	strd	r6, [sp, #8]
    4b68:	strd	r8, [sp, #16]
    4b6c:	str	fp, [sp, #24]
    4b70:	str	lr, [sp, #28]
    4b74:	add	fp, sp, #28
    4b78:	sub	sp, sp, #56	; 0x38
    4b7c:	str	r0, [fp, #-56]	; 0xffffffc8
    4b80:	str	r1, [fp, #-60]	; 0xffffffc4
    4b84:	str	r2, [fp, #-64]	; 0xffffffc0
    4b88:	str	r3, [fp, #-68]	; 0xffffffbc
    4b8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4b90:	str	r3, [fp, #-32]	; 0xffffffe0
    4b94:	ldr	r1, [fp, #-64]	; 0xffffffc0
    4b98:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4b9c:	bl	940 <flatcc_json_parser_symbol_part>
    4ba0:	strd	r0, [fp, #-44]	; 0xffffffd4
    4ba4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4ba8:	add	r1, pc, #656	; 0x290
    4bac:	ldrd	r0, [r1]
    4bb0:	cmp	r3, r1
    4bb4:	cmpeq	r2, r0
    4bb8:	bhi	4c58 <MyGame_Example_int_enum_parse_json_enum+0xf8>
    4bbc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4bc0:	mov	r0, #0
    4bc4:	mvn	r1, #0
    4bc8:	and	ip, r2, r0
    4bcc:	str	ip, [fp, #-76]	; 0xffffffb4
    4bd0:	and	r3, r3, r1
    4bd4:	str	r3, [fp, #-72]	; 0xffffffb8
    4bd8:	add	r3, pc, #616	; 0x268
    4bdc:	ldrd	r2, [r3]
    4be0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    4be4:	cmp	r1, r3
    4be8:	cmpeq	r0, r2
    4bec:	bne	4c50 <MyGame_Example_int_enum_parse_json_enum+0xf0>
    4bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4bf4:	str	r3, [fp, #-48]	; 0xffffffd0
    4bf8:	ldr	r3, [fp, #8]
    4bfc:	str	r3, [sp]
    4c00:	mov	r3, #4
    4c04:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4c08:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4c0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4c10:	bl	0 <flatcc_json_parser_match_constant>
    4c14:	str	r0, [fp, #-60]	; 0xffffffc4
    4c18:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4c20:	cmp	r2, r3
    4c24:	beq	4c48 <MyGame_Example_int_enum_parse_json_enum+0xe8>
    4c28:	ldr	r1, [fp, #4]
    4c2c:	mov	r2, #2
    4c30:	mov	r3, #0
    4c34:	strd	r2, [r1]
    4c38:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4c3c:	mov	r2, #0
    4c40:	str	r2, [r3]
    4c44:	b	4e1c <MyGame_Example_int_enum_parse_json_enum+0x2bc>
    4c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4c4c:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4c50:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4c54:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4c58:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4c5c:	add	r1, pc, #492	; 0x1ec
    4c60:	ldrd	r0, [r1]
    4c64:	cmp	r3, r1
    4c68:	cmpeq	r2, r0
    4c6c:	bhi	4d00 <MyGame_Example_int_enum_parse_json_enum+0x1a0>
    4c70:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4c74:	mov	r0, #0
    4c78:	mvn	r1, #0
    4c7c:	and	r8, r2, r0
    4c80:	and	r9, r3, r1
    4c84:	add	r3, pc, #460	; 0x1cc
    4c88:	ldrd	r2, [r3]
    4c8c:	cmp	r9, r3
    4c90:	cmpeq	r8, r2
    4c94:	bne	4cf8 <MyGame_Example_int_enum_parse_json_enum+0x198>
    4c98:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4c9c:	str	r3, [fp, #-48]	; 0xffffffd0
    4ca0:	ldr	r3, [fp, #8]
    4ca4:	str	r3, [sp]
    4ca8:	mov	r3, #4
    4cac:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4cb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4cb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4cb8:	bl	0 <flatcc_json_parser_match_constant>
    4cbc:	str	r0, [fp, #-60]	; 0xffffffc4
    4cc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4cc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4cc8:	cmp	r2, r3
    4ccc:	beq	4cf0 <MyGame_Example_int_enum_parse_json_enum+0x190>
    4cd0:	ldr	r1, [fp, #4]
    4cd4:	mov	r2, #42	; 0x2a
    4cd8:	mov	r3, #0
    4cdc:	strd	r2, [r1]
    4ce0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4ce4:	mov	r2, #0
    4ce8:	str	r2, [r3]
    4cec:	b	4e1c <MyGame_Example_int_enum_parse_json_enum+0x2bc>
    4cf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4cf4:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4cfc:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4d00:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4d04:	mvn	r0, #255	; 0xff
    4d08:	mvn	r1, #0
    4d0c:	and	r6, r2, r0
    4d10:	and	r7, r3, r1
    4d14:	add	r3, pc, #324	; 0x144
    4d18:	ldrd	r2, [r3]
    4d1c:	cmp	r7, r3
    4d20:	cmpeq	r6, r2
    4d24:	bne	4d88 <MyGame_Example_int_enum_parse_json_enum+0x228>
    4d28:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4d2c:	str	r3, [fp, #-48]	; 0xffffffd0
    4d30:	ldr	r3, [fp, #8]
    4d34:	str	r3, [sp]
    4d38:	mov	r3, #7
    4d3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4d40:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4d44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4d48:	bl	0 <flatcc_json_parser_match_constant>
    4d4c:	str	r0, [fp, #-60]	; 0xffffffc4
    4d50:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4d54:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4d58:	cmp	r2, r3
    4d5c:	beq	4d80 <MyGame_Example_int_enum_parse_json_enum+0x220>
    4d60:	ldr	r1, [fp, #4]
    4d64:	mvn	r2, #0
    4d68:	mvn	r3, #0
    4d6c:	strd	r2, [r1]
    4d70:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4d74:	mov	r2, #1
    4d78:	str	r2, [r3]
    4d7c:	b	4e1c <MyGame_Example_int_enum_parse_json_enum+0x2bc>
    4d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4d84:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4d88:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4d8c:	mov	r0, #0
    4d90:	movt	r0, #65535	; 0xffff
    4d94:	mvn	r1, #0
    4d98:	and	r4, r2, r0
    4d9c:	and	r5, r3, r1
    4da0:	add	r3, pc, #192	; 0xc0
    4da4:	ldrd	r2, [r3]
    4da8:	cmp	r5, r3
    4dac:	cmpeq	r4, r2
    4db0:	bne	4e14 <MyGame_Example_int_enum_parse_json_enum+0x2b4>
    4db4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4db8:	str	r3, [fp, #-48]	; 0xffffffd0
    4dbc:	ldr	r3, [fp, #8]
    4dc0:	str	r3, [sp]
    4dc4:	mov	r3, #6
    4dc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4dcc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4dd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4dd4:	bl	0 <flatcc_json_parser_match_constant>
    4dd8:	str	r0, [fp, #-60]	; 0xffffffc4
    4ddc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4de0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4de4:	cmp	r2, r3
    4de8:	beq	4e0c <MyGame_Example_int_enum_parse_json_enum+0x2ac>
    4dec:	ldr	r1, [fp, #4]
    4df0:	mvn	r2, #1
    4df4:	mvn	r3, #0
    4df8:	strd	r2, [r1]
    4dfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4e00:	mov	r2, #1
    4e04:	str	r2, [r3]
    4e08:	b	4e1c <MyGame_Example_int_enum_parse_json_enum+0x2bc>
    4e0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4e10:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4e14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4e18:	b	4e20 <MyGame_Example_int_enum_parse_json_enum+0x2c0>
    4e1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4e20:	mov	r0, r3
    4e24:	sub	sp, fp, #28
    4e28:	ldrd	r4, [sp]
    4e2c:	ldrd	r6, [sp, #8]
    4e30:	ldrd	r8, [sp, #16]
    4e34:	ldr	fp, [sp, #24]
    4e38:	add	sp, sp, #28
    4e3c:	pop	{pc}		; (ldr pc, [sp], #4)
    4e40:	.word	0xffffffff
    4e44:	.word	0x696e7431
    4e48:	.word	0x00000000
    4e4c:	.word	0x696e7431
    4e50:	.word	0x6566ffff
    4e54:	.word	0x696e746e
    4e58:	.word	0x00000000
    4e5c:	.word	0x696e7432
    4e60:	.word	0x65673200
    4e64:	.word	0x696e746e
    4e68:	.word	0x65670000
    4e6c:	.word	0x696e746e

00004e70 <MyGame_Example_hex_enum_parse_json_enum>:
    4e70:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4e74:	strd	r6, [sp, #8]
    4e78:	strd	r8, [sp, #16]
    4e7c:	str	fp, [sp, #24]
    4e80:	str	lr, [sp, #28]
    4e84:	add	fp, sp, #28
    4e88:	sub	sp, sp, #48	; 0x30
    4e8c:	str	r0, [fp, #-56]	; 0xffffffc8
    4e90:	str	r1, [fp, #-60]	; 0xffffffc4
    4e94:	str	r2, [fp, #-64]	; 0xffffffc0
    4e98:	str	r3, [fp, #-68]	; 0xffffffbc
    4e9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4ea0:	str	r3, [fp, #-32]	; 0xffffffe0
    4ea4:	ldr	r1, [fp, #-64]	; 0xffffffc0
    4ea8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4eac:	bl	940 <flatcc_json_parser_symbol_part>
    4eb0:	strd	r0, [fp, #-44]	; 0xffffffd4
    4eb4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4eb8:	add	r1, pc, #480	; 0x1e0
    4ebc:	ldrd	r0, [r1]
    4ec0:	cmp	r3, r1
    4ec4:	cmpeq	r2, r0
    4ec8:	bhi	4f5c <MyGame_Example_hex_enum_parse_json_enum+0xec>
    4ecc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4ed0:	mov	r0, #0
    4ed4:	mvn	r1, #0
    4ed8:	and	r8, r2, r0
    4edc:	and	r9, r3, r1
    4ee0:	add	r3, pc, #448	; 0x1c0
    4ee4:	ldrd	r2, [r3]
    4ee8:	cmp	r9, r3
    4eec:	cmpeq	r8, r2
    4ef0:	bne	4f54 <MyGame_Example_hex_enum_parse_json_enum+0xe4>
    4ef4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4ef8:	str	r3, [fp, #-48]	; 0xffffffd0
    4efc:	ldr	r3, [fp, #8]
    4f00:	str	r3, [sp]
    4f04:	mov	r3, #4
    4f08:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4f0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4f10:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4f14:	bl	0 <flatcc_json_parser_match_constant>
    4f18:	str	r0, [fp, #-60]	; 0xffffffc4
    4f1c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4f20:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4f24:	cmp	r2, r3
    4f28:	beq	4f4c <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    4f2c:	ldr	r1, [fp, #4]
    4f30:	mov	r2, #3
    4f34:	mov	r3, #0
    4f38:	strd	r2, [r1]
    4f3c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4f40:	mov	r2, #0
    4f44:	str	r2, [r3]
    4f48:	b	5078 <MyGame_Example_hex_enum_parse_json_enum+0x208>
    4f4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4f50:	b	507c <MyGame_Example_hex_enum_parse_json_enum+0x20c>
    4f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4f58:	b	507c <MyGame_Example_hex_enum_parse_json_enum+0x20c>
    4f5c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4f60:	mov	r0, #0
    4f64:	movt	r0, #65535	; 0xffff
    4f68:	mvn	r1, #0
    4f6c:	and	r6, r2, r0
    4f70:	and	r7, r3, r1
    4f74:	add	r3, pc, #308	; 0x134
    4f78:	ldrd	r2, [r3]
    4f7c:	cmp	r7, r3
    4f80:	cmpeq	r6, r2
    4f84:	bne	4fe8 <MyGame_Example_hex_enum_parse_json_enum+0x178>
    4f88:	ldr	r3, [fp, #-60]	; 0xffffffc4
    4f8c:	str	r3, [fp, #-48]	; 0xffffffd0
    4f90:	ldr	r3, [fp, #8]
    4f94:	str	r3, [sp]
    4f98:	mov	r3, #6
    4f9c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4fa0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4fa4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4fa8:	bl	0 <flatcc_json_parser_match_constant>
    4fac:	str	r0, [fp, #-60]	; 0xffffffc4
    4fb0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    4fb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4fb8:	cmp	r2, r3
    4fbc:	beq	4fe0 <MyGame_Example_hex_enum_parse_json_enum+0x170>
    4fc0:	ldr	r1, [fp, #4]
    4fc4:	mvn	r2, #1
    4fc8:	mvn	r3, #0
    4fcc:	strd	r2, [r1]
    4fd0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    4fd4:	mov	r2, #1
    4fd8:	str	r2, [r3]
    4fdc:	b	5078 <MyGame_Example_hex_enum_parse_json_enum+0x208>
    4fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    4fe4:	b	507c <MyGame_Example_hex_enum_parse_json_enum+0x20c>
    4fe8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    4fec:	mov	r0, #0
    4ff0:	mvn	r1, #0
    4ff4:	and	r4, r2, r0
    4ff8:	and	r5, r3, r1
    4ffc:	add	r3, pc, #180	; 0xb4
    5000:	ldrd	r2, [r3]
    5004:	cmp	r5, r3
    5008:	cmpeq	r4, r2
    500c:	bne	5070 <MyGame_Example_hex_enum_parse_json_enum+0x200>
    5010:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5014:	str	r3, [fp, #-48]	; 0xffffffd0
    5018:	ldr	r3, [fp, #8]
    501c:	str	r3, [sp]
    5020:	mov	r3, #4
    5024:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5028:	ldr	r1, [fp, #-48]	; 0xffffffd0
    502c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5030:	bl	0 <flatcc_json_parser_match_constant>
    5034:	str	r0, [fp, #-60]	; 0xffffffc4
    5038:	ldr	r2, [fp, #-60]	; 0xffffffc4
    503c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5040:	cmp	r2, r3
    5044:	beq	5068 <MyGame_Example_hex_enum_parse_json_enum+0x1f8>
    5048:	ldr	r1, [fp, #4]
    504c:	add	r3, pc, #108	; 0x6c
    5050:	ldrd	r2, [r3]
    5054:	strd	r2, [r1]
    5058:	ldr	r3, [fp, #-68]	; 0xffffffbc
    505c:	mov	r2, #0
    5060:	str	r2, [r3]
    5064:	b	5078 <MyGame_Example_hex_enum_parse_json_enum+0x208>
    5068:	ldr	r3, [fp, #-32]	; 0xffffffe0
    506c:	b	507c <MyGame_Example_hex_enum_parse_json_enum+0x20c>
    5070:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5074:	b	507c <MyGame_Example_hex_enum_parse_json_enum+0x20c>
    5078:	ldr	r3, [fp, #-60]	; 0xffffffc4
    507c:	mov	r0, r3
    5080:	sub	sp, fp, #28
    5084:	ldrd	r4, [sp]
    5088:	ldrd	r6, [sp, #8]
    508c:	ldrd	r8, [sp, #16]
    5090:	ldr	fp, [sp, #24]
    5094:	add	sp, sp, #28
    5098:	pop	{pc}		; (ldr pc, [sp], #4)
    509c:	nop	{0}
    50a0:	.word	0xffffffff
    50a4:	.word	0x68657831
    50a8:	.word	0x00000000
    50ac:	.word	0x68657831
    50b0:	.word	0x65670000
    50b4:	.word	0x6865786e
    50b8:	.word	0x00000000
    50bc:	.word	0x68657832
    50c0:	.word	0x7eafbeaf
    50c4:	.word	0x00000000

000050c8 <MyGame_Example_Color_parse_json_enum>:
    50c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    50cc:	strd	r6, [sp, #8]
    50d0:	strd	r8, [sp, #16]
    50d4:	str	fp, [sp, #24]
    50d8:	str	lr, [sp, #28]
    50dc:	add	fp, sp, #28
    50e0:	sub	sp, sp, #48	; 0x30
    50e4:	str	r0, [fp, #-56]	; 0xffffffc8
    50e8:	str	r1, [fp, #-60]	; 0xffffffc4
    50ec:	str	r2, [fp, #-64]	; 0xffffffc0
    50f0:	str	r3, [fp, #-68]	; 0xffffffbc
    50f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    50f8:	str	r3, [fp, #-32]	; 0xffffffe0
    50fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
    5100:	ldr	r0, [fp, #-60]	; 0xffffffc4
    5104:	bl	940 <flatcc_json_parser_symbol_part>
    5108:	strd	r0, [fp, #-44]	; 0xffffffd4
    510c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    5110:	add	r1, pc, #472	; 0x1d8
    5114:	ldrd	r0, [r1]
    5118:	cmp	r3, r1
    511c:	cmpeq	r2, r0
    5120:	bhi	51b4 <MyGame_Example_Color_parse_json_enum+0xec>
    5124:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    5128:	mov	r0, #0
    512c:	mvn	r1, #0
    5130:	and	r8, r2, r0
    5134:	and	r9, r3, r1
    5138:	add	r3, pc, #440	; 0x1b8
    513c:	ldrd	r2, [r3]
    5140:	cmp	r9, r3
    5144:	cmpeq	r8, r2
    5148:	bne	51ac <MyGame_Example_Color_parse_json_enum+0xe4>
    514c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5150:	str	r3, [fp, #-48]	; 0xffffffd0
    5154:	ldr	r3, [fp, #8]
    5158:	str	r3, [sp]
    515c:	mov	r3, #4
    5160:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5164:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5168:	ldr	r0, [fp, #-56]	; 0xffffffc8
    516c:	bl	0 <flatcc_json_parser_match_constant>
    5170:	str	r0, [fp, #-60]	; 0xffffffc4
    5174:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5178:	ldr	r3, [fp, #-48]	; 0xffffffd0
    517c:	cmp	r2, r3
    5180:	beq	51a4 <MyGame_Example_Color_parse_json_enum+0xdc>
    5184:	ldr	r1, [fp, #4]
    5188:	mov	r2, #8
    518c:	mov	r3, #0
    5190:	strd	r2, [r1]
    5194:	ldr	r3, [fp, #-68]	; 0xffffffbc
    5198:	mov	r2, #0
    519c:	str	r2, [r3]
    51a0:	b	52cc <MyGame_Example_Color_parse_json_enum+0x204>
    51a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    51a8:	b	52d0 <MyGame_Example_Color_parse_json_enum+0x208>
    51ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    51b0:	b	52d0 <MyGame_Example_Color_parse_json_enum+0x208>
    51b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    51b8:	mov	r0, #0
    51bc:	mvn	r1, #255	; 0xff
    51c0:	and	r6, r2, r0
    51c4:	and	r7, r3, r1
    51c8:	add	r3, pc, #304	; 0x130
    51cc:	ldrd	r2, [r3]
    51d0:	cmp	r7, r3
    51d4:	cmpeq	r6, r2
    51d8:	bne	523c <MyGame_Example_Color_parse_json_enum+0x174>
    51dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    51e0:	str	r3, [fp, #-48]	; 0xffffffd0
    51e4:	ldr	r3, [fp, #8]
    51e8:	str	r3, [sp]
    51ec:	mov	r3, #3
    51f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    51f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    51f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    51fc:	bl	0 <flatcc_json_parser_match_constant>
    5200:	str	r0, [fp, #-60]	; 0xffffffc4
    5204:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5208:	ldr	r3, [fp, #-48]	; 0xffffffd0
    520c:	cmp	r2, r3
    5210:	beq	5234 <MyGame_Example_Color_parse_json_enum+0x16c>
    5214:	ldr	r1, [fp, #4]
    5218:	mov	r2, #1
    521c:	mov	r3, #0
    5220:	strd	r2, [r1]
    5224:	ldr	r3, [fp, #-68]	; 0xffffffbc
    5228:	mov	r2, #0
    522c:	str	r2, [r3]
    5230:	b	52cc <MyGame_Example_Color_parse_json_enum+0x204>
    5234:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5238:	b	52d0 <MyGame_Example_Color_parse_json_enum+0x208>
    523c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    5240:	mov	r0, #-16777216	; 0xff000000
    5244:	mvn	r1, #0
    5248:	and	r4, r2, r0
    524c:	and	r5, r3, r1
    5250:	add	r3, pc, #176	; 0xb0
    5254:	ldrd	r2, [r3]
    5258:	cmp	r5, r3
    525c:	cmpeq	r4, r2
    5260:	bne	52c4 <MyGame_Example_Color_parse_json_enum+0x1fc>
    5264:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5268:	str	r3, [fp, #-48]	; 0xffffffd0
    526c:	ldr	r3, [fp, #8]
    5270:	str	r3, [sp]
    5274:	mov	r3, #5
    5278:	ldr	r2, [fp, #-64]	; 0xffffffc0
    527c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5280:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5284:	bl	0 <flatcc_json_parser_match_constant>
    5288:	str	r0, [fp, #-60]	; 0xffffffc4
    528c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5290:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5294:	cmp	r2, r3
    5298:	beq	52bc <MyGame_Example_Color_parse_json_enum+0x1f4>
    529c:	ldr	r1, [fp, #4]
    52a0:	mov	r2, #2
    52a4:	mov	r3, #0
    52a8:	strd	r2, [r1]
    52ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
    52b0:	mov	r2, #0
    52b4:	str	r2, [r3]
    52b8:	b	52cc <MyGame_Example_Color_parse_json_enum+0x204>
    52bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    52c0:	b	52d0 <MyGame_Example_Color_parse_json_enum+0x208>
    52c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    52c8:	b	52d0 <MyGame_Example_Color_parse_json_enum+0x208>
    52cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    52d0:	mov	r0, r3
    52d4:	sub	sp, fp, #28
    52d8:	ldrd	r4, [sp]
    52dc:	ldrd	r6, [sp, #8]
    52e0:	ldrd	r8, [sp, #16]
    52e4:	ldr	fp, [sp, #24]
    52e8:	add	sp, sp, #28
    52ec:	pop	{pc}		; (ldr pc, [sp], #4)
    52f0:	.word	0x6dffffff
    52f4:	.word	0x47726565
    52f8:	.word	0x00000000
    52fc:	.word	0x426c7565
    5300:	.word	0x00000000
    5304:	.word	0x52656400
    5308:	.word	0x6e000000
    530c:	.word	0x47726565

00005310 <MyGame_Example_Any_parse_json_union>:
    5310:	str	fp, [sp, #-8]!
    5314:	str	lr, [sp, #4]
    5318:	add	fp, sp, #4
    531c:	sub	sp, sp, #16
    5320:	str	r0, [fp, #-8]
    5324:	str	r1, [fp, #-12]
    5328:	str	r2, [fp, #-16]
    532c:	strb	r3, [fp, #-17]	; 0xffffffef
    5330:	ldr	r3, [fp, #4]
    5334:	mov	r2, #0
    5338:	str	r2, [r3]
    533c:	ldrb	r3, [fp, #-17]	; 0xffffffef
    5340:	cmp	r3, #4
    5344:	ldrls	pc, [pc, r3, lsl #2]
    5348:	b	53e8 <MyGame_Example_Any_parse_json_union+0xd8>
    534c:	.word	0x00005360
    5350:	.word	0x00005378
    5354:	.word	0x00005394
    5358:	.word	0x000053b0
    535c:	.word	0x000053cc
    5360:	ldr	r2, [fp, #-16]
    5364:	ldr	r1, [fp, #-12]
    5368:	ldr	r0, [fp, #-8]
    536c:	bl	1780 <flatcc_json_parser_none>
    5370:	mov	r3, r0
    5374:	b	5478 <MyGame_Example_Any_parse_json_union+0x168>
    5378:	ldr	r3, [fp, #4]
    537c:	ldr	r2, [fp, #-16]
    5380:	ldr	r1, [fp, #-12]
    5384:	ldr	r0, [fp, #-8]
    5388:	bl	a940 <MyGame_Example_Monster_parse_json_table>
    538c:	str	r0, [fp, #-12]
    5390:	b	5430 <MyGame_Example_Any_parse_json_union+0x120>
    5394:	ldr	r3, [fp, #4]
    5398:	ldr	r2, [fp, #-16]
    539c:	ldr	r1, [fp, #-12]
    53a0:	ldr	r0, [fp, #-8]
    53a4:	bl	627c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    53a8:	str	r0, [fp, #-12]
    53ac:	b	5430 <MyGame_Example_Any_parse_json_union+0x120>
    53b0:	ldr	r3, [fp, #4]
    53b4:	ldr	r2, [fp, #-16]
    53b8:	ldr	r1, [fp, #-12]
    53bc:	ldr	r0, [fp, #-8]
    53c0:	bl	446c <MyGame_Example2_Monster_parse_json_table>
    53c4:	str	r0, [fp, #-12]
    53c8:	b	5430 <MyGame_Example_Any_parse_json_union+0x120>
    53cc:	ldr	r3, [fp, #4]
    53d0:	ldr	r2, [fp, #-16]
    53d4:	ldr	r1, [fp, #-12]
    53d8:	ldr	r0, [fp, #-8]
    53dc:	bl	8554 <MyGame_Example_Alt_parse_json_table>
    53e0:	str	r0, [fp, #-12]
    53e4:	b	5430 <MyGame_Example_Any_parse_json_union+0x120>
    53e8:	ldr	r3, [fp, #-8]
    53ec:	ldr	r3, [r3, #8]
    53f0:	and	r3, r3, #1
    53f4:	cmp	r3, #0
    53f8:	bne	5418 <MyGame_Example_Any_parse_json_union+0x108>
    53fc:	mov	r3, #15
    5400:	ldr	r2, [fp, #-16]
    5404:	ldr	r1, [fp, #-12]
    5408:	ldr	r0, [fp, #-8]
    540c:	bl	0 <flatcc_json_parser_set_error>
    5410:	mov	r3, r0
    5414:	b	5478 <MyGame_Example_Any_parse_json_union+0x168>
    5418:	ldr	r2, [fp, #-16]
    541c:	ldr	r1, [fp, #-12]
    5420:	ldr	r0, [fp, #-8]
    5424:	bl	0 <flatcc_json_parser_generic_json>
    5428:	mov	r3, r0
    542c:	b	5478 <MyGame_Example_Any_parse_json_union+0x168>
    5430:	ldr	r3, [fp, #-8]
    5434:	ldr	r3, [r3, #24]
    5438:	cmp	r3, #0
    543c:	beq	5448 <MyGame_Example_Any_parse_json_union+0x138>
    5440:	ldr	r3, [fp, #-12]
    5444:	b	5478 <MyGame_Example_Any_parse_json_union+0x168>
    5448:	ldr	r3, [fp, #4]
    544c:	ldr	r3, [r3]
    5450:	cmp	r3, #0
    5454:	bne	5474 <MyGame_Example_Any_parse_json_union+0x164>
    5458:	mov	r3, #33	; 0x21
    545c:	ldr	r2, [fp, #-16]
    5460:	ldr	r1, [fp, #-12]
    5464:	ldr	r0, [fp, #-8]
    5468:	bl	0 <flatcc_json_parser_set_error>
    546c:	mov	r3, r0
    5470:	b	5478 <MyGame_Example_Any_parse_json_union+0x168>
    5474:	ldr	r3, [fp, #-12]
    5478:	mov	r0, r3
    547c:	sub	sp, fp, #4
    5480:	ldr	fp, [sp]
    5484:	add	sp, sp, #4
    5488:	pop	{pc}		; (ldr pc, [sp], #4)

0000548c <MyGame_Example_Any_json_union_accept_type>:
    548c:	push	{fp}		; (str fp, [sp, #-4]!)
    5490:	add	fp, sp, #0
    5494:	sub	sp, sp, #12
    5498:	mov	r3, r0
    549c:	strb	r3, [fp, #-5]
    54a0:	ldrb	r3, [fp, #-5]
    54a4:	cmp	r3, #4
    54a8:	ldrls	pc, [pc, r3, lsl #2]
    54ac:	b	54ec <MyGame_Example_Any_json_union_accept_type+0x60>
    54b0:	.word	0x000054c4
    54b4:	.word	0x000054cc
    54b8:	.word	0x000054d4
    54bc:	.word	0x000054dc
    54c0:	.word	0x000054e4
    54c4:	mov	r3, #1
    54c8:	b	54f0 <MyGame_Example_Any_json_union_accept_type+0x64>
    54cc:	mov	r3, #1
    54d0:	b	54f0 <MyGame_Example_Any_json_union_accept_type+0x64>
    54d4:	mov	r3, #1
    54d8:	b	54f0 <MyGame_Example_Any_json_union_accept_type+0x64>
    54dc:	mov	r3, #1
    54e0:	b	54f0 <MyGame_Example_Any_json_union_accept_type+0x64>
    54e4:	mov	r3, #1
    54e8:	b	54f0 <MyGame_Example_Any_json_union_accept_type+0x64>
    54ec:	mov	r3, #0
    54f0:	mov	r0, r3
    54f4:	add	sp, fp, #0
    54f8:	pop	{fp}		; (ldr fp, [sp], #4)
    54fc:	bx	lr

00005500 <MyGame_Example_Any_parse_json_enum>:
    5500:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5504:	strd	r6, [sp, #8]
    5508:	strd	r8, [sp, #16]
    550c:	str	fp, [sp, #24]
    5510:	str	lr, [sp, #28]
    5514:	add	fp, sp, #28
    5518:	sub	sp, sp, #56	; 0x38
    551c:	str	r0, [fp, #-56]	; 0xffffffc8
    5520:	str	r1, [fp, #-60]	; 0xffffffc4
    5524:	str	r2, [fp, #-64]	; 0xffffffc0
    5528:	str	r3, [fp, #-68]	; 0xffffffbc
    552c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5530:	str	r3, [fp, #-32]	; 0xffffffe0
    5534:	ldr	r1, [fp, #-64]	; 0xffffffc0
    5538:	ldr	r0, [fp, #-60]	; 0xffffffc4
    553c:	bl	940 <flatcc_json_parser_symbol_part>
    5540:	strd	r0, [fp, #-44]	; 0xffffffd4
    5544:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    5548:	add	r1, pc, #872	; 0x368
    554c:	ldrd	r0, [r1]
    5550:	cmp	r3, r1
    5554:	cmpeq	r2, r0
    5558:	bhi	55f8 <MyGame_Example_Any_parse_json_enum+0xf8>
    555c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    5560:	mov	r0, #0
    5564:	mvn	r1, #255	; 0xff
    5568:	and	ip, r2, r0
    556c:	str	ip, [fp, #-76]	; 0xffffffb4
    5570:	and	r3, r3, r1
    5574:	str	r3, [fp, #-72]	; 0xffffffb8
    5578:	add	r3, pc, #832	; 0x340
    557c:	ldrd	r2, [r3]
    5580:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    5584:	cmp	r1, r3
    5588:	cmpeq	r0, r2
    558c:	bne	55f0 <MyGame_Example_Any_parse_json_enum+0xf0>
    5590:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5594:	str	r3, [fp, #-48]	; 0xffffffd0
    5598:	ldr	r3, [fp, #8]
    559c:	str	r3, [sp]
    55a0:	mov	r3, #3
    55a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    55a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    55ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    55b0:	bl	0 <flatcc_json_parser_match_constant>
    55b4:	str	r0, [fp, #-60]	; 0xffffffc4
    55b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    55bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    55c0:	cmp	r2, r3
    55c4:	beq	55e8 <MyGame_Example_Any_parse_json_enum+0xe8>
    55c8:	ldr	r1, [fp, #4]
    55cc:	mov	r2, #4
    55d0:	mov	r3, #0
    55d4:	strd	r2, [r1]
    55d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    55dc:	mov	r2, #0
    55e0:	str	r2, [r3]
    55e4:	b	5890 <MyGame_Example_Any_parse_json_enum+0x390>
    55e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    55ec:	b	5894 <MyGame_Example_Any_parse_json_enum+0x394>
    55f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    55f4:	b	5894 <MyGame_Example_Any_parse_json_enum+0x394>
    55f8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    55fc:	add	r1, pc, #708	; 0x2c4
    5600:	ldrd	r0, [r1]
    5604:	cmp	r3, r1
    5608:	cmpeq	r2, r0
    560c:	bne	5668 <MyGame_Example_Any_parse_json_enum+0x168>
    5610:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5614:	str	r3, [fp, #-48]	; 0xffffffd0
    5618:	ldr	r3, [fp, #8]
    561c:	str	r3, [sp]
    5620:	mov	r3, #8
    5624:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5628:	ldr	r1, [fp, #-48]	; 0xffffffd0
    562c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5630:	bl	0 <flatcc_json_parser_match_constant>
    5634:	str	r0, [fp, #-60]	; 0xffffffc4
    5638:	ldr	r2, [fp, #-60]	; 0xffffffc4
    563c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5640:	cmp	r2, r3
    5644:	beq	56e8 <MyGame_Example_Any_parse_json_enum+0x1e8>
    5648:	ldr	r1, [fp, #4]
    564c:	mov	r2, #3
    5650:	mov	r3, #0
    5654:	strd	r2, [r1]
    5658:	ldr	r3, [fp, #-68]	; 0xffffffbc
    565c:	mov	r2, #0
    5660:	str	r2, [r3]
    5664:	b	5890 <MyGame_Example_Any_parse_json_enum+0x390>
    5668:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    566c:	mvn	r0, #255	; 0xff
    5670:	mvn	r1, #0
    5674:	and	r8, r2, r0
    5678:	and	r9, r3, r1
    567c:	add	r3, pc, #588	; 0x24c
    5680:	ldrd	r2, [r3]
    5684:	cmp	r9, r3
    5688:	cmpeq	r8, r2
    568c:	bne	56f0 <MyGame_Example_Any_parse_json_enum+0x1f0>
    5690:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5694:	str	r3, [fp, #-48]	; 0xffffffd0
    5698:	ldr	r3, [fp, #8]
    569c:	str	r3, [sp]
    56a0:	mov	r3, #7
    56a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    56a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    56ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    56b0:	bl	0 <flatcc_json_parser_match_constant>
    56b4:	str	r0, [fp, #-60]	; 0xffffffc4
    56b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    56bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    56c0:	cmp	r2, r3
    56c4:	beq	56f8 <MyGame_Example_Any_parse_json_enum+0x1f8>
    56c8:	ldr	r1, [fp, #4]
    56cc:	mov	r2, #1
    56d0:	mov	r3, #0
    56d4:	strd	r2, [r1]
    56d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    56dc:	mov	r2, #0
    56e0:	str	r2, [r3]
    56e4:	b	5890 <MyGame_Example_Any_parse_json_enum+0x390>
    56e8:	nop	{0}
    56ec:	b	56fc <MyGame_Example_Any_parse_json_enum+0x1fc>
    56f0:	nop	{0}
    56f4:	b	56fc <MyGame_Example_Any_parse_json_enum+0x1fc>
    56f8:	nop	{0}
    56fc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    5700:	mov	r0, #0
    5704:	mvn	r1, #0
    5708:	and	r6, r2, r0
    570c:	and	r7, r3, r1
    5710:	add	r3, pc, #448	; 0x1c0
    5714:	ldrd	r2, [r3]
    5718:	cmp	r7, r3
    571c:	cmpeq	r6, r2
    5720:	bne	577c <MyGame_Example_Any_parse_json_enum+0x27c>
    5724:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5728:	str	r3, [fp, #-48]	; 0xffffffd0
    572c:	ldr	r3, [fp, #8]
    5730:	str	r3, [sp]
    5734:	mov	r3, #4
    5738:	ldr	r2, [fp, #-64]	; 0xffffffc0
    573c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5740:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5744:	bl	0 <flatcc_json_parser_match_constant>
    5748:	str	r0, [fp, #-60]	; 0xffffffc4
    574c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5750:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5754:	cmp	r2, r3
    5758:	beq	5784 <MyGame_Example_Any_parse_json_enum+0x284>
    575c:	ldr	r1, [fp, #4]
    5760:	mov	r2, #0
    5764:	mov	r3, #0
    5768:	strd	r2, [r1]
    576c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    5770:	mov	r2, #0
    5774:	str	r2, [r3]
    5778:	b	5890 <MyGame_Example_Any_parse_json_enum+0x390>
    577c:	nop	{0}
    5780:	b	5788 <MyGame_Example_Any_parse_json_enum+0x288>
    5784:	nop	{0}
    5788:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    578c:	add	r1, pc, #332	; 0x14c
    5790:	ldrd	r0, [r1]
    5794:	cmp	r3, r1
    5798:	cmpeq	r2, r0
    579c:	bne	5888 <MyGame_Example_Any_parse_json_enum+0x388>
    57a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    57a4:	add	r3, r3, #8
    57a8:	str	r3, [fp, #-60]	; 0xffffffc4
    57ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
    57b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    57b4:	bl	940 <flatcc_json_parser_symbol_part>
    57b8:	strd	r0, [fp, #-44]	; 0xffffffd4
    57bc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    57c0:	add	r1, pc, #288	; 0x120
    57c4:	ldrd	r0, [r1]
    57c8:	cmp	r3, r1
    57cc:	cmpeq	r2, r0
    57d0:	bne	5880 <MyGame_Example_Any_parse_json_enum+0x380>
    57d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    57d8:	add	r3, r3, #8
    57dc:	str	r3, [fp, #-60]	; 0xffffffc4
    57e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    57e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    57e8:	bl	940 <flatcc_json_parser_symbol_part>
    57ec:	strd	r0, [fp, #-44]	; 0xffffffd4
    57f0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    57f4:	mvn	r0, #255	; 0xff
    57f8:	mvn	r1, #0
    57fc:	and	r4, r2, r0
    5800:	and	r5, r3, r1
    5804:	add	r3, pc, #228	; 0xe4
    5808:	ldrd	r2, [r3]
    580c:	cmp	r5, r3
    5810:	cmpeq	r4, r2
    5814:	bne	5878 <MyGame_Example_Any_parse_json_enum+0x378>
    5818:	ldr	r3, [fp, #-60]	; 0xffffffc4
    581c:	str	r3, [fp, #-48]	; 0xffffffd0
    5820:	ldr	r3, [fp, #8]
    5824:	str	r3, [sp]
    5828:	mov	r3, #7
    582c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5830:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5834:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5838:	bl	0 <flatcc_json_parser_match_constant>
    583c:	str	r0, [fp, #-60]	; 0xffffffc4
    5840:	ldr	r2, [fp, #-60]	; 0xffffffc4
    5844:	ldr	r3, [fp, #-48]	; 0xffffffd0
    5848:	cmp	r2, r3
    584c:	beq	5870 <MyGame_Example_Any_parse_json_enum+0x370>
    5850:	ldr	r1, [fp, #4]
    5854:	mov	r2, #2
    5858:	mov	r3, #0
    585c:	strd	r2, [r1]
    5860:	ldr	r3, [fp, #-68]	; 0xffffffbc
    5864:	mov	r2, #0
    5868:	str	r2, [r3]
    586c:	b	5890 <MyGame_Example_Any_parse_json_enum+0x390>
    5870:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5874:	b	5894 <MyGame_Example_Any_parse_json_enum+0x394>
    5878:	ldr	r3, [fp, #-32]	; 0xffffffe0
    587c:	b	5894 <MyGame_Example_Any_parse_json_enum+0x394>
    5880:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5884:	b	5894 <MyGame_Example_Any_parse_json_enum+0x394>
    5888:	ldr	r3, [fp, #-32]	; 0xffffffe0
    588c:	b	5894 <MyGame_Example_Any_parse_json_enum+0x394>
    5890:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5894:	mov	r0, r3
    5898:	sub	sp, fp, #28
    589c:	ldrd	r4, [sp]
    58a0:	ldrd	r6, [sp, #8]
    58a4:	ldrd	r8, [sp, #16]
    58a8:	ldr	fp, [sp, #24]
    58ac:	add	sp, sp, #28
    58b0:	pop	{pc}		; (ldr pc, [sp], #4)
    58b4:	nop	{0}
    58b8:	.word	0x746571ff
    58bc:	.word	0x4d6f6e73
    58c0:	.word	0x00000000
    58c4:	.word	0x416c7400
    58c8:	.word	0x74657232
    58cc:	.word	0x4d6f6e73
    58d0:	.word	0x74657200
    58d4:	.word	0x4d6f6e73
    58d8:	.word	0x00000000
    58dc:	.word	0x4e4f4e45
    58e0:	.word	0x53696d70
    58e4:	.word	0x54657374
    58e8:	.word	0x626c6557
    58ec:	.word	0x6c655461
    58f0:	.word	0x6e756d00
    58f4:	.word	0x69746845

000058f8 <MyGame_Example_Test_parse_json_struct_inline>:
    58f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    58fc:	strd	r6, [sp, #8]
    5900:	str	fp, [sp, #16]
    5904:	str	lr, [sp, #20]
    5908:	add	fp, sp, #20
    590c:	sub	sp, sp, #48	; 0x30
    5910:	str	r0, [fp, #-48]	; 0xffffffd0
    5914:	str	r1, [fp, #-52]	; 0xffffffcc
    5918:	str	r2, [fp, #-56]	; 0xffffffc8
    591c:	str	r3, [fp, #-60]	; 0xffffffc4
    5920:	sub	r3, fp, #40	; 0x28
    5924:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5928:	ldr	r1, [fp, #-52]	; 0xffffffcc
    592c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5930:	bl	a84 <flatcc_json_parser_object_start>
    5934:	str	r0, [fp, #-52]	; 0xffffffcc
    5938:	b	5ba0 <MyGame_Example_Test_parse_json_struct_inline+0x2a8>
    593c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5940:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5944:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5948:	bl	60c <flatcc_json_parser_symbol_start>
    594c:	str	r0, [fp, #-52]	; 0xffffffcc
    5950:	ldr	r1, [fp, #-56]	; 0xffffffc8
    5954:	ldr	r0, [fp, #-52]	; 0xffffffcc
    5958:	bl	940 <flatcc_json_parser_symbol_part>
    595c:	strd	r0, [fp, #-28]	; 0xffffffe4
    5960:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    5964:	mov	r0, #0
    5968:	mov	r1, #-16777216	; 0xff000000
    596c:	and	r4, r2, r0
    5970:	and	r5, r3, r1
    5974:	cmp	r5, #1644167168	; 0x62000000
    5978:	cmpeq	r4, #0
    597c:	bne	5a6c <MyGame_Example_Test_parse_json_struct_inline+0x174>
    5980:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5984:	str	r3, [fp, #-32]	; 0xffffffe0
    5988:	mov	r3, #1
    598c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5990:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5994:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5998:	bl	f54 <flatcc_json_parser_match_symbol>
    599c:	str	r0, [fp, #-52]	; 0xffffffcc
    59a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    59a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    59a8:	cmp	r2, r3
    59ac:	beq	5a54 <MyGame_Example_Test_parse_json_struct_inline+0x15c>
    59b0:	mov	r3, #0
    59b4:	strb	r3, [fp, #-41]	; 0xffffffd7
    59b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    59bc:	add	r3, r3, #2
    59c0:	str	r3, [fp, #-36]	; 0xffffffdc
    59c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    59c8:	str	r3, [fp, #-32]	; 0xffffffe0
    59cc:	sub	r3, fp, #41	; 0x29
    59d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    59d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    59d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    59dc:	bl	1e14 <flatcc_json_parser_int8>
    59e0:	str	r0, [fp, #-52]	; 0xffffffcc
    59e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    59e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    59ec:	cmp	r2, r3
    59f0:	bne	5a40 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    59f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    59f8:	str	r3, [fp, #-32]	; 0xffffffe0
    59fc:	sub	r3, fp, #41	; 0x29
    5a00:	str	r3, [sp]
    5a04:	movw	r3, #0
    5a08:	movt	r3, #0
    5a0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5a10:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5a18:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    5a1c:	str	r0, [fp, #-52]	; 0xffffffcc
    5a20:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5a28:	cmp	r2, r3
    5a2c:	beq	5bb4 <MyGame_Example_Test_parse_json_struct_inline+0x2bc>
    5a30:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5a34:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5a38:	cmp	r2, r3
    5a3c:	beq	5bb4 <MyGame_Example_Test_parse_json_struct_inline+0x2bc>
    5a40:	ldrsb	r3, [fp, #-41]	; 0xffffffd7
    5a44:	mov	r1, r3
    5a48:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5a4c:	bl	1e0 <flatbuffers_int8_write_to_pe>
    5a50:	b	5b88 <MyGame_Example_Test_parse_json_struct_inline+0x290>
    5a54:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5a58:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5a5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5a60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5a64:	str	r0, [fp, #-52]	; 0xffffffcc
    5a68:	b	5b88 <MyGame_Example_Test_parse_json_struct_inline+0x290>
    5a6c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    5a70:	mov	r0, #0
    5a74:	mov	r1, #-16777216	; 0xff000000
    5a78:	and	r6, r2, r0
    5a7c:	and	r7, r3, r1
    5a80:	cmp	r7, #1627389952	; 0x61000000
    5a84:	cmpeq	r6, #0
    5a88:	bne	5b74 <MyGame_Example_Test_parse_json_struct_inline+0x27c>
    5a8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5a90:	str	r3, [fp, #-32]	; 0xffffffe0
    5a94:	mov	r3, #1
    5a98:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5a9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5aa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5aa4:	bl	f54 <flatcc_json_parser_match_symbol>
    5aa8:	str	r0, [fp, #-52]	; 0xffffffcc
    5aac:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5ab0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5ab4:	cmp	r2, r3
    5ab8:	beq	5b5c <MyGame_Example_Test_parse_json_struct_inline+0x264>
    5abc:	mov	r3, #0
    5ac0:	strh	r3, [fp, #-44]	; 0xffffffd4
    5ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    5ac8:	str	r3, [fp, #-36]	; 0xffffffdc
    5acc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5ad0:	str	r3, [fp, #-32]	; 0xffffffe0
    5ad4:	sub	r3, fp, #44	; 0x2c
    5ad8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5adc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5ae0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5ae4:	bl	1d38 <flatcc_json_parser_int16>
    5ae8:	str	r0, [fp, #-52]	; 0xffffffcc
    5aec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    5af0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5af4:	cmp	r2, r3
    5af8:	bne	5b48 <MyGame_Example_Test_parse_json_struct_inline+0x250>
    5afc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5b00:	str	r3, [fp, #-32]	; 0xffffffe0
    5b04:	sub	r3, fp, #44	; 0x2c
    5b08:	str	r3, [sp]
    5b0c:	movw	r3, #0
    5b10:	movt	r3, #0
    5b14:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5b18:	ldr	r1, [fp, #-32]	; 0xffffffe0
    5b1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5b20:	bl	2b70 <flatcc_json_parser_symbolic_int16>
    5b24:	str	r0, [fp, #-52]	; 0xffffffcc
    5b28:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    5b30:	cmp	r2, r3
    5b34:	beq	5bbc <MyGame_Example_Test_parse_json_struct_inline+0x2c4>
    5b38:	ldr	r2, [fp, #-52]	; 0xffffffcc
    5b3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5b40:	cmp	r2, r3
    5b44:	beq	5bbc <MyGame_Example_Test_parse_json_struct_inline+0x2c4>
    5b48:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
    5b4c:	mov	r1, r3
    5b50:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5b54:	bl	254 <flatbuffers_int16_write_to_pe>
    5b58:	b	5b88 <MyGame_Example_Test_parse_json_struct_inline+0x290>
    5b5c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5b60:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5b64:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5b68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b6c:	str	r0, [fp, #-52]	; 0xffffffcc
    5b70:	b	5b88 <MyGame_Example_Test_parse_json_struct_inline+0x290>
    5b74:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5b78:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5b80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b84:	str	r0, [fp, #-52]	; 0xffffffcc
    5b88:	sub	r3, fp, #40	; 0x28
    5b8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5b90:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5b94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5b98:	bl	b78 <flatcc_json_parser_object_end>
    5b9c:	str	r0, [fp, #-52]	; 0xffffffcc
    5ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5ba4:	cmp	r3, #0
    5ba8:	bne	593c <MyGame_Example_Test_parse_json_struct_inline+0x44>
    5bac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5bb0:	b	5bd8 <MyGame_Example_Test_parse_json_struct_inline+0x2e0>
    5bb4:	nop	{0}
    5bb8:	b	5bc0 <MyGame_Example_Test_parse_json_struct_inline+0x2c8>
    5bbc:	nop	{0}
    5bc0:	mov	r3, #33	; 0x21
    5bc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    5bc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5bcc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5bd0:	bl	0 <flatcc_json_parser_set_error>
    5bd4:	mov	r3, r0
    5bd8:	mov	r0, r3
    5bdc:	sub	sp, fp, #20
    5be0:	ldrd	r4, [sp]
    5be4:	ldrd	r6, [sp, #8]
    5be8:	ldr	fp, [sp, #16]
    5bec:	add	sp, sp, #20
    5bf0:	pop	{pc}		; (ldr pc, [sp], #4)

00005bf4 <MyGame_Example_Test_parse_json_struct>:
    5bf4:	str	fp, [sp, #-8]!
    5bf8:	str	lr, [sp, #4]
    5bfc:	add	fp, sp, #4
    5c00:	sub	sp, sp, #24
    5c04:	str	r0, [fp, #-16]
    5c08:	str	r1, [fp, #-20]	; 0xffffffec
    5c0c:	str	r2, [fp, #-24]	; 0xffffffe8
    5c10:	str	r3, [fp, #-28]	; 0xffffffe4
    5c14:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c18:	mov	r2, #0
    5c1c:	str	r2, [r3]
    5c20:	ldr	r3, [fp, #-16]
    5c24:	ldr	r3, [r3]
    5c28:	mov	r2, #2
    5c2c:	mov	r1, #4
    5c30:	mov	r0, r3
    5c34:	bl	0 <flatcc_builder_start_struct>
    5c38:	str	r0, [fp, #-8]
    5c3c:	ldr	r3, [fp, #-8]
    5c40:	cmp	r3, #0
    5c44:	beq	5ca4 <MyGame_Example_Test_parse_json_struct+0xb0>
    5c48:	ldr	r3, [fp, #-8]
    5c4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5c50:	ldr	r1, [fp, #-20]	; 0xffffffec
    5c54:	ldr	r0, [fp, #-16]
    5c58:	bl	58f8 <MyGame_Example_Test_parse_json_struct_inline>
    5c5c:	str	r0, [fp, #-20]	; 0xffffffec
    5c60:	ldr	r2, [fp, #-20]	; 0xffffffec
    5c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5c68:	cmp	r2, r3
    5c6c:	beq	5cac <MyGame_Example_Test_parse_json_struct+0xb8>
    5c70:	ldr	r3, [fp, #-16]
    5c74:	ldr	r3, [r3]
    5c78:	mov	r0, r3
    5c7c:	bl	0 <flatcc_builder_end_struct>
    5c80:	mov	r2, r0
    5c84:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c88:	str	r2, [r3]
    5c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5c90:	ldr	r3, [r3]
    5c94:	cmp	r3, #0
    5c98:	beq	5cac <MyGame_Example_Test_parse_json_struct+0xb8>
    5c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
    5ca0:	b	5cc8 <MyGame_Example_Test_parse_json_struct+0xd4>
    5ca4:	nop	{0}
    5ca8:	b	5cb0 <MyGame_Example_Test_parse_json_struct+0xbc>
    5cac:	nop	{0}
    5cb0:	mov	r3, #33	; 0x21
    5cb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5cb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5cbc:	ldr	r0, [fp, #-16]
    5cc0:	bl	0 <flatcc_json_parser_set_error>
    5cc4:	mov	r3, r0
    5cc8:	mov	r0, r3
    5ccc:	sub	sp, fp, #4
    5cd0:	ldr	fp, [sp]
    5cd4:	add	sp, sp, #4
    5cd8:	pop	{pc}		; (ldr pc, [sp], #4)

00005cdc <MyGame_Example_emptystruct_parse_json_struct_inline>:
    5cdc:	str	fp, [sp, #-8]!
    5ce0:	str	lr, [sp, #4]
    5ce4:	add	fp, sp, #4
    5ce8:	sub	sp, sp, #24
    5cec:	str	r0, [fp, #-16]
    5cf0:	str	r1, [fp, #-20]	; 0xffffffec
    5cf4:	str	r2, [fp, #-24]	; 0xffffffe8
    5cf8:	str	r3, [fp, #-28]	; 0xffffffe4
    5cfc:	sub	r3, fp, #8
    5d00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5d04:	ldr	r1, [fp, #-20]	; 0xffffffec
    5d08:	ldr	r0, [fp, #-16]
    5d0c:	bl	a84 <flatcc_json_parser_object_start>
    5d10:	str	r0, [fp, #-20]	; 0xffffffec
    5d14:	b	5d44 <MyGame_Example_emptystruct_parse_json_struct_inline+0x68>
    5d18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5d20:	ldr	r0, [fp, #-16]
    5d24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5d28:	str	r0, [fp, #-20]	; 0xffffffec
    5d2c:	sub	r3, fp, #8
    5d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5d34:	ldr	r1, [fp, #-20]	; 0xffffffec
    5d38:	ldr	r0, [fp, #-16]
    5d3c:	bl	b78 <flatcc_json_parser_object_end>
    5d40:	str	r0, [fp, #-20]	; 0xffffffec
    5d44:	ldr	r3, [fp, #-8]
    5d48:	cmp	r3, #0
    5d4c:	bne	5d18 <MyGame_Example_emptystruct_parse_json_struct_inline+0x3c>
    5d50:	ldr	r3, [fp, #-20]	; 0xffffffec
    5d54:	mov	r0, r3
    5d58:	sub	sp, fp, #4
    5d5c:	ldr	fp, [sp]
    5d60:	add	sp, sp, #4
    5d64:	pop	{pc}		; (ldr pc, [sp], #4)

00005d68 <MyGame_Example_emptystruct_parse_json_struct>:
    5d68:	str	fp, [sp, #-8]!
    5d6c:	str	lr, [sp, #4]
    5d70:	add	fp, sp, #4
    5d74:	sub	sp, sp, #24
    5d78:	str	r0, [fp, #-16]
    5d7c:	str	r1, [fp, #-20]	; 0xffffffec
    5d80:	str	r2, [fp, #-24]	; 0xffffffe8
    5d84:	str	r3, [fp, #-28]	; 0xffffffe4
    5d88:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5d8c:	mov	r2, #0
    5d90:	str	r2, [r3]
    5d94:	ldr	r3, [fp, #-16]
    5d98:	ldr	r3, [r3]
    5d9c:	mov	r2, #1
    5da0:	mov	r1, #0
    5da4:	mov	r0, r3
    5da8:	bl	0 <flatcc_builder_start_struct>
    5dac:	str	r0, [fp, #-8]
    5db0:	ldr	r3, [fp, #-8]
    5db4:	cmp	r3, #0
    5db8:	beq	5e18 <MyGame_Example_emptystruct_parse_json_struct+0xb0>
    5dbc:	ldr	r3, [fp, #-8]
    5dc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5dc4:	ldr	r1, [fp, #-20]	; 0xffffffec
    5dc8:	ldr	r0, [fp, #-16]
    5dcc:	bl	5cdc <MyGame_Example_emptystruct_parse_json_struct_inline>
    5dd0:	str	r0, [fp, #-20]	; 0xffffffec
    5dd4:	ldr	r2, [fp, #-20]	; 0xffffffec
    5dd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    5ddc:	cmp	r2, r3
    5de0:	beq	5e20 <MyGame_Example_emptystruct_parse_json_struct+0xb8>
    5de4:	ldr	r3, [fp, #-16]
    5de8:	ldr	r3, [r3]
    5dec:	mov	r0, r3
    5df0:	bl	0 <flatcc_builder_end_struct>
    5df4:	mov	r2, r0
    5df8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5dfc:	str	r2, [r3]
    5e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5e04:	ldr	r3, [r3]
    5e08:	cmp	r3, #0
    5e0c:	beq	5e20 <MyGame_Example_emptystruct_parse_json_struct+0xb8>
    5e10:	ldr	r3, [fp, #-20]	; 0xffffffec
    5e14:	b	5e3c <MyGame_Example_emptystruct_parse_json_struct+0xd4>
    5e18:	nop	{0}
    5e1c:	b	5e24 <MyGame_Example_emptystruct_parse_json_struct+0xbc>
    5e20:	nop	{0}
    5e24:	mov	r3, #33	; 0x21
    5e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5e30:	ldr	r0, [fp, #-16]
    5e34:	bl	0 <flatcc_json_parser_set_error>
    5e38:	mov	r3, r0
    5e3c:	mov	r0, r3
    5e40:	sub	sp, fp, #4
    5e44:	ldr	fp, [sp]
    5e48:	add	sp, sp, #4
    5e4c:	pop	{pc}		; (ldr pc, [sp], #4)

00005e50 <MyGame_Example_emptytable_parse_json_table>:
    5e50:	str	fp, [sp, #-8]!
    5e54:	str	lr, [sp, #4]
    5e58:	add	fp, sp, #4
    5e5c:	sub	sp, sp, #24
    5e60:	str	r0, [fp, #-16]
    5e64:	str	r1, [fp, #-20]	; 0xffffffec
    5e68:	str	r2, [fp, #-24]	; 0xffffffe8
    5e6c:	str	r3, [fp, #-28]	; 0xffffffe4
    5e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5e74:	mov	r2, #0
    5e78:	str	r2, [r3]
    5e7c:	ldr	r3, [fp, #-16]
    5e80:	ldr	r3, [r3]
    5e84:	mov	r1, #0
    5e88:	mov	r0, r3
    5e8c:	bl	0 <flatcc_builder_start_table>
    5e90:	mov	r3, r0
    5e94:	cmp	r3, #0
    5e98:	bne	5f48 <MyGame_Example_emptytable_parse_json_table+0xf8>
    5e9c:	sub	r3, fp, #8
    5ea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ea8:	ldr	r0, [fp, #-16]
    5eac:	bl	a84 <flatcc_json_parser_object_start>
    5eb0:	str	r0, [fp, #-20]	; 0xffffffec
    5eb4:	b	5ef8 <MyGame_Example_emptytable_parse_json_table+0xa8>
    5eb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ebc:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ec0:	ldr	r0, [fp, #-16]
    5ec4:	bl	60c <flatcc_json_parser_symbol_start>
    5ec8:	str	r0, [fp, #-20]	; 0xffffffec
    5ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ed4:	ldr	r0, [fp, #-16]
    5ed8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5edc:	str	r0, [fp, #-20]	; 0xffffffec
    5ee0:	sub	r3, fp, #8
    5ee4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ee8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5eec:	ldr	r0, [fp, #-16]
    5ef0:	bl	b78 <flatcc_json_parser_object_end>
    5ef4:	str	r0, [fp, #-20]	; 0xffffffec
    5ef8:	ldr	r3, [fp, #-8]
    5efc:	cmp	r3, #0
    5f00:	bne	5eb8 <MyGame_Example_emptytable_parse_json_table+0x68>
    5f04:	ldr	r3, [fp, #-16]
    5f08:	ldr	r3, [r3, #24]
    5f0c:	cmp	r3, #0
    5f10:	bne	5f50 <MyGame_Example_emptytable_parse_json_table+0x100>
    5f14:	ldr	r3, [fp, #-16]
    5f18:	ldr	r3, [r3]
    5f1c:	mov	r0, r3
    5f20:	bl	0 <flatcc_builder_end_table>
    5f24:	mov	r2, r0
    5f28:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5f2c:	str	r2, [r3]
    5f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    5f34:	ldr	r3, [r3]
    5f38:	cmp	r3, #0
    5f3c:	beq	5f58 <MyGame_Example_emptytable_parse_json_table+0x108>
    5f40:	ldr	r3, [fp, #-20]	; 0xffffffec
    5f44:	b	5f74 <MyGame_Example_emptytable_parse_json_table+0x124>
    5f48:	nop	{0}
    5f4c:	b	5f5c <MyGame_Example_emptytable_parse_json_table+0x10c>
    5f50:	nop	{0}
    5f54:	b	5f5c <MyGame_Example_emptytable_parse_json_table+0x10c>
    5f58:	nop	{0}
    5f5c:	mov	r3, #33	; 0x21
    5f60:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f64:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f68:	ldr	r0, [fp, #-16]
    5f6c:	bl	0 <flatcc_json_parser_set_error>
    5f70:	mov	r3, r0
    5f74:	mov	r0, r3
    5f78:	sub	sp, fp, #4
    5f7c:	ldr	fp, [sp]
    5f80:	add	sp, sp, #4
    5f84:	pop	{pc}		; (ldr pc, [sp], #4)

00005f88 <MyGame_Example_with_emptystruct_parse_json_table>:
    5f88:	strd	r4, [sp, #-16]!
    5f8c:	str	fp, [sp, #8]
    5f90:	str	lr, [sp, #12]
    5f94:	add	fp, sp, #12
    5f98:	sub	sp, sp, #40	; 0x28
    5f9c:	str	r0, [fp, #-40]	; 0xffffffd8
    5fa0:	str	r1, [fp, #-44]	; 0xffffffd4
    5fa4:	str	r2, [fp, #-48]	; 0xffffffd0
    5fa8:	str	r3, [fp, #-52]	; 0xffffffcc
    5fac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5fb0:	mov	r2, #0
    5fb4:	str	r2, [r3]
    5fb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    5fbc:	ldr	r3, [r3]
    5fc0:	mov	r1, #1
    5fc4:	mov	r0, r3
    5fc8:	bl	0 <flatcc_builder_start_table>
    5fcc:	mov	r3, r0
    5fd0:	cmp	r3, #0
    5fd4:	bne	6148 <MyGame_Example_with_emptystruct_parse_json_table+0x1c0>
    5fd8:	sub	r3, fp, #32
    5fdc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    5fe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5fe8:	bl	a84 <flatcc_json_parser_object_start>
    5fec:	str	r0, [fp, #-44]	; 0xffffffd4
    5ff0:	b	60f8 <MyGame_Example_with_emptystruct_parse_json_table+0x170>
    5ff4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    5ff8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6000:	bl	60c <flatcc_json_parser_symbol_start>
    6004:	str	r0, [fp, #-44]	; 0xffffffd4
    6008:	ldr	r1, [fp, #-48]	; 0xffffffd0
    600c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6010:	bl	940 <flatcc_json_parser_symbol_part>
    6014:	strd	r0, [fp, #-20]	; 0xffffffec
    6018:	ldrd	r2, [fp, #-20]	; 0xffffffec
    601c:	mov	r0, #-16777216	; 0xff000000
    6020:	mvn	r1, #0
    6024:	and	r4, r2, r0
    6028:	and	r5, r3, r1
    602c:	add	r3, pc, #356	; 0x164
    6030:	ldrd	r2, [r3]
    6034:	cmp	r5, r3
    6038:	cmpeq	r4, r2
    603c:	bne	60cc <MyGame_Example_with_emptystruct_parse_json_table+0x144>
    6040:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6044:	str	r3, [fp, #-24]	; 0xffffffe8
    6048:	mov	r3, #5
    604c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    6050:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6054:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6058:	bl	f54 <flatcc_json_parser_match_symbol>
    605c:	str	r0, [fp, #-44]	; 0xffffffd4
    6060:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6064:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6068:	cmp	r2, r3
    606c:	beq	60b4 <MyGame_Example_with_emptystruct_parse_json_table+0x12c>
    6070:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6074:	ldr	r0, [r3]
    6078:	mov	r3, #1
    607c:	mov	r2, #0
    6080:	mov	r1, #0
    6084:	bl	0 <flatcc_builder_table_add>
    6088:	str	r0, [fp, #-28]	; 0xffffffe4
    608c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    6090:	cmp	r3, #0
    6094:	beq	6150 <MyGame_Example_with_emptystruct_parse_json_table+0x1c8>
    6098:	ldr	r3, [fp, #-28]	; 0xffffffe4
    609c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    60a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    60a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    60a8:	bl	5cdc <MyGame_Example_emptystruct_parse_json_struct_inline>
    60ac:	str	r0, [fp, #-44]	; 0xffffffd4
    60b0:	b	60e0 <MyGame_Example_with_emptystruct_parse_json_table+0x158>
    60b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    60b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    60bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    60c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60c4:	str	r0, [fp, #-44]	; 0xffffffd4
    60c8:	b	60e0 <MyGame_Example_with_emptystruct_parse_json_table+0x158>
    60cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    60d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    60d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    60d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60dc:	str	r0, [fp, #-44]	; 0xffffffd4
    60e0:	sub	r3, fp, #32
    60e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    60e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    60ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    60f0:	bl	b78 <flatcc_json_parser_object_end>
    60f4:	str	r0, [fp, #-44]	; 0xffffffd4
    60f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    60fc:	cmp	r3, #0
    6100:	bne	5ff4 <MyGame_Example_with_emptystruct_parse_json_table+0x6c>
    6104:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6108:	ldr	r3, [r3, #24]
    610c:	cmp	r3, #0
    6110:	bne	6158 <MyGame_Example_with_emptystruct_parse_json_table+0x1d0>
    6114:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6118:	ldr	r3, [r3]
    611c:	mov	r0, r3
    6120:	bl	0 <flatcc_builder_end_table>
    6124:	mov	r2, r0
    6128:	ldr	r3, [fp, #-52]	; 0xffffffcc
    612c:	str	r2, [r3]
    6130:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6134:	ldr	r3, [r3]
    6138:	cmp	r3, #0
    613c:	beq	6160 <MyGame_Example_with_emptystruct_parse_json_table+0x1d8>
    6140:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6144:	b	617c <MyGame_Example_with_emptystruct_parse_json_table+0x1f4>
    6148:	nop	{0}
    614c:	b	6164 <MyGame_Example_with_emptystruct_parse_json_table+0x1dc>
    6150:	nop	{0}
    6154:	b	6164 <MyGame_Example_with_emptystruct_parse_json_table+0x1dc>
    6158:	nop	{0}
    615c:	b	6164 <MyGame_Example_with_emptystruct_parse_json_table+0x1dc>
    6160:	nop	{0}
    6164:	mov	r3, #33	; 0x21
    6168:	ldr	r2, [fp, #-48]	; 0xffffffd0
    616c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6170:	ldr	r0, [fp, #-40]	; 0xffffffd8
    6174:	bl	0 <flatcc_json_parser_set_error>
    6178:	mov	r3, r0
    617c:	mov	r0, r3
    6180:	sub	sp, fp, #12
    6184:	ldrd	r4, [sp]
    6188:	ldr	fp, [sp, #8]
    618c:	add	sp, sp, #12
    6190:	pop	{pc}		; (ldr pc, [sp], #4)
    6194:	nop	{0}
    6198:	.word	0x79000000
    619c:	.word	0x656d7074

000061a0 <MyGame_Example_notemptyenum_parse_json_enum>:
    61a0:	strd	r4, [sp, #-16]!
    61a4:	str	fp, [sp, #8]
    61a8:	str	lr, [sp, #12]
    61ac:	add	fp, sp, #12
    61b0:	sub	sp, sp, #48	; 0x30
    61b4:	str	r0, [fp, #-40]	; 0xffffffd8
    61b8:	str	r1, [fp, #-44]	; 0xffffffd4
    61bc:	str	r2, [fp, #-48]	; 0xffffffd0
    61c0:	str	r3, [fp, #-52]	; 0xffffffcc
    61c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    61c8:	str	r3, [fp, #-16]
    61cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    61d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    61d4:	bl	940 <flatcc_json_parser_symbol_part>
    61d8:	strd	r0, [fp, #-28]	; 0xffffffe4
    61dc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    61e0:	mov	r0, #0
    61e4:	mov	r1, #-16777216	; 0xff000000
    61e8:	and	r4, r2, r0
    61ec:	and	r5, r3, r1
    61f0:	cmp	r5, #2013265920	; 0x78000000
    61f4:	cmpeq	r4, #0
    61f8:	bne	6260 <MyGame_Example_notemptyenum_parse_json_enum+0xc0>
    61fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6200:	str	r3, [fp, #-32]	; 0xffffffe0
    6204:	ldr	r3, [fp, #8]
    6208:	str	r3, [sp]
    620c:	mov	r3, #1
    6210:	ldr	r2, [fp, #-48]	; 0xffffffd0
    6214:	ldr	r1, [fp, #-32]	; 0xffffffe0
    6218:	ldr	r0, [fp, #-40]	; 0xffffffd8
    621c:	bl	0 <flatcc_json_parser_match_constant>
    6220:	str	r0, [fp, #-44]	; 0xffffffd4
    6224:	ldr	r2, [fp, #-44]	; 0xffffffd4
    6228:	ldr	r3, [fp, #-32]	; 0xffffffe0
    622c:	cmp	r2, r3
    6230:	beq	6258 <MyGame_Example_notemptyenum_parse_json_enum+0xb8>
    6234:	ldr	r1, [fp, #4]
    6238:	mov	r2, #0
    623c:	mov	r3, #0
    6240:	strd	r2, [r1]
    6244:	ldr	r3, [fp, #-52]	; 0xffffffcc
    6248:	mov	r2, #0
    624c:	str	r2, [r3]
    6250:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6254:	b	6264 <MyGame_Example_notemptyenum_parse_json_enum+0xc4>
    6258:	ldr	r3, [fp, #-16]
    625c:	b	6264 <MyGame_Example_notemptyenum_parse_json_enum+0xc4>
    6260:	ldr	r3, [fp, #-16]
    6264:	mov	r0, r3
    6268:	sub	sp, fp, #12
    626c:	ldrd	r4, [sp]
    6270:	ldr	fp, [sp, #8]
    6274:	add	sp, sp, #12
    6278:	pop	{pc}		; (ldr pc, [sp], #4)

0000627c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    627c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6280:	strd	r6, [sp, #8]
    6284:	strd	r8, [sp, #16]
    6288:	str	fp, [sp, #24]
    628c:	str	lr, [sp, #28]
    6290:	add	fp, sp, #28
    6294:	sub	sp, sp, #56	; 0x38
    6298:	str	r0, [fp, #-56]	; 0xffffffc8
    629c:	str	r1, [fp, #-60]	; 0xffffffc4
    62a0:	str	r2, [fp, #-64]	; 0xffffffc0
    62a4:	str	r3, [fp, #-68]	; 0xffffffbc
    62a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    62ac:	mov	r2, #0
    62b0:	str	r2, [r3]
    62b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    62b8:	ldr	r3, [r3]
    62bc:	mov	r1, #4
    62c0:	mov	r0, r3
    62c4:	bl	0 <flatcc_builder_start_table>
    62c8:	mov	r3, r0
    62cc:	cmp	r3, #0
    62d0:	bne	68f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x674>
    62d4:	sub	r3, fp, #48	; 0x30
    62d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    62dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    62e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    62e4:	bl	a84 <flatcc_json_parser_object_start>
    62e8:	str	r0, [fp, #-60]	; 0xffffffc4
    62ec:	b	68a0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x624>
    62f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    62f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    62f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    62fc:	bl	60c <flatcc_json_parser_symbol_start>
    6300:	str	r0, [fp, #-60]	; 0xffffffc4
    6304:	ldr	r1, [fp, #-64]	; 0xffffffc0
    6308:	ldr	r0, [fp, #-60]	; 0xffffffc4
    630c:	bl	940 <flatcc_json_parser_symbol_part>
    6310:	strd	r0, [fp, #-36]	; 0xffffffdc
    6314:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    6318:	mov	r0, #0
    631c:	movt	r0, #65535	; 0xffff
    6320:	mvn	r1, #0
    6324:	and	r4, r2, r0
    6328:	and	r5, r3, r1
    632c:	add	r3, pc, #956	; 0x3bc
    6330:	ldrd	r2, [r3]
    6334:	cmp	r5, r3
    6338:	cmpeq	r4, r2
    633c:	bne	6450 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d4>
    6340:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6344:	str	r3, [fp, #-40]	; 0xffffffd8
    6348:	mov	r3, #6
    634c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6350:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6354:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6358:	bl	f54 <flatcc_json_parser_match_symbol>
    635c:	str	r0, [fp, #-60]	; 0xffffffc4
    6360:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6364:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6368:	cmp	r2, r3
    636c:	beq	6588 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x30c>
    6370:	mov	r3, #0
    6374:	strb	r3, [fp, #-49]	; 0xffffffcf
    6378:	ldr	r3, [fp, #-60]	; 0xffffffc4
    637c:	str	r3, [fp, #-40]	; 0xffffffd8
    6380:	sub	r3, fp, #49	; 0x31
    6384:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6388:	ldr	r1, [fp, #-40]	; 0xffffffd8
    638c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6390:	bl	1e14 <flatcc_json_parser_int8>
    6394:	str	r0, [fp, #-60]	; 0xffffffc4
    6398:	ldr	r2, [fp, #-40]	; 0xffffffd8
    639c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    63a0:	cmp	r2, r3
    63a4:	bne	63f4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x178>
    63a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    63ac:	str	r3, [fp, #-40]	; 0xffffffd8
    63b0:	sub	r3, fp, #49	; 0x31
    63b4:	str	r3, [sp]
    63b8:	movw	r3, #0
    63bc:	movt	r3, #0
    63c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    63c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    63c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    63cc:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    63d0:	str	r0, [fp, #-60]	; 0xffffffc4
    63d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    63d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    63dc:	cmp	r2, r3
    63e0:	beq	68f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x67c>
    63e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    63e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    63ec:	cmp	r2, r3
    63f0:	beq	68f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x67c>
    63f4:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
    63f8:	cmp	r3, #2
    63fc:	bne	6414 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x198>
    6400:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6404:	ldr	r3, [r3, #8]
    6408:	and	r3, r3, #2
    640c:	cmp	r3, #0
    6410:	beq	6884 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x608>
    6414:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6418:	ldr	r0, [r3]
    641c:	mov	r3, #1
    6420:	mov	r2, #1
    6424:	mov	r1, #1
    6428:	bl	0 <flatcc_builder_table_add>
    642c:	str	r0, [fp, #-44]	; 0xffffffd4
    6430:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6434:	cmp	r3, #0
    6438:	beq	6900 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x684>
    643c:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
    6440:	mov	r1, r3
    6444:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6448:	bl	1e0 <flatbuffers_int8_write_to_pe>
    644c:	b	6884 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x608>
    6450:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    6454:	mov	r0, #-16777216	; 0xff000000
    6458:	mvn	r1, #0
    645c:	and	r6, r2, r0
    6460:	and	r7, r3, r1
    6464:	add	r3, pc, #652	; 0x28c
    6468:	ldrd	r2, [r3]
    646c:	cmp	r7, r3
    6470:	cmpeq	r6, r2
    6474:	bne	6590 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x314>
    6478:	ldr	r3, [fp, #-60]	; 0xffffffc4
    647c:	str	r3, [fp, #-40]	; 0xffffffd8
    6480:	mov	r3, #5
    6484:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6488:	ldr	r1, [fp, #-40]	; 0xffffffd8
    648c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6490:	bl	f54 <flatcc_json_parser_match_symbol>
    6494:	str	r0, [fp, #-60]	; 0xffffffc4
    6498:	ldr	r2, [fp, #-40]	; 0xffffffd8
    649c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    64a0:	cmp	r2, r3
    64a4:	beq	6598 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x31c>
    64a8:	mov	r3, #0
    64ac:	strb	r3, [fp, #-50]	; 0xffffffce
    64b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    64b4:	str	r3, [fp, #-40]	; 0xffffffd8
    64b8:	sub	r3, fp, #50	; 0x32
    64bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    64c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    64c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    64c8:	bl	1e14 <flatcc_json_parser_int8>
    64cc:	str	r0, [fp, #-60]	; 0xffffffc4
    64d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    64d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    64d8:	cmp	r2, r3
    64dc:	bne	652c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b0>
    64e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    64e4:	str	r3, [fp, #-40]	; 0xffffffd8
    64e8:	sub	r3, fp, #50	; 0x32
    64ec:	str	r3, [sp]
    64f0:	movw	r3, #0
    64f4:	movt	r3, #0
    64f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    64fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6500:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6504:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    6508:	str	r0, [fp, #-60]	; 0xffffffc4
    650c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6510:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6514:	cmp	r2, r3
    6518:	beq	6908 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x68c>
    651c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    6520:	ldr	r3, [fp, #-64]	; 0xffffffc0
    6524:	cmp	r2, r3
    6528:	beq	6908 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x68c>
    652c:	ldrsb	r3, [fp, #-50]	; 0xffffffce
    6530:	cmp	r3, #2
    6534:	bne	654c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d0>
    6538:	ldr	r3, [fp, #-56]	; 0xffffffc8
    653c:	ldr	r3, [r3, #8]
    6540:	and	r3, r3, #2
    6544:	cmp	r3, #0
    6548:	beq	6884 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x608>
    654c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6550:	ldr	r0, [r3]
    6554:	mov	r3, #1
    6558:	mov	r2, #1
    655c:	mov	r1, #0
    6560:	bl	0 <flatcc_builder_table_add>
    6564:	str	r0, [fp, #-44]	; 0xffffffd4
    6568:	ldr	r3, [fp, #-44]	; 0xffffffd4
    656c:	cmp	r3, #0
    6570:	beq	6910 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x694>
    6574:	ldrsb	r3, [fp, #-50]	; 0xffffffce
    6578:	mov	r1, r3
    657c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6580:	bl	1e0 <flatbuffers_int8_write_to_pe>
    6584:	b	6884 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x608>
    6588:	nop	{0}
    658c:	b	659c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x320>
    6590:	nop	{0}
    6594:	b	659c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x320>
    6598:	nop	{0}
    659c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    65a0:	mov	r0, #0
    65a4:	mvn	r1, #255	; 0xff
    65a8:	and	r8, r2, r0
    65ac:	and	r9, r3, r1
    65b0:	add	r3, pc, #328	; 0x148
    65b4:	ldrd	r2, [r3]
    65b8:	cmp	r9, r3
    65bc:	cmpeq	r8, r2
    65c0:	bne	6708 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x48c>
    65c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    65c8:	str	r3, [fp, #-40]	; 0xffffffd8
    65cc:	mov	r3, #3
    65d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    65d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    65d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    65dc:	bl	f54 <flatcc_json_parser_match_symbol>
    65e0:	str	r0, [fp, #-60]	; 0xffffffc4
    65e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    65e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    65ec:	cmp	r2, r3
    65f0:	beq	66d4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x458>
    65f4:	mov	r3, #0
    65f8:	strb	r3, [fp, #-51]	; 0xffffffcd
    65fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6600:	str	r3, [fp, #-40]	; 0xffffffd8
    6604:	sub	r3, fp, #51	; 0x33
    6608:	ldr	r2, [fp, #-64]	; 0xffffffc0
    660c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6610:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6614:	bl	1aa0 <flatcc_json_parser_uint8>
    6618:	str	r0, [fp, #-60]	; 0xffffffc4
    661c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6620:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6624:	cmp	r2, r3
    6628:	bne	6678 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3fc>
    662c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6630:	str	r3, [fp, #-40]	; 0xffffffd8
    6634:	sub	r3, fp, #51	; 0x33
    6638:	str	r3, [sp]
    663c:	movw	r3, #0
    6640:	movt	r3, #0
    6644:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6648:	ldr	r1, [fp, #-40]	; 0xffffffd8
    664c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6650:	bl	25b8 <flatcc_json_parser_symbolic_uint8>
    6654:	str	r0, [fp, #-60]	; 0xffffffc4
    6658:	ldr	r2, [fp, #-60]	; 0xffffffc4
    665c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6660:	cmp	r2, r3
    6664:	beq	6918 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x69c>
    6668:	ldr	r2, [fp, #-60]	; 0xffffffc4
    666c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    6670:	cmp	r2, r3
    6674:	beq	6918 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x69c>
    6678:	ldrb	r3, [fp, #-51]	; 0xffffffcd
    667c:	cmp	r3, #2
    6680:	bne	6698 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x41c>
    6684:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6688:	ldr	r3, [r3, #8]
    668c:	and	r3, r3, #2
    6690:	cmp	r3, #0
    6694:	beq	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    6698:	ldr	r3, [fp, #-56]	; 0xffffffc8
    669c:	ldr	r0, [r3]
    66a0:	mov	r3, #1
    66a4:	mov	r2, #1
    66a8:	mov	r1, #3
    66ac:	bl	0 <flatcc_builder_table_add>
    66b0:	str	r0, [fp, #-44]	; 0xffffffd4
    66b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    66b8:	cmp	r3, #0
    66bc:	beq	6920 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6a4>
    66c0:	ldrb	r3, [fp, #-51]	; 0xffffffcd
    66c4:	mov	r1, r3
    66c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    66cc:	bl	28 <flatbuffers_uint8_write_to_pe>
    66d0:	b	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    66d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    66d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    66dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    66e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    66e4:	str	r0, [fp, #-60]	; 0xffffffc4
    66e8:	b	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    66ec:	nop	{0}
    66f0:	.word	0x72320000
    66f4:	.word	0x636f6c6f
    66f8:	.word	0x72000000
    66fc:	.word	0x636f6c6f
    6700:	.word	0x00000000
    6704:	.word	0x75633200
    6708:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    670c:	mov	r0, #0
    6710:	mov	r1, #0
    6714:	movt	r1, #65535	; 0xffff
    6718:	and	ip, r2, r0
    671c:	str	ip, [fp, #-76]	; 0xffffffb4
    6720:	and	r3, r3, r1
    6724:	str	r3, [fp, #-72]	; 0xffffffb8
    6728:	mov	r2, #0
    672c:	mov	r3, #0
    6730:	movt	r3, #30051	; 0x7563
    6734:	ldrd	r0, [fp, #-76]	; 0xffffffb4
    6738:	cmp	r1, r3
    673c:	cmpeq	r0, r2
    6740:	bne	686c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5f0>
    6744:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6748:	str	r3, [fp, #-40]	; 0xffffffd8
    674c:	mov	r3, #2
    6750:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6754:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6758:	ldr	r0, [fp, #-56]	; 0xffffffc8
    675c:	bl	f54 <flatcc_json_parser_match_symbol>
    6760:	str	r0, [fp, #-60]	; 0xffffffc4
    6764:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6768:	ldr	r3, [fp, #-60]	; 0xffffffc4
    676c:	cmp	r2, r3
    6770:	beq	6854 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5d8>
    6774:	mov	r3, #0
    6778:	strb	r3, [fp, #-52]	; 0xffffffcc
    677c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6780:	str	r3, [fp, #-40]	; 0xffffffd8
    6784:	sub	r3, fp, #52	; 0x34
    6788:	ldr	r2, [fp, #-64]	; 0xffffffc0
    678c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6790:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6794:	bl	1aa0 <flatcc_json_parser_uint8>
    6798:	str	r0, [fp, #-60]	; 0xffffffc4
    679c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    67a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    67a4:	cmp	r2, r3
    67a8:	bne	67f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x57c>
    67ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    67b0:	str	r3, [fp, #-40]	; 0xffffffd8
    67b4:	sub	r3, fp, #52	; 0x34
    67b8:	str	r3, [sp]
    67bc:	movw	r3, #0
    67c0:	movt	r3, #0
    67c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    67c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    67cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    67d0:	bl	25b8 <flatcc_json_parser_symbolic_uint8>
    67d4:	str	r0, [fp, #-60]	; 0xffffffc4
    67d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    67dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    67e0:	cmp	r2, r3
    67e4:	beq	6928 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6ac>
    67e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    67ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
    67f0:	cmp	r2, r3
    67f4:	beq	6928 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6ac>
    67f8:	ldrb	r3, [fp, #-52]	; 0xffffffcc
    67fc:	cmp	r3, #2
    6800:	bne	6818 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x59c>
    6804:	ldr	r3, [fp, #-56]	; 0xffffffc8
    6808:	ldr	r3, [r3, #8]
    680c:	and	r3, r3, #2
    6810:	cmp	r3, #0
    6814:	beq	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    6818:	ldr	r3, [fp, #-56]	; 0xffffffc8
    681c:	ldr	r0, [r3]
    6820:	mov	r3, #1
    6824:	mov	r2, #1
    6828:	mov	r1, #2
    682c:	bl	0 <flatcc_builder_table_add>
    6830:	str	r0, [fp, #-44]	; 0xffffffd4
    6834:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6838:	cmp	r3, #0
    683c:	beq	6930 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6b4>
    6840:	ldrb	r3, [fp, #-52]	; 0xffffffcc
    6844:	mov	r1, r3
    6848:	ldr	r0, [fp, #-44]	; 0xffffffd4
    684c:	bl	28 <flatbuffers_uint8_write_to_pe>
    6850:	b	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    6854:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6858:	ldr	r1, [fp, #-60]	; 0xffffffc4
    685c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6860:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6864:	str	r0, [fp, #-60]	; 0xffffffc4
    6868:	b	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    686c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6870:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6874:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6878:	bl	0 <flatcc_json_parser_unmatched_symbol>
    687c:	str	r0, [fp, #-60]	; 0xffffffc4
    6880:	b	6888 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x60c>
    6884:	nop	{0}
    6888:	sub	r3, fp, #48	; 0x30
    688c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    6890:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6894:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6898:	bl	b78 <flatcc_json_parser_object_end>
    689c:	str	r0, [fp, #-60]	; 0xffffffc4
    68a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    68a4:	cmp	r3, #0
    68a8:	bne	62f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x74>
    68ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
    68b0:	ldr	r3, [r3, #24]
    68b4:	cmp	r3, #0
    68b8:	bne	6938 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6bc>
    68bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    68c0:	ldr	r3, [r3]
    68c4:	mov	r0, r3
    68c8:	bl	0 <flatcc_builder_end_table>
    68cc:	mov	r2, r0
    68d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    68d4:	str	r2, [r3]
    68d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
    68dc:	ldr	r3, [r3]
    68e0:	cmp	r3, #0
    68e4:	beq	6940 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c4>
    68e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    68ec:	b	695c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6e0>
    68f0:	nop	{0}
    68f4:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    68f8:	nop	{0}
    68fc:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6900:	nop	{0}
    6904:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6908:	nop	{0}
    690c:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6910:	nop	{0}
    6914:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6918:	nop	{0}
    691c:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6920:	nop	{0}
    6924:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6928:	nop	{0}
    692c:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6930:	nop	{0}
    6934:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6938:	nop	{0}
    693c:	b	6944 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c8>
    6940:	nop	{0}
    6944:	mov	r3, #33	; 0x21
    6948:	ldr	r2, [fp, #-64]	; 0xffffffc0
    694c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    6950:	ldr	r0, [fp, #-56]	; 0xffffffc8
    6954:	bl	0 <flatcc_json_parser_set_error>
    6958:	mov	r3, r0
    695c:	mov	r0, r3
    6960:	sub	sp, fp, #28
    6964:	ldrd	r4, [sp]
    6968:	ldrd	r6, [sp, #8]
    696c:	ldrd	r8, [sp, #16]
    6970:	ldr	fp, [sp, #24]
    6974:	add	sp, sp, #28
    6978:	pop	{pc}		; (ldr pc, [sp], #4)

0000697c <MyGame_Example_TestInclude_parse_json_table>:
    697c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6980:	strd	r6, [sp, #8]
    6984:	strd	r8, [sp, #16]
    6988:	str	fp, [sp, #24]
    698c:	str	lr, [sp, #28]
    6990:	add	fp, sp, #28
    6994:	sub	sp, sp, #112	; 0x70
    6998:	str	r0, [fp, #-96]	; 0xffffffa0
    699c:	str	r1, [fp, #-100]	; 0xffffff9c
    69a0:	str	r2, [fp, #-104]	; 0xffffff98
    69a4:	str	r3, [fp, #-108]	; 0xffffff94
    69a8:	ldr	r3, [fp, #-108]	; 0xffffff94
    69ac:	mov	r2, #0
    69b0:	str	r2, [r3]
    69b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
    69b8:	ldr	r3, [r3]
    69bc:	mov	r1, #6
    69c0:	mov	r0, r3
    69c4:	bl	0 <flatcc_builder_start_table>
    69c8:	mov	r3, r0
    69cc:	cmp	r3, #0
    69d0:	bne	72d8 <MyGame_Example_TestInclude_parse_json_table+0x95c>
    69d4:	sub	r3, fp, #48	; 0x30
    69d8:	ldr	r2, [fp, #-104]	; 0xffffff98
    69dc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    69e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    69e4:	bl	a84 <flatcc_json_parser_object_start>
    69e8:	str	r0, [fp, #-100]	; 0xffffff9c
    69ec:	b	7288 <MyGame_Example_TestInclude_parse_json_table+0x90c>
    69f0:	ldr	r2, [fp, #-104]	; 0xffffff98
    69f4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    69f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
    69fc:	bl	60c <flatcc_json_parser_symbol_start>
    6a00:	str	r0, [fp, #-100]	; 0xffffff9c
    6a04:	ldr	r1, [fp, #-104]	; 0xffffff98
    6a08:	ldr	r0, [fp, #-100]	; 0xffffff9c
    6a0c:	bl	940 <flatcc_json_parser_symbol_part>
    6a10:	strd	r0, [fp, #-36]	; 0xffffffdc
    6a14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6a18:	add	r3, pc, #944	; 0x3b0
    6a1c:	ldrd	r2, [r3]
    6a20:	cmp	r1, r3
    6a24:	cmpeq	r0, r2
    6a28:	bhi	6afc <MyGame_Example_TestInclude_parse_json_table+0x180>
    6a2c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6a30:	mov	r2, #0
    6a34:	movt	r2, #65535	; 0xffff
    6a38:	mvn	r3, #0
    6a3c:	and	r4, r0, r2
    6a40:	and	r5, r1, r3
    6a44:	add	r3, pc, #908	; 0x38c
    6a48:	ldrd	r2, [r3]
    6a4c:	cmp	r5, r3
    6a50:	cmpeq	r4, r2
    6a54:	bne	6ae4 <MyGame_Example_TestInclude_parse_json_table+0x168>
    6a58:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6a5c:	str	r3, [fp, #-40]	; 0xffffffd8
    6a60:	mov	r3, #6
    6a64:	ldr	r2, [fp, #-104]	; 0xffffff98
    6a68:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6a6c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6a70:	bl	f54 <flatcc_json_parser_match_symbol>
    6a74:	str	r0, [fp, #-100]	; 0xffffff9c
    6a78:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6a7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6a80:	cmp	r2, r3
    6a84:	beq	6acc <MyGame_Example_TestInclude_parse_json_table+0x150>
    6a88:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6a8c:	ldr	r0, [r3]
    6a90:	mov	r3, #1
    6a94:	mov	r2, #0
    6a98:	mov	r1, #0
    6a9c:	bl	0 <flatcc_builder_table_add>
    6aa0:	str	r0, [fp, #-44]	; 0xffffffd4
    6aa4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6aa8:	cmp	r3, #0
    6aac:	beq	72e0 <MyGame_Example_TestInclude_parse_json_table+0x964>
    6ab0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6ab4:	ldr	r2, [fp, #-104]	; 0xffffff98
    6ab8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6abc:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6ac0:	bl	41c0 <InGlobalNamespace_parse_json_struct_inline>
    6ac4:	str	r0, [fp, #-100]	; 0xffffff9c
    6ac8:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6acc:	ldr	r2, [fp, #-104]	; 0xffffff98
    6ad0:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6ad4:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6ad8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6adc:	str	r0, [fp, #-100]	; 0xffffff9c
    6ae0:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6ae4:	ldr	r2, [fp, #-104]	; 0xffffff98
    6ae8:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6aec:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6af0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6af4:	str	r0, [fp, #-100]	; 0xffffff9c
    6af8:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6afc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6b00:	add	r3, pc, #728	; 0x2d8
    6b04:	ldrd	r2, [r3]
    6b08:	cmp	r1, r3
    6b0c:	cmpeq	r0, r2
    6b10:	bhi	6e18 <MyGame_Example_TestInclude_parse_json_table+0x49c>
    6b14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6b18:	mvn	r2, #255	; 0xff
    6b1c:	mvn	r3, #0
    6b20:	and	r6, r0, r2
    6b24:	and	r7, r1, r3
    6b28:	add	r3, pc, #696	; 0x2b8
    6b2c:	ldrd	r2, [r3]
    6b30:	cmp	r7, r3
    6b34:	cmpeq	r6, r2
    6b38:	bne	6c64 <MyGame_Example_TestInclude_parse_json_table+0x2e8>
    6b3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6b40:	str	r3, [fp, #-40]	; 0xffffffd8
    6b44:	mov	r3, #7
    6b48:	ldr	r2, [fp, #-104]	; 0xffffff98
    6b4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6b50:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6b54:	bl	f54 <flatcc_json_parser_match_symbol>
    6b58:	str	r0, [fp, #-100]	; 0xffffff9c
    6b5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6b60:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6b64:	cmp	r2, r3
    6b68:	beq	6c4c <MyGame_Example_TestInclude_parse_json_table+0x2d0>
    6b6c:	mov	r2, #0
    6b70:	mov	r3, #0
    6b74:	strd	r2, [fp, #-60]	; 0xffffffc4
    6b78:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6b7c:	str	r3, [fp, #-40]	; 0xffffffd8
    6b80:	sub	r3, fp, #60	; 0x3c
    6b84:	ldr	r2, [fp, #-104]	; 0xffffff98
    6b88:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6b8c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6b90:	bl	1b7c <flatcc_json_parser_int64>
    6b94:	str	r0, [fp, #-100]	; 0xffffff9c
    6b98:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6b9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6ba0:	cmp	r2, r3
    6ba4:	bne	6bf4 <MyGame_Example_TestInclude_parse_json_table+0x278>
    6ba8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6bac:	str	r3, [fp, #-40]	; 0xffffffd8
    6bb0:	sub	r3, fp, #60	; 0x3c
    6bb4:	str	r3, [sp]
    6bb8:	movw	r3, #0
    6bbc:	movt	r3, #0
    6bc0:	ldr	r2, [fp, #-104]	; 0xffffff98
    6bc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6bc8:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6bcc:	bl	279c <flatcc_json_parser_symbolic_int64>
    6bd0:	str	r0, [fp, #-100]	; 0xffffff9c
    6bd4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    6bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6bdc:	cmp	r2, r3
    6be0:	beq	72e8 <MyGame_Example_TestInclude_parse_json_table+0x96c>
    6be4:	ldr	r2, [fp, #-100]	; 0xffffff9c
    6be8:	ldr	r3, [fp, #-104]	; 0xffffff98
    6bec:	cmp	r2, r3
    6bf0:	beq	72e8 <MyGame_Example_TestInclude_parse_json_table+0x96c>
    6bf4:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    6bf8:	orrs	r3, r2, r3
    6bfc:	bne	6c14 <MyGame_Example_TestInclude_parse_json_table+0x298>
    6c00:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6c04:	ldr	r3, [r3, #8]
    6c08:	and	r3, r3, #2
    6c0c:	cmp	r3, #0
    6c10:	beq	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6c14:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6c18:	ldr	r0, [r3]
    6c1c:	mov	r3, #8
    6c20:	mov	r2, #8
    6c24:	mov	r1, #2
    6c28:	bl	0 <flatcc_builder_table_add>
    6c2c:	str	r0, [fp, #-44]	; 0xffffffd4
    6c30:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6c34:	cmp	r3, #0
    6c38:	beq	72f0 <MyGame_Example_TestInclude_parse_json_table+0x974>
    6c3c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
    6c40:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6c44:	bl	32c <flatbuffers_int64_write_to_pe>
    6c48:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6c4c:	ldr	r2, [fp, #-104]	; 0xffffff98
    6c50:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6c54:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6c58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6c5c:	str	r0, [fp, #-100]	; 0xffffff9c
    6c60:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6c64:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6c68:	mov	r2, #0
    6c6c:	movt	r2, #65535	; 0xffff
    6c70:	mvn	r3, #0
    6c74:	and	r8, r0, r2
    6c78:	and	r9, r1, r3
    6c7c:	add	r3, pc, #364	; 0x16c
    6c80:	ldrd	r2, [r3]
    6c84:	cmp	r9, r3
    6c88:	cmpeq	r8, r2
    6c8c:	bne	6db8 <MyGame_Example_TestInclude_parse_json_table+0x43c>
    6c90:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6c94:	str	r3, [fp, #-40]	; 0xffffffd8
    6c98:	mov	r3, #6
    6c9c:	ldr	r2, [fp, #-104]	; 0xffffff98
    6ca0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6ca4:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6ca8:	bl	f54 <flatcc_json_parser_match_symbol>
    6cac:	str	r0, [fp, #-100]	; 0xffffff9c
    6cb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6cb4:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6cb8:	cmp	r2, r3
    6cbc:	beq	6da0 <MyGame_Example_TestInclude_parse_json_table+0x424>
    6cc0:	mov	r2, #0
    6cc4:	mov	r3, #0
    6cc8:	strd	r2, [fp, #-68]	; 0xffffffbc
    6ccc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6cd0:	str	r3, [fp, #-40]	; 0xffffffd8
    6cd4:	sub	r3, fp, #68	; 0x44
    6cd8:	ldr	r2, [fp, #-104]	; 0xffffff98
    6cdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6ce0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6ce4:	bl	1b7c <flatcc_json_parser_int64>
    6ce8:	str	r0, [fp, #-100]	; 0xffffff9c
    6cec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6cf0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6cf4:	cmp	r2, r3
    6cf8:	bne	6d48 <MyGame_Example_TestInclude_parse_json_table+0x3cc>
    6cfc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6d00:	str	r3, [fp, #-40]	; 0xffffffd8
    6d04:	sub	r3, fp, #68	; 0x44
    6d08:	str	r3, [sp]
    6d0c:	movw	r3, #0
    6d10:	movt	r3, #0
    6d14:	ldr	r2, [fp, #-104]	; 0xffffff98
    6d18:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6d1c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6d20:	bl	279c <flatcc_json_parser_symbolic_int64>
    6d24:	str	r0, [fp, #-100]	; 0xffffff9c
    6d28:	ldr	r2, [fp, #-100]	; 0xffffff9c
    6d2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6d30:	cmp	r2, r3
    6d34:	beq	72f8 <MyGame_Example_TestInclude_parse_json_table+0x97c>
    6d38:	ldr	r2, [fp, #-100]	; 0xffffff9c
    6d3c:	ldr	r3, [fp, #-104]	; 0xffffff98
    6d40:	cmp	r2, r3
    6d44:	beq	72f8 <MyGame_Example_TestInclude_parse_json_table+0x97c>
    6d48:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    6d4c:	orrs	r3, r2, r3
    6d50:	bne	6d68 <MyGame_Example_TestInclude_parse_json_table+0x3ec>
    6d54:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6d58:	ldr	r3, [r3, #8]
    6d5c:	and	r3, r3, #2
    6d60:	cmp	r3, #0
    6d64:	beq	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6d68:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6d6c:	ldr	r0, [r3]
    6d70:	mov	r3, #8
    6d74:	mov	r2, #8
    6d78:	mov	r1, #1
    6d7c:	bl	0 <flatcc_builder_table_add>
    6d80:	str	r0, [fp, #-44]	; 0xffffffd4
    6d84:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6d88:	cmp	r3, #0
    6d8c:	beq	7300 <MyGame_Example_TestInclude_parse_json_table+0x984>
    6d90:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    6d94:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6d98:	bl	32c <flatbuffers_int64_write_to_pe>
    6d9c:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6da0:	ldr	r2, [fp, #-104]	; 0xffffff98
    6da4:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6da8:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6dac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6db0:	str	r0, [fp, #-100]	; 0xffffff9c
    6db4:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6db8:	ldr	r2, [fp, #-104]	; 0xffffff98
    6dbc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6dc0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6dc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6dc8:	str	r0, [fp, #-100]	; 0xffffff9c
    6dcc:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6dd0:	.word	0x616bffff
    6dd4:	.word	0x696e6376
    6dd8:	.word	0x616c0000
    6ddc:	.word	0x676c6f62
    6de0:	.word	0x616c32ff
    6de4:	.word	0x696e6376
    6de8:	.word	0x616c3200
    6dec:	.word	0x696e6376
    6df0:	.word	0x616c0000
    6df4:	.word	0x696e6376
    6df8:	.word	0x616c33ff
    6dfc:	.word	0x696e6376
    6e00:	.word	0x616c3300
    6e04:	.word	0x696e6376
    6e08:	.word	0x616c3500
    6e0c:	.word	0x696e6376
    6e10:	.word	0x616c3400
    6e14:	.word	0x696e6376
    6e18:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6e1c:	sub	r3, pc, #44	; 0x2c
    6e20:	ldrd	r2, [r3]
    6e24:	cmp	r1, r3
    6e28:	cmpeq	r0, r2
    6e2c:	bhi	6fa4 <MyGame_Example_TestInclude_parse_json_table+0x628>
    6e30:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6e34:	mvn	r2, #255	; 0xff
    6e38:	mvn	r3, #0
    6e3c:	and	ip, r0, r2
    6e40:	str	ip, [fp, #-116]	; 0xffffff8c
    6e44:	and	r3, r1, r3
    6e48:	str	r3, [fp, #-112]	; 0xffffff90
    6e4c:	sub	r3, pc, #84	; 0x54
    6e50:	ldrd	r2, [r3]
    6e54:	ldrd	r0, [fp, #-116]	; 0xffffff8c
    6e58:	cmp	r1, r3
    6e5c:	cmpeq	r0, r2
    6e60:	bne	6f8c <MyGame_Example_TestInclude_parse_json_table+0x610>
    6e64:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6e68:	str	r3, [fp, #-40]	; 0xffffffd8
    6e6c:	mov	r3, #7
    6e70:	ldr	r2, [fp, #-104]	; 0xffffff98
    6e74:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6e78:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6e7c:	bl	f54 <flatcc_json_parser_match_symbol>
    6e80:	str	r0, [fp, #-100]	; 0xffffff9c
    6e84:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6e88:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6e8c:	cmp	r2, r3
    6e90:	beq	6f74 <MyGame_Example_TestInclude_parse_json_table+0x5f8>
    6e94:	mov	r3, #0
    6e98:	str	r3, [fp, #-72]	; 0xffffffb8
    6e9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6ea0:	str	r3, [fp, #-40]	; 0xffffffd8
    6ea4:	sub	r3, fp, #72	; 0x48
    6ea8:	ldr	r2, [fp, #-104]	; 0xffffff98
    6eac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6eb0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6eb4:	bl	1c5c <flatcc_json_parser_int32>
    6eb8:	str	r0, [fp, #-100]	; 0xffffff9c
    6ebc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6ec0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6ec4:	cmp	r2, r3
    6ec8:	bne	6f18 <MyGame_Example_TestInclude_parse_json_table+0x59c>
    6ecc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6ed0:	str	r3, [fp, #-40]	; 0xffffffd8
    6ed4:	sub	r3, fp, #72	; 0x48
    6ed8:	str	r3, [sp]
    6edc:	movw	r3, #0
    6ee0:	movt	r3, #0
    6ee4:	ldr	r2, [fp, #-104]	; 0xffffff98
    6ee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6eec:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6ef0:	bl	2990 <flatcc_json_parser_symbolic_int32>
    6ef4:	str	r0, [fp, #-100]	; 0xffffff9c
    6ef8:	ldr	r2, [fp, #-100]	; 0xffffff9c
    6efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    6f00:	cmp	r2, r3
    6f04:	beq	7308 <MyGame_Example_TestInclude_parse_json_table+0x98c>
    6f08:	ldr	r2, [fp, #-100]	; 0xffffff9c
    6f0c:	ldr	r3, [fp, #-104]	; 0xffffff98
    6f10:	cmp	r2, r3
    6f14:	beq	7308 <MyGame_Example_TestInclude_parse_json_table+0x98c>
    6f18:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6f1c:	cmp	r3, #0
    6f20:	bne	6f38 <MyGame_Example_TestInclude_parse_json_table+0x5bc>
    6f24:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6f28:	ldr	r3, [r3, #8]
    6f2c:	and	r3, r3, #2
    6f30:	cmp	r3, #0
    6f34:	beq	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6f38:	ldr	r3, [fp, #-96]	; 0xffffffa0
    6f3c:	ldr	r0, [r3]
    6f40:	mov	r3, #4
    6f44:	mov	r2, #4
    6f48:	mov	r1, #3
    6f4c:	bl	0 <flatcc_builder_table_add>
    6f50:	str	r0, [fp, #-44]	; 0xffffffd4
    6f54:	ldr	r3, [fp, #-44]	; 0xffffffd4
    6f58:	cmp	r3, #0
    6f5c:	beq	7310 <MyGame_Example_TestInclude_parse_json_table+0x994>
    6f60:	ldr	r3, [fp, #-72]	; 0xffffffb8
    6f64:	mov	r1, r3
    6f68:	ldr	r0, [fp, #-44]	; 0xffffffd4
    6f6c:	bl	2c4 <flatbuffers_int32_write_to_pe>
    6f70:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6f74:	ldr	r2, [fp, #-104]	; 0xffffff98
    6f78:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6f7c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6f80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f84:	str	r0, [fp, #-100]	; 0xffffff9c
    6f88:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6f8c:	ldr	r2, [fp, #-104]	; 0xffffff98
    6f90:	ldr	r1, [fp, #-100]	; 0xffffff9c
    6f94:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6f98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6f9c:	str	r0, [fp, #-100]	; 0xffffff9c
    6fa0:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    6fa4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    6fa8:	mvn	r2, #255	; 0xff
    6fac:	mvn	r3, #0
    6fb0:	and	ip, r0, r2
    6fb4:	str	ip, [fp, #-124]	; 0xffffff84
    6fb8:	and	r3, r1, r3
    6fbc:	str	r3, [fp, #-120]	; 0xffffff88
    6fc0:	sub	r3, pc, #448	; 0x1c0
    6fc4:	ldrd	r2, [r3]
    6fc8:	ldrd	r0, [fp, #-124]	; 0xffffff84
    6fcc:	cmp	r1, r3
    6fd0:	cmpeq	r0, r2
    6fd4:	bne	7100 <MyGame_Example_TestInclude_parse_json_table+0x784>
    6fd8:	ldr	r3, [fp, #-100]	; 0xffffff9c
    6fdc:	str	r3, [fp, #-40]	; 0xffffffd8
    6fe0:	mov	r3, #7
    6fe4:	ldr	r2, [fp, #-104]	; 0xffffff98
    6fe8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    6fec:	ldr	r0, [fp, #-96]	; 0xffffffa0
    6ff0:	bl	f54 <flatcc_json_parser_match_symbol>
    6ff4:	str	r0, [fp, #-100]	; 0xffffff9c
    6ff8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6ffc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    7000:	cmp	r2, r3
    7004:	beq	70e8 <MyGame_Example_TestInclude_parse_json_table+0x76c>
    7008:	mov	r2, #0
    700c:	mov	r3, #0
    7010:	strd	r2, [fp, #-84]	; 0xffffffac
    7014:	ldr	r3, [fp, #-100]	; 0xffffff9c
    7018:	str	r3, [fp, #-40]	; 0xffffffd8
    701c:	sub	r3, fp, #84	; 0x54
    7020:	ldr	r2, [fp, #-104]	; 0xffffff98
    7024:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7028:	ldr	r0, [fp, #-96]	; 0xffffffa0
    702c:	bl	1b7c <flatcc_json_parser_int64>
    7030:	str	r0, [fp, #-100]	; 0xffffff9c
    7034:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7038:	ldr	r3, [fp, #-100]	; 0xffffff9c
    703c:	cmp	r2, r3
    7040:	bne	7090 <MyGame_Example_TestInclude_parse_json_table+0x714>
    7044:	ldr	r3, [fp, #-100]	; 0xffffff9c
    7048:	str	r3, [fp, #-40]	; 0xffffffd8
    704c:	sub	r3, fp, #84	; 0x54
    7050:	str	r3, [sp]
    7054:	movw	r3, #0
    7058:	movt	r3, #0
    705c:	ldr	r2, [fp, #-104]	; 0xffffff98
    7060:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7064:	ldr	r0, [fp, #-96]	; 0xffffffa0
    7068:	bl	279c <flatcc_json_parser_symbolic_int64>
    706c:	str	r0, [fp, #-100]	; 0xffffff9c
    7070:	ldr	r2, [fp, #-100]	; 0xffffff9c
    7074:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7078:	cmp	r2, r3
    707c:	beq	7318 <MyGame_Example_TestInclude_parse_json_table+0x99c>
    7080:	ldr	r2, [fp, #-100]	; 0xffffff9c
    7084:	ldr	r3, [fp, #-104]	; 0xffffff98
    7088:	cmp	r2, r3
    708c:	beq	7318 <MyGame_Example_TestInclude_parse_json_table+0x99c>
    7090:	ldrd	r2, [fp, #-84]	; 0xffffffac
    7094:	orrs	r3, r2, r3
    7098:	bne	70b0 <MyGame_Example_TestInclude_parse_json_table+0x734>
    709c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    70a0:	ldr	r3, [r3, #8]
    70a4:	and	r3, r3, #2
    70a8:	cmp	r3, #0
    70ac:	beq	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    70b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
    70b4:	ldr	r0, [r3]
    70b8:	mov	r3, #8
    70bc:	mov	r2, #8
    70c0:	mov	r1, #5
    70c4:	bl	0 <flatcc_builder_table_add>
    70c8:	str	r0, [fp, #-44]	; 0xffffffd4
    70cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    70d0:	cmp	r3, #0
    70d4:	beq	7320 <MyGame_Example_TestInclude_parse_json_table+0x9a4>
    70d8:	ldrd	r2, [fp, #-84]	; 0xffffffac
    70dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    70e0:	bl	32c <flatbuffers_int64_write_to_pe>
    70e4:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    70e8:	ldr	r2, [fp, #-104]	; 0xffffff98
    70ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
    70f0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    70f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    70f8:	str	r0, [fp, #-100]	; 0xffffff9c
    70fc:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    7100:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7104:	mvn	r2, #255	; 0xff
    7108:	mvn	r3, #0
    710c:	and	ip, r0, r2
    7110:	str	ip, [fp, #-132]	; 0xffffff7c
    7114:	and	r3, r1, r3
    7118:	str	r3, [fp, #-128]	; 0xffffff80
    711c:	sub	r3, pc, #788	; 0x314
    7120:	ldrd	r2, [r3]
    7124:	ldrd	r0, [fp, #-132]	; 0xffffff7c
    7128:	cmp	r1, r3
    712c:	cmpeq	r0, r2
    7130:	bne	725c <MyGame_Example_TestInclude_parse_json_table+0x8e0>
    7134:	ldr	r3, [fp, #-100]	; 0xffffff9c
    7138:	str	r3, [fp, #-40]	; 0xffffffd8
    713c:	mov	r3, #7
    7140:	ldr	r2, [fp, #-104]	; 0xffffff98
    7144:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7148:	ldr	r0, [fp, #-96]	; 0xffffffa0
    714c:	bl	f54 <flatcc_json_parser_match_symbol>
    7150:	str	r0, [fp, #-100]	; 0xffffff9c
    7154:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7158:	ldr	r3, [fp, #-100]	; 0xffffff9c
    715c:	cmp	r2, r3
    7160:	beq	7244 <MyGame_Example_TestInclude_parse_json_table+0x8c8>
    7164:	mov	r2, #0
    7168:	mov	r3, #0
    716c:	strd	r2, [fp, #-92]	; 0xffffffa4
    7170:	ldr	r3, [fp, #-100]	; 0xffffff9c
    7174:	str	r3, [fp, #-40]	; 0xffffffd8
    7178:	sub	r3, fp, #92	; 0x5c
    717c:	ldr	r2, [fp, #-104]	; 0xffffff98
    7180:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7184:	ldr	r0, [fp, #-96]	; 0xffffffa0
    7188:	bl	1b7c <flatcc_json_parser_int64>
    718c:	str	r0, [fp, #-100]	; 0xffffff9c
    7190:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7194:	ldr	r3, [fp, #-100]	; 0xffffff9c
    7198:	cmp	r2, r3
    719c:	bne	71ec <MyGame_Example_TestInclude_parse_json_table+0x870>
    71a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    71a4:	str	r3, [fp, #-40]	; 0xffffffd8
    71a8:	sub	r3, fp, #92	; 0x5c
    71ac:	str	r3, [sp]
    71b0:	movw	r3, #0
    71b4:	movt	r3, #0
    71b8:	ldr	r2, [fp, #-104]	; 0xffffff98
    71bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    71c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    71c4:	bl	279c <flatcc_json_parser_symbolic_int64>
    71c8:	str	r0, [fp, #-100]	; 0xffffff9c
    71cc:	ldr	r2, [fp, #-100]	; 0xffffff9c
    71d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    71d4:	cmp	r2, r3
    71d8:	beq	7328 <MyGame_Example_TestInclude_parse_json_table+0x9ac>
    71dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
    71e0:	ldr	r3, [fp, #-104]	; 0xffffff98
    71e4:	cmp	r2, r3
    71e8:	beq	7328 <MyGame_Example_TestInclude_parse_json_table+0x9ac>
    71ec:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    71f0:	orrs	r3, r2, r3
    71f4:	bne	720c <MyGame_Example_TestInclude_parse_json_table+0x890>
    71f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
    71fc:	ldr	r3, [r3, #8]
    7200:	and	r3, r3, #2
    7204:	cmp	r3, #0
    7208:	beq	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    720c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    7210:	ldr	r0, [r3]
    7214:	mov	r3, #8
    7218:	mov	r2, #8
    721c:	mov	r1, #4
    7220:	bl	0 <flatcc_builder_table_add>
    7224:	str	r0, [fp, #-44]	; 0xffffffd4
    7228:	ldr	r3, [fp, #-44]	; 0xffffffd4
    722c:	cmp	r3, #0
    7230:	beq	7330 <MyGame_Example_TestInclude_parse_json_table+0x9b4>
    7234:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    7238:	ldr	r0, [fp, #-44]	; 0xffffffd4
    723c:	bl	32c <flatbuffers_int64_write_to_pe>
    7240:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    7244:	ldr	r2, [fp, #-104]	; 0xffffff98
    7248:	ldr	r1, [fp, #-100]	; 0xffffff9c
    724c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    7250:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7254:	str	r0, [fp, #-100]	; 0xffffff9c
    7258:	b	7270 <MyGame_Example_TestInclude_parse_json_table+0x8f4>
    725c:	ldr	r2, [fp, #-104]	; 0xffffff98
    7260:	ldr	r1, [fp, #-100]	; 0xffffff9c
    7264:	ldr	r0, [fp, #-96]	; 0xffffffa0
    7268:	bl	0 <flatcc_json_parser_unmatched_symbol>
    726c:	str	r0, [fp, #-100]	; 0xffffff9c
    7270:	sub	r3, fp, #48	; 0x30
    7274:	ldr	r2, [fp, #-104]	; 0xffffff98
    7278:	ldr	r1, [fp, #-100]	; 0xffffff9c
    727c:	ldr	r0, [fp, #-96]	; 0xffffffa0
    7280:	bl	b78 <flatcc_json_parser_object_end>
    7284:	str	r0, [fp, #-100]	; 0xffffff9c
    7288:	ldr	r3, [fp, #-48]	; 0xffffffd0
    728c:	cmp	r3, #0
    7290:	bne	69f0 <MyGame_Example_TestInclude_parse_json_table+0x74>
    7294:	ldr	r3, [fp, #-96]	; 0xffffffa0
    7298:	ldr	r3, [r3, #24]
    729c:	cmp	r3, #0
    72a0:	bne	7338 <MyGame_Example_TestInclude_parse_json_table+0x9bc>
    72a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
    72a8:	ldr	r3, [r3]
    72ac:	mov	r0, r3
    72b0:	bl	0 <flatcc_builder_end_table>
    72b4:	mov	r2, r0
    72b8:	ldr	r3, [fp, #-108]	; 0xffffff94
    72bc:	str	r2, [r3]
    72c0:	ldr	r3, [fp, #-108]	; 0xffffff94
    72c4:	ldr	r3, [r3]
    72c8:	cmp	r3, #0
    72cc:	beq	7340 <MyGame_Example_TestInclude_parse_json_table+0x9c4>
    72d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    72d4:	b	735c <MyGame_Example_TestInclude_parse_json_table+0x9e0>
    72d8:	nop	{0}
    72dc:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    72e0:	nop	{0}
    72e4:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    72e8:	nop	{0}
    72ec:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    72f0:	nop	{0}
    72f4:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    72f8:	nop	{0}
    72fc:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7300:	nop	{0}
    7304:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7308:	nop	{0}
    730c:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7310:	nop	{0}
    7314:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7318:	nop	{0}
    731c:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7320:	nop	{0}
    7324:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7328:	nop	{0}
    732c:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7330:	nop	{0}
    7334:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7338:	nop	{0}
    733c:	b	7344 <MyGame_Example_TestInclude_parse_json_table+0x9c8>
    7340:	nop	{0}
    7344:	mov	r3, #33	; 0x21
    7348:	ldr	r2, [fp, #-104]	; 0xffffff98
    734c:	ldr	r1, [fp, #-100]	; 0xffffff9c
    7350:	ldr	r0, [fp, #-96]	; 0xffffffa0
    7354:	bl	0 <flatcc_json_parser_set_error>
    7358:	mov	r3, r0
    735c:	mov	r0, r3
    7360:	sub	sp, fp, #28
    7364:	ldrd	r4, [sp]
    7368:	ldrd	r6, [sp, #8]
    736c:	ldrd	r8, [sp, #16]
    7370:	ldr	fp, [sp, #24]
    7374:	add	sp, sp, #28
    7378:	pop	{pc}		; (ldr pc, [sp], #4)

0000737c <MyGame_Example_Vec3_parse_json_struct_inline>:
    737c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    7380:	strd	r6, [sp, #8]
    7384:	strd	r8, [sp, #16]
    7388:	str	fp, [sp, #24]
    738c:	str	lr, [sp, #28]
    7390:	add	fp, sp, #28
    7394:	sub	sp, sp, #96	; 0x60
    7398:	str	r0, [fp, #-80]	; 0xffffffb0
    739c:	str	r1, [fp, #-84]	; 0xffffffac
    73a0:	str	r2, [fp, #-88]	; 0xffffffa8
    73a4:	str	r3, [fp, #-92]	; 0xffffffa4
    73a8:	sub	r3, fp, #48	; 0x30
    73ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
    73b0:	ldr	r1, [fp, #-84]	; 0xffffffac
    73b4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    73b8:	bl	a84 <flatcc_json_parser_object_start>
    73bc:	str	r0, [fp, #-84]	; 0xffffffac
    73c0:	b	7ad0 <MyGame_Example_Vec3_parse_json_struct_inline+0x754>
    73c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    73c8:	ldr	r1, [fp, #-84]	; 0xffffffac
    73cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    73d0:	bl	60c <flatcc_json_parser_symbol_start>
    73d4:	str	r0, [fp, #-84]	; 0xffffffac
    73d8:	ldr	r1, [fp, #-88]	; 0xffffffa8
    73dc:	ldr	r0, [fp, #-84]	; 0xffffffac
    73e0:	bl	940 <flatcc_json_parser_symbol_part>
    73e4:	strd	r0, [fp, #-36]	; 0xffffffdc
    73e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    73ec:	add	r3, pc, #796	; 0x31c
    73f0:	ldrd	r2, [r3]
    73f4:	cmp	r1, r3
    73f8:	cmpeq	r0, r2
    73fc:	bhi	7644 <MyGame_Example_Vec3_parse_json_struct_inline+0x2c8>
    7400:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7404:	mov	r2, #-16777216	; 0xff000000
    7408:	mvn	r3, #0
    740c:	and	r4, r0, r2
    7410:	and	r5, r1, r3
    7414:	add	r3, pc, #764	; 0x2fc
    7418:	ldrd	r2, [r3]
    741c:	cmp	r5, r3
    7420:	cmpeq	r4, r2
    7424:	bne	7514 <MyGame_Example_Vec3_parse_json_struct_inline+0x198>
    7428:	ldr	r3, [fp, #-84]	; 0xffffffac
    742c:	str	r3, [fp, #-40]	; 0xffffffd8
    7430:	mov	r3, #5
    7434:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7438:	ldr	r1, [fp, #-40]	; 0xffffffd8
    743c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7440:	bl	f54 <flatcc_json_parser_match_symbol>
    7444:	str	r0, [fp, #-84]	; 0xffffffac
    7448:	ldr	r2, [fp, #-40]	; 0xffffffd8
    744c:	ldr	r3, [fp, #-84]	; 0xffffffac
    7450:	cmp	r2, r3
    7454:	beq	74fc <MyGame_Example_Vec3_parse_json_struct_inline+0x180>
    7458:	mov	r3, #0
    745c:	strb	r3, [fp, #-49]	; 0xffffffcf
    7460:	ldr	r3, [fp, #-92]	; 0xffffffa4
    7464:	add	r3, r3, #24
    7468:	str	r3, [fp, #-44]	; 0xffffffd4
    746c:	ldr	r3, [fp, #-84]	; 0xffffffac
    7470:	str	r3, [fp, #-40]	; 0xffffffd8
    7474:	sub	r3, fp, #49	; 0x31
    7478:	ldr	r2, [fp, #-88]	; 0xffffffa8
    747c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7480:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7484:	bl	1e14 <flatcc_json_parser_int8>
    7488:	str	r0, [fp, #-84]	; 0xffffffac
    748c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7490:	ldr	r3, [fp, #-84]	; 0xffffffac
    7494:	cmp	r2, r3
    7498:	bne	74e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x16c>
    749c:	ldr	r3, [fp, #-84]	; 0xffffffac
    74a0:	str	r3, [fp, #-40]	; 0xffffffd8
    74a4:	sub	r3, fp, #49	; 0x31
    74a8:	str	r3, [sp]
    74ac:	movw	r3, #0
    74b0:	movt	r3, #0
    74b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    74b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    74bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    74c0:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    74c4:	str	r0, [fp, #-84]	; 0xffffffac
    74c8:	ldr	r2, [fp, #-84]	; 0xffffffac
    74cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    74d0:	cmp	r2, r3
    74d4:	beq	7ae4 <MyGame_Example_Vec3_parse_json_struct_inline+0x768>
    74d8:	ldr	r2, [fp, #-84]	; 0xffffffac
    74dc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    74e0:	cmp	r2, r3
    74e4:	beq	7ae4 <MyGame_Example_Vec3_parse_json_struct_inline+0x768>
    74e8:	ldrsb	r3, [fp, #-49]	; 0xffffffcf
    74ec:	mov	r1, r3
    74f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    74f4:	bl	1e0 <flatbuffers_int8_write_to_pe>
    74f8:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    74fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7500:	ldr	r1, [fp, #-84]	; 0xffffffac
    7504:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7508:	bl	0 <flatcc_json_parser_unmatched_symbol>
    750c:	str	r0, [fp, #-84]	; 0xffffffac
    7510:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7514:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7518:	mov	r2, #-16777216	; 0xff000000
    751c:	mvn	r3, #0
    7520:	and	r6, r0, r2
    7524:	and	r7, r1, r3
    7528:	add	r3, pc, #496	; 0x1f0
    752c:	ldrd	r2, [r3]
    7530:	cmp	r7, r3
    7534:	cmpeq	r6, r2
    7538:	bne	762c <MyGame_Example_Vec3_parse_json_struct_inline+0x2b0>
    753c:	ldr	r3, [fp, #-84]	; 0xffffffac
    7540:	str	r3, [fp, #-40]	; 0xffffffd8
    7544:	mov	r3, #5
    7548:	ldr	r2, [fp, #-88]	; 0xffffffa8
    754c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7550:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7554:	bl	f54 <flatcc_json_parser_match_symbol>
    7558:	str	r0, [fp, #-84]	; 0xffffffac
    755c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7560:	ldr	r3, [fp, #-84]	; 0xffffffac
    7564:	cmp	r2, r3
    7568:	beq	7614 <MyGame_Example_Vec3_parse_json_struct_inline+0x298>
    756c:	mov	r2, #0
    7570:	mov	r3, #0
    7574:	strd	r2, [fp, #-60]	; 0xffffffc4
    7578:	ldr	r3, [fp, #-92]	; 0xffffffa4
    757c:	add	r3, r3, #16
    7580:	str	r3, [fp, #-44]	; 0xffffffd4
    7584:	ldr	r3, [fp, #-84]	; 0xffffffac
    7588:	str	r3, [fp, #-40]	; 0xffffffd8
    758c:	sub	r3, fp, #60	; 0x3c
    7590:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7594:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7598:	ldr	r0, [fp, #-80]	; 0xffffffb0
    759c:	bl	0 <flatcc_json_parser_double>
    75a0:	str	r0, [fp, #-84]	; 0xffffffac
    75a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    75a8:	ldr	r3, [fp, #-84]	; 0xffffffac
    75ac:	cmp	r2, r3
    75b0:	bne	7600 <MyGame_Example_Vec3_parse_json_struct_inline+0x284>
    75b4:	ldr	r3, [fp, #-84]	; 0xffffffac
    75b8:	str	r3, [fp, #-40]	; 0xffffffd8
    75bc:	sub	r3, fp, #60	; 0x3c
    75c0:	str	r3, [sp]
    75c4:	movw	r3, #0
    75c8:	movt	r3, #0
    75cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    75d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    75d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    75d8:	bl	3314 <flatcc_json_parser_symbolic_double>
    75dc:	str	r0, [fp, #-84]	; 0xffffffac
    75e0:	ldr	r2, [fp, #-84]	; 0xffffffac
    75e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    75e8:	cmp	r2, r3
    75ec:	beq	7aec <MyGame_Example_Vec3_parse_json_struct_inline+0x770>
    75f0:	ldr	r2, [fp, #-84]	; 0xffffffac
    75f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    75f8:	cmp	r2, r3
    75fc:	beq	7aec <MyGame_Example_Vec3_parse_json_struct_inline+0x770>
    7600:	vldr	d7, [fp, #-60]	; 0xffffffc4
    7604:	vmov.f64	d0, d7
    7608:	ldr	r0, [fp, #-44]	; 0xffffffd4
    760c:	bl	420 <flatbuffers_double_write_to_pe>
    7610:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7614:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7618:	ldr	r1, [fp, #-84]	; 0xffffffac
    761c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7620:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7624:	str	r0, [fp, #-84]	; 0xffffffac
    7628:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    762c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7630:	ldr	r1, [fp, #-84]	; 0xffffffac
    7634:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7638:	bl	0 <flatcc_json_parser_unmatched_symbol>
    763c:	str	r0, [fp, #-84]	; 0xffffffac
    7640:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7644:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7648:	mvn	r2, #0
    764c:	mvn	r3, #-2013265920	; 0x88000000
    7650:	cmp	r1, r3
    7654:	cmpeq	r0, r2
    7658:	bhi	7730 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b4>
    765c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7660:	mov	r2, #-16777216	; 0xff000000
    7664:	mvn	r3, #0
    7668:	and	r8, r0, r2
    766c:	and	r9, r1, r3
    7670:	add	r3, pc, #176	; 0xb0
    7674:	ldrd	r2, [r3]
    7678:	cmp	r9, r3
    767c:	cmpeq	r8, r2
    7680:	bne	76f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x378>
    7684:	ldr	r3, [fp, #-84]	; 0xffffffac
    7688:	str	r3, [fp, #-40]	; 0xffffffd8
    768c:	mov	r3, #5
    7690:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7694:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7698:	ldr	r0, [fp, #-80]	; 0xffffffb0
    769c:	bl	f54 <flatcc_json_parser_match_symbol>
    76a0:	str	r0, [fp, #-84]	; 0xffffffac
    76a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    76a8:	ldr	r3, [fp, #-84]	; 0xffffffac
    76ac:	cmp	r2, r3
    76b0:	beq	76dc <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    76b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
    76b8:	add	r3, r3, #26
    76bc:	str	r3, [fp, #-44]	; 0xffffffd4
    76c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    76c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    76c8:	ldr	r1, [fp, #-84]	; 0xffffffac
    76cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    76d0:	bl	58f8 <MyGame_Example_Test_parse_json_struct_inline>
    76d4:	str	r0, [fp, #-84]	; 0xffffffac
    76d8:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    76dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    76e0:	ldr	r1, [fp, #-84]	; 0xffffffac
    76e4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    76e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    76ec:	str	r0, [fp, #-84]	; 0xffffffac
    76f0:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    76f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    76f8:	ldr	r1, [fp, #-84]	; 0xffffffac
    76fc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7700:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7704:	str	r0, [fp, #-84]	; 0xffffffac
    7708:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    770c:	nop	{0}
    7710:	.word	0x32ffffff
    7714:	.word	0x74657374
    7718:	.word	0x32000000
    771c:	.word	0x74657374
    7720:	.word	0x31000000
    7724:	.word	0x74657374
    7728:	.word	0x33000000
    772c:	.word	0x74657374
    7730:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7734:	mvn	r2, #0
    7738:	mvn	r3, #-2030043136	; 0x87000000
    773c:	cmp	r1, r3
    7740:	cmpeq	r0, r2
    7744:	bhi	7874 <MyGame_Example_Vec3_parse_json_struct_inline+0x4f8>
    7748:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    774c:	mov	r2, #0
    7750:	mov	r3, #-16777216	; 0xff000000
    7754:	and	ip, r0, r2
    7758:	str	ip, [fp, #-100]	; 0xffffff9c
    775c:	and	r3, r1, r3
    7760:	str	r3, [fp, #-96]	; 0xffffffa0
    7764:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    7768:	cmp	r3, #2013265920	; 0x78000000
    776c:	cmpeq	r2, #0
    7770:	bne	785c <MyGame_Example_Vec3_parse_json_struct_inline+0x4e0>
    7774:	ldr	r3, [fp, #-84]	; 0xffffffac
    7778:	str	r3, [fp, #-40]	; 0xffffffd8
    777c:	mov	r3, #1
    7780:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7784:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7788:	ldr	r0, [fp, #-80]	; 0xffffffb0
    778c:	bl	f54 <flatcc_json_parser_match_symbol>
    7790:	str	r0, [fp, #-84]	; 0xffffffac
    7794:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7798:	ldr	r3, [fp, #-84]	; 0xffffffac
    779c:	cmp	r2, r3
    77a0:	beq	7844 <MyGame_Example_Vec3_parse_json_struct_inline+0x4c8>
    77a4:	mov	r3, #0
    77a8:	str	r3, [fp, #-64]	; 0xffffffc0
    77ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
    77b0:	str	r3, [fp, #-44]	; 0xffffffd4
    77b4:	ldr	r3, [fp, #-84]	; 0xffffffac
    77b8:	str	r3, [fp, #-40]	; 0xffffffd8
    77bc:	sub	r3, fp, #64	; 0x40
    77c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    77c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    77c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    77cc:	bl	0 <flatcc_json_parser_float>
    77d0:	str	r0, [fp, #-84]	; 0xffffffac
    77d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    77d8:	ldr	r3, [fp, #-84]	; 0xffffffac
    77dc:	cmp	r2, r3
    77e0:	bne	7830 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b4>
    77e4:	ldr	r3, [fp, #-84]	; 0xffffffac
    77e8:	str	r3, [fp, #-40]	; 0xffffffd8
    77ec:	sub	r3, fp, #64	; 0x40
    77f0:	str	r3, [sp]
    77f4:	movw	r3, #0
    77f8:	movt	r3, #0
    77fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7800:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7804:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7808:	bl	3134 <flatcc_json_parser_symbolic_float>
    780c:	str	r0, [fp, #-84]	; 0xffffffac
    7810:	ldr	r2, [fp, #-84]	; 0xffffffac
    7814:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7818:	cmp	r2, r3
    781c:	beq	7af4 <MyGame_Example_Vec3_parse_json_struct_inline+0x778>
    7820:	ldr	r2, [fp, #-84]	; 0xffffffac
    7824:	ldr	r3, [fp, #-88]	; 0xffffffa8
    7828:	cmp	r2, r3
    782c:	beq	7af4 <MyGame_Example_Vec3_parse_json_struct_inline+0x778>
    7830:	vldr	s15, [fp, #-64]	; 0xffffffc0
    7834:	vmov.f32	s0, s15
    7838:	ldr	r0, [fp, #-44]	; 0xffffffd4
    783c:	bl	3a8 <flatbuffers_float_write_to_pe>
    7840:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7844:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7848:	ldr	r1, [fp, #-84]	; 0xffffffac
    784c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7850:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7854:	str	r0, [fp, #-84]	; 0xffffffac
    7858:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    785c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7860:	ldr	r1, [fp, #-84]	; 0xffffffac
    7864:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7868:	bl	0 <flatcc_json_parser_unmatched_symbol>
    786c:	str	r0, [fp, #-84]	; 0xffffffac
    7870:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7874:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7878:	mov	r2, #0
    787c:	mov	r3, #-16777216	; 0xff000000
    7880:	and	ip, r0, r2
    7884:	str	ip, [fp, #-108]	; 0xffffff94
    7888:	and	r3, r1, r3
    788c:	str	r3, [fp, #-104]	; 0xffffff98
    7890:	ldrd	r2, [fp, #-108]	; 0xffffff94
    7894:	cmp	r3, #2046820352	; 0x7a000000
    7898:	cmpeq	r2, #0
    789c:	bne	798c <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    78a0:	ldr	r3, [fp, #-84]	; 0xffffffac
    78a4:	str	r3, [fp, #-40]	; 0xffffffd8
    78a8:	mov	r3, #1
    78ac:	ldr	r2, [fp, #-88]	; 0xffffffa8
    78b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    78b4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    78b8:	bl	f54 <flatcc_json_parser_match_symbol>
    78bc:	str	r0, [fp, #-84]	; 0xffffffac
    78c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    78c4:	ldr	r3, [fp, #-84]	; 0xffffffac
    78c8:	cmp	r2, r3
    78cc:	beq	7974 <MyGame_Example_Vec3_parse_json_struct_inline+0x5f8>
    78d0:	mov	r3, #0
    78d4:	str	r3, [fp, #-68]	; 0xffffffbc
    78d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
    78dc:	add	r3, r3, #8
    78e0:	str	r3, [fp, #-44]	; 0xffffffd4
    78e4:	ldr	r3, [fp, #-84]	; 0xffffffac
    78e8:	str	r3, [fp, #-40]	; 0xffffffd8
    78ec:	sub	r3, fp, #68	; 0x44
    78f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
    78f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    78f8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    78fc:	bl	0 <flatcc_json_parser_float>
    7900:	str	r0, [fp, #-84]	; 0xffffffac
    7904:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7908:	ldr	r3, [fp, #-84]	; 0xffffffac
    790c:	cmp	r2, r3
    7910:	bne	7960 <MyGame_Example_Vec3_parse_json_struct_inline+0x5e4>
    7914:	ldr	r3, [fp, #-84]	; 0xffffffac
    7918:	str	r3, [fp, #-40]	; 0xffffffd8
    791c:	sub	r3, fp, #68	; 0x44
    7920:	str	r3, [sp]
    7924:	movw	r3, #0
    7928:	movt	r3, #0
    792c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7930:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7934:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7938:	bl	3134 <flatcc_json_parser_symbolic_float>
    793c:	str	r0, [fp, #-84]	; 0xffffffac
    7940:	ldr	r2, [fp, #-84]	; 0xffffffac
    7944:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7948:	cmp	r2, r3
    794c:	beq	7afc <MyGame_Example_Vec3_parse_json_struct_inline+0x780>
    7950:	ldr	r2, [fp, #-84]	; 0xffffffac
    7954:	ldr	r3, [fp, #-88]	; 0xffffffa8
    7958:	cmp	r2, r3
    795c:	beq	7afc <MyGame_Example_Vec3_parse_json_struct_inline+0x780>
    7960:	vldr	s15, [fp, #-68]	; 0xffffffbc
    7964:	vmov.f32	s0, s15
    7968:	ldr	r0, [fp, #-44]	; 0xffffffd4
    796c:	bl	3a8 <flatbuffers_float_write_to_pe>
    7970:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7974:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7978:	ldr	r1, [fp, #-84]	; 0xffffffac
    797c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7980:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7984:	str	r0, [fp, #-84]	; 0xffffffac
    7988:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    798c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    7990:	mov	r2, #0
    7994:	mov	r3, #-16777216	; 0xff000000
    7998:	and	ip, r0, r2
    799c:	str	ip, [fp, #-116]	; 0xffffff8c
    79a0:	and	r3, r1, r3
    79a4:	str	r3, [fp, #-112]	; 0xffffff90
    79a8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
    79ac:	cmp	r3, #2030043136	; 0x79000000
    79b0:	cmpeq	r2, #0
    79b4:	bne	7aa4 <MyGame_Example_Vec3_parse_json_struct_inline+0x728>
    79b8:	ldr	r3, [fp, #-84]	; 0xffffffac
    79bc:	str	r3, [fp, #-40]	; 0xffffffd8
    79c0:	mov	r3, #1
    79c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    79c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    79cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    79d0:	bl	f54 <flatcc_json_parser_match_symbol>
    79d4:	str	r0, [fp, #-84]	; 0xffffffac
    79d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    79dc:	ldr	r3, [fp, #-84]	; 0xffffffac
    79e0:	cmp	r2, r3
    79e4:	beq	7a8c <MyGame_Example_Vec3_parse_json_struct_inline+0x710>
    79e8:	mov	r3, #0
    79ec:	str	r3, [fp, #-72]	; 0xffffffb8
    79f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
    79f4:	add	r3, r3, #4
    79f8:	str	r3, [fp, #-44]	; 0xffffffd4
    79fc:	ldr	r3, [fp, #-84]	; 0xffffffac
    7a00:	str	r3, [fp, #-40]	; 0xffffffd8
    7a04:	sub	r3, fp, #72	; 0x48
    7a08:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7a0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7a10:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7a14:	bl	0 <flatcc_json_parser_float>
    7a18:	str	r0, [fp, #-84]	; 0xffffffac
    7a1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7a20:	ldr	r3, [fp, #-84]	; 0xffffffac
    7a24:	cmp	r2, r3
    7a28:	bne	7a78 <MyGame_Example_Vec3_parse_json_struct_inline+0x6fc>
    7a2c:	ldr	r3, [fp, #-84]	; 0xffffffac
    7a30:	str	r3, [fp, #-40]	; 0xffffffd8
    7a34:	sub	r3, fp, #72	; 0x48
    7a38:	str	r3, [sp]
    7a3c:	movw	r3, #0
    7a40:	movt	r3, #0
    7a44:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7a48:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7a4c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7a50:	bl	3134 <flatcc_json_parser_symbolic_float>
    7a54:	str	r0, [fp, #-84]	; 0xffffffac
    7a58:	ldr	r2, [fp, #-84]	; 0xffffffac
    7a5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7a60:	cmp	r2, r3
    7a64:	beq	7b04 <MyGame_Example_Vec3_parse_json_struct_inline+0x788>
    7a68:	ldr	r2, [fp, #-84]	; 0xffffffac
    7a6c:	ldr	r3, [fp, #-88]	; 0xffffffa8
    7a70:	cmp	r2, r3
    7a74:	beq	7b04 <MyGame_Example_Vec3_parse_json_struct_inline+0x788>
    7a78:	vldr	s15, [fp, #-72]	; 0xffffffb8
    7a7c:	vmov.f32	s0, s15
    7a80:	ldr	r0, [fp, #-44]	; 0xffffffd4
    7a84:	bl	3a8 <flatbuffers_float_write_to_pe>
    7a88:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7a8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7a90:	ldr	r1, [fp, #-84]	; 0xffffffac
    7a94:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7a98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7a9c:	str	r0, [fp, #-84]	; 0xffffffac
    7aa0:	b	7ab8 <MyGame_Example_Vec3_parse_json_struct_inline+0x73c>
    7aa4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7aa8:	ldr	r1, [fp, #-84]	; 0xffffffac
    7aac:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7ab0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7ab4:	str	r0, [fp, #-84]	; 0xffffffac
    7ab8:	sub	r3, fp, #48	; 0x30
    7abc:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7ac0:	ldr	r1, [fp, #-84]	; 0xffffffac
    7ac4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7ac8:	bl	b78 <flatcc_json_parser_object_end>
    7acc:	str	r0, [fp, #-84]	; 0xffffffac
    7ad0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    7ad4:	cmp	r3, #0
    7ad8:	bne	73c4 <MyGame_Example_Vec3_parse_json_struct_inline+0x48>
    7adc:	ldr	r3, [fp, #-84]	; 0xffffffac
    7ae0:	b	7b20 <MyGame_Example_Vec3_parse_json_struct_inline+0x7a4>
    7ae4:	nop	{0}
    7ae8:	b	7b08 <MyGame_Example_Vec3_parse_json_struct_inline+0x78c>
    7aec:	nop	{0}
    7af0:	b	7b08 <MyGame_Example_Vec3_parse_json_struct_inline+0x78c>
    7af4:	nop	{0}
    7af8:	b	7b08 <MyGame_Example_Vec3_parse_json_struct_inline+0x78c>
    7afc:	nop	{0}
    7b00:	b	7b08 <MyGame_Example_Vec3_parse_json_struct_inline+0x78c>
    7b04:	nop	{0}
    7b08:	mov	r3, #33	; 0x21
    7b0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
    7b10:	ldr	r1, [fp, #-84]	; 0xffffffac
    7b14:	ldr	r0, [fp, #-80]	; 0xffffffb0
    7b18:	bl	0 <flatcc_json_parser_set_error>
    7b1c:	mov	r3, r0
    7b20:	mov	r0, r3
    7b24:	sub	sp, fp, #28
    7b28:	ldrd	r4, [sp]
    7b2c:	ldrd	r6, [sp, #8]
    7b30:	ldrd	r8, [sp, #16]
    7b34:	ldr	fp, [sp, #24]
    7b38:	add	sp, sp, #28
    7b3c:	pop	{pc}		; (ldr pc, [sp], #4)

00007b40 <MyGame_Example_Vec3_parse_json_struct>:
    7b40:	str	fp, [sp, #-8]!
    7b44:	str	lr, [sp, #4]
    7b48:	add	fp, sp, #4
    7b4c:	sub	sp, sp, #24
    7b50:	str	r0, [fp, #-16]
    7b54:	str	r1, [fp, #-20]	; 0xffffffec
    7b58:	str	r2, [fp, #-24]	; 0xffffffe8
    7b5c:	str	r3, [fp, #-28]	; 0xffffffe4
    7b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7b64:	mov	r2, #0
    7b68:	str	r2, [r3]
    7b6c:	ldr	r3, [fp, #-16]
    7b70:	ldr	r3, [r3]
    7b74:	mov	r2, #16
    7b78:	mov	r1, #32
    7b7c:	mov	r0, r3
    7b80:	bl	0 <flatcc_builder_start_struct>
    7b84:	str	r0, [fp, #-8]
    7b88:	ldr	r3, [fp, #-8]
    7b8c:	cmp	r3, #0
    7b90:	beq	7bf0 <MyGame_Example_Vec3_parse_json_struct+0xb0>
    7b94:	ldr	r3, [fp, #-8]
    7b98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7b9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    7ba0:	ldr	r0, [fp, #-16]
    7ba4:	bl	737c <MyGame_Example_Vec3_parse_json_struct_inline>
    7ba8:	str	r0, [fp, #-20]	; 0xffffffec
    7bac:	ldr	r2, [fp, #-20]	; 0xffffffec
    7bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7bb4:	cmp	r2, r3
    7bb8:	beq	7bf8 <MyGame_Example_Vec3_parse_json_struct+0xb8>
    7bbc:	ldr	r3, [fp, #-16]
    7bc0:	ldr	r3, [r3]
    7bc4:	mov	r0, r3
    7bc8:	bl	0 <flatcc_builder_end_struct>
    7bcc:	mov	r2, r0
    7bd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7bd4:	str	r2, [r3]
    7bd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7bdc:	ldr	r3, [r3]
    7be0:	cmp	r3, #0
    7be4:	beq	7bf8 <MyGame_Example_Vec3_parse_json_struct+0xb8>
    7be8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7bec:	b	7c14 <MyGame_Example_Vec3_parse_json_struct+0xd4>
    7bf0:	nop	{0}
    7bf4:	b	7bfc <MyGame_Example_Vec3_parse_json_struct+0xbc>
    7bf8:	nop	{0}
    7bfc:	mov	r3, #33	; 0x21
    7c00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7c04:	ldr	r1, [fp, #-20]	; 0xffffffec
    7c08:	ldr	r0, [fp, #-16]
    7c0c:	bl	0 <flatcc_json_parser_set_error>
    7c10:	mov	r3, r0
    7c14:	mov	r0, r3
    7c18:	sub	sp, fp, #4
    7c1c:	ldr	fp, [sp]
    7c20:	add	sp, sp, #4
    7c24:	pop	{pc}		; (ldr pc, [sp], #4)

00007c28 <MyGame_Example_Ability_parse_json_struct_inline>:
    7c28:	strd	r4, [sp, #-16]!
    7c2c:	str	fp, [sp, #8]
    7c30:	str	lr, [sp, #12]
    7c34:	add	fp, sp, #12
    7c38:	sub	sp, sp, #56	; 0x38
    7c3c:	str	r0, [fp, #-48]	; 0xffffffd0
    7c40:	str	r1, [fp, #-52]	; 0xffffffcc
    7c44:	str	r2, [fp, #-56]	; 0xffffffc8
    7c48:	str	r3, [fp, #-60]	; 0xffffffc4
    7c4c:	sub	r3, fp, #32
    7c50:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7c54:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7c58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7c5c:	bl	a84 <flatcc_json_parser_object_start>
    7c60:	str	r0, [fp, #-52]	; 0xffffffcc
    7c64:	b	7ed4 <MyGame_Example_Ability_parse_json_struct_inline+0x2ac>
    7c68:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7c6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7c70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7c74:	bl	60c <flatcc_json_parser_symbol_start>
    7c78:	str	r0, [fp, #-52]	; 0xffffffcc
    7c7c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    7c80:	ldr	r0, [fp, #-52]	; 0xffffffcc
    7c84:	bl	940 <flatcc_json_parser_symbol_part>
    7c88:	strd	r0, [fp, #-20]	; 0xffffffec
    7c8c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    7c90:	mov	r0, #0
    7c94:	mov	r1, #0
    7c98:	movt	r1, #65535	; 0xffff
    7c9c:	and	r4, r2, r0
    7ca0:	and	r5, r3, r1
    7ca4:	mov	r2, #0
    7ca8:	mov	r3, #0
    7cac:	movt	r3, #26980	; 0x6964
    7cb0:	cmp	r5, r3
    7cb4:	cmpeq	r4, r2
    7cb8:	bne	7da4 <MyGame_Example_Ability_parse_json_struct_inline+0x17c>
    7cbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7cc0:	str	r3, [fp, #-24]	; 0xffffffe8
    7cc4:	mov	r3, #2
    7cc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7ccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7cd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7cd4:	bl	f54 <flatcc_json_parser_match_symbol>
    7cd8:	str	r0, [fp, #-52]	; 0xffffffcc
    7cdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7ce0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7ce4:	cmp	r2, r3
    7ce8:	beq	7d8c <MyGame_Example_Ability_parse_json_struct_inline+0x164>
    7cec:	mov	r3, #0
    7cf0:	str	r3, [fp, #-36]	; 0xffffffdc
    7cf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7cf8:	str	r3, [fp, #-28]	; 0xffffffe4
    7cfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7d00:	str	r3, [fp, #-24]	; 0xffffffe8
    7d04:	sub	r3, fp, #36	; 0x24
    7d08:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7d0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7d10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7d14:	bl	18e8 <flatcc_json_parser_uint32>
    7d18:	str	r0, [fp, #-52]	; 0xffffffcc
    7d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7d20:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7d24:	cmp	r2, r3
    7d28:	bne	7d78 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    7d2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7d30:	str	r3, [fp, #-24]	; 0xffffffe8
    7d34:	sub	r3, fp, #36	; 0x24
    7d38:	str	r3, [sp]
    7d3c:	movw	r3, #0
    7d40:	movt	r3, #0
    7d44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7d4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7d50:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    7d54:	str	r0, [fp, #-52]	; 0xffffffcc
    7d58:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7d60:	cmp	r2, r3
    7d64:	beq	7ee8 <MyGame_Example_Ability_parse_json_struct_inline+0x2c0>
    7d68:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7d6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7d70:	cmp	r2, r3
    7d74:	beq	7ee8 <MyGame_Example_Ability_parse_json_struct_inline+0x2c0>
    7d78:	ldr	r3, [fp, #-36]	; 0xffffffdc
    7d7c:	mov	r1, r3
    7d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7d84:	bl	10c <flatbuffers_uint32_write_to_pe>
    7d88:	b	7ebc <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    7d8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7d90:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7d94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7d98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d9c:	str	r0, [fp, #-52]	; 0xffffffcc
    7da0:	b	7ebc <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    7da4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    7da8:	add	r1, pc, #376	; 0x178
    7dac:	ldrd	r0, [r1]
    7db0:	cmp	r3, r1
    7db4:	cmpeq	r2, r0
    7db8:	bne	7ea8 <MyGame_Example_Ability_parse_json_struct_inline+0x280>
    7dbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7dc0:	str	r3, [fp, #-24]	; 0xffffffe8
    7dc4:	mov	r3, #8
    7dc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7dd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7dd4:	bl	f54 <flatcc_json_parser_match_symbol>
    7dd8:	str	r0, [fp, #-52]	; 0xffffffcc
    7ddc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7de0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7de4:	cmp	r2, r3
    7de8:	beq	7e90 <MyGame_Example_Ability_parse_json_struct_inline+0x268>
    7dec:	mov	r3, #0
    7df0:	str	r3, [fp, #-40]	; 0xffffffd8
    7df4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    7df8:	add	r3, r3, #4
    7dfc:	str	r3, [fp, #-28]	; 0xffffffe4
    7e00:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7e04:	str	r3, [fp, #-24]	; 0xffffffe8
    7e08:	sub	r3, fp, #40	; 0x28
    7e0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7e14:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7e18:	bl	18e8 <flatcc_json_parser_uint32>
    7e1c:	str	r0, [fp, #-52]	; 0xffffffcc
    7e20:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7e24:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7e28:	cmp	r2, r3
    7e2c:	bne	7e7c <MyGame_Example_Ability_parse_json_struct_inline+0x254>
    7e30:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7e34:	str	r3, [fp, #-24]	; 0xffffffe8
    7e38:	sub	r3, fp, #40	; 0x28
    7e3c:	str	r3, [sp]
    7e40:	movw	r3, #0
    7e44:	movt	r3, #0
    7e48:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7e4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7e50:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7e54:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    7e58:	str	r0, [fp, #-52]	; 0xffffffcc
    7e5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7e64:	cmp	r2, r3
    7e68:	beq	7ef0 <MyGame_Example_Ability_parse_json_struct_inline+0x2c8>
    7e6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    7e70:	ldr	r3, [fp, #-56]	; 0xffffffc8
    7e74:	cmp	r2, r3
    7e78:	beq	7ef0 <MyGame_Example_Ability_parse_json_struct_inline+0x2c8>
    7e7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    7e80:	mov	r1, r3
    7e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7e88:	bl	10c <flatbuffers_uint32_write_to_pe>
    7e8c:	b	7ebc <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    7e90:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7e94:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7e98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7e9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7ea0:	str	r0, [fp, #-52]	; 0xffffffcc
    7ea4:	b	7ebc <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    7ea8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7eac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7eb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7eb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7eb8:	str	r0, [fp, #-52]	; 0xffffffcc
    7ebc:	sub	r3, fp, #32
    7ec0:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7ec4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7ec8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7ecc:	bl	b78 <flatcc_json_parser_object_end>
    7ed0:	str	r0, [fp, #-52]	; 0xffffffcc
    7ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    7ed8:	cmp	r3, #0
    7edc:	bne	7c68 <MyGame_Example_Ability_parse_json_struct_inline+0x40>
    7ee0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    7ee4:	b	7f0c <MyGame_Example_Ability_parse_json_struct_inline+0x2e4>
    7ee8:	nop	{0}
    7eec:	b	7ef4 <MyGame_Example_Ability_parse_json_struct_inline+0x2cc>
    7ef0:	nop	{0}
    7ef4:	mov	r3, #33	; 0x21
    7ef8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    7efc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    7f00:	ldr	r0, [fp, #-48]	; 0xffffffd0
    7f04:	bl	0 <flatcc_json_parser_set_error>
    7f08:	mov	r3, r0
    7f0c:	mov	r0, r3
    7f10:	sub	sp, fp, #12
    7f14:	ldrd	r4, [sp]
    7f18:	ldr	fp, [sp, #8]
    7f1c:	add	sp, sp, #12
    7f20:	pop	{pc}		; (ldr pc, [sp], #4)
    7f24:	nop	{0}
    7f28:	.word	0x616e6365
    7f2c:	.word	0x64697374

00007f30 <MyGame_Example_Ability_parse_json_struct>:
    7f30:	str	fp, [sp, #-8]!
    7f34:	str	lr, [sp, #4]
    7f38:	add	fp, sp, #4
    7f3c:	sub	sp, sp, #24
    7f40:	str	r0, [fp, #-16]
    7f44:	str	r1, [fp, #-20]	; 0xffffffec
    7f48:	str	r2, [fp, #-24]	; 0xffffffe8
    7f4c:	str	r3, [fp, #-28]	; 0xffffffe4
    7f50:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7f54:	mov	r2, #0
    7f58:	str	r2, [r3]
    7f5c:	ldr	r3, [fp, #-16]
    7f60:	ldr	r3, [r3]
    7f64:	mov	r2, #4
    7f68:	mov	r1, #8
    7f6c:	mov	r0, r3
    7f70:	bl	0 <flatcc_builder_start_struct>
    7f74:	str	r0, [fp, #-8]
    7f78:	ldr	r3, [fp, #-8]
    7f7c:	cmp	r3, #0
    7f80:	beq	7fe0 <MyGame_Example_Ability_parse_json_struct+0xb0>
    7f84:	ldr	r3, [fp, #-8]
    7f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    7f90:	ldr	r0, [fp, #-16]
    7f94:	bl	7c28 <MyGame_Example_Ability_parse_json_struct_inline>
    7f98:	str	r0, [fp, #-20]	; 0xffffffec
    7f9c:	ldr	r2, [fp, #-20]	; 0xffffffec
    7fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    7fa4:	cmp	r2, r3
    7fa8:	beq	7fe8 <MyGame_Example_Ability_parse_json_struct+0xb8>
    7fac:	ldr	r3, [fp, #-16]
    7fb0:	ldr	r3, [r3]
    7fb4:	mov	r0, r3
    7fb8:	bl	0 <flatcc_builder_end_struct>
    7fbc:	mov	r2, r0
    7fc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7fc4:	str	r2, [r3]
    7fc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    7fcc:	ldr	r3, [r3]
    7fd0:	cmp	r3, #0
    7fd4:	beq	7fe8 <MyGame_Example_Ability_parse_json_struct+0xb8>
    7fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
    7fdc:	b	8004 <MyGame_Example_Ability_parse_json_struct+0xd4>
    7fe0:	nop	{0}
    7fe4:	b	7fec <MyGame_Example_Ability_parse_json_struct+0xbc>
    7fe8:	nop	{0}
    7fec:	mov	r3, #33	; 0x21
    7ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    7ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
    7ff8:	ldr	r0, [fp, #-16]
    7ffc:	bl	0 <flatcc_json_parser_set_error>
    8000:	mov	r3, r0
    8004:	mov	r0, r3
    8008:	sub	sp, fp, #4
    800c:	ldr	fp, [sp]
    8010:	add	sp, sp, #4
    8014:	pop	{pc}		; (ldr pc, [sp], #4)

00008018 <MyGame_Example_Stat_parse_json_table>:
    8018:	strd	r4, [sp, #-32]!	; 0xffffffe0
    801c:	strd	r6, [sp, #8]
    8020:	strd	r8, [sp, #16]
    8024:	str	fp, [sp, #24]
    8028:	str	lr, [sp, #28]
    802c:	add	fp, sp, #28
    8030:	sub	sp, sp, #64	; 0x40
    8034:	str	r0, [fp, #-72]	; 0xffffffb8
    8038:	str	r1, [fp, #-76]	; 0xffffffb4
    803c:	str	r2, [fp, #-80]	; 0xffffffb0
    8040:	str	r3, [fp, #-84]	; 0xffffffac
    8044:	ldr	r3, [fp, #-84]	; 0xffffffac
    8048:	mov	r2, #0
    804c:	str	r2, [r3]
    8050:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8054:	ldr	r3, [r3]
    8058:	mov	r1, #3
    805c:	mov	r0, r3
    8060:	bl	0 <flatcc_builder_start_table>
    8064:	mov	r3, r0
    8068:	cmp	r3, #0
    806c:	bne	84e0 <MyGame_Example_Stat_parse_json_table+0x4c8>
    8070:	sub	r3, fp, #52	; 0x34
    8074:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8078:	ldr	r1, [fp, #-76]	; 0xffffffb4
    807c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8080:	bl	a84 <flatcc_json_parser_object_start>
    8084:	str	r0, [fp, #-76]	; 0xffffffb4
    8088:	b	8480 <MyGame_Example_Stat_parse_json_table+0x468>
    808c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8090:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8094:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8098:	bl	60c <flatcc_json_parser_symbol_start>
    809c:	str	r0, [fp, #-76]	; 0xffffffb4
    80a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
    80a4:	ldr	r0, [fp, #-76]	; 0xffffffb4
    80a8:	bl	940 <flatcc_json_parser_symbol_part>
    80ac:	strd	r0, [fp, #-36]	; 0xffffffdc
    80b0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    80b4:	mvn	r0, #0
    80b8:	movw	r1, #65535	; 0xffff
    80bc:	movt	r1, #26979	; 0x6963
    80c0:	cmp	r3, r1
    80c4:	cmpeq	r2, r0
    80c8:	bhi	8234 <MyGame_Example_Stat_parse_json_table+0x21c>
    80cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    80d0:	mov	r0, #-16777216	; 0xff000000
    80d4:	mvn	r1, #0
    80d8:	and	r4, r2, r0
    80dc:	and	r5, r3, r1
    80e0:	add	r3, pc, #1000	; 0x3e8
    80e4:	ldrd	r2, [r3]
    80e8:	cmp	r5, r3
    80ec:	cmpeq	r4, r2
    80f0:	bne	821c <MyGame_Example_Stat_parse_json_table+0x204>
    80f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    80f8:	str	r3, [fp, #-40]	; 0xffffffd8
    80fc:	mov	r3, #5
    8100:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8104:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8108:	ldr	r0, [fp, #-72]	; 0xffffffb8
    810c:	bl	f54 <flatcc_json_parser_match_symbol>
    8110:	str	r0, [fp, #-76]	; 0xffffffb4
    8114:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8118:	ldr	r3, [fp, #-76]	; 0xffffffb4
    811c:	cmp	r2, r3
    8120:	beq	8204 <MyGame_Example_Stat_parse_json_table+0x1ec>
    8124:	mov	r3, #0
    8128:	strh	r3, [fp, #-58]	; 0xffffffc6
    812c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8130:	str	r3, [fp, #-40]	; 0xffffffd8
    8134:	sub	r3, fp, #58	; 0x3a
    8138:	ldr	r2, [fp, #-80]	; 0xffffffb0
    813c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8140:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8144:	bl	19c4 <flatcc_json_parser_uint16>
    8148:	str	r0, [fp, #-76]	; 0xffffffb4
    814c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8150:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8154:	cmp	r2, r3
    8158:	bne	81a8 <MyGame_Example_Stat_parse_json_table+0x190>
    815c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8160:	str	r3, [fp, #-40]	; 0xffffffd8
    8164:	sub	r3, fp, #58	; 0x3a
    8168:	str	r3, [sp]
    816c:	movw	r3, #0
    8170:	movt	r3, #0
    8174:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8178:	ldr	r1, [fp, #-40]	; 0xffffffd8
    817c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8180:	bl	23d4 <flatcc_json_parser_symbolic_uint16>
    8184:	str	r0, [fp, #-76]	; 0xffffffb4
    8188:	ldr	r2, [fp, #-76]	; 0xffffffb4
    818c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    8190:	cmp	r2, r3
    8194:	beq	84e8 <MyGame_Example_Stat_parse_json_table+0x4d0>
    8198:	ldr	r2, [fp, #-76]	; 0xffffffb4
    819c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    81a0:	cmp	r2, r3
    81a4:	beq	84e8 <MyGame_Example_Stat_parse_json_table+0x4d0>
    81a8:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    81ac:	cmp	r3, #0
    81b0:	bne	81c8 <MyGame_Example_Stat_parse_json_table+0x1b0>
    81b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    81b8:	ldr	r3, [r3, #8]
    81bc:	and	r3, r3, #2
    81c0:	cmp	r3, #0
    81c4:	beq	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    81c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    81cc:	ldr	r0, [r3]
    81d0:	mov	r3, #2
    81d4:	mov	r2, #2
    81d8:	mov	r1, #2
    81dc:	bl	0 <flatcc_builder_table_add>
    81e0:	str	r0, [fp, #-44]	; 0xffffffd4
    81e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    81e8:	cmp	r3, #0
    81ec:	beq	84f0 <MyGame_Example_Stat_parse_json_table+0x4d8>
    81f0:	ldrh	r3, [fp, #-58]	; 0xffffffc6
    81f4:	mov	r1, r3
    81f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    81fc:	bl	9c <flatbuffers_uint16_write_to_pe>
    8200:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    8204:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8208:	ldr	r1, [fp, #-76]	; 0xffffffb4
    820c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8210:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8214:	str	r0, [fp, #-76]	; 0xffffffb4
    8218:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    821c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8220:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8224:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8228:	bl	0 <flatcc_json_parser_unmatched_symbol>
    822c:	str	r0, [fp, #-76]	; 0xffffffb4
    8230:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    8234:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8238:	mov	r0, #0
    823c:	mvn	r1, #255	; 0xff
    8240:	and	r6, r2, r0
    8244:	and	r7, r3, r1
    8248:	add	r3, pc, #648	; 0x288
    824c:	ldrd	r2, [r3]
    8250:	cmp	r7, r3
    8254:	cmpeq	r6, r2
    8258:	bne	8384 <MyGame_Example_Stat_parse_json_table+0x36c>
    825c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8260:	str	r3, [fp, #-40]	; 0xffffffd8
    8264:	mov	r3, #3
    8268:	ldr	r2, [fp, #-80]	; 0xffffffb0
    826c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8270:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8274:	bl	f54 <flatcc_json_parser_match_symbol>
    8278:	str	r0, [fp, #-76]	; 0xffffffb4
    827c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8280:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8284:	cmp	r2, r3
    8288:	beq	836c <MyGame_Example_Stat_parse_json_table+0x354>
    828c:	mov	r2, #0
    8290:	mov	r3, #0
    8294:	strd	r2, [fp, #-68]	; 0xffffffbc
    8298:	ldr	r3, [fp, #-76]	; 0xffffffb4
    829c:	str	r3, [fp, #-40]	; 0xffffffd8
    82a0:	sub	r3, fp, #68	; 0x44
    82a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
    82a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    82ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
    82b0:	bl	1b7c <flatcc_json_parser_int64>
    82b4:	str	r0, [fp, #-76]	; 0xffffffb4
    82b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    82bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    82c0:	cmp	r2, r3
    82c4:	bne	8314 <MyGame_Example_Stat_parse_json_table+0x2fc>
    82c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    82cc:	str	r3, [fp, #-40]	; 0xffffffd8
    82d0:	sub	r3, fp, #68	; 0x44
    82d4:	str	r3, [sp]
    82d8:	movw	r3, #0
    82dc:	movt	r3, #0
    82e0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    82e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    82e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    82ec:	bl	279c <flatcc_json_parser_symbolic_int64>
    82f0:	str	r0, [fp, #-76]	; 0xffffffb4
    82f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    82f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    82fc:	cmp	r2, r3
    8300:	beq	84f8 <MyGame_Example_Stat_parse_json_table+0x4e0>
    8304:	ldr	r2, [fp, #-76]	; 0xffffffb4
    8308:	ldr	r3, [fp, #-80]	; 0xffffffb0
    830c:	cmp	r2, r3
    8310:	beq	84f8 <MyGame_Example_Stat_parse_json_table+0x4e0>
    8314:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    8318:	orrs	r3, r2, r3
    831c:	bne	8334 <MyGame_Example_Stat_parse_json_table+0x31c>
    8320:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8324:	ldr	r3, [r3, #8]
    8328:	and	r3, r3, #2
    832c:	cmp	r3, #0
    8330:	beq	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    8334:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8338:	ldr	r0, [r3]
    833c:	mov	r3, #8
    8340:	mov	r2, #8
    8344:	mov	r1, #1
    8348:	bl	0 <flatcc_builder_table_add>
    834c:	str	r0, [fp, #-44]	; 0xffffffd4
    8350:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8354:	cmp	r3, #0
    8358:	beq	8500 <MyGame_Example_Stat_parse_json_table+0x4e8>
    835c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    8360:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8364:	bl	32c <flatbuffers_int64_write_to_pe>
    8368:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    836c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8370:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8374:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8378:	bl	0 <flatcc_json_parser_unmatched_symbol>
    837c:	str	r0, [fp, #-76]	; 0xffffffb4
    8380:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    8384:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8388:	mov	r0, #0
    838c:	mov	r1, #0
    8390:	movt	r1, #65535	; 0xffff
    8394:	and	r8, r2, r0
    8398:	and	r9, r3, r1
    839c:	mov	r2, #0
    83a0:	mov	r3, #0
    83a4:	movt	r3, #26980	; 0x6964
    83a8:	cmp	r9, r3
    83ac:	cmpeq	r8, r2
    83b0:	bne	8454 <MyGame_Example_Stat_parse_json_table+0x43c>
    83b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    83b8:	str	r3, [fp, #-40]	; 0xffffffd8
    83bc:	mov	r3, #2
    83c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
    83c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    83c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    83cc:	bl	f54 <flatcc_json_parser_match_symbol>
    83d0:	str	r0, [fp, #-76]	; 0xffffffb4
    83d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    83d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    83dc:	cmp	r2, r3
    83e0:	beq	843c <MyGame_Example_Stat_parse_json_table+0x424>
    83e4:	sub	r3, fp, #56	; 0x38
    83e8:	ldr	r2, [fp, #-80]	; 0xffffffb0
    83ec:	ldr	r1, [fp, #-76]	; 0xffffffb4
    83f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    83f4:	bl	0 <flatcc_json_parser_build_string>
    83f8:	str	r0, [fp, #-76]	; 0xffffffb4
    83fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8400:	cmp	r3, #0
    8404:	beq	8508 <MyGame_Example_Stat_parse_json_table+0x4f0>
    8408:	ldr	r3, [fp, #-72]	; 0xffffffb8
    840c:	ldr	r3, [r3]
    8410:	mov	r1, #0
    8414:	mov	r0, r3
    8418:	bl	0 <flatcc_builder_table_add_offset>
    841c:	str	r0, [fp, #-48]	; 0xffffffd0
    8420:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8424:	cmp	r3, #0
    8428:	beq	8508 <MyGame_Example_Stat_parse_json_table+0x4f0>
    842c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8430:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8434:	str	r2, [r3]
    8438:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    843c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8440:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8444:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8448:	bl	0 <flatcc_json_parser_unmatched_symbol>
    844c:	str	r0, [fp, #-76]	; 0xffffffb4
    8450:	b	8468 <MyGame_Example_Stat_parse_json_table+0x450>
    8454:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8458:	ldr	r1, [fp, #-76]	; 0xffffffb4
    845c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8460:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8464:	str	r0, [fp, #-76]	; 0xffffffb4
    8468:	sub	r3, fp, #52	; 0x34
    846c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8470:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8474:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8478:	bl	b78 <flatcc_json_parser_object_end>
    847c:	str	r0, [fp, #-76]	; 0xffffffb4
    8480:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8484:	cmp	r3, #0
    8488:	bne	808c <MyGame_Example_Stat_parse_json_table+0x74>
    848c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    8490:	ldr	r3, [r3, #24]
    8494:	cmp	r3, #0
    8498:	bne	8510 <MyGame_Example_Stat_parse_json_table+0x4f8>
    849c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    84a0:	ldr	r3, [r3]
    84a4:	mov	r0, r3
    84a8:	bl	0 <flatcc_builder_end_table>
    84ac:	mov	r2, r0
    84b0:	ldr	r3, [fp, #-84]	; 0xffffffac
    84b4:	str	r2, [r3]
    84b8:	ldr	r3, [fp, #-84]	; 0xffffffac
    84bc:	ldr	r3, [r3]
    84c0:	cmp	r3, #0
    84c4:	beq	8518 <MyGame_Example_Stat_parse_json_table+0x500>
    84c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    84cc:	b	8534 <MyGame_Example_Stat_parse_json_table+0x51c>
    84d0:	.word	0x74000000
    84d4:	.word	0x636f756e
    84d8:	.word	0x00000000
    84dc:	.word	0x76616c00
    84e0:	nop	{0}
    84e4:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    84e8:	nop	{0}
    84ec:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    84f0:	nop	{0}
    84f4:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    84f8:	nop	{0}
    84fc:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    8500:	nop	{0}
    8504:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    8508:	nop	{0}
    850c:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    8510:	nop	{0}
    8514:	b	851c <MyGame_Example_Stat_parse_json_table+0x504>
    8518:	nop	{0}
    851c:	mov	r3, #33	; 0x21
    8520:	ldr	r2, [fp, #-80]	; 0xffffffb0
    8524:	ldr	r1, [fp, #-76]	; 0xffffffb4
    8528:	ldr	r0, [fp, #-72]	; 0xffffffb8
    852c:	bl	0 <flatcc_json_parser_set_error>
    8530:	mov	r3, r0
    8534:	mov	r0, r3
    8538:	sub	sp, fp, #28
    853c:	ldrd	r4, [sp]
    8540:	ldrd	r6, [sp, #8]
    8544:	ldrd	r8, [sp, #16]
    8548:	ldr	fp, [sp, #24]
    854c:	add	sp, sp, #28
    8550:	pop	{pc}		; (ldr pc, [sp], #4)

00008554 <MyGame_Example_Alt_parse_json_table>:
    8554:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8558:	strd	r6, [sp, #8]
    855c:	strd	r8, [sp, #16]
    8560:	str	fp, [sp, #24]
    8564:	str	lr, [sp, #28]
    8568:	add	fp, sp, #28
    856c:	sub	sp, sp, #80	; 0x50
    8570:	str	r0, [fp, #-64]	; 0xffffffc0
    8574:	str	r1, [fp, #-68]	; 0xffffffbc
    8578:	str	r2, [fp, #-72]	; 0xffffffb8
    857c:	str	r3, [fp, #-76]	; 0xffffffb4
    8580:	ldr	r3, [fp, #-76]	; 0xffffffb4
    8584:	mov	r2, #0
    8588:	str	r2, [r3]
    858c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    8590:	ldr	r3, [r3]
    8594:	mov	r1, #4
    8598:	mov	r0, r3
    859c:	bl	0 <flatcc_builder_start_table>
    85a0:	mov	r3, r0
    85a4:	cmp	r3, #0
    85a8:	bne	89f4 <MyGame_Example_Alt_parse_json_table+0x4a0>
    85ac:	sub	r3, fp, #56	; 0x38
    85b0:	str	r3, [sp]
    85b4:	mov	r3, #1
    85b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    85bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
    85c0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    85c4:	bl	0 <flatcc_json_parser_prepare_unions>
    85c8:	mov	r2, r0
    85cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
    85d0:	cmp	r3, r2
    85d4:	beq	89fc <MyGame_Example_Alt_parse_json_table+0x4a8>
    85d8:	sub	r3, fp, #48	; 0x30
    85dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    85e0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    85e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    85e8:	bl	a84 <flatcc_json_parser_object_start>
    85ec:	str	r0, [fp, #-68]	; 0xffffffbc
    85f0:	b	898c <MyGame_Example_Alt_parse_json_table+0x438>
    85f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    85f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    85fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8600:	bl	60c <flatcc_json_parser_symbol_start>
    8604:	str	r0, [fp, #-68]	; 0xffffffbc
    8608:	ldr	r1, [fp, #-72]	; 0xffffffb8
    860c:	ldr	r0, [fp, #-68]	; 0xffffffbc
    8610:	bl	940 <flatcc_json_parser_symbol_part>
    8614:	strd	r0, [fp, #-36]	; 0xffffffdc
    8618:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    861c:	add	r1, pc, #1004	; 0x3ec
    8620:	ldrd	r0, [r1]
    8624:	cmp	r3, r1
    8628:	cmpeq	r2, r0
    862c:	bne	8724 <MyGame_Example_Alt_parse_json_table+0x1d0>
    8630:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8634:	add	r3, r3, #8
    8638:	str	r3, [fp, #-68]	; 0xffffffbc
    863c:	ldr	r1, [fp, #-72]	; 0xffffffb8
    8640:	ldr	r0, [fp, #-68]	; 0xffffffbc
    8644:	bl	940 <flatcc_json_parser_symbol_part>
    8648:	strd	r0, [fp, #-36]	; 0xffffffdc
    864c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8650:	mov	r0, #0
    8654:	mvn	r1, #0
    8658:	and	r4, r2, r0
    865c:	and	r5, r3, r1
    8660:	add	r3, pc, #944	; 0x3b0
    8664:	ldrd	r2, [r3]
    8668:	cmp	r5, r3
    866c:	cmpeq	r4, r2
    8670:	bne	870c <MyGame_Example_Alt_parse_json_table+0x1b8>
    8674:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8678:	str	r3, [fp, #-40]	; 0xffffffd8
    867c:	mov	r3, #4
    8680:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8684:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8688:	ldr	r0, [fp, #-64]	; 0xffffffc0
    868c:	bl	f54 <flatcc_json_parser_match_symbol>
    8690:	str	r0, [fp, #-68]	; 0xffffffbc
    8694:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8698:	ldr	r3, [fp, #-68]	; 0xffffffbc
    869c:	cmp	r2, r3
    86a0:	beq	86f4 <MyGame_Example_Alt_parse_json_table+0x1a0>
    86a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    86a8:	movw	r3, #0
    86ac:	movt	r3, #0
    86b0:	str	r3, [sp, #16]
    86b4:	movw	r3, #0
    86b8:	movt	r3, #0
    86bc:	str	r3, [sp, #12]
    86c0:	movw	r3, #0
    86c4:	movt	r3, #0
    86c8:	str	r3, [sp, #8]
    86cc:	str	r2, [sp, #4]
    86d0:	mov	r3, #3
    86d4:	str	r3, [sp]
    86d8:	mov	r3, #0
    86dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    86e0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    86e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    86e8:	bl	0 <flatcc_json_parser_union_type_vector>
    86ec:	str	r0, [fp, #-68]	; 0xffffffbc
    86f0:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    86f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    86f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    86fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8700:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8704:	str	r0, [fp, #-68]	; 0xffffffbc
    8708:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    870c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8710:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8714:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8718:	bl	0 <flatcc_json_parser_unmatched_symbol>
    871c:	str	r0, [fp, #-68]	; 0xffffffbc
    8720:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    8724:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8728:	mvn	r0, #255	; 0xff
    872c:	mvn	r1, #0
    8730:	and	r6, r2, r0
    8734:	and	r7, r3, r1
    8738:	add	r3, pc, #736	; 0x2e0
    873c:	ldrd	r2, [r3]
    8740:	cmp	r7, r3
    8744:	cmpeq	r6, r2
    8748:	bne	87b4 <MyGame_Example_Alt_parse_json_table+0x260>
    874c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8750:	str	r3, [fp, #-40]	; 0xffffffd8
    8754:	mov	r3, #7
    8758:	ldr	r2, [fp, #-72]	; 0xffffffb8
    875c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8760:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8764:	bl	f54 <flatcc_json_parser_match_symbol>
    8768:	str	r0, [fp, #-68]	; 0xffffffbc
    876c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8770:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8774:	cmp	r2, r3
    8778:	beq	87bc <MyGame_Example_Alt_parse_json_table+0x268>
    877c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    8780:	movw	r3, #0
    8784:	movt	r3, #0
    8788:	str	r3, [sp, #8]
    878c:	str	r2, [sp, #4]
    8790:	mov	r3, #3
    8794:	str	r3, [sp]
    8798:	mov	r3, #0
    879c:	ldr	r2, [fp, #-72]	; 0xffffffb8
    87a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    87a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    87a8:	bl	0 <flatcc_json_parser_union_vector>
    87ac:	str	r0, [fp, #-68]	; 0xffffffbc
    87b0:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    87b4:	nop	{0}
    87b8:	b	87c0 <MyGame_Example_Alt_parse_json_table+0x26c>
    87bc:	nop	{0}
    87c0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    87c4:	mov	r0, #0
    87c8:	movt	r0, #65535	; 0xffff
    87cc:	mvn	r1, #0
    87d0:	and	r8, r2, r0
    87d4:	and	r9, r3, r1
    87d8:	add	r3, pc, #584	; 0x248
    87dc:	ldrd	r2, [r3]
    87e0:	cmp	r9, r3
    87e4:	cmpeq	r8, r2
    87e8:	bne	888c <MyGame_Example_Alt_parse_json_table+0x338>
    87ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    87f0:	str	r3, [fp, #-40]	; 0xffffffd8
    87f4:	mov	r3, #6
    87f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
    87fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8800:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8804:	bl	f54 <flatcc_json_parser_match_symbol>
    8808:	str	r0, [fp, #-68]	; 0xffffffbc
    880c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8810:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8814:	cmp	r2, r3
    8818:	beq	8874 <MyGame_Example_Alt_parse_json_table+0x320>
    881c:	sub	r3, fp, #52	; 0x34
    8820:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8824:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8828:	ldr	r0, [fp, #-64]	; 0xffffffc0
    882c:	bl	8a84 <MyGame_Example_TestJSONPrefix_parse_json_table>
    8830:	str	r0, [fp, #-68]	; 0xffffffbc
    8834:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8838:	cmp	r3, #0
    883c:	beq	8a04 <MyGame_Example_Alt_parse_json_table+0x4b0>
    8840:	ldr	r3, [fp, #-64]	; 0xffffffc0
    8844:	ldr	r3, [r3]
    8848:	mov	r1, #0
    884c:	mov	r0, r3
    8850:	bl	0 <flatcc_builder_table_add_offset>
    8854:	str	r0, [fp, #-44]	; 0xffffffd4
    8858:	ldr	r3, [fp, #-44]	; 0xffffffd4
    885c:	cmp	r3, #0
    8860:	beq	8a04 <MyGame_Example_Alt_parse_json_table+0x4b0>
    8864:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8868:	ldr	r3, [fp, #-44]	; 0xffffffd4
    886c:	str	r2, [r3]
    8870:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    8874:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8878:	ldr	r1, [fp, #-68]	; 0xffffffbc
    887c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8880:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8884:	str	r0, [fp, #-68]	; 0xffffffbc
    8888:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    888c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8890:	mov	r0, #-16777216	; 0xff000000
    8894:	mvn	r1, #0
    8898:	and	ip, r2, r0
    889c:	str	ip, [fp, #-84]	; 0xffffffac
    88a0:	and	r3, r3, r1
    88a4:	str	r3, [fp, #-80]	; 0xffffffb0
    88a8:	add	r3, pc, #384	; 0x180
    88ac:	ldrd	r2, [r3]
    88b0:	ldrd	r0, [fp, #-84]	; 0xffffffac
    88b4:	cmp	r1, r3
    88b8:	cmpeq	r0, r2
    88bc:	bne	8960 <MyGame_Example_Alt_parse_json_table+0x40c>
    88c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    88c4:	str	r3, [fp, #-40]	; 0xffffffd8
    88c8:	mov	r3, #5
    88cc:	ldr	r2, [fp, #-72]	; 0xffffffb8
    88d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    88d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    88d8:	bl	f54 <flatcc_json_parser_match_symbol>
    88dc:	str	r0, [fp, #-68]	; 0xffffffbc
    88e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    88e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    88e8:	cmp	r2, r3
    88ec:	beq	8948 <MyGame_Example_Alt_parse_json_table+0x3f4>
    88f0:	sub	r3, fp, #52	; 0x34
    88f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
    88f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    88fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8900:	bl	10cf4 <Fantasy_Movie_parse_json_table>
    8904:	str	r0, [fp, #-68]	; 0xffffffbc
    8908:	ldr	r3, [fp, #-52]	; 0xffffffcc
    890c:	cmp	r3, #0
    8910:	beq	8a38 <MyGame_Example_Alt_parse_json_table+0x4e4>
    8914:	ldr	r3, [fp, #-64]	; 0xffffffc0
    8918:	ldr	r3, [r3]
    891c:	mov	r1, #1
    8920:	mov	r0, r3
    8924:	bl	0 <flatcc_builder_table_add_offset>
    8928:	str	r0, [fp, #-44]	; 0xffffffd4
    892c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8930:	cmp	r3, #0
    8934:	beq	8a38 <MyGame_Example_Alt_parse_json_table+0x4e4>
    8938:	ldr	r2, [fp, #-52]	; 0xffffffcc
    893c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8940:	str	r2, [r3]
    8944:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    8948:	ldr	r2, [fp, #-72]	; 0xffffffb8
    894c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8950:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8954:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8958:	str	r0, [fp, #-68]	; 0xffffffbc
    895c:	b	8974 <MyGame_Example_Alt_parse_json_table+0x420>
    8960:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8964:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8968:	ldr	r0, [fp, #-64]	; 0xffffffc0
    896c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8970:	str	r0, [fp, #-68]	; 0xffffffbc
    8974:	sub	r3, fp, #48	; 0x30
    8978:	ldr	r2, [fp, #-72]	; 0xffffffb8
    897c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8980:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8984:	bl	b78 <flatcc_json_parser_object_end>
    8988:	str	r0, [fp, #-68]	; 0xffffffbc
    898c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8990:	cmp	r3, #0
    8994:	bne	85f4 <MyGame_Example_Alt_parse_json_table+0xa0>
    8998:	ldr	r3, [fp, #-64]	; 0xffffffc0
    899c:	ldr	r3, [r3, #24]
    89a0:	cmp	r3, #0
    89a4:	bne	8a40 <MyGame_Example_Alt_parse_json_table+0x4ec>
    89a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    89ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
    89b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
    89b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    89b8:	bl	0 <flatcc_json_parser_finalize_unions>
    89bc:	str	r0, [fp, #-68]	; 0xffffffbc
    89c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    89c4:	ldr	r3, [r3]
    89c8:	mov	r0, r3
    89cc:	bl	0 <flatcc_builder_end_table>
    89d0:	mov	r2, r0
    89d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    89d8:	str	r2, [r3]
    89dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    89e0:	ldr	r3, [r3]
    89e4:	cmp	r3, #0
    89e8:	beq	8a48 <MyGame_Example_Alt_parse_json_table+0x4f4>
    89ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
    89f0:	b	8a64 <MyGame_Example_Alt_parse_json_table+0x510>
    89f4:	nop	{0}
    89f8:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4f8>
    89fc:	nop	{0}
    8a00:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4f8>
    8a04:	nop	{0}
    8a08:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4f8>
    8a0c:	nop	{0}
    8a10:	.word	0x616e795f
    8a14:	.word	0x6d616e79
    8a18:	.word	0x00000000
    8a1c:	.word	0x74797065
    8a20:	.word	0x616e7900
    8a24:	.word	0x6d616e79
    8a28:	.word	0x69780000
    8a2c:	.word	0x70726566
    8a30:	.word	0x65000000
    8a34:	.word	0x6d6f7669
    8a38:	nop	{0}
    8a3c:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4f8>
    8a40:	nop	{0}
    8a44:	b	8a4c <MyGame_Example_Alt_parse_json_table+0x4f8>
    8a48:	nop	{0}
    8a4c:	mov	r3, #33	; 0x21
    8a50:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8a54:	ldr	r1, [fp, #-68]	; 0xffffffbc
    8a58:	ldr	r0, [fp, #-64]	; 0xffffffc0
    8a5c:	bl	0 <flatcc_json_parser_set_error>
    8a60:	mov	r3, r0
    8a64:	mov	r0, r3
    8a68:	sub	sp, fp, #28
    8a6c:	ldrd	r4, [sp]
    8a70:	ldrd	r6, [sp, #8]
    8a74:	ldrd	r8, [sp, #16]
    8a78:	ldr	fp, [sp, #24]
    8a7c:	add	sp, sp, #28
    8a80:	pop	{pc}		; (ldr pc, [sp], #4)

00008a84 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    8a84:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8a88:	strd	r6, [sp, #8]
    8a8c:	strd	r8, [sp, #16]
    8a90:	str	fp, [sp, #24]
    8a94:	str	lr, [sp, #28]
    8a98:	add	fp, sp, #28
    8a9c:	sub	sp, sp, #40	; 0x28
    8aa0:	str	r0, [fp, #-56]	; 0xffffffc8
    8aa4:	str	r1, [fp, #-60]	; 0xffffffc4
    8aa8:	str	r2, [fp, #-64]	; 0xffffffc0
    8aac:	str	r3, [fp, #-68]	; 0xffffffbc
    8ab0:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8ab4:	mov	r2, #0
    8ab8:	str	r2, [r3]
    8abc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8ac0:	ldr	r3, [r3]
    8ac4:	mov	r1, #3
    8ac8:	mov	r0, r3
    8acc:	bl	0 <flatcc_builder_start_table>
    8ad0:	mov	r3, r0
    8ad4:	cmp	r3, #0
    8ad8:	bne	8e74 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f0>
    8adc:	sub	r3, fp, #48	; 0x30
    8ae0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8ae4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8ae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8aec:	bl	a84 <flatcc_json_parser_object_start>
    8af0:	str	r0, [fp, #-60]	; 0xffffffc4
    8af4:	b	8e24 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3a0>
    8af8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8afc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8b00:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8b04:	bl	60c <flatcc_json_parser_symbol_start>
    8b08:	str	r0, [fp, #-60]	; 0xffffffc4
    8b0c:	ldr	r1, [fp, #-64]	; 0xffffffc0
    8b10:	ldr	r0, [fp, #-60]	; 0xffffffc4
    8b14:	bl	940 <flatcc_json_parser_symbol_part>
    8b18:	strd	r0, [fp, #-36]	; 0xffffffdc
    8b1c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8b20:	add	r1, pc, #944	; 0x3b0
    8b24:	ldrd	r0, [r1]
    8b28:	cmp	r3, r1
    8b2c:	cmpeq	r2, r0
    8b30:	bne	8df8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x374>
    8b34:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8b38:	add	r3, r3, #8
    8b3c:	str	r3, [fp, #-60]	; 0xffffffc4
    8b40:	ldr	r1, [fp, #-64]	; 0xffffffc0
    8b44:	ldr	r0, [fp, #-60]	; 0xffffffc4
    8b48:	bl	940 <flatcc_json_parser_symbol_part>
    8b4c:	strd	r0, [fp, #-36]	; 0xffffffdc
    8b50:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8b54:	add	r1, pc, #900	; 0x384
    8b58:	ldrd	r0, [r1]
    8b5c:	cmp	r3, r1
    8b60:	cmpeq	r2, r0
    8b64:	bne	8de0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x35c>
    8b68:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8b6c:	add	r3, r3, #8
    8b70:	str	r3, [fp, #-60]	; 0xffffffc4
    8b74:	ldr	r1, [fp, #-64]	; 0xffffffc0
    8b78:	ldr	r0, [fp, #-60]	; 0xffffffc4
    8b7c:	bl	940 <flatcc_json_parser_symbol_part>
    8b80:	strd	r0, [fp, #-36]	; 0xffffffdc
    8b84:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8b88:	mov	r0, #0
    8b8c:	movt	r0, #65535	; 0xffff
    8b90:	mvn	r1, #0
    8b94:	and	r4, r2, r0
    8b98:	and	r5, r3, r1
    8b9c:	add	r3, pc, #836	; 0x344
    8ba0:	ldrd	r2, [r3]
    8ba4:	cmp	r5, r3
    8ba8:	cmpeq	r4, r2
    8bac:	bne	8c38 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1b4>
    8bb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8bb4:	str	r3, [fp, #-40]	; 0xffffffd8
    8bb8:	mov	r3, #6
    8bbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8bc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8bc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8bc8:	bl	f54 <flatcc_json_parser_match_symbol>
    8bcc:	str	r0, [fp, #-60]	; 0xffffffc4
    8bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8bd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8bd8:	cmp	r2, r3
    8bdc:	beq	8ce8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x264>
    8be0:	sub	r3, fp, #52	; 0x34
    8be4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8be8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8bec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8bf0:	bl	9bc0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    8bf4:	str	r0, [fp, #-60]	; 0xffffffc4
    8bf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8bfc:	cmp	r3, #0
    8c00:	beq	8e7c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f8>
    8c04:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8c08:	ldr	r3, [r3]
    8c0c:	mov	r1, #1
    8c10:	mov	r0, r3
    8c14:	bl	0 <flatcc_builder_table_add_offset>
    8c18:	str	r0, [fp, #-44]	; 0xffffffd4
    8c1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8c20:	cmp	r3, #0
    8c24:	beq	8e7c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f8>
    8c28:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8c2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8c30:	str	r2, [r3]
    8c34:	b	8e0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8c38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8c3c:	mov	r0, #-16777216	; 0xff000000
    8c40:	mvn	r1, #0
    8c44:	and	r6, r2, r0
    8c48:	and	r7, r3, r1
    8c4c:	add	r3, pc, #668	; 0x29c
    8c50:	ldrd	r2, [r3]
    8c54:	cmp	r7, r3
    8c58:	cmpeq	r6, r2
    8c5c:	bne	8cf0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x26c>
    8c60:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8c64:	str	r3, [fp, #-40]	; 0xffffffd8
    8c68:	mov	r3, #5
    8c6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8c70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8c74:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8c78:	bl	f54 <flatcc_json_parser_match_symbol>
    8c7c:	str	r0, [fp, #-60]	; 0xffffffc4
    8c80:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8c84:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8c88:	cmp	r2, r3
    8c8c:	beq	8cf8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x274>
    8c90:	sub	r3, fp, #52	; 0x34
    8c94:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8c98:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8c9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ca0:	bl	8f00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    8ca4:	str	r0, [fp, #-60]	; 0xffffffc4
    8ca8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8cac:	cmp	r3, #0
    8cb0:	beq	8e84 <MyGame_Example_TestJSONPrefix_parse_json_table+0x400>
    8cb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8cb8:	ldr	r3, [r3]
    8cbc:	mov	r1, #0
    8cc0:	mov	r0, r3
    8cc4:	bl	0 <flatcc_builder_table_add_offset>
    8cc8:	str	r0, [fp, #-44]	; 0xffffffd4
    8ccc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8cd0:	cmp	r3, #0
    8cd4:	beq	8e84 <MyGame_Example_TestJSONPrefix_parse_json_table+0x400>
    8cd8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8cdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8ce0:	str	r2, [r3]
    8ce4:	b	8e0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8ce8:	nop	{0}
    8cec:	b	8cfc <MyGame_Example_TestJSONPrefix_parse_json_table+0x278>
    8cf0:	nop	{0}
    8cf4:	b	8cfc <MyGame_Example_TestJSONPrefix_parse_json_table+0x278>
    8cf8:	nop	{0}
    8cfc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    8d00:	mov	r0, #0
    8d04:	movt	r0, #65535	; 0xffff
    8d08:	mvn	r1, #0
    8d0c:	and	r8, r2, r0
    8d10:	and	r9, r3, r1
    8d14:	add	r3, pc, #476	; 0x1dc
    8d18:	ldrd	r2, [r3]
    8d1c:	cmp	r9, r3
    8d20:	cmpeq	r8, r2
    8d24:	bne	8dc8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x344>
    8d28:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8d2c:	str	r3, [fp, #-40]	; 0xffffffd8
    8d30:	mov	r3, #6
    8d34:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8d38:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8d3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8d40:	bl	f54 <flatcc_json_parser_match_symbol>
    8d44:	str	r0, [fp, #-60]	; 0xffffffc4
    8d48:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8d4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8d50:	cmp	r2, r3
    8d54:	beq	8db0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x32c>
    8d58:	sub	r3, fp, #52	; 0x34
    8d5c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8d60:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8d64:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8d68:	bl	a028 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    8d6c:	str	r0, [fp, #-60]	; 0xffffffc4
    8d70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8d74:	cmp	r3, #0
    8d78:	beq	8e8c <MyGame_Example_TestJSONPrefix_parse_json_table+0x408>
    8d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8d80:	ldr	r3, [r3]
    8d84:	mov	r1, #2
    8d88:	mov	r0, r3
    8d8c:	bl	0 <flatcc_builder_table_add_offset>
    8d90:	str	r0, [fp, #-44]	; 0xffffffd4
    8d94:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8d98:	cmp	r3, #0
    8d9c:	beq	8e8c <MyGame_Example_TestJSONPrefix_parse_json_table+0x408>
    8da0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    8da4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    8da8:	str	r2, [r3]
    8dac:	b	8e0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8db0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8db4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8db8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8dbc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8dc0:	str	r0, [fp, #-60]	; 0xffffffc4
    8dc4:	b	8e0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8dc8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8dcc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8dd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8dd4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8dd8:	str	r0, [fp, #-60]	; 0xffffffc4
    8ddc:	b	8e0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8de0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8de4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8de8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8dec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8df0:	str	r0, [fp, #-60]	; 0xffffffc4
    8df4:	b	8e0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x388>
    8df8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8dfc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8e00:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8e04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8e08:	str	r0, [fp, #-60]	; 0xffffffc4
    8e0c:	sub	r3, fp, #48	; 0x30
    8e10:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8e14:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8e18:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8e1c:	bl	b78 <flatcc_json_parser_object_end>
    8e20:	str	r0, [fp, #-60]	; 0xffffffc4
    8e24:	ldr	r3, [fp, #-48]	; 0xffffffd0
    8e28:	cmp	r3, #0
    8e2c:	bne	8af8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x74>
    8e30:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8e34:	ldr	r3, [r3, #24]
    8e38:	cmp	r3, #0
    8e3c:	bne	8e94 <MyGame_Example_TestJSONPrefix_parse_json_table+0x410>
    8e40:	ldr	r3, [fp, #-56]	; 0xffffffc8
    8e44:	ldr	r3, [r3]
    8e48:	mov	r0, r3
    8e4c:	bl	0 <flatcc_builder_end_table>
    8e50:	mov	r2, r0
    8e54:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8e58:	str	r2, [r3]
    8e5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8e60:	ldr	r3, [r3]
    8e64:	cmp	r3, #0
    8e68:	beq	8e9c <MyGame_Example_TestJSONPrefix_parse_json_table+0x418>
    8e6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    8e70:	b	8eb8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x434>
    8e74:	nop	{0}
    8e78:	b	8ea0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    8e7c:	nop	{0}
    8e80:	b	8ea0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    8e84:	nop	{0}
    8e88:	b	8ea0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    8e8c:	nop	{0}
    8e90:	b	8ea0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    8e94:	nop	{0}
    8e98:	b	8ea0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x41c>
    8e9c:	nop	{0}
    8ea0:	mov	r3, #33	; 0x21
    8ea4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    8ea8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    8eac:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8eb0:	bl	0 <flatcc_json_parser_set_error>
    8eb4:	mov	r3, r0
    8eb8:	mov	r0, r3
    8ebc:	sub	sp, fp, #28
    8ec0:	ldrd	r4, [sp]
    8ec4:	ldrd	r6, [sp, #8]
    8ec8:	ldrd	r8, [sp, #16]
    8ecc:	ldr	fp, [sp, #24]
    8ed0:	add	sp, sp, #28
    8ed4:	pop	{pc}		; (ldr pc, [sp], #4)
    8ed8:	.word	0x6a736f6e
    8edc:	.word	0x74657374
    8ee0:	.word	0x69787061
    8ee4:	.word	0x70726566
    8ee8:	.word	0x67320000
    8eec:	.word	0x7273696e
    8ef0:	.word	0x67000000
    8ef4:	.word	0x7273696e
    8ef8:	.word	0x67330000
    8efc:	.word	0x7273696e

00008f00 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    8f00:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8f04:	strd	r6, [sp, #8]
    8f08:	strd	r8, [sp, #16]
    8f0c:	str	fp, [sp, #24]
    8f10:	str	lr, [sp, #28]
    8f14:	add	fp, sp, #28
    8f18:	sub	sp, sp, #120	; 0x78
    8f1c:	str	r0, [fp, #-104]	; 0xffffff98
    8f20:	str	r1, [fp, #-108]	; 0xffffff94
    8f24:	str	r2, [fp, #-112]	; 0xffffff90
    8f28:	str	r3, [fp, #-116]	; 0xffffff8c
    8f2c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    8f30:	mov	r2, #0
    8f34:	str	r2, [r3]
    8f38:	ldr	r3, [fp, #-104]	; 0xffffff98
    8f3c:	ldr	r3, [r3]
    8f40:	mov	r1, #9
    8f44:	mov	r0, r3
    8f48:	bl	0 <flatcc_builder_start_table>
    8f4c:	mov	r3, r0
    8f50:	cmp	r3, #0
    8f54:	bne	9af4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf4>
    8f58:	sub	r3, fp, #52	; 0x34
    8f5c:	ldr	r2, [fp, #-112]	; 0xffffff90
    8f60:	ldr	r1, [fp, #-108]	; 0xffffff94
    8f64:	ldr	r0, [fp, #-104]	; 0xffffff98
    8f68:	bl	a84 <flatcc_json_parser_object_start>
    8f6c:	str	r0, [fp, #-108]	; 0xffffff94
    8f70:	b	9aa4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba4>
    8f74:	ldr	r2, [fp, #-112]	; 0xffffff90
    8f78:	ldr	r1, [fp, #-108]	; 0xffffff94
    8f7c:	ldr	r0, [fp, #-104]	; 0xffffff98
    8f80:	bl	60c <flatcc_json_parser_symbol_start>
    8f84:	str	r0, [fp, #-108]	; 0xffffff94
    8f88:	ldr	r1, [fp, #-112]	; 0xffffff90
    8f8c:	ldr	r0, [fp, #-108]	; 0xffffff94
    8f90:	bl	940 <flatcc_json_parser_symbol_part>
    8f94:	strd	r0, [fp, #-36]	; 0xffffffdc
    8f98:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    8f9c:	add	r3, pc, #932	; 0x3a4
    8fa0:	ldrd	r2, [r3]
    8fa4:	cmp	r1, r3
    8fa8:	cmpeq	r0, r2
    8fac:	bhi	944c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x54c>
    8fb0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    8fb4:	add	r3, pc, #916	; 0x394
    8fb8:	ldrd	r2, [r3]
    8fbc:	cmp	r1, r3
    8fc0:	cmpeq	r0, r2
    8fc4:	bne	9144 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x244>
    8fc8:	ldr	r3, [fp, #-108]	; 0xffffff94
    8fcc:	add	r3, r3, #8
    8fd0:	str	r3, [fp, #-108]	; 0xffffff94
    8fd4:	ldr	r1, [fp, #-112]	; 0xffffff90
    8fd8:	ldr	r0, [fp, #-108]	; 0xffffff94
    8fdc:	bl	940 <flatcc_json_parser_symbol_part>
    8fe0:	strd	r0, [fp, #-36]	; 0xffffffdc
    8fe4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    8fe8:	mov	r2, #0
    8fec:	mov	r3, #-16777216	; 0xff000000
    8ff0:	and	r4, r0, r2
    8ff4:	and	r5, r1, r3
    8ff8:	cmp	r5, #889192448	; 0x35000000
    8ffc:	cmpeq	r4, #0
    9000:	bne	912c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x22c>
    9004:	ldr	r3, [fp, #-108]	; 0xffffff94
    9008:	str	r3, [fp, #-40]	; 0xffffffd8
    900c:	mov	r3, #1
    9010:	ldr	r2, [fp, #-112]	; 0xffffff90
    9014:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9018:	ldr	r0, [fp, #-104]	; 0xffffff98
    901c:	bl	f54 <flatcc_json_parser_match_symbol>
    9020:	str	r0, [fp, #-108]	; 0xffffff94
    9024:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9028:	ldr	r3, [fp, #-108]	; 0xffffff94
    902c:	cmp	r2, r3
    9030:	beq	9114 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x214>
    9034:	mov	r3, #0
    9038:	str	r3, [fp, #-60]	; 0xffffffc4
    903c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9040:	str	r3, [fp, #-40]	; 0xffffffd8
    9044:	sub	r3, fp, #60	; 0x3c
    9048:	ldr	r2, [fp, #-112]	; 0xffffff90
    904c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9050:	ldr	r0, [fp, #-104]	; 0xffffff98
    9054:	bl	18e8 <flatcc_json_parser_uint32>
    9058:	str	r0, [fp, #-108]	; 0xffffff94
    905c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9060:	ldr	r3, [fp, #-108]	; 0xffffff94
    9064:	cmp	r2, r3
    9068:	bne	90b8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    906c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9070:	str	r3, [fp, #-40]	; 0xffffffd8
    9074:	sub	r3, fp, #60	; 0x3c
    9078:	str	r3, [sp]
    907c:	movw	r3, #0
    9080:	movt	r3, #0
    9084:	ldr	r2, [fp, #-112]	; 0xffffff90
    9088:	ldr	r1, [fp, #-40]	; 0xffffffd8
    908c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9090:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    9094:	str	r0, [fp, #-108]	; 0xffffff94
    9098:	ldr	r2, [fp, #-108]	; 0xffffff94
    909c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    90a0:	cmp	r2, r3
    90a4:	beq	9afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    90a8:	ldr	r2, [fp, #-108]	; 0xffffff94
    90ac:	ldr	r3, [fp, #-112]	; 0xffffff90
    90b0:	cmp	r2, r3
    90b4:	beq	9afc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
    90b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    90bc:	cmp	r3, #0
    90c0:	bne	90d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1d8>
    90c4:	ldr	r3, [fp, #-104]	; 0xffffff98
    90c8:	ldr	r3, [r3, #8]
    90cc:	and	r3, r3, #2
    90d0:	cmp	r3, #0
    90d4:	beq	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    90d8:	ldr	r3, [fp, #-104]	; 0xffffff98
    90dc:	ldr	r0, [r3]
    90e0:	mov	r3, #4
    90e4:	mov	r2, #4
    90e8:	mov	r1, #1
    90ec:	bl	0 <flatcc_builder_table_add>
    90f0:	str	r0, [fp, #-44]	; 0xffffffd4
    90f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    90f8:	cmp	r3, #0
    90fc:	beq	9b04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc04>
    9100:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9104:	mov	r1, r3
    9108:	ldr	r0, [fp, #-44]	; 0xffffffd4
    910c:	bl	10c <flatbuffers_uint32_write_to_pe>
    9110:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9114:	ldr	r2, [fp, #-112]	; 0xffffff90
    9118:	ldr	r1, [fp, #-108]	; 0xffffff94
    911c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9120:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9124:	str	r0, [fp, #-108]	; 0xffffff94
    9128:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    912c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9130:	ldr	r1, [fp, #-108]	; 0xffffff94
    9134:	ldr	r0, [fp, #-104]	; 0xffffff98
    9138:	bl	0 <flatcc_json_parser_unmatched_symbol>
    913c:	str	r0, [fp, #-108]	; 0xffffff94
    9140:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9144:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    9148:	mov	r2, #0
    914c:	mvn	r3, #0
    9150:	and	r6, r0, r2
    9154:	and	r7, r1, r3
    9158:	mov	r2, #0
    915c:	movw	r3, #24929	; 0x6161
    9160:	movt	r3, #24929	; 0x6161
    9164:	cmp	r7, r3
    9168:	cmpeq	r6, r2
    916c:	bne	91f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
    9170:	ldr	r3, [fp, #-108]	; 0xffffff94
    9174:	str	r3, [fp, #-40]	; 0xffffffd8
    9178:	mov	r3, #4
    917c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9180:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9184:	ldr	r0, [fp, #-104]	; 0xffffff98
    9188:	bl	f54 <flatcc_json_parser_match_symbol>
    918c:	str	r0, [fp, #-108]	; 0xffffff94
    9190:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9194:	ldr	r3, [fp, #-108]	; 0xffffff94
    9198:	cmp	r2, r3
    919c:	beq	9200 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x300>
    91a0:	sub	r3, fp, #56	; 0x38
    91a4:	ldr	r2, [fp, #-112]	; 0xffffff90
    91a8:	ldr	r1, [fp, #-108]	; 0xffffff94
    91ac:	ldr	r0, [fp, #-104]	; 0xffffff98
    91b0:	bl	0 <flatcc_json_parser_build_string>
    91b4:	str	r0, [fp, #-108]	; 0xffffff94
    91b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    91bc:	cmp	r3, #0
    91c0:	beq	9b0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc0c>
    91c4:	ldr	r3, [fp, #-104]	; 0xffffff98
    91c8:	ldr	r3, [r3]
    91cc:	mov	r1, #0
    91d0:	mov	r0, r3
    91d4:	bl	0 <flatcc_builder_table_add_offset>
    91d8:	str	r0, [fp, #-48]	; 0xffffffd0
    91dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    91e0:	cmp	r3, #0
    91e4:	beq	9b0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc0c>
    91e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    91ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    91f0:	str	r2, [r3]
    91f4:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    91f8:	nop	{0}
    91fc:	b	9204 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x304>
    9200:	nop	{0}
    9204:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    9208:	add	r3, pc, #328	; 0x148
    920c:	ldrd	r2, [r3]
    9210:	cmp	r1, r3
    9214:	cmpeq	r0, r2
    9218:	bne	9368 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x468>
    921c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9220:	str	r3, [fp, #-40]	; 0xffffffd8
    9224:	mov	r3, #8
    9228:	ldr	r2, [fp, #-112]	; 0xffffff90
    922c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9230:	ldr	r0, [fp, #-104]	; 0xffffff98
    9234:	bl	f54 <flatcc_json_parser_match_symbol>
    9238:	str	r0, [fp, #-108]	; 0xffffff94
    923c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9240:	ldr	r3, [fp, #-108]	; 0xffffff94
    9244:	cmp	r2, r3
    9248:	beq	932c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x42c>
    924c:	mov	r2, #0
    9250:	mov	r3, #0
    9254:	strd	r2, [fp, #-68]	; 0xffffffbc
    9258:	ldr	r3, [fp, #-108]	; 0xffffff94
    925c:	str	r3, [fp, #-40]	; 0xffffffd8
    9260:	sub	r3, fp, #68	; 0x44
    9264:	ldr	r2, [fp, #-112]	; 0xffffff90
    9268:	ldr	r1, [fp, #-40]	; 0xffffffd8
    926c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9270:	bl	1b7c <flatcc_json_parser_int64>
    9274:	str	r0, [fp, #-108]	; 0xffffff94
    9278:	ldr	r2, [fp, #-40]	; 0xffffffd8
    927c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9280:	cmp	r2, r3
    9284:	bne	92d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d4>
    9288:	ldr	r3, [fp, #-108]	; 0xffffff94
    928c:	str	r3, [fp, #-40]	; 0xffffffd8
    9290:	sub	r3, fp, #68	; 0x44
    9294:	str	r3, [sp]
    9298:	movw	r3, #0
    929c:	movt	r3, #0
    92a0:	ldr	r2, [fp, #-112]	; 0xffffff90
    92a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    92a8:	ldr	r0, [fp, #-104]	; 0xffffff98
    92ac:	bl	279c <flatcc_json_parser_symbolic_int64>
    92b0:	str	r0, [fp, #-108]	; 0xffffff94
    92b4:	ldr	r2, [fp, #-108]	; 0xffffff94
    92b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    92bc:	cmp	r2, r3
    92c0:	beq	9b14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
    92c4:	ldr	r2, [fp, #-108]	; 0xffffff94
    92c8:	ldr	r3, [fp, #-112]	; 0xffffff90
    92cc:	cmp	r2, r3
    92d0:	beq	9b14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
    92d4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    92d8:	orrs	r3, r2, r3
    92dc:	bne	92f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3f4>
    92e0:	ldr	r3, [fp, #-104]	; 0xffffff98
    92e4:	ldr	r3, [r3, #8]
    92e8:	and	r3, r3, #2
    92ec:	cmp	r3, #0
    92f0:	beq	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    92f4:	ldr	r3, [fp, #-104]	; 0xffffff98
    92f8:	ldr	r0, [r3]
    92fc:	mov	r3, #8
    9300:	mov	r2, #8
    9304:	mov	r1, #3
    9308:	bl	0 <flatcc_builder_table_add>
    930c:	str	r0, [fp, #-44]	; 0xffffffd4
    9310:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9314:	cmp	r3, #0
    9318:	beq	9b1c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc1c>
    931c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
    9320:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9324:	bl	32c <flatbuffers_int64_write_to_pe>
    9328:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    932c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9330:	ldr	r1, [fp, #-108]	; 0xffffff94
    9334:	ldr	r0, [fp, #-104]	; 0xffffff98
    9338:	bl	0 <flatcc_json_parser_unmatched_symbol>
    933c:	str	r0, [fp, #-108]	; 0xffffff94
    9340:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9344:	nop	{0}
    9348:	.word	0xffffffff
    934c:	.word	0x63636362
    9350:	.word	0x31323334
    9354:	.word	0x61616161
    9358:	.word	0x31323334
    935c:	.word	0x62626262
    9360:	.word	0x31323334
    9364:	.word	0x63636363
    9368:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    936c:	mov	r2, #0
    9370:	mvn	r3, #0
    9374:	and	r8, r0, r2
    9378:	and	r9, r1, r3
    937c:	mov	r2, #0
    9380:	movw	r3, #25186	; 0x6262
    9384:	movt	r3, #25186	; 0x6262
    9388:	cmp	r9, r3
    938c:	cmpeq	r8, r2
    9390:	bne	9434 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    9394:	ldr	r3, [fp, #-108]	; 0xffffff94
    9398:	str	r3, [fp, #-40]	; 0xffffffd8
    939c:	mov	r3, #4
    93a0:	ldr	r2, [fp, #-112]	; 0xffffff90
    93a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    93a8:	ldr	r0, [fp, #-104]	; 0xffffff98
    93ac:	bl	f54 <flatcc_json_parser_match_symbol>
    93b0:	str	r0, [fp, #-108]	; 0xffffff94
    93b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    93b8:	ldr	r3, [fp, #-108]	; 0xffffff94
    93bc:	cmp	r2, r3
    93c0:	beq	941c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x51c>
    93c4:	sub	r3, fp, #56	; 0x38
    93c8:	ldr	r2, [fp, #-112]	; 0xffffff90
    93cc:	ldr	r1, [fp, #-108]	; 0xffffff94
    93d0:	ldr	r0, [fp, #-104]	; 0xffffff98
    93d4:	bl	0 <flatcc_json_parser_build_string>
    93d8:	str	r0, [fp, #-108]	; 0xffffff94
    93dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    93e0:	cmp	r3, #0
    93e4:	beq	9b24 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc24>
    93e8:	ldr	r3, [fp, #-104]	; 0xffffff98
    93ec:	ldr	r3, [r3]
    93f0:	mov	r1, #2
    93f4:	mov	r0, r3
    93f8:	bl	0 <flatcc_builder_table_add_offset>
    93fc:	str	r0, [fp, #-48]	; 0xffffffd0
    9400:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9404:	cmp	r3, #0
    9408:	beq	9b24 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc24>
    940c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    9410:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9414:	str	r2, [r3]
    9418:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    941c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9420:	ldr	r1, [fp, #-108]	; 0xffffff94
    9424:	ldr	r0, [fp, #-104]	; 0xffffff98
    9428:	bl	0 <flatcc_json_parser_unmatched_symbol>
    942c:	str	r0, [fp, #-108]	; 0xffffff94
    9430:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9434:	ldr	r2, [fp, #-112]	; 0xffffff90
    9438:	ldr	r1, [fp, #-108]	; 0xffffff94
    943c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9440:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9444:	str	r0, [fp, #-108]	; 0xffffff94
    9448:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    944c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    9450:	sub	r3, pc, #248	; 0xf8
    9454:	ldrd	r2, [r3]
    9458:	cmp	r1, r3
    945c:	cmpeq	r0, r2
    9460:	bne	96fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7fc>
    9464:	ldr	r3, [fp, #-108]	; 0xffffff94
    9468:	str	r3, [fp, #-40]	; 0xffffffd8
    946c:	mov	r3, #8
    9470:	ldr	r2, [fp, #-112]	; 0xffffff90
    9474:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9478:	ldr	r0, [fp, #-104]	; 0xffffff98
    947c:	bl	f54 <flatcc_json_parser_match_symbol>
    9480:	str	r0, [fp, #-108]	; 0xffffff94
    9484:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9488:	ldr	r3, [fp, #-108]	; 0xffffff94
    948c:	cmp	r2, r3
    9490:	beq	9574 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x674>
    9494:	mov	r2, #0
    9498:	mov	r3, #0
    949c:	strd	r2, [fp, #-76]	; 0xffffffb4
    94a0:	ldr	r3, [fp, #-108]	; 0xffffff94
    94a4:	str	r3, [fp, #-40]	; 0xffffffd8
    94a8:	sub	r3, fp, #76	; 0x4c
    94ac:	ldr	r2, [fp, #-112]	; 0xffffff90
    94b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    94b4:	ldr	r0, [fp, #-104]	; 0xffffff98
    94b8:	bl	1b7c <flatcc_json_parser_int64>
    94bc:	str	r0, [fp, #-108]	; 0xffffff94
    94c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    94c4:	ldr	r3, [fp, #-108]	; 0xffffff94
    94c8:	cmp	r2, r3
    94cc:	bne	951c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x61c>
    94d0:	ldr	r3, [fp, #-108]	; 0xffffff94
    94d4:	str	r3, [fp, #-40]	; 0xffffffd8
    94d8:	sub	r3, fp, #76	; 0x4c
    94dc:	str	r3, [sp]
    94e0:	movw	r3, #0
    94e4:	movt	r3, #0
    94e8:	ldr	r2, [fp, #-112]	; 0xffffff90
    94ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
    94f0:	ldr	r0, [fp, #-104]	; 0xffffff98
    94f4:	bl	279c <flatcc_json_parser_symbolic_int64>
    94f8:	str	r0, [fp, #-108]	; 0xffffff94
    94fc:	ldr	r2, [fp, #-108]	; 0xffffff94
    9500:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9504:	cmp	r2, r3
    9508:	beq	9b2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc2c>
    950c:	ldr	r2, [fp, #-108]	; 0xffffff94
    9510:	ldr	r3, [fp, #-112]	; 0xffffff90
    9514:	cmp	r2, r3
    9518:	beq	9b2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc2c>
    951c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    9520:	orrs	r3, r2, r3
    9524:	bne	953c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x63c>
    9528:	ldr	r3, [fp, #-104]	; 0xffffff98
    952c:	ldr	r3, [r3, #8]
    9530:	and	r3, r3, #2
    9534:	cmp	r3, #0
    9538:	beq	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    953c:	ldr	r3, [fp, #-104]	; 0xffffff98
    9540:	ldr	r0, [r3]
    9544:	mov	r3, #8
    9548:	mov	r2, #8
    954c:	mov	r1, #5
    9550:	bl	0 <flatcc_builder_table_add>
    9554:	str	r0, [fp, #-44]	; 0xffffffd4
    9558:	ldr	r3, [fp, #-44]	; 0xffffffd4
    955c:	cmp	r3, #0
    9560:	beq	9b34 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc34>
    9564:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    9568:	ldr	r0, [fp, #-44]	; 0xffffffd4
    956c:	bl	32c <flatbuffers_int64_write_to_pe>
    9570:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9574:	ldr	r3, [fp, #-108]	; 0xffffff94
    9578:	add	r3, r3, #8
    957c:	str	r3, [fp, #-108]	; 0xffffff94
    9580:	ldr	r1, [fp, #-112]	; 0xffffff90
    9584:	ldr	r0, [fp, #-108]	; 0xffffff94
    9588:	bl	940 <flatcc_json_parser_symbol_part>
    958c:	strd	r0, [fp, #-36]	; 0xffffffdc
    9590:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    9594:	mov	r2, #0
    9598:	mov	r3, #-16777216	; 0xff000000
    959c:	and	ip, r0, r2
    95a0:	str	ip, [fp, #-124]	; 0xffffff84
    95a4:	and	r3, r1, r3
    95a8:	str	r3, [fp, #-120]	; 0xffffff88
    95ac:	ldrd	r2, [fp, #-124]	; 0xffffff84
    95b0:	cmp	r3, #889192448	; 0x35000000
    95b4:	cmpeq	r2, #0
    95b8:	bne	96e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e4>
    95bc:	ldr	r3, [fp, #-108]	; 0xffffff94
    95c0:	str	r3, [fp, #-40]	; 0xffffffd8
    95c4:	mov	r3, #1
    95c8:	ldr	r2, [fp, #-112]	; 0xffffff90
    95cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    95d0:	ldr	r0, [fp, #-104]	; 0xffffff98
    95d4:	bl	f54 <flatcc_json_parser_match_symbol>
    95d8:	str	r0, [fp, #-108]	; 0xffffff94
    95dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    95e0:	ldr	r3, [fp, #-108]	; 0xffffff94
    95e4:	cmp	r2, r3
    95e8:	beq	96cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7cc>
    95ec:	mov	r3, #0
    95f0:	str	r3, [fp, #-80]	; 0xffffffb0
    95f4:	ldr	r3, [fp, #-108]	; 0xffffff94
    95f8:	str	r3, [fp, #-40]	; 0xffffffd8
    95fc:	sub	r3, fp, #80	; 0x50
    9600:	ldr	r2, [fp, #-112]	; 0xffffff90
    9604:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9608:	ldr	r0, [fp, #-104]	; 0xffffff98
    960c:	bl	18e8 <flatcc_json_parser_uint32>
    9610:	str	r0, [fp, #-108]	; 0xffffff94
    9614:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9618:	ldr	r3, [fp, #-108]	; 0xffffff94
    961c:	cmp	r2, r3
    9620:	bne	9670 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x770>
    9624:	ldr	r3, [fp, #-108]	; 0xffffff94
    9628:	str	r3, [fp, #-40]	; 0xffffffd8
    962c:	sub	r3, fp, #80	; 0x50
    9630:	str	r3, [sp]
    9634:	movw	r3, #0
    9638:	movt	r3, #0
    963c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9640:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9644:	ldr	r0, [fp, #-104]	; 0xffffff98
    9648:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    964c:	str	r0, [fp, #-108]	; 0xffffff94
    9650:	ldr	r2, [fp, #-108]	; 0xffffff94
    9654:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9658:	cmp	r2, r3
    965c:	beq	9b3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc3c>
    9660:	ldr	r2, [fp, #-108]	; 0xffffff94
    9664:	ldr	r3, [fp, #-112]	; 0xffffff90
    9668:	cmp	r2, r3
    966c:	beq	9b3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc3c>
    9670:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9674:	cmp	r3, #0
    9678:	bne	9690 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x790>
    967c:	ldr	r3, [fp, #-104]	; 0xffffff98
    9680:	ldr	r3, [r3, #8]
    9684:	and	r3, r3, #2
    9688:	cmp	r3, #0
    968c:	beq	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9690:	ldr	r3, [fp, #-104]	; 0xffffff98
    9694:	ldr	r0, [r3]
    9698:	mov	r3, #4
    969c:	mov	r2, #4
    96a0:	mov	r1, #6
    96a4:	bl	0 <flatcc_builder_table_add>
    96a8:	str	r0, [fp, #-44]	; 0xffffffd4
    96ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    96b0:	cmp	r3, #0
    96b4:	beq	9b44 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc44>
    96b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
    96bc:	mov	r1, r3
    96c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    96c4:	bl	10c <flatbuffers_uint32_write_to_pe>
    96c8:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    96cc:	ldr	r2, [fp, #-112]	; 0xffffff90
    96d0:	ldr	r1, [fp, #-108]	; 0xffffff94
    96d4:	ldr	r0, [fp, #-104]	; 0xffffff98
    96d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    96dc:	str	r0, [fp, #-108]	; 0xffffff94
    96e0:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    96e4:	ldr	r2, [fp, #-112]	; 0xffffff90
    96e8:	ldr	r1, [fp, #-108]	; 0xffffff94
    96ec:	ldr	r0, [fp, #-104]	; 0xffffff98
    96f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    96f4:	str	r0, [fp, #-108]	; 0xffffff94
    96f8:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    96fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    9700:	mov	r2, #0
    9704:	mvn	r3, #0
    9708:	and	ip, r0, r2
    970c:	str	ip, [fp, #-132]	; 0xffffff7c
    9710:	and	r3, r1, r3
    9714:	str	r3, [fp, #-128]	; 0xffffff80
    9718:	mov	r2, #0
    971c:	movw	r3, #25443	; 0x6363
    9720:	movt	r3, #25443	; 0x6363
    9724:	ldrd	r0, [fp, #-132]	; 0xffffff7c
    9728:	cmp	r1, r3
    972c:	cmpeq	r0, r2
    9730:	bne	97bc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8bc>
    9734:	ldr	r3, [fp, #-108]	; 0xffffff94
    9738:	str	r3, [fp, #-40]	; 0xffffffd8
    973c:	mov	r3, #4
    9740:	ldr	r2, [fp, #-112]	; 0xffffff90
    9744:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9748:	ldr	r0, [fp, #-104]	; 0xffffff98
    974c:	bl	f54 <flatcc_json_parser_match_symbol>
    9750:	str	r0, [fp, #-108]	; 0xffffff94
    9754:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9758:	ldr	r3, [fp, #-108]	; 0xffffff94
    975c:	cmp	r2, r3
    9760:	beq	97c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8c4>
    9764:	sub	r3, fp, #56	; 0x38
    9768:	ldr	r2, [fp, #-112]	; 0xffffff90
    976c:	ldr	r1, [fp, #-108]	; 0xffffff94
    9770:	ldr	r0, [fp, #-104]	; 0xffffff98
    9774:	bl	0 <flatcc_json_parser_build_string>
    9778:	str	r0, [fp, #-108]	; 0xffffff94
    977c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9780:	cmp	r3, #0
    9784:	beq	9b4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc4c>
    9788:	ldr	r3, [fp, #-104]	; 0xffffff98
    978c:	ldr	r3, [r3]
    9790:	mov	r1, #4
    9794:	mov	r0, r3
    9798:	bl	0 <flatcc_builder_table_add_offset>
    979c:	str	r0, [fp, #-48]	; 0xffffffd0
    97a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    97a4:	cmp	r3, #0
    97a8:	beq	9b4c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc4c>
    97ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    97b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    97b4:	str	r2, [r3]
    97b8:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    97bc:	nop	{0}
    97c0:	b	97c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8c8>
    97c4:	nop	{0}
    97c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    97cc:	add	r3, pc, #996	; 0x3e4
    97d0:	ldrd	r2, [r3]
    97d4:	cmp	r1, r3
    97d8:	cmpeq	r0, r2
    97dc:	bne	9a78 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb78>
    97e0:	ldr	r3, [fp, #-108]	; 0xffffff94
    97e4:	str	r3, [fp, #-40]	; 0xffffffd8
    97e8:	mov	r3, #8
    97ec:	ldr	r2, [fp, #-112]	; 0xffffff90
    97f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    97f4:	ldr	r0, [fp, #-104]	; 0xffffff98
    97f8:	bl	f54 <flatcc_json_parser_match_symbol>
    97fc:	str	r0, [fp, #-108]	; 0xffffff94
    9800:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9804:	ldr	r3, [fp, #-108]	; 0xffffff94
    9808:	cmp	r2, r3
    980c:	beq	98f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9f0>
    9810:	mov	r2, #0
    9814:	mov	r3, #0
    9818:	strd	r2, [fp, #-92]	; 0xffffffa4
    981c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9820:	str	r3, [fp, #-40]	; 0xffffffd8
    9824:	sub	r3, fp, #92	; 0x5c
    9828:	ldr	r2, [fp, #-112]	; 0xffffff90
    982c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9830:	ldr	r0, [fp, #-104]	; 0xffffff98
    9834:	bl	1b7c <flatcc_json_parser_int64>
    9838:	str	r0, [fp, #-108]	; 0xffffff94
    983c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9840:	ldr	r3, [fp, #-108]	; 0xffffff94
    9844:	cmp	r2, r3
    9848:	bne	9898 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
    984c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9850:	str	r3, [fp, #-40]	; 0xffffffd8
    9854:	sub	r3, fp, #92	; 0x5c
    9858:	str	r3, [sp]
    985c:	movw	r3, #0
    9860:	movt	r3, #0
    9864:	ldr	r2, [fp, #-112]	; 0xffffff90
    9868:	ldr	r1, [fp, #-40]	; 0xffffffd8
    986c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9870:	bl	279c <flatcc_json_parser_symbolic_int64>
    9874:	str	r0, [fp, #-108]	; 0xffffff94
    9878:	ldr	r2, [fp, #-108]	; 0xffffff94
    987c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9880:	cmp	r2, r3
    9884:	beq	9b54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc54>
    9888:	ldr	r2, [fp, #-108]	; 0xffffff94
    988c:	ldr	r3, [fp, #-112]	; 0xffffff90
    9890:	cmp	r2, r3
    9894:	beq	9b54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc54>
    9898:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    989c:	orrs	r3, r2, r3
    98a0:	bne	98b8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9b8>
    98a4:	ldr	r3, [fp, #-104]	; 0xffffff98
    98a8:	ldr	r3, [r3, #8]
    98ac:	and	r3, r3, #2
    98b0:	cmp	r3, #0
    98b4:	beq	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    98b8:	ldr	r3, [fp, #-104]	; 0xffffff98
    98bc:	ldr	r0, [r3]
    98c0:	mov	r3, #8
    98c4:	mov	r2, #8
    98c8:	mov	r1, #7
    98cc:	bl	0 <flatcc_builder_table_add>
    98d0:	str	r0, [fp, #-44]	; 0xffffffd4
    98d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    98d8:	cmp	r3, #0
    98dc:	beq	9b5c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc5c>
    98e0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
    98e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    98e8:	bl	32c <flatbuffers_int64_write_to_pe>
    98ec:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    98f0:	ldr	r3, [fp, #-108]	; 0xffffff94
    98f4:	add	r3, r3, #8
    98f8:	str	r3, [fp, #-108]	; 0xffffff94
    98fc:	ldr	r1, [fp, #-112]	; 0xffffff90
    9900:	ldr	r0, [fp, #-108]	; 0xffffff94
    9904:	bl	940 <flatcc_json_parser_symbol_part>
    9908:	strd	r0, [fp, #-36]	; 0xffffffdc
    990c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    9910:	mov	r2, #0
    9914:	mov	r3, #-16777216	; 0xff000000
    9918:	and	ip, r0, r2
    991c:	str	ip, [fp, #-140]	; 0xffffff74
    9920:	and	r3, r1, r3
    9924:	str	r3, [fp, #-136]	; 0xffffff78
    9928:	ldrd	r2, [fp, #-140]	; 0xffffff74
    992c:	cmp	r3, #889192448	; 0x35000000
    9930:	cmpeq	r2, #0
    9934:	bne	9a60 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb60>
    9938:	ldr	r3, [fp, #-108]	; 0xffffff94
    993c:	str	r3, [fp, #-40]	; 0xffffffd8
    9940:	mov	r3, #1
    9944:	ldr	r2, [fp, #-112]	; 0xffffff90
    9948:	ldr	r1, [fp, #-40]	; 0xffffffd8
    994c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9950:	bl	f54 <flatcc_json_parser_match_symbol>
    9954:	str	r0, [fp, #-108]	; 0xffffff94
    9958:	ldr	r2, [fp, #-40]	; 0xffffffd8
    995c:	ldr	r3, [fp, #-108]	; 0xffffff94
    9960:	cmp	r2, r3
    9964:	beq	9a48 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb48>
    9968:	mov	r3, #0
    996c:	str	r3, [fp, #-96]	; 0xffffffa0
    9970:	ldr	r3, [fp, #-108]	; 0xffffff94
    9974:	str	r3, [fp, #-40]	; 0xffffffd8
    9978:	sub	r3, fp, #96	; 0x60
    997c:	ldr	r2, [fp, #-112]	; 0xffffff90
    9980:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9984:	ldr	r0, [fp, #-104]	; 0xffffff98
    9988:	bl	18e8 <flatcc_json_parser_uint32>
    998c:	str	r0, [fp, #-108]	; 0xffffff94
    9990:	ldr	r2, [fp, #-40]	; 0xffffffd8
    9994:	ldr	r3, [fp, #-108]	; 0xffffff94
    9998:	cmp	r2, r3
    999c:	bne	99ec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
    99a0:	ldr	r3, [fp, #-108]	; 0xffffff94
    99a4:	str	r3, [fp, #-40]	; 0xffffffd8
    99a8:	sub	r3, fp, #96	; 0x60
    99ac:	str	r3, [sp]
    99b0:	movw	r3, #0
    99b4:	movt	r3, #0
    99b8:	ldr	r2, [fp, #-112]	; 0xffffff90
    99bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    99c0:	ldr	r0, [fp, #-104]	; 0xffffff98
    99c4:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    99c8:	str	r0, [fp, #-108]	; 0xffffff94
    99cc:	ldr	r2, [fp, #-108]	; 0xffffff94
    99d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    99d4:	cmp	r2, r3
    99d8:	beq	9b64 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc64>
    99dc:	ldr	r2, [fp, #-108]	; 0xffffff94
    99e0:	ldr	r3, [fp, #-112]	; 0xffffff90
    99e4:	cmp	r2, r3
    99e8:	beq	9b64 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc64>
    99ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
    99f0:	cmp	r3, #0
    99f4:	bne	9a0c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb0c>
    99f8:	ldr	r3, [fp, #-104]	; 0xffffff98
    99fc:	ldr	r3, [r3, #8]
    9a00:	and	r3, r3, #2
    9a04:	cmp	r3, #0
    9a08:	beq	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9a0c:	ldr	r3, [fp, #-104]	; 0xffffff98
    9a10:	ldr	r0, [r3]
    9a14:	mov	r3, #4
    9a18:	mov	r2, #4
    9a1c:	mov	r1, #8
    9a20:	bl	0 <flatcc_builder_table_add>
    9a24:	str	r0, [fp, #-44]	; 0xffffffd4
    9a28:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9a2c:	cmp	r3, #0
    9a30:	beq	9b6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc6c>
    9a34:	ldr	r3, [fp, #-96]	; 0xffffffa0
    9a38:	mov	r1, r3
    9a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9a40:	bl	10c <flatbuffers_uint32_write_to_pe>
    9a44:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9a48:	ldr	r2, [fp, #-112]	; 0xffffff90
    9a4c:	ldr	r1, [fp, #-108]	; 0xffffff94
    9a50:	ldr	r0, [fp, #-104]	; 0xffffff98
    9a54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a58:	str	r0, [fp, #-108]	; 0xffffff94
    9a5c:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9a60:	ldr	r2, [fp, #-112]	; 0xffffff90
    9a64:	ldr	r1, [fp, #-108]	; 0xffffff94
    9a68:	ldr	r0, [fp, #-104]	; 0xffffff98
    9a6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a70:	str	r0, [fp, #-108]	; 0xffffff94
    9a74:	b	9a8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb8c>
    9a78:	ldr	r2, [fp, #-112]	; 0xffffff90
    9a7c:	ldr	r1, [fp, #-108]	; 0xffffff94
    9a80:	ldr	r0, [fp, #-104]	; 0xffffff98
    9a84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a88:	str	r0, [fp, #-108]	; 0xffffff94
    9a8c:	sub	r3, fp, #52	; 0x34
    9a90:	ldr	r2, [fp, #-112]	; 0xffffff90
    9a94:	ldr	r1, [fp, #-108]	; 0xffffff94
    9a98:	ldr	r0, [fp, #-104]	; 0xffffff98
    9a9c:	bl	b78 <flatcc_json_parser_object_end>
    9aa0:	str	r0, [fp, #-108]	; 0xffffff94
    9aa4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9aa8:	cmp	r3, #0
    9aac:	bne	8f74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x74>
    9ab0:	ldr	r3, [fp, #-104]	; 0xffffff98
    9ab4:	ldr	r3, [r3, #24]
    9ab8:	cmp	r3, #0
    9abc:	bne	9b74 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc74>
    9ac0:	ldr	r3, [fp, #-104]	; 0xffffff98
    9ac4:	ldr	r3, [r3]
    9ac8:	mov	r0, r3
    9acc:	bl	0 <flatcc_builder_end_table>
    9ad0:	mov	r2, r0
    9ad4:	ldr	r3, [fp, #-116]	; 0xffffff8c
    9ad8:	str	r2, [r3]
    9adc:	ldr	r3, [fp, #-116]	; 0xffffff8c
    9ae0:	ldr	r3, [r3]
    9ae4:	cmp	r3, #0
    9ae8:	beq	9b7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc7c>
    9aec:	ldr	r3, [fp, #-108]	; 0xffffff94
    9af0:	b	9b98 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc98>
    9af4:	nop	{0}
    9af8:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9afc:	nop	{0}
    9b00:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b04:	nop	{0}
    9b08:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b0c:	nop	{0}
    9b10:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b14:	nop	{0}
    9b18:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b1c:	nop	{0}
    9b20:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b24:	nop	{0}
    9b28:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b2c:	nop	{0}
    9b30:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b34:	nop	{0}
    9b38:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b3c:	nop	{0}
    9b40:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b44:	nop	{0}
    9b48:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b4c:	nop	{0}
    9b50:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b54:	nop	{0}
    9b58:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b5c:	nop	{0}
    9b60:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b64:	nop	{0}
    9b68:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b6c:	nop	{0}
    9b70:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b74:	nop	{0}
    9b78:	b	9b80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc80>
    9b7c:	nop	{0}
    9b80:	mov	r3, #33	; 0x21
    9b84:	ldr	r2, [fp, #-112]	; 0xffffff90
    9b88:	ldr	r1, [fp, #-108]	; 0xffffff94
    9b8c:	ldr	r0, [fp, #-104]	; 0xffffff98
    9b90:	bl	0 <flatcc_json_parser_set_error>
    9b94:	mov	r3, r0
    9b98:	mov	r0, r3
    9b9c:	sub	sp, fp, #28
    9ba0:	ldrd	r4, [sp]
    9ba4:	ldrd	r6, [sp, #8]
    9ba8:	ldrd	r8, [sp, #16]
    9bac:	ldr	fp, [sp, #24]
    9bb0:	add	sp, sp, #28
    9bb4:	pop	{pc}		; (ldr pc, [sp], #4)
    9bb8:	.word	0x31323334
    9bbc:	.word	0x64646464

00009bc0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    9bc0:	strd	r4, [sp, #-16]!
    9bc4:	str	fp, [sp, #8]
    9bc8:	str	lr, [sp, #12]
    9bcc:	add	fp, sp, #12
    9bd0:	sub	sp, sp, #64	; 0x40
    9bd4:	str	r0, [fp, #-56]	; 0xffffffc8
    9bd8:	str	r1, [fp, #-60]	; 0xffffffc4
    9bdc:	str	r2, [fp, #-64]	; 0xffffffc0
    9be0:	str	r3, [fp, #-68]	; 0xffffffbc
    9be4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    9be8:	mov	r2, #0
    9bec:	str	r2, [r3]
    9bf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9bf4:	ldr	r3, [r3]
    9bf8:	mov	r1, #2
    9bfc:	mov	r0, r3
    9c00:	bl	0 <flatcc_builder_start_table>
    9c04:	mov	r3, r0
    9c08:	cmp	r3, #0
    9c0c:	bne	9fa8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3e8>
    9c10:	sub	r3, fp, #32
    9c14:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9c18:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9c1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9c20:	bl	a84 <flatcc_json_parser_object_start>
    9c24:	str	r0, [fp, #-60]	; 0xffffffc4
    9c28:	b	9f58 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x398>
    9c2c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9c30:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9c34:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9c38:	bl	60c <flatcc_json_parser_symbol_start>
    9c3c:	str	r0, [fp, #-60]	; 0xffffffc4
    9c40:	ldr	r1, [fp, #-64]	; 0xffffffc0
    9c44:	ldr	r0, [fp, #-60]	; 0xffffffc4
    9c48:	bl	940 <flatcc_json_parser_symbol_part>
    9c4c:	strd	r0, [fp, #-20]	; 0xffffffec
    9c50:	ldrd	r2, [fp, #-20]	; 0xffffffec
    9c54:	add	r1, pc, #948	; 0x3b4
    9c58:	ldrd	r0, [r1]
    9c5c:	cmp	r3, r1
    9c60:	cmpeq	r2, r0
    9c64:	bne	9f2c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x36c>
    9c68:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9c6c:	add	r3, r3, #8
    9c70:	str	r3, [fp, #-60]	; 0xffffffc4
    9c74:	ldr	r1, [fp, #-64]	; 0xffffffc0
    9c78:	ldr	r0, [fp, #-60]	; 0xffffffc4
    9c7c:	bl	940 <flatcc_json_parser_symbol_part>
    9c80:	strd	r0, [fp, #-20]	; 0xffffffec
    9c84:	ldrd	r2, [fp, #-20]	; 0xffffffec
    9c88:	mvn	r0, #255	; 0xff
    9c8c:	mvn	r1, #0
    9c90:	and	r4, r2, r0
    9c94:	and	r5, r3, r1
    9c98:	add	r3, pc, #888	; 0x378
    9c9c:	ldrd	r2, [r3]
    9ca0:	cmp	r5, r3
    9ca4:	cmpeq	r4, r2
    9ca8:	bne	9dd4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x214>
    9cac:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9cb0:	str	r3, [fp, #-24]	; 0xffffffe8
    9cb4:	mov	r3, #7
    9cb8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9cbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9cc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9cc4:	bl	f54 <flatcc_json_parser_match_symbol>
    9cc8:	str	r0, [fp, #-60]	; 0xffffffc4
    9ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9cd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9cd4:	cmp	r2, r3
    9cd8:	beq	9dbc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1fc>
    9cdc:	mov	r2, #0
    9ce0:	mov	r3, #0
    9ce4:	strd	r2, [fp, #-44]	; 0xffffffd4
    9ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9cec:	str	r3, [fp, #-24]	; 0xffffffe8
    9cf0:	sub	r3, fp, #44	; 0x2c
    9cf4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9cfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9d00:	bl	1b7c <flatcc_json_parser_int64>
    9d04:	str	r0, [fp, #-60]	; 0xffffffc4
    9d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9d10:	cmp	r2, r3
    9d14:	bne	9d64 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1a4>
    9d18:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9d1c:	str	r3, [fp, #-24]	; 0xffffffe8
    9d20:	sub	r3, fp, #44	; 0x2c
    9d24:	str	r3, [sp]
    9d28:	movw	r3, #0
    9d2c:	movt	r3, #0
    9d30:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9d38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9d3c:	bl	279c <flatcc_json_parser_symbolic_int64>
    9d40:	str	r0, [fp, #-60]	; 0xffffffc4
    9d44:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9d4c:	cmp	r2, r3
    9d50:	beq	9fb0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f0>
    9d54:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9d58:	ldr	r3, [fp, #-64]	; 0xffffffc0
    9d5c:	cmp	r2, r3
    9d60:	beq	9fb0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f0>
    9d64:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    9d68:	orrs	r3, r2, r3
    9d6c:	bne	9d84 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c4>
    9d70:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9d74:	ldr	r3, [r3, #8]
    9d78:	and	r3, r3, #2
    9d7c:	cmp	r3, #0
    9d80:	beq	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9d84:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9d88:	ldr	r0, [r3]
    9d8c:	mov	r3, #8
    9d90:	mov	r2, #8
    9d94:	mov	r1, #0
    9d98:	bl	0 <flatcc_builder_table_add>
    9d9c:	str	r0, [fp, #-28]	; 0xffffffe4
    9da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9da4:	cmp	r3, #0
    9da8:	beq	9fb8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    9dac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    9db0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9db4:	bl	32c <flatbuffers_int64_write_to_pe>
    9db8:	b	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9dbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9dc0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9dc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9dc8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9dcc:	str	r0, [fp, #-60]	; 0xffffffc4
    9dd0:	b	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9dd4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    9dd8:	add	r1, pc, #576	; 0x240
    9ddc:	ldrd	r0, [r1]
    9de0:	cmp	r3, r1
    9de4:	cmpeq	r2, r0
    9de8:	bne	9f14 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x354>
    9dec:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9df0:	str	r3, [fp, #-24]	; 0xffffffe8
    9df4:	mov	r3, #8
    9df8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9dfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9e00:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9e04:	bl	f54 <flatcc_json_parser_match_symbol>
    9e08:	str	r0, [fp, #-60]	; 0xffffffc4
    9e0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9e10:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9e14:	cmp	r2, r3
    9e18:	beq	9efc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x33c>
    9e1c:	mov	r3, #0
    9e20:	str	r3, [fp, #-48]	; 0xffffffd0
    9e24:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9e28:	str	r3, [fp, #-24]	; 0xffffffe8
    9e2c:	sub	r3, fp, #48	; 0x30
    9e30:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9e34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9e38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9e3c:	bl	18e8 <flatcc_json_parser_uint32>
    9e40:	str	r0, [fp, #-60]	; 0xffffffc4
    9e44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9e48:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9e4c:	cmp	r2, r3
    9e50:	bne	9ea0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2e0>
    9e54:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9e58:	str	r3, [fp, #-24]	; 0xffffffe8
    9e5c:	sub	r3, fp, #48	; 0x30
    9e60:	str	r3, [sp]
    9e64:	movw	r3, #0
    9e68:	movt	r3, #0
    9e6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9e74:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9e78:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    9e7c:	str	r0, [fp, #-60]	; 0xffffffc4
    9e80:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
    9e88:	cmp	r2, r3
    9e8c:	beq	9fc0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x400>
    9e90:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9e94:	ldr	r3, [fp, #-64]	; 0xffffffc0
    9e98:	cmp	r2, r3
    9e9c:	beq	9fc0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x400>
    9ea0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9ea4:	cmp	r3, #0
    9ea8:	bne	9ec0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x300>
    9eac:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9eb0:	ldr	r3, [r3, #8]
    9eb4:	and	r3, r3, #2
    9eb8:	cmp	r3, #0
    9ebc:	beq	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9ec0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9ec4:	ldr	r0, [r3]
    9ec8:	mov	r3, #4
    9ecc:	mov	r2, #4
    9ed0:	mov	r1, #1
    9ed4:	bl	0 <flatcc_builder_table_add>
    9ed8:	str	r0, [fp, #-28]	; 0xffffffe4
    9edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9ee0:	cmp	r3, #0
    9ee4:	beq	9fc8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x408>
    9ee8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    9eec:	mov	r1, r3
    9ef0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9ef4:	bl	10c <flatbuffers_uint32_write_to_pe>
    9ef8:	b	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9efc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9f00:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9f04:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9f08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9f0c:	str	r0, [fp, #-60]	; 0xffffffc4
    9f10:	b	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9f14:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9f18:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9f1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9f20:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9f24:	str	r0, [fp, #-60]	; 0xffffffc4
    9f28:	b	9f40 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x380>
    9f2c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9f30:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9f34:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9f38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9f3c:	str	r0, [fp, #-60]	; 0xffffffc4
    9f40:	sub	r3, fp, #32
    9f44:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9f48:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9f4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9f50:	bl	b78 <flatcc_json_parser_object_end>
    9f54:	str	r0, [fp, #-60]	; 0xffffffc4
    9f58:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9f5c:	cmp	r3, #0
    9f60:	bne	9c2c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x6c>
    9f64:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9f68:	ldr	r3, [r3, #24]
    9f6c:	cmp	r3, #0
    9f70:	bne	9fd0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x410>
    9f74:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9f78:	ldr	r3, [r3]
    9f7c:	mov	r0, r3
    9f80:	bl	0 <flatcc_builder_end_table>
    9f84:	mov	r2, r0
    9f88:	ldr	r3, [fp, #-68]	; 0xffffffbc
    9f8c:	str	r2, [r3]
    9f90:	ldr	r3, [fp, #-68]	; 0xffffffbc
    9f94:	ldr	r3, [r3]
    9f98:	cmp	r3, #0
    9f9c:	beq	9fd8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x418>
    9fa0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9fa4:	b	9ff4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x434>
    9fa8:	nop	{0}
    9fac:	b	9fdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x41c>
    9fb0:	nop	{0}
    9fb4:	b	9fdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x41c>
    9fb8:	nop	{0}
    9fbc:	b	9fdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x41c>
    9fc0:	nop	{0}
    9fc4:	b	9fdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x41c>
    9fc8:	nop	{0}
    9fcc:	b	9fdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x41c>
    9fd0:	nop	{0}
    9fd4:	b	9fdc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x41c>
    9fd8:	nop	{0}
    9fdc:	mov	r3, #33	; 0x21
    9fe0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    9fe4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9fe8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9fec:	bl	0 <flatcc_json_parser_set_error>
    9ff0:	mov	r3, r0
    9ff4:	mov	r0, r3
    9ff8:	sub	sp, fp, #12
    9ffc:	ldrd	r4, [sp]
    a000:	ldr	fp, [sp, #8]
    a004:	add	sp, sp, #12
    a008:	pop	{pc}		; (ldr pc, [sp], #4)
    a00c:	nop	{0}
    a010:	.word	0x5f626262
    a014:	.word	0x61616161
    a018:	.word	0x65707300
    a01c:	.word	0x625f7374
    a020:	.word	0x6172745f
    a024:	.word	0x625f7374

0000a028 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    a028:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a02c:	strd	r6, [sp, #8]
    a030:	str	fp, [sp, #16]
    a034:	str	lr, [sp, #20]
    a038:	add	fp, sp, #20
    a03c:	sub	sp, sp, #56	; 0x38
    a040:	str	r0, [fp, #-56]	; 0xffffffc8
    a044:	str	r1, [fp, #-60]	; 0xffffffc4
    a048:	str	r2, [fp, #-64]	; 0xffffffc0
    a04c:	str	r3, [fp, #-68]	; 0xffffffbc
    a050:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a054:	mov	r2, #0
    a058:	str	r2, [r3]
    a05c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a060:	ldr	r3, [r3]
    a064:	mov	r1, #2
    a068:	mov	r0, r3
    a06c:	bl	0 <flatcc_builder_start_table>
    a070:	mov	r3, r0
    a074:	cmp	r3, #0
    a078:	bne	a470 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x448>
    a07c:	sub	r3, fp, #40	; 0x28
    a080:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a084:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a088:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a08c:	bl	a84 <flatcc_json_parser_object_start>
    a090:	str	r0, [fp, #-60]	; 0xffffffc4
    a094:	b	a420 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f8>
    a098:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a09c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a0a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a0a4:	bl	60c <flatcc_json_parser_symbol_start>
    a0a8:	str	r0, [fp, #-60]	; 0xffffffc4
    a0ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
    a0b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    a0b4:	bl	940 <flatcc_json_parser_symbol_part>
    a0b8:	strd	r0, [fp, #-28]	; 0xffffffe4
    a0bc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    a0c0:	add	r1, pc, #984	; 0x3d8
    a0c4:	ldrd	r0, [r1]
    a0c8:	cmp	r3, r1
    a0cc:	cmpeq	r2, r0
    a0d0:	bne	a3f4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3cc>
    a0d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a0d8:	add	r3, r3, #8
    a0dc:	str	r3, [fp, #-60]	; 0xffffffc4
    a0e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
    a0e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    a0e8:	bl	940 <flatcc_json_parser_symbol_part>
    a0ec:	strd	r0, [fp, #-28]	; 0xffffffe4
    a0f0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    a0f4:	add	r1, pc, #940	; 0x3ac
    a0f8:	ldrd	r0, [r1]
    a0fc:	cmp	r3, r1
    a100:	cmpeq	r2, r0
    a104:	bne	a28c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x264>
    a108:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a10c:	add	r3, r3, #8
    a110:	str	r3, [fp, #-60]	; 0xffffffc4
    a114:	ldr	r1, [fp, #-64]	; 0xffffffc0
    a118:	ldr	r0, [fp, #-60]	; 0xffffffc4
    a11c:	bl	940 <flatcc_json_parser_symbol_part>
    a120:	strd	r0, [fp, #-28]	; 0xffffffe4
    a124:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    a128:	mov	r0, #-16777216	; 0xff000000
    a12c:	mvn	r1, #0
    a130:	and	r4, r2, r0
    a134:	and	r5, r3, r1
    a138:	add	r3, pc, #880	; 0x370
    a13c:	ldrd	r2, [r3]
    a140:	cmp	r5, r3
    a144:	cmpeq	r4, r2
    a148:	bne	a274 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x24c>
    a14c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a150:	str	r3, [fp, #-32]	; 0xffffffe0
    a154:	mov	r3, #5
    a158:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a15c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a160:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a164:	bl	f54 <flatcc_json_parser_match_symbol>
    a168:	str	r0, [fp, #-60]	; 0xffffffc4
    a16c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a170:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a174:	cmp	r2, r3
    a178:	beq	a25c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x234>
    a17c:	mov	r3, #0
    a180:	str	r3, [fp, #-44]	; 0xffffffd4
    a184:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a188:	str	r3, [fp, #-32]	; 0xffffffe0
    a18c:	sub	r3, fp, #44	; 0x2c
    a190:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a194:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a198:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a19c:	bl	18e8 <flatcc_json_parser_uint32>
    a1a0:	str	r0, [fp, #-60]	; 0xffffffc4
    a1a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a1a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a1ac:	cmp	r2, r3
    a1b0:	bne	a200 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1d8>
    a1b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a1b8:	str	r3, [fp, #-32]	; 0xffffffe0
    a1bc:	sub	r3, fp, #44	; 0x2c
    a1c0:	str	r3, [sp]
    a1c4:	movw	r3, #0
    a1c8:	movt	r3, #0
    a1cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a1d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a1d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a1d8:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    a1dc:	str	r0, [fp, #-60]	; 0xffffffc4
    a1e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a1e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a1e8:	cmp	r2, r3
    a1ec:	beq	a478 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x450>
    a1f0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a1f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a1f8:	cmp	r2, r3
    a1fc:	beq	a478 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x450>
    a200:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a204:	cmp	r3, #0
    a208:	bne	a220 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1f8>
    a20c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a210:	ldr	r3, [r3, #8]
    a214:	and	r3, r3, #2
    a218:	cmp	r3, #0
    a21c:	beq	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a220:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a224:	ldr	r0, [r3]
    a228:	mov	r3, #4
    a22c:	mov	r2, #4
    a230:	mov	r1, #1
    a234:	bl	0 <flatcc_builder_table_add>
    a238:	str	r0, [fp, #-36]	; 0xffffffdc
    a23c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a240:	cmp	r3, #0
    a244:	beq	a480 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x458>
    a248:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a24c:	mov	r1, r3
    a250:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a254:	bl	10c <flatbuffers_uint32_write_to_pe>
    a258:	b	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a25c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a260:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a264:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a268:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a26c:	str	r0, [fp, #-60]	; 0xffffffc4
    a270:	b	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a274:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a278:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a27c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a280:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a284:	str	r0, [fp, #-60]	; 0xffffffc4
    a288:	b	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a28c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    a290:	mvn	r0, #255	; 0xff
    a294:	mvn	r1, #0
    a298:	and	r6, r2, r0
    a29c:	and	r7, r3, r1
    a2a0:	add	r3, pc, #528	; 0x210
    a2a4:	ldrd	r2, [r3]
    a2a8:	cmp	r7, r3
    a2ac:	cmpeq	r6, r2
    a2b0:	bne	a3dc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b4>
    a2b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a2b8:	str	r3, [fp, #-32]	; 0xffffffe0
    a2bc:	mov	r3, #7
    a2c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a2c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a2c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a2cc:	bl	f54 <flatcc_json_parser_match_symbol>
    a2d0:	str	r0, [fp, #-60]	; 0xffffffc4
    a2d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a2d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a2dc:	cmp	r2, r3
    a2e0:	beq	a3c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x39c>
    a2e4:	mov	r2, #0
    a2e8:	mov	r3, #0
    a2ec:	strd	r2, [fp, #-52]	; 0xffffffcc
    a2f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a2f4:	str	r3, [fp, #-32]	; 0xffffffe0
    a2f8:	sub	r3, fp, #52	; 0x34
    a2fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a300:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a304:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a308:	bl	1b7c <flatcc_json_parser_int64>
    a30c:	str	r0, [fp, #-60]	; 0xffffffc4
    a310:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a314:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a318:	cmp	r2, r3
    a31c:	bne	a36c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x344>
    a320:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a324:	str	r3, [fp, #-32]	; 0xffffffe0
    a328:	sub	r3, fp, #52	; 0x34
    a32c:	str	r3, [sp]
    a330:	movw	r3, #0
    a334:	movt	r3, #0
    a338:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a33c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a340:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a344:	bl	279c <flatcc_json_parser_symbolic_int64>
    a348:	str	r0, [fp, #-60]	; 0xffffffc4
    a34c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a350:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a354:	cmp	r2, r3
    a358:	beq	a488 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x460>
    a35c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    a360:	ldr	r3, [fp, #-64]	; 0xffffffc0
    a364:	cmp	r2, r3
    a368:	beq	a488 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x460>
    a36c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    a370:	orrs	r3, r2, r3
    a374:	bne	a38c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x364>
    a378:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a37c:	ldr	r3, [r3, #8]
    a380:	and	r3, r3, #2
    a384:	cmp	r3, #0
    a388:	beq	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a38c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a390:	ldr	r0, [r3]
    a394:	mov	r3, #8
    a398:	mov	r2, #8
    a39c:	mov	r1, #0
    a3a0:	bl	0 <flatcc_builder_table_add>
    a3a4:	str	r0, [fp, #-36]	; 0xffffffdc
    a3a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a3ac:	cmp	r3, #0
    a3b0:	beq	a490 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x468>
    a3b4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    a3b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a3bc:	bl	32c <flatbuffers_int64_write_to_pe>
    a3c0:	b	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a3c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a3c8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a3cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a3d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a3d4:	str	r0, [fp, #-60]	; 0xffffffc4
    a3d8:	b	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a3dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a3e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a3e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a3e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a3ec:	str	r0, [fp, #-60]	; 0xffffffc4
    a3f0:	b	a408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e0>
    a3f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a3f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a3fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a400:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a404:	str	r0, [fp, #-60]	; 0xffffffc4
    a408:	sub	r3, fp, #40	; 0x28
    a40c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a410:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a414:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a418:	bl	b78 <flatcc_json_parser_object_end>
    a41c:	str	r0, [fp, #-60]	; 0xffffffc4
    a420:	ldr	r3, [fp, #-40]	; 0xffffffd8
    a424:	cmp	r3, #0
    a428:	bne	a098 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x70>
    a42c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a430:	ldr	r3, [r3, #24]
    a434:	cmp	r3, #0
    a438:	bne	a498 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x470>
    a43c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a440:	ldr	r3, [r3]
    a444:	mov	r0, r3
    a448:	bl	0 <flatcc_builder_end_table>
    a44c:	mov	r2, r0
    a450:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a454:	str	r2, [r3]
    a458:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a45c:	ldr	r3, [r3]
    a460:	cmp	r3, #0
    a464:	beq	a4c0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x498>
    a468:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a46c:	b	a4dc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x4b4>
    a470:	nop	{0}
    a474:	b	a4c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a478:	nop	{0}
    a47c:	b	a4c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a480:	nop	{0}
    a484:	b	a4c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a488:	nop	{0}
    a48c:	b	a4c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a490:	nop	{0}
    a494:	b	a4c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a498:	nop	{0}
    a49c:	b	a4c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
    a4a0:	.word	0x5f626262
    a4a4:	.word	0x61616161
    a4a8:	.word	0x6172745f
    a4ac:	.word	0x625f7374
    a4b0:	.word	0x73000000
    a4b4:	.word	0x73746570
    a4b8:	.word	0x65707300
    a4bc:	.word	0x625f7374
    a4c0:	nop	{0}
    a4c4:	mov	r3, #33	; 0x21
    a4c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a4cc:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a4d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a4d4:	bl	0 <flatcc_json_parser_set_error>
    a4d8:	mov	r3, r0
    a4dc:	mov	r0, r3
    a4e0:	sub	sp, fp, #20
    a4e4:	ldrd	r4, [sp]
    a4e8:	ldrd	r6, [sp, #8]
    a4ec:	ldr	fp, [sp, #16]
    a4f0:	add	sp, sp, #20
    a4f4:	pop	{pc}		; (ldr pc, [sp], #4)

0000a4f8 <MyGame_Example_TestBase64_parse_json_table>:
    a4f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
    a4fc:	strd	r6, [sp, #8]
    a500:	strd	r8, [sp, #16]
    a504:	str	fp, [sp, #24]
    a508:	str	lr, [sp, #28]
    a50c:	add	fp, sp, #28
    a510:	sub	sp, sp, #48	; 0x30
    a514:	str	r0, [fp, #-56]	; 0xffffffc8
    a518:	str	r1, [fp, #-60]	; 0xffffffc4
    a51c:	str	r2, [fp, #-64]	; 0xffffffc0
    a520:	str	r3, [fp, #-68]	; 0xffffffbc
    a524:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a528:	mov	r2, #0
    a52c:	str	r2, [r3]
    a530:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a534:	ldr	r3, [r3]
    a538:	mov	r1, #3
    a53c:	mov	r0, r3
    a540:	bl	0 <flatcc_builder_start_table>
    a544:	mov	r3, r0
    a548:	cmp	r3, #0
    a54c:	bne	a8bc <MyGame_Example_TestBase64_parse_json_table+0x3c4>
    a550:	sub	r3, fp, #48	; 0x30
    a554:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a558:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a55c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a560:	bl	a84 <flatcc_json_parser_object_start>
    a564:	str	r0, [fp, #-60]	; 0xffffffc4
    a568:	b	a86c <MyGame_Example_TestBase64_parse_json_table+0x374>
    a56c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a570:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a574:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a578:	bl	60c <flatcc_json_parser_symbol_start>
    a57c:	str	r0, [fp, #-60]	; 0xffffffc4
    a580:	ldr	r1, [fp, #-64]	; 0xffffffc0
    a584:	ldr	r0, [fp, #-60]	; 0xffffffc4
    a588:	bl	940 <flatcc_json_parser_symbol_part>
    a58c:	strd	r0, [fp, #-36]	; 0xffffffdc
    a590:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    a594:	add	r1, pc, #900	; 0x384
    a598:	ldrd	r0, [r1]
    a59c:	cmp	r3, r1
    a5a0:	cmpeq	r2, r0
    a5a4:	bhi	a694 <MyGame_Example_TestBase64_parse_json_table+0x19c>
    a5a8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    a5ac:	mov	r0, #0
    a5b0:	mvn	r1, #0
    a5b4:	and	r4, r2, r0
    a5b8:	and	r5, r3, r1
    a5bc:	add	r3, pc, #868	; 0x364
    a5c0:	ldrd	r2, [r3]
    a5c4:	cmp	r5, r3
    a5c8:	cmpeq	r4, r2
    a5cc:	bne	a67c <MyGame_Example_TestBase64_parse_json_table+0x184>
    a5d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a5d4:	str	r3, [fp, #-40]	; 0xffffffd8
    a5d8:	mov	r3, #4
    a5dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a5e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a5e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a5e8:	bl	f54 <flatcc_json_parser_match_symbol>
    a5ec:	str	r0, [fp, #-60]	; 0xffffffc4
    a5f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a5f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a5f8:	cmp	r2, r3
    a5fc:	beq	a664 <MyGame_Example_TestBase64_parse_json_table+0x16c>
    a600:	sub	r2, fp, #52	; 0x34
    a604:	mov	r3, #0
    a608:	str	r3, [sp]
    a60c:	mov	r3, r2
    a610:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a614:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a618:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a61c:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    a620:	str	r0, [fp, #-60]	; 0xffffffc4
    a624:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a628:	cmp	r3, #0
    a62c:	beq	a8c4 <MyGame_Example_TestBase64_parse_json_table+0x3cc>
    a630:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a634:	ldr	r3, [r3]
    a638:	mov	r1, #0
    a63c:	mov	r0, r3
    a640:	bl	0 <flatcc_builder_table_add_offset>
    a644:	str	r0, [fp, #-44]	; 0xffffffd4
    a648:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a64c:	cmp	r3, #0
    a650:	beq	a8c4 <MyGame_Example_TestBase64_parse_json_table+0x3cc>
    a654:	ldr	r2, [fp, #-52]	; 0xffffffcc
    a658:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a65c:	str	r2, [r3]
    a660:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a664:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a668:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a66c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a670:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a674:	str	r0, [fp, #-60]	; 0xffffffc4
    a678:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a67c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a680:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a684:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a688:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a68c:	str	r0, [fp, #-60]	; 0xffffffc4
    a690:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a694:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    a698:	mvn	r0, #255	; 0xff
    a69c:	mvn	r1, #0
    a6a0:	and	r6, r2, r0
    a6a4:	and	r7, r3, r1
    a6a8:	add	r3, pc, #640	; 0x280
    a6ac:	ldrd	r2, [r3]
    a6b0:	cmp	r7, r3
    a6b4:	cmpeq	r6, r2
    a6b8:	bne	a768 <MyGame_Example_TestBase64_parse_json_table+0x270>
    a6bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a6c0:	str	r3, [fp, #-40]	; 0xffffffd8
    a6c4:	mov	r3, #7
    a6c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a6cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a6d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a6d4:	bl	f54 <flatcc_json_parser_match_symbol>
    a6d8:	str	r0, [fp, #-60]	; 0xffffffc4
    a6dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a6e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a6e4:	cmp	r2, r3
    a6e8:	beq	a750 <MyGame_Example_TestBase64_parse_json_table+0x258>
    a6ec:	sub	r2, fp, #52	; 0x34
    a6f0:	mov	r3, #1
    a6f4:	str	r3, [sp]
    a6f8:	mov	r3, r2
    a6fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a700:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a704:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a708:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    a70c:	str	r0, [fp, #-60]	; 0xffffffc4
    a710:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a714:	cmp	r3, #0
    a718:	beq	a8cc <MyGame_Example_TestBase64_parse_json_table+0x3d4>
    a71c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a720:	ldr	r3, [r3]
    a724:	mov	r1, #1
    a728:	mov	r0, r3
    a72c:	bl	0 <flatcc_builder_table_add_offset>
    a730:	str	r0, [fp, #-44]	; 0xffffffd4
    a734:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a738:	cmp	r3, #0
    a73c:	beq	a8cc <MyGame_Example_TestBase64_parse_json_table+0x3d4>
    a740:	ldr	r2, [fp, #-52]	; 0xffffffcc
    a744:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a748:	str	r2, [r3]
    a74c:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a750:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a754:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a758:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a75c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a760:	str	r0, [fp, #-60]	; 0xffffffc4
    a764:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a768:	ldrd	r2, [fp, #-36]	; 0xffffffdc
    a76c:	mov	r0, #0
    a770:	movt	r0, #65535	; 0xffff
    a774:	mvn	r1, #0
    a778:	and	r8, r2, r0
    a77c:	and	r9, r3, r1
    a780:	add	r3, pc, #432	; 0x1b0
    a784:	ldrd	r2, [r3]
    a788:	cmp	r9, r3
    a78c:	cmpeq	r8, r2
    a790:	bne	a840 <MyGame_Example_TestBase64_parse_json_table+0x348>
    a794:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a798:	str	r3, [fp, #-40]	; 0xffffffd8
    a79c:	mov	r3, #6
    a7a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a7a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    a7a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a7ac:	bl	f54 <flatcc_json_parser_match_symbol>
    a7b0:	str	r0, [fp, #-60]	; 0xffffffc4
    a7b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a7b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a7bc:	cmp	r2, r3
    a7c0:	beq	a828 <MyGame_Example_TestBase64_parse_json_table+0x330>
    a7c4:	sub	r2, fp, #52	; 0x34
    a7c8:	mov	r3, #0
    a7cc:	str	r3, [sp]
    a7d0:	mov	r3, r2
    a7d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a7d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a7dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a7e0:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    a7e4:	str	r0, [fp, #-60]	; 0xffffffc4
    a7e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    a7ec:	cmp	r3, #0
    a7f0:	beq	a8d4 <MyGame_Example_TestBase64_parse_json_table+0x3dc>
    a7f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a7f8:	ldr	r3, [r3]
    a7fc:	mov	r1, #2
    a800:	mov	r0, r3
    a804:	bl	0 <flatcc_builder_table_add_offset>
    a808:	str	r0, [fp, #-44]	; 0xffffffd4
    a80c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a810:	cmp	r3, #0
    a814:	beq	a8d4 <MyGame_Example_TestBase64_parse_json_table+0x3dc>
    a818:	ldr	r2, [fp, #-52]	; 0xffffffcc
    a81c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    a820:	str	r2, [r3]
    a824:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a828:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a82c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a830:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a834:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a838:	str	r0, [fp, #-60]	; 0xffffffc4
    a83c:	b	a854 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    a840:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a844:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a848:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a84c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a850:	str	r0, [fp, #-60]	; 0xffffffc4
    a854:	sub	r3, fp, #48	; 0x30
    a858:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a85c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a860:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a864:	bl	b78 <flatcc_json_parser_object_end>
    a868:	str	r0, [fp, #-60]	; 0xffffffc4
    a86c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a870:	cmp	r3, #0
    a874:	bne	a56c <MyGame_Example_TestBase64_parse_json_table+0x74>
    a878:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a87c:	ldr	r3, [r3, #24]
    a880:	cmp	r3, #0
    a884:	bne	a8dc <MyGame_Example_TestBase64_parse_json_table+0x3e4>
    a888:	ldr	r3, [fp, #-56]	; 0xffffffc8
    a88c:	ldr	r3, [r3]
    a890:	mov	r0, r3
    a894:	bl	0 <flatcc_builder_end_table>
    a898:	mov	r2, r0
    a89c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a8a0:	str	r2, [r3]
    a8a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
    a8a8:	ldr	r3, [r3]
    a8ac:	cmp	r3, #0
    a8b0:	beq	a8e4 <MyGame_Example_TestBase64_parse_json_table+0x3ec>
    a8b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    a8b8:	b	a900 <MyGame_Example_TestBase64_parse_json_table+0x408>
    a8bc:	nop	{0}
    a8c0:	b	a8e8 <MyGame_Example_TestBase64_parse_json_table+0x3f0>
    a8c4:	nop	{0}
    a8c8:	b	a8e8 <MyGame_Example_TestBase64_parse_json_table+0x3f0>
    a8cc:	nop	{0}
    a8d0:	b	a8e8 <MyGame_Example_TestBase64_parse_json_table+0x3f0>
    a8d4:	nop	{0}
    a8d8:	b	a8e8 <MyGame_Example_TestBase64_parse_json_table+0x3f0>
    a8dc:	nop	{0}
    a8e0:	b	a8e8 <MyGame_Example_TestBase64_parse_json_table+0x3f0>
    a8e4:	nop	{0}
    a8e8:	mov	r3, #33	; 0x21
    a8ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a8f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    a8f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    a8f8:	bl	0 <flatcc_json_parser_set_error>
    a8fc:	mov	r3, r0
    a900:	mov	r0, r3
    a904:	sub	sp, fp, #28
    a908:	ldrd	r4, [sp]
    a90c:	ldrd	r6, [sp, #8]
    a910:	ldrd	r8, [sp, #16]
    a914:	ldr	fp, [sp, #24]
    a918:	add	sp, sp, #28
    a91c:	pop	{pc}		; (ldr pc, [sp], #4)
    a920:	.word	0x6563ffff
    a924:	.word	0x6e657374
    a928:	.word	0x00000000
    a92c:	.word	0x64617461
    a930:	.word	0x61746100
    a934:	.word	0x75726c64
    a938:	.word	0x65640000
    a93c:	.word	0x6e657374

0000a940 <MyGame_Example_Monster_parse_json_table>:
    a940:	strd	r4, [sp, #-32]!	; 0xffffffe0
    a944:	strd	r6, [sp, #8]
    a948:	strd	r8, [sp, #16]
    a94c:	str	fp, [sp, #24]
    a950:	str	lr, [sp, #28]
    a954:	add	fp, sp, #28
    a958:	sub	sp, sp, #368	; 0x170
    a95c:	str	r0, [fp, #-160]	; 0xffffff60
    a960:	str	r1, [fp, #-164]	; 0xffffff5c
    a964:	str	r2, [fp, #-168]	; 0xffffff58
    a968:	str	r3, [fp, #-172]	; 0xffffff54
    a96c:	ldr	r2, [fp, #-172]	; 0xffffff54
    a970:	mov	r3, #0
    a974:	str	r3, [r2]
    a978:	ldr	r3, [fp, #-160]	; 0xffffff60
    a97c:	ldr	r3, [r3]
    a980:	mov	r1, #36	; 0x24
    a984:	mov	r0, r3
    a988:	bl	0 <flatcc_builder_start_table>
    a98c:	mov	r3, r0
    a990:	cmp	r3, #0
    a994:	bne	e334 <MyGame_Example_Monster_parse_json_table+0x39f4>
    a998:	sub	r3, fp, #60	; 0x3c
    a99c:	str	r3, [sp]
    a9a0:	mov	r3, #1
    a9a4:	ldr	r2, [fp, #-168]	; 0xffffff58
    a9a8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    a9ac:	ldr	r0, [fp, #-160]	; 0xffffff60
    a9b0:	bl	0 <flatcc_json_parser_prepare_unions>
    a9b4:	mov	r2, r0
    a9b8:	ldr	r3, [fp, #-168]	; 0xffffff58
    a9bc:	cmp	r3, r2
    a9c0:	beq	e33c <MyGame_Example_Monster_parse_json_table+0x39fc>
    a9c4:	sub	r3, fp, #52	; 0x34
    a9c8:	ldr	r2, [fp, #-168]	; 0xffffff58
    a9cc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    a9d0:	ldr	r0, [fp, #-160]	; 0xffffff60
    a9d4:	bl	a84 <flatcc_json_parser_object_start>
    a9d8:	str	r0, [fp, #-164]	; 0xffffff5c
    a9dc:	b	e290 <MyGame_Example_Monster_parse_json_table+0x3950>
    a9e0:	ldr	r2, [fp, #-168]	; 0xffffff58
    a9e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    a9e8:	ldr	r0, [fp, #-160]	; 0xffffff60
    a9ec:	bl	60c <flatcc_json_parser_symbol_start>
    a9f0:	str	r0, [fp, #-164]	; 0xffffff5c
    a9f4:	ldr	r1, [fp, #-168]	; 0xffffff58
    a9f8:	ldr	r0, [fp, #-164]	; 0xffffff5c
    a9fc:	bl	940 <flatcc_json_parser_symbol_part>
    aa00:	strd	r0, [fp, #-36]	; 0xffffffdc
    aa04:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    aa08:	add	r3, pc, #840	; 0x348
    aa0c:	ldrd	r2, [r3]
    aa10:	cmp	r1, r3
    aa14:	cmpeq	r0, r2
    aa18:	bhi	bc70 <MyGame_Example_Monster_parse_json_table+0x1330>
    aa1c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    aa20:	add	r3, pc, #824	; 0x338
    aa24:	ldrd	r2, [r3]
    aa28:	cmp	r1, r3
    aa2c:	cmpeq	r0, r2
    aa30:	bhi	b42c <MyGame_Example_Monster_parse_json_table+0xaec>
    aa34:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    aa38:	add	r3, pc, #808	; 0x328
    aa3c:	ldrd	r2, [r3]
    aa40:	cmp	r1, r3
    aa44:	cmpeq	r0, r2
    aa48:	bhi	ac94 <MyGame_Example_Monster_parse_json_table+0x354>
    aa4c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    aa50:	mov	r2, #-16777216	; 0xff000000
    aa54:	mvn	r3, #0
    aa58:	and	ip, r0, r2
    aa5c:	str	ip, [fp, #-180]	; 0xffffff4c
    aa60:	and	r3, r1, r3
    aa64:	str	r3, [fp, #-176]	; 0xffffff50
    aa68:	add	r3, pc, #768	; 0x300
    aa6c:	ldrd	r2, [r3]
    aa70:	ldrd	r0, [fp, #-180]	; 0xffffff4c
    aa74:	cmp	r1, r3
    aa78:	cmpeq	r0, r2
    aa7c:	bne	ab20 <MyGame_Example_Monster_parse_json_table+0x1e0>
    aa80:	ldr	r3, [fp, #-164]	; 0xffffff5c
    aa84:	str	r3, [fp, #-40]	; 0xffffffd8
    aa88:	mov	r3, #5
    aa8c:	ldr	r2, [fp, #-168]	; 0xffffff58
    aa90:	ldr	r1, [fp, #-40]	; 0xffffffd8
    aa94:	ldr	r0, [fp, #-160]	; 0xffffff60
    aa98:	bl	f54 <flatcc_json_parser_match_symbol>
    aa9c:	str	r0, [fp, #-164]	; 0xffffff5c
    aaa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    aaa4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    aaa8:	cmp	r2, r3
    aaac:	beq	ab08 <MyGame_Example_Monster_parse_json_table+0x1c8>
    aab0:	sub	r3, fp, #56	; 0x38
    aab4:	ldr	r2, [fp, #-168]	; 0xffffff58
    aab8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    aabc:	ldr	r0, [fp, #-160]	; 0xffffff60
    aac0:	bl	a940 <MyGame_Example_Monster_parse_json_table>
    aac4:	str	r0, [fp, #-164]	; 0xffffff5c
    aac8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    aacc:	cmp	r3, #0
    aad0:	beq	e344 <MyGame_Example_Monster_parse_json_table+0x3a04>
    aad4:	ldr	r3, [fp, #-160]	; 0xffffff60
    aad8:	ldr	r3, [r3]
    aadc:	mov	r1, #12
    aae0:	mov	r0, r3
    aae4:	bl	0 <flatcc_builder_table_add_offset>
    aae8:	str	r0, [fp, #-44]	; 0xffffffd4
    aaec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    aaf0:	cmp	r3, #0
    aaf4:	beq	e344 <MyGame_Example_Monster_parse_json_table+0x3a04>
    aaf8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    aafc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ab00:	str	r2, [r3]
    ab04:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ab08:	ldr	r2, [fp, #-168]	; 0xffffff58
    ab0c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ab10:	ldr	r0, [fp, #-160]	; 0xffffff60
    ab14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ab18:	str	r0, [fp, #-164]	; 0xffffff5c
    ab1c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ab20:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ab24:	mov	r2, #-16777216	; 0xff000000
    ab28:	mvn	r3, #0
    ab2c:	and	ip, r0, r2
    ab30:	str	ip, [fp, #-188]	; 0xffffff44
    ab34:	and	r3, r1, r3
    ab38:	str	r3, [fp, #-184]	; 0xffffff48
    ab3c:	add	r3, pc, #564	; 0x234
    ab40:	ldrd	r2, [r3]
    ab44:	ldrd	r0, [fp, #-188]	; 0xffffff44
    ab48:	cmp	r1, r3
    ab4c:	cmpeq	r0, r2
    ab50:	bne	ac7c <MyGame_Example_Monster_parse_json_table+0x33c>
    ab54:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ab58:	str	r3, [fp, #-40]	; 0xffffffd8
    ab5c:	mov	r3, #5
    ab60:	ldr	r2, [fp, #-168]	; 0xffffff58
    ab64:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ab68:	ldr	r0, [fp, #-160]	; 0xffffff60
    ab6c:	bl	f54 <flatcc_json_parser_match_symbol>
    ab70:	str	r0, [fp, #-164]	; 0xffffff5c
    ab74:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ab78:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ab7c:	cmp	r2, r3
    ab80:	beq	ac64 <MyGame_Example_Monster_parse_json_table+0x324>
    ab84:	mov	r3, #0
    ab88:	strb	r3, [fp, #-61]	; 0xffffffc3
    ab8c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ab90:	str	r3, [fp, #-40]	; 0xffffffd8
    ab94:	sub	r3, fp, #61	; 0x3d
    ab98:	ldr	r2, [fp, #-168]	; 0xffffff58
    ab9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    aba0:	ldr	r0, [fp, #-160]	; 0xffffff60
    aba4:	bl	1e14 <flatcc_json_parser_int8>
    aba8:	str	r0, [fp, #-164]	; 0xffffff5c
    abac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    abb0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    abb4:	cmp	r2, r3
    abb8:	bne	ac08 <MyGame_Example_Monster_parse_json_table+0x2c8>
    abbc:	ldr	r3, [fp, #-164]	; 0xffffff5c
    abc0:	str	r3, [fp, #-40]	; 0xffffffd8
    abc4:	sub	r3, fp, #61	; 0x3d
    abc8:	str	r3, [sp]
    abcc:	movw	r3, #0
    abd0:	movt	r3, #0
    abd4:	ldr	r2, [fp, #-168]	; 0xffffff58
    abd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    abdc:	ldr	r0, [fp, #-160]	; 0xffffff60
    abe0:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    abe4:	str	r0, [fp, #-164]	; 0xffffff5c
    abe8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    abec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    abf0:	cmp	r2, r3
    abf4:	beq	e34c <MyGame_Example_Monster_parse_json_table+0x3a0c>
    abf8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    abfc:	ldr	r3, [fp, #-168]	; 0xffffff58
    ac00:	cmp	r2, r3
    ac04:	beq	e34c <MyGame_Example_Monster_parse_json_table+0x3a0c>
    ac08:	ldrsb	r3, [fp, #-61]	; 0xffffffc3
    ac0c:	cmp	r3, #8
    ac10:	bne	ac28 <MyGame_Example_Monster_parse_json_table+0x2e8>
    ac14:	ldr	r3, [fp, #-160]	; 0xffffff60
    ac18:	ldr	r3, [r3, #8]
    ac1c:	and	r3, r3, #2
    ac20:	cmp	r3, #0
    ac24:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ac28:	ldr	r3, [fp, #-160]	; 0xffffff60
    ac2c:	ldr	r0, [r3]
    ac30:	mov	r3, #1
    ac34:	mov	r2, #1
    ac38:	mov	r1, #6
    ac3c:	bl	0 <flatcc_builder_table_add>
    ac40:	str	r0, [fp, #-48]	; 0xffffffd0
    ac44:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ac48:	cmp	r3, #0
    ac4c:	beq	e354 <MyGame_Example_Monster_parse_json_table+0x3a14>
    ac50:	ldrsb	r3, [fp, #-61]	; 0xffffffc3
    ac54:	mov	r1, r3
    ac58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ac5c:	bl	1e0 <flatbuffers_int8_write_to_pe>
    ac60:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ac64:	ldr	r2, [fp, #-168]	; 0xffffff58
    ac68:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ac6c:	ldr	r0, [fp, #-160]	; 0xffffff60
    ac70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac74:	str	r0, [fp, #-164]	; 0xffffff5c
    ac78:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ac7c:	ldr	r2, [fp, #-168]	; 0xffffff58
    ac80:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ac84:	ldr	r0, [fp, #-160]	; 0xffffff60
    ac88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac8c:	str	r0, [fp, #-164]	; 0xffffff5c
    ac90:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ac94:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ac98:	mvn	r2, #0
    ac9c:	movw	r3, #65535	; 0xffff
    aca0:	movt	r3, #26735	; 0x686f
    aca4:	cmp	r1, r3
    aca8:	cmpeq	r0, r2
    acac:	bhi	aefc <MyGame_Example_Monster_parse_json_table+0x5bc>
    acb0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    acb4:	mov	r2, #0
    acb8:	mvn	r3, #0
    acbc:	and	ip, r0, r2
    acc0:	str	ip, [fp, #-196]	; 0xffffff3c
    acc4:	and	r3, r1, r3
    acc8:	str	r3, [fp, #-192]	; 0xffffff40
    accc:	add	r3, pc, #172	; 0xac
    acd0:	ldrd	r2, [r3]
    acd4:	ldrd	r0, [fp, #-196]	; 0xffffff3c
    acd8:	cmp	r1, r3
    acdc:	cmpeq	r0, r2
    ace0:	bne	aee4 <MyGame_Example_Monster_parse_json_table+0x5a4>
    ace4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ace8:	str	r3, [fp, #-40]	; 0xffffffd8
    acec:	mov	r3, #4
    acf0:	ldr	r2, [fp, #-168]	; 0xffffff58
    acf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    acf8:	ldr	r0, [fp, #-160]	; 0xffffff60
    acfc:	bl	f54 <flatcc_json_parser_match_symbol>
    ad00:	str	r0, [fp, #-164]	; 0xffffff5c
    ad04:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ad08:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ad0c:	cmp	r2, r3
    ad10:	beq	aecc <MyGame_Example_Monster_parse_json_table+0x58c>
    ad14:	ldr	r3, [fp, #-160]	; 0xffffff60
    ad18:	ldr	r0, [r3]
    ad1c:	mvn	r3, #0
    ad20:	mov	r2, #1
    ad24:	mov	r1, #1
    ad28:	bl	0 <flatcc_builder_start_vector>
    ad2c:	mov	r3, r0
    ad30:	cmp	r3, #0
    ad34:	bne	e35c <MyGame_Example_Monster_parse_json_table+0x3a1c>
    ad38:	sub	r3, fp, #52	; 0x34
    ad3c:	ldr	r2, [fp, #-168]	; 0xffffff58
    ad40:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ad44:	ldr	r0, [fp, #-160]	; 0xffffff60
    ad48:	bl	cec <flatcc_json_parser_array_start>
    ad4c:	str	r0, [fp, #-164]	; 0xffffff5c
    ad50:	b	ae68 <MyGame_Example_Monster_parse_json_table+0x528>
    ad54:	nop	{0}
    ad58:	.word	0x61727260
    ad5c:	.word	0x74657374
    ad60:	.word	0xffffffff
    ad64:	.word	0x6e616d64
    ad68:	.word	0xffffffff
    ad6c:	.word	0x666c6577
    ad70:	.word	0x79000000
    ad74:	.word	0x656e656d
    ad78:	.word	0x72000000
    ad7c:	.word	0x636f6c6f
    ad80:	.word	0x00000000
    ad84:	.word	0x666c6578
    ad88:	.word	0x6e746f71
    ad8c:	.word	0x696e7665
    ad90:	.word	0x6e746f72
    ad94:	.word	0x696e7665
    ad98:	mov	r3, #0
    ad9c:	strb	r3, [fp, #-62]	; 0xffffffc2
    ada0:	ldr	r3, [fp, #-160]	; 0xffffff60
    ada4:	ldr	r3, [r3]
    ada8:	mov	r1, #1
    adac:	mov	r0, r3
    adb0:	bl	0 <flatcc_builder_extend_vector>
    adb4:	str	r0, [fp, #-48]	; 0xffffffd0
    adb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    adbc:	cmp	r3, #0
    adc0:	beq	e364 <MyGame_Example_Monster_parse_json_table+0x3a24>
    adc4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    adc8:	str	r3, [fp, #-40]	; 0xffffffd8
    adcc:	sub	r3, fp, #62	; 0x3e
    add0:	ldr	r2, [fp, #-168]	; 0xffffff58
    add4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    add8:	ldr	r0, [fp, #-160]	; 0xffffff60
    addc:	bl	1aa0 <flatcc_json_parser_uint8>
    ade0:	str	r0, [fp, #-164]	; 0xffffff5c
    ade4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ade8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    adec:	cmp	r2, r3
    adf0:	bne	ae40 <MyGame_Example_Monster_parse_json_table+0x500>
    adf4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    adf8:	str	r3, [fp, #-40]	; 0xffffffd8
    adfc:	sub	r3, fp, #62	; 0x3e
    ae00:	str	r3, [sp]
    ae04:	movw	r3, #0
    ae08:	movt	r3, #0
    ae0c:	ldr	r2, [fp, #-168]	; 0xffffff58
    ae10:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ae14:	ldr	r0, [fp, #-160]	; 0xffffff60
    ae18:	bl	25b8 <flatcc_json_parser_symbolic_uint8>
    ae1c:	str	r0, [fp, #-164]	; 0xffffff5c
    ae20:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ae24:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ae28:	cmp	r2, r3
    ae2c:	beq	e36c <MyGame_Example_Monster_parse_json_table+0x3a2c>
    ae30:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ae34:	ldr	r3, [fp, #-168]	; 0xffffff58
    ae38:	cmp	r2, r3
    ae3c:	beq	e36c <MyGame_Example_Monster_parse_json_table+0x3a2c>
    ae40:	ldrb	r3, [fp, #-62]	; 0xffffffc2
    ae44:	mov	r1, r3
    ae48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ae4c:	bl	28 <flatbuffers_uint8_write_to_pe>
    ae50:	sub	r3, fp, #52	; 0x34
    ae54:	ldr	r2, [fp, #-168]	; 0xffffff58
    ae58:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ae5c:	ldr	r0, [fp, #-160]	; 0xffffff60
    ae60:	bl	de0 <flatcc_json_parser_array_end>
    ae64:	str	r0, [fp, #-164]	; 0xffffff5c
    ae68:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ae6c:	cmp	r3, #0
    ae70:	bne	ad98 <MyGame_Example_Monster_parse_json_table+0x458>
    ae74:	ldr	r3, [fp, #-160]	; 0xffffff60
    ae78:	ldr	r3, [r3]
    ae7c:	mov	r0, r3
    ae80:	bl	0 <flatcc_builder_end_vector>
    ae84:	mov	r3, r0
    ae88:	str	r3, [fp, #-56]	; 0xffffffc8
    ae8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ae90:	cmp	r3, #0
    ae94:	beq	e374 <MyGame_Example_Monster_parse_json_table+0x3a34>
    ae98:	ldr	r3, [fp, #-160]	; 0xffffff60
    ae9c:	ldr	r3, [r3]
    aea0:	mov	r1, #30
    aea4:	mov	r0, r3
    aea8:	bl	0 <flatcc_builder_table_add_offset>
    aeac:	str	r0, [fp, #-44]	; 0xffffffd4
    aeb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    aeb4:	cmp	r3, #0
    aeb8:	beq	e374 <MyGame_Example_Monster_parse_json_table+0x3a34>
    aebc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    aec0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    aec4:	str	r2, [r3]
    aec8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    aecc:	ldr	r2, [fp, #-168]	; 0xffffff58
    aed0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    aed4:	ldr	r0, [fp, #-160]	; 0xffffff60
    aed8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aedc:	str	r0, [fp, #-164]	; 0xffffff5c
    aee0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    aee4:	ldr	r2, [fp, #-168]	; 0xffffff58
    aee8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    aeec:	ldr	r0, [fp, #-160]	; 0xffffff60
    aef0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aef4:	str	r0, [fp, #-164]	; 0xffffff5c
    aef8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    aefc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    af00:	sub	r3, pc, #384	; 0x180
    af04:	ldrd	r2, [r3]
    af08:	cmp	r1, r3
    af0c:	cmpeq	r0, r2
    af10:	bhi	b090 <MyGame_Example_Monster_parse_json_table+0x750>
    af14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    af18:	mov	r2, #0
    af1c:	mov	r3, #0
    af20:	movt	r3, #65535	; 0xffff
    af24:	and	ip, r0, r2
    af28:	str	ip, [fp, #-204]	; 0xffffff34
    af2c:	and	r3, r1, r3
    af30:	str	r3, [fp, #-200]	; 0xffffff38
    af34:	mov	r2, #0
    af38:	mov	r3, #0
    af3c:	movt	r3, #26736	; 0x6870
    af40:	ldrd	r0, [fp, #-204]	; 0xffffff34
    af44:	cmp	r1, r3
    af48:	cmpeq	r0, r2
    af4c:	bne	b078 <MyGame_Example_Monster_parse_json_table+0x738>
    af50:	ldr	r3, [fp, #-164]	; 0xffffff5c
    af54:	str	r3, [fp, #-40]	; 0xffffffd8
    af58:	mov	r3, #2
    af5c:	ldr	r2, [fp, #-168]	; 0xffffff58
    af60:	ldr	r1, [fp, #-40]	; 0xffffffd8
    af64:	ldr	r0, [fp, #-160]	; 0xffffff60
    af68:	bl	f54 <flatcc_json_parser_match_symbol>
    af6c:	str	r0, [fp, #-164]	; 0xffffff5c
    af70:	ldr	r2, [fp, #-40]	; 0xffffffd8
    af74:	ldr	r3, [fp, #-164]	; 0xffffff5c
    af78:	cmp	r2, r3
    af7c:	beq	b060 <MyGame_Example_Monster_parse_json_table+0x720>
    af80:	mov	r3, #0
    af84:	strh	r3, [fp, #-64]	; 0xffffffc0
    af88:	ldr	r3, [fp, #-164]	; 0xffffff5c
    af8c:	str	r3, [fp, #-40]	; 0xffffffd8
    af90:	sub	r3, fp, #64	; 0x40
    af94:	ldr	r2, [fp, #-168]	; 0xffffff58
    af98:	ldr	r1, [fp, #-40]	; 0xffffffd8
    af9c:	ldr	r0, [fp, #-160]	; 0xffffff60
    afa0:	bl	1d38 <flatcc_json_parser_int16>
    afa4:	str	r0, [fp, #-164]	; 0xffffff5c
    afa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    afac:	ldr	r3, [fp, #-164]	; 0xffffff5c
    afb0:	cmp	r2, r3
    afb4:	bne	b004 <MyGame_Example_Monster_parse_json_table+0x6c4>
    afb8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    afbc:	str	r3, [fp, #-40]	; 0xffffffd8
    afc0:	sub	r3, fp, #64	; 0x40
    afc4:	str	r3, [sp]
    afc8:	movw	r3, #0
    afcc:	movt	r3, #0
    afd0:	ldr	r2, [fp, #-168]	; 0xffffff58
    afd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    afd8:	ldr	r0, [fp, #-160]	; 0xffffff60
    afdc:	bl	2b70 <flatcc_json_parser_symbolic_int16>
    afe0:	str	r0, [fp, #-164]	; 0xffffff5c
    afe4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    afe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    afec:	cmp	r2, r3
    aff0:	beq	e37c <MyGame_Example_Monster_parse_json_table+0x3a3c>
    aff4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    aff8:	ldr	r3, [fp, #-168]	; 0xffffff58
    affc:	cmp	r2, r3
    b000:	beq	e37c <MyGame_Example_Monster_parse_json_table+0x3a3c>
    b004:	ldrsh	r3, [fp, #-64]	; 0xffffffc0
    b008:	cmp	r3, #100	; 0x64
    b00c:	bne	b024 <MyGame_Example_Monster_parse_json_table+0x6e4>
    b010:	ldr	r3, [fp, #-160]	; 0xffffff60
    b014:	ldr	r3, [r3, #8]
    b018:	and	r3, r3, #2
    b01c:	cmp	r3, #0
    b020:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b024:	ldr	r3, [fp, #-160]	; 0xffffff60
    b028:	ldr	r0, [r3]
    b02c:	mov	r3, #2
    b030:	mov	r2, #2
    b034:	mov	r1, #2
    b038:	bl	0 <flatcc_builder_table_add>
    b03c:	str	r0, [fp, #-48]	; 0xffffffd0
    b040:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b044:	cmp	r3, #0
    b048:	beq	e384 <MyGame_Example_Monster_parse_json_table+0x3a44>
    b04c:	ldrsh	r3, [fp, #-64]	; 0xffffffc0
    b050:	mov	r1, r3
    b054:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b058:	bl	254 <flatbuffers_int16_write_to_pe>
    b05c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b060:	ldr	r2, [fp, #-168]	; 0xffffff58
    b064:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b068:	ldr	r0, [fp, #-160]	; 0xffffff60
    b06c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b070:	str	r0, [fp, #-164]	; 0xffffff5c
    b074:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b078:	ldr	r2, [fp, #-168]	; 0xffffff58
    b07c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b080:	ldr	r0, [fp, #-160]	; 0xffffff60
    b084:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b088:	str	r0, [fp, #-164]	; 0xffffff5c
    b08c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b090:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b094:	sub	r3, pc, #780	; 0x30c
    b098:	ldrd	r2, [r3]
    b09c:	cmp	r1, r3
    b0a0:	cmpeq	r0, r2
    b0a4:	bne	b2b8 <MyGame_Example_Monster_parse_json_table+0x978>
    b0a8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b0ac:	add	r3, r3, #8
    b0b0:	str	r3, [fp, #-164]	; 0xffffff5c
    b0b4:	ldr	r1, [fp, #-168]	; 0xffffff58
    b0b8:	ldr	r0, [fp, #-164]	; 0xffffff5c
    b0bc:	bl	940 <flatcc_json_parser_symbol_part>
    b0c0:	strd	r0, [fp, #-36]	; 0xffffffdc
    b0c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b0c8:	mov	r2, #0
    b0cc:	mov	r3, #-16777216	; 0xff000000
    b0d0:	and	r4, r0, r2
    b0d4:	and	r5, r1, r3
    b0d8:	cmp	r5, #2030043136	; 0x79000000
    b0dc:	cmpeq	r4, #0
    b0e0:	bne	b2a0 <MyGame_Example_Monster_parse_json_table+0x960>
    b0e4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b0e8:	str	r3, [fp, #-40]	; 0xffffffd8
    b0ec:	mov	r3, #1
    b0f0:	ldr	r2, [fp, #-168]	; 0xffffff58
    b0f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b0f8:	ldr	r0, [fp, #-160]	; 0xffffff60
    b0fc:	bl	f54 <flatcc_json_parser_match_symbol>
    b100:	str	r0, [fp, #-164]	; 0xffffff5c
    b104:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b108:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b10c:	cmp	r2, r3
    b110:	beq	b288 <MyGame_Example_Monster_parse_json_table+0x948>
    b114:	ldr	r3, [fp, #-160]	; 0xffffff60
    b118:	ldr	r0, [r3]
    b11c:	mvn	r3, #0
    b120:	mov	r2, #1
    b124:	mov	r1, #1
    b128:	bl	0 <flatcc_builder_start_vector>
    b12c:	mov	r3, r0
    b130:	cmp	r3, #0
    b134:	bne	e38c <MyGame_Example_Monster_parse_json_table+0x3a4c>
    b138:	sub	r3, fp, #52	; 0x34
    b13c:	ldr	r2, [fp, #-168]	; 0xffffff58
    b140:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b144:	ldr	r0, [fp, #-160]	; 0xffffff60
    b148:	bl	cec <flatcc_json_parser_array_start>
    b14c:	str	r0, [fp, #-164]	; 0xffffff5c
    b150:	b	b224 <MyGame_Example_Monster_parse_json_table+0x8e4>
    b154:	mov	r3, #0
    b158:	strb	r3, [fp, #-65]	; 0xffffffbf
    b15c:	ldr	r3, [fp, #-160]	; 0xffffff60
    b160:	ldr	r3, [r3]
    b164:	mov	r1, #1
    b168:	mov	r0, r3
    b16c:	bl	0 <flatcc_builder_extend_vector>
    b170:	str	r0, [fp, #-48]	; 0xffffffd0
    b174:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b178:	cmp	r3, #0
    b17c:	beq	e394 <MyGame_Example_Monster_parse_json_table+0x3a54>
    b180:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b184:	str	r3, [fp, #-40]	; 0xffffffd8
    b188:	sub	r3, fp, #65	; 0x41
    b18c:	ldr	r2, [fp, #-168]	; 0xffffff58
    b190:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b194:	ldr	r0, [fp, #-160]	; 0xffffff60
    b198:	bl	1aa0 <flatcc_json_parser_uint8>
    b19c:	str	r0, [fp, #-164]	; 0xffffff5c
    b1a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b1a4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b1a8:	cmp	r2, r3
    b1ac:	bne	b1fc <MyGame_Example_Monster_parse_json_table+0x8bc>
    b1b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b1b4:	str	r3, [fp, #-40]	; 0xffffffd8
    b1b8:	sub	r3, fp, #65	; 0x41
    b1bc:	str	r3, [sp]
    b1c0:	movw	r3, #0
    b1c4:	movt	r3, #0
    b1c8:	ldr	r2, [fp, #-168]	; 0xffffff58
    b1cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b1d0:	ldr	r0, [fp, #-160]	; 0xffffff60
    b1d4:	bl	25b8 <flatcc_json_parser_symbolic_uint8>
    b1d8:	str	r0, [fp, #-164]	; 0xffffff5c
    b1dc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b1e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b1e4:	cmp	r2, r3
    b1e8:	beq	e39c <MyGame_Example_Monster_parse_json_table+0x3a5c>
    b1ec:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b1f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    b1f4:	cmp	r2, r3
    b1f8:	beq	e39c <MyGame_Example_Monster_parse_json_table+0x3a5c>
    b1fc:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    b200:	mov	r1, r3
    b204:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b208:	bl	28 <flatbuffers_uint8_write_to_pe>
    b20c:	sub	r3, fp, #52	; 0x34
    b210:	ldr	r2, [fp, #-168]	; 0xffffff58
    b214:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b218:	ldr	r0, [fp, #-160]	; 0xffffff60
    b21c:	bl	de0 <flatcc_json_parser_array_end>
    b220:	str	r0, [fp, #-164]	; 0xffffff5c
    b224:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b228:	cmp	r3, #0
    b22c:	bne	b154 <MyGame_Example_Monster_parse_json_table+0x814>
    b230:	ldr	r3, [fp, #-160]	; 0xffffff60
    b234:	ldr	r3, [r3]
    b238:	mov	r0, r3
    b23c:	bl	0 <flatcc_builder_end_vector>
    b240:	mov	r3, r0
    b244:	str	r3, [fp, #-56]	; 0xffffffc8
    b248:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b24c:	cmp	r3, #0
    b250:	beq	e3a4 <MyGame_Example_Monster_parse_json_table+0x3a64>
    b254:	ldr	r3, [fp, #-160]	; 0xffffff60
    b258:	ldr	r3, [r3]
    b25c:	mov	r1, #5
    b260:	mov	r0, r3
    b264:	bl	0 <flatcc_builder_table_add_offset>
    b268:	str	r0, [fp, #-44]	; 0xffffffd4
    b26c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b270:	cmp	r3, #0
    b274:	beq	e3a4 <MyGame_Example_Monster_parse_json_table+0x3a64>
    b278:	ldr	r2, [fp, #-56]	; 0xffffffc8
    b27c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b280:	str	r2, [r3]
    b284:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b288:	ldr	r2, [fp, #-168]	; 0xffffff58
    b28c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b290:	ldr	r0, [fp, #-160]	; 0xffffff60
    b294:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b298:	str	r0, [fp, #-164]	; 0xffffff5c
    b29c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b2a0:	ldr	r2, [fp, #-168]	; 0xffffff58
    b2a4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b2a8:	ldr	r0, [fp, #-160]	; 0xffffff60
    b2ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b2b0:	str	r0, [fp, #-164]	; 0xffffff5c
    b2b4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b2b8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b2bc:	mov	r2, #0
    b2c0:	mvn	r3, #0
    b2c4:	and	ip, r0, r2
    b2c8:	str	ip, [fp, #-212]	; 0xffffff2c
    b2cc:	and	r3, r1, r3
    b2d0:	str	r3, [fp, #-208]	; 0xffffff30
    b2d4:	add	r3, pc, #988	; 0x3dc
    b2d8:	ldrd	r2, [r3]
    b2dc:	ldrd	r0, [fp, #-212]	; 0xffffff2c
    b2e0:	cmp	r1, r3
    b2e4:	cmpeq	r0, r2
    b2e8:	bne	b414 <MyGame_Example_Monster_parse_json_table+0xad4>
    b2ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b2f0:	str	r3, [fp, #-40]	; 0xffffffd8
    b2f4:	mov	r3, #4
    b2f8:	ldr	r2, [fp, #-168]	; 0xffffff58
    b2fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b300:	ldr	r0, [fp, #-160]	; 0xffffff60
    b304:	bl	f54 <flatcc_json_parser_match_symbol>
    b308:	str	r0, [fp, #-164]	; 0xffffff5c
    b30c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b310:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b314:	cmp	r2, r3
    b318:	beq	b3fc <MyGame_Example_Monster_parse_json_table+0xabc>
    b31c:	mov	r3, #0
    b320:	strh	r3, [fp, #-68]	; 0xffffffbc
    b324:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b328:	str	r3, [fp, #-40]	; 0xffffffd8
    b32c:	sub	r3, fp, #68	; 0x44
    b330:	ldr	r2, [fp, #-168]	; 0xffffff58
    b334:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b338:	ldr	r0, [fp, #-160]	; 0xffffff60
    b33c:	bl	1d38 <flatcc_json_parser_int16>
    b340:	str	r0, [fp, #-164]	; 0xffffff5c
    b344:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b348:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b34c:	cmp	r2, r3
    b350:	bne	b3a0 <MyGame_Example_Monster_parse_json_table+0xa60>
    b354:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b358:	str	r3, [fp, #-40]	; 0xffffffd8
    b35c:	sub	r3, fp, #68	; 0x44
    b360:	str	r3, [sp]
    b364:	movw	r3, #0
    b368:	movt	r3, #0
    b36c:	ldr	r2, [fp, #-168]	; 0xffffff58
    b370:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b374:	ldr	r0, [fp, #-160]	; 0xffffff60
    b378:	bl	2b70 <flatcc_json_parser_symbolic_int16>
    b37c:	str	r0, [fp, #-164]	; 0xffffff5c
    b380:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b384:	ldr	r3, [fp, #-40]	; 0xffffffd8
    b388:	cmp	r2, r3
    b38c:	beq	e3ac <MyGame_Example_Monster_parse_json_table+0x3a6c>
    b390:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b394:	ldr	r3, [fp, #-168]	; 0xffffff58
    b398:	cmp	r2, r3
    b39c:	beq	e3ac <MyGame_Example_Monster_parse_json_table+0x3a6c>
    b3a0:	ldrsh	r3, [fp, #-68]	; 0xffffffbc
    b3a4:	cmp	r3, #150	; 0x96
    b3a8:	bne	b3c0 <MyGame_Example_Monster_parse_json_table+0xa80>
    b3ac:	ldr	r3, [fp, #-160]	; 0xffffff60
    b3b0:	ldr	r3, [r3, #8]
    b3b4:	and	r3, r3, #2
    b3b8:	cmp	r3, #0
    b3bc:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b3c0:	ldr	r3, [fp, #-160]	; 0xffffff60
    b3c4:	ldr	r0, [r3]
    b3c8:	mov	r3, #2
    b3cc:	mov	r2, #2
    b3d0:	mov	r1, #1
    b3d4:	bl	0 <flatcc_builder_table_add>
    b3d8:	str	r0, [fp, #-48]	; 0xffffffd0
    b3dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b3e0:	cmp	r3, #0
    b3e4:	beq	e3b4 <MyGame_Example_Monster_parse_json_table+0x3a74>
    b3e8:	ldrsh	r3, [fp, #-68]	; 0xffffffbc
    b3ec:	mov	r1, r3
    b3f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b3f4:	bl	254 <flatbuffers_int16_write_to_pe>
    b3f8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b3fc:	ldr	r2, [fp, #-168]	; 0xffffff58
    b400:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b404:	ldr	r0, [fp, #-160]	; 0xffffff60
    b408:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b40c:	str	r0, [fp, #-164]	; 0xffffff5c
    b410:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b414:	ldr	r2, [fp, #-168]	; 0xffffff58
    b418:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b41c:	ldr	r0, [fp, #-160]	; 0xffffff60
    b420:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b424:	str	r0, [fp, #-164]	; 0xffffff5c
    b428:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b42c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b430:	add	r3, pc, #648	; 0x288
    b434:	ldrd	r2, [r3]
    b438:	cmp	r1, r3
    b43c:	cmpeq	r0, r2
    b440:	bhi	b7e8 <MyGame_Example_Monster_parse_json_table+0xea8>
    b444:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b448:	add	r3, pc, #632	; 0x278
    b44c:	ldrd	r2, [r3]
    b450:	cmp	r1, r3
    b454:	cmpeq	r0, r2
    b458:	bhi	b548 <MyGame_Example_Monster_parse_json_table+0xc08>
    b45c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b460:	mov	r2, #0
    b464:	mvn	r3, #0
    b468:	and	ip, r0, r2
    b46c:	str	ip, [fp, #-220]	; 0xffffff24
    b470:	and	r3, r1, r3
    b474:	str	r3, [fp, #-216]	; 0xffffff28
    b478:	add	r3, pc, #592	; 0x250
    b47c:	ldrd	r2, [r3]
    b480:	ldrd	r0, [fp, #-220]	; 0xffffff24
    b484:	cmp	r1, r3
    b488:	cmpeq	r0, r2
    b48c:	bne	b530 <MyGame_Example_Monster_parse_json_table+0xbf0>
    b490:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b494:	str	r3, [fp, #-40]	; 0xffffffd8
    b498:	mov	r3, #4
    b49c:	ldr	r2, [fp, #-168]	; 0xffffff58
    b4a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b4a4:	ldr	r0, [fp, #-160]	; 0xffffff60
    b4a8:	bl	f54 <flatcc_json_parser_match_symbol>
    b4ac:	str	r0, [fp, #-164]	; 0xffffff5c
    b4b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b4b4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b4b8:	cmp	r2, r3
    b4bc:	beq	b518 <MyGame_Example_Monster_parse_json_table+0xbd8>
    b4c0:	sub	r3, fp, #56	; 0x38
    b4c4:	ldr	r2, [fp, #-168]	; 0xffffff58
    b4c8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b4cc:	ldr	r0, [fp, #-160]	; 0xffffff60
    b4d0:	bl	0 <flatcc_json_parser_build_string>
    b4d4:	str	r0, [fp, #-164]	; 0xffffff5c
    b4d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b4dc:	cmp	r3, #0
    b4e0:	beq	e3bc <MyGame_Example_Monster_parse_json_table+0x3a7c>
    b4e4:	ldr	r3, [fp, #-160]	; 0xffffff60
    b4e8:	ldr	r3, [r3]
    b4ec:	mov	r1, #3
    b4f0:	mov	r0, r3
    b4f4:	bl	0 <flatcc_builder_table_add_offset>
    b4f8:	str	r0, [fp, #-44]	; 0xffffffd4
    b4fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b500:	cmp	r3, #0
    b504:	beq	e3bc <MyGame_Example_Monster_parse_json_table+0x3a7c>
    b508:	ldr	r2, [fp, #-56]	; 0xffffffc8
    b50c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b510:	str	r2, [r3]
    b514:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b518:	ldr	r2, [fp, #-168]	; 0xffffff58
    b51c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b520:	ldr	r0, [fp, #-160]	; 0xffffff60
    b524:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b528:	str	r0, [fp, #-164]	; 0xffffff5c
    b52c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b530:	ldr	r2, [fp, #-168]	; 0xffffff58
    b534:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b538:	ldr	r0, [fp, #-160]	; 0xffffff60
    b53c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b540:	str	r0, [fp, #-164]	; 0xffffff5c
    b544:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b548:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b54c:	add	r3, pc, #388	; 0x184
    b550:	ldrd	r2, [r3]
    b554:	cmp	r1, r3
    b558:	cmpeq	r0, r2
    b55c:	bne	b710 <MyGame_Example_Monster_parse_json_table+0xdd0>
    b560:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b564:	add	r3, r3, #8
    b568:	str	r3, [fp, #-164]	; 0xffffff5c
    b56c:	ldr	r1, [fp, #-168]	; 0xffffff58
    b570:	ldr	r0, [fp, #-164]	; 0xffffff5c
    b574:	bl	940 <flatcc_json_parser_symbol_part>
    b578:	strd	r0, [fp, #-36]	; 0xffffffdc
    b57c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b580:	add	r3, pc, #344	; 0x158
    b584:	ldrd	r2, [r3]
    b588:	cmp	r1, r3
    b58c:	cmpeq	r0, r2
    b590:	bne	b69c <MyGame_Example_Monster_parse_json_table+0xd5c>
    b594:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b598:	add	r3, r3, #8
    b59c:	str	r3, [fp, #-164]	; 0xffffff5c
    b5a0:	ldr	r1, [fp, #-168]	; 0xffffff58
    b5a4:	ldr	r0, [fp, #-164]	; 0xffffff5c
    b5a8:	bl	940 <flatcc_json_parser_symbol_part>
    b5ac:	strd	r0, [fp, #-36]	; 0xffffffdc
    b5b0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b5b4:	mov	r2, #-16777216	; 0xff000000
    b5b8:	mvn	r3, #0
    b5bc:	and	ip, r0, r2
    b5c0:	str	ip, [fp, #-228]	; 0xffffff1c
    b5c4:	and	r3, r1, r3
    b5c8:	str	r3, [fp, #-224]	; 0xffffff20
    b5cc:	add	r3, pc, #276	; 0x114
    b5d0:	ldrd	r2, [r3]
    b5d4:	ldrd	r0, [fp, #-228]	; 0xffffff1c
    b5d8:	cmp	r1, r3
    b5dc:	cmpeq	r0, r2
    b5e0:	bne	b684 <MyGame_Example_Monster_parse_json_table+0xd44>
    b5e4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b5e8:	str	r3, [fp, #-40]	; 0xffffffd8
    b5ec:	mov	r3, #5
    b5f0:	ldr	r2, [fp, #-168]	; 0xffffff58
    b5f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b5f8:	ldr	r0, [fp, #-160]	; 0xffffff60
    b5fc:	bl	f54 <flatcc_json_parser_match_symbol>
    b600:	str	r0, [fp, #-164]	; 0xffffff5c
    b604:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b608:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b60c:	cmp	r2, r3
    b610:	beq	b66c <MyGame_Example_Monster_parse_json_table+0xd2c>
    b614:	sub	r3, fp, #56	; 0x38
    b618:	ldr	r2, [fp, #-168]	; 0xffffff58
    b61c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b620:	ldr	r0, [fp, #-160]	; 0xffffff60
    b624:	bl	4334 <MyGame_InParentNamespace_parse_json_table>
    b628:	str	r0, [fp, #-164]	; 0xffffff5c
    b62c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b630:	cmp	r3, #0
    b634:	beq	e3c4 <MyGame_Example_Monster_parse_json_table+0x3a84>
    b638:	ldr	r3, [fp, #-160]	; 0xffffff60
    b63c:	ldr	r3, [r3]
    b640:	mov	r1, #34	; 0x22
    b644:	mov	r0, r3
    b648:	bl	0 <flatcc_builder_table_add_offset>
    b64c:	str	r0, [fp, #-44]	; 0xffffffd4
    b650:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b654:	cmp	r3, #0
    b658:	beq	e3c4 <MyGame_Example_Monster_parse_json_table+0x3a84>
    b65c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    b660:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b664:	str	r2, [r3]
    b668:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b66c:	ldr	r2, [fp, #-168]	; 0xffffff58
    b670:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b674:	ldr	r0, [fp, #-160]	; 0xffffff60
    b678:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b67c:	str	r0, [fp, #-164]	; 0xffffff5c
    b680:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b684:	ldr	r2, [fp, #-168]	; 0xffffff58
    b688:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b68c:	ldr	r0, [fp, #-160]	; 0xffffff60
    b690:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b694:	str	r0, [fp, #-164]	; 0xffffff5c
    b698:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b69c:	ldr	r2, [fp, #-168]	; 0xffffff58
    b6a0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b6a4:	ldr	r0, [fp, #-160]	; 0xffffff60
    b6a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b6ac:	str	r0, [fp, #-164]	; 0xffffff5c
    b6b0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b6b4:	nop	{0}
    b6b8:	.word	0x00000000
    b6bc:	.word	0x6d616e61
    b6c0:	.word	0xffffffff
    b6c4:	.word	0x74657373
    b6c8:	.word	0x6e745f6d
    b6cc:	.word	0x70617265
    b6d0:	.word	0x00000000
    b6d4:	.word	0x6e616d65
    b6d8:	.word	0x6e745f6e
    b6dc:	.word	0x70617265
    b6e0:	.word	0x70616365
    b6e4:	.word	0x616d6573
    b6e8:	.word	0x74000000
    b6ec:	.word	0x5f746573
    b6f0:	.word	0x00000000
    b6f4:	.word	0x706f7300
    b6f8:	.word	0x34000000
    b6fc:	.word	0x74657374
    b700:	.word	0x00000000
    b704:	.word	0x74657374
    b708:	.word	0x35000000
    b70c:	.word	0x74657374
    b710:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b714:	mov	r2, #0
    b718:	mvn	r3, #255	; 0xff
    b71c:	and	ip, r0, r2
    b720:	str	ip, [fp, #-236]	; 0xffffff14
    b724:	and	r3, r1, r3
    b728:	str	r3, [fp, #-232]	; 0xffffff18
    b72c:	sub	r3, pc, #68	; 0x44
    b730:	ldrd	r2, [r3]
    b734:	ldrd	r0, [fp, #-236]	; 0xffffff14
    b738:	cmp	r1, r3
    b73c:	cmpeq	r0, r2
    b740:	bne	b7d0 <MyGame_Example_Monster_parse_json_table+0xe90>
    b744:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b748:	str	r3, [fp, #-40]	; 0xffffffd8
    b74c:	mov	r3, #3
    b750:	ldr	r2, [fp, #-168]	; 0xffffff58
    b754:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b758:	ldr	r0, [fp, #-160]	; 0xffffff60
    b75c:	bl	f54 <flatcc_json_parser_match_symbol>
    b760:	str	r0, [fp, #-164]	; 0xffffff5c
    b764:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b768:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b76c:	cmp	r2, r3
    b770:	beq	b7b8 <MyGame_Example_Monster_parse_json_table+0xe78>
    b774:	ldr	r3, [fp, #-160]	; 0xffffff60
    b778:	ldr	r0, [r3]
    b77c:	mov	r3, #16
    b780:	mov	r2, #32
    b784:	mov	r1, #0
    b788:	bl	0 <flatcc_builder_table_add>
    b78c:	str	r0, [fp, #-48]	; 0xffffffd0
    b790:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b794:	cmp	r3, #0
    b798:	beq	e3cc <MyGame_Example_Monster_parse_json_table+0x3a8c>
    b79c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b7a0:	ldr	r2, [fp, #-168]	; 0xffffff58
    b7a4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b7a8:	ldr	r0, [fp, #-160]	; 0xffffff60
    b7ac:	bl	737c <MyGame_Example_Vec3_parse_json_struct_inline>
    b7b0:	str	r0, [fp, #-164]	; 0xffffff5c
    b7b4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b7b8:	ldr	r2, [fp, #-168]	; 0xffffff58
    b7bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b7c0:	ldr	r0, [fp, #-160]	; 0xffffff60
    b7c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b7c8:	str	r0, [fp, #-164]	; 0xffffff5c
    b7cc:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b7d0:	ldr	r2, [fp, #-168]	; 0xffffff58
    b7d4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b7d8:	ldr	r0, [fp, #-160]	; 0xffffff60
    b7dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b7e0:	str	r0, [fp, #-164]	; 0xffffff5c
    b7e4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b7e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b7ec:	mov	r2, #-16777216	; 0xff000000
    b7f0:	mvn	r3, #0
    b7f4:	and	ip, r0, r2
    b7f8:	str	ip, [fp, #-244]	; 0xffffff0c
    b7fc:	and	r3, r1, r3
    b800:	str	r3, [fp, #-240]	; 0xffffff10
    b804:	sub	r3, pc, #276	; 0x114
    b808:	ldrd	r2, [r3]
    b80c:	ldrd	r0, [fp, #-244]	; 0xffffff0c
    b810:	cmp	r1, r3
    b814:	cmpeq	r0, r2
    b818:	bne	b944 <MyGame_Example_Monster_parse_json_table+0x1004>
    b81c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b820:	str	r3, [fp, #-40]	; 0xffffffd8
    b824:	mov	r3, #5
    b828:	ldr	r2, [fp, #-168]	; 0xffffff58
    b82c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b830:	ldr	r0, [fp, #-160]	; 0xffffff60
    b834:	bl	f54 <flatcc_json_parser_match_symbol>
    b838:	str	r0, [fp, #-164]	; 0xffffff5c
    b83c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b840:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b844:	cmp	r2, r3
    b848:	beq	b9e0 <MyGame_Example_Monster_parse_json_table+0x10a0>
    b84c:	ldr	r3, [fp, #-160]	; 0xffffff60
    b850:	ldr	r0, [r3]
    b854:	mvn	r3, #-1073741824	; 0xc0000000
    b858:	mov	r2, #2
    b85c:	mov	r1, #4
    b860:	bl	0 <flatcc_builder_start_vector>
    b864:	mov	r3, r0
    b868:	cmp	r3, #0
    b86c:	bne	e3d4 <MyGame_Example_Monster_parse_json_table+0x3a94>
    b870:	sub	r3, fp, #52	; 0x34
    b874:	ldr	r2, [fp, #-168]	; 0xffffff58
    b878:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b87c:	ldr	r0, [fp, #-160]	; 0xffffff60
    b880:	bl	cec <flatcc_json_parser_array_start>
    b884:	str	r0, [fp, #-164]	; 0xffffff5c
    b888:	b	b8e0 <MyGame_Example_Monster_parse_json_table+0xfa0>
    b88c:	ldr	r3, [fp, #-160]	; 0xffffff60
    b890:	ldr	r3, [r3]
    b894:	mov	r1, #1
    b898:	mov	r0, r3
    b89c:	bl	0 <flatcc_builder_extend_vector>
    b8a0:	str	r0, [fp, #-48]	; 0xffffffd0
    b8a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b8a8:	cmp	r3, #0
    b8ac:	beq	e3dc <MyGame_Example_Monster_parse_json_table+0x3a9c>
    b8b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    b8b4:	ldr	r2, [fp, #-168]	; 0xffffff58
    b8b8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b8bc:	ldr	r0, [fp, #-160]	; 0xffffff60
    b8c0:	bl	58f8 <MyGame_Example_Test_parse_json_struct_inline>
    b8c4:	str	r0, [fp, #-164]	; 0xffffff5c
    b8c8:	sub	r3, fp, #52	; 0x34
    b8cc:	ldr	r2, [fp, #-168]	; 0xffffff58
    b8d0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b8d4:	ldr	r0, [fp, #-160]	; 0xffffff60
    b8d8:	bl	de0 <flatcc_json_parser_array_end>
    b8dc:	str	r0, [fp, #-164]	; 0xffffff5c
    b8e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    b8e4:	cmp	r3, #0
    b8e8:	bne	b88c <MyGame_Example_Monster_parse_json_table+0xf4c>
    b8ec:	ldr	r3, [fp, #-160]	; 0xffffff60
    b8f0:	ldr	r3, [r3]
    b8f4:	mov	r0, r3
    b8f8:	bl	0 <flatcc_builder_end_vector>
    b8fc:	mov	r3, r0
    b900:	str	r3, [fp, #-56]	; 0xffffffc8
    b904:	ldr	r3, [fp, #-56]	; 0xffffffc8
    b908:	cmp	r3, #0
    b90c:	beq	e3e4 <MyGame_Example_Monster_parse_json_table+0x3aa4>
    b910:	ldr	r3, [fp, #-160]	; 0xffffff60
    b914:	ldr	r3, [r3]
    b918:	mov	r1, #9
    b91c:	mov	r0, r3
    b920:	bl	0 <flatcc_builder_table_add_offset>
    b924:	str	r0, [fp, #-44]	; 0xffffffd4
    b928:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b92c:	cmp	r3, #0
    b930:	beq	e3e4 <MyGame_Example_Monster_parse_json_table+0x3aa4>
    b934:	ldr	r2, [fp, #-56]	; 0xffffffc8
    b938:	ldr	r3, [fp, #-44]	; 0xffffffd4
    b93c:	str	r2, [r3]
    b940:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b944:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b948:	mov	r2, #0
    b94c:	mvn	r3, #0
    b950:	and	ip, r0, r2
    b954:	str	ip, [fp, #-252]	; 0xffffff04
    b958:	and	r3, r1, r3
    b95c:	str	r3, [fp, #-248]	; 0xffffff08
    b960:	sub	r3, pc, #616	; 0x268
    b964:	ldrd	r2, [r3]
    b968:	ldrd	r0, [fp, #-252]	; 0xffffff04
    b96c:	cmp	r1, r3
    b970:	cmpeq	r0, r2
    b974:	bne	b9e8 <MyGame_Example_Monster_parse_json_table+0x10a8>
    b978:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b97c:	str	r3, [fp, #-40]	; 0xffffffd8
    b980:	mov	r3, #4
    b984:	ldr	r2, [fp, #-168]	; 0xffffff58
    b988:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b98c:	ldr	r0, [fp, #-160]	; 0xffffff60
    b990:	bl	f54 <flatcc_json_parser_match_symbol>
    b994:	str	r0, [fp, #-164]	; 0xffffff5c
    b998:	ldr	r2, [fp, #-40]	; 0xffffffd8
    b99c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    b9a0:	cmp	r2, r3
    b9a4:	beq	b9f0 <MyGame_Example_Monster_parse_json_table+0x10b0>
    b9a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    b9ac:	movw	r3, #0
    b9b0:	movt	r3, #0
    b9b4:	str	r3, [sp, #8]
    b9b8:	str	r2, [sp, #4]
    b9bc:	mov	r3, #8
    b9c0:	str	r3, [sp]
    b9c4:	mov	r3, #0
    b9c8:	ldr	r2, [fp, #-168]	; 0xffffff58
    b9cc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    b9d0:	ldr	r0, [fp, #-160]	; 0xffffff60
    b9d4:	bl	0 <flatcc_json_parser_union>
    b9d8:	str	r0, [fp, #-164]	; 0xffffff5c
    b9dc:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    b9e0:	nop	{0}
    b9e4:	b	b9f4 <MyGame_Example_Monster_parse_json_table+0x10b4>
    b9e8:	nop	{0}
    b9ec:	b	b9f4 <MyGame_Example_Monster_parse_json_table+0x10b4>
    b9f0:	nop	{0}
    b9f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    b9f8:	mov	r2, #-16777216	; 0xff000000
    b9fc:	mvn	r3, #0
    ba00:	and	ip, r0, r2
    ba04:	str	ip, [fp, #-260]	; 0xfffffefc
    ba08:	and	r3, r1, r3
    ba0c:	str	r3, [fp, #-256]	; 0xffffff00
    ba10:	sub	r3, pc, #784	; 0x310
    ba14:	ldrd	r2, [r3]
    ba18:	sub	r1, fp, #260	; 0x104
    ba1c:	ldrd	r0, [r1]
    ba20:	cmp	r1, r3
    ba24:	cmpeq	r0, r2
    ba28:	bne	bb54 <MyGame_Example_Monster_parse_json_table+0x1214>
    ba2c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ba30:	str	r3, [fp, #-40]	; 0xffffffd8
    ba34:	mov	r3, #5
    ba38:	ldr	r2, [fp, #-168]	; 0xffffff58
    ba3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ba40:	ldr	r0, [fp, #-160]	; 0xffffff60
    ba44:	bl	f54 <flatcc_json_parser_match_symbol>
    ba48:	str	r0, [fp, #-164]	; 0xffffff5c
    ba4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ba50:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ba54:	cmp	r2, r3
    ba58:	beq	bb5c <MyGame_Example_Monster_parse_json_table+0x121c>
    ba5c:	ldr	r3, [fp, #-160]	; 0xffffff60
    ba60:	ldr	r0, [r3]
    ba64:	mvn	r3, #-1073741824	; 0xc0000000
    ba68:	mov	r2, #2
    ba6c:	mov	r1, #4
    ba70:	bl	0 <flatcc_builder_start_vector>
    ba74:	mov	r3, r0
    ba78:	cmp	r3, #0
    ba7c:	bne	e3ec <MyGame_Example_Monster_parse_json_table+0x3aac>
    ba80:	sub	r3, fp, #52	; 0x34
    ba84:	ldr	r2, [fp, #-168]	; 0xffffff58
    ba88:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ba8c:	ldr	r0, [fp, #-160]	; 0xffffff60
    ba90:	bl	cec <flatcc_json_parser_array_start>
    ba94:	str	r0, [fp, #-164]	; 0xffffff5c
    ba98:	b	baf0 <MyGame_Example_Monster_parse_json_table+0x11b0>
    ba9c:	ldr	r3, [fp, #-160]	; 0xffffff60
    baa0:	ldr	r3, [r3]
    baa4:	mov	r1, #1
    baa8:	mov	r0, r3
    baac:	bl	0 <flatcc_builder_extend_vector>
    bab0:	str	r0, [fp, #-48]	; 0xffffffd0
    bab4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    bab8:	cmp	r3, #0
    babc:	beq	e3f4 <MyGame_Example_Monster_parse_json_table+0x3ab4>
    bac0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    bac4:	ldr	r2, [fp, #-168]	; 0xffffff58
    bac8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bacc:	ldr	r0, [fp, #-160]	; 0xffffff60
    bad0:	bl	58f8 <MyGame_Example_Test_parse_json_struct_inline>
    bad4:	str	r0, [fp, #-164]	; 0xffffff5c
    bad8:	sub	r3, fp, #52	; 0x34
    badc:	ldr	r2, [fp, #-168]	; 0xffffff58
    bae0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bae4:	ldr	r0, [fp, #-160]	; 0xffffff60
    bae8:	bl	de0 <flatcc_json_parser_array_end>
    baec:	str	r0, [fp, #-164]	; 0xffffff5c
    baf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    baf4:	cmp	r3, #0
    baf8:	bne	ba9c <MyGame_Example_Monster_parse_json_table+0x115c>
    bafc:	ldr	r3, [fp, #-160]	; 0xffffff60
    bb00:	ldr	r3, [r3]
    bb04:	mov	r0, r3
    bb08:	bl	0 <flatcc_builder_end_vector>
    bb0c:	mov	r3, r0
    bb10:	str	r3, [fp, #-56]	; 0xffffffc8
    bb14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    bb18:	cmp	r3, #0
    bb1c:	beq	e3fc <MyGame_Example_Monster_parse_json_table+0x3abc>
    bb20:	ldr	r3, [fp, #-160]	; 0xffffff60
    bb24:	ldr	r3, [r3]
    bb28:	mov	r1, #31
    bb2c:	mov	r0, r3
    bb30:	bl	0 <flatcc_builder_table_add_offset>
    bb34:	str	r0, [fp, #-44]	; 0xffffffd4
    bb38:	ldr	r3, [fp, #-44]	; 0xffffffd4
    bb3c:	cmp	r3, #0
    bb40:	beq	e3fc <MyGame_Example_Monster_parse_json_table+0x3abc>
    bb44:	ldr	r2, [fp, #-56]	; 0xffffffc8
    bb48:	ldr	r3, [fp, #-44]	; 0xffffffd4
    bb4c:	str	r2, [r3]
    bb50:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    bb54:	nop	{0}
    bb58:	b	bb60 <MyGame_Example_Monster_parse_json_table+0x1220>
    bb5c:	nop	{0}
    bb60:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bb64:	add	r3, pc, #812	; 0x32c
    bb68:	ldrd	r2, [r3]
    bb6c:	cmp	r1, r3
    bb70:	cmpeq	r0, r2
    bb74:	bne	bc58 <MyGame_Example_Monster_parse_json_table+0x1318>
    bb78:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bb7c:	add	r3, r3, #8
    bb80:	str	r3, [fp, #-164]	; 0xffffff5c
    bb84:	ldr	r1, [fp, #-168]	; 0xffffff58
    bb88:	ldr	r0, [fp, #-164]	; 0xffffff5c
    bb8c:	bl	940 <flatcc_json_parser_symbol_part>
    bb90:	strd	r0, [fp, #-36]	; 0xffffffdc
    bb94:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bb98:	mov	r2, #0
    bb9c:	mov	r3, #-16777216	; 0xff000000
    bba0:	and	r6, r0, r2
    bba4:	and	r7, r1, r3
    bba8:	cmp	r7, #1694498816	; 0x65000000
    bbac:	cmpeq	r6, #0
    bbb0:	bne	bc40 <MyGame_Example_Monster_parse_json_table+0x1300>
    bbb4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bbb8:	str	r3, [fp, #-40]	; 0xffffffd8
    bbbc:	mov	r3, #1
    bbc0:	ldr	r2, [fp, #-168]	; 0xffffff58
    bbc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    bbc8:	ldr	r0, [fp, #-160]	; 0xffffff60
    bbcc:	bl	f54 <flatcc_json_parser_match_symbol>
    bbd0:	str	r0, [fp, #-164]	; 0xffffff5c
    bbd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bbd8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bbdc:	cmp	r2, r3
    bbe0:	beq	bc28 <MyGame_Example_Monster_parse_json_table+0x12e8>
    bbe4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    bbe8:	movw	r3, #0
    bbec:	movt	r3, #0
    bbf0:	str	r3, [sp, #12]
    bbf4:	movw	r3, #0
    bbf8:	movt	r3, #0
    bbfc:	str	r3, [sp, #8]
    bc00:	str	r2, [sp, #4]
    bc04:	mov	r3, #8
    bc08:	str	r3, [sp]
    bc0c:	mov	r3, #0
    bc10:	ldr	r2, [fp, #-168]	; 0xffffff58
    bc14:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bc18:	ldr	r0, [fp, #-160]	; 0xffffff60
    bc1c:	bl	0 <flatcc_json_parser_union_type>
    bc20:	str	r0, [fp, #-164]	; 0xffffff5c
    bc24:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    bc28:	ldr	r2, [fp, #-168]	; 0xffffff58
    bc2c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bc30:	ldr	r0, [fp, #-160]	; 0xffffff60
    bc34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc38:	str	r0, [fp, #-164]	; 0xffffff5c
    bc3c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    bc40:	ldr	r2, [fp, #-168]	; 0xffffff58
    bc44:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bc48:	ldr	r0, [fp, #-160]	; 0xffffff60
    bc4c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc50:	str	r0, [fp, #-164]	; 0xffffff5c
    bc54:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    bc58:	ldr	r2, [fp, #-168]	; 0xffffff58
    bc5c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bc60:	ldr	r0, [fp, #-160]	; 0xffffff60
    bc64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bc68:	str	r0, [fp, #-164]	; 0xffffff5c
    bc6c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    bc70:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bc74:	add	r3, pc, #548	; 0x224
    bc78:	ldrd	r2, [r3]
    bc7c:	cmp	r1, r3
    bc80:	cmpeq	r0, r2
    bc84:	bhi	ccfc <MyGame_Example_Monster_parse_json_table+0x23bc>
    bc88:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bc8c:	add	r3, pc, #532	; 0x214
    bc90:	ldrd	r2, [r3]
    bc94:	cmp	r1, r3
    bc98:	cmpeq	r0, r2
    bc9c:	bne	c5e8 <MyGame_Example_Monster_parse_json_table+0x1ca8>
    bca0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bca4:	add	r3, r3, #8
    bca8:	str	r3, [fp, #-164]	; 0xffffff5c
    bcac:	ldr	r1, [fp, #-168]	; 0xffffff58
    bcb0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    bcb4:	bl	940 <flatcc_json_parser_symbol_part>
    bcb8:	strd	r0, [fp, #-36]	; 0xffffffdc
    bcbc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bcc0:	add	r3, pc, #488	; 0x1e8
    bcc4:	ldrd	r2, [r3]
    bcc8:	cmp	r1, r3
    bccc:	cmpeq	r0, r2
    bcd0:	bhi	c0b8 <MyGame_Example_Monster_parse_json_table+0x1778>
    bcd4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bcd8:	add	r3, pc, #472	; 0x1d8
    bcdc:	ldrd	r2, [r3]
    bce0:	cmp	r1, r3
    bce4:	cmpeq	r0, r2
    bce8:	bne	be90 <MyGame_Example_Monster_parse_json_table+0x1550>
    bcec:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bcf0:	str	r3, [fp, #-40]	; 0xffffffd8
    bcf4:	mov	r3, #8
    bcf8:	ldr	r2, [fp, #-168]	; 0xffffff58
    bcfc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    bd00:	ldr	r0, [fp, #-160]	; 0xffffff60
    bd04:	bl	f54 <flatcc_json_parser_match_symbol>
    bd08:	str	r0, [fp, #-164]	; 0xffffff5c
    bd0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bd10:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bd14:	cmp	r2, r3
    bd18:	beq	bed8 <MyGame_Example_Monster_parse_json_table+0x1598>
    bd1c:	ldr	r3, [fp, #-160]	; 0xffffff60
    bd20:	ldr	r0, [r3]
    bd24:	mvn	r3, #0
    bd28:	mov	r2, #1
    bd2c:	mov	r1, #1
    bd30:	bl	0 <flatcc_builder_start_vector>
    bd34:	mov	r3, r0
    bd38:	cmp	r3, #0
    bd3c:	bne	e404 <MyGame_Example_Monster_parse_json_table+0x3ac4>
    bd40:	sub	r3, fp, #52	; 0x34
    bd44:	ldr	r2, [fp, #-168]	; 0xffffff58
    bd48:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bd4c:	ldr	r0, [fp, #-160]	; 0xffffff60
    bd50:	bl	cec <flatcc_json_parser_array_start>
    bd54:	str	r0, [fp, #-164]	; 0xffffff5c
    bd58:	b	be2c <MyGame_Example_Monster_parse_json_table+0x14ec>
    bd5c:	mov	r3, #0
    bd60:	strb	r3, [fp, #-69]	; 0xffffffbb
    bd64:	ldr	r3, [fp, #-160]	; 0xffffff60
    bd68:	ldr	r3, [r3]
    bd6c:	mov	r1, #1
    bd70:	mov	r0, r3
    bd74:	bl	0 <flatcc_builder_extend_vector>
    bd78:	str	r0, [fp, #-48]	; 0xffffffd0
    bd7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    bd80:	cmp	r3, #0
    bd84:	beq	e40c <MyGame_Example_Monster_parse_json_table+0x3acc>
    bd88:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bd8c:	str	r3, [fp, #-40]	; 0xffffffd8
    bd90:	sub	r3, fp, #69	; 0x45
    bd94:	ldr	r2, [fp, #-168]	; 0xffffff58
    bd98:	ldr	r1, [fp, #-40]	; 0xffffffd8
    bd9c:	ldr	r0, [fp, #-160]	; 0xffffff60
    bda0:	bl	1ef0 <flatcc_json_parser_bool>
    bda4:	str	r0, [fp, #-164]	; 0xffffff5c
    bda8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bdac:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bdb0:	cmp	r2, r3
    bdb4:	bne	be04 <MyGame_Example_Monster_parse_json_table+0x14c4>
    bdb8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bdbc:	str	r3, [fp, #-40]	; 0xffffffd8
    bdc0:	sub	r3, fp, #69	; 0x45
    bdc4:	str	r3, [sp]
    bdc8:	movw	r3, #0
    bdcc:	movt	r3, #0
    bdd0:	ldr	r2, [fp, #-168]	; 0xffffff58
    bdd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    bdd8:	ldr	r0, [fp, #-160]	; 0xffffff60
    bddc:	bl	2f50 <flatcc_json_parser_symbolic_bool>
    bde0:	str	r0, [fp, #-164]	; 0xffffff5c
    bde4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    bde8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    bdec:	cmp	r2, r3
    bdf0:	beq	e414 <MyGame_Example_Monster_parse_json_table+0x3ad4>
    bdf4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    bdf8:	ldr	r3, [fp, #-168]	; 0xffffff58
    bdfc:	cmp	r2, r3
    be00:	beq	e414 <MyGame_Example_Monster_parse_json_table+0x3ad4>
    be04:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    be08:	mov	r1, r3
    be0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    be10:	bl	488 <flatbuffers_bool_write_to_pe>
    be14:	sub	r3, fp, #52	; 0x34
    be18:	ldr	r2, [fp, #-168]	; 0xffffff58
    be1c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    be20:	ldr	r0, [fp, #-160]	; 0xffffff60
    be24:	bl	de0 <flatcc_json_parser_array_end>
    be28:	str	r0, [fp, #-164]	; 0xffffff5c
    be2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    be30:	cmp	r3, #0
    be34:	bne	bd5c <MyGame_Example_Monster_parse_json_table+0x141c>
    be38:	ldr	r3, [fp, #-160]	; 0xffffff60
    be3c:	ldr	r3, [r3]
    be40:	mov	r0, r3
    be44:	bl	0 <flatcc_builder_end_vector>
    be48:	mov	r3, r0
    be4c:	str	r3, [fp, #-56]	; 0xffffffc8
    be50:	ldr	r3, [fp, #-56]	; 0xffffffc8
    be54:	cmp	r3, #0
    be58:	beq	e41c <MyGame_Example_Monster_parse_json_table+0x3adc>
    be5c:	ldr	r3, [fp, #-160]	; 0xffffff60
    be60:	ldr	r3, [r3]
    be64:	mov	r1, #24
    be68:	mov	r0, r3
    be6c:	bl	0 <flatcc_builder_table_add_offset>
    be70:	str	r0, [fp, #-44]	; 0xffffffd4
    be74:	ldr	r3, [fp, #-44]	; 0xffffffd4
    be78:	cmp	r3, #0
    be7c:	beq	e41c <MyGame_Example_Monster_parse_json_table+0x3adc>
    be80:	ldr	r2, [fp, #-56]	; 0xffffffc8
    be84:	ldr	r3, [fp, #-44]	; 0xffffffd4
    be88:	str	r2, [r3]
    be8c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    be90:	nop	{0}
    be94:	b	bedc <MyGame_Example_Monster_parse_json_table+0x159c>
    be98:	.word	0x5f747970
    be9c:	.word	0x74657374
    bea0:	.word	0x6632ffff
    bea4:	.word	0x74657374
    bea8:	.word	0x61727261
    beac:	.word	0x74657374
    beb0:	.word	0x7472696d
    beb4:	.word	0x796f6673
    beb8:	.word	0x6f6f6c73
    bebc:	.word	0x796f6662
    bec0:	.word	0x6f727465
    bec4:	.word	0x796f6673
    bec8:	.word	0x75637400
    becc:	.word	0x64737472
    bed0:	.word	0x7472696e
    bed4:	.word	0x796f6673
    bed8:	nop	{0}
    bedc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bee0:	sub	r3, pc, #40	; 0x28
    bee4:	ldrd	r2, [r3]
    bee8:	cmp	r1, r3
    beec:	cmpeq	r0, r2
    bef0:	bne	c0a0 <MyGame_Example_Monster_parse_json_table+0x1760>
    bef4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bef8:	add	r3, r3, #8
    befc:	str	r3, [fp, #-164]	; 0xffffff5c
    bf00:	ldr	r1, [fp, #-168]	; 0xffffff58
    bf04:	ldr	r0, [fp, #-164]	; 0xffffff5c
    bf08:	bl	940 <flatcc_json_parser_symbol_part>
    bf0c:	strd	r0, [fp, #-36]	; 0xffffffdc
    bf10:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    bf14:	mvn	r2, #255	; 0xff
    bf18:	mvn	r3, #0
    bf1c:	and	ip, r0, r2
    bf20:	str	ip, [fp, #-268]	; 0xfffffef4
    bf24:	and	r3, r1, r3
    bf28:	str	r3, [fp, #-264]	; 0xfffffef8
    bf2c:	sub	r3, pc, #108	; 0x6c
    bf30:	ldrd	r2, [r3]
    bf34:	sub	r1, fp, #268	; 0x10c
    bf38:	ldrd	r0, [r1]
    bf3c:	cmp	r1, r3
    bf40:	cmpeq	r0, r2
    bf44:	bne	c088 <MyGame_Example_Monster_parse_json_table+0x1748>
    bf48:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bf4c:	str	r3, [fp, #-40]	; 0xffffffd8
    bf50:	mov	r3, #7
    bf54:	ldr	r2, [fp, #-168]	; 0xffffff58
    bf58:	ldr	r1, [fp, #-40]	; 0xffffffd8
    bf5c:	ldr	r0, [fp, #-160]	; 0xffffff60
    bf60:	bl	f54 <flatcc_json_parser_match_symbol>
    bf64:	str	r0, [fp, #-164]	; 0xffffff5c
    bf68:	ldr	r2, [fp, #-40]	; 0xffffffd8
    bf6c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    bf70:	cmp	r2, r3
    bf74:	beq	c070 <MyGame_Example_Monster_parse_json_table+0x1730>
    bf78:	ldr	r3, [fp, #-160]	; 0xffffff60
    bf7c:	ldr	r0, [r3]
    bf80:	mvn	r3, #-536870912	; 0xe0000000
    bf84:	mov	r2, #4
    bf88:	mov	r1, #8
    bf8c:	bl	0 <flatcc_builder_start_vector>
    bf90:	mov	r3, r0
    bf94:	cmp	r3, #0
    bf98:	bne	e424 <MyGame_Example_Monster_parse_json_table+0x3ae4>
    bf9c:	sub	r3, fp, #52	; 0x34
    bfa0:	ldr	r2, [fp, #-168]	; 0xffffff58
    bfa4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bfa8:	ldr	r0, [fp, #-160]	; 0xffffff60
    bfac:	bl	cec <flatcc_json_parser_array_start>
    bfb0:	str	r0, [fp, #-164]	; 0xffffff5c
    bfb4:	b	c00c <MyGame_Example_Monster_parse_json_table+0x16cc>
    bfb8:	ldr	r3, [fp, #-160]	; 0xffffff60
    bfbc:	ldr	r3, [r3]
    bfc0:	mov	r1, #1
    bfc4:	mov	r0, r3
    bfc8:	bl	0 <flatcc_builder_extend_vector>
    bfcc:	str	r0, [fp, #-48]	; 0xffffffd0
    bfd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    bfd4:	cmp	r3, #0
    bfd8:	beq	e42c <MyGame_Example_Monster_parse_json_table+0x3aec>
    bfdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    bfe0:	ldr	r2, [fp, #-168]	; 0xffffff58
    bfe4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    bfe8:	ldr	r0, [fp, #-160]	; 0xffffff60
    bfec:	bl	7c28 <MyGame_Example_Ability_parse_json_struct_inline>
    bff0:	str	r0, [fp, #-164]	; 0xffffff5c
    bff4:	sub	r3, fp, #52	; 0x34
    bff8:	ldr	r2, [fp, #-168]	; 0xffffff58
    bffc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c000:	ldr	r0, [fp, #-160]	; 0xffffff60
    c004:	bl	de0 <flatcc_json_parser_array_end>
    c008:	str	r0, [fp, #-164]	; 0xffffff5c
    c00c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c010:	cmp	r3, #0
    c014:	bne	bfb8 <MyGame_Example_Monster_parse_json_table+0x1678>
    c018:	ldr	r3, [fp, #-160]	; 0xffffff60
    c01c:	ldr	r3, [r3]
    c020:	mov	r0, r3
    c024:	bl	0 <flatcc_builder_end_vector>
    c028:	mov	r3, r0
    c02c:	str	r3, [fp, #-56]	; 0xffffffc8
    c030:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c034:	cmp	r3, #0
    c038:	beq	e434 <MyGame_Example_Monster_parse_json_table+0x3af4>
    c03c:	ldr	r3, [fp, #-160]	; 0xffffff60
    c040:	ldr	r3, [r3]
    c044:	mov	r1, #29
    c048:	mov	r0, r3
    c04c:	bl	0 <flatcc_builder_table_add_offset>
    c050:	str	r0, [fp, #-44]	; 0xffffffd4
    c054:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c058:	cmp	r3, #0
    c05c:	beq	e434 <MyGame_Example_Monster_parse_json_table+0x3af4>
    c060:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c064:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c068:	str	r2, [r3]
    c06c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c070:	ldr	r2, [fp, #-168]	; 0xffffff58
    c074:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c078:	ldr	r0, [fp, #-160]	; 0xffffff60
    c07c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c080:	str	r0, [fp, #-164]	; 0xffffff5c
    c084:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c088:	ldr	r2, [fp, #-168]	; 0xffffff58
    c08c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c090:	ldr	r0, [fp, #-160]	; 0xffffff60
    c094:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c098:	str	r0, [fp, #-164]	; 0xffffff5c
    c09c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c0a0:	ldr	r2, [fp, #-168]	; 0xffffff58
    c0a4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c0a8:	ldr	r0, [fp, #-160]	; 0xffffff60
    c0ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c0b0:	str	r0, [fp, #-164]	; 0xffffff5c
    c0b4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c0b8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c0bc:	sub	r3, pc, #500	; 0x1f4
    c0c0:	ldrd	r2, [r3]
    c0c4:	cmp	r1, r3
    c0c8:	cmpeq	r0, r2
    c0cc:	bne	c404 <MyGame_Example_Monster_parse_json_table+0x1ac4>
    c0d0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c0d4:	add	r3, r3, #8
    c0d8:	str	r3, [fp, #-164]	; 0xffffff5c
    c0dc:	ldr	r1, [fp, #-168]	; 0xffffff58
    c0e0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    c0e4:	bl	940 <flatcc_json_parser_symbol_part>
    c0e8:	strd	r0, [fp, #-36]	; 0xffffffdc
    c0ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c0f0:	mov	r2, #0
    c0f4:	mov	r3, #0
    c0f8:	movt	r3, #65535	; 0xffff
    c0fc:	and	ip, r0, r2
    c100:	str	ip, [fp, #-276]	; 0xfffffeec
    c104:	and	r3, r1, r3
    c108:	str	r3, [fp, #-272]	; 0xfffffef0
    c10c:	mov	r2, #0
    c110:	mov	r3, #0
    c114:	movt	r3, #26418	; 0x6732
    c118:	sub	r1, fp, #276	; 0x114
    c11c:	ldrd	r0, [r1]
    c120:	cmp	r1, r3
    c124:	cmpeq	r0, r2
    c128:	bne	c27c <MyGame_Example_Monster_parse_json_table+0x193c>
    c12c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c130:	str	r3, [fp, #-40]	; 0xffffffd8
    c134:	mov	r3, #2
    c138:	ldr	r2, [fp, #-168]	; 0xffffff58
    c13c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c140:	ldr	r0, [fp, #-160]	; 0xffffff60
    c144:	bl	f54 <flatcc_json_parser_match_symbol>
    c148:	str	r0, [fp, #-164]	; 0xffffff5c
    c14c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c150:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c154:	cmp	r2, r3
    c158:	beq	c264 <MyGame_Example_Monster_parse_json_table+0x1924>
    c15c:	ldr	r3, [fp, #-160]	; 0xffffff60
    c160:	ldr	r3, [r3]
    c164:	mov	r0, r3
    c168:	bl	0 <flatcc_builder_start_offset_vector>
    c16c:	mov	r3, r0
    c170:	cmp	r3, #0
    c174:	bne	e43c <MyGame_Example_Monster_parse_json_table+0x3afc>
    c178:	sub	r3, fp, #52	; 0x34
    c17c:	ldr	r2, [fp, #-168]	; 0xffffff58
    c180:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c184:	ldr	r0, [fp, #-160]	; 0xffffff60
    c188:	bl	cec <flatcc_json_parser_array_start>
    c18c:	str	r0, [fp, #-164]	; 0xffffff5c
    c190:	b	c200 <MyGame_Example_Monster_parse_json_table+0x18c0>
    c194:	sub	r3, fp, #56	; 0x38
    c198:	ldr	r2, [fp, #-168]	; 0xffffff58
    c19c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c1a0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c1a4:	bl	0 <flatcc_json_parser_build_string>
    c1a8:	str	r0, [fp, #-164]	; 0xffffff5c
    c1ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c1b0:	cmp	r3, #0
    c1b4:	beq	e444 <MyGame_Example_Monster_parse_json_table+0x3b04>
    c1b8:	ldr	r3, [fp, #-160]	; 0xffffff60
    c1bc:	ldr	r3, [r3]
    c1c0:	mov	r1, #1
    c1c4:	mov	r0, r3
    c1c8:	bl	0 <flatcc_builder_extend_offset_vector>
    c1cc:	str	r0, [fp, #-44]	; 0xffffffd4
    c1d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c1d4:	cmp	r3, #0
    c1d8:	beq	e444 <MyGame_Example_Monster_parse_json_table+0x3b04>
    c1dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c1e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c1e4:	str	r2, [r3]
    c1e8:	sub	r3, fp, #52	; 0x34
    c1ec:	ldr	r2, [fp, #-168]	; 0xffffff58
    c1f0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c1f4:	ldr	r0, [fp, #-160]	; 0xffffff60
    c1f8:	bl	de0 <flatcc_json_parser_array_end>
    c1fc:	str	r0, [fp, #-164]	; 0xffffff5c
    c200:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c204:	cmp	r3, #0
    c208:	bne	c194 <MyGame_Example_Monster_parse_json_table+0x1854>
    c20c:	ldr	r3, [fp, #-160]	; 0xffffff60
    c210:	ldr	r3, [r3]
    c214:	mov	r0, r3
    c218:	bl	0 <flatcc_builder_end_offset_vector>
    c21c:	mov	r3, r0
    c220:	str	r3, [fp, #-56]	; 0xffffffc8
    c224:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c228:	cmp	r3, #0
    c22c:	beq	e44c <MyGame_Example_Monster_parse_json_table+0x3b0c>
    c230:	ldr	r3, [fp, #-160]	; 0xffffff60
    c234:	ldr	r3, [r3]
    c238:	mov	r1, #28
    c23c:	mov	r0, r3
    c240:	bl	0 <flatcc_builder_table_add_offset>
    c244:	str	r0, [fp, #-44]	; 0xffffffd4
    c248:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c24c:	cmp	r3, #0
    c250:	beq	e44c <MyGame_Example_Monster_parse_json_table+0x3b0c>
    c254:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c258:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c25c:	str	r2, [r3]
    c260:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c264:	ldr	r2, [fp, #-168]	; 0xffffff58
    c268:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c26c:	ldr	r0, [fp, #-160]	; 0xffffff60
    c270:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c274:	str	r0, [fp, #-164]	; 0xffffff5c
    c278:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c27c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c280:	mov	r2, #0
    c284:	mov	r3, #-16777216	; 0xff000000
    c288:	and	r8, r0, r2
    c28c:	and	r9, r1, r3
    c290:	cmp	r9, #1728053248	; 0x67000000
    c294:	cmpeq	r8, #0
    c298:	bne	c3ec <MyGame_Example_Monster_parse_json_table+0x1aac>
    c29c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c2a0:	str	r3, [fp, #-40]	; 0xffffffd8
    c2a4:	mov	r3, #1
    c2a8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c2ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c2b0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c2b4:	bl	f54 <flatcc_json_parser_match_symbol>
    c2b8:	str	r0, [fp, #-164]	; 0xffffff5c
    c2bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c2c0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c2c4:	cmp	r2, r3
    c2c8:	beq	c3d4 <MyGame_Example_Monster_parse_json_table+0x1a94>
    c2cc:	ldr	r3, [fp, #-160]	; 0xffffff60
    c2d0:	ldr	r3, [r3]
    c2d4:	mov	r0, r3
    c2d8:	bl	0 <flatcc_builder_start_offset_vector>
    c2dc:	mov	r3, r0
    c2e0:	cmp	r3, #0
    c2e4:	bne	e454 <MyGame_Example_Monster_parse_json_table+0x3b14>
    c2e8:	sub	r3, fp, #52	; 0x34
    c2ec:	ldr	r2, [fp, #-168]	; 0xffffff58
    c2f0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c2f4:	ldr	r0, [fp, #-160]	; 0xffffff60
    c2f8:	bl	cec <flatcc_json_parser_array_start>
    c2fc:	str	r0, [fp, #-164]	; 0xffffff5c
    c300:	b	c370 <MyGame_Example_Monster_parse_json_table+0x1a30>
    c304:	sub	r3, fp, #56	; 0x38
    c308:	ldr	r2, [fp, #-168]	; 0xffffff58
    c30c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c310:	ldr	r0, [fp, #-160]	; 0xffffff60
    c314:	bl	0 <flatcc_json_parser_build_string>
    c318:	str	r0, [fp, #-164]	; 0xffffff5c
    c31c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c320:	cmp	r3, #0
    c324:	beq	e45c <MyGame_Example_Monster_parse_json_table+0x3b1c>
    c328:	ldr	r3, [fp, #-160]	; 0xffffff60
    c32c:	ldr	r3, [r3]
    c330:	mov	r1, #1
    c334:	mov	r0, r3
    c338:	bl	0 <flatcc_builder_extend_offset_vector>
    c33c:	str	r0, [fp, #-44]	; 0xffffffd4
    c340:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c344:	cmp	r3, #0
    c348:	beq	e45c <MyGame_Example_Monster_parse_json_table+0x3b1c>
    c34c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c350:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c354:	str	r2, [r3]
    c358:	sub	r3, fp, #52	; 0x34
    c35c:	ldr	r2, [fp, #-168]	; 0xffffff58
    c360:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c364:	ldr	r0, [fp, #-160]	; 0xffffff60
    c368:	bl	de0 <flatcc_json_parser_array_end>
    c36c:	str	r0, [fp, #-164]	; 0xffffff5c
    c370:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c374:	cmp	r3, #0
    c378:	bne	c304 <MyGame_Example_Monster_parse_json_table+0x19c4>
    c37c:	ldr	r3, [fp, #-160]	; 0xffffff60
    c380:	ldr	r3, [r3]
    c384:	mov	r0, r3
    c388:	bl	0 <flatcc_builder_end_offset_vector>
    c38c:	mov	r3, r0
    c390:	str	r3, [fp, #-56]	; 0xffffffc8
    c394:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c398:	cmp	r3, #0
    c39c:	beq	e470 <MyGame_Example_Monster_parse_json_table+0x3b30>
    c3a0:	ldr	r3, [fp, #-160]	; 0xffffff60
    c3a4:	ldr	r3, [r3]
    c3a8:	mov	r1, #10
    c3ac:	mov	r0, r3
    c3b0:	bl	0 <flatcc_builder_table_add_offset>
    c3b4:	str	r0, [fp, #-44]	; 0xffffffd4
    c3b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c3bc:	cmp	r3, #0
    c3c0:	beq	e470 <MyGame_Example_Monster_parse_json_table+0x3b30>
    c3c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c3c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c3cc:	str	r2, [r3]
    c3d0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c3d4:	ldr	r2, [fp, #-168]	; 0xffffff58
    c3d8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c3dc:	ldr	r0, [fp, #-160]	; 0xffffff60
    c3e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c3e4:	str	r0, [fp, #-164]	; 0xffffff5c
    c3e8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c3ec:	ldr	r2, [fp, #-168]	; 0xffffff58
    c3f0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c3f4:	ldr	r0, [fp, #-160]	; 0xffffff60
    c3f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c3fc:	str	r0, [fp, #-164]	; 0xffffff5c
    c400:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c404:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c408:	add	r3, pc, #800	; 0x320
    c40c:	ldrd	r2, [r3]
    c410:	cmp	r1, r3
    c414:	cmpeq	r0, r2
    c418:	bne	c5d0 <MyGame_Example_Monster_parse_json_table+0x1c90>
    c41c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c420:	add	r3, r3, #8
    c424:	str	r3, [fp, #-164]	; 0xffffff5c
    c428:	ldr	r1, [fp, #-168]	; 0xffffff58
    c42c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    c430:	bl	940 <flatcc_json_parser_symbol_part>
    c434:	strd	r0, [fp, #-36]	; 0xffffffdc
    c438:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c43c:	mov	r2, #0
    c440:	mov	r3, #-16777216	; 0xff000000
    c444:	and	ip, r0, r2
    c448:	str	ip, [fp, #-284]	; 0xfffffee4
    c44c:	and	r3, r1, r3
    c450:	str	r3, [fp, #-280]	; 0xfffffee8
    c454:	sub	r3, fp, #284	; 0x11c
    c458:	ldrd	r2, [r3]
    c45c:	cmp	r3, #1929379840	; 0x73000000
    c460:	cmpeq	r2, #0
    c464:	bne	c5b8 <MyGame_Example_Monster_parse_json_table+0x1c78>
    c468:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c46c:	str	r3, [fp, #-40]	; 0xffffffd8
    c470:	mov	r3, #1
    c474:	ldr	r2, [fp, #-168]	; 0xffffff58
    c478:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c47c:	ldr	r0, [fp, #-160]	; 0xffffff60
    c480:	bl	f54 <flatcc_json_parser_match_symbol>
    c484:	str	r0, [fp, #-164]	; 0xffffff5c
    c488:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c48c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c490:	cmp	r2, r3
    c494:	beq	c5a0 <MyGame_Example_Monster_parse_json_table+0x1c60>
    c498:	ldr	r3, [fp, #-160]	; 0xffffff60
    c49c:	ldr	r3, [r3]
    c4a0:	mov	r0, r3
    c4a4:	bl	0 <flatcc_builder_start_offset_vector>
    c4a8:	mov	r3, r0
    c4ac:	cmp	r3, #0
    c4b0:	bne	e478 <MyGame_Example_Monster_parse_json_table+0x3b38>
    c4b4:	sub	r3, fp, #52	; 0x34
    c4b8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c4bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c4c0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c4c4:	bl	cec <flatcc_json_parser_array_start>
    c4c8:	str	r0, [fp, #-164]	; 0xffffff5c
    c4cc:	b	c53c <MyGame_Example_Monster_parse_json_table+0x1bfc>
    c4d0:	sub	r3, fp, #56	; 0x38
    c4d4:	ldr	r2, [fp, #-168]	; 0xffffff58
    c4d8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c4dc:	ldr	r0, [fp, #-160]	; 0xffffff60
    c4e0:	bl	a940 <MyGame_Example_Monster_parse_json_table>
    c4e4:	str	r0, [fp, #-164]	; 0xffffff5c
    c4e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c4ec:	cmp	r3, #0
    c4f0:	beq	e480 <MyGame_Example_Monster_parse_json_table+0x3b40>
    c4f4:	ldr	r3, [fp, #-160]	; 0xffffff60
    c4f8:	ldr	r3, [r3]
    c4fc:	mov	r1, #1
    c500:	mov	r0, r3
    c504:	bl	0 <flatcc_builder_extend_offset_vector>
    c508:	str	r0, [fp, #-44]	; 0xffffffd4
    c50c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c510:	cmp	r3, #0
    c514:	beq	e480 <MyGame_Example_Monster_parse_json_table+0x3b40>
    c518:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c51c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c520:	str	r2, [r3]
    c524:	sub	r3, fp, #52	; 0x34
    c528:	ldr	r2, [fp, #-168]	; 0xffffff58
    c52c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c530:	ldr	r0, [fp, #-160]	; 0xffffff60
    c534:	bl	de0 <flatcc_json_parser_array_end>
    c538:	str	r0, [fp, #-164]	; 0xffffff5c
    c53c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c540:	cmp	r3, #0
    c544:	bne	c4d0 <MyGame_Example_Monster_parse_json_table+0x1b90>
    c548:	ldr	r3, [fp, #-160]	; 0xffffff60
    c54c:	ldr	r3, [r3]
    c550:	mov	r0, r3
    c554:	bl	0 <flatcc_builder_end_offset_vector>
    c558:	mov	r3, r0
    c55c:	str	r3, [fp, #-56]	; 0xffffffc8
    c560:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c564:	cmp	r3, #0
    c568:	beq	e488 <MyGame_Example_Monster_parse_json_table+0x3b48>
    c56c:	ldr	r3, [fp, #-160]	; 0xffffff60
    c570:	ldr	r3, [r3]
    c574:	mov	r1, #11
    c578:	mov	r0, r3
    c57c:	bl	0 <flatcc_builder_table_add_offset>
    c580:	str	r0, [fp, #-44]	; 0xffffffd4
    c584:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c588:	cmp	r3, #0
    c58c:	beq	e488 <MyGame_Example_Monster_parse_json_table+0x3b48>
    c590:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c594:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c598:	str	r2, [r3]
    c59c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c5a0:	ldr	r2, [fp, #-168]	; 0xffffff58
    c5a4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c5a8:	ldr	r0, [fp, #-160]	; 0xffffff60
    c5ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5b0:	str	r0, [fp, #-164]	; 0xffffff5c
    c5b4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c5b8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c5bc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c5c0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c5c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5c8:	str	r0, [fp, #-164]	; 0xffffff5c
    c5cc:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c5d0:	ldr	r2, [fp, #-168]	; 0xffffff58
    c5d4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c5d8:	ldr	r0, [fp, #-160]	; 0xffffff60
    c5dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5e0:	str	r0, [fp, #-164]	; 0xffffff5c
    c5e4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c5e8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c5ec:	add	r3, pc, #324	; 0x144
    c5f0:	ldrd	r2, [r3]
    c5f4:	cmp	r1, r3
    c5f8:	cmpeq	r0, r2
    c5fc:	bhi	c8c4 <MyGame_Example_Monster_parse_json_table+0x1f84>
    c600:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c604:	add	r3, pc, #308	; 0x134
    c608:	ldrd	r2, [r3]
    c60c:	cmp	r1, r3
    c610:	cmpeq	r0, r2
    c614:	bne	c76c <MyGame_Example_Monster_parse_json_table+0x1e2c>
    c618:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c61c:	add	r3, r3, #8
    c620:	str	r3, [fp, #-164]	; 0xffffff5c
    c624:	ldr	r1, [fp, #-168]	; 0xffffff58
    c628:	ldr	r0, [fp, #-164]	; 0xffffff5c
    c62c:	bl	940 <flatcc_json_parser_symbol_part>
    c630:	strd	r0, [fp, #-36]	; 0xffffffdc
    c634:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c638:	mov	r2, #0
    c63c:	mov	r3, #0
    c640:	movt	r3, #65535	; 0xffff
    c644:	and	ip, r0, r2
    c648:	str	ip, [fp, #-292]	; 0xfffffedc
    c64c:	and	r3, r1, r3
    c650:	str	r3, [fp, #-288]	; 0xfffffee0
    c654:	mov	r2, #0
    c658:	mov	r3, #0
    c65c:	movt	r3, #13876	; 0x3634
    c660:	sub	r1, fp, #292	; 0x124
    c664:	ldrd	r0, [r1]
    c668:	cmp	r1, r3
    c66c:	cmpeq	r0, r2
    c670:	bne	c714 <MyGame_Example_Monster_parse_json_table+0x1dd4>
    c674:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c678:	str	r3, [fp, #-40]	; 0xffffffd8
    c67c:	mov	r3, #2
    c680:	ldr	r2, [fp, #-168]	; 0xffffff58
    c684:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c688:	ldr	r0, [fp, #-160]	; 0xffffff60
    c68c:	bl	f54 <flatcc_json_parser_match_symbol>
    c690:	str	r0, [fp, #-164]	; 0xffffff5c
    c694:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c698:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c69c:	cmp	r2, r3
    c6a0:	beq	c6fc <MyGame_Example_Monster_parse_json_table+0x1dbc>
    c6a4:	sub	r3, fp, #56	; 0x38
    c6a8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c6ac:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c6b0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c6b4:	bl	a4f8 <MyGame_Example_TestBase64_parse_json_table>
    c6b8:	str	r0, [fp, #-164]	; 0xffffff5c
    c6bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c6c0:	cmp	r3, #0
    c6c4:	beq	e490 <MyGame_Example_Monster_parse_json_table+0x3b50>
    c6c8:	ldr	r3, [fp, #-160]	; 0xffffff60
    c6cc:	ldr	r3, [r3]
    c6d0:	mov	r1, #35	; 0x23
    c6d4:	mov	r0, r3
    c6d8:	bl	0 <flatcc_builder_table_add_offset>
    c6dc:	str	r0, [fp, #-44]	; 0xffffffd4
    c6e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c6e4:	cmp	r3, #0
    c6e8:	beq	e490 <MyGame_Example_Monster_parse_json_table+0x3b50>
    c6ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c6f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c6f4:	str	r2, [r3]
    c6f8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c6fc:	ldr	r2, [fp, #-168]	; 0xffffff58
    c700:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c704:	ldr	r0, [fp, #-160]	; 0xffffff60
    c708:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c70c:	str	r0, [fp, #-164]	; 0xffffff5c
    c710:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c714:	ldr	r2, [fp, #-168]	; 0xffffff58
    c718:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c71c:	ldr	r0, [fp, #-160]	; 0xffffff60
    c720:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c724:	str	r0, [fp, #-164]	; 0xffffff5c
    c728:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c72c:	nop	{0}
    c730:	.word	0x61626c65
    c734:	.word	0x796f6674
    c738:	.word	0x656d7073
    c73c:	.word	0x74657374
    c740:	.word	0x62617365
    c744:	.word	0x74657374
    c748:	.word	0x626f6f6c
    c74c:	.word	0x74657374
    c750:	.word	0x65ffffff
    c754:	.word	0x74657374
    c758:	.word	0x656d7074
    c75c:	.word	0x74657374
    c760:	.word	0x66320000
    c764:	.word	0x74657374
    c768:	.word	0x40400000
    c76c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c770:	sub	r3, pc, #48	; 0x30
    c774:	ldrd	r2, [r3]
    c778:	cmp	r1, r3
    c77c:	cmpeq	r0, r2
    c780:	bne	c8ac <MyGame_Example_Monster_parse_json_table+0x1f6c>
    c784:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c788:	str	r3, [fp, #-40]	; 0xffffffd8
    c78c:	mov	r3, #8
    c790:	ldr	r2, [fp, #-168]	; 0xffffff58
    c794:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c798:	ldr	r0, [fp, #-160]	; 0xffffff60
    c79c:	bl	f54 <flatcc_json_parser_match_symbol>
    c7a0:	str	r0, [fp, #-164]	; 0xffffff5c
    c7a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c7a8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c7ac:	cmp	r2, r3
    c7b0:	beq	c894 <MyGame_Example_Monster_parse_json_table+0x1f54>
    c7b4:	mov	r3, #0
    c7b8:	strb	r3, [fp, #-70]	; 0xffffffba
    c7bc:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c7c0:	str	r3, [fp, #-40]	; 0xffffffd8
    c7c4:	sub	r3, fp, #70	; 0x46
    c7c8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c7cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c7d0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c7d4:	bl	1ef0 <flatcc_json_parser_bool>
    c7d8:	str	r0, [fp, #-164]	; 0xffffff5c
    c7dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c7e0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c7e4:	cmp	r2, r3
    c7e8:	bne	c838 <MyGame_Example_Monster_parse_json_table+0x1ef8>
    c7ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c7f0:	str	r3, [fp, #-40]	; 0xffffffd8
    c7f4:	sub	r3, fp, #70	; 0x46
    c7f8:	str	r3, [sp]
    c7fc:	movw	r3, #0
    c800:	movt	r3, #0
    c804:	ldr	r2, [fp, #-168]	; 0xffffff58
    c808:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c80c:	ldr	r0, [fp, #-160]	; 0xffffff60
    c810:	bl	2f50 <flatcc_json_parser_symbolic_bool>
    c814:	str	r0, [fp, #-164]	; 0xffffff5c
    c818:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c81c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    c820:	cmp	r2, r3
    c824:	beq	e498 <MyGame_Example_Monster_parse_json_table+0x3b58>
    c828:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c82c:	ldr	r3, [fp, #-168]	; 0xffffff58
    c830:	cmp	r2, r3
    c834:	beq	e498 <MyGame_Example_Monster_parse_json_table+0x3b58>
    c838:	ldrb	r3, [fp, #-70]	; 0xffffffba
    c83c:	cmp	r3, #1
    c840:	bne	c858 <MyGame_Example_Monster_parse_json_table+0x1f18>
    c844:	ldr	r3, [fp, #-160]	; 0xffffff60
    c848:	ldr	r3, [r3, #8]
    c84c:	and	r3, r3, #2
    c850:	cmp	r3, #0
    c854:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c858:	ldr	r3, [fp, #-160]	; 0xffffff60
    c85c:	ldr	r0, [r3]
    c860:	mov	r3, #1
    c864:	mov	r2, #1
    c868:	mov	r1, #15
    c86c:	bl	0 <flatcc_builder_table_add>
    c870:	str	r0, [fp, #-48]	; 0xffffffd0
    c874:	ldr	r3, [fp, #-48]	; 0xffffffd0
    c878:	cmp	r3, #0
    c87c:	beq	e4a0 <MyGame_Example_Monster_parse_json_table+0x3b60>
    c880:	ldrb	r3, [fp, #-70]	; 0xffffffba
    c884:	mov	r1, r3
    c888:	ldr	r0, [fp, #-48]	; 0xffffffd0
    c88c:	bl	488 <flatbuffers_bool_write_to_pe>
    c890:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c894:	ldr	r2, [fp, #-168]	; 0xffffff58
    c898:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c89c:	ldr	r0, [fp, #-160]	; 0xffffff60
    c8a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c8a4:	str	r0, [fp, #-164]	; 0xffffff5c
    c8a8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c8ac:	ldr	r2, [fp, #-168]	; 0xffffff58
    c8b0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c8b4:	ldr	r0, [fp, #-160]	; 0xffffff60
    c8b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c8bc:	str	r0, [fp, #-164]	; 0xffffff5c
    c8c0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c8c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c8c8:	sub	r3, pc, #384	; 0x180
    c8cc:	ldrd	r2, [r3]
    c8d0:	cmp	r1, r3
    c8d4:	cmpeq	r0, r2
    c8d8:	bhi	ca10 <MyGame_Example_Monster_parse_json_table+0x20d0>
    c8dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c8e0:	sub	r3, pc, #400	; 0x190
    c8e4:	ldrd	r2, [r3]
    c8e8:	cmp	r1, r3
    c8ec:	cmpeq	r0, r2
    c8f0:	bne	c9f8 <MyGame_Example_Monster_parse_json_table+0x20b8>
    c8f4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c8f8:	add	r3, r3, #8
    c8fc:	str	r3, [fp, #-164]	; 0xffffff5c
    c900:	ldr	r1, [fp, #-168]	; 0xffffff58
    c904:	ldr	r0, [fp, #-164]	; 0xffffff5c
    c908:	bl	940 <flatcc_json_parser_symbol_part>
    c90c:	strd	r0, [fp, #-36]	; 0xffffffdc
    c910:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    c914:	mov	r2, #0
    c918:	mov	r3, #-16777216	; 0xff000000
    c91c:	and	ip, r0, r2
    c920:	str	ip, [fp, #-300]	; 0xfffffed4
    c924:	and	r3, r1, r3
    c928:	str	r3, [fp, #-296]	; 0xfffffed8
    c92c:	sub	r3, fp, #300	; 0x12c
    c930:	ldrd	r2, [r3]
    c934:	cmp	r3, #2030043136	; 0x79000000
    c938:	cmpeq	r2, #0
    c93c:	bne	c9e0 <MyGame_Example_Monster_parse_json_table+0x20a0>
    c940:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c944:	str	r3, [fp, #-40]	; 0xffffffd8
    c948:	mov	r3, #1
    c94c:	ldr	r2, [fp, #-168]	; 0xffffff58
    c950:	ldr	r1, [fp, #-40]	; 0xffffffd8
    c954:	ldr	r0, [fp, #-160]	; 0xffffff60
    c958:	bl	f54 <flatcc_json_parser_match_symbol>
    c95c:	str	r0, [fp, #-164]	; 0xffffff5c
    c960:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c964:	ldr	r3, [fp, #-164]	; 0xffffff5c
    c968:	cmp	r2, r3
    c96c:	beq	c9c8 <MyGame_Example_Monster_parse_json_table+0x2088>
    c970:	sub	r3, fp, #56	; 0x38
    c974:	ldr	r2, [fp, #-168]	; 0xffffff58
    c978:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c97c:	ldr	r0, [fp, #-160]	; 0xffffff60
    c980:	bl	8018 <MyGame_Example_Stat_parse_json_table>
    c984:	str	r0, [fp, #-164]	; 0xffffff5c
    c988:	ldr	r3, [fp, #-56]	; 0xffffffc8
    c98c:	cmp	r3, #0
    c990:	beq	e4a8 <MyGame_Example_Monster_parse_json_table+0x3b68>
    c994:	ldr	r3, [fp, #-160]	; 0xffffff60
    c998:	ldr	r3, [r3]
    c99c:	mov	r1, #14
    c9a0:	mov	r0, r3
    c9a4:	bl	0 <flatcc_builder_table_add_offset>
    c9a8:	str	r0, [fp, #-44]	; 0xffffffd4
    c9ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c9b0:	cmp	r3, #0
    c9b4:	beq	e4a8 <MyGame_Example_Monster_parse_json_table+0x3b68>
    c9b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
    c9bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    c9c0:	str	r2, [r3]
    c9c4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c9c8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c9cc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c9d0:	ldr	r0, [fp, #-160]	; 0xffffff60
    c9d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c9d8:	str	r0, [fp, #-164]	; 0xffffff5c
    c9dc:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c9e0:	ldr	r2, [fp, #-168]	; 0xffffff58
    c9e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    c9e8:	ldr	r0, [fp, #-160]	; 0xffffff60
    c9ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c9f0:	str	r0, [fp, #-164]	; 0xffffff5c
    c9f4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    c9f8:	ldr	r2, [fp, #-168]	; 0xffffff58
    c9fc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ca00:	ldr	r0, [fp, #-160]	; 0xffffff60
    ca04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ca08:	str	r0, [fp, #-164]	; 0xffffff5c
    ca0c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ca10:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ca14:	mov	r2, #0
    ca18:	movt	r2, #65535	; 0xffff
    ca1c:	mvn	r3, #0
    ca20:	and	ip, r0, r2
    ca24:	str	ip, [fp, #-308]	; 0xfffffecc
    ca28:	and	r3, r1, r3
    ca2c:	str	r3, [fp, #-304]	; 0xfffffed0
    ca30:	sub	r3, pc, #728	; 0x2d8
    ca34:	ldrd	r2, [r3]
    ca38:	sub	r1, fp, #308	; 0x134
    ca3c:	ldrd	r0, [r1]
    ca40:	cmp	r1, r3
    ca44:	cmpeq	r0, r2
    ca48:	bne	cb7c <MyGame_Example_Monster_parse_json_table+0x223c>
    ca4c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ca50:	str	r3, [fp, #-40]	; 0xffffffd8
    ca54:	mov	r3, #6
    ca58:	ldr	r2, [fp, #-168]	; 0xffffff58
    ca5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ca60:	ldr	r0, [fp, #-160]	; 0xffffff60
    ca64:	bl	f54 <flatcc_json_parser_match_symbol>
    ca68:	str	r0, [fp, #-164]	; 0xffffff5c
    ca6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ca70:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ca74:	cmp	r2, r3
    ca78:	beq	cb64 <MyGame_Example_Monster_parse_json_table+0x2224>
    ca7c:	mov	r3, #0
    ca80:	str	r3, [fp, #-76]	; 0xffffffb4
    ca84:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ca88:	str	r3, [fp, #-40]	; 0xffffffd8
    ca8c:	sub	r3, fp, #76	; 0x4c
    ca90:	ldr	r2, [fp, #-168]	; 0xffffff58
    ca94:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ca98:	ldr	r0, [fp, #-160]	; 0xffffff60
    ca9c:	bl	0 <flatcc_json_parser_float>
    caa0:	str	r0, [fp, #-164]	; 0xffffff5c
    caa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    caa8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    caac:	cmp	r2, r3
    cab0:	bne	cb00 <MyGame_Example_Monster_parse_json_table+0x21c0>
    cab4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cab8:	str	r3, [fp, #-40]	; 0xffffffd8
    cabc:	sub	r3, fp, #76	; 0x4c
    cac0:	str	r3, [sp]
    cac4:	movw	r3, #0
    cac8:	movt	r3, #0
    cacc:	ldr	r2, [fp, #-168]	; 0xffffff58
    cad0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cad4:	ldr	r0, [fp, #-160]	; 0xffffff60
    cad8:	bl	3134 <flatcc_json_parser_symbolic_float>
    cadc:	str	r0, [fp, #-164]	; 0xffffff5c
    cae0:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cae4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    cae8:	cmp	r2, r3
    caec:	beq	e4b0 <MyGame_Example_Monster_parse_json_table+0x3b70>
    caf0:	ldr	r2, [fp, #-164]	; 0xffffff5c
    caf4:	ldr	r3, [fp, #-168]	; 0xffffff58
    caf8:	cmp	r2, r3
    cafc:	beq	e4b0 <MyGame_Example_Monster_parse_json_table+0x3b70>
    cb00:	vldr	s15, [fp, #-76]	; 0xffffffb4
    cb04:	vldr	s14, [pc, #-932]	; c768 <MyGame_Example_Monster_parse_json_table+0x1e28>
    cb08:	vcmp.f32	s15, s14
    cb0c:	vmrs	APSR_nzcv, fpscr
    cb10:	bne	cb28 <MyGame_Example_Monster_parse_json_table+0x21e8>
    cb14:	ldr	r3, [fp, #-160]	; 0xffffff60
    cb18:	ldr	r3, [r3, #8]
    cb1c:	and	r3, r3, #2
    cb20:	cmp	r3, #0
    cb24:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cb28:	ldr	r3, [fp, #-160]	; 0xffffff60
    cb2c:	ldr	r0, [r3]
    cb30:	mov	r3, #4
    cb34:	mov	r2, #4
    cb38:	mov	r1, #26
    cb3c:	bl	0 <flatcc_builder_table_add>
    cb40:	str	r0, [fp, #-48]	; 0xffffffd0
    cb44:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cb48:	cmp	r3, #0
    cb4c:	beq	e4b8 <MyGame_Example_Monster_parse_json_table+0x3b78>
    cb50:	vldr	s15, [fp, #-76]	; 0xffffffb4
    cb54:	vmov.f32	s0, s15
    cb58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    cb5c:	bl	3a8 <flatbuffers_float_write_to_pe>
    cb60:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cb64:	ldr	r2, [fp, #-168]	; 0xffffff58
    cb68:	ldr	r1, [fp, #-164]	; 0xffffff5c
    cb6c:	ldr	r0, [fp, #-160]	; 0xffffff60
    cb70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    cb74:	str	r0, [fp, #-164]	; 0xffffff5c
    cb78:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cb7c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    cb80:	mov	r2, #-16777216	; 0xff000000
    cb84:	mvn	r3, #0
    cb88:	and	ip, r0, r2
    cb8c:	str	ip, [fp, #-316]	; 0xfffffec4
    cb90:	and	r3, r1, r3
    cb94:	str	r3, [fp, #-312]	; 0xfffffec8
    cb98:	add	r3, pc, #760	; 0x2f8
    cb9c:	ldrd	r2, [r3]
    cba0:	sub	r1, fp, #316	; 0x13c
    cba4:	ldrd	r0, [r1]
    cba8:	cmp	r1, r3
    cbac:	cmpeq	r0, r2
    cbb0:	bne	cce4 <MyGame_Example_Monster_parse_json_table+0x23a4>
    cbb4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cbb8:	str	r3, [fp, #-40]	; 0xffffffd8
    cbbc:	mov	r3, #5
    cbc0:	ldr	r2, [fp, #-168]	; 0xffffff58
    cbc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cbc8:	ldr	r0, [fp, #-160]	; 0xffffff60
    cbcc:	bl	f54 <flatcc_json_parser_match_symbol>
    cbd0:	str	r0, [fp, #-164]	; 0xffffff5c
    cbd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cbd8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cbdc:	cmp	r2, r3
    cbe0:	beq	cccc <MyGame_Example_Monster_parse_json_table+0x238c>
    cbe4:	mov	r3, #0
    cbe8:	str	r3, [fp, #-80]	; 0xffffffb0
    cbec:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cbf0:	str	r3, [fp, #-40]	; 0xffffffd8
    cbf4:	sub	r3, fp, #80	; 0x50
    cbf8:	ldr	r2, [fp, #-168]	; 0xffffff58
    cbfc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cc00:	ldr	r0, [fp, #-160]	; 0xffffff60
    cc04:	bl	0 <flatcc_json_parser_float>
    cc08:	str	r0, [fp, #-164]	; 0xffffff5c
    cc0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cc10:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cc14:	cmp	r2, r3
    cc18:	bne	cc68 <MyGame_Example_Monster_parse_json_table+0x2328>
    cc1c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cc20:	str	r3, [fp, #-40]	; 0xffffffd8
    cc24:	sub	r3, fp, #80	; 0x50
    cc28:	str	r3, [sp]
    cc2c:	movw	r3, #0
    cc30:	movt	r3, #0
    cc34:	ldr	r2, [fp, #-168]	; 0xffffff58
    cc38:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cc3c:	ldr	r0, [fp, #-160]	; 0xffffff60
    cc40:	bl	3134 <flatcc_json_parser_symbolic_float>
    cc44:	str	r0, [fp, #-164]	; 0xffffff5c
    cc48:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cc4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    cc50:	cmp	r2, r3
    cc54:	beq	e4c0 <MyGame_Example_Monster_parse_json_table+0x3b80>
    cc58:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cc5c:	ldr	r3, [fp, #-168]	; 0xffffff58
    cc60:	cmp	r2, r3
    cc64:	beq	e4c0 <MyGame_Example_Monster_parse_json_table+0x3b80>
    cc68:	vldr	s15, [fp, #-80]	; 0xffffffb0
    cc6c:	vldr	s14, [pc, #572]	; ceb0 <MyGame_Example_Monster_parse_json_table+0x2570>
    cc70:	vcmp.f32	s15, s14
    cc74:	vmrs	APSR_nzcv, fpscr
    cc78:	bne	cc90 <MyGame_Example_Monster_parse_json_table+0x2350>
    cc7c:	ldr	r3, [fp, #-160]	; 0xffffff60
    cc80:	ldr	r3, [r3, #8]
    cc84:	and	r3, r3, #2
    cc88:	cmp	r3, #0
    cc8c:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cc90:	ldr	r3, [fp, #-160]	; 0xffffff60
    cc94:	ldr	r0, [r3]
    cc98:	mov	r3, #4
    cc9c:	mov	r2, #4
    cca0:	mov	r1, #25
    cca4:	bl	0 <flatcc_builder_table_add>
    cca8:	str	r0, [fp, #-48]	; 0xffffffd0
    ccac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ccb0:	cmp	r3, #0
    ccb4:	beq	e4c8 <MyGame_Example_Monster_parse_json_table+0x3b88>
    ccb8:	vldr	s15, [fp, #-80]	; 0xffffffb0
    ccbc:	vmov.f32	s0, s15
    ccc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ccc4:	bl	3a8 <flatbuffers_float_write_to_pe>
    ccc8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cccc:	ldr	r2, [fp, #-168]	; 0xffffff58
    ccd0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ccd4:	ldr	r0, [fp, #-160]	; 0xffffff60
    ccd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ccdc:	str	r0, [fp, #-164]	; 0xffffff5c
    cce0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cce4:	ldr	r2, [fp, #-168]	; 0xffffff58
    cce8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ccec:	ldr	r0, [fp, #-160]	; 0xffffff60
    ccf0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ccf4:	str	r0, [fp, #-164]	; 0xffffff5c
    ccf8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ccfc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    cd00:	add	r3, pc, #408	; 0x198
    cd04:	ldrd	r2, [r3]
    cd08:	cmp	r1, r3
    cd0c:	cmpeq	r0, r2
    cd10:	bhi	ceb4 <MyGame_Example_Monster_parse_json_table+0x2574>
    cd14:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    cd18:	mov	r2, #0
    cd1c:	movt	r2, #65535	; 0xffff
    cd20:	mvn	r3, #0
    cd24:	and	ip, r0, r2
    cd28:	str	ip, [fp, #-324]	; 0xfffffebc
    cd2c:	and	r3, r1, r3
    cd30:	str	r3, [fp, #-320]	; 0xfffffec0
    cd34:	add	r3, pc, #364	; 0x16c
    cd38:	ldrd	r2, [r3]
    cd3c:	sub	r1, fp, #324	; 0x144
    cd40:	ldrd	r0, [r1]
    cd44:	cmp	r1, r3
    cd48:	cmpeq	r0, r2
    cd4c:	bne	ce7c <MyGame_Example_Monster_parse_json_table+0x253c>
    cd50:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cd54:	str	r3, [fp, #-40]	; 0xffffffd8
    cd58:	mov	r3, #6
    cd5c:	ldr	r2, [fp, #-168]	; 0xffffff58
    cd60:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cd64:	ldr	r0, [fp, #-160]	; 0xffffff60
    cd68:	bl	f54 <flatcc_json_parser_match_symbol>
    cd6c:	str	r0, [fp, #-164]	; 0xffffff5c
    cd70:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cd74:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cd78:	cmp	r2, r3
    cd7c:	beq	ce64 <MyGame_Example_Monster_parse_json_table+0x2524>
    cd80:	mov	r3, #0
    cd84:	str	r3, [fp, #-84]	; 0xffffffac
    cd88:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cd8c:	str	r3, [fp, #-40]	; 0xffffffd8
    cd90:	sub	r3, fp, #84	; 0x54
    cd94:	ldr	r2, [fp, #-168]	; 0xffffff58
    cd98:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cd9c:	ldr	r0, [fp, #-160]	; 0xffffff60
    cda0:	bl	0 <flatcc_json_parser_float>
    cda4:	str	r0, [fp, #-164]	; 0xffffff5c
    cda8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cdac:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cdb0:	cmp	r2, r3
    cdb4:	bne	ce04 <MyGame_Example_Monster_parse_json_table+0x24c4>
    cdb8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cdbc:	str	r3, [fp, #-40]	; 0xffffffd8
    cdc0:	sub	r3, fp, #84	; 0x54
    cdc4:	str	r3, [sp]
    cdc8:	movw	r3, #0
    cdcc:	movt	r3, #0
    cdd0:	ldr	r2, [fp, #-168]	; 0xffffff58
    cdd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cdd8:	ldr	r0, [fp, #-160]	; 0xffffff60
    cddc:	bl	3134 <flatcc_json_parser_symbolic_float>
    cde0:	str	r0, [fp, #-164]	; 0xffffff5c
    cde4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cde8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    cdec:	cmp	r2, r3
    cdf0:	beq	e4d0 <MyGame_Example_Monster_parse_json_table+0x3b90>
    cdf4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cdf8:	ldr	r3, [fp, #-168]	; 0xffffff58
    cdfc:	cmp	r2, r3
    ce00:	beq	e4d0 <MyGame_Example_Monster_parse_json_table+0x3b90>
    ce04:	vldr	s15, [fp, #-84]	; 0xffffffac
    ce08:	vcmp.f32	s15, #0.0
    ce0c:	vmrs	APSR_nzcv, fpscr
    ce10:	bne	ce28 <MyGame_Example_Monster_parse_json_table+0x24e8>
    ce14:	ldr	r3, [fp, #-160]	; 0xffffff60
    ce18:	ldr	r3, [r3, #8]
    ce1c:	and	r3, r3, #2
    ce20:	cmp	r3, #0
    ce24:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ce28:	ldr	r3, [fp, #-160]	; 0xffffff60
    ce2c:	ldr	r0, [r3]
    ce30:	mov	r3, #4
    ce34:	mov	r2, #4
    ce38:	mov	r1, #27
    ce3c:	bl	0 <flatcc_builder_table_add>
    ce40:	str	r0, [fp, #-48]	; 0xffffffd0
    ce44:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ce48:	cmp	r3, #0
    ce4c:	beq	e4d8 <MyGame_Example_Monster_parse_json_table+0x3b98>
    ce50:	vldr	s15, [fp, #-84]	; 0xffffffac
    ce54:	vmov.f32	s0, s15
    ce58:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ce5c:	bl	3a8 <flatbuffers_float_write_to_pe>
    ce60:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ce64:	ldr	r2, [fp, #-168]	; 0xffffff58
    ce68:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ce6c:	ldr	r0, [fp, #-160]	; 0xffffff60
    ce70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ce74:	str	r0, [fp, #-164]	; 0xffffff5c
    ce78:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ce7c:	ldr	r2, [fp, #-168]	; 0xffffff58
    ce80:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ce84:	ldr	r0, [fp, #-160]	; 0xffffff60
    ce88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ce8c:	str	r0, [fp, #-164]	; 0xffffff5c
    ce90:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ce94:	nop	{0}
    ce98:	.word	0x66000000
    ce9c:	.word	0x74657374
    cea0:	.word	0x68617367
    cea4:	.word	0x74657374
    cea8:	.word	0x66330000
    ceac:	.word	0x74657374
    ceb0:	.word	0x489965e0
    ceb4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ceb8:	add	r3, pc, #784	; 0x310
    cebc:	ldrd	r2, [r3]
    cec0:	cmp	r1, r3
    cec4:	cmpeq	r0, r2
    cec8:	bne	daa0 <MyGame_Example_Monster_parse_json_table+0x3160>
    cecc:	ldr	r3, [fp, #-164]	; 0xffffff5c
    ced0:	add	r3, r3, #8
    ced4:	str	r3, [fp, #-164]	; 0xffffff5c
    ced8:	ldr	r1, [fp, #-168]	; 0xffffff58
    cedc:	ldr	r0, [fp, #-164]	; 0xffffff5c
    cee0:	bl	940 <flatcc_json_parser_symbol_part>
    cee4:	strd	r0, [fp, #-36]	; 0xffffffdc
    cee8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ceec:	add	r3, pc, #740	; 0x2e4
    cef0:	ldrd	r2, [r3]
    cef4:	cmp	r1, r3
    cef8:	cmpeq	r0, r2
    cefc:	bhi	d200 <MyGame_Example_Monster_parse_json_table+0x28c0>
    cf00:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    cf04:	add	r3, pc, #724	; 0x2d4
    cf08:	ldrd	r2, [r3]
    cf0c:	cmp	r1, r3
    cf10:	cmpeq	r0, r2
    cf14:	bne	d1b4 <MyGame_Example_Monster_parse_json_table+0x2874>
    cf18:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cf1c:	str	r3, [fp, #-40]	; 0xffffffd8
    cf20:	mov	r3, #8
    cf24:	ldr	r2, [fp, #-168]	; 0xffffff58
    cf28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cf2c:	ldr	r0, [fp, #-160]	; 0xffffff60
    cf30:	bl	f54 <flatcc_json_parser_match_symbol>
    cf34:	str	r0, [fp, #-164]	; 0xffffff5c
    cf38:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cf3c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cf40:	cmp	r2, r3
    cf44:	beq	d028 <MyGame_Example_Monster_parse_json_table+0x26e8>
    cf48:	mov	r3, #0
    cf4c:	str	r3, [fp, #-88]	; 0xffffffa8
    cf50:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cf54:	str	r3, [fp, #-40]	; 0xffffffd8
    cf58:	sub	r3, fp, #88	; 0x58
    cf5c:	ldr	r2, [fp, #-168]	; 0xffffff58
    cf60:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cf64:	ldr	r0, [fp, #-160]	; 0xffffff60
    cf68:	bl	1c5c <flatcc_json_parser_int32>
    cf6c:	str	r0, [fp, #-164]	; 0xffffff5c
    cf70:	ldr	r2, [fp, #-40]	; 0xffffffd8
    cf74:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cf78:	cmp	r2, r3
    cf7c:	bne	cfcc <MyGame_Example_Monster_parse_json_table+0x268c>
    cf80:	ldr	r3, [fp, #-164]	; 0xffffff5c
    cf84:	str	r3, [fp, #-40]	; 0xffffffd8
    cf88:	sub	r3, fp, #88	; 0x58
    cf8c:	str	r3, [sp]
    cf90:	movw	r3, #0
    cf94:	movt	r3, #0
    cf98:	ldr	r2, [fp, #-168]	; 0xffffff58
    cf9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    cfa0:	ldr	r0, [fp, #-160]	; 0xffffff60
    cfa4:	bl	2990 <flatcc_json_parser_symbolic_int32>
    cfa8:	str	r0, [fp, #-164]	; 0xffffff5c
    cfac:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cfb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    cfb4:	cmp	r2, r3
    cfb8:	beq	e4e0 <MyGame_Example_Monster_parse_json_table+0x3ba0>
    cfbc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    cfc0:	ldr	r3, [fp, #-168]	; 0xffffff58
    cfc4:	cmp	r2, r3
    cfc8:	beq	e4e0 <MyGame_Example_Monster_parse_json_table+0x3ba0>
    cfcc:	ldr	r3, [fp, #-88]	; 0xffffffa8
    cfd0:	cmp	r3, #0
    cfd4:	bne	cfec <MyGame_Example_Monster_parse_json_table+0x26ac>
    cfd8:	ldr	r3, [fp, #-160]	; 0xffffff60
    cfdc:	ldr	r3, [r3, #8]
    cfe0:	and	r3, r3, #2
    cfe4:	cmp	r3, #0
    cfe8:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    cfec:	ldr	r3, [fp, #-160]	; 0xffffff60
    cff0:	ldr	r0, [r3]
    cff4:	mov	r3, #4
    cff8:	mov	r2, #4
    cffc:	mov	r1, #16
    d000:	bl	0 <flatcc_builder_table_add>
    d004:	str	r0, [fp, #-48]	; 0xffffffd0
    d008:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d00c:	cmp	r3, #0
    d010:	beq	e4e8 <MyGame_Example_Monster_parse_json_table+0x3ba8>
    d014:	ldr	r3, [fp, #-88]	; 0xffffffa8
    d018:	mov	r1, r3
    d01c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d020:	bl	2c4 <flatbuffers_int32_write_to_pe>
    d024:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d028:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d02c:	add	r3, r3, #8
    d030:	str	r3, [fp, #-164]	; 0xffffff5c
    d034:	ldr	r1, [fp, #-168]	; 0xffffff58
    d038:	ldr	r0, [fp, #-164]	; 0xffffff5c
    d03c:	bl	940 <flatcc_json_parser_symbol_part>
    d040:	strd	r0, [fp, #-36]	; 0xffffffdc
    d044:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d048:	mov	r2, #0
    d04c:	mov	r3, #-16777216	; 0xff000000
    d050:	and	ip, r0, r2
    d054:	str	ip, [fp, #-332]	; 0xfffffeb4
    d058:	and	r3, r1, r3
    d05c:	str	r3, [fp, #-328]	; 0xfffffeb8
    d060:	sub	r3, fp, #332	; 0x14c
    d064:	ldrd	r2, [r3]
    d068:	cmp	r3, #1627389952	; 0x61000000
    d06c:	cmpeq	r2, #0
    d070:	bne	d19c <MyGame_Example_Monster_parse_json_table+0x285c>
    d074:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d078:	str	r3, [fp, #-40]	; 0xffffffd8
    d07c:	mov	r3, #1
    d080:	ldr	r2, [fp, #-168]	; 0xffffff58
    d084:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d088:	ldr	r0, [fp, #-160]	; 0xffffff60
    d08c:	bl	f54 <flatcc_json_parser_match_symbol>
    d090:	str	r0, [fp, #-164]	; 0xffffff5c
    d094:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d098:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d09c:	cmp	r2, r3
    d0a0:	beq	d184 <MyGame_Example_Monster_parse_json_table+0x2844>
    d0a4:	mov	r3, #0
    d0a8:	str	r3, [fp, #-92]	; 0xffffffa4
    d0ac:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d0b0:	str	r3, [fp, #-40]	; 0xffffffd8
    d0b4:	sub	r3, fp, #92	; 0x5c
    d0b8:	ldr	r2, [fp, #-168]	; 0xffffff58
    d0bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d0c0:	ldr	r0, [fp, #-160]	; 0xffffff60
    d0c4:	bl	1c5c <flatcc_json_parser_int32>
    d0c8:	str	r0, [fp, #-164]	; 0xffffff5c
    d0cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d0d0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d0d4:	cmp	r2, r3
    d0d8:	bne	d128 <MyGame_Example_Monster_parse_json_table+0x27e8>
    d0dc:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d0e0:	str	r3, [fp, #-40]	; 0xffffffd8
    d0e4:	sub	r3, fp, #92	; 0x5c
    d0e8:	str	r3, [sp]
    d0ec:	movw	r3, #0
    d0f0:	movt	r3, #0
    d0f4:	ldr	r2, [fp, #-168]	; 0xffffff58
    d0f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d0fc:	ldr	r0, [fp, #-160]	; 0xffffff60
    d100:	bl	2990 <flatcc_json_parser_symbolic_int32>
    d104:	str	r0, [fp, #-164]	; 0xffffff5c
    d108:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d10c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d110:	cmp	r2, r3
    d114:	beq	e4f0 <MyGame_Example_Monster_parse_json_table+0x3bb0>
    d118:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d11c:	ldr	r3, [fp, #-168]	; 0xffffff58
    d120:	cmp	r2, r3
    d124:	beq	e4f0 <MyGame_Example_Monster_parse_json_table+0x3bb0>
    d128:	ldr	r3, [fp, #-92]	; 0xffffffa4
    d12c:	cmp	r3, #0
    d130:	bne	d148 <MyGame_Example_Monster_parse_json_table+0x2808>
    d134:	ldr	r3, [fp, #-160]	; 0xffffff60
    d138:	ldr	r3, [r3, #8]
    d13c:	and	r3, r3, #2
    d140:	cmp	r3, #0
    d144:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d148:	ldr	r3, [fp, #-160]	; 0xffffff60
    d14c:	ldr	r0, [r3]
    d150:	mov	r3, #4
    d154:	mov	r2, #4
    d158:	mov	r1, #20
    d15c:	bl	0 <flatcc_builder_table_add>
    d160:	str	r0, [fp, #-48]	; 0xffffffd0
    d164:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d168:	cmp	r3, #0
    d16c:	beq	e4f8 <MyGame_Example_Monster_parse_json_table+0x3bb8>
    d170:	ldr	r3, [fp, #-92]	; 0xffffffa4
    d174:	mov	r1, r3
    d178:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d17c:	bl	2c4 <flatbuffers_int32_write_to_pe>
    d180:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d184:	ldr	r2, [fp, #-168]	; 0xffffff58
    d188:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d18c:	ldr	r0, [fp, #-160]	; 0xffffff60
    d190:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d194:	str	r0, [fp, #-164]	; 0xffffff5c
    d198:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d19c:	ldr	r2, [fp, #-168]	; 0xffffff58
    d1a0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d1a4:	ldr	r0, [fp, #-160]	; 0xffffff60
    d1a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1ac:	str	r0, [fp, #-164]	; 0xffffff5c
    d1b0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d1b4:	ldr	r2, [fp, #-168]	; 0xffffff58
    d1b8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d1bc:	ldr	r0, [fp, #-160]	; 0xffffff60
    d1c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d1c4:	str	r0, [fp, #-164]	; 0xffffff5c
    d1c8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d1cc:	nop	{0}
    d1d0:	.word	0x68617368
    d1d4:	.word	0x74657374
    d1d8:	.word	0x666e7630
    d1dc:	.word	0x7336345f
    d1e0:	.word	0x666e7631
    d1e4:	.word	0x7333325f
    d1e8:	.word	0x666e7630
    d1ec:	.word	0x7533325f
    d1f0:	.word	0x666e7631
    d1f4:	.word	0x7336345f
    d1f8:	.word	0x666e7631
    d1fc:	.word	0x7533325f
    d200:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d204:	sub	r3, pc, #36	; 0x24
    d208:	ldrd	r2, [r3]
    d20c:	cmp	r1, r3
    d210:	cmpeq	r0, r2
    d214:	bhi	d4e4 <MyGame_Example_Monster_parse_json_table+0x2ba4>
    d218:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d21c:	sub	r3, pc, #52	; 0x34
    d220:	ldrd	r2, [r3]
    d224:	cmp	r1, r3
    d228:	cmpeq	r0, r2
    d22c:	bne	d4cc <MyGame_Example_Monster_parse_json_table+0x2b8c>
    d230:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d234:	str	r3, [fp, #-40]	; 0xffffffd8
    d238:	mov	r3, #8
    d23c:	ldr	r2, [fp, #-168]	; 0xffffff58
    d240:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d244:	ldr	r0, [fp, #-160]	; 0xffffff60
    d248:	bl	f54 <flatcc_json_parser_match_symbol>
    d24c:	str	r0, [fp, #-164]	; 0xffffff5c
    d250:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d254:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d258:	cmp	r2, r3
    d25c:	beq	d340 <MyGame_Example_Monster_parse_json_table+0x2a00>
    d260:	mov	r2, #0
    d264:	mov	r3, #0
    d268:	strd	r2, [fp, #-100]	; 0xffffff9c
    d26c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d270:	str	r3, [fp, #-40]	; 0xffffffd8
    d274:	sub	r3, fp, #100	; 0x64
    d278:	ldr	r2, [fp, #-168]	; 0xffffff58
    d27c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d280:	ldr	r0, [fp, #-160]	; 0xffffff60
    d284:	bl	1b7c <flatcc_json_parser_int64>
    d288:	str	r0, [fp, #-164]	; 0xffffff5c
    d28c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d290:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d294:	cmp	r2, r3
    d298:	bne	d2e8 <MyGame_Example_Monster_parse_json_table+0x29a8>
    d29c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d2a0:	str	r3, [fp, #-40]	; 0xffffffd8
    d2a4:	sub	r3, fp, #100	; 0x64
    d2a8:	str	r3, [sp]
    d2ac:	movw	r3, #0
    d2b0:	movt	r3, #0
    d2b4:	ldr	r2, [fp, #-168]	; 0xffffff58
    d2b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d2bc:	ldr	r0, [fp, #-160]	; 0xffffff60
    d2c0:	bl	279c <flatcc_json_parser_symbolic_int64>
    d2c4:	str	r0, [fp, #-164]	; 0xffffff5c
    d2c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d2cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d2d0:	cmp	r2, r3
    d2d4:	beq	e500 <MyGame_Example_Monster_parse_json_table+0x3bc0>
    d2d8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d2dc:	ldr	r3, [fp, #-168]	; 0xffffff58
    d2e0:	cmp	r2, r3
    d2e4:	beq	e500 <MyGame_Example_Monster_parse_json_table+0x3bc0>
    d2e8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    d2ec:	orrs	r3, r2, r3
    d2f0:	bne	d308 <MyGame_Example_Monster_parse_json_table+0x29c8>
    d2f4:	ldr	r3, [fp, #-160]	; 0xffffff60
    d2f8:	ldr	r3, [r3, #8]
    d2fc:	and	r3, r3, #2
    d300:	cmp	r3, #0
    d304:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d308:	ldr	r3, [fp, #-160]	; 0xffffff60
    d30c:	ldr	r0, [r3]
    d310:	mov	r3, #8
    d314:	mov	r2, #8
    d318:	mov	r1, #18
    d31c:	bl	0 <flatcc_builder_table_add>
    d320:	str	r0, [fp, #-48]	; 0xffffffd0
    d324:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d328:	cmp	r3, #0
    d32c:	beq	e508 <MyGame_Example_Monster_parse_json_table+0x3bc8>
    d330:	ldrd	r2, [fp, #-100]	; 0xffffff9c
    d334:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d338:	bl	32c <flatbuffers_int64_write_to_pe>
    d33c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d340:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d344:	add	r3, r3, #8
    d348:	str	r3, [fp, #-164]	; 0xffffff5c
    d34c:	ldr	r1, [fp, #-168]	; 0xffffff58
    d350:	ldr	r0, [fp, #-164]	; 0xffffff5c
    d354:	bl	940 <flatcc_json_parser_symbol_part>
    d358:	strd	r0, [fp, #-36]	; 0xffffffdc
    d35c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d360:	mov	r2, #0
    d364:	mov	r3, #-16777216	; 0xff000000
    d368:	and	ip, r0, r2
    d36c:	str	ip, [fp, #-340]	; 0xfffffeac
    d370:	and	r3, r1, r3
    d374:	str	r3, [fp, #-336]	; 0xfffffeb0
    d378:	sub	r3, fp, #340	; 0x154
    d37c:	ldrd	r2, [r3]
    d380:	cmp	r3, #1627389952	; 0x61000000
    d384:	cmpeq	r2, #0
    d388:	bne	d4b4 <MyGame_Example_Monster_parse_json_table+0x2b74>
    d38c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d390:	str	r3, [fp, #-40]	; 0xffffffd8
    d394:	mov	r3, #1
    d398:	ldr	r2, [fp, #-168]	; 0xffffff58
    d39c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d3a0:	ldr	r0, [fp, #-160]	; 0xffffff60
    d3a4:	bl	f54 <flatcc_json_parser_match_symbol>
    d3a8:	str	r0, [fp, #-164]	; 0xffffff5c
    d3ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d3b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d3b4:	cmp	r2, r3
    d3b8:	beq	d49c <MyGame_Example_Monster_parse_json_table+0x2b5c>
    d3bc:	mov	r2, #0
    d3c0:	mov	r3, #0
    d3c4:	strd	r2, [fp, #-108]	; 0xffffff94
    d3c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d3cc:	str	r3, [fp, #-40]	; 0xffffffd8
    d3d0:	sub	r3, fp, #108	; 0x6c
    d3d4:	ldr	r2, [fp, #-168]	; 0xffffff58
    d3d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d3dc:	ldr	r0, [fp, #-160]	; 0xffffff60
    d3e0:	bl	1b7c <flatcc_json_parser_int64>
    d3e4:	str	r0, [fp, #-164]	; 0xffffff5c
    d3e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d3ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d3f0:	cmp	r2, r3
    d3f4:	bne	d444 <MyGame_Example_Monster_parse_json_table+0x2b04>
    d3f8:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d3fc:	str	r3, [fp, #-40]	; 0xffffffd8
    d400:	sub	r3, fp, #108	; 0x6c
    d404:	str	r3, [sp]
    d408:	movw	r3, #0
    d40c:	movt	r3, #0
    d410:	ldr	r2, [fp, #-168]	; 0xffffff58
    d414:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d418:	ldr	r0, [fp, #-160]	; 0xffffff60
    d41c:	bl	279c <flatcc_json_parser_symbolic_int64>
    d420:	str	r0, [fp, #-164]	; 0xffffff5c
    d424:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d428:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d42c:	cmp	r2, r3
    d430:	beq	e510 <MyGame_Example_Monster_parse_json_table+0x3bd0>
    d434:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d438:	ldr	r3, [fp, #-168]	; 0xffffff58
    d43c:	cmp	r2, r3
    d440:	beq	e510 <MyGame_Example_Monster_parse_json_table+0x3bd0>
    d444:	ldrd	r2, [fp, #-108]	; 0xffffff94
    d448:	orrs	r3, r2, r3
    d44c:	bne	d464 <MyGame_Example_Monster_parse_json_table+0x2b24>
    d450:	ldr	r3, [fp, #-160]	; 0xffffff60
    d454:	ldr	r3, [r3, #8]
    d458:	and	r3, r3, #2
    d45c:	cmp	r3, #0
    d460:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d464:	ldr	r3, [fp, #-160]	; 0xffffff60
    d468:	ldr	r0, [r3]
    d46c:	mov	r3, #8
    d470:	mov	r2, #8
    d474:	mov	r1, #22
    d478:	bl	0 <flatcc_builder_table_add>
    d47c:	str	r0, [fp, #-48]	; 0xffffffd0
    d480:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d484:	cmp	r3, #0
    d488:	beq	e518 <MyGame_Example_Monster_parse_json_table+0x3bd8>
    d48c:	ldrd	r2, [fp, #-108]	; 0xffffff94
    d490:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d494:	bl	32c <flatbuffers_int64_write_to_pe>
    d498:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d49c:	ldr	r2, [fp, #-168]	; 0xffffff58
    d4a0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d4a4:	ldr	r0, [fp, #-160]	; 0xffffff60
    d4a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d4ac:	str	r0, [fp, #-164]	; 0xffffff5c
    d4b0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d4b4:	ldr	r2, [fp, #-168]	; 0xffffff58
    d4b8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d4bc:	ldr	r0, [fp, #-160]	; 0xffffff60
    d4c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d4c4:	str	r0, [fp, #-164]	; 0xffffff5c
    d4c8:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d4cc:	ldr	r2, [fp, #-168]	; 0xffffff58
    d4d0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d4d4:	ldr	r0, [fp, #-160]	; 0xffffff60
    d4d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d4dc:	str	r0, [fp, #-164]	; 0xffffff5c
    d4e0:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d4e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d4e8:	sub	r3, pc, #760	; 0x2f8
    d4ec:	ldrd	r2, [r3]
    d4f0:	cmp	r1, r3
    d4f4:	cmpeq	r0, r2
    d4f8:	bne	d798 <MyGame_Example_Monster_parse_json_table+0x2e58>
    d4fc:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d500:	str	r3, [fp, #-40]	; 0xffffffd8
    d504:	mov	r3, #8
    d508:	ldr	r2, [fp, #-168]	; 0xffffff58
    d50c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d510:	ldr	r0, [fp, #-160]	; 0xffffff60
    d514:	bl	f54 <flatcc_json_parser_match_symbol>
    d518:	str	r0, [fp, #-164]	; 0xffffff5c
    d51c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d520:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d524:	cmp	r2, r3
    d528:	beq	d60c <MyGame_Example_Monster_parse_json_table+0x2ccc>
    d52c:	mov	r3, #0
    d530:	str	r3, [fp, #-112]	; 0xffffff90
    d534:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d538:	str	r3, [fp, #-40]	; 0xffffffd8
    d53c:	sub	r3, fp, #112	; 0x70
    d540:	ldr	r2, [fp, #-168]	; 0xffffff58
    d544:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d548:	ldr	r0, [fp, #-160]	; 0xffffff60
    d54c:	bl	18e8 <flatcc_json_parser_uint32>
    d550:	str	r0, [fp, #-164]	; 0xffffff5c
    d554:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d558:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d55c:	cmp	r2, r3
    d560:	bne	d5b0 <MyGame_Example_Monster_parse_json_table+0x2c70>
    d564:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d568:	str	r3, [fp, #-40]	; 0xffffffd8
    d56c:	sub	r3, fp, #112	; 0x70
    d570:	str	r3, [sp]
    d574:	movw	r3, #0
    d578:	movt	r3, #0
    d57c:	ldr	r2, [fp, #-168]	; 0xffffff58
    d580:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d584:	ldr	r0, [fp, #-160]	; 0xffffff60
    d588:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    d58c:	str	r0, [fp, #-164]	; 0xffffff5c
    d590:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d594:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d598:	cmp	r2, r3
    d59c:	beq	e520 <MyGame_Example_Monster_parse_json_table+0x3be0>
    d5a0:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d5a4:	ldr	r3, [fp, #-168]	; 0xffffff58
    d5a8:	cmp	r2, r3
    d5ac:	beq	e520 <MyGame_Example_Monster_parse_json_table+0x3be0>
    d5b0:	ldr	r3, [fp, #-112]	; 0xffffff90
    d5b4:	cmp	r3, #0
    d5b8:	bne	d5d0 <MyGame_Example_Monster_parse_json_table+0x2c90>
    d5bc:	ldr	r3, [fp, #-160]	; 0xffffff60
    d5c0:	ldr	r3, [r3, #8]
    d5c4:	and	r3, r3, #2
    d5c8:	cmp	r3, #0
    d5cc:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d5d0:	ldr	r3, [fp, #-160]	; 0xffffff60
    d5d4:	ldr	r0, [r3]
    d5d8:	mov	r3, #4
    d5dc:	mov	r2, #4
    d5e0:	mov	r1, #17
    d5e4:	bl	0 <flatcc_builder_table_add>
    d5e8:	str	r0, [fp, #-48]	; 0xffffffd0
    d5ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d5f0:	cmp	r3, #0
    d5f4:	beq	e528 <MyGame_Example_Monster_parse_json_table+0x3be8>
    d5f8:	ldr	r3, [fp, #-112]	; 0xffffff90
    d5fc:	mov	r1, r3
    d600:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d604:	bl	10c <flatbuffers_uint32_write_to_pe>
    d608:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d60c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d610:	add	r3, r3, #8
    d614:	str	r3, [fp, #-164]	; 0xffffff5c
    d618:	ldr	r1, [fp, #-168]	; 0xffffff58
    d61c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    d620:	bl	940 <flatcc_json_parser_symbol_part>
    d624:	strd	r0, [fp, #-36]	; 0xffffffdc
    d628:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d62c:	mov	r2, #0
    d630:	mov	r3, #-16777216	; 0xff000000
    d634:	and	ip, r0, r2
    d638:	str	ip, [fp, #-348]	; 0xfffffea4
    d63c:	and	r3, r1, r3
    d640:	str	r3, [fp, #-344]	; 0xfffffea8
    d644:	sub	r3, fp, #348	; 0x15c
    d648:	ldrd	r2, [r3]
    d64c:	cmp	r3, #1627389952	; 0x61000000
    d650:	cmpeq	r2, #0
    d654:	bne	d780 <MyGame_Example_Monster_parse_json_table+0x2e40>
    d658:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d65c:	str	r3, [fp, #-40]	; 0xffffffd8
    d660:	mov	r3, #1
    d664:	ldr	r2, [fp, #-168]	; 0xffffff58
    d668:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d66c:	ldr	r0, [fp, #-160]	; 0xffffff60
    d670:	bl	f54 <flatcc_json_parser_match_symbol>
    d674:	str	r0, [fp, #-164]	; 0xffffff5c
    d678:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d67c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d680:	cmp	r2, r3
    d684:	beq	d768 <MyGame_Example_Monster_parse_json_table+0x2e28>
    d688:	mov	r3, #0
    d68c:	str	r3, [fp, #-116]	; 0xffffff8c
    d690:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d694:	str	r3, [fp, #-40]	; 0xffffffd8
    d698:	sub	r3, fp, #116	; 0x74
    d69c:	ldr	r2, [fp, #-168]	; 0xffffff58
    d6a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d6a4:	ldr	r0, [fp, #-160]	; 0xffffff60
    d6a8:	bl	18e8 <flatcc_json_parser_uint32>
    d6ac:	str	r0, [fp, #-164]	; 0xffffff5c
    d6b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d6b4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d6b8:	cmp	r2, r3
    d6bc:	bne	d70c <MyGame_Example_Monster_parse_json_table+0x2dcc>
    d6c0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d6c4:	str	r3, [fp, #-40]	; 0xffffffd8
    d6c8:	sub	r3, fp, #116	; 0x74
    d6cc:	str	r3, [sp]
    d6d0:	movw	r3, #0
    d6d4:	movt	r3, #0
    d6d8:	ldr	r2, [fp, #-168]	; 0xffffff58
    d6dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d6e0:	ldr	r0, [fp, #-160]	; 0xffffff60
    d6e4:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    d6e8:	str	r0, [fp, #-164]	; 0xffffff5c
    d6ec:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d6f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d6f4:	cmp	r2, r3
    d6f8:	beq	e530 <MyGame_Example_Monster_parse_json_table+0x3bf0>
    d6fc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d700:	ldr	r3, [fp, #-168]	; 0xffffff58
    d704:	cmp	r2, r3
    d708:	beq	e530 <MyGame_Example_Monster_parse_json_table+0x3bf0>
    d70c:	ldr	r3, [fp, #-116]	; 0xffffff8c
    d710:	cmp	r3, #0
    d714:	bne	d72c <MyGame_Example_Monster_parse_json_table+0x2dec>
    d718:	ldr	r3, [fp, #-160]	; 0xffffff60
    d71c:	ldr	r3, [r3, #8]
    d720:	and	r3, r3, #2
    d724:	cmp	r3, #0
    d728:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d72c:	ldr	r3, [fp, #-160]	; 0xffffff60
    d730:	ldr	r0, [r3]
    d734:	mov	r3, #4
    d738:	mov	r2, #4
    d73c:	mov	r1, #21
    d740:	bl	0 <flatcc_builder_table_add>
    d744:	str	r0, [fp, #-48]	; 0xffffffd0
    d748:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d74c:	cmp	r3, #0
    d750:	beq	e538 <MyGame_Example_Monster_parse_json_table+0x3bf8>
    d754:	ldr	r3, [fp, #-116]	; 0xffffff8c
    d758:	mov	r1, r3
    d75c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d760:	bl	10c <flatbuffers_uint32_write_to_pe>
    d764:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d768:	ldr	r2, [fp, #-168]	; 0xffffff58
    d76c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d770:	ldr	r0, [fp, #-160]	; 0xffffff60
    d774:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d778:	str	r0, [fp, #-164]	; 0xffffff5c
    d77c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d780:	ldr	r2, [fp, #-168]	; 0xffffff58
    d784:	ldr	r1, [fp, #-164]	; 0xffffff5c
    d788:	ldr	r0, [fp, #-160]	; 0xffffff60
    d78c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    d790:	str	r0, [fp, #-164]	; 0xffffff5c
    d794:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d798:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d79c:	add	r3, pc, #708	; 0x2c4
    d7a0:	ldrd	r2, [r3]
    d7a4:	cmp	r1, r3
    d7a8:	cmpeq	r0, r2
    d7ac:	bne	da4c <MyGame_Example_Monster_parse_json_table+0x310c>
    d7b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d7b4:	str	r3, [fp, #-40]	; 0xffffffd8
    d7b8:	mov	r3, #8
    d7bc:	ldr	r2, [fp, #-168]	; 0xffffff58
    d7c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d7c4:	ldr	r0, [fp, #-160]	; 0xffffff60
    d7c8:	bl	f54 <flatcc_json_parser_match_symbol>
    d7cc:	str	r0, [fp, #-164]	; 0xffffff5c
    d7d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d7d4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d7d8:	cmp	r2, r3
    d7dc:	beq	d8c0 <MyGame_Example_Monster_parse_json_table+0x2f80>
    d7e0:	mov	r2, #0
    d7e4:	mov	r3, #0
    d7e8:	strd	r2, [fp, #-124]	; 0xffffff84
    d7ec:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d7f0:	str	r3, [fp, #-40]	; 0xffffffd8
    d7f4:	sub	r3, fp, #124	; 0x7c
    d7f8:	ldr	r2, [fp, #-168]	; 0xffffff58
    d7fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d800:	ldr	r0, [fp, #-160]	; 0xffffff60
    d804:	bl	1808 <flatcc_json_parser_uint64>
    d808:	str	r0, [fp, #-164]	; 0xffffff5c
    d80c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d810:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d814:	cmp	r2, r3
    d818:	bne	d868 <MyGame_Example_Monster_parse_json_table+0x2f28>
    d81c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d820:	str	r3, [fp, #-40]	; 0xffffffd8
    d824:	sub	r3, fp, #124	; 0x7c
    d828:	str	r3, [sp]
    d82c:	movw	r3, #0
    d830:	movt	r3, #0
    d834:	ldr	r2, [fp, #-168]	; 0xffffff58
    d838:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d83c:	ldr	r0, [fp, #-160]	; 0xffffff60
    d840:	bl	2000 <flatcc_json_parser_symbolic_uint64>
    d844:	str	r0, [fp, #-164]	; 0xffffff5c
    d848:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d84c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d850:	cmp	r2, r3
    d854:	beq	e540 <MyGame_Example_Monster_parse_json_table+0x3c00>
    d858:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d85c:	ldr	r3, [fp, #-168]	; 0xffffff58
    d860:	cmp	r2, r3
    d864:	beq	e540 <MyGame_Example_Monster_parse_json_table+0x3c00>
    d868:	ldrd	r2, [fp, #-124]	; 0xffffff84
    d86c:	orrs	r3, r2, r3
    d870:	bne	d888 <MyGame_Example_Monster_parse_json_table+0x2f48>
    d874:	ldr	r3, [fp, #-160]	; 0xffffff60
    d878:	ldr	r3, [r3, #8]
    d87c:	and	r3, r3, #2
    d880:	cmp	r3, #0
    d884:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d888:	ldr	r3, [fp, #-160]	; 0xffffff60
    d88c:	ldr	r0, [r3]
    d890:	mov	r3, #8
    d894:	mov	r2, #8
    d898:	mov	r1, #19
    d89c:	bl	0 <flatcc_builder_table_add>
    d8a0:	str	r0, [fp, #-48]	; 0xffffffd0
    d8a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    d8a8:	cmp	r3, #0
    d8ac:	beq	e548 <MyGame_Example_Monster_parse_json_table+0x3c08>
    d8b0:	ldrd	r2, [fp, #-124]	; 0xffffff84
    d8b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d8b8:	bl	174 <flatbuffers_uint64_write_to_pe>
    d8bc:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d8c0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d8c4:	add	r3, r3, #8
    d8c8:	str	r3, [fp, #-164]	; 0xffffff5c
    d8cc:	ldr	r1, [fp, #-168]	; 0xffffff58
    d8d0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    d8d4:	bl	940 <flatcc_json_parser_symbol_part>
    d8d8:	strd	r0, [fp, #-36]	; 0xffffffdc
    d8dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    d8e0:	mov	r2, #0
    d8e4:	mov	r3, #-16777216	; 0xff000000
    d8e8:	and	ip, r0, r2
    d8ec:	str	ip, [fp, #-356]	; 0xfffffe9c
    d8f0:	and	r3, r1, r3
    d8f4:	str	r3, [fp, #-352]	; 0xfffffea0
    d8f8:	sub	r3, fp, #356	; 0x164
    d8fc:	ldrd	r2, [r3]
    d900:	cmp	r3, #1627389952	; 0x61000000
    d904:	cmpeq	r2, #0
    d908:	bne	da34 <MyGame_Example_Monster_parse_json_table+0x30f4>
    d90c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d910:	str	r3, [fp, #-40]	; 0xffffffd8
    d914:	mov	r3, #1
    d918:	ldr	r2, [fp, #-168]	; 0xffffff58
    d91c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d920:	ldr	r0, [fp, #-160]	; 0xffffff60
    d924:	bl	f54 <flatcc_json_parser_match_symbol>
    d928:	str	r0, [fp, #-164]	; 0xffffff5c
    d92c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d930:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d934:	cmp	r2, r3
    d938:	beq	da1c <MyGame_Example_Monster_parse_json_table+0x30dc>
    d93c:	mov	r2, #0
    d940:	mov	r3, #0
    d944:	strd	r2, [fp, #-132]	; 0xffffff7c
    d948:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d94c:	str	r3, [fp, #-40]	; 0xffffffd8
    d950:	sub	r3, fp, #132	; 0x84
    d954:	ldr	r2, [fp, #-168]	; 0xffffff58
    d958:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d95c:	ldr	r0, [fp, #-160]	; 0xffffff60
    d960:	bl	1808 <flatcc_json_parser_uint64>
    d964:	str	r0, [fp, #-164]	; 0xffffff5c
    d968:	ldr	r2, [fp, #-40]	; 0xffffffd8
    d96c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d970:	cmp	r2, r3
    d974:	bne	d9c4 <MyGame_Example_Monster_parse_json_table+0x3084>
    d978:	ldr	r3, [fp, #-164]	; 0xffffff5c
    d97c:	str	r3, [fp, #-40]	; 0xffffffd8
    d980:	sub	r3, fp, #132	; 0x84
    d984:	str	r3, [sp]
    d988:	movw	r3, #0
    d98c:	movt	r3, #0
    d990:	ldr	r2, [fp, #-168]	; 0xffffff58
    d994:	ldr	r1, [fp, #-40]	; 0xffffffd8
    d998:	ldr	r0, [fp, #-160]	; 0xffffff60
    d99c:	bl	2000 <flatcc_json_parser_symbolic_uint64>
    d9a0:	str	r0, [fp, #-164]	; 0xffffff5c
    d9a4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d9a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    d9ac:	cmp	r2, r3
    d9b0:	beq	e550 <MyGame_Example_Monster_parse_json_table+0x3c10>
    d9b4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    d9b8:	ldr	r3, [fp, #-168]	; 0xffffff58
    d9bc:	cmp	r2, r3
    d9c0:	beq	e550 <MyGame_Example_Monster_parse_json_table+0x3c10>
    d9c4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    d9c8:	orrs	r3, r2, r3
    d9cc:	bne	d9e4 <MyGame_Example_Monster_parse_json_table+0x30a4>
    d9d0:	ldr	r3, [fp, #-160]	; 0xffffff60
    d9d4:	ldr	r3, [r3, #8]
    d9d8:	and	r3, r3, #2
    d9dc:	cmp	r3, #0
    d9e0:	beq	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    d9e4:	ldr	r3, [fp, #-160]	; 0xffffff60
    d9e8:	ldr	r0, [r3]
    d9ec:	mov	r3, #8
    d9f0:	mov	r2, #8
    d9f4:	mov	r1, #23
    d9f8:	bl	0 <flatcc_builder_table_add>
    d9fc:	str	r0, [fp, #-48]	; 0xffffffd0
    da00:	ldr	r3, [fp, #-48]	; 0xffffffd0
    da04:	cmp	r3, #0
    da08:	beq	e558 <MyGame_Example_Monster_parse_json_table+0x3c18>
    da0c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    da10:	ldr	r0, [fp, #-48]	; 0xffffffd0
    da14:	bl	174 <flatbuffers_uint64_write_to_pe>
    da18:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    da1c:	ldr	r2, [fp, #-168]	; 0xffffff58
    da20:	ldr	r1, [fp, #-164]	; 0xffffff5c
    da24:	ldr	r0, [fp, #-160]	; 0xffffff60
    da28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    da2c:	str	r0, [fp, #-164]	; 0xffffff5c
    da30:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    da34:	ldr	r2, [fp, #-168]	; 0xffffff58
    da38:	ldr	r1, [fp, #-164]	; 0xffffff5c
    da3c:	ldr	r0, [fp, #-160]	; 0xffffff60
    da40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    da44:	str	r0, [fp, #-164]	; 0xffffff5c
    da48:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    da4c:	ldr	r2, [fp, #-168]	; 0xffffff58
    da50:	ldr	r1, [fp, #-164]	; 0xffffff5c
    da54:	ldr	r0, [fp, #-160]	; 0xffffff60
    da58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    da5c:	str	r0, [fp, #-164]	; 0xffffff5c
    da60:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    da64:	nop	{0}
    da68:	.word	0x666e7631
    da6c:	.word	0x7536345f
    da70:	.word	0x6f725f6e
    da74:	.word	0x76656374
    da78:	.word	0x6e657374
    da7c:	.word	0x74657374
    da80:	.word	0x61746275
    da84:	.word	0x6564666c
    da88:	.word	0x00000000
    da8c:	.word	0x66666572
    da90:	.word	0x6f725f6f
    da94:	.word	0x76656374
    da98:	.word	0x75626c65
    da9c:	.word	0x665f646f
    daa0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    daa4:	sub	r3, pc, #60	; 0x3c
    daa8:	ldrd	r2, [r3]
    daac:	cmp	r1, r3
    dab0:	cmpeq	r0, r2
    dab4:	bhi	dde8 <MyGame_Example_Monster_parse_json_table+0x34a8>
    dab8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    dabc:	sub	r3, pc, #76	; 0x4c
    dac0:	ldrd	r2, [r3]
    dac4:	cmp	r1, r3
    dac8:	cmpeq	r0, r2
    dacc:	bne	ddd0 <MyGame_Example_Monster_parse_json_table+0x3490>
    dad0:	ldr	r3, [fp, #-164]	; 0xffffff5c
    dad4:	add	r3, r3, #8
    dad8:	str	r3, [fp, #-164]	; 0xffffff5c
    dadc:	ldr	r1, [fp, #-168]	; 0xffffff58
    dae0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    dae4:	bl	940 <flatcc_json_parser_symbol_part>
    dae8:	strd	r0, [fp, #-36]	; 0xffffffdc
    daec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    daf0:	sub	r3, pc, #120	; 0x78
    daf4:	ldrd	r2, [r3]
    daf8:	cmp	r1, r3
    dafc:	cmpeq	r0, r2
    db00:	bne	ddb8 <MyGame_Example_Monster_parse_json_table+0x3478>
    db04:	ldr	r3, [fp, #-164]	; 0xffffff5c
    db08:	add	r3, r3, #8
    db0c:	str	r3, [fp, #-164]	; 0xffffff5c
    db10:	ldr	r1, [fp, #-168]	; 0xffffff58
    db14:	ldr	r0, [fp, #-164]	; 0xffffff5c
    db18:	bl	940 <flatcc_json_parser_symbol_part>
    db1c:	strd	r0, [fp, #-36]	; 0xffffffdc
    db20:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    db24:	mov	r2, #0
    db28:	mvn	r3, #0
    db2c:	and	ip, r0, r2
    db30:	str	ip, [fp, #-364]	; 0xfffffe94
    db34:	and	r3, r1, r3
    db38:	str	r3, [fp, #-360]	; 0xfffffe98
    db3c:	sub	r3, pc, #188	; 0xbc
    db40:	ldrd	r2, [r3]
    db44:	sub	r1, fp, #364	; 0x16c
    db48:	ldrd	r0, [r1]
    db4c:	cmp	r1, r3
    db50:	cmpeq	r0, r2
    db54:	bne	dda0 <MyGame_Example_Monster_parse_json_table+0x3460>
    db58:	ldr	r3, [fp, #-164]	; 0xffffff5c
    db5c:	str	r3, [fp, #-40]	; 0xffffffd8
    db60:	mov	r3, #4
    db64:	ldr	r2, [fp, #-168]	; 0xffffff58
    db68:	ldr	r1, [fp, #-40]	; 0xffffffd8
    db6c:	ldr	r0, [fp, #-160]	; 0xffffff60
    db70:	bl	f54 <flatcc_json_parser_match_symbol>
    db74:	str	r0, [fp, #-164]	; 0xffffff5c
    db78:	ldr	r2, [fp, #-40]	; 0xffffffd8
    db7c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    db80:	cmp	r2, r3
    db84:	beq	dd88 <MyGame_Example_Monster_parse_json_table+0x3448>
    db88:	ldr	r2, [fp, #-164]	; 0xffffff5c
    db8c:	ldr	r3, [fp, #-168]	; 0xffffff58
    db90:	cmp	r2, r3
    db94:	beq	dce0 <MyGame_Example_Monster_parse_json_table+0x33a0>
    db98:	ldr	r3, [fp, #-164]	; 0xffffff5c
    db9c:	ldrb	r3, [r3]
    dba0:	cmp	r3, #91	; 0x5b
    dba4:	bne	dce0 <MyGame_Example_Monster_parse_json_table+0x33a0>
    dba8:	ldr	r3, [fp, #-160]	; 0xffffff60
    dbac:	ldr	r0, [r3]
    dbb0:	mvn	r3, #0
    dbb4:	mov	r2, #1
    dbb8:	mov	r1, #1
    dbbc:	bl	0 <flatcc_builder_start_vector>
    dbc0:	mov	r3, r0
    dbc4:	cmp	r3, #0
    dbc8:	bne	e560 <MyGame_Example_Monster_parse_json_table+0x3c20>
    dbcc:	sub	r3, fp, #52	; 0x34
    dbd0:	ldr	r2, [fp, #-168]	; 0xffffff58
    dbd4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dbd8:	ldr	r0, [fp, #-160]	; 0xffffff60
    dbdc:	bl	cec <flatcc_json_parser_array_start>
    dbe0:	str	r0, [fp, #-164]	; 0xffffff5c
    dbe4:	b	dcb8 <MyGame_Example_Monster_parse_json_table+0x3378>
    dbe8:	mov	r3, #0
    dbec:	strb	r3, [fp, #-133]	; 0xffffff7b
    dbf0:	ldr	r3, [fp, #-160]	; 0xffffff60
    dbf4:	ldr	r3, [r3]
    dbf8:	mov	r1, #1
    dbfc:	mov	r0, r3
    dc00:	bl	0 <flatcc_builder_extend_vector>
    dc04:	str	r0, [fp, #-48]	; 0xffffffd0
    dc08:	ldr	r3, [fp, #-48]	; 0xffffffd0
    dc0c:	cmp	r3, #0
    dc10:	beq	e568 <MyGame_Example_Monster_parse_json_table+0x3c28>
    dc14:	ldr	r3, [fp, #-164]	; 0xffffff5c
    dc18:	str	r3, [fp, #-40]	; 0xffffffd8
    dc1c:	sub	r3, fp, #133	; 0x85
    dc20:	ldr	r2, [fp, #-168]	; 0xffffff58
    dc24:	ldr	r1, [fp, #-40]	; 0xffffffd8
    dc28:	ldr	r0, [fp, #-160]	; 0xffffff60
    dc2c:	bl	1aa0 <flatcc_json_parser_uint8>
    dc30:	str	r0, [fp, #-164]	; 0xffffff5c
    dc34:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dc38:	ldr	r3, [fp, #-164]	; 0xffffff5c
    dc3c:	cmp	r2, r3
    dc40:	bne	dc90 <MyGame_Example_Monster_parse_json_table+0x3350>
    dc44:	ldr	r3, [fp, #-164]	; 0xffffff5c
    dc48:	str	r3, [fp, #-40]	; 0xffffffd8
    dc4c:	sub	r3, fp, #133	; 0x85
    dc50:	str	r3, [sp]
    dc54:	movw	r3, #0
    dc58:	movt	r3, #0
    dc5c:	ldr	r2, [fp, #-168]	; 0xffffff58
    dc60:	ldr	r1, [fp, #-40]	; 0xffffffd8
    dc64:	ldr	r0, [fp, #-160]	; 0xffffff60
    dc68:	bl	25b8 <flatcc_json_parser_symbolic_uint8>
    dc6c:	str	r0, [fp, #-164]	; 0xffffff5c
    dc70:	ldr	r2, [fp, #-164]	; 0xffffff5c
    dc74:	ldr	r3, [fp, #-40]	; 0xffffffd8
    dc78:	cmp	r2, r3
    dc7c:	beq	e570 <MyGame_Example_Monster_parse_json_table+0x3c30>
    dc80:	ldr	r2, [fp, #-164]	; 0xffffff5c
    dc84:	ldr	r3, [fp, #-168]	; 0xffffff58
    dc88:	cmp	r2, r3
    dc8c:	beq	e570 <MyGame_Example_Monster_parse_json_table+0x3c30>
    dc90:	ldrb	r3, [fp, #-133]	; 0xffffff7b
    dc94:	mov	r1, r3
    dc98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    dc9c:	bl	28 <flatbuffers_uint8_write_to_pe>
    dca0:	sub	r3, fp, #52	; 0x34
    dca4:	ldr	r2, [fp, #-168]	; 0xffffff58
    dca8:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dcac:	ldr	r0, [fp, #-160]	; 0xffffff60
    dcb0:	bl	de0 <flatcc_json_parser_array_end>
    dcb4:	str	r0, [fp, #-164]	; 0xffffff5c
    dcb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    dcbc:	cmp	r3, #0
    dcc0:	bne	dbe8 <MyGame_Example_Monster_parse_json_table+0x32a8>
    dcc4:	ldr	r3, [fp, #-160]	; 0xffffff60
    dcc8:	ldr	r3, [r3]
    dccc:	mov	r0, r3
    dcd0:	bl	0 <flatcc_builder_end_vector>
    dcd4:	mov	r3, r0
    dcd8:	str	r3, [fp, #-56]	; 0xffffffc8
    dcdc:	b	dd48 <MyGame_Example_Monster_parse_json_table+0x3408>
    dce0:	ldr	r3, [fp, #-160]	; 0xffffff60
    dce4:	ldr	r0, [r3]
    dce8:	mov	r3, #0
    dcec:	mov	r2, #0
    dcf0:	mov	r1, #0
    dcf4:	bl	0 <flatcc_builder_start_buffer>
    dcf8:	mov	r3, r0
    dcfc:	cmp	r3, #0
    dd00:	bne	e578 <MyGame_Example_Monster_parse_json_table+0x3c38>
    dd04:	sub	r3, fp, #56	; 0x38
    dd08:	ldr	r2, [fp, #-168]	; 0xffffff58
    dd0c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dd10:	ldr	r0, [fp, #-160]	; 0xffffff60
    dd14:	bl	a940 <MyGame_Example_Monster_parse_json_table>
    dd18:	str	r0, [fp, #-164]	; 0xffffff5c
    dd1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    dd20:	cmp	r3, #0
    dd24:	beq	e580 <MyGame_Example_Monster_parse_json_table+0x3c40>
    dd28:	ldr	r3, [fp, #-160]	; 0xffffff60
    dd2c:	ldr	r2, [r3]
    dd30:	ldr	r3, [fp, #-56]	; 0xffffffc8
    dd34:	mov	r1, r3
    dd38:	mov	r0, r2
    dd3c:	bl	0 <flatcc_builder_end_buffer>
    dd40:	mov	r3, r0
    dd44:	str	r3, [fp, #-56]	; 0xffffffc8
    dd48:	ldr	r3, [fp, #-56]	; 0xffffffc8
    dd4c:	cmp	r3, #0
    dd50:	beq	e588 <MyGame_Example_Monster_parse_json_table+0x3c48>
    dd54:	ldr	r3, [fp, #-160]	; 0xffffff60
    dd58:	ldr	r3, [r3]
    dd5c:	mov	r1, #13
    dd60:	mov	r0, r3
    dd64:	bl	0 <flatcc_builder_table_add_offset>
    dd68:	str	r0, [fp, #-44]	; 0xffffffd4
    dd6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    dd70:	cmp	r3, #0
    dd74:	beq	e588 <MyGame_Example_Monster_parse_json_table+0x3c48>
    dd78:	ldr	r2, [fp, #-56]	; 0xffffffc8
    dd7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    dd80:	str	r2, [r3]
    dd84:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    dd88:	ldr	r2, [fp, #-168]	; 0xffffff58
    dd8c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dd90:	ldr	r0, [fp, #-160]	; 0xffffff60
    dd94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dd98:	str	r0, [fp, #-164]	; 0xffffff5c
    dd9c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    dda0:	ldr	r2, [fp, #-168]	; 0xffffff58
    dda4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dda8:	ldr	r0, [fp, #-160]	; 0xffffff60
    ddac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ddb0:	str	r0, [fp, #-164]	; 0xffffff5c
    ddb4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ddb8:	ldr	r2, [fp, #-168]	; 0xffffff58
    ddbc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ddc0:	ldr	r0, [fp, #-160]	; 0xffffff60
    ddc4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ddc8:	str	r0, [fp, #-164]	; 0xffffff5c
    ddcc:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    ddd0:	ldr	r2, [fp, #-168]	; 0xffffff58
    ddd4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    ddd8:	ldr	r0, [fp, #-160]	; 0xffffff60
    dddc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    dde0:	str	r0, [fp, #-164]	; 0xffffff5c
    dde4:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    dde8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ddec:	sub	r3, pc, #868	; 0x364
    ddf0:	ldrd	r2, [r3]
    ddf4:	cmp	r1, r3
    ddf8:	cmpeq	r0, r2
    ddfc:	bne	e264 <MyGame_Example_Monster_parse_json_table+0x3924>
    de00:	ldr	r3, [fp, #-164]	; 0xffffff5c
    de04:	add	r3, r3, #8
    de08:	str	r3, [fp, #-164]	; 0xffffff5c
    de0c:	ldr	r1, [fp, #-168]	; 0xffffff58
    de10:	ldr	r0, [fp, #-164]	; 0xffffff5c
    de14:	bl	940 <flatcc_json_parser_symbol_part>
    de18:	strd	r0, [fp, #-36]	; 0xffffffdc
    de1c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    de20:	sub	r3, pc, #912	; 0x390
    de24:	ldrd	r2, [r3]
    de28:	cmp	r1, r3
    de2c:	cmpeq	r0, r2
    de30:	bne	e058 <MyGame_Example_Monster_parse_json_table+0x3718>
    de34:	ldr	r3, [fp, #-164]	; 0xffffff5c
    de38:	add	r3, r3, #8
    de3c:	str	r3, [fp, #-164]	; 0xffffff5c
    de40:	ldr	r1, [fp, #-168]	; 0xffffff58
    de44:	ldr	r0, [fp, #-164]	; 0xffffff5c
    de48:	bl	940 <flatcc_json_parser_symbol_part>
    de4c:	strd	r0, [fp, #-36]	; 0xffffffdc
    de50:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    de54:	mov	r2, #0
    de58:	mov	r3, #-16777216	; 0xff000000
    de5c:	and	ip, r0, r2
    de60:	str	ip, [fp, #-372]	; 0xfffffe8c
    de64:	and	r3, r1, r3
    de68:	str	r3, [fp, #-368]	; 0xfffffe90
    de6c:	sub	r3, fp, #372	; 0x174
    de70:	ldrd	r2, [r3]
    de74:	cmp	r3, #1929379840	; 0x73000000
    de78:	cmpeq	r2, #0
    de7c:	bne	e040 <MyGame_Example_Monster_parse_json_table+0x3700>
    de80:	ldr	r3, [fp, #-164]	; 0xffffff5c
    de84:	str	r3, [fp, #-40]	; 0xffffffd8
    de88:	mov	r3, #1
    de8c:	ldr	r2, [fp, #-168]	; 0xffffff58
    de90:	ldr	r1, [fp, #-40]	; 0xffffffd8
    de94:	ldr	r0, [fp, #-160]	; 0xffffff60
    de98:	bl	f54 <flatcc_json_parser_match_symbol>
    de9c:	str	r0, [fp, #-164]	; 0xffffff5c
    dea0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dea4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    dea8:	cmp	r2, r3
    deac:	beq	e028 <MyGame_Example_Monster_parse_json_table+0x36e8>
    deb0:	ldr	r3, [fp, #-160]	; 0xffffff60
    deb4:	ldr	r0, [r3]
    deb8:	mvn	r3, #-536870912	; 0xe0000000
    debc:	mov	r2, #8
    dec0:	mov	r1, #8
    dec4:	bl	0 <flatcc_builder_start_vector>
    dec8:	mov	r3, r0
    decc:	cmp	r3, #0
    ded0:	bne	e590 <MyGame_Example_Monster_parse_json_table+0x3c50>
    ded4:	sub	r3, fp, #52	; 0x34
    ded8:	ldr	r2, [fp, #-168]	; 0xffffff58
    dedc:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dee0:	ldr	r0, [fp, #-160]	; 0xffffff60
    dee4:	bl	cec <flatcc_json_parser_array_start>
    dee8:	str	r0, [fp, #-164]	; 0xffffff5c
    deec:	b	dfc4 <MyGame_Example_Monster_parse_json_table+0x3684>
    def0:	mov	r2, #0
    def4:	mov	r3, #0
    def8:	strd	r2, [fp, #-148]	; 0xffffff6c
    defc:	ldr	r3, [fp, #-160]	; 0xffffff60
    df00:	ldr	r3, [r3]
    df04:	mov	r1, #1
    df08:	mov	r0, r3
    df0c:	bl	0 <flatcc_builder_extend_vector>
    df10:	str	r0, [fp, #-48]	; 0xffffffd0
    df14:	ldr	r3, [fp, #-48]	; 0xffffffd0
    df18:	cmp	r3, #0
    df1c:	beq	e598 <MyGame_Example_Monster_parse_json_table+0x3c58>
    df20:	ldr	r3, [fp, #-164]	; 0xffffff5c
    df24:	str	r3, [fp, #-40]	; 0xffffffd8
    df28:	sub	r3, fp, #148	; 0x94
    df2c:	ldr	r2, [fp, #-168]	; 0xffffff58
    df30:	ldr	r1, [fp, #-40]	; 0xffffffd8
    df34:	ldr	r0, [fp, #-160]	; 0xffffff60
    df38:	bl	0 <flatcc_json_parser_double>
    df3c:	str	r0, [fp, #-164]	; 0xffffff5c
    df40:	ldr	r2, [fp, #-40]	; 0xffffffd8
    df44:	ldr	r3, [fp, #-164]	; 0xffffff5c
    df48:	cmp	r2, r3
    df4c:	bne	df9c <MyGame_Example_Monster_parse_json_table+0x365c>
    df50:	ldr	r3, [fp, #-164]	; 0xffffff5c
    df54:	str	r3, [fp, #-40]	; 0xffffffd8
    df58:	sub	r3, fp, #148	; 0x94
    df5c:	str	r3, [sp]
    df60:	movw	r3, #0
    df64:	movt	r3, #0
    df68:	ldr	r2, [fp, #-168]	; 0xffffff58
    df6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    df70:	ldr	r0, [fp, #-160]	; 0xffffff60
    df74:	bl	3314 <flatcc_json_parser_symbolic_double>
    df78:	str	r0, [fp, #-164]	; 0xffffff5c
    df7c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    df80:	ldr	r3, [fp, #-40]	; 0xffffffd8
    df84:	cmp	r2, r3
    df88:	beq	e5a0 <MyGame_Example_Monster_parse_json_table+0x3c60>
    df8c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    df90:	ldr	r3, [fp, #-168]	; 0xffffff58
    df94:	cmp	r2, r3
    df98:	beq	e5a0 <MyGame_Example_Monster_parse_json_table+0x3c60>
    df9c:	vldr	d7, [fp, #-148]	; 0xffffff6c
    dfa0:	vmov.f64	d0, d7
    dfa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    dfa8:	bl	420 <flatbuffers_double_write_to_pe>
    dfac:	sub	r3, fp, #52	; 0x34
    dfb0:	ldr	r2, [fp, #-168]	; 0xffffff58
    dfb4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    dfb8:	ldr	r0, [fp, #-160]	; 0xffffff60
    dfbc:	bl	de0 <flatcc_json_parser_array_end>
    dfc0:	str	r0, [fp, #-164]	; 0xffffff5c
    dfc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    dfc8:	cmp	r3, #0
    dfcc:	bne	def0 <MyGame_Example_Monster_parse_json_table+0x35b0>
    dfd0:	ldr	r3, [fp, #-160]	; 0xffffff60
    dfd4:	ldr	r3, [r3]
    dfd8:	mov	r0, r3
    dfdc:	bl	0 <flatcc_builder_end_vector>
    dfe0:	mov	r3, r0
    dfe4:	str	r3, [fp, #-56]	; 0xffffffc8
    dfe8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    dfec:	cmp	r3, #0
    dff0:	beq	e5a8 <MyGame_Example_Monster_parse_json_table+0x3c68>
    dff4:	ldr	r3, [fp, #-160]	; 0xffffff60
    dff8:	ldr	r3, [r3]
    dffc:	mov	r1, #33	; 0x21
    e000:	mov	r0, r3
    e004:	bl	0 <flatcc_builder_table_add_offset>
    e008:	str	r0, [fp, #-44]	; 0xffffffd4
    e00c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e010:	cmp	r3, #0
    e014:	beq	e5a8 <MyGame_Example_Monster_parse_json_table+0x3c68>
    e018:	ldr	r2, [fp, #-56]	; 0xffffffc8
    e01c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e020:	str	r2, [r3]
    e024:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    e028:	ldr	r2, [fp, #-168]	; 0xffffff58
    e02c:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e030:	ldr	r0, [fp, #-160]	; 0xffffff60
    e034:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e038:	str	r0, [fp, #-164]	; 0xffffff5c
    e03c:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    e040:	ldr	r2, [fp, #-168]	; 0xffffff58
    e044:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e048:	ldr	r0, [fp, #-160]	; 0xffffff60
    e04c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e050:	str	r0, [fp, #-164]	; 0xffffff5c
    e054:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    e058:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e05c:	mvn	r2, #255	; 0xff
    e060:	mvn	r3, #0
    e064:	and	ip, r0, r2
    e068:	str	ip, [fp, #-380]	; 0xfffffe84
    e06c:	and	r3, r1, r3
    e070:	str	r3, [fp, #-376]	; 0xfffffe88
    e074:	add	r3, pc, #1004	; 0x3ec
    e078:	ldrd	r2, [r3]
    e07c:	sub	r1, fp, #380	; 0x17c
    e080:	ldrd	r0, [r1]
    e084:	cmp	r1, r3
    e088:	cmpeq	r0, r2
    e08c:	bne	e24c <MyGame_Example_Monster_parse_json_table+0x390c>
    e090:	ldr	r3, [fp, #-164]	; 0xffffff5c
    e094:	str	r3, [fp, #-40]	; 0xffffffd8
    e098:	mov	r3, #7
    e09c:	ldr	r2, [fp, #-168]	; 0xffffff58
    e0a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e0a4:	ldr	r0, [fp, #-160]	; 0xffffff60
    e0a8:	bl	f54 <flatcc_json_parser_match_symbol>
    e0ac:	str	r0, [fp, #-164]	; 0xffffff5c
    e0b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    e0b4:	ldr	r3, [fp, #-164]	; 0xffffff5c
    e0b8:	cmp	r2, r3
    e0bc:	beq	e234 <MyGame_Example_Monster_parse_json_table+0x38f4>
    e0c0:	ldr	r3, [fp, #-160]	; 0xffffff60
    e0c4:	ldr	r0, [r3]
    e0c8:	mvn	r3, #-536870912	; 0xe0000000
    e0cc:	mov	r2, #8
    e0d0:	mov	r1, #8
    e0d4:	bl	0 <flatcc_builder_start_vector>
    e0d8:	mov	r3, r0
    e0dc:	cmp	r3, #0
    e0e0:	bne	e5b0 <MyGame_Example_Monster_parse_json_table+0x3c70>
    e0e4:	sub	r3, fp, #52	; 0x34
    e0e8:	ldr	r2, [fp, #-168]	; 0xffffff58
    e0ec:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e0f0:	ldr	r0, [fp, #-160]	; 0xffffff60
    e0f4:	bl	cec <flatcc_json_parser_array_start>
    e0f8:	str	r0, [fp, #-164]	; 0xffffff5c
    e0fc:	b	e1d0 <MyGame_Example_Monster_parse_json_table+0x3890>
    e100:	mov	r2, #0
    e104:	mov	r3, #0
    e108:	strd	r2, [fp, #-156]	; 0xffffff64
    e10c:	ldr	r3, [fp, #-160]	; 0xffffff60
    e110:	ldr	r3, [r3]
    e114:	mov	r1, #1
    e118:	mov	r0, r3
    e11c:	bl	0 <flatcc_builder_extend_vector>
    e120:	str	r0, [fp, #-48]	; 0xffffffd0
    e124:	ldr	r3, [fp, #-48]	; 0xffffffd0
    e128:	cmp	r3, #0
    e12c:	beq	e5b8 <MyGame_Example_Monster_parse_json_table+0x3c78>
    e130:	ldr	r3, [fp, #-164]	; 0xffffff5c
    e134:	str	r3, [fp, #-40]	; 0xffffffd8
    e138:	sub	r3, fp, #156	; 0x9c
    e13c:	ldr	r2, [fp, #-168]	; 0xffffff58
    e140:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e144:	ldr	r0, [fp, #-160]	; 0xffffff60
    e148:	bl	1b7c <flatcc_json_parser_int64>
    e14c:	str	r0, [fp, #-164]	; 0xffffff5c
    e150:	ldr	r2, [fp, #-40]	; 0xffffffd8
    e154:	ldr	r3, [fp, #-164]	; 0xffffff5c
    e158:	cmp	r2, r3
    e15c:	bne	e1ac <MyGame_Example_Monster_parse_json_table+0x386c>
    e160:	ldr	r3, [fp, #-164]	; 0xffffff5c
    e164:	str	r3, [fp, #-40]	; 0xffffffd8
    e168:	sub	r3, fp, #156	; 0x9c
    e16c:	str	r3, [sp]
    e170:	movw	r3, #0
    e174:	movt	r3, #0
    e178:	ldr	r2, [fp, #-168]	; 0xffffff58
    e17c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e180:	ldr	r0, [fp, #-160]	; 0xffffff60
    e184:	bl	279c <flatcc_json_parser_symbolic_int64>
    e188:	str	r0, [fp, #-164]	; 0xffffff5c
    e18c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    e190:	ldr	r3, [fp, #-40]	; 0xffffffd8
    e194:	cmp	r2, r3
    e198:	beq	e5c0 <MyGame_Example_Monster_parse_json_table+0x3c80>
    e19c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    e1a0:	ldr	r3, [fp, #-168]	; 0xffffff58
    e1a4:	cmp	r2, r3
    e1a8:	beq	e5c0 <MyGame_Example_Monster_parse_json_table+0x3c80>
    e1ac:	ldrd	r2, [fp, #-156]	; 0xffffff64
    e1b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    e1b4:	bl	32c <flatbuffers_int64_write_to_pe>
    e1b8:	sub	r3, fp, #52	; 0x34
    e1bc:	ldr	r2, [fp, #-168]	; 0xffffff58
    e1c0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e1c4:	ldr	r0, [fp, #-160]	; 0xffffff60
    e1c8:	bl	de0 <flatcc_json_parser_array_end>
    e1cc:	str	r0, [fp, #-164]	; 0xffffff5c
    e1d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    e1d4:	cmp	r3, #0
    e1d8:	bne	e100 <MyGame_Example_Monster_parse_json_table+0x37c0>
    e1dc:	ldr	r3, [fp, #-160]	; 0xffffff60
    e1e0:	ldr	r3, [r3]
    e1e4:	mov	r0, r3
    e1e8:	bl	0 <flatcc_builder_end_vector>
    e1ec:	mov	r3, r0
    e1f0:	str	r3, [fp, #-56]	; 0xffffffc8
    e1f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    e1f8:	cmp	r3, #0
    e1fc:	beq	e5c8 <MyGame_Example_Monster_parse_json_table+0x3c88>
    e200:	ldr	r3, [fp, #-160]	; 0xffffff60
    e204:	ldr	r3, [r3]
    e208:	mov	r1, #32
    e20c:	mov	r0, r3
    e210:	bl	0 <flatcc_builder_table_add_offset>
    e214:	str	r0, [fp, #-44]	; 0xffffffd4
    e218:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e21c:	cmp	r3, #0
    e220:	beq	e5c8 <MyGame_Example_Monster_parse_json_table+0x3c88>
    e224:	ldr	r2, [fp, #-56]	; 0xffffffc8
    e228:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e22c:	str	r2, [r3]
    e230:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    e234:	ldr	r2, [fp, #-168]	; 0xffffff58
    e238:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e23c:	ldr	r0, [fp, #-160]	; 0xffffff60
    e240:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e244:	str	r0, [fp, #-164]	; 0xffffff5c
    e248:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    e24c:	ldr	r2, [fp, #-168]	; 0xffffff58
    e250:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e254:	ldr	r0, [fp, #-160]	; 0xffffff60
    e258:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e25c:	str	r0, [fp, #-164]	; 0xffffff5c
    e260:	b	e278 <MyGame_Example_Monster_parse_json_table+0x3938>
    e264:	ldr	r2, [fp, #-168]	; 0xffffff58
    e268:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e26c:	ldr	r0, [fp, #-160]	; 0xffffff60
    e270:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e274:	str	r0, [fp, #-164]	; 0xffffff5c
    e278:	sub	r3, fp, #52	; 0x34
    e27c:	ldr	r2, [fp, #-168]	; 0xffffff58
    e280:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e284:	ldr	r0, [fp, #-160]	; 0xffffff60
    e288:	bl	b78 <flatcc_json_parser_object_end>
    e28c:	str	r0, [fp, #-164]	; 0xffffff5c
    e290:	ldr	r3, [fp, #-52]	; 0xffffffcc
    e294:	cmp	r3, #0
    e298:	bne	a9e0 <MyGame_Example_Monster_parse_json_table+0xa0>
    e29c:	ldr	r3, [fp, #-160]	; 0xffffff60
    e2a0:	ldr	r3, [r3, #24]
    e2a4:	cmp	r3, #0
    e2a8:	bne	e5d0 <MyGame_Example_Monster_parse_json_table+0x3c90>
    e2ac:	ldr	r3, [fp, #-160]	; 0xffffff60
    e2b0:	ldr	r3, [r3]
    e2b4:	mov	r1, #3
    e2b8:	mov	r0, r3
    e2bc:	bl	0 <flatcc_builder_check_required_field>
    e2c0:	mov	r3, r0
    e2c4:	cmp	r3, #0
    e2c8:	bne	e2e8 <MyGame_Example_Monster_parse_json_table+0x39a8>
    e2cc:	mov	r3, #29
    e2d0:	ldr	r2, [fp, #-168]	; 0xffffff58
    e2d4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e2d8:	ldr	r0, [fp, #-160]	; 0xffffff60
    e2dc:	bl	0 <flatcc_json_parser_set_error>
    e2e0:	str	r0, [fp, #-164]	; 0xffffff5c
    e2e4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e2e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    e2ec:	ldr	r2, [fp, #-168]	; 0xffffff58
    e2f0:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e2f4:	ldr	r0, [fp, #-160]	; 0xffffff60
    e2f8:	bl	0 <flatcc_json_parser_finalize_unions>
    e2fc:	str	r0, [fp, #-164]	; 0xffffff5c
    e300:	ldr	r3, [fp, #-160]	; 0xffffff60
    e304:	ldr	r3, [r3]
    e308:	mov	r0, r3
    e30c:	bl	0 <flatcc_builder_end_table>
    e310:	mov	r2, r0
    e314:	ldr	r3, [fp, #-172]	; 0xffffff54
    e318:	str	r2, [r3]
    e31c:	ldr	r3, [fp, #-172]	; 0xffffff54
    e320:	ldr	r3, [r3]
    e324:	cmp	r3, #0
    e328:	beq	e5d8 <MyGame_Example_Monster_parse_json_table+0x3c98>
    e32c:	ldr	r3, [fp, #-164]	; 0xffffff5c
    e330:	b	e5f4 <MyGame_Example_Monster_parse_json_table+0x3cb4>
    e334:	nop	{0}
    e338:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e33c:	nop	{0}
    e340:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e344:	nop	{0}
    e348:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e34c:	nop	{0}
    e350:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e354:	nop	{0}
    e358:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e35c:	nop	{0}
    e360:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e364:	nop	{0}
    e368:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e36c:	nop	{0}
    e370:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e374:	nop	{0}
    e378:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e37c:	nop	{0}
    e380:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e384:	nop	{0}
    e388:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e38c:	nop	{0}
    e390:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e394:	nop	{0}
    e398:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e39c:	nop	{0}
    e3a0:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3a4:	nop	{0}
    e3a8:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3ac:	nop	{0}
    e3b0:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3b4:	nop	{0}
    e3b8:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3bc:	nop	{0}
    e3c0:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3c4:	nop	{0}
    e3c8:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3cc:	nop	{0}
    e3d0:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3d4:	nop	{0}
    e3d8:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3dc:	nop	{0}
    e3e0:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3e4:	nop	{0}
    e3e8:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3ec:	nop	{0}
    e3f0:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3f4:	nop	{0}
    e3f8:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e3fc:	nop	{0}
    e400:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e404:	nop	{0}
    e408:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e40c:	nop	{0}
    e410:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e414:	nop	{0}
    e418:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e41c:	nop	{0}
    e420:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e424:	nop	{0}
    e428:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e42c:	nop	{0}
    e430:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e434:	nop	{0}
    e438:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e43c:	nop	{0}
    e440:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e444:	nop	{0}
    e448:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e44c:	nop	{0}
    e450:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e454:	nop	{0}
    e458:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e45c:	nop	{0}
    e460:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e464:	nop	{0}
    e468:	.word	0x6e677300
    e46c:	.word	0x665f6c6f
    e470:	nop	{0}
    e474:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e478:	nop	{0}
    e47c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e480:	nop	{0}
    e484:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e488:	nop	{0}
    e48c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e490:	nop	{0}
    e494:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e498:	nop	{0}
    e49c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4a0:	nop	{0}
    e4a4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4a8:	nop	{0}
    e4ac:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4b0:	nop	{0}
    e4b4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4b8:	nop	{0}
    e4bc:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4c0:	nop	{0}
    e4c4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4c8:	nop	{0}
    e4cc:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4d0:	nop	{0}
    e4d4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4d8:	nop	{0}
    e4dc:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4e0:	nop	{0}
    e4e4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4e8:	nop	{0}
    e4ec:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4f0:	nop	{0}
    e4f4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e4f8:	nop	{0}
    e4fc:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e500:	nop	{0}
    e504:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e508:	nop	{0}
    e50c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e510:	nop	{0}
    e514:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e518:	nop	{0}
    e51c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e520:	nop	{0}
    e524:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e528:	nop	{0}
    e52c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e530:	nop	{0}
    e534:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e538:	nop	{0}
    e53c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e540:	nop	{0}
    e544:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e548:	nop	{0}
    e54c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e550:	nop	{0}
    e554:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e558:	nop	{0}
    e55c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e560:	nop	{0}
    e564:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e568:	nop	{0}
    e56c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e570:	nop	{0}
    e574:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e578:	nop	{0}
    e57c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e580:	nop	{0}
    e584:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e588:	nop	{0}
    e58c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e590:	nop	{0}
    e594:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e598:	nop	{0}
    e59c:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5a0:	nop	{0}
    e5a4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5a8:	nop	{0}
    e5ac:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5b0:	nop	{0}
    e5b4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5b8:	nop	{0}
    e5bc:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5c0:	nop	{0}
    e5c4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5c8:	nop	{0}
    e5cc:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5d0:	nop	{0}
    e5d4:	b	e5dc <MyGame_Example_Monster_parse_json_table+0x3c9c>
    e5d8:	nop	{0}
    e5dc:	mov	r3, #33	; 0x21
    e5e0:	ldr	r2, [fp, #-168]	; 0xffffff58
    e5e4:	ldr	r1, [fp, #-164]	; 0xffffff5c
    e5e8:	ldr	r0, [fp, #-160]	; 0xffffff60
    e5ec:	bl	0 <flatcc_json_parser_set_error>
    e5f0:	mov	r3, r0
    e5f4:	mov	r0, r3
    e5f8:	sub	sp, fp, #28
    e5fc:	ldrd	r4, [sp]
    e600:	ldrd	r6, [sp, #8]
    e604:	ldrd	r8, [sp, #16]
    e608:	ldr	fp, [sp, #24]
    e60c:	add	sp, sp, #28
    e610:	pop	{pc}		; (ldr pc, [sp], #4)

0000e614 <MyGame_Example_TypeAliases_parse_json_table>:
    e614:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e618:	strd	r6, [sp, #8]
    e61c:	strd	r8, [sp, #16]
    e620:	str	fp, [sp, #24]
    e624:	str	lr, [sp, #28]
    e628:	add	fp, sp, #28
    e62c:	sub	sp, sp, #200	; 0xc8
    e630:	str	r0, [fp, #-136]	; 0xffffff78
    e634:	str	r1, [fp, #-140]	; 0xffffff74
    e638:	str	r2, [fp, #-144]	; 0xffffff70
    e63c:	str	r3, [fp, #-148]	; 0xffffff6c
    e640:	ldr	r2, [fp, #-148]	; 0xffffff6c
    e644:	mov	r3, #0
    e648:	str	r3, [r2]
    e64c:	ldr	r3, [fp, #-136]	; 0xffffff78
    e650:	ldr	r3, [r3]
    e654:	mov	r1, #12
    e658:	mov	r0, r3
    e65c:	bl	0 <flatcc_builder_start_table>
    e660:	mov	r3, r0
    e664:	cmp	r3, #0
    e668:	bne	fa64 <MyGame_Example_TypeAliases_parse_json_table+0x1450>
    e66c:	sub	r3, fp, #56	; 0x38
    e670:	ldr	r2, [fp, #-144]	; 0xffffff70
    e674:	ldr	r1, [fp, #-140]	; 0xffffff74
    e678:	ldr	r0, [fp, #-136]	; 0xffffff78
    e67c:	bl	a84 <flatcc_json_parser_object_start>
    e680:	str	r0, [fp, #-140]	; 0xffffff74
    e684:	b	fa14 <MyGame_Example_TypeAliases_parse_json_table+0x1400>
    e688:	ldr	r2, [fp, #-144]	; 0xffffff70
    e68c:	ldr	r1, [fp, #-140]	; 0xffffff74
    e690:	ldr	r0, [fp, #-136]	; 0xffffff78
    e694:	bl	60c <flatcc_json_parser_symbol_start>
    e698:	str	r0, [fp, #-140]	; 0xffffff74
    e69c:	ldr	r1, [fp, #-144]	; 0xffffff70
    e6a0:	ldr	r0, [fp, #-140]	; 0xffffff74
    e6a4:	bl	940 <flatcc_json_parser_symbol_part>
    e6a8:	strd	r0, [fp, #-36]	; 0xffffffdc
    e6ac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e6b0:	mvn	r2, #0
    e6b4:	movw	r3, #65535	; 0xffff
    e6b8:	movt	r3, #26935	; 0x6937
    e6bc:	cmp	r1, r3
    e6c0:	cmpeq	r0, r2
    e6c4:	bhi	ee30 <MyGame_Example_TypeAliases_parse_json_table+0x81c>
    e6c8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e6cc:	add	r3, pc, #724	; 0x2d4
    e6d0:	ldrd	r2, [r3]
    e6d4:	cmp	r1, r3
    e6d8:	cmpeq	r0, r2
    e6dc:	bhi	e9e0 <MyGame_Example_TypeAliases_parse_json_table+0x3cc>
    e6e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e6e4:	mov	r2, #0
    e6e8:	mvn	r3, #255	; 0xff
    e6ec:	and	r4, r0, r2
    e6f0:	and	r5, r1, r3
    e6f4:	add	r3, pc, #692	; 0x2b4
    e6f8:	ldrd	r2, [r3]
    e6fc:	cmp	r5, r3
    e700:	cmpeq	r4, r2
    e704:	bne	e838 <MyGame_Example_TypeAliases_parse_json_table+0x224>
    e708:	ldr	r3, [fp, #-140]	; 0xffffff74
    e70c:	str	r3, [fp, #-40]	; 0xffffffd8
    e710:	mov	r3, #3
    e714:	ldr	r2, [fp, #-144]	; 0xffffff70
    e718:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e71c:	ldr	r0, [fp, #-136]	; 0xffffff78
    e720:	bl	f54 <flatcc_json_parser_match_symbol>
    e724:	str	r0, [fp, #-140]	; 0xffffff74
    e728:	ldr	r2, [fp, #-40]	; 0xffffffd8
    e72c:	ldr	r3, [fp, #-140]	; 0xffffff74
    e730:	cmp	r2, r3
    e734:	beq	e820 <MyGame_Example_TypeAliases_parse_json_table+0x20c>
    e738:	mov	r2, #0
    e73c:	mov	r3, #0
    e740:	strd	r2, [fp, #-68]	; 0xffffffbc
    e744:	ldr	r3, [fp, #-140]	; 0xffffff74
    e748:	str	r3, [fp, #-40]	; 0xffffffd8
    e74c:	sub	r3, fp, #68	; 0x44
    e750:	ldr	r2, [fp, #-144]	; 0xffffff70
    e754:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e758:	ldr	r0, [fp, #-136]	; 0xffffff78
    e75c:	bl	0 <flatcc_json_parser_double>
    e760:	str	r0, [fp, #-140]	; 0xffffff74
    e764:	ldr	r2, [fp, #-40]	; 0xffffffd8
    e768:	ldr	r3, [fp, #-140]	; 0xffffff74
    e76c:	cmp	r2, r3
    e770:	bne	e7c0 <MyGame_Example_TypeAliases_parse_json_table+0x1ac>
    e774:	ldr	r3, [fp, #-140]	; 0xffffff74
    e778:	str	r3, [fp, #-40]	; 0xffffffd8
    e77c:	sub	r3, fp, #68	; 0x44
    e780:	str	r3, [sp]
    e784:	movw	r3, #0
    e788:	movt	r3, #0
    e78c:	ldr	r2, [fp, #-144]	; 0xffffff70
    e790:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e794:	ldr	r0, [fp, #-136]	; 0xffffff78
    e798:	bl	3314 <flatcc_json_parser_symbolic_double>
    e79c:	str	r0, [fp, #-140]	; 0xffffff74
    e7a0:	ldr	r2, [fp, #-140]	; 0xffffff74
    e7a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    e7a8:	cmp	r2, r3
    e7ac:	beq	fa6c <MyGame_Example_TypeAliases_parse_json_table+0x1458>
    e7b0:	ldr	r2, [fp, #-140]	; 0xffffff74
    e7b4:	ldr	r3, [fp, #-144]	; 0xffffff70
    e7b8:	cmp	r2, r3
    e7bc:	beq	fa6c <MyGame_Example_TypeAliases_parse_json_table+0x1458>
    e7c0:	vldr	d7, [fp, #-68]	; 0xffffffbc
    e7c4:	vcmp.f64	d7, #0.0
    e7c8:	vmrs	APSR_nzcv, fpscr
    e7cc:	bne	e7e4 <MyGame_Example_TypeAliases_parse_json_table+0x1d0>
    e7d0:	ldr	r3, [fp, #-136]	; 0xffffff78
    e7d4:	ldr	r3, [r3, #8]
    e7d8:	and	r3, r3, #2
    e7dc:	cmp	r3, #0
    e7e0:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e7e4:	ldr	r3, [fp, #-136]	; 0xffffff78
    e7e8:	ldr	r0, [r3]
    e7ec:	mov	r3, #8
    e7f0:	mov	r2, #8
    e7f4:	mov	r1, #9
    e7f8:	bl	0 <flatcc_builder_table_add>
    e7fc:	str	r0, [fp, #-44]	; 0xffffffd4
    e800:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e804:	cmp	r3, #0
    e808:	beq	fa74 <MyGame_Example_TypeAliases_parse_json_table+0x1460>
    e80c:	vldr	d7, [fp, #-68]	; 0xffffffbc
    e810:	vmov.f64	d0, d7
    e814:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e818:	bl	420 <flatbuffers_double_write_to_pe>
    e81c:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e820:	ldr	r2, [fp, #-144]	; 0xffffff70
    e824:	ldr	r1, [fp, #-140]	; 0xffffff74
    e828:	ldr	r0, [fp, #-136]	; 0xffffff78
    e82c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e830:	str	r0, [fp, #-140]	; 0xffffff74
    e834:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e838:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e83c:	mov	r2, #0
    e840:	mvn	r3, #255	; 0xff
    e844:	and	r6, r0, r2
    e848:	and	r7, r1, r3
    e84c:	add	r3, pc, #356	; 0x164
    e850:	ldrd	r2, [r3]
    e854:	cmp	r7, r3
    e858:	cmpeq	r6, r2
    e85c:	bne	e98c <MyGame_Example_TypeAliases_parse_json_table+0x378>
    e860:	ldr	r3, [fp, #-140]	; 0xffffff74
    e864:	str	r3, [fp, #-40]	; 0xffffffd8
    e868:	mov	r3, #3
    e86c:	ldr	r2, [fp, #-144]	; 0xffffff70
    e870:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e874:	ldr	r0, [fp, #-136]	; 0xffffff78
    e878:	bl	f54 <flatcc_json_parser_match_symbol>
    e87c:	str	r0, [fp, #-140]	; 0xffffff74
    e880:	ldr	r2, [fp, #-40]	; 0xffffffd8
    e884:	ldr	r3, [fp, #-140]	; 0xffffff74
    e888:	cmp	r2, r3
    e88c:	beq	e974 <MyGame_Example_TypeAliases_parse_json_table+0x360>
    e890:	mov	r3, #0
    e894:	str	r3, [fp, #-72]	; 0xffffffb8
    e898:	ldr	r3, [fp, #-140]	; 0xffffff74
    e89c:	str	r3, [fp, #-40]	; 0xffffffd8
    e8a0:	sub	r3, fp, #72	; 0x48
    e8a4:	ldr	r2, [fp, #-144]	; 0xffffff70
    e8a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e8ac:	ldr	r0, [fp, #-136]	; 0xffffff78
    e8b0:	bl	0 <flatcc_json_parser_float>
    e8b4:	str	r0, [fp, #-140]	; 0xffffff74
    e8b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    e8bc:	ldr	r3, [fp, #-140]	; 0xffffff74
    e8c0:	cmp	r2, r3
    e8c4:	bne	e914 <MyGame_Example_TypeAliases_parse_json_table+0x300>
    e8c8:	ldr	r3, [fp, #-140]	; 0xffffff74
    e8cc:	str	r3, [fp, #-40]	; 0xffffffd8
    e8d0:	sub	r3, fp, #72	; 0x48
    e8d4:	str	r3, [sp]
    e8d8:	movw	r3, #0
    e8dc:	movt	r3, #0
    e8e0:	ldr	r2, [fp, #-144]	; 0xffffff70
    e8e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    e8e8:	ldr	r0, [fp, #-136]	; 0xffffff78
    e8ec:	bl	3134 <flatcc_json_parser_symbolic_float>
    e8f0:	str	r0, [fp, #-140]	; 0xffffff74
    e8f4:	ldr	r2, [fp, #-140]	; 0xffffff74
    e8f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    e8fc:	cmp	r2, r3
    e900:	beq	fa7c <MyGame_Example_TypeAliases_parse_json_table+0x1468>
    e904:	ldr	r2, [fp, #-140]	; 0xffffff74
    e908:	ldr	r3, [fp, #-144]	; 0xffffff70
    e90c:	cmp	r2, r3
    e910:	beq	fa7c <MyGame_Example_TypeAliases_parse_json_table+0x1468>
    e914:	vldr	s15, [fp, #-72]	; 0xffffffb8
    e918:	vcmp.f32	s15, #0.0
    e91c:	vmrs	APSR_nzcv, fpscr
    e920:	bne	e938 <MyGame_Example_TypeAliases_parse_json_table+0x324>
    e924:	ldr	r3, [fp, #-136]	; 0xffffff78
    e928:	ldr	r3, [r3, #8]
    e92c:	and	r3, r3, #2
    e930:	cmp	r3, #0
    e934:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e938:	ldr	r3, [fp, #-136]	; 0xffffff78
    e93c:	ldr	r0, [r3]
    e940:	mov	r3, #4
    e944:	mov	r2, #4
    e948:	mov	r1, #8
    e94c:	bl	0 <flatcc_builder_table_add>
    e950:	str	r0, [fp, #-44]	; 0xffffffd4
    e954:	ldr	r3, [fp, #-44]	; 0xffffffd4
    e958:	cmp	r3, #0
    e95c:	beq	fa84 <MyGame_Example_TypeAliases_parse_json_table+0x1470>
    e960:	vldr	s15, [fp, #-72]	; 0xffffffb8
    e964:	vmov.f32	s0, s15
    e968:	ldr	r0, [fp, #-44]	; 0xffffffd4
    e96c:	bl	3a8 <flatbuffers_float_write_to_pe>
    e970:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e974:	ldr	r2, [fp, #-144]	; 0xffffff70
    e978:	ldr	r1, [fp, #-140]	; 0xffffff74
    e97c:	ldr	r0, [fp, #-136]	; 0xffffff78
    e980:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e984:	str	r0, [fp, #-140]	; 0xffffff74
    e988:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e98c:	ldr	r2, [fp, #-144]	; 0xffffff70
    e990:	ldr	r1, [fp, #-140]	; 0xffffff74
    e994:	ldr	r0, [fp, #-136]	; 0xffffff78
    e998:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e99c:	str	r0, [fp, #-140]	; 0xffffff74
    e9a0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    e9a4:	nop	{0}
    e9a8:	.word	0xffffffff
    e9ac:	.word	0x693135ff
    e9b0:	.word	0x00000000
    e9b4:	.word	0x66363400
    e9b8:	.word	0x00000000
    e9bc:	.word	0x66333200
    e9c0:	.word	0xffffffff
    e9c4:	.word	0x693331ff
    e9c8:	.word	0x00000000
    e9cc:	.word	0x69313600
    e9d0:	.word	0x00000000
    e9d4:	.word	0x69363400
    e9d8:	.word	0x00000000
    e9dc:	.word	0x69333200
    e9e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e9e4:	sub	r3, pc, #44	; 0x2c
    e9e8:	ldrd	r2, [r3]
    e9ec:	cmp	r1, r3
    e9f0:	cmpeq	r0, r2
    e9f4:	bhi	eb60 <MyGame_Example_TypeAliases_parse_json_table+0x54c>
    e9f8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    e9fc:	mov	r2, #0
    ea00:	mvn	r3, #255	; 0xff
    ea04:	and	r8, r0, r2
    ea08:	and	r9, r1, r3
    ea0c:	sub	r3, pc, #76	; 0x4c
    ea10:	ldrd	r2, [r3]
    ea14:	cmp	r9, r3
    ea18:	cmpeq	r8, r2
    ea1c:	bne	eb48 <MyGame_Example_TypeAliases_parse_json_table+0x534>
    ea20:	ldr	r3, [fp, #-140]	; 0xffffff74
    ea24:	str	r3, [fp, #-40]	; 0xffffffd8
    ea28:	mov	r3, #3
    ea2c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ea30:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ea34:	ldr	r0, [fp, #-136]	; 0xffffff78
    ea38:	bl	f54 <flatcc_json_parser_match_symbol>
    ea3c:	str	r0, [fp, #-140]	; 0xffffff74
    ea40:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ea44:	ldr	r3, [fp, #-140]	; 0xffffff74
    ea48:	cmp	r2, r3
    ea4c:	beq	eb30 <MyGame_Example_TypeAliases_parse_json_table+0x51c>
    ea50:	mov	r3, #0
    ea54:	strh	r3, [fp, #-74]	; 0xffffffb6
    ea58:	ldr	r3, [fp, #-140]	; 0xffffff74
    ea5c:	str	r3, [fp, #-40]	; 0xffffffd8
    ea60:	sub	r3, fp, #74	; 0x4a
    ea64:	ldr	r2, [fp, #-144]	; 0xffffff70
    ea68:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ea6c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ea70:	bl	1d38 <flatcc_json_parser_int16>
    ea74:	str	r0, [fp, #-140]	; 0xffffff74
    ea78:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ea7c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ea80:	cmp	r2, r3
    ea84:	bne	ead4 <MyGame_Example_TypeAliases_parse_json_table+0x4c0>
    ea88:	ldr	r3, [fp, #-140]	; 0xffffff74
    ea8c:	str	r3, [fp, #-40]	; 0xffffffd8
    ea90:	sub	r3, fp, #74	; 0x4a
    ea94:	str	r3, [sp]
    ea98:	movw	r3, #0
    ea9c:	movt	r3, #0
    eaa0:	ldr	r2, [fp, #-144]	; 0xffffff70
    eaa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    eaa8:	ldr	r0, [fp, #-136]	; 0xffffff78
    eaac:	bl	2b70 <flatcc_json_parser_symbolic_int16>
    eab0:	str	r0, [fp, #-140]	; 0xffffff74
    eab4:	ldr	r2, [fp, #-140]	; 0xffffff74
    eab8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    eabc:	cmp	r2, r3
    eac0:	beq	fa8c <MyGame_Example_TypeAliases_parse_json_table+0x1478>
    eac4:	ldr	r2, [fp, #-140]	; 0xffffff74
    eac8:	ldr	r3, [fp, #-144]	; 0xffffff70
    eacc:	cmp	r2, r3
    ead0:	beq	fa8c <MyGame_Example_TypeAliases_parse_json_table+0x1478>
    ead4:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
    ead8:	cmp	r3, #0
    eadc:	bne	eaf4 <MyGame_Example_TypeAliases_parse_json_table+0x4e0>
    eae0:	ldr	r3, [fp, #-136]	; 0xffffff78
    eae4:	ldr	r3, [r3, #8]
    eae8:	and	r3, r3, #2
    eaec:	cmp	r3, #0
    eaf0:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    eaf4:	ldr	r3, [fp, #-136]	; 0xffffff78
    eaf8:	ldr	r0, [r3]
    eafc:	mov	r3, #2
    eb00:	mov	r2, #2
    eb04:	mov	r1, #2
    eb08:	bl	0 <flatcc_builder_table_add>
    eb0c:	str	r0, [fp, #-44]	; 0xffffffd4
    eb10:	ldr	r3, [fp, #-44]	; 0xffffffd4
    eb14:	cmp	r3, #0
    eb18:	beq	fa94 <MyGame_Example_TypeAliases_parse_json_table+0x1480>
    eb1c:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
    eb20:	mov	r1, r3
    eb24:	ldr	r0, [fp, #-44]	; 0xffffffd4
    eb28:	bl	254 <flatbuffers_int16_write_to_pe>
    eb2c:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    eb30:	ldr	r2, [fp, #-144]	; 0xffffff70
    eb34:	ldr	r1, [fp, #-140]	; 0xffffff74
    eb38:	ldr	r0, [fp, #-136]	; 0xffffff78
    eb3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb40:	str	r0, [fp, #-140]	; 0xffffff74
    eb44:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    eb48:	ldr	r2, [fp, #-144]	; 0xffffff70
    eb4c:	ldr	r1, [fp, #-140]	; 0xffffff74
    eb50:	ldr	r0, [fp, #-136]	; 0xffffff78
    eb54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb58:	str	r0, [fp, #-140]	; 0xffffff74
    eb5c:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    eb60:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    eb64:	mov	r2, #0
    eb68:	mvn	r3, #255	; 0xff
    eb6c:	and	ip, r0, r2
    eb70:	str	ip, [fp, #-156]	; 0xffffff64
    eb74:	and	r3, r1, r3
    eb78:	str	r3, [fp, #-152]	; 0xffffff68
    eb7c:	sub	r3, pc, #436	; 0x1b4
    eb80:	ldrd	r2, [r3]
    eb84:	ldrd	r0, [fp, #-156]	; 0xffffff64
    eb88:	cmp	r1, r3
    eb8c:	cmpeq	r0, r2
    eb90:	bne	ecbc <MyGame_Example_TypeAliases_parse_json_table+0x6a8>
    eb94:	ldr	r3, [fp, #-140]	; 0xffffff74
    eb98:	str	r3, [fp, #-40]	; 0xffffffd8
    eb9c:	mov	r3, #3
    eba0:	ldr	r2, [fp, #-144]	; 0xffffff70
    eba4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    eba8:	ldr	r0, [fp, #-136]	; 0xffffff78
    ebac:	bl	f54 <flatcc_json_parser_match_symbol>
    ebb0:	str	r0, [fp, #-140]	; 0xffffff74
    ebb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ebb8:	ldr	r3, [fp, #-140]	; 0xffffff74
    ebbc:	cmp	r2, r3
    ebc0:	beq	eca4 <MyGame_Example_TypeAliases_parse_json_table+0x690>
    ebc4:	mov	r2, #0
    ebc8:	mov	r3, #0
    ebcc:	strd	r2, [fp, #-84]	; 0xffffffac
    ebd0:	ldr	r3, [fp, #-140]	; 0xffffff74
    ebd4:	str	r3, [fp, #-40]	; 0xffffffd8
    ebd8:	sub	r3, fp, #84	; 0x54
    ebdc:	ldr	r2, [fp, #-144]	; 0xffffff70
    ebe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ebe4:	ldr	r0, [fp, #-136]	; 0xffffff78
    ebe8:	bl	1b7c <flatcc_json_parser_int64>
    ebec:	str	r0, [fp, #-140]	; 0xffffff74
    ebf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ebf4:	ldr	r3, [fp, #-140]	; 0xffffff74
    ebf8:	cmp	r2, r3
    ebfc:	bne	ec4c <MyGame_Example_TypeAliases_parse_json_table+0x638>
    ec00:	ldr	r3, [fp, #-140]	; 0xffffff74
    ec04:	str	r3, [fp, #-40]	; 0xffffffd8
    ec08:	sub	r3, fp, #84	; 0x54
    ec0c:	str	r3, [sp]
    ec10:	movw	r3, #0
    ec14:	movt	r3, #0
    ec18:	ldr	r2, [fp, #-144]	; 0xffffff70
    ec1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ec20:	ldr	r0, [fp, #-136]	; 0xffffff78
    ec24:	bl	279c <flatcc_json_parser_symbolic_int64>
    ec28:	str	r0, [fp, #-140]	; 0xffffff74
    ec2c:	ldr	r2, [fp, #-140]	; 0xffffff74
    ec30:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ec34:	cmp	r2, r3
    ec38:	beq	fa9c <MyGame_Example_TypeAliases_parse_json_table+0x1488>
    ec3c:	ldr	r2, [fp, #-140]	; 0xffffff74
    ec40:	ldr	r3, [fp, #-144]	; 0xffffff70
    ec44:	cmp	r2, r3
    ec48:	beq	fa9c <MyGame_Example_TypeAliases_parse_json_table+0x1488>
    ec4c:	ldrd	r2, [fp, #-84]	; 0xffffffac
    ec50:	orrs	r3, r2, r3
    ec54:	bne	ec6c <MyGame_Example_TypeAliases_parse_json_table+0x658>
    ec58:	ldr	r3, [fp, #-136]	; 0xffffff78
    ec5c:	ldr	r3, [r3, #8]
    ec60:	and	r3, r3, #2
    ec64:	cmp	r3, #0
    ec68:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ec6c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ec70:	ldr	r0, [r3]
    ec74:	mov	r3, #8
    ec78:	mov	r2, #8
    ec7c:	mov	r1, #6
    ec80:	bl	0 <flatcc_builder_table_add>
    ec84:	str	r0, [fp, #-44]	; 0xffffffd4
    ec88:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ec8c:	cmp	r3, #0
    ec90:	beq	faa4 <MyGame_Example_TypeAliases_parse_json_table+0x1490>
    ec94:	ldrd	r2, [fp, #-84]	; 0xffffffac
    ec98:	ldr	r0, [fp, #-44]	; 0xffffffd4
    ec9c:	bl	32c <flatbuffers_int64_write_to_pe>
    eca0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    eca4:	ldr	r2, [fp, #-144]	; 0xffffff70
    eca8:	ldr	r1, [fp, #-140]	; 0xffffff74
    ecac:	ldr	r0, [fp, #-136]	; 0xffffff78
    ecb0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ecb4:	str	r0, [fp, #-140]	; 0xffffff74
    ecb8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ecbc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ecc0:	mov	r2, #0
    ecc4:	mvn	r3, #255	; 0xff
    ecc8:	and	ip, r0, r2
    eccc:	str	ip, [fp, #-164]	; 0xffffff5c
    ecd0:	and	r3, r1, r3
    ecd4:	str	r3, [fp, #-160]	; 0xffffff60
    ecd8:	sub	r3, pc, #776	; 0x308
    ecdc:	ldrd	r2, [r3]
    ece0:	ldrd	r0, [fp, #-164]	; 0xffffff5c
    ece4:	cmp	r1, r3
    ece8:	cmpeq	r0, r2
    ecec:	bne	ee18 <MyGame_Example_TypeAliases_parse_json_table+0x804>
    ecf0:	ldr	r3, [fp, #-140]	; 0xffffff74
    ecf4:	str	r3, [fp, #-40]	; 0xffffffd8
    ecf8:	mov	r3, #3
    ecfc:	ldr	r2, [fp, #-144]	; 0xffffff70
    ed00:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ed04:	ldr	r0, [fp, #-136]	; 0xffffff78
    ed08:	bl	f54 <flatcc_json_parser_match_symbol>
    ed0c:	str	r0, [fp, #-140]	; 0xffffff74
    ed10:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ed14:	ldr	r3, [fp, #-140]	; 0xffffff74
    ed18:	cmp	r2, r3
    ed1c:	beq	ee00 <MyGame_Example_TypeAliases_parse_json_table+0x7ec>
    ed20:	mov	r3, #0
    ed24:	str	r3, [fp, #-88]	; 0xffffffa8
    ed28:	ldr	r3, [fp, #-140]	; 0xffffff74
    ed2c:	str	r3, [fp, #-40]	; 0xffffffd8
    ed30:	sub	r3, fp, #88	; 0x58
    ed34:	ldr	r2, [fp, #-144]	; 0xffffff70
    ed38:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ed3c:	ldr	r0, [fp, #-136]	; 0xffffff78
    ed40:	bl	1c5c <flatcc_json_parser_int32>
    ed44:	str	r0, [fp, #-140]	; 0xffffff74
    ed48:	ldr	r2, [fp, #-40]	; 0xffffffd8
    ed4c:	ldr	r3, [fp, #-140]	; 0xffffff74
    ed50:	cmp	r2, r3
    ed54:	bne	eda4 <MyGame_Example_TypeAliases_parse_json_table+0x790>
    ed58:	ldr	r3, [fp, #-140]	; 0xffffff74
    ed5c:	str	r3, [fp, #-40]	; 0xffffffd8
    ed60:	sub	r3, fp, #88	; 0x58
    ed64:	str	r3, [sp]
    ed68:	movw	r3, #0
    ed6c:	movt	r3, #0
    ed70:	ldr	r2, [fp, #-144]	; 0xffffff70
    ed74:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ed78:	ldr	r0, [fp, #-136]	; 0xffffff78
    ed7c:	bl	2990 <flatcc_json_parser_symbolic_int32>
    ed80:	str	r0, [fp, #-140]	; 0xffffff74
    ed84:	ldr	r2, [fp, #-140]	; 0xffffff74
    ed88:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ed8c:	cmp	r2, r3
    ed90:	beq	faac <MyGame_Example_TypeAliases_parse_json_table+0x1498>
    ed94:	ldr	r2, [fp, #-140]	; 0xffffff74
    ed98:	ldr	r3, [fp, #-144]	; 0xffffff70
    ed9c:	cmp	r2, r3
    eda0:	beq	faac <MyGame_Example_TypeAliases_parse_json_table+0x1498>
    eda4:	ldr	r3, [fp, #-88]	; 0xffffffa8
    eda8:	cmp	r3, #0
    edac:	bne	edc4 <MyGame_Example_TypeAliases_parse_json_table+0x7b0>
    edb0:	ldr	r3, [fp, #-136]	; 0xffffff78
    edb4:	ldr	r3, [r3, #8]
    edb8:	and	r3, r3, #2
    edbc:	cmp	r3, #0
    edc0:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    edc4:	ldr	r3, [fp, #-136]	; 0xffffff78
    edc8:	ldr	r0, [r3]
    edcc:	mov	r3, #4
    edd0:	mov	r2, #4
    edd4:	mov	r1, #4
    edd8:	bl	0 <flatcc_builder_table_add>
    eddc:	str	r0, [fp, #-44]	; 0xffffffd4
    ede0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ede4:	cmp	r3, #0
    ede8:	beq	fab4 <MyGame_Example_TypeAliases_parse_json_table+0x14a0>
    edec:	ldr	r3, [fp, #-88]	; 0xffffffa8
    edf0:	mov	r1, r3
    edf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    edf8:	bl	2c4 <flatbuffers_int32_write_to_pe>
    edfc:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ee00:	ldr	r2, [fp, #-144]	; 0xffffff70
    ee04:	ldr	r1, [fp, #-140]	; 0xffffff74
    ee08:	ldr	r0, [fp, #-136]	; 0xffffff78
    ee0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee10:	str	r0, [fp, #-140]	; 0xffffff74
    ee14:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ee18:	ldr	r2, [fp, #-144]	; 0xffffff70
    ee1c:	ldr	r1, [fp, #-140]	; 0xffffff74
    ee20:	ldr	r0, [fp, #-136]	; 0xffffff78
    ee24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ee28:	str	r0, [fp, #-140]	; 0xffffff74
    ee2c:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ee30:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ee34:	add	r3, pc, #764	; 0x2fc
    ee38:	ldrd	r2, [r3]
    ee3c:	cmp	r1, r3
    ee40:	cmpeq	r0, r2
    ee44:	bhi	f2d4 <MyGame_Example_TypeAliases_parse_json_table+0xcc0>
    ee48:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ee4c:	add	r3, pc, #748	; 0x2ec
    ee50:	ldrd	r2, [r3]
    ee54:	cmp	r1, r3
    ee58:	cmpeq	r0, r2
    ee5c:	bhi	efdc <MyGame_Example_TypeAliases_parse_json_table+0x9c8>
    ee60:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    ee64:	mov	r2, #0
    ee68:	mov	r3, #0
    ee6c:	movt	r3, #65535	; 0xffff
    ee70:	and	ip, r0, r2
    ee74:	str	ip, [fp, #-172]	; 0xffffff54
    ee78:	and	r3, r1, r3
    ee7c:	str	r3, [fp, #-168]	; 0xffffff58
    ee80:	mov	r2, #0
    ee84:	mov	r3, #0
    ee88:	movt	r3, #26936	; 0x6938
    ee8c:	ldrd	r0, [fp, #-172]	; 0xffffff54
    ee90:	cmp	r1, r3
    ee94:	cmpeq	r0, r2
    ee98:	bne	efc4 <MyGame_Example_TypeAliases_parse_json_table+0x9b0>
    ee9c:	ldr	r3, [fp, #-140]	; 0xffffff74
    eea0:	str	r3, [fp, #-40]	; 0xffffffd8
    eea4:	mov	r3, #2
    eea8:	ldr	r2, [fp, #-144]	; 0xffffff70
    eeac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    eeb0:	ldr	r0, [fp, #-136]	; 0xffffff78
    eeb4:	bl	f54 <flatcc_json_parser_match_symbol>
    eeb8:	str	r0, [fp, #-140]	; 0xffffff74
    eebc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    eec0:	ldr	r3, [fp, #-140]	; 0xffffff74
    eec4:	cmp	r2, r3
    eec8:	beq	efac <MyGame_Example_TypeAliases_parse_json_table+0x998>
    eecc:	mov	r3, #0
    eed0:	strb	r3, [fp, #-89]	; 0xffffffa7
    eed4:	ldr	r3, [fp, #-140]	; 0xffffff74
    eed8:	str	r3, [fp, #-40]	; 0xffffffd8
    eedc:	sub	r3, fp, #89	; 0x59
    eee0:	ldr	r2, [fp, #-144]	; 0xffffff70
    eee4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    eee8:	ldr	r0, [fp, #-136]	; 0xffffff78
    eeec:	bl	1e14 <flatcc_json_parser_int8>
    eef0:	str	r0, [fp, #-140]	; 0xffffff74
    eef4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    eef8:	ldr	r3, [fp, #-140]	; 0xffffff74
    eefc:	cmp	r2, r3
    ef00:	bne	ef50 <MyGame_Example_TypeAliases_parse_json_table+0x93c>
    ef04:	ldr	r3, [fp, #-140]	; 0xffffff74
    ef08:	str	r3, [fp, #-40]	; 0xffffffd8
    ef0c:	sub	r3, fp, #89	; 0x59
    ef10:	str	r3, [sp]
    ef14:	movw	r3, #0
    ef18:	movt	r3, #0
    ef1c:	ldr	r2, [fp, #-144]	; 0xffffff70
    ef20:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ef24:	ldr	r0, [fp, #-136]	; 0xffffff78
    ef28:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    ef2c:	str	r0, [fp, #-140]	; 0xffffff74
    ef30:	ldr	r2, [fp, #-140]	; 0xffffff74
    ef34:	ldr	r3, [fp, #-40]	; 0xffffffd8
    ef38:	cmp	r2, r3
    ef3c:	beq	fabc <MyGame_Example_TypeAliases_parse_json_table+0x14a8>
    ef40:	ldr	r2, [fp, #-140]	; 0xffffff74
    ef44:	ldr	r3, [fp, #-144]	; 0xffffff70
    ef48:	cmp	r2, r3
    ef4c:	beq	fabc <MyGame_Example_TypeAliases_parse_json_table+0x14a8>
    ef50:	ldrsb	r3, [fp, #-89]	; 0xffffffa7
    ef54:	cmp	r3, #0
    ef58:	bne	ef70 <MyGame_Example_TypeAliases_parse_json_table+0x95c>
    ef5c:	ldr	r3, [fp, #-136]	; 0xffffff78
    ef60:	ldr	r3, [r3, #8]
    ef64:	and	r3, r3, #2
    ef68:	cmp	r3, #0
    ef6c:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    ef70:	ldr	r3, [fp, #-136]	; 0xffffff78
    ef74:	ldr	r0, [r3]
    ef78:	mov	r3, #1
    ef7c:	mov	r2, #1
    ef80:	mov	r1, #0
    ef84:	bl	0 <flatcc_builder_table_add>
    ef88:	str	r0, [fp, #-44]	; 0xffffffd4
    ef8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ef90:	cmp	r3, #0
    ef94:	beq	fac4 <MyGame_Example_TypeAliases_parse_json_table+0x14b0>
    ef98:	ldrsb	r3, [fp, #-89]	; 0xffffffa7
    ef9c:	mov	r1, r3
    efa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    efa4:	bl	1e0 <flatbuffers_int8_write_to_pe>
    efa8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    efac:	ldr	r2, [fp, #-144]	; 0xffffff70
    efb0:	ldr	r1, [fp, #-140]	; 0xffffff74
    efb4:	ldr	r0, [fp, #-136]	; 0xffffff78
    efb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    efbc:	str	r0, [fp, #-140]	; 0xffffff74
    efc0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    efc4:	ldr	r2, [fp, #-144]	; 0xffffff70
    efc8:	ldr	r1, [fp, #-140]	; 0xffffff74
    efcc:	ldr	r0, [fp, #-136]	; 0xffffff78
    efd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    efd4:	str	r0, [fp, #-140]	; 0xffffff74
    efd8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    efdc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    efe0:	mov	r2, #0
    efe4:	mvn	r3, #255	; 0xff
    efe8:	and	ip, r0, r2
    efec:	str	ip, [fp, #-180]	; 0xffffff4c
    eff0:	and	r3, r1, r3
    eff4:	str	r3, [fp, #-176]	; 0xffffff50
    eff8:	add	r3, pc, #328	; 0x148
    effc:	ldrd	r2, [r3]
    f000:	ldrd	r0, [fp, #-180]	; 0xffffff4c
    f004:	cmp	r1, r3
    f008:	cmpeq	r0, r2
    f00c:	bne	f160 <MyGame_Example_TypeAliases_parse_json_table+0xb4c>
    f010:	ldr	r3, [fp, #-140]	; 0xffffff74
    f014:	str	r3, [fp, #-40]	; 0xffffffd8
    f018:	mov	r3, #3
    f01c:	ldr	r2, [fp, #-144]	; 0xffffff70
    f020:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f024:	ldr	r0, [fp, #-136]	; 0xffffff78
    f028:	bl	f54 <flatcc_json_parser_match_symbol>
    f02c:	str	r0, [fp, #-140]	; 0xffffff74
    f030:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f034:	ldr	r3, [fp, #-140]	; 0xffffff74
    f038:	cmp	r2, r3
    f03c:	beq	f120 <MyGame_Example_TypeAliases_parse_json_table+0xb0c>
    f040:	mov	r3, #0
    f044:	str	r3, [fp, #-96]	; 0xffffffa0
    f048:	ldr	r3, [fp, #-140]	; 0xffffff74
    f04c:	str	r3, [fp, #-40]	; 0xffffffd8
    f050:	sub	r3, fp, #96	; 0x60
    f054:	ldr	r2, [fp, #-144]	; 0xffffff70
    f058:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f05c:	ldr	r0, [fp, #-136]	; 0xffffff78
    f060:	bl	18e8 <flatcc_json_parser_uint32>
    f064:	str	r0, [fp, #-140]	; 0xffffff74
    f068:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f06c:	ldr	r3, [fp, #-140]	; 0xffffff74
    f070:	cmp	r2, r3
    f074:	bne	f0c4 <MyGame_Example_TypeAliases_parse_json_table+0xab0>
    f078:	ldr	r3, [fp, #-140]	; 0xffffff74
    f07c:	str	r3, [fp, #-40]	; 0xffffffd8
    f080:	sub	r3, fp, #96	; 0x60
    f084:	str	r3, [sp]
    f088:	movw	r3, #0
    f08c:	movt	r3, #0
    f090:	ldr	r2, [fp, #-144]	; 0xffffff70
    f094:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f098:	ldr	r0, [fp, #-136]	; 0xffffff78
    f09c:	bl	21f4 <flatcc_json_parser_symbolic_uint32>
    f0a0:	str	r0, [fp, #-140]	; 0xffffff74
    f0a4:	ldr	r2, [fp, #-140]	; 0xffffff74
    f0a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f0ac:	cmp	r2, r3
    f0b0:	beq	facc <MyGame_Example_TypeAliases_parse_json_table+0x14b8>
    f0b4:	ldr	r2, [fp, #-140]	; 0xffffff74
    f0b8:	ldr	r3, [fp, #-144]	; 0xffffff70
    f0bc:	cmp	r2, r3
    f0c0:	beq	facc <MyGame_Example_TypeAliases_parse_json_table+0x14b8>
    f0c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
    f0c8:	cmp	r3, #0
    f0cc:	bne	f0e4 <MyGame_Example_TypeAliases_parse_json_table+0xad0>
    f0d0:	ldr	r3, [fp, #-136]	; 0xffffff78
    f0d4:	ldr	r3, [r3, #8]
    f0d8:	and	r3, r3, #2
    f0dc:	cmp	r3, #0
    f0e0:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f0e4:	ldr	r3, [fp, #-136]	; 0xffffff78
    f0e8:	ldr	r0, [r3]
    f0ec:	mov	r3, #4
    f0f0:	mov	r2, #4
    f0f4:	mov	r1, #5
    f0f8:	bl	0 <flatcc_builder_table_add>
    f0fc:	str	r0, [fp, #-44]	; 0xffffffd4
    f100:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f104:	cmp	r3, #0
    f108:	beq	fad4 <MyGame_Example_TypeAliases_parse_json_table+0x14c0>
    f10c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    f110:	mov	r1, r3
    f114:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f118:	bl	10c <flatbuffers_uint32_write_to_pe>
    f11c:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f120:	ldr	r2, [fp, #-144]	; 0xffffff70
    f124:	ldr	r1, [fp, #-140]	; 0xffffff74
    f128:	ldr	r0, [fp, #-136]	; 0xffffff78
    f12c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f130:	str	r0, [fp, #-140]	; 0xffffff74
    f134:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f138:	.word	0xffffffff
    f13c:	.word	0x753633ff
    f140:	.word	0xffffffff
    f144:	.word	0x753135ff
    f148:	.word	0x00000000
    f14c:	.word	0x75333200
    f150:	.word	0x00000000
    f154:	.word	0x75313600
    f158:	.word	0x00000000
    f15c:	.word	0x75363400
    f160:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f164:	mov	r2, #0
    f168:	mvn	r3, #255	; 0xff
    f16c:	and	ip, r0, r2
    f170:	str	ip, [fp, #-188]	; 0xffffff44
    f174:	and	r3, r1, r3
    f178:	str	r3, [fp, #-184]	; 0xffffff48
    f17c:	sub	r3, pc, #52	; 0x34
    f180:	ldrd	r2, [r3]
    f184:	ldrd	r0, [fp, #-188]	; 0xffffff44
    f188:	cmp	r1, r3
    f18c:	cmpeq	r0, r2
    f190:	bne	f2bc <MyGame_Example_TypeAliases_parse_json_table+0xca8>
    f194:	ldr	r3, [fp, #-140]	; 0xffffff74
    f198:	str	r3, [fp, #-40]	; 0xffffffd8
    f19c:	mov	r3, #3
    f1a0:	ldr	r2, [fp, #-144]	; 0xffffff70
    f1a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f1a8:	ldr	r0, [fp, #-136]	; 0xffffff78
    f1ac:	bl	f54 <flatcc_json_parser_match_symbol>
    f1b0:	str	r0, [fp, #-140]	; 0xffffff74
    f1b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f1b8:	ldr	r3, [fp, #-140]	; 0xffffff74
    f1bc:	cmp	r2, r3
    f1c0:	beq	f2a4 <MyGame_Example_TypeAliases_parse_json_table+0xc90>
    f1c4:	mov	r3, #0
    f1c8:	strh	r3, [fp, #-98]	; 0xffffff9e
    f1cc:	ldr	r3, [fp, #-140]	; 0xffffff74
    f1d0:	str	r3, [fp, #-40]	; 0xffffffd8
    f1d4:	sub	r3, fp, #98	; 0x62
    f1d8:	ldr	r2, [fp, #-144]	; 0xffffff70
    f1dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f1e0:	ldr	r0, [fp, #-136]	; 0xffffff78
    f1e4:	bl	19c4 <flatcc_json_parser_uint16>
    f1e8:	str	r0, [fp, #-140]	; 0xffffff74
    f1ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f1f0:	ldr	r3, [fp, #-140]	; 0xffffff74
    f1f4:	cmp	r2, r3
    f1f8:	bne	f248 <MyGame_Example_TypeAliases_parse_json_table+0xc34>
    f1fc:	ldr	r3, [fp, #-140]	; 0xffffff74
    f200:	str	r3, [fp, #-40]	; 0xffffffd8
    f204:	sub	r3, fp, #98	; 0x62
    f208:	str	r3, [sp]
    f20c:	movw	r3, #0
    f210:	movt	r3, #0
    f214:	ldr	r2, [fp, #-144]	; 0xffffff70
    f218:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f21c:	ldr	r0, [fp, #-136]	; 0xffffff78
    f220:	bl	23d4 <flatcc_json_parser_symbolic_uint16>
    f224:	str	r0, [fp, #-140]	; 0xffffff74
    f228:	ldr	r2, [fp, #-140]	; 0xffffff74
    f22c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f230:	cmp	r2, r3
    f234:	beq	fadc <MyGame_Example_TypeAliases_parse_json_table+0x14c8>
    f238:	ldr	r2, [fp, #-140]	; 0xffffff74
    f23c:	ldr	r3, [fp, #-144]	; 0xffffff70
    f240:	cmp	r2, r3
    f244:	beq	fadc <MyGame_Example_TypeAliases_parse_json_table+0x14c8>
    f248:	ldrh	r3, [fp, #-98]	; 0xffffff9e
    f24c:	cmp	r3, #0
    f250:	bne	f268 <MyGame_Example_TypeAliases_parse_json_table+0xc54>
    f254:	ldr	r3, [fp, #-136]	; 0xffffff78
    f258:	ldr	r3, [r3, #8]
    f25c:	and	r3, r3, #2
    f260:	cmp	r3, #0
    f264:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f268:	ldr	r3, [fp, #-136]	; 0xffffff78
    f26c:	ldr	r0, [r3]
    f270:	mov	r3, #2
    f274:	mov	r2, #2
    f278:	mov	r1, #3
    f27c:	bl	0 <flatcc_builder_table_add>
    f280:	str	r0, [fp, #-44]	; 0xffffffd4
    f284:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f288:	cmp	r3, #0
    f28c:	beq	fae4 <MyGame_Example_TypeAliases_parse_json_table+0x14d0>
    f290:	ldrh	r3, [fp, #-98]	; 0xffffff9e
    f294:	mov	r1, r3
    f298:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f29c:	bl	9c <flatbuffers_uint16_write_to_pe>
    f2a0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f2a4:	ldr	r2, [fp, #-144]	; 0xffffff70
    f2a8:	ldr	r1, [fp, #-140]	; 0xffffff74
    f2ac:	ldr	r0, [fp, #-136]	; 0xffffff78
    f2b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2b4:	str	r0, [fp, #-140]	; 0xffffff74
    f2b8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f2bc:	ldr	r2, [fp, #-144]	; 0xffffff70
    f2c0:	ldr	r1, [fp, #-140]	; 0xffffff74
    f2c4:	ldr	r0, [fp, #-136]	; 0xffffff78
    f2c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2cc:	str	r0, [fp, #-140]	; 0xffffff74
    f2d0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f2d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f2d8:	mvn	r2, #0
    f2dc:	movw	r3, #65535	; 0xffff
    f2e0:	movt	r3, #30007	; 0x7537
    f2e4:	cmp	r1, r3
    f2e8:	cmpeq	r0, r2
    f2ec:	bhi	f464 <MyGame_Example_TypeAliases_parse_json_table+0xe50>
    f2f0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f2f4:	mov	r2, #0
    f2f8:	mvn	r3, #255	; 0xff
    f2fc:	and	ip, r0, r2
    f300:	str	ip, [fp, #-196]	; 0xffffff3c
    f304:	and	r3, r1, r3
    f308:	str	r3, [fp, #-192]	; 0xffffff40
    f30c:	sub	r3, pc, #444	; 0x1bc
    f310:	ldrd	r2, [r3]
    f314:	ldrd	r0, [fp, #-196]	; 0xffffff3c
    f318:	cmp	r1, r3
    f31c:	cmpeq	r0, r2
    f320:	bne	f44c <MyGame_Example_TypeAliases_parse_json_table+0xe38>
    f324:	ldr	r3, [fp, #-140]	; 0xffffff74
    f328:	str	r3, [fp, #-40]	; 0xffffffd8
    f32c:	mov	r3, #3
    f330:	ldr	r2, [fp, #-144]	; 0xffffff70
    f334:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f338:	ldr	r0, [fp, #-136]	; 0xffffff78
    f33c:	bl	f54 <flatcc_json_parser_match_symbol>
    f340:	str	r0, [fp, #-140]	; 0xffffff74
    f344:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f348:	ldr	r3, [fp, #-140]	; 0xffffff74
    f34c:	cmp	r2, r3
    f350:	beq	f434 <MyGame_Example_TypeAliases_parse_json_table+0xe20>
    f354:	mov	r2, #0
    f358:	mov	r3, #0
    f35c:	strd	r2, [fp, #-108]	; 0xffffff94
    f360:	ldr	r3, [fp, #-140]	; 0xffffff74
    f364:	str	r3, [fp, #-40]	; 0xffffffd8
    f368:	sub	r3, fp, #108	; 0x6c
    f36c:	ldr	r2, [fp, #-144]	; 0xffffff70
    f370:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f374:	ldr	r0, [fp, #-136]	; 0xffffff78
    f378:	bl	1808 <flatcc_json_parser_uint64>
    f37c:	str	r0, [fp, #-140]	; 0xffffff74
    f380:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f384:	ldr	r3, [fp, #-140]	; 0xffffff74
    f388:	cmp	r2, r3
    f38c:	bne	f3dc <MyGame_Example_TypeAliases_parse_json_table+0xdc8>
    f390:	ldr	r3, [fp, #-140]	; 0xffffff74
    f394:	str	r3, [fp, #-40]	; 0xffffffd8
    f398:	sub	r3, fp, #108	; 0x6c
    f39c:	str	r3, [sp]
    f3a0:	movw	r3, #0
    f3a4:	movt	r3, #0
    f3a8:	ldr	r2, [fp, #-144]	; 0xffffff70
    f3ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f3b0:	ldr	r0, [fp, #-136]	; 0xffffff78
    f3b4:	bl	2000 <flatcc_json_parser_symbolic_uint64>
    f3b8:	str	r0, [fp, #-140]	; 0xffffff74
    f3bc:	ldr	r2, [fp, #-140]	; 0xffffff74
    f3c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f3c4:	cmp	r2, r3
    f3c8:	beq	faec <MyGame_Example_TypeAliases_parse_json_table+0x14d8>
    f3cc:	ldr	r2, [fp, #-140]	; 0xffffff74
    f3d0:	ldr	r3, [fp, #-144]	; 0xffffff70
    f3d4:	cmp	r2, r3
    f3d8:	beq	faec <MyGame_Example_TypeAliases_parse_json_table+0x14d8>
    f3dc:	ldrd	r2, [fp, #-108]	; 0xffffff94
    f3e0:	orrs	r3, r2, r3
    f3e4:	bne	f3fc <MyGame_Example_TypeAliases_parse_json_table+0xde8>
    f3e8:	ldr	r3, [fp, #-136]	; 0xffffff78
    f3ec:	ldr	r3, [r3, #8]
    f3f0:	and	r3, r3, #2
    f3f4:	cmp	r3, #0
    f3f8:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f3fc:	ldr	r3, [fp, #-136]	; 0xffffff78
    f400:	ldr	r0, [r3]
    f404:	mov	r3, #8
    f408:	mov	r2, #8
    f40c:	mov	r1, #7
    f410:	bl	0 <flatcc_builder_table_add>
    f414:	str	r0, [fp, #-44]	; 0xffffffd4
    f418:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f41c:	cmp	r3, #0
    f420:	beq	faf4 <MyGame_Example_TypeAliases_parse_json_table+0x14e0>
    f424:	ldrd	r2, [fp, #-108]	; 0xffffff94
    f428:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f42c:	bl	174 <flatbuffers_uint64_write_to_pe>
    f430:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f434:	ldr	r2, [fp, #-144]	; 0xffffff70
    f438:	ldr	r1, [fp, #-140]	; 0xffffff74
    f43c:	ldr	r0, [fp, #-136]	; 0xffffff78
    f440:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f444:	str	r0, [fp, #-140]	; 0xffffff74
    f448:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f44c:	ldr	r2, [fp, #-144]	; 0xffffff70
    f450:	ldr	r1, [fp, #-140]	; 0xffffff74
    f454:	ldr	r0, [fp, #-136]	; 0xffffff78
    f458:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f45c:	str	r0, [fp, #-140]	; 0xffffff74
    f460:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f464:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f468:	mvn	r2, #0
    f46c:	movw	r3, #65535	; 0xffff
    f470:	movt	r3, #30263	; 0x7637
    f474:	cmp	r1, r3
    f478:	cmpeq	r0, r2
    f47c:	bhi	f5fc <MyGame_Example_TypeAliases_parse_json_table+0xfe8>
    f480:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f484:	mov	r2, #0
    f488:	mov	r3, #0
    f48c:	movt	r3, #65535	; 0xffff
    f490:	and	ip, r0, r2
    f494:	str	ip, [fp, #-204]	; 0xffffff34
    f498:	and	r3, r1, r3
    f49c:	str	r3, [fp, #-200]	; 0xffffff38
    f4a0:	mov	r2, #0
    f4a4:	mov	r3, #0
    f4a8:	movt	r3, #30008	; 0x7538
    f4ac:	ldrd	r0, [fp, #-204]	; 0xffffff34
    f4b0:	cmp	r1, r3
    f4b4:	cmpeq	r0, r2
    f4b8:	bne	f5e4 <MyGame_Example_TypeAliases_parse_json_table+0xfd0>
    f4bc:	ldr	r3, [fp, #-140]	; 0xffffff74
    f4c0:	str	r3, [fp, #-40]	; 0xffffffd8
    f4c4:	mov	r3, #2
    f4c8:	ldr	r2, [fp, #-144]	; 0xffffff70
    f4cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f4d0:	ldr	r0, [fp, #-136]	; 0xffffff78
    f4d4:	bl	f54 <flatcc_json_parser_match_symbol>
    f4d8:	str	r0, [fp, #-140]	; 0xffffff74
    f4dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f4e0:	ldr	r3, [fp, #-140]	; 0xffffff74
    f4e4:	cmp	r2, r3
    f4e8:	beq	f5cc <MyGame_Example_TypeAliases_parse_json_table+0xfb8>
    f4ec:	mov	r3, #0
    f4f0:	strb	r3, [fp, #-109]	; 0xffffff93
    f4f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    f4f8:	str	r3, [fp, #-40]	; 0xffffffd8
    f4fc:	sub	r3, fp, #109	; 0x6d
    f500:	ldr	r2, [fp, #-144]	; 0xffffff70
    f504:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f508:	ldr	r0, [fp, #-136]	; 0xffffff78
    f50c:	bl	1aa0 <flatcc_json_parser_uint8>
    f510:	str	r0, [fp, #-140]	; 0xffffff74
    f514:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f518:	ldr	r3, [fp, #-140]	; 0xffffff74
    f51c:	cmp	r2, r3
    f520:	bne	f570 <MyGame_Example_TypeAliases_parse_json_table+0xf5c>
    f524:	ldr	r3, [fp, #-140]	; 0xffffff74
    f528:	str	r3, [fp, #-40]	; 0xffffffd8
    f52c:	sub	r3, fp, #109	; 0x6d
    f530:	str	r3, [sp]
    f534:	movw	r3, #0
    f538:	movt	r3, #0
    f53c:	ldr	r2, [fp, #-144]	; 0xffffff70
    f540:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f544:	ldr	r0, [fp, #-136]	; 0xffffff78
    f548:	bl	25b8 <flatcc_json_parser_symbolic_uint8>
    f54c:	str	r0, [fp, #-140]	; 0xffffff74
    f550:	ldr	r2, [fp, #-140]	; 0xffffff74
    f554:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f558:	cmp	r2, r3
    f55c:	beq	fafc <MyGame_Example_TypeAliases_parse_json_table+0x14e8>
    f560:	ldr	r2, [fp, #-140]	; 0xffffff74
    f564:	ldr	r3, [fp, #-144]	; 0xffffff70
    f568:	cmp	r2, r3
    f56c:	beq	fafc <MyGame_Example_TypeAliases_parse_json_table+0x14e8>
    f570:	ldrb	r3, [fp, #-109]	; 0xffffff93
    f574:	cmp	r3, #0
    f578:	bne	f590 <MyGame_Example_TypeAliases_parse_json_table+0xf7c>
    f57c:	ldr	r3, [fp, #-136]	; 0xffffff78
    f580:	ldr	r3, [r3, #8]
    f584:	and	r3, r3, #2
    f588:	cmp	r3, #0
    f58c:	beq	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f590:	ldr	r3, [fp, #-136]	; 0xffffff78
    f594:	ldr	r0, [r3]
    f598:	mov	r3, #1
    f59c:	mov	r2, #1
    f5a0:	mov	r1, #1
    f5a4:	bl	0 <flatcc_builder_table_add>
    f5a8:	str	r0, [fp, #-44]	; 0xffffffd4
    f5ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f5b0:	cmp	r3, #0
    f5b4:	beq	fb04 <MyGame_Example_TypeAliases_parse_json_table+0x14f0>
    f5b8:	ldrb	r3, [fp, #-109]	; 0xffffff93
    f5bc:	mov	r1, r3
    f5c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f5c4:	bl	28 <flatbuffers_uint8_write_to_pe>
    f5c8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f5cc:	ldr	r2, [fp, #-144]	; 0xffffff70
    f5d0:	ldr	r1, [fp, #-140]	; 0xffffff74
    f5d4:	ldr	r0, [fp, #-136]	; 0xffffff78
    f5d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f5dc:	str	r0, [fp, #-140]	; 0xffffff74
    f5e0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f5e4:	ldr	r2, [fp, #-144]	; 0xffffff70
    f5e8:	ldr	r1, [fp, #-140]	; 0xffffff74
    f5ec:	ldr	r0, [fp, #-136]	; 0xffffff78
    f5f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f5f4:	str	r0, [fp, #-140]	; 0xffffff74
    f5f8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f5fc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f600:	mov	r2, #0
    f604:	mvn	r3, #0
    f608:	and	ip, r0, r2
    f60c:	str	ip, [fp, #-212]	; 0xffffff2c
    f610:	and	r3, r1, r3
    f614:	str	r3, [fp, #-208]	; 0xffffff30
    f618:	add	r3, pc, #960	; 0x3c0
    f61c:	ldrd	r2, [r3]
    f620:	ldrd	r0, [fp, #-212]	; 0xffffff2c
    f624:	cmp	r1, r3
    f628:	cmpeq	r0, r2
    f62c:	bne	f7ec <MyGame_Example_TypeAliases_parse_json_table+0x11d8>
    f630:	ldr	r3, [fp, #-140]	; 0xffffff74
    f634:	str	r3, [fp, #-40]	; 0xffffffd8
    f638:	mov	r3, #4
    f63c:	ldr	r2, [fp, #-144]	; 0xffffff70
    f640:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f644:	ldr	r0, [fp, #-136]	; 0xffffff78
    f648:	bl	f54 <flatcc_json_parser_match_symbol>
    f64c:	str	r0, [fp, #-140]	; 0xffffff74
    f650:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f654:	ldr	r3, [fp, #-140]	; 0xffffff74
    f658:	cmp	r2, r3
    f65c:	beq	f7d4 <MyGame_Example_TypeAliases_parse_json_table+0x11c0>
    f660:	ldr	r3, [fp, #-136]	; 0xffffff78
    f664:	ldr	r0, [r3]
    f668:	mvn	r3, #-536870912	; 0xe0000000
    f66c:	mov	r2, #8
    f670:	mov	r1, #8
    f674:	bl	0 <flatcc_builder_start_vector>
    f678:	mov	r3, r0
    f67c:	cmp	r3, #0
    f680:	bne	fb0c <MyGame_Example_TypeAliases_parse_json_table+0x14f8>
    f684:	sub	r3, fp, #56	; 0x38
    f688:	ldr	r2, [fp, #-144]	; 0xffffff70
    f68c:	ldr	r1, [fp, #-140]	; 0xffffff74
    f690:	ldr	r0, [fp, #-136]	; 0xffffff78
    f694:	bl	cec <flatcc_json_parser_array_start>
    f698:	str	r0, [fp, #-140]	; 0xffffff74
    f69c:	b	f774 <MyGame_Example_TypeAliases_parse_json_table+0x1160>
    f6a0:	mov	r2, #0
    f6a4:	mov	r3, #0
    f6a8:	strd	r2, [fp, #-124]	; 0xffffff84
    f6ac:	ldr	r3, [fp, #-136]	; 0xffffff78
    f6b0:	ldr	r3, [r3]
    f6b4:	mov	r1, #1
    f6b8:	mov	r0, r3
    f6bc:	bl	0 <flatcc_builder_extend_vector>
    f6c0:	str	r0, [fp, #-44]	; 0xffffffd4
    f6c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f6c8:	cmp	r3, #0
    f6cc:	beq	fb14 <MyGame_Example_TypeAliases_parse_json_table+0x1500>
    f6d0:	ldr	r3, [fp, #-140]	; 0xffffff74
    f6d4:	str	r3, [fp, #-40]	; 0xffffffd8
    f6d8:	sub	r3, fp, #124	; 0x7c
    f6dc:	ldr	r2, [fp, #-144]	; 0xffffff70
    f6e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f6e4:	ldr	r0, [fp, #-136]	; 0xffffff78
    f6e8:	bl	0 <flatcc_json_parser_double>
    f6ec:	str	r0, [fp, #-140]	; 0xffffff74
    f6f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f6f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    f6f8:	cmp	r2, r3
    f6fc:	bne	f74c <MyGame_Example_TypeAliases_parse_json_table+0x1138>
    f700:	ldr	r3, [fp, #-140]	; 0xffffff74
    f704:	str	r3, [fp, #-40]	; 0xffffffd8
    f708:	sub	r3, fp, #124	; 0x7c
    f70c:	str	r3, [sp]
    f710:	movw	r3, #0
    f714:	movt	r3, #0
    f718:	ldr	r2, [fp, #-144]	; 0xffffff70
    f71c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f720:	ldr	r0, [fp, #-136]	; 0xffffff78
    f724:	bl	3314 <flatcc_json_parser_symbolic_double>
    f728:	str	r0, [fp, #-140]	; 0xffffff74
    f72c:	ldr	r2, [fp, #-140]	; 0xffffff74
    f730:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f734:	cmp	r2, r3
    f738:	beq	fb1c <MyGame_Example_TypeAliases_parse_json_table+0x1508>
    f73c:	ldr	r2, [fp, #-140]	; 0xffffff74
    f740:	ldr	r3, [fp, #-144]	; 0xffffff70
    f744:	cmp	r2, r3
    f748:	beq	fb1c <MyGame_Example_TypeAliases_parse_json_table+0x1508>
    f74c:	vldr	d7, [fp, #-124]	; 0xffffff84
    f750:	vmov.f64	d0, d7
    f754:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f758:	bl	420 <flatbuffers_double_write_to_pe>
    f75c:	sub	r3, fp, #56	; 0x38
    f760:	ldr	r2, [fp, #-144]	; 0xffffff70
    f764:	ldr	r1, [fp, #-140]	; 0xffffff74
    f768:	ldr	r0, [fp, #-136]	; 0xffffff78
    f76c:	bl	de0 <flatcc_json_parser_array_end>
    f770:	str	r0, [fp, #-140]	; 0xffffff74
    f774:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f778:	cmp	r3, #0
    f77c:	bne	f6a0 <MyGame_Example_TypeAliases_parse_json_table+0x108c>
    f780:	ldr	r3, [fp, #-136]	; 0xffffff78
    f784:	ldr	r3, [r3]
    f788:	mov	r0, r3
    f78c:	bl	0 <flatcc_builder_end_vector>
    f790:	str	r0, [fp, #-48]	; 0xffffffd0
    f794:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f798:	cmp	r3, #0
    f79c:	beq	fb24 <MyGame_Example_TypeAliases_parse_json_table+0x1510>
    f7a0:	ldr	r3, [fp, #-136]	; 0xffffff78
    f7a4:	ldr	r3, [r3]
    f7a8:	mov	r1, #11
    f7ac:	mov	r0, r3
    f7b0:	bl	0 <flatcc_builder_table_add_offset>
    f7b4:	str	r0, [fp, #-52]	; 0xffffffcc
    f7b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f7bc:	cmp	r3, #0
    f7c0:	beq	fb24 <MyGame_Example_TypeAliases_parse_json_table+0x1510>
    f7c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    f7c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f7cc:	str	r3, [r2]
    f7d0:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f7d4:	ldr	r2, [fp, #-144]	; 0xffffff70
    f7d8:	ldr	r1, [fp, #-140]	; 0xffffff74
    f7dc:	ldr	r0, [fp, #-136]	; 0xffffff78
    f7e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f7e4:	str	r0, [fp, #-140]	; 0xffffff74
    f7e8:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f7ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
    f7f0:	mov	r2, #0
    f7f4:	mov	r3, #0
    f7f8:	movt	r3, #65535	; 0xffff
    f7fc:	and	ip, r0, r2
    f800:	str	ip, [fp, #-220]	; 0xffffff24
    f804:	and	r3, r1, r3
    f808:	str	r3, [fp, #-216]	; 0xffffff28
    f80c:	mov	r2, #0
    f810:	mov	r3, #0
    f814:	movt	r3, #30264	; 0x7638
    f818:	ldrd	r0, [fp, #-220]	; 0xffffff24
    f81c:	cmp	r1, r3
    f820:	cmpeq	r0, r2
    f824:	bne	f9e8 <MyGame_Example_TypeAliases_parse_json_table+0x13d4>
    f828:	ldr	r3, [fp, #-140]	; 0xffffff74
    f82c:	str	r3, [fp, #-40]	; 0xffffffd8
    f830:	mov	r3, #2
    f834:	ldr	r2, [fp, #-144]	; 0xffffff70
    f838:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f83c:	ldr	r0, [fp, #-136]	; 0xffffff78
    f840:	bl	f54 <flatcc_json_parser_match_symbol>
    f844:	str	r0, [fp, #-140]	; 0xffffff74
    f848:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f84c:	ldr	r3, [fp, #-140]	; 0xffffff74
    f850:	cmp	r2, r3
    f854:	beq	f9c8 <MyGame_Example_TypeAliases_parse_json_table+0x13b4>
    f858:	ldr	r3, [fp, #-136]	; 0xffffff78
    f85c:	ldr	r0, [r3]
    f860:	mvn	r3, #0
    f864:	mov	r2, #1
    f868:	mov	r1, #1
    f86c:	bl	0 <flatcc_builder_start_vector>
    f870:	mov	r3, r0
    f874:	cmp	r3, #0
    f878:	bne	fb2c <MyGame_Example_TypeAliases_parse_json_table+0x1518>
    f87c:	sub	r3, fp, #56	; 0x38
    f880:	ldr	r2, [fp, #-144]	; 0xffffff70
    f884:	ldr	r1, [fp, #-140]	; 0xffffff74
    f888:	ldr	r0, [fp, #-136]	; 0xffffff78
    f88c:	bl	cec <flatcc_json_parser_array_start>
    f890:	str	r0, [fp, #-140]	; 0xffffff74
    f894:	b	f968 <MyGame_Example_TypeAliases_parse_json_table+0x1354>
    f898:	mov	r3, #0
    f89c:	strb	r3, [fp, #-125]	; 0xffffff83
    f8a0:	ldr	r3, [fp, #-136]	; 0xffffff78
    f8a4:	ldr	r3, [r3]
    f8a8:	mov	r1, #1
    f8ac:	mov	r0, r3
    f8b0:	bl	0 <flatcc_builder_extend_vector>
    f8b4:	str	r0, [fp, #-44]	; 0xffffffd4
    f8b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    f8bc:	cmp	r3, #0
    f8c0:	beq	fb34 <MyGame_Example_TypeAliases_parse_json_table+0x1520>
    f8c4:	ldr	r3, [fp, #-140]	; 0xffffff74
    f8c8:	str	r3, [fp, #-40]	; 0xffffffd8
    f8cc:	sub	r3, fp, #125	; 0x7d
    f8d0:	ldr	r2, [fp, #-144]	; 0xffffff70
    f8d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f8d8:	ldr	r0, [fp, #-136]	; 0xffffff78
    f8dc:	bl	1e14 <flatcc_json_parser_int8>
    f8e0:	str	r0, [fp, #-140]	; 0xffffff74
    f8e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f8e8:	ldr	r3, [fp, #-140]	; 0xffffff74
    f8ec:	cmp	r2, r3
    f8f0:	bne	f940 <MyGame_Example_TypeAliases_parse_json_table+0x132c>
    f8f4:	ldr	r3, [fp, #-140]	; 0xffffff74
    f8f8:	str	r3, [fp, #-40]	; 0xffffffd8
    f8fc:	sub	r3, fp, #125	; 0x7d
    f900:	str	r3, [sp]
    f904:	movw	r3, #0
    f908:	movt	r3, #0
    f90c:	ldr	r2, [fp, #-144]	; 0xffffff70
    f910:	ldr	r1, [fp, #-40]	; 0xffffffd8
    f914:	ldr	r0, [fp, #-136]	; 0xffffff78
    f918:	bl	2d60 <flatcc_json_parser_symbolic_int8>
    f91c:	str	r0, [fp, #-140]	; 0xffffff74
    f920:	ldr	r2, [fp, #-140]	; 0xffffff74
    f924:	ldr	r3, [fp, #-40]	; 0xffffffd8
    f928:	cmp	r2, r3
    f92c:	beq	fb3c <MyGame_Example_TypeAliases_parse_json_table+0x1528>
    f930:	ldr	r2, [fp, #-140]	; 0xffffff74
    f934:	ldr	r3, [fp, #-144]	; 0xffffff70
    f938:	cmp	r2, r3
    f93c:	beq	fb3c <MyGame_Example_TypeAliases_parse_json_table+0x1528>
    f940:	ldrsb	r3, [fp, #-125]	; 0xffffff83
    f944:	mov	r1, r3
    f948:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f94c:	bl	1e0 <flatbuffers_int8_write_to_pe>
    f950:	sub	r3, fp, #56	; 0x38
    f954:	ldr	r2, [fp, #-144]	; 0xffffff70
    f958:	ldr	r1, [fp, #-140]	; 0xffffff74
    f95c:	ldr	r0, [fp, #-136]	; 0xffffff78
    f960:	bl	de0 <flatcc_json_parser_array_end>
    f964:	str	r0, [fp, #-140]	; 0xffffff74
    f968:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f96c:	cmp	r3, #0
    f970:	bne	f898 <MyGame_Example_TypeAliases_parse_json_table+0x1284>
    f974:	ldr	r3, [fp, #-136]	; 0xffffff78
    f978:	ldr	r3, [r3]
    f97c:	mov	r0, r3
    f980:	bl	0 <flatcc_builder_end_vector>
    f984:	str	r0, [fp, #-48]	; 0xffffffd0
    f988:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f98c:	cmp	r3, #0
    f990:	beq	fb44 <MyGame_Example_TypeAliases_parse_json_table+0x1530>
    f994:	ldr	r3, [fp, #-136]	; 0xffffff78
    f998:	ldr	r3, [r3]
    f99c:	mov	r1, #10
    f9a0:	mov	r0, r3
    f9a4:	bl	0 <flatcc_builder_table_add_offset>
    f9a8:	str	r0, [fp, #-52]	; 0xffffffcc
    f9ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f9b0:	cmp	r3, #0
    f9b4:	beq	fb44 <MyGame_Example_TypeAliases_parse_json_table+0x1530>
    f9b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    f9bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f9c0:	str	r3, [r2]
    f9c4:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f9c8:	ldr	r2, [fp, #-144]	; 0xffffff70
    f9cc:	ldr	r1, [fp, #-140]	; 0xffffff74
    f9d0:	ldr	r0, [fp, #-136]	; 0xffffff78
    f9d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9d8:	str	r0, [fp, #-140]	; 0xffffff74
    f9dc:	b	f9fc <MyGame_Example_TypeAliases_parse_json_table+0x13e8>
    f9e0:	.word	0x00000000
    f9e4:	.word	0x76663634
    f9e8:	ldr	r2, [fp, #-144]	; 0xffffff70
    f9ec:	ldr	r1, [fp, #-140]	; 0xffffff74
    f9f0:	ldr	r0, [fp, #-136]	; 0xffffff78
    f9f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9f8:	str	r0, [fp, #-140]	; 0xffffff74
    f9fc:	sub	r3, fp, #56	; 0x38
    fa00:	ldr	r2, [fp, #-144]	; 0xffffff70
    fa04:	ldr	r1, [fp, #-140]	; 0xffffff74
    fa08:	ldr	r0, [fp, #-136]	; 0xffffff78
    fa0c:	bl	b78 <flatcc_json_parser_object_end>
    fa10:	str	r0, [fp, #-140]	; 0xffffff74
    fa14:	ldr	r3, [fp, #-56]	; 0xffffffc8
    fa18:	cmp	r3, #0
    fa1c:	bne	e688 <MyGame_Example_TypeAliases_parse_json_table+0x74>
    fa20:	ldr	r3, [fp, #-136]	; 0xffffff78
    fa24:	ldr	r3, [r3, #24]
    fa28:	cmp	r3, #0
    fa2c:	bne	fb4c <MyGame_Example_TypeAliases_parse_json_table+0x1538>
    fa30:	ldr	r3, [fp, #-136]	; 0xffffff78
    fa34:	ldr	r3, [r3]
    fa38:	mov	r0, r3
    fa3c:	bl	0 <flatcc_builder_end_table>
    fa40:	mov	r2, r0
    fa44:	ldr	r3, [fp, #-148]	; 0xffffff6c
    fa48:	str	r2, [r3]
    fa4c:	ldr	r3, [fp, #-148]	; 0xffffff6c
    fa50:	ldr	r3, [r3]
    fa54:	cmp	r3, #0
    fa58:	beq	fb54 <MyGame_Example_TypeAliases_parse_json_table+0x1540>
    fa5c:	ldr	r3, [fp, #-140]	; 0xffffff74
    fa60:	b	fb70 <MyGame_Example_TypeAliases_parse_json_table+0x155c>
    fa64:	nop	{0}
    fa68:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa6c:	nop	{0}
    fa70:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa74:	nop	{0}
    fa78:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa7c:	nop	{0}
    fa80:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa84:	nop	{0}
    fa88:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa8c:	nop	{0}
    fa90:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa94:	nop	{0}
    fa98:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fa9c:	nop	{0}
    faa0:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    faa4:	nop	{0}
    faa8:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    faac:	nop	{0}
    fab0:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fab4:	nop	{0}
    fab8:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fabc:	nop	{0}
    fac0:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fac4:	nop	{0}
    fac8:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    facc:	nop	{0}
    fad0:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fad4:	nop	{0}
    fad8:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fadc:	nop	{0}
    fae0:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fae4:	nop	{0}
    fae8:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    faec:	nop	{0}
    faf0:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    faf4:	nop	{0}
    faf8:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fafc:	nop	{0}
    fb00:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb04:	nop	{0}
    fb08:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb0c:	nop	{0}
    fb10:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb14:	nop	{0}
    fb18:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb1c:	nop	{0}
    fb20:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb24:	nop	{0}
    fb28:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb2c:	nop	{0}
    fb30:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb34:	nop	{0}
    fb38:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb3c:	nop	{0}
    fb40:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb44:	nop	{0}
    fb48:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb4c:	nop	{0}
    fb50:	b	fb58 <MyGame_Example_TypeAliases_parse_json_table+0x1544>
    fb54:	nop	{0}
    fb58:	mov	r3, #33	; 0x21
    fb5c:	ldr	r2, [fp, #-144]	; 0xffffff70
    fb60:	ldr	r1, [fp, #-140]	; 0xffffff74
    fb64:	ldr	r0, [fp, #-136]	; 0xffffff78
    fb68:	bl	0 <flatcc_json_parser_set_error>
    fb6c:	mov	r3, r0
    fb70:	mov	r0, r3
    fb74:	sub	sp, fp, #28
    fb78:	ldrd	r4, [sp]
    fb7c:	ldrd	r6, [sp, #8]
    fb80:	ldrd	r8, [sp, #16]
    fb84:	ldr	fp, [sp, #24]
    fb88:	add	sp, sp, #28
    fb8c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fb90 <Fantasy_Attacker_parse_json_table>:
    fb90:	strd	r4, [sp, #-16]!
    fb94:	str	fp, [sp, #8]
    fb98:	str	lr, [sp, #12]
    fb9c:	add	fp, sp, #12
    fba0:	sub	sp, sp, #48	; 0x30
    fba4:	str	r0, [fp, #-40]	; 0xffffffd8
    fba8:	str	r1, [fp, #-44]	; 0xffffffd4
    fbac:	str	r2, [fp, #-48]	; 0xffffffd0
    fbb0:	str	r3, [fp, #-52]	; 0xffffffcc
    fbb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fbb8:	mov	r2, #0
    fbbc:	str	r2, [r3]
    fbc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fbc4:	ldr	r3, [r3]
    fbc8:	mov	r1, #1
    fbcc:	mov	r0, r3
    fbd0:	bl	0 <flatcc_builder_start_table>
    fbd4:	mov	r3, r0
    fbd8:	cmp	r3, #0
    fbdc:	bne	fe84 <Fantasy_Attacker_parse_json_table+0x2f4>
    fbe0:	sub	r3, fp, #32
    fbe4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fbe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fbec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fbf0:	bl	a84 <flatcc_json_parser_object_start>
    fbf4:	str	r0, [fp, #-44]	; 0xffffffd4
    fbf8:	b	fe34 <Fantasy_Attacker_parse_json_table+0x2a4>
    fbfc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fc00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fc04:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fc08:	bl	60c <flatcc_json_parser_symbol_start>
    fc0c:	str	r0, [fp, #-44]	; 0xffffffd4
    fc10:	ldr	r1, [fp, #-48]	; 0xffffffd0
    fc14:	ldr	r0, [fp, #-44]	; 0xffffffd4
    fc18:	bl	940 <flatcc_json_parser_symbol_part>
    fc1c:	strd	r0, [fp, #-20]	; 0xffffffec
    fc20:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fc24:	add	r1, pc, #684	; 0x2ac
    fc28:	ldrd	r0, [r1]
    fc2c:	cmp	r3, r1
    fc30:	cmpeq	r2, r0
    fc34:	bne	fe08 <Fantasy_Attacker_parse_json_table+0x278>
    fc38:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fc3c:	add	r3, r3, #8
    fc40:	str	r3, [fp, #-44]	; 0xffffffd4
    fc44:	ldr	r1, [fp, #-48]	; 0xffffffd0
    fc48:	ldr	r0, [fp, #-44]	; 0xffffffd4
    fc4c:	bl	940 <flatcc_json_parser_symbol_part>
    fc50:	strd	r0, [fp, #-20]	; 0xffffffec
    fc54:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fc58:	add	r1, pc, #640	; 0x280
    fc5c:	ldrd	r0, [r1]
    fc60:	cmp	r3, r1
    fc64:	cmpeq	r2, r0
    fc68:	bne	fdf0 <Fantasy_Attacker_parse_json_table+0x260>
    fc6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fc70:	add	r3, r3, #8
    fc74:	str	r3, [fp, #-44]	; 0xffffffd4
    fc78:	ldr	r1, [fp, #-48]	; 0xffffffd0
    fc7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    fc80:	bl	940 <flatcc_json_parser_symbol_part>
    fc84:	strd	r0, [fp, #-20]	; 0xffffffec
    fc88:	ldrd	r2, [fp, #-20]	; 0xffffffec
    fc8c:	mov	r0, #0
    fc90:	mvn	r1, #255	; 0xff
    fc94:	and	r4, r2, r0
    fc98:	and	r5, r3, r1
    fc9c:	add	r3, pc, #580	; 0x244
    fca0:	ldrd	r2, [r3]
    fca4:	cmp	r5, r3
    fca8:	cmpeq	r4, r2
    fcac:	bne	fdd8 <Fantasy_Attacker_parse_json_table+0x248>
    fcb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fcb4:	str	r3, [fp, #-24]	; 0xffffffe8
    fcb8:	mov	r3, #3
    fcbc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fcc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fcc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fcc8:	bl	f54 <flatcc_json_parser_match_symbol>
    fccc:	str	r0, [fp, #-44]	; 0xffffffd4
    fcd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fcd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fcd8:	cmp	r2, r3
    fcdc:	beq	fdc0 <Fantasy_Attacker_parse_json_table+0x230>
    fce0:	mov	r3, #0
    fce4:	str	r3, [fp, #-36]	; 0xffffffdc
    fce8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fcec:	str	r3, [fp, #-24]	; 0xffffffe8
    fcf0:	sub	r3, fp, #36	; 0x24
    fcf4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fcf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fcfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fd00:	bl	1c5c <flatcc_json_parser_int32>
    fd04:	str	r0, [fp, #-44]	; 0xffffffd4
    fd08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    fd0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fd10:	cmp	r2, r3
    fd14:	bne	fd64 <Fantasy_Attacker_parse_json_table+0x1d4>
    fd18:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fd1c:	str	r3, [fp, #-24]	; 0xffffffe8
    fd20:	sub	r3, fp, #36	; 0x24
    fd24:	str	r3, [sp]
    fd28:	movw	r3, #0
    fd2c:	movt	r3, #0
    fd30:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fd34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    fd38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fd3c:	bl	2990 <flatcc_json_parser_symbolic_int32>
    fd40:	str	r0, [fp, #-44]	; 0xffffffd4
    fd44:	ldr	r2, [fp, #-44]	; 0xffffffd4
    fd48:	ldr	r3, [fp, #-24]	; 0xffffffe8
    fd4c:	cmp	r2, r3
    fd50:	beq	fe8c <Fantasy_Attacker_parse_json_table+0x2fc>
    fd54:	ldr	r2, [fp, #-44]	; 0xffffffd4
    fd58:	ldr	r3, [fp, #-48]	; 0xffffffd0
    fd5c:	cmp	r2, r3
    fd60:	beq	fe8c <Fantasy_Attacker_parse_json_table+0x2fc>
    fd64:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fd68:	cmp	r3, #0
    fd6c:	bne	fd84 <Fantasy_Attacker_parse_json_table+0x1f4>
    fd70:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fd74:	ldr	r3, [r3, #8]
    fd78:	and	r3, r3, #2
    fd7c:	cmp	r3, #0
    fd80:	beq	fe1c <Fantasy_Attacker_parse_json_table+0x28c>
    fd84:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fd88:	ldr	r0, [r3]
    fd8c:	mov	r3, #4
    fd90:	mov	r2, #4
    fd94:	mov	r1, #0
    fd98:	bl	0 <flatcc_builder_table_add>
    fd9c:	str	r0, [fp, #-28]	; 0xffffffe4
    fda0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    fda4:	cmp	r3, #0
    fda8:	beq	fe94 <Fantasy_Attacker_parse_json_table+0x304>
    fdac:	ldr	r3, [fp, #-36]	; 0xffffffdc
    fdb0:	mov	r1, r3
    fdb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fdb8:	bl	2c4 <flatbuffers_int32_write_to_pe>
    fdbc:	b	fe1c <Fantasy_Attacker_parse_json_table+0x28c>
    fdc0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fdc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fdc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fdcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fdd0:	str	r0, [fp, #-44]	; 0xffffffd4
    fdd4:	b	fe1c <Fantasy_Attacker_parse_json_table+0x28c>
    fdd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fddc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fde0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fde4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fde8:	str	r0, [fp, #-44]	; 0xffffffd4
    fdec:	b	fe1c <Fantasy_Attacker_parse_json_table+0x28c>
    fdf0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fdf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fdf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fdfc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe00:	str	r0, [fp, #-44]	; 0xffffffd4
    fe04:	b	fe1c <Fantasy_Attacker_parse_json_table+0x28c>
    fe08:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fe0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fe10:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fe14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fe18:	str	r0, [fp, #-44]	; 0xffffffd4
    fe1c:	sub	r3, fp, #32
    fe20:	ldr	r2, [fp, #-48]	; 0xffffffd0
    fe24:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fe28:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fe2c:	bl	b78 <flatcc_json_parser_object_end>
    fe30:	str	r0, [fp, #-44]	; 0xffffffd4
    fe34:	ldr	r3, [fp, #-32]	; 0xffffffe0
    fe38:	cmp	r3, #0
    fe3c:	bne	fbfc <Fantasy_Attacker_parse_json_table+0x6c>
    fe40:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fe44:	ldr	r3, [r3, #24]
    fe48:	cmp	r3, #0
    fe4c:	bne	fe9c <Fantasy_Attacker_parse_json_table+0x30c>
    fe50:	ldr	r3, [fp, #-40]	; 0xffffffd8
    fe54:	ldr	r3, [r3]
    fe58:	mov	r0, r3
    fe5c:	bl	0 <flatcc_builder_end_table>
    fe60:	mov	r2, r0
    fe64:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fe68:	str	r2, [r3]
    fe6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fe70:	ldr	r3, [r3]
    fe74:	cmp	r3, #0
    fe78:	beq	fea4 <Fantasy_Attacker_parse_json_table+0x314>
    fe7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fe80:	b	fec0 <Fantasy_Attacker_parse_json_table+0x330>
    fe84:	nop	{0}
    fe88:	b	fea8 <Fantasy_Attacker_parse_json_table+0x318>
    fe8c:	nop	{0}
    fe90:	b	fea8 <Fantasy_Attacker_parse_json_table+0x318>
    fe94:	nop	{0}
    fe98:	b	fea8 <Fantasy_Attacker_parse_json_table+0x318>
    fe9c:	nop	{0}
    fea0:	b	fea8 <Fantasy_Attacker_parse_json_table+0x318>
    fea4:	nop	{0}
    fea8:	mov	r3, #33	; 0x21
    feac:	ldr	r2, [fp, #-48]	; 0xffffffd0
    feb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    feb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    feb8:	bl	0 <flatcc_json_parser_set_error>
    febc:	mov	r3, r0
    fec0:	mov	r0, r3
    fec4:	sub	sp, fp, #12
    fec8:	ldrd	r4, [sp]
    fecc:	ldr	fp, [sp, #8]
    fed0:	add	sp, sp, #12
    fed4:	pop	{pc}		; (ldr pc, [sp], #4)
    fed8:	.word	0x645f6174
    fedc:	.word	0x73776f72
    fee0:	.word	0x5f64616d
    fee4:	.word	0x7461636b
    fee8:	.word	0x00000000
    feec:	.word	0x61676500

0000fef0 <Fantasy_Rapunzel_parse_json_struct_inline>:
    fef0:	strd	r4, [sp, #-16]!
    fef4:	str	fp, [sp, #8]
    fef8:	str	lr, [sp, #12]
    fefc:	add	fp, sp, #12
    ff00:	sub	sp, sp, #48	; 0x30
    ff04:	str	r0, [fp, #-40]	; 0xffffffd8
    ff08:	str	r1, [fp, #-44]	; 0xffffffd4
    ff0c:	str	r2, [fp, #-48]	; 0xffffffd0
    ff10:	str	r3, [fp, #-52]	; 0xffffffcc
    ff14:	sub	r3, fp, #32
    ff18:	ldr	r2, [fp, #-48]	; 0xffffffd0
    ff1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    ff20:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ff24:	bl	a84 <flatcc_json_parser_object_start>
    ff28:	str	r0, [fp, #-44]	; 0xffffffd4
    ff2c:	b	100dc <Fantasy_Rapunzel_parse_json_struct_inline+0x1ec>
    ff30:	ldr	r2, [fp, #-48]	; 0xffffffd0
    ff34:	ldr	r1, [fp, #-44]	; 0xffffffd4
    ff38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ff3c:	bl	60c <flatcc_json_parser_symbol_start>
    ff40:	str	r0, [fp, #-44]	; 0xffffffd4
    ff44:	ldr	r1, [fp, #-48]	; 0xffffffd0
    ff48:	ldr	r0, [fp, #-44]	; 0xffffffd4
    ff4c:	bl	940 <flatcc_json_parser_symbol_part>
    ff50:	strd	r0, [fp, #-20]	; 0xffffffec
    ff54:	ldrd	r2, [fp, #-20]	; 0xffffffec
    ff58:	add	r1, pc, #456	; 0x1c8
    ff5c:	ldrd	r0, [r1]
    ff60:	cmp	r3, r1
    ff64:	cmpeq	r2, r0
    ff68:	bne	100b0 <Fantasy_Rapunzel_parse_json_struct_inline+0x1c0>
    ff6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ff70:	add	r3, r3, #8
    ff74:	str	r3, [fp, #-44]	; 0xffffffd4
    ff78:	ldr	r1, [fp, #-48]	; 0xffffffd0
    ff7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    ff80:	bl	940 <flatcc_json_parser_symbol_part>
    ff84:	strd	r0, [fp, #-20]	; 0xffffffec
    ff88:	ldrd	r2, [fp, #-20]	; 0xffffffec
    ff8c:	mov	r0, #0
    ff90:	mvn	r1, #255	; 0xff
    ff94:	and	r4, r2, r0
    ff98:	and	r5, r3, r1
    ff9c:	add	r3, pc, #396	; 0x18c
    ffa0:	ldrd	r2, [r3]
    ffa4:	cmp	r5, r3
    ffa8:	cmpeq	r4, r2
    ffac:	bne	10098 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a8>
    ffb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ffb4:	str	r3, [fp, #-24]	; 0xffffffe8
    ffb8:	mov	r3, #3
    ffbc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    ffc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ffc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ffc8:	bl	f54 <flatcc_json_parser_match_symbol>
    ffcc:	str	r0, [fp, #-44]	; 0xffffffd4
    ffd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ffd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    ffd8:	cmp	r2, r3
    ffdc:	beq	10080 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
    ffe0:	mov	r3, #0
    ffe4:	strh	r3, [fp, #-34]	; 0xffffffde
    ffe8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ffec:	str	r3, [fp, #-28]	; 0xffffffe4
    fff0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    fff4:	str	r3, [fp, #-24]	; 0xffffffe8
    fff8:	sub	r3, fp, #34	; 0x22
    fffc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10004:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10008:	bl	19c4 <flatcc_json_parser_uint16>
   1000c:	str	r0, [fp, #-44]	; 0xffffffd4
   10010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10014:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10018:	cmp	r2, r3
   1001c:	bne	1006c <Fantasy_Rapunzel_parse_json_struct_inline+0x17c>
   10020:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10024:	str	r3, [fp, #-24]	; 0xffffffe8
   10028:	sub	r3, fp, #34	; 0x22
   1002c:	str	r3, [sp]
   10030:	movw	r3, #0
   10034:	movt	r3, #0
   10038:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1003c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10040:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10044:	bl	23d4 <flatcc_json_parser_symbolic_uint16>
   10048:	str	r0, [fp, #-44]	; 0xffffffd4
   1004c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10054:	cmp	r2, r3
   10058:	beq	100f0 <Fantasy_Rapunzel_parse_json_struct_inline+0x200>
   1005c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10060:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10064:	cmp	r2, r3
   10068:	beq	100f0 <Fantasy_Rapunzel_parse_json_struct_inline+0x200>
   1006c:	ldrh	r3, [fp, #-34]	; 0xffffffde
   10070:	mov	r1, r3
   10074:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10078:	bl	9c <flatbuffers_uint16_write_to_pe>
   1007c:	b	100c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d4>
   10080:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10084:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10088:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1008c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10090:	str	r0, [fp, #-44]	; 0xffffffd4
   10094:	b	100c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d4>
   10098:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1009c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   100a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   100a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   100a8:	str	r0, [fp, #-44]	; 0xffffffd4
   100ac:	b	100c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d4>
   100b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   100b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   100b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   100bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   100c0:	str	r0, [fp, #-44]	; 0xffffffd4
   100c4:	sub	r3, fp, #32
   100c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   100cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   100d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   100d4:	bl	b78 <flatcc_json_parser_object_end>
   100d8:	str	r0, [fp, #-44]	; 0xffffffd4
   100dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   100e0:	cmp	r3, #0
   100e4:	bne	ff30 <Fantasy_Rapunzel_parse_json_struct_inline+0x40>
   100e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   100ec:	b	1010c <Fantasy_Rapunzel_parse_json_struct_inline+0x21c>
   100f0:	nop	{0}
   100f4:	mov	r3, #33	; 0x21
   100f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   100fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10104:	bl	0 <flatcc_json_parser_set_error>
   10108:	mov	r3, r0
   1010c:	mov	r0, r3
   10110:	sub	sp, fp, #12
   10114:	ldrd	r4, [sp]
   10118:	ldr	fp, [sp, #8]
   1011c:	add	sp, sp, #12
   10120:	pop	{pc}		; (ldr pc, [sp], #4)
   10124:	nop	{0}
   10128:	.word	0x5f6c656e
   1012c:	.word	0x68616972
   10130:	.word	0x00000000
   10134:	.word	0x67746800

00010138 <Fantasy_Rapunzel_parse_json_struct>:
   10138:	str	fp, [sp, #-8]!
   1013c:	str	lr, [sp, #4]
   10140:	add	fp, sp, #4
   10144:	sub	sp, sp, #24
   10148:	str	r0, [fp, #-16]
   1014c:	str	r1, [fp, #-20]	; 0xffffffec
   10150:	str	r2, [fp, #-24]	; 0xffffffe8
   10154:	str	r3, [fp, #-28]	; 0xffffffe4
   10158:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1015c:	mov	r2, #0
   10160:	str	r2, [r3]
   10164:	ldr	r3, [fp, #-16]
   10168:	ldr	r3, [r3]
   1016c:	mov	r2, #2
   10170:	mov	r1, #2
   10174:	mov	r0, r3
   10178:	bl	0 <flatcc_builder_start_struct>
   1017c:	str	r0, [fp, #-8]
   10180:	ldr	r3, [fp, #-8]
   10184:	cmp	r3, #0
   10188:	beq	101e8 <Fantasy_Rapunzel_parse_json_struct+0xb0>
   1018c:	ldr	r3, [fp, #-8]
   10190:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10194:	ldr	r1, [fp, #-20]	; 0xffffffec
   10198:	ldr	r0, [fp, #-16]
   1019c:	bl	fef0 <Fantasy_Rapunzel_parse_json_struct_inline>
   101a0:	str	r0, [fp, #-20]	; 0xffffffec
   101a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   101a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   101ac:	cmp	r2, r3
   101b0:	beq	101f0 <Fantasy_Rapunzel_parse_json_struct+0xb8>
   101b4:	ldr	r3, [fp, #-16]
   101b8:	ldr	r3, [r3]
   101bc:	mov	r0, r3
   101c0:	bl	0 <flatcc_builder_end_struct>
   101c4:	mov	r2, r0
   101c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   101cc:	str	r2, [r3]
   101d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   101d4:	ldr	r3, [r3]
   101d8:	cmp	r3, #0
   101dc:	beq	101f0 <Fantasy_Rapunzel_parse_json_struct+0xb8>
   101e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   101e4:	b	1020c <Fantasy_Rapunzel_parse_json_struct+0xd4>
   101e8:	nop	{0}
   101ec:	b	101f4 <Fantasy_Rapunzel_parse_json_struct+0xbc>
   101f0:	nop	{0}
   101f4:	mov	r3, #33	; 0x21
   101f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   101fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   10200:	ldr	r0, [fp, #-16]
   10204:	bl	0 <flatcc_json_parser_set_error>
   10208:	mov	r3, r0
   1020c:	mov	r0, r3
   10210:	sub	sp, fp, #4
   10214:	ldr	fp, [sp]
   10218:	add	sp, sp, #4
   1021c:	pop	{pc}		; (ldr pc, [sp], #4)

00010220 <Fantasy_BookReader_parse_json_struct_inline>:
   10220:	strd	r4, [sp, #-16]!
   10224:	str	fp, [sp, #8]
   10228:	str	lr, [sp, #12]
   1022c:	add	fp, sp, #12
   10230:	sub	sp, sp, #48	; 0x30
   10234:	str	r0, [fp, #-40]	; 0xffffffd8
   10238:	str	r1, [fp, #-44]	; 0xffffffd4
   1023c:	str	r2, [fp, #-48]	; 0xffffffd0
   10240:	str	r3, [fp, #-52]	; 0xffffffcc
   10244:	sub	r3, fp, #32
   10248:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1024c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10250:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10254:	bl	a84 <flatcc_json_parser_object_start>
   10258:	str	r0, [fp, #-44]	; 0xffffffd4
   1025c:	b	10414 <Fantasy_BookReader_parse_json_struct_inline+0x1f4>
   10260:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10264:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10268:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1026c:	bl	60c <flatcc_json_parser_symbol_start>
   10270:	str	r0, [fp, #-44]	; 0xffffffd4
   10274:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1027c:	bl	940 <flatcc_json_parser_symbol_part>
   10280:	strd	r0, [fp, #-20]	; 0xffffffec
   10284:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10288:	add	r1, pc, #464	; 0x1d0
   1028c:	ldrd	r0, [r1]
   10290:	cmp	r3, r1
   10294:	cmpeq	r2, r0
   10298:	bne	103e8 <Fantasy_BookReader_parse_json_struct_inline+0x1c8>
   1029c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   102a0:	add	r3, r3, #8
   102a4:	str	r3, [fp, #-44]	; 0xffffffd4
   102a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   102ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   102b0:	bl	940 <flatcc_json_parser_symbol_part>
   102b4:	strd	r0, [fp, #-20]	; 0xffffffec
   102b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   102bc:	mov	r0, #0
   102c0:	mov	r1, #0
   102c4:	movt	r1, #65535	; 0xffff
   102c8:	and	r4, r2, r0
   102cc:	and	r5, r3, r1
   102d0:	mov	r2, #0
   102d4:	mov	r3, #0
   102d8:	movt	r3, #24932	; 0x6164
   102dc:	cmp	r5, r3
   102e0:	cmpeq	r4, r2
   102e4:	bne	103d0 <Fantasy_BookReader_parse_json_struct_inline+0x1b0>
   102e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   102ec:	str	r3, [fp, #-24]	; 0xffffffe8
   102f0:	mov	r3, #2
   102f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   102f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   102fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10300:	bl	f54 <flatcc_json_parser_match_symbol>
   10304:	str	r0, [fp, #-44]	; 0xffffffd4
   10308:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1030c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10310:	cmp	r2, r3
   10314:	beq	103b8 <Fantasy_BookReader_parse_json_struct_inline+0x198>
   10318:	mov	r3, #0
   1031c:	str	r3, [fp, #-36]	; 0xffffffdc
   10320:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10324:	str	r3, [fp, #-28]	; 0xffffffe4
   10328:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1032c:	str	r3, [fp, #-24]	; 0xffffffe8
   10330:	sub	r3, fp, #36	; 0x24
   10334:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1033c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10340:	bl	1c5c <flatcc_json_parser_int32>
   10344:	str	r0, [fp, #-44]	; 0xffffffd4
   10348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1034c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10350:	cmp	r2, r3
   10354:	bne	103a4 <Fantasy_BookReader_parse_json_struct_inline+0x184>
   10358:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1035c:	str	r3, [fp, #-24]	; 0xffffffe8
   10360:	sub	r3, fp, #36	; 0x24
   10364:	str	r3, [sp]
   10368:	movw	r3, #0
   1036c:	movt	r3, #0
   10370:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1037c:	bl	2990 <flatcc_json_parser_symbolic_int32>
   10380:	str	r0, [fp, #-44]	; 0xffffffd4
   10384:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1038c:	cmp	r2, r3
   10390:	beq	10428 <Fantasy_BookReader_parse_json_struct_inline+0x208>
   10394:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10398:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1039c:	cmp	r2, r3
   103a0:	beq	10428 <Fantasy_BookReader_parse_json_struct_inline+0x208>
   103a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   103a8:	mov	r1, r3
   103ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   103b0:	bl	2c4 <flatbuffers_int32_write_to_pe>
   103b4:	b	103fc <Fantasy_BookReader_parse_json_struct_inline+0x1dc>
   103b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   103bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   103c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   103c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   103c8:	str	r0, [fp, #-44]	; 0xffffffd4
   103cc:	b	103fc <Fantasy_BookReader_parse_json_struct_inline+0x1dc>
   103d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   103d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   103d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   103dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   103e0:	str	r0, [fp, #-44]	; 0xffffffd4
   103e4:	b	103fc <Fantasy_BookReader_parse_json_struct_inline+0x1dc>
   103e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   103ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   103f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   103f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   103f8:	str	r0, [fp, #-44]	; 0xffffffd4
   103fc:	sub	r3, fp, #32
   10400:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10404:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10408:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1040c:	bl	b78 <flatcc_json_parser_object_end>
   10410:	str	r0, [fp, #-44]	; 0xffffffd4
   10414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10418:	cmp	r3, #0
   1041c:	bne	10260 <Fantasy_BookReader_parse_json_struct_inline+0x40>
   10420:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10424:	b	10444 <Fantasy_BookReader_parse_json_struct_inline+0x224>
   10428:	nop	{0}
   1042c:	mov	r3, #33	; 0x21
   10430:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10434:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10438:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1043c:	bl	0 <flatcc_json_parser_set_error>
   10440:	mov	r3, r0
   10444:	mov	r0, r3
   10448:	sub	sp, fp, #12
   1044c:	ldrd	r4, [sp]
   10450:	ldr	fp, [sp, #8]
   10454:	add	sp, sp, #12
   10458:	pop	{pc}		; (ldr pc, [sp], #4)
   1045c:	nop	{0}
   10460:	.word	0x735f7265
   10464:	.word	0x626f6f6b

00010468 <Fantasy_BookReader_parse_json_struct>:
   10468:	str	fp, [sp, #-8]!
   1046c:	str	lr, [sp, #4]
   10470:	add	fp, sp, #4
   10474:	sub	sp, sp, #24
   10478:	str	r0, [fp, #-16]
   1047c:	str	r1, [fp, #-20]	; 0xffffffec
   10480:	str	r2, [fp, #-24]	; 0xffffffe8
   10484:	str	r3, [fp, #-28]	; 0xffffffe4
   10488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1048c:	mov	r2, #0
   10490:	str	r2, [r3]
   10494:	ldr	r3, [fp, #-16]
   10498:	ldr	r3, [r3]
   1049c:	mov	r2, #4
   104a0:	mov	r1, #4
   104a4:	mov	r0, r3
   104a8:	bl	0 <flatcc_builder_start_struct>
   104ac:	str	r0, [fp, #-8]
   104b0:	ldr	r3, [fp, #-8]
   104b4:	cmp	r3, #0
   104b8:	beq	10518 <Fantasy_BookReader_parse_json_struct+0xb0>
   104bc:	ldr	r3, [fp, #-8]
   104c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   104c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   104c8:	ldr	r0, [fp, #-16]
   104cc:	bl	10220 <Fantasy_BookReader_parse_json_struct_inline>
   104d0:	str	r0, [fp, #-20]	; 0xffffffec
   104d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   104d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   104dc:	cmp	r2, r3
   104e0:	beq	10520 <Fantasy_BookReader_parse_json_struct+0xb8>
   104e4:	ldr	r3, [fp, #-16]
   104e8:	ldr	r3, [r3]
   104ec:	mov	r0, r3
   104f0:	bl	0 <flatcc_builder_end_struct>
   104f4:	mov	r2, r0
   104f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   104fc:	str	r2, [r3]
   10500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10504:	ldr	r3, [r3]
   10508:	cmp	r3, #0
   1050c:	beq	10520 <Fantasy_BookReader_parse_json_struct+0xb8>
   10510:	ldr	r3, [fp, #-20]	; 0xffffffec
   10514:	b	1053c <Fantasy_BookReader_parse_json_struct+0xd4>
   10518:	nop	{0}
   1051c:	b	10524 <Fantasy_BookReader_parse_json_struct+0xbc>
   10520:	nop	{0}
   10524:	mov	r3, #33	; 0x21
   10528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1052c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10530:	ldr	r0, [fp, #-16]
   10534:	bl	0 <flatcc_json_parser_set_error>
   10538:	mov	r3, r0
   1053c:	mov	r0, r3
   10540:	sub	sp, fp, #4
   10544:	ldr	fp, [sp]
   10548:	add	sp, sp, #4
   1054c:	pop	{pc}		; (ldr pc, [sp], #4)

00010550 <Fantasy_Character_parse_json_union>:
   10550:	str	fp, [sp, #-8]!
   10554:	str	lr, [sp, #4]
   10558:	add	fp, sp, #4
   1055c:	sub	sp, sp, #16
   10560:	str	r0, [fp, #-8]
   10564:	str	r1, [fp, #-12]
   10568:	str	r2, [fp, #-16]
   1056c:	strb	r3, [fp, #-17]	; 0xffffffef
   10570:	ldr	r3, [fp, #4]
   10574:	mov	r2, #0
   10578:	str	r2, [r3]
   1057c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   10580:	cmp	r3, #9
   10584:	beq	10618 <Fantasy_Character_parse_json_union+0xc8>
   10588:	cmp	r3, #9
   1058c:	bgt	105ac <Fantasy_Character_parse_json_union+0x5c>
   10590:	cmp	r3, #2
   10594:	beq	105e0 <Fantasy_Character_parse_json_union+0x90>
   10598:	cmp	r3, #8
   1059c:	beq	105fc <Fantasy_Character_parse_json_union+0xac>
   105a0:	cmp	r3, #0
   105a4:	beq	105c8 <Fantasy_Character_parse_json_union+0x78>
   105a8:	b	10688 <Fantasy_Character_parse_json_union+0x138>
   105ac:	cmp	r3, #11
   105b0:	beq	10650 <Fantasy_Character_parse_json_union+0x100>
   105b4:	cmp	r3, #11
   105b8:	blt	10634 <Fantasy_Character_parse_json_union+0xe4>
   105bc:	cmp	r3, #255	; 0xff
   105c0:	beq	1066c <Fantasy_Character_parse_json_union+0x11c>
   105c4:	b	10688 <Fantasy_Character_parse_json_union+0x138>
   105c8:	ldr	r2, [fp, #-16]
   105cc:	ldr	r1, [fp, #-12]
   105d0:	ldr	r0, [fp, #-8]
   105d4:	bl	1780 <flatcc_json_parser_none>
   105d8:	mov	r3, r0
   105dc:	b	10718 <Fantasy_Character_parse_json_union+0x1c8>
   105e0:	ldr	r3, [fp, #4]
   105e4:	ldr	r2, [fp, #-16]
   105e8:	ldr	r1, [fp, #-12]
   105ec:	ldr	r0, [fp, #-8]
   105f0:	bl	fb90 <Fantasy_Attacker_parse_json_table>
   105f4:	str	r0, [fp, #-12]
   105f8:	b	106d0 <Fantasy_Character_parse_json_union+0x180>
   105fc:	ldr	r3, [fp, #4]
   10600:	ldr	r2, [fp, #-16]
   10604:	ldr	r1, [fp, #-12]
   10608:	ldr	r0, [fp, #-8]
   1060c:	bl	10138 <Fantasy_Rapunzel_parse_json_struct>
   10610:	str	r0, [fp, #-12]
   10614:	b	106d0 <Fantasy_Character_parse_json_union+0x180>
   10618:	ldr	r3, [fp, #4]
   1061c:	ldr	r2, [fp, #-16]
   10620:	ldr	r1, [fp, #-12]
   10624:	ldr	r0, [fp, #-8]
   10628:	bl	10468 <Fantasy_BookReader_parse_json_struct>
   1062c:	str	r0, [fp, #-12]
   10630:	b	106d0 <Fantasy_Character_parse_json_union+0x180>
   10634:	ldr	r3, [fp, #4]
   10638:	ldr	r2, [fp, #-16]
   1063c:	ldr	r1, [fp, #-12]
   10640:	ldr	r0, [fp, #-8]
   10644:	bl	10468 <Fantasy_BookReader_parse_json_struct>
   10648:	str	r0, [fp, #-12]
   1064c:	b	106d0 <Fantasy_Character_parse_json_union+0x180>
   10650:	ldr	r3, [fp, #4]
   10654:	ldr	r2, [fp, #-16]
   10658:	ldr	r1, [fp, #-12]
   1065c:	ldr	r0, [fp, #-8]
   10660:	bl	0 <flatcc_json_parser_build_string>
   10664:	str	r0, [fp, #-12]
   10668:	b	106d0 <Fantasy_Character_parse_json_union+0x180>
   1066c:	ldr	r3, [fp, #4]
   10670:	ldr	r2, [fp, #-16]
   10674:	ldr	r1, [fp, #-12]
   10678:	ldr	r0, [fp, #-8]
   1067c:	bl	0 <flatcc_json_parser_build_string>
   10680:	str	r0, [fp, #-12]
   10684:	b	106d0 <Fantasy_Character_parse_json_union+0x180>
   10688:	ldr	r3, [fp, #-8]
   1068c:	ldr	r3, [r3, #8]
   10690:	and	r3, r3, #1
   10694:	cmp	r3, #0
   10698:	bne	106b8 <Fantasy_Character_parse_json_union+0x168>
   1069c:	mov	r3, #15
   106a0:	ldr	r2, [fp, #-16]
   106a4:	ldr	r1, [fp, #-12]
   106a8:	ldr	r0, [fp, #-8]
   106ac:	bl	0 <flatcc_json_parser_set_error>
   106b0:	mov	r3, r0
   106b4:	b	10718 <Fantasy_Character_parse_json_union+0x1c8>
   106b8:	ldr	r2, [fp, #-16]
   106bc:	ldr	r1, [fp, #-12]
   106c0:	ldr	r0, [fp, #-8]
   106c4:	bl	0 <flatcc_json_parser_generic_json>
   106c8:	mov	r3, r0
   106cc:	b	10718 <Fantasy_Character_parse_json_union+0x1c8>
   106d0:	ldr	r3, [fp, #-8]
   106d4:	ldr	r3, [r3, #24]
   106d8:	cmp	r3, #0
   106dc:	beq	106e8 <Fantasy_Character_parse_json_union+0x198>
   106e0:	ldr	r3, [fp, #-12]
   106e4:	b	10718 <Fantasy_Character_parse_json_union+0x1c8>
   106e8:	ldr	r3, [fp, #4]
   106ec:	ldr	r3, [r3]
   106f0:	cmp	r3, #0
   106f4:	bne	10714 <Fantasy_Character_parse_json_union+0x1c4>
   106f8:	mov	r3, #33	; 0x21
   106fc:	ldr	r2, [fp, #-16]
   10700:	ldr	r1, [fp, #-12]
   10704:	ldr	r0, [fp, #-8]
   10708:	bl	0 <flatcc_json_parser_set_error>
   1070c:	mov	r3, r0
   10710:	b	10718 <Fantasy_Character_parse_json_union+0x1c8>
   10714:	ldr	r3, [fp, #-12]
   10718:	mov	r0, r3
   1071c:	sub	sp, fp, #4
   10720:	ldr	fp, [sp]
   10724:	add	sp, sp, #4
   10728:	pop	{pc}		; (ldr pc, [sp], #4)

0001072c <Fantasy_Character_json_union_accept_type>:
   1072c:	push	{fp}		; (str fp, [sp, #-4]!)
   10730:	add	fp, sp, #0
   10734:	sub	sp, sp, #12
   10738:	mov	r3, r0
   1073c:	strb	r3, [fp, #-5]
   10740:	ldrb	r3, [fp, #-5]
   10744:	cmp	r3, #9
   10748:	beq	107a4 <Fantasy_Character_json_union_accept_type+0x78>
   1074c:	cmp	r3, #9
   10750:	bgt	10770 <Fantasy_Character_json_union_accept_type+0x44>
   10754:	cmp	r3, #2
   10758:	beq	10794 <Fantasy_Character_json_union_accept_type+0x68>
   1075c:	cmp	r3, #8
   10760:	beq	1079c <Fantasy_Character_json_union_accept_type+0x70>
   10764:	cmp	r3, #0
   10768:	beq	1078c <Fantasy_Character_json_union_accept_type+0x60>
   1076c:	b	107c4 <Fantasy_Character_json_union_accept_type+0x98>
   10770:	cmp	r3, #11
   10774:	beq	107b4 <Fantasy_Character_json_union_accept_type+0x88>
   10778:	cmp	r3, #11
   1077c:	blt	107ac <Fantasy_Character_json_union_accept_type+0x80>
   10780:	cmp	r3, #255	; 0xff
   10784:	beq	107bc <Fantasy_Character_json_union_accept_type+0x90>
   10788:	b	107c4 <Fantasy_Character_json_union_accept_type+0x98>
   1078c:	mov	r3, #1
   10790:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   10794:	mov	r3, #1
   10798:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   1079c:	mov	r3, #1
   107a0:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   107a4:	mov	r3, #1
   107a8:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   107ac:	mov	r3, #1
   107b0:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   107b4:	mov	r3, #1
   107b8:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   107bc:	mov	r3, #1
   107c0:	b	107c8 <Fantasy_Character_json_union_accept_type+0x9c>
   107c4:	mov	r3, #0
   107c8:	mov	r0, r3
   107cc:	add	sp, fp, #0
   107d0:	pop	{fp}		; (ldr fp, [sp], #4)
   107d4:	bx	lr

000107d8 <Fantasy_Character_parse_json_enum>:
   107d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   107dc:	strd	r6, [sp, #8]
   107e0:	strd	r8, [sp, #16]
   107e4:	str	fp, [sp, #24]
   107e8:	str	lr, [sp, #28]
   107ec:	add	fp, sp, #28
   107f0:	sub	sp, sp, #72	; 0x48
   107f4:	str	r0, [fp, #-56]	; 0xffffffc8
   107f8:	str	r1, [fp, #-60]	; 0xffffffc4
   107fc:	str	r2, [fp, #-64]	; 0xffffffc0
   10800:	str	r3, [fp, #-68]	; 0xffffffbc
   10804:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10808:	str	r3, [fp, #-32]	; 0xffffffe0
   1080c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10810:	ldr	r0, [fp, #-60]	; 0xffffffc4
   10814:	bl	940 <flatcc_json_parser_symbol_part>
   10818:	strd	r0, [fp, #-44]	; 0xffffffd4
   1081c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   10820:	add	r3, pc, #976	; 0x3d0
   10824:	ldrd	r2, [r3]
   10828:	cmp	r1, r3
   1082c:	cmpeq	r0, r2
   10830:	bhi	10a18 <Fantasy_Character_parse_json_enum+0x240>
   10834:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10838:	add	r1, pc, #960	; 0x3c0
   1083c:	ldrd	r0, [r1]
   10840:	cmp	r3, r1
   10844:	cmpeq	r2, r0
   10848:	bhi	108e8 <Fantasy_Character_parse_json_enum+0x110>
   1084c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10850:	mov	r0, #-16777216	; 0xff000000
   10854:	mvn	r1, #0
   10858:	and	ip, r2, r0
   1085c:	str	ip, [fp, #-76]	; 0xffffffb4
   10860:	and	r3, r3, r1
   10864:	str	r3, [fp, #-72]	; 0xffffffb8
   10868:	add	r3, pc, #920	; 0x398
   1086c:	ldrd	r2, [r3]
   10870:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   10874:	cmp	r1, r3
   10878:	cmpeq	r0, r2
   1087c:	bne	108e0 <Fantasy_Character_parse_json_enum+0x108>
   10880:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10884:	str	r3, [fp, #-48]	; 0xffffffd0
   10888:	ldr	r3, [fp, #8]
   1088c:	str	r3, [sp]
   10890:	mov	r3, #5
   10894:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10898:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1089c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   108a0:	bl	0 <flatcc_json_parser_match_constant>
   108a4:	str	r0, [fp, #-60]	; 0xffffffc4
   108a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   108ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   108b0:	cmp	r2, r3
   108b4:	beq	108d8 <Fantasy_Character_parse_json_enum+0x100>
   108b8:	ldr	r1, [fp, #4]
   108bc:	mov	r2, #9
   108c0:	mov	r3, #0
   108c4:	strd	r2, [r1]
   108c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   108cc:	mov	r2, #0
   108d0:	str	r2, [r3]
   108d4:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   108d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   108dc:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   108e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   108e4:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   108e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   108ec:	mov	r0, #-16777216	; 0xff000000
   108f0:	mvn	r1, #0
   108f4:	and	ip, r2, r0
   108f8:	str	ip, [fp, #-84]	; 0xffffffac
   108fc:	and	r3, r3, r1
   10900:	str	r3, [fp, #-80]	; 0xffffffb0
   10904:	add	r3, pc, #772	; 0x304
   10908:	ldrd	r2, [r3]
   1090c:	ldrd	r0, [fp, #-84]	; 0xffffffac
   10910:	cmp	r1, r3
   10914:	cmpeq	r0, r2
   10918:	bne	1097c <Fantasy_Character_parse_json_enum+0x1a4>
   1091c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10920:	str	r3, [fp, #-48]	; 0xffffffd0
   10924:	ldr	r3, [fp, #8]
   10928:	str	r3, [sp]
   1092c:	mov	r3, #5
   10930:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10934:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10938:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1093c:	bl	0 <flatcc_json_parser_match_constant>
   10940:	str	r0, [fp, #-60]	; 0xffffffc4
   10944:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10948:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1094c:	cmp	r2, r3
   10950:	beq	10974 <Fantasy_Character_parse_json_enum+0x19c>
   10954:	ldr	r1, [fp, #4]
   10958:	mov	r2, #2
   1095c:	mov	r3, #0
   10960:	strd	r2, [r1]
   10964:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10968:	mov	r2, #0
   1096c:	str	r2, [r3]
   10970:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   10974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10978:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   1097c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10980:	mvn	r0, #255	; 0xff
   10984:	mvn	r1, #0
   10988:	and	ip, r2, r0
   1098c:	str	ip, [fp, #-92]	; 0xffffffa4
   10990:	and	r3, r3, r1
   10994:	str	r3, [fp, #-88]	; 0xffffffa8
   10998:	add	r3, pc, #632	; 0x278
   1099c:	ldrd	r2, [r3]
   109a0:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   109a4:	cmp	r1, r3
   109a8:	cmpeq	r0, r2
   109ac:	bne	10a10 <Fantasy_Character_parse_json_enum+0x238>
   109b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   109b4:	str	r3, [fp, #-48]	; 0xffffffd0
   109b8:	ldr	r3, [fp, #8]
   109bc:	str	r3, [sp]
   109c0:	mov	r3, #7
   109c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   109c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   109cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   109d0:	bl	0 <flatcc_json_parser_match_constant>
   109d4:	str	r0, [fp, #-60]	; 0xffffffc4
   109d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   109dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   109e0:	cmp	r2, r3
   109e4:	beq	10a08 <Fantasy_Character_parse_json_enum+0x230>
   109e8:	ldr	r1, [fp, #4]
   109ec:	mov	r2, #10
   109f0:	mov	r3, #0
   109f4:	strd	r2, [r1]
   109f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   109fc:	mov	r2, #0
   10a00:	str	r2, [r3]
   10a04:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   10a08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a0c:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10a10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a14:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10a18:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10a1c:	add	r1, pc, #508	; 0x1fc
   10a20:	ldrd	r0, [r1]
   10a24:	cmp	r3, r1
   10a28:	cmpeq	r2, r0
   10a2c:	bhi	10ac0 <Fantasy_Character_parse_json_enum+0x2e8>
   10a30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10a34:	mov	r0, #0
   10a38:	mvn	r1, #0
   10a3c:	and	r8, r2, r0
   10a40:	and	r9, r3, r1
   10a44:	add	r3, pc, #476	; 0x1dc
   10a48:	ldrd	r2, [r3]
   10a4c:	cmp	r9, r3
   10a50:	cmpeq	r8, r2
   10a54:	bne	10ab8 <Fantasy_Character_parse_json_enum+0x2e0>
   10a58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10a5c:	str	r3, [fp, #-48]	; 0xffffffd0
   10a60:	ldr	r3, [fp, #8]
   10a64:	str	r3, [sp]
   10a68:	mov	r3, #4
   10a6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10a70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10a74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10a78:	bl	0 <flatcc_json_parser_match_constant>
   10a7c:	str	r0, [fp, #-60]	; 0xffffffc4
   10a80:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10a84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10a88:	cmp	r2, r3
   10a8c:	beq	10ab0 <Fantasy_Character_parse_json_enum+0x2d8>
   10a90:	ldr	r1, [fp, #4]
   10a94:	mov	r2, #0
   10a98:	mov	r3, #0
   10a9c:	strd	r2, [r1]
   10aa0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10aa4:	mov	r2, #0
   10aa8:	str	r2, [r3]
   10aac:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   10ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10ab4:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10ab8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10abc:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10ac0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10ac4:	add	r1, pc, #356	; 0x164
   10ac8:	ldrd	r0, [r1]
   10acc:	cmp	r3, r1
   10ad0:	cmpeq	r2, r0
   10ad4:	bhi	10b68 <Fantasy_Character_parse_json_enum+0x390>
   10ad8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10adc:	mov	r0, #-16777216	; 0xff000000
   10ae0:	mvn	r1, #0
   10ae4:	and	r6, r2, r0
   10ae8:	and	r7, r3, r1
   10aec:	add	r3, pc, #324	; 0x144
   10af0:	ldrd	r2, [r3]
   10af4:	cmp	r7, r3
   10af8:	cmpeq	r6, r2
   10afc:	bne	10b60 <Fantasy_Character_parse_json_enum+0x388>
   10b00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10b04:	str	r3, [fp, #-48]	; 0xffffffd0
   10b08:	ldr	r3, [fp, #8]
   10b0c:	str	r3, [sp]
   10b10:	mov	r3, #5
   10b14:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10b18:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10b1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10b20:	bl	0 <flatcc_json_parser_match_constant>
   10b24:	str	r0, [fp, #-60]	; 0xffffffc4
   10b28:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10b2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10b30:	cmp	r2, r3
   10b34:	beq	10b58 <Fantasy_Character_parse_json_enum+0x380>
   10b38:	ldr	r1, [fp, #4]
   10b3c:	mov	r2, #11
   10b40:	mov	r3, #0
   10b44:	strd	r2, [r1]
   10b48:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10b4c:	mov	r2, #0
   10b50:	str	r2, [r3]
   10b54:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   10b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b5c:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b64:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10b68:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10b6c:	mov	r0, #0
   10b70:	movt	r0, #65535	; 0xffff
   10b74:	mvn	r1, #0
   10b78:	and	r4, r2, r0
   10b7c:	and	r5, r3, r1
   10b80:	add	r3, pc, #184	; 0xb8
   10b84:	ldrd	r2, [r3]
   10b88:	cmp	r5, r3
   10b8c:	cmpeq	r4, r2
   10b90:	bne	10c50 <Fantasy_Character_parse_json_enum+0x478>
   10b94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10b98:	str	r3, [fp, #-48]	; 0xffffffd0
   10b9c:	ldr	r3, [fp, #8]
   10ba0:	str	r3, [sp]
   10ba4:	mov	r3, #6
   10ba8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10bac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10bb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10bb4:	bl	0 <flatcc_json_parser_match_constant>
   10bb8:	str	r0, [fp, #-60]	; 0xffffffc4
   10bbc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10bc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10bc4:	cmp	r2, r3
   10bc8:	beq	10bec <Fantasy_Character_parse_json_enum+0x414>
   10bcc:	ldr	r1, [fp, #4]
   10bd0:	mov	r2, #255	; 0xff
   10bd4:	mov	r3, #0
   10bd8:	strd	r2, [r1]
   10bdc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10be0:	mov	r2, #0
   10be4:	str	r2, [r3]
   10be8:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   10bec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10bf0:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10bf4:	nop	{0}
   10bf8:	.word	0xffffffff
   10bfc:	.word	0x4e4f4e44
   10c00:	.word	0x46616dff
   10c04:	.word	0x426f6f6b
   10c08:	.word	0x65000000
   10c0c:	.word	0x42656c6c
   10c10:	.word	0x6e000000
   10c14:	.word	0x4d754c61
   10c18:	.word	0x46616e00
   10c1c:	.word	0x426f6f6b
   10c20:	.word	0x71ffffff
   10c24:	.word	0x4f746865
   10c28:	.word	0x00000000
   10c2c:	.word	0x4e4f4e45
   10c30:	.word	0x6e7a656b
   10c34:	.word	0x52617075
   10c38:	.word	0x72000000
   10c3c:	.word	0x4f746865
   10c40:	.word	0x65640000
   10c44:	.word	0x556e7573
   10c48:	.word	0x6e7a656c
   10c4c:	.word	0x52617075
   10c50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   10c54:	sub	r1, pc, #20
   10c58:	ldrd	r0, [r1]
   10c5c:	cmp	r3, r1
   10c60:	cmpeq	r2, r0
   10c64:	bne	10cc8 <Fantasy_Character_parse_json_enum+0x4f0>
   10c68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10c6c:	str	r3, [fp, #-48]	; 0xffffffd0
   10c70:	ldr	r3, [fp, #8]
   10c74:	str	r3, [sp]
   10c78:	mov	r3, #8
   10c7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10c80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10c84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10c88:	bl	0 <flatcc_json_parser_match_constant>
   10c8c:	str	r0, [fp, #-60]	; 0xffffffc4
   10c90:	ldr	r2, [fp, #-60]	; 0xffffffc4
   10c94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10c98:	cmp	r2, r3
   10c9c:	beq	10cc0 <Fantasy_Character_parse_json_enum+0x4e8>
   10ca0:	ldr	r1, [fp, #4]
   10ca4:	mov	r2, #8
   10ca8:	mov	r3, #0
   10cac:	strd	r2, [r1]
   10cb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10cb4:	mov	r2, #0
   10cb8:	str	r2, [r3]
   10cbc:	b	10cd0 <Fantasy_Character_parse_json_enum+0x4f8>
   10cc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10cc4:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10cc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10ccc:	b	10cd4 <Fantasy_Character_parse_json_enum+0x4fc>
   10cd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10cd4:	mov	r0, r3
   10cd8:	sub	sp, fp, #28
   10cdc:	ldrd	r4, [sp]
   10ce0:	ldrd	r6, [sp, #8]
   10ce4:	ldrd	r8, [sp, #16]
   10ce8:	ldr	fp, [sp, #24]
   10cec:	add	sp, sp, #28
   10cf0:	pop	{pc}		; (ldr pc, [sp], #4)

00010cf4 <Fantasy_Movie_parse_json_table>:
   10cf4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10cf8:	strd	r6, [sp, #8]
   10cfc:	strd	r8, [sp, #16]
   10d00:	str	fp, [sp, #24]
   10d04:	str	lr, [sp, #28]
   10d08:	add	fp, sp, #28
   10d0c:	sub	sp, sp, #120	; 0x78
   10d10:	str	r0, [fp, #-56]	; 0xffffffc8
   10d14:	str	r1, [fp, #-60]	; 0xffffffc4
   10d18:	str	r2, [fp, #-64]	; 0xffffffc0
   10d1c:	str	r3, [fp, #-68]	; 0xffffffbc
   10d20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   10d24:	mov	r3, #0
   10d28:	str	r3, [r2]
   10d2c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10d30:	ldr	r3, [r3]
   10d34:	mov	r1, #10
   10d38:	mov	r0, r3
   10d3c:	bl	0 <flatcc_builder_start_table>
   10d40:	mov	r3, r0
   10d44:	cmp	r3, #0
   10d48:	bne	11818 <Fantasy_Movie_parse_json_table+0xb24>
   10d4c:	sub	r3, fp, #48	; 0x30
   10d50:	str	r3, [sp]
   10d54:	mov	r3, #5
   10d58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10d5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10d60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10d64:	bl	0 <flatcc_json_parser_prepare_unions>
   10d68:	mov	r2, r0
   10d6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10d70:	cmp	r3, r2
   10d74:	beq	11820 <Fantasy_Movie_parse_json_table+0xb2c>
   10d78:	sub	r3, fp, #44	; 0x2c
   10d7c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10d80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10d84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10d88:	bl	a84 <flatcc_json_parser_object_start>
   10d8c:	str	r0, [fp, #-60]	; 0xffffffc4
   10d90:	b	117b0 <Fantasy_Movie_parse_json_table+0xabc>
   10d94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10d98:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10d9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10da0:	bl	60c <flatcc_json_parser_symbol_start>
   10da4:	str	r0, [fp, #-60]	; 0xffffffc4
   10da8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10dac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   10db0:	bl	940 <flatcc_json_parser_symbol_part>
   10db4:	strd	r0, [fp, #-36]	; 0xffffffdc
   10db8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   10dbc:	add	r3, pc, #924	; 0x39c
   10dc0:	ldrd	r2, [r3]
   10dc4:	cmp	r1, r3
   10dc8:	cmpeq	r0, r2
   10dcc:	bhi	111c0 <Fantasy_Movie_parse_json_table+0x4cc>
   10dd0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   10dd4:	add	r3, pc, #908	; 0x38c
   10dd8:	ldrd	r2, [r3]
   10ddc:	cmp	r1, r3
   10de0:	cmpeq	r0, r2
   10de4:	bne	10f80 <Fantasy_Movie_parse_json_table+0x28c>
   10de8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10dec:	add	r3, r3, #8
   10df0:	str	r3, [fp, #-60]	; 0xffffffc4
   10df4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10df8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   10dfc:	bl	940 <flatcc_json_parser_symbol_part>
   10e00:	strd	r0, [fp, #-36]	; 0xffffffdc
   10e04:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   10e08:	mvn	r2, #255	; 0xff
   10e0c:	mvn	r3, #0
   10e10:	and	r6, r0, r2
   10e14:	and	r7, r1, r3
   10e18:	add	r3, pc, #848	; 0x350
   10e1c:	ldrd	r2, [r3]
   10e20:	cmp	r7, r3
   10e24:	cmpeq	r6, r2
   10e28:	bne	10eb8 <Fantasy_Movie_parse_json_table+0x1c4>
   10e2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10e30:	str	r3, [fp, #-40]	; 0xffffffd8
   10e34:	mov	r3, #7
   10e38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10e3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10e40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10e44:	bl	f54 <flatcc_json_parser_match_symbol>
   10e48:	str	r0, [fp, #-60]	; 0xffffffc4
   10e4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10e54:	cmp	r2, r3
   10e58:	beq	10ea0 <Fantasy_Movie_parse_json_table+0x1ac>
   10e5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10e60:	movw	r3, #0
   10e64:	movt	r3, #0
   10e68:	str	r3, [sp, #12]
   10e6c:	movw	r3, #0
   10e70:	movt	r3, #0
   10e74:	str	r3, [sp, #8]
   10e78:	str	r2, [sp, #4]
   10e7c:	mov	r3, #3
   10e80:	str	r3, [sp]
   10e84:	mov	r3, #1
   10e88:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10e8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10e90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10e94:	bl	0 <flatcc_json_parser_union_type>
   10e98:	str	r0, [fp, #-60]	; 0xffffffc4
   10e9c:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   10ea0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10ea4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10ea8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10eac:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10eb0:	str	r0, [fp, #-60]	; 0xffffffc4
   10eb4:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   10eb8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   10ebc:	mov	r2, #0
   10ec0:	mov	r3, #0
   10ec4:	movt	r3, #65535	; 0xffff
   10ec8:	and	r8, r0, r2
   10ecc:	and	r9, r1, r3
   10ed0:	mov	r2, #0
   10ed4:	mov	r3, #0
   10ed8:	movt	r3, #29556	; 0x7374
   10edc:	cmp	r9, r3
   10ee0:	cmpeq	r8, r2
   10ee4:	bne	10f68 <Fantasy_Movie_parse_json_table+0x274>
   10ee8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10eec:	str	r3, [fp, #-40]	; 0xffffffd8
   10ef0:	mov	r3, #2
   10ef4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10ef8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10efc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f00:	bl	f54 <flatcc_json_parser_match_symbol>
   10f04:	str	r0, [fp, #-60]	; 0xffffffc4
   10f08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10f0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10f10:	cmp	r2, r3
   10f14:	beq	10f50 <Fantasy_Movie_parse_json_table+0x25c>
   10f18:	ldr	r2, [fp, #-48]	; 0xffffffd0
   10f1c:	movw	r3, #0
   10f20:	movt	r3, #0
   10f24:	str	r3, [sp, #8]
   10f28:	str	r2, [sp, #4]
   10f2c:	mov	r3, #3
   10f30:	str	r3, [sp]
   10f34:	mov	r3, #1
   10f38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10f3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10f40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f44:	bl	0 <flatcc_json_parser_union>
   10f48:	str	r0, [fp, #-60]	; 0xffffffc4
   10f4c:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   10f50:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10f54:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10f58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f5c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f60:	str	r0, [fp, #-60]	; 0xffffffc4
   10f64:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   10f68:	ldr	r2, [fp, #-64]	; 0xffffffc0
   10f6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10f70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10f74:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f78:	str	r0, [fp, #-60]	; 0xffffffc4
   10f7c:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   10f80:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   10f84:	add	r3, pc, #492	; 0x1ec
   10f88:	ldrd	r2, [r3]
   10f8c:	cmp	r1, r3
   10f90:	cmpeq	r0, r2
   10f94:	bne	11094 <Fantasy_Movie_parse_json_table+0x3a0>
   10f98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10f9c:	add	r3, r3, #8
   10fa0:	str	r3, [fp, #-60]	; 0xffffffc4
   10fa4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10fa8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   10fac:	bl	940 <flatcc_json_parser_symbol_part>
   10fb0:	strd	r0, [fp, #-36]	; 0xffffffdc
   10fb4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   10fb8:	mov	r2, #0
   10fbc:	mov	r3, #0
   10fc0:	movt	r3, #65535	; 0xffff
   10fc4:	and	ip, r0, r2
   10fc8:	str	ip, [fp, #-76]	; 0xffffffb4
   10fcc:	and	r3, r1, r3
   10fd0:	str	r3, [fp, #-72]	; 0xffffffb8
   10fd4:	mov	r2, #0
   10fd8:	mov	r3, #0
   10fdc:	movt	r3, #28773	; 0x7065
   10fe0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   10fe4:	cmp	r1, r3
   10fe8:	cmpeq	r0, r2
   10fec:	bne	1107c <Fantasy_Movie_parse_json_table+0x388>
   10ff0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10ff4:	str	r3, [fp, #-40]	; 0xffffffd8
   10ff8:	mov	r3, #2
   10ffc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11000:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11004:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11008:	bl	f54 <flatcc_json_parser_match_symbol>
   1100c:	str	r0, [fp, #-60]	; 0xffffffc4
   11010:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11014:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11018:	cmp	r2, r3
   1101c:	beq	11064 <Fantasy_Movie_parse_json_table+0x370>
   11020:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11024:	movw	r3, #0
   11028:	movt	r3, #0
   1102c:	str	r3, [sp, #12]
   11030:	movw	r3, #0
   11034:	movt	r3, #0
   11038:	str	r3, [sp, #8]
   1103c:	str	r2, [sp, #4]
   11040:	mov	r3, #7
   11044:	str	r3, [sp]
   11048:	mov	r3, #3
   1104c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11050:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11054:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11058:	bl	0 <flatcc_json_parser_union_type>
   1105c:	str	r0, [fp, #-60]	; 0xffffffc4
   11060:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11064:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11068:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1106c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11070:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11074:	str	r0, [fp, #-60]	; 0xffffffc4
   11078:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   1107c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11080:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11084:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11088:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1108c:	str	r0, [fp, #-60]	; 0xffffffc4
   11090:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11094:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11098:	mov	r2, #-16777216	; 0xff000000
   1109c:	mvn	r3, #0
   110a0:	and	ip, r0, r2
   110a4:	str	ip, [fp, #-84]	; 0xffffffac
   110a8:	and	r3, r1, r3
   110ac:	str	r3, [fp, #-80]	; 0xffffffb0
   110b0:	add	r3, pc, #200	; 0xc8
   110b4:	ldrd	r2, [r3]
   110b8:	ldrd	r0, [fp, #-84]	; 0xffffffac
   110bc:	cmp	r1, r3
   110c0:	cmpeq	r0, r2
   110c4:	bne	11148 <Fantasy_Movie_parse_json_table+0x454>
   110c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   110cc:	str	r3, [fp, #-40]	; 0xffffffd8
   110d0:	mov	r3, #5
   110d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   110d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   110dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   110e0:	bl	f54 <flatcc_json_parser_match_symbol>
   110e4:	str	r0, [fp, #-60]	; 0xffffffc4
   110e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   110ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   110f0:	cmp	r2, r3
   110f4:	beq	11130 <Fantasy_Movie_parse_json_table+0x43c>
   110f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   110fc:	movw	r3, #0
   11100:	movt	r3, #0
   11104:	str	r3, [sp, #8]
   11108:	str	r2, [sp, #4]
   1110c:	mov	r3, #7
   11110:	str	r3, [sp]
   11114:	mov	r3, #3
   11118:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1111c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11120:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11124:	bl	0 <flatcc_json_parser_union>
   11128:	str	r0, [fp, #-60]	; 0xffffffc4
   1112c:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11130:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11134:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11138:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1113c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11140:	str	r0, [fp, #-60]	; 0xffffffc4
   11144:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11148:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1114c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11150:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11154:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11158:	str	r0, [fp, #-60]	; 0xffffffc4
   1115c:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11160:	.word	0x61637464
   11164:	.word	0x63686172
   11168:	.word	0x676f6e69
   1116c:	.word	0x616e7461
   11170:	.word	0x79706500
   11174:	.word	0x73745f74
   11178:	.word	0x6f5f7479
   1117c:	.word	0x63616d65
   11180:	.word	0x6f000000
   11184:	.word	0x63616d65
   11188:	.word	0x5f636860
   1118c:	.word	0x6d61696e
   11190:	.word	0x61637465
   11194:	.word	0x63686172
   11198:	.word	0x79706500
   1119c:	.word	0x72735f74
   111a0:	.word	0x5f636861
   111a4:	.word	0x6d61696e
   111a8:	.word	0x65725f74
   111ac:	.word	0x72616374
   111b0:	.word	0x00000000
   111b4:	.word	0x79706500
   111b8:	.word	0x65720000
   111bc:	.word	0x72616374
   111c0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   111c4:	sub	r3, pc, #68	; 0x44
   111c8:	ldrd	r2, [r3]
   111cc:	cmp	r1, r3
   111d0:	cmpeq	r0, r2
   111d4:	bhi	113c4 <Fantasy_Movie_parse_json_table+0x6d0>
   111d8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   111dc:	sub	r3, pc, #84	; 0x54
   111e0:	ldrd	r2, [r3]
   111e4:	cmp	r1, r3
   111e8:	cmpeq	r0, r2
   111ec:	bne	113ac <Fantasy_Movie_parse_json_table+0x6b8>
   111f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   111f4:	add	r3, r3, #8
   111f8:	str	r3, [fp, #-60]	; 0xffffffc4
   111fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11200:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11204:	bl	940 <flatcc_json_parser_symbol_part>
   11208:	strd	r0, [fp, #-36]	; 0xffffffdc
   1120c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11210:	mvn	r2, #255	; 0xff
   11214:	mvn	r3, #0
   11218:	and	ip, r0, r2
   1121c:	str	ip, [fp, #-92]	; 0xffffffa4
   11220:	and	r3, r1, r3
   11224:	str	r3, [fp, #-88]	; 0xffffffa8
   11228:	sub	r3, pc, #152	; 0x98
   1122c:	ldrd	r2, [r3]
   11230:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   11234:	cmp	r1, r3
   11238:	cmpeq	r0, r2
   1123c:	bne	112d8 <Fantasy_Movie_parse_json_table+0x5e4>
   11240:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11244:	str	r3, [fp, #-40]	; 0xffffffd8
   11248:	mov	r3, #7
   1124c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11250:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11254:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11258:	bl	f54 <flatcc_json_parser_match_symbol>
   1125c:	str	r0, [fp, #-60]	; 0xffffffc4
   11260:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11264:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11268:	cmp	r2, r3
   1126c:	beq	112c0 <Fantasy_Movie_parse_json_table+0x5cc>
   11270:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11274:	movw	r3, #0
   11278:	movt	r3, #0
   1127c:	str	r3, [sp, #16]
   11280:	movw	r3, #0
   11284:	movt	r3, #0
   11288:	str	r3, [sp, #12]
   1128c:	movw	r3, #0
   11290:	movt	r3, #0
   11294:	str	r3, [sp, #8]
   11298:	str	r2, [sp, #4]
   1129c:	mov	r3, #9
   112a0:	str	r3, [sp]
   112a4:	mov	r3, #4
   112a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   112ac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   112b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   112b4:	bl	0 <flatcc_json_parser_union_type_vector>
   112b8:	str	r0, [fp, #-60]	; 0xffffffc4
   112bc:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   112c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   112c4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   112c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   112cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   112d0:	str	r0, [fp, #-60]	; 0xffffffc4
   112d4:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   112d8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   112dc:	mov	r2, #0
   112e0:	mov	r3, #0
   112e4:	movt	r3, #65535	; 0xffff
   112e8:	and	ip, r0, r2
   112ec:	str	ip, [fp, #-100]	; 0xffffff9c
   112f0:	and	r3, r1, r3
   112f4:	str	r3, [fp, #-96]	; 0xffffffa0
   112f8:	mov	r2, #0
   112fc:	mov	r3, #0
   11300:	movt	r3, #29299	; 0x7273
   11304:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   11308:	cmp	r1, r3
   1130c:	cmpeq	r0, r2
   11310:	bne	11394 <Fantasy_Movie_parse_json_table+0x6a0>
   11314:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11318:	str	r3, [fp, #-40]	; 0xffffffd8
   1131c:	mov	r3, #2
   11320:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11324:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11328:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1132c:	bl	f54 <flatcc_json_parser_match_symbol>
   11330:	str	r0, [fp, #-60]	; 0xffffffc4
   11334:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11338:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1133c:	cmp	r2, r3
   11340:	beq	1137c <Fantasy_Movie_parse_json_table+0x688>
   11344:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11348:	movw	r3, #0
   1134c:	movt	r3, #0
   11350:	str	r3, [sp, #8]
   11354:	str	r2, [sp, #4]
   11358:	mov	r3, #9
   1135c:	str	r3, [sp]
   11360:	mov	r3, #4
   11364:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11368:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1136c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11370:	bl	0 <flatcc_json_parser_union_vector>
   11374:	str	r0, [fp, #-60]	; 0xffffffc4
   11378:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   1137c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11380:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11384:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11388:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1138c:	str	r0, [fp, #-60]	; 0xffffffc4
   11390:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11394:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11398:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1139c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   113a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   113a4:	str	r0, [fp, #-60]	; 0xffffffc4
   113a8:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   113ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   113b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   113b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   113b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   113bc:	str	r0, [fp, #-60]	; 0xffffffc4
   113c0:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   113c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   113c8:	sub	r3, pc, #560	; 0x230
   113cc:	ldrd	r2, [r3]
   113d0:	cmp	r1, r3
   113d4:	cmpeq	r0, r2
   113d8:	bne	115d4 <Fantasy_Movie_parse_json_table+0x8e0>
   113dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   113e0:	add	r3, r3, #8
   113e4:	str	r3, [fp, #-60]	; 0xffffffc4
   113e8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   113ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   113f0:	bl	940 <flatcc_json_parser_symbol_part>
   113f4:	strd	r0, [fp, #-36]	; 0xffffffdc
   113f8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   113fc:	sub	r3, pc, #604	; 0x25c
   11400:	ldrd	r2, [r3]
   11404:	cmp	r1, r3
   11408:	cmpeq	r0, r2
   1140c:	bne	11504 <Fantasy_Movie_parse_json_table+0x810>
   11410:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11414:	add	r3, r3, #8
   11418:	str	r3, [fp, #-60]	; 0xffffffc4
   1141c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11420:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11424:	bl	940 <flatcc_json_parser_symbol_part>
   11428:	strd	r0, [fp, #-36]	; 0xffffffdc
   1142c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11430:	mov	r2, #0
   11434:	mvn	r3, #255	; 0xff
   11438:	and	ip, r0, r2
   1143c:	str	ip, [fp, #-108]	; 0xffffff94
   11440:	and	r3, r1, r3
   11444:	str	r3, [fp, #-104]	; 0xffffff98
   11448:	sub	r3, pc, #672	; 0x2a0
   1144c:	ldrd	r2, [r3]
   11450:	ldrd	r0, [fp, #-108]	; 0xffffff94
   11454:	cmp	r1, r3
   11458:	cmpeq	r0, r2
   1145c:	bne	114ec <Fantasy_Movie_parse_json_table+0x7f8>
   11460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11464:	str	r3, [fp, #-40]	; 0xffffffd8
   11468:	mov	r3, #3
   1146c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11470:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11474:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11478:	bl	f54 <flatcc_json_parser_match_symbol>
   1147c:	str	r0, [fp, #-60]	; 0xffffffc4
   11480:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11484:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11488:	cmp	r2, r3
   1148c:	beq	114d4 <Fantasy_Movie_parse_json_table+0x7e0>
   11490:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11494:	movw	r3, #0
   11498:	movt	r3, #0
   1149c:	str	r3, [sp, #12]
   114a0:	movw	r3, #0
   114a4:	movt	r3, #0
   114a8:	str	r3, [sp, #8]
   114ac:	str	r2, [sp, #4]
   114b0:	mov	r3, #1
   114b4:	str	r3, [sp]
   114b8:	mov	r3, #0
   114bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   114c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   114c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   114c8:	bl	0 <flatcc_json_parser_union_type>
   114cc:	str	r0, [fp, #-60]	; 0xffffffc4
   114d0:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   114d4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   114d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   114dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   114e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   114e4:	str	r0, [fp, #-60]	; 0xffffffc4
   114e8:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   114ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   114f0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   114f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   114f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   114fc:	str	r0, [fp, #-60]	; 0xffffffc4
   11500:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11504:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11508:	mov	r2, #0
   1150c:	movt	r2, #65535	; 0xffff
   11510:	mvn	r3, #0
   11514:	and	ip, r0, r2
   11518:	str	ip, [fp, #-116]	; 0xffffff8c
   1151c:	and	r3, r1, r3
   11520:	str	r3, [fp, #-112]	; 0xffffff90
   11524:	sub	r3, pc, #884	; 0x374
   11528:	ldrd	r2, [r3]
   1152c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   11530:	cmp	r1, r3
   11534:	cmpeq	r0, r2
   11538:	bne	115bc <Fantasy_Movie_parse_json_table+0x8c8>
   1153c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11540:	str	r3, [fp, #-40]	; 0xffffffd8
   11544:	mov	r3, #6
   11548:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1154c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11554:	bl	f54 <flatcc_json_parser_match_symbol>
   11558:	str	r0, [fp, #-60]	; 0xffffffc4
   1155c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11560:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11564:	cmp	r2, r3
   11568:	beq	115a4 <Fantasy_Movie_parse_json_table+0x8b0>
   1156c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11570:	movw	r3, #0
   11574:	movt	r3, #0
   11578:	str	r3, [sp, #8]
   1157c:	str	r2, [sp, #4]
   11580:	mov	r3, #1
   11584:	str	r3, [sp]
   11588:	mov	r3, #0
   1158c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11590:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11594:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11598:	bl	0 <flatcc_json_parser_union>
   1159c:	str	r0, [fp, #-60]	; 0xffffffc4
   115a0:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   115a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   115a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   115ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   115b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   115b4:	str	r0, [fp, #-60]	; 0xffffffc4
   115b8:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   115bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   115c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   115c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   115c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   115cc:	str	r0, [fp, #-60]	; 0xffffffc4
   115d0:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   115d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   115d8:	add	r3, pc, #656	; 0x290
   115dc:	ldrd	r2, [r3]
   115e0:	cmp	r1, r3
   115e4:	cmpeq	r0, r2
   115e8:	bne	11784 <Fantasy_Movie_parse_json_table+0xa90>
   115ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   115f0:	add	r3, r3, #8
   115f4:	str	r3, [fp, #-60]	; 0xffffffc4
   115f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   115fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11600:	bl	940 <flatcc_json_parser_symbol_part>
   11604:	strd	r0, [fp, #-36]	; 0xffffffdc
   11608:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1160c:	mov	r2, #0
   11610:	movt	r2, #65535	; 0xffff
   11614:	mvn	r3, #0
   11618:	and	ip, r0, r2
   1161c:	str	ip, [fp, #-124]	; 0xffffff84
   11620:	and	r3, r1, r3
   11624:	str	r3, [fp, #-120]	; 0xffffff88
   11628:	add	r3, pc, #584	; 0x248
   1162c:	ldrd	r2, [r3]
   11630:	ldrd	r0, [fp, #-124]	; 0xffffff84
   11634:	cmp	r1, r3
   11638:	cmpeq	r0, r2
   1163c:	bne	116cc <Fantasy_Movie_parse_json_table+0x9d8>
   11640:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11644:	str	r3, [fp, #-40]	; 0xffffffd8
   11648:	mov	r3, #6
   1164c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11650:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11654:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11658:	bl	f54 <flatcc_json_parser_match_symbol>
   1165c:	str	r0, [fp, #-60]	; 0xffffffc4
   11660:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11664:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11668:	cmp	r2, r3
   1166c:	beq	116b4 <Fantasy_Movie_parse_json_table+0x9c0>
   11670:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11674:	movw	r3, #0
   11678:	movt	r3, #0
   1167c:	str	r3, [sp, #12]
   11680:	movw	r3, #0
   11684:	movt	r3, #0
   11688:	str	r3, [sp, #8]
   1168c:	str	r2, [sp, #4]
   11690:	mov	r3, #5
   11694:	str	r3, [sp]
   11698:	mov	r3, #2
   1169c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   116a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   116a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   116a8:	bl	0 <flatcc_json_parser_union_type>
   116ac:	str	r0, [fp, #-60]	; 0xffffffc4
   116b0:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   116b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   116b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   116bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   116c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   116c4:	str	r0, [fp, #-60]	; 0xffffffc4
   116c8:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   116cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   116d0:	mov	r2, #0
   116d4:	mov	r3, #-16777216	; 0xff000000
   116d8:	and	r4, r0, r2
   116dc:	and	r5, r1, r3
   116e0:	cmp	r5, #1795162112	; 0x6b000000
   116e4:	cmpeq	r4, #0
   116e8:	bne	1176c <Fantasy_Movie_parse_json_table+0xa78>
   116ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116f0:	str	r3, [fp, #-40]	; 0xffffffd8
   116f4:	mov	r3, #1
   116f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   116fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11700:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11704:	bl	f54 <flatcc_json_parser_match_symbol>
   11708:	str	r0, [fp, #-60]	; 0xffffffc4
   1170c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11714:	cmp	r2, r3
   11718:	beq	11754 <Fantasy_Movie_parse_json_table+0xa60>
   1171c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11720:	movw	r3, #0
   11724:	movt	r3, #0
   11728:	str	r3, [sp, #8]
   1172c:	str	r2, [sp, #4]
   11730:	mov	r3, #5
   11734:	str	r3, [sp]
   11738:	mov	r3, #2
   1173c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11740:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11744:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11748:	bl	0 <flatcc_json_parser_union>
   1174c:	str	r0, [fp, #-60]	; 0xffffffc4
   11750:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11754:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11758:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1175c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11760:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11764:	str	r0, [fp, #-60]	; 0xffffffc4
   11768:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   1176c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11770:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11774:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11778:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1177c:	str	r0, [fp, #-60]	; 0xffffffc4
   11780:	b	11798 <Fantasy_Movie_parse_json_table+0xaa4>
   11784:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11788:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1178c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11790:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11794:	str	r0, [fp, #-60]	; 0xffffffc4
   11798:	sub	r3, fp, #44	; 0x2c
   1179c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   117a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   117a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   117a8:	bl	b78 <flatcc_json_parser_object_end>
   117ac:	str	r0, [fp, #-60]	; 0xffffffc4
   117b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   117b4:	cmp	r3, #0
   117b8:	bne	10d94 <Fantasy_Movie_parse_json_table+0xa0>
   117bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117c0:	ldr	r3, [r3, #24]
   117c4:	cmp	r3, #0
   117c8:	bne	11828 <Fantasy_Movie_parse_json_table+0xb34>
   117cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   117d0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   117d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   117d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   117dc:	bl	0 <flatcc_json_parser_finalize_unions>
   117e0:	str	r0, [fp, #-60]	; 0xffffffc4
   117e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117e8:	ldr	r3, [r3]
   117ec:	mov	r0, r3
   117f0:	bl	0 <flatcc_builder_end_table>
   117f4:	mov	r2, r0
   117f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   117fc:	str	r2, [r3]
   11800:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11804:	ldr	r3, [r3]
   11808:	cmp	r3, #0
   1180c:	beq	11830 <Fantasy_Movie_parse_json_table+0xb3c>
   11810:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11814:	b	1184c <Fantasy_Movie_parse_json_table+0xb58>
   11818:	nop	{0}
   1181c:	b	11834 <Fantasy_Movie_parse_json_table+0xb40>
   11820:	nop	{0}
   11824:	b	11834 <Fantasy_Movie_parse_json_table+0xb40>
   11828:	nop	{0}
   1182c:	b	11834 <Fantasy_Movie_parse_json_table+0xb40>
   11830:	nop	{0}
   11834:	mov	r3, #33	; 0x21
   11838:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1183c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11840:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11844:	bl	0 <flatcc_json_parser_set_error>
   11848:	mov	r3, r0
   1184c:	mov	r0, r3
   11850:	sub	sp, fp, #28
   11854:	ldrd	r4, [sp]
   11858:	ldrd	r6, [sp, #8]
   1185c:	ldrd	r8, [sp, #16]
   11860:	ldr	fp, [sp, #24]
   11864:	add	sp, sp, #28
   11868:	pop	{pc}		; (ldr pc, [sp], #4)
   1186c:	nop	{0}
   11870:	.word	0x5f6b6963
   11874:	.word	0x73696465
   11878:	.word	0x70650000
   1187c:	.word	0x6b5f7479

00011880 <monster_test_local_json_parser_enum>:
   11880:	push	{fp}		; (str fp, [sp, #-4]!)
   11884:	add	fp, sp, #0
   11888:	sub	sp, sp, #20
   1188c:	str	r0, [fp, #-8]
   11890:	str	r1, [fp, #-12]
   11894:	str	r2, [fp, #-16]
   11898:	str	r3, [fp, #-20]	; 0xffffffec
   1189c:	ldr	r3, [fp, #-12]
   118a0:	mov	r0, r3
   118a4:	add	sp, fp, #0
   118a8:	pop	{fp}		; (ldr fp, [sp], #4)
   118ac:	bx	lr

000118b0 <monster_test_local_MyGame_Example_json_parser_enum>:
   118b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   118b4:	strd	r6, [sp, #8]
   118b8:	strd	r8, [sp, #16]
   118bc:	str	fp, [sp, #24]
   118c0:	str	lr, [sp, #28]
   118c4:	add	fp, sp, #28
   118c8:	sub	sp, sp, #56	; 0x38
   118cc:	str	r0, [fp, #-56]	; 0xffffffc8
   118d0:	str	r1, [fp, #-60]	; 0xffffffc4
   118d4:	str	r2, [fp, #-64]	; 0xffffffc0
   118d8:	str	r3, [fp, #-68]	; 0xffffffbc
   118dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   118e0:	str	r3, [fp, #-32]	; 0xffffffe0
   118e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   118e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   118ec:	bl	940 <flatcc_json_parser_symbol_part>
   118f0:	strd	r0, [fp, #-44]	; 0xffffffd4
   118f4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   118f8:	add	r1, pc, #920	; 0x398
   118fc:	ldrd	r0, [r1]
   11900:	cmp	r3, r1
   11904:	cmpeq	r2, r0
   11908:	bhi	11ae4 <monster_test_local_MyGame_Example_json_parser_enum+0x234>
   1190c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11910:	add	r1, pc, #904	; 0x388
   11914:	ldrd	r0, [r1]
   11918:	cmp	r3, r1
   1191c:	cmpeq	r2, r0
   11920:	bhi	119c4 <monster_test_local_MyGame_Example_json_parser_enum+0x114>
   11924:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11928:	mov	r0, #0
   1192c:	mvn	r1, #255	; 0xff
   11930:	and	ip, r2, r0
   11934:	str	ip, [fp, #-76]	; 0xffffffb4
   11938:	and	r3, r3, r1
   1193c:	str	r3, [fp, #-72]	; 0xffffffb8
   11940:	add	r3, pc, #864	; 0x360
   11944:	ldrd	r2, [r3]
   11948:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1194c:	cmp	r1, r3
   11950:	cmpeq	r0, r2
   11954:	bne	119bc <monster_test_local_MyGame_Example_json_parser_enum+0x10c>
   11958:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1195c:	str	r3, [fp, #-48]	; 0xffffffd0
   11960:	mov	r3, #3
   11964:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11968:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1196c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11970:	bl	994 <flatcc_json_parser_match_scope>
   11974:	str	r0, [fp, #-60]	; 0xffffffc4
   11978:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1197c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11980:	cmp	r2, r3
   11984:	beq	119b4 <monster_test_local_MyGame_Example_json_parser_enum+0x104>
   11988:	ldr	r3, [fp, #8]
   1198c:	str	r3, [sp, #4]
   11990:	ldr	r3, [fp, #4]
   11994:	str	r3, [sp]
   11998:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1199c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   119a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   119a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   119a8:	bl	5500 <MyGame_Example_Any_parse_json_enum>
   119ac:	str	r0, [fp, #-60]	; 0xffffffc4
   119b0:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   119b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119b8:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   119bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119c0:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   119c4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   119c8:	mov	r0, #0
   119cc:	mvn	r1, #255	; 0xff
   119d0:	and	r8, r2, r0
   119d4:	and	r9, r3, r1
   119d8:	add	r3, pc, #720	; 0x2d0
   119dc:	ldrd	r2, [r3]
   119e0:	cmp	r9, r3
   119e4:	cmpeq	r8, r2
   119e8:	bne	11a50 <monster_test_local_MyGame_Example_json_parser_enum+0x1a0>
   119ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   119f0:	str	r3, [fp, #-48]	; 0xffffffd0
   119f4:	mov	r3, #3
   119f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   119fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11a00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11a04:	bl	994 <flatcc_json_parser_match_scope>
   11a08:	str	r0, [fp, #-60]	; 0xffffffc4
   11a0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11a10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11a14:	cmp	r2, r3
   11a18:	beq	11a48 <monster_test_local_MyGame_Example_json_parser_enum+0x198>
   11a1c:	ldr	r3, [fp, #8]
   11a20:	str	r3, [sp, #4]
   11a24:	ldr	r3, [fp, #4]
   11a28:	str	r3, [sp]
   11a2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11a30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11a34:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11a38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11a3c:	bl	4714 <MyGame_Example_Foo_parse_json_enum>
   11a40:	str	r0, [fp, #-60]	; 0xffffffc4
   11a44:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   11a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a4c:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11a50:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11a54:	mov	r0, #-16777216	; 0xff000000
   11a58:	mvn	r1, #0
   11a5c:	and	r6, r2, r0
   11a60:	and	r7, r3, r1
   11a64:	add	r3, pc, #588	; 0x24c
   11a68:	ldrd	r2, [r3]
   11a6c:	cmp	r7, r3
   11a70:	cmpeq	r6, r2
   11a74:	bne	11adc <monster_test_local_MyGame_Example_json_parser_enum+0x22c>
   11a78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11a7c:	str	r3, [fp, #-48]	; 0xffffffd0
   11a80:	mov	r3, #5
   11a84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11a88:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11a8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11a90:	bl	994 <flatcc_json_parser_match_scope>
   11a94:	str	r0, [fp, #-60]	; 0xffffffc4
   11a98:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11a9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11aa0:	cmp	r2, r3
   11aa4:	beq	11ad4 <monster_test_local_MyGame_Example_json_parser_enum+0x224>
   11aa8:	ldr	r3, [fp, #8]
   11aac:	str	r3, [sp, #4]
   11ab0:	ldr	r3, [fp, #4]
   11ab4:	str	r3, [sp]
   11ab8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11abc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11ac0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11ac4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ac8:	bl	50c8 <MyGame_Example_Color_parse_json_enum>
   11acc:	str	r0, [fp, #-60]	; 0xffffffc4
   11ad0:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   11ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ad8:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ae0:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11ae4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11ae8:	add	r1, pc, #464	; 0x1d0
   11aec:	ldrd	r0, [r1]
   11af0:	cmp	r3, r1
   11af4:	cmpeq	r2, r0
   11af8:	bhi	11b80 <monster_test_local_MyGame_Example_json_parser_enum+0x2d0>
   11afc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11b00:	add	r1, pc, #448	; 0x1c0
   11b04:	ldrd	r0, [r1]
   11b08:	cmp	r3, r1
   11b0c:	cmpeq	r2, r0
   11b10:	bne	11b78 <monster_test_local_MyGame_Example_json_parser_enum+0x2c8>
   11b14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11b18:	str	r3, [fp, #-48]	; 0xffffffd0
   11b1c:	mov	r3, #8
   11b20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11b24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11b28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11b2c:	bl	994 <flatcc_json_parser_match_scope>
   11b30:	str	r0, [fp, #-60]	; 0xffffffc4
   11b34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11b38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b3c:	cmp	r2, r3
   11b40:	beq	11b70 <monster_test_local_MyGame_Example_json_parser_enum+0x2c0>
   11b44:	ldr	r3, [fp, #8]
   11b48:	str	r3, [sp, #4]
   11b4c:	ldr	r3, [fp, #4]
   11b50:	str	r3, [sp]
   11b54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11b58:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11b5c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11b60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11b64:	bl	4e70 <MyGame_Example_hex_enum_parse_json_enum>
   11b68:	str	r0, [fp, #-60]	; 0xffffffc4
   11b6c:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   11b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b74:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11b78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b7c:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11b80:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11b84:	add	r1, pc, #324	; 0x144
   11b88:	ldrd	r0, [r1]
   11b8c:	cmp	r3, r1
   11b90:	cmpeq	r2, r0
   11b94:	bhi	11c1c <monster_test_local_MyGame_Example_json_parser_enum+0x36c>
   11b98:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11b9c:	add	r1, pc, #308	; 0x134
   11ba0:	ldrd	r0, [r1]
   11ba4:	cmp	r3, r1
   11ba8:	cmpeq	r2, r0
   11bac:	bne	11c14 <monster_test_local_MyGame_Example_json_parser_enum+0x364>
   11bb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11bb4:	str	r3, [fp, #-48]	; 0xffffffd0
   11bb8:	mov	r3, #8
   11bbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11bc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11bc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11bc8:	bl	994 <flatcc_json_parser_match_scope>
   11bcc:	str	r0, [fp, #-60]	; 0xffffffc4
   11bd0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11bd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11bd8:	cmp	r2, r3
   11bdc:	beq	11c0c <monster_test_local_MyGame_Example_json_parser_enum+0x35c>
   11be0:	ldr	r3, [fp, #8]
   11be4:	str	r3, [sp, #4]
   11be8:	ldr	r3, [fp, #4]
   11bec:	str	r3, [sp]
   11bf0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11bf4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11bf8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11bfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11c00:	bl	4b60 <MyGame_Example_int_enum_parse_json_enum>
   11c04:	str	r0, [fp, #-60]	; 0xffffffc4
   11c08:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   11c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c10:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c18:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11c1c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11c20:	add	r1, pc, #184	; 0xb8
   11c24:	ldrd	r0, [r1]
   11c28:	cmp	r3, r1
   11c2c:	cmpeq	r2, r0
   11c30:	bne	11c90 <monster_test_local_MyGame_Example_json_parser_enum+0x3e0>
   11c34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c38:	str	r3, [fp, #-48]	; 0xffffffd0
   11c3c:	mov	r3, #8
   11c40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11c44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11c4c:	bl	994 <flatcc_json_parser_match_scope>
   11c50:	str	r0, [fp, #-60]	; 0xffffffc4
   11c54:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11c58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c5c:	cmp	r2, r3
   11c60:	beq	11cf8 <monster_test_local_MyGame_Example_json_parser_enum+0x448>
   11c64:	ldr	r3, [fp, #8]
   11c68:	str	r3, [sp, #4]
   11c6c:	ldr	r3, [fp, #4]
   11c70:	str	r3, [sp]
   11c74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11c78:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11c7c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11c80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11c84:	bl	4918 <MyGame_Example_neg_enum_parse_json_enum>
   11c88:	str	r0, [fp, #-60]	; 0xffffffc4
   11c8c:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   11c90:	nop	{0}
   11c94:	b	11cfc <monster_test_local_MyGame_Example_json_parser_enum+0x44c>
   11c98:	.word	0x656e756c
   11c9c:	.word	0x6865785f
   11ca0:	.word	0x71ffffff
   11ca4:	.word	0x436f6c6f
   11ca8:	.word	0x00000000
   11cac:	.word	0x416e7900
   11cb0:	.word	0x00000000
   11cb4:	.word	0x466f6f00
   11cb8:	.word	0x72000000
   11cbc:	.word	0x436f6c6f
   11cc0:	.word	0x656e756c
   11cc4:	.word	0x696e745f
   11cc8:	.word	0x656e756d
   11ccc:	.word	0x6865785f
   11cd0:	.word	0x656e756c
   11cd4:	.word	0x6e65675f
   11cd8:	.word	0x656e756d
   11cdc:	.word	0x696e745f
   11ce0:	.word	0x656e756d
   11ce4:	.word	0x6e65675f
   11ce8:	.word	0x6d707479
   11cec:	.word	0x6e6f7465
   11cf0:	.word	0x00000000
   11cf4:	.word	0x656e756d
   11cf8:	nop	{0}
   11cfc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11d00:	sub	r1, pc, #32
   11d04:	ldrd	r0, [r1]
   11d08:	cmp	r3, r1
   11d0c:	cmpeq	r2, r0
   11d10:	bne	11dc4 <monster_test_local_MyGame_Example_json_parser_enum+0x514>
   11d14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d18:	add	r3, r3, #8
   11d1c:	str	r3, [fp, #-60]	; 0xffffffc4
   11d20:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11d24:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11d28:	bl	940 <flatcc_json_parser_symbol_part>
   11d2c:	strd	r0, [fp, #-44]	; 0xffffffd4
   11d30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11d34:	mov	r0, #0
   11d38:	mvn	r1, #0
   11d3c:	and	r4, r2, r0
   11d40:	and	r5, r3, r1
   11d44:	sub	r3, pc, #92	; 0x5c
   11d48:	ldrd	r2, [r3]
   11d4c:	cmp	r5, r3
   11d50:	cmpeq	r4, r2
   11d54:	bne	11dbc <monster_test_local_MyGame_Example_json_parser_enum+0x50c>
   11d58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d5c:	str	r3, [fp, #-48]	; 0xffffffd0
   11d60:	mov	r3, #4
   11d64:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11d68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11d6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11d70:	bl	994 <flatcc_json_parser_match_scope>
   11d74:	str	r0, [fp, #-60]	; 0xffffffc4
   11d78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11d7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11d80:	cmp	r2, r3
   11d84:	beq	11db4 <monster_test_local_MyGame_Example_json_parser_enum+0x504>
   11d88:	ldr	r3, [fp, #8]
   11d8c:	str	r3, [sp, #4]
   11d90:	ldr	r3, [fp, #4]
   11d94:	str	r3, [sp]
   11d98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11d9c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11da0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   11da4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11da8:	bl	61a0 <MyGame_Example_notemptyenum_parse_json_enum>
   11dac:	str	r0, [fp, #-60]	; 0xffffffc4
   11db0:	b	11dcc <monster_test_local_MyGame_Example_json_parser_enum+0x51c>
   11db4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11db8:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11dc0:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11dc8:	b	11dd0 <monster_test_local_MyGame_Example_json_parser_enum+0x520>
   11dcc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11dd0:	mov	r0, r3
   11dd4:	sub	sp, fp, #28
   11dd8:	ldrd	r4, [sp]
   11ddc:	ldrd	r6, [sp, #8]
   11de0:	ldrd	r8, [sp, #16]
   11de4:	ldr	fp, [sp, #24]
   11de8:	add	sp, sp, #28
   11dec:	pop	{pc}		; (ldr pc, [sp], #4)

00011df0 <monster_test_local_MyGame_Example2_json_parser_enum>:
   11df0:	push	{fp}		; (str fp, [sp, #-4]!)
   11df4:	add	fp, sp, #0
   11df8:	sub	sp, sp, #20
   11dfc:	str	r0, [fp, #-8]
   11e00:	str	r1, [fp, #-12]
   11e04:	str	r2, [fp, #-16]
   11e08:	str	r3, [fp, #-20]	; 0xffffffec
   11e0c:	ldr	r3, [fp, #-12]
   11e10:	mov	r0, r3
   11e14:	add	sp, fp, #0
   11e18:	pop	{fp}		; (ldr fp, [sp], #4)
   11e1c:	bx	lr

00011e20 <monster_test_local_MyGame_json_parser_enum>:
   11e20:	push	{fp}		; (str fp, [sp, #-4]!)
   11e24:	add	fp, sp, #0
   11e28:	sub	sp, sp, #20
   11e2c:	str	r0, [fp, #-8]
   11e30:	str	r1, [fp, #-12]
   11e34:	str	r2, [fp, #-16]
   11e38:	str	r3, [fp, #-20]	; 0xffffffec
   11e3c:	ldr	r3, [fp, #-12]
   11e40:	mov	r0, r3
   11e44:	add	sp, fp, #0
   11e48:	pop	{fp}		; (ldr fp, [sp], #4)
   11e4c:	bx	lr

00011e50 <monster_test_local_Fantasy_json_parser_enum>:
   11e50:	strd	r4, [sp, #-16]!
   11e54:	str	fp, [sp, #8]
   11e58:	str	lr, [sp, #12]
   11e5c:	add	fp, sp, #12
   11e60:	sub	sp, sp, #48	; 0x30
   11e64:	str	r0, [fp, #-40]	; 0xffffffd8
   11e68:	str	r1, [fp, #-44]	; 0xffffffd4
   11e6c:	str	r2, [fp, #-48]	; 0xffffffd0
   11e70:	str	r3, [fp, #-52]	; 0xffffffcc
   11e74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11e78:	str	r3, [fp, #-16]
   11e7c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11e80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e84:	bl	940 <flatcc_json_parser_symbol_part>
   11e88:	strd	r0, [fp, #-28]	; 0xffffffe4
   11e8c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11e90:	add	r1, pc, #216	; 0xd8
   11e94:	ldrd	r0, [r1]
   11e98:	cmp	r3, r1
   11e9c:	cmpeq	r2, r0
   11ea0:	bne	11f50 <monster_test_local_Fantasy_json_parser_enum+0x100>
   11ea4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ea8:	add	r3, r3, #8
   11eac:	str	r3, [fp, #-44]	; 0xffffffd4
   11eb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11eb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11eb8:	bl	940 <flatcc_json_parser_symbol_part>
   11ebc:	strd	r0, [fp, #-28]	; 0xffffffe4
   11ec0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11ec4:	mov	r0, #0
   11ec8:	mov	r1, #-16777216	; 0xff000000
   11ecc:	and	r4, r2, r0
   11ed0:	and	r5, r3, r1
   11ed4:	cmp	r5, #1912602624	; 0x72000000
   11ed8:	cmpeq	r4, #0
   11edc:	bne	11f48 <monster_test_local_Fantasy_json_parser_enum+0xf8>
   11ee0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ee4:	str	r3, [fp, #-32]	; 0xffffffe0
   11ee8:	mov	r3, #1
   11eec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11ef0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11ef4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ef8:	bl	994 <flatcc_json_parser_match_scope>
   11efc:	str	r0, [fp, #-44]	; 0xffffffd4
   11f00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11f04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f08:	cmp	r2, r3
   11f0c:	beq	11f40 <monster_test_local_Fantasy_json_parser_enum+0xf0>
   11f10:	ldr	r3, [fp, #8]
   11f14:	str	r3, [sp, #4]
   11f18:	ldr	r3, [fp, #4]
   11f1c:	str	r3, [sp]
   11f20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11f24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11f2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f30:	bl	107d8 <Fantasy_Character_parse_json_enum>
   11f34:	str	r0, [fp, #-44]	; 0xffffffd4
   11f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11f3c:	b	11f54 <monster_test_local_Fantasy_json_parser_enum+0x104>
   11f40:	ldr	r3, [fp, #-16]
   11f44:	b	11f54 <monster_test_local_Fantasy_json_parser_enum+0x104>
   11f48:	ldr	r3, [fp, #-16]
   11f4c:	b	11f54 <monster_test_local_Fantasy_json_parser_enum+0x104>
   11f50:	ldr	r3, [fp, #-16]
   11f54:	mov	r0, r3
   11f58:	sub	sp, fp, #12
   11f5c:	ldrd	r4, [sp]
   11f60:	ldr	fp, [sp, #8]
   11f64:	add	sp, sp, #12
   11f68:	pop	{pc}		; (ldr pc, [sp], #4)
   11f6c:	nop	{0}
   11f70:	.word	0x61637465
   11f74:	.word	0x43686172

00011f78 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum>:
   11f78:	strd	r4, [sp, #-16]!
   11f7c:	str	fp, [sp, #8]
   11f80:	str	lr, [sp, #12]
   11f84:	add	fp, sp, #12
   11f88:	sub	sp, sp, #48	; 0x30
   11f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   11f90:	str	r1, [fp, #-44]	; 0xffffffd4
   11f94:	str	r2, [fp, #-48]	; 0xffffffd0
   11f98:	str	r3, [fp, #-52]	; 0xffffffcc
   11f9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11fa0:	str	r3, [fp, #-16]
   11fa4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11fa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11fac:	bl	940 <flatcc_json_parser_symbol_part>
   11fb0:	strd	r0, [fp, #-28]	; 0xffffffe4
   11fb4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11fb8:	add	r1, pc, #224	; 0xe0
   11fbc:	ldrd	r0, [r1]
   11fc0:	cmp	r3, r1
   11fc4:	cmpeq	r2, r0
   11fc8:	bne	12080 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x108>
   11fcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11fd0:	add	r3, r3, #8
   11fd4:	str	r3, [fp, #-44]	; 0xffffffd4
   11fd8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11fdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11fe0:	bl	940 <flatcc_json_parser_symbol_part>
   11fe4:	strd	r0, [fp, #-28]	; 0xffffffe4
   11fe8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11fec:	mov	r0, #0
   11ff0:	mvn	r1, #255	; 0xff
   11ff4:	and	r4, r2, r0
   11ff8:	and	r5, r3, r1
   11ffc:	add	r3, pc, #164	; 0xa4
   12000:	ldrd	r2, [r3]
   12004:	cmp	r5, r3
   12008:	cmpeq	r4, r2
   1200c:	bne	12078 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x100>
   12010:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12014:	str	r3, [fp, #-32]	; 0xffffffe0
   12018:	mov	r3, #3
   1201c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12020:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12024:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12028:	bl	994 <flatcc_json_parser_match_scope>
   1202c:	str	r0, [fp, #-44]	; 0xffffffd4
   12030:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12034:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12038:	cmp	r2, r3
   1203c:	beq	12070 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0xf8>
   12040:	ldr	r3, [fp, #8]
   12044:	str	r3, [sp, #4]
   12048:	ldr	r3, [fp, #4]
   1204c:	str	r3, [sp]
   12050:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12054:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12058:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1205c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12060:	bl	34fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
   12064:	str	r0, [fp, #-44]	; 0xffffffd4
   12068:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1206c:	b	12084 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
   12070:	ldr	r3, [fp, #-16]
   12074:	b	12084 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
   12078:	ldr	r3, [fp, #-16]
   1207c:	b	12084 <monster_test_local_MyGame_OtherNameSpace_json_parser_enum+0x10c>
   12080:	ldr	r3, [fp, #-16]
   12084:	mov	r0, r3
   12088:	sub	sp, fp, #12
   1208c:	ldrd	r4, [sp]
   12090:	ldr	fp, [sp, #8]
   12094:	add	sp, sp, #12
   12098:	pop	{pc}		; (ldr pc, [sp], #4)
   1209c:	nop	{0}
   120a0:	.word	0x496e636c
   120a4:	.word	0x46726f6d
   120a8:	.word	0x00000000
   120ac:	.word	0x75646500

000120b0 <monster_test_global_json_parser_enum>:
   120b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   120b4:	strd	r6, [sp, #8]
   120b8:	strd	r8, [sp, #16]
   120bc:	str	fp, [sp, #24]
   120c0:	str	lr, [sp, #28]
   120c4:	add	fp, sp, #28
   120c8:	sub	sp, sp, #96	; 0x60
   120cc:	str	r0, [fp, #-56]	; 0xffffffc8
   120d0:	str	r1, [fp, #-60]	; 0xffffffc4
   120d4:	str	r2, [fp, #-64]	; 0xffffffc0
   120d8:	str	r3, [fp, #-68]	; 0xffffffbc
   120dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   120e0:	str	r3, [fp, #-32]	; 0xffffffe0
   120e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   120e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   120ec:	bl	940 <flatcc_json_parser_symbol_part>
   120f0:	strd	r0, [fp, #-44]	; 0xffffffd4
   120f4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   120f8:	add	r3, pc, #816	; 0x330
   120fc:	ldrd	r2, [r3]
   12100:	cmp	r1, r3
   12104:	cmpeq	r0, r2
   12108:	bhi	12210 <monster_test_global_json_parser_enum+0x160>
   1210c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12110:	add	r1, pc, #800	; 0x320
   12114:	ldrd	r0, [r1]
   12118:	cmp	r3, r1
   1211c:	cmpeq	r2, r0
   12120:	bne	12208 <monster_test_global_json_parser_enum+0x158>
   12124:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12128:	add	r3, r3, #8
   1212c:	str	r3, [fp, #-60]	; 0xffffffc4
   12130:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12134:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12138:	bl	940 <flatcc_json_parser_symbol_part>
   1213c:	strd	r0, [fp, #-44]	; 0xffffffd4
   12140:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12144:	add	r1, pc, #756	; 0x2f4
   12148:	ldrd	r0, [r1]
   1214c:	cmp	r3, r1
   12150:	cmpeq	r2, r0
   12154:	bne	12200 <monster_test_global_json_parser_enum+0x150>
   12158:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1215c:	add	r3, r3, #8
   12160:	str	r3, [fp, #-60]	; 0xffffffc4
   12164:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12168:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1216c:	bl	940 <flatcc_json_parser_symbol_part>
   12170:	strd	r0, [fp, #-44]	; 0xffffffd4
   12174:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12178:	mov	r0, #0
   1217c:	mov	r1, #-16777216	; 0xff000000
   12180:	and	r4, r2, r0
   12184:	and	r5, r3, r1
   12188:	cmp	r5, #1912602624	; 0x72000000
   1218c:	cmpeq	r4, #0
   12190:	bne	121f8 <monster_test_global_json_parser_enum+0x148>
   12194:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12198:	str	r3, [fp, #-48]	; 0xffffffd0
   1219c:	mov	r3, #1
   121a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   121a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   121a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   121ac:	bl	994 <flatcc_json_parser_match_scope>
   121b0:	str	r0, [fp, #-60]	; 0xffffffc4
   121b4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   121b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   121bc:	cmp	r2, r3
   121c0:	beq	121f0 <monster_test_global_json_parser_enum+0x140>
   121c4:	ldr	r3, [fp, #8]
   121c8:	str	r3, [sp, #4]
   121cc:	ldr	r3, [fp, #4]
   121d0:	str	r3, [sp]
   121d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   121d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   121dc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   121e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   121e4:	bl	107d8 <Fantasy_Character_parse_json_enum>
   121e8:	str	r0, [fp, #-60]	; 0xffffffc4
   121ec:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   121f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121f4:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   121f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121fc:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12200:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12204:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1220c:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12210:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12214:	add	r3, pc, #556	; 0x22c
   12218:	ldrd	r2, [r3]
   1221c:	cmp	r1, r3
   12220:	cmpeq	r0, r2
   12224:	bne	1293c <monster_test_global_json_parser_enum+0x88c>
   12228:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1222c:	add	r3, r3, #8
   12230:	str	r3, [fp, #-60]	; 0xffffffc4
   12234:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12238:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1223c:	bl	940 <flatcc_json_parser_symbol_part>
   12240:	strd	r0, [fp, #-44]	; 0xffffffd4
   12244:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12248:	add	r3, pc, #512	; 0x200
   1224c:	ldrd	r2, [r3]
   12250:	cmp	r1, r3
   12254:	cmpeq	r0, r2
   12258:	bhi	125ac <monster_test_global_json_parser_enum+0x4fc>
   1225c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12260:	add	r1, pc, #496	; 0x1f0
   12264:	ldrd	r0, [r1]
   12268:	cmp	r3, r1
   1226c:	cmpeq	r2, r0
   12270:	bhi	12358 <monster_test_global_json_parser_enum+0x2a8>
   12274:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12278:	add	r1, pc, #480	; 0x1e0
   1227c:	ldrd	r0, [r1]
   12280:	cmp	r3, r1
   12284:	cmpeq	r2, r0
   12288:	bne	12350 <monster_test_global_json_parser_enum+0x2a0>
   1228c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12290:	add	r3, r3, #8
   12294:	str	r3, [fp, #-60]	; 0xffffffc4
   12298:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1229c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122a0:	bl	940 <flatcc_json_parser_symbol_part>
   122a4:	strd	r0, [fp, #-44]	; 0xffffffd4
   122a8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   122ac:	mov	r0, #0
   122b0:	mov	r1, #0
   122b4:	movt	r1, #65535	; 0xffff
   122b8:	and	ip, r2, r0
   122bc:	str	ip, [fp, #-76]	; 0xffffffb4
   122c0:	and	r3, r3, r1
   122c4:	str	r3, [fp, #-72]	; 0xffffffb8
   122c8:	mov	r2, #0
   122cc:	mov	r3, #0
   122d0:	movt	r3, #28281	; 0x6e79
   122d4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   122d8:	cmp	r1, r3
   122dc:	cmpeq	r0, r2
   122e0:	bne	12348 <monster_test_global_json_parser_enum+0x298>
   122e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   122e8:	str	r3, [fp, #-48]	; 0xffffffd0
   122ec:	mov	r3, #2
   122f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   122f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   122f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   122fc:	bl	994 <flatcc_json_parser_match_scope>
   12300:	str	r0, [fp, #-60]	; 0xffffffc4
   12304:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12308:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1230c:	cmp	r2, r3
   12310:	beq	12340 <monster_test_global_json_parser_enum+0x290>
   12314:	ldr	r3, [fp, #8]
   12318:	str	r3, [sp, #4]
   1231c:	ldr	r3, [fp, #4]
   12320:	str	r3, [sp]
   12324:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12328:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1232c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12330:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12334:	bl	5500 <MyGame_Example_Any_parse_json_enum>
   12338:	str	r0, [fp, #-60]	; 0xffffffc4
   1233c:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   12340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12344:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1234c:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12350:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12354:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12358:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1235c:	add	r1, pc, #260	; 0x104
   12360:	ldrd	r0, [r1]
   12364:	cmp	r3, r1
   12368:	cmpeq	r2, r0
   1236c:	bne	124c8 <monster_test_global_json_parser_enum+0x418>
   12370:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12374:	add	r3, r3, #8
   12378:	str	r3, [fp, #-60]	; 0xffffffc4
   1237c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12380:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12384:	bl	940 <flatcc_json_parser_symbol_part>
   12388:	strd	r0, [fp, #-44]	; 0xffffffd4
   1238c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12390:	mov	r0, #0
   12394:	mvn	r1, #0
   12398:	and	ip, r2, r0
   1239c:	str	ip, [fp, #-84]	; 0xffffffac
   123a0:	and	r3, r3, r1
   123a4:	str	r3, [fp, #-80]	; 0xffffffb0
   123a8:	add	r3, pc, #192	; 0xc0
   123ac:	ldrd	r2, [r3]
   123b0:	ldrd	r0, [fp, #-84]	; 0xffffffac
   123b4:	cmp	r1, r3
   123b8:	cmpeq	r0, r2
   123bc:	bne	12424 <monster_test_global_json_parser_enum+0x374>
   123c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   123c4:	str	r3, [fp, #-48]	; 0xffffffd0
   123c8:	mov	r3, #4
   123cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   123d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   123d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   123d8:	bl	994 <flatcc_json_parser_match_scope>
   123dc:	str	r0, [fp, #-60]	; 0xffffffc4
   123e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   123e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   123e8:	cmp	r2, r3
   123ec:	beq	1241c <monster_test_global_json_parser_enum+0x36c>
   123f0:	ldr	r3, [fp, #8]
   123f4:	str	r3, [sp, #4]
   123f8:	ldr	r3, [fp, #4]
   123fc:	str	r3, [sp]
   12400:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12404:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12408:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1240c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12410:	bl	50c8 <MyGame_Example_Color_parse_json_enum>
   12414:	str	r0, [fp, #-60]	; 0xffffffc4
   12418:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   1241c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12420:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12424:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12428:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   1242c:	nop	{0}
   12430:	.word	0x6d652e44
   12434:	.word	0x4d794761
   12438:	.word	0x6173792e
   1243c:	.word	0x46616e74
   12440:	.word	0x61637465
   12444:	.word	0x43686172
   12448:	.word	0x6d652e45
   1244c:	.word	0x4d794761
   12450:	.word	0x6c652e67
   12454:	.word	0x78616d70
   12458:	.word	0x6c652e42
   1245c:	.word	0x78616d70
   12460:	.word	0x6c652e41
   12464:	.word	0x78616d70
   12468:	.word	0x6c652e43
   1246c:	.word	0x78616d70
   12470:	.word	0x00000000
   12474:	.word	0x6f6c6f72
   12478:	.word	0x6c652e46
   1247c:	.word	0x78616d70
   12480:	.word	0x6c652e68
   12484:	.word	0x78616d70
   12488:	.word	0x6e756d00
   1248c:	.word	0x65785f65
   12490:	.word	0x6c652e6d
   12494:	.word	0x78616d70
   12498:	.word	0x6c652e69
   1249c:	.word	0x78616d70
   124a0:	.word	0x6e756d00
   124a4:	.word	0x6e745f65
   124a8:	.word	0x6c652e6e
   124ac:	.word	0x78616d70
   124b0:	.word	0x6e756d00
   124b4:	.word	0x65675f65
   124b8:	.word	0x70747965
   124bc:	.word	0x6f74656d
   124c0:	.word	0x00000000
   124c4:	.word	0x6e756d00
   124c8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   124cc:	sub	r1, pc, #92	; 0x5c
   124d0:	ldrd	r0, [r1]
   124d4:	cmp	r3, r1
   124d8:	cmpeq	r2, r0
   124dc:	bne	125a4 <monster_test_global_json_parser_enum+0x4f4>
   124e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   124e4:	add	r3, r3, #8
   124e8:	str	r3, [fp, #-60]	; 0xffffffc4
   124ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   124f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   124f4:	bl	940 <flatcc_json_parser_symbol_part>
   124f8:	strd	r0, [fp, #-44]	; 0xffffffd4
   124fc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12500:	mov	r0, #0
   12504:	mov	r1, #0
   12508:	movt	r1, #65535	; 0xffff
   1250c:	and	ip, r2, r0
   12510:	str	ip, [fp, #-92]	; 0xffffffa4
   12514:	and	r3, r3, r1
   12518:	str	r3, [fp, #-88]	; 0xffffffa8
   1251c:	mov	r2, #0
   12520:	mov	r3, #0
   12524:	movt	r3, #28527	; 0x6f6f
   12528:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   1252c:	cmp	r1, r3
   12530:	cmpeq	r0, r2
   12534:	bne	1259c <monster_test_global_json_parser_enum+0x4ec>
   12538:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1253c:	str	r3, [fp, #-48]	; 0xffffffd0
   12540:	mov	r3, #2
   12544:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12548:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1254c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12550:	bl	994 <flatcc_json_parser_match_scope>
   12554:	str	r0, [fp, #-60]	; 0xffffffc4
   12558:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1255c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12560:	cmp	r2, r3
   12564:	beq	12594 <monster_test_global_json_parser_enum+0x4e4>
   12568:	ldr	r3, [fp, #8]
   1256c:	str	r3, [sp, #4]
   12570:	ldr	r3, [fp, #4]
   12574:	str	r3, [sp]
   12578:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1257c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12580:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12584:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12588:	bl	4714 <MyGame_Example_Foo_parse_json_enum>
   1258c:	str	r0, [fp, #-60]	; 0xffffffc4
   12590:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   12594:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12598:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   1259c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125a0:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   125a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125a8:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   125ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   125b0:	sub	r1, pc, #312	; 0x138
   125b4:	ldrd	r0, [r1]
   125b8:	cmp	r3, r1
   125bc:	cmpeq	r2, r0
   125c0:	bhi	126a0 <monster_test_global_json_parser_enum+0x5f0>
   125c4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   125c8:	sub	r1, pc, #336	; 0x150
   125cc:	ldrd	r0, [r1]
   125d0:	cmp	r3, r1
   125d4:	cmpeq	r2, r0
   125d8:	bne	12698 <monster_test_global_json_parser_enum+0x5e8>
   125dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   125e0:	add	r3, r3, #8
   125e4:	str	r3, [fp, #-60]	; 0xffffffc4
   125e8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   125ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   125f0:	bl	940 <flatcc_json_parser_symbol_part>
   125f4:	strd	r0, [fp, #-44]	; 0xffffffd4
   125f8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   125fc:	mvn	r0, #255	; 0xff
   12600:	mvn	r1, #0
   12604:	and	ip, r2, r0
   12608:	str	ip, [fp, #-100]	; 0xffffff9c
   1260c:	and	r3, r3, r1
   12610:	str	r3, [fp, #-96]	; 0xffffffa0
   12614:	sub	r3, pc, #404	; 0x194
   12618:	ldrd	r2, [r3]
   1261c:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   12620:	cmp	r1, r3
   12624:	cmpeq	r0, r2
   12628:	bne	12690 <monster_test_global_json_parser_enum+0x5e0>
   1262c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12630:	str	r3, [fp, #-48]	; 0xffffffd0
   12634:	mov	r3, #7
   12638:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1263c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12640:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12644:	bl	994 <flatcc_json_parser_match_scope>
   12648:	str	r0, [fp, #-60]	; 0xffffffc4
   1264c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12650:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12654:	cmp	r2, r3
   12658:	beq	12688 <monster_test_global_json_parser_enum+0x5d8>
   1265c:	ldr	r3, [fp, #8]
   12660:	str	r3, [sp, #4]
   12664:	ldr	r3, [fp, #4]
   12668:	str	r3, [sp]
   1266c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12670:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12674:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12678:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1267c:	bl	4e70 <MyGame_Example_hex_enum_parse_json_enum>
   12680:	str	r0, [fp, #-60]	; 0xffffffc4
   12684:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   12688:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1268c:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12694:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12698:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1269c:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   126a0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   126a4:	sub	r1, pc, #540	; 0x21c
   126a8:	ldrd	r0, [r1]
   126ac:	cmp	r3, r1
   126b0:	cmpeq	r2, r0
   126b4:	bhi	12794 <monster_test_global_json_parser_enum+0x6e4>
   126b8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   126bc:	sub	r1, pc, #556	; 0x22c
   126c0:	ldrd	r0, [r1]
   126c4:	cmp	r3, r1
   126c8:	cmpeq	r2, r0
   126cc:	bne	1278c <monster_test_global_json_parser_enum+0x6dc>
   126d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   126d4:	add	r3, r3, #8
   126d8:	str	r3, [fp, #-60]	; 0xffffffc4
   126dc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   126e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   126e4:	bl	940 <flatcc_json_parser_symbol_part>
   126e8:	strd	r0, [fp, #-44]	; 0xffffffd4
   126ec:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   126f0:	mvn	r0, #255	; 0xff
   126f4:	mvn	r1, #0
   126f8:	and	ip, r2, r0
   126fc:	str	ip, [fp, #-108]	; 0xffffff94
   12700:	and	r3, r3, r1
   12704:	str	r3, [fp, #-104]	; 0xffffff98
   12708:	sub	r3, pc, #624	; 0x270
   1270c:	ldrd	r2, [r3]
   12710:	ldrd	r0, [fp, #-108]	; 0xffffff94
   12714:	cmp	r1, r3
   12718:	cmpeq	r0, r2
   1271c:	bne	12784 <monster_test_global_json_parser_enum+0x6d4>
   12720:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12724:	str	r3, [fp, #-48]	; 0xffffffd0
   12728:	mov	r3, #7
   1272c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12730:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12734:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12738:	bl	994 <flatcc_json_parser_match_scope>
   1273c:	str	r0, [fp, #-60]	; 0xffffffc4
   12740:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12744:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12748:	cmp	r2, r3
   1274c:	beq	1277c <monster_test_global_json_parser_enum+0x6cc>
   12750:	ldr	r3, [fp, #8]
   12754:	str	r3, [sp, #4]
   12758:	ldr	r3, [fp, #4]
   1275c:	str	r3, [sp]
   12760:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12764:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12768:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1276c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12770:	bl	4b60 <MyGame_Example_int_enum_parse_json_enum>
   12774:	str	r0, [fp, #-60]	; 0xffffffc4
   12778:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   1277c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12780:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12788:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   1278c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12790:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12794:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12798:	sub	r1, pc, #760	; 0x2f8
   1279c:	ldrd	r0, [r1]
   127a0:	cmp	r3, r1
   127a4:	cmpeq	r2, r0
   127a8:	bne	12934 <monster_test_global_json_parser_enum+0x884>
   127ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   127b0:	add	r3, r3, #8
   127b4:	str	r3, [fp, #-60]	; 0xffffffc4
   127b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   127bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   127c0:	bl	940 <flatcc_json_parser_symbol_part>
   127c4:	strd	r0, [fp, #-44]	; 0xffffffd4
   127c8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   127cc:	mvn	r0, #255	; 0xff
   127d0:	mvn	r1, #0
   127d4:	and	ip, r2, r0
   127d8:	str	ip, [fp, #-116]	; 0xffffff8c
   127dc:	and	r3, r3, r1
   127e0:	str	r3, [fp, #-112]	; 0xffffff90
   127e4:	sub	r3, pc, #828	; 0x33c
   127e8:	ldrd	r2, [r3]
   127ec:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   127f0:	cmp	r1, r3
   127f4:	cmpeq	r0, r2
   127f8:	bne	12858 <monster_test_global_json_parser_enum+0x7a8>
   127fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12800:	str	r3, [fp, #-48]	; 0xffffffd0
   12804:	mov	r3, #7
   12808:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1280c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12810:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12814:	bl	994 <flatcc_json_parser_match_scope>
   12818:	str	r0, [fp, #-60]	; 0xffffffc4
   1281c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12820:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12824:	cmp	r2, r3
   12828:	beq	12860 <monster_test_global_json_parser_enum+0x7b0>
   1282c:	ldr	r3, [fp, #8]
   12830:	str	r3, [sp, #4]
   12834:	ldr	r3, [fp, #4]
   12838:	str	r3, [sp]
   1283c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12840:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12844:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12848:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1284c:	bl	4918 <MyGame_Example_neg_enum_parse_json_enum>
   12850:	str	r0, [fp, #-60]	; 0xffffffc4
   12854:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   12858:	nop	{0}
   1285c:	b	12864 <monster_test_global_json_parser_enum+0x7b4>
   12860:	nop	{0}
   12864:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12868:	sub	r1, pc, #952	; 0x3b8
   1286c:	ldrd	r0, [r1]
   12870:	cmp	r3, r1
   12874:	cmpeq	r2, r0
   12878:	bne	1292c <monster_test_global_json_parser_enum+0x87c>
   1287c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12880:	add	r3, r3, #8
   12884:	str	r3, [fp, #-60]	; 0xffffffc4
   12888:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1288c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12890:	bl	940 <flatcc_json_parser_symbol_part>
   12894:	strd	r0, [fp, #-44]	; 0xffffffd4
   12898:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1289c:	mov	r0, #0
   128a0:	mvn	r1, #255	; 0xff
   128a4:	and	r8, r2, r0
   128a8:	and	r9, r3, r1
   128ac:	sub	r3, pc, #1012	; 0x3f4
   128b0:	ldrd	r2, [r3]
   128b4:	cmp	r9, r3
   128b8:	cmpeq	r8, r2
   128bc:	bne	12924 <monster_test_global_json_parser_enum+0x874>
   128c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   128c4:	str	r3, [fp, #-48]	; 0xffffffd0
   128c8:	mov	r3, #3
   128cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   128d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   128d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   128d8:	bl	994 <flatcc_json_parser_match_scope>
   128dc:	str	r0, [fp, #-60]	; 0xffffffc4
   128e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   128e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   128e8:	cmp	r2, r3
   128ec:	beq	1291c <monster_test_global_json_parser_enum+0x86c>
   128f0:	ldr	r3, [fp, #8]
   128f4:	str	r3, [sp, #4]
   128f8:	ldr	r3, [fp, #4]
   128fc:	str	r3, [sp]
   12900:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12904:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12908:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1290c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12910:	bl	61a0 <MyGame_Example_notemptyenum_parse_json_enum>
   12914:	str	r0, [fp, #-60]	; 0xffffffc4
   12918:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   1291c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12920:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12928:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   1292c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12930:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12934:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12938:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   1293c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12940:	add	r1, pc, #408	; 0x198
   12944:	ldrd	r0, [r1]
   12948:	cmp	r3, r1
   1294c:	cmpeq	r2, r0
   12950:	bne	12ab0 <monster_test_global_json_parser_enum+0xa00>
   12954:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12958:	add	r3, r3, #8
   1295c:	str	r3, [fp, #-60]	; 0xffffffc4
   12960:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12964:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12968:	bl	940 <flatcc_json_parser_symbol_part>
   1296c:	strd	r0, [fp, #-44]	; 0xffffffd4
   12970:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12974:	add	r1, pc, #364	; 0x16c
   12978:	ldrd	r0, [r1]
   1297c:	cmp	r3, r1
   12980:	cmpeq	r2, r0
   12984:	bne	12aa8 <monster_test_global_json_parser_enum+0x9f8>
   12988:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1298c:	add	r3, r3, #8
   12990:	str	r3, [fp, #-60]	; 0xffffffc4
   12994:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12998:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1299c:	bl	940 <flatcc_json_parser_symbol_part>
   129a0:	strd	r0, [fp, #-44]	; 0xffffffd4
   129a4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   129a8:	add	r1, pc, #320	; 0x140
   129ac:	ldrd	r0, [r1]
   129b0:	cmp	r3, r1
   129b4:	cmpeq	r2, r0
   129b8:	bne	12aa0 <monster_test_global_json_parser_enum+0x9f0>
   129bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   129c0:	add	r3, r3, #8
   129c4:	str	r3, [fp, #-60]	; 0xffffffc4
   129c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   129cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   129d0:	bl	940 <flatcc_json_parser_symbol_part>
   129d4:	strd	r0, [fp, #-44]	; 0xffffffd4
   129d8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   129dc:	add	r1, pc, #276	; 0x114
   129e0:	ldrd	r0, [r1]
   129e4:	cmp	r3, r1
   129e8:	cmpeq	r2, r0
   129ec:	bne	12a98 <monster_test_global_json_parser_enum+0x9e8>
   129f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   129f4:	add	r3, r3, #8
   129f8:	str	r3, [fp, #-60]	; 0xffffffc4
   129fc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12a00:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12a04:	bl	940 <flatcc_json_parser_symbol_part>
   12a08:	strd	r0, [fp, #-44]	; 0xffffffd4
   12a0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12a10:	mov	r0, #0
   12a14:	mov	r1, #-16777216	; 0xff000000
   12a18:	and	r6, r2, r0
   12a1c:	and	r7, r3, r1
   12a20:	cmp	r7, #1694498816	; 0x65000000
   12a24:	cmpeq	r6, #0
   12a28:	bne	12a90 <monster_test_global_json_parser_enum+0x9e0>
   12a2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12a30:	str	r3, [fp, #-48]	; 0xffffffd0
   12a34:	mov	r3, #1
   12a38:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12a3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12a40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12a44:	bl	994 <flatcc_json_parser_match_scope>
   12a48:	str	r0, [fp, #-60]	; 0xffffffc4
   12a4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   12a50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12a54:	cmp	r2, r3
   12a58:	beq	12a88 <monster_test_global_json_parser_enum+0x9d8>
   12a5c:	ldr	r3, [fp, #8]
   12a60:	str	r3, [sp, #4]
   12a64:	ldr	r3, [fp, #4]
   12a68:	str	r3, [sp]
   12a6c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12a70:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12a74:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12a78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12a7c:	bl	34fc <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
   12a80:	str	r0, [fp, #-60]	; 0xffffffc4
   12a84:	b	12ab8 <monster_test_global_json_parser_enum+0xa08>
   12a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a8c:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12a90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a94:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a9c:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12aa4:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12aa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12aac:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ab4:	b	12abc <monster_test_global_json_parser_enum+0xa0c>
   12ab8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12abc:	mov	r0, r3
   12ac0:	sub	sp, fp, #28
   12ac4:	ldrd	r4, [sp]
   12ac8:	ldrd	r6, [sp, #8]
   12acc:	ldrd	r8, [sp, #16]
   12ad0:	ldr	fp, [sp, #24]
   12ad4:	add	sp, sp, #28
   12ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   12adc:	nop	{0}
   12ae0:	.word	0x6d652e4f
   12ae4:	.word	0x4d794761
   12ae8:	.word	0x4e616d65
   12aec:	.word	0x74686572
   12af0:	.word	0x652e4672
   12af4:	.word	0x53706163
   12af8:	.word	0x636c7564
   12afc:	.word	0x6f6d496e

00012b00 <monster_test_parse_json>:
   12b00:	str	fp, [sp, #-8]!
   12b04:	str	lr, [sp, #4]
   12b08:	add	fp, sp, #4
   12b0c:	sub	sp, sp, #72	; 0x48
   12b10:	str	r0, [fp, #-56]	; 0xffffffc8
   12b14:	str	r1, [fp, #-60]	; 0xffffffc4
   12b18:	str	r2, [fp, #-64]	; 0xffffffc0
   12b1c:	str	r3, [fp, #-68]	; 0xffffffbc
   12b20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12b24:	cmp	r3, #0
   12b28:	bne	12b34 <monster_test_parse_json+0x34>
   12b2c:	sub	r3, fp, #48	; 0x30
   12b30:	b	12b38 <monster_test_parse_json+0x38>
   12b34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12b38:	str	r3, [fp, #-60]	; 0xffffffc4
   12b3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12b40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12b44:	add	r2, r2, r3
   12b48:	ldr	r3, [fp, #4]
   12b4c:	str	r3, [sp]
   12b50:	mov	r3, r2
   12b54:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12b58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12b5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12b60:	bl	4d4 <flatcc_json_parser_init>
   12b64:	mov	r3, #0
   12b68:	mov	r2, #0
   12b6c:	movw	r1, #0
   12b70:	movt	r1, #0
   12b74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b78:	bl	0 <flatcc_builder_start_buffer>
   12b7c:	mov	r3, r0
   12b80:	cmp	r3, #0
   12b84:	beq	12b90 <monster_test_parse_json+0x90>
   12b88:	mvn	r3, #0
   12b8c:	b	12bfc <monster_test_parse_json+0xfc>
   12b90:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12b94:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12b98:	add	r2, r2, r3
   12b9c:	sub	r3, fp, #52	; 0x34
   12ba0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12ba4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12ba8:	bl	a940 <MyGame_Example_Monster_parse_json_table>
   12bac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bb0:	ldr	r3, [r3, #24]
   12bb4:	cmp	r3, #0
   12bb8:	beq	12bc8 <monster_test_parse_json+0xc8>
   12bbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bc0:	ldr	r3, [r3, #24]
   12bc4:	b	12bfc <monster_test_parse_json+0xfc>
   12bc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12bcc:	mov	r1, r3
   12bd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12bd4:	bl	0 <flatcc_builder_end_buffer>
   12bd8:	mov	r3, r0
   12bdc:	cmp	r3, #0
   12be0:	bne	12bec <monster_test_parse_json+0xec>
   12be4:	mvn	r3, #0
   12be8:	b	12bfc <monster_test_parse_json+0xfc>
   12bec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bf0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12bf4:	str	r2, [r3, #40]	; 0x28
   12bf8:	mov	r3, #0
   12bfc:	mov	r0, r3
   12c00:	sub	sp, fp, #4
   12c04:	ldr	fp, [sp]
   12c08:	add	sp, sp, #4
   12c0c:	pop	{pc}		; (ldr pc, [sp], #4)

00012c10 <flatcc_json_printer_set_unquoted>:
   12c10:	push	{fp}		; (str fp, [sp, #-4]!)
   12c14:	add	fp, sp, #0
   12c18:	sub	sp, sp, #12
   12c1c:	str	r0, [fp, #-8]
   12c20:	str	r1, [fp, #-12]
   12c24:	ldr	r3, [fp, #-12]
   12c28:	cmp	r3, #0
   12c2c:	movne	r3, #1
   12c30:	moveq	r3, #0
   12c34:	uxtb	r3, r3
   12c38:	mov	r2, r3
   12c3c:	ldr	r3, [fp, #-8]
   12c40:	strb	r2, [r3, #26]
   12c44:	nop	{0}
   12c48:	add	sp, fp, #0
   12c4c:	pop	{fp}		; (ldr fp, [sp], #4)
   12c50:	bx	lr

00012c54 <flatcc_json_printer_set_noenum>:
   12c54:	push	{fp}		; (str fp, [sp, #-4]!)
   12c58:	add	fp, sp, #0
   12c5c:	sub	sp, sp, #12
   12c60:	str	r0, [fp, #-8]
   12c64:	str	r1, [fp, #-12]
   12c68:	ldr	r3, [fp, #-12]
   12c6c:	cmp	r3, #0
   12c70:	movne	r3, #1
   12c74:	moveq	r3, #0
   12c78:	uxtb	r3, r3
   12c7c:	mov	r2, r3
   12c80:	ldr	r3, [fp, #-8]
   12c84:	strb	r2, [r3, #27]
   12c88:	nop	{0}
   12c8c:	add	sp, fp, #0
   12c90:	pop	{fp}		; (ldr fp, [sp], #4)
   12c94:	bx	lr

00012c98 <flatcc_json_printer_set_indent>:
   12c98:	push	{fp}		; (str fp, [sp, #-4]!)
   12c9c:	add	fp, sp, #0
   12ca0:	sub	sp, sp, #12
   12ca4:	str	r0, [fp, #-8]
   12ca8:	mov	r3, r1
   12cac:	strb	r3, [fp, #-9]
   12cb0:	ldr	r3, [fp, #-8]
   12cb4:	ldrb	r2, [fp, #-9]
   12cb8:	strb	r2, [r3, #25]
   12cbc:	nop	{0}
   12cc0:	add	sp, fp, #0
   12cc4:	pop	{fp}		; (ldr fp, [sp], #4)
   12cc8:	bx	lr

00012ccc <flatcc_json_printer_set_nonstrict>:
   12ccc:	str	fp, [sp, #-8]!
   12cd0:	str	lr, [sp, #4]
   12cd4:	add	fp, sp, #4
   12cd8:	sub	sp, sp, #8
   12cdc:	str	r0, [fp, #-8]
   12ce0:	mov	r1, #2
   12ce4:	ldr	r0, [fp, #-8]
   12ce8:	bl	12c98 <flatcc_json_printer_set_indent>
   12cec:	mov	r1, #1
   12cf0:	ldr	r0, [fp, #-8]
   12cf4:	bl	12c10 <flatcc_json_printer_set_unquoted>
   12cf8:	mov	r1, #0
   12cfc:	ldr	r0, [fp, #-8]
   12d00:	bl	12c54 <flatcc_json_printer_set_noenum>
   12d04:	nop	{0}
   12d08:	sub	sp, fp, #4
   12d0c:	ldr	fp, [sp]
   12d10:	add	sp, sp, #4
   12d14:	pop	{pc}		; (ldr pc, [sp], #4)

00012d18 <flatcc_json_printer_set_flags>:
   12d18:	str	fp, [sp, #-8]!
   12d1c:	str	lr, [sp, #4]
   12d20:	add	fp, sp, #4
   12d24:	sub	sp, sp, #8
   12d28:	str	r0, [fp, #-8]
   12d2c:	str	r1, [fp, #-12]
   12d30:	ldr	r3, [fp, #-12]
   12d34:	and	r3, r3, #1
   12d38:	cmp	r3, #0
   12d3c:	movne	r3, #1
   12d40:	moveq	r3, #0
   12d44:	uxtb	r3, r3
   12d48:	mov	r2, r3
   12d4c:	ldr	r3, [fp, #-8]
   12d50:	strb	r2, [r3, #26]
   12d54:	ldr	r3, [fp, #-12]
   12d58:	and	r3, r3, #2
   12d5c:	cmp	r3, #0
   12d60:	movne	r3, #1
   12d64:	moveq	r3, #0
   12d68:	uxtb	r3, r3
   12d6c:	mov	r2, r3
   12d70:	ldr	r3, [fp, #-8]
   12d74:	strb	r2, [r3, #27]
   12d78:	ldr	r3, [fp, #-12]
   12d7c:	and	r3, r3, #4
   12d80:	cmp	r3, #0
   12d84:	movne	r3, #1
   12d88:	moveq	r3, #0
   12d8c:	uxtb	r3, r3
   12d90:	mov	r2, r3
   12d94:	ldr	r3, [fp, #-8]
   12d98:	strb	r2, [r3, #28]
   12d9c:	ldr	r3, [fp, #-12]
   12da0:	and	r3, r3, #8
   12da4:	cmp	r3, #0
   12da8:	movne	r3, #1
   12dac:	moveq	r3, #0
   12db0:	uxtb	r3, r3
   12db4:	mov	r2, r3
   12db8:	ldr	r3, [fp, #-8]
   12dbc:	strb	r2, [r3, #29]
   12dc0:	ldr	r3, [fp, #-12]
   12dc4:	and	r3, r3, #16
   12dc8:	cmp	r3, #0
   12dcc:	beq	12ddc <flatcc_json_printer_set_flags+0xc4>
   12dd0:	mov	r1, #2
   12dd4:	ldr	r0, [fp, #-8]
   12dd8:	bl	12c98 <flatcc_json_printer_set_indent>
   12ddc:	ldr	r3, [fp, #-12]
   12de0:	and	r3, r3, #32
   12de4:	cmp	r3, #0
   12de8:	beq	12df4 <flatcc_json_printer_set_flags+0xdc>
   12dec:	ldr	r0, [fp, #-8]
   12df0:	bl	12ccc <flatcc_json_printer_set_nonstrict>
   12df4:	nop	{0}
   12df8:	sub	sp, fp, #4
   12dfc:	ldr	fp, [sp]
   12e00:	add	sp, sp, #4
   12e04:	pop	{pc}		; (ldr pc, [sp], #4)

00012e08 <MyGame_OtherNameSpace_FromInclude_print_json_enum>:
   12e08:	str	fp, [sp, #-8]!
   12e0c:	str	lr, [sp, #4]
   12e10:	add	fp, sp, #4
   12e14:	sub	sp, sp, #16
   12e18:	str	r0, [fp, #-8]
   12e1c:	strd	r2, [fp, #-20]	; 0xffffffec
   12e20:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e24:	orrs	r3, r2, r3
   12e28:	beq	12e40 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x38>
   12e2c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e30:	cmp	r3, #0
   12e34:	cmpeq	r2, #17
   12e38:	beq	12e58 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x50>
   12e3c:	b	12e70 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x68>
   12e40:	mov	r2, #10
   12e44:	movw	r1, #0
   12e48:	movt	r1, #0
   12e4c:	ldr	r0, [fp, #-8]
   12e50:	bl	0 <flatcc_json_printer_enum>
   12e54:	b	12e80 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x78>
   12e58:	mov	r2, #3
   12e5c:	movw	r1, #0
   12e60:	movt	r1, #0
   12e64:	ldr	r0, [fp, #-8]
   12e68:	bl	0 <flatcc_json_printer_enum>
   12e6c:	b	12e80 <MyGame_OtherNameSpace_FromInclude_print_json_enum+0x78>
   12e70:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12e74:	ldr	r0, [fp, #-8]
   12e78:	bl	0 <flatcc_json_printer_int64>
   12e7c:	nop	{0}
   12e80:	nop	{0}
   12e84:	sub	sp, fp, #4
   12e88:	ldr	fp, [sp]
   12e8c:	add	sp, sp, #4
   12e90:	pop	{pc}		; (ldr pc, [sp], #4)

00012e94 <MyGame_OtherNameSpace_Unused_print_json_struct>:
   12e94:	push	{fp}		; (str fp, [sp, #-4]!)
   12e98:	add	fp, sp, #0
   12e9c:	sub	sp, sp, #12
   12ea0:	str	r0, [fp, #-8]
   12ea4:	str	r1, [fp, #-12]
   12ea8:	nop	{0}
   12eac:	add	sp, fp, #0
   12eb0:	pop	{fp}		; (ldr fp, [sp], #4)
   12eb4:	bx	lr

00012eb8 <MyGame_Example_neg_enum_print_json_enum>:
   12eb8:	str	fp, [sp, #-8]!
   12ebc:	str	lr, [sp, #4]
   12ec0:	add	fp, sp, #4
   12ec4:	sub	sp, sp, #8
   12ec8:	str	r0, [fp, #-8]
   12ecc:	str	r1, [fp, #-12]
   12ed0:	ldr	r3, [fp, #-12]
   12ed4:	cmn	r3, #11
   12ed8:	beq	12f0c <MyGame_Example_neg_enum_print_json_enum+0x54>
   12edc:	ldr	r3, [fp, #-12]
   12ee0:	cmn	r3, #10
   12ee4:	beq	12f24 <MyGame_Example_neg_enum_print_json_enum+0x6c>
   12ee8:	ldr	r3, [fp, #-12]
   12eec:	cmn	r3, #12
   12ef0:	bne	12f3c <MyGame_Example_neg_enum_print_json_enum+0x84>
   12ef4:	mov	r2, #4
   12ef8:	movw	r1, #0
   12efc:	movt	r1, #0
   12f00:	ldr	r0, [fp, #-8]
   12f04:	bl	0 <flatcc_json_printer_enum>
   12f08:	b	12f4c <MyGame_Example_neg_enum_print_json_enum+0x94>
   12f0c:	mov	r2, #4
   12f10:	movw	r1, #0
   12f14:	movt	r1, #0
   12f18:	ldr	r0, [fp, #-8]
   12f1c:	bl	0 <flatcc_json_printer_enum>
   12f20:	b	12f4c <MyGame_Example_neg_enum_print_json_enum+0x94>
   12f24:	mov	r2, #4
   12f28:	movw	r1, #0
   12f2c:	movt	r1, #0
   12f30:	ldr	r0, [fp, #-8]
   12f34:	bl	0 <flatcc_json_printer_enum>
   12f38:	b	12f4c <MyGame_Example_neg_enum_print_json_enum+0x94>
   12f3c:	ldr	r1, [fp, #-12]
   12f40:	ldr	r0, [fp, #-8]
   12f44:	bl	0 <flatcc_json_printer_int32>
   12f48:	nop	{0}
   12f4c:	nop	{0}
   12f50:	sub	sp, fp, #4
   12f54:	ldr	fp, [sp]
   12f58:	add	sp, sp, #4
   12f5c:	pop	{pc}		; (ldr pc, [sp], #4)

00012f60 <MyGame_Example_int_enum_print_json_enum>:
   12f60:	str	fp, [sp, #-8]!
   12f64:	str	lr, [sp, #4]
   12f68:	add	fp, sp, #4
   12f6c:	sub	sp, sp, #8
   12f70:	str	r0, [fp, #-8]
   12f74:	str	r1, [fp, #-12]
   12f78:	ldr	r3, [fp, #-12]
   12f7c:	cmn	r3, #1
   12f80:	beq	12fd4 <MyGame_Example_int_enum_print_json_enum+0x74>
   12f84:	ldr	r3, [fp, #-12]
   12f88:	cmp	r3, #0
   12f8c:	bge	12fa0 <MyGame_Example_int_enum_print_json_enum+0x40>
   12f90:	ldr	r3, [fp, #-12]
   12f94:	cmn	r3, #2
   12f98:	beq	12fbc <MyGame_Example_int_enum_print_json_enum+0x5c>
   12f9c:	b	1301c <MyGame_Example_int_enum_print_json_enum+0xbc>
   12fa0:	ldr	r3, [fp, #-12]
   12fa4:	cmp	r3, #2
   12fa8:	beq	12fec <MyGame_Example_int_enum_print_json_enum+0x8c>
   12fac:	ldr	r3, [fp, #-12]
   12fb0:	cmp	r3, #42	; 0x2a
   12fb4:	beq	13004 <MyGame_Example_int_enum_print_json_enum+0xa4>
   12fb8:	b	1301c <MyGame_Example_int_enum_print_json_enum+0xbc>
   12fbc:	mov	r2, #6
   12fc0:	movw	r1, #0
   12fc4:	movt	r1, #0
   12fc8:	ldr	r0, [fp, #-8]
   12fcc:	bl	0 <flatcc_json_printer_enum>
   12fd0:	b	1302c <MyGame_Example_int_enum_print_json_enum+0xcc>
   12fd4:	mov	r2, #7
   12fd8:	movw	r1, #0
   12fdc:	movt	r1, #0
   12fe0:	ldr	r0, [fp, #-8]
   12fe4:	bl	0 <flatcc_json_printer_enum>
   12fe8:	b	1302c <MyGame_Example_int_enum_print_json_enum+0xcc>
   12fec:	mov	r2, #4
   12ff0:	movw	r1, #0
   12ff4:	movt	r1, #0
   12ff8:	ldr	r0, [fp, #-8]
   12ffc:	bl	0 <flatcc_json_printer_enum>
   13000:	b	1302c <MyGame_Example_int_enum_print_json_enum+0xcc>
   13004:	mov	r2, #4
   13008:	movw	r1, #0
   1300c:	movt	r1, #0
   13010:	ldr	r0, [fp, #-8]
   13014:	bl	0 <flatcc_json_printer_enum>
   13018:	b	1302c <MyGame_Example_int_enum_print_json_enum+0xcc>
   1301c:	ldr	r1, [fp, #-12]
   13020:	ldr	r0, [fp, #-8]
   13024:	bl	0 <flatcc_json_printer_int32>
   13028:	nop	{0}
   1302c:	nop	{0}
   13030:	sub	sp, fp, #4
   13034:	ldr	fp, [sp]
   13038:	add	sp, sp, #4
   1303c:	pop	{pc}		; (ldr pc, [sp], #4)

00013040 <MyGame_Example_hex_enum_print_json_enum>:
   13040:	str	fp, [sp, #-8]!
   13044:	str	lr, [sp, #4]
   13048:	add	fp, sp, #4
   1304c:	sub	sp, sp, #8
   13050:	str	r0, [fp, #-8]
   13054:	str	r1, [fp, #-12]
   13058:	ldr	r3, [fp, #-12]
   1305c:	cmp	r3, #3
   13060:	beq	1309c <MyGame_Example_hex_enum_print_json_enum+0x5c>
   13064:	ldr	r2, [fp, #-12]
   13068:	movw	r3, #48815	; 0xbeaf
   1306c:	movt	r3, #32431	; 0x7eaf
   13070:	cmp	r2, r3
   13074:	beq	130b4 <MyGame_Example_hex_enum_print_json_enum+0x74>
   13078:	ldr	r3, [fp, #-12]
   1307c:	cmn	r3, #2
   13080:	bne	130cc <MyGame_Example_hex_enum_print_json_enum+0x8c>
   13084:	mov	r2, #6
   13088:	movw	r1, #0
   1308c:	movt	r1, #0
   13090:	ldr	r0, [fp, #-8]
   13094:	bl	0 <flatcc_json_printer_enum>
   13098:	b	130dc <MyGame_Example_hex_enum_print_json_enum+0x9c>
   1309c:	mov	r2, #4
   130a0:	movw	r1, #0
   130a4:	movt	r1, #0
   130a8:	ldr	r0, [fp, #-8]
   130ac:	bl	0 <flatcc_json_printer_enum>
   130b0:	b	130dc <MyGame_Example_hex_enum_print_json_enum+0x9c>
   130b4:	mov	r2, #4
   130b8:	movw	r1, #0
   130bc:	movt	r1, #0
   130c0:	ldr	r0, [fp, #-8]
   130c4:	bl	0 <flatcc_json_printer_enum>
   130c8:	b	130dc <MyGame_Example_hex_enum_print_json_enum+0x9c>
   130cc:	ldr	r1, [fp, #-12]
   130d0:	ldr	r0, [fp, #-8]
   130d4:	bl	0 <flatcc_json_printer_int32>
   130d8:	nop	{0}
   130dc:	nop	{0}
   130e0:	sub	sp, fp, #4
   130e4:	ldr	fp, [sp]
   130e8:	add	sp, sp, #4
   130ec:	pop	{pc}		; (ldr pc, [sp], #4)

000130f0 <MyGame_Example_Color_print_json_enum>:
   130f0:	str	fp, [sp, #-8]!
   130f4:	str	lr, [sp, #4]
   130f8:	add	fp, sp, #4
   130fc:	sub	sp, sp, #24
   13100:	str	r0, [fp, #-24]	; 0xffffffe8
   13104:	mov	r3, r1
   13108:	strb	r3, [fp, #-25]	; 0xffffffe7
   1310c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13110:	strb	r3, [fp, #-9]
   13114:	ldrb	r2, [fp, #-9]
   13118:	ldrb	r3, [fp, #-9]
   1311c:	sub	r3, r3, #1
   13120:	and	r3, r3, r2
   13124:	cmp	r3, #0
   13128:	movne	r3, #1
   1312c:	moveq	r3, #0
   13130:	uxtb	r3, r3
   13134:	str	r3, [fp, #-16]
   13138:	mov	r3, #0
   1313c:	str	r3, [fp, #-8]
   13140:	ldrb	r3, [fp, #-9]
   13144:	and	r3, r3, #244	; 0xf4
   13148:	cmp	r3, #0
   1314c:	bne	1315c <MyGame_Example_Color_print_json_enum+0x6c>
   13150:	ldrb	r3, [fp, #-9]
   13154:	cmp	r3, #0
   13158:	bne	13170 <MyGame_Example_Color_print_json_enum+0x80>
   1315c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   13160:	mov	r1, r3
   13164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13168:	bl	0 <flatcc_json_printer_int8>
   1316c:	b	13218 <MyGame_Example_Color_print_json_enum+0x128>
   13170:	ldr	r1, [fp, #-16]
   13174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13178:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   1317c:	ldrb	r3, [fp, #-9]
   13180:	and	r3, r3, #1
   13184:	cmp	r3, #0
   13188:	beq	131ac <MyGame_Example_Color_print_json_enum+0xbc>
   1318c:	ldr	r1, [fp, #-8]
   13190:	add	r3, r1, #1
   13194:	str	r3, [fp, #-8]
   13198:	mov	r3, #3
   1319c:	movw	r2, #0
   131a0:	movt	r2, #0
   131a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131a8:	bl	0 <flatcc_json_printer_enum_flag>
   131ac:	ldrb	r3, [fp, #-9]
   131b0:	and	r3, r3, #2
   131b4:	cmp	r3, #0
   131b8:	beq	131dc <MyGame_Example_Color_print_json_enum+0xec>
   131bc:	ldr	r1, [fp, #-8]
   131c0:	add	r3, r1, #1
   131c4:	str	r3, [fp, #-8]
   131c8:	mov	r3, #5
   131cc:	movw	r2, #0
   131d0:	movt	r2, #0
   131d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131d8:	bl	0 <flatcc_json_printer_enum_flag>
   131dc:	ldrb	r3, [fp, #-9]
   131e0:	and	r3, r3, #8
   131e4:	cmp	r3, #0
   131e8:	beq	1320c <MyGame_Example_Color_print_json_enum+0x11c>
   131ec:	ldr	r1, [fp, #-8]
   131f0:	add	r3, r1, #1
   131f4:	str	r3, [fp, #-8]
   131f8:	mov	r3, #4
   131fc:	movw	r2, #0
   13200:	movt	r2, #0
   13204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13208:	bl	0 <flatcc_json_printer_enum_flag>
   1320c:	ldr	r1, [fp, #-16]
   13210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13214:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   13218:	sub	sp, fp, #4
   1321c:	ldr	fp, [sp]
   13220:	add	sp, sp, #4
   13224:	pop	{pc}		; (ldr pc, [sp], #4)

00013228 <MyGame_Example_notemptyenum_print_json_enum>:
   13228:	str	fp, [sp, #-8]!
   1322c:	str	lr, [sp, #4]
   13230:	add	fp, sp, #4
   13234:	sub	sp, sp, #8
   13238:	str	r0, [fp, #-8]
   1323c:	str	r1, [fp, #-12]
   13240:	ldr	r3, [fp, #-12]
   13244:	cmp	r3, #0
   13248:	bne	13264 <MyGame_Example_notemptyenum_print_json_enum+0x3c>
   1324c:	mov	r2, #1
   13250:	movw	r1, #0
   13254:	movt	r1, #0
   13258:	ldr	r0, [fp, #-8]
   1325c:	bl	0 <flatcc_json_printer_enum>
   13260:	b	13274 <MyGame_Example_notemptyenum_print_json_enum+0x4c>
   13264:	ldr	r1, [fp, #-12]
   13268:	ldr	r0, [fp, #-8]
   1326c:	bl	0 <flatcc_json_printer_int32>
   13270:	nop	{0}
   13274:	nop	{0}
   13278:	sub	sp, fp, #4
   1327c:	ldr	fp, [sp]
   13280:	add	sp, sp, #4
   13284:	pop	{pc}		; (ldr pc, [sp], #4)

00013288 <MyGame_Example_Foo_print_json_union_type>:
   13288:	str	fp, [sp, #-8]!
   1328c:	str	lr, [sp, #4]
   13290:	add	fp, sp, #4
   13294:	sub	sp, sp, #8
   13298:	str	r0, [fp, #-8]
   1329c:	mov	r3, r1
   132a0:	strb	r3, [fp, #-9]
   132a4:	ldrb	r3, [fp, #-9]
   132a8:	cmp	r3, #1
   132ac:	bne	132c8 <MyGame_Example_Foo_print_json_union_type+0x40>
   132b0:	mov	r2, #17
   132b4:	movw	r1, #0
   132b8:	movt	r1, #0
   132bc:	ldr	r0, [fp, #-8]
   132c0:	bl	0 <flatcc_json_printer_enum>
   132c4:	b	132e0 <MyGame_Example_Foo_print_json_union_type+0x58>
   132c8:	mov	r2, #4
   132cc:	movw	r1, #0
   132d0:	movt	r1, #0
   132d4:	ldr	r0, [fp, #-8]
   132d8:	bl	0 <flatcc_json_printer_enum>
   132dc:	nop	{0}
   132e0:	nop	{0}
   132e4:	sub	sp, fp, #4
   132e8:	ldr	fp, [sp]
   132ec:	add	sp, sp, #4
   132f0:	pop	{pc}		; (ldr pc, [sp], #4)

000132f4 <MyGame_Example_Foo_print_json_union>:
   132f4:	str	fp, [sp, #-8]!
   132f8:	str	lr, [sp, #4]
   132fc:	add	fp, sp, #4
   13300:	sub	sp, sp, #8
   13304:	str	r0, [fp, #-8]
   13308:	str	r1, [fp, #-12]
   1330c:	ldr	r3, [fp, #-12]
   13310:	ldrb	r3, [r3, #8]
   13314:	cmp	r3, #1
   13318:	bne	13334 <MyGame_Example_Foo_print_json_union+0x40>
   1331c:	movw	r2, #0
   13320:	movt	r2, #0
   13324:	ldr	r1, [fp, #-12]
   13328:	ldr	r0, [fp, #-8]
   1332c:	bl	0 <flatcc_json_printer_union_table>
   13330:	b	13338 <MyGame_Example_Foo_print_json_union+0x44>
   13334:	nop	{0}
   13338:	nop	{0}
   1333c:	sub	sp, fp, #4
   13340:	ldr	fp, [sp]
   13344:	add	sp, sp, #4
   13348:	pop	{pc}		; (ldr pc, [sp], #4)

0001334c <MyGame_Example_Any_print_json_union_type>:
   1334c:	str	fp, [sp, #-8]!
   13350:	str	lr, [sp, #4]
   13354:	add	fp, sp, #4
   13358:	sub	sp, sp, #8
   1335c:	str	r0, [fp, #-8]
   13360:	mov	r3, r1
   13364:	strb	r3, [fp, #-9]
   13368:	ldrb	r3, [fp, #-9]
   1336c:	sub	r3, r3, #1
   13370:	cmp	r3, #3
   13374:	ldrls	pc, [pc, r3, lsl #2]
   13378:	b	133ec <MyGame_Example_Any_print_json_union_type+0xa0>
   1337c:	.word	0x0001338c
   13380:	.word	0x000133a4
   13384:	.word	0x000133bc
   13388:	.word	0x000133d4
   1338c:	mov	r2, #7
   13390:	movw	r1, #0
   13394:	movt	r1, #0
   13398:	ldr	r0, [fp, #-8]
   1339c:	bl	0 <flatcc_json_printer_enum>
   133a0:	b	13404 <MyGame_Example_Any_print_json_union_type+0xb8>
   133a4:	mov	r2, #23
   133a8:	movw	r1, #0
   133ac:	movt	r1, #0
   133b0:	ldr	r0, [fp, #-8]
   133b4:	bl	0 <flatcc_json_printer_enum>
   133b8:	b	13404 <MyGame_Example_Any_print_json_union_type+0xb8>
   133bc:	mov	r2, #8
   133c0:	movw	r1, #0
   133c4:	movt	r1, #0
   133c8:	ldr	r0, [fp, #-8]
   133cc:	bl	0 <flatcc_json_printer_enum>
   133d0:	b	13404 <MyGame_Example_Any_print_json_union_type+0xb8>
   133d4:	mov	r2, #3
   133d8:	movw	r1, #0
   133dc:	movt	r1, #0
   133e0:	ldr	r0, [fp, #-8]
   133e4:	bl	0 <flatcc_json_printer_enum>
   133e8:	b	13404 <MyGame_Example_Any_print_json_union_type+0xb8>
   133ec:	mov	r2, #4
   133f0:	movw	r1, #0
   133f4:	movt	r1, #0
   133f8:	ldr	r0, [fp, #-8]
   133fc:	bl	0 <flatcc_json_printer_enum>
   13400:	nop	{0}
   13404:	nop	{0}
   13408:	sub	sp, fp, #4
   1340c:	ldr	fp, [sp]
   13410:	add	sp, sp, #4
   13414:	pop	{pc}		; (ldr pc, [sp], #4)

00013418 <MyGame_Example_Any_print_json_union>:
   13418:	str	fp, [sp, #-8]!
   1341c:	str	lr, [sp, #4]
   13420:	add	fp, sp, #4
   13424:	sub	sp, sp, #8
   13428:	str	r0, [fp, #-8]
   1342c:	str	r1, [fp, #-12]
   13430:	ldr	r3, [fp, #-12]
   13434:	ldrb	r3, [r3, #8]
   13438:	sub	r3, r3, #1
   1343c:	cmp	r3, #3
   13440:	ldrls	pc, [pc, r3, lsl #2]
   13444:	b	134b8 <MyGame_Example_Any_print_json_union+0xa0>
   13448:	.word	0x00013458
   1344c:	.word	0x00013470
   13450:	.word	0x00013488
   13454:	.word	0x000134a0
   13458:	movw	r2, #0
   1345c:	movt	r2, #0
   13460:	ldr	r1, [fp, #-12]
   13464:	ldr	r0, [fp, #-8]
   13468:	bl	0 <flatcc_json_printer_union_table>
   1346c:	b	134bc <MyGame_Example_Any_print_json_union+0xa4>
   13470:	movw	r2, #0
   13474:	movt	r2, #0
   13478:	ldr	r1, [fp, #-12]
   1347c:	ldr	r0, [fp, #-8]
   13480:	bl	0 <flatcc_json_printer_union_table>
   13484:	b	134bc <MyGame_Example_Any_print_json_union+0xa4>
   13488:	movw	r2, #0
   1348c:	movt	r2, #0
   13490:	ldr	r1, [fp, #-12]
   13494:	ldr	r0, [fp, #-8]
   13498:	bl	0 <flatcc_json_printer_union_table>
   1349c:	b	134bc <MyGame_Example_Any_print_json_union+0xa4>
   134a0:	movw	r2, #0
   134a4:	movt	r2, #0
   134a8:	ldr	r1, [fp, #-12]
   134ac:	ldr	r0, [fp, #-8]
   134b0:	bl	0 <flatcc_json_printer_union_table>
   134b4:	b	134bc <MyGame_Example_Any_print_json_union+0xa4>
   134b8:	nop	{0}
   134bc:	nop	{0}
   134c0:	sub	sp, fp, #4
   134c4:	ldr	fp, [sp]
   134c8:	add	sp, sp, #4
   134cc:	pop	{pc}		; (ldr pc, [sp], #4)

000134d0 <Fantasy_Character_print_json_union_type>:
   134d0:	str	fp, [sp, #-8]!
   134d4:	str	lr, [sp, #4]
   134d8:	add	fp, sp, #4
   134dc:	sub	sp, sp, #8
   134e0:	str	r0, [fp, #-8]
   134e4:	mov	r3, r1
   134e8:	strb	r3, [fp, #-9]
   134ec:	ldrb	r3, [fp, #-9]
   134f0:	cmp	r3, #9
   134f4:	beq	13560 <Fantasy_Character_print_json_union_type+0x90>
   134f8:	cmp	r3, #9
   134fc:	bgt	13514 <Fantasy_Character_print_json_union_type+0x44>
   13500:	cmp	r3, #2
   13504:	beq	13530 <Fantasy_Character_print_json_union_type+0x60>
   13508:	cmp	r3, #8
   1350c:	beq	13548 <Fantasy_Character_print_json_union_type+0x78>
   13510:	b	135c0 <Fantasy_Character_print_json_union_type+0xf0>
   13514:	cmp	r3, #11
   13518:	beq	13590 <Fantasy_Character_print_json_union_type+0xc0>
   1351c:	cmp	r3, #11
   13520:	blt	13578 <Fantasy_Character_print_json_union_type+0xa8>
   13524:	cmp	r3, #255	; 0xff
   13528:	beq	135a8 <Fantasy_Character_print_json_union_type+0xd8>
   1352c:	b	135c0 <Fantasy_Character_print_json_union_type+0xf0>
   13530:	mov	r2, #5
   13534:	movw	r1, #0
   13538:	movt	r1, #0
   1353c:	ldr	r0, [fp, #-8]
   13540:	bl	0 <flatcc_json_printer_enum>
   13544:	b	135d8 <Fantasy_Character_print_json_union_type+0x108>
   13548:	mov	r2, #8
   1354c:	movw	r1, #0
   13550:	movt	r1, #0
   13554:	ldr	r0, [fp, #-8]
   13558:	bl	0 <flatcc_json_printer_enum>
   1355c:	b	135d8 <Fantasy_Character_print_json_union_type+0x108>
   13560:	mov	r2, #5
   13564:	movw	r1, #0
   13568:	movt	r1, #0
   1356c:	ldr	r0, [fp, #-8]
   13570:	bl	0 <flatcc_json_printer_enum>
   13574:	b	135d8 <Fantasy_Character_print_json_union_type+0x108>
   13578:	mov	r2, #7
   1357c:	movw	r1, #0
   13580:	movt	r1, #0
   13584:	ldr	r0, [fp, #-8]
   13588:	bl	0 <flatcc_json_printer_enum>
   1358c:	b	135d8 <Fantasy_Character_print_json_union_type+0x108>
   13590:	mov	r2, #5
   13594:	movw	r1, #0
   13598:	movt	r1, #0
   1359c:	ldr	r0, [fp, #-8]
   135a0:	bl	0 <flatcc_json_printer_enum>
   135a4:	b	135d8 <Fantasy_Character_print_json_union_type+0x108>
   135a8:	mov	r2, #6
   135ac:	movw	r1, #0
   135b0:	movt	r1, #0
   135b4:	ldr	r0, [fp, #-8]
   135b8:	bl	0 <flatcc_json_printer_enum>
   135bc:	b	135d8 <Fantasy_Character_print_json_union_type+0x108>
   135c0:	mov	r2, #4
   135c4:	movw	r1, #0
   135c8:	movt	r1, #0
   135cc:	ldr	r0, [fp, #-8]
   135d0:	bl	0 <flatcc_json_printer_enum>
   135d4:	nop	{0}
   135d8:	nop	{0}
   135dc:	sub	sp, fp, #4
   135e0:	ldr	fp, [sp]
   135e4:	add	sp, sp, #4
   135e8:	pop	{pc}		; (ldr pc, [sp], #4)

000135ec <Fantasy_Character_print_json_union>:
   135ec:	str	fp, [sp, #-8]!
   135f0:	str	lr, [sp, #4]
   135f4:	add	fp, sp, #4
   135f8:	sub	sp, sp, #8
   135fc:	str	r0, [fp, #-8]
   13600:	str	r1, [fp, #-12]
   13604:	ldr	r3, [fp, #-12]
   13608:	ldrb	r3, [r3, #8]
   1360c:	cmp	r3, #9
   13610:	beq	1367c <Fantasy_Character_print_json_union+0x90>
   13614:	cmp	r3, #9
   13618:	bgt	13630 <Fantasy_Character_print_json_union+0x44>
   1361c:	cmp	r3, #2
   13620:	beq	1364c <Fantasy_Character_print_json_union+0x60>
   13624:	cmp	r3, #8
   13628:	beq	13664 <Fantasy_Character_print_json_union+0x78>
   1362c:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   13630:	cmp	r3, #11
   13634:	beq	136ac <Fantasy_Character_print_json_union+0xc0>
   13638:	cmp	r3, #11
   1363c:	blt	13694 <Fantasy_Character_print_json_union+0xa8>
   13640:	cmp	r3, #255	; 0xff
   13644:	beq	136bc <Fantasy_Character_print_json_union+0xd0>
   13648:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   1364c:	movw	r2, #0
   13650:	movt	r2, #0
   13654:	ldr	r1, [fp, #-12]
   13658:	ldr	r0, [fp, #-8]
   1365c:	bl	0 <flatcc_json_printer_union_table>
   13660:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   13664:	movw	r2, #0
   13668:	movt	r2, #0
   1366c:	ldr	r1, [fp, #-12]
   13670:	ldr	r0, [fp, #-8]
   13674:	bl	0 <flatcc_json_printer_union_struct>
   13678:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   1367c:	movw	r2, #0
   13680:	movt	r2, #0
   13684:	ldr	r1, [fp, #-12]
   13688:	ldr	r0, [fp, #-8]
   1368c:	bl	0 <flatcc_json_printer_union_struct>
   13690:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   13694:	movw	r2, #0
   13698:	movt	r2, #0
   1369c:	ldr	r1, [fp, #-12]
   136a0:	ldr	r0, [fp, #-8]
   136a4:	bl	0 <flatcc_json_printer_union_struct>
   136a8:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   136ac:	ldr	r1, [fp, #-12]
   136b0:	ldr	r0, [fp, #-8]
   136b4:	bl	0 <flatcc_json_printer_union_string>
   136b8:	b	136cc <Fantasy_Character_print_json_union+0xe0>
   136bc:	ldr	r1, [fp, #-12]
   136c0:	ldr	r0, [fp, #-8]
   136c4:	bl	0 <flatcc_json_printer_union_string>
   136c8:	nop	{0}
   136cc:	nop	{0}
   136d0:	sub	sp, fp, #4
   136d4:	ldr	fp, [sp]
   136d8:	add	sp, sp, #4
   136dc:	pop	{pc}		; (ldr pc, [sp], #4)

000136e0 <InGlobalNamespace_print_json_struct>:
   136e0:	push	{fp}		; (str fp, [sp, #-4]!)
   136e4:	add	fp, sp, #0
   136e8:	sub	sp, sp, #12
   136ec:	str	r0, [fp, #-8]
   136f0:	str	r1, [fp, #-12]
   136f4:	nop	{0}
   136f8:	add	sp, fp, #0
   136fc:	pop	{fp}		; (ldr fp, [sp], #4)
   13700:	bx	lr

00013704 <MyGame_Example_Test_print_json_struct>:
   13704:	str	fp, [sp, #-8]!
   13708:	str	lr, [sp, #4]
   1370c:	add	fp, sp, #4
   13710:	sub	sp, sp, #16
   13714:	str	r0, [fp, #-8]
   13718:	str	r1, [fp, #-12]
   1371c:	mov	r3, #1
   13720:	str	r3, [sp, #4]
   13724:	movw	r3, #0
   13728:	movt	r3, #0
   1372c:	str	r3, [sp]
   13730:	mov	r3, #0
   13734:	ldr	r2, [fp, #-12]
   13738:	mov	r1, #0
   1373c:	ldr	r0, [fp, #-8]
   13740:	bl	0 <flatcc_json_printer_int16_struct_field>
   13744:	mov	r3, #1
   13748:	str	r3, [sp, #4]
   1374c:	movw	r3, #0
   13750:	movt	r3, #0
   13754:	str	r3, [sp]
   13758:	mov	r3, #2
   1375c:	ldr	r2, [fp, #-12]
   13760:	mov	r1, #1
   13764:	ldr	r0, [fp, #-8]
   13768:	bl	0 <flatcc_json_printer_int8_struct_field>
   1376c:	nop	{0}
   13770:	sub	sp, fp, #4
   13774:	ldr	fp, [sp]
   13778:	add	sp, sp, #4
   1377c:	pop	{pc}		; (ldr pc, [sp], #4)

00013780 <MyGame_Example_emptystruct_print_json_struct>:
   13780:	push	{fp}		; (str fp, [sp, #-4]!)
   13784:	add	fp, sp, #0
   13788:	sub	sp, sp, #12
   1378c:	str	r0, [fp, #-8]
   13790:	str	r1, [fp, #-12]
   13794:	nop	{0}
   13798:	add	sp, fp, #0
   1379c:	pop	{fp}		; (ldr fp, [sp], #4)
   137a0:	bx	lr

000137a4 <MyGame_Example_Vec3_print_json_struct>:
   137a4:	str	fp, [sp, #-8]!
   137a8:	str	lr, [sp, #4]
   137ac:	add	fp, sp, #4
   137b0:	sub	sp, sp, #24
   137b4:	str	r0, [fp, #-8]
   137b8:	str	r1, [fp, #-12]
   137bc:	mov	r3, #1
   137c0:	str	r3, [sp, #4]
   137c4:	movw	r3, #0
   137c8:	movt	r3, #0
   137cc:	str	r3, [sp]
   137d0:	mov	r3, #0
   137d4:	ldr	r2, [fp, #-12]
   137d8:	mov	r1, #0
   137dc:	ldr	r0, [fp, #-8]
   137e0:	bl	0 <flatcc_json_printer_float_struct_field>
   137e4:	mov	r3, #1
   137e8:	str	r3, [sp, #4]
   137ec:	movw	r3, #0
   137f0:	movt	r3, #0
   137f4:	str	r3, [sp]
   137f8:	mov	r3, #4
   137fc:	ldr	r2, [fp, #-12]
   13800:	mov	r1, #1
   13804:	ldr	r0, [fp, #-8]
   13808:	bl	0 <flatcc_json_printer_float_struct_field>
   1380c:	mov	r3, #1
   13810:	str	r3, [sp, #4]
   13814:	movw	r3, #0
   13818:	movt	r3, #0
   1381c:	str	r3, [sp]
   13820:	mov	r3, #8
   13824:	ldr	r2, [fp, #-12]
   13828:	mov	r1, #2
   1382c:	ldr	r0, [fp, #-8]
   13830:	bl	0 <flatcc_json_printer_float_struct_field>
   13834:	mov	r3, #5
   13838:	str	r3, [sp, #4]
   1383c:	movw	r3, #0
   13840:	movt	r3, #0
   13844:	str	r3, [sp]
   13848:	mov	r3, #16
   1384c:	ldr	r2, [fp, #-12]
   13850:	mov	r1, #3
   13854:	ldr	r0, [fp, #-8]
   13858:	bl	0 <flatcc_json_printer_double_struct_field>
   1385c:	movw	r3, #0
   13860:	movt	r3, #0
   13864:	str	r3, [sp, #8]
   13868:	mov	r3, #5
   1386c:	str	r3, [sp, #4]
   13870:	movw	r3, #0
   13874:	movt	r3, #0
   13878:	str	r3, [sp]
   1387c:	mov	r3, #24
   13880:	ldr	r2, [fp, #-12]
   13884:	mov	r1, #4
   13888:	ldr	r0, [fp, #-8]
   1388c:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
   13890:	movw	r3, #0
   13894:	movt	r3, #0
   13898:	str	r3, [sp, #8]
   1389c:	mov	r3, #5
   138a0:	str	r3, [sp, #4]
   138a4:	movw	r3, #0
   138a8:	movt	r3, #0
   138ac:	str	r3, [sp]
   138b0:	mov	r3, #26
   138b4:	ldr	r2, [fp, #-12]
   138b8:	mov	r1, #5
   138bc:	ldr	r0, [fp, #-8]
   138c0:	bl	0 <flatcc_json_printer_embedded_struct_field>
   138c4:	nop	{0}
   138c8:	sub	sp, fp, #4
   138cc:	ldr	fp, [sp]
   138d0:	add	sp, sp, #4
   138d4:	pop	{pc}		; (ldr pc, [sp], #4)

000138d8 <MyGame_Example_Ability_print_json_struct>:
   138d8:	str	fp, [sp, #-8]!
   138dc:	str	lr, [sp, #4]
   138e0:	add	fp, sp, #4
   138e4:	sub	sp, sp, #16
   138e8:	str	r0, [fp, #-8]
   138ec:	str	r1, [fp, #-12]
   138f0:	mov	r3, #2
   138f4:	str	r3, [sp, #4]
   138f8:	movw	r3, #0
   138fc:	movt	r3, #0
   13900:	str	r3, [sp]
   13904:	mov	r3, #0
   13908:	ldr	r2, [fp, #-12]
   1390c:	mov	r1, #0
   13910:	ldr	r0, [fp, #-8]
   13914:	bl	0 <flatcc_json_printer_uint32_struct_field>
   13918:	mov	r3, #8
   1391c:	str	r3, [sp, #4]
   13920:	movw	r3, #0
   13924:	movt	r3, #0
   13928:	str	r3, [sp]
   1392c:	mov	r3, #4
   13930:	ldr	r2, [fp, #-12]
   13934:	mov	r1, #1
   13938:	ldr	r0, [fp, #-8]
   1393c:	bl	0 <flatcc_json_printer_uint32_struct_field>
   13940:	nop	{0}
   13944:	sub	sp, fp, #4
   13948:	ldr	fp, [sp]
   1394c:	add	sp, sp, #4
   13950:	pop	{pc}		; (ldr pc, [sp], #4)

00013954 <Fantasy_Rapunzel_print_json_struct>:
   13954:	str	fp, [sp, #-8]!
   13958:	str	lr, [sp, #4]
   1395c:	add	fp, sp, #4
   13960:	sub	sp, sp, #16
   13964:	str	r0, [fp, #-8]
   13968:	str	r1, [fp, #-12]
   1396c:	mov	r3, #11
   13970:	str	r3, [sp, #4]
   13974:	movw	r3, #0
   13978:	movt	r3, #0
   1397c:	str	r3, [sp]
   13980:	mov	r3, #0
   13984:	ldr	r2, [fp, #-12]
   13988:	mov	r1, #0
   1398c:	ldr	r0, [fp, #-8]
   13990:	bl	0 <flatcc_json_printer_uint16_struct_field>
   13994:	nop	{0}
   13998:	sub	sp, fp, #4
   1399c:	ldr	fp, [sp]
   139a0:	add	sp, sp, #4
   139a4:	pop	{pc}		; (ldr pc, [sp], #4)

000139a8 <Fantasy_BookReader_print_json_struct>:
   139a8:	str	fp, [sp, #-8]!
   139ac:	str	lr, [sp, #4]
   139b0:	add	fp, sp, #4
   139b4:	sub	sp, sp, #16
   139b8:	str	r0, [fp, #-8]
   139bc:	str	r1, [fp, #-12]
   139c0:	mov	r3, #10
   139c4:	str	r3, [sp, #4]
   139c8:	movw	r3, #0
   139cc:	movt	r3, #0
   139d0:	str	r3, [sp]
   139d4:	mov	r3, #0
   139d8:	ldr	r2, [fp, #-12]
   139dc:	mov	r1, #0
   139e0:	ldr	r0, [fp, #-8]
   139e4:	bl	0 <flatcc_json_printer_int32_struct_field>
   139e8:	nop	{0}
   139ec:	sub	sp, fp, #4
   139f0:	ldr	fp, [sp]
   139f4:	add	sp, sp, #4
   139f8:	pop	{pc}		; (ldr pc, [sp], #4)

000139fc <MyGame_InParentNamespace_print_json_table>:
   139fc:	push	{fp}		; (str fp, [sp, #-4]!)
   13a00:	add	fp, sp, #0
   13a04:	sub	sp, sp, #12
   13a08:	str	r0, [fp, #-8]
   13a0c:	str	r1, [fp, #-12]
   13a10:	nop	{0}
   13a14:	add	sp, fp, #0
   13a18:	pop	{fp}		; (ldr fp, [sp], #4)
   13a1c:	bx	lr

00013a20 <MyGame_Example2_Monster_print_json_table>:
   13a20:	push	{fp}		; (str fp, [sp, #-4]!)
   13a24:	add	fp, sp, #0
   13a28:	sub	sp, sp, #12
   13a2c:	str	r0, [fp, #-8]
   13a30:	str	r1, [fp, #-12]
   13a34:	nop	{0}
   13a38:	add	sp, fp, #0
   13a3c:	pop	{fp}		; (ldr fp, [sp], #4)
   13a40:	bx	lr

00013a44 <MyGame_Example_emptytable_print_json_table>:
   13a44:	push	{fp}		; (str fp, [sp, #-4]!)
   13a48:	add	fp, sp, #0
   13a4c:	sub	sp, sp, #12
   13a50:	str	r0, [fp, #-8]
   13a54:	str	r1, [fp, #-12]
   13a58:	nop	{0}
   13a5c:	add	sp, fp, #0
   13a60:	pop	{fp}		; (ldr fp, [sp], #4)
   13a64:	bx	lr

00013a68 <MyGame_Example_with_emptystruct_print_json_table>:
   13a68:	str	fp, [sp, #-8]!
   13a6c:	str	lr, [sp, #4]
   13a70:	add	fp, sp, #4
   13a74:	sub	sp, sp, #16
   13a78:	str	r0, [fp, #-8]
   13a7c:	str	r1, [fp, #-12]
   13a80:	movw	r3, #0
   13a84:	movt	r3, #0
   13a88:	str	r3, [sp, #4]
   13a8c:	mov	r3, #5
   13a90:	str	r3, [sp]
   13a94:	movw	r3, #0
   13a98:	movt	r3, #0
   13a9c:	mov	r2, #0
   13aa0:	ldr	r1, [fp, #-12]
   13aa4:	ldr	r0, [fp, #-8]
   13aa8:	bl	0 <flatcc_json_printer_struct_field>
   13aac:	nop	{0}
   13ab0:	sub	sp, fp, #4
   13ab4:	ldr	fp, [sp]
   13ab8:	add	sp, sp, #4
   13abc:	pop	{pc}		; (ldr pc, [sp], #4)

00013ac0 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
   13ac0:	str	fp, [sp, #-8]!
   13ac4:	str	lr, [sp, #4]
   13ac8:	add	fp, sp, #4
   13acc:	sub	sp, sp, #24
   13ad0:	str	r0, [fp, #-8]
   13ad4:	str	r1, [fp, #-12]
   13ad8:	movw	r3, #0
   13adc:	movt	r3, #0
   13ae0:	str	r3, [sp, #8]
   13ae4:	mov	r3, #2
   13ae8:	str	r3, [sp, #4]
   13aec:	mov	r3, #5
   13af0:	str	r3, [sp]
   13af4:	movw	r3, #0
   13af8:	movt	r3, #0
   13afc:	mov	r2, #0
   13b00:	ldr	r1, [fp, #-12]
   13b04:	ldr	r0, [fp, #-8]
   13b08:	bl	0 <flatcc_json_printer_int8_enum_field>
   13b0c:	movw	r3, #0
   13b10:	movt	r3, #0
   13b14:	str	r3, [sp, #8]
   13b18:	mov	r3, #2
   13b1c:	str	r3, [sp, #4]
   13b20:	mov	r3, #6
   13b24:	str	r3, [sp]
   13b28:	movw	r3, #0
   13b2c:	movt	r3, #0
   13b30:	mov	r2, #1
   13b34:	ldr	r1, [fp, #-12]
   13b38:	ldr	r0, [fp, #-8]
   13b3c:	bl	0 <flatcc_json_printer_int8_enum_field>
   13b40:	mov	r3, #2
   13b44:	str	r3, [sp, #4]
   13b48:	mov	r3, #2
   13b4c:	str	r3, [sp]
   13b50:	movw	r3, #0
   13b54:	movt	r3, #0
   13b58:	mov	r2, #2
   13b5c:	ldr	r1, [fp, #-12]
   13b60:	ldr	r0, [fp, #-8]
   13b64:	bl	0 <flatcc_json_printer_uint8_field>
   13b68:	mov	r3, #2
   13b6c:	str	r3, [sp, #4]
   13b70:	mov	r3, #3
   13b74:	str	r3, [sp]
   13b78:	movw	r3, #0
   13b7c:	movt	r3, #0
   13b80:	mov	r2, #3
   13b84:	ldr	r1, [fp, #-12]
   13b88:	ldr	r0, [fp, #-8]
   13b8c:	bl	0 <flatcc_json_printer_uint8_field>
   13b90:	nop	{0}
   13b94:	sub	sp, fp, #4
   13b98:	ldr	fp, [sp]
   13b9c:	add	sp, sp, #4
   13ba0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ba4 <MyGame_Example_TestInclude_print_json_table>:
   13ba4:	str	fp, [sp, #-8]!
   13ba8:	str	lr, [sp, #4]
   13bac:	add	fp, sp, #4
   13bb0:	sub	sp, sp, #32
   13bb4:	str	r0, [fp, #-8]
   13bb8:	str	r1, [fp, #-12]
   13bbc:	movw	r3, #0
   13bc0:	movt	r3, #0
   13bc4:	str	r3, [sp, #4]
   13bc8:	mov	r3, #6
   13bcc:	str	r3, [sp]
   13bd0:	movw	r3, #0
   13bd4:	movt	r3, #0
   13bd8:	mov	r2, #0
   13bdc:	ldr	r1, [fp, #-12]
   13be0:	ldr	r0, [fp, #-8]
   13be4:	bl	0 <flatcc_json_printer_struct_field>
   13be8:	movw	r3, #0
   13bec:	movt	r3, #0
   13bf0:	str	r3, [sp, #16]
   13bf4:	mov	r2, #0
   13bf8:	mov	r3, #0
   13bfc:	strd	r2, [sp, #8]
   13c00:	mov	r3, #6
   13c04:	str	r3, [sp]
   13c08:	movw	r3, #0
   13c0c:	movt	r3, #0
   13c10:	mov	r2, #1
   13c14:	ldr	r1, [fp, #-12]
   13c18:	ldr	r0, [fp, #-8]
   13c1c:	bl	0 <flatcc_json_printer_int64_enum_field>
   13c20:	movw	r3, #0
   13c24:	movt	r3, #0
   13c28:	str	r3, [sp, #16]
   13c2c:	mov	r2, #0
   13c30:	mov	r3, #0
   13c34:	strd	r2, [sp, #8]
   13c38:	mov	r3, #7
   13c3c:	str	r3, [sp]
   13c40:	movw	r3, #0
   13c44:	movt	r3, #0
   13c48:	mov	r2, #2
   13c4c:	ldr	r1, [fp, #-12]
   13c50:	ldr	r0, [fp, #-8]
   13c54:	bl	0 <flatcc_json_printer_int64_enum_field>
   13c58:	mov	r3, #0
   13c5c:	str	r3, [sp, #4]
   13c60:	mov	r3, #7
   13c64:	str	r3, [sp]
   13c68:	movw	r3, #0
   13c6c:	movt	r3, #0
   13c70:	mov	r2, #3
   13c74:	ldr	r1, [fp, #-12]
   13c78:	ldr	r0, [fp, #-8]
   13c7c:	bl	0 <flatcc_json_printer_int32_field>
   13c80:	movw	r3, #0
   13c84:	movt	r3, #0
   13c88:	str	r3, [sp, #16]
   13c8c:	mov	r2, #0
   13c90:	mov	r3, #0
   13c94:	strd	r2, [sp, #8]
   13c98:	mov	r3, #7
   13c9c:	str	r3, [sp]
   13ca0:	movw	r3, #0
   13ca4:	movt	r3, #0
   13ca8:	mov	r2, #4
   13cac:	ldr	r1, [fp, #-12]
   13cb0:	ldr	r0, [fp, #-8]
   13cb4:	bl	0 <flatcc_json_printer_int64_enum_field>
   13cb8:	mov	r2, #0
   13cbc:	mov	r3, #0
   13cc0:	strd	r2, [sp, #8]
   13cc4:	mov	r3, #7
   13cc8:	str	r3, [sp]
   13ccc:	movw	r3, #0
   13cd0:	movt	r3, #0
   13cd4:	mov	r2, #5
   13cd8:	ldr	r1, [fp, #-12]
   13cdc:	ldr	r0, [fp, #-8]
   13ce0:	bl	0 <flatcc_json_printer_int64_field>
   13ce4:	nop	{0}
   13ce8:	sub	sp, fp, #4
   13cec:	ldr	fp, [sp]
   13cf0:	add	sp, sp, #4
   13cf4:	pop	{pc}		; (ldr pc, [sp], #4)

00013cf8 <MyGame_Example_Stat_print_json_table>:
   13cf8:	str	fp, [sp, #-8]!
   13cfc:	str	lr, [sp, #4]
   13d00:	add	fp, sp, #4
   13d04:	sub	sp, sp, #24
   13d08:	str	r0, [fp, #-8]
   13d0c:	str	r1, [fp, #-12]
   13d10:	mov	r3, #2
   13d14:	str	r3, [sp]
   13d18:	movw	r3, #0
   13d1c:	movt	r3, #0
   13d20:	mov	r2, #0
   13d24:	ldr	r1, [fp, #-12]
   13d28:	ldr	r0, [fp, #-8]
   13d2c:	bl	0 <flatcc_json_printer_string_field>
   13d30:	mov	r2, #0
   13d34:	mov	r3, #0
   13d38:	strd	r2, [sp, #8]
   13d3c:	mov	r3, #3
   13d40:	str	r3, [sp]
   13d44:	movw	r3, #0
   13d48:	movt	r3, #0
   13d4c:	mov	r2, #1
   13d50:	ldr	r1, [fp, #-12]
   13d54:	ldr	r0, [fp, #-8]
   13d58:	bl	0 <flatcc_json_printer_int64_field>
   13d5c:	mov	r3, #0
   13d60:	str	r3, [sp, #4]
   13d64:	mov	r3, #5
   13d68:	str	r3, [sp]
   13d6c:	movw	r3, #0
   13d70:	movt	r3, #0
   13d74:	mov	r2, #2
   13d78:	ldr	r1, [fp, #-12]
   13d7c:	ldr	r0, [fp, #-8]
   13d80:	bl	0 <flatcc_json_printer_uint16_field>
   13d84:	nop	{0}
   13d88:	sub	sp, fp, #4
   13d8c:	ldr	fp, [sp]
   13d90:	add	sp, sp, #4
   13d94:	pop	{pc}		; (ldr pc, [sp], #4)

00013d98 <MyGame_Example_Alt_print_json_table>:
   13d98:	str	fp, [sp, #-8]!
   13d9c:	str	lr, [sp, #4]
   13da0:	add	fp, sp, #4
   13da4:	sub	sp, sp, #24
   13da8:	str	r0, [fp, #-8]
   13dac:	str	r1, [fp, #-12]
   13db0:	movw	r3, #0
   13db4:	movt	r3, #0
   13db8:	str	r3, [sp, #4]
   13dbc:	mov	r3, #6
   13dc0:	str	r3, [sp]
   13dc4:	movw	r3, #0
   13dc8:	movt	r3, #0
   13dcc:	mov	r2, #0
   13dd0:	ldr	r1, [fp, #-12]
   13dd4:	ldr	r0, [fp, #-8]
   13dd8:	bl	0 <flatcc_json_printer_table_field>
   13ddc:	movw	r3, #0
   13de0:	movt	r3, #0
   13de4:	str	r3, [sp, #4]
   13de8:	mov	r3, #5
   13dec:	str	r3, [sp]
   13df0:	movw	r3, #0
   13df4:	movt	r3, #0
   13df8:	mov	r2, #1
   13dfc:	ldr	r1, [fp, #-12]
   13e00:	ldr	r0, [fp, #-8]
   13e04:	bl	0 <flatcc_json_printer_table_field>
   13e08:	movw	r3, #0
   13e0c:	movt	r3, #0
   13e10:	str	r3, [sp, #8]
   13e14:	movw	r3, #0
   13e18:	movt	r3, #0
   13e1c:	str	r3, [sp, #4]
   13e20:	mov	r3, #7
   13e24:	str	r3, [sp]
   13e28:	movw	r3, #0
   13e2c:	movt	r3, #0
   13e30:	mov	r2, #3
   13e34:	ldr	r1, [fp, #-12]
   13e38:	ldr	r0, [fp, #-8]
   13e3c:	bl	0 <flatcc_json_printer_union_vector_field>
   13e40:	nop	{0}
   13e44:	sub	sp, fp, #4
   13e48:	ldr	fp, [sp]
   13e4c:	add	sp, sp, #4
   13e50:	pop	{pc}		; (ldr pc, [sp], #4)

00013e54 <MyGame_Example_TestJSONPrefix_print_json_table>:
   13e54:	str	fp, [sp, #-8]!
   13e58:	str	lr, [sp, #4]
   13e5c:	add	fp, sp, #4
   13e60:	sub	sp, sp, #16
   13e64:	str	r0, [fp, #-8]
   13e68:	str	r1, [fp, #-12]
   13e6c:	movw	r3, #0
   13e70:	movt	r3, #0
   13e74:	str	r3, [sp, #4]
   13e78:	mov	r3, #21
   13e7c:	str	r3, [sp]
   13e80:	movw	r3, #0
   13e84:	movt	r3, #0
   13e88:	mov	r2, #0
   13e8c:	ldr	r1, [fp, #-12]
   13e90:	ldr	r0, [fp, #-8]
   13e94:	bl	0 <flatcc_json_printer_table_field>
   13e98:	movw	r3, #0
   13e9c:	movt	r3, #0
   13ea0:	str	r3, [sp, #4]
   13ea4:	mov	r3, #22
   13ea8:	str	r3, [sp]
   13eac:	movw	r3, #0
   13eb0:	movt	r3, #0
   13eb4:	mov	r2, #1
   13eb8:	ldr	r1, [fp, #-12]
   13ebc:	ldr	r0, [fp, #-8]
   13ec0:	bl	0 <flatcc_json_printer_table_field>
   13ec4:	movw	r3, #0
   13ec8:	movt	r3, #0
   13ecc:	str	r3, [sp, #4]
   13ed0:	mov	r3, #22
   13ed4:	str	r3, [sp]
   13ed8:	movw	r3, #0
   13edc:	movt	r3, #0
   13ee0:	mov	r2, #2
   13ee4:	ldr	r1, [fp, #-12]
   13ee8:	ldr	r0, [fp, #-8]
   13eec:	bl	0 <flatcc_json_printer_table_field>
   13ef0:	nop	{0}
   13ef4:	sub	sp, fp, #4
   13ef8:	ldr	fp, [sp]
   13efc:	add	sp, sp, #4
   13f00:	pop	{pc}		; (ldr pc, [sp], #4)

00013f04 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
   13f04:	str	fp, [sp, #-8]!
   13f08:	str	lr, [sp, #4]
   13f0c:	add	fp, sp, #4
   13f10:	sub	sp, sp, #24
   13f14:	str	r0, [fp, #-8]
   13f18:	str	r1, [fp, #-12]
   13f1c:	mov	r3, #4
   13f20:	str	r3, [sp]
   13f24:	movw	r3, #0
   13f28:	movt	r3, #0
   13f2c:	mov	r2, #0
   13f30:	ldr	r1, [fp, #-12]
   13f34:	ldr	r0, [fp, #-8]
   13f38:	bl	0 <flatcc_json_printer_string_field>
   13f3c:	mov	r3, #0
   13f40:	str	r3, [sp, #4]
   13f44:	mov	r3, #9
   13f48:	str	r3, [sp]
   13f4c:	movw	r3, #0
   13f50:	movt	r3, #0
   13f54:	mov	r2, #1
   13f58:	ldr	r1, [fp, #-12]
   13f5c:	ldr	r0, [fp, #-8]
   13f60:	bl	0 <flatcc_json_printer_uint32_field>
   13f64:	mov	r3, #4
   13f68:	str	r3, [sp]
   13f6c:	movw	r3, #0
   13f70:	movt	r3, #0
   13f74:	mov	r2, #2
   13f78:	ldr	r1, [fp, #-12]
   13f7c:	ldr	r0, [fp, #-8]
   13f80:	bl	0 <flatcc_json_printer_string_field>
   13f84:	mov	r2, #0
   13f88:	mov	r3, #0
   13f8c:	strd	r2, [sp, #8]
   13f90:	mov	r3, #8
   13f94:	str	r3, [sp]
   13f98:	movw	r3, #0
   13f9c:	movt	r3, #0
   13fa0:	mov	r2, #3
   13fa4:	ldr	r1, [fp, #-12]
   13fa8:	ldr	r0, [fp, #-8]
   13fac:	bl	0 <flatcc_json_printer_int64_field>
   13fb0:	mov	r3, #4
   13fb4:	str	r3, [sp]
   13fb8:	movw	r3, #0
   13fbc:	movt	r3, #0
   13fc0:	mov	r2, #4
   13fc4:	ldr	r1, [fp, #-12]
   13fc8:	ldr	r0, [fp, #-8]
   13fcc:	bl	0 <flatcc_json_printer_string_field>
   13fd0:	mov	r2, #0
   13fd4:	mov	r3, #0
   13fd8:	strd	r2, [sp, #8]
   13fdc:	mov	r3, #8
   13fe0:	str	r3, [sp]
   13fe4:	movw	r3, #0
   13fe8:	movt	r3, #0
   13fec:	mov	r2, #5
   13ff0:	ldr	r1, [fp, #-12]
   13ff4:	ldr	r0, [fp, #-8]
   13ff8:	bl	0 <flatcc_json_printer_int64_field>
   13ffc:	mov	r3, #0
   14000:	str	r3, [sp, #4]
   14004:	mov	r3, #9
   14008:	str	r3, [sp]
   1400c:	movw	r3, #0
   14010:	movt	r3, #0
   14014:	mov	r2, #6
   14018:	ldr	r1, [fp, #-12]
   1401c:	ldr	r0, [fp, #-8]
   14020:	bl	0 <flatcc_json_printer_uint32_field>
   14024:	mov	r2, #0
   14028:	mov	r3, #0
   1402c:	strd	r2, [sp, #8]
   14030:	mov	r3, #8
   14034:	str	r3, [sp]
   14038:	movw	r3, #0
   1403c:	movt	r3, #0
   14040:	mov	r2, #7
   14044:	ldr	r1, [fp, #-12]
   14048:	ldr	r0, [fp, #-8]
   1404c:	bl	0 <flatcc_json_printer_int64_field>
   14050:	mov	r3, #0
   14054:	str	r3, [sp, #4]
   14058:	mov	r3, #9
   1405c:	str	r3, [sp]
   14060:	movw	r3, #0
   14064:	movt	r3, #0
   14068:	mov	r2, #8
   1406c:	ldr	r1, [fp, #-12]
   14070:	ldr	r0, [fp, #-8]
   14074:	bl	0 <flatcc_json_printer_uint32_field>
   14078:	nop	{0}
   1407c:	sub	sp, fp, #4
   14080:	ldr	fp, [sp]
   14084:	add	sp, sp, #4
   14088:	pop	{pc}		; (ldr pc, [sp], #4)

0001408c <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
   1408c:	str	fp, [sp, #-8]!
   14090:	str	lr, [sp, #4]
   14094:	add	fp, sp, #4
   14098:	sub	sp, sp, #24
   1409c:	str	r0, [fp, #-8]
   140a0:	str	r1, [fp, #-12]
   140a4:	mov	r2, #0
   140a8:	mov	r3, #0
   140ac:	strd	r2, [sp, #8]
   140b0:	mov	r3, #15
   140b4:	str	r3, [sp]
   140b8:	movw	r3, #0
   140bc:	movt	r3, #0
   140c0:	mov	r2, #0
   140c4:	ldr	r1, [fp, #-12]
   140c8:	ldr	r0, [fp, #-8]
   140cc:	bl	0 <flatcc_json_printer_int64_field>
   140d0:	mov	r3, #0
   140d4:	str	r3, [sp, #4]
   140d8:	mov	r3, #16
   140dc:	str	r3, [sp]
   140e0:	movw	r3, #0
   140e4:	movt	r3, #0
   140e8:	mov	r2, #1
   140ec:	ldr	r1, [fp, #-12]
   140f0:	ldr	r0, [fp, #-8]
   140f4:	bl	0 <flatcc_json_printer_uint32_field>
   140f8:	nop	{0}
   140fc:	sub	sp, fp, #4
   14100:	ldr	fp, [sp]
   14104:	add	sp, sp, #4
   14108:	pop	{pc}		; (ldr pc, [sp], #4)

0001410c <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
   1410c:	str	fp, [sp, #-8]!
   14110:	str	lr, [sp, #4]
   14114:	add	fp, sp, #4
   14118:	sub	sp, sp, #24
   1411c:	str	r0, [fp, #-8]
   14120:	str	r1, [fp, #-12]
   14124:	mov	r2, #0
   14128:	mov	r3, #0
   1412c:	strd	r2, [sp, #8]
   14130:	mov	r3, #15
   14134:	str	r3, [sp]
   14138:	movw	r3, #0
   1413c:	movt	r3, #0
   14140:	mov	r2, #0
   14144:	ldr	r1, [fp, #-12]
   14148:	ldr	r0, [fp, #-8]
   1414c:	bl	0 <flatcc_json_printer_int64_field>
   14150:	mov	r3, #0
   14154:	str	r3, [sp, #4]
   14158:	mov	r3, #21
   1415c:	str	r3, [sp]
   14160:	movw	r3, #0
   14164:	movt	r3, #0
   14168:	mov	r2, #1
   1416c:	ldr	r1, [fp, #-12]
   14170:	ldr	r0, [fp, #-8]
   14174:	bl	0 <flatcc_json_printer_uint32_field>
   14178:	nop	{0}
   1417c:	sub	sp, fp, #4
   14180:	ldr	fp, [sp]
   14184:	add	sp, sp, #4
   14188:	pop	{pc}		; (ldr pc, [sp], #4)

0001418c <MyGame_Example_TestBase64_print_json_table>:
   1418c:	str	fp, [sp, #-8]!
   14190:	str	lr, [sp, #4]
   14194:	add	fp, sp, #4
   14198:	sub	sp, sp, #16
   1419c:	str	r0, [fp, #-8]
   141a0:	str	r1, [fp, #-12]
   141a4:	mov	r3, #0
   141a8:	str	r3, [sp, #4]
   141ac:	mov	r3, #4
   141b0:	str	r3, [sp]
   141b4:	movw	r3, #0
   141b8:	movt	r3, #0
   141bc:	mov	r2, #0
   141c0:	ldr	r1, [fp, #-12]
   141c4:	ldr	r0, [fp, #-8]
   141c8:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   141cc:	mov	r3, #1
   141d0:	str	r3, [sp, #4]
   141d4:	mov	r3, #7
   141d8:	str	r3, [sp]
   141dc:	movw	r3, #0
   141e0:	movt	r3, #0
   141e4:	mov	r2, #1
   141e8:	ldr	r1, [fp, #-12]
   141ec:	ldr	r0, [fp, #-8]
   141f0:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   141f4:	mov	r3, #0
   141f8:	str	r3, [sp, #4]
   141fc:	mov	r3, #6
   14200:	str	r3, [sp]
   14204:	movw	r3, #0
   14208:	movt	r3, #0
   1420c:	mov	r2, #2
   14210:	ldr	r1, [fp, #-12]
   14214:	ldr	r0, [fp, #-8]
   14218:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   1421c:	nop	{0}
   14220:	sub	sp, fp, #4
   14224:	ldr	fp, [sp]
   14228:	add	sp, sp, #4
   1422c:	pop	{pc}		; (ldr pc, [sp], #4)

00014230 <MyGame_Example_Monster_print_json_table>:
   14230:	str	fp, [sp, #-8]!
   14234:	str	lr, [sp, #4]
   14238:	add	fp, sp, #4
   1423c:	sub	sp, sp, #24
   14240:	str	r0, [fp, #-8]
   14244:	str	r1, [fp, #-12]
   14248:	movw	r3, #0
   1424c:	movt	r3, #0
   14250:	str	r3, [sp, #4]
   14254:	mov	r3, #3
   14258:	str	r3, [sp]
   1425c:	movw	r3, #0
   14260:	movt	r3, #0
   14264:	mov	r2, #0
   14268:	ldr	r1, [fp, #-12]
   1426c:	ldr	r0, [fp, #-8]
   14270:	bl	0 <flatcc_json_printer_struct_field>
   14274:	mov	r3, #150	; 0x96
   14278:	str	r3, [sp, #4]
   1427c:	mov	r3, #4
   14280:	str	r3, [sp]
   14284:	movw	r3, #0
   14288:	movt	r3, #0
   1428c:	mov	r2, #1
   14290:	ldr	r1, [fp, #-12]
   14294:	ldr	r0, [fp, #-8]
   14298:	bl	0 <flatcc_json_printer_int16_field>
   1429c:	mov	r3, #100	; 0x64
   142a0:	str	r3, [sp, #4]
   142a4:	mov	r3, #2
   142a8:	str	r3, [sp]
   142ac:	movw	r3, #0
   142b0:	movt	r3, #0
   142b4:	mov	r2, #2
   142b8:	ldr	r1, [fp, #-12]
   142bc:	ldr	r0, [fp, #-8]
   142c0:	bl	0 <flatcc_json_printer_int16_field>
   142c4:	mov	r3, #4
   142c8:	str	r3, [sp]
   142cc:	movw	r3, #0
   142d0:	movt	r3, #0
   142d4:	mov	r2, #3
   142d8:	ldr	r1, [fp, #-12]
   142dc:	ldr	r0, [fp, #-8]
   142e0:	bl	0 <flatcc_json_printer_string_field>
   142e4:	mov	r3, #9
   142e8:	str	r3, [sp]
   142ec:	movw	r3, #0
   142f0:	movt	r3, #0
   142f4:	mov	r2, #5
   142f8:	ldr	r1, [fp, #-12]
   142fc:	ldr	r0, [fp, #-8]
   14300:	bl	0 <flatcc_json_printer_uint8_vector_field>
   14304:	movw	r3, #0
   14308:	movt	r3, #0
   1430c:	str	r3, [sp, #8]
   14310:	mov	r3, #8
   14314:	str	r3, [sp, #4]
   14318:	mov	r3, #5
   1431c:	str	r3, [sp]
   14320:	movw	r3, #0
   14324:	movt	r3, #0
   14328:	mov	r2, #6
   1432c:	ldr	r1, [fp, #-12]
   14330:	ldr	r0, [fp, #-8]
   14334:	bl	0 <flatcc_json_printer_int8_enum_field>
   14338:	movw	r3, #0
   1433c:	movt	r3, #0
   14340:	str	r3, [sp, #8]
   14344:	movw	r3, #0
   14348:	movt	r3, #0
   1434c:	str	r3, [sp, #4]
   14350:	mov	r3, #4
   14354:	str	r3, [sp]
   14358:	movw	r3, #0
   1435c:	movt	r3, #0
   14360:	mov	r2, #8
   14364:	ldr	r1, [fp, #-12]
   14368:	ldr	r0, [fp, #-8]
   1436c:	bl	0 <flatcc_json_printer_union_field>
   14370:	movw	r3, #0
   14374:	movt	r3, #0
   14378:	str	r3, [sp, #8]
   1437c:	mov	r3, #4
   14380:	str	r3, [sp, #4]
   14384:	mov	r3, #5
   14388:	str	r3, [sp]
   1438c:	movw	r3, #0
   14390:	movt	r3, #0
   14394:	mov	r2, #9
   14398:	ldr	r1, [fp, #-12]
   1439c:	ldr	r0, [fp, #-8]
   143a0:	bl	0 <flatcc_json_printer_struct_vector_field>
   143a4:	mov	r3, #17
   143a8:	str	r3, [sp]
   143ac:	movw	r3, #0
   143b0:	movt	r3, #0
   143b4:	mov	r2, #10
   143b8:	ldr	r1, [fp, #-12]
   143bc:	ldr	r0, [fp, #-8]
   143c0:	bl	0 <flatcc_json_printer_string_vector_field>
   143c4:	movw	r3, #0
   143c8:	movt	r3, #0
   143cc:	str	r3, [sp, #4]
   143d0:	mov	r3, #17
   143d4:	str	r3, [sp]
   143d8:	movw	r3, #0
   143dc:	movt	r3, #0
   143e0:	mov	r2, #11
   143e4:	ldr	r1, [fp, #-12]
   143e8:	ldr	r0, [fp, #-8]
   143ec:	bl	0 <flatcc_json_printer_table_vector_field>
   143f0:	movw	r3, #0
   143f4:	movt	r3, #0
   143f8:	str	r3, [sp, #4]
   143fc:	mov	r3, #5
   14400:	str	r3, [sp]
   14404:	movw	r3, #0
   14408:	movt	r3, #0
   1440c:	mov	r2, #12
   14410:	ldr	r1, [fp, #-12]
   14414:	ldr	r0, [fp, #-8]
   14418:	bl	0 <flatcc_json_printer_table_field>
   1441c:	movw	r3, #0
   14420:	movt	r3, #0
   14424:	str	r3, [sp, #8]
   14428:	mov	r3, #0
   1442c:	str	r3, [sp, #4]
   14430:	mov	r3, #20
   14434:	str	r3, [sp]
   14438:	movw	r3, #0
   1443c:	movt	r3, #0
   14440:	mov	r2, #13
   14444:	ldr	r1, [fp, #-12]
   14448:	ldr	r0, [fp, #-8]
   1444c:	bl	0 <flatcc_json_printer_table_as_nested_root>
   14450:	movw	r3, #0
   14454:	movt	r3, #0
   14458:	str	r3, [sp, #4]
   1445c:	mov	r3, #9
   14460:	str	r3, [sp]
   14464:	movw	r3, #0
   14468:	movt	r3, #0
   1446c:	mov	r2, #14
   14470:	ldr	r1, [fp, #-12]
   14474:	ldr	r0, [fp, #-8]
   14478:	bl	0 <flatcc_json_printer_table_field>
   1447c:	mov	r3, #1
   14480:	str	r3, [sp, #4]
   14484:	mov	r3, #8
   14488:	str	r3, [sp]
   1448c:	movw	r3, #0
   14490:	movt	r3, #0
   14494:	mov	r2, #15
   14498:	ldr	r1, [fp, #-12]
   1449c:	ldr	r0, [fp, #-8]
   144a0:	bl	0 <flatcc_json_printer_bool_field>
   144a4:	mov	r3, #0
   144a8:	str	r3, [sp, #4]
   144ac:	mov	r3, #16
   144b0:	str	r3, [sp]
   144b4:	movw	r3, #0
   144b8:	movt	r3, #0
   144bc:	mov	r2, #16
   144c0:	ldr	r1, [fp, #-12]
   144c4:	ldr	r0, [fp, #-8]
   144c8:	bl	0 <flatcc_json_printer_int32_field>
   144cc:	mov	r3, #0
   144d0:	str	r3, [sp, #4]
   144d4:	mov	r3, #16
   144d8:	str	r3, [sp]
   144dc:	movw	r3, #0
   144e0:	movt	r3, #0
   144e4:	mov	r2, #17
   144e8:	ldr	r1, [fp, #-12]
   144ec:	ldr	r0, [fp, #-8]
   144f0:	bl	0 <flatcc_json_printer_uint32_field>
   144f4:	mov	r2, #0
   144f8:	mov	r3, #0
   144fc:	strd	r2, [sp, #8]
   14500:	mov	r3, #16
   14504:	str	r3, [sp]
   14508:	movw	r3, #0
   1450c:	movt	r3, #0
   14510:	mov	r2, #18
   14514:	ldr	r1, [fp, #-12]
   14518:	ldr	r0, [fp, #-8]
   1451c:	bl	0 <flatcc_json_printer_int64_field>
   14520:	mov	r2, #0
   14524:	mov	r3, #0
   14528:	strd	r2, [sp, #8]
   1452c:	mov	r3, #16
   14530:	str	r3, [sp]
   14534:	movw	r3, #0
   14538:	movt	r3, #0
   1453c:	mov	r2, #19
   14540:	ldr	r1, [fp, #-12]
   14544:	ldr	r0, [fp, #-8]
   14548:	bl	0 <flatcc_json_printer_uint64_field>
   1454c:	mov	r3, #0
   14550:	str	r3, [sp, #4]
   14554:	mov	r3, #17
   14558:	str	r3, [sp]
   1455c:	movw	r3, #0
   14560:	movt	r3, #0
   14564:	mov	r2, #20
   14568:	ldr	r1, [fp, #-12]
   1456c:	ldr	r0, [fp, #-8]
   14570:	bl	0 <flatcc_json_printer_int32_field>
   14574:	mov	r3, #0
   14578:	str	r3, [sp, #4]
   1457c:	mov	r3, #17
   14580:	str	r3, [sp]
   14584:	movw	r3, #0
   14588:	movt	r3, #0
   1458c:	mov	r2, #21
   14590:	ldr	r1, [fp, #-12]
   14594:	ldr	r0, [fp, #-8]
   14598:	bl	0 <flatcc_json_printer_uint32_field>
   1459c:	mov	r2, #0
   145a0:	mov	r3, #0
   145a4:	strd	r2, [sp, #8]
   145a8:	mov	r3, #17
   145ac:	str	r3, [sp]
   145b0:	movw	r3, #0
   145b4:	movt	r3, #0
   145b8:	mov	r2, #22
   145bc:	ldr	r1, [fp, #-12]
   145c0:	ldr	r0, [fp, #-8]
   145c4:	bl	0 <flatcc_json_printer_int64_field>
   145c8:	mov	r2, #0
   145cc:	mov	r3, #0
   145d0:	strd	r2, [sp, #8]
   145d4:	mov	r3, #17
   145d8:	str	r3, [sp]
   145dc:	movw	r3, #0
   145e0:	movt	r3, #0
   145e4:	mov	r2, #23
   145e8:	ldr	r1, [fp, #-12]
   145ec:	ldr	r0, [fp, #-8]
   145f0:	bl	0 <flatcc_json_printer_uint64_field>
   145f4:	mov	r3, #16
   145f8:	str	r3, [sp]
   145fc:	movw	r3, #0
   14600:	movt	r3, #0
   14604:	mov	r2, #24
   14608:	ldr	r1, [fp, #-12]
   1460c:	ldr	r0, [fp, #-8]
   14610:	bl	0 <flatcc_json_printer_bool_vector_field>
   14614:	mov	r3, #5
   14618:	str	r3, [sp]
   1461c:	vldr	s0, [pc, #432]	; 147d4 <MyGame_Example_Monster_print_json_table+0x5a4>
   14620:	movw	r3, #0
   14624:	movt	r3, #0
   14628:	mov	r2, #25
   1462c:	ldr	r1, [fp, #-12]
   14630:	ldr	r0, [fp, #-8]
   14634:	bl	0 <flatcc_json_printer_float_field>
   14638:	mov	r3, #6
   1463c:	str	r3, [sp]
   14640:	vldr	s0, [pc, #400]	; 147d8 <MyGame_Example_Monster_print_json_table+0x5a8>
   14644:	movw	r3, #0
   14648:	movt	r3, #0
   1464c:	mov	r2, #26
   14650:	ldr	r1, [fp, #-12]
   14654:	ldr	r0, [fp, #-8]
   14658:	bl	0 <flatcc_json_printer_float_field>
   1465c:	mov	r3, #6
   14660:	str	r3, [sp]
   14664:	vldr	s0, [pc, #368]	; 147dc <MyGame_Example_Monster_print_json_table+0x5ac>
   14668:	movw	r3, #0
   1466c:	movt	r3, #0
   14670:	mov	r2, #27
   14674:	ldr	r1, [fp, #-12]
   14678:	ldr	r0, [fp, #-8]
   1467c:	bl	0 <flatcc_json_printer_float_field>
   14680:	mov	r3, #18
   14684:	str	r3, [sp]
   14688:	movw	r3, #0
   1468c:	movt	r3, #0
   14690:	mov	r2, #28
   14694:	ldr	r1, [fp, #-12]
   14698:	ldr	r0, [fp, #-8]
   1469c:	bl	0 <flatcc_json_printer_string_vector_field>
   146a0:	movw	r3, #0
   146a4:	movt	r3, #0
   146a8:	str	r3, [sp, #8]
   146ac:	mov	r3, #8
   146b0:	str	r3, [sp, #4]
   146b4:	mov	r3, #23
   146b8:	str	r3, [sp]
   146bc:	movw	r3, #0
   146c0:	movt	r3, #0
   146c4:	mov	r2, #29
   146c8:	ldr	r1, [fp, #-12]
   146cc:	ldr	r0, [fp, #-8]
   146d0:	bl	0 <flatcc_json_printer_struct_vector_field>
   146d4:	mov	r3, #4
   146d8:	str	r3, [sp]
   146dc:	movw	r3, #0
   146e0:	movt	r3, #0
   146e4:	mov	r2, #30
   146e8:	ldr	r1, [fp, #-12]
   146ec:	ldr	r0, [fp, #-8]
   146f0:	bl	0 <flatcc_json_printer_uint8_vector_field>
   146f4:	movw	r3, #0
   146f8:	movt	r3, #0
   146fc:	str	r3, [sp, #8]
   14700:	mov	r3, #4
   14704:	str	r3, [sp, #4]
   14708:	mov	r3, #5
   1470c:	str	r3, [sp]
   14710:	movw	r3, #0
   14714:	movt	r3, #0
   14718:	mov	r2, #31
   1471c:	ldr	r1, [fp, #-12]
   14720:	ldr	r0, [fp, #-8]
   14724:	bl	0 <flatcc_json_printer_struct_vector_field>
   14728:	mov	r3, #15
   1472c:	str	r3, [sp]
   14730:	movw	r3, #0
   14734:	movt	r3, #0
   14738:	mov	r2, #32
   1473c:	ldr	r1, [fp, #-12]
   14740:	ldr	r0, [fp, #-8]
   14744:	bl	0 <flatcc_json_printer_int64_vector_field>
   14748:	mov	r3, #17
   1474c:	str	r3, [sp]
   14750:	movw	r3, #0
   14754:	movt	r3, #0
   14758:	mov	r2, #33	; 0x21
   1475c:	ldr	r1, [fp, #-12]
   14760:	ldr	r0, [fp, #-8]
   14764:	bl	0 <flatcc_json_printer_double_vector_field>
   14768:	movw	r3, #0
   1476c:	movt	r3, #0
   14770:	str	r3, [sp, #4]
   14774:	mov	r3, #21
   14778:	str	r3, [sp]
   1477c:	movw	r3, #0
   14780:	movt	r3, #0
   14784:	mov	r2, #34	; 0x22
   14788:	ldr	r1, [fp, #-12]
   1478c:	ldr	r0, [fp, #-8]
   14790:	bl	0 <flatcc_json_printer_table_field>
   14794:	movw	r3, #0
   14798:	movt	r3, #0
   1479c:	str	r3, [sp, #4]
   147a0:	mov	r3, #10
   147a4:	str	r3, [sp]
   147a8:	movw	r3, #0
   147ac:	movt	r3, #0
   147b0:	mov	r2, #35	; 0x23
   147b4:	ldr	r1, [fp, #-12]
   147b8:	ldr	r0, [fp, #-8]
   147bc:	bl	0 <flatcc_json_printer_table_field>
   147c0:	nop	{0}
   147c4:	sub	sp, fp, #4
   147c8:	ldr	fp, [sp]
   147cc:	add	sp, sp, #4
   147d0:	pop	{pc}		; (ldr pc, [sp], #4)
   147d4:	.word	0x489965e0
   147d8:	.word	0x40400000
   147dc:	.word	0x00000000

000147e0 <MyGame_Example_Monster_print_json_as_root>:
   147e0:	str	fp, [sp, #-8]!
   147e4:	str	lr, [sp, #4]
   147e8:	add	fp, sp, #4
   147ec:	sub	sp, sp, #24
   147f0:	str	r0, [fp, #-8]
   147f4:	str	r1, [fp, #-12]
   147f8:	str	r2, [fp, #-16]
   147fc:	str	r3, [fp, #-20]	; 0xffffffec
   14800:	movw	r3, #0
   14804:	movt	r3, #0
   14808:	str	r3, [sp]
   1480c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14810:	ldr	r2, [fp, #-16]
   14814:	ldr	r1, [fp, #-12]
   14818:	ldr	r0, [fp, #-8]
   1481c:	bl	0 <flatcc_json_printer_table_as_root>
   14820:	mov	r3, r0
   14824:	mov	r0, r3
   14828:	sub	sp, fp, #4
   1482c:	ldr	fp, [sp]
   14830:	add	sp, sp, #4
   14834:	pop	{pc}		; (ldr pc, [sp], #4)

00014838 <MyGame_Example_TypeAliases_print_json_table>:
   14838:	str	fp, [sp, #-8]!
   1483c:	str	lr, [sp, #4]
   14840:	add	fp, sp, #4
   14844:	sub	sp, sp, #24
   14848:	str	r0, [fp, #-8]
   1484c:	str	r1, [fp, #-12]
   14850:	mov	r3, #0
   14854:	str	r3, [sp, #4]
   14858:	mov	r3, #2
   1485c:	str	r3, [sp]
   14860:	movw	r3, #0
   14864:	movt	r3, #0
   14868:	mov	r2, #0
   1486c:	ldr	r1, [fp, #-12]
   14870:	ldr	r0, [fp, #-8]
   14874:	bl	0 <flatcc_json_printer_int8_field>
   14878:	mov	r3, #0
   1487c:	str	r3, [sp, #4]
   14880:	mov	r3, #2
   14884:	str	r3, [sp]
   14888:	movw	r3, #0
   1488c:	movt	r3, #0
   14890:	mov	r2, #1
   14894:	ldr	r1, [fp, #-12]
   14898:	ldr	r0, [fp, #-8]
   1489c:	bl	0 <flatcc_json_printer_uint8_field>
   148a0:	mov	r3, #0
   148a4:	str	r3, [sp, #4]
   148a8:	mov	r3, #3
   148ac:	str	r3, [sp]
   148b0:	movw	r3, #0
   148b4:	movt	r3, #0
   148b8:	mov	r2, #2
   148bc:	ldr	r1, [fp, #-12]
   148c0:	ldr	r0, [fp, #-8]
   148c4:	bl	0 <flatcc_json_printer_int16_field>
   148c8:	mov	r3, #0
   148cc:	str	r3, [sp, #4]
   148d0:	mov	r3, #3
   148d4:	str	r3, [sp]
   148d8:	movw	r3, #0
   148dc:	movt	r3, #0
   148e0:	mov	r2, #3
   148e4:	ldr	r1, [fp, #-12]
   148e8:	ldr	r0, [fp, #-8]
   148ec:	bl	0 <flatcc_json_printer_uint16_field>
   148f0:	mov	r3, #0
   148f4:	str	r3, [sp, #4]
   148f8:	mov	r3, #3
   148fc:	str	r3, [sp]
   14900:	movw	r3, #0
   14904:	movt	r3, #0
   14908:	mov	r2, #4
   1490c:	ldr	r1, [fp, #-12]
   14910:	ldr	r0, [fp, #-8]
   14914:	bl	0 <flatcc_json_printer_int32_field>
   14918:	mov	r3, #0
   1491c:	str	r3, [sp, #4]
   14920:	mov	r3, #3
   14924:	str	r3, [sp]
   14928:	movw	r3, #0
   1492c:	movt	r3, #0
   14930:	mov	r2, #5
   14934:	ldr	r1, [fp, #-12]
   14938:	ldr	r0, [fp, #-8]
   1493c:	bl	0 <flatcc_json_printer_uint32_field>
   14940:	mov	r2, #0
   14944:	mov	r3, #0
   14948:	strd	r2, [sp, #8]
   1494c:	mov	r3, #3
   14950:	str	r3, [sp]
   14954:	movw	r3, #0
   14958:	movt	r3, #0
   1495c:	mov	r2, #6
   14960:	ldr	r1, [fp, #-12]
   14964:	ldr	r0, [fp, #-8]
   14968:	bl	0 <flatcc_json_printer_int64_field>
   1496c:	mov	r2, #0
   14970:	mov	r3, #0
   14974:	strd	r2, [sp, #8]
   14978:	mov	r3, #3
   1497c:	str	r3, [sp]
   14980:	movw	r3, #0
   14984:	movt	r3, #0
   14988:	mov	r2, #7
   1498c:	ldr	r1, [fp, #-12]
   14990:	ldr	r0, [fp, #-8]
   14994:	bl	0 <flatcc_json_printer_uint64_field>
   14998:	mov	r3, #3
   1499c:	str	r3, [sp]
   149a0:	vldr	s0, [pc, #152]	; 14a40 <MyGame_Example_TypeAliases_print_json_table+0x208>
   149a4:	movw	r3, #0
   149a8:	movt	r3, #0
   149ac:	mov	r2, #8
   149b0:	ldr	r1, [fp, #-12]
   149b4:	ldr	r0, [fp, #-8]
   149b8:	bl	0 <flatcc_json_printer_float_field>
   149bc:	mov	r3, #3
   149c0:	str	r3, [sp]
   149c4:	vldr	d0, [pc, #108]	; 14a38 <MyGame_Example_TypeAliases_print_json_table+0x200>
   149c8:	movw	r3, #0
   149cc:	movt	r3, #0
   149d0:	mov	r2, #9
   149d4:	ldr	r1, [fp, #-12]
   149d8:	ldr	r0, [fp, #-8]
   149dc:	bl	0 <flatcc_json_printer_double_field>
   149e0:	mov	r3, #2
   149e4:	str	r3, [sp]
   149e8:	movw	r3, #0
   149ec:	movt	r3, #0
   149f0:	mov	r2, #10
   149f4:	ldr	r1, [fp, #-12]
   149f8:	ldr	r0, [fp, #-8]
   149fc:	bl	0 <flatcc_json_printer_int8_vector_field>
   14a00:	mov	r3, #4
   14a04:	str	r3, [sp]
   14a08:	movw	r3, #0
   14a0c:	movt	r3, #0
   14a10:	mov	r2, #11
   14a14:	ldr	r1, [fp, #-12]
   14a18:	ldr	r0, [fp, #-8]
   14a1c:	bl	0 <flatcc_json_printer_double_vector_field>
   14a20:	nop	{0}
   14a24:	sub	sp, fp, #4
   14a28:	ldr	fp, [sp]
   14a2c:	add	sp, sp, #4
   14a30:	pop	{pc}		; (ldr pc, [sp], #4)
   14a34:	nop	{0}
	...

00014a44 <Fantasy_Attacker_print_json_table>:
   14a44:	str	fp, [sp, #-8]!
   14a48:	str	lr, [sp, #4]
   14a4c:	add	fp, sp, #4
   14a50:	sub	sp, sp, #16
   14a54:	str	r0, [fp, #-8]
   14a58:	str	r1, [fp, #-12]
   14a5c:	mov	r3, #0
   14a60:	str	r3, [sp, #4]
   14a64:	mov	r3, #19
   14a68:	str	r3, [sp]
   14a6c:	movw	r3, #0
   14a70:	movt	r3, #0
   14a74:	mov	r2, #0
   14a78:	ldr	r1, [fp, #-12]
   14a7c:	ldr	r0, [fp, #-8]
   14a80:	bl	0 <flatcc_json_printer_int32_field>
   14a84:	nop	{0}
   14a88:	sub	sp, fp, #4
   14a8c:	ldr	fp, [sp]
   14a90:	add	sp, sp, #4
   14a94:	pop	{pc}		; (ldr pc, [sp], #4)

00014a98 <Fantasy_Movie_print_json_table>:
   14a98:	str	fp, [sp, #-8]!
   14a9c:	str	lr, [sp, #4]
   14aa0:	add	fp, sp, #4
   14aa4:	sub	sp, sp, #24
   14aa8:	str	r0, [fp, #-8]
   14aac:	str	r1, [fp, #-12]
   14ab0:	movw	r3, #0
   14ab4:	movt	r3, #0
   14ab8:	str	r3, [sp, #8]
   14abc:	movw	r3, #0
   14ac0:	movt	r3, #0
   14ac4:	str	r3, [sp, #4]
   14ac8:	mov	r3, #14
   14acc:	str	r3, [sp]
   14ad0:	movw	r3, #0
   14ad4:	movt	r3, #0
   14ad8:	mov	r2, #1
   14adc:	ldr	r1, [fp, #-12]
   14ae0:	ldr	r0, [fp, #-8]
   14ae4:	bl	0 <flatcc_json_printer_union_field>
   14ae8:	movw	r3, #0
   14aec:	movt	r3, #0
   14af0:	str	r3, [sp, #8]
   14af4:	movw	r3, #0
   14af8:	movt	r3, #0
   14afc:	str	r3, [sp, #4]
   14b00:	mov	r3, #10
   14b04:	str	r3, [sp]
   14b08:	movw	r3, #0
   14b0c:	movt	r3, #0
   14b10:	mov	r2, #3
   14b14:	ldr	r1, [fp, #-12]
   14b18:	ldr	r0, [fp, #-8]
   14b1c:	bl	0 <flatcc_json_printer_union_field>
   14b20:	movw	r3, #0
   14b24:	movt	r3, #0
   14b28:	str	r3, [sp, #8]
   14b2c:	movw	r3, #0
   14b30:	movt	r3, #0
   14b34:	str	r3, [sp, #4]
   14b38:	mov	r3, #9
   14b3c:	str	r3, [sp]
   14b40:	movw	r3, #0
   14b44:	movt	r3, #0
   14b48:	mov	r2, #5
   14b4c:	ldr	r1, [fp, #-12]
   14b50:	ldr	r0, [fp, #-8]
   14b54:	bl	0 <flatcc_json_printer_union_field>
   14b58:	movw	r3, #0
   14b5c:	movt	r3, #0
   14b60:	str	r3, [sp, #8]
   14b64:	movw	r3, #0
   14b68:	movt	r3, #0
   14b6c:	str	r3, [sp, #4]
   14b70:	mov	r3, #5
   14b74:	str	r3, [sp]
   14b78:	movw	r3, #0
   14b7c:	movt	r3, #0
   14b80:	mov	r2, #7
   14b84:	ldr	r1, [fp, #-12]
   14b88:	ldr	r0, [fp, #-8]
   14b8c:	bl	0 <flatcc_json_printer_union_field>
   14b90:	movw	r3, #0
   14b94:	movt	r3, #0
   14b98:	str	r3, [sp, #8]
   14b9c:	movw	r3, #0
   14ba0:	movt	r3, #0
   14ba4:	str	r3, [sp, #4]
   14ba8:	mov	r3, #10
   14bac:	str	r3, [sp]
   14bb0:	movw	r3, #0
   14bb4:	movt	r3, #0
   14bb8:	mov	r2, #9
   14bbc:	ldr	r1, [fp, #-12]
   14bc0:	ldr	r0, [fp, #-8]
   14bc4:	bl	0 <flatcc_json_printer_union_vector_field>
   14bc8:	nop	{0}
   14bcc:	sub	sp, fp, #4
   14bd0:	ldr	fp, [sp]
   14bd4:	add	sp, sp, #4
   14bd8:	pop	{pc}		; (ldr pc, [sp], #4)

00014bdc <monster_test_print_json>:
   14bdc:	str	fp, [sp, #-8]!
   14be0:	str	lr, [sp, #4]
   14be4:	add	fp, sp, #4
   14be8:	sub	sp, sp, #64	; 0x40
   14bec:	str	r0, [fp, #-56]	; 0xffffffc8
   14bf0:	str	r1, [fp, #-60]	; 0xffffffc4
   14bf4:	str	r2, [fp, #-64]	; 0xffffffc0
   14bf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14bfc:	cmp	r3, #0
   14c00:	bne	14c18 <monster_test_print_json+0x3c>
   14c04:	sub	r3, fp, #52	; 0x34
   14c08:	str	r3, [fp, #-56]	; 0xffffffc8
   14c0c:	mov	r1, #0
   14c10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c14:	bl	0 <flatcc_json_printer_init>
   14c18:	movw	r3, #0
   14c1c:	movt	r3, #0
   14c20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14c24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14c28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c2c:	bl	147e0 <MyGame_Example_Monster_print_json_as_root>
   14c30:	mov	r3, r0
   14c34:	mov	r0, r3
   14c38:	sub	sp, fp, #4
   14c3c:	ldr	fp, [sp]
   14c40:	add	sp, sp, #4
   14c44:	pop	{pc}		; (ldr pc, [sp], #4)

00014c48 <MyGame_Example_Foo_union_verifier>:
   14c48:	str	fp, [sp, #-8]!
   14c4c:	str	lr, [sp, #4]
   14c50:	add	fp, sp, #4
   14c54:	sub	sp, sp, #8
   14c58:	str	r0, [fp, #-8]
   14c5c:	ldr	r3, [fp, #-8]
   14c60:	ldrb	r3, [r3, #12]
   14c64:	cmp	r3, #1
   14c68:	bne	14c84 <MyGame_Example_Foo_union_verifier+0x3c>
   14c6c:	movw	r1, #0
   14c70:	movt	r1, #0
   14c74:	ldr	r0, [fp, #-8]
   14c78:	bl	0 <flatcc_verify_union_table>
   14c7c:	mov	r3, r0
   14c80:	b	14c88 <MyGame_Example_Foo_union_verifier+0x40>
   14c84:	mov	r3, #0
   14c88:	mov	r0, r3
   14c8c:	sub	sp, fp, #4
   14c90:	ldr	fp, [sp]
   14c94:	add	sp, sp, #4
   14c98:	pop	{pc}		; (ldr pc, [sp], #4)

00014c9c <MyGame_Example_Any_union_verifier>:
   14c9c:	str	fp, [sp, #-8]!
   14ca0:	str	lr, [sp, #4]
   14ca4:	add	fp, sp, #4
   14ca8:	sub	sp, sp, #8
   14cac:	str	r0, [fp, #-8]
   14cb0:	ldr	r3, [fp, #-8]
   14cb4:	ldrb	r3, [r3, #12]
   14cb8:	sub	r3, r3, #1
   14cbc:	cmp	r3, #3
   14cc0:	ldrls	pc, [pc, r3, lsl #2]
   14cc4:	b	14d38 <MyGame_Example_Any_union_verifier+0x9c>
   14cc8:	.word	0x00014cd8
   14ccc:	.word	0x00014cf0
   14cd0:	.word	0x00014d08
   14cd4:	.word	0x00014d20
   14cd8:	movw	r1, #0
   14cdc:	movt	r1, #0
   14ce0:	ldr	r0, [fp, #-8]
   14ce4:	bl	0 <flatcc_verify_union_table>
   14ce8:	mov	r3, r0
   14cec:	b	14d3c <MyGame_Example_Any_union_verifier+0xa0>
   14cf0:	movw	r1, #0
   14cf4:	movt	r1, #0
   14cf8:	ldr	r0, [fp, #-8]
   14cfc:	bl	0 <flatcc_verify_union_table>
   14d00:	mov	r3, r0
   14d04:	b	14d3c <MyGame_Example_Any_union_verifier+0xa0>
   14d08:	movw	r1, #0
   14d0c:	movt	r1, #0
   14d10:	ldr	r0, [fp, #-8]
   14d14:	bl	0 <flatcc_verify_union_table>
   14d18:	mov	r3, r0
   14d1c:	b	14d3c <MyGame_Example_Any_union_verifier+0xa0>
   14d20:	movw	r1, #0
   14d24:	movt	r1, #0
   14d28:	ldr	r0, [fp, #-8]
   14d2c:	bl	0 <flatcc_verify_union_table>
   14d30:	mov	r3, r0
   14d34:	b	14d3c <MyGame_Example_Any_union_verifier+0xa0>
   14d38:	mov	r3, #0
   14d3c:	mov	r0, r3
   14d40:	sub	sp, fp, #4
   14d44:	ldr	fp, [sp]
   14d48:	add	sp, sp, #4
   14d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00014d50 <Fantasy_Character_union_verifier>:
   14d50:	str	fp, [sp, #-8]!
   14d54:	str	lr, [sp, #4]
   14d58:	add	fp, sp, #4
   14d5c:	sub	sp, sp, #8
   14d60:	str	r0, [fp, #-8]
   14d64:	ldr	r3, [fp, #-8]
   14d68:	ldrb	r3, [r3, #12]
   14d6c:	cmp	r3, #9
   14d70:	beq	14ddc <Fantasy_Character_union_verifier+0x8c>
   14d74:	cmp	r3, #9
   14d78:	bgt	14d90 <Fantasy_Character_union_verifier+0x40>
   14d7c:	cmp	r3, #2
   14d80:	beq	14dac <Fantasy_Character_union_verifier+0x5c>
   14d84:	cmp	r3, #8
   14d88:	beq	14dc4 <Fantasy_Character_union_verifier+0x74>
   14d8c:	b	14e2c <Fantasy_Character_union_verifier+0xdc>
   14d90:	cmp	r3, #11
   14d94:	beq	14e0c <Fantasy_Character_union_verifier+0xbc>
   14d98:	cmp	r3, #11
   14d9c:	blt	14df4 <Fantasy_Character_union_verifier+0xa4>
   14da0:	cmp	r3, #255	; 0xff
   14da4:	beq	14e1c <Fantasy_Character_union_verifier+0xcc>
   14da8:	b	14e2c <Fantasy_Character_union_verifier+0xdc>
   14dac:	movw	r1, #0
   14db0:	movt	r1, #0
   14db4:	ldr	r0, [fp, #-8]
   14db8:	bl	0 <flatcc_verify_union_table>
   14dbc:	mov	r3, r0
   14dc0:	b	14e30 <Fantasy_Character_union_verifier+0xe0>
   14dc4:	mov	r2, #2
   14dc8:	mov	r1, #2
   14dcc:	ldr	r0, [fp, #-8]
   14dd0:	bl	0 <flatcc_verify_union_struct>
   14dd4:	mov	r3, r0
   14dd8:	b	14e30 <Fantasy_Character_union_verifier+0xe0>
   14ddc:	mov	r2, #4
   14de0:	mov	r1, #4
   14de4:	ldr	r0, [fp, #-8]
   14de8:	bl	0 <flatcc_verify_union_struct>
   14dec:	mov	r3, r0
   14df0:	b	14e30 <Fantasy_Character_union_verifier+0xe0>
   14df4:	mov	r2, #4
   14df8:	mov	r1, #4
   14dfc:	ldr	r0, [fp, #-8]
   14e00:	bl	0 <flatcc_verify_union_struct>
   14e04:	mov	r3, r0
   14e08:	b	14e30 <Fantasy_Character_union_verifier+0xe0>
   14e0c:	ldr	r0, [fp, #-8]
   14e10:	bl	0 <flatcc_verify_union_string>
   14e14:	mov	r3, r0
   14e18:	b	14e30 <Fantasy_Character_union_verifier+0xe0>
   14e1c:	ldr	r0, [fp, #-8]
   14e20:	bl	0 <flatcc_verify_union_string>
   14e24:	mov	r3, r0
   14e28:	b	14e30 <Fantasy_Character_union_verifier+0xe0>
   14e2c:	mov	r3, #0
   14e30:	mov	r0, r3
   14e34:	sub	sp, fp, #4
   14e38:	ldr	fp, [sp]
   14e3c:	add	sp, sp, #4
   14e40:	pop	{pc}		; (ldr pc, [sp], #4)

00014e44 <MyGame_InParentNamespace_verify_table>:
   14e44:	push	{fp}		; (str fp, [sp, #-4]!)
   14e48:	add	fp, sp, #0
   14e4c:	sub	sp, sp, #12
   14e50:	str	r0, [fp, #-8]
   14e54:	mov	r3, #0
   14e58:	mov	r0, r3
   14e5c:	add	sp, fp, #0
   14e60:	pop	{fp}		; (ldr fp, [sp], #4)
   14e64:	bx	lr

00014e68 <MyGame_Example2_Monster_verify_table>:
   14e68:	push	{fp}		; (str fp, [sp, #-4]!)
   14e6c:	add	fp, sp, #0
   14e70:	sub	sp, sp, #12
   14e74:	str	r0, [fp, #-8]
   14e78:	mov	r3, #0
   14e7c:	mov	r0, r3
   14e80:	add	sp, fp, #0
   14e84:	pop	{fp}		; (ldr fp, [sp], #4)
   14e88:	bx	lr

00014e8c <MyGame_Example_emptytable_verify_table>:
   14e8c:	push	{fp}		; (str fp, [sp, #-4]!)
   14e90:	add	fp, sp, #0
   14e94:	sub	sp, sp, #12
   14e98:	str	r0, [fp, #-8]
   14e9c:	mov	r3, #0
   14ea0:	mov	r0, r3
   14ea4:	add	sp, fp, #0
   14ea8:	pop	{fp}		; (ldr fp, [sp], #4)
   14eac:	bx	lr

00014eb0 <MyGame_Example_with_emptystruct_verify_table>:
   14eb0:	str	fp, [sp, #-8]!
   14eb4:	str	lr, [sp, #4]
   14eb8:	add	fp, sp, #4
   14ebc:	sub	sp, sp, #16
   14ec0:	str	r0, [fp, #-16]
   14ec4:	mov	r3, #1
   14ec8:	mov	r2, #0
   14ecc:	mov	r1, #0
   14ed0:	ldr	r0, [fp, #-16]
   14ed4:	bl	0 <flatcc_verify_field>
   14ed8:	str	r0, [fp, #-8]
   14edc:	ldr	r3, [fp, #-8]
   14ee0:	cmp	r3, #0
   14ee4:	beq	14ef0 <MyGame_Example_with_emptystruct_verify_table+0x40>
   14ee8:	ldr	r3, [fp, #-8]
   14eec:	b	14ef4 <MyGame_Example_with_emptystruct_verify_table+0x44>
   14ef0:	mov	r3, #0
   14ef4:	mov	r0, r3
   14ef8:	sub	sp, fp, #4
   14efc:	ldr	fp, [sp]
   14f00:	add	sp, sp, #4
   14f04:	pop	{pc}		; (ldr pc, [sp], #4)

00014f08 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
   14f08:	str	fp, [sp, #-8]!
   14f0c:	str	lr, [sp, #4]
   14f10:	add	fp, sp, #4
   14f14:	sub	sp, sp, #16
   14f18:	str	r0, [fp, #-16]
   14f1c:	mov	r3, #1
   14f20:	mov	r2, #1
   14f24:	mov	r1, #0
   14f28:	ldr	r0, [fp, #-16]
   14f2c:	bl	0 <flatcc_verify_field>
   14f30:	str	r0, [fp, #-8]
   14f34:	ldr	r3, [fp, #-8]
   14f38:	cmp	r3, #0
   14f3c:	beq	14f48 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x40>
   14f40:	ldr	r3, [fp, #-8]
   14f44:	b	14fd0 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc8>
   14f48:	mov	r3, #1
   14f4c:	mov	r2, #1
   14f50:	mov	r1, #1
   14f54:	ldr	r0, [fp, #-16]
   14f58:	bl	0 <flatcc_verify_field>
   14f5c:	str	r0, [fp, #-8]
   14f60:	ldr	r3, [fp, #-8]
   14f64:	cmp	r3, #0
   14f68:	beq	14f74 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x6c>
   14f6c:	ldr	r3, [fp, #-8]
   14f70:	b	14fd0 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc8>
   14f74:	mov	r3, #1
   14f78:	mov	r2, #1
   14f7c:	mov	r1, #2
   14f80:	ldr	r0, [fp, #-16]
   14f84:	bl	0 <flatcc_verify_field>
   14f88:	str	r0, [fp, #-8]
   14f8c:	ldr	r3, [fp, #-8]
   14f90:	cmp	r3, #0
   14f94:	beq	14fa0 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x98>
   14f98:	ldr	r3, [fp, #-8]
   14f9c:	b	14fd0 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc8>
   14fa0:	mov	r3, #1
   14fa4:	mov	r2, #1
   14fa8:	mov	r1, #3
   14fac:	ldr	r0, [fp, #-16]
   14fb0:	bl	0 <flatcc_verify_field>
   14fb4:	str	r0, [fp, #-8]
   14fb8:	ldr	r3, [fp, #-8]
   14fbc:	cmp	r3, #0
   14fc0:	beq	14fcc <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc4>
   14fc4:	ldr	r3, [fp, #-8]
   14fc8:	b	14fd0 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xc8>
   14fcc:	mov	r3, #0
   14fd0:	mov	r0, r3
   14fd4:	sub	sp, fp, #4
   14fd8:	ldr	fp, [sp]
   14fdc:	add	sp, sp, #4
   14fe0:	pop	{pc}		; (ldr pc, [sp], #4)

00014fe4 <MyGame_Example_TestInclude_verify_table>:
   14fe4:	str	fp, [sp, #-8]!
   14fe8:	str	lr, [sp, #4]
   14fec:	add	fp, sp, #4
   14ff0:	sub	sp, sp, #16
   14ff4:	str	r0, [fp, #-16]
   14ff8:	mov	r3, #1
   14ffc:	mov	r2, #0
   15000:	mov	r1, #0
   15004:	ldr	r0, [fp, #-16]
   15008:	bl	0 <flatcc_verify_field>
   1500c:	str	r0, [fp, #-8]
   15010:	ldr	r3, [fp, #-8]
   15014:	cmp	r3, #0
   15018:	beq	15024 <MyGame_Example_TestInclude_verify_table+0x40>
   1501c:	ldr	r3, [fp, #-8]
   15020:	b	15104 <MyGame_Example_TestInclude_verify_table+0x120>
   15024:	mov	r3, #8
   15028:	mov	r2, #8
   1502c:	mov	r1, #1
   15030:	ldr	r0, [fp, #-16]
   15034:	bl	0 <flatcc_verify_field>
   15038:	str	r0, [fp, #-8]
   1503c:	ldr	r3, [fp, #-8]
   15040:	cmp	r3, #0
   15044:	beq	15050 <MyGame_Example_TestInclude_verify_table+0x6c>
   15048:	ldr	r3, [fp, #-8]
   1504c:	b	15104 <MyGame_Example_TestInclude_verify_table+0x120>
   15050:	mov	r3, #8
   15054:	mov	r2, #8
   15058:	mov	r1, #2
   1505c:	ldr	r0, [fp, #-16]
   15060:	bl	0 <flatcc_verify_field>
   15064:	str	r0, [fp, #-8]
   15068:	ldr	r3, [fp, #-8]
   1506c:	cmp	r3, #0
   15070:	beq	1507c <MyGame_Example_TestInclude_verify_table+0x98>
   15074:	ldr	r3, [fp, #-8]
   15078:	b	15104 <MyGame_Example_TestInclude_verify_table+0x120>
   1507c:	mov	r3, #4
   15080:	mov	r2, #4
   15084:	mov	r1, #3
   15088:	ldr	r0, [fp, #-16]
   1508c:	bl	0 <flatcc_verify_field>
   15090:	str	r0, [fp, #-8]
   15094:	ldr	r3, [fp, #-8]
   15098:	cmp	r3, #0
   1509c:	beq	150a8 <MyGame_Example_TestInclude_verify_table+0xc4>
   150a0:	ldr	r3, [fp, #-8]
   150a4:	b	15104 <MyGame_Example_TestInclude_verify_table+0x120>
   150a8:	mov	r3, #8
   150ac:	mov	r2, #8
   150b0:	mov	r1, #4
   150b4:	ldr	r0, [fp, #-16]
   150b8:	bl	0 <flatcc_verify_field>
   150bc:	str	r0, [fp, #-8]
   150c0:	ldr	r3, [fp, #-8]
   150c4:	cmp	r3, #0
   150c8:	beq	150d4 <MyGame_Example_TestInclude_verify_table+0xf0>
   150cc:	ldr	r3, [fp, #-8]
   150d0:	b	15104 <MyGame_Example_TestInclude_verify_table+0x120>
   150d4:	mov	r3, #8
   150d8:	mov	r2, #8
   150dc:	mov	r1, #5
   150e0:	ldr	r0, [fp, #-16]
   150e4:	bl	0 <flatcc_verify_field>
   150e8:	str	r0, [fp, #-8]
   150ec:	ldr	r3, [fp, #-8]
   150f0:	cmp	r3, #0
   150f4:	beq	15100 <MyGame_Example_TestInclude_verify_table+0x11c>
   150f8:	ldr	r3, [fp, #-8]
   150fc:	b	15104 <MyGame_Example_TestInclude_verify_table+0x120>
   15100:	mov	r3, #0
   15104:	mov	r0, r3
   15108:	sub	sp, fp, #4
   1510c:	ldr	fp, [sp]
   15110:	add	sp, sp, #4
   15114:	pop	{pc}		; (ldr pc, [sp], #4)

00015118 <MyGame_Example_Stat_verify_table>:
   15118:	str	fp, [sp, #-8]!
   1511c:	str	lr, [sp, #4]
   15120:	add	fp, sp, #4
   15124:	sub	sp, sp, #16
   15128:	str	r0, [fp, #-16]
   1512c:	mov	r2, #0
   15130:	mov	r1, #0
   15134:	ldr	r0, [fp, #-16]
   15138:	bl	0 <flatcc_verify_string_field>
   1513c:	str	r0, [fp, #-8]
   15140:	ldr	r3, [fp, #-8]
   15144:	cmp	r3, #0
   15148:	beq	15154 <MyGame_Example_Stat_verify_table+0x3c>
   1514c:	ldr	r3, [fp, #-8]
   15150:	b	151b0 <MyGame_Example_Stat_verify_table+0x98>
   15154:	mov	r3, #8
   15158:	mov	r2, #8
   1515c:	mov	r1, #1
   15160:	ldr	r0, [fp, #-16]
   15164:	bl	0 <flatcc_verify_field>
   15168:	str	r0, [fp, #-8]
   1516c:	ldr	r3, [fp, #-8]
   15170:	cmp	r3, #0
   15174:	beq	15180 <MyGame_Example_Stat_verify_table+0x68>
   15178:	ldr	r3, [fp, #-8]
   1517c:	b	151b0 <MyGame_Example_Stat_verify_table+0x98>
   15180:	mov	r3, #2
   15184:	mov	r2, #2
   15188:	mov	r1, #2
   1518c:	ldr	r0, [fp, #-16]
   15190:	bl	0 <flatcc_verify_field>
   15194:	str	r0, [fp, #-8]
   15198:	ldr	r3, [fp, #-8]
   1519c:	cmp	r3, #0
   151a0:	beq	151ac <MyGame_Example_Stat_verify_table+0x94>
   151a4:	ldr	r3, [fp, #-8]
   151a8:	b	151b0 <MyGame_Example_Stat_verify_table+0x98>
   151ac:	mov	r3, #0
   151b0:	mov	r0, r3
   151b4:	sub	sp, fp, #4
   151b8:	ldr	fp, [sp]
   151bc:	add	sp, sp, #4
   151c0:	pop	{pc}		; (ldr pc, [sp], #4)

000151c4 <MyGame_Example_Alt_verify_table>:
   151c4:	str	fp, [sp, #-8]!
   151c8:	str	lr, [sp, #4]
   151cc:	add	fp, sp, #4
   151d0:	sub	sp, sp, #16
   151d4:	str	r0, [fp, #-16]
   151d8:	movw	r3, #0
   151dc:	movt	r3, #0
   151e0:	mov	r2, #0
   151e4:	mov	r1, #0
   151e8:	ldr	r0, [fp, #-16]
   151ec:	bl	0 <flatcc_verify_table_field>
   151f0:	str	r0, [fp, #-8]
   151f4:	ldr	r3, [fp, #-8]
   151f8:	cmp	r3, #0
   151fc:	beq	15208 <MyGame_Example_Alt_verify_table+0x44>
   15200:	ldr	r3, [fp, #-8]
   15204:	b	1526c <MyGame_Example_Alt_verify_table+0xa8>
   15208:	movw	r3, #0
   1520c:	movt	r3, #0
   15210:	mov	r2, #0
   15214:	mov	r1, #1
   15218:	ldr	r0, [fp, #-16]
   1521c:	bl	0 <flatcc_verify_table_field>
   15220:	str	r0, [fp, #-8]
   15224:	ldr	r3, [fp, #-8]
   15228:	cmp	r3, #0
   1522c:	beq	15238 <MyGame_Example_Alt_verify_table+0x74>
   15230:	ldr	r3, [fp, #-8]
   15234:	b	1526c <MyGame_Example_Alt_verify_table+0xa8>
   15238:	movw	r3, #0
   1523c:	movt	r3, #0
   15240:	mov	r2, #0
   15244:	mov	r1, #3
   15248:	ldr	r0, [fp, #-16]
   1524c:	bl	0 <flatcc_verify_union_vector_field>
   15250:	str	r0, [fp, #-8]
   15254:	ldr	r3, [fp, #-8]
   15258:	cmp	r3, #0
   1525c:	beq	15268 <MyGame_Example_Alt_verify_table+0xa4>
   15260:	ldr	r3, [fp, #-8]
   15264:	b	1526c <MyGame_Example_Alt_verify_table+0xa8>
   15268:	mov	r3, #0
   1526c:	mov	r0, r3
   15270:	sub	sp, fp, #4
   15274:	ldr	fp, [sp]
   15278:	add	sp, sp, #4
   1527c:	pop	{pc}		; (ldr pc, [sp], #4)

00015280 <MyGame_Example_TestJSONPrefix_verify_table>:
   15280:	str	fp, [sp, #-8]!
   15284:	str	lr, [sp, #4]
   15288:	add	fp, sp, #4
   1528c:	sub	sp, sp, #16
   15290:	str	r0, [fp, #-16]
   15294:	movw	r3, #0
   15298:	movt	r3, #0
   1529c:	mov	r2, #0
   152a0:	mov	r1, #0
   152a4:	ldr	r0, [fp, #-16]
   152a8:	bl	0 <flatcc_verify_table_field>
   152ac:	str	r0, [fp, #-8]
   152b0:	ldr	r3, [fp, #-8]
   152b4:	cmp	r3, #0
   152b8:	beq	152c4 <MyGame_Example_TestJSONPrefix_verify_table+0x44>
   152bc:	ldr	r3, [fp, #-8]
   152c0:	b	15328 <MyGame_Example_TestJSONPrefix_verify_table+0xa8>
   152c4:	movw	r3, #0
   152c8:	movt	r3, #0
   152cc:	mov	r2, #0
   152d0:	mov	r1, #1
   152d4:	ldr	r0, [fp, #-16]
   152d8:	bl	0 <flatcc_verify_table_field>
   152dc:	str	r0, [fp, #-8]
   152e0:	ldr	r3, [fp, #-8]
   152e4:	cmp	r3, #0
   152e8:	beq	152f4 <MyGame_Example_TestJSONPrefix_verify_table+0x74>
   152ec:	ldr	r3, [fp, #-8]
   152f0:	b	15328 <MyGame_Example_TestJSONPrefix_verify_table+0xa8>
   152f4:	movw	r3, #0
   152f8:	movt	r3, #0
   152fc:	mov	r2, #0
   15300:	mov	r1, #2
   15304:	ldr	r0, [fp, #-16]
   15308:	bl	0 <flatcc_verify_table_field>
   1530c:	str	r0, [fp, #-8]
   15310:	ldr	r3, [fp, #-8]
   15314:	cmp	r3, #0
   15318:	beq	15324 <MyGame_Example_TestJSONPrefix_verify_table+0xa4>
   1531c:	ldr	r3, [fp, #-8]
   15320:	b	15328 <MyGame_Example_TestJSONPrefix_verify_table+0xa8>
   15324:	mov	r3, #0
   15328:	mov	r0, r3
   1532c:	sub	sp, fp, #4
   15330:	ldr	fp, [sp]
   15334:	add	sp, sp, #4
   15338:	pop	{pc}		; (ldr pc, [sp], #4)

0001533c <MyGame_Example_TestJSONPrefixParsing_verify_table>:
   1533c:	str	fp, [sp, #-8]!
   15340:	str	lr, [sp, #4]
   15344:	add	fp, sp, #4
   15348:	sub	sp, sp, #16
   1534c:	str	r0, [fp, #-16]
   15350:	mov	r2, #0
   15354:	mov	r1, #0
   15358:	ldr	r0, [fp, #-16]
   1535c:	bl	0 <flatcc_verify_string_field>
   15360:	str	r0, [fp, #-8]
   15364:	ldr	r3, [fp, #-8]
   15368:	cmp	r3, #0
   1536c:	beq	15378 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x3c>
   15370:	ldr	r3, [fp, #-8]
   15374:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   15378:	mov	r3, #4
   1537c:	mov	r2, #4
   15380:	mov	r1, #1
   15384:	ldr	r0, [fp, #-16]
   15388:	bl	0 <flatcc_verify_field>
   1538c:	str	r0, [fp, #-8]
   15390:	ldr	r3, [fp, #-8]
   15394:	cmp	r3, #0
   15398:	beq	153a4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x68>
   1539c:	ldr	r3, [fp, #-8]
   153a0:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   153a4:	mov	r2, #0
   153a8:	mov	r1, #2
   153ac:	ldr	r0, [fp, #-16]
   153b0:	bl	0 <flatcc_verify_string_field>
   153b4:	str	r0, [fp, #-8]
   153b8:	ldr	r3, [fp, #-8]
   153bc:	cmp	r3, #0
   153c0:	beq	153cc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x90>
   153c4:	ldr	r3, [fp, #-8]
   153c8:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   153cc:	mov	r3, #8
   153d0:	mov	r2, #8
   153d4:	mov	r1, #3
   153d8:	ldr	r0, [fp, #-16]
   153dc:	bl	0 <flatcc_verify_field>
   153e0:	str	r0, [fp, #-8]
   153e4:	ldr	r3, [fp, #-8]
   153e8:	cmp	r3, #0
   153ec:	beq	153f8 <MyGame_Example_TestJSONPrefixParsing_verify_table+0xbc>
   153f0:	ldr	r3, [fp, #-8]
   153f4:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   153f8:	mov	r2, #0
   153fc:	mov	r1, #4
   15400:	ldr	r0, [fp, #-16]
   15404:	bl	0 <flatcc_verify_string_field>
   15408:	str	r0, [fp, #-8]
   1540c:	ldr	r3, [fp, #-8]
   15410:	cmp	r3, #0
   15414:	beq	15420 <MyGame_Example_TestJSONPrefixParsing_verify_table+0xe4>
   15418:	ldr	r3, [fp, #-8]
   1541c:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   15420:	mov	r3, #8
   15424:	mov	r2, #8
   15428:	mov	r1, #5
   1542c:	ldr	r0, [fp, #-16]
   15430:	bl	0 <flatcc_verify_field>
   15434:	str	r0, [fp, #-8]
   15438:	ldr	r3, [fp, #-8]
   1543c:	cmp	r3, #0
   15440:	beq	1544c <MyGame_Example_TestJSONPrefixParsing_verify_table+0x110>
   15444:	ldr	r3, [fp, #-8]
   15448:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   1544c:	mov	r3, #4
   15450:	mov	r2, #4
   15454:	mov	r1, #6
   15458:	ldr	r0, [fp, #-16]
   1545c:	bl	0 <flatcc_verify_field>
   15460:	str	r0, [fp, #-8]
   15464:	ldr	r3, [fp, #-8]
   15468:	cmp	r3, #0
   1546c:	beq	15478 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x13c>
   15470:	ldr	r3, [fp, #-8]
   15474:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   15478:	mov	r3, #8
   1547c:	mov	r2, #8
   15480:	mov	r1, #7
   15484:	ldr	r0, [fp, #-16]
   15488:	bl	0 <flatcc_verify_field>
   1548c:	str	r0, [fp, #-8]
   15490:	ldr	r3, [fp, #-8]
   15494:	cmp	r3, #0
   15498:	beq	154a4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x168>
   1549c:	ldr	r3, [fp, #-8]
   154a0:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   154a4:	mov	r3, #4
   154a8:	mov	r2, #4
   154ac:	mov	r1, #8
   154b0:	ldr	r0, [fp, #-16]
   154b4:	bl	0 <flatcc_verify_field>
   154b8:	str	r0, [fp, #-8]
   154bc:	ldr	r3, [fp, #-8]
   154c0:	cmp	r3, #0
   154c4:	beq	154d0 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x194>
   154c8:	ldr	r3, [fp, #-8]
   154cc:	b	154d4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   154d0:	mov	r3, #0
   154d4:	mov	r0, r3
   154d8:	sub	sp, fp, #4
   154dc:	ldr	fp, [sp]
   154e0:	add	sp, sp, #4
   154e4:	pop	{pc}		; (ldr pc, [sp], #4)

000154e8 <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
   154e8:	str	fp, [sp, #-8]!
   154ec:	str	lr, [sp, #4]
   154f0:	add	fp, sp, #4
   154f4:	sub	sp, sp, #16
   154f8:	str	r0, [fp, #-16]
   154fc:	mov	r3, #8
   15500:	mov	r2, #8
   15504:	mov	r1, #0
   15508:	ldr	r0, [fp, #-16]
   1550c:	bl	0 <flatcc_verify_field>
   15510:	str	r0, [fp, #-8]
   15514:	ldr	r3, [fp, #-8]
   15518:	cmp	r3, #0
   1551c:	beq	15528 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x40>
   15520:	ldr	r3, [fp, #-8]
   15524:	b	15558 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x70>
   15528:	mov	r3, #4
   1552c:	mov	r2, #4
   15530:	mov	r1, #1
   15534:	ldr	r0, [fp, #-16]
   15538:	bl	0 <flatcc_verify_field>
   1553c:	str	r0, [fp, #-8]
   15540:	ldr	r3, [fp, #-8]
   15544:	cmp	r3, #0
   15548:	beq	15554 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x6c>
   1554c:	ldr	r3, [fp, #-8]
   15550:	b	15558 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x70>
   15554:	mov	r3, #0
   15558:	mov	r0, r3
   1555c:	sub	sp, fp, #4
   15560:	ldr	fp, [sp]
   15564:	add	sp, sp, #4
   15568:	pop	{pc}		; (ldr pc, [sp], #4)

0001556c <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
   1556c:	str	fp, [sp, #-8]!
   15570:	str	lr, [sp, #4]
   15574:	add	fp, sp, #4
   15578:	sub	sp, sp, #16
   1557c:	str	r0, [fp, #-16]
   15580:	mov	r3, #8
   15584:	mov	r2, #8
   15588:	mov	r1, #0
   1558c:	ldr	r0, [fp, #-16]
   15590:	bl	0 <flatcc_verify_field>
   15594:	str	r0, [fp, #-8]
   15598:	ldr	r3, [fp, #-8]
   1559c:	cmp	r3, #0
   155a0:	beq	155ac <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x40>
   155a4:	ldr	r3, [fp, #-8]
   155a8:	b	155dc <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x70>
   155ac:	mov	r3, #4
   155b0:	mov	r2, #4
   155b4:	mov	r1, #1
   155b8:	ldr	r0, [fp, #-16]
   155bc:	bl	0 <flatcc_verify_field>
   155c0:	str	r0, [fp, #-8]
   155c4:	ldr	r3, [fp, #-8]
   155c8:	cmp	r3, #0
   155cc:	beq	155d8 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x6c>
   155d0:	ldr	r3, [fp, #-8]
   155d4:	b	155dc <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x70>
   155d8:	mov	r3, #0
   155dc:	mov	r0, r3
   155e0:	sub	sp, fp, #4
   155e4:	ldr	fp, [sp]
   155e8:	add	sp, sp, #4
   155ec:	pop	{pc}		; (ldr pc, [sp], #4)

000155f0 <MyGame_Example_TestBase64_verify_table>:
   155f0:	str	fp, [sp, #-8]!
   155f4:	str	lr, [sp, #4]
   155f8:	add	fp, sp, #4
   155fc:	sub	sp, sp, #24
   15600:	str	r0, [fp, #-16]
   15604:	mvn	r3, #0
   15608:	str	r3, [sp, #4]
   1560c:	mov	r3, #1
   15610:	str	r3, [sp]
   15614:	mov	r3, #1
   15618:	mov	r2, #0
   1561c:	mov	r1, #0
   15620:	ldr	r0, [fp, #-16]
   15624:	bl	0 <flatcc_verify_vector_field>
   15628:	str	r0, [fp, #-8]
   1562c:	ldr	r3, [fp, #-8]
   15630:	cmp	r3, #0
   15634:	beq	15640 <MyGame_Example_TestBase64_verify_table+0x50>
   15638:	ldr	r3, [fp, #-8]
   1563c:	b	156c0 <MyGame_Example_TestBase64_verify_table+0xd0>
   15640:	mvn	r3, #0
   15644:	str	r3, [sp, #4]
   15648:	mov	r3, #1
   1564c:	str	r3, [sp]
   15650:	mov	r3, #1
   15654:	mov	r2, #0
   15658:	mov	r1, #1
   1565c:	ldr	r0, [fp, #-16]
   15660:	bl	0 <flatcc_verify_vector_field>
   15664:	str	r0, [fp, #-8]
   15668:	ldr	r3, [fp, #-8]
   1566c:	cmp	r3, #0
   15670:	beq	1567c <MyGame_Example_TestBase64_verify_table+0x8c>
   15674:	ldr	r3, [fp, #-8]
   15678:	b	156c0 <MyGame_Example_TestBase64_verify_table+0xd0>
   1567c:	movw	r3, #0
   15680:	movt	r3, #0
   15684:	str	r3, [sp, #4]
   15688:	mov	r3, #1
   1568c:	str	r3, [sp]
   15690:	mov	r3, #0
   15694:	mov	r2, #0
   15698:	mov	r1, #2
   1569c:	ldr	r0, [fp, #-16]
   156a0:	bl	0 <flatcc_verify_table_as_nested_root>
   156a4:	str	r0, [fp, #-8]
   156a8:	ldr	r3, [fp, #-8]
   156ac:	cmp	r3, #0
   156b0:	beq	156bc <MyGame_Example_TestBase64_verify_table+0xcc>
   156b4:	ldr	r3, [fp, #-8]
   156b8:	b	156c0 <MyGame_Example_TestBase64_verify_table+0xd0>
   156bc:	mov	r3, #0
   156c0:	mov	r0, r3
   156c4:	sub	sp, fp, #4
   156c8:	ldr	fp, [sp]
   156cc:	add	sp, sp, #4
   156d0:	pop	{pc}		; (ldr pc, [sp], #4)

000156d4 <MyGame_Example_Monster_verify_table>:
   156d4:	str	fp, [sp, #-8]!
   156d8:	str	lr, [sp, #4]
   156dc:	add	fp, sp, #4
   156e0:	sub	sp, sp, #24
   156e4:	str	r0, [fp, #-16]
   156e8:	mov	r3, #16
   156ec:	mov	r2, #32
   156f0:	mov	r1, #0
   156f4:	ldr	r0, [fp, #-16]
   156f8:	bl	0 <flatcc_verify_field>
   156fc:	str	r0, [fp, #-8]
   15700:	ldr	r3, [fp, #-8]
   15704:	cmp	r3, #0
   15708:	beq	15714 <MyGame_Example_Monster_verify_table+0x40>
   1570c:	ldr	r3, [fp, #-8]
   15710:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15714:	mov	r3, #2
   15718:	mov	r2, #2
   1571c:	mov	r1, #2
   15720:	ldr	r0, [fp, #-16]
   15724:	bl	0 <flatcc_verify_field>
   15728:	str	r0, [fp, #-8]
   1572c:	ldr	r3, [fp, #-8]
   15730:	cmp	r3, #0
   15734:	beq	15740 <MyGame_Example_Monster_verify_table+0x6c>
   15738:	ldr	r3, [fp, #-8]
   1573c:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15740:	mov	r3, #2
   15744:	mov	r2, #2
   15748:	mov	r1, #1
   1574c:	ldr	r0, [fp, #-16]
   15750:	bl	0 <flatcc_verify_field>
   15754:	str	r0, [fp, #-8]
   15758:	ldr	r3, [fp, #-8]
   1575c:	cmp	r3, #0
   15760:	beq	1576c <MyGame_Example_Monster_verify_table+0x98>
   15764:	ldr	r3, [fp, #-8]
   15768:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   1576c:	mov	r2, #1
   15770:	mov	r1, #3
   15774:	ldr	r0, [fp, #-16]
   15778:	bl	0 <flatcc_verify_string_field>
   1577c:	str	r0, [fp, #-8]
   15780:	ldr	r3, [fp, #-8]
   15784:	cmp	r3, #0
   15788:	beq	15794 <MyGame_Example_Monster_verify_table+0xc0>
   1578c:	ldr	r3, [fp, #-8]
   15790:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15794:	mov	r3, #1
   15798:	mov	r2, #1
   1579c:	mov	r1, #6
   157a0:	ldr	r0, [fp, #-16]
   157a4:	bl	0 <flatcc_verify_field>
   157a8:	str	r0, [fp, #-8]
   157ac:	ldr	r3, [fp, #-8]
   157b0:	cmp	r3, #0
   157b4:	beq	157c0 <MyGame_Example_Monster_verify_table+0xec>
   157b8:	ldr	r3, [fp, #-8]
   157bc:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   157c0:	mvn	r3, #0
   157c4:	str	r3, [sp, #4]
   157c8:	mov	r3, #1
   157cc:	str	r3, [sp]
   157d0:	mov	r3, #1
   157d4:	mov	r2, #0
   157d8:	mov	r1, #5
   157dc:	ldr	r0, [fp, #-16]
   157e0:	bl	0 <flatcc_verify_vector_field>
   157e4:	str	r0, [fp, #-8]
   157e8:	ldr	r3, [fp, #-8]
   157ec:	cmp	r3, #0
   157f0:	beq	157fc <MyGame_Example_Monster_verify_table+0x128>
   157f4:	ldr	r3, [fp, #-8]
   157f8:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   157fc:	movw	r3, #0
   15800:	movt	r3, #0
   15804:	mov	r2, #0
   15808:	mov	r1, #11
   1580c:	ldr	r0, [fp, #-16]
   15810:	bl	0 <flatcc_verify_table_vector_field>
   15814:	str	r0, [fp, #-8]
   15818:	ldr	r3, [fp, #-8]
   1581c:	cmp	r3, #0
   15820:	beq	1582c <MyGame_Example_Monster_verify_table+0x158>
   15824:	ldr	r3, [fp, #-8]
   15828:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   1582c:	mov	r2, #0
   15830:	mov	r1, #10
   15834:	ldr	r0, [fp, #-16]
   15838:	bl	0 <flatcc_verify_string_vector_field>
   1583c:	str	r0, [fp, #-8]
   15840:	ldr	r3, [fp, #-8]
   15844:	cmp	r3, #0
   15848:	beq	15854 <MyGame_Example_Monster_verify_table+0x180>
   1584c:	ldr	r3, [fp, #-8]
   15850:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15854:	mov	r2, #0
   15858:	mov	r1, #28
   1585c:	ldr	r0, [fp, #-16]
   15860:	bl	0 <flatcc_verify_string_vector_field>
   15864:	str	r0, [fp, #-8]
   15868:	ldr	r3, [fp, #-8]
   1586c:	cmp	r3, #0
   15870:	beq	1587c <MyGame_Example_Monster_verify_table+0x1a8>
   15874:	ldr	r3, [fp, #-8]
   15878:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   1587c:	mvn	r3, #0
   15880:	str	r3, [sp, #4]
   15884:	mov	r3, #1
   15888:	str	r3, [sp]
   1588c:	mov	r3, #1
   15890:	mov	r2, #0
   15894:	mov	r1, #24
   15898:	ldr	r0, [fp, #-16]
   1589c:	bl	0 <flatcc_verify_vector_field>
   158a0:	str	r0, [fp, #-8]
   158a4:	ldr	r3, [fp, #-8]
   158a8:	cmp	r3, #0
   158ac:	beq	158b8 <MyGame_Example_Monster_verify_table+0x1e4>
   158b0:	ldr	r3, [fp, #-8]
   158b4:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   158b8:	mvn	r3, #-536870912	; 0xe0000000
   158bc:	str	r3, [sp, #4]
   158c0:	mov	r3, #4
   158c4:	str	r3, [sp]
   158c8:	mov	r3, #8
   158cc:	mov	r2, #0
   158d0:	mov	r1, #29
   158d4:	ldr	r0, [fp, #-16]
   158d8:	bl	0 <flatcc_verify_vector_field>
   158dc:	str	r0, [fp, #-8]
   158e0:	ldr	r3, [fp, #-8]
   158e4:	cmp	r3, #0
   158e8:	beq	158f4 <MyGame_Example_Monster_verify_table+0x220>
   158ec:	ldr	r3, [fp, #-8]
   158f0:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   158f4:	movw	r3, #0
   158f8:	movt	r3, #0
   158fc:	mov	r2, #0
   15900:	mov	r1, #12
   15904:	ldr	r0, [fp, #-16]
   15908:	bl	0 <flatcc_verify_table_field>
   1590c:	str	r0, [fp, #-8]
   15910:	ldr	r3, [fp, #-8]
   15914:	cmp	r3, #0
   15918:	beq	15924 <MyGame_Example_Monster_verify_table+0x250>
   1591c:	ldr	r3, [fp, #-8]
   15920:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15924:	movw	r3, #0
   15928:	movt	r3, #0
   1592c:	mov	r2, #0
   15930:	mov	r1, #8
   15934:	ldr	r0, [fp, #-16]
   15938:	bl	0 <flatcc_verify_union_field>
   1593c:	str	r0, [fp, #-8]
   15940:	ldr	r3, [fp, #-8]
   15944:	cmp	r3, #0
   15948:	beq	15954 <MyGame_Example_Monster_verify_table+0x280>
   1594c:	ldr	r3, [fp, #-8]
   15950:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15954:	mvn	r3, #-1073741824	; 0xc0000000
   15958:	str	r3, [sp, #4]
   1595c:	mov	r3, #2
   15960:	str	r3, [sp]
   15964:	mov	r3, #4
   15968:	mov	r2, #0
   1596c:	mov	r1, #9
   15970:	ldr	r0, [fp, #-16]
   15974:	bl	0 <flatcc_verify_vector_field>
   15978:	str	r0, [fp, #-8]
   1597c:	ldr	r3, [fp, #-8]
   15980:	cmp	r3, #0
   15984:	beq	15990 <MyGame_Example_Monster_verify_table+0x2bc>
   15988:	ldr	r3, [fp, #-8]
   1598c:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15990:	mvn	r3, #-1073741824	; 0xc0000000
   15994:	str	r3, [sp, #4]
   15998:	mov	r3, #2
   1599c:	str	r3, [sp]
   159a0:	mov	r3, #4
   159a4:	mov	r2, #0
   159a8:	mov	r1, #31
   159ac:	ldr	r0, [fp, #-16]
   159b0:	bl	0 <flatcc_verify_vector_field>
   159b4:	str	r0, [fp, #-8]
   159b8:	ldr	r3, [fp, #-8]
   159bc:	cmp	r3, #0
   159c0:	beq	159cc <MyGame_Example_Monster_verify_table+0x2f8>
   159c4:	ldr	r3, [fp, #-8]
   159c8:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   159cc:	movw	r3, #0
   159d0:	movt	r3, #0
   159d4:	str	r3, [sp, #4]
   159d8:	mov	r3, #1
   159dc:	str	r3, [sp]
   159e0:	mov	r3, #0
   159e4:	mov	r2, #0
   159e8:	mov	r1, #13
   159ec:	ldr	r0, [fp, #-16]
   159f0:	bl	0 <flatcc_verify_table_as_nested_root>
   159f4:	str	r0, [fp, #-8]
   159f8:	ldr	r3, [fp, #-8]
   159fc:	cmp	r3, #0
   15a00:	beq	15a0c <MyGame_Example_Monster_verify_table+0x338>
   15a04:	ldr	r3, [fp, #-8]
   15a08:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15a0c:	movw	r3, #0
   15a10:	movt	r3, #0
   15a14:	mov	r2, #0
   15a18:	mov	r1, #14
   15a1c:	ldr	r0, [fp, #-16]
   15a20:	bl	0 <flatcc_verify_table_field>
   15a24:	str	r0, [fp, #-8]
   15a28:	ldr	r3, [fp, #-8]
   15a2c:	cmp	r3, #0
   15a30:	beq	15a3c <MyGame_Example_Monster_verify_table+0x368>
   15a34:	ldr	r3, [fp, #-8]
   15a38:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15a3c:	mov	r3, #1
   15a40:	mov	r2, #1
   15a44:	mov	r1, #15
   15a48:	ldr	r0, [fp, #-16]
   15a4c:	bl	0 <flatcc_verify_field>
   15a50:	str	r0, [fp, #-8]
   15a54:	ldr	r3, [fp, #-8]
   15a58:	cmp	r3, #0
   15a5c:	beq	15a68 <MyGame_Example_Monster_verify_table+0x394>
   15a60:	ldr	r3, [fp, #-8]
   15a64:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15a68:	mov	r3, #4
   15a6c:	mov	r2, #4
   15a70:	mov	r1, #16
   15a74:	ldr	r0, [fp, #-16]
   15a78:	bl	0 <flatcc_verify_field>
   15a7c:	str	r0, [fp, #-8]
   15a80:	ldr	r3, [fp, #-8]
   15a84:	cmp	r3, #0
   15a88:	beq	15a94 <MyGame_Example_Monster_verify_table+0x3c0>
   15a8c:	ldr	r3, [fp, #-8]
   15a90:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15a94:	mov	r3, #4
   15a98:	mov	r2, #4
   15a9c:	mov	r1, #17
   15aa0:	ldr	r0, [fp, #-16]
   15aa4:	bl	0 <flatcc_verify_field>
   15aa8:	str	r0, [fp, #-8]
   15aac:	ldr	r3, [fp, #-8]
   15ab0:	cmp	r3, #0
   15ab4:	beq	15ac0 <MyGame_Example_Monster_verify_table+0x3ec>
   15ab8:	ldr	r3, [fp, #-8]
   15abc:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15ac0:	mov	r3, #8
   15ac4:	mov	r2, #8
   15ac8:	mov	r1, #18
   15acc:	ldr	r0, [fp, #-16]
   15ad0:	bl	0 <flatcc_verify_field>
   15ad4:	str	r0, [fp, #-8]
   15ad8:	ldr	r3, [fp, #-8]
   15adc:	cmp	r3, #0
   15ae0:	beq	15aec <MyGame_Example_Monster_verify_table+0x418>
   15ae4:	ldr	r3, [fp, #-8]
   15ae8:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15aec:	mov	r3, #8
   15af0:	mov	r2, #8
   15af4:	mov	r1, #19
   15af8:	ldr	r0, [fp, #-16]
   15afc:	bl	0 <flatcc_verify_field>
   15b00:	str	r0, [fp, #-8]
   15b04:	ldr	r3, [fp, #-8]
   15b08:	cmp	r3, #0
   15b0c:	beq	15b18 <MyGame_Example_Monster_verify_table+0x444>
   15b10:	ldr	r3, [fp, #-8]
   15b14:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15b18:	mov	r3, #4
   15b1c:	mov	r2, #4
   15b20:	mov	r1, #20
   15b24:	ldr	r0, [fp, #-16]
   15b28:	bl	0 <flatcc_verify_field>
   15b2c:	str	r0, [fp, #-8]
   15b30:	ldr	r3, [fp, #-8]
   15b34:	cmp	r3, #0
   15b38:	beq	15b44 <MyGame_Example_Monster_verify_table+0x470>
   15b3c:	ldr	r3, [fp, #-8]
   15b40:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15b44:	mov	r3, #4
   15b48:	mov	r2, #4
   15b4c:	mov	r1, #21
   15b50:	ldr	r0, [fp, #-16]
   15b54:	bl	0 <flatcc_verify_field>
   15b58:	str	r0, [fp, #-8]
   15b5c:	ldr	r3, [fp, #-8]
   15b60:	cmp	r3, #0
   15b64:	beq	15b70 <MyGame_Example_Monster_verify_table+0x49c>
   15b68:	ldr	r3, [fp, #-8]
   15b6c:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15b70:	mov	r3, #8
   15b74:	mov	r2, #8
   15b78:	mov	r1, #22
   15b7c:	ldr	r0, [fp, #-16]
   15b80:	bl	0 <flatcc_verify_field>
   15b84:	str	r0, [fp, #-8]
   15b88:	ldr	r3, [fp, #-8]
   15b8c:	cmp	r3, #0
   15b90:	beq	15b9c <MyGame_Example_Monster_verify_table+0x4c8>
   15b94:	ldr	r3, [fp, #-8]
   15b98:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15b9c:	mov	r3, #8
   15ba0:	mov	r2, #8
   15ba4:	mov	r1, #23
   15ba8:	ldr	r0, [fp, #-16]
   15bac:	bl	0 <flatcc_verify_field>
   15bb0:	str	r0, [fp, #-8]
   15bb4:	ldr	r3, [fp, #-8]
   15bb8:	cmp	r3, #0
   15bbc:	beq	15bc8 <MyGame_Example_Monster_verify_table+0x4f4>
   15bc0:	ldr	r3, [fp, #-8]
   15bc4:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15bc8:	mov	r3, #4
   15bcc:	mov	r2, #4
   15bd0:	mov	r1, #25
   15bd4:	ldr	r0, [fp, #-16]
   15bd8:	bl	0 <flatcc_verify_field>
   15bdc:	str	r0, [fp, #-8]
   15be0:	ldr	r3, [fp, #-8]
   15be4:	cmp	r3, #0
   15be8:	beq	15bf4 <MyGame_Example_Monster_verify_table+0x520>
   15bec:	ldr	r3, [fp, #-8]
   15bf0:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15bf4:	mov	r3, #4
   15bf8:	mov	r2, #4
   15bfc:	mov	r1, #26
   15c00:	ldr	r0, [fp, #-16]
   15c04:	bl	0 <flatcc_verify_field>
   15c08:	str	r0, [fp, #-8]
   15c0c:	ldr	r3, [fp, #-8]
   15c10:	cmp	r3, #0
   15c14:	beq	15c20 <MyGame_Example_Monster_verify_table+0x54c>
   15c18:	ldr	r3, [fp, #-8]
   15c1c:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15c20:	mov	r3, #4
   15c24:	mov	r2, #4
   15c28:	mov	r1, #27
   15c2c:	ldr	r0, [fp, #-16]
   15c30:	bl	0 <flatcc_verify_field>
   15c34:	str	r0, [fp, #-8]
   15c38:	ldr	r3, [fp, #-8]
   15c3c:	cmp	r3, #0
   15c40:	beq	15c4c <MyGame_Example_Monster_verify_table+0x578>
   15c44:	ldr	r3, [fp, #-8]
   15c48:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15c4c:	mvn	r3, #0
   15c50:	str	r3, [sp, #4]
   15c54:	mov	r3, #1
   15c58:	str	r3, [sp]
   15c5c:	mov	r3, #1
   15c60:	mov	r2, #0
   15c64:	mov	r1, #30
   15c68:	ldr	r0, [fp, #-16]
   15c6c:	bl	0 <flatcc_verify_vector_field>
   15c70:	str	r0, [fp, #-8]
   15c74:	ldr	r3, [fp, #-8]
   15c78:	cmp	r3, #0
   15c7c:	beq	15c88 <MyGame_Example_Monster_verify_table+0x5b4>
   15c80:	ldr	r3, [fp, #-8]
   15c84:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15c88:	mvn	r3, #-536870912	; 0xe0000000
   15c8c:	str	r3, [sp, #4]
   15c90:	mov	r3, #8
   15c94:	str	r3, [sp]
   15c98:	mov	r3, #8
   15c9c:	mov	r2, #0
   15ca0:	mov	r1, #32
   15ca4:	ldr	r0, [fp, #-16]
   15ca8:	bl	0 <flatcc_verify_vector_field>
   15cac:	str	r0, [fp, #-8]
   15cb0:	ldr	r3, [fp, #-8]
   15cb4:	cmp	r3, #0
   15cb8:	beq	15cc4 <MyGame_Example_Monster_verify_table+0x5f0>
   15cbc:	ldr	r3, [fp, #-8]
   15cc0:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15cc4:	mvn	r3, #-536870912	; 0xe0000000
   15cc8:	str	r3, [sp, #4]
   15ccc:	mov	r3, #8
   15cd0:	str	r3, [sp]
   15cd4:	mov	r3, #8
   15cd8:	mov	r2, #0
   15cdc:	mov	r1, #33	; 0x21
   15ce0:	ldr	r0, [fp, #-16]
   15ce4:	bl	0 <flatcc_verify_vector_field>
   15ce8:	str	r0, [fp, #-8]
   15cec:	ldr	r3, [fp, #-8]
   15cf0:	cmp	r3, #0
   15cf4:	beq	15d00 <MyGame_Example_Monster_verify_table+0x62c>
   15cf8:	ldr	r3, [fp, #-8]
   15cfc:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15d00:	movw	r3, #0
   15d04:	movt	r3, #0
   15d08:	mov	r2, #0
   15d0c:	mov	r1, #34	; 0x22
   15d10:	ldr	r0, [fp, #-16]
   15d14:	bl	0 <flatcc_verify_table_field>
   15d18:	str	r0, [fp, #-8]
   15d1c:	ldr	r3, [fp, #-8]
   15d20:	cmp	r3, #0
   15d24:	beq	15d30 <MyGame_Example_Monster_verify_table+0x65c>
   15d28:	ldr	r3, [fp, #-8]
   15d2c:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15d30:	movw	r3, #0
   15d34:	movt	r3, #0
   15d38:	mov	r2, #0
   15d3c:	mov	r1, #35	; 0x23
   15d40:	ldr	r0, [fp, #-16]
   15d44:	bl	0 <flatcc_verify_table_field>
   15d48:	str	r0, [fp, #-8]
   15d4c:	ldr	r3, [fp, #-8]
   15d50:	cmp	r3, #0
   15d54:	beq	15d60 <MyGame_Example_Monster_verify_table+0x68c>
   15d58:	ldr	r3, [fp, #-8]
   15d5c:	b	15d64 <MyGame_Example_Monster_verify_table+0x690>
   15d60:	mov	r3, #0
   15d64:	mov	r0, r3
   15d68:	sub	sp, fp, #4
   15d6c:	ldr	fp, [sp]
   15d70:	add	sp, sp, #4
   15d74:	pop	{pc}		; (ldr pc, [sp], #4)

00015d78 <MyGame_Example_TypeAliases_verify_table>:
   15d78:	str	fp, [sp, #-8]!
   15d7c:	str	lr, [sp, #4]
   15d80:	add	fp, sp, #4
   15d84:	sub	sp, sp, #24
   15d88:	str	r0, [fp, #-16]
   15d8c:	mov	r3, #1
   15d90:	mov	r2, #1
   15d94:	mov	r1, #0
   15d98:	ldr	r0, [fp, #-16]
   15d9c:	bl	0 <flatcc_verify_field>
   15da0:	str	r0, [fp, #-8]
   15da4:	ldr	r3, [fp, #-8]
   15da8:	cmp	r3, #0
   15dac:	beq	15db8 <MyGame_Example_TypeAliases_verify_table+0x40>
   15db0:	ldr	r3, [fp, #-8]
   15db4:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15db8:	mov	r3, #1
   15dbc:	mov	r2, #1
   15dc0:	mov	r1, #1
   15dc4:	ldr	r0, [fp, #-16]
   15dc8:	bl	0 <flatcc_verify_field>
   15dcc:	str	r0, [fp, #-8]
   15dd0:	ldr	r3, [fp, #-8]
   15dd4:	cmp	r3, #0
   15dd8:	beq	15de4 <MyGame_Example_TypeAliases_verify_table+0x6c>
   15ddc:	ldr	r3, [fp, #-8]
   15de0:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15de4:	mov	r3, #2
   15de8:	mov	r2, #2
   15dec:	mov	r1, #2
   15df0:	ldr	r0, [fp, #-16]
   15df4:	bl	0 <flatcc_verify_field>
   15df8:	str	r0, [fp, #-8]
   15dfc:	ldr	r3, [fp, #-8]
   15e00:	cmp	r3, #0
   15e04:	beq	15e10 <MyGame_Example_TypeAliases_verify_table+0x98>
   15e08:	ldr	r3, [fp, #-8]
   15e0c:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15e10:	mov	r3, #2
   15e14:	mov	r2, #2
   15e18:	mov	r1, #3
   15e1c:	ldr	r0, [fp, #-16]
   15e20:	bl	0 <flatcc_verify_field>
   15e24:	str	r0, [fp, #-8]
   15e28:	ldr	r3, [fp, #-8]
   15e2c:	cmp	r3, #0
   15e30:	beq	15e3c <MyGame_Example_TypeAliases_verify_table+0xc4>
   15e34:	ldr	r3, [fp, #-8]
   15e38:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15e3c:	mov	r3, #4
   15e40:	mov	r2, #4
   15e44:	mov	r1, #4
   15e48:	ldr	r0, [fp, #-16]
   15e4c:	bl	0 <flatcc_verify_field>
   15e50:	str	r0, [fp, #-8]
   15e54:	ldr	r3, [fp, #-8]
   15e58:	cmp	r3, #0
   15e5c:	beq	15e68 <MyGame_Example_TypeAliases_verify_table+0xf0>
   15e60:	ldr	r3, [fp, #-8]
   15e64:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15e68:	mov	r3, #4
   15e6c:	mov	r2, #4
   15e70:	mov	r1, #5
   15e74:	ldr	r0, [fp, #-16]
   15e78:	bl	0 <flatcc_verify_field>
   15e7c:	str	r0, [fp, #-8]
   15e80:	ldr	r3, [fp, #-8]
   15e84:	cmp	r3, #0
   15e88:	beq	15e94 <MyGame_Example_TypeAliases_verify_table+0x11c>
   15e8c:	ldr	r3, [fp, #-8]
   15e90:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15e94:	mov	r3, #8
   15e98:	mov	r2, #8
   15e9c:	mov	r1, #6
   15ea0:	ldr	r0, [fp, #-16]
   15ea4:	bl	0 <flatcc_verify_field>
   15ea8:	str	r0, [fp, #-8]
   15eac:	ldr	r3, [fp, #-8]
   15eb0:	cmp	r3, #0
   15eb4:	beq	15ec0 <MyGame_Example_TypeAliases_verify_table+0x148>
   15eb8:	ldr	r3, [fp, #-8]
   15ebc:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15ec0:	mov	r3, #8
   15ec4:	mov	r2, #8
   15ec8:	mov	r1, #7
   15ecc:	ldr	r0, [fp, #-16]
   15ed0:	bl	0 <flatcc_verify_field>
   15ed4:	str	r0, [fp, #-8]
   15ed8:	ldr	r3, [fp, #-8]
   15edc:	cmp	r3, #0
   15ee0:	beq	15eec <MyGame_Example_TypeAliases_verify_table+0x174>
   15ee4:	ldr	r3, [fp, #-8]
   15ee8:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15eec:	mov	r3, #4
   15ef0:	mov	r2, #4
   15ef4:	mov	r1, #8
   15ef8:	ldr	r0, [fp, #-16]
   15efc:	bl	0 <flatcc_verify_field>
   15f00:	str	r0, [fp, #-8]
   15f04:	ldr	r3, [fp, #-8]
   15f08:	cmp	r3, #0
   15f0c:	beq	15f18 <MyGame_Example_TypeAliases_verify_table+0x1a0>
   15f10:	ldr	r3, [fp, #-8]
   15f14:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15f18:	mov	r3, #8
   15f1c:	mov	r2, #8
   15f20:	mov	r1, #9
   15f24:	ldr	r0, [fp, #-16]
   15f28:	bl	0 <flatcc_verify_field>
   15f2c:	str	r0, [fp, #-8]
   15f30:	ldr	r3, [fp, #-8]
   15f34:	cmp	r3, #0
   15f38:	beq	15f44 <MyGame_Example_TypeAliases_verify_table+0x1cc>
   15f3c:	ldr	r3, [fp, #-8]
   15f40:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15f44:	mvn	r3, #0
   15f48:	str	r3, [sp, #4]
   15f4c:	mov	r3, #1
   15f50:	str	r3, [sp]
   15f54:	mov	r3, #1
   15f58:	mov	r2, #0
   15f5c:	mov	r1, #10
   15f60:	ldr	r0, [fp, #-16]
   15f64:	bl	0 <flatcc_verify_vector_field>
   15f68:	str	r0, [fp, #-8]
   15f6c:	ldr	r3, [fp, #-8]
   15f70:	cmp	r3, #0
   15f74:	beq	15f80 <MyGame_Example_TypeAliases_verify_table+0x208>
   15f78:	ldr	r3, [fp, #-8]
   15f7c:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15f80:	mvn	r3, #-536870912	; 0xe0000000
   15f84:	str	r3, [sp, #4]
   15f88:	mov	r3, #8
   15f8c:	str	r3, [sp]
   15f90:	mov	r3, #8
   15f94:	mov	r2, #0
   15f98:	mov	r1, #11
   15f9c:	ldr	r0, [fp, #-16]
   15fa0:	bl	0 <flatcc_verify_vector_field>
   15fa4:	str	r0, [fp, #-8]
   15fa8:	ldr	r3, [fp, #-8]
   15fac:	cmp	r3, #0
   15fb0:	beq	15fbc <MyGame_Example_TypeAliases_verify_table+0x244>
   15fb4:	ldr	r3, [fp, #-8]
   15fb8:	b	15fc0 <MyGame_Example_TypeAliases_verify_table+0x248>
   15fbc:	mov	r3, #0
   15fc0:	mov	r0, r3
   15fc4:	sub	sp, fp, #4
   15fc8:	ldr	fp, [sp]
   15fcc:	add	sp, sp, #4
   15fd0:	pop	{pc}		; (ldr pc, [sp], #4)

00015fd4 <Fantasy_Attacker_verify_table>:
   15fd4:	str	fp, [sp, #-8]!
   15fd8:	str	lr, [sp, #4]
   15fdc:	add	fp, sp, #4
   15fe0:	sub	sp, sp, #16
   15fe4:	str	r0, [fp, #-16]
   15fe8:	mov	r3, #4
   15fec:	mov	r2, #4
   15ff0:	mov	r1, #0
   15ff4:	ldr	r0, [fp, #-16]
   15ff8:	bl	0 <flatcc_verify_field>
   15ffc:	str	r0, [fp, #-8]
   16000:	ldr	r3, [fp, #-8]
   16004:	cmp	r3, #0
   16008:	beq	16014 <Fantasy_Attacker_verify_table+0x40>
   1600c:	ldr	r3, [fp, #-8]
   16010:	b	16018 <Fantasy_Attacker_verify_table+0x44>
   16014:	mov	r3, #0
   16018:	mov	r0, r3
   1601c:	sub	sp, fp, #4
   16020:	ldr	fp, [sp]
   16024:	add	sp, sp, #4
   16028:	pop	{pc}		; (ldr pc, [sp], #4)

0001602c <Fantasy_Movie_verify_table>:
   1602c:	str	fp, [sp, #-8]!
   16030:	str	lr, [sp, #4]
   16034:	add	fp, sp, #4
   16038:	sub	sp, sp, #16
   1603c:	str	r0, [fp, #-16]
   16040:	movw	r3, #0
   16044:	movt	r3, #0
   16048:	mov	r2, #0
   1604c:	mov	r1, #1
   16050:	ldr	r0, [fp, #-16]
   16054:	bl	0 <flatcc_verify_union_field>
   16058:	str	r0, [fp, #-8]
   1605c:	ldr	r3, [fp, #-8]
   16060:	cmp	r3, #0
   16064:	beq	16070 <Fantasy_Movie_verify_table+0x44>
   16068:	ldr	r3, [fp, #-8]
   1606c:	b	16134 <Fantasy_Movie_verify_table+0x108>
   16070:	movw	r3, #0
   16074:	movt	r3, #0
   16078:	mov	r2, #0
   1607c:	mov	r1, #3
   16080:	ldr	r0, [fp, #-16]
   16084:	bl	0 <flatcc_verify_union_field>
   16088:	str	r0, [fp, #-8]
   1608c:	ldr	r3, [fp, #-8]
   16090:	cmp	r3, #0
   16094:	beq	160a0 <Fantasy_Movie_verify_table+0x74>
   16098:	ldr	r3, [fp, #-8]
   1609c:	b	16134 <Fantasy_Movie_verify_table+0x108>
   160a0:	movw	r3, #0
   160a4:	movt	r3, #0
   160a8:	mov	r2, #0
   160ac:	mov	r1, #5
   160b0:	ldr	r0, [fp, #-16]
   160b4:	bl	0 <flatcc_verify_union_field>
   160b8:	str	r0, [fp, #-8]
   160bc:	ldr	r3, [fp, #-8]
   160c0:	cmp	r3, #0
   160c4:	beq	160d0 <Fantasy_Movie_verify_table+0xa4>
   160c8:	ldr	r3, [fp, #-8]
   160cc:	b	16134 <Fantasy_Movie_verify_table+0x108>
   160d0:	movw	r3, #0
   160d4:	movt	r3, #0
   160d8:	mov	r2, #0
   160dc:	mov	r1, #7
   160e0:	ldr	r0, [fp, #-16]
   160e4:	bl	0 <flatcc_verify_union_field>
   160e8:	str	r0, [fp, #-8]
   160ec:	ldr	r3, [fp, #-8]
   160f0:	cmp	r3, #0
   160f4:	beq	16100 <Fantasy_Movie_verify_table+0xd4>
   160f8:	ldr	r3, [fp, #-8]
   160fc:	b	16134 <Fantasy_Movie_verify_table+0x108>
   16100:	movw	r3, #0
   16104:	movt	r3, #0
   16108:	mov	r2, #0
   1610c:	mov	r1, #9
   16110:	ldr	r0, [fp, #-16]
   16114:	bl	0 <flatcc_verify_union_vector_field>
   16118:	str	r0, [fp, #-8]
   1611c:	ldr	r3, [fp, #-8]
   16120:	cmp	r3, #0
   16124:	beq	16130 <Fantasy_Movie_verify_table+0x104>
   16128:	ldr	r3, [fp, #-8]
   1612c:	b	16134 <Fantasy_Movie_verify_table+0x108>
   16130:	mov	r3, #0
   16134:	mov	r0, r3
   16138:	sub	sp, fp, #4
   1613c:	ldr	fp, [sp]
   16140:	add	sp, sp, #4
   16144:	pop	{pc}		; (ldr pc, [sp], #4)

00016148 <hexdump>:
   16148:	str	fp, [sp, #-8]!
   1614c:	str	lr, [sp, #4]
   16150:	add	fp, sp, #4
   16154:	sub	sp, sp, #48	; 0x30
   16158:	str	r0, [fp, #-40]	; 0xffffffd8
   1615c:	str	r1, [fp, #-44]	; 0xffffffd4
   16160:	str	r2, [fp, #-48]	; 0xffffffd0
   16164:	str	r3, [fp, #-52]	; 0xffffffcc
   16168:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1616c:	str	r3, [fp, #-12]
   16170:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16174:	cmp	r3, #0
   16178:	beq	16190 <hexdump+0x48>
   1617c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16180:	movw	r1, #0
   16184:	movt	r1, #0
   16188:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1618c:	bl	0 <fprintf>
   16190:	mov	r3, #0
   16194:	str	r3, [fp, #-8]
   16198:	b	162c0 <hexdump+0x178>
   1619c:	ldr	r3, [fp, #-8]
   161a0:	and	r3, r3, #15
   161a4:	cmp	r3, #0
   161a8:	bne	161e8 <hexdump+0xa0>
   161ac:	ldr	r3, [fp, #-8]
   161b0:	cmp	r3, #0
   161b4:	beq	161d0 <hexdump+0x88>
   161b8:	sub	r3, fp, #32
   161bc:	mov	r2, r3
   161c0:	movw	r1, #0
   161c4:	movt	r1, #0
   161c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   161cc:	bl	0 <fprintf>
   161d0:	ldr	r2, [fp, #-8]
   161d4:	movw	r1, #0
   161d8:	movt	r1, #0
   161dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   161e0:	bl	0 <fprintf>
   161e4:	b	16204 <hexdump+0xbc>
   161e8:	ldr	r3, [fp, #-8]
   161ec:	and	r3, r3, #7
   161f0:	cmp	r3, #0
   161f4:	bne	16204 <hexdump+0xbc>
   161f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   161fc:	mov	r0, #32
   16200:	bl	0 <fputc>
   16204:	ldr	r2, [fp, #-12]
   16208:	ldr	r3, [fp, #-8]
   1620c:	add	r3, r2, r3
   16210:	ldrb	r3, [r3]
   16214:	mov	r2, r3
   16218:	movw	r1, #0
   1621c:	movt	r1, #0
   16220:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16224:	bl	0 <fprintf>
   16228:	ldr	r2, [fp, #-12]
   1622c:	ldr	r3, [fp, #-8]
   16230:	add	r3, r2, r3
   16234:	ldrb	r3, [r3]
   16238:	cmp	r3, #31
   1623c:	bls	16258 <hexdump+0x110>
   16240:	ldr	r2, [fp, #-12]
   16244:	ldr	r3, [fp, #-8]
   16248:	add	r3, r2, r3
   1624c:	ldrb	r3, [r3]
   16250:	cmp	r3, #126	; 0x7e
   16254:	bls	16274 <hexdump+0x12c>
   16258:	ldr	r3, [fp, #-8]
   1625c:	and	r3, r3, #15
   16260:	sub	r2, fp, #4
   16264:	add	r3, r2, r3
   16268:	mov	r2, #46	; 0x2e
   1626c:	strb	r2, [r3, #-28]	; 0xffffffe4
   16270:	b	16298 <hexdump+0x150>
   16274:	ldr	r2, [fp, #-12]
   16278:	ldr	r3, [fp, #-8]
   1627c:	add	r2, r2, r3
   16280:	ldr	r3, [fp, #-8]
   16284:	and	r3, r3, #15
   16288:	ldrb	r2, [r2]
   1628c:	sub	r1, fp, #4
   16290:	add	r3, r1, r3
   16294:	strb	r2, [r3, #-28]	; 0xffffffe4
   16298:	ldr	r3, [fp, #-8]
   1629c:	and	r3, r3, #15
   162a0:	add	r3, r3, #1
   162a4:	sub	r2, fp, #4
   162a8:	add	r3, r2, r3
   162ac:	mov	r2, #0
   162b0:	strb	r2, [r3, #-28]	; 0xffffffe4
   162b4:	ldr	r3, [fp, #-8]
   162b8:	add	r3, r3, #1
   162bc:	str	r3, [fp, #-8]
   162c0:	ldr	r2, [fp, #-8]
   162c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162c8:	cmp	r2, r3
   162cc:	bcc	1619c <hexdump+0x54>
   162d0:	b	162f8 <hexdump+0x1b0>
   162d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   162d8:	mov	r2, #3
   162dc:	mov	r1, #1
   162e0:	movw	r0, #0
   162e4:	movt	r0, #0
   162e8:	bl	0 <fwrite>
   162ec:	ldr	r3, [fp, #-8]
   162f0:	add	r3, r3, #1
   162f4:	str	r3, [fp, #-8]
   162f8:	ldr	r3, [fp, #-8]
   162fc:	and	r3, r3, #15
   16300:	cmp	r3, #0
   16304:	bne	162d4 <hexdump+0x18c>
   16308:	sub	r3, fp, #32
   1630c:	mov	r2, r3
   16310:	movw	r1, #0
   16314:	movt	r1, #0
   16318:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1631c:	bl	0 <fprintf>
   16320:	nop	{0}
   16324:	sub	sp, fp, #4
   16328:	ldr	fp, [sp]
   1632c:	add	sp, sp, #4
   16330:	pop	{pc}		; (ldr pc, [sp], #4)

00016334 <test_json>:
   16334:	str	r4, [sp, #-12]!
   16338:	str	fp, [sp, #4]
   1633c:	str	lr, [sp, #8]
   16340:	add	fp, sp, #8
   16344:	sub	sp, sp, #396	; 0x18c
   16348:	str	r0, [fp, #-376]	; 0xfffffe88
   1634c:	str	r1, [fp, #-380]	; 0xfffffe84
   16350:	str	r2, [fp, #-384]	; 0xfffffe80
   16354:	str	r3, [fp, #-388]	; 0xfffffe7c
   16358:	mvn	r3, #0
   1635c:	str	r3, [fp, #-16]
   16360:	mov	r3, #0
   16364:	str	r3, [fp, #-20]	; 0xffffffec
   16368:	mov	r3, #0
   1636c:	str	r3, [fp, #-28]	; 0xffffffe4
   16370:	sub	r3, fp, #276	; 0x114
   16374:	str	r3, [fp, #-32]	; 0xffffffe0
   16378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1637c:	bl	0 <flatcc_builder_init>
   16380:	sub	r3, fp, #368	; 0x170
   16384:	mov	r1, #0
   16388:	mov	r0, r3
   1638c:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
   16390:	sub	r3, fp, #368	; 0x170
   16394:	ldr	r1, [fp, #8]
   16398:	mov	r0, r3
   1639c:	bl	12d18 <flatcc_json_printer_set_flags>
   163a0:	ldr	r0, [fp, #-380]	; 0xfffffe84
   163a4:	bl	0 <strlen>
   163a8:	ldr	r3, [fp, #-376]	; 0xfffffe88
   163ac:	ldr	r3, [r3]
   163b0:	ldr	r2, [fp, #-376]	; 0xfffffe88
   163b4:	ldr	r2, [r2, #4]
   163b8:	sub	r1, fp, #320	; 0x140
   163bc:	str	r2, [sp, #8]
   163c0:	str	r3, [sp, #4]
   163c4:	ldr	r3, [fp, #4]
   163c8:	str	r3, [sp]
   163cc:	mov	r3, r0
   163d0:	ldr	r2, [fp, #-380]	; 0xfffffe84
   163d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163d8:	bl	0 <flatcc_json_parser_table_as_root>
   163dc:	str	r0, [fp, #-36]	; 0xffffffdc
   163e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   163e4:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   163e8:	cmp	r2, r3
   163ec:	beq	16588 <test_json+0x254>
   163f0:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   163f4:	cmp	r3, #0
   163f8:	beq	164d4 <test_json+0x1a0>
   163fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16400:	cmp	r3, #0
   16404:	beq	16484 <test_json+0x150>
   16408:	movw	r3, #0
   1640c:	movt	r3, #0
   16410:	ldr	r4, [r3]
   16414:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16418:	bl	0 <flatcc_json_parser_error_string>
   1641c:	mov	r3, r0
   16420:	ldr	r2, [fp, #12]
   16424:	movw	r1, #0
   16428:	movt	r1, #0
   1642c:	mov	r0, r4
   16430:	bl	0 <fprintf>
   16434:	movw	r3, #0
   16438:	movt	r3, #0
   1643c:	ldr	r4, [r3]
   16440:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   16444:	bl	0 <flatcc_json_parser_error_string>
   16448:	mov	r3, r0
   1644c:	mov	r2, r3
   16450:	movw	r1, #0
   16454:	movt	r1, #0
   16458:	mov	r0, r4
   1645c:	bl	0 <fprintf>
   16460:	movw	r3, #0
   16464:	movt	r3, #0
   16468:	ldr	r3, [r3]
   1646c:	ldr	r2, [fp, #-380]	; 0xfffffe84
   16470:	movw	r1, #0
   16474:	movt	r1, #0
   16478:	mov	r0, r3
   1647c:	bl	0 <fprintf>
   16480:	b	16520 <test_json+0x1ec>
   16484:	movw	r3, #0
   16488:	movt	r3, #0
   1648c:	ldr	r4, [r3]
   16490:	ldr	r0, [fp, #-388]	; 0xfffffe7c
   16494:	bl	0 <flatcc_json_parser_error_string>
   16498:	mov	r3, r0
   1649c:	ldr	r2, [fp, #12]
   164a0:	movw	r1, #0
   164a4:	movt	r1, #0
   164a8:	mov	r0, r4
   164ac:	bl	0 <fprintf>
   164b0:	movw	r3, #0
   164b4:	movt	r3, #0
   164b8:	ldr	r3, [r3]
   164bc:	ldr	r2, [fp, #-380]	; 0xfffffe84
   164c0:	movw	r1, #0
   164c4:	movt	r1, #0
   164c8:	mov	r0, r3
   164cc:	bl	0 <fprintf>
   164d0:	b	16520 <test_json+0x1ec>
   164d4:	movw	r3, #0
   164d8:	movt	r3, #0
   164dc:	ldr	r4, [r3]
   164e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   164e4:	bl	0 <flatcc_json_parser_error_string>
   164e8:	mov	r3, r0
   164ec:	ldr	r2, [fp, #12]
   164f0:	movw	r1, #0
   164f4:	movt	r1, #0
   164f8:	mov	r0, r4
   164fc:	bl	0 <fprintf>
   16500:	movw	r3, #0
   16504:	movt	r3, #0
   16508:	ldr	r3, [r3]
   1650c:	ldr	r2, [fp, #-380]	; 0xfffffe84
   16510:	movw	r1, #0
   16514:	movt	r1, #0
   16518:	mov	r0, r3
   1651c:	bl	0 <fprintf>
   16520:	mov	r3, #0
   16524:	str	r3, [fp, #-24]	; 0xffffffe8
   16528:	b	16550 <test_json+0x21c>
   1652c:	movw	r3, #0
   16530:	movt	r3, #0
   16534:	ldr	r3, [r3]
   16538:	mov	r1, r3
   1653c:	mov	r0, #32
   16540:	bl	0 <fputc>
   16544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16548:	add	r3, r3, #1
   1654c:	str	r3, [fp, #-24]	; 0xffffffe8
   16550:	ldr	r3, [fp, #-300]	; 0xfffffed4
   16554:	sub	r3, r3, #1
   16558:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1655c:	cmp	r2, r3
   16560:	blt	1652c <test_json+0x1f8>
   16564:	movw	r3, #0
   16568:	movt	r3, #0
   1656c:	ldr	r3, [r3]
   16570:	mov	r2, #2
   16574:	mov	r1, #1
   16578:	movw	r0, #0
   1657c:	movt	r0, #0
   16580:	bl	0 <fwrite>
   16584:	b	16730 <test_json+0x3fc>
   16588:	ldr	r3, [fp, #-388]	; 0xfffffe7c
   1658c:	cmp	r3, #0
   16590:	beq	165a0 <test_json+0x26c>
   16594:	mov	r3, #0
   16598:	str	r3, [fp, #-16]
   1659c:	b	1670c <test_json+0x3d8>
   165a0:	sub	r3, fp, #40	; 0x28
   165a4:	mov	r1, r3
   165a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   165ac:	bl	0 <flatcc_builder_finalize_aligned_buffer>
   165b0:	str	r0, [fp, #-20]	; 0xffffffec
   165b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   165b8:	ldr	r3, [fp, #-376]	; 0xfffffe88
   165bc:	ldr	r2, [r3]
   165c0:	ldr	r3, [fp, #-376]	; 0xfffffe88
   165c4:	ldr	r3, [r3, #12]
   165c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   165cc:	bl	0 <flatcc_verify_table_as_root>
   165d0:	str	r0, [fp, #-16]
   165d4:	ldr	r3, [fp, #-16]
   165d8:	cmp	r3, #0
   165dc:	beq	1661c <test_json+0x2e8>
   165e0:	movw	r3, #0
   165e4:	movt	r3, #0
   165e8:	ldr	r4, [r3]
   165ec:	ldr	r0, [fp, #-16]
   165f0:	bl	0 <flatcc_verify_error_string>
   165f4:	mov	r3, r0
   165f8:	str	r3, [sp]
   165fc:	ldr	r3, [fp, #12]
   16600:	movw	r2, #0
   16604:	movt	r2, #0
   16608:	movw	r1, #0
   1660c:	movt	r1, #0
   16610:	mov	r0, r4
   16614:	bl	0 <fprintf>
   16618:	b	16730 <test_json+0x3fc>
   1661c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16620:	ldr	r3, [fp, #-376]	; 0xfffffe88
   16624:	ldr	r1, [r3]
   16628:	ldr	r3, [fp, #-376]	; 0xfffffe88
   1662c:	ldr	r3, [r3, #8]
   16630:	sub	r0, fp, #368	; 0x170
   16634:	str	r3, [sp]
   16638:	mov	r3, r1
   1663c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16640:	bl	0 <flatcc_json_printer_table_as_root>
   16644:	sub	r2, fp, #44	; 0x2c
   16648:	sub	r3, fp, #368	; 0x170
   1664c:	mov	r1, r2
   16650:	mov	r0, r3
   16654:	bl	0 <flatcc_json_printer_get_buffer>
   16658:	str	r0, [fp, #-28]	; 0xffffffe4
   1665c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16660:	cmp	r3, #0
   16664:	beq	16680 <test_json+0x34c>
   16668:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1666c:	ldr	r0, [fp, #-384]	; 0xfffffe80
   16670:	bl	0 <strcmp>
   16674:	mov	r3, r0
   16678:	cmp	r3, #0
   1667c:	beq	16704 <test_json+0x3d0>
   16680:	movw	r3, #0
   16684:	movt	r3, #0
   16688:	ldr	r3, [r3]
   1668c:	ldr	r2, [fp, #12]
   16690:	movw	r1, #0
   16694:	movt	r1, #0
   16698:	mov	r0, r3
   1669c:	bl	0 <fprintf>
   166a0:	movw	r3, #0
   166a4:	movt	r3, #0
   166a8:	ldr	r3, [r3]
   166ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   166b0:	movw	r1, #0
   166b4:	movt	r1, #0
   166b8:	mov	r0, r3
   166bc:	bl	0 <fprintf>
   166c0:	movw	r3, #0
   166c4:	movt	r3, #0
   166c8:	ldr	r3, [r3]
   166cc:	mov	r2, #10
   166d0:	mov	r1, #1
   166d4:	movw	r0, #0
   166d8:	movt	r0, #0
   166dc:	bl	0 <fwrite>
   166e0:	movw	r3, #0
   166e4:	movt	r3, #0
   166e8:	ldr	r3, [r3]
   166ec:	ldr	r2, [fp, #-384]	; 0xfffffe80
   166f0:	movw	r1, #0
   166f4:	movt	r1, #0
   166f8:	mov	r0, r3
   166fc:	bl	0 <fprintf>
   16700:	b	16730 <test_json+0x3fc>
   16704:	mov	r3, #0
   16708:	str	r3, [fp, #-16]
   1670c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16710:	bl	0 <flatcc_builder_aligned_free>
   16714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16718:	bl	0 <flatcc_builder_clear>
   1671c:	sub	r3, fp, #368	; 0x170
   16720:	mov	r0, r3
   16724:	bl	0 <flatcc_json_printer_clear>
   16728:	ldr	r3, [fp, #-16]
   1672c:	b	16768 <test_json+0x434>
   16730:	ldr	r3, [fp, #-20]	; 0xffffffec
   16734:	cmp	r3, #0
   16738:	beq	1675c <test_json+0x428>
   1673c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16740:	movw	r3, #0
   16744:	movt	r3, #0
   16748:	ldr	r3, [r3]
   1674c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16750:	movw	r0, #0
   16754:	movt	r0, #0
   16758:	bl	16148 <hexdump>
   1675c:	mvn	r3, #0
   16760:	str	r3, [fp, #-16]
   16764:	b	1670c <test_json+0x3d8>
   16768:	mov	r0, r3
   1676c:	sub	sp, fp, #8
   16770:	ldr	r4, [sp]
   16774:	ldr	fp, [sp, #4]
   16778:	add	sp, sp, #8
   1677c:	pop	{pc}		; (ldr pc, [sp], #4)

00016780 <edge_case_tests>:
   16780:	str	fp, [sp, #-8]!
   16784:	str	lr, [sp, #4]
   16788:	add	fp, sp, #4
   1678c:	sub	sp, sp, #24
   16790:	mov	r3, #0
   16794:	str	r3, [fp, #-8]
   16798:	movw	r3, #0
   1679c:	movt	r3, #0
   167a0:	str	r3, [fp, #-12]
   167a4:	mov	r3, #155	; 0x9b
   167a8:	str	r3, [sp, #8]
   167ac:	mov	r3, #0
   167b0:	str	r3, [sp, #4]
   167b4:	mov	r3, #0
   167b8:	str	r3, [sp]
   167bc:	mov	r3, #0
   167c0:	movw	r2, #0
   167c4:	movt	r2, #0
   167c8:	movw	r1, #0
   167cc:	movt	r1, #0
   167d0:	ldr	r0, [fp, #-12]
   167d4:	bl	16334 <test_json>
   167d8:	mov	r2, r0
   167dc:	ldr	r3, [fp, #-8]
   167e0:	orr	r3, r3, r2
   167e4:	str	r3, [fp, #-8]
   167e8:	mov	r3, #168	; 0xa8
   167ec:	str	r3, [sp, #8]
   167f0:	mov	r3, #0
   167f4:	str	r3, [sp, #4]
   167f8:	mov	r3, #2
   167fc:	str	r3, [sp]
   16800:	mov	r3, #0
   16804:	movw	r2, #0
   16808:	movt	r2, #0
   1680c:	movw	r1, #0
   16810:	movt	r1, #0
   16814:	ldr	r0, [fp, #-12]
   16818:	bl	16334 <test_json>
   1681c:	mov	r2, r0
   16820:	ldr	r3, [fp, #-8]
   16824:	orr	r3, r3, r2
   16828:	str	r3, [fp, #-8]
   1682c:	mov	r3, #172	; 0xac
   16830:	str	r3, [sp, #8]
   16834:	mov	r3, #2
   16838:	str	r3, [sp, #4]
   1683c:	mov	r3, #0
   16840:	str	r3, [sp]
   16844:	mov	r3, #0
   16848:	movw	r2, #0
   1684c:	movt	r2, #0
   16850:	movw	r1, #0
   16854:	movt	r1, #0
   16858:	ldr	r0, [fp, #-12]
   1685c:	bl	16334 <test_json>
   16860:	mov	r2, r0
   16864:	ldr	r3, [fp, #-8]
   16868:	orr	r3, r3, r2
   1686c:	str	r3, [fp, #-8]
   16870:	mov	r3, #176	; 0xb0
   16874:	str	r3, [sp, #8]
   16878:	mov	r3, #4
   1687c:	str	r3, [sp, #4]
   16880:	mov	r3, #2
   16884:	str	r3, [sp]
   16888:	mov	r3, #0
   1688c:	movw	r2, #0
   16890:	movt	r2, #0
   16894:	movw	r1, #0
   16898:	movt	r1, #0
   1689c:	ldr	r0, [fp, #-12]
   168a0:	bl	16334 <test_json>
   168a4:	mov	r2, r0
   168a8:	ldr	r3, [fp, #-8]
   168ac:	orr	r3, r3, r2
   168b0:	str	r3, [fp, #-8]
   168b4:	mov	r3, #180	; 0xb4
   168b8:	str	r3, [sp, #8]
   168bc:	mov	r3, #8
   168c0:	str	r3, [sp, #4]
   168c4:	mov	r3, #0
   168c8:	str	r3, [sp]
   168cc:	mov	r3, #0
   168d0:	movw	r2, #0
   168d4:	movt	r2, #0
   168d8:	movw	r1, #0
   168dc:	movt	r1, #0
   168e0:	ldr	r0, [fp, #-12]
   168e4:	bl	16334 <test_json>
   168e8:	mov	r2, r0
   168ec:	ldr	r3, [fp, #-8]
   168f0:	orr	r3, r3, r2
   168f4:	str	r3, [fp, #-8]
   168f8:	mov	r3, #195	; 0xc3
   168fc:	str	r3, [sp, #8]
   16900:	mov	r3, #0
   16904:	str	r3, [sp, #4]
   16908:	mov	r3, #2
   1690c:	str	r3, [sp]
   16910:	mov	r3, #0
   16914:	movw	r2, #0
   16918:	movt	r2, #0
   1691c:	movw	r1, #0
   16920:	movt	r1, #0
   16924:	ldr	r0, [fp, #-12]
   16928:	bl	16334 <test_json>
   1692c:	mov	r2, r0
   16930:	ldr	r3, [fp, #-8]
   16934:	orr	r3, r3, r2
   16938:	str	r3, [fp, #-8]
   1693c:	mov	r3, #199	; 0xc7
   16940:	str	r3, [sp, #8]
   16944:	mov	r3, #0
   16948:	str	r3, [sp, #4]
   1694c:	mov	r3, #1
   16950:	str	r3, [sp]
   16954:	mov	r3, #0
   16958:	movw	r2, #0
   1695c:	movt	r2, #0
   16960:	movw	r1, #0
   16964:	movt	r1, #0
   16968:	ldr	r0, [fp, #-12]
   1696c:	bl	16334 <test_json>
   16970:	mov	r2, r0
   16974:	ldr	r3, [fp, #-8]
   16978:	orr	r3, r3, r2
   1697c:	str	r3, [fp, #-8]
   16980:	mov	r3, #203	; 0xcb
   16984:	str	r3, [sp, #8]
   16988:	mov	r3, #1
   1698c:	str	r3, [sp, #4]
   16990:	mov	r3, #1
   16994:	str	r3, [sp]
   16998:	mov	r3, #0
   1699c:	movw	r2, #0
   169a0:	movt	r2, #0
   169a4:	movw	r1, #0
   169a8:	movt	r1, #0
   169ac:	ldr	r0, [fp, #-12]
   169b0:	bl	16334 <test_json>
   169b4:	mov	r2, r0
   169b8:	ldr	r3, [fp, #-8]
   169bc:	orr	r3, r3, r2
   169c0:	str	r3, [fp, #-8]
   169c4:	mov	r3, #209	; 0xd1
   169c8:	str	r3, [sp, #8]
   169cc:	mov	r3, #0
   169d0:	str	r3, [sp, #4]
   169d4:	mov	r3, #1
   169d8:	str	r3, [sp]
   169dc:	mov	r3, #0
   169e0:	movw	r2, #0
   169e4:	movt	r2, #0
   169e8:	movw	r1, #0
   169ec:	movt	r1, #0
   169f0:	ldr	r0, [fp, #-12]
   169f4:	bl	16334 <test_json>
   169f8:	mov	r2, r0
   169fc:	ldr	r3, [fp, #-8]
   16a00:	orr	r3, r3, r2
   16a04:	str	r3, [fp, #-8]
   16a08:	mov	r3, #217	; 0xd9
   16a0c:	str	r3, [sp, #8]
   16a10:	mov	r3, #0
   16a14:	str	r3, [sp, #4]
   16a18:	mov	r3, #2
   16a1c:	str	r3, [sp]
   16a20:	mov	r3, #0
   16a24:	movw	r2, #0
   16a28:	movt	r2, #0
   16a2c:	movw	r1, #0
   16a30:	movt	r1, #0
   16a34:	ldr	r0, [fp, #-12]
   16a38:	bl	16334 <test_json>
   16a3c:	mov	r2, r0
   16a40:	ldr	r3, [fp, #-8]
   16a44:	orr	r3, r3, r2
   16a48:	str	r3, [fp, #-8]
   16a4c:	mov	r3, #221	; 0xdd
   16a50:	str	r3, [sp, #8]
   16a54:	mov	r3, #2
   16a58:	str	r3, [sp, #4]
   16a5c:	mov	r3, #0
   16a60:	str	r3, [sp]
   16a64:	mov	r3, #0
   16a68:	movw	r2, #0
   16a6c:	movt	r2, #0
   16a70:	movw	r1, #0
   16a74:	movt	r1, #0
   16a78:	ldr	r0, [fp, #-12]
   16a7c:	bl	16334 <test_json>
   16a80:	mov	r2, r0
   16a84:	ldr	r3, [fp, #-8]
   16a88:	orr	r3, r3, r2
   16a8c:	str	r3, [fp, #-8]
   16a90:	mov	r3, #225	; 0xe1
   16a94:	str	r3, [sp, #8]
   16a98:	mov	r3, #4
   16a9c:	str	r3, [sp, #4]
   16aa0:	mov	r3, #2
   16aa4:	str	r3, [sp]
   16aa8:	mov	r3, #0
   16aac:	movw	r2, #0
   16ab0:	movt	r2, #0
   16ab4:	movw	r1, #0
   16ab8:	movt	r1, #0
   16abc:	ldr	r0, [fp, #-12]
   16ac0:	bl	16334 <test_json>
   16ac4:	mov	r2, r0
   16ac8:	ldr	r3, [fp, #-8]
   16acc:	orr	r3, r3, r2
   16ad0:	str	r3, [fp, #-8]
   16ad4:	mov	r3, #229	; 0xe5
   16ad8:	str	r3, [sp, #8]
   16adc:	mov	r3, #8
   16ae0:	str	r3, [sp, #4]
   16ae4:	mov	r3, #0
   16ae8:	str	r3, [sp]
   16aec:	mov	r3, #0
   16af0:	movw	r2, #0
   16af4:	movt	r2, #0
   16af8:	movw	r1, #0
   16afc:	movt	r1, #0
   16b00:	ldr	r0, [fp, #-12]
   16b04:	bl	16334 <test_json>
   16b08:	mov	r2, r0
   16b0c:	ldr	r3, [fp, #-8]
   16b10:	orr	r3, r3, r2
   16b14:	str	r3, [fp, #-8]
   16b18:	mov	r3, #233	; 0xe9
   16b1c:	str	r3, [sp, #8]
   16b20:	mov	r3, #0
   16b24:	str	r3, [sp, #4]
   16b28:	mov	r3, #2
   16b2c:	str	r3, [sp]
   16b30:	mov	r3, #0
   16b34:	movw	r2, #0
   16b38:	movt	r2, #0
   16b3c:	movw	r1, #0
   16b40:	movt	r1, #0
   16b44:	ldr	r0, [fp, #-12]
   16b48:	bl	16334 <test_json>
   16b4c:	mov	r2, r0
   16b50:	ldr	r3, [fp, #-8]
   16b54:	orr	r3, r3, r2
   16b58:	str	r3, [fp, #-8]
   16b5c:	mov	r3, #237	; 0xed
   16b60:	str	r3, [sp, #8]
   16b64:	mov	r3, #0
   16b68:	str	r3, [sp, #4]
   16b6c:	mov	r3, #1
   16b70:	str	r3, [sp]
   16b74:	mov	r3, #0
   16b78:	movw	r2, #0
   16b7c:	movt	r2, #0
   16b80:	movw	r1, #0
   16b84:	movt	r1, #0
   16b88:	ldr	r0, [fp, #-12]
   16b8c:	bl	16334 <test_json>
   16b90:	mov	r2, r0
   16b94:	ldr	r3, [fp, #-8]
   16b98:	orr	r3, r3, r2
   16b9c:	str	r3, [fp, #-8]
   16ba0:	mov	r3, #241	; 0xf1
   16ba4:	str	r3, [sp, #8]
   16ba8:	mov	r3, #1
   16bac:	str	r3, [sp, #4]
   16bb0:	mov	r3, #1
   16bb4:	str	r3, [sp]
   16bb8:	mov	r3, #0
   16bbc:	movw	r2, #0
   16bc0:	movt	r2, #0
   16bc4:	movw	r1, #0
   16bc8:	movt	r1, #0
   16bcc:	ldr	r0, [fp, #-12]
   16bd0:	bl	16334 <test_json>
   16bd4:	mov	r2, r0
   16bd8:	ldr	r3, [fp, #-8]
   16bdc:	orr	r3, r3, r2
   16be0:	str	r3, [fp, #-8]
   16be4:	mov	r3, #247	; 0xf7
   16be8:	str	r3, [sp, #8]
   16bec:	mov	r3, #0
   16bf0:	str	r3, [sp, #4]
   16bf4:	mov	r3, #1
   16bf8:	str	r3, [sp]
   16bfc:	mov	r3, #0
   16c00:	movw	r2, #0
   16c04:	movt	r2, #0
   16c08:	movw	r1, #0
   16c0c:	movt	r1, #0
   16c10:	ldr	r0, [fp, #-12]
   16c14:	bl	16334 <test_json>
   16c18:	mov	r2, r0
   16c1c:	ldr	r3, [fp, #-8]
   16c20:	orr	r3, r3, r2
   16c24:	str	r3, [fp, #-8]
   16c28:	ldr	r3, [fp, #-8]
   16c2c:	mov	r0, r3
   16c30:	sub	sp, fp, #4
   16c34:	ldr	fp, [sp]
   16c38:	add	sp, sp, #4
   16c3c:	pop	{pc}		; (ldr pc, [sp], #4)

00016c40 <error_case_tests>:
   16c40:	str	fp, [sp, #-8]!
   16c44:	str	lr, [sp, #4]
   16c48:	add	fp, sp, #4
   16c4c:	sub	sp, sp, #24
   16c50:	mov	r3, #0
   16c54:	str	r3, [fp, #-8]
   16c58:	movw	r3, #0
   16c5c:	movt	r3, #0
   16c60:	str	r3, [fp, #-12]
   16c64:	movw	r3, #285	; 0x11d
   16c68:	str	r3, [sp, #8]
   16c6c:	mov	r3, #0
   16c70:	str	r3, [sp, #4]
   16c74:	mov	r3, #0
   16c78:	str	r3, [sp]
   16c7c:	mov	r3, #13
   16c80:	mov	r2, #0
   16c84:	movw	r1, #0
   16c88:	movt	r1, #0
   16c8c:	ldr	r0, [fp, #-12]
   16c90:	bl	16334 <test_json>
   16c94:	mov	r2, r0
   16c98:	ldr	r3, [fp, #-8]
   16c9c:	orr	r3, r3, r2
   16ca0:	str	r3, [fp, #-8]
   16ca4:	movw	r3, #287	; 0x11f
   16ca8:	str	r3, [sp, #8]
   16cac:	mov	r3, #0
   16cb0:	str	r3, [sp, #4]
   16cb4:	mov	r3, #0
   16cb8:	str	r3, [sp]
   16cbc:	mov	r3, #13
   16cc0:	mov	r2, #0
   16cc4:	movw	r1, #0
   16cc8:	movt	r1, #0
   16ccc:	ldr	r0, [fp, #-12]
   16cd0:	bl	16334 <test_json>
   16cd4:	mov	r2, r0
   16cd8:	ldr	r3, [fp, #-8]
   16cdc:	orr	r3, r3, r2
   16ce0:	str	r3, [fp, #-8]
   16ce4:	movw	r3, #289	; 0x121
   16ce8:	str	r3, [sp, #8]
   16cec:	mov	r3, #0
   16cf0:	str	r3, [sp, #4]
   16cf4:	mov	r3, #0
   16cf8:	str	r3, [sp]
   16cfc:	mov	r3, #13
   16d00:	mov	r2, #0
   16d04:	movw	r1, #0
   16d08:	movt	r1, #0
   16d0c:	ldr	r0, [fp, #-12]
   16d10:	bl	16334 <test_json>
   16d14:	mov	r2, r0
   16d18:	ldr	r3, [fp, #-8]
   16d1c:	orr	r3, r3, r2
   16d20:	str	r3, [fp, #-8]
   16d24:	movw	r3, #291	; 0x123
   16d28:	str	r3, [sp, #8]
   16d2c:	mov	r3, #0
   16d30:	str	r3, [sp, #4]
   16d34:	mov	r3, #0
   16d38:	str	r3, [sp]
   16d3c:	mov	r3, #13
   16d40:	mov	r2, #0
   16d44:	movw	r1, #0
   16d48:	movt	r1, #0
   16d4c:	ldr	r0, [fp, #-12]
   16d50:	bl	16334 <test_json>
   16d54:	mov	r2, r0
   16d58:	ldr	r3, [fp, #-8]
   16d5c:	orr	r3, r3, r2
   16d60:	str	r3, [fp, #-8]
   16d64:	movw	r3, #293	; 0x125
   16d68:	str	r3, [sp, #8]
   16d6c:	mov	r3, #0
   16d70:	str	r3, [sp, #4]
   16d74:	mov	r3, #0
   16d78:	str	r3, [sp]
   16d7c:	mov	r3, #13
   16d80:	mov	r2, #0
   16d84:	movw	r1, #0
   16d88:	movt	r1, #0
   16d8c:	ldr	r0, [fp, #-12]
   16d90:	bl	16334 <test_json>
   16d94:	mov	r2, r0
   16d98:	ldr	r3, [fp, #-8]
   16d9c:	orr	r3, r3, r2
   16da0:	str	r3, [fp, #-8]
   16da4:	mov	r3, #296	; 0x128
   16da8:	str	r3, [sp, #8]
   16dac:	mov	r3, #0
   16db0:	str	r3, [sp, #4]
   16db4:	mov	r3, #0
   16db8:	str	r3, [sp]
   16dbc:	mov	r3, #13
   16dc0:	mov	r2, #0
   16dc4:	movw	r1, #0
   16dc8:	movt	r1, #0
   16dcc:	ldr	r0, [fp, #-12]
   16dd0:	bl	16334 <test_json>
   16dd4:	mov	r2, r0
   16dd8:	ldr	r3, [fp, #-8]
   16ddc:	orr	r3, r3, r2
   16de0:	str	r3, [fp, #-8]
   16de4:	movw	r3, #299	; 0x12b
   16de8:	str	r3, [sp, #8]
   16dec:	mov	r3, #0
   16df0:	str	r3, [sp, #4]
   16df4:	mov	r3, #0
   16df8:	str	r3, [sp]
   16dfc:	mov	r3, #13
   16e00:	mov	r2, #0
   16e04:	movw	r1, #0
   16e08:	movt	r1, #0
   16e0c:	ldr	r0, [fp, #-12]
   16e10:	bl	16334 <test_json>
   16e14:	mov	r2, r0
   16e18:	ldr	r3, [fp, #-8]
   16e1c:	orr	r3, r3, r2
   16e20:	str	r3, [fp, #-8]
   16e24:	movw	r3, #303	; 0x12f
   16e28:	str	r3, [sp, #8]
   16e2c:	mov	r3, #0
   16e30:	str	r3, [sp, #4]
   16e34:	mov	r3, #0
   16e38:	str	r3, [sp]
   16e3c:	mov	r3, #13
   16e40:	mov	r2, #0
   16e44:	movw	r1, #0
   16e48:	movt	r1, #0
   16e4c:	ldr	r0, [fp, #-12]
   16e50:	bl	16334 <test_json>
   16e54:	mov	r2, r0
   16e58:	ldr	r3, [fp, #-8]
   16e5c:	orr	r3, r3, r2
   16e60:	str	r3, [fp, #-8]
   16e64:	movw	r3, #307	; 0x133
   16e68:	str	r3, [sp, #8]
   16e6c:	mov	r3, #0
   16e70:	str	r3, [sp, #4]
   16e74:	mov	r3, #0
   16e78:	str	r3, [sp]
   16e7c:	mov	r3, #13
   16e80:	mov	r2, #0
   16e84:	movw	r1, #0
   16e88:	movt	r1, #0
   16e8c:	ldr	r0, [fp, #-12]
   16e90:	bl	16334 <test_json>
   16e94:	mov	r2, r0
   16e98:	ldr	r3, [fp, #-8]
   16e9c:	orr	r3, r3, r2
   16ea0:	str	r3, [fp, #-8]
   16ea4:	movw	r3, #322	; 0x142
   16ea8:	str	r3, [sp, #8]
   16eac:	mov	r3, #0
   16eb0:	str	r3, [sp, #4]
   16eb4:	mov	r3, #0
   16eb8:	str	r3, [sp]
   16ebc:	mov	r3, #13
   16ec0:	mov	r2, #0
   16ec4:	movw	r1, #0
   16ec8:	movt	r1, #0
   16ecc:	ldr	r0, [fp, #-12]
   16ed0:	bl	16334 <test_json>
   16ed4:	mov	r2, r0
   16ed8:	ldr	r3, [fp, #-8]
   16edc:	orr	r3, r3, r2
   16ee0:	str	r3, [fp, #-8]
   16ee4:	mov	r3, #324	; 0x144
   16ee8:	str	r3, [sp, #8]
   16eec:	mov	r3, #0
   16ef0:	str	r3, [sp, #4]
   16ef4:	mov	r3, #0
   16ef8:	str	r3, [sp]
   16efc:	mov	r3, #13
   16f00:	mov	r2, #0
   16f04:	movw	r1, #0
   16f08:	movt	r1, #0
   16f0c:	ldr	r0, [fp, #-12]
   16f10:	bl	16334 <test_json>
   16f14:	mov	r2, r0
   16f18:	ldr	r3, [fp, #-8]
   16f1c:	orr	r3, r3, r2
   16f20:	str	r3, [fp, #-8]
   16f24:	movw	r3, #326	; 0x146
   16f28:	str	r3, [sp, #8]
   16f2c:	mov	r3, #0
   16f30:	str	r3, [sp, #4]
   16f34:	mov	r3, #0
   16f38:	str	r3, [sp]
   16f3c:	mov	r3, #13
   16f40:	mov	r2, #0
   16f44:	movw	r1, #0
   16f48:	movt	r1, #0
   16f4c:	ldr	r0, [fp, #-12]
   16f50:	bl	16334 <test_json>
   16f54:	mov	r2, r0
   16f58:	ldr	r3, [fp, #-8]
   16f5c:	orr	r3, r3, r2
   16f60:	str	r3, [fp, #-8]
   16f64:	mov	r3, #328	; 0x148
   16f68:	str	r3, [sp, #8]
   16f6c:	mov	r3, #0
   16f70:	str	r3, [sp, #4]
   16f74:	mov	r3, #0
   16f78:	str	r3, [sp]
   16f7c:	mov	r3, #13
   16f80:	mov	r2, #0
   16f84:	movw	r1, #0
   16f88:	movt	r1, #0
   16f8c:	ldr	r0, [fp, #-12]
   16f90:	bl	16334 <test_json>
   16f94:	mov	r2, r0
   16f98:	ldr	r3, [fp, #-8]
   16f9c:	orr	r3, r3, r2
   16fa0:	str	r3, [fp, #-8]
   16fa4:	movw	r3, #330	; 0x14a
   16fa8:	str	r3, [sp, #8]
   16fac:	mov	r3, #0
   16fb0:	str	r3, [sp, #4]
   16fb4:	mov	r3, #0
   16fb8:	str	r3, [sp]
   16fbc:	mov	r3, #13
   16fc0:	mov	r2, #0
   16fc4:	movw	r1, #0
   16fc8:	movt	r1, #0
   16fcc:	ldr	r0, [fp, #-12]
   16fd0:	bl	16334 <test_json>
   16fd4:	mov	r2, r0
   16fd8:	ldr	r3, [fp, #-8]
   16fdc:	orr	r3, r3, r2
   16fe0:	str	r3, [fp, #-8]
   16fe4:	movw	r3, #333	; 0x14d
   16fe8:	str	r3, [sp, #8]
   16fec:	mov	r3, #0
   16ff0:	str	r3, [sp, #4]
   16ff4:	mov	r3, #0
   16ff8:	str	r3, [sp]
   16ffc:	mov	r3, #13
   17000:	mov	r2, #0
   17004:	movw	r1, #0
   17008:	movt	r1, #0
   1700c:	ldr	r0, [fp, #-12]
   17010:	bl	16334 <test_json>
   17014:	mov	r2, r0
   17018:	ldr	r3, [fp, #-8]
   1701c:	orr	r3, r3, r2
   17020:	str	r3, [fp, #-8]
   17024:	mov	r3, #336	; 0x150
   17028:	str	r3, [sp, #8]
   1702c:	mov	r3, #0
   17030:	str	r3, [sp, #4]
   17034:	mov	r3, #0
   17038:	str	r3, [sp]
   1703c:	mov	r3, #13
   17040:	mov	r2, #0
   17044:	movw	r1, #0
   17048:	movt	r1, #0
   1704c:	ldr	r0, [fp, #-12]
   17050:	bl	16334 <test_json>
   17054:	mov	r2, r0
   17058:	ldr	r3, [fp, #-8]
   1705c:	orr	r3, r3, r2
   17060:	str	r3, [fp, #-8]
   17064:	mov	r3, #340	; 0x154
   17068:	str	r3, [sp, #8]
   1706c:	mov	r3, #0
   17070:	str	r3, [sp, #4]
   17074:	mov	r3, #0
   17078:	str	r3, [sp]
   1707c:	mov	r3, #13
   17080:	mov	r2, #0
   17084:	movw	r1, #0
   17088:	movt	r1, #0
   1708c:	ldr	r0, [fp, #-12]
   17090:	bl	16334 <test_json>
   17094:	mov	r2, r0
   17098:	ldr	r3, [fp, #-8]
   1709c:	orr	r3, r3, r2
   170a0:	str	r3, [fp, #-8]
   170a4:	mov	r3, #344	; 0x158
   170a8:	str	r3, [sp, #8]
   170ac:	mov	r3, #0
   170b0:	str	r3, [sp, #4]
   170b4:	mov	r3, #0
   170b8:	str	r3, [sp]
   170bc:	mov	r3, #13
   170c0:	mov	r2, #0
   170c4:	movw	r1, #0
   170c8:	movt	r1, #0
   170cc:	ldr	r0, [fp, #-12]
   170d0:	bl	16334 <test_json>
   170d4:	mov	r2, r0
   170d8:	ldr	r3, [fp, #-8]
   170dc:	orr	r3, r3, r2
   170e0:	str	r3, [fp, #-8]
   170e4:	ldr	r3, [fp, #-8]
   170e8:	mov	r0, r3
   170ec:	sub	sp, fp, #4
   170f0:	ldr	fp, [sp]
   170f4:	add	sp, sp, #4
   170f8:	pop	{pc}		; (ldr pc, [sp], #4)

000170fc <base64_tests>:
   170fc:	str	fp, [sp, #-8]!
   17100:	str	lr, [sp, #4]
   17104:	add	fp, sp, #4
   17108:	sub	sp, sp, #24
   1710c:	mov	r3, #0
   17110:	str	r3, [fp, #-8]
   17114:	movw	r3, #0
   17118:	movt	r3, #0
   1711c:	str	r3, [fp, #-12]
   17120:	movw	r3, #369	; 0x171
   17124:	str	r3, [sp, #8]
   17128:	mov	r3, #0
   1712c:	str	r3, [sp, #4]
   17130:	mov	r3, #0
   17134:	str	r3, [sp]
   17138:	mov	r3, #0
   1713c:	movw	r2, #0
   17140:	movt	r2, #0
   17144:	movw	r1, #0
   17148:	movt	r1, #0
   1714c:	ldr	r0, [fp, #-12]
   17150:	bl	16334 <test_json>
   17154:	mov	r2, r0
   17158:	ldr	r3, [fp, #-8]
   1715c:	orr	r3, r3, r2
   17160:	str	r3, [fp, #-8]
   17164:	mov	r3, #372	; 0x174
   17168:	str	r3, [sp, #8]
   1716c:	mov	r3, #0
   17170:	str	r3, [sp, #4]
   17174:	mov	r3, #0
   17178:	str	r3, [sp]
   1717c:	mov	r3, #0
   17180:	movw	r2, #0
   17184:	movt	r2, #0
   17188:	movw	r1, #0
   1718c:	movt	r1, #0
   17190:	ldr	r0, [fp, #-12]
   17194:	bl	16334 <test_json>
   17198:	mov	r2, r0
   1719c:	ldr	r3, [fp, #-8]
   171a0:	orr	r3, r3, r2
   171a4:	str	r3, [fp, #-8]
   171a8:	mov	r3, #376	; 0x178
   171ac:	str	r3, [sp, #8]
   171b0:	mov	r3, #0
   171b4:	str	r3, [sp, #4]
   171b8:	mov	r3, #0
   171bc:	str	r3, [sp]
   171c0:	mov	r3, #0
   171c4:	movw	r2, #0
   171c8:	movt	r2, #0
   171cc:	movw	r1, #0
   171d0:	movt	r1, #0
   171d4:	ldr	r0, [fp, #-12]
   171d8:	bl	16334 <test_json>
   171dc:	mov	r2, r0
   171e0:	ldr	r3, [fp, #-8]
   171e4:	orr	r3, r3, r2
   171e8:	str	r3, [fp, #-8]
   171ec:	movw	r3, #379	; 0x17b
   171f0:	str	r3, [sp, #8]
   171f4:	mov	r3, #0
   171f8:	str	r3, [sp, #4]
   171fc:	mov	r3, #0
   17200:	str	r3, [sp]
   17204:	mov	r3, #0
   17208:	movw	r2, #0
   1720c:	movt	r2, #0
   17210:	movw	r1, #0
   17214:	movt	r1, #0
   17218:	ldr	r0, [fp, #-12]
   1721c:	bl	16334 <test_json>
   17220:	mov	r2, r0
   17224:	ldr	r3, [fp, #-8]
   17228:	orr	r3, r3, r2
   1722c:	str	r3, [fp, #-8]
   17230:	movw	r3, #382	; 0x17e
   17234:	str	r3, [sp, #8]
   17238:	mov	r3, #0
   1723c:	str	r3, [sp, #4]
   17240:	mov	r3, #0
   17244:	str	r3, [sp]
   17248:	mov	r3, #0
   1724c:	movw	r2, #0
   17250:	movt	r2, #0
   17254:	movw	r1, #0
   17258:	movt	r1, #0
   1725c:	ldr	r0, [fp, #-12]
   17260:	bl	16334 <test_json>
   17264:	mov	r2, r0
   17268:	ldr	r3, [fp, #-8]
   1726c:	orr	r3, r3, r2
   17270:	str	r3, [fp, #-8]
   17274:	movw	r3, #385	; 0x181
   17278:	str	r3, [sp, #8]
   1727c:	mov	r3, #0
   17280:	str	r3, [sp, #4]
   17284:	mov	r3, #0
   17288:	str	r3, [sp]
   1728c:	mov	r3, #0
   17290:	movw	r2, #0
   17294:	movt	r2, #0
   17298:	movw	r1, #0
   1729c:	movt	r1, #0
   172a0:	ldr	r0, [fp, #-12]
   172a4:	bl	16334 <test_json>
   172a8:	mov	r2, r0
   172ac:	ldr	r3, [fp, #-8]
   172b0:	orr	r3, r3, r2
   172b4:	str	r3, [fp, #-8]
   172b8:	mov	r3, #388	; 0x184
   172bc:	str	r3, [sp, #8]
   172c0:	mov	r3, #0
   172c4:	str	r3, [sp, #4]
   172c8:	mov	r3, #0
   172cc:	str	r3, [sp]
   172d0:	mov	r3, #31
   172d4:	mov	r2, #0
   172d8:	movw	r1, #0
   172dc:	movt	r1, #0
   172e0:	ldr	r0, [fp, #-12]
   172e4:	bl	16334 <test_json>
   172e8:	mov	r2, r0
   172ec:	ldr	r3, [fp, #-8]
   172f0:	orr	r3, r3, r2
   172f4:	str	r3, [fp, #-8]
   172f8:	movw	r3, #391	; 0x187
   172fc:	str	r3, [sp, #8]
   17300:	mov	r3, #0
   17304:	str	r3, [sp, #4]
   17308:	mov	r3, #0
   1730c:	str	r3, [sp]
   17310:	mov	r3, #32
   17314:	mov	r2, #0
   17318:	movw	r1, #0
   1731c:	movt	r1, #0
   17320:	ldr	r0, [fp, #-12]
   17324:	bl	16334 <test_json>
   17328:	mov	r2, r0
   1732c:	ldr	r3, [fp, #-8]
   17330:	orr	r3, r3, r2
   17334:	str	r3, [fp, #-8]
   17338:	movw	r3, #406	; 0x196
   1733c:	str	r3, [sp, #8]
   17340:	mov	r3, #0
   17344:	str	r3, [sp, #4]
   17348:	mov	r3, #0
   1734c:	str	r3, [sp]
   17350:	mov	r3, #0
   17354:	movw	r2, #0
   17358:	movt	r2, #0
   1735c:	movw	r1, #0
   17360:	movt	r1, #0
   17364:	ldr	r0, [fp, #-12]
   17368:	bl	16334 <test_json>
   1736c:	mov	r2, r0
   17370:	ldr	r3, [fp, #-8]
   17374:	orr	r3, r3, r2
   17378:	str	r3, [fp, #-8]
   1737c:	movw	r3, #419	; 0x1a3
   17380:	str	r3, [sp, #8]
   17384:	mov	r3, #0
   17388:	str	r3, [sp, #4]
   1738c:	mov	r3, #0
   17390:	str	r3, [sp]
   17394:	mov	r3, #0
   17398:	movw	r2, #0
   1739c:	movt	r2, #0
   173a0:	movw	r1, #0
   173a4:	movt	r1, #0
   173a8:	ldr	r0, [fp, #-12]
   173ac:	bl	16334 <test_json>
   173b0:	mov	r2, r0
   173b4:	ldr	r3, [fp, #-8]
   173b8:	orr	r3, r3, r2
   173bc:	str	r3, [fp, #-8]
   173c0:	ldr	r3, [fp, #-8]
   173c4:	mov	r0, r3
   173c8:	sub	sp, fp, #4
   173cc:	ldr	fp, [sp]
   173d0:	add	sp, sp, #4
   173d4:	pop	{pc}		; (ldr pc, [sp], #4)

000173d8 <mixed_type_union_tests>:
   173d8:	str	fp, [sp, #-8]!
   173dc:	str	lr, [sp, #4]
   173e0:	add	fp, sp, #4
   173e4:	sub	sp, sp, #24
   173e8:	mov	r3, #0
   173ec:	str	r3, [fp, #-8]
   173f0:	movw	r3, #0
   173f4:	movt	r3, #0
   173f8:	str	r3, [fp, #-12]
   173fc:	mov	r3, #432	; 0x1b0
   17400:	str	r3, [sp, #8]
   17404:	mov	r3, #0
   17408:	str	r3, [sp, #4]
   1740c:	mov	r3, #0
   17410:	str	r3, [sp]
   17414:	mov	r3, #0
   17418:	movw	r2, #0
   1741c:	movt	r2, #0
   17420:	movw	r1, #0
   17424:	movt	r1, #0
   17428:	ldr	r0, [fp, #-12]
   1742c:	bl	16334 <test_json>
   17430:	mov	r2, r0
   17434:	ldr	r3, [fp, #-8]
   17438:	orr	r3, r3, r2
   1743c:	str	r3, [fp, #-8]
   17440:	movw	r3, #437	; 0x1b5
   17444:	str	r3, [sp, #8]
   17448:	mov	r3, #0
   1744c:	str	r3, [sp, #4]
   17450:	mov	r3, #0
   17454:	str	r3, [sp]
   17458:	mov	r3, #0
   1745c:	movw	r2, #0
   17460:	movt	r2, #0
   17464:	movw	r1, #0
   17468:	movt	r1, #0
   1746c:	ldr	r0, [fp, #-12]
   17470:	bl	16334 <test_json>
   17474:	mov	r2, r0
   17478:	ldr	r3, [fp, #-8]
   1747c:	orr	r3, r3, r2
   17480:	str	r3, [fp, #-8]
   17484:	movw	r3, #442	; 0x1ba
   17488:	str	r3, [sp, #8]
   1748c:	mov	r3, #0
   17490:	str	r3, [sp, #4]
   17494:	mov	r3, #0
   17498:	str	r3, [sp]
   1749c:	mov	r3, #0
   174a0:	movw	r2, #0
   174a4:	movt	r2, #0
   174a8:	movw	r1, #0
   174ac:	movt	r1, #0
   174b0:	ldr	r0, [fp, #-12]
   174b4:	bl	16334 <test_json>
   174b8:	mov	r2, r0
   174bc:	ldr	r3, [fp, #-8]
   174c0:	orr	r3, r3, r2
   174c4:	str	r3, [fp, #-8]
   174c8:	movw	r3, #449	; 0x1c1
   174cc:	str	r3, [sp, #8]
   174d0:	mov	r3, #0
   174d4:	str	r3, [sp, #4]
   174d8:	mov	r3, #0
   174dc:	str	r3, [sp]
   174e0:	mov	r3, #0
   174e4:	movw	r2, #0
   174e8:	movt	r2, #0
   174ec:	movw	r1, #0
   174f0:	movt	r1, #0
   174f4:	ldr	r0, [fp, #-12]
   174f8:	bl	16334 <test_json>
   174fc:	mov	r2, r0
   17500:	ldr	r3, [fp, #-8]
   17504:	orr	r3, r3, r2
   17508:	str	r3, [fp, #-8]
   1750c:	movw	r3, #458	; 0x1ca
   17510:	str	r3, [sp, #8]
   17514:	mov	r3, #0
   17518:	str	r3, [sp, #4]
   1751c:	mov	r3, #0
   17520:	str	r3, [sp]
   17524:	mov	r3, #0
   17528:	movw	r2, #0
   1752c:	movt	r2, #0
   17530:	movw	r1, #0
   17534:	movt	r1, #0
   17538:	ldr	r0, [fp, #-12]
   1753c:	bl	16334 <test_json>
   17540:	mov	r2, r0
   17544:	ldr	r3, [fp, #-8]
   17548:	orr	r3, r3, r2
   1754c:	str	r3, [fp, #-8]
   17550:	movw	r3, #469	; 0x1d5
   17554:	str	r3, [sp, #8]
   17558:	mov	r3, #0
   1755c:	str	r3, [sp, #4]
   17560:	mov	r3, #0
   17564:	str	r3, [sp]
   17568:	mov	r3, #0
   1756c:	movw	r2, #0
   17570:	movt	r2, #0
   17574:	movw	r1, #0
   17578:	movt	r1, #0
   1757c:	ldr	r0, [fp, #-12]
   17580:	bl	16334 <test_json>
   17584:	mov	r2, r0
   17588:	ldr	r3, [fp, #-8]
   1758c:	orr	r3, r3, r2
   17590:	str	r3, [fp, #-8]
   17594:	movw	r3, #474	; 0x1da
   17598:	str	r3, [sp, #8]
   1759c:	mov	r3, #0
   175a0:	str	r3, [sp, #4]
   175a4:	mov	r3, #0
   175a8:	str	r3, [sp]
   175ac:	mov	r3, #0
   175b0:	movw	r2, #0
   175b4:	movt	r2, #0
   175b8:	movw	r1, #0
   175bc:	movt	r1, #0
   175c0:	ldr	r0, [fp, #-12]
   175c4:	bl	16334 <test_json>
   175c8:	mov	r2, r0
   175cc:	ldr	r3, [fp, #-8]
   175d0:	orr	r3, r3, r2
   175d4:	str	r3, [fp, #-8]
   175d8:	ldr	r3, [fp, #-8]
   175dc:	mov	r0, r3
   175e0:	sub	sp, fp, #4
   175e4:	ldr	fp, [sp]
   175e8:	add	sp, sp, #4
   175ec:	pop	{pc}		; (ldr pc, [sp], #4)

000175f0 <union_vector_tests>:
   175f0:	str	fp, [sp, #-8]!
   175f4:	str	lr, [sp, #4]
   175f8:	add	fp, sp, #4
   175fc:	sub	sp, sp, #24
   17600:	mov	r3, #0
   17604:	str	r3, [fp, #-8]
   17608:	movw	r3, #0
   1760c:	movt	r3, #0
   17610:	str	r3, [fp, #-12]
   17614:	movw	r3, #485	; 0x1e5
   17618:	str	r3, [sp, #8]
   1761c:	mov	r3, #0
   17620:	str	r3, [sp, #4]
   17624:	mov	r3, #0
   17628:	str	r3, [sp]
   1762c:	mov	r3, #0
   17630:	movw	r2, #0
   17634:	movt	r2, #0
   17638:	movw	r1, #0
   1763c:	movt	r1, #0
   17640:	ldr	r0, [fp, #-12]
   17644:	bl	16334 <test_json>
   17648:	mov	r2, r0
   1764c:	ldr	r3, [fp, #-8]
   17650:	orr	r3, r3, r2
   17654:	str	r3, [fp, #-8]
   17658:	mov	r3, #488	; 0x1e8
   1765c:	str	r3, [sp, #8]
   17660:	mov	r3, #0
   17664:	str	r3, [sp, #4]
   17668:	mov	r3, #0
   1766c:	str	r3, [sp]
   17670:	mov	r3, #0
   17674:	movw	r2, #0
   17678:	movt	r2, #0
   1767c:	movw	r1, #0
   17680:	movt	r1, #0
   17684:	ldr	r0, [fp, #-12]
   17688:	bl	16334 <test_json>
   1768c:	mov	r2, r0
   17690:	ldr	r3, [fp, #-8]
   17694:	orr	r3, r3, r2
   17698:	str	r3, [fp, #-8]
   1769c:	movw	r3, #491	; 0x1eb
   176a0:	str	r3, [sp, #8]
   176a4:	mov	r3, #0
   176a8:	str	r3, [sp, #4]
   176ac:	mov	r3, #0
   176b0:	str	r3, [sp]
   176b4:	mov	r3, #0
   176b8:	movw	r2, #0
   176bc:	movt	r2, #0
   176c0:	movw	r1, #0
   176c4:	movt	r1, #0
   176c8:	ldr	r0, [fp, #-12]
   176cc:	bl	16334 <test_json>
   176d0:	mov	r2, r0
   176d4:	ldr	r3, [fp, #-8]
   176d8:	orr	r3, r3, r2
   176dc:	str	r3, [fp, #-8]
   176e0:	movw	r3, #494	; 0x1ee
   176e4:	str	r3, [sp, #8]
   176e8:	mov	r3, #0
   176ec:	str	r3, [sp, #4]
   176f0:	mov	r3, #0
   176f4:	str	r3, [sp]
   176f8:	mov	r3, #0
   176fc:	movw	r2, #0
   17700:	movt	r2, #0
   17704:	movw	r1, #0
   17708:	movt	r1, #0
   1770c:	ldr	r0, [fp, #-12]
   17710:	bl	16334 <test_json>
   17714:	mov	r2, r0
   17718:	ldr	r3, [fp, #-8]
   1771c:	orr	r3, r3, r2
   17720:	str	r3, [fp, #-8]
   17724:	movw	r3, #497	; 0x1f1
   17728:	str	r3, [sp, #8]
   1772c:	mov	r3, #0
   17730:	str	r3, [sp, #4]
   17734:	mov	r3, #0
   17738:	str	r3, [sp]
   1773c:	mov	r3, #0
   17740:	movw	r2, #0
   17744:	movt	r2, #0
   17748:	movw	r1, #0
   1774c:	movt	r1, #0
   17750:	ldr	r0, [fp, #-12]
   17754:	bl	16334 <test_json>
   17758:	mov	r2, r0
   1775c:	ldr	r3, [fp, #-8]
   17760:	orr	r3, r3, r2
   17764:	str	r3, [fp, #-8]
   17768:	mov	r3, #500	; 0x1f4
   1776c:	str	r3, [sp, #8]
   17770:	mov	r3, #0
   17774:	str	r3, [sp, #4]
   17778:	mov	r3, #0
   1777c:	str	r3, [sp]
   17780:	mov	r3, #0
   17784:	movw	r2, #0
   17788:	movt	r2, #0
   1778c:	movw	r1, #0
   17790:	movt	r1, #0
   17794:	ldr	r0, [fp, #-12]
   17798:	bl	16334 <test_json>
   1779c:	mov	r2, r0
   177a0:	ldr	r3, [fp, #-8]
   177a4:	orr	r3, r3, r2
   177a8:	str	r3, [fp, #-8]
   177ac:	ldr	r3, [fp, #-8]
   177b0:	mov	r0, r3
   177b4:	sub	sp, fp, #4
   177b8:	ldr	fp, [sp]
   177bc:	add	sp, sp, #4
   177c0:	pop	{pc}		; (ldr pc, [sp], #4)

000177c4 <main>:
   177c4:	str	fp, [sp, #-8]!
   177c8:	str	lr, [sp, #4]
   177cc:	add	fp, sp, #4
   177d0:	sub	sp, sp, #24
   177d4:	mov	r3, #0
   177d8:	str	r3, [fp, #-8]
   177dc:	movw	r3, #0
   177e0:	movt	r3, #0
   177e4:	str	r3, [fp, #-12]
   177e8:	bl	16780 <edge_case_tests>
   177ec:	mov	r2, r0
   177f0:	ldr	r3, [fp, #-8]
   177f4:	orr	r3, r3, r2
   177f8:	str	r3, [fp, #-8]
   177fc:	bl	16c40 <error_case_tests>
   17800:	mov	r2, r0
   17804:	ldr	r3, [fp, #-8]
   17808:	orr	r3, r3, r2
   1780c:	str	r3, [fp, #-8]
   17810:	bl	175f0 <union_vector_tests>
   17814:	mov	r2, r0
   17818:	ldr	r3, [fp, #-8]
   1781c:	orr	r3, r3, r2
   17820:	str	r3, [fp, #-8]
   17824:	bl	170fc <base64_tests>
   17828:	mov	r2, r0
   1782c:	ldr	r3, [fp, #-8]
   17830:	orr	r3, r3, r2
   17834:	str	r3, [fp, #-8]
   17838:	bl	173d8 <mixed_type_union_tests>
   1783c:	mov	r2, r0
   17840:	ldr	r3, [fp, #-8]
   17844:	orr	r3, r3, r2
   17848:	str	r3, [fp, #-8]
   1784c:	movw	r3, #525	; 0x20d
   17850:	str	r3, [sp, #8]
   17854:	mov	r3, #0
   17858:	str	r3, [sp, #4]
   1785c:	mov	r3, #0
   17860:	str	r3, [sp]
   17864:	mov	r3, #0
   17868:	movw	r2, #0
   1786c:	movt	r2, #0
   17870:	movw	r1, #0
   17874:	movt	r1, #0
   17878:	ldr	r0, [fp, #-12]
   1787c:	bl	16334 <test_json>
   17880:	mov	r2, r0
   17884:	ldr	r3, [fp, #-8]
   17888:	orr	r3, r3, r2
   1788c:	str	r3, [fp, #-8]
   17890:	mov	r3, #528	; 0x210
   17894:	str	r3, [sp, #8]
   17898:	mov	r3, #0
   1789c:	str	r3, [sp, #4]
   178a0:	mov	r3, #0
   178a4:	str	r3, [sp]
   178a8:	mov	r3, #0
   178ac:	movw	r2, #0
   178b0:	movt	r2, #0
   178b4:	movw	r1, #0
   178b8:	movt	r1, #0
   178bc:	ldr	r0, [fp, #-12]
   178c0:	bl	16334 <test_json>
   178c4:	mov	r2, r0
   178c8:	ldr	r3, [fp, #-8]
   178cc:	orr	r3, r3, r2
   178d0:	str	r3, [fp, #-8]
   178d4:	movw	r3, #531	; 0x213
   178d8:	str	r3, [sp, #8]
   178dc:	mov	r3, #0
   178e0:	str	r3, [sp, #4]
   178e4:	mov	r3, #0
   178e8:	str	r3, [sp]
   178ec:	mov	r3, #0
   178f0:	movw	r2, #0
   178f4:	movt	r2, #0
   178f8:	movw	r1, #0
   178fc:	movt	r1, #0
   17900:	ldr	r0, [fp, #-12]
   17904:	bl	16334 <test_json>
   17908:	mov	r2, r0
   1790c:	ldr	r3, [fp, #-8]
   17910:	orr	r3, r3, r2
   17914:	str	r3, [fp, #-8]
   17918:	movw	r3, #534	; 0x216
   1791c:	str	r3, [sp, #8]
   17920:	mov	r3, #0
   17924:	str	r3, [sp, #4]
   17928:	mov	r3, #0
   1792c:	str	r3, [sp]
   17930:	mov	r3, #0
   17934:	movw	r2, #0
   17938:	movt	r2, #0
   1793c:	movw	r1, #0
   17940:	movt	r1, #0
   17944:	ldr	r0, [fp, #-12]
   17948:	bl	16334 <test_json>
   1794c:	mov	r2, r0
   17950:	ldr	r3, [fp, #-8]
   17954:	orr	r3, r3, r2
   17958:	str	r3, [fp, #-8]
   1795c:	movw	r3, #537	; 0x219
   17960:	str	r3, [sp, #8]
   17964:	mov	r3, #0
   17968:	str	r3, [sp, #4]
   1796c:	mov	r3, #0
   17970:	str	r3, [sp]
   17974:	mov	r3, #0
   17978:	movw	r2, #0
   1797c:	movt	r2, #0
   17980:	movw	r1, #0
   17984:	movt	r1, #0
   17988:	ldr	r0, [fp, #-12]
   1798c:	bl	16334 <test_json>
   17990:	mov	r2, r0
   17994:	ldr	r3, [fp, #-8]
   17998:	orr	r3, r3, r2
   1799c:	str	r3, [fp, #-8]
   179a0:	mov	r3, #540	; 0x21c
   179a4:	str	r3, [sp, #8]
   179a8:	mov	r3, #0
   179ac:	str	r3, [sp, #4]
   179b0:	mov	r3, #0
   179b4:	str	r3, [sp]
   179b8:	mov	r3, #0
   179bc:	movw	r2, #0
   179c0:	movt	r2, #0
   179c4:	movw	r1, #0
   179c8:	movt	r1, #0
   179cc:	ldr	r0, [fp, #-12]
   179d0:	bl	16334 <test_json>
   179d4:	mov	r2, r0
   179d8:	ldr	r3, [fp, #-8]
   179dc:	orr	r3, r3, r2
   179e0:	str	r3, [fp, #-8]
   179e4:	movw	r3, #543	; 0x21f
   179e8:	str	r3, [sp, #8]
   179ec:	mov	r3, #0
   179f0:	str	r3, [sp, #4]
   179f4:	mov	r3, #0
   179f8:	str	r3, [sp]
   179fc:	mov	r3, #0
   17a00:	movw	r2, #0
   17a04:	movt	r2, #0
   17a08:	movw	r1, #0
   17a0c:	movt	r1, #0
   17a10:	ldr	r0, [fp, #-12]
   17a14:	bl	16334 <test_json>
   17a18:	mov	r2, r0
   17a1c:	ldr	r3, [fp, #-8]
   17a20:	orr	r3, r3, r2
   17a24:	str	r3, [fp, #-8]
   17a28:	movw	r3, #547	; 0x223
   17a2c:	str	r3, [sp, #8]
   17a30:	mov	r3, #0
   17a34:	str	r3, [sp, #4]
   17a38:	mov	r3, #0
   17a3c:	str	r3, [sp]
   17a40:	mov	r3, #0
   17a44:	movw	r2, #0
   17a48:	movt	r2, #0
   17a4c:	movw	r1, #0
   17a50:	movt	r1, #0
   17a54:	ldr	r0, [fp, #-12]
   17a58:	bl	16334 <test_json>
   17a5c:	mov	r2, r0
   17a60:	ldr	r3, [fp, #-8]
   17a64:	orr	r3, r3, r2
   17a68:	str	r3, [fp, #-8]
   17a6c:	movw	r3, #551	; 0x227
   17a70:	str	r3, [sp, #8]
   17a74:	mov	r3, #0
   17a78:	str	r3, [sp, #4]
   17a7c:	mov	r3, #0
   17a80:	str	r3, [sp]
   17a84:	mov	r3, #0
   17a88:	movw	r2, #0
   17a8c:	movt	r2, #0
   17a90:	movw	r1, #0
   17a94:	movt	r1, #0
   17a98:	ldr	r0, [fp, #-12]
   17a9c:	bl	16334 <test_json>
   17aa0:	mov	r2, r0
   17aa4:	ldr	r3, [fp, #-8]
   17aa8:	orr	r3, r3, r2
   17aac:	str	r3, [fp, #-8]
   17ab0:	movw	r3, #555	; 0x22b
   17ab4:	str	r3, [sp, #8]
   17ab8:	mov	r3, #0
   17abc:	str	r3, [sp, #4]
   17ac0:	mov	r3, #0
   17ac4:	str	r3, [sp]
   17ac8:	mov	r3, #0
   17acc:	movw	r2, #0
   17ad0:	movt	r2, #0
   17ad4:	movw	r1, #0
   17ad8:	movt	r1, #0
   17adc:	ldr	r0, [fp, #-12]
   17ae0:	bl	16334 <test_json>
   17ae4:	mov	r2, r0
   17ae8:	ldr	r3, [fp, #-8]
   17aec:	orr	r3, r3, r2
   17af0:	str	r3, [fp, #-8]
   17af4:	movw	r3, #558	; 0x22e
   17af8:	str	r3, [sp, #8]
   17afc:	mov	r3, #0
   17b00:	str	r3, [sp, #4]
   17b04:	mov	r3, #0
   17b08:	str	r3, [sp]
   17b0c:	mov	r3, #0
   17b10:	movw	r2, #0
   17b14:	movt	r2, #0
   17b18:	movw	r1, #0
   17b1c:	movt	r1, #0
   17b20:	ldr	r0, [fp, #-12]
   17b24:	bl	16334 <test_json>
   17b28:	mov	r2, r0
   17b2c:	ldr	r3, [fp, #-8]
   17b30:	orr	r3, r3, r2
   17b34:	str	r3, [fp, #-8]
   17b38:	movw	r3, #561	; 0x231
   17b3c:	str	r3, [sp, #8]
   17b40:	mov	r3, #0
   17b44:	str	r3, [sp, #4]
   17b48:	mov	r3, #0
   17b4c:	str	r3, [sp]
   17b50:	mov	r3, #0
   17b54:	movw	r2, #0
   17b58:	movt	r2, #0
   17b5c:	movw	r1, #0
   17b60:	movt	r1, #0
   17b64:	ldr	r0, [fp, #-12]
   17b68:	bl	16334 <test_json>
   17b6c:	mov	r2, r0
   17b70:	ldr	r3, [fp, #-8]
   17b74:	orr	r3, r3, r2
   17b78:	str	r3, [fp, #-8]
   17b7c:	mov	r3, #564	; 0x234
   17b80:	str	r3, [sp, #8]
   17b84:	mov	r3, #0
   17b88:	str	r3, [sp, #4]
   17b8c:	mov	r3, #0
   17b90:	str	r3, [sp]
   17b94:	mov	r3, #0
   17b98:	movw	r2, #0
   17b9c:	movt	r2, #0
   17ba0:	movw	r1, #0
   17ba4:	movt	r1, #0
   17ba8:	ldr	r0, [fp, #-12]
   17bac:	bl	16334 <test_json>
   17bb0:	mov	r2, r0
   17bb4:	ldr	r3, [fp, #-8]
   17bb8:	orr	r3, r3, r2
   17bbc:	str	r3, [fp, #-8]
   17bc0:	movw	r3, #567	; 0x237
   17bc4:	str	r3, [sp, #8]
   17bc8:	mov	r3, #0
   17bcc:	str	r3, [sp, #4]
   17bd0:	mov	r3, #0
   17bd4:	str	r3, [sp]
   17bd8:	mov	r3, #0
   17bdc:	movw	r2, #0
   17be0:	movt	r2, #0
   17be4:	movw	r1, #0
   17be8:	movt	r1, #0
   17bec:	ldr	r0, [fp, #-12]
   17bf0:	bl	16334 <test_json>
   17bf4:	mov	r2, r0
   17bf8:	ldr	r3, [fp, #-8]
   17bfc:	orr	r3, r3, r2
   17c00:	str	r3, [fp, #-8]
   17c04:	movw	r3, #570	; 0x23a
   17c08:	str	r3, [sp, #8]
   17c0c:	mov	r3, #0
   17c10:	str	r3, [sp, #4]
   17c14:	mov	r3, #0
   17c18:	str	r3, [sp]
   17c1c:	mov	r3, #0
   17c20:	movw	r2, #0
   17c24:	movt	r2, #0
   17c28:	movw	r1, #0
   17c2c:	movt	r1, #0
   17c30:	ldr	r0, [fp, #-12]
   17c34:	bl	16334 <test_json>
   17c38:	mov	r2, r0
   17c3c:	ldr	r3, [fp, #-8]
   17c40:	orr	r3, r3, r2
   17c44:	str	r3, [fp, #-8]
   17c48:	movw	r3, #573	; 0x23d
   17c4c:	str	r3, [sp, #8]
   17c50:	mov	r3, #0
   17c54:	str	r3, [sp, #4]
   17c58:	mov	r3, #0
   17c5c:	str	r3, [sp]
   17c60:	mov	r3, #0
   17c64:	movw	r2, #0
   17c68:	movt	r2, #0
   17c6c:	movw	r1, #0
   17c70:	movt	r1, #0
   17c74:	ldr	r0, [fp, #-12]
   17c78:	bl	16334 <test_json>
   17c7c:	mov	r2, r0
   17c80:	ldr	r3, [fp, #-8]
   17c84:	orr	r3, r3, r2
   17c88:	str	r3, [fp, #-8]
   17c8c:	movw	r3, #577	; 0x241
   17c90:	str	r3, [sp, #8]
   17c94:	mov	r3, #0
   17c98:	str	r3, [sp, #4]
   17c9c:	mov	r3, #0
   17ca0:	str	r3, [sp]
   17ca4:	mov	r3, #0
   17ca8:	movw	r2, #0
   17cac:	movt	r2, #0
   17cb0:	movw	r1, #0
   17cb4:	movt	r1, #0
   17cb8:	ldr	r0, [fp, #-12]
   17cbc:	bl	16334 <test_json>
   17cc0:	mov	r2, r0
   17cc4:	ldr	r3, [fp, #-8]
   17cc8:	orr	r3, r3, r2
   17ccc:	str	r3, [fp, #-8]
   17cd0:	movw	r3, #581	; 0x245
   17cd4:	str	r3, [sp, #8]
   17cd8:	mov	r3, #0
   17cdc:	str	r3, [sp, #4]
   17ce0:	mov	r3, #0
   17ce4:	str	r3, [sp]
   17ce8:	mov	r3, #0
   17cec:	movw	r2, #0
   17cf0:	movt	r2, #0
   17cf4:	movw	r1, #0
   17cf8:	movt	r1, #0
   17cfc:	ldr	r0, [fp, #-12]
   17d00:	bl	16334 <test_json>
   17d04:	mov	r2, r0
   17d08:	ldr	r3, [fp, #-8]
   17d0c:	orr	r3, r3, r2
   17d10:	str	r3, [fp, #-8]
   17d14:	movw	r3, #601	; 0x259
   17d18:	str	r3, [sp, #8]
   17d1c:	mov	r3, #0
   17d20:	str	r3, [sp, #4]
   17d24:	mov	r3, #0
   17d28:	str	r3, [sp]
   17d2c:	mov	r3, #0
   17d30:	movw	r2, #0
   17d34:	movt	r2, #0
   17d38:	movw	r1, #0
   17d3c:	movt	r1, #0
   17d40:	ldr	r0, [fp, #-12]
   17d44:	bl	16334 <test_json>
   17d48:	mov	r2, r0
   17d4c:	ldr	r3, [fp, #-8]
   17d50:	orr	r3, r3, r2
   17d54:	str	r3, [fp, #-8]
   17d58:	mov	r3, #604	; 0x25c
   17d5c:	str	r3, [sp, #8]
   17d60:	mov	r3, #0
   17d64:	str	r3, [sp, #4]
   17d68:	mov	r3, #0
   17d6c:	str	r3, [sp]
   17d70:	mov	r3, #0
   17d74:	movw	r2, #0
   17d78:	movt	r2, #0
   17d7c:	movw	r1, #0
   17d80:	movt	r1, #0
   17d84:	ldr	r0, [fp, #-12]
   17d88:	bl	16334 <test_json>
   17d8c:	mov	r2, r0
   17d90:	ldr	r3, [fp, #-8]
   17d94:	orr	r3, r3, r2
   17d98:	str	r3, [fp, #-8]
   17d9c:	movw	r3, #607	; 0x25f
   17da0:	str	r3, [sp, #8]
   17da4:	mov	r3, #0
   17da8:	str	r3, [sp, #4]
   17dac:	mov	r3, #0
   17db0:	str	r3, [sp]
   17db4:	mov	r3, #0
   17db8:	movw	r2, #0
   17dbc:	movt	r2, #0
   17dc0:	movw	r1, #0
   17dc4:	movt	r1, #0
   17dc8:	ldr	r0, [fp, #-12]
   17dcc:	bl	16334 <test_json>
   17dd0:	mov	r2, r0
   17dd4:	ldr	r3, [fp, #-8]
   17dd8:	orr	r3, r3, r2
   17ddc:	str	r3, [fp, #-8]
   17de0:	movw	r3, #610	; 0x262
   17de4:	str	r3, [sp, #8]
   17de8:	mov	r3, #0
   17dec:	str	r3, [sp, #4]
   17df0:	mov	r3, #0
   17df4:	str	r3, [sp]
   17df8:	mov	r3, #0
   17dfc:	movw	r2, #0
   17e00:	movt	r2, #0
   17e04:	movw	r1, #0
   17e08:	movt	r1, #0
   17e0c:	ldr	r0, [fp, #-12]
   17e10:	bl	16334 <test_json>
   17e14:	mov	r2, r0
   17e18:	ldr	r3, [fp, #-8]
   17e1c:	orr	r3, r3, r2
   17e20:	str	r3, [fp, #-8]
   17e24:	movw	r3, #613	; 0x265
   17e28:	str	r3, [sp, #8]
   17e2c:	mov	r3, #0
   17e30:	str	r3, [sp, #4]
   17e34:	mov	r3, #0
   17e38:	str	r3, [sp]
   17e3c:	mov	r3, #0
   17e40:	movw	r2, #0
   17e44:	movt	r2, #0
   17e48:	movw	r1, #0
   17e4c:	movt	r1, #0
   17e50:	ldr	r0, [fp, #-12]
   17e54:	bl	16334 <test_json>
   17e58:	mov	r2, r0
   17e5c:	ldr	r3, [fp, #-8]
   17e60:	orr	r3, r3, r2
   17e64:	str	r3, [fp, #-8]
   17e68:	mov	r3, #616	; 0x268
   17e6c:	str	r3, [sp, #8]
   17e70:	mov	r3, #0
   17e74:	str	r3, [sp, #4]
   17e78:	mov	r3, #0
   17e7c:	str	r3, [sp]
   17e80:	mov	r3, #0
   17e84:	movw	r2, #0
   17e88:	movt	r2, #0
   17e8c:	movw	r1, #0
   17e90:	movt	r1, #0
   17e94:	ldr	r0, [fp, #-12]
   17e98:	bl	16334 <test_json>
   17e9c:	mov	r2, r0
   17ea0:	ldr	r3, [fp, #-8]
   17ea4:	orr	r3, r3, r2
   17ea8:	str	r3, [fp, #-8]
   17eac:	movw	r3, #619	; 0x26b
   17eb0:	str	r3, [sp, #8]
   17eb4:	mov	r3, #0
   17eb8:	str	r3, [sp, #4]
   17ebc:	mov	r3, #0
   17ec0:	str	r3, [sp]
   17ec4:	mov	r3, #0
   17ec8:	movw	r2, #0
   17ecc:	movt	r2, #0
   17ed0:	movw	r1, #0
   17ed4:	movt	r1, #0
   17ed8:	ldr	r0, [fp, #-12]
   17edc:	bl	16334 <test_json>
   17ee0:	mov	r2, r0
   17ee4:	ldr	r3, [fp, #-8]
   17ee8:	orr	r3, r3, r2
   17eec:	str	r3, [fp, #-8]
   17ef0:	movw	r3, #622	; 0x26e
   17ef4:	str	r3, [sp, #8]
   17ef8:	mov	r3, #0
   17efc:	str	r3, [sp, #4]
   17f00:	mov	r3, #0
   17f04:	str	r3, [sp]
   17f08:	mov	r3, #0
   17f0c:	movw	r2, #0
   17f10:	movt	r2, #0
   17f14:	movw	r1, #0
   17f18:	movt	r1, #0
   17f1c:	ldr	r0, [fp, #-12]
   17f20:	bl	16334 <test_json>
   17f24:	mov	r2, r0
   17f28:	ldr	r3, [fp, #-8]
   17f2c:	orr	r3, r3, r2
   17f30:	str	r3, [fp, #-8]
   17f34:	movw	r3, #625	; 0x271
   17f38:	str	r3, [sp, #8]
   17f3c:	mov	r3, #0
   17f40:	str	r3, [sp, #4]
   17f44:	mov	r3, #0
   17f48:	str	r3, [sp]
   17f4c:	mov	r3, #0
   17f50:	movw	r2, #0
   17f54:	movt	r2, #0
   17f58:	movw	r1, #0
   17f5c:	movt	r1, #0
   17f60:	ldr	r0, [fp, #-12]
   17f64:	bl	16334 <test_json>
   17f68:	mov	r2, r0
   17f6c:	ldr	r3, [fp, #-8]
   17f70:	orr	r3, r3, r2
   17f74:	str	r3, [fp, #-8]
   17f78:	mov	r3, #628	; 0x274
   17f7c:	str	r3, [sp, #8]
   17f80:	mov	r3, #0
   17f84:	str	r3, [sp, #4]
   17f88:	mov	r3, #0
   17f8c:	str	r3, [sp]
   17f90:	mov	r3, #0
   17f94:	movw	r2, #0
   17f98:	movt	r2, #0
   17f9c:	movw	r1, #0
   17fa0:	movt	r1, #0
   17fa4:	ldr	r0, [fp, #-12]
   17fa8:	bl	16334 <test_json>
   17fac:	mov	r2, r0
   17fb0:	ldr	r3, [fp, #-8]
   17fb4:	orr	r3, r3, r2
   17fb8:	str	r3, [fp, #-8]
   17fbc:	movw	r3, #631	; 0x277
   17fc0:	str	r3, [sp, #8]
   17fc4:	mov	r3, #0
   17fc8:	str	r3, [sp, #4]
   17fcc:	mov	r3, #0
   17fd0:	str	r3, [sp]
   17fd4:	mov	r3, #0
   17fd8:	movw	r2, #0
   17fdc:	movt	r2, #0
   17fe0:	movw	r1, #0
   17fe4:	movt	r1, #0
   17fe8:	ldr	r0, [fp, #-12]
   17fec:	bl	16334 <test_json>
   17ff0:	mov	r2, r0
   17ff4:	ldr	r3, [fp, #-8]
   17ff8:	orr	r3, r3, r2
   17ffc:	str	r3, [fp, #-8]
   18000:	movw	r3, #634	; 0x27a
   18004:	str	r3, [sp, #8]
   18008:	mov	r3, #0
   1800c:	str	r3, [sp, #4]
   18010:	mov	r3, #0
   18014:	str	r3, [sp]
   18018:	mov	r3, #0
   1801c:	movw	r2, #0
   18020:	movt	r2, #0
   18024:	movw	r1, #0
   18028:	movt	r1, #0
   1802c:	ldr	r0, [fp, #-12]
   18030:	bl	16334 <test_json>
   18034:	mov	r2, r0
   18038:	ldr	r3, [fp, #-8]
   1803c:	orr	r3, r3, r2
   18040:	str	r3, [fp, #-8]
   18044:	movw	r3, #638	; 0x27e
   18048:	str	r3, [sp, #8]
   1804c:	mov	r3, #0
   18050:	str	r3, [sp, #4]
   18054:	mov	r3, #0
   18058:	str	r3, [sp]
   1805c:	mov	r3, #0
   18060:	movw	r2, #0
   18064:	movt	r2, #0
   18068:	movw	r1, #0
   1806c:	movt	r1, #0
   18070:	ldr	r0, [fp, #-12]
   18074:	bl	16334 <test_json>
   18078:	mov	r2, r0
   1807c:	ldr	r3, [fp, #-8]
   18080:	orr	r3, r3, r2
   18084:	str	r3, [fp, #-8]
   18088:	movw	r3, #642	; 0x282
   1808c:	str	r3, [sp, #8]
   18090:	mov	r3, #0
   18094:	str	r3, [sp, #4]
   18098:	mov	r3, #0
   1809c:	str	r3, [sp]
   180a0:	mov	r3, #0
   180a4:	movw	r2, #0
   180a8:	movt	r2, #0
   180ac:	movw	r1, #0
   180b0:	movt	r1, #0
   180b4:	ldr	r0, [fp, #-12]
   180b8:	bl	16334 <test_json>
   180bc:	mov	r2, r0
   180c0:	ldr	r3, [fp, #-8]
   180c4:	orr	r3, r3, r2
   180c8:	str	r3, [fp, #-8]
   180cc:	movw	r3, #646	; 0x286
   180d0:	str	r3, [sp, #8]
   180d4:	mov	r3, #0
   180d8:	str	r3, [sp, #4]
   180dc:	mov	r3, #0
   180e0:	str	r3, [sp]
   180e4:	mov	r3, #0
   180e8:	movw	r2, #0
   180ec:	movt	r2, #0
   180f0:	movw	r1, #0
   180f4:	movt	r1, #0
   180f8:	ldr	r0, [fp, #-12]
   180fc:	bl	16334 <test_json>
   18100:	mov	r2, r0
   18104:	ldr	r3, [fp, #-8]
   18108:	orr	r3, r3, r2
   1810c:	str	r3, [fp, #-8]
   18110:	movw	r3, #649	; 0x289
   18114:	str	r3, [sp, #8]
   18118:	mov	r3, #0
   1811c:	str	r3, [sp, #4]
   18120:	mov	r3, #0
   18124:	str	r3, [sp]
   18128:	mov	r3, #0
   1812c:	movw	r2, #0
   18130:	movt	r2, #0
   18134:	movw	r1, #0
   18138:	movt	r1, #0
   1813c:	ldr	r0, [fp, #-12]
   18140:	bl	16334 <test_json>
   18144:	mov	r2, r0
   18148:	ldr	r3, [fp, #-8]
   1814c:	orr	r3, r3, r2
   18150:	str	r3, [fp, #-8]
   18154:	movw	r3, #653	; 0x28d
   18158:	str	r3, [sp, #8]
   1815c:	mov	r3, #0
   18160:	str	r3, [sp, #4]
   18164:	mov	r3, #0
   18168:	str	r3, [sp]
   1816c:	mov	r3, #0
   18170:	movw	r2, #0
   18174:	movt	r2, #0
   18178:	movw	r1, #0
   1817c:	movt	r1, #0
   18180:	ldr	r0, [fp, #-12]
   18184:	bl	16334 <test_json>
   18188:	mov	r2, r0
   1818c:	ldr	r3, [fp, #-8]
   18190:	orr	r3, r3, r2
   18194:	str	r3, [fp, #-8]
   18198:	mov	r3, #656	; 0x290
   1819c:	str	r3, [sp, #8]
   181a0:	mov	r3, #0
   181a4:	str	r3, [sp, #4]
   181a8:	mov	r3, #0
   181ac:	str	r3, [sp]
   181b0:	mov	r3, #0
   181b4:	movw	r2, #0
   181b8:	movt	r2, #0
   181bc:	movw	r1, #0
   181c0:	movt	r1, #0
   181c4:	ldr	r0, [fp, #-12]
   181c8:	bl	16334 <test_json>
   181cc:	mov	r2, r0
   181d0:	ldr	r3, [fp, #-8]
   181d4:	orr	r3, r3, r2
   181d8:	str	r3, [fp, #-8]
   181dc:	movw	r3, #659	; 0x293
   181e0:	str	r3, [sp, #8]
   181e4:	mov	r3, #0
   181e8:	str	r3, [sp, #4]
   181ec:	mov	r3, #0
   181f0:	str	r3, [sp]
   181f4:	mov	r3, #0
   181f8:	movw	r2, #0
   181fc:	movt	r2, #0
   18200:	movw	r1, #0
   18204:	movt	r1, #0
   18208:	ldr	r0, [fp, #-12]
   1820c:	bl	16334 <test_json>
   18210:	mov	r2, r0
   18214:	ldr	r3, [fp, #-8]
   18218:	orr	r3, r3, r2
   1821c:	str	r3, [fp, #-8]
   18220:	movw	r3, #662	; 0x296
   18224:	str	r3, [sp, #8]
   18228:	mov	r3, #0
   1822c:	str	r3, [sp, #4]
   18230:	mov	r3, #0
   18234:	str	r3, [sp]
   18238:	mov	r3, #0
   1823c:	movw	r2, #0
   18240:	movt	r2, #0
   18244:	movw	r1, #0
   18248:	movt	r1, #0
   1824c:	ldr	r0, [fp, #-12]
   18250:	bl	16334 <test_json>
   18254:	mov	r2, r0
   18258:	ldr	r3, [fp, #-8]
   1825c:	orr	r3, r3, r2
   18260:	str	r3, [fp, #-8]
   18264:	movw	r3, #665	; 0x299
   18268:	str	r3, [sp, #8]
   1826c:	mov	r3, #0
   18270:	str	r3, [sp, #4]
   18274:	mov	r3, #0
   18278:	str	r3, [sp]
   1827c:	mov	r3, #0
   18280:	movw	r2, #0
   18284:	movt	r2, #0
   18288:	movw	r1, #0
   1828c:	movt	r1, #0
   18290:	ldr	r0, [fp, #-12]
   18294:	bl	16334 <test_json>
   18298:	mov	r2, r0
   1829c:	ldr	r3, [fp, #-8]
   182a0:	orr	r3, r3, r2
   182a4:	str	r3, [fp, #-8]
   182a8:	mov	r3, #668	; 0x29c
   182ac:	str	r3, [sp, #8]
   182b0:	mov	r3, #0
   182b4:	str	r3, [sp, #4]
   182b8:	mov	r3, #0
   182bc:	str	r3, [sp]
   182c0:	mov	r3, #0
   182c4:	movw	r2, #0
   182c8:	movt	r2, #0
   182cc:	movw	r1, #0
   182d0:	movt	r1, #0
   182d4:	ldr	r0, [fp, #-12]
   182d8:	bl	16334 <test_json>
   182dc:	mov	r2, r0
   182e0:	ldr	r3, [fp, #-8]
   182e4:	orr	r3, r3, r2
   182e8:	str	r3, [fp, #-8]
   182ec:	movw	r3, #671	; 0x29f
   182f0:	str	r3, [sp, #8]
   182f4:	mov	r3, #0
   182f8:	str	r3, [sp, #4]
   182fc:	mov	r3, #0
   18300:	str	r3, [sp]
   18304:	mov	r3, #0
   18308:	movw	r2, #0
   1830c:	movt	r2, #0
   18310:	movw	r1, #0
   18314:	movt	r1, #0
   18318:	ldr	r0, [fp, #-12]
   1831c:	bl	16334 <test_json>
   18320:	mov	r2, r0
   18324:	ldr	r3, [fp, #-8]
   18328:	orr	r3, r3, r2
   1832c:	str	r3, [fp, #-8]
   18330:	movw	r3, #674	; 0x2a2
   18334:	str	r3, [sp, #8]
   18338:	mov	r3, #0
   1833c:	str	r3, [sp, #4]
   18340:	mov	r3, #0
   18344:	str	r3, [sp]
   18348:	mov	r3, #0
   1834c:	movw	r2, #0
   18350:	movt	r2, #0
   18354:	movw	r1, #0
   18358:	movt	r1, #0
   1835c:	ldr	r0, [fp, #-12]
   18360:	bl	16334 <test_json>
   18364:	mov	r2, r0
   18368:	ldr	r3, [fp, #-8]
   1836c:	orr	r3, r3, r2
   18370:	str	r3, [fp, #-8]
   18374:	movw	r3, #677	; 0x2a5
   18378:	str	r3, [sp, #8]
   1837c:	mov	r3, #0
   18380:	str	r3, [sp, #4]
   18384:	mov	r3, #0
   18388:	str	r3, [sp]
   1838c:	mov	r3, #0
   18390:	movw	r2, #0
   18394:	movt	r2, #0
   18398:	movw	r1, #0
   1839c:	movt	r1, #0
   183a0:	ldr	r0, [fp, #-12]
   183a4:	bl	16334 <test_json>
   183a8:	mov	r2, r0
   183ac:	ldr	r3, [fp, #-8]
   183b0:	orr	r3, r3, r2
   183b4:	str	r3, [fp, #-8]
   183b8:	mov	r3, #680	; 0x2a8
   183bc:	str	r3, [sp, #8]
   183c0:	mov	r3, #0
   183c4:	str	r3, [sp, #4]
   183c8:	mov	r3, #0
   183cc:	str	r3, [sp]
   183d0:	mov	r3, #0
   183d4:	movw	r2, #0
   183d8:	movt	r2, #0
   183dc:	movw	r1, #0
   183e0:	movt	r1, #0
   183e4:	ldr	r0, [fp, #-12]
   183e8:	bl	16334 <test_json>
   183ec:	mov	r2, r0
   183f0:	ldr	r3, [fp, #-8]
   183f4:	orr	r3, r3, r2
   183f8:	str	r3, [fp, #-8]
   183fc:	movw	r3, #683	; 0x2ab
   18400:	str	r3, [sp, #8]
   18404:	mov	r3, #0
   18408:	str	r3, [sp, #4]
   1840c:	mov	r3, #0
   18410:	str	r3, [sp]
   18414:	mov	r3, #0
   18418:	movw	r2, #0
   1841c:	movt	r2, #0
   18420:	movw	r1, #0
   18424:	movt	r1, #0
   18428:	ldr	r0, [fp, #-12]
   1842c:	bl	16334 <test_json>
   18430:	mov	r2, r0
   18434:	ldr	r3, [fp, #-8]
   18438:	orr	r3, r3, r2
   1843c:	str	r3, [fp, #-8]
   18440:	movw	r3, #686	; 0x2ae
   18444:	str	r3, [sp, #8]
   18448:	mov	r3, #0
   1844c:	str	r3, [sp, #4]
   18450:	mov	r3, #0
   18454:	str	r3, [sp]
   18458:	mov	r3, #0
   1845c:	movw	r2, #0
   18460:	movt	r2, #0
   18464:	movw	r1, #0
   18468:	movt	r1, #0
   1846c:	ldr	r0, [fp, #-12]
   18470:	bl	16334 <test_json>
   18474:	mov	r2, r0
   18478:	ldr	r3, [fp, #-8]
   1847c:	orr	r3, r3, r2
   18480:	str	r3, [fp, #-8]
   18484:	movw	r3, #690	; 0x2b2
   18488:	str	r3, [sp, #8]
   1848c:	mov	r3, #0
   18490:	str	r3, [sp, #4]
   18494:	mov	r3, #0
   18498:	str	r3, [sp]
   1849c:	mov	r3, #0
   184a0:	movw	r2, #0
   184a4:	movt	r2, #0
   184a8:	movw	r1, #0
   184ac:	movt	r1, #0
   184b0:	ldr	r0, [fp, #-12]
   184b4:	bl	16334 <test_json>
   184b8:	mov	r2, r0
   184bc:	ldr	r3, [fp, #-8]
   184c0:	orr	r3, r3, r2
   184c4:	str	r3, [fp, #-8]
   184c8:	movw	r3, #694	; 0x2b6
   184cc:	str	r3, [sp, #8]
   184d0:	mov	r3, #0
   184d4:	str	r3, [sp, #4]
   184d8:	mov	r3, #0
   184dc:	str	r3, [sp]
   184e0:	mov	r3, #0
   184e4:	movw	r2, #0
   184e8:	movt	r2, #0
   184ec:	movw	r1, #0
   184f0:	movt	r1, #0
   184f4:	ldr	r0, [fp, #-12]
   184f8:	bl	16334 <test_json>
   184fc:	mov	r2, r0
   18500:	ldr	r3, [fp, #-8]
   18504:	orr	r3, r3, r2
   18508:	str	r3, [fp, #-8]
   1850c:	movw	r3, #698	; 0x2ba
   18510:	str	r3, [sp, #8]
   18514:	mov	r3, #0
   18518:	str	r3, [sp, #4]
   1851c:	mov	r3, #0
   18520:	str	r3, [sp]
   18524:	mov	r3, #0
   18528:	movw	r2, #0
   1852c:	movt	r2, #0
   18530:	movw	r1, #0
   18534:	movt	r1, #0
   18538:	ldr	r0, [fp, #-12]
   1853c:	bl	16334 <test_json>
   18540:	mov	r2, r0
   18544:	ldr	r3, [fp, #-8]
   18548:	orr	r3, r3, r2
   1854c:	str	r3, [fp, #-8]
   18550:	movw	r3, #701	; 0x2bd
   18554:	str	r3, [sp, #8]
   18558:	mov	r3, #0
   1855c:	str	r3, [sp, #4]
   18560:	mov	r3, #0
   18564:	str	r3, [sp]
   18568:	mov	r3, #0
   1856c:	movw	r2, #0
   18570:	movt	r2, #0
   18574:	movw	r1, #0
   18578:	movt	r1, #0
   1857c:	ldr	r0, [fp, #-12]
   18580:	bl	16334 <test_json>
   18584:	mov	r2, r0
   18588:	ldr	r3, [fp, #-8]
   1858c:	orr	r3, r3, r2
   18590:	str	r3, [fp, #-8]
   18594:	mov	r3, #716	; 0x2cc
   18598:	str	r3, [sp, #8]
   1859c:	mov	r3, #0
   185a0:	str	r3, [sp, #4]
   185a4:	mov	r3, #0
   185a8:	str	r3, [sp]
   185ac:	mov	r3, #0
   185b0:	movw	r2, #0
   185b4:	movt	r2, #0
   185b8:	movw	r1, #0
   185bc:	movt	r1, #0
   185c0:	ldr	r0, [fp, #-12]
   185c4:	bl	16334 <test_json>
   185c8:	mov	r2, r0
   185cc:	ldr	r3, [fp, #-8]
   185d0:	orr	r3, r3, r2
   185d4:	str	r3, [fp, #-8]
   185d8:	movw	r3, #731	; 0x2db
   185dc:	str	r3, [sp, #8]
   185e0:	mov	r3, #0
   185e4:	str	r3, [sp, #4]
   185e8:	mov	r3, #0
   185ec:	str	r3, [sp]
   185f0:	mov	r3, #0
   185f4:	movw	r2, #0
   185f8:	movt	r2, #0
   185fc:	movw	r1, #0
   18600:	movt	r1, #0
   18604:	ldr	r0, [fp, #-12]
   18608:	bl	16334 <test_json>
   1860c:	mov	r2, r0
   18610:	ldr	r3, [fp, #-8]
   18614:	orr	r3, r3, r2
   18618:	str	r3, [fp, #-8]
   1861c:	movw	r3, #734	; 0x2de
   18620:	str	r3, [sp, #8]
   18624:	mov	r3, #0
   18628:	str	r3, [sp, #4]
   1862c:	mov	r3, #0
   18630:	str	r3, [sp]
   18634:	mov	r3, #0
   18638:	movw	r2, #0
   1863c:	movt	r2, #0
   18640:	movw	r1, #0
   18644:	movt	r1, #0
   18648:	ldr	r0, [fp, #-12]
   1864c:	bl	16334 <test_json>
   18650:	mov	r2, r0
   18654:	ldr	r3, [fp, #-8]
   18658:	orr	r3, r3, r2
   1865c:	str	r3, [fp, #-8]
   18660:	movw	r3, #738	; 0x2e2
   18664:	str	r3, [sp, #8]
   18668:	mov	r3, #0
   1866c:	str	r3, [sp, #4]
   18670:	mov	r3, #0
   18674:	str	r3, [sp]
   18678:	mov	r3, #0
   1867c:	movw	r2, #0
   18680:	movt	r2, #0
   18684:	movw	r1, #0
   18688:	movt	r1, #0
   1868c:	ldr	r0, [fp, #-12]
   18690:	bl	16334 <test_json>
   18694:	mov	r2, r0
   18698:	ldr	r3, [fp, #-8]
   1869c:	orr	r3, r3, r2
   186a0:	str	r3, [fp, #-8]
   186a4:	movw	r3, #750	; 0x2ee
   186a8:	str	r3, [sp, #8]
   186ac:	mov	r3, #0
   186b0:	str	r3, [sp, #4]
   186b4:	mov	r3, #0
   186b8:	str	r3, [sp]
   186bc:	mov	r3, #0
   186c0:	movw	r2, #0
   186c4:	movt	r2, #0
   186c8:	movw	r1, #0
   186cc:	movt	r1, #0
   186d0:	ldr	r0, [fp, #-12]
   186d4:	bl	16334 <test_json>
   186d8:	mov	r2, r0
   186dc:	ldr	r3, [fp, #-8]
   186e0:	orr	r3, r3, r2
   186e4:	str	r3, [fp, #-8]
   186e8:	movw	r3, #766	; 0x2fe
   186ec:	str	r3, [sp, #8]
   186f0:	mov	r3, #0
   186f4:	str	r3, [sp, #4]
   186f8:	mov	r3, #0
   186fc:	str	r3, [sp]
   18700:	mov	r3, #0
   18704:	movw	r2, #0
   18708:	movt	r2, #0
   1870c:	movw	r1, #0
   18710:	movt	r1, #0
   18714:	ldr	r0, [fp, #-12]
   18718:	bl	16334 <test_json>
   1871c:	mov	r2, r0
   18720:	ldr	r3, [fp, #-8]
   18724:	orr	r3, r3, r2
   18728:	str	r3, [fp, #-8]
   1872c:	movw	r3, #770	; 0x302
   18730:	str	r3, [sp, #8]
   18734:	mov	r3, #0
   18738:	str	r3, [sp, #4]
   1873c:	mov	r3, #0
   18740:	str	r3, [sp]
   18744:	mov	r3, #0
   18748:	movw	r2, #0
   1874c:	movt	r2, #0
   18750:	movw	r1, #0
   18754:	movt	r1, #0
   18758:	ldr	r0, [fp, #-12]
   1875c:	bl	16334 <test_json>
   18760:	mov	r2, r0
   18764:	ldr	r3, [fp, #-8]
   18768:	orr	r3, r3, r2
   1876c:	str	r3, [fp, #-8]
   18770:	mov	r3, #776	; 0x308
   18774:	str	r3, [sp, #8]
   18778:	mov	r3, #0
   1877c:	str	r3, [sp, #4]
   18780:	mov	r3, #0
   18784:	str	r3, [sp]
   18788:	mov	r3, #0
   1878c:	movw	r2, #0
   18790:	movt	r2, #0
   18794:	movw	r1, #0
   18798:	movt	r1, #0
   1879c:	ldr	r0, [fp, #-12]
   187a0:	bl	16334 <test_json>
   187a4:	mov	r2, r0
   187a8:	ldr	r3, [fp, #-8]
   187ac:	orr	r3, r3, r2
   187b0:	str	r3, [fp, #-8]
   187b4:	movw	r3, #781	; 0x30d
   187b8:	str	r3, [sp, #8]
   187bc:	mov	r3, #0
   187c0:	str	r3, [sp, #4]
   187c4:	mov	r3, #0
   187c8:	str	r3, [sp]
   187cc:	mov	r3, #0
   187d0:	movw	r2, #0
   187d4:	movt	r2, #0
   187d8:	movw	r1, #0
   187dc:	movt	r1, #0
   187e0:	ldr	r0, [fp, #-12]
   187e4:	bl	16334 <test_json>
   187e8:	mov	r2, r0
   187ec:	ldr	r3, [fp, #-8]
   187f0:	orr	r3, r3, r2
   187f4:	str	r3, [fp, #-8]
   187f8:	movw	r3, #786	; 0x312
   187fc:	str	r3, [sp, #8]
   18800:	mov	r3, #0
   18804:	str	r3, [sp, #4]
   18808:	mov	r3, #0
   1880c:	str	r3, [sp]
   18810:	mov	r3, #0
   18814:	movw	r2, #0
   18818:	movt	r2, #0
   1881c:	movw	r1, #0
   18820:	movt	r1, #0
   18824:	ldr	r0, [fp, #-12]
   18828:	bl	16334 <test_json>
   1882c:	mov	r2, r0
   18830:	ldr	r3, [fp, #-8]
   18834:	orr	r3, r3, r2
   18838:	str	r3, [fp, #-8]
   1883c:	movw	r3, #791	; 0x317
   18840:	str	r3, [sp, #8]
   18844:	mov	r3, #0
   18848:	str	r3, [sp, #4]
   1884c:	mov	r3, #0
   18850:	str	r3, [sp]
   18854:	mov	r3, #0
   18858:	movw	r2, #0
   1885c:	movt	r2, #0
   18860:	movw	r1, #0
   18864:	movt	r1, #0
   18868:	ldr	r0, [fp, #-12]
   1886c:	bl	16334 <test_json>
   18870:	mov	r2, r0
   18874:	ldr	r3, [fp, #-8]
   18878:	orr	r3, r3, r2
   1887c:	str	r3, [fp, #-8]
   18880:	mov	r3, #796	; 0x31c
   18884:	str	r3, [sp, #8]
   18888:	mov	r3, #0
   1888c:	str	r3, [sp, #4]
   18890:	mov	r3, #0
   18894:	str	r3, [sp]
   18898:	mov	r3, #0
   1889c:	movw	r2, #0
   188a0:	movt	r2, #0
   188a4:	movw	r1, #0
   188a8:	movt	r1, #0
   188ac:	ldr	r0, [fp, #-12]
   188b0:	bl	16334 <test_json>
   188b4:	mov	r2, r0
   188b8:	ldr	r3, [fp, #-8]
   188bc:	orr	r3, r3, r2
   188c0:	str	r3, [fp, #-8]
   188c4:	movw	r3, #801	; 0x321
   188c8:	str	r3, [sp, #8]
   188cc:	mov	r3, #0
   188d0:	str	r3, [sp, #4]
   188d4:	mov	r3, #0
   188d8:	str	r3, [sp]
   188dc:	mov	r3, #0
   188e0:	movw	r2, #0
   188e4:	movt	r2, #0
   188e8:	movw	r1, #0
   188ec:	movt	r1, #0
   188f0:	ldr	r0, [fp, #-12]
   188f4:	bl	16334 <test_json>
   188f8:	mov	r2, r0
   188fc:	ldr	r3, [fp, #-8]
   18900:	orr	r3, r3, r2
   18904:	str	r3, [fp, #-8]
   18908:	movw	r3, #806	; 0x326
   1890c:	str	r3, [sp, #8]
   18910:	mov	r3, #0
   18914:	str	r3, [sp, #4]
   18918:	mov	r3, #0
   1891c:	str	r3, [sp]
   18920:	mov	r3, #0
   18924:	movw	r2, #0
   18928:	movt	r2, #0
   1892c:	movw	r1, #0
   18930:	movt	r1, #0
   18934:	ldr	r0, [fp, #-12]
   18938:	bl	16334 <test_json>
   1893c:	mov	r2, r0
   18940:	ldr	r3, [fp, #-8]
   18944:	orr	r3, r3, r2
   18948:	str	r3, [fp, #-8]
   1894c:	ldr	r3, [fp, #-8]
   18950:	cmp	r3, #0
   18954:	beq	18960 <main+0x119c>
   18958:	mvn	r3, #0
   1895c:	b	18964 <main+0x11a0>
   18960:	mov	r3, #0
   18964:	mov	r0, r3
   18968:	sub	sp, fp, #4
   1896c:	ldr	fp, [sp]
   18970:	add	sp, sp, #4
   18974:	pop	{pc}		; (ldr pc, [sp], #4)
