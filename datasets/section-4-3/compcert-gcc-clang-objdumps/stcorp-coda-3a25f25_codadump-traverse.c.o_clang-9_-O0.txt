
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-traverse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_full_field_name>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #64	; 0x40
       c:	str	r0, [fp, #-4]
      10:	str	r1, [fp, #-8]
      14:	str	r2, [fp, #-12]
      18:	ldr	r0, [fp, #-8]
      1c:	cmp	r0, #1
      20:	bne	210 <print_full_field_name+0x210>
      24:	movw	r0, #0
      28:	str	r0, [fp, #-20]	; 0xffffffec
      2c:	str	r0, [fp, #-24]	; 0xffffffe8
      30:	str	r0, [fp, #-16]
      34:	ldr	r0, [fp, #-16]
      38:	movw	r1, #0
      3c:	movt	r1, #0
      40:	ldr	r1, [r1, #136]	; 0x88
      44:	cmp	r0, r1
      48:	bge	1b0 <print_full_field_name+0x1b0>
      4c:	movw	r0, #0
      50:	movt	r0, #0
      54:	add	r0, r0, #8
      58:	ldr	r1, [fp, #-16]
      5c:	movw	r2, #0
      60:	movt	r2, #0
      64:	add	r1, r2, r1, lsl #2
      68:	add	r1, r1, #8
      6c:	ldr	r1, [r1]
      70:	str	r0, [sp, #24]
      74:	mov	r0, r1
      78:	sub	r1, fp, #28
      7c:	bl	0 <coda_type_get_class>
      80:	cmp	r0, #0
      84:	beq	94 <print_full_field_name+0x94>
      88:	movw	r0, #0
      8c:	movt	r0, #0
      90:	blx	r0
      94:	ldr	r0, [fp, #-28]	; 0xffffffe4
      98:	cmp	r0, #0
      9c:	str	r0, [sp, #20]
      a0:	beq	b8 <print_full_field_name+0xb8>
      a4:	b	a8 <print_full_field_name+0xa8>
      a8:	ldr	r0, [sp, #20]
      ac:	cmp	r0, #1
      b0:	beq	10c <print_full_field_name+0x10c>
      b4:	b	198 <print_full_field_name+0x198>
      b8:	movw	r0, #3620	; 0xe24
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	add	r0, r1, r0
      c8:	ldr	r1, [fp, #-4]
      cc:	ldr	r2, [fp, #-20]	; 0xffffffec
      d0:	movw	r3, #0
      d4:	movt	r3, #0
      d8:	add	r2, r3, r2, lsl #2
      dc:	movw	r3, #3620	; 0xe24
      e0:	add	r2, r2, r3
      e4:	ldr	r2, [r2]
      e8:	str	r0, [sp, #16]
      ec:	mov	r0, r1
      f0:	movw	r1, #0
      f4:	movt	r1, #0
      f8:	bl	0 <fprintf>
      fc:	ldr	r1, [fp, #-20]	; 0xffffffec
     100:	add	r1, r1, #1
     104:	str	r1, [fp, #-20]	; 0xffffffec
     108:	b	19c <print_full_field_name+0x19c>
     10c:	ldr	r0, [fp, #-16]
     110:	cmp	r0, #0
     114:	bne	128 <print_full_field_name+0x128>
     118:	ldr	r0, [fp, #-4]
     11c:	movw	r1, #0
     120:	movt	r1, #0
     124:	bl	0 <fprintf>
     128:	movw	r0, #0
     12c:	movt	r0, #0
     130:	add	r0, r0, #800	; 0x320
     134:	ldr	r1, [fp, #-24]	; 0xffffffe8
     138:	movw	r2, #80	; 0x50
     13c:	mul	r1, r1, r2
     140:	add	r0, r0, r1
     144:	ldr	r0, [r0, #4]
     148:	cmp	r0, #0
     14c:	ble	188 <print_full_field_name+0x188>
     150:	ldr	r0, [fp, #-4]
     154:	movw	r1, #0
     158:	movt	r1, #0
     15c:	bl	0 <fprintf>
     160:	ldr	r1, [fp, #-4]
     164:	ldr	r2, [fp, #-24]	; 0xffffffe8
     168:	str	r0, [sp, #12]
     16c:	mov	r0, r1
     170:	mov	r1, r2
     174:	bl	47c <print_array_dim>
     178:	ldr	r0, [fp, #-4]
     17c:	movw	r1, #0
     180:	movt	r1, #0
     184:	bl	0 <fprintf>
     188:	ldr	r0, [fp, #-24]	; 0xffffffe8
     18c:	add	r0, r0, #1
     190:	str	r0, [fp, #-24]	; 0xffffffe8
     194:	b	19c <print_full_field_name+0x19c>
     198:	b	19c <print_full_field_name+0x19c>
     19c:	b	1a0 <print_full_field_name+0x1a0>
     1a0:	ldr	r0, [fp, #-16]
     1a4:	add	r0, r0, #1
     1a8:	str	r0, [fp, #-16]
     1ac:	b	34 <print_full_field_name+0x34>
     1b0:	ldr	r0, [fp, #-12]
     1b4:	cmp	r0, #0
     1b8:	beq	20c <print_full_field_name+0x20c>
     1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1c0:	movw	r1, #0
     1c4:	movt	r1, #0
     1c8:	ldr	r1, [r1, #3360]	; 0xd20
     1cc:	cmp	r0, r1
     1d0:	bge	20c <print_full_field_name+0x20c>
     1d4:	ldr	r0, [fp, #-4]
     1d8:	movw	r1, #0
     1dc:	movt	r1, #0
     1e0:	bl	0 <fprintf>
     1e4:	ldr	r1, [fp, #-4]
     1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
     1ec:	str	r0, [sp, #8]
     1f0:	mov	r0, r1
     1f4:	mov	r1, r2
     1f8:	bl	47c <print_array_dim>
     1fc:	ldr	r0, [fp, #-4]
     200:	movw	r1, #0
     204:	movt	r1, #0
     208:	bl	0 <fprintf>
     20c:	b	474 <print_full_field_name+0x474>
     210:	movw	r0, #0
     214:	str	r0, [fp, #-16]
     218:	ldr	r0, [fp, #-16]
     21c:	movw	r1, #0
     220:	movt	r1, #0
     224:	ldr	r1, [r1, #3748]	; 0xea4
     228:	cmp	r0, r1
     22c:	bge	2a0 <print_full_field_name+0x2a0>
     230:	ldr	r0, [fp, #-16]
     234:	cmp	r0, #0
     238:	ble	24c <print_full_field_name+0x24c>
     23c:	ldr	r0, [fp, #-4]
     240:	movw	r1, #0
     244:	movt	r1, #0
     248:	bl	0 <fprintf>
     24c:	movw	r0, #3620	; 0xe24
     250:	movw	r1, #0
     254:	movt	r1, #0
     258:	add	r0, r1, r0
     25c:	ldr	r1, [fp, #-4]
     260:	ldr	r2, [fp, #-16]
     264:	movw	r3, #0
     268:	movt	r3, #0
     26c:	add	r2, r3, r2, lsl #2
     270:	movw	r3, #3620	; 0xe24
     274:	add	r2, r2, r3
     278:	ldr	r2, [r2]
     27c:	str	r0, [sp, #4]
     280:	mov	r0, r1
     284:	movw	r1, #0
     288:	movt	r1, #0
     28c:	bl	0 <fprintf>
     290:	ldr	r0, [fp, #-16]
     294:	add	r0, r0, #1
     298:	str	r0, [fp, #-16]
     29c:	b	218 <print_full_field_name+0x218>
     2a0:	ldr	r0, [fp, #-8]
     2a4:	cmp	r0, #2
     2a8:	bne	470 <print_full_field_name+0x470>
     2ac:	movw	r0, #0
     2b0:	str	r0, [sp, #32]
     2b4:	str	r0, [fp, #-16]
     2b8:	ldr	r0, [fp, #-16]
     2bc:	movw	r1, #0
     2c0:	movt	r1, #0
     2c4:	ldr	r1, [r1, #136]	; 0x88
     2c8:	cmp	r0, r1
     2cc:	bge	3c8 <print_full_field_name+0x3c8>
     2d0:	movw	r0, #0
     2d4:	movt	r0, #0
     2d8:	add	r0, r0, #8
     2dc:	ldr	r1, [fp, #-16]
     2e0:	movw	r2, #0
     2e4:	movt	r2, #0
     2e8:	add	r1, r2, r1, lsl #2
     2ec:	add	r1, r1, #8
     2f0:	ldr	r1, [r1]
     2f4:	str	r0, [sp]
     2f8:	mov	r0, r1
     2fc:	add	r1, sp, #28
     300:	bl	0 <coda_type_get_class>
     304:	cmp	r0, #0
     308:	beq	318 <print_full_field_name+0x318>
     30c:	movw	r0, #0
     310:	movt	r0, #0
     314:	blx	r0
     318:	ldr	r0, [sp, #28]
     31c:	cmp	r0, #1
     320:	bne	3b4 <print_full_field_name+0x3b4>
     324:	movw	r0, #0
     328:	movt	r0, #0
     32c:	add	r0, r0, #800	; 0x320
     330:	ldr	r1, [sp, #32]
     334:	movw	r2, #80	; 0x50
     338:	mul	r1, r1, r2
     33c:	add	r0, r0, r1
     340:	ldr	r0, [r0, #4]
     344:	cmp	r0, #0
     348:	ble	3b0 <print_full_field_name+0x3b0>
     34c:	movw	r0, #0
     350:	movt	r0, #0
     354:	add	r0, r0, #800	; 0x320
     358:	ldr	r1, [sp, #32]
     35c:	movw	r2, #80	; 0x50
     360:	mul	r1, r1, r2
     364:	add	r0, r0, r1
     368:	ldr	r0, [r0]
     36c:	cmp	r0, #0
     370:	bne	388 <print_full_field_name+0x388>
     374:	ldr	r0, [fp, #-4]
     378:	movw	r1, #0
     37c:	movt	r1, #0
     380:	bl	0 <fprintf>
     384:	b	398 <print_full_field_name+0x398>
     388:	ldr	r0, [fp, #-4]
     38c:	movw	r1, #0
     390:	movt	r1, #0
     394:	bl	0 <fprintf>
     398:	ldr	r0, [fp, #-4]
     39c:	ldr	r1, [sp, #32]
     3a0:	bl	47c <print_array_dim>
     3a4:	ldr	r0, [sp, #32]
     3a8:	add	r0, r0, #1
     3ac:	str	r0, [sp, #32]
     3b0:	b	3b4 <print_full_field_name+0x3b4>
     3b4:	b	3b8 <print_full_field_name+0x3b8>
     3b8:	ldr	r0, [fp, #-16]
     3bc:	add	r0, r0, #1
     3c0:	str	r0, [fp, #-16]
     3c4:	b	2b8 <print_full_field_name+0x2b8>
     3c8:	ldr	r0, [fp, #-12]
     3cc:	cmp	r0, #0
     3d0:	beq	450 <print_full_field_name+0x450>
     3d4:	ldr	r0, [sp, #32]
     3d8:	movw	r1, #0
     3dc:	movt	r1, #0
     3e0:	ldr	r1, [r1, #3360]	; 0xd20
     3e4:	cmp	r0, r1
     3e8:	bge	450 <print_full_field_name+0x450>
     3ec:	movw	r0, #0
     3f0:	movt	r0, #0
     3f4:	add	r0, r0, #800	; 0x320
     3f8:	ldr	r1, [sp, #32]
     3fc:	movw	r2, #80	; 0x50
     400:	mul	r1, r1, r2
     404:	add	r0, r0, r1
     408:	ldr	r0, [r0]
     40c:	cmp	r0, #0
     410:	bne	428 <print_full_field_name+0x428>
     414:	ldr	r0, [fp, #-4]
     418:	movw	r1, #0
     41c:	movt	r1, #0
     420:	bl	0 <fprintf>
     424:	b	438 <print_full_field_name+0x438>
     428:	ldr	r0, [fp, #-4]
     42c:	movw	r1, #0
     430:	movt	r1, #0
     434:	bl	0 <fprintf>
     438:	ldr	r0, [fp, #-4]
     43c:	ldr	r1, [sp, #32]
     440:	bl	47c <print_array_dim>
     444:	ldr	r0, [sp, #32]
     448:	add	r0, r0, #1
     44c:	str	r0, [sp, #32]
     450:	ldr	r0, [sp, #32]
     454:	cmp	r0, #0
     458:	ble	46c <print_full_field_name+0x46c>
     45c:	ldr	r0, [fp, #-4]
     460:	movw	r1, #0
     464:	movt	r1, #0
     468:	bl	0 <fprintf>
     46c:	b	470 <print_full_field_name+0x470>
     470:	b	474 <print_full_field_name+0x474>
     474:	mov	sp, fp
     478:	pop	{fp, pc}

0000047c <print_array_dim>:
     47c:	push	{fp, lr}
     480:	mov	fp, sp
     484:	sub	sp, sp, #32
     488:	movw	r2, #0
     48c:	movt	r2, #0
     490:	add	r2, r2, #800	; 0x320
     494:	str	r0, [fp, #-4]
     498:	str	r1, [fp, #-8]
     49c:	ldr	r0, [fp, #-8]
     4a0:	movw	r1, #80	; 0x50
     4a4:	mul	r0, r0, r1
     4a8:	add	r0, r2, r0
     4ac:	str	r0, [fp, #-12]
     4b0:	movw	r0, #0
     4b4:	str	r0, [sp, #16]
     4b8:	ldr	r0, [sp, #16]
     4bc:	ldr	r1, [fp, #-12]
     4c0:	ldr	r1, [r1, #4]
     4c4:	cmp	r0, r1
     4c8:	bge	648 <print_array_dim+0x1cc>
     4cc:	ldr	r0, [sp, #16]
     4d0:	cmp	r0, #0
     4d4:	ble	4e8 <print_array_dim+0x6c>
     4d8:	ldr	r0, [fp, #-4]
     4dc:	movw	r1, #0
     4e0:	movt	r1, #0
     4e4:	bl	0 <fprintf>
     4e8:	movw	r0, #0
     4ec:	movt	r0, #0
     4f0:	ldr	r0, [r0]
     4f4:	cmp	r0, #0
     4f8:	beq	5dc <print_array_dim+0x160>
     4fc:	movw	r0, #0
     500:	movt	r0, #0
     504:	add	r0, r0, #72	; 0x48
     508:	ldr	r1, [fp, #-12]
     50c:	ldr	r1, [r1]
     510:	ldr	r2, [sp, #16]
     514:	add	r1, r1, r2
     518:	movw	r2, #0
     51c:	movt	r2, #0
     520:	add	r1, r2, r1, lsl #2
     524:	add	r1, r1, #72	; 0x48
     528:	ldr	r1, [r1]
     52c:	cmp	r1, #0
     530:	beq	590 <print_array_dim+0x114>
     534:	movw	r0, #0
     538:	movt	r0, #0
     53c:	add	r0, r0, #4
     540:	ldr	r1, [fp, #-4]
     544:	ldr	r2, [fp, #-12]
     548:	ldr	r2, [r2]
     54c:	ldr	r3, [sp, #16]
     550:	add	r2, r2, r3
     554:	movw	r3, #0
     558:	movt	r3, #0
     55c:	add	r2, r3, r2, lsl #2
     560:	ldr	r3, [r2, #36]	; 0x24
     564:	add	r2, r2, #4
     568:	ldr	r2, [r2]
     56c:	str	r0, [sp, #12]
     570:	mov	r0, r1
     574:	movw	r1, #0
     578:	movt	r1, #0
     57c:	str	r2, [sp, #8]
     580:	mov	r2, r3
     584:	ldr	r3, [sp, #8]
     588:	bl	0 <fprintf>
     58c:	b	5d8 <print_array_dim+0x15c>
     590:	movw	r0, #0
     594:	movt	r0, #0
     598:	add	r0, r0, #4
     59c:	ldr	r1, [fp, #-4]
     5a0:	ldr	r2, [fp, #-12]
     5a4:	ldr	r2, [r2]
     5a8:	ldr	r3, [sp, #16]
     5ac:	add	r2, r2, r3
     5b0:	movw	r3, #0
     5b4:	movt	r3, #0
     5b8:	add	r2, r3, r2, lsl #2
     5bc:	add	r2, r2, #4
     5c0:	ldr	r2, [r2]
     5c4:	str	r0, [sp, #4]
     5c8:	mov	r0, r1
     5cc:	movw	r1, #0
     5d0:	movt	r1, #0
     5d4:	bl	0 <fprintf>
     5d8:	b	634 <print_array_dim+0x1b8>
     5dc:	ldr	r0, [fp, #-12]
     5e0:	add	r0, r0, #8
     5e4:	ldr	r1, [sp, #16]
     5e8:	add	r0, r0, r1, lsl #2
     5ec:	ldr	r0, [r0]
     5f0:	cmn	r0, #1
     5f4:	bne	60c <print_array_dim+0x190>
     5f8:	ldr	r0, [fp, #-4]
     5fc:	movw	r1, #0
     600:	movt	r1, #0
     604:	bl	0 <fprintf>
     608:	b	630 <print_array_dim+0x1b4>
     60c:	ldr	r0, [fp, #-4]
     610:	ldr	r1, [fp, #-12]
     614:	add	r1, r1, #8
     618:	ldr	r2, [sp, #16]
     61c:	add	r1, r1, r2, lsl #2
     620:	ldr	r2, [r1]
     624:	movw	r1, #0
     628:	movt	r1, #0
     62c:	bl	0 <fprintf>
     630:	b	634 <print_array_dim+0x1b8>
     634:	b	638 <print_array_dim+0x1bc>
     638:	ldr	r0, [sp, #16]
     63c:	add	r0, r0, #1
     640:	str	r0, [sp, #16]
     644:	b	4b8 <print_array_dim+0x3c>
     648:	mov	sp, fp
     64c:	pop	{fp, pc}

00000650 <traverse_info_init>:
     650:	movw	r0, #0
     654:	movt	r0, #0
     658:	movw	r1, #0
     65c:	str	r1, [r0, #4]
     660:	str	r1, [r0, #136]	; 0x88
     664:	str	r1, [r0, #3360]	; 0xd20
     668:	str	r1, [r0, #3748]	; 0xea4
     66c:	bx	lr

00000670 <traverse_info_done>:
     670:	push	{fp, lr}
     674:	mov	fp, sp
     678:	movw	r0, #0
     67c:	movt	r0, #0
     680:	ldr	r0, [r0, #4]
     684:	movw	r1, #0
     688:	cmp	r0, r1
     68c:	beq	6a0 <traverse_info_done+0x30>
     690:	movw	r0, #0
     694:	movt	r0, #0
     698:	ldr	r0, [r0, #4]
     69c:	bl	0 <coda_close>
     6a0:	movw	r0, #0
     6a4:	movt	r0, #0
     6a8:	ldr	r0, [r0, #664]	; 0x298
     6ac:	movw	r1, #0
     6b0:	cmp	r0, r1
     6b4:	beq	6c8 <traverse_info_done+0x58>
     6b8:	movw	r0, #0
     6bc:	movt	r0, #0
     6c0:	add	r0, r0, #664	; 0x298
     6c4:	bl	0 <codadump_filter_remove>
     6c8:	pop	{fp, pc}

000006cc <traverse_product>:
     6cc:	push	{fp, lr}
     6d0:	mov	fp, sp
     6d4:	sub	sp, sp, #16
     6d8:	movw	r0, #0
     6dc:	movt	r0, #0
     6e0:	add	r1, r0, #4
     6e4:	ldr	r0, [r0]
     6e8:	bl	0 <coda_open>
     6ec:	str	r0, [fp, #-4]
     6f0:	ldr	r0, [fp, #-4]
     6f4:	cmp	r0, #0
     6f8:	beq	740 <traverse_product+0x74>
     6fc:	bl	0 <coda_get_errno>
     700:	ldr	r0, [r0]
     704:	cmn	r0, #21
     708:	bne	740 <traverse_product+0x74>
     70c:	movw	r0, #0
     710:	bl	0 <coda_set_option_use_mmap>
     714:	movw	r1, #0
     718:	movt	r1, #0
     71c:	add	r2, r1, #4
     720:	ldr	r1, [r1]
     724:	str	r0, [sp, #8]
     728:	mov	r0, r1
     72c:	mov	r1, r2
     730:	bl	0 <coda_open>
     734:	str	r0, [fp, #-4]
     738:	movw	r0, #1
     73c:	bl	0 <coda_set_option_use_mmap>
     740:	ldr	r0, [fp, #-4]
     744:	cmp	r0, #0
     748:	beq	758 <traverse_product+0x8c>
     74c:	movw	r0, #0
     750:	movt	r0, #0
     754:	blx	r0
     758:	movw	r0, #0
     75c:	movt	r0, #0
     760:	add	r1, r0, #144	; 0x90
     764:	ldr	r0, [r0, #4]
     768:	str	r0, [sp, #4]
     76c:	mov	r0, r1
     770:	ldr	r1, [sp, #4]
     774:	bl	0 <coda_cursor_set_product>
     778:	cmp	r0, #0
     77c:	beq	78c <traverse_product+0xc0>
     780:	movw	r0, #0
     784:	movt	r0, #0
     788:	blx	r0
     78c:	movw	r0, #0
     790:	movt	r0, #0
     794:	add	r1, r0, #144	; 0x90
     798:	add	r0, r0, #8
     79c:	movw	r2, #0
     7a0:	movt	r2, #0
     7a4:	ldr	r3, [r2, #136]	; 0x88
     7a8:	add	r2, r2, r3, lsl #2
     7ac:	add	r2, r2, #8
     7b0:	str	r0, [sp]
     7b4:	mov	r0, r1
     7b8:	mov	r1, r2
     7bc:	bl	0 <coda_cursor_get_type>
     7c0:	cmp	r0, #0
     7c4:	beq	7d4 <traverse_product+0x108>
     7c8:	movw	r0, #0
     7cc:	movt	r0, #0
     7d0:	blx	r0
     7d4:	bl	800 <traverse_data>
     7d8:	movw	r0, #0
     7dc:	movt	r0, #0
     7e0:	ldr	r0, [r0, #4]
     7e4:	bl	0 <coda_close>
     7e8:	movw	r1, #0
     7ec:	movt	r1, #0
     7f0:	movw	r2, #0
     7f4:	str	r2, [r1, #4]
     7f8:	mov	sp, fp
     7fc:	pop	{fp, pc}

00000800 <traverse_data>:
     800:	push	{fp, lr}
     804:	mov	fp, sp
     808:	sub	sp, sp, #88	; 0x58
     80c:	movw	r0, #0
     810:	movt	r0, #0
     814:	add	r0, r0, #8
     818:	movw	r1, #0
     81c:	movt	r1, #0
     820:	ldr	r2, [r1, #136]	; 0x88
     824:	add	r1, r1, r2, lsl #2
     828:	add	r1, r1, #8
     82c:	ldr	r1, [r1]
     830:	str	r0, [fp, #-32]	; 0xffffffe0
     834:	mov	r0, r1
     838:	sub	r1, fp, #4
     83c:	bl	0 <coda_type_get_class>
     840:	cmp	r0, #0
     844:	beq	854 <traverse_data+0x54>
     848:	movw	r0, #0
     84c:	movt	r0, #0
     850:	blx	r0
     854:	ldr	r0, [fp, #-4]
     858:	cmp	r0, #6
     85c:	str	r0, [fp, #-36]	; 0xffffffdc
     860:	bhi	e40 <traverse_data+0x640>
     864:	add	r0, pc, #8
     868:	ldr	r1, [fp, #-36]	; 0xffffffdc
     86c:	ldr	r0, [r0, r1, lsl #2]
     870:	mov	pc, r0
     874:	.word	0x00000890
     878:	.word	0x00000bac
     87c:	.word	0x00000c64
     880:	.word	0x00000c64
     884:	.word	0x00000c64
     888:	.word	0x00000c64
     88c:	.word	0x00000d14
     890:	movw	r0, #0
     894:	movt	r0, #0
     898:	ldr	r0, [r0, #136]	; 0x88
     89c:	cmp	r0, #31
     8a0:	blt	8a8 <traverse_data+0xa8>
     8a4:	b	e40 <traverse_data+0x640>
     8a8:	movw	r0, #0
     8ac:	movt	r0, #0
     8b0:	add	r0, r0, #8
     8b4:	movw	r1, #0
     8b8:	movt	r1, #0
     8bc:	ldr	r2, [r1, #3748]	; 0xea4
     8c0:	add	r2, r2, #1
     8c4:	str	r2, [r1, #3748]	; 0xea4
     8c8:	ldr	r2, [r1, #136]	; 0x88
     8cc:	add	r1, r1, r2, lsl #2
     8d0:	add	r1, r1, #8
     8d4:	ldr	r1, [r1]
     8d8:	str	r0, [fp, #-40]	; 0xffffffd8
     8dc:	mov	r0, r1
     8e0:	sub	r1, fp, #8
     8e4:	bl	0 <coda_type_get_num_record_fields>
     8e8:	cmp	r0, #0
     8ec:	beq	8fc <traverse_data+0xfc>
     8f0:	movw	r0, #0
     8f4:	movt	r0, #0
     8f8:	blx	r0
     8fc:	movw	r0, #0
     900:	movt	r0, #0
     904:	add	r0, r0, #664	; 0x298
     908:	movw	r1, #0
     90c:	movt	r1, #0
     910:	ldr	r2, [r1, #136]	; 0x88
     914:	add	r2, r2, #1
     918:	str	r2, [r1, #136]	; 0x88
     91c:	ldr	r2, [r1, #796]	; 0x31c
     920:	add	r1, r1, r2, lsl #2
     924:	add	r1, r1, #664	; 0x298
     928:	ldr	r1, [r1]
     92c:	movw	r2, #0
     930:	cmp	r1, r2
     934:	beq	b4c <traverse_data+0x34c>
     938:	movw	r0, #0
     93c:	movt	r0, #0
     940:	add	r0, r0, #664	; 0x298
     944:	movw	r1, #0
     948:	movt	r1, #0
     94c:	ldr	r2, [r1, #796]	; 0x31c
     950:	add	r1, r1, r2, lsl #2
     954:	add	r1, r1, #664	; 0x298
     958:	ldr	r1, [r1]
     95c:	str	r1, [fp, #-16]
     960:	movw	r0, #0
     964:	movt	r0, #0
     968:	add	r0, r0, #664	; 0x298
     96c:	movw	r1, #0
     970:	movt	r1, #0
     974:	ldr	r2, [r1, #796]	; 0x31c
     978:	add	r1, r1, r2, lsl #2
     97c:	add	r1, r1, #664	; 0x298
     980:	ldr	r1, [r1]
     984:	movw	r2, #0
     988:	cmp	r1, r2
     98c:	beq	b20 <traverse_data+0x320>
     990:	movw	r0, #0
     994:	movt	r0, #0
     998:	add	r0, r0, #664	; 0x298
     99c:	movw	r1, #0
     9a0:	movt	r1, #0
     9a4:	ldr	r2, [r1, #796]	; 0x31c
     9a8:	add	r1, r1, r2, lsl #2
     9ac:	add	r1, r1, #664	; 0x298
     9b0:	ldr	r1, [r1]
     9b4:	str	r0, [sp, #44]	; 0x2c
     9b8:	mov	r0, r1
     9bc:	bl	0 <codadump_filter_get_fieldname>
     9c0:	str	r0, [fp, #-20]	; 0xffffffec
     9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     9c8:	movw	r1, #0
     9cc:	cmp	r0, r1
     9d0:	beq	9d8 <traverse_data+0x1d8>
     9d4:	b	9f8 <traverse_data+0x1f8>
     9d8:	movw	r0, #0
     9dc:	movt	r0, #0
     9e0:	movw	r1, #0
     9e4:	movt	r1, #0
     9e8:	movw	r2, #393	; 0x189
     9ec:	movw	r3, #0
     9f0:	movt	r3, #0
     9f4:	bl	0 <__assert_fail>
     9f8:	movw	r0, #0
     9fc:	movt	r0, #0
     a00:	add	r0, r0, #8
     a04:	movw	r1, #0
     a08:	movt	r1, #0
     a0c:	ldr	r2, [r1, #136]	; 0x88
     a10:	sub	r2, r2, #1
     a14:	add	r1, r1, r2, lsl #2
     a18:	add	r1, r1, #8
     a1c:	ldr	r1, [r1]
     a20:	ldr	r2, [fp, #-20]	; 0xffffffec
     a24:	str	r0, [sp, #40]	; 0x28
     a28:	mov	r0, r1
     a2c:	mov	r1, r2
     a30:	sub	r2, fp, #12
     a34:	bl	0 <coda_type_get_record_field_index_from_name>
     a38:	cmp	r0, #0
     a3c:	beq	a88 <traverse_data+0x288>
     a40:	bl	0 <coda_get_errno>
     a44:	ldr	r0, [r0]
     a48:	cmn	r0, #102	; 0x66
     a4c:	bne	a7c <traverse_data+0x27c>
     a50:	movw	r0, #0
     a54:	movt	r0, #0
     a58:	ldr	r0, [r0]
     a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
     a60:	movw	r1, #0
     a64:	movt	r1, #0
     a68:	bl	0 <fprintf>
     a6c:	movw	r1, #1
     a70:	str	r0, [sp, #36]	; 0x24
     a74:	mov	r0, r1
     a78:	bl	0 <exit>
     a7c:	movw	r0, #0
     a80:	movt	r0, #0
     a84:	blx	r0
     a88:	movw	r0, #0
     a8c:	movt	r0, #0
     a90:	add	r0, r0, #664	; 0x298
     a94:	movw	r1, #0
     a98:	movt	r1, #0
     a9c:	ldr	r2, [r1, #796]	; 0x31c
     aa0:	add	r3, r1, #664	; 0x298
     aa4:	ldr	r2, [r3, r2, lsl #2]
     aa8:	str	r0, [sp, #32]
     aac:	mov	r0, r2
     ab0:	str	r1, [sp, #28]
     ab4:	str	r3, [sp, #24]
     ab8:	bl	0 <codadump_filter_get_subfilter>
     abc:	ldr	r1, [sp, #28]
     ac0:	ldr	r2, [r1, #796]	; 0x31c
     ac4:	ldr	r3, [sp, #24]
     ac8:	add	r2, r3, r2, lsl #2
     acc:	str	r0, [r2, #4]
     ad0:	ldr	r0, [r1, #796]	; 0x31c
     ad4:	add	r0, r0, #1
     ad8:	str	r0, [r1, #796]	; 0x31c
     adc:	ldr	r0, [fp, #-12]
     ae0:	mov	r1, #1
     ae4:	bl	e48 <traverse_record>
     ae8:	ldr	r0, [sp, #28]
     aec:	ldr	r1, [r0, #796]	; 0x31c
     af0:	sub	r1, r1, #1
     af4:	str	r1, [r0, #796]	; 0x31c
     af8:	ldr	r1, [r0, #796]	; 0x31c
     afc:	ldr	r2, [sp, #24]
     b00:	ldr	r0, [r2, r1, lsl #2]
     b04:	bl	0 <codadump_filter_get_next_filter>
     b08:	ldr	r1, [sp, #28]
     b0c:	ldr	r2, [r1, #796]	; 0x31c
     b10:	ldr	r3, [sp, #24]
     b14:	add	r2, r3, r2, lsl #2
     b18:	str	r0, [r2]
     b1c:	b	960 <traverse_data+0x160>
     b20:	movw	r0, #0
     b24:	movt	r0, #0
     b28:	add	r0, r0, #664	; 0x298
     b2c:	ldr	r1, [fp, #-16]
     b30:	movw	r2, #0
     b34:	movt	r2, #0
     b38:	ldr	r3, [r2, #796]	; 0x31c
     b3c:	add	r2, r2, r3, lsl #2
     b40:	add	r2, r2, #664	; 0x298
     b44:	str	r1, [r2]
     b48:	b	b84 <traverse_data+0x384>
     b4c:	movw	r0, #0
     b50:	str	r0, [fp, #-12]
     b54:	ldr	r0, [fp, #-12]
     b58:	ldr	r1, [fp, #-8]
     b5c:	cmp	r0, r1
     b60:	bge	b80 <traverse_data+0x380>
     b64:	ldr	r0, [fp, #-12]
     b68:	movw	r1, #0
     b6c:	bl	e48 <traverse_record>
     b70:	ldr	r0, [fp, #-12]
     b74:	add	r0, r0, #1
     b78:	str	r0, [fp, #-12]
     b7c:	b	b54 <traverse_data+0x354>
     b80:	b	b84 <traverse_data+0x384>
     b84:	movw	r0, #0
     b88:	movt	r0, #0
     b8c:	ldr	r1, [r0, #136]	; 0x88
     b90:	mvn	r2, #0
     b94:	add	r1, r1, r2
     b98:	str	r1, [r0, #136]	; 0x88
     b9c:	ldr	r1, [r0, #3748]	; 0xea4
     ba0:	add	r1, r1, r2
     ba4:	str	r1, [r0, #3748]	; 0xea4
     ba8:	b	e40 <traverse_data+0x640>
     bac:	movw	r0, #0
     bb0:	movt	r0, #0
     bb4:	ldr	r0, [r0, #136]	; 0x88
     bb8:	cmp	r0, #31
     bbc:	blt	bc4 <traverse_data+0x3c4>
     bc0:	b	e40 <traverse_data+0x640>
     bc4:	movw	r0, #0
     bc8:	movt	r0, #0
     bcc:	add	r0, r0, #8
     bd0:	str	r0, [sp, #20]
     bd4:	bl	0 <dim_enter_array>
     bd8:	movw	r0, #0
     bdc:	movt	r0, #0
     be0:	ldr	r1, [r0, #3360]	; 0xd20
     be4:	add	r1, r1, #1
     be8:	str	r1, [r0, #3360]	; 0xd20
     bec:	ldr	r1, [r0, #136]	; 0x88
     bf0:	add	r1, r1, #1
     bf4:	str	r1, [r0, #136]	; 0x88
     bf8:	ldr	r1, [r0, #136]	; 0x88
     bfc:	add	r0, r0, r1, lsl #2
     c00:	ldr	r1, [r0, #4]
     c04:	add	r0, r0, #8
     c08:	str	r0, [sp, #16]
     c0c:	mov	r0, r1
     c10:	ldr	r1, [sp, #16]
     c14:	bl	0 <coda_type_get_array_base_type>
     c18:	cmp	r0, #0
     c1c:	beq	c2c <traverse_data+0x42c>
     c20:	movw	r0, #0
     c24:	movt	r0, #0
     c28:	blx	r0
     c2c:	bl	800 <traverse_data>
     c30:	movw	r0, #0
     c34:	movt	r0, #0
     c38:	movw	r1, #0
     c3c:	movt	r1, #0
     c40:	ldr	r2, [r1, #136]	; 0x88
     c44:	mvn	r3, #0
     c48:	add	r2, r2, r3
     c4c:	str	r2, [r1, #136]	; 0x88
     c50:	ldr	r2, [r1, #3360]	; 0xd20
     c54:	add	r2, r2, r3
     c58:	str	r2, [r1, #3360]	; 0xd20
     c5c:	blx	r0
     c60:	b	e40 <traverse_data+0x640>
     c64:	movw	r0, #0
     c68:	movt	r0, #0
     c6c:	add	r0, r0, #8
     c70:	movw	r1, #0
     c74:	movt	r1, #0
     c78:	ldr	r2, [r1, #136]	; 0x88
     c7c:	add	r1, r1, r2, lsl #2
     c80:	add	r1, r1, #8
     c84:	ldr	r1, [r1]
     c88:	str	r0, [sp, #12]
     c8c:	mov	r0, r1
     c90:	sub	r1, fp, #24
     c94:	bl	0 <coda_type_get_read_type>
     c98:	cmp	r0, #0
     c9c:	beq	cac <traverse_data+0x4ac>
     ca0:	movw	r0, #0
     ca4:	movt	r0, #0
     ca8:	blx	r0
     cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
     cb0:	sub	r0, r0, #11
     cb4:	cmp	r0, #1
     cb8:	bhi	d0c <traverse_data+0x50c>
     cbc:	b	cc0 <traverse_data+0x4c0>
     cc0:	movw	r0, #0
     cc4:	movt	r0, #0
     cc8:	blx	r0
     ccc:	movw	r0, #0
     cd0:	movt	r0, #0
     cd4:	ldr	r1, [r0, #3360]	; 0xd20
     cd8:	add	r1, r1, #1
     cdc:	str	r1, [r0, #3360]	; 0xd20
     ce0:	bl	1064 <handle_data_element>
     ce4:	movw	r0, #0
     ce8:	movt	r0, #0
     cec:	movw	r1, #0
     cf0:	movt	r1, #0
     cf4:	ldr	r2, [r1, #3360]	; 0xd20
     cf8:	mvn	r3, #0
     cfc:	add	r2, r2, r3
     d00:	str	r2, [r1, #3360]	; 0xd20
     d04:	blx	r0
     d08:	b	d10 <traverse_data+0x510>
     d0c:	bl	1064 <handle_data_element>
     d10:	b	e40 <traverse_data+0x640>
     d14:	bl	0 <coda_get_option_bypass_special_types>
     d18:	cmp	r0, #0
     d1c:	beq	d68 <traverse_data+0x568>
     d20:	movw	r0, #0
     d24:	movt	r0, #0
     d28:	add	r0, r0, #8
     d2c:	movw	r1, #0
     d30:	movt	r1, #0
     d34:	ldr	r2, [r1, #136]	; 0x88
     d38:	add	r1, r1, r2, lsl #2
     d3c:	ldr	r2, [r1, #8]!
     d40:	str	r0, [sp, #8]
     d44:	mov	r0, r2
     d48:	bl	0 <coda_type_get_special_base_type>
     d4c:	cmp	r0, #0
     d50:	beq	d60 <traverse_data+0x560>
     d54:	movw	r0, #0
     d58:	movt	r0, #0
     d5c:	blx	r0
     d60:	bl	800 <traverse_data>
     d64:	b	e40 <traverse_data+0x640>
     d68:	movw	r0, #0
     d6c:	movt	r0, #0
     d70:	add	r0, r0, #8
     d74:	movw	r1, #0
     d78:	movt	r1, #0
     d7c:	ldr	r2, [r1, #136]	; 0x88
     d80:	add	r1, r1, r2, lsl #2
     d84:	add	r1, r1, #8
     d88:	ldr	r1, [r1]
     d8c:	str	r0, [sp, #4]
     d90:	mov	r0, r1
     d94:	sub	r1, fp, #28
     d98:	bl	0 <coda_type_get_special_type>
     d9c:	cmp	r0, #0
     da0:	beq	db0 <traverse_data+0x5b0>
     da4:	movw	r0, #0
     da8:	movt	r0, #0
     dac:	blx	r0
     db0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     db4:	cmp	r0, #0
     db8:	str	r0, [sp]
     dbc:	beq	de8 <traverse_data+0x5e8>
     dc0:	b	dc4 <traverse_data+0x5c4>
     dc4:	ldr	r0, [sp]
     dc8:	sub	r1, r0, #1
     dcc:	cmp	r1, #2
     dd0:	bcc	dec <traverse_data+0x5ec>
     dd4:	b	dd8 <traverse_data+0x5d8>
     dd8:	ldr	r0, [sp]
     ddc:	cmp	r0, #3
     de0:	beq	df4 <traverse_data+0x5f4>
     de4:	b	e3c <traverse_data+0x63c>
     de8:	b	e40 <traverse_data+0x640>
     dec:	bl	1064 <handle_data_element>
     df0:	b	e3c <traverse_data+0x63c>
     df4:	movw	r0, #0
     df8:	movt	r0, #0
     dfc:	blx	r0
     e00:	movw	r0, #0
     e04:	movt	r0, #0
     e08:	ldr	r1, [r0, #3360]	; 0xd20
     e0c:	add	r1, r1, #1
     e10:	str	r1, [r0, #3360]	; 0xd20
     e14:	bl	1064 <handle_data_element>
     e18:	movw	r0, #0
     e1c:	movt	r0, #0
     e20:	movw	r1, #0
     e24:	movt	r1, #0
     e28:	ldr	r2, [r1, #3360]	; 0xd20
     e2c:	mvn	r3, #0
     e30:	add	r2, r2, r3
     e34:	str	r2, [r1, #3360]	; 0xd20
     e38:	blx	r0
     e3c:	b	e40 <traverse_data+0x640>
     e40:	mov	sp, fp
     e44:	pop	{fp, pc}

00000e48 <traverse_record>:
     e48:	push	{fp, lr}
     e4c:	mov	fp, sp
     e50:	sub	sp, sp, #40	; 0x28
     e54:	movw	r2, #0
     e58:	movt	r2, #0
     e5c:	add	r2, r2, #8
     e60:	str	r0, [fp, #-4]
     e64:	str	r1, [fp, #-8]
     e68:	ldr	r0, [fp, #-4]
     e6c:	movw	r1, #0
     e70:	movt	r1, #0
     e74:	ldr	r3, [r1, #3748]	; 0xea4
     e78:	add	r3, r1, r3, lsl #2
     e7c:	str	r0, [r3, #3488]	; 0xda0
     e80:	ldr	r0, [r1, #136]	; 0x88
     e84:	sub	r0, r0, #1
     e88:	add	r0, r1, r0, lsl #2
     e8c:	add	r0, r0, #8
     e90:	ldr	r0, [r0]
     e94:	ldr	r1, [fp, #-4]
     e98:	sub	r3, fp, #12
     e9c:	str	r2, [sp, #20]
     ea0:	mov	r2, r3
     ea4:	bl	0 <coda_type_get_record_field_hidden_status>
     ea8:	cmp	r0, #0
     eac:	beq	ebc <traverse_record+0x74>
     eb0:	movw	r0, #0
     eb4:	movt	r0, #0
     eb8:	blx	r0
     ebc:	ldr	r0, [fp, #-12]
     ec0:	cmp	r0, #0
     ec4:	beq	ed8 <traverse_record+0x90>
     ec8:	ldr	r0, [fp, #-8]
     ecc:	cmp	r0, #0
     ed0:	bne	ed8 <traverse_record+0x90>
     ed4:	b	105c <traverse_record+0x214>
     ed8:	movw	r0, #0
     edc:	movt	r0, #0
     ee0:	ldr	r0, [r0]
     ee4:	cmp	r0, #0
     ee8:	beq	f9c <traverse_record+0x154>
     eec:	movw	r0, #0
     ef0:	movt	r0, #0
     ef4:	add	r0, r0, #8
     ef8:	movw	r1, #0
     efc:	movt	r1, #0
     f00:	ldr	r2, [r1, #136]	; 0x88
     f04:	sub	r2, r2, #1
     f08:	add	r1, r1, r2, lsl #2
     f0c:	add	r1, r1, #8
     f10:	ldr	r1, [r1]
     f14:	ldr	r2, [fp, #-4]
     f18:	str	r0, [sp, #16]
     f1c:	mov	r0, r1
     f20:	mov	r1, r2
     f24:	sub	r2, fp, #16
     f28:	bl	0 <coda_type_get_record_field_available_status>
     f2c:	cmp	r0, #0
     f30:	beq	f40 <traverse_record+0xf8>
     f34:	movw	r0, #0
     f38:	movt	r0, #0
     f3c:	blx	r0
     f40:	ldr	r0, [fp, #-16]
     f44:	cmn	r0, #1
     f48:	bne	f68 <traverse_record+0x120>
     f4c:	movw	r0, #0
     f50:	movt	r0, #0
     f54:	blx	r0
     f58:	cmp	r0, #0
     f5c:	bne	f64 <traverse_record+0x11c>
     f60:	b	105c <traverse_record+0x214>
     f64:	b	f68 <traverse_record+0x120>
     f68:	movw	r0, #3364	; 0xd24
     f6c:	movw	r1, #0
     f70:	movt	r1, #0
     f74:	add	r0, r1, r0
     f78:	ldr	r1, [fp, #-16]
     f7c:	movw	r2, #0
     f80:	movt	r2, #0
     f84:	ldr	r3, [r2, #136]	; 0x88
     f88:	sub	r3, r3, #1
     f8c:	add	r2, r2, r3, lsl #2
     f90:	movw	r3, #3364	; 0xd24
     f94:	add	r2, r2, r3
     f98:	str	r1, [r2]
     f9c:	movw	r0, #3620	; 0xe24
     fa0:	movw	r1, #0
     fa4:	movt	r1, #0
     fa8:	add	r0, r1, r0
     fac:	movw	r1, #0
     fb0:	movt	r1, #0
     fb4:	ldr	r2, [r1, #136]	; 0x88
     fb8:	add	r2, r1, r2, lsl #2
     fbc:	ldr	r2, [r2, #4]
     fc0:	ldr	r3, [fp, #-4]
     fc4:	ldr	ip, [r1, #3748]	; 0xea4
     fc8:	sub	ip, ip, #1
     fcc:	add	r1, r1, ip, lsl #2
     fd0:	movw	ip, #3620	; 0xe24
     fd4:	add	r1, r1, ip
     fd8:	str	r0, [sp, #12]
     fdc:	mov	r0, r2
     fe0:	str	r1, [sp, #8]
     fe4:	mov	r1, r3
     fe8:	ldr	r2, [sp, #8]
     fec:	bl	0 <coda_type_get_record_field_name>
     ff0:	cmp	r0, #0
     ff4:	beq	1004 <traverse_record+0x1bc>
     ff8:	movw	r0, #0
     ffc:	movt	r0, #0
    1000:	blx	r0
    1004:	movw	r0, #0
    1008:	movt	r0, #0
    100c:	add	r0, r0, #8
    1010:	movw	r1, #0
    1014:	movt	r1, #0
    1018:	ldr	r2, [r1, #136]	; 0x88
    101c:	add	r1, r1, r2, lsl #2
    1020:	ldr	r2, [r1, #4]
    1024:	ldr	r3, [fp, #-4]
    1028:	add	r1, r1, #8
    102c:	str	r0, [sp, #4]
    1030:	mov	r0, r2
    1034:	str	r1, [sp]
    1038:	mov	r1, r3
    103c:	ldr	r2, [sp]
    1040:	bl	0 <coda_type_get_record_field_type>
    1044:	cmp	r0, #0
    1048:	beq	1058 <traverse_record+0x210>
    104c:	movw	r0, #0
    1050:	movt	r0, #0
    1054:	blx	r0
    1058:	bl	800 <traverse_data>
    105c:	mov	sp, fp
    1060:	pop	{fp, pc}

00001064 <handle_data_element>:
    1064:	push	{fp, lr}
    1068:	mov	fp, sp
    106c:	sub	sp, sp, #56	; 0x38
    1070:	movw	r0, #0
    1074:	movt	r0, #0
    1078:	ldr	r0, [r0]
    107c:	cmp	r0, #0
    1080:	bne	13e8 <handle_data_element+0x384>
    1084:	movw	r0, #0
    1088:	movt	r0, #0
    108c:	ldr	r0, [r0]
    1090:	movw	r1, #1
    1094:	movw	r2, #0
    1098:	bl	0 <print_full_field_name>
    109c:	movw	r0, #0
    10a0:	movt	r0, #0
    10a4:	ldr	r0, [r0]
    10a8:	cmp	r0, #0
    10ac:	beq	1268 <handle_data_element+0x204>
    10b0:	movw	r0, #0
    10b4:	movt	r0, #0
    10b8:	add	r0, r0, #8
    10bc:	movw	r1, #0
    10c0:	movt	r1, #0
    10c4:	ldr	r2, [r1, #136]	; 0x88
    10c8:	add	r1, r1, r2, lsl #2
    10cc:	add	r1, r1, #8
    10d0:	ldr	r1, [r1]
    10d4:	str	r0, [sp, #28]
    10d8:	mov	r0, r1
    10dc:	sub	r1, fp, #4
    10e0:	bl	0 <coda_type_get_class>
    10e4:	cmp	r0, #0
    10e8:	beq	10f8 <handle_data_element+0x94>
    10ec:	movw	r0, #0
    10f0:	movt	r0, #0
    10f4:	blx	r0
    10f8:	ldr	r0, [fp, #-4]
    10fc:	cmp	r0, #6
    1100:	bne	1170 <handle_data_element+0x10c>
    1104:	movw	r0, #0
    1108:	movt	r0, #0
    110c:	add	r0, r0, #8
    1110:	movw	r1, #0
    1114:	movt	r1, #0
    1118:	ldr	r2, [r1, #136]	; 0x88
    111c:	add	r1, r1, r2, lsl #2
    1120:	add	r1, r1, #8
    1124:	ldr	r1, [r1]
    1128:	str	r0, [sp, #24]
    112c:	mov	r0, r1
    1130:	sub	r1, fp, #8
    1134:	bl	0 <coda_type_get_special_type>
    1138:	cmp	r0, #0
    113c:	beq	114c <handle_data_element+0xe8>
    1140:	movw	r0, #0
    1144:	movt	r0, #0
    1148:	blx	r0
    114c:	ldr	r0, [fp, #-8]
    1150:	bl	0 <coda_type_get_special_type_name>
    1154:	movw	r1, #0
    1158:	movt	r1, #0
    115c:	str	r0, [sp, #20]
    1160:	mov	r0, r1
    1164:	ldr	r1, [sp, #20]
    1168:	bl	0 <printf>
    116c:	b	1264 <handle_data_element+0x200>
    1170:	movw	r0, #0
    1174:	movt	r0, #0
    1178:	add	r0, r0, #8
    117c:	movw	r1, #0
    1180:	movt	r1, #0
    1184:	ldr	r2, [r1, #136]	; 0x88
    1188:	add	r1, r1, r2, lsl #2
    118c:	add	r1, r1, #8
    1190:	ldr	r1, [r1]
    1194:	str	r0, [sp, #16]
    1198:	mov	r0, r1
    119c:	sub	r1, fp, #12
    11a0:	bl	0 <coda_type_get_read_type>
    11a4:	cmp	r0, #0
    11a8:	beq	11b8 <handle_data_element+0x154>
    11ac:	movw	r0, #0
    11b0:	movt	r0, #0
    11b4:	blx	r0
    11b8:	ldr	r0, [fp, #-12]
    11bc:	bl	0 <coda_type_get_native_type_name>
    11c0:	movw	r1, #0
    11c4:	movt	r1, #0
    11c8:	str	r0, [sp, #12]
    11cc:	mov	r0, r1
    11d0:	ldr	r1, [sp, #12]
    11d4:	bl	0 <printf>
    11d8:	ldr	r1, [fp, #-12]
    11dc:	cmp	r1, #11
    11e0:	beq	11f0 <handle_data_element+0x18c>
    11e4:	ldr	r0, [fp, #-12]
    11e8:	cmp	r0, #12
    11ec:	bne	1260 <handle_data_element+0x1fc>
    11f0:	movw	r0, #0
    11f4:	movt	r0, #0
    11f8:	bl	0 <printf>
    11fc:	movw	r1, #0
    1200:	movt	r1, #0
    1204:	ldr	r1, [r1, #3360]	; 0xd20
    1208:	cmp	r1, #0
    120c:	ble	1214 <handle_data_element+0x1b0>
    1210:	b	1234 <handle_data_element+0x1d0>
    1214:	movw	r0, #0
    1218:	movt	r0, #0
    121c:	movw	r1, #0
    1220:	movt	r1, #0
    1224:	movw	r2, #238	; 0xee
    1228:	movw	r3, #0
    122c:	movt	r3, #0
    1230:	bl	0 <__assert_fail>
    1234:	movw	r0, #0
    1238:	movt	r0, #0
    123c:	ldr	r0, [r0]
    1240:	movw	r1, #0
    1244:	movt	r1, #0
    1248:	ldr	r1, [r1, #3360]	; 0xd20
    124c:	sub	r1, r1, #1
    1250:	bl	47c <print_array_dim>
    1254:	movw	r0, #0
    1258:	movt	r0, #0
    125c:	bl	0 <printf>
    1260:	b	1264 <handle_data_element+0x200>
    1264:	b	1268 <handle_data_element+0x204>
    1268:	movw	r0, #0
    126c:	movt	r0, #0
    1270:	ldr	r0, [r0]
    1274:	cmp	r0, #0
    1278:	beq	12f8 <handle_data_element+0x294>
    127c:	movw	r0, #0
    1280:	movt	r0, #0
    1284:	add	r0, r0, #8
    1288:	movw	r1, #0
    128c:	movt	r1, #0
    1290:	ldr	r2, [r1, #136]	; 0x88
    1294:	add	r1, r1, r2, lsl #2
    1298:	add	r1, r1, #8
    129c:	ldr	r1, [r1]
    12a0:	str	r0, [sp, #8]
    12a4:	mov	r0, r1
    12a8:	sub	r1, fp, #16
    12ac:	bl	0 <coda_type_get_unit>
    12b0:	cmp	r0, #0
    12b4:	beq	12c4 <handle_data_element+0x260>
    12b8:	movw	r0, #0
    12bc:	movt	r0, #0
    12c0:	blx	r0
    12c4:	ldr	r0, [fp, #-16]
    12c8:	movw	r1, #0
    12cc:	cmp	r0, r1
    12d0:	beq	12f4 <handle_data_element+0x290>
    12d4:	ldr	r0, [fp, #-16]
    12d8:	ldrb	r0, [r0]
    12dc:	cmp	r0, #0
    12e0:	beq	12f4 <handle_data_element+0x290>
    12e4:	ldr	r1, [fp, #-16]
    12e8:	movw	r0, #0
    12ec:	movt	r0, #0
    12f0:	bl	0 <printf>
    12f4:	b	12f8 <handle_data_element+0x294>
    12f8:	movw	r0, #0
    12fc:	movt	r0, #0
    1300:	ldr	r0, [r0]
    1304:	cmp	r0, #0
    1308:	beq	1388 <handle_data_element+0x324>
    130c:	movw	r0, #0
    1310:	movt	r0, #0
    1314:	add	r0, r0, #8
    1318:	movw	r1, #0
    131c:	movt	r1, #0
    1320:	ldr	r2, [r1, #136]	; 0x88
    1324:	add	r1, r1, r2, lsl #2
    1328:	add	r1, r1, #8
    132c:	ldr	r1, [r1]
    1330:	str	r0, [sp, #4]
    1334:	mov	r0, r1
    1338:	sub	r1, fp, #20
    133c:	bl	0 <coda_type_get_description>
    1340:	cmp	r0, #0
    1344:	beq	1354 <handle_data_element+0x2f0>
    1348:	movw	r0, #0
    134c:	movt	r0, #0
    1350:	blx	r0
    1354:	ldr	r0, [fp, #-20]	; 0xffffffec
    1358:	movw	r1, #0
    135c:	cmp	r0, r1
    1360:	beq	1384 <handle_data_element+0x320>
    1364:	ldr	r0, [fp, #-20]	; 0xffffffec
    1368:	ldrb	r0, [r0]
    136c:	cmp	r0, #0
    1370:	beq	1384 <handle_data_element+0x320>
    1374:	ldr	r1, [fp, #-20]	; 0xffffffec
    1378:	movw	r0, #0
    137c:	movt	r0, #0
    1380:	bl	0 <printf>
    1384:	b	1388 <handle_data_element+0x324>
    1388:	movw	r0, #0
    138c:	movt	r0, #0
    1390:	bl	0 <printf>
    1394:	movw	r1, #0
    1398:	movt	r1, #0
    139c:	ldr	r1, [r1]
    13a0:	cmp	r1, #0
    13a4:	beq	13e4 <handle_data_element+0x380>
    13a8:	movw	r0, #0
    13ac:	str	r0, [fp, #-24]	; 0xffffffe8
    13b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13b4:	movw	r1, #0
    13b8:	movt	r1, #0
    13bc:	ldr	r1, [r1]
    13c0:	cmp	r0, r1
    13c4:	bge	13e0 <handle_data_element+0x37c>
    13c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13cc:	bl	0 <print_all_distinct_dims>
    13d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13d4:	add	r0, r0, #1
    13d8:	str	r0, [fp, #-24]	; 0xffffffe8
    13dc:	b	13b0 <handle_data_element+0x34c>
    13e0:	b	13e4 <handle_data_element+0x380>
    13e4:	b	140c <handle_data_element+0x3a8>
    13e8:	movw	r0, #0
    13ec:	movt	r0, #0
    13f0:	ldr	r0, [r0]
    13f4:	cmp	r0, #1
    13f8:	bne	1408 <handle_data_element+0x3a4>
    13fc:	movw	r0, #0
    1400:	movt	r0, #0
    1404:	blx	r0
    1408:	b	140c <handle_data_element+0x3a8>
    140c:	mov	sp, fp
    1410:	pop	{fp, pc}
