
../compcert-repos/prog2/CMakeFiles/0.11.1.dir/Aula00_Conceitos_base/11_ADDREV.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <invert>:
   0:	cmp	r0, #0
   4:	moveq	r0, #0
   8:	bxeq	lr
   c:	movw	ip, #26215	; 0x6667
  10:	mov	r1, r0
  14:	mov	r0, #0
  18:	movt	ip, #26214	; 0x6666
  1c:	smmul	r3, r1, ip
  20:	add	r0, r0, r0, lsl #2
  24:	asr	r2, r3, #2
  28:	add	r2, r2, r3, lsr #31
  2c:	add	r3, r2, r2, lsl #2
  30:	sub	r3, r1, r3, lsl #1
  34:	add	r1, r1, #9
  38:	cmp	r1, #18
  3c:	add	r0, r3, r0, lsl #1
  40:	mov	r1, r2
  44:	bhi	1c <invert+0x1c>
  48:	bx	lr

0000004c <main>:
  4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  50:	add	fp, sp, #28
  54:	sub	sp, sp, #12
  58:	movw	r0, #0
  5c:	add	r1, sp, #8
  60:	movt	r0, #0
  64:	bl	0 <__isoc99_scanf>
  68:	ldr	r0, [sp, #8]
  6c:	cmp	r0, #1
  70:	blt	178 <main+0x12c>
  74:	movw	r8, #0
  78:	movw	r5, #26215	; 0x6667
  7c:	mov	r4, #0
  80:	add	r9, sp, #4
  84:	mov	sl, sp
  88:	movt	r8, #0
  8c:	movt	r5, #26214	; 0x6666
  90:	movw	r0, #0
  94:	mov	r1, r9
  98:	mov	r2, sl
  9c:	movt	r0, #0
  a0:	bl	0 <__isoc99_scanf>
  a4:	ldr	r1, [sp, #4]
  a8:	mov	r0, #0
  ac:	cmp	r1, #0
  b0:	beq	e4 <main+0x98>
  b4:	mov	r0, #0
  b8:	smmul	r2, r1, r5
  bc:	add	r0, r0, r0, lsl #2
  c0:	asr	r3, r2, #2
  c4:	add	r2, r3, r2, lsr #31
  c8:	add	r3, r2, r2, lsl #2
  cc:	sub	r3, r1, r3, lsl #1
  d0:	add	r1, r1, #9
  d4:	cmp	r1, #18
  d8:	add	r0, r3, r0, lsl #1
  dc:	mov	r1, r2
  e0:	bhi	b8 <main+0x6c>
  e4:	ldr	r3, [sp]
  e8:	mov	r1, #0
  ec:	mov	r2, #0
  f0:	cmp	r3, #0
  f4:	beq	128 <main+0xdc>
  f8:	mov	r2, #0
  fc:	smmul	r6, r3, r5
 100:	add	r2, r2, r2, lsl #2
 104:	asr	r7, r6, #2
 108:	add	r7, r7, r6, lsr #31
 10c:	add	r6, r7, r7, lsl #2
 110:	sub	r6, r3, r6, lsl #1
 114:	add	r3, r3, #9
 118:	cmp	r3, #18
 11c:	add	r2, r6, r2, lsl #1
 120:	mov	r3, r7
 124:	bhi	fc <main+0xb0>
 128:	adds	r0, r2, r0
 12c:	beq	160 <main+0x114>
 130:	mov	r1, #0
 134:	smmul	r2, r0, r5
 138:	add	r1, r1, r1, lsl #2
 13c:	asr	r3, r2, #2
 140:	add	r2, r3, r2, lsr #31
 144:	add	r3, r2, r2, lsl #2
 148:	sub	r3, r0, r3, lsl #1
 14c:	add	r0, r0, #9
 150:	cmp	r0, #18
 154:	add	r1, r3, r1, lsl #1
 158:	mov	r0, r2
 15c:	bhi	134 <main+0xe8>
 160:	mov	r0, r8
 164:	bl	0 <printf>
 168:	ldr	r0, [sp, #8]
 16c:	add	r4, r4, #1
 170:	cmp	r4, r0
 174:	blt	90 <main+0x44>
 178:	mov	r0, #0
 17c:	sub	sp, fp, #28
 180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
