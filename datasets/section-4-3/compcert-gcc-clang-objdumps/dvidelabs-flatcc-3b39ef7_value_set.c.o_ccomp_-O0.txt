
../repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/value_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ht_int_hash_function>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	movw	r1, #31153	; 0x79b1
  14:	movt	r1, #40503	; 0x9e37
  18:	eor	r2, r0, #82	; 0x52
  1c:	eor	r2, r2, #15104	; 0x3b00
  20:	eor	r2, r2, #6881280	; 0x690000
  24:	eor	r2, r2, #788529152	; 0x2f000000
  28:	mul	r0, r1, r2
  2c:	ldr	lr, [sp, #4]
  30:	add	sp, sp, #8
  34:	bx	lr

00000038 <value_hash_function>:
  38:	mov	ip, sp
  3c:	sub	sp, sp, #8
  40:	str	ip, [sp]
  44:	str	lr, [sp, #4]
  48:	ldrh	r3, [r0, #8]
  4c:	cmp	r3, #4
  50:	beq	9c <value_hash_function+0x64>
  54:	cmp	r3, #5
  58:	beq	84 <value_hash_function+0x4c>
  5c:	cmp	r3, #6
  60:	bne	7c <value_hash_function+0x44>
  64:	ldrb	r1, [r0]
  68:	ldrh	r2, [r0, #8]
  6c:	eor	r0, r1, r2
  70:	mov	r1, #1
  74:	bl	0 <ht_int_hash_function>
  78:	b	b0 <value_hash_function+0x78>
  7c:	mov	r0, #0
  80:	b	b0 <value_hash_function+0x78>
  84:	ldr	r1, [r0]
  88:	ldrh	r0, [r0, #8]
  8c:	eor	r0, r1, r0
  90:	mov	r1, #8
  94:	bl	0 <ht_int_hash_function>
  98:	b	b0 <value_hash_function+0x78>
  9c:	ldr	r1, [r0]
  a0:	ldrh	ip, [r0, #8]
  a4:	eor	r0, r1, ip
  a8:	mov	r1, #8
  ac:	bl	0 <ht_int_hash_function>
  b0:	ldr	lr, [sp, #4]
  b4:	add	sp, sp, #8
  b8:	bx	lr

000000bc <fb_value_set_clear>:
  bc:	mov	ip, sp
  c0:	sub	sp, sp, #8
  c4:	str	ip, [sp]
  c8:	str	lr, [sp, #4]
  cc:	bl	a7c <ht_clear>
  d0:	ldr	lr, [sp, #4]
  d4:	add	sp, sp, #8
  d8:	bx	lr

000000dc <fb_value_set_destroy>:
  dc:	mov	ip, sp
  e0:	sub	sp, sp, #16
  e4:	str	ip, [sp]
  e8:	str	lr, [sp, #4]
  ec:	str	r4, [sp, #8]
  f0:	mov	r4, r0
  f4:	cmp	r1, #0
  f8:	beq	104 <fb_value_set_destroy+0x28>
  fc:	mov	r0, r4
 100:	bl	9e0 <ht_visit>
 104:	mov	r0, r4
 108:	bl	a7c <ht_clear>
 10c:	ldr	r4, [sp, #8]
 110:	ldr	lr, [sp, #4]
 114:	add	sp, sp, #16
 118:	bx	lr

0000011c <fb_value_set_init>:
 11c:	mov	ip, sp
 120:	sub	sp, sp, #8
 124:	str	ip, [sp]
 128:	str	lr, [sp, #4]
 12c:	bl	320 <ht_init>
 130:	ldr	lr, [sp, #4]
 134:	add	sp, sp, #8
 138:	bx	lr

0000013c <fb_value_set_resize>:
 13c:	mov	ip, sp
 140:	sub	sp, sp, #8
 144:	str	ip, [sp]
 148:	str	lr, [sp, #4]
 14c:	bl	450 <ht_resize>
 150:	ldr	lr, [sp, #4]
 154:	add	sp, sp, #8
 158:	bx	lr

0000015c <fb_value_set_insert>:
 15c:	mov	ip, sp
 160:	sub	sp, sp, #24
 164:	str	ip, [sp, #4]
 168:	str	lr, [sp, #8]
 16c:	str	r4, [sp, #16]
 170:	ldr	r4, [ip]
 174:	str	r4, [sp]
 178:	bl	550 <ht_insert>
 17c:	ldr	r4, [sp, #16]
 180:	ldr	lr, [sp, #8]
 184:	add	sp, sp, #24
 188:	bx	lr

0000018c <fb_value_set_insert_item>:
 18c:	mov	ip, sp
 190:	sub	sp, sp, #32
 194:	str	ip, [sp, #4]
 198:	str	lr, [sp, #8]
 19c:	str	r4, [sp, #16]
 1a0:	str	r5, [sp, #20]
 1a4:	str	r6, [sp, #24]
 1a8:	str	r7, [sp, #28]
 1ac:	mov	r5, r2
 1b0:	mov	r4, r1
 1b4:	mov	r6, r0
 1b8:	mov	r0, r4
 1bc:	bl	b8c <ht_key>
 1c0:	mov	r7, r0
 1c4:	mov	r0, r4
 1c8:	bl	ba8 <ht_key_len>
 1cc:	mov	r2, r0
 1d0:	str	r5, [sp]
 1d4:	mov	r3, r4
 1d8:	mov	r1, r7
 1dc:	mov	r0, r6
 1e0:	bl	550 <ht_insert>
 1e4:	ldr	r4, [sp, #16]
 1e8:	ldr	r5, [sp, #20]
 1ec:	ldr	r6, [sp, #24]
 1f0:	ldr	r7, [sp, #28]
 1f4:	ldr	lr, [sp, #8]
 1f8:	add	sp, sp, #32
 1fc:	bx	lr

00000200 <fb_value_set_find>:
 200:	mov	ip, sp
 204:	sub	sp, sp, #8
 208:	str	ip, [sp]
 20c:	str	lr, [sp, #4]
 210:	bl	7e4 <ht_find>
 214:	ldr	lr, [sp, #4]
 218:	add	sp, sp, #8
 21c:	bx	lr

00000220 <fb_value_set_find_item>:
 220:	mov	ip, sp
 224:	sub	sp, sp, #24
 228:	str	ip, [sp]
 22c:	str	lr, [sp, #4]
 230:	str	r4, [sp, #8]
 234:	str	r5, [sp, #12]
 238:	str	r6, [sp, #16]
 23c:	mov	r4, r1
 240:	mov	r5, r0
 244:	mov	r0, r4
 248:	bl	b8c <ht_key>
 24c:	mov	r6, r0
 250:	mov	r0, r4
 254:	bl	ba8 <ht_key_len>
 258:	mov	r2, r0
 25c:	mov	r1, r6
 260:	mov	r0, r5
 264:	bl	7e4 <ht_find>
 268:	ldr	r4, [sp, #8]
 26c:	ldr	r5, [sp, #12]
 270:	ldr	r6, [sp, #16]
 274:	ldr	lr, [sp, #4]
 278:	add	sp, sp, #24
 27c:	bx	lr

00000280 <fb_value_set_remove>:
 280:	mov	ip, sp
 284:	sub	sp, sp, #8
 288:	str	ip, [sp]
 28c:	str	lr, [sp, #4]
 290:	bl	8d0 <ht_remove>
 294:	ldr	lr, [sp, #4]
 298:	add	sp, sp, #8
 29c:	bx	lr

000002a0 <fb_value_set_remove_item>:
 2a0:	mov	ip, sp
 2a4:	sub	sp, sp, #24
 2a8:	str	ip, [sp]
 2ac:	str	lr, [sp, #4]
 2b0:	str	r4, [sp, #8]
 2b4:	str	r5, [sp, #12]
 2b8:	str	r6, [sp, #16]
 2bc:	mov	r4, r1
 2c0:	mov	r5, r0
 2c4:	mov	r0, r4
 2c8:	bl	b8c <ht_key>
 2cc:	mov	r6, r0
 2d0:	mov	r0, r4
 2d4:	bl	ba8 <ht_key_len>
 2d8:	mov	r2, r0
 2dc:	mov	r1, r6
 2e0:	mov	r0, r5
 2e4:	bl	8d0 <ht_remove>
 2e8:	ldr	r4, [sp, #8]
 2ec:	ldr	r5, [sp, #12]
 2f0:	ldr	r6, [sp, #16]
 2f4:	ldr	lr, [sp, #4]
 2f8:	add	sp, sp, #24
 2fc:	bx	lr

00000300 <fb_value_set_visit>:
 300:	mov	ip, sp
 304:	sub	sp, sp, #8
 308:	str	ip, [sp]
 30c:	str	lr, [sp, #4]
 310:	bl	9e0 <ht_visit>
 314:	ldr	lr, [sp, #4]
 318:	add	sp, sp, #8
 31c:	bx	lr

00000320 <ht_init>:
 320:	mov	ip, sp
 324:	sub	sp, sp, #16
 328:	str	ip, [sp]
 32c:	str	lr, [sp, #4]
 330:	str	r4, [sp, #8]
 334:	str	r5, [sp, #12]
 338:	mov	r4, r0
 33c:	mov	r5, #4
 340:	vldr	d7, [pc, #256]	; 448 <ht_init+0x128>
 344:	vcvt.f32.f64	s8, d7
 348:	vldr	s2, [pc, #244]	; 444 <ht_init+0x124>
 34c:	vmul.f32	s10, s8, s2
 350:	vcvt.s32.f32	s12, s10
 354:	vmov	r3, s12
 358:	cmp	r3, #256	; 0x100
 35c:	bgt	388 <ht_init+0x68>
 360:	vldr	d0, [pc, #224]	; 448 <ht_init+0x128>
 364:	vcvt.f32.f64	s6, d0
 368:	vldr	s4, [pc, #212]	; 444 <ht_init+0x124>
 36c:	vmul.f32	s10, s6, s4
 370:	vcvt.s32.f32	s12, s10
 374:	vmov	r0, s12
 378:	cmp	r0, #1
 37c:	movlt	r2, #1
 380:	movge	r2, #0
 384:	b	38c <ht_init+0x6c>
 388:	mov	r2, #1
 38c:	cmp	r2, #0
 390:	beq	3b8 <ht_init+0x98>
 394:	ldr	r0, [pc, #164]	; 440 <ht_init+0x120>
 398:	ldr	r0, [r0]
 39c:	ldr	r1, [pc, #152]	; 43c <ht_init+0x11c>
 3a0:	ldr	r2, [pc, #144]	; 438 <ht_init+0x118>
 3a4:	bl	0 <fprintf>
 3a8:	mov	r0, #1
 3ac:	bl	0 <exit>
 3b0:	mvn	r0, #0
 3b4:	b	424 <ht_init+0x104>
 3b8:	vldr	d2, [pc, #136]	; 448 <ht_init+0x128>
 3bc:	vcvt.f32.f64	s12, d2
 3c0:	vldr	s2, [pc, #124]	; 444 <ht_init+0x124>
 3c4:	vmul.f32	s0, s12, s2
 3c8:	vcvt.s32.f32	s12, s0
 3cc:	vmov	r0, s12
 3d0:	mul	r2, r5, r0
 3d4:	lsr	ip, r2, #8
 3d8:	cmp	r1, ip
 3dc:	bls	3e8 <ht_init+0xc8>
 3e0:	lsl	r5, r5, #1
 3e4:	b	3b8 <ht_init+0x98>
 3e8:	mov	r1, #4
 3ec:	mov	r0, r5
 3f0:	bl	0 <calloc>
 3f4:	str	r0, [r4]
 3f8:	ldr	r1, [r4]
 3fc:	cmp	r1, #0
 400:	bne	40c <ht_init+0xec>
 404:	mvn	r0, #0
 408:	b	424 <ht_init+0x104>
 40c:	mov	r2, #0
 410:	str	r2, [r4, #4]
 414:	str	r5, [r4, #12]
 418:	mov	r3, #0
 41c:	str	r3, [r4, #8]
 420:	mov	r0, #0
 424:	ldr	r4, [sp, #8]
 428:	ldr	r5, [sp, #12]
 42c:	ldr	lr, [sp, #4]
 430:	add	sp, sp, #16
 434:	bx	lr
 438:	.word	0x0000006a
 43c:	.word	0x000000f7
 440:	.word	0x00000000
 444:	.word	0x43800000
 448:	.word	0x66666666
 44c:	.word	0x3fe66666

00000450 <ht_resize>:
 450:	mov	ip, sp
 454:	sub	sp, sp, #56	; 0x38
 458:	str	ip, [sp, #4]
 45c:	str	lr, [sp, #8]
 460:	str	r4, [sp, #16]
 464:	str	r5, [sp, #20]
 468:	str	r6, [sp, #24]
 46c:	str	r7, [sp, #28]
 470:	str	r8, [sp, #32]
 474:	mov	r5, r0
 478:	ldr	r7, [r5]
 47c:	ldr	r2, [r5, #8]
 480:	cmp	r1, r2
 484:	bcs	48c <ht_resize+0x3c>
 488:	ldr	r1, [r5, #8]
 48c:	add	r0, sp, #40	; 0x28
 490:	bl	320 <ht_init>
 494:	cmp	r0, #0
 498:	beq	4a4 <ht_resize+0x54>
 49c:	mvn	r0, #0
 4a0:	b	530 <ht_resize+0xe0>
 4a4:	mov	r8, #0
 4a8:	ldr	r0, [r5, #12]
 4ac:	cmp	r8, r0
 4b0:	bcs	514 <ht_resize+0xc4>
 4b4:	ldr	r4, [r7, r8, lsl #2]
 4b8:	cmp	r4, #0
 4bc:	bne	4c8 <ht_resize+0x78>
 4c0:	mov	r0, #0
 4c4:	b	4d4 <ht_resize+0x84>
 4c8:	cmp	r4, #2
 4cc:	movne	r0, #1
 4d0:	moveq	r0, #0
 4d4:	cmp	r0, #0
 4d8:	beq	50c <ht_resize+0xbc>
 4dc:	mov	r0, r4
 4e0:	bl	b8c <ht_key>
 4e4:	mov	r6, r0
 4e8:	mov	r0, r4
 4ec:	bl	ba8 <ht_key_len>
 4f0:	mov	r2, r0
 4f4:	add	r0, sp, #40	; 0x28
 4f8:	mov	r1, #3
 4fc:	str	r1, [sp]
 500:	mov	r3, r4
 504:	mov	r1, r6
 508:	bl	550 <ht_insert>
 50c:	add	r8, r8, #1
 510:	b	4a8 <ht_resize+0x58>
 514:	mov	r0, r5
 518:	bl	a7c <ht_clear>
 51c:	add	r1, sp, #40	; 0x28
 520:	mov	r2, #16
 524:	mov	r0, r5
 528:	bl	0 <memcpy>
 52c:	mov	r0, #0
 530:	ldr	r4, [sp, #16]
 534:	ldr	r5, [sp, #20]
 538:	ldr	r6, [sp, #24]
 53c:	ldr	r7, [sp, #28]
 540:	ldr	r8, [sp, #32]
 544:	ldr	lr, [sp, #8]
 548:	add	sp, sp, #56	; 0x38
 54c:	bx	lr

00000550 <ht_insert>:
 550:	mov	ip, sp
 554:	sub	sp, sp, #56	; 0x38
 558:	str	ip, [sp]
 55c:	str	lr, [sp, #4]
 560:	str	r4, [sp, #24]
 564:	str	r5, [sp, #28]
 568:	str	r6, [sp, #32]
 56c:	str	r7, [sp, #36]	; 0x24
 570:	str	r8, [sp, #40]	; 0x28
 574:	str	r9, [sp, #44]	; 0x2c
 578:	str	sl, [sp, #48]	; 0x30
 57c:	str	fp, [sp, #52]	; 0x34
 580:	ldr	ip, [ip]
 584:	str	ip, [sp, #20]
 588:	mov	r7, r3
 58c:	str	r2, [sp, #12]
 590:	str	r1, [sp, #16]
 594:	mov	r9, r0
 598:	mov	sl, #0
 59c:	cmp	r7, #0
 5a0:	bne	5b8 <ht_insert+0x68>
 5a4:	ldr	r0, [pc, #544]	; 7cc <ht_insert+0x27c>
 5a8:	ldr	r1, [pc, #528]	; 7c0 <ht_insert+0x270>
 5ac:	mov	r2, #114	; 0x72
 5b0:	ldr	r3, [pc, #528]	; 7c8 <ht_insert+0x278>
 5b4:	bl	0 <__assert_fail>
 5b8:	cmp	r7, #2
 5bc:	bne	5d4 <ht_insert+0x84>
 5c0:	ldr	r0, [pc, #508]	; 7c4 <ht_insert+0x274>
 5c4:	ldr	r1, [pc, #500]	; 7c0 <ht_insert+0x270>
 5c8:	mov	r2, #115	; 0x73
 5cc:	ldr	r3, [pc, #500]	; 7c8 <ht_insert+0x278>
 5d0:	bl	0 <__assert_fail>
 5d4:	cmp	r7, #1
 5d8:	bne	5f0 <ht_insert+0xa0>
 5dc:	ldr	r0, [pc, #468]	; 7b8 <ht_insert+0x268>
 5e0:	ldr	r1, [pc, #472]	; 7c0 <ht_insert+0x270>
 5e4:	mov	r2, #116	; 0x74
 5e8:	ldr	r3, [pc, #472]	; 7c8 <ht_insert+0x278>
 5ec:	bl	0 <__assert_fail>
 5f0:	ldr	ip, [r9, #8]
 5f4:	ldr	r3, [r9, #12]
 5f8:	vldr	d6, [pc, #476]	; 7dc <ht_insert+0x28c>
 5fc:	vcvt.f32.f64	s0, d6
 600:	vldr	s2, [pc, #464]	; 7d8 <ht_insert+0x288>
 604:	vmul.f32	s2, s0, s2
 608:	vcvt.s32.f32	s12, s2
 60c:	vmov	r1, s12
 610:	mul	r1, r3, r1
 614:	lsr	r0, r1, #8
 618:	cmp	ip, r0
 61c:	bcc	65c <ht_insert+0x10c>
 620:	ldr	ip, [r9, #8]
 624:	lsl	r1, ip, #1
 628:	mov	r0, r9
 62c:	bl	450 <ht_resize>
 630:	cmp	r0, #0
 634:	beq	65c <ht_insert+0x10c>
 638:	ldr	r0, [pc, #400]	; 7d0 <ht_insert+0x280>
 63c:	ldr	r0, [r0]
 640:	ldr	r1, [pc, #372]	; 7bc <ht_insert+0x26c>
 644:	ldr	r2, [pc, #392]	; 7d4 <ht_insert+0x284>
 648:	bl	0 <fprintf>
 64c:	mov	r0, #1
 650:	bl	0 <exit>
 654:	mov	r0, #1
 658:	b	78c <ht_insert+0x23c>
 65c:	ldr	fp, [r9]
 660:	ldr	r2, [r9, #12]
 664:	sub	r8, r2, #1
 668:	ldr	r1, [sp, #12]
 66c:	ldr	r0, [sp, #16]
 670:	bl	38 <value_hash_function>
 674:	str	r0, [sp, #8]
 678:	mov	r6, #0
 67c:	ldr	r3, [sp, #8]
 680:	add	ip, r3, r6
 684:	and	r5, ip, r8
 688:	ldr	r0, [sp, #20]
 68c:	cmp	r0, #2
 690:	beq	6a4 <ht_insert+0x154>
 694:	cmp	r0, #3
 698:	moveq	ip, #1
 69c:	movne	ip, #0
 6a0:	b	6a8 <ht_insert+0x158>
 6a4:	mov	ip, #1
 6a8:	cmp	ip, #0
 6ac:	beq	708 <ht_insert+0x1b8>
 6b0:	ldr	r3, [r9, #8]
 6b4:	add	r1, r3, #1
 6b8:	str	r1, [r9, #8]
 6bc:	ldr	r3, [fp, r5, lsl #2]
 6c0:	cmp	r3, #0
 6c4:	beq	6dc <ht_insert+0x18c>
 6c8:	ldr	r3, [fp, r5, lsl #2]
 6cc:	cmp	r3, #2
 6d0:	movne	r0, #1
 6d4:	moveq	r0, #0
 6d8:	b	6e0 <ht_insert+0x190>
 6dc:	mov	r0, #0
 6e0:	cmp	r0, #0
 6e4:	beq	6fc <ht_insert+0x1ac>
 6e8:	add	r6, r6, #1
 6ec:	ldr	r1, [sp, #8]
 6f0:	add	r2, r1, r6
 6f4:	and	r5, r2, r8
 6f8:	b	6bc <ht_insert+0x16c>
 6fc:	str	r7, [fp, r5, lsl #2]
 700:	mov	r0, #0
 704:	b	78c <ht_insert+0x23c>
 708:	ldr	r4, [fp, r5, lsl #2]
 70c:	cmp	r4, #0
 710:	beq	76c <ht_insert+0x21c>
 714:	cmp	r4, #2
 718:	beq	74c <ht_insert+0x1fc>
 71c:	mov	r2, r4
 720:	ldr	r1, [sp, #12]
 724:	ldr	r0, [sp, #16]
 728:	bl	ac8 <ht_match>
 72c:	cmp	r0, #0
 730:	beq	758 <ht_insert+0x208>
 734:	ldr	r2, [sp, #20]
 738:	cmp	r2, #0
 73c:	bne	744 <ht_insert+0x1f4>
 740:	str	r7, [fp, r5, lsl #2]
 744:	mov	r0, r4
 748:	b	78c <ht_insert+0x23c>
 74c:	cmp	sl, #0
 750:	bne	758 <ht_insert+0x208>
 754:	add	sl, fp, r5, lsl #2
 758:	add	r6, r6, #1
 75c:	ldr	ip, [sp, #8]
 760:	add	r0, ip, r6
 764:	and	r5, r0, r8
 768:	b	708 <ht_insert+0x1b8>
 76c:	cmp	sl, #0
 770:	bne	778 <ht_insert+0x228>
 774:	add	sl, fp, r5, lsl #2
 778:	ldr	r0, [r9, #8]
 77c:	add	r2, r0, #1
 780:	str	r2, [r9, #8]
 784:	str	r7, [sl]
 788:	mov	r0, #0
 78c:	ldr	r4, [sp, #24]
 790:	ldr	r5, [sp, #28]
 794:	ldr	r6, [sp, #32]
 798:	ldr	r7, [sp, #36]	; 0x24
 79c:	ldr	r8, [sp, #40]	; 0x28
 7a0:	ldr	r9, [sp, #44]	; 0x2c
 7a4:	ldr	sl, [sp, #48]	; 0x30
 7a8:	ldr	fp, [sp, #52]	; 0x34
 7ac:	ldr	lr, [sp, #4]
 7b0:	add	sp, sp, #56	; 0x38
 7b4:	bx	lr
 7b8:	.word	0x000000e2
 7bc:	.word	0x000000f7
 7c0:	.word	0x00000000
 7c4:	.word	0x000000cb
 7c8:	.word	0x00000134
 7cc:	.word	0x0000010e
 7d0:	.word	0x00000000
 7d4:	.word	0x00000098
 7d8:	.word	0x43800000
 7dc:	.word	0x66666666
 7e0:	.word	0x3fe66666

000007e4 <ht_find>:
 7e4:	mov	ip, sp
 7e8:	sub	sp, sp, #40	; 0x28
 7ec:	str	ip, [sp]
 7f0:	str	lr, [sp, #4]
 7f4:	str	r4, [sp, #8]
 7f8:	str	r5, [sp, #12]
 7fc:	str	r6, [sp, #16]
 800:	str	r7, [sp, #20]
 804:	str	r8, [sp, #24]
 808:	str	r9, [sp, #28]
 80c:	str	sl, [sp, #32]
 810:	mov	r6, r2
 814:	mov	r7, r1
 818:	ldr	r8, [r0]
 81c:	cmp	r8, #0
 820:	bne	82c <ht_find+0x48>
 824:	mov	r5, #0
 828:	b	8a4 <ht_find+0xc0>
 82c:	ldr	r0, [r0, #12]
 830:	sub	r9, r0, #1
 834:	mov	r1, r6
 838:	mov	r0, r7
 83c:	bl	38 <value_hash_function>
 840:	mov	r4, r0
 844:	mov	sl, #0
 848:	add	ip, r4, sl
 84c:	and	r3, ip, r9
 850:	ldr	r5, [r8, r3, lsl #2]
 854:	cmp	r5, #0
 858:	beq	8a0 <ht_find+0xbc>
 85c:	cmp	r5, #2
 860:	beq	884 <ht_find+0xa0>
 864:	mov	r2, r5
 868:	mov	r1, r6
 86c:	mov	r0, r7
 870:	bl	ac8 <ht_match>
 874:	cmp	r0, #0
 878:	movne	r0, #1
 87c:	moveq	r0, #0
 880:	b	888 <ht_find+0xa4>
 884:	mov	r0, #0
 888:	cmp	r0, #0
 88c:	bne	8a4 <ht_find+0xc0>
 890:	add	sl, sl, #1
 894:	add	r2, r4, sl
 898:	and	r3, r2, r9
 89c:	b	850 <ht_find+0x6c>
 8a0:	mov	r5, #0
 8a4:	mov	r0, r5
 8a8:	ldr	r4, [sp, #8]
 8ac:	ldr	r5, [sp, #12]
 8b0:	ldr	r6, [sp, #16]
 8b4:	ldr	r7, [sp, #20]
 8b8:	ldr	r8, [sp, #24]
 8bc:	ldr	r9, [sp, #28]
 8c0:	ldr	sl, [sp, #32]
 8c4:	ldr	lr, [sp, #4]
 8c8:	add	sp, sp, #40	; 0x28
 8cc:	bx	lr

000008d0 <ht_remove>:
 8d0:	mov	ip, sp
 8d4:	sub	sp, sp, #48	; 0x30
 8d8:	str	ip, [sp]
 8dc:	str	lr, [sp, #4]
 8e0:	str	r4, [sp, #12]
 8e4:	str	r5, [sp, #16]
 8e8:	str	r6, [sp, #20]
 8ec:	str	r7, [sp, #24]
 8f0:	str	r8, [sp, #28]
 8f4:	str	r9, [sp, #32]
 8f8:	str	sl, [sp, #36]	; 0x24
 8fc:	str	fp, [sp, #40]	; 0x28
 900:	str	r2, [sp, #8]
 904:	mov	fp, r1
 908:	mov	sl, r0
 90c:	ldr	r4, [sl]
 910:	cmp	r4, #0
 914:	bne	920 <ht_remove+0x50>
 918:	mov	r0, #0
 91c:	b	9b4 <ht_remove+0xe4>
 920:	ldr	ip, [sl, #12]
 924:	sub	r5, ip, #1
 928:	ldr	r1, [sp, #8]
 92c:	mov	r0, fp
 930:	bl	38 <value_hash_function>
 934:	mov	r6, r0
 938:	mov	r9, #0
 93c:	add	r3, r6, r9
 940:	and	r8, r3, r5
 944:	ldr	r7, [r4, r8, lsl #2]
 948:	cmp	r7, #0
 94c:	beq	9b0 <ht_remove+0xe0>
 950:	cmp	r7, #2
 954:	beq	978 <ht_remove+0xa8>
 958:	mov	r2, r7
 95c:	ldr	r1, [sp, #8]
 960:	mov	r0, fp
 964:	bl	ac8 <ht_match>
 968:	cmp	r0, #0
 96c:	movne	r1, #1
 970:	moveq	r1, #0
 974:	b	97c <ht_remove+0xac>
 978:	mov	r1, #0
 97c:	cmp	r1, #0
 980:	beq	9a0 <ht_remove+0xd0>
 984:	mov	ip, #2
 988:	str	ip, [r4, r8, lsl #2]
 98c:	ldr	r3, [sl, #8]
 990:	sub	r2, r3, #1
 994:	str	r2, [sl, #8]
 998:	mov	r0, r7
 99c:	b	9b4 <ht_remove+0xe4>
 9a0:	add	r9, r9, #1
 9a4:	add	r0, r6, r9
 9a8:	and	r8, r0, r5
 9ac:	b	944 <ht_remove+0x74>
 9b0:	mov	r0, #0
 9b4:	ldr	r4, [sp, #12]
 9b8:	ldr	r5, [sp, #16]
 9bc:	ldr	r6, [sp, #20]
 9c0:	ldr	r7, [sp, #24]
 9c4:	ldr	r8, [sp, #28]
 9c8:	ldr	r9, [sp, #32]
 9cc:	ldr	sl, [sp, #36]	; 0x24
 9d0:	ldr	fp, [sp, #40]	; 0x28
 9d4:	ldr	lr, [sp, #4]
 9d8:	add	sp, sp, #48	; 0x30
 9dc:	bx	lr

000009e0 <ht_visit>:
 9e0:	mov	ip, sp
 9e4:	sub	sp, sp, #32
 9e8:	str	ip, [sp]
 9ec:	str	lr, [sp, #4]
 9f0:	str	r4, [sp, #8]
 9f4:	str	r5, [sp, #12]
 9f8:	str	r6, [sp, #16]
 9fc:	str	r7, [sp, #20]
 a00:	str	r8, [sp, #24]
 a04:	mov	r4, r2
 a08:	mov	r5, r1
 a0c:	mov	r6, r0
 a10:	ldr	r8, [r6]
 a14:	mov	r7, #0
 a18:	ldr	r1, [r6, #12]
 a1c:	cmp	r7, r1
 a20:	bcs	a5c <ht_visit+0x7c>
 a24:	ldr	r1, [r8, r7, lsl #2]
 a28:	cmp	r1, #0
 a2c:	bne	a38 <ht_visit+0x58>
 a30:	mov	r3, #0
 a34:	b	a44 <ht_visit+0x64>
 a38:	cmp	r1, #2
 a3c:	movne	r3, #1
 a40:	moveq	r3, #0
 a44:	cmp	r3, #0
 a48:	beq	a54 <ht_visit+0x74>
 a4c:	mov	r0, r4
 a50:	blx	r5
 a54:	add	r7, r7, #1
 a58:	b	a18 <ht_visit+0x38>
 a5c:	ldr	r4, [sp, #8]
 a60:	ldr	r5, [sp, #12]
 a64:	ldr	r6, [sp, #16]
 a68:	ldr	r7, [sp, #20]
 a6c:	ldr	r8, [sp, #24]
 a70:	ldr	lr, [sp, #4]
 a74:	add	sp, sp, #32
 a78:	bx	lr

00000a7c <ht_clear>:
 a7c:	mov	ip, sp
 a80:	sub	sp, sp, #16
 a84:	str	ip, [sp]
 a88:	str	lr, [sp, #4]
 a8c:	str	r4, [sp, #8]
 a90:	mov	r4, r0
 a94:	ldr	r1, [r4]
 a98:	cmp	r1, #0
 a9c:	beq	aa8 <ht_clear+0x2c>
 aa0:	ldr	r0, [r4]
 aa4:	bl	0 <free>
 aa8:	mov	r1, #0
 aac:	mov	r2, #16
 ab0:	mov	r0, r4
 ab4:	bl	0 <memset>
 ab8:	ldr	r4, [sp, #8]
 abc:	ldr	lr, [sp, #4]
 ac0:	add	sp, sp, #16
 ac4:	bx	lr

00000ac8 <ht_match>:
 ac8:	mov	ip, sp
 acc:	sub	sp, sp, #8
 ad0:	str	ip, [sp]
 ad4:	str	lr, [sp, #4]
 ad8:	ldrh	r1, [r0, #8]
 adc:	ldrh	r3, [r2, #8]
 ae0:	cmp	r1, r3
 ae4:	beq	af0 <ht_match+0x28>
 ae8:	mov	r0, #0
 aec:	b	b80 <ht_match+0xb8>
 af0:	ldrh	r1, [r0, #8]
 af4:	cmp	r1, #4
 af8:	beq	b58 <ht_match+0x90>
 afc:	cmp	r1, #5
 b00:	beq	b2c <ht_match+0x64>
 b04:	cmp	r1, #6
 b08:	bne	b24 <ht_match+0x5c>
 b0c:	ldrb	r3, [r0]
 b10:	ldrb	ip, [r2]
 b14:	cmp	r3, ip
 b18:	moveq	r0, #1
 b1c:	movne	r0, #0
 b20:	b	b80 <ht_match+0xb8>
 b24:	mov	r0, #0
 b28:	b	b80 <ht_match+0xb8>
 b2c:	ldr	r3, [r0]
 b30:	ldr	ip, [r0, #4]
 b34:	ldr	r0, [r2]
 b38:	ldr	r1, [r2, #4]
 b3c:	eor	ip, ip, r1
 b40:	eor	r2, r3, r0
 b44:	orr	r0, ip, r2
 b48:	cmp	r0, #0
 b4c:	moveq	r0, #1
 b50:	movne	r0, #0
 b54:	b	b80 <ht_match+0xb8>
 b58:	ldr	ip, [r0]
 b5c:	ldr	r3, [r0, #4]
 b60:	ldr	r0, [r2]
 b64:	ldr	r1, [r2, #4]
 b68:	eor	r1, r3, r1
 b6c:	eor	r2, ip, r0
 b70:	orr	r0, r1, r2
 b74:	cmp	r0, #0
 b78:	moveq	r0, #1
 b7c:	movne	r0, #0
 b80:	ldr	lr, [sp, #4]
 b84:	add	sp, sp, #8
 b88:	bx	lr

00000b8c <ht_key>:
 b8c:	mov	ip, sp
 b90:	sub	sp, sp, #8
 b94:	str	ip, [sp]
 b98:	str	lr, [sp, #4]
 b9c:	ldr	lr, [sp, #4]
 ba0:	add	sp, sp, #8
 ba4:	bx	lr

00000ba8 <ht_key_len>:
 ba8:	mov	ip, sp
 bac:	sub	sp, sp, #8
 bb0:	str	ip, [sp]
 bb4:	str	lr, [sp, #4]
 bb8:	mov	r0, #0
 bbc:	ldr	lr, [sp, #4]
 bc0:	add	sp, sp, #8
 bc4:	bx	lr
