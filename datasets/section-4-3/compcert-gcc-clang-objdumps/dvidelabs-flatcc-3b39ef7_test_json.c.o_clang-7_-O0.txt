
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test_json>:
       0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
       4:	add	fp, sp, #24
       8:	sub	sp, sp, #552	; 0x228
       c:	ldr	ip, [fp, #16]
      10:	ldr	lr, [fp, #12]
      14:	ldr	r4, [fp, #8]
      18:	str	r0, [fp, #-28]	; 0xffffffe4
      1c:	str	r1, [fp, #-32]	; 0xffffffe0
      20:	str	r2, [fp, #-36]	; 0xffffffdc
      24:	str	r3, [fp, #-40]	; 0xffffffd8
      28:	mvn	r0, #0
      2c:	str	r0, [fp, #-44]	; 0xffffffd4
      30:	movw	r0, #0
      34:	str	r0, [fp, #-52]	; 0xffffffcc
      38:	str	r0, [fp, #-56]	; 0xffffffc8
      3c:	add	r0, sp, #280	; 0x118
      40:	str	r0, [sp, #276]	; 0x114
      44:	ldr	r0, [sp, #276]	; 0x114
      48:	str	r4, [sp, #176]	; 0xb0
      4c:	str	lr, [sp, #172]	; 0xac
      50:	str	ip, [sp, #168]	; 0xa8
      54:	bl	0 <flatcc_builder_init>
      58:	add	r1, sp, #184	; 0xb8
      5c:	str	r0, [sp, #164]	; 0xa4
      60:	mov	r0, r1
      64:	movw	r1, #0
      68:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
      6c:	ldr	r1, [fp, #12]
      70:	add	r2, sp, #184	; 0xb8
      74:	str	r0, [sp, #160]	; 0xa0
      78:	mov	r0, r2
      7c:	bl	520 <flatcc_json_printer_set_flags>
      80:	ldr	r0, [sp, #276]	; 0x114
      84:	ldr	r2, [fp, #-32]	; 0xffffffe0
      88:	ldr	r1, [fp, #-32]	; 0xffffffe0
      8c:	str	r0, [sp, #156]	; 0x9c
      90:	mov	r0, r1
      94:	str	r2, [sp, #152]	; 0x98
      98:	bl	0 <strlen>
      9c:	ldr	r1, [fp, #8]
      a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
      a4:	ldr	r2, [r2]
      a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
      ac:	ldr	r3, [r3, #4]
      b0:	ldr	ip, [sp, #156]	; 0x9c
      b4:	str	r0, [sp, #148]	; 0x94
      b8:	mov	r0, ip
      bc:	add	lr, sp, #232	; 0xe8
      c0:	str	r1, [sp, #144]	; 0x90
      c4:	mov	r1, lr
      c8:	ldr	lr, [sp, #152]	; 0x98
      cc:	str	r2, [sp, #140]	; 0x8c
      d0:	mov	r2, lr
      d4:	ldr	r4, [sp, #148]	; 0x94
      d8:	str	r3, [sp, #136]	; 0x88
      dc:	mov	r3, r4
      e0:	ldr	r5, [sp, #144]	; 0x90
      e4:	str	r5, [sp]
      e8:	ldr	r6, [sp, #140]	; 0x8c
      ec:	str	r6, [sp, #4]
      f0:	ldr	r7, [sp, #136]	; 0x88
      f4:	str	r7, [sp, #8]
      f8:	bl	0 <flatcc_json_parser_table_as_root>
      fc:	str	r0, [fp, #-48]	; 0xffffffd0
     100:	ldr	r0, [fp, #-48]	; 0xffffffd0
     104:	ldr	r1, [fp, #-40]	; 0xffffffd8
     108:	cmp	r0, r1
     10c:	beq	318 <test_json+0x318>
     110:	ldr	r0, [fp, #-40]	; 0xffffffd8
     114:	cmp	r0, #0
     118:	beq	244 <test_json+0x244>
     11c:	ldr	r0, [fp, #-48]	; 0xffffffd0
     120:	cmp	r0, #0
     124:	beq	1d4 <test_json+0x1d4>
     128:	movw	r0, #0
     12c:	movt	r0, #0
     130:	ldr	r0, [r0]
     134:	ldr	r2, [fp, #16]
     138:	ldr	r1, [fp, #-48]	; 0xffffffd0
     13c:	str	r0, [sp, #132]	; 0x84
     140:	mov	r0, r1
     144:	str	r2, [sp, #128]	; 0x80
     148:	bl	0 <flatcc_json_parser_error_string>
     14c:	ldr	r1, [sp, #132]	; 0x84
     150:	str	r0, [sp, #124]	; 0x7c
     154:	mov	r0, r1
     158:	movw	r1, #0
     15c:	movt	r1, #0
     160:	ldr	r2, [sp, #128]	; 0x80
     164:	ldr	r3, [sp, #124]	; 0x7c
     168:	bl	0 <fprintf>
     16c:	movw	r1, #0
     170:	movt	r1, #0
     174:	ldr	r1, [r1]
     178:	ldr	r2, [fp, #-40]	; 0xffffffd8
     17c:	str	r0, [sp, #120]	; 0x78
     180:	mov	r0, r2
     184:	str	r1, [sp, #116]	; 0x74
     188:	bl	0 <flatcc_json_parser_error_string>
     18c:	ldr	r1, [sp, #116]	; 0x74
     190:	str	r0, [sp, #112]	; 0x70
     194:	mov	r0, r1
     198:	movw	r1, #0
     19c:	movt	r1, #0
     1a0:	ldr	r2, [sp, #112]	; 0x70
     1a4:	bl	0 <fprintf>
     1a8:	movw	r1, #0
     1ac:	movt	r1, #0
     1b0:	ldr	r1, [r1]
     1b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
     1b8:	str	r0, [sp, #108]	; 0x6c
     1bc:	mov	r0, r1
     1c0:	movw	r1, #0
     1c4:	movt	r1, #0
     1c8:	bl	0 <fprintf>
     1cc:	str	r0, [sp, #104]	; 0x68
     1d0:	b	240 <test_json+0x240>
     1d4:	movw	r0, #0
     1d8:	movt	r0, #0
     1dc:	ldr	r0, [r0]
     1e0:	ldr	r2, [fp, #16]
     1e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
     1e8:	str	r0, [sp, #100]	; 0x64
     1ec:	mov	r0, r1
     1f0:	str	r2, [sp, #96]	; 0x60
     1f4:	bl	0 <flatcc_json_parser_error_string>
     1f8:	ldr	r1, [sp, #100]	; 0x64
     1fc:	str	r0, [sp, #92]	; 0x5c
     200:	mov	r0, r1
     204:	movw	r1, #0
     208:	movt	r1, #0
     20c:	ldr	r2, [sp, #96]	; 0x60
     210:	ldr	r3, [sp, #92]	; 0x5c
     214:	bl	0 <fprintf>
     218:	movw	r1, #0
     21c:	movt	r1, #0
     220:	ldr	r1, [r1]
     224:	ldr	r2, [fp, #-32]	; 0xffffffe0
     228:	str	r0, [sp, #88]	; 0x58
     22c:	mov	r0, r1
     230:	movw	r1, #0
     234:	movt	r1, #0
     238:	bl	0 <fprintf>
     23c:	str	r0, [sp, #84]	; 0x54
     240:	b	2b0 <test_json+0x2b0>
     244:	movw	r0, #0
     248:	movt	r0, #0
     24c:	ldr	r0, [r0]
     250:	ldr	r2, [fp, #16]
     254:	ldr	r1, [fp, #-48]	; 0xffffffd0
     258:	str	r0, [sp, #80]	; 0x50
     25c:	mov	r0, r1
     260:	str	r2, [sp, #76]	; 0x4c
     264:	bl	0 <flatcc_json_parser_error_string>
     268:	ldr	r1, [sp, #80]	; 0x50
     26c:	str	r0, [sp, #72]	; 0x48
     270:	mov	r0, r1
     274:	movw	r1, #0
     278:	movt	r1, #0
     27c:	ldr	r2, [sp, #76]	; 0x4c
     280:	ldr	r3, [sp, #72]	; 0x48
     284:	bl	0 <fprintf>
     288:	movw	r1, #0
     28c:	movt	r1, #0
     290:	ldr	r1, [r1]
     294:	ldr	r2, [fp, #-32]	; 0xffffffe0
     298:	str	r0, [sp, #68]	; 0x44
     29c:	mov	r0, r1
     2a0:	movw	r1, #0
     2a4:	movt	r1, #0
     2a8:	bl	0 <fprintf>
     2ac:	str	r0, [sp, #64]	; 0x40
     2b0:	movw	r0, #0
     2b4:	str	r0, [sp, #180]	; 0xb4
     2b8:	ldr	r0, [sp, #180]	; 0xb4
     2bc:	ldr	r1, [sp, #252]	; 0xfc
     2c0:	sub	r1, r1, #1
     2c4:	cmp	r0, r1
     2c8:	bge	2f8 <test_json+0x2f8>
     2cc:	movw	r0, #0
     2d0:	movt	r0, #0
     2d4:	ldr	r0, [r0]
     2d8:	movw	r1, #0
     2dc:	movt	r1, #0
     2e0:	bl	0 <fprintf>
     2e4:	str	r0, [sp, #60]	; 0x3c
     2e8:	ldr	r0, [sp, #180]	; 0xb4
     2ec:	add	r0, r0, #1
     2f0:	str	r0, [sp, #180]	; 0xb4
     2f4:	b	2b8 <test_json+0x2b8>
     2f8:	movw	r0, #0
     2fc:	movt	r0, #0
     300:	ldr	r0, [r0]
     304:	movw	r1, #0
     308:	movt	r1, #0
     30c:	bl	0 <fprintf>
     310:	str	r0, [sp, #56]	; 0x38
     314:	b	4e4 <test_json+0x4e4>
     318:	ldr	r0, [fp, #-40]	; 0xffffffd8
     31c:	cmp	r0, #0
     320:	beq	330 <test_json+0x330>
     324:	movw	r0, #0
     328:	str	r0, [fp, #-44]	; 0xffffffd4
     32c:	b	4c0 <test_json+0x4c0>
     330:	ldr	r0, [sp, #276]	; 0x114
     334:	sub	r1, fp, #60	; 0x3c
     338:	bl	0 <flatcc_builder_finalize_aligned_buffer>
     33c:	str	r0, [fp, #-52]	; 0xffffffcc
     340:	ldr	r0, [fp, #-52]	; 0xffffffcc
     344:	ldr	r1, [fp, #-60]	; 0xffffffc4
     348:	ldr	lr, [fp, #-28]	; 0xffffffe4
     34c:	ldr	r2, [lr]
     350:	ldr	lr, [fp, #-28]	; 0xffffffe4
     354:	ldr	r3, [lr, #12]
     358:	bl	0 <flatcc_verify_table_as_root>
     35c:	str	r0, [fp, #-44]	; 0xffffffd4
     360:	cmp	r0, #0
     364:	beq	3c0 <test_json+0x3c0>
     368:	movw	r0, #0
     36c:	movt	r0, #0
     370:	ldr	r0, [r0]
     374:	ldr	r3, [fp, #16]
     378:	ldr	r1, [fp, #-44]	; 0xffffffd4
     37c:	str	r0, [sp, #52]	; 0x34
     380:	mov	r0, r1
     384:	str	r3, [sp, #48]	; 0x30
     388:	bl	0 <flatcc_verify_error_string>
     38c:	ldr	r1, [sp, #52]	; 0x34
     390:	str	r0, [sp, #44]	; 0x2c
     394:	mov	r0, r1
     398:	movw	r1, #0
     39c:	movt	r1, #0
     3a0:	movw	r2, #0
     3a4:	movt	r2, #0
     3a8:	ldr	r3, [sp, #48]	; 0x30
     3ac:	ldr	lr, [sp, #44]	; 0x2c
     3b0:	str	lr, [sp]
     3b4:	bl	0 <fprintf>
     3b8:	str	r0, [sp, #40]	; 0x28
     3bc:	b	4e4 <test_json+0x4e4>
     3c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
     3c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
     3c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3cc:	ldr	r3, [r0]
     3d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3d4:	ldr	r0, [r0, #8]
     3d8:	add	ip, sp, #184	; 0xb8
     3dc:	str	r0, [sp, #36]	; 0x24
     3e0:	mov	r0, ip
     3e4:	ldr	ip, [sp, #36]	; 0x24
     3e8:	str	ip, [sp]
     3ec:	bl	0 <flatcc_json_printer_table_as_root>
     3f0:	add	r1, sp, #184	; 0xb8
     3f4:	str	r0, [sp, #32]
     3f8:	mov	r0, r1
     3fc:	sub	r1, fp, #64	; 0x40
     400:	bl	0 <flatcc_json_printer_get_buffer>
     404:	str	r0, [fp, #-56]	; 0xffffffc8
     408:	ldr	r0, [fp, #-56]	; 0xffffffc8
     40c:	movw	r1, #0
     410:	cmp	r0, r1
     414:	beq	42c <test_json+0x42c>
     418:	ldr	r0, [fp, #-36]	; 0xffffffdc
     41c:	ldr	r1, [fp, #-56]	; 0xffffffc8
     420:	bl	0 <strcmp>
     424:	cmp	r0, #0
     428:	beq	4b8 <test_json+0x4b8>
     42c:	movw	r0, #0
     430:	movt	r0, #0
     434:	ldr	r0, [r0]
     438:	ldr	r2, [fp, #16]
     43c:	movw	r1, #0
     440:	movt	r1, #0
     444:	bl	0 <fprintf>
     448:	movw	r1, #0
     44c:	movt	r1, #0
     450:	ldr	r1, [r1]
     454:	ldr	r2, [fp, #-56]	; 0xffffffc8
     458:	str	r0, [sp, #28]
     45c:	mov	r0, r1
     460:	movw	r1, #0
     464:	movt	r1, #0
     468:	bl	0 <fprintf>
     46c:	movw	r1, #0
     470:	movt	r1, #0
     474:	ldr	r1, [r1]
     478:	str	r0, [sp, #24]
     47c:	mov	r0, r1
     480:	movw	r1, #0
     484:	movt	r1, #0
     488:	bl	0 <fprintf>
     48c:	movw	r1, #0
     490:	movt	r1, #0
     494:	ldr	r1, [r1]
     498:	ldr	r2, [fp, #-36]	; 0xffffffdc
     49c:	str	r0, [sp, #20]
     4a0:	mov	r0, r1
     4a4:	movw	r1, #0
     4a8:	movt	r1, #0
     4ac:	bl	0 <fprintf>
     4b0:	str	r0, [sp, #16]
     4b4:	b	4e4 <test_json+0x4e4>
     4b8:	movw	r0, #0
     4bc:	str	r0, [fp, #-44]	; 0xffffffd4
     4c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
     4c4:	bl	0 <flatcc_builder_aligned_free>
     4c8:	ldr	r0, [sp, #276]	; 0x114
     4cc:	bl	0 <flatcc_builder_clear>
     4d0:	add	r0, sp, #184	; 0xb8
     4d4:	bl	0 <flatcc_json_printer_clear>
     4d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
     4dc:	sub	sp, fp, #24
     4e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     4e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
     4e8:	movw	r1, #0
     4ec:	cmp	r0, r1
     4f0:	beq	514 <test_json+0x514>
     4f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
     4f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
     4fc:	movw	r0, #0
     500:	movt	r0, #0
     504:	ldr	r3, [r0]
     508:	movw	r0, #0
     50c:	movt	r0, #0
     510:	bl	618 <hexdump>
     514:	mvn	r0, #0
     518:	str	r0, [fp, #-44]	; 0xffffffd4
     51c:	b	4c0 <test_json+0x4c0>

00000520 <flatcc_json_printer_set_flags>:
     520:	push	{fp, lr}
     524:	mov	fp, sp
     528:	sub	sp, sp, #8
     52c:	str	r0, [sp, #4]
     530:	str	r1, [sp]
     534:	ldr	r0, [sp]
     538:	and	r0, r0, #1
     53c:	cmp	r0, #0
     540:	movw	r0, #0
     544:	movne	r0, #1
     548:	mvn	r1, #0
     54c:	eor	r0, r0, r1
     550:	eor	r0, r0, r1
     554:	and	r0, r0, #1
     558:	ldr	r2, [sp, #4]
     55c:	strb	r0, [r2, #26]
     560:	ldr	r0, [sp]
     564:	and	r0, r0, #2
     568:	cmp	r0, #0
     56c:	movw	r0, #0
     570:	movne	r0, #1
     574:	eor	r0, r0, r1
     578:	eor	r0, r0, r1
     57c:	and	r0, r0, #1
     580:	ldr	r2, [sp, #4]
     584:	strb	r0, [r2, #27]
     588:	ldr	r0, [sp]
     58c:	and	r0, r0, #4
     590:	cmp	r0, #0
     594:	movw	r0, #0
     598:	movne	r0, #1
     59c:	eor	r0, r0, r1
     5a0:	eor	r0, r0, r1
     5a4:	and	r0, r0, #1
     5a8:	ldr	r2, [sp, #4]
     5ac:	strb	r0, [r2, #28]
     5b0:	ldr	r0, [sp]
     5b4:	and	r0, r0, #8
     5b8:	cmp	r0, #0
     5bc:	movw	r0, #0
     5c0:	movne	r0, #1
     5c4:	eor	r0, r0, r1
     5c8:	eor	r0, r0, r1
     5cc:	and	r0, r0, #1
     5d0:	ldr	r1, [sp, #4]
     5d4:	strb	r0, [r1, #29]
     5d8:	ldr	r0, [sp]
     5dc:	and	r0, r0, #16
     5e0:	cmp	r0, #0
     5e4:	beq	5f8 <flatcc_json_printer_set_flags+0xd8>
     5e8:	ldr	r0, [sp, #4]
     5ec:	movw	r1, #2
     5f0:	and	r1, r1, #255	; 0xff
     5f4:	bl	27e8 <flatcc_json_printer_set_indent>
     5f8:	ldr	r0, [sp]
     5fc:	and	r0, r0, #32
     600:	cmp	r0, #0
     604:	beq	610 <flatcc_json_printer_set_flags+0xf0>
     608:	ldr	r0, [sp, #4]
     60c:	bl	2808 <flatcc_json_printer_set_nonstrict>
     610:	mov	sp, fp
     614:	pop	{fp, pc}

00000618 <hexdump>:
     618:	push	{fp, lr}
     61c:	mov	fp, sp
     620:	sub	sp, sp, #72	; 0x48
     624:	str	r0, [fp, #-4]
     628:	str	r1, [fp, #-8]
     62c:	str	r2, [fp, #-12]
     630:	str	r3, [fp, #-16]
     634:	ldr	r0, [fp, #-8]
     638:	str	r0, [sp, #28]
     63c:	ldr	r0, [fp, #-4]
     640:	movw	r1, #0
     644:	cmp	r0, r1
     648:	beq	664 <hexdump+0x4c>
     64c:	ldr	r0, [fp, #-16]
     650:	ldr	r2, [fp, #-4]
     654:	movw	r1, #0
     658:	movt	r1, #0
     65c:	bl	0 <fprintf>
     660:	str	r0, [sp, #24]
     664:	movw	r0, #0
     668:	str	r0, [fp, #-20]	; 0xffffffec
     66c:	ldr	r0, [fp, #-20]	; 0xffffffec
     670:	ldr	r1, [fp, #-12]
     674:	cmp	r0, r1
     678:	bcs	7b4 <hexdump+0x19c>
     67c:	ldr	r0, [fp, #-20]	; 0xffffffec
     680:	and	r0, r0, #15
     684:	cmp	r0, #0
     688:	bne	6cc <hexdump+0xb4>
     68c:	ldr	r0, [fp, #-20]	; 0xffffffec
     690:	cmp	r0, #0
     694:	beq	6b0 <hexdump+0x98>
     698:	add	r2, sp, #35	; 0x23
     69c:	ldr	r0, [fp, #-16]
     6a0:	movw	r1, #0
     6a4:	movt	r1, #0
     6a8:	bl	0 <fprintf>
     6ac:	str	r0, [sp, #20]
     6b0:	ldr	r0, [fp, #-16]
     6b4:	ldr	r2, [fp, #-20]	; 0xffffffec
     6b8:	movw	r1, #0
     6bc:	movt	r1, #0
     6c0:	bl	0 <fprintf>
     6c4:	str	r0, [sp, #16]
     6c8:	b	6f4 <hexdump+0xdc>
     6cc:	ldr	r0, [fp, #-20]	; 0xffffffec
     6d0:	and	r0, r0, #7
     6d4:	cmp	r0, #0
     6d8:	bne	6f0 <hexdump+0xd8>
     6dc:	ldr	r0, [fp, #-16]
     6e0:	movw	r1, #0
     6e4:	movt	r1, #0
     6e8:	bl	0 <fprintf>
     6ec:	str	r0, [sp, #12]
     6f0:	b	6f4 <hexdump+0xdc>
     6f4:	ldr	r0, [fp, #-16]
     6f8:	ldr	r1, [sp, #28]
     6fc:	ldr	r2, [fp, #-20]	; 0xffffffec
     700:	add	r1, r1, r2
     704:	ldrb	r2, [r1]
     708:	movw	r1, #0
     70c:	movt	r1, #0
     710:	bl	0 <fprintf>
     714:	ldr	r1, [sp, #28]
     718:	ldr	r2, [fp, #-20]	; 0xffffffec
     71c:	add	r1, r1, r2
     720:	ldrb	r1, [r1]
     724:	cmp	r1, #32
     728:	str	r0, [sp, #8]
     72c:	blt	748 <hexdump+0x130>
     730:	ldr	r0, [sp, #28]
     734:	ldr	r1, [fp, #-20]	; 0xffffffec
     738:	add	r0, r0, r1
     73c:	ldrb	r0, [r0]
     740:	cmp	r0, #126	; 0x7e
     744:	ble	764 <hexdump+0x14c>
     748:	ldr	r0, [fp, #-20]	; 0xffffffec
     74c:	and	r0, r0, #15
     750:	add	r1, sp, #35	; 0x23
     754:	add	r0, r1, r0
     758:	movw	r1, #46	; 0x2e
     75c:	strb	r1, [r0]
     760:	b	788 <hexdump+0x170>
     764:	ldr	r0, [sp, #28]
     768:	ldr	r1, [fp, #-20]	; 0xffffffec
     76c:	add	r0, r0, r1
     770:	ldrb	r0, [r0]
     774:	ldr	r1, [fp, #-20]	; 0xffffffec
     778:	and	r1, r1, #15
     77c:	add	r2, sp, #35	; 0x23
     780:	add	r1, r2, r1
     784:	strb	r0, [r1]
     788:	ldr	r0, [fp, #-20]	; 0xffffffec
     78c:	and	r0, r0, #15
     790:	add	r0, r0, #1
     794:	add	r1, sp, #35	; 0x23
     798:	add	r0, r1, r0
     79c:	movw	r1, #0
     7a0:	strb	r1, [r0]
     7a4:	ldr	r0, [fp, #-20]	; 0xffffffec
     7a8:	add	r0, r0, #1
     7ac:	str	r0, [fp, #-20]	; 0xffffffec
     7b0:	b	66c <hexdump+0x54>
     7b4:	b	7b8 <hexdump+0x1a0>
     7b8:	ldr	r0, [fp, #-20]	; 0xffffffec
     7bc:	and	r0, r0, #15
     7c0:	cmp	r0, #0
     7c4:	beq	7ec <hexdump+0x1d4>
     7c8:	ldr	r0, [fp, #-16]
     7cc:	movw	r1, #0
     7d0:	movt	r1, #0
     7d4:	bl	0 <fprintf>
     7d8:	ldr	r1, [fp, #-20]	; 0xffffffec
     7dc:	add	r1, r1, #1
     7e0:	str	r1, [fp, #-20]	; 0xffffffec
     7e4:	str	r0, [sp, #4]
     7e8:	b	7b8 <hexdump+0x1a0>
     7ec:	add	r2, sp, #35	; 0x23
     7f0:	ldr	r0, [fp, #-16]
     7f4:	movw	r1, #0
     7f8:	movt	r1, #0
     7fc:	bl	0 <fprintf>
     800:	str	r0, [sp]
     804:	mov	sp, fp
     808:	pop	{fp, pc}

0000080c <edge_case_tests>:
     80c:	push	{fp, lr}
     810:	mov	fp, sp
     814:	sub	sp, sp, #72	; 0x48
     818:	movw	r0, #0
     81c:	str	r0, [fp, #-4]
     820:	movw	r1, #0
     824:	movt	r1, #0
     828:	str	r1, [fp, #-8]
     82c:	ldr	r1, [fp, #-8]
     830:	str	r0, [fp, #-12]
     834:	mov	r0, r1
     838:	movw	r1, #0
     83c:	movt	r1, #0
     840:	movw	r2, #0
     844:	movt	r2, #0
     848:	ldr	r3, [fp, #-12]
     84c:	ldr	ip, [fp, #-12]
     850:	str	ip, [sp]
     854:	str	ip, [sp, #4]
     858:	movw	lr, #155	; 0x9b
     85c:	str	lr, [sp, #8]
     860:	bl	0 <test_json>
     864:	ldr	r1, [fp, #-4]
     868:	orr	r0, r1, r0
     86c:	str	r0, [fp, #-4]
     870:	ldr	r0, [fp, #-8]
     874:	movw	r1, #0
     878:	movt	r1, #0
     87c:	movw	r2, #0
     880:	movt	r2, #0
     884:	movw	r3, #0
     888:	str	r3, [fp, #-16]
     88c:	movw	ip, #2
     890:	str	ip, [sp]
     894:	ldr	ip, [fp, #-16]
     898:	str	ip, [sp, #4]
     89c:	movw	lr, #168	; 0xa8
     8a0:	str	lr, [sp, #8]
     8a4:	bl	0 <test_json>
     8a8:	ldr	r1, [fp, #-4]
     8ac:	orr	r0, r1, r0
     8b0:	str	r0, [fp, #-4]
     8b4:	ldr	r0, [fp, #-8]
     8b8:	movw	r1, #0
     8bc:	movt	r1, #0
     8c0:	movw	r2, #0
     8c4:	movt	r2, #0
     8c8:	movw	r3, #0
     8cc:	str	r3, [fp, #-20]	; 0xffffffec
     8d0:	ldr	ip, [fp, #-20]	; 0xffffffec
     8d4:	str	ip, [sp]
     8d8:	movw	lr, #2
     8dc:	str	lr, [sp, #4]
     8e0:	movw	lr, #172	; 0xac
     8e4:	str	lr, [sp, #8]
     8e8:	bl	0 <test_json>
     8ec:	ldr	r1, [fp, #-4]
     8f0:	orr	r0, r1, r0
     8f4:	str	r0, [fp, #-4]
     8f8:	ldr	r0, [fp, #-8]
     8fc:	movw	r1, #0
     900:	movt	r1, #0
     904:	movw	r2, #0
     908:	movt	r2, #0
     90c:	movw	r3, #0
     910:	movw	ip, #2
     914:	str	ip, [sp]
     918:	movw	ip, #4
     91c:	str	ip, [sp, #4]
     920:	movw	ip, #176	; 0xb0
     924:	str	ip, [sp, #8]
     928:	bl	0 <test_json>
     92c:	ldr	r1, [fp, #-4]
     930:	orr	r0, r1, r0
     934:	str	r0, [fp, #-4]
     938:	ldr	r0, [fp, #-8]
     93c:	movw	r1, #0
     940:	movt	r1, #0
     944:	movw	r2, #0
     948:	movt	r2, #0
     94c:	movw	r3, #0
     950:	str	r3, [fp, #-24]	; 0xffffffe8
     954:	ldr	ip, [fp, #-24]	; 0xffffffe8
     958:	str	ip, [sp]
     95c:	movw	lr, #8
     960:	str	lr, [sp, #4]
     964:	movw	lr, #180	; 0xb4
     968:	str	lr, [sp, #8]
     96c:	bl	0 <test_json>
     970:	ldr	r1, [fp, #-4]
     974:	orr	r0, r1, r0
     978:	str	r0, [fp, #-4]
     97c:	ldr	r0, [fp, #-8]
     980:	movw	r1, #0
     984:	movt	r1, #0
     988:	movw	r2, #0
     98c:	movt	r2, #0
     990:	movw	r3, #0
     994:	str	r3, [fp, #-28]	; 0xffffffe4
     998:	movw	ip, #2
     99c:	str	ip, [sp]
     9a0:	ldr	ip, [fp, #-28]	; 0xffffffe4
     9a4:	str	ip, [sp, #4]
     9a8:	movw	lr, #195	; 0xc3
     9ac:	str	lr, [sp, #8]
     9b0:	bl	0 <test_json>
     9b4:	ldr	r1, [fp, #-4]
     9b8:	orr	r0, r1, r0
     9bc:	str	r0, [fp, #-4]
     9c0:	ldr	r0, [fp, #-8]
     9c4:	movw	r1, #0
     9c8:	movt	r1, #0
     9cc:	movw	r2, #0
     9d0:	movt	r2, #0
     9d4:	movw	r3, #0
     9d8:	str	r3, [fp, #-32]	; 0xffffffe0
     9dc:	movw	ip, #1
     9e0:	str	ip, [sp]
     9e4:	ldr	ip, [fp, #-32]	; 0xffffffe0
     9e8:	str	ip, [sp, #4]
     9ec:	movw	lr, #199	; 0xc7
     9f0:	str	lr, [sp, #8]
     9f4:	bl	0 <test_json>
     9f8:	ldr	r1, [fp, #-4]
     9fc:	orr	r0, r1, r0
     a00:	str	r0, [fp, #-4]
     a04:	ldr	r0, [fp, #-8]
     a08:	movw	r1, #0
     a0c:	movt	r1, #0
     a10:	movw	r2, #0
     a14:	movt	r2, #0
     a18:	movw	r3, #0
     a1c:	movw	ip, #1
     a20:	str	ip, [sp]
     a24:	str	ip, [sp, #4]
     a28:	movw	ip, #203	; 0xcb
     a2c:	str	ip, [sp, #8]
     a30:	bl	0 <test_json>
     a34:	ldr	r1, [fp, #-4]
     a38:	orr	r0, r1, r0
     a3c:	str	r0, [fp, #-4]
     a40:	ldr	r0, [fp, #-8]
     a44:	movw	r1, #0
     a48:	movt	r1, #0
     a4c:	movw	r2, #0
     a50:	movt	r2, #0
     a54:	movw	r3, #0
     a58:	str	r3, [sp, #36]	; 0x24
     a5c:	movw	ip, #1
     a60:	str	ip, [sp]
     a64:	ldr	ip, [sp, #36]	; 0x24
     a68:	str	ip, [sp, #4]
     a6c:	movw	lr, #209	; 0xd1
     a70:	str	lr, [sp, #8]
     a74:	bl	0 <test_json>
     a78:	ldr	r1, [fp, #-4]
     a7c:	orr	r0, r1, r0
     a80:	str	r0, [fp, #-4]
     a84:	ldr	r0, [fp, #-8]
     a88:	movw	r1, #0
     a8c:	movt	r1, #0
     a90:	movw	r2, #0
     a94:	movt	r2, #0
     a98:	movw	r3, #0
     a9c:	str	r3, [sp, #32]
     aa0:	movw	ip, #2
     aa4:	str	ip, [sp]
     aa8:	ldr	ip, [sp, #32]
     aac:	str	ip, [sp, #4]
     ab0:	movw	lr, #217	; 0xd9
     ab4:	str	lr, [sp, #8]
     ab8:	bl	0 <test_json>
     abc:	ldr	r1, [fp, #-4]
     ac0:	orr	r0, r1, r0
     ac4:	str	r0, [fp, #-4]
     ac8:	ldr	r0, [fp, #-8]
     acc:	movw	r1, #0
     ad0:	movt	r1, #0
     ad4:	movw	r2, #0
     ad8:	movt	r2, #0
     adc:	movw	r3, #0
     ae0:	str	r3, [sp, #28]
     ae4:	ldr	ip, [sp, #28]
     ae8:	str	ip, [sp]
     aec:	movw	lr, #2
     af0:	str	lr, [sp, #4]
     af4:	movw	lr, #221	; 0xdd
     af8:	str	lr, [sp, #8]
     afc:	bl	0 <test_json>
     b00:	ldr	r1, [fp, #-4]
     b04:	orr	r0, r1, r0
     b08:	str	r0, [fp, #-4]
     b0c:	ldr	r0, [fp, #-8]
     b10:	movw	r1, #0
     b14:	movt	r1, #0
     b18:	movw	r2, #0
     b1c:	movt	r2, #0
     b20:	movw	r3, #0
     b24:	movw	ip, #2
     b28:	str	ip, [sp]
     b2c:	movw	ip, #4
     b30:	str	ip, [sp, #4]
     b34:	movw	ip, #225	; 0xe1
     b38:	str	ip, [sp, #8]
     b3c:	bl	0 <test_json>
     b40:	ldr	r1, [fp, #-4]
     b44:	orr	r0, r1, r0
     b48:	str	r0, [fp, #-4]
     b4c:	ldr	r0, [fp, #-8]
     b50:	movw	r1, #0
     b54:	movt	r1, #0
     b58:	movw	r2, #0
     b5c:	movt	r2, #0
     b60:	movw	r3, #0
     b64:	str	r3, [sp, #24]
     b68:	ldr	ip, [sp, #24]
     b6c:	str	ip, [sp]
     b70:	movw	lr, #8
     b74:	str	lr, [sp, #4]
     b78:	movw	lr, #229	; 0xe5
     b7c:	str	lr, [sp, #8]
     b80:	bl	0 <test_json>
     b84:	ldr	r1, [fp, #-4]
     b88:	orr	r0, r1, r0
     b8c:	str	r0, [fp, #-4]
     b90:	ldr	r0, [fp, #-8]
     b94:	movw	r1, #0
     b98:	movt	r1, #0
     b9c:	movw	r2, #0
     ba0:	movt	r2, #0
     ba4:	movw	r3, #0
     ba8:	str	r3, [sp, #20]
     bac:	movw	ip, #2
     bb0:	str	ip, [sp]
     bb4:	ldr	ip, [sp, #20]
     bb8:	str	ip, [sp, #4]
     bbc:	movw	lr, #233	; 0xe9
     bc0:	str	lr, [sp, #8]
     bc4:	bl	0 <test_json>
     bc8:	ldr	r1, [fp, #-4]
     bcc:	orr	r0, r1, r0
     bd0:	str	r0, [fp, #-4]
     bd4:	ldr	r0, [fp, #-8]
     bd8:	movw	r1, #0
     bdc:	movt	r1, #0
     be0:	movw	r2, #0
     be4:	movt	r2, #0
     be8:	movw	r3, #0
     bec:	str	r3, [sp, #16]
     bf0:	movw	ip, #1
     bf4:	str	ip, [sp]
     bf8:	ldr	ip, [sp, #16]
     bfc:	str	ip, [sp, #4]
     c00:	movw	lr, #237	; 0xed
     c04:	str	lr, [sp, #8]
     c08:	bl	0 <test_json>
     c0c:	ldr	r1, [fp, #-4]
     c10:	orr	r0, r1, r0
     c14:	str	r0, [fp, #-4]
     c18:	ldr	r0, [fp, #-8]
     c1c:	movw	r1, #0
     c20:	movt	r1, #0
     c24:	movw	r2, #0
     c28:	movt	r2, #0
     c2c:	movw	r3, #0
     c30:	movw	ip, #1
     c34:	str	ip, [sp]
     c38:	str	ip, [sp, #4]
     c3c:	movw	ip, #241	; 0xf1
     c40:	str	ip, [sp, #8]
     c44:	bl	0 <test_json>
     c48:	ldr	r1, [fp, #-4]
     c4c:	orr	r0, r1, r0
     c50:	str	r0, [fp, #-4]
     c54:	ldr	r0, [fp, #-8]
     c58:	movw	r1, #0
     c5c:	movt	r1, #0
     c60:	movw	r2, #0
     c64:	movt	r2, #0
     c68:	movw	r3, #0
     c6c:	str	r3, [sp, #12]
     c70:	movw	ip, #1
     c74:	str	ip, [sp]
     c78:	ldr	ip, [sp, #12]
     c7c:	str	ip, [sp, #4]
     c80:	movw	lr, #247	; 0xf7
     c84:	str	lr, [sp, #8]
     c88:	bl	0 <test_json>
     c8c:	ldr	r1, [fp, #-4]
     c90:	orr	r0, r1, r0
     c94:	str	r0, [fp, #-4]
     c98:	ldr	r0, [fp, #-4]
     c9c:	mov	sp, fp
     ca0:	pop	{fp, pc}

00000ca4 <error_case_tests>:
     ca4:	push	{fp, lr}
     ca8:	mov	fp, sp
     cac:	sub	sp, sp, #96	; 0x60
     cb0:	movw	r0, #0
     cb4:	str	r0, [fp, #-4]
     cb8:	movw	r1, #0
     cbc:	movt	r1, #0
     cc0:	str	r1, [fp, #-8]
     cc4:	ldr	r1, [fp, #-8]
     cc8:	str	r0, [fp, #-12]
     ccc:	mov	r0, r1
     cd0:	movw	r1, #0
     cd4:	movt	r1, #0
     cd8:	ldr	r2, [fp, #-12]
     cdc:	movw	r3, #13
     ce0:	ldr	ip, [fp, #-12]
     ce4:	str	ip, [sp]
     ce8:	str	ip, [sp, #4]
     cec:	movw	lr, #285	; 0x11d
     cf0:	str	lr, [sp, #8]
     cf4:	bl	0 <test_json>
     cf8:	ldr	r1, [fp, #-4]
     cfc:	orr	r0, r1, r0
     d00:	str	r0, [fp, #-4]
     d04:	ldr	r0, [fp, #-8]
     d08:	movw	r1, #0
     d0c:	movt	r1, #0
     d10:	movw	r2, #0
     d14:	str	r2, [fp, #-16]
     d18:	movw	r3, #13
     d1c:	ldr	ip, [fp, #-16]
     d20:	str	ip, [sp]
     d24:	str	ip, [sp, #4]
     d28:	movw	lr, #287	; 0x11f
     d2c:	str	lr, [sp, #8]
     d30:	bl	0 <test_json>
     d34:	ldr	r1, [fp, #-4]
     d38:	orr	r0, r1, r0
     d3c:	str	r0, [fp, #-4]
     d40:	ldr	r0, [fp, #-8]
     d44:	movw	r1, #0
     d48:	movt	r1, #0
     d4c:	movw	r2, #0
     d50:	str	r2, [fp, #-20]	; 0xffffffec
     d54:	movw	r3, #13
     d58:	ldr	ip, [fp, #-20]	; 0xffffffec
     d5c:	str	ip, [sp]
     d60:	str	ip, [sp, #4]
     d64:	movw	lr, #289	; 0x121
     d68:	str	lr, [sp, #8]
     d6c:	bl	0 <test_json>
     d70:	ldr	r1, [fp, #-4]
     d74:	orr	r0, r1, r0
     d78:	str	r0, [fp, #-4]
     d7c:	ldr	r0, [fp, #-8]
     d80:	movw	r1, #0
     d84:	movt	r1, #0
     d88:	movw	r2, #0
     d8c:	str	r2, [fp, #-24]	; 0xffffffe8
     d90:	movw	r3, #13
     d94:	ldr	ip, [fp, #-24]	; 0xffffffe8
     d98:	str	ip, [sp]
     d9c:	str	ip, [sp, #4]
     da0:	movw	lr, #291	; 0x123
     da4:	str	lr, [sp, #8]
     da8:	bl	0 <test_json>
     dac:	ldr	r1, [fp, #-4]
     db0:	orr	r0, r1, r0
     db4:	str	r0, [fp, #-4]
     db8:	ldr	r0, [fp, #-8]
     dbc:	movw	r1, #0
     dc0:	movt	r1, #0
     dc4:	movw	r2, #0
     dc8:	str	r2, [fp, #-28]	; 0xffffffe4
     dcc:	movw	r3, #13
     dd0:	ldr	ip, [fp, #-28]	; 0xffffffe4
     dd4:	str	ip, [sp]
     dd8:	str	ip, [sp, #4]
     ddc:	movw	lr, #293	; 0x125
     de0:	str	lr, [sp, #8]
     de4:	bl	0 <test_json>
     de8:	ldr	r1, [fp, #-4]
     dec:	orr	r0, r1, r0
     df0:	str	r0, [fp, #-4]
     df4:	ldr	r0, [fp, #-8]
     df8:	movw	r1, #0
     dfc:	movt	r1, #0
     e00:	movw	r2, #0
     e04:	str	r2, [fp, #-32]	; 0xffffffe0
     e08:	movw	r3, #13
     e0c:	ldr	ip, [fp, #-32]	; 0xffffffe0
     e10:	str	ip, [sp]
     e14:	str	ip, [sp, #4]
     e18:	movw	lr, #296	; 0x128
     e1c:	str	lr, [sp, #8]
     e20:	bl	0 <test_json>
     e24:	ldr	r1, [fp, #-4]
     e28:	orr	r0, r1, r0
     e2c:	str	r0, [fp, #-4]
     e30:	ldr	r0, [fp, #-8]
     e34:	movw	r1, #0
     e38:	movt	r1, #0
     e3c:	movw	r2, #0
     e40:	str	r2, [fp, #-36]	; 0xffffffdc
     e44:	movw	r3, #13
     e48:	ldr	ip, [fp, #-36]	; 0xffffffdc
     e4c:	str	ip, [sp]
     e50:	str	ip, [sp, #4]
     e54:	movw	lr, #299	; 0x12b
     e58:	str	lr, [sp, #8]
     e5c:	bl	0 <test_json>
     e60:	ldr	r1, [fp, #-4]
     e64:	orr	r0, r1, r0
     e68:	str	r0, [fp, #-4]
     e6c:	ldr	r0, [fp, #-8]
     e70:	movw	r1, #0
     e74:	movt	r1, #0
     e78:	movw	r2, #0
     e7c:	str	r2, [fp, #-40]	; 0xffffffd8
     e80:	movw	r3, #13
     e84:	ldr	ip, [fp, #-40]	; 0xffffffd8
     e88:	str	ip, [sp]
     e8c:	str	ip, [sp, #4]
     e90:	movw	lr, #303	; 0x12f
     e94:	str	lr, [sp, #8]
     e98:	bl	0 <test_json>
     e9c:	ldr	r1, [fp, #-4]
     ea0:	orr	r0, r1, r0
     ea4:	str	r0, [fp, #-4]
     ea8:	ldr	r0, [fp, #-8]
     eac:	movw	r1, #0
     eb0:	movt	r1, #0
     eb4:	movw	r2, #0
     eb8:	str	r2, [fp, #-44]	; 0xffffffd4
     ebc:	movw	r3, #13
     ec0:	ldr	ip, [fp, #-44]	; 0xffffffd4
     ec4:	str	ip, [sp]
     ec8:	str	ip, [sp, #4]
     ecc:	movw	lr, #307	; 0x133
     ed0:	str	lr, [sp, #8]
     ed4:	bl	0 <test_json>
     ed8:	ldr	r1, [fp, #-4]
     edc:	orr	r0, r1, r0
     ee0:	str	r0, [fp, #-4]
     ee4:	ldr	r0, [fp, #-8]
     ee8:	movw	r1, #0
     eec:	movt	r1, #0
     ef0:	movw	r2, #0
     ef4:	str	r2, [sp, #48]	; 0x30
     ef8:	movw	r3, #13
     efc:	ldr	ip, [sp, #48]	; 0x30
     f00:	str	ip, [sp]
     f04:	str	ip, [sp, #4]
     f08:	movw	lr, #322	; 0x142
     f0c:	str	lr, [sp, #8]
     f10:	bl	0 <test_json>
     f14:	ldr	r1, [fp, #-4]
     f18:	orr	r0, r1, r0
     f1c:	str	r0, [fp, #-4]
     f20:	ldr	r0, [fp, #-8]
     f24:	movw	r1, #0
     f28:	movt	r1, #0
     f2c:	movw	r2, #0
     f30:	str	r2, [sp, #44]	; 0x2c
     f34:	movw	r3, #13
     f38:	ldr	ip, [sp, #44]	; 0x2c
     f3c:	str	ip, [sp]
     f40:	str	ip, [sp, #4]
     f44:	movw	lr, #324	; 0x144
     f48:	str	lr, [sp, #8]
     f4c:	bl	0 <test_json>
     f50:	ldr	r1, [fp, #-4]
     f54:	orr	r0, r1, r0
     f58:	str	r0, [fp, #-4]
     f5c:	ldr	r0, [fp, #-8]
     f60:	movw	r1, #0
     f64:	movt	r1, #0
     f68:	movw	r2, #0
     f6c:	str	r2, [sp, #40]	; 0x28
     f70:	movw	r3, #13
     f74:	ldr	ip, [sp, #40]	; 0x28
     f78:	str	ip, [sp]
     f7c:	str	ip, [sp, #4]
     f80:	movw	lr, #326	; 0x146
     f84:	str	lr, [sp, #8]
     f88:	bl	0 <test_json>
     f8c:	ldr	r1, [fp, #-4]
     f90:	orr	r0, r1, r0
     f94:	str	r0, [fp, #-4]
     f98:	ldr	r0, [fp, #-8]
     f9c:	movw	r1, #0
     fa0:	movt	r1, #0
     fa4:	movw	r2, #0
     fa8:	str	r2, [sp, #36]	; 0x24
     fac:	movw	r3, #13
     fb0:	ldr	ip, [sp, #36]	; 0x24
     fb4:	str	ip, [sp]
     fb8:	str	ip, [sp, #4]
     fbc:	movw	lr, #328	; 0x148
     fc0:	str	lr, [sp, #8]
     fc4:	bl	0 <test_json>
     fc8:	ldr	r1, [fp, #-4]
     fcc:	orr	r0, r1, r0
     fd0:	str	r0, [fp, #-4]
     fd4:	ldr	r0, [fp, #-8]
     fd8:	movw	r1, #0
     fdc:	movt	r1, #0
     fe0:	movw	r2, #0
     fe4:	str	r2, [sp, #32]
     fe8:	movw	r3, #13
     fec:	ldr	ip, [sp, #32]
     ff0:	str	ip, [sp]
     ff4:	str	ip, [sp, #4]
     ff8:	movw	lr, #330	; 0x14a
     ffc:	str	lr, [sp, #8]
    1000:	bl	0 <test_json>
    1004:	ldr	r1, [fp, #-4]
    1008:	orr	r0, r1, r0
    100c:	str	r0, [fp, #-4]
    1010:	ldr	r0, [fp, #-8]
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	movw	r2, #0
    1020:	str	r2, [sp, #28]
    1024:	movw	r3, #13
    1028:	ldr	ip, [sp, #28]
    102c:	str	ip, [sp]
    1030:	str	ip, [sp, #4]
    1034:	movw	lr, #333	; 0x14d
    1038:	str	lr, [sp, #8]
    103c:	bl	0 <test_json>
    1040:	ldr	r1, [fp, #-4]
    1044:	orr	r0, r1, r0
    1048:	str	r0, [fp, #-4]
    104c:	ldr	r0, [fp, #-8]
    1050:	movw	r1, #0
    1054:	movt	r1, #0
    1058:	movw	r2, #0
    105c:	str	r2, [sp, #24]
    1060:	movw	r3, #13
    1064:	ldr	ip, [sp, #24]
    1068:	str	ip, [sp]
    106c:	str	ip, [sp, #4]
    1070:	movw	lr, #336	; 0x150
    1074:	str	lr, [sp, #8]
    1078:	bl	0 <test_json>
    107c:	ldr	r1, [fp, #-4]
    1080:	orr	r0, r1, r0
    1084:	str	r0, [fp, #-4]
    1088:	ldr	r0, [fp, #-8]
    108c:	movw	r1, #0
    1090:	movt	r1, #0
    1094:	movw	r2, #0
    1098:	str	r2, [sp, #20]
    109c:	movw	r3, #13
    10a0:	ldr	ip, [sp, #20]
    10a4:	str	ip, [sp]
    10a8:	str	ip, [sp, #4]
    10ac:	movw	lr, #340	; 0x154
    10b0:	str	lr, [sp, #8]
    10b4:	bl	0 <test_json>
    10b8:	ldr	r1, [fp, #-4]
    10bc:	orr	r0, r1, r0
    10c0:	str	r0, [fp, #-4]
    10c4:	ldr	r0, [fp, #-8]
    10c8:	movw	r1, #0
    10cc:	movt	r1, #0
    10d0:	movw	r2, #0
    10d4:	str	r2, [sp, #16]
    10d8:	movw	r3, #13
    10dc:	ldr	ip, [sp, #16]
    10e0:	str	ip, [sp]
    10e4:	str	ip, [sp, #4]
    10e8:	movw	lr, #344	; 0x158
    10ec:	str	lr, [sp, #8]
    10f0:	bl	0 <test_json>
    10f4:	ldr	r1, [fp, #-4]
    10f8:	orr	r0, r1, r0
    10fc:	str	r0, [fp, #-4]
    1100:	ldr	r0, [fp, #-4]
    1104:	mov	sp, fp
    1108:	pop	{fp, pc}

0000110c <base64_tests>:
    110c:	push	{fp, lr}
    1110:	mov	fp, sp
    1114:	sub	sp, sp, #64	; 0x40
    1118:	movw	r0, #0
    111c:	str	r0, [fp, #-4]
    1120:	movw	r1, #0
    1124:	movt	r1, #0
    1128:	str	r1, [fp, #-8]
    112c:	ldr	r1, [fp, #-8]
    1130:	str	r0, [fp, #-12]
    1134:	mov	r0, r1
    1138:	movw	r1, #0
    113c:	movt	r1, #0
    1140:	movw	r2, #0
    1144:	movt	r2, #0
    1148:	ldr	r3, [fp, #-12]
    114c:	ldr	ip, [fp, #-12]
    1150:	str	ip, [sp]
    1154:	str	ip, [sp, #4]
    1158:	movw	lr, #369	; 0x171
    115c:	str	lr, [sp, #8]
    1160:	bl	0 <test_json>
    1164:	ldr	r1, [fp, #-4]
    1168:	orr	r0, r1, r0
    116c:	str	r0, [fp, #-4]
    1170:	ldr	r0, [fp, #-8]
    1174:	movw	r1, #0
    1178:	movt	r1, #0
    117c:	movw	r2, #0
    1180:	movt	r2, #0
    1184:	movw	r3, #0
    1188:	str	r3, [fp, #-16]
    118c:	ldr	ip, [fp, #-16]
    1190:	str	ip, [sp]
    1194:	str	ip, [sp, #4]
    1198:	movw	lr, #372	; 0x174
    119c:	str	lr, [sp, #8]
    11a0:	bl	0 <test_json>
    11a4:	ldr	r1, [fp, #-4]
    11a8:	orr	r0, r1, r0
    11ac:	str	r0, [fp, #-4]
    11b0:	ldr	r0, [fp, #-8]
    11b4:	movw	r1, #0
    11b8:	movt	r1, #0
    11bc:	movw	r2, #0
    11c0:	movt	r2, #0
    11c4:	movw	r3, #0
    11c8:	str	r3, [fp, #-20]	; 0xffffffec
    11cc:	ldr	ip, [fp, #-20]	; 0xffffffec
    11d0:	str	ip, [sp]
    11d4:	str	ip, [sp, #4]
    11d8:	movw	lr, #376	; 0x178
    11dc:	str	lr, [sp, #8]
    11e0:	bl	0 <test_json>
    11e4:	ldr	r1, [fp, #-4]
    11e8:	orr	r0, r1, r0
    11ec:	str	r0, [fp, #-4]
    11f0:	ldr	r0, [fp, #-8]
    11f4:	movw	r1, #0
    11f8:	movt	r1, #0
    11fc:	movw	r2, #0
    1200:	movt	r2, #0
    1204:	movw	r3, #0
    1208:	str	r3, [fp, #-24]	; 0xffffffe8
    120c:	ldr	ip, [fp, #-24]	; 0xffffffe8
    1210:	str	ip, [sp]
    1214:	str	ip, [sp, #4]
    1218:	movw	lr, #379	; 0x17b
    121c:	str	lr, [sp, #8]
    1220:	bl	0 <test_json>
    1224:	ldr	r1, [fp, #-4]
    1228:	orr	r0, r1, r0
    122c:	str	r0, [fp, #-4]
    1230:	ldr	r0, [fp, #-8]
    1234:	movw	r1, #0
    1238:	movt	r1, #0
    123c:	movw	r2, #0
    1240:	movt	r2, #0
    1244:	movw	r3, #0
    1248:	str	r3, [fp, #-28]	; 0xffffffe4
    124c:	ldr	ip, [fp, #-28]	; 0xffffffe4
    1250:	str	ip, [sp]
    1254:	str	ip, [sp, #4]
    1258:	movw	lr, #382	; 0x17e
    125c:	str	lr, [sp, #8]
    1260:	bl	0 <test_json>
    1264:	ldr	r1, [fp, #-4]
    1268:	orr	r0, r1, r0
    126c:	str	r0, [fp, #-4]
    1270:	ldr	r0, [fp, #-8]
    1274:	movw	r1, #0
    1278:	movt	r1, #0
    127c:	movw	r2, #0
    1280:	movt	r2, #0
    1284:	movw	r3, #0
    1288:	str	r3, [sp, #32]
    128c:	ldr	ip, [sp, #32]
    1290:	str	ip, [sp]
    1294:	str	ip, [sp, #4]
    1298:	movw	lr, #385	; 0x181
    129c:	str	lr, [sp, #8]
    12a0:	bl	0 <test_json>
    12a4:	ldr	r1, [fp, #-4]
    12a8:	orr	r0, r1, r0
    12ac:	str	r0, [fp, #-4]
    12b0:	ldr	r0, [fp, #-8]
    12b4:	movw	r1, #0
    12b8:	movt	r1, #0
    12bc:	movw	r2, #0
    12c0:	str	r2, [sp, #28]
    12c4:	movw	r3, #31
    12c8:	ldr	ip, [sp, #28]
    12cc:	str	ip, [sp]
    12d0:	str	ip, [sp, #4]
    12d4:	movw	lr, #388	; 0x184
    12d8:	str	lr, [sp, #8]
    12dc:	bl	0 <test_json>
    12e0:	ldr	r1, [fp, #-4]
    12e4:	orr	r0, r1, r0
    12e8:	str	r0, [fp, #-4]
    12ec:	ldr	r0, [fp, #-8]
    12f0:	movw	r1, #0
    12f4:	movt	r1, #0
    12f8:	movw	r2, #0
    12fc:	str	r2, [sp, #24]
    1300:	movw	r3, #32
    1304:	ldr	ip, [sp, #24]
    1308:	str	ip, [sp]
    130c:	str	ip, [sp, #4]
    1310:	movw	lr, #391	; 0x187
    1314:	str	lr, [sp, #8]
    1318:	bl	0 <test_json>
    131c:	ldr	r1, [fp, #-4]
    1320:	orr	r0, r1, r0
    1324:	str	r0, [fp, #-4]
    1328:	ldr	r0, [fp, #-8]
    132c:	movw	r1, #0
    1330:	movt	r1, #0
    1334:	movw	r2, #0
    1338:	movt	r2, #0
    133c:	movw	r3, #0
    1340:	str	r3, [sp, #20]
    1344:	ldr	ip, [sp, #20]
    1348:	str	ip, [sp]
    134c:	str	ip, [sp, #4]
    1350:	movw	lr, #406	; 0x196
    1354:	str	lr, [sp, #8]
    1358:	bl	0 <test_json>
    135c:	ldr	r1, [fp, #-4]
    1360:	orr	r0, r1, r0
    1364:	str	r0, [fp, #-4]
    1368:	ldr	r0, [fp, #-8]
    136c:	movw	r1, #0
    1370:	movt	r1, #0
    1374:	movw	r2, #0
    1378:	movt	r2, #0
    137c:	movw	r3, #0
    1380:	str	r3, [sp, #16]
    1384:	ldr	ip, [sp, #16]
    1388:	str	ip, [sp]
    138c:	str	ip, [sp, #4]
    1390:	movw	lr, #419	; 0x1a3
    1394:	str	lr, [sp, #8]
    1398:	bl	0 <test_json>
    139c:	ldr	r1, [fp, #-4]
    13a0:	orr	r0, r1, r0
    13a4:	str	r0, [fp, #-4]
    13a8:	ldr	r0, [fp, #-4]
    13ac:	mov	sp, fp
    13b0:	pop	{fp, pc}

000013b4 <mixed_type_union_tests>:
    13b4:	push	{fp, lr}
    13b8:	mov	fp, sp
    13bc:	sub	sp, sp, #48	; 0x30
    13c0:	movw	r0, #0
    13c4:	str	r0, [fp, #-4]
    13c8:	movw	r1, #0
    13cc:	movt	r1, #0
    13d0:	str	r1, [fp, #-8]
    13d4:	ldr	r1, [fp, #-8]
    13d8:	str	r0, [fp, #-12]
    13dc:	mov	r0, r1
    13e0:	movw	r1, #0
    13e4:	movt	r1, #0
    13e8:	movw	r2, #0
    13ec:	movt	r2, #0
    13f0:	ldr	r3, [fp, #-12]
    13f4:	ldr	ip, [fp, #-12]
    13f8:	str	ip, [sp]
    13fc:	str	ip, [sp, #4]
    1400:	movw	lr, #432	; 0x1b0
    1404:	str	lr, [sp, #8]
    1408:	bl	0 <test_json>
    140c:	ldr	r1, [fp, #-4]
    1410:	orr	r0, r1, r0
    1414:	str	r0, [fp, #-4]
    1418:	ldr	r0, [fp, #-8]
    141c:	movw	r1, #0
    1420:	movt	r1, #0
    1424:	movw	r2, #0
    1428:	movt	r2, #0
    142c:	movw	r3, #0
    1430:	str	r3, [fp, #-16]
    1434:	ldr	ip, [fp, #-16]
    1438:	str	ip, [sp]
    143c:	str	ip, [sp, #4]
    1440:	movw	lr, #437	; 0x1b5
    1444:	str	lr, [sp, #8]
    1448:	bl	0 <test_json>
    144c:	ldr	r1, [fp, #-4]
    1450:	orr	r0, r1, r0
    1454:	str	r0, [fp, #-4]
    1458:	ldr	r0, [fp, #-8]
    145c:	movw	r1, #0
    1460:	movt	r1, #0
    1464:	movw	r2, #0
    1468:	movt	r2, #0
    146c:	movw	r3, #0
    1470:	str	r3, [fp, #-20]	; 0xffffffec
    1474:	ldr	ip, [fp, #-20]	; 0xffffffec
    1478:	str	ip, [sp]
    147c:	str	ip, [sp, #4]
    1480:	movw	lr, #442	; 0x1ba
    1484:	str	lr, [sp, #8]
    1488:	bl	0 <test_json>
    148c:	ldr	r1, [fp, #-4]
    1490:	orr	r0, r1, r0
    1494:	str	r0, [fp, #-4]
    1498:	ldr	r0, [fp, #-8]
    149c:	movw	r1, #0
    14a0:	movt	r1, #0
    14a4:	movw	r2, #0
    14a8:	movt	r2, #0
    14ac:	movw	r3, #0
    14b0:	str	r3, [sp, #24]
    14b4:	ldr	ip, [sp, #24]
    14b8:	str	ip, [sp]
    14bc:	str	ip, [sp, #4]
    14c0:	movw	lr, #449	; 0x1c1
    14c4:	str	lr, [sp, #8]
    14c8:	bl	0 <test_json>
    14cc:	ldr	r1, [fp, #-4]
    14d0:	orr	r0, r1, r0
    14d4:	str	r0, [fp, #-4]
    14d8:	ldr	r0, [fp, #-8]
    14dc:	movw	r1, #0
    14e0:	movt	r1, #0
    14e4:	movw	r2, #0
    14e8:	movt	r2, #0
    14ec:	movw	r3, #0
    14f0:	str	r3, [sp, #20]
    14f4:	ldr	ip, [sp, #20]
    14f8:	str	ip, [sp]
    14fc:	str	ip, [sp, #4]
    1500:	movw	lr, #458	; 0x1ca
    1504:	str	lr, [sp, #8]
    1508:	bl	0 <test_json>
    150c:	ldr	r1, [fp, #-4]
    1510:	orr	r0, r1, r0
    1514:	str	r0, [fp, #-4]
    1518:	ldr	r0, [fp, #-8]
    151c:	movw	r1, #0
    1520:	movt	r1, #0
    1524:	movw	r2, #0
    1528:	movt	r2, #0
    152c:	movw	r3, #0
    1530:	str	r3, [sp, #16]
    1534:	ldr	ip, [sp, #16]
    1538:	str	ip, [sp]
    153c:	str	ip, [sp, #4]
    1540:	movw	lr, #469	; 0x1d5
    1544:	str	lr, [sp, #8]
    1548:	bl	0 <test_json>
    154c:	ldr	r1, [fp, #-4]
    1550:	orr	r0, r1, r0
    1554:	str	r0, [fp, #-4]
    1558:	ldr	r0, [fp, #-8]
    155c:	movw	r1, #0
    1560:	movt	r1, #0
    1564:	movw	r2, #0
    1568:	movt	r2, #0
    156c:	movw	r3, #0
    1570:	str	r3, [sp, #12]
    1574:	ldr	ip, [sp, #12]
    1578:	str	ip, [sp]
    157c:	str	ip, [sp, #4]
    1580:	movw	lr, #474	; 0x1da
    1584:	str	lr, [sp, #8]
    1588:	bl	0 <test_json>
    158c:	ldr	r1, [fp, #-4]
    1590:	orr	r0, r1, r0
    1594:	str	r0, [fp, #-4]
    1598:	ldr	r0, [fp, #-4]
    159c:	mov	sp, fp
    15a0:	pop	{fp, pc}

000015a4 <union_vector_tests>:
    15a4:	push	{fp, lr}
    15a8:	mov	fp, sp
    15ac:	sub	sp, sp, #48	; 0x30
    15b0:	movw	r0, #0
    15b4:	str	r0, [fp, #-4]
    15b8:	movw	r1, #0
    15bc:	movt	r1, #0
    15c0:	str	r1, [fp, #-8]
    15c4:	ldr	r1, [fp, #-8]
    15c8:	str	r0, [fp, #-12]
    15cc:	mov	r0, r1
    15d0:	movw	r1, #0
    15d4:	movt	r1, #0
    15d8:	movw	r2, #0
    15dc:	movt	r2, #0
    15e0:	ldr	r3, [fp, #-12]
    15e4:	ldr	ip, [fp, #-12]
    15e8:	str	ip, [sp]
    15ec:	str	ip, [sp, #4]
    15f0:	movw	lr, #485	; 0x1e5
    15f4:	str	lr, [sp, #8]
    15f8:	bl	0 <test_json>
    15fc:	ldr	r1, [fp, #-4]
    1600:	orr	r0, r1, r0
    1604:	str	r0, [fp, #-4]
    1608:	ldr	r0, [fp, #-8]
    160c:	movw	r1, #0
    1610:	movt	r1, #0
    1614:	movw	r2, #0
    1618:	movt	r2, #0
    161c:	movw	r3, #0
    1620:	str	r3, [fp, #-16]
    1624:	ldr	ip, [fp, #-16]
    1628:	str	ip, [sp]
    162c:	str	ip, [sp, #4]
    1630:	movw	lr, #488	; 0x1e8
    1634:	str	lr, [sp, #8]
    1638:	bl	0 <test_json>
    163c:	ldr	r1, [fp, #-4]
    1640:	orr	r0, r1, r0
    1644:	str	r0, [fp, #-4]
    1648:	ldr	r0, [fp, #-8]
    164c:	movw	r1, #0
    1650:	movt	r1, #0
    1654:	movw	r2, #0
    1658:	movt	r2, #0
    165c:	movw	r3, #0
    1660:	str	r3, [fp, #-20]	; 0xffffffec
    1664:	ldr	ip, [fp, #-20]	; 0xffffffec
    1668:	str	ip, [sp]
    166c:	str	ip, [sp, #4]
    1670:	movw	lr, #491	; 0x1eb
    1674:	str	lr, [sp, #8]
    1678:	bl	0 <test_json>
    167c:	ldr	r1, [fp, #-4]
    1680:	orr	r0, r1, r0
    1684:	str	r0, [fp, #-4]
    1688:	ldr	r0, [fp, #-8]
    168c:	movw	r1, #0
    1690:	movt	r1, #0
    1694:	movw	r2, #0
    1698:	movt	r2, #0
    169c:	movw	r3, #0
    16a0:	str	r3, [sp, #24]
    16a4:	ldr	ip, [sp, #24]
    16a8:	str	ip, [sp]
    16ac:	str	ip, [sp, #4]
    16b0:	movw	lr, #494	; 0x1ee
    16b4:	str	lr, [sp, #8]
    16b8:	bl	0 <test_json>
    16bc:	ldr	r1, [fp, #-4]
    16c0:	orr	r0, r1, r0
    16c4:	str	r0, [fp, #-4]
    16c8:	ldr	r0, [fp, #-8]
    16cc:	movw	r1, #0
    16d0:	movt	r1, #0
    16d4:	movw	r2, #0
    16d8:	movt	r2, #0
    16dc:	movw	r3, #0
    16e0:	str	r3, [sp, #20]
    16e4:	ldr	ip, [sp, #20]
    16e8:	str	ip, [sp]
    16ec:	str	ip, [sp, #4]
    16f0:	movw	lr, #497	; 0x1f1
    16f4:	str	lr, [sp, #8]
    16f8:	bl	0 <test_json>
    16fc:	ldr	r1, [fp, #-4]
    1700:	orr	r0, r1, r0
    1704:	str	r0, [fp, #-4]
    1708:	ldr	r0, [fp, #-8]
    170c:	movw	r1, #0
    1710:	movt	r1, #0
    1714:	movw	r2, #0
    1718:	movt	r2, #0
    171c:	movw	r3, #0
    1720:	str	r3, [sp, #16]
    1724:	ldr	ip, [sp, #16]
    1728:	str	ip, [sp]
    172c:	str	ip, [sp, #4]
    1730:	movw	lr, #500	; 0x1f4
    1734:	str	lr, [sp, #8]
    1738:	bl	0 <test_json>
    173c:	ldr	r1, [fp, #-4]
    1740:	orr	r0, r1, r0
    1744:	str	r0, [fp, #-4]
    1748:	ldr	r0, [fp, #-4]
    174c:	mov	sp, fp
    1750:	pop	{fp, pc}

00001754 <main>:
    1754:	push	{fp, lr}
    1758:	mov	fp, sp
    175c:	sub	sp, sp, #280	; 0x118
    1760:	movw	r0, #0
    1764:	str	r0, [fp, #-4]
    1768:	str	r0, [fp, #-8]
    176c:	movw	r0, #0
    1770:	movt	r0, #0
    1774:	str	r0, [fp, #-12]
    1778:	bl	80c <edge_case_tests>
    177c:	ldr	lr, [fp, #-8]
    1780:	orr	r0, lr, r0
    1784:	str	r0, [fp, #-8]
    1788:	bl	ca4 <error_case_tests>
    178c:	ldr	lr, [fp, #-8]
    1790:	orr	r0, lr, r0
    1794:	str	r0, [fp, #-8]
    1798:	bl	15a4 <union_vector_tests>
    179c:	ldr	lr, [fp, #-8]
    17a0:	orr	r0, lr, r0
    17a4:	str	r0, [fp, #-8]
    17a8:	bl	110c <base64_tests>
    17ac:	ldr	lr, [fp, #-8]
    17b0:	orr	r0, lr, r0
    17b4:	str	r0, [fp, #-8]
    17b8:	bl	13b4 <mixed_type_union_tests>
    17bc:	ldr	lr, [fp, #-8]
    17c0:	orr	r0, lr, r0
    17c4:	str	r0, [fp, #-8]
    17c8:	ldr	r0, [fp, #-12]
    17cc:	movw	r1, #0
    17d0:	movt	r1, #0
    17d4:	movw	r2, #0
    17d8:	movt	r2, #0
    17dc:	movw	lr, #0
    17e0:	mov	r3, lr
    17e4:	str	lr, [sp]
    17e8:	str	lr, [sp, #4]
    17ec:	movw	lr, #525	; 0x20d
    17f0:	str	lr, [sp, #8]
    17f4:	bl	0 <test_json>
    17f8:	ldr	r1, [fp, #-8]
    17fc:	orr	r0, r1, r0
    1800:	str	r0, [fp, #-8]
    1804:	ldr	r0, [fp, #-12]
    1808:	movw	r1, #0
    180c:	movt	r1, #0
    1810:	movw	r2, #0
    1814:	movt	r2, #0
    1818:	movw	r3, #0
    181c:	str	r3, [fp, #-16]
    1820:	ldr	lr, [fp, #-16]
    1824:	str	lr, [sp]
    1828:	str	lr, [sp, #4]
    182c:	movw	ip, #528	; 0x210
    1830:	str	ip, [sp, #8]
    1834:	bl	0 <test_json>
    1838:	ldr	r1, [fp, #-8]
    183c:	orr	r0, r1, r0
    1840:	str	r0, [fp, #-8]
    1844:	ldr	r0, [fp, #-12]
    1848:	movw	r1, #0
    184c:	movt	r1, #0
    1850:	movw	r2, #0
    1854:	movt	r2, #0
    1858:	movw	r3, #0
    185c:	str	r3, [fp, #-20]	; 0xffffffec
    1860:	ldr	ip, [fp, #-20]	; 0xffffffec
    1864:	str	ip, [sp]
    1868:	str	ip, [sp, #4]
    186c:	movw	lr, #531	; 0x213
    1870:	str	lr, [sp, #8]
    1874:	bl	0 <test_json>
    1878:	ldr	r1, [fp, #-8]
    187c:	orr	r0, r1, r0
    1880:	str	r0, [fp, #-8]
    1884:	ldr	r0, [fp, #-12]
    1888:	movw	r1, #0
    188c:	movt	r1, #0
    1890:	movw	r2, #0
    1894:	movt	r2, #0
    1898:	movw	r3, #0
    189c:	str	r3, [fp, #-24]	; 0xffffffe8
    18a0:	ldr	ip, [fp, #-24]	; 0xffffffe8
    18a4:	str	ip, [sp]
    18a8:	str	ip, [sp, #4]
    18ac:	movw	lr, #534	; 0x216
    18b0:	str	lr, [sp, #8]
    18b4:	bl	0 <test_json>
    18b8:	ldr	r1, [fp, #-8]
    18bc:	orr	r0, r1, r0
    18c0:	str	r0, [fp, #-8]
    18c4:	ldr	r0, [fp, #-12]
    18c8:	movw	r1, #0
    18cc:	movt	r1, #0
    18d0:	movw	r2, #0
    18d4:	movt	r2, #0
    18d8:	movw	r3, #0
    18dc:	str	r3, [fp, #-28]	; 0xffffffe4
    18e0:	ldr	ip, [fp, #-28]	; 0xffffffe4
    18e4:	str	ip, [sp]
    18e8:	str	ip, [sp, #4]
    18ec:	movw	lr, #537	; 0x219
    18f0:	str	lr, [sp, #8]
    18f4:	bl	0 <test_json>
    18f8:	ldr	r1, [fp, #-8]
    18fc:	orr	r0, r1, r0
    1900:	str	r0, [fp, #-8]
    1904:	ldr	r0, [fp, #-12]
    1908:	movw	r1, #0
    190c:	movt	r1, #0
    1910:	movw	r2, #0
    1914:	movt	r2, #0
    1918:	movw	r3, #0
    191c:	str	r3, [fp, #-32]	; 0xffffffe0
    1920:	ldr	ip, [fp, #-32]	; 0xffffffe0
    1924:	str	ip, [sp]
    1928:	str	ip, [sp, #4]
    192c:	movw	lr, #540	; 0x21c
    1930:	str	lr, [sp, #8]
    1934:	bl	0 <test_json>
    1938:	ldr	r1, [fp, #-8]
    193c:	orr	r0, r1, r0
    1940:	str	r0, [fp, #-8]
    1944:	ldr	r0, [fp, #-12]
    1948:	movw	r1, #0
    194c:	movt	r1, #0
    1950:	movw	r2, #0
    1954:	movt	r2, #0
    1958:	movw	r3, #0
    195c:	str	r3, [fp, #-36]	; 0xffffffdc
    1960:	ldr	ip, [fp, #-36]	; 0xffffffdc
    1964:	str	ip, [sp]
    1968:	str	ip, [sp, #4]
    196c:	movw	lr, #543	; 0x21f
    1970:	str	lr, [sp, #8]
    1974:	bl	0 <test_json>
    1978:	ldr	r1, [fp, #-8]
    197c:	orr	r0, r1, r0
    1980:	str	r0, [fp, #-8]
    1984:	ldr	r0, [fp, #-12]
    1988:	movw	r1, #0
    198c:	movt	r1, #0
    1990:	movw	r2, #0
    1994:	movt	r2, #0
    1998:	movw	r3, #0
    199c:	str	r3, [fp, #-40]	; 0xffffffd8
    19a0:	ldr	ip, [fp, #-40]	; 0xffffffd8
    19a4:	str	ip, [sp]
    19a8:	str	ip, [sp, #4]
    19ac:	movw	lr, #547	; 0x223
    19b0:	str	lr, [sp, #8]
    19b4:	bl	0 <test_json>
    19b8:	ldr	r1, [fp, #-8]
    19bc:	orr	r0, r1, r0
    19c0:	str	r0, [fp, #-8]
    19c4:	ldr	r0, [fp, #-12]
    19c8:	movw	r1, #0
    19cc:	movt	r1, #0
    19d0:	movw	r2, #0
    19d4:	movt	r2, #0
    19d8:	movw	r3, #0
    19dc:	str	r3, [fp, #-44]	; 0xffffffd4
    19e0:	ldr	ip, [fp, #-44]	; 0xffffffd4
    19e4:	str	ip, [sp]
    19e8:	str	ip, [sp, #4]
    19ec:	movw	lr, #551	; 0x227
    19f0:	str	lr, [sp, #8]
    19f4:	bl	0 <test_json>
    19f8:	ldr	r1, [fp, #-8]
    19fc:	orr	r0, r1, r0
    1a00:	str	r0, [fp, #-8]
    1a04:	ldr	r0, [fp, #-12]
    1a08:	movw	r1, #0
    1a0c:	movt	r1, #0
    1a10:	movw	r2, #0
    1a14:	movt	r2, #0
    1a18:	movw	r3, #0
    1a1c:	str	r3, [fp, #-48]	; 0xffffffd0
    1a20:	ldr	ip, [fp, #-48]	; 0xffffffd0
    1a24:	str	ip, [sp]
    1a28:	str	ip, [sp, #4]
    1a2c:	movw	lr, #555	; 0x22b
    1a30:	str	lr, [sp, #8]
    1a34:	bl	0 <test_json>
    1a38:	ldr	r1, [fp, #-8]
    1a3c:	orr	r0, r1, r0
    1a40:	str	r0, [fp, #-8]
    1a44:	ldr	r0, [fp, #-12]
    1a48:	movw	r1, #0
    1a4c:	movt	r1, #0
    1a50:	movw	r2, #0
    1a54:	movt	r2, #0
    1a58:	movw	r3, #0
    1a5c:	str	r3, [fp, #-52]	; 0xffffffcc
    1a60:	ldr	ip, [fp, #-52]	; 0xffffffcc
    1a64:	str	ip, [sp]
    1a68:	str	ip, [sp, #4]
    1a6c:	movw	lr, #558	; 0x22e
    1a70:	str	lr, [sp, #8]
    1a74:	bl	0 <test_json>
    1a78:	ldr	r1, [fp, #-8]
    1a7c:	orr	r0, r1, r0
    1a80:	str	r0, [fp, #-8]
    1a84:	ldr	r0, [fp, #-12]
    1a88:	movw	r1, #0
    1a8c:	movt	r1, #0
    1a90:	movw	r2, #0
    1a94:	movt	r2, #0
    1a98:	movw	r3, #0
    1a9c:	str	r3, [fp, #-56]	; 0xffffffc8
    1aa0:	ldr	ip, [fp, #-56]	; 0xffffffc8
    1aa4:	str	ip, [sp]
    1aa8:	str	ip, [sp, #4]
    1aac:	movw	lr, #561	; 0x231
    1ab0:	str	lr, [sp, #8]
    1ab4:	bl	0 <test_json>
    1ab8:	ldr	r1, [fp, #-8]
    1abc:	orr	r0, r1, r0
    1ac0:	str	r0, [fp, #-8]
    1ac4:	ldr	r0, [fp, #-12]
    1ac8:	movw	r1, #0
    1acc:	movt	r1, #0
    1ad0:	movw	r2, #0
    1ad4:	movt	r2, #0
    1ad8:	movw	r3, #0
    1adc:	str	r3, [fp, #-60]	; 0xffffffc4
    1ae0:	ldr	ip, [fp, #-60]	; 0xffffffc4
    1ae4:	str	ip, [sp]
    1ae8:	str	ip, [sp, #4]
    1aec:	movw	lr, #564	; 0x234
    1af0:	str	lr, [sp, #8]
    1af4:	bl	0 <test_json>
    1af8:	ldr	r1, [fp, #-8]
    1afc:	orr	r0, r1, r0
    1b00:	str	r0, [fp, #-8]
    1b04:	ldr	r0, [fp, #-12]
    1b08:	movw	r1, #0
    1b0c:	movt	r1, #0
    1b10:	movw	r2, #0
    1b14:	movt	r2, #0
    1b18:	movw	r3, #0
    1b1c:	str	r3, [fp, #-64]	; 0xffffffc0
    1b20:	ldr	ip, [fp, #-64]	; 0xffffffc0
    1b24:	str	ip, [sp]
    1b28:	str	ip, [sp, #4]
    1b2c:	movw	lr, #567	; 0x237
    1b30:	str	lr, [sp, #8]
    1b34:	bl	0 <test_json>
    1b38:	ldr	r1, [fp, #-8]
    1b3c:	orr	r0, r1, r0
    1b40:	str	r0, [fp, #-8]
    1b44:	ldr	r0, [fp, #-12]
    1b48:	movw	r1, #0
    1b4c:	movt	r1, #0
    1b50:	movw	r2, #0
    1b54:	movt	r2, #0
    1b58:	movw	r3, #0
    1b5c:	str	r3, [fp, #-68]	; 0xffffffbc
    1b60:	ldr	ip, [fp, #-68]	; 0xffffffbc
    1b64:	str	ip, [sp]
    1b68:	str	ip, [sp, #4]
    1b6c:	movw	lr, #570	; 0x23a
    1b70:	str	lr, [sp, #8]
    1b74:	bl	0 <test_json>
    1b78:	ldr	r1, [fp, #-8]
    1b7c:	orr	r0, r1, r0
    1b80:	str	r0, [fp, #-8]
    1b84:	ldr	r0, [fp, #-12]
    1b88:	movw	r1, #0
    1b8c:	movt	r1, #0
    1b90:	movw	r2, #0
    1b94:	movt	r2, #0
    1b98:	movw	r3, #0
    1b9c:	str	r3, [fp, #-72]	; 0xffffffb8
    1ba0:	ldr	ip, [fp, #-72]	; 0xffffffb8
    1ba4:	str	ip, [sp]
    1ba8:	str	ip, [sp, #4]
    1bac:	movw	lr, #573	; 0x23d
    1bb0:	str	lr, [sp, #8]
    1bb4:	bl	0 <test_json>
    1bb8:	ldr	r1, [fp, #-8]
    1bbc:	orr	r0, r1, r0
    1bc0:	str	r0, [fp, #-8]
    1bc4:	ldr	r0, [fp, #-12]
    1bc8:	movw	r1, #0
    1bcc:	movt	r1, #0
    1bd0:	movw	r2, #0
    1bd4:	movt	r2, #0
    1bd8:	movw	r3, #0
    1bdc:	str	r3, [fp, #-76]	; 0xffffffb4
    1be0:	ldr	ip, [fp, #-76]	; 0xffffffb4
    1be4:	str	ip, [sp]
    1be8:	str	ip, [sp, #4]
    1bec:	movw	lr, #577	; 0x241
    1bf0:	str	lr, [sp, #8]
    1bf4:	bl	0 <test_json>
    1bf8:	ldr	r1, [fp, #-8]
    1bfc:	orr	r0, r1, r0
    1c00:	str	r0, [fp, #-8]
    1c04:	ldr	r0, [fp, #-12]
    1c08:	movw	r1, #0
    1c0c:	movt	r1, #0
    1c10:	movw	r2, #0
    1c14:	movt	r2, #0
    1c18:	movw	r3, #0
    1c1c:	str	r3, [fp, #-80]	; 0xffffffb0
    1c20:	ldr	ip, [fp, #-80]	; 0xffffffb0
    1c24:	str	ip, [sp]
    1c28:	str	ip, [sp, #4]
    1c2c:	movw	lr, #581	; 0x245
    1c30:	str	lr, [sp, #8]
    1c34:	bl	0 <test_json>
    1c38:	ldr	r1, [fp, #-8]
    1c3c:	orr	r0, r1, r0
    1c40:	str	r0, [fp, #-8]
    1c44:	ldr	r0, [fp, #-12]
    1c48:	movw	r1, #0
    1c4c:	movt	r1, #0
    1c50:	movw	r2, #0
    1c54:	movt	r2, #0
    1c58:	movw	r3, #0
    1c5c:	str	r3, [fp, #-84]	; 0xffffffac
    1c60:	ldr	ip, [fp, #-84]	; 0xffffffac
    1c64:	str	ip, [sp]
    1c68:	str	ip, [sp, #4]
    1c6c:	movw	lr, #601	; 0x259
    1c70:	str	lr, [sp, #8]
    1c74:	bl	0 <test_json>
    1c78:	ldr	r1, [fp, #-8]
    1c7c:	orr	r0, r1, r0
    1c80:	str	r0, [fp, #-8]
    1c84:	ldr	r0, [fp, #-12]
    1c88:	movw	r1, #0
    1c8c:	movt	r1, #0
    1c90:	movw	r2, #0
    1c94:	movt	r2, #0
    1c98:	movw	r3, #0
    1c9c:	str	r3, [fp, #-88]	; 0xffffffa8
    1ca0:	ldr	ip, [fp, #-88]	; 0xffffffa8
    1ca4:	str	ip, [sp]
    1ca8:	str	ip, [sp, #4]
    1cac:	movw	lr, #604	; 0x25c
    1cb0:	str	lr, [sp, #8]
    1cb4:	bl	0 <test_json>
    1cb8:	ldr	r1, [fp, #-8]
    1cbc:	orr	r0, r1, r0
    1cc0:	str	r0, [fp, #-8]
    1cc4:	ldr	r0, [fp, #-12]
    1cc8:	movw	r1, #0
    1ccc:	movt	r1, #0
    1cd0:	movw	r2, #0
    1cd4:	movt	r2, #0
    1cd8:	movw	r3, #0
    1cdc:	str	r3, [fp, #-92]	; 0xffffffa4
    1ce0:	ldr	ip, [fp, #-92]	; 0xffffffa4
    1ce4:	str	ip, [sp]
    1ce8:	str	ip, [sp, #4]
    1cec:	movw	lr, #607	; 0x25f
    1cf0:	str	lr, [sp, #8]
    1cf4:	bl	0 <test_json>
    1cf8:	ldr	r1, [fp, #-8]
    1cfc:	orr	r0, r1, r0
    1d00:	str	r0, [fp, #-8]
    1d04:	ldr	r0, [fp, #-12]
    1d08:	movw	r1, #0
    1d0c:	movt	r1, #0
    1d10:	movw	r2, #0
    1d14:	movt	r2, #0
    1d18:	movw	r3, #0
    1d1c:	str	r3, [fp, #-96]	; 0xffffffa0
    1d20:	ldr	ip, [fp, #-96]	; 0xffffffa0
    1d24:	str	ip, [sp]
    1d28:	str	ip, [sp, #4]
    1d2c:	movw	lr, #610	; 0x262
    1d30:	str	lr, [sp, #8]
    1d34:	bl	0 <test_json>
    1d38:	ldr	r1, [fp, #-8]
    1d3c:	orr	r0, r1, r0
    1d40:	str	r0, [fp, #-8]
    1d44:	ldr	r0, [fp, #-12]
    1d48:	movw	r1, #0
    1d4c:	movt	r1, #0
    1d50:	movw	r2, #0
    1d54:	movt	r2, #0
    1d58:	movw	r3, #0
    1d5c:	str	r3, [fp, #-100]	; 0xffffff9c
    1d60:	ldr	ip, [fp, #-100]	; 0xffffff9c
    1d64:	str	ip, [sp]
    1d68:	str	ip, [sp, #4]
    1d6c:	movw	lr, #613	; 0x265
    1d70:	str	lr, [sp, #8]
    1d74:	bl	0 <test_json>
    1d78:	ldr	r1, [fp, #-8]
    1d7c:	orr	r0, r1, r0
    1d80:	str	r0, [fp, #-8]
    1d84:	ldr	r0, [fp, #-12]
    1d88:	movw	r1, #0
    1d8c:	movt	r1, #0
    1d90:	movw	r2, #0
    1d94:	movt	r2, #0
    1d98:	movw	r3, #0
    1d9c:	str	r3, [fp, #-104]	; 0xffffff98
    1da0:	ldr	ip, [fp, #-104]	; 0xffffff98
    1da4:	str	ip, [sp]
    1da8:	str	ip, [sp, #4]
    1dac:	movw	lr, #616	; 0x268
    1db0:	str	lr, [sp, #8]
    1db4:	bl	0 <test_json>
    1db8:	ldr	r1, [fp, #-8]
    1dbc:	orr	r0, r1, r0
    1dc0:	str	r0, [fp, #-8]
    1dc4:	ldr	r0, [fp, #-12]
    1dc8:	movw	r1, #0
    1dcc:	movt	r1, #0
    1dd0:	movw	r2, #0
    1dd4:	movt	r2, #0
    1dd8:	movw	r3, #0
    1ddc:	str	r3, [fp, #-108]	; 0xffffff94
    1de0:	ldr	ip, [fp, #-108]	; 0xffffff94
    1de4:	str	ip, [sp]
    1de8:	str	ip, [sp, #4]
    1dec:	movw	lr, #619	; 0x26b
    1df0:	str	lr, [sp, #8]
    1df4:	bl	0 <test_json>
    1df8:	ldr	r1, [fp, #-8]
    1dfc:	orr	r0, r1, r0
    1e00:	str	r0, [fp, #-8]
    1e04:	ldr	r0, [fp, #-12]
    1e08:	movw	r1, #0
    1e0c:	movt	r1, #0
    1e10:	movw	r2, #0
    1e14:	movt	r2, #0
    1e18:	movw	r3, #0
    1e1c:	str	r3, [fp, #-112]	; 0xffffff90
    1e20:	ldr	ip, [fp, #-112]	; 0xffffff90
    1e24:	str	ip, [sp]
    1e28:	str	ip, [sp, #4]
    1e2c:	movw	lr, #622	; 0x26e
    1e30:	str	lr, [sp, #8]
    1e34:	bl	0 <test_json>
    1e38:	ldr	r1, [fp, #-8]
    1e3c:	orr	r0, r1, r0
    1e40:	str	r0, [fp, #-8]
    1e44:	ldr	r0, [fp, #-12]
    1e48:	movw	r1, #0
    1e4c:	movt	r1, #0
    1e50:	movw	r2, #0
    1e54:	movt	r2, #0
    1e58:	movw	r3, #0
    1e5c:	str	r3, [fp, #-116]	; 0xffffff8c
    1e60:	ldr	ip, [fp, #-116]	; 0xffffff8c
    1e64:	str	ip, [sp]
    1e68:	str	ip, [sp, #4]
    1e6c:	movw	lr, #625	; 0x271
    1e70:	str	lr, [sp, #8]
    1e74:	bl	0 <test_json>
    1e78:	ldr	r1, [fp, #-8]
    1e7c:	orr	r0, r1, r0
    1e80:	str	r0, [fp, #-8]
    1e84:	ldr	r0, [fp, #-12]
    1e88:	movw	r1, #0
    1e8c:	movt	r1, #0
    1e90:	movw	r2, #0
    1e94:	movt	r2, #0
    1e98:	movw	r3, #0
    1e9c:	str	r3, [fp, #-120]	; 0xffffff88
    1ea0:	ldr	ip, [fp, #-120]	; 0xffffff88
    1ea4:	str	ip, [sp]
    1ea8:	str	ip, [sp, #4]
    1eac:	movw	lr, #628	; 0x274
    1eb0:	str	lr, [sp, #8]
    1eb4:	bl	0 <test_json>
    1eb8:	ldr	r1, [fp, #-8]
    1ebc:	orr	r0, r1, r0
    1ec0:	str	r0, [fp, #-8]
    1ec4:	ldr	r0, [fp, #-12]
    1ec8:	movw	r1, #0
    1ecc:	movt	r1, #0
    1ed0:	movw	r2, #0
    1ed4:	movt	r2, #0
    1ed8:	movw	r3, #0
    1edc:	str	r3, [fp, #-124]	; 0xffffff84
    1ee0:	ldr	ip, [fp, #-124]	; 0xffffff84
    1ee4:	str	ip, [sp]
    1ee8:	str	ip, [sp, #4]
    1eec:	movw	lr, #631	; 0x277
    1ef0:	str	lr, [sp, #8]
    1ef4:	bl	0 <test_json>
    1ef8:	ldr	r1, [fp, #-8]
    1efc:	orr	r0, r1, r0
    1f00:	str	r0, [fp, #-8]
    1f04:	ldr	r0, [fp, #-12]
    1f08:	movw	r1, #0
    1f0c:	movt	r1, #0
    1f10:	movw	r2, #0
    1f14:	movt	r2, #0
    1f18:	movw	r3, #0
    1f1c:	str	r3, [fp, #-128]	; 0xffffff80
    1f20:	ldr	ip, [fp, #-128]	; 0xffffff80
    1f24:	str	ip, [sp]
    1f28:	str	ip, [sp, #4]
    1f2c:	movw	lr, #634	; 0x27a
    1f30:	str	lr, [sp, #8]
    1f34:	bl	0 <test_json>
    1f38:	ldr	r1, [fp, #-8]
    1f3c:	orr	r0, r1, r0
    1f40:	str	r0, [fp, #-8]
    1f44:	ldr	r0, [fp, #-12]
    1f48:	movw	r1, #0
    1f4c:	movt	r1, #0
    1f50:	movw	r2, #0
    1f54:	movt	r2, #0
    1f58:	movw	r3, #0
    1f5c:	str	r3, [fp, #-132]	; 0xffffff7c
    1f60:	ldr	ip, [fp, #-132]	; 0xffffff7c
    1f64:	str	ip, [sp]
    1f68:	str	ip, [sp, #4]
    1f6c:	movw	lr, #638	; 0x27e
    1f70:	str	lr, [sp, #8]
    1f74:	bl	0 <test_json>
    1f78:	ldr	r1, [fp, #-8]
    1f7c:	orr	r0, r1, r0
    1f80:	str	r0, [fp, #-8]
    1f84:	ldr	r0, [fp, #-12]
    1f88:	movw	r1, #0
    1f8c:	movt	r1, #0
    1f90:	movw	r2, #0
    1f94:	movt	r2, #0
    1f98:	movw	r3, #0
    1f9c:	str	r3, [fp, #-136]	; 0xffffff78
    1fa0:	ldr	ip, [fp, #-136]	; 0xffffff78
    1fa4:	str	ip, [sp]
    1fa8:	str	ip, [sp, #4]
    1fac:	movw	lr, #642	; 0x282
    1fb0:	str	lr, [sp, #8]
    1fb4:	bl	0 <test_json>
    1fb8:	ldr	r1, [fp, #-8]
    1fbc:	orr	r0, r1, r0
    1fc0:	str	r0, [fp, #-8]
    1fc4:	ldr	r0, [fp, #-12]
    1fc8:	movw	r1, #0
    1fcc:	movt	r1, #0
    1fd0:	movw	r2, #0
    1fd4:	movt	r2, #0
    1fd8:	movw	r3, #0
    1fdc:	str	r3, [sp, #140]	; 0x8c
    1fe0:	ldr	ip, [sp, #140]	; 0x8c
    1fe4:	str	ip, [sp]
    1fe8:	str	ip, [sp, #4]
    1fec:	movw	lr, #646	; 0x286
    1ff0:	str	lr, [sp, #8]
    1ff4:	bl	0 <test_json>
    1ff8:	ldr	r1, [fp, #-8]
    1ffc:	orr	r0, r1, r0
    2000:	str	r0, [fp, #-8]
    2004:	ldr	r0, [fp, #-12]
    2008:	movw	r1, #0
    200c:	movt	r1, #0
    2010:	movw	r2, #0
    2014:	movt	r2, #0
    2018:	movw	r3, #0
    201c:	str	r3, [sp, #136]	; 0x88
    2020:	ldr	ip, [sp, #136]	; 0x88
    2024:	str	ip, [sp]
    2028:	str	ip, [sp, #4]
    202c:	movw	lr, #649	; 0x289
    2030:	str	lr, [sp, #8]
    2034:	bl	0 <test_json>
    2038:	ldr	r1, [fp, #-8]
    203c:	orr	r0, r1, r0
    2040:	str	r0, [fp, #-8]
    2044:	ldr	r0, [fp, #-12]
    2048:	movw	r1, #0
    204c:	movt	r1, #0
    2050:	movw	r2, #0
    2054:	movt	r2, #0
    2058:	movw	r3, #0
    205c:	str	r3, [sp, #132]	; 0x84
    2060:	ldr	ip, [sp, #132]	; 0x84
    2064:	str	ip, [sp]
    2068:	str	ip, [sp, #4]
    206c:	movw	lr, #653	; 0x28d
    2070:	str	lr, [sp, #8]
    2074:	bl	0 <test_json>
    2078:	ldr	r1, [fp, #-8]
    207c:	orr	r0, r1, r0
    2080:	str	r0, [fp, #-8]
    2084:	ldr	r0, [fp, #-12]
    2088:	movw	r1, #0
    208c:	movt	r1, #0
    2090:	movw	r2, #0
    2094:	movt	r2, #0
    2098:	movw	r3, #0
    209c:	str	r3, [sp, #128]	; 0x80
    20a0:	ldr	ip, [sp, #128]	; 0x80
    20a4:	str	ip, [sp]
    20a8:	str	ip, [sp, #4]
    20ac:	movw	lr, #656	; 0x290
    20b0:	str	lr, [sp, #8]
    20b4:	bl	0 <test_json>
    20b8:	ldr	r1, [fp, #-8]
    20bc:	orr	r0, r1, r0
    20c0:	str	r0, [fp, #-8]
    20c4:	ldr	r0, [fp, #-12]
    20c8:	movw	r1, #0
    20cc:	movt	r1, #0
    20d0:	movw	r2, #0
    20d4:	movt	r2, #0
    20d8:	movw	r3, #0
    20dc:	str	r3, [sp, #124]	; 0x7c
    20e0:	ldr	ip, [sp, #124]	; 0x7c
    20e4:	str	ip, [sp]
    20e8:	str	ip, [sp, #4]
    20ec:	movw	lr, #659	; 0x293
    20f0:	str	lr, [sp, #8]
    20f4:	bl	0 <test_json>
    20f8:	ldr	r1, [fp, #-8]
    20fc:	orr	r0, r1, r0
    2100:	str	r0, [fp, #-8]
    2104:	ldr	r0, [fp, #-12]
    2108:	movw	r1, #0
    210c:	movt	r1, #0
    2110:	movw	r2, #0
    2114:	movt	r2, #0
    2118:	movw	r3, #0
    211c:	str	r3, [sp, #120]	; 0x78
    2120:	ldr	ip, [sp, #120]	; 0x78
    2124:	str	ip, [sp]
    2128:	str	ip, [sp, #4]
    212c:	movw	lr, #662	; 0x296
    2130:	str	lr, [sp, #8]
    2134:	bl	0 <test_json>
    2138:	ldr	r1, [fp, #-8]
    213c:	orr	r0, r1, r0
    2140:	str	r0, [fp, #-8]
    2144:	ldr	r0, [fp, #-12]
    2148:	movw	r1, #0
    214c:	movt	r1, #0
    2150:	movw	r2, #0
    2154:	movt	r2, #0
    2158:	movw	r3, #0
    215c:	str	r3, [sp, #116]	; 0x74
    2160:	ldr	ip, [sp, #116]	; 0x74
    2164:	str	ip, [sp]
    2168:	str	ip, [sp, #4]
    216c:	movw	lr, #665	; 0x299
    2170:	str	lr, [sp, #8]
    2174:	bl	0 <test_json>
    2178:	ldr	r1, [fp, #-8]
    217c:	orr	r0, r1, r0
    2180:	str	r0, [fp, #-8]
    2184:	ldr	r0, [fp, #-12]
    2188:	movw	r1, #0
    218c:	movt	r1, #0
    2190:	movw	r2, #0
    2194:	movt	r2, #0
    2198:	movw	r3, #0
    219c:	str	r3, [sp, #112]	; 0x70
    21a0:	ldr	ip, [sp, #112]	; 0x70
    21a4:	str	ip, [sp]
    21a8:	str	ip, [sp, #4]
    21ac:	movw	lr, #668	; 0x29c
    21b0:	str	lr, [sp, #8]
    21b4:	bl	0 <test_json>
    21b8:	ldr	r1, [fp, #-8]
    21bc:	orr	r0, r1, r0
    21c0:	str	r0, [fp, #-8]
    21c4:	ldr	r0, [fp, #-12]
    21c8:	movw	r1, #0
    21cc:	movt	r1, #0
    21d0:	movw	r2, #0
    21d4:	movt	r2, #0
    21d8:	movw	r3, #0
    21dc:	str	r3, [sp, #108]	; 0x6c
    21e0:	ldr	ip, [sp, #108]	; 0x6c
    21e4:	str	ip, [sp]
    21e8:	str	ip, [sp, #4]
    21ec:	movw	lr, #671	; 0x29f
    21f0:	str	lr, [sp, #8]
    21f4:	bl	0 <test_json>
    21f8:	ldr	r1, [fp, #-8]
    21fc:	orr	r0, r1, r0
    2200:	str	r0, [fp, #-8]
    2204:	ldr	r0, [fp, #-12]
    2208:	movw	r1, #0
    220c:	movt	r1, #0
    2210:	movw	r2, #0
    2214:	movt	r2, #0
    2218:	movw	r3, #0
    221c:	str	r3, [sp, #104]	; 0x68
    2220:	ldr	ip, [sp, #104]	; 0x68
    2224:	str	ip, [sp]
    2228:	str	ip, [sp, #4]
    222c:	movw	lr, #674	; 0x2a2
    2230:	str	lr, [sp, #8]
    2234:	bl	0 <test_json>
    2238:	ldr	r1, [fp, #-8]
    223c:	orr	r0, r1, r0
    2240:	str	r0, [fp, #-8]
    2244:	ldr	r0, [fp, #-12]
    2248:	movw	r1, #0
    224c:	movt	r1, #0
    2250:	movw	r2, #0
    2254:	movt	r2, #0
    2258:	movw	r3, #0
    225c:	str	r3, [sp, #100]	; 0x64
    2260:	ldr	ip, [sp, #100]	; 0x64
    2264:	str	ip, [sp]
    2268:	str	ip, [sp, #4]
    226c:	movw	lr, #677	; 0x2a5
    2270:	str	lr, [sp, #8]
    2274:	bl	0 <test_json>
    2278:	ldr	r1, [fp, #-8]
    227c:	orr	r0, r1, r0
    2280:	str	r0, [fp, #-8]
    2284:	ldr	r0, [fp, #-12]
    2288:	movw	r1, #0
    228c:	movt	r1, #0
    2290:	movw	r2, #0
    2294:	movt	r2, #0
    2298:	movw	r3, #0
    229c:	str	r3, [sp, #96]	; 0x60
    22a0:	ldr	ip, [sp, #96]	; 0x60
    22a4:	str	ip, [sp]
    22a8:	str	ip, [sp, #4]
    22ac:	movw	lr, #680	; 0x2a8
    22b0:	str	lr, [sp, #8]
    22b4:	bl	0 <test_json>
    22b8:	ldr	r1, [fp, #-8]
    22bc:	orr	r0, r1, r0
    22c0:	str	r0, [fp, #-8]
    22c4:	ldr	r0, [fp, #-12]
    22c8:	movw	r1, #0
    22cc:	movt	r1, #0
    22d0:	movw	r2, #0
    22d4:	movt	r2, #0
    22d8:	movw	r3, #0
    22dc:	str	r3, [sp, #92]	; 0x5c
    22e0:	ldr	ip, [sp, #92]	; 0x5c
    22e4:	str	ip, [sp]
    22e8:	str	ip, [sp, #4]
    22ec:	movw	lr, #683	; 0x2ab
    22f0:	str	lr, [sp, #8]
    22f4:	bl	0 <test_json>
    22f8:	ldr	r1, [fp, #-8]
    22fc:	orr	r0, r1, r0
    2300:	str	r0, [fp, #-8]
    2304:	ldr	r0, [fp, #-12]
    2308:	movw	r1, #0
    230c:	movt	r1, #0
    2310:	movw	r2, #0
    2314:	movt	r2, #0
    2318:	movw	r3, #0
    231c:	str	r3, [sp, #88]	; 0x58
    2320:	ldr	ip, [sp, #88]	; 0x58
    2324:	str	ip, [sp]
    2328:	str	ip, [sp, #4]
    232c:	movw	lr, #686	; 0x2ae
    2330:	str	lr, [sp, #8]
    2334:	bl	0 <test_json>
    2338:	ldr	r1, [fp, #-8]
    233c:	orr	r0, r1, r0
    2340:	str	r0, [fp, #-8]
    2344:	ldr	r0, [fp, #-12]
    2348:	movw	r1, #0
    234c:	movt	r1, #0
    2350:	movw	r2, #0
    2354:	movt	r2, #0
    2358:	movw	r3, #0
    235c:	str	r3, [sp, #84]	; 0x54
    2360:	ldr	ip, [sp, #84]	; 0x54
    2364:	str	ip, [sp]
    2368:	str	ip, [sp, #4]
    236c:	movw	lr, #690	; 0x2b2
    2370:	str	lr, [sp, #8]
    2374:	bl	0 <test_json>
    2378:	ldr	r1, [fp, #-8]
    237c:	orr	r0, r1, r0
    2380:	str	r0, [fp, #-8]
    2384:	ldr	r0, [fp, #-12]
    2388:	movw	r1, #0
    238c:	movt	r1, #0
    2390:	movw	r2, #0
    2394:	movt	r2, #0
    2398:	movw	r3, #0
    239c:	str	r3, [sp, #80]	; 0x50
    23a0:	ldr	ip, [sp, #80]	; 0x50
    23a4:	str	ip, [sp]
    23a8:	str	ip, [sp, #4]
    23ac:	movw	lr, #694	; 0x2b6
    23b0:	str	lr, [sp, #8]
    23b4:	bl	0 <test_json>
    23b8:	ldr	r1, [fp, #-8]
    23bc:	orr	r0, r1, r0
    23c0:	str	r0, [fp, #-8]
    23c4:	ldr	r0, [fp, #-12]
    23c8:	movw	r1, #0
    23cc:	movt	r1, #0
    23d0:	movw	r2, #0
    23d4:	movt	r2, #0
    23d8:	movw	r3, #0
    23dc:	str	r3, [sp, #76]	; 0x4c
    23e0:	ldr	ip, [sp, #76]	; 0x4c
    23e4:	str	ip, [sp]
    23e8:	str	ip, [sp, #4]
    23ec:	movw	lr, #698	; 0x2ba
    23f0:	str	lr, [sp, #8]
    23f4:	bl	0 <test_json>
    23f8:	ldr	r1, [fp, #-8]
    23fc:	orr	r0, r1, r0
    2400:	str	r0, [fp, #-8]
    2404:	ldr	r0, [fp, #-12]
    2408:	movw	r1, #0
    240c:	movt	r1, #0
    2410:	movw	r2, #0
    2414:	movt	r2, #0
    2418:	movw	r3, #0
    241c:	str	r3, [sp, #72]	; 0x48
    2420:	ldr	ip, [sp, #72]	; 0x48
    2424:	str	ip, [sp]
    2428:	str	ip, [sp, #4]
    242c:	movw	lr, #701	; 0x2bd
    2430:	str	lr, [sp, #8]
    2434:	bl	0 <test_json>
    2438:	ldr	r1, [fp, #-8]
    243c:	orr	r0, r1, r0
    2440:	str	r0, [fp, #-8]
    2444:	ldr	r0, [fp, #-12]
    2448:	movw	r1, #0
    244c:	movt	r1, #0
    2450:	movw	r2, #0
    2454:	movt	r2, #0
    2458:	movw	r3, #0
    245c:	str	r3, [sp, #68]	; 0x44
    2460:	ldr	ip, [sp, #68]	; 0x44
    2464:	str	ip, [sp]
    2468:	str	ip, [sp, #4]
    246c:	movw	lr, #716	; 0x2cc
    2470:	str	lr, [sp, #8]
    2474:	bl	0 <test_json>
    2478:	ldr	r1, [fp, #-8]
    247c:	orr	r0, r1, r0
    2480:	str	r0, [fp, #-8]
    2484:	ldr	r0, [fp, #-12]
    2488:	movw	r1, #0
    248c:	movt	r1, #0
    2490:	movw	r2, #0
    2494:	movt	r2, #0
    2498:	movw	r3, #0
    249c:	str	r3, [sp, #64]	; 0x40
    24a0:	ldr	ip, [sp, #64]	; 0x40
    24a4:	str	ip, [sp]
    24a8:	str	ip, [sp, #4]
    24ac:	movw	lr, #731	; 0x2db
    24b0:	str	lr, [sp, #8]
    24b4:	bl	0 <test_json>
    24b8:	ldr	r1, [fp, #-8]
    24bc:	orr	r0, r1, r0
    24c0:	str	r0, [fp, #-8]
    24c4:	ldr	r0, [fp, #-12]
    24c8:	movw	r1, #0
    24cc:	movt	r1, #0
    24d0:	movw	r2, #0
    24d4:	movt	r2, #0
    24d8:	movw	r3, #0
    24dc:	str	r3, [sp, #60]	; 0x3c
    24e0:	ldr	ip, [sp, #60]	; 0x3c
    24e4:	str	ip, [sp]
    24e8:	str	ip, [sp, #4]
    24ec:	movw	lr, #734	; 0x2de
    24f0:	str	lr, [sp, #8]
    24f4:	bl	0 <test_json>
    24f8:	ldr	r1, [fp, #-8]
    24fc:	orr	r0, r1, r0
    2500:	str	r0, [fp, #-8]
    2504:	ldr	r0, [fp, #-12]
    2508:	movw	r1, #0
    250c:	movt	r1, #0
    2510:	movw	r2, #0
    2514:	movt	r2, #0
    2518:	movw	r3, #0
    251c:	str	r3, [sp, #56]	; 0x38
    2520:	ldr	ip, [sp, #56]	; 0x38
    2524:	str	ip, [sp]
    2528:	str	ip, [sp, #4]
    252c:	movw	lr, #738	; 0x2e2
    2530:	str	lr, [sp, #8]
    2534:	bl	0 <test_json>
    2538:	ldr	r1, [fp, #-8]
    253c:	orr	r0, r1, r0
    2540:	str	r0, [fp, #-8]
    2544:	ldr	r0, [fp, #-12]
    2548:	movw	r1, #0
    254c:	movt	r1, #0
    2550:	movw	r2, #0
    2554:	movt	r2, #0
    2558:	movw	r3, #0
    255c:	str	r3, [sp, #52]	; 0x34
    2560:	ldr	ip, [sp, #52]	; 0x34
    2564:	str	ip, [sp]
    2568:	str	ip, [sp, #4]
    256c:	movw	lr, #750	; 0x2ee
    2570:	str	lr, [sp, #8]
    2574:	bl	0 <test_json>
    2578:	ldr	r1, [fp, #-8]
    257c:	orr	r0, r1, r0
    2580:	str	r0, [fp, #-8]
    2584:	ldr	r0, [fp, #-12]
    2588:	movw	r1, #0
    258c:	movt	r1, #0
    2590:	movw	r2, #0
    2594:	movt	r2, #0
    2598:	movw	r3, #0
    259c:	str	r3, [sp, #48]	; 0x30
    25a0:	ldr	ip, [sp, #48]	; 0x30
    25a4:	str	ip, [sp]
    25a8:	str	ip, [sp, #4]
    25ac:	movw	lr, #766	; 0x2fe
    25b0:	str	lr, [sp, #8]
    25b4:	bl	0 <test_json>
    25b8:	ldr	r1, [fp, #-8]
    25bc:	orr	r0, r1, r0
    25c0:	str	r0, [fp, #-8]
    25c4:	ldr	r0, [fp, #-12]
    25c8:	movw	r1, #0
    25cc:	movt	r1, #0
    25d0:	movw	r2, #0
    25d4:	movt	r2, #0
    25d8:	movw	r3, #0
    25dc:	str	r3, [sp, #44]	; 0x2c
    25e0:	ldr	ip, [sp, #44]	; 0x2c
    25e4:	str	ip, [sp]
    25e8:	str	ip, [sp, #4]
    25ec:	movw	lr, #770	; 0x302
    25f0:	str	lr, [sp, #8]
    25f4:	bl	0 <test_json>
    25f8:	ldr	r1, [fp, #-8]
    25fc:	orr	r0, r1, r0
    2600:	str	r0, [fp, #-8]
    2604:	ldr	r0, [fp, #-12]
    2608:	movw	r1, #0
    260c:	movt	r1, #0
    2610:	movw	r2, #0
    2614:	movt	r2, #0
    2618:	movw	r3, #0
    261c:	str	r3, [sp, #40]	; 0x28
    2620:	ldr	ip, [sp, #40]	; 0x28
    2624:	str	ip, [sp]
    2628:	str	ip, [sp, #4]
    262c:	movw	lr, #776	; 0x308
    2630:	str	lr, [sp, #8]
    2634:	bl	0 <test_json>
    2638:	ldr	r1, [fp, #-8]
    263c:	orr	r0, r1, r0
    2640:	str	r0, [fp, #-8]
    2644:	ldr	r0, [fp, #-12]
    2648:	movw	r1, #0
    264c:	movt	r1, #0
    2650:	movw	r2, #0
    2654:	movt	r2, #0
    2658:	movw	r3, #0
    265c:	str	r3, [sp, #36]	; 0x24
    2660:	ldr	ip, [sp, #36]	; 0x24
    2664:	str	ip, [sp]
    2668:	str	ip, [sp, #4]
    266c:	movw	lr, #781	; 0x30d
    2670:	str	lr, [sp, #8]
    2674:	bl	0 <test_json>
    2678:	ldr	r1, [fp, #-8]
    267c:	orr	r0, r1, r0
    2680:	str	r0, [fp, #-8]
    2684:	ldr	r0, [fp, #-12]
    2688:	movw	r1, #0
    268c:	movt	r1, #0
    2690:	movw	r2, #0
    2694:	movt	r2, #0
    2698:	movw	r3, #0
    269c:	str	r3, [sp, #32]
    26a0:	ldr	ip, [sp, #32]
    26a4:	str	ip, [sp]
    26a8:	str	ip, [sp, #4]
    26ac:	movw	lr, #786	; 0x312
    26b0:	str	lr, [sp, #8]
    26b4:	bl	0 <test_json>
    26b8:	ldr	r1, [fp, #-8]
    26bc:	orr	r0, r1, r0
    26c0:	str	r0, [fp, #-8]
    26c4:	ldr	r0, [fp, #-12]
    26c8:	movw	r1, #0
    26cc:	movt	r1, #0
    26d0:	movw	r2, #0
    26d4:	movt	r2, #0
    26d8:	movw	r3, #0
    26dc:	str	r3, [sp, #28]
    26e0:	ldr	ip, [sp, #28]
    26e4:	str	ip, [sp]
    26e8:	str	ip, [sp, #4]
    26ec:	movw	lr, #791	; 0x317
    26f0:	str	lr, [sp, #8]
    26f4:	bl	0 <test_json>
    26f8:	ldr	r1, [fp, #-8]
    26fc:	orr	r0, r1, r0
    2700:	str	r0, [fp, #-8]
    2704:	ldr	r0, [fp, #-12]
    2708:	movw	r1, #0
    270c:	movt	r1, #0
    2710:	movw	r2, #0
    2714:	movt	r2, #0
    2718:	movw	r3, #0
    271c:	str	r3, [sp, #24]
    2720:	ldr	ip, [sp, #24]
    2724:	str	ip, [sp]
    2728:	str	ip, [sp, #4]
    272c:	movw	lr, #796	; 0x31c
    2730:	str	lr, [sp, #8]
    2734:	bl	0 <test_json>
    2738:	ldr	r1, [fp, #-8]
    273c:	orr	r0, r1, r0
    2740:	str	r0, [fp, #-8]
    2744:	ldr	r0, [fp, #-12]
    2748:	movw	r1, #0
    274c:	movt	r1, #0
    2750:	movw	r2, #0
    2754:	movt	r2, #0
    2758:	movw	r3, #0
    275c:	str	r3, [sp, #20]
    2760:	ldr	ip, [sp, #20]
    2764:	str	ip, [sp]
    2768:	str	ip, [sp, #4]
    276c:	movw	lr, #801	; 0x321
    2770:	str	lr, [sp, #8]
    2774:	bl	0 <test_json>
    2778:	ldr	r1, [fp, #-8]
    277c:	orr	r0, r1, r0
    2780:	str	r0, [fp, #-8]
    2784:	ldr	r0, [fp, #-12]
    2788:	movw	r1, #0
    278c:	movt	r1, #0
    2790:	movw	r2, #0
    2794:	movt	r2, #0
    2798:	movw	r3, #0
    279c:	str	r3, [sp, #16]
    27a0:	ldr	ip, [sp, #16]
    27a4:	str	ip, [sp]
    27a8:	str	ip, [sp, #4]
    27ac:	movw	lr, #806	; 0x326
    27b0:	str	lr, [sp, #8]
    27b4:	bl	0 <test_json>
    27b8:	ldr	r1, [fp, #-8]
    27bc:	orr	r0, r1, r0
    27c0:	str	r0, [fp, #-8]
    27c4:	ldr	r0, [fp, #-8]
    27c8:	cmp	r0, #0
    27cc:	movw	r0, #0
    27d0:	movne	r0, #1
    27d4:	tst	r0, #1
    27d8:	mvn	r0, #0
    27dc:	moveq	r0, #0
    27e0:	mov	sp, fp
    27e4:	pop	{fp, pc}

000027e8 <flatcc_json_printer_set_indent>:
    27e8:	sub	sp, sp, #8
    27ec:	str	r0, [sp, #4]
    27f0:	strb	r1, [sp, #3]
    27f4:	ldrb	r0, [sp, #3]
    27f8:	ldr	r1, [sp, #4]
    27fc:	strb	r0, [r1, #25]
    2800:	add	sp, sp, #8
    2804:	bx	lr

00002808 <flatcc_json_printer_set_nonstrict>:
    2808:	push	{fp, lr}
    280c:	mov	fp, sp
    2810:	sub	sp, sp, #8
    2814:	str	r0, [sp, #4]
    2818:	ldr	r0, [sp, #4]
    281c:	movw	r1, #2
    2820:	and	r1, r1, #255	; 0xff
    2824:	bl	27e8 <flatcc_json_printer_set_indent>
    2828:	ldr	r0, [sp, #4]
    282c:	movw	r1, #1
    2830:	bl	2848 <flatcc_json_printer_set_unquoted>
    2834:	ldr	r0, [sp, #4]
    2838:	movw	r1, #0
    283c:	bl	2884 <flatcc_json_printer_set_noenum>
    2840:	mov	sp, fp
    2844:	pop	{fp, pc}

00002848 <flatcc_json_printer_set_unquoted>:
    2848:	sub	sp, sp, #8
    284c:	str	r0, [sp, #4]
    2850:	str	r1, [sp]
    2854:	ldr	r0, [sp]
    2858:	cmp	r0, #0
    285c:	movw	r0, #0
    2860:	movne	r0, #1
    2864:	mvn	r1, #0
    2868:	eor	r0, r0, r1
    286c:	eor	r0, r0, r1
    2870:	and	r0, r0, #1
    2874:	ldr	r1, [sp, #4]
    2878:	strb	r0, [r1, #26]
    287c:	add	sp, sp, #8
    2880:	bx	lr

00002884 <flatcc_json_printer_set_noenum>:
    2884:	sub	sp, sp, #8
    2888:	str	r0, [sp, #4]
    288c:	str	r1, [sp]
    2890:	ldr	r0, [sp]
    2894:	cmp	r0, #0
    2898:	movw	r0, #0
    289c:	movne	r0, #1
    28a0:	mvn	r1, #0
    28a4:	eor	r0, r0, r1
    28a8:	eor	r0, r0, r1
    28ac:	and	r0, r0, #1
    28b0:	ldr	r1, [sp, #4]
    28b4:	strb	r0, [r1, #27]
    28b8:	add	sp, sp, #8
    28bc:	bx	lr

000028c0 <MyGame_Example_Monster_parse_json_table>:
    28c0:	push	{r4, r5, fp, lr}
    28c4:	add	fp, sp, #8
    28c8:	sub	sp, sp, #280	; 0x118
    28cc:	str	r0, [fp, #-16]
    28d0:	str	r1, [fp, #-20]	; 0xffffffec
    28d4:	str	r2, [fp, #-24]	; 0xffffffe8
    28d8:	str	r3, [fp, #-28]	; 0xffffffe4
    28dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    28e0:	movw	r1, #0
    28e4:	str	r1, [r0]
    28e8:	ldr	r0, [fp, #-16]
    28ec:	ldr	r0, [r0]
    28f0:	movw	r1, #36	; 0x24
    28f4:	bl	0 <flatcc_builder_start_table>
    28f8:	cmp	r0, #0
    28fc:	beq	2904 <MyGame_Example_Monster_parse_json_table+0x44>
    2900:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2904:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2908:	ldr	r1, [fp, #-16]
    290c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2910:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2914:	str	r0, [sp, #124]	; 0x7c
    2918:	mov	r0, r1
    291c:	mov	r1, r2
    2920:	mov	r2, r3
    2924:	movw	r3, #1
    2928:	sub	ip, fp, #60	; 0x3c
    292c:	str	ip, [sp]
    2930:	bl	0 <flatcc_json_parser_prepare_unions>
    2934:	ldr	r1, [sp, #124]	; 0x7c
    2938:	cmp	r1, r0
    293c:	bne	2944 <MyGame_Example_Monster_parse_json_table+0x84>
    2940:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2944:	ldr	r0, [fp, #-16]
    2948:	ldr	r1, [fp, #-20]	; 0xffffffec
    294c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2950:	sub	r3, fp, #32
    2954:	bl	7050 <flatcc_json_parser_object_start>
    2958:	str	r0, [fp, #-20]	; 0xffffffec
    295c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2960:	cmp	r0, #0
    2964:	beq	61f0 <MyGame_Example_Monster_parse_json_table+0x3930>
    2968:	ldr	r0, [fp, #-16]
    296c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2970:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2974:	bl	7134 <flatcc_json_parser_symbol_start>
    2978:	str	r0, [fp, #-20]	; 0xffffffec
    297c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2980:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2984:	bl	71e0 <flatcc_json_parser_symbol_part>
    2988:	str	r1, [fp, #-52]	; 0xffffffcc
    298c:	str	r0, [fp, #-56]	; 0xffffffc8
    2990:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2994:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2998:	movw	r2, #29280	; 0x7260
    299c:	movt	r2, #24946	; 0x6172
    29a0:	subs	r0, r2, r0
    29a4:	movw	r2, #29556	; 0x7374
    29a8:	movt	r2, #29797	; 0x7465
    29ac:	sbcs	r1, r2, r1
    29b0:	str	r0, [sp, #120]	; 0x78
    29b4:	str	r1, [sp, #116]	; 0x74
    29b8:	bcc	3b48 <MyGame_Example_Monster_parse_json_table+0x1288>
    29bc:	b	29c0 <MyGame_Example_Monster_parse_json_table+0x100>
    29c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    29c4:	movw	r1, #28004	; 0x6d64
    29c8:	movt	r1, #28257	; 0x6e61
    29cc:	cmp	r0, r1
    29d0:	bhi	3344 <MyGame_Example_Monster_parse_json_table+0xa84>
    29d4:	b	29d8 <MyGame_Example_Monster_parse_json_table+0x118>
    29d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    29dc:	movw	r1, #25975	; 0x6577
    29e0:	movt	r1, #26220	; 0x666c
    29e4:	cmp	r0, r1
    29e8:	bhi	2c28 <MyGame_Example_Monster_parse_json_table+0x368>
    29ec:	b	29f0 <MyGame_Example_Monster_parse_json_table+0x130>
    29f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    29f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    29f8:	and	r0, r0, #-16777216	; 0xff000000
    29fc:	movw	r2, #25965	; 0x656d
    2a00:	movt	r2, #25966	; 0x656e
    2a04:	eor	r1, r1, r2
    2a08:	eor	r0, r0, #2030043136	; 0x79000000
    2a0c:	orr	r0, r0, r1
    2a10:	cmp	r0, #0
    2a14:	bne	2ab8 <MyGame_Example_Monster_parse_json_table+0x1f8>
    2a18:	b	2a1c <MyGame_Example_Monster_parse_json_table+0x15c>
    2a1c:	ldr	r0, [fp, #-16]
    2a20:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a24:	str	r1, [fp, #-48]	; 0xffffffd0
    2a28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a2c:	movw	r3, #5
    2a30:	bl	7218 <flatcc_json_parser_match_symbol>
    2a34:	str	r0, [fp, #-20]	; 0xffffffec
    2a38:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a40:	cmp	r0, r1
    2a44:	beq	2aa0 <MyGame_Example_Monster_parse_json_table+0x1e0>
    2a48:	ldr	r0, [fp, #-16]
    2a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2a54:	sub	r3, fp, #40	; 0x28
    2a58:	bl	28c0 <MyGame_Example_Monster_parse_json_table>
    2a5c:	str	r0, [fp, #-20]	; 0xffffffec
    2a60:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a64:	cmp	r0, #0
    2a68:	beq	2a8c <MyGame_Example_Monster_parse_json_table+0x1cc>
    2a6c:	ldr	r0, [fp, #-16]
    2a70:	ldr	r0, [r0]
    2a74:	movw	r1, #12
    2a78:	bl	0 <flatcc_builder_table_add_offset>
    2a7c:	str	r0, [fp, #-44]	; 0xffffffd4
    2a80:	movw	r1, #0
    2a84:	cmp	r0, r1
    2a88:	bne	2a90 <MyGame_Example_Monster_parse_json_table+0x1d0>
    2a8c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2a90:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2a94:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a98:	str	r0, [r1]
    2a9c:	b	2ab4 <MyGame_Example_Monster_parse_json_table+0x1f4>
    2aa0:	ldr	r0, [fp, #-16]
    2aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2aac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2ab0:	str	r0, [fp, #-20]	; 0xffffffec
    2ab4:	b	2c24 <MyGame_Example_Monster_parse_json_table+0x364>
    2ab8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2abc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2ac0:	and	r0, r0, #-16777216	; 0xff000000
    2ac4:	movw	r2, #27759	; 0x6c6f
    2ac8:	movt	r2, #25455	; 0x636f
    2acc:	eor	r1, r1, r2
    2ad0:	eor	r0, r0, #1912602624	; 0x72000000
    2ad4:	orr	r0, r0, r1
    2ad8:	cmp	r0, #0
    2adc:	bne	2c0c <MyGame_Example_Monster_parse_json_table+0x34c>
    2ae0:	b	2ae4 <MyGame_Example_Monster_parse_json_table+0x224>
    2ae4:	ldr	r0, [fp, #-16]
    2ae8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2aec:	str	r1, [fp, #-48]	; 0xffffffd0
    2af0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2af4:	movw	r3, #5
    2af8:	bl	7218 <flatcc_json_parser_match_symbol>
    2afc:	str	r0, [fp, #-20]	; 0xffffffec
    2b00:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b04:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b08:	cmp	r0, r1
    2b0c:	beq	2bf4 <MyGame_Example_Monster_parse_json_table+0x334>
    2b10:	movw	r0, #0
    2b14:	strb	r0, [fp, #-61]	; 0xffffffc3
    2b18:	ldr	r0, [fp, #-16]
    2b1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b20:	str	r1, [fp, #-48]	; 0xffffffd0
    2b24:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b28:	sub	r3, fp, #61	; 0x3d
    2b2c:	bl	8794 <flatcc_json_parser_int8>
    2b30:	str	r0, [fp, #-20]	; 0xffffffec
    2b34:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b38:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b3c:	cmp	r0, r1
    2b40:	bne	2b94 <MyGame_Example_Monster_parse_json_table+0x2d4>
    2b44:	ldr	r0, [fp, #-16]
    2b48:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b4c:	str	r1, [fp, #-48]	; 0xffffffd0
    2b50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2b54:	movw	r3, #0
    2b58:	movt	r3, #0
    2b5c:	sub	ip, fp, #61	; 0x3d
    2b60:	str	ip, [sp]
    2b64:	bl	8870 <flatcc_json_parser_symbolic_int8>
    2b68:	str	r0, [fp, #-20]	; 0xffffffec
    2b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b70:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2b74:	cmp	r0, r1
    2b78:	beq	2b8c <MyGame_Example_Monster_parse_json_table+0x2cc>
    2b7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2b80:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2b84:	cmp	r0, r1
    2b88:	bne	2b90 <MyGame_Example_Monster_parse_json_table+0x2d0>
    2b8c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2b90:	b	2b94 <MyGame_Example_Monster_parse_json_table+0x2d4>
    2b94:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
    2b98:	cmp	r0, #8
    2b9c:	bne	2bb4 <MyGame_Example_Monster_parse_json_table+0x2f4>
    2ba0:	ldr	r0, [fp, #-16]
    2ba4:	ldr	r0, [r0, #8]
    2ba8:	and	r0, r0, #2
    2bac:	cmp	r0, #0
    2bb0:	beq	2bf0 <MyGame_Example_Monster_parse_json_table+0x330>
    2bb4:	ldr	r0, [fp, #-16]
    2bb8:	ldr	r0, [r0]
    2bbc:	movw	r1, #6
    2bc0:	movw	r2, #1
    2bc4:	movw	r3, #1
    2bc8:	uxth	r3, r3
    2bcc:	bl	0 <flatcc_builder_table_add>
    2bd0:	str	r0, [fp, #-36]	; 0xffffffdc
    2bd4:	movw	r1, #0
    2bd8:	cmp	r0, r1
    2bdc:	bne	2be4 <MyGame_Example_Monster_parse_json_table+0x324>
    2be0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2be8:	ldrsb	r1, [fp, #-61]	; 0xffffffc3
    2bec:	bl	8a9c <flatbuffers_int8_write_to_pe>
    2bf0:	b	2c08 <MyGame_Example_Monster_parse_json_table+0x348>
    2bf4:	ldr	r0, [fp, #-16]
    2bf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    2bfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2c04:	str	r0, [fp, #-20]	; 0xffffffec
    2c08:	b	2c20 <MyGame_Example_Monster_parse_json_table+0x360>
    2c0c:	ldr	r0, [fp, #-16]
    2c10:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2c1c:	str	r0, [fp, #-20]	; 0xffffffec
    2c20:	b	2c24 <MyGame_Example_Monster_parse_json_table+0x364>
    2c24:	b	3340 <MyGame_Example_Monster_parse_json_table+0xa80>
    2c28:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2c2c:	movw	r1, #65535	; 0xffff
    2c30:	movt	r1, #26735	; 0x686f
    2c34:	cmp	r0, r1
    2c38:	bhi	2e20 <MyGame_Example_Monster_parse_json_table+0x560>
    2c3c:	b	2c40 <MyGame_Example_Monster_parse_json_table+0x380>
    2c40:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2c44:	movw	r1, #25976	; 0x6578
    2c48:	movt	r1, #26220	; 0x666c
    2c4c:	teq	r0, r1
    2c50:	bne	2e08 <MyGame_Example_Monster_parse_json_table+0x548>
    2c54:	b	2c58 <MyGame_Example_Monster_parse_json_table+0x398>
    2c58:	ldr	r0, [fp, #-16]
    2c5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c60:	str	r1, [fp, #-48]	; 0xffffffd0
    2c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2c68:	movw	r3, #4
    2c6c:	bl	7218 <flatcc_json_parser_match_symbol>
    2c70:	str	r0, [fp, #-20]	; 0xffffffec
    2c74:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c78:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c7c:	cmp	r0, r1
    2c80:	beq	2df0 <MyGame_Example_Monster_parse_json_table+0x530>
    2c84:	ldr	r0, [fp, #-16]
    2c88:	ldr	r0, [r0]
    2c8c:	movw	r1, #1
    2c90:	movw	r2, #1
    2c94:	uxth	r2, r2
    2c98:	mvn	r3, #0
    2c9c:	bl	0 <flatcc_builder_start_vector>
    2ca0:	cmp	r0, #0
    2ca4:	beq	2cac <MyGame_Example_Monster_parse_json_table+0x3ec>
    2ca8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2cac:	ldr	r0, [fp, #-16]
    2cb0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2cb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2cb8:	sub	r3, fp, #32
    2cbc:	bl	8ac8 <flatcc_json_parser_array_start>
    2cc0:	str	r0, [fp, #-20]	; 0xffffffec
    2cc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2cc8:	cmp	r0, #0
    2ccc:	beq	2da0 <MyGame_Example_Monster_parse_json_table+0x4e0>
    2cd0:	movw	r0, #0
    2cd4:	strb	r0, [fp, #-62]	; 0xffffffc2
    2cd8:	ldr	r0, [fp, #-16]
    2cdc:	ldr	r0, [r0]
    2ce0:	movw	r1, #1
    2ce4:	bl	0 <flatcc_builder_extend_vector>
    2ce8:	str	r0, [fp, #-36]	; 0xffffffdc
    2cec:	movw	r1, #0
    2cf0:	cmp	r0, r1
    2cf4:	bne	2cfc <MyGame_Example_Monster_parse_json_table+0x43c>
    2cf8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2cfc:	ldr	r0, [fp, #-16]
    2d00:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d04:	str	r1, [fp, #-48]	; 0xffffffd0
    2d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d0c:	sub	r3, fp, #62	; 0x3e
    2d10:	bl	8bac <flatcc_json_parser_uint8>
    2d14:	str	r0, [fp, #-20]	; 0xffffffec
    2d18:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2d1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d20:	cmp	r0, r1
    2d24:	bne	2d78 <MyGame_Example_Monster_parse_json_table+0x4b8>
    2d28:	ldr	r0, [fp, #-16]
    2d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d30:	str	r1, [fp, #-48]	; 0xffffffd0
    2d34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d38:	movw	r3, #0
    2d3c:	movt	r3, #0
    2d40:	sub	ip, fp, #62	; 0x3e
    2d44:	str	ip, [sp]
    2d48:	bl	8c88 <flatcc_json_parser_symbolic_uint8>
    2d4c:	str	r0, [fp, #-20]	; 0xffffffec
    2d50:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d54:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2d58:	cmp	r0, r1
    2d5c:	beq	2d70 <MyGame_Example_Monster_parse_json_table+0x4b0>
    2d60:	ldr	r0, [fp, #-20]	; 0xffffffec
    2d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2d68:	cmp	r0, r1
    2d6c:	bne	2d74 <MyGame_Example_Monster_parse_json_table+0x4b4>
    2d70:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2d74:	b	2d78 <MyGame_Example_Monster_parse_json_table+0x4b8>
    2d78:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2d7c:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    2d80:	bl	8eb4 <flatbuffers_uint8_write_to_pe>
    2d84:	ldr	r0, [fp, #-16]
    2d88:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2d90:	sub	r3, fp, #32
    2d94:	bl	8ee0 <flatcc_json_parser_array_end>
    2d98:	str	r0, [fp, #-20]	; 0xffffffec
    2d9c:	b	2cc4 <MyGame_Example_Monster_parse_json_table+0x404>
    2da0:	ldr	r0, [fp, #-16]
    2da4:	ldr	r0, [r0]
    2da8:	bl	0 <flatcc_builder_end_vector>
    2dac:	str	r0, [fp, #-40]	; 0xffffffd8
    2db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2db4:	cmp	r0, #0
    2db8:	beq	2ddc <MyGame_Example_Monster_parse_json_table+0x51c>
    2dbc:	ldr	r0, [fp, #-16]
    2dc0:	ldr	r0, [r0]
    2dc4:	movw	r1, #30
    2dc8:	bl	0 <flatcc_builder_table_add_offset>
    2dcc:	str	r0, [fp, #-44]	; 0xffffffd4
    2dd0:	movw	r1, #0
    2dd4:	cmp	r0, r1
    2dd8:	bne	2de0 <MyGame_Example_Monster_parse_json_table+0x520>
    2ddc:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2de4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2de8:	str	r0, [r1]
    2dec:	b	2e04 <MyGame_Example_Monster_parse_json_table+0x544>
    2df0:	ldr	r0, [fp, #-16]
    2df4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2dfc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2e00:	str	r0, [fp, #-20]	; 0xffffffec
    2e04:	b	2e1c <MyGame_Example_Monster_parse_json_table+0x55c>
    2e08:	ldr	r0, [fp, #-16]
    2e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e10:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2e18:	str	r0, [fp, #-20]	; 0xffffffec
    2e1c:	b	333c <MyGame_Example_Monster_parse_json_table+0xa7c>
    2e20:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2e24:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2e28:	movw	r2, #28529	; 0x6f71
    2e2c:	movt	r2, #28276	; 0x6e74
    2e30:	subs	r0, r2, r0
    2e34:	movw	r2, #30309	; 0x7665
    2e38:	movt	r2, #26990	; 0x696e
    2e3c:	sbcs	r1, r2, r1
    2e40:	str	r0, [sp, #112]	; 0x70
    2e44:	str	r1, [sp, #108]	; 0x6c
    2e48:	bcc	2fb0 <MyGame_Example_Monster_parse_json_table+0x6f0>
    2e4c:	b	2e50 <MyGame_Example_Monster_parse_json_table+0x590>
    2e50:	ldr	r0, [fp, #-52]	; 0xffffffcc
    2e54:	bfc	r0, #0, #16
    2e58:	movw	r1, #0
    2e5c:	movt	r1, #26736	; 0x6870
    2e60:	teq	r0, r1
    2e64:	bne	2f98 <MyGame_Example_Monster_parse_json_table+0x6d8>
    2e68:	b	2e6c <MyGame_Example_Monster_parse_json_table+0x5ac>
    2e6c:	ldr	r0, [fp, #-16]
    2e70:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e74:	str	r1, [fp, #-48]	; 0xffffffd0
    2e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2e7c:	movw	r3, #2
    2e80:	bl	7218 <flatcc_json_parser_match_symbol>
    2e84:	str	r0, [fp, #-20]	; 0xffffffec
    2e88:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e90:	cmp	r0, r1
    2e94:	beq	2f80 <MyGame_Example_Monster_parse_json_table+0x6c0>
    2e98:	movw	r0, #0
    2e9c:	strh	r0, [fp, #-64]	; 0xffffffc0
    2ea0:	ldr	r0, [fp, #-16]
    2ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ea8:	str	r1, [fp, #-48]	; 0xffffffd0
    2eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2eb0:	sub	r3, fp, #64	; 0x40
    2eb4:	bl	9044 <flatcc_json_parser_int16>
    2eb8:	str	r0, [fp, #-20]	; 0xffffffec
    2ebc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2ec0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ec4:	cmp	r0, r1
    2ec8:	bne	2f1c <MyGame_Example_Monster_parse_json_table+0x65c>
    2ecc:	ldr	r0, [fp, #-16]
    2ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ed4:	str	r1, [fp, #-48]	; 0xffffffd0
    2ed8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2edc:	movw	r3, #0
    2ee0:	movt	r3, #0
    2ee4:	sub	ip, fp, #64	; 0x40
    2ee8:	str	ip, [sp]
    2eec:	bl	9120 <flatcc_json_parser_symbolic_int16>
    2ef0:	str	r0, [fp, #-20]	; 0xffffffec
    2ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ef8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2efc:	cmp	r0, r1
    2f00:	beq	2f14 <MyGame_Example_Monster_parse_json_table+0x654>
    2f04:	ldr	r0, [fp, #-20]	; 0xffffffec
    2f08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2f0c:	cmp	r0, r1
    2f10:	bne	2f18 <MyGame_Example_Monster_parse_json_table+0x658>
    2f14:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2f18:	b	2f1c <MyGame_Example_Monster_parse_json_table+0x65c>
    2f1c:	ldrsh	r0, [fp, #-64]	; 0xffffffc0
    2f20:	cmp	r0, #100	; 0x64
    2f24:	bne	2f3c <MyGame_Example_Monster_parse_json_table+0x67c>
    2f28:	ldr	r0, [fp, #-16]
    2f2c:	ldr	r0, [r0, #8]
    2f30:	and	r0, r0, #2
    2f34:	cmp	r0, #0
    2f38:	beq	2f7c <MyGame_Example_Monster_parse_json_table+0x6bc>
    2f3c:	ldr	r0, [fp, #-16]
    2f40:	ldr	r0, [r0]
    2f44:	movw	r1, #2
    2f48:	str	r1, [sp, #104]	; 0x68
    2f4c:	ldr	r2, [sp, #104]	; 0x68
    2f50:	movw	r3, #2
    2f54:	uxth	r3, r3
    2f58:	bl	0 <flatcc_builder_table_add>
    2f5c:	str	r0, [fp, #-36]	; 0xffffffdc
    2f60:	movw	r1, #0
    2f64:	cmp	r0, r1
    2f68:	bne	2f70 <MyGame_Example_Monster_parse_json_table+0x6b0>
    2f6c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    2f70:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2f74:	ldrsh	r1, [fp, #-64]	; 0xffffffc0
    2f78:	bl	934c <flatbuffers_int16_write_to_pe>
    2f7c:	b	2f94 <MyGame_Example_Monster_parse_json_table+0x6d4>
    2f80:	ldr	r0, [fp, #-16]
    2f84:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2f8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2f90:	str	r0, [fp, #-20]	; 0xffffffec
    2f94:	b	2fac <MyGame_Example_Monster_parse_json_table+0x6ec>
    2f98:	ldr	r0, [fp, #-16]
    2f9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2fa4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    2fa8:	str	r0, [fp, #-20]	; 0xffffffec
    2fac:	b	3338 <MyGame_Example_Monster_parse_json_table+0xa78>
    2fb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2fb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    2fb8:	movw	r2, #30309	; 0x7665
    2fbc:	movt	r2, #26990	; 0x696e
    2fc0:	eor	r1, r1, r2
    2fc4:	movw	r2, #28530	; 0x6f72
    2fc8:	movt	r2, #28276	; 0x6e74
    2fcc:	eor	r0, r0, r2
    2fd0:	orr	r0, r0, r1
    2fd4:	cmp	r0, #0
    2fd8:	bne	31dc <MyGame_Example_Monster_parse_json_table+0x91c>
    2fdc:	b	2fe0 <MyGame_Example_Monster_parse_json_table+0x720>
    2fe0:	ldr	r0, [fp, #-20]	; 0xffffffec
    2fe4:	add	r0, r0, #8
    2fe8:	str	r0, [fp, #-20]	; 0xffffffec
    2fec:	ldr	r0, [fp, #-20]	; 0xffffffec
    2ff0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    2ff4:	bl	71e0 <flatcc_json_parser_symbol_part>
    2ff8:	str	r1, [fp, #-52]	; 0xffffffcc
    2ffc:	str	r0, [fp, #-56]	; 0xffffffc8
    3000:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3004:	and	r0, r0, #-16777216	; 0xff000000
    3008:	teq	r0, #2030043136	; 0x79000000
    300c:	bne	31c4 <MyGame_Example_Monster_parse_json_table+0x904>
    3010:	b	3014 <MyGame_Example_Monster_parse_json_table+0x754>
    3014:	ldr	r0, [fp, #-16]
    3018:	ldr	r1, [fp, #-20]	; 0xffffffec
    301c:	str	r1, [fp, #-48]	; 0xffffffd0
    3020:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3024:	movw	r3, #1
    3028:	bl	7218 <flatcc_json_parser_match_symbol>
    302c:	str	r0, [fp, #-20]	; 0xffffffec
    3030:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3034:	ldr	r1, [fp, #-20]	; 0xffffffec
    3038:	cmp	r0, r1
    303c:	beq	31ac <MyGame_Example_Monster_parse_json_table+0x8ec>
    3040:	ldr	r0, [fp, #-16]
    3044:	ldr	r0, [r0]
    3048:	movw	r1, #1
    304c:	movw	r2, #1
    3050:	uxth	r2, r2
    3054:	mvn	r3, #0
    3058:	bl	0 <flatcc_builder_start_vector>
    305c:	cmp	r0, #0
    3060:	beq	3068 <MyGame_Example_Monster_parse_json_table+0x7a8>
    3064:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3068:	ldr	r0, [fp, #-16]
    306c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3070:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3074:	sub	r3, fp, #32
    3078:	bl	8ac8 <flatcc_json_parser_array_start>
    307c:	str	r0, [fp, #-20]	; 0xffffffec
    3080:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3084:	cmp	r0, #0
    3088:	beq	315c <MyGame_Example_Monster_parse_json_table+0x89c>
    308c:	movw	r0, #0
    3090:	strb	r0, [fp, #-65]	; 0xffffffbf
    3094:	ldr	r0, [fp, #-16]
    3098:	ldr	r0, [r0]
    309c:	movw	r1, #1
    30a0:	bl	0 <flatcc_builder_extend_vector>
    30a4:	str	r0, [fp, #-36]	; 0xffffffdc
    30a8:	movw	r1, #0
    30ac:	cmp	r0, r1
    30b0:	bne	30b8 <MyGame_Example_Monster_parse_json_table+0x7f8>
    30b4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    30b8:	ldr	r0, [fp, #-16]
    30bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    30c0:	str	r1, [fp, #-48]	; 0xffffffd0
    30c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    30c8:	sub	r3, fp, #65	; 0x41
    30cc:	bl	8bac <flatcc_json_parser_uint8>
    30d0:	str	r0, [fp, #-20]	; 0xffffffec
    30d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    30d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    30dc:	cmp	r0, r1
    30e0:	bne	3134 <MyGame_Example_Monster_parse_json_table+0x874>
    30e4:	ldr	r0, [fp, #-16]
    30e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    30ec:	str	r1, [fp, #-48]	; 0xffffffd0
    30f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    30f4:	movw	r3, #0
    30f8:	movt	r3, #0
    30fc:	sub	ip, fp, #65	; 0x41
    3100:	str	ip, [sp]
    3104:	bl	8c88 <flatcc_json_parser_symbolic_uint8>
    3108:	str	r0, [fp, #-20]	; 0xffffffec
    310c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3110:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3114:	cmp	r0, r1
    3118:	beq	312c <MyGame_Example_Monster_parse_json_table+0x86c>
    311c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3120:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3124:	cmp	r0, r1
    3128:	bne	3130 <MyGame_Example_Monster_parse_json_table+0x870>
    312c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3130:	b	3134 <MyGame_Example_Monster_parse_json_table+0x874>
    3134:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3138:	ldrb	r1, [fp, #-65]	; 0xffffffbf
    313c:	bl	8eb4 <flatbuffers_uint8_write_to_pe>
    3140:	ldr	r0, [fp, #-16]
    3144:	ldr	r1, [fp, #-20]	; 0xffffffec
    3148:	ldr	r2, [fp, #-24]	; 0xffffffe8
    314c:	sub	r3, fp, #32
    3150:	bl	8ee0 <flatcc_json_parser_array_end>
    3154:	str	r0, [fp, #-20]	; 0xffffffec
    3158:	b	3080 <MyGame_Example_Monster_parse_json_table+0x7c0>
    315c:	ldr	r0, [fp, #-16]
    3160:	ldr	r0, [r0]
    3164:	bl	0 <flatcc_builder_end_vector>
    3168:	str	r0, [fp, #-40]	; 0xffffffd8
    316c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3170:	cmp	r0, #0
    3174:	beq	3198 <MyGame_Example_Monster_parse_json_table+0x8d8>
    3178:	ldr	r0, [fp, #-16]
    317c:	ldr	r0, [r0]
    3180:	movw	r1, #5
    3184:	bl	0 <flatcc_builder_table_add_offset>
    3188:	str	r0, [fp, #-44]	; 0xffffffd4
    318c:	movw	r1, #0
    3190:	cmp	r0, r1
    3194:	bne	319c <MyGame_Example_Monster_parse_json_table+0x8dc>
    3198:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    319c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    31a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    31a4:	str	r0, [r1]
    31a8:	b	31c0 <MyGame_Example_Monster_parse_json_table+0x900>
    31ac:	ldr	r0, [fp, #-16]
    31b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    31b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    31b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    31bc:	str	r0, [fp, #-20]	; 0xffffffec
    31c0:	b	31d8 <MyGame_Example_Monster_parse_json_table+0x918>
    31c4:	ldr	r0, [fp, #-16]
    31c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    31cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    31d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    31d4:	str	r0, [fp, #-20]	; 0xffffffec
    31d8:	b	3334 <MyGame_Example_Monster_parse_json_table+0xa74>
    31dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
    31e0:	movw	r1, #28257	; 0x6e61
    31e4:	movt	r1, #28001	; 0x6d61
    31e8:	teq	r0, r1
    31ec:	bne	331c <MyGame_Example_Monster_parse_json_table+0xa5c>
    31f0:	b	31f4 <MyGame_Example_Monster_parse_json_table+0x934>
    31f4:	ldr	r0, [fp, #-16]
    31f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    31fc:	str	r1, [fp, #-48]	; 0xffffffd0
    3200:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3204:	movw	r3, #4
    3208:	bl	7218 <flatcc_json_parser_match_symbol>
    320c:	str	r0, [fp, #-20]	; 0xffffffec
    3210:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3214:	ldr	r1, [fp, #-20]	; 0xffffffec
    3218:	cmp	r0, r1
    321c:	beq	3304 <MyGame_Example_Monster_parse_json_table+0xa44>
    3220:	movw	r0, #0
    3224:	strh	r0, [fp, #-68]	; 0xffffffbc
    3228:	ldr	r0, [fp, #-16]
    322c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3230:	str	r1, [fp, #-48]	; 0xffffffd0
    3234:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3238:	sub	r3, fp, #68	; 0x44
    323c:	bl	9044 <flatcc_json_parser_int16>
    3240:	str	r0, [fp, #-20]	; 0xffffffec
    3244:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3248:	ldr	r1, [fp, #-20]	; 0xffffffec
    324c:	cmp	r0, r1
    3250:	bne	32a4 <MyGame_Example_Monster_parse_json_table+0x9e4>
    3254:	ldr	r0, [fp, #-16]
    3258:	ldr	r1, [fp, #-20]	; 0xffffffec
    325c:	str	r1, [fp, #-48]	; 0xffffffd0
    3260:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3264:	movw	r3, #0
    3268:	movt	r3, #0
    326c:	sub	ip, fp, #68	; 0x44
    3270:	str	ip, [sp]
    3274:	bl	9120 <flatcc_json_parser_symbolic_int16>
    3278:	str	r0, [fp, #-20]	; 0xffffffec
    327c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3280:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3284:	cmp	r0, r1
    3288:	beq	329c <MyGame_Example_Monster_parse_json_table+0x9dc>
    328c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3290:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3294:	cmp	r0, r1
    3298:	bne	32a0 <MyGame_Example_Monster_parse_json_table+0x9e0>
    329c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    32a0:	b	32a4 <MyGame_Example_Monster_parse_json_table+0x9e4>
    32a4:	ldrsh	r0, [fp, #-68]	; 0xffffffbc
    32a8:	cmp	r0, #150	; 0x96
    32ac:	bne	32c4 <MyGame_Example_Monster_parse_json_table+0xa04>
    32b0:	ldr	r0, [fp, #-16]
    32b4:	ldr	r0, [r0, #8]
    32b8:	and	r0, r0, #2
    32bc:	cmp	r0, #0
    32c0:	beq	3300 <MyGame_Example_Monster_parse_json_table+0xa40>
    32c4:	ldr	r0, [fp, #-16]
    32c8:	ldr	r0, [r0]
    32cc:	movw	r1, #1
    32d0:	movw	r2, #2
    32d4:	movw	r3, #2
    32d8:	uxth	r3, r3
    32dc:	bl	0 <flatcc_builder_table_add>
    32e0:	str	r0, [fp, #-36]	; 0xffffffdc
    32e4:	movw	r1, #0
    32e8:	cmp	r0, r1
    32ec:	bne	32f4 <MyGame_Example_Monster_parse_json_table+0xa34>
    32f0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    32f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    32f8:	ldrsh	r1, [fp, #-68]	; 0xffffffbc
    32fc:	bl	934c <flatbuffers_int16_write_to_pe>
    3300:	b	3318 <MyGame_Example_Monster_parse_json_table+0xa58>
    3304:	ldr	r0, [fp, #-16]
    3308:	ldr	r1, [fp, #-20]	; 0xffffffec
    330c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3310:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3314:	str	r0, [fp, #-20]	; 0xffffffec
    3318:	b	3330 <MyGame_Example_Monster_parse_json_table+0xa70>
    331c:	ldr	r0, [fp, #-16]
    3320:	ldr	r1, [fp, #-20]	; 0xffffffec
    3324:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3328:	bl	0 <flatcc_json_parser_unmatched_symbol>
    332c:	str	r0, [fp, #-20]	; 0xffffffec
    3330:	b	3334 <MyGame_Example_Monster_parse_json_table+0xa74>
    3334:	b	3338 <MyGame_Example_Monster_parse_json_table+0xa78>
    3338:	b	333c <MyGame_Example_Monster_parse_json_table+0xa7c>
    333c:	b	3340 <MyGame_Example_Monster_parse_json_table+0xa80>
    3340:	b	3b44 <MyGame_Example_Monster_parse_json_table+0x1284>
    3344:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3348:	movw	r1, #29555	; 0x7373
    334c:	movt	r1, #29797	; 0x7465
    3350:	cmp	r0, r1
    3354:	bhi	36bc <MyGame_Example_Monster_parse_json_table+0xdfc>
    3358:	b	335c <MyGame_Example_Monster_parse_json_table+0xa9c>
    335c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3360:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3364:	movw	r2, #24429	; 0x5f6d
    3368:	movt	r2, #28276	; 0x6e74
    336c:	subs	r0, r2, r0
    3370:	movw	r2, #29285	; 0x7265
    3374:	movt	r2, #28769	; 0x7061
    3378:	sbcs	r1, r2, r1
    337c:	str	r0, [sp, #100]	; 0x64
    3380:	str	r1, [sp, #96]	; 0x60
    3384:	bcc	3458 <MyGame_Example_Monster_parse_json_table+0xb98>
    3388:	b	338c <MyGame_Example_Monster_parse_json_table+0xacc>
    338c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3390:	movw	r1, #28005	; 0x6d65
    3394:	movt	r1, #28257	; 0x6e61
    3398:	teq	r0, r1
    339c:	bne	3440 <MyGame_Example_Monster_parse_json_table+0xb80>
    33a0:	b	33a4 <MyGame_Example_Monster_parse_json_table+0xae4>
    33a4:	ldr	r0, [fp, #-16]
    33a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    33ac:	str	r1, [fp, #-48]	; 0xffffffd0
    33b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    33b4:	movw	r3, #4
    33b8:	bl	7218 <flatcc_json_parser_match_symbol>
    33bc:	str	r0, [fp, #-20]	; 0xffffffec
    33c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    33c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    33c8:	cmp	r0, r1
    33cc:	beq	3428 <MyGame_Example_Monster_parse_json_table+0xb68>
    33d0:	ldr	r0, [fp, #-16]
    33d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    33d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    33dc:	sub	r3, fp, #40	; 0x28
    33e0:	bl	0 <flatcc_json_parser_build_string>
    33e4:	str	r0, [fp, #-20]	; 0xffffffec
    33e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    33ec:	cmp	r0, #0
    33f0:	beq	3414 <MyGame_Example_Monster_parse_json_table+0xb54>
    33f4:	ldr	r0, [fp, #-16]
    33f8:	ldr	r0, [r0]
    33fc:	movw	r1, #3
    3400:	bl	0 <flatcc_builder_table_add_offset>
    3404:	str	r0, [fp, #-44]	; 0xffffffd4
    3408:	movw	r1, #0
    340c:	cmp	r0, r1
    3410:	bne	3418 <MyGame_Example_Monster_parse_json_table+0xb58>
    3414:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3418:	ldr	r0, [fp, #-40]	; 0xffffffd8
    341c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3420:	str	r0, [r1]
    3424:	b	343c <MyGame_Example_Monster_parse_json_table+0xb7c>
    3428:	ldr	r0, [fp, #-16]
    342c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3430:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3434:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3438:	str	r0, [fp, #-20]	; 0xffffffec
    343c:	b	3454 <MyGame_Example_Monster_parse_json_table+0xb94>
    3440:	ldr	r0, [fp, #-16]
    3444:	ldr	r1, [fp, #-20]	; 0xffffffec
    3448:	ldr	r2, [fp, #-24]	; 0xffffffe8
    344c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3450:	str	r0, [fp, #-20]	; 0xffffffec
    3454:	b	36b8 <MyGame_Example_Monster_parse_json_table+0xdf8>
    3458:	ldr	r0, [fp, #-56]	; 0xffffffc8
    345c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3460:	movw	r2, #29285	; 0x7265
    3464:	movt	r2, #28769	; 0x7061
    3468:	eor	r1, r1, r2
    346c:	movw	r2, #24430	; 0x5f6e
    3470:	movt	r2, #28276	; 0x6e74
    3474:	eor	r0, r0, r2
    3478:	orr	r0, r0, r1
    347c:	cmp	r0, #0
    3480:	bne	35f0 <MyGame_Example_Monster_parse_json_table+0xd30>
    3484:	b	3488 <MyGame_Example_Monster_parse_json_table+0xbc8>
    3488:	ldr	r0, [fp, #-20]	; 0xffffffec
    348c:	add	r0, r0, #8
    3490:	str	r0, [fp, #-20]	; 0xffffffec
    3494:	ldr	r0, [fp, #-20]	; 0xffffffec
    3498:	ldr	r1, [fp, #-24]	; 0xffffffe8
    349c:	bl	71e0 <flatcc_json_parser_symbol_part>
    34a0:	str	r1, [fp, #-52]	; 0xffffffcc
    34a4:	str	r0, [fp, #-56]	; 0xffffffc8
    34a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    34ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
    34b0:	movw	lr, #25971	; 0x6573
    34b4:	movt	lr, #24941	; 0x616d
    34b8:	eor	r1, r1, lr
    34bc:	movw	lr, #25445	; 0x6365
    34c0:	movt	lr, #28769	; 0x7061
    34c4:	eor	r0, r0, lr
    34c8:	orr	r0, r0, r1
    34cc:	cmp	r0, #0
    34d0:	bne	35d8 <MyGame_Example_Monster_parse_json_table+0xd18>
    34d4:	b	34d8 <MyGame_Example_Monster_parse_json_table+0xc18>
    34d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    34dc:	add	r0, r0, #8
    34e0:	str	r0, [fp, #-20]	; 0xffffffec
    34e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    34e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    34ec:	bl	71e0 <flatcc_json_parser_symbol_part>
    34f0:	str	r1, [fp, #-52]	; 0xffffffcc
    34f4:	str	r0, [fp, #-56]	; 0xffffffc8
    34f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    34fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3500:	and	r0, r0, #-16777216	; 0xff000000
    3504:	movw	lr, #25971	; 0x6573
    3508:	movt	lr, #24436	; 0x5f74
    350c:	eor	r1, r1, lr
    3510:	eor	r0, r0, #1946157056	; 0x74000000
    3514:	orr	r0, r0, r1
    3518:	cmp	r0, #0
    351c:	bne	35c0 <MyGame_Example_Monster_parse_json_table+0xd00>
    3520:	b	3524 <MyGame_Example_Monster_parse_json_table+0xc64>
    3524:	ldr	r0, [fp, #-16]
    3528:	ldr	r1, [fp, #-20]	; 0xffffffec
    352c:	str	r1, [fp, #-48]	; 0xffffffd0
    3530:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3534:	movw	r3, #5
    3538:	bl	7218 <flatcc_json_parser_match_symbol>
    353c:	str	r0, [fp, #-20]	; 0xffffffec
    3540:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3544:	ldr	r1, [fp, #-20]	; 0xffffffec
    3548:	cmp	r0, r1
    354c:	beq	35a8 <MyGame_Example_Monster_parse_json_table+0xce8>
    3550:	ldr	r0, [fp, #-16]
    3554:	ldr	r1, [fp, #-20]	; 0xffffffec
    3558:	ldr	r2, [fp, #-24]	; 0xffffffe8
    355c:	sub	r3, fp, #40	; 0x28
    3560:	bl	9378 <MyGame_InParentNamespace_parse_json_table>
    3564:	str	r0, [fp, #-20]	; 0xffffffec
    3568:	ldr	r0, [fp, #-40]	; 0xffffffd8
    356c:	cmp	r0, #0
    3570:	beq	3594 <MyGame_Example_Monster_parse_json_table+0xcd4>
    3574:	ldr	r0, [fp, #-16]
    3578:	ldr	r0, [r0]
    357c:	movw	r1, #34	; 0x22
    3580:	bl	0 <flatcc_builder_table_add_offset>
    3584:	str	r0, [fp, #-44]	; 0xffffffd4
    3588:	movw	r1, #0
    358c:	cmp	r0, r1
    3590:	bne	3598 <MyGame_Example_Monster_parse_json_table+0xcd8>
    3594:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3598:	ldr	r0, [fp, #-40]	; 0xffffffd8
    359c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    35a0:	str	r0, [r1]
    35a4:	b	35bc <MyGame_Example_Monster_parse_json_table+0xcfc>
    35a8:	ldr	r0, [fp, #-16]
    35ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    35b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    35b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    35b8:	str	r0, [fp, #-20]	; 0xffffffec
    35bc:	b	35d4 <MyGame_Example_Monster_parse_json_table+0xd14>
    35c0:	ldr	r0, [fp, #-16]
    35c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    35c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    35cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    35d0:	str	r0, [fp, #-20]	; 0xffffffec
    35d4:	b	35ec <MyGame_Example_Monster_parse_json_table+0xd2c>
    35d8:	ldr	r0, [fp, #-16]
    35dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    35e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    35e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    35e8:	str	r0, [fp, #-20]	; 0xffffffec
    35ec:	b	36b4 <MyGame_Example_Monster_parse_json_table+0xdf4>
    35f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    35f4:	bic	r0, r0, #255	; 0xff
    35f8:	movw	r1, #29440	; 0x7300
    35fc:	movt	r1, #28783	; 0x706f
    3600:	teq	r0, r1
    3604:	bne	369c <MyGame_Example_Monster_parse_json_table+0xddc>
    3608:	b	360c <MyGame_Example_Monster_parse_json_table+0xd4c>
    360c:	ldr	r0, [fp, #-16]
    3610:	ldr	r1, [fp, #-20]	; 0xffffffec
    3614:	str	r1, [fp, #-48]	; 0xffffffd0
    3618:	ldr	r2, [fp, #-24]	; 0xffffffe8
    361c:	movw	r3, #3
    3620:	bl	7218 <flatcc_json_parser_match_symbol>
    3624:	str	r0, [fp, #-20]	; 0xffffffec
    3628:	ldr	r0, [fp, #-48]	; 0xffffffd0
    362c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3630:	cmp	r0, r1
    3634:	beq	3684 <MyGame_Example_Monster_parse_json_table+0xdc4>
    3638:	ldr	r0, [fp, #-16]
    363c:	ldr	r0, [r0]
    3640:	movw	r1, #0
    3644:	movw	r2, #32
    3648:	movw	r3, #16
    364c:	uxth	r3, r3
    3650:	bl	0 <flatcc_builder_table_add>
    3654:	str	r0, [fp, #-36]	; 0xffffffdc
    3658:	movw	r1, #0
    365c:	cmp	r0, r1
    3660:	bne	3668 <MyGame_Example_Monster_parse_json_table+0xda8>
    3664:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3668:	ldr	r0, [fp, #-16]
    366c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3670:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3674:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3678:	bl	9488 <MyGame_Example_Vec3_parse_json_struct_inline>
    367c:	str	r0, [fp, #-20]	; 0xffffffec
    3680:	b	3698 <MyGame_Example_Monster_parse_json_table+0xdd8>
    3684:	ldr	r0, [fp, #-16]
    3688:	ldr	r1, [fp, #-20]	; 0xffffffec
    368c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3690:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3694:	str	r0, [fp, #-20]	; 0xffffffec
    3698:	b	36b0 <MyGame_Example_Monster_parse_json_table+0xdf0>
    369c:	ldr	r0, [fp, #-16]
    36a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    36a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    36a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    36ac:	str	r0, [fp, #-20]	; 0xffffffec
    36b0:	b	36b4 <MyGame_Example_Monster_parse_json_table+0xdf4>
    36b4:	b	36b8 <MyGame_Example_Monster_parse_json_table+0xdf8>
    36b8:	b	3b40 <MyGame_Example_Monster_parse_json_table+0x1280>
    36bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    36c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    36c4:	and	r0, r0, #-16777216	; 0xff000000
    36c8:	movw	r2, #29556	; 0x7374
    36cc:	movt	r2, #29797	; 0x7465
    36d0:	eor	r1, r1, r2
    36d4:	eor	r0, r0, #872415232	; 0x34000000
    36d8:	orr	r0, r0, r1
    36dc:	cmp	r0, #0
    36e0:	bne	3810 <MyGame_Example_Monster_parse_json_table+0xf50>
    36e4:	b	36e8 <MyGame_Example_Monster_parse_json_table+0xe28>
    36e8:	ldr	r0, [fp, #-16]
    36ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    36f0:	str	r1, [fp, #-48]	; 0xffffffd0
    36f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    36f8:	movw	r3, #5
    36fc:	bl	7218 <flatcc_json_parser_match_symbol>
    3700:	str	r0, [fp, #-20]	; 0xffffffec
    3704:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3708:	ldr	r1, [fp, #-20]	; 0xffffffec
    370c:	cmp	r0, r1
    3710:	beq	3808 <MyGame_Example_Monster_parse_json_table+0xf48>
    3714:	ldr	r3, [pc, #4044]	; 46e8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    3718:	ldr	r0, [fp, #-16]
    371c:	ldr	r0, [r0]
    3720:	movw	r1, #4
    3724:	movw	r2, #2
    3728:	uxth	r2, r2
    372c:	bl	0 <flatcc_builder_start_vector>
    3730:	cmp	r0, #0
    3734:	beq	373c <MyGame_Example_Monster_parse_json_table+0xe7c>
    3738:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    373c:	ldr	r0, [fp, #-16]
    3740:	ldr	r1, [fp, #-20]	; 0xffffffec
    3744:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3748:	sub	r3, fp, #32
    374c:	bl	8ac8 <flatcc_json_parser_array_start>
    3750:	str	r0, [fp, #-20]	; 0xffffffec
    3754:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3758:	cmp	r0, #0
    375c:	beq	37b8 <MyGame_Example_Monster_parse_json_table+0xef8>
    3760:	ldr	r0, [fp, #-16]
    3764:	ldr	r0, [r0]
    3768:	movw	r1, #1
    376c:	bl	0 <flatcc_builder_extend_vector>
    3770:	str	r0, [fp, #-36]	; 0xffffffdc
    3774:	movw	r1, #0
    3778:	cmp	r0, r1
    377c:	bne	3784 <MyGame_Example_Monster_parse_json_table+0xec4>
    3780:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3784:	ldr	r0, [fp, #-16]
    3788:	ldr	r1, [fp, #-20]	; 0xffffffec
    378c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3790:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3794:	bl	9ba8 <MyGame_Example_Test_parse_json_struct_inline>
    3798:	str	r0, [fp, #-20]	; 0xffffffec
    379c:	ldr	r0, [fp, #-16]
    37a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    37a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    37a8:	sub	r3, fp, #32
    37ac:	bl	8ee0 <flatcc_json_parser_array_end>
    37b0:	str	r0, [fp, #-20]	; 0xffffffec
    37b4:	b	3754 <MyGame_Example_Monster_parse_json_table+0xe94>
    37b8:	ldr	r0, [fp, #-16]
    37bc:	ldr	r0, [r0]
    37c0:	bl	0 <flatcc_builder_end_vector>
    37c4:	str	r0, [fp, #-40]	; 0xffffffd8
    37c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37cc:	cmp	r0, #0
    37d0:	beq	37f4 <MyGame_Example_Monster_parse_json_table+0xf34>
    37d4:	ldr	r0, [fp, #-16]
    37d8:	ldr	r0, [r0]
    37dc:	movw	r1, #9
    37e0:	bl	0 <flatcc_builder_table_add_offset>
    37e4:	str	r0, [fp, #-44]	; 0xffffffd4
    37e8:	movw	r1, #0
    37ec:	cmp	r0, r1
    37f0:	bne	37f8 <MyGame_Example_Monster_parse_json_table+0xf38>
    37f4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    37f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    37fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3800:	str	r0, [r1]
    3804:	b	380c <MyGame_Example_Monster_parse_json_table+0xf4c>
    3808:	b	38b0 <MyGame_Example_Monster_parse_json_table+0xff0>
    380c:	b	38ac <MyGame_Example_Monster_parse_json_table+0xfec>
    3810:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3814:	movw	r1, #29556	; 0x7374
    3818:	movt	r1, #29797	; 0x7465
    381c:	teq	r0, r1
    3820:	bne	38a4 <MyGame_Example_Monster_parse_json_table+0xfe4>
    3824:	b	3828 <MyGame_Example_Monster_parse_json_table+0xf68>
    3828:	ldr	r0, [fp, #-16]
    382c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3830:	str	r1, [fp, #-48]	; 0xffffffd0
    3834:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3838:	movw	r3, #4
    383c:	bl	7218 <flatcc_json_parser_match_symbol>
    3840:	str	r0, [fp, #-20]	; 0xffffffec
    3844:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3848:	ldr	r1, [fp, #-20]	; 0xffffffec
    384c:	cmp	r0, r1
    3850:	beq	389c <MyGame_Example_Monster_parse_json_table+0xfdc>
    3854:	ldr	r0, [fp, #-16]
    3858:	ldr	r1, [fp, #-20]	; 0xffffffec
    385c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3860:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3864:	movw	ip, #0
    3868:	str	r3, [sp, #92]	; 0x5c
    386c:	mov	r3, ip
    3870:	movw	ip, #8
    3874:	uxth	ip, ip
    3878:	str	ip, [sp]
    387c:	ldr	ip, [sp, #92]	; 0x5c
    3880:	str	ip, [sp, #4]
    3884:	movw	lr, #0
    3888:	movt	lr, #0
    388c:	str	lr, [sp, #8]
    3890:	bl	0 <flatcc_json_parser_union>
    3894:	str	r0, [fp, #-20]	; 0xffffffec
    3898:	b	38a0 <MyGame_Example_Monster_parse_json_table+0xfe0>
    389c:	b	38b0 <MyGame_Example_Monster_parse_json_table+0xff0>
    38a0:	b	38a8 <MyGame_Example_Monster_parse_json_table+0xfe8>
    38a4:	b	38b0 <MyGame_Example_Monster_parse_json_table+0xff0>
    38a8:	b	38ac <MyGame_Example_Monster_parse_json_table+0xfec>
    38ac:	b	3b3c <MyGame_Example_Monster_parse_json_table+0x127c>
    38b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    38b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    38b8:	and	r0, r0, #-16777216	; 0xff000000
    38bc:	movw	r2, #29556	; 0x7374
    38c0:	movt	r2, #29797	; 0x7465
    38c4:	eor	r1, r1, r2
    38c8:	eor	r0, r0, #889192448	; 0x35000000
    38cc:	orr	r0, r0, r1
    38d0:	cmp	r0, #0
    38d4:	bne	3a04 <MyGame_Example_Monster_parse_json_table+0x1144>
    38d8:	b	38dc <MyGame_Example_Monster_parse_json_table+0x101c>
    38dc:	ldr	r0, [fp, #-16]
    38e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    38e4:	str	r1, [fp, #-48]	; 0xffffffd0
    38e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    38ec:	movw	r3, #5
    38f0:	bl	7218 <flatcc_json_parser_match_symbol>
    38f4:	str	r0, [fp, #-20]	; 0xffffffec
    38f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    38fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3900:	cmp	r0, r1
    3904:	beq	39fc <MyGame_Example_Monster_parse_json_table+0x113c>
    3908:	ldr	r3, [pc, #3544]	; 46e8 <MyGame_Example_Monster_parse_json_table+0x1e28>
    390c:	ldr	r0, [fp, #-16]
    3910:	ldr	r0, [r0]
    3914:	movw	r1, #4
    3918:	movw	r2, #2
    391c:	uxth	r2, r2
    3920:	bl	0 <flatcc_builder_start_vector>
    3924:	cmp	r0, #0
    3928:	beq	3930 <MyGame_Example_Monster_parse_json_table+0x1070>
    392c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3930:	ldr	r0, [fp, #-16]
    3934:	ldr	r1, [fp, #-20]	; 0xffffffec
    3938:	ldr	r2, [fp, #-24]	; 0xffffffe8
    393c:	sub	r3, fp, #32
    3940:	bl	8ac8 <flatcc_json_parser_array_start>
    3944:	str	r0, [fp, #-20]	; 0xffffffec
    3948:	ldr	r0, [fp, #-32]	; 0xffffffe0
    394c:	cmp	r0, #0
    3950:	beq	39ac <MyGame_Example_Monster_parse_json_table+0x10ec>
    3954:	ldr	r0, [fp, #-16]
    3958:	ldr	r0, [r0]
    395c:	movw	r1, #1
    3960:	bl	0 <flatcc_builder_extend_vector>
    3964:	str	r0, [fp, #-36]	; 0xffffffdc
    3968:	movw	r1, #0
    396c:	cmp	r0, r1
    3970:	bne	3978 <MyGame_Example_Monster_parse_json_table+0x10b8>
    3974:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3978:	ldr	r0, [fp, #-16]
    397c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3980:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3984:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3988:	bl	9ba8 <MyGame_Example_Test_parse_json_struct_inline>
    398c:	str	r0, [fp, #-20]	; 0xffffffec
    3990:	ldr	r0, [fp, #-16]
    3994:	ldr	r1, [fp, #-20]	; 0xffffffec
    3998:	ldr	r2, [fp, #-24]	; 0xffffffe8
    399c:	sub	r3, fp, #32
    39a0:	bl	8ee0 <flatcc_json_parser_array_end>
    39a4:	str	r0, [fp, #-20]	; 0xffffffec
    39a8:	b	3948 <MyGame_Example_Monster_parse_json_table+0x1088>
    39ac:	ldr	r0, [fp, #-16]
    39b0:	ldr	r0, [r0]
    39b4:	bl	0 <flatcc_builder_end_vector>
    39b8:	str	r0, [fp, #-40]	; 0xffffffd8
    39bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    39c0:	cmp	r0, #0
    39c4:	beq	39e8 <MyGame_Example_Monster_parse_json_table+0x1128>
    39c8:	ldr	r0, [fp, #-16]
    39cc:	ldr	r0, [r0]
    39d0:	movw	r1, #31
    39d4:	bl	0 <flatcc_builder_table_add_offset>
    39d8:	str	r0, [fp, #-44]	; 0xffffffd4
    39dc:	movw	r1, #0
    39e0:	cmp	r0, r1
    39e4:	bne	39ec <MyGame_Example_Monster_parse_json_table+0x112c>
    39e8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    39ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    39f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    39f4:	str	r0, [r1]
    39f8:	b	3a00 <MyGame_Example_Monster_parse_json_table+0x1140>
    39fc:	b	3a0c <MyGame_Example_Monster_parse_json_table+0x114c>
    3a00:	b	3a08 <MyGame_Example_Monster_parse_json_table+0x1148>
    3a04:	b	3a0c <MyGame_Example_Monster_parse_json_table+0x114c>
    3a08:	b	3b38 <MyGame_Example_Monster_parse_json_table+0x1278>
    3a0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3a10:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3a14:	movw	r2, #29556	; 0x7374
    3a18:	movt	r2, #29797	; 0x7465
    3a1c:	eor	r1, r1, r2
    3a20:	movw	r2, #31088	; 0x7970
    3a24:	movt	r2, #24436	; 0x5f74
    3a28:	eor	r0, r0, r2
    3a2c:	orr	r0, r0, r1
    3a30:	cmp	r0, #0
    3a34:	bne	3b20 <MyGame_Example_Monster_parse_json_table+0x1260>
    3a38:	b	3a3c <MyGame_Example_Monster_parse_json_table+0x117c>
    3a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a40:	add	r0, r0, #8
    3a44:	str	r0, [fp, #-20]	; 0xffffffec
    3a48:	ldr	r0, [fp, #-20]	; 0xffffffec
    3a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3a50:	bl	71e0 <flatcc_json_parser_symbol_part>
    3a54:	str	r1, [fp, #-52]	; 0xffffffcc
    3a58:	str	r0, [fp, #-56]	; 0xffffffc8
    3a5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3a60:	and	r0, r0, #-16777216	; 0xff000000
    3a64:	teq	r0, #1694498816	; 0x65000000
    3a68:	bne	3b08 <MyGame_Example_Monster_parse_json_table+0x1248>
    3a6c:	b	3a70 <MyGame_Example_Monster_parse_json_table+0x11b0>
    3a70:	ldr	r0, [fp, #-16]
    3a74:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a78:	str	r1, [fp, #-48]	; 0xffffffd0
    3a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3a80:	movw	r3, #1
    3a84:	bl	7218 <flatcc_json_parser_match_symbol>
    3a88:	str	r0, [fp, #-20]	; 0xffffffec
    3a8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3a90:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a94:	cmp	r0, r1
    3a98:	beq	3af0 <MyGame_Example_Monster_parse_json_table+0x1230>
    3a9c:	ldr	r0, [fp, #-16]
    3aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3aa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3aa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    3aac:	movw	ip, #0
    3ab0:	str	r3, [sp, #88]	; 0x58
    3ab4:	mov	r3, ip
    3ab8:	movw	ip, #8
    3abc:	uxth	ip, ip
    3ac0:	str	ip, [sp]
    3ac4:	ldr	ip, [sp, #88]	; 0x58
    3ac8:	str	ip, [sp, #4]
    3acc:	movw	lr, #0
    3ad0:	movt	lr, #0
    3ad4:	str	lr, [sp, #8]
    3ad8:	movw	lr, #0
    3adc:	movt	lr, #0
    3ae0:	str	lr, [sp, #12]
    3ae4:	bl	0 <flatcc_json_parser_union_type>
    3ae8:	str	r0, [fp, #-20]	; 0xffffffec
    3aec:	b	3b04 <MyGame_Example_Monster_parse_json_table+0x1244>
    3af0:	ldr	r0, [fp, #-16]
    3af4:	ldr	r1, [fp, #-20]	; 0xffffffec
    3af8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3afc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3b00:	str	r0, [fp, #-20]	; 0xffffffec
    3b04:	b	3b1c <MyGame_Example_Monster_parse_json_table+0x125c>
    3b08:	ldr	r0, [fp, #-16]
    3b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b10:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3b18:	str	r0, [fp, #-20]	; 0xffffffec
    3b1c:	b	3b34 <MyGame_Example_Monster_parse_json_table+0x1274>
    3b20:	ldr	r0, [fp, #-16]
    3b24:	ldr	r1, [fp, #-20]	; 0xffffffec
    3b28:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3b2c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3b30:	str	r0, [fp, #-20]	; 0xffffffec
    3b34:	b	3b38 <MyGame_Example_Monster_parse_json_table+0x1278>
    3b38:	b	3b3c <MyGame_Example_Monster_parse_json_table+0x127c>
    3b3c:	b	3b40 <MyGame_Example_Monster_parse_json_table+0x1280>
    3b40:	b	3b44 <MyGame_Example_Monster_parse_json_table+0x1284>
    3b44:	b	61d4 <MyGame_Example_Monster_parse_json_table+0x3914>
    3b48:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3b4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3b50:	movw	r2, #65535	; 0xffff
    3b54:	movt	r2, #26162	; 0x6632
    3b58:	subs	r0, r2, r0
    3b5c:	movw	r2, #29556	; 0x7374
    3b60:	movt	r2, #29797	; 0x7465
    3b64:	sbcs	r1, r2, r1
    3b68:	str	r0, [sp, #84]	; 0x54
    3b6c:	str	r1, [sp, #80]	; 0x50
    3b70:	bcc	4bcc <MyGame_Example_Monster_parse_json_table+0x230c>
    3b74:	b	3b78 <MyGame_Example_Monster_parse_json_table+0x12b8>
    3b78:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3b7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3b80:	movw	r2, #29556	; 0x7374
    3b84:	movt	r2, #29797	; 0x7465
    3b88:	eor	r1, r1, r2
    3b8c:	movw	r2, #29281	; 0x7261
    3b90:	movt	r2, #24946	; 0x6172
    3b94:	eor	r0, r0, r2
    3b98:	orr	r0, r0, r1
    3b9c:	cmp	r0, #0
    3ba0:	bne	44bc <MyGame_Example_Monster_parse_json_table+0x1bfc>
    3ba4:	b	3ba8 <MyGame_Example_Monster_parse_json_table+0x12e8>
    3ba8:	ldr	r0, [fp, #-20]	; 0xffffffec
    3bac:	add	r0, r0, #8
    3bb0:	str	r0, [fp, #-20]	; 0xffffffec
    3bb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    3bb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3bbc:	bl	71e0 <flatcc_json_parser_symbol_part>
    3bc0:	str	r1, [fp, #-52]	; 0xffffffcc
    3bc4:	str	r0, [fp, #-56]	; 0xffffffc8
    3bc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3bcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3bd0:	movw	lr, #26989	; 0x696d
    3bd4:	movt	lr, #29810	; 0x7472
    3bd8:	subs	r0, lr, r0
    3bdc:	movw	lr, #26227	; 0x6673
    3be0:	movt	lr, #31087	; 0x796f
    3be4:	sbcs	r1, lr, r1
    3be8:	str	r0, [sp, #76]	; 0x4c
    3bec:	str	r1, [sp, #72]	; 0x48
    3bf0:	bcc	3fc4 <MyGame_Example_Monster_parse_json_table+0x1704>
    3bf4:	b	3bf8 <MyGame_Example_Monster_parse_json_table+0x1338>
    3bf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3bfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3c00:	movw	r2, #26210	; 0x6662
    3c04:	movt	r2, #31087	; 0x796f
    3c08:	eor	r1, r1, r2
    3c0c:	movw	r2, #27763	; 0x6c73
    3c10:	movt	r2, #28527	; 0x6f6f
    3c14:	eor	r0, r0, r2
    3c18:	orr	r0, r0, r1
    3c1c:	cmp	r0, #0
    3c20:	bne	3dc8 <MyGame_Example_Monster_parse_json_table+0x1508>
    3c24:	b	3c28 <MyGame_Example_Monster_parse_json_table+0x1368>
    3c28:	ldr	r0, [fp, #-16]
    3c2c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c30:	str	r1, [fp, #-48]	; 0xffffffd0
    3c34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3c38:	movw	r3, #8
    3c3c:	bl	7218 <flatcc_json_parser_match_symbol>
    3c40:	str	r0, [fp, #-20]	; 0xffffffec
    3c44:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3c48:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c4c:	cmp	r0, r1
    3c50:	beq	3dc0 <MyGame_Example_Monster_parse_json_table+0x1500>
    3c54:	ldr	r0, [fp, #-16]
    3c58:	ldr	r0, [r0]
    3c5c:	movw	r1, #1
    3c60:	movw	r2, #1
    3c64:	uxth	r2, r2
    3c68:	mvn	r3, #0
    3c6c:	bl	0 <flatcc_builder_start_vector>
    3c70:	cmp	r0, #0
    3c74:	beq	3c7c <MyGame_Example_Monster_parse_json_table+0x13bc>
    3c78:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3c7c:	ldr	r0, [fp, #-16]
    3c80:	ldr	r1, [fp, #-20]	; 0xffffffec
    3c84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3c88:	sub	r3, fp, #32
    3c8c:	bl	8ac8 <flatcc_json_parser_array_start>
    3c90:	str	r0, [fp, #-20]	; 0xffffffec
    3c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3c98:	cmp	r0, #0
    3c9c:	beq	3d70 <MyGame_Example_Monster_parse_json_table+0x14b0>
    3ca0:	movw	r0, #0
    3ca4:	strb	r0, [fp, #-69]	; 0xffffffbb
    3ca8:	ldr	r0, [fp, #-16]
    3cac:	ldr	r0, [r0]
    3cb0:	movw	r1, #1
    3cb4:	bl	0 <flatcc_builder_extend_vector>
    3cb8:	str	r0, [fp, #-36]	; 0xffffffdc
    3cbc:	movw	r1, #0
    3cc0:	cmp	r0, r1
    3cc4:	bne	3ccc <MyGame_Example_Monster_parse_json_table+0x140c>
    3cc8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3ccc:	ldr	r0, [fp, #-16]
    3cd0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cd4:	str	r1, [fp, #-48]	; 0xffffffd0
    3cd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3cdc:	sub	r3, fp, #69	; 0x45
    3ce0:	bl	a47c <flatcc_json_parser_bool>
    3ce4:	str	r0, [fp, #-20]	; 0xffffffec
    3ce8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3cec:	ldr	r1, [fp, #-20]	; 0xffffffec
    3cf0:	cmp	r0, r1
    3cf4:	bne	3d48 <MyGame_Example_Monster_parse_json_table+0x1488>
    3cf8:	ldr	r0, [fp, #-16]
    3cfc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d00:	str	r1, [fp, #-48]	; 0xffffffd0
    3d04:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3d08:	movw	r3, #0
    3d0c:	movt	r3, #0
    3d10:	sub	ip, fp, #69	; 0x45
    3d14:	str	ip, [sp]
    3d18:	bl	a5a0 <flatcc_json_parser_symbolic_bool>
    3d1c:	str	r0, [fp, #-20]	; 0xffffffec
    3d20:	ldr	r0, [fp, #-20]	; 0xffffffec
    3d24:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3d28:	cmp	r0, r1
    3d2c:	beq	3d40 <MyGame_Example_Monster_parse_json_table+0x1480>
    3d30:	ldr	r0, [fp, #-20]	; 0xffffffec
    3d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3d38:	cmp	r0, r1
    3d3c:	bne	3d44 <MyGame_Example_Monster_parse_json_table+0x1484>
    3d40:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3d44:	b	3d48 <MyGame_Example_Monster_parse_json_table+0x1488>
    3d48:	ldr	r0, [fp, #-36]	; 0xffffffdc
    3d4c:	ldrb	r1, [fp, #-69]	; 0xffffffbb
    3d50:	bl	a7cc <flatbuffers_bool_write_to_pe>
    3d54:	ldr	r0, [fp, #-16]
    3d58:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3d60:	sub	r3, fp, #32
    3d64:	bl	8ee0 <flatcc_json_parser_array_end>
    3d68:	str	r0, [fp, #-20]	; 0xffffffec
    3d6c:	b	3c94 <MyGame_Example_Monster_parse_json_table+0x13d4>
    3d70:	ldr	r0, [fp, #-16]
    3d74:	ldr	r0, [r0]
    3d78:	bl	0 <flatcc_builder_end_vector>
    3d7c:	str	r0, [fp, #-40]	; 0xffffffd8
    3d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3d84:	cmp	r0, #0
    3d88:	beq	3dac <MyGame_Example_Monster_parse_json_table+0x14ec>
    3d8c:	ldr	r0, [fp, #-16]
    3d90:	ldr	r0, [r0]
    3d94:	movw	r1, #24
    3d98:	bl	0 <flatcc_builder_table_add_offset>
    3d9c:	str	r0, [fp, #-44]	; 0xffffffd4
    3da0:	movw	r1, #0
    3da4:	cmp	r0, r1
    3da8:	bne	3db0 <MyGame_Example_Monster_parse_json_table+0x14f0>
    3dac:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3db8:	str	r0, [r1]
    3dbc:	b	3dc4 <MyGame_Example_Monster_parse_json_table+0x1504>
    3dc0:	b	3dd0 <MyGame_Example_Monster_parse_json_table+0x1510>
    3dc4:	b	3dcc <MyGame_Example_Monster_parse_json_table+0x150c>
    3dc8:	b	3dd0 <MyGame_Example_Monster_parse_json_table+0x1510>
    3dcc:	b	3fc0 <MyGame_Example_Monster_parse_json_table+0x1700>
    3dd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3dd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3dd8:	movw	r2, #26227	; 0x6673
    3ddc:	movt	r2, #31087	; 0x796f
    3de0:	eor	r1, r1, r2
    3de4:	movw	r2, #29797	; 0x7465
    3de8:	movt	r2, #28530	; 0x6f72
    3dec:	eor	r0, r0, r2
    3df0:	orr	r0, r0, r1
    3df4:	cmp	r0, #0
    3df8:	bne	3fa8 <MyGame_Example_Monster_parse_json_table+0x16e8>
    3dfc:	b	3e00 <MyGame_Example_Monster_parse_json_table+0x1540>
    3e00:	ldr	r0, [fp, #-20]	; 0xffffffec
    3e04:	add	r0, r0, #8
    3e08:	str	r0, [fp, #-20]	; 0xffffffec
    3e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
    3e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
    3e14:	bl	71e0 <flatcc_json_parser_symbol_part>
    3e18:	str	r1, [fp, #-52]	; 0xffffffcc
    3e1c:	str	r0, [fp, #-56]	; 0xffffffc8
    3e20:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3e24:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3e28:	movw	lr, #29556	; 0x7374
    3e2c:	movt	lr, #100	; 0x64
    3e30:	eor	lr, lr, r1, lsr #8
    3e34:	lsr	r0, r0, #8
    3e38:	orr	r0, r0, r1, lsl #24
    3e3c:	movw	r1, #25460	; 0x6374
    3e40:	movt	r1, #29301	; 0x7275
    3e44:	eor	r0, r0, r1
    3e48:	orr	r0, r0, lr
    3e4c:	cmp	r0, #0
    3e50:	bne	3f90 <MyGame_Example_Monster_parse_json_table+0x16d0>
    3e54:	b	3e58 <MyGame_Example_Monster_parse_json_table+0x1598>
    3e58:	ldr	r0, [fp, #-16]
    3e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e60:	str	r1, [fp, #-48]	; 0xffffffd0
    3e64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3e68:	movw	r3, #7
    3e6c:	bl	7218 <flatcc_json_parser_match_symbol>
    3e70:	str	r0, [fp, #-20]	; 0xffffffec
    3e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3e78:	ldr	r1, [fp, #-20]	; 0xffffffec
    3e7c:	cmp	r0, r1
    3e80:	beq	3f78 <MyGame_Example_Monster_parse_json_table+0x16b8>
    3e84:	ldr	r3, [pc, #3996]	; 4e28 <MyGame_Example_Monster_parse_json_table+0x2568>
    3e88:	ldr	r0, [fp, #-16]
    3e8c:	ldr	r0, [r0]
    3e90:	movw	r1, #8
    3e94:	movw	r2, #4
    3e98:	uxth	r2, r2
    3e9c:	bl	0 <flatcc_builder_start_vector>
    3ea0:	cmp	r0, #0
    3ea4:	beq	3eac <MyGame_Example_Monster_parse_json_table+0x15ec>
    3ea8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3eac:	ldr	r0, [fp, #-16]
    3eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3eb8:	sub	r3, fp, #32
    3ebc:	bl	8ac8 <flatcc_json_parser_array_start>
    3ec0:	str	r0, [fp, #-20]	; 0xffffffec
    3ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3ec8:	cmp	r0, #0
    3ecc:	beq	3f28 <MyGame_Example_Monster_parse_json_table+0x1668>
    3ed0:	ldr	r0, [fp, #-16]
    3ed4:	ldr	r0, [r0]
    3ed8:	movw	r1, #1
    3edc:	bl	0 <flatcc_builder_extend_vector>
    3ee0:	str	r0, [fp, #-36]	; 0xffffffdc
    3ee4:	movw	r1, #0
    3ee8:	cmp	r0, r1
    3eec:	bne	3ef4 <MyGame_Example_Monster_parse_json_table+0x1634>
    3ef0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3ef4:	ldr	r0, [fp, #-16]
    3ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
    3efc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f00:	ldr	r3, [fp, #-36]	; 0xffffffdc
    3f04:	bl	a7f8 <MyGame_Example_Ability_parse_json_struct_inline>
    3f08:	str	r0, [fp, #-20]	; 0xffffffec
    3f0c:	ldr	r0, [fp, #-16]
    3f10:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f18:	sub	r3, fp, #32
    3f1c:	bl	8ee0 <flatcc_json_parser_array_end>
    3f20:	str	r0, [fp, #-20]	; 0xffffffec
    3f24:	b	3ec4 <MyGame_Example_Monster_parse_json_table+0x1604>
    3f28:	ldr	r0, [fp, #-16]
    3f2c:	ldr	r0, [r0]
    3f30:	bl	0 <flatcc_builder_end_vector>
    3f34:	str	r0, [fp, #-40]	; 0xffffffd8
    3f38:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3f3c:	cmp	r0, #0
    3f40:	beq	3f64 <MyGame_Example_Monster_parse_json_table+0x16a4>
    3f44:	ldr	r0, [fp, #-16]
    3f48:	ldr	r0, [r0]
    3f4c:	movw	r1, #29
    3f50:	bl	0 <flatcc_builder_table_add_offset>
    3f54:	str	r0, [fp, #-44]	; 0xffffffd4
    3f58:	movw	r1, #0
    3f5c:	cmp	r0, r1
    3f60:	bne	3f68 <MyGame_Example_Monster_parse_json_table+0x16a8>
    3f64:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    3f68:	ldr	r0, [fp, #-40]	; 0xffffffd8
    3f6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3f70:	str	r0, [r1]
    3f74:	b	3f8c <MyGame_Example_Monster_parse_json_table+0x16cc>
    3f78:	ldr	r0, [fp, #-16]
    3f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f80:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f84:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3f88:	str	r0, [fp, #-20]	; 0xffffffec
    3f8c:	b	3fa4 <MyGame_Example_Monster_parse_json_table+0x16e4>
    3f90:	ldr	r0, [fp, #-16]
    3f94:	ldr	r1, [fp, #-20]	; 0xffffffec
    3f98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3f9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3fa0:	str	r0, [fp, #-20]	; 0xffffffec
    3fa4:	b	3fbc <MyGame_Example_Monster_parse_json_table+0x16fc>
    3fa8:	ldr	r0, [fp, #-16]
    3fac:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3fb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    3fb8:	str	r0, [fp, #-20]	; 0xffffffec
    3fbc:	b	3fc0 <MyGame_Example_Monster_parse_json_table+0x1700>
    3fc0:	b	44b8 <MyGame_Example_Monster_parse_json_table+0x1bf8>
    3fc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3fc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    3fcc:	movw	r2, #26227	; 0x6673
    3fd0:	movt	r2, #31087	; 0x796f
    3fd4:	eor	r1, r1, r2
    3fd8:	movw	r2, #26990	; 0x696e
    3fdc:	movt	r2, #29810	; 0x7472
    3fe0:	eor	r0, r0, r2
    3fe4:	orr	r0, r0, r1
    3fe8:	cmp	r0, #0
    3fec:	bne	42e0 <MyGame_Example_Monster_parse_json_table+0x1a20>
    3ff0:	b	3ff4 <MyGame_Example_Monster_parse_json_table+0x1734>
    3ff4:	ldr	r0, [fp, #-20]	; 0xffffffec
    3ff8:	add	r0, r0, #8
    3ffc:	str	r0, [fp, #-20]	; 0xffffffec
    4000:	ldr	r0, [fp, #-20]	; 0xffffffec
    4004:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4008:	bl	71e0 <flatcc_json_parser_symbol_part>
    400c:	str	r1, [fp, #-52]	; 0xffffffcc
    4010:	str	r0, [fp, #-56]	; 0xffffffc8
    4014:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4018:	bfc	r0, #0, #16
    401c:	movw	r1, #0
    4020:	movt	r1, #26418	; 0x6732
    4024:	teq	r0, r1
    4028:	bne	4170 <MyGame_Example_Monster_parse_json_table+0x18b0>
    402c:	b	4030 <MyGame_Example_Monster_parse_json_table+0x1770>
    4030:	ldr	r0, [fp, #-16]
    4034:	ldr	r1, [fp, #-20]	; 0xffffffec
    4038:	str	r1, [fp, #-48]	; 0xffffffd0
    403c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4040:	movw	r3, #2
    4044:	bl	7218 <flatcc_json_parser_match_symbol>
    4048:	str	r0, [fp, #-20]	; 0xffffffec
    404c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4050:	ldr	r1, [fp, #-20]	; 0xffffffec
    4054:	cmp	r0, r1
    4058:	beq	4158 <MyGame_Example_Monster_parse_json_table+0x1898>
    405c:	ldr	r0, [fp, #-16]
    4060:	ldr	r0, [r0]
    4064:	bl	0 <flatcc_builder_start_offset_vector>
    4068:	cmp	r0, #0
    406c:	beq	4074 <MyGame_Example_Monster_parse_json_table+0x17b4>
    4070:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4074:	ldr	r0, [fp, #-16]
    4078:	ldr	r1, [fp, #-20]	; 0xffffffec
    407c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4080:	sub	r3, fp, #32
    4084:	bl	8ac8 <flatcc_json_parser_array_start>
    4088:	str	r0, [fp, #-20]	; 0xffffffec
    408c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    4090:	cmp	r0, #0
    4094:	beq	4108 <MyGame_Example_Monster_parse_json_table+0x1848>
    4098:	ldr	r0, [fp, #-16]
    409c:	ldr	r1, [fp, #-20]	; 0xffffffec
    40a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    40a4:	sub	r3, fp, #40	; 0x28
    40a8:	bl	0 <flatcc_json_parser_build_string>
    40ac:	str	r0, [fp, #-20]	; 0xffffffec
    40b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    40b4:	cmp	r0, #0
    40b8:	beq	40dc <MyGame_Example_Monster_parse_json_table+0x181c>
    40bc:	ldr	r0, [fp, #-16]
    40c0:	ldr	r0, [r0]
    40c4:	movw	r1, #1
    40c8:	bl	0 <flatcc_builder_extend_offset_vector>
    40cc:	str	r0, [fp, #-44]	; 0xffffffd4
    40d0:	movw	r1, #0
    40d4:	cmp	r0, r1
    40d8:	bne	40e0 <MyGame_Example_Monster_parse_json_table+0x1820>
    40dc:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    40e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    40e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    40e8:	str	r0, [r1]
    40ec:	ldr	r0, [fp, #-16]
    40f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    40f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    40f8:	sub	r3, fp, #32
    40fc:	bl	8ee0 <flatcc_json_parser_array_end>
    4100:	str	r0, [fp, #-20]	; 0xffffffec
    4104:	b	408c <MyGame_Example_Monster_parse_json_table+0x17cc>
    4108:	ldr	r0, [fp, #-16]
    410c:	ldr	r0, [r0]
    4110:	bl	0 <flatcc_builder_end_offset_vector>
    4114:	str	r0, [fp, #-40]	; 0xffffffd8
    4118:	ldr	r0, [fp, #-40]	; 0xffffffd8
    411c:	cmp	r0, #0
    4120:	beq	4144 <MyGame_Example_Monster_parse_json_table+0x1884>
    4124:	ldr	r0, [fp, #-16]
    4128:	ldr	r0, [r0]
    412c:	movw	r1, #28
    4130:	bl	0 <flatcc_builder_table_add_offset>
    4134:	str	r0, [fp, #-44]	; 0xffffffd4
    4138:	movw	r1, #0
    413c:	cmp	r0, r1
    4140:	bne	4148 <MyGame_Example_Monster_parse_json_table+0x1888>
    4144:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4148:	ldr	r0, [fp, #-40]	; 0xffffffd8
    414c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4150:	str	r0, [r1]
    4154:	b	416c <MyGame_Example_Monster_parse_json_table+0x18ac>
    4158:	ldr	r0, [fp, #-16]
    415c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4160:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4164:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4168:	str	r0, [fp, #-20]	; 0xffffffec
    416c:	b	42dc <MyGame_Example_Monster_parse_json_table+0x1a1c>
    4170:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4174:	and	r0, r0, #-16777216	; 0xff000000
    4178:	teq	r0, #1728053248	; 0x67000000
    417c:	bne	42c4 <MyGame_Example_Monster_parse_json_table+0x1a04>
    4180:	b	4184 <MyGame_Example_Monster_parse_json_table+0x18c4>
    4184:	ldr	r0, [fp, #-16]
    4188:	ldr	r1, [fp, #-20]	; 0xffffffec
    418c:	str	r1, [fp, #-48]	; 0xffffffd0
    4190:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4194:	movw	r3, #1
    4198:	bl	7218 <flatcc_json_parser_match_symbol>
    419c:	str	r0, [fp, #-20]	; 0xffffffec
    41a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    41a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    41a8:	cmp	r0, r1
    41ac:	beq	42ac <MyGame_Example_Monster_parse_json_table+0x19ec>
    41b0:	ldr	r0, [fp, #-16]
    41b4:	ldr	r0, [r0]
    41b8:	bl	0 <flatcc_builder_start_offset_vector>
    41bc:	cmp	r0, #0
    41c0:	beq	41c8 <MyGame_Example_Monster_parse_json_table+0x1908>
    41c4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    41c8:	ldr	r0, [fp, #-16]
    41cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    41d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    41d4:	sub	r3, fp, #32
    41d8:	bl	8ac8 <flatcc_json_parser_array_start>
    41dc:	str	r0, [fp, #-20]	; 0xffffffec
    41e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    41e4:	cmp	r0, #0
    41e8:	beq	425c <MyGame_Example_Monster_parse_json_table+0x199c>
    41ec:	ldr	r0, [fp, #-16]
    41f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    41f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    41f8:	sub	r3, fp, #40	; 0x28
    41fc:	bl	0 <flatcc_json_parser_build_string>
    4200:	str	r0, [fp, #-20]	; 0xffffffec
    4204:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4208:	cmp	r0, #0
    420c:	beq	4230 <MyGame_Example_Monster_parse_json_table+0x1970>
    4210:	ldr	r0, [fp, #-16]
    4214:	ldr	r0, [r0]
    4218:	movw	r1, #1
    421c:	bl	0 <flatcc_builder_extend_offset_vector>
    4220:	str	r0, [fp, #-44]	; 0xffffffd4
    4224:	movw	r1, #0
    4228:	cmp	r0, r1
    422c:	bne	4234 <MyGame_Example_Monster_parse_json_table+0x1974>
    4230:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4234:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4238:	ldr	r1, [fp, #-44]	; 0xffffffd4
    423c:	str	r0, [r1]
    4240:	ldr	r0, [fp, #-16]
    4244:	ldr	r1, [fp, #-20]	; 0xffffffec
    4248:	ldr	r2, [fp, #-24]	; 0xffffffe8
    424c:	sub	r3, fp, #32
    4250:	bl	8ee0 <flatcc_json_parser_array_end>
    4254:	str	r0, [fp, #-20]	; 0xffffffec
    4258:	b	41e0 <MyGame_Example_Monster_parse_json_table+0x1920>
    425c:	ldr	r0, [fp, #-16]
    4260:	ldr	r0, [r0]
    4264:	bl	0 <flatcc_builder_end_offset_vector>
    4268:	str	r0, [fp, #-40]	; 0xffffffd8
    426c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4270:	cmp	r0, #0
    4274:	beq	4298 <MyGame_Example_Monster_parse_json_table+0x19d8>
    4278:	ldr	r0, [fp, #-16]
    427c:	ldr	r0, [r0]
    4280:	movw	r1, #10
    4284:	bl	0 <flatcc_builder_table_add_offset>
    4288:	str	r0, [fp, #-44]	; 0xffffffd4
    428c:	movw	r1, #0
    4290:	cmp	r0, r1
    4294:	bne	429c <MyGame_Example_Monster_parse_json_table+0x19dc>
    4298:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    429c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    42a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    42a4:	str	r0, [r1]
    42a8:	b	42c0 <MyGame_Example_Monster_parse_json_table+0x1a00>
    42ac:	ldr	r0, [fp, #-16]
    42b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    42b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    42bc:	str	r0, [fp, #-20]	; 0xffffffec
    42c0:	b	42d8 <MyGame_Example_Monster_parse_json_table+0x1a18>
    42c4:	ldr	r0, [fp, #-16]
    42c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    42cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    42d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    42d4:	str	r0, [fp, #-20]	; 0xffffffec
    42d8:	b	42dc <MyGame_Example_Monster_parse_json_table+0x1a1c>
    42dc:	b	44b4 <MyGame_Example_Monster_parse_json_table+0x1bf4>
    42e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    42e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    42e8:	movw	r2, #26228	; 0x6674
    42ec:	movt	r2, #31087	; 0x796f
    42f0:	eor	r1, r1, r2
    42f4:	movw	r2, #27749	; 0x6c65
    42f8:	movt	r2, #24930	; 0x6162
    42fc:	eor	r0, r0, r2
    4300:	orr	r0, r0, r1
    4304:	cmp	r0, #0
    4308:	bne	449c <MyGame_Example_Monster_parse_json_table+0x1bdc>
    430c:	b	4310 <MyGame_Example_Monster_parse_json_table+0x1a50>
    4310:	ldr	r0, [fp, #-20]	; 0xffffffec
    4314:	add	r0, r0, #8
    4318:	str	r0, [fp, #-20]	; 0xffffffec
    431c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4320:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4324:	bl	71e0 <flatcc_json_parser_symbol_part>
    4328:	str	r1, [fp, #-52]	; 0xffffffcc
    432c:	str	r0, [fp, #-56]	; 0xffffffc8
    4330:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4334:	and	r0, r0, #-16777216	; 0xff000000
    4338:	teq	r0, #1929379840	; 0x73000000
    433c:	bne	4484 <MyGame_Example_Monster_parse_json_table+0x1bc4>
    4340:	b	4344 <MyGame_Example_Monster_parse_json_table+0x1a84>
    4344:	ldr	r0, [fp, #-16]
    4348:	ldr	r1, [fp, #-20]	; 0xffffffec
    434c:	str	r1, [fp, #-48]	; 0xffffffd0
    4350:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4354:	movw	r3, #1
    4358:	bl	7218 <flatcc_json_parser_match_symbol>
    435c:	str	r0, [fp, #-20]	; 0xffffffec
    4360:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4364:	ldr	r1, [fp, #-20]	; 0xffffffec
    4368:	cmp	r0, r1
    436c:	beq	446c <MyGame_Example_Monster_parse_json_table+0x1bac>
    4370:	ldr	r0, [fp, #-16]
    4374:	ldr	r0, [r0]
    4378:	bl	0 <flatcc_builder_start_offset_vector>
    437c:	cmp	r0, #0
    4380:	beq	4388 <MyGame_Example_Monster_parse_json_table+0x1ac8>
    4384:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4388:	ldr	r0, [fp, #-16]
    438c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4390:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4394:	sub	r3, fp, #32
    4398:	bl	8ac8 <flatcc_json_parser_array_start>
    439c:	str	r0, [fp, #-20]	; 0xffffffec
    43a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    43a4:	cmp	r0, #0
    43a8:	beq	441c <MyGame_Example_Monster_parse_json_table+0x1b5c>
    43ac:	ldr	r0, [fp, #-16]
    43b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    43b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    43b8:	sub	r3, fp, #40	; 0x28
    43bc:	bl	28c0 <MyGame_Example_Monster_parse_json_table>
    43c0:	str	r0, [fp, #-20]	; 0xffffffec
    43c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    43c8:	cmp	r0, #0
    43cc:	beq	43f0 <MyGame_Example_Monster_parse_json_table+0x1b30>
    43d0:	ldr	r0, [fp, #-16]
    43d4:	ldr	r0, [r0]
    43d8:	movw	r1, #1
    43dc:	bl	0 <flatcc_builder_extend_offset_vector>
    43e0:	str	r0, [fp, #-44]	; 0xffffffd4
    43e4:	movw	r1, #0
    43e8:	cmp	r0, r1
    43ec:	bne	43f4 <MyGame_Example_Monster_parse_json_table+0x1b34>
    43f0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    43f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    43f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    43fc:	str	r0, [r1]
    4400:	ldr	r0, [fp, #-16]
    4404:	ldr	r1, [fp, #-20]	; 0xffffffec
    4408:	ldr	r2, [fp, #-24]	; 0xffffffe8
    440c:	sub	r3, fp, #32
    4410:	bl	8ee0 <flatcc_json_parser_array_end>
    4414:	str	r0, [fp, #-20]	; 0xffffffec
    4418:	b	43a0 <MyGame_Example_Monster_parse_json_table+0x1ae0>
    441c:	ldr	r0, [fp, #-16]
    4420:	ldr	r0, [r0]
    4424:	bl	0 <flatcc_builder_end_offset_vector>
    4428:	str	r0, [fp, #-40]	; 0xffffffd8
    442c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4430:	cmp	r0, #0
    4434:	beq	4458 <MyGame_Example_Monster_parse_json_table+0x1b98>
    4438:	ldr	r0, [fp, #-16]
    443c:	ldr	r0, [r0]
    4440:	movw	r1, #11
    4444:	bl	0 <flatcc_builder_table_add_offset>
    4448:	str	r0, [fp, #-44]	; 0xffffffd4
    444c:	movw	r1, #0
    4450:	cmp	r0, r1
    4454:	bne	445c <MyGame_Example_Monster_parse_json_table+0x1b9c>
    4458:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    445c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    4460:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4464:	str	r0, [r1]
    4468:	b	4480 <MyGame_Example_Monster_parse_json_table+0x1bc0>
    446c:	ldr	r0, [fp, #-16]
    4470:	ldr	r1, [fp, #-20]	; 0xffffffec
    4474:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4478:	bl	0 <flatcc_json_parser_unmatched_symbol>
    447c:	str	r0, [fp, #-20]	; 0xffffffec
    4480:	b	4498 <MyGame_Example_Monster_parse_json_table+0x1bd8>
    4484:	ldr	r0, [fp, #-16]
    4488:	ldr	r1, [fp, #-20]	; 0xffffffec
    448c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4490:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4494:	str	r0, [fp, #-20]	; 0xffffffec
    4498:	b	44b0 <MyGame_Example_Monster_parse_json_table+0x1bf0>
    449c:	ldr	r0, [fp, #-16]
    44a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    44a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    44a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    44ac:	str	r0, [fp, #-20]	; 0xffffffec
    44b0:	b	44b4 <MyGame_Example_Monster_parse_json_table+0x1bf4>
    44b4:	b	44b8 <MyGame_Example_Monster_parse_json_table+0x1bf8>
    44b8:	b	4bc8 <MyGame_Example_Monster_parse_json_table+0x2308>
    44bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    44c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    44c4:	movw	r2, #28787	; 0x7073
    44c8:	movt	r2, #25965	; 0x656d
    44cc:	subs	r0, r2, r0
    44d0:	movw	r2, #29556	; 0x7374
    44d4:	movt	r2, #29797	; 0x7465
    44d8:	sbcs	r1, r2, r1
    44dc:	str	r0, [sp, #68]	; 0x44
    44e0:	str	r1, [sp, #64]	; 0x40
    44e4:	bcc	4784 <MyGame_Example_Monster_parse_json_table+0x1ec4>
    44e8:	b	44ec <MyGame_Example_Monster_parse_json_table+0x1c2c>
    44ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    44f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    44f4:	movw	r2, #29556	; 0x7374
    44f8:	movt	r2, #29797	; 0x7465
    44fc:	eor	r1, r1, r2
    4500:	movw	r2, #29541	; 0x7365
    4504:	movt	r2, #25185	; 0x6261
    4508:	eor	r0, r0, r2
    450c:	orr	r0, r0, r1
    4510:	cmp	r0, #0
    4514:	bne	460c <MyGame_Example_Monster_parse_json_table+0x1d4c>
    4518:	b	451c <MyGame_Example_Monster_parse_json_table+0x1c5c>
    451c:	ldr	r0, [fp, #-20]	; 0xffffffec
    4520:	add	r0, r0, #8
    4524:	str	r0, [fp, #-20]	; 0xffffffec
    4528:	ldr	r0, [fp, #-20]	; 0xffffffec
    452c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4530:	bl	71e0 <flatcc_json_parser_symbol_part>
    4534:	str	r1, [fp, #-52]	; 0xffffffcc
    4538:	str	r0, [fp, #-56]	; 0xffffffc8
    453c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4540:	bfc	r0, #0, #16
    4544:	movw	r1, #0
    4548:	movt	r1, #13876	; 0x3634
    454c:	teq	r0, r1
    4550:	bne	45f4 <MyGame_Example_Monster_parse_json_table+0x1d34>
    4554:	b	4558 <MyGame_Example_Monster_parse_json_table+0x1c98>
    4558:	ldr	r0, [fp, #-16]
    455c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4560:	str	r1, [fp, #-48]	; 0xffffffd0
    4564:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4568:	movw	r3, #2
    456c:	bl	7218 <flatcc_json_parser_match_symbol>
    4570:	str	r0, [fp, #-20]	; 0xffffffec
    4574:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4578:	ldr	r1, [fp, #-20]	; 0xffffffec
    457c:	cmp	r0, r1
    4580:	beq	45dc <MyGame_Example_Monster_parse_json_table+0x1d1c>
    4584:	ldr	r0, [fp, #-16]
    4588:	ldr	r1, [fp, #-20]	; 0xffffffec
    458c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4590:	sub	r3, fp, #40	; 0x28
    4594:	bl	aad8 <MyGame_Example_TestBase64_parse_json_table>
    4598:	str	r0, [fp, #-20]	; 0xffffffec
    459c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    45a0:	cmp	r0, #0
    45a4:	beq	45c8 <MyGame_Example_Monster_parse_json_table+0x1d08>
    45a8:	ldr	r0, [fp, #-16]
    45ac:	ldr	r0, [r0]
    45b0:	movw	r1, #35	; 0x23
    45b4:	bl	0 <flatcc_builder_table_add_offset>
    45b8:	str	r0, [fp, #-44]	; 0xffffffd4
    45bc:	movw	r1, #0
    45c0:	cmp	r0, r1
    45c4:	bne	45cc <MyGame_Example_Monster_parse_json_table+0x1d0c>
    45c8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    45cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    45d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    45d4:	str	r0, [r1]
    45d8:	b	45f0 <MyGame_Example_Monster_parse_json_table+0x1d30>
    45dc:	ldr	r0, [fp, #-16]
    45e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    45e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    45e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    45ec:	str	r0, [fp, #-20]	; 0xffffffec
    45f0:	b	4608 <MyGame_Example_Monster_parse_json_table+0x1d48>
    45f4:	ldr	r0, [fp, #-16]
    45f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    45fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4600:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4604:	str	r0, [fp, #-20]	; 0xffffffec
    4608:	b	4780 <MyGame_Example_Monster_parse_json_table+0x1ec0>
    460c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4610:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4614:	movw	r2, #29556	; 0x7374
    4618:	movt	r2, #29797	; 0x7465
    461c:	eor	r1, r1, r2
    4620:	movw	r2, #28524	; 0x6f6c
    4624:	movt	r2, #25199	; 0x626f
    4628:	eor	r0, r0, r2
    462c:	orr	r0, r0, r1
    4630:	cmp	r0, #0
    4634:	bne	4768 <MyGame_Example_Monster_parse_json_table+0x1ea8>
    4638:	b	463c <MyGame_Example_Monster_parse_json_table+0x1d7c>
    463c:	ldr	r0, [fp, #-16]
    4640:	ldr	r1, [fp, #-20]	; 0xffffffec
    4644:	str	r1, [fp, #-48]	; 0xffffffd0
    4648:	ldr	r2, [fp, #-24]	; 0xffffffe8
    464c:	movw	r3, #8
    4650:	bl	7218 <flatcc_json_parser_match_symbol>
    4654:	str	r0, [fp, #-20]	; 0xffffffec
    4658:	ldr	r0, [fp, #-48]	; 0xffffffd0
    465c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4660:	cmp	r0, r1
    4664:	beq	4750 <MyGame_Example_Monster_parse_json_table+0x1e90>
    4668:	movw	r0, #0
    466c:	strb	r0, [fp, #-70]	; 0xffffffba
    4670:	ldr	r0, [fp, #-16]
    4674:	ldr	r1, [fp, #-20]	; 0xffffffec
    4678:	str	r1, [fp, #-48]	; 0xffffffd0
    467c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4680:	sub	r3, fp, #70	; 0x46
    4684:	bl	a47c <flatcc_json_parser_bool>
    4688:	str	r0, [fp, #-20]	; 0xffffffec
    468c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4690:	ldr	r1, [fp, #-20]	; 0xffffffec
    4694:	cmp	r0, r1
    4698:	bne	46f0 <MyGame_Example_Monster_parse_json_table+0x1e30>
    469c:	ldr	r0, [fp, #-16]
    46a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    46a4:	str	r1, [fp, #-48]	; 0xffffffd0
    46a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    46ac:	movw	r3, #0
    46b0:	movt	r3, #0
    46b4:	sub	ip, fp, #70	; 0x46
    46b8:	str	ip, [sp]
    46bc:	bl	a5a0 <flatcc_json_parser_symbolic_bool>
    46c0:	str	r0, [fp, #-20]	; 0xffffffec
    46c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    46c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    46cc:	cmp	r0, r1
    46d0:	beq	46e4 <MyGame_Example_Monster_parse_json_table+0x1e24>
    46d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    46d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    46dc:	cmp	r0, r1
    46e0:	bne	46ec <MyGame_Example_Monster_parse_json_table+0x1e2c>
    46e4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    46e8:	.word	0x3fffffff
    46ec:	b	46f0 <MyGame_Example_Monster_parse_json_table+0x1e30>
    46f0:	ldrb	r0, [fp, #-70]	; 0xffffffba
    46f4:	cmp	r0, #1
    46f8:	bne	4710 <MyGame_Example_Monster_parse_json_table+0x1e50>
    46fc:	ldr	r0, [fp, #-16]
    4700:	ldr	r0, [r0, #8]
    4704:	and	r0, r0, #2
    4708:	cmp	r0, #0
    470c:	beq	474c <MyGame_Example_Monster_parse_json_table+0x1e8c>
    4710:	ldr	r0, [fp, #-16]
    4714:	ldr	r0, [r0]
    4718:	movw	r1, #15
    471c:	movw	r2, #1
    4720:	movw	r3, #1
    4724:	uxth	r3, r3
    4728:	bl	0 <flatcc_builder_table_add>
    472c:	str	r0, [fp, #-36]	; 0xffffffdc
    4730:	movw	r1, #0
    4734:	cmp	r0, r1
    4738:	bne	4740 <MyGame_Example_Monster_parse_json_table+0x1e80>
    473c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4740:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4744:	ldrb	r1, [fp, #-70]	; 0xffffffba
    4748:	bl	a7cc <flatbuffers_bool_write_to_pe>
    474c:	b	4764 <MyGame_Example_Monster_parse_json_table+0x1ea4>
    4750:	ldr	r0, [fp, #-16]
    4754:	ldr	r1, [fp, #-20]	; 0xffffffec
    4758:	ldr	r2, [fp, #-24]	; 0xffffffe8
    475c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4760:	str	r0, [fp, #-20]	; 0xffffffec
    4764:	b	477c <MyGame_Example_Monster_parse_json_table+0x1ebc>
    4768:	ldr	r0, [fp, #-16]
    476c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4770:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4774:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4778:	str	r0, [fp, #-20]	; 0xffffffec
    477c:	b	4780 <MyGame_Example_Monster_parse_json_table+0x1ec0>
    4780:	b	4bc4 <MyGame_Example_Monster_parse_json_table+0x2304>
    4784:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4788:	ldr	r1, [fp, #-52]	; 0xffffffcc
    478c:	mvn	r2, #-1711276032	; 0x9a000000
    4790:	subs	r0, r2, r0
    4794:	movw	r2, #29556	; 0x7374
    4798:	movt	r2, #29797	; 0x7465
    479c:	sbcs	r1, r2, r1
    47a0:	str	r0, [sp, #60]	; 0x3c
    47a4:	str	r1, [sp, #56]	; 0x38
    47a8:	bcc	48e0 <MyGame_Example_Monster_parse_json_table+0x2020>
    47ac:	b	47b0 <MyGame_Example_Monster_parse_json_table+0x1ef0>
    47b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    47b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    47b8:	movw	r2, #29556	; 0x7374
    47bc:	movt	r2, #29797	; 0x7465
    47c0:	eor	r1, r1, r2
    47c4:	movw	r2, #28788	; 0x7074
    47c8:	movt	r2, #25965	; 0x656d
    47cc:	eor	r0, r0, r2
    47d0:	orr	r0, r0, r1
    47d4:	cmp	r0, #0
    47d8:	bne	48c8 <MyGame_Example_Monster_parse_json_table+0x2008>
    47dc:	b	47e0 <MyGame_Example_Monster_parse_json_table+0x1f20>
    47e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    47e4:	add	r0, r0, #8
    47e8:	str	r0, [fp, #-20]	; 0xffffffec
    47ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    47f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    47f4:	bl	71e0 <flatcc_json_parser_symbol_part>
    47f8:	str	r1, [fp, #-52]	; 0xffffffcc
    47fc:	str	r0, [fp, #-56]	; 0xffffffc8
    4800:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4804:	and	r0, r0, #-16777216	; 0xff000000
    4808:	teq	r0, #2030043136	; 0x79000000
    480c:	bne	48b0 <MyGame_Example_Monster_parse_json_table+0x1ff0>
    4810:	b	4814 <MyGame_Example_Monster_parse_json_table+0x1f54>
    4814:	ldr	r0, [fp, #-16]
    4818:	ldr	r1, [fp, #-20]	; 0xffffffec
    481c:	str	r1, [fp, #-48]	; 0xffffffd0
    4820:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4824:	movw	r3, #1
    4828:	bl	7218 <flatcc_json_parser_match_symbol>
    482c:	str	r0, [fp, #-20]	; 0xffffffec
    4830:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4834:	ldr	r1, [fp, #-20]	; 0xffffffec
    4838:	cmp	r0, r1
    483c:	beq	4898 <MyGame_Example_Monster_parse_json_table+0x1fd8>
    4840:	ldr	r0, [fp, #-16]
    4844:	ldr	r1, [fp, #-20]	; 0xffffffec
    4848:	ldr	r2, [fp, #-24]	; 0xffffffe8
    484c:	sub	r3, fp, #40	; 0x28
    4850:	bl	aeb8 <MyGame_Example_Stat_parse_json_table>
    4854:	str	r0, [fp, #-20]	; 0xffffffec
    4858:	ldr	r0, [fp, #-40]	; 0xffffffd8
    485c:	cmp	r0, #0
    4860:	beq	4884 <MyGame_Example_Monster_parse_json_table+0x1fc4>
    4864:	ldr	r0, [fp, #-16]
    4868:	ldr	r0, [r0]
    486c:	movw	r1, #14
    4870:	bl	0 <flatcc_builder_table_add_offset>
    4874:	str	r0, [fp, #-44]	; 0xffffffd4
    4878:	movw	r1, #0
    487c:	cmp	r0, r1
    4880:	bne	4888 <MyGame_Example_Monster_parse_json_table+0x1fc8>
    4884:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4888:	ldr	r0, [fp, #-40]	; 0xffffffd8
    488c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4890:	str	r0, [r1]
    4894:	b	48ac <MyGame_Example_Monster_parse_json_table+0x1fec>
    4898:	ldr	r0, [fp, #-16]
    489c:	ldr	r1, [fp, #-20]	; 0xffffffec
    48a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    48a8:	str	r0, [fp, #-20]	; 0xffffffec
    48ac:	b	48c4 <MyGame_Example_Monster_parse_json_table+0x2004>
    48b0:	ldr	r0, [fp, #-16]
    48b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    48b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    48c0:	str	r0, [fp, #-20]	; 0xffffffec
    48c4:	b	48dc <MyGame_Example_Monster_parse_json_table+0x201c>
    48c8:	ldr	r0, [fp, #-16]
    48cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    48d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    48d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    48d8:	str	r0, [fp, #-20]	; 0xffffffec
    48dc:	b	4bc0 <MyGame_Example_Monster_parse_json_table+0x2300>
    48e0:	ldrh	r0, [fp, #-54]	; 0xffffffca
    48e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    48e8:	movw	r2, #29797	; 0x7465
    48ec:	eor	r2, r2, r1, lsr #16
    48f0:	orr	r0, r0, r1, lsl #16
    48f4:	movw	r1, #26162	; 0x6632
    48f8:	movt	r1, #29556	; 0x7374
    48fc:	eor	r0, r0, r1
    4900:	orr	r0, r0, r2
    4904:	cmp	r0, #0
    4908:	bne	4a44 <MyGame_Example_Monster_parse_json_table+0x2184>
    490c:	b	4910 <MyGame_Example_Monster_parse_json_table+0x2050>
    4910:	ldr	r0, [fp, #-16]
    4914:	ldr	r1, [fp, #-20]	; 0xffffffec
    4918:	str	r1, [fp, #-48]	; 0xffffffd0
    491c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4920:	movw	r3, #6
    4924:	bl	7218 <flatcc_json_parser_match_symbol>
    4928:	str	r0, [fp, #-20]	; 0xffffffec
    492c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4930:	ldr	r1, [fp, #-20]	; 0xffffffec
    4934:	cmp	r0, r1
    4938:	beq	4a2c <MyGame_Example_Monster_parse_json_table+0x216c>
    493c:	vldr	s0, [pc, #1008]	; 4d34 <MyGame_Example_Monster_parse_json_table+0x2474>
    4940:	vstr	s0, [fp, #-76]	; 0xffffffb4
    4944:	ldr	r0, [fp, #-16]
    4948:	ldr	r1, [fp, #-20]	; 0xffffffec
    494c:	str	r1, [fp, #-48]	; 0xffffffd0
    4950:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4954:	sub	r3, fp, #76	; 0x4c
    4958:	bl	0 <flatcc_json_parser_float>
    495c:	str	r0, [fp, #-20]	; 0xffffffec
    4960:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4964:	ldr	r1, [fp, #-20]	; 0xffffffec
    4968:	cmp	r0, r1
    496c:	bne	49c0 <MyGame_Example_Monster_parse_json_table+0x2100>
    4970:	ldr	r0, [fp, #-16]
    4974:	ldr	r1, [fp, #-20]	; 0xffffffec
    4978:	str	r1, [fp, #-48]	; 0xffffffd0
    497c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4980:	movw	r3, #0
    4984:	movt	r3, #0
    4988:	sub	ip, fp, #76	; 0x4c
    498c:	str	ip, [sp]
    4990:	bl	b37c <flatcc_json_parser_symbolic_float>
    4994:	str	r0, [fp, #-20]	; 0xffffffec
    4998:	ldr	r0, [fp, #-20]	; 0xffffffec
    499c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    49a0:	cmp	r0, r1
    49a4:	beq	49b8 <MyGame_Example_Monster_parse_json_table+0x20f8>
    49a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    49ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
    49b0:	cmp	r0, r1
    49b4:	bne	49bc <MyGame_Example_Monster_parse_json_table+0x20fc>
    49b8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    49bc:	b	49c0 <MyGame_Example_Monster_parse_json_table+0x2100>
    49c0:	vldr	s0, [fp, #-76]	; 0xffffffb4
    49c4:	vcvt.f64.f32	d16, s0
    49c8:	vmov.f64	d17, #8	; 0x40400000  3.0
    49cc:	vcmp.f64	d16, d17
    49d0:	vmrs	APSR_nzcv, fpscr
    49d4:	bne	49ec <MyGame_Example_Monster_parse_json_table+0x212c>
    49d8:	ldr	r0, [fp, #-16]
    49dc:	ldr	r0, [r0, #8]
    49e0:	and	r0, r0, #2
    49e4:	cmp	r0, #0
    49e8:	beq	4a28 <MyGame_Example_Monster_parse_json_table+0x2168>
    49ec:	ldr	r0, [fp, #-16]
    49f0:	ldr	r0, [r0]
    49f4:	movw	r1, #26
    49f8:	movw	r2, #4
    49fc:	movw	r3, #4
    4a00:	uxth	r3, r3
    4a04:	bl	0 <flatcc_builder_table_add>
    4a08:	str	r0, [fp, #-36]	; 0xffffffdc
    4a0c:	movw	r1, #0
    4a10:	cmp	r0, r1
    4a14:	bne	4a1c <MyGame_Example_Monster_parse_json_table+0x215c>
    4a18:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4a1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4a20:	vldr	s0, [fp, #-76]	; 0xffffffb4
    4a24:	bl	b5ac <flatbuffers_float_write_to_pe>
    4a28:	b	4a40 <MyGame_Example_Monster_parse_json_table+0x2180>
    4a2c:	ldr	r0, [fp, #-16]
    4a30:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4a38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4a3c:	str	r0, [fp, #-20]	; 0xffffffec
    4a40:	b	4bbc <MyGame_Example_Monster_parse_json_table+0x22fc>
    4a44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4a48:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4a4c:	and	r0, r0, #-16777216	; 0xff000000
    4a50:	movw	r2, #29556	; 0x7374
    4a54:	movt	r2, #29797	; 0x7465
    4a58:	eor	r1, r1, r2
    4a5c:	eor	r0, r0, #1711276032	; 0x66000000
    4a60:	orr	r0, r0, r1
    4a64:	cmp	r0, #0
    4a68:	bne	4ba4 <MyGame_Example_Monster_parse_json_table+0x22e4>
    4a6c:	b	4a70 <MyGame_Example_Monster_parse_json_table+0x21b0>
    4a70:	ldr	r0, [fp, #-16]
    4a74:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a78:	str	r1, [fp, #-48]	; 0xffffffd0
    4a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4a80:	movw	r3, #5
    4a84:	bl	7218 <flatcc_json_parser_match_symbol>
    4a88:	str	r0, [fp, #-20]	; 0xffffffec
    4a8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4a90:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a94:	cmp	r0, r1
    4a98:	beq	4b8c <MyGame_Example_Monster_parse_json_table+0x22cc>
    4a9c:	vldr	s0, [pc, #656]	; 4d34 <MyGame_Example_Monster_parse_json_table+0x2474>
    4aa0:	vstr	s0, [fp, #-80]	; 0xffffffb0
    4aa4:	ldr	r0, [fp, #-16]
    4aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4aac:	str	r1, [fp, #-48]	; 0xffffffd0
    4ab0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4ab4:	sub	r3, fp, #80	; 0x50
    4ab8:	bl	0 <flatcc_json_parser_float>
    4abc:	str	r0, [fp, #-20]	; 0xffffffec
    4ac0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4ac4:	ldr	r1, [fp, #-20]	; 0xffffffec
    4ac8:	cmp	r0, r1
    4acc:	bne	4b20 <MyGame_Example_Monster_parse_json_table+0x2260>
    4ad0:	ldr	r0, [fp, #-16]
    4ad4:	ldr	r1, [fp, #-20]	; 0xffffffec
    4ad8:	str	r1, [fp, #-48]	; 0xffffffd0
    4adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4ae0:	movw	r3, #0
    4ae4:	movt	r3, #0
    4ae8:	sub	ip, fp, #80	; 0x50
    4aec:	str	ip, [sp]
    4af0:	bl	b37c <flatcc_json_parser_symbolic_float>
    4af4:	str	r0, [fp, #-20]	; 0xffffffec
    4af8:	ldr	r0, [fp, #-20]	; 0xffffffec
    4afc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4b00:	cmp	r0, r1
    4b04:	beq	4b18 <MyGame_Example_Monster_parse_json_table+0x2258>
    4b08:	ldr	r0, [fp, #-20]	; 0xffffffec
    4b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4b10:	cmp	r0, r1
    4b14:	bne	4b1c <MyGame_Example_Monster_parse_json_table+0x225c>
    4b18:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4b1c:	b	4b20 <MyGame_Example_Monster_parse_json_table+0x2260>
    4b20:	vldr	d16, [pc, #944]	; 4ed8 <MyGame_Example_Monster_parse_json_table+0x2618>
    4b24:	vldr	s0, [fp, #-80]	; 0xffffffb0
    4b28:	vcvt.f64.f32	d17, s0
    4b2c:	vcmp.f64	d17, d16
    4b30:	vmrs	APSR_nzcv, fpscr
    4b34:	bne	4b4c <MyGame_Example_Monster_parse_json_table+0x228c>
    4b38:	ldr	r0, [fp, #-16]
    4b3c:	ldr	r0, [r0, #8]
    4b40:	and	r0, r0, #2
    4b44:	cmp	r0, #0
    4b48:	beq	4b88 <MyGame_Example_Monster_parse_json_table+0x22c8>
    4b4c:	ldr	r0, [fp, #-16]
    4b50:	ldr	r0, [r0]
    4b54:	movw	r1, #25
    4b58:	movw	r2, #4
    4b5c:	movw	r3, #4
    4b60:	uxth	r3, r3
    4b64:	bl	0 <flatcc_builder_table_add>
    4b68:	str	r0, [fp, #-36]	; 0xffffffdc
    4b6c:	movw	r1, #0
    4b70:	cmp	r0, r1
    4b74:	bne	4b7c <MyGame_Example_Monster_parse_json_table+0x22bc>
    4b78:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4b7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4b80:	vldr	s0, [fp, #-80]	; 0xffffffb0
    4b84:	bl	b5ac <flatbuffers_float_write_to_pe>
    4b88:	b	4ba0 <MyGame_Example_Monster_parse_json_table+0x22e0>
    4b8c:	ldr	r0, [fp, #-16]
    4b90:	ldr	r1, [fp, #-20]	; 0xffffffec
    4b94:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4b98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4b9c:	str	r0, [fp, #-20]	; 0xffffffec
    4ba0:	b	4bb8 <MyGame_Example_Monster_parse_json_table+0x22f8>
    4ba4:	ldr	r0, [fp, #-16]
    4ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4bb0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4bb4:	str	r0, [fp, #-20]	; 0xffffffec
    4bb8:	b	4bbc <MyGame_Example_Monster_parse_json_table+0x22fc>
    4bbc:	b	4bc0 <MyGame_Example_Monster_parse_json_table+0x2300>
    4bc0:	b	4bc4 <MyGame_Example_Monster_parse_json_table+0x2304>
    4bc4:	b	4bc8 <MyGame_Example_Monster_parse_json_table+0x2308>
    4bc8:	b	61d0 <MyGame_Example_Monster_parse_json_table+0x3910>
    4bcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4bd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4bd4:	movw	r2, #29543	; 0x7367
    4bd8:	movt	r2, #26721	; 0x6861
    4bdc:	subs	r0, r2, r0
    4be0:	movw	r2, #29556	; 0x7374
    4be4:	movt	r2, #29797	; 0x7465
    4be8:	sbcs	r1, r2, r1
    4bec:	str	r0, [sp, #52]	; 0x34
    4bf0:	str	r1, [sp, #48]	; 0x30
    4bf4:	bcc	4d78 <MyGame_Example_Monster_parse_json_table+0x24b8>
    4bf8:	b	4bfc <MyGame_Example_Monster_parse_json_table+0x233c>
    4bfc:	ldrh	r0, [fp, #-54]	; 0xffffffca
    4c00:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4c04:	movw	r2, #29797	; 0x7465
    4c08:	eor	r2, r2, r1, lsr #16
    4c0c:	orr	r0, r0, r1, lsl #16
    4c10:	movw	r1, #26163	; 0x6633
    4c14:	movt	r1, #29556	; 0x7374
    4c18:	eor	r0, r0, r1
    4c1c:	orr	r0, r0, r2
    4c20:	cmp	r0, #0
    4c24:	bne	4d60 <MyGame_Example_Monster_parse_json_table+0x24a0>
    4c28:	b	4c2c <MyGame_Example_Monster_parse_json_table+0x236c>
    4c2c:	ldr	r0, [fp, #-16]
    4c30:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c34:	str	r1, [fp, #-48]	; 0xffffffd0
    4c38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4c3c:	movw	r3, #6
    4c40:	bl	7218 <flatcc_json_parser_match_symbol>
    4c44:	str	r0, [fp, #-20]	; 0xffffffec
    4c48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c50:	cmp	r0, r1
    4c54:	beq	4d48 <MyGame_Example_Monster_parse_json_table+0x2488>
    4c58:	vldr	s0, [pc, #212]	; 4d34 <MyGame_Example_Monster_parse_json_table+0x2474>
    4c5c:	vstr	s0, [fp, #-84]	; 0xffffffac
    4c60:	ldr	r0, [fp, #-16]
    4c64:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c68:	str	r1, [fp, #-48]	; 0xffffffd0
    4c6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4c70:	sub	r3, fp, #84	; 0x54
    4c74:	bl	0 <flatcc_json_parser_float>
    4c78:	str	r0, [fp, #-20]	; 0xffffffec
    4c7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4c80:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c84:	cmp	r0, r1
    4c88:	bne	4cdc <MyGame_Example_Monster_parse_json_table+0x241c>
    4c8c:	ldr	r0, [fp, #-16]
    4c90:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c94:	str	r1, [fp, #-48]	; 0xffffffd0
    4c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4c9c:	movw	r3, #0
    4ca0:	movt	r3, #0
    4ca4:	sub	ip, fp, #84	; 0x54
    4ca8:	str	ip, [sp]
    4cac:	bl	b37c <flatcc_json_parser_symbolic_float>
    4cb0:	str	r0, [fp, #-20]	; 0xffffffec
    4cb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    4cb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4cbc:	cmp	r0, r1
    4cc0:	beq	4cd4 <MyGame_Example_Monster_parse_json_table+0x2414>
    4cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
    4cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4ccc:	cmp	r0, r1
    4cd0:	bne	4cd8 <MyGame_Example_Monster_parse_json_table+0x2418>
    4cd4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4cd8:	b	4cdc <MyGame_Example_Monster_parse_json_table+0x241c>
    4cdc:	vldr	s0, [fp, #-84]	; 0xffffffac
    4ce0:	vcvt.f64.f32	d16, s0
    4ce4:	vcmp.f64	d16, #0.0
    4ce8:	vmrs	APSR_nzcv, fpscr
    4cec:	bne	4d04 <MyGame_Example_Monster_parse_json_table+0x2444>
    4cf0:	ldr	r0, [fp, #-16]
    4cf4:	ldr	r0, [r0, #8]
    4cf8:	and	r0, r0, #2
    4cfc:	cmp	r0, #0
    4d00:	beq	4d44 <MyGame_Example_Monster_parse_json_table+0x2484>
    4d04:	ldr	r0, [fp, #-16]
    4d08:	ldr	r0, [r0]
    4d0c:	movw	r1, #27
    4d10:	movw	r2, #4
    4d14:	movw	r3, #4
    4d18:	uxth	r3, r3
    4d1c:	bl	0 <flatcc_builder_table_add>
    4d20:	str	r0, [fp, #-36]	; 0xffffffdc
    4d24:	movw	r1, #0
    4d28:	cmp	r0, r1
    4d2c:	bne	4d38 <MyGame_Example_Monster_parse_json_table+0x2478>
    4d30:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4d34:	.word	0x00000000
    4d38:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4d3c:	vldr	s0, [fp, #-84]	; 0xffffffac
    4d40:	bl	b5ac <flatbuffers_float_write_to_pe>
    4d44:	b	4d5c <MyGame_Example_Monster_parse_json_table+0x249c>
    4d48:	ldr	r0, [fp, #-16]
    4d4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4d50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4d54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4d58:	str	r0, [fp, #-20]	; 0xffffffec
    4d5c:	b	4d74 <MyGame_Example_Monster_parse_json_table+0x24b4>
    4d60:	ldr	r0, [fp, #-16]
    4d64:	ldr	r1, [fp, #-20]	; 0xffffffec
    4d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4d6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4d70:	str	r0, [fp, #-20]	; 0xffffffec
    4d74:	b	61cc <MyGame_Example_Monster_parse_json_table+0x390c>
    4d78:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4d7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4d80:	movw	r2, #29556	; 0x7374
    4d84:	movt	r2, #29797	; 0x7465
    4d88:	eor	r1, r1, r2
    4d8c:	movw	r2, #29544	; 0x7368
    4d90:	movt	r2, #26721	; 0x6861
    4d94:	eor	r0, r0, r2
    4d98:	orr	r0, r0, r1
    4d9c:	cmp	r0, #0
    4da0:	bne	59b8 <MyGame_Example_Monster_parse_json_table+0x30f8>
    4da4:	b	4da8 <MyGame_Example_Monster_parse_json_table+0x24e8>
    4da8:	ldr	r0, [fp, #-20]	; 0xffffffec
    4dac:	add	r0, r0, #8
    4db0:	str	r0, [fp, #-20]	; 0xffffffec
    4db4:	ldr	r0, [fp, #-20]	; 0xffffffec
    4db8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4dbc:	bl	71e0 <flatcc_json_parser_symbol_part>
    4dc0:	str	r1, [fp, #-52]	; 0xffffffcc
    4dc4:	str	r0, [fp, #-56]	; 0xffffffc8
    4dc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4dcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4dd0:	movw	lr, #30256	; 0x7630
    4dd4:	movt	lr, #26222	; 0x666e
    4dd8:	subs	r0, lr, r0
    4ddc:	movw	lr, #13407	; 0x345f
    4de0:	movt	lr, #29494	; 0x7336
    4de4:	sbcs	r1, lr, r1
    4de8:	str	r0, [sp, #44]	; 0x2c
    4dec:	str	r1, [sp, #40]	; 0x28
    4df0:	bcc	50d4 <MyGame_Example_Monster_parse_json_table+0x2814>
    4df4:	b	4df8 <MyGame_Example_Monster_parse_json_table+0x2538>
    4df8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    4dfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    4e00:	movw	r2, #12895	; 0x325f
    4e04:	movt	r2, #29491	; 0x7333
    4e08:	eor	r1, r1, r2
    4e0c:	movw	r2, #30257	; 0x7631
    4e10:	movt	r2, #26222	; 0x666e
    4e14:	eor	r0, r0, r2
    4e18:	orr	r0, r0, r1
    4e1c:	cmp	r0, #0
    4e20:	bne	50bc <MyGame_Example_Monster_parse_json_table+0x27fc>
    4e24:	b	4e2c <MyGame_Example_Monster_parse_json_table+0x256c>
    4e28:	.word	0x1fffffff
    4e2c:	ldr	r0, [fp, #-16]
    4e30:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e34:	str	r1, [fp, #-48]	; 0xffffffd0
    4e38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4e3c:	movw	r3, #8
    4e40:	bl	7218 <flatcc_json_parser_match_symbol>
    4e44:	str	r0, [fp, #-20]	; 0xffffffec
    4e48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e50:	cmp	r0, r1
    4e54:	beq	4f44 <MyGame_Example_Monster_parse_json_table+0x2684>
    4e58:	movw	r0, #0
    4e5c:	str	r0, [fp, #-88]	; 0xffffffa8
    4e60:	ldr	r0, [fp, #-16]
    4e64:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e68:	str	r1, [fp, #-48]	; 0xffffffd0
    4e6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4e70:	sub	r3, fp, #88	; 0x58
    4e74:	bl	b5d8 <flatcc_json_parser_int32>
    4e78:	str	r0, [fp, #-20]	; 0xffffffec
    4e7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4e80:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e84:	cmp	r0, r1
    4e88:	bne	4ee4 <MyGame_Example_Monster_parse_json_table+0x2624>
    4e8c:	ldr	r0, [fp, #-16]
    4e90:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e94:	str	r1, [fp, #-48]	; 0xffffffd0
    4e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4e9c:	movw	r3, #0
    4ea0:	movt	r3, #0
    4ea4:	sub	ip, fp, #88	; 0x58
    4ea8:	str	ip, [sp]
    4eac:	bl	b6b0 <flatcc_json_parser_symbolic_int32>
    4eb0:	str	r0, [fp, #-20]	; 0xffffffec
    4eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
    4eb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4ebc:	cmp	r0, r1
    4ec0:	beq	4ed4 <MyGame_Example_Monster_parse_json_table+0x2614>
    4ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
    4ec8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4ecc:	cmp	r0, r1
    4ed0:	bne	4ee0 <MyGame_Example_Monster_parse_json_table+0x2620>
    4ed4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4ed8:	.word	0x00000000
    4edc:	.word	0x41132cbc
    4ee0:	b	4ee4 <MyGame_Example_Monster_parse_json_table+0x2624>
    4ee4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    4ee8:	cmp	r0, #0
    4eec:	bne	4f04 <MyGame_Example_Monster_parse_json_table+0x2644>
    4ef0:	ldr	r0, [fp, #-16]
    4ef4:	ldr	r0, [r0, #8]
    4ef8:	and	r0, r0, #2
    4efc:	cmp	r0, #0
    4f00:	beq	4f40 <MyGame_Example_Monster_parse_json_table+0x2680>
    4f04:	ldr	r0, [fp, #-16]
    4f08:	ldr	r0, [r0]
    4f0c:	movw	r1, #16
    4f10:	movw	r2, #4
    4f14:	movw	r3, #4
    4f18:	uxth	r3, r3
    4f1c:	bl	0 <flatcc_builder_table_add>
    4f20:	str	r0, [fp, #-36]	; 0xffffffdc
    4f24:	movw	r1, #0
    4f28:	cmp	r0, r1
    4f2c:	bne	4f34 <MyGame_Example_Monster_parse_json_table+0x2674>
    4f30:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    4f34:	ldr	r0, [fp, #-36]	; 0xffffffdc
    4f38:	ldr	r1, [fp, #-88]	; 0xffffffa8
    4f3c:	bl	b8d8 <flatbuffers_int32_write_to_pe>
    4f40:	b	50b8 <MyGame_Example_Monster_parse_json_table+0x27f8>
    4f44:	ldr	r0, [fp, #-20]	; 0xffffffec
    4f48:	add	r0, r0, #8
    4f4c:	str	r0, [fp, #-20]	; 0xffffffec
    4f50:	ldr	r0, [fp, #-20]	; 0xffffffec
    4f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
    4f58:	bl	71e0 <flatcc_json_parser_symbol_part>
    4f5c:	str	r1, [fp, #-52]	; 0xffffffcc
    4f60:	str	r0, [fp, #-56]	; 0xffffffc8
    4f64:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4f68:	and	r0, r0, #-16777216	; 0xff000000
    4f6c:	teq	r0, #1627389952	; 0x61000000
    4f70:	bne	50a0 <MyGame_Example_Monster_parse_json_table+0x27e0>
    4f74:	b	4f78 <MyGame_Example_Monster_parse_json_table+0x26b8>
    4f78:	ldr	r0, [fp, #-16]
    4f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4f80:	str	r1, [fp, #-48]	; 0xffffffd0
    4f84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4f88:	movw	r3, #1
    4f8c:	bl	7218 <flatcc_json_parser_match_symbol>
    4f90:	str	r0, [fp, #-20]	; 0xffffffec
    4f94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4f98:	ldr	r1, [fp, #-20]	; 0xffffffec
    4f9c:	cmp	r0, r1
    4fa0:	beq	5088 <MyGame_Example_Monster_parse_json_table+0x27c8>
    4fa4:	movw	r0, #0
    4fa8:	str	r0, [fp, #-92]	; 0xffffffa4
    4fac:	ldr	r0, [fp, #-16]
    4fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
    4fb4:	str	r1, [fp, #-48]	; 0xffffffd0
    4fb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4fbc:	sub	r3, fp, #92	; 0x5c
    4fc0:	bl	b5d8 <flatcc_json_parser_int32>
    4fc4:	str	r0, [fp, #-20]	; 0xffffffec
    4fc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    4fcc:	ldr	r1, [fp, #-20]	; 0xffffffec
    4fd0:	cmp	r0, r1
    4fd4:	bne	5028 <MyGame_Example_Monster_parse_json_table+0x2768>
    4fd8:	ldr	r0, [fp, #-16]
    4fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
    4fe0:	str	r1, [fp, #-48]	; 0xffffffd0
    4fe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4fe8:	movw	r3, #0
    4fec:	movt	r3, #0
    4ff0:	sub	ip, fp, #92	; 0x5c
    4ff4:	str	ip, [sp]
    4ff8:	bl	b6b0 <flatcc_json_parser_symbolic_int32>
    4ffc:	str	r0, [fp, #-20]	; 0xffffffec
    5000:	ldr	r0, [fp, #-20]	; 0xffffffec
    5004:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5008:	cmp	r0, r1
    500c:	beq	5020 <MyGame_Example_Monster_parse_json_table+0x2760>
    5010:	ldr	r0, [fp, #-20]	; 0xffffffec
    5014:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5018:	cmp	r0, r1
    501c:	bne	5024 <MyGame_Example_Monster_parse_json_table+0x2764>
    5020:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5024:	b	5028 <MyGame_Example_Monster_parse_json_table+0x2768>
    5028:	ldr	r0, [fp, #-92]	; 0xffffffa4
    502c:	cmp	r0, #0
    5030:	bne	5048 <MyGame_Example_Monster_parse_json_table+0x2788>
    5034:	ldr	r0, [fp, #-16]
    5038:	ldr	r0, [r0, #8]
    503c:	and	r0, r0, #2
    5040:	cmp	r0, #0
    5044:	beq	5084 <MyGame_Example_Monster_parse_json_table+0x27c4>
    5048:	ldr	r0, [fp, #-16]
    504c:	ldr	r0, [r0]
    5050:	movw	r1, #20
    5054:	movw	r2, #4
    5058:	movw	r3, #4
    505c:	uxth	r3, r3
    5060:	bl	0 <flatcc_builder_table_add>
    5064:	str	r0, [fp, #-36]	; 0xffffffdc
    5068:	movw	r1, #0
    506c:	cmp	r0, r1
    5070:	bne	5078 <MyGame_Example_Monster_parse_json_table+0x27b8>
    5074:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5078:	ldr	r0, [fp, #-36]	; 0xffffffdc
    507c:	ldr	r1, [fp, #-92]	; 0xffffffa4
    5080:	bl	b8d8 <flatbuffers_int32_write_to_pe>
    5084:	b	509c <MyGame_Example_Monster_parse_json_table+0x27dc>
    5088:	ldr	r0, [fp, #-16]
    508c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5090:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5094:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5098:	str	r0, [fp, #-20]	; 0xffffffec
    509c:	b	50b4 <MyGame_Example_Monster_parse_json_table+0x27f4>
    50a0:	ldr	r0, [fp, #-16]
    50a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    50a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    50ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    50b0:	str	r0, [fp, #-20]	; 0xffffffec
    50b4:	b	50b8 <MyGame_Example_Monster_parse_json_table+0x27f8>
    50b8:	b	50d0 <MyGame_Example_Monster_parse_json_table+0x2810>
    50bc:	ldr	r0, [fp, #-16]
    50c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    50c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    50c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    50cc:	str	r0, [fp, #-20]	; 0xffffffec
    50d0:	b	59b4 <MyGame_Example_Monster_parse_json_table+0x30f4>
    50d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    50d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    50dc:	movw	r2, #30256	; 0x7630
    50e0:	movt	r2, #26222	; 0x666e
    50e4:	subs	r0, r2, r0
    50e8:	movw	r2, #12895	; 0x325f
    50ec:	movt	r2, #30003	; 0x7533
    50f0:	sbcs	r1, r2, r1
    50f4:	str	r0, [sp, #36]	; 0x24
    50f8:	str	r1, [sp, #32]
    50fc:	bcc	53fc <MyGame_Example_Monster_parse_json_table+0x2b3c>
    5100:	b	5104 <MyGame_Example_Monster_parse_json_table+0x2844>
    5104:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5108:	ldr	r1, [fp, #-52]	; 0xffffffcc
    510c:	movw	r2, #13407	; 0x345f
    5110:	movt	r2, #29494	; 0x7336
    5114:	eor	r1, r1, r2
    5118:	movw	r2, #30257	; 0x7631
    511c:	movt	r2, #26222	; 0x666e
    5120:	eor	r0, r0, r2
    5124:	orr	r0, r0, r1
    5128:	cmp	r0, #0
    512c:	bne	53e4 <MyGame_Example_Monster_parse_json_table+0x2b24>
    5130:	b	5134 <MyGame_Example_Monster_parse_json_table+0x2874>
    5134:	ldr	r0, [fp, #-16]
    5138:	ldr	r1, [fp, #-20]	; 0xffffffec
    513c:	str	r1, [fp, #-48]	; 0xffffffd0
    5140:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5144:	movw	r3, #8
    5148:	bl	7218 <flatcc_json_parser_match_symbol>
    514c:	str	r0, [fp, #-20]	; 0xffffffec
    5150:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5154:	ldr	r1, [fp, #-20]	; 0xffffffec
    5158:	cmp	r0, r1
    515c:	beq	5258 <MyGame_Example_Monster_parse_json_table+0x2998>
    5160:	mov	r0, #0
    5164:	str	r0, [fp, #-100]	; 0xffffff9c
    5168:	str	r0, [fp, #-104]	; 0xffffff98
    516c:	ldr	r0, [fp, #-16]
    5170:	ldr	r1, [fp, #-20]	; 0xffffffec
    5174:	str	r1, [fp, #-48]	; 0xffffffd0
    5178:	ldr	r2, [fp, #-24]	; 0xffffffe8
    517c:	sub	r3, fp, #104	; 0x68
    5180:	bl	b904 <flatcc_json_parser_int64>
    5184:	str	r0, [fp, #-20]	; 0xffffffec
    5188:	ldr	r0, [fp, #-48]	; 0xffffffd0
    518c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5190:	cmp	r0, r1
    5194:	bne	51e8 <MyGame_Example_Monster_parse_json_table+0x2928>
    5198:	ldr	r0, [fp, #-16]
    519c:	ldr	r1, [fp, #-20]	; 0xffffffec
    51a0:	str	r1, [fp, #-48]	; 0xffffffd0
    51a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    51a8:	movw	r3, #0
    51ac:	movt	r3, #0
    51b0:	sub	ip, fp, #104	; 0x68
    51b4:	str	ip, [sp]
    51b8:	bl	b9dc <flatcc_json_parser_symbolic_int64>
    51bc:	str	r0, [fp, #-20]	; 0xffffffec
    51c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    51c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    51c8:	cmp	r0, r1
    51cc:	beq	51e0 <MyGame_Example_Monster_parse_json_table+0x2920>
    51d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    51d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    51d8:	cmp	r0, r1
    51dc:	bne	51e4 <MyGame_Example_Monster_parse_json_table+0x2924>
    51e0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    51e4:	b	51e8 <MyGame_Example_Monster_parse_json_table+0x2928>
    51e8:	ldr	r0, [fp, #-104]	; 0xffffff98
    51ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
    51f0:	orr	r0, r0, r1
    51f4:	cmp	r0, #0
    51f8:	bne	5214 <MyGame_Example_Monster_parse_json_table+0x2954>
    51fc:	b	5200 <MyGame_Example_Monster_parse_json_table+0x2940>
    5200:	ldr	r0, [fp, #-16]
    5204:	ldr	r0, [r0, #8]
    5208:	and	r0, r0, #2
    520c:	cmp	r0, #0
    5210:	beq	5254 <MyGame_Example_Monster_parse_json_table+0x2994>
    5214:	ldr	r0, [fp, #-16]
    5218:	ldr	r0, [r0]
    521c:	movw	r1, #18
    5220:	movw	r2, #8
    5224:	movw	r3, #8
    5228:	uxth	r3, r3
    522c:	bl	0 <flatcc_builder_table_add>
    5230:	str	r0, [fp, #-36]	; 0xffffffdc
    5234:	movw	r1, #0
    5238:	cmp	r0, r1
    523c:	bne	5244 <MyGame_Example_Monster_parse_json_table+0x2984>
    5240:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5244:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5248:	ldr	r2, [fp, #-104]	; 0xffffff98
    524c:	ldr	r3, [fp, #-100]	; 0xffffff9c
    5250:	bl	bc1c <flatbuffers_int64_write_to_pe>
    5254:	b	53e0 <MyGame_Example_Monster_parse_json_table+0x2b20>
    5258:	ldr	r0, [fp, #-20]	; 0xffffffec
    525c:	add	r0, r0, #8
    5260:	str	r0, [fp, #-20]	; 0xffffffec
    5264:	ldr	r0, [fp, #-20]	; 0xffffffec
    5268:	ldr	r1, [fp, #-24]	; 0xffffffe8
    526c:	bl	71e0 <flatcc_json_parser_symbol_part>
    5270:	str	r1, [fp, #-52]	; 0xffffffcc
    5274:	str	r0, [fp, #-56]	; 0xffffffc8
    5278:	ldr	r0, [fp, #-52]	; 0xffffffcc
    527c:	and	r0, r0, #-16777216	; 0xff000000
    5280:	teq	r0, #1627389952	; 0x61000000
    5284:	bne	53c8 <MyGame_Example_Monster_parse_json_table+0x2b08>
    5288:	b	528c <MyGame_Example_Monster_parse_json_table+0x29cc>
    528c:	ldr	r0, [fp, #-16]
    5290:	ldr	r1, [fp, #-20]	; 0xffffffec
    5294:	str	r1, [fp, #-48]	; 0xffffffd0
    5298:	ldr	r2, [fp, #-24]	; 0xffffffe8
    529c:	movw	r3, #1
    52a0:	bl	7218 <flatcc_json_parser_match_symbol>
    52a4:	str	r0, [fp, #-20]	; 0xffffffec
    52a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    52ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    52b0:	cmp	r0, r1
    52b4:	beq	53b0 <MyGame_Example_Monster_parse_json_table+0x2af0>
    52b8:	mov	r0, #0
    52bc:	str	r0, [fp, #-108]	; 0xffffff94
    52c0:	str	r0, [fp, #-112]	; 0xffffff90
    52c4:	ldr	r0, [fp, #-16]
    52c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    52cc:	str	r1, [fp, #-48]	; 0xffffffd0
    52d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    52d4:	sub	r3, fp, #112	; 0x70
    52d8:	bl	b904 <flatcc_json_parser_int64>
    52dc:	str	r0, [fp, #-20]	; 0xffffffec
    52e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    52e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    52e8:	cmp	r0, r1
    52ec:	bne	5340 <MyGame_Example_Monster_parse_json_table+0x2a80>
    52f0:	ldr	r0, [fp, #-16]
    52f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    52f8:	str	r1, [fp, #-48]	; 0xffffffd0
    52fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5300:	movw	r3, #0
    5304:	movt	r3, #0
    5308:	sub	ip, fp, #112	; 0x70
    530c:	str	ip, [sp]
    5310:	bl	b9dc <flatcc_json_parser_symbolic_int64>
    5314:	str	r0, [fp, #-20]	; 0xffffffec
    5318:	ldr	r0, [fp, #-20]	; 0xffffffec
    531c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5320:	cmp	r0, r1
    5324:	beq	5338 <MyGame_Example_Monster_parse_json_table+0x2a78>
    5328:	ldr	r0, [fp, #-20]	; 0xffffffec
    532c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5330:	cmp	r0, r1
    5334:	bne	533c <MyGame_Example_Monster_parse_json_table+0x2a7c>
    5338:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    533c:	b	5340 <MyGame_Example_Monster_parse_json_table+0x2a80>
    5340:	ldr	r0, [fp, #-112]	; 0xffffff90
    5344:	ldr	r1, [fp, #-108]	; 0xffffff94
    5348:	orr	r0, r0, r1
    534c:	cmp	r0, #0
    5350:	bne	536c <MyGame_Example_Monster_parse_json_table+0x2aac>
    5354:	b	5358 <MyGame_Example_Monster_parse_json_table+0x2a98>
    5358:	ldr	r0, [fp, #-16]
    535c:	ldr	r0, [r0, #8]
    5360:	and	r0, r0, #2
    5364:	cmp	r0, #0
    5368:	beq	53ac <MyGame_Example_Monster_parse_json_table+0x2aec>
    536c:	ldr	r0, [fp, #-16]
    5370:	ldr	r0, [r0]
    5374:	movw	r1, #22
    5378:	movw	r2, #8
    537c:	movw	r3, #8
    5380:	uxth	r3, r3
    5384:	bl	0 <flatcc_builder_table_add>
    5388:	str	r0, [fp, #-36]	; 0xffffffdc
    538c:	movw	r1, #0
    5390:	cmp	r0, r1
    5394:	bne	539c <MyGame_Example_Monster_parse_json_table+0x2adc>
    5398:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    539c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    53a0:	ldr	r2, [fp, #-112]	; 0xffffff90
    53a4:	ldr	r3, [fp, #-108]	; 0xffffff94
    53a8:	bl	bc1c <flatbuffers_int64_write_to_pe>
    53ac:	b	53c4 <MyGame_Example_Monster_parse_json_table+0x2b04>
    53b0:	ldr	r0, [fp, #-16]
    53b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    53b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    53bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    53c0:	str	r0, [fp, #-20]	; 0xffffffec
    53c4:	b	53dc <MyGame_Example_Monster_parse_json_table+0x2b1c>
    53c8:	ldr	r0, [fp, #-16]
    53cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    53d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    53d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    53d8:	str	r0, [fp, #-20]	; 0xffffffec
    53dc:	b	53e0 <MyGame_Example_Monster_parse_json_table+0x2b20>
    53e0:	b	53f8 <MyGame_Example_Monster_parse_json_table+0x2b38>
    53e4:	ldr	r0, [fp, #-16]
    53e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    53ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    53f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    53f4:	str	r0, [fp, #-20]	; 0xffffffec
    53f8:	b	59b0 <MyGame_Example_Monster_parse_json_table+0x30f0>
    53fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5400:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5404:	movw	r2, #12895	; 0x325f
    5408:	movt	r2, #30003	; 0x7533
    540c:	eor	r1, r1, r2
    5410:	movw	r2, #30257	; 0x7631
    5414:	movt	r2, #26222	; 0x666e
    5418:	eor	r0, r0, r2
    541c:	orr	r0, r0, r1
    5420:	cmp	r0, #0
    5424:	bne	56b4 <MyGame_Example_Monster_parse_json_table+0x2df4>
    5428:	b	542c <MyGame_Example_Monster_parse_json_table+0x2b6c>
    542c:	ldr	r0, [fp, #-16]
    5430:	ldr	r1, [fp, #-20]	; 0xffffffec
    5434:	str	r1, [fp, #-48]	; 0xffffffd0
    5438:	ldr	r2, [fp, #-24]	; 0xffffffe8
    543c:	movw	r3, #8
    5440:	bl	7218 <flatcc_json_parser_match_symbol>
    5444:	str	r0, [fp, #-20]	; 0xffffffec
    5448:	ldr	r0, [fp, #-48]	; 0xffffffd0
    544c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5450:	cmp	r0, r1
    5454:	beq	553c <MyGame_Example_Monster_parse_json_table+0x2c7c>
    5458:	movw	r0, #0
    545c:	str	r0, [fp, #-116]	; 0xffffff8c
    5460:	ldr	r0, [fp, #-16]
    5464:	ldr	r1, [fp, #-20]	; 0xffffffec
    5468:	str	r1, [fp, #-48]	; 0xffffffd0
    546c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5470:	sub	r3, fp, #116	; 0x74
    5474:	bl	bc54 <flatcc_json_parser_uint32>
    5478:	str	r0, [fp, #-20]	; 0xffffffec
    547c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5480:	ldr	r1, [fp, #-20]	; 0xffffffec
    5484:	cmp	r0, r1
    5488:	bne	54dc <MyGame_Example_Monster_parse_json_table+0x2c1c>
    548c:	ldr	r0, [fp, #-16]
    5490:	ldr	r1, [fp, #-20]	; 0xffffffec
    5494:	str	r1, [fp, #-48]	; 0xffffffd0
    5498:	ldr	r2, [fp, #-24]	; 0xffffffe8
    549c:	movw	r3, #0
    54a0:	movt	r3, #0
    54a4:	sub	ip, fp, #116	; 0x74
    54a8:	str	ip, [sp]
    54ac:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
    54b0:	str	r0, [fp, #-20]	; 0xffffffec
    54b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    54b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    54bc:	cmp	r0, r1
    54c0:	beq	54d4 <MyGame_Example_Monster_parse_json_table+0x2c14>
    54c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    54c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    54cc:	cmp	r0, r1
    54d0:	bne	54d8 <MyGame_Example_Monster_parse_json_table+0x2c18>
    54d4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    54d8:	b	54dc <MyGame_Example_Monster_parse_json_table+0x2c1c>
    54dc:	ldr	r0, [fp, #-116]	; 0xffffff8c
    54e0:	cmp	r0, #0
    54e4:	bne	54fc <MyGame_Example_Monster_parse_json_table+0x2c3c>
    54e8:	ldr	r0, [fp, #-16]
    54ec:	ldr	r0, [r0, #8]
    54f0:	and	r0, r0, #2
    54f4:	cmp	r0, #0
    54f8:	beq	5538 <MyGame_Example_Monster_parse_json_table+0x2c78>
    54fc:	ldr	r0, [fp, #-16]
    5500:	ldr	r0, [r0]
    5504:	movw	r1, #17
    5508:	movw	r2, #4
    550c:	movw	r3, #4
    5510:	uxth	r3, r3
    5514:	bl	0 <flatcc_builder_table_add>
    5518:	str	r0, [fp, #-36]	; 0xffffffdc
    551c:	movw	r1, #0
    5520:	cmp	r0, r1
    5524:	bne	552c <MyGame_Example_Monster_parse_json_table+0x2c6c>
    5528:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    552c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5530:	ldr	r1, [fp, #-116]	; 0xffffff8c
    5534:	bl	bf54 <flatbuffers_uint32_write_to_pe>
    5538:	b	56b0 <MyGame_Example_Monster_parse_json_table+0x2df0>
    553c:	ldr	r0, [fp, #-20]	; 0xffffffec
    5540:	add	r0, r0, #8
    5544:	str	r0, [fp, #-20]	; 0xffffffec
    5548:	ldr	r0, [fp, #-20]	; 0xffffffec
    554c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5550:	bl	71e0 <flatcc_json_parser_symbol_part>
    5554:	str	r1, [fp, #-52]	; 0xffffffcc
    5558:	str	r0, [fp, #-56]	; 0xffffffc8
    555c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    5560:	and	r0, r0, #-16777216	; 0xff000000
    5564:	teq	r0, #1627389952	; 0x61000000
    5568:	bne	5698 <MyGame_Example_Monster_parse_json_table+0x2dd8>
    556c:	b	5570 <MyGame_Example_Monster_parse_json_table+0x2cb0>
    5570:	ldr	r0, [fp, #-16]
    5574:	ldr	r1, [fp, #-20]	; 0xffffffec
    5578:	str	r1, [fp, #-48]	; 0xffffffd0
    557c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5580:	movw	r3, #1
    5584:	bl	7218 <flatcc_json_parser_match_symbol>
    5588:	str	r0, [fp, #-20]	; 0xffffffec
    558c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5590:	ldr	r1, [fp, #-20]	; 0xffffffec
    5594:	cmp	r0, r1
    5598:	beq	5680 <MyGame_Example_Monster_parse_json_table+0x2dc0>
    559c:	movw	r0, #0
    55a0:	str	r0, [fp, #-120]	; 0xffffff88
    55a4:	ldr	r0, [fp, #-16]
    55a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    55ac:	str	r1, [fp, #-48]	; 0xffffffd0
    55b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    55b4:	sub	r3, fp, #120	; 0x78
    55b8:	bl	bc54 <flatcc_json_parser_uint32>
    55bc:	str	r0, [fp, #-20]	; 0xffffffec
    55c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    55c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    55c8:	cmp	r0, r1
    55cc:	bne	5620 <MyGame_Example_Monster_parse_json_table+0x2d60>
    55d0:	ldr	r0, [fp, #-16]
    55d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    55d8:	str	r1, [fp, #-48]	; 0xffffffd0
    55dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    55e0:	movw	r3, #0
    55e4:	movt	r3, #0
    55e8:	sub	ip, fp, #120	; 0x78
    55ec:	str	ip, [sp]
    55f0:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
    55f4:	str	r0, [fp, #-20]	; 0xffffffec
    55f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    55fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5600:	cmp	r0, r1
    5604:	beq	5618 <MyGame_Example_Monster_parse_json_table+0x2d58>
    5608:	ldr	r0, [fp, #-20]	; 0xffffffec
    560c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5610:	cmp	r0, r1
    5614:	bne	561c <MyGame_Example_Monster_parse_json_table+0x2d5c>
    5618:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    561c:	b	5620 <MyGame_Example_Monster_parse_json_table+0x2d60>
    5620:	ldr	r0, [fp, #-120]	; 0xffffff88
    5624:	cmp	r0, #0
    5628:	bne	5640 <MyGame_Example_Monster_parse_json_table+0x2d80>
    562c:	ldr	r0, [fp, #-16]
    5630:	ldr	r0, [r0, #8]
    5634:	and	r0, r0, #2
    5638:	cmp	r0, #0
    563c:	beq	567c <MyGame_Example_Monster_parse_json_table+0x2dbc>
    5640:	ldr	r0, [fp, #-16]
    5644:	ldr	r0, [r0]
    5648:	movw	r1, #21
    564c:	movw	r2, #4
    5650:	movw	r3, #4
    5654:	uxth	r3, r3
    5658:	bl	0 <flatcc_builder_table_add>
    565c:	str	r0, [fp, #-36]	; 0xffffffdc
    5660:	movw	r1, #0
    5664:	cmp	r0, r1
    5668:	bne	5670 <MyGame_Example_Monster_parse_json_table+0x2db0>
    566c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5670:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5674:	ldr	r1, [fp, #-120]	; 0xffffff88
    5678:	bl	bf54 <flatbuffers_uint32_write_to_pe>
    567c:	b	5694 <MyGame_Example_Monster_parse_json_table+0x2dd4>
    5680:	ldr	r0, [fp, #-16]
    5684:	ldr	r1, [fp, #-20]	; 0xffffffec
    5688:	ldr	r2, [fp, #-24]	; 0xffffffe8
    568c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5690:	str	r0, [fp, #-20]	; 0xffffffec
    5694:	b	56ac <MyGame_Example_Monster_parse_json_table+0x2dec>
    5698:	ldr	r0, [fp, #-16]
    569c:	ldr	r1, [fp, #-20]	; 0xffffffec
    56a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    56a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    56a8:	str	r0, [fp, #-20]	; 0xffffffec
    56ac:	b	56b0 <MyGame_Example_Monster_parse_json_table+0x2df0>
    56b0:	b	59ac <MyGame_Example_Monster_parse_json_table+0x30ec>
    56b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    56b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
    56bc:	movw	r2, #13407	; 0x345f
    56c0:	movt	r2, #30006	; 0x7536
    56c4:	eor	r1, r1, r2
    56c8:	movw	r2, #30257	; 0x7631
    56cc:	movt	r2, #26222	; 0x666e
    56d0:	eor	r0, r0, r2
    56d4:	orr	r0, r0, r1
    56d8:	cmp	r0, #0
    56dc:	bne	5994 <MyGame_Example_Monster_parse_json_table+0x30d4>
    56e0:	b	56e4 <MyGame_Example_Monster_parse_json_table+0x2e24>
    56e4:	ldr	r0, [fp, #-16]
    56e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    56ec:	str	r1, [fp, #-48]	; 0xffffffd0
    56f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    56f4:	movw	r3, #8
    56f8:	bl	7218 <flatcc_json_parser_match_symbol>
    56fc:	str	r0, [fp, #-20]	; 0xffffffec
    5700:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5704:	ldr	r1, [fp, #-20]	; 0xffffffec
    5708:	cmp	r0, r1
    570c:	beq	5808 <MyGame_Example_Monster_parse_json_table+0x2f48>
    5710:	mov	r0, #0
    5714:	str	r0, [fp, #-124]	; 0xffffff84
    5718:	str	r0, [fp, #-128]	; 0xffffff80
    571c:	ldr	r0, [fp, #-16]
    5720:	ldr	r1, [fp, #-20]	; 0xffffffec
    5724:	str	r1, [fp, #-48]	; 0xffffffd0
    5728:	ldr	r2, [fp, #-24]	; 0xffffffe8
    572c:	sub	r3, fp, #128	; 0x80
    5730:	bl	bf80 <flatcc_json_parser_uint64>
    5734:	str	r0, [fp, #-20]	; 0xffffffec
    5738:	ldr	r0, [fp, #-48]	; 0xffffffd0
    573c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5740:	cmp	r0, r1
    5744:	bne	5798 <MyGame_Example_Monster_parse_json_table+0x2ed8>
    5748:	ldr	r0, [fp, #-16]
    574c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5750:	str	r1, [fp, #-48]	; 0xffffffd0
    5754:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5758:	movw	r3, #0
    575c:	movt	r3, #0
    5760:	sub	ip, fp, #128	; 0x80
    5764:	str	ip, [sp]
    5768:	bl	c058 <flatcc_json_parser_symbolic_uint64>
    576c:	str	r0, [fp, #-20]	; 0xffffffec
    5770:	ldr	r0, [fp, #-20]	; 0xffffffec
    5774:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5778:	cmp	r0, r1
    577c:	beq	5790 <MyGame_Example_Monster_parse_json_table+0x2ed0>
    5780:	ldr	r0, [fp, #-20]	; 0xffffffec
    5784:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5788:	cmp	r0, r1
    578c:	bne	5794 <MyGame_Example_Monster_parse_json_table+0x2ed4>
    5790:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5794:	b	5798 <MyGame_Example_Monster_parse_json_table+0x2ed8>
    5798:	ldr	r0, [fp, #-128]	; 0xffffff80
    579c:	ldr	r1, [fp, #-124]	; 0xffffff84
    57a0:	orr	r0, r0, r1
    57a4:	cmp	r0, #0
    57a8:	bne	57c4 <MyGame_Example_Monster_parse_json_table+0x2f04>
    57ac:	b	57b0 <MyGame_Example_Monster_parse_json_table+0x2ef0>
    57b0:	ldr	r0, [fp, #-16]
    57b4:	ldr	r0, [r0, #8]
    57b8:	and	r0, r0, #2
    57bc:	cmp	r0, #0
    57c0:	beq	5804 <MyGame_Example_Monster_parse_json_table+0x2f44>
    57c4:	ldr	r0, [fp, #-16]
    57c8:	ldr	r0, [r0]
    57cc:	movw	r1, #19
    57d0:	movw	r2, #8
    57d4:	movw	r3, #8
    57d8:	uxth	r3, r3
    57dc:	bl	0 <flatcc_builder_table_add>
    57e0:	str	r0, [fp, #-36]	; 0xffffffdc
    57e4:	movw	r1, #0
    57e8:	cmp	r0, r1
    57ec:	bne	57f4 <MyGame_Example_Monster_parse_json_table+0x2f34>
    57f0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    57f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    57f8:	ldr	r2, [fp, #-128]	; 0xffffff80
    57fc:	ldr	r3, [fp, #-124]	; 0xffffff84
    5800:	bl	c298 <flatbuffers_uint64_write_to_pe>
    5804:	b	5990 <MyGame_Example_Monster_parse_json_table+0x30d0>
    5808:	ldr	r0, [fp, #-20]	; 0xffffffec
    580c:	add	r0, r0, #8
    5810:	str	r0, [fp, #-20]	; 0xffffffec
    5814:	ldr	r0, [fp, #-20]	; 0xffffffec
    5818:	ldr	r1, [fp, #-24]	; 0xffffffe8
    581c:	bl	71e0 <flatcc_json_parser_symbol_part>
    5820:	str	r1, [fp, #-52]	; 0xffffffcc
    5824:	str	r0, [fp, #-56]	; 0xffffffc8
    5828:	ldr	r0, [fp, #-52]	; 0xffffffcc
    582c:	and	r0, r0, #-16777216	; 0xff000000
    5830:	teq	r0, #1627389952	; 0x61000000
    5834:	bne	5978 <MyGame_Example_Monster_parse_json_table+0x30b8>
    5838:	b	583c <MyGame_Example_Monster_parse_json_table+0x2f7c>
    583c:	ldr	r0, [fp, #-16]
    5840:	ldr	r1, [fp, #-20]	; 0xffffffec
    5844:	str	r1, [fp, #-48]	; 0xffffffd0
    5848:	ldr	r2, [fp, #-24]	; 0xffffffe8
    584c:	movw	r3, #1
    5850:	bl	7218 <flatcc_json_parser_match_symbol>
    5854:	str	r0, [fp, #-20]	; 0xffffffec
    5858:	ldr	r0, [fp, #-48]	; 0xffffffd0
    585c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5860:	cmp	r0, r1
    5864:	beq	5960 <MyGame_Example_Monster_parse_json_table+0x30a0>
    5868:	mov	r0, #0
    586c:	str	r0, [fp, #-132]	; 0xffffff7c
    5870:	str	r0, [fp, #-136]	; 0xffffff78
    5874:	ldr	r0, [fp, #-16]
    5878:	ldr	r1, [fp, #-20]	; 0xffffffec
    587c:	str	r1, [fp, #-48]	; 0xffffffd0
    5880:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5884:	sub	r3, fp, #136	; 0x88
    5888:	bl	bf80 <flatcc_json_parser_uint64>
    588c:	str	r0, [fp, #-20]	; 0xffffffec
    5890:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5894:	ldr	r1, [fp, #-20]	; 0xffffffec
    5898:	cmp	r0, r1
    589c:	bne	58f0 <MyGame_Example_Monster_parse_json_table+0x3030>
    58a0:	ldr	r0, [fp, #-16]
    58a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    58a8:	str	r1, [fp, #-48]	; 0xffffffd0
    58ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    58b0:	movw	r3, #0
    58b4:	movt	r3, #0
    58b8:	sub	ip, fp, #136	; 0x88
    58bc:	str	ip, [sp]
    58c0:	bl	c058 <flatcc_json_parser_symbolic_uint64>
    58c4:	str	r0, [fp, #-20]	; 0xffffffec
    58c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    58cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    58d0:	cmp	r0, r1
    58d4:	beq	58e8 <MyGame_Example_Monster_parse_json_table+0x3028>
    58d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    58dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    58e0:	cmp	r0, r1
    58e4:	bne	58ec <MyGame_Example_Monster_parse_json_table+0x302c>
    58e8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    58ec:	b	58f0 <MyGame_Example_Monster_parse_json_table+0x3030>
    58f0:	ldr	r0, [fp, #-136]	; 0xffffff78
    58f4:	ldr	r1, [fp, #-132]	; 0xffffff7c
    58f8:	orr	r0, r0, r1
    58fc:	cmp	r0, #0
    5900:	bne	591c <MyGame_Example_Monster_parse_json_table+0x305c>
    5904:	b	5908 <MyGame_Example_Monster_parse_json_table+0x3048>
    5908:	ldr	r0, [fp, #-16]
    590c:	ldr	r0, [r0, #8]
    5910:	and	r0, r0, #2
    5914:	cmp	r0, #0
    5918:	beq	595c <MyGame_Example_Monster_parse_json_table+0x309c>
    591c:	ldr	r0, [fp, #-16]
    5920:	ldr	r0, [r0]
    5924:	movw	r1, #23
    5928:	movw	r2, #8
    592c:	movw	r3, #8
    5930:	uxth	r3, r3
    5934:	bl	0 <flatcc_builder_table_add>
    5938:	str	r0, [fp, #-36]	; 0xffffffdc
    593c:	movw	r1, #0
    5940:	cmp	r0, r1
    5944:	bne	594c <MyGame_Example_Monster_parse_json_table+0x308c>
    5948:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    594c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5950:	ldr	r2, [fp, #-136]	; 0xffffff78
    5954:	ldr	r3, [fp, #-132]	; 0xffffff7c
    5958:	bl	c298 <flatbuffers_uint64_write_to_pe>
    595c:	b	5974 <MyGame_Example_Monster_parse_json_table+0x30b4>
    5960:	ldr	r0, [fp, #-16]
    5964:	ldr	r1, [fp, #-20]	; 0xffffffec
    5968:	ldr	r2, [fp, #-24]	; 0xffffffe8
    596c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5970:	str	r0, [fp, #-20]	; 0xffffffec
    5974:	b	598c <MyGame_Example_Monster_parse_json_table+0x30cc>
    5978:	ldr	r0, [fp, #-16]
    597c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5980:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5984:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5988:	str	r0, [fp, #-20]	; 0xffffffec
    598c:	b	5990 <MyGame_Example_Monster_parse_json_table+0x30d0>
    5990:	b	59a8 <MyGame_Example_Monster_parse_json_table+0x30e8>
    5994:	ldr	r0, [fp, #-16]
    5998:	ldr	r1, [fp, #-20]	; 0xffffffec
    599c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    59a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    59a4:	str	r0, [fp, #-20]	; 0xffffffec
    59a8:	b	59ac <MyGame_Example_Monster_parse_json_table+0x30ec>
    59ac:	b	59b0 <MyGame_Example_Monster_parse_json_table+0x30f0>
    59b0:	b	59b4 <MyGame_Example_Monster_parse_json_table+0x30f4>
    59b4:	b	61c8 <MyGame_Example_Monster_parse_json_table+0x3908>
    59b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    59bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
    59c0:	movw	r2, #24430	; 0x5f6e
    59c4:	movt	r2, #28530	; 0x6f72
    59c8:	subs	r0, r2, r0
    59cc:	movw	r2, #25460	; 0x6374
    59d0:	movt	r2, #30309	; 0x7665
    59d4:	sbcs	r1, r2, r1
    59d8:	str	r0, [sp, #28]
    59dc:	str	r1, [sp, #24]
    59e0:	bcc	5d24 <MyGame_Example_Monster_parse_json_table+0x3464>
    59e4:	b	59e8 <MyGame_Example_Monster_parse_json_table+0x3128>
    59e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    59ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
    59f0:	movw	r2, #29556	; 0x7374
    59f4:	movt	r2, #29797	; 0x7465
    59f8:	eor	r1, r1, r2
    59fc:	movw	r2, #29556	; 0x7374
    5a00:	movt	r2, #28261	; 0x6e65
    5a04:	eor	r0, r0, r2
    5a08:	orr	r0, r0, r1
    5a0c:	cmp	r0, #0
    5a10:	bne	5d0c <MyGame_Example_Monster_parse_json_table+0x344c>
    5a14:	b	5a18 <MyGame_Example_Monster_parse_json_table+0x3158>
    5a18:	ldr	r0, [fp, #-20]	; 0xffffffec
    5a1c:	add	r0, r0, #8
    5a20:	str	r0, [fp, #-20]	; 0xffffffec
    5a24:	ldr	r0, [fp, #-20]	; 0xffffffec
    5a28:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5a2c:	bl	71e0 <flatcc_json_parser_symbol_part>
    5a30:	str	r1, [fp, #-52]	; 0xffffffcc
    5a34:	str	r0, [fp, #-56]	; 0xffffffc8
    5a38:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5a3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5a40:	movw	lr, #26220	; 0x666c
    5a44:	movt	lr, #25956	; 0x6564
    5a48:	eor	r1, r1, lr
    5a4c:	movw	lr, #25205	; 0x6275
    5a50:	movt	lr, #24948	; 0x6174
    5a54:	eor	r0, r0, lr
    5a58:	orr	r0, r0, r1
    5a5c:	cmp	r0, #0
    5a60:	bne	5cf4 <MyGame_Example_Monster_parse_json_table+0x3434>
    5a64:	b	5a68 <MyGame_Example_Monster_parse_json_table+0x31a8>
    5a68:	ldr	r0, [fp, #-20]	; 0xffffffec
    5a6c:	add	r0, r0, #8
    5a70:	str	r0, [fp, #-20]	; 0xffffffec
    5a74:	ldr	r0, [fp, #-20]	; 0xffffffec
    5a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5a7c:	bl	71e0 <flatcc_json_parser_symbol_part>
    5a80:	str	r1, [fp, #-52]	; 0xffffffcc
    5a84:	str	r0, [fp, #-56]	; 0xffffffc8
    5a88:	ldr	r0, [fp, #-52]	; 0xffffffcc
    5a8c:	movw	r1, #25970	; 0x6572
    5a90:	movt	r1, #26214	; 0x6666
    5a94:	teq	r0, r1
    5a98:	bne	5cdc <MyGame_Example_Monster_parse_json_table+0x341c>
    5a9c:	b	5aa0 <MyGame_Example_Monster_parse_json_table+0x31e0>
    5aa0:	ldr	r0, [fp, #-16]
    5aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
    5aa8:	str	r1, [fp, #-48]	; 0xffffffd0
    5aac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ab0:	movw	r3, #4
    5ab4:	bl	7218 <flatcc_json_parser_match_symbol>
    5ab8:	str	r0, [fp, #-20]	; 0xffffffec
    5abc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ac4:	cmp	r0, r1
    5ac8:	beq	5cc4 <MyGame_Example_Monster_parse_json_table+0x3404>
    5acc:	ldr	r0, [fp, #-20]	; 0xffffffec
    5ad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ad4:	cmp	r0, r1
    5ad8:	beq	5c1c <MyGame_Example_Monster_parse_json_table+0x335c>
    5adc:	ldr	r0, [fp, #-20]	; 0xffffffec
    5ae0:	ldrb	r0, [r0]
    5ae4:	cmp	r0, #91	; 0x5b
    5ae8:	bne	5c1c <MyGame_Example_Monster_parse_json_table+0x335c>
    5aec:	ldr	r0, [fp, #-16]
    5af0:	ldr	r0, [r0]
    5af4:	movw	r1, #1
    5af8:	movw	r2, #1
    5afc:	uxth	r2, r2
    5b00:	mvn	r3, #0
    5b04:	bl	0 <flatcc_builder_start_vector>
    5b08:	cmp	r0, #0
    5b0c:	beq	5b14 <MyGame_Example_Monster_parse_json_table+0x3254>
    5b10:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5b14:	ldr	r0, [fp, #-16]
    5b18:	ldr	r1, [fp, #-20]	; 0xffffffec
    5b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5b20:	sub	r3, fp, #32
    5b24:	bl	8ac8 <flatcc_json_parser_array_start>
    5b28:	str	r0, [fp, #-20]	; 0xffffffec
    5b2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5b30:	cmp	r0, #0
    5b34:	beq	5c08 <MyGame_Example_Monster_parse_json_table+0x3348>
    5b38:	movw	r0, #0
    5b3c:	strb	r0, [fp, #-137]	; 0xffffff77
    5b40:	ldr	r0, [fp, #-16]
    5b44:	ldr	r0, [r0]
    5b48:	movw	r1, #1
    5b4c:	bl	0 <flatcc_builder_extend_vector>
    5b50:	str	r0, [fp, #-36]	; 0xffffffdc
    5b54:	movw	r1, #0
    5b58:	cmp	r0, r1
    5b5c:	bne	5b64 <MyGame_Example_Monster_parse_json_table+0x32a4>
    5b60:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5b64:	ldr	r0, [fp, #-16]
    5b68:	ldr	r1, [fp, #-20]	; 0xffffffec
    5b6c:	str	r1, [fp, #-48]	; 0xffffffd0
    5b70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5b74:	sub	r3, fp, #137	; 0x89
    5b78:	bl	8bac <flatcc_json_parser_uint8>
    5b7c:	str	r0, [fp, #-20]	; 0xffffffec
    5b80:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5b84:	ldr	r1, [fp, #-20]	; 0xffffffec
    5b88:	cmp	r0, r1
    5b8c:	bne	5be0 <MyGame_Example_Monster_parse_json_table+0x3320>
    5b90:	ldr	r0, [fp, #-16]
    5b94:	ldr	r1, [fp, #-20]	; 0xffffffec
    5b98:	str	r1, [fp, #-48]	; 0xffffffd0
    5b9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ba0:	movw	r3, #0
    5ba4:	movt	r3, #0
    5ba8:	sub	ip, fp, #137	; 0x89
    5bac:	str	ip, [sp]
    5bb0:	bl	8c88 <flatcc_json_parser_symbolic_uint8>
    5bb4:	str	r0, [fp, #-20]	; 0xffffffec
    5bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
    5bbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5bc0:	cmp	r0, r1
    5bc4:	beq	5bd8 <MyGame_Example_Monster_parse_json_table+0x3318>
    5bc8:	ldr	r0, [fp, #-20]	; 0xffffffec
    5bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5bd0:	cmp	r0, r1
    5bd4:	bne	5bdc <MyGame_Example_Monster_parse_json_table+0x331c>
    5bd8:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5bdc:	b	5be0 <MyGame_Example_Monster_parse_json_table+0x3320>
    5be0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5be4:	ldrb	r1, [fp, #-137]	; 0xffffff77
    5be8:	bl	8eb4 <flatbuffers_uint8_write_to_pe>
    5bec:	ldr	r0, [fp, #-16]
    5bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
    5bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5bf8:	sub	r3, fp, #32
    5bfc:	bl	8ee0 <flatcc_json_parser_array_end>
    5c00:	str	r0, [fp, #-20]	; 0xffffffec
    5c04:	b	5b2c <MyGame_Example_Monster_parse_json_table+0x326c>
    5c08:	ldr	r0, [fp, #-16]
    5c0c:	ldr	r0, [r0]
    5c10:	bl	0 <flatcc_builder_end_vector>
    5c14:	str	r0, [fp, #-40]	; 0xffffffd8
    5c18:	b	5c84 <MyGame_Example_Monster_parse_json_table+0x33c4>
    5c1c:	ldr	r0, [fp, #-16]
    5c20:	ldr	r0, [r0]
    5c24:	movw	r1, #0
    5c28:	str	r1, [sp, #20]
    5c2c:	movw	r2, #0
    5c30:	uxth	r2, r2
    5c34:	ldr	r3, [sp, #20]
    5c38:	bl	0 <flatcc_builder_start_buffer>
    5c3c:	cmp	r0, #0
    5c40:	beq	5c48 <MyGame_Example_Monster_parse_json_table+0x3388>
    5c44:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5c48:	ldr	r0, [fp, #-16]
    5c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5c50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5c54:	sub	r3, fp, #40	; 0x28
    5c58:	bl	28c0 <MyGame_Example_Monster_parse_json_table>
    5c5c:	str	r0, [fp, #-20]	; 0xffffffec
    5c60:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5c64:	cmp	r0, #0
    5c68:	bne	5c70 <MyGame_Example_Monster_parse_json_table+0x33b0>
    5c6c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5c70:	ldr	r0, [fp, #-16]
    5c74:	ldr	r0, [r0]
    5c78:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5c7c:	bl	0 <flatcc_builder_end_buffer>
    5c80:	str	r0, [fp, #-40]	; 0xffffffd8
    5c84:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5c88:	cmp	r0, #0
    5c8c:	beq	5cb0 <MyGame_Example_Monster_parse_json_table+0x33f0>
    5c90:	ldr	r0, [fp, #-16]
    5c94:	ldr	r0, [r0]
    5c98:	movw	r1, #13
    5c9c:	bl	0 <flatcc_builder_table_add_offset>
    5ca0:	str	r0, [fp, #-44]	; 0xffffffd4
    5ca4:	movw	r1, #0
    5ca8:	cmp	r0, r1
    5cac:	bne	5cb4 <MyGame_Example_Monster_parse_json_table+0x33f4>
    5cb0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5cb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5cb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5cbc:	str	r0, [r1]
    5cc0:	b	5cd8 <MyGame_Example_Monster_parse_json_table+0x3418>
    5cc4:	ldr	r0, [fp, #-16]
    5cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ccc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5cd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5cd4:	str	r0, [fp, #-20]	; 0xffffffec
    5cd8:	b	5cf0 <MyGame_Example_Monster_parse_json_table+0x3430>
    5cdc:	ldr	r0, [fp, #-16]
    5ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ce4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5ce8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5cec:	str	r0, [fp, #-20]	; 0xffffffec
    5cf0:	b	5d08 <MyGame_Example_Monster_parse_json_table+0x3448>
    5cf4:	ldr	r0, [fp, #-16]
    5cf8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5d00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5d04:	str	r0, [fp, #-20]	; 0xffffffec
    5d08:	b	5d20 <MyGame_Example_Monster_parse_json_table+0x3460>
    5d0c:	ldr	r0, [fp, #-16]
    5d10:	ldr	r1, [fp, #-20]	; 0xffffffec
    5d14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5d18:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5d1c:	str	r0, [fp, #-20]	; 0xffffffec
    5d20:	b	61c4 <MyGame_Example_Monster_parse_json_table+0x3904>
    5d24:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5d28:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5d2c:	movw	r2, #25460	; 0x6374
    5d30:	movt	r2, #30309	; 0x7665
    5d34:	eor	r1, r1, r2
    5d38:	movw	r2, #24431	; 0x5f6f
    5d3c:	movt	r2, #28530	; 0x6f72
    5d40:	eor	r0, r0, r2
    5d44:	orr	r0, r0, r1
    5d48:	cmp	r0, #0
    5d4c:	bne	61ac <MyGame_Example_Monster_parse_json_table+0x38ec>
    5d50:	b	5d54 <MyGame_Example_Monster_parse_json_table+0x3494>
    5d54:	ldr	r0, [fp, #-20]	; 0xffffffec
    5d58:	add	r0, r0, #8
    5d5c:	str	r0, [fp, #-20]	; 0xffffffec
    5d60:	ldr	r0, [fp, #-20]	; 0xffffffec
    5d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5d68:	bl	71e0 <flatcc_json_parser_symbol_part>
    5d6c:	str	r1, [fp, #-52]	; 0xffffffcc
    5d70:	str	r0, [fp, #-56]	; 0xffffffc8
    5d74:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5d78:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5d7c:	movw	lr, #25711	; 0x646f
    5d80:	movt	lr, #26207	; 0x665f
    5d84:	eor	r1, r1, lr
    5d88:	movw	lr, #27749	; 0x6c65
    5d8c:	movt	lr, #30050	; 0x7562
    5d90:	eor	r0, r0, lr
    5d94:	orr	r0, r0, r1
    5d98:	cmp	r0, #0
    5d9c:	bne	5fa0 <MyGame_Example_Monster_parse_json_table+0x36e0>
    5da0:	b	5da4 <MyGame_Example_Monster_parse_json_table+0x34e4>
    5da4:	ldr	r0, [fp, #-20]	; 0xffffffec
    5da8:	add	r0, r0, #8
    5dac:	str	r0, [fp, #-20]	; 0xffffffec
    5db0:	ldr	r0, [fp, #-20]	; 0xffffffec
    5db4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5db8:	bl	71e0 <flatcc_json_parser_symbol_part>
    5dbc:	str	r1, [fp, #-52]	; 0xffffffcc
    5dc0:	str	r0, [fp, #-56]	; 0xffffffc8
    5dc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    5dc8:	and	r0, r0, #-16777216	; 0xff000000
    5dcc:	teq	r0, #1929379840	; 0x73000000
    5dd0:	bne	5f88 <MyGame_Example_Monster_parse_json_table+0x36c8>
    5dd4:	b	5dd8 <MyGame_Example_Monster_parse_json_table+0x3518>
    5dd8:	ldr	r0, [fp, #-16]
    5ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
    5de0:	str	r1, [fp, #-48]	; 0xffffffd0
    5de4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5de8:	movw	r3, #1
    5dec:	bl	7218 <flatcc_json_parser_match_symbol>
    5df0:	str	r0, [fp, #-20]	; 0xffffffec
    5df4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5df8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5dfc:	cmp	r0, r1
    5e00:	beq	5f70 <MyGame_Example_Monster_parse_json_table+0x36b0>
    5e04:	ldr	r3, [pc, #1188]	; 62b0 <MyGame_Example_Monster_parse_json_table+0x39f0>
    5e08:	ldr	r0, [fp, #-16]
    5e0c:	ldr	r0, [r0]
    5e10:	movw	r1, #8
    5e14:	movw	r2, #8
    5e18:	uxth	r2, r2
    5e1c:	bl	0 <flatcc_builder_start_vector>
    5e20:	cmp	r0, #0
    5e24:	beq	5e2c <MyGame_Example_Monster_parse_json_table+0x356c>
    5e28:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5e2c:	ldr	r0, [fp, #-16]
    5e30:	ldr	r1, [fp, #-20]	; 0xffffffec
    5e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e38:	sub	r3, fp, #32
    5e3c:	bl	8ac8 <flatcc_json_parser_array_start>
    5e40:	str	r0, [fp, #-20]	; 0xffffffec
    5e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5e48:	cmp	r0, #0
    5e4c:	beq	5f20 <MyGame_Example_Monster_parse_json_table+0x3660>
    5e50:	vldr	d16, [pc, #1000]	; 6240 <MyGame_Example_Monster_parse_json_table+0x3980>
    5e54:	vstr	d16, [sp, #136]	; 0x88
    5e58:	ldr	r0, [fp, #-16]
    5e5c:	ldr	r0, [r0]
    5e60:	movw	r1, #1
    5e64:	bl	0 <flatcc_builder_extend_vector>
    5e68:	str	r0, [fp, #-36]	; 0xffffffdc
    5e6c:	movw	r1, #0
    5e70:	cmp	r0, r1
    5e74:	bne	5e7c <MyGame_Example_Monster_parse_json_table+0x35bc>
    5e78:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5e7c:	ldr	r0, [fp, #-16]
    5e80:	ldr	r1, [fp, #-20]	; 0xffffffec
    5e84:	str	r1, [fp, #-48]	; 0xffffffd0
    5e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5e8c:	add	r3, sp, #136	; 0x88
    5e90:	bl	0 <flatcc_json_parser_double>
    5e94:	str	r0, [fp, #-20]	; 0xffffffec
    5e98:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ea0:	cmp	r0, r1
    5ea4:	bne	5ef8 <MyGame_Example_Monster_parse_json_table+0x3638>
    5ea8:	ldr	r0, [fp, #-16]
    5eac:	ldr	r1, [fp, #-20]	; 0xffffffec
    5eb0:	str	r1, [fp, #-48]	; 0xffffffd0
    5eb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5eb8:	movw	r3, #0
    5ebc:	movt	r3, #0
    5ec0:	add	ip, sp, #136	; 0x88
    5ec4:	str	ip, [sp]
    5ec8:	bl	c2d0 <flatcc_json_parser_symbolic_double>
    5ecc:	str	r0, [fp, #-20]	; 0xffffffec
    5ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
    5ed4:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5ed8:	cmp	r0, r1
    5edc:	beq	5ef0 <MyGame_Example_Monster_parse_json_table+0x3630>
    5ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
    5ee4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    5ee8:	cmp	r0, r1
    5eec:	bne	5ef4 <MyGame_Example_Monster_parse_json_table+0x3634>
    5ef0:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5ef4:	b	5ef8 <MyGame_Example_Monster_parse_json_table+0x3638>
    5ef8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    5efc:	vldr	d0, [sp, #136]	; 0x88
    5f00:	bl	c508 <flatbuffers_double_write_to_pe>
    5f04:	ldr	r0, [fp, #-16]
    5f08:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f10:	sub	r3, fp, #32
    5f14:	bl	8ee0 <flatcc_json_parser_array_end>
    5f18:	str	r0, [fp, #-20]	; 0xffffffec
    5f1c:	b	5e44 <MyGame_Example_Monster_parse_json_table+0x3584>
    5f20:	ldr	r0, [fp, #-16]
    5f24:	ldr	r0, [r0]
    5f28:	bl	0 <flatcc_builder_end_vector>
    5f2c:	str	r0, [fp, #-40]	; 0xffffffd8
    5f30:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5f34:	cmp	r0, #0
    5f38:	beq	5f5c <MyGame_Example_Monster_parse_json_table+0x369c>
    5f3c:	ldr	r0, [fp, #-16]
    5f40:	ldr	r0, [r0]
    5f44:	movw	r1, #33	; 0x21
    5f48:	bl	0 <flatcc_builder_table_add_offset>
    5f4c:	str	r0, [fp, #-44]	; 0xffffffd4
    5f50:	movw	r1, #0
    5f54:	cmp	r0, r1
    5f58:	bne	5f60 <MyGame_Example_Monster_parse_json_table+0x36a0>
    5f5c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    5f60:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5f64:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5f68:	str	r0, [r1]
    5f6c:	b	5f84 <MyGame_Example_Monster_parse_json_table+0x36c4>
    5f70:	ldr	r0, [fp, #-16]
    5f74:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5f80:	str	r0, [fp, #-20]	; 0xffffffec
    5f84:	b	5f9c <MyGame_Example_Monster_parse_json_table+0x36dc>
    5f88:	ldr	r0, [fp, #-16]
    5f8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5f94:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5f98:	str	r0, [fp, #-20]	; 0xffffffec
    5f9c:	b	61a8 <MyGame_Example_Monster_parse_json_table+0x38e8>
    5fa0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    5fa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    5fa8:	movw	r2, #24428	; 0x5f6c
    5fac:	movt	r2, #102	; 0x66
    5fb0:	eor	r2, r2, r1, lsr #8
    5fb4:	lsr	r0, r0, #8
    5fb8:	orr	r0, r0, r1, lsl #24
    5fbc:	movw	r1, #26483	; 0x6773
    5fc0:	movt	r1, #28526	; 0x6f6e
    5fc4:	eor	r0, r0, r1
    5fc8:	orr	r0, r0, r2
    5fcc:	cmp	r0, #0
    5fd0:	bne	6190 <MyGame_Example_Monster_parse_json_table+0x38d0>
    5fd4:	b	5fd8 <MyGame_Example_Monster_parse_json_table+0x3718>
    5fd8:	ldr	r0, [fp, #-16]
    5fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
    5fe0:	str	r1, [fp, #-48]	; 0xffffffd0
    5fe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    5fe8:	movw	r3, #7
    5fec:	bl	7218 <flatcc_json_parser_match_symbol>
    5ff0:	str	r0, [fp, #-20]	; 0xffffffec
    5ff4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    5ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ffc:	cmp	r0, r1
    6000:	beq	6178 <MyGame_Example_Monster_parse_json_table+0x38b8>
    6004:	ldr	r3, [pc, #676]	; 62b0 <MyGame_Example_Monster_parse_json_table+0x39f0>
    6008:	ldr	r0, [fp, #-16]
    600c:	ldr	r0, [r0]
    6010:	movw	r1, #8
    6014:	movw	r2, #8
    6018:	uxth	r2, r2
    601c:	bl	0 <flatcc_builder_start_vector>
    6020:	cmp	r0, #0
    6024:	beq	602c <MyGame_Example_Monster_parse_json_table+0x376c>
    6028:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    602c:	ldr	r0, [fp, #-16]
    6030:	ldr	r1, [fp, #-20]	; 0xffffffec
    6034:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6038:	sub	r3, fp, #32
    603c:	bl	8ac8 <flatcc_json_parser_array_start>
    6040:	str	r0, [fp, #-20]	; 0xffffffec
    6044:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6048:	cmp	r0, #0
    604c:	beq	6128 <MyGame_Example_Monster_parse_json_table+0x3868>
    6050:	mov	r0, #0
    6054:	str	r0, [sp, #132]	; 0x84
    6058:	str	r0, [sp, #128]	; 0x80
    605c:	ldr	r0, [fp, #-16]
    6060:	ldr	r0, [r0]
    6064:	movw	r1, #1
    6068:	bl	0 <flatcc_builder_extend_vector>
    606c:	str	r0, [fp, #-36]	; 0xffffffdc
    6070:	movw	r1, #0
    6074:	cmp	r0, r1
    6078:	bne	6080 <MyGame_Example_Monster_parse_json_table+0x37c0>
    607c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    6080:	ldr	r0, [fp, #-16]
    6084:	ldr	r1, [fp, #-20]	; 0xffffffec
    6088:	str	r1, [fp, #-48]	; 0xffffffd0
    608c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6090:	add	r3, sp, #128	; 0x80
    6094:	bl	b904 <flatcc_json_parser_int64>
    6098:	str	r0, [fp, #-20]	; 0xffffffec
    609c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    60a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    60a4:	cmp	r0, r1
    60a8:	bne	60fc <MyGame_Example_Monster_parse_json_table+0x383c>
    60ac:	ldr	r0, [fp, #-16]
    60b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    60b4:	str	r1, [fp, #-48]	; 0xffffffd0
    60b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    60bc:	movw	r3, #0
    60c0:	movt	r3, #0
    60c4:	add	ip, sp, #128	; 0x80
    60c8:	str	ip, [sp]
    60cc:	bl	b9dc <flatcc_json_parser_symbolic_int64>
    60d0:	str	r0, [fp, #-20]	; 0xffffffec
    60d4:	ldr	r0, [fp, #-20]	; 0xffffffec
    60d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    60dc:	cmp	r0, r1
    60e0:	beq	60f4 <MyGame_Example_Monster_parse_json_table+0x3834>
    60e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    60e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    60ec:	cmp	r0, r1
    60f0:	bne	60f8 <MyGame_Example_Monster_parse_json_table+0x3838>
    60f4:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    60f8:	b	60fc <MyGame_Example_Monster_parse_json_table+0x383c>
    60fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    6100:	ldr	r2, [sp, #128]	; 0x80
    6104:	ldr	r3, [sp, #132]	; 0x84
    6108:	bl	bc1c <flatbuffers_int64_write_to_pe>
    610c:	ldr	r0, [fp, #-16]
    6110:	ldr	r1, [fp, #-20]	; 0xffffffec
    6114:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6118:	sub	r3, fp, #32
    611c:	bl	8ee0 <flatcc_json_parser_array_end>
    6120:	str	r0, [fp, #-20]	; 0xffffffec
    6124:	b	6044 <MyGame_Example_Monster_parse_json_table+0x3784>
    6128:	ldr	r0, [fp, #-16]
    612c:	ldr	r0, [r0]
    6130:	bl	0 <flatcc_builder_end_vector>
    6134:	str	r0, [fp, #-40]	; 0xffffffd8
    6138:	ldr	r0, [fp, #-40]	; 0xffffffd8
    613c:	cmp	r0, #0
    6140:	beq	6164 <MyGame_Example_Monster_parse_json_table+0x38a4>
    6144:	ldr	r0, [fp, #-16]
    6148:	ldr	r0, [r0]
    614c:	movw	r1, #32
    6150:	bl	0 <flatcc_builder_table_add_offset>
    6154:	str	r0, [fp, #-44]	; 0xffffffd4
    6158:	movw	r1, #0
    615c:	cmp	r0, r1
    6160:	bne	6168 <MyGame_Example_Monster_parse_json_table+0x38a8>
    6164:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    6168:	ldr	r0, [fp, #-40]	; 0xffffffd8
    616c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    6170:	str	r0, [r1]
    6174:	b	618c <MyGame_Example_Monster_parse_json_table+0x38cc>
    6178:	ldr	r0, [fp, #-16]
    617c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6180:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6184:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6188:	str	r0, [fp, #-20]	; 0xffffffec
    618c:	b	61a4 <MyGame_Example_Monster_parse_json_table+0x38e4>
    6190:	ldr	r0, [fp, #-16]
    6194:	ldr	r1, [fp, #-20]	; 0xffffffec
    6198:	ldr	r2, [fp, #-24]	; 0xffffffe8
    619c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    61a0:	str	r0, [fp, #-20]	; 0xffffffec
    61a4:	b	61a8 <MyGame_Example_Monster_parse_json_table+0x38e8>
    61a8:	b	61c0 <MyGame_Example_Monster_parse_json_table+0x3900>
    61ac:	ldr	r0, [fp, #-16]
    61b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    61b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    61b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    61bc:	str	r0, [fp, #-20]	; 0xffffffec
    61c0:	b	61c4 <MyGame_Example_Monster_parse_json_table+0x3904>
    61c4:	b	61c8 <MyGame_Example_Monster_parse_json_table+0x3908>
    61c8:	b	61cc <MyGame_Example_Monster_parse_json_table+0x390c>
    61cc:	b	61d0 <MyGame_Example_Monster_parse_json_table+0x3910>
    61d0:	b	61d4 <MyGame_Example_Monster_parse_json_table+0x3914>
    61d4:	ldr	r0, [fp, #-16]
    61d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    61dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    61e0:	sub	r3, fp, #32
    61e4:	bl	c534 <flatcc_json_parser_object_end>
    61e8:	str	r0, [fp, #-20]	; 0xffffffec
    61ec:	b	295c <MyGame_Example_Monster_parse_json_table+0x9c>
    61f0:	ldr	r0, [fp, #-16]
    61f4:	ldr	r0, [r0, #24]
    61f8:	cmp	r0, #0
    61fc:	beq	6204 <MyGame_Example_Monster_parse_json_table+0x3944>
    6200:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    6204:	ldr	r0, [fp, #-16]
    6208:	ldr	r0, [r0]
    620c:	movw	r1, #3
    6210:	uxth	r1, r1
    6214:	bl	0 <flatcc_builder_check_required_field>
    6218:	cmp	r0, #0
    621c:	bne	6248 <MyGame_Example_Monster_parse_json_table+0x3988>
    6220:	ldr	r0, [fp, #-16]
    6224:	ldr	r1, [fp, #-20]	; 0xffffffec
    6228:	ldr	r2, [fp, #-24]	; 0xffffffe8
    622c:	movw	r3, #29
    6230:	bl	0 <flatcc_json_parser_set_error>
    6234:	str	r0, [fp, #-20]	; 0xffffffec
    6238:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    623c:	nop	{0}
	...
    6248:	ldr	r0, [fp, #-16]
    624c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6250:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6254:	ldr	r3, [fp, #-60]	; 0xffffffc4
    6258:	bl	0 <flatcc_json_parser_finalize_unions>
    625c:	str	r0, [fp, #-20]	; 0xffffffec
    6260:	ldr	r0, [fp, #-16]
    6264:	ldr	r0, [r0]
    6268:	bl	0 <flatcc_builder_end_table>
    626c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6270:	str	r0, [r1]
    6274:	cmp	r0, #0
    6278:	bne	6280 <MyGame_Example_Monster_parse_json_table+0x39c0>
    627c:	b	628c <MyGame_Example_Monster_parse_json_table+0x39cc>
    6280:	ldr	r0, [fp, #-20]	; 0xffffffec
    6284:	str	r0, [fp, #-12]
    6288:	b	62a4 <MyGame_Example_Monster_parse_json_table+0x39e4>
    628c:	ldr	r0, [fp, #-16]
    6290:	ldr	r1, [fp, #-20]	; 0xffffffec
    6294:	ldr	r2, [fp, #-24]	; 0xffffffe8
    6298:	movw	r3, #33	; 0x21
    629c:	bl	0 <flatcc_json_parser_set_error>
    62a0:	str	r0, [fp, #-12]
    62a4:	ldr	r0, [fp, #-12]
    62a8:	sub	sp, fp, #8
    62ac:	pop	{r4, r5, fp, pc}
    62b0:	.word	0x1fffffff

000062b4 <MyGame_Example_Monster_print_json_table>:
    62b4:	push	{fp, lr}
    62b8:	mov	fp, sp
    62bc:	sub	sp, sp, #32
    62c0:	str	r0, [fp, #-4]
    62c4:	str	r1, [fp, #-8]
    62c8:	ldr	r0, [fp, #-4]
    62cc:	ldr	r1, [fp, #-8]
    62d0:	movw	r2, #0
    62d4:	movw	r3, #0
    62d8:	movt	r3, #0
    62dc:	movw	ip, #3
    62e0:	str	ip, [sp]
    62e4:	movw	ip, #0
    62e8:	movt	ip, #0
    62ec:	str	ip, [sp, #4]
    62f0:	bl	0 <flatcc_json_printer_struct_field>
    62f4:	ldr	r0, [fp, #-4]
    62f8:	ldr	r1, [fp, #-8]
    62fc:	movw	r2, #1
    6300:	movw	r3, #0
    6304:	movt	r3, #0
    6308:	movw	ip, #4
    630c:	str	ip, [sp]
    6310:	movw	ip, #150	; 0x96
    6314:	sxth	ip, ip
    6318:	str	ip, [sp, #4]
    631c:	bl	0 <flatcc_json_printer_int16_field>
    6320:	ldr	r0, [fp, #-4]
    6324:	ldr	r1, [fp, #-8]
    6328:	movw	r2, #2
    632c:	str	r2, [fp, #-12]
    6330:	movw	r3, #0
    6334:	movt	r3, #0
    6338:	ldr	ip, [fp, #-12]
    633c:	str	ip, [sp]
    6340:	movw	lr, #100	; 0x64
    6344:	sxth	lr, lr
    6348:	str	lr, [sp, #4]
    634c:	bl	0 <flatcc_json_printer_int16_field>
    6350:	ldr	r0, [fp, #-4]
    6354:	ldr	r1, [fp, #-8]
    6358:	movw	r2, #3
    635c:	movw	r3, #0
    6360:	movt	r3, #0
    6364:	movw	ip, #4
    6368:	str	ip, [sp]
    636c:	bl	0 <flatcc_json_printer_string_field>
    6370:	ldr	r0, [fp, #-4]
    6374:	ldr	r1, [fp, #-8]
    6378:	movw	r2, #5
    637c:	movw	r3, #0
    6380:	movt	r3, #0
    6384:	movw	ip, #9
    6388:	str	ip, [sp]
    638c:	bl	0 <flatcc_json_printer_uint8_vector_field>
    6390:	ldr	r0, [fp, #-4]
    6394:	ldr	r1, [fp, #-8]
    6398:	movw	r2, #6
    639c:	movw	r3, #0
    63a0:	movt	r3, #0
    63a4:	movw	ip, #5
    63a8:	str	ip, [sp]
    63ac:	movw	ip, #8
    63b0:	sxtb	ip, ip
    63b4:	str	ip, [sp, #4]
    63b8:	movw	ip, #0
    63bc:	movt	ip, #0
    63c0:	str	ip, [sp, #8]
    63c4:	bl	0 <flatcc_json_printer_int8_enum_field>
    63c8:	ldr	r0, [fp, #-4]
    63cc:	ldr	r1, [fp, #-8]
    63d0:	movw	r2, #8
    63d4:	movw	r3, #0
    63d8:	movt	r3, #0
    63dc:	movw	ip, #4
    63e0:	str	ip, [sp]
    63e4:	movw	ip, #0
    63e8:	movt	ip, #0
    63ec:	str	ip, [sp, #4]
    63f0:	movw	ip, #0
    63f4:	movt	ip, #0
    63f8:	str	ip, [sp, #8]
    63fc:	bl	0 <flatcc_json_printer_union_field>
    6400:	ldr	r0, [fp, #-4]
    6404:	ldr	r1, [fp, #-8]
    6408:	movw	r2, #9
    640c:	movw	r3, #0
    6410:	movt	r3, #0
    6414:	movw	ip, #5
    6418:	str	ip, [sp]
    641c:	movw	ip, #4
    6420:	str	ip, [sp, #4]
    6424:	movw	ip, #0
    6428:	movt	ip, #0
    642c:	str	ip, [sp, #8]
    6430:	bl	0 <flatcc_json_printer_struct_vector_field>
    6434:	ldr	r0, [fp, #-4]
    6438:	ldr	r1, [fp, #-8]
    643c:	movw	r2, #10
    6440:	movw	r3, #0
    6444:	movt	r3, #0
    6448:	movw	ip, #17
    644c:	str	ip, [sp]
    6450:	bl	0 <flatcc_json_printer_string_vector_field>
    6454:	ldr	r0, [fp, #-4]
    6458:	ldr	r1, [fp, #-8]
    645c:	movw	r2, #11
    6460:	movw	r3, #0
    6464:	movt	r3, #0
    6468:	movw	ip, #17
    646c:	str	ip, [sp]
    6470:	movw	ip, #0
    6474:	movt	ip, #0
    6478:	str	ip, [sp, #4]
    647c:	bl	0 <flatcc_json_printer_table_vector_field>
    6480:	ldr	r0, [fp, #-4]
    6484:	ldr	r1, [fp, #-8]
    6488:	movw	r2, #12
    648c:	movw	r3, #0
    6490:	movt	r3, #0
    6494:	movw	ip, #5
    6498:	str	ip, [sp]
    649c:	movw	ip, #0
    64a0:	movt	ip, #0
    64a4:	str	ip, [sp, #4]
    64a8:	bl	0 <flatcc_json_printer_table_field>
    64ac:	ldr	r0, [fp, #-4]
    64b0:	ldr	r1, [fp, #-8]
    64b4:	movw	r2, #13
    64b8:	movw	r3, #0
    64bc:	movt	r3, #0
    64c0:	movw	ip, #20
    64c4:	str	ip, [sp]
    64c8:	movw	ip, #0
    64cc:	str	ip, [sp, #4]
    64d0:	movw	ip, #0
    64d4:	movt	ip, #0
    64d8:	str	ip, [sp, #8]
    64dc:	bl	0 <flatcc_json_printer_table_as_nested_root>
    64e0:	ldr	r0, [fp, #-4]
    64e4:	ldr	r1, [fp, #-8]
    64e8:	movw	r2, #14
    64ec:	movw	r3, #0
    64f0:	movt	r3, #0
    64f4:	movw	ip, #9
    64f8:	str	ip, [sp]
    64fc:	movw	ip, #0
    6500:	movt	ip, #0
    6504:	str	ip, [sp, #4]
    6508:	bl	0 <flatcc_json_printer_table_field>
    650c:	ldr	r0, [fp, #-4]
    6510:	ldr	r1, [fp, #-8]
    6514:	movw	r2, #15
    6518:	movw	r3, #0
    651c:	movt	r3, #0
    6520:	movw	ip, #8
    6524:	str	ip, [sp]
    6528:	movw	ip, #1
    652c:	and	ip, ip, #255	; 0xff
    6530:	str	ip, [sp, #4]
    6534:	bl	0 <flatcc_json_printer_bool_field>
    6538:	ldr	r0, [fp, #-4]
    653c:	ldr	r1, [fp, #-8]
    6540:	movw	r2, #16
    6544:	str	r2, [sp, #16]
    6548:	movw	r3, #0
    654c:	movt	r3, #0
    6550:	ldr	ip, [sp, #16]
    6554:	str	ip, [sp]
    6558:	movw	lr, #0
    655c:	str	lr, [sp, #4]
    6560:	bl	0 <flatcc_json_printer_int32_field>
    6564:	ldr	r0, [fp, #-4]
    6568:	ldr	r1, [fp, #-8]
    656c:	movw	r2, #17
    6570:	movw	r3, #0
    6574:	movt	r3, #0
    6578:	movw	ip, #16
    657c:	str	ip, [sp]
    6580:	movw	ip, #0
    6584:	str	ip, [sp, #4]
    6588:	bl	0 <flatcc_json_printer_uint32_field>
    658c:	ldr	r0, [fp, #-4]
    6590:	ldr	r1, [fp, #-8]
    6594:	mov	r2, sp
    6598:	mov	r3, #0
    659c:	str	r3, [r2, #12]
    65a0:	str	r3, [r2, #8]
    65a4:	mov	r3, #16
    65a8:	str	r3, [r2]
    65ac:	movw	r3, #0
    65b0:	movt	r3, #0
    65b4:	mov	r2, #18
    65b8:	bl	0 <flatcc_json_printer_int64_field>
    65bc:	ldr	r0, [fp, #-4]
    65c0:	ldr	r1, [fp, #-8]
    65c4:	mov	r2, sp
    65c8:	mov	r3, #0
    65cc:	str	r3, [r2, #12]
    65d0:	str	r3, [r2, #8]
    65d4:	mov	r3, #16
    65d8:	str	r3, [r2]
    65dc:	movw	r3, #0
    65e0:	movt	r3, #0
    65e4:	mov	r2, #19
    65e8:	bl	0 <flatcc_json_printer_uint64_field>
    65ec:	ldr	r0, [fp, #-4]
    65f0:	ldr	r1, [fp, #-8]
    65f4:	movw	r2, #20
    65f8:	movw	r3, #0
    65fc:	movt	r3, #0
    6600:	movw	ip, #17
    6604:	str	ip, [sp]
    6608:	movw	ip, #0
    660c:	str	ip, [sp, #4]
    6610:	bl	0 <flatcc_json_printer_int32_field>
    6614:	ldr	r0, [fp, #-4]
    6618:	ldr	r1, [fp, #-8]
    661c:	movw	r2, #21
    6620:	movw	r3, #0
    6624:	movt	r3, #0
    6628:	movw	ip, #17
    662c:	str	ip, [sp]
    6630:	movw	ip, #0
    6634:	str	ip, [sp, #4]
    6638:	bl	0 <flatcc_json_printer_uint32_field>
    663c:	ldr	r0, [fp, #-4]
    6640:	ldr	r1, [fp, #-8]
    6644:	mov	r2, sp
    6648:	mov	r3, #0
    664c:	str	r3, [r2, #12]
    6650:	str	r3, [r2, #8]
    6654:	mov	r3, #17
    6658:	str	r3, [r2]
    665c:	movw	r3, #0
    6660:	movt	r3, #0
    6664:	mov	r2, #22
    6668:	bl	0 <flatcc_json_printer_int64_field>
    666c:	ldr	r0, [fp, #-4]
    6670:	ldr	r1, [fp, #-8]
    6674:	mov	r2, sp
    6678:	mov	r3, #0
    667c:	str	r3, [r2, #12]
    6680:	str	r3, [r2, #8]
    6684:	mov	r3, #17
    6688:	str	r3, [r2]
    668c:	movw	r3, #0
    6690:	movt	r3, #0
    6694:	mov	r2, #23
    6698:	bl	0 <flatcc_json_printer_uint64_field>
    669c:	ldr	r0, [fp, #-4]
    66a0:	ldr	r1, [fp, #-8]
    66a4:	movw	r2, #24
    66a8:	movw	r3, #0
    66ac:	movt	r3, #0
    66b0:	movw	ip, #16
    66b4:	str	ip, [sp]
    66b8:	bl	0 <flatcc_json_printer_bool_vector_field>
    66bc:	vldr	s0, [pc, #432]	; 6874 <MyGame_Example_Monster_print_json_table+0x5c0>
    66c0:	ldr	r0, [fp, #-4]
    66c4:	ldr	r1, [fp, #-8]
    66c8:	movw	r2, #25
    66cc:	movw	r3, #0
    66d0:	movt	r3, #0
    66d4:	movw	ip, #5
    66d8:	str	ip, [sp]
    66dc:	bl	0 <flatcc_json_printer_float_field>
    66e0:	ldr	r0, [fp, #-4]
    66e4:	ldr	r1, [fp, #-8]
    66e8:	movw	r2, #26
    66ec:	movw	r3, #0
    66f0:	movt	r3, #0
    66f4:	movw	ip, #6
    66f8:	str	ip, [sp]
    66fc:	vmov.f32	s0, #8	; 0x40400000  3.0
    6700:	bl	0 <flatcc_json_printer_float_field>
    6704:	vldr	s0, [pc, #356]	; 6870 <MyGame_Example_Monster_print_json_table+0x5bc>
    6708:	ldr	r0, [fp, #-4]
    670c:	ldr	r1, [fp, #-8]
    6710:	movw	r2, #27
    6714:	movw	r3, #0
    6718:	movt	r3, #0
    671c:	movw	ip, #6
    6720:	str	ip, [sp]
    6724:	bl	0 <flatcc_json_printer_float_field>
    6728:	ldr	r0, [fp, #-4]
    672c:	ldr	r1, [fp, #-8]
    6730:	movw	r2, #28
    6734:	movw	r3, #0
    6738:	movt	r3, #0
    673c:	movw	ip, #18
    6740:	str	ip, [sp]
    6744:	bl	0 <flatcc_json_printer_string_vector_field>
    6748:	ldr	r0, [fp, #-4]
    674c:	ldr	r1, [fp, #-8]
    6750:	movw	r2, #29
    6754:	movw	r3, #0
    6758:	movt	r3, #0
    675c:	movw	ip, #23
    6760:	str	ip, [sp]
    6764:	movw	ip, #8
    6768:	str	ip, [sp, #4]
    676c:	movw	ip, #0
    6770:	movt	ip, #0
    6774:	str	ip, [sp, #8]
    6778:	bl	0 <flatcc_json_printer_struct_vector_field>
    677c:	ldr	r0, [fp, #-4]
    6780:	ldr	r1, [fp, #-8]
    6784:	movw	r2, #30
    6788:	movw	r3, #0
    678c:	movt	r3, #0
    6790:	movw	ip, #4
    6794:	str	ip, [sp]
    6798:	bl	0 <flatcc_json_printer_uint8_vector_field>
    679c:	ldr	r0, [fp, #-4]
    67a0:	ldr	r1, [fp, #-8]
    67a4:	movw	r2, #31
    67a8:	movw	r3, #0
    67ac:	movt	r3, #0
    67b0:	movw	ip, #5
    67b4:	str	ip, [sp]
    67b8:	movw	ip, #4
    67bc:	str	ip, [sp, #4]
    67c0:	movw	ip, #0
    67c4:	movt	ip, #0
    67c8:	str	ip, [sp, #8]
    67cc:	bl	0 <flatcc_json_printer_struct_vector_field>
    67d0:	ldr	r0, [fp, #-4]
    67d4:	ldr	r1, [fp, #-8]
    67d8:	movw	r2, #32
    67dc:	movw	r3, #0
    67e0:	movt	r3, #0
    67e4:	movw	ip, #15
    67e8:	str	ip, [sp]
    67ec:	bl	0 <flatcc_json_printer_int64_vector_field>
    67f0:	ldr	r0, [fp, #-4]
    67f4:	ldr	r1, [fp, #-8]
    67f8:	movw	r2, #33	; 0x21
    67fc:	movw	r3, #0
    6800:	movt	r3, #0
    6804:	movw	ip, #17
    6808:	str	ip, [sp]
    680c:	bl	0 <flatcc_json_printer_double_vector_field>
    6810:	ldr	r0, [fp, #-4]
    6814:	ldr	r1, [fp, #-8]
    6818:	movw	r2, #34	; 0x22
    681c:	movw	r3, #0
    6820:	movt	r3, #0
    6824:	movw	ip, #21
    6828:	str	ip, [sp]
    682c:	movw	ip, #0
    6830:	movt	ip, #0
    6834:	str	ip, [sp, #4]
    6838:	bl	0 <flatcc_json_printer_table_field>
    683c:	ldr	r0, [fp, #-4]
    6840:	ldr	r1, [fp, #-8]
    6844:	movw	r2, #35	; 0x23
    6848:	movw	r3, #0
    684c:	movt	r3, #0
    6850:	movw	ip, #10
    6854:	str	ip, [sp]
    6858:	movw	ip, #0
    685c:	movt	ip, #0
    6860:	str	ip, [sp, #4]
    6864:	bl	0 <flatcc_json_printer_table_field>
    6868:	mov	sp, fp
    686c:	pop	{fp, pc}
    6870:	.word	0x00000000
    6874:	.word	0x489965e0

00006878 <MyGame_Example_Monster_verify_table>:
    6878:	push	{fp, lr}
    687c:	mov	fp, sp
    6880:	sub	sp, sp, #48	; 0x30
    6884:	str	r0, [fp, #-8]
    6888:	ldr	r0, [fp, #-8]
    688c:	movw	r1, #0
    6890:	uxth	r1, r1
    6894:	movw	r2, #32
    6898:	movw	r3, #16
    689c:	uxth	r3, r3
    68a0:	bl	0 <flatcc_verify_field>
    68a4:	str	r0, [fp, #-12]
    68a8:	cmp	r0, #0
    68ac:	beq	68bc <MyGame_Example_Monster_verify_table+0x44>
    68b0:	ldr	r0, [fp, #-12]
    68b4:	str	r0, [fp, #-4]
    68b8:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    68bc:	ldr	r0, [fp, #-8]
    68c0:	movw	r1, #2
    68c4:	uxth	r2, r1
    68c8:	str	r1, [fp, #-16]
    68cc:	mov	r1, r2
    68d0:	movw	r2, #2
    68d4:	ldr	r3, [fp, #-16]
    68d8:	uxth	r3, r3
    68dc:	bl	0 <flatcc_verify_field>
    68e0:	str	r0, [fp, #-12]
    68e4:	cmp	r0, #0
    68e8:	beq	68f8 <MyGame_Example_Monster_verify_table+0x80>
    68ec:	ldr	r0, [fp, #-12]
    68f0:	str	r0, [fp, #-4]
    68f4:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    68f8:	ldr	r0, [fp, #-8]
    68fc:	movw	r1, #1
    6900:	uxth	r1, r1
    6904:	movw	r2, #2
    6908:	movw	r3, #2
    690c:	uxth	r3, r3
    6910:	bl	0 <flatcc_verify_field>
    6914:	str	r0, [fp, #-12]
    6918:	cmp	r0, #0
    691c:	beq	692c <MyGame_Example_Monster_verify_table+0xb4>
    6920:	ldr	r0, [fp, #-12]
    6924:	str	r0, [fp, #-4]
    6928:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    692c:	ldr	r0, [fp, #-8]
    6930:	movw	r1, #3
    6934:	uxth	r1, r1
    6938:	movw	r2, #1
    693c:	bl	0 <flatcc_verify_string_field>
    6940:	str	r0, [fp, #-12]
    6944:	cmp	r0, #0
    6948:	beq	6958 <MyGame_Example_Monster_verify_table+0xe0>
    694c:	ldr	r0, [fp, #-12]
    6950:	str	r0, [fp, #-4]
    6954:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6958:	ldr	r0, [fp, #-8]
    695c:	movw	r1, #6
    6960:	uxth	r1, r1
    6964:	movw	r2, #1
    6968:	movw	r3, #1
    696c:	uxth	r3, r3
    6970:	bl	0 <flatcc_verify_field>
    6974:	str	r0, [fp, #-12]
    6978:	cmp	r0, #0
    697c:	beq	698c <MyGame_Example_Monster_verify_table+0x114>
    6980:	ldr	r0, [fp, #-12]
    6984:	str	r0, [fp, #-4]
    6988:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    698c:	ldr	r0, [fp, #-8]
    6990:	movw	r1, #5
    6994:	uxth	r1, r1
    6998:	movw	r2, #0
    699c:	movw	r3, #1
    69a0:	movw	ip, #1
    69a4:	uxth	ip, ip
    69a8:	str	ip, [sp]
    69ac:	mvn	ip, #0
    69b0:	str	ip, [sp, #4]
    69b4:	bl	0 <flatcc_verify_vector_field>
    69b8:	str	r0, [fp, #-12]
    69bc:	cmp	r0, #0
    69c0:	beq	69d0 <MyGame_Example_Monster_verify_table+0x158>
    69c4:	ldr	r0, [fp, #-12]
    69c8:	str	r0, [fp, #-4]
    69cc:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    69d0:	ldr	r0, [fp, #-8]
    69d4:	movw	r1, #11
    69d8:	uxth	r1, r1
    69dc:	movw	r2, #0
    69e0:	movw	r3, #0
    69e4:	movt	r3, #0
    69e8:	bl	0 <flatcc_verify_table_vector_field>
    69ec:	str	r0, [fp, #-12]
    69f0:	cmp	r0, #0
    69f4:	beq	6a04 <MyGame_Example_Monster_verify_table+0x18c>
    69f8:	ldr	r0, [fp, #-12]
    69fc:	str	r0, [fp, #-4]
    6a00:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6a04:	ldr	r0, [fp, #-8]
    6a08:	movw	r1, #10
    6a0c:	uxth	r1, r1
    6a10:	movw	r2, #0
    6a14:	bl	0 <flatcc_verify_string_vector_field>
    6a18:	str	r0, [fp, #-12]
    6a1c:	cmp	r0, #0
    6a20:	beq	6a30 <MyGame_Example_Monster_verify_table+0x1b8>
    6a24:	ldr	r0, [fp, #-12]
    6a28:	str	r0, [fp, #-4]
    6a2c:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6a30:	ldr	r0, [fp, #-8]
    6a34:	movw	r1, #28
    6a38:	uxth	r1, r1
    6a3c:	movw	r2, #0
    6a40:	bl	0 <flatcc_verify_string_vector_field>
    6a44:	str	r0, [fp, #-12]
    6a48:	cmp	r0, #0
    6a4c:	beq	6a5c <MyGame_Example_Monster_verify_table+0x1e4>
    6a50:	ldr	r0, [fp, #-12]
    6a54:	str	r0, [fp, #-4]
    6a58:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6a5c:	ldr	r0, [fp, #-8]
    6a60:	movw	r1, #24
    6a64:	uxth	r1, r1
    6a68:	movw	r2, #0
    6a6c:	movw	r3, #1
    6a70:	movw	ip, #1
    6a74:	uxth	ip, ip
    6a78:	str	ip, [sp]
    6a7c:	mvn	ip, #0
    6a80:	str	ip, [sp, #4]
    6a84:	bl	0 <flatcc_verify_vector_field>
    6a88:	str	r0, [fp, #-12]
    6a8c:	cmp	r0, #0
    6a90:	beq	6aa0 <MyGame_Example_Monster_verify_table+0x228>
    6a94:	ldr	r0, [fp, #-12]
    6a98:	str	r0, [fp, #-4]
    6a9c:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6aa0:	ldr	r0, [pc, #1440]	; 7048 <MyGame_Example_Monster_verify_table+0x7d0>
    6aa4:	ldr	r1, [fp, #-8]
    6aa8:	str	r0, [fp, #-20]	; 0xffffffec
    6aac:	mov	r0, r1
    6ab0:	movw	r1, #29
    6ab4:	uxth	r1, r1
    6ab8:	movw	r2, #0
    6abc:	movw	r3, #8
    6ac0:	movw	ip, #4
    6ac4:	uxth	ip, ip
    6ac8:	str	ip, [sp]
    6acc:	ldr	ip, [fp, #-20]	; 0xffffffec
    6ad0:	str	ip, [sp, #4]
    6ad4:	bl	0 <flatcc_verify_vector_field>
    6ad8:	str	r0, [fp, #-12]
    6adc:	cmp	r0, #0
    6ae0:	beq	6af0 <MyGame_Example_Monster_verify_table+0x278>
    6ae4:	ldr	r0, [fp, #-12]
    6ae8:	str	r0, [fp, #-4]
    6aec:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6af0:	ldr	r0, [fp, #-8]
    6af4:	movw	r1, #12
    6af8:	uxth	r1, r1
    6afc:	movw	r2, #0
    6b00:	movw	r3, #0
    6b04:	movt	r3, #0
    6b08:	bl	0 <flatcc_verify_table_field>
    6b0c:	str	r0, [fp, #-12]
    6b10:	cmp	r0, #0
    6b14:	beq	6b24 <MyGame_Example_Monster_verify_table+0x2ac>
    6b18:	ldr	r0, [fp, #-12]
    6b1c:	str	r0, [fp, #-4]
    6b20:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6b24:	ldr	r0, [fp, #-8]
    6b28:	movw	r1, #8
    6b2c:	uxth	r1, r1
    6b30:	movw	r2, #0
    6b34:	movw	r3, #0
    6b38:	movt	r3, #0
    6b3c:	bl	0 <flatcc_verify_union_field>
    6b40:	str	r0, [fp, #-12]
    6b44:	cmp	r0, #0
    6b48:	beq	6b58 <MyGame_Example_Monster_verify_table+0x2e0>
    6b4c:	ldr	r0, [fp, #-12]
    6b50:	str	r0, [fp, #-4]
    6b54:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6b58:	ldr	r0, [pc, #1260]	; 704c <MyGame_Example_Monster_verify_table+0x7d4>
    6b5c:	ldr	r1, [fp, #-8]
    6b60:	str	r0, [sp, #24]
    6b64:	mov	r0, r1
    6b68:	movw	r1, #9
    6b6c:	uxth	r1, r1
    6b70:	movw	r2, #0
    6b74:	movw	r3, #4
    6b78:	movw	ip, #2
    6b7c:	uxth	ip, ip
    6b80:	str	ip, [sp]
    6b84:	ldr	ip, [sp, #24]
    6b88:	str	ip, [sp, #4]
    6b8c:	bl	0 <flatcc_verify_vector_field>
    6b90:	str	r0, [fp, #-12]
    6b94:	cmp	r0, #0
    6b98:	beq	6ba8 <MyGame_Example_Monster_verify_table+0x330>
    6b9c:	ldr	r0, [fp, #-12]
    6ba0:	str	r0, [fp, #-4]
    6ba4:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6ba8:	ldr	r0, [pc, #1180]	; 704c <MyGame_Example_Monster_verify_table+0x7d4>
    6bac:	ldr	r1, [fp, #-8]
    6bb0:	str	r0, [sp, #20]
    6bb4:	mov	r0, r1
    6bb8:	movw	r1, #31
    6bbc:	uxth	r1, r1
    6bc0:	movw	r2, #0
    6bc4:	movw	r3, #4
    6bc8:	movw	ip, #2
    6bcc:	uxth	ip, ip
    6bd0:	str	ip, [sp]
    6bd4:	ldr	ip, [sp, #20]
    6bd8:	str	ip, [sp, #4]
    6bdc:	bl	0 <flatcc_verify_vector_field>
    6be0:	str	r0, [fp, #-12]
    6be4:	cmp	r0, #0
    6be8:	beq	6bf8 <MyGame_Example_Monster_verify_table+0x380>
    6bec:	ldr	r0, [fp, #-12]
    6bf0:	str	r0, [fp, #-4]
    6bf4:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6bf8:	ldr	r0, [fp, #-8]
    6bfc:	movw	r1, #13
    6c00:	uxth	r1, r1
    6c04:	movw	r2, #0
    6c08:	str	r2, [sp, #16]
    6c0c:	ldr	r3, [sp, #16]
    6c10:	movw	ip, #1
    6c14:	uxth	ip, ip
    6c18:	str	ip, [sp]
    6c1c:	movw	ip, #0
    6c20:	movt	ip, #0
    6c24:	str	ip, [sp, #4]
    6c28:	bl	0 <flatcc_verify_table_as_nested_root>
    6c2c:	str	r0, [fp, #-12]
    6c30:	cmp	r0, #0
    6c34:	beq	6c44 <MyGame_Example_Monster_verify_table+0x3cc>
    6c38:	ldr	r0, [fp, #-12]
    6c3c:	str	r0, [fp, #-4]
    6c40:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6c44:	ldr	r0, [fp, #-8]
    6c48:	movw	r1, #14
    6c4c:	uxth	r1, r1
    6c50:	movw	r2, #0
    6c54:	movw	r3, #0
    6c58:	movt	r3, #0
    6c5c:	bl	0 <flatcc_verify_table_field>
    6c60:	str	r0, [fp, #-12]
    6c64:	cmp	r0, #0
    6c68:	beq	6c78 <MyGame_Example_Monster_verify_table+0x400>
    6c6c:	ldr	r0, [fp, #-12]
    6c70:	str	r0, [fp, #-4]
    6c74:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6c78:	ldr	r0, [fp, #-8]
    6c7c:	movw	r1, #15
    6c80:	uxth	r1, r1
    6c84:	movw	r2, #1
    6c88:	movw	r3, #1
    6c8c:	uxth	r3, r3
    6c90:	bl	0 <flatcc_verify_field>
    6c94:	str	r0, [fp, #-12]
    6c98:	cmp	r0, #0
    6c9c:	beq	6cac <MyGame_Example_Monster_verify_table+0x434>
    6ca0:	ldr	r0, [fp, #-12]
    6ca4:	str	r0, [fp, #-4]
    6ca8:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6cac:	ldr	r0, [fp, #-8]
    6cb0:	movw	r1, #16
    6cb4:	uxth	r1, r1
    6cb8:	movw	r2, #4
    6cbc:	movw	r3, #4
    6cc0:	uxth	r3, r3
    6cc4:	bl	0 <flatcc_verify_field>
    6cc8:	str	r0, [fp, #-12]
    6ccc:	cmp	r0, #0
    6cd0:	beq	6ce0 <MyGame_Example_Monster_verify_table+0x468>
    6cd4:	ldr	r0, [fp, #-12]
    6cd8:	str	r0, [fp, #-4]
    6cdc:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6ce0:	ldr	r0, [fp, #-8]
    6ce4:	movw	r1, #17
    6ce8:	uxth	r1, r1
    6cec:	movw	r2, #4
    6cf0:	movw	r3, #4
    6cf4:	uxth	r3, r3
    6cf8:	bl	0 <flatcc_verify_field>
    6cfc:	str	r0, [fp, #-12]
    6d00:	cmp	r0, #0
    6d04:	beq	6d14 <MyGame_Example_Monster_verify_table+0x49c>
    6d08:	ldr	r0, [fp, #-12]
    6d0c:	str	r0, [fp, #-4]
    6d10:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6d14:	ldr	r0, [fp, #-8]
    6d18:	movw	r1, #18
    6d1c:	uxth	r1, r1
    6d20:	movw	r2, #8
    6d24:	movw	r3, #8
    6d28:	uxth	r3, r3
    6d2c:	bl	0 <flatcc_verify_field>
    6d30:	str	r0, [fp, #-12]
    6d34:	cmp	r0, #0
    6d38:	beq	6d48 <MyGame_Example_Monster_verify_table+0x4d0>
    6d3c:	ldr	r0, [fp, #-12]
    6d40:	str	r0, [fp, #-4]
    6d44:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6d48:	ldr	r0, [fp, #-8]
    6d4c:	movw	r1, #19
    6d50:	uxth	r1, r1
    6d54:	movw	r2, #8
    6d58:	movw	r3, #8
    6d5c:	uxth	r3, r3
    6d60:	bl	0 <flatcc_verify_field>
    6d64:	str	r0, [fp, #-12]
    6d68:	cmp	r0, #0
    6d6c:	beq	6d7c <MyGame_Example_Monster_verify_table+0x504>
    6d70:	ldr	r0, [fp, #-12]
    6d74:	str	r0, [fp, #-4]
    6d78:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6d7c:	ldr	r0, [fp, #-8]
    6d80:	movw	r1, #20
    6d84:	uxth	r1, r1
    6d88:	movw	r2, #4
    6d8c:	movw	r3, #4
    6d90:	uxth	r3, r3
    6d94:	bl	0 <flatcc_verify_field>
    6d98:	str	r0, [fp, #-12]
    6d9c:	cmp	r0, #0
    6da0:	beq	6db0 <MyGame_Example_Monster_verify_table+0x538>
    6da4:	ldr	r0, [fp, #-12]
    6da8:	str	r0, [fp, #-4]
    6dac:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6db0:	ldr	r0, [fp, #-8]
    6db4:	movw	r1, #21
    6db8:	uxth	r1, r1
    6dbc:	movw	r2, #4
    6dc0:	movw	r3, #4
    6dc4:	uxth	r3, r3
    6dc8:	bl	0 <flatcc_verify_field>
    6dcc:	str	r0, [fp, #-12]
    6dd0:	cmp	r0, #0
    6dd4:	beq	6de4 <MyGame_Example_Monster_verify_table+0x56c>
    6dd8:	ldr	r0, [fp, #-12]
    6ddc:	str	r0, [fp, #-4]
    6de0:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6de4:	ldr	r0, [fp, #-8]
    6de8:	movw	r1, #22
    6dec:	uxth	r1, r1
    6df0:	movw	r2, #8
    6df4:	movw	r3, #8
    6df8:	uxth	r3, r3
    6dfc:	bl	0 <flatcc_verify_field>
    6e00:	str	r0, [fp, #-12]
    6e04:	cmp	r0, #0
    6e08:	beq	6e18 <MyGame_Example_Monster_verify_table+0x5a0>
    6e0c:	ldr	r0, [fp, #-12]
    6e10:	str	r0, [fp, #-4]
    6e14:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6e18:	ldr	r0, [fp, #-8]
    6e1c:	movw	r1, #23
    6e20:	uxth	r1, r1
    6e24:	movw	r2, #8
    6e28:	movw	r3, #8
    6e2c:	uxth	r3, r3
    6e30:	bl	0 <flatcc_verify_field>
    6e34:	str	r0, [fp, #-12]
    6e38:	cmp	r0, #0
    6e3c:	beq	6e4c <MyGame_Example_Monster_verify_table+0x5d4>
    6e40:	ldr	r0, [fp, #-12]
    6e44:	str	r0, [fp, #-4]
    6e48:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6e4c:	ldr	r0, [fp, #-8]
    6e50:	movw	r1, #25
    6e54:	uxth	r1, r1
    6e58:	movw	r2, #4
    6e5c:	movw	r3, #4
    6e60:	uxth	r3, r3
    6e64:	bl	0 <flatcc_verify_field>
    6e68:	str	r0, [fp, #-12]
    6e6c:	cmp	r0, #0
    6e70:	beq	6e80 <MyGame_Example_Monster_verify_table+0x608>
    6e74:	ldr	r0, [fp, #-12]
    6e78:	str	r0, [fp, #-4]
    6e7c:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6e80:	ldr	r0, [fp, #-8]
    6e84:	movw	r1, #26
    6e88:	uxth	r1, r1
    6e8c:	movw	r2, #4
    6e90:	movw	r3, #4
    6e94:	uxth	r3, r3
    6e98:	bl	0 <flatcc_verify_field>
    6e9c:	str	r0, [fp, #-12]
    6ea0:	cmp	r0, #0
    6ea4:	beq	6eb4 <MyGame_Example_Monster_verify_table+0x63c>
    6ea8:	ldr	r0, [fp, #-12]
    6eac:	str	r0, [fp, #-4]
    6eb0:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6eb4:	ldr	r0, [fp, #-8]
    6eb8:	movw	r1, #27
    6ebc:	uxth	r1, r1
    6ec0:	movw	r2, #4
    6ec4:	movw	r3, #4
    6ec8:	uxth	r3, r3
    6ecc:	bl	0 <flatcc_verify_field>
    6ed0:	str	r0, [fp, #-12]
    6ed4:	cmp	r0, #0
    6ed8:	beq	6ee8 <MyGame_Example_Monster_verify_table+0x670>
    6edc:	ldr	r0, [fp, #-12]
    6ee0:	str	r0, [fp, #-4]
    6ee4:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6ee8:	ldr	r0, [fp, #-8]
    6eec:	movw	r1, #30
    6ef0:	uxth	r1, r1
    6ef4:	movw	r2, #0
    6ef8:	movw	r3, #1
    6efc:	movw	ip, #1
    6f00:	uxth	ip, ip
    6f04:	str	ip, [sp]
    6f08:	mvn	ip, #0
    6f0c:	str	ip, [sp, #4]
    6f10:	bl	0 <flatcc_verify_vector_field>
    6f14:	str	r0, [fp, #-12]
    6f18:	cmp	r0, #0
    6f1c:	beq	6f2c <MyGame_Example_Monster_verify_table+0x6b4>
    6f20:	ldr	r0, [fp, #-12]
    6f24:	str	r0, [fp, #-4]
    6f28:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6f2c:	ldr	r0, [pc, #276]	; 7048 <MyGame_Example_Monster_verify_table+0x7d0>
    6f30:	ldr	r1, [fp, #-8]
    6f34:	str	r0, [sp, #12]
    6f38:	mov	r0, r1
    6f3c:	movw	r1, #32
    6f40:	uxth	r1, r1
    6f44:	movw	r2, #0
    6f48:	movw	r3, #8
    6f4c:	movw	ip, #8
    6f50:	uxth	ip, ip
    6f54:	str	ip, [sp]
    6f58:	ldr	ip, [sp, #12]
    6f5c:	str	ip, [sp, #4]
    6f60:	bl	0 <flatcc_verify_vector_field>
    6f64:	str	r0, [fp, #-12]
    6f68:	cmp	r0, #0
    6f6c:	beq	6f7c <MyGame_Example_Monster_verify_table+0x704>
    6f70:	ldr	r0, [fp, #-12]
    6f74:	str	r0, [fp, #-4]
    6f78:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6f7c:	ldr	r0, [pc, #196]	; 7048 <MyGame_Example_Monster_verify_table+0x7d0>
    6f80:	ldr	r1, [fp, #-8]
    6f84:	str	r0, [sp, #8]
    6f88:	mov	r0, r1
    6f8c:	movw	r1, #33	; 0x21
    6f90:	uxth	r1, r1
    6f94:	movw	r2, #0
    6f98:	movw	r3, #8
    6f9c:	movw	ip, #8
    6fa0:	uxth	ip, ip
    6fa4:	str	ip, [sp]
    6fa8:	ldr	ip, [sp, #8]
    6fac:	str	ip, [sp, #4]
    6fb0:	bl	0 <flatcc_verify_vector_field>
    6fb4:	str	r0, [fp, #-12]
    6fb8:	cmp	r0, #0
    6fbc:	beq	6fcc <MyGame_Example_Monster_verify_table+0x754>
    6fc0:	ldr	r0, [fp, #-12]
    6fc4:	str	r0, [fp, #-4]
    6fc8:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    6fcc:	ldr	r0, [fp, #-8]
    6fd0:	movw	r1, #34	; 0x22
    6fd4:	uxth	r1, r1
    6fd8:	movw	r2, #0
    6fdc:	movw	r3, #0
    6fe0:	movt	r3, #0
    6fe4:	bl	0 <flatcc_verify_table_field>
    6fe8:	str	r0, [fp, #-12]
    6fec:	cmp	r0, #0
    6ff0:	beq	7000 <MyGame_Example_Monster_verify_table+0x788>
    6ff4:	ldr	r0, [fp, #-12]
    6ff8:	str	r0, [fp, #-4]
    6ffc:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    7000:	ldr	r0, [fp, #-8]
    7004:	movw	r1, #35	; 0x23
    7008:	uxth	r1, r1
    700c:	movw	r2, #0
    7010:	movw	r3, #0
    7014:	movt	r3, #0
    7018:	bl	0 <flatcc_verify_table_field>
    701c:	str	r0, [fp, #-12]
    7020:	cmp	r0, #0
    7024:	beq	7034 <MyGame_Example_Monster_verify_table+0x7bc>
    7028:	ldr	r0, [fp, #-12]
    702c:	str	r0, [fp, #-4]
    7030:	b	703c <MyGame_Example_Monster_verify_table+0x7c4>
    7034:	movw	r0, #0
    7038:	str	r0, [fp, #-4]
    703c:	ldr	r0, [fp, #-4]
    7040:	mov	sp, fp
    7044:	pop	{fp, pc}
    7048:	.word	0x1fffffff
    704c:	.word	0x3fffffff

00007050 <flatcc_json_parser_object_start>:
    7050:	push	{fp, lr}
    7054:	mov	fp, sp
    7058:	sub	sp, sp, #24
    705c:	str	r0, [fp, #-8]
    7060:	str	r1, [sp, #12]
    7064:	str	r2, [sp, #8]
    7068:	str	r3, [sp, #4]
    706c:	ldr	r0, [sp, #12]
    7070:	ldr	r1, [sp, #8]
    7074:	cmp	r0, r1
    7078:	beq	708c <flatcc_json_parser_object_start+0x3c>
    707c:	ldr	r0, [sp, #12]
    7080:	ldrb	r0, [r0]
    7084:	cmp	r0, #123	; 0x7b
    7088:	beq	70b4 <flatcc_json_parser_object_start+0x64>
    708c:	ldr	r0, [sp, #4]
    7090:	movw	r1, #0
    7094:	str	r1, [r0]
    7098:	ldr	r0, [fp, #-8]
    709c:	ldr	r1, [sp, #12]
    70a0:	ldr	r2, [sp, #8]
    70a4:	movw	r3, #21
    70a8:	bl	0 <flatcc_json_parser_set_error>
    70ac:	str	r0, [fp, #-4]
    70b0:	b	7128 <flatcc_json_parser_object_start+0xd8>
    70b4:	ldr	r0, [fp, #-8]
    70b8:	ldr	r1, [sp, #12]
    70bc:	add	r1, r1, #1
    70c0:	ldr	r2, [sp, #8]
    70c4:	bl	c698 <flatcc_json_parser_space>
    70c8:	str	r0, [sp, #12]
    70cc:	ldr	r0, [sp, #12]
    70d0:	ldr	r1, [sp, #8]
    70d4:	cmp	r0, r1
    70d8:	beq	7114 <flatcc_json_parser_object_start+0xc4>
    70dc:	ldr	r0, [sp, #12]
    70e0:	ldrb	r0, [r0]
    70e4:	cmp	r0, #125	; 0x7d
    70e8:	bne	7114 <flatcc_json_parser_object_start+0xc4>
    70ec:	ldr	r0, [sp, #4]
    70f0:	movw	r1, #0
    70f4:	str	r1, [r0]
    70f8:	ldr	r0, [fp, #-8]
    70fc:	ldr	r1, [sp, #12]
    7100:	add	r1, r1, #1
    7104:	ldr	r2, [sp, #8]
    7108:	bl	c698 <flatcc_json_parser_space>
    710c:	str	r0, [fp, #-4]
    7110:	b	7128 <flatcc_json_parser_object_start+0xd8>
    7114:	ldr	r0, [sp, #4]
    7118:	movw	r1, #1
    711c:	str	r1, [r0]
    7120:	ldr	r0, [sp, #12]
    7124:	str	r0, [fp, #-4]
    7128:	ldr	r0, [fp, #-4]
    712c:	mov	sp, fp
    7130:	pop	{fp, pc}

00007134 <flatcc_json_parser_symbol_start>:
    7134:	push	{fp, lr}
    7138:	mov	fp, sp
    713c:	sub	sp, sp, #16
    7140:	str	r0, [sp, #8]
    7144:	str	r1, [sp, #4]
    7148:	str	r2, [sp]
    714c:	ldr	r0, [sp, #4]
    7150:	ldr	r1, [sp]
    7154:	cmp	r0, r1
    7158:	bne	7168 <flatcc_json_parser_symbol_start+0x34>
    715c:	ldr	r0, [sp, #4]
    7160:	str	r0, [fp, #-4]
    7164:	b	71d4 <flatcc_json_parser_symbol_start+0xa0>
    7168:	ldr	r0, [sp, #4]
    716c:	ldrb	r0, [r0]
    7170:	cmp	r0, #34	; 0x22
    7174:	bne	7194 <flatcc_json_parser_symbol_start+0x60>
    7178:	ldr	r0, [sp, #4]
    717c:	add	r0, r0, #1
    7180:	str	r0, [sp, #4]
    7184:	ldr	r0, [sp, #8]
    7188:	movw	r1, #0
    718c:	str	r1, [r0, #12]
    7190:	b	71cc <flatcc_json_parser_symbol_start+0x98>
    7194:	ldr	r0, [sp, #4]
    7198:	ldrb	r0, [r0]
    719c:	cmp	r0, #46	; 0x2e
    71a0:	bne	71c0 <flatcc_json_parser_symbol_start+0x8c>
    71a4:	ldr	r0, [sp, #8]
    71a8:	ldr	r1, [sp, #4]
    71ac:	ldr	r2, [sp]
    71b0:	movw	r3, #5
    71b4:	bl	0 <flatcc_json_parser_set_error>
    71b8:	str	r0, [fp, #-4]
    71bc:	b	71d4 <flatcc_json_parser_symbol_start+0xa0>
    71c0:	ldr	r0, [sp, #8]
    71c4:	movw	r1, #1
    71c8:	str	r1, [r0, #12]
    71cc:	ldr	r0, [sp, #4]
    71d0:	str	r0, [fp, #-4]
    71d4:	ldr	r0, [fp, #-4]
    71d8:	mov	sp, fp
    71dc:	pop	{fp, pc}

000071e0 <flatcc_json_parser_symbol_part>:
    71e0:	push	{fp, lr}
    71e4:	mov	fp, sp
    71e8:	sub	sp, sp, #16
    71ec:	str	r0, [fp, #-4]
    71f0:	str	r1, [sp, #8]
    71f4:	ldr	r0, [sp, #8]
    71f8:	ldr	r1, [fp, #-4]
    71fc:	sub	r0, r0, r1
    7200:	str	r0, [sp, #4]
    7204:	ldr	r0, [fp, #-4]
    7208:	ldr	r1, [sp, #8]
    720c:	bl	c734 <flatcc_json_parser_symbol_part_ext>
    7210:	mov	sp, fp
    7214:	pop	{fp, pc}

00007218 <flatcc_json_parser_match_symbol>:
    7218:	push	{fp, lr}
    721c:	mov	fp, sp
    7220:	sub	sp, sp, #24
    7224:	str	r0, [fp, #-8]
    7228:	str	r1, [sp, #12]
    722c:	str	r2, [sp, #8]
    7230:	str	r3, [sp, #4]
    7234:	ldr	r0, [sp, #12]
    7238:	str	r0, [sp]
    723c:	ldr	r0, [sp, #8]
    7240:	ldr	r1, [sp, #12]
    7244:	sub	r0, r0, r1
    7248:	ldr	r1, [sp, #4]
    724c:	cmp	r0, r1
    7250:	bgt	7260 <flatcc_json_parser_match_symbol+0x48>
    7254:	ldr	r0, [sp]
    7258:	str	r0, [fp, #-4]
    725c:	b	7374 <flatcc_json_parser_match_symbol+0x15c>
    7260:	ldr	r0, [fp, #-8]
    7264:	ldr	r0, [r0, #12]
    7268:	cmp	r0, #0
    726c:	beq	72cc <flatcc_json_parser_match_symbol+0xb4>
    7270:	ldr	r0, [sp, #12]
    7274:	ldr	r1, [sp, #4]
    7278:	add	r0, r0, r1
    727c:	ldrb	r0, [r0]
    7280:	cmp	r0, #32
    7284:	ble	72ac <flatcc_json_parser_match_symbol+0x94>
    7288:	ldr	r0, [sp, #12]
    728c:	ldr	r1, [sp, #4]
    7290:	add	r0, r0, r1
    7294:	ldrb	r0, [r0]
    7298:	cmp	r0, #58	; 0x3a
    729c:	beq	72ac <flatcc_json_parser_match_symbol+0x94>
    72a0:	ldr	r0, [sp]
    72a4:	str	r0, [fp, #-4]
    72a8:	b	7374 <flatcc_json_parser_match_symbol+0x15c>
    72ac:	ldr	r0, [sp, #4]
    72b0:	ldr	r1, [sp, #12]
    72b4:	add	r0, r1, r0
    72b8:	str	r0, [sp, #12]
    72bc:	ldr	r0, [fp, #-8]
    72c0:	movw	r1, #0
    72c4:	str	r1, [r0, #12]
    72c8:	b	7304 <flatcc_json_parser_match_symbol+0xec>
    72cc:	ldr	r0, [sp, #12]
    72d0:	ldr	r1, [sp, #4]
    72d4:	add	r0, r0, r1
    72d8:	ldrb	r0, [r0]
    72dc:	cmp	r0, #34	; 0x22
    72e0:	beq	72f0 <flatcc_json_parser_match_symbol+0xd8>
    72e4:	ldr	r0, [sp]
    72e8:	str	r0, [fp, #-4]
    72ec:	b	7374 <flatcc_json_parser_match_symbol+0x15c>
    72f0:	ldr	r0, [sp, #4]
    72f4:	add	r0, r0, #1
    72f8:	ldr	r1, [sp, #12]
    72fc:	add	r0, r1, r0
    7300:	str	r0, [sp, #12]
    7304:	ldr	r0, [fp, #-8]
    7308:	ldr	r1, [sp, #12]
    730c:	ldr	r2, [sp, #8]
    7310:	bl	c698 <flatcc_json_parser_space>
    7314:	str	r0, [sp, #12]
    7318:	ldr	r0, [sp, #12]
    731c:	ldr	r1, [sp, #8]
    7320:	cmp	r0, r1
    7324:	beq	735c <flatcc_json_parser_match_symbol+0x144>
    7328:	ldr	r0, [sp, #12]
    732c:	ldrb	r0, [r0]
    7330:	cmp	r0, #58	; 0x3a
    7334:	bne	735c <flatcc_json_parser_match_symbol+0x144>
    7338:	ldr	r0, [sp, #12]
    733c:	add	r0, r0, #1
    7340:	str	r0, [sp, #12]
    7344:	ldr	r0, [fp, #-8]
    7348:	ldr	r1, [sp, #12]
    734c:	ldr	r2, [sp, #8]
    7350:	bl	c698 <flatcc_json_parser_space>
    7354:	str	r0, [fp, #-4]
    7358:	b	7374 <flatcc_json_parser_match_symbol+0x15c>
    735c:	ldr	r0, [fp, #-8]
    7360:	ldr	r1, [sp, #12]
    7364:	ldr	r2, [sp, #8]
    7368:	movw	r3, #4
    736c:	bl	0 <flatcc_json_parser_set_error>
    7370:	str	r0, [fp, #-4]
    7374:	ldr	r0, [fp, #-4]
    7378:	mov	sp, fp
    737c:	pop	{fp, pc}

00007380 <MyGame_Example_Color_parse_json_enum>:
    7380:	push	{fp, lr}
    7384:	mov	fp, sp
    7388:	sub	sp, sp, #72	; 0x48
    738c:	ldr	ip, [fp, #12]
    7390:	ldr	lr, [fp, #8]
    7394:	str	r0, [fp, #-8]
    7398:	str	r1, [fp, #-12]
    739c:	str	r2, [fp, #-16]
    73a0:	str	r3, [fp, #-20]	; 0xffffffec
    73a4:	ldr	r0, [fp, #-12]
    73a8:	str	r0, [fp, #-24]	; 0xffffffe8
    73ac:	ldr	r0, [fp, #-12]
    73b0:	ldr	r1, [fp, #-16]
    73b4:	str	lr, [sp, #28]
    73b8:	str	ip, [sp, #24]
    73bc:	bl	71e0 <flatcc_json_parser_symbol_part>
    73c0:	str	r1, [sp, #36]	; 0x24
    73c4:	str	r0, [sp, #32]
    73c8:	ldr	r0, [sp, #32]
    73cc:	ldr	r1, [sp, #36]	; 0x24
    73d0:	mvn	r2, #-1845493760	; 0x92000000
    73d4:	subs	r0, r2, r0
    73d8:	movw	r2, #25957	; 0x6565
    73dc:	movt	r2, #18290	; 0x4772
    73e0:	sbcs	r1, r2, r1
    73e4:	str	r0, [sp, #20]
    73e8:	str	r1, [sp, #16]
    73ec:	bcc	7490 <MyGame_Example_Color_parse_json_enum+0x110>
    73f0:	b	73f4 <MyGame_Example_Color_parse_json_enum+0x74>
    73f4:	ldr	r0, [sp, #36]	; 0x24
    73f8:	movw	r1, #30053	; 0x7565
    73fc:	movt	r1, #17004	; 0x426c
    7400:	teq	r0, r1
    7404:	bne	7480 <MyGame_Example_Color_parse_json_enum+0x100>
    7408:	b	740c <MyGame_Example_Color_parse_json_enum+0x8c>
    740c:	ldr	r0, [fp, #-8]
    7410:	ldr	r1, [fp, #-12]
    7414:	str	r1, [fp, #-28]	; 0xffffffe4
    7418:	ldr	r2, [fp, #-16]
    741c:	ldr	r3, [fp, #12]
    7420:	movw	ip, #4
    7424:	str	r3, [sp, #12]
    7428:	mov	r3, ip
    742c:	ldr	ip, [sp, #12]
    7430:	str	ip, [sp]
    7434:	bl	0 <flatcc_json_parser_match_constant>
    7438:	str	r0, [fp, #-12]
    743c:	ldr	r0, [fp, #-12]
    7440:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7444:	cmp	r0, r1
    7448:	beq	7470 <MyGame_Example_Color_parse_json_enum+0xf0>
    744c:	ldr	r0, [fp, #8]
    7450:	mov	r1, #0
    7454:	str	r1, [r0, #4]
    7458:	mov	r1, #8
    745c:	str	r1, [r0]
    7460:	ldr	r0, [fp, #-20]	; 0xffffffec
    7464:	movw	r1, #0
    7468:	str	r1, [r0]
    746c:	b	747c <MyGame_Example_Color_parse_json_enum+0xfc>
    7470:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7474:	str	r0, [fp, #-4]
    7478:	b	75dc <MyGame_Example_Color_parse_json_enum+0x25c>
    747c:	b	748c <MyGame_Example_Color_parse_json_enum+0x10c>
    7480:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7484:	str	r0, [fp, #-4]
    7488:	b	75dc <MyGame_Example_Color_parse_json_enum+0x25c>
    748c:	b	75d4 <MyGame_Example_Color_parse_json_enum+0x254>
    7490:	ldr	r0, [sp, #36]	; 0x24
    7494:	bic	r0, r0, #255	; 0xff
    7498:	movw	r1, #25600	; 0x6400
    749c:	movt	r1, #21093	; 0x5265
    74a0:	teq	r0, r1
    74a4:	bne	7520 <MyGame_Example_Color_parse_json_enum+0x1a0>
    74a8:	b	74ac <MyGame_Example_Color_parse_json_enum+0x12c>
    74ac:	ldr	r0, [fp, #-8]
    74b0:	ldr	r1, [fp, #-12]
    74b4:	str	r1, [fp, #-28]	; 0xffffffe4
    74b8:	ldr	r2, [fp, #-16]
    74bc:	ldr	r3, [fp, #12]
    74c0:	movw	ip, #3
    74c4:	str	r3, [sp, #8]
    74c8:	mov	r3, ip
    74cc:	ldr	ip, [sp, #8]
    74d0:	str	ip, [sp]
    74d4:	bl	0 <flatcc_json_parser_match_constant>
    74d8:	str	r0, [fp, #-12]
    74dc:	ldr	r0, [fp, #-12]
    74e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    74e4:	cmp	r0, r1
    74e8:	beq	7510 <MyGame_Example_Color_parse_json_enum+0x190>
    74ec:	ldr	r0, [fp, #8]
    74f0:	mov	r1, #0
    74f4:	str	r1, [r0, #4]
    74f8:	mov	r1, #1
    74fc:	str	r1, [r0]
    7500:	ldr	r0, [fp, #-20]	; 0xffffffec
    7504:	movw	r1, #0
    7508:	str	r1, [r0]
    750c:	b	751c <MyGame_Example_Color_parse_json_enum+0x19c>
    7510:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7514:	str	r0, [fp, #-4]
    7518:	b	75dc <MyGame_Example_Color_parse_json_enum+0x25c>
    751c:	b	75d0 <MyGame_Example_Color_parse_json_enum+0x250>
    7520:	ldr	r0, [sp, #32]
    7524:	ldr	r1, [sp, #36]	; 0x24
    7528:	and	r0, r0, #-16777216	; 0xff000000
    752c:	movw	r2, #25957	; 0x6565
    7530:	movt	r2, #18290	; 0x4772
    7534:	eor	r1, r1, r2
    7538:	eor	r0, r0, #1845493760	; 0x6e000000
    753c:	orr	r0, r0, r1
    7540:	cmp	r0, #0
    7544:	bne	75c0 <MyGame_Example_Color_parse_json_enum+0x240>
    7548:	b	754c <MyGame_Example_Color_parse_json_enum+0x1cc>
    754c:	ldr	r0, [fp, #-8]
    7550:	ldr	r1, [fp, #-12]
    7554:	str	r1, [fp, #-28]	; 0xffffffe4
    7558:	ldr	r2, [fp, #-16]
    755c:	ldr	r3, [fp, #12]
    7560:	movw	ip, #5
    7564:	str	r3, [sp, #4]
    7568:	mov	r3, ip
    756c:	ldr	ip, [sp, #4]
    7570:	str	ip, [sp]
    7574:	bl	0 <flatcc_json_parser_match_constant>
    7578:	str	r0, [fp, #-12]
    757c:	ldr	r0, [fp, #-12]
    7580:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7584:	cmp	r0, r1
    7588:	beq	75b0 <MyGame_Example_Color_parse_json_enum+0x230>
    758c:	ldr	r0, [fp, #8]
    7590:	mov	r1, #0
    7594:	str	r1, [r0, #4]
    7598:	mov	r1, #2
    759c:	str	r1, [r0]
    75a0:	ldr	r0, [fp, #-20]	; 0xffffffec
    75a4:	movw	r1, #0
    75a8:	str	r1, [r0]
    75ac:	b	75bc <MyGame_Example_Color_parse_json_enum+0x23c>
    75b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    75b4:	str	r0, [fp, #-4]
    75b8:	b	75dc <MyGame_Example_Color_parse_json_enum+0x25c>
    75bc:	b	75cc <MyGame_Example_Color_parse_json_enum+0x24c>
    75c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    75c4:	str	r0, [fp, #-4]
    75c8:	b	75dc <MyGame_Example_Color_parse_json_enum+0x25c>
    75cc:	b	75d0 <MyGame_Example_Color_parse_json_enum+0x250>
    75d0:	b	75d4 <MyGame_Example_Color_parse_json_enum+0x254>
    75d4:	ldr	r0, [fp, #-12]
    75d8:	str	r0, [fp, #-4]
    75dc:	ldr	r0, [fp, #-4]
    75e0:	mov	sp, fp
    75e4:	pop	{fp, pc}

000075e8 <monster_test_local_MyGame_Example_json_parser_enum>:
    75e8:	push	{fp, lr}
    75ec:	mov	fp, sp
    75f0:	sub	sp, sp, #88	; 0x58
    75f4:	ldr	ip, [fp, #12]
    75f8:	ldr	lr, [fp, #8]
    75fc:	str	r0, [fp, #-8]
    7600:	str	r1, [fp, #-12]
    7604:	str	r2, [fp, #-16]
    7608:	str	r3, [fp, #-20]	; 0xffffffec
    760c:	ldr	r0, [fp, #-12]
    7610:	str	r0, [fp, #-24]	; 0xffffffe8
    7614:	ldr	r0, [fp, #-12]
    7618:	ldr	r1, [fp, #-16]
    761c:	str	lr, [sp, #44]	; 0x2c
    7620:	str	ip, [sp, #40]	; 0x28
    7624:	bl	71e0 <flatcc_json_parser_symbol_part>
    7628:	str	r1, [fp, #-36]	; 0xffffffdc
    762c:	str	r0, [fp, #-40]	; 0xffffffd8
    7630:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7634:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7638:	movw	r2, #30060	; 0x756c
    763c:	movt	r2, #25966	; 0x656e
    7640:	subs	r0, r2, r0
    7644:	movw	r2, #30815	; 0x785f
    7648:	movt	r2, #26725	; 0x6865
    764c:	sbcs	r1, r2, r1
    7650:	str	r0, [sp, #36]	; 0x24
    7654:	str	r1, [sp, #32]
    7658:	bcc	7850 <monster_test_local_MyGame_Example_json_parser_enum+0x268>
    765c:	b	7660 <monster_test_local_MyGame_Example_json_parser_enum+0x78>
    7660:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7664:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7668:	mvn	r2, #-1912602624	; 0x8e000000
    766c:	subs	r0, r2, r0
    7670:	movw	r2, #27759	; 0x6c6f
    7674:	movt	r2, #17263	; 0x436f
    7678:	sbcs	r1, r2, r1
    767c:	str	r0, [sp, #28]
    7680:	str	r1, [sp, #24]
    7684:	bcc	7720 <monster_test_local_MyGame_Example_json_parser_enum+0x138>
    7688:	b	768c <monster_test_local_MyGame_Example_json_parser_enum+0xa4>
    768c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7690:	bic	r0, r0, #255	; 0xff
    7694:	movw	r1, #30976	; 0x7900
    7698:	movt	r1, #16750	; 0x416e
    769c:	teq	r0, r1
    76a0:	bne	7710 <monster_test_local_MyGame_Example_json_parser_enum+0x128>
    76a4:	b	76a8 <monster_test_local_MyGame_Example_json_parser_enum+0xc0>
    76a8:	ldr	r0, [fp, #-8]
    76ac:	ldr	r1, [fp, #-12]
    76b0:	str	r1, [fp, #-28]	; 0xffffffe4
    76b4:	ldr	r2, [fp, #-16]
    76b8:	movw	r3, #3
    76bc:	bl	c8a8 <flatcc_json_parser_match_scope>
    76c0:	str	r0, [fp, #-12]
    76c4:	ldr	r0, [fp, #-12]
    76c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    76cc:	cmp	r0, r1
    76d0:	beq	7700 <monster_test_local_MyGame_Example_json_parser_enum+0x118>
    76d4:	ldr	r0, [fp, #-8]
    76d8:	ldr	r1, [fp, #-12]
    76dc:	ldr	r2, [fp, #-16]
    76e0:	ldr	r3, [fp, #-20]	; 0xffffffec
    76e4:	ldr	ip, [fp, #8]
    76e8:	ldr	lr, [fp, #12]
    76ec:	str	ip, [sp]
    76f0:	str	lr, [sp, #4]
    76f4:	bl	9ff8 <MyGame_Example_Any_parse_json_enum>
    76f8:	str	r0, [fp, #-12]
    76fc:	b	770c <monster_test_local_MyGame_Example_json_parser_enum+0x124>
    7700:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7704:	str	r0, [fp, #-4]
    7708:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    770c:	b	771c <monster_test_local_MyGame_Example_json_parser_enum+0x134>
    7710:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7714:	str	r0, [fp, #-4]
    7718:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    771c:	b	784c <monster_test_local_MyGame_Example_json_parser_enum+0x264>
    7720:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7724:	bic	r0, r0, #255	; 0xff
    7728:	movw	r1, #28416	; 0x6f00
    772c:	movt	r1, #18031	; 0x466f
    7730:	teq	r0, r1
    7734:	bne	77a4 <monster_test_local_MyGame_Example_json_parser_enum+0x1bc>
    7738:	b	773c <monster_test_local_MyGame_Example_json_parser_enum+0x154>
    773c:	ldr	r0, [fp, #-8]
    7740:	ldr	r1, [fp, #-12]
    7744:	str	r1, [fp, #-28]	; 0xffffffe4
    7748:	ldr	r2, [fp, #-16]
    774c:	movw	r3, #3
    7750:	bl	c8a8 <flatcc_json_parser_match_scope>
    7754:	str	r0, [fp, #-12]
    7758:	ldr	r0, [fp, #-12]
    775c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7760:	cmp	r0, r1
    7764:	beq	7794 <monster_test_local_MyGame_Example_json_parser_enum+0x1ac>
    7768:	ldr	r0, [fp, #-8]
    776c:	ldr	r1, [fp, #-12]
    7770:	ldr	r2, [fp, #-16]
    7774:	ldr	r3, [fp, #-20]	; 0xffffffec
    7778:	ldr	ip, [fp, #8]
    777c:	ldr	lr, [fp, #12]
    7780:	str	ip, [sp]
    7784:	str	lr, [sp, #4]
    7788:	bl	c92c <MyGame_Example_Foo_parse_json_enum>
    778c:	str	r0, [fp, #-12]
    7790:	b	77a0 <monster_test_local_MyGame_Example_json_parser_enum+0x1b8>
    7794:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7798:	str	r0, [fp, #-4]
    779c:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    77a0:	b	7848 <monster_test_local_MyGame_Example_json_parser_enum+0x260>
    77a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    77a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    77ac:	and	r0, r0, #-16777216	; 0xff000000
    77b0:	movw	r2, #27759	; 0x6c6f
    77b4:	movt	r2, #17263	; 0x436f
    77b8:	eor	r1, r1, r2
    77bc:	eor	r0, r0, #1912602624	; 0x72000000
    77c0:	orr	r0, r0, r1
    77c4:	cmp	r0, #0
    77c8:	bne	7838 <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    77cc:	b	77d0 <monster_test_local_MyGame_Example_json_parser_enum+0x1e8>
    77d0:	ldr	r0, [fp, #-8]
    77d4:	ldr	r1, [fp, #-12]
    77d8:	str	r1, [fp, #-28]	; 0xffffffe4
    77dc:	ldr	r2, [fp, #-16]
    77e0:	movw	r3, #5
    77e4:	bl	c8a8 <flatcc_json_parser_match_scope>
    77e8:	str	r0, [fp, #-12]
    77ec:	ldr	r0, [fp, #-12]
    77f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    77f4:	cmp	r0, r1
    77f8:	beq	7828 <monster_test_local_MyGame_Example_json_parser_enum+0x240>
    77fc:	ldr	r0, [fp, #-8]
    7800:	ldr	r1, [fp, #-12]
    7804:	ldr	r2, [fp, #-16]
    7808:	ldr	r3, [fp, #-20]	; 0xffffffec
    780c:	ldr	ip, [fp, #8]
    7810:	ldr	lr, [fp, #12]
    7814:	str	ip, [sp]
    7818:	str	lr, [sp, #4]
    781c:	bl	7380 <MyGame_Example_Color_parse_json_enum>
    7820:	str	r0, [fp, #-12]
    7824:	b	7834 <monster_test_local_MyGame_Example_json_parser_enum+0x24c>
    7828:	ldr	r0, [fp, #-24]	; 0xffffffe8
    782c:	str	r0, [fp, #-4]
    7830:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7834:	b	7844 <monster_test_local_MyGame_Example_json_parser_enum+0x25c>
    7838:	ldr	r0, [fp, #-24]	; 0xffffffe8
    783c:	str	r0, [fp, #-4]
    7840:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7844:	b	7848 <monster_test_local_MyGame_Example_json_parser_enum+0x260>
    7848:	b	784c <monster_test_local_MyGame_Example_json_parser_enum+0x264>
    784c:	b	7b94 <monster_test_local_MyGame_Example_json_parser_enum+0x5ac>
    7850:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7854:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7858:	movw	r2, #30060	; 0x756c
    785c:	movt	r2, #25966	; 0x656e
    7860:	subs	r0, r2, r0
    7864:	movw	r2, #29791	; 0x745f
    7868:	movt	r2, #26990	; 0x696e
    786c:	sbcs	r1, r2, r1
    7870:	str	r0, [sp, #20]
    7874:	str	r1, [sp, #16]
    7878:	bcc	7928 <monster_test_local_MyGame_Example_json_parser_enum+0x340>
    787c:	b	7880 <monster_test_local_MyGame_Example_json_parser_enum+0x298>
    7880:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7884:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7888:	movw	r2, #30815	; 0x785f
    788c:	movt	r2, #26725	; 0x6865
    7890:	eor	r1, r1, r2
    7894:	movw	r2, #30061	; 0x756d
    7898:	movt	r2, #25966	; 0x656e
    789c:	eor	r0, r0, r2
    78a0:	orr	r0, r0, r1
    78a4:	cmp	r0, #0
    78a8:	bne	7918 <monster_test_local_MyGame_Example_json_parser_enum+0x330>
    78ac:	b	78b0 <monster_test_local_MyGame_Example_json_parser_enum+0x2c8>
    78b0:	ldr	r0, [fp, #-8]
    78b4:	ldr	r1, [fp, #-12]
    78b8:	str	r1, [fp, #-28]	; 0xffffffe4
    78bc:	ldr	r2, [fp, #-16]
    78c0:	movw	r3, #8
    78c4:	bl	c8a8 <flatcc_json_parser_match_scope>
    78c8:	str	r0, [fp, #-12]
    78cc:	ldr	r0, [fp, #-12]
    78d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    78d4:	cmp	r0, r1
    78d8:	beq	7908 <monster_test_local_MyGame_Example_json_parser_enum+0x320>
    78dc:	ldr	r0, [fp, #-8]
    78e0:	ldr	r1, [fp, #-12]
    78e4:	ldr	r2, [fp, #-16]
    78e8:	ldr	r3, [fp, #-20]	; 0xffffffec
    78ec:	ldr	ip, [fp, #8]
    78f0:	ldr	lr, [fp, #12]
    78f4:	str	ip, [sp]
    78f8:	str	lr, [sp, #4]
    78fc:	bl	cb68 <MyGame_Example_hex_enum_parse_json_enum>
    7900:	str	r0, [fp, #-12]
    7904:	b	7914 <monster_test_local_MyGame_Example_json_parser_enum+0x32c>
    7908:	ldr	r0, [fp, #-24]	; 0xffffffe8
    790c:	str	r0, [fp, #-4]
    7910:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7914:	b	7924 <monster_test_local_MyGame_Example_json_parser_enum+0x33c>
    7918:	ldr	r0, [fp, #-24]	; 0xffffffe8
    791c:	str	r0, [fp, #-4]
    7920:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7924:	b	7b90 <monster_test_local_MyGame_Example_json_parser_enum+0x5a8>
    7928:	ldr	r0, [fp, #-40]	; 0xffffffd8
    792c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7930:	movw	r2, #30060	; 0x756c
    7934:	movt	r2, #25966	; 0x656e
    7938:	subs	r0, r2, r0
    793c:	movw	r2, #26463	; 0x675f
    7940:	movt	r2, #28261	; 0x6e65
    7944:	sbcs	r1, r2, r1
    7948:	str	r0, [sp, #12]
    794c:	str	r1, [sp, #8]
    7950:	bcc	7a00 <monster_test_local_MyGame_Example_json_parser_enum+0x418>
    7954:	b	7958 <monster_test_local_MyGame_Example_json_parser_enum+0x370>
    7958:	ldr	r0, [fp, #-40]	; 0xffffffd8
    795c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7960:	movw	r2, #29791	; 0x745f
    7964:	movt	r2, #26990	; 0x696e
    7968:	eor	r1, r1, r2
    796c:	movw	r2, #30061	; 0x756d
    7970:	movt	r2, #25966	; 0x656e
    7974:	eor	r0, r0, r2
    7978:	orr	r0, r0, r1
    797c:	cmp	r0, #0
    7980:	bne	79f0 <monster_test_local_MyGame_Example_json_parser_enum+0x408>
    7984:	b	7988 <monster_test_local_MyGame_Example_json_parser_enum+0x3a0>
    7988:	ldr	r0, [fp, #-8]
    798c:	ldr	r1, [fp, #-12]
    7990:	str	r1, [fp, #-28]	; 0xffffffe4
    7994:	ldr	r2, [fp, #-16]
    7998:	movw	r3, #8
    799c:	bl	c8a8 <flatcc_json_parser_match_scope>
    79a0:	str	r0, [fp, #-12]
    79a4:	ldr	r0, [fp, #-12]
    79a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    79ac:	cmp	r0, r1
    79b0:	beq	79e0 <monster_test_local_MyGame_Example_json_parser_enum+0x3f8>
    79b4:	ldr	r0, [fp, #-8]
    79b8:	ldr	r1, [fp, #-12]
    79bc:	ldr	r2, [fp, #-16]
    79c0:	ldr	r3, [fp, #-20]	; 0xffffffec
    79c4:	ldr	ip, [fp, #8]
    79c8:	ldr	lr, [fp, #12]
    79cc:	str	ip, [sp]
    79d0:	str	lr, [sp, #4]
    79d4:	bl	cdc0 <MyGame_Example_int_enum_parse_json_enum>
    79d8:	str	r0, [fp, #-12]
    79dc:	b	79ec <monster_test_local_MyGame_Example_json_parser_enum+0x404>
    79e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    79e4:	str	r0, [fp, #-4]
    79e8:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    79ec:	b	79fc <monster_test_local_MyGame_Example_json_parser_enum+0x414>
    79f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    79f4:	str	r0, [fp, #-4]
    79f8:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    79fc:	b	7b8c <monster_test_local_MyGame_Example_json_parser_enum+0x5a4>
    7a00:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7a04:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7a08:	movw	r2, #26463	; 0x675f
    7a0c:	movt	r2, #28261	; 0x6e65
    7a10:	eor	r1, r1, r2
    7a14:	movw	r2, #30061	; 0x756d
    7a18:	movt	r2, #25966	; 0x656e
    7a1c:	eor	r0, r0, r2
    7a20:	orr	r0, r0, r1
    7a24:	cmp	r0, #0
    7a28:	bne	7a90 <monster_test_local_MyGame_Example_json_parser_enum+0x4a8>
    7a2c:	b	7a30 <monster_test_local_MyGame_Example_json_parser_enum+0x448>
    7a30:	ldr	r0, [fp, #-8]
    7a34:	ldr	r1, [fp, #-12]
    7a38:	str	r1, [fp, #-28]	; 0xffffffe4
    7a3c:	ldr	r2, [fp, #-16]
    7a40:	movw	r3, #8
    7a44:	bl	c8a8 <flatcc_json_parser_match_scope>
    7a48:	str	r0, [fp, #-12]
    7a4c:	ldr	r0, [fp, #-12]
    7a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7a54:	cmp	r0, r1
    7a58:	beq	7a88 <monster_test_local_MyGame_Example_json_parser_enum+0x4a0>
    7a5c:	ldr	r0, [fp, #-8]
    7a60:	ldr	r1, [fp, #-12]
    7a64:	ldr	r2, [fp, #-16]
    7a68:	ldr	r3, [fp, #-20]	; 0xffffffec
    7a6c:	ldr	ip, [fp, #8]
    7a70:	ldr	lr, [fp, #12]
    7a74:	str	ip, [sp]
    7a78:	str	lr, [sp, #4]
    7a7c:	bl	d100 <MyGame_Example_neg_enum_parse_json_enum>
    7a80:	str	r0, [fp, #-12]
    7a84:	b	7a8c <monster_test_local_MyGame_Example_json_parser_enum+0x4a4>
    7a88:	b	7a98 <monster_test_local_MyGame_Example_json_parser_enum+0x4b0>
    7a8c:	b	7a94 <monster_test_local_MyGame_Example_json_parser_enum+0x4ac>
    7a90:	b	7a98 <monster_test_local_MyGame_Example_json_parser_enum+0x4b0>
    7a94:	b	7b88 <monster_test_local_MyGame_Example_json_parser_enum+0x5a0>
    7a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7a9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7aa0:	movw	r2, #29797	; 0x7465
    7aa4:	movt	r2, #28271	; 0x6e6f
    7aa8:	eor	r1, r1, r2
    7aac:	movw	r2, #29817	; 0x7479
    7ab0:	movt	r2, #28016	; 0x6d70
    7ab4:	eor	r0, r0, r2
    7ab8:	orr	r0, r0, r1
    7abc:	cmp	r0, #0
    7ac0:	bne	7b78 <monster_test_local_MyGame_Example_json_parser_enum+0x590>
    7ac4:	b	7ac8 <monster_test_local_MyGame_Example_json_parser_enum+0x4e0>
    7ac8:	ldr	r0, [fp, #-12]
    7acc:	add	r0, r0, #8
    7ad0:	str	r0, [fp, #-12]
    7ad4:	ldr	r0, [fp, #-12]
    7ad8:	ldr	r1, [fp, #-16]
    7adc:	bl	71e0 <flatcc_json_parser_symbol_part>
    7ae0:	str	r1, [fp, #-36]	; 0xffffffdc
    7ae4:	str	r0, [fp, #-40]	; 0xffffffd8
    7ae8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7aec:	movw	r1, #30061	; 0x756d
    7af0:	movt	r1, #25966	; 0x656e
    7af4:	teq	r0, r1
    7af8:	bne	7b68 <monster_test_local_MyGame_Example_json_parser_enum+0x580>
    7afc:	b	7b00 <monster_test_local_MyGame_Example_json_parser_enum+0x518>
    7b00:	ldr	r0, [fp, #-8]
    7b04:	ldr	r1, [fp, #-12]
    7b08:	str	r1, [fp, #-28]	; 0xffffffe4
    7b0c:	ldr	r2, [fp, #-16]
    7b10:	movw	r3, #4
    7b14:	bl	c8a8 <flatcc_json_parser_match_scope>
    7b18:	str	r0, [fp, #-12]
    7b1c:	ldr	r0, [fp, #-12]
    7b20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7b24:	cmp	r0, r1
    7b28:	beq	7b58 <monster_test_local_MyGame_Example_json_parser_enum+0x570>
    7b2c:	ldr	r0, [fp, #-8]
    7b30:	ldr	r1, [fp, #-12]
    7b34:	ldr	r2, [fp, #-16]
    7b38:	ldr	r3, [fp, #-20]	; 0xffffffec
    7b3c:	ldr	ip, [fp, #8]
    7b40:	ldr	lr, [fp, #12]
    7b44:	str	ip, [sp]
    7b48:	str	lr, [sp, #4]
    7b4c:	bl	d33c <MyGame_Example_notemptyenum_parse_json_enum>
    7b50:	str	r0, [fp, #-12]
    7b54:	b	7b64 <monster_test_local_MyGame_Example_json_parser_enum+0x57c>
    7b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7b5c:	str	r0, [fp, #-4]
    7b60:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7b64:	b	7b74 <monster_test_local_MyGame_Example_json_parser_enum+0x58c>
    7b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7b6c:	str	r0, [fp, #-4]
    7b70:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7b74:	b	7b84 <monster_test_local_MyGame_Example_json_parser_enum+0x59c>
    7b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7b7c:	str	r0, [fp, #-4]
    7b80:	b	7b9c <monster_test_local_MyGame_Example_json_parser_enum+0x5b4>
    7b84:	b	7b88 <monster_test_local_MyGame_Example_json_parser_enum+0x5a0>
    7b88:	b	7b8c <monster_test_local_MyGame_Example_json_parser_enum+0x5a4>
    7b8c:	b	7b90 <monster_test_local_MyGame_Example_json_parser_enum+0x5a8>
    7b90:	b	7b94 <monster_test_local_MyGame_Example_json_parser_enum+0x5ac>
    7b94:	ldr	r0, [fp, #-12]
    7b98:	str	r0, [fp, #-4]
    7b9c:	ldr	r0, [fp, #-4]
    7ba0:	mov	sp, fp
    7ba4:	pop	{fp, pc}

00007ba8 <monster_test_global_json_parser_enum>:
    7ba8:	push	{fp, lr}
    7bac:	mov	fp, sp
    7bb0:	sub	sp, sp, #96	; 0x60
    7bb4:	ldr	ip, [fp, #12]
    7bb8:	ldr	lr, [fp, #8]
    7bbc:	str	r0, [fp, #-8]
    7bc0:	str	r1, [fp, #-12]
    7bc4:	str	r2, [fp, #-16]
    7bc8:	str	r3, [fp, #-20]	; 0xffffffec
    7bcc:	ldr	r0, [fp, #-12]
    7bd0:	str	r0, [fp, #-24]	; 0xffffffe8
    7bd4:	ldr	r0, [fp, #-12]
    7bd8:	ldr	r1, [fp, #-16]
    7bdc:	str	lr, [fp, #-44]	; 0xffffffd4
    7be0:	str	ip, [sp, #48]	; 0x30
    7be4:	bl	71e0 <flatcc_json_parser_symbol_part>
    7be8:	str	r1, [fp, #-36]	; 0xffffffdc
    7bec:	str	r0, [fp, #-40]	; 0xffffffd8
    7bf0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7bf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7bf8:	movw	r2, #11844	; 0x2e44
    7bfc:	movt	r2, #28005	; 0x6d65
    7c00:	subs	r0, r2, r0
    7c04:	movw	r2, #18273	; 0x4761
    7c08:	movt	r2, #19833	; 0x4d79
    7c0c:	sbcs	r1, r2, r1
    7c10:	str	r0, [sp, #44]	; 0x2c
    7c14:	str	r1, [sp, #40]	; 0x28
    7c18:	bcc	7d6c <monster_test_global_json_parser_enum+0x1c4>
    7c1c:	b	7c20 <monster_test_global_json_parser_enum+0x78>
    7c20:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7c24:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7c28:	movw	r2, #28276	; 0x6e74
    7c2c:	movt	r2, #18017	; 0x4661
    7c30:	eor	r1, r1, r2
    7c34:	movw	r2, #31022	; 0x792e
    7c38:	movt	r2, #24947	; 0x6173
    7c3c:	eor	r0, r0, r2
    7c40:	orr	r0, r0, r1
    7c44:	cmp	r0, #0
    7c48:	bne	7d5c <monster_test_global_json_parser_enum+0x1b4>
    7c4c:	b	7c50 <monster_test_global_json_parser_enum+0xa8>
    7c50:	ldr	r0, [fp, #-12]
    7c54:	add	r0, r0, #8
    7c58:	str	r0, [fp, #-12]
    7c5c:	ldr	r0, [fp, #-12]
    7c60:	ldr	r1, [fp, #-16]
    7c64:	bl	71e0 <flatcc_json_parser_symbol_part>
    7c68:	str	r1, [fp, #-36]	; 0xffffffdc
    7c6c:	str	r0, [fp, #-40]	; 0xffffffd8
    7c70:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7c74:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7c78:	movw	lr, #24946	; 0x6172
    7c7c:	movt	lr, #17256	; 0x4368
    7c80:	eor	r1, r1, lr
    7c84:	movw	lr, #29797	; 0x7465
    7c88:	movt	lr, #24931	; 0x6163
    7c8c:	eor	r0, r0, lr
    7c90:	orr	r0, r0, r1
    7c94:	cmp	r0, #0
    7c98:	bne	7d4c <monster_test_global_json_parser_enum+0x1a4>
    7c9c:	b	7ca0 <monster_test_global_json_parser_enum+0xf8>
    7ca0:	ldr	r0, [fp, #-12]
    7ca4:	add	r0, r0, #8
    7ca8:	str	r0, [fp, #-12]
    7cac:	ldr	r0, [fp, #-12]
    7cb0:	ldr	r1, [fp, #-16]
    7cb4:	bl	71e0 <flatcc_json_parser_symbol_part>
    7cb8:	str	r1, [fp, #-36]	; 0xffffffdc
    7cbc:	str	r0, [fp, #-40]	; 0xffffffd8
    7cc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7cc4:	and	r0, r0, #-16777216	; 0xff000000
    7cc8:	teq	r0, #1912602624	; 0x72000000
    7ccc:	bne	7d3c <monster_test_global_json_parser_enum+0x194>
    7cd0:	b	7cd4 <monster_test_global_json_parser_enum+0x12c>
    7cd4:	ldr	r0, [fp, #-8]
    7cd8:	ldr	r1, [fp, #-12]
    7cdc:	str	r1, [fp, #-28]	; 0xffffffe4
    7ce0:	ldr	r2, [fp, #-16]
    7ce4:	movw	r3, #1
    7ce8:	bl	c8a8 <flatcc_json_parser_match_scope>
    7cec:	str	r0, [fp, #-12]
    7cf0:	ldr	r0, [fp, #-12]
    7cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7cf8:	cmp	r0, r1
    7cfc:	beq	7d2c <monster_test_global_json_parser_enum+0x184>
    7d00:	ldr	r0, [fp, #-8]
    7d04:	ldr	r1, [fp, #-12]
    7d08:	ldr	r2, [fp, #-16]
    7d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
    7d10:	ldr	ip, [fp, #8]
    7d14:	ldr	lr, [fp, #12]
    7d18:	str	ip, [sp]
    7d1c:	str	lr, [sp, #4]
    7d20:	bl	d428 <Fantasy_Character_parse_json_enum>
    7d24:	str	r0, [fp, #-12]
    7d28:	b	7d38 <monster_test_global_json_parser_enum+0x190>
    7d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7d30:	str	r0, [fp, #-4]
    7d34:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7d38:	b	7d48 <monster_test_global_json_parser_enum+0x1a0>
    7d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7d40:	str	r0, [fp, #-4]
    7d44:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7d48:	b	7d58 <monster_test_global_json_parser_enum+0x1b0>
    7d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7d50:	str	r0, [fp, #-4]
    7d54:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7d58:	b	7d68 <monster_test_global_json_parser_enum+0x1c0>
    7d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7d60:	str	r0, [fp, #-4]
    7d64:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7d68:	b	8780 <monster_test_global_json_parser_enum+0xbd8>
    7d6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7d70:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7d74:	movw	r2, #18273	; 0x4761
    7d78:	movt	r2, #19833	; 0x4d79
    7d7c:	eor	r1, r1, r2
    7d80:	movw	r2, #11845	; 0x2e45
    7d84:	movt	r2, #28005	; 0x6d65
    7d88:	eor	r0, r0, r2
    7d8c:	orr	r0, r0, r1
    7d90:	cmp	r0, #0
    7d94:	bne	8570 <monster_test_global_json_parser_enum+0x9c8>
    7d98:	b	7d9c <monster_test_global_json_parser_enum+0x1f4>
    7d9c:	ldr	r0, [fp, #-12]
    7da0:	add	r0, r0, #8
    7da4:	str	r0, [fp, #-12]
    7da8:	ldr	r0, [fp, #-12]
    7dac:	ldr	r1, [fp, #-16]
    7db0:	bl	71e0 <flatcc_json_parser_symbol_part>
    7db4:	str	r1, [fp, #-36]	; 0xffffffdc
    7db8:	str	r0, [fp, #-40]	; 0xffffffd8
    7dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7dc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7dc4:	movw	lr, #11879	; 0x2e67
    7dc8:	movt	lr, #27749	; 0x6c65
    7dcc:	subs	r0, lr, r0
    7dd0:	movw	lr, #28016	; 0x6d70
    7dd4:	movt	lr, #30817	; 0x7861
    7dd8:	sbcs	r1, lr, r1
    7ddc:	str	r0, [sp, #36]	; 0x24
    7de0:	str	r1, [sp, #32]
    7de4:	bcc	80ec <monster_test_global_json_parser_enum+0x544>
    7de8:	b	7dec <monster_test_global_json_parser_enum+0x244>
    7dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7df0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7df4:	movw	r2, #11842	; 0x2e42
    7df8:	movt	r2, #27749	; 0x6c65
    7dfc:	subs	r0, r2, r0
    7e00:	movw	r2, #28016	; 0x6d70
    7e04:	movt	r2, #30817	; 0x7861
    7e08:	sbcs	r1, r2, r1
    7e0c:	str	r0, [sp, #28]
    7e10:	str	r1, [sp, #24]
    7e14:	bcc	7f10 <monster_test_global_json_parser_enum+0x368>
    7e18:	b	7e1c <monster_test_global_json_parser_enum+0x274>
    7e1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7e20:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7e24:	movw	r2, #28016	; 0x6d70
    7e28:	movt	r2, #30817	; 0x7861
    7e2c:	eor	r1, r1, r2
    7e30:	movw	r2, #11841	; 0x2e41
    7e34:	movt	r2, #27749	; 0x6c65
    7e38:	eor	r0, r0, r2
    7e3c:	orr	r0, r0, r1
    7e40:	cmp	r0, #0
    7e44:	bne	7f00 <monster_test_global_json_parser_enum+0x358>
    7e48:	b	7e4c <monster_test_global_json_parser_enum+0x2a4>
    7e4c:	ldr	r0, [fp, #-12]
    7e50:	add	r0, r0, #8
    7e54:	str	r0, [fp, #-12]
    7e58:	ldr	r0, [fp, #-12]
    7e5c:	ldr	r1, [fp, #-16]
    7e60:	bl	71e0 <flatcc_json_parser_symbol_part>
    7e64:	str	r1, [fp, #-36]	; 0xffffffdc
    7e68:	str	r0, [fp, #-40]	; 0xffffffd8
    7e6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7e70:	bfc	r0, #0, #16
    7e74:	movw	r1, #0
    7e78:	movt	r1, #28281	; 0x6e79
    7e7c:	teq	r0, r1
    7e80:	bne	7ef0 <monster_test_global_json_parser_enum+0x348>
    7e84:	b	7e88 <monster_test_global_json_parser_enum+0x2e0>
    7e88:	ldr	r0, [fp, #-8]
    7e8c:	ldr	r1, [fp, #-12]
    7e90:	str	r1, [fp, #-28]	; 0xffffffe4
    7e94:	ldr	r2, [fp, #-16]
    7e98:	movw	r3, #2
    7e9c:	bl	c8a8 <flatcc_json_parser_match_scope>
    7ea0:	str	r0, [fp, #-12]
    7ea4:	ldr	r0, [fp, #-12]
    7ea8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7eac:	cmp	r0, r1
    7eb0:	beq	7ee0 <monster_test_global_json_parser_enum+0x338>
    7eb4:	ldr	r0, [fp, #-8]
    7eb8:	ldr	r1, [fp, #-12]
    7ebc:	ldr	r2, [fp, #-16]
    7ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7ec4:	ldr	ip, [fp, #8]
    7ec8:	ldr	lr, [fp, #12]
    7ecc:	str	ip, [sp]
    7ed0:	str	lr, [sp, #4]
    7ed4:	bl	9ff8 <MyGame_Example_Any_parse_json_enum>
    7ed8:	str	r0, [fp, #-12]
    7edc:	b	7eec <monster_test_global_json_parser_enum+0x344>
    7ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7ee4:	str	r0, [fp, #-4]
    7ee8:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7eec:	b	7efc <monster_test_global_json_parser_enum+0x354>
    7ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7ef4:	str	r0, [fp, #-4]
    7ef8:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7efc:	b	7f0c <monster_test_global_json_parser_enum+0x364>
    7f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7f04:	str	r0, [fp, #-4]
    7f08:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7f0c:	b	80e8 <monster_test_global_json_parser_enum+0x540>
    7f10:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7f14:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7f18:	movw	r2, #28016	; 0x6d70
    7f1c:	movt	r2, #30817	; 0x7861
    7f20:	eor	r1, r1, r2
    7f24:	movw	r2, #11843	; 0x2e43
    7f28:	movt	r2, #27749	; 0x6c65
    7f2c:	eor	r0, r0, r2
    7f30:	orr	r0, r0, r1
    7f34:	cmp	r0, #0
    7f38:	bne	7ff0 <monster_test_global_json_parser_enum+0x448>
    7f3c:	b	7f40 <monster_test_global_json_parser_enum+0x398>
    7f40:	ldr	r0, [fp, #-12]
    7f44:	add	r0, r0, #8
    7f48:	str	r0, [fp, #-12]
    7f4c:	ldr	r0, [fp, #-12]
    7f50:	ldr	r1, [fp, #-16]
    7f54:	bl	71e0 <flatcc_json_parser_symbol_part>
    7f58:	str	r1, [fp, #-36]	; 0xffffffdc
    7f5c:	str	r0, [fp, #-40]	; 0xffffffd8
    7f60:	ldr	r0, [fp, #-36]	; 0xffffffdc
    7f64:	movw	r1, #28530	; 0x6f72
    7f68:	movt	r1, #28524	; 0x6f6c
    7f6c:	teq	r0, r1
    7f70:	bne	7fe0 <monster_test_global_json_parser_enum+0x438>
    7f74:	b	7f78 <monster_test_global_json_parser_enum+0x3d0>
    7f78:	ldr	r0, [fp, #-8]
    7f7c:	ldr	r1, [fp, #-12]
    7f80:	str	r1, [fp, #-28]	; 0xffffffe4
    7f84:	ldr	r2, [fp, #-16]
    7f88:	movw	r3, #4
    7f8c:	bl	c8a8 <flatcc_json_parser_match_scope>
    7f90:	str	r0, [fp, #-12]
    7f94:	ldr	r0, [fp, #-12]
    7f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7f9c:	cmp	r0, r1
    7fa0:	beq	7fd0 <monster_test_global_json_parser_enum+0x428>
    7fa4:	ldr	r0, [fp, #-8]
    7fa8:	ldr	r1, [fp, #-12]
    7fac:	ldr	r2, [fp, #-16]
    7fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
    7fb4:	ldr	ip, [fp, #8]
    7fb8:	ldr	lr, [fp, #12]
    7fbc:	str	ip, [sp]
    7fc0:	str	lr, [sp, #4]
    7fc4:	bl	7380 <MyGame_Example_Color_parse_json_enum>
    7fc8:	str	r0, [fp, #-12]
    7fcc:	b	7fdc <monster_test_global_json_parser_enum+0x434>
    7fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7fd4:	str	r0, [fp, #-4]
    7fd8:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7fdc:	b	7fec <monster_test_global_json_parser_enum+0x444>
    7fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7fe4:	str	r0, [fp, #-4]
    7fe8:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    7fec:	b	80e4 <monster_test_global_json_parser_enum+0x53c>
    7ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    7ff4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    7ff8:	movw	r2, #28016	; 0x6d70
    7ffc:	movt	r2, #30817	; 0x7861
    8000:	eor	r1, r1, r2
    8004:	movw	r2, #11846	; 0x2e46
    8008:	movt	r2, #27749	; 0x6c65
    800c:	eor	r0, r0, r2
    8010:	orr	r0, r0, r1
    8014:	cmp	r0, #0
    8018:	bne	80d4 <monster_test_global_json_parser_enum+0x52c>
    801c:	b	8020 <monster_test_global_json_parser_enum+0x478>
    8020:	ldr	r0, [fp, #-12]
    8024:	add	r0, r0, #8
    8028:	str	r0, [fp, #-12]
    802c:	ldr	r0, [fp, #-12]
    8030:	ldr	r1, [fp, #-16]
    8034:	bl	71e0 <flatcc_json_parser_symbol_part>
    8038:	str	r1, [fp, #-36]	; 0xffffffdc
    803c:	str	r0, [fp, #-40]	; 0xffffffd8
    8040:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8044:	bfc	r0, #0, #16
    8048:	movw	r1, #0
    804c:	movt	r1, #28527	; 0x6f6f
    8050:	teq	r0, r1
    8054:	bne	80c4 <monster_test_global_json_parser_enum+0x51c>
    8058:	b	805c <monster_test_global_json_parser_enum+0x4b4>
    805c:	ldr	r0, [fp, #-8]
    8060:	ldr	r1, [fp, #-12]
    8064:	str	r1, [fp, #-28]	; 0xffffffe4
    8068:	ldr	r2, [fp, #-16]
    806c:	movw	r3, #2
    8070:	bl	c8a8 <flatcc_json_parser_match_scope>
    8074:	str	r0, [fp, #-12]
    8078:	ldr	r0, [fp, #-12]
    807c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8080:	cmp	r0, r1
    8084:	beq	80b4 <monster_test_global_json_parser_enum+0x50c>
    8088:	ldr	r0, [fp, #-8]
    808c:	ldr	r1, [fp, #-12]
    8090:	ldr	r2, [fp, #-16]
    8094:	ldr	r3, [fp, #-20]	; 0xffffffec
    8098:	ldr	ip, [fp, #8]
    809c:	ldr	lr, [fp, #12]
    80a0:	str	ip, [sp]
    80a4:	str	lr, [sp, #4]
    80a8:	bl	c92c <MyGame_Example_Foo_parse_json_enum>
    80ac:	str	r0, [fp, #-12]
    80b0:	b	80c0 <monster_test_global_json_parser_enum+0x518>
    80b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80b8:	str	r0, [fp, #-4]
    80bc:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    80c0:	b	80d0 <monster_test_global_json_parser_enum+0x528>
    80c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80c8:	str	r0, [fp, #-4]
    80cc:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    80d0:	b	80e0 <monster_test_global_json_parser_enum+0x538>
    80d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    80d8:	str	r0, [fp, #-4]
    80dc:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    80e0:	b	80e4 <monster_test_global_json_parser_enum+0x53c>
    80e4:	b	80e8 <monster_test_global_json_parser_enum+0x540>
    80e8:	b	856c <monster_test_global_json_parser_enum+0x9c4>
    80ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
    80f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    80f4:	movw	r2, #11880	; 0x2e68
    80f8:	movt	r2, #27749	; 0x6c65
    80fc:	subs	r0, r2, r0
    8100:	movw	r2, #28016	; 0x6d70
    8104:	movt	r2, #30817	; 0x7861
    8108:	sbcs	r1, r2, r1
    810c:	str	r0, [sp, #20]
    8110:	str	r1, [sp, #16]
    8114:	bcc	822c <monster_test_global_json_parser_enum+0x684>
    8118:	b	811c <monster_test_global_json_parser_enum+0x574>
    811c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8120:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8124:	movw	r2, #28016	; 0x6d70
    8128:	movt	r2, #30817	; 0x7861
    812c:	eor	r1, r1, r2
    8130:	movw	r2, #11880	; 0x2e68
    8134:	movt	r2, #27749	; 0x6c65
    8138:	eor	r0, r0, r2
    813c:	orr	r0, r0, r1
    8140:	cmp	r0, #0
    8144:	bne	821c <monster_test_global_json_parser_enum+0x674>
    8148:	b	814c <monster_test_global_json_parser_enum+0x5a4>
    814c:	ldr	r0, [fp, #-12]
    8150:	add	r0, r0, #8
    8154:	str	r0, [fp, #-12]
    8158:	ldr	r0, [fp, #-12]
    815c:	ldr	r1, [fp, #-16]
    8160:	bl	71e0 <flatcc_json_parser_symbol_part>
    8164:	str	r1, [fp, #-36]	; 0xffffffdc
    8168:	str	r0, [fp, #-40]	; 0xffffffd8
    816c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8170:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8174:	movw	lr, #30815	; 0x785f
    8178:	movt	lr, #101	; 0x65
    817c:	eor	lr, lr, r1, lsr #8
    8180:	lsr	r0, r0, #8
    8184:	orr	r0, r0, r1, lsl #24
    8188:	movw	r1, #30061	; 0x756d
    818c:	movt	r1, #25966	; 0x656e
    8190:	eor	r0, r0, r1
    8194:	orr	r0, r0, lr
    8198:	cmp	r0, #0
    819c:	bne	820c <monster_test_global_json_parser_enum+0x664>
    81a0:	b	81a4 <monster_test_global_json_parser_enum+0x5fc>
    81a4:	ldr	r0, [fp, #-8]
    81a8:	ldr	r1, [fp, #-12]
    81ac:	str	r1, [fp, #-28]	; 0xffffffe4
    81b0:	ldr	r2, [fp, #-16]
    81b4:	movw	r3, #7
    81b8:	bl	c8a8 <flatcc_json_parser_match_scope>
    81bc:	str	r0, [fp, #-12]
    81c0:	ldr	r0, [fp, #-12]
    81c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    81c8:	cmp	r0, r1
    81cc:	beq	81fc <monster_test_global_json_parser_enum+0x654>
    81d0:	ldr	r0, [fp, #-8]
    81d4:	ldr	r1, [fp, #-12]
    81d8:	ldr	r2, [fp, #-16]
    81dc:	ldr	r3, [fp, #-20]	; 0xffffffec
    81e0:	ldr	ip, [fp, #8]
    81e4:	ldr	lr, [fp, #12]
    81e8:	str	ip, [sp]
    81ec:	str	lr, [sp, #4]
    81f0:	bl	cb68 <MyGame_Example_hex_enum_parse_json_enum>
    81f4:	str	r0, [fp, #-12]
    81f8:	b	8208 <monster_test_global_json_parser_enum+0x660>
    81fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8200:	str	r0, [fp, #-4]
    8204:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8208:	b	8218 <monster_test_global_json_parser_enum+0x670>
    820c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8210:	str	r0, [fp, #-4]
    8214:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8218:	b	8228 <monster_test_global_json_parser_enum+0x680>
    821c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8220:	str	r0, [fp, #-4]
    8224:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8228:	b	8568 <monster_test_global_json_parser_enum+0x9c0>
    822c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8230:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8234:	movw	r2, #11885	; 0x2e6d
    8238:	movt	r2, #27749	; 0x6c65
    823c:	subs	r0, r2, r0
    8240:	movw	r2, #28016	; 0x6d70
    8244:	movt	r2, #30817	; 0x7861
    8248:	sbcs	r1, r2, r1
    824c:	str	r0, [sp, #12]
    8250:	str	r1, [sp, #8]
    8254:	bcc	836c <monster_test_global_json_parser_enum+0x7c4>
    8258:	b	825c <monster_test_global_json_parser_enum+0x6b4>
    825c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8260:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8264:	movw	r2, #28016	; 0x6d70
    8268:	movt	r2, #30817	; 0x7861
    826c:	eor	r1, r1, r2
    8270:	movw	r2, #11881	; 0x2e69
    8274:	movt	r2, #27749	; 0x6c65
    8278:	eor	r0, r0, r2
    827c:	orr	r0, r0, r1
    8280:	cmp	r0, #0
    8284:	bne	835c <monster_test_global_json_parser_enum+0x7b4>
    8288:	b	828c <monster_test_global_json_parser_enum+0x6e4>
    828c:	ldr	r0, [fp, #-12]
    8290:	add	r0, r0, #8
    8294:	str	r0, [fp, #-12]
    8298:	ldr	r0, [fp, #-12]
    829c:	ldr	r1, [fp, #-16]
    82a0:	bl	71e0 <flatcc_json_parser_symbol_part>
    82a4:	str	r1, [fp, #-36]	; 0xffffffdc
    82a8:	str	r0, [fp, #-40]	; 0xffffffd8
    82ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
    82b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    82b4:	movw	lr, #29791	; 0x745f
    82b8:	movt	lr, #110	; 0x6e
    82bc:	eor	lr, lr, r1, lsr #8
    82c0:	lsr	r0, r0, #8
    82c4:	orr	r0, r0, r1, lsl #24
    82c8:	movw	r1, #30061	; 0x756d
    82cc:	movt	r1, #25966	; 0x656e
    82d0:	eor	r0, r0, r1
    82d4:	orr	r0, r0, lr
    82d8:	cmp	r0, #0
    82dc:	bne	834c <monster_test_global_json_parser_enum+0x7a4>
    82e0:	b	82e4 <monster_test_global_json_parser_enum+0x73c>
    82e4:	ldr	r0, [fp, #-8]
    82e8:	ldr	r1, [fp, #-12]
    82ec:	str	r1, [fp, #-28]	; 0xffffffe4
    82f0:	ldr	r2, [fp, #-16]
    82f4:	movw	r3, #7
    82f8:	bl	c8a8 <flatcc_json_parser_match_scope>
    82fc:	str	r0, [fp, #-12]
    8300:	ldr	r0, [fp, #-12]
    8304:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8308:	cmp	r0, r1
    830c:	beq	833c <monster_test_global_json_parser_enum+0x794>
    8310:	ldr	r0, [fp, #-8]
    8314:	ldr	r1, [fp, #-12]
    8318:	ldr	r2, [fp, #-16]
    831c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8320:	ldr	ip, [fp, #8]
    8324:	ldr	lr, [fp, #12]
    8328:	str	ip, [sp]
    832c:	str	lr, [sp, #4]
    8330:	bl	cdc0 <MyGame_Example_int_enum_parse_json_enum>
    8334:	str	r0, [fp, #-12]
    8338:	b	8348 <monster_test_global_json_parser_enum+0x7a0>
    833c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8340:	str	r0, [fp, #-4]
    8344:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8348:	b	8358 <monster_test_global_json_parser_enum+0x7b0>
    834c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8350:	str	r0, [fp, #-4]
    8354:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8358:	b	8368 <monster_test_global_json_parser_enum+0x7c0>
    835c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8360:	str	r0, [fp, #-4]
    8364:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8368:	b	8564 <monster_test_global_json_parser_enum+0x9bc>
    836c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8370:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8374:	movw	r2, #28016	; 0x6d70
    8378:	movt	r2, #30817	; 0x7861
    837c:	eor	r1, r1, r2
    8380:	movw	r2, #11886	; 0x2e6e
    8384:	movt	r2, #27749	; 0x6c65
    8388:	eor	r0, r0, r2
    838c:	orr	r0, r0, r1
    8390:	cmp	r0, #0
    8394:	bne	8554 <monster_test_global_json_parser_enum+0x9ac>
    8398:	b	839c <monster_test_global_json_parser_enum+0x7f4>
    839c:	ldr	r0, [fp, #-12]
    83a0:	add	r0, r0, #8
    83a4:	str	r0, [fp, #-12]
    83a8:	ldr	r0, [fp, #-12]
    83ac:	ldr	r1, [fp, #-16]
    83b0:	bl	71e0 <flatcc_json_parser_symbol_part>
    83b4:	str	r1, [fp, #-36]	; 0xffffffdc
    83b8:	str	r0, [fp, #-40]	; 0xffffffd8
    83bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    83c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    83c4:	movw	lr, #26463	; 0x675f
    83c8:	movt	lr, #101	; 0x65
    83cc:	eor	lr, lr, r1, lsr #8
    83d0:	lsr	r0, r0, #8
    83d4:	orr	r0, r0, r1, lsl #24
    83d8:	movw	r1, #30061	; 0x756d
    83dc:	movt	r1, #25966	; 0x656e
    83e0:	eor	r0, r0, r1
    83e4:	orr	r0, r0, lr
    83e8:	cmp	r0, #0
    83ec:	bne	8454 <monster_test_global_json_parser_enum+0x8ac>
    83f0:	b	83f4 <monster_test_global_json_parser_enum+0x84c>
    83f4:	ldr	r0, [fp, #-8]
    83f8:	ldr	r1, [fp, #-12]
    83fc:	str	r1, [fp, #-28]	; 0xffffffe4
    8400:	ldr	r2, [fp, #-16]
    8404:	movw	r3, #7
    8408:	bl	c8a8 <flatcc_json_parser_match_scope>
    840c:	str	r0, [fp, #-12]
    8410:	ldr	r0, [fp, #-12]
    8414:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8418:	cmp	r0, r1
    841c:	beq	844c <monster_test_global_json_parser_enum+0x8a4>
    8420:	ldr	r0, [fp, #-8]
    8424:	ldr	r1, [fp, #-12]
    8428:	ldr	r2, [fp, #-16]
    842c:	ldr	r3, [fp, #-20]	; 0xffffffec
    8430:	ldr	ip, [fp, #8]
    8434:	ldr	lr, [fp, #12]
    8438:	str	ip, [sp]
    843c:	str	lr, [sp, #4]
    8440:	bl	d100 <MyGame_Example_neg_enum_parse_json_enum>
    8444:	str	r0, [fp, #-12]
    8448:	b	8450 <monster_test_global_json_parser_enum+0x8a8>
    844c:	b	845c <monster_test_global_json_parser_enum+0x8b4>
    8450:	b	8458 <monster_test_global_json_parser_enum+0x8b0>
    8454:	b	845c <monster_test_global_json_parser_enum+0x8b4>
    8458:	b	8550 <monster_test_global_json_parser_enum+0x9a8>
    845c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8460:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8464:	movw	r2, #25965	; 0x656d
    8468:	movt	r2, #28532	; 0x6f74
    846c:	eor	r1, r1, r2
    8470:	movw	r2, #31077	; 0x7965
    8474:	movt	r2, #28788	; 0x7074
    8478:	eor	r0, r0, r2
    847c:	orr	r0, r0, r1
    8480:	cmp	r0, #0
    8484:	bne	8540 <monster_test_global_json_parser_enum+0x998>
    8488:	b	848c <monster_test_global_json_parser_enum+0x8e4>
    848c:	ldr	r0, [fp, #-12]
    8490:	add	r0, r0, #8
    8494:	str	r0, [fp, #-12]
    8498:	ldr	r0, [fp, #-12]
    849c:	ldr	r1, [fp, #-16]
    84a0:	bl	71e0 <flatcc_json_parser_symbol_part>
    84a4:	str	r1, [fp, #-36]	; 0xffffffdc
    84a8:	str	r0, [fp, #-40]	; 0xffffffd8
    84ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    84b0:	bic	r0, r0, #255	; 0xff
    84b4:	movw	r1, #27904	; 0x6d00
    84b8:	movt	r1, #28277	; 0x6e75
    84bc:	teq	r0, r1
    84c0:	bne	8530 <monster_test_global_json_parser_enum+0x988>
    84c4:	b	84c8 <monster_test_global_json_parser_enum+0x920>
    84c8:	ldr	r0, [fp, #-8]
    84cc:	ldr	r1, [fp, #-12]
    84d0:	str	r1, [fp, #-28]	; 0xffffffe4
    84d4:	ldr	r2, [fp, #-16]
    84d8:	movw	r3, #3
    84dc:	bl	c8a8 <flatcc_json_parser_match_scope>
    84e0:	str	r0, [fp, #-12]
    84e4:	ldr	r0, [fp, #-12]
    84e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    84ec:	cmp	r0, r1
    84f0:	beq	8520 <monster_test_global_json_parser_enum+0x978>
    84f4:	ldr	r0, [fp, #-8]
    84f8:	ldr	r1, [fp, #-12]
    84fc:	ldr	r2, [fp, #-16]
    8500:	ldr	r3, [fp, #-20]	; 0xffffffec
    8504:	ldr	ip, [fp, #8]
    8508:	ldr	lr, [fp, #12]
    850c:	str	ip, [sp]
    8510:	str	lr, [sp, #4]
    8514:	bl	d33c <MyGame_Example_notemptyenum_parse_json_enum>
    8518:	str	r0, [fp, #-12]
    851c:	b	852c <monster_test_global_json_parser_enum+0x984>
    8520:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8524:	str	r0, [fp, #-4]
    8528:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    852c:	b	853c <monster_test_global_json_parser_enum+0x994>
    8530:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8534:	str	r0, [fp, #-4]
    8538:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    853c:	b	854c <monster_test_global_json_parser_enum+0x9a4>
    8540:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8544:	str	r0, [fp, #-4]
    8548:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    854c:	b	8550 <monster_test_global_json_parser_enum+0x9a8>
    8550:	b	8560 <monster_test_global_json_parser_enum+0x9b8>
    8554:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8558:	str	r0, [fp, #-4]
    855c:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8560:	b	8564 <monster_test_global_json_parser_enum+0x9bc>
    8564:	b	8568 <monster_test_global_json_parser_enum+0x9c0>
    8568:	b	856c <monster_test_global_json_parser_enum+0x9c4>
    856c:	b	877c <monster_test_global_json_parser_enum+0xbd4>
    8570:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8574:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8578:	movw	r2, #18273	; 0x4761
    857c:	movt	r2, #19833	; 0x4d79
    8580:	eor	r1, r1, r2
    8584:	movw	r2, #11855	; 0x2e4f
    8588:	movt	r2, #28005	; 0x6d65
    858c:	eor	r0, r0, r2
    8590:	orr	r0, r0, r1
    8594:	cmp	r0, #0
    8598:	bne	876c <monster_test_global_json_parser_enum+0xbc4>
    859c:	b	85a0 <monster_test_global_json_parser_enum+0x9f8>
    85a0:	ldr	r0, [fp, #-12]
    85a4:	add	r0, r0, #8
    85a8:	str	r0, [fp, #-12]
    85ac:	ldr	r0, [fp, #-12]
    85b0:	ldr	r1, [fp, #-16]
    85b4:	bl	71e0 <flatcc_json_parser_symbol_part>
    85b8:	str	r1, [fp, #-36]	; 0xffffffdc
    85bc:	str	r0, [fp, #-40]	; 0xffffffd8
    85c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    85c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    85c8:	movw	lr, #25970	; 0x6572
    85cc:	movt	lr, #29800	; 0x7468
    85d0:	eor	r1, r1, lr
    85d4:	movw	lr, #28005	; 0x6d65
    85d8:	movt	lr, #20065	; 0x4e61
    85dc:	eor	r0, r0, lr
    85e0:	orr	r0, r0, r1
    85e4:	cmp	r0, #0
    85e8:	bne	875c <monster_test_global_json_parser_enum+0xbb4>
    85ec:	b	85f0 <monster_test_global_json_parser_enum+0xa48>
    85f0:	ldr	r0, [fp, #-12]
    85f4:	add	r0, r0, #8
    85f8:	str	r0, [fp, #-12]
    85fc:	ldr	r0, [fp, #-12]
    8600:	ldr	r1, [fp, #-16]
    8604:	bl	71e0 <flatcc_json_parser_symbol_part>
    8608:	str	r1, [fp, #-36]	; 0xffffffdc
    860c:	str	r0, [fp, #-40]	; 0xffffffd8
    8610:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8614:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8618:	movw	lr, #24931	; 0x6163
    861c:	movt	lr, #21360	; 0x5370
    8620:	eor	r1, r1, lr
    8624:	movw	lr, #18034	; 0x4672
    8628:	movt	lr, #25902	; 0x652e
    862c:	eor	r0, r0, lr
    8630:	orr	r0, r0, r1
    8634:	cmp	r0, #0
    8638:	bne	874c <monster_test_global_json_parser_enum+0xba4>
    863c:	b	8640 <monster_test_global_json_parser_enum+0xa98>
    8640:	ldr	r0, [fp, #-12]
    8644:	add	r0, r0, #8
    8648:	str	r0, [fp, #-12]
    864c:	ldr	r0, [fp, #-12]
    8650:	ldr	r1, [fp, #-16]
    8654:	bl	71e0 <flatcc_json_parser_symbol_part>
    8658:	str	r1, [fp, #-36]	; 0xffffffdc
    865c:	str	r0, [fp, #-40]	; 0xffffffd8
    8660:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8664:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8668:	movw	lr, #18798	; 0x496e
    866c:	movt	lr, #28525	; 0x6f6d
    8670:	eor	r1, r1, lr
    8674:	movw	lr, #30052	; 0x7564
    8678:	movt	lr, #25452	; 0x636c
    867c:	eor	r0, r0, lr
    8680:	orr	r0, r0, r1
    8684:	cmp	r0, #0
    8688:	bne	873c <monster_test_global_json_parser_enum+0xb94>
    868c:	b	8690 <monster_test_global_json_parser_enum+0xae8>
    8690:	ldr	r0, [fp, #-12]
    8694:	add	r0, r0, #8
    8698:	str	r0, [fp, #-12]
    869c:	ldr	r0, [fp, #-12]
    86a0:	ldr	r1, [fp, #-16]
    86a4:	bl	71e0 <flatcc_json_parser_symbol_part>
    86a8:	str	r1, [fp, #-36]	; 0xffffffdc
    86ac:	str	r0, [fp, #-40]	; 0xffffffd8
    86b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    86b4:	and	r0, r0, #-16777216	; 0xff000000
    86b8:	teq	r0, #1694498816	; 0x65000000
    86bc:	bne	872c <monster_test_global_json_parser_enum+0xb84>
    86c0:	b	86c4 <monster_test_global_json_parser_enum+0xb1c>
    86c4:	ldr	r0, [fp, #-8]
    86c8:	ldr	r1, [fp, #-12]
    86cc:	str	r1, [fp, #-28]	; 0xffffffe4
    86d0:	ldr	r2, [fp, #-16]
    86d4:	movw	r3, #1
    86d8:	bl	c8a8 <flatcc_json_parser_match_scope>
    86dc:	str	r0, [fp, #-12]
    86e0:	ldr	r0, [fp, #-12]
    86e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    86e8:	cmp	r0, r1
    86ec:	beq	871c <monster_test_global_json_parser_enum+0xb74>
    86f0:	ldr	r0, [fp, #-8]
    86f4:	ldr	r1, [fp, #-12]
    86f8:	ldr	r2, [fp, #-16]
    86fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    8700:	ldr	ip, [fp, #8]
    8704:	ldr	lr, [fp, #12]
    8708:	str	ip, [sp]
    870c:	str	lr, [sp, #4]
    8710:	bl	d9e8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    8714:	str	r0, [fp, #-12]
    8718:	b	8728 <monster_test_global_json_parser_enum+0xb80>
    871c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8720:	str	r0, [fp, #-4]
    8724:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8728:	b	8738 <monster_test_global_json_parser_enum+0xb90>
    872c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8730:	str	r0, [fp, #-4]
    8734:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8738:	b	8748 <monster_test_global_json_parser_enum+0xba0>
    873c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8740:	str	r0, [fp, #-4]
    8744:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8748:	b	8758 <monster_test_global_json_parser_enum+0xbb0>
    874c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8750:	str	r0, [fp, #-4]
    8754:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8758:	b	8768 <monster_test_global_json_parser_enum+0xbc0>
    875c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8760:	str	r0, [fp, #-4]
    8764:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8768:	b	8778 <monster_test_global_json_parser_enum+0xbd0>
    876c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8770:	str	r0, [fp, #-4]
    8774:	b	8788 <monster_test_global_json_parser_enum+0xbe0>
    8778:	b	877c <monster_test_global_json_parser_enum+0xbd4>
    877c:	b	8780 <monster_test_global_json_parser_enum+0xbd8>
    8780:	ldr	r0, [fp, #-12]
    8784:	str	r0, [fp, #-4]
    8788:	ldr	r0, [fp, #-4]
    878c:	mov	sp, fp
    8790:	pop	{fp, pc}

00008794 <flatcc_json_parser_int8>:
    8794:	push	{r4, r5, fp, lr}
    8798:	add	fp, sp, #8
    879c:	sub	sp, sp, #56	; 0x38
    87a0:	str	r0, [fp, #-16]
    87a4:	str	r1, [fp, #-20]	; 0xffffffec
    87a8:	str	r2, [fp, #-24]	; 0xffffffe8
    87ac:	str	r3, [fp, #-28]	; 0xffffffe4
    87b0:	mov	r0, #0
    87b4:	str	r0, [sp, #28]
    87b8:	str	r0, [sp, #24]
    87bc:	movw	r0, #0
    87c0:	str	r0, [sp, #20]
    87c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    87c8:	str	r0, [sp, #16]
    87cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    87d0:	movw	r1, #0
    87d4:	strb	r1, [r0]
    87d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    87dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    87e0:	cmp	r0, r1
    87e4:	bne	87f4 <flatcc_json_parser_int8+0x60>
    87e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    87ec:	str	r0, [fp, #-12]
    87f0:	b	8864 <flatcc_json_parser_int8+0xd0>
    87f4:	ldr	r0, [fp, #-16]
    87f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    87fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8800:	add	r3, sp, #20
    8804:	add	ip, sp, #24
    8808:	str	ip, [sp]
    880c:	bl	0 <flatcc_json_parser_integer>
    8810:	str	r0, [fp, #-20]	; 0xffffffec
    8814:	ldr	r0, [fp, #-20]	; 0xffffffec
    8818:	ldr	r1, [sp, #16]
    881c:	cmp	r0, r1
    8820:	beq	885c <flatcc_json_parser_int8+0xc8>
    8824:	ldr	r0, [fp, #-16]
    8828:	ldr	r1, [fp, #-20]	; 0xffffffec
    882c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8830:	ldr	r3, [sp, #20]
    8834:	ldr	ip, [sp, #24]
    8838:	ldr	lr, [sp, #28]
    883c:	ldr	r4, [fp, #-28]	; 0xffffffe4
    8840:	mov	r5, sp
    8844:	str	r4, [r5, #8]
    8848:	str	lr, [r5, #4]
    884c:	str	ip, [r5]
    8850:	bl	dbd0 <flatcc_json_parser_coerce_int8>
    8854:	str	r0, [fp, #-12]
    8858:	b	8864 <flatcc_json_parser_int8+0xd0>
    885c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8860:	str	r0, [fp, #-12]
    8864:	ldr	r0, [fp, #-12]
    8868:	sub	sp, fp, #8
    886c:	pop	{r4, r5, fp, pc}

00008870 <flatcc_json_parser_symbolic_int8>:
    8870:	push	{r4, r5, r6, sl, fp, lr}
    8874:	add	fp, sp, #16
    8878:	sub	sp, sp, #88	; 0x58
    887c:	ldr	ip, [fp, #8]
    8880:	str	r0, [fp, #-24]	; 0xffffffe8
    8884:	str	r1, [fp, #-28]	; 0xffffffe4
    8888:	str	r2, [fp, #-32]	; 0xffffffe0
    888c:	str	r3, [fp, #-36]	; 0xffffffdc
    8890:	movw	r0, #0
    8894:	strb	r0, [fp, #-45]	; 0xffffffd3
    8898:	movw	r1, #0
    889c:	str	r1, [sp, #36]	; 0x24
    88a0:	ldr	r1, [fp, #8]
    88a4:	strb	r0, [r1]
    88a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    88ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    88b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    88b4:	str	ip, [sp, #32]
    88b8:	bl	dcbc <flatcc_json_parser_constant_start>
    88bc:	str	r0, [fp, #-28]	; 0xffffffe4
    88c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    88c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    88c8:	cmp	r0, r1
    88cc:	bne	88dc <flatcc_json_parser_symbolic_int8+0x6c>
    88d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    88d4:	str	r0, [fp, #-20]	; 0xffffffec
    88d8:	b	8a90 <flatcc_json_parser_symbolic_int8+0x220>
    88dc:	b	88e0 <flatcc_json_parser_symbolic_int8+0x70>
    88e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    88e4:	str	r0, [fp, #-40]	; 0xffffffd8
    88e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    88ec:	ldr	r0, [r0]
    88f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    88f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    88f8:	str	r2, [fp, #-44]	; 0xffffffd4
    88fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8900:	str	r0, [sp, #28]
    8904:	mov	r0, r1
    8908:	mov	r1, r2
    890c:	mov	r2, r3
    8910:	add	r3, sp, #44	; 0x2c
    8914:	add	ip, sp, #48	; 0x30
    8918:	str	ip, [sp]
    891c:	add	ip, sp, #40	; 0x28
    8920:	str	ip, [sp, #4]
    8924:	ldr	ip, [sp, #28]
    8928:	blx	ip
    892c:	str	r0, [fp, #-28]	; 0xffffffe4
    8930:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8934:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8938:	cmp	r0, r1
    893c:	bne	894c <flatcc_json_parser_symbolic_int8+0xdc>
    8940:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8944:	str	r0, [fp, #-20]	; 0xffffffec
    8948:	b	8a90 <flatcc_json_parser_symbolic_int8+0x220>
    894c:	b	8950 <flatcc_json_parser_symbolic_int8+0xe0>
    8950:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8954:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8958:	cmp	r0, r1
    895c:	movw	r0, #0
    8960:	str	r0, [sp, #24]
    8964:	bne	898c <flatcc_json_parser_symbolic_int8+0x11c>
    8968:	ldr	r0, [fp, #-40]	; 0xffffffd8
    896c:	add	r1, r0, #4
    8970:	str	r1, [fp, #-40]	; 0xffffffd8
    8974:	ldr	r0, [r0, #4]
    8978:	movw	r1, #0
    897c:	cmp	r0, r1
    8980:	movw	r0, #0
    8984:	movne	r0, #1
    8988:	str	r0, [sp, #24]
    898c:	ldr	r0, [sp, #24]
    8990:	tst	r0, #1
    8994:	bne	88e8 <flatcc_json_parser_symbolic_int8+0x78>
    8998:	ldr	r0, [fp, #-44]	; 0xffffffd4
    899c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    89a0:	cmp	r0, r1
    89a4:	bne	89c4 <flatcc_json_parser_symbolic_int8+0x154>
    89a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    89ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    89b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    89b4:	movw	r3, #23
    89b8:	bl	0 <flatcc_json_parser_set_error>
    89bc:	str	r0, [fp, #-20]	; 0xffffffec
    89c0:	b	8a90 <flatcc_json_parser_symbolic_int8+0x220>
    89c4:	ldr	r0, [sp, #36]	; 0x24
    89c8:	add	r1, r0, #1
    89cc:	str	r1, [sp, #36]	; 0x24
    89d0:	cmp	r0, #0
    89d4:	beq	8a04 <flatcc_json_parser_symbolic_int8+0x194>
    89d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    89dc:	ldr	r0, [r0, #12]
    89e0:	cmp	r0, #0
    89e4:	beq	8a04 <flatcc_json_parser_symbolic_int8+0x194>
    89e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    89ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    89f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    89f4:	movw	r3, #14
    89f8:	bl	0 <flatcc_json_parser_set_error>
    89fc:	str	r0, [fp, #-20]	; 0xffffffec
    8a00:	b	8a90 <flatcc_json_parser_symbolic_int8+0x220>
    8a04:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8a08:	mov	r1, r0
    8a0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8a10:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8a14:	ldr	ip, [sp, #44]	; 0x2c
    8a18:	ldr	lr, [sp, #48]	; 0x30
    8a1c:	ldr	r4, [sp, #52]	; 0x34
    8a20:	mov	r5, sp
    8a24:	sub	r6, fp, #45	; 0x2d
    8a28:	str	r6, [r5, #8]
    8a2c:	str	r4, [r5, #4]
    8a30:	str	lr, [r5]
    8a34:	str	r0, [sp, #20]
    8a38:	mov	r0, r2
    8a3c:	str	r1, [sp, #16]
    8a40:	mov	r1, r3
    8a44:	ldr	r2, [sp, #20]
    8a48:	mov	r3, ip
    8a4c:	bl	dbd0 <flatcc_json_parser_coerce_int8>
    8a50:	ldr	r1, [sp, #16]
    8a54:	cmp	r1, r0
    8a58:	bne	8a68 <flatcc_json_parser_symbolic_int8+0x1f8>
    8a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8a60:	str	r0, [fp, #-20]	; 0xffffffec
    8a64:	b	8a90 <flatcc_json_parser_symbolic_int8+0x220>
    8a68:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
    8a6c:	ldr	r1, [fp, #8]
    8a70:	ldrsb	r2, [r1]
    8a74:	add	r0, r2, r0
    8a78:	strb	r0, [r1]
    8a7c:	ldr	r0, [sp, #40]	; 0x28
    8a80:	cmp	r0, #0
    8a84:	bne	88e0 <flatcc_json_parser_symbolic_int8+0x70>
    8a88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8a8c:	str	r0, [fp, #-20]	; 0xffffffec
    8a90:	ldr	r0, [fp, #-20]	; 0xffffffec
    8a94:	sub	sp, fp, #16
    8a98:	pop	{r4, r5, r6, sl, fp, pc}

00008a9c <flatbuffers_int8_write_to_pe>:
    8a9c:	push	{fp, lr}
    8aa0:	mov	fp, sp
    8aa4:	sub	sp, sp, #8
    8aa8:	str	r0, [sp, #4]
    8aac:	strb	r1, [sp, #3]
    8ab0:	ldrsb	r0, [sp, #3]
    8ab4:	bl	dd18 <flatbuffers_int8_cast_to_pe>
    8ab8:	ldr	r1, [sp, #4]
    8abc:	strb	r0, [r1]
    8ac0:	mov	sp, fp
    8ac4:	pop	{fp, pc}

00008ac8 <flatcc_json_parser_array_start>:
    8ac8:	push	{fp, lr}
    8acc:	mov	fp, sp
    8ad0:	sub	sp, sp, #24
    8ad4:	str	r0, [fp, #-8]
    8ad8:	str	r1, [sp, #12]
    8adc:	str	r2, [sp, #8]
    8ae0:	str	r3, [sp, #4]
    8ae4:	ldr	r0, [sp, #12]
    8ae8:	ldr	r1, [sp, #8]
    8aec:	cmp	r0, r1
    8af0:	beq	8b04 <flatcc_json_parser_array_start+0x3c>
    8af4:	ldr	r0, [sp, #12]
    8af8:	ldrb	r0, [r0]
    8afc:	cmp	r0, #91	; 0x5b
    8b00:	beq	8b2c <flatcc_json_parser_array_start+0x64>
    8b04:	ldr	r0, [sp, #4]
    8b08:	movw	r1, #0
    8b0c:	str	r1, [r0]
    8b10:	ldr	r0, [fp, #-8]
    8b14:	ldr	r1, [sp, #12]
    8b18:	ldr	r2, [sp, #8]
    8b1c:	movw	r3, #22
    8b20:	bl	0 <flatcc_json_parser_set_error>
    8b24:	str	r0, [fp, #-4]
    8b28:	b	8ba0 <flatcc_json_parser_array_start+0xd8>
    8b2c:	ldr	r0, [fp, #-8]
    8b30:	ldr	r1, [sp, #12]
    8b34:	add	r1, r1, #1
    8b38:	ldr	r2, [sp, #8]
    8b3c:	bl	c698 <flatcc_json_parser_space>
    8b40:	str	r0, [sp, #12]
    8b44:	ldr	r0, [sp, #12]
    8b48:	ldr	r1, [sp, #8]
    8b4c:	cmp	r0, r1
    8b50:	beq	8b8c <flatcc_json_parser_array_start+0xc4>
    8b54:	ldr	r0, [sp, #12]
    8b58:	ldrb	r0, [r0]
    8b5c:	cmp	r0, #93	; 0x5d
    8b60:	bne	8b8c <flatcc_json_parser_array_start+0xc4>
    8b64:	ldr	r0, [sp, #4]
    8b68:	movw	r1, #0
    8b6c:	str	r1, [r0]
    8b70:	ldr	r0, [fp, #-8]
    8b74:	ldr	r1, [sp, #12]
    8b78:	add	r1, r1, #1
    8b7c:	ldr	r2, [sp, #8]
    8b80:	bl	c698 <flatcc_json_parser_space>
    8b84:	str	r0, [fp, #-4]
    8b88:	b	8ba0 <flatcc_json_parser_array_start+0xd8>
    8b8c:	ldr	r0, [sp, #4]
    8b90:	movw	r1, #1
    8b94:	str	r1, [r0]
    8b98:	ldr	r0, [sp, #12]
    8b9c:	str	r0, [fp, #-4]
    8ba0:	ldr	r0, [fp, #-4]
    8ba4:	mov	sp, fp
    8ba8:	pop	{fp, pc}

00008bac <flatcc_json_parser_uint8>:
    8bac:	push	{r4, r5, fp, lr}
    8bb0:	add	fp, sp, #8
    8bb4:	sub	sp, sp, #56	; 0x38
    8bb8:	str	r0, [fp, #-16]
    8bbc:	str	r1, [fp, #-20]	; 0xffffffec
    8bc0:	str	r2, [fp, #-24]	; 0xffffffe8
    8bc4:	str	r3, [fp, #-28]	; 0xffffffe4
    8bc8:	mov	r0, #0
    8bcc:	str	r0, [sp, #28]
    8bd0:	str	r0, [sp, #24]
    8bd4:	movw	r0, #0
    8bd8:	str	r0, [sp, #20]
    8bdc:	ldr	r0, [fp, #-20]	; 0xffffffec
    8be0:	str	r0, [sp, #16]
    8be4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8be8:	movw	r1, #0
    8bec:	strb	r1, [r0]
    8bf0:	ldr	r0, [fp, #-20]	; 0xffffffec
    8bf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8bf8:	cmp	r0, r1
    8bfc:	bne	8c0c <flatcc_json_parser_uint8+0x60>
    8c00:	ldr	r0, [fp, #-20]	; 0xffffffec
    8c04:	str	r0, [fp, #-12]
    8c08:	b	8c7c <flatcc_json_parser_uint8+0xd0>
    8c0c:	ldr	r0, [fp, #-16]
    8c10:	ldr	r1, [fp, #-20]	; 0xffffffec
    8c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8c18:	add	r3, sp, #20
    8c1c:	add	ip, sp, #24
    8c20:	str	ip, [sp]
    8c24:	bl	0 <flatcc_json_parser_integer>
    8c28:	str	r0, [fp, #-20]	; 0xffffffec
    8c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
    8c30:	ldr	r1, [sp, #16]
    8c34:	cmp	r0, r1
    8c38:	beq	8c74 <flatcc_json_parser_uint8+0xc8>
    8c3c:	ldr	r0, [fp, #-16]
    8c40:	ldr	r1, [fp, #-20]	; 0xffffffec
    8c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8c48:	ldr	r3, [sp, #20]
    8c4c:	ldr	ip, [sp, #24]
    8c50:	ldr	lr, [sp, #28]
    8c54:	ldr	r4, [fp, #-28]	; 0xffffffe4
    8c58:	mov	r5, sp
    8c5c:	str	r4, [r5, #8]
    8c60:	str	lr, [r5, #4]
    8c64:	str	ip, [r5]
    8c68:	bl	dd2c <flatcc_json_parser_coerce_uint8>
    8c6c:	str	r0, [fp, #-12]
    8c70:	b	8c7c <flatcc_json_parser_uint8+0xd0>
    8c74:	ldr	r0, [fp, #-20]	; 0xffffffec
    8c78:	str	r0, [fp, #-12]
    8c7c:	ldr	r0, [fp, #-12]
    8c80:	sub	sp, fp, #8
    8c84:	pop	{r4, r5, fp, pc}

00008c88 <flatcc_json_parser_symbolic_uint8>:
    8c88:	push	{r4, r5, r6, sl, fp, lr}
    8c8c:	add	fp, sp, #16
    8c90:	sub	sp, sp, #88	; 0x58
    8c94:	ldr	ip, [fp, #8]
    8c98:	str	r0, [fp, #-24]	; 0xffffffe8
    8c9c:	str	r1, [fp, #-28]	; 0xffffffe4
    8ca0:	str	r2, [fp, #-32]	; 0xffffffe0
    8ca4:	str	r3, [fp, #-36]	; 0xffffffdc
    8ca8:	movw	r0, #0
    8cac:	strb	r0, [fp, #-45]	; 0xffffffd3
    8cb0:	movw	r1, #0
    8cb4:	str	r1, [sp, #36]	; 0x24
    8cb8:	ldr	r1, [fp, #8]
    8cbc:	strb	r0, [r1]
    8cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8cc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8ccc:	str	ip, [sp, #32]
    8cd0:	bl	dcbc <flatcc_json_parser_constant_start>
    8cd4:	str	r0, [fp, #-28]	; 0xffffffe4
    8cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8cdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8ce0:	cmp	r0, r1
    8ce4:	bne	8cf4 <flatcc_json_parser_symbolic_uint8+0x6c>
    8ce8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8cec:	str	r0, [fp, #-20]	; 0xffffffec
    8cf0:	b	8ea8 <flatcc_json_parser_symbolic_uint8+0x220>
    8cf4:	b	8cf8 <flatcc_json_parser_symbolic_uint8+0x70>
    8cf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8cfc:	str	r0, [fp, #-40]	; 0xffffffd8
    8d00:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8d04:	ldr	r0, [r0]
    8d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
    8d0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    8d10:	str	r2, [fp, #-44]	; 0xffffffd4
    8d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
    8d18:	str	r0, [sp, #28]
    8d1c:	mov	r0, r1
    8d20:	mov	r1, r2
    8d24:	mov	r2, r3
    8d28:	add	r3, sp, #44	; 0x2c
    8d2c:	add	ip, sp, #48	; 0x30
    8d30:	str	ip, [sp]
    8d34:	add	ip, sp, #40	; 0x28
    8d38:	str	ip, [sp, #4]
    8d3c:	ldr	ip, [sp, #28]
    8d40:	blx	ip
    8d44:	str	r0, [fp, #-28]	; 0xffffffe4
    8d48:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    8d50:	cmp	r0, r1
    8d54:	bne	8d64 <flatcc_json_parser_symbolic_uint8+0xdc>
    8d58:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d5c:	str	r0, [fp, #-20]	; 0xffffffec
    8d60:	b	8ea8 <flatcc_json_parser_symbolic_uint8+0x220>
    8d64:	b	8d68 <flatcc_json_parser_symbolic_uint8+0xe0>
    8d68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8d70:	cmp	r0, r1
    8d74:	movw	r0, #0
    8d78:	str	r0, [sp, #24]
    8d7c:	bne	8da4 <flatcc_json_parser_symbolic_uint8+0x11c>
    8d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8d84:	add	r1, r0, #4
    8d88:	str	r1, [fp, #-40]	; 0xffffffd8
    8d8c:	ldr	r0, [r0, #4]
    8d90:	movw	r1, #0
    8d94:	cmp	r0, r1
    8d98:	movw	r0, #0
    8d9c:	movne	r0, #1
    8da0:	str	r0, [sp, #24]
    8da4:	ldr	r0, [sp, #24]
    8da8:	tst	r0, #1
    8dac:	bne	8d00 <flatcc_json_parser_symbolic_uint8+0x78>
    8db0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8db8:	cmp	r0, r1
    8dbc:	bne	8ddc <flatcc_json_parser_symbolic_uint8+0x154>
    8dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8dc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8dc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8dcc:	movw	r3, #23
    8dd0:	bl	0 <flatcc_json_parser_set_error>
    8dd4:	str	r0, [fp, #-20]	; 0xffffffec
    8dd8:	b	8ea8 <flatcc_json_parser_symbolic_uint8+0x220>
    8ddc:	ldr	r0, [sp, #36]	; 0x24
    8de0:	add	r1, r0, #1
    8de4:	str	r1, [sp, #36]	; 0x24
    8de8:	cmp	r0, #0
    8dec:	beq	8e1c <flatcc_json_parser_symbolic_uint8+0x194>
    8df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8df4:	ldr	r0, [r0, #12]
    8df8:	cmp	r0, #0
    8dfc:	beq	8e1c <flatcc_json_parser_symbolic_uint8+0x194>
    8e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
    8e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8e08:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8e0c:	movw	r3, #14
    8e10:	bl	0 <flatcc_json_parser_set_error>
    8e14:	str	r0, [fp, #-20]	; 0xffffffec
    8e18:	b	8ea8 <flatcc_json_parser_symbolic_uint8+0x220>
    8e1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8e20:	mov	r1, r0
    8e24:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8e28:	ldr	r3, [fp, #-28]	; 0xffffffe4
    8e2c:	ldr	ip, [sp, #44]	; 0x2c
    8e30:	ldr	lr, [sp, #48]	; 0x30
    8e34:	ldr	r4, [sp, #52]	; 0x34
    8e38:	mov	r5, sp
    8e3c:	sub	r6, fp, #45	; 0x2d
    8e40:	str	r6, [r5, #8]
    8e44:	str	r4, [r5, #4]
    8e48:	str	lr, [r5]
    8e4c:	str	r0, [sp, #20]
    8e50:	mov	r0, r2
    8e54:	str	r1, [sp, #16]
    8e58:	mov	r1, r3
    8e5c:	ldr	r2, [sp, #20]
    8e60:	mov	r3, ip
    8e64:	bl	dd2c <flatcc_json_parser_coerce_uint8>
    8e68:	ldr	r1, [sp, #16]
    8e6c:	cmp	r1, r0
    8e70:	bne	8e80 <flatcc_json_parser_symbolic_uint8+0x1f8>
    8e74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8e78:	str	r0, [fp, #-20]	; 0xffffffec
    8e7c:	b	8ea8 <flatcc_json_parser_symbolic_uint8+0x220>
    8e80:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    8e84:	ldr	r1, [fp, #8]
    8e88:	ldrb	r2, [r1]
    8e8c:	add	r0, r2, r0
    8e90:	strb	r0, [r1]
    8e94:	ldr	r0, [sp, #40]	; 0x28
    8e98:	cmp	r0, #0
    8e9c:	bne	8cf8 <flatcc_json_parser_symbolic_uint8+0x70>
    8ea0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8ea4:	str	r0, [fp, #-20]	; 0xffffffec
    8ea8:	ldr	r0, [fp, #-20]	; 0xffffffec
    8eac:	sub	sp, fp, #16
    8eb0:	pop	{r4, r5, r6, sl, fp, pc}

00008eb4 <flatbuffers_uint8_write_to_pe>:
    8eb4:	push	{fp, lr}
    8eb8:	mov	fp, sp
    8ebc:	sub	sp, sp, #8
    8ec0:	str	r0, [sp, #4]
    8ec4:	strb	r1, [sp, #3]
    8ec8:	ldrb	r0, [sp, #3]
    8ecc:	bl	dde4 <flatbuffers_uint8_cast_to_pe>
    8ed0:	ldr	r1, [sp, #4]
    8ed4:	strb	r0, [r1]
    8ed8:	mov	sp, fp
    8edc:	pop	{fp, pc}

00008ee0 <flatcc_json_parser_array_end>:
    8ee0:	push	{fp, lr}
    8ee4:	mov	fp, sp
    8ee8:	sub	sp, sp, #24
    8eec:	str	r0, [fp, #-8]
    8ef0:	str	r1, [sp, #12]
    8ef4:	str	r2, [sp, #8]
    8ef8:	str	r3, [sp, #4]
    8efc:	ldr	r0, [fp, #-8]
    8f00:	ldr	r1, [sp, #12]
    8f04:	ldr	r2, [sp, #8]
    8f08:	bl	c698 <flatcc_json_parser_space>
    8f0c:	str	r0, [sp, #12]
    8f10:	ldr	r0, [sp, #12]
    8f14:	ldr	r1, [sp, #8]
    8f18:	cmp	r0, r1
    8f1c:	bne	8f38 <flatcc_json_parser_array_end+0x58>
    8f20:	ldr	r0, [sp, #4]
    8f24:	movw	r1, #0
    8f28:	str	r1, [r0]
    8f2c:	ldr	r0, [sp, #12]
    8f30:	str	r0, [fp, #-4]
    8f34:	b	9038 <flatcc_json_parser_array_end+0x158>
    8f38:	ldr	r0, [sp, #12]
    8f3c:	ldrb	r0, [r0]
    8f40:	cmp	r0, #44	; 0x2c
    8f44:	beq	8f9c <flatcc_json_parser_array_end+0xbc>
    8f48:	ldr	r0, [sp, #4]
    8f4c:	movw	r1, #0
    8f50:	str	r1, [r0]
    8f54:	ldr	r0, [sp, #12]
    8f58:	ldrb	r0, [r0]
    8f5c:	cmp	r0, #93	; 0x5d
    8f60:	beq	8f80 <flatcc_json_parser_array_end+0xa0>
    8f64:	ldr	r0, [fp, #-8]
    8f68:	ldr	r1, [sp, #12]
    8f6c:	ldr	r2, [sp, #8]
    8f70:	movw	r3, #9
    8f74:	bl	0 <flatcc_json_parser_set_error>
    8f78:	str	r0, [fp, #-4]
    8f7c:	b	9038 <flatcc_json_parser_array_end+0x158>
    8f80:	ldr	r0, [fp, #-8]
    8f84:	ldr	r1, [sp, #12]
    8f88:	add	r1, r1, #1
    8f8c:	ldr	r2, [sp, #8]
    8f90:	bl	c698 <flatcc_json_parser_space>
    8f94:	str	r0, [fp, #-4]
    8f98:	b	9038 <flatcc_json_parser_array_end+0x158>
    8f9c:	ldr	r0, [fp, #-8]
    8fa0:	ldr	r1, [sp, #12]
    8fa4:	add	r1, r1, #1
    8fa8:	ldr	r2, [sp, #8]
    8fac:	bl	c698 <flatcc_json_parser_space>
    8fb0:	str	r0, [sp, #12]
    8fb4:	ldr	r0, [sp, #12]
    8fb8:	ldr	r1, [sp, #8]
    8fbc:	cmp	r0, r1
    8fc0:	bne	8fec <flatcc_json_parser_array_end+0x10c>
    8fc4:	ldr	r0, [sp, #4]
    8fc8:	movw	r1, #0
    8fcc:	str	r1, [r0]
    8fd0:	ldr	r0, [fp, #-8]
    8fd4:	ldr	r1, [sp, #12]
    8fd8:	ldr	r2, [sp, #8]
    8fdc:	movw	r3, #9
    8fe0:	bl	0 <flatcc_json_parser_set_error>
    8fe4:	str	r0, [fp, #-4]
    8fe8:	b	9038 <flatcc_json_parser_array_end+0x158>
    8fec:	ldr	r0, [sp, #12]
    8ff0:	ldrb	r0, [r0]
    8ff4:	cmp	r0, #93	; 0x5d
    8ff8:	bne	9024 <flatcc_json_parser_array_end+0x144>
    8ffc:	ldr	r0, [sp, #4]
    9000:	movw	r1, #0
    9004:	str	r1, [r0]
    9008:	ldr	r0, [fp, #-8]
    900c:	ldr	r1, [sp, #12]
    9010:	add	r1, r1, #1
    9014:	ldr	r2, [sp, #8]
    9018:	bl	c698 <flatcc_json_parser_space>
    901c:	str	r0, [fp, #-4]
    9020:	b	9038 <flatcc_json_parser_array_end+0x158>
    9024:	ldr	r0, [sp, #4]
    9028:	movw	r1, #1
    902c:	str	r1, [r0]
    9030:	ldr	r0, [sp, #12]
    9034:	str	r0, [fp, #-4]
    9038:	ldr	r0, [fp, #-4]
    903c:	mov	sp, fp
    9040:	pop	{fp, pc}

00009044 <flatcc_json_parser_int16>:
    9044:	push	{r4, r5, fp, lr}
    9048:	add	fp, sp, #8
    904c:	sub	sp, sp, #56	; 0x38
    9050:	str	r0, [fp, #-16]
    9054:	str	r1, [fp, #-20]	; 0xffffffec
    9058:	str	r2, [fp, #-24]	; 0xffffffe8
    905c:	str	r3, [fp, #-28]	; 0xffffffe4
    9060:	mov	r0, #0
    9064:	str	r0, [sp, #28]
    9068:	str	r0, [sp, #24]
    906c:	movw	r0, #0
    9070:	str	r0, [sp, #20]
    9074:	ldr	r0, [fp, #-20]	; 0xffffffec
    9078:	str	r0, [sp, #16]
    907c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9080:	movw	r1, #0
    9084:	strh	r1, [r0]
    9088:	ldr	r0, [fp, #-20]	; 0xffffffec
    908c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    9090:	cmp	r0, r1
    9094:	bne	90a4 <flatcc_json_parser_int16+0x60>
    9098:	ldr	r0, [fp, #-20]	; 0xffffffec
    909c:	str	r0, [fp, #-12]
    90a0:	b	9114 <flatcc_json_parser_int16+0xd0>
    90a4:	ldr	r0, [fp, #-16]
    90a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    90ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
    90b0:	add	r3, sp, #20
    90b4:	add	ip, sp, #24
    90b8:	str	ip, [sp]
    90bc:	bl	0 <flatcc_json_parser_integer>
    90c0:	str	r0, [fp, #-20]	; 0xffffffec
    90c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    90c8:	ldr	r1, [sp, #16]
    90cc:	cmp	r0, r1
    90d0:	beq	910c <flatcc_json_parser_int16+0xc8>
    90d4:	ldr	r0, [fp, #-16]
    90d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    90dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    90e0:	ldr	r3, [sp, #20]
    90e4:	ldr	ip, [sp, #24]
    90e8:	ldr	lr, [sp, #28]
    90ec:	ldr	r4, [fp, #-28]	; 0xffffffe4
    90f0:	mov	r5, sp
    90f4:	str	r4, [r5, #8]
    90f8:	str	lr, [r5, #4]
    90fc:	str	ip, [r5]
    9100:	bl	ddf8 <flatcc_json_parser_coerce_int16>
    9104:	str	r0, [fp, #-12]
    9108:	b	9114 <flatcc_json_parser_int16+0xd0>
    910c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9110:	str	r0, [fp, #-12]
    9114:	ldr	r0, [fp, #-12]
    9118:	sub	sp, fp, #8
    911c:	pop	{r4, r5, fp, pc}

00009120 <flatcc_json_parser_symbolic_int16>:
    9120:	push	{r4, r5, r6, sl, fp, lr}
    9124:	add	fp, sp, #16
    9128:	sub	sp, sp, #88	; 0x58
    912c:	ldr	ip, [fp, #8]
    9130:	str	r0, [fp, #-24]	; 0xffffffe8
    9134:	str	r1, [fp, #-28]	; 0xffffffe4
    9138:	str	r2, [fp, #-32]	; 0xffffffe0
    913c:	str	r3, [fp, #-36]	; 0xffffffdc
    9140:	movw	r0, #0
    9144:	strh	r0, [fp, #-46]	; 0xffffffd2
    9148:	movw	r1, #0
    914c:	str	r1, [sp, #36]	; 0x24
    9150:	ldr	r1, [fp, #8]
    9154:	strh	r0, [r1]
    9158:	ldr	r0, [fp, #-24]	; 0xffffffe8
    915c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9160:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9164:	str	ip, [sp, #32]
    9168:	bl	dcbc <flatcc_json_parser_constant_start>
    916c:	str	r0, [fp, #-28]	; 0xffffffe4
    9170:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9174:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9178:	cmp	r0, r1
    917c:	bne	918c <flatcc_json_parser_symbolic_int16+0x6c>
    9180:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9184:	str	r0, [fp, #-20]	; 0xffffffec
    9188:	b	9340 <flatcc_json_parser_symbolic_int16+0x220>
    918c:	b	9190 <flatcc_json_parser_symbolic_int16+0x70>
    9190:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9194:	str	r0, [fp, #-40]	; 0xffffffd8
    9198:	ldr	r0, [fp, #-40]	; 0xffffffd8
    919c:	ldr	r0, [r0]
    91a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    91a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    91a8:	str	r2, [fp, #-44]	; 0xffffffd4
    91ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    91b0:	str	r0, [sp, #28]
    91b4:	mov	r0, r1
    91b8:	mov	r1, r2
    91bc:	mov	r2, r3
    91c0:	add	r3, sp, #44	; 0x2c
    91c4:	add	ip, sp, #48	; 0x30
    91c8:	str	ip, [sp]
    91cc:	add	ip, sp, #40	; 0x28
    91d0:	str	ip, [sp, #4]
    91d4:	ldr	ip, [sp, #28]
    91d8:	blx	ip
    91dc:	str	r0, [fp, #-28]	; 0xffffffe4
    91e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    91e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    91e8:	cmp	r0, r1
    91ec:	bne	91fc <flatcc_json_parser_symbolic_int16+0xdc>
    91f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    91f4:	str	r0, [fp, #-20]	; 0xffffffec
    91f8:	b	9340 <flatcc_json_parser_symbolic_int16+0x220>
    91fc:	b	9200 <flatcc_json_parser_symbolic_int16+0xe0>
    9200:	ldr	r0, [fp, #-28]	; 0xffffffe4
    9204:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9208:	cmp	r0, r1
    920c:	movw	r0, #0
    9210:	str	r0, [sp, #24]
    9214:	bne	923c <flatcc_json_parser_symbolic_int16+0x11c>
    9218:	ldr	r0, [fp, #-40]	; 0xffffffd8
    921c:	add	r1, r0, #4
    9220:	str	r1, [fp, #-40]	; 0xffffffd8
    9224:	ldr	r0, [r0, #4]
    9228:	movw	r1, #0
    922c:	cmp	r0, r1
    9230:	movw	r0, #0
    9234:	movne	r0, #1
    9238:	str	r0, [sp, #24]
    923c:	ldr	r0, [sp, #24]
    9240:	tst	r0, #1
    9244:	bne	9198 <flatcc_json_parser_symbolic_int16+0x78>
    9248:	ldr	r0, [fp, #-44]	; 0xffffffd4
    924c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9250:	cmp	r0, r1
    9254:	bne	9274 <flatcc_json_parser_symbolic_int16+0x154>
    9258:	ldr	r0, [fp, #-24]	; 0xffffffe8
    925c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    9260:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9264:	movw	r3, #23
    9268:	bl	0 <flatcc_json_parser_set_error>
    926c:	str	r0, [fp, #-20]	; 0xffffffec
    9270:	b	9340 <flatcc_json_parser_symbolic_int16+0x220>
    9274:	ldr	r0, [sp, #36]	; 0x24
    9278:	add	r1, r0, #1
    927c:	str	r1, [sp, #36]	; 0x24
    9280:	cmp	r0, #0
    9284:	beq	92b4 <flatcc_json_parser_symbolic_int16+0x194>
    9288:	ldr	r0, [fp, #-24]	; 0xffffffe8
    928c:	ldr	r0, [r0, #12]
    9290:	cmp	r0, #0
    9294:	beq	92b4 <flatcc_json_parser_symbolic_int16+0x194>
    9298:	ldr	r0, [fp, #-24]	; 0xffffffe8
    929c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    92a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    92a4:	movw	r3, #14
    92a8:	bl	0 <flatcc_json_parser_set_error>
    92ac:	str	r0, [fp, #-20]	; 0xffffffec
    92b0:	b	9340 <flatcc_json_parser_symbolic_int16+0x220>
    92b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    92b8:	mov	r1, r0
    92bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    92c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    92c4:	ldr	ip, [sp, #44]	; 0x2c
    92c8:	ldr	lr, [sp, #48]	; 0x30
    92cc:	ldr	r4, [sp, #52]	; 0x34
    92d0:	mov	r5, sp
    92d4:	sub	r6, fp, #46	; 0x2e
    92d8:	str	r6, [r5, #8]
    92dc:	str	r4, [r5, #4]
    92e0:	str	lr, [r5]
    92e4:	str	r0, [sp, #20]
    92e8:	mov	r0, r2
    92ec:	str	r1, [sp, #16]
    92f0:	mov	r1, r3
    92f4:	ldr	r2, [sp, #20]
    92f8:	mov	r3, ip
    92fc:	bl	ddf8 <flatcc_json_parser_coerce_int16>
    9300:	ldr	r1, [sp, #16]
    9304:	cmp	r1, r0
    9308:	bne	9318 <flatcc_json_parser_symbolic_int16+0x1f8>
    930c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9310:	str	r0, [fp, #-20]	; 0xffffffec
    9314:	b	9340 <flatcc_json_parser_symbolic_int16+0x220>
    9318:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
    931c:	ldr	r1, [fp, #8]
    9320:	ldrsh	r2, [r1]
    9324:	add	r0, r2, r0
    9328:	strh	r0, [r1]
    932c:	ldr	r0, [sp, #40]	; 0x28
    9330:	cmp	r0, #0
    9334:	bne	9190 <flatcc_json_parser_symbolic_int16+0x70>
    9338:	ldr	r0, [fp, #-28]	; 0xffffffe4
    933c:	str	r0, [fp, #-20]	; 0xffffffec
    9340:	ldr	r0, [fp, #-20]	; 0xffffffec
    9344:	sub	sp, fp, #16
    9348:	pop	{r4, r5, r6, sl, fp, pc}

0000934c <flatbuffers_int16_write_to_pe>:
    934c:	push	{fp, lr}
    9350:	mov	fp, sp
    9354:	sub	sp, sp, #8
    9358:	str	r0, [sp, #4]
    935c:	strh	r1, [sp, #2]
    9360:	ldrsh	r0, [sp, #2]
    9364:	bl	dee8 <flatbuffers_int16_cast_to_pe>
    9368:	ldr	r1, [sp, #4]
    936c:	strh	r0, [r1]
    9370:	mov	sp, fp
    9374:	pop	{fp, pc}

00009378 <MyGame_InParentNamespace_parse_json_table>:
    9378:	push	{fp, lr}
    937c:	mov	fp, sp
    9380:	sub	sp, sp, #24
    9384:	str	r0, [fp, #-8]
    9388:	str	r1, [sp, #12]
    938c:	str	r2, [sp, #8]
    9390:	str	r3, [sp, #4]
    9394:	ldr	r0, [sp, #4]
    9398:	movw	r1, #0
    939c:	str	r1, [r0]
    93a0:	ldr	r0, [fp, #-8]
    93a4:	ldr	r0, [r0]
    93a8:	bl	0 <flatcc_builder_start_table>
    93ac:	cmp	r0, #0
    93b0:	beq	93b8 <MyGame_InParentNamespace_parse_json_table+0x40>
    93b4:	b	9460 <MyGame_InParentNamespace_parse_json_table+0xe8>
    93b8:	ldr	r0, [fp, #-8]
    93bc:	ldr	r1, [sp, #12]
    93c0:	ldr	r2, [sp, #8]
    93c4:	mov	r3, sp
    93c8:	bl	7050 <flatcc_json_parser_object_start>
    93cc:	str	r0, [sp, #12]
    93d0:	ldr	r0, [sp]
    93d4:	cmp	r0, #0
    93d8:	beq	9420 <MyGame_InParentNamespace_parse_json_table+0xa8>
    93dc:	ldr	r0, [fp, #-8]
    93e0:	ldr	r1, [sp, #12]
    93e4:	ldr	r2, [sp, #8]
    93e8:	bl	7134 <flatcc_json_parser_symbol_start>
    93ec:	str	r0, [sp, #12]
    93f0:	ldr	r0, [fp, #-8]
    93f4:	ldr	r1, [sp, #12]
    93f8:	ldr	r2, [sp, #8]
    93fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9400:	str	r0, [sp, #12]
    9404:	ldr	r0, [fp, #-8]
    9408:	ldr	r1, [sp, #12]
    940c:	ldr	r2, [sp, #8]
    9410:	mov	r3, sp
    9414:	bl	c534 <flatcc_json_parser_object_end>
    9418:	str	r0, [sp, #12]
    941c:	b	93d0 <MyGame_InParentNamespace_parse_json_table+0x58>
    9420:	ldr	r0, [fp, #-8]
    9424:	ldr	r0, [r0, #24]
    9428:	cmp	r0, #0
    942c:	beq	9434 <MyGame_InParentNamespace_parse_json_table+0xbc>
    9430:	b	9460 <MyGame_InParentNamespace_parse_json_table+0xe8>
    9434:	ldr	r0, [fp, #-8]
    9438:	ldr	r0, [r0]
    943c:	bl	0 <flatcc_builder_end_table>
    9440:	ldr	lr, [sp, #4]
    9444:	str	r0, [lr]
    9448:	cmp	r0, #0
    944c:	bne	9454 <MyGame_InParentNamespace_parse_json_table+0xdc>
    9450:	b	9460 <MyGame_InParentNamespace_parse_json_table+0xe8>
    9454:	ldr	r0, [sp, #12]
    9458:	str	r0, [fp, #-4]
    945c:	b	9478 <MyGame_InParentNamespace_parse_json_table+0x100>
    9460:	ldr	r0, [fp, #-8]
    9464:	ldr	r1, [sp, #12]
    9468:	ldr	r2, [sp, #8]
    946c:	movw	r3, #33	; 0x21
    9470:	bl	0 <flatcc_json_parser_set_error>
    9474:	str	r0, [fp, #-4]
    9478:	ldr	r0, [fp, #-4]
    947c:	mov	sp, fp
    9480:	pop	{fp, pc}
    9484:	nop	{0}

00009488 <MyGame_Example_Vec3_parse_json_struct_inline>:
    9488:	push	{fp, lr}
    948c:	mov	fp, sp
    9490:	sub	sp, sp, #88	; 0x58
    9494:	str	r0, [fp, #-8]
    9498:	str	r1, [fp, #-12]
    949c:	str	r2, [fp, #-16]
    94a0:	str	r3, [fp, #-20]	; 0xffffffec
    94a4:	ldr	r0, [fp, #-8]
    94a8:	ldr	r1, [fp, #-12]
    94ac:	ldr	r2, [fp, #-16]
    94b0:	sub	r3, fp, #24
    94b4:	bl	7050 <flatcc_json_parser_object_start>
    94b8:	str	r0, [fp, #-12]
    94bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    94c0:	cmp	r0, #0
    94c4:	beq	9b74 <MyGame_Example_Vec3_parse_json_struct_inline+0x6ec>
    94c8:	ldr	r0, [fp, #-8]
    94cc:	ldr	r1, [fp, #-12]
    94d0:	ldr	r2, [fp, #-16]
    94d4:	bl	7134 <flatcc_json_parser_symbol_start>
    94d8:	str	r0, [fp, #-12]
    94dc:	ldr	r0, [fp, #-12]
    94e0:	ldr	r1, [fp, #-16]
    94e4:	bl	71e0 <flatcc_json_parser_symbol_part>
    94e8:	str	r1, [sp, #44]	; 0x2c
    94ec:	str	r0, [sp, #40]	; 0x28
    94f0:	ldr	r0, [sp, #40]	; 0x28
    94f4:	ldr	r1, [sp, #44]	; 0x2c
    94f8:	mvn	r2, #-855638016	; 0xcd000000
    94fc:	subs	r0, r2, r0
    9500:	movw	r2, #29556	; 0x7374
    9504:	movt	r2, #29797	; 0x7465
    9508:	sbcs	r1, r2, r1
    950c:	str	r0, [sp, #8]
    9510:	str	r1, [sp, #4]
    9514:	bcc	9758 <MyGame_Example_Vec3_parse_json_struct_inline+0x2d0>
    9518:	b	951c <MyGame_Example_Vec3_parse_json_struct_inline+0x94>
    951c:	ldr	r0, [sp, #40]	; 0x28
    9520:	ldr	r1, [sp, #44]	; 0x2c
    9524:	and	r0, r0, #-16777216	; 0xff000000
    9528:	movw	r2, #29556	; 0x7374
    952c:	movt	r2, #29797	; 0x7465
    9530:	eor	r1, r1, r2
    9534:	eor	r0, r0, #838860800	; 0x32000000
    9538:	orr	r0, r0, r1
    953c:	cmp	r0, #0
    9540:	bne	962c <MyGame_Example_Vec3_parse_json_struct_inline+0x1a4>
    9544:	b	9548 <MyGame_Example_Vec3_parse_json_struct_inline+0xc0>
    9548:	ldr	r0, [fp, #-8]
    954c:	ldr	r1, [fp, #-12]
    9550:	str	r1, [fp, #-36]	; 0xffffffdc
    9554:	ldr	r2, [fp, #-16]
    9558:	movw	r3, #5
    955c:	bl	7218 <flatcc_json_parser_match_symbol>
    9560:	str	r0, [fp, #-12]
    9564:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9568:	ldr	r1, [fp, #-12]
    956c:	cmp	r0, r1
    9570:	beq	9614 <MyGame_Example_Vec3_parse_json_struct_inline+0x18c>
    9574:	movw	r0, #0
    9578:	strb	r0, [sp, #39]	; 0x27
    957c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9580:	add	r0, r0, #24
    9584:	str	r0, [fp, #-32]	; 0xffffffe0
    9588:	ldr	r0, [fp, #-8]
    958c:	ldr	r1, [fp, #-12]
    9590:	str	r1, [fp, #-36]	; 0xffffffdc
    9594:	ldr	r2, [fp, #-16]
    9598:	add	r3, sp, #39	; 0x27
    959c:	bl	8794 <flatcc_json_parser_int8>
    95a0:	str	r0, [fp, #-12]
    95a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    95a8:	ldr	r1, [fp, #-12]
    95ac:	cmp	r0, r1
    95b0:	bne	9604 <MyGame_Example_Vec3_parse_json_struct_inline+0x17c>
    95b4:	ldr	r0, [fp, #-8]
    95b8:	ldr	r1, [fp, #-12]
    95bc:	str	r1, [fp, #-36]	; 0xffffffdc
    95c0:	ldr	r2, [fp, #-16]
    95c4:	movw	r3, #0
    95c8:	movt	r3, #0
    95cc:	add	ip, sp, #39	; 0x27
    95d0:	str	ip, [sp]
    95d4:	bl	8870 <flatcc_json_parser_symbolic_int8>
    95d8:	str	r0, [fp, #-12]
    95dc:	ldr	r0, [fp, #-12]
    95e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    95e4:	cmp	r0, r1
    95e8:	beq	95fc <MyGame_Example_Vec3_parse_json_struct_inline+0x174>
    95ec:	ldr	r0, [fp, #-12]
    95f0:	ldr	r1, [fp, #-16]
    95f4:	cmp	r0, r1
    95f8:	bne	9600 <MyGame_Example_Vec3_parse_json_struct_inline+0x178>
    95fc:	b	9b80 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    9600:	b	9604 <MyGame_Example_Vec3_parse_json_struct_inline+0x17c>
    9604:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9608:	ldrsb	r1, [sp, #39]	; 0x27
    960c:	bl	8a9c <flatbuffers_int8_write_to_pe>
    9610:	b	9628 <MyGame_Example_Vec3_parse_json_struct_inline+0x1a0>
    9614:	ldr	r0, [fp, #-8]
    9618:	ldr	r1, [fp, #-12]
    961c:	ldr	r2, [fp, #-16]
    9620:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9624:	str	r0, [fp, #-12]
    9628:	b	9754 <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    962c:	ldr	r0, [sp, #40]	; 0x28
    9630:	ldr	r1, [sp, #44]	; 0x2c
    9634:	and	r0, r0, #-16777216	; 0xff000000
    9638:	movw	r2, #29556	; 0x7374
    963c:	movt	r2, #29797	; 0x7465
    9640:	eor	r1, r1, r2
    9644:	eor	r0, r0, #822083584	; 0x31000000
    9648:	orr	r0, r0, r1
    964c:	cmp	r0, #0
    9650:	bne	973c <MyGame_Example_Vec3_parse_json_struct_inline+0x2b4>
    9654:	b	9658 <MyGame_Example_Vec3_parse_json_struct_inline+0x1d0>
    9658:	ldr	r0, [fp, #-8]
    965c:	ldr	r1, [fp, #-12]
    9660:	str	r1, [fp, #-36]	; 0xffffffdc
    9664:	ldr	r2, [fp, #-16]
    9668:	movw	r3, #5
    966c:	bl	7218 <flatcc_json_parser_match_symbol>
    9670:	str	r0, [fp, #-12]
    9674:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9678:	ldr	r1, [fp, #-12]
    967c:	cmp	r0, r1
    9680:	beq	9724 <MyGame_Example_Vec3_parse_json_struct_inline+0x29c>
    9684:	vldr	d16, [pc, #956]	; 9a48 <MyGame_Example_Vec3_parse_json_struct_inline+0x5c0>
    9688:	vstr	d16, [sp, #24]
    968c:	ldr	r0, [fp, #-20]	; 0xffffffec
    9690:	add	r0, r0, #16
    9694:	str	r0, [fp, #-32]	; 0xffffffe0
    9698:	ldr	r0, [fp, #-8]
    969c:	ldr	r1, [fp, #-12]
    96a0:	str	r1, [fp, #-36]	; 0xffffffdc
    96a4:	ldr	r2, [fp, #-16]
    96a8:	add	r3, sp, #24
    96ac:	bl	0 <flatcc_json_parser_double>
    96b0:	str	r0, [fp, #-12]
    96b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
    96b8:	ldr	r1, [fp, #-12]
    96bc:	cmp	r0, r1
    96c0:	bne	9714 <MyGame_Example_Vec3_parse_json_struct_inline+0x28c>
    96c4:	ldr	r0, [fp, #-8]
    96c8:	ldr	r1, [fp, #-12]
    96cc:	str	r1, [fp, #-36]	; 0xffffffdc
    96d0:	ldr	r2, [fp, #-16]
    96d4:	movw	r3, #0
    96d8:	movt	r3, #0
    96dc:	add	ip, sp, #24
    96e0:	str	ip, [sp]
    96e4:	bl	c2d0 <flatcc_json_parser_symbolic_double>
    96e8:	str	r0, [fp, #-12]
    96ec:	ldr	r0, [fp, #-12]
    96f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    96f4:	cmp	r0, r1
    96f8:	beq	970c <MyGame_Example_Vec3_parse_json_struct_inline+0x284>
    96fc:	ldr	r0, [fp, #-12]
    9700:	ldr	r1, [fp, #-16]
    9704:	cmp	r0, r1
    9708:	bne	9710 <MyGame_Example_Vec3_parse_json_struct_inline+0x288>
    970c:	b	9b80 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    9710:	b	9714 <MyGame_Example_Vec3_parse_json_struct_inline+0x28c>
    9714:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9718:	vldr	d0, [sp, #24]
    971c:	bl	c508 <flatbuffers_double_write_to_pe>
    9720:	b	9738 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b0>
    9724:	ldr	r0, [fp, #-8]
    9728:	ldr	r1, [fp, #-12]
    972c:	ldr	r2, [fp, #-16]
    9730:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9734:	str	r0, [fp, #-12]
    9738:	b	9750 <MyGame_Example_Vec3_parse_json_struct_inline+0x2c8>
    973c:	ldr	r0, [fp, #-8]
    9740:	ldr	r1, [fp, #-12]
    9744:	ldr	r2, [fp, #-16]
    9748:	bl	0 <flatcc_json_parser_unmatched_symbol>
    974c:	str	r0, [fp, #-12]
    9750:	b	9754 <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    9754:	b	9b58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6d0>
    9758:	ldr	r0, [sp, #44]	; 0x2c
    975c:	cmn	r0, #-2013265919	; 0x88000001
    9760:	bhi	9818 <MyGame_Example_Vec3_parse_json_struct_inline+0x390>
    9764:	b	9768 <MyGame_Example_Vec3_parse_json_struct_inline+0x2e0>
    9768:	ldr	r0, [sp, #40]	; 0x28
    976c:	ldr	r1, [sp, #44]	; 0x2c
    9770:	and	r0, r0, #-16777216	; 0xff000000
    9774:	movw	r2, #29556	; 0x7374
    9778:	movt	r2, #29797	; 0x7465
    977c:	eor	r1, r1, r2
    9780:	eor	r0, r0, #855638016	; 0x33000000
    9784:	orr	r0, r0, r1
    9788:	cmp	r0, #0
    978c:	bne	9800 <MyGame_Example_Vec3_parse_json_struct_inline+0x378>
    9790:	b	9794 <MyGame_Example_Vec3_parse_json_struct_inline+0x30c>
    9794:	ldr	r0, [fp, #-8]
    9798:	ldr	r1, [fp, #-12]
    979c:	str	r1, [fp, #-36]	; 0xffffffdc
    97a0:	ldr	r2, [fp, #-16]
    97a4:	movw	r3, #5
    97a8:	bl	7218 <flatcc_json_parser_match_symbol>
    97ac:	str	r0, [fp, #-12]
    97b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
    97b4:	ldr	r1, [fp, #-12]
    97b8:	cmp	r0, r1
    97bc:	beq	97e8 <MyGame_Example_Vec3_parse_json_struct_inline+0x360>
    97c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    97c4:	add	r0, r0, #26
    97c8:	str	r0, [fp, #-32]	; 0xffffffe0
    97cc:	ldr	r0, [fp, #-8]
    97d0:	ldr	r1, [fp, #-12]
    97d4:	ldr	r2, [fp, #-16]
    97d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    97dc:	bl	9ba8 <MyGame_Example_Test_parse_json_struct_inline>
    97e0:	str	r0, [fp, #-12]
    97e4:	b	97fc <MyGame_Example_Vec3_parse_json_struct_inline+0x374>
    97e8:	ldr	r0, [fp, #-8]
    97ec:	ldr	r1, [fp, #-12]
    97f0:	ldr	r2, [fp, #-16]
    97f4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    97f8:	str	r0, [fp, #-12]
    97fc:	b	9814 <MyGame_Example_Vec3_parse_json_struct_inline+0x38c>
    9800:	ldr	r0, [fp, #-8]
    9804:	ldr	r1, [fp, #-12]
    9808:	ldr	r2, [fp, #-16]
    980c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9810:	str	r0, [fp, #-12]
    9814:	b	9b54 <MyGame_Example_Vec3_parse_json_struct_inline+0x6cc>
    9818:	ldrb	r0, [sp, #47]	; 0x2f
    981c:	cmp	r0, #120	; 0x78
    9820:	bhi	9938 <MyGame_Example_Vec3_parse_json_struct_inline+0x4b0>
    9824:	b	9828 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    9828:	ldr	r0, [sp, #44]	; 0x2c
    982c:	and	r0, r0, #-16777216	; 0xff000000
    9830:	teq	r0, #2013265920	; 0x78000000
    9834:	bne	9920 <MyGame_Example_Vec3_parse_json_struct_inline+0x498>
    9838:	b	983c <MyGame_Example_Vec3_parse_json_struct_inline+0x3b4>
    983c:	ldr	r0, [fp, #-8]
    9840:	ldr	r1, [fp, #-12]
    9844:	str	r1, [fp, #-36]	; 0xffffffdc
    9848:	ldr	r2, [fp, #-16]
    984c:	movw	r3, #1
    9850:	bl	7218 <flatcc_json_parser_match_symbol>
    9854:	str	r0, [fp, #-12]
    9858:	ldr	r0, [fp, #-36]	; 0xffffffdc
    985c:	ldr	r1, [fp, #-12]
    9860:	cmp	r0, r1
    9864:	beq	9908 <MyGame_Example_Vec3_parse_json_struct_inline+0x480>
    9868:	vldr	s0, [pc, #820]	; 9ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x71c>
    986c:	vstr	s0, [sp, #20]
    9870:	ldr	r0, [fp, #-20]	; 0xffffffec
    9874:	add	r0, r0, #0
    9878:	str	r0, [fp, #-32]	; 0xffffffe0
    987c:	ldr	r0, [fp, #-8]
    9880:	ldr	r1, [fp, #-12]
    9884:	str	r1, [fp, #-36]	; 0xffffffdc
    9888:	ldr	r2, [fp, #-16]
    988c:	add	r3, sp, #20
    9890:	bl	0 <flatcc_json_parser_float>
    9894:	str	r0, [fp, #-12]
    9898:	ldr	r0, [fp, #-36]	; 0xffffffdc
    989c:	ldr	r1, [fp, #-12]
    98a0:	cmp	r0, r1
    98a4:	bne	98f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x470>
    98a8:	ldr	r0, [fp, #-8]
    98ac:	ldr	r1, [fp, #-12]
    98b0:	str	r1, [fp, #-36]	; 0xffffffdc
    98b4:	ldr	r2, [fp, #-16]
    98b8:	movw	r3, #0
    98bc:	movt	r3, #0
    98c0:	add	ip, sp, #20
    98c4:	str	ip, [sp]
    98c8:	bl	b37c <flatcc_json_parser_symbolic_float>
    98cc:	str	r0, [fp, #-12]
    98d0:	ldr	r0, [fp, #-12]
    98d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    98d8:	cmp	r0, r1
    98dc:	beq	98f0 <MyGame_Example_Vec3_parse_json_struct_inline+0x468>
    98e0:	ldr	r0, [fp, #-12]
    98e4:	ldr	r1, [fp, #-16]
    98e8:	cmp	r0, r1
    98ec:	bne	98f4 <MyGame_Example_Vec3_parse_json_struct_inline+0x46c>
    98f0:	b	9b80 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    98f4:	b	98f8 <MyGame_Example_Vec3_parse_json_struct_inline+0x470>
    98f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    98fc:	vldr	s0, [sp, #20]
    9900:	bl	b5ac <flatbuffers_float_write_to_pe>
    9904:	b	991c <MyGame_Example_Vec3_parse_json_struct_inline+0x494>
    9908:	ldr	r0, [fp, #-8]
    990c:	ldr	r1, [fp, #-12]
    9910:	ldr	r2, [fp, #-16]
    9914:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9918:	str	r0, [fp, #-12]
    991c:	b	9934 <MyGame_Example_Vec3_parse_json_struct_inline+0x4ac>
    9920:	ldr	r0, [fp, #-8]
    9924:	ldr	r1, [fp, #-12]
    9928:	ldr	r2, [fp, #-16]
    992c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9930:	str	r0, [fp, #-12]
    9934:	b	9b50 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c8>
    9938:	ldr	r0, [sp, #44]	; 0x2c
    993c:	and	r0, r0, #-16777216	; 0xff000000
    9940:	teq	r0, #2046820352	; 0x7a000000
    9944:	bne	9a30 <MyGame_Example_Vec3_parse_json_struct_inline+0x5a8>
    9948:	b	994c <MyGame_Example_Vec3_parse_json_struct_inline+0x4c4>
    994c:	ldr	r0, [fp, #-8]
    9950:	ldr	r1, [fp, #-12]
    9954:	str	r1, [fp, #-36]	; 0xffffffdc
    9958:	ldr	r2, [fp, #-16]
    995c:	movw	r3, #1
    9960:	bl	7218 <flatcc_json_parser_match_symbol>
    9964:	str	r0, [fp, #-12]
    9968:	ldr	r0, [fp, #-36]	; 0xffffffdc
    996c:	ldr	r1, [fp, #-12]
    9970:	cmp	r0, r1
    9974:	beq	9a18 <MyGame_Example_Vec3_parse_json_struct_inline+0x590>
    9978:	vldr	s0, [pc, #548]	; 9ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x71c>
    997c:	vstr	s0, [sp, #16]
    9980:	ldr	r0, [fp, #-20]	; 0xffffffec
    9984:	add	r0, r0, #8
    9988:	str	r0, [fp, #-32]	; 0xffffffe0
    998c:	ldr	r0, [fp, #-8]
    9990:	ldr	r1, [fp, #-12]
    9994:	str	r1, [fp, #-36]	; 0xffffffdc
    9998:	ldr	r2, [fp, #-16]
    999c:	add	r3, sp, #16
    99a0:	bl	0 <flatcc_json_parser_float>
    99a4:	str	r0, [fp, #-12]
    99a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    99ac:	ldr	r1, [fp, #-12]
    99b0:	cmp	r0, r1
    99b4:	bne	9a08 <MyGame_Example_Vec3_parse_json_struct_inline+0x580>
    99b8:	ldr	r0, [fp, #-8]
    99bc:	ldr	r1, [fp, #-12]
    99c0:	str	r1, [fp, #-36]	; 0xffffffdc
    99c4:	ldr	r2, [fp, #-16]
    99c8:	movw	r3, #0
    99cc:	movt	r3, #0
    99d0:	add	ip, sp, #16
    99d4:	str	ip, [sp]
    99d8:	bl	b37c <flatcc_json_parser_symbolic_float>
    99dc:	str	r0, [fp, #-12]
    99e0:	ldr	r0, [fp, #-12]
    99e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    99e8:	cmp	r0, r1
    99ec:	beq	9a00 <MyGame_Example_Vec3_parse_json_struct_inline+0x578>
    99f0:	ldr	r0, [fp, #-12]
    99f4:	ldr	r1, [fp, #-16]
    99f8:	cmp	r0, r1
    99fc:	bne	9a04 <MyGame_Example_Vec3_parse_json_struct_inline+0x57c>
    9a00:	b	9b80 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    9a04:	b	9a08 <MyGame_Example_Vec3_parse_json_struct_inline+0x580>
    9a08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9a0c:	vldr	s0, [sp, #16]
    9a10:	bl	b5ac <flatbuffers_float_write_to_pe>
    9a14:	b	9a2c <MyGame_Example_Vec3_parse_json_struct_inline+0x5a4>
    9a18:	ldr	r0, [fp, #-8]
    9a1c:	ldr	r1, [fp, #-12]
    9a20:	ldr	r2, [fp, #-16]
    9a24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a28:	str	r0, [fp, #-12]
    9a2c:	b	9b4c <MyGame_Example_Vec3_parse_json_struct_inline+0x6c4>
    9a30:	ldr	r0, [sp, #44]	; 0x2c
    9a34:	and	r0, r0, #-16777216	; 0xff000000
    9a38:	teq	r0, #2030043136	; 0x79000000
    9a3c:	bne	9b34 <MyGame_Example_Vec3_parse_json_struct_inline+0x6ac>
    9a40:	b	9a50 <MyGame_Example_Vec3_parse_json_struct_inline+0x5c8>
    9a44:	nop	{0}
	...
    9a50:	ldr	r0, [fp, #-8]
    9a54:	ldr	r1, [fp, #-12]
    9a58:	str	r1, [fp, #-36]	; 0xffffffdc
    9a5c:	ldr	r2, [fp, #-16]
    9a60:	movw	r3, #1
    9a64:	bl	7218 <flatcc_json_parser_match_symbol>
    9a68:	str	r0, [fp, #-12]
    9a6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9a70:	ldr	r1, [fp, #-12]
    9a74:	cmp	r0, r1
    9a78:	beq	9b1c <MyGame_Example_Vec3_parse_json_struct_inline+0x694>
    9a7c:	vldr	s0, [pc, #288]	; 9ba4 <MyGame_Example_Vec3_parse_json_struct_inline+0x71c>
    9a80:	vstr	s0, [sp, #12]
    9a84:	ldr	r0, [fp, #-20]	; 0xffffffec
    9a88:	add	r0, r0, #4
    9a8c:	str	r0, [fp, #-32]	; 0xffffffe0
    9a90:	ldr	r0, [fp, #-8]
    9a94:	ldr	r1, [fp, #-12]
    9a98:	str	r1, [fp, #-36]	; 0xffffffdc
    9a9c:	ldr	r2, [fp, #-16]
    9aa0:	add	r3, sp, #12
    9aa4:	bl	0 <flatcc_json_parser_float>
    9aa8:	str	r0, [fp, #-12]
    9aac:	ldr	r0, [fp, #-36]	; 0xffffffdc
    9ab0:	ldr	r1, [fp, #-12]
    9ab4:	cmp	r0, r1
    9ab8:	bne	9b0c <MyGame_Example_Vec3_parse_json_struct_inline+0x684>
    9abc:	ldr	r0, [fp, #-8]
    9ac0:	ldr	r1, [fp, #-12]
    9ac4:	str	r1, [fp, #-36]	; 0xffffffdc
    9ac8:	ldr	r2, [fp, #-16]
    9acc:	movw	r3, #0
    9ad0:	movt	r3, #0
    9ad4:	add	ip, sp, #12
    9ad8:	str	ip, [sp]
    9adc:	bl	b37c <flatcc_json_parser_symbolic_float>
    9ae0:	str	r0, [fp, #-12]
    9ae4:	ldr	r0, [fp, #-12]
    9ae8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9aec:	cmp	r0, r1
    9af0:	beq	9b04 <MyGame_Example_Vec3_parse_json_struct_inline+0x67c>
    9af4:	ldr	r0, [fp, #-12]
    9af8:	ldr	r1, [fp, #-16]
    9afc:	cmp	r0, r1
    9b00:	bne	9b08 <MyGame_Example_Vec3_parse_json_struct_inline+0x680>
    9b04:	b	9b80 <MyGame_Example_Vec3_parse_json_struct_inline+0x6f8>
    9b08:	b	9b0c <MyGame_Example_Vec3_parse_json_struct_inline+0x684>
    9b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9b10:	vldr	s0, [sp, #12]
    9b14:	bl	b5ac <flatbuffers_float_write_to_pe>
    9b18:	b	9b30 <MyGame_Example_Vec3_parse_json_struct_inline+0x6a8>
    9b1c:	ldr	r0, [fp, #-8]
    9b20:	ldr	r1, [fp, #-12]
    9b24:	ldr	r2, [fp, #-16]
    9b28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9b2c:	str	r0, [fp, #-12]
    9b30:	b	9b48 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c0>
    9b34:	ldr	r0, [fp, #-8]
    9b38:	ldr	r1, [fp, #-12]
    9b3c:	ldr	r2, [fp, #-16]
    9b40:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9b44:	str	r0, [fp, #-12]
    9b48:	b	9b4c <MyGame_Example_Vec3_parse_json_struct_inline+0x6c4>
    9b4c:	b	9b50 <MyGame_Example_Vec3_parse_json_struct_inline+0x6c8>
    9b50:	b	9b54 <MyGame_Example_Vec3_parse_json_struct_inline+0x6cc>
    9b54:	b	9b58 <MyGame_Example_Vec3_parse_json_struct_inline+0x6d0>
    9b58:	ldr	r0, [fp, #-8]
    9b5c:	ldr	r1, [fp, #-12]
    9b60:	ldr	r2, [fp, #-16]
    9b64:	sub	r3, fp, #24
    9b68:	bl	c534 <flatcc_json_parser_object_end>
    9b6c:	str	r0, [fp, #-12]
    9b70:	b	94bc <MyGame_Example_Vec3_parse_json_struct_inline+0x34>
    9b74:	ldr	r0, [fp, #-12]
    9b78:	str	r0, [fp, #-4]
    9b7c:	b	9b98 <MyGame_Example_Vec3_parse_json_struct_inline+0x710>
    9b80:	ldr	r0, [fp, #-8]
    9b84:	ldr	r1, [fp, #-12]
    9b88:	ldr	r2, [fp, #-16]
    9b8c:	movw	r3, #33	; 0x21
    9b90:	bl	0 <flatcc_json_parser_set_error>
    9b94:	str	r0, [fp, #-4]
    9b98:	ldr	r0, [fp, #-4]
    9b9c:	mov	sp, fp
    9ba0:	pop	{fp, pc}
    9ba4:	.word	0x00000000

00009ba8 <MyGame_Example_Test_parse_json_struct_inline>:
    9ba8:	push	{fp, lr}
    9bac:	mov	fp, sp
    9bb0:	sub	sp, sp, #56	; 0x38
    9bb4:	str	r0, [fp, #-8]
    9bb8:	str	r1, [fp, #-12]
    9bbc:	str	r2, [fp, #-16]
    9bc0:	str	r3, [fp, #-20]	; 0xffffffec
    9bc4:	ldr	r0, [fp, #-8]
    9bc8:	ldr	r1, [fp, #-12]
    9bcc:	ldr	r2, [fp, #-16]
    9bd0:	sub	r3, fp, #24
    9bd4:	bl	7050 <flatcc_json_parser_object_start>
    9bd8:	str	r0, [fp, #-12]
    9bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    9be0:	cmp	r0, #0
    9be4:	beq	9e34 <MyGame_Example_Test_parse_json_struct_inline+0x28c>
    9be8:	ldr	r0, [fp, #-8]
    9bec:	ldr	r1, [fp, #-12]
    9bf0:	ldr	r2, [fp, #-16]
    9bf4:	bl	7134 <flatcc_json_parser_symbol_start>
    9bf8:	str	r0, [fp, #-12]
    9bfc:	ldr	r0, [fp, #-12]
    9c00:	ldr	r1, [fp, #-16]
    9c04:	bl	71e0 <flatcc_json_parser_symbol_part>
    9c08:	str	r1, [sp, #12]
    9c0c:	str	r0, [sp, #8]
    9c10:	ldr	r0, [sp, #12]
    9c14:	and	r0, r0, #-16777216	; 0xff000000
    9c18:	teq	r0, #1644167168	; 0x62000000
    9c1c:	bne	9d08 <MyGame_Example_Test_parse_json_struct_inline+0x160>
    9c20:	b	9c24 <MyGame_Example_Test_parse_json_struct_inline+0x7c>
    9c24:	ldr	r0, [fp, #-8]
    9c28:	ldr	r1, [fp, #-12]
    9c2c:	str	r1, [sp, #20]
    9c30:	ldr	r2, [fp, #-16]
    9c34:	movw	r3, #1
    9c38:	bl	7218 <flatcc_json_parser_match_symbol>
    9c3c:	str	r0, [fp, #-12]
    9c40:	ldr	r0, [sp, #20]
    9c44:	ldr	r1, [fp, #-12]
    9c48:	cmp	r0, r1
    9c4c:	beq	9cf0 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    9c50:	movw	r0, #0
    9c54:	strb	r0, [sp, #7]
    9c58:	ldr	r0, [fp, #-20]	; 0xffffffec
    9c5c:	add	r0, r0, #2
    9c60:	str	r0, [sp, #24]
    9c64:	ldr	r0, [fp, #-8]
    9c68:	ldr	r1, [fp, #-12]
    9c6c:	str	r1, [sp, #20]
    9c70:	ldr	r2, [fp, #-16]
    9c74:	add	r3, sp, #7
    9c78:	bl	8794 <flatcc_json_parser_int8>
    9c7c:	str	r0, [fp, #-12]
    9c80:	ldr	r0, [sp, #20]
    9c84:	ldr	r1, [fp, #-12]
    9c88:	cmp	r0, r1
    9c8c:	bne	9ce0 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    9c90:	ldr	r0, [fp, #-8]
    9c94:	ldr	r1, [fp, #-12]
    9c98:	str	r1, [sp, #20]
    9c9c:	ldr	r2, [fp, #-16]
    9ca0:	movw	r3, #0
    9ca4:	movt	r3, #0
    9ca8:	add	ip, sp, #7
    9cac:	str	ip, [sp]
    9cb0:	bl	8870 <flatcc_json_parser_symbolic_int8>
    9cb4:	str	r0, [fp, #-12]
    9cb8:	ldr	r0, [fp, #-12]
    9cbc:	ldr	r1, [sp, #20]
    9cc0:	cmp	r0, r1
    9cc4:	beq	9cd8 <MyGame_Example_Test_parse_json_struct_inline+0x130>
    9cc8:	ldr	r0, [fp, #-12]
    9ccc:	ldr	r1, [fp, #-16]
    9cd0:	cmp	r0, r1
    9cd4:	bne	9cdc <MyGame_Example_Test_parse_json_struct_inline+0x134>
    9cd8:	b	9e40 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    9cdc:	b	9ce0 <MyGame_Example_Test_parse_json_struct_inline+0x138>
    9ce0:	ldr	r0, [sp, #24]
    9ce4:	ldrsb	r1, [sp, #7]
    9ce8:	bl	8a9c <flatbuffers_int8_write_to_pe>
    9cec:	b	9d04 <MyGame_Example_Test_parse_json_struct_inline+0x15c>
    9cf0:	ldr	r0, [fp, #-8]
    9cf4:	ldr	r1, [fp, #-12]
    9cf8:	ldr	r2, [fp, #-16]
    9cfc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9d00:	str	r0, [fp, #-12]
    9d04:	b	9e18 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    9d08:	ldr	r0, [sp, #12]
    9d0c:	and	r0, r0, #-16777216	; 0xff000000
    9d10:	teq	r0, #1627389952	; 0x61000000
    9d14:	bne	9e00 <MyGame_Example_Test_parse_json_struct_inline+0x258>
    9d18:	b	9d1c <MyGame_Example_Test_parse_json_struct_inline+0x174>
    9d1c:	ldr	r0, [fp, #-8]
    9d20:	ldr	r1, [fp, #-12]
    9d24:	str	r1, [sp, #20]
    9d28:	ldr	r2, [fp, #-16]
    9d2c:	movw	r3, #1
    9d30:	bl	7218 <flatcc_json_parser_match_symbol>
    9d34:	str	r0, [fp, #-12]
    9d38:	ldr	r0, [sp, #20]
    9d3c:	ldr	r1, [fp, #-12]
    9d40:	cmp	r0, r1
    9d44:	beq	9de8 <MyGame_Example_Test_parse_json_struct_inline+0x240>
    9d48:	movw	r0, #0
    9d4c:	strh	r0, [sp, #4]
    9d50:	ldr	r0, [fp, #-20]	; 0xffffffec
    9d54:	add	r0, r0, #0
    9d58:	str	r0, [sp, #24]
    9d5c:	ldr	r0, [fp, #-8]
    9d60:	ldr	r1, [fp, #-12]
    9d64:	str	r1, [sp, #20]
    9d68:	ldr	r2, [fp, #-16]
    9d6c:	add	r3, sp, #4
    9d70:	bl	9044 <flatcc_json_parser_int16>
    9d74:	str	r0, [fp, #-12]
    9d78:	ldr	r0, [sp, #20]
    9d7c:	ldr	r1, [fp, #-12]
    9d80:	cmp	r0, r1
    9d84:	bne	9dd8 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    9d88:	ldr	r0, [fp, #-8]
    9d8c:	ldr	r1, [fp, #-12]
    9d90:	str	r1, [sp, #20]
    9d94:	ldr	r2, [fp, #-16]
    9d98:	movw	r3, #0
    9d9c:	movt	r3, #0
    9da0:	add	ip, sp, #4
    9da4:	str	ip, [sp]
    9da8:	bl	9120 <flatcc_json_parser_symbolic_int16>
    9dac:	str	r0, [fp, #-12]
    9db0:	ldr	r0, [fp, #-12]
    9db4:	ldr	r1, [sp, #20]
    9db8:	cmp	r0, r1
    9dbc:	beq	9dd0 <MyGame_Example_Test_parse_json_struct_inline+0x228>
    9dc0:	ldr	r0, [fp, #-12]
    9dc4:	ldr	r1, [fp, #-16]
    9dc8:	cmp	r0, r1
    9dcc:	bne	9dd4 <MyGame_Example_Test_parse_json_struct_inline+0x22c>
    9dd0:	b	9e40 <MyGame_Example_Test_parse_json_struct_inline+0x298>
    9dd4:	b	9dd8 <MyGame_Example_Test_parse_json_struct_inline+0x230>
    9dd8:	ldr	r0, [sp, #24]
    9ddc:	ldrsh	r1, [sp, #4]
    9de0:	bl	934c <flatbuffers_int16_write_to_pe>
    9de4:	b	9dfc <MyGame_Example_Test_parse_json_struct_inline+0x254>
    9de8:	ldr	r0, [fp, #-8]
    9dec:	ldr	r1, [fp, #-12]
    9df0:	ldr	r2, [fp, #-16]
    9df4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9df8:	str	r0, [fp, #-12]
    9dfc:	b	9e14 <MyGame_Example_Test_parse_json_struct_inline+0x26c>
    9e00:	ldr	r0, [fp, #-8]
    9e04:	ldr	r1, [fp, #-12]
    9e08:	ldr	r2, [fp, #-16]
    9e0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9e10:	str	r0, [fp, #-12]
    9e14:	b	9e18 <MyGame_Example_Test_parse_json_struct_inline+0x270>
    9e18:	ldr	r0, [fp, #-8]
    9e1c:	ldr	r1, [fp, #-12]
    9e20:	ldr	r2, [fp, #-16]
    9e24:	sub	r3, fp, #24
    9e28:	bl	c534 <flatcc_json_parser_object_end>
    9e2c:	str	r0, [fp, #-12]
    9e30:	b	9bdc <MyGame_Example_Test_parse_json_struct_inline+0x34>
    9e34:	ldr	r0, [fp, #-12]
    9e38:	str	r0, [fp, #-4]
    9e3c:	b	9e58 <MyGame_Example_Test_parse_json_struct_inline+0x2b0>
    9e40:	ldr	r0, [fp, #-8]
    9e44:	ldr	r1, [fp, #-12]
    9e48:	ldr	r2, [fp, #-16]
    9e4c:	movw	r3, #33	; 0x21
    9e50:	bl	0 <flatcc_json_parser_set_error>
    9e54:	str	r0, [fp, #-4]
    9e58:	ldr	r0, [fp, #-4]
    9e5c:	mov	sp, fp
    9e60:	pop	{fp, pc}

00009e64 <MyGame_Example_Any_parse_json_union>:
    9e64:	push	{fp, lr}
    9e68:	mov	fp, sp
    9e6c:	sub	sp, sp, #32
    9e70:	ldr	ip, [fp, #8]
    9e74:	str	r0, [fp, #-8]
    9e78:	str	r1, [fp, #-12]
    9e7c:	str	r2, [sp, #16]
    9e80:	strb	r3, [sp, #15]
    9e84:	ldr	r0, [fp, #8]
    9e88:	mov	r1, #0
    9e8c:	str	r1, [r0]
    9e90:	ldrb	r0, [sp, #15]
    9e94:	mov	r1, r0
    9e98:	cmp	r0, #4
    9e9c:	str	ip, [sp, #8]
    9ea0:	str	r1, [sp, #4]
    9ea4:	bhi	9f54 <MyGame_Example_Any_parse_json_union+0xf0>
    9ea8:	add	r0, pc, #8
    9eac:	ldr	r1, [sp, #4]
    9eb0:	ldr	r0, [r0, r1, lsl #2]
    9eb4:	mov	pc, r0
    9eb8:	.word	0x00009ecc
    9ebc:	.word	0x00009ee4
    9ec0:	.word	0x00009f00
    9ec4:	.word	0x00009f1c
    9ec8:	.word	0x00009f38
    9ecc:	ldr	r0, [fp, #-8]
    9ed0:	ldr	r1, [fp, #-12]
    9ed4:	ldr	r2, [sp, #16]
    9ed8:	bl	defc <flatcc_json_parser_none>
    9edc:	str	r0, [fp, #-4]
    9ee0:	b	9fec <MyGame_Example_Any_parse_json_union+0x188>
    9ee4:	ldr	r0, [fp, #-8]
    9ee8:	ldr	r1, [fp, #-12]
    9eec:	ldr	r2, [sp, #16]
    9ef0:	ldr	r3, [fp, #8]
    9ef4:	bl	28c0 <MyGame_Example_Monster_parse_json_table>
    9ef8:	str	r0, [fp, #-12]
    9efc:	b	9f9c <MyGame_Example_Any_parse_json_union+0x138>
    9f00:	ldr	r0, [fp, #-8]
    9f04:	ldr	r1, [fp, #-12]
    9f08:	ldr	r2, [sp, #16]
    9f0c:	ldr	r3, [fp, #8]
    9f10:	bl	df88 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    9f14:	str	r0, [fp, #-12]
    9f18:	b	9f9c <MyGame_Example_Any_parse_json_union+0x138>
    9f1c:	ldr	r0, [fp, #-8]
    9f20:	ldr	r1, [fp, #-12]
    9f24:	ldr	r2, [sp, #16]
    9f28:	ldr	r3, [fp, #8]
    9f2c:	bl	e5d8 <MyGame_Example2_Monster_parse_json_table>
    9f30:	str	r0, [fp, #-12]
    9f34:	b	9f9c <MyGame_Example_Any_parse_json_union+0x138>
    9f38:	ldr	r0, [fp, #-8]
    9f3c:	ldr	r1, [fp, #-12]
    9f40:	ldr	r2, [sp, #16]
    9f44:	ldr	r3, [fp, #8]
    9f48:	bl	e6e4 <MyGame_Example_Alt_parse_json_table>
    9f4c:	str	r0, [fp, #-12]
    9f50:	b	9f9c <MyGame_Example_Any_parse_json_union+0x138>
    9f54:	ldr	r0, [fp, #-8]
    9f58:	ldr	r0, [r0, #8]
    9f5c:	and	r0, r0, #1
    9f60:	cmp	r0, #0
    9f64:	bne	9f84 <MyGame_Example_Any_parse_json_union+0x120>
    9f68:	ldr	r0, [fp, #-8]
    9f6c:	ldr	r1, [fp, #-12]
    9f70:	ldr	r2, [sp, #16]
    9f74:	movw	r3, #15
    9f78:	bl	0 <flatcc_json_parser_set_error>
    9f7c:	str	r0, [fp, #-4]
    9f80:	b	9fec <MyGame_Example_Any_parse_json_union+0x188>
    9f84:	ldr	r0, [fp, #-8]
    9f88:	ldr	r1, [fp, #-12]
    9f8c:	ldr	r2, [sp, #16]
    9f90:	bl	0 <flatcc_json_parser_generic_json>
    9f94:	str	r0, [fp, #-4]
    9f98:	b	9fec <MyGame_Example_Any_parse_json_union+0x188>
    9f9c:	ldr	r0, [fp, #-8]
    9fa0:	ldr	r0, [r0, #24]
    9fa4:	cmp	r0, #0
    9fa8:	beq	9fb8 <MyGame_Example_Any_parse_json_union+0x154>
    9fac:	ldr	r0, [fp, #-12]
    9fb0:	str	r0, [fp, #-4]
    9fb4:	b	9fec <MyGame_Example_Any_parse_json_union+0x188>
    9fb8:	ldr	r0, [fp, #8]
    9fbc:	ldr	r0, [r0]
    9fc0:	cmp	r0, #0
    9fc4:	bne	9fe4 <MyGame_Example_Any_parse_json_union+0x180>
    9fc8:	ldr	r0, [fp, #-8]
    9fcc:	ldr	r1, [fp, #-12]
    9fd0:	ldr	r2, [sp, #16]
    9fd4:	movw	r3, #33	; 0x21
    9fd8:	bl	0 <flatcc_json_parser_set_error>
    9fdc:	str	r0, [fp, #-4]
    9fe0:	b	9fec <MyGame_Example_Any_parse_json_union+0x188>
    9fe4:	ldr	r0, [fp, #-12]
    9fe8:	str	r0, [fp, #-4]
    9fec:	ldr	r0, [fp, #-4]
    9ff0:	mov	sp, fp
    9ff4:	pop	{fp, pc}

00009ff8 <MyGame_Example_Any_parse_json_enum>:
    9ff8:	push	{fp, lr}
    9ffc:	mov	fp, sp
    a000:	sub	sp, sp, #80	; 0x50
    a004:	ldr	ip, [fp, #12]
    a008:	ldr	lr, [fp, #8]
    a00c:	str	r0, [fp, #-8]
    a010:	str	r1, [fp, #-12]
    a014:	str	r2, [fp, #-16]
    a018:	str	r3, [fp, #-20]	; 0xffffffec
    a01c:	ldr	r0, [fp, #-12]
    a020:	str	r0, [fp, #-24]	; 0xffffffe8
    a024:	ldr	r0, [fp, #-12]
    a028:	ldr	r1, [fp, #-16]
    a02c:	str	lr, [sp, #36]	; 0x24
    a030:	str	ip, [sp, #32]
    a034:	bl	71e0 <flatcc_json_parser_symbol_part>
    a038:	str	r1, [sp, #44]	; 0x2c
    a03c:	str	r0, [sp, #40]	; 0x28
    a040:	ldr	r0, [sp, #40]	; 0x28
    a044:	ldr	r1, [sp, #44]	; 0x2c
    a048:	movw	r2, #29183	; 0x71ff
    a04c:	movt	r2, #29797	; 0x7465
    a050:	subs	r0, r2, r0
    a054:	movw	r2, #28275	; 0x6e73
    a058:	movt	r2, #19823	; 0x4d6f
    a05c:	sbcs	r1, r2, r1
    a060:	str	r0, [sp, #28]
    a064:	str	r1, [sp, #24]
    a068:	bcc	a110 <MyGame_Example_Any_parse_json_enum+0x118>
    a06c:	b	a070 <MyGame_Example_Any_parse_json_enum+0x78>
    a070:	ldr	r0, [sp, #44]	; 0x2c
    a074:	bic	r0, r0, #255	; 0xff
    a078:	movw	r1, #29696	; 0x7400
    a07c:	movt	r1, #16748	; 0x416c
    a080:	teq	r0, r1
    a084:	bne	a100 <MyGame_Example_Any_parse_json_enum+0x108>
    a088:	b	a08c <MyGame_Example_Any_parse_json_enum+0x94>
    a08c:	ldr	r0, [fp, #-8]
    a090:	ldr	r1, [fp, #-12]
    a094:	str	r1, [fp, #-28]	; 0xffffffe4
    a098:	ldr	r2, [fp, #-16]
    a09c:	ldr	r3, [fp, #12]
    a0a0:	movw	ip, #3
    a0a4:	str	r3, [sp, #20]
    a0a8:	mov	r3, ip
    a0ac:	ldr	ip, [sp, #20]
    a0b0:	str	ip, [sp]
    a0b4:	bl	0 <flatcc_json_parser_match_constant>
    a0b8:	str	r0, [fp, #-12]
    a0bc:	ldr	r0, [fp, #-12]
    a0c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a0c4:	cmp	r0, r1
    a0c8:	beq	a0f0 <MyGame_Example_Any_parse_json_enum+0xf8>
    a0cc:	ldr	r0, [fp, #8]
    a0d0:	mov	r1, #0
    a0d4:	str	r1, [r0, #4]
    a0d8:	mov	r1, #4
    a0dc:	str	r1, [r0]
    a0e0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a0e4:	movw	r1, #0
    a0e8:	str	r1, [r0]
    a0ec:	b	a0fc <MyGame_Example_Any_parse_json_enum+0x104>
    a0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a0f4:	str	r0, [fp, #-4]
    a0f8:	b	a470 <MyGame_Example_Any_parse_json_enum+0x478>
    a0fc:	b	a10c <MyGame_Example_Any_parse_json_enum+0x114>
    a100:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a104:	str	r0, [fp, #-4]
    a108:	b	a470 <MyGame_Example_Any_parse_json_enum+0x478>
    a10c:	b	a468 <MyGame_Example_Any_parse_json_enum+0x470>
    a110:	ldr	r0, [sp, #40]	; 0x28
    a114:	ldr	r1, [sp, #44]	; 0x2c
    a118:	movw	r2, #28275	; 0x6e73
    a11c:	movt	r2, #19823	; 0x4d6f
    a120:	eor	r1, r1, r2
    a124:	movw	r2, #29234	; 0x7232
    a128:	movt	r2, #29797	; 0x7465
    a12c:	eor	r0, r0, r2
    a130:	orr	r0, r0, r1
    a134:	cmp	r0, #0
    a138:	bne	a1ac <MyGame_Example_Any_parse_json_enum+0x1b4>
    a13c:	b	a140 <MyGame_Example_Any_parse_json_enum+0x148>
    a140:	ldr	r0, [fp, #-8]
    a144:	ldr	r1, [fp, #-12]
    a148:	str	r1, [fp, #-28]	; 0xffffffe4
    a14c:	ldr	r2, [fp, #-16]
    a150:	ldr	r3, [fp, #12]
    a154:	movw	ip, #8
    a158:	str	r3, [sp, #16]
    a15c:	mov	r3, ip
    a160:	ldr	ip, [sp, #16]
    a164:	str	ip, [sp]
    a168:	bl	0 <flatcc_json_parser_match_constant>
    a16c:	str	r0, [fp, #-12]
    a170:	ldr	r0, [fp, #-12]
    a174:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a178:	cmp	r0, r1
    a17c:	beq	a1a4 <MyGame_Example_Any_parse_json_enum+0x1ac>
    a180:	ldr	r0, [fp, #8]
    a184:	mov	r1, #0
    a188:	str	r1, [r0, #4]
    a18c:	mov	r1, #3
    a190:	str	r1, [r0]
    a194:	ldr	r0, [fp, #-20]	; 0xffffffec
    a198:	movw	r1, #0
    a19c:	str	r1, [r0]
    a1a0:	b	a1a8 <MyGame_Example_Any_parse_json_enum+0x1b0>
    a1a4:	b	a25c <MyGame_Example_Any_parse_json_enum+0x264>
    a1a8:	b	a258 <MyGame_Example_Any_parse_json_enum+0x260>
    a1ac:	ldr	r0, [sp, #40]	; 0x28
    a1b0:	ldr	r1, [sp, #44]	; 0x2c
    a1b4:	movw	r2, #28526	; 0x6f6e
    a1b8:	movt	r2, #77	; 0x4d
    a1bc:	eor	r2, r2, r1, lsr #8
    a1c0:	lsr	r0, r0, #8
    a1c4:	orr	r0, r0, r1, lsl #24
    a1c8:	movw	r1, #25970	; 0x6572
    a1cc:	movt	r1, #29556	; 0x7374
    a1d0:	eor	r0, r0, r1
    a1d4:	orr	r0, r0, r2
    a1d8:	cmp	r0, #0
    a1dc:	bne	a250 <MyGame_Example_Any_parse_json_enum+0x258>
    a1e0:	b	a1e4 <MyGame_Example_Any_parse_json_enum+0x1ec>
    a1e4:	ldr	r0, [fp, #-8]
    a1e8:	ldr	r1, [fp, #-12]
    a1ec:	str	r1, [fp, #-28]	; 0xffffffe4
    a1f0:	ldr	r2, [fp, #-16]
    a1f4:	ldr	r3, [fp, #12]
    a1f8:	movw	ip, #7
    a1fc:	str	r3, [sp, #12]
    a200:	mov	r3, ip
    a204:	ldr	ip, [sp, #12]
    a208:	str	ip, [sp]
    a20c:	bl	0 <flatcc_json_parser_match_constant>
    a210:	str	r0, [fp, #-12]
    a214:	ldr	r0, [fp, #-12]
    a218:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a21c:	cmp	r0, r1
    a220:	beq	a248 <MyGame_Example_Any_parse_json_enum+0x250>
    a224:	ldr	r0, [fp, #8]
    a228:	mov	r1, #0
    a22c:	str	r1, [r0, #4]
    a230:	mov	r1, #1
    a234:	str	r1, [r0]
    a238:	ldr	r0, [fp, #-20]	; 0xffffffec
    a23c:	movw	r1, #0
    a240:	str	r1, [r0]
    a244:	b	a24c <MyGame_Example_Any_parse_json_enum+0x254>
    a248:	b	a25c <MyGame_Example_Any_parse_json_enum+0x264>
    a24c:	b	a254 <MyGame_Example_Any_parse_json_enum+0x25c>
    a250:	b	a25c <MyGame_Example_Any_parse_json_enum+0x264>
    a254:	b	a258 <MyGame_Example_Any_parse_json_enum+0x260>
    a258:	b	a464 <MyGame_Example_Any_parse_json_enum+0x46c>
    a25c:	ldr	r0, [sp, #44]	; 0x2c
    a260:	movw	r1, #20037	; 0x4e45
    a264:	movt	r1, #20047	; 0x4e4f
    a268:	teq	r0, r1
    a26c:	bne	a2dc <MyGame_Example_Any_parse_json_enum+0x2e4>
    a270:	b	a274 <MyGame_Example_Any_parse_json_enum+0x27c>
    a274:	ldr	r0, [fp, #-8]
    a278:	ldr	r1, [fp, #-12]
    a27c:	str	r1, [fp, #-28]	; 0xffffffe4
    a280:	ldr	r2, [fp, #-16]
    a284:	ldr	r3, [fp, #12]
    a288:	movw	ip, #4
    a28c:	str	r3, [sp, #8]
    a290:	mov	r3, ip
    a294:	ldr	ip, [sp, #8]
    a298:	str	ip, [sp]
    a29c:	bl	0 <flatcc_json_parser_match_constant>
    a2a0:	str	r0, [fp, #-12]
    a2a4:	ldr	r0, [fp, #-12]
    a2a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a2ac:	cmp	r0, r1
    a2b0:	beq	a2d4 <MyGame_Example_Any_parse_json_enum+0x2dc>
    a2b4:	ldr	r0, [fp, #8]
    a2b8:	mov	r1, #0
    a2bc:	str	r1, [r0, #4]
    a2c0:	str	r1, [r0]
    a2c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    a2c8:	movw	r1, #0
    a2cc:	str	r1, [r0]
    a2d0:	b	a2d8 <MyGame_Example_Any_parse_json_enum+0x2e0>
    a2d4:	b	a2e4 <MyGame_Example_Any_parse_json_enum+0x2ec>
    a2d8:	b	a2e0 <MyGame_Example_Any_parse_json_enum+0x2e8>
    a2dc:	b	a2e4 <MyGame_Example_Any_parse_json_enum+0x2ec>
    a2e0:	b	a460 <MyGame_Example_Any_parse_json_enum+0x468>
    a2e4:	ldr	r0, [sp, #40]	; 0x28
    a2e8:	ldr	r1, [sp, #44]	; 0x2c
    a2ec:	movw	r2, #29556	; 0x7374
    a2f0:	movt	r2, #21605	; 0x5465
    a2f4:	eor	r1, r1, r2
    a2f8:	movw	r2, #28016	; 0x6d70
    a2fc:	movt	r2, #21353	; 0x5369
    a300:	eor	r0, r0, r2
    a304:	orr	r0, r0, r1
    a308:	cmp	r0, #0
    a30c:	bne	a450 <MyGame_Example_Any_parse_json_enum+0x458>
    a310:	b	a314 <MyGame_Example_Any_parse_json_enum+0x31c>
    a314:	ldr	r0, [fp, #-12]
    a318:	add	r0, r0, #8
    a31c:	str	r0, [fp, #-12]
    a320:	ldr	r0, [fp, #-12]
    a324:	ldr	r1, [fp, #-16]
    a328:	bl	71e0 <flatcc_json_parser_symbol_part>
    a32c:	str	r1, [sp, #44]	; 0x2c
    a330:	str	r0, [sp, #40]	; 0x28
    a334:	ldr	r0, [sp, #40]	; 0x28
    a338:	ldr	r1, [sp, #44]	; 0x2c
    a33c:	movw	lr, #21601	; 0x5461
    a340:	movt	lr, #27749	; 0x6c65
    a344:	eor	r1, r1, lr
    a348:	movw	lr, #25943	; 0x6557
    a34c:	movt	lr, #25196	; 0x626c
    a350:	eor	r0, r0, lr
    a354:	orr	r0, r0, r1
    a358:	cmp	r0, #0
    a35c:	bne	a440 <MyGame_Example_Any_parse_json_enum+0x448>
    a360:	b	a364 <MyGame_Example_Any_parse_json_enum+0x36c>
    a364:	ldr	r0, [fp, #-12]
    a368:	add	r0, r0, #8
    a36c:	str	r0, [fp, #-12]
    a370:	ldr	r0, [fp, #-12]
    a374:	ldr	r1, [fp, #-16]
    a378:	bl	71e0 <flatcc_json_parser_symbol_part>
    a37c:	str	r1, [sp, #44]	; 0x2c
    a380:	str	r0, [sp, #40]	; 0x28
    a384:	ldr	r0, [sp, #40]	; 0x28
    a388:	ldr	r1, [sp, #44]	; 0x2c
    a38c:	movw	lr, #29800	; 0x7468
    a390:	movt	lr, #105	; 0x69
    a394:	eor	lr, lr, r1, lsr #8
    a398:	lsr	r0, r0, #8
    a39c:	orr	r0, r0, r1, lsl #24
    a3a0:	movw	r1, #30061	; 0x756d
    a3a4:	movt	r1, #17774	; 0x456e
    a3a8:	eor	r0, r0, r1
    a3ac:	orr	r0, r0, lr
    a3b0:	cmp	r0, #0
    a3b4:	bne	a430 <MyGame_Example_Any_parse_json_enum+0x438>
    a3b8:	b	a3bc <MyGame_Example_Any_parse_json_enum+0x3c4>
    a3bc:	ldr	r0, [fp, #-8]
    a3c0:	ldr	r1, [fp, #-12]
    a3c4:	str	r1, [fp, #-28]	; 0xffffffe4
    a3c8:	ldr	r2, [fp, #-16]
    a3cc:	ldr	r3, [fp, #12]
    a3d0:	movw	ip, #7
    a3d4:	str	r3, [sp, #4]
    a3d8:	mov	r3, ip
    a3dc:	ldr	ip, [sp, #4]
    a3e0:	str	ip, [sp]
    a3e4:	bl	0 <flatcc_json_parser_match_constant>
    a3e8:	str	r0, [fp, #-12]
    a3ec:	ldr	r0, [fp, #-12]
    a3f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a3f4:	cmp	r0, r1
    a3f8:	beq	a420 <MyGame_Example_Any_parse_json_enum+0x428>
    a3fc:	ldr	r0, [fp, #8]
    a400:	mov	r1, #0
    a404:	str	r1, [r0, #4]
    a408:	mov	r1, #2
    a40c:	str	r1, [r0]
    a410:	ldr	r0, [fp, #-20]	; 0xffffffec
    a414:	movw	r1, #0
    a418:	str	r1, [r0]
    a41c:	b	a42c <MyGame_Example_Any_parse_json_enum+0x434>
    a420:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a424:	str	r0, [fp, #-4]
    a428:	b	a470 <MyGame_Example_Any_parse_json_enum+0x478>
    a42c:	b	a43c <MyGame_Example_Any_parse_json_enum+0x444>
    a430:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a434:	str	r0, [fp, #-4]
    a438:	b	a470 <MyGame_Example_Any_parse_json_enum+0x478>
    a43c:	b	a44c <MyGame_Example_Any_parse_json_enum+0x454>
    a440:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a444:	str	r0, [fp, #-4]
    a448:	b	a470 <MyGame_Example_Any_parse_json_enum+0x478>
    a44c:	b	a45c <MyGame_Example_Any_parse_json_enum+0x464>
    a450:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a454:	str	r0, [fp, #-4]
    a458:	b	a470 <MyGame_Example_Any_parse_json_enum+0x478>
    a45c:	b	a460 <MyGame_Example_Any_parse_json_enum+0x468>
    a460:	b	a464 <MyGame_Example_Any_parse_json_enum+0x46c>
    a464:	b	a468 <MyGame_Example_Any_parse_json_enum+0x470>
    a468:	ldr	r0, [fp, #-12]
    a46c:	str	r0, [fp, #-4]
    a470:	ldr	r0, [fp, #-4]
    a474:	mov	sp, fp
    a478:	pop	{fp, pc}

0000a47c <flatcc_json_parser_bool>:
    a47c:	push	{fp, lr}
    a480:	mov	fp, sp
    a484:	sub	sp, sp, #32
    a488:	str	r0, [fp, #-8]
    a48c:	str	r1, [fp, #-12]
    a490:	str	r2, [sp, #16]
    a494:	str	r3, [sp, #12]
    a498:	ldr	r0, [fp, #-12]
    a49c:	str	r0, [sp, #8]
    a4a0:	ldr	r0, [sp, #16]
    a4a4:	ldr	r1, [fp, #-12]
    a4a8:	sub	r0, r0, r1
    a4ac:	cmp	r0, #4
    a4b0:	blt	a4fc <flatcc_json_parser_bool+0x80>
    a4b4:	ldr	r0, [fp, #-12]
    a4b8:	ldr	r0, [r0]
    a4bc:	movw	r1, #36236	; 0x8d8c
    a4c0:	movt	r1, #39562	; 0x9a8a
    a4c4:	add	r1, r0, r1
    a4c8:	movw	r2, #29300	; 0x7274
    a4cc:	movt	r2, #25973	; 0x6575
    a4d0:	cmp	r0, r2
    a4d4:	movwne	r1, #1
    a4d8:	cmp	r1, #0
    a4dc:	bne	a4fc <flatcc_json_parser_bool+0x80>
    a4e0:	ldr	r0, [sp, #12]
    a4e4:	movw	r1, #1
    a4e8:	strb	r1, [r0]
    a4ec:	ldr	r0, [sp, #8]
    a4f0:	add	r0, r0, #4
    a4f4:	str	r0, [fp, #-4]
    a4f8:	b	a594 <flatcc_json_parser_bool+0x118>
    a4fc:	ldr	r0, [sp, #16]
    a500:	ldr	r1, [fp, #-12]
    a504:	sub	r0, r0, r1
    a508:	cmp	r0, #5
    a50c:	blt	a548 <flatcc_json_parser_bool+0xcc>
    a510:	ldr	r0, [fp, #-12]
    a514:	movw	r1, #0
    a518:	movt	r1, #0
    a51c:	mov	r2, #5
    a520:	bl	0 <memcmp>
    a524:	cmp	r0, #0
    a528:	bne	a548 <flatcc_json_parser_bool+0xcc>
    a52c:	ldr	r0, [sp, #12]
    a530:	movw	r1, #0
    a534:	strb	r1, [r0]
    a538:	ldr	r0, [sp, #8]
    a53c:	add	r0, r0, #5
    a540:	str	r0, [fp, #-4]
    a544:	b	a594 <flatcc_json_parser_bool+0x118>
    a548:	b	a54c <flatcc_json_parser_bool+0xd0>
    a54c:	ldr	r0, [fp, #-8]
    a550:	ldr	r1, [fp, #-12]
    a554:	ldr	r2, [sp, #16]
    a558:	add	r3, sp, #7
    a55c:	bl	8bac <flatcc_json_parser_uint8>
    a560:	str	r0, [fp, #-12]
    a564:	ldrsb	r0, [sp, #7]
    a568:	cmp	r0, #0
    a56c:	movw	r0, #0
    a570:	movne	r0, #1
    a574:	mvn	r1, #0
    a578:	eor	r0, r0, r1
    a57c:	eor	r0, r0, r1
    a580:	and	r0, r0, #1
    a584:	ldr	r1, [sp, #12]
    a588:	strb	r0, [r1]
    a58c:	ldr	r0, [fp, #-12]
    a590:	str	r0, [fp, #-4]
    a594:	ldr	r0, [fp, #-4]
    a598:	mov	sp, fp
    a59c:	pop	{fp, pc}

0000a5a0 <flatcc_json_parser_symbolic_bool>:
    a5a0:	push	{r4, r5, r6, sl, fp, lr}
    a5a4:	add	fp, sp, #16
    a5a8:	sub	sp, sp, #88	; 0x58
    a5ac:	ldr	ip, [fp, #8]
    a5b0:	str	r0, [fp, #-24]	; 0xffffffe8
    a5b4:	str	r1, [fp, #-28]	; 0xffffffe4
    a5b8:	str	r2, [fp, #-32]	; 0xffffffe0
    a5bc:	str	r3, [fp, #-36]	; 0xffffffdc
    a5c0:	movw	r0, #0
    a5c4:	strb	r0, [fp, #-45]	; 0xffffffd3
    a5c8:	movw	r1, #0
    a5cc:	str	r1, [sp, #36]	; 0x24
    a5d0:	ldr	r1, [fp, #8]
    a5d4:	strb	r0, [r1]
    a5d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a5dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a5e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a5e4:	str	ip, [sp, #32]
    a5e8:	bl	dcbc <flatcc_json_parser_constant_start>
    a5ec:	str	r0, [fp, #-28]	; 0xffffffe4
    a5f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a5f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a5f8:	cmp	r0, r1
    a5fc:	bne	a60c <flatcc_json_parser_symbolic_bool+0x6c>
    a600:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a604:	str	r0, [fp, #-20]	; 0xffffffec
    a608:	b	a7c0 <flatcc_json_parser_symbolic_bool+0x220>
    a60c:	b	a610 <flatcc_json_parser_symbolic_bool+0x70>
    a610:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a614:	str	r0, [fp, #-40]	; 0xffffffd8
    a618:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a61c:	ldr	r0, [r0]
    a620:	ldr	r1, [fp, #-24]	; 0xffffffe8
    a624:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a628:	str	r2, [fp, #-44]	; 0xffffffd4
    a62c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    a630:	str	r0, [sp, #28]
    a634:	mov	r0, r1
    a638:	mov	r1, r2
    a63c:	mov	r2, r3
    a640:	add	r3, sp, #44	; 0x2c
    a644:	add	ip, sp, #48	; 0x30
    a648:	str	ip, [sp]
    a64c:	add	ip, sp, #40	; 0x28
    a650:	str	ip, [sp, #4]
    a654:	ldr	ip, [sp, #28]
    a658:	blx	ip
    a65c:	str	r0, [fp, #-28]	; 0xffffffe4
    a660:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a664:	ldr	r1, [fp, #-32]	; 0xffffffe0
    a668:	cmp	r0, r1
    a66c:	bne	a67c <flatcc_json_parser_symbolic_bool+0xdc>
    a670:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a674:	str	r0, [fp, #-20]	; 0xffffffec
    a678:	b	a7c0 <flatcc_json_parser_symbolic_bool+0x220>
    a67c:	b	a680 <flatcc_json_parser_symbolic_bool+0xe0>
    a680:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a684:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a688:	cmp	r0, r1
    a68c:	movw	r0, #0
    a690:	str	r0, [sp, #24]
    a694:	bne	a6bc <flatcc_json_parser_symbolic_bool+0x11c>
    a698:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a69c:	add	r1, r0, #4
    a6a0:	str	r1, [fp, #-40]	; 0xffffffd8
    a6a4:	ldr	r0, [r0, #4]
    a6a8:	movw	r1, #0
    a6ac:	cmp	r0, r1
    a6b0:	movw	r0, #0
    a6b4:	movne	r0, #1
    a6b8:	str	r0, [sp, #24]
    a6bc:	ldr	r0, [sp, #24]
    a6c0:	tst	r0, #1
    a6c4:	bne	a618 <flatcc_json_parser_symbolic_bool+0x78>
    a6c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a6cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a6d0:	cmp	r0, r1
    a6d4:	bne	a6f4 <flatcc_json_parser_symbolic_bool+0x154>
    a6d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a6dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a6e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a6e4:	movw	r3, #23
    a6e8:	bl	0 <flatcc_json_parser_set_error>
    a6ec:	str	r0, [fp, #-20]	; 0xffffffec
    a6f0:	b	a7c0 <flatcc_json_parser_symbolic_bool+0x220>
    a6f4:	ldr	r0, [sp, #36]	; 0x24
    a6f8:	add	r1, r0, #1
    a6fc:	str	r1, [sp, #36]	; 0x24
    a700:	cmp	r0, #0
    a704:	beq	a734 <flatcc_json_parser_symbolic_bool+0x194>
    a708:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a70c:	ldr	r0, [r0, #12]
    a710:	cmp	r0, #0
    a714:	beq	a734 <flatcc_json_parser_symbolic_bool+0x194>
    a718:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a71c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    a720:	ldr	r2, [fp, #-32]	; 0xffffffe0
    a724:	movw	r3, #14
    a728:	bl	0 <flatcc_json_parser_set_error>
    a72c:	str	r0, [fp, #-20]	; 0xffffffec
    a730:	b	a7c0 <flatcc_json_parser_symbolic_bool+0x220>
    a734:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a738:	mov	r1, r0
    a73c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a740:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a744:	ldr	ip, [sp, #44]	; 0x2c
    a748:	ldr	lr, [sp, #48]	; 0x30
    a74c:	ldr	r4, [sp, #52]	; 0x34
    a750:	mov	r5, sp
    a754:	sub	r6, fp, #45	; 0x2d
    a758:	str	r6, [r5, #8]
    a75c:	str	r4, [r5, #4]
    a760:	str	lr, [r5]
    a764:	str	r0, [sp, #20]
    a768:	mov	r0, r2
    a76c:	str	r1, [sp, #16]
    a770:	mov	r1, r3
    a774:	ldr	r2, [sp, #20]
    a778:	mov	r3, ip
    a77c:	bl	12338 <flatcc_json_parser_coerce_bool>
    a780:	ldr	r1, [sp, #16]
    a784:	cmp	r1, r0
    a788:	bne	a798 <flatcc_json_parser_symbolic_bool+0x1f8>
    a78c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a790:	str	r0, [fp, #-20]	; 0xffffffec
    a794:	b	a7c0 <flatcc_json_parser_symbolic_bool+0x220>
    a798:	ldrb	r0, [fp, #-45]	; 0xffffffd3
    a79c:	ldr	r1, [fp, #8]
    a7a0:	ldrb	r2, [r1]
    a7a4:	add	r0, r2, r0
    a7a8:	strb	r0, [r1]
    a7ac:	ldr	r0, [sp, #40]	; 0x28
    a7b0:	cmp	r0, #0
    a7b4:	bne	a610 <flatcc_json_parser_symbolic_bool+0x70>
    a7b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    a7bc:	str	r0, [fp, #-20]	; 0xffffffec
    a7c0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a7c4:	sub	sp, fp, #16
    a7c8:	pop	{r4, r5, r6, sl, fp, pc}

0000a7cc <flatbuffers_bool_write_to_pe>:
    a7cc:	push	{fp, lr}
    a7d0:	mov	fp, sp
    a7d4:	sub	sp, sp, #8
    a7d8:	str	r0, [sp, #4]
    a7dc:	strb	r1, [sp, #3]
    a7e0:	ldrb	r0, [sp, #3]
    a7e4:	bl	123d4 <flatbuffers_bool_cast_to_pe>
    a7e8:	ldr	r1, [sp, #4]
    a7ec:	strb	r0, [r1]
    a7f0:	mov	sp, fp
    a7f4:	pop	{fp, pc}

0000a7f8 <MyGame_Example_Ability_parse_json_struct_inline>:
    a7f8:	push	{fp, lr}
    a7fc:	mov	fp, sp
    a800:	sub	sp, sp, #64	; 0x40
    a804:	str	r0, [fp, #-8]
    a808:	str	r1, [fp, #-12]
    a80c:	str	r2, [fp, #-16]
    a810:	str	r3, [fp, #-20]	; 0xffffffec
    a814:	ldr	r0, [fp, #-8]
    a818:	ldr	r1, [fp, #-12]
    a81c:	ldr	r2, [fp, #-16]
    a820:	sub	r3, fp, #24
    a824:	bl	7050 <flatcc_json_parser_object_start>
    a828:	str	r0, [fp, #-12]
    a82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    a830:	cmp	r0, #0
    a834:	beq	aaa8 <MyGame_Example_Ability_parse_json_struct_inline+0x2b0>
    a838:	ldr	r0, [fp, #-8]
    a83c:	ldr	r1, [fp, #-12]
    a840:	ldr	r2, [fp, #-16]
    a844:	bl	7134 <flatcc_json_parser_symbol_start>
    a848:	str	r0, [fp, #-12]
    a84c:	ldr	r0, [fp, #-12]
    a850:	ldr	r1, [fp, #-16]
    a854:	bl	71e0 <flatcc_json_parser_symbol_part>
    a858:	str	r1, [sp, #20]
    a85c:	str	r0, [sp, #16]
    a860:	ldr	r0, [sp, #20]
    a864:	bfc	r0, #0, #16
    a868:	movw	r1, #0
    a86c:	movt	r1, #26980	; 0x6964
    a870:	teq	r0, r1
    a874:	bne	a960 <MyGame_Example_Ability_parse_json_struct_inline+0x168>
    a878:	b	a87c <MyGame_Example_Ability_parse_json_struct_inline+0x84>
    a87c:	ldr	r0, [fp, #-8]
    a880:	ldr	r1, [fp, #-12]
    a884:	str	r1, [sp, #28]
    a888:	ldr	r2, [fp, #-16]
    a88c:	movw	r3, #2
    a890:	bl	7218 <flatcc_json_parser_match_symbol>
    a894:	str	r0, [fp, #-12]
    a898:	ldr	r0, [sp, #28]
    a89c:	ldr	r1, [fp, #-12]
    a8a0:	cmp	r0, r1
    a8a4:	beq	a948 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    a8a8:	movw	r0, #0
    a8ac:	str	r0, [sp, #12]
    a8b0:	ldr	r0, [fp, #-20]	; 0xffffffec
    a8b4:	add	r0, r0, #0
    a8b8:	str	r0, [sp, #32]
    a8bc:	ldr	r0, [fp, #-8]
    a8c0:	ldr	r1, [fp, #-12]
    a8c4:	str	r1, [sp, #28]
    a8c8:	ldr	r2, [fp, #-16]
    a8cc:	add	r3, sp, #12
    a8d0:	bl	bc54 <flatcc_json_parser_uint32>
    a8d4:	str	r0, [fp, #-12]
    a8d8:	ldr	r0, [sp, #28]
    a8dc:	ldr	r1, [fp, #-12]
    a8e0:	cmp	r0, r1
    a8e4:	bne	a938 <MyGame_Example_Ability_parse_json_struct_inline+0x140>
    a8e8:	ldr	r0, [fp, #-8]
    a8ec:	ldr	r1, [fp, #-12]
    a8f0:	str	r1, [sp, #28]
    a8f4:	ldr	r2, [fp, #-16]
    a8f8:	movw	r3, #0
    a8fc:	movt	r3, #0
    a900:	add	ip, sp, #12
    a904:	str	ip, [sp]
    a908:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
    a90c:	str	r0, [fp, #-12]
    a910:	ldr	r0, [fp, #-12]
    a914:	ldr	r1, [sp, #28]
    a918:	cmp	r0, r1
    a91c:	beq	a930 <MyGame_Example_Ability_parse_json_struct_inline+0x138>
    a920:	ldr	r0, [fp, #-12]
    a924:	ldr	r1, [fp, #-16]
    a928:	cmp	r0, r1
    a92c:	bne	a934 <MyGame_Example_Ability_parse_json_struct_inline+0x13c>
    a930:	b	aab4 <MyGame_Example_Ability_parse_json_struct_inline+0x2bc>
    a934:	b	a938 <MyGame_Example_Ability_parse_json_struct_inline+0x140>
    a938:	ldr	r0, [sp, #32]
    a93c:	ldr	r1, [sp, #12]
    a940:	bl	bf54 <flatbuffers_uint32_write_to_pe>
    a944:	b	a95c <MyGame_Example_Ability_parse_json_struct_inline+0x164>
    a948:	ldr	r0, [fp, #-8]
    a94c:	ldr	r1, [fp, #-12]
    a950:	ldr	r2, [fp, #-16]
    a954:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a958:	str	r0, [fp, #-12]
    a95c:	b	aa8c <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    a960:	ldr	r0, [sp, #16]
    a964:	ldr	r1, [sp, #20]
    a968:	movw	r2, #29556	; 0x7374
    a96c:	movt	r2, #25705	; 0x6469
    a970:	eor	r1, r1, r2
    a974:	movw	r2, #25445	; 0x6365
    a978:	movt	r2, #24942	; 0x616e
    a97c:	eor	r0, r0, r2
    a980:	orr	r0, r0, r1
    a984:	cmp	r0, #0
    a988:	bne	aa74 <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    a98c:	b	a990 <MyGame_Example_Ability_parse_json_struct_inline+0x198>
    a990:	ldr	r0, [fp, #-8]
    a994:	ldr	r1, [fp, #-12]
    a998:	str	r1, [sp, #28]
    a99c:	ldr	r2, [fp, #-16]
    a9a0:	movw	r3, #8
    a9a4:	bl	7218 <flatcc_json_parser_match_symbol>
    a9a8:	str	r0, [fp, #-12]
    a9ac:	ldr	r0, [sp, #28]
    a9b0:	ldr	r1, [fp, #-12]
    a9b4:	cmp	r0, r1
    a9b8:	beq	aa5c <MyGame_Example_Ability_parse_json_struct_inline+0x264>
    a9bc:	movw	r0, #0
    a9c0:	str	r0, [sp, #8]
    a9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    a9c8:	add	r0, r0, #4
    a9cc:	str	r0, [sp, #32]
    a9d0:	ldr	r0, [fp, #-8]
    a9d4:	ldr	r1, [fp, #-12]
    a9d8:	str	r1, [sp, #28]
    a9dc:	ldr	r2, [fp, #-16]
    a9e0:	add	r3, sp, #8
    a9e4:	bl	bc54 <flatcc_json_parser_uint32>
    a9e8:	str	r0, [fp, #-12]
    a9ec:	ldr	r0, [sp, #28]
    a9f0:	ldr	r1, [fp, #-12]
    a9f4:	cmp	r0, r1
    a9f8:	bne	aa4c <MyGame_Example_Ability_parse_json_struct_inline+0x254>
    a9fc:	ldr	r0, [fp, #-8]
    aa00:	ldr	r1, [fp, #-12]
    aa04:	str	r1, [sp, #28]
    aa08:	ldr	r2, [fp, #-16]
    aa0c:	movw	r3, #0
    aa10:	movt	r3, #0
    aa14:	add	ip, sp, #8
    aa18:	str	ip, [sp]
    aa1c:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
    aa20:	str	r0, [fp, #-12]
    aa24:	ldr	r0, [fp, #-12]
    aa28:	ldr	r1, [sp, #28]
    aa2c:	cmp	r0, r1
    aa30:	beq	aa44 <MyGame_Example_Ability_parse_json_struct_inline+0x24c>
    aa34:	ldr	r0, [fp, #-12]
    aa38:	ldr	r1, [fp, #-16]
    aa3c:	cmp	r0, r1
    aa40:	bne	aa48 <MyGame_Example_Ability_parse_json_struct_inline+0x250>
    aa44:	b	aab4 <MyGame_Example_Ability_parse_json_struct_inline+0x2bc>
    aa48:	b	aa4c <MyGame_Example_Ability_parse_json_struct_inline+0x254>
    aa4c:	ldr	r0, [sp, #32]
    aa50:	ldr	r1, [sp, #8]
    aa54:	bl	bf54 <flatbuffers_uint32_write_to_pe>
    aa58:	b	aa70 <MyGame_Example_Ability_parse_json_struct_inline+0x278>
    aa5c:	ldr	r0, [fp, #-8]
    aa60:	ldr	r1, [fp, #-12]
    aa64:	ldr	r2, [fp, #-16]
    aa68:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa6c:	str	r0, [fp, #-12]
    aa70:	b	aa88 <MyGame_Example_Ability_parse_json_struct_inline+0x290>
    aa74:	ldr	r0, [fp, #-8]
    aa78:	ldr	r1, [fp, #-12]
    aa7c:	ldr	r2, [fp, #-16]
    aa80:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa84:	str	r0, [fp, #-12]
    aa88:	b	aa8c <MyGame_Example_Ability_parse_json_struct_inline+0x294>
    aa8c:	ldr	r0, [fp, #-8]
    aa90:	ldr	r1, [fp, #-12]
    aa94:	ldr	r2, [fp, #-16]
    aa98:	sub	r3, fp, #24
    aa9c:	bl	c534 <flatcc_json_parser_object_end>
    aaa0:	str	r0, [fp, #-12]
    aaa4:	b	a82c <MyGame_Example_Ability_parse_json_struct_inline+0x34>
    aaa8:	ldr	r0, [fp, #-12]
    aaac:	str	r0, [fp, #-4]
    aab0:	b	aacc <MyGame_Example_Ability_parse_json_struct_inline+0x2d4>
    aab4:	ldr	r0, [fp, #-8]
    aab8:	ldr	r1, [fp, #-12]
    aabc:	ldr	r2, [fp, #-16]
    aac0:	movw	r3, #33	; 0x21
    aac4:	bl	0 <flatcc_json_parser_set_error>
    aac8:	str	r0, [fp, #-4]
    aacc:	ldr	r0, [fp, #-4]
    aad0:	mov	sp, fp
    aad4:	pop	{fp, pc}

0000aad8 <MyGame_Example_TestBase64_parse_json_table>:
    aad8:	push	{fp, lr}
    aadc:	mov	fp, sp
    aae0:	sub	sp, sp, #64	; 0x40
    aae4:	str	r0, [fp, #-8]
    aae8:	str	r1, [fp, #-12]
    aaec:	str	r2, [fp, #-16]
    aaf0:	str	r3, [fp, #-20]	; 0xffffffec
    aaf4:	ldr	r0, [fp, #-20]	; 0xffffffec
    aaf8:	movw	r1, #0
    aafc:	str	r1, [r0]
    ab00:	ldr	r0, [fp, #-8]
    ab04:	ldr	r0, [r0]
    ab08:	movw	r1, #3
    ab0c:	bl	0 <flatcc_builder_start_table>
    ab10:	cmp	r0, #0
    ab14:	beq	ab1c <MyGame_Example_TestBase64_parse_json_table+0x44>
    ab18:	b	ae94 <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    ab1c:	ldr	r0, [fp, #-8]
    ab20:	ldr	r1, [fp, #-12]
    ab24:	ldr	r2, [fp, #-16]
    ab28:	sub	r3, fp, #24
    ab2c:	bl	7050 <flatcc_json_parser_object_start>
    ab30:	str	r0, [fp, #-12]
    ab34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ab38:	cmp	r0, #0
    ab3c:	beq	ae54 <MyGame_Example_TestBase64_parse_json_table+0x37c>
    ab40:	ldr	r0, [fp, #-8]
    ab44:	ldr	r1, [fp, #-12]
    ab48:	ldr	r2, [fp, #-16]
    ab4c:	bl	7134 <flatcc_json_parser_symbol_start>
    ab50:	str	r0, [fp, #-12]
    ab54:	ldr	r0, [fp, #-12]
    ab58:	ldr	r1, [fp, #-16]
    ab5c:	bl	71e0 <flatcc_json_parser_symbol_part>
    ab60:	str	r1, [sp, #20]
    ab64:	str	r0, [sp, #16]
    ab68:	ldr	r0, [sp, #16]
    ab6c:	ldr	r1, [sp, #20]
    ab70:	movw	r2, #65535	; 0xffff
    ab74:	movt	r2, #25955	; 0x6563
    ab78:	subs	r0, r2, r0
    ab7c:	movw	r2, #29556	; 0x7374
    ab80:	movt	r2, #28261	; 0x6e65
    ab84:	sbcs	r1, r2, r1
    ab88:	str	r0, [sp, #12]
    ab8c:	str	r1, [sp, #8]
    ab90:	bcc	ac6c <MyGame_Example_TestBase64_parse_json_table+0x194>
    ab94:	b	ab98 <MyGame_Example_TestBase64_parse_json_table+0xc0>
    ab98:	ldr	r0, [sp, #20]
    ab9c:	movw	r1, #29793	; 0x7461
    aba0:	movt	r1, #25697	; 0x6461
    aba4:	teq	r0, r1
    aba8:	bne	ac54 <MyGame_Example_TestBase64_parse_json_table+0x17c>
    abac:	b	abb0 <MyGame_Example_TestBase64_parse_json_table+0xd8>
    abb0:	ldr	r0, [fp, #-8]
    abb4:	ldr	r1, [fp, #-12]
    abb8:	str	r1, [sp, #24]
    abbc:	ldr	r2, [fp, #-16]
    abc0:	movw	r3, #4
    abc4:	bl	7218 <flatcc_json_parser_match_symbol>
    abc8:	str	r0, [fp, #-12]
    abcc:	ldr	r0, [sp, #24]
    abd0:	ldr	r1, [fp, #-12]
    abd4:	cmp	r0, r1
    abd8:	beq	ac3c <MyGame_Example_TestBase64_parse_json_table+0x164>
    abdc:	ldr	r0, [fp, #-8]
    abe0:	ldr	r1, [fp, #-12]
    abe4:	ldr	r2, [fp, #-16]
    abe8:	add	r3, sp, #32
    abec:	movw	ip, #0
    abf0:	str	ip, [sp]
    abf4:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    abf8:	str	r0, [fp, #-12]
    abfc:	ldr	r0, [sp, #32]
    ac00:	cmp	r0, #0
    ac04:	beq	ac28 <MyGame_Example_TestBase64_parse_json_table+0x150>
    ac08:	ldr	r0, [fp, #-8]
    ac0c:	ldr	r0, [r0]
    ac10:	movw	r1, #0
    ac14:	bl	0 <flatcc_builder_table_add_offset>
    ac18:	str	r0, [sp, #28]
    ac1c:	movw	r1, #0
    ac20:	cmp	r0, r1
    ac24:	bne	ac2c <MyGame_Example_TestBase64_parse_json_table+0x154>
    ac28:	b	ae94 <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    ac2c:	ldr	r0, [sp, #32]
    ac30:	ldr	r1, [sp, #28]
    ac34:	str	r0, [r1]
    ac38:	b	ac50 <MyGame_Example_TestBase64_parse_json_table+0x178>
    ac3c:	ldr	r0, [fp, #-8]
    ac40:	ldr	r1, [fp, #-12]
    ac44:	ldr	r2, [fp, #-16]
    ac48:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac4c:	str	r0, [fp, #-12]
    ac50:	b	ac68 <MyGame_Example_TestBase64_parse_json_table+0x190>
    ac54:	ldr	r0, [fp, #-8]
    ac58:	ldr	r1, [fp, #-12]
    ac5c:	ldr	r2, [fp, #-16]
    ac60:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac64:	str	r0, [fp, #-12]
    ac68:	b	ae38 <MyGame_Example_TestBase64_parse_json_table+0x360>
    ac6c:	ldr	r0, [sp, #16]
    ac70:	ldr	r1, [sp, #20]
    ac74:	movw	r2, #29292	; 0x726c
    ac78:	movt	r2, #117	; 0x75
    ac7c:	eor	r2, r2, r1, lsr #8
    ac80:	lsr	r0, r0, #8
    ac84:	orr	r0, r0, r1, lsl #24
    ac88:	movw	r1, #29793	; 0x7461
    ac8c:	movt	r1, #25697	; 0x6461
    ac90:	eor	r0, r0, r1
    ac94:	orr	r0, r0, r2
    ac98:	cmp	r0, #0
    ac9c:	bne	ad48 <MyGame_Example_TestBase64_parse_json_table+0x270>
    aca0:	b	aca4 <MyGame_Example_TestBase64_parse_json_table+0x1cc>
    aca4:	ldr	r0, [fp, #-8]
    aca8:	ldr	r1, [fp, #-12]
    acac:	str	r1, [sp, #24]
    acb0:	ldr	r2, [fp, #-16]
    acb4:	movw	r3, #7
    acb8:	bl	7218 <flatcc_json_parser_match_symbol>
    acbc:	str	r0, [fp, #-12]
    acc0:	ldr	r0, [sp, #24]
    acc4:	ldr	r1, [fp, #-12]
    acc8:	cmp	r0, r1
    accc:	beq	ad30 <MyGame_Example_TestBase64_parse_json_table+0x258>
    acd0:	ldr	r0, [fp, #-8]
    acd4:	ldr	r1, [fp, #-12]
    acd8:	ldr	r2, [fp, #-16]
    acdc:	add	r3, sp, #32
    ace0:	movw	ip, #1
    ace4:	str	ip, [sp]
    ace8:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    acec:	str	r0, [fp, #-12]
    acf0:	ldr	r0, [sp, #32]
    acf4:	cmp	r0, #0
    acf8:	beq	ad1c <MyGame_Example_TestBase64_parse_json_table+0x244>
    acfc:	ldr	r0, [fp, #-8]
    ad00:	ldr	r0, [r0]
    ad04:	movw	r1, #1
    ad08:	bl	0 <flatcc_builder_table_add_offset>
    ad0c:	str	r0, [sp, #28]
    ad10:	movw	r1, #0
    ad14:	cmp	r0, r1
    ad18:	bne	ad20 <MyGame_Example_TestBase64_parse_json_table+0x248>
    ad1c:	b	ae94 <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    ad20:	ldr	r0, [sp, #32]
    ad24:	ldr	r1, [sp, #28]
    ad28:	str	r0, [r1]
    ad2c:	b	ad44 <MyGame_Example_TestBase64_parse_json_table+0x26c>
    ad30:	ldr	r0, [fp, #-8]
    ad34:	ldr	r1, [fp, #-12]
    ad38:	ldr	r2, [fp, #-16]
    ad3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ad40:	str	r0, [fp, #-12]
    ad44:	b	ae34 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    ad48:	ldrh	r0, [sp, #18]
    ad4c:	ldr	r1, [sp, #20]
    ad50:	movw	r2, #28261	; 0x6e65
    ad54:	eor	r2, r2, r1, lsr #16
    ad58:	orr	r0, r0, r1, lsl #16
    ad5c:	movw	r1, #25956	; 0x6564
    ad60:	movt	r1, #29556	; 0x7374
    ad64:	eor	r0, r0, r1
    ad68:	orr	r0, r0, r2
    ad6c:	cmp	r0, #0
    ad70:	bne	ae1c <MyGame_Example_TestBase64_parse_json_table+0x344>
    ad74:	b	ad78 <MyGame_Example_TestBase64_parse_json_table+0x2a0>
    ad78:	ldr	r0, [fp, #-8]
    ad7c:	ldr	r1, [fp, #-12]
    ad80:	str	r1, [sp, #24]
    ad84:	ldr	r2, [fp, #-16]
    ad88:	movw	r3, #6
    ad8c:	bl	7218 <flatcc_json_parser_match_symbol>
    ad90:	str	r0, [fp, #-12]
    ad94:	ldr	r0, [sp, #24]
    ad98:	ldr	r1, [fp, #-12]
    ad9c:	cmp	r0, r1
    ada0:	beq	ae04 <MyGame_Example_TestBase64_parse_json_table+0x32c>
    ada4:	ldr	r0, [fp, #-8]
    ada8:	ldr	r1, [fp, #-12]
    adac:	ldr	r2, [fp, #-16]
    adb0:	add	r3, sp, #32
    adb4:	movw	ip, #0
    adb8:	str	ip, [sp]
    adbc:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    adc0:	str	r0, [fp, #-12]
    adc4:	ldr	r0, [sp, #32]
    adc8:	cmp	r0, #0
    adcc:	beq	adf0 <MyGame_Example_TestBase64_parse_json_table+0x318>
    add0:	ldr	r0, [fp, #-8]
    add4:	ldr	r0, [r0]
    add8:	movw	r1, #2
    addc:	bl	0 <flatcc_builder_table_add_offset>
    ade0:	str	r0, [sp, #28]
    ade4:	movw	r1, #0
    ade8:	cmp	r0, r1
    adec:	bne	adf4 <MyGame_Example_TestBase64_parse_json_table+0x31c>
    adf0:	b	ae94 <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    adf4:	ldr	r0, [sp, #32]
    adf8:	ldr	r1, [sp, #28]
    adfc:	str	r0, [r1]
    ae00:	b	ae18 <MyGame_Example_TestBase64_parse_json_table+0x340>
    ae04:	ldr	r0, [fp, #-8]
    ae08:	ldr	r1, [fp, #-12]
    ae0c:	ldr	r2, [fp, #-16]
    ae10:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ae14:	str	r0, [fp, #-12]
    ae18:	b	ae30 <MyGame_Example_TestBase64_parse_json_table+0x358>
    ae1c:	ldr	r0, [fp, #-8]
    ae20:	ldr	r1, [fp, #-12]
    ae24:	ldr	r2, [fp, #-16]
    ae28:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ae2c:	str	r0, [fp, #-12]
    ae30:	b	ae34 <MyGame_Example_TestBase64_parse_json_table+0x35c>
    ae34:	b	ae38 <MyGame_Example_TestBase64_parse_json_table+0x360>
    ae38:	ldr	r0, [fp, #-8]
    ae3c:	ldr	r1, [fp, #-12]
    ae40:	ldr	r2, [fp, #-16]
    ae44:	sub	r3, fp, #24
    ae48:	bl	c534 <flatcc_json_parser_object_end>
    ae4c:	str	r0, [fp, #-12]
    ae50:	b	ab34 <MyGame_Example_TestBase64_parse_json_table+0x5c>
    ae54:	ldr	r0, [fp, #-8]
    ae58:	ldr	r0, [r0, #24]
    ae5c:	cmp	r0, #0
    ae60:	beq	ae68 <MyGame_Example_TestBase64_parse_json_table+0x390>
    ae64:	b	ae94 <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    ae68:	ldr	r0, [fp, #-8]
    ae6c:	ldr	r0, [r0]
    ae70:	bl	0 <flatcc_builder_end_table>
    ae74:	ldr	lr, [fp, #-20]	; 0xffffffec
    ae78:	str	r0, [lr]
    ae7c:	cmp	r0, #0
    ae80:	bne	ae88 <MyGame_Example_TestBase64_parse_json_table+0x3b0>
    ae84:	b	ae94 <MyGame_Example_TestBase64_parse_json_table+0x3bc>
    ae88:	ldr	r0, [fp, #-12]
    ae8c:	str	r0, [fp, #-4]
    ae90:	b	aeac <MyGame_Example_TestBase64_parse_json_table+0x3d4>
    ae94:	ldr	r0, [fp, #-8]
    ae98:	ldr	r1, [fp, #-12]
    ae9c:	ldr	r2, [fp, #-16]
    aea0:	movw	r3, #33	; 0x21
    aea4:	bl	0 <flatcc_json_parser_set_error>
    aea8:	str	r0, [fp, #-4]
    aeac:	ldr	r0, [fp, #-4]
    aeb0:	mov	sp, fp
    aeb4:	pop	{fp, pc}

0000aeb8 <MyGame_Example_Stat_parse_json_table>:
    aeb8:	push	{fp, lr}
    aebc:	mov	fp, sp
    aec0:	sub	sp, sp, #72	; 0x48
    aec4:	str	r0, [fp, #-8]
    aec8:	str	r1, [fp, #-12]
    aecc:	str	r2, [fp, #-16]
    aed0:	str	r3, [fp, #-20]	; 0xffffffec
    aed4:	ldr	r0, [fp, #-20]	; 0xffffffec
    aed8:	movw	r1, #0
    aedc:	str	r1, [r0]
    aee0:	ldr	r0, [fp, #-8]
    aee4:	ldr	r0, [r0]
    aee8:	movw	r1, #3
    aeec:	bl	0 <flatcc_builder_start_table>
    aef0:	cmp	r0, #0
    aef4:	beq	aefc <MyGame_Example_Stat_parse_json_table+0x44>
    aef8:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    aefc:	ldr	r0, [fp, #-8]
    af00:	ldr	r1, [fp, #-12]
    af04:	ldr	r2, [fp, #-16]
    af08:	sub	r3, fp, #24
    af0c:	bl	7050 <flatcc_json_parser_object_start>
    af10:	str	r0, [fp, #-12]
    af14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    af18:	cmp	r0, #0
    af1c:	beq	b318 <MyGame_Example_Stat_parse_json_table+0x460>
    af20:	ldr	r0, [fp, #-8]
    af24:	ldr	r1, [fp, #-12]
    af28:	ldr	r2, [fp, #-16]
    af2c:	bl	7134 <flatcc_json_parser_symbol_start>
    af30:	str	r0, [fp, #-12]
    af34:	ldr	r0, [fp, #-12]
    af38:	ldr	r1, [fp, #-16]
    af3c:	bl	71e0 <flatcc_json_parser_symbol_part>
    af40:	str	r1, [sp, #28]
    af44:	str	r0, [sp, #24]
    af48:	ldr	r0, [sp, #28]
    af4c:	movw	r1, #65535	; 0xffff
    af50:	movt	r1, #26979	; 0x6963
    af54:	cmp	r0, r1
    af58:	bhi	b0d0 <MyGame_Example_Stat_parse_json_table+0x218>
    af5c:	b	af60 <MyGame_Example_Stat_parse_json_table+0xa8>
    af60:	ldr	r0, [sp, #24]
    af64:	ldr	r1, [sp, #28]
    af68:	and	r0, r0, #-16777216	; 0xff000000
    af6c:	movw	r2, #30062	; 0x756e
    af70:	movt	r2, #25455	; 0x636f
    af74:	eor	r1, r1, r2
    af78:	eor	r0, r0, #1946157056	; 0x74000000
    af7c:	orr	r0, r0, r1
    af80:	cmp	r0, #0
    af84:	bne	b0b8 <MyGame_Example_Stat_parse_json_table+0x200>
    af88:	b	af8c <MyGame_Example_Stat_parse_json_table+0xd4>
    af8c:	ldr	r0, [fp, #-8]
    af90:	ldr	r1, [fp, #-12]
    af94:	str	r1, [sp, #32]
    af98:	ldr	r2, [fp, #-16]
    af9c:	movw	r3, #5
    afa0:	bl	7218 <flatcc_json_parser_match_symbol>
    afa4:	str	r0, [fp, #-12]
    afa8:	ldr	r0, [sp, #32]
    afac:	ldr	r1, [fp, #-12]
    afb0:	cmp	r0, r1
    afb4:	beq	b0a0 <MyGame_Example_Stat_parse_json_table+0x1e8>
    afb8:	movw	r0, #0
    afbc:	strh	r0, [sp, #22]
    afc0:	ldr	r0, [fp, #-8]
    afc4:	ldr	r1, [fp, #-12]
    afc8:	str	r1, [sp, #32]
    afcc:	ldr	r2, [fp, #-16]
    afd0:	add	r3, sp, #22
    afd4:	bl	11d08 <flatcc_json_parser_uint16>
    afd8:	str	r0, [fp, #-12]
    afdc:	ldr	r0, [sp, #32]
    afe0:	ldr	r1, [fp, #-12]
    afe4:	cmp	r0, r1
    afe8:	bne	b03c <MyGame_Example_Stat_parse_json_table+0x184>
    afec:	ldr	r0, [fp, #-8]
    aff0:	ldr	r1, [fp, #-12]
    aff4:	str	r1, [sp, #32]
    aff8:	ldr	r2, [fp, #-16]
    affc:	movw	r3, #0
    b000:	movt	r3, #0
    b004:	add	ip, sp, #22
    b008:	str	ip, [sp]
    b00c:	bl	11de4 <flatcc_json_parser_symbolic_uint16>
    b010:	str	r0, [fp, #-12]
    b014:	ldr	r0, [fp, #-12]
    b018:	ldr	r1, [sp, #32]
    b01c:	cmp	r0, r1
    b020:	beq	b034 <MyGame_Example_Stat_parse_json_table+0x17c>
    b024:	ldr	r0, [fp, #-12]
    b028:	ldr	r1, [fp, #-16]
    b02c:	cmp	r0, r1
    b030:	bne	b038 <MyGame_Example_Stat_parse_json_table+0x180>
    b034:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b038:	b	b03c <MyGame_Example_Stat_parse_json_table+0x184>
    b03c:	ldrh	r0, [sp, #22]
    b040:	cmp	r0, #0
    b044:	bne	b05c <MyGame_Example_Stat_parse_json_table+0x1a4>
    b048:	ldr	r0, [fp, #-8]
    b04c:	ldr	r0, [r0, #8]
    b050:	and	r0, r0, #2
    b054:	cmp	r0, #0
    b058:	beq	b09c <MyGame_Example_Stat_parse_json_table+0x1e4>
    b05c:	ldr	r0, [fp, #-8]
    b060:	ldr	r0, [r0]
    b064:	movw	r1, #2
    b068:	str	r1, [sp, #4]
    b06c:	ldr	r2, [sp, #4]
    b070:	movw	r3, #2
    b074:	uxth	r3, r3
    b078:	bl	0 <flatcc_builder_table_add>
    b07c:	str	r0, [fp, #-28]	; 0xffffffe4
    b080:	movw	r1, #0
    b084:	cmp	r0, r1
    b088:	bne	b090 <MyGame_Example_Stat_parse_json_table+0x1d8>
    b08c:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b090:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b094:	ldrh	r1, [sp, #22]
    b098:	bl	12010 <flatbuffers_uint16_write_to_pe>
    b09c:	b	b0b4 <MyGame_Example_Stat_parse_json_table+0x1fc>
    b0a0:	ldr	r0, [fp, #-8]
    b0a4:	ldr	r1, [fp, #-12]
    b0a8:	ldr	r2, [fp, #-16]
    b0ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b0b0:	str	r0, [fp, #-12]
    b0b4:	b	b0cc <MyGame_Example_Stat_parse_json_table+0x214>
    b0b8:	ldr	r0, [fp, #-8]
    b0bc:	ldr	r1, [fp, #-12]
    b0c0:	ldr	r2, [fp, #-16]
    b0c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b0c8:	str	r0, [fp, #-12]
    b0cc:	b	b2fc <MyGame_Example_Stat_parse_json_table+0x444>
    b0d0:	ldr	r0, [sp, #28]
    b0d4:	bic	r0, r0, #255	; 0xff
    b0d8:	movw	r1, #27648	; 0x6c00
    b0dc:	movt	r1, #30305	; 0x7661
    b0e0:	teq	r0, r1
    b0e4:	bne	b228 <MyGame_Example_Stat_parse_json_table+0x370>
    b0e8:	b	b0ec <MyGame_Example_Stat_parse_json_table+0x234>
    b0ec:	ldr	r0, [fp, #-8]
    b0f0:	ldr	r1, [fp, #-12]
    b0f4:	str	r1, [sp, #32]
    b0f8:	ldr	r2, [fp, #-16]
    b0fc:	movw	r3, #3
    b100:	bl	7218 <flatcc_json_parser_match_symbol>
    b104:	str	r0, [fp, #-12]
    b108:	ldr	r0, [sp, #32]
    b10c:	ldr	r1, [fp, #-12]
    b110:	cmp	r0, r1
    b114:	beq	b210 <MyGame_Example_Stat_parse_json_table+0x358>
    b118:	mov	r0, #0
    b11c:	str	r0, [sp, #12]
    b120:	str	r0, [sp, #8]
    b124:	ldr	r0, [fp, #-8]
    b128:	ldr	r1, [fp, #-12]
    b12c:	str	r1, [sp, #32]
    b130:	ldr	r2, [fp, #-16]
    b134:	add	r3, sp, #8
    b138:	bl	b904 <flatcc_json_parser_int64>
    b13c:	str	r0, [fp, #-12]
    b140:	ldr	r0, [sp, #32]
    b144:	ldr	r1, [fp, #-12]
    b148:	cmp	r0, r1
    b14c:	bne	b1a0 <MyGame_Example_Stat_parse_json_table+0x2e8>
    b150:	ldr	r0, [fp, #-8]
    b154:	ldr	r1, [fp, #-12]
    b158:	str	r1, [sp, #32]
    b15c:	ldr	r2, [fp, #-16]
    b160:	movw	r3, #0
    b164:	movt	r3, #0
    b168:	add	ip, sp, #8
    b16c:	str	ip, [sp]
    b170:	bl	b9dc <flatcc_json_parser_symbolic_int64>
    b174:	str	r0, [fp, #-12]
    b178:	ldr	r0, [fp, #-12]
    b17c:	ldr	r1, [sp, #32]
    b180:	cmp	r0, r1
    b184:	beq	b198 <MyGame_Example_Stat_parse_json_table+0x2e0>
    b188:	ldr	r0, [fp, #-12]
    b18c:	ldr	r1, [fp, #-16]
    b190:	cmp	r0, r1
    b194:	bne	b19c <MyGame_Example_Stat_parse_json_table+0x2e4>
    b198:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b19c:	b	b1a0 <MyGame_Example_Stat_parse_json_table+0x2e8>
    b1a0:	ldr	r0, [sp, #8]
    b1a4:	ldr	r1, [sp, #12]
    b1a8:	orr	r0, r0, r1
    b1ac:	cmp	r0, #0
    b1b0:	bne	b1cc <MyGame_Example_Stat_parse_json_table+0x314>
    b1b4:	b	b1b8 <MyGame_Example_Stat_parse_json_table+0x300>
    b1b8:	ldr	r0, [fp, #-8]
    b1bc:	ldr	r0, [r0, #8]
    b1c0:	and	r0, r0, #2
    b1c4:	cmp	r0, #0
    b1c8:	beq	b20c <MyGame_Example_Stat_parse_json_table+0x354>
    b1cc:	ldr	r0, [fp, #-8]
    b1d0:	ldr	r0, [r0]
    b1d4:	movw	r1, #1
    b1d8:	movw	r2, #8
    b1dc:	movw	r3, #8
    b1e0:	uxth	r3, r3
    b1e4:	bl	0 <flatcc_builder_table_add>
    b1e8:	str	r0, [fp, #-28]	; 0xffffffe4
    b1ec:	movw	r1, #0
    b1f0:	cmp	r0, r1
    b1f4:	bne	b1fc <MyGame_Example_Stat_parse_json_table+0x344>
    b1f8:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b1fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b200:	ldr	r2, [sp, #8]
    b204:	ldr	r3, [sp, #12]
    b208:	bl	bc1c <flatbuffers_int64_write_to_pe>
    b20c:	b	b224 <MyGame_Example_Stat_parse_json_table+0x36c>
    b210:	ldr	r0, [fp, #-8]
    b214:	ldr	r1, [fp, #-12]
    b218:	ldr	r2, [fp, #-16]
    b21c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b220:	str	r0, [fp, #-12]
    b224:	b	b2f8 <MyGame_Example_Stat_parse_json_table+0x440>
    b228:	ldr	r0, [sp, #28]
    b22c:	bfc	r0, #0, #16
    b230:	movw	r1, #0
    b234:	movt	r1, #26980	; 0x6964
    b238:	teq	r0, r1
    b23c:	bne	b2e0 <MyGame_Example_Stat_parse_json_table+0x428>
    b240:	b	b244 <MyGame_Example_Stat_parse_json_table+0x38c>
    b244:	ldr	r0, [fp, #-8]
    b248:	ldr	r1, [fp, #-12]
    b24c:	str	r1, [sp, #32]
    b250:	ldr	r2, [fp, #-16]
    b254:	movw	r3, #2
    b258:	bl	7218 <flatcc_json_parser_match_symbol>
    b25c:	str	r0, [fp, #-12]
    b260:	ldr	r0, [sp, #32]
    b264:	ldr	r1, [fp, #-12]
    b268:	cmp	r0, r1
    b26c:	beq	b2c8 <MyGame_Example_Stat_parse_json_table+0x410>
    b270:	ldr	r0, [fp, #-8]
    b274:	ldr	r1, [fp, #-12]
    b278:	ldr	r2, [fp, #-16]
    b27c:	sub	r3, fp, #32
    b280:	bl	0 <flatcc_json_parser_build_string>
    b284:	str	r0, [fp, #-12]
    b288:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b28c:	cmp	r0, #0
    b290:	beq	b2b4 <MyGame_Example_Stat_parse_json_table+0x3fc>
    b294:	ldr	r0, [fp, #-8]
    b298:	ldr	r0, [r0]
    b29c:	movw	r1, #0
    b2a0:	bl	0 <flatcc_builder_table_add_offset>
    b2a4:	str	r0, [sp, #36]	; 0x24
    b2a8:	movw	r1, #0
    b2ac:	cmp	r0, r1
    b2b0:	bne	b2b8 <MyGame_Example_Stat_parse_json_table+0x400>
    b2b4:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b2b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b2bc:	ldr	r1, [sp, #36]	; 0x24
    b2c0:	str	r0, [r1]
    b2c4:	b	b2dc <MyGame_Example_Stat_parse_json_table+0x424>
    b2c8:	ldr	r0, [fp, #-8]
    b2cc:	ldr	r1, [fp, #-12]
    b2d0:	ldr	r2, [fp, #-16]
    b2d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b2d8:	str	r0, [fp, #-12]
    b2dc:	b	b2f4 <MyGame_Example_Stat_parse_json_table+0x43c>
    b2e0:	ldr	r0, [fp, #-8]
    b2e4:	ldr	r1, [fp, #-12]
    b2e8:	ldr	r2, [fp, #-16]
    b2ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b2f0:	str	r0, [fp, #-12]
    b2f4:	b	b2f8 <MyGame_Example_Stat_parse_json_table+0x440>
    b2f8:	b	b2fc <MyGame_Example_Stat_parse_json_table+0x444>
    b2fc:	ldr	r0, [fp, #-8]
    b300:	ldr	r1, [fp, #-12]
    b304:	ldr	r2, [fp, #-16]
    b308:	sub	r3, fp, #24
    b30c:	bl	c534 <flatcc_json_parser_object_end>
    b310:	str	r0, [fp, #-12]
    b314:	b	af14 <MyGame_Example_Stat_parse_json_table+0x5c>
    b318:	ldr	r0, [fp, #-8]
    b31c:	ldr	r0, [r0, #24]
    b320:	cmp	r0, #0
    b324:	beq	b32c <MyGame_Example_Stat_parse_json_table+0x474>
    b328:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b32c:	ldr	r0, [fp, #-8]
    b330:	ldr	r0, [r0]
    b334:	bl	0 <flatcc_builder_end_table>
    b338:	ldr	lr, [fp, #-20]	; 0xffffffec
    b33c:	str	r0, [lr]
    b340:	cmp	r0, #0
    b344:	bne	b34c <MyGame_Example_Stat_parse_json_table+0x494>
    b348:	b	b358 <MyGame_Example_Stat_parse_json_table+0x4a0>
    b34c:	ldr	r0, [fp, #-12]
    b350:	str	r0, [fp, #-4]
    b354:	b	b370 <MyGame_Example_Stat_parse_json_table+0x4b8>
    b358:	ldr	r0, [fp, #-8]
    b35c:	ldr	r1, [fp, #-12]
    b360:	ldr	r2, [fp, #-16]
    b364:	movw	r3, #33	; 0x21
    b368:	bl	0 <flatcc_json_parser_set_error>
    b36c:	str	r0, [fp, #-4]
    b370:	ldr	r0, [fp, #-4]
    b374:	mov	sp, fp
    b378:	pop	{fp, pc}

0000b37c <flatcc_json_parser_symbolic_float>:
    b37c:	push	{r4, r5, r6, sl, fp, lr}
    b380:	add	fp, sp, #16
    b384:	sub	sp, sp, #88	; 0x58
    b388:	ldr	ip, [fp, #8]
    b38c:	vldr	s0, [pc, #532]	; b5a8 <flatcc_json_parser_symbolic_float+0x22c>
    b390:	str	r0, [fp, #-24]	; 0xffffffe8
    b394:	str	r1, [fp, #-28]	; 0xffffffe4
    b398:	str	r2, [fp, #-32]	; 0xffffffe0
    b39c:	str	r3, [fp, #-36]	; 0xffffffdc
    b3a0:	vstr	s0, [fp, #-48]	; 0xffffffd0
    b3a4:	movw	r0, #0
    b3a8:	str	r0, [sp, #36]	; 0x24
    b3ac:	ldr	r0, [fp, #8]
    b3b0:	vstr	s0, [r0]
    b3b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b3b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b3bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b3c0:	str	ip, [sp, #32]
    b3c4:	bl	dcbc <flatcc_json_parser_constant_start>
    b3c8:	str	r0, [fp, #-28]	; 0xffffffe4
    b3cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b3d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b3d4:	cmp	r0, r1
    b3d8:	bne	b3e8 <flatcc_json_parser_symbolic_float+0x6c>
    b3dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b3e0:	str	r0, [fp, #-20]	; 0xffffffec
    b3e4:	b	b59c <flatcc_json_parser_symbolic_float+0x220>
    b3e8:	b	b3ec <flatcc_json_parser_symbolic_float+0x70>
    b3ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b3f0:	str	r0, [fp, #-40]	; 0xffffffd8
    b3f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b3f8:	ldr	r0, [r0]
    b3fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b400:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b404:	str	r2, [fp, #-44]	; 0xffffffd4
    b408:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b40c:	str	r0, [sp, #28]
    b410:	mov	r0, r1
    b414:	mov	r1, r2
    b418:	mov	r2, r3
    b41c:	add	r3, sp, #44	; 0x2c
    b420:	add	ip, sp, #48	; 0x30
    b424:	str	ip, [sp]
    b428:	add	ip, sp, #40	; 0x28
    b42c:	str	ip, [sp, #4]
    b430:	ldr	ip, [sp, #28]
    b434:	blx	ip
    b438:	str	r0, [fp, #-28]	; 0xffffffe4
    b43c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b440:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b444:	cmp	r0, r1
    b448:	bne	b458 <flatcc_json_parser_symbolic_float+0xdc>
    b44c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b450:	str	r0, [fp, #-20]	; 0xffffffec
    b454:	b	b59c <flatcc_json_parser_symbolic_float+0x220>
    b458:	b	b45c <flatcc_json_parser_symbolic_float+0xe0>
    b45c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b460:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b464:	cmp	r0, r1
    b468:	movw	r0, #0
    b46c:	str	r0, [sp, #24]
    b470:	bne	b498 <flatcc_json_parser_symbolic_float+0x11c>
    b474:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b478:	add	r1, r0, #4
    b47c:	str	r1, [fp, #-40]	; 0xffffffd8
    b480:	ldr	r0, [r0, #4]
    b484:	movw	r1, #0
    b488:	cmp	r0, r1
    b48c:	movw	r0, #0
    b490:	movne	r0, #1
    b494:	str	r0, [sp, #24]
    b498:	ldr	r0, [sp, #24]
    b49c:	tst	r0, #1
    b4a0:	bne	b3f4 <flatcc_json_parser_symbolic_float+0x78>
    b4a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b4a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b4ac:	cmp	r0, r1
    b4b0:	bne	b4d0 <flatcc_json_parser_symbolic_float+0x154>
    b4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b4b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b4bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b4c0:	movw	r3, #23
    b4c4:	bl	0 <flatcc_json_parser_set_error>
    b4c8:	str	r0, [fp, #-20]	; 0xffffffec
    b4cc:	b	b59c <flatcc_json_parser_symbolic_float+0x220>
    b4d0:	ldr	r0, [sp, #36]	; 0x24
    b4d4:	add	r1, r0, #1
    b4d8:	str	r1, [sp, #36]	; 0x24
    b4dc:	cmp	r0, #0
    b4e0:	beq	b510 <flatcc_json_parser_symbolic_float+0x194>
    b4e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b4e8:	ldr	r0, [r0, #12]
    b4ec:	cmp	r0, #0
    b4f0:	beq	b510 <flatcc_json_parser_symbolic_float+0x194>
    b4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b4f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b4fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b500:	movw	r3, #14
    b504:	bl	0 <flatcc_json_parser_set_error>
    b508:	str	r0, [fp, #-20]	; 0xffffffec
    b50c:	b	b59c <flatcc_json_parser_symbolic_float+0x220>
    b510:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b514:	mov	r1, r0
    b518:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b520:	ldr	ip, [sp, #44]	; 0x2c
    b524:	ldr	lr, [sp, #48]	; 0x30
    b528:	ldr	r4, [sp, #52]	; 0x34
    b52c:	mov	r5, sp
    b530:	sub	r6, fp, #48	; 0x30
    b534:	str	r6, [r5, #8]
    b538:	str	r4, [r5, #4]
    b53c:	str	lr, [r5]
    b540:	str	r0, [sp, #20]
    b544:	mov	r0, r2
    b548:	str	r1, [sp, #16]
    b54c:	mov	r1, r3
    b550:	ldr	r2, [sp, #20]
    b554:	mov	r3, ip
    b558:	bl	123e8 <flatcc_json_parser_coerce_float>
    b55c:	ldr	r1, [sp, #16]
    b560:	cmp	r1, r0
    b564:	bne	b574 <flatcc_json_parser_symbolic_float+0x1f8>
    b568:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b56c:	str	r0, [fp, #-20]	; 0xffffffec
    b570:	b	b59c <flatcc_json_parser_symbolic_float+0x220>
    b574:	vldr	s0, [fp, #-48]	; 0xffffffd0
    b578:	ldr	r0, [fp, #8]
    b57c:	vldr	s2, [r0]
    b580:	vadd.f32	s0, s2, s0
    b584:	vstr	s0, [r0]
    b588:	ldr	r0, [sp, #40]	; 0x28
    b58c:	cmp	r0, #0
    b590:	bne	b3ec <flatcc_json_parser_symbolic_float+0x70>
    b594:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b598:	str	r0, [fp, #-20]	; 0xffffffec
    b59c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b5a0:	sub	sp, fp, #16
    b5a4:	pop	{r4, r5, r6, sl, fp, pc}
    b5a8:	.word	0x00000000

0000b5ac <flatbuffers_float_write_to_pe>:
    b5ac:	push	{fp, lr}
    b5b0:	mov	fp, sp
    b5b4:	sub	sp, sp, #8
    b5b8:	str	r0, [sp, #4]
    b5bc:	vstr	s0, [sp]
    b5c0:	vldr	s0, [sp]
    b5c4:	bl	12470 <flatbuffers_float_cast_to_pe>
    b5c8:	ldr	r0, [sp, #4]
    b5cc:	vstr	s0, [r0]
    b5d0:	mov	sp, fp
    b5d4:	pop	{fp, pc}

0000b5d8 <flatcc_json_parser_int32>:
    b5d8:	push	{r4, r5, fp, lr}
    b5dc:	add	fp, sp, #8
    b5e0:	sub	sp, sp, #56	; 0x38
    b5e4:	str	r0, [fp, #-16]
    b5e8:	str	r1, [fp, #-20]	; 0xffffffec
    b5ec:	str	r2, [fp, #-24]	; 0xffffffe8
    b5f0:	str	r3, [fp, #-28]	; 0xffffffe4
    b5f4:	mov	r0, #0
    b5f8:	str	r0, [sp, #28]
    b5fc:	str	r0, [sp, #24]
    b600:	movw	r0, #0
    b604:	str	r0, [sp, #20]
    b608:	ldr	r1, [fp, #-20]	; 0xffffffec
    b60c:	str	r1, [sp, #16]
    b610:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b614:	str	r0, [r1]
    b618:	ldr	r0, [fp, #-20]	; 0xffffffec
    b61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b620:	cmp	r0, r1
    b624:	bne	b634 <flatcc_json_parser_int32+0x5c>
    b628:	ldr	r0, [fp, #-20]	; 0xffffffec
    b62c:	str	r0, [fp, #-12]
    b630:	b	b6a4 <flatcc_json_parser_int32+0xcc>
    b634:	ldr	r0, [fp, #-16]
    b638:	ldr	r1, [fp, #-20]	; 0xffffffec
    b63c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b640:	add	r3, sp, #20
    b644:	add	ip, sp, #24
    b648:	str	ip, [sp]
    b64c:	bl	0 <flatcc_json_parser_integer>
    b650:	str	r0, [fp, #-20]	; 0xffffffec
    b654:	ldr	r0, [fp, #-20]	; 0xffffffec
    b658:	ldr	r1, [sp, #16]
    b65c:	cmp	r0, r1
    b660:	beq	b69c <flatcc_json_parser_int32+0xc4>
    b664:	ldr	r0, [fp, #-16]
    b668:	ldr	r1, [fp, #-20]	; 0xffffffec
    b66c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b670:	ldr	r3, [sp, #20]
    b674:	ldr	ip, [sp, #24]
    b678:	ldr	lr, [sp, #28]
    b67c:	ldr	r4, [fp, #-28]	; 0xffffffe4
    b680:	mov	r5, sp
    b684:	str	r4, [r5, #8]
    b688:	str	lr, [r5, #4]
    b68c:	str	ip, [r5]
    b690:	bl	12494 <flatcc_json_parser_coerce_int32>
    b694:	str	r0, [fp, #-12]
    b698:	b	b6a4 <flatcc_json_parser_int32+0xcc>
    b69c:	ldr	r0, [fp, #-20]	; 0xffffffec
    b6a0:	str	r0, [fp, #-12]
    b6a4:	ldr	r0, [fp, #-12]
    b6a8:	sub	sp, fp, #8
    b6ac:	pop	{r4, r5, fp, pc}

0000b6b0 <flatcc_json_parser_symbolic_int32>:
    b6b0:	push	{r4, r5, r6, sl, fp, lr}
    b6b4:	add	fp, sp, #16
    b6b8:	sub	sp, sp, #88	; 0x58
    b6bc:	ldr	ip, [fp, #8]
    b6c0:	str	r0, [fp, #-24]	; 0xffffffe8
    b6c4:	str	r1, [fp, #-28]	; 0xffffffe4
    b6c8:	str	r2, [fp, #-32]	; 0xffffffe0
    b6cc:	str	r3, [fp, #-36]	; 0xffffffdc
    b6d0:	movw	r0, #0
    b6d4:	str	r0, [fp, #-48]	; 0xffffffd0
    b6d8:	str	r0, [sp, #36]	; 0x24
    b6dc:	ldr	r1, [fp, #8]
    b6e0:	str	r0, [r1]
    b6e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b6e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b6ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b6f0:	str	ip, [sp, #32]
    b6f4:	bl	dcbc <flatcc_json_parser_constant_start>
    b6f8:	str	r0, [fp, #-28]	; 0xffffffe4
    b6fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b700:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b704:	cmp	r0, r1
    b708:	bne	b718 <flatcc_json_parser_symbolic_int32+0x68>
    b70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b710:	str	r0, [fp, #-20]	; 0xffffffec
    b714:	b	b8cc <flatcc_json_parser_symbolic_int32+0x21c>
    b718:	b	b71c <flatcc_json_parser_symbolic_int32+0x6c>
    b71c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    b720:	str	r0, [fp, #-40]	; 0xffffffd8
    b724:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b728:	ldr	r0, [r0]
    b72c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b730:	ldr	r2, [fp, #-28]	; 0xffffffe4
    b734:	str	r2, [fp, #-44]	; 0xffffffd4
    b738:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b73c:	str	r0, [sp, #28]
    b740:	mov	r0, r1
    b744:	mov	r1, r2
    b748:	mov	r2, r3
    b74c:	add	r3, sp, #44	; 0x2c
    b750:	add	ip, sp, #48	; 0x30
    b754:	str	ip, [sp]
    b758:	add	ip, sp, #40	; 0x28
    b75c:	str	ip, [sp, #4]
    b760:	ldr	ip, [sp, #28]
    b764:	blx	ip
    b768:	str	r0, [fp, #-28]	; 0xffffffe4
    b76c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b770:	ldr	r1, [fp, #-32]	; 0xffffffe0
    b774:	cmp	r0, r1
    b778:	bne	b788 <flatcc_json_parser_symbolic_int32+0xd8>
    b77c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b780:	str	r0, [fp, #-20]	; 0xffffffec
    b784:	b	b8cc <flatcc_json_parser_symbolic_int32+0x21c>
    b788:	b	b78c <flatcc_json_parser_symbolic_int32+0xdc>
    b78c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b790:	ldr	r1, [fp, #-44]	; 0xffffffd4
    b794:	cmp	r0, r1
    b798:	movw	r0, #0
    b79c:	str	r0, [sp, #24]
    b7a0:	bne	b7c8 <flatcc_json_parser_symbolic_int32+0x118>
    b7a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b7a8:	add	r1, r0, #4
    b7ac:	str	r1, [fp, #-40]	; 0xffffffd8
    b7b0:	ldr	r0, [r0, #4]
    b7b4:	movw	r1, #0
    b7b8:	cmp	r0, r1
    b7bc:	movw	r0, #0
    b7c0:	movne	r0, #1
    b7c4:	str	r0, [sp, #24]
    b7c8:	ldr	r0, [sp, #24]
    b7cc:	tst	r0, #1
    b7d0:	bne	b724 <flatcc_json_parser_symbolic_int32+0x74>
    b7d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b7d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b7dc:	cmp	r0, r1
    b7e0:	bne	b800 <flatcc_json_parser_symbolic_int32+0x150>
    b7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b7e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b7ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b7f0:	movw	r3, #23
    b7f4:	bl	0 <flatcc_json_parser_set_error>
    b7f8:	str	r0, [fp, #-20]	; 0xffffffec
    b7fc:	b	b8cc <flatcc_json_parser_symbolic_int32+0x21c>
    b800:	ldr	r0, [sp, #36]	; 0x24
    b804:	add	r1, r0, #1
    b808:	str	r1, [sp, #36]	; 0x24
    b80c:	cmp	r0, #0
    b810:	beq	b840 <flatcc_json_parser_symbolic_int32+0x190>
    b814:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b818:	ldr	r0, [r0, #12]
    b81c:	cmp	r0, #0
    b820:	beq	b840 <flatcc_json_parser_symbolic_int32+0x190>
    b824:	ldr	r0, [fp, #-24]	; 0xffffffe8
    b828:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b82c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    b830:	movw	r3, #14
    b834:	bl	0 <flatcc_json_parser_set_error>
    b838:	str	r0, [fp, #-20]	; 0xffffffec
    b83c:	b	b8cc <flatcc_json_parser_symbolic_int32+0x21c>
    b840:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b844:	mov	r1, r0
    b848:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b84c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    b850:	ldr	ip, [sp, #44]	; 0x2c
    b854:	ldr	lr, [sp, #48]	; 0x30
    b858:	ldr	r4, [sp, #52]	; 0x34
    b85c:	mov	r5, sp
    b860:	sub	r6, fp, #48	; 0x30
    b864:	str	r6, [r5, #8]
    b868:	str	r4, [r5, #4]
    b86c:	str	lr, [r5]
    b870:	str	r0, [sp, #20]
    b874:	mov	r0, r2
    b878:	str	r1, [sp, #16]
    b87c:	mov	r1, r3
    b880:	ldr	r2, [sp, #20]
    b884:	mov	r3, ip
    b888:	bl	12494 <flatcc_json_parser_coerce_int32>
    b88c:	ldr	r1, [sp, #16]
    b890:	cmp	r1, r0
    b894:	bne	b8a4 <flatcc_json_parser_symbolic_int32+0x1f4>
    b898:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b89c:	str	r0, [fp, #-20]	; 0xffffffec
    b8a0:	b	b8cc <flatcc_json_parser_symbolic_int32+0x21c>
    b8a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    b8a8:	ldr	r1, [fp, #8]
    b8ac:	ldr	r2, [r1]
    b8b0:	add	r0, r2, r0
    b8b4:	str	r0, [r1]
    b8b8:	ldr	r0, [sp, #40]	; 0x28
    b8bc:	cmp	r0, #0
    b8c0:	bne	b71c <flatcc_json_parser_symbolic_int32+0x6c>
    b8c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    b8c8:	str	r0, [fp, #-20]	; 0xffffffec
    b8cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    b8d0:	sub	sp, fp, #16
    b8d4:	pop	{r4, r5, r6, sl, fp, pc}

0000b8d8 <flatbuffers_int32_write_to_pe>:
    b8d8:	push	{fp, lr}
    b8dc:	mov	fp, sp
    b8e0:	sub	sp, sp, #8
    b8e4:	str	r0, [sp, #4]
    b8e8:	str	r1, [sp]
    b8ec:	ldr	r0, [sp]
    b8f0:	bl	12580 <flatbuffers_int32_cast_to_pe>
    b8f4:	ldr	r1, [sp, #4]
    b8f8:	str	r0, [r1]
    b8fc:	mov	sp, fp
    b900:	pop	{fp, pc}

0000b904 <flatcc_json_parser_int64>:
    b904:	push	{r4, r5, fp, lr}
    b908:	add	fp, sp, #8
    b90c:	sub	sp, sp, #56	; 0x38
    b910:	str	r0, [fp, #-16]
    b914:	str	r1, [fp, #-20]	; 0xffffffec
    b918:	str	r2, [fp, #-24]	; 0xffffffe8
    b91c:	str	r3, [fp, #-28]	; 0xffffffe4
    b920:	mov	r0, #0
    b924:	str	r0, [sp, #28]
    b928:	str	r0, [sp, #24]
    b92c:	str	r0, [sp, #20]
    b930:	ldr	r1, [fp, #-20]	; 0xffffffec
    b934:	str	r1, [sp, #16]
    b938:	ldr	r1, [fp, #-28]	; 0xffffffe4
    b93c:	str	r0, [r1, #4]
    b940:	str	r0, [r1]
    b944:	ldr	r0, [fp, #-20]	; 0xffffffec
    b948:	ldr	r1, [fp, #-24]	; 0xffffffe8
    b94c:	cmp	r0, r1
    b950:	bne	b960 <flatcc_json_parser_int64+0x5c>
    b954:	ldr	r0, [fp, #-20]	; 0xffffffec
    b958:	str	r0, [fp, #-12]
    b95c:	b	b9d0 <flatcc_json_parser_int64+0xcc>
    b960:	ldr	r0, [fp, #-16]
    b964:	ldr	r1, [fp, #-20]	; 0xffffffec
    b968:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b96c:	add	r3, sp, #20
    b970:	add	ip, sp, #24
    b974:	str	ip, [sp]
    b978:	bl	0 <flatcc_json_parser_integer>
    b97c:	str	r0, [fp, #-20]	; 0xffffffec
    b980:	ldr	r0, [fp, #-20]	; 0xffffffec
    b984:	ldr	r1, [sp, #16]
    b988:	cmp	r0, r1
    b98c:	beq	b9c8 <flatcc_json_parser_int64+0xc4>
    b990:	ldr	r0, [fp, #-16]
    b994:	ldr	r1, [fp, #-20]	; 0xffffffec
    b998:	ldr	r2, [fp, #-24]	; 0xffffffe8
    b99c:	ldr	r3, [sp, #20]
    b9a0:	ldr	ip, [sp, #24]
    b9a4:	ldr	lr, [sp, #28]
    b9a8:	ldr	r4, [fp, #-28]	; 0xffffffe4
    b9ac:	mov	r5, sp
    b9b0:	str	r4, [r5, #8]
    b9b4:	str	lr, [r5, #4]
    b9b8:	str	ip, [r5]
    b9bc:	bl	12594 <flatcc_json_parser_coerce_int64>
    b9c0:	str	r0, [fp, #-12]
    b9c4:	b	b9d0 <flatcc_json_parser_int64+0xcc>
    b9c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    b9cc:	str	r0, [fp, #-12]
    b9d0:	ldr	r0, [fp, #-12]
    b9d4:	sub	sp, fp, #8
    b9d8:	pop	{r4, r5, fp, pc}

0000b9dc <flatcc_json_parser_symbolic_int64>:
    b9dc:	push	{r4, r5, r6, sl, fp, lr}
    b9e0:	add	fp, sp, #16
    b9e4:	sub	sp, sp, #96	; 0x60
    b9e8:	ldr	ip, [fp, #8]
    b9ec:	str	r0, [fp, #-24]	; 0xffffffe8
    b9f0:	str	r1, [fp, #-28]	; 0xffffffe4
    b9f4:	str	r2, [fp, #-32]	; 0xffffffe0
    b9f8:	str	r3, [fp, #-36]	; 0xffffffdc
    b9fc:	mov	r0, #0
    ba00:	str	r0, [sp, #60]	; 0x3c
    ba04:	str	r0, [sp, #56]	; 0x38
    ba08:	str	r0, [sp, #36]	; 0x24
    ba0c:	ldr	r1, [fp, #8]
    ba10:	str	r0, [r1, #4]
    ba14:	str	r0, [r1]
    ba18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ba1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ba20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ba24:	str	ip, [sp, #32]
    ba28:	bl	dcbc <flatcc_json_parser_constant_start>
    ba2c:	str	r0, [fp, #-28]	; 0xffffffe4
    ba30:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ba34:	ldr	r1, [fp, #-32]	; 0xffffffe0
    ba38:	cmp	r0, r1
    ba3c:	bne	ba4c <flatcc_json_parser_symbolic_int64+0x70>
    ba40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ba44:	str	r0, [fp, #-20]	; 0xffffffec
    ba48:	b	bc10 <flatcc_json_parser_symbolic_int64+0x234>
    ba4c:	b	ba50 <flatcc_json_parser_symbolic_int64+0x74>
    ba50:	ldr	r0, [fp, #-36]	; 0xffffffdc
    ba54:	str	r0, [fp, #-40]	; 0xffffffd8
    ba58:	ldr	r0, [fp, #-40]	; 0xffffffd8
    ba5c:	ldr	r0, [r0]
    ba60:	ldr	r1, [fp, #-24]	; 0xffffffe8
    ba64:	ldr	r2, [fp, #-28]	; 0xffffffe4
    ba68:	str	r2, [fp, #-44]	; 0xffffffd4
    ba6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    ba70:	str	r0, [sp, #28]
    ba74:	mov	r0, r1
    ba78:	mov	r1, r2
    ba7c:	mov	r2, r3
    ba80:	add	r3, sp, #44	; 0x2c
    ba84:	add	ip, sp, #48	; 0x30
    ba88:	str	ip, [sp]
    ba8c:	add	ip, sp, #40	; 0x28
    ba90:	str	ip, [sp, #4]
    ba94:	ldr	ip, [sp, #28]
    ba98:	blx	ip
    ba9c:	str	r0, [fp, #-28]	; 0xffffffe4
    baa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    baa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
    baa8:	cmp	r0, r1
    baac:	bne	babc <flatcc_json_parser_symbolic_int64+0xe0>
    bab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bab4:	str	r0, [fp, #-20]	; 0xffffffec
    bab8:	b	bc10 <flatcc_json_parser_symbolic_int64+0x234>
    babc:	b	bac0 <flatcc_json_parser_symbolic_int64+0xe4>
    bac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    bac8:	cmp	r0, r1
    bacc:	movw	r0, #0
    bad0:	str	r0, [sp, #24]
    bad4:	bne	bafc <flatcc_json_parser_symbolic_int64+0x120>
    bad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    badc:	add	r1, r0, #4
    bae0:	str	r1, [fp, #-40]	; 0xffffffd8
    bae4:	ldr	r0, [r0, #4]
    bae8:	movw	r1, #0
    baec:	cmp	r0, r1
    baf0:	movw	r0, #0
    baf4:	movne	r0, #1
    baf8:	str	r0, [sp, #24]
    bafc:	ldr	r0, [sp, #24]
    bb00:	tst	r0, #1
    bb04:	bne	ba58 <flatcc_json_parser_symbolic_int64+0x7c>
    bb08:	ldr	r0, [fp, #-44]	; 0xffffffd4
    bb0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bb10:	cmp	r0, r1
    bb14:	bne	bb34 <flatcc_json_parser_symbolic_int64+0x158>
    bb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bb1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bb20:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bb24:	movw	r3, #23
    bb28:	bl	0 <flatcc_json_parser_set_error>
    bb2c:	str	r0, [fp, #-20]	; 0xffffffec
    bb30:	b	bc10 <flatcc_json_parser_symbolic_int64+0x234>
    bb34:	ldr	r0, [sp, #36]	; 0x24
    bb38:	add	r1, r0, #1
    bb3c:	str	r1, [sp, #36]	; 0x24
    bb40:	cmp	r0, #0
    bb44:	beq	bb74 <flatcc_json_parser_symbolic_int64+0x198>
    bb48:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bb4c:	ldr	r0, [r0, #12]
    bb50:	cmp	r0, #0
    bb54:	beq	bb74 <flatcc_json_parser_symbolic_int64+0x198>
    bb58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bb5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bb60:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bb64:	movw	r3, #14
    bb68:	bl	0 <flatcc_json_parser_set_error>
    bb6c:	str	r0, [fp, #-20]	; 0xffffffec
    bb70:	b	bc10 <flatcc_json_parser_symbolic_int64+0x234>
    bb74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bb78:	mov	r1, r0
    bb7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bb80:	ldr	r3, [fp, #-28]	; 0xffffffe4
    bb84:	ldr	ip, [sp, #44]	; 0x2c
    bb88:	ldr	lr, [sp, #48]	; 0x30
    bb8c:	ldr	r4, [sp, #52]	; 0x34
    bb90:	mov	r5, sp
    bb94:	add	r6, sp, #56	; 0x38
    bb98:	str	r6, [r5, #8]
    bb9c:	str	r4, [r5, #4]
    bba0:	str	lr, [r5]
    bba4:	str	r0, [sp, #20]
    bba8:	mov	r0, r2
    bbac:	str	r1, [sp, #16]
    bbb0:	mov	r1, r3
    bbb4:	ldr	r2, [sp, #20]
    bbb8:	mov	r3, ip
    bbbc:	bl	12594 <flatcc_json_parser_coerce_int64>
    bbc0:	ldr	r1, [sp, #16]
    bbc4:	cmp	r1, r0
    bbc8:	bne	bbd8 <flatcc_json_parser_symbolic_int64+0x1fc>
    bbcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bbd0:	str	r0, [fp, #-20]	; 0xffffffec
    bbd4:	b	bc10 <flatcc_json_parser_symbolic_int64+0x234>
    bbd8:	ldr	r0, [sp, #56]	; 0x38
    bbdc:	ldr	r1, [sp, #60]	; 0x3c
    bbe0:	ldr	r2, [fp, #8]
    bbe4:	ldr	r3, [r2]
    bbe8:	ldr	ip, [r2, #4]
    bbec:	adds	r0, r3, r0
    bbf0:	adc	r1, ip, r1
    bbf4:	str	r0, [r2]
    bbf8:	str	r1, [r2, #4]
    bbfc:	ldr	r0, [sp, #40]	; 0x28
    bc00:	cmp	r0, #0
    bc04:	bne	ba50 <flatcc_json_parser_symbolic_int64+0x74>
    bc08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bc0c:	str	r0, [fp, #-20]	; 0xffffffec
    bc10:	ldr	r0, [fp, #-20]	; 0xffffffec
    bc14:	sub	sp, fp, #16
    bc18:	pop	{r4, r5, r6, sl, fp, pc}

0000bc1c <flatbuffers_int64_write_to_pe>:
    bc1c:	push	{fp, lr}
    bc20:	mov	fp, sp
    bc24:	sub	sp, sp, #16
    bc28:	str	r0, [fp, #-4]
    bc2c:	str	r3, [sp, #4]
    bc30:	str	r2, [sp]
    bc34:	ldr	r0, [sp]
    bc38:	ldr	r1, [sp, #4]
    bc3c:	bl	12684 <flatbuffers_int64_cast_to_pe>
    bc40:	ldr	r2, [fp, #-4]
    bc44:	str	r1, [r2, #4]
    bc48:	str	r0, [r2]
    bc4c:	mov	sp, fp
    bc50:	pop	{fp, pc}

0000bc54 <flatcc_json_parser_uint32>:
    bc54:	push	{r4, r5, fp, lr}
    bc58:	add	fp, sp, #8
    bc5c:	sub	sp, sp, #56	; 0x38
    bc60:	str	r0, [fp, #-16]
    bc64:	str	r1, [fp, #-20]	; 0xffffffec
    bc68:	str	r2, [fp, #-24]	; 0xffffffe8
    bc6c:	str	r3, [fp, #-28]	; 0xffffffe4
    bc70:	mov	r0, #0
    bc74:	str	r0, [sp, #28]
    bc78:	str	r0, [sp, #24]
    bc7c:	movw	r0, #0
    bc80:	str	r0, [sp, #20]
    bc84:	ldr	r1, [fp, #-20]	; 0xffffffec
    bc88:	str	r1, [sp, #16]
    bc8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bc90:	str	r0, [r1]
    bc94:	ldr	r0, [fp, #-20]	; 0xffffffec
    bc98:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bc9c:	cmp	r0, r1
    bca0:	bne	bcb0 <flatcc_json_parser_uint32+0x5c>
    bca4:	ldr	r0, [fp, #-20]	; 0xffffffec
    bca8:	str	r0, [fp, #-12]
    bcac:	b	bd20 <flatcc_json_parser_uint32+0xcc>
    bcb0:	ldr	r0, [fp, #-16]
    bcb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    bcb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bcbc:	add	r3, sp, #20
    bcc0:	add	ip, sp, #24
    bcc4:	str	ip, [sp]
    bcc8:	bl	0 <flatcc_json_parser_integer>
    bccc:	str	r0, [fp, #-20]	; 0xffffffec
    bcd0:	ldr	r0, [fp, #-20]	; 0xffffffec
    bcd4:	ldr	r1, [sp, #16]
    bcd8:	cmp	r0, r1
    bcdc:	beq	bd18 <flatcc_json_parser_uint32+0xc4>
    bce0:	ldr	r0, [fp, #-16]
    bce4:	ldr	r1, [fp, #-20]	; 0xffffffec
    bce8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bcec:	ldr	r3, [sp, #20]
    bcf0:	ldr	ip, [sp, #24]
    bcf4:	ldr	lr, [sp, #28]
    bcf8:	ldr	r4, [fp, #-28]	; 0xffffffe4
    bcfc:	mov	r5, sp
    bd00:	str	r4, [r5, #8]
    bd04:	str	lr, [r5, #4]
    bd08:	str	ip, [r5]
    bd0c:	bl	126a0 <flatcc_json_parser_coerce_uint32>
    bd10:	str	r0, [fp, #-12]
    bd14:	b	bd20 <flatcc_json_parser_uint32+0xcc>
    bd18:	ldr	r0, [fp, #-20]	; 0xffffffec
    bd1c:	str	r0, [fp, #-12]
    bd20:	ldr	r0, [fp, #-12]
    bd24:	sub	sp, fp, #8
    bd28:	pop	{r4, r5, fp, pc}

0000bd2c <flatcc_json_parser_symbolic_uint32>:
    bd2c:	push	{r4, r5, r6, sl, fp, lr}
    bd30:	add	fp, sp, #16
    bd34:	sub	sp, sp, #88	; 0x58
    bd38:	ldr	ip, [fp, #8]
    bd3c:	str	r0, [fp, #-24]	; 0xffffffe8
    bd40:	str	r1, [fp, #-28]	; 0xffffffe4
    bd44:	str	r2, [fp, #-32]	; 0xffffffe0
    bd48:	str	r3, [fp, #-36]	; 0xffffffdc
    bd4c:	movw	r0, #0
    bd50:	str	r0, [fp, #-48]	; 0xffffffd0
    bd54:	str	r0, [sp, #36]	; 0x24
    bd58:	ldr	r1, [fp, #8]
    bd5c:	str	r0, [r1]
    bd60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bd64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bd68:	ldr	r2, [fp, #-32]	; 0xffffffe0
    bd6c:	str	ip, [sp, #32]
    bd70:	bl	dcbc <flatcc_json_parser_constant_start>
    bd74:	str	r0, [fp, #-28]	; 0xffffffe4
    bd78:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bd7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bd80:	cmp	r0, r1
    bd84:	bne	bd94 <flatcc_json_parser_symbolic_uint32+0x68>
    bd88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bd8c:	str	r0, [fp, #-20]	; 0xffffffec
    bd90:	b	bf48 <flatcc_json_parser_symbolic_uint32+0x21c>
    bd94:	b	bd98 <flatcc_json_parser_symbolic_uint32+0x6c>
    bd98:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bd9c:	str	r0, [fp, #-40]	; 0xffffffd8
    bda0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    bda4:	ldr	r0, [r0]
    bda8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bdac:	ldr	r2, [fp, #-28]	; 0xffffffe4
    bdb0:	str	r2, [fp, #-44]	; 0xffffffd4
    bdb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    bdb8:	str	r0, [sp, #28]
    bdbc:	mov	r0, r1
    bdc0:	mov	r1, r2
    bdc4:	mov	r2, r3
    bdc8:	add	r3, sp, #44	; 0x2c
    bdcc:	add	ip, sp, #48	; 0x30
    bdd0:	str	ip, [sp]
    bdd4:	add	ip, sp, #40	; 0x28
    bdd8:	str	ip, [sp, #4]
    bddc:	ldr	ip, [sp, #28]
    bde0:	blx	ip
    bde4:	str	r0, [fp, #-28]	; 0xffffffe4
    bde8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bdec:	ldr	r1, [fp, #-32]	; 0xffffffe0
    bdf0:	cmp	r0, r1
    bdf4:	bne	be04 <flatcc_json_parser_symbolic_uint32+0xd8>
    bdf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bdfc:	str	r0, [fp, #-20]	; 0xffffffec
    be00:	b	bf48 <flatcc_json_parser_symbolic_uint32+0x21c>
    be04:	b	be08 <flatcc_json_parser_symbolic_uint32+0xdc>
    be08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    be0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    be10:	cmp	r0, r1
    be14:	movw	r0, #0
    be18:	str	r0, [sp, #24]
    be1c:	bne	be44 <flatcc_json_parser_symbolic_uint32+0x118>
    be20:	ldr	r0, [fp, #-40]	; 0xffffffd8
    be24:	add	r1, r0, #4
    be28:	str	r1, [fp, #-40]	; 0xffffffd8
    be2c:	ldr	r0, [r0, #4]
    be30:	movw	r1, #0
    be34:	cmp	r0, r1
    be38:	movw	r0, #0
    be3c:	movne	r0, #1
    be40:	str	r0, [sp, #24]
    be44:	ldr	r0, [sp, #24]
    be48:	tst	r0, #1
    be4c:	bne	bda0 <flatcc_json_parser_symbolic_uint32+0x74>
    be50:	ldr	r0, [fp, #-44]	; 0xffffffd4
    be54:	ldr	r1, [fp, #-28]	; 0xffffffe4
    be58:	cmp	r0, r1
    be5c:	bne	be7c <flatcc_json_parser_symbolic_uint32+0x150>
    be60:	ldr	r0, [fp, #-24]	; 0xffffffe8
    be64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    be68:	ldr	r2, [fp, #-32]	; 0xffffffe0
    be6c:	movw	r3, #23
    be70:	bl	0 <flatcc_json_parser_set_error>
    be74:	str	r0, [fp, #-20]	; 0xffffffec
    be78:	b	bf48 <flatcc_json_parser_symbolic_uint32+0x21c>
    be7c:	ldr	r0, [sp, #36]	; 0x24
    be80:	add	r1, r0, #1
    be84:	str	r1, [sp, #36]	; 0x24
    be88:	cmp	r0, #0
    be8c:	beq	bebc <flatcc_json_parser_symbolic_uint32+0x190>
    be90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    be94:	ldr	r0, [r0, #12]
    be98:	cmp	r0, #0
    be9c:	beq	bebc <flatcc_json_parser_symbolic_uint32+0x190>
    bea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    bea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    beac:	movw	r3, #14
    beb0:	bl	0 <flatcc_json_parser_set_error>
    beb4:	str	r0, [fp, #-20]	; 0xffffffec
    beb8:	b	bf48 <flatcc_json_parser_symbolic_uint32+0x21c>
    bebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bec0:	mov	r1, r0
    bec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    becc:	ldr	ip, [sp, #44]	; 0x2c
    bed0:	ldr	lr, [sp, #48]	; 0x30
    bed4:	ldr	r4, [sp, #52]	; 0x34
    bed8:	mov	r5, sp
    bedc:	sub	r6, fp, #48	; 0x30
    bee0:	str	r6, [r5, #8]
    bee4:	str	r4, [r5, #4]
    bee8:	str	lr, [r5]
    beec:	str	r0, [sp, #20]
    bef0:	mov	r0, r2
    bef4:	str	r1, [sp, #16]
    bef8:	mov	r1, r3
    befc:	ldr	r2, [sp, #20]
    bf00:	mov	r3, ip
    bf04:	bl	126a0 <flatcc_json_parser_coerce_uint32>
    bf08:	ldr	r1, [sp, #16]
    bf0c:	cmp	r1, r0
    bf10:	bne	bf20 <flatcc_json_parser_symbolic_uint32+0x1f4>
    bf14:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bf18:	str	r0, [fp, #-20]	; 0xffffffec
    bf1c:	b	bf48 <flatcc_json_parser_symbolic_uint32+0x21c>
    bf20:	ldr	r0, [fp, #-48]	; 0xffffffd0
    bf24:	ldr	r1, [fp, #8]
    bf28:	ldr	r2, [r1]
    bf2c:	add	r0, r2, r0
    bf30:	str	r0, [r1]
    bf34:	ldr	r0, [sp, #40]	; 0x28
    bf38:	cmp	r0, #0
    bf3c:	bne	bd98 <flatcc_json_parser_symbolic_uint32+0x6c>
    bf40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    bf44:	str	r0, [fp, #-20]	; 0xffffffec
    bf48:	ldr	r0, [fp, #-20]	; 0xffffffec
    bf4c:	sub	sp, fp, #16
    bf50:	pop	{r4, r5, r6, sl, fp, pc}

0000bf54 <flatbuffers_uint32_write_to_pe>:
    bf54:	push	{fp, lr}
    bf58:	mov	fp, sp
    bf5c:	sub	sp, sp, #8
    bf60:	str	r0, [sp, #4]
    bf64:	str	r1, [sp]
    bf68:	ldr	r0, [sp]
    bf6c:	bl	12748 <flatbuffers_uint32_cast_to_pe>
    bf70:	ldr	r1, [sp, #4]
    bf74:	str	r0, [r1]
    bf78:	mov	sp, fp
    bf7c:	pop	{fp, pc}

0000bf80 <flatcc_json_parser_uint64>:
    bf80:	push	{r4, r5, fp, lr}
    bf84:	add	fp, sp, #8
    bf88:	sub	sp, sp, #56	; 0x38
    bf8c:	str	r0, [fp, #-16]
    bf90:	str	r1, [fp, #-20]	; 0xffffffec
    bf94:	str	r2, [fp, #-24]	; 0xffffffe8
    bf98:	str	r3, [fp, #-28]	; 0xffffffe4
    bf9c:	mov	r0, #0
    bfa0:	str	r0, [sp, #28]
    bfa4:	str	r0, [sp, #24]
    bfa8:	str	r0, [sp, #20]
    bfac:	ldr	r1, [fp, #-20]	; 0xffffffec
    bfb0:	str	r1, [sp, #16]
    bfb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    bfb8:	str	r0, [r1, #4]
    bfbc:	str	r0, [r1]
    bfc0:	ldr	r0, [fp, #-20]	; 0xffffffec
    bfc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    bfc8:	cmp	r0, r1
    bfcc:	bne	bfdc <flatcc_json_parser_uint64+0x5c>
    bfd0:	ldr	r0, [fp, #-20]	; 0xffffffec
    bfd4:	str	r0, [fp, #-12]
    bfd8:	b	c04c <flatcc_json_parser_uint64+0xcc>
    bfdc:	ldr	r0, [fp, #-16]
    bfe0:	ldr	r1, [fp, #-20]	; 0xffffffec
    bfe4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    bfe8:	add	r3, sp, #20
    bfec:	add	ip, sp, #24
    bff0:	str	ip, [sp]
    bff4:	bl	0 <flatcc_json_parser_integer>
    bff8:	str	r0, [fp, #-20]	; 0xffffffec
    bffc:	ldr	r0, [fp, #-20]	; 0xffffffec
    c000:	ldr	r1, [sp, #16]
    c004:	cmp	r0, r1
    c008:	beq	c044 <flatcc_json_parser_uint64+0xc4>
    c00c:	ldr	r0, [fp, #-16]
    c010:	ldr	r1, [fp, #-20]	; 0xffffffec
    c014:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c018:	ldr	r3, [sp, #20]
    c01c:	ldr	ip, [sp, #24]
    c020:	ldr	lr, [sp, #28]
    c024:	ldr	r4, [fp, #-28]	; 0xffffffe4
    c028:	mov	r5, sp
    c02c:	str	r4, [r5, #8]
    c030:	str	lr, [r5, #4]
    c034:	str	ip, [r5]
    c038:	bl	1275c <flatcc_json_parser_coerce_uint64>
    c03c:	str	r0, [fp, #-12]
    c040:	b	c04c <flatcc_json_parser_uint64+0xcc>
    c044:	ldr	r0, [fp, #-20]	; 0xffffffec
    c048:	str	r0, [fp, #-12]
    c04c:	ldr	r0, [fp, #-12]
    c050:	sub	sp, fp, #8
    c054:	pop	{r4, r5, fp, pc}

0000c058 <flatcc_json_parser_symbolic_uint64>:
    c058:	push	{r4, r5, r6, sl, fp, lr}
    c05c:	add	fp, sp, #16
    c060:	sub	sp, sp, #96	; 0x60
    c064:	ldr	ip, [fp, #8]
    c068:	str	r0, [fp, #-24]	; 0xffffffe8
    c06c:	str	r1, [fp, #-28]	; 0xffffffe4
    c070:	str	r2, [fp, #-32]	; 0xffffffe0
    c074:	str	r3, [fp, #-36]	; 0xffffffdc
    c078:	mov	r0, #0
    c07c:	str	r0, [sp, #60]	; 0x3c
    c080:	str	r0, [sp, #56]	; 0x38
    c084:	str	r0, [sp, #36]	; 0x24
    c088:	ldr	r1, [fp, #8]
    c08c:	str	r0, [r1, #4]
    c090:	str	r0, [r1]
    c094:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c098:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c09c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c0a0:	str	ip, [sp, #32]
    c0a4:	bl	dcbc <flatcc_json_parser_constant_start>
    c0a8:	str	r0, [fp, #-28]	; 0xffffffe4
    c0ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c0b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c0b4:	cmp	r0, r1
    c0b8:	bne	c0c8 <flatcc_json_parser_symbolic_uint64+0x70>
    c0bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c0c0:	str	r0, [fp, #-20]	; 0xffffffec
    c0c4:	b	c28c <flatcc_json_parser_symbolic_uint64+0x234>
    c0c8:	b	c0cc <flatcc_json_parser_symbolic_uint64+0x74>
    c0cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c0d0:	str	r0, [fp, #-40]	; 0xffffffd8
    c0d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c0d8:	ldr	r0, [r0]
    c0dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c0e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c0e4:	str	r2, [fp, #-44]	; 0xffffffd4
    c0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c0ec:	str	r0, [sp, #28]
    c0f0:	mov	r0, r1
    c0f4:	mov	r1, r2
    c0f8:	mov	r2, r3
    c0fc:	add	r3, sp, #44	; 0x2c
    c100:	add	ip, sp, #48	; 0x30
    c104:	str	ip, [sp]
    c108:	add	ip, sp, #40	; 0x28
    c10c:	str	ip, [sp, #4]
    c110:	ldr	ip, [sp, #28]
    c114:	blx	ip
    c118:	str	r0, [fp, #-28]	; 0xffffffe4
    c11c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c120:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c124:	cmp	r0, r1
    c128:	bne	c138 <flatcc_json_parser_symbolic_uint64+0xe0>
    c12c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c130:	str	r0, [fp, #-20]	; 0xffffffec
    c134:	b	c28c <flatcc_json_parser_symbolic_uint64+0x234>
    c138:	b	c13c <flatcc_json_parser_symbolic_uint64+0xe4>
    c13c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c140:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c144:	cmp	r0, r1
    c148:	movw	r0, #0
    c14c:	str	r0, [sp, #24]
    c150:	bne	c178 <flatcc_json_parser_symbolic_uint64+0x120>
    c154:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c158:	add	r1, r0, #4
    c15c:	str	r1, [fp, #-40]	; 0xffffffd8
    c160:	ldr	r0, [r0, #4]
    c164:	movw	r1, #0
    c168:	cmp	r0, r1
    c16c:	movw	r0, #0
    c170:	movne	r0, #1
    c174:	str	r0, [sp, #24]
    c178:	ldr	r0, [sp, #24]
    c17c:	tst	r0, #1
    c180:	bne	c0d4 <flatcc_json_parser_symbolic_uint64+0x7c>
    c184:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c188:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c18c:	cmp	r0, r1
    c190:	bne	c1b0 <flatcc_json_parser_symbolic_uint64+0x158>
    c194:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c198:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c19c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c1a0:	movw	r3, #23
    c1a4:	bl	0 <flatcc_json_parser_set_error>
    c1a8:	str	r0, [fp, #-20]	; 0xffffffec
    c1ac:	b	c28c <flatcc_json_parser_symbolic_uint64+0x234>
    c1b0:	ldr	r0, [sp, #36]	; 0x24
    c1b4:	add	r1, r0, #1
    c1b8:	str	r1, [sp, #36]	; 0x24
    c1bc:	cmp	r0, #0
    c1c0:	beq	c1f0 <flatcc_json_parser_symbolic_uint64+0x198>
    c1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1c8:	ldr	r0, [r0, #12]
    c1cc:	cmp	r0, #0
    c1d0:	beq	c1f0 <flatcc_json_parser_symbolic_uint64+0x198>
    c1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c1d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c1dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c1e0:	movw	r3, #14
    c1e4:	bl	0 <flatcc_json_parser_set_error>
    c1e8:	str	r0, [fp, #-20]	; 0xffffffec
    c1ec:	b	c28c <flatcc_json_parser_symbolic_uint64+0x234>
    c1f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c1f4:	mov	r1, r0
    c1f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c1fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c200:	ldr	ip, [sp, #44]	; 0x2c
    c204:	ldr	lr, [sp, #48]	; 0x30
    c208:	ldr	r4, [sp, #52]	; 0x34
    c20c:	mov	r5, sp
    c210:	add	r6, sp, #56	; 0x38
    c214:	str	r6, [r5, #8]
    c218:	str	r4, [r5, #4]
    c21c:	str	lr, [r5]
    c220:	str	r0, [sp, #20]
    c224:	mov	r0, r2
    c228:	str	r1, [sp, #16]
    c22c:	mov	r1, r3
    c230:	ldr	r2, [sp, #20]
    c234:	mov	r3, ip
    c238:	bl	1275c <flatcc_json_parser_coerce_uint64>
    c23c:	ldr	r1, [sp, #16]
    c240:	cmp	r1, r0
    c244:	bne	c254 <flatcc_json_parser_symbolic_uint64+0x1fc>
    c248:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c24c:	str	r0, [fp, #-20]	; 0xffffffec
    c250:	b	c28c <flatcc_json_parser_symbolic_uint64+0x234>
    c254:	ldr	r0, [sp, #56]	; 0x38
    c258:	ldr	r1, [sp, #60]	; 0x3c
    c25c:	ldr	r2, [fp, #8]
    c260:	ldr	r3, [r2]
    c264:	ldr	ip, [r2, #4]
    c268:	adds	r0, r3, r0
    c26c:	adc	r1, ip, r1
    c270:	str	r0, [r2]
    c274:	str	r1, [r2, #4]
    c278:	ldr	r0, [sp, #40]	; 0x28
    c27c:	cmp	r0, #0
    c280:	bne	c0cc <flatcc_json_parser_symbolic_uint64+0x74>
    c284:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c288:	str	r0, [fp, #-20]	; 0xffffffec
    c28c:	ldr	r0, [fp, #-20]	; 0xffffffec
    c290:	sub	sp, fp, #16
    c294:	pop	{r4, r5, r6, sl, fp, pc}

0000c298 <flatbuffers_uint64_write_to_pe>:
    c298:	push	{fp, lr}
    c29c:	mov	fp, sp
    c2a0:	sub	sp, sp, #16
    c2a4:	str	r0, [fp, #-4]
    c2a8:	str	r3, [sp, #4]
    c2ac:	str	r2, [sp]
    c2b0:	ldr	r0, [sp]
    c2b4:	ldr	r1, [sp, #4]
    c2b8:	bl	127e0 <flatbuffers_uint64_cast_to_pe>
    c2bc:	ldr	r2, [fp, #-4]
    c2c0:	str	r1, [r2, #4]
    c2c4:	str	r0, [r2]
    c2c8:	mov	sp, fp
    c2cc:	pop	{fp, pc}

0000c2d0 <flatcc_json_parser_symbolic_double>:
    c2d0:	push	{r4, r5, r6, sl, fp, lr}
    c2d4:	add	fp, sp, #16
    c2d8:	sub	sp, sp, #96	; 0x60
    c2dc:	ldr	ip, [fp, #8]
    c2e0:	vldr	d16, [pc, #536]	; c500 <flatcc_json_parser_symbolic_double+0x230>
    c2e4:	str	r0, [fp, #-24]	; 0xffffffe8
    c2e8:	str	r1, [fp, #-28]	; 0xffffffe4
    c2ec:	str	r2, [fp, #-32]	; 0xffffffe0
    c2f0:	str	r3, [fp, #-36]	; 0xffffffdc
    c2f4:	vstr	d16, [sp, #56]	; 0x38
    c2f8:	movw	r0, #0
    c2fc:	str	r0, [sp, #36]	; 0x24
    c300:	ldr	r0, [fp, #8]
    c304:	vstr	d16, [r0]
    c308:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c30c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c310:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c314:	str	ip, [sp, #32]
    c318:	bl	dcbc <flatcc_json_parser_constant_start>
    c31c:	str	r0, [fp, #-28]	; 0xffffffe4
    c320:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c324:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c328:	cmp	r0, r1
    c32c:	bne	c33c <flatcc_json_parser_symbolic_double+0x6c>
    c330:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c334:	str	r0, [fp, #-20]	; 0xffffffec
    c338:	b	c4f0 <flatcc_json_parser_symbolic_double+0x220>
    c33c:	b	c340 <flatcc_json_parser_symbolic_double+0x70>
    c340:	ldr	r0, [fp, #-36]	; 0xffffffdc
    c344:	str	r0, [fp, #-40]	; 0xffffffd8
    c348:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c34c:	ldr	r0, [r0]
    c350:	ldr	r1, [fp, #-24]	; 0xffffffe8
    c354:	ldr	r2, [fp, #-28]	; 0xffffffe4
    c358:	str	r2, [fp, #-44]	; 0xffffffd4
    c35c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c360:	str	r0, [sp, #28]
    c364:	mov	r0, r1
    c368:	mov	r1, r2
    c36c:	mov	r2, r3
    c370:	add	r3, sp, #44	; 0x2c
    c374:	add	ip, sp, #48	; 0x30
    c378:	str	ip, [sp]
    c37c:	add	ip, sp, #40	; 0x28
    c380:	str	ip, [sp, #4]
    c384:	ldr	ip, [sp, #28]
    c388:	blx	ip
    c38c:	str	r0, [fp, #-28]	; 0xffffffe4
    c390:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c394:	ldr	r1, [fp, #-32]	; 0xffffffe0
    c398:	cmp	r0, r1
    c39c:	bne	c3ac <flatcc_json_parser_symbolic_double+0xdc>
    c3a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c3a4:	str	r0, [fp, #-20]	; 0xffffffec
    c3a8:	b	c4f0 <flatcc_json_parser_symbolic_double+0x220>
    c3ac:	b	c3b0 <flatcc_json_parser_symbolic_double+0xe0>
    c3b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c3b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c3b8:	cmp	r0, r1
    c3bc:	movw	r0, #0
    c3c0:	str	r0, [sp, #24]
    c3c4:	bne	c3ec <flatcc_json_parser_symbolic_double+0x11c>
    c3c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    c3cc:	add	r1, r0, #4
    c3d0:	str	r1, [fp, #-40]	; 0xffffffd8
    c3d4:	ldr	r0, [r0, #4]
    c3d8:	movw	r1, #0
    c3dc:	cmp	r0, r1
    c3e0:	movw	r0, #0
    c3e4:	movne	r0, #1
    c3e8:	str	r0, [sp, #24]
    c3ec:	ldr	r0, [sp, #24]
    c3f0:	tst	r0, #1
    c3f4:	bne	c348 <flatcc_json_parser_symbolic_double+0x78>
    c3f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c3fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c400:	cmp	r0, r1
    c404:	bne	c424 <flatcc_json_parser_symbolic_double+0x154>
    c408:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c40c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c410:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c414:	movw	r3, #23
    c418:	bl	0 <flatcc_json_parser_set_error>
    c41c:	str	r0, [fp, #-20]	; 0xffffffec
    c420:	b	c4f0 <flatcc_json_parser_symbolic_double+0x220>
    c424:	ldr	r0, [sp, #36]	; 0x24
    c428:	add	r1, r0, #1
    c42c:	str	r1, [sp, #36]	; 0x24
    c430:	cmp	r0, #0
    c434:	beq	c464 <flatcc_json_parser_symbolic_double+0x194>
    c438:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c43c:	ldr	r0, [r0, #12]
    c440:	cmp	r0, #0
    c444:	beq	c464 <flatcc_json_parser_symbolic_double+0x194>
    c448:	ldr	r0, [fp, #-24]	; 0xffffffe8
    c44c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    c450:	ldr	r2, [fp, #-32]	; 0xffffffe0
    c454:	movw	r3, #14
    c458:	bl	0 <flatcc_json_parser_set_error>
    c45c:	str	r0, [fp, #-20]	; 0xffffffec
    c460:	b	c4f0 <flatcc_json_parser_symbolic_double+0x220>
    c464:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c468:	mov	r1, r0
    c46c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    c470:	ldr	r3, [fp, #-28]	; 0xffffffe4
    c474:	ldr	ip, [sp, #44]	; 0x2c
    c478:	ldr	lr, [sp, #48]	; 0x30
    c47c:	ldr	r4, [sp, #52]	; 0x34
    c480:	mov	r5, sp
    c484:	add	r6, sp, #56	; 0x38
    c488:	str	r6, [r5, #8]
    c48c:	str	r4, [r5, #4]
    c490:	str	lr, [r5]
    c494:	str	r0, [sp, #20]
    c498:	mov	r0, r2
    c49c:	str	r1, [sp, #16]
    c4a0:	mov	r1, r3
    c4a4:	ldr	r2, [sp, #20]
    c4a8:	mov	r3, ip
    c4ac:	bl	127fc <flatcc_json_parser_coerce_double>
    c4b0:	ldr	r1, [sp, #16]
    c4b4:	cmp	r1, r0
    c4b8:	bne	c4c8 <flatcc_json_parser_symbolic_double+0x1f8>
    c4bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c4c0:	str	r0, [fp, #-20]	; 0xffffffec
    c4c4:	b	c4f0 <flatcc_json_parser_symbolic_double+0x220>
    c4c8:	vldr	d16, [sp, #56]	; 0x38
    c4cc:	ldr	r0, [fp, #8]
    c4d0:	vldr	d17, [r0]
    c4d4:	vadd.f64	d16, d17, d16
    c4d8:	vstr	d16, [r0]
    c4dc:	ldr	r0, [sp, #40]	; 0x28
    c4e0:	cmp	r0, #0
    c4e4:	bne	c340 <flatcc_json_parser_symbolic_double+0x70>
    c4e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c4ec:	str	r0, [fp, #-20]	; 0xffffffec
    c4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    c4f4:	sub	sp, fp, #16
    c4f8:	pop	{r4, r5, r6, sl, fp, pc}
    c4fc:	nop	{0}
	...

0000c508 <flatbuffers_double_write_to_pe>:
    c508:	push	{fp, lr}
    c50c:	mov	fp, sp
    c510:	sub	sp, sp, #16
    c514:	str	r0, [fp, #-4]
    c518:	vstr	d0, [sp]
    c51c:	vldr	d0, [sp]
    c520:	bl	12884 <flatbuffers_double_cast_to_pe>
    c524:	ldr	r0, [fp, #-4]
    c528:	vstr	d0, [r0]
    c52c:	mov	sp, fp
    c530:	pop	{fp, pc}

0000c534 <flatcc_json_parser_object_end>:
    c534:	push	{fp, lr}
    c538:	mov	fp, sp
    c53c:	sub	sp, sp, #24
    c540:	str	r0, [fp, #-8]
    c544:	str	r1, [sp, #12]
    c548:	str	r2, [sp, #8]
    c54c:	str	r3, [sp, #4]
    c550:	ldr	r0, [fp, #-8]
    c554:	ldr	r1, [sp, #12]
    c558:	ldr	r2, [sp, #8]
    c55c:	bl	c698 <flatcc_json_parser_space>
    c560:	str	r0, [sp, #12]
    c564:	ldr	r0, [sp, #12]
    c568:	ldr	r1, [sp, #8]
    c56c:	cmp	r0, r1
    c570:	bne	c58c <flatcc_json_parser_object_end+0x58>
    c574:	ldr	r0, [sp, #4]
    c578:	movw	r1, #0
    c57c:	str	r1, [r0]
    c580:	ldr	r0, [sp, #12]
    c584:	str	r0, [fp, #-4]
    c588:	b	c68c <flatcc_json_parser_object_end+0x158>
    c58c:	ldr	r0, [sp, #12]
    c590:	ldrb	r0, [r0]
    c594:	cmp	r0, #44	; 0x2c
    c598:	beq	c5f0 <flatcc_json_parser_object_end+0xbc>
    c59c:	ldr	r0, [sp, #4]
    c5a0:	movw	r1, #0
    c5a4:	str	r1, [r0]
    c5a8:	ldr	r0, [sp, #12]
    c5ac:	ldrb	r0, [r0]
    c5b0:	cmp	r0, #125	; 0x7d
    c5b4:	beq	c5d4 <flatcc_json_parser_object_end+0xa0>
    c5b8:	ldr	r0, [fp, #-8]
    c5bc:	ldr	r1, [sp, #12]
    c5c0:	ldr	r2, [sp, #8]
    c5c4:	movw	r3, #10
    c5c8:	bl	0 <flatcc_json_parser_set_error>
    c5cc:	str	r0, [fp, #-4]
    c5d0:	b	c68c <flatcc_json_parser_object_end+0x158>
    c5d4:	ldr	r0, [fp, #-8]
    c5d8:	ldr	r1, [sp, #12]
    c5dc:	add	r1, r1, #1
    c5e0:	ldr	r2, [sp, #8]
    c5e4:	bl	c698 <flatcc_json_parser_space>
    c5e8:	str	r0, [fp, #-4]
    c5ec:	b	c68c <flatcc_json_parser_object_end+0x158>
    c5f0:	ldr	r0, [fp, #-8]
    c5f4:	ldr	r1, [sp, #12]
    c5f8:	add	r1, r1, #1
    c5fc:	ldr	r2, [sp, #8]
    c600:	bl	c698 <flatcc_json_parser_space>
    c604:	str	r0, [sp, #12]
    c608:	ldr	r0, [sp, #12]
    c60c:	ldr	r1, [sp, #8]
    c610:	cmp	r0, r1
    c614:	bne	c640 <flatcc_json_parser_object_end+0x10c>
    c618:	ldr	r0, [sp, #4]
    c61c:	movw	r1, #0
    c620:	str	r1, [r0]
    c624:	ldr	r0, [fp, #-8]
    c628:	ldr	r1, [sp, #12]
    c62c:	ldr	r2, [sp, #8]
    c630:	movw	r3, #10
    c634:	bl	0 <flatcc_json_parser_set_error>
    c638:	str	r0, [fp, #-4]
    c63c:	b	c68c <flatcc_json_parser_object_end+0x158>
    c640:	ldr	r0, [sp, #12]
    c644:	ldrb	r0, [r0]
    c648:	cmp	r0, #125	; 0x7d
    c64c:	bne	c678 <flatcc_json_parser_object_end+0x144>
    c650:	ldr	r0, [sp, #4]
    c654:	movw	r1, #0
    c658:	str	r1, [r0]
    c65c:	ldr	r0, [fp, #-8]
    c660:	ldr	r1, [sp, #12]
    c664:	add	r1, r1, #1
    c668:	ldr	r2, [sp, #8]
    c66c:	bl	c698 <flatcc_json_parser_space>
    c670:	str	r0, [fp, #-4]
    c674:	b	c68c <flatcc_json_parser_object_end+0x158>
    c678:	ldr	r0, [sp, #4]
    c67c:	movw	r1, #1
    c680:	str	r1, [r0]
    c684:	ldr	r0, [sp, #12]
    c688:	str	r0, [fp, #-4]
    c68c:	ldr	r0, [fp, #-4]
    c690:	mov	sp, fp
    c694:	pop	{fp, pc}

0000c698 <flatcc_json_parser_space>:
    c698:	push	{fp, lr}
    c69c:	mov	fp, sp
    c6a0:	sub	sp, sp, #16
    c6a4:	str	r0, [sp, #8]
    c6a8:	str	r1, [sp, #4]
    c6ac:	str	r2, [sp]
    c6b0:	ldr	r0, [sp]
    c6b4:	ldr	r1, [sp, #4]
    c6b8:	sub	r0, r0, r1
    c6bc:	cmp	r0, #1
    c6c0:	ble	c714 <flatcc_json_parser_space+0x7c>
    c6c4:	ldr	r0, [sp, #4]
    c6c8:	ldrb	r0, [r0]
    c6cc:	cmp	r0, #32
    c6d0:	ble	c6e0 <flatcc_json_parser_space+0x48>
    c6d4:	ldr	r0, [sp, #4]
    c6d8:	str	r0, [fp, #-4]
    c6dc:	b	c728 <flatcc_json_parser_space+0x90>
    c6e0:	ldr	r0, [sp, #4]
    c6e4:	ldrb	r0, [r0]
    c6e8:	cmp	r0, #32
    c6ec:	bne	c710 <flatcc_json_parser_space+0x78>
    c6f0:	ldr	r0, [sp, #4]
    c6f4:	ldrb	r0, [r0, #1]
    c6f8:	cmp	r0, #32
    c6fc:	ble	c710 <flatcc_json_parser_space+0x78>
    c700:	ldr	r0, [sp, #4]
    c704:	add	r0, r0, #1
    c708:	str	r0, [fp, #-4]
    c70c:	b	c728 <flatcc_json_parser_space+0x90>
    c710:	b	c714 <flatcc_json_parser_space+0x7c>
    c714:	ldr	r0, [sp, #8]
    c718:	ldr	r1, [sp, #4]
    c71c:	ldr	r2, [sp]
    c720:	bl	0 <flatcc_json_parser_space_ext>
    c724:	str	r0, [fp, #-4]
    c728:	ldr	r0, [fp, #-4]
    c72c:	mov	sp, fp
    c730:	pop	{fp, pc}

0000c734 <flatcc_json_parser_symbol_part_ext>:
    c734:	sub	sp, sp, #24
    c738:	str	r0, [sp, #20]
    c73c:	str	r1, [sp, #16]
    c740:	mov	r0, #0
    c744:	str	r0, [sp, #12]
    c748:	str	r0, [sp, #8]
    c74c:	ldr	r0, [sp, #16]
    c750:	ldr	r1, [sp, #20]
    c754:	sub	r0, r0, r1
    c758:	str	r0, [sp, #4]
    c75c:	ldr	r0, [sp, #4]
    c760:	cmp	r0, #8
    c764:	bls	c770 <flatcc_json_parser_symbol_part_ext+0x3c>
    c768:	movw	r0, #8
    c76c:	str	r0, [sp, #4]
    c770:	ldr	r0, [sp, #4]
    c774:	cmp	r0, #8
    c778:	str	r0, [sp]
    c77c:	bhi	c898 <flatcc_json_parser_symbol_part_ext+0x164>
    c780:	add	r0, pc, #8
    c784:	ldr	r1, [sp]
    c788:	ldr	r0, [r0, r1, lsl #2]
    c78c:	mov	pc, r0
    c790:	.word	0x0000c894
    c794:	.word	0x0000c878
    c798:	.word	0x0000c85c
    c79c:	.word	0x0000c840
    c7a0:	.word	0x0000c824
    c7a4:	.word	0x0000c808
    c7a8:	.word	0x0000c7ec
    c7ac:	.word	0x0000c7d0
    c7b0:	.word	0x0000c7b4
    c7b4:	ldr	r0, [sp, #20]
    c7b8:	ldrb	r0, [r0, #7]
    c7bc:	ldr	r1, [sp, #8]
    c7c0:	ldr	r2, [sp, #12]
    c7c4:	orr	r0, r1, r0
    c7c8:	str	r2, [sp, #12]
    c7cc:	str	r0, [sp, #8]
    c7d0:	ldr	r0, [sp, #20]
    c7d4:	ldrb	r0, [r0, #6]
    c7d8:	ldr	r1, [sp, #8]
    c7dc:	ldr	r2, [sp, #12]
    c7e0:	orr	r0, r1, r0, lsl #8
    c7e4:	str	r2, [sp, #12]
    c7e8:	str	r0, [sp, #8]
    c7ec:	ldr	r0, [sp, #20]
    c7f0:	ldrb	r0, [r0, #5]
    c7f4:	ldr	r1, [sp, #8]
    c7f8:	ldr	r2, [sp, #12]
    c7fc:	orr	r0, r1, r0, lsl #16
    c800:	str	r2, [sp, #12]
    c804:	str	r0, [sp, #8]
    c808:	ldr	r0, [sp, #20]
    c80c:	ldrb	r0, [r0, #4]
    c810:	ldr	r1, [sp, #8]
    c814:	ldr	r2, [sp, #12]
    c818:	orr	r0, r1, r0, lsl #24
    c81c:	str	r2, [sp, #12]
    c820:	str	r0, [sp, #8]
    c824:	ldr	r0, [sp, #20]
    c828:	ldrb	r0, [r0, #3]
    c82c:	ldr	r1, [sp, #8]
    c830:	ldr	r2, [sp, #12]
    c834:	orr	r0, r2, r0
    c838:	str	r1, [sp, #8]
    c83c:	str	r0, [sp, #12]
    c840:	ldr	r0, [sp, #20]
    c844:	ldrb	r0, [r0, #2]
    c848:	ldr	r1, [sp, #8]
    c84c:	ldr	r2, [sp, #12]
    c850:	orr	r0, r2, r0, lsl #8
    c854:	str	r1, [sp, #8]
    c858:	str	r0, [sp, #12]
    c85c:	ldr	r0, [sp, #20]
    c860:	ldrb	r0, [r0, #1]
    c864:	ldr	r1, [sp, #8]
    c868:	ldr	r2, [sp, #12]
    c86c:	orr	r0, r2, r0, lsl #16
    c870:	str	r1, [sp, #8]
    c874:	str	r0, [sp, #12]
    c878:	ldr	r0, [sp, #20]
    c87c:	ldrb	r0, [r0]
    c880:	ldr	r1, [sp, #8]
    c884:	ldr	r2, [sp, #12]
    c888:	orr	r0, r2, r0, lsl #24
    c88c:	str	r1, [sp, #8]
    c890:	str	r0, [sp, #12]
    c894:	b	c898 <flatcc_json_parser_symbol_part_ext+0x164>
    c898:	ldr	r0, [sp, #8]
    c89c:	ldr	r1, [sp, #12]
    c8a0:	add	sp, sp, #24
    c8a4:	bx	lr

0000c8a8 <flatcc_json_parser_match_scope>:
    c8a8:	sub	sp, sp, #24
    c8ac:	str	r0, [sp, #16]
    c8b0:	str	r1, [sp, #12]
    c8b4:	str	r2, [sp, #8]
    c8b8:	str	r3, [sp, #4]
    c8bc:	ldr	r0, [sp, #12]
    c8c0:	str	r0, [sp]
    c8c4:	ldr	r0, [sp, #8]
    c8c8:	ldr	r1, [sp, #12]
    c8cc:	sub	r0, r0, r1
    c8d0:	ldr	r1, [sp, #4]
    c8d4:	cmp	r0, r1
    c8d8:	bgt	c8e8 <flatcc_json_parser_match_scope+0x40>
    c8dc:	ldr	r0, [sp]
    c8e0:	str	r0, [sp, #20]
    c8e4:	b	c920 <flatcc_json_parser_match_scope+0x78>
    c8e8:	ldr	r0, [sp, #12]
    c8ec:	ldr	r1, [sp, #4]
    c8f0:	add	r0, r0, r1
    c8f4:	ldrb	r0, [r0]
    c8f8:	cmp	r0, #46	; 0x2e
    c8fc:	beq	c90c <flatcc_json_parser_match_scope+0x64>
    c900:	ldr	r0, [sp]
    c904:	str	r0, [sp, #20]
    c908:	b	c920 <flatcc_json_parser_match_scope+0x78>
    c90c:	ldr	r0, [sp, #12]
    c910:	ldr	r1, [sp, #4]
    c914:	add	r0, r0, r1
    c918:	add	r0, r0, #1
    c91c:	str	r0, [sp, #20]
    c920:	ldr	r0, [sp, #20]
    c924:	add	sp, sp, #24
    c928:	bx	lr

0000c92c <MyGame_Example_Foo_parse_json_enum>:
    c92c:	push	{fp, lr}
    c930:	mov	fp, sp
    c934:	sub	sp, sp, #64	; 0x40
    c938:	ldr	ip, [fp, #12]
    c93c:	ldr	lr, [fp, #8]
    c940:	str	r0, [fp, #-8]
    c944:	str	r1, [fp, #-12]
    c948:	str	r2, [fp, #-16]
    c94c:	str	r3, [fp, #-20]	; 0xffffffec
    c950:	ldr	r0, [fp, #-12]
    c954:	str	r0, [fp, #-24]	; 0xffffffe8
    c958:	ldr	r0, [fp, #-12]
    c95c:	ldr	r1, [fp, #-16]
    c960:	str	lr, [sp, #20]
    c964:	str	ip, [sp, #16]
    c968:	bl	71e0 <flatcc_json_parser_symbol_part>
    c96c:	str	r1, [sp, #28]
    c970:	str	r0, [sp, #24]
    c974:	ldr	r0, [sp, #24]
    c978:	ldr	r1, [sp, #28]
    c97c:	movw	r2, #20577	; 0x5061
    c980:	movt	r2, #18798	; 0x496e
    c984:	eor	r1, r1, r2
    c988:	movw	r2, #28276	; 0x6e74
    c98c:	movt	r2, #29285	; 0x7265
    c990:	eor	r0, r0, r2
    c994:	orr	r0, r0, r1
    c998:	cmp	r0, #0
    c99c:	bne	cabc <MyGame_Example_Foo_parse_json_enum+0x190>
    c9a0:	b	c9a4 <MyGame_Example_Foo_parse_json_enum+0x78>
    c9a4:	ldr	r0, [fp, #-12]
    c9a8:	add	r0, r0, #8
    c9ac:	str	r0, [fp, #-12]
    c9b0:	ldr	r0, [fp, #-12]
    c9b4:	ldr	r1, [fp, #-16]
    c9b8:	bl	71e0 <flatcc_json_parser_symbol_part>
    c9bc:	str	r1, [sp, #28]
    c9c0:	str	r0, [sp, #24]
    c9c4:	ldr	r0, [sp, #24]
    c9c8:	ldr	r1, [sp, #28]
    c9cc:	movw	lr, #28005	; 0x6d65
    c9d0:	movt	lr, #20065	; 0x4e61
    c9d4:	eor	r1, r1, lr
    c9d8:	movw	lr, #24931	; 0x6163
    c9dc:	movt	lr, #29552	; 0x7370
    c9e0:	eor	r0, r0, lr
    c9e4:	orr	r0, r0, r1
    c9e8:	cmp	r0, #0
    c9ec:	bne	caac <MyGame_Example_Foo_parse_json_enum+0x180>
    c9f0:	b	c9f4 <MyGame_Example_Foo_parse_json_enum+0xc8>
    c9f4:	ldr	r0, [fp, #-12]
    c9f8:	add	r0, r0, #8
    c9fc:	str	r0, [fp, #-12]
    ca00:	ldr	r0, [fp, #-12]
    ca04:	ldr	r1, [fp, #-16]
    ca08:	bl	71e0 <flatcc_json_parser_symbol_part>
    ca0c:	str	r1, [sp, #28]
    ca10:	str	r0, [sp, #24]
    ca14:	ldr	r0, [sp, #28]
    ca18:	and	r0, r0, #-16777216	; 0xff000000
    ca1c:	teq	r0, #1694498816	; 0x65000000
    ca20:	bne	ca9c <MyGame_Example_Foo_parse_json_enum+0x170>
    ca24:	b	ca28 <MyGame_Example_Foo_parse_json_enum+0xfc>
    ca28:	ldr	r0, [fp, #-8]
    ca2c:	ldr	r1, [fp, #-12]
    ca30:	str	r1, [fp, #-28]	; 0xffffffe4
    ca34:	ldr	r2, [fp, #-16]
    ca38:	ldr	r3, [fp, #12]
    ca3c:	movw	ip, #1
    ca40:	str	r3, [sp, #12]
    ca44:	mov	r3, ip
    ca48:	ldr	ip, [sp, #12]
    ca4c:	str	ip, [sp]
    ca50:	bl	0 <flatcc_json_parser_match_constant>
    ca54:	str	r0, [fp, #-12]
    ca58:	ldr	r0, [fp, #-12]
    ca5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ca60:	cmp	r0, r1
    ca64:	beq	ca8c <MyGame_Example_Foo_parse_json_enum+0x160>
    ca68:	ldr	r0, [fp, #8]
    ca6c:	mov	r1, #0
    ca70:	str	r1, [r0, #4]
    ca74:	mov	r1, #1
    ca78:	str	r1, [r0]
    ca7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ca80:	movw	r1, #0
    ca84:	str	r1, [r0]
    ca88:	b	ca98 <MyGame_Example_Foo_parse_json_enum+0x16c>
    ca8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ca90:	str	r0, [fp, #-4]
    ca94:	b	cb5c <MyGame_Example_Foo_parse_json_enum+0x230>
    ca98:	b	caa8 <MyGame_Example_Foo_parse_json_enum+0x17c>
    ca9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    caa0:	str	r0, [fp, #-4]
    caa4:	b	cb5c <MyGame_Example_Foo_parse_json_enum+0x230>
    caa8:	b	cab8 <MyGame_Example_Foo_parse_json_enum+0x18c>
    caac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cab0:	str	r0, [fp, #-4]
    cab4:	b	cb5c <MyGame_Example_Foo_parse_json_enum+0x230>
    cab8:	b	cb54 <MyGame_Example_Foo_parse_json_enum+0x228>
    cabc:	ldr	r0, [sp, #28]
    cac0:	movw	r1, #20037	; 0x4e45
    cac4:	movt	r1, #20047	; 0x4e4f
    cac8:	teq	r0, r1
    cacc:	bne	cb44 <MyGame_Example_Foo_parse_json_enum+0x218>
    cad0:	b	cad4 <MyGame_Example_Foo_parse_json_enum+0x1a8>
    cad4:	ldr	r0, [fp, #-8]
    cad8:	ldr	r1, [fp, #-12]
    cadc:	str	r1, [fp, #-28]	; 0xffffffe4
    cae0:	ldr	r2, [fp, #-16]
    cae4:	ldr	r3, [fp, #12]
    cae8:	movw	ip, #4
    caec:	str	r3, [sp, #8]
    caf0:	mov	r3, ip
    caf4:	ldr	ip, [sp, #8]
    caf8:	str	ip, [sp]
    cafc:	bl	0 <flatcc_json_parser_match_constant>
    cb00:	str	r0, [fp, #-12]
    cb04:	ldr	r0, [fp, #-12]
    cb08:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cb0c:	cmp	r0, r1
    cb10:	beq	cb34 <MyGame_Example_Foo_parse_json_enum+0x208>
    cb14:	ldr	r0, [fp, #8]
    cb18:	mov	r1, #0
    cb1c:	str	r1, [r0, #4]
    cb20:	str	r1, [r0]
    cb24:	ldr	r0, [fp, #-20]	; 0xffffffec
    cb28:	movw	r1, #0
    cb2c:	str	r1, [r0]
    cb30:	b	cb40 <MyGame_Example_Foo_parse_json_enum+0x214>
    cb34:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb38:	str	r0, [fp, #-4]
    cb3c:	b	cb5c <MyGame_Example_Foo_parse_json_enum+0x230>
    cb40:	b	cb50 <MyGame_Example_Foo_parse_json_enum+0x224>
    cb44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cb48:	str	r0, [fp, #-4]
    cb4c:	b	cb5c <MyGame_Example_Foo_parse_json_enum+0x230>
    cb50:	b	cb54 <MyGame_Example_Foo_parse_json_enum+0x228>
    cb54:	ldr	r0, [fp, #-12]
    cb58:	str	r0, [fp, #-4]
    cb5c:	ldr	r0, [fp, #-4]
    cb60:	mov	sp, fp
    cb64:	pop	{fp, pc}

0000cb68 <MyGame_Example_hex_enum_parse_json_enum>:
    cb68:	push	{fp, lr}
    cb6c:	mov	fp, sp
    cb70:	sub	sp, sp, #64	; 0x40
    cb74:	ldr	ip, [fp, #12]
    cb78:	ldr	lr, [fp, #8]
    cb7c:	str	r0, [fp, #-8]
    cb80:	str	r1, [fp, #-12]
    cb84:	str	r2, [fp, #-16]
    cb88:	str	r3, [fp, #-20]	; 0xffffffec
    cb8c:	ldr	r0, [fp, #-12]
    cb90:	str	r0, [fp, #-24]	; 0xffffffe8
    cb94:	ldr	r0, [fp, #-12]
    cb98:	ldr	r1, [fp, #-16]
    cb9c:	str	lr, [sp, #20]
    cba0:	str	ip, [sp, #16]
    cba4:	bl	71e0 <flatcc_json_parser_symbol_part>
    cba8:	str	r1, [sp, #28]
    cbac:	str	r0, [sp, #24]
    cbb0:	ldr	r0, [sp, #28]
    cbb4:	movw	r1, #30769	; 0x7831
    cbb8:	movt	r1, #26725	; 0x6865
    cbbc:	cmp	r0, r1
    cbc0:	bhi	cc64 <MyGame_Example_hex_enum_parse_json_enum+0xfc>
    cbc4:	b	cbc8 <MyGame_Example_hex_enum_parse_json_enum+0x60>
    cbc8:	ldr	r0, [sp, #28]
    cbcc:	movw	r1, #30769	; 0x7831
    cbd0:	movt	r1, #26725	; 0x6865
    cbd4:	teq	r0, r1
    cbd8:	bne	cc54 <MyGame_Example_hex_enum_parse_json_enum+0xec>
    cbdc:	b	cbe0 <MyGame_Example_hex_enum_parse_json_enum+0x78>
    cbe0:	ldr	r0, [fp, #-8]
    cbe4:	ldr	r1, [fp, #-12]
    cbe8:	str	r1, [fp, #-28]	; 0xffffffe4
    cbec:	ldr	r2, [fp, #-16]
    cbf0:	ldr	r3, [fp, #12]
    cbf4:	movw	ip, #4
    cbf8:	str	r3, [sp, #12]
    cbfc:	mov	r3, ip
    cc00:	ldr	ip, [sp, #12]
    cc04:	str	ip, [sp]
    cc08:	bl	0 <flatcc_json_parser_match_constant>
    cc0c:	str	r0, [fp, #-12]
    cc10:	ldr	r0, [fp, #-12]
    cc14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cc18:	cmp	r0, r1
    cc1c:	beq	cc44 <MyGame_Example_hex_enum_parse_json_enum+0xdc>
    cc20:	ldr	r0, [fp, #8]
    cc24:	mov	r1, #0
    cc28:	str	r1, [r0, #4]
    cc2c:	mov	r1, #3
    cc30:	str	r1, [r0]
    cc34:	ldr	r0, [fp, #-20]	; 0xffffffec
    cc38:	movw	r1, #0
    cc3c:	str	r1, [r0]
    cc40:	b	cc50 <MyGame_Example_hex_enum_parse_json_enum+0xe8>
    cc44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc48:	str	r0, [fp, #-4]
    cc4c:	b	cdb4 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cc50:	b	cc60 <MyGame_Example_hex_enum_parse_json_enum+0xf8>
    cc54:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cc58:	str	r0, [fp, #-4]
    cc5c:	b	cdb4 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cc60:	b	cdac <MyGame_Example_hex_enum_parse_json_enum+0x244>
    cc64:	ldrh	r0, [sp, #26]
    cc68:	ldr	r1, [sp, #28]
    cc6c:	movw	r2, #26725	; 0x6865
    cc70:	eor	r2, r2, r1, lsr #16
    cc74:	orr	r0, r0, r1, lsl #16
    cc78:	movw	r1, #25959	; 0x6567
    cc7c:	movt	r1, #30830	; 0x786e
    cc80:	eor	r0, r0, r1
    cc84:	orr	r0, r0, r2
    cc88:	cmp	r0, #0
    cc8c:	bne	cd08 <MyGame_Example_hex_enum_parse_json_enum+0x1a0>
    cc90:	b	cc94 <MyGame_Example_hex_enum_parse_json_enum+0x12c>
    cc94:	ldr	r0, [fp, #-8]
    cc98:	ldr	r1, [fp, #-12]
    cc9c:	str	r1, [fp, #-28]	; 0xffffffe4
    cca0:	ldr	r2, [fp, #-16]
    cca4:	ldr	r3, [fp, #12]
    cca8:	movw	ip, #6
    ccac:	str	r3, [sp, #8]
    ccb0:	mov	r3, ip
    ccb4:	ldr	ip, [sp, #8]
    ccb8:	str	ip, [sp]
    ccbc:	bl	0 <flatcc_json_parser_match_constant>
    ccc0:	str	r0, [fp, #-12]
    ccc4:	ldr	r0, [fp, #-12]
    ccc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cccc:	cmp	r0, r1
    ccd0:	beq	ccf8 <MyGame_Example_hex_enum_parse_json_enum+0x190>
    ccd4:	ldr	r0, [fp, #8]
    ccd8:	mvn	r1, #0
    ccdc:	str	r1, [r0, #4]
    cce0:	mvn	r1, #1
    cce4:	str	r1, [r0]
    cce8:	ldr	r0, [fp, #-20]	; 0xffffffec
    ccec:	movw	r1, #1
    ccf0:	str	r1, [r0]
    ccf4:	b	cd04 <MyGame_Example_hex_enum_parse_json_enum+0x19c>
    ccf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ccfc:	str	r0, [fp, #-4]
    cd00:	b	cdb4 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cd04:	b	cda8 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    cd08:	ldr	r0, [sp, #28]
    cd0c:	movw	r1, #30770	; 0x7832
    cd10:	movt	r1, #26725	; 0x6865
    cd14:	teq	r0, r1
    cd18:	bne	cd98 <MyGame_Example_hex_enum_parse_json_enum+0x230>
    cd1c:	b	cd20 <MyGame_Example_hex_enum_parse_json_enum+0x1b8>
    cd20:	ldr	r0, [fp, #-8]
    cd24:	ldr	r1, [fp, #-12]
    cd28:	str	r1, [fp, #-28]	; 0xffffffe4
    cd2c:	ldr	r2, [fp, #-16]
    cd30:	ldr	r3, [fp, #12]
    cd34:	movw	ip, #4
    cd38:	str	r3, [sp, #4]
    cd3c:	mov	r3, ip
    cd40:	ldr	ip, [sp, #4]
    cd44:	str	ip, [sp]
    cd48:	bl	0 <flatcc_json_parser_match_constant>
    cd4c:	str	r0, [fp, #-12]
    cd50:	ldr	r0, [fp, #-12]
    cd54:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cd58:	cmp	r0, r1
    cd5c:	beq	cd88 <MyGame_Example_hex_enum_parse_json_enum+0x220>
    cd60:	ldr	r0, [fp, #8]
    cd64:	mov	r1, #0
    cd68:	str	r1, [r0, #4]
    cd6c:	movw	r1, #48815	; 0xbeaf
    cd70:	movt	r1, #32431	; 0x7eaf
    cd74:	str	r1, [r0]
    cd78:	ldr	r0, [fp, #-20]	; 0xffffffec
    cd7c:	movw	r1, #0
    cd80:	str	r1, [r0]
    cd84:	b	cd94 <MyGame_Example_hex_enum_parse_json_enum+0x22c>
    cd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd8c:	str	r0, [fp, #-4]
    cd90:	b	cdb4 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cd94:	b	cda4 <MyGame_Example_hex_enum_parse_json_enum+0x23c>
    cd98:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cd9c:	str	r0, [fp, #-4]
    cda0:	b	cdb4 <MyGame_Example_hex_enum_parse_json_enum+0x24c>
    cda4:	b	cda8 <MyGame_Example_hex_enum_parse_json_enum+0x240>
    cda8:	b	cdac <MyGame_Example_hex_enum_parse_json_enum+0x244>
    cdac:	ldr	r0, [fp, #-12]
    cdb0:	str	r0, [fp, #-4]
    cdb4:	ldr	r0, [fp, #-4]
    cdb8:	mov	sp, fp
    cdbc:	pop	{fp, pc}

0000cdc0 <MyGame_Example_int_enum_parse_json_enum>:
    cdc0:	push	{fp, lr}
    cdc4:	mov	fp, sp
    cdc8:	sub	sp, sp, #80	; 0x50
    cdcc:	ldr	ip, [fp, #12]
    cdd0:	ldr	lr, [fp, #8]
    cdd4:	str	r0, [fp, #-8]
    cdd8:	str	r1, [fp, #-12]
    cddc:	str	r2, [fp, #-16]
    cde0:	str	r3, [fp, #-20]	; 0xffffffec
    cde4:	ldr	r0, [fp, #-12]
    cde8:	str	r0, [fp, #-24]	; 0xffffffe8
    cdec:	ldr	r0, [fp, #-12]
    cdf0:	ldr	r1, [fp, #-16]
    cdf4:	str	lr, [sp, #36]	; 0x24
    cdf8:	str	ip, [sp, #32]
    cdfc:	bl	71e0 <flatcc_json_parser_symbol_part>
    ce00:	str	r1, [sp, #44]	; 0x2c
    ce04:	str	r0, [sp, #40]	; 0x28
    ce08:	ldr	r0, [sp, #44]	; 0x2c
    ce0c:	movw	r1, #29745	; 0x7431
    ce10:	movt	r1, #26990	; 0x696e
    ce14:	cmp	r0, r1
    ce18:	bhi	cebc <MyGame_Example_int_enum_parse_json_enum+0xfc>
    ce1c:	b	ce20 <MyGame_Example_int_enum_parse_json_enum+0x60>
    ce20:	ldr	r0, [sp, #44]	; 0x2c
    ce24:	movw	r1, #29745	; 0x7431
    ce28:	movt	r1, #26990	; 0x696e
    ce2c:	teq	r0, r1
    ce30:	bne	ceac <MyGame_Example_int_enum_parse_json_enum+0xec>
    ce34:	b	ce38 <MyGame_Example_int_enum_parse_json_enum+0x78>
    ce38:	ldr	r0, [fp, #-8]
    ce3c:	ldr	r1, [fp, #-12]
    ce40:	str	r1, [fp, #-28]	; 0xffffffe4
    ce44:	ldr	r2, [fp, #-16]
    ce48:	ldr	r3, [fp, #12]
    ce4c:	movw	ip, #4
    ce50:	str	r3, [sp, #28]
    ce54:	mov	r3, ip
    ce58:	ldr	ip, [sp, #28]
    ce5c:	str	ip, [sp]
    ce60:	bl	0 <flatcc_json_parser_match_constant>
    ce64:	str	r0, [fp, #-12]
    ce68:	ldr	r0, [fp, #-12]
    ce6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    ce70:	cmp	r0, r1
    ce74:	beq	ce9c <MyGame_Example_int_enum_parse_json_enum+0xdc>
    ce78:	ldr	r0, [fp, #8]
    ce7c:	mov	r1, #0
    ce80:	str	r1, [r0, #4]
    ce84:	mov	r1, #2
    ce88:	str	r1, [r0]
    ce8c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ce90:	movw	r1, #0
    ce94:	str	r1, [r0]
    ce98:	b	cea8 <MyGame_Example_int_enum_parse_json_enum+0xe8>
    ce9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cea0:	str	r0, [fp, #-4]
    cea4:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    cea8:	b	ceb8 <MyGame_Example_int_enum_parse_json_enum+0xf8>
    ceac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ceb0:	str	r0, [fp, #-4]
    ceb4:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    ceb8:	b	d0ec <MyGame_Example_int_enum_parse_json_enum+0x32c>
    cebc:	ldr	r0, [sp, #40]	; 0x28
    cec0:	ldr	r1, [sp, #44]	; 0x2c
    cec4:	movw	r2, #65535	; 0xffff
    cec8:	movt	r2, #25958	; 0x6566
    cecc:	subs	r0, r2, r0
    ced0:	movw	r2, #29806	; 0x746e
    ced4:	movt	r2, #26990	; 0x696e
    ced8:	sbcs	r1, r2, r1
    cedc:	str	r0, [sp, #24]
    cee0:	str	r1, [sp, #20]
    cee4:	bcc	cf88 <MyGame_Example_int_enum_parse_json_enum+0x1c8>
    cee8:	b	ceec <MyGame_Example_int_enum_parse_json_enum+0x12c>
    ceec:	ldr	r0, [sp, #44]	; 0x2c
    cef0:	movw	r1, #29746	; 0x7432
    cef4:	movt	r1, #26990	; 0x696e
    cef8:	teq	r0, r1
    cefc:	bne	cf78 <MyGame_Example_int_enum_parse_json_enum+0x1b8>
    cf00:	b	cf04 <MyGame_Example_int_enum_parse_json_enum+0x144>
    cf04:	ldr	r0, [fp, #-8]
    cf08:	ldr	r1, [fp, #-12]
    cf0c:	str	r1, [fp, #-28]	; 0xffffffe4
    cf10:	ldr	r2, [fp, #-16]
    cf14:	ldr	r3, [fp, #12]
    cf18:	movw	ip, #4
    cf1c:	str	r3, [sp, #16]
    cf20:	mov	r3, ip
    cf24:	ldr	ip, [sp, #16]
    cf28:	str	ip, [sp]
    cf2c:	bl	0 <flatcc_json_parser_match_constant>
    cf30:	str	r0, [fp, #-12]
    cf34:	ldr	r0, [fp, #-12]
    cf38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cf3c:	cmp	r0, r1
    cf40:	beq	cf68 <MyGame_Example_int_enum_parse_json_enum+0x1a8>
    cf44:	ldr	r0, [fp, #8]
    cf48:	mov	r1, #0
    cf4c:	str	r1, [r0, #4]
    cf50:	mov	r1, #42	; 0x2a
    cf54:	str	r1, [r0]
    cf58:	ldr	r0, [fp, #-20]	; 0xffffffec
    cf5c:	movw	r1, #0
    cf60:	str	r1, [r0]
    cf64:	b	cf74 <MyGame_Example_int_enum_parse_json_enum+0x1b4>
    cf68:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf6c:	str	r0, [fp, #-4]
    cf70:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    cf74:	b	cf84 <MyGame_Example_int_enum_parse_json_enum+0x1c4>
    cf78:	ldr	r0, [fp, #-24]	; 0xffffffe8
    cf7c:	str	r0, [fp, #-4]
    cf80:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    cf84:	b	d0e8 <MyGame_Example_int_enum_parse_json_enum+0x328>
    cf88:	ldr	r0, [sp, #40]	; 0x28
    cf8c:	ldr	r1, [sp, #44]	; 0x2c
    cf90:	movw	r2, #28276	; 0x6e74
    cf94:	movt	r2, #105	; 0x69
    cf98:	eor	r2, r2, r1, lsr #8
    cf9c:	lsr	r0, r0, #8
    cfa0:	orr	r0, r0, r1, lsl #24
    cfa4:	movw	r1, #26418	; 0x6732
    cfa8:	movt	r1, #28261	; 0x6e65
    cfac:	eor	r0, r0, r1
    cfb0:	orr	r0, r0, r2
    cfb4:	cmp	r0, #0
    cfb8:	bne	d030 <MyGame_Example_int_enum_parse_json_enum+0x270>
    cfbc:	b	cfc0 <MyGame_Example_int_enum_parse_json_enum+0x200>
    cfc0:	ldr	r0, [fp, #-8]
    cfc4:	ldr	r1, [fp, #-12]
    cfc8:	str	r1, [fp, #-28]	; 0xffffffe4
    cfcc:	ldr	r2, [fp, #-16]
    cfd0:	ldr	r3, [fp, #12]
    cfd4:	movw	ip, #7
    cfd8:	str	r3, [sp, #12]
    cfdc:	mov	r3, ip
    cfe0:	ldr	ip, [sp, #12]
    cfe4:	str	ip, [sp]
    cfe8:	bl	0 <flatcc_json_parser_match_constant>
    cfec:	str	r0, [fp, #-12]
    cff0:	ldr	r0, [fp, #-12]
    cff4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    cff8:	cmp	r0, r1
    cffc:	beq	d020 <MyGame_Example_int_enum_parse_json_enum+0x260>
    d000:	ldr	r0, [fp, #8]
    d004:	mvn	r1, #0
    d008:	str	r1, [r0, #4]
    d00c:	str	r1, [r0]
    d010:	ldr	r0, [fp, #-20]	; 0xffffffec
    d014:	movw	r1, #1
    d018:	str	r1, [r0]
    d01c:	b	d02c <MyGame_Example_int_enum_parse_json_enum+0x26c>
    d020:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d024:	str	r0, [fp, #-4]
    d028:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    d02c:	b	d0e4 <MyGame_Example_int_enum_parse_json_enum+0x324>
    d030:	ldrh	r0, [sp, #42]	; 0x2a
    d034:	ldr	r1, [sp, #44]	; 0x2c
    d038:	movw	r2, #26990	; 0x696e
    d03c:	eor	r2, r2, r1, lsr #16
    d040:	orr	r0, r0, r1, lsl #16
    d044:	movw	r1, #25959	; 0x6567
    d048:	movt	r1, #29806	; 0x746e
    d04c:	eor	r0, r0, r1
    d050:	orr	r0, r0, r2
    d054:	cmp	r0, #0
    d058:	bne	d0d4 <MyGame_Example_int_enum_parse_json_enum+0x314>
    d05c:	b	d060 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    d060:	ldr	r0, [fp, #-8]
    d064:	ldr	r1, [fp, #-12]
    d068:	str	r1, [fp, #-28]	; 0xffffffe4
    d06c:	ldr	r2, [fp, #-16]
    d070:	ldr	r3, [fp, #12]
    d074:	movw	ip, #6
    d078:	str	r3, [sp, #8]
    d07c:	mov	r3, ip
    d080:	ldr	ip, [sp, #8]
    d084:	str	ip, [sp]
    d088:	bl	0 <flatcc_json_parser_match_constant>
    d08c:	str	r0, [fp, #-12]
    d090:	ldr	r0, [fp, #-12]
    d094:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d098:	cmp	r0, r1
    d09c:	beq	d0c4 <MyGame_Example_int_enum_parse_json_enum+0x304>
    d0a0:	ldr	r0, [fp, #8]
    d0a4:	mvn	r1, #0
    d0a8:	str	r1, [r0, #4]
    d0ac:	mvn	r1, #1
    d0b0:	str	r1, [r0]
    d0b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d0b8:	movw	r1, #1
    d0bc:	str	r1, [r0]
    d0c0:	b	d0d0 <MyGame_Example_int_enum_parse_json_enum+0x310>
    d0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d0c8:	str	r0, [fp, #-4]
    d0cc:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    d0d0:	b	d0e0 <MyGame_Example_int_enum_parse_json_enum+0x320>
    d0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d0d8:	str	r0, [fp, #-4]
    d0dc:	b	d0f4 <MyGame_Example_int_enum_parse_json_enum+0x334>
    d0e0:	b	d0e4 <MyGame_Example_int_enum_parse_json_enum+0x324>
    d0e4:	b	d0e8 <MyGame_Example_int_enum_parse_json_enum+0x328>
    d0e8:	b	d0ec <MyGame_Example_int_enum_parse_json_enum+0x32c>
    d0ec:	ldr	r0, [fp, #-12]
    d0f0:	str	r0, [fp, #-4]
    d0f4:	ldr	r0, [fp, #-4]
    d0f8:	mov	sp, fp
    d0fc:	pop	{fp, pc}

0000d100 <MyGame_Example_neg_enum_parse_json_enum>:
    d100:	push	{fp, lr}
    d104:	mov	fp, sp
    d108:	sub	sp, sp, #64	; 0x40
    d10c:	ldr	ip, [fp, #12]
    d110:	ldr	lr, [fp, #8]
    d114:	str	r0, [fp, #-8]
    d118:	str	r1, [fp, #-12]
    d11c:	str	r2, [fp, #-16]
    d120:	str	r3, [fp, #-20]	; 0xffffffec
    d124:	ldr	r0, [fp, #-12]
    d128:	str	r0, [fp, #-24]	; 0xffffffe8
    d12c:	ldr	r0, [fp, #-12]
    d130:	ldr	r1, [fp, #-16]
    d134:	str	lr, [sp, #20]
    d138:	str	ip, [sp, #16]
    d13c:	bl	71e0 <flatcc_json_parser_symbol_part>
    d140:	str	r1, [sp, #28]
    d144:	str	r0, [sp, #24]
    d148:	ldr	r0, [sp, #28]
    d14c:	movw	r1, #26417	; 0x6731
    d150:	movt	r1, #28261	; 0x6e65
    d154:	cmp	r0, r1
    d158:	bhi	d1fc <MyGame_Example_neg_enum_parse_json_enum+0xfc>
    d15c:	b	d160 <MyGame_Example_neg_enum_parse_json_enum+0x60>
    d160:	ldr	r0, [sp, #28]
    d164:	movw	r1, #26417	; 0x6731
    d168:	movt	r1, #28261	; 0x6e65
    d16c:	teq	r0, r1
    d170:	bne	d1ec <MyGame_Example_neg_enum_parse_json_enum+0xec>
    d174:	b	d178 <MyGame_Example_neg_enum_parse_json_enum+0x78>
    d178:	ldr	r0, [fp, #-8]
    d17c:	ldr	r1, [fp, #-12]
    d180:	str	r1, [fp, #-28]	; 0xffffffe4
    d184:	ldr	r2, [fp, #-16]
    d188:	ldr	r3, [fp, #12]
    d18c:	movw	ip, #4
    d190:	str	r3, [sp, #12]
    d194:	mov	r3, ip
    d198:	ldr	ip, [sp, #12]
    d19c:	str	ip, [sp]
    d1a0:	bl	0 <flatcc_json_parser_match_constant>
    d1a4:	str	r0, [fp, #-12]
    d1a8:	ldr	r0, [fp, #-12]
    d1ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d1b0:	cmp	r0, r1
    d1b4:	beq	d1dc <MyGame_Example_neg_enum_parse_json_enum+0xdc>
    d1b8:	ldr	r0, [fp, #8]
    d1bc:	mvn	r1, #0
    d1c0:	str	r1, [r0, #4]
    d1c4:	mvn	r1, #11
    d1c8:	str	r1, [r0]
    d1cc:	ldr	r0, [fp, #-20]	; 0xffffffec
    d1d0:	movw	r1, #1
    d1d4:	str	r1, [r0]
    d1d8:	b	d1e8 <MyGame_Example_neg_enum_parse_json_enum+0xe8>
    d1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1e0:	str	r0, [fp, #-4]
    d1e4:	b	d330 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d1e8:	b	d1f8 <MyGame_Example_neg_enum_parse_json_enum+0xf8>
    d1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d1f0:	str	r0, [fp, #-4]
    d1f4:	b	d330 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d1f8:	b	d328 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    d1fc:	ldr	r0, [sp, #28]
    d200:	movw	r1, #26419	; 0x6733
    d204:	movt	r1, #28261	; 0x6e65
    d208:	teq	r0, r1
    d20c:	bne	d288 <MyGame_Example_neg_enum_parse_json_enum+0x188>
    d210:	b	d214 <MyGame_Example_neg_enum_parse_json_enum+0x114>
    d214:	ldr	r0, [fp, #-8]
    d218:	ldr	r1, [fp, #-12]
    d21c:	str	r1, [fp, #-28]	; 0xffffffe4
    d220:	ldr	r2, [fp, #-16]
    d224:	ldr	r3, [fp, #12]
    d228:	movw	ip, #4
    d22c:	str	r3, [sp, #8]
    d230:	mov	r3, ip
    d234:	ldr	ip, [sp, #8]
    d238:	str	ip, [sp]
    d23c:	bl	0 <flatcc_json_parser_match_constant>
    d240:	str	r0, [fp, #-12]
    d244:	ldr	r0, [fp, #-12]
    d248:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d24c:	cmp	r0, r1
    d250:	beq	d278 <MyGame_Example_neg_enum_parse_json_enum+0x178>
    d254:	ldr	r0, [fp, #8]
    d258:	mvn	r1, #0
    d25c:	str	r1, [r0, #4]
    d260:	mvn	r1, #9
    d264:	str	r1, [r0]
    d268:	ldr	r0, [fp, #-20]	; 0xffffffec
    d26c:	movw	r1, #1
    d270:	str	r1, [r0]
    d274:	b	d284 <MyGame_Example_neg_enum_parse_json_enum+0x184>
    d278:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d27c:	str	r0, [fp, #-4]
    d280:	b	d330 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d284:	b	d324 <MyGame_Example_neg_enum_parse_json_enum+0x224>
    d288:	ldr	r0, [sp, #28]
    d28c:	movw	r1, #26418	; 0x6732
    d290:	movt	r1, #28261	; 0x6e65
    d294:	teq	r0, r1
    d298:	bne	d314 <MyGame_Example_neg_enum_parse_json_enum+0x214>
    d29c:	b	d2a0 <MyGame_Example_neg_enum_parse_json_enum+0x1a0>
    d2a0:	ldr	r0, [fp, #-8]
    d2a4:	ldr	r1, [fp, #-12]
    d2a8:	str	r1, [fp, #-28]	; 0xffffffe4
    d2ac:	ldr	r2, [fp, #-16]
    d2b0:	ldr	r3, [fp, #12]
    d2b4:	movw	ip, #4
    d2b8:	str	r3, [sp, #4]
    d2bc:	mov	r3, ip
    d2c0:	ldr	ip, [sp, #4]
    d2c4:	str	ip, [sp]
    d2c8:	bl	0 <flatcc_json_parser_match_constant>
    d2cc:	str	r0, [fp, #-12]
    d2d0:	ldr	r0, [fp, #-12]
    d2d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d2d8:	cmp	r0, r1
    d2dc:	beq	d304 <MyGame_Example_neg_enum_parse_json_enum+0x204>
    d2e0:	ldr	r0, [fp, #8]
    d2e4:	mvn	r1, #0
    d2e8:	str	r1, [r0, #4]
    d2ec:	mvn	r1, #10
    d2f0:	str	r1, [r0]
    d2f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d2f8:	movw	r1, #1
    d2fc:	str	r1, [r0]
    d300:	b	d310 <MyGame_Example_neg_enum_parse_json_enum+0x210>
    d304:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d308:	str	r0, [fp, #-4]
    d30c:	b	d330 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d310:	b	d320 <MyGame_Example_neg_enum_parse_json_enum+0x220>
    d314:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d318:	str	r0, [fp, #-4]
    d31c:	b	d330 <MyGame_Example_neg_enum_parse_json_enum+0x230>
    d320:	b	d324 <MyGame_Example_neg_enum_parse_json_enum+0x224>
    d324:	b	d328 <MyGame_Example_neg_enum_parse_json_enum+0x228>
    d328:	ldr	r0, [fp, #-12]
    d32c:	str	r0, [fp, #-4]
    d330:	ldr	r0, [fp, #-4]
    d334:	mov	sp, fp
    d338:	pop	{fp, pc}

0000d33c <MyGame_Example_notemptyenum_parse_json_enum>:
    d33c:	push	{fp, lr}
    d340:	mov	fp, sp
    d344:	sub	sp, sp, #56	; 0x38
    d348:	ldr	ip, [fp, #12]
    d34c:	ldr	lr, [fp, #8]
    d350:	str	r0, [fp, #-8]
    d354:	str	r1, [fp, #-12]
    d358:	str	r2, [fp, #-16]
    d35c:	str	r3, [fp, #-20]	; 0xffffffec
    d360:	ldr	r0, [fp, #-12]
    d364:	str	r0, [fp, #-24]	; 0xffffffe8
    d368:	ldr	r0, [fp, #-12]
    d36c:	ldr	r1, [fp, #-16]
    d370:	str	lr, [sp, #12]
    d374:	str	ip, [sp, #8]
    d378:	bl	71e0 <flatcc_json_parser_symbol_part>
    d37c:	str	r1, [sp, #20]
    d380:	str	r0, [sp, #16]
    d384:	ldr	r0, [sp, #20]
    d388:	and	r0, r0, #-16777216	; 0xff000000
    d38c:	teq	r0, #2013265920	; 0x78000000
    d390:	bne	d408 <MyGame_Example_notemptyenum_parse_json_enum+0xcc>
    d394:	b	d398 <MyGame_Example_notemptyenum_parse_json_enum+0x5c>
    d398:	ldr	r0, [fp, #-8]
    d39c:	ldr	r1, [fp, #-12]
    d3a0:	str	r1, [sp, #28]
    d3a4:	ldr	r2, [fp, #-16]
    d3a8:	ldr	r3, [fp, #12]
    d3ac:	movw	ip, #1
    d3b0:	str	r3, [sp, #4]
    d3b4:	mov	r3, ip
    d3b8:	ldr	ip, [sp, #4]
    d3bc:	str	ip, [sp]
    d3c0:	bl	0 <flatcc_json_parser_match_constant>
    d3c4:	str	r0, [fp, #-12]
    d3c8:	ldr	r0, [fp, #-12]
    d3cc:	ldr	r1, [sp, #28]
    d3d0:	cmp	r0, r1
    d3d4:	beq	d3f8 <MyGame_Example_notemptyenum_parse_json_enum+0xbc>
    d3d8:	ldr	r0, [fp, #8]
    d3dc:	mov	r1, #0
    d3e0:	str	r1, [r0, #4]
    d3e4:	str	r1, [r0]
    d3e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    d3ec:	movw	r1, #0
    d3f0:	str	r1, [r0]
    d3f4:	b	d404 <MyGame_Example_notemptyenum_parse_json_enum+0xc8>
    d3f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d3fc:	str	r0, [fp, #-4]
    d400:	b	d41c <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    d404:	b	d414 <MyGame_Example_notemptyenum_parse_json_enum+0xd8>
    d408:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d40c:	str	r0, [fp, #-4]
    d410:	b	d41c <MyGame_Example_notemptyenum_parse_json_enum+0xe0>
    d414:	ldr	r0, [fp, #-12]
    d418:	str	r0, [fp, #-4]
    d41c:	ldr	r0, [fp, #-4]
    d420:	mov	sp, fp
    d424:	pop	{fp, pc}

0000d428 <Fantasy_Character_parse_json_enum>:
    d428:	push	{fp, lr}
    d42c:	mov	fp, sp
    d430:	sub	sp, sp, #104	; 0x68
    d434:	ldr	ip, [fp, #12]
    d438:	ldr	lr, [fp, #8]
    d43c:	str	r0, [fp, #-8]
    d440:	str	r1, [fp, #-12]
    d444:	str	r2, [fp, #-16]
    d448:	str	r3, [fp, #-20]	; 0xffffffec
    d44c:	ldr	r0, [fp, #-12]
    d450:	str	r0, [fp, #-24]	; 0xffffffe8
    d454:	ldr	r0, [fp, #-12]
    d458:	ldr	r1, [fp, #-16]
    d45c:	str	lr, [fp, #-44]	; 0xffffffd4
    d460:	str	ip, [fp, #-48]	; 0xffffffd0
    d464:	bl	71e0 <flatcc_json_parser_symbol_part>
    d468:	str	r1, [fp, #-36]	; 0xffffffdc
    d46c:	str	r0, [fp, #-40]	; 0xffffffd8
    d470:	ldr	r0, [fp, #-36]	; 0xffffffdc
    d474:	movw	r1, #20036	; 0x4e44
    d478:	movt	r1, #20047	; 0x4e4f
    d47c:	cmp	r0, r1
    d480:	bhi	d6cc <Fantasy_Character_parse_json_enum+0x2a4>
    d484:	b	d488 <Fantasy_Character_parse_json_enum+0x60>
    d488:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d48c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d490:	movw	r2, #28159	; 0x6dff
    d494:	movt	r2, #18017	; 0x4661
    d498:	subs	r0, r2, r0
    d49c:	movw	r2, #28523	; 0x6f6b
    d4a0:	movt	r2, #17007	; 0x426f
    d4a4:	sbcs	r1, r2, r1
    d4a8:	str	r0, [sp, #52]	; 0x34
    d4ac:	str	r1, [sp, #48]	; 0x30
    d4b0:	bcc	d568 <Fantasy_Character_parse_json_enum+0x140>
    d4b4:	b	d4b8 <Fantasy_Character_parse_json_enum+0x90>
    d4b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d4bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d4c0:	and	r0, r0, #-16777216	; 0xff000000
    d4c4:	movw	r2, #27756	; 0x6c6c
    d4c8:	movt	r2, #16997	; 0x4265
    d4cc:	eor	r1, r1, r2
    d4d0:	eor	r0, r0, #1694498816	; 0x65000000
    d4d4:	orr	r0, r0, r1
    d4d8:	cmp	r0, #0
    d4dc:	bne	d558 <Fantasy_Character_parse_json_enum+0x130>
    d4e0:	b	d4e4 <Fantasy_Character_parse_json_enum+0xbc>
    d4e4:	ldr	r0, [fp, #-8]
    d4e8:	ldr	r1, [fp, #-12]
    d4ec:	str	r1, [fp, #-28]	; 0xffffffe4
    d4f0:	ldr	r2, [fp, #-16]
    d4f4:	ldr	r3, [fp, #12]
    d4f8:	movw	ip, #5
    d4fc:	str	r3, [sp, #44]	; 0x2c
    d500:	mov	r3, ip
    d504:	ldr	ip, [sp, #44]	; 0x2c
    d508:	str	ip, [sp]
    d50c:	bl	0 <flatcc_json_parser_match_constant>
    d510:	str	r0, [fp, #-12]
    d514:	ldr	r0, [fp, #-12]
    d518:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d51c:	cmp	r0, r1
    d520:	beq	d548 <Fantasy_Character_parse_json_enum+0x120>
    d524:	ldr	r0, [fp, #8]
    d528:	mov	r1, #0
    d52c:	str	r1, [r0, #4]
    d530:	mov	r1, #9
    d534:	str	r1, [r0]
    d538:	ldr	r0, [fp, #-20]	; 0xffffffec
    d53c:	movw	r1, #0
    d540:	str	r1, [r0]
    d544:	b	d554 <Fantasy_Character_parse_json_enum+0x12c>
    d548:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d54c:	str	r0, [fp, #-4]
    d550:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d554:	b	d564 <Fantasy_Character_parse_json_enum+0x13c>
    d558:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d55c:	str	r0, [fp, #-4]
    d560:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d564:	b	d6c8 <Fantasy_Character_parse_json_enum+0x2a0>
    d568:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d56c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d570:	and	r0, r0, #-16777216	; 0xff000000
    d574:	movw	r2, #19553	; 0x4c61
    d578:	movt	r2, #19829	; 0x4d75
    d57c:	eor	r1, r1, r2
    d580:	eor	r0, r0, #1845493760	; 0x6e000000
    d584:	orr	r0, r0, r1
    d588:	cmp	r0, #0
    d58c:	bne	d608 <Fantasy_Character_parse_json_enum+0x1e0>
    d590:	b	d594 <Fantasy_Character_parse_json_enum+0x16c>
    d594:	ldr	r0, [fp, #-8]
    d598:	ldr	r1, [fp, #-12]
    d59c:	str	r1, [fp, #-28]	; 0xffffffe4
    d5a0:	ldr	r2, [fp, #-16]
    d5a4:	ldr	r3, [fp, #12]
    d5a8:	movw	ip, #5
    d5ac:	str	r3, [sp, #40]	; 0x28
    d5b0:	mov	r3, ip
    d5b4:	ldr	ip, [sp, #40]	; 0x28
    d5b8:	str	ip, [sp]
    d5bc:	bl	0 <flatcc_json_parser_match_constant>
    d5c0:	str	r0, [fp, #-12]
    d5c4:	ldr	r0, [fp, #-12]
    d5c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d5cc:	cmp	r0, r1
    d5d0:	beq	d5f8 <Fantasy_Character_parse_json_enum+0x1d0>
    d5d4:	ldr	r0, [fp, #8]
    d5d8:	mov	r1, #0
    d5dc:	str	r1, [r0, #4]
    d5e0:	mov	r1, #2
    d5e4:	str	r1, [r0]
    d5e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    d5ec:	movw	r1, #0
    d5f0:	str	r1, [r0]
    d5f4:	b	d604 <Fantasy_Character_parse_json_enum+0x1dc>
    d5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d5fc:	str	r0, [fp, #-4]
    d600:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d604:	b	d6c4 <Fantasy_Character_parse_json_enum+0x29c>
    d608:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d60c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d610:	movw	r2, #28527	; 0x6f6f
    d614:	movt	r2, #66	; 0x42
    d618:	eor	r2, r2, r1, lsr #8
    d61c:	lsr	r0, r0, #8
    d620:	orr	r0, r0, r1, lsl #24
    d624:	movw	r1, #24942	; 0x616e
    d628:	movt	r1, #27462	; 0x6b46
    d62c:	eor	r0, r0, r1
    d630:	orr	r0, r0, r2
    d634:	cmp	r0, #0
    d638:	bne	d6b4 <Fantasy_Character_parse_json_enum+0x28c>
    d63c:	b	d640 <Fantasy_Character_parse_json_enum+0x218>
    d640:	ldr	r0, [fp, #-8]
    d644:	ldr	r1, [fp, #-12]
    d648:	str	r1, [fp, #-28]	; 0xffffffe4
    d64c:	ldr	r2, [fp, #-16]
    d650:	ldr	r3, [fp, #12]
    d654:	movw	ip, #7
    d658:	str	r3, [sp, #36]	; 0x24
    d65c:	mov	r3, ip
    d660:	ldr	ip, [sp, #36]	; 0x24
    d664:	str	ip, [sp]
    d668:	bl	0 <flatcc_json_parser_match_constant>
    d66c:	str	r0, [fp, #-12]
    d670:	ldr	r0, [fp, #-12]
    d674:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d678:	cmp	r0, r1
    d67c:	beq	d6a4 <Fantasy_Character_parse_json_enum+0x27c>
    d680:	ldr	r0, [fp, #8]
    d684:	mov	r1, #0
    d688:	str	r1, [r0, #4]
    d68c:	mov	r1, #10
    d690:	str	r1, [r0]
    d694:	ldr	r0, [fp, #-20]	; 0xffffffec
    d698:	movw	r1, #0
    d69c:	str	r1, [r0]
    d6a0:	b	d6b0 <Fantasy_Character_parse_json_enum+0x288>
    d6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d6a8:	str	r0, [fp, #-4]
    d6ac:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d6b0:	b	d6c0 <Fantasy_Character_parse_json_enum+0x298>
    d6b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d6b8:	str	r0, [fp, #-4]
    d6bc:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d6c0:	b	d6c4 <Fantasy_Character_parse_json_enum+0x29c>
    d6c4:	b	d6c8 <Fantasy_Character_parse_json_enum+0x2a0>
    d6c8:	b	d9d4 <Fantasy_Character_parse_json_enum+0x5ac>
    d6cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d6d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d6d4:	mvn	r2, #-1912602624	; 0x8e000000
    d6d8:	subs	r0, r2, r0
    d6dc:	movw	r2, #26725	; 0x6865
    d6e0:	movt	r2, #20340	; 0x4f74
    d6e4:	sbcs	r1, r2, r1
    d6e8:	str	r0, [sp, #32]
    d6ec:	str	r1, [sp, #28]
    d6f0:	bcc	d790 <Fantasy_Character_parse_json_enum+0x368>
    d6f4:	b	d6f8 <Fantasy_Character_parse_json_enum+0x2d0>
    d6f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    d6fc:	movw	r1, #20037	; 0x4e45
    d700:	movt	r1, #20047	; 0x4e4f
    d704:	teq	r0, r1
    d708:	bne	d780 <Fantasy_Character_parse_json_enum+0x358>
    d70c:	b	d710 <Fantasy_Character_parse_json_enum+0x2e8>
    d710:	ldr	r0, [fp, #-8]
    d714:	ldr	r1, [fp, #-12]
    d718:	str	r1, [fp, #-28]	; 0xffffffe4
    d71c:	ldr	r2, [fp, #-16]
    d720:	ldr	r3, [fp, #12]
    d724:	movw	ip, #4
    d728:	str	r3, [sp, #24]
    d72c:	mov	r3, ip
    d730:	ldr	ip, [sp, #24]
    d734:	str	ip, [sp]
    d738:	bl	0 <flatcc_json_parser_match_constant>
    d73c:	str	r0, [fp, #-12]
    d740:	ldr	r0, [fp, #-12]
    d744:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d748:	cmp	r0, r1
    d74c:	beq	d770 <Fantasy_Character_parse_json_enum+0x348>
    d750:	ldr	r0, [fp, #8]
    d754:	mov	r1, #0
    d758:	str	r1, [r0, #4]
    d75c:	str	r1, [r0]
    d760:	ldr	r0, [fp, #-20]	; 0xffffffec
    d764:	movw	r1, #0
    d768:	str	r1, [r0]
    d76c:	b	d77c <Fantasy_Character_parse_json_enum+0x354>
    d770:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d774:	str	r0, [fp, #-4]
    d778:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d77c:	b	d78c <Fantasy_Character_parse_json_enum+0x364>
    d780:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d784:	str	r0, [fp, #-4]
    d788:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d78c:	b	d9d0 <Fantasy_Character_parse_json_enum+0x5a8>
    d790:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d794:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d798:	movw	r2, #25963	; 0x656b
    d79c:	movt	r2, #28282	; 0x6e7a
    d7a0:	subs	r0, r2, r0
    d7a4:	movw	r2, #28789	; 0x7075
    d7a8:	movt	r2, #21089	; 0x5261
    d7ac:	sbcs	r1, r2, r1
    d7b0:	str	r0, [sp, #20]
    d7b4:	str	r1, [sp, #16]
    d7b8:	bcc	d870 <Fantasy_Character_parse_json_enum+0x448>
    d7bc:	b	d7c0 <Fantasy_Character_parse_json_enum+0x398>
    d7c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d7c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d7c8:	and	r0, r0, #-16777216	; 0xff000000
    d7cc:	movw	r2, #26725	; 0x6865
    d7d0:	movt	r2, #20340	; 0x4f74
    d7d4:	eor	r1, r1, r2
    d7d8:	eor	r0, r0, #1912602624	; 0x72000000
    d7dc:	orr	r0, r0, r1
    d7e0:	cmp	r0, #0
    d7e4:	bne	d860 <Fantasy_Character_parse_json_enum+0x438>
    d7e8:	b	d7ec <Fantasy_Character_parse_json_enum+0x3c4>
    d7ec:	ldr	r0, [fp, #-8]
    d7f0:	ldr	r1, [fp, #-12]
    d7f4:	str	r1, [fp, #-28]	; 0xffffffe4
    d7f8:	ldr	r2, [fp, #-16]
    d7fc:	ldr	r3, [fp, #12]
    d800:	movw	ip, #5
    d804:	str	r3, [sp, #12]
    d808:	mov	r3, ip
    d80c:	ldr	ip, [sp, #12]
    d810:	str	ip, [sp]
    d814:	bl	0 <flatcc_json_parser_match_constant>
    d818:	str	r0, [fp, #-12]
    d81c:	ldr	r0, [fp, #-12]
    d820:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d824:	cmp	r0, r1
    d828:	beq	d850 <Fantasy_Character_parse_json_enum+0x428>
    d82c:	ldr	r0, [fp, #8]
    d830:	mov	r1, #0
    d834:	str	r1, [r0, #4]
    d838:	mov	r1, #11
    d83c:	str	r1, [r0]
    d840:	ldr	r0, [fp, #-20]	; 0xffffffec
    d844:	movw	r1, #0
    d848:	str	r1, [r0]
    d84c:	b	d85c <Fantasy_Character_parse_json_enum+0x434>
    d850:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d854:	str	r0, [fp, #-4]
    d858:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d85c:	b	d86c <Fantasy_Character_parse_json_enum+0x444>
    d860:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d864:	str	r0, [fp, #-4]
    d868:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d86c:	b	d9cc <Fantasy_Character_parse_json_enum+0x5a4>
    d870:	ldrh	r0, [fp, #-38]	; 0xffffffda
    d874:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d878:	movw	r2, #21870	; 0x556e
    d87c:	eor	r2, r2, r1, lsr #16
    d880:	orr	r0, r0, r1, lsl #16
    d884:	movw	r1, #25956	; 0x6564
    d888:	movt	r1, #30067	; 0x7573
    d88c:	eor	r0, r0, r1
    d890:	orr	r0, r0, r2
    d894:	cmp	r0, #0
    d898:	bne	d914 <Fantasy_Character_parse_json_enum+0x4ec>
    d89c:	b	d8a0 <Fantasy_Character_parse_json_enum+0x478>
    d8a0:	ldr	r0, [fp, #-8]
    d8a4:	ldr	r1, [fp, #-12]
    d8a8:	str	r1, [fp, #-28]	; 0xffffffe4
    d8ac:	ldr	r2, [fp, #-16]
    d8b0:	ldr	r3, [fp, #12]
    d8b4:	movw	ip, #6
    d8b8:	str	r3, [sp, #8]
    d8bc:	mov	r3, ip
    d8c0:	ldr	ip, [sp, #8]
    d8c4:	str	ip, [sp]
    d8c8:	bl	0 <flatcc_json_parser_match_constant>
    d8cc:	str	r0, [fp, #-12]
    d8d0:	ldr	r0, [fp, #-12]
    d8d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d8d8:	cmp	r0, r1
    d8dc:	beq	d904 <Fantasy_Character_parse_json_enum+0x4dc>
    d8e0:	ldr	r0, [fp, #8]
    d8e4:	mov	r1, #0
    d8e8:	str	r1, [r0, #4]
    d8ec:	mov	r1, #255	; 0xff
    d8f0:	str	r1, [r0]
    d8f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    d8f8:	movw	r1, #0
    d8fc:	str	r1, [r0]
    d900:	b	d910 <Fantasy_Character_parse_json_enum+0x4e8>
    d904:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d908:	str	r0, [fp, #-4]
    d90c:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d910:	b	d9c8 <Fantasy_Character_parse_json_enum+0x5a0>
    d914:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d918:	ldr	r1, [fp, #-36]	; 0xffffffdc
    d91c:	movw	r2, #28789	; 0x7075
    d920:	movt	r2, #21089	; 0x5261
    d924:	eor	r1, r1, r2
    d928:	movw	r2, #25964	; 0x656c
    d92c:	movt	r2, #28282	; 0x6e7a
    d930:	eor	r0, r0, r2
    d934:	orr	r0, r0, r1
    d938:	cmp	r0, #0
    d93c:	bne	d9b8 <Fantasy_Character_parse_json_enum+0x590>
    d940:	b	d944 <Fantasy_Character_parse_json_enum+0x51c>
    d944:	ldr	r0, [fp, #-8]
    d948:	ldr	r1, [fp, #-12]
    d94c:	str	r1, [fp, #-28]	; 0xffffffe4
    d950:	ldr	r2, [fp, #-16]
    d954:	ldr	r3, [fp, #12]
    d958:	movw	ip, #8
    d95c:	str	r3, [sp, #4]
    d960:	mov	r3, ip
    d964:	ldr	ip, [sp, #4]
    d968:	str	ip, [sp]
    d96c:	bl	0 <flatcc_json_parser_match_constant>
    d970:	str	r0, [fp, #-12]
    d974:	ldr	r0, [fp, #-12]
    d978:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d97c:	cmp	r0, r1
    d980:	beq	d9a8 <Fantasy_Character_parse_json_enum+0x580>
    d984:	ldr	r0, [fp, #8]
    d988:	mov	r1, #0
    d98c:	str	r1, [r0, #4]
    d990:	mov	r1, #8
    d994:	str	r1, [r0]
    d998:	ldr	r0, [fp, #-20]	; 0xffffffec
    d99c:	movw	r1, #0
    d9a0:	str	r1, [r0]
    d9a4:	b	d9b4 <Fantasy_Character_parse_json_enum+0x58c>
    d9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d9ac:	str	r0, [fp, #-4]
    d9b0:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d9b4:	b	d9c4 <Fantasy_Character_parse_json_enum+0x59c>
    d9b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    d9bc:	str	r0, [fp, #-4]
    d9c0:	b	d9dc <Fantasy_Character_parse_json_enum+0x5b4>
    d9c4:	b	d9c8 <Fantasy_Character_parse_json_enum+0x5a0>
    d9c8:	b	d9cc <Fantasy_Character_parse_json_enum+0x5a4>
    d9cc:	b	d9d0 <Fantasy_Character_parse_json_enum+0x5a8>
    d9d0:	b	d9d4 <Fantasy_Character_parse_json_enum+0x5ac>
    d9d4:	ldr	r0, [fp, #-12]
    d9d8:	str	r0, [fp, #-4]
    d9dc:	ldr	r0, [fp, #-4]
    d9e0:	mov	sp, fp
    d9e4:	pop	{fp, pc}

0000d9e8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    d9e8:	push	{fp, lr}
    d9ec:	mov	fp, sp
    d9f0:	sub	sp, sp, #64	; 0x40
    d9f4:	ldr	ip, [fp, #12]
    d9f8:	ldr	lr, [fp, #8]
    d9fc:	str	r0, [fp, #-8]
    da00:	str	r1, [fp, #-12]
    da04:	str	r2, [fp, #-16]
    da08:	str	r3, [fp, #-20]	; 0xffffffec
    da0c:	ldr	r0, [fp, #-12]
    da10:	str	r0, [fp, #-24]	; 0xffffffe8
    da14:	ldr	r0, [fp, #-12]
    da18:	ldr	r1, [fp, #-16]
    da1c:	str	lr, [sp, #20]
    da20:	str	ip, [sp, #16]
    da24:	bl	71e0 <flatcc_json_parser_symbol_part>
    da28:	str	r1, [sp, #28]
    da2c:	str	r0, [sp, #24]
    da30:	ldr	r0, [sp, #28]
    da34:	bic	r0, r0, #255	; 0xff
    da38:	movw	r1, #28416	; 0x6f00
    da3c:	movt	r1, #18031	; 0x466f
    da40:	teq	r0, r1
    da44:	bne	dab8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd0>
    da48:	b	da4c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x64>
    da4c:	ldr	r0, [fp, #-8]
    da50:	ldr	r1, [fp, #-12]
    da54:	str	r1, [fp, #-28]	; 0xffffffe4
    da58:	ldr	r2, [fp, #-16]
    da5c:	ldr	r3, [fp, #12]
    da60:	movw	ip, #3
    da64:	str	r3, [sp, #12]
    da68:	mov	r3, ip
    da6c:	ldr	ip, [sp, #12]
    da70:	str	ip, [sp]
    da74:	bl	0 <flatcc_json_parser_match_constant>
    da78:	str	r0, [fp, #-12]
    da7c:	ldr	r0, [fp, #-12]
    da80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    da84:	cmp	r0, r1
    da88:	beq	dab0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xc8>
    da8c:	ldr	r0, [fp, #8]
    da90:	mov	r1, #0
    da94:	str	r1, [r0, #4]
    da98:	mov	r1, #17
    da9c:	str	r1, [r0]
    daa0:	ldr	r0, [fp, #-20]	; 0xffffffec
    daa4:	movw	r1, #0
    daa8:	str	r1, [r0]
    daac:	b	dab4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xcc>
    dab0:	b	dac0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    dab4:	b	dabc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    dab8:	b	dac0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd8>
    dabc:	b	dbbc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d4>
    dac0:	ldr	r0, [sp, #24]
    dac4:	ldr	r1, [sp, #28]
    dac8:	movw	r2, #25452	; 0x636c
    dacc:	movt	r2, #18798	; 0x496e
    dad0:	eor	r1, r1, r2
    dad4:	movw	r2, #25942	; 0x6556
    dad8:	movt	r2, #30052	; 0x7564
    dadc:	eor	r0, r0, r2
    dae0:	orr	r0, r0, r1
    dae4:	cmp	r0, #0
    dae8:	bne	dbac <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1c4>
    daec:	b	daf0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x108>
    daf0:	ldr	r0, [fp, #-12]
    daf4:	add	r0, r0, #8
    daf8:	str	r0, [fp, #-12]
    dafc:	ldr	r0, [fp, #-12]
    db00:	ldr	r1, [fp, #-16]
    db04:	bl	71e0 <flatcc_json_parser_symbol_part>
    db08:	str	r1, [sp, #28]
    db0c:	str	r0, [sp, #24]
    db10:	ldr	r0, [sp, #28]
    db14:	bfc	r0, #0, #16
    db18:	movw	r1, #0
    db1c:	movt	r1, #24940	; 0x616c
    db20:	teq	r0, r1
    db24:	bne	db9c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b4>
    db28:	b	db2c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x144>
    db2c:	ldr	r0, [fp, #-8]
    db30:	ldr	r1, [fp, #-12]
    db34:	str	r1, [fp, #-28]	; 0xffffffe4
    db38:	ldr	r2, [fp, #-16]
    db3c:	ldr	r3, [fp, #12]
    db40:	movw	ip, #2
    db44:	str	r3, [sp, #8]
    db48:	mov	r3, ip
    db4c:	ldr	ip, [sp, #8]
    db50:	str	ip, [sp]
    db54:	bl	0 <flatcc_json_parser_match_constant>
    db58:	str	r0, [fp, #-12]
    db5c:	ldr	r0, [fp, #-12]
    db60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    db64:	cmp	r0, r1
    db68:	beq	db8c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1a4>
    db6c:	ldr	r0, [fp, #8]
    db70:	mov	r1, #0
    db74:	str	r1, [r0, #4]
    db78:	str	r1, [r0]
    db7c:	ldr	r0, [fp, #-20]	; 0xffffffec
    db80:	movw	r1, #0
    db84:	str	r1, [r0]
    db88:	b	db98 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1b0>
    db8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    db90:	str	r0, [fp, #-4]
    db94:	b	dbc4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1dc>
    db98:	b	dba8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1c0>
    db9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dba0:	str	r0, [fp, #-4]
    dba4:	b	dbc4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1dc>
    dba8:	b	dbb8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d0>
    dbac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dbb0:	str	r0, [fp, #-4]
    dbb4:	b	dbc4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1dc>
    dbb8:	b	dbbc <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x1d4>
    dbbc:	ldr	r0, [fp, #-12]
    dbc0:	str	r0, [fp, #-4]
    dbc4:	ldr	r0, [fp, #-4]
    dbc8:	mov	sp, fp
    dbcc:	pop	{fp, pc}

0000dbd0 <flatcc_json_parser_coerce_int8>:
    dbd0:	push	{r4, sl, fp, lr}
    dbd4:	add	fp, sp, #8
    dbd8:	sub	sp, sp, #56	; 0x38
    dbdc:	ldr	ip, [fp, #12]
    dbe0:	ldr	lr, [fp, #8]
    dbe4:	ldr	r4, [fp, #16]
    dbe8:	str	r0, [fp, #-16]
    dbec:	str	r1, [fp, #-20]	; 0xffffffec
    dbf0:	str	r2, [fp, #-24]	; 0xffffffe8
    dbf4:	str	r3, [fp, #-28]	; 0xffffffe4
    dbf8:	str	ip, [sp, #28]
    dbfc:	str	lr, [sp, #24]
    dc00:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dc04:	cmp	r0, #0
    dc08:	str	r4, [sp, #20]
    dc0c:	beq	dc60 <flatcc_json_parser_coerce_int8+0x90>
    dc10:	ldr	r0, [sp, #24]
    dc14:	ldr	r1, [sp, #28]
    dc18:	subs	r0, r0, #129	; 0x81
    dc1c:	sbcs	r1, r1, #0
    dc20:	str	r0, [sp, #16]
    dc24:	str	r1, [sp, #12]
    dc28:	bcc	dc4c <flatcc_json_parser_coerce_int8+0x7c>
    dc2c:	b	dc30 <flatcc_json_parser_coerce_int8+0x60>
    dc30:	ldr	r0, [fp, #-16]
    dc34:	ldr	r1, [fp, #-20]	; 0xffffffec
    dc38:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dc3c:	movw	r3, #8
    dc40:	bl	0 <flatcc_json_parser_set_error>
    dc44:	str	r0, [fp, #-12]
    dc48:	b	dcb0 <flatcc_json_parser_coerce_int8+0xe0>
    dc4c:	ldr	r0, [sp, #24]
    dc50:	rsb	r0, r0, #0
    dc54:	ldr	r1, [fp, #16]
    dc58:	strb	r0, [r1]
    dc5c:	b	dca8 <flatcc_json_parser_coerce_int8+0xd8>
    dc60:	ldr	r0, [sp, #24]
    dc64:	ldr	r1, [sp, #28]
    dc68:	subs	r0, r0, #128	; 0x80
    dc6c:	sbcs	r1, r1, #0
    dc70:	str	r0, [sp, #8]
    dc74:	str	r1, [sp, #4]
    dc78:	bcc	dc9c <flatcc_json_parser_coerce_int8+0xcc>
    dc7c:	b	dc80 <flatcc_json_parser_coerce_int8+0xb0>
    dc80:	ldr	r0, [fp, #-16]
    dc84:	ldr	r1, [fp, #-20]	; 0xffffffec
    dc88:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dc8c:	movw	r3, #7
    dc90:	bl	0 <flatcc_json_parser_set_error>
    dc94:	str	r0, [fp, #-12]
    dc98:	b	dcb0 <flatcc_json_parser_coerce_int8+0xe0>
    dc9c:	ldrb	r0, [sp, #24]
    dca0:	ldr	r1, [fp, #16]
    dca4:	strb	r0, [r1]
    dca8:	ldr	r0, [fp, #-20]	; 0xffffffec
    dcac:	str	r0, [fp, #-12]
    dcb0:	ldr	r0, [fp, #-12]
    dcb4:	sub	sp, fp, #8
    dcb8:	pop	{r4, sl, fp, pc}

0000dcbc <flatcc_json_parser_constant_start>:
    dcbc:	push	{fp, lr}
    dcc0:	mov	fp, sp
    dcc4:	sub	sp, sp, #16
    dcc8:	str	r0, [fp, #-4]
    dccc:	str	r1, [sp, #8]
    dcd0:	str	r2, [sp, #4]
    dcd4:	ldr	r0, [fp, #-4]
    dcd8:	ldr	r1, [sp, #8]
    dcdc:	ldr	r2, [sp, #4]
    dce0:	bl	7134 <flatcc_json_parser_symbol_start>
    dce4:	str	r0, [sp, #8]
    dce8:	ldr	r0, [fp, #-4]
    dcec:	ldr	r0, [r0, #12]
    dcf0:	cmp	r0, #0
    dcf4:	bne	dd0c <flatcc_json_parser_constant_start+0x50>
    dcf8:	ldr	r0, [fp, #-4]
    dcfc:	ldr	r1, [sp, #8]
    dd00:	ldr	r2, [sp, #4]
    dd04:	bl	c698 <flatcc_json_parser_space>
    dd08:	str	r0, [sp, #8]
    dd0c:	ldr	r0, [sp, #8]
    dd10:	mov	sp, fp
    dd14:	pop	{fp, pc}

0000dd18 <flatbuffers_int8_cast_to_pe>:
    dd18:	sub	sp, sp, #4
    dd1c:	strb	r0, [sp, #3]
    dd20:	ldrsb	r0, [sp, #3]
    dd24:	add	sp, sp, #4
    dd28:	bx	lr

0000dd2c <flatcc_json_parser_coerce_uint8>:
    dd2c:	push	{r4, sl, fp, lr}
    dd30:	add	fp, sp, #8
    dd34:	sub	sp, sp, #48	; 0x30
    dd38:	ldr	ip, [fp, #12]
    dd3c:	ldr	lr, [fp, #8]
    dd40:	ldr	r4, [fp, #16]
    dd44:	str	r0, [fp, #-16]
    dd48:	str	r1, [fp, #-20]	; 0xffffffec
    dd4c:	str	r2, [fp, #-24]	; 0xffffffe8
    dd50:	str	r3, [sp, #28]
    dd54:	str	ip, [sp, #20]
    dd58:	str	lr, [sp, #16]
    dd5c:	ldr	r0, [sp, #28]
    dd60:	cmp	r0, #0
    dd64:	str	r4, [sp, #12]
    dd68:	beq	dd88 <flatcc_json_parser_coerce_uint8+0x5c>
    dd6c:	ldr	r0, [fp, #-16]
    dd70:	ldr	r1, [fp, #-20]	; 0xffffffec
    dd74:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dd78:	movw	r3, #8
    dd7c:	bl	0 <flatcc_json_parser_set_error>
    dd80:	str	r0, [fp, #-12]
    dd84:	b	ddd8 <flatcc_json_parser_coerce_uint8+0xac>
    dd88:	ldr	r0, [sp, #16]
    dd8c:	ldr	r1, [sp, #20]
    dd90:	subs	r0, r0, #256	; 0x100
    dd94:	sbcs	r1, r1, #0
    dd98:	str	r0, [sp, #8]
    dd9c:	str	r1, [sp, #4]
    dda0:	bcc	ddc4 <flatcc_json_parser_coerce_uint8+0x98>
    dda4:	b	dda8 <flatcc_json_parser_coerce_uint8+0x7c>
    dda8:	ldr	r0, [fp, #-16]
    ddac:	ldr	r1, [fp, #-20]	; 0xffffffec
    ddb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ddb4:	movw	r3, #7
    ddb8:	bl	0 <flatcc_json_parser_set_error>
    ddbc:	str	r0, [fp, #-12]
    ddc0:	b	ddd8 <flatcc_json_parser_coerce_uint8+0xac>
    ddc4:	ldrb	r0, [sp, #16]
    ddc8:	ldr	r1, [fp, #16]
    ddcc:	strb	r0, [r1]
    ddd0:	ldr	r0, [fp, #-20]	; 0xffffffec
    ddd4:	str	r0, [fp, #-12]
    ddd8:	ldr	r0, [fp, #-12]
    dddc:	sub	sp, fp, #8
    dde0:	pop	{r4, sl, fp, pc}

0000dde4 <flatbuffers_uint8_cast_to_pe>:
    dde4:	sub	sp, sp, #4
    dde8:	strb	r0, [sp, #3]
    ddec:	ldrb	r0, [sp, #3]
    ddf0:	add	sp, sp, #4
    ddf4:	bx	lr

0000ddf8 <flatcc_json_parser_coerce_int16>:
    ddf8:	push	{r4, sl, fp, lr}
    ddfc:	add	fp, sp, #8
    de00:	sub	sp, sp, #56	; 0x38
    de04:	ldr	ip, [fp, #12]
    de08:	ldr	lr, [fp, #8]
    de0c:	ldr	r4, [fp, #16]
    de10:	str	r0, [fp, #-16]
    de14:	str	r1, [fp, #-20]	; 0xffffffec
    de18:	str	r2, [fp, #-24]	; 0xffffffe8
    de1c:	str	r3, [fp, #-28]	; 0xffffffe4
    de20:	str	ip, [sp, #28]
    de24:	str	lr, [sp, #24]
    de28:	ldr	r0, [fp, #-28]	; 0xffffffe4
    de2c:	cmp	r0, #0
    de30:	str	r4, [sp, #20]
    de34:	beq	de8c <flatcc_json_parser_coerce_int16+0x94>
    de38:	ldr	r0, [sp, #24]
    de3c:	ldr	r1, [sp, #28]
    de40:	movw	r2, #32769	; 0x8001
    de44:	subs	r0, r0, r2
    de48:	sbcs	r1, r1, #0
    de4c:	str	r0, [sp, #16]
    de50:	str	r1, [sp, #12]
    de54:	bcc	de78 <flatcc_json_parser_coerce_int16+0x80>
    de58:	b	de5c <flatcc_json_parser_coerce_int16+0x64>
    de5c:	ldr	r0, [fp, #-16]
    de60:	ldr	r1, [fp, #-20]	; 0xffffffec
    de64:	ldr	r2, [fp, #-24]	; 0xffffffe8
    de68:	movw	r3, #8
    de6c:	bl	0 <flatcc_json_parser_set_error>
    de70:	str	r0, [fp, #-12]
    de74:	b	dedc <flatcc_json_parser_coerce_int16+0xe4>
    de78:	ldr	r0, [sp, #24]
    de7c:	rsb	r0, r0, #0
    de80:	ldr	r1, [fp, #16]
    de84:	strh	r0, [r1]
    de88:	b	ded4 <flatcc_json_parser_coerce_int16+0xdc>
    de8c:	ldr	r0, [sp, #24]
    de90:	ldr	r1, [sp, #28]
    de94:	subs	r0, r0, #32768	; 0x8000
    de98:	sbcs	r1, r1, #0
    de9c:	str	r0, [sp, #8]
    dea0:	str	r1, [sp, #4]
    dea4:	bcc	dec8 <flatcc_json_parser_coerce_int16+0xd0>
    dea8:	b	deac <flatcc_json_parser_coerce_int16+0xb4>
    deac:	ldr	r0, [fp, #-16]
    deb0:	ldr	r1, [fp, #-20]	; 0xffffffec
    deb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    deb8:	movw	r3, #7
    debc:	bl	0 <flatcc_json_parser_set_error>
    dec0:	str	r0, [fp, #-12]
    dec4:	b	dedc <flatcc_json_parser_coerce_int16+0xe4>
    dec8:	ldrh	r0, [sp, #24]
    decc:	ldr	r1, [fp, #16]
    ded0:	strh	r0, [r1]
    ded4:	ldr	r0, [fp, #-20]	; 0xffffffec
    ded8:	str	r0, [fp, #-12]
    dedc:	ldr	r0, [fp, #-12]
    dee0:	sub	sp, fp, #8
    dee4:	pop	{r4, sl, fp, pc}

0000dee8 <flatbuffers_int16_cast_to_pe>:
    dee8:	sub	sp, sp, #4
    deec:	strh	r0, [sp, #2]
    def0:	ldrsh	r0, [sp, #2]
    def4:	add	sp, sp, #4
    def8:	bx	lr

0000defc <flatcc_json_parser_none>:
    defc:	push	{fp, lr}
    df00:	mov	fp, sp
    df04:	sub	sp, sp, #16
    df08:	str	r0, [sp, #8]
    df0c:	str	r1, [sp, #4]
    df10:	str	r2, [sp]
    df14:	ldr	r0, [sp]
    df18:	ldr	r1, [sp, #4]
    df1c:	sub	r0, r0, r1
    df20:	cmp	r0, #4
    df24:	blt	df64 <flatcc_json_parser_none+0x68>
    df28:	ldr	r0, [sp, #4]
    df2c:	ldr	r0, [r0]
    df30:	movw	r1, #35474	; 0x8a92
    df34:	movt	r1, #37779	; 0x9393
    df38:	add	r1, r0, r1
    df3c:	movw	r2, #30062	; 0x756e
    df40:	movt	r2, #27756	; 0x6c6c
    df44:	cmp	r0, r2
    df48:	movwne	r1, #1
    df4c:	cmp	r1, #0
    df50:	bne	df64 <flatcc_json_parser_none+0x68>
    df54:	ldr	r0, [sp, #4]
    df58:	add	r0, r0, #4
    df5c:	str	r0, [fp, #-4]
    df60:	b	df7c <flatcc_json_parser_none+0x80>
    df64:	ldr	r0, [sp, #8]
    df68:	ldr	r1, [sp, #4]
    df6c:	ldr	r2, [sp]
    df70:	movw	r3, #26
    df74:	bl	0 <flatcc_json_parser_set_error>
    df78:	str	r0, [fp, #-4]
    df7c:	ldr	r0, [fp, #-4]
    df80:	mov	sp, fp
    df84:	pop	{fp, pc}

0000df88 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    df88:	push	{fp, lr}
    df8c:	mov	fp, sp
    df90:	sub	sp, sp, #64	; 0x40
    df94:	str	r0, [fp, #-8]
    df98:	str	r1, [fp, #-12]
    df9c:	str	r2, [fp, #-16]
    dfa0:	str	r3, [fp, #-20]	; 0xffffffec
    dfa4:	ldr	r0, [fp, #-20]	; 0xffffffec
    dfa8:	movw	r1, #0
    dfac:	str	r1, [r0]
    dfb0:	ldr	r0, [fp, #-8]
    dfb4:	ldr	r0, [r0]
    dfb8:	movw	r1, #4
    dfbc:	bl	0 <flatcc_builder_start_table>
    dfc0:	cmp	r0, #0
    dfc4:	beq	dfcc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x44>
    dfc8:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    dfcc:	ldr	r0, [fp, #-8]
    dfd0:	ldr	r1, [fp, #-12]
    dfd4:	ldr	r2, [fp, #-16]
    dfd8:	sub	r3, fp, #24
    dfdc:	bl	7050 <flatcc_json_parser_object_start>
    dfe0:	str	r0, [fp, #-12]
    dfe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dfe8:	cmp	r0, #0
    dfec:	beq	e574 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5ec>
    dff0:	ldr	r0, [fp, #-8]
    dff4:	ldr	r1, [fp, #-12]
    dff8:	ldr	r2, [fp, #-16]
    dffc:	bl	7134 <flatcc_json_parser_symbol_start>
    e000:	str	r0, [fp, #-12]
    e004:	ldr	r0, [fp, #-12]
    e008:	ldr	r1, [fp, #-16]
    e00c:	bl	71e0 <flatcc_json_parser_symbol_part>
    e010:	str	r1, [sp, #20]
    e014:	str	r0, [sp, #16]
    e018:	ldrh	r0, [sp, #18]
    e01c:	ldr	r1, [sp, #20]
    e020:	movw	r2, #25455	; 0x636f
    e024:	eor	r2, r2, r1, lsr #16
    e028:	orr	r0, r0, r1, lsl #16
    e02c:	movw	r1, #29234	; 0x7232
    e030:	movt	r1, #27759	; 0x6c6f
    e034:	eor	r0, r0, r1
    e038:	orr	r0, r0, r2
    e03c:	cmp	r0, #0
    e040:	bne	e164 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1dc>
    e044:	b	e048 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0xc0>
    e048:	ldr	r0, [fp, #-8]
    e04c:	ldr	r1, [fp, #-12]
    e050:	str	r1, [sp, #24]
    e054:	ldr	r2, [fp, #-16]
    e058:	movw	r3, #6
    e05c:	bl	7218 <flatcc_json_parser_match_symbol>
    e060:	str	r0, [fp, #-12]
    e064:	ldr	r0, [sp, #24]
    e068:	ldr	r1, [fp, #-12]
    e06c:	cmp	r0, r1
    e070:	beq	e15c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d4>
    e074:	movw	r0, #0
    e078:	strb	r0, [sp, #15]
    e07c:	ldr	r0, [fp, #-8]
    e080:	ldr	r1, [fp, #-12]
    e084:	str	r1, [sp, #24]
    e088:	ldr	r2, [fp, #-16]
    e08c:	add	r3, sp, #15
    e090:	bl	8794 <flatcc_json_parser_int8>
    e094:	str	r0, [fp, #-12]
    e098:	ldr	r0, [sp, #24]
    e09c:	ldr	r1, [fp, #-12]
    e0a0:	cmp	r0, r1
    e0a4:	bne	e0f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    e0a8:	ldr	r0, [fp, #-8]
    e0ac:	ldr	r1, [fp, #-12]
    e0b0:	str	r1, [sp, #24]
    e0b4:	ldr	r2, [fp, #-16]
    e0b8:	movw	r3, #0
    e0bc:	movt	r3, #0
    e0c0:	add	ip, sp, #15
    e0c4:	str	ip, [sp]
    e0c8:	bl	8870 <flatcc_json_parser_symbolic_int8>
    e0cc:	str	r0, [fp, #-12]
    e0d0:	ldr	r0, [fp, #-12]
    e0d4:	ldr	r1, [sp, #24]
    e0d8:	cmp	r0, r1
    e0dc:	beq	e0f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x168>
    e0e0:	ldr	r0, [fp, #-12]
    e0e4:	ldr	r1, [fp, #-16]
    e0e8:	cmp	r0, r1
    e0ec:	bne	e0f4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x16c>
    e0f0:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e0f4:	b	e0f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x170>
    e0f8:	ldrsb	r0, [sp, #15]
    e0fc:	cmp	r0, #2
    e100:	bne	e118 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x190>
    e104:	ldr	r0, [fp, #-8]
    e108:	ldr	r0, [r0, #8]
    e10c:	and	r0, r0, #2
    e110:	cmp	r0, #0
    e114:	beq	e158 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d0>
    e118:	ldr	r0, [fp, #-8]
    e11c:	ldr	r0, [r0]
    e120:	movw	r1, #1
    e124:	str	r1, [sp, #8]
    e128:	ldr	r2, [sp, #8]
    e12c:	movw	r3, #1
    e130:	uxth	r3, r3
    e134:	bl	0 <flatcc_builder_table_add>
    e138:	str	r0, [fp, #-28]	; 0xffffffe4
    e13c:	movw	r1, #0
    e140:	cmp	r0, r1
    e144:	bne	e14c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1c4>
    e148:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e14c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e150:	ldrsb	r1, [sp, #15]
    e154:	bl	8a9c <flatbuffers_int8_write_to_pe>
    e158:	b	e160 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1d8>
    e15c:	b	e2b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x32c>
    e160:	b	e2b0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    e164:	ldr	r0, [sp, #16]
    e168:	ldr	r1, [sp, #20]
    e16c:	and	r0, r0, #-16777216	; 0xff000000
    e170:	movw	r2, #27759	; 0x6c6f
    e174:	movt	r2, #25455	; 0x636f
    e178:	eor	r1, r1, r2
    e17c:	eor	r0, r0, #1912602624	; 0x72000000
    e180:	orr	r0, r0, r1
    e184:	cmp	r0, #0
    e188:	bne	e2a8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x320>
    e18c:	b	e190 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x208>
    e190:	ldr	r0, [fp, #-8]
    e194:	ldr	r1, [fp, #-12]
    e198:	str	r1, [sp, #24]
    e19c:	ldr	r2, [fp, #-16]
    e1a0:	movw	r3, #5
    e1a4:	bl	7218 <flatcc_json_parser_match_symbol>
    e1a8:	str	r0, [fp, #-12]
    e1ac:	ldr	r0, [sp, #24]
    e1b0:	ldr	r1, [fp, #-12]
    e1b4:	cmp	r0, r1
    e1b8:	beq	e2a0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x318>
    e1bc:	movw	r0, #0
    e1c0:	strb	r0, [sp, #14]
    e1c4:	ldr	r0, [fp, #-8]
    e1c8:	ldr	r1, [fp, #-12]
    e1cc:	str	r1, [sp, #24]
    e1d0:	ldr	r2, [fp, #-16]
    e1d4:	add	r3, sp, #14
    e1d8:	bl	8794 <flatcc_json_parser_int8>
    e1dc:	str	r0, [fp, #-12]
    e1e0:	ldr	r0, [sp, #24]
    e1e4:	ldr	r1, [fp, #-12]
    e1e8:	cmp	r0, r1
    e1ec:	bne	e240 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b8>
    e1f0:	ldr	r0, [fp, #-8]
    e1f4:	ldr	r1, [fp, #-12]
    e1f8:	str	r1, [sp, #24]
    e1fc:	ldr	r2, [fp, #-16]
    e200:	movw	r3, #0
    e204:	movt	r3, #0
    e208:	add	ip, sp, #14
    e20c:	str	ip, [sp]
    e210:	bl	8870 <flatcc_json_parser_symbolic_int8>
    e214:	str	r0, [fp, #-12]
    e218:	ldr	r0, [fp, #-12]
    e21c:	ldr	r1, [sp, #24]
    e220:	cmp	r0, r1
    e224:	beq	e238 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b0>
    e228:	ldr	r0, [fp, #-12]
    e22c:	ldr	r1, [fp, #-16]
    e230:	cmp	r0, r1
    e234:	bne	e23c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b4>
    e238:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e23c:	b	e240 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2b8>
    e240:	ldrsb	r0, [sp, #14]
    e244:	cmp	r0, #2
    e248:	bne	e260 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    e24c:	ldr	r0, [fp, #-8]
    e250:	ldr	r0, [r0, #8]
    e254:	and	r0, r0, #2
    e258:	cmp	r0, #0
    e25c:	beq	e29c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x314>
    e260:	ldr	r0, [fp, #-8]
    e264:	ldr	r0, [r0]
    e268:	movw	r1, #0
    e26c:	movw	r2, #1
    e270:	movw	r3, #1
    e274:	uxth	r3, r3
    e278:	bl	0 <flatcc_builder_table_add>
    e27c:	str	r0, [fp, #-28]	; 0xffffffe4
    e280:	movw	r1, #0
    e284:	cmp	r0, r1
    e288:	bne	e290 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x308>
    e28c:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e290:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e294:	ldrsb	r1, [sp, #14]
    e298:	bl	8a9c <flatbuffers_int8_write_to_pe>
    e29c:	b	e2a4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x31c>
    e2a0:	b	e2b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x32c>
    e2a4:	b	e2ac <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x324>
    e2a8:	b	e2b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x32c>
    e2ac:	b	e2b0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x328>
    e2b0:	b	e558 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5d0>
    e2b4:	ldr	r0, [sp, #20]
    e2b8:	bic	r0, r0, #255	; 0xff
    e2bc:	movw	r1, #12800	; 0x3200
    e2c0:	movt	r1, #30051	; 0x7563
    e2c4:	teq	r0, r1
    e2c8:	bne	e3f8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x470>
    e2cc:	b	e2d0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x348>
    e2d0:	ldr	r0, [fp, #-8]
    e2d4:	ldr	r1, [fp, #-12]
    e2d8:	str	r1, [sp, #24]
    e2dc:	ldr	r2, [fp, #-16]
    e2e0:	movw	r3, #3
    e2e4:	bl	7218 <flatcc_json_parser_match_symbol>
    e2e8:	str	r0, [fp, #-12]
    e2ec:	ldr	r0, [sp, #24]
    e2f0:	ldr	r1, [fp, #-12]
    e2f4:	cmp	r0, r1
    e2f8:	beq	e3e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x458>
    e2fc:	movw	r0, #0
    e300:	strb	r0, [sp, #13]
    e304:	ldr	r0, [fp, #-8]
    e308:	ldr	r1, [fp, #-12]
    e30c:	str	r1, [sp, #24]
    e310:	ldr	r2, [fp, #-16]
    e314:	add	r3, sp, #13
    e318:	bl	8bac <flatcc_json_parser_uint8>
    e31c:	str	r0, [fp, #-12]
    e320:	ldr	r0, [sp, #24]
    e324:	ldr	r1, [fp, #-12]
    e328:	cmp	r0, r1
    e32c:	bne	e380 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f8>
    e330:	ldr	r0, [fp, #-8]
    e334:	ldr	r1, [fp, #-12]
    e338:	str	r1, [sp, #24]
    e33c:	ldr	r2, [fp, #-16]
    e340:	movw	r3, #0
    e344:	movt	r3, #0
    e348:	add	ip, sp, #13
    e34c:	str	ip, [sp]
    e350:	bl	8c88 <flatcc_json_parser_symbolic_uint8>
    e354:	str	r0, [fp, #-12]
    e358:	ldr	r0, [fp, #-12]
    e35c:	ldr	r1, [sp, #24]
    e360:	cmp	r0, r1
    e364:	beq	e378 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f0>
    e368:	ldr	r0, [fp, #-12]
    e36c:	ldr	r1, [fp, #-16]
    e370:	cmp	r0, r1
    e374:	bne	e37c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f4>
    e378:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e37c:	b	e380 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3f8>
    e380:	ldrb	r0, [sp, #13]
    e384:	cmp	r0, #2
    e388:	bne	e3a0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x418>
    e38c:	ldr	r0, [fp, #-8]
    e390:	ldr	r0, [r0, #8]
    e394:	and	r0, r0, #2
    e398:	cmp	r0, #0
    e39c:	beq	e3dc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x454>
    e3a0:	ldr	r0, [fp, #-8]
    e3a4:	ldr	r0, [r0]
    e3a8:	movw	r1, #3
    e3ac:	movw	r2, #1
    e3b0:	movw	r3, #1
    e3b4:	uxth	r3, r3
    e3b8:	bl	0 <flatcc_builder_table_add>
    e3bc:	str	r0, [fp, #-28]	; 0xffffffe4
    e3c0:	movw	r1, #0
    e3c4:	cmp	r0, r1
    e3c8:	bne	e3d0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x448>
    e3cc:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e3d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e3d4:	ldrb	r1, [sp, #13]
    e3d8:	bl	8eb4 <flatbuffers_uint8_write_to_pe>
    e3dc:	b	e3f4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x46c>
    e3e0:	ldr	r0, [fp, #-8]
    e3e4:	ldr	r1, [fp, #-12]
    e3e8:	ldr	r2, [fp, #-16]
    e3ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e3f0:	str	r0, [fp, #-12]
    e3f4:	b	e554 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5cc>
    e3f8:	ldr	r0, [sp, #20]
    e3fc:	bfc	r0, #0, #16
    e400:	movw	r1, #0
    e404:	movt	r1, #30051	; 0x7563
    e408:	teq	r0, r1
    e40c:	bne	e53c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b4>
    e410:	b	e414 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x48c>
    e414:	ldr	r0, [fp, #-8]
    e418:	ldr	r1, [fp, #-12]
    e41c:	str	r1, [sp, #24]
    e420:	ldr	r2, [fp, #-16]
    e424:	movw	r3, #2
    e428:	bl	7218 <flatcc_json_parser_match_symbol>
    e42c:	str	r0, [fp, #-12]
    e430:	ldr	r0, [sp, #24]
    e434:	ldr	r1, [fp, #-12]
    e438:	cmp	r0, r1
    e43c:	beq	e524 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x59c>
    e440:	movw	r0, #0
    e444:	strb	r0, [sp, #12]
    e448:	ldr	r0, [fp, #-8]
    e44c:	ldr	r1, [fp, #-12]
    e450:	str	r1, [sp, #24]
    e454:	ldr	r2, [fp, #-16]
    e458:	add	r3, sp, #12
    e45c:	bl	8bac <flatcc_json_parser_uint8>
    e460:	str	r0, [fp, #-12]
    e464:	ldr	r0, [sp, #24]
    e468:	ldr	r1, [fp, #-12]
    e46c:	cmp	r0, r1
    e470:	bne	e4c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x53c>
    e474:	ldr	r0, [fp, #-8]
    e478:	ldr	r1, [fp, #-12]
    e47c:	str	r1, [sp, #24]
    e480:	ldr	r2, [fp, #-16]
    e484:	movw	r3, #0
    e488:	movt	r3, #0
    e48c:	add	ip, sp, #12
    e490:	str	ip, [sp]
    e494:	bl	8c88 <flatcc_json_parser_symbolic_uint8>
    e498:	str	r0, [fp, #-12]
    e49c:	ldr	r0, [fp, #-12]
    e4a0:	ldr	r1, [sp, #24]
    e4a4:	cmp	r0, r1
    e4a8:	beq	e4bc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x534>
    e4ac:	ldr	r0, [fp, #-12]
    e4b0:	ldr	r1, [fp, #-16]
    e4b4:	cmp	r0, r1
    e4b8:	bne	e4c0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x538>
    e4bc:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e4c0:	b	e4c4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x53c>
    e4c4:	ldrb	r0, [sp, #12]
    e4c8:	cmp	r0, #2
    e4cc:	bne	e4e4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x55c>
    e4d0:	ldr	r0, [fp, #-8]
    e4d4:	ldr	r0, [r0, #8]
    e4d8:	and	r0, r0, #2
    e4dc:	cmp	r0, #0
    e4e0:	beq	e520 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x598>
    e4e4:	ldr	r0, [fp, #-8]
    e4e8:	ldr	r0, [r0]
    e4ec:	movw	r1, #2
    e4f0:	movw	r2, #1
    e4f4:	movw	r3, #1
    e4f8:	uxth	r3, r3
    e4fc:	bl	0 <flatcc_builder_table_add>
    e500:	str	r0, [fp, #-28]	; 0xffffffe4
    e504:	movw	r1, #0
    e508:	cmp	r0, r1
    e50c:	bne	e514 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x58c>
    e510:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e514:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e518:	ldrb	r1, [sp, #12]
    e51c:	bl	8eb4 <flatbuffers_uint8_write_to_pe>
    e520:	b	e538 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b0>
    e524:	ldr	r0, [fp, #-8]
    e528:	ldr	r1, [fp, #-12]
    e52c:	ldr	r2, [fp, #-16]
    e530:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e534:	str	r0, [fp, #-12]
    e538:	b	e550 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c8>
    e53c:	ldr	r0, [fp, #-8]
    e540:	ldr	r1, [fp, #-12]
    e544:	ldr	r2, [fp, #-16]
    e548:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e54c:	str	r0, [fp, #-12]
    e550:	b	e554 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5cc>
    e554:	b	e558 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5d0>
    e558:	ldr	r0, [fp, #-8]
    e55c:	ldr	r1, [fp, #-12]
    e560:	ldr	r2, [fp, #-16]
    e564:	sub	r3, fp, #24
    e568:	bl	c534 <flatcc_json_parser_object_end>
    e56c:	str	r0, [fp, #-12]
    e570:	b	dfe4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5c>
    e574:	ldr	r0, [fp, #-8]
    e578:	ldr	r0, [r0, #24]
    e57c:	cmp	r0, #0
    e580:	beq	e588 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x600>
    e584:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e588:	ldr	r0, [fp, #-8]
    e58c:	ldr	r0, [r0]
    e590:	bl	0 <flatcc_builder_end_table>
    e594:	ldr	lr, [fp, #-20]	; 0xffffffec
    e598:	str	r0, [lr]
    e59c:	cmp	r0, #0
    e5a0:	bne	e5a8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x620>
    e5a4:	b	e5b4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x62c>
    e5a8:	ldr	r0, [fp, #-12]
    e5ac:	str	r0, [fp, #-4]
    e5b0:	b	e5cc <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x644>
    e5b4:	ldr	r0, [fp, #-8]
    e5b8:	ldr	r1, [fp, #-12]
    e5bc:	ldr	r2, [fp, #-16]
    e5c0:	movw	r3, #33	; 0x21
    e5c4:	bl	0 <flatcc_json_parser_set_error>
    e5c8:	str	r0, [fp, #-4]
    e5cc:	ldr	r0, [fp, #-4]
    e5d0:	mov	sp, fp
    e5d4:	pop	{fp, pc}

0000e5d8 <MyGame_Example2_Monster_parse_json_table>:
    e5d8:	push	{fp, lr}
    e5dc:	mov	fp, sp
    e5e0:	sub	sp, sp, #24
    e5e4:	str	r0, [fp, #-8]
    e5e8:	str	r1, [sp, #12]
    e5ec:	str	r2, [sp, #8]
    e5f0:	str	r3, [sp, #4]
    e5f4:	ldr	r0, [sp, #4]
    e5f8:	movw	r1, #0
    e5fc:	str	r1, [r0]
    e600:	ldr	r0, [fp, #-8]
    e604:	ldr	r0, [r0]
    e608:	bl	0 <flatcc_builder_start_table>
    e60c:	cmp	r0, #0
    e610:	beq	e618 <MyGame_Example2_Monster_parse_json_table+0x40>
    e614:	b	e6c0 <MyGame_Example2_Monster_parse_json_table+0xe8>
    e618:	ldr	r0, [fp, #-8]
    e61c:	ldr	r1, [sp, #12]
    e620:	ldr	r2, [sp, #8]
    e624:	mov	r3, sp
    e628:	bl	7050 <flatcc_json_parser_object_start>
    e62c:	str	r0, [sp, #12]
    e630:	ldr	r0, [sp]
    e634:	cmp	r0, #0
    e638:	beq	e680 <MyGame_Example2_Monster_parse_json_table+0xa8>
    e63c:	ldr	r0, [fp, #-8]
    e640:	ldr	r1, [sp, #12]
    e644:	ldr	r2, [sp, #8]
    e648:	bl	7134 <flatcc_json_parser_symbol_start>
    e64c:	str	r0, [sp, #12]
    e650:	ldr	r0, [fp, #-8]
    e654:	ldr	r1, [sp, #12]
    e658:	ldr	r2, [sp, #8]
    e65c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e660:	str	r0, [sp, #12]
    e664:	ldr	r0, [fp, #-8]
    e668:	ldr	r1, [sp, #12]
    e66c:	ldr	r2, [sp, #8]
    e670:	mov	r3, sp
    e674:	bl	c534 <flatcc_json_parser_object_end>
    e678:	str	r0, [sp, #12]
    e67c:	b	e630 <MyGame_Example2_Monster_parse_json_table+0x58>
    e680:	ldr	r0, [fp, #-8]
    e684:	ldr	r0, [r0, #24]
    e688:	cmp	r0, #0
    e68c:	beq	e694 <MyGame_Example2_Monster_parse_json_table+0xbc>
    e690:	b	e6c0 <MyGame_Example2_Monster_parse_json_table+0xe8>
    e694:	ldr	r0, [fp, #-8]
    e698:	ldr	r0, [r0]
    e69c:	bl	0 <flatcc_builder_end_table>
    e6a0:	ldr	lr, [sp, #4]
    e6a4:	str	r0, [lr]
    e6a8:	cmp	r0, #0
    e6ac:	bne	e6b4 <MyGame_Example2_Monster_parse_json_table+0xdc>
    e6b0:	b	e6c0 <MyGame_Example2_Monster_parse_json_table+0xe8>
    e6b4:	ldr	r0, [sp, #12]
    e6b8:	str	r0, [fp, #-4]
    e6bc:	b	e6d8 <MyGame_Example2_Monster_parse_json_table+0x100>
    e6c0:	ldr	r0, [fp, #-8]
    e6c4:	ldr	r1, [sp, #12]
    e6c8:	ldr	r2, [sp, #8]
    e6cc:	movw	r3, #33	; 0x21
    e6d0:	bl	0 <flatcc_json_parser_set_error>
    e6d4:	str	r0, [fp, #-4]
    e6d8:	ldr	r0, [fp, #-4]
    e6dc:	mov	sp, fp
    e6e0:	pop	{fp, pc}

0000e6e4 <MyGame_Example_Alt_parse_json_table>:
    e6e4:	push	{fp, lr}
    e6e8:	mov	fp, sp
    e6ec:	sub	sp, sp, #88	; 0x58
    e6f0:	str	r0, [fp, #-8]
    e6f4:	str	r1, [fp, #-12]
    e6f8:	str	r2, [fp, #-16]
    e6fc:	str	r3, [fp, #-20]	; 0xffffffec
    e700:	ldr	r0, [fp, #-20]	; 0xffffffec
    e704:	movw	r1, #0
    e708:	str	r1, [r0]
    e70c:	ldr	r0, [fp, #-8]
    e710:	ldr	r0, [r0]
    e714:	movw	r1, #4
    e718:	bl	0 <flatcc_builder_start_table>
    e71c:	cmp	r0, #0
    e720:	beq	e728 <MyGame_Example_Alt_parse_json_table+0x44>
    e724:	b	ebbc <MyGame_Example_Alt_parse_json_table+0x4d8>
    e728:	ldr	r0, [fp, #-16]
    e72c:	ldr	r1, [fp, #-8]
    e730:	ldr	r2, [fp, #-12]
    e734:	ldr	r3, [fp, #-16]
    e738:	str	r0, [sp, #32]
    e73c:	mov	r0, r1
    e740:	mov	r1, r2
    e744:	mov	r2, r3
    e748:	movw	r3, #1
    e74c:	add	ip, sp, #36	; 0x24
    e750:	str	ip, [sp]
    e754:	bl	0 <flatcc_json_parser_prepare_unions>
    e758:	ldr	r1, [sp, #32]
    e75c:	cmp	r1, r0
    e760:	bne	e768 <MyGame_Example_Alt_parse_json_table+0x84>
    e764:	b	ebbc <MyGame_Example_Alt_parse_json_table+0x4d8>
    e768:	ldr	r0, [fp, #-8]
    e76c:	ldr	r1, [fp, #-12]
    e770:	ldr	r2, [fp, #-16]
    e774:	sub	r3, fp, #24
    e778:	bl	7050 <flatcc_json_parser_object_start>
    e77c:	str	r0, [fp, #-12]
    e780:	ldr	r0, [fp, #-24]	; 0xffffffe8
    e784:	cmp	r0, #0
    e788:	beq	eb64 <MyGame_Example_Alt_parse_json_table+0x480>
    e78c:	ldr	r0, [fp, #-8]
    e790:	ldr	r1, [fp, #-12]
    e794:	ldr	r2, [fp, #-16]
    e798:	bl	7134 <flatcc_json_parser_symbol_start>
    e79c:	str	r0, [fp, #-12]
    e7a0:	ldr	r0, [fp, #-12]
    e7a4:	ldr	r1, [fp, #-16]
    e7a8:	bl	71e0 <flatcc_json_parser_symbol_part>
    e7ac:	str	r1, [sp, #44]	; 0x2c
    e7b0:	str	r0, [sp, #40]	; 0x28
    e7b4:	ldr	r0, [sp, #40]	; 0x28
    e7b8:	ldr	r1, [sp, #44]	; 0x2c
    e7bc:	movw	r2, #28281	; 0x6e79
    e7c0:	movt	r2, #28001	; 0x6d61
    e7c4:	eor	r1, r1, r2
    e7c8:	movw	r2, #31071	; 0x795f
    e7cc:	movt	r2, #24942	; 0x616e
    e7d0:	eor	r0, r0, r2
    e7d4:	orr	r0, r0, r1
    e7d8:	cmp	r0, #0
    e7dc:	bne	e8d8 <MyGame_Example_Alt_parse_json_table+0x1f4>
    e7e0:	b	e7e4 <MyGame_Example_Alt_parse_json_table+0x100>
    e7e4:	ldr	r0, [fp, #-12]
    e7e8:	add	r0, r0, #8
    e7ec:	str	r0, [fp, #-12]
    e7f0:	ldr	r0, [fp, #-12]
    e7f4:	ldr	r1, [fp, #-16]
    e7f8:	bl	71e0 <flatcc_json_parser_symbol_part>
    e7fc:	str	r1, [sp, #44]	; 0x2c
    e800:	str	r0, [sp, #40]	; 0x28
    e804:	ldr	r0, [sp, #44]	; 0x2c
    e808:	movw	r1, #28773	; 0x7065
    e80c:	movt	r1, #29817	; 0x7479
    e810:	teq	r0, r1
    e814:	bne	e8c0 <MyGame_Example_Alt_parse_json_table+0x1dc>
    e818:	b	e81c <MyGame_Example_Alt_parse_json_table+0x138>
    e81c:	ldr	r0, [fp, #-8]
    e820:	ldr	r1, [fp, #-12]
    e824:	str	r1, [fp, #-40]	; 0xffffffd8
    e828:	ldr	r2, [fp, #-16]
    e82c:	movw	r3, #4
    e830:	bl	7218 <flatcc_json_parser_match_symbol>
    e834:	str	r0, [fp, #-12]
    e838:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e83c:	ldr	r1, [fp, #-12]
    e840:	cmp	r0, r1
    e844:	beq	e8a8 <MyGame_Example_Alt_parse_json_table+0x1c4>
    e848:	ldr	r0, [fp, #-8]
    e84c:	ldr	r1, [fp, #-12]
    e850:	ldr	r2, [fp, #-16]
    e854:	ldr	r3, [sp, #36]	; 0x24
    e858:	movw	ip, #0
    e85c:	str	r3, [sp, #28]
    e860:	mov	r3, ip
    e864:	movw	ip, #3
    e868:	uxth	ip, ip
    e86c:	str	ip, [sp]
    e870:	ldr	ip, [sp, #28]
    e874:	str	ip, [sp, #4]
    e878:	movw	lr, #0
    e87c:	movt	lr, #0
    e880:	str	lr, [sp, #8]
    e884:	movw	lr, #0
    e888:	movt	lr, #0
    e88c:	str	lr, [sp, #12]
    e890:	movw	lr, #0
    e894:	movt	lr, #0
    e898:	str	lr, [sp, #16]
    e89c:	bl	0 <flatcc_json_parser_union_type_vector>
    e8a0:	str	r0, [fp, #-12]
    e8a4:	b	e8bc <MyGame_Example_Alt_parse_json_table+0x1d8>
    e8a8:	ldr	r0, [fp, #-8]
    e8ac:	ldr	r1, [fp, #-12]
    e8b0:	ldr	r2, [fp, #-16]
    e8b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e8b8:	str	r0, [fp, #-12]
    e8bc:	b	e8d4 <MyGame_Example_Alt_parse_json_table+0x1f0>
    e8c0:	ldr	r0, [fp, #-8]
    e8c4:	ldr	r1, [fp, #-12]
    e8c8:	ldr	r2, [fp, #-16]
    e8cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    e8d0:	str	r0, [fp, #-12]
    e8d4:	b	eb48 <MyGame_Example_Alt_parse_json_table+0x464>
    e8d8:	ldr	r0, [sp, #40]	; 0x28
    e8dc:	ldr	r1, [sp, #44]	; 0x2c
    e8e0:	movw	r2, #24942	; 0x616e
    e8e4:	movt	r2, #109	; 0x6d
    e8e8:	eor	r2, r2, r1, lsr #8
    e8ec:	lsr	r0, r0, #8
    e8f0:	orr	r0, r0, r1, lsl #24
    e8f4:	movw	r1, #28281	; 0x6e79
    e8f8:	movt	r1, #31073	; 0x7961
    e8fc:	eor	r0, r0, r1
    e900:	orr	r0, r0, r2
    e904:	cmp	r0, #0
    e908:	bne	e98c <MyGame_Example_Alt_parse_json_table+0x2a8>
    e90c:	b	e910 <MyGame_Example_Alt_parse_json_table+0x22c>
    e910:	ldr	r0, [fp, #-8]
    e914:	ldr	r1, [fp, #-12]
    e918:	str	r1, [fp, #-40]	; 0xffffffd8
    e91c:	ldr	r2, [fp, #-16]
    e920:	movw	r3, #7
    e924:	bl	7218 <flatcc_json_parser_match_symbol>
    e928:	str	r0, [fp, #-12]
    e92c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e930:	ldr	r1, [fp, #-12]
    e934:	cmp	r0, r1
    e938:	beq	e984 <MyGame_Example_Alt_parse_json_table+0x2a0>
    e93c:	ldr	r0, [fp, #-8]
    e940:	ldr	r1, [fp, #-12]
    e944:	ldr	r2, [fp, #-16]
    e948:	ldr	r3, [sp, #36]	; 0x24
    e94c:	movw	ip, #0
    e950:	str	r3, [sp, #24]
    e954:	mov	r3, ip
    e958:	movw	ip, #3
    e95c:	uxth	ip, ip
    e960:	str	ip, [sp]
    e964:	ldr	ip, [sp, #24]
    e968:	str	ip, [sp, #4]
    e96c:	movw	lr, #0
    e970:	movt	lr, #0
    e974:	str	lr, [sp, #8]
    e978:	bl	0 <flatcc_json_parser_union_vector>
    e97c:	str	r0, [fp, #-12]
    e980:	b	e988 <MyGame_Example_Alt_parse_json_table+0x2a4>
    e984:	b	e994 <MyGame_Example_Alt_parse_json_table+0x2b0>
    e988:	b	e990 <MyGame_Example_Alt_parse_json_table+0x2ac>
    e98c:	b	e994 <MyGame_Example_Alt_parse_json_table+0x2b0>
    e990:	b	eb44 <MyGame_Example_Alt_parse_json_table+0x460>
    e994:	ldrh	r0, [sp, #42]	; 0x2a
    e998:	ldr	r1, [sp, #44]	; 0x2c
    e99c:	movw	r2, #28786	; 0x7072
    e9a0:	eor	r2, r2, r1, lsr #16
    e9a4:	orr	r0, r0, r1, lsl #16
    e9a8:	movw	r1, #27000	; 0x6978
    e9ac:	movt	r1, #25958	; 0x6566
    e9b0:	eor	r0, r0, r1
    e9b4:	orr	r0, r0, r2
    e9b8:	cmp	r0, #0
    e9bc:	bne	ea60 <MyGame_Example_Alt_parse_json_table+0x37c>
    e9c0:	b	e9c4 <MyGame_Example_Alt_parse_json_table+0x2e0>
    e9c4:	ldr	r0, [fp, #-8]
    e9c8:	ldr	r1, [fp, #-12]
    e9cc:	str	r1, [fp, #-40]	; 0xffffffd8
    e9d0:	ldr	r2, [fp, #-16]
    e9d4:	movw	r3, #6
    e9d8:	bl	7218 <flatcc_json_parser_match_symbol>
    e9dc:	str	r0, [fp, #-12]
    e9e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    e9e4:	ldr	r1, [fp, #-12]
    e9e8:	cmp	r0, r1
    e9ec:	beq	ea48 <MyGame_Example_Alt_parse_json_table+0x364>
    e9f0:	ldr	r0, [fp, #-8]
    e9f4:	ldr	r1, [fp, #-12]
    e9f8:	ldr	r2, [fp, #-16]
    e9fc:	sub	r3, fp, #32
    ea00:	bl	ec70 <MyGame_Example_TestJSONPrefix_parse_json_table>
    ea04:	str	r0, [fp, #-12]
    ea08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ea0c:	cmp	r0, #0
    ea10:	beq	ea34 <MyGame_Example_Alt_parse_json_table+0x350>
    ea14:	ldr	r0, [fp, #-8]
    ea18:	ldr	r0, [r0]
    ea1c:	movw	r1, #0
    ea20:	bl	0 <flatcc_builder_table_add_offset>
    ea24:	str	r0, [fp, #-36]	; 0xffffffdc
    ea28:	movw	r1, #0
    ea2c:	cmp	r0, r1
    ea30:	bne	ea38 <MyGame_Example_Alt_parse_json_table+0x354>
    ea34:	b	ebbc <MyGame_Example_Alt_parse_json_table+0x4d8>
    ea38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ea3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    ea40:	str	r0, [r1]
    ea44:	b	ea5c <MyGame_Example_Alt_parse_json_table+0x378>
    ea48:	ldr	r0, [fp, #-8]
    ea4c:	ldr	r1, [fp, #-12]
    ea50:	ldr	r2, [fp, #-16]
    ea54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ea58:	str	r0, [fp, #-12]
    ea5c:	b	eb40 <MyGame_Example_Alt_parse_json_table+0x45c>
    ea60:	ldr	r0, [sp, #40]	; 0x28
    ea64:	ldr	r1, [sp, #44]	; 0x2c
    ea68:	and	r0, r0, #-16777216	; 0xff000000
    ea6c:	movw	r2, #30313	; 0x7669
    ea70:	movt	r2, #28015	; 0x6d6f
    ea74:	eor	r1, r1, r2
    ea78:	eor	r0, r0, #1694498816	; 0x65000000
    ea7c:	orr	r0, r0, r1
    ea80:	cmp	r0, #0
    ea84:	bne	eb28 <MyGame_Example_Alt_parse_json_table+0x444>
    ea88:	b	ea8c <MyGame_Example_Alt_parse_json_table+0x3a8>
    ea8c:	ldr	r0, [fp, #-8]
    ea90:	ldr	r1, [fp, #-12]
    ea94:	str	r1, [fp, #-40]	; 0xffffffd8
    ea98:	ldr	r2, [fp, #-16]
    ea9c:	movw	r3, #5
    eaa0:	bl	7218 <flatcc_json_parser_match_symbol>
    eaa4:	str	r0, [fp, #-12]
    eaa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    eaac:	ldr	r1, [fp, #-12]
    eab0:	cmp	r0, r1
    eab4:	beq	eb10 <MyGame_Example_Alt_parse_json_table+0x42c>
    eab8:	ldr	r0, [fp, #-8]
    eabc:	ldr	r1, [fp, #-12]
    eac0:	ldr	r2, [fp, #-16]
    eac4:	sub	r3, fp, #32
    eac8:	bl	f0b4 <Fantasy_Movie_parse_json_table>
    eacc:	str	r0, [fp, #-12]
    ead0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ead4:	cmp	r0, #0
    ead8:	beq	eafc <MyGame_Example_Alt_parse_json_table+0x418>
    eadc:	ldr	r0, [fp, #-8]
    eae0:	ldr	r0, [r0]
    eae4:	movw	r1, #1
    eae8:	bl	0 <flatcc_builder_table_add_offset>
    eaec:	str	r0, [fp, #-36]	; 0xffffffdc
    eaf0:	movw	r1, #0
    eaf4:	cmp	r0, r1
    eaf8:	bne	eb00 <MyGame_Example_Alt_parse_json_table+0x41c>
    eafc:	b	ebbc <MyGame_Example_Alt_parse_json_table+0x4d8>
    eb00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    eb04:	ldr	r1, [fp, #-36]	; 0xffffffdc
    eb08:	str	r0, [r1]
    eb0c:	b	eb24 <MyGame_Example_Alt_parse_json_table+0x440>
    eb10:	ldr	r0, [fp, #-8]
    eb14:	ldr	r1, [fp, #-12]
    eb18:	ldr	r2, [fp, #-16]
    eb1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb20:	str	r0, [fp, #-12]
    eb24:	b	eb3c <MyGame_Example_Alt_parse_json_table+0x458>
    eb28:	ldr	r0, [fp, #-8]
    eb2c:	ldr	r1, [fp, #-12]
    eb30:	ldr	r2, [fp, #-16]
    eb34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    eb38:	str	r0, [fp, #-12]
    eb3c:	b	eb40 <MyGame_Example_Alt_parse_json_table+0x45c>
    eb40:	b	eb44 <MyGame_Example_Alt_parse_json_table+0x460>
    eb44:	b	eb48 <MyGame_Example_Alt_parse_json_table+0x464>
    eb48:	ldr	r0, [fp, #-8]
    eb4c:	ldr	r1, [fp, #-12]
    eb50:	ldr	r2, [fp, #-16]
    eb54:	sub	r3, fp, #24
    eb58:	bl	c534 <flatcc_json_parser_object_end>
    eb5c:	str	r0, [fp, #-12]
    eb60:	b	e780 <MyGame_Example_Alt_parse_json_table+0x9c>
    eb64:	ldr	r0, [fp, #-8]
    eb68:	ldr	r0, [r0, #24]
    eb6c:	cmp	r0, #0
    eb70:	beq	eb78 <MyGame_Example_Alt_parse_json_table+0x494>
    eb74:	b	ebbc <MyGame_Example_Alt_parse_json_table+0x4d8>
    eb78:	ldr	r0, [fp, #-8]
    eb7c:	ldr	r1, [fp, #-12]
    eb80:	ldr	r2, [fp, #-16]
    eb84:	ldr	r3, [sp, #36]	; 0x24
    eb88:	bl	0 <flatcc_json_parser_finalize_unions>
    eb8c:	str	r0, [fp, #-12]
    eb90:	ldr	r0, [fp, #-8]
    eb94:	ldr	r0, [r0]
    eb98:	bl	0 <flatcc_builder_end_table>
    eb9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    eba0:	str	r0, [r1]
    eba4:	cmp	r0, #0
    eba8:	bne	ebb0 <MyGame_Example_Alt_parse_json_table+0x4cc>
    ebac:	b	ebbc <MyGame_Example_Alt_parse_json_table+0x4d8>
    ebb0:	ldr	r0, [fp, #-12]
    ebb4:	str	r0, [fp, #-4]
    ebb8:	b	ebd4 <MyGame_Example_Alt_parse_json_table+0x4f0>
    ebbc:	ldr	r0, [fp, #-8]
    ebc0:	ldr	r1, [fp, #-12]
    ebc4:	ldr	r2, [fp, #-16]
    ebc8:	movw	r3, #33	; 0x21
    ebcc:	bl	0 <flatcc_json_parser_set_error>
    ebd0:	str	r0, [fp, #-4]
    ebd4:	ldr	r0, [fp, #-4]
    ebd8:	mov	sp, fp
    ebdc:	pop	{fp, pc}

0000ebe0 <MyGame_Example_Any_json_union_accept_type>:
    ebe0:	sub	sp, sp, #12
    ebe4:	strb	r0, [sp, #7]
    ebe8:	ldrb	r0, [sp, #7]
    ebec:	mov	r1, r0
    ebf0:	cmp	r0, #4
    ebf4:	str	r1, [sp]
    ebf8:	bhi	ec5c <MyGame_Example_Any_json_union_accept_type+0x7c>
    ebfc:	add	r0, pc, #8
    ec00:	ldr	r1, [sp]
    ec04:	ldr	r0, [r0, r1, lsl #2]
    ec08:	mov	pc, r0
    ec0c:	.word	0x0000ec20
    ec10:	.word	0x0000ec2c
    ec14:	.word	0x0000ec38
    ec18:	.word	0x0000ec44
    ec1c:	.word	0x0000ec50
    ec20:	movw	r0, #1
    ec24:	str	r0, [sp, #8]
    ec28:	b	ec64 <MyGame_Example_Any_json_union_accept_type+0x84>
    ec2c:	movw	r0, #1
    ec30:	str	r0, [sp, #8]
    ec34:	b	ec64 <MyGame_Example_Any_json_union_accept_type+0x84>
    ec38:	movw	r0, #1
    ec3c:	str	r0, [sp, #8]
    ec40:	b	ec64 <MyGame_Example_Any_json_union_accept_type+0x84>
    ec44:	movw	r0, #1
    ec48:	str	r0, [sp, #8]
    ec4c:	b	ec64 <MyGame_Example_Any_json_union_accept_type+0x84>
    ec50:	movw	r0, #1
    ec54:	str	r0, [sp, #8]
    ec58:	b	ec64 <MyGame_Example_Any_json_union_accept_type+0x84>
    ec5c:	movw	r0, #0
    ec60:	str	r0, [sp, #8]
    ec64:	ldr	r0, [sp, #8]
    ec68:	add	sp, sp, #12
    ec6c:	bx	lr

0000ec70 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    ec70:	push	{fp, lr}
    ec74:	mov	fp, sp
    ec78:	sub	sp, sp, #48	; 0x30
    ec7c:	str	r0, [fp, #-8]
    ec80:	str	r1, [fp, #-12]
    ec84:	str	r2, [fp, #-16]
    ec88:	str	r3, [fp, #-20]	; 0xffffffec
    ec8c:	ldr	r0, [fp, #-20]	; 0xffffffec
    ec90:	movw	r1, #0
    ec94:	str	r1, [r0]
    ec98:	ldr	r0, [fp, #-8]
    ec9c:	ldr	r0, [r0]
    eca0:	movw	r1, #3
    eca4:	bl	0 <flatcc_builder_start_table>
    eca8:	cmp	r0, #0
    ecac:	beq	ecb4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x44>
    ecb0:	b	f090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    ecb4:	ldr	r0, [fp, #-8]
    ecb8:	ldr	r1, [fp, #-12]
    ecbc:	ldr	r2, [fp, #-16]
    ecc0:	add	r3, sp, #24
    ecc4:	bl	7050 <flatcc_json_parser_object_start>
    ecc8:	str	r0, [fp, #-12]
    eccc:	ldr	r0, [sp, #24]
    ecd0:	cmp	r0, #0
    ecd4:	beq	f050 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3e0>
    ecd8:	ldr	r0, [fp, #-8]
    ecdc:	ldr	r1, [fp, #-12]
    ece0:	ldr	r2, [fp, #-16]
    ece4:	bl	7134 <flatcc_json_parser_symbol_start>
    ece8:	str	r0, [fp, #-12]
    ecec:	ldr	r0, [fp, #-12]
    ecf0:	ldr	r1, [fp, #-16]
    ecf4:	bl	71e0 <flatcc_json_parser_symbol_part>
    ecf8:	str	r1, [sp, #4]
    ecfc:	str	r0, [sp]
    ed00:	ldr	r0, [sp]
    ed04:	ldr	r1, [sp, #4]
    ed08:	movw	r2, #29556	; 0x7374
    ed0c:	movt	r2, #29797	; 0x7465
    ed10:	eor	r1, r1, r2
    ed14:	movw	r2, #28526	; 0x6f6e
    ed18:	movt	r2, #27251	; 0x6a73
    ed1c:	eor	r0, r0, r2
    ed20:	orr	r0, r0, r1
    ed24:	cmp	r0, #0
    ed28:	bne	f020 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3b0>
    ed2c:	b	ed30 <MyGame_Example_TestJSONPrefix_parse_json_table+0xc0>
    ed30:	ldr	r0, [fp, #-12]
    ed34:	add	r0, r0, #8
    ed38:	str	r0, [fp, #-12]
    ed3c:	ldr	r0, [fp, #-12]
    ed40:	ldr	r1, [fp, #-16]
    ed44:	bl	71e0 <flatcc_json_parser_symbol_part>
    ed48:	str	r1, [sp, #4]
    ed4c:	str	r0, [sp]
    ed50:	ldr	r0, [sp]
    ed54:	ldr	r1, [sp, #4]
    ed58:	movw	lr, #25958	; 0x6566
    ed5c:	movt	lr, #28786	; 0x7072
    ed60:	eor	r1, r1, lr
    ed64:	movw	lr, #28769	; 0x7061
    ed68:	movt	lr, #27000	; 0x6978
    ed6c:	eor	r0, r0, lr
    ed70:	orr	r0, r0, r1
    ed74:	cmp	r0, #0
    ed78:	bne	f008 <MyGame_Example_TestJSONPrefix_parse_json_table+0x398>
    ed7c:	b	ed80 <MyGame_Example_TestJSONPrefix_parse_json_table+0x110>
    ed80:	ldr	r0, [fp, #-12]
    ed84:	add	r0, r0, #8
    ed88:	str	r0, [fp, #-12]
    ed8c:	ldr	r0, [fp, #-12]
    ed90:	ldr	r1, [fp, #-16]
    ed94:	bl	71e0 <flatcc_json_parser_symbol_part>
    ed98:	str	r1, [sp, #4]
    ed9c:	str	r0, [sp]
    eda0:	ldrh	r0, [sp, #2]
    eda4:	ldr	r1, [sp, #4]
    eda8:	movw	lr, #29299	; 0x7273
    edac:	eor	lr, lr, r1, lsr #16
    edb0:	orr	r0, r0, r1, lsl #16
    edb4:	movw	r1, #26418	; 0x6732
    edb8:	movt	r1, #26990	; 0x696e
    edbc:	eor	r0, r0, r1
    edc0:	orr	r0, r0, lr
    edc4:	cmp	r0, #0
    edc8:	bne	ee5c <MyGame_Example_TestJSONPrefix_parse_json_table+0x1ec>
    edcc:	b	edd0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x160>
    edd0:	ldr	r0, [fp, #-8]
    edd4:	ldr	r1, [fp, #-12]
    edd8:	str	r1, [sp, #8]
    eddc:	ldr	r2, [fp, #-16]
    ede0:	movw	r3, #6
    ede4:	bl	7218 <flatcc_json_parser_match_symbol>
    ede8:	str	r0, [fp, #-12]
    edec:	ldr	r0, [sp, #8]
    edf0:	ldr	r1, [fp, #-12]
    edf4:	cmp	r0, r1
    edf8:	beq	ee54 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e4>
    edfc:	ldr	r0, [fp, #-8]
    ee00:	ldr	r1, [fp, #-12]
    ee04:	ldr	r2, [fp, #-16]
    ee08:	add	r3, sp, #16
    ee0c:	bl	fc94 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    ee10:	str	r0, [fp, #-12]
    ee14:	ldr	r0, [sp, #16]
    ee18:	cmp	r0, #0
    ee1c:	beq	ee40 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d0>
    ee20:	ldr	r0, [fp, #-8]
    ee24:	ldr	r0, [r0]
    ee28:	movw	r1, #1
    ee2c:	bl	0 <flatcc_builder_table_add_offset>
    ee30:	str	r0, [sp, #12]
    ee34:	movw	r1, #0
    ee38:	cmp	r0, r1
    ee3c:	bne	ee44 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1d4>
    ee40:	b	f090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    ee44:	ldr	r0, [sp, #16]
    ee48:	ldr	r1, [sp, #12]
    ee4c:	str	r0, [r1]
    ee50:	b	ee58 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e8>
    ee54:	b	ef20 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2b0>
    ee58:	b	ef1c <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    ee5c:	ldr	r0, [sp]
    ee60:	ldr	r1, [sp, #4]
    ee64:	and	r0, r0, #-16777216	; 0xff000000
    ee68:	movw	r2, #26990	; 0x696e
    ee6c:	movt	r2, #29299	; 0x7273
    ee70:	eor	r1, r1, r2
    ee74:	eor	r0, r0, #1728053248	; 0x67000000
    ee78:	orr	r0, r0, r1
    ee7c:	cmp	r0, #0
    ee80:	bne	ef14 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a4>
    ee84:	b	ee88 <MyGame_Example_TestJSONPrefix_parse_json_table+0x218>
    ee88:	ldr	r0, [fp, #-8]
    ee8c:	ldr	r1, [fp, #-12]
    ee90:	str	r1, [sp, #8]
    ee94:	ldr	r2, [fp, #-16]
    ee98:	movw	r3, #5
    ee9c:	bl	7218 <flatcc_json_parser_match_symbol>
    eea0:	str	r0, [fp, #-12]
    eea4:	ldr	r0, [sp, #8]
    eea8:	ldr	r1, [fp, #-12]
    eeac:	cmp	r0, r1
    eeb0:	beq	ef0c <MyGame_Example_TestJSONPrefix_parse_json_table+0x29c>
    eeb4:	ldr	r0, [fp, #-8]
    eeb8:	ldr	r1, [fp, #-12]
    eebc:	ldr	r2, [fp, #-16]
    eec0:	add	r3, sp, #16
    eec4:	bl	100f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    eec8:	str	r0, [fp, #-12]
    eecc:	ldr	r0, [sp, #16]
    eed0:	cmp	r0, #0
    eed4:	beq	eef8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x288>
    eed8:	ldr	r0, [fp, #-8]
    eedc:	ldr	r0, [r0]
    eee0:	movw	r1, #0
    eee4:	bl	0 <flatcc_builder_table_add_offset>
    eee8:	str	r0, [sp, #12]
    eeec:	movw	r1, #0
    eef0:	cmp	r0, r1
    eef4:	bne	eefc <MyGame_Example_TestJSONPrefix_parse_json_table+0x28c>
    eef8:	b	f090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    eefc:	ldr	r0, [sp, #16]
    ef00:	ldr	r1, [sp, #12]
    ef04:	str	r0, [r1]
    ef08:	b	ef10 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a0>
    ef0c:	b	ef20 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2b0>
    ef10:	b	ef18 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2a8>
    ef14:	b	ef20 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2b0>
    ef18:	b	ef1c <MyGame_Example_TestJSONPrefix_parse_json_table+0x2ac>
    ef1c:	b	f004 <MyGame_Example_TestJSONPrefix_parse_json_table+0x394>
    ef20:	ldrh	r0, [sp, #2]
    ef24:	ldr	r1, [sp, #4]
    ef28:	movw	r2, #29299	; 0x7273
    ef2c:	eor	r2, r2, r1, lsr #16
    ef30:	orr	r0, r0, r1, lsl #16
    ef34:	movw	r1, #26419	; 0x6733
    ef38:	movt	r1, #26990	; 0x696e
    ef3c:	eor	r0, r0, r1
    ef40:	orr	r0, r0, r2
    ef44:	cmp	r0, #0
    ef48:	bne	efec <MyGame_Example_TestJSONPrefix_parse_json_table+0x37c>
    ef4c:	b	ef50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x2e0>
    ef50:	ldr	r0, [fp, #-8]
    ef54:	ldr	r1, [fp, #-12]
    ef58:	str	r1, [sp, #8]
    ef5c:	ldr	r2, [fp, #-16]
    ef60:	movw	r3, #6
    ef64:	bl	7218 <flatcc_json_parser_match_symbol>
    ef68:	str	r0, [fp, #-12]
    ef6c:	ldr	r0, [sp, #8]
    ef70:	ldr	r1, [fp, #-12]
    ef74:	cmp	r0, r1
    ef78:	beq	efd4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x364>
    ef7c:	ldr	r0, [fp, #-8]
    ef80:	ldr	r1, [fp, #-12]
    ef84:	ldr	r2, [fp, #-16]
    ef88:	add	r3, sp, #16
    ef8c:	bl	10d10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    ef90:	str	r0, [fp, #-12]
    ef94:	ldr	r0, [sp, #16]
    ef98:	cmp	r0, #0
    ef9c:	beq	efc0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x350>
    efa0:	ldr	r0, [fp, #-8]
    efa4:	ldr	r0, [r0]
    efa8:	movw	r1, #2
    efac:	bl	0 <flatcc_builder_table_add_offset>
    efb0:	str	r0, [sp, #12]
    efb4:	movw	r1, #0
    efb8:	cmp	r0, r1
    efbc:	bne	efc4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x354>
    efc0:	b	f090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    efc4:	ldr	r0, [sp, #16]
    efc8:	ldr	r1, [sp, #12]
    efcc:	str	r0, [r1]
    efd0:	b	efe8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x378>
    efd4:	ldr	r0, [fp, #-8]
    efd8:	ldr	r1, [fp, #-12]
    efdc:	ldr	r2, [fp, #-16]
    efe0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    efe4:	str	r0, [fp, #-12]
    efe8:	b	f000 <MyGame_Example_TestJSONPrefix_parse_json_table+0x390>
    efec:	ldr	r0, [fp, #-8]
    eff0:	ldr	r1, [fp, #-12]
    eff4:	ldr	r2, [fp, #-16]
    eff8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    effc:	str	r0, [fp, #-12]
    f000:	b	f004 <MyGame_Example_TestJSONPrefix_parse_json_table+0x394>
    f004:	b	f01c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3ac>
    f008:	ldr	r0, [fp, #-8]
    f00c:	ldr	r1, [fp, #-12]
    f010:	ldr	r2, [fp, #-16]
    f014:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f018:	str	r0, [fp, #-12]
    f01c:	b	f034 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    f020:	ldr	r0, [fp, #-8]
    f024:	ldr	r1, [fp, #-12]
    f028:	ldr	r2, [fp, #-16]
    f02c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f030:	str	r0, [fp, #-12]
    f034:	ldr	r0, [fp, #-8]
    f038:	ldr	r1, [fp, #-12]
    f03c:	ldr	r2, [fp, #-16]
    f040:	add	r3, sp, #24
    f044:	bl	c534 <flatcc_json_parser_object_end>
    f048:	str	r0, [fp, #-12]
    f04c:	b	eccc <MyGame_Example_TestJSONPrefix_parse_json_table+0x5c>
    f050:	ldr	r0, [fp, #-8]
    f054:	ldr	r0, [r0, #24]
    f058:	cmp	r0, #0
    f05c:	beq	f064 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3f4>
    f060:	b	f090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    f064:	ldr	r0, [fp, #-8]
    f068:	ldr	r0, [r0]
    f06c:	bl	0 <flatcc_builder_end_table>
    f070:	ldr	lr, [fp, #-20]	; 0xffffffec
    f074:	str	r0, [lr]
    f078:	cmp	r0, #0
    f07c:	bne	f084 <MyGame_Example_TestJSONPrefix_parse_json_table+0x414>
    f080:	b	f090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x420>
    f084:	ldr	r0, [fp, #-12]
    f088:	str	r0, [fp, #-4]
    f08c:	b	f0a8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x438>
    f090:	ldr	r0, [fp, #-8]
    f094:	ldr	r1, [fp, #-12]
    f098:	ldr	r2, [fp, #-16]
    f09c:	movw	r3, #33	; 0x21
    f0a0:	bl	0 <flatcc_json_parser_set_error>
    f0a4:	str	r0, [fp, #-4]
    f0a8:	ldr	r0, [fp, #-4]
    f0ac:	mov	sp, fp
    f0b0:	pop	{fp, pc}

0000f0b4 <Fantasy_Movie_parse_json_table>:
    f0b4:	push	{fp, lr}
    f0b8:	mov	fp, sp
    f0bc:	sub	sp, sp, #136	; 0x88
    f0c0:	str	r0, [fp, #-8]
    f0c4:	str	r1, [fp, #-12]
    f0c8:	str	r2, [fp, #-16]
    f0cc:	str	r3, [fp, #-20]	; 0xffffffec
    f0d0:	ldr	r0, [fp, #-20]	; 0xffffffec
    f0d4:	movw	r1, #0
    f0d8:	str	r1, [r0]
    f0dc:	ldr	r0, [fp, #-8]
    f0e0:	ldr	r0, [r0]
    f0e4:	movw	r1, #10
    f0e8:	bl	0 <flatcc_builder_start_table>
    f0ec:	cmp	r0, #0
    f0f0:	beq	f0f8 <Fantasy_Movie_parse_json_table+0x44>
    f0f4:	b	fc70 <Fantasy_Movie_parse_json_table+0xbbc>
    f0f8:	ldr	r0, [fp, #-16]
    f0fc:	ldr	r1, [fp, #-8]
    f100:	ldr	r2, [fp, #-12]
    f104:	ldr	r3, [fp, #-16]
    f108:	str	r0, [fp, #-56]	; 0xffffffc8
    f10c:	mov	r0, r1
    f110:	mov	r1, r2
    f114:	mov	r2, r3
    f118:	movw	r3, #5
    f11c:	sub	ip, fp, #52	; 0x34
    f120:	str	ip, [sp]
    f124:	bl	0 <flatcc_json_parser_prepare_unions>
    f128:	ldr	r1, [fp, #-56]	; 0xffffffc8
    f12c:	cmp	r1, r0
    f130:	bne	f138 <Fantasy_Movie_parse_json_table+0x84>
    f134:	b	fc70 <Fantasy_Movie_parse_json_table+0xbbc>
    f138:	ldr	r0, [fp, #-8]
    f13c:	ldr	r1, [fp, #-12]
    f140:	ldr	r2, [fp, #-16]
    f144:	sub	r3, fp, #24
    f148:	bl	7050 <flatcc_json_parser_object_start>
    f14c:	str	r0, [fp, #-12]
    f150:	ldr	r0, [fp, #-24]	; 0xffffffe8
    f154:	cmp	r0, #0
    f158:	beq	fc18 <Fantasy_Movie_parse_json_table+0xb64>
    f15c:	ldr	r0, [fp, #-8]
    f160:	ldr	r1, [fp, #-12]
    f164:	ldr	r2, [fp, #-16]
    f168:	bl	7134 <flatcc_json_parser_symbol_start>
    f16c:	str	r0, [fp, #-12]
    f170:	ldr	r0, [fp, #-12]
    f174:	ldr	r1, [fp, #-16]
    f178:	bl	71e0 <flatcc_json_parser_symbol_part>
    f17c:	str	r1, [fp, #-44]	; 0xffffffd4
    f180:	str	r0, [fp, #-48]	; 0xffffffd0
    f184:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f188:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f18c:	movw	r2, #29796	; 0x7464
    f190:	movt	r2, #24931	; 0x6163
    f194:	subs	r0, r2, r0
    f198:	movw	r2, #24946	; 0x6172
    f19c:	movt	r2, #25448	; 0x6368
    f1a0:	sbcs	r1, r2, r1
    f1a4:	str	r0, [fp, #-60]	; 0xffffffc4
    f1a8:	str	r1, [fp, #-64]	; 0xffffffc0
    f1ac:	bcc	f58c <Fantasy_Movie_parse_json_table+0x4d8>
    f1b0:	b	f1b4 <Fantasy_Movie_parse_json_table+0x100>
    f1b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f1b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f1bc:	movw	r2, #29793	; 0x7461
    f1c0:	movt	r2, #24942	; 0x616e
    f1c4:	eor	r1, r1, r2
    f1c8:	movw	r2, #28265	; 0x6e69
    f1cc:	movt	r2, #26479	; 0x676f
    f1d0:	eor	r0, r0, r2
    f1d4:	orr	r0, r0, r1
    f1d8:	cmp	r0, #0
    f1dc:	bne	f398 <Fantasy_Movie_parse_json_table+0x2e4>
    f1e0:	b	f1e4 <Fantasy_Movie_parse_json_table+0x130>
    f1e4:	ldr	r0, [fp, #-12]
    f1e8:	add	r0, r0, #8
    f1ec:	str	r0, [fp, #-12]
    f1f0:	ldr	r0, [fp, #-12]
    f1f4:	ldr	r1, [fp, #-16]
    f1f8:	bl	71e0 <flatcc_json_parser_symbol_part>
    f1fc:	str	r1, [fp, #-44]	; 0xffffffd4
    f200:	str	r0, [fp, #-48]	; 0xffffffd0
    f204:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f208:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f20c:	movw	lr, #29791	; 0x745f
    f210:	movt	lr, #115	; 0x73
    f214:	eor	lr, lr, r1, lsr #8
    f218:	lsr	r0, r0, #8
    f21c:	orr	r0, r0, r1, lsl #24
    f220:	movw	r1, #28773	; 0x7065
    f224:	movt	r1, #29817	; 0x7479
    f228:	eor	r0, r0, r1
    f22c:	orr	r0, r0, lr
    f230:	cmp	r0, #0
    f234:	bne	f2d4 <Fantasy_Movie_parse_json_table+0x220>
    f238:	b	f23c <Fantasy_Movie_parse_json_table+0x188>
    f23c:	ldr	r0, [fp, #-8]
    f240:	ldr	r1, [fp, #-12]
    f244:	str	r1, [fp, #-40]	; 0xffffffd8
    f248:	ldr	r2, [fp, #-16]
    f24c:	movw	r3, #7
    f250:	bl	7218 <flatcc_json_parser_match_symbol>
    f254:	str	r0, [fp, #-12]
    f258:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f25c:	ldr	r1, [fp, #-12]
    f260:	cmp	r0, r1
    f264:	beq	f2bc <Fantasy_Movie_parse_json_table+0x208>
    f268:	ldr	r0, [fp, #-8]
    f26c:	ldr	r1, [fp, #-12]
    f270:	ldr	r2, [fp, #-16]
    f274:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f278:	movw	ip, #1
    f27c:	str	r3, [sp, #68]	; 0x44
    f280:	mov	r3, ip
    f284:	movw	ip, #3
    f288:	uxth	ip, ip
    f28c:	str	ip, [sp]
    f290:	ldr	ip, [sp, #68]	; 0x44
    f294:	str	ip, [sp, #4]
    f298:	movw	lr, #0
    f29c:	movt	lr, #0
    f2a0:	str	lr, [sp, #8]
    f2a4:	movw	lr, #0
    f2a8:	movt	lr, #0
    f2ac:	str	lr, [sp, #12]
    f2b0:	bl	0 <flatcc_json_parser_union_type>
    f2b4:	str	r0, [fp, #-12]
    f2b8:	b	f2d0 <Fantasy_Movie_parse_json_table+0x21c>
    f2bc:	ldr	r0, [fp, #-8]
    f2c0:	ldr	r1, [fp, #-12]
    f2c4:	ldr	r2, [fp, #-16]
    f2c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f2cc:	str	r0, [fp, #-12]
    f2d0:	b	f394 <Fantasy_Movie_parse_json_table+0x2e0>
    f2d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f2d8:	bfc	r0, #0, #16
    f2dc:	movw	r1, #0
    f2e0:	movt	r1, #29556	; 0x7374
    f2e4:	teq	r0, r1
    f2e8:	bne	f37c <Fantasy_Movie_parse_json_table+0x2c8>
    f2ec:	b	f2f0 <Fantasy_Movie_parse_json_table+0x23c>
    f2f0:	ldr	r0, [fp, #-8]
    f2f4:	ldr	r1, [fp, #-12]
    f2f8:	str	r1, [fp, #-40]	; 0xffffffd8
    f2fc:	ldr	r2, [fp, #-16]
    f300:	movw	r3, #2
    f304:	bl	7218 <flatcc_json_parser_match_symbol>
    f308:	str	r0, [fp, #-12]
    f30c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f310:	ldr	r1, [fp, #-12]
    f314:	cmp	r0, r1
    f318:	beq	f364 <Fantasy_Movie_parse_json_table+0x2b0>
    f31c:	ldr	r0, [fp, #-8]
    f320:	ldr	r1, [fp, #-12]
    f324:	ldr	r2, [fp, #-16]
    f328:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f32c:	movw	ip, #1
    f330:	str	r3, [sp, #64]	; 0x40
    f334:	mov	r3, ip
    f338:	movw	ip, #3
    f33c:	uxth	ip, ip
    f340:	str	ip, [sp]
    f344:	ldr	ip, [sp, #64]	; 0x40
    f348:	str	ip, [sp, #4]
    f34c:	movw	lr, #0
    f350:	movt	lr, #0
    f354:	str	lr, [sp, #8]
    f358:	bl	0 <flatcc_json_parser_union>
    f35c:	str	r0, [fp, #-12]
    f360:	b	f378 <Fantasy_Movie_parse_json_table+0x2c4>
    f364:	ldr	r0, [fp, #-8]
    f368:	ldr	r1, [fp, #-12]
    f36c:	ldr	r2, [fp, #-16]
    f370:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f374:	str	r0, [fp, #-12]
    f378:	b	f390 <Fantasy_Movie_parse_json_table+0x2dc>
    f37c:	ldr	r0, [fp, #-8]
    f380:	ldr	r1, [fp, #-12]
    f384:	ldr	r2, [fp, #-16]
    f388:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f38c:	str	r0, [fp, #-12]
    f390:	b	f394 <Fantasy_Movie_parse_json_table+0x2e0>
    f394:	b	f588 <Fantasy_Movie_parse_json_table+0x4d4>
    f398:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f39c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f3a0:	movw	r2, #28005	; 0x6d65
    f3a4:	movt	r2, #25441	; 0x6361
    f3a8:	eor	r1, r1, r2
    f3ac:	movw	r2, #29817	; 0x7479
    f3b0:	movt	r2, #28511	; 0x6f5f
    f3b4:	eor	r0, r0, r2
    f3b8:	orr	r0, r0, r1
    f3bc:	cmp	r0, #0
    f3c0:	bne	f4b4 <Fantasy_Movie_parse_json_table+0x400>
    f3c4:	b	f3c8 <Fantasy_Movie_parse_json_table+0x314>
    f3c8:	ldr	r0, [fp, #-12]
    f3cc:	add	r0, r0, #8
    f3d0:	str	r0, [fp, #-12]
    f3d4:	ldr	r0, [fp, #-12]
    f3d8:	ldr	r1, [fp, #-16]
    f3dc:	bl	71e0 <flatcc_json_parser_symbol_part>
    f3e0:	str	r1, [fp, #-44]	; 0xffffffd4
    f3e4:	str	r0, [fp, #-48]	; 0xffffffd0
    f3e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f3ec:	bfc	r0, #0, #16
    f3f0:	movw	r1, #0
    f3f4:	movt	r1, #28773	; 0x7065
    f3f8:	teq	r0, r1
    f3fc:	bne	f49c <Fantasy_Movie_parse_json_table+0x3e8>
    f400:	b	f404 <Fantasy_Movie_parse_json_table+0x350>
    f404:	ldr	r0, [fp, #-8]
    f408:	ldr	r1, [fp, #-12]
    f40c:	str	r1, [fp, #-40]	; 0xffffffd8
    f410:	ldr	r2, [fp, #-16]
    f414:	movw	r3, #2
    f418:	bl	7218 <flatcc_json_parser_match_symbol>
    f41c:	str	r0, [fp, #-12]
    f420:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f424:	ldr	r1, [fp, #-12]
    f428:	cmp	r0, r1
    f42c:	beq	f484 <Fantasy_Movie_parse_json_table+0x3d0>
    f430:	ldr	r0, [fp, #-8]
    f434:	ldr	r1, [fp, #-12]
    f438:	ldr	r2, [fp, #-16]
    f43c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f440:	movw	ip, #3
    f444:	str	r3, [sp, #60]	; 0x3c
    f448:	mov	r3, ip
    f44c:	movw	ip, #7
    f450:	uxth	ip, ip
    f454:	str	ip, [sp]
    f458:	ldr	ip, [sp, #60]	; 0x3c
    f45c:	str	ip, [sp, #4]
    f460:	movw	lr, #0
    f464:	movt	lr, #0
    f468:	str	lr, [sp, #8]
    f46c:	movw	lr, #0
    f470:	movt	lr, #0
    f474:	str	lr, [sp, #12]
    f478:	bl	0 <flatcc_json_parser_union_type>
    f47c:	str	r0, [fp, #-12]
    f480:	b	f498 <Fantasy_Movie_parse_json_table+0x3e4>
    f484:	ldr	r0, [fp, #-8]
    f488:	ldr	r1, [fp, #-12]
    f48c:	ldr	r2, [fp, #-16]
    f490:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f494:	str	r0, [fp, #-12]
    f498:	b	f4b0 <Fantasy_Movie_parse_json_table+0x3fc>
    f49c:	ldr	r0, [fp, #-8]
    f4a0:	ldr	r1, [fp, #-12]
    f4a4:	ldr	r2, [fp, #-16]
    f4a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f4ac:	str	r0, [fp, #-12]
    f4b0:	b	f584 <Fantasy_Movie_parse_json_table+0x4d0>
    f4b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f4b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f4bc:	and	r0, r0, #-16777216	; 0xff000000
    f4c0:	movw	r2, #28005	; 0x6d65
    f4c4:	movt	r2, #25441	; 0x6361
    f4c8:	eor	r1, r1, r2
    f4cc:	eor	r0, r0, #1862270976	; 0x6f000000
    f4d0:	orr	r0, r0, r1
    f4d4:	cmp	r0, #0
    f4d8:	bne	f56c <Fantasy_Movie_parse_json_table+0x4b8>
    f4dc:	b	f4e0 <Fantasy_Movie_parse_json_table+0x42c>
    f4e0:	ldr	r0, [fp, #-8]
    f4e4:	ldr	r1, [fp, #-12]
    f4e8:	str	r1, [fp, #-40]	; 0xffffffd8
    f4ec:	ldr	r2, [fp, #-16]
    f4f0:	movw	r3, #5
    f4f4:	bl	7218 <flatcc_json_parser_match_symbol>
    f4f8:	str	r0, [fp, #-12]
    f4fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f500:	ldr	r1, [fp, #-12]
    f504:	cmp	r0, r1
    f508:	beq	f554 <Fantasy_Movie_parse_json_table+0x4a0>
    f50c:	ldr	r0, [fp, #-8]
    f510:	ldr	r1, [fp, #-12]
    f514:	ldr	r2, [fp, #-16]
    f518:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f51c:	movw	ip, #3
    f520:	str	r3, [sp, #56]	; 0x38
    f524:	mov	r3, ip
    f528:	movw	ip, #7
    f52c:	uxth	ip, ip
    f530:	str	ip, [sp]
    f534:	ldr	ip, [sp, #56]	; 0x38
    f538:	str	ip, [sp, #4]
    f53c:	movw	lr, #0
    f540:	movt	lr, #0
    f544:	str	lr, [sp, #8]
    f548:	bl	0 <flatcc_json_parser_union>
    f54c:	str	r0, [fp, #-12]
    f550:	b	f568 <Fantasy_Movie_parse_json_table+0x4b4>
    f554:	ldr	r0, [fp, #-8]
    f558:	ldr	r1, [fp, #-12]
    f55c:	ldr	r2, [fp, #-16]
    f560:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f564:	str	r0, [fp, #-12]
    f568:	b	f580 <Fantasy_Movie_parse_json_table+0x4cc>
    f56c:	ldr	r0, [fp, #-8]
    f570:	ldr	r1, [fp, #-12]
    f574:	ldr	r2, [fp, #-16]
    f578:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f57c:	str	r0, [fp, #-12]
    f580:	b	f584 <Fantasy_Movie_parse_json_table+0x4d0>
    f584:	b	f588 <Fantasy_Movie_parse_json_table+0x4d4>
    f588:	b	fbfc <Fantasy_Movie_parse_json_table+0xb48>
    f58c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f590:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f594:	movw	r2, #26720	; 0x6860
    f598:	movt	r2, #24419	; 0x5f63
    f59c:	subs	r0, r2, r0
    f5a0:	movw	r2, #26990	; 0x696e
    f5a4:	movt	r2, #28001	; 0x6d61
    f5a8:	sbcs	r1, r2, r1
    f5ac:	str	r0, [sp, #52]	; 0x34
    f5b0:	str	r1, [sp, #48]	; 0x30
    f5b4:	bcc	f7c4 <Fantasy_Movie_parse_json_table+0x710>
    f5b8:	b	f5bc <Fantasy_Movie_parse_json_table+0x508>
    f5bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f5c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f5c4:	movw	r2, #24946	; 0x6172
    f5c8:	movt	r2, #25448	; 0x6368
    f5cc:	eor	r1, r1, r2
    f5d0:	movw	r2, #29797	; 0x7465
    f5d4:	movt	r2, #24931	; 0x6163
    f5d8:	eor	r0, r0, r2
    f5dc:	orr	r0, r0, r1
    f5e0:	cmp	r0, #0
    f5e4:	bne	f7ac <Fantasy_Movie_parse_json_table+0x6f8>
    f5e8:	b	f5ec <Fantasy_Movie_parse_json_table+0x538>
    f5ec:	ldr	r0, [fp, #-12]
    f5f0:	add	r0, r0, #8
    f5f4:	str	r0, [fp, #-12]
    f5f8:	ldr	r0, [fp, #-12]
    f5fc:	ldr	r1, [fp, #-16]
    f600:	bl	71e0 <flatcc_json_parser_symbol_part>
    f604:	str	r1, [fp, #-44]	; 0xffffffd4
    f608:	str	r0, [fp, #-48]	; 0xffffffd0
    f60c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f610:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f614:	movw	lr, #29535	; 0x735f
    f618:	movt	lr, #114	; 0x72
    f61c:	eor	lr, lr, r1, lsr #8
    f620:	lsr	r0, r0, #8
    f624:	orr	r0, r0, r1, lsl #24
    f628:	movw	r1, #28773	; 0x7065
    f62c:	movt	r1, #29817	; 0x7479
    f630:	eor	r0, r0, r1
    f634:	orr	r0, r0, lr
    f638:	cmp	r0, #0
    f63c:	bne	f6e8 <Fantasy_Movie_parse_json_table+0x634>
    f640:	b	f644 <Fantasy_Movie_parse_json_table+0x590>
    f644:	ldr	r0, [fp, #-8]
    f648:	ldr	r1, [fp, #-12]
    f64c:	str	r1, [fp, #-40]	; 0xffffffd8
    f650:	ldr	r2, [fp, #-16]
    f654:	movw	r3, #7
    f658:	bl	7218 <flatcc_json_parser_match_symbol>
    f65c:	str	r0, [fp, #-12]
    f660:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f664:	ldr	r1, [fp, #-12]
    f668:	cmp	r0, r1
    f66c:	beq	f6d0 <Fantasy_Movie_parse_json_table+0x61c>
    f670:	ldr	r0, [fp, #-8]
    f674:	ldr	r1, [fp, #-12]
    f678:	ldr	r2, [fp, #-16]
    f67c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f680:	movw	ip, #4
    f684:	str	r3, [sp, #44]	; 0x2c
    f688:	mov	r3, ip
    f68c:	movw	ip, #9
    f690:	uxth	ip, ip
    f694:	str	ip, [sp]
    f698:	ldr	ip, [sp, #44]	; 0x2c
    f69c:	str	ip, [sp, #4]
    f6a0:	movw	lr, #0
    f6a4:	movt	lr, #0
    f6a8:	str	lr, [sp, #8]
    f6ac:	movw	lr, #0
    f6b0:	movt	lr, #0
    f6b4:	str	lr, [sp, #12]
    f6b8:	movw	lr, #0
    f6bc:	movt	lr, #0
    f6c0:	str	lr, [sp, #16]
    f6c4:	bl	0 <flatcc_json_parser_union_type_vector>
    f6c8:	str	r0, [fp, #-12]
    f6cc:	b	f6e4 <Fantasy_Movie_parse_json_table+0x630>
    f6d0:	ldr	r0, [fp, #-8]
    f6d4:	ldr	r1, [fp, #-12]
    f6d8:	ldr	r2, [fp, #-16]
    f6dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f6e0:	str	r0, [fp, #-12]
    f6e4:	b	f7a8 <Fantasy_Movie_parse_json_table+0x6f4>
    f6e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f6ec:	bfc	r0, #0, #16
    f6f0:	movw	r1, #0
    f6f4:	movt	r1, #29299	; 0x7273
    f6f8:	teq	r0, r1
    f6fc:	bne	f790 <Fantasy_Movie_parse_json_table+0x6dc>
    f700:	b	f704 <Fantasy_Movie_parse_json_table+0x650>
    f704:	ldr	r0, [fp, #-8]
    f708:	ldr	r1, [fp, #-12]
    f70c:	str	r1, [fp, #-40]	; 0xffffffd8
    f710:	ldr	r2, [fp, #-16]
    f714:	movw	r3, #2
    f718:	bl	7218 <flatcc_json_parser_match_symbol>
    f71c:	str	r0, [fp, #-12]
    f720:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f724:	ldr	r1, [fp, #-12]
    f728:	cmp	r0, r1
    f72c:	beq	f778 <Fantasy_Movie_parse_json_table+0x6c4>
    f730:	ldr	r0, [fp, #-8]
    f734:	ldr	r1, [fp, #-12]
    f738:	ldr	r2, [fp, #-16]
    f73c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f740:	movw	ip, #4
    f744:	str	r3, [sp, #40]	; 0x28
    f748:	mov	r3, ip
    f74c:	movw	ip, #9
    f750:	uxth	ip, ip
    f754:	str	ip, [sp]
    f758:	ldr	ip, [sp, #40]	; 0x28
    f75c:	str	ip, [sp, #4]
    f760:	movw	lr, #0
    f764:	movt	lr, #0
    f768:	str	lr, [sp, #8]
    f76c:	bl	0 <flatcc_json_parser_union_vector>
    f770:	str	r0, [fp, #-12]
    f774:	b	f78c <Fantasy_Movie_parse_json_table+0x6d8>
    f778:	ldr	r0, [fp, #-8]
    f77c:	ldr	r1, [fp, #-12]
    f780:	ldr	r2, [fp, #-16]
    f784:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f788:	str	r0, [fp, #-12]
    f78c:	b	f7a4 <Fantasy_Movie_parse_json_table+0x6f0>
    f790:	ldr	r0, [fp, #-8]
    f794:	ldr	r1, [fp, #-12]
    f798:	ldr	r2, [fp, #-16]
    f79c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f7a0:	str	r0, [fp, #-12]
    f7a4:	b	f7a8 <Fantasy_Movie_parse_json_table+0x6f4>
    f7a8:	b	f7c0 <Fantasy_Movie_parse_json_table+0x70c>
    f7ac:	ldr	r0, [fp, #-8]
    f7b0:	ldr	r1, [fp, #-12]
    f7b4:	ldr	r2, [fp, #-16]
    f7b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f7bc:	str	r0, [fp, #-12]
    f7c0:	b	fbf8 <Fantasy_Movie_parse_json_table+0xb44>
    f7c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f7c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f7cc:	movw	r2, #26990	; 0x696e
    f7d0:	movt	r2, #28001	; 0x6d61
    f7d4:	eor	r1, r1, r2
    f7d8:	movw	r2, #26721	; 0x6861
    f7dc:	movt	r2, #24419	; 0x5f63
    f7e0:	eor	r0, r0, r2
    f7e4:	orr	r0, r0, r1
    f7e8:	cmp	r0, #0
    f7ec:	bne	fa08 <Fantasy_Movie_parse_json_table+0x954>
    f7f0:	b	f7f4 <Fantasy_Movie_parse_json_table+0x740>
    f7f4:	ldr	r0, [fp, #-12]
    f7f8:	add	r0, r0, #8
    f7fc:	str	r0, [fp, #-12]
    f800:	ldr	r0, [fp, #-12]
    f804:	ldr	r1, [fp, #-16]
    f808:	bl	71e0 <flatcc_json_parser_symbol_part>
    f80c:	str	r1, [fp, #-44]	; 0xffffffd4
    f810:	str	r0, [fp, #-48]	; 0xffffffd0
    f814:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f818:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f81c:	movw	lr, #25460	; 0x6374
    f820:	movt	lr, #29281	; 0x7261
    f824:	eor	r1, r1, lr
    f828:	movw	lr, #24436	; 0x5f74
    f82c:	movt	lr, #25970	; 0x6572
    f830:	eor	r0, r0, lr
    f834:	orr	r0, r0, r1
    f838:	cmp	r0, #0
    f83c:	bne	f930 <Fantasy_Movie_parse_json_table+0x87c>
    f840:	b	f844 <Fantasy_Movie_parse_json_table+0x790>
    f844:	ldr	r0, [fp, #-12]
    f848:	add	r0, r0, #8
    f84c:	str	r0, [fp, #-12]
    f850:	ldr	r0, [fp, #-12]
    f854:	ldr	r1, [fp, #-16]
    f858:	bl	71e0 <flatcc_json_parser_symbol_part>
    f85c:	str	r1, [fp, #-44]	; 0xffffffd4
    f860:	str	r0, [fp, #-48]	; 0xffffffd0
    f864:	ldr	r0, [fp, #-44]	; 0xffffffd4
    f868:	bic	r0, r0, #255	; 0xff
    f86c:	movw	r1, #25856	; 0x6500
    f870:	movt	r1, #31088	; 0x7970
    f874:	teq	r0, r1
    f878:	bne	f918 <Fantasy_Movie_parse_json_table+0x864>
    f87c:	b	f880 <Fantasy_Movie_parse_json_table+0x7cc>
    f880:	ldr	r0, [fp, #-8]
    f884:	ldr	r1, [fp, #-12]
    f888:	str	r1, [fp, #-40]	; 0xffffffd8
    f88c:	ldr	r2, [fp, #-16]
    f890:	movw	r3, #3
    f894:	bl	7218 <flatcc_json_parser_match_symbol>
    f898:	str	r0, [fp, #-12]
    f89c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f8a0:	ldr	r1, [fp, #-12]
    f8a4:	cmp	r0, r1
    f8a8:	beq	f900 <Fantasy_Movie_parse_json_table+0x84c>
    f8ac:	ldr	r0, [fp, #-8]
    f8b0:	ldr	r1, [fp, #-12]
    f8b4:	ldr	r2, [fp, #-16]
    f8b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f8bc:	movw	ip, #0
    f8c0:	str	r3, [sp, #36]	; 0x24
    f8c4:	mov	r3, ip
    f8c8:	movw	ip, #1
    f8cc:	uxth	ip, ip
    f8d0:	str	ip, [sp]
    f8d4:	ldr	ip, [sp, #36]	; 0x24
    f8d8:	str	ip, [sp, #4]
    f8dc:	movw	lr, #0
    f8e0:	movt	lr, #0
    f8e4:	str	lr, [sp, #8]
    f8e8:	movw	lr, #0
    f8ec:	movt	lr, #0
    f8f0:	str	lr, [sp, #12]
    f8f4:	bl	0 <flatcc_json_parser_union_type>
    f8f8:	str	r0, [fp, #-12]
    f8fc:	b	f914 <Fantasy_Movie_parse_json_table+0x860>
    f900:	ldr	r0, [fp, #-8]
    f904:	ldr	r1, [fp, #-12]
    f908:	ldr	r2, [fp, #-16]
    f90c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f910:	str	r0, [fp, #-12]
    f914:	b	f92c <Fantasy_Movie_parse_json_table+0x878>
    f918:	ldr	r0, [fp, #-8]
    f91c:	ldr	r1, [fp, #-12]
    f920:	ldr	r2, [fp, #-16]
    f924:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f928:	str	r0, [fp, #-12]
    f92c:	b	fa04 <Fantasy_Movie_parse_json_table+0x950>
    f930:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    f934:	ldr	r1, [fp, #-44]	; 0xffffffd4
    f938:	movw	r2, #29281	; 0x7261
    f93c:	eor	r2, r2, r1, lsr #16
    f940:	orr	r0, r0, r1, lsl #16
    f944:	movw	r1, #25970	; 0x6572
    f948:	movt	r1, #25460	; 0x6374
    f94c:	eor	r0, r0, r1
    f950:	orr	r0, r0, r2
    f954:	cmp	r0, #0
    f958:	bne	f9ec <Fantasy_Movie_parse_json_table+0x938>
    f95c:	b	f960 <Fantasy_Movie_parse_json_table+0x8ac>
    f960:	ldr	r0, [fp, #-8]
    f964:	ldr	r1, [fp, #-12]
    f968:	str	r1, [fp, #-40]	; 0xffffffd8
    f96c:	ldr	r2, [fp, #-16]
    f970:	movw	r3, #6
    f974:	bl	7218 <flatcc_json_parser_match_symbol>
    f978:	str	r0, [fp, #-12]
    f97c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    f980:	ldr	r1, [fp, #-12]
    f984:	cmp	r0, r1
    f988:	beq	f9d4 <Fantasy_Movie_parse_json_table+0x920>
    f98c:	ldr	r0, [fp, #-8]
    f990:	ldr	r1, [fp, #-12]
    f994:	ldr	r2, [fp, #-16]
    f998:	ldr	r3, [fp, #-52]	; 0xffffffcc
    f99c:	movw	ip, #0
    f9a0:	str	r3, [sp, #32]
    f9a4:	mov	r3, ip
    f9a8:	movw	ip, #1
    f9ac:	uxth	ip, ip
    f9b0:	str	ip, [sp]
    f9b4:	ldr	ip, [sp, #32]
    f9b8:	str	ip, [sp, #4]
    f9bc:	movw	lr, #0
    f9c0:	movt	lr, #0
    f9c4:	str	lr, [sp, #8]
    f9c8:	bl	0 <flatcc_json_parser_union>
    f9cc:	str	r0, [fp, #-12]
    f9d0:	b	f9e8 <Fantasy_Movie_parse_json_table+0x934>
    f9d4:	ldr	r0, [fp, #-8]
    f9d8:	ldr	r1, [fp, #-12]
    f9dc:	ldr	r2, [fp, #-16]
    f9e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9e4:	str	r0, [fp, #-12]
    f9e8:	b	fa00 <Fantasy_Movie_parse_json_table+0x94c>
    f9ec:	ldr	r0, [fp, #-8]
    f9f0:	ldr	r1, [fp, #-12]
    f9f4:	ldr	r2, [fp, #-16]
    f9f8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    f9fc:	str	r0, [fp, #-12]
    fa00:	b	fa04 <Fantasy_Movie_parse_json_table+0x950>
    fa04:	b	fbf4 <Fantasy_Movie_parse_json_table+0xb40>
    fa08:	ldr	r0, [fp, #-48]	; 0xffffffd0
    fa0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fa10:	movw	r2, #25701	; 0x6465
    fa14:	movt	r2, #29545	; 0x7369
    fa18:	eor	r1, r1, r2
    fa1c:	movw	r2, #26979	; 0x6963
    fa20:	movt	r2, #24427	; 0x5f6b
    fa24:	eor	r0, r0, r2
    fa28:	orr	r0, r0, r1
    fa2c:	cmp	r0, #0
    fa30:	bne	fbdc <Fantasy_Movie_parse_json_table+0xb28>
    fa34:	b	fa38 <Fantasy_Movie_parse_json_table+0x984>
    fa38:	ldr	r0, [fp, #-12]
    fa3c:	add	r0, r0, #8
    fa40:	str	r0, [fp, #-12]
    fa44:	ldr	r0, [fp, #-12]
    fa48:	ldr	r1, [fp, #-16]
    fa4c:	bl	71e0 <flatcc_json_parser_symbol_part>
    fa50:	str	r1, [fp, #-44]	; 0xffffffd4
    fa54:	str	r0, [fp, #-48]	; 0xffffffd0
    fa58:	ldrh	r0, [fp, #-46]	; 0xffffffd2
    fa5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    fa60:	movw	lr, #27487	; 0x6b5f
    fa64:	eor	lr, lr, r1, lsr #16
    fa68:	orr	r0, r0, r1, lsl #16
    fa6c:	movw	r1, #28773	; 0x7065
    fa70:	movt	r1, #29817	; 0x7479
    fa74:	eor	r0, r0, r1
    fa78:	orr	r0, r0, lr
    fa7c:	cmp	r0, #0
    fa80:	bne	fb20 <Fantasy_Movie_parse_json_table+0xa6c>
    fa84:	b	fa88 <Fantasy_Movie_parse_json_table+0x9d4>
    fa88:	ldr	r0, [fp, #-8]
    fa8c:	ldr	r1, [fp, #-12]
    fa90:	str	r1, [fp, #-40]	; 0xffffffd8
    fa94:	ldr	r2, [fp, #-16]
    fa98:	movw	r3, #6
    fa9c:	bl	7218 <flatcc_json_parser_match_symbol>
    faa0:	str	r0, [fp, #-12]
    faa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    faa8:	ldr	r1, [fp, #-12]
    faac:	cmp	r0, r1
    fab0:	beq	fb08 <Fantasy_Movie_parse_json_table+0xa54>
    fab4:	ldr	r0, [fp, #-8]
    fab8:	ldr	r1, [fp, #-12]
    fabc:	ldr	r2, [fp, #-16]
    fac0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fac4:	movw	ip, #2
    fac8:	str	r3, [sp, #28]
    facc:	mov	r3, ip
    fad0:	movw	ip, #5
    fad4:	uxth	ip, ip
    fad8:	str	ip, [sp]
    fadc:	ldr	ip, [sp, #28]
    fae0:	str	ip, [sp, #4]
    fae4:	movw	lr, #0
    fae8:	movt	lr, #0
    faec:	str	lr, [sp, #8]
    faf0:	movw	lr, #0
    faf4:	movt	lr, #0
    faf8:	str	lr, [sp, #12]
    fafc:	bl	0 <flatcc_json_parser_union_type>
    fb00:	str	r0, [fp, #-12]
    fb04:	b	fb1c <Fantasy_Movie_parse_json_table+0xa68>
    fb08:	ldr	r0, [fp, #-8]
    fb0c:	ldr	r1, [fp, #-12]
    fb10:	ldr	r2, [fp, #-16]
    fb14:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fb18:	str	r0, [fp, #-12]
    fb1c:	b	fbd8 <Fantasy_Movie_parse_json_table+0xb24>
    fb20:	ldr	r0, [fp, #-44]	; 0xffffffd4
    fb24:	and	r0, r0, #-16777216	; 0xff000000
    fb28:	teq	r0, #1795162112	; 0x6b000000
    fb2c:	bne	fbc0 <Fantasy_Movie_parse_json_table+0xb0c>
    fb30:	b	fb34 <Fantasy_Movie_parse_json_table+0xa80>
    fb34:	ldr	r0, [fp, #-8]
    fb38:	ldr	r1, [fp, #-12]
    fb3c:	str	r1, [fp, #-40]	; 0xffffffd8
    fb40:	ldr	r2, [fp, #-16]
    fb44:	movw	r3, #1
    fb48:	bl	7218 <flatcc_json_parser_match_symbol>
    fb4c:	str	r0, [fp, #-12]
    fb50:	ldr	r0, [fp, #-40]	; 0xffffffd8
    fb54:	ldr	r1, [fp, #-12]
    fb58:	cmp	r0, r1
    fb5c:	beq	fba8 <Fantasy_Movie_parse_json_table+0xaf4>
    fb60:	ldr	r0, [fp, #-8]
    fb64:	ldr	r1, [fp, #-12]
    fb68:	ldr	r2, [fp, #-16]
    fb6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fb70:	movw	ip, #2
    fb74:	str	r3, [sp, #24]
    fb78:	mov	r3, ip
    fb7c:	movw	ip, #5
    fb80:	uxth	ip, ip
    fb84:	str	ip, [sp]
    fb88:	ldr	ip, [sp, #24]
    fb8c:	str	ip, [sp, #4]
    fb90:	movw	lr, #0
    fb94:	movt	lr, #0
    fb98:	str	lr, [sp, #8]
    fb9c:	bl	0 <flatcc_json_parser_union>
    fba0:	str	r0, [fp, #-12]
    fba4:	b	fbbc <Fantasy_Movie_parse_json_table+0xb08>
    fba8:	ldr	r0, [fp, #-8]
    fbac:	ldr	r1, [fp, #-12]
    fbb0:	ldr	r2, [fp, #-16]
    fbb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fbb8:	str	r0, [fp, #-12]
    fbbc:	b	fbd4 <Fantasy_Movie_parse_json_table+0xb20>
    fbc0:	ldr	r0, [fp, #-8]
    fbc4:	ldr	r1, [fp, #-12]
    fbc8:	ldr	r2, [fp, #-16]
    fbcc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fbd0:	str	r0, [fp, #-12]
    fbd4:	b	fbd8 <Fantasy_Movie_parse_json_table+0xb24>
    fbd8:	b	fbf0 <Fantasy_Movie_parse_json_table+0xb3c>
    fbdc:	ldr	r0, [fp, #-8]
    fbe0:	ldr	r1, [fp, #-12]
    fbe4:	ldr	r2, [fp, #-16]
    fbe8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fbec:	str	r0, [fp, #-12]
    fbf0:	b	fbf4 <Fantasy_Movie_parse_json_table+0xb40>
    fbf4:	b	fbf8 <Fantasy_Movie_parse_json_table+0xb44>
    fbf8:	b	fbfc <Fantasy_Movie_parse_json_table+0xb48>
    fbfc:	ldr	r0, [fp, #-8]
    fc00:	ldr	r1, [fp, #-12]
    fc04:	ldr	r2, [fp, #-16]
    fc08:	sub	r3, fp, #24
    fc0c:	bl	c534 <flatcc_json_parser_object_end>
    fc10:	str	r0, [fp, #-12]
    fc14:	b	f150 <Fantasy_Movie_parse_json_table+0x9c>
    fc18:	ldr	r0, [fp, #-8]
    fc1c:	ldr	r0, [r0, #24]
    fc20:	cmp	r0, #0
    fc24:	beq	fc2c <Fantasy_Movie_parse_json_table+0xb78>
    fc28:	b	fc70 <Fantasy_Movie_parse_json_table+0xbbc>
    fc2c:	ldr	r0, [fp, #-8]
    fc30:	ldr	r1, [fp, #-12]
    fc34:	ldr	r2, [fp, #-16]
    fc38:	ldr	r3, [fp, #-52]	; 0xffffffcc
    fc3c:	bl	0 <flatcc_json_parser_finalize_unions>
    fc40:	str	r0, [fp, #-12]
    fc44:	ldr	r0, [fp, #-8]
    fc48:	ldr	r0, [r0]
    fc4c:	bl	0 <flatcc_builder_end_table>
    fc50:	ldr	r1, [fp, #-20]	; 0xffffffec
    fc54:	str	r0, [r1]
    fc58:	cmp	r0, #0
    fc5c:	bne	fc64 <Fantasy_Movie_parse_json_table+0xbb0>
    fc60:	b	fc70 <Fantasy_Movie_parse_json_table+0xbbc>
    fc64:	ldr	r0, [fp, #-12]
    fc68:	str	r0, [fp, #-4]
    fc6c:	b	fc88 <Fantasy_Movie_parse_json_table+0xbd4>
    fc70:	ldr	r0, [fp, #-8]
    fc74:	ldr	r1, [fp, #-12]
    fc78:	ldr	r2, [fp, #-16]
    fc7c:	movw	r3, #33	; 0x21
    fc80:	bl	0 <flatcc_json_parser_set_error>
    fc84:	str	r0, [fp, #-4]
    fc88:	ldr	r0, [fp, #-4]
    fc8c:	mov	sp, fp
    fc90:	pop	{fp, pc}

0000fc94 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    fc94:	push	{fp, lr}
    fc98:	mov	fp, sp
    fc9c:	sub	sp, sp, #64	; 0x40
    fca0:	str	r0, [fp, #-8]
    fca4:	str	r1, [fp, #-12]
    fca8:	str	r2, [fp, #-16]
    fcac:	str	r3, [fp, #-20]	; 0xffffffec
    fcb0:	ldr	r0, [fp, #-20]	; 0xffffffec
    fcb4:	movw	r1, #0
    fcb8:	str	r1, [r0]
    fcbc:	ldr	r0, [fp, #-8]
    fcc0:	ldr	r0, [r0]
    fcc4:	movw	r1, #2
    fcc8:	bl	0 <flatcc_builder_start_table>
    fccc:	cmp	r0, #0
    fcd0:	beq	fcd8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x44>
    fcd4:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fcd8:	ldr	r0, [fp, #-8]
    fcdc:	ldr	r1, [fp, #-12]
    fce0:	ldr	r2, [fp, #-16]
    fce4:	sub	r3, fp, #24
    fce8:	bl	7050 <flatcc_json_parser_object_start>
    fcec:	str	r0, [fp, #-12]
    fcf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    fcf4:	cmp	r0, #0
    fcf8:	beq	1008c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f8>
    fcfc:	ldr	r0, [fp, #-8]
    fd00:	ldr	r1, [fp, #-12]
    fd04:	ldr	r2, [fp, #-16]
    fd08:	bl	7134 <flatcc_json_parser_symbol_start>
    fd0c:	str	r0, [fp, #-12]
    fd10:	ldr	r0, [fp, #-12]
    fd14:	ldr	r1, [fp, #-16]
    fd18:	bl	71e0 <flatcc_json_parser_symbol_part>
    fd1c:	str	r1, [sp, #20]
    fd20:	str	r0, [sp, #16]
    fd24:	ldr	r0, [sp, #16]
    fd28:	ldr	r1, [sp, #20]
    fd2c:	movw	r2, #24929	; 0x6161
    fd30:	movt	r2, #24929	; 0x6161
    fd34:	eor	r1, r1, r2
    fd38:	movw	r2, #25186	; 0x6262
    fd3c:	movt	r2, #24418	; 0x5f62
    fd40:	eor	r0, r0, r2
    fd44:	orr	r0, r0, r1
    fd48:	cmp	r0, #0
    fd4c:	bne	1005c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c8>
    fd50:	b	fd54 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0xc0>
    fd54:	ldr	r0, [fp, #-12]
    fd58:	add	r0, r0, #8
    fd5c:	str	r0, [fp, #-12]
    fd60:	ldr	r0, [fp, #-12]
    fd64:	ldr	r1, [fp, #-16]
    fd68:	bl	71e0 <flatcc_json_parser_symbol_part>
    fd6c:	str	r1, [sp, #20]
    fd70:	str	r0, [sp, #16]
    fd74:	ldr	r0, [sp, #16]
    fd78:	ldr	r1, [sp, #20]
    fd7c:	movw	lr, #24435	; 0x5f73
    fd80:	movt	lr, #98	; 0x62
    fd84:	eor	lr, lr, r1, lsr #8
    fd88:	lsr	r0, r0, #8
    fd8c:	orr	r0, r0, r1, lsl #24
    fd90:	movw	r1, #28787	; 0x7073
    fd94:	movt	r1, #29797	; 0x7465
    fd98:	eor	r0, r0, r1
    fd9c:	orr	r0, r0, lr
    fda0:	cmp	r0, #0
    fda4:	bne	fee8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x254>
    fda8:	b	fdac <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x118>
    fdac:	ldr	r0, [fp, #-8]
    fdb0:	ldr	r1, [fp, #-12]
    fdb4:	str	r1, [sp, #24]
    fdb8:	ldr	r2, [fp, #-16]
    fdbc:	movw	r3, #7
    fdc0:	bl	7218 <flatcc_json_parser_match_symbol>
    fdc4:	str	r0, [fp, #-12]
    fdc8:	ldr	r0, [sp, #24]
    fdcc:	ldr	r1, [fp, #-12]
    fdd0:	cmp	r0, r1
    fdd4:	beq	fed0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x23c>
    fdd8:	mov	r0, #0
    fddc:	str	r0, [sp, #12]
    fde0:	str	r0, [sp, #8]
    fde4:	ldr	r0, [fp, #-8]
    fde8:	ldr	r1, [fp, #-12]
    fdec:	str	r1, [sp, #24]
    fdf0:	ldr	r2, [fp, #-16]
    fdf4:	add	r3, sp, #8
    fdf8:	bl	b904 <flatcc_json_parser_int64>
    fdfc:	str	r0, [fp, #-12]
    fe00:	ldr	r0, [sp, #24]
    fe04:	ldr	r1, [fp, #-12]
    fe08:	cmp	r0, r1
    fe0c:	bne	fe60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    fe10:	ldr	r0, [fp, #-8]
    fe14:	ldr	r1, [fp, #-12]
    fe18:	str	r1, [sp, #24]
    fe1c:	ldr	r2, [fp, #-16]
    fe20:	movw	r3, #0
    fe24:	movt	r3, #0
    fe28:	add	ip, sp, #8
    fe2c:	str	ip, [sp]
    fe30:	bl	b9dc <flatcc_json_parser_symbolic_int64>
    fe34:	str	r0, [fp, #-12]
    fe38:	ldr	r0, [fp, #-12]
    fe3c:	ldr	r1, [sp, #24]
    fe40:	cmp	r0, r1
    fe44:	beq	fe58 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c4>
    fe48:	ldr	r0, [fp, #-12]
    fe4c:	ldr	r1, [fp, #-16]
    fe50:	cmp	r0, r1
    fe54:	bne	fe5c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c8>
    fe58:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    fe5c:	b	fe60 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1cc>
    fe60:	ldr	r0, [sp, #8]
    fe64:	ldr	r1, [sp, #12]
    fe68:	orr	r0, r0, r1
    fe6c:	cmp	r0, #0
    fe70:	bne	fe8c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1f8>
    fe74:	b	fe78 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e4>
    fe78:	ldr	r0, [fp, #-8]
    fe7c:	ldr	r0, [r0, #8]
    fe80:	and	r0, r0, #2
    fe84:	cmp	r0, #0
    fe88:	beq	fecc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x238>
    fe8c:	ldr	r0, [fp, #-8]
    fe90:	ldr	r0, [r0]
    fe94:	movw	r1, #0
    fe98:	movw	r2, #8
    fe9c:	movw	r3, #8
    fea0:	uxth	r3, r3
    fea4:	bl	0 <flatcc_builder_table_add>
    fea8:	str	r0, [fp, #-28]	; 0xffffffe4
    feac:	movw	r1, #0
    feb0:	cmp	r0, r1
    feb4:	bne	febc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x228>
    feb8:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    febc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    fec0:	ldr	r2, [sp, #8]
    fec4:	ldr	r3, [sp, #12]
    fec8:	bl	bc1c <flatbuffers_int64_write_to_pe>
    fecc:	b	fee4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x250>
    fed0:	ldr	r0, [fp, #-8]
    fed4:	ldr	r1, [fp, #-12]
    fed8:	ldr	r2, [fp, #-16]
    fedc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    fee0:	str	r0, [fp, #-12]
    fee4:	b	10058 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
    fee8:	ldr	r0, [sp, #16]
    feec:	ldr	r1, [sp, #20]
    fef0:	movw	r2, #29556	; 0x7374
    fef4:	movt	r2, #25183	; 0x625f
    fef8:	eor	r1, r1, r2
    fefc:	movw	r2, #29791	; 0x745f
    ff00:	movt	r2, #24946	; 0x6172
    ff04:	eor	r0, r0, r2
    ff08:	orr	r0, r0, r1
    ff0c:	cmp	r0, #0
    ff10:	bne	10040 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3ac>
    ff14:	b	ff18 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x284>
    ff18:	ldr	r0, [fp, #-8]
    ff1c:	ldr	r1, [fp, #-12]
    ff20:	str	r1, [sp, #24]
    ff24:	ldr	r2, [fp, #-16]
    ff28:	movw	r3, #8
    ff2c:	bl	7218 <flatcc_json_parser_match_symbol>
    ff30:	str	r0, [fp, #-12]
    ff34:	ldr	r0, [sp, #24]
    ff38:	ldr	r1, [fp, #-12]
    ff3c:	cmp	r0, r1
    ff40:	beq	10028 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x394>
    ff44:	movw	r0, #0
    ff48:	str	r0, [sp, #4]
    ff4c:	ldr	r0, [fp, #-8]
    ff50:	ldr	r1, [fp, #-12]
    ff54:	str	r1, [sp, #24]
    ff58:	ldr	r2, [fp, #-16]
    ff5c:	add	r3, sp, #4
    ff60:	bl	bc54 <flatcc_json_parser_uint32>
    ff64:	str	r0, [fp, #-12]
    ff68:	ldr	r0, [sp, #24]
    ff6c:	ldr	r1, [fp, #-12]
    ff70:	cmp	r0, r1
    ff74:	bne	ffc8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    ff78:	ldr	r0, [fp, #-8]
    ff7c:	ldr	r1, [fp, #-12]
    ff80:	str	r1, [sp, #24]
    ff84:	ldr	r2, [fp, #-16]
    ff88:	movw	r3, #0
    ff8c:	movt	r3, #0
    ff90:	add	ip, sp, #4
    ff94:	str	ip, [sp]
    ff98:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
    ff9c:	str	r0, [fp, #-12]
    ffa0:	ldr	r0, [fp, #-12]
    ffa4:	ldr	r1, [sp, #24]
    ffa8:	cmp	r0, r1
    ffac:	beq	ffc0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x32c>
    ffb0:	ldr	r0, [fp, #-12]
    ffb4:	ldr	r1, [fp, #-16]
    ffb8:	cmp	r0, r1
    ffbc:	bne	ffc4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x330>
    ffc0:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
    ffc4:	b	ffc8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x334>
    ffc8:	ldr	r0, [sp, #4]
    ffcc:	cmp	r0, #0
    ffd0:	bne	ffe8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x354>
    ffd4:	ldr	r0, [fp, #-8]
    ffd8:	ldr	r0, [r0, #8]
    ffdc:	and	r0, r0, #2
    ffe0:	cmp	r0, #0
    ffe4:	beq	10024 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x390>
    ffe8:	ldr	r0, [fp, #-8]
    ffec:	ldr	r0, [r0]
    fff0:	movw	r1, #1
    fff4:	movw	r2, #4
    fff8:	movw	r3, #4
    fffc:	uxth	r3, r3
   10000:	bl	0 <flatcc_builder_table_add>
   10004:	str	r0, [fp, #-28]	; 0xffffffe4
   10008:	movw	r1, #0
   1000c:	cmp	r0, r1
   10010:	bne	10018 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x384>
   10014:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
   10018:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1001c:	ldr	r1, [sp, #4]
   10020:	bl	bf54 <flatbuffers_uint32_write_to_pe>
   10024:	b	1003c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3a8>
   10028:	ldr	r0, [fp, #-8]
   1002c:	ldr	r1, [fp, #-12]
   10030:	ldr	r2, [fp, #-16]
   10034:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10038:	str	r0, [fp, #-12]
   1003c:	b	10054 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c0>
   10040:	ldr	r0, [fp, #-8]
   10044:	ldr	r1, [fp, #-12]
   10048:	ldr	r2, [fp, #-16]
   1004c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10050:	str	r0, [fp, #-12]
   10054:	b	10058 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3c4>
   10058:	b	10070 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3dc>
   1005c:	ldr	r0, [fp, #-8]
   10060:	ldr	r1, [fp, #-12]
   10064:	ldr	r2, [fp, #-16]
   10068:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1006c:	str	r0, [fp, #-12]
   10070:	ldr	r0, [fp, #-8]
   10074:	ldr	r1, [fp, #-12]
   10078:	ldr	r2, [fp, #-16]
   1007c:	sub	r3, fp, #24
   10080:	bl	c534 <flatcc_json_parser_object_end>
   10084:	str	r0, [fp, #-12]
   10088:	b	fcf0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x5c>
   1008c:	ldr	r0, [fp, #-8]
   10090:	ldr	r0, [r0, #24]
   10094:	cmp	r0, #0
   10098:	beq	100a0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x40c>
   1009c:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
   100a0:	ldr	r0, [fp, #-8]
   100a4:	ldr	r0, [r0]
   100a8:	bl	0 <flatcc_builder_end_table>
   100ac:	ldr	lr, [fp, #-20]	; 0xffffffec
   100b0:	str	r0, [lr]
   100b4:	cmp	r0, #0
   100b8:	bne	100c0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x42c>
   100bc:	b	100cc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x438>
   100c0:	ldr	r0, [fp, #-12]
   100c4:	str	r0, [fp, #-4]
   100c8:	b	100e4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x450>
   100cc:	ldr	r0, [fp, #-8]
   100d0:	ldr	r1, [fp, #-12]
   100d4:	ldr	r2, [fp, #-16]
   100d8:	movw	r3, #33	; 0x21
   100dc:	bl	0 <flatcc_json_parser_set_error>
   100e0:	str	r0, [fp, #-4]
   100e4:	ldr	r0, [fp, #-4]
   100e8:	mov	sp, fp
   100ec:	pop	{fp, pc}

000100f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
   100f0:	push	{fp, lr}
   100f4:	mov	fp, sp
   100f8:	sub	sp, sp, #96	; 0x60
   100fc:	str	r0, [fp, #-8]
   10100:	str	r1, [fp, #-12]
   10104:	str	r2, [fp, #-16]
   10108:	str	r3, [fp, #-20]	; 0xffffffec
   1010c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10110:	movw	r1, #0
   10114:	str	r1, [r0]
   10118:	ldr	r0, [fp, #-8]
   1011c:	ldr	r0, [r0]
   10120:	movw	r1, #9
   10124:	bl	0 <flatcc_builder_start_table>
   10128:	cmp	r0, #0
   1012c:	beq	10134 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44>
   10130:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10134:	ldr	r0, [fp, #-8]
   10138:	ldr	r1, [fp, #-12]
   1013c:	ldr	r2, [fp, #-16]
   10140:	sub	r3, fp, #24
   10144:	bl	7050 <flatcc_json_parser_object_start>
   10148:	str	r0, [fp, #-12]
   1014c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10150:	cmp	r0, #0
   10154:	beq	10cac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbbc>
   10158:	ldr	r0, [fp, #-8]
   1015c:	ldr	r1, [fp, #-12]
   10160:	ldr	r2, [fp, #-16]
   10164:	bl	7134 <flatcc_json_parser_symbol_start>
   10168:	str	r0, [fp, #-12]
   1016c:	ldr	r0, [fp, #-12]
   10170:	ldr	r1, [fp, #-16]
   10174:	bl	71e0 <flatcc_json_parser_symbol_part>
   10178:	str	r1, [sp, #52]	; 0x34
   1017c:	str	r0, [sp, #48]	; 0x30
   10180:	ldr	r0, [sp, #52]	; 0x34
   10184:	movw	r1, #25442	; 0x6362
   10188:	movt	r1, #25443	; 0x6363
   1018c:	cmp	r0, r1
   10190:	bhi	1062c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x53c>
   10194:	b	10198 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8>
   10198:	ldr	r0, [sp, #48]	; 0x30
   1019c:	ldr	r1, [sp, #52]	; 0x34
   101a0:	movw	r2, #24929	; 0x6161
   101a4:	movt	r2, #24929	; 0x6161
   101a8:	eor	r1, r1, r2
   101ac:	movw	r2, #13108	; 0x3334
   101b0:	movt	r2, #12594	; 0x3132
   101b4:	eor	r0, r0, r2
   101b8:	orr	r0, r0, r1
   101bc:	cmp	r0, #0
   101c0:	bne	1033c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x24c>
   101c4:	b	101c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xd8>
   101c8:	ldr	r0, [fp, #-12]
   101cc:	add	r0, r0, #8
   101d0:	str	r0, [fp, #-12]
   101d4:	ldr	r0, [fp, #-12]
   101d8:	ldr	r1, [fp, #-16]
   101dc:	bl	71e0 <flatcc_json_parser_symbol_part>
   101e0:	str	r1, [sp, #52]	; 0x34
   101e4:	str	r0, [sp, #48]	; 0x30
   101e8:	ldr	r0, [sp, #52]	; 0x34
   101ec:	and	r0, r0, #-16777216	; 0xff000000
   101f0:	teq	r0, #889192448	; 0x35000000
   101f4:	bne	10324 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x234>
   101f8:	b	101fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x10c>
   101fc:	ldr	r0, [fp, #-8]
   10200:	ldr	r1, [fp, #-12]
   10204:	str	r1, [fp, #-40]	; 0xffffffd8
   10208:	ldr	r2, [fp, #-16]
   1020c:	movw	r3, #1
   10210:	bl	7218 <flatcc_json_parser_match_symbol>
   10214:	str	r0, [fp, #-12]
   10218:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1021c:	ldr	r1, [fp, #-12]
   10220:	cmp	r0, r1
   10224:	beq	1030c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x21c>
   10228:	movw	r0, #0
   1022c:	str	r0, [sp, #44]	; 0x2c
   10230:	ldr	r0, [fp, #-8]
   10234:	ldr	r1, [fp, #-12]
   10238:	str	r1, [fp, #-40]	; 0xffffffd8
   1023c:	ldr	r2, [fp, #-16]
   10240:	add	r3, sp, #44	; 0x2c
   10244:	bl	bc54 <flatcc_json_parser_uint32>
   10248:	str	r0, [fp, #-12]
   1024c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10250:	ldr	r1, [fp, #-12]
   10254:	cmp	r0, r1
   10258:	bne	102ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
   1025c:	ldr	r0, [fp, #-8]
   10260:	ldr	r1, [fp, #-12]
   10264:	str	r1, [fp, #-40]	; 0xffffffd8
   10268:	ldr	r2, [fp, #-16]
   1026c:	movw	r3, #0
   10270:	movt	r3, #0
   10274:	add	ip, sp, #44	; 0x2c
   10278:	str	ip, [sp]
   1027c:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
   10280:	str	r0, [fp, #-12]
   10284:	ldr	r0, [fp, #-12]
   10288:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1028c:	cmp	r0, r1
   10290:	beq	102a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b4>
   10294:	ldr	r0, [fp, #-12]
   10298:	ldr	r1, [fp, #-16]
   1029c:	cmp	r0, r1
   102a0:	bne	102a8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
   102a4:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   102a8:	b	102ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1bc>
   102ac:	ldr	r0, [sp, #44]	; 0x2c
   102b0:	cmp	r0, #0
   102b4:	bne	102cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1dc>
   102b8:	ldr	r0, [fp, #-8]
   102bc:	ldr	r0, [r0, #8]
   102c0:	and	r0, r0, #2
   102c4:	cmp	r0, #0
   102c8:	beq	10308 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x218>
   102cc:	ldr	r0, [fp, #-8]
   102d0:	ldr	r0, [r0]
   102d4:	movw	r1, #1
   102d8:	movw	r2, #4
   102dc:	movw	r3, #4
   102e0:	uxth	r3, r3
   102e4:	bl	0 <flatcc_builder_table_add>
   102e8:	str	r0, [fp, #-28]	; 0xffffffe4
   102ec:	movw	r1, #0
   102f0:	cmp	r0, r1
   102f4:	bne	102fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x20c>
   102f8:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   102fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10300:	ldr	r1, [sp, #44]	; 0x2c
   10304:	bl	bf54 <flatbuffers_uint32_write_to_pe>
   10308:	b	10320 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x230>
   1030c:	ldr	r0, [fp, #-8]
   10310:	ldr	r1, [fp, #-12]
   10314:	ldr	r2, [fp, #-16]
   10318:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1031c:	str	r0, [fp, #-12]
   10320:	b	10338 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x248>
   10324:	ldr	r0, [fp, #-8]
   10328:	ldr	r1, [fp, #-12]
   1032c:	ldr	r2, [fp, #-16]
   10330:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10334:	str	r0, [fp, #-12]
   10338:	b	10628 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
   1033c:	ldr	r0, [sp, #52]	; 0x34
   10340:	movw	r1, #24929	; 0x6161
   10344:	movt	r1, #24929	; 0x6161
   10348:	teq	r0, r1
   1034c:	bne	103e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f0>
   10350:	b	10354 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x264>
   10354:	ldr	r0, [fp, #-8]
   10358:	ldr	r1, [fp, #-12]
   1035c:	str	r1, [fp, #-40]	; 0xffffffd8
   10360:	ldr	r2, [fp, #-16]
   10364:	movw	r3, #4
   10368:	bl	7218 <flatcc_json_parser_match_symbol>
   1036c:	str	r0, [fp, #-12]
   10370:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10374:	ldr	r1, [fp, #-12]
   10378:	cmp	r0, r1
   1037c:	beq	103d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e8>
   10380:	ldr	r0, [fp, #-8]
   10384:	ldr	r1, [fp, #-12]
   10388:	ldr	r2, [fp, #-16]
   1038c:	sub	r3, fp, #32
   10390:	bl	0 <flatcc_json_parser_build_string>
   10394:	str	r0, [fp, #-12]
   10398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1039c:	cmp	r0, #0
   103a0:	beq	103c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d4>
   103a4:	ldr	r0, [fp, #-8]
   103a8:	ldr	r0, [r0]
   103ac:	movw	r1, #0
   103b0:	bl	0 <flatcc_builder_table_add_offset>
   103b4:	str	r0, [fp, #-36]	; 0xffffffdc
   103b8:	movw	r1, #0
   103bc:	cmp	r0, r1
   103c0:	bne	103c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2d8>
   103c4:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   103c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   103cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   103d0:	str	r0, [r1]
   103d4:	b	103dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2ec>
   103d8:	b	103e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
   103dc:	b	103e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f4>
   103e0:	b	103e8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2f8>
   103e4:	b	10624 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
   103e8:	ldr	r0, [sp, #48]	; 0x30
   103ec:	ldr	r1, [sp, #52]	; 0x34
   103f0:	movw	r2, #25186	; 0x6262
   103f4:	movt	r2, #25186	; 0x6262
   103f8:	eor	r1, r1, r2
   103fc:	movw	r2, #13108	; 0x3334
   10400:	movt	r2, #12594	; 0x3132
   10404:	eor	r0, r0, r2
   10408:	orr	r0, r0, r1
   1040c:	cmp	r0, #0
   10410:	bne	10554 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x464>
   10414:	b	10418 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x328>
   10418:	ldr	r0, [fp, #-8]
   1041c:	ldr	r1, [fp, #-12]
   10420:	str	r1, [fp, #-40]	; 0xffffffd8
   10424:	ldr	r2, [fp, #-16]
   10428:	movw	r3, #8
   1042c:	bl	7218 <flatcc_json_parser_match_symbol>
   10430:	str	r0, [fp, #-12]
   10434:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10438:	ldr	r1, [fp, #-12]
   1043c:	cmp	r0, r1
   10440:	beq	1053c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x44c>
   10444:	mov	r0, #0
   10448:	str	r0, [sp, #36]	; 0x24
   1044c:	str	r0, [sp, #32]
   10450:	ldr	r0, [fp, #-8]
   10454:	ldr	r1, [fp, #-12]
   10458:	str	r1, [fp, #-40]	; 0xffffffd8
   1045c:	ldr	r2, [fp, #-16]
   10460:	add	r3, sp, #32
   10464:	bl	b904 <flatcc_json_parser_int64>
   10468:	str	r0, [fp, #-12]
   1046c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10470:	ldr	r1, [fp, #-12]
   10474:	cmp	r0, r1
   10478:	bne	104cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
   1047c:	ldr	r0, [fp, #-8]
   10480:	ldr	r1, [fp, #-12]
   10484:	str	r1, [fp, #-40]	; 0xffffffd8
   10488:	ldr	r2, [fp, #-16]
   1048c:	movw	r3, #0
   10490:	movt	r3, #0
   10494:	add	ip, sp, #32
   10498:	str	ip, [sp]
   1049c:	bl	b9dc <flatcc_json_parser_symbolic_int64>
   104a0:	str	r0, [fp, #-12]
   104a4:	ldr	r0, [fp, #-12]
   104a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   104ac:	cmp	r0, r1
   104b0:	beq	104c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d4>
   104b4:	ldr	r0, [fp, #-12]
   104b8:	ldr	r1, [fp, #-16]
   104bc:	cmp	r0, r1
   104c0:	bne	104c8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3d8>
   104c4:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   104c8:	b	104cc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3dc>
   104cc:	ldr	r0, [sp, #32]
   104d0:	ldr	r1, [sp, #36]	; 0x24
   104d4:	orr	r0, r0, r1
   104d8:	cmp	r0, #0
   104dc:	bne	104f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x408>
   104e0:	b	104e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3f4>
   104e4:	ldr	r0, [fp, #-8]
   104e8:	ldr	r0, [r0, #8]
   104ec:	and	r0, r0, #2
   104f0:	cmp	r0, #0
   104f4:	beq	10538 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x448>
   104f8:	ldr	r0, [fp, #-8]
   104fc:	ldr	r0, [r0]
   10500:	movw	r1, #3
   10504:	movw	r2, #8
   10508:	movw	r3, #8
   1050c:	uxth	r3, r3
   10510:	bl	0 <flatcc_builder_table_add>
   10514:	str	r0, [fp, #-28]	; 0xffffffe4
   10518:	movw	r1, #0
   1051c:	cmp	r0, r1
   10520:	bne	10528 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x438>
   10524:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10528:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1052c:	ldr	r2, [sp, #32]
   10530:	ldr	r3, [sp, #36]	; 0x24
   10534:	bl	bc1c <flatbuffers_int64_write_to_pe>
   10538:	b	10550 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x460>
   1053c:	ldr	r0, [fp, #-8]
   10540:	ldr	r1, [fp, #-12]
   10544:	ldr	r2, [fp, #-16]
   10548:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1054c:	str	r0, [fp, #-12]
   10550:	b	10620 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
   10554:	ldr	r0, [sp, #52]	; 0x34
   10558:	movw	r1, #25186	; 0x6262
   1055c:	movt	r1, #25186	; 0x6262
   10560:	teq	r0, r1
   10564:	bne	10608 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x518>
   10568:	b	1056c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x47c>
   1056c:	ldr	r0, [fp, #-8]
   10570:	ldr	r1, [fp, #-12]
   10574:	str	r1, [fp, #-40]	; 0xffffffd8
   10578:	ldr	r2, [fp, #-16]
   1057c:	movw	r3, #4
   10580:	bl	7218 <flatcc_json_parser_match_symbol>
   10584:	str	r0, [fp, #-12]
   10588:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1058c:	ldr	r1, [fp, #-12]
   10590:	cmp	r0, r1
   10594:	beq	105f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x500>
   10598:	ldr	r0, [fp, #-8]
   1059c:	ldr	r1, [fp, #-12]
   105a0:	ldr	r2, [fp, #-16]
   105a4:	sub	r3, fp, #32
   105a8:	bl	0 <flatcc_json_parser_build_string>
   105ac:	str	r0, [fp, #-12]
   105b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   105b4:	cmp	r0, #0
   105b8:	beq	105dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4ec>
   105bc:	ldr	r0, [fp, #-8]
   105c0:	ldr	r0, [r0]
   105c4:	movw	r1, #2
   105c8:	bl	0 <flatcc_builder_table_add_offset>
   105cc:	str	r0, [fp, #-36]	; 0xffffffdc
   105d0:	movw	r1, #0
   105d4:	cmp	r0, r1
   105d8:	bne	105e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x4f0>
   105dc:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   105e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   105e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   105e8:	str	r0, [r1]
   105ec:	b	10604 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x514>
   105f0:	ldr	r0, [fp, #-8]
   105f4:	ldr	r1, [fp, #-12]
   105f8:	ldr	r2, [fp, #-16]
   105fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10600:	str	r0, [fp, #-12]
   10604:	b	1061c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x52c>
   10608:	ldr	r0, [fp, #-8]
   1060c:	ldr	r1, [fp, #-12]
   10610:	ldr	r2, [fp, #-16]
   10614:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10618:	str	r0, [fp, #-12]
   1061c:	b	10620 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
   10620:	b	10624 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
   10624:	b	10628 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x538>
   10628:	b	10c90 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
   1062c:	ldr	r0, [sp, #48]	; 0x30
   10630:	ldr	r1, [sp, #52]	; 0x34
   10634:	movw	r2, #25443	; 0x6363
   10638:	movt	r2, #25443	; 0x6363
   1063c:	eor	r1, r1, r2
   10640:	movw	r2, #13108	; 0x3334
   10644:	movt	r2, #12594	; 0x3132
   10648:	eor	r0, r0, r2
   1064c:	orr	r0, r0, r1
   10650:	cmp	r0, #0
   10654:	bne	108f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x808>
   10658:	b	1065c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x56c>
   1065c:	ldr	r0, [fp, #-8]
   10660:	ldr	r1, [fp, #-12]
   10664:	str	r1, [fp, #-40]	; 0xffffffd8
   10668:	ldr	r2, [fp, #-16]
   1066c:	movw	r3, #8
   10670:	bl	7218 <flatcc_json_parser_match_symbol>
   10674:	str	r0, [fp, #-12]
   10678:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1067c:	ldr	r1, [fp, #-12]
   10680:	cmp	r0, r1
   10684:	beq	10780 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x690>
   10688:	mov	r0, #0
   1068c:	str	r0, [sp, #28]
   10690:	str	r0, [sp, #24]
   10694:	ldr	r0, [fp, #-8]
   10698:	ldr	r1, [fp, #-12]
   1069c:	str	r1, [fp, #-40]	; 0xffffffd8
   106a0:	ldr	r2, [fp, #-16]
   106a4:	add	r3, sp, #24
   106a8:	bl	b904 <flatcc_json_parser_int64>
   106ac:	str	r0, [fp, #-12]
   106b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   106b4:	ldr	r1, [fp, #-12]
   106b8:	cmp	r0, r1
   106bc:	bne	10710 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
   106c0:	ldr	r0, [fp, #-8]
   106c4:	ldr	r1, [fp, #-12]
   106c8:	str	r1, [fp, #-40]	; 0xffffffd8
   106cc:	ldr	r2, [fp, #-16]
   106d0:	movw	r3, #0
   106d4:	movt	r3, #0
   106d8:	add	ip, sp, #24
   106dc:	str	ip, [sp]
   106e0:	bl	b9dc <flatcc_json_parser_symbolic_int64>
   106e4:	str	r0, [fp, #-12]
   106e8:	ldr	r0, [fp, #-12]
   106ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   106f0:	cmp	r0, r1
   106f4:	beq	10708 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x618>
   106f8:	ldr	r0, [fp, #-12]
   106fc:	ldr	r1, [fp, #-16]
   10700:	cmp	r0, r1
   10704:	bne	1070c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x61c>
   10708:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   1070c:	b	10710 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x620>
   10710:	ldr	r0, [sp, #24]
   10714:	ldr	r1, [sp, #28]
   10718:	orr	r0, r0, r1
   1071c:	cmp	r0, #0
   10720:	bne	1073c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x64c>
   10724:	b	10728 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x638>
   10728:	ldr	r0, [fp, #-8]
   1072c:	ldr	r0, [r0, #8]
   10730:	and	r0, r0, #2
   10734:	cmp	r0, #0
   10738:	beq	1077c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x68c>
   1073c:	ldr	r0, [fp, #-8]
   10740:	ldr	r0, [r0]
   10744:	movw	r1, #5
   10748:	movw	r2, #8
   1074c:	movw	r3, #8
   10750:	uxth	r3, r3
   10754:	bl	0 <flatcc_builder_table_add>
   10758:	str	r0, [fp, #-28]	; 0xffffffe4
   1075c:	movw	r1, #0
   10760:	cmp	r0, r1
   10764:	bne	1076c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x67c>
   10768:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   1076c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10770:	ldr	r2, [sp, #24]
   10774:	ldr	r3, [sp, #28]
   10778:	bl	bc1c <flatbuffers_int64_write_to_pe>
   1077c:	b	108f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
   10780:	ldr	r0, [fp, #-12]
   10784:	add	r0, r0, #8
   10788:	str	r0, [fp, #-12]
   1078c:	ldr	r0, [fp, #-12]
   10790:	ldr	r1, [fp, #-16]
   10794:	bl	71e0 <flatcc_json_parser_symbol_part>
   10798:	str	r1, [sp, #52]	; 0x34
   1079c:	str	r0, [sp, #48]	; 0x30
   107a0:	ldr	r0, [sp, #52]	; 0x34
   107a4:	and	r0, r0, #-16777216	; 0xff000000
   107a8:	teq	r0, #889192448	; 0x35000000
   107ac:	bne	108dc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7ec>
   107b0:	b	107b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x6c4>
   107b4:	ldr	r0, [fp, #-8]
   107b8:	ldr	r1, [fp, #-12]
   107bc:	str	r1, [fp, #-40]	; 0xffffffd8
   107c0:	ldr	r2, [fp, #-16]
   107c4:	movw	r3, #1
   107c8:	bl	7218 <flatcc_json_parser_match_symbol>
   107cc:	str	r0, [fp, #-12]
   107d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   107d4:	ldr	r1, [fp, #-12]
   107d8:	cmp	r0, r1
   107dc:	beq	108c4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d4>
   107e0:	movw	r0, #0
   107e4:	str	r0, [sp, #20]
   107e8:	ldr	r0, [fp, #-8]
   107ec:	ldr	r1, [fp, #-12]
   107f0:	str	r1, [fp, #-40]	; 0xffffffd8
   107f4:	ldr	r2, [fp, #-16]
   107f8:	add	r3, sp, #20
   107fc:	bl	bc54 <flatcc_json_parser_uint32>
   10800:	str	r0, [fp, #-12]
   10804:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10808:	ldr	r1, [fp, #-12]
   1080c:	cmp	r0, r1
   10810:	bne	10864 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
   10814:	ldr	r0, [fp, #-8]
   10818:	ldr	r1, [fp, #-12]
   1081c:	str	r1, [fp, #-40]	; 0xffffffd8
   10820:	ldr	r2, [fp, #-16]
   10824:	movw	r3, #0
   10828:	movt	r3, #0
   1082c:	add	ip, sp, #20
   10830:	str	ip, [sp]
   10834:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
   10838:	str	r0, [fp, #-12]
   1083c:	ldr	r0, [fp, #-12]
   10840:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10844:	cmp	r0, r1
   10848:	beq	1085c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x76c>
   1084c:	ldr	r0, [fp, #-12]
   10850:	ldr	r1, [fp, #-16]
   10854:	cmp	r0, r1
   10858:	bne	10860 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x770>
   1085c:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10860:	b	10864 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x774>
   10864:	ldr	r0, [sp, #20]
   10868:	cmp	r0, #0
   1086c:	bne	10884 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x794>
   10870:	ldr	r0, [fp, #-8]
   10874:	ldr	r0, [r0, #8]
   10878:	and	r0, r0, #2
   1087c:	cmp	r0, #0
   10880:	beq	108c0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7d0>
   10884:	ldr	r0, [fp, #-8]
   10888:	ldr	r0, [r0]
   1088c:	movw	r1, #6
   10890:	movw	r2, #4
   10894:	movw	r3, #4
   10898:	uxth	r3, r3
   1089c:	bl	0 <flatcc_builder_table_add>
   108a0:	str	r0, [fp, #-28]	; 0xffffffe4
   108a4:	movw	r1, #0
   108a8:	cmp	r0, r1
   108ac:	bne	108b4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7c4>
   108b0:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   108b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   108b8:	ldr	r1, [sp, #20]
   108bc:	bl	bf54 <flatbuffers_uint32_write_to_pe>
   108c0:	b	108d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x7e8>
   108c4:	ldr	r0, [fp, #-8]
   108c8:	ldr	r1, [fp, #-12]
   108cc:	ldr	r2, [fp, #-16]
   108d0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   108d4:	str	r0, [fp, #-12]
   108d8:	b	108f0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x800>
   108dc:	ldr	r0, [fp, #-8]
   108e0:	ldr	r1, [fp, #-12]
   108e4:	ldr	r2, [fp, #-16]
   108e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   108ec:	str	r0, [fp, #-12]
   108f0:	b	108f4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x804>
   108f4:	b	10c8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
   108f8:	ldr	r0, [sp, #52]	; 0x34
   108fc:	movw	r1, #25443	; 0x6363
   10900:	movt	r1, #25443	; 0x6363
   10904:	teq	r0, r1
   10908:	bne	1099c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8ac>
   1090c:	b	10910 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x820>
   10910:	ldr	r0, [fp, #-8]
   10914:	ldr	r1, [fp, #-12]
   10918:	str	r1, [fp, #-40]	; 0xffffffd8
   1091c:	ldr	r2, [fp, #-16]
   10920:	movw	r3, #4
   10924:	bl	7218 <flatcc_json_parser_match_symbol>
   10928:	str	r0, [fp, #-12]
   1092c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10930:	ldr	r1, [fp, #-12]
   10934:	cmp	r0, r1
   10938:	beq	10994 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a4>
   1093c:	ldr	r0, [fp, #-8]
   10940:	ldr	r1, [fp, #-12]
   10944:	ldr	r2, [fp, #-16]
   10948:	sub	r3, fp, #32
   1094c:	bl	0 <flatcc_json_parser_build_string>
   10950:	str	r0, [fp, #-12]
   10954:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10958:	cmp	r0, #0
   1095c:	beq	10980 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x890>
   10960:	ldr	r0, [fp, #-8]
   10964:	ldr	r0, [r0]
   10968:	movw	r1, #4
   1096c:	bl	0 <flatcc_builder_table_add_offset>
   10970:	str	r0, [fp, #-36]	; 0xffffffdc
   10974:	movw	r1, #0
   10978:	cmp	r0, r1
   1097c:	bne	10984 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x894>
   10980:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10988:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1098c:	str	r0, [r1]
   10990:	b	10998 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8a8>
   10994:	b	109a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
   10998:	b	109a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b0>
   1099c:	b	109a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8b4>
   109a0:	b	10c88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
   109a4:	ldr	r0, [sp, #48]	; 0x30
   109a8:	ldr	r1, [sp, #52]	; 0x34
   109ac:	movw	r2, #25700	; 0x6464
   109b0:	movt	r2, #25700	; 0x6464
   109b4:	eor	r1, r1, r2
   109b8:	movw	r2, #13108	; 0x3334
   109bc:	movt	r2, #12594	; 0x3132
   109c0:	eor	r0, r0, r2
   109c4:	orr	r0, r0, r1
   109c8:	cmp	r0, #0
   109cc:	bne	10c70 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb80>
   109d0:	b	109d4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x8e4>
   109d4:	ldr	r0, [fp, #-8]
   109d8:	ldr	r1, [fp, #-12]
   109dc:	str	r1, [fp, #-40]	; 0xffffffd8
   109e0:	ldr	r2, [fp, #-16]
   109e4:	movw	r3, #8
   109e8:	bl	7218 <flatcc_json_parser_match_symbol>
   109ec:	str	r0, [fp, #-12]
   109f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   109f4:	ldr	r1, [fp, #-12]
   109f8:	cmp	r0, r1
   109fc:	beq	10af8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa08>
   10a00:	mov	r0, #0
   10a04:	str	r0, [sp, #12]
   10a08:	str	r0, [sp, #8]
   10a0c:	ldr	r0, [fp, #-8]
   10a10:	ldr	r1, [fp, #-12]
   10a14:	str	r1, [fp, #-40]	; 0xffffffd8
   10a18:	ldr	r2, [fp, #-16]
   10a1c:	add	r3, sp, #8
   10a20:	bl	b904 <flatcc_json_parser_int64>
   10a24:	str	r0, [fp, #-12]
   10a28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10a2c:	ldr	r1, [fp, #-12]
   10a30:	cmp	r0, r1
   10a34:	bne	10a88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
   10a38:	ldr	r0, [fp, #-8]
   10a3c:	ldr	r1, [fp, #-12]
   10a40:	str	r1, [fp, #-40]	; 0xffffffd8
   10a44:	ldr	r2, [fp, #-16]
   10a48:	movw	r3, #0
   10a4c:	movt	r3, #0
   10a50:	add	ip, sp, #8
   10a54:	str	ip, [sp]
   10a58:	bl	b9dc <flatcc_json_parser_symbolic_int64>
   10a5c:	str	r0, [fp, #-12]
   10a60:	ldr	r0, [fp, #-12]
   10a64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10a68:	cmp	r0, r1
   10a6c:	beq	10a80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x990>
   10a70:	ldr	r0, [fp, #-12]
   10a74:	ldr	r1, [fp, #-16]
   10a78:	cmp	r0, r1
   10a7c:	bne	10a84 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x994>
   10a80:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10a84:	b	10a88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x998>
   10a88:	ldr	r0, [sp, #8]
   10a8c:	ldr	r1, [sp, #12]
   10a90:	orr	r0, r0, r1
   10a94:	cmp	r0, #0
   10a98:	bne	10ab4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9c4>
   10a9c:	b	10aa0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9b0>
   10aa0:	ldr	r0, [fp, #-8]
   10aa4:	ldr	r0, [r0, #8]
   10aa8:	and	r0, r0, #2
   10aac:	cmp	r0, #0
   10ab0:	beq	10af4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa04>
   10ab4:	ldr	r0, [fp, #-8]
   10ab8:	ldr	r0, [r0]
   10abc:	movw	r1, #7
   10ac0:	movw	r2, #8
   10ac4:	movw	r3, #8
   10ac8:	uxth	r3, r3
   10acc:	bl	0 <flatcc_builder_table_add>
   10ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   10ad4:	movw	r1, #0
   10ad8:	cmp	r0, r1
   10adc:	bne	10ae4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x9f4>
   10ae0:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10ae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10ae8:	ldr	r2, [sp, #8]
   10aec:	ldr	r3, [sp, #12]
   10af0:	bl	bc1c <flatbuffers_int64_write_to_pe>
   10af4:	b	10c6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
   10af8:	ldr	r0, [fp, #-12]
   10afc:	add	r0, r0, #8
   10b00:	str	r0, [fp, #-12]
   10b04:	ldr	r0, [fp, #-12]
   10b08:	ldr	r1, [fp, #-16]
   10b0c:	bl	71e0 <flatcc_json_parser_symbol_part>
   10b10:	str	r1, [sp, #52]	; 0x34
   10b14:	str	r0, [sp, #48]	; 0x30
   10b18:	ldr	r0, [sp, #52]	; 0x34
   10b1c:	and	r0, r0, #-16777216	; 0xff000000
   10b20:	teq	r0, #889192448	; 0x35000000
   10b24:	bne	10c54 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb64>
   10b28:	b	10b2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa3c>
   10b2c:	ldr	r0, [fp, #-8]
   10b30:	ldr	r1, [fp, #-12]
   10b34:	str	r1, [fp, #-40]	; 0xffffffd8
   10b38:	ldr	r2, [fp, #-16]
   10b3c:	movw	r3, #1
   10b40:	bl	7218 <flatcc_json_parser_match_symbol>
   10b44:	str	r0, [fp, #-12]
   10b48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10b4c:	ldr	r1, [fp, #-12]
   10b50:	cmp	r0, r1
   10b54:	beq	10c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb4c>
   10b58:	movw	r0, #0
   10b5c:	str	r0, [sp, #4]
   10b60:	ldr	r0, [fp, #-8]
   10b64:	ldr	r1, [fp, #-12]
   10b68:	str	r1, [fp, #-40]	; 0xffffffd8
   10b6c:	ldr	r2, [fp, #-16]
   10b70:	add	r3, sp, #4
   10b74:	bl	bc54 <flatcc_json_parser_uint32>
   10b78:	str	r0, [fp, #-12]
   10b7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10b80:	ldr	r1, [fp, #-12]
   10b84:	cmp	r0, r1
   10b88:	bne	10bdc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
   10b8c:	ldr	r0, [fp, #-8]
   10b90:	ldr	r1, [fp, #-12]
   10b94:	str	r1, [fp, #-40]	; 0xffffffd8
   10b98:	ldr	r2, [fp, #-16]
   10b9c:	movw	r3, #0
   10ba0:	movt	r3, #0
   10ba4:	add	ip, sp, #4
   10ba8:	str	ip, [sp]
   10bac:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
   10bb0:	str	r0, [fp, #-12]
   10bb4:	ldr	r0, [fp, #-12]
   10bb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10bbc:	cmp	r0, r1
   10bc0:	beq	10bd4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae4>
   10bc4:	ldr	r0, [fp, #-12]
   10bc8:	ldr	r1, [fp, #-16]
   10bcc:	cmp	r0, r1
   10bd0:	bne	10bd8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae8>
   10bd4:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10bd8:	b	10bdc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaec>
   10bdc:	ldr	r0, [sp, #4]
   10be0:	cmp	r0, #0
   10be4:	bne	10bfc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb0c>
   10be8:	ldr	r0, [fp, #-8]
   10bec:	ldr	r0, [r0, #8]
   10bf0:	and	r0, r0, #2
   10bf4:	cmp	r0, #0
   10bf8:	beq	10c38 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb48>
   10bfc:	ldr	r0, [fp, #-8]
   10c00:	ldr	r0, [r0]
   10c04:	movw	r1, #8
   10c08:	movw	r2, #4
   10c0c:	movw	r3, #4
   10c10:	uxth	r3, r3
   10c14:	bl	0 <flatcc_builder_table_add>
   10c18:	str	r0, [fp, #-28]	; 0xffffffe4
   10c1c:	movw	r1, #0
   10c20:	cmp	r0, r1
   10c24:	bne	10c2c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb3c>
   10c28:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10c2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10c30:	ldr	r1, [sp, #4]
   10c34:	bl	bf54 <flatbuffers_uint32_write_to_pe>
   10c38:	b	10c50 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb60>
   10c3c:	ldr	r0, [fp, #-8]
   10c40:	ldr	r1, [fp, #-12]
   10c44:	ldr	r2, [fp, #-16]
   10c48:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10c4c:	str	r0, [fp, #-12]
   10c50:	b	10c68 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb78>
   10c54:	ldr	r0, [fp, #-8]
   10c58:	ldr	r1, [fp, #-12]
   10c5c:	ldr	r2, [fp, #-16]
   10c60:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10c64:	str	r0, [fp, #-12]
   10c68:	b	10c6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb7c>
   10c6c:	b	10c84 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb94>
   10c70:	ldr	r0, [fp, #-8]
   10c74:	ldr	r1, [fp, #-12]
   10c78:	ldr	r2, [fp, #-16]
   10c7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10c80:	str	r0, [fp, #-12]
   10c84:	b	10c88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb98>
   10c88:	b	10c8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb9c>
   10c8c:	b	10c90 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xba0>
   10c90:	ldr	r0, [fp, #-8]
   10c94:	ldr	r1, [fp, #-12]
   10c98:	ldr	r2, [fp, #-16]
   10c9c:	sub	r3, fp, #24
   10ca0:	bl	c534 <flatcc_json_parser_object_end>
   10ca4:	str	r0, [fp, #-12]
   10ca8:	b	1014c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5c>
   10cac:	ldr	r0, [fp, #-8]
   10cb0:	ldr	r0, [r0, #24]
   10cb4:	cmp	r0, #0
   10cb8:	beq	10cc0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbd0>
   10cbc:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10cc0:	ldr	r0, [fp, #-8]
   10cc4:	ldr	r0, [r0]
   10cc8:	bl	0 <flatcc_builder_end_table>
   10ccc:	ldr	lr, [fp, #-20]	; 0xffffffec
   10cd0:	str	r0, [lr]
   10cd4:	cmp	r0, #0
   10cd8:	bne	10ce0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbf0>
   10cdc:	b	10cec <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xbfc>
   10ce0:	ldr	r0, [fp, #-12]
   10ce4:	str	r0, [fp, #-4]
   10ce8:	b	10d04 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xc14>
   10cec:	ldr	r0, [fp, #-8]
   10cf0:	ldr	r1, [fp, #-12]
   10cf4:	ldr	r2, [fp, #-16]
   10cf8:	movw	r3, #33	; 0x21
   10cfc:	bl	0 <flatcc_json_parser_set_error>
   10d00:	str	r0, [fp, #-4]
   10d04:	ldr	r0, [fp, #-4]
   10d08:	mov	sp, fp
   10d0c:	pop	{fp, pc}

00010d10 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
   10d10:	push	{fp, lr}
   10d14:	mov	fp, sp
   10d18:	sub	sp, sp, #72	; 0x48
   10d1c:	str	r0, [fp, #-8]
   10d20:	str	r1, [fp, #-12]
   10d24:	str	r2, [fp, #-16]
   10d28:	str	r3, [fp, #-20]	; 0xffffffec
   10d2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d30:	movw	r1, #0
   10d34:	str	r1, [r0]
   10d38:	ldr	r0, [fp, #-8]
   10d3c:	ldr	r0, [r0]
   10d40:	movw	r1, #2
   10d44:	bl	0 <flatcc_builder_start_table>
   10d48:	cmp	r0, #0
   10d4c:	beq	10d54 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x44>
   10d50:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   10d54:	ldr	r0, [fp, #-8]
   10d58:	ldr	r1, [fp, #-12]
   10d5c:	ldr	r2, [fp, #-16]
   10d60:	sub	r3, fp, #24
   10d64:	bl	7050 <flatcc_json_parser_object_start>
   10d68:	str	r0, [fp, #-12]
   10d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d70:	cmp	r0, #0
   10d74:	beq	1116c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x45c>
   10d78:	ldr	r0, [fp, #-8]
   10d7c:	ldr	r1, [fp, #-12]
   10d80:	ldr	r2, [fp, #-16]
   10d84:	bl	7134 <flatcc_json_parser_symbol_start>
   10d88:	str	r0, [fp, #-12]
   10d8c:	ldr	r0, [fp, #-12]
   10d90:	ldr	r1, [fp, #-16]
   10d94:	bl	71e0 <flatcc_json_parser_symbol_part>
   10d98:	str	r1, [sp, #28]
   10d9c:	str	r0, [sp, #24]
   10da0:	ldr	r0, [sp, #24]
   10da4:	ldr	r1, [sp, #28]
   10da8:	movw	r2, #24929	; 0x6161
   10dac:	movt	r2, #24929	; 0x6161
   10db0:	eor	r1, r1, r2
   10db4:	movw	r2, #25186	; 0x6262
   10db8:	movt	r2, #24418	; 0x5f62
   10dbc:	eor	r0, r0, r2
   10dc0:	orr	r0, r0, r1
   10dc4:	cmp	r0, #0
   10dc8:	bne	1113c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x42c>
   10dcc:	b	10dd0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0xc0>
   10dd0:	ldr	r0, [fp, #-12]
   10dd4:	add	r0, r0, #8
   10dd8:	str	r0, [fp, #-12]
   10ddc:	ldr	r0, [fp, #-12]
   10de0:	ldr	r1, [fp, #-16]
   10de4:	bl	71e0 <flatcc_json_parser_symbol_part>
   10de8:	str	r1, [sp, #28]
   10dec:	str	r0, [sp, #24]
   10df0:	ldr	r0, [sp, #24]
   10df4:	ldr	r1, [sp, #28]
   10df8:	movw	lr, #29556	; 0x7374
   10dfc:	movt	lr, #25183	; 0x625f
   10e00:	eor	r1, r1, lr
   10e04:	movw	lr, #29791	; 0x745f
   10e08:	movt	lr, #24946	; 0x6172
   10e0c:	eor	r0, r0, lr
   10e10:	orr	r0, r0, r1
   10e14:	cmp	r0, #0
   10e18:	bne	10fac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x29c>
   10e1c:	b	10e20 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x110>
   10e20:	ldr	r0, [fp, #-12]
   10e24:	add	r0, r0, #8
   10e28:	str	r0, [fp, #-12]
   10e2c:	ldr	r0, [fp, #-12]
   10e30:	ldr	r1, [fp, #-16]
   10e34:	bl	71e0 <flatcc_json_parser_symbol_part>
   10e38:	str	r1, [sp, #28]
   10e3c:	str	r0, [sp, #24]
   10e40:	ldr	r0, [sp, #24]
   10e44:	ldr	r1, [sp, #28]
   10e48:	and	r0, r0, #-16777216	; 0xff000000
   10e4c:	movw	lr, #25968	; 0x6570
   10e50:	movt	lr, #29556	; 0x7374
   10e54:	eor	r1, r1, lr
   10e58:	eor	r0, r0, #1929379840	; 0x73000000
   10e5c:	orr	r0, r0, r1
   10e60:	cmp	r0, #0
   10e64:	bne	10f94 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x284>
   10e68:	b	10e6c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x15c>
   10e6c:	ldr	r0, [fp, #-8]
   10e70:	ldr	r1, [fp, #-12]
   10e74:	str	r1, [sp, #32]
   10e78:	ldr	r2, [fp, #-16]
   10e7c:	movw	r3, #5
   10e80:	bl	7218 <flatcc_json_parser_match_symbol>
   10e84:	str	r0, [fp, #-12]
   10e88:	ldr	r0, [sp, #32]
   10e8c:	ldr	r1, [fp, #-12]
   10e90:	cmp	r0, r1
   10e94:	beq	10f7c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x26c>
   10e98:	movw	r0, #0
   10e9c:	str	r0, [sp, #20]
   10ea0:	ldr	r0, [fp, #-8]
   10ea4:	ldr	r1, [fp, #-12]
   10ea8:	str	r1, [sp, #32]
   10eac:	ldr	r2, [fp, #-16]
   10eb0:	add	r3, sp, #20
   10eb4:	bl	bc54 <flatcc_json_parser_uint32>
   10eb8:	str	r0, [fp, #-12]
   10ebc:	ldr	r0, [sp, #32]
   10ec0:	ldr	r1, [fp, #-12]
   10ec4:	cmp	r0, r1
   10ec8:	bne	10f1c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x20c>
   10ecc:	ldr	r0, [fp, #-8]
   10ed0:	ldr	r1, [fp, #-12]
   10ed4:	str	r1, [sp, #32]
   10ed8:	ldr	r2, [fp, #-16]
   10edc:	movw	r3, #0
   10ee0:	movt	r3, #0
   10ee4:	add	ip, sp, #20
   10ee8:	str	ip, [sp]
   10eec:	bl	bd2c <flatcc_json_parser_symbolic_uint32>
   10ef0:	str	r0, [fp, #-12]
   10ef4:	ldr	r0, [fp, #-12]
   10ef8:	ldr	r1, [sp, #32]
   10efc:	cmp	r0, r1
   10f00:	beq	10f14 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x204>
   10f04:	ldr	r0, [fp, #-12]
   10f08:	ldr	r1, [fp, #-16]
   10f0c:	cmp	r0, r1
   10f10:	bne	10f18 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x208>
   10f14:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   10f18:	b	10f1c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x20c>
   10f1c:	ldr	r0, [sp, #20]
   10f20:	cmp	r0, #0
   10f24:	bne	10f3c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x22c>
   10f28:	ldr	r0, [fp, #-8]
   10f2c:	ldr	r0, [r0, #8]
   10f30:	and	r0, r0, #2
   10f34:	cmp	r0, #0
   10f38:	beq	10f78 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x268>
   10f3c:	ldr	r0, [fp, #-8]
   10f40:	ldr	r0, [r0]
   10f44:	movw	r1, #1
   10f48:	movw	r2, #4
   10f4c:	movw	r3, #4
   10f50:	uxth	r3, r3
   10f54:	bl	0 <flatcc_builder_table_add>
   10f58:	str	r0, [fp, #-28]	; 0xffffffe4
   10f5c:	movw	r1, #0
   10f60:	cmp	r0, r1
   10f64:	bne	10f6c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x25c>
   10f68:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   10f6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10f70:	ldr	r1, [sp, #20]
   10f74:	bl	bf54 <flatbuffers_uint32_write_to_pe>
   10f78:	b	10f90 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x280>
   10f7c:	ldr	r0, [fp, #-8]
   10f80:	ldr	r1, [fp, #-12]
   10f84:	ldr	r2, [fp, #-16]
   10f88:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10f8c:	str	r0, [fp, #-12]
   10f90:	b	10fa8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x298>
   10f94:	ldr	r0, [fp, #-8]
   10f98:	ldr	r1, [fp, #-12]
   10f9c:	ldr	r2, [fp, #-16]
   10fa0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   10fa4:	str	r0, [fp, #-12]
   10fa8:	b	11138 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x428>
   10fac:	ldr	r0, [sp, #24]
   10fb0:	ldr	r1, [sp, #28]
   10fb4:	movw	r2, #24435	; 0x5f73
   10fb8:	movt	r2, #98	; 0x62
   10fbc:	eor	r2, r2, r1, lsr #8
   10fc0:	lsr	r0, r0, #8
   10fc4:	orr	r0, r0, r1, lsl #24
   10fc8:	movw	r1, #28787	; 0x7073
   10fcc:	movt	r1, #29797	; 0x7465
   10fd0:	eor	r0, r0, r1
   10fd4:	orr	r0, r0, r2
   10fd8:	cmp	r0, #0
   10fdc:	bne	11120 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x410>
   10fe0:	b	10fe4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x2d4>
   10fe4:	ldr	r0, [fp, #-8]
   10fe8:	ldr	r1, [fp, #-12]
   10fec:	str	r1, [sp, #32]
   10ff0:	ldr	r2, [fp, #-16]
   10ff4:	movw	r3, #7
   10ff8:	bl	7218 <flatcc_json_parser_match_symbol>
   10ffc:	str	r0, [fp, #-12]
   11000:	ldr	r0, [sp, #32]
   11004:	ldr	r1, [fp, #-12]
   11008:	cmp	r0, r1
   1100c:	beq	11108 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f8>
   11010:	mov	r0, #0
   11014:	str	r0, [sp, #12]
   11018:	str	r0, [sp, #8]
   1101c:	ldr	r0, [fp, #-8]
   11020:	ldr	r1, [fp, #-12]
   11024:	str	r1, [sp, #32]
   11028:	ldr	r2, [fp, #-16]
   1102c:	add	r3, sp, #8
   11030:	bl	b904 <flatcc_json_parser_int64>
   11034:	str	r0, [fp, #-12]
   11038:	ldr	r0, [sp, #32]
   1103c:	ldr	r1, [fp, #-12]
   11040:	cmp	r0, r1
   11044:	bne	11098 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x388>
   11048:	ldr	r0, [fp, #-8]
   1104c:	ldr	r1, [fp, #-12]
   11050:	str	r1, [sp, #32]
   11054:	ldr	r2, [fp, #-16]
   11058:	movw	r3, #0
   1105c:	movt	r3, #0
   11060:	add	ip, sp, #8
   11064:	str	ip, [sp]
   11068:	bl	b9dc <flatcc_json_parser_symbolic_int64>
   1106c:	str	r0, [fp, #-12]
   11070:	ldr	r0, [fp, #-12]
   11074:	ldr	r1, [sp, #32]
   11078:	cmp	r0, r1
   1107c:	beq	11090 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x380>
   11080:	ldr	r0, [fp, #-12]
   11084:	ldr	r1, [fp, #-16]
   11088:	cmp	r0, r1
   1108c:	bne	11094 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x384>
   11090:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   11094:	b	11098 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x388>
   11098:	ldr	r0, [sp, #8]
   1109c:	ldr	r1, [sp, #12]
   110a0:	orr	r0, r0, r1
   110a4:	cmp	r0, #0
   110a8:	bne	110c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3b4>
   110ac:	b	110b0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3a0>
   110b0:	ldr	r0, [fp, #-8]
   110b4:	ldr	r0, [r0, #8]
   110b8:	and	r0, r0, #2
   110bc:	cmp	r0, #0
   110c0:	beq	11104 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3f4>
   110c4:	ldr	r0, [fp, #-8]
   110c8:	ldr	r0, [r0]
   110cc:	movw	r1, #0
   110d0:	movw	r2, #8
   110d4:	movw	r3, #8
   110d8:	uxth	r3, r3
   110dc:	bl	0 <flatcc_builder_table_add>
   110e0:	str	r0, [fp, #-28]	; 0xffffffe4
   110e4:	movw	r1, #0
   110e8:	cmp	r0, r1
   110ec:	bne	110f4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3e4>
   110f0:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   110f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   110f8:	ldr	r2, [sp, #8]
   110fc:	ldr	r3, [sp, #12]
   11100:	bl	bc1c <flatbuffers_int64_write_to_pe>
   11104:	b	1111c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x40c>
   11108:	ldr	r0, [fp, #-8]
   1110c:	ldr	r1, [fp, #-12]
   11110:	ldr	r2, [fp, #-16]
   11114:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11118:	str	r0, [fp, #-12]
   1111c:	b	11134 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x424>
   11120:	ldr	r0, [fp, #-8]
   11124:	ldr	r1, [fp, #-12]
   11128:	ldr	r2, [fp, #-16]
   1112c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11130:	str	r0, [fp, #-12]
   11134:	b	11138 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x428>
   11138:	b	11150 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x440>
   1113c:	ldr	r0, [fp, #-8]
   11140:	ldr	r1, [fp, #-12]
   11144:	ldr	r2, [fp, #-16]
   11148:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1114c:	str	r0, [fp, #-12]
   11150:	ldr	r0, [fp, #-8]
   11154:	ldr	r1, [fp, #-12]
   11158:	ldr	r2, [fp, #-16]
   1115c:	sub	r3, fp, #24
   11160:	bl	c534 <flatcc_json_parser_object_end>
   11164:	str	r0, [fp, #-12]
   11168:	b	10d6c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x5c>
   1116c:	ldr	r0, [fp, #-8]
   11170:	ldr	r0, [r0, #24]
   11174:	cmp	r0, #0
   11178:	beq	11180 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x470>
   1117c:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   11180:	ldr	r0, [fp, #-8]
   11184:	ldr	r0, [r0]
   11188:	bl	0 <flatcc_builder_end_table>
   1118c:	ldr	lr, [fp, #-20]	; 0xffffffec
   11190:	str	r0, [lr]
   11194:	cmp	r0, #0
   11198:	bne	111a0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x490>
   1119c:	b	111ac <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x49c>
   111a0:	ldr	r0, [fp, #-12]
   111a4:	str	r0, [fp, #-4]
   111a8:	b	111c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x4b4>
   111ac:	ldr	r0, [fp, #-8]
   111b0:	ldr	r1, [fp, #-12]
   111b4:	ldr	r2, [fp, #-16]
   111b8:	movw	r3, #33	; 0x21
   111bc:	bl	0 <flatcc_json_parser_set_error>
   111c0:	str	r0, [fp, #-4]
   111c4:	ldr	r0, [fp, #-4]
   111c8:	mov	sp, fp
   111cc:	pop	{fp, pc}

000111d0 <monster_test_local_Fantasy_json_parser_enum>:
   111d0:	push	{fp, lr}
   111d4:	mov	fp, sp
   111d8:	sub	sp, sp, #56	; 0x38
   111dc:	ldr	ip, [fp, #12]
   111e0:	ldr	lr, [fp, #8]
   111e4:	str	r0, [fp, #-8]
   111e8:	str	r1, [fp, #-12]
   111ec:	str	r2, [fp, #-16]
   111f0:	str	r3, [fp, #-20]	; 0xffffffec
   111f4:	ldr	r0, [fp, #-12]
   111f8:	str	r0, [fp, #-24]	; 0xffffffe8
   111fc:	ldr	r0, [fp, #-12]
   11200:	ldr	r1, [fp, #-16]
   11204:	str	lr, [sp, #12]
   11208:	str	ip, [sp, #8]
   1120c:	bl	71e0 <flatcc_json_parser_symbol_part>
   11210:	str	r1, [sp, #20]
   11214:	str	r0, [sp, #16]
   11218:	ldr	r0, [sp, #16]
   1121c:	ldr	r1, [sp, #20]
   11220:	movw	r2, #24946	; 0x6172
   11224:	movt	r2, #17256	; 0x4368
   11228:	eor	r1, r1, r2
   1122c:	movw	r2, #29797	; 0x7465
   11230:	movt	r2, #24931	; 0x6163
   11234:	eor	r0, r0, r2
   11238:	orr	r0, r0, r1
   1123c:	cmp	r0, #0
   11240:	bne	112f4 <monster_test_local_Fantasy_json_parser_enum+0x124>
   11244:	b	11248 <monster_test_local_Fantasy_json_parser_enum+0x78>
   11248:	ldr	r0, [fp, #-12]
   1124c:	add	r0, r0, #8
   11250:	str	r0, [fp, #-12]
   11254:	ldr	r0, [fp, #-12]
   11258:	ldr	r1, [fp, #-16]
   1125c:	bl	71e0 <flatcc_json_parser_symbol_part>
   11260:	str	r1, [sp, #20]
   11264:	str	r0, [sp, #16]
   11268:	ldr	r0, [sp, #20]
   1126c:	and	r0, r0, #-16777216	; 0xff000000
   11270:	teq	r0, #1912602624	; 0x72000000
   11274:	bne	112e4 <monster_test_local_Fantasy_json_parser_enum+0x114>
   11278:	b	1127c <monster_test_local_Fantasy_json_parser_enum+0xac>
   1127c:	ldr	r0, [fp, #-8]
   11280:	ldr	r1, [fp, #-12]
   11284:	str	r1, [sp, #28]
   11288:	ldr	r2, [fp, #-16]
   1128c:	movw	r3, #1
   11290:	bl	c8a8 <flatcc_json_parser_match_scope>
   11294:	str	r0, [fp, #-12]
   11298:	ldr	r0, [fp, #-12]
   1129c:	ldr	r1, [sp, #28]
   112a0:	cmp	r0, r1
   112a4:	beq	112d4 <monster_test_local_Fantasy_json_parser_enum+0x104>
   112a8:	ldr	r0, [fp, #-8]
   112ac:	ldr	r1, [fp, #-12]
   112b0:	ldr	r2, [fp, #-16]
   112b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   112b8:	ldr	ip, [fp, #8]
   112bc:	ldr	lr, [fp, #12]
   112c0:	str	ip, [sp]
   112c4:	str	lr, [sp, #4]
   112c8:	bl	d428 <Fantasy_Character_parse_json_enum>
   112cc:	str	r0, [fp, #-12]
   112d0:	b	112e0 <monster_test_local_Fantasy_json_parser_enum+0x110>
   112d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112d8:	str	r0, [fp, #-4]
   112dc:	b	11308 <monster_test_local_Fantasy_json_parser_enum+0x138>
   112e0:	b	112f0 <monster_test_local_Fantasy_json_parser_enum+0x120>
   112e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112e8:	str	r0, [fp, #-4]
   112ec:	b	11308 <monster_test_local_Fantasy_json_parser_enum+0x138>
   112f0:	b	11300 <monster_test_local_Fantasy_json_parser_enum+0x130>
   112f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112f8:	str	r0, [fp, #-4]
   112fc:	b	11308 <monster_test_local_Fantasy_json_parser_enum+0x138>
   11300:	ldr	r0, [fp, #-12]
   11304:	str	r0, [fp, #-4]
   11308:	ldr	r0, [fp, #-4]
   1130c:	mov	sp, fp
   11310:	pop	{fp, pc}

00011314 <Fantasy_Character_parse_json_union>:
   11314:	push	{fp, lr}
   11318:	mov	fp, sp
   1131c:	sub	sp, sp, #32
   11320:	ldr	ip, [fp, #8]
   11324:	str	r0, [fp, #-8]
   11328:	str	r1, [fp, #-12]
   1132c:	str	r2, [sp, #16]
   11330:	strb	r3, [sp, #15]
   11334:	ldr	r0, [fp, #8]
   11338:	mov	r1, #0
   1133c:	str	r1, [r0]
   11340:	ldrb	r0, [sp, #15]
   11344:	mov	r1, r0
   11348:	cmp	r0, #0
   1134c:	str	ip, [sp, #8]
   11350:	str	r1, [sp, #4]
   11354:	beq	113bc <Fantasy_Character_parse_json_union+0xa8>
   11358:	b	1135c <Fantasy_Character_parse_json_union+0x48>
   1135c:	ldr	r0, [sp, #4]
   11360:	cmp	r0, #2
   11364:	beq	113d4 <Fantasy_Character_parse_json_union+0xc0>
   11368:	b	1136c <Fantasy_Character_parse_json_union+0x58>
   1136c:	ldr	r0, [sp, #4]
   11370:	cmp	r0, #8
   11374:	beq	113f0 <Fantasy_Character_parse_json_union+0xdc>
   11378:	b	1137c <Fantasy_Character_parse_json_union+0x68>
   1137c:	ldr	r0, [sp, #4]
   11380:	cmp	r0, #9
   11384:	beq	1140c <Fantasy_Character_parse_json_union+0xf8>
   11388:	b	1138c <Fantasy_Character_parse_json_union+0x78>
   1138c:	ldr	r0, [sp, #4]
   11390:	cmp	r0, #10
   11394:	beq	11428 <Fantasy_Character_parse_json_union+0x114>
   11398:	b	1139c <Fantasy_Character_parse_json_union+0x88>
   1139c:	ldr	r0, [sp, #4]
   113a0:	cmp	r0, #11
   113a4:	beq	11444 <Fantasy_Character_parse_json_union+0x130>
   113a8:	b	113ac <Fantasy_Character_parse_json_union+0x98>
   113ac:	ldr	r0, [sp, #4]
   113b0:	cmp	r0, #255	; 0xff
   113b4:	beq	11460 <Fantasy_Character_parse_json_union+0x14c>
   113b8:	b	1147c <Fantasy_Character_parse_json_union+0x168>
   113bc:	ldr	r0, [fp, #-8]
   113c0:	ldr	r1, [fp, #-12]
   113c4:	ldr	r2, [sp, #16]
   113c8:	bl	defc <flatcc_json_parser_none>
   113cc:	str	r0, [fp, #-4]
   113d0:	b	11514 <Fantasy_Character_parse_json_union+0x200>
   113d4:	ldr	r0, [fp, #-8]
   113d8:	ldr	r1, [fp, #-12]
   113dc:	ldr	r2, [sp, #16]
   113e0:	ldr	r3, [fp, #8]
   113e4:	bl	11608 <Fantasy_Attacker_parse_json_table>
   113e8:	str	r0, [fp, #-12]
   113ec:	b	114c4 <Fantasy_Character_parse_json_union+0x1b0>
   113f0:	ldr	r0, [fp, #-8]
   113f4:	ldr	r1, [fp, #-12]
   113f8:	ldr	r2, [sp, #16]
   113fc:	ldr	r3, [fp, #8]
   11400:	bl	11940 <Fantasy_Rapunzel_parse_json_struct>
   11404:	str	r0, [fp, #-12]
   11408:	b	114c4 <Fantasy_Character_parse_json_union+0x1b0>
   1140c:	ldr	r0, [fp, #-8]
   11410:	ldr	r1, [fp, #-12]
   11414:	ldr	r2, [sp, #16]
   11418:	ldr	r3, [fp, #8]
   1141c:	bl	11a0c <Fantasy_BookReader_parse_json_struct>
   11420:	str	r0, [fp, #-12]
   11424:	b	114c4 <Fantasy_Character_parse_json_union+0x1b0>
   11428:	ldr	r0, [fp, #-8]
   1142c:	ldr	r1, [fp, #-12]
   11430:	ldr	r2, [sp, #16]
   11434:	ldr	r3, [fp, #8]
   11438:	bl	11a0c <Fantasy_BookReader_parse_json_struct>
   1143c:	str	r0, [fp, #-12]
   11440:	b	114c4 <Fantasy_Character_parse_json_union+0x1b0>
   11444:	ldr	r0, [fp, #-8]
   11448:	ldr	r1, [fp, #-12]
   1144c:	ldr	r2, [sp, #16]
   11450:	ldr	r3, [fp, #8]
   11454:	bl	0 <flatcc_json_parser_build_string>
   11458:	str	r0, [fp, #-12]
   1145c:	b	114c4 <Fantasy_Character_parse_json_union+0x1b0>
   11460:	ldr	r0, [fp, #-8]
   11464:	ldr	r1, [fp, #-12]
   11468:	ldr	r2, [sp, #16]
   1146c:	ldr	r3, [fp, #8]
   11470:	bl	0 <flatcc_json_parser_build_string>
   11474:	str	r0, [fp, #-12]
   11478:	b	114c4 <Fantasy_Character_parse_json_union+0x1b0>
   1147c:	ldr	r0, [fp, #-8]
   11480:	ldr	r0, [r0, #8]
   11484:	and	r0, r0, #1
   11488:	cmp	r0, #0
   1148c:	bne	114ac <Fantasy_Character_parse_json_union+0x198>
   11490:	ldr	r0, [fp, #-8]
   11494:	ldr	r1, [fp, #-12]
   11498:	ldr	r2, [sp, #16]
   1149c:	movw	r3, #15
   114a0:	bl	0 <flatcc_json_parser_set_error>
   114a4:	str	r0, [fp, #-4]
   114a8:	b	11514 <Fantasy_Character_parse_json_union+0x200>
   114ac:	ldr	r0, [fp, #-8]
   114b0:	ldr	r1, [fp, #-12]
   114b4:	ldr	r2, [sp, #16]
   114b8:	bl	0 <flatcc_json_parser_generic_json>
   114bc:	str	r0, [fp, #-4]
   114c0:	b	11514 <Fantasy_Character_parse_json_union+0x200>
   114c4:	ldr	r0, [fp, #-8]
   114c8:	ldr	r0, [r0, #24]
   114cc:	cmp	r0, #0
   114d0:	beq	114e0 <Fantasy_Character_parse_json_union+0x1cc>
   114d4:	ldr	r0, [fp, #-12]
   114d8:	str	r0, [fp, #-4]
   114dc:	b	11514 <Fantasy_Character_parse_json_union+0x200>
   114e0:	ldr	r0, [fp, #8]
   114e4:	ldr	r0, [r0]
   114e8:	cmp	r0, #0
   114ec:	bne	1150c <Fantasy_Character_parse_json_union+0x1f8>
   114f0:	ldr	r0, [fp, #-8]
   114f4:	ldr	r1, [fp, #-12]
   114f8:	ldr	r2, [sp, #16]
   114fc:	movw	r3, #33	; 0x21
   11500:	bl	0 <flatcc_json_parser_set_error>
   11504:	str	r0, [fp, #-4]
   11508:	b	11514 <Fantasy_Character_parse_json_union+0x200>
   1150c:	ldr	r0, [fp, #-12]
   11510:	str	r0, [fp, #-4]
   11514:	ldr	r0, [fp, #-4]
   11518:	mov	sp, fp
   1151c:	pop	{fp, pc}

00011520 <Fantasy_Character_json_union_accept_type>:
   11520:	sub	sp, sp, #12
   11524:	strb	r0, [sp, #7]
   11528:	ldrb	r0, [sp, #7]
   1152c:	mov	r1, r0
   11530:	cmp	r0, #0
   11534:	str	r1, [sp]
   11538:	beq	115a0 <Fantasy_Character_json_union_accept_type+0x80>
   1153c:	b	11540 <Fantasy_Character_json_union_accept_type+0x20>
   11540:	ldr	r0, [sp]
   11544:	cmp	r0, #2
   11548:	beq	115ac <Fantasy_Character_json_union_accept_type+0x8c>
   1154c:	b	11550 <Fantasy_Character_json_union_accept_type+0x30>
   11550:	ldr	r0, [sp]
   11554:	cmp	r0, #8
   11558:	beq	115b8 <Fantasy_Character_json_union_accept_type+0x98>
   1155c:	b	11560 <Fantasy_Character_json_union_accept_type+0x40>
   11560:	ldr	r0, [sp]
   11564:	cmp	r0, #9
   11568:	beq	115c4 <Fantasy_Character_json_union_accept_type+0xa4>
   1156c:	b	11570 <Fantasy_Character_json_union_accept_type+0x50>
   11570:	ldr	r0, [sp]
   11574:	cmp	r0, #10
   11578:	beq	115d0 <Fantasy_Character_json_union_accept_type+0xb0>
   1157c:	b	11580 <Fantasy_Character_json_union_accept_type+0x60>
   11580:	ldr	r0, [sp]
   11584:	cmp	r0, #11
   11588:	beq	115dc <Fantasy_Character_json_union_accept_type+0xbc>
   1158c:	b	11590 <Fantasy_Character_json_union_accept_type+0x70>
   11590:	ldr	r0, [sp]
   11594:	cmp	r0, #255	; 0xff
   11598:	beq	115e8 <Fantasy_Character_json_union_accept_type+0xc8>
   1159c:	b	115f4 <Fantasy_Character_json_union_accept_type+0xd4>
   115a0:	movw	r0, #1
   115a4:	str	r0, [sp, #8]
   115a8:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115ac:	movw	r0, #1
   115b0:	str	r0, [sp, #8]
   115b4:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115b8:	movw	r0, #1
   115bc:	str	r0, [sp, #8]
   115c0:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115c4:	movw	r0, #1
   115c8:	str	r0, [sp, #8]
   115cc:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115d0:	movw	r0, #1
   115d4:	str	r0, [sp, #8]
   115d8:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115dc:	movw	r0, #1
   115e0:	str	r0, [sp, #8]
   115e4:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115e8:	movw	r0, #1
   115ec:	str	r0, [sp, #8]
   115f0:	b	115fc <Fantasy_Character_json_union_accept_type+0xdc>
   115f4:	movw	r0, #0
   115f8:	str	r0, [sp, #8]
   115fc:	ldr	r0, [sp, #8]
   11600:	add	sp, sp, #12
   11604:	bx	lr

00011608 <Fantasy_Attacker_parse_json_table>:
   11608:	push	{fp, lr}
   1160c:	mov	fp, sp
   11610:	sub	sp, sp, #56	; 0x38
   11614:	str	r0, [fp, #-8]
   11618:	str	r1, [fp, #-12]
   1161c:	str	r2, [fp, #-16]
   11620:	str	r3, [fp, #-20]	; 0xffffffec
   11624:	ldr	r0, [fp, #-20]	; 0xffffffec
   11628:	movw	r1, #0
   1162c:	str	r1, [r0]
   11630:	ldr	r0, [fp, #-8]
   11634:	ldr	r0, [r0]
   11638:	movw	r1, #1
   1163c:	bl	0 <flatcc_builder_start_table>
   11640:	cmp	r0, #0
   11644:	beq	1164c <Fantasy_Attacker_parse_json_table+0x44>
   11648:	b	1191c <Fantasy_Attacker_parse_json_table+0x314>
   1164c:	ldr	r0, [fp, #-8]
   11650:	ldr	r1, [fp, #-12]
   11654:	ldr	r2, [fp, #-16]
   11658:	sub	r3, fp, #24
   1165c:	bl	7050 <flatcc_json_parser_object_start>
   11660:	str	r0, [fp, #-12]
   11664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11668:	cmp	r0, #0
   1166c:	beq	118dc <Fantasy_Attacker_parse_json_table+0x2d4>
   11670:	ldr	r0, [fp, #-8]
   11674:	ldr	r1, [fp, #-12]
   11678:	ldr	r2, [fp, #-16]
   1167c:	bl	7134 <flatcc_json_parser_symbol_start>
   11680:	str	r0, [fp, #-12]
   11684:	ldr	r0, [fp, #-12]
   11688:	ldr	r1, [fp, #-16]
   1168c:	bl	71e0 <flatcc_json_parser_symbol_part>
   11690:	str	r1, [sp, #12]
   11694:	str	r0, [sp, #8]
   11698:	ldr	r0, [sp, #8]
   1169c:	ldr	r1, [sp, #12]
   116a0:	movw	r2, #28530	; 0x6f72
   116a4:	movt	r2, #29559	; 0x7377
   116a8:	eor	r1, r1, r2
   116ac:	movw	r2, #24948	; 0x6174
   116b0:	movt	r2, #25695	; 0x645f
   116b4:	eor	r0, r0, r2
   116b8:	orr	r0, r0, r1
   116bc:	cmp	r0, #0
   116c0:	bne	118ac <Fantasy_Attacker_parse_json_table+0x2a4>
   116c4:	b	116c8 <Fantasy_Attacker_parse_json_table+0xc0>
   116c8:	ldr	r0, [fp, #-12]
   116cc:	add	r0, r0, #8
   116d0:	str	r0, [fp, #-12]
   116d4:	ldr	r0, [fp, #-12]
   116d8:	ldr	r1, [fp, #-16]
   116dc:	bl	71e0 <flatcc_json_parser_symbol_part>
   116e0:	str	r1, [sp, #12]
   116e4:	str	r0, [sp, #8]
   116e8:	ldr	r0, [sp, #8]
   116ec:	ldr	r1, [sp, #12]
   116f0:	movw	lr, #25451	; 0x636b
   116f4:	movt	lr, #29793	; 0x7461
   116f8:	eor	r1, r1, lr
   116fc:	movw	lr, #24941	; 0x616d
   11700:	movt	lr, #24420	; 0x5f64
   11704:	eor	r0, r0, lr
   11708:	orr	r0, r0, r1
   1170c:	cmp	r0, #0
   11710:	bne	11894 <Fantasy_Attacker_parse_json_table+0x28c>
   11714:	b	11718 <Fantasy_Attacker_parse_json_table+0x110>
   11718:	ldr	r0, [fp, #-12]
   1171c:	add	r0, r0, #8
   11720:	str	r0, [fp, #-12]
   11724:	ldr	r0, [fp, #-12]
   11728:	ldr	r1, [fp, #-16]
   1172c:	bl	71e0 <flatcc_json_parser_symbol_part>
   11730:	str	r1, [sp, #12]
   11734:	str	r0, [sp, #8]
   11738:	ldr	r0, [sp, #12]
   1173c:	bic	r0, r0, #255	; 0xff
   11740:	movw	r1, #25856	; 0x6500
   11744:	movt	r1, #24935	; 0x6167
   11748:	teq	r0, r1
   1174c:	bne	1187c <Fantasy_Attacker_parse_json_table+0x274>
   11750:	b	11754 <Fantasy_Attacker_parse_json_table+0x14c>
   11754:	ldr	r0, [fp, #-8]
   11758:	ldr	r1, [fp, #-12]
   1175c:	str	r1, [sp, #16]
   11760:	ldr	r2, [fp, #-16]
   11764:	movw	r3, #3
   11768:	bl	7218 <flatcc_json_parser_match_symbol>
   1176c:	str	r0, [fp, #-12]
   11770:	ldr	r0, [sp, #16]
   11774:	ldr	r1, [fp, #-12]
   11778:	cmp	r0, r1
   1177c:	beq	11864 <Fantasy_Attacker_parse_json_table+0x25c>
   11780:	movw	r0, #0
   11784:	str	r0, [sp, #4]
   11788:	ldr	r0, [fp, #-8]
   1178c:	ldr	r1, [fp, #-12]
   11790:	str	r1, [sp, #16]
   11794:	ldr	r2, [fp, #-16]
   11798:	add	r3, sp, #4
   1179c:	bl	b5d8 <flatcc_json_parser_int32>
   117a0:	str	r0, [fp, #-12]
   117a4:	ldr	r0, [sp, #16]
   117a8:	ldr	r1, [fp, #-12]
   117ac:	cmp	r0, r1
   117b0:	bne	11804 <Fantasy_Attacker_parse_json_table+0x1fc>
   117b4:	ldr	r0, [fp, #-8]
   117b8:	ldr	r1, [fp, #-12]
   117bc:	str	r1, [sp, #16]
   117c0:	ldr	r2, [fp, #-16]
   117c4:	movw	r3, #0
   117c8:	movt	r3, #0
   117cc:	add	ip, sp, #4
   117d0:	str	ip, [sp]
   117d4:	bl	b6b0 <flatcc_json_parser_symbolic_int32>
   117d8:	str	r0, [fp, #-12]
   117dc:	ldr	r0, [fp, #-12]
   117e0:	ldr	r1, [sp, #16]
   117e4:	cmp	r0, r1
   117e8:	beq	117fc <Fantasy_Attacker_parse_json_table+0x1f4>
   117ec:	ldr	r0, [fp, #-12]
   117f0:	ldr	r1, [fp, #-16]
   117f4:	cmp	r0, r1
   117f8:	bne	11800 <Fantasy_Attacker_parse_json_table+0x1f8>
   117fc:	b	1191c <Fantasy_Attacker_parse_json_table+0x314>
   11800:	b	11804 <Fantasy_Attacker_parse_json_table+0x1fc>
   11804:	ldr	r0, [sp, #4]
   11808:	cmp	r0, #0
   1180c:	bne	11824 <Fantasy_Attacker_parse_json_table+0x21c>
   11810:	ldr	r0, [fp, #-8]
   11814:	ldr	r0, [r0, #8]
   11818:	and	r0, r0, #2
   1181c:	cmp	r0, #0
   11820:	beq	11860 <Fantasy_Attacker_parse_json_table+0x258>
   11824:	ldr	r0, [fp, #-8]
   11828:	ldr	r0, [r0]
   1182c:	movw	r1, #0
   11830:	movw	r2, #4
   11834:	movw	r3, #4
   11838:	uxth	r3, r3
   1183c:	bl	0 <flatcc_builder_table_add>
   11840:	str	r0, [sp, #28]
   11844:	movw	r1, #0
   11848:	cmp	r0, r1
   1184c:	bne	11854 <Fantasy_Attacker_parse_json_table+0x24c>
   11850:	b	1191c <Fantasy_Attacker_parse_json_table+0x314>
   11854:	ldr	r0, [sp, #28]
   11858:	ldr	r1, [sp, #4]
   1185c:	bl	b8d8 <flatbuffers_int32_write_to_pe>
   11860:	b	11878 <Fantasy_Attacker_parse_json_table+0x270>
   11864:	ldr	r0, [fp, #-8]
   11868:	ldr	r1, [fp, #-12]
   1186c:	ldr	r2, [fp, #-16]
   11870:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11874:	str	r0, [fp, #-12]
   11878:	b	11890 <Fantasy_Attacker_parse_json_table+0x288>
   1187c:	ldr	r0, [fp, #-8]
   11880:	ldr	r1, [fp, #-12]
   11884:	ldr	r2, [fp, #-16]
   11888:	bl	0 <flatcc_json_parser_unmatched_symbol>
   1188c:	str	r0, [fp, #-12]
   11890:	b	118a8 <Fantasy_Attacker_parse_json_table+0x2a0>
   11894:	ldr	r0, [fp, #-8]
   11898:	ldr	r1, [fp, #-12]
   1189c:	ldr	r2, [fp, #-16]
   118a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
   118a4:	str	r0, [fp, #-12]
   118a8:	b	118c0 <Fantasy_Attacker_parse_json_table+0x2b8>
   118ac:	ldr	r0, [fp, #-8]
   118b0:	ldr	r1, [fp, #-12]
   118b4:	ldr	r2, [fp, #-16]
   118b8:	bl	0 <flatcc_json_parser_unmatched_symbol>
   118bc:	str	r0, [fp, #-12]
   118c0:	ldr	r0, [fp, #-8]
   118c4:	ldr	r1, [fp, #-12]
   118c8:	ldr	r2, [fp, #-16]
   118cc:	sub	r3, fp, #24
   118d0:	bl	c534 <flatcc_json_parser_object_end>
   118d4:	str	r0, [fp, #-12]
   118d8:	b	11664 <Fantasy_Attacker_parse_json_table+0x5c>
   118dc:	ldr	r0, [fp, #-8]
   118e0:	ldr	r0, [r0, #24]
   118e4:	cmp	r0, #0
   118e8:	beq	118f0 <Fantasy_Attacker_parse_json_table+0x2e8>
   118ec:	b	1191c <Fantasy_Attacker_parse_json_table+0x314>
   118f0:	ldr	r0, [fp, #-8]
   118f4:	ldr	r0, [r0]
   118f8:	bl	0 <flatcc_builder_end_table>
   118fc:	ldr	lr, [fp, #-20]	; 0xffffffec
   11900:	str	r0, [lr]
   11904:	cmp	r0, #0
   11908:	bne	11910 <Fantasy_Attacker_parse_json_table+0x308>
   1190c:	b	1191c <Fantasy_Attacker_parse_json_table+0x314>
   11910:	ldr	r0, [fp, #-12]
   11914:	str	r0, [fp, #-4]
   11918:	b	11934 <Fantasy_Attacker_parse_json_table+0x32c>
   1191c:	ldr	r0, [fp, #-8]
   11920:	ldr	r1, [fp, #-12]
   11924:	ldr	r2, [fp, #-16]
   11928:	movw	r3, #33	; 0x21
   1192c:	bl	0 <flatcc_json_parser_set_error>
   11930:	str	r0, [fp, #-4]
   11934:	ldr	r0, [fp, #-4]
   11938:	mov	sp, fp
   1193c:	pop	{fp, pc}

00011940 <Fantasy_Rapunzel_parse_json_struct>:
   11940:	push	{fp, lr}
   11944:	mov	fp, sp
   11948:	sub	sp, sp, #24
   1194c:	str	r0, [fp, #-8]
   11950:	str	r1, [sp, #12]
   11954:	str	r2, [sp, #8]
   11958:	str	r3, [sp, #4]
   1195c:	ldr	r0, [sp, #4]
   11960:	movw	r1, #0
   11964:	str	r1, [r0]
   11968:	ldr	r0, [fp, #-8]
   1196c:	ldr	r0, [r0]
   11970:	movw	r1, #2
   11974:	movw	r2, #2
   11978:	uxth	r2, r2
   1197c:	bl	0 <flatcc_builder_start_struct>
   11980:	str	r0, [sp]
   11984:	movw	r1, #0
   11988:	cmp	r0, r1
   1198c:	bne	11994 <Fantasy_Rapunzel_parse_json_struct+0x54>
   11990:	b	119e8 <Fantasy_Rapunzel_parse_json_struct+0xa8>
   11994:	ldr	r0, [fp, #-8]
   11998:	ldr	r1, [sp, #12]
   1199c:	ldr	r2, [sp, #8]
   119a0:	ldr	r3, [sp]
   119a4:	bl	11ad8 <Fantasy_Rapunzel_parse_json_struct_inline>
   119a8:	str	r0, [sp, #12]
   119ac:	ldr	r0, [sp, #12]
   119b0:	ldr	r1, [sp, #8]
   119b4:	cmp	r0, r1
   119b8:	beq	119d8 <Fantasy_Rapunzel_parse_json_struct+0x98>
   119bc:	ldr	r0, [fp, #-8]
   119c0:	ldr	r0, [r0]
   119c4:	bl	0 <flatcc_builder_end_struct>
   119c8:	ldr	lr, [sp, #4]
   119cc:	str	r0, [lr]
   119d0:	cmp	r0, #0
   119d4:	bne	119dc <Fantasy_Rapunzel_parse_json_struct+0x9c>
   119d8:	b	119e8 <Fantasy_Rapunzel_parse_json_struct+0xa8>
   119dc:	ldr	r0, [sp, #12]
   119e0:	str	r0, [fp, #-4]
   119e4:	b	11a00 <Fantasy_Rapunzel_parse_json_struct+0xc0>
   119e8:	ldr	r0, [fp, #-8]
   119ec:	ldr	r1, [sp, #12]
   119f0:	ldr	r2, [sp, #8]
   119f4:	movw	r3, #33	; 0x21
   119f8:	bl	0 <flatcc_json_parser_set_error>
   119fc:	str	r0, [fp, #-4]
   11a00:	ldr	r0, [fp, #-4]
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}

00011a0c <Fantasy_BookReader_parse_json_struct>:
   11a0c:	push	{fp, lr}
   11a10:	mov	fp, sp
   11a14:	sub	sp, sp, #24
   11a18:	str	r0, [fp, #-8]
   11a1c:	str	r1, [sp, #12]
   11a20:	str	r2, [sp, #8]
   11a24:	str	r3, [sp, #4]
   11a28:	ldr	r0, [sp, #4]
   11a2c:	movw	r1, #0
   11a30:	str	r1, [r0]
   11a34:	ldr	r0, [fp, #-8]
   11a38:	ldr	r0, [r0]
   11a3c:	movw	r1, #4
   11a40:	movw	r2, #4
   11a44:	uxth	r2, r2
   11a48:	bl	0 <flatcc_builder_start_struct>
   11a4c:	str	r0, [sp]
   11a50:	movw	r1, #0
   11a54:	cmp	r0, r1
   11a58:	bne	11a60 <Fantasy_BookReader_parse_json_struct+0x54>
   11a5c:	b	11ab4 <Fantasy_BookReader_parse_json_struct+0xa8>
   11a60:	ldr	r0, [fp, #-8]
   11a64:	ldr	r1, [sp, #12]
   11a68:	ldr	r2, [sp, #8]
   11a6c:	ldr	r3, [sp]
   11a70:	bl	12108 <Fantasy_BookReader_parse_json_struct_inline>
   11a74:	str	r0, [sp, #12]
   11a78:	ldr	r0, [sp, #12]
   11a7c:	ldr	r1, [sp, #8]
   11a80:	cmp	r0, r1
   11a84:	beq	11aa4 <Fantasy_BookReader_parse_json_struct+0x98>
   11a88:	ldr	r0, [fp, #-8]
   11a8c:	ldr	r0, [r0]
   11a90:	bl	0 <flatcc_builder_end_struct>
   11a94:	ldr	lr, [sp, #4]
   11a98:	str	r0, [lr]
   11a9c:	cmp	r0, #0
   11aa0:	bne	11aa8 <Fantasy_BookReader_parse_json_struct+0x9c>
   11aa4:	b	11ab4 <Fantasy_BookReader_parse_json_struct+0xa8>
   11aa8:	ldr	r0, [sp, #12]
   11aac:	str	r0, [fp, #-4]
   11ab0:	b	11acc <Fantasy_BookReader_parse_json_struct+0xc0>
   11ab4:	ldr	r0, [fp, #-8]
   11ab8:	ldr	r1, [sp, #12]
   11abc:	ldr	r2, [sp, #8]
   11ac0:	movw	r3, #33	; 0x21
   11ac4:	bl	0 <flatcc_json_parser_set_error>
   11ac8:	str	r0, [fp, #-4]
   11acc:	ldr	r0, [fp, #-4]
   11ad0:	mov	sp, fp
   11ad4:	pop	{fp, pc}

00011ad8 <Fantasy_Rapunzel_parse_json_struct_inline>:
   11ad8:	push	{fp, lr}
   11adc:	mov	fp, sp
   11ae0:	sub	sp, sp, #56	; 0x38
   11ae4:	str	r0, [fp, #-8]
   11ae8:	str	r1, [fp, #-12]
   11aec:	str	r2, [fp, #-16]
   11af0:	str	r3, [fp, #-20]	; 0xffffffec
   11af4:	ldr	r0, [fp, #-8]
   11af8:	ldr	r1, [fp, #-12]
   11afc:	ldr	r2, [fp, #-16]
   11b00:	sub	r3, fp, #24
   11b04:	bl	7050 <flatcc_json_parser_object_start>
   11b08:	str	r0, [fp, #-12]
   11b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b10:	cmp	r0, #0
   11b14:	beq	11cd8 <Fantasy_Rapunzel_parse_json_struct_inline+0x200>
   11b18:	ldr	r0, [fp, #-8]
   11b1c:	ldr	r1, [fp, #-12]
   11b20:	ldr	r2, [fp, #-16]
   11b24:	bl	7134 <flatcc_json_parser_symbol_start>
   11b28:	str	r0, [fp, #-12]
   11b2c:	ldr	r0, [fp, #-12]
   11b30:	ldr	r1, [fp, #-16]
   11b34:	bl	71e0 <flatcc_json_parser_symbol_part>
   11b38:	str	r1, [sp, #12]
   11b3c:	str	r0, [sp, #8]
   11b40:	ldr	r0, [sp, #8]
   11b44:	ldr	r1, [sp, #12]
   11b48:	movw	r2, #26994	; 0x6972
   11b4c:	movt	r2, #26721	; 0x6861
   11b50:	eor	r1, r1, r2
   11b54:	movw	r2, #25966	; 0x656e
   11b58:	movt	r2, #24428	; 0x5f6c
   11b5c:	eor	r0, r0, r2
   11b60:	orr	r0, r0, r1
   11b64:	cmp	r0, #0
   11b68:	bne	11ca8 <Fantasy_Rapunzel_parse_json_struct_inline+0x1d0>
   11b6c:	b	11b70 <Fantasy_Rapunzel_parse_json_struct_inline+0x98>
   11b70:	ldr	r0, [fp, #-12]
   11b74:	add	r0, r0, #8
   11b78:	str	r0, [fp, #-12]
   11b7c:	ldr	r0, [fp, #-12]
   11b80:	ldr	r1, [fp, #-16]
   11b84:	bl	71e0 <flatcc_json_parser_symbol_part>
   11b88:	str	r1, [sp, #12]
   11b8c:	str	r0, [sp, #8]
   11b90:	ldr	r0, [sp, #12]
   11b94:	bic	r0, r0, #255	; 0xff
   11b98:	movw	r1, #26624	; 0x6800
   11b9c:	movt	r1, #26484	; 0x6774
   11ba0:	teq	r0, r1
   11ba4:	bne	11c90 <Fantasy_Rapunzel_parse_json_struct_inline+0x1b8>
   11ba8:	b	11bac <Fantasy_Rapunzel_parse_json_struct_inline+0xd4>
   11bac:	ldr	r0, [fp, #-8]
   11bb0:	ldr	r1, [fp, #-12]
   11bb4:	str	r1, [sp, #20]
   11bb8:	ldr	r2, [fp, #-16]
   11bbc:	movw	r3, #3
   11bc0:	bl	7218 <flatcc_json_parser_match_symbol>
   11bc4:	str	r0, [fp, #-12]
   11bc8:	ldr	r0, [sp, #20]
   11bcc:	ldr	r1, [fp, #-12]
   11bd0:	cmp	r0, r1
   11bd4:	beq	11c78 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a0>
   11bd8:	movw	r0, #0
   11bdc:	strh	r0, [sp, #6]
   11be0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11be4:	add	r0, r0, #0
   11be8:	str	r0, [sp, #24]
   11bec:	ldr	r0, [fp, #-8]
   11bf0:	ldr	r1, [fp, #-12]
   11bf4:	str	r1, [sp, #20]
   11bf8:	ldr	r2, [fp, #-16]
   11bfc:	add	r3, sp, #6
   11c00:	bl	11d08 <flatcc_json_parser_uint16>
   11c04:	str	r0, [fp, #-12]
   11c08:	ldr	r0, [sp, #20]
   11c0c:	ldr	r1, [fp, #-12]
   11c10:	cmp	r0, r1
   11c14:	bne	11c68 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
   11c18:	ldr	r0, [fp, #-8]
   11c1c:	ldr	r1, [fp, #-12]
   11c20:	str	r1, [sp, #20]
   11c24:	ldr	r2, [fp, #-16]
   11c28:	movw	r3, #0
   11c2c:	movt	r3, #0
   11c30:	add	ip, sp, #6
   11c34:	str	ip, [sp]
   11c38:	bl	11de4 <flatcc_json_parser_symbolic_uint16>
   11c3c:	str	r0, [fp, #-12]
   11c40:	ldr	r0, [fp, #-12]
   11c44:	ldr	r1, [sp, #20]
   11c48:	cmp	r0, r1
   11c4c:	beq	11c60 <Fantasy_Rapunzel_parse_json_struct_inline+0x188>
   11c50:	ldr	r0, [fp, #-12]
   11c54:	ldr	r1, [fp, #-16]
   11c58:	cmp	r0, r1
   11c5c:	bne	11c64 <Fantasy_Rapunzel_parse_json_struct_inline+0x18c>
   11c60:	b	11ce4 <Fantasy_Rapunzel_parse_json_struct_inline+0x20c>
   11c64:	b	11c68 <Fantasy_Rapunzel_parse_json_struct_inline+0x190>
   11c68:	ldr	r0, [sp, #24]
   11c6c:	ldrh	r1, [sp, #6]
   11c70:	bl	12010 <flatbuffers_uint16_write_to_pe>
   11c74:	b	11c8c <Fantasy_Rapunzel_parse_json_struct_inline+0x1b4>
   11c78:	ldr	r0, [fp, #-8]
   11c7c:	ldr	r1, [fp, #-12]
   11c80:	ldr	r2, [fp, #-16]
   11c84:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11c88:	str	r0, [fp, #-12]
   11c8c:	b	11ca4 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
   11c90:	ldr	r0, [fp, #-8]
   11c94:	ldr	r1, [fp, #-12]
   11c98:	ldr	r2, [fp, #-16]
   11c9c:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11ca0:	str	r0, [fp, #-12]
   11ca4:	b	11cbc <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
   11ca8:	ldr	r0, [fp, #-8]
   11cac:	ldr	r1, [fp, #-12]
   11cb0:	ldr	r2, [fp, #-16]
   11cb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   11cb8:	str	r0, [fp, #-12]
   11cbc:	ldr	r0, [fp, #-8]
   11cc0:	ldr	r1, [fp, #-12]
   11cc4:	ldr	r2, [fp, #-16]
   11cc8:	sub	r3, fp, #24
   11ccc:	bl	c534 <flatcc_json_parser_object_end>
   11cd0:	str	r0, [fp, #-12]
   11cd4:	b	11b0c <Fantasy_Rapunzel_parse_json_struct_inline+0x34>
   11cd8:	ldr	r0, [fp, #-12]
   11cdc:	str	r0, [fp, #-4]
   11ce0:	b	11cfc <Fantasy_Rapunzel_parse_json_struct_inline+0x224>
   11ce4:	ldr	r0, [fp, #-8]
   11ce8:	ldr	r1, [fp, #-12]
   11cec:	ldr	r2, [fp, #-16]
   11cf0:	movw	r3, #33	; 0x21
   11cf4:	bl	0 <flatcc_json_parser_set_error>
   11cf8:	str	r0, [fp, #-4]
   11cfc:	ldr	r0, [fp, #-4]
   11d00:	mov	sp, fp
   11d04:	pop	{fp, pc}

00011d08 <flatcc_json_parser_uint16>:
   11d08:	push	{r4, r5, fp, lr}
   11d0c:	add	fp, sp, #8
   11d10:	sub	sp, sp, #56	; 0x38
   11d14:	str	r0, [fp, #-16]
   11d18:	str	r1, [fp, #-20]	; 0xffffffec
   11d1c:	str	r2, [fp, #-24]	; 0xffffffe8
   11d20:	str	r3, [fp, #-28]	; 0xffffffe4
   11d24:	mov	r0, #0
   11d28:	str	r0, [sp, #28]
   11d2c:	str	r0, [sp, #24]
   11d30:	movw	r0, #0
   11d34:	str	r0, [sp, #20]
   11d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d3c:	str	r0, [sp, #16]
   11d40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d44:	movw	r1, #0
   11d48:	strh	r1, [r0]
   11d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11d54:	cmp	r0, r1
   11d58:	bne	11d68 <flatcc_json_parser_uint16+0x60>
   11d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d60:	str	r0, [fp, #-12]
   11d64:	b	11dd8 <flatcc_json_parser_uint16+0xd0>
   11d68:	ldr	r0, [fp, #-16]
   11d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11d70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d74:	add	r3, sp, #20
   11d78:	add	ip, sp, #24
   11d7c:	str	ip, [sp]
   11d80:	bl	0 <flatcc_json_parser_integer>
   11d84:	str	r0, [fp, #-20]	; 0xffffffec
   11d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   11d8c:	ldr	r1, [sp, #16]
   11d90:	cmp	r0, r1
   11d94:	beq	11dd0 <flatcc_json_parser_uint16+0xc8>
   11d98:	ldr	r0, [fp, #-16]
   11d9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11da0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11da4:	ldr	r3, [sp, #20]
   11da8:	ldr	ip, [sp, #24]
   11dac:	ldr	lr, [sp, #28]
   11db0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11db4:	mov	r5, sp
   11db8:	str	r4, [r5, #8]
   11dbc:	str	lr, [r5, #4]
   11dc0:	str	ip, [r5]
   11dc4:	bl	1203c <flatcc_json_parser_coerce_uint16>
   11dc8:	str	r0, [fp, #-12]
   11dcc:	b	11dd8 <flatcc_json_parser_uint16+0xd0>
   11dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11dd4:	str	r0, [fp, #-12]
   11dd8:	ldr	r0, [fp, #-12]
   11ddc:	sub	sp, fp, #8
   11de0:	pop	{r4, r5, fp, pc}

00011de4 <flatcc_json_parser_symbolic_uint16>:
   11de4:	push	{r4, r5, r6, sl, fp, lr}
   11de8:	add	fp, sp, #16
   11dec:	sub	sp, sp, #88	; 0x58
   11df0:	ldr	ip, [fp, #8]
   11df4:	str	r0, [fp, #-24]	; 0xffffffe8
   11df8:	str	r1, [fp, #-28]	; 0xffffffe4
   11dfc:	str	r2, [fp, #-32]	; 0xffffffe0
   11e00:	str	r3, [fp, #-36]	; 0xffffffdc
   11e04:	movw	r0, #0
   11e08:	strh	r0, [fp, #-46]	; 0xffffffd2
   11e0c:	movw	r1, #0
   11e10:	str	r1, [sp, #36]	; 0x24
   11e14:	ldr	r1, [fp, #8]
   11e18:	strh	r0, [r1]
   11e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11e24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11e28:	str	ip, [sp, #32]
   11e2c:	bl	dcbc <flatcc_json_parser_constant_start>
   11e30:	str	r0, [fp, #-28]	; 0xffffffe4
   11e34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e3c:	cmp	r0, r1
   11e40:	bne	11e50 <flatcc_json_parser_symbolic_uint16+0x6c>
   11e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e48:	str	r0, [fp, #-20]	; 0xffffffec
   11e4c:	b	12004 <flatcc_json_parser_symbolic_uint16+0x220>
   11e50:	b	11e54 <flatcc_json_parser_symbolic_uint16+0x70>
   11e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e58:	str	r0, [fp, #-40]	; 0xffffffd8
   11e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e60:	ldr	r0, [r0]
   11e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e6c:	str	r2, [fp, #-44]	; 0xffffffd4
   11e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e74:	str	r0, [sp, #28]
   11e78:	mov	r0, r1
   11e7c:	mov	r1, r2
   11e80:	mov	r2, r3
   11e84:	add	r3, sp, #44	; 0x2c
   11e88:	add	ip, sp, #48	; 0x30
   11e8c:	str	ip, [sp]
   11e90:	add	ip, sp, #40	; 0x28
   11e94:	str	ip, [sp, #4]
   11e98:	ldr	ip, [sp, #28]
   11e9c:	blx	ip
   11ea0:	str	r0, [fp, #-28]	; 0xffffffe4
   11ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ea8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11eac:	cmp	r0, r1
   11eb0:	bne	11ec0 <flatcc_json_parser_symbolic_uint16+0xdc>
   11eb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11eb8:	str	r0, [fp, #-20]	; 0xffffffec
   11ebc:	b	12004 <flatcc_json_parser_symbolic_uint16+0x220>
   11ec0:	b	11ec4 <flatcc_json_parser_symbolic_uint16+0xe0>
   11ec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11ec8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   11ecc:	cmp	r0, r1
   11ed0:	movw	r0, #0
   11ed4:	str	r0, [sp, #24]
   11ed8:	bne	11f00 <flatcc_json_parser_symbolic_uint16+0x11c>
   11edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ee0:	add	r1, r0, #4
   11ee4:	str	r1, [fp, #-40]	; 0xffffffd8
   11ee8:	ldr	r0, [r0, #4]
   11eec:	movw	r1, #0
   11ef0:	cmp	r0, r1
   11ef4:	movw	r0, #0
   11ef8:	movne	r0, #1
   11efc:	str	r0, [sp, #24]
   11f00:	ldr	r0, [sp, #24]
   11f04:	tst	r0, #1
   11f08:	bne	11e5c <flatcc_json_parser_symbolic_uint16+0x78>
   11f0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11f14:	cmp	r0, r1
   11f18:	bne	11f38 <flatcc_json_parser_symbolic_uint16+0x154>
   11f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11f24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11f28:	movw	r3, #23
   11f2c:	bl	0 <flatcc_json_parser_set_error>
   11f30:	str	r0, [fp, #-20]	; 0xffffffec
   11f34:	b	12004 <flatcc_json_parser_symbolic_uint16+0x220>
   11f38:	ldr	r0, [sp, #36]	; 0x24
   11f3c:	add	r1, r0, #1
   11f40:	str	r1, [sp, #36]	; 0x24
   11f44:	cmp	r0, #0
   11f48:	beq	11f78 <flatcc_json_parser_symbolic_uint16+0x194>
   11f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f50:	ldr	r0, [r0, #12]
   11f54:	cmp	r0, #0
   11f58:	beq	11f78 <flatcc_json_parser_symbolic_uint16+0x194>
   11f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11f64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11f68:	movw	r3, #14
   11f6c:	bl	0 <flatcc_json_parser_set_error>
   11f70:	str	r0, [fp, #-20]	; 0xffffffec
   11f74:	b	12004 <flatcc_json_parser_symbolic_uint16+0x220>
   11f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f7c:	mov	r1, r0
   11f80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f88:	ldr	ip, [sp, #44]	; 0x2c
   11f8c:	ldr	lr, [sp, #48]	; 0x30
   11f90:	ldr	r4, [sp, #52]	; 0x34
   11f94:	mov	r5, sp
   11f98:	sub	r6, fp, #46	; 0x2e
   11f9c:	str	r6, [r5, #8]
   11fa0:	str	r4, [r5, #4]
   11fa4:	str	lr, [r5]
   11fa8:	str	r0, [sp, #20]
   11fac:	mov	r0, r2
   11fb0:	str	r1, [sp, #16]
   11fb4:	mov	r1, r3
   11fb8:	ldr	r2, [sp, #20]
   11fbc:	mov	r3, ip
   11fc0:	bl	1203c <flatcc_json_parser_coerce_uint16>
   11fc4:	ldr	r1, [sp, #16]
   11fc8:	cmp	r1, r0
   11fcc:	bne	11fdc <flatcc_json_parser_symbolic_uint16+0x1f8>
   11fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11fd4:	str	r0, [fp, #-20]	; 0xffffffec
   11fd8:	b	12004 <flatcc_json_parser_symbolic_uint16+0x220>
   11fdc:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   11fe0:	ldr	r1, [fp, #8]
   11fe4:	ldrh	r2, [r1]
   11fe8:	add	r0, r2, r0
   11fec:	strh	r0, [r1]
   11ff0:	ldr	r0, [sp, #40]	; 0x28
   11ff4:	cmp	r0, #0
   11ff8:	bne	11e54 <flatcc_json_parser_symbolic_uint16+0x70>
   11ffc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12000:	str	r0, [fp, #-20]	; 0xffffffec
   12004:	ldr	r0, [fp, #-20]	; 0xffffffec
   12008:	sub	sp, fp, #16
   1200c:	pop	{r4, r5, r6, sl, fp, pc}

00012010 <flatbuffers_uint16_write_to_pe>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	sub	sp, sp, #8
   1201c:	str	r0, [sp, #4]
   12020:	strh	r1, [sp, #2]
   12024:	ldrh	r0, [sp, #2]
   12028:	bl	120f4 <flatbuffers_uint16_cast_to_pe>
   1202c:	ldr	r1, [sp, #4]
   12030:	strh	r0, [r1]
   12034:	mov	sp, fp
   12038:	pop	{fp, pc}

0001203c <flatcc_json_parser_coerce_uint16>:
   1203c:	push	{r4, sl, fp, lr}
   12040:	add	fp, sp, #8
   12044:	sub	sp, sp, #48	; 0x30
   12048:	ldr	ip, [fp, #12]
   1204c:	ldr	lr, [fp, #8]
   12050:	ldr	r4, [fp, #16]
   12054:	str	r0, [fp, #-16]
   12058:	str	r1, [fp, #-20]	; 0xffffffec
   1205c:	str	r2, [fp, #-24]	; 0xffffffe8
   12060:	str	r3, [sp, #28]
   12064:	str	ip, [sp, #20]
   12068:	str	lr, [sp, #16]
   1206c:	ldr	r0, [sp, #28]
   12070:	cmp	r0, #0
   12074:	str	r4, [sp, #12]
   12078:	beq	12098 <flatcc_json_parser_coerce_uint16+0x5c>
   1207c:	ldr	r0, [fp, #-16]
   12080:	ldr	r1, [fp, #-20]	; 0xffffffec
   12084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12088:	movw	r3, #8
   1208c:	bl	0 <flatcc_json_parser_set_error>
   12090:	str	r0, [fp, #-12]
   12094:	b	120e8 <flatcc_json_parser_coerce_uint16+0xac>
   12098:	ldr	r0, [sp, #16]
   1209c:	ldr	r1, [sp, #20]
   120a0:	subs	r0, r0, #65536	; 0x10000
   120a4:	sbcs	r1, r1, #0
   120a8:	str	r0, [sp, #8]
   120ac:	str	r1, [sp, #4]
   120b0:	bcc	120d4 <flatcc_json_parser_coerce_uint16+0x98>
   120b4:	b	120b8 <flatcc_json_parser_coerce_uint16+0x7c>
   120b8:	ldr	r0, [fp, #-16]
   120bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   120c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   120c4:	movw	r3, #7
   120c8:	bl	0 <flatcc_json_parser_set_error>
   120cc:	str	r0, [fp, #-12]
   120d0:	b	120e8 <flatcc_json_parser_coerce_uint16+0xac>
   120d4:	ldrh	r0, [sp, #16]
   120d8:	ldr	r1, [fp, #16]
   120dc:	strh	r0, [r1]
   120e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   120e4:	str	r0, [fp, #-12]
   120e8:	ldr	r0, [fp, #-12]
   120ec:	sub	sp, fp, #8
   120f0:	pop	{r4, sl, fp, pc}

000120f4 <flatbuffers_uint16_cast_to_pe>:
   120f4:	sub	sp, sp, #4
   120f8:	strh	r0, [sp, #2]
   120fc:	ldrh	r0, [sp, #2]
   12100:	add	sp, sp, #4
   12104:	bx	lr

00012108 <Fantasy_BookReader_parse_json_struct_inline>:
   12108:	push	{fp, lr}
   1210c:	mov	fp, sp
   12110:	sub	sp, sp, #56	; 0x38
   12114:	str	r0, [fp, #-8]
   12118:	str	r1, [fp, #-12]
   1211c:	str	r2, [fp, #-16]
   12120:	str	r3, [fp, #-20]	; 0xffffffec
   12124:	ldr	r0, [fp, #-8]
   12128:	ldr	r1, [fp, #-12]
   1212c:	ldr	r2, [fp, #-16]
   12130:	sub	r3, fp, #24
   12134:	bl	7050 <flatcc_json_parser_object_start>
   12138:	str	r0, [fp, #-12]
   1213c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12140:	cmp	r0, #0
   12144:	beq	12308 <Fantasy_BookReader_parse_json_struct_inline+0x200>
   12148:	ldr	r0, [fp, #-8]
   1214c:	ldr	r1, [fp, #-12]
   12150:	ldr	r2, [fp, #-16]
   12154:	bl	7134 <flatcc_json_parser_symbol_start>
   12158:	str	r0, [fp, #-12]
   1215c:	ldr	r0, [fp, #-12]
   12160:	ldr	r1, [fp, #-16]
   12164:	bl	71e0 <flatcc_json_parser_symbol_part>
   12168:	str	r1, [sp, #12]
   1216c:	str	r0, [sp, #8]
   12170:	ldr	r0, [sp, #8]
   12174:	ldr	r1, [sp, #12]
   12178:	movw	r2, #28523	; 0x6f6b
   1217c:	movt	r2, #25199	; 0x626f
   12180:	eor	r1, r1, r2
   12184:	movw	r2, #29285	; 0x7265
   12188:	movt	r2, #29535	; 0x735f
   1218c:	eor	r0, r0, r2
   12190:	orr	r0, r0, r1
   12194:	cmp	r0, #0
   12198:	bne	122d8 <Fantasy_BookReader_parse_json_struct_inline+0x1d0>
   1219c:	b	121a0 <Fantasy_BookReader_parse_json_struct_inline+0x98>
   121a0:	ldr	r0, [fp, #-12]
   121a4:	add	r0, r0, #8
   121a8:	str	r0, [fp, #-12]
   121ac:	ldr	r0, [fp, #-12]
   121b0:	ldr	r1, [fp, #-16]
   121b4:	bl	71e0 <flatcc_json_parser_symbol_part>
   121b8:	str	r1, [sp, #12]
   121bc:	str	r0, [sp, #8]
   121c0:	ldr	r0, [sp, #12]
   121c4:	bfc	r0, #0, #16
   121c8:	movw	r1, #0
   121cc:	movt	r1, #24932	; 0x6164
   121d0:	teq	r0, r1
   121d4:	bne	122c0 <Fantasy_BookReader_parse_json_struct_inline+0x1b8>
   121d8:	b	121dc <Fantasy_BookReader_parse_json_struct_inline+0xd4>
   121dc:	ldr	r0, [fp, #-8]
   121e0:	ldr	r1, [fp, #-12]
   121e4:	str	r1, [sp, #20]
   121e8:	ldr	r2, [fp, #-16]
   121ec:	movw	r3, #2
   121f0:	bl	7218 <flatcc_json_parser_match_symbol>
   121f4:	str	r0, [fp, #-12]
   121f8:	ldr	r0, [sp, #20]
   121fc:	ldr	r1, [fp, #-12]
   12200:	cmp	r0, r1
   12204:	beq	122a8 <Fantasy_BookReader_parse_json_struct_inline+0x1a0>
   12208:	movw	r0, #0
   1220c:	str	r0, [sp, #4]
   12210:	ldr	r0, [fp, #-20]	; 0xffffffec
   12214:	add	r0, r0, #0
   12218:	str	r0, [sp, #24]
   1221c:	ldr	r0, [fp, #-8]
   12220:	ldr	r1, [fp, #-12]
   12224:	str	r1, [sp, #20]
   12228:	ldr	r2, [fp, #-16]
   1222c:	add	r3, sp, #4
   12230:	bl	b5d8 <flatcc_json_parser_int32>
   12234:	str	r0, [fp, #-12]
   12238:	ldr	r0, [sp, #20]
   1223c:	ldr	r1, [fp, #-12]
   12240:	cmp	r0, r1
   12244:	bne	12298 <Fantasy_BookReader_parse_json_struct_inline+0x190>
   12248:	ldr	r0, [fp, #-8]
   1224c:	ldr	r1, [fp, #-12]
   12250:	str	r1, [sp, #20]
   12254:	ldr	r2, [fp, #-16]
   12258:	movw	r3, #0
   1225c:	movt	r3, #0
   12260:	add	ip, sp, #4
   12264:	str	ip, [sp]
   12268:	bl	b6b0 <flatcc_json_parser_symbolic_int32>
   1226c:	str	r0, [fp, #-12]
   12270:	ldr	r0, [fp, #-12]
   12274:	ldr	r1, [sp, #20]
   12278:	cmp	r0, r1
   1227c:	beq	12290 <Fantasy_BookReader_parse_json_struct_inline+0x188>
   12280:	ldr	r0, [fp, #-12]
   12284:	ldr	r1, [fp, #-16]
   12288:	cmp	r0, r1
   1228c:	bne	12294 <Fantasy_BookReader_parse_json_struct_inline+0x18c>
   12290:	b	12314 <Fantasy_BookReader_parse_json_struct_inline+0x20c>
   12294:	b	12298 <Fantasy_BookReader_parse_json_struct_inline+0x190>
   12298:	ldr	r0, [sp, #24]
   1229c:	ldr	r1, [sp, #4]
   122a0:	bl	b8d8 <flatbuffers_int32_write_to_pe>
   122a4:	b	122bc <Fantasy_BookReader_parse_json_struct_inline+0x1b4>
   122a8:	ldr	r0, [fp, #-8]
   122ac:	ldr	r1, [fp, #-12]
   122b0:	ldr	r2, [fp, #-16]
   122b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   122b8:	str	r0, [fp, #-12]
   122bc:	b	122d4 <Fantasy_BookReader_parse_json_struct_inline+0x1cc>
   122c0:	ldr	r0, [fp, #-8]
   122c4:	ldr	r1, [fp, #-12]
   122c8:	ldr	r2, [fp, #-16]
   122cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
   122d0:	str	r0, [fp, #-12]
   122d4:	b	122ec <Fantasy_BookReader_parse_json_struct_inline+0x1e4>
   122d8:	ldr	r0, [fp, #-8]
   122dc:	ldr	r1, [fp, #-12]
   122e0:	ldr	r2, [fp, #-16]
   122e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
   122e8:	str	r0, [fp, #-12]
   122ec:	ldr	r0, [fp, #-8]
   122f0:	ldr	r1, [fp, #-12]
   122f4:	ldr	r2, [fp, #-16]
   122f8:	sub	r3, fp, #24
   122fc:	bl	c534 <flatcc_json_parser_object_end>
   12300:	str	r0, [fp, #-12]
   12304:	b	1213c <Fantasy_BookReader_parse_json_struct_inline+0x34>
   12308:	ldr	r0, [fp, #-12]
   1230c:	str	r0, [fp, #-4]
   12310:	b	1232c <Fantasy_BookReader_parse_json_struct_inline+0x224>
   12314:	ldr	r0, [fp, #-8]
   12318:	ldr	r1, [fp, #-12]
   1231c:	ldr	r2, [fp, #-16]
   12320:	movw	r3, #33	; 0x21
   12324:	bl	0 <flatcc_json_parser_set_error>
   12328:	str	r0, [fp, #-4]
   1232c:	ldr	r0, [fp, #-4]
   12330:	mov	sp, fp
   12334:	pop	{fp, pc}

00012338 <flatcc_json_parser_coerce_bool>:
   12338:	push	{r4, sl, fp, lr}
   1233c:	add	fp, sp, #8
   12340:	sub	sp, sp, #40	; 0x28
   12344:	ldr	ip, [fp, #12]
   12348:	ldr	lr, [fp, #8]
   1234c:	ldr	r4, [fp, #16]
   12350:	str	r0, [fp, #-16]
   12354:	str	r1, [fp, #-20]	; 0xffffffec
   12358:	str	r2, [sp, #24]
   1235c:	str	r3, [sp, #20]
   12360:	str	ip, [sp, #12]
   12364:	str	lr, [sp, #8]
   12368:	ldr	r0, [sp, #20]
   1236c:	cmp	r0, #0
   12370:	str	r4, [sp, #4]
   12374:	beq	12394 <flatcc_json_parser_coerce_bool+0x5c>
   12378:	ldr	r0, [fp, #-16]
   1237c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12380:	ldr	r2, [sp, #24]
   12384:	movw	r3, #8
   12388:	bl	0 <flatcc_json_parser_set_error>
   1238c:	str	r0, [fp, #-12]
   12390:	b	123c8 <flatcc_json_parser_coerce_bool+0x90>
   12394:	ldr	r0, [sp, #8]
   12398:	ldr	r1, [sp, #12]
   1239c:	orr	r0, r0, r1
   123a0:	cmp	r0, #0
   123a4:	movwne	r0, #1
   123a8:	mvn	r1, #0
   123ac:	eor	r0, r0, r1
   123b0:	eor	r0, r0, r1
   123b4:	and	r0, r0, #1
   123b8:	ldr	r1, [fp, #16]
   123bc:	strb	r0, [r1]
   123c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   123c4:	str	r0, [fp, #-12]
   123c8:	ldr	r0, [fp, #-12]
   123cc:	sub	sp, fp, #8
   123d0:	pop	{r4, sl, fp, pc}

000123d4 <flatbuffers_bool_cast_to_pe>:
   123d4:	sub	sp, sp, #4
   123d8:	strb	r0, [sp, #3]
   123dc:	ldrb	r0, [sp, #3]
   123e0:	add	sp, sp, #4
   123e4:	bx	lr

000123e8 <flatcc_json_parser_coerce_float>:
   123e8:	push	{r4, sl, fp, lr}
   123ec:	add	fp, sp, #8
   123f0:	sub	sp, sp, #32
   123f4:	ldr	ip, [fp, #12]
   123f8:	ldr	lr, [fp, #8]
   123fc:	ldr	r4, [fp, #16]
   12400:	str	r0, [fp, #-12]
   12404:	str	r1, [fp, #-16]
   12408:	str	r2, [sp, #20]
   1240c:	str	r3, [sp, #16]
   12410:	str	ip, [sp, #12]
   12414:	str	lr, [sp, #8]
   12418:	ldr	r0, [sp, #16]
   1241c:	cmp	r0, #0
   12420:	str	r4, [sp, #4]
   12424:	beq	12444 <flatcc_json_parser_coerce_float+0x5c>
   12428:	ldr	r0, [sp, #8]
   1242c:	ldr	r1, [sp, #12]
   12430:	bl	0 <__aeabi_ul2f>
   12434:	vmov	s0, r0
   12438:	vneg.f32	s0, s0
   1243c:	vstr	s0, [sp]
   12440:	b	12458 <flatcc_json_parser_coerce_float+0x70>
   12444:	ldr	r0, [sp, #8]
   12448:	ldr	r1, [sp, #12]
   1244c:	bl	0 <__aeabi_ul2f>
   12450:	vmov	s0, r0
   12454:	vstr	s0, [sp]
   12458:	vldr	s0, [sp]
   1245c:	ldr	r0, [fp, #16]
   12460:	vstr	s0, [r0]
   12464:	ldr	r0, [fp, #-16]
   12468:	sub	sp, fp, #8
   1246c:	pop	{r4, sl, fp, pc}

00012470 <flatbuffers_float_cast_to_pe>:
   12470:	sub	sp, sp, #8
   12474:	vstr	s0, [sp, #4]
   12478:	vldr	s0, [sp, #4]
   1247c:	vstr	s0, [sp]
   12480:	ldr	r0, [sp]
   12484:	str	r0, [sp]
   12488:	vldr	s0, [sp]
   1248c:	add	sp, sp, #8
   12490:	bx	lr

00012494 <flatcc_json_parser_coerce_int32>:
   12494:	push	{r4, sl, fp, lr}
   12498:	add	fp, sp, #8
   1249c:	sub	sp, sp, #56	; 0x38
   124a0:	ldr	ip, [fp, #12]
   124a4:	ldr	lr, [fp, #8]
   124a8:	ldr	r4, [fp, #16]
   124ac:	str	r0, [fp, #-16]
   124b0:	str	r1, [fp, #-20]	; 0xffffffec
   124b4:	str	r2, [fp, #-24]	; 0xffffffe8
   124b8:	str	r3, [fp, #-28]	; 0xffffffe4
   124bc:	str	ip, [sp, #28]
   124c0:	str	lr, [sp, #24]
   124c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124c8:	cmp	r0, #0
   124cc:	str	r4, [sp, #20]
   124d0:	beq	12524 <flatcc_json_parser_coerce_int32+0x90>
   124d4:	ldr	r0, [sp, #24]
   124d8:	ldr	r1, [sp, #28]
   124dc:	subs	r0, r0, #-2147483647	; 0x80000001
   124e0:	sbcs	r1, r1, #0
   124e4:	str	r0, [sp, #16]
   124e8:	str	r1, [sp, #12]
   124ec:	bcc	12510 <flatcc_json_parser_coerce_int32+0x7c>
   124f0:	b	124f4 <flatcc_json_parser_coerce_int32+0x60>
   124f4:	ldr	r0, [fp, #-16]
   124f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   124fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12500:	movw	r3, #8
   12504:	bl	0 <flatcc_json_parser_set_error>
   12508:	str	r0, [fp, #-12]
   1250c:	b	12574 <flatcc_json_parser_coerce_int32+0xe0>
   12510:	ldr	r0, [sp, #24]
   12514:	rsb	r0, r0, #0
   12518:	ldr	r1, [fp, #16]
   1251c:	str	r0, [r1]
   12520:	b	1256c <flatcc_json_parser_coerce_int32+0xd8>
   12524:	ldr	r0, [sp, #24]
   12528:	ldr	r1, [sp, #28]
   1252c:	subs	r0, r0, #-2147483648	; 0x80000000
   12530:	sbcs	r1, r1, #0
   12534:	str	r0, [sp, #8]
   12538:	str	r1, [sp, #4]
   1253c:	bcc	12560 <flatcc_json_parser_coerce_int32+0xcc>
   12540:	b	12544 <flatcc_json_parser_coerce_int32+0xb0>
   12544:	ldr	r0, [fp, #-16]
   12548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1254c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12550:	movw	r3, #7
   12554:	bl	0 <flatcc_json_parser_set_error>
   12558:	str	r0, [fp, #-12]
   1255c:	b	12574 <flatcc_json_parser_coerce_int32+0xe0>
   12560:	ldr	r0, [sp, #24]
   12564:	ldr	r1, [fp, #16]
   12568:	str	r0, [r1]
   1256c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12570:	str	r0, [fp, #-12]
   12574:	ldr	r0, [fp, #-12]
   12578:	sub	sp, fp, #8
   1257c:	pop	{r4, sl, fp, pc}

00012580 <flatbuffers_int32_cast_to_pe>:
   12580:	sub	sp, sp, #4
   12584:	str	r0, [sp]
   12588:	ldr	r0, [sp]
   1258c:	add	sp, sp, #4
   12590:	bx	lr

00012594 <flatcc_json_parser_coerce_int64>:
   12594:	push	{r4, sl, fp, lr}
   12598:	add	fp, sp, #8
   1259c:	sub	sp, sp, #48	; 0x30
   125a0:	ldr	ip, [fp, #12]
   125a4:	ldr	lr, [fp, #8]
   125a8:	ldr	r4, [fp, #16]
   125ac:	str	r0, [fp, #-16]
   125b0:	str	r1, [fp, #-20]	; 0xffffffec
   125b4:	str	r2, [fp, #-24]	; 0xffffffe8
   125b8:	str	r3, [sp, #28]
   125bc:	str	ip, [sp, #20]
   125c0:	str	lr, [sp, #16]
   125c4:	ldr	r0, [sp, #28]
   125c8:	cmp	r0, #0
   125cc:	str	r4, [sp, #12]
   125d0:	beq	12630 <flatcc_json_parser_coerce_int64+0x9c>
   125d4:	ldr	r0, [sp, #16]
   125d8:	ldr	r1, [sp, #20]
   125dc:	subs	r0, r0, #1
   125e0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   125e4:	str	r0, [sp, #8]
   125e8:	str	r1, [sp, #4]
   125ec:	bcc	12610 <flatcc_json_parser_coerce_int64+0x7c>
   125f0:	b	125f4 <flatcc_json_parser_coerce_int64+0x60>
   125f4:	ldr	r0, [fp, #-16]
   125f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   125fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12600:	movw	r3, #8
   12604:	bl	0 <flatcc_json_parser_set_error>
   12608:	str	r0, [fp, #-12]
   1260c:	b	12678 <flatcc_json_parser_coerce_int64+0xe4>
   12610:	ldr	r0, [sp, #16]
   12614:	ldr	r1, [sp, #20]
   12618:	rsbs	r0, r0, #0
   1261c:	rsc	r1, r1, #0
   12620:	ldr	r2, [fp, #16]
   12624:	str	r0, [r2]
   12628:	str	r1, [r2, #4]
   1262c:	b	12670 <flatcc_json_parser_coerce_int64+0xdc>
   12630:	ldr	r0, [sp, #20]
   12634:	cmn	r0, #1
   12638:	bgt	1265c <flatcc_json_parser_coerce_int64+0xc8>
   1263c:	b	12640 <flatcc_json_parser_coerce_int64+0xac>
   12640:	ldr	r0, [fp, #-16]
   12644:	ldr	r1, [fp, #-20]	; 0xffffffec
   12648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1264c:	movw	r3, #7
   12650:	bl	0 <flatcc_json_parser_set_error>
   12654:	str	r0, [fp, #-12]
   12658:	b	12678 <flatcc_json_parser_coerce_int64+0xe4>
   1265c:	ldr	r0, [sp, #16]
   12660:	ldr	r1, [sp, #20]
   12664:	ldr	r2, [fp, #16]
   12668:	str	r1, [r2, #4]
   1266c:	str	r0, [r2]
   12670:	ldr	r0, [fp, #-20]	; 0xffffffec
   12674:	str	r0, [fp, #-12]
   12678:	ldr	r0, [fp, #-12]
   1267c:	sub	sp, fp, #8
   12680:	pop	{r4, sl, fp, pc}

00012684 <flatbuffers_int64_cast_to_pe>:
   12684:	sub	sp, sp, #8
   12688:	str	r0, [sp]
   1268c:	str	r1, [sp, #4]
   12690:	ldr	r0, [sp]
   12694:	ldr	r1, [sp, #4]
   12698:	add	sp, sp, #8
   1269c:	bx	lr

000126a0 <flatcc_json_parser_coerce_uint32>:
   126a0:	push	{r4, sl, fp, lr}
   126a4:	add	fp, sp, #8
   126a8:	sub	sp, sp, #40	; 0x28
   126ac:	ldr	ip, [fp, #12]
   126b0:	ldr	lr, [fp, #8]
   126b4:	ldr	r4, [fp, #16]
   126b8:	str	r0, [fp, #-16]
   126bc:	str	r1, [fp, #-20]	; 0xffffffec
   126c0:	str	r2, [sp, #24]
   126c4:	str	r3, [sp, #20]
   126c8:	str	ip, [sp, #12]
   126cc:	str	lr, [sp, #8]
   126d0:	ldr	r0, [sp, #20]
   126d4:	cmp	r0, #0
   126d8:	str	r4, [sp, #4]
   126dc:	beq	126fc <flatcc_json_parser_coerce_uint32+0x5c>
   126e0:	ldr	r0, [fp, #-16]
   126e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   126e8:	ldr	r2, [sp, #24]
   126ec:	movw	r3, #8
   126f0:	bl	0 <flatcc_json_parser_set_error>
   126f4:	str	r0, [fp, #-12]
   126f8:	b	1273c <flatcc_json_parser_coerce_uint32+0x9c>
   126fc:	ldr	r0, [sp, #12]
   12700:	cmp	r0, #0
   12704:	beq	12728 <flatcc_json_parser_coerce_uint32+0x88>
   12708:	b	1270c <flatcc_json_parser_coerce_uint32+0x6c>
   1270c:	ldr	r0, [fp, #-16]
   12710:	ldr	r1, [fp, #-20]	; 0xffffffec
   12714:	ldr	r2, [sp, #24]
   12718:	movw	r3, #7
   1271c:	bl	0 <flatcc_json_parser_set_error>
   12720:	str	r0, [fp, #-12]
   12724:	b	1273c <flatcc_json_parser_coerce_uint32+0x9c>
   12728:	ldr	r0, [sp, #8]
   1272c:	ldr	r1, [fp, #16]
   12730:	str	r0, [r1]
   12734:	ldr	r0, [fp, #-20]	; 0xffffffec
   12738:	str	r0, [fp, #-12]
   1273c:	ldr	r0, [fp, #-12]
   12740:	sub	sp, fp, #8
   12744:	pop	{r4, sl, fp, pc}

00012748 <flatbuffers_uint32_cast_to_pe>:
   12748:	sub	sp, sp, #4
   1274c:	str	r0, [sp]
   12750:	ldr	r0, [sp]
   12754:	add	sp, sp, #4
   12758:	bx	lr

0001275c <flatcc_json_parser_coerce_uint64>:
   1275c:	push	{r4, sl, fp, lr}
   12760:	add	fp, sp, #8
   12764:	sub	sp, sp, #40	; 0x28
   12768:	ldr	ip, [fp, #12]
   1276c:	ldr	lr, [fp, #8]
   12770:	ldr	r4, [fp, #16]
   12774:	str	r0, [fp, #-16]
   12778:	str	r1, [fp, #-20]	; 0xffffffec
   1277c:	str	r2, [sp, #24]
   12780:	str	r3, [sp, #20]
   12784:	str	ip, [sp, #12]
   12788:	str	lr, [sp, #8]
   1278c:	ldr	r0, [sp, #20]
   12790:	cmp	r0, #0
   12794:	str	r4, [sp, #4]
   12798:	beq	127b8 <flatcc_json_parser_coerce_uint64+0x5c>
   1279c:	ldr	r0, [fp, #-16]
   127a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   127a4:	ldr	r2, [sp, #24]
   127a8:	movw	r3, #8
   127ac:	bl	0 <flatcc_json_parser_set_error>
   127b0:	str	r0, [fp, #-12]
   127b4:	b	127d4 <flatcc_json_parser_coerce_uint64+0x78>
   127b8:	ldr	r0, [sp, #8]
   127bc:	ldr	r1, [sp, #12]
   127c0:	ldr	r2, [fp, #16]
   127c4:	str	r1, [r2, #4]
   127c8:	str	r0, [r2]
   127cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   127d0:	str	r0, [fp, #-12]
   127d4:	ldr	r0, [fp, #-12]
   127d8:	sub	sp, fp, #8
   127dc:	pop	{r4, sl, fp, pc}

000127e0 <flatbuffers_uint64_cast_to_pe>:
   127e0:	sub	sp, sp, #8
   127e4:	str	r0, [sp]
   127e8:	str	r1, [sp, #4]
   127ec:	ldr	r0, [sp]
   127f0:	ldr	r1, [sp, #4]
   127f4:	add	sp, sp, #8
   127f8:	bx	lr

000127fc <flatcc_json_parser_coerce_double>:
   127fc:	push	{r4, sl, fp, lr}
   12800:	add	fp, sp, #8
   12804:	sub	sp, sp, #40	; 0x28
   12808:	ldr	ip, [fp, #12]
   1280c:	ldr	lr, [fp, #8]
   12810:	ldr	r4, [fp, #16]
   12814:	str	r0, [fp, #-12]
   12818:	str	r1, [fp, #-16]
   1281c:	str	r2, [fp, #-20]	; 0xffffffec
   12820:	str	r3, [sp, #24]
   12824:	str	ip, [sp, #20]
   12828:	str	lr, [sp, #16]
   1282c:	ldr	r0, [sp, #24]
   12830:	cmp	r0, #0
   12834:	str	r4, [sp, #12]
   12838:	beq	12858 <flatcc_json_parser_coerce_double+0x5c>
   1283c:	ldr	r0, [sp, #16]
   12840:	ldr	r1, [sp, #20]
   12844:	bl	0 <__aeabi_ul2d>
   12848:	vmov	d16, r0, r1
   1284c:	vneg.f64	d16, d16
   12850:	vstr	d16, [sp]
   12854:	b	1286c <flatcc_json_parser_coerce_double+0x70>
   12858:	ldr	r0, [sp, #16]
   1285c:	ldr	r1, [sp, #20]
   12860:	bl	0 <__aeabi_ul2d>
   12864:	vmov	d16, r0, r1
   12868:	vstr	d16, [sp]
   1286c:	vldr	d16, [sp]
   12870:	ldr	r0, [fp, #16]
   12874:	vstr	d16, [r0]
   12878:	ldr	r0, [fp, #-16]
   1287c:	sub	sp, fp, #8
   12880:	pop	{r4, sl, fp, pc}

00012884 <flatbuffers_double_cast_to_pe>:
   12884:	sub	sp, sp, #16
   12888:	vstr	d0, [sp, #8]
   1288c:	vldr	d0, [sp, #8]
   12890:	vstr	d0, [sp]
   12894:	vldr	d0, [sp]
   12898:	add	sp, sp, #16
   1289c:	bx	lr

000128a0 <MyGame_Example_Vec3_print_json_struct>:
   128a0:	push	{fp, lr}
   128a4:	mov	fp, sp
   128a8:	sub	sp, sp, #32
   128ac:	str	r0, [fp, #-4]
   128b0:	str	r1, [fp, #-8]
   128b4:	ldr	r0, [fp, #-4]
   128b8:	ldr	r2, [fp, #-8]
   128bc:	movw	r1, #0
   128c0:	str	r1, [fp, #-12]
   128c4:	ldr	r3, [fp, #-12]
   128c8:	movw	ip, #0
   128cc:	movt	ip, #0
   128d0:	str	ip, [sp]
   128d4:	movw	ip, #1
   128d8:	str	ip, [sp, #4]
   128dc:	bl	0 <flatcc_json_printer_float_struct_field>
   128e0:	ldr	r0, [fp, #-4]
   128e4:	ldr	r2, [fp, #-8]
   128e8:	movw	r1, #1
   128ec:	str	r1, [sp, #16]
   128f0:	movw	r3, #4
   128f4:	movw	ip, #0
   128f8:	movt	ip, #0
   128fc:	str	ip, [sp]
   12900:	ldr	ip, [sp, #16]
   12904:	str	ip, [sp, #4]
   12908:	bl	0 <flatcc_json_printer_float_struct_field>
   1290c:	ldr	r0, [fp, #-4]
   12910:	ldr	r2, [fp, #-8]
   12914:	movw	r1, #2
   12918:	movw	r3, #8
   1291c:	movw	ip, #0
   12920:	movt	ip, #0
   12924:	str	ip, [sp]
   12928:	movw	ip, #1
   1292c:	str	ip, [sp, #4]
   12930:	bl	0 <flatcc_json_printer_float_struct_field>
   12934:	ldr	r0, [fp, #-4]
   12938:	ldr	r2, [fp, #-8]
   1293c:	movw	r1, #3
   12940:	movw	r3, #16
   12944:	movw	ip, #0
   12948:	movt	ip, #0
   1294c:	str	ip, [sp]
   12950:	movw	ip, #5
   12954:	str	ip, [sp, #4]
   12958:	bl	0 <flatcc_json_printer_double_struct_field>
   1295c:	ldr	r0, [fp, #-4]
   12960:	ldr	r2, [fp, #-8]
   12964:	movw	r1, #4
   12968:	movw	r3, #24
   1296c:	movw	ip, #0
   12970:	movt	ip, #0
   12974:	str	ip, [sp]
   12978:	movw	ip, #5
   1297c:	str	ip, [sp, #4]
   12980:	movw	ip, #0
   12984:	movt	ip, #0
   12988:	str	ip, [sp, #8]
   1298c:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
   12990:	ldr	r0, [fp, #-4]
   12994:	ldr	r2, [fp, #-8]
   12998:	movw	r1, #5
   1299c:	str	r1, [sp, #12]
   129a0:	movw	r3, #26
   129a4:	movw	ip, #0
   129a8:	movt	ip, #0
   129ac:	str	ip, [sp]
   129b0:	ldr	ip, [sp, #12]
   129b4:	str	ip, [sp, #4]
   129b8:	movw	lr, #0
   129bc:	movt	lr, #0
   129c0:	str	lr, [sp, #8]
   129c4:	bl	0 <flatcc_json_printer_embedded_struct_field>
   129c8:	mov	sp, fp
   129cc:	pop	{fp, pc}

000129d0 <MyGame_Example_Color_print_json_enum>:
   129d0:	push	{fp, lr}
   129d4:	mov	fp, sp
   129d8:	sub	sp, sp, #16
   129dc:	str	r0, [fp, #-4]
   129e0:	strb	r1, [fp, #-5]
   129e4:	ldrb	r0, [fp, #-5]
   129e8:	strb	r0, [fp, #-6]
   129ec:	ldrb	r0, [fp, #-6]
   129f0:	ldrb	r1, [fp, #-6]
   129f4:	sub	r1, r1, #1
   129f8:	and	r0, r0, r1
   129fc:	movw	r1, #0
   12a00:	cmp	r1, r0
   12a04:	movw	r0, #0
   12a08:	movne	r0, #1
   12a0c:	and	r0, r0, #1
   12a10:	str	r0, [sp, #4]
   12a14:	str	r1, [sp]
   12a18:	ldrb	r0, [fp, #-6]
   12a1c:	and	r0, r0, #244	; 0xf4
   12a20:	cmp	r0, #0
   12a24:	bne	12a34 <MyGame_Example_Color_print_json_enum+0x64>
   12a28:	ldrb	r0, [fp, #-6]
   12a2c:	cmp	r0, #0
   12a30:	bne	12a44 <MyGame_Example_Color_print_json_enum+0x74>
   12a34:	ldr	r0, [fp, #-4]
   12a38:	ldrsb	r1, [fp, #-5]
   12a3c:	bl	0 <flatcc_json_printer_int8>
   12a40:	b	12aec <MyGame_Example_Color_print_json_enum+0x11c>
   12a44:	ldr	r0, [fp, #-4]
   12a48:	ldr	r1, [sp, #4]
   12a4c:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   12a50:	ldrb	r0, [fp, #-6]
   12a54:	and	r0, r0, #1
   12a58:	cmp	r0, #0
   12a5c:	beq	12a80 <MyGame_Example_Color_print_json_enum+0xb0>
   12a60:	ldr	r0, [fp, #-4]
   12a64:	ldr	r1, [sp]
   12a68:	add	r2, r1, #1
   12a6c:	str	r2, [sp]
   12a70:	movw	r2, #0
   12a74:	movt	r2, #0
   12a78:	movw	r3, #3
   12a7c:	bl	0 <flatcc_json_printer_enum_flag>
   12a80:	ldrb	r0, [fp, #-6]
   12a84:	and	r0, r0, #2
   12a88:	cmp	r0, #0
   12a8c:	beq	12ab0 <MyGame_Example_Color_print_json_enum+0xe0>
   12a90:	ldr	r0, [fp, #-4]
   12a94:	ldr	r1, [sp]
   12a98:	add	r2, r1, #1
   12a9c:	str	r2, [sp]
   12aa0:	movw	r2, #0
   12aa4:	movt	r2, #0
   12aa8:	movw	r3, #5
   12aac:	bl	0 <flatcc_json_printer_enum_flag>
   12ab0:	ldrb	r0, [fp, #-6]
   12ab4:	and	r0, r0, #8
   12ab8:	cmp	r0, #0
   12abc:	beq	12ae0 <MyGame_Example_Color_print_json_enum+0x110>
   12ac0:	ldr	r0, [fp, #-4]
   12ac4:	ldr	r1, [sp]
   12ac8:	add	r2, r1, #1
   12acc:	str	r2, [sp]
   12ad0:	movw	r2, #0
   12ad4:	movt	r2, #0
   12ad8:	movw	r3, #4
   12adc:	bl	0 <flatcc_json_printer_enum_flag>
   12ae0:	ldr	r0, [fp, #-4]
   12ae4:	ldr	r1, [sp, #4]
   12ae8:	bl	0 <flatcc_json_printer_delimit_enum_flags>
   12aec:	mov	sp, fp
   12af0:	pop	{fp, pc}

00012af4 <MyGame_Example_Any_print_json_union_type>:
   12af4:	push	{fp, lr}
   12af8:	mov	fp, sp
   12afc:	sub	sp, sp, #16
   12b00:	str	r0, [fp, #-4]
   12b04:	strb	r1, [fp, #-5]
   12b08:	ldrb	r0, [fp, #-5]
   12b0c:	sub	r0, r0, #1
   12b10:	cmp	r0, #3
   12b14:	str	r0, [sp, #4]
   12b18:	bhi	12b9c <MyGame_Example_Any_print_json_union_type+0xa8>
   12b1c:	add	r0, pc, #8
   12b20:	ldr	r1, [sp, #4]
   12b24:	ldr	r0, [r0, r1, lsl #2]
   12b28:	mov	pc, r0
   12b2c:	.word	0x00012b3c
   12b30:	.word	0x00012b54
   12b34:	.word	0x00012b6c
   12b38:	.word	0x00012b84
   12b3c:	ldr	r0, [fp, #-4]
   12b40:	movw	r1, #0
   12b44:	movt	r1, #0
   12b48:	movw	r2, #7
   12b4c:	bl	0 <flatcc_json_printer_enum>
   12b50:	b	12bb0 <MyGame_Example_Any_print_json_union_type+0xbc>
   12b54:	ldr	r0, [fp, #-4]
   12b58:	movw	r1, #0
   12b5c:	movt	r1, #0
   12b60:	movw	r2, #23
   12b64:	bl	0 <flatcc_json_printer_enum>
   12b68:	b	12bb0 <MyGame_Example_Any_print_json_union_type+0xbc>
   12b6c:	ldr	r0, [fp, #-4]
   12b70:	movw	r1, #0
   12b74:	movt	r1, #0
   12b78:	movw	r2, #8
   12b7c:	bl	0 <flatcc_json_printer_enum>
   12b80:	b	12bb0 <MyGame_Example_Any_print_json_union_type+0xbc>
   12b84:	ldr	r0, [fp, #-4]
   12b88:	movw	r1, #0
   12b8c:	movt	r1, #0
   12b90:	movw	r2, #3
   12b94:	bl	0 <flatcc_json_printer_enum>
   12b98:	b	12bb0 <MyGame_Example_Any_print_json_union_type+0xbc>
   12b9c:	ldr	r0, [fp, #-4]
   12ba0:	movw	r1, #0
   12ba4:	movt	r1, #0
   12ba8:	movw	r2, #4
   12bac:	bl	0 <flatcc_json_printer_enum>
   12bb0:	mov	sp, fp
   12bb4:	pop	{fp, pc}

00012bb8 <MyGame_Example_Any_print_json_union>:
   12bb8:	push	{fp, lr}
   12bbc:	mov	fp, sp
   12bc0:	sub	sp, sp, #16
   12bc4:	str	r0, [fp, #-4]
   12bc8:	str	r1, [sp, #8]
   12bcc:	ldr	r0, [sp, #8]
   12bd0:	ldrb	r0, [r0, #8]
   12bd4:	sub	r0, r0, #1
   12bd8:	cmp	r0, #3
   12bdc:	str	r0, [sp, #4]
   12be0:	bhi	12c64 <MyGame_Example_Any_print_json_union+0xac>
   12be4:	add	r0, pc, #8
   12be8:	ldr	r1, [sp, #4]
   12bec:	ldr	r0, [r0, r1, lsl #2]
   12bf0:	mov	pc, r0
   12bf4:	.word	0x00012c04
   12bf8:	.word	0x00012c1c
   12bfc:	.word	0x00012c34
   12c00:	.word	0x00012c4c
   12c04:	ldr	r0, [fp, #-4]
   12c08:	ldr	r1, [sp, #8]
   12c0c:	movw	r2, #0
   12c10:	movt	r2, #0
   12c14:	bl	0 <flatcc_json_printer_union_table>
   12c18:	b	12c68 <MyGame_Example_Any_print_json_union+0xb0>
   12c1c:	ldr	r0, [fp, #-4]
   12c20:	ldr	r1, [sp, #8]
   12c24:	movw	r2, #0
   12c28:	movt	r2, #0
   12c2c:	bl	0 <flatcc_json_printer_union_table>
   12c30:	b	12c68 <MyGame_Example_Any_print_json_union+0xb0>
   12c34:	ldr	r0, [fp, #-4]
   12c38:	ldr	r1, [sp, #8]
   12c3c:	movw	r2, #0
   12c40:	movt	r2, #0
   12c44:	bl	0 <flatcc_json_printer_union_table>
   12c48:	b	12c68 <MyGame_Example_Any_print_json_union+0xb0>
   12c4c:	ldr	r0, [fp, #-4]
   12c50:	ldr	r1, [sp, #8]
   12c54:	movw	r2, #0
   12c58:	movt	r2, #0
   12c5c:	bl	0 <flatcc_json_printer_union_table>
   12c60:	b	12c68 <MyGame_Example_Any_print_json_union+0xb0>
   12c64:	b	12c68 <MyGame_Example_Any_print_json_union+0xb0>
   12c68:	mov	sp, fp
   12c6c:	pop	{fp, pc}

00012c70 <MyGame_Example_Test_print_json_struct>:
   12c70:	push	{fp, lr}
   12c74:	mov	fp, sp
   12c78:	sub	sp, sp, #24
   12c7c:	str	r0, [fp, #-4]
   12c80:	str	r1, [fp, #-8]
   12c84:	ldr	r0, [fp, #-4]
   12c88:	ldr	r2, [fp, #-8]
   12c8c:	movw	r1, #0
   12c90:	str	r1, [sp, #12]
   12c94:	ldr	r3, [sp, #12]
   12c98:	movw	ip, #0
   12c9c:	movt	ip, #0
   12ca0:	str	ip, [sp]
   12ca4:	movw	ip, #1
   12ca8:	str	ip, [sp, #4]
   12cac:	bl	0 <flatcc_json_printer_int16_struct_field>
   12cb0:	ldr	r0, [fp, #-4]
   12cb4:	ldr	r2, [fp, #-8]
   12cb8:	movw	r1, #1
   12cbc:	str	r1, [sp, #8]
   12cc0:	movw	r3, #2
   12cc4:	movw	ip, #0
   12cc8:	movt	ip, #0
   12ccc:	str	ip, [sp]
   12cd0:	ldr	ip, [sp, #8]
   12cd4:	str	ip, [sp, #4]
   12cd8:	bl	0 <flatcc_json_printer_int8_struct_field>
   12cdc:	mov	sp, fp
   12ce0:	pop	{fp, pc}

00012ce4 <MyGame_Example_Stat_print_json_table>:
   12ce4:	push	{fp, lr}
   12ce8:	mov	fp, sp
   12cec:	sub	sp, sp, #24
   12cf0:	str	r0, [fp, #-4]
   12cf4:	str	r1, [fp, #-8]
   12cf8:	ldr	r0, [fp, #-4]
   12cfc:	ldr	r1, [fp, #-8]
   12d00:	movw	r2, #0
   12d04:	movw	r3, #0
   12d08:	movt	r3, #0
   12d0c:	movw	ip, #2
   12d10:	str	ip, [sp]
   12d14:	bl	0 <flatcc_json_printer_string_field>
   12d18:	ldr	r0, [fp, #-4]
   12d1c:	ldr	r1, [fp, #-8]
   12d20:	mov	r2, sp
   12d24:	mov	r3, #0
   12d28:	str	r3, [r2, #12]
   12d2c:	str	r3, [r2, #8]
   12d30:	mov	r3, #3
   12d34:	str	r3, [r2]
   12d38:	movw	r3, #0
   12d3c:	movt	r3, #0
   12d40:	mov	r2, #1
   12d44:	bl	0 <flatcc_json_printer_int64_field>
   12d48:	ldr	r0, [fp, #-4]
   12d4c:	ldr	r1, [fp, #-8]
   12d50:	movw	r2, #2
   12d54:	movw	r3, #0
   12d58:	movt	r3, #0
   12d5c:	movw	ip, #5
   12d60:	str	ip, [sp]
   12d64:	movw	ip, #0
   12d68:	uxth	ip, ip
   12d6c:	str	ip, [sp, #4]
   12d70:	bl	0 <flatcc_json_printer_uint16_field>
   12d74:	mov	sp, fp
   12d78:	pop	{fp, pc}

00012d7c <MyGame_Example_Ability_print_json_struct>:
   12d7c:	push	{fp, lr}
   12d80:	mov	fp, sp
   12d84:	sub	sp, sp, #24
   12d88:	str	r0, [fp, #-4]
   12d8c:	str	r1, [fp, #-8]
   12d90:	ldr	r0, [fp, #-4]
   12d94:	ldr	r2, [fp, #-8]
   12d98:	movw	r1, #0
   12d9c:	str	r1, [sp, #12]
   12da0:	ldr	r3, [sp, #12]
   12da4:	movw	ip, #0
   12da8:	movt	ip, #0
   12dac:	str	ip, [sp]
   12db0:	movw	ip, #2
   12db4:	str	ip, [sp, #4]
   12db8:	bl	0 <flatcc_json_printer_uint32_struct_field>
   12dbc:	ldr	r0, [fp, #-4]
   12dc0:	ldr	r2, [fp, #-8]
   12dc4:	movw	r1, #1
   12dc8:	movw	r3, #4
   12dcc:	movw	ip, #0
   12dd0:	movt	ip, #0
   12dd4:	str	ip, [sp]
   12dd8:	movw	ip, #8
   12ddc:	str	ip, [sp, #4]
   12de0:	bl	0 <flatcc_json_printer_uint32_struct_field>
   12de4:	mov	sp, fp
   12de8:	pop	{fp, pc}

00012dec <MyGame_InParentNamespace_print_json_table>:
   12dec:	sub	sp, sp, #8
   12df0:	str	r0, [sp, #4]
   12df4:	str	r1, [sp]
   12df8:	add	sp, sp, #8
   12dfc:	bx	lr

00012e00 <MyGame_Example_TestBase64_print_json_table>:
   12e00:	push	{fp, lr}
   12e04:	mov	fp, sp
   12e08:	sub	sp, sp, #24
   12e0c:	str	r0, [fp, #-4]
   12e10:	str	r1, [fp, #-8]
   12e14:	ldr	r0, [fp, #-4]
   12e18:	ldr	r1, [fp, #-8]
   12e1c:	movw	r2, #0
   12e20:	str	r2, [sp, #12]
   12e24:	movw	r3, #0
   12e28:	movt	r3, #0
   12e2c:	movw	ip, #4
   12e30:	str	ip, [sp]
   12e34:	ldr	ip, [sp, #12]
   12e38:	str	ip, [sp, #4]
   12e3c:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   12e40:	ldr	r0, [fp, #-4]
   12e44:	ldr	r1, [fp, #-8]
   12e48:	movw	r2, #1
   12e4c:	str	r2, [sp, #8]
   12e50:	movw	r3, #0
   12e54:	movt	r3, #0
   12e58:	movw	ip, #7
   12e5c:	str	ip, [sp]
   12e60:	ldr	ip, [sp, #8]
   12e64:	str	ip, [sp, #4]
   12e68:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   12e6c:	ldr	r0, [fp, #-4]
   12e70:	ldr	r1, [fp, #-8]
   12e74:	movw	r2, #2
   12e78:	movw	r3, #0
   12e7c:	movt	r3, #0
   12e80:	movw	ip, #6
   12e84:	str	ip, [sp]
   12e88:	movw	ip, #0
   12e8c:	str	ip, [sp, #4]
   12e90:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
   12e94:	mov	sp, fp
   12e98:	pop	{fp, pc}

00012e9c <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
   12e9c:	push	{fp, lr}
   12ea0:	mov	fp, sp
   12ea4:	sub	sp, sp, #32
   12ea8:	str	r0, [fp, #-4]
   12eac:	str	r1, [fp, #-8]
   12eb0:	ldr	r0, [fp, #-4]
   12eb4:	ldr	r1, [fp, #-8]
   12eb8:	movw	r2, #0
   12ebc:	movw	r3, #0
   12ec0:	movt	r3, #0
   12ec4:	movw	ip, #5
   12ec8:	str	ip, [sp]
   12ecc:	movw	ip, #2
   12ed0:	sxtb	ip, ip
   12ed4:	str	ip, [sp, #4]
   12ed8:	movw	ip, #0
   12edc:	movt	ip, #0
   12ee0:	str	ip, [sp, #8]
   12ee4:	bl	0 <flatcc_json_printer_int8_enum_field>
   12ee8:	ldr	r0, [fp, #-4]
   12eec:	ldr	r1, [fp, #-8]
   12ef0:	movw	r2, #1
   12ef4:	movw	r3, #0
   12ef8:	movt	r3, #0
   12efc:	movw	ip, #6
   12f00:	str	ip, [sp]
   12f04:	movw	ip, #2
   12f08:	sxtb	ip, ip
   12f0c:	str	ip, [sp, #4]
   12f10:	movw	ip, #0
   12f14:	movt	ip, #0
   12f18:	str	ip, [sp, #8]
   12f1c:	bl	0 <flatcc_json_printer_int8_enum_field>
   12f20:	ldr	r0, [fp, #-4]
   12f24:	ldr	r1, [fp, #-8]
   12f28:	movw	r2, #2
   12f2c:	str	r2, [fp, #-12]
   12f30:	movw	r3, #0
   12f34:	movt	r3, #0
   12f38:	ldr	ip, [fp, #-12]
   12f3c:	str	ip, [sp]
   12f40:	movw	lr, #2
   12f44:	and	lr, lr, #255	; 0xff
   12f48:	str	lr, [sp, #4]
   12f4c:	bl	0 <flatcc_json_printer_uint8_field>
   12f50:	ldr	r0, [fp, #-4]
   12f54:	ldr	r1, [fp, #-8]
   12f58:	movw	r2, #3
   12f5c:	str	r2, [sp, #16]
   12f60:	movw	r3, #0
   12f64:	movt	r3, #0
   12f68:	ldr	ip, [sp, #16]
   12f6c:	str	ip, [sp]
   12f70:	movw	lr, #2
   12f74:	and	lr, lr, #255	; 0xff
   12f78:	str	lr, [sp, #4]
   12f7c:	bl	0 <flatcc_json_printer_uint8_field>
   12f80:	mov	sp, fp
   12f84:	pop	{fp, pc}

00012f88 <MyGame_Example2_Monster_print_json_table>:
   12f88:	sub	sp, sp, #8
   12f8c:	str	r0, [sp, #4]
   12f90:	str	r1, [sp]
   12f94:	add	sp, sp, #8
   12f98:	bx	lr

00012f9c <MyGame_Example_Alt_print_json_table>:
   12f9c:	push	{fp, lr}
   12fa0:	mov	fp, sp
   12fa4:	sub	sp, sp, #24
   12fa8:	str	r0, [fp, #-4]
   12fac:	str	r1, [fp, #-8]
   12fb0:	ldr	r0, [fp, #-4]
   12fb4:	ldr	r1, [fp, #-8]
   12fb8:	movw	r2, #0
   12fbc:	movw	r3, #0
   12fc0:	movt	r3, #0
   12fc4:	movw	ip, #6
   12fc8:	str	ip, [sp]
   12fcc:	movw	ip, #0
   12fd0:	movt	ip, #0
   12fd4:	str	ip, [sp, #4]
   12fd8:	bl	0 <flatcc_json_printer_table_field>
   12fdc:	ldr	r0, [fp, #-4]
   12fe0:	ldr	r1, [fp, #-8]
   12fe4:	movw	r2, #1
   12fe8:	movw	r3, #0
   12fec:	movt	r3, #0
   12ff0:	movw	ip, #5
   12ff4:	str	ip, [sp]
   12ff8:	movw	ip, #0
   12ffc:	movt	ip, #0
   13000:	str	ip, [sp, #4]
   13004:	bl	0 <flatcc_json_printer_table_field>
   13008:	ldr	r0, [fp, #-4]
   1300c:	ldr	r1, [fp, #-8]
   13010:	movw	r2, #3
   13014:	movw	r3, #0
   13018:	movt	r3, #0
   1301c:	movw	ip, #7
   13020:	str	ip, [sp]
   13024:	movw	ip, #0
   13028:	movt	ip, #0
   1302c:	str	ip, [sp, #4]
   13030:	movw	ip, #0
   13034:	movt	ip, #0
   13038:	str	ip, [sp, #8]
   1303c:	bl	0 <flatcc_json_printer_union_vector_field>
   13040:	mov	sp, fp
   13044:	pop	{fp, pc}

00013048 <MyGame_Example_TestJSONPrefix_print_json_table>:
   13048:	push	{fp, lr}
   1304c:	mov	fp, sp
   13050:	sub	sp, sp, #16
   13054:	str	r0, [fp, #-4]
   13058:	str	r1, [sp, #8]
   1305c:	ldr	r0, [fp, #-4]
   13060:	ldr	r1, [sp, #8]
   13064:	movw	r2, #0
   13068:	movw	r3, #0
   1306c:	movt	r3, #0
   13070:	movw	ip, #21
   13074:	str	ip, [sp]
   13078:	movw	ip, #0
   1307c:	movt	ip, #0
   13080:	str	ip, [sp, #4]
   13084:	bl	0 <flatcc_json_printer_table_field>
   13088:	ldr	r0, [fp, #-4]
   1308c:	ldr	r1, [sp, #8]
   13090:	movw	r2, #1
   13094:	movw	r3, #0
   13098:	movt	r3, #0
   1309c:	movw	ip, #22
   130a0:	str	ip, [sp]
   130a4:	movw	ip, #0
   130a8:	movt	ip, #0
   130ac:	str	ip, [sp, #4]
   130b0:	bl	0 <flatcc_json_printer_table_field>
   130b4:	ldr	r0, [fp, #-4]
   130b8:	ldr	r1, [sp, #8]
   130bc:	movw	r2, #2
   130c0:	movw	r3, #0
   130c4:	movt	r3, #0
   130c8:	movw	ip, #22
   130cc:	str	ip, [sp]
   130d0:	movw	ip, #0
   130d4:	movt	ip, #0
   130d8:	str	ip, [sp, #4]
   130dc:	bl	0 <flatcc_json_printer_table_field>
   130e0:	mov	sp, fp
   130e4:	pop	{fp, pc}

000130e8 <Fantasy_Movie_print_json_table>:
   130e8:	push	{fp, lr}
   130ec:	mov	fp, sp
   130f0:	sub	sp, sp, #24
   130f4:	str	r0, [fp, #-4]
   130f8:	str	r1, [fp, #-8]
   130fc:	ldr	r0, [fp, #-4]
   13100:	ldr	r1, [fp, #-8]
   13104:	movw	r2, #1
   13108:	movw	r3, #0
   1310c:	movt	r3, #0
   13110:	movw	ip, #14
   13114:	str	ip, [sp]
   13118:	movw	ip, #0
   1311c:	movt	ip, #0
   13120:	str	ip, [sp, #4]
   13124:	movw	ip, #0
   13128:	movt	ip, #0
   1312c:	str	ip, [sp, #8]
   13130:	bl	0 <flatcc_json_printer_union_field>
   13134:	ldr	r0, [fp, #-4]
   13138:	ldr	r1, [fp, #-8]
   1313c:	movw	r2, #3
   13140:	movw	r3, #0
   13144:	movt	r3, #0
   13148:	movw	ip, #10
   1314c:	str	ip, [sp]
   13150:	movw	ip, #0
   13154:	movt	ip, #0
   13158:	str	ip, [sp, #4]
   1315c:	movw	ip, #0
   13160:	movt	ip, #0
   13164:	str	ip, [sp, #8]
   13168:	bl	0 <flatcc_json_printer_union_field>
   1316c:	ldr	r0, [fp, #-4]
   13170:	ldr	r1, [fp, #-8]
   13174:	movw	r2, #5
   13178:	movw	r3, #0
   1317c:	movt	r3, #0
   13180:	movw	ip, #9
   13184:	str	ip, [sp]
   13188:	movw	ip, #0
   1318c:	movt	ip, #0
   13190:	str	ip, [sp, #4]
   13194:	movw	ip, #0
   13198:	movt	ip, #0
   1319c:	str	ip, [sp, #8]
   131a0:	bl	0 <flatcc_json_printer_union_field>
   131a4:	ldr	r0, [fp, #-4]
   131a8:	ldr	r1, [fp, #-8]
   131ac:	movw	r2, #7
   131b0:	movw	r3, #0
   131b4:	movt	r3, #0
   131b8:	movw	ip, #5
   131bc:	str	ip, [sp]
   131c0:	movw	ip, #0
   131c4:	movt	ip, #0
   131c8:	str	ip, [sp, #4]
   131cc:	movw	ip, #0
   131d0:	movt	ip, #0
   131d4:	str	ip, [sp, #8]
   131d8:	bl	0 <flatcc_json_printer_union_field>
   131dc:	ldr	r0, [fp, #-4]
   131e0:	ldr	r1, [fp, #-8]
   131e4:	movw	r2, #9
   131e8:	movw	r3, #0
   131ec:	movt	r3, #0
   131f0:	movw	ip, #10
   131f4:	str	ip, [sp]
   131f8:	movw	ip, #0
   131fc:	movt	ip, #0
   13200:	str	ip, [sp, #4]
   13204:	movw	ip, #0
   13208:	movt	ip, #0
   1320c:	str	ip, [sp, #8]
   13210:	bl	0 <flatcc_json_printer_union_vector_field>
   13214:	mov	sp, fp
   13218:	pop	{fp, pc}

0001321c <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
   1321c:	push	{fp, lr}
   13220:	mov	fp, sp
   13224:	sub	sp, sp, #32
   13228:	str	r0, [fp, #-4]
   1322c:	str	r1, [fp, #-8]
   13230:	ldr	r0, [fp, #-4]
   13234:	ldr	r1, [fp, #-8]
   13238:	movw	r2, #0
   1323c:	movw	r3, #0
   13240:	movt	r3, #0
   13244:	movw	ip, #4
   13248:	str	ip, [sp]
   1324c:	bl	0 <flatcc_json_printer_string_field>
   13250:	ldr	r0, [fp, #-4]
   13254:	ldr	r1, [fp, #-8]
   13258:	movw	r2, #1
   1325c:	movw	r3, #0
   13260:	movt	r3, #0
   13264:	movw	ip, #9
   13268:	str	ip, [sp]
   1326c:	movw	ip, #0
   13270:	str	ip, [sp, #4]
   13274:	bl	0 <flatcc_json_printer_uint32_field>
   13278:	ldr	r0, [fp, #-4]
   1327c:	ldr	r1, [fp, #-8]
   13280:	movw	r2, #2
   13284:	movw	r3, #0
   13288:	movt	r3, #0
   1328c:	movw	ip, #4
   13290:	str	ip, [sp]
   13294:	bl	0 <flatcc_json_printer_string_field>
   13298:	ldr	r0, [fp, #-4]
   1329c:	ldr	r1, [fp, #-8]
   132a0:	mov	r2, sp
   132a4:	mov	r3, #0
   132a8:	str	r3, [r2, #12]
   132ac:	str	r3, [r2, #8]
   132b0:	mov	r3, #8
   132b4:	str	r3, [r2]
   132b8:	movw	r3, #0
   132bc:	movt	r3, #0
   132c0:	mov	r2, #3
   132c4:	bl	0 <flatcc_json_printer_int64_field>
   132c8:	ldr	r0, [fp, #-4]
   132cc:	ldr	r1, [fp, #-8]
   132d0:	movw	r2, #4
   132d4:	str	r2, [fp, #-12]
   132d8:	movw	r3, #0
   132dc:	movt	r3, #0
   132e0:	ldr	ip, [fp, #-12]
   132e4:	str	ip, [sp]
   132e8:	bl	0 <flatcc_json_printer_string_field>
   132ec:	ldr	r0, [fp, #-4]
   132f0:	ldr	r1, [fp, #-8]
   132f4:	mov	r2, sp
   132f8:	mov	r3, #0
   132fc:	str	r3, [r2, #12]
   13300:	str	r3, [r2, #8]
   13304:	mov	r3, #8
   13308:	str	r3, [r2]
   1330c:	movw	r3, #0
   13310:	movt	r3, #0
   13314:	mov	r2, #5
   13318:	bl	0 <flatcc_json_printer_int64_field>
   1331c:	ldr	r0, [fp, #-4]
   13320:	ldr	r1, [fp, #-8]
   13324:	movw	r2, #6
   13328:	movw	r3, #0
   1332c:	movt	r3, #0
   13330:	movw	ip, #9
   13334:	str	ip, [sp]
   13338:	movw	ip, #0
   1333c:	str	ip, [sp, #4]
   13340:	bl	0 <flatcc_json_printer_uint32_field>
   13344:	ldr	r0, [fp, #-4]
   13348:	ldr	r1, [fp, #-8]
   1334c:	mov	r2, sp
   13350:	mov	r3, #0
   13354:	str	r3, [r2, #12]
   13358:	str	r3, [r2, #8]
   1335c:	mov	r3, #8
   13360:	str	r3, [r2]
   13364:	movw	r3, #0
   13368:	movt	r3, #0
   1336c:	mov	r2, #7
   13370:	bl	0 <flatcc_json_printer_int64_field>
   13374:	ldr	r0, [fp, #-4]
   13378:	ldr	r1, [fp, #-8]
   1337c:	movw	r2, #8
   13380:	movw	r3, #0
   13384:	movt	r3, #0
   13388:	movw	ip, #9
   1338c:	str	ip, [sp]
   13390:	movw	ip, #0
   13394:	str	ip, [sp, #4]
   13398:	bl	0 <flatcc_json_printer_uint32_field>
   1339c:	mov	sp, fp
   133a0:	pop	{fp, pc}

000133a4 <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
   133a4:	push	{fp, lr}
   133a8:	mov	fp, sp
   133ac:	sub	sp, sp, #32
   133b0:	str	r0, [fp, #-4]
   133b4:	str	r1, [fp, #-8]
   133b8:	ldr	r0, [fp, #-4]
   133bc:	ldr	r1, [fp, #-8]
   133c0:	mov	r2, sp
   133c4:	mov	r3, #0
   133c8:	str	r3, [r2, #12]
   133cc:	str	r3, [r2, #8]
   133d0:	mov	ip, #15
   133d4:	str	ip, [r2]
   133d8:	movw	r2, #0
   133dc:	movt	r2, #0
   133e0:	str	r2, [fp, #-12]
   133e4:	mov	r2, r3
   133e8:	ldr	r3, [fp, #-12]
   133ec:	bl	0 <flatcc_json_printer_int64_field>
   133f0:	ldr	r0, [fp, #-4]
   133f4:	ldr	r1, [fp, #-8]
   133f8:	movw	r2, #1
   133fc:	movw	r3, #0
   13400:	movt	r3, #0
   13404:	movw	ip, #16
   13408:	str	ip, [sp]
   1340c:	movw	ip, #0
   13410:	str	ip, [sp, #4]
   13414:	bl	0 <flatcc_json_printer_uint32_field>
   13418:	mov	sp, fp
   1341c:	pop	{fp, pc}

00013420 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
   13420:	push	{fp, lr}
   13424:	mov	fp, sp
   13428:	sub	sp, sp, #32
   1342c:	str	r0, [fp, #-4]
   13430:	str	r1, [fp, #-8]
   13434:	ldr	r0, [fp, #-4]
   13438:	ldr	r1, [fp, #-8]
   1343c:	mov	r2, sp
   13440:	mov	r3, #0
   13444:	str	r3, [r2, #12]
   13448:	str	r3, [r2, #8]
   1344c:	mov	ip, #15
   13450:	str	ip, [r2]
   13454:	movw	r2, #0
   13458:	movt	r2, #0
   1345c:	str	r2, [fp, #-12]
   13460:	mov	r2, r3
   13464:	ldr	r3, [fp, #-12]
   13468:	bl	0 <flatcc_json_printer_int64_field>
   1346c:	ldr	r0, [fp, #-4]
   13470:	ldr	r1, [fp, #-8]
   13474:	movw	r2, #1
   13478:	movw	r3, #0
   1347c:	movt	r3, #0
   13480:	movw	ip, #21
   13484:	str	ip, [sp]
   13488:	movw	ip, #0
   1348c:	str	ip, [sp, #4]
   13490:	bl	0 <flatcc_json_printer_uint32_field>
   13494:	mov	sp, fp
   13498:	pop	{fp, pc}

0001349c <Fantasy_Character_print_json_union_type>:
   1349c:	push	{fp, lr}
   134a0:	mov	fp, sp
   134a4:	sub	sp, sp, #16
   134a8:	str	r0, [fp, #-4]
   134ac:	strb	r1, [fp, #-5]
   134b0:	ldrb	r0, [fp, #-5]
   134b4:	mov	r1, r0
   134b8:	cmp	r0, #2
   134bc:	str	r1, [sp, #4]
   134c0:	beq	13518 <Fantasy_Character_print_json_union_type+0x7c>
   134c4:	b	134c8 <Fantasy_Character_print_json_union_type+0x2c>
   134c8:	ldr	r0, [sp, #4]
   134cc:	cmp	r0, #8
   134d0:	beq	13530 <Fantasy_Character_print_json_union_type+0x94>
   134d4:	b	134d8 <Fantasy_Character_print_json_union_type+0x3c>
   134d8:	ldr	r0, [sp, #4]
   134dc:	cmp	r0, #9
   134e0:	beq	13548 <Fantasy_Character_print_json_union_type+0xac>
   134e4:	b	134e8 <Fantasy_Character_print_json_union_type+0x4c>
   134e8:	ldr	r0, [sp, #4]
   134ec:	cmp	r0, #10
   134f0:	beq	13560 <Fantasy_Character_print_json_union_type+0xc4>
   134f4:	b	134f8 <Fantasy_Character_print_json_union_type+0x5c>
   134f8:	ldr	r0, [sp, #4]
   134fc:	cmp	r0, #11
   13500:	beq	13578 <Fantasy_Character_print_json_union_type+0xdc>
   13504:	b	13508 <Fantasy_Character_print_json_union_type+0x6c>
   13508:	ldr	r0, [sp, #4]
   1350c:	cmp	r0, #255	; 0xff
   13510:	beq	13590 <Fantasy_Character_print_json_union_type+0xf4>
   13514:	b	135a8 <Fantasy_Character_print_json_union_type+0x10c>
   13518:	ldr	r0, [fp, #-4]
   1351c:	movw	r1, #0
   13520:	movt	r1, #0
   13524:	movw	r2, #5
   13528:	bl	0 <flatcc_json_printer_enum>
   1352c:	b	135bc <Fantasy_Character_print_json_union_type+0x120>
   13530:	ldr	r0, [fp, #-4]
   13534:	movw	r1, #0
   13538:	movt	r1, #0
   1353c:	movw	r2, #8
   13540:	bl	0 <flatcc_json_printer_enum>
   13544:	b	135bc <Fantasy_Character_print_json_union_type+0x120>
   13548:	ldr	r0, [fp, #-4]
   1354c:	movw	r1, #0
   13550:	movt	r1, #0
   13554:	movw	r2, #5
   13558:	bl	0 <flatcc_json_printer_enum>
   1355c:	b	135bc <Fantasy_Character_print_json_union_type+0x120>
   13560:	ldr	r0, [fp, #-4]
   13564:	movw	r1, #0
   13568:	movt	r1, #0
   1356c:	movw	r2, #7
   13570:	bl	0 <flatcc_json_printer_enum>
   13574:	b	135bc <Fantasy_Character_print_json_union_type+0x120>
   13578:	ldr	r0, [fp, #-4]
   1357c:	movw	r1, #0
   13580:	movt	r1, #0
   13584:	movw	r2, #5
   13588:	bl	0 <flatcc_json_printer_enum>
   1358c:	b	135bc <Fantasy_Character_print_json_union_type+0x120>
   13590:	ldr	r0, [fp, #-4]
   13594:	movw	r1, #0
   13598:	movt	r1, #0
   1359c:	movw	r2, #6
   135a0:	bl	0 <flatcc_json_printer_enum>
   135a4:	b	135bc <Fantasy_Character_print_json_union_type+0x120>
   135a8:	ldr	r0, [fp, #-4]
   135ac:	movw	r1, #0
   135b0:	movt	r1, #0
   135b4:	movw	r2, #4
   135b8:	bl	0 <flatcc_json_printer_enum>
   135bc:	mov	sp, fp
   135c0:	pop	{fp, pc}

000135c4 <Fantasy_Character_print_json_union>:
   135c4:	push	{fp, lr}
   135c8:	mov	fp, sp
   135cc:	sub	sp, sp, #16
   135d0:	str	r0, [fp, #-4]
   135d4:	str	r1, [sp, #8]
   135d8:	ldr	r0, [sp, #8]
   135dc:	ldrb	r0, [r0, #8]
   135e0:	mov	r1, r0
   135e4:	cmp	r0, #2
   135e8:	str	r1, [sp, #4]
   135ec:	beq	13644 <Fantasy_Character_print_json_union+0x80>
   135f0:	b	135f4 <Fantasy_Character_print_json_union+0x30>
   135f4:	ldr	r0, [sp, #4]
   135f8:	cmp	r0, #8
   135fc:	beq	1365c <Fantasy_Character_print_json_union+0x98>
   13600:	b	13604 <Fantasy_Character_print_json_union+0x40>
   13604:	ldr	r0, [sp, #4]
   13608:	cmp	r0, #9
   1360c:	beq	13674 <Fantasy_Character_print_json_union+0xb0>
   13610:	b	13614 <Fantasy_Character_print_json_union+0x50>
   13614:	ldr	r0, [sp, #4]
   13618:	cmp	r0, #10
   1361c:	beq	1368c <Fantasy_Character_print_json_union+0xc8>
   13620:	b	13624 <Fantasy_Character_print_json_union+0x60>
   13624:	ldr	r0, [sp, #4]
   13628:	cmp	r0, #11
   1362c:	beq	136a4 <Fantasy_Character_print_json_union+0xe0>
   13630:	b	13634 <Fantasy_Character_print_json_union+0x70>
   13634:	ldr	r0, [sp, #4]
   13638:	cmp	r0, #255	; 0xff
   1363c:	beq	136b4 <Fantasy_Character_print_json_union+0xf0>
   13640:	b	136c4 <Fantasy_Character_print_json_union+0x100>
   13644:	ldr	r0, [fp, #-4]
   13648:	ldr	r1, [sp, #8]
   1364c:	movw	r2, #0
   13650:	movt	r2, #0
   13654:	bl	0 <flatcc_json_printer_union_table>
   13658:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   1365c:	ldr	r0, [fp, #-4]
   13660:	ldr	r1, [sp, #8]
   13664:	movw	r2, #0
   13668:	movt	r2, #0
   1366c:	bl	0 <flatcc_json_printer_union_struct>
   13670:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   13674:	ldr	r0, [fp, #-4]
   13678:	ldr	r1, [sp, #8]
   1367c:	movw	r2, #0
   13680:	movt	r2, #0
   13684:	bl	0 <flatcc_json_printer_union_struct>
   13688:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   1368c:	ldr	r0, [fp, #-4]
   13690:	ldr	r1, [sp, #8]
   13694:	movw	r2, #0
   13698:	movt	r2, #0
   1369c:	bl	0 <flatcc_json_printer_union_struct>
   136a0:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   136a4:	ldr	r0, [fp, #-4]
   136a8:	ldr	r1, [sp, #8]
   136ac:	bl	0 <flatcc_json_printer_union_string>
   136b0:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   136b4:	ldr	r0, [fp, #-4]
   136b8:	ldr	r1, [sp, #8]
   136bc:	bl	0 <flatcc_json_printer_union_string>
   136c0:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   136c4:	b	136c8 <Fantasy_Character_print_json_union+0x104>
   136c8:	mov	sp, fp
   136cc:	pop	{fp, pc}

000136d0 <Fantasy_Attacker_print_json_table>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	sub	sp, sp, #24
   136dc:	str	r0, [fp, #-4]
   136e0:	str	r1, [fp, #-8]
   136e4:	ldr	r0, [fp, #-4]
   136e8:	ldr	r1, [fp, #-8]
   136ec:	movw	r2, #0
   136f0:	str	r2, [sp, #12]
   136f4:	movw	r3, #0
   136f8:	movt	r3, #0
   136fc:	movw	ip, #19
   13700:	str	ip, [sp]
   13704:	ldr	ip, [sp, #12]
   13708:	str	ip, [sp, #4]
   1370c:	bl	0 <flatcc_json_printer_int32_field>
   13710:	mov	sp, fp
   13714:	pop	{fp, pc}

00013718 <Fantasy_Rapunzel_print_json_struct>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	sub	sp, sp, #24
   13724:	str	r0, [fp, #-4]
   13728:	str	r1, [fp, #-8]
   1372c:	ldr	r0, [fp, #-4]
   13730:	ldr	r2, [fp, #-8]
   13734:	movw	r1, #0
   13738:	str	r1, [sp, #12]
   1373c:	ldr	r3, [sp, #12]
   13740:	movw	ip, #0
   13744:	movt	ip, #0
   13748:	str	ip, [sp]
   1374c:	movw	ip, #11
   13750:	str	ip, [sp, #4]
   13754:	bl	0 <flatcc_json_printer_uint16_struct_field>
   13758:	mov	sp, fp
   1375c:	pop	{fp, pc}

00013760 <Fantasy_BookReader_print_json_struct>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	sub	sp, sp, #24
   1376c:	str	r0, [fp, #-4]
   13770:	str	r1, [fp, #-8]
   13774:	ldr	r0, [fp, #-4]
   13778:	ldr	r2, [fp, #-8]
   1377c:	movw	r1, #0
   13780:	str	r1, [sp, #12]
   13784:	ldr	r3, [sp, #12]
   13788:	movw	ip, #0
   1378c:	movt	ip, #0
   13790:	str	ip, [sp]
   13794:	movw	ip, #10
   13798:	str	ip, [sp, #4]
   1379c:	bl	0 <flatcc_json_printer_int32_struct_field>
   137a0:	mov	sp, fp
   137a4:	pop	{fp, pc}

000137a8 <MyGame_Example_Any_union_verifier>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	sub	sp, sp, #16
   137b4:	str	r0, [sp, #8]
   137b8:	ldr	r0, [sp, #8]
   137bc:	ldrb	r0, [r0, #12]
   137c0:	sub	r0, r0, #1
   137c4:	cmp	r0, #3
   137c8:	str	r0, [sp, #4]
   137cc:	bhi	13850 <MyGame_Example_Any_union_verifier+0xa8>
   137d0:	add	r0, pc, #8
   137d4:	ldr	r1, [sp, #4]
   137d8:	ldr	r0, [r0, r1, lsl #2]
   137dc:	mov	pc, r0
   137e0:	.word	0x000137f0
   137e4:	.word	0x00013808
   137e8:	.word	0x00013820
   137ec:	.word	0x00013838
   137f0:	ldr	r0, [sp, #8]
   137f4:	movw	r1, #0
   137f8:	movt	r1, #0
   137fc:	bl	0 <flatcc_verify_union_table>
   13800:	str	r0, [fp, #-4]
   13804:	b	13858 <MyGame_Example_Any_union_verifier+0xb0>
   13808:	ldr	r0, [sp, #8]
   1380c:	movw	r1, #0
   13810:	movt	r1, #0
   13814:	bl	0 <flatcc_verify_union_table>
   13818:	str	r0, [fp, #-4]
   1381c:	b	13858 <MyGame_Example_Any_union_verifier+0xb0>
   13820:	ldr	r0, [sp, #8]
   13824:	movw	r1, #0
   13828:	movt	r1, #0
   1382c:	bl	0 <flatcc_verify_union_table>
   13830:	str	r0, [fp, #-4]
   13834:	b	13858 <MyGame_Example_Any_union_verifier+0xb0>
   13838:	ldr	r0, [sp, #8]
   1383c:	movw	r1, #0
   13840:	movt	r1, #0
   13844:	bl	0 <flatcc_verify_union_table>
   13848:	str	r0, [fp, #-4]
   1384c:	b	13858 <MyGame_Example_Any_union_verifier+0xb0>
   13850:	movw	r0, #0
   13854:	str	r0, [fp, #-4]
   13858:	ldr	r0, [fp, #-4]
   1385c:	mov	sp, fp
   13860:	pop	{fp, pc}

00013864 <MyGame_Example_Stat_verify_table>:
   13864:	push	{fp, lr}
   13868:	mov	fp, sp
   1386c:	sub	sp, sp, #16
   13870:	str	r0, [sp, #8]
   13874:	ldr	r0, [sp, #8]
   13878:	movw	r1, #0
   1387c:	uxth	r1, r1
   13880:	movw	r2, #0
   13884:	bl	0 <flatcc_verify_string_field>
   13888:	str	r0, [sp, #4]
   1388c:	cmp	r0, #0
   13890:	beq	138a0 <MyGame_Example_Stat_verify_table+0x3c>
   13894:	ldr	r0, [sp, #4]
   13898:	str	r0, [fp, #-4]
   1389c:	b	13918 <MyGame_Example_Stat_verify_table+0xb4>
   138a0:	ldr	r0, [sp, #8]
   138a4:	movw	r1, #1
   138a8:	uxth	r1, r1
   138ac:	movw	r2, #8
   138b0:	movw	r3, #8
   138b4:	uxth	r3, r3
   138b8:	bl	0 <flatcc_verify_field>
   138bc:	str	r0, [sp, #4]
   138c0:	cmp	r0, #0
   138c4:	beq	138d4 <MyGame_Example_Stat_verify_table+0x70>
   138c8:	ldr	r0, [sp, #4]
   138cc:	str	r0, [fp, #-4]
   138d0:	b	13918 <MyGame_Example_Stat_verify_table+0xb4>
   138d4:	ldr	r0, [sp, #8]
   138d8:	movw	r1, #2
   138dc:	uxth	r2, r1
   138e0:	str	r1, [sp]
   138e4:	mov	r1, r2
   138e8:	movw	r2, #2
   138ec:	ldr	r3, [sp]
   138f0:	uxth	r3, r3
   138f4:	bl	0 <flatcc_verify_field>
   138f8:	str	r0, [sp, #4]
   138fc:	cmp	r0, #0
   13900:	beq	13910 <MyGame_Example_Stat_verify_table+0xac>
   13904:	ldr	r0, [sp, #4]
   13908:	str	r0, [fp, #-4]
   1390c:	b	13918 <MyGame_Example_Stat_verify_table+0xb4>
   13910:	movw	r0, #0
   13914:	str	r0, [fp, #-4]
   13918:	ldr	r0, [fp, #-4]
   1391c:	mov	sp, fp
   13920:	pop	{fp, pc}

00013924 <MyGame_InParentNamespace_verify_table>:
   13924:	sub	sp, sp, #4
   13928:	str	r0, [sp]
   1392c:	movw	r0, #0
   13930:	add	sp, sp, #4
   13934:	bx	lr

00013938 <MyGame_Example_TestBase64_verify_table>:
   13938:	push	{fp, lr}
   1393c:	mov	fp, sp
   13940:	sub	sp, sp, #32
   13944:	str	r0, [fp, #-8]
   13948:	ldr	r0, [fp, #-8]
   1394c:	movw	r1, #0
   13950:	uxth	r1, r1
   13954:	movw	r2, #0
   13958:	movw	r3, #1
   1395c:	movw	ip, #1
   13960:	uxth	ip, ip
   13964:	str	ip, [sp]
   13968:	mvn	ip, #0
   1396c:	str	ip, [sp, #4]
   13970:	bl	0 <flatcc_verify_vector_field>
   13974:	str	r0, [fp, #-12]
   13978:	cmp	r0, #0
   1397c:	beq	1398c <MyGame_Example_TestBase64_verify_table+0x54>
   13980:	ldr	r0, [fp, #-12]
   13984:	str	r0, [fp, #-4]
   13988:	b	13a2c <MyGame_Example_TestBase64_verify_table+0xf4>
   1398c:	ldr	r0, [fp, #-8]
   13990:	movw	r1, #1
   13994:	uxth	r2, r1
   13998:	str	r1, [sp, #16]
   1399c:	mov	r1, r2
   139a0:	movw	r2, #0
   139a4:	movw	r3, #1
   139a8:	ldr	ip, [sp, #16]
   139ac:	uxth	lr, ip
   139b0:	str	lr, [sp]
   139b4:	mvn	lr, #0
   139b8:	str	lr, [sp, #4]
   139bc:	bl	0 <flatcc_verify_vector_field>
   139c0:	str	r0, [fp, #-12]
   139c4:	cmp	r0, #0
   139c8:	beq	139d8 <MyGame_Example_TestBase64_verify_table+0xa0>
   139cc:	ldr	r0, [fp, #-12]
   139d0:	str	r0, [fp, #-4]
   139d4:	b	13a2c <MyGame_Example_TestBase64_verify_table+0xf4>
   139d8:	ldr	r0, [fp, #-8]
   139dc:	movw	r1, #2
   139e0:	uxth	r1, r1
   139e4:	movw	r2, #0
   139e8:	str	r2, [sp, #12]
   139ec:	ldr	r3, [sp, #12]
   139f0:	movw	ip, #1
   139f4:	uxth	ip, ip
   139f8:	str	ip, [sp]
   139fc:	movw	ip, #0
   13a00:	movt	ip, #0
   13a04:	str	ip, [sp, #4]
   13a08:	bl	0 <flatcc_verify_table_as_nested_root>
   13a0c:	str	r0, [fp, #-12]
   13a10:	cmp	r0, #0
   13a14:	beq	13a24 <MyGame_Example_TestBase64_verify_table+0xec>
   13a18:	ldr	r0, [fp, #-12]
   13a1c:	str	r0, [fp, #-4]
   13a20:	b	13a2c <MyGame_Example_TestBase64_verify_table+0xf4>
   13a24:	movw	r0, #0
   13a28:	str	r0, [fp, #-4]
   13a2c:	ldr	r0, [fp, #-4]
   13a30:	mov	sp, fp
   13a34:	pop	{fp, pc}

00013a38 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
   13a38:	push	{fp, lr}
   13a3c:	mov	fp, sp
   13a40:	sub	sp, sp, #16
   13a44:	str	r0, [sp, #8]
   13a48:	ldr	r0, [sp, #8]
   13a4c:	movw	r1, #0
   13a50:	uxth	r1, r1
   13a54:	movw	r2, #1
   13a58:	movw	r3, #1
   13a5c:	uxth	r3, r3
   13a60:	bl	0 <flatcc_verify_field>
   13a64:	str	r0, [sp, #4]
   13a68:	cmp	r0, #0
   13a6c:	beq	13a7c <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x44>
   13a70:	ldr	r0, [sp, #4]
   13a74:	str	r0, [fp, #-4]
   13a78:	b	13b28 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   13a7c:	ldr	r0, [sp, #8]
   13a80:	movw	r1, #1
   13a84:	uxth	r2, r1
   13a88:	str	r1, [sp]
   13a8c:	mov	r1, r2
   13a90:	movw	r2, #1
   13a94:	ldr	r3, [sp]
   13a98:	uxth	r3, r3
   13a9c:	bl	0 <flatcc_verify_field>
   13aa0:	str	r0, [sp, #4]
   13aa4:	cmp	r0, #0
   13aa8:	beq	13ab8 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x80>
   13aac:	ldr	r0, [sp, #4]
   13ab0:	str	r0, [fp, #-4]
   13ab4:	b	13b28 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   13ab8:	ldr	r0, [sp, #8]
   13abc:	movw	r1, #2
   13ac0:	uxth	r1, r1
   13ac4:	movw	r2, #1
   13ac8:	movw	r3, #1
   13acc:	uxth	r3, r3
   13ad0:	bl	0 <flatcc_verify_field>
   13ad4:	str	r0, [sp, #4]
   13ad8:	cmp	r0, #0
   13adc:	beq	13aec <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xb4>
   13ae0:	ldr	r0, [sp, #4]
   13ae4:	str	r0, [fp, #-4]
   13ae8:	b	13b28 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   13aec:	ldr	r0, [sp, #8]
   13af0:	movw	r1, #3
   13af4:	uxth	r1, r1
   13af8:	movw	r2, #1
   13afc:	movw	r3, #1
   13b00:	uxth	r3, r3
   13b04:	bl	0 <flatcc_verify_field>
   13b08:	str	r0, [sp, #4]
   13b0c:	cmp	r0, #0
   13b10:	beq	13b20 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xe8>
   13b14:	ldr	r0, [sp, #4]
   13b18:	str	r0, [fp, #-4]
   13b1c:	b	13b28 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0xf0>
   13b20:	movw	r0, #0
   13b24:	str	r0, [fp, #-4]
   13b28:	ldr	r0, [fp, #-4]
   13b2c:	mov	sp, fp
   13b30:	pop	{fp, pc}

00013b34 <MyGame_Example2_Monster_verify_table>:
   13b34:	sub	sp, sp, #4
   13b38:	str	r0, [sp]
   13b3c:	movw	r0, #0
   13b40:	add	sp, sp, #4
   13b44:	bx	lr

00013b48 <MyGame_Example_Alt_verify_table>:
   13b48:	push	{fp, lr}
   13b4c:	mov	fp, sp
   13b50:	sub	sp, sp, #16
   13b54:	str	r0, [sp, #8]
   13b58:	ldr	r0, [sp, #8]
   13b5c:	movw	r1, #0
   13b60:	uxth	r1, r1
   13b64:	movw	r2, #0
   13b68:	movw	r3, #0
   13b6c:	movt	r3, #0
   13b70:	bl	0 <flatcc_verify_table_field>
   13b74:	str	r0, [sp, #4]
   13b78:	cmp	r0, #0
   13b7c:	beq	13b8c <MyGame_Example_Alt_verify_table+0x44>
   13b80:	ldr	r0, [sp, #4]
   13b84:	str	r0, [fp, #-4]
   13b88:	b	13bfc <MyGame_Example_Alt_verify_table+0xb4>
   13b8c:	ldr	r0, [sp, #8]
   13b90:	movw	r1, #1
   13b94:	uxth	r1, r1
   13b98:	movw	r2, #0
   13b9c:	movw	r3, #0
   13ba0:	movt	r3, #0
   13ba4:	bl	0 <flatcc_verify_table_field>
   13ba8:	str	r0, [sp, #4]
   13bac:	cmp	r0, #0
   13bb0:	beq	13bc0 <MyGame_Example_Alt_verify_table+0x78>
   13bb4:	ldr	r0, [sp, #4]
   13bb8:	str	r0, [fp, #-4]
   13bbc:	b	13bfc <MyGame_Example_Alt_verify_table+0xb4>
   13bc0:	ldr	r0, [sp, #8]
   13bc4:	movw	r1, #3
   13bc8:	uxth	r1, r1
   13bcc:	movw	r2, #0
   13bd0:	movw	r3, #0
   13bd4:	movt	r3, #0
   13bd8:	bl	0 <flatcc_verify_union_vector_field>
   13bdc:	str	r0, [sp, #4]
   13be0:	cmp	r0, #0
   13be4:	beq	13bf4 <MyGame_Example_Alt_verify_table+0xac>
   13be8:	ldr	r0, [sp, #4]
   13bec:	str	r0, [fp, #-4]
   13bf0:	b	13bfc <MyGame_Example_Alt_verify_table+0xb4>
   13bf4:	movw	r0, #0
   13bf8:	str	r0, [fp, #-4]
   13bfc:	ldr	r0, [fp, #-4]
   13c00:	mov	sp, fp
   13c04:	pop	{fp, pc}

00013c08 <MyGame_Example_TestJSONPrefix_verify_table>:
   13c08:	push	{fp, lr}
   13c0c:	mov	fp, sp
   13c10:	sub	sp, sp, #16
   13c14:	str	r0, [sp, #8]
   13c18:	ldr	r0, [sp, #8]
   13c1c:	movw	r1, #0
   13c20:	uxth	r1, r1
   13c24:	movw	r2, #0
   13c28:	movw	r3, #0
   13c2c:	movt	r3, #0
   13c30:	bl	0 <flatcc_verify_table_field>
   13c34:	str	r0, [sp, #4]
   13c38:	cmp	r0, #0
   13c3c:	beq	13c4c <MyGame_Example_TestJSONPrefix_verify_table+0x44>
   13c40:	ldr	r0, [sp, #4]
   13c44:	str	r0, [fp, #-4]
   13c48:	b	13cbc <MyGame_Example_TestJSONPrefix_verify_table+0xb4>
   13c4c:	ldr	r0, [sp, #8]
   13c50:	movw	r1, #1
   13c54:	uxth	r1, r1
   13c58:	movw	r2, #0
   13c5c:	movw	r3, #0
   13c60:	movt	r3, #0
   13c64:	bl	0 <flatcc_verify_table_field>
   13c68:	str	r0, [sp, #4]
   13c6c:	cmp	r0, #0
   13c70:	beq	13c80 <MyGame_Example_TestJSONPrefix_verify_table+0x78>
   13c74:	ldr	r0, [sp, #4]
   13c78:	str	r0, [fp, #-4]
   13c7c:	b	13cbc <MyGame_Example_TestJSONPrefix_verify_table+0xb4>
   13c80:	ldr	r0, [sp, #8]
   13c84:	movw	r1, #2
   13c88:	uxth	r1, r1
   13c8c:	movw	r2, #0
   13c90:	movw	r3, #0
   13c94:	movt	r3, #0
   13c98:	bl	0 <flatcc_verify_table_field>
   13c9c:	str	r0, [sp, #4]
   13ca0:	cmp	r0, #0
   13ca4:	beq	13cb4 <MyGame_Example_TestJSONPrefix_verify_table+0xac>
   13ca8:	ldr	r0, [sp, #4]
   13cac:	str	r0, [fp, #-4]
   13cb0:	b	13cbc <MyGame_Example_TestJSONPrefix_verify_table+0xb4>
   13cb4:	movw	r0, #0
   13cb8:	str	r0, [fp, #-4]
   13cbc:	ldr	r0, [fp, #-4]
   13cc0:	mov	sp, fp
   13cc4:	pop	{fp, pc}

00013cc8 <Fantasy_Movie_verify_table>:
   13cc8:	push	{fp, lr}
   13ccc:	mov	fp, sp
   13cd0:	sub	sp, sp, #16
   13cd4:	str	r0, [sp, #8]
   13cd8:	ldr	r0, [sp, #8]
   13cdc:	movw	r1, #1
   13ce0:	uxth	r1, r1
   13ce4:	movw	r2, #0
   13ce8:	movw	r3, #0
   13cec:	movt	r3, #0
   13cf0:	bl	0 <flatcc_verify_union_field>
   13cf4:	str	r0, [sp, #4]
   13cf8:	cmp	r0, #0
   13cfc:	beq	13d0c <Fantasy_Movie_verify_table+0x44>
   13d00:	ldr	r0, [sp, #4]
   13d04:	str	r0, [fp, #-4]
   13d08:	b	13de4 <Fantasy_Movie_verify_table+0x11c>
   13d0c:	ldr	r0, [sp, #8]
   13d10:	movw	r1, #3
   13d14:	uxth	r1, r1
   13d18:	movw	r2, #0
   13d1c:	movw	r3, #0
   13d20:	movt	r3, #0
   13d24:	bl	0 <flatcc_verify_union_field>
   13d28:	str	r0, [sp, #4]
   13d2c:	cmp	r0, #0
   13d30:	beq	13d40 <Fantasy_Movie_verify_table+0x78>
   13d34:	ldr	r0, [sp, #4]
   13d38:	str	r0, [fp, #-4]
   13d3c:	b	13de4 <Fantasy_Movie_verify_table+0x11c>
   13d40:	ldr	r0, [sp, #8]
   13d44:	movw	r1, #5
   13d48:	uxth	r1, r1
   13d4c:	movw	r2, #0
   13d50:	movw	r3, #0
   13d54:	movt	r3, #0
   13d58:	bl	0 <flatcc_verify_union_field>
   13d5c:	str	r0, [sp, #4]
   13d60:	cmp	r0, #0
   13d64:	beq	13d74 <Fantasy_Movie_verify_table+0xac>
   13d68:	ldr	r0, [sp, #4]
   13d6c:	str	r0, [fp, #-4]
   13d70:	b	13de4 <Fantasy_Movie_verify_table+0x11c>
   13d74:	ldr	r0, [sp, #8]
   13d78:	movw	r1, #7
   13d7c:	uxth	r1, r1
   13d80:	movw	r2, #0
   13d84:	movw	r3, #0
   13d88:	movt	r3, #0
   13d8c:	bl	0 <flatcc_verify_union_field>
   13d90:	str	r0, [sp, #4]
   13d94:	cmp	r0, #0
   13d98:	beq	13da8 <Fantasy_Movie_verify_table+0xe0>
   13d9c:	ldr	r0, [sp, #4]
   13da0:	str	r0, [fp, #-4]
   13da4:	b	13de4 <Fantasy_Movie_verify_table+0x11c>
   13da8:	ldr	r0, [sp, #8]
   13dac:	movw	r1, #9
   13db0:	uxth	r1, r1
   13db4:	movw	r2, #0
   13db8:	movw	r3, #0
   13dbc:	movt	r3, #0
   13dc0:	bl	0 <flatcc_verify_union_vector_field>
   13dc4:	str	r0, [sp, #4]
   13dc8:	cmp	r0, #0
   13dcc:	beq	13ddc <Fantasy_Movie_verify_table+0x114>
   13dd0:	ldr	r0, [sp, #4]
   13dd4:	str	r0, [fp, #-4]
   13dd8:	b	13de4 <Fantasy_Movie_verify_table+0x11c>
   13ddc:	movw	r0, #0
   13de0:	str	r0, [fp, #-4]
   13de4:	ldr	r0, [fp, #-4]
   13de8:	mov	sp, fp
   13dec:	pop	{fp, pc}

00013df0 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
   13df0:	push	{fp, lr}
   13df4:	mov	fp, sp
   13df8:	sub	sp, sp, #16
   13dfc:	str	r0, [sp, #8]
   13e00:	ldr	r0, [sp, #8]
   13e04:	movw	r1, #0
   13e08:	uxth	r1, r1
   13e0c:	movw	r2, #0
   13e10:	bl	0 <flatcc_verify_string_field>
   13e14:	str	r0, [sp, #4]
   13e18:	cmp	r0, #0
   13e1c:	beq	13e2c <MyGame_Example_TestJSONPrefixParsing_verify_table+0x3c>
   13e20:	ldr	r0, [sp, #4]
   13e24:	str	r0, [fp, #-4]
   13e28:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13e2c:	ldr	r0, [sp, #8]
   13e30:	movw	r1, #1
   13e34:	uxth	r1, r1
   13e38:	movw	r2, #4
   13e3c:	movw	r3, #4
   13e40:	uxth	r3, r3
   13e44:	bl	0 <flatcc_verify_field>
   13e48:	str	r0, [sp, #4]
   13e4c:	cmp	r0, #0
   13e50:	beq	13e60 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x70>
   13e54:	ldr	r0, [sp, #4]
   13e58:	str	r0, [fp, #-4]
   13e5c:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13e60:	ldr	r0, [sp, #8]
   13e64:	movw	r1, #2
   13e68:	uxth	r1, r1
   13e6c:	movw	r2, #0
   13e70:	bl	0 <flatcc_verify_string_field>
   13e74:	str	r0, [sp, #4]
   13e78:	cmp	r0, #0
   13e7c:	beq	13e8c <MyGame_Example_TestJSONPrefixParsing_verify_table+0x9c>
   13e80:	ldr	r0, [sp, #4]
   13e84:	str	r0, [fp, #-4]
   13e88:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13e8c:	ldr	r0, [sp, #8]
   13e90:	movw	r1, #3
   13e94:	uxth	r1, r1
   13e98:	movw	r2, #8
   13e9c:	movw	r3, #8
   13ea0:	uxth	r3, r3
   13ea4:	bl	0 <flatcc_verify_field>
   13ea8:	str	r0, [sp, #4]
   13eac:	cmp	r0, #0
   13eb0:	beq	13ec0 <MyGame_Example_TestJSONPrefixParsing_verify_table+0xd0>
   13eb4:	ldr	r0, [sp, #4]
   13eb8:	str	r0, [fp, #-4]
   13ebc:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13ec0:	ldr	r0, [sp, #8]
   13ec4:	movw	r1, #4
   13ec8:	uxth	r1, r1
   13ecc:	movw	r2, #0
   13ed0:	bl	0 <flatcc_verify_string_field>
   13ed4:	str	r0, [sp, #4]
   13ed8:	cmp	r0, #0
   13edc:	beq	13eec <MyGame_Example_TestJSONPrefixParsing_verify_table+0xfc>
   13ee0:	ldr	r0, [sp, #4]
   13ee4:	str	r0, [fp, #-4]
   13ee8:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13eec:	ldr	r0, [sp, #8]
   13ef0:	movw	r1, #5
   13ef4:	uxth	r1, r1
   13ef8:	movw	r2, #8
   13efc:	movw	r3, #8
   13f00:	uxth	r3, r3
   13f04:	bl	0 <flatcc_verify_field>
   13f08:	str	r0, [sp, #4]
   13f0c:	cmp	r0, #0
   13f10:	beq	13f20 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x130>
   13f14:	ldr	r0, [sp, #4]
   13f18:	str	r0, [fp, #-4]
   13f1c:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13f20:	ldr	r0, [sp, #8]
   13f24:	movw	r1, #6
   13f28:	uxth	r1, r1
   13f2c:	movw	r2, #4
   13f30:	movw	r3, #4
   13f34:	uxth	r3, r3
   13f38:	bl	0 <flatcc_verify_field>
   13f3c:	str	r0, [sp, #4]
   13f40:	cmp	r0, #0
   13f44:	beq	13f54 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x164>
   13f48:	ldr	r0, [sp, #4]
   13f4c:	str	r0, [fp, #-4]
   13f50:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13f54:	ldr	r0, [sp, #8]
   13f58:	movw	r1, #7
   13f5c:	uxth	r1, r1
   13f60:	movw	r2, #8
   13f64:	movw	r3, #8
   13f68:	uxth	r3, r3
   13f6c:	bl	0 <flatcc_verify_field>
   13f70:	str	r0, [sp, #4]
   13f74:	cmp	r0, #0
   13f78:	beq	13f88 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x198>
   13f7c:	ldr	r0, [sp, #4]
   13f80:	str	r0, [fp, #-4]
   13f84:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13f88:	ldr	r0, [sp, #8]
   13f8c:	movw	r1, #8
   13f90:	uxth	r1, r1
   13f94:	movw	r2, #4
   13f98:	movw	r3, #4
   13f9c:	uxth	r3, r3
   13fa0:	bl	0 <flatcc_verify_field>
   13fa4:	str	r0, [sp, #4]
   13fa8:	cmp	r0, #0
   13fac:	beq	13fbc <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1cc>
   13fb0:	ldr	r0, [sp, #4]
   13fb4:	str	r0, [fp, #-4]
   13fb8:	b	13fc4 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x1d4>
   13fbc:	movw	r0, #0
   13fc0:	str	r0, [fp, #-4]
   13fc4:	ldr	r0, [fp, #-4]
   13fc8:	mov	sp, fp
   13fcc:	pop	{fp, pc}

00013fd0 <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
   13fd0:	push	{fp, lr}
   13fd4:	mov	fp, sp
   13fd8:	sub	sp, sp, #16
   13fdc:	str	r0, [sp, #8]
   13fe0:	ldr	r0, [sp, #8]
   13fe4:	movw	r1, #0
   13fe8:	uxth	r1, r1
   13fec:	movw	r2, #8
   13ff0:	movw	r3, #8
   13ff4:	uxth	r3, r3
   13ff8:	bl	0 <flatcc_verify_field>
   13ffc:	str	r0, [sp, #4]
   14000:	cmp	r0, #0
   14004:	beq	14014 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x44>
   14008:	ldr	r0, [sp, #4]
   1400c:	str	r0, [fp, #-4]
   14010:	b	14050 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x80>
   14014:	ldr	r0, [sp, #8]
   14018:	movw	r1, #1
   1401c:	uxth	r1, r1
   14020:	movw	r2, #4
   14024:	movw	r3, #4
   14028:	uxth	r3, r3
   1402c:	bl	0 <flatcc_verify_field>
   14030:	str	r0, [sp, #4]
   14034:	cmp	r0, #0
   14038:	beq	14048 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x78>
   1403c:	ldr	r0, [sp, #4]
   14040:	str	r0, [fp, #-4]
   14044:	b	14050 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x80>
   14048:	movw	r0, #0
   1404c:	str	r0, [fp, #-4]
   14050:	ldr	r0, [fp, #-4]
   14054:	mov	sp, fp
   14058:	pop	{fp, pc}

0001405c <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
   1405c:	push	{fp, lr}
   14060:	mov	fp, sp
   14064:	sub	sp, sp, #16
   14068:	str	r0, [sp, #8]
   1406c:	ldr	r0, [sp, #8]
   14070:	movw	r1, #0
   14074:	uxth	r1, r1
   14078:	movw	r2, #8
   1407c:	movw	r3, #8
   14080:	uxth	r3, r3
   14084:	bl	0 <flatcc_verify_field>
   14088:	str	r0, [sp, #4]
   1408c:	cmp	r0, #0
   14090:	beq	140a0 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x44>
   14094:	ldr	r0, [sp, #4]
   14098:	str	r0, [fp, #-4]
   1409c:	b	140dc <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x80>
   140a0:	ldr	r0, [sp, #8]
   140a4:	movw	r1, #1
   140a8:	uxth	r1, r1
   140ac:	movw	r2, #4
   140b0:	movw	r3, #4
   140b4:	uxth	r3, r3
   140b8:	bl	0 <flatcc_verify_field>
   140bc:	str	r0, [sp, #4]
   140c0:	cmp	r0, #0
   140c4:	beq	140d4 <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x78>
   140c8:	ldr	r0, [sp, #4]
   140cc:	str	r0, [fp, #-4]
   140d0:	b	140dc <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x80>
   140d4:	movw	r0, #0
   140d8:	str	r0, [fp, #-4]
   140dc:	ldr	r0, [fp, #-4]
   140e0:	mov	sp, fp
   140e4:	pop	{fp, pc}

000140e8 <Fantasy_Character_union_verifier>:
   140e8:	push	{fp, lr}
   140ec:	mov	fp, sp
   140f0:	sub	sp, sp, #16
   140f4:	str	r0, [sp, #8]
   140f8:	ldr	r0, [sp, #8]
   140fc:	ldrb	r0, [r0, #12]
   14100:	mov	r1, r0
   14104:	cmp	r0, #2
   14108:	str	r1, [sp, #4]
   1410c:	beq	14164 <Fantasy_Character_union_verifier+0x7c>
   14110:	b	14114 <Fantasy_Character_union_verifier+0x2c>
   14114:	ldr	r0, [sp, #4]
   14118:	cmp	r0, #8
   1411c:	beq	1417c <Fantasy_Character_union_verifier+0x94>
   14120:	b	14124 <Fantasy_Character_union_verifier+0x3c>
   14124:	ldr	r0, [sp, #4]
   14128:	cmp	r0, #9
   1412c:	beq	14198 <Fantasy_Character_union_verifier+0xb0>
   14130:	b	14134 <Fantasy_Character_union_verifier+0x4c>
   14134:	ldr	r0, [sp, #4]
   14138:	cmp	r0, #10
   1413c:	beq	141b4 <Fantasy_Character_union_verifier+0xcc>
   14140:	b	14144 <Fantasy_Character_union_verifier+0x5c>
   14144:	ldr	r0, [sp, #4]
   14148:	cmp	r0, #11
   1414c:	beq	141d0 <Fantasy_Character_union_verifier+0xe8>
   14150:	b	14154 <Fantasy_Character_union_verifier+0x6c>
   14154:	ldr	r0, [sp, #4]
   14158:	cmp	r0, #255	; 0xff
   1415c:	beq	141e0 <Fantasy_Character_union_verifier+0xf8>
   14160:	b	141f0 <Fantasy_Character_union_verifier+0x108>
   14164:	ldr	r0, [sp, #8]
   14168:	movw	r1, #0
   1416c:	movt	r1, #0
   14170:	bl	0 <flatcc_verify_union_table>
   14174:	str	r0, [fp, #-4]
   14178:	b	141f8 <Fantasy_Character_union_verifier+0x110>
   1417c:	ldr	r0, [sp, #8]
   14180:	movw	r1, #2
   14184:	movw	r2, #2
   14188:	uxth	r2, r2
   1418c:	bl	0 <flatcc_verify_union_struct>
   14190:	str	r0, [fp, #-4]
   14194:	b	141f8 <Fantasy_Character_union_verifier+0x110>
   14198:	ldr	r0, [sp, #8]
   1419c:	movw	r1, #4
   141a0:	movw	r2, #4
   141a4:	uxth	r2, r2
   141a8:	bl	0 <flatcc_verify_union_struct>
   141ac:	str	r0, [fp, #-4]
   141b0:	b	141f8 <Fantasy_Character_union_verifier+0x110>
   141b4:	ldr	r0, [sp, #8]
   141b8:	movw	r1, #4
   141bc:	movw	r2, #4
   141c0:	uxth	r2, r2
   141c4:	bl	0 <flatcc_verify_union_struct>
   141c8:	str	r0, [fp, #-4]
   141cc:	b	141f8 <Fantasy_Character_union_verifier+0x110>
   141d0:	ldr	r0, [sp, #8]
   141d4:	bl	0 <flatcc_verify_union_string>
   141d8:	str	r0, [fp, #-4]
   141dc:	b	141f8 <Fantasy_Character_union_verifier+0x110>
   141e0:	ldr	r0, [sp, #8]
   141e4:	bl	0 <flatcc_verify_union_string>
   141e8:	str	r0, [fp, #-4]
   141ec:	b	141f8 <Fantasy_Character_union_verifier+0x110>
   141f0:	movw	r0, #0
   141f4:	str	r0, [fp, #-4]
   141f8:	ldr	r0, [fp, #-4]
   141fc:	mov	sp, fp
   14200:	pop	{fp, pc}

00014204 <Fantasy_Attacker_verify_table>:
   14204:	push	{fp, lr}
   14208:	mov	fp, sp
   1420c:	sub	sp, sp, #16
   14210:	str	r0, [sp, #8]
   14214:	ldr	r0, [sp, #8]
   14218:	movw	r1, #0
   1421c:	uxth	r1, r1
   14220:	movw	r2, #4
   14224:	movw	r3, #4
   14228:	uxth	r3, r3
   1422c:	bl	0 <flatcc_verify_field>
   14230:	str	r0, [sp, #4]
   14234:	cmp	r0, #0
   14238:	beq	14248 <Fantasy_Attacker_verify_table+0x44>
   1423c:	ldr	r0, [sp, #4]
   14240:	str	r0, [fp, #-4]
   14244:	b	14250 <Fantasy_Attacker_verify_table+0x4c>
   14248:	movw	r0, #0
   1424c:	str	r0, [fp, #-4]
   14250:	ldr	r0, [fp, #-4]
   14254:	mov	sp, fp
   14258:	pop	{fp, pc}
