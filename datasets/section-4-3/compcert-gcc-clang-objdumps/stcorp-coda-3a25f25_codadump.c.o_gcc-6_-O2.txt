
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_help>:
   0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	ldr	r0, [pc, #984]	; 3e4 <print_help+0x3e4>
   8:	bl	0 <puts>
   c:	ldr	fp, [pc, #980]	; 3e8 <print_help+0x3e8>
  10:	ldr	r0, [pc, #980]	; 3ec <print_help+0x3ec>
  14:	bl	0 <puts>
  18:	ldr	r0, [pc, #976]	; 3f0 <print_help+0x3f0>
  1c:	bl	0 <puts>
  20:	mov	r0, fp
  24:	ldr	r8, [pc, #968]	; 3f4 <print_help+0x3f4>
  28:	bl	0 <puts>
  2c:	ldr	r0, [pc, #964]	; 3f8 <print_help+0x3f8>
  30:	ldr	r7, [pc, #964]	; 3fc <print_help+0x3fc>
  34:	bl	0 <puts>
  38:	ldr	r0, [pc, #960]	; 400 <print_help+0x400>
  3c:	bl	0 <puts>
  40:	ldr	sl, [pc, #956]	; 404 <print_help+0x404>
  44:	mov	r0, r8
  48:	bl	0 <puts>
  4c:	ldr	r9, [pc, #948]	; 408 <print_help+0x408>
  50:	mov	r0, r7
  54:	bl	0 <puts>
  58:	mov	r0, sl
  5c:	bl	0 <puts>
  60:	mov	r0, r9
  64:	bl	0 <puts>
  68:	ldr	r0, [pc, #924]	; 40c <print_help+0x40c>
  6c:	bl	0 <puts>
  70:	ldr	r0, [pc, #920]	; 410 <print_help+0x410>
  74:	bl	0 <puts>
  78:	ldr	r0, [pc, #916]	; 414 <print_help+0x414>
  7c:	bl	0 <puts>
  80:	ldr	r0, [pc, #912]	; 418 <print_help+0x418>
  84:	bl	0 <puts>
  88:	ldr	r0, [pc, #908]	; 41c <print_help+0x41c>
  8c:	bl	0 <puts>
  90:	ldr	r0, [pc, #904]	; 420 <print_help+0x420>
  94:	bl	0 <puts>
  98:	ldr	r0, [pc, #900]	; 424 <print_help+0x424>
  9c:	ldr	r6, [pc, #900]	; 428 <print_help+0x428>
  a0:	bl	0 <puts>
  a4:	ldr	r0, [pc, #896]	; 42c <print_help+0x42c>
  a8:	ldr	r5, [pc, #896]	; 430 <print_help+0x430>
  ac:	bl	0 <puts>
  b0:	ldr	r0, [pc, #892]	; 434 <print_help+0x434>
  b4:	ldr	r4, [pc, #892]	; 438 <print_help+0x438>
  b8:	bl	0 <puts>
  bc:	mov	r0, r6
  c0:	bl	0 <puts>
  c4:	mov	r0, r5
  c8:	bl	0 <puts>
  cc:	mov	r0, r4
  d0:	bl	0 <puts>
  d4:	ldr	r0, [pc, #864]	; 43c <print_help+0x43c>
  d8:	bl	0 <puts>
  dc:	mov	r0, #10
  e0:	bl	0 <putchar>
  e4:	ldr	r0, [pc, #852]	; 440 <print_help+0x440>
  e8:	bl	0 <puts>
  ec:	ldr	r0, [pc, #848]	; 444 <print_help+0x444>
  f0:	bl	0 <puts>
  f4:	mov	r0, fp
  f8:	bl	0 <puts>
  fc:	mov	r0, r8
 100:	bl	0 <puts>
 104:	mov	r0, r7
 108:	bl	0 <puts>
 10c:	mov	r0, sl
 110:	bl	0 <puts>
 114:	mov	r0, r9
 118:	bl	0 <puts>
 11c:	ldr	r0, [pc, #804]	; 448 <print_help+0x448>
 120:	bl	0 <puts>
 124:	ldr	r0, [pc, #800]	; 44c <print_help+0x44c>
 128:	bl	0 <puts>
 12c:	ldr	sl, [pc, #796]	; 450 <print_help+0x450>
 130:	ldr	r0, [pc, #796]	; 454 <print_help+0x454>
 134:	ldr	r9, [pc, #796]	; 458 <print_help+0x458>
 138:	bl	0 <puts>
 13c:	ldr	r0, [pc, #792]	; 45c <print_help+0x45c>
 140:	bl	0 <puts>
 144:	mov	r0, sl
 148:	bl	0 <puts>
 14c:	mov	r0, r9
 150:	bl	0 <puts>
 154:	ldr	r0, [pc, #772]	; 460 <print_help+0x460>
 158:	bl	0 <puts>
 15c:	ldr	r0, [pc, #768]	; 464 <print_help+0x464>
 160:	bl	0 <puts>
 164:	ldr	r0, [pc, #764]	; 468 <print_help+0x468>
 168:	bl	0 <puts>
 16c:	ldr	r0, [pc, #760]	; 46c <print_help+0x46c>
 170:	bl	0 <puts>
 174:	ldr	r0, [pc, #756]	; 470 <print_help+0x470>
 178:	bl	0 <puts>
 17c:	ldr	r0, [pc, #752]	; 474 <print_help+0x474>
 180:	bl	0 <puts>
 184:	mov	r0, r6
 188:	bl	0 <puts>
 18c:	mov	r0, r5
 190:	bl	0 <puts>
 194:	mov	r0, r4
 198:	bl	0 <puts>
 19c:	ldr	r0, [pc, #664]	; 43c <print_help+0x43c>
 1a0:	bl	0 <puts>
 1a4:	mov	r0, #10
 1a8:	bl	0 <putchar>
 1ac:	ldr	r0, [pc, #708]	; 478 <print_help+0x478>
 1b0:	bl	0 <puts>
 1b4:	ldr	r0, [pc, #704]	; 47c <print_help+0x47c>
 1b8:	bl	0 <puts>
 1bc:	ldr	r0, [pc, #700]	; 480 <print_help+0x480>
 1c0:	bl	0 <puts>
 1c4:	ldr	r0, [pc, #696]	; 484 <print_help+0x484>
 1c8:	bl	0 <puts>
 1cc:	ldr	r0, [pc, #692]	; 488 <print_help+0x488>
 1d0:	bl	0 <puts>
 1d4:	ldr	r0, [pc, #688]	; 48c <print_help+0x48c>
 1d8:	bl	0 <puts>
 1dc:	mov	r0, r8
 1e0:	bl	0 <puts>
 1e4:	mov	r0, r7
 1e8:	bl	0 <puts>
 1ec:	mov	r0, sl
 1f0:	bl	0 <puts>
 1f4:	mov	r0, r9
 1f8:	bl	0 <puts>
 1fc:	ldr	fp, [pc, #652]	; 490 <print_help+0x490>
 200:	ldr	r0, [pc, #652]	; 494 <print_help+0x494>
 204:	bl	0 <puts>
 208:	ldr	r0, [pc, #648]	; 498 <print_help+0x498>
 20c:	bl	0 <puts>
 210:	mov	r0, fp
 214:	bl	0 <puts>
 218:	mov	r0, r6
 21c:	bl	0 <puts>
 220:	mov	r0, r5
 224:	bl	0 <puts>
 228:	mov	r0, r4
 22c:	bl	0 <puts>
 230:	ldr	r0, [pc, #516]	; 43c <print_help+0x43c>
 234:	bl	0 <puts>
 238:	mov	r0, #10
 23c:	bl	0 <putchar>
 240:	ldr	r0, [pc, #596]	; 49c <print_help+0x49c>
 244:	bl	0 <puts>
 248:	ldr	r0, [pc, #592]	; 4a0 <print_help+0x4a0>
 24c:	bl	0 <puts>
 250:	ldr	r0, [pc, #588]	; 4a4 <print_help+0x4a4>
 254:	bl	0 <puts>
 258:	ldr	r0, [pc, #548]	; 484 <print_help+0x484>
 25c:	bl	0 <puts>
 260:	ldr	r0, [pc, #544]	; 488 <print_help+0x488>
 264:	bl	0 <puts>
 268:	ldr	r0, [pc, #568]	; 4a8 <print_help+0x4a8>
 26c:	bl	0 <puts>
 270:	ldr	r0, [pc, #564]	; 4ac <print_help+0x4ac>
 274:	bl	0 <puts>
 278:	mov	r0, r8
 27c:	bl	0 <puts>
 280:	mov	r0, r7
 284:	bl	0 <puts>
 288:	mov	r0, sl
 28c:	bl	0 <puts>
 290:	mov	r0, r9
 294:	bl	0 <puts>
 298:	ldr	r0, [pc, #500]	; 494 <print_help+0x494>
 29c:	bl	0 <puts>
 2a0:	ldr	r0, [pc, #496]	; 498 <print_help+0x498>
 2a4:	bl	0 <puts>
 2a8:	mov	r0, fp
 2ac:	bl	0 <puts>
 2b0:	mov	r0, r6
 2b4:	bl	0 <puts>
 2b8:	mov	r0, r5
 2bc:	bl	0 <puts>
 2c0:	mov	r0, r4
 2c4:	bl	0 <puts>
 2c8:	ldr	r0, [pc, #364]	; 43c <print_help+0x43c>
 2cc:	bl	0 <puts>
 2d0:	mov	r0, #10
 2d4:	bl	0 <putchar>
 2d8:	ldr	r0, [pc, #464]	; 4b0 <print_help+0x4b0>
 2dc:	bl	0 <puts>
 2e0:	ldr	r0, [pc, #460]	; 4b4 <print_help+0x4b4>
 2e4:	bl	0 <puts>
 2e8:	ldr	r0, [pc, #456]	; 4b8 <print_help+0x4b8>
 2ec:	bl	0 <puts>
 2f0:	ldr	r0, [pc, #452]	; 4bc <print_help+0x4bc>
 2f4:	bl	0 <puts>
 2f8:	ldr	r0, [pc, #448]	; 4c0 <print_help+0x4c0>
 2fc:	bl	0 <puts>
 300:	ldr	r0, [pc, #444]	; 4c4 <print_help+0x4c4>
 304:	bl	0 <puts>
 308:	ldr	r0, [pc, #440]	; 4c8 <print_help+0x4c8>
 30c:	bl	0 <puts>
 310:	mov	r0, sl
 314:	bl	0 <puts>
 318:	mov	r0, r9
 31c:	bl	0 <puts>
 320:	ldr	r0, [pc, #364]	; 494 <print_help+0x494>
 324:	bl	0 <puts>
 328:	ldr	r0, [pc, #360]	; 498 <print_help+0x498>
 32c:	bl	0 <puts>
 330:	mov	r0, fp
 334:	bl	0 <puts>
 338:	ldr	r0, [pc, #396]	; 4cc <print_help+0x4cc>
 33c:	bl	0 <puts>
 340:	ldr	r0, [pc, #392]	; 4d0 <print_help+0x4d0>
 344:	bl	0 <puts>
 348:	ldr	r0, [pc, #388]	; 4d4 <print_help+0x4d4>
 34c:	bl	0 <puts>
 350:	ldr	r0, [pc, #384]	; 4d8 <print_help+0x4d8>
 354:	bl	0 <puts>
 358:	ldr	r0, [pc, #380]	; 4dc <print_help+0x4dc>
 35c:	bl	0 <puts>
 360:	ldr	r0, [pc, #376]	; 4e0 <print_help+0x4e0>
 364:	bl	0 <puts>
 368:	mov	r0, #10
 36c:	bl	0 <putchar>
 370:	ldr	r0, [pc, #364]	; 4e4 <print_help+0x4e4>
 374:	bl	0 <puts>
 378:	ldr	r0, [pc, #360]	; 4e8 <print_help+0x4e8>
 37c:	bl	0 <puts>
 380:	mov	r0, #10
 384:	bl	0 <putchar>
 388:	ldr	r0, [pc, #348]	; 4ec <print_help+0x4ec>
 38c:	bl	0 <puts>
 390:	ldr	r0, [pc, #344]	; 4f0 <print_help+0x4f0>
 394:	bl	0 <puts>
 398:	mov	r0, #10
 39c:	bl	0 <putchar>
 3a0:	ldr	r0, [pc, #332]	; 4f4 <print_help+0x4f4>
 3a4:	bl	0 <puts>
 3a8:	ldr	r0, [pc, #328]	; 4f8 <print_help+0x4f8>
 3ac:	bl	0 <puts>
 3b0:	ldr	r0, [pc, #324]	; 4fc <print_help+0x4fc>
 3b4:	bl	0 <puts>
 3b8:	ldr	r0, [pc, #320]	; 500 <print_help+0x500>
 3bc:	bl	0 <puts>
 3c0:	ldr	r0, [pc, #316]	; 504 <print_help+0x504>
 3c4:	bl	0 <puts>
 3c8:	ldr	r0, [pc, #312]	; 508 <print_help+0x508>
 3cc:	bl	0 <puts>
 3d0:	ldr	r0, [pc, #308]	; 50c <print_help+0x50c>
 3d4:	bl	0 <puts>
 3d8:	mov	r0, #10
 3dc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3e0:	b	0 <putchar>
 3e4:	.word	0x00000000
 3e8:	.word	0x0000007c
 3ec:	.word	0x00000008
 3f0:	.word	0x00000050
 3f4:	.word	0x000000e8
 3f8:	.word	0x00000094
 3fc:	.word	0x00000110
 400:	.word	0x000000b0
 404:	.word	0x0000014c
 408:	.word	0x0000017c
 40c:	.word	0x000001c4
 410:	.word	0x000001dc
 414:	.word	0x00000208
 418:	.word	0x00000220
 41c:	.word	0x0000024c
 420:	.word	0x00000268
 424:	.word	0x0000029c
 428:	.word	0x0000032c
 42c:	.word	0x000002b8
 430:	.word	0x0000034c
 434:	.word	0x00000300
 438:	.word	0x0000039c
 43c:	.word	0x000003ec
 440:	.word	0x0000040c
 444:	.word	0x00000454
 448:	.word	0x00000490
 44c:	.word	0x000004a8
 450:	.word	0x00000550
 454:	.word	0x000004ec
 458:	.word	0x00000574
 45c:	.word	0x00000504
 460:	.word	0x000005a8
 464:	.word	0x000005c8
 468:	.word	0x00000614
 46c:	.word	0x0000064c
 470:	.word	0x00000698
 474:	.word	0x000006bc
 478:	.word	0x0000070c
 47c:	.word	0x00000754
 480:	.word	0x00000790
 484:	.word	0x000007a8
 488:	.word	0x000007c8
 48c:	.word	0x00000810
 490:	.word	0x000008c4
 494:	.word	0x0000085c
 498:	.word	0x0000087c
 49c:	.word	0x00000914
 4a0:	.word	0x0000095c
 4a4:	.word	0x00000998
 4a8:	.word	0x000009b0
 4ac:	.word	0x000009fc
 4b0:	.word	0x00000a1c
 4b4:	.word	0x00000a64
 4b8:	.word	0x00000ab0
 4bc:	.word	0x00000afc
 4c0:	.word	0x00000b2c
 4c4:	.word	0x00000b44
 4c8:	.word	0x00000b74
 4cc:	.word	0x00000bac
 4d0:	.word	0x00000bcc
 4d4:	.word	0x00000c1c
 4d8:	.word	0x00000c68
 4dc:	.word	0x00000ca8
 4e0:	.word	0x00000cf8
 4e4:	.word	0x00000d30
 4e8:	.word	0x00000d48
 4ec:	.word	0x00000d68
 4f0:	.word	0x00000d84
 4f4:	.word	0x00000db8
 4f8:	.word	0x00000e08
 4fc:	.word	0x00000e54
 500:	.word	0x00000e80
 504:	.word	0x00000ecc
 508:	.word	0x00000f14
 50c:	.word	0x00000f54

00000510 <handle_coda_error>:
 510:	push	{r4, lr}
 514:	ldr	r4, [pc, #44]	; 548 <handle_coda_error+0x38>
 518:	ldr	r5, [r4]
 51c:	bl	0 <coda_get_errno>
 520:	ldr	r0, [r0]
 524:	bl	0 <coda_errno_to_string>
 528:	ldr	r1, [pc, #28]	; 54c <handle_coda_error+0x3c>
 52c:	mov	r2, r0
 530:	mov	r0, r5
 534:	bl	0 <fprintf>
 538:	ldr	r0, [r4]
 53c:	bl	0 <fflush>
 540:	mov	r0, #1
 544:	bl	0 <exit>
 548:	.word	0x00000000
 54c:	.word	0x00000f94

Disassembly of section .text.startup:

00000000 <main>:
       0:	cmp	r0, #1
       4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       8:	sub	sp, sp, #44	; 0x2c
       c:	beq	1204 <main+0x1204>
      10:	ldr	r4, [r1, #4]
      14:	mov	r5, r0
      18:	mov	r7, r1
      1c:	mov	r0, r4
      20:	ldr	r1, [pc, #4072]	; 1010 <main+0x1010>
      24:	bl	0 <strcmp>
      28:	cmp	r0, #0
      2c:	beq	1204 <main+0x1204>
      30:	ldr	r1, [pc, #4060]	; 1014 <main+0x1014>
      34:	mov	r0, r4
      38:	bl	0 <strcmp>
      3c:	cmp	r0, #0
      40:	beq	1204 <main+0x1204>
      44:	ldr	r1, [pc, #4044]	; 1018 <main+0x1018>
      48:	mov	r0, r4
      4c:	bl	0 <strcmp>
      50:	cmp	r0, #0
      54:	beq	1210 <main+0x1210>
      58:	ldr	r1, [pc, #4028]	; 101c <main+0x101c>
      5c:	mov	r0, r4
      60:	bl	0 <strcmp>
      64:	cmp	r0, #0
      68:	beq	1210 <main+0x1210>
      6c:	cmp	r5, #2
      70:	ble	88 <main+0x88>
      74:	mov	r0, r4
      78:	ldr	r1, [pc, #4000]	; 1020 <main+0x1020>
      7c:	bl	0 <strcmp>
      80:	cmp	r0, #0
      84:	beq	618 <main+0x618>
      88:	ldr	r2, [pc, #3988]	; 1024 <main+0x1024>
      8c:	mov	r1, #0
      90:	ldr	r0, [r7]
      94:	bl	0 <coda_set_definition_path_conditional>
      98:	cmp	r0, #0
      9c:	bne	125c <main+0x125c>
      a0:	mov	r3, #4
      a4:	mov	r6, #1
      a8:	ldr	r4, [r7, r3]
      ac:	ldr	r1, [pc, #3956]	; 1028 <main+0x1028>
      b0:	mov	r0, r4
      b4:	bl	0 <strcmp>
      b8:	subs	fp, r0, #0
      bc:	beq	428 <main+0x428>
      c0:	ldr	r1, [pc, #3940]	; 102c <main+0x102c>
      c4:	mov	r0, r4
      c8:	bl	0 <strcmp>
      cc:	subs	fp, r0, #0
      d0:	beq	8e4 <main+0x8e4>
      d4:	ldr	r1, [pc, #3924]	; 1030 <main+0x1030>
      d8:	mov	r0, r4
      dc:	bl	0 <strcmp>
      e0:	subs	fp, r0, #0
      e4:	beq	64c <main+0x64c>
      e8:	ldr	r1, [pc, #3908]	; 1034 <main+0x1034>
      ec:	mov	r0, r4
      f0:	bl	0 <strcmp>
      f4:	subs	fp, r0, #0
      f8:	beq	c40 <main+0xc40>
      fc:	mov	r0, r4
     100:	ldr	r1, [pc, #3888]	; 1038 <main+0x1038>
     104:	bl	0 <strcmp>
     108:	subs	r4, r0, #0
     10c:	bne	f48 <main+0xf48>
     110:	ldr	r2, [pc, #3876]	; 103c <main+0x103c>
     114:	ldr	r3, [pc, #3876]	; 1040 <main+0x1040>
     118:	add	r6, r6, #1
     11c:	mov	r1, r3
     120:	ldr	r0, [pc, #3868]	; 1044 <main+0x1044>
     124:	ldr	r2, [r2]
     128:	ldr	ip, [pc, #3864]	; 1048 <main+0x1048>
     12c:	ldr	lr, [pc, #3864]	; 104c <main+0x104c>
     130:	str	r3, [sp, #12]
     134:	ldr	r3, [pc, #3860]	; 1050 <main+0x1050>
     138:	sub	r5, r5, r6
     13c:	str	r2, [r1]
     140:	cmp	r5, #0
     144:	mov	r2, #5
     148:	str	r0, [sp, #4]
     14c:	str	ip, [sp, #8]
     150:	add	r7, r7, r6, lsl #2
     154:	str	lr, [sp, #16]
     158:	str	r2, [r3]
     15c:	str	r4, [r0]
     160:	str	r4, [ip]
     164:	str	r4, [lr]
     168:	ble	f48 <main+0xf48>
     16c:	ldr	r9, [pc, #3808]	; 1054 <main+0x1054>
     170:	ldr	fp, [pc, #3808]	; 1058 <main+0x1058>
     174:	str	r4, [sp, #28]
     178:	str	r4, [sp, #24]
     17c:	str	r4, [sp, #20]
     180:	mov	sl, #1
     184:	b	210 <main+0x210>
     188:	mov	r1, fp
     18c:	mov	r0, r6
     190:	bl	0 <strcmp>
     194:	cmp	r0, #0
     198:	beq	22c <main+0x22c>
     19c:	ldr	r1, [pc, #3768]	; 105c <main+0x105c>
     1a0:	mov	r0, r6
     1a4:	bl	0 <strcmp>
     1a8:	cmp	r0, #0
     1ac:	beq	2d0 <main+0x2d0>
     1b0:	ldr	r1, [pc, #3752]	; 1060 <main+0x1060>
     1b4:	mov	r0, r6
     1b8:	bl	0 <strcmp>
     1bc:	cmp	r0, #0
     1c0:	beq	2d0 <main+0x2d0>
     1c4:	ldr	r1, [pc, #3736]	; 1064 <main+0x1064>
     1c8:	mov	r0, r6
     1cc:	bl	0 <strcmp>
     1d0:	cmp	r0, #0
     1d4:	bne	3c0 <main+0x3c0>
     1d8:	add	r3, r4, #1
     1dc:	cmp	r5, r3
     1e0:	ble	318 <main+0x318>
     1e4:	add	r2, r7, r8
     1e8:	ldr	r2, [r2, #4]
     1ec:	ldrb	r1, [r2]
     1f0:	cmp	r1, #45	; 0x2d
     1f4:	beq	318 <main+0x318>
     1f8:	ldr	r1, [sp, #16]
     1fc:	mov	r4, r3
     200:	str	r2, [r1]
     204:	add	r4, r4, #1
     208:	cmp	r5, r4
     20c:	ble	23c <main+0x23c>
     210:	ldr	r6, [r7, r4, lsl #2]
     214:	mov	r1, r9
     218:	mov	r0, r6
     21c:	bl	0 <strcmp>
     220:	lsl	r8, r4, #2
     224:	cmp	r0, #0
     228:	bne	188 <main+0x188>
     22c:	add	r4, r4, #1
     230:	cmp	r5, r4
     234:	mov	sl, r0
     238:	bgt	210 <main+0x210>
     23c:	ldr	r3, [sp, #4]
     240:	ldr	r3, [r3]
     244:	cmp	r3, #0
     248:	beq	f48 <main+0xf48>
     24c:	ldrb	r3, [r3]
     250:	cmp	r3, #0
     254:	beq	f48 <main+0xf48>
     258:	bl	0 <coda_init>
     25c:	cmp	r0, #0
     260:	bne	125c <main+0x125c>
     264:	bl	0 <coda_set_option_perform_conversions>
     268:	mov	r0, sl
     26c:	bl	0 <coda_set_option_use_fast_size_expressions>
     270:	ldr	r3, [sp, #8]
     274:	ldr	r0, [r3]
     278:	cmp	r0, #0
     27c:	beq	298 <main+0x298>
     280:	ldr	r1, [pc, #3552]	; 1068 <main+0x1068>
     284:	bl	0 <fopen>
     288:	ldr	r3, [sp, #12]
     28c:	cmp	r0, #0
     290:	str	r0, [r3]
     294:	beq	1288 <main+0x1288>
     298:	add	r0, sp, #20
     29c:	ldm	r0, {r0, r1, r2}
     2a0:	bl	0 <print_debug_data>
     2a4:	ldr	r3, [sp, #8]
     2a8:	ldr	r3, [r3]
     2ac:	cmp	r3, #0
     2b0:	beq	2c0 <main+0x2c0>
     2b4:	ldr	r3, [sp, #12]
     2b8:	ldr	r0, [r3]
     2bc:	bl	0 <fclose>
     2c0:	bl	0 <coda_done>
     2c4:	mov	r0, #0
     2c8:	add	sp, sp, #44	; 0x2c
     2cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     2d0:	add	r3, r4, #1
     2d4:	cmp	r5, r3
     2d8:	ble	3ac <main+0x3ac>
     2dc:	add	r2, r7, r8
     2e0:	ldr	r1, [r2, #4]
     2e4:	ldrb	r0, [r1]
     2e8:	cmp	r0, #45	; 0x2d
     2ec:	ldrne	r2, [sp, #8]
     2f0:	movne	r4, r3
     2f4:	strne	r1, [r2]
     2f8:	bne	204 <main+0x204>
     2fc:	ldr	r1, [pc, #3424]	; 1064 <main+0x1064>
     300:	mov	r0, r6
     304:	str	r2, [sp, #36]	; 0x24
     308:	str	r3, [sp, #32]
     30c:	bl	0 <strcmp>
     310:	cmp	r0, #0
     314:	bne	62c <main+0x62c>
     318:	ldr	r1, [pc, #3404]	; 106c <main+0x106c>
     31c:	mov	r0, r6
     320:	bl	0 <strcmp>
     324:	subs	r1, r0, #0
     328:	bne	388 <main+0x388>
     32c:	add	r3, r4, #3
     330:	cmp	r5, r3
     334:	ble	388 <main+0x388>
     338:	add	r8, r7, r8
     33c:	ldr	ip, [r8, #4]
     340:	ldrb	r2, [ip]
     344:	cmp	r2, #45	; 0x2d
     348:	beq	388 <main+0x388>
     34c:	ldr	lr, [r8, #8]
     350:	ldrb	r2, [lr]
     354:	cmp	r2, #45	; 0x2d
     358:	beq	388 <main+0x388>
     35c:	ldr	r0, [r8, #12]
     360:	ldrb	r2, [r0]
     364:	cmp	r2, #45	; 0x2d
     368:	beq	388 <main+0x388>
     36c:	mov	r2, #10
     370:	mov	r4, r3
     374:	str	lr, [sp, #24]
     378:	str	ip, [sp, #20]
     37c:	bl	0 <strtol>
     380:	str	r0, [sp, #28]
     384:	b	204 <main+0x204>
     388:	sub	r3, r5, #1
     38c:	cmp	r3, r4
     390:	bne	f48 <main+0xf48>
     394:	ldrb	r3, [r6]
     398:	cmp	r3, #45	; 0x2d
     39c:	beq	f48 <main+0xf48>
     3a0:	ldr	r3, [sp, #4]
     3a4:	str	r6, [r3]
     3a8:	b	204 <main+0x204>
     3ac:	ldr	r1, [pc, #3248]	; 1064 <main+0x1064>
     3b0:	mov	r0, r6
     3b4:	bl	0 <strcmp>
     3b8:	cmp	r0, #0
     3bc:	beq	318 <main+0x318>
     3c0:	ldr	r1, [pc, #3240]	; 1070 <main+0x1070>
     3c4:	mov	r0, r6
     3c8:	bl	0 <strcmp>
     3cc:	cmp	r0, #0
     3d0:	beq	1d8 <main+0x1d8>
     3d4:	ldr	r1, [pc, #3224]	; 1074 <main+0x1074>
     3d8:	mov	r0, r6
     3dc:	bl	0 <strcmp>
     3e0:	subs	r1, r0, #0
     3e4:	bne	318 <main+0x318>
     3e8:	add	r3, r4, #1
     3ec:	cmp	r5, r3
     3f0:	str	r3, [sp, #32]
     3f4:	ble	318 <main+0x318>
     3f8:	add	r2, r7, r8
     3fc:	ldr	r0, [r2, #4]
     400:	ldrb	r2, [r0]
     404:	cmp	r2, #45	; 0x2d
     408:	beq	318 <main+0x318>
     40c:	mov	r2, #10
     410:	bl	0 <strtol>
     414:	ldr	r3, [sp, #32]
     418:	mov	r4, r3
     41c:	ldr	r3, [pc, #3156]	; 1078 <main+0x1078>
     420:	str	r0, [r3]
     424:	b	204 <main+0x204>
     428:	ldr	r3, [pc, #3092]	; 1044 <main+0x1044>
     42c:	ldr	r2, [pc, #3100]	; 1050 <main+0x1050>
     430:	str	r3, [sp, #4]
     434:	str	fp, [r3]
     438:	str	fp, [r3, #664]	; 0x298
     43c:	ldr	r3, [pc, #3252]	; 10f8 <main+0x10f8>
     440:	add	r6, r6, #1
     444:	ldr	r1, [pc, #3120]	; 107c <main+0x107c>
     448:	str	fp, [r3]
     44c:	ldr	r3, [pc, #3116]	; 1080 <main+0x1080>
     450:	ldr	r9, [pc, #3116]	; 1084 <main+0x1084>
     454:	sub	r5, r5, r6
     458:	str	fp, [r3]
     45c:	ldr	r3, [pc, #3108]	; 1088 <main+0x1088>
     460:	str	fp, [r2]
     464:	cmp	r5, #0
     468:	str	fp, [r3]
     46c:	ldr	r3, [pc, #3096]	; 108c <main+0x108c>
     470:	mov	r2, #1
     474:	add	r7, r7, r6, lsl #2
     478:	str	r2, [r1]
     47c:	str	fp, [r9]
     480:	str	fp, [r3]
     484:	ble	f48 <main+0xf48>
     488:	ldr	r8, [pc, #3072]	; 1090 <main+0x1090>
     48c:	ldr	sl, [pc, #3072]	; 1094 <main+0x1094>
     490:	sub	r3, r5, #1
     494:	str	r2, [sp, #8]
     498:	str	r2, [sp, #16]
     49c:	str	r3, [sp, #20]
     4a0:	ldr	r4, [r7, fp, lsl #2]
     4a4:	mov	r1, r8
     4a8:	mov	r0, r4
     4ac:	bl	0 <strcmp>
     4b0:	lsl	r6, fp, #2
     4b4:	cmp	r0, #0
     4b8:	beq	604 <main+0x604>
     4bc:	mov	r1, sl
     4c0:	mov	r0, r4
     4c4:	bl	0 <strcmp>
     4c8:	cmp	r0, #0
     4cc:	beq	604 <main+0x604>
     4d0:	ldr	r1, [pc, #2940]	; 1054 <main+0x1054>
     4d4:	mov	r0, r4
     4d8:	bl	0 <strcmp>
     4dc:	cmp	r0, #0
     4e0:	beq	610 <main+0x610>
     4e4:	ldr	r1, [pc, #2988]	; 1098 <main+0x1098>
     4e8:	mov	r0, r4
     4ec:	bl	0 <strcmp>
     4f0:	cmp	r0, #0
     4f4:	beq	610 <main+0x610>
     4f8:	ldr	r1, [pc, #2972]	; 109c <main+0x109c>
     4fc:	mov	r0, r4
     500:	bl	0 <strcmp>
     504:	cmp	r0, #0
     508:	beq	520 <main+0x520>
     50c:	ldr	r1, [pc, #2956]	; 10a0 <main+0x10a0>
     510:	mov	r0, r4
     514:	bl	0 <strcmp>
     518:	cmp	r0, #0
     51c:	bne	564 <main+0x564>
     520:	add	r2, fp, #1
     524:	cmp	r5, r2
     528:	str	r2, [sp, #12]
     52c:	ble	564 <main+0x564>
     530:	add	r6, r7, r6
     534:	ldr	r0, [r6, #4]
     538:	ldrb	r1, [r0]
     53c:	cmp	r1, #45	; 0x2d
     540:	beq	564 <main+0x564>
     544:	bl	0 <codadump_filter_create>
     548:	ldr	r3, [sp, #4]
     54c:	ldr	r2, [sp, #12]
     550:	cmp	r0, #0
     554:	str	r0, [r3, #664]	; 0x298
     558:	beq	1238 <main+0x1238>
     55c:	mov	fp, r2
     560:	b	598 <main+0x598>
     564:	ldr	r1, [pc, #2960]	; 10fc <main+0x10fc>
     568:	mov	r0, r4
     56c:	bl	0 <strcmp>
     570:	cmp	r0, #0
     574:	beq	58c <main+0x58c>
     578:	ldr	r1, [pc, #2852]	; 10a4 <main+0x10a4>
     57c:	mov	r0, r4
     580:	bl	0 <strcmp>
     584:	cmp	r0, #0
     588:	bne	810 <main+0x810>
     58c:	ldr	r3, [pc, #2796]	; 1080 <main+0x1080>
     590:	mov	r2, #1
     594:	str	r2, [r3]
     598:	add	fp, fp, #1
     59c:	cmp	r5, fp
     5a0:	bgt	4a0 <main+0x4a0>
     5a4:	ldr	r3, [sp, #4]
     5a8:	ldr	r3, [r3]
     5ac:	cmp	r3, #0
     5b0:	beq	f48 <main+0xf48>
     5b4:	ldrb	r3, [r3]
     5b8:	cmp	r3, #0
     5bc:	beq	f48 <main+0xf48>
     5c0:	bl	0 <coda_init>
     5c4:	subs	r4, r0, #0
     5c8:	bne	125c <main+0x125c>
     5cc:	ldr	r3, [sp, #16]
     5d0:	eor	r0, r3, #1
     5d4:	bl	0 <coda_set_option_bypass_special_types>
     5d8:	mov	r0, r4
     5dc:	bl	0 <coda_set_option_perform_boundary_checks>
     5e0:	ldr	r0, [sp, #8]
     5e4:	bl	0 <coda_set_option_perform_conversions>
     5e8:	bl	0 <traverse_info_init>
     5ec:	bl	0 <dim_info_init>
     5f0:	bl	0 <traverse_product>
     5f4:	bl	0 <dim_info_done>
     5f8:	bl	0 <traverse_info_done>
     5fc:	bl	0 <coda_done>
     600:	b	2c4 <main+0x2c4>
     604:	mov	r2, #1
     608:	str	r2, [r9]
     60c:	b	598 <main+0x598>
     610:	str	r0, [sp, #8]
     614:	b	598 <main+0x598>
     618:	ldr	r0, [r7, #8]
     61c:	bl	0 <coda_set_definition_path>
     620:	mov	r6, #3
     624:	mov	r3, #12
     628:	b	a8 <main+0xa8>
     62c:	ldr	r1, [pc, #2620]	; 1070 <main+0x1070>
     630:	mov	r0, r6
     634:	bl	0 <strcmp>
     638:	ldr	r3, [sp, #32]
     63c:	ldr	r2, [sp, #36]	; 0x24
     640:	cmp	r0, #0
     644:	beq	1e8 <main+0x1e8>
     648:	b	3d4 <main+0x3d4>
     64c:	ldr	r1, [pc, #2536]	; 103c <main+0x103c>
     650:	ldr	r3, [pc, #2536]	; 1040 <main+0x1040>
     654:	add	r6, r6, #1
     658:	ldr	r0, [pc, #2532]	; 1044 <main+0x1044>
     65c:	ldr	r1, [r1]
     660:	ldr	ip, [pc, #2528]	; 1048 <main+0x1048>
     664:	ldr	lr, [pc, #2528]	; 104c <main+0x104c>
     668:	ldr	r2, [pc, #2528]	; 1050 <main+0x1050>
     66c:	sub	r4, r5, r6
     670:	str	r1, [r3]
     674:	cmp	r4, #0
     678:	mov	r1, #3
     67c:	str	r3, [sp, #12]
     680:	str	r0, [sp, #4]
     684:	str	ip, [sp, #8]
     688:	add	r7, r7, r6, lsl #2
     68c:	str	lr, [sp, #16]
     690:	str	r1, [r2]
     694:	str	fp, [r0]
     698:	str	fp, [ip]
     69c:	str	fp, [lr]
     6a0:	ble	f48 <main+0xf48>
     6a4:	ldr	r8, [pc, #2556]	; 10a8 <main+0x10a8>
     6a8:	mov	r3, #1
     6ac:	mov	r9, fp
     6b0:	str	r3, [sp, #20]
     6b4:	str	r3, [sp, #24]
     6b8:	mov	sl, r3
     6bc:	sub	r3, r4, #1
     6c0:	str	r3, [sp, #28]
     6c4:	ldr	r5, [r7, fp, lsl #2]
     6c8:	mov	r1, r8
     6cc:	mov	r0, r5
     6d0:	bl	0 <strcmp>
     6d4:	lsl	r6, fp, #2
     6d8:	cmp	r0, #0
     6dc:	beq	8a0 <main+0x8a0>
     6e0:	ldr	r1, [pc, #2500]	; 10ac <main+0x10ac>
     6e4:	mov	r0, r5
     6e8:	bl	0 <strcmp>
     6ec:	cmp	r0, #0
     6f0:	beq	8a0 <main+0x8a0>
     6f4:	ldr	r1, [pc, #2392]	; 1054 <main+0x1054>
     6f8:	mov	r0, r5
     6fc:	bl	0 <strcmp>
     700:	cmp	r0, #0
     704:	beq	8a8 <main+0x8a8>
     708:	ldr	r1, [pc, #2440]	; 1098 <main+0x1098>
     70c:	mov	r0, r5
     710:	bl	0 <strcmp>
     714:	cmp	r0, #0
     718:	beq	8a8 <main+0x8a8>
     71c:	ldr	r1, [pc, #2360]	; 105c <main+0x105c>
     720:	mov	r0, r5
     724:	bl	0 <strcmp>
     728:	cmp	r0, #0
     72c:	beq	8b4 <main+0x8b4>
     730:	ldr	r1, [pc, #2344]	; 1060 <main+0x1060>
     734:	mov	r0, r5
     738:	bl	0 <strcmp>
     73c:	cmp	r0, #0
     740:	beq	8b4 <main+0x8b4>
     744:	ldr	r1, [pc, #2328]	; 1064 <main+0x1064>
     748:	mov	r0, r5
     74c:	bl	0 <strcmp>
     750:	cmp	r0, #0
     754:	bne	85c <main+0x85c>
     758:	add	r3, fp, #1
     75c:	cmp	r4, r3
     760:	ble	ec0 <main+0xec0>
     764:	add	r6, r7, r6
     768:	ldr	r2, [r6, #4]
     76c:	ldrb	r1, [r2]
     770:	cmp	r1, #45	; 0x2d
     774:	beq	edc <main+0xedc>
     778:	ldr	r1, [sp, #16]
     77c:	mov	fp, r3
     780:	str	r2, [r1]
     784:	add	fp, fp, #1
     788:	cmp	r4, fp
     78c:	bgt	6c4 <main+0x6c4>
     790:	ldr	r3, [sp, #4]
     794:	ldr	r3, [r3]
     798:	cmp	r3, #0
     79c:	beq	f48 <main+0xf48>
     7a0:	ldrb	r3, [r3]
     7a4:	cmp	r3, #0
     7a8:	beq	f48 <main+0xf48>
     7ac:	bl	0 <coda_init>
     7b0:	cmp	r0, #0
     7b4:	bne	125c <main+0x125c>
     7b8:	ldr	r3, [sp, #24]
     7bc:	eor	r0, r3, #1
     7c0:	bl	0 <coda_set_option_bypass_special_types>
     7c4:	ldr	r0, [sp, #20]
     7c8:	bl	0 <coda_set_option_perform_conversions>
     7cc:	ldr	r3, [sp, #8]
     7d0:	ldr	r0, [r3]
     7d4:	cmp	r0, #0
     7d8:	beq	7f4 <main+0x7f4>
     7dc:	ldr	r1, [pc, #2180]	; 1068 <main+0x1068>
     7e0:	bl	0 <fopen>
     7e4:	ldr	r3, [sp, #12]
     7e8:	cmp	r0, #0
     7ec:	str	r0, [r3]
     7f0:	beq	1288 <main+0x1288>
     7f4:	mov	r0, r9
     7f8:	bl	0 <print_json_data>
     7fc:	ldr	r3, [sp, #8]
     800:	ldr	r3, [r3]
     804:	cmp	r3, #0
     808:	bne	2b4 <main+0x2b4>
     80c:	b	2c0 <main+0x2c0>
     810:	ldr	r1, [pc, #2200]	; 10b0 <main+0x10b0>
     814:	mov	r0, r4
     818:	bl	0 <strcmp>
     81c:	cmp	r0, #0
     820:	beq	890 <main+0x890>
     824:	ldr	r1, [pc, #2184]	; 10b4 <main+0x10b4>
     828:	mov	r0, r4
     82c:	bl	0 <strcmp>
     830:	cmp	r0, #0
     834:	beq	890 <main+0x890>
     838:	ldr	r1, [pc, #2168]	; 10b8 <main+0x10b8>
     83c:	mov	r0, r4
     840:	bl	0 <strcmp>
     844:	cmp	r0, #0
     848:	bne	1124 <main+0x1124>
     84c:	ldr	r3, [pc, #2104]	; 108c <main+0x108c>
     850:	mov	r2, #1
     854:	str	r2, [r3]
     858:	b	598 <main+0x598>
     85c:	ldr	r1, [pc, #2060]	; 1070 <main+0x1070>
     860:	mov	r0, r5
     864:	bl	0 <strcmp>
     868:	cmp	r0, #0
     86c:	beq	758 <main+0x758>
     870:	ldr	r1, [pc, #2192]	; 1108 <main+0x1108>
     874:	mov	r0, r5
     878:	bl	0 <strcmp>
     87c:	cmp	r0, #0
     880:	bne	f04 <main+0xf04>
     884:	mov	r3, #0
     888:	str	r3, [sp, #24]
     88c:	b	784 <main+0x784>
     890:	ldr	r3, [pc, #2032]	; 1088 <main+0x1088>
     894:	mov	r2, #1
     898:	str	r2, [r3]
     89c:	b	598 <main+0x598>
     8a0:	mov	r9, sl
     8a4:	b	784 <main+0x784>
     8a8:	mov	r3, #0
     8ac:	str	r3, [sp, #20]
     8b0:	b	784 <main+0x784>
     8b4:	add	r3, fp, #1
     8b8:	cmp	r4, r3
     8bc:	ble	eac <main+0xeac>
     8c0:	add	r6, r7, r6
     8c4:	ldr	r2, [r6, #4]
     8c8:	ldrb	r1, [r2]
     8cc:	cmp	r1, #45	; 0x2d
     8d0:	beq	f6c <main+0xf6c>
     8d4:	ldr	r1, [sp, #8]
     8d8:	mov	fp, r3
     8dc:	str	r2, [r1]
     8e0:	b	784 <main+0x784>
     8e4:	ldr	r3, [pc, #1876]	; 1040 <main+0x1040>
     8e8:	ldr	r2, [pc, #1940]	; 1084 <main+0x1084>
     8ec:	mov	lr, r3
     8f0:	str	r3, [sp, #12]
     8f4:	ldr	r3, [pc, #1864]	; 1044 <main+0x1044>
     8f8:	mov	r9, #1
     8fc:	str	r3, [sp, #4]
     900:	str	fp, [r3]
     904:	str	fp, [r3, #664]	; 0x298
     908:	ldr	r3, [pc, #1964]	; 10bc <main+0x10bc>
     90c:	str	r9, [r2]
     910:	ldr	r2, [pc, #1960]	; 10c0 <main+0x10c0>
     914:	ldr	ip, [pc, #1824]	; 103c <main+0x103c>
     918:	str	r2, [r3]
     91c:	ldr	r3, [pc, #1952]	; 10c4 <main+0x10c4>
     920:	ldr	r4, [pc, #1824]	; 1048 <main+0x1048>
     924:	add	r6, r6, #1
     928:	str	fp, [r3]
     92c:	ldr	r3, [pc, #1940]	; 10c8 <main+0x10c8>
     930:	ldr	r0, [pc, #1816]	; 1050 <main+0x1050>
     934:	ldr	r1, [pc, #1856]	; 107c <main+0x107c>
     938:	str	fp, [r3]
     93c:	ldr	r3, [pc, #1928]	; 10cc <main+0x10cc>
     940:	mov	r8, r4
     944:	str	r4, [sp, #8]
     948:	str	fp, [r3]
     94c:	ldr	r3, [pc, #1968]	; 1104 <main+0x1104>
     950:	sub	r4, r5, r6
     954:	ldr	ip, [ip]
     958:	cmp	r4, #0
     95c:	add	r6, r7, r6, lsl #2
     960:	str	ip, [lr]
     964:	str	r9, [r0]
     968:	str	r9, [r1]
     96c:	str	fp, [r8]
     970:	str	fp, [r3]
     974:	ble	f48 <main+0xf48>
     978:	sub	r3, r4, #1
     97c:	ldr	r8, [pc, #1744]	; 1054 <main+0x1054>
     980:	ldr	sl, [pc, #1808]	; 1098 <main+0x1098>
     984:	str	r9, [sp, #20]
     988:	str	r3, [sp, #24]
     98c:	b	a18 <main+0xa18>
     990:	mov	r1, sl
     994:	mov	r0, r5
     998:	bl	0 <strcmp>
     99c:	cmp	r0, #0
     9a0:	beq	a34 <main+0xa34>
     9a4:	ldr	r1, [pc, #1776]	; 109c <main+0x109c>
     9a8:	mov	r0, r5
     9ac:	bl	0 <strcmp>
     9b0:	cmp	r0, #0
     9b4:	beq	9cc <main+0x9cc>
     9b8:	ldr	r1, [pc, #1760]	; 10a0 <main+0x10a0>
     9bc:	mov	r0, r5
     9c0:	bl	0 <strcmp>
     9c4:	cmp	r0, #0
     9c8:	bne	ae8 <main+0xae8>
     9cc:	add	r2, fp, #1
     9d0:	cmp	r4, r2
     9d4:	str	r2, [sp, #16]
     9d8:	ble	ae8 <main+0xae8>
     9dc:	add	r1, r6, r7
     9e0:	ldr	r0, [r1, #4]
     9e4:	ldrb	r1, [r0]
     9e8:	cmp	r1, #45	; 0x2d
     9ec:	beq	ae8 <main+0xae8>
     9f0:	bl	0 <codadump_filter_create>
     9f4:	ldr	r3, [sp, #4]
     9f8:	ldr	r2, [sp, #16]
     9fc:	cmp	r0, #0
     a00:	str	r0, [r3, #664]	; 0x298
     a04:	beq	1238 <main+0x1238>
     a08:	mov	fp, r2
     a0c:	add	fp, fp, #1
     a10:	cmp	r4, fp
     a14:	ble	a44 <main+0xa44>
     a18:	ldr	r5, [r6, fp, lsl #2]
     a1c:	mov	r1, r8
     a20:	mov	r0, r5
     a24:	bl	0 <strcmp>
     a28:	lsl	r7, fp, #2
     a2c:	cmp	r0, #0
     a30:	bne	990 <main+0x990>
     a34:	add	fp, fp, #1
     a38:	cmp	r4, fp
     a3c:	mov	r9, r0
     a40:	bgt	a18 <main+0xa18>
     a44:	ldr	r3, [sp, #4]
     a48:	ldr	r3, [r3]
     a4c:	cmp	r3, #0
     a50:	beq	f48 <main+0xf48>
     a54:	ldrb	r3, [r3]
     a58:	cmp	r3, #0
     a5c:	beq	f48 <main+0xf48>
     a60:	bl	0 <coda_init>
     a64:	subs	r4, r0, #0
     a68:	bne	125c <main+0x125c>
     a6c:	ldr	r3, [sp, #20]
     a70:	eor	r0, r3, #1
     a74:	bl	0 <coda_set_option_bypass_special_types>
     a78:	mov	r0, r4
     a7c:	bl	0 <coda_set_option_perform_boundary_checks>
     a80:	mov	r0, r9
     a84:	bl	0 <coda_set_option_perform_conversions>
     a88:	bl	0 <traverse_info_init>
     a8c:	bl	0 <dim_info_init>
     a90:	ldr	r3, [sp, #8]
     a94:	ldr	r0, [r3]
     a98:	cmp	r0, #0
     a9c:	beq	ab8 <main+0xab8>
     aa0:	ldr	r1, [pc, #1472]	; 1068 <main+0x1068>
     aa4:	bl	0 <fopen>
     aa8:	ldr	r3, [sp, #12]
     aac:	cmp	r0, #0
     ab0:	str	r0, [r3]
     ab4:	beq	1288 <main+0x1288>
     ab8:	bl	0 <traverse_product>
     abc:	ldr	r3, [sp, #8]
     ac0:	ldr	r3, [r3]
     ac4:	cmp	r3, #0
     ac8:	beq	ad8 <main+0xad8>
     acc:	ldr	r3, [sp, #12]
     ad0:	ldr	r0, [r3]
     ad4:	bl	0 <fclose>
     ad8:	bl	0 <dim_info_done>
     adc:	bl	0 <traverse_info_done>
     ae0:	bl	0 <coda_done>
     ae4:	b	2c4 <main+0x2c4>
     ae8:	ldr	r1, [pc, #1504]	; 10d0 <main+0x10d0>
     aec:	mov	r0, r5
     af0:	bl	0 <strcmp>
     af4:	cmp	r0, #0
     af8:	beq	c20 <main+0xc20>
     afc:	ldr	r1, [pc, #1488]	; 10d4 <main+0x10d4>
     b00:	mov	r0, r5
     b04:	bl	0 <strcmp>
     b08:	cmp	r0, #0
     b0c:	beq	c20 <main+0xc20>
     b10:	ldr	r1, [pc, #1472]	; 10d8 <main+0x10d8>
     b14:	mov	r0, r5
     b18:	bl	0 <strcmp>
     b1c:	cmp	r0, #0
     b20:	beq	c30 <main+0xc30>
     b24:	ldr	r1, [pc, #1456]	; 10dc <main+0x10dc>
     b28:	mov	r0, r5
     b2c:	bl	0 <strcmp>
     b30:	cmp	r0, #0
     b34:	beq	c30 <main+0xc30>
     b38:	ldr	r1, [pc, #1308]	; 105c <main+0x105c>
     b3c:	mov	r0, r5
     b40:	bl	0 <strcmp>
     b44:	cmp	r0, #0
     b48:	bne	b7c <main+0xb7c>
     b4c:	add	r2, fp, #1
     b50:	cmp	r4, r2
     b54:	ble	b90 <main+0xb90>
     b58:	add	r1, r6, r7
     b5c:	ldr	r1, [r1, #4]
     b60:	ldrb	r0, [r1]
     b64:	cmp	r0, #45	; 0x2d
     b68:	beq	b90 <main+0xb90>
     b6c:	ldr	r3, [sp, #8]
     b70:	mov	fp, r2
     b74:	str	r1, [r3]
     b78:	b	a0c <main+0xa0c>
     b7c:	ldr	r1, [pc, #1244]	; 1060 <main+0x1060>
     b80:	mov	r0, r5
     b84:	bl	0 <strcmp>
     b88:	cmp	r0, #0
     b8c:	beq	b4c <main+0xb4c>
     b90:	ldr	r1, [pc, #1352]	; 10e0 <main+0x10e0>
     b94:	mov	r0, r5
     b98:	bl	0 <strcmp>
     b9c:	cmp	r0, #0
     ba0:	beq	c10 <main+0xc10>
     ba4:	ldr	r1, [pc, #1336]	; 10e4 <main+0x10e4>
     ba8:	mov	r0, r5
     bac:	bl	0 <strcmp>
     bb0:	cmp	r0, #0
     bb4:	beq	c10 <main+0xc10>
     bb8:	ldr	r1, [pc, #1320]	; 10e8 <main+0x10e8>
     bbc:	mov	r0, r5
     bc0:	bl	0 <strcmp>
     bc4:	cmp	r0, #0
     bc8:	beq	be0 <main+0xbe0>
     bcc:	ldr	r1, [pc, #1304]	; 10ec <main+0x10ec>
     bd0:	mov	r0, r5
     bd4:	bl	0 <strcmp>
     bd8:	cmp	r0, #0
     bdc:	bne	114c <main+0x114c>
     be0:	add	r2, fp, #1
     be4:	cmp	r4, r2
     be8:	ble	114c <main+0x114c>
     bec:	add	r7, r6, r7
     bf0:	ldr	r1, [r7, #4]
     bf4:	ldrb	r0, [r1]
     bf8:	cmp	r0, #45	; 0x2d
     bfc:	beq	114c <main+0x114c>
     c00:	ldr	r3, [pc, #1204]	; 10bc <main+0x10bc>
     c04:	mov	fp, r2
     c08:	str	r1, [r3]
     c0c:	b	a0c <main+0xa0c>
     c10:	ldr	r3, [pc, #1204]	; 10cc <main+0x10cc>
     c14:	mov	r2, #1
     c18:	str	r2, [r3]
     c1c:	b	a0c <main+0xa0c>
     c20:	ldr	r3, [pc, #1180]	; 10c4 <main+0x10c4>
     c24:	mov	r2, #1
     c28:	str	r2, [r3]
     c2c:	b	a0c <main+0xa0c>
     c30:	ldr	r3, [pc, #1168]	; 10c8 <main+0x10c8>
     c34:	mov	r2, #1
     c38:	str	r2, [r3]
     c3c:	b	a0c <main+0xa0c>
     c40:	ldr	r1, [pc, #1012]	; 103c <main+0x103c>
     c44:	ldr	r3, [pc, #1012]	; 1040 <main+0x1040>
     c48:	add	r6, r6, #1
     c4c:	ldr	r0, [pc, #1008]	; 1044 <main+0x1044>
     c50:	ldr	r1, [r1]
     c54:	ldr	ip, [pc, #1004]	; 1048 <main+0x1048>
     c58:	ldr	lr, [pc, #1004]	; 104c <main+0x104c>
     c5c:	ldr	r2, [pc, #1004]	; 1050 <main+0x1050>
     c60:	sub	r4, r5, r6
     c64:	str	r1, [r3]
     c68:	cmp	r4, #0
     c6c:	mov	r1, #4
     c70:	str	r3, [sp, #12]
     c74:	str	r0, [sp, #4]
     c78:	str	ip, [sp, #8]
     c7c:	add	r7, r7, r6, lsl #2
     c80:	str	lr, [sp, #16]
     c84:	str	r1, [r2]
     c88:	str	fp, [r0]
     c8c:	str	fp, [ip]
     c90:	str	fp, [lr]
     c94:	ble	f48 <main+0xf48>
     c98:	ldr	r8, [pc, #1032]	; 10a8 <main+0x10a8>
     c9c:	mov	r3, #1
     ca0:	mov	r9, fp
     ca4:	str	r3, [sp, #20]
     ca8:	str	r3, [sp, #24]
     cac:	mov	sl, r3
     cb0:	sub	r3, r4, #1
     cb4:	str	r3, [sp, #28]
     cb8:	ldr	r5, [r7, fp, lsl #2]
     cbc:	mov	r1, r8
     cc0:	mov	r0, r5
     cc4:	bl	0 <strcmp>
     cc8:	lsl	r6, fp, #2
     ccc:	cmp	r0, #0
     cd0:	beq	e5c <main+0xe5c>
     cd4:	ldr	r1, [pc, #976]	; 10ac <main+0x10ac>
     cd8:	mov	r0, r5
     cdc:	bl	0 <strcmp>
     ce0:	cmp	r0, #0
     ce4:	beq	e5c <main+0xe5c>
     ce8:	ldr	r1, [pc, #868]	; 1054 <main+0x1054>
     cec:	mov	r0, r5
     cf0:	bl	0 <strcmp>
     cf4:	cmp	r0, #0
     cf8:	beq	e70 <main+0xe70>
     cfc:	ldr	r1, [pc, #916]	; 1098 <main+0x1098>
     d00:	mov	r0, r5
     d04:	bl	0 <strcmp>
     d08:	cmp	r0, #0
     d0c:	beq	e70 <main+0xe70>
     d10:	ldr	r1, [pc, #836]	; 105c <main+0x105c>
     d14:	mov	r0, r5
     d18:	bl	0 <strcmp>
     d1c:	cmp	r0, #0
     d20:	beq	e7c <main+0xe7c>
     d24:	ldr	r1, [pc, #820]	; 1060 <main+0x1060>
     d28:	mov	r0, r5
     d2c:	bl	0 <strcmp>
     d30:	cmp	r0, #0
     d34:	beq	e7c <main+0xe7c>
     d38:	ldr	r1, [pc, #804]	; 1064 <main+0x1064>
     d3c:	mov	r0, r5
     d40:	bl	0 <strcmp>
     d44:	cmp	r0, #0
     d48:	bne	d90 <main+0xd90>
     d4c:	add	r3, fp, #1
     d50:	cmp	r4, r3
     d54:	ble	dc4 <main+0xdc4>
     d58:	add	r6, r7, r6
     d5c:	ldr	r2, [r6, #4]
     d60:	ldrb	r1, [r2]
     d64:	cmp	r1, #45	; 0x2d
     d68:	beq	fe4 <main+0xfe4>
     d6c:	ldr	r1, [sp, #16]
     d70:	mov	fp, r3
     d74:	str	r2, [r1]
     d78:	b	e60 <main+0xe60>
     d7c:	ldr	r1, [pc, #736]	; 1064 <main+0x1064>
     d80:	mov	r0, r5
     d84:	bl	0 <strcmp>
     d88:	cmp	r0, #0
     d8c:	beq	dc4 <main+0xdc4>
     d90:	ldr	r1, [pc, #728]	; 1070 <main+0x1070>
     d94:	mov	r0, r5
     d98:	bl	0 <strcmp>
     d9c:	cmp	r0, #0
     da0:	beq	d4c <main+0xd4c>
     da4:	ldr	r1, [pc, #860]	; 1108 <main+0x1108>
     da8:	mov	r0, r5
     dac:	bl	0 <strcmp>
     db0:	cmp	r0, #0
     db4:	bne	f28 <main+0xf28>
     db8:	mov	r3, #0
     dbc:	str	r3, [sp, #24]
     dc0:	b	e60 <main+0xe60>
     dc4:	ldr	r1, [pc, #828]	; 1108 <main+0x1108>
     dc8:	mov	r0, r5
     dcc:	bl	0 <strcmp>
     dd0:	cmp	r0, #0
     dd4:	bne	f28 <main+0xf28>
     dd8:	str	r0, [sp, #24]
     ddc:	ldr	r3, [sp, #4]
     de0:	ldr	r3, [r3]
     de4:	cmp	r3, #0
     de8:	beq	f48 <main+0xf48>
     dec:	ldrb	r3, [r3]
     df0:	cmp	r3, #0
     df4:	beq	f48 <main+0xf48>
     df8:	bl	0 <coda_init>
     dfc:	cmp	r0, #0
     e00:	bne	125c <main+0x125c>
     e04:	ldr	r3, [sp, #24]
     e08:	eor	r0, r3, #1
     e0c:	bl	0 <coda_set_option_bypass_special_types>
     e10:	ldr	r0, [sp, #20]
     e14:	bl	0 <coda_set_option_perform_conversions>
     e18:	ldr	r3, [sp, #8]
     e1c:	ldr	r0, [r3]
     e20:	cmp	r0, #0
     e24:	beq	e40 <main+0xe40>
     e28:	ldr	r1, [pc, #568]	; 1068 <main+0x1068>
     e2c:	bl	0 <fopen>
     e30:	ldr	r3, [sp, #12]
     e34:	cmp	r0, #0
     e38:	str	r0, [r3]
     e3c:	beq	1288 <main+0x1288>
     e40:	mov	r0, r9
     e44:	bl	0 <print_yaml_data>
     e48:	ldr	r3, [sp, #8]
     e4c:	ldr	r3, [r3]
     e50:	cmp	r3, #0
     e54:	bne	2b4 <main+0x2b4>
     e58:	b	2c0 <main+0x2c0>
     e5c:	mov	r9, sl
     e60:	add	fp, fp, #1
     e64:	cmp	r4, fp
     e68:	bgt	cb8 <main+0xcb8>
     e6c:	b	ddc <main+0xddc>
     e70:	mov	r3, #0
     e74:	str	r3, [sp, #20]
     e78:	b	e60 <main+0xe60>
     e7c:	add	r3, fp, #1
     e80:	cmp	r4, r3
     e84:	ble	d7c <main+0xd7c>
     e88:	add	r6, r7, r6
     e8c:	ldr	r2, [r6, #4]
     e90:	ldrb	r1, [r2]
     e94:	cmp	r1, #45	; 0x2d
     e98:	beq	fa8 <main+0xfa8>
     e9c:	ldr	r1, [sp, #8]
     ea0:	mov	fp, r3
     ea4:	str	r2, [r1]
     ea8:	b	e60 <main+0xe60>
     eac:	ldr	r1, [pc, #432]	; 1064 <main+0x1064>
     eb0:	mov	r0, r5
     eb4:	bl	0 <strcmp>
     eb8:	cmp	r0, #0
     ebc:	bne	85c <main+0x85c>
     ec0:	ldr	r1, [pc, #576]	; 1108 <main+0x1108>
     ec4:	mov	r0, r5
     ec8:	bl	0 <strcmp>
     ecc:	cmp	r0, #0
     ed0:	bne	f04 <main+0xf04>
     ed4:	str	r0, [sp, #24]
     ed8:	b	790 <main+0x790>
     edc:	ldr	r1, [pc, #548]	; 1108 <main+0x1108>
     ee0:	mov	r0, r5
     ee4:	str	r3, [sp, #32]
     ee8:	bl	0 <strcmp>
     eec:	ldr	r3, [sp, #32]
     ef0:	cmp	r0, #0
     ef4:	moveq	fp, r3
     ef8:	moveq	r3, #0
     efc:	streq	r3, [sp, #24]
     f00:	beq	6c4 <main+0x6c4>
     f04:	ldr	r3, [sp, #28]
     f08:	cmp	r3, fp
     f0c:	bne	f48 <main+0xf48>
     f10:	ldrb	r3, [r5]
     f14:	cmp	r3, #45	; 0x2d
     f18:	beq	f48 <main+0xf48>
     f1c:	ldr	r3, [sp, #4]
     f20:	str	r5, [r3]
     f24:	b	784 <main+0x784>
     f28:	ldr	r3, [sp, #28]
     f2c:	cmp	r3, fp
     f30:	bne	f48 <main+0xf48>
     f34:	ldrb	r3, [r5]
     f38:	cmp	r3, #45	; 0x2d
     f3c:	ldrne	r3, [sp, #4]
     f40:	strne	r5, [r3]
     f44:	bne	e60 <main+0xe60>
     f48:	ldr	r3, [pc, #460]	; 111c <main+0x111c>
     f4c:	mov	r2, #25
     f50:	mov	r1, #1
     f54:	ldr	r3, [r3]
     f58:	ldr	r0, [pc, #400]	; 10f0 <main+0x10f0>
     f5c:	bl	0 <fwrite>
     f60:	bl	0 <main>
     f64:	mov	r0, #1
     f68:	bl	0 <exit>
     f6c:	ldr	r1, [pc, #240]	; 1064 <main+0x1064>
     f70:	mov	r0, r5
     f74:	str	r3, [sp, #32]
     f78:	bl	0 <strcmp>
     f7c:	ldr	r3, [sp, #32]
     f80:	cmp	r0, #0
     f84:	beq	edc <main+0xedc>
     f88:	ldr	r1, [pc, #224]	; 1070 <main+0x1070>
     f8c:	mov	r0, r5
     f90:	str	r3, [sp, #32]
     f94:	bl	0 <strcmp>
     f98:	ldr	r3, [sp, #32]
     f9c:	cmp	r0, #0
     fa0:	beq	768 <main+0x768>
     fa4:	b	870 <main+0x870>
     fa8:	ldr	r1, [pc, #180]	; 1064 <main+0x1064>
     fac:	mov	r0, r5
     fb0:	str	r3, [sp, #32]
     fb4:	bl	0 <strcmp>
     fb8:	ldr	r3, [sp, #32]
     fbc:	cmp	r0, #0
     fc0:	beq	fe4 <main+0xfe4>
     fc4:	ldr	r1, [pc, #164]	; 1070 <main+0x1070>
     fc8:	mov	r0, r5
     fcc:	str	r3, [sp, #32]
     fd0:	bl	0 <strcmp>
     fd4:	ldr	r3, [sp, #32]
     fd8:	cmp	r0, #0
     fdc:	beq	d5c <main+0xd5c>
     fe0:	b	da4 <main+0xda4>
     fe4:	ldr	r1, [pc, #284]	; 1108 <main+0x1108>
     fe8:	mov	r0, r5
     fec:	str	r3, [sp, #32]
     ff0:	bl	0 <strcmp>
     ff4:	ldr	r3, [sp, #32]
     ff8:	cmp	r0, #0
     ffc:	bne	f28 <main+0xf28>
    1000:	mov	fp, r3
    1004:	mov	r3, #0
    1008:	str	r3, [sp, #24]
    100c:	b	cb8 <main+0xcb8>
    1010:	.word	0x00000fa0
    1014:	.word	0x00000fa4
    1018:	.word	0x00000fac
    101c:	.word	0x00000fb0
    1020:	.word	0x00001004
    1024:	.word	0x00001008
    1028:	.word	0x00001024
    102c:	.word	0x000010fc
    1030:	.word	0x000011a0
    1034:	.word	0x000011c8
    1038:	.word	0x000011d0
	...
    1054:	.word	0x00001058
    1058:	.word	0x000011d8
    105c:	.word	0x00001120
    1060:	.word	0x00001124
    1064:	.word	0x000011bc
    1068:	.word	0x00001170
    106c:	.word	0x00001204
    1070:	.word	0x000011c0
    1074:	.word	0x000011f8
	...
    1090:	.word	0x00001048
    1094:	.word	0x0000104c
    1098:	.word	0x0000105c
    109c:	.word	0x00001074
    10a0:	.word	0x00001078
    10a4:	.word	0x000010b4
    10a8:	.word	0x000011a8
    10ac:	.word	0x000011ac
    10b0:	.word	0x000010bc
    10b4:	.word	0x000010c0
    10b8:	.word	0x000010c8
    10bc:	.word	0x00000000
    10c0:	.word	0x00001104
	...
    10d0:	.word	0x00001108
    10d4:	.word	0x0000110c
    10d8:	.word	0x00001114
    10dc:	.word	0x00001118
    10e0:	.word	0x00001130
    10e4:	.word	0x00001134
    10e8:	.word	0x00001144
    10ec:	.word	0x00001148
    10f0:	.word	0x0000102c
    10f4:	.word	0x000010d8
    10f8:	.word	0x00000000
    10fc:	.word	0x000010b0
    1100:	.word	0x0000115c
    1104:	.word	0x00000000
    1108:	.word	0x000010e8
    110c:	.word	0x00000fbc
    1110:	.word	0x00000fd4
    1114:	.word	0x00001084
    1118:	.word	0x00000f94
    111c:	.word	0x00000000
    1120:	.word	0x00001174
    1124:	ldr	r1, [pc, #-56]	; 10f4 <main+0x10f4>
    1128:	mov	r0, r4
    112c:	bl	0 <strcmp>
    1130:	cmp	r0, #0
    1134:	bne	11bc <main+0x11bc>
    1138:	ldr	r3, [pc, #-72]	; 10f8 <main+0x10f8>
    113c:	mov	r2, #1
    1140:	str	r2, [r9]
    1144:	str	r2, [r3]
    1148:	b	598 <main+0x598>
    114c:	ldr	r1, [pc, #-88]	; 10fc <main+0x10fc>
    1150:	mov	r0, r5
    1154:	bl	0 <strcmp>
    1158:	cmp	r0, #0
    115c:	beq	11ac <main+0x11ac>
    1160:	ldr	r1, [pc, #-104]	; 1100 <main+0x1100>
    1164:	mov	r0, r5
    1168:	bl	0 <strcmp>
    116c:	cmp	r0, #0
    1170:	beq	11ac <main+0x11ac>
    1174:	ldr	r1, [pc, #-116]	; 1108 <main+0x1108>
    1178:	mov	r0, r5
    117c:	bl	0 <strcmp>
    1180:	cmp	r0, #0
    1184:	beq	11fc <main+0x11fc>
    1188:	ldr	r3, [sp, #24]
    118c:	cmp	r3, fp
    1190:	bne	f48 <main+0xf48>
    1194:	ldrb	r2, [r5]
    1198:	cmp	r2, #45	; 0x2d
    119c:	beq	f48 <main+0xf48>
    11a0:	ldr	r3, [sp, #4]
    11a4:	str	r5, [r3]
    11a8:	b	a0c <main+0xa0c>
    11ac:	ldr	r3, [pc, #-176]	; 1104 <main+0x1104>
    11b0:	mov	r2, #1
    11b4:	str	r2, [r3]
    11b8:	b	a0c <main+0xa0c>
    11bc:	ldr	r1, [pc, #-188]	; 1108 <main+0x1108>
    11c0:	mov	r0, r4
    11c4:	bl	0 <strcmp>
    11c8:	cmp	r0, #0
    11cc:	beq	11f4 <main+0x11f4>
    11d0:	ldr	r3, [sp, #20]
    11d4:	cmp	r3, fp
    11d8:	bne	f48 <main+0xf48>
    11dc:	ldrb	r2, [r4]
    11e0:	cmp	r2, #45	; 0x2d
    11e4:	beq	f48 <main+0xf48>
    11e8:	ldr	r3, [sp, #4]
    11ec:	str	r4, [r3]
    11f0:	b	598 <main+0x598>
    11f4:	str	r0, [sp, #16]
    11f8:	b	598 <main+0x598>
    11fc:	str	r0, [sp, #20]
    1200:	b	a0c <main+0xa0c>
    1204:	bl	0 <main>
    1208:	mov	r0, #0
    120c:	bl	0 <exit>
    1210:	bl	0 <coda_get_libcoda_version>
    1214:	mov	r1, r0
    1218:	ldr	r0, [pc, #-276]	; 110c <main+0x110c>
    121c:	bl	0 <printf>
    1220:	ldr	r0, [pc, #-280]	; 1110 <main+0x1110>
    1224:	bl	0 <puts>
    1228:	mov	r0, #10
    122c:	bl	0 <putchar>
    1230:	mov	r0, #0
    1234:	bl	0 <exit>
    1238:	ldr	r3, [pc, #-292]	; 111c <main+0x111c>
    123c:	mov	r2, #40	; 0x28
    1240:	mov	r1, #1
    1244:	ldr	r3, [r3]
    1248:	ldr	r0, [pc, #-316]	; 1114 <main+0x1114>
    124c:	bl	0 <fwrite>
    1250:	bl	0 <main>
    1254:	mov	r0, #1
    1258:	bl	0 <exit>
    125c:	ldr	r3, [pc, #-328]	; 111c <main+0x111c>
    1260:	ldr	r4, [r3]
    1264:	bl	0 <coda_get_errno>
    1268:	ldr	r0, [r0]
    126c:	bl	0 <coda_errno_to_string>
    1270:	ldr	r1, [pc, #-352]	; 1118 <main+0x1118>
    1274:	mov	r2, r0
    1278:	mov	r0, r4
    127c:	bl	0 <fprintf>
    1280:	mov	r0, #1
    1284:	bl	0 <exit>
    1288:	ldr	r3, [pc, #-372]	; 111c <main+0x111c>
    128c:	ldr	r2, [sp, #8]
    1290:	ldr	r1, [pc, #-376]	; 1120 <main+0x1120>
    1294:	ldr	r0, [r3]
    1298:	ldr	r2, [r2]
    129c:	bl	0 <fprintf>
    12a0:	mov	r0, #1
    12a4:	bl	0 <exit>
