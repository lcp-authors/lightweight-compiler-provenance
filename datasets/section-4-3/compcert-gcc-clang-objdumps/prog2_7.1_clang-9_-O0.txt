
../compcert-repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010e28 <.init>:
   10e28:	push	{r3, lr}
   10e2c:	bl	10f38 <_start@@Base+0x3c>
   10e30:	pop	{r3, pc}

Disassembly of section .plt:

00010e34 <strcmp@plt-0x14>:
   10e34:	push	{lr}		; (str lr, [sp, #-4]!)
   10e38:	ldr	lr, [pc, #4]	; 10e44 <strcmp@plt-0x4>
   10e3c:	add	lr, pc, lr
   10e40:	ldr	pc, [lr, #8]!
   10e44:			; <UNDEFINED> instruction: 0x000121bc

00010e48 <strcmp@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #444]!	; 0x1bc

00010e54 <printf@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e60 <fopen@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #428]!	; 0x1ac

00010e6c <free@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #420]!	; 0x1a4

00010e78 <fgets@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #412]!	; 0x19c

00010e84 <memcpy@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #404]!	; 0x194

00010e90 <realloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #396]!	; 0x18c

00010e9c <strcpy@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #388]!	; 0x184

00010ea8 <malloc@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #380]!	; 0x17c

00010eb4 <__libc_start_main@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #372]!	; 0x174

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #364]!	; 0x16c

00010ecc <strlen@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #356]!	; 0x164

00010ed8 <fclose@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #348]!	; 0x15c

00010ee4 <strtok@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #340]!	; 0x154

00010ef0 <abort@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #332]!	; 0x14c

Disassembly of section .text:

00010efc <_start@@Base>:
   10efc:	mov	fp, #0
   10f00:	mov	lr, #0
   10f04:	pop	{r1}		; (ldr r1, [sp], #4)
   10f08:	mov	r2, sp
   10f0c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f10:	push	{r0}		; (str r0, [sp, #-4]!)
   10f14:	ldr	ip, [pc, #16]	; 10f2c <_start@@Base+0x30>
   10f18:	push	{ip}		; (str ip, [sp, #-4]!)
   10f1c:	ldr	r0, [pc, #12]	; 10f30 <_start@@Base+0x34>
   10f20:	ldr	r3, [pc, #12]	; 10f34 <_start@@Base+0x38>
   10f24:	bl	10eb4 <__libc_start_main@plt>
   10f28:	bl	10ef0 <abort@plt>
   10f2c:	andeq	r2, r1, r4, asr r8
   10f30:	andeq	r0, r1, ip, ror #31
   10f34:	strdeq	r2, [r1], -r4
   10f38:	ldr	r3, [pc, #20]	; 10f54 <_start@@Base+0x58>
   10f3c:	ldr	r2, [pc, #20]	; 10f58 <_start@@Base+0x5c>
   10f40:	add	r3, pc, r3
   10f44:	ldr	r2, [r3, r2]
   10f48:	cmp	r2, #0
   10f4c:	bxeq	lr
   10f50:	b	10ec0 <__gmon_start__@plt>
   10f54:	strheq	r2, [r1], -r8
   10f58:	andeq	r0, r0, r8, asr #32
   10f5c:	ldr	r0, [pc, #24]	; 10f7c <_start@@Base+0x80>
   10f60:	ldr	r3, [pc, #24]	; 10f80 <_start@@Base+0x84>
   10f64:	cmp	r3, r0
   10f68:	bxeq	lr
   10f6c:	ldr	r3, [pc, #16]	; 10f84 <_start@@Base+0x88>
   10f70:	cmp	r3, #0
   10f74:	bxeq	lr
   10f78:	bx	r3
   10f7c:	andeq	r3, r2, r4, asr r0
   10f80:	andeq	r3, r2, r4, asr r0
   10f84:	andeq	r0, r0, r0
   10f88:	ldr	r0, [pc, #36]	; 10fb4 <_start@@Base+0xb8>
   10f8c:	ldr	r1, [pc, #36]	; 10fb8 <_start@@Base+0xbc>
   10f90:	sub	r1, r1, r0
   10f94:	asr	r1, r1, #2
   10f98:	add	r1, r1, r1, lsr #31
   10f9c:	asrs	r1, r1, #1
   10fa0:	bxeq	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <_start@@Base+0xc0>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r3, r2, r4, asr r0
   10fb8:	andeq	r3, r2, r4, asr r0
   10fbc:	andeq	r0, r0, r0
   10fc0:	push	{r4, lr}
   10fc4:	ldr	r4, [pc, #24]	; 10fe4 <_start@@Base+0xe8>
   10fc8:	ldrb	r3, [r4]
   10fcc:	cmp	r3, #0
   10fd0:	popne	{r4, pc}
   10fd4:	bl	10f5c <_start@@Base+0x60>
   10fd8:	mov	r3, #1
   10fdc:	strb	r3, [r4]
   10fe0:	pop	{r4, pc}
   10fe4:	andeq	r3, r2, r4, asr r0
   10fe8:	b	10f88 <_start@@Base+0x8c>

00010fec <main@@Base>:
   10fec:	push	{fp, lr}
   10ff0:	mov	fp, sp
   10ff4:	sub	sp, sp, #216	; 0xd8
   10ff8:	movw	r0, #0
   10ffc:	str	r0, [fp, #-4]
   11000:	movw	r0, #10340	; 0x2864
   11004:	movt	r0, #1
   11008:	bl	10e54 <printf@plt>
   1100c:	movw	r1, #8008	; 0x1f48
   11010:	movt	r1, #1
   11014:	movw	r2, #10440	; 0x28c8
   11018:	movt	r2, #1
   1101c:	sub	r3, fp, #44	; 0x2c
   11020:	str	r0, [sp, #48]	; 0x30
   11024:	mov	r0, r3
   11028:	str	r1, [sp, #44]	; 0x2c
   1102c:	mov	r1, r2
   11030:	movw	r2, #40	; 0x28
   11034:	bl	10e84 <memcpy@plt>
   11038:	ldr	r0, [sp, #44]	; 0x2c
   1103c:	blx	r0
   11040:	str	r0, [sp, #64]	; 0x40
   11044:	movw	r0, #0
   11048:	str	r0, [sp, #68]	; 0x44
   1104c:	ldr	r0, [sp, #68]	; 0x44
   11050:	cmp	r0, #10
   11054:	bge	11080 <main@@Base+0x94>
   11058:	ldr	r0, [sp, #64]	; 0x40
   1105c:	ldr	r1, [sp, #68]	; 0x44
   11060:	sub	r2, fp, #44	; 0x2c
   11064:	add	r1, r2, r1, lsl #2
   11068:	ldr	r1, [r1]
   1106c:	bl	12358 <bst_insere@@Base>
   11070:	ldr	r0, [sp, #68]	; 0x44
   11074:	add	r0, r0, #1
   11078:	str	r0, [sp, #68]	; 0x44
   1107c:	b	1104c <main@@Base+0x60>
   11080:	ldr	r0, [sp, #64]	; 0x40
   11084:	ldr	r0, [r0]
   11088:	bl	12724 <bst_altura@@Base>
   1108c:	movw	r1, #10365	; 0x287d
   11090:	movt	r1, #1
   11094:	str	r0, [sp, #40]	; 0x28
   11098:	mov	r0, r1
   1109c:	ldr	r1, [sp, #40]	; 0x28
   110a0:	bl	10e54 <printf@plt>
   110a4:	ldr	r1, [sp, #64]	; 0x40
   110a8:	str	r0, [sp, #36]	; 0x24
   110ac:	mov	r0, r1
   110b0:	bl	125f8 <bst_imprime@@Base>
   110b4:	movw	r0, #10385	; 0x2891
   110b8:	movt	r0, #1
   110bc:	bl	10e54 <printf@plt>
   110c0:	movw	r1, #4736	; 0x1280
   110c4:	movt	r1, #1
   110c8:	str	r0, [sp, #32]
   110cc:	blx	r1
   110d0:	str	r0, [sp, #60]	; 0x3c
   110d4:	movw	r0, #10390	; 0x2896
   110d8:	movt	r0, #1
   110dc:	movw	r1, #10402	; 0x28a2
   110e0:	movt	r1, #1
   110e4:	bl	10e60 <fopen@plt>
   110e8:	str	r0, [sp, #56]	; 0x38
   110ec:	add	r0, sp, #72	; 0x48
   110f0:	ldr	r2, [sp, #56]	; 0x38
   110f4:	movw	r1, #100	; 0x64
   110f8:	bl	10e78 <fgets@plt>
   110fc:	movw	r1, #0
   11100:	cmp	r0, r1
   11104:	beq	111a4 <main@@Base+0x1b8>
   11108:	add	r0, sp, #72	; 0x48
   1110c:	str	r0, [sp, #28]
   11110:	movw	r1, #10404	; 0x28a4
   11114:	movt	r1, #1
   11118:	bl	10ee4 <strtok@plt>
   1111c:	add	r1, sp, #72	; 0x48
   11120:	ldr	r2, [sp, #28]
   11124:	str	r0, [sp, #24]
   11128:	mov	r0, r2
   1112c:	ldr	r3, [sp, #24]
   11130:	str	r1, [sp, #20]
   11134:	mov	r1, r3
   11138:	bl	10e9c <strcpy@plt>
   1113c:	movw	r1, #0
   11140:	str	r0, [sp, #16]
   11144:	mov	r0, r1
   11148:	movw	r1, #10404	; 0x28a4
   1114c:	movt	r1, #1
   11150:	bl	10ee4 <strtok@plt>
   11154:	add	r1, sp, #72	; 0x48
   11158:	ldr	r2, [sp, #20]
   1115c:	str	r0, [sp, #12]
   11160:	mov	r0, r2
   11164:	ldr	r3, [sp, #12]
   11168:	str	r1, [sp, #8]
   1116c:	mov	r1, r3
   11170:	bl	10e9c <strcpy@plt>
   11174:	ldr	r1, [sp, #8]
   11178:	str	r0, [sp, #4]
   1117c:	mov	r0, r1
   11180:	bl	10ecc <strlen@plt>
   11184:	sub	r0, r0, #1
   11188:	ldr	r1, [sp, #8]
   1118c:	add	r0, r1, r0
   11190:	movw	r2, #0
   11194:	strb	r2, [r0]
   11198:	ldr	r0, [sp, #60]	; 0x3c
   1119c:	bl	117cc <avl_insere@@Base>
   111a0:	b	110ec <main@@Base+0x100>
   111a4:	ldr	r0, [sp, #56]	; 0x38
   111a8:	bl	10ed8 <fclose@plt>
   111ac:	ldr	r1, [sp, #60]	; 0x3c
   111b0:	str	r0, [sp]
   111b4:	mov	r0, r1
   111b8:	movw	r1, #10406	; 0x28a6
   111bc:	movt	r1, #1
   111c0:	bl	116c8 <avl_pesquisa@@Base>
   111c4:	str	r0, [sp, #52]	; 0x34
   111c8:	ldr	r0, [sp, #52]	; 0x34
   111cc:	movw	r1, #0
   111d0:	cmp	r0, r1
   111d4:	beq	111f4 <main@@Base+0x208>
   111d8:	ldr	r0, [sp, #52]	; 0x34
   111dc:	ldr	r1, [r0]
   111e0:	ldr	r0, [sp, #52]	; 0x34
   111e4:	ldr	r2, [r0, #16]
   111e8:	movw	r0, #10415	; 0x28af
   111ec:	movt	r0, #1
   111f0:	bl	10e54 <printf@plt>
   111f4:	ldr	r0, [sp, #60]	; 0x3c
   111f8:	movw	r1, #10424	; 0x28b8
   111fc:	movt	r1, #1
   11200:	bl	116c8 <avl_pesquisa@@Base>
   11204:	str	r0, [sp, #52]	; 0x34
   11208:	ldr	r0, [sp, #52]	; 0x34
   1120c:	movw	r1, #0
   11210:	cmp	r0, r1
   11214:	beq	11234 <main@@Base+0x248>
   11218:	ldr	r0, [sp, #52]	; 0x34
   1121c:	ldr	r1, [r0]
   11220:	ldr	r0, [sp, #52]	; 0x34
   11224:	ldr	r2, [r0, #16]
   11228:	movw	r0, #10415	; 0x28af
   1122c:	movt	r0, #1
   11230:	bl	10e54 <printf@plt>
   11234:	ldr	r0, [sp, #60]	; 0x3c
   11238:	movw	r1, #10430	; 0x28be
   1123c:	movt	r1, #1
   11240:	bl	116c8 <avl_pesquisa@@Base>
   11244:	str	r0, [sp, #52]	; 0x34
   11248:	ldr	r0, [sp, #52]	; 0x34
   1124c:	movw	r1, #0
   11250:	cmp	r0, r1
   11254:	beq	11274 <main@@Base+0x288>
   11258:	ldr	r0, [sp, #52]	; 0x34
   1125c:	ldr	r1, [r0]
   11260:	ldr	r0, [sp, #52]	; 0x34
   11264:	ldr	r2, [r0, #16]
   11268:	movw	r0, #10415	; 0x28af
   1126c:	movt	r0, #1
   11270:	bl	10e54 <printf@plt>
   11274:	movw	r0, #0
   11278:	mov	sp, fp
   1127c:	pop	{fp, pc}

00011280 <avl_nova@@Base>:
   11280:	push	{fp, lr}
   11284:	mov	fp, sp
   11288:	sub	sp, sp, #8
   1128c:	movw	r0, #4
   11290:	bl	10ea8 <malloc@plt>
   11294:	str	r0, [sp]
   11298:	ldr	r0, [sp]
   1129c:	movw	r1, #0
   112a0:	cmp	r0, r1
   112a4:	bne	112b4 <avl_nova@@Base+0x34>
   112a8:	movw	r0, #0
   112ac:	str	r0, [sp, #4]
   112b0:	b	112c8 <avl_nova@@Base+0x48>
   112b4:	ldr	r0, [sp]
   112b8:	movw	r1, #0
   112bc:	str	r1, [r0]
   112c0:	ldr	r0, [sp]
   112c4:	str	r0, [sp, #4]
   112c8:	ldr	r0, [sp, #4]
   112cc:	mov	sp, fp
   112d0:	pop	{fp, pc}

000112d4 <avl_apaga@@Base>:
   112d4:	push	{fp, lr}
   112d8:	mov	fp, sp
   112dc:	sub	sp, sp, #8
   112e0:	str	r0, [sp, #4]
   112e4:	ldr	r0, [sp, #4]
   112e8:	movw	r1, #0
   112ec:	cmp	r0, r1
   112f0:	bne	112f8 <avl_apaga@@Base+0x24>
   112f4:	b	1133c <avl_apaga@@Base+0x68>
   112f8:	b	112fc <avl_apaga@@Base+0x28>
   112fc:	ldr	r0, [sp, #4]
   11300:	ldr	r0, [r0]
   11304:	movw	r1, #0
   11308:	cmp	r0, r1
   1130c:	beq	11334 <avl_apaga@@Base+0x60>
   11310:	ldr	r0, [sp, #4]
   11314:	ldr	r0, [r0]
   11318:	ldr	r1, [sp, #4]
   1131c:	ldr	r1, [r1]
   11320:	ldr	r1, [r1]
   11324:	bl	11344 <avl_remove_impl@@Base>
   11328:	ldr	r1, [sp, #4]
   1132c:	str	r0, [r1]
   11330:	b	112fc <avl_apaga@@Base+0x28>
   11334:	ldr	r0, [sp, #4]
   11338:	bl	10e6c <free@plt>
   1133c:	mov	sp, fp
   11340:	pop	{fp, pc}

00011344 <avl_remove_impl@@Base>:
   11344:	push	{fp, lr}
   11348:	mov	fp, sp
   1134c:	sub	sp, sp, #64	; 0x40
   11350:	str	r0, [fp, #-8]
   11354:	str	r1, [fp, #-12]
   11358:	ldr	r0, [fp, #-8]
   1135c:	movw	r1, #0
   11360:	cmp	r0, r1
   11364:	bne	11374 <avl_remove_impl@@Base+0x30>
   11368:	ldr	r0, [fp, #-8]
   1136c:	str	r0, [fp, #-4]
   11370:	b	116bc <avl_remove_impl@@Base+0x378>
   11374:	ldr	r0, [fp, #-12]
   11378:	ldr	r1, [fp, #-8]
   1137c:	ldr	r1, [r1]
   11380:	bl	10e48 <strcmp@plt>
   11384:	cmp	r0, #0
   11388:	bge	113a8 <avl_remove_impl@@Base+0x64>
   1138c:	ldr	r0, [fp, #-8]
   11390:	ldr	r0, [r0, #4]
   11394:	ldr	r1, [fp, #-12]
   11398:	bl	11344 <avl_remove_impl@@Base>
   1139c:	ldr	r1, [fp, #-8]
   113a0:	str	r0, [r1, #4]
   113a4:	b	115a0 <avl_remove_impl@@Base+0x25c>
   113a8:	ldr	r0, [fp, #-12]
   113ac:	ldr	r1, [fp, #-8]
   113b0:	ldr	r1, [r1]
   113b4:	bl	10e48 <strcmp@plt>
   113b8:	cmp	r0, #0
   113bc:	ble	113dc <avl_remove_impl@@Base+0x98>
   113c0:	ldr	r0, [fp, #-8]
   113c4:	ldr	r0, [r0, #8]
   113c8:	ldr	r1, [fp, #-12]
   113cc:	bl	11344 <avl_remove_impl@@Base>
   113d0:	ldr	r1, [fp, #-8]
   113d4:	str	r0, [r1, #8]
   113d8:	b	1159c <avl_remove_impl@@Base+0x258>
   113dc:	ldr	r0, [fp, #-8]
   113e0:	ldr	r0, [r0, #4]
   113e4:	movw	r1, #0
   113e8:	cmp	r0, r1
   113ec:	beq	11404 <avl_remove_impl@@Base+0xc0>
   113f0:	ldr	r0, [fp, #-8]
   113f4:	ldr	r0, [r0, #8]
   113f8:	movw	r1, #0
   113fc:	cmp	r0, r1
   11400:	bne	11504 <avl_remove_impl@@Base+0x1c0>
   11404:	ldr	r0, [fp, #-8]
   11408:	ldr	r0, [r0, #4]
   1140c:	movw	r1, #0
   11410:	cmp	r0, r1
   11414:	beq	11428 <avl_remove_impl@@Base+0xe4>
   11418:	ldr	r0, [fp, #-8]
   1141c:	ldr	r0, [r0, #4]
   11420:	str	r0, [fp, #-28]	; 0xffffffe4
   11424:	b	11434 <avl_remove_impl@@Base+0xf0>
   11428:	ldr	r0, [fp, #-8]
   1142c:	ldr	r0, [r0, #8]
   11430:	str	r0, [fp, #-28]	; 0xffffffe4
   11434:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11438:	str	r0, [fp, #-16]
   1143c:	ldr	r0, [fp, #-16]
   11440:	movw	r1, #0
   11444:	cmp	r0, r1
   11448:	bne	11460 <avl_remove_impl@@Base+0x11c>
   1144c:	ldr	r0, [fp, #-8]
   11450:	str	r0, [fp, #-16]
   11454:	movw	r0, #0
   11458:	str	r0, [fp, #-8]
   1145c:	b	114ec <avl_remove_impl@@Base+0x1a8>
   11460:	ldr	r0, [fp, #-8]
   11464:	ldr	r0, [r0]
   11468:	ldr	r1, [fp, #-16]
   1146c:	ldr	r1, [r1]
   11470:	str	r0, [sp, #32]
   11474:	mov	r0, r1
   11478:	bl	10ecc <strlen@plt>
   1147c:	add	r0, r0, #1
   11480:	mov	r1, r0
   11484:	ldr	r2, [sp, #32]
   11488:	str	r0, [sp, #28]
   1148c:	mov	r0, r2
   11490:	ldr	r3, [sp, #28]
   11494:	str	r1, [sp, #24]
   11498:	mov	r1, r3
   1149c:	bl	10e90 <realloc@plt>
   114a0:	ldr	r1, [fp, #-8]
   114a4:	str	r0, [r1]
   114a8:	ldr	r0, [fp, #-8]
   114ac:	ldr	r0, [r0]
   114b0:	ldr	r1, [fp, #-16]
   114b4:	ldr	r1, [r1]
   114b8:	bl	10e9c <strcpy@plt>
   114bc:	ldr	r1, [fp, #-16]
   114c0:	ldr	r1, [r1, #4]
   114c4:	ldr	r2, [fp, #-8]
   114c8:	str	r1, [r2, #4]
   114cc:	ldr	r1, [fp, #-16]
   114d0:	ldr	r1, [r1, #8]
   114d4:	ldr	r2, [fp, #-8]
   114d8:	str	r1, [r2, #8]
   114dc:	ldr	r1, [fp, #-16]
   114e0:	ldr	r1, [r1, #12]
   114e4:	ldr	r2, [fp, #-8]
   114e8:	str	r1, [r2, #12]
   114ec:	ldr	r0, [fp, #-16]
   114f0:	ldr	r0, [r0]
   114f4:	bl	10e6c <free@plt>
   114f8:	ldr	r0, [fp, #-16]
   114fc:	bl	10e6c <free@plt>
   11500:	b	11598 <avl_remove_impl@@Base+0x254>
   11504:	ldr	r0, [fp, #-8]
   11508:	ldr	r0, [r0, #8]
   1150c:	bl	11ad4 <avl_no_valormin@@Base>
   11510:	str	r0, [fp, #-20]	; 0xffffffec
   11514:	ldr	r0, [fp, #-8]
   11518:	ldr	r0, [r0]
   1151c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11520:	ldr	r1, [r1]
   11524:	str	r0, [sp, #20]
   11528:	mov	r0, r1
   1152c:	bl	10ecc <strlen@plt>
   11530:	add	r0, r0, #1
   11534:	mov	r1, r0
   11538:	ldr	r2, [sp, #20]
   1153c:	str	r0, [sp, #16]
   11540:	mov	r0, r2
   11544:	ldr	r3, [sp, #16]
   11548:	str	r1, [sp, #12]
   1154c:	mov	r1, r3
   11550:	bl	10e90 <realloc@plt>
   11554:	ldr	r1, [fp, #-8]
   11558:	str	r0, [r1]
   1155c:	ldr	r0, [fp, #-8]
   11560:	ldr	r0, [r0]
   11564:	ldr	r1, [fp, #-20]	; 0xffffffec
   11568:	ldr	r1, [r1]
   1156c:	bl	10e9c <strcpy@plt>
   11570:	ldr	r1, [fp, #-8]
   11574:	ldr	r1, [r1, #8]
   11578:	ldr	r2, [fp, #-20]	; 0xffffffec
   1157c:	ldr	r2, [r2]
   11580:	str	r0, [sp, #8]
   11584:	mov	r0, r1
   11588:	mov	r1, r2
   1158c:	bl	11344 <avl_remove_impl@@Base>
   11590:	ldr	r1, [fp, #-8]
   11594:	str	r0, [r1, #8]
   11598:	b	1159c <avl_remove_impl@@Base+0x258>
   1159c:	b	115a0 <avl_remove_impl@@Base+0x25c>
   115a0:	ldr	r0, [fp, #-8]
   115a4:	movw	r1, #0
   115a8:	cmp	r0, r1
   115ac:	bne	115bc <avl_remove_impl@@Base+0x278>
   115b0:	ldr	r0, [fp, #-8]
   115b4:	str	r0, [fp, #-4]
   115b8:	b	116bc <avl_remove_impl@@Base+0x378>
   115bc:	ldr	r0, [fp, #-8]
   115c0:	ldr	r0, [r0, #4]
   115c4:	bl	11c4c <avl_altura@@Base>
   115c8:	ldr	r1, [fp, #-8]
   115cc:	ldr	r1, [r1, #8]
   115d0:	str	r0, [sp, #4]
   115d4:	mov	r0, r1
   115d8:	bl	11c4c <avl_altura@@Base>
   115dc:	ldr	r1, [sp, #4]
   115e0:	str	r0, [sp]
   115e4:	mov	r0, r1
   115e8:	ldr	r1, [sp]
   115ec:	bl	11c88 <max@@Base>
   115f0:	add	r0, r0, #1
   115f4:	ldr	r1, [fp, #-8]
   115f8:	str	r0, [r1, #12]
   115fc:	ldr	r0, [fp, #-8]
   11600:	bl	11ee4 <calc_balanceamento@@Base>
   11604:	str	r0, [fp, #-24]	; 0xffffffe8
   11608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1160c:	cmp	r0, #1
   11610:	ble	1165c <avl_remove_impl@@Base+0x318>
   11614:	ldr	r0, [fp, #-8]
   11618:	ldr	r0, [r0, #8]
   1161c:	bl	11ee4 <calc_balanceamento@@Base>
   11620:	cmp	r0, #0
   11624:	bge	1164c <avl_remove_impl@@Base+0x308>
   11628:	ldr	r0, [fp, #-8]
   1162c:	ldr	r0, [r0, #8]
   11630:	bl	11d4c <roda_direita@@Base>
   11634:	ldr	r1, [fp, #-8]
   11638:	str	r0, [r1, #8]
   1163c:	ldr	r0, [fp, #-8]
   11640:	bl	11e18 <roda_esquerda@@Base>
   11644:	str	r0, [fp, #-4]
   11648:	b	116bc <avl_remove_impl@@Base+0x378>
   1164c:	ldr	r0, [fp, #-8]
   11650:	bl	11e18 <roda_esquerda@@Base>
   11654:	str	r0, [fp, #-4]
   11658:	b	116bc <avl_remove_impl@@Base+0x378>
   1165c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11660:	cmn	r0, #1
   11664:	bge	116b0 <avl_remove_impl@@Base+0x36c>
   11668:	ldr	r0, [fp, #-8]
   1166c:	ldr	r0, [r0, #4]
   11670:	bl	11ee4 <calc_balanceamento@@Base>
   11674:	cmp	r0, #0
   11678:	ble	116a0 <avl_remove_impl@@Base+0x35c>
   1167c:	ldr	r0, [fp, #-8]
   11680:	ldr	r0, [r0, #4]
   11684:	bl	11e18 <roda_esquerda@@Base>
   11688:	ldr	r1, [fp, #-8]
   1168c:	str	r0, [r1, #4]
   11690:	ldr	r0, [fp, #-8]
   11694:	bl	11d4c <roda_direita@@Base>
   11698:	str	r0, [fp, #-4]
   1169c:	b	116bc <avl_remove_impl@@Base+0x378>
   116a0:	ldr	r0, [fp, #-8]
   116a4:	bl	11d4c <roda_direita@@Base>
   116a8:	str	r0, [fp, #-4]
   116ac:	b	116bc <avl_remove_impl@@Base+0x378>
   116b0:	b	116b4 <avl_remove_impl@@Base+0x370>
   116b4:	ldr	r0, [fp, #-8]
   116b8:	str	r0, [fp, #-4]
   116bc:	ldr	r0, [fp, #-4]
   116c0:	mov	sp, fp
   116c4:	pop	{fp, pc}

000116c8 <avl_pesquisa@@Base>:
   116c8:	push	{fp, lr}
   116cc:	mov	fp, sp
   116d0:	sub	sp, sp, #16
   116d4:	str	r0, [sp, #8]
   116d8:	str	r1, [sp, #4]
   116dc:	ldr	r0, [sp, #8]
   116e0:	movw	r1, #0
   116e4:	cmp	r0, r1
   116e8:	beq	116fc <avl_pesquisa@@Base+0x34>
   116ec:	ldr	r0, [sp, #4]
   116f0:	movw	r1, #0
   116f4:	cmp	r0, r1
   116f8:	bne	11708 <avl_pesquisa@@Base+0x40>
   116fc:	movw	r0, #0
   11700:	str	r0, [fp, #-4]
   11704:	b	1171c <avl_pesquisa@@Base+0x54>
   11708:	ldr	r0, [sp, #8]
   1170c:	ldr	r0, [r0]
   11710:	ldr	r1, [sp, #4]
   11714:	bl	11728 <avl_pesquisa_impl@@Base>
   11718:	str	r0, [fp, #-4]
   1171c:	ldr	r0, [fp, #-4]
   11720:	mov	sp, fp
   11724:	pop	{fp, pc}

00011728 <avl_pesquisa_impl@@Base>:
   11728:	push	{fp, lr}
   1172c:	mov	fp, sp
   11730:	sub	sp, sp, #16
   11734:	str	r0, [sp, #8]
   11738:	str	r1, [sp, #4]
   1173c:	ldr	r0, [sp, #8]
   11740:	movw	r1, #0
   11744:	cmp	r0, r1
   11748:	bne	11758 <avl_pesquisa_impl@@Base+0x30>
   1174c:	movw	r0, #0
   11750:	str	r0, [fp, #-4]
   11754:	b	117c0 <avl_pesquisa_impl@@Base+0x98>
   11758:	ldr	r0, [sp, #4]
   1175c:	ldr	r1, [sp, #8]
   11760:	ldr	r1, [r1]
   11764:	bl	10e48 <strcmp@plt>
   11768:	cmp	r0, #0
   1176c:	bge	11788 <avl_pesquisa_impl@@Base+0x60>
   11770:	ldr	r0, [sp, #8]
   11774:	ldr	r0, [r0, #4]
   11778:	ldr	r1, [sp, #4]
   1177c:	bl	11728 <avl_pesquisa_impl@@Base>
   11780:	str	r0, [fp, #-4]
   11784:	b	117c0 <avl_pesquisa_impl@@Base+0x98>
   11788:	ldr	r0, [sp, #4]
   1178c:	ldr	r1, [sp, #8]
   11790:	ldr	r1, [r1]
   11794:	bl	10e48 <strcmp@plt>
   11798:	cmp	r0, #0
   1179c:	ble	117b8 <avl_pesquisa_impl@@Base+0x90>
   117a0:	ldr	r0, [sp, #8]
   117a4:	ldr	r0, [r0, #8]
   117a8:	ldr	r1, [sp, #4]
   117ac:	bl	11728 <avl_pesquisa_impl@@Base>
   117b0:	str	r0, [fp, #-4]
   117b4:	b	117c0 <avl_pesquisa_impl@@Base+0x98>
   117b8:	ldr	r0, [sp, #8]
   117bc:	str	r0, [fp, #-4]
   117c0:	ldr	r0, [fp, #-4]
   117c4:	mov	sp, fp
   117c8:	pop	{fp, pc}

000117cc <avl_insere@@Base>:
   117cc:	push	{fp, lr}
   117d0:	mov	fp, sp
   117d4:	sub	sp, sp, #16
   117d8:	str	r0, [sp, #8]
   117dc:	str	r1, [sp, #4]
   117e0:	ldr	r0, [sp, #8]
   117e4:	movw	r1, #0
   117e8:	cmp	r0, r1
   117ec:	beq	11800 <avl_insere@@Base+0x34>
   117f0:	ldr	r0, [sp, #4]
   117f4:	movw	r1, #0
   117f8:	cmp	r0, r1
   117fc:	bne	1180c <avl_insere@@Base+0x40>
   11800:	mvn	r0, #0
   11804:	str	r0, [fp, #-4]
   11808:	b	1182c <avl_insere@@Base+0x60>
   1180c:	ldr	r0, [sp, #8]
   11810:	ldr	r0, [r0]
   11814:	ldr	r1, [sp, #4]
   11818:	bl	11838 <avl_insere_impl@@Base>
   1181c:	ldr	r1, [sp, #8]
   11820:	str	r0, [r1]
   11824:	movw	r0, #0
   11828:	str	r0, [fp, #-4]
   1182c:	ldr	r0, [fp, #-4]
   11830:	mov	sp, fp
   11834:	pop	{fp, pc}

00011838 <avl_insere_impl@@Base>:
   11838:	push	{fp, lr}
   1183c:	mov	fp, sp
   11840:	sub	sp, sp, #24
   11844:	str	r0, [fp, #-8]
   11848:	str	r1, [sp, #12]
   1184c:	ldr	r0, [fp, #-8]
   11850:	movw	r1, #0
   11854:	cmp	r0, r1
   11858:	bne	1186c <avl_insere_impl@@Base+0x34>
   1185c:	ldr	r0, [sp, #12]
   11860:	bl	11cc4 <avl_novo_no@@Base>
   11864:	str	r0, [fp, #-4]
   11868:	b	11a10 <avl_insere_impl@@Base+0x1d8>
   1186c:	ldr	r0, [sp, #12]
   11870:	ldr	r1, [fp, #-8]
   11874:	ldr	r1, [r1]
   11878:	bl	10e48 <strcmp@plt>
   1187c:	cmp	r0, #0
   11880:	bge	118a0 <avl_insere_impl@@Base+0x68>
   11884:	ldr	r0, [fp, #-8]
   11888:	ldr	r0, [r0, #4]
   1188c:	ldr	r1, [sp, #12]
   11890:	bl	11838 <avl_insere_impl@@Base>
   11894:	ldr	r1, [fp, #-8]
   11898:	str	r0, [r1, #4]
   1189c:	b	11910 <avl_insere_impl@@Base+0xd8>
   118a0:	ldr	r0, [sp, #12]
   118a4:	ldr	r1, [fp, #-8]
   118a8:	ldr	r1, [r1]
   118ac:	bl	10e48 <strcmp@plt>
   118b0:	cmp	r0, #0
   118b4:	ble	118d4 <avl_insere_impl@@Base+0x9c>
   118b8:	ldr	r0, [fp, #-8]
   118bc:	ldr	r0, [r0, #8]
   118c0:	ldr	r1, [sp, #12]
   118c4:	bl	11838 <avl_insere_impl@@Base>
   118c8:	ldr	r1, [fp, #-8]
   118cc:	str	r0, [r1, #8]
   118d0:	b	1190c <avl_insere_impl@@Base+0xd4>
   118d4:	ldr	r0, [sp, #12]
   118d8:	ldr	r1, [fp, #-8]
   118dc:	ldr	r1, [r1]
   118e0:	bl	10e48 <strcmp@plt>
   118e4:	cmp	r0, #0
   118e8:	bne	11908 <avl_insere_impl@@Base+0xd0>
   118ec:	ldr	r0, [fp, #-8]
   118f0:	ldr	r1, [r0, #16]
   118f4:	add	r1, r1, #1
   118f8:	str	r1, [r0, #16]
   118fc:	ldr	r0, [fp, #-8]
   11900:	str	r0, [fp, #-4]
   11904:	b	11a10 <avl_insere_impl@@Base+0x1d8>
   11908:	b	1190c <avl_insere_impl@@Base+0xd4>
   1190c:	b	11910 <avl_insere_impl@@Base+0xd8>
   11910:	ldr	r0, [fp, #-8]
   11914:	ldr	r0, [r0, #4]
   11918:	bl	11c4c <avl_altura@@Base>
   1191c:	ldr	r1, [fp, #-8]
   11920:	ldr	r1, [r1, #8]
   11924:	str	r0, [sp, #4]
   11928:	mov	r0, r1
   1192c:	bl	11c4c <avl_altura@@Base>
   11930:	ldr	r1, [sp, #4]
   11934:	str	r0, [sp]
   11938:	mov	r0, r1
   1193c:	ldr	r1, [sp]
   11940:	bl	11c88 <max@@Base>
   11944:	add	r0, r0, #1
   11948:	ldr	r1, [fp, #-8]
   1194c:	str	r0, [r1, #12]
   11950:	ldr	r0, [fp, #-8]
   11954:	bl	11ee4 <calc_balanceamento@@Base>
   11958:	str	r0, [sp, #8]
   1195c:	ldr	r0, [sp, #8]
   11960:	cmp	r0, #1
   11964:	ble	119b0 <avl_insere_impl@@Base+0x178>
   11968:	ldr	r0, [fp, #-8]
   1196c:	ldr	r0, [r0, #8]
   11970:	bl	11ee4 <calc_balanceamento@@Base>
   11974:	cmp	r0, #0
   11978:	bge	119a0 <avl_insere_impl@@Base+0x168>
   1197c:	ldr	r0, [fp, #-8]
   11980:	ldr	r0, [r0, #8]
   11984:	bl	11d4c <roda_direita@@Base>
   11988:	ldr	r1, [fp, #-8]
   1198c:	str	r0, [r1, #8]
   11990:	ldr	r0, [fp, #-8]
   11994:	bl	11e18 <roda_esquerda@@Base>
   11998:	str	r0, [fp, #-4]
   1199c:	b	11a10 <avl_insere_impl@@Base+0x1d8>
   119a0:	ldr	r0, [fp, #-8]
   119a4:	bl	11e18 <roda_esquerda@@Base>
   119a8:	str	r0, [fp, #-4]
   119ac:	b	11a10 <avl_insere_impl@@Base+0x1d8>
   119b0:	ldr	r0, [sp, #8]
   119b4:	cmn	r0, #1
   119b8:	bge	11a04 <avl_insere_impl@@Base+0x1cc>
   119bc:	ldr	r0, [fp, #-8]
   119c0:	ldr	r0, [r0, #4]
   119c4:	bl	11ee4 <calc_balanceamento@@Base>
   119c8:	cmp	r0, #0
   119cc:	ble	119f4 <avl_insere_impl@@Base+0x1bc>
   119d0:	ldr	r0, [fp, #-8]
   119d4:	ldr	r0, [r0, #4]
   119d8:	bl	11e18 <roda_esquerda@@Base>
   119dc:	ldr	r1, [fp, #-8]
   119e0:	str	r0, [r1, #4]
   119e4:	ldr	r0, [fp, #-8]
   119e8:	bl	11d4c <roda_direita@@Base>
   119ec:	str	r0, [fp, #-4]
   119f0:	b	11a10 <avl_insere_impl@@Base+0x1d8>
   119f4:	ldr	r0, [fp, #-8]
   119f8:	bl	11d4c <roda_direita@@Base>
   119fc:	str	r0, [fp, #-4]
   11a00:	b	11a10 <avl_insere_impl@@Base+0x1d8>
   11a04:	b	11a08 <avl_insere_impl@@Base+0x1d0>
   11a08:	ldr	r0, [fp, #-8]
   11a0c:	str	r0, [fp, #-4]
   11a10:	ldr	r0, [fp, #-4]
   11a14:	mov	sp, fp
   11a18:	pop	{fp, pc}

00011a1c <avl_remove@@Base>:
   11a1c:	push	{fp, lr}
   11a20:	mov	fp, sp
   11a24:	sub	sp, sp, #16
   11a28:	str	r0, [sp, #8]
   11a2c:	str	r1, [sp, #4]
   11a30:	ldr	r0, [sp, #8]
   11a34:	movw	r1, #0
   11a38:	cmp	r0, r1
   11a3c:	beq	11a50 <avl_remove@@Base+0x34>
   11a40:	ldr	r0, [sp, #4]
   11a44:	movw	r1, #0
   11a48:	cmp	r0, r1
   11a4c:	bne	11a5c <avl_remove@@Base+0x40>
   11a50:	mvn	r0, #0
   11a54:	str	r0, [fp, #-4]
   11a58:	b	11a7c <avl_remove@@Base+0x60>
   11a5c:	ldr	r0, [sp, #8]
   11a60:	ldr	r0, [r0]
   11a64:	ldr	r1, [sp, #4]
   11a68:	bl	11344 <avl_remove_impl@@Base>
   11a6c:	ldr	r1, [sp, #8]
   11a70:	str	r0, [r1]
   11a74:	movw	r0, #0
   11a78:	str	r0, [fp, #-4]
   11a7c:	ldr	r0, [fp, #-4]
   11a80:	mov	sp, fp
   11a84:	pop	{fp, pc}

00011a88 <avl_min@@Base>:
   11a88:	push	{fp, lr}
   11a8c:	mov	fp, sp
   11a90:	sub	sp, sp, #8
   11a94:	str	r0, [sp]
   11a98:	ldr	r0, [sp]
   11a9c:	movw	r1, #0
   11aa0:	cmp	r0, r1
   11aa4:	bne	11ab4 <avl_min@@Base+0x2c>
   11aa8:	movw	r0, #0
   11aac:	str	r0, [sp, #4]
   11ab0:	b	11ac8 <avl_min@@Base+0x40>
   11ab4:	ldr	r0, [sp]
   11ab8:	ldr	r0, [r0]
   11abc:	bl	11ad4 <avl_no_valormin@@Base>
   11ac0:	ldr	r0, [r0]
   11ac4:	str	r0, [sp, #4]
   11ac8:	ldr	r0, [sp, #4]
   11acc:	mov	sp, fp
   11ad0:	pop	{fp, pc}

00011ad4 <avl_no_valormin@@Base>:
   11ad4:	sub	sp, sp, #8
   11ad8:	str	r0, [sp, #4]
   11adc:	ldr	r0, [sp, #4]
   11ae0:	str	r0, [sp]
   11ae4:	ldr	r0, [sp]
   11ae8:	ldr	r0, [r0, #4]
   11aec:	movw	r1, #0
   11af0:	cmp	r0, r1
   11af4:	beq	11b08 <avl_no_valormin@@Base+0x34>
   11af8:	ldr	r0, [sp]
   11afc:	ldr	r0, [r0, #4]
   11b00:	str	r0, [sp]
   11b04:	b	11ae4 <avl_no_valormin@@Base+0x10>
   11b08:	ldr	r0, [sp]
   11b0c:	add	sp, sp, #8
   11b10:	bx	lr

00011b14 <avl_max@@Base>:
   11b14:	push	{fp, lr}
   11b18:	mov	fp, sp
   11b1c:	sub	sp, sp, #8
   11b20:	str	r0, [sp]
   11b24:	ldr	r0, [sp]
   11b28:	movw	r1, #0
   11b2c:	cmp	r0, r1
   11b30:	bne	11b40 <avl_max@@Base+0x2c>
   11b34:	movw	r0, #0
   11b38:	str	r0, [sp, #4]
   11b3c:	b	11b54 <avl_max@@Base+0x40>
   11b40:	ldr	r0, [sp]
   11b44:	ldr	r0, [r0]
   11b48:	bl	11b60 <avl_no_valormax@@Base>
   11b4c:	ldr	r0, [r0]
   11b50:	str	r0, [sp, #4]
   11b54:	ldr	r0, [sp, #4]
   11b58:	mov	sp, fp
   11b5c:	pop	{fp, pc}

00011b60 <avl_no_valormax@@Base>:
   11b60:	sub	sp, sp, #8
   11b64:	str	r0, [sp, #4]
   11b68:	ldr	r0, [sp, #4]
   11b6c:	str	r0, [sp]
   11b70:	ldr	r0, [sp]
   11b74:	ldr	r0, [r0, #8]
   11b78:	movw	r1, #0
   11b7c:	cmp	r0, r1
   11b80:	beq	11b94 <avl_no_valormax@@Base+0x34>
   11b84:	ldr	r0, [sp]
   11b88:	ldr	r0, [r0, #8]
   11b8c:	str	r0, [sp]
   11b90:	b	11b70 <avl_no_valormax@@Base+0x10>
   11b94:	ldr	r0, [sp]
   11b98:	add	sp, sp, #8
   11b9c:	bx	lr

00011ba0 <avl_imprime@@Base>:
   11ba0:	push	{fp, lr}
   11ba4:	mov	fp, sp
   11ba8:	sub	sp, sp, #8
   11bac:	str	r0, [sp, #4]
   11bb0:	ldr	r0, [sp, #4]
   11bb4:	movw	r1, #0
   11bb8:	cmp	r0, r1
   11bbc:	bne	11bc4 <avl_imprime@@Base+0x24>
   11bc0:	b	11bdc <avl_imprime@@Base+0x3c>
   11bc4:	ldr	r0, [sp, #4]
   11bc8:	ldr	r0, [r0]
   11bcc:	bl	11be4 <avl_preordem_impl@@Base>
   11bd0:	movw	r0, #10388	; 0x2894
   11bd4:	movt	r0, #1
   11bd8:	bl	10e54 <printf@plt>
   11bdc:	mov	sp, fp
   11be0:	pop	{fp, pc}

00011be4 <avl_preordem_impl@@Base>:
   11be4:	push	{fp, lr}
   11be8:	mov	fp, sp
   11bec:	sub	sp, sp, #8
   11bf0:	str	r0, [sp, #4]
   11bf4:	ldr	r0, [sp, #4]
   11bf8:	movw	r1, #0
   11bfc:	cmp	r0, r1
   11c00:	bne	11c08 <avl_preordem_impl@@Base+0x24>
   11c04:	b	11c44 <avl_preordem_impl@@Base+0x60>
   11c08:	ldr	r0, [sp, #4]
   11c0c:	ldr	r1, [r0]
   11c10:	ldr	r0, [sp, #4]
   11c14:	ldr	r2, [r0, #16]
   11c18:	movw	r0, #10480	; 0x28f0
   11c1c:	movt	r0, #1
   11c20:	bl	10e54 <printf@plt>
   11c24:	ldr	r1, [sp, #4]
   11c28:	ldr	r1, [r1, #4]
   11c2c:	str	r0, [sp]
   11c30:	mov	r0, r1
   11c34:	bl	11be4 <avl_preordem_impl@@Base>
   11c38:	ldr	r0, [sp, #4]
   11c3c:	ldr	r0, [r0, #8]
   11c40:	bl	11be4 <avl_preordem_impl@@Base>
   11c44:	mov	sp, fp
   11c48:	pop	{fp, pc}

00011c4c <avl_altura@@Base>:
   11c4c:	sub	sp, sp, #8
   11c50:	str	r0, [sp]
   11c54:	ldr	r0, [sp]
   11c58:	movw	r1, #0
   11c5c:	cmp	r0, r1
   11c60:	bne	11c70 <avl_altura@@Base+0x24>
   11c64:	mvn	r0, #0
   11c68:	str	r0, [sp, #4]
   11c6c:	b	11c7c <avl_altura@@Base+0x30>
   11c70:	ldr	r0, [sp]
   11c74:	ldr	r0, [r0, #12]
   11c78:	str	r0, [sp, #4]
   11c7c:	ldr	r0, [sp, #4]
   11c80:	add	sp, sp, #8
   11c84:	bx	lr

00011c88 <max@@Base>:
   11c88:	sub	sp, sp, #12
   11c8c:	str	r0, [sp, #8]
   11c90:	str	r1, [sp, #4]
   11c94:	ldr	r0, [sp, #8]
   11c98:	ldr	r1, [sp, #4]
   11c9c:	cmp	r0, r1
   11ca0:	ble	11cb0 <max@@Base+0x28>
   11ca4:	ldr	r0, [sp, #8]
   11ca8:	str	r0, [sp]
   11cac:	b	11cb8 <max@@Base+0x30>
   11cb0:	ldr	r0, [sp, #4]
   11cb4:	str	r0, [sp]
   11cb8:	ldr	r0, [sp]
   11cbc:	add	sp, sp, #12
   11cc0:	bx	lr

00011cc4 <avl_novo_no@@Base>:
   11cc4:	push	{fp, lr}
   11cc8:	mov	fp, sp
   11ccc:	sub	sp, sp, #16
   11cd0:	str	r0, [fp, #-4]
   11cd4:	mov	r0, #20
   11cd8:	bl	10ea8 <malloc@plt>
   11cdc:	str	r0, [sp, #8]
   11ce0:	ldr	r0, [fp, #-4]
   11ce4:	bl	10ecc <strlen@plt>
   11ce8:	add	r0, r0, #1
   11cec:	mov	r1, r0
   11cf0:	str	r1, [sp, #4]
   11cf4:	bl	10ea8 <malloc@plt>
   11cf8:	ldr	r1, [sp, #8]
   11cfc:	str	r0, [r1]
   11d00:	ldr	r0, [sp, #8]
   11d04:	ldr	r0, [r0]
   11d08:	ldr	r1, [fp, #-4]
   11d0c:	bl	10e9c <strcpy@plt>
   11d10:	ldr	r1, [sp, #8]
   11d14:	movw	r2, #0
   11d18:	str	r2, [r1, #4]
   11d1c:	ldr	r1, [sp, #8]
   11d20:	str	r2, [r1, #8]
   11d24:	ldr	r1, [sp, #8]
   11d28:	str	r2, [r1, #12]
   11d2c:	ldr	r1, [sp, #8]
   11d30:	movw	r2, #1
   11d34:	str	r2, [r1, #16]
   11d38:	ldr	r1, [sp, #8]
   11d3c:	str	r0, [sp]
   11d40:	mov	r0, r1
   11d44:	mov	sp, fp
   11d48:	pop	{fp, pc}

00011d4c <roda_direita@@Base>:
   11d4c:	push	{fp, lr}
   11d50:	mov	fp, sp
   11d54:	sub	sp, sp, #32
   11d58:	str	r0, [fp, #-4]
   11d5c:	ldr	r0, [fp, #-4]
   11d60:	ldr	r0, [r0, #4]
   11d64:	str	r0, [fp, #-8]
   11d68:	ldr	r0, [fp, #-8]
   11d6c:	ldr	r0, [r0, #8]
   11d70:	str	r0, [fp, #-12]
   11d74:	ldr	r0, [fp, #-4]
   11d78:	ldr	r1, [fp, #-8]
   11d7c:	str	r0, [r1, #8]
   11d80:	ldr	r0, [fp, #-12]
   11d84:	ldr	r1, [fp, #-4]
   11d88:	str	r0, [r1, #4]
   11d8c:	ldr	r0, [fp, #-4]
   11d90:	ldr	r0, [r0, #4]
   11d94:	bl	11c4c <avl_altura@@Base>
   11d98:	ldr	r1, [fp, #-4]
   11d9c:	ldr	r1, [r1, #8]
   11da0:	str	r0, [sp, #16]
   11da4:	mov	r0, r1
   11da8:	bl	11c4c <avl_altura@@Base>
   11dac:	ldr	r1, [sp, #16]
   11db0:	str	r0, [sp, #12]
   11db4:	mov	r0, r1
   11db8:	ldr	r1, [sp, #12]
   11dbc:	bl	11c88 <max@@Base>
   11dc0:	add	r0, r0, #1
   11dc4:	ldr	r1, [fp, #-4]
   11dc8:	str	r0, [r1, #12]
   11dcc:	ldr	r0, [fp, #-8]
   11dd0:	ldr	r0, [r0, #4]
   11dd4:	bl	11c4c <avl_altura@@Base>
   11dd8:	ldr	r1, [fp, #-8]
   11ddc:	ldr	r1, [r1, #8]
   11de0:	str	r0, [sp, #8]
   11de4:	mov	r0, r1
   11de8:	bl	11c4c <avl_altura@@Base>
   11dec:	ldr	r1, [sp, #8]
   11df0:	str	r0, [sp, #4]
   11df4:	mov	r0, r1
   11df8:	ldr	r1, [sp, #4]
   11dfc:	bl	11c88 <max@@Base>
   11e00:	add	r0, r0, #1
   11e04:	ldr	r1, [fp, #-8]
   11e08:	str	r0, [r1, #12]
   11e0c:	ldr	r0, [fp, #-8]
   11e10:	mov	sp, fp
   11e14:	pop	{fp, pc}

00011e18 <roda_esquerda@@Base>:
   11e18:	push	{fp, lr}
   11e1c:	mov	fp, sp
   11e20:	sub	sp, sp, #32
   11e24:	str	r0, [fp, #-4]
   11e28:	ldr	r0, [fp, #-4]
   11e2c:	ldr	r0, [r0, #8]
   11e30:	str	r0, [fp, #-8]
   11e34:	ldr	r0, [fp, #-8]
   11e38:	ldr	r0, [r0, #4]
   11e3c:	str	r0, [fp, #-12]
   11e40:	ldr	r0, [fp, #-4]
   11e44:	ldr	r1, [fp, #-8]
   11e48:	str	r0, [r1, #4]
   11e4c:	ldr	r0, [fp, #-12]
   11e50:	ldr	r1, [fp, #-4]
   11e54:	str	r0, [r1, #8]
   11e58:	ldr	r0, [fp, #-4]
   11e5c:	ldr	r0, [r0, #4]
   11e60:	bl	11c4c <avl_altura@@Base>
   11e64:	ldr	r1, [fp, #-4]
   11e68:	ldr	r1, [r1, #8]
   11e6c:	str	r0, [sp, #16]
   11e70:	mov	r0, r1
   11e74:	bl	11c4c <avl_altura@@Base>
   11e78:	ldr	r1, [sp, #16]
   11e7c:	str	r0, [sp, #12]
   11e80:	mov	r0, r1
   11e84:	ldr	r1, [sp, #12]
   11e88:	bl	11c88 <max@@Base>
   11e8c:	add	r0, r0, #1
   11e90:	ldr	r1, [fp, #-4]
   11e94:	str	r0, [r1, #12]
   11e98:	ldr	r0, [fp, #-8]
   11e9c:	ldr	r0, [r0, #4]
   11ea0:	bl	11c4c <avl_altura@@Base>
   11ea4:	ldr	r1, [fp, #-8]
   11ea8:	ldr	r1, [r1, #8]
   11eac:	str	r0, [sp, #8]
   11eb0:	mov	r0, r1
   11eb4:	bl	11c4c <avl_altura@@Base>
   11eb8:	ldr	r1, [sp, #8]
   11ebc:	str	r0, [sp, #4]
   11ec0:	mov	r0, r1
   11ec4:	ldr	r1, [sp, #4]
   11ec8:	bl	11c88 <max@@Base>
   11ecc:	add	r0, r0, #1
   11ed0:	ldr	r1, [fp, #-8]
   11ed4:	str	r0, [r1, #12]
   11ed8:	ldr	r0, [fp, #-8]
   11edc:	mov	sp, fp
   11ee0:	pop	{fp, pc}

00011ee4 <calc_balanceamento@@Base>:
   11ee4:	push	{fp, lr}
   11ee8:	mov	fp, sp
   11eec:	sub	sp, sp, #16
   11ef0:	str	r0, [sp, #8]
   11ef4:	ldr	r0, [sp, #8]
   11ef8:	movw	r1, #0
   11efc:	cmp	r0, r1
   11f00:	bne	11f10 <calc_balanceamento@@Base+0x2c>
   11f04:	movw	r0, #0
   11f08:	str	r0, [fp, #-4]
   11f0c:	b	11f3c <calc_balanceamento@@Base+0x58>
   11f10:	ldr	r0, [sp, #8]
   11f14:	ldr	r0, [r0, #8]
   11f18:	bl	11c4c <avl_altura@@Base>
   11f1c:	ldr	r1, [sp, #8]
   11f20:	ldr	r1, [r1, #4]
   11f24:	str	r0, [sp, #4]
   11f28:	mov	r0, r1
   11f2c:	bl	11c4c <avl_altura@@Base>
   11f30:	ldr	r1, [sp, #4]
   11f34:	sub	r0, r1, r0
   11f38:	str	r0, [fp, #-4]
   11f3c:	ldr	r0, [fp, #-4]
   11f40:	mov	sp, fp
   11f44:	pop	{fp, pc}

00011f48 <bst_nova@@Base>:
   11f48:	push	{fp, lr}
   11f4c:	mov	fp, sp
   11f50:	sub	sp, sp, #8
   11f54:	movw	r0, #4
   11f58:	bl	10ea8 <malloc@plt>
   11f5c:	str	r0, [sp]
   11f60:	ldr	r0, [sp]
   11f64:	movw	r1, #0
   11f68:	cmp	r0, r1
   11f6c:	bne	11f7c <bst_nova@@Base+0x34>
   11f70:	movw	r0, #0
   11f74:	str	r0, [sp, #4]
   11f78:	b	11f90 <bst_nova@@Base+0x48>
   11f7c:	ldr	r0, [sp]
   11f80:	movw	r1, #0
   11f84:	str	r1, [r0]
   11f88:	ldr	r0, [sp]
   11f8c:	str	r0, [sp, #4]
   11f90:	ldr	r0, [sp, #4]
   11f94:	mov	sp, fp
   11f98:	pop	{fp, pc}

00011f9c <bst_apaga@@Base>:
   11f9c:	push	{fp, lr}
   11fa0:	mov	fp, sp
   11fa4:	sub	sp, sp, #8
   11fa8:	str	r0, [sp, #4]
   11fac:	ldr	r0, [sp, #4]
   11fb0:	ldr	r0, [r0]
   11fb4:	movw	r1, #0
   11fb8:	cmp	r0, r1
   11fbc:	beq	11fe4 <bst_apaga@@Base+0x48>
   11fc0:	ldr	r0, [sp, #4]
   11fc4:	ldr	r0, [r0]
   11fc8:	ldr	r1, [sp, #4]
   11fcc:	ldr	r1, [r1]
   11fd0:	ldr	r1, [r1]
   11fd4:	bl	11ff4 <bst_remove_impl@@Base>
   11fd8:	ldr	r1, [sp, #4]
   11fdc:	str	r0, [r1]
   11fe0:	b	11fac <bst_apaga@@Base+0x10>
   11fe4:	ldr	r0, [sp, #4]
   11fe8:	bl	10e6c <free@plt>
   11fec:	mov	sp, fp
   11ff0:	pop	{fp, pc}

00011ff4 <bst_remove_impl@@Base>:
   11ff4:	push	{fp, lr}
   11ff8:	mov	fp, sp
   11ffc:	sub	sp, sp, #56	; 0x38
   12000:	str	r0, [fp, #-8]
   12004:	str	r1, [fp, #-12]
   12008:	ldr	r0, [fp, #-8]
   1200c:	movw	r1, #0
   12010:	cmp	r0, r1
   12014:	bne	12024 <bst_remove_impl@@Base+0x30>
   12018:	ldr	r0, [fp, #-8]
   1201c:	str	r0, [fp, #-4]
   12020:	b	12248 <bst_remove_impl@@Base+0x254>
   12024:	ldr	r0, [fp, #-12]
   12028:	ldr	r1, [fp, #-8]
   1202c:	ldr	r1, [r1]
   12030:	bl	10e48 <strcmp@plt>
   12034:	cmp	r0, #0
   12038:	bge	12058 <bst_remove_impl@@Base+0x64>
   1203c:	ldr	r0, [fp, #-8]
   12040:	ldr	r0, [r0, #4]
   12044:	ldr	r1, [fp, #-12]
   12048:	bl	11ff4 <bst_remove_impl@@Base>
   1204c:	ldr	r1, [fp, #-8]
   12050:	str	r0, [r1, #4]
   12054:	b	12240 <bst_remove_impl@@Base+0x24c>
   12058:	ldr	r0, [fp, #-12]
   1205c:	ldr	r1, [fp, #-8]
   12060:	ldr	r1, [r1]
   12064:	bl	10e48 <strcmp@plt>
   12068:	cmp	r0, #0
   1206c:	ble	1208c <bst_remove_impl@@Base+0x98>
   12070:	ldr	r0, [fp, #-8]
   12074:	ldr	r0, [r0, #8]
   12078:	ldr	r1, [fp, #-12]
   1207c:	bl	11ff4 <bst_remove_impl@@Base>
   12080:	ldr	r1, [fp, #-8]
   12084:	str	r0, [r1, #8]
   12088:	b	1223c <bst_remove_impl@@Base+0x248>
   1208c:	ldr	r0, [fp, #-8]
   12090:	ldr	r0, [r0, #4]
   12094:	movw	r1, #0
   12098:	cmp	r0, r1
   1209c:	beq	120b4 <bst_remove_impl@@Base+0xc0>
   120a0:	ldr	r0, [fp, #-8]
   120a4:	ldr	r0, [r0, #8]
   120a8:	movw	r1, #0
   120ac:	cmp	r0, r1
   120b0:	bne	121a4 <bst_remove_impl@@Base+0x1b0>
   120b4:	ldr	r0, [fp, #-8]
   120b8:	ldr	r0, [r0, #4]
   120bc:	movw	r1, #0
   120c0:	cmp	r0, r1
   120c4:	beq	120d8 <bst_remove_impl@@Base+0xe4>
   120c8:	ldr	r0, [fp, #-8]
   120cc:	ldr	r0, [r0, #4]
   120d0:	str	r0, [fp, #-24]	; 0xffffffe8
   120d4:	b	120e4 <bst_remove_impl@@Base+0xf0>
   120d8:	ldr	r0, [fp, #-8]
   120dc:	ldr	r0, [r0, #8]
   120e0:	str	r0, [fp, #-24]	; 0xffffffe8
   120e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120e8:	str	r0, [fp, #-16]
   120ec:	ldr	r0, [fp, #-16]
   120f0:	movw	r1, #0
   120f4:	cmp	r0, r1
   120f8:	bne	12110 <bst_remove_impl@@Base+0x11c>
   120fc:	ldr	r0, [fp, #-8]
   12100:	str	r0, [fp, #-16]
   12104:	movw	r0, #0
   12108:	str	r0, [fp, #-8]
   1210c:	b	1218c <bst_remove_impl@@Base+0x198>
   12110:	ldr	r0, [fp, #-8]
   12114:	ldr	r0, [r0]
   12118:	ldr	r1, [fp, #-16]
   1211c:	ldr	r1, [r1]
   12120:	str	r0, [sp, #28]
   12124:	mov	r0, r1
   12128:	bl	10ecc <strlen@plt>
   1212c:	add	r0, r0, #1
   12130:	mov	r1, r0
   12134:	ldr	r2, [sp, #28]
   12138:	str	r0, [sp, #24]
   1213c:	mov	r0, r2
   12140:	ldr	r3, [sp, #24]
   12144:	str	r1, [sp, #20]
   12148:	mov	r1, r3
   1214c:	bl	10e90 <realloc@plt>
   12150:	ldr	r1, [fp, #-8]
   12154:	str	r0, [r1]
   12158:	ldr	r0, [fp, #-8]
   1215c:	ldr	r0, [r0]
   12160:	ldr	r1, [fp, #-16]
   12164:	ldr	r1, [r1]
   12168:	bl	10e9c <strcpy@plt>
   1216c:	ldr	r1, [fp, #-16]
   12170:	ldr	r1, [r1, #4]
   12174:	ldr	r2, [fp, #-8]
   12178:	str	r1, [r2, #4]
   1217c:	ldr	r1, [fp, #-16]
   12180:	ldr	r1, [r1, #8]
   12184:	ldr	r2, [fp, #-8]
   12188:	str	r1, [r2, #8]
   1218c:	ldr	r0, [fp, #-16]
   12190:	ldr	r0, [r0]
   12194:	bl	10e6c <free@plt>
   12198:	ldr	r0, [fp, #-16]
   1219c:	bl	10e6c <free@plt>
   121a0:	b	12238 <bst_remove_impl@@Base+0x244>
   121a4:	ldr	r0, [fp, #-8]
   121a8:	ldr	r0, [r0, #8]
   121ac:	bl	1252c <bst_no_valormin@@Base>
   121b0:	str	r0, [fp, #-20]	; 0xffffffec
   121b4:	ldr	r0, [fp, #-8]
   121b8:	ldr	r0, [r0]
   121bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   121c0:	ldr	r1, [r1]
   121c4:	str	r0, [sp, #16]
   121c8:	mov	r0, r1
   121cc:	bl	10ecc <strlen@plt>
   121d0:	add	r0, r0, #1
   121d4:	mov	r1, r0
   121d8:	ldr	r2, [sp, #16]
   121dc:	str	r0, [sp, #12]
   121e0:	mov	r0, r2
   121e4:	ldr	r3, [sp, #12]
   121e8:	str	r1, [sp, #8]
   121ec:	mov	r1, r3
   121f0:	bl	10e90 <realloc@plt>
   121f4:	ldr	r1, [fp, #-8]
   121f8:	str	r0, [r1]
   121fc:	ldr	r0, [fp, #-8]
   12200:	ldr	r0, [r0]
   12204:	ldr	r1, [fp, #-20]	; 0xffffffec
   12208:	ldr	r1, [r1]
   1220c:	bl	10e9c <strcpy@plt>
   12210:	ldr	r1, [fp, #-8]
   12214:	ldr	r1, [r1, #8]
   12218:	ldr	r2, [fp, #-20]	; 0xffffffec
   1221c:	ldr	r2, [r2]
   12220:	str	r0, [sp, #4]
   12224:	mov	r0, r1
   12228:	mov	r1, r2
   1222c:	bl	11ff4 <bst_remove_impl@@Base>
   12230:	ldr	r1, [fp, #-8]
   12234:	str	r0, [r1, #8]
   12238:	b	1223c <bst_remove_impl@@Base+0x248>
   1223c:	b	12240 <bst_remove_impl@@Base+0x24c>
   12240:	ldr	r0, [fp, #-8]
   12244:	str	r0, [fp, #-4]
   12248:	ldr	r0, [fp, #-4]
   1224c:	mov	sp, fp
   12250:	pop	{fp, pc}

00012254 <bst_pesquisa@@Base>:
   12254:	push	{fp, lr}
   12258:	mov	fp, sp
   1225c:	sub	sp, sp, #16
   12260:	str	r0, [sp, #8]
   12264:	str	r1, [sp, #4]
   12268:	ldr	r0, [sp, #8]
   1226c:	movw	r1, #0
   12270:	cmp	r0, r1
   12274:	beq	12288 <bst_pesquisa@@Base+0x34>
   12278:	ldr	r0, [sp, #4]
   1227c:	movw	r1, #0
   12280:	cmp	r0, r1
   12284:	bne	12294 <bst_pesquisa@@Base+0x40>
   12288:	movw	r0, #0
   1228c:	str	r0, [fp, #-4]
   12290:	b	122a8 <bst_pesquisa@@Base+0x54>
   12294:	ldr	r0, [sp, #8]
   12298:	ldr	r0, [r0]
   1229c:	ldr	r1, [sp, #4]
   122a0:	bl	122b4 <bst_pesquisa_impl@@Base>
   122a4:	str	r0, [fp, #-4]
   122a8:	ldr	r0, [fp, #-4]
   122ac:	mov	sp, fp
   122b0:	pop	{fp, pc}

000122b4 <bst_pesquisa_impl@@Base>:
   122b4:	push	{fp, lr}
   122b8:	mov	fp, sp
   122bc:	sub	sp, sp, #16
   122c0:	str	r0, [sp, #8]
   122c4:	str	r1, [sp, #4]
   122c8:	ldr	r0, [sp, #8]
   122cc:	movw	r1, #0
   122d0:	cmp	r0, r1
   122d4:	bne	122e4 <bst_pesquisa_impl@@Base+0x30>
   122d8:	movw	r0, #0
   122dc:	str	r0, [fp, #-4]
   122e0:	b	1234c <bst_pesquisa_impl@@Base+0x98>
   122e4:	ldr	r0, [sp, #4]
   122e8:	ldr	r1, [sp, #8]
   122ec:	ldr	r1, [r1]
   122f0:	bl	10e48 <strcmp@plt>
   122f4:	cmp	r0, #0
   122f8:	bge	12314 <bst_pesquisa_impl@@Base+0x60>
   122fc:	ldr	r0, [sp, #8]
   12300:	ldr	r0, [r0, #4]
   12304:	ldr	r1, [sp, #4]
   12308:	bl	122b4 <bst_pesquisa_impl@@Base>
   1230c:	str	r0, [fp, #-4]
   12310:	b	1234c <bst_pesquisa_impl@@Base+0x98>
   12314:	ldr	r0, [sp, #4]
   12318:	ldr	r1, [sp, #8]
   1231c:	ldr	r1, [r1]
   12320:	bl	10e48 <strcmp@plt>
   12324:	cmp	r0, #0
   12328:	ble	12344 <bst_pesquisa_impl@@Base+0x90>
   1232c:	ldr	r0, [sp, #8]
   12330:	ldr	r0, [r0, #8]
   12334:	ldr	r1, [sp, #4]
   12338:	bl	122b4 <bst_pesquisa_impl@@Base>
   1233c:	str	r0, [fp, #-4]
   12340:	b	1234c <bst_pesquisa_impl@@Base+0x98>
   12344:	ldr	r0, [sp, #8]
   12348:	str	r0, [fp, #-4]
   1234c:	ldr	r0, [fp, #-4]
   12350:	mov	sp, fp
   12354:	pop	{fp, pc}

00012358 <bst_insere@@Base>:
   12358:	push	{fp, lr}
   1235c:	mov	fp, sp
   12360:	sub	sp, sp, #16
   12364:	str	r0, [sp, #8]
   12368:	str	r1, [sp, #4]
   1236c:	ldr	r0, [sp, #8]
   12370:	movw	r1, #0
   12374:	cmp	r0, r1
   12378:	beq	1238c <bst_insere@@Base+0x34>
   1237c:	ldr	r0, [sp, #4]
   12380:	movw	r1, #0
   12384:	cmp	r0, r1
   12388:	bne	12398 <bst_insere@@Base+0x40>
   1238c:	mvn	r0, #0
   12390:	str	r0, [fp, #-4]
   12394:	b	123b8 <bst_insere@@Base+0x60>
   12398:	ldr	r0, [sp, #8]
   1239c:	ldr	r0, [r0]
   123a0:	ldr	r1, [sp, #4]
   123a4:	bl	123c4 <bst_insere_impl@@Base>
   123a8:	ldr	r1, [sp, #8]
   123ac:	str	r0, [r1]
   123b0:	movw	r0, #0
   123b4:	str	r0, [fp, #-4]
   123b8:	ldr	r0, [fp, #-4]
   123bc:	mov	sp, fp
   123c0:	pop	{fp, pc}

000123c4 <bst_insere_impl@@Base>:
   123c4:	push	{fp, lr}
   123c8:	mov	fp, sp
   123cc:	sub	sp, sp, #16
   123d0:	str	r0, [sp, #8]
   123d4:	str	r1, [sp, #4]
   123d8:	ldr	r0, [sp, #8]
   123dc:	movw	r1, #0
   123e0:	cmp	r0, r1
   123e4:	bne	123f8 <bst_insere_impl@@Base+0x34>
   123e8:	ldr	r0, [sp, #4]
   123ec:	bl	126b0 <bst_novo_no@@Base>
   123f0:	str	r0, [fp, #-4]
   123f4:	b	12468 <bst_insere_impl@@Base+0xa4>
   123f8:	ldr	r0, [sp, #4]
   123fc:	ldr	r1, [sp, #8]
   12400:	ldr	r1, [r1]
   12404:	bl	10e48 <strcmp@plt>
   12408:	cmp	r0, #0
   1240c:	bge	1242c <bst_insere_impl@@Base+0x68>
   12410:	ldr	r0, [sp, #8]
   12414:	ldr	r0, [r0, #4]
   12418:	ldr	r1, [sp, #4]
   1241c:	bl	123c4 <bst_insere_impl@@Base>
   12420:	ldr	r1, [sp, #8]
   12424:	str	r0, [r1, #4]
   12428:	b	12460 <bst_insere_impl@@Base+0x9c>
   1242c:	ldr	r0, [sp, #4]
   12430:	ldr	r1, [sp, #8]
   12434:	ldr	r1, [r1]
   12438:	bl	10e48 <strcmp@plt>
   1243c:	cmp	r0, #0
   12440:	ble	1245c <bst_insere_impl@@Base+0x98>
   12444:	ldr	r0, [sp, #8]
   12448:	ldr	r0, [r0, #8]
   1244c:	ldr	r1, [sp, #4]
   12450:	bl	123c4 <bst_insere_impl@@Base>
   12454:	ldr	r1, [sp, #8]
   12458:	str	r0, [r1, #8]
   1245c:	b	12460 <bst_insere_impl@@Base+0x9c>
   12460:	ldr	r0, [sp, #8]
   12464:	str	r0, [fp, #-4]
   12468:	ldr	r0, [fp, #-4]
   1246c:	mov	sp, fp
   12470:	pop	{fp, pc}

00012474 <bst_remove@@Base>:
   12474:	push	{fp, lr}
   12478:	mov	fp, sp
   1247c:	sub	sp, sp, #16
   12480:	str	r0, [sp, #8]
   12484:	str	r1, [sp, #4]
   12488:	ldr	r0, [sp, #8]
   1248c:	movw	r1, #0
   12490:	cmp	r0, r1
   12494:	beq	124a8 <bst_remove@@Base+0x34>
   12498:	ldr	r0, [sp, #4]
   1249c:	movw	r1, #0
   124a0:	cmp	r0, r1
   124a4:	bne	124b4 <bst_remove@@Base+0x40>
   124a8:	mvn	r0, #0
   124ac:	str	r0, [fp, #-4]
   124b0:	b	124d4 <bst_remove@@Base+0x60>
   124b4:	ldr	r0, [sp, #8]
   124b8:	ldr	r0, [r0]
   124bc:	ldr	r1, [sp, #4]
   124c0:	bl	11ff4 <bst_remove_impl@@Base>
   124c4:	ldr	r1, [sp, #8]
   124c8:	str	r0, [r1]
   124cc:	movw	r0, #0
   124d0:	str	r0, [fp, #-4]
   124d4:	ldr	r0, [fp, #-4]
   124d8:	mov	sp, fp
   124dc:	pop	{fp, pc}

000124e0 <bst_min@@Base>:
   124e0:	push	{fp, lr}
   124e4:	mov	fp, sp
   124e8:	sub	sp, sp, #8
   124ec:	str	r0, [sp]
   124f0:	ldr	r0, [sp]
   124f4:	movw	r1, #0
   124f8:	cmp	r0, r1
   124fc:	bne	1250c <bst_min@@Base+0x2c>
   12500:	movw	r0, #0
   12504:	str	r0, [sp, #4]
   12508:	b	12520 <bst_min@@Base+0x40>
   1250c:	ldr	r0, [sp]
   12510:	ldr	r0, [r0]
   12514:	bl	1252c <bst_no_valormin@@Base>
   12518:	ldr	r0, [r0]
   1251c:	str	r0, [sp, #4]
   12520:	ldr	r0, [sp, #4]
   12524:	mov	sp, fp
   12528:	pop	{fp, pc}

0001252c <bst_no_valormin@@Base>:
   1252c:	sub	sp, sp, #8
   12530:	str	r0, [sp, #4]
   12534:	ldr	r0, [sp, #4]
   12538:	str	r0, [sp]
   1253c:	ldr	r0, [sp]
   12540:	ldr	r0, [r0, #4]
   12544:	movw	r1, #0
   12548:	cmp	r0, r1
   1254c:	beq	12560 <bst_no_valormin@@Base+0x34>
   12550:	ldr	r0, [sp]
   12554:	ldr	r0, [r0, #4]
   12558:	str	r0, [sp]
   1255c:	b	1253c <bst_no_valormin@@Base+0x10>
   12560:	ldr	r0, [sp]
   12564:	add	sp, sp, #8
   12568:	bx	lr

0001256c <bst_max@@Base>:
   1256c:	push	{fp, lr}
   12570:	mov	fp, sp
   12574:	sub	sp, sp, #8
   12578:	str	r0, [sp]
   1257c:	ldr	r0, [sp]
   12580:	movw	r1, #0
   12584:	cmp	r0, r1
   12588:	bne	12598 <bst_max@@Base+0x2c>
   1258c:	movw	r0, #0
   12590:	str	r0, [sp, #4]
   12594:	b	125ac <bst_max@@Base+0x40>
   12598:	ldr	r0, [sp]
   1259c:	ldr	r0, [r0]
   125a0:	bl	125b8 <bst_no_valormax@@Base>
   125a4:	ldr	r0, [r0]
   125a8:	str	r0, [sp, #4]
   125ac:	ldr	r0, [sp, #4]
   125b0:	mov	sp, fp
   125b4:	pop	{fp, pc}

000125b8 <bst_no_valormax@@Base>:
   125b8:	sub	sp, sp, #8
   125bc:	str	r0, [sp, #4]
   125c0:	ldr	r0, [sp, #4]
   125c4:	str	r0, [sp]
   125c8:	ldr	r0, [sp]
   125cc:	ldr	r0, [r0, #8]
   125d0:	movw	r1, #0
   125d4:	cmp	r0, r1
   125d8:	beq	125ec <bst_no_valormax@@Base+0x34>
   125dc:	ldr	r0, [sp]
   125e0:	ldr	r0, [r0, #8]
   125e4:	str	r0, [sp]
   125e8:	b	125c8 <bst_no_valormax@@Base+0x10>
   125ec:	ldr	r0, [sp]
   125f0:	add	sp, sp, #8
   125f4:	bx	lr

000125f8 <bst_imprime@@Base>:
   125f8:	push	{fp, lr}
   125fc:	mov	fp, sp
   12600:	sub	sp, sp, #8
   12604:	str	r0, [sp, #4]
   12608:	ldr	r0, [sp, #4]
   1260c:	movw	r1, #0
   12610:	cmp	r0, r1
   12614:	bne	1261c <bst_imprime@@Base+0x24>
   12618:	b	12648 <bst_imprime@@Base+0x50>
   1261c:	movw	r0, #10487	; 0x28f7
   12620:	movt	r0, #1
   12624:	bl	10e54 <printf@plt>
   12628:	ldr	r1, [sp, #4]
   1262c:	ldr	r1, [r1]
   12630:	str	r0, [sp]
   12634:	mov	r0, r1
   12638:	bl	12650 <bst_preordem_impl@@Base>
   1263c:	movw	r0, #10388	; 0x2894
   12640:	movt	r0, #1
   12644:	bl	10e54 <printf@plt>
   12648:	mov	sp, fp
   1264c:	pop	{fp, pc}

00012650 <bst_preordem_impl@@Base>:
   12650:	push	{fp, lr}
   12654:	mov	fp, sp
   12658:	sub	sp, sp, #8
   1265c:	str	r0, [sp, #4]
   12660:	ldr	r0, [sp, #4]
   12664:	movw	r1, #0
   12668:	cmp	r0, r1
   1266c:	bne	12674 <bst_preordem_impl@@Base+0x24>
   12670:	b	126a8 <bst_preordem_impl@@Base+0x58>
   12674:	ldr	r0, [sp, #4]
   12678:	ldr	r1, [r0]
   1267c:	movw	r0, #10498	; 0x2902
   12680:	movt	r0, #1
   12684:	bl	10e54 <printf@plt>
   12688:	ldr	r1, [sp, #4]
   1268c:	ldr	r1, [r1, #4]
   12690:	str	r0, [sp]
   12694:	mov	r0, r1
   12698:	bl	12650 <bst_preordem_impl@@Base>
   1269c:	ldr	r0, [sp, #4]
   126a0:	ldr	r0, [r0, #8]
   126a4:	bl	12650 <bst_preordem_impl@@Base>
   126a8:	mov	sp, fp
   126ac:	pop	{fp, pc}

000126b0 <bst_novo_no@@Base>:
   126b0:	push	{fp, lr}
   126b4:	mov	fp, sp
   126b8:	sub	sp, sp, #16
   126bc:	str	r0, [fp, #-4]
   126c0:	mov	r0, #12
   126c4:	bl	10ea8 <malloc@plt>
   126c8:	str	r0, [sp, #8]
   126cc:	ldr	r0, [fp, #-4]
   126d0:	bl	10ecc <strlen@plt>
   126d4:	add	r0, r0, #1
   126d8:	mov	r1, r0
   126dc:	str	r1, [sp, #4]
   126e0:	bl	10ea8 <malloc@plt>
   126e4:	ldr	r1, [sp, #8]
   126e8:	str	r0, [r1]
   126ec:	ldr	r0, [sp, #8]
   126f0:	ldr	r0, [r0]
   126f4:	ldr	r1, [fp, #-4]
   126f8:	bl	10e9c <strcpy@plt>
   126fc:	ldr	r1, [sp, #8]
   12700:	movw	r2, #0
   12704:	str	r2, [r1, #4]
   12708:	ldr	r1, [sp, #8]
   1270c:	str	r2, [r1, #8]
   12710:	ldr	r1, [sp, #8]
   12714:	str	r0, [sp]
   12718:	mov	r0, r1
   1271c:	mov	sp, fp
   12720:	pop	{fp, pc}

00012724 <bst_altura@@Base>:
   12724:	push	{fp, lr}
   12728:	mov	fp, sp
   1272c:	sub	sp, sp, #16
   12730:	str	r0, [sp, #8]
   12734:	movw	r0, #0
   12738:	str	r0, [sp, #4]
   1273c:	str	r0, [sp]
   12740:	ldr	r1, [sp, #8]
   12744:	cmp	r1, r0
   12748:	bne	12758 <bst_altura@@Base+0x34>
   1274c:	mvn	r0, #0
   12750:	str	r0, [fp, #-4]
   12754:	b	127e8 <bst_altura@@Base+0xc4>
   12758:	ldr	r0, [sp, #8]
   1275c:	ldr	r0, [r0, #8]
   12760:	movw	r1, #0
   12764:	cmp	r0, r1
   12768:	bne	1278c <bst_altura@@Base+0x68>
   1276c:	ldr	r0, [sp, #8]
   12770:	ldr	r0, [r0, #4]
   12774:	movw	r1, #0
   12778:	cmp	r0, r1
   1277c:	bne	1278c <bst_altura@@Base+0x68>
   12780:	movw	r0, #0
   12784:	str	r0, [fp, #-4]
   12788:	b	127e8 <bst_altura@@Base+0xc4>
   1278c:	ldr	r0, [sp, #8]
   12790:	ldr	r0, [r0, #4]
   12794:	bl	12724 <bst_altura@@Base>
   12798:	str	r0, [sp, #4]
   1279c:	ldr	r0, [sp, #8]
   127a0:	ldr	r0, [r0, #8]
   127a4:	bl	12724 <bst_altura@@Base>
   127a8:	str	r0, [sp]
   127ac:	ldr	r0, [sp, #4]
   127b0:	ldr	r1, [sp]
   127b4:	cmp	r0, r1
   127b8:	ble	127d4 <bst_altura@@Base+0xb0>
   127bc:	ldr	r0, [sp, #8]
   127c0:	ldr	r0, [r0, #4]
   127c4:	bl	12724 <bst_altura@@Base>
   127c8:	add	r0, r0, #1
   127cc:	str	r0, [fp, #-4]
   127d0:	b	127e8 <bst_altura@@Base+0xc4>
   127d4:	ldr	r0, [sp, #8]
   127d8:	ldr	r0, [r0, #8]
   127dc:	bl	12724 <bst_altura@@Base>
   127e0:	add	r0, r0, #1
   127e4:	str	r0, [fp, #-4]
   127e8:	ldr	r0, [fp, #-4]
   127ec:	mov	sp, fp
   127f0:	pop	{fp, pc}

000127f4 <__libc_csu_init@@Base>:
   127f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f8:	mov	r7, r0
   127fc:	ldr	r6, [pc, #72]	; 1284c <__libc_csu_init@@Base+0x58>
   12800:	ldr	r5, [pc, #72]	; 12850 <__libc_csu_init@@Base+0x5c>
   12804:	add	r6, pc, r6
   12808:	add	r5, pc, r5
   1280c:	sub	r6, r6, r5
   12810:	mov	r8, r1
   12814:	mov	r9, r2
   12818:	bl	10e28 <strcmp@plt-0x20>
   1281c:	asrs	r6, r6, #2
   12820:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12824:	mov	r4, #0
   12828:	add	r4, r4, #1
   1282c:	ldr	r3, [r5], #4
   12830:	mov	r2, r9
   12834:	mov	r1, r8
   12838:	mov	r0, r7
   1283c:	blx	r3
   12840:	cmp	r6, r4
   12844:	bne	12828 <__libc_csu_init@@Base+0x34>
   12848:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1284c:	andeq	r0, r1, r0, lsl #14
   12850:	strdeq	r0, [r1], -r8

00012854 <__libc_csu_fini@@Base>:
   12854:	bx	lr

Disassembly of section .fini:

00012858 <.fini>:
   12858:	push	{r3, lr}
   1285c:	pop	{r3, pc}
