
../compcert-repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010c70 <.init>:
   10c70:	push	{r3, lr}
   10c74:	bl	10d74 <_start@@Base+0x3c>
   10c78:	pop	{r3, pc}

Disassembly of section .plt:

00010c7c <calloc@plt-0x14>:
   10c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c80:	ldr	lr, [pc, #4]	; 10c8c <calloc@plt-0x4>
   10c84:	add	lr, pc, lr
   10c88:	ldr	pc, [lr, #8]!
   10c8c:	andeq	r2, r1, r4, ror r3

00010c90 <calloc@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #884]!	; 0x374

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #876]!	; 0x36c

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #868]!	; 0x364

00010cb4 <realloc@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #860]!	; 0x35c

00010cc0 <fwrite@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #852]!	; 0x354

00010ccc <strcpy@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #844]!	; 0x34c

00010cd8 <puts@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #836]!	; 0x344

00010ce4 <malloc@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #828]!	; 0x33c

00010cf0 <__libc_start_main@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #820]!	; 0x334

00010cfc <__gmon_start__@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #812]!	; 0x32c

00010d08 <strlen@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #804]!	; 0x324

00010d14 <fprintf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #796]!	; 0x31c

00010d20 <putchar@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #788]!	; 0x314

00010d2c <abort@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #780]!	; 0x30c

Disassembly of section .text:

00010d38 <_start@@Base>:
   10d38:	mov	fp, #0
   10d3c:	mov	lr, #0
   10d40:	pop	{r1}		; (ldr r1, [sp], #4)
   10d44:	mov	r2, sp
   10d48:	push	{r2}		; (str r2, [sp, #-4]!)
   10d4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d50:	ldr	ip, [pc, #16]	; 10d68 <_start@@Base+0x30>
   10d54:	push	{ip}		; (str ip, [sp, #-4]!)
   10d58:	ldr	r0, [pc, #12]	; 10d6c <_start@@Base+0x34>
   10d5c:	ldr	r3, [pc, #12]	; 10d70 <_start@@Base+0x38>
   10d60:	bl	10cf0 <__libc_start_main@plt>
   10d64:	bl	10d2c <abort@plt>
   10d68:	andeq	r2, r1, r0, lsl #5
   10d6c:	andeq	r1, r1, r8, asr #1
   10d70:	andeq	r2, r1, r0, lsr #4
   10d74:	ldr	r3, [pc, #20]	; 10d90 <_start@@Base+0x58>
   10d78:	ldr	r2, [pc, #20]	; 10d94 <_start@@Base+0x5c>
   10d7c:	add	r3, pc, r3
   10d80:	ldr	r2, [r3, r2]
   10d84:	cmp	r2, #0
   10d88:	bxeq	lr
   10d8c:	b	10cfc <__gmon_start__@plt>
   10d90:	andeq	r2, r1, ip, ror r2
   10d94:	andeq	r0, r0, r4, asr #32
   10d98:	ldr	r0, [pc, #24]	; 10db8 <_start@@Base+0x80>
   10d9c:	ldr	r3, [pc, #24]	; 10dbc <_start@@Base+0x84>
   10da0:	cmp	r3, r0
   10da4:	bxeq	lr
   10da8:	ldr	r3, [pc, #16]	; 10dc0 <_start@@Base+0x88>
   10dac:	cmp	r3, #0
   10db0:	bxeq	lr
   10db4:	bx	r3
   10db8:	muleq	r2, r8, r1
   10dbc:	muleq	r2, r8, r1
   10dc0:	andeq	r0, r0, r0
   10dc4:	ldr	r0, [pc, #36]	; 10df0 <_start@@Base+0xb8>
   10dc8:	ldr	r1, [pc, #36]	; 10df4 <_start@@Base+0xbc>
   10dcc:	sub	r1, r1, r0
   10dd0:	asr	r1, r1, #2
   10dd4:	add	r1, r1, r1, lsr #31
   10dd8:	asrs	r1, r1, #1
   10ddc:	bxeq	lr
   10de0:	ldr	r3, [pc, #16]	; 10df8 <_start@@Base+0xc0>
   10de4:	cmp	r3, #0
   10de8:	bxeq	lr
   10dec:	bx	r3
   10df0:	muleq	r2, r8, r1
   10df4:	muleq	r2, r8, r1
   10df8:	andeq	r0, r0, r0
   10dfc:	push	{r4, lr}
   10e00:	ldr	r4, [pc, #24]	; 10e20 <_start@@Base+0xe8>
   10e04:	ldrb	r3, [r4]
   10e08:	cmp	r3, #0
   10e0c:	popne	{r4, pc}
   10e10:	bl	10d98 <_start@@Base+0x60>
   10e14:	mov	r3, #1
   10e18:	strb	r3, [r4]
   10e1c:	pop	{r4, pc}
   10e20:	muleq	r2, ip, r1
   10e24:	b	10dc4 <_start@@Base+0x8c>

00010e28 <tira_carta@@Base>:
   10e28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e2c:	add	fp, sp, #24
   10e30:	ldr	r8, [r0]
   10e34:	ldr	r4, [r1]
   10e38:	mov	r5, r0
   10e3c:	ldr	r6, [r8]
   10e40:	ldr	r0, [r4]
   10e44:	mov	r1, r6
   10e48:	bl	10c9c <strcmp@plt>
   10e4c:	mov	r7, #0
   10e50:	cmp	r0, #0
   10e54:	beq	10e74 <tira_carta@@Base+0x4c>
   10e58:	ldr	r4, [r4, #4]
   10e5c:	mov	r1, r6
   10e60:	ldr	r0, [r4]
   10e64:	bl	10c9c <strcmp@plt>
   10e68:	add	r7, r7, #1
   10e6c:	cmp	r0, #0
   10e70:	bne	10e58 <tira_carta@@Base+0x30>
   10e74:	mov	r0, r5
   10e78:	mov	r1, r8
   10e7c:	bl	11fcc <lista_remove@@Base>
   10e80:	mov	r0, r7
   10e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010e88 <faz_jogada@@Base>:
   10e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e8c:	add	fp, sp, #28
   10e90:	sub	sp, sp, #12
   10e94:	ldr	r4, [r0]
   10e98:	str	r0, [sp, #8]
   10e9c:	str	r2, [sp, #4]
   10ea0:	mov	r5, r1
   10ea4:	lsl	r0, r4, #2
   10ea8:	bl	10ce4 <malloc@plt>
   10eac:	mov	r7, r0
   10eb0:	mvn	r6, #0
   10eb4:	cmp	r4, #1
   10eb8:	blt	10fc0 <faz_jogada@@Base+0x138>
   10ebc:	mov	r8, #0
   10ec0:	b	10eec <faz_jogada@@Base+0x64>
   10ec4:	mov	r0, r6
   10ec8:	mov	r1, r4
   10ecc:	mov	r5, r6
   10ed0:	bl	11fcc <lista_remove@@Base>
   10ed4:	ldr	r0, [sp, #8]
   10ed8:	str	sl, [r7, r8, lsl #2]
   10edc:	add	r8, r8, #1
   10ee0:	ldr	r0, [r0]
   10ee4:	cmp	r8, r0
   10ee8:	bge	10f3c <faz_jogada@@Base+0xb4>
   10eec:	ldr	r0, [sp, #4]
   10ef0:	ldr	r4, [r5]
   10ef4:	mov	r6, r5
   10ef8:	ldr	r9, [r0]
   10efc:	ldr	r5, [r4]
   10f00:	ldr	r0, [r9]
   10f04:	mov	r1, r5
   10f08:	bl	10c9c <strcmp@plt>
   10f0c:	cmp	r0, #0
   10f10:	mov	sl, #0
   10f14:	beq	10ec4 <faz_jogada@@Base+0x3c>
   10f18:	mov	sl, #0
   10f1c:	ldr	r9, [r9, #4]
   10f20:	mov	r1, r5
   10f24:	ldr	r0, [r9]
   10f28:	bl	10c9c <strcmp@plt>
   10f2c:	add	sl, sl, #1
   10f30:	cmp	r0, #0
   10f34:	bne	10f1c <faz_jogada@@Base+0x94>
   10f38:	b	10ec4 <faz_jogada@@Base+0x3c>
   10f3c:	cmp	r0, #1
   10f40:	mvn	r6, #0
   10f44:	blt	10fc0 <faz_jogada@@Base+0x138>
   10f48:	and	r1, r0, #1
   10f4c:	cmp	r0, #1
   10f50:	bne	10f6c <faz_jogada@@Base+0xe4>
   10f54:	mov	r0, #0
   10f58:	mvn	r6, #0
   10f5c:	mvn	r2, #0
   10f60:	cmp	r1, #0
   10f64:	bne	10fb4 <faz_jogada@@Base+0x12c>
   10f68:	b	10fc0 <faz_jogada@@Base+0x138>
   10f6c:	sub	r3, r0, r1
   10f70:	mov	r0, #0
   10f74:	mvn	r6, #0
   10f78:	mvn	r2, #0
   10f7c:	mov	r4, r7
   10f80:	ldr	r5, [r4, r0, lsl #2]!
   10f84:	cmp	r5, r2
   10f88:	movgt	r2, r5
   10f8c:	ldr	r5, [r4, #4]
   10f90:	movgt	r6, r0
   10f94:	cmp	r5, r2
   10f98:	addgt	r6, r0, #1
   10f9c:	add	r0, r0, #2
   10fa0:	movgt	r2, r5
   10fa4:	cmp	r3, r0
   10fa8:	bne	10f7c <faz_jogada@@Base+0xf4>
   10fac:	cmp	r1, #0
   10fb0:	beq	10fc0 <faz_jogada@@Base+0x138>
   10fb4:	ldr	r1, [r7, r0, lsl #2]
   10fb8:	cmp	r1, r2
   10fbc:	movgt	r6, r0
   10fc0:	mov	r0, r7
   10fc4:	bl	10ca8 <free@plt>
   10fc8:	ldr	r0, [sp, #8]
   10fcc:	ldr	r0, [r0, #8]
   10fd0:	ldr	r0, [r0, r6, lsl #2]
   10fd4:	sub	sp, fp, #28
   10fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010fdc <numero_vitorias@@Base>:
   10fdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10fe0:	add	fp, sp, #24
   10fe4:	ldr	r6, [r0]
   10fe8:	cmp	r6, #1
   10fec:	blt	11028 <numero_vitorias@@Base+0x4c>
   10ff0:	ldr	r7, [r0, #8]
   10ff4:	mov	r8, r1
   10ff8:	mov	r5, #0
   10ffc:	mov	r4, #0
   11000:	ldr	r1, [r7, r4, lsl #2]
   11004:	mov	r0, r8
   11008:	bl	10c9c <strcmp@plt>
   1100c:	cmp	r0, #0
   11010:	add	r4, r4, #1
   11014:	addeq	r5, r5, #1
   11018:	cmp	r4, r6
   1101c:	blt	11000 <numero_vitorias@@Base+0x24>
   11020:	mov	r0, r5
   11024:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11028:	mov	r5, #0
   1102c:	mov	r0, r5
   11030:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011034 <insere_carta@@Base>:
   11034:	push	{fp, lr}
   11038:	mov	fp, sp
   1103c:	sub	sp, sp, #8
   11040:	cmp	r1, #7
   11044:	bgt	1105c <insere_carta@@Base+0x28>
   11048:	mov	r2, #0
   1104c:	add	r1, r1, #50	; 0x32
   11050:	strb	r2, [sp, #5]
   11054:	strb	r1, [sp, #4]
   11058:	b	110b4 <insere_carta@@Base+0x80>
   1105c:	sub	r1, r1, #8
   11060:	cmp	r1, #4
   11064:	bhi	110b4 <insere_carta@@Base+0x80>
   11068:	add	r2, pc, #0
   1106c:	ldr	pc, [r2, r1, lsl #2]
   11070:	andeq	r1, r1, r4, lsl #1
   11074:	muleq	r1, r4, r0
   11078:	muleq	r1, ip, r0
   1107c:	andeq	r1, r1, r4, lsr #1
   11080:	andeq	r1, r1, ip, lsr #1
   11084:	mov	r1, #0
   11088:	strb	r1, [sp, #6]
   1108c:	movw	r1, #12337	; 0x3031
   11090:	b	110b0 <insere_carta@@Base+0x7c>
   11094:	mov	r1, #74	; 0x4a
   11098:	b	110b0 <insere_carta@@Base+0x7c>
   1109c:	mov	r1, #81	; 0x51
   110a0:	b	110b0 <insere_carta@@Base+0x7c>
   110a4:	mov	r1, #75	; 0x4b
   110a8:	b	110b0 <insere_carta@@Base+0x7c>
   110ac:	mov	r1, #65	; 0x41
   110b0:	strh	r1, [sp, #4]
   110b4:	ldr	r2, [r0]
   110b8:	add	r1, sp, #4
   110bc:	bl	11ed8 <lista_insere@@Base>
   110c0:	mov	sp, fp
   110c4:	pop	{fp, pc}

000110c8 <main@@Base>:
   110c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110cc:	add	fp, sp, #28
   110d0:	sub	sp, sp, #20
   110d4:	bl	11968 <vetor_novo@@Base>
   110d8:	movw	r4, #12368	; 0x3050
   110dc:	mov	r2, #0
   110e0:	mov	r5, r0
   110e4:	mov	r7, #0
   110e8:	movt	r4, #2
   110ec:	ldr	r1, [r4]
   110f0:	bl	11ab8 <vetor_insere@@Base>
   110f4:	ldr	r1, [r4, #4]
   110f8:	mov	r0, r5
   110fc:	mov	r2, #1
   11100:	bl	11ab8 <vetor_insere@@Base>
   11104:	ldr	r1, [r4, #8]
   11108:	mov	r0, r5
   1110c:	mov	r2, #2
   11110:	bl	11ab8 <vetor_insere@@Base>
   11114:	ldr	r1, [r4, #12]
   11118:	mov	r0, r5
   1111c:	mov	r2, #3
   11120:	str	r5, [sp, #8]
   11124:	bl	11ab8 <vetor_insere@@Base>
   11128:	bl	11e34 <lista_nova@@Base>
   1112c:	movw	r5, #12436	; 0x3094
   11130:	mov	r4, r0
   11134:	add	r6, sp, #16
   11138:	mov	r8, #75	; 0x4b
   1113c:	mov	r9, #65	; 0x41
   11140:	mov	sl, #0
   11144:	movt	r5, #2
   11148:	b	11174 <main@@Base+0xac>
   1114c:	add	r0, r0, #50	; 0x32
   11150:	strb	r7, [sp, #17]
   11154:	strb	r0, [sp, #16]
   11158:	ldr	r2, [r4]
   1115c:	mov	r0, r4
   11160:	mov	r1, r6
   11164:	bl	11ed8 <lista_insere@@Base>
   11168:	sub	sl, sl, #1
   1116c:	cmn	sl, #52	; 0x34
   11170:	beq	111e0 <main@@Base+0x118>
   11174:	ldr	r0, [r5, -sl, lsl #2]
   11178:	cmp	r0, #7
   1117c:	ble	1114c <main@@Base+0x84>
   11180:	sub	r0, r0, #8
   11184:	cmp	r0, #4
   11188:	bhi	11158 <main@@Base+0x90>
   1118c:	add	r1, pc, #0
   11190:	ldr	pc, [r1, r0, lsl #2]
   11194:	andeq	r1, r1, r8, lsr #3
   11198:			; <UNDEFINED> instruction: 0x000111b8
   1119c:	andeq	r1, r1, r4, asr #3
   111a0:	ldrdeq	r1, [r1], -r0
   111a4:	ldrdeq	r1, [r1], -r8
   111a8:	movw	r0, #12337	; 0x3031
   111ac:	strb	r7, [sp, #18]
   111b0:	strh	r0, [sp, #16]
   111b4:	b	11158 <main@@Base+0x90>
   111b8:	mov	r0, #74	; 0x4a
   111bc:	strh	r0, [sp, #16]
   111c0:	b	11158 <main@@Base+0x90>
   111c4:	mov	r0, #81	; 0x51
   111c8:	strh	r0, [sp, #16]
   111cc:	b	11158 <main@@Base+0x90>
   111d0:	strh	r8, [sp, #16]
   111d4:	b	11158 <main@@Base+0x90>
   111d8:	strh	r9, [sp, #16]
   111dc:	b	11158 <main@@Base+0x90>
   111e0:	bl	11e34 <lista_nova@@Base>
   111e4:	movw	r7, #12384	; 0x3060
   111e8:	mov	r2, #0
   111ec:	mov	r8, r0
   111f0:	mov	r6, #0
   111f4:	movt	r7, #2
   111f8:	ldr	r1, [r7]
   111fc:	bl	11ed8 <lista_insere@@Base>
   11200:	ldr	r1, [r7, #4]
   11204:	mov	r0, r8
   11208:	mov	r2, #0
   1120c:	bl	11ed8 <lista_insere@@Base>
   11210:	ldr	r1, [r7, #8]
   11214:	mov	r0, r8
   11218:	mov	r2, #0
   1121c:	bl	11ed8 <lista_insere@@Base>
   11220:	ldr	r1, [r7, #12]
   11224:	mov	r0, r8
   11228:	mov	r2, #0
   1122c:	bl	11ed8 <lista_insere@@Base>
   11230:	ldr	r1, [r7, #16]
   11234:	mov	r0, r8
   11238:	mov	r2, #0
   1123c:	bl	11ed8 <lista_insere@@Base>
   11240:	ldr	r1, [r7, #20]
   11244:	mov	r0, r8
   11248:	mov	r2, #0
   1124c:	bl	11ed8 <lista_insere@@Base>
   11250:	ldr	r1, [r7, #24]
   11254:	mov	r0, r8
   11258:	mov	r2, #0
   1125c:	bl	11ed8 <lista_insere@@Base>
   11260:	ldr	r1, [r7, #28]
   11264:	mov	r0, r8
   11268:	mov	r2, #0
   1126c:	bl	11ed8 <lista_insere@@Base>
   11270:	ldr	r1, [r7, #32]
   11274:	mov	r0, r8
   11278:	mov	r2, #0
   1127c:	bl	11ed8 <lista_insere@@Base>
   11280:	ldr	r1, [r7, #36]	; 0x24
   11284:	mov	r0, r8
   11288:	mov	r2, #0
   1128c:	bl	11ed8 <lista_insere@@Base>
   11290:	ldr	r1, [r7, #40]	; 0x28
   11294:	mov	r0, r8
   11298:	mov	r2, #0
   1129c:	bl	11ed8 <lista_insere@@Base>
   112a0:	ldr	r1, [r7, #44]	; 0x2c
   112a4:	mov	r0, r8
   112a8:	mov	r2, #0
   112ac:	bl	11ed8 <lista_insere@@Base>
   112b0:	ldr	r1, [r7, #48]	; 0x30
   112b4:	mov	r0, r8
   112b8:	mov	r2, #0
   112bc:	bl	11ed8 <lista_insere@@Base>
   112c0:	movw	r0, #12696	; 0x3198
   112c4:	ldr	r1, [r4]
   112c8:	ldr	sl, [r8]
   112cc:	movt	r0, #2
   112d0:	ldr	r0, [r0]
   112d4:	ldr	r9, [r1]
   112d8:	str	r1, [sp, #4]
   112dc:	str	r0, [sp, #12]
   112e0:	ldr	r0, [sl]
   112e4:	mov	r1, r9
   112e8:	bl	10c9c <strcmp@plt>
   112ec:	cmp	r0, #0
   112f0:	mov	r7, #0
   112f4:	beq	11318 <main@@Base+0x250>
   112f8:	mov	r7, #0
   112fc:	ldr	sl, [sl, #4]
   11300:	mov	r1, r9
   11304:	ldr	r0, [sl]
   11308:	bl	10c9c <strcmp@plt>
   1130c:	add	r7, r7, #1
   11310:	cmp	r0, #0
   11314:	bne	112fc <main@@Base+0x234>
   11318:	ldr	r1, [sp, #4]
   1131c:	mov	r0, r4
   11320:	bl	11fcc <lista_remove@@Base>
   11324:	ldr	r0, [sp, #12]
   11328:	movw	r1, #8895	; 0x22bf
   1132c:	mov	r2, r7
   11330:	movt	r1, #1
   11334:	bl	10d14 <fprintf@plt>
   11338:	movw	r0, #12696	; 0x3198
   1133c:	ldr	sl, [r4]
   11340:	ldr	r9, [r8]
   11344:	movt	r0, #2
   11348:	ldr	r0, [r0]
   1134c:	ldr	r7, [sl]
   11350:	str	r0, [sp, #12]
   11354:	ldr	r0, [r9]
   11358:	mov	r1, r7
   1135c:	bl	10c9c <strcmp@plt>
   11360:	cmp	r0, #0
   11364:	beq	11388 <main@@Base+0x2c0>
   11368:	mov	r6, #0
   1136c:	ldr	r9, [r9, #4]
   11370:	mov	r1, r7
   11374:	ldr	r0, [r9]
   11378:	bl	10c9c <strcmp@plt>
   1137c:	add	r6, r6, #1
   11380:	cmp	r0, #0
   11384:	bne	1136c <main@@Base+0x2a4>
   11388:	mov	r0, r4
   1138c:	mov	r1, sl
   11390:	bl	11fcc <lista_remove@@Base>
   11394:	ldr	r0, [sp, #12]
   11398:	movw	r1, #8924	; 0x22dc
   1139c:	mov	r2, r6
   113a0:	movt	r1, #1
   113a4:	bl	10d14 <fprintf@plt>
   113a8:	mov	r1, r4
   113ac:	ldr	r4, [r8]
   113b0:	movw	r0, #12696	; 0x3198
   113b4:	ldr	sl, [r1]
   113b8:	movt	r0, #2
   113bc:	str	r1, [sp, #12]
   113c0:	ldr	r9, [r0]
   113c4:	ldr	r0, [r4]
   113c8:	ldr	r7, [sl]
   113cc:	mov	r1, r7
   113d0:	bl	10c9c <strcmp@plt>
   113d4:	mov	r6, #0
   113d8:	cmp	r0, #0
   113dc:	beq	113fc <main@@Base+0x334>
   113e0:	ldr	r4, [r4, #4]
   113e4:	mov	r1, r7
   113e8:	ldr	r0, [r4]
   113ec:	bl	10c9c <strcmp@plt>
   113f0:	add	r6, r6, #1
   113f4:	cmp	r0, #0
   113f8:	bne	113e0 <main@@Base+0x318>
   113fc:	ldr	r4, [sp, #12]
   11400:	mov	r1, sl
   11404:	mov	r0, r4
   11408:	bl	11fcc <lista_remove@@Base>
   1140c:	movw	r1, #8952	; 0x22f8
   11410:	mov	r0, r9
   11414:	mov	r2, r6
   11418:	movt	r1, #1
   1141c:	bl	10d14 <fprintf@plt>
   11420:	ldr	r0, [r5, #196]	; 0xc4
   11424:	mov	r6, r5
   11428:	cmp	r0, #7
   1142c:	bgt	11448 <main@@Base+0x380>
   11430:	ldr	r5, [sp, #8]
   11434:	mov	r1, #0
   11438:	add	r0, r0, #50	; 0x32
   1143c:	strb	r1, [sp, #17]
   11440:	strb	r0, [sp, #16]
   11444:	b	114a4 <main@@Base+0x3dc>
   11448:	ldr	r5, [sp, #8]
   1144c:	sub	r0, r0, #8
   11450:	cmp	r0, #4
   11454:	bhi	114a4 <main@@Base+0x3dc>
   11458:	add	r1, pc, #0
   1145c:	ldr	pc, [r1, r0, lsl #2]
   11460:	andeq	r1, r1, r4, ror r4
   11464:	andeq	r1, r1, r4, lsl #9
   11468:	andeq	r1, r1, ip, lsl #9
   1146c:	muleq	r1, r4, r4
   11470:	muleq	r1, ip, r4
   11474:	mov	r0, #0
   11478:	strb	r0, [sp, #18]
   1147c:	movw	r0, #12337	; 0x3031
   11480:	b	114a0 <main@@Base+0x3d8>
   11484:	mov	r0, #74	; 0x4a
   11488:	b	114a0 <main@@Base+0x3d8>
   1148c:	mov	r0, #81	; 0x51
   11490:	b	114a0 <main@@Base+0x3d8>
   11494:	mov	r0, #75	; 0x4b
   11498:	b	114a0 <main@@Base+0x3d8>
   1149c:	mov	r0, #65	; 0x41
   114a0:	strh	r0, [sp, #16]
   114a4:	ldr	r2, [r4]
   114a8:	add	r1, sp, #16
   114ac:	mov	r0, r4
   114b0:	bl	11ed8 <lista_insere@@Base>
   114b4:	ldr	r0, [r6, #200]	; 0xc8
   114b8:	cmp	r0, #7
   114bc:	bgt	114d4 <main@@Base+0x40c>
   114c0:	mov	r1, #0
   114c4:	add	r0, r0, #50	; 0x32
   114c8:	strb	r1, [sp, #17]
   114cc:	strb	r0, [sp, #16]
   114d0:	b	1152c <main@@Base+0x464>
   114d4:	sub	r0, r0, #8
   114d8:	cmp	r0, #4
   114dc:	bhi	1152c <main@@Base+0x464>
   114e0:	add	r1, pc, #0
   114e4:	ldr	pc, [r1, r0, lsl #2]
   114e8:	strdeq	r1, [r1], -ip
   114ec:	andeq	r1, r1, ip, lsl #10
   114f0:	andeq	r1, r1, r4, lsl r5
   114f4:	andeq	r1, r1, ip, lsl r5
   114f8:	andeq	r1, r1, r4, lsr #10
   114fc:	mov	r0, #0
   11500:	strb	r0, [sp, #18]
   11504:	movw	r0, #12337	; 0x3031
   11508:	b	11528 <main@@Base+0x460>
   1150c:	mov	r0, #74	; 0x4a
   11510:	b	11528 <main@@Base+0x460>
   11514:	mov	r0, #81	; 0x51
   11518:	b	11528 <main@@Base+0x460>
   1151c:	mov	r0, #75	; 0x4b
   11520:	b	11528 <main@@Base+0x460>
   11524:	mov	r0, #65	; 0x41
   11528:	strh	r0, [sp, #16]
   1152c:	ldr	r2, [r4]
   11530:	add	r1, sp, #16
   11534:	mov	r0, r4
   11538:	bl	11ed8 <lista_insere@@Base>
   1153c:	ldr	r0, [r6, #204]	; 0xcc
   11540:	cmp	r0, #7
   11544:	bgt	1155c <main@@Base+0x494>
   11548:	mov	r1, #0
   1154c:	add	r0, r0, #50	; 0x32
   11550:	strb	r1, [sp, #17]
   11554:	strb	r0, [sp, #16]
   11558:	b	115b4 <main@@Base+0x4ec>
   1155c:	sub	r0, r0, #8
   11560:	cmp	r0, #4
   11564:	bhi	115b4 <main@@Base+0x4ec>
   11568:	add	r1, pc, #0
   1156c:	ldr	pc, [r1, r0, lsl #2]
   11570:	andeq	r1, r1, r4, lsl #11
   11574:	muleq	r1, r4, r5
   11578:	muleq	r1, ip, r5
   1157c:	andeq	r1, r1, r4, lsr #11
   11580:	andeq	r1, r1, ip, lsr #11
   11584:	mov	r0, #0
   11588:	strb	r0, [sp, #18]
   1158c:	movw	r0, #12337	; 0x3031
   11590:	b	115b0 <main@@Base+0x4e8>
   11594:	mov	r0, #74	; 0x4a
   11598:	b	115b0 <main@@Base+0x4e8>
   1159c:	mov	r0, #81	; 0x51
   115a0:	b	115b0 <main@@Base+0x4e8>
   115a4:	mov	r0, #75	; 0x4b
   115a8:	b	115b0 <main@@Base+0x4e8>
   115ac:	mov	r0, #65	; 0x41
   115b0:	strh	r0, [sp, #16]
   115b4:	ldr	r2, [r4]
   115b8:	add	r1, sp, #16
   115bc:	mov	r0, r4
   115c0:	bl	11ed8 <lista_insere@@Base>
   115c4:	mov	r7, #0
   115c8:	bl	11968 <vetor_novo@@Base>
   115cc:	movw	r9, #8981	; 0x2315
   115d0:	mov	r6, r0
   115d4:	movt	r9, #1
   115d8:	b	115f8 <main@@Base+0x530>
   115dc:	mov	r0, r5
   115e0:	bl	11a78 <vetor_tamanho@@Base>
   115e4:	cmp	r0, #4
   115e8:	bne	11624 <main@@Base+0x55c>
   115ec:	add	r7, r7, #1
   115f0:	cmp	r7, #13
   115f4:	beq	11644 <main@@Base+0x57c>
   115f8:	mov	r0, r5
   115fc:	mov	r1, r4
   11600:	mov	r2, r8
   11604:	bl	10e88 <faz_jogada@@Base>
   11608:	cmp	r0, #0
   1160c:	beq	115dc <main@@Base+0x514>
   11610:	mov	r1, r0
   11614:	mov	r0, r6
   11618:	mov	r2, r7
   1161c:	bl	11ab8 <vetor_insere@@Base>
   11620:	b	115dc <main@@Base+0x514>
   11624:	movw	r0, #12696	; 0x3198
   11628:	mov	r1, #44	; 0x2c
   1162c:	mov	r2, #1
   11630:	movt	r0, #2
   11634:	ldr	r3, [r0]
   11638:	mov	r0, r9
   1163c:	bl	10cc0 <fwrite@plt>
   11640:	b	115ec <main@@Base+0x524>
   11644:	movw	r0, #9073	; 0x2371
   11648:	str	r8, [sp, #4]
   1164c:	movt	r0, #1
   11650:	bl	10cd8 <puts@plt>
   11654:	ldr	r0, [r6]
   11658:	cmp	r0, #1
   1165c:	bge	11910 <main@@Base+0x848>
   11660:	mov	r0, r6
   11664:	bl	11994 <vetor_apaga@@Base>
   11668:	bl	11968 <vetor_novo@@Base>
   1166c:	movw	r7, #12644	; 0x3164
   11670:	mov	r2, #0
   11674:	mov	r9, r0
   11678:	mov	r6, #0
   1167c:	movt	r7, #2
   11680:	ldr	r1, [r7]
   11684:	bl	11ab8 <vetor_insere@@Base>
   11688:	ldr	r1, [r7, #4]
   1168c:	mov	r0, r9
   11690:	mov	r2, #1
   11694:	bl	11ab8 <vetor_insere@@Base>
   11698:	ldr	r1, [r7, #8]
   1169c:	mov	r0, r9
   116a0:	mov	r2, #2
   116a4:	bl	11ab8 <vetor_insere@@Base>
   116a8:	ldr	r1, [r7, #12]
   116ac:	mov	r0, r9
   116b0:	mov	r2, #3
   116b4:	bl	11ab8 <vetor_insere@@Base>
   116b8:	ldr	r1, [r7, #16]
   116bc:	mov	r0, r9
   116c0:	mov	r2, #4
   116c4:	bl	11ab8 <vetor_insere@@Base>
   116c8:	ldr	r1, [r7, #20]
   116cc:	mov	r0, r9
   116d0:	mov	r2, #5
   116d4:	bl	11ab8 <vetor_insere@@Base>
   116d8:	ldr	r1, [r7, #24]
   116dc:	mov	r0, r9
   116e0:	mov	r2, #6
   116e4:	bl	11ab8 <vetor_insere@@Base>
   116e8:	ldr	r1, [r7, #28]
   116ec:	mov	r0, r9
   116f0:	mov	r2, #7
   116f4:	bl	11ab8 <vetor_insere@@Base>
   116f8:	ldr	r1, [r7, #32]
   116fc:	mov	r0, r9
   11700:	mov	r2, #8
   11704:	bl	11ab8 <vetor_insere@@Base>
   11708:	ldr	r1, [r7, #36]	; 0x24
   1170c:	mov	r0, r9
   11710:	mov	r2, #9
   11714:	bl	11ab8 <vetor_insere@@Base>
   11718:	ldr	r1, [r7, #40]	; 0x28
   1171c:	mov	r0, r9
   11720:	mov	r2, #10
   11724:	bl	11ab8 <vetor_insere@@Base>
   11728:	ldr	r1, [r7, #44]	; 0x2c
   1172c:	mov	r0, r9
   11730:	mov	r2, #11
   11734:	bl	11ab8 <vetor_insere@@Base>
   11738:	ldr	r1, [r7, #48]	; 0x30
   1173c:	mov	r0, r9
   11740:	mov	r2, #12
   11744:	bl	11ab8 <vetor_insere@@Base>
   11748:	mov	r0, #10
   1174c:	bl	10d20 <putchar@plt>
   11750:	movw	r0, #12368	; 0x3050
   11754:	ldr	r8, [r9]
   11758:	mov	sl, #0
   1175c:	movt	r0, #2
   11760:	ldr	r7, [r0]
   11764:	movw	r0, #12696	; 0x3198
   11768:	movt	r0, #2
   1176c:	cmp	r8, #1
   11770:	ldr	r5, [r0]
   11774:	blt	1179c <main@@Base+0x6d4>
   11778:	ldr	r4, [r9, #8]
   1177c:	mov	sl, #0
   11780:	ldr	r1, [r4], #4
   11784:	mov	r0, r7
   11788:	bl	10c9c <strcmp@plt>
   1178c:	cmp	r0, #0
   11790:	addeq	sl, sl, #1
   11794:	subs	r8, r8, #1
   11798:	bne	11780 <main@@Base+0x6b8>
   1179c:	movw	r1, #9041	; 0x2351
   117a0:	ldr	r8, [sp, #8]
   117a4:	mov	r0, r5
   117a8:	mov	r2, r7
   117ac:	mov	r3, sl
   117b0:	movt	r1, #1
   117b4:	bl	10d14 <fprintf@plt>
   117b8:	movw	r0, #12368	; 0x3050
   117bc:	ldr	r4, [r9]
   117c0:	movt	r0, #2
   117c4:	ldr	r7, [r0, #4]
   117c8:	movw	r0, #12696	; 0x3198
   117cc:	movt	r0, #2
   117d0:	cmp	r4, #1
   117d4:	ldr	sl, [r0]
   117d8:	blt	11800 <main@@Base+0x738>
   117dc:	ldr	r5, [r9, #8]
   117e0:	mov	r6, #0
   117e4:	ldr	r1, [r5], #4
   117e8:	mov	r0, r7
   117ec:	bl	10c9c <strcmp@plt>
   117f0:	cmp	r0, #0
   117f4:	addeq	r6, r6, #1
   117f8:	subs	r4, r4, #1
   117fc:	bne	117e4 <main@@Base+0x71c>
   11800:	movw	r1, #9041	; 0x2351
   11804:	mov	r0, sl
   11808:	mov	r2, r7
   1180c:	mov	r3, r6
   11810:	movt	r1, #1
   11814:	bl	10d14 <fprintf@plt>
   11818:	movw	r0, #12368	; 0x3050
   1181c:	ldr	r4, [r9]
   11820:	mov	r6, #0
   11824:	mov	sl, #0
   11828:	movt	r0, #2
   1182c:	ldr	r7, [r0, #8]
   11830:	movw	r0, #12696	; 0x3198
   11834:	movt	r0, #2
   11838:	cmp	r4, #1
   1183c:	ldr	r0, [r0]
   11840:	str	r0, [sp]
   11844:	blt	1186c <main@@Base+0x7a4>
   11848:	ldr	r5, [r9, #8]
   1184c:	mov	sl, #0
   11850:	ldr	r1, [r5], #4
   11854:	mov	r0, r7
   11858:	bl	10c9c <strcmp@plt>
   1185c:	cmp	r0, #0
   11860:	addeq	sl, sl, #1
   11864:	subs	r4, r4, #1
   11868:	bne	11850 <main@@Base+0x788>
   1186c:	ldr	r0, [sp]
   11870:	movw	r1, #9041	; 0x2351
   11874:	mov	r2, r7
   11878:	mov	r3, sl
   1187c:	movt	r1, #1
   11880:	bl	10d14 <fprintf@plt>
   11884:	movw	r0, #12368	; 0x3050
   11888:	ldr	r4, [r9]
   1188c:	movt	r0, #2
   11890:	ldr	r7, [r0, #12]
   11894:	movw	r0, #12696	; 0x3198
   11898:	movt	r0, #2
   1189c:	cmp	r4, #1
   118a0:	ldr	sl, [r0]
   118a4:	blt	118cc <main@@Base+0x804>
   118a8:	ldr	r5, [r9, #8]
   118ac:	mov	r6, #0
   118b0:	ldr	r1, [r5], #4
   118b4:	mov	r0, r7
   118b8:	bl	10c9c <strcmp@plt>
   118bc:	cmp	r0, #0
   118c0:	addeq	r6, r6, #1
   118c4:	subs	r4, r4, #1
   118c8:	bne	118b0 <main@@Base+0x7e8>
   118cc:	movw	r1, #9041	; 0x2351
   118d0:	mov	r0, sl
   118d4:	mov	r2, r7
   118d8:	mov	r3, r6
   118dc:	movt	r1, #1
   118e0:	bl	10d14 <fprintf@plt>
   118e4:	mov	r0, r8
   118e8:	bl	11994 <vetor_apaga@@Base>
   118ec:	ldr	r0, [sp, #12]
   118f0:	bl	11e60 <lista_apaga@@Base>
   118f4:	ldr	r0, [sp, #4]
   118f8:	bl	11e60 <lista_apaga@@Base>
   118fc:	mov	r0, r9
   11900:	bl	11994 <vetor_apaga@@Base>
   11904:	mov	r0, #0
   11908:	sub	sp, fp, #28
   1190c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11910:	movw	r9, #9026	; 0x2342
   11914:	mov	r7, #1
   11918:	movt	r9, #1
   1191c:	movw	r0, #12696	; 0x3198
   11920:	sub	r1, r7, #1
   11924:	movt	r0, #2
   11928:	ldr	sl, [r0]
   1192c:	mov	r0, r6
   11930:	bl	11a88 <vetor_elemento@@Base>
   11934:	mov	r3, r0
   11938:	mov	r0, sl
   1193c:	mov	r1, r9
   11940:	mov	r2, r7
   11944:	bl	10d14 <fprintf@plt>
   11948:	cmp	r7, #2
   1194c:	bhi	11660 <main@@Base+0x598>
   11950:	ldr	r1, [r6]
   11954:	add	r0, r7, #1
   11958:	cmp	r7, r1
   1195c:	mov	r7, r0
   11960:	bge	11660 <main@@Base+0x598>
   11964:	b	1191c <main@@Base+0x854>

00011968 <vetor_novo@@Base>:
   11968:	push	{fp, lr}
   1196c:	mov	fp, sp
   11970:	mov	r0, #12
   11974:	bl	10ce4 <malloc@plt>
   11978:	cmp	r0, #0
   1197c:	moveq	r0, #0
   11980:	movne	r1, #0
   11984:	strne	r1, [r0]
   11988:	strne	r1, [r0, #4]
   1198c:	strne	r1, [r0, #8]
   11990:	pop	{fp, pc}

00011994 <vetor_apaga@@Base>:
   11994:	cmp	r0, #0
   11998:	bxeq	lr
   1199c:	push	{r4, r5, fp, lr}
   119a0:	add	fp, sp, #8
   119a4:	ldr	r1, [r0]
   119a8:	mov	r4, r0
   119ac:	ldr	r0, [r0, #8]
   119b0:	cmp	r1, #1
   119b4:	blt	119d8 <vetor_apaga@@Base+0x44>
   119b8:	mov	r5, #0
   119bc:	ldr	r0, [r0, r5, lsl #2]
   119c0:	bl	10ca8 <free@plt>
   119c4:	ldr	r1, [r4]
   119c8:	ldr	r0, [r4, #8]
   119cc:	add	r5, r5, #1
   119d0:	cmp	r5, r1
   119d4:	blt	119bc <vetor_apaga@@Base+0x28>
   119d8:	bl	10ca8 <free@plt>
   119dc:	mov	r0, r4
   119e0:	pop	{r4, r5, fp, lr}
   119e4:	b	10ca8 <free@plt>

000119e8 <vetor_atribui@@Base>:
   119e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   119ec:	add	fp, sp, #24
   119f0:	mvn	r5, #0
   119f4:	cmp	r0, #0
   119f8:	beq	11a70 <vetor_atribui@@Base+0x88>
   119fc:	mov	r4, r1
   11a00:	cmp	r1, #0
   11a04:	bmi	11a70 <vetor_atribui@@Base+0x88>
   11a08:	mov	r7, r0
   11a0c:	ldr	r0, [r0]
   11a10:	cmp	r0, r4
   11a14:	ble	11a70 <vetor_atribui@@Base+0x88>
   11a18:	mov	r0, r2
   11a1c:	mov	r8, r2
   11a20:	bl	10d08 <strlen@plt>
   11a24:	mov	r9, r0
   11a28:	ldr	r0, [r7, #8]
   11a2c:	ldr	r6, [r0, r4, lsl #2]
   11a30:	mov	r0, r6
   11a34:	bl	10d08 <strlen@plt>
   11a38:	cmp	r9, r0
   11a3c:	bls	11a60 <vetor_atribui@@Base+0x78>
   11a40:	add	r1, r9, #1
   11a44:	mov	r0, r6
   11a48:	bl	10cb4 <realloc@plt>
   11a4c:	mov	r6, r0
   11a50:	ldr	r0, [r7, #8]
   11a54:	cmp	r6, #0
   11a58:	str	r6, [r0, r4, lsl #2]
   11a5c:	beq	11a70 <vetor_atribui@@Base+0x88>
   11a60:	mov	r0, r6
   11a64:	mov	r1, r8
   11a68:	bl	10ccc <strcpy@plt>
   11a6c:	mov	r5, r4
   11a70:	mov	r0, r5
   11a74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011a78 <vetor_tamanho@@Base>:
   11a78:	cmp	r0, #0
   11a7c:	ldrne	r0, [r0]
   11a80:	mvneq	r0, #0
   11a84:	bx	lr

00011a88 <vetor_elemento@@Base>:
   11a88:	mov	r2, r0
   11a8c:	mov	r0, #0
   11a90:	cmp	r2, #0
   11a94:	beq	11ab4 <vetor_elemento@@Base+0x2c>
   11a98:	cmp	r1, #0
   11a9c:	bmi	11ab4 <vetor_elemento@@Base+0x2c>
   11aa0:	ldr	r3, [r2]
   11aa4:	cmp	r3, r1
   11aa8:	bxle	lr
   11aac:	ldr	r0, [r2, #8]
   11ab0:	ldr	r0, [r0, r1, lsl #2]
   11ab4:	bx	lr

00011ab8 <vetor_insere@@Base>:
   11ab8:	push	{r4, r5, r6, r7, fp, lr}
   11abc:	add	fp, sp, #16
   11ac0:	mvn	r4, #0
   11ac4:	cmp	r0, #0
   11ac8:	beq	11bd0 <vetor_insere@@Base+0x118>
   11acc:	mov	r5, r2
   11ad0:	cmp	r2, #0
   11ad4:	bmi	11bd0 <vetor_insere@@Base+0x118>
   11ad8:	mov	r6, r0
   11adc:	ldr	r0, [r0]
   11ae0:	cmp	r0, r5
   11ae4:	blt	11bd0 <vetor_insere@@Base+0x118>
   11ae8:	mov	r7, r1
   11aec:	ldr	r1, [r6, #4]
   11af0:	cmp	r0, r1
   11af4:	bne	11b24 <vetor_insere@@Base+0x6c>
   11af8:	cmp	r0, #0
   11afc:	lsl	r1, r0, #1
   11b00:	movweq	r1, #1
   11b04:	str	r1, [r6, #4]
   11b08:	lsl	r1, r1, #2
   11b0c:	ldr	r0, [r6, #8]
   11b10:	bl	10cb4 <realloc@plt>
   11b14:	cmp	r0, #0
   11b18:	str	r0, [r6, #8]
   11b1c:	beq	11bd0 <vetor_insere@@Base+0x118>
   11b20:	ldr	r0, [r6]
   11b24:	cmp	r0, r5
   11b28:	ble	11b94 <vetor_insere@@Base+0xdc>
   11b2c:	sub	r1, r0, r5
   11b30:	tst	r1, #1
   11b34:	mov	r1, r0
   11b38:	beq	11b4c <vetor_insere@@Base+0x94>
   11b3c:	ldr	r2, [r6, #8]
   11b40:	sub	r1, r0, #1
   11b44:	ldr	r3, [r2, r1, lsl #2]
   11b48:	str	r3, [r2, r0, lsl #2]
   11b4c:	add	r2, r5, #1
   11b50:	cmp	r0, r2
   11b54:	beq	11b94 <vetor_insere@@Base+0xdc>
   11b58:	lsl	r0, r1, #2
   11b5c:	sub	r1, r1, #1
   11b60:	ldr	r2, [r6, #8]
   11b64:	ldr	r3, [r2, r1, lsl #2]
   11b68:	str	r3, [r2, r0]
   11b6c:	ldr	r2, [r6, #8]
   11b70:	add	r3, r2, r0
   11b74:	sub	r0, r0, #8
   11b78:	ldr	r3, [r3, #-8]
   11b7c:	str	r3, [r2, r1, lsl #2]
   11b80:	sub	r2, r1, #2
   11b84:	sub	r1, r1, #1
   11b88:	cmp	r1, r5
   11b8c:	mov	r1, r2
   11b90:	bgt	11b60 <vetor_insere@@Base+0xa8>
   11b94:	mov	r0, r7
   11b98:	bl	10d08 <strlen@plt>
   11b9c:	add	r0, r0, #1
   11ba0:	mov	r1, #1
   11ba4:	bl	10c90 <calloc@plt>
   11ba8:	ldr	r1, [r6, #8]
   11bac:	cmp	r0, #0
   11bb0:	str	r0, [r1, r5, lsl #2]
   11bb4:	beq	11bd0 <vetor_insere@@Base+0x118>
   11bb8:	mov	r1, r7
   11bbc:	bl	10ccc <strcpy@plt>
   11bc0:	ldr	r0, [r6]
   11bc4:	mov	r4, r5
   11bc8:	add	r0, r0, #1
   11bcc:	str	r0, [r6]
   11bd0:	mov	r0, r4
   11bd4:	pop	{r4, r5, r6, r7, fp, pc}

00011bd8 <vetor_remove@@Base>:
   11bd8:	push	{r4, r5, fp, lr}
   11bdc:	add	fp, sp, #8
   11be0:	mov	r4, r0
   11be4:	mvn	r0, #0
   11be8:	cmp	r4, #0
   11bec:	beq	11ca0 <vetor_remove@@Base+0xc8>
   11bf0:	mov	r5, r1
   11bf4:	cmp	r1, #0
   11bf8:	bmi	11ca0 <vetor_remove@@Base+0xc8>
   11bfc:	ldr	r1, [r4]
   11c00:	cmp	r1, r5
   11c04:	pople	{r4, r5, fp, pc}
   11c08:	ldr	r0, [r4, #8]
   11c0c:	ldr	r0, [r0, r5, lsl #2]
   11c10:	bl	10ca8 <free@plt>
   11c14:	ldr	r0, [r4]
   11c18:	add	r1, r5, #1
   11c1c:	cmp	r1, r0
   11c20:	bge	11c94 <vetor_remove@@Base+0xbc>
   11c24:	mvn	r2, r5
   11c28:	sub	ip, r0, #2
   11c2c:	add	r2, r0, r2
   11c30:	tst	r2, #1
   11c34:	bne	11c4c <vetor_remove@@Base+0x74>
   11c38:	mov	r2, r1
   11c3c:	mov	r1, r5
   11c40:	cmp	ip, r5
   11c44:	bne	11c64 <vetor_remove@@Base+0x8c>
   11c48:	b	11c94 <vetor_remove@@Base+0xbc>
   11c4c:	ldr	r2, [r4, #8]
   11c50:	ldr	r3, [r2, r1, lsl #2]
   11c54:	str	r3, [r2, r5, lsl #2]
   11c58:	add	r2, r5, #2
   11c5c:	cmp	ip, r5
   11c60:	beq	11c94 <vetor_remove@@Base+0xbc>
   11c64:	ldr	r3, [r4, #8]
   11c68:	ldr	r5, [r3, r2, lsl #2]
   11c6c:	str	r5, [r3, r1, lsl #2]
   11c70:	ldr	r1, [r4, #8]
   11c74:	add	r3, r1, r2, lsl #2
   11c78:	ldr	r3, [r3, #4]
   11c7c:	str	r3, [r1, r2, lsl #2]
   11c80:	add	r3, r2, #2
   11c84:	add	r1, r2, #1
   11c88:	cmp	r3, r0
   11c8c:	mov	r2, r3
   11c90:	blt	11c64 <vetor_remove@@Base+0x8c>
   11c94:	sub	r0, r0, #1
   11c98:	str	r0, [r4]
   11c9c:	mov	r0, #0
   11ca0:	pop	{r4, r5, fp, pc}

00011ca4 <vetor_pesquisa@@Base>:
   11ca4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ca8:	add	fp, sp, #24
   11cac:	mvn	r8, #0
   11cb0:	cmp	r0, #0
   11cb4:	beq	11cf0 <vetor_pesquisa@@Base+0x4c>
   11cb8:	ldr	r6, [r0]
   11cbc:	cmp	r6, #1
   11cc0:	blt	11cf0 <vetor_pesquisa@@Base+0x4c>
   11cc4:	ldr	r4, [r0, #8]
   11cc8:	mov	r5, r1
   11ccc:	mov	r7, #0
   11cd0:	ldr	r0, [r4, r7, lsl #2]
   11cd4:	mov	r1, r5
   11cd8:	bl	10c9c <strcmp@plt>
   11cdc:	cmp	r0, #0
   11ce0:	beq	11cf8 <vetor_pesquisa@@Base+0x54>
   11ce4:	add	r7, r7, #1
   11ce8:	cmp	r7, r6
   11cec:	blt	11cd0 <vetor_pesquisa@@Base+0x2c>
   11cf0:	mov	r0, r8
   11cf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11cf8:	mov	r0, r7
   11cfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011d00 <vetor_ordena@@Base>:
   11d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d04:	add	fp, sp, #28
   11d08:	sub	sp, sp, #4
   11d0c:	cmp	r0, #0
   11d10:	beq	11dac <vetor_ordena@@Base+0xac>
   11d14:	ldr	r1, [r0]
   11d18:	mov	sl, r0
   11d1c:	mov	r0, #0
   11d20:	cmp	r1, #2
   11d24:	str	r1, [sp]
   11d28:	blt	11dbc <vetor_ordena@@Base+0xbc>
   11d2c:	ldr	r5, [sl, #8]
   11d30:	mov	r8, #1
   11d34:	b	11d50 <vetor_ordena@@Base+0x50>
   11d38:	mov	r4, r8
   11d3c:	ldr	r0, [sp]
   11d40:	add	r8, r8, #1
   11d44:	str	r6, [r5, r4, lsl #2]
   11d48:	cmp	r8, r0
   11d4c:	bge	11db8 <vetor_ordena@@Base+0xb8>
   11d50:	sub	r9, r8, #1
   11d54:	ldr	r6, [r5, r8, lsl #2]
   11d58:	ldr	r7, [r5, r9, lsl #2]
   11d5c:	mov	r0, r6
   11d60:	mov	r1, r7
   11d64:	bl	10c9c <strcmp@plt>
   11d68:	cmn	r0, #1
   11d6c:	bgt	11d38 <vetor_ordena@@Base+0x38>
   11d70:	add	r0, r5, r9, lsl #2
   11d74:	mov	r4, r9
   11d78:	cmp	r9, #1
   11d7c:	str	r7, [r0, #4]
   11d80:	ldr	r5, [sl, #8]
   11d84:	blt	11d3c <vetor_ordena@@Base+0x3c>
   11d88:	add	r0, r5, r4, lsl #2
   11d8c:	ldr	r7, [r0, #-4]
   11d90:	mov	r0, r6
   11d94:	mov	r1, r7
   11d98:	bl	10c9c <strcmp@plt>
   11d9c:	sub	r9, r4, #1
   11da0:	cmp	r0, #0
   11da4:	bmi	11d70 <vetor_ordena@@Base+0x70>
   11da8:	b	11d3c <vetor_ordena@@Base+0x3c>
   11dac:	mvn	r0, #0
   11db0:	sub	sp, fp, #28
   11db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11db8:	mov	r0, #0
   11dbc:	sub	sp, fp, #28
   11dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011dc4 <novo_str@@Base>:
   11dc4:	push	{r4, r5, r6, sl, fp, lr}
   11dc8:	add	fp, sp, #16
   11dcc:	mov	r6, r0
   11dd0:	mov	r0, #12
   11dd4:	bl	10ce4 <malloc@plt>
   11dd8:	mov	r5, #0
   11ddc:	cmp	r0, #0
   11de0:	beq	11e1c <novo_str@@Base+0x58>
   11de4:	mov	r4, r0
   11de8:	mov	r0, r6
   11dec:	bl	10d08 <strlen@plt>
   11df0:	add	r0, r0, #1
   11df4:	bl	10ce4 <malloc@plt>
   11df8:	cmp	r0, #0
   11dfc:	str	r0, [r4]
   11e00:	beq	11e24 <novo_str@@Base+0x60>
   11e04:	mov	r1, r6
   11e08:	bl	10ccc <strcpy@plt>
   11e0c:	mov	r0, #0
   11e10:	mov	r5, r4
   11e14:	str	r0, [r4, #4]
   11e18:	str	r0, [r4, #8]
   11e1c:	mov	r0, r5
   11e20:	pop	{r4, r5, r6, sl, fp, pc}
   11e24:	mov	r0, r4
   11e28:	bl	10ca8 <free@plt>
   11e2c:	mov	r0, r5
   11e30:	pop	{r4, r5, r6, sl, fp, pc}

00011e34 <lista_nova@@Base>:
   11e34:	push	{fp, lr}
   11e38:	mov	fp, sp
   11e3c:	mov	r0, #12
   11e40:	bl	10ce4 <malloc@plt>
   11e44:	cmp	r0, #0
   11e48:	moveq	r0, #0
   11e4c:	movne	r1, #0
   11e50:	strne	r1, [r0]
   11e54:	strne	r1, [r0, #4]
   11e58:	strne	r1, [r0, #8]
   11e5c:	pop	{fp, pc}

00011e60 <lista_apaga@@Base>:
   11e60:	cmp	r0, #0
   11e64:	bxeq	lr
   11e68:	push	{r4, r5, fp, lr}
   11e6c:	add	fp, sp, #8
   11e70:	mov	r4, r0
   11e74:	ldr	r5, [r4]
   11e78:	cmp	r5, #0
   11e7c:	beq	11e9c <lista_apaga@@Base+0x3c>
   11e80:	ldr	r0, [r5, #4]
   11e84:	str	r0, [r4]
   11e88:	ldr	r0, [r5]
   11e8c:	bl	10ca8 <free@plt>
   11e90:	mov	r0, r5
   11e94:	bl	10ca8 <free@plt>
   11e98:	b	11e74 <lista_apaga@@Base+0x14>
   11e9c:	mov	r0, r4
   11ea0:	pop	{r4, r5, fp, lr}
   11ea4:	b	10ca8 <free@plt>

00011ea8 <lista_tamanho@@Base>:
   11ea8:	cmp	r0, #0
   11eac:	ldrne	r0, [r0, #8]
   11eb0:	mvneq	r0, #0
   11eb4:	bx	lr

00011eb8 <lista_inicio@@Base>:
   11eb8:	cmp	r0, #0
   11ebc:	ldrne	r0, [r0]
   11ec0:	moveq	r0, #0
   11ec4:	bx	lr

00011ec8 <lista_fim@@Base>:
   11ec8:	cmp	r0, #0
   11ecc:	ldrne	r0, [r0, #4]
   11ed0:	moveq	r0, #0
   11ed4:	bx	lr

00011ed8 <lista_insere@@Base>:
   11ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11edc:	add	fp, sp, #24
   11ee0:	cmp	r0, #0
   11ee4:	mov	r7, #0
   11ee8:	movne	r6, r1
   11eec:	cmpne	r1, #0
   11ef0:	bne	11efc <lista_insere@@Base+0x24>
   11ef4:	mov	r0, r7
   11ef8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11efc:	mov	r5, r0
   11f00:	mov	r0, #12
   11f04:	mov	r8, r2
   11f08:	bl	10ce4 <malloc@plt>
   11f0c:	cmp	r0, #0
   11f10:	beq	11ef4 <lista_insere@@Base+0x1c>
   11f14:	mov	r4, r0
   11f18:	mov	r0, r6
   11f1c:	bl	10d08 <strlen@plt>
   11f20:	add	r0, r0, #1
   11f24:	bl	10ce4 <malloc@plt>
   11f28:	cmp	r0, #0
   11f2c:	str	r0, [r4]
   11f30:	beq	11f80 <lista_insere@@Base+0xa8>
   11f34:	mov	r1, r6
   11f38:	bl	10ccc <strcpy@plt>
   11f3c:	mov	r0, #0
   11f40:	cmp	r8, #0
   11f44:	str	r0, [r4, #4]
   11f48:	str	r0, [r4, #8]
   11f4c:	ldr	r1, [r5, #8]
   11f50:	ldr	r0, [r5]
   11f54:	add	r1, r1, #1
   11f58:	str	r1, [r5, #8]
   11f5c:	beq	11f90 <lista_insere@@Base+0xb8>
   11f60:	cmp	r0, r8
   11f64:	beq	11fa8 <lista_insere@@Base+0xd0>
   11f68:	ldr	r0, [r8, #8]
   11f6c:	str	r8, [r4, #4]
   11f70:	str	r0, [r4, #8]
   11f74:	str	r4, [r0, #4]
   11f78:	str	r4, [r8, #8]
   11f7c:	b	11fc0 <lista_insere@@Base+0xe8>
   11f80:	mov	r0, r4
   11f84:	bl	10ca8 <free@plt>
   11f88:	mov	r0, r7
   11f8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11f90:	cmp	r0, #0
   11f94:	beq	11fb8 <lista_insere@@Base+0xe0>
   11f98:	ldr	r0, [r5, #4]
   11f9c:	str	r0, [r4, #8]
   11fa0:	str	r4, [r0, #4]
   11fa4:	b	11fbc <lista_insere@@Base+0xe4>
   11fa8:	str	r8, [r4, #4]
   11fac:	str	r4, [r8, #8]
   11fb0:	str	r4, [r5]
   11fb4:	b	11fc0 <lista_insere@@Base+0xe8>
   11fb8:	str	r4, [r5]
   11fbc:	str	r4, [r5, #4]
   11fc0:	mov	r7, r4
   11fc4:	mov	r0, r7
   11fc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011fcc <lista_remove@@Base>:
   11fcc:	push	{r4, r5, fp, lr}
   11fd0:	add	fp, sp, #8
   11fd4:	cmp	r0, #0
   11fd8:	mov	r4, #0
   11fdc:	movne	r5, r1
   11fe0:	cmpne	r1, #0
   11fe4:	bne	11ff0 <lista_remove@@Base+0x24>
   11fe8:	mov	r0, r4
   11fec:	pop	{r4, r5, fp, pc}
   11ff0:	ldr	r1, [r0, #8]
   11ff4:	sub	r1, r1, #1
   11ff8:	str	r1, [r0, #8]
   11ffc:	ldr	r1, [r5, #8]
   12000:	ldr	r4, [r5, #4]
   12004:	cmp	r1, #0
   12008:	beq	12018 <lista_remove@@Base+0x4c>
   1200c:	str	r4, [r1, #4]
   12010:	ldr	r4, [r5, #4]
   12014:	b	1201c <lista_remove@@Base+0x50>
   12018:	str	r4, [r0]
   1201c:	cmp	r4, #0
   12020:	add	r2, r4, #8
   12024:	addeq	r2, r0, #4
   12028:	str	r1, [r2]
   1202c:	ldr	r0, [r5]
   12030:	bl	10ca8 <free@plt>
   12034:	mov	r0, r5
   12038:	bl	10ca8 <free@plt>
   1203c:	mov	r0, r4
   12040:	pop	{r4, r5, fp, pc}

00012044 <lista_pesquisa@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	cmp	r0, #0
   12050:	mov	r4, #0
   12054:	movne	r5, r1
   12058:	cmpne	r1, #0
   1205c:	bne	12068 <lista_pesquisa@@Base+0x24>
   12060:	mov	r0, r4
   12064:	pop	{r4, r5, r6, sl, fp, pc}
   12068:	cmp	r2, #1
   1206c:	bhi	12060 <lista_pesquisa@@Base+0x1c>
   12070:	cmp	r2, #0
   12074:	beq	120a8 <lista_pesquisa@@Base+0x64>
   12078:	ldr	r6, [r0, #4]
   1207c:	cmp	r6, #0
   12080:	beq	12060 <lista_pesquisa@@Base+0x1c>
   12084:	ldr	r0, [r6]
   12088:	mov	r1, r5
   1208c:	bl	10c9c <strcmp@plt>
   12090:	cmp	r0, #0
   12094:	beq	120d8 <lista_pesquisa@@Base+0x94>
   12098:	ldr	r6, [r6, #8]
   1209c:	cmp	r6, #0
   120a0:	bne	12084 <lista_pesquisa@@Base+0x40>
   120a4:	b	12060 <lista_pesquisa@@Base+0x1c>
   120a8:	ldr	r6, [r0]
   120ac:	cmp	r6, #0
   120b0:	beq	12060 <lista_pesquisa@@Base+0x1c>
   120b4:	ldr	r0, [r6]
   120b8:	mov	r1, r5
   120bc:	bl	10c9c <strcmp@plt>
   120c0:	cmp	r0, #0
   120c4:	beq	120d8 <lista_pesquisa@@Base+0x94>
   120c8:	ldr	r6, [r6, #4]
   120cc:	cmp	r6, #0
   120d0:	bne	120b4 <lista_pesquisa@@Base+0x70>
   120d4:	b	12060 <lista_pesquisa@@Base+0x1c>
   120d8:	mov	r4, r6
   120dc:	mov	r0, r4
   120e0:	pop	{r4, r5, r6, sl, fp, pc}

000120e4 <lista_ordena@@Base>:
   120e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   120e8:	add	fp, sp, #24
   120ec:	cmp	r0, #0
   120f0:	beq	12170 <lista_ordena@@Base+0x8c>
   120f4:	ldr	r0, [r0]
   120f8:	mov	r8, #0
   120fc:	mov	r5, r0
   12100:	ldr	r4, [r5, #4]!
   12104:	cmp	r4, #0
   12108:	bne	12120 <lista_ordena@@Base+0x3c>
   1210c:	b	12174 <lista_ordena@@Base+0x90>
   12110:	mov	r5, r0
   12114:	ldr	r4, [r5, #4]!
   12118:	cmp	r4, #0
   1211c:	beq	12174 <lista_ordena@@Base+0x90>
   12120:	mov	r9, r0
   12124:	mov	r7, r0
   12128:	mov	r6, r4
   1212c:	ldr	r1, [r7]
   12130:	ldr	r0, [r6]
   12134:	bl	10c9c <strcmp@plt>
   12138:	cmp	r0, #0
   1213c:	movmi	r7, r6
   12140:	ldr	r6, [r6, #4]
   12144:	cmp	r6, #0
   12148:	bne	1212c <lista_ordena@@Base+0x48>
   1214c:	cmp	r7, r9
   12150:	mov	r0, r4
   12154:	beq	12110 <lista_ordena@@Base+0x2c>
   12158:	ldr	r0, [r9]
   1215c:	ldr	r1, [r7]
   12160:	str	r1, [r9]
   12164:	str	r0, [r7]
   12168:	ldr	r0, [r5]
   1216c:	b	12110 <lista_ordena@@Base+0x2c>
   12170:	mvn	r8, #0
   12174:	mov	r0, r8
   12178:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001217c <lista_inverte@@Base>:
   1217c:	push	{fp, lr}
   12180:	mov	fp, sp
   12184:	cmp	r0, #0
   12188:	beq	121e4 <lista_inverte@@Base+0x68>
   1218c:	ldr	r2, [r0, #8]
   12190:	mov	r1, #0
   12194:	cmp	r2, #2
   12198:	blt	12218 <lista_inverte@@Base+0x9c>
   1219c:	sub	r1, r2, #2
   121a0:	cmp	r1, #0
   121a4:	ble	121f0 <lista_inverte@@Base+0x74>
   121a8:	ldr	ip, [r0]
   121ac:	ldr	r3, [ip, #4]
   121b0:	mov	r2, r3
   121b4:	ldr	r3, [r3, #4]
   121b8:	subs	r1, r1, #1
   121bc:	ldr	lr, [r2, #8]
   121c0:	str	r3, [lr, #4]
   121c4:	ldr	r3, [r2, #4]
   121c8:	str	lr, [r3, #8]
   121cc:	str	ip, [r2, #4]
   121d0:	str	r2, [ip, #8]
   121d4:	mov	ip, r2
   121d8:	bne	121b0 <lista_inverte@@Base+0x34>
   121dc:	str	r2, [r0]
   121e0:	b	121f4 <lista_inverte@@Base+0x78>
   121e4:	mvn	r1, #0
   121e8:	mov	r0, r1
   121ec:	pop	{fp, pc}
   121f0:	ldr	r2, [r0]
   121f4:	ldr	r3, [r0, #4]
   121f8:	mov	r1, #0
   121fc:	ldr	ip, [r3, #8]
   12200:	str	ip, [r0, #4]
   12204:	str	r1, [ip, #4]
   12208:	str	r2, [r3, #4]
   1220c:	str	r1, [r3, #8]
   12210:	str	r3, [r2, #8]
   12214:	str	r3, [r0]
   12218:	mov	r0, r1
   1221c:	pop	{fp, pc}

00012220 <__libc_csu_init@@Base>:
   12220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12224:	mov	r7, r0
   12228:	ldr	r6, [pc, #72]	; 12278 <__libc_csu_init@@Base+0x58>
   1222c:	ldr	r5, [pc, #72]	; 1227c <__libc_csu_init@@Base+0x5c>
   12230:	add	r6, pc, r6
   12234:	add	r5, pc, r5
   12238:	sub	r6, r6, r5
   1223c:	mov	r8, r1
   12240:	mov	r9, r2
   12244:	bl	10c70 <calloc@plt-0x20>
   12248:	asrs	r6, r6, #2
   1224c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12250:	mov	r4, #0
   12254:	add	r4, r4, #1
   12258:	ldr	r3, [r5], #4
   1225c:	mov	r2, r9
   12260:	mov	r1, r8
   12264:	mov	r0, r7
   12268:	blx	r3
   1226c:	cmp	r6, r4
   12270:	bne	12254 <__libc_csu_init@@Base+0x34>
   12274:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12278:	ldrdeq	r0, [r1], -r4
   1227c:	andeq	r0, r1, ip, asr #25

00012280 <__libc_csu_fini@@Base>:
   12280:	bx	lr

Disassembly of section .fini:

00012284 <.fini>:
   12284:	push	{r3, lr}
   12288:	pop	{r3, pc}
