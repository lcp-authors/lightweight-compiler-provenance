
../compcert-repos/prog2/CMakeFiles/MT1E1-1.2.dir/Extras/Miniteste1-Exemplo1/2/prob2.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <analisarFicheiro>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	sub	sp, sp, #68	; 0x44
   8:	mov	r8, r0
   c:	mov	r0, #104	; 0x68
  10:	str	r1, [sp, #4]
  14:	bl	0 <malloc>
  18:	ldr	r7, [pc, #180]	; d4 <analisarFicheiro+0xd4>
  1c:	mov	r5, #0
  20:	mov	sl, #104	; 0x68
  24:	mov	r9, #1
  28:	mov	r6, r0
  2c:	add	r2, sp, #12
  30:	mov	r1, r7
  34:	mov	r0, r8
  38:	bl	0 <__isoc99_fscanf>
  3c:	cmn	r0, #1
  40:	beq	c0 <analisarFicheiro+0xc0>
  44:	mov	fp, r6
  48:	mov	r4, #0
  4c:	b	68 <analisarFicheiro+0x68>
  50:	cmp	r5, r4
  54:	add	r4, r4, #1
  58:	beq	8c <analisarFicheiro+0x8c>
  5c:	cmp	r4, r5
  60:	add	fp, fp, #104	; 0x68
  64:	bgt	2c <analisarFicheiro+0x2c>
  68:	mov	r1, fp
  6c:	add	r0, sp, #12
  70:	bl	0 <strcmp>
  74:	cmp	r0, #0
  78:	bne	50 <analisarFicheiro+0x50>
  7c:	ldr	r2, [fp, #100]	; 0x64
  80:	add	r2, r2, #1
  84:	str	r2, [fp, #100]	; 0x64
  88:	b	2c <analisarFicheiro+0x2c>
  8c:	add	r5, r5, #1
  90:	mov	r0, r6
  94:	mul	r4, sl, r5
  98:	mov	r1, r4
  9c:	bl	0 <realloc>
  a0:	sub	r3, r4, #104	; 0x68
  a4:	add	r1, sp, #12
  a8:	add	r3, r0, r3
  ac:	mov	r6, r0
  b0:	mov	r0, r3
  b4:	bl	0 <strcpy>
  b8:	str	r9, [r0, #100]	; 0x64
  bc:	b	2c <analisarFicheiro+0x2c>
  c0:	ldr	r3, [sp, #4]
  c4:	mov	r0, r6
  c8:	str	r5, [r3]
  cc:	add	sp, sp, #68	; 0x44
  d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  d4:	.word	0x00000000

000000d8 <gerarRelatorio>:
  d8:	push	{r4, r5, r6, r7, r8, lr}
  dc:	mov	r3, r0
  e0:	mov	r7, r2
  e4:	sub	sp, sp, #8
  e8:	mov	r6, r0
  ec:	mov	r4, r1
  f0:	mov	r2, #53	; 0x35
  f4:	mov	r1, #1
  f8:	ldr	r0, [pc, #68]	; 144 <gerarRelatorio+0x6c>
  fc:	bl	0 <fwrite>
 100:	cmp	r7, #0
 104:	ble	13c <gerarRelatorio+0x64>
 108:	ldr	r8, [pc, #56]	; 148 <gerarRelatorio+0x70>
 10c:	mov	r5, #0
 110:	ldr	r3, [r4, #100]	; 0x64
 114:	add	r5, r5, #1
 118:	str	r3, [sp]
 11c:	mov	r2, r5
 120:	mov	r3, r4
 124:	mov	r1, r8
 128:	mov	r0, r6
 12c:	bl	0 <fprintf>
 130:	cmp	r7, r5
 134:	add	r4, r4, #104	; 0x68
 138:	bne	110 <gerarRelatorio+0x38>
 13c:	add	sp, sp, #8
 140:	pop	{r4, r5, r6, r7, r8, pc}
 144:	.word	0x00000004
 148:	.word	0x0000003c

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, lr}
   4:	sub	sp, sp, #112	; 0x70
   8:	ldr	r0, [pc, #148]	; a4 <main+0xa4>
   c:	bl	0 <printf>
  10:	add	r1, sp, #8
  14:	ldr	r0, [pc, #140]	; a8 <main+0xa8>
  18:	bl	0 <__isoc99_scanf>
  1c:	ldr	r0, [pc, #136]	; ac <main+0xac>
  20:	bl	0 <printf>
  24:	add	r1, sp, #60	; 0x3c
  28:	ldr	r0, [pc, #120]	; a8 <main+0xa8>
  2c:	bl	0 <__isoc99_scanf>
  30:	add	r0, sp, #8
  34:	ldr	r1, [pc, #116]	; b0 <main+0xb0>
  38:	bl	0 <fopen>
  3c:	subs	r4, r0, #0
  40:	beq	9c <main+0x9c>
  44:	add	r0, sp, #60	; 0x3c
  48:	ldr	r1, [pc, #100]	; b4 <main+0xb4>
  4c:	bl	0 <fopen>
  50:	subs	r5, r0, #0
  54:	beq	9c <main+0x9c>
  58:	add	r1, sp, #4
  5c:	mov	r0, r4
  60:	bl	0 <main>
  64:	ldr	r2, [sp, #4]
  68:	mov	r1, r0
  6c:	mov	r6, r0
  70:	mov	r0, r5
  74:	bl	d8 <gerarRelatorio>
  78:	mov	r0, r4
  7c:	bl	0 <fclose>
  80:	mov	r0, r5
  84:	bl	0 <fclose>
  88:	mov	r0, r6
  8c:	bl	0 <free>
  90:	mov	r0, #0
  94:	add	sp, sp, #112	; 0x70
  98:	pop	{r4, r5, r6, pc}
  9c:	mov	r0, #1
  a0:	b	94 <main+0x94>
  a4:	.word	0x0000004c
  a8:	.word	0x00000000
  ac:	.word	0x00000064
  b0:	.word	0x00000078
  b4:	.word	0x0000007c
