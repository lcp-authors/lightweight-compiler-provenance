
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

000103e4 <.init>:
   103e4:	push	{r3, lr}
   103e8:	bl	104b8 <getc@plt+0x3c>
   103ec:	pop	{r3, pc}

Disassembly of section .plt:

000103f0 <printf@plt-0x14>:
   103f0:	push	{lr}		; (str lr, [sp, #-4]!)
   103f4:	ldr	lr, [pc, #4]	; 10400 <printf@plt-0x4>
   103f8:	add	lr, pc, lr
   103fc:	ldr	pc, [lr, #8]!
   10400:	andeq	r0, r1, r0, lsl #24

00010404 <printf@plt>:
   10404:	add	ip, pc, #0, 12
   10408:	add	ip, ip, #16, 20	; 0x10000
   1040c:	ldr	pc, [ip, #3072]!	; 0xc00

00010410 <fopen@plt>:
   10410:	add	ip, pc, #0, 12
   10414:	add	ip, ip, #16, 20	; 0x10000
   10418:	ldr	pc, [ip, #3064]!	; 0xbf8

0001041c <free@plt>:
   1041c:	add	ip, pc, #0, 12
   10420:	add	ip, ip, #16, 20	; 0x10000
   10424:	ldr	pc, [ip, #3056]!	; 0xbf0

00010428 <malloc@plt>:
   10428:	add	ip, pc, #0, 12
   1042c:	add	ip, ip, #16, 20	; 0x10000
   10430:	ldr	pc, [ip, #3048]!	; 0xbe8

00010434 <__libc_start_main@plt>:
   10434:	add	ip, pc, #0, 12
   10438:	add	ip, ip, #16, 20	; 0x10000
   1043c:	ldr	pc, [ip, #3040]!	; 0xbe0

00010440 <__gmon_start__@plt>:
   10440:	add	ip, pc, #0, 12
   10444:	add	ip, ip, #16, 20	; 0x10000
   10448:	ldr	pc, [ip, #3032]!	; 0xbd8

0001044c <exit@plt>:
   1044c:	add	ip, pc, #0, 12
   10450:	add	ip, ip, #16, 20	; 0x10000
   10454:	ldr	pc, [ip, #3024]!	; 0xbd0

00010458 <fclose@plt>:
   10458:	add	ip, pc, #0, 12
   1045c:	add	ip, ip, #16, 20	; 0x10000
   10460:	ldr	pc, [ip, #3016]!	; 0xbc8

00010464 <fseek@plt>:
   10464:	add	ip, pc, #0, 12
   10468:	add	ip, ip, #16, 20	; 0x10000
   1046c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010470 <abort@plt>:
   10470:	add	ip, pc, #0, 12
   10474:	add	ip, ip, #16, 20	; 0x10000
   10478:	ldr	pc, [ip, #3000]!	; 0xbb8

0001047c <getc@plt>:
   1047c:	add	ip, pc, #0, 12
   10480:	add	ip, ip, #16, 20	; 0x10000
   10484:	ldr	pc, [ip, #2992]!	; 0xbb0

Disassembly of section .text:

00010488 <.text>:
   10488:	bleq	4c5cc <getc@plt+0x3c150>
   1048c:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10490:	strbtmi	fp, [sl], -r2, lsl #24
   10494:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10498:			; <UNDEFINED> instruction: 0xc010f8df
   1049c:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   104a0:	blmi	1224b4 <getc@plt+0x112038>
   104a4:	svc	0x00c6f7ff
   104a8:	svc	0x00e2f7ff
   104ac:	andeq	r0, r1, sp, asr r9
   104b0:			; <UNDEFINED> instruction: 0x000105b8
   104b4:	andeq	r0, r1, sp, lsl r9
   104b8:	ldr	r3, [pc, #20]	; 104d4 <getc@plt+0x58>
   104bc:	ldr	r2, [pc, #20]	; 104d8 <getc@plt+0x5c>
   104c0:	add	r3, pc, r3
   104c4:	ldr	r2, [r3, r2]
   104c8:	cmp	r2, #0
   104cc:	bxeq	lr
   104d0:	b	10440 <__gmon_start__@plt>
   104d4:	andeq	r0, r1, r8, lsr fp
   104d8:	andeq	r0, r0, r8, lsr r0
   104dc:	subeq	pc, r4, r1, asr #4
   104e0:	andeq	pc, r2, r0, asr #5
   104e4:	movteq	pc, #16961	; 0x4241	; <UNPREDICTABLE>
   104e8:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   104ec:	andle	r4, r5, r3, lsl #5
   104f0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   104f4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   104f8:	ldrmi	fp, [r8, -r3, lsl #2]
   104fc:	svclt	0x00004770
   10500:	subeq	pc, r4, r1, asr #4
   10504:	andeq	pc, r2, r0, asr #5
   10508:	cmpeq	r4, r1, asr #4	; <UNPREDICTABLE>
   1050c:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   10510:	svceq	0x00d91a0b
   10514:			; <UNDEFINED> instruction: 0x01a3eb01
   10518:	andle	r1, r5, r9, asr #32
   1051c:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10520:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10524:	ldrmi	fp, [r8, -r3, lsl #2]
   10528:	svclt	0x00004770
   1052c:	vqrshl.s8	d27, d0, d1
   10530:	vmls.i<illegal width 8>	d16, d0, d0[1]
   10534:	stmdavc	r3!, {r1, sl}
   10538:			; <UNDEFINED> instruction: 0xf7ffb91b
   1053c:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10540:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10544:	svclt	0x0000e7dc
   10548:	mov	ip, sp
   1054c:	sub	sp, sp, #24
   10550:	str	ip, [sp, #8]
   10554:	str	lr, [sp, #12]
   10558:	str	r4, [sp, #16]
   1055c:	str	r5, [sp, #20]
   10560:	ldr	ip, [pc, #76]	; 105b4 <getc@plt+0x138>
   10564:	ldr	r4, [r0, r1, lsl #2]
   10568:	add	r3, r2, r2, lsl #1
   1056c:	ldrb	r3, [r4, r3]
   10570:	ldr	r4, [r0, r1, lsl #2]
   10574:	add	r5, r2, r2, lsl #1
   10578:	add	r4, r4, r5
   1057c:	ldrb	r5, [r4, #1]
   10580:	ldr	r0, [r0, r1, lsl #2]
   10584:	add	r4, r2, r2, lsl #1
   10588:	add	r0, r0, r4
   1058c:	ldrb	r0, [r0, #2]
   10590:	str	r0, [sp, #4]
   10594:	str	r5, [sp]
   10598:	mov	r0, ip
   1059c:	bl	10404 <printf@plt>
   105a0:	ldr	r4, [sp, #16]
   105a4:	ldr	r5, [sp, #20]
   105a8:	ldr	lr, [sp, #12]
   105ac:	add	sp, sp, #24
   105b0:	bx	lr
   105b4:	andeq	r0, r1, r1, lsr #20
   105b8:	mov	ip, sp
   105bc:	sub	sp, sp, #32
   105c0:	str	ip, [sp]
   105c4:	str	lr, [sp, #4]
   105c8:	str	r4, [sp, #8]
   105cc:	str	r5, [sp, #12]
   105d0:	str	r6, [sp, #16]
   105d4:	str	r7, [sp, #20]
   105d8:	str	r8, [sp, #24]
   105dc:	str	r9, [sp, #28]
   105e0:	ldr	r0, [pc, #796]	; 10904 <getc@plt+0x488>
   105e4:	ldr	r1, [pc, #788]	; 10900 <getc@plt+0x484>
   105e8:	bl	10410 <fopen@plt>
   105ec:	mov	r4, r0
   105f0:	mov	r0, r4
   105f4:	bl	1047c <getc@plt>
   105f8:	cmp	r0, #66	; 0x42
   105fc:	bne	10618 <getc@plt+0x19c>
   10600:	mov	r0, r4
   10604:	bl	1047c <getc@plt>
   10608:	cmp	r0, #77	; 0x4d
   1060c:	moveq	r1, #1
   10610:	movne	r1, #0
   10614:	b	1061c <getc@plt+0x1a0>
   10618:	mov	r1, #0
   1061c:	cmp	r1, #0
   10620:	bne	10634 <getc@plt+0x1b8>
   10624:	ldr	r0, [pc, #744]	; 10914 <getc@plt+0x498>
   10628:	bl	10404 <printf@plt>
   1062c:	mov	r0, #1
   10630:	bl	1044c <exit@plt>
   10634:	mov	r0, r4
   10638:	bl	1047c <getc@plt>
   1063c:	mov	r6, r0
   10640:	mov	r0, r4
   10644:	bl	1047c <getc@plt>
   10648:	mov	r7, r0
   1064c:	mov	r0, r4
   10650:	bl	1047c <getc@plt>
   10654:	mov	r5, r0
   10658:	mov	r0, r4
   1065c:	bl	1047c <getc@plt>
   10660:	orr	r1, r6, r7, lsl #8
   10664:	orr	r2, r1, r5, lsl #16
   10668:	orr	r1, r2, r0, lsl #24
   1066c:	ldr	r0, [pc, #644]	; 108f8 <getc@plt+0x47c>
   10670:	bl	10404 <printf@plt>
   10674:	mov	r1, #4
   10678:	mov	r2, #1
   1067c:	mov	r0, r4
   10680:	bl	10464 <fseek@plt>
   10684:	mov	r0, r4
   10688:	bl	1047c <getc@plt>
   1068c:	mov	r6, r0
   10690:	mov	r0, r4
   10694:	bl	1047c <getc@plt>
   10698:	mov	r7, r0
   1069c:	mov	r0, r4
   106a0:	bl	1047c <getc@plt>
   106a4:	mov	r5, r0
   106a8:	mov	r0, r4
   106ac:	bl	1047c <getc@plt>
   106b0:	orr	r1, r6, r7, lsl #8
   106b4:	orr	ip, r1, r5, lsl #16
   106b8:	orr	r7, ip, r0, lsl #24
   106bc:	mov	r1, #4
   106c0:	mov	r2, #1
   106c4:	mov	r0, r4
   106c8:	bl	10464 <fseek@plt>
   106cc:	mov	r0, r4
   106d0:	bl	1047c <getc@plt>
   106d4:	mov	r5, r0
   106d8:	mov	r0, r4
   106dc:	bl	1047c <getc@plt>
   106e0:	mov	r8, r0
   106e4:	mov	r0, r4
   106e8:	bl	1047c <getc@plt>
   106ec:	mov	r6, r0
   106f0:	mov	r0, r4
   106f4:	bl	1047c <getc@plt>
   106f8:	orr	r3, r5, r8, lsl #8
   106fc:	orr	ip, r3, r6, lsl #16
   10700:	orr	r5, ip, r0, lsl #24
   10704:	ldr	r0, [pc, #524]	; 10918 <getc@plt+0x49c>
   10708:	mov	r1, r5
   1070c:	bl	10404 <printf@plt>
   10710:	mov	r0, r4
   10714:	bl	1047c <getc@plt>
   10718:	mov	r9, r0
   1071c:	mov	r0, r4
   10720:	bl	1047c <getc@plt>
   10724:	mov	r6, r0
   10728:	mov	r0, r4
   1072c:	bl	1047c <getc@plt>
   10730:	mov	r8, r0
   10734:	mov	r0, r4
   10738:	bl	1047c <getc@plt>
   1073c:	orr	ip, r9, r6, lsl #8
   10740:	orr	r2, ip, r8, lsl #16
   10744:	orr	r8, r2, r0, lsl #24
   10748:	ldr	r0, [pc, #448]	; 10910 <getc@plt+0x494>
   1074c:	mov	r1, r8
   10750:	bl	10404 <printf@plt>
   10754:	mov	r0, r4
   10758:	bl	1047c <getc@plt>
   1075c:	mov	r6, r0
   10760:	mov	r0, r4
   10764:	bl	1047c <getc@plt>
   10768:	orr	r2, r6, r0, lsl #8
   1076c:	cmp	r2, #1
   10770:	beq	10784 <getc@plt+0x308>
   10774:	ldr	r0, [pc, #384]	; 108fc <getc@plt+0x480>
   10778:	bl	10404 <printf@plt>
   1077c:	mov	r0, #2
   10780:	bl	1044c <exit@plt>
   10784:	mov	r0, r4
   10788:	bl	1047c <getc@plt>
   1078c:	mov	r6, r0
   10790:	mov	r0, r4
   10794:	bl	1047c <getc@plt>
   10798:	orr	r6, r6, r0, lsl #8
   1079c:	ldr	r0, [pc, #356]	; 10908 <getc@plt+0x48c>
   107a0:	mov	r1, r6
   107a4:	bl	10404 <printf@plt>
   107a8:	cmp	r6, #24
   107ac:	beq	107c0 <getc@plt+0x344>
   107b0:	ldr	r0, [pc, #340]	; 1090c <getc@plt+0x490>
   107b4:	bl	10404 <printf@plt>
   107b8:	mov	r0, #3
   107bc:	bl	1044c <exit@plt>
   107c0:	mov	r2, #0
   107c4:	mov	r1, r7
   107c8:	mov	r0, r4
   107cc:	bl	10464 <fseek@plt>
   107d0:	lsl	r0, r8, #2
   107d4:	bl	10428 <malloc@plt>
   107d8:	mov	r7, r0
   107dc:	mov	r6, #0
   107e0:	cmp	r6, r8
   107e4:	bge	107fc <getc@plt+0x380>
   107e8:	add	r0, r5, r5, lsl #1
   107ec:	bl	10428 <malloc@plt>
   107f0:	str	r0, [r7, r6, lsl #2]
   107f4:	add	r6, r6, #1
   107f8:	b	107e0 <getc@plt+0x364>
   107fc:	sub	r9, r8, #1
   10800:	cmp	r9, #0
   10804:	blt	10874 <getc@plt+0x3f8>
   10808:	mov	r6, #0
   1080c:	cmp	r6, r5
   10810:	bge	1086c <getc@plt+0x3f0>
   10814:	mov	r0, r4
   10818:	bl	1047c <getc@plt>
   1081c:	ldr	r3, [r7, r9, lsl #2]
   10820:	add	ip, r6, r6, lsl #1
   10824:	add	r1, r3, ip
   10828:	and	ip, r0, #255	; 0xff
   1082c:	strb	ip, [r1, #2]
   10830:	mov	r0, r4
   10834:	bl	1047c <getc@plt>
   10838:	ldr	r2, [r7, r9, lsl #2]
   1083c:	add	r1, r6, r6, lsl #1
   10840:	add	r1, r2, r1
   10844:	and	r0, r0, #255	; 0xff
   10848:	strb	r0, [r1, #1]
   1084c:	mov	r0, r4
   10850:	bl	1047c <getc@plt>
   10854:	ldr	ip, [r7, r9, lsl #2]
   10858:	add	r1, r6, r6, lsl #1
   1085c:	and	r2, r0, #255	; 0xff
   10860:	strb	r2, [ip, r1]
   10864:	add	r6, r6, #1
   10868:	b	1080c <getc@plt+0x390>
   1086c:	sub	r9, r9, #1
   10870:	b	10800 <getc@plt+0x384>
   10874:	mov	r0, r4
   10878:	bl	10458 <fclose@plt>
   1087c:	mov	r1, #0
   10880:	mov	r2, #0
   10884:	mov	r0, r7
   10888:	bl	10548 <getc@plt+0xcc>
   1088c:	mov	r1, #532	; 0x214
   10890:	mov	r2, #0
   10894:	mov	r0, r7
   10898:	bl	10548 <getc@plt+0xcc>
   1089c:	mov	r1, #408	; 0x198
   108a0:	movw	r2, #443	; 0x1bb
   108a4:	mov	r0, r7
   108a8:	bl	10548 <getc@plt+0xcc>
   108ac:	mov	r4, #0
   108b0:	cmp	r4, r8
   108b4:	bge	108c8 <getc@plt+0x44c>
   108b8:	ldr	r0, [r7, r4, lsl #2]
   108bc:	bl	1041c <free@plt>
   108c0:	add	r4, r4, #1
   108c4:	b	108b0 <getc@plt+0x434>
   108c8:	mov	r0, r7
   108cc:	bl	1041c <free@plt>
   108d0:	mov	r0, #0
   108d4:	ldr	r4, [sp, #8]
   108d8:	ldr	r5, [sp, #12]
   108dc:	ldr	r6, [sp, #16]
   108e0:	ldr	r7, [sp, #20]
   108e4:	ldr	r8, [sp, #24]
   108e8:	ldr	r9, [sp, #28]
   108ec:	ldr	lr, [sp, #4]
   108f0:	add	sp, sp, #32
   108f4:	bx	lr
   108f8:	strdeq	r0, [r1], -ip
   108fc:	andeq	r0, r1, r2, ror sl
   10900:	andeq	r0, r1, pc, lsl sl
   10904:	ldrdeq	r0, [r1], -r2
   10908:	andeq	r0, r1, r7, asr #20
   1090c:	andeq	r0, r1, r7, ror #21
   10910:	andeq	r0, r1, sp, ror fp
   10914:	andeq	r0, r1, r3, asr #22
   10918:	andeq	r0, r1, fp, asr sl
   1091c:	mvnsmi	lr, #737280	; 0xb4000
   10920:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   10924:	strmi	r4, [r8], ip, lsl #26
   10928:			; <UNDEFINED> instruction: 0x4691447e
   1092c:			; <UNDEFINED> instruction: 0xf7ff447d
   10930:	blne	1dcbea0 <getc@plt+0x1dbba24>
   10934:	strhle	r1, [sl], -r6
   10938:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   1093c:	svccc	0x0004f855
   10940:	strbmi	r4, [r1], -sl, asr #12
   10944:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10948:	adcmi	r4, r6, #152, 14	; 0x2600000
   1094c:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10950:	svclt	0x000083f8
   10954:	andeq	r0, r1, r8, ror #11
   10958:	andeq	r0, r1, r0, ror #11
   1095c:	svclt	0x00004770

Disassembly of section .fini:

00010960 <.fini>:
   10960:	push	{r3, lr}
   10964:	pop	{r3, pc}
