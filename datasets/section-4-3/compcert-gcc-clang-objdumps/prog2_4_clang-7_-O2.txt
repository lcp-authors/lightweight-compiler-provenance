
../compcert-repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010a9c <.init>:
   10a9c:	push	{r3, lr}
   10aa0:	bl	10b94 <_start@@Base+0x3c>
   10aa4:	pop	{r3, pc}

Disassembly of section .plt:

00010aa8 <strcmp@plt-0x14>:
   10aa8:	push	{lr}		; (str lr, [sp, #-4]!)
   10aac:	ldr	lr, [pc, #4]	; 10ab8 <strcmp@plt-0x4>
   10ab0:	add	lr, pc, lr
   10ab4:	ldr	pc, [lr, #8]!
   10ab8:	andeq	r2, r1, r8, asr #10

00010abc <strcmp@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #73728	; 0x12000
   10ac4:	ldr	pc, [ip, #1352]!	; 0x548

00010ac8 <printf@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1344]!	; 0x540

00010ad4 <free@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1336]!	; 0x538

00010ae0 <strdup@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1328]!	; 0x530

00010aec <strcpy@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1320]!	; 0x528

00010af8 <puts@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1312]!	; 0x520

00010b04 <malloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1304]!	; 0x518

00010b10 <__libc_start_main@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1296]!	; 0x510

00010b1c <__gmon_start__@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1288]!	; 0x508

00010b28 <strlen@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1280]!	; 0x500

00010b34 <setvbuf@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b40 <putchar@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b4c <abort@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00010b58 <_start@@Base>:
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <_start@@Base+0x30>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <_start@@Base+0x34>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <_start@@Base+0x38>
   10b80:	bl	10b10 <__libc_start_main@plt>
   10b84:	bl	10b4c <abort@plt>
   10b88:	andeq	r1, r1, r0, lsl sp
   10b8c:	strdeq	r1, [r1], -r4
   10b90:			; <UNDEFINED> instruction: 0x00011cb0
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <_start@@Base+0x58>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <_start@@Base+0x5c>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10b1c <__gmon_start__@plt>
   10bb0:	andeq	r2, r1, ip, asr r4
   10bb4:	andeq	r0, r0, r0, asr #32
   10bb8:	ldr	r0, [pc, #24]	; 10bd8 <_start@@Base+0x80>
   10bbc:	ldr	r3, [pc, #24]	; 10bdc <_start@@Base+0x84>
   10bc0:	cmp	r3, r0
   10bc4:	bxeq	lr
   10bc8:	ldr	r3, [pc, #16]	; 10be0 <_start@@Base+0x88>
   10bcc:	cmp	r3, #0
   10bd0:	bxeq	lr
   10bd4:	bx	r3
   10bd8:	andeq	r3, r2, ip, asr #32
   10bdc:	andeq	r3, r2, ip, asr #32
   10be0:	andeq	r0, r0, r0
   10be4:	ldr	r0, [pc, #36]	; 10c10 <_start@@Base+0xb8>
   10be8:	ldr	r1, [pc, #36]	; 10c14 <_start@@Base+0xbc>
   10bec:	sub	r1, r1, r0
   10bf0:	asr	r1, r1, #2
   10bf4:	add	r1, r1, r1, lsr #31
   10bf8:	asrs	r1, r1, #1
   10bfc:	bxeq	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <_start@@Base+0xc0>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r3, r2, ip, asr #32
   10c14:	andeq	r3, r2, ip, asr #32
   10c18:	andeq	r0, r0, r0
   10c1c:	push	{r4, lr}
   10c20:	ldr	r4, [pc, #24]	; 10c40 <_start@@Base+0xe8>
   10c24:	ldrb	r3, [r4]
   10c28:	cmp	r3, #0
   10c2c:	popne	{r4, pc}
   10c30:	bl	10bb8 <_start@@Base+0x60>
   10c34:	mov	r3, #1
   10c38:	strb	r3, [r4]
   10c3c:	pop	{r4, pc}
   10c40:	andeq	r3, r2, r8, asr r0
   10c44:	b	10be4 <_start@@Base+0x8c>

00010c48 <_l@@Base>:
   10c48:	sub	sp, sp, #12
   10c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c50:	add	fp, sp, #28
   10c54:	sub	sp, sp, #8
   10c58:	mov	r9, r0
   10c5c:	add	r0, fp, #8
   10c60:	stm	r0, {r1, r2, r3}
   10c64:	mov	r0, #12
   10c68:	bl	10b04 <malloc@plt>
   10c6c:	mov	r1, #0
   10c70:	mov	r8, r0
   10c74:	cmp	r9, #1
   10c78:	str	r1, [r0]
   10c7c:	stmib	r0, {r1, r9}
   10c80:	add	r0, fp, #8
   10c84:	str	r0, [sp, #4]
   10c88:	blt	10cfc <_l@@Base+0xb4>
   10c8c:	mov	r5, #0
   10c90:	ldr	r0, [sp, #4]
   10c94:	cmp	r5, #0
   10c98:	mov	sl, r8
   10c9c:	addne	sl, r6, #4
   10ca0:	add	r1, r0, #4
   10ca4:	str	r1, [sp, #4]
   10ca8:	ldr	r7, [r0]
   10cac:	mov	r0, #12
   10cb0:	bl	10b04 <malloc@plt>
   10cb4:	cmp	r5, #0
   10cb8:	mov	r4, r0
   10cbc:	str	r0, [sl]
   10cc0:	moveq	r6, r5
   10cc4:	str	r6, [r0, #8]
   10cc8:	mov	r0, r7
   10ccc:	bl	10b28 <strlen@plt>
   10cd0:	add	r0, r0, #1
   10cd4:	bl	10b04 <malloc@plt>
   10cd8:	mov	r1, r7
   10cdc:	str	r0, [r4]
   10ce0:	bl	10aec <strcpy@plt>
   10ce4:	add	r5, r5, #1
   10ce8:	mov	r6, r4
   10cec:	cmp	r9, r5
   10cf0:	bne	10c90 <_l@@Base+0x48>
   10cf4:	mov	r1, #0
   10cf8:	b	10cfc <_l@@Base+0xb4>
   10cfc:	str	r1, [r4, #4]
   10d00:	str	r4, [r8, #4]
   10d04:	mov	r0, r8
   10d08:	sub	sp, fp, #28
   10d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d10:	add	sp, sp, #12
   10d14:	bx	lr

00010d18 <_f@@Base>:
   10d18:	cmp	r0, #0
   10d1c:	moveq	r0, #0
   10d20:	bxeq	lr
   10d24:	ldr	r0, [r0]
   10d28:	mov	r2, #0
   10d2c:	cmp	r1, #1
   10d30:	blt	10d58 <_f@@Base+0x40>
   10d34:	cmp	r0, #0
   10d38:	beq	10d58 <_f@@Base+0x40>
   10d3c:	mov	r2, #0
   10d40:	ldr	r0, [r0, #4]
   10d44:	add	r2, r2, #1
   10d48:	cmp	r2, r1
   10d4c:	bge	10d58 <_f@@Base+0x40>
   10d50:	cmp	r0, #0
   10d54:	bne	10d40 <_f@@Base+0x28>
   10d58:	cmp	r2, r1
   10d5c:	ldreq	r0, [r0]
   10d60:	movwne	r0, #8722	; 0x2212
   10d64:	movtne	r0, #1
   10d68:	bx	lr

00010d6c <teste_lista_nova@@Base>:
   10d6c:	push	{r4, sl, fp, lr}
   10d70:	add	fp, sp, #8
   10d74:	movw	r0, #7460	; 0x1d24
   10d78:	movt	r0, #1
   10d7c:	bl	10ac8 <printf@plt>
   10d80:	bl	11890 <lista_nova@@Base>
   10d84:	cmp	r0, #0
   10d88:	beq	10db4 <teste_lista_nova@@Base+0x48>
   10d8c:	mov	r4, r0
   10d90:	ldr	r0, [r0, #8]
   10d94:	cmp	r0, #0
   10d98:	beq	10dd0 <teste_lista_nova@@Base+0x64>
   10d9c:	movw	r0, #7497	; 0x1d49
   10da0:	movt	r0, #1
   10da4:	bl	10ac8 <printf@plt>
   10da8:	mov	r0, r4
   10dac:	bl	118b4 <lista_apaga@@Base>
   10db0:	b	10dc0 <teste_lista_nova@@Base+0x54>
   10db4:	movw	r0, #7475	; 0x1d33
   10db8:	movt	r0, #1
   10dbc:	bl	10ac8 <printf@plt>
   10dc0:	mov	r0, #10
   10dc4:	bl	10b40 <putchar@plt>
   10dc8:	mov	r0, #1
   10dcc:	pop	{r4, sl, fp, pc}
   10dd0:	mov	r0, r4
   10dd4:	bl	118b4 <lista_apaga@@Base>
   10dd8:	movw	r0, #8723	; 0x2213
   10ddc:	movt	r0, #1
   10de0:	bl	10af8 <puts@plt>
   10de4:	mov	r0, #0
   10de8:	pop	{r4, sl, fp, pc}

00010dec <teste_lista_insere@@Base>:
   10dec:	push	{r4, r5, r6, r7, fp, lr}
   10df0:	add	fp, sp, #16
   10df4:	movw	r1, #7532	; 0x1d6c
   10df8:	mov	r0, #2
   10dfc:	movt	r1, #1
   10e00:	mov	r2, r1
   10e04:	bl	10c48 <_l@@Base>
   10e08:	mov	r5, r0
   10e0c:	movw	r0, #7542	; 0x1d76
   10e10:	movt	r0, #1
   10e14:	bl	10ac8 <printf@plt>
   10e18:	ldr	r0, [r5]
   10e1c:	movw	r1, #7536	; 0x1d70
   10e20:	movt	r1, #1
   10e24:	ldr	r2, [r0, #4]
   10e28:	mov	r0, r5
   10e2c:	bl	11950 <lista_insere@@Base>
   10e30:	mov	r4, #0
   10e34:	cmp	r0, #0
   10e38:	bne	10e4c <teste_lista_insere@@Base+0x60>
   10e3c:	movw	r0, #7559	; 0x1d87
   10e40:	movt	r0, #1
   10e44:	bl	10ac8 <printf@plt>
   10e48:	mov	r4, #1
   10e4c:	ldr	r0, [r5, #8]
   10e50:	cmp	r0, #3
   10e54:	beq	10e74 <teste_lista_insere@@Base+0x88>
   10e58:	movw	r0, #7601	; 0x1db1
   10e5c:	movt	r0, #1
   10e60:	bl	10ac8 <printf@plt>
   10e64:	ldr	r0, [r5, #8]
   10e68:	add	r4, r4, #1
   10e6c:	cmp	r0, #3
   10e70:	bne	110c0 <teste_lista_insere@@Base+0x2d4>
   10e74:	ldr	r6, [r5]
   10e78:	movw	r1, #7532	; 0x1d6c
   10e7c:	movt	r1, #1
   10e80:	ldr	r0, [r6]
   10e84:	bl	10abc <strcmp@plt>
   10e88:	cmp	r0, #0
   10e8c:	bne	10ec8 <teste_lista_insere@@Base+0xdc>
   10e90:	ldr	r7, [r6, #4]
   10e94:	movw	r1, #7536	; 0x1d70
   10e98:	movt	r1, #1
   10e9c:	ldr	r0, [r7]
   10ea0:	bl	10abc <strcmp@plt>
   10ea4:	cmp	r0, #0
   10ea8:	bne	10ec8 <teste_lista_insere@@Base+0xdc>
   10eac:	ldr	r0, [r7, #4]
   10eb0:	movw	r1, #7532	; 0x1d6c
   10eb4:	movt	r1, #1
   10eb8:	ldr	r0, [r0]
   10ebc:	bl	10abc <strcmp@plt>
   10ec0:	cmp	r0, #0
   10ec4:	beq	10edc <teste_lista_insere@@Base+0xf0>
   10ec8:	movw	r0, #7661	; 0x1ded
   10ecc:	movt	r0, #1
   10ed0:	bl	10ac8 <printf@plt>
   10ed4:	ldr	r6, [r5]
   10ed8:	add	r4, r4, #1
   10edc:	movw	r1, #7536	; 0x1d70
   10ee0:	mov	r0, r5
   10ee4:	mov	r2, r6
   10ee8:	movt	r1, #1
   10eec:	bl	11950 <lista_insere@@Base>
   10ef0:	ldr	r1, [r5]
   10ef4:	cmp	r0, r1
   10ef8:	beq	10f0c <teste_lista_insere@@Base+0x120>
   10efc:	movw	r0, #7715	; 0x1e23
   10f00:	movt	r0, #1
   10f04:	bl	10ac8 <printf@plt>
   10f08:	add	r4, r4, #1
   10f0c:	ldr	r0, [r5, #8]
   10f10:	cmp	r0, #4
   10f14:	beq	10f34 <teste_lista_insere@@Base+0x148>
   10f18:	movw	r0, #7763	; 0x1e53
   10f1c:	movt	r0, #1
   10f20:	bl	10ac8 <printf@plt>
   10f24:	ldr	r0, [r5, #8]
   10f28:	add	r4, r4, #1
   10f2c:	cmp	r0, #4
   10f30:	bne	110c0 <teste_lista_insere@@Base+0x2d4>
   10f34:	ldr	r6, [r5]
   10f38:	movw	r1, #7536	; 0x1d70
   10f3c:	movt	r1, #1
   10f40:	ldr	r0, [r6]
   10f44:	bl	10abc <strcmp@plt>
   10f48:	cmp	r0, #0
   10f4c:	bne	10fa4 <teste_lista_insere@@Base+0x1b8>
   10f50:	ldr	r6, [r6, #4]
   10f54:	movw	r1, #7532	; 0x1d6c
   10f58:	movt	r1, #1
   10f5c:	ldr	r0, [r6]
   10f60:	bl	10abc <strcmp@plt>
   10f64:	cmp	r0, #0
   10f68:	bne	10fa4 <teste_lista_insere@@Base+0x1b8>
   10f6c:	ldr	r6, [r6, #4]
   10f70:	movw	r1, #7536	; 0x1d70
   10f74:	movt	r1, #1
   10f78:	ldr	r0, [r6]
   10f7c:	bl	10abc <strcmp@plt>
   10f80:	cmp	r0, #0
   10f84:	bne	10fa4 <teste_lista_insere@@Base+0x1b8>
   10f88:	ldr	r0, [r6, #4]
   10f8c:	movw	r1, #7532	; 0x1d6c
   10f90:	movt	r1, #1
   10f94:	ldr	r0, [r0]
   10f98:	bl	10abc <strcmp@plt>
   10f9c:	cmp	r0, #0
   10fa0:	beq	10fb4 <teste_lista_insere@@Base+0x1c8>
   10fa4:	movw	r0, #7661	; 0x1ded
   10fa8:	movt	r0, #1
   10fac:	bl	10ac8 <printf@plt>
   10fb0:	add	r4, r4, #1
   10fb4:	movw	r1, #7536	; 0x1d70
   10fb8:	mov	r0, r5
   10fbc:	mov	r2, #0
   10fc0:	movt	r1, #1
   10fc4:	bl	11950 <lista_insere@@Base>
   10fc8:	ldr	r0, [r5, #8]
   10fcc:	cmp	r0, #5
   10fd0:	beq	10ff0 <teste_lista_insere@@Base+0x204>
   10fd4:	movw	r0, #7823	; 0x1e8f
   10fd8:	movt	r0, #1
   10fdc:	bl	10ac8 <printf@plt>
   10fe0:	ldr	r0, [r5, #8]
   10fe4:	add	r4, r4, #1
   10fe8:	cmp	r0, #5
   10fec:	bne	110c0 <teste_lista_insere@@Base+0x2d4>
   10ff0:	ldr	r0, [r5]
   10ff4:	movw	r1, #7536	; 0x1d70
   10ff8:	movt	r1, #1
   10ffc:	ldr	r0, [r0, #4]
   11000:	ldr	r0, [r0, #4]
   11004:	ldr	r0, [r0, #4]
   11008:	ldr	r0, [r0, #4]
   1100c:	ldr	r0, [r0]
   11010:	bl	10abc <strcmp@plt>
   11014:	cmp	r0, #0
   11018:	beq	1102c <teste_lista_insere@@Base+0x240>
   1101c:	movw	r0, #7661	; 0x1ded
   11020:	movt	r0, #1
   11024:	bl	10ac8 <printf@plt>
   11028:	add	r4, r4, #1
   1102c:	mov	r0, r5
   11030:	bl	118b4 <lista_apaga@@Base>
   11034:	bl	11890 <lista_nova@@Base>
   11038:	movw	r1, #7536	; 0x1d70
   1103c:	mov	r2, #0
   11040:	mov	r5, r0
   11044:	movt	r1, #1
   11048:	bl	11950 <lista_insere@@Base>
   1104c:	ldr	r0, [r5, #8]
   11050:	cmp	r0, #1
   11054:	beq	11068 <teste_lista_insere@@Base+0x27c>
   11058:	movw	r0, #7883	; 0x1ecb
   1105c:	movt	r0, #1
   11060:	bl	10ac8 <printf@plt>
   11064:	add	r4, r4, #1
   11068:	mov	r0, r5
   1106c:	bl	11920 <lista_tamanho@@Base>
   11070:	cmp	r0, #1
   11074:	bne	110b8 <teste_lista_insere@@Base+0x2cc>
   11078:	ldr	r0, [r5]
   1107c:	movw	r1, #7536	; 0x1d70
   11080:	movt	r1, #1
   11084:	ldr	r0, [r0]
   11088:	bl	10abc <strcmp@plt>
   1108c:	cmp	r0, #0
   11090:	beq	110b0 <teste_lista_insere@@Base+0x2c4>
   11094:	movw	r0, #7661	; 0x1ded
   11098:	movt	r0, #1
   1109c:	bl	10ac8 <printf@plt>
   110a0:	mov	r0, r5
   110a4:	bl	118b4 <lista_apaga@@Base>
   110a8:	add	r4, r4, #1
   110ac:	b	110c0 <teste_lista_insere@@Base+0x2d4>
   110b0:	mov	r0, r5
   110b4:	bl	118b4 <lista_apaga@@Base>
   110b8:	cmp	r4, #0
   110bc:	beq	110d0 <teste_lista_insere@@Base+0x2e4>
   110c0:	mov	r0, #10
   110c4:	bl	10b40 <putchar@plt>
   110c8:	mov	r0, r4
   110cc:	pop	{r4, r5, r6, r7, fp, pc}
   110d0:	movw	r0, #8723	; 0x2213
   110d4:	movt	r0, #1
   110d8:	bl	10af8 <puts@plt>
   110dc:	mov	r4, #0
   110e0:	mov	r0, r4
   110e4:	pop	{r4, r5, r6, r7, fp, pc}

000110e8 <teste_lista_remove@@Base>:
   110e8:	push	{r4, r5, r6, sl, fp, lr}
   110ec:	add	fp, sp, #16
   110f0:	sub	sp, sp, #8
   110f4:	movw	r1, #7952	; 0x1f10
   110f8:	movw	r0, #7955	; 0x1f13
   110fc:	movw	r2, #7946	; 0x1f0a
   11100:	movw	r3, #7949	; 0x1f0d
   11104:	movt	r1, #1
   11108:	movt	r0, #1
   1110c:	movt	r2, #1
   11110:	movt	r3, #1
   11114:	str	r1, [sp]
   11118:	movw	r1, #7943	; 0x1f07
   1111c:	str	r0, [sp, #4]
   11120:	mov	r0, #5
   11124:	movt	r1, #1
   11128:	bl	10c48 <_l@@Base>
   1112c:	mov	r4, r0
   11130:	movw	r0, #7958	; 0x1f16
   11134:	movt	r0, #1
   11138:	bl	10ac8 <printf@plt>
   1113c:	ldr	r0, [r4]
   11140:	ldr	r0, [r0, #4]
   11144:	ldr	r0, [r0, #4]
   11148:	ldr	r1, [r0, #4]
   1114c:	mov	r0, r4
   11150:	bl	11a24 <lista_remove@@Base>
   11154:	ldr	r1, [r4, #4]
   11158:	cmp	r0, r1
   1115c:	beq	11174 <teste_lista_remove@@Base+0x8c>
   11160:	movw	r0, #7975	; 0x1f27
   11164:	movt	r0, #1
   11168:	bl	10ac8 <printf@plt>
   1116c:	mov	r5, #1
   11170:	b	11178 <teste_lista_remove@@Base+0x90>
   11174:	mov	r5, #0
   11178:	ldr	r0, [r4, #8]
   1117c:	cmp	r0, #4
   11180:	beq	11194 <teste_lista_remove@@Base+0xac>
   11184:	movw	r0, #8032	; 0x1f60
   11188:	movt	r0, #1
   1118c:	bl	10ac8 <printf@plt>
   11190:	add	r5, r5, #1
   11194:	ldr	r6, [r4]
   11198:	movw	r1, #7943	; 0x1f07
   1119c:	movt	r1, #1
   111a0:	ldr	r0, [r6]
   111a4:	bl	10abc <strcmp@plt>
   111a8:	cmp	r0, #0
   111ac:	bne	11204 <teste_lista_remove@@Base+0x11c>
   111b0:	ldr	r6, [r6, #4]
   111b4:	movw	r1, #7946	; 0x1f0a
   111b8:	movt	r1, #1
   111bc:	ldr	r0, [r6]
   111c0:	bl	10abc <strcmp@plt>
   111c4:	cmp	r0, #0
   111c8:	bne	11204 <teste_lista_remove@@Base+0x11c>
   111cc:	ldr	r6, [r6, #4]
   111d0:	movw	r1, #7949	; 0x1f0d
   111d4:	movt	r1, #1
   111d8:	ldr	r0, [r6]
   111dc:	bl	10abc <strcmp@plt>
   111e0:	cmp	r0, #0
   111e4:	bne	11204 <teste_lista_remove@@Base+0x11c>
   111e8:	ldr	r0, [r6, #4]
   111ec:	movw	r1, #7955	; 0x1f13
   111f0:	movt	r1, #1
   111f4:	ldr	r0, [r0]
   111f8:	bl	10abc <strcmp@plt>
   111fc:	cmp	r0, #0
   11200:	beq	11214 <teste_lista_remove@@Base+0x12c>
   11204:	movw	r0, #8092	; 0x1f9c
   11208:	movt	r0, #1
   1120c:	bl	10ac8 <printf@plt>
   11210:	add	r5, r5, #1
   11214:	mov	r0, r4
   11218:	mov	r1, #0
   1121c:	bl	11a24 <lista_remove@@Base>
   11220:	cmp	r0, #0
   11224:	beq	11244 <teste_lista_remove@@Base+0x15c>
   11228:	movw	r0, #8146	; 0x1fd2
   1122c:	movt	r0, #1
   11230:	bl	10ac8 <printf@plt>
   11234:	mov	r0, r4
   11238:	bl	118b4 <lista_apaga@@Base>
   1123c:	add	r5, r5, #1
   11240:	b	11254 <teste_lista_remove@@Base+0x16c>
   11244:	mov	r0, r4
   11248:	bl	118b4 <lista_apaga@@Base>
   1124c:	cmp	r5, #0
   11250:	beq	11268 <teste_lista_remove@@Base+0x180>
   11254:	mov	r0, #10
   11258:	bl	10b40 <putchar@plt>
   1125c:	mov	r0, r5
   11260:	sub	sp, fp, #16
   11264:	pop	{r4, r5, r6, sl, fp, pc}
   11268:	movw	r0, #8723	; 0x2213
   1126c:	movt	r0, #1
   11270:	bl	10af8 <puts@plt>
   11274:	mov	r5, #0
   11278:	b	1125c <teste_lista_remove@@Base+0x174>

0001127c <teste_lista_pesquisa@@Base>:
   1127c:	push	{r4, r5, r6, sl, fp, lr}
   11280:	add	fp, sp, #16
   11284:	sub	sp, sp, #16
   11288:	movw	r1, #7532	; 0x1d6c
   1128c:	movw	r6, #8196	; 0x2004
   11290:	mov	r0, #7
   11294:	movt	r1, #1
   11298:	movt	r6, #1
   1129c:	mov	r2, r1
   112a0:	mov	r3, r1
   112a4:	stm	sp, {r1, r6}
   112a8:	str	r1, [sp, #8]
   112ac:	str	r1, [sp, #12]
   112b0:	bl	10c48 <_l@@Base>
   112b4:	mov	r5, r0
   112b8:	movw	r0, #8199	; 0x2007
   112bc:	movt	r0, #1
   112c0:	bl	10ac8 <printf@plt>
   112c4:	mov	r0, r5
   112c8:	mov	r1, r6
   112cc:	mov	r2, #0
   112d0:	mov	r4, #0
   112d4:	bl	11ab4 <lista_pesquisa@@Base>
   112d8:	ldr	r1, [r5]
   112dc:	ldr	r1, [r1, #4]
   112e0:	ldr	r1, [r1, #4]
   112e4:	ldr	r1, [r1, #4]
   112e8:	ldr	r1, [r1, #4]
   112ec:	cmp	r0, r1
   112f0:	beq	11304 <teste_lista_pesquisa@@Base+0x88>
   112f4:	movw	r0, #8218	; 0x201a
   112f8:	movt	r0, #1
   112fc:	bl	10ac8 <printf@plt>
   11300:	mov	r4, #1
   11304:	movw	r1, #8289	; 0x2061
   11308:	mov	r0, r5
   1130c:	mov	r2, #0
   11310:	movt	r1, #1
   11314:	bl	11ab4 <lista_pesquisa@@Base>
   11318:	cmp	r0, #0
   1131c:	beq	11330 <teste_lista_pesquisa@@Base+0xb4>
   11320:	movw	r0, #8296	; 0x2068
   11324:	movt	r0, #1
   11328:	bl	10ac8 <printf@plt>
   1132c:	add	r4, r4, #1
   11330:	movw	r1, #7532	; 0x1d6c
   11334:	mov	r0, r5
   11338:	mov	r2, #1
   1133c:	movt	r1, #1
   11340:	bl	11ab4 <lista_pesquisa@@Base>
   11344:	ldr	r1, [r5]
   11348:	ldr	r1, [r1, #4]
   1134c:	ldr	r1, [r1, #4]
   11350:	ldr	r1, [r1, #4]
   11354:	ldr	r1, [r1, #4]
   11358:	ldr	r1, [r1, #4]
   1135c:	ldr	r1, [r1, #4]
   11360:	cmp	r0, r1
   11364:	beq	11378 <teste_lista_pesquisa@@Base+0xfc>
   11368:	movw	r0, #8218	; 0x201a
   1136c:	movt	r0, #1
   11370:	bl	10ac8 <printf@plt>
   11374:	add	r4, r4, #1
   11378:	movw	r1, #8289	; 0x2061
   1137c:	mov	r0, r5
   11380:	mov	r2, #1
   11384:	movt	r1, #1
   11388:	bl	11ab4 <lista_pesquisa@@Base>
   1138c:	cmp	r0, #0
   11390:	beq	113b0 <teste_lista_pesquisa@@Base+0x134>
   11394:	movw	r0, #8296	; 0x2068
   11398:	movt	r0, #1
   1139c:	bl	10ac8 <printf@plt>
   113a0:	mov	r0, r5
   113a4:	bl	118b4 <lista_apaga@@Base>
   113a8:	add	r4, r4, #1
   113ac:	b	113c0 <teste_lista_pesquisa@@Base+0x144>
   113b0:	mov	r0, r5
   113b4:	bl	118b4 <lista_apaga@@Base>
   113b8:	cmp	r4, #0
   113bc:	beq	113d4 <teste_lista_pesquisa@@Base+0x158>
   113c0:	mov	r0, #10
   113c4:	bl	10b40 <putchar@plt>
   113c8:	mov	r0, r4
   113cc:	sub	sp, fp, #16
   113d0:	pop	{r4, r5, r6, sl, fp, pc}
   113d4:	movw	r0, #8723	; 0x2213
   113d8:	movt	r0, #1
   113dc:	bl	10af8 <puts@plt>
   113e0:	mov	r4, #0
   113e4:	b	113c8 <teste_lista_pesquisa@@Base+0x14c>

000113e8 <teste_lista_ordena@@Base>:
   113e8:	push	{r4, r5, r6, sl, fp, lr}
   113ec:	add	fp, sp, #16
   113f0:	sub	sp, sp, #8
   113f4:	movw	r1, #8369	; 0x20b1
   113f8:	movw	r0, #8372	; 0x20b4
   113fc:	movw	r2, #8363	; 0x20ab
   11400:	movw	r3, #8366	; 0x20ae
   11404:	movt	r1, #1
   11408:	movt	r0, #1
   1140c:	movt	r2, #1
   11410:	movt	r3, #1
   11414:	str	r1, [sp]
   11418:	movw	r1, #8360	; 0x20a8
   1141c:	str	r0, [sp, #4]
   11420:	mov	r0, #5
   11424:	movt	r1, #1
   11428:	bl	10c48 <_l@@Base>
   1142c:	mov	r5, r0
   11430:	movw	r0, #8375	; 0x20b7
   11434:	movt	r0, #1
   11438:	bl	10ac8 <printf@plt>
   1143c:	mov	r0, #0
   11440:	mov	r4, #0
   11444:	bl	11b60 <lista_ordena@@Base>
   11448:	cmn	r0, #1
   1144c:	beq	11460 <teste_lista_ordena@@Base+0x78>
   11450:	movw	r0, #8392	; 0x20c8
   11454:	movt	r0, #1
   11458:	bl	10ac8 <printf@plt>
   1145c:	mov	r4, #1
   11460:	mov	r0, r5
   11464:	bl	11b60 <lista_ordena@@Base>
   11468:	ldr	r6, [r5]
   1146c:	movw	r1, #8360	; 0x20a8
   11470:	movt	r1, #1
   11474:	ldr	r0, [r6]
   11478:	bl	10abc <strcmp@plt>
   1147c:	cmp	r0, #0
   11480:	bne	114f4 <teste_lista_ordena@@Base+0x10c>
   11484:	ldr	r6, [r6, #4]
   11488:	movw	r1, #8363	; 0x20ab
   1148c:	movt	r1, #1
   11490:	ldr	r0, [r6]
   11494:	bl	10abc <strcmp@plt>
   11498:	cmp	r0, #0
   1149c:	bne	114f4 <teste_lista_ordena@@Base+0x10c>
   114a0:	ldr	r6, [r6, #4]
   114a4:	movw	r1, #8369	; 0x20b1
   114a8:	movt	r1, #1
   114ac:	ldr	r0, [r6]
   114b0:	bl	10abc <strcmp@plt>
   114b4:	cmp	r0, #0
   114b8:	bne	114f4 <teste_lista_ordena@@Base+0x10c>
   114bc:	ldr	r6, [r6, #4]
   114c0:	movw	r1, #8372	; 0x20b4
   114c4:	movt	r1, #1
   114c8:	ldr	r0, [r6]
   114cc:	bl	10abc <strcmp@plt>
   114d0:	cmp	r0, #0
   114d4:	bne	114f4 <teste_lista_ordena@@Base+0x10c>
   114d8:	ldr	r0, [r6, #4]
   114dc:	movw	r1, #8366	; 0x20ae
   114e0:	movt	r1, #1
   114e4:	ldr	r0, [r0]
   114e8:	bl	10abc <strcmp@plt>
   114ec:	cmp	r0, #0
   114f0:	beq	11504 <teste_lista_ordena@@Base+0x11c>
   114f4:	movw	r0, #8438	; 0x20f6
   114f8:	movt	r0, #1
   114fc:	bl	10ac8 <printf@plt>
   11500:	add	r4, r4, #1
   11504:	ldr	r6, [r5, #4]
   11508:	movw	r1, #8366	; 0x20ae
   1150c:	movt	r1, #1
   11510:	ldr	r0, [r6]
   11514:	bl	10abc <strcmp@plt>
   11518:	cmp	r0, #0
   1151c:	bne	11590 <teste_lista_ordena@@Base+0x1a8>
   11520:	ldr	r6, [r6, #8]
   11524:	movw	r1, #8372	; 0x20b4
   11528:	movt	r1, #1
   1152c:	ldr	r0, [r6]
   11530:	bl	10abc <strcmp@plt>
   11534:	cmp	r0, #0
   11538:	bne	11590 <teste_lista_ordena@@Base+0x1a8>
   1153c:	ldr	r6, [r6, #8]
   11540:	movw	r1, #8369	; 0x20b1
   11544:	movt	r1, #1
   11548:	ldr	r0, [r6]
   1154c:	bl	10abc <strcmp@plt>
   11550:	cmp	r0, #0
   11554:	bne	11590 <teste_lista_ordena@@Base+0x1a8>
   11558:	ldr	r6, [r6, #8]
   1155c:	movw	r1, #8363	; 0x20ab
   11560:	movt	r1, #1
   11564:	ldr	r0, [r6]
   11568:	bl	10abc <strcmp@plt>
   1156c:	cmp	r0, #0
   11570:	bne	11590 <teste_lista_ordena@@Base+0x1a8>
   11574:	ldr	r0, [r6, #8]
   11578:	movw	r1, #8360	; 0x20a8
   1157c:	movt	r1, #1
   11580:	ldr	r0, [r0]
   11584:	bl	10abc <strcmp@plt>
   11588:	cmp	r0, #0
   1158c:	beq	115bc <teste_lista_ordena@@Base+0x1d4>
   11590:	movw	r0, #8499	; 0x2133
   11594:	movt	r0, #1
   11598:	bl	10ac8 <printf@plt>
   1159c:	mov	r0, r5
   115a0:	bl	118b4 <lista_apaga@@Base>
   115a4:	add	r4, r4, #1
   115a8:	mov	r0, #10
   115ac:	bl	10b40 <putchar@plt>
   115b0:	mov	r0, r4
   115b4:	sub	sp, fp, #16
   115b8:	pop	{r4, r5, r6, sl, fp, pc}
   115bc:	mov	r0, r5
   115c0:	bl	118b4 <lista_apaga@@Base>
   115c4:	cmp	r4, #0
   115c8:	bne	115a8 <teste_lista_ordena@@Base+0x1c0>
   115cc:	movw	r0, #8723	; 0x2213
   115d0:	movt	r0, #1
   115d4:	bl	10af8 <puts@plt>
   115d8:	mov	r4, #0
   115dc:	b	115b0 <teste_lista_ordena@@Base+0x1c8>

000115e0 <teste_lista_inverte@@Base>:
   115e0:	push	{r4, r5, r6, sl, fp, lr}
   115e4:	add	fp, sp, #16
   115e8:	sub	sp, sp, #8
   115ec:	movw	r1, #8369	; 0x20b1
   115f0:	movw	r0, #8372	; 0x20b4
   115f4:	movw	r2, #8363	; 0x20ab
   115f8:	movw	r3, #8366	; 0x20ae
   115fc:	movt	r1, #1
   11600:	movt	r0, #1
   11604:	movt	r2, #1
   11608:	movt	r3, #1
   1160c:	str	r1, [sp]
   11610:	movw	r1, #8360	; 0x20a8
   11614:	str	r0, [sp, #4]
   11618:	mov	r0, #5
   1161c:	movt	r1, #1
   11620:	bl	10c48 <_l@@Base>
   11624:	mov	r5, r0
   11628:	movw	r0, #8561	; 0x2171
   1162c:	movt	r0, #1
   11630:	bl	10ac8 <printf@plt>
   11634:	mov	r0, #0
   11638:	mov	r4, #0
   1163c:	bl	11c2c <lista_inverte@@Base>
   11640:	cmn	r0, #1
   11644:	beq	11658 <teste_lista_inverte@@Base+0x78>
   11648:	movw	r0, #8392	; 0x20c8
   1164c:	movt	r0, #1
   11650:	bl	10ac8 <printf@plt>
   11654:	mov	r4, #1
   11658:	mov	r0, r5
   1165c:	bl	11c2c <lista_inverte@@Base>
   11660:	ldr	r0, [r5, #8]
   11664:	cmp	r0, #5
   11668:	beq	1167c <teste_lista_inverte@@Base+0x9c>
   1166c:	movw	r0, #8579	; 0x2183
   11670:	movt	r0, #1
   11674:	bl	10ac8 <printf@plt>
   11678:	add	r4, r4, #1
   1167c:	ldr	r6, [r5]
   11680:	movw	r1, #8372	; 0x20b4
   11684:	movt	r1, #1
   11688:	ldr	r0, [r6]
   1168c:	bl	10abc <strcmp@plt>
   11690:	cmp	r0, #0
   11694:	bne	11708 <teste_lista_inverte@@Base+0x128>
   11698:	ldr	r6, [r6, #4]
   1169c:	movw	r1, #8369	; 0x20b1
   116a0:	movt	r1, #1
   116a4:	ldr	r0, [r6]
   116a8:	bl	10abc <strcmp@plt>
   116ac:	cmp	r0, #0
   116b0:	bne	11708 <teste_lista_inverte@@Base+0x128>
   116b4:	ldr	r6, [r6, #4]
   116b8:	movw	r1, #8366	; 0x20ae
   116bc:	movt	r1, #1
   116c0:	ldr	r0, [r6]
   116c4:	bl	10abc <strcmp@plt>
   116c8:	cmp	r0, #0
   116cc:	bne	11708 <teste_lista_inverte@@Base+0x128>
   116d0:	ldr	r6, [r6, #4]
   116d4:	movw	r1, #8363	; 0x20ab
   116d8:	movt	r1, #1
   116dc:	ldr	r0, [r6]
   116e0:	bl	10abc <strcmp@plt>
   116e4:	cmp	r0, #0
   116e8:	bne	11708 <teste_lista_inverte@@Base+0x128>
   116ec:	ldr	r0, [r6, #4]
   116f0:	movw	r1, #8360	; 0x20a8
   116f4:	movt	r1, #1
   116f8:	ldr	r0, [r0]
   116fc:	bl	10abc <strcmp@plt>
   11700:	cmp	r0, #0
   11704:	beq	11718 <teste_lista_inverte@@Base+0x138>
   11708:	movw	r0, #8623	; 0x21af
   1170c:	movt	r0, #1
   11710:	bl	10ac8 <printf@plt>
   11714:	add	r4, r4, #1
   11718:	ldr	r6, [r5, #4]
   1171c:	movw	r1, #8360	; 0x20a8
   11720:	movt	r1, #1
   11724:	ldr	r0, [r6]
   11728:	bl	10abc <strcmp@plt>
   1172c:	cmp	r0, #0
   11730:	bne	117a4 <teste_lista_inverte@@Base+0x1c4>
   11734:	ldr	r6, [r6, #8]
   11738:	movw	r1, #8363	; 0x20ab
   1173c:	movt	r1, #1
   11740:	ldr	r0, [r6]
   11744:	bl	10abc <strcmp@plt>
   11748:	cmp	r0, #0
   1174c:	bne	117a4 <teste_lista_inverte@@Base+0x1c4>
   11750:	ldr	r6, [r6, #8]
   11754:	movw	r1, #8366	; 0x20ae
   11758:	movt	r1, #1
   1175c:	ldr	r0, [r6]
   11760:	bl	10abc <strcmp@plt>
   11764:	cmp	r0, #0
   11768:	bne	117a4 <teste_lista_inverte@@Base+0x1c4>
   1176c:	ldr	r6, [r6, #8]
   11770:	movw	r1, #8369	; 0x20b1
   11774:	movt	r1, #1
   11778:	ldr	r0, [r6]
   1177c:	bl	10abc <strcmp@plt>
   11780:	cmp	r0, #0
   11784:	bne	117a4 <teste_lista_inverte@@Base+0x1c4>
   11788:	ldr	r0, [r6, #8]
   1178c:	movw	r1, #8372	; 0x20b4
   11790:	movt	r1, #1
   11794:	ldr	r0, [r0]
   11798:	bl	10abc <strcmp@plt>
   1179c:	cmp	r0, #0
   117a0:	beq	117d0 <teste_lista_inverte@@Base+0x1f0>
   117a4:	movw	r0, #8499	; 0x2133
   117a8:	movt	r0, #1
   117ac:	bl	10ac8 <printf@plt>
   117b0:	mov	r0, r5
   117b4:	bl	118b4 <lista_apaga@@Base>
   117b8:	add	r4, r4, #1
   117bc:	mov	r0, #10
   117c0:	bl	10b40 <putchar@plt>
   117c4:	mov	r0, r4
   117c8:	sub	sp, fp, #16
   117cc:	pop	{r4, r5, r6, sl, fp, pc}
   117d0:	mov	r0, r5
   117d4:	bl	118b4 <lista_apaga@@Base>
   117d8:	cmp	r4, #0
   117dc:	bne	117bc <teste_lista_inverte@@Base+0x1dc>
   117e0:	movw	r0, #8723	; 0x2213
   117e4:	movt	r0, #1
   117e8:	bl	10af8 <puts@plt>
   117ec:	mov	r4, #0
   117f0:	b	117c4 <teste_lista_inverte@@Base+0x1e4>

000117f4 <main@@Base>:
   117f4:	push	{r4, sl, fp, lr}
   117f8:	add	fp, sp, #8
   117fc:	movw	r0, #12372	; 0x3054
   11800:	mov	r1, #0
   11804:	mov	r2, #2
   11808:	mov	r3, #0
   1180c:	movt	r0, #2
   11810:	ldr	r0, [r0]
   11814:	bl	10b34 <setvbuf@plt>
   11818:	movw	r0, #12368	; 0x3050
   1181c:	mov	r1, #0
   11820:	mov	r2, #2
   11824:	mov	r3, #0
   11828:	movt	r0, #2
   1182c:	ldr	r0, [r0]
   11830:	bl	10b34 <setvbuf@plt>
   11834:	bl	10d6c <teste_lista_nova@@Base>
   11838:	mov	r4, r0
   1183c:	bl	10dec <teste_lista_insere@@Base>
   11840:	add	r4, r0, r4
   11844:	bl	110e8 <teste_lista_remove@@Base>
   11848:	add	r4, r4, r0
   1184c:	bl	1127c <teste_lista_pesquisa@@Base>
   11850:	add	r4, r4, r0
   11854:	bl	113e8 <teste_lista_ordena@@Base>
   11858:	add	r4, r4, r0
   1185c:	bl	115e0 <teste_lista_inverte@@Base>
   11860:	adds	r1, r4, r0
   11864:	beq	1187c <main@@Base+0x88>
   11868:	movw	r0, #8685	; 0x21ed
   1186c:	movt	r0, #1
   11870:	bl	10ac8 <printf@plt>
   11874:	mov	r0, #0
   11878:	pop	{r4, sl, fp, pc}
   1187c:	movw	r0, #8736	; 0x2220
   11880:	movt	r0, #1
   11884:	bl	10af8 <puts@plt>
   11888:	mov	r0, #0
   1188c:	pop	{r4, sl, fp, pc}

00011890 <lista_nova@@Base>:
   11890:	push	{fp, lr}
   11894:	mov	fp, sp
   11898:	mov	r0, #12
   1189c:	bl	10b04 <malloc@plt>
   118a0:	cmp	r0, #0
   118a4:	moveq	r0, #0
   118a8:	movne	r1, #0
   118ac:	strne	r1, [r0, #8]
   118b0:	pop	{fp, pc}

000118b4 <lista_apaga@@Base>:
   118b4:	push	{r4, r5, r6, sl, fp, lr}
   118b8:	add	fp, sp, #16
   118bc:	cmp	r0, #0
   118c0:	popeq	{r4, r5, r6, sl, fp, pc}
   118c4:	mov	r4, r0
   118c8:	ldr	r0, [r0, #8]
   118cc:	cmp	r0, #0
   118d0:	beq	11914 <lista_apaga@@Base+0x60>
   118d4:	ldr	r6, [r4]
   118d8:	cmp	r6, #0
   118dc:	ldrne	r5, [r6, #4]
   118e0:	cmpne	r5, #0
   118e4:	beq	11914 <lista_apaga@@Base+0x60>
   118e8:	ldr	r0, [r6]
   118ec:	bl	10ad4 <free@plt>
   118f0:	mov	r0, r6
   118f4:	bl	10ad4 <free@plt>
   118f8:	ldm	r5, {r0, r6}
   118fc:	bl	10ad4 <free@plt>
   11900:	mov	r0, r5
   11904:	bl	10ad4 <free@plt>
   11908:	cmp	r6, #0
   1190c:	mov	r5, r6
   11910:	bne	118f8 <lista_apaga@@Base+0x44>
   11914:	mov	r0, r4
   11918:	pop	{r4, r5, r6, sl, fp, lr}
   1191c:	b	10ad4 <free@plt>

00011920 <lista_tamanho@@Base>:
   11920:	cmp	r0, #0
   11924:	ldrne	r0, [r0, #8]
   11928:	mvneq	r0, #0
   1192c:	bx	lr

00011930 <lista_inicio@@Base>:
   11930:	cmp	r0, #0
   11934:	ldrne	r0, [r0]
   11938:	moveq	r0, #0
   1193c:	bx	lr

00011940 <lista_fim@@Base>:
   11940:	cmp	r0, #0
   11944:	ldrne	r0, [r0, #4]
   11948:	moveq	r0, #0
   1194c:	bx	lr

00011950 <lista_insere@@Base>:
   11950:	push	{r4, r5, r6, r7, fp, lr}
   11954:	add	fp, sp, #16
   11958:	cmp	r0, #0
   1195c:	moveq	r5, #0
   11960:	moveq	r0, r5
   11964:	popeq	{r4, r5, r6, r7, fp, pc}
   11968:	mov	r4, r0
   1196c:	mov	r0, #12
   11970:	mov	r6, r2
   11974:	mov	r7, r1
   11978:	bl	10b04 <malloc@plt>
   1197c:	mov	r5, r0
   11980:	mov	r0, r7
   11984:	bl	10b28 <strlen@plt>
   11988:	add	r0, r0, #1
   1198c:	bl	10b04 <malloc@plt>
   11990:	mov	r1, r7
   11994:	str	r0, [r5]
   11998:	bl	10aec <strcpy@plt>
   1199c:	ldr	r0, [r4, #8]
   119a0:	cmp	r0, #0
   119a4:	beq	119d4 <lista_insere@@Base+0x84>
   119a8:	cmp	r6, #0
   119ac:	beq	119ec <lista_insere@@Base+0x9c>
   119b0:	ldr	r1, [r4]
   119b4:	cmp	r1, r6
   119b8:	beq	11a04 <lista_insere@@Base+0xb4>
   119bc:	mov	r1, r6
   119c0:	ldr	r2, [r1, #8]!
   119c4:	str	r5, [r2, #4]
   119c8:	str	r6, [r5, #4]
   119cc:	str	r2, [r5, #8]
   119d0:	b	11a10 <lista_insere@@Base+0xc0>
   119d4:	mov	r1, #0
   119d8:	str	r1, [r5, #4]
   119dc:	str	r1, [r5, #8]
   119e0:	mov	r1, r4
   119e4:	str	r5, [r1], #4
   119e8:	b	11a10 <lista_insere@@Base+0xc0>
   119ec:	mov	r1, r4
   119f0:	mov	r2, #0
   119f4:	ldr	r3, [r1, #4]!
   119f8:	stmib	r5, {r2, r3}
   119fc:	str	r5, [r3, #4]
   11a00:	b	11a10 <lista_insere@@Base+0xc0>
   11a04:	str	r1, [r5, #4]
   11a08:	str	r5, [r4]
   11a0c:	add	r1, r5, #8
   11a10:	add	r0, r0, #1
   11a14:	str	r5, [r1]
   11a18:	str	r0, [r4, #8]
   11a1c:	mov	r0, r5
   11a20:	pop	{r4, r5, r6, r7, fp, pc}

00011a24 <lista_remove@@Base>:
   11a24:	push	{r4, r5, r6, sl, fp, lr}
   11a28:	add	fp, sp, #16
   11a2c:	cmp	r1, #0
   11a30:	moveq	r4, #0
   11a34:	moveq	r0, r4
   11a38:	popeq	{r4, r5, r6, sl, fp, pc}
   11a3c:	mov	r5, r0
   11a40:	ldr	r0, [r0]
   11a44:	ldr	r4, [r1, #4]
   11a48:	mov	r6, r1
   11a4c:	cmp	r0, r1
   11a50:	beq	11a74 <lista_remove@@Base+0x50>
   11a54:	ldr	r1, [r5, #4]
   11a58:	ldr	r0, [r6, #8]
   11a5c:	cmp	r1, r6
   11a60:	beq	11a84 <lista_remove@@Base+0x60>
   11a64:	str	r4, [r0, #4]
   11a68:	ldr	r1, [r6, #4]
   11a6c:	str	r0, [r1, #8]
   11a70:	b	11a90 <lista_remove@@Base+0x6c>
   11a74:	mov	r0, #0
   11a78:	str	r0, [r4, #8]
   11a7c:	str	r4, [r5]
   11a80:	b	11a90 <lista_remove@@Base+0x6c>
   11a84:	mov	r1, #0
   11a88:	str	r1, [r0, #4]
   11a8c:	str	r0, [r5, #4]
   11a90:	ldr	r0, [r6]
   11a94:	bl	10ad4 <free@plt>
   11a98:	mov	r0, r6
   11a9c:	bl	10ad4 <free@plt>
   11aa0:	ldr	r0, [r5, #8]
   11aa4:	sub	r0, r0, #1
   11aa8:	str	r0, [r5, #8]
   11aac:	mov	r0, r4
   11ab0:	pop	{r4, r5, r6, sl, fp, pc}

00011ab4 <lista_pesquisa@@Base>:
   11ab4:	push	{r4, r5, r6, r7, fp, lr}
   11ab8:	add	fp, sp, #16
   11abc:	mov	r5, #0
   11ac0:	cmp	r0, #0
   11ac4:	beq	11b58 <lista_pesquisa@@Base+0xa4>
   11ac8:	mov	r4, r1
   11acc:	cmp	r2, #1
   11ad0:	beq	11b18 <lista_pesquisa@@Base+0x64>
   11ad4:	cmp	r2, #0
   11ad8:	bne	11b58 <lista_pesquisa@@Base+0xa4>
   11adc:	ldr	r6, [r0, #8]
   11ae0:	cmp	r6, #1
   11ae4:	blt	11b58 <lista_pesquisa@@Base+0xa4>
   11ae8:	mov	r7, #0
   11aec:	ldr	r5, [r0]
   11af0:	mov	r1, r4
   11af4:	ldr	r0, [r5]
   11af8:	bl	10abc <strcmp@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	11b58 <lista_pesquisa@@Base+0xa4>
   11b04:	add	r7, r7, #1
   11b08:	add	r0, r5, #4
   11b0c:	cmp	r7, r6
   11b10:	blt	11aec <lista_pesquisa@@Base+0x38>
   11b14:	b	11b54 <lista_pesquisa@@Base+0xa0>
   11b18:	ldr	r6, [r0, #8]
   11b1c:	cmp	r6, #1
   11b20:	blt	11b58 <lista_pesquisa@@Base+0xa4>
   11b24:	add	r0, r0, #4
   11b28:	mov	r7, #0
   11b2c:	ldr	r5, [r0]
   11b30:	mov	r1, r4
   11b34:	ldr	r0, [r5]
   11b38:	bl	10abc <strcmp@plt>
   11b3c:	cmp	r0, #0
   11b40:	beq	11b58 <lista_pesquisa@@Base+0xa4>
   11b44:	add	r7, r7, #1
   11b48:	add	r0, r5, #8
   11b4c:	cmp	r7, r6
   11b50:	blt	11b2c <lista_pesquisa@@Base+0x78>
   11b54:	mov	r5, #0
   11b58:	mov	r0, r5
   11b5c:	pop	{r4, r5, r6, r7, fp, pc}

00011b60 <lista_ordena@@Base>:
   11b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b64:	add	fp, sp, #28
   11b68:	sub	sp, sp, #4
   11b6c:	cmp	r0, #0
   11b70:	beq	11c1c <lista_ordena@@Base+0xbc>
   11b74:	ldr	r1, [r0, #8]
   11b78:	mov	r2, #0
   11b7c:	cmp	r1, #0
   11b80:	beq	11c20 <lista_ordena@@Base+0xc0>
   11b84:	ldr	sl, [r0]
   11b88:	ldr	r9, [r0, #4]
   11b8c:	cmp	sl, r9
   11b90:	beq	11c20 <lista_ordena@@Base+0xc0>
   11b94:	mov	r8, sl
   11b98:	ldr	r4, [r8, #4]
   11b9c:	ldr	r5, [r8]
   11ba0:	ldr	r6, [r4]
   11ba4:	mov	r0, r5
   11ba8:	mov	r1, r6
   11bac:	bl	10abc <strcmp@plt>
   11bb0:	cmp	r0, #1
   11bb4:	blt	11c08 <lista_ordena@@Base+0xa8>
   11bb8:	mov	r7, r8
   11bbc:	mov	r0, r8
   11bc0:	str	r6, [r7]
   11bc4:	str	r5, [r4]
   11bc8:	cmp	r0, sl
   11bcc:	mov	r7, sl
   11bd0:	ldrne	r7, [r0, #8]
   11bd4:	ldr	r4, [r7, #4]
   11bd8:	ldr	r5, [r7]
   11bdc:	ldr	r6, [r4]
   11be0:	mov	r0, r5
   11be4:	mov	r1, r6
   11be8:	bl	10abc <strcmp@plt>
   11bec:	cmp	r0, #0
   11bf0:	mov	r0, r7
   11bf4:	bgt	11bc0 <lista_ordena@@Base+0x60>
   11bf8:	ldr	r8, [r8, #4]
   11bfc:	cmp	r8, r9
   11c00:	bne	11b98 <lista_ordena@@Base+0x38>
   11c04:	b	11c14 <lista_ordena@@Base+0xb4>
   11c08:	mov	r8, r4
   11c0c:	cmp	r8, r9
   11c10:	bne	11b98 <lista_ordena@@Base+0x38>
   11c14:	mov	r2, #0
   11c18:	b	11c20 <lista_ordena@@Base+0xc0>
   11c1c:	mvn	r2, #0
   11c20:	mov	r0, r2
   11c24:	sub	sp, fp, #28
   11c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011c2c <lista_inverte@@Base>:
   11c2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c30:	add	fp, sp, #24
   11c34:	cmp	r0, #0
   11c38:	mvneq	r8, #0
   11c3c:	moveq	r0, r8
   11c40:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11c44:	mov	r9, r0
   11c48:	ldr	r0, [r0, #8]
   11c4c:	mov	r8, #0
   11c50:	cmp	r0, #2
   11c54:	blt	11ca8 <lista_inverte@@Base+0x7c>
   11c58:	add	r7, r9, #4
   11c5c:	mov	r8, #0
   11c60:	mov	r4, r9
   11c64:	mov	r5, #0
   11c68:	ldr	r4, [r4]
   11c6c:	ldr	r7, [r7]
   11c70:	ldr	r0, [r4]
   11c74:	bl	10ae0 <strdup@plt>
   11c78:	mov	r6, r0
   11c7c:	ldr	r0, [r7]
   11c80:	bl	10ae0 <strdup@plt>
   11c84:	str	r0, [r4], #4
   11c88:	mov	r0, r6
   11c8c:	bl	10ae0 <strdup@plt>
   11c90:	str	r0, [r7], #8
   11c94:	add	r5, r5, #1
   11c98:	ldr	r0, [r9, #8]
   11c9c:	add	r0, r0, r0, lsr #31
   11ca0:	cmp	r5, r0, asr #1
   11ca4:	blt	11c68 <lista_inverte@@Base+0x3c>
   11ca8:	mov	r0, r8
   11cac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011cb0 <__libc_csu_init@@Base>:
   11cb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cb4:	mov	r7, r0
   11cb8:	ldr	r6, [pc, #72]	; 11d08 <__libc_csu_init@@Base+0x58>
   11cbc:	ldr	r5, [pc, #72]	; 11d0c <__libc_csu_init@@Base+0x5c>
   11cc0:	add	r6, pc, r6
   11cc4:	add	r5, pc, r5
   11cc8:	sub	r6, r6, r5
   11ccc:	mov	r8, r1
   11cd0:	mov	r9, r2
   11cd4:	bl	10a9c <strcmp@plt-0x20>
   11cd8:	asrs	r6, r6, #2
   11cdc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ce0:	mov	r4, #0
   11ce4:	add	r4, r4, #1
   11ce8:	ldr	r3, [r5], #4
   11cec:	mov	r2, r9
   11cf0:	mov	r1, r8
   11cf4:	mov	r0, r7
   11cf8:	blx	r3
   11cfc:	cmp	r6, r4
   11d00:	bne	11ce4 <__libc_csu_init@@Base+0x34>
   11d04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d08:	andeq	r1, r1, r4, asr #4
   11d0c:	andeq	r1, r1, ip, lsr r2

00011d10 <__libc_csu_fini@@Base>:
   11d10:	bx	lr

Disassembly of section .fini:

00011d14 <.fini>:
   11d14:	push	{r3, lr}
   11d18:	pop	{r3, pc}
