
../compcert-repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b14 <.init>:
   10b14:	push	{r3, lr}
   10b18:	bl	10de0 <_start@@Base+0x3c>
   10b1c:	pop	{r3, pc}

Disassembly of section .plt:

00010b20 <calloc@plt-0x14>:
   10b20:	push	{lr}		; (str lr, [sp, #-4]!)
   10b24:	ldr	lr, [pc, #4]	; 10b30 <calloc@plt-0x4>
   10b28:	add	lr, pc, lr
   10b2c:	ldr	pc, [lr, #8]!
   10b30:	ldrdeq	r1, [r1], -r0

00010b34 <calloc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b4c <strtol@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b58 <printf@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b64 <fopen@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b70 <free@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b7c <fgets@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b88 <memcpy@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1176]!	; 0x498

00010b94 <realloc@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1168]!	; 0x490

00010ba0 <strcpy@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1160]!	; 0x488

00010bac <puts@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1152]!	; 0x480

00010bb8 <malloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1144]!	; 0x478

00010bc4 <__libc_start_main@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1136]!	; 0x470

00010bd0 <__gmon_start__@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1128]!	; 0x468

00010bdc <feof@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1120]!	; 0x460

00010be8 <strlen@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1112]!	; 0x458

00010bf4 <strchr@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1104]!	; 0x450

00010c00 <fclose@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1096]!	; 0x448

00010c0c <abort@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1088]!	; 0x440

Disassembly of section .text:

00010c18 <main@@Base>:
   10c18:	movw	r1, #6880	; 0x1ae0
   10c1c:	movt	r1, #1
   10c20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10c24:	movw	r0, #6884	; 0x1ae4
   10c28:	movt	r0, #1
   10c2c:	strd	r6, [sp, #8]
   10c30:	strd	r8, [sp, #16]
   10c34:	strd	sl, [sp, #24]
   10c38:	str	lr, [sp, #32]
   10c3c:	sub	sp, sp, #4
   10c40:	bl	10b64 <fopen@plt>
   10c44:	mov	r8, r0
   10c48:	movw	r1, #6880	; 0x1ae0
   10c4c:	movt	r1, #1
   10c50:	movw	r0, #6896	; 0x1af0
   10c54:	movt	r0, #1
   10c58:	bl	10b64 <fopen@plt>
   10c5c:	mov	r7, r0
   10c60:	movw	r1, #6880	; 0x1ae0
   10c64:	movt	r1, #1
   10c68:	movw	r0, #6908	; 0x1afc
   10c6c:	movt	r0, #1
   10c70:	bl	10b64 <fopen@plt>
   10c74:	mov	r6, r0
   10c78:	mov	r0, r8
   10c7c:	bl	110a0 <lerAtores@@Base>
   10c80:	mov	r4, r0
   10c84:	mov	r0, r7
   10c88:	bl	11124 <lerFilmes@@Base>
   10c8c:	mov	r5, r0
   10c90:	mov	r0, r6
   10c94:	bl	11124 <lerFilmes@@Base>
   10c98:	mov	r9, r0
   10c9c:	mov	r0, r4
   10ca0:	bl	11308 <vetor_tamanho@@Base>
   10ca4:	mov	r1, r0
   10ca8:	movw	r0, #6920	; 0x1b08
   10cac:	movt	r0, #1
   10cb0:	bl	10b58 <printf@plt>
   10cb4:	mov	r0, r4
   10cb8:	bl	10e94 <retira_duplicados@@Base>
   10cbc:	mov	r0, r4
   10cc0:	bl	11308 <vetor_tamanho@@Base>
   10cc4:	mov	r1, r0
   10cc8:	movw	r0, #6940	; 0x1b1c
   10ccc:	movt	r0, #1
   10cd0:	bl	10b58 <printf@plt>
   10cd4:	mov	r1, r9
   10cd8:	mov	r0, r5
   10cdc:	bl	10f38 <interseta@@Base>
   10ce0:	subs	fp, r0, #0
   10ce4:	beq	10d84 <main@@Base+0x16c>
   10ce8:	bl	11308 <vetor_tamanho@@Base>
   10cec:	mov	r1, r0
   10cf0:	movw	r0, #6968	; 0x1b38
   10cf4:	movt	r0, #1
   10cf8:	bl	10b58 <printf@plt>
   10cfc:	mov	r1, #2000	; 0x7d0
   10d00:	mov	r0, r5
   10d04:	bl	11008 <anteriores@@Base>
   10d08:	subs	sl, r0, #0
   10d0c:	beq	10d94 <main@@Base+0x17c>
   10d10:	bl	11308 <vetor_tamanho@@Base>
   10d14:	mov	r1, r0
   10d18:	movw	r0, #7024	; 0x1b70
   10d1c:	movt	r0, #1
   10d20:	bl	10b58 <printf@plt>
   10d24:	mov	r0, r4
   10d28:	bl	111dc <vetor_apaga@@Base>
   10d2c:	mov	r0, fp
   10d30:	bl	111dc <vetor_apaga@@Base>
   10d34:	mov	r0, sl
   10d38:	bl	111dc <vetor_apaga@@Base>
   10d3c:	mov	r0, r5
   10d40:	bl	116b8 <lista_apaga@@Base>
   10d44:	mov	r0, r9
   10d48:	bl	116b8 <lista_apaga@@Base>
   10d4c:	mov	r0, r8
   10d50:	bl	10c00 <fclose@plt>
   10d54:	mov	r0, r7
   10d58:	bl	10c00 <fclose@plt>
   10d5c:	mov	r0, r6
   10d60:	bl	10c00 <fclose@plt>
   10d64:	mov	r0, #0
   10d68:	add	sp, sp, #4
   10d6c:	ldrd	r4, [sp]
   10d70:	ldrd	r6, [sp, #8]
   10d74:	ldrd	r8, [sp, #16]
   10d78:	ldrd	sl, [sp, #24]
   10d7c:	add	sp, sp, #32
   10d80:	pop	{pc}		; (ldr pc, [sp], #4)
   10d84:	movw	r0, #7000	; 0x1b58
   10d88:	movt	r0, #1
   10d8c:	bl	10bac <puts@plt>
   10d90:	b	10cfc <main@@Base+0xe4>
   10d94:	movw	r0, #7060	; 0x1b94
   10d98:	movt	r0, #1
   10d9c:	bl	10bac <puts@plt>
   10da0:	b	10d24 <main@@Base+0x10c>

00010da4 <_start@@Base>:
   10da4:	mov	fp, #0
   10da8:	mov	lr, #0
   10dac:	pop	{r1}		; (ldr r1, [sp], #4)
   10db0:	mov	r2, sp
   10db4:	push	{r2}		; (str r2, [sp, #-4]!)
   10db8:	push	{r0}		; (str r0, [sp, #-4]!)
   10dbc:	ldr	ip, [pc, #16]	; 10dd4 <_start@@Base+0x30>
   10dc0:	push	{ip}		; (str ip, [sp, #-4]!)
   10dc4:	ldr	r0, [pc, #12]	; 10dd8 <_start@@Base+0x34>
   10dc8:	ldr	r3, [pc, #12]	; 10ddc <_start@@Base+0x38>
   10dcc:	bl	10bc4 <__libc_start_main@plt>
   10dd0:	bl	10c0c <abort@plt>
   10dd4:	ldrdeq	r1, [r1], -r0
   10dd8:	andeq	r0, r1, r8, lsl ip
   10ddc:	andeq	r1, r1, r0, ror sl
   10de0:	ldr	r3, [pc, #20]	; 10dfc <_start@@Base+0x58>
   10de4:	ldr	r2, [pc, #20]	; 10e00 <_start@@Base+0x5c>
   10de8:	add	r3, pc, r3
   10dec:	ldr	r2, [r3, r2]
   10df0:	cmp	r2, #0
   10df4:	bxeq	lr
   10df8:	b	10bd0 <__gmon_start__@plt>
   10dfc:	andeq	r1, r1, r0, lsl r2
   10e00:	andeq	r0, r0, r8, asr r0
   10e04:	ldr	r0, [pc, #24]	; 10e24 <_start@@Base+0x80>
   10e08:	ldr	r3, [pc, #24]	; 10e28 <_start@@Base+0x84>
   10e0c:	cmp	r3, r0
   10e10:	bxeq	lr
   10e14:	ldr	r3, [pc, #16]	; 10e2c <_start@@Base+0x88>
   10e18:	cmp	r3, #0
   10e1c:	bxeq	lr
   10e20:	bx	r3
   10e24:	andeq	r2, r2, r4, rrx
   10e28:	andeq	r2, r2, r4, rrx
   10e2c:	andeq	r0, r0, r0
   10e30:	ldr	r0, [pc, #36]	; 10e5c <_start@@Base+0xb8>
   10e34:	ldr	r1, [pc, #36]	; 10e60 <_start@@Base+0xbc>
   10e38:	sub	r1, r1, r0
   10e3c:	asr	r1, r1, #2
   10e40:	add	r1, r1, r1, lsr #31
   10e44:	asrs	r1, r1, #1
   10e48:	bxeq	lr
   10e4c:	ldr	r3, [pc, #16]	; 10e64 <_start@@Base+0xc0>
   10e50:	cmp	r3, #0
   10e54:	bxeq	lr
   10e58:	bx	r3
   10e5c:	andeq	r2, r2, r4, rrx
   10e60:	andeq	r2, r2, r4, rrx
   10e64:	andeq	r0, r0, r0
   10e68:	push	{r4, lr}
   10e6c:	ldr	r4, [pc, #24]	; 10e8c <_start@@Base+0xe8>
   10e70:	ldrb	r3, [r4]
   10e74:	cmp	r3, #0
   10e78:	popne	{r4, pc}
   10e7c:	bl	10e04 <_start@@Base+0x60>
   10e80:	mov	r3, #1
   10e84:	strb	r3, [r4]
   10e88:	pop	{r4, pc}
   10e8c:	andeq	r2, r2, r4, rrx
   10e90:	b	10e30 <_start@@Base+0x8c>

00010e94 <retira_duplicados@@Base>:
   10e94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10e98:	mov	r5, r0
   10e9c:	strd	r6, [sp, #8]
   10ea0:	mov	r7, #0
   10ea4:	str	r8, [sp, #16]
   10ea8:	str	lr, [sp, #20]
   10eac:	mov	r0, r5
   10eb0:	bl	11308 <vetor_tamanho@@Base>
   10eb4:	sub	r0, r0, #1
   10eb8:	cmp	r0, r7
   10ebc:	ble	10f24 <retira_duplicados@@Base+0x90>
   10ec0:	add	r8, r7, #1
   10ec4:	mov	r4, r8
   10ec8:	mov	r0, r5
   10ecc:	bl	11308 <vetor_tamanho@@Base>
   10ed0:	cmp	r0, r4
   10ed4:	mov	r1, r7
   10ed8:	mov	r0, r5
   10edc:	ble	10f1c <retira_duplicados@@Base+0x88>
   10ee0:	bl	11318 <vetor_elemento@@Base>
   10ee4:	mov	r6, r0
   10ee8:	mov	r1, r4
   10eec:	mov	r0, r5
   10ef0:	bl	11318 <vetor_elemento@@Base>
   10ef4:	mov	r1, r0
   10ef8:	mov	r0, r6
   10efc:	bl	10b40 <strcmp@plt>
   10f00:	cmp	r0, #0
   10f04:	addne	r4, r4, #1
   10f08:	bne	10ec8 <retira_duplicados@@Base+0x34>
   10f0c:	mov	r1, r4
   10f10:	mov	r0, r5
   10f14:	bl	11444 <vetor_remove@@Base>
   10f18:	b	10ec8 <retira_duplicados@@Base+0x34>
   10f1c:	mov	r7, r8
   10f20:	b	10eac <retira_duplicados@@Base+0x18>
   10f24:	ldrd	r4, [sp]
   10f28:	ldrd	r6, [sp, #8]
   10f2c:	ldr	r8, [sp, #16]
   10f30:	add	sp, sp, #20
   10f34:	pop	{pc}		; (ldr pc, [sp], #4)

00010f38 <interseta@@Base>:
   10f38:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10f3c:	strd	r6, [sp, #8]
   10f40:	mov	r6, r1
   10f44:	strd	r8, [sp, #16]
   10f48:	mov	r8, r0
   10f4c:	str	sl, [sp, #24]
   10f50:	str	lr, [sp, #28]
   10f54:	bl	111a8 <vetor_novo@@Base>
   10f58:	ldr	r4, [r8]
   10f5c:	mov	sl, r0
   10f60:	ldr	r3, [r8, #8]
   10f64:	cmp	r3, #0
   10f68:	cmple	r4, #0
   10f6c:	beq	10fec <interseta@@Base+0xb4>
   10f70:	mov	r9, #0
   10f74:	mov	r5, r9
   10f78:	b	10f90 <interseta@@Base+0x58>
   10f7c:	ldr	r4, [r4, #4]
   10f80:	ldr	r3, [r8, #8]
   10f84:	cmp	r3, r5
   10f88:	cmple	r4, #0
   10f8c:	beq	10fec <interseta@@Base+0xb4>
   10f90:	mov	r2, #0
   10f94:	mov	r0, r6
   10f98:	ldr	r1, [r4]
   10f9c:	bl	1187c <lista_pesquisa@@Base>
   10fa0:	mov	r2, #0
   10fa4:	add	r5, r5, #1
   10fa8:	cmp	r0, r2
   10fac:	mov	r0, r6
   10fb0:	beq	10f7c <interseta@@Base+0x44>
   10fb4:	ldr	r7, [r4]
   10fb8:	mov	r1, r7
   10fbc:	bl	1187c <lista_pesquisa@@Base>
   10fc0:	ldr	r1, [r0]
   10fc4:	mov	r0, r7
   10fc8:	bl	10b40 <strcmp@plt>
   10fcc:	cmp	r0, #0
   10fd0:	bne	10f7c <interseta@@Base+0x44>
   10fd4:	mov	r2, r9
   10fd8:	mov	r0, sl
   10fdc:	ldr	r1, [r4]
   10fe0:	add	r9, r9, #1
   10fe4:	bl	1134c <vetor_insere@@Base>
   10fe8:	b	10f7c <interseta@@Base+0x44>
   10fec:	mov	r0, sl
   10ff0:	ldrd	r4, [sp]
   10ff4:	ldrd	r6, [sp, #8]
   10ff8:	ldrd	r8, [sp, #16]
   10ffc:	ldr	sl, [sp, #24]
   11000:	add	sp, sp, #28
   11004:	pop	{pc}		; (ldr pc, [sp], #4)

00011008 <anteriores@@Base>:
   11008:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1100c:	mov	r4, r0
   11010:	strd	r6, [sp, #8]
   11014:	mov	r6, r1
   11018:	str	r8, [sp, #16]
   1101c:	str	lr, [sp, #20]
   11020:	bl	111a8 <vetor_novo@@Base>
   11024:	ldr	r4, [r4]
   11028:	mov	r7, r0
   1102c:	cmp	r4, #0
   11030:	bne	11044 <anteriores@@Base+0x3c>
   11034:	b	11088 <anteriores@@Base+0x80>
   11038:	ldr	r4, [r4, #4]
   1103c:	cmp	r4, #0
   11040:	beq	11088 <anteriores@@Base+0x80>
   11044:	ldr	r5, [r4]
   11048:	mov	r0, r5
   1104c:	bl	10be8 <strlen@plt>
   11050:	sub	r0, r0, #5
   11054:	mov	r2, #10
   11058:	add	r0, r5, r0
   1105c:	mov	r1, #0
   11060:	bl	10b4c <strtol@plt>
   11064:	cmp	r6, r0
   11068:	ble	11038 <anteriores@@Base+0x30>
   1106c:	mov	r0, r7
   11070:	ldr	r1, [r4]
   11074:	ldr	r2, [r7]
   11078:	bl	1134c <vetor_insere@@Base>
   1107c:	ldr	r4, [r4, #4]
   11080:	cmp	r4, #0
   11084:	bne	11044 <anteriores@@Base+0x3c>
   11088:	mov	r0, r7
   1108c:	ldrd	r4, [sp]
   11090:	ldrd	r6, [sp, #8]
   11094:	ldr	r8, [sp, #16]
   11098:	add	sp, sp, #20
   1109c:	pop	{pc}		; (ldr pc, [sp], #4)

000110a0 <lerAtores@@Base>:
   110a0:	strd	r4, [sp, #-16]!
   110a4:	subs	r4, r0, #0
   110a8:	moveq	r5, r4
   110ac:	str	r6, [sp, #8]
   110b0:	str	lr, [sp, #12]
   110b4:	sub	sp, sp, #256	; 0x100
   110b8:	beq	1110c <lerAtores@@Base+0x6c>
   110bc:	bl	111a8 <vetor_novo@@Base>
   110c0:	mov	r5, r0
   110c4:	b	110f0 <lerAtores@@Base+0x50>
   110c8:	bl	10b7c <fgets@plt>
   110cc:	mov	r1, #10
   110d0:	mov	r0, sp
   110d4:	bl	10bf4 <strchr@plt>
   110d8:	subs	r3, r0, #0
   110dc:	mov	r1, sp
   110e0:	mov	r0, r5
   110e4:	strbne	r6, [r3]
   110e8:	ldr	r2, [r5]
   110ec:	bl	1134c <vetor_insere@@Base>
   110f0:	mov	r0, r4
   110f4:	bl	10bdc <feof@plt>
   110f8:	subs	r6, r0, #0
   110fc:	mov	r2, r4
   11100:	mov	r1, #255	; 0xff
   11104:	mov	r0, sp
   11108:	beq	110c8 <lerAtores@@Base+0x28>
   1110c:	mov	r0, r5
   11110:	add	sp, sp, #256	; 0x100
   11114:	ldrd	r4, [sp]
   11118:	ldr	r6, [sp, #8]
   1111c:	add	sp, sp, #12
   11120:	pop	{pc}		; (ldr pc, [sp], #4)

00011124 <lerFilmes@@Base>:
   11124:	strd	r4, [sp, #-16]!
   11128:	subs	r4, r0, #0
   1112c:	str	r6, [sp, #8]
   11130:	moveq	r6, r4
   11134:	str	lr, [sp, #12]
   11138:	sub	sp, sp, #256	; 0x100
   1113c:	beq	11190 <lerFilmes@@Base+0x6c>
   11140:	bl	11684 <lista_nova@@Base>
   11144:	mov	r6, r0
   11148:	b	11174 <lerFilmes@@Base+0x50>
   1114c:	bl	10b7c <fgets@plt>
   11150:	mov	r1, #10
   11154:	mov	r0, sp
   11158:	bl	10bf4 <strchr@plt>
   1115c:	subs	r3, r0, #0
   11160:	mov	r2, #0
   11164:	mov	r1, sp
   11168:	mov	r0, r6
   1116c:	strbne	r5, [r3]
   11170:	bl	11740 <lista_insere@@Base>
   11174:	mov	r0, r4
   11178:	bl	10bdc <feof@plt>
   1117c:	subs	r5, r0, #0
   11180:	mov	r2, r4
   11184:	mov	r1, #255	; 0xff
   11188:	mov	r0, sp
   1118c:	beq	1114c <lerFilmes@@Base+0x28>
   11190:	mov	r0, r6
   11194:	add	sp, sp, #256	; 0x100
   11198:	ldrd	r4, [sp]
   1119c:	ldr	r6, [sp, #8]
   111a0:	add	sp, sp, #12
   111a4:	pop	{pc}		; (ldr pc, [sp], #4)

000111a8 <vetor_novo@@Base>:
   111a8:	mov	r0, #12
   111ac:	str	r4, [sp, #-8]!
   111b0:	str	lr, [sp, #4]
   111b4:	bl	10bb8 <malloc@plt>
   111b8:	cmp	r0, #0
   111bc:	beq	111d0 <vetor_novo@@Base+0x28>
   111c0:	mov	r3, #0
   111c4:	str	r3, [r0]
   111c8:	str	r3, [r0, #4]
   111cc:	str	r3, [r0, #8]
   111d0:	ldr	r4, [sp]
   111d4:	add	sp, sp, #4
   111d8:	pop	{pc}		; (ldr pc, [sp], #4)

000111dc <vetor_apaga@@Base>:
   111dc:	strd	r4, [sp, #-16]!
   111e0:	subs	r5, r0, #0
   111e4:	str	r6, [sp, #8]
   111e8:	str	lr, [sp, #12]
   111ec:	beq	1123c <vetor_apaga@@Base+0x60>
   111f0:	ldr	r3, [r5]
   111f4:	cmp	r3, #0
   111f8:	ble	1121c <vetor_apaga@@Base+0x40>
   111fc:	mov	r4, #0
   11200:	ldr	r3, [r5, #8]
   11204:	ldr	r0, [r3, r4, lsl #2]
   11208:	add	r4, r4, #1
   1120c:	bl	10b70 <free@plt>
   11210:	ldr	r3, [r5]
   11214:	cmp	r3, r4
   11218:	bgt	11200 <vetor_apaga@@Base+0x24>
   1121c:	ldr	r0, [r5, #8]
   11220:	bl	10b70 <free@plt>
   11224:	mov	r0, r5
   11228:	ldrd	r4, [sp]
   1122c:	ldr	r6, [sp, #8]
   11230:	ldr	lr, [sp, #12]
   11234:	add	sp, sp, #16
   11238:	b	10b70 <free@plt>
   1123c:	ldrd	r4, [sp]
   11240:	ldr	r6, [sp, #8]
   11244:	add	sp, sp, #12
   11248:	pop	{pc}		; (ldr pc, [sp], #4)

0001124c <vetor_atribui@@Base>:
   1124c:	cmp	r0, #0
   11250:	lsrne	r3, r1, #31
   11254:	moveq	r3, #1
   11258:	cmp	r3, #0
   1125c:	bne	11300 <vetor_atribui@@Base+0xb4>
   11260:	ldr	r3, [r0]
   11264:	cmp	r3, r1
   11268:	ble	11300 <vetor_atribui@@Base+0xb4>
   1126c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11270:	mov	r5, r0
   11274:	mov	r0, r2
   11278:	mov	r4, r1
   1127c:	strd	r6, [sp, #8]
   11280:	mov	r6, r2
   11284:	strd	r8, [sp, #16]
   11288:	str	sl, [sp, #24]
   1128c:	str	lr, [sp, #28]
   11290:	bl	10be8 <strlen@plt>
   11294:	ldr	r8, [r5, #8]
   11298:	mov	r9, r0
   1129c:	ldr	r7, [r8, r4, lsl #2]
   112a0:	mov	r0, r7
   112a4:	bl	10be8 <strlen@plt>
   112a8:	cmp	r0, r9
   112ac:	bcc	112d8 <vetor_atribui@@Base+0x8c>
   112b0:	mov	r1, r6
   112b4:	mov	r0, r7
   112b8:	bl	10ba0 <strcpy@plt>
   112bc:	mov	r0, r4
   112c0:	ldrd	r4, [sp]
   112c4:	ldrd	r6, [sp, #8]
   112c8:	ldrd	r8, [sp, #16]
   112cc:	ldr	sl, [sp, #24]
   112d0:	add	sp, sp, #28
   112d4:	pop	{pc}		; (ldr pc, [sp], #4)
   112d8:	mov	r0, r7
   112dc:	add	r1, r9, #1
   112e0:	bl	10b94 <realloc@plt>
   112e4:	ldr	r3, [r5, #8]
   112e8:	str	r0, [r8, r4, lsl #2]
   112ec:	ldr	r7, [r3, r4, lsl #2]
   112f0:	cmp	r7, #0
   112f4:	bne	112b0 <vetor_atribui@@Base+0x64>
   112f8:	mvn	r0, #0
   112fc:	b	112c0 <vetor_atribui@@Base+0x74>
   11300:	mvn	r0, #0
   11304:	bx	lr

00011308 <vetor_tamanho@@Base>:
   11308:	cmp	r0, #0
   1130c:	ldrne	r0, [r0]
   11310:	mvneq	r0, #0
   11314:	bx	lr

00011318 <vetor_elemento@@Base>:
   11318:	cmp	r0, #0
   1131c:	lsrne	r3, r1, #31
   11320:	moveq	r3, #1
   11324:	cmp	r3, #0
   11328:	bne	11344 <vetor_elemento@@Base+0x2c>
   1132c:	ldr	r2, [r0]
   11330:	cmp	r2, r1
   11334:	ble	11344 <vetor_elemento@@Base+0x2c>
   11338:	ldr	r3, [r0, #8]
   1133c:	ldr	r0, [r3, r1, lsl #2]
   11340:	bx	lr
   11344:	mov	r0, #0
   11348:	bx	lr

0001134c <vetor_insere@@Base>:
   1134c:	cmp	r0, #0
   11350:	lsrne	r3, r2, #31
   11354:	moveq	r3, #1
   11358:	cmp	r3, #0
   1135c:	bne	1143c <vetor_insere@@Base+0xf0>
   11360:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11364:	strd	r6, [sp, #8]
   11368:	ldr	r6, [r0]
   1136c:	str	r8, [sp, #16]
   11370:	str	lr, [sp, #20]
   11374:	cmp	r6, r2
   11378:	blt	11434 <vetor_insere@@Base+0xe8>
   1137c:	ldmib	r0, {r3, r5}
   11380:	mov	r7, r0
   11384:	mov	r8, r1
   11388:	mov	r4, r2
   1138c:	cmp	r6, r3
   11390:	beq	113fc <vetor_insere@@Base+0xb0>
   11394:	cmp	r4, r6
   11398:	addlt	r3, r5, r6, lsl #2
   1139c:	addlt	r2, r5, r4, lsl #2
   113a0:	bge	113b4 <vetor_insere@@Base+0x68>
   113a4:	ldr	ip, [r3, #-4]
   113a8:	str	ip, [r3], #-4
   113ac:	cmp	r2, r3
   113b0:	bne	113a4 <vetor_insere@@Base+0x58>
   113b4:	mov	r0, r8
   113b8:	bl	10be8 <strlen@plt>
   113bc:	add	r0, r0, #1
   113c0:	mov	r1, #1
   113c4:	bl	10b34 <calloc@plt>
   113c8:	cmp	r0, #0
   113cc:	str	r0, [r5, r4, lsl #2]
   113d0:	beq	11434 <vetor_insere@@Base+0xe8>
   113d4:	mov	r1, r8
   113d8:	bl	10ba0 <strcpy@plt>
   113dc:	add	r1, r6, #1
   113e0:	mov	r0, r4
   113e4:	str	r1, [r7]
   113e8:	ldrd	r4, [sp]
   113ec:	ldrd	r6, [sp, #8]
   113f0:	ldr	r8, [sp, #16]
   113f4:	add	sp, sp, #20
   113f8:	pop	{pc}		; (ldr pc, [sp], #4)
   113fc:	cmp	r6, #0
   11400:	mov	r0, r5
   11404:	lslne	r3, r6, #1
   11408:	moveq	r3, #1
   1140c:	moveq	r1, #4
   11410:	lslne	r1, r6, #3
   11414:	str	r3, [r7, #4]
   11418:	bl	10b94 <realloc@plt>
   1141c:	cmp	r0, #0
   11420:	mov	r5, r0
   11424:	str	r0, [r7, #8]
   11428:	beq	11434 <vetor_insere@@Base+0xe8>
   1142c:	ldr	r6, [r7]
   11430:	b	11394 <vetor_insere@@Base+0x48>
   11434:	mvn	r0, #0
   11438:	b	113e8 <vetor_insere@@Base+0x9c>
   1143c:	mvn	r0, #0
   11440:	bx	lr

00011444 <vetor_remove@@Base>:
   11444:	cmp	r0, #0
   11448:	lsrne	r3, r1, #31
   1144c:	moveq	r3, #1
   11450:	cmp	r3, #0
   11454:	bne	114d4 <vetor_remove@@Base+0x90>
   11458:	ldr	r3, [r0]
   1145c:	cmp	r3, r1
   11460:	ble	114d4 <vetor_remove@@Base+0x90>
   11464:	ldr	r3, [r0, #8]
   11468:	strd	r4, [sp, #-16]!
   1146c:	mov	r5, r0
   11470:	mov	r4, r1
   11474:	ldr	r0, [r3, r1, lsl #2]
   11478:	str	r6, [sp, #8]
   1147c:	lsl	r6, r1, #2
   11480:	str	lr, [sp, #12]
   11484:	bl	10b70 <free@plt>
   11488:	ldr	r0, [r5]
   1148c:	add	r1, r4, #1
   11490:	cmp	r1, r0
   11494:	bge	114b8 <vetor_remove@@Base+0x74>
   11498:	ldr	r3, [r5, #8]
   1149c:	sub	r1, r3, #4
   114a0:	add	r3, r3, r6
   114a4:	add	r1, r1, r0, lsl #2
   114a8:	ldr	r2, [r3, #4]
   114ac:	str	r2, [r3], #4
   114b0:	cmp	r3, r1
   114b4:	bne	114a8 <vetor_remove@@Base+0x64>
   114b8:	sub	r3, r0, #1
   114bc:	ldr	r6, [sp, #8]
   114c0:	mov	r0, #0
   114c4:	str	r3, [r5]
   114c8:	ldrd	r4, [sp]
   114cc:	add	sp, sp, #12
   114d0:	pop	{pc}		; (ldr pc, [sp], #4)
   114d4:	mvn	r0, #0
   114d8:	bx	lr

000114dc <vetor_pesquisa@@Base>:
   114dc:	cmp	r0, #0
   114e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   114e4:	strd	r6, [sp, #8]
   114e8:	str	r8, [sp, #16]
   114ec:	str	lr, [sp, #20]
   114f0:	beq	1154c <vetor_pesquisa@@Base+0x70>
   114f4:	ldr	r7, [r0]
   114f8:	cmp	r7, #0
   114fc:	ble	1154c <vetor_pesquisa@@Base+0x70>
   11500:	ldr	r5, [r0, #8]
   11504:	mov	r6, r1
   11508:	mov	r4, #0
   1150c:	sub	r5, r5, #4
   11510:	b	11520 <vetor_pesquisa@@Base+0x44>
   11514:	add	r4, r4, #1
   11518:	cmp	r7, r4
   1151c:	beq	1154c <vetor_pesquisa@@Base+0x70>
   11520:	mov	r1, r6
   11524:	ldr	r0, [r5, #4]!
   11528:	bl	10b40 <strcmp@plt>
   1152c:	cmp	r0, #0
   11530:	bne	11514 <vetor_pesquisa@@Base+0x38>
   11534:	mov	r0, r4
   11538:	ldrd	r4, [sp]
   1153c:	ldrd	r6, [sp, #8]
   11540:	ldr	r8, [sp, #16]
   11544:	add	sp, sp, #20
   11548:	pop	{pc}		; (ldr pc, [sp], #4)
   1154c:	mvn	r4, #0
   11550:	b	11534 <vetor_pesquisa@@Base+0x58>

00011554 <vetor_ordena@@Base>:
   11554:	cmp	r0, #0
   11558:	beq	115fc <vetor_ordena@@Base+0xa8>
   1155c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11560:	strd	r6, [sp, #8]
   11564:	strd	sl, [sp, #24]
   11568:	ldr	sl, [r0]
   1156c:	strd	r8, [sp, #16]
   11570:	str	lr, [sp, #32]
   11574:	sub	sp, sp, #12
   11578:	cmp	sl, #1
   1157c:	ble	115dc <vetor_ordena@@Base+0x88>
   11580:	ldr	r3, [r0, #8]
   11584:	mov	r8, #1
   11588:	mov	r9, r3
   1158c:	str	r3, [sp, #4]
   11590:	ldr	r7, [r9, #4]!
   11594:	mov	r5, r8
   11598:	mov	r4, r9
   1159c:	ldr	r6, [r4, #-4]
   115a0:	mov	r0, r7
   115a4:	mov	fp, r4
   115a8:	mov	r1, r6
   115ac:	bl	10b40 <strcmp@plt>
   115b0:	cmp	r0, #0
   115b4:	bge	115cc <vetor_ordena@@Base+0x78>
   115b8:	subs	r5, r5, #1
   115bc:	str	r6, [r4]
   115c0:	sub	r4, fp, #4
   115c4:	bne	1159c <vetor_ordena@@Base+0x48>
   115c8:	ldr	fp, [sp, #4]
   115cc:	add	r8, r8, #1
   115d0:	str	r7, [fp]
   115d4:	cmp	r8, sl
   115d8:	bne	11590 <vetor_ordena@@Base+0x3c>
   115dc:	mov	r0, #0
   115e0:	add	sp, sp, #12
   115e4:	ldrd	r4, [sp]
   115e8:	ldrd	r6, [sp, #8]
   115ec:	ldrd	r8, [sp, #16]
   115f0:	ldrd	sl, [sp, #24]
   115f4:	add	sp, sp, #32
   115f8:	pop	{pc}		; (ldr pc, [sp], #4)
   115fc:	mvn	r0, #0
   11600:	bx	lr

00011604 <novo_str@@Base>:
   11604:	strd	r4, [sp, #-16]!
   11608:	mov	r5, r0
   1160c:	mov	r0, #12
   11610:	str	r6, [sp, #8]
   11614:	str	lr, [sp, #12]
   11618:	bl	10bb8 <malloc@plt>
   1161c:	subs	r4, r0, #0
   11620:	beq	11660 <novo_str@@Base+0x5c>
   11624:	mov	r0, r5
   11628:	bl	10be8 <strlen@plt>
   1162c:	add	r6, r0, #1
   11630:	mov	r0, r6
   11634:	bl	10bb8 <malloc@plt>
   11638:	cmp	r0, #0
   1163c:	mov	r3, r0
   11640:	str	r0, [r4]
   11644:	beq	11674 <novo_str@@Base+0x70>
   11648:	mov	r2, r6
   1164c:	mov	r1, r5
   11650:	bl	10b88 <memcpy@plt>
   11654:	mov	r3, #0
   11658:	str	r3, [r4, #4]
   1165c:	str	r3, [r4, #8]
   11660:	mov	r0, r4
   11664:	ldrd	r4, [sp]
   11668:	ldr	r6, [sp, #8]
   1166c:	add	sp, sp, #12
   11670:	pop	{pc}		; (ldr pc, [sp], #4)
   11674:	mov	r0, r4
   11678:	mov	r4, r3
   1167c:	bl	10b70 <free@plt>
   11680:	b	11660 <novo_str@@Base+0x5c>

00011684 <lista_nova@@Base>:
   11684:	mov	r0, #12
   11688:	str	r4, [sp, #-8]!
   1168c:	str	lr, [sp, #4]
   11690:	bl	10bb8 <malloc@plt>
   11694:	cmp	r0, #0
   11698:	beq	116ac <lista_nova@@Base+0x28>
   1169c:	mov	r3, #0
   116a0:	str	r3, [r0]
   116a4:	str	r3, [r0, #4]
   116a8:	str	r3, [r0, #8]
   116ac:	ldr	r4, [sp]
   116b0:	add	sp, sp, #4
   116b4:	pop	{pc}		; (ldr pc, [sp], #4)

000116b8 <lista_apaga@@Base>:
   116b8:	strd	r4, [sp, #-16]!
   116bc:	subs	r5, r0, #0
   116c0:	str	r6, [sp, #8]
   116c4:	str	lr, [sp, #12]
   116c8:	bne	116e4 <lista_apaga@@Base+0x2c>
   116cc:	b	11708 <lista_apaga@@Base+0x50>
   116d0:	ldm	r4, {r0, r3}
   116d4:	str	r3, [r5]
   116d8:	bl	10b70 <free@plt>
   116dc:	mov	r0, r4
   116e0:	bl	10b70 <free@plt>
   116e4:	ldr	r4, [r5]
   116e8:	cmp	r4, #0
   116ec:	bne	116d0 <lista_apaga@@Base+0x18>
   116f0:	mov	r0, r5
   116f4:	ldrd	r4, [sp]
   116f8:	ldr	r6, [sp, #8]
   116fc:	ldr	lr, [sp, #12]
   11700:	add	sp, sp, #16
   11704:	b	10b70 <free@plt>
   11708:	ldrd	r4, [sp]
   1170c:	ldr	r6, [sp, #8]
   11710:	add	sp, sp, #12
   11714:	pop	{pc}		; (ldr pc, [sp], #4)

00011718 <lista_tamanho@@Base>:
   11718:	cmp	r0, #0
   1171c:	ldrne	r0, [r0, #8]
   11720:	mvneq	r0, #0
   11724:	bx	lr

00011728 <lista_inicio@@Base>:
   11728:	cmp	r0, #0
   1172c:	ldrne	r0, [r0]
   11730:	bx	lr

00011734 <lista_fim@@Base>:
   11734:	cmp	r0, #0
   11738:	ldrne	r0, [r0, #4]
   1173c:	bx	lr

00011740 <lista_insere@@Base>:
   11740:	cmp	r1, #0
   11744:	cmpne	r0, #0
   11748:	beq	11800 <lista_insere@@Base+0xc0>
   1174c:	strd	r4, [sp, #-16]!
   11750:	mov	r5, r0
   11754:	mov	r0, r1
   11758:	mov	r4, r2
   1175c:	str	r6, [sp, #8]
   11760:	str	lr, [sp, #12]
   11764:	bl	11604 <novo_str@@Base>
   11768:	cmp	r0, #0
   1176c:	beq	117c4 <lista_insere@@Base+0x84>
   11770:	cmp	r4, #0
   11774:	ldr	r2, [r5]
   11778:	ldr	r3, [r5, #8]
   1177c:	add	r3, r3, #1
   11780:	str	r3, [r5, #8]
   11784:	beq	117d8 <lista_insere@@Base+0x98>
   11788:	cmp	r4, r2
   1178c:	streq	r4, [r0, #4]
   11790:	streq	r0, [r4, #8]
   11794:	streq	r0, [r5]
   11798:	beq	117b4 <lista_insere@@Base+0x74>
   1179c:	ldr	r3, [r4, #8]
   117a0:	str	r4, [r0, #4]
   117a4:	str	r3, [r0, #8]
   117a8:	ldr	r3, [r4, #8]
   117ac:	str	r0, [r3, #4]
   117b0:	str	r0, [r4, #8]
   117b4:	ldrd	r4, [sp]
   117b8:	ldr	r6, [sp, #8]
   117bc:	add	sp, sp, #12
   117c0:	pop	{pc}		; (ldr pc, [sp], #4)
   117c4:	ldrd	r4, [sp]
   117c8:	mov	r0, #0
   117cc:	ldr	r6, [sp, #8]
   117d0:	add	sp, sp, #12
   117d4:	pop	{pc}		; (ldr pc, [sp], #4)
   117d8:	cmp	r2, #0
   117dc:	ldr	r6, [sp, #8]
   117e0:	ldrne	r3, [r5, #4]
   117e4:	streq	r0, [r5]
   117e8:	strne	r3, [r0, #8]
   117ec:	strne	r0, [r3, #4]
   117f0:	str	r0, [r5, #4]
   117f4:	ldrd	r4, [sp]
   117f8:	add	sp, sp, #12
   117fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11800:	mov	r0, #0
   11804:	bx	lr

00011808 <lista_remove@@Base>:
   11808:	cmp	r1, #0
   1180c:	cmpne	r0, #0
   11810:	strd	r4, [sp, #-16]!
   11814:	moveq	r5, #0
   11818:	str	r6, [sp, #8]
   1181c:	str	lr, [sp, #12]
   11820:	beq	11868 <lista_remove@@Base+0x60>
   11824:	ldr	r3, [r0, #8]
   11828:	mov	r4, r1
   1182c:	ldr	r2, [r1, #8]
   11830:	ldr	r5, [r1, #4]
   11834:	sub	r3, r3, #1
   11838:	cmp	r2, #0
   1183c:	str	r3, [r0, #8]
   11840:	strne	r5, [r2, #4]
   11844:	ldrne	r5, [r1, #4]
   11848:	streq	r5, [r0]
   1184c:	cmp	r5, #0
   11850:	streq	r2, [r0, #4]
   11854:	strne	r2, [r5, #8]
   11858:	ldr	r0, [r1]
   1185c:	bl	10b70 <free@plt>
   11860:	mov	r0, r4
   11864:	bl	10b70 <free@plt>
   11868:	mov	r0, r5
   1186c:	ldrd	r4, [sp]
   11870:	ldr	r6, [sp, #8]
   11874:	add	sp, sp, #12
   11878:	pop	{pc}		; (ldr pc, [sp], #4)

0001187c <lista_pesquisa@@Base>:
   1187c:	strd	r4, [sp, #-16]!
   11880:	clz	r4, r1
   11884:	cmp	r0, #0
   11888:	lsr	r4, r4, #5
   1188c:	moveq	r4, #1
   11890:	str	r6, [sp, #8]
   11894:	str	lr, [sp, #12]
   11898:	cmp	r4, #0
   1189c:	movne	r4, #0
   118a0:	bne	118e8 <lista_pesquisa@@Base+0x6c>
   118a4:	cmp	r2, #1
   118a8:	bhi	118e8 <lista_pesquisa@@Base+0x6c>
   118ac:	cmp	r2, #0
   118b0:	mov	r5, r1
   118b4:	bne	118fc <lista_pesquisa@@Base+0x80>
   118b8:	ldr	r4, [r0]
   118bc:	cmp	r4, #0
   118c0:	bne	118d4 <lista_pesquisa@@Base+0x58>
   118c4:	b	118e8 <lista_pesquisa@@Base+0x6c>
   118c8:	ldr	r4, [r4, #4]
   118cc:	cmp	r4, #0
   118d0:	beq	118e8 <lista_pesquisa@@Base+0x6c>
   118d4:	mov	r1, r5
   118d8:	ldr	r0, [r4]
   118dc:	bl	10b40 <strcmp@plt>
   118e0:	cmp	r0, #0
   118e4:	bne	118c8 <lista_pesquisa@@Base+0x4c>
   118e8:	mov	r0, r4
   118ec:	ldrd	r4, [sp]
   118f0:	ldr	r6, [sp, #8]
   118f4:	add	sp, sp, #12
   118f8:	pop	{pc}		; (ldr pc, [sp], #4)
   118fc:	ldr	r4, [r0, #4]
   11900:	cmp	r4, #0
   11904:	bne	11918 <lista_pesquisa@@Base+0x9c>
   11908:	b	118e8 <lista_pesquisa@@Base+0x6c>
   1190c:	ldr	r4, [r4, #8]
   11910:	cmp	r4, #0
   11914:	beq	118e8 <lista_pesquisa@@Base+0x6c>
   11918:	mov	r1, r5
   1191c:	ldr	r0, [r4]
   11920:	bl	10b40 <strcmp@plt>
   11924:	cmp	r0, #0
   11928:	bne	1190c <lista_pesquisa@@Base+0x90>
   1192c:	b	118e8 <lista_pesquisa@@Base+0x6c>

00011930 <lista_ordena@@Base>:
   11930:	cmp	r0, #0
   11934:	beq	119c0 <lista_ordena@@Base+0x90>
   11938:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1193c:	strd	r6, [sp, #8]
   11940:	ldr	r6, [r0]
   11944:	str	r8, [sp, #16]
   11948:	str	lr, [sp, #20]
   1194c:	ldr	r7, [r6, #4]
   11950:	cmp	r7, #0
   11954:	beq	119a8 <lista_ordena@@Base+0x78>
   11958:	mov	r5, r6
   1195c:	mov	r4, r7
   11960:	ldr	r0, [r4]
   11964:	ldr	r1, [r5]
   11968:	bl	10b40 <strcmp@plt>
   1196c:	cmp	r0, #0
   11970:	movlt	r5, r4
   11974:	ldr	r4, [r4, #4]
   11978:	cmp	r4, #0
   1197c:	bne	11960 <lista_ordena@@Base+0x30>
   11980:	cmp	r6, r5
   11984:	beq	11998 <lista_ordena@@Base+0x68>
   11988:	ldr	r2, [r5]
   1198c:	ldr	r3, [r6]
   11990:	str	r2, [r6]
   11994:	str	r3, [r5]
   11998:	mov	r6, r7
   1199c:	ldr	r7, [r6, #4]
   119a0:	cmp	r7, #0
   119a4:	bne	11958 <lista_ordena@@Base+0x28>
   119a8:	mov	r0, r7
   119ac:	ldrd	r4, [sp]
   119b0:	ldrd	r6, [sp, #8]
   119b4:	ldr	r8, [sp, #16]
   119b8:	add	sp, sp, #20
   119bc:	pop	{pc}		; (ldr pc, [sp], #4)
   119c0:	mvn	r0, #0
   119c4:	bx	lr

000119c8 <lista_inverte@@Base>:
   119c8:	strd	r4, [sp, #-12]!
   119cc:	subs	r5, r0, #0
   119d0:	str	lr, [sp, #8]
   119d4:	beq	11a68 <lista_inverte@@Base+0xa0>
   119d8:	ldr	r4, [r5, #8]
   119dc:	cmp	r4, #1
   119e0:	movle	r0, #0
   119e4:	ble	11a54 <lista_inverte@@Base+0x8c>
   119e8:	ldr	r1, [r5]
   119ec:	cmp	r4, #2
   119f0:	ldr	r3, [r1, #4]
   119f4:	beq	11a60 <lista_inverte@@Base+0x98>
   119f8:	sub	r4, r4, #2
   119fc:	mov	ip, #0
   11a00:	b	11a08 <lista_inverte@@Base+0x40>
   11a04:	mov	r3, r2
   11a08:	ldmib	r3, {r2, lr}
   11a0c:	add	ip, ip, #1
   11a10:	cmp	r4, ip
   11a14:	str	r2, [lr, #4]
   11a18:	str	lr, [r2, #8]
   11a1c:	str	r1, [r3, #4]
   11a20:	str	r3, [r1, #8]
   11a24:	mov	r1, r3
   11a28:	bne	11a04 <lista_inverte@@Base+0x3c>
   11a2c:	ldr	r2, [r5, #4]
   11a30:	mov	r1, #0
   11a34:	mov	r0, r1
   11a38:	ldr	ip, [r2, #8]
   11a3c:	str	ip, [r5, #4]
   11a40:	str	r1, [ip, #4]
   11a44:	str	r3, [r2, #4]
   11a48:	str	r1, [r2, #8]
   11a4c:	str	r2, [r3, #8]
   11a50:	str	r2, [r5]
   11a54:	ldrd	r4, [sp]
   11a58:	add	sp, sp, #8
   11a5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a60:	mov	r3, r1
   11a64:	b	11a2c <lista_inverte@@Base+0x64>
   11a68:	mvn	r0, #0
   11a6c:	b	11a54 <lista_inverte@@Base+0x8c>

00011a70 <__libc_csu_init@@Base>:
   11a70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a74:	mov	r7, r0
   11a78:	ldr	r6, [pc, #72]	; 11ac8 <__libc_csu_init@@Base+0x58>
   11a7c:	ldr	r5, [pc, #72]	; 11acc <__libc_csu_init@@Base+0x5c>
   11a80:	add	r6, pc, r6
   11a84:	add	r5, pc, r5
   11a88:	sub	r6, r6, r5
   11a8c:	mov	r8, r1
   11a90:	mov	r9, r2
   11a94:	bl	10b14 <calloc@plt-0x20>
   11a98:	asrs	r6, r6, #2
   11a9c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11aa0:	mov	r4, #0
   11aa4:	add	r4, r4, #1
   11aa8:	ldr	r3, [r5], #4
   11aac:	mov	r2, r9
   11ab0:	mov	r1, r8
   11ab4:	mov	r0, r7
   11ab8:	blx	r3
   11abc:	cmp	r6, r4
   11ac0:	bne	11aa4 <__libc_csu_init@@Base+0x34>
   11ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac8:	andeq	r0, r1, ip, lsl #9
   11acc:	andeq	r0, r1, r4, lsl #9

00011ad0 <__libc_csu_fini@@Base>:
   11ad0:	bx	lr

Disassembly of section .fini:

00011ad4 <.fini>:
   11ad4:	push	{r3, lr}
   11ad8:	pop	{r3, pc}
