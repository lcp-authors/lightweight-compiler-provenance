
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-errno.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_errno>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	mrc	15, 0, r3, cr13, cr0, {3}
   c:	ldr	r2, [pc, #16]	; 24 <coda_get_errno+0x24>
  10:	add	r3, r3, r2
  14:	mov	r0, r3
  18:	add	sp, fp, #0
  1c:	pop	{fp}		; (ldr fp, [sp], #4)
  20:	bx	lr
  24:	.word	0x00000000

00000028 <coda_add_error_message_vargs>:
  28:	str	fp, [sp, #-8]!
  2c:	str	lr, [sp, #4]
  30:	add	fp, sp, #4
  34:	sub	sp, sp, #4096	; 0x1000
  38:	sub	sp, sp, #16
  3c:	sub	r3, fp, #4096	; 0x1000
  40:	sub	r3, r3, #4
  44:	str	r0, [r3, #-12]
  48:	sub	r3, fp, #4096	; 0x1000
  4c:	sub	r3, r3, #4
  50:	str	r1, [r3, #-16]
  54:	sub	r3, fp, #4096	; 0x1000
  58:	sub	r3, r3, #4
  5c:	ldr	r3, [r3, #-12]
  60:	cmp	r3, #0
  64:	beq	160 <coda_add_error_message_vargs+0x138>
  68:	mrc	15, 0, r3, cr13, cr0, {3}
  6c:	ldr	r2, [pc, #264]	; 17c <coda_add_error_message_vargs+0x154>
  70:	add	r3, r3, r2
  74:	mov	r0, r3
  78:	bl	0 <strlen>
  7c:	mov	r3, r0
  80:	str	r3, [fp, #-8]
  84:	ldr	r3, [fp, #-8]
  88:	cmp	r3, #4096	; 0x1000
  8c:	bge	168 <coda_add_error_message_vargs+0x140>
  90:	ldr	r3, [fp, #-8]
  94:	cmp	r3, #0
  98:	bne	e8 <coda_add_error_message_vargs+0xc0>
  9c:	mrc	15, 0, r3, cr13, cr0, {3}
  a0:	ldr	r2, [pc, #216]	; 180 <coda_add_error_message_vargs+0x158>
  a4:	ldr	r3, [r3, r2]
  a8:	mov	r0, r3
  ac:	bl	3c0 <coda_errno_to_string>
  b0:	mov	r2, r0
  b4:	sub	r3, fp, #4096	; 0x1000
  b8:	sub	r3, r3, #4
  bc:	sub	r3, r3, #8
  c0:	mov	r1, r2
  c4:	mov	r0, r3
  c8:	bl	0 <strcpy>
  cc:	sub	r3, fp, #4096	; 0x1000
  d0:	sub	r3, r3, #4
  d4:	sub	r3, r3, #8
  d8:	mov	r0, r3
  dc:	bl	0 <strlen>
  e0:	mov	r3, r0
  e4:	str	r3, [fp, #-8]
  e8:	ldr	r3, [fp, #-8]
  ec:	rsb	r3, r3, #4096	; 0x1000
  f0:	mov	r1, r3
  f4:	sub	r3, fp, #4096	; 0x1000
  f8:	sub	r3, r3, #4
  fc:	sub	r2, fp, #4096	; 0x1000
 100:	sub	r2, r2, #4
 104:	sub	r0, fp, #4096	; 0x1000
 108:	sub	r0, r0, #4
 10c:	sub	r0, r0, #8
 110:	ldr	r3, [r3, #-16]
 114:	ldr	r2, [r2, #-12]
 118:	bl	0 <vsnprintf>
 11c:	ldr	r3, [fp, #-8]
 120:	rsb	r3, r3, #4096	; 0x1000
 124:	sub	r2, fp, #4096	; 0x1000
 128:	sub	r2, r2, #4
 12c:	add	r3, r2, r3
 130:	mov	r2, #0
 134:	strb	r2, [r3, #-8]
 138:	sub	r3, fp, #4096	; 0x1000
 13c:	sub	r3, r3, #4
 140:	sub	r3, r3, #8
 144:	mrc	15, 0, r2, cr13, cr0, {3}
 148:	ldr	r1, [pc, #44]	; 17c <coda_add_error_message_vargs+0x154>
 14c:	add	r2, r2, r1
 150:	mov	r1, r3
 154:	mov	r0, r2
 158:	bl	0 <strcat>
 15c:	b	16c <coda_add_error_message_vargs+0x144>
 160:	nop	{0}
 164:	b	16c <coda_add_error_message_vargs+0x144>
 168:	nop	{0}
 16c:	sub	sp, fp, #4
 170:	ldr	fp, [sp]
 174:	add	sp, sp, #4
 178:	pop	{pc}		; (ldr pc, [sp], #4)
	...

00000184 <coda_add_error_message>:
 184:	push	{r0, r1, r2, r3}
 188:	str	fp, [sp, #-8]!
 18c:	str	lr, [sp, #4]
 190:	add	fp, sp, #4
 194:	sub	sp, sp, #8
 198:	add	r3, fp, #8
 19c:	str	r3, [fp, #-8]
 1a0:	ldr	r1, [fp, #-8]
 1a4:	ldr	r0, [fp, #4]
 1a8:	bl	28 <coda_add_error_message_vargs>
 1ac:	nop	{0}
 1b0:	sub	sp, fp, #4
 1b4:	ldr	fp, [sp]
 1b8:	ldr	lr, [sp, #4]
 1bc:	add	sp, sp, #8
 1c0:	add	sp, sp, #16
 1c4:	bx	lr

000001c8 <coda_set_error_message_vargs>:
 1c8:	str	fp, [sp, #-8]!
 1cc:	str	lr, [sp, #4]
 1d0:	add	fp, sp, #4
 1d4:	sub	sp, sp, #4096	; 0x1000
 1d8:	sub	sp, sp, #16
 1dc:	sub	r3, fp, #4096	; 0x1000
 1e0:	sub	r3, r3, #4
 1e4:	str	r0, [r3, #-12]
 1e8:	sub	r3, fp, #4096	; 0x1000
 1ec:	sub	r3, r3, #4
 1f0:	str	r1, [r3, #-16]
 1f4:	sub	r3, fp, #4096	; 0x1000
 1f8:	sub	r3, r3, #4
 1fc:	ldr	r3, [r3, #-12]
 200:	cmp	r3, #0
 204:	bne	21c <coda_set_error_message_vargs+0x54>
 208:	mrc	15, 0, r3, cr13, cr0, {3}
 20c:	ldr	r2, [pc, #124]	; 290 <coda_set_error_message_vargs+0xc8>
 210:	mov	r1, #0
 214:	strb	r1, [r3, r2]
 218:	b	27c <coda_set_error_message_vargs+0xb4>
 21c:	sub	r3, fp, #4096	; 0x1000
 220:	sub	r3, r3, #4
 224:	sub	r2, fp, #4096	; 0x1000
 228:	sub	r2, r2, #4
 22c:	sub	r0, fp, #4096	; 0x1000
 230:	sub	r0, r0, #4
 234:	sub	r0, r0, #4
 238:	ldr	r3, [r3, #-16]
 23c:	ldr	r2, [r2, #-12]
 240:	mov	r1, #4096	; 0x1000
 244:	bl	0 <vsnprintf>
 248:	sub	r3, fp, #4096	; 0x1000
 24c:	sub	r3, r3, #4
 250:	mov	r2, #0
 254:	strb	r2, [r3, #4092]	; 0xffc
 258:	sub	r3, fp, #4096	; 0x1000
 25c:	sub	r3, r3, #4
 260:	sub	r3, r3, #4
 264:	mrc	15, 0, r2, cr13, cr0, {3}
 268:	ldr	r1, [pc, #32]	; 290 <coda_set_error_message_vargs+0xc8>
 26c:	add	r2, r2, r1
 270:	mov	r1, r3
 274:	mov	r0, r2
 278:	bl	0 <strcpy>
 27c:	nop	{0}
 280:	sub	sp, fp, #4
 284:	ldr	fp, [sp]
 288:	add	sp, sp, #4
 28c:	pop	{pc}		; (ldr pc, [sp], #4)
 290:	.word	0x00000000

00000294 <coda_set_error_message>:
 294:	push	{r0, r1, r2, r3}
 298:	str	fp, [sp, #-8]!
 29c:	str	lr, [sp, #4]
 2a0:	add	fp, sp, #4
 2a4:	sub	sp, sp, #8
 2a8:	add	r3, fp, #8
 2ac:	str	r3, [fp, #-8]
 2b0:	ldr	r1, [fp, #-8]
 2b4:	ldr	r0, [fp, #4]
 2b8:	bl	1c8 <coda_set_error_message_vargs>
 2bc:	nop	{0}
 2c0:	sub	sp, fp, #4
 2c4:	ldr	fp, [sp]
 2c8:	ldr	lr, [sp, #4]
 2cc:	add	sp, sp, #8
 2d0:	add	sp, sp, #16
 2d4:	bx	lr

000002d8 <add_error_message>:
 2d8:	push	{r0, r1, r2, r3}
 2dc:	str	fp, [sp, #-8]!
 2e0:	str	lr, [sp, #4]
 2e4:	add	fp, sp, #4
 2e8:	sub	sp, sp, #8
 2ec:	add	r3, fp, #8
 2f0:	str	r3, [fp, #-8]
 2f4:	ldr	r1, [fp, #-8]
 2f8:	ldr	r0, [fp, #4]
 2fc:	bl	28 <coda_add_error_message_vargs>
 300:	mov	r3, #0
 304:	mov	r0, r3
 308:	sub	sp, fp, #4
 30c:	ldr	fp, [sp]
 310:	ldr	lr, [sp, #4]
 314:	add	sp, sp, #8
 318:	add	sp, sp, #16
 31c:	bx	lr

00000320 <coda_cursor_add_to_error_message>:
 320:	str	fp, [sp, #-8]!
 324:	str	lr, [sp, #4]
 328:	add	fp, sp, #4
 32c:	sub	sp, sp, #8
 330:	str	r0, [fp, #-8]
 334:	movw	r0, #0
 338:	movt	r0, #0
 33c:	bl	184 <coda_add_error_message>
 340:	movw	r1, #0
 344:	movt	r1, #0
 348:	ldr	r0, [fp, #-8]
 34c:	bl	0 <coda_cursor_print_path>
 350:	nop	{0}
 354:	sub	sp, fp, #4
 358:	ldr	fp, [sp]
 35c:	add	sp, sp, #4
 360:	pop	{pc}		; (ldr pc, [sp], #4)

00000364 <coda_set_error>:
 364:	push	{r1, r2, r3}
 368:	str	fp, [sp, #-8]!
 36c:	str	lr, [sp, #4]
 370:	add	fp, sp, #4
 374:	sub	sp, sp, #20
 378:	str	r0, [fp, #-20]	; 0xffffffec
 37c:	mrc	15, 0, r3, cr13, cr0, {3}
 380:	ldr	r1, [pc, #52]	; 3bc <coda_set_error+0x58>
 384:	ldr	r2, [fp, #-20]	; 0xffffffec
 388:	str	r2, [r3, r1]
 38c:	add	r3, fp, #8
 390:	str	r3, [fp, #-12]
 394:	ldr	r1, [fp, #-12]
 398:	ldr	r0, [fp, #4]
 39c:	bl	1c8 <coda_set_error_message_vargs>
 3a0:	nop	{0}
 3a4:	sub	sp, fp, #4
 3a8:	ldr	fp, [sp]
 3ac:	ldr	lr, [sp, #4]
 3b0:	add	sp, sp, #8
 3b4:	add	sp, sp, #12
 3b8:	bx	lr
 3bc:	.word	0x00000000

000003c0 <coda_errno_to_string>:
 3c0:	push	{fp}		; (str fp, [sp, #-4]!)
 3c4:	add	fp, sp, #0
 3c8:	sub	sp, sp, #12
 3cc:	str	r0, [fp, #-8]
 3d0:	mrc	15, 0, r3, cr13, cr0, {3}
 3d4:	ldr	r2, [pc, #824]	; 714 <coda_errno_to_string+0x354>
 3d8:	ldr	r3, [r3, r2]
 3dc:	ldr	r2, [fp, #-8]
 3e0:	cmp	r2, r3
 3e4:	bne	40c <coda_errno_to_string+0x4c>
 3e8:	mrc	15, 0, r3, cr13, cr0, {3}
 3ec:	ldr	r2, [pc, #804]	; 718 <coda_errno_to_string+0x358>
 3f0:	ldrb	r3, [r3, r2]
 3f4:	cmp	r3, #0
 3f8:	beq	40c <coda_errno_to_string+0x4c>
 3fc:	mrc	15, 0, r3, cr13, cr0, {3}
 400:	ldr	r2, [pc, #784]	; 718 <coda_errno_to_string+0x358>
 404:	add	r3, r3, r2
 408:	b	704 <coda_errno_to_string+0x344>
 40c:	ldr	r3, [fp, #-8]
 410:	cmn	r3, #101	; 0x65
 414:	beq	638 <coda_errno_to_string+0x278>
 418:	ldr	r3, [fp, #-8]
 41c:	cmn	r3, #101	; 0x65
 420:	bgt	4e4 <coda_errno_to_string+0x124>
 424:	ldr	r3, [fp, #-8]
 428:	cmn	r3, #108	; 0x6c
 42c:	beq	68c <coda_errno_to_string+0x2cc>
 430:	ldr	r3, [fp, #-8]
 434:	cmn	r3, #108	; 0x6c
 438:	bgt	494 <coda_errno_to_string+0xd4>
 43c:	ldr	r3, [fp, #-8]
 440:	mvn	r2, #300	; 0x12c
 444:	cmp	r3, r2
 448:	beq	6b0 <coda_errno_to_string+0x2f0>
 44c:	ldr	r3, [fp, #-8]
 450:	cmn	r3, #300	; 0x12c
 454:	bge	478 <coda_errno_to_string+0xb8>
 458:	ldr	r3, [fp, #-8]
 45c:	mvn	r2, #400	; 0x190
 460:	cmp	r3, r2
 464:	beq	6c8 <coda_errno_to_string+0x308>
 468:	ldr	r3, [fp, #-8]
 46c:	cmn	r3, #400	; 0x190
 470:	beq	6bc <coda_errno_to_string+0x2fc>
 474:	b	6d4 <coda_errno_to_string+0x314>
 478:	ldr	r3, [fp, #-8]
 47c:	cmn	r3, #300	; 0x12c
 480:	beq	6a4 <coda_errno_to_string+0x2e4>
 484:	ldr	r3, [fp, #-8]
 488:	cmn	r3, #200	; 0xc8
 48c:	beq	698 <coda_errno_to_string+0x2d8>
 490:	b	6d4 <coda_errno_to_string+0x314>
 494:	ldr	r3, [fp, #-8]
 498:	cmn	r3, #105	; 0x69
 49c:	beq	668 <coda_errno_to_string+0x2a8>
 4a0:	ldr	r3, [fp, #-8]
 4a4:	cmn	r3, #105	; 0x69
 4a8:	bgt	4c8 <coda_errno_to_string+0x108>
 4ac:	ldr	r3, [fp, #-8]
 4b0:	cmn	r3, #107	; 0x6b
 4b4:	beq	680 <coda_errno_to_string+0x2c0>
 4b8:	ldr	r3, [fp, #-8]
 4bc:	cmn	r3, #106	; 0x6a
 4c0:	beq	674 <coda_errno_to_string+0x2b4>
 4c4:	b	6d4 <coda_errno_to_string+0x314>
 4c8:	ldr	r3, [fp, #-8]
 4cc:	cmn	r3, #103	; 0x67
 4d0:	beq	650 <coda_errno_to_string+0x290>
 4d4:	ldr	r3, [fp, #-8]
 4d8:	cmn	r3, #103	; 0x67
 4dc:	bgt	644 <coda_errno_to_string+0x284>
 4e0:	b	65c <coda_errno_to_string+0x29c>
 4e4:	ldr	r3, [fp, #-8]
 4e8:	cmn	r3, #14
 4ec:	beq	5f0 <coda_errno_to_string+0x230>
 4f0:	ldr	r3, [fp, #-8]
 4f4:	cmn	r3, #14
 4f8:	bgt	54c <coda_errno_to_string+0x18c>
 4fc:	ldr	r3, [fp, #-8]
 500:	cmn	r3, #22
 504:	beq	614 <coda_errno_to_string+0x254>
 508:	ldr	r3, [fp, #-8]
 50c:	cmn	r3, #22
 510:	bgt	530 <coda_errno_to_string+0x170>
 514:	ldr	r3, [fp, #-8]
 518:	cmn	r3, #100	; 0x64
 51c:	beq	62c <coda_errno_to_string+0x26c>
 520:	ldr	r3, [fp, #-8]
 524:	cmn	r3, #23
 528:	beq	620 <coda_errno_to_string+0x260>
 52c:	b	6d4 <coda_errno_to_string+0x314>
 530:	ldr	r3, [fp, #-8]
 534:	cmn	r3, #21
 538:	beq	608 <coda_errno_to_string+0x248>
 53c:	ldr	r3, [fp, #-8]
 540:	cmn	r3, #20
 544:	beq	5fc <coda_errno_to_string+0x23c>
 548:	b	6d4 <coda_errno_to_string+0x314>
 54c:	ldr	r3, [fp, #-8]
 550:	cmn	r3, #11
 554:	beq	5cc <coda_errno_to_string+0x20c>
 558:	ldr	r3, [fp, #-8]
 55c:	cmn	r3, #11
 560:	bgt	580 <coda_errno_to_string+0x1c0>
 564:	ldr	r3, [fp, #-8]
 568:	cmn	r3, #13
 56c:	beq	5e4 <coda_errno_to_string+0x224>
 570:	ldr	r3, [fp, #-8]
 574:	cmn	r3, #12
 578:	beq	5d8 <coda_errno_to_string+0x218>
 57c:	b	6d4 <coda_errno_to_string+0x314>
 580:	ldr	r3, [fp, #-8]
 584:	cmn	r3, #1
 588:	beq	5b4 <coda_errno_to_string+0x1f4>
 58c:	ldr	r3, [fp, #-8]
 590:	cmp	r3, #0
 594:	beq	5a8 <coda_errno_to_string+0x1e8>
 598:	ldr	r3, [fp, #-8]
 59c:	cmn	r3, #10
 5a0:	beq	5c0 <coda_errno_to_string+0x200>
 5a4:	b	6d4 <coda_errno_to_string+0x314>
 5a8:	movw	r3, #0
 5ac:	movt	r3, #0
 5b0:	b	704 <coda_errno_to_string+0x344>
 5b4:	movw	r3, #0
 5b8:	movt	r3, #0
 5bc:	b	704 <coda_errno_to_string+0x344>
 5c0:	movw	r3, #0
 5c4:	movt	r3, #0
 5c8:	b	704 <coda_errno_to_string+0x344>
 5cc:	movw	r3, #0
 5d0:	movt	r3, #0
 5d4:	b	704 <coda_errno_to_string+0x344>
 5d8:	movw	r3, #0
 5dc:	movt	r3, #0
 5e0:	b	704 <coda_errno_to_string+0x344>
 5e4:	movw	r3, #0
 5e8:	movt	r3, #0
 5ec:	b	704 <coda_errno_to_string+0x344>
 5f0:	movw	r3, #0
 5f4:	movt	r3, #0
 5f8:	b	704 <coda_errno_to_string+0x344>
 5fc:	movw	r3, #0
 600:	movt	r3, #0
 604:	b	704 <coda_errno_to_string+0x344>
 608:	movw	r3, #0
 60c:	movt	r3, #0
 610:	b	704 <coda_errno_to_string+0x344>
 614:	movw	r3, #0
 618:	movt	r3, #0
 61c:	b	704 <coda_errno_to_string+0x344>
 620:	movw	r3, #0
 624:	movt	r3, #0
 628:	b	704 <coda_errno_to_string+0x344>
 62c:	movw	r3, #0
 630:	movt	r3, #0
 634:	b	704 <coda_errno_to_string+0x344>
 638:	movw	r3, #0
 63c:	movt	r3, #0
 640:	b	704 <coda_errno_to_string+0x344>
 644:	movw	r3, #0
 648:	movt	r3, #0
 64c:	b	704 <coda_errno_to_string+0x344>
 650:	movw	r3, #0
 654:	movt	r3, #0
 658:	b	704 <coda_errno_to_string+0x344>
 65c:	movw	r3, #0
 660:	movt	r3, #0
 664:	b	704 <coda_errno_to_string+0x344>
 668:	movw	r3, #0
 66c:	movt	r3, #0
 670:	b	704 <coda_errno_to_string+0x344>
 674:	movw	r3, #0
 678:	movt	r3, #0
 67c:	b	704 <coda_errno_to_string+0x344>
 680:	movw	r3, #0
 684:	movt	r3, #0
 688:	b	704 <coda_errno_to_string+0x344>
 68c:	movw	r3, #0
 690:	movt	r3, #0
 694:	b	704 <coda_errno_to_string+0x344>
 698:	movw	r3, #0
 69c:	movt	r3, #0
 6a0:	b	704 <coda_errno_to_string+0x344>
 6a4:	movw	r3, #0
 6a8:	movt	r3, #0
 6ac:	b	704 <coda_errno_to_string+0x344>
 6b0:	movw	r3, #0
 6b4:	movt	r3, #0
 6b8:	b	704 <coda_errno_to_string+0x344>
 6bc:	movw	r3, #0
 6c0:	movt	r3, #0
 6c4:	b	704 <coda_errno_to_string+0x344>
 6c8:	movw	r3, #0
 6cc:	movt	r3, #0
 6d0:	b	704 <coda_errno_to_string+0x344>
 6d4:	mrc	15, 0, r3, cr13, cr0, {3}
 6d8:	ldr	r2, [pc, #52]	; 714 <coda_errno_to_string+0x354>
 6dc:	ldr	r3, [r3, r2]
 6e0:	ldr	r2, [fp, #-8]
 6e4:	cmp	r2, r3
 6e8:	bne	6fc <coda_errno_to_string+0x33c>
 6ec:	mrc	15, 0, r3, cr13, cr0, {3}
 6f0:	ldr	r2, [pc, #32]	; 718 <coda_errno_to_string+0x358>
 6f4:	add	r3, r3, r2
 6f8:	b	704 <coda_errno_to_string+0x344>
 6fc:	movw	r3, #0
 700:	movt	r3, #0
 704:	mov	r0, r3
 708:	add	sp, fp, #0
 70c:	pop	{fp}		; (ldr fp, [sp], #4)
 710:	bx	lr
	...
