
../repos/prog2/CMakeFiles/9.dir/Aula09_Filas_de_Prioridade_e_Heaps/priorityqueue.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <fp_insere>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	str	r7, [sp, #20]
  20:	mov	r5, r0
  24:	cmp	r5, #0
  28:	bne	34 <fp_insere+0x34>
  2c:	mvn	r0, #0
  30:	b	cc <fp_insere+0xcc>
  34:	ldr	r0, [r5]
  38:	ldr	ip, [r5, #4]
  3c:	cmp	r0, ip
  40:	bne	4c <fp_insere+0x4c>
  44:	mov	r0, #0
  48:	b	cc <fp_insere+0xcc>
  4c:	mov	r0, r2
  50:	bl	0 <elemento_cria>
  54:	mov	r4, r0
  58:	mov	r6, #0
  5c:	ldr	r2, [r5]
  60:	cmp	r6, r2
  64:	bge	88 <fp_insere+0x88>
  68:	ldr	r2, [r5, #8]
  6c:	ldr	r0, [r2, r6, lsl #2]
  70:	mov	r1, r4
  74:	bl	0 <maior_que>
  78:	cmp	r0, #0
  7c:	beq	88 <fp_insere+0x88>
  80:	add	r6, r6, #1
  84:	b	5c <fp_insere+0x5c>
  88:	ldr	r7, [r5]
  8c:	cmp	r7, r6
  90:	blt	b4 <fp_insere+0xb4>
  94:	ldr	r3, [r5, #8]
  98:	lsl	r2, r7, #2
  9c:	add	r1, r3, r2
  a0:	ldr	r0, [r5, #8]
  a4:	ldr	ip, [r0, r7, lsl #2]
  a8:	str	ip, [r1, #4]
  ac:	sub	r7, r7, #1
  b0:	b	8c <fp_insere+0x8c>
  b4:	ldr	r3, [r5, #8]
  b8:	str	r4, [r3, r6, lsl #2]
  bc:	ldr	r1, [r5]
  c0:	add	ip, r1, #1
  c4:	str	ip, [r5]
  c8:	mov	r0, #1
  cc:	ldr	r4, [sp, #8]
  d0:	ldr	r5, [sp, #12]
  d4:	ldr	r6, [sp, #16]
  d8:	ldr	r7, [sp, #20]
  dc:	ldr	lr, [sp, #4]
  e0:	add	sp, sp, #24
  e4:	bx	lr

000000e8 <fp_remove>:
  e8:	mov	ip, sp
  ec:	sub	sp, sp, #16
  f0:	str	ip, [sp]
  f4:	str	lr, [sp, #4]
  f8:	str	r4, [sp, #8]
  fc:	cmp	r0, #0
 100:	beq	118 <fp_remove+0x30>
 104:	ldr	r3, [r0]
 108:	cmp	r3, #0
 10c:	moveq	r2, #1
 110:	movne	r2, #0
 114:	b	11c <fp_remove+0x34>
 118:	mov	r2, #1
 11c:	cmp	r2, #0
 120:	beq	12c <fp_remove+0x44>
 124:	mov	r0, #0
 128:	b	174 <fp_remove+0x8c>
 12c:	ldr	r3, [r0, #8]
 130:	ldr	r3, [r3]
 134:	mov	ip, #0
 138:	ldr	r1, [r0]
 13c:	cmp	ip, r1
 140:	bge	164 <fp_remove+0x7c>
 144:	ldr	r1, [r0, #8]
 148:	ldr	r2, [r0, #8]
 14c:	lsl	r4, ip, #2
 150:	add	r2, r2, r4
 154:	ldr	r2, [r2, #4]
 158:	str	r2, [r1, ip, lsl #2]
 15c:	add	ip, ip, #1
 160:	b	138 <fp_remove+0x50>
 164:	ldr	r1, [r0]
 168:	sub	ip, r1, #1
 16c:	str	ip, [r0]
 170:	ldr	r0, [r3, #4]
 174:	ldr	r4, [sp, #8]
 178:	ldr	lr, [sp, #4]
 17c:	add	sp, sp, #16
 180:	bx	lr

00000184 <fp_carrega>:
 184:	mov	ip, sp
 188:	sub	sp, sp, #280	; 0x118
 18c:	str	ip, [sp]
 190:	str	lr, [sp, #4]
 194:	str	r4, [sp, #8]
 198:	str	r5, [sp, #12]
 19c:	mov	r5, r0
 1a0:	mov	r0, r1
 1a4:	ldr	r1, [pc, #156]	; 248 <fp_carrega+0xc4>
 1a8:	bl	0 <fopen>
 1ac:	mov	r4, r0
 1b0:	cmp	r4, #0
 1b4:	bne	1c4 <fp_carrega+0x40>
 1b8:	ldr	r0, [pc, #132]	; 244 <fp_carrega+0xc0>
 1bc:	bl	0 <printf>
 1c0:	b	22c <fp_carrega+0xa8>
 1c4:	mov	r0, r4
 1c8:	bl	0 <feof>
 1cc:	cmp	r0, #0
 1d0:	bne	224 <fp_carrega+0xa0>
 1d4:	ldr	r1, [pc, #100]	; 240 <fp_carrega+0xbc>
 1d8:	add	r2, sp, #16
 1dc:	mov	r0, r4
 1e0:	bl	0 <fscanf>
 1e4:	add	r0, sp, #24
 1e8:	mov	r1, #256	; 0x100
 1ec:	mov	r2, r4
 1f0:	bl	0 <fgets>
 1f4:	add	r0, sp, #24
 1f8:	bl	0 <strlen>
 1fc:	add	r1, sp, #24
 200:	add	r0, r1, r0
 204:	mov	r3, #0
 208:	sub	lr, r0, #4096	; 0x1000
 20c:	strb	r3, [lr, #4095]	; 0xfff
 210:	add	r1, sp, #24
 214:	ldr	r2, [sp, #16]
 218:	mov	r0, r5
 21c:	bl	0 <fp_insere>
 220:	b	1c4 <fp_carrega+0x40>
 224:	mov	r0, r4
 228:	bl	0 <fclose>
 22c:	ldr	r4, [sp, #8]
 230:	ldr	r5, [sp, #12]
 234:	ldr	lr, [sp, #4]
 238:	add	sp, sp, #280	; 0x118
 23c:	bx	lr
 240:	.word	0x00000265
 244:	.word	0x00000269
 248:	.word	0x00000000

0000024c <heap_insere>:
 24c:	mov	ip, sp
 250:	sub	sp, sp, #24
 254:	str	ip, [sp]
 258:	str	lr, [sp, #4]
 25c:	str	r4, [sp, #8]
 260:	str	r5, [sp, #12]
 264:	str	r6, [sp, #16]
 268:	str	r7, [sp, #20]
 26c:	mov	r7, r1
 270:	mov	r6, r0
 274:	ldr	r1, [r6]
 278:	ldr	r0, [r6, #4]
 27c:	cmp	r1, r0
 280:	bne	28c <heap_insere+0x40>
 284:	mov	r0, #0
 288:	b	324 <heap_insere+0xd8>
 28c:	mov	r1, r2
 290:	mov	r0, r3
 294:	bl	0 <elemento_cria>
 298:	mov	r4, r0
 29c:	mov	r5, #0
 2a0:	ldr	r1, [r6]
 2a4:	cmp	r5, r1
 2a8:	bge	2cc <heap_insere+0x80>
 2ac:	ldr	r0, [r6, #8]
 2b0:	ldr	r0, [r0, r5, lsl #2]
 2b4:	mov	r1, r4
 2b8:	blx	r7
 2bc:	cmp	r0, #1
 2c0:	movne	r3, #1
 2c4:	moveq	r3, #0
 2c8:	b	2d0 <heap_insere+0x84>
 2cc:	mov	r3, #0
 2d0:	cmp	r3, #0
 2d4:	beq	2e0 <heap_insere+0x94>
 2d8:	add	r5, r5, #1
 2dc:	b	2a0 <heap_insere+0x54>
 2e0:	mov	r0, r5
 2e4:	cmp	r0, #0
 2e8:	ble	30c <heap_insere+0xc0>
 2ec:	ldr	r1, [r6, #8]
 2f0:	lsl	r2, r0, #2
 2f4:	add	r3, r1, r2
 2f8:	ldr	ip, [r6, #8]
 2fc:	ldr	ip, [ip, r0, lsl #2]
 300:	str	ip, [r3, #4]
 304:	sub	r0, r0, #1
 308:	b	2e4 <heap_insere+0x98>
 30c:	ldr	ip, [r6, #8]
 310:	str	r4, [ip, r5, lsl #2]
 314:	ldr	r1, [r6]
 318:	add	r2, r1, #1
 31c:	str	r2, [r6]
 320:	mov	r0, r5
 324:	ldr	r4, [sp, #8]
 328:	ldr	r5, [sp, #12]
 32c:	ldr	r6, [sp, #16]
 330:	ldr	r7, [sp, #20]
 334:	ldr	lr, [sp, #4]
 338:	add	sp, sp, #24
 33c:	bx	lr

00000340 <heap_remove>:
 340:	mov	ip, sp
 344:	sub	sp, sp, #8
 348:	str	ip, [sp]
 34c:	str	lr, [sp, #4]
 350:	mov	r0, #0
 354:	ldr	lr, [sp, #4]
 358:	add	sp, sp, #8
 35c:	bx	lr

00000360 <heap_carrega>:
 360:	mov	ip, sp
 364:	sub	sp, sp, #288	; 0x120
 368:	str	ip, [sp]
 36c:	str	lr, [sp, #4]
 370:	str	r4, [sp, #8]
 374:	str	r5, [sp, #12]
 378:	str	r6, [sp, #16]
 37c:	mov	r6, r0
 380:	mov	r0, r2
 384:	mov	r5, r1
 388:	ldr	r1, [pc, #164]	; 434 <heap_carrega+0xd4>
 38c:	bl	0 <fopen>
 390:	mov	r4, r0
 394:	cmp	r4, #0
 398:	bne	3a8 <heap_carrega+0x48>
 39c:	ldr	r0, [pc, #140]	; 430 <heap_carrega+0xd0>
 3a0:	bl	0 <printf>
 3a4:	b	414 <heap_carrega+0xb4>
 3a8:	mov	r0, r4
 3ac:	bl	0 <feof>
 3b0:	cmp	r0, #0
 3b4:	bne	40c <heap_carrega+0xac>
 3b8:	ldr	r1, [pc, #108]	; 42c <heap_carrega+0xcc>
 3bc:	add	r2, sp, #24
 3c0:	mov	r0, r4
 3c4:	bl	0 <fscanf>
 3c8:	add	r0, sp, #32
 3cc:	mov	r1, #256	; 0x100
 3d0:	mov	r2, r4
 3d4:	bl	0 <fgets>
 3d8:	add	r0, sp, #32
 3dc:	bl	0 <strlen>
 3e0:	add	r1, sp, #32
 3e4:	add	r0, r1, r0
 3e8:	mov	r3, #0
 3ec:	sub	lr, r0, #4096	; 0x1000
 3f0:	strb	r3, [lr, #4095]	; 0xfff
 3f4:	add	r2, sp, #32
 3f8:	ldr	r3, [sp, #24]
 3fc:	mov	r1, r5
 400:	mov	r0, r6
 404:	bl	24c <heap_insere>
 408:	b	3a8 <heap_carrega+0x48>
 40c:	mov	r0, r4
 410:	bl	0 <fclose>
 414:	ldr	r4, [sp, #8]
 418:	ldr	r5, [sp, #12]
 41c:	ldr	r6, [sp, #16]
 420:	ldr	lr, [sp, #4]
 424:	add	sp, sp, #288	; 0x120
 428:	bx	lr
 42c:	.word	0x00000265
 430:	.word	0x00000269
 434:	.word	0x00000000

00000438 <main>:
 438:	mov	ip, sp
 43c:	sub	sp, sp, #192	; 0xc0
 440:	str	ip, [sp]
 444:	str	lr, [sp, #4]
 448:	str	r4, [sp, #8]
 44c:	str	r5, [sp, #12]
 450:	str	r6, [sp, #16]
 454:	mov	r0, #42	; 0x2a
 458:	bl	0 <vetor_cria>
 45c:	mov	r4, r0
 460:	ldr	r0, [pc, #816]	; 798 <main+0x360>
 464:	bl	0 <printf>
 468:	ldr	r1, [pc, #776]	; 778 <main+0x340>
 46c:	mov	r0, r4
 470:	bl	184 <fp_carrega>
 474:	ldr	r0, [pc, #756]	; 770 <main+0x338>
 478:	ldr	r1, [pc, #784]	; 790 <main+0x358>
 47c:	ldr	r1, [r1]
 480:	bl	0 <printf>
 484:	mov	r0, r4
 488:	bl	0 <vetor_imprime>
 48c:	ldr	r2, [r4]
 490:	cmp	r2, #42	; 0x2a
 494:	beq	4a8 <main+0x70>
 498:	ldr	r0, [pc, #772]	; 7a4 <main+0x36c>
 49c:	bl	0 <printf>
 4a0:	mov	r0, #1
 4a4:	b	758 <main+0x320>
 4a8:	mov	r0, r4
 4ac:	bl	e8 <fp_remove>
 4b0:	mov	r1, r0
 4b4:	ldr	r0, [pc, #740]	; 7a0 <main+0x368>
 4b8:	bl	0 <strcmp>
 4bc:	cmp	r0, #0
 4c0:	beq	4d4 <main+0x9c>
 4c4:	ldr	r0, [pc, #688]	; 77c <main+0x344>
 4c8:	bl	0 <printf>
 4cc:	mov	r0, #1
 4d0:	b	758 <main+0x320>
 4d4:	ldr	r1, [pc, #692]	; 790 <main+0x358>
 4d8:	mov	r2, #0
 4dc:	str	r2, [r1]
 4e0:	mov	r0, r4
 4e4:	bl	e8 <fp_remove>
 4e8:	ldr	r0, [pc, #704]	; 7b0 <main+0x378>
 4ec:	ldr	r3, [pc, #668]	; 790 <main+0x358>
 4f0:	ldr	r1, [r3]
 4f4:	bl	0 <printf>
 4f8:	ldr	r3, [pc, #656]	; 790 <main+0x358>
 4fc:	mov	r0, #0
 500:	str	r0, [r3]
 504:	ldr	r1, [pc, #684]	; 7b8 <main+0x380>
 508:	mov	r2, #99	; 0x63
 50c:	mov	r0, r4
 510:	bl	0 <fp_insere>
 514:	ldr	r0, [pc, #652]	; 7a8 <main+0x370>
 518:	ldr	r3, [pc, #624]	; 790 <main+0x358>
 51c:	ldr	r1, [r3]
 520:	bl	0 <printf>
 524:	mov	r0, r4
 528:	bl	e8 <fp_remove>
 52c:	ldr	r1, [pc, #604]	; 790 <main+0x358>
 530:	mov	r3, #0
 534:	str	r3, [r1]
 538:	ldr	r1, [pc, #632]	; 7b8 <main+0x380>
 53c:	mov	r2, #0
 540:	mov	r0, r4
 544:	bl	0 <fp_insere>
 548:	ldr	r0, [pc, #568]	; 788 <main+0x350>
 54c:	ldr	ip, [pc, #572]	; 790 <main+0x358>
 550:	ldr	r1, [ip]
 554:	bl	0 <printf>
 558:	mov	r0, r4
 55c:	bl	e8 <fp_remove>
 560:	ldr	r0, [pc, #552]	; 790 <main+0x358>
 564:	mov	ip, #0
 568:	str	ip, [r0]
 56c:	ldr	r1, [pc, #580]	; 7b8 <main+0x380>
 570:	mov	r2, #42	; 0x2a
 574:	mov	r0, r4
 578:	bl	0 <fp_insere>
 57c:	ldr	r0, [pc, #496]	; 774 <main+0x33c>
 580:	ldr	r1, [pc, #520]	; 790 <main+0x358>
 584:	ldr	r1, [r1]
 588:	bl	0 <printf>
 58c:	ldr	r0, [pc, #496]	; 784 <main+0x34c>
 590:	bl	0 <printf>
 594:	mov	r0, #42	; 0x2a
 598:	bl	0 <vetor_criaHeap>
 59c:	mov	r5, r0
 5a0:	ldr	r4, [pc, #536]	; 7c0 <main+0x388>
 5a4:	ldr	r2, [pc, #460]	; 778 <main+0x340>
 5a8:	mov	r1, r4
 5ac:	mov	r0, r5
 5b0:	bl	360 <heap_carrega>
 5b4:	ldr	r0, [pc, #464]	; 78c <main+0x354>
 5b8:	ldr	r2, [pc, #464]	; 790 <main+0x358>
 5bc:	ldr	r1, [r2]
 5c0:	bl	0 <printf>
 5c4:	mov	r0, r5
 5c8:	bl	0 <vetor_imprimeHeap>
 5cc:	ldr	ip, [r5]
 5d0:	cmp	ip, #42	; 0x2a
 5d4:	beq	5e8 <main+0x1b0>
 5d8:	ldr	r0, [pc, #436]	; 794 <main+0x35c>
 5dc:	bl	0 <printf>
 5e0:	mov	r0, #1
 5e4:	b	758 <main+0x320>
 5e8:	mov	r1, r4
 5ec:	mov	r0, r5
 5f0:	bl	340 <heap_remove>
 5f4:	ldr	r1, [pc, #420]	; 7a0 <main+0x368>
 5f8:	mov	r3, r0
 5fc:	mov	r0, r1
 600:	mov	r1, r3
 604:	bl	0 <strcmp>
 608:	cmp	r0, #0
 60c:	beq	620 <main+0x1e8>
 610:	ldr	r0, [pc, #356]	; 77c <main+0x344>
 614:	bl	0 <printf>
 618:	mov	r0, #1
 61c:	b	758 <main+0x320>
 620:	ldr	r2, [pc, #360]	; 790 <main+0x358>
 624:	mov	r1, #0
 628:	str	r1, [r2]
 62c:	mov	r1, r4
 630:	mov	r0, r5
 634:	bl	340 <heap_remove>
 638:	ldr	r0, [pc, #348]	; 79c <main+0x364>
 63c:	ldr	ip, [pc, #332]	; 790 <main+0x358>
 640:	ldr	r1, [ip]
 644:	bl	0 <printf>
 648:	ldr	ip, [pc, #320]	; 790 <main+0x358>
 64c:	mov	r0, #0
 650:	str	r0, [ip]
 654:	ldr	r2, [pc, #348]	; 7b8 <main+0x380>
 658:	mov	r3, #99	; 0x63
 65c:	mov	r1, r4
 660:	mov	r0, r5
 664:	bl	24c <heap_insere>
 668:	ldr	r0, [pc, #316]	; 7ac <main+0x374>
 66c:	ldr	r1, [pc, #284]	; 790 <main+0x358>
 670:	ldr	r1, [r1]
 674:	bl	0 <printf>
 678:	mov	r1, r4
 67c:	mov	r0, r5
 680:	bl	340 <heap_remove>
 684:	ldr	ip, [pc, #260]	; 790 <main+0x358>
 688:	mov	r1, #0
 68c:	str	r1, [ip]
 690:	ldr	r2, [pc, #288]	; 7b8 <main+0x380>
 694:	mov	r3, #0
 698:	mov	r1, r4
 69c:	mov	r0, r5
 6a0:	bl	24c <heap_insere>
 6a4:	ldr	r0, [pc, #212]	; 780 <main+0x348>
 6a8:	ldr	r2, [pc, #224]	; 790 <main+0x358>
 6ac:	ldr	r1, [r2]
 6b0:	bl	0 <printf>
 6b4:	mov	r1, r4
 6b8:	mov	r0, r5
 6bc:	bl	340 <heap_remove>
 6c0:	ldr	r0, [pc, #200]	; 790 <main+0x358>
 6c4:	mov	ip, #0
 6c8:	str	ip, [r0]
 6cc:	ldr	r2, [pc, #228]	; 7b8 <main+0x380>
 6d0:	mov	r3, #42	; 0x2a
 6d4:	mov	r1, r4
 6d8:	mov	r0, r5
 6dc:	bl	24c <heap_insere>
 6e0:	ldr	r0, [pc, #140]	; 774 <main+0x33c>
 6e4:	ldr	r2, [pc, #164]	; 790 <main+0x358>
 6e8:	ldr	r1, [r2]
 6ec:	bl	0 <printf>
 6f0:	mov	r0, #42	; 0x2a
 6f4:	bl	0 <vetor_criaHeap>
 6f8:	mov	r4, r0
 6fc:	ldr	r5, [pc, #184]	; 7bc <main+0x384>
 700:	ldr	r2, [pc, #112]	; 778 <main+0x340>
 704:	mov	r1, r5
 708:	mov	r0, r4
 70c:	bl	360 <heap_carrega>
 710:	ldr	r0, [pc, #116]	; 78c <main+0x354>
 714:	ldr	r2, [pc, #116]	; 790 <main+0x358>
 718:	ldr	r1, [r2]
 71c:	bl	0 <printf>
 720:	mov	r6, #0
 724:	cmp	r6, #42	; 0x2a
 728:	bge	754 <main+0x31c>
 72c:	mov	r1, r5
 730:	mov	r0, r4
 734:	bl	340 <heap_remove>
 738:	ldr	r1, [pc, #116]	; 7b4 <main+0x37c>
 73c:	mov	r2, r0
 740:	mov	r0, r1
 744:	mov	r1, r2
 748:	bl	0 <printf>
 74c:	add	r6, r6, #1
 750:	b	724 <main+0x2ec>
 754:	mov	r0, #0
 758:	ldr	r4, [sp, #8]
 75c:	ldr	r5, [sp, #12]
 760:	ldr	r6, [sp, #16]
 764:	ldr	lr, [sp, #4]
 768:	add	sp, sp, #192	; 0xc0
 76c:	bx	lr
 770:	.word	0x00000002
 774:	.word	0x000000f1
 778:	.word	0x00000389
 77c:	.word	0x000000ac
 780:	.word	0x00000210
 784:	.word	0x00000061
 788:	.word	0x0000015e
 78c:	.word	0x000001a5
 790:	.word	0x00000000
 794:	.word	0x00000039
 798:	.word	0x0000028b
 79c:	.word	0x000001dc
 7a0:	.word	0x0000009a
 7a4:	.word	0x00000137
 7a8:	.word	0x000002fb
 7ac:	.word	0x00000342
 7b0:	.word	0x000002c7
 7b4:	.word	0x000002c3
 7b8:	.word	0x00000257
	...
