
../compcert-repos/prog2/Extras_cores:     file format elf32-littlearm


Disassembly of section .init:

00010510 <.init>:
   10510:	push	{r3, lr}
   10514:	bl	1059c <_start@@Base+0x3c>
   10518:	pop	{r3, pc}

Disassembly of section .plt:

0001051c <printf@plt-0x14>:
   1051c:	push	{lr}		; (str lr, [sp, #-4]!)
   10520:	ldr	lr, [pc, #4]	; 1052c <printf@plt-0x4>
   10524:	add	lr, pc, lr
   10528:	ldr	pc, [lr, #8]!
   1052c:	ldrdeq	r0, [r1], -r4

00010530 <printf@plt>:
   10530:	add	ip, pc, #0, 12
   10534:	add	ip, ip, #16, 20	; 0x10000
   10538:	ldr	pc, [ip, #2772]!	; 0xad4

0001053c <__libc_start_main@plt>:
   1053c:	add	ip, pc, #0, 12
   10540:	add	ip, ip, #16, 20	; 0x10000
   10544:	ldr	pc, [ip, #2764]!	; 0xacc

00010548 <__gmon_start__@plt>:
   10548:	add	ip, pc, #0, 12
   1054c:	add	ip, ip, #16, 20	; 0x10000
   10550:	ldr	pc, [ip, #2756]!	; 0xac4

00010554 <abort@plt>:
   10554:	add	ip, pc, #0, 12
   10558:	add	ip, ip, #16, 20	; 0x10000
   1055c:	ldr	pc, [ip, #2748]!	; 0xabc

Disassembly of section .text:

00010560 <_start@@Base>:
   10560:	mov	fp, #0
   10564:	mov	lr, #0
   10568:	pop	{r1}		; (ldr r1, [sp], #4)
   1056c:	mov	r2, sp
   10570:	push	{r2}		; (str r2, [sp, #-4]!)
   10574:	push	{r0}		; (str r0, [sp, #-4]!)
   10578:	ldr	ip, [pc, #16]	; 10590 <_start@@Base+0x30>
   1057c:	push	{ip}		; (str ip, [sp, #-4]!)
   10580:	ldr	r0, [pc, #12]	; 10594 <_start@@Base+0x34>
   10584:	ldr	r3, [pc, #12]	; 10598 <_start@@Base+0x38>
   10588:	bl	1053c <__libc_start_main@plt>
   1058c:	bl	10554 <abort@plt>
   10590:	andeq	r0, r1, r4, lsr r7
   10594:	andeq	r0, r1, r0, asr r6
   10598:	ldrdeq	r0, [r1], -r4
   1059c:	ldr	r3, [pc, #20]	; 105b8 <_start@@Base+0x58>
   105a0:	ldr	r2, [pc, #20]	; 105bc <_start@@Base+0x5c>
   105a4:	add	r3, pc, r3
   105a8:	ldr	r2, [r3, r2]
   105ac:	cmp	r2, #0
   105b0:	bxeq	lr
   105b4:	b	10548 <__gmon_start__@plt>
   105b8:	andeq	r0, r1, r4, asr sl
   105bc:	andeq	r0, r0, ip, lsl r0
   105c0:	ldr	r0, [pc, #24]	; 105e0 <_start@@Base+0x80>
   105c4:	ldr	r3, [pc, #24]	; 105e4 <_start@@Base+0x84>
   105c8:	cmp	r3, r0
   105cc:	bxeq	lr
   105d0:	ldr	r3, [pc, #16]	; 105e8 <_start@@Base+0x88>
   105d4:	cmp	r3, #0
   105d8:	bxeq	lr
   105dc:	bx	r3
   105e0:	andeq	r1, r2, r8, lsr #32
   105e4:	andeq	r1, r2, r8, lsr #32
   105e8:	andeq	r0, r0, r0
   105ec:	ldr	r0, [pc, #36]	; 10618 <_start@@Base+0xb8>
   105f0:	ldr	r1, [pc, #36]	; 1061c <_start@@Base+0xbc>
   105f4:	sub	r1, r1, r0
   105f8:	asr	r1, r1, #2
   105fc:	add	r1, r1, r1, lsr #31
   10600:	asrs	r1, r1, #1
   10604:	bxeq	lr
   10608:	ldr	r3, [pc, #16]	; 10620 <_start@@Base+0xc0>
   1060c:	cmp	r3, #0
   10610:	bxeq	lr
   10614:	bx	r3
   10618:	andeq	r1, r2, r8, lsr #32
   1061c:	andeq	r1, r2, r8, lsr #32
   10620:	andeq	r0, r0, r0
   10624:	push	{r4, lr}
   10628:	ldr	r4, [pc, #24]	; 10648 <_start@@Base+0xe8>
   1062c:	ldrb	r3, [r4]
   10630:	cmp	r3, #0
   10634:	popne	{r4, pc}
   10638:	bl	105c0 <_start@@Base+0x60>
   1063c:	mov	r3, #1
   10640:	strb	r3, [r4]
   10644:	pop	{r4, pc}
   10648:	andeq	r1, r2, r8, lsr #32
   1064c:	b	105ec <_start@@Base+0x8c>

00010650 <main@@Base>:
   10650:	str	fp, [sp, #-8]!
   10654:	str	lr, [sp, #4]
   10658:	add	fp, sp, #4
   1065c:	movw	r0, #1860	; 0x744
   10660:	movt	r0, #1
   10664:	bl	10530 <printf@plt>
   10668:	movw	r0, #1876	; 0x754
   1066c:	movt	r0, #1
   10670:	bl	10530 <printf@plt>
   10674:	movw	r0, #1892	; 0x764
   10678:	movt	r0, #1
   1067c:	bl	10530 <printf@plt>
   10680:	movw	r0, #1912	; 0x778
   10684:	movt	r0, #1
   10688:	bl	10530 <printf@plt>
   1068c:	movw	r0, #1928	; 0x788
   10690:	movt	r0, #1
   10694:	bl	10530 <printf@plt>
   10698:	movw	r0, #1948	; 0x79c
   1069c:	movt	r0, #1
   106a0:	bl	10530 <printf@plt>
   106a4:	movw	r0, #1964	; 0x7ac
   106a8:	movt	r0, #1
   106ac:	bl	10530 <printf@plt>
   106b0:	movw	r0, #1980	; 0x7bc
   106b4:	movt	r0, #1
   106b8:	bl	10530 <printf@plt>
   106bc:	mov	r3, #0
   106c0:	mov	r0, r3
   106c4:	sub	sp, fp, #4
   106c8:	ldr	fp, [sp]
   106cc:	add	sp, sp, #4
   106d0:	pop	{pc}		; (ldr pc, [sp], #4)

000106d4 <__libc_csu_init@@Base>:
   106d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   106d8:	mov	r7, r0
   106dc:	ldr	r6, [pc, #72]	; 1072c <__libc_csu_init@@Base+0x58>
   106e0:	ldr	r5, [pc, #72]	; 10730 <__libc_csu_init@@Base+0x5c>
   106e4:	add	r6, pc, r6
   106e8:	add	r5, pc, r5
   106ec:	sub	r6, r6, r5
   106f0:	mov	r8, r1
   106f4:	mov	r9, r2
   106f8:	bl	10510 <printf@plt-0x20>
   106fc:	asrs	r6, r6, #2
   10700:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10704:	mov	r4, #0
   10708:	add	r4, r4, #1
   1070c:	ldr	r3, [r5], #4
   10710:	mov	r2, r9
   10714:	mov	r1, r8
   10718:	mov	r0, r7
   1071c:	blx	r3
   10720:	cmp	r6, r4
   10724:	bne	10708 <__libc_csu_init@@Base+0x34>
   10728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1072c:	andeq	r0, r1, r8, lsr #16
   10730:	andeq	r0, r1, r0, lsr #16

00010734 <__libc_csu_fini@@Base>:
   10734:	bx	lr

Disassembly of section .fini:

00010738 <.fini>:
   10738:	push	{r3, lr}
   1073c:	pop	{r3, pc}
