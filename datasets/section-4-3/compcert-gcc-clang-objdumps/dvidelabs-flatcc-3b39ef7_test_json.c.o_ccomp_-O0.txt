
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json.dir/test_json.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatbuffers_uint8_cast_to_pe>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	and	r0, r0, #255	; 0xff
      14:	ldr	lr, [sp, #4]
      18:	add	sp, sp, #8
      1c:	bx	lr

00000020 <flatbuffers_uint8_write_to_pe>:
      20:	mov	ip, sp
      24:	sub	sp, sp, #16
      28:	str	ip, [sp]
      2c:	str	lr, [sp, #4]
      30:	str	r4, [sp, #8]
      34:	mov	r4, r0
      38:	and	r0, r1, #255	; 0xff
      3c:	bl	0 <flatbuffers_uint8_cast_to_pe>
      40:	and	r1, r0, #255	; 0xff
      44:	strb	r1, [r4]
      48:	ldr	r4, [sp, #8]
      4c:	ldr	lr, [sp, #4]
      50:	add	sp, sp, #16
      54:	bx	lr

00000058 <flatbuffers_uint16_cast_to_pe>:
      58:	mov	ip, sp
      5c:	sub	sp, sp, #8
      60:	str	ip, [sp]
      64:	str	lr, [sp, #4]
      68:	bic	r0, r0, #16711680	; 0xff0000
      6c:	bic	r0, r0, #-16777216	; 0xff000000
      70:	ldr	lr, [sp, #4]
      74:	add	sp, sp, #8
      78:	bx	lr

0000007c <flatbuffers_uint16_write_to_pe>:
      7c:	mov	ip, sp
      80:	sub	sp, sp, #16
      84:	str	ip, [sp]
      88:	str	lr, [sp, #4]
      8c:	str	r4, [sp, #8]
      90:	mov	r4, r0
      94:	bic	r0, r1, #16711680	; 0xff0000
      98:	bic	r0, r0, #-16777216	; 0xff000000
      9c:	bl	58 <flatbuffers_uint16_cast_to_pe>
      a0:	bic	r1, r0, #16711680	; 0xff0000
      a4:	bic	r1, r1, #-16777216	; 0xff000000
      a8:	strh	r1, [r4]
      ac:	ldr	r4, [sp, #8]
      b0:	ldr	lr, [sp, #4]
      b4:	add	sp, sp, #16
      b8:	bx	lr

000000bc <flatbuffers_uint32_cast_to_pe>:
      bc:	mov	ip, sp
      c0:	sub	sp, sp, #8
      c4:	str	ip, [sp]
      c8:	str	lr, [sp, #4]
      cc:	ldr	lr, [sp, #4]
      d0:	add	sp, sp, #8
      d4:	bx	lr

000000d8 <flatbuffers_uint32_write_to_pe>:
      d8:	mov	ip, sp
      dc:	sub	sp, sp, #16
      e0:	str	ip, [sp]
      e4:	str	lr, [sp, #4]
      e8:	str	r4, [sp, #8]
      ec:	mov	r4, r0
      f0:	mov	r0, r1
      f4:	bl	bc <flatbuffers_uint32_cast_to_pe>
      f8:	str	r0, [r4]
      fc:	ldr	r4, [sp, #8]
     100:	ldr	lr, [sp, #4]
     104:	add	sp, sp, #16
     108:	bx	lr

0000010c <flatbuffers_uint64_cast_to_pe>:
     10c:	mov	ip, sp
     110:	sub	sp, sp, #8
     114:	str	ip, [sp]
     118:	str	lr, [sp, #4]
     11c:	ldr	lr, [sp, #4]
     120:	add	sp, sp, #8
     124:	bx	lr

00000128 <flatbuffers_uint64_write_to_pe>:
     128:	mov	ip, sp
     12c:	sub	sp, sp, #16
     130:	str	ip, [sp]
     134:	str	lr, [sp, #4]
     138:	str	r4, [sp, #8]
     13c:	mov	r1, r3
     140:	mov	r4, r0
     144:	mov	r0, r2
     148:	bl	10c <flatbuffers_uint64_cast_to_pe>
     14c:	str	r0, [r4]
     150:	str	r1, [r4, #4]
     154:	ldr	r4, [sp, #8]
     158:	ldr	lr, [sp, #4]
     15c:	add	sp, sp, #16
     160:	bx	lr

00000164 <flatbuffers_int8_cast_to_pe>:
     164:	mov	ip, sp
     168:	sub	sp, sp, #8
     16c:	str	ip, [sp]
     170:	str	lr, [sp, #4]
     174:	and	r0, r0, #255	; 0xff
     178:	sbfx	r0, r0, #0, #8
     17c:	sbfx	r0, r0, #0, #8
     180:	ldr	lr, [sp, #4]
     184:	add	sp, sp, #8
     188:	bx	lr

0000018c <flatbuffers_int8_write_to_pe>:
     18c:	mov	ip, sp
     190:	sub	sp, sp, #16
     194:	str	ip, [sp]
     198:	str	lr, [sp, #4]
     19c:	str	r4, [sp, #8]
     1a0:	mov	r4, r0
     1a4:	sbfx	r0, r1, #0, #8
     1a8:	bl	164 <flatbuffers_int8_cast_to_pe>
     1ac:	sbfx	r1, r0, #0, #8
     1b0:	strb	r1, [r4]
     1b4:	ldr	r4, [sp, #8]
     1b8:	ldr	lr, [sp, #4]
     1bc:	add	sp, sp, #16
     1c0:	bx	lr

000001c4 <flatbuffers_int16_cast_to_pe>:
     1c4:	mov	ip, sp
     1c8:	sub	sp, sp, #8
     1cc:	str	ip, [sp]
     1d0:	str	lr, [sp, #4]
     1d4:	bic	r0, r0, #16711680	; 0xff0000
     1d8:	bic	r0, r0, #-16777216	; 0xff000000
     1dc:	sbfx	r0, r0, #0, #16
     1e0:	sbfx	r0, r0, #0, #16
     1e4:	ldr	lr, [sp, #4]
     1e8:	add	sp, sp, #8
     1ec:	bx	lr

000001f0 <flatbuffers_int16_write_to_pe>:
     1f0:	mov	ip, sp
     1f4:	sub	sp, sp, #16
     1f8:	str	ip, [sp]
     1fc:	str	lr, [sp, #4]
     200:	str	r4, [sp, #8]
     204:	mov	r4, r0
     208:	sbfx	r0, r1, #0, #16
     20c:	bl	1c4 <flatbuffers_int16_cast_to_pe>
     210:	sbfx	r1, r0, #0, #16
     214:	strh	r1, [r4]
     218:	ldr	r4, [sp, #8]
     21c:	ldr	lr, [sp, #4]
     220:	add	sp, sp, #16
     224:	bx	lr

00000228 <flatbuffers_int32_cast_to_pe>:
     228:	mov	ip, sp
     22c:	sub	sp, sp, #8
     230:	str	ip, [sp]
     234:	str	lr, [sp, #4]
     238:	ldr	lr, [sp, #4]
     23c:	add	sp, sp, #8
     240:	bx	lr

00000244 <flatbuffers_int32_write_to_pe>:
     244:	mov	ip, sp
     248:	sub	sp, sp, #16
     24c:	str	ip, [sp]
     250:	str	lr, [sp, #4]
     254:	str	r4, [sp, #8]
     258:	mov	r4, r0
     25c:	mov	r0, r1
     260:	bl	228 <flatbuffers_int32_cast_to_pe>
     264:	str	r0, [r4]
     268:	ldr	r4, [sp, #8]
     26c:	ldr	lr, [sp, #4]
     270:	add	sp, sp, #16
     274:	bx	lr

00000278 <flatbuffers_int64_cast_to_pe>:
     278:	mov	ip, sp
     27c:	sub	sp, sp, #8
     280:	str	ip, [sp]
     284:	str	lr, [sp, #4]
     288:	ldr	lr, [sp, #4]
     28c:	add	sp, sp, #8
     290:	bx	lr

00000294 <flatbuffers_int64_write_to_pe>:
     294:	mov	ip, sp
     298:	sub	sp, sp, #16
     29c:	str	ip, [sp]
     2a0:	str	lr, [sp, #4]
     2a4:	str	r4, [sp, #8]
     2a8:	mov	r1, r3
     2ac:	mov	r4, r0
     2b0:	mov	r0, r2
     2b4:	bl	278 <flatbuffers_int64_cast_to_pe>
     2b8:	str	r0, [r4]
     2bc:	str	r1, [r4, #4]
     2c0:	ldr	r4, [sp, #8]
     2c4:	ldr	lr, [sp, #4]
     2c8:	add	sp, sp, #16
     2cc:	bx	lr

000002d0 <flatbuffers_float_cast_to_pe>:
     2d0:	mov	ip, sp
     2d4:	sub	sp, sp, #16
     2d8:	str	ip, [sp]
     2dc:	str	lr, [sp, #4]
     2e0:	vstr	s0, [sp, #8]
     2e4:	ldr	r0, [sp, #8]
     2e8:	str	r0, [sp, #8]
     2ec:	vldr	s0, [sp, #8]
     2f0:	ldr	lr, [sp, #4]
     2f4:	add	sp, sp, #16
     2f8:	bx	lr

000002fc <flatbuffers_float_write_to_pe>:
     2fc:	mov	ip, sp
     300:	sub	sp, sp, #16
     304:	str	ip, [sp]
     308:	str	lr, [sp, #4]
     30c:	str	r4, [sp, #8]
     310:	mov	r4, r0
     314:	vmov.f32	s0, s0
     318:	bl	2d0 <flatbuffers_float_cast_to_pe>
     31c:	vstr	s0, [r4]
     320:	ldr	r4, [sp, #8]
     324:	ldr	lr, [sp, #4]
     328:	add	sp, sp, #16
     32c:	bx	lr

00000330 <flatbuffers_double_cast_to_pe>:
     330:	mov	ip, sp
     334:	sub	sp, sp, #16
     338:	str	ip, [sp]
     33c:	str	lr, [sp, #4]
     340:	vstr	d0, [sp, #8]
     344:	ldr	r0, [sp, #8]
     348:	ldr	r1, [sp, #12]
     34c:	str	r0, [sp, #8]
     350:	str	r1, [sp, #12]
     354:	vldr	d0, [sp, #8]
     358:	ldr	lr, [sp, #4]
     35c:	add	sp, sp, #16
     360:	bx	lr

00000364 <flatbuffers_double_write_to_pe>:
     364:	mov	ip, sp
     368:	sub	sp, sp, #16
     36c:	str	ip, [sp]
     370:	str	lr, [sp, #4]
     374:	str	r4, [sp, #8]
     378:	mov	r4, r0
     37c:	bl	330 <flatbuffers_double_cast_to_pe>
     380:	vstr	d0, [r4]
     384:	ldr	r4, [sp, #8]
     388:	ldr	lr, [sp, #4]
     38c:	add	sp, sp, #16
     390:	bx	lr

00000394 <flatbuffers_bool_cast_to_pe>:
     394:	mov	ip, sp
     398:	sub	sp, sp, #8
     39c:	str	ip, [sp]
     3a0:	str	lr, [sp, #4]
     3a4:	and	r0, r0, #255	; 0xff
     3a8:	ldr	lr, [sp, #4]
     3ac:	add	sp, sp, #8
     3b0:	bx	lr

000003b4 <flatbuffers_bool_write_to_pe>:
     3b4:	mov	ip, sp
     3b8:	sub	sp, sp, #16
     3bc:	str	ip, [sp]
     3c0:	str	lr, [sp, #4]
     3c4:	str	r4, [sp, #8]
     3c8:	mov	r4, r0
     3cc:	and	r0, r1, #255	; 0xff
     3d0:	bl	394 <flatbuffers_bool_cast_to_pe>
     3d4:	and	r1, r0, #255	; 0xff
     3d8:	strb	r1, [r4]
     3dc:	ldr	r4, [sp, #8]
     3e0:	ldr	lr, [sp, #4]
     3e4:	add	sp, sp, #16
     3e8:	bx	lr

000003ec <flatcc_json_parser_space>:
     3ec:	mov	ip, sp
     3f0:	sub	sp, sp, #8
     3f4:	str	ip, [sp]
     3f8:	str	lr, [sp, #4]
     3fc:	sub	ip, r2, r1
     400:	cmp	ip, #1
     404:	ble	448 <flatcc_json_parser_space+0x5c>
     408:	ldrb	r3, [r1]
     40c:	cmp	r3, #32
     410:	bgt	450 <flatcc_json_parser_space+0x64>
     414:	ldrb	r3, [r1]
     418:	cmp	r3, #32
     41c:	bne	434 <flatcc_json_parser_space+0x48>
     420:	ldrb	r3, [r1, #1]
     424:	cmp	r3, #32
     428:	movgt	r3, #1
     42c:	movle	r3, #0
     430:	b	438 <flatcc_json_parser_space+0x4c>
     434:	mov	r3, #0
     438:	cmp	r3, #0
     43c:	beq	448 <flatcc_json_parser_space+0x5c>
     440:	add	r1, r1, #1
     444:	b	450 <flatcc_json_parser_space+0x64>
     448:	bl	0 <flatcc_json_parser_space_ext>
     44c:	mov	r1, r0
     450:	mov	r0, r1
     454:	ldr	lr, [sp, #4]
     458:	add	sp, sp, #8
     45c:	bx	lr

00000460 <flatcc_json_parser_symbol_start>:
     460:	mov	ip, sp
     464:	sub	sp, sp, #8
     468:	str	ip, [sp]
     46c:	str	lr, [sp, #4]
     470:	cmp	r1, r2
     474:	beq	4b8 <flatcc_json_parser_symbol_start+0x58>
     478:	ldrb	r3, [r1]
     47c:	cmp	r3, #34	; 0x22
     480:	beq	4ac <flatcc_json_parser_symbol_start+0x4c>
     484:	ldrb	ip, [r1]
     488:	cmp	ip, #46	; 0x2e
     48c:	bne	4a0 <flatcc_json_parser_symbol_start+0x40>
     490:	mov	r3, #5
     494:	bl	0 <flatcc_json_parser_set_error>
     498:	mov	r1, r0
     49c:	b	4b8 <flatcc_json_parser_symbol_start+0x58>
     4a0:	mov	r3, #1
     4a4:	str	r3, [r0, #12]
     4a8:	b	4b8 <flatcc_json_parser_symbol_start+0x58>
     4ac:	add	r1, r1, #1
     4b0:	mov	r2, #0
     4b4:	str	r2, [r0, #12]
     4b8:	mov	r0, r1
     4bc:	ldr	lr, [sp, #4]
     4c0:	add	sp, sp, #8
     4c4:	bx	lr

000004c8 <flatcc_json_parser_symbol_part_ext>:
     4c8:	mov	ip, sp
     4cc:	sub	sp, sp, #8
     4d0:	str	ip, [sp]
     4d4:	str	lr, [sp, #4]
     4d8:	mov	r3, #0
     4dc:	mov	r2, #0
     4e0:	sub	ip, r1, r0
     4e4:	cmp	ip, #8
     4e8:	bls	4f0 <flatcc_json_parser_symbol_part_ext+0x28>
     4ec:	mov	ip, #8
     4f0:	cmp	ip, #9
     4f4:	bcs	57c <flatcc_json_parser_symbol_part_ext+0xb4>
     4f8:	add	pc, pc, ip, lsl #2
     4fc:	nop	{0}
     500:	b	57c <flatcc_json_parser_symbol_part_ext+0xb4>
     504:	b	574 <flatcc_json_parser_symbol_part_ext+0xac>
     508:	b	56c <flatcc_json_parser_symbol_part_ext+0xa4>
     50c:	b	564 <flatcc_json_parser_symbol_part_ext+0x9c>
     510:	b	55c <flatcc_json_parser_symbol_part_ext+0x94>
     514:	b	54c <flatcc_json_parser_symbol_part_ext+0x84>
     518:	b	53c <flatcc_json_parser_symbol_part_ext+0x74>
     51c:	b	52c <flatcc_json_parser_symbol_part_ext+0x64>
     520:	b	524 <flatcc_json_parser_symbol_part_ext+0x5c>
     524:	ldrb	r1, [r0, #7]
     528:	orr	r2, r2, r1
     52c:	ldrb	ip, [r0, #6]
     530:	orr	r3, r3, ip, lsr #24
     534:	ldrb	ip, [r0, #6]
     538:	orr	r2, r2, ip, lsl #8
     53c:	ldrb	ip, [r0, #5]
     540:	orr	r3, r3, ip, lsr #16
     544:	ldrb	ip, [r0, #5]
     548:	orr	r2, r2, ip, lsl #16
     54c:	ldrb	r1, [r0, #4]
     550:	orr	r3, r3, r1, lsr #8
     554:	ldrb	r1, [r0, #4]
     558:	orr	r2, r2, r1, lsl #24
     55c:	ldrb	r1, [r0, #3]
     560:	orr	r3, r3, r1
     564:	ldrb	ip, [r0, #2]
     568:	orr	r3, r3, ip, lsl #8
     56c:	ldrb	ip, [r0, #1]
     570:	orr	r3, r3, ip, lsl #16
     574:	ldrb	r1, [r0]
     578:	orr	r3, r3, r1, lsl #24
     57c:	mov	r1, r3
     580:	mov	r0, r2
     584:	ldr	lr, [sp, #4]
     588:	add	sp, sp, #8
     58c:	bx	lr

00000590 <flatcc_json_parser_symbol_part>:
     590:	mov	ip, sp
     594:	sub	sp, sp, #8
     598:	str	ip, [sp]
     59c:	str	lr, [sp, #4]
     5a0:	bl	4c8 <flatcc_json_parser_symbol_part_ext>
     5a4:	ldr	lr, [sp, #4]
     5a8:	add	sp, sp, #8
     5ac:	bx	lr

000005b0 <flatcc_json_parser_match_scope>:
     5b0:	mov	ip, sp
     5b4:	sub	sp, sp, #8
     5b8:	str	ip, [sp]
     5bc:	str	lr, [sp, #4]
     5c0:	mov	r0, r1
     5c4:	sub	r2, r2, r1
     5c8:	cmp	r2, r3
     5cc:	ble	5e4 <flatcc_json_parser_match_scope+0x34>
     5d0:	ldrb	r2, [r1, r3]
     5d4:	cmp	r2, #46	; 0x2e
     5d8:	bne	5e4 <flatcc_json_parser_match_scope+0x34>
     5dc:	add	r0, r1, r3
     5e0:	add	r0, r0, #1
     5e4:	ldr	lr, [sp, #4]
     5e8:	add	sp, sp, #8
     5ec:	bx	lr

000005f0 <flatcc_json_parser_constant_start>:
     5f0:	mov	ip, sp
     5f4:	sub	sp, sp, #16
     5f8:	str	ip, [sp]
     5fc:	str	lr, [sp, #4]
     600:	str	r4, [sp, #8]
     604:	str	r5, [sp, #12]
     608:	mov	r4, r2
     60c:	mov	r5, r0
     610:	mov	r2, r4
     614:	mov	r0, r5
     618:	bl	460 <flatcc_json_parser_symbol_start>
     61c:	ldr	r1, [r5, #12]
     620:	cmp	r1, #0
     624:	bne	638 <flatcc_json_parser_constant_start+0x48>
     628:	mov	r2, r4
     62c:	mov	r1, r0
     630:	mov	r0, r5
     634:	bl	3ec <flatcc_json_parser_space>
     638:	ldr	r4, [sp, #8]
     63c:	ldr	r5, [sp, #12]
     640:	ldr	lr, [sp, #4]
     644:	add	sp, sp, #16
     648:	bx	lr

0000064c <flatcc_json_parser_object_start>:
     64c:	mov	ip, sp
     650:	sub	sp, sp, #24
     654:	str	ip, [sp]
     658:	str	lr, [sp, #4]
     65c:	str	r4, [sp, #8]
     660:	str	r5, [sp, #12]
     664:	str	r6, [sp, #16]
     668:	mov	r6, r3
     66c:	mov	r4, r2
     670:	mov	r5, r0
     674:	cmp	r1, r4
     678:	beq	690 <flatcc_json_parser_object_start+0x44>
     67c:	ldrb	r2, [r1]
     680:	cmp	r2, #123	; 0x7b
     684:	movne	r2, #1
     688:	moveq	r2, #0
     68c:	b	694 <flatcc_json_parser_object_start+0x48>
     690:	mov	r2, #1
     694:	cmp	r2, #0
     698:	beq	6b8 <flatcc_json_parser_object_start+0x6c>
     69c:	mov	r2, #0
     6a0:	str	r2, [r6]
     6a4:	mov	r3, #21
     6a8:	mov	r2, r4
     6ac:	mov	r0, r5
     6b0:	bl	0 <flatcc_json_parser_set_error>
     6b4:	b	714 <flatcc_json_parser_object_start+0xc8>
     6b8:	add	r1, r1, #1
     6bc:	mov	r2, r4
     6c0:	mov	r0, r5
     6c4:	bl	3ec <flatcc_json_parser_space>
     6c8:	cmp	r0, r4
     6cc:	beq	6e4 <flatcc_json_parser_object_start+0x98>
     6d0:	ldrb	ip, [r0]
     6d4:	cmp	ip, #125	; 0x7d
     6d8:	moveq	r2, #1
     6dc:	movne	r2, #0
     6e0:	b	6e8 <flatcc_json_parser_object_start+0x9c>
     6e4:	mov	r2, #0
     6e8:	cmp	r2, #0
     6ec:	beq	70c <flatcc_json_parser_object_start+0xc0>
     6f0:	mov	r3, #0
     6f4:	str	r3, [r6]
     6f8:	add	r1, r0, #1
     6fc:	mov	r2, r4
     700:	mov	r0, r5
     704:	bl	3ec <flatcc_json_parser_space>
     708:	b	714 <flatcc_json_parser_object_start+0xc8>
     70c:	mov	r1, #1
     710:	str	r1, [r6]
     714:	ldr	r4, [sp, #8]
     718:	ldr	r5, [sp, #12]
     71c:	ldr	r6, [sp, #16]
     720:	ldr	lr, [sp, #4]
     724:	add	sp, sp, #24
     728:	bx	lr

0000072c <flatcc_json_parser_object_end>:
     72c:	mov	ip, sp
     730:	sub	sp, sp, #24
     734:	str	ip, [sp]
     738:	str	lr, [sp, #4]
     73c:	str	r4, [sp, #8]
     740:	str	r5, [sp, #12]
     744:	str	r6, [sp, #16]
     748:	mov	r6, r3
     74c:	mov	r4, r2
     750:	mov	r5, r0
     754:	mov	r2, r4
     758:	mov	r0, r5
     75c:	bl	3ec <flatcc_json_parser_space>
     760:	mov	r1, r0
     764:	cmp	r1, r4
     768:	bne	778 <flatcc_json_parser_object_end+0x4c>
     76c:	mov	r2, #0
     770:	str	r2, [r6]
     774:	b	838 <flatcc_json_parser_object_end+0x10c>
     778:	ldrb	r2, [r1]
     77c:	cmp	r2, #44	; 0x2c
     780:	beq	7c8 <flatcc_json_parser_object_end+0x9c>
     784:	mov	ip, #0
     788:	str	ip, [r6]
     78c:	ldrb	r0, [r1]
     790:	cmp	r0, #125	; 0x7d
     794:	beq	7b0 <flatcc_json_parser_object_end+0x84>
     798:	mov	r3, #10
     79c:	mov	r2, r4
     7a0:	mov	r0, r5
     7a4:	bl	0 <flatcc_json_parser_set_error>
     7a8:	mov	r1, r0
     7ac:	b	838 <flatcc_json_parser_object_end+0x10c>
     7b0:	add	r1, r1, #1
     7b4:	mov	r2, r4
     7b8:	mov	r0, r5
     7bc:	bl	3ec <flatcc_json_parser_space>
     7c0:	mov	r1, r0
     7c4:	b	838 <flatcc_json_parser_object_end+0x10c>
     7c8:	add	r1, r1, #1
     7cc:	mov	r2, r4
     7d0:	mov	r0, r5
     7d4:	bl	3ec <flatcc_json_parser_space>
     7d8:	mov	r1, r0
     7dc:	cmp	r1, r4
     7e0:	bne	804 <flatcc_json_parser_object_end+0xd8>
     7e4:	mov	r2, #0
     7e8:	str	r2, [r6]
     7ec:	mov	r3, #10
     7f0:	mov	r2, r4
     7f4:	mov	r0, r5
     7f8:	bl	0 <flatcc_json_parser_set_error>
     7fc:	mov	r1, r0
     800:	b	838 <flatcc_json_parser_object_end+0x10c>
     804:	ldrb	r2, [r1]
     808:	cmp	r2, #125	; 0x7d
     80c:	bne	830 <flatcc_json_parser_object_end+0x104>
     810:	mov	r0, #0
     814:	str	r0, [r6]
     818:	add	r1, r1, #1
     81c:	mov	r2, r4
     820:	mov	r0, r5
     824:	bl	3ec <flatcc_json_parser_space>
     828:	mov	r1, r0
     82c:	b	838 <flatcc_json_parser_object_end+0x10c>
     830:	mov	r3, #1
     834:	str	r3, [r6]
     838:	mov	r0, r1
     83c:	ldr	r4, [sp, #8]
     840:	ldr	r5, [sp, #12]
     844:	ldr	r6, [sp, #16]
     848:	ldr	lr, [sp, #4]
     84c:	add	sp, sp, #24
     850:	bx	lr

00000854 <flatcc_json_parser_array_start>:
     854:	mov	ip, sp
     858:	sub	sp, sp, #24
     85c:	str	ip, [sp]
     860:	str	lr, [sp, #4]
     864:	str	r4, [sp, #8]
     868:	str	r5, [sp, #12]
     86c:	str	r6, [sp, #16]
     870:	mov	r6, r3
     874:	mov	r4, r2
     878:	mov	r5, r0
     87c:	cmp	r1, r4
     880:	beq	898 <flatcc_json_parser_array_start+0x44>
     884:	ldrb	r2, [r1]
     888:	cmp	r2, #91	; 0x5b
     88c:	movne	r2, #1
     890:	moveq	r2, #0
     894:	b	89c <flatcc_json_parser_array_start+0x48>
     898:	mov	r2, #1
     89c:	cmp	r2, #0
     8a0:	beq	8c0 <flatcc_json_parser_array_start+0x6c>
     8a4:	mov	r2, #0
     8a8:	str	r2, [r6]
     8ac:	mov	r3, #22
     8b0:	mov	r2, r4
     8b4:	mov	r0, r5
     8b8:	bl	0 <flatcc_json_parser_set_error>
     8bc:	b	91c <flatcc_json_parser_array_start+0xc8>
     8c0:	add	r1, r1, #1
     8c4:	mov	r2, r4
     8c8:	mov	r0, r5
     8cc:	bl	3ec <flatcc_json_parser_space>
     8d0:	cmp	r0, r4
     8d4:	beq	8ec <flatcc_json_parser_array_start+0x98>
     8d8:	ldrb	ip, [r0]
     8dc:	cmp	ip, #93	; 0x5d
     8e0:	moveq	r2, #1
     8e4:	movne	r2, #0
     8e8:	b	8f0 <flatcc_json_parser_array_start+0x9c>
     8ec:	mov	r2, #0
     8f0:	cmp	r2, #0
     8f4:	beq	914 <flatcc_json_parser_array_start+0xc0>
     8f8:	mov	r3, #0
     8fc:	str	r3, [r6]
     900:	add	r1, r0, #1
     904:	mov	r2, r4
     908:	mov	r0, r5
     90c:	bl	3ec <flatcc_json_parser_space>
     910:	b	91c <flatcc_json_parser_array_start+0xc8>
     914:	mov	r1, #1
     918:	str	r1, [r6]
     91c:	ldr	r4, [sp, #8]
     920:	ldr	r5, [sp, #12]
     924:	ldr	r6, [sp, #16]
     928:	ldr	lr, [sp, #4]
     92c:	add	sp, sp, #24
     930:	bx	lr

00000934 <flatcc_json_parser_array_end>:
     934:	mov	ip, sp
     938:	sub	sp, sp, #24
     93c:	str	ip, [sp]
     940:	str	lr, [sp, #4]
     944:	str	r4, [sp, #8]
     948:	str	r5, [sp, #12]
     94c:	str	r6, [sp, #16]
     950:	mov	r6, r3
     954:	mov	r4, r2
     958:	mov	r5, r0
     95c:	mov	r2, r4
     960:	mov	r0, r5
     964:	bl	3ec <flatcc_json_parser_space>
     968:	mov	r1, r0
     96c:	cmp	r1, r4
     970:	bne	980 <flatcc_json_parser_array_end+0x4c>
     974:	mov	r2, #0
     978:	str	r2, [r6]
     97c:	b	a40 <flatcc_json_parser_array_end+0x10c>
     980:	ldrb	r2, [r1]
     984:	cmp	r2, #44	; 0x2c
     988:	beq	9d0 <flatcc_json_parser_array_end+0x9c>
     98c:	mov	ip, #0
     990:	str	ip, [r6]
     994:	ldrb	r0, [r1]
     998:	cmp	r0, #93	; 0x5d
     99c:	beq	9b8 <flatcc_json_parser_array_end+0x84>
     9a0:	mov	r3, #9
     9a4:	mov	r2, r4
     9a8:	mov	r0, r5
     9ac:	bl	0 <flatcc_json_parser_set_error>
     9b0:	mov	r1, r0
     9b4:	b	a40 <flatcc_json_parser_array_end+0x10c>
     9b8:	add	r1, r1, #1
     9bc:	mov	r2, r4
     9c0:	mov	r0, r5
     9c4:	bl	3ec <flatcc_json_parser_space>
     9c8:	mov	r1, r0
     9cc:	b	a40 <flatcc_json_parser_array_end+0x10c>
     9d0:	add	r1, r1, #1
     9d4:	mov	r2, r4
     9d8:	mov	r0, r5
     9dc:	bl	3ec <flatcc_json_parser_space>
     9e0:	mov	r1, r0
     9e4:	cmp	r1, r4
     9e8:	bne	a0c <flatcc_json_parser_array_end+0xd8>
     9ec:	mov	r2, #0
     9f0:	str	r2, [r6]
     9f4:	mov	r3, #9
     9f8:	mov	r2, r4
     9fc:	mov	r0, r5
     a00:	bl	0 <flatcc_json_parser_set_error>
     a04:	mov	r1, r0
     a08:	b	a40 <flatcc_json_parser_array_end+0x10c>
     a0c:	ldrb	r2, [r1]
     a10:	cmp	r2, #93	; 0x5d
     a14:	bne	a38 <flatcc_json_parser_array_end+0x104>
     a18:	mov	r0, #0
     a1c:	str	r0, [r6]
     a20:	add	r1, r1, #1
     a24:	mov	r2, r4
     a28:	mov	r0, r5
     a2c:	bl	3ec <flatcc_json_parser_space>
     a30:	mov	r1, r0
     a34:	b	a40 <flatcc_json_parser_array_end+0x10c>
     a38:	mov	r3, #1
     a3c:	str	r3, [r6]
     a40:	mov	r0, r1
     a44:	ldr	r4, [sp, #8]
     a48:	ldr	r5, [sp, #12]
     a4c:	ldr	r6, [sp, #16]
     a50:	ldr	lr, [sp, #4]
     a54:	add	sp, sp, #24
     a58:	bx	lr

00000a5c <flatcc_json_parser_match_symbol>:
     a5c:	mov	ip, sp
     a60:	sub	sp, sp, #16
     a64:	str	ip, [sp]
     a68:	str	lr, [sp, #4]
     a6c:	str	r4, [sp, #8]
     a70:	str	r5, [sp, #12]
     a74:	mov	r4, r2
     a78:	mov	r5, r0
     a7c:	mov	r0, r1
     a80:	sub	r2, r4, r0
     a84:	cmp	r2, r3
     a88:	ble	b44 <flatcc_json_parser_match_symbol+0xe8>
     a8c:	ldr	ip, [r5, #12]
     a90:	cmp	ip, #0
     a94:	beq	ad4 <flatcc_json_parser_match_symbol+0x78>
     a98:	ldrb	r1, [r0, r3]
     a9c:	cmp	r1, #32
     aa0:	ble	ab8 <flatcc_json_parser_match_symbol+0x5c>
     aa4:	ldrb	r1, [r0, r3]
     aa8:	cmp	r1, #58	; 0x3a
     aac:	movne	ip, #1
     ab0:	moveq	ip, #0
     ab4:	b	abc <flatcc_json_parser_match_symbol+0x60>
     ab8:	mov	ip, #0
     abc:	cmp	ip, #0
     ac0:	bne	b44 <flatcc_json_parser_match_symbol+0xe8>
     ac4:	add	r1, r0, r3
     ac8:	mov	r2, #0
     acc:	str	r2, [r5, #12]
     ad0:	b	ae8 <flatcc_json_parser_match_symbol+0x8c>
     ad4:	ldrb	r2, [r0, r3]
     ad8:	cmp	r2, #34	; 0x22
     adc:	bne	b44 <flatcc_json_parser_match_symbol+0xe8>
     ae0:	add	r2, r0, r3
     ae4:	add	r1, r2, #1
     ae8:	mov	r2, r4
     aec:	mov	r0, r5
     af0:	bl	3ec <flatcc_json_parser_space>
     af4:	mov	r1, r0
     af8:	cmp	r1, r4
     afc:	beq	b14 <flatcc_json_parser_match_symbol+0xb8>
     b00:	ldrb	r0, [r1]
     b04:	cmp	r0, #58	; 0x3a
     b08:	moveq	ip, #1
     b0c:	movne	ip, #0
     b10:	b	b18 <flatcc_json_parser_match_symbol+0xbc>
     b14:	mov	ip, #0
     b18:	cmp	ip, #0
     b1c:	beq	b34 <flatcc_json_parser_match_symbol+0xd8>
     b20:	add	r1, r1, #1
     b24:	mov	r2, r4
     b28:	mov	r0, r5
     b2c:	bl	3ec <flatcc_json_parser_space>
     b30:	b	b44 <flatcc_json_parser_match_symbol+0xe8>
     b34:	mov	r3, #4
     b38:	mov	r2, r4
     b3c:	mov	r0, r5
     b40:	bl	0 <flatcc_json_parser_set_error>
     b44:	ldr	r4, [sp, #8]
     b48:	ldr	r5, [sp, #12]
     b4c:	ldr	lr, [sp, #4]
     b50:	add	sp, sp, #16
     b54:	bx	lr

00000b58 <flatcc_json_parser_coerce_uint64>:
     b58:	mov	ip, sp
     b5c:	sub	sp, sp, #24
     b60:	str	ip, [sp]
     b64:	str	lr, [sp, #4]
     b68:	str	r4, [sp, #8]
     b6c:	str	r5, [sp, #12]
     b70:	str	r6, [sp, #16]
     b74:	ldr	r5, [ip, #8]
     b78:	ldr	r4, [ip, #4]
     b7c:	ldr	r6, [ip]
     b80:	cmp	r3, #0
     b84:	beq	b94 <flatcc_json_parser_coerce_uint64+0x3c>
     b88:	mov	r3, #8
     b8c:	bl	0 <flatcc_json_parser_set_error>
     b90:	b	ba0 <flatcc_json_parser_coerce_uint64+0x48>
     b94:	str	r6, [r5]
     b98:	str	r4, [r5, #4]
     b9c:	mov	r0, r1
     ba0:	ldr	r4, [sp, #8]
     ba4:	ldr	r5, [sp, #12]
     ba8:	ldr	r6, [sp, #16]
     bac:	ldr	lr, [sp, #4]
     bb0:	add	sp, sp, #24
     bb4:	bx	lr

00000bb8 <flatcc_json_parser_coerce_bool>:
     bb8:	mov	ip, sp
     bbc:	sub	sp, sp, #24
     bc0:	str	ip, [sp]
     bc4:	str	lr, [sp, #4]
     bc8:	str	r4, [sp, #8]
     bcc:	str	r5, [sp, #12]
     bd0:	str	r6, [sp, #16]
     bd4:	ldr	r6, [ip, #8]
     bd8:	ldr	r5, [ip, #4]
     bdc:	ldr	r4, [ip]
     be0:	cmp	r3, #0
     be4:	beq	bf4 <flatcc_json_parser_coerce_bool+0x3c>
     be8:	mov	r3, #8
     bec:	bl	0 <flatcc_json_parser_set_error>
     bf0:	b	c1c <flatcc_json_parser_coerce_bool+0x64>
     bf4:	orr	r0, r5, r4
     bf8:	cmp	r0, #0
     bfc:	moveq	r2, #1
     c00:	movne	r2, #0
     c04:	cmp	r2, #0
     c08:	moveq	r0, #1
     c0c:	movne	r0, #0
     c10:	and	ip, r0, #255	; 0xff
     c14:	strb	ip, [r6]
     c18:	mov	r0, r1
     c1c:	ldr	r4, [sp, #8]
     c20:	ldr	r5, [sp, #12]
     c24:	ldr	r6, [sp, #16]
     c28:	ldr	lr, [sp, #4]
     c2c:	add	sp, sp, #24
     c30:	bx	lr

00000c34 <flatcc_json_parser_coerce_uint32>:
     c34:	mov	ip, sp
     c38:	sub	sp, sp, #24
     c3c:	str	ip, [sp]
     c40:	str	lr, [sp, #4]
     c44:	str	r4, [sp, #8]
     c48:	str	r5, [sp, #12]
     c4c:	str	r6, [sp, #16]
     c50:	ldr	r6, [ip, #8]
     c54:	ldr	r4, [ip, #4]
     c58:	ldr	r5, [ip]
     c5c:	cmp	r3, #0
     c60:	beq	c70 <flatcc_json_parser_coerce_uint32+0x3c>
     c64:	mov	r3, #8
     c68:	bl	0 <flatcc_json_parser_set_error>
     c6c:	b	cb0 <flatcc_json_parser_coerce_uint32+0x7c>
     c70:	mov	r3, r5
     c74:	mov	ip, #0
     c78:	cmp	r4, ip
     c7c:	bne	c90 <flatcc_json_parser_coerce_uint32+0x5c>
     c80:	mvn	ip, #0
     c84:	cmp	r3, ip
     c88:	bhi	c9c <flatcc_json_parser_coerce_uint32+0x68>
     c8c:	b	ca8 <flatcc_json_parser_coerce_uint32+0x74>
     c90:	mov	ip, #0
     c94:	cmp	r4, ip
     c98:	bls	ca8 <flatcc_json_parser_coerce_uint32+0x74>
     c9c:	mov	r3, #7
     ca0:	bl	0 <flatcc_json_parser_set_error>
     ca4:	b	cb0 <flatcc_json_parser_coerce_uint32+0x7c>
     ca8:	str	r5, [r6]
     cac:	mov	r0, r1
     cb0:	ldr	r4, [sp, #8]
     cb4:	ldr	r5, [sp, #12]
     cb8:	ldr	r6, [sp, #16]
     cbc:	ldr	lr, [sp, #4]
     cc0:	add	sp, sp, #24
     cc4:	bx	lr

00000cc8 <flatcc_json_parser_coerce_uint16>:
     cc8:	mov	ip, sp
     ccc:	sub	sp, sp, #24
     cd0:	str	ip, [sp]
     cd4:	str	lr, [sp, #4]
     cd8:	str	r4, [sp, #8]
     cdc:	str	r5, [sp, #12]
     ce0:	str	r6, [sp, #16]
     ce4:	ldr	r6, [ip, #8]
     ce8:	ldr	r5, [ip, #4]
     cec:	ldr	r4, [ip]
     cf0:	cmp	r3, #0
     cf4:	beq	d04 <flatcc_json_parser_coerce_uint16+0x3c>
     cf8:	mov	r3, #8
     cfc:	bl	0 <flatcc_json_parser_set_error>
     d00:	b	d4c <flatcc_json_parser_coerce_uint16+0x84>
     d04:	mov	r3, r4
     d08:	mov	ip, #0
     d0c:	cmp	r5, ip
     d10:	bne	d24 <flatcc_json_parser_coerce_uint16+0x5c>
     d14:	movw	ip, #65535	; 0xffff
     d18:	cmp	r3, ip
     d1c:	bhi	d30 <flatcc_json_parser_coerce_uint16+0x68>
     d20:	b	d3c <flatcc_json_parser_coerce_uint16+0x74>
     d24:	mov	r3, #0
     d28:	cmp	r5, r3
     d2c:	bls	d3c <flatcc_json_parser_coerce_uint16+0x74>
     d30:	mov	r3, #7
     d34:	bl	0 <flatcc_json_parser_set_error>
     d38:	b	d4c <flatcc_json_parser_coerce_uint16+0x84>
     d3c:	bic	r3, r4, #16711680	; 0xff0000
     d40:	bic	r3, r3, #-16777216	; 0xff000000
     d44:	strh	r3, [r6]
     d48:	mov	r0, r1
     d4c:	ldr	r4, [sp, #8]
     d50:	ldr	r5, [sp, #12]
     d54:	ldr	r6, [sp, #16]
     d58:	ldr	lr, [sp, #4]
     d5c:	add	sp, sp, #24
     d60:	bx	lr

00000d64 <flatcc_json_parser_coerce_uint8>:
     d64:	mov	ip, sp
     d68:	sub	sp, sp, #24
     d6c:	str	ip, [sp]
     d70:	str	lr, [sp, #4]
     d74:	str	r4, [sp, #8]
     d78:	str	r5, [sp, #12]
     d7c:	str	r6, [sp, #16]
     d80:	ldr	r6, [ip, #8]
     d84:	ldr	r5, [ip, #4]
     d88:	ldr	r4, [ip]
     d8c:	cmp	r3, #0
     d90:	beq	da0 <flatcc_json_parser_coerce_uint8+0x3c>
     d94:	mov	r3, #8
     d98:	bl	0 <flatcc_json_parser_set_error>
     d9c:	b	de4 <flatcc_json_parser_coerce_uint8+0x80>
     da0:	mov	r3, r4
     da4:	mov	ip, #0
     da8:	cmp	r5, ip
     dac:	bne	dc0 <flatcc_json_parser_coerce_uint8+0x5c>
     db0:	mov	ip, #255	; 0xff
     db4:	cmp	r3, ip
     db8:	bhi	dcc <flatcc_json_parser_coerce_uint8+0x68>
     dbc:	b	dd8 <flatcc_json_parser_coerce_uint8+0x74>
     dc0:	mov	r3, #0
     dc4:	cmp	r5, r3
     dc8:	bls	dd8 <flatcc_json_parser_coerce_uint8+0x74>
     dcc:	mov	r3, #7
     dd0:	bl	0 <flatcc_json_parser_set_error>
     dd4:	b	de4 <flatcc_json_parser_coerce_uint8+0x80>
     dd8:	and	r3, r4, #255	; 0xff
     ddc:	strb	r3, [r6]
     de0:	mov	r0, r1
     de4:	ldr	r4, [sp, #8]
     de8:	ldr	r5, [sp, #12]
     dec:	ldr	r6, [sp, #16]
     df0:	ldr	lr, [sp, #4]
     df4:	add	sp, sp, #24
     df8:	bx	lr

00000dfc <flatcc_json_parser_coerce_int64>:
     dfc:	mov	ip, sp
     e00:	sub	sp, sp, #24
     e04:	str	ip, [sp]
     e08:	str	lr, [sp, #4]
     e0c:	str	r4, [sp, #8]
     e10:	str	r5, [sp, #12]
     e14:	str	r6, [sp, #16]
     e18:	str	r7, [sp, #20]
     e1c:	ldr	r6, [ip, #8]
     e20:	ldr	r5, [ip, #4]
     e24:	ldr	r4, [ip]
     e28:	cmp	r3, #0
     e2c:	beq	e84 <flatcc_json_parser_coerce_int64+0x88>
     e30:	mov	r3, r5
     e34:	mov	ip, #-2147483648	; 0x80000000
     e38:	cmp	r3, ip
     e3c:	bne	e54 <flatcc_json_parser_coerce_int64+0x58>
     e40:	mov	ip, r4
     e44:	mov	r3, #0
     e48:	cmp	ip, r3
     e4c:	bhi	e64 <flatcc_json_parser_coerce_int64+0x68>
     e50:	b	e70 <flatcc_json_parser_coerce_int64+0x74>
     e54:	mov	r3, r5
     e58:	mov	ip, #-2147483648	; 0x80000000
     e5c:	cmp	r3, ip
     e60:	bls	e70 <flatcc_json_parser_coerce_int64+0x74>
     e64:	mov	r3, #8
     e68:	bl	0 <flatcc_json_parser_set_error>
     e6c:	b	ecc <flatcc_json_parser_coerce_int64+0xd0>
     e70:	rsbs	r3, r4, #0
     e74:	rsc	r0, r5, #0
     e78:	str	r3, [r6]
     e7c:	str	r0, [r6, #4]
     e80:	b	ec8 <flatcc_json_parser_coerce_int64+0xcc>
     e84:	mov	ip, r5
     e88:	mov	r3, r4
     e8c:	mvn	r7, #-2147483648	; 0x80000000
     e90:	cmp	ip, r7
     e94:	bne	ea8 <flatcc_json_parser_coerce_int64+0xac>
     e98:	mvn	ip, #0
     e9c:	cmp	r3, ip
     ea0:	bhi	eb4 <flatcc_json_parser_coerce_int64+0xb8>
     ea4:	b	ec0 <flatcc_json_parser_coerce_int64+0xc4>
     ea8:	mvn	r3, #-2147483648	; 0x80000000
     eac:	cmp	ip, r3
     eb0:	bls	ec0 <flatcc_json_parser_coerce_int64+0xc4>
     eb4:	mov	r3, #7
     eb8:	bl	0 <flatcc_json_parser_set_error>
     ebc:	b	ecc <flatcc_json_parser_coerce_int64+0xd0>
     ec0:	str	r4, [r6]
     ec4:	str	r5, [r6, #4]
     ec8:	mov	r0, r1
     ecc:	ldr	r4, [sp, #8]
     ed0:	ldr	r5, [sp, #12]
     ed4:	ldr	r6, [sp, #16]
     ed8:	ldr	r7, [sp, #20]
     edc:	ldr	lr, [sp, #4]
     ee0:	add	sp, sp, #24
     ee4:	bx	lr

00000ee8 <flatcc_json_parser_coerce_int32>:
     ee8:	mov	ip, sp
     eec:	sub	sp, sp, #24
     ef0:	str	ip, [sp]
     ef4:	str	lr, [sp, #4]
     ef8:	str	r4, [sp, #8]
     efc:	str	r5, [sp, #12]
     f00:	str	r6, [sp, #16]
     f04:	str	r7, [sp, #20]
     f08:	ldr	r6, [ip, #8]
     f0c:	ldr	r4, [ip, #4]
     f10:	ldr	r5, [ip]
     f14:	cmp	r3, #0
     f18:	beq	f6c <flatcc_json_parser_coerce_int32+0x84>
     f1c:	mov	ip, r5
     f20:	mov	r3, r4
     f24:	mov	r7, #0
     f28:	cmp	r3, r7
     f2c:	bne	f40 <flatcc_json_parser_coerce_int32+0x58>
     f30:	mov	r3, #-2147483648	; 0x80000000
     f34:	cmp	ip, r3
     f38:	bhi	f50 <flatcc_json_parser_coerce_int32+0x68>
     f3c:	b	f5c <flatcc_json_parser_coerce_int32+0x74>
     f40:	mov	r3, r4
     f44:	mov	ip, #0
     f48:	cmp	r3, ip
     f4c:	bls	f5c <flatcc_json_parser_coerce_int32+0x74>
     f50:	mov	r3, #8
     f54:	bl	0 <flatcc_json_parser_set_error>
     f58:	b	fac <flatcc_json_parser_coerce_int32+0xc4>
     f5c:	rsbs	r0, r5, #0
     f60:	rsc	r2, r4, #0
     f64:	str	r0, [r6]
     f68:	b	fa8 <flatcc_json_parser_coerce_int32+0xc0>
     f6c:	mov	ip, r5
     f70:	mov	r3, #0
     f74:	cmp	r4, r3
     f78:	bne	f8c <flatcc_json_parser_coerce_int32+0xa4>
     f7c:	mvn	r3, #-2147483648	; 0x80000000
     f80:	cmp	ip, r3
     f84:	bhi	f98 <flatcc_json_parser_coerce_int32+0xb0>
     f88:	b	fa4 <flatcc_json_parser_coerce_int32+0xbc>
     f8c:	mov	ip, #0
     f90:	cmp	r4, ip
     f94:	bls	fa4 <flatcc_json_parser_coerce_int32+0xbc>
     f98:	mov	r3, #7
     f9c:	bl	0 <flatcc_json_parser_set_error>
     fa0:	b	fac <flatcc_json_parser_coerce_int32+0xc4>
     fa4:	str	r5, [r6]
     fa8:	mov	r0, r1
     fac:	ldr	r4, [sp, #8]
     fb0:	ldr	r5, [sp, #12]
     fb4:	ldr	r6, [sp, #16]
     fb8:	ldr	r7, [sp, #20]
     fbc:	ldr	lr, [sp, #4]
     fc0:	add	sp, sp, #24
     fc4:	bx	lr

00000fc8 <flatcc_json_parser_coerce_int16>:
     fc8:	mov	ip, sp
     fcc:	sub	sp, sp, #24
     fd0:	str	ip, [sp]
     fd4:	str	lr, [sp, #4]
     fd8:	str	r4, [sp, #8]
     fdc:	str	r5, [sp, #12]
     fe0:	str	r6, [sp, #16]
     fe4:	ldr	r6, [ip, #8]
     fe8:	ldr	r4, [ip, #4]
     fec:	ldr	r5, [ip]
     ff0:	cmp	r3, #0
     ff4:	beq	1050 <flatcc_json_parser_coerce_int16+0x88>
     ff8:	mov	r3, r4
     ffc:	mov	ip, #0
    1000:	cmp	r3, ip
    1004:	bne	101c <flatcc_json_parser_coerce_int16+0x54>
    1008:	mov	r3, r5
    100c:	mov	ip, #32768	; 0x8000
    1010:	cmp	r3, ip
    1014:	bhi	102c <flatcc_json_parser_coerce_int16+0x64>
    1018:	b	1038 <flatcc_json_parser_coerce_int16+0x70>
    101c:	mov	r3, r4
    1020:	mov	ip, #0
    1024:	cmp	r3, ip
    1028:	bls	1038 <flatcc_json_parser_coerce_int16+0x70>
    102c:	mov	r3, #8
    1030:	bl	0 <flatcc_json_parser_set_error>
    1034:	b	1098 <flatcc_json_parser_coerce_int16+0xd0>
    1038:	rsbs	r0, r5, #0
    103c:	rsc	r3, r4, #0
    1040:	sbfx	r0, r0, #0, #16
    1044:	sbfx	r3, r0, #0, #16
    1048:	strh	r3, [r6]
    104c:	b	1094 <flatcc_json_parser_coerce_int16+0xcc>
    1050:	mov	ip, r5
    1054:	mov	r3, #0
    1058:	cmp	r4, r3
    105c:	bne	1070 <flatcc_json_parser_coerce_int16+0xa8>
    1060:	movw	r3, #32767	; 0x7fff
    1064:	cmp	ip, r3
    1068:	bhi	107c <flatcc_json_parser_coerce_int16+0xb4>
    106c:	b	1088 <flatcc_json_parser_coerce_int16+0xc0>
    1070:	mov	r3, #0
    1074:	cmp	r4, r3
    1078:	bls	1088 <flatcc_json_parser_coerce_int16+0xc0>
    107c:	mov	r3, #7
    1080:	bl	0 <flatcc_json_parser_set_error>
    1084:	b	1098 <flatcc_json_parser_coerce_int16+0xd0>
    1088:	sbfx	r2, r5, #0, #16
    108c:	sbfx	ip, r2, #0, #16
    1090:	strh	ip, [r6]
    1094:	mov	r0, r1
    1098:	ldr	r4, [sp, #8]
    109c:	ldr	r5, [sp, #12]
    10a0:	ldr	r6, [sp, #16]
    10a4:	ldr	lr, [sp, #4]
    10a8:	add	sp, sp, #24
    10ac:	bx	lr

000010b0 <flatcc_json_parser_coerce_int8>:
    10b0:	mov	ip, sp
    10b4:	sub	sp, sp, #24
    10b8:	str	ip, [sp]
    10bc:	str	lr, [sp, #4]
    10c0:	str	r4, [sp, #8]
    10c4:	str	r5, [sp, #12]
    10c8:	str	r6, [sp, #16]
    10cc:	ldr	r6, [ip, #8]
    10d0:	ldr	r4, [ip, #4]
    10d4:	ldr	r5, [ip]
    10d8:	cmp	r3, #0
    10dc:	beq	1138 <flatcc_json_parser_coerce_int8+0x88>
    10e0:	mov	r3, r4
    10e4:	mov	ip, #0
    10e8:	cmp	r3, ip
    10ec:	bne	1104 <flatcc_json_parser_coerce_int8+0x54>
    10f0:	mov	r3, r5
    10f4:	mov	ip, #128	; 0x80
    10f8:	cmp	r3, ip
    10fc:	bhi	1114 <flatcc_json_parser_coerce_int8+0x64>
    1100:	b	1120 <flatcc_json_parser_coerce_int8+0x70>
    1104:	mov	r3, r4
    1108:	mov	ip, #0
    110c:	cmp	r3, ip
    1110:	bls	1120 <flatcc_json_parser_coerce_int8+0x70>
    1114:	mov	r3, #8
    1118:	bl	0 <flatcc_json_parser_set_error>
    111c:	b	1180 <flatcc_json_parser_coerce_int8+0xd0>
    1120:	rsbs	r0, r5, #0
    1124:	rsc	r3, r4, #0
    1128:	sbfx	r0, r0, #0, #8
    112c:	sbfx	r3, r0, #0, #8
    1130:	strb	r3, [r6]
    1134:	b	117c <flatcc_json_parser_coerce_int8+0xcc>
    1138:	mov	ip, r5
    113c:	mov	r3, #0
    1140:	cmp	r4, r3
    1144:	bne	1158 <flatcc_json_parser_coerce_int8+0xa8>
    1148:	mov	r3, #127	; 0x7f
    114c:	cmp	ip, r3
    1150:	bhi	1164 <flatcc_json_parser_coerce_int8+0xb4>
    1154:	b	1170 <flatcc_json_parser_coerce_int8+0xc0>
    1158:	mov	r3, #0
    115c:	cmp	r4, r3
    1160:	bls	1170 <flatcc_json_parser_coerce_int8+0xc0>
    1164:	mov	r3, #7
    1168:	bl	0 <flatcc_json_parser_set_error>
    116c:	b	1180 <flatcc_json_parser_coerce_int8+0xd0>
    1170:	sbfx	r2, r5, #0, #8
    1174:	sbfx	ip, r2, #0, #8
    1178:	strb	ip, [r6]
    117c:	mov	r0, r1
    1180:	ldr	r4, [sp, #8]
    1184:	ldr	r5, [sp, #12]
    1188:	ldr	r6, [sp, #16]
    118c:	ldr	lr, [sp, #4]
    1190:	add	sp, sp, #24
    1194:	bx	lr

00001198 <flatcc_json_parser_coerce_float>:
    1198:	mov	ip, sp
    119c:	sub	sp, sp, #16
    11a0:	str	ip, [sp]
    11a4:	str	lr, [sp, #4]
    11a8:	str	r4, [sp, #8]
    11ac:	str	r5, [sp, #12]
    11b0:	ldr	r5, [ip, #8]
    11b4:	mov	r4, r1
    11b8:	ldr	r1, [ip, #4]
    11bc:	ldr	r0, [ip]
    11c0:	cmp	r3, #0
    11c4:	beq	11d4 <flatcc_json_parser_coerce_float+0x3c>
    11c8:	bl	0 <__compcert_i64_utof>
    11cc:	vneg.f32	s0, s0
    11d0:	b	11d8 <flatcc_json_parser_coerce_float+0x40>
    11d4:	bl	0 <__compcert_i64_utof>
    11d8:	vstr	s0, [r5]
    11dc:	mov	r0, r4
    11e0:	ldr	r4, [sp, #8]
    11e4:	ldr	r5, [sp, #12]
    11e8:	ldr	lr, [sp, #4]
    11ec:	add	sp, sp, #16
    11f0:	bx	lr

000011f4 <flatcc_json_parser_coerce_double>:
    11f4:	mov	ip, sp
    11f8:	sub	sp, sp, #16
    11fc:	str	ip, [sp]
    1200:	str	lr, [sp, #4]
    1204:	str	r4, [sp, #8]
    1208:	str	r5, [sp, #12]
    120c:	ldr	r5, [ip, #8]
    1210:	mov	r4, r1
    1214:	ldr	r1, [ip, #4]
    1218:	ldr	r0, [ip]
    121c:	cmp	r3, #0
    1220:	beq	1230 <flatcc_json_parser_coerce_double+0x3c>
    1224:	bl	0 <__compcert_i64_utod>
    1228:	vneg.f64	d0, d0
    122c:	b	1234 <flatcc_json_parser_coerce_double+0x40>
    1230:	bl	0 <__compcert_i64_utod>
    1234:	vstr	d0, [r5]
    1238:	mov	r0, r4
    123c:	ldr	r4, [sp, #8]
    1240:	ldr	r5, [sp, #12]
    1244:	ldr	lr, [sp, #4]
    1248:	add	sp, sp, #16
    124c:	bx	lr

00001250 <flatcc_json_parser_none>:
    1250:	mov	ip, sp
    1254:	sub	sp, sp, #24
    1258:	str	ip, [sp]
    125c:	str	lr, [sp, #4]
    1260:	str	r4, [sp, #8]
    1264:	str	r5, [sp, #12]
    1268:	str	r6, [sp, #16]
    126c:	mov	r4, r2
    1270:	mov	r5, r1
    1274:	mov	r6, r0
    1278:	sub	r2, r4, r5
    127c:	cmp	r2, #4
    1280:	blt	12a4 <flatcc_json_parser_none+0x54>
    1284:	ldr	r1, [pc, #88]	; 12e4 <flatcc_json_parser_none+0x94>
    1288:	mov	r2, #4
    128c:	mov	r0, r5
    1290:	bl	0 <memcmp>
    1294:	cmp	r0, #0
    1298:	moveq	ip, #1
    129c:	movne	ip, #0
    12a0:	b	12a8 <flatcc_json_parser_none+0x58>
    12a4:	mov	ip, #0
    12a8:	cmp	ip, #0
    12ac:	beq	12b8 <flatcc_json_parser_none+0x68>
    12b0:	add	r0, r5, #4
    12b4:	b	12cc <flatcc_json_parser_none+0x7c>
    12b8:	mov	r3, #26
    12bc:	mov	r2, r4
    12c0:	mov	r1, r5
    12c4:	mov	r0, r6
    12c8:	bl	0 <flatcc_json_parser_set_error>
    12cc:	ldr	r4, [sp, #8]
    12d0:	ldr	r5, [sp, #12]
    12d4:	ldr	r6, [sp, #16]
    12d8:	ldr	lr, [sp, #4]
    12dc:	add	sp, sp, #24
    12e0:	bx	lr
    12e4:	.word	0x00001775

000012e8 <flatcc_json_parser_uint64>:
    12e8:	mov	ip, sp
    12ec:	sub	sp, sp, #56	; 0x38
    12f0:	str	ip, [sp, #12]
    12f4:	str	lr, [sp, #16]
    12f8:	str	r4, [sp, #24]
    12fc:	str	r5, [sp, #28]
    1300:	str	r6, [sp, #32]
    1304:	str	r7, [sp, #36]	; 0x24
    1308:	mov	r7, r3
    130c:	mov	r4, r2
    1310:	mov	r5, r0
    1314:	mov	r2, #0
    1318:	mov	r0, #0
    131c:	str	r0, [sp, #48]	; 0x30
    1320:	str	r2, [sp, #52]	; 0x34
    1324:	mov	r2, #0
    1328:	str	r2, [sp, #40]	; 0x28
    132c:	mov	r6, r1
    1330:	mov	r3, #0
    1334:	mov	r2, #0
    1338:	str	r2, [r7]
    133c:	str	r3, [r7, #4]
    1340:	cmp	r1, r4
    1344:	bne	1350 <flatcc_json_parser_uint64+0x68>
    1348:	mov	r0, r1
    134c:	b	1398 <flatcc_json_parser_uint64+0xb0>
    1350:	add	r3, sp, #40	; 0x28
    1354:	add	r2, sp, #48	; 0x30
    1358:	str	r2, [sp]
    135c:	mov	r2, r4
    1360:	mov	r0, r5
    1364:	bl	0 <flatcc_json_parser_integer>
    1368:	cmp	r0, r6
    136c:	beq	1398 <flatcc_json_parser_uint64+0xb0>
    1370:	ldr	r3, [sp, #40]	; 0x28
    1374:	ldr	ip, [sp, #48]	; 0x30
    1378:	ldr	r1, [sp, #52]	; 0x34
    137c:	str	r7, [sp, #8]
    1380:	str	r1, [sp, #4]
    1384:	str	ip, [sp]
    1388:	mov	r2, r4
    138c:	mov	r1, r0
    1390:	mov	r0, r5
    1394:	bl	b58 <flatcc_json_parser_coerce_uint64>
    1398:	ldr	r4, [sp, #24]
    139c:	ldr	r5, [sp, #28]
    13a0:	ldr	r6, [sp, #32]
    13a4:	ldr	r7, [sp, #36]	; 0x24
    13a8:	ldr	lr, [sp, #16]
    13ac:	add	sp, sp, #56	; 0x38
    13b0:	bx	lr

000013b4 <flatcc_json_parser_uint32>:
    13b4:	mov	ip, sp
    13b8:	sub	sp, sp, #56	; 0x38
    13bc:	str	ip, [sp, #12]
    13c0:	str	lr, [sp, #16]
    13c4:	str	r4, [sp, #24]
    13c8:	str	r5, [sp, #28]
    13cc:	str	r6, [sp, #32]
    13d0:	str	r7, [sp, #36]	; 0x24
    13d4:	mov	r7, r3
    13d8:	mov	r5, r2
    13dc:	mov	r6, r0
    13e0:	mov	r2, #0
    13e4:	mov	r0, #0
    13e8:	str	r0, [sp, #48]	; 0x30
    13ec:	str	r2, [sp, #52]	; 0x34
    13f0:	mov	r3, #0
    13f4:	str	r3, [sp, #40]	; 0x28
    13f8:	mov	r4, r1
    13fc:	mov	r3, #0
    1400:	str	r3, [r7]
    1404:	cmp	r1, r5
    1408:	bne	1414 <flatcc_json_parser_uint32+0x60>
    140c:	mov	r0, r1
    1410:	b	145c <flatcc_json_parser_uint32+0xa8>
    1414:	add	r3, sp, #40	; 0x28
    1418:	add	r2, sp, #48	; 0x30
    141c:	str	r2, [sp]
    1420:	mov	r2, r5
    1424:	mov	r0, r6
    1428:	bl	0 <flatcc_json_parser_integer>
    142c:	cmp	r0, r4
    1430:	beq	145c <flatcc_json_parser_uint32+0xa8>
    1434:	ldr	r3, [sp, #40]	; 0x28
    1438:	ldr	ip, [sp, #48]	; 0x30
    143c:	ldr	r2, [sp, #52]	; 0x34
    1440:	str	r7, [sp, #8]
    1444:	str	r2, [sp, #4]
    1448:	str	ip, [sp]
    144c:	mov	r2, r5
    1450:	mov	r1, r0
    1454:	mov	r0, r6
    1458:	bl	c34 <flatcc_json_parser_coerce_uint32>
    145c:	ldr	r4, [sp, #24]
    1460:	ldr	r5, [sp, #28]
    1464:	ldr	r6, [sp, #32]
    1468:	ldr	r7, [sp, #36]	; 0x24
    146c:	ldr	lr, [sp, #16]
    1470:	add	sp, sp, #56	; 0x38
    1474:	bx	lr

00001478 <flatcc_json_parser_uint16>:
    1478:	mov	ip, sp
    147c:	sub	sp, sp, #56	; 0x38
    1480:	str	ip, [sp, #12]
    1484:	str	lr, [sp, #16]
    1488:	str	r4, [sp, #24]
    148c:	str	r5, [sp, #28]
    1490:	str	r6, [sp, #32]
    1494:	str	r7, [sp, #36]	; 0x24
    1498:	mov	r7, r3
    149c:	mov	r5, r2
    14a0:	mov	r6, r0
    14a4:	mov	r2, #0
    14a8:	mov	r0, #0
    14ac:	str	r0, [sp, #48]	; 0x30
    14b0:	str	r2, [sp, #52]	; 0x34
    14b4:	mov	r3, #0
    14b8:	str	r3, [sp, #40]	; 0x28
    14bc:	mov	r4, r1
    14c0:	mov	r3, #0
    14c4:	strh	r3, [r7]
    14c8:	cmp	r1, r5
    14cc:	bne	14d8 <flatcc_json_parser_uint16+0x60>
    14d0:	mov	r0, r1
    14d4:	b	1520 <flatcc_json_parser_uint16+0xa8>
    14d8:	add	r3, sp, #40	; 0x28
    14dc:	add	r2, sp, #48	; 0x30
    14e0:	str	r2, [sp]
    14e4:	mov	r2, r5
    14e8:	mov	r0, r6
    14ec:	bl	0 <flatcc_json_parser_integer>
    14f0:	cmp	r0, r4
    14f4:	beq	1520 <flatcc_json_parser_uint16+0xa8>
    14f8:	ldr	r3, [sp, #40]	; 0x28
    14fc:	ldr	ip, [sp, #48]	; 0x30
    1500:	ldr	r2, [sp, #52]	; 0x34
    1504:	str	r7, [sp, #8]
    1508:	str	r2, [sp, #4]
    150c:	str	ip, [sp]
    1510:	mov	r2, r5
    1514:	mov	r1, r0
    1518:	mov	r0, r6
    151c:	bl	cc8 <flatcc_json_parser_coerce_uint16>
    1520:	ldr	r4, [sp, #24]
    1524:	ldr	r5, [sp, #28]
    1528:	ldr	r6, [sp, #32]
    152c:	ldr	r7, [sp, #36]	; 0x24
    1530:	ldr	lr, [sp, #16]
    1534:	add	sp, sp, #56	; 0x38
    1538:	bx	lr

0000153c <flatcc_json_parser_uint8>:
    153c:	mov	ip, sp
    1540:	sub	sp, sp, #56	; 0x38
    1544:	str	ip, [sp, #12]
    1548:	str	lr, [sp, #16]
    154c:	str	r4, [sp, #24]
    1550:	str	r5, [sp, #28]
    1554:	str	r6, [sp, #32]
    1558:	str	r7, [sp, #36]	; 0x24
    155c:	mov	r7, r3
    1560:	mov	r5, r2
    1564:	mov	r6, r0
    1568:	mov	r2, #0
    156c:	mov	r0, #0
    1570:	str	r0, [sp, #48]	; 0x30
    1574:	str	r2, [sp, #52]	; 0x34
    1578:	mov	r3, #0
    157c:	str	r3, [sp, #40]	; 0x28
    1580:	mov	r4, r1
    1584:	mov	r3, #0
    1588:	strb	r3, [r7]
    158c:	cmp	r1, r5
    1590:	bne	159c <flatcc_json_parser_uint8+0x60>
    1594:	mov	r0, r1
    1598:	b	15e4 <flatcc_json_parser_uint8+0xa8>
    159c:	add	r3, sp, #40	; 0x28
    15a0:	add	r2, sp, #48	; 0x30
    15a4:	str	r2, [sp]
    15a8:	mov	r2, r5
    15ac:	mov	r0, r6
    15b0:	bl	0 <flatcc_json_parser_integer>
    15b4:	cmp	r0, r4
    15b8:	beq	15e4 <flatcc_json_parser_uint8+0xa8>
    15bc:	ldr	r3, [sp, #40]	; 0x28
    15c0:	ldr	ip, [sp, #48]	; 0x30
    15c4:	ldr	r2, [sp, #52]	; 0x34
    15c8:	str	r7, [sp, #8]
    15cc:	str	r2, [sp, #4]
    15d0:	str	ip, [sp]
    15d4:	mov	r2, r5
    15d8:	mov	r1, r0
    15dc:	mov	r0, r6
    15e0:	bl	d64 <flatcc_json_parser_coerce_uint8>
    15e4:	ldr	r4, [sp, #24]
    15e8:	ldr	r5, [sp, #28]
    15ec:	ldr	r6, [sp, #32]
    15f0:	ldr	r7, [sp, #36]	; 0x24
    15f4:	ldr	lr, [sp, #16]
    15f8:	add	sp, sp, #56	; 0x38
    15fc:	bx	lr

00001600 <flatcc_json_parser_int64>:
    1600:	mov	ip, sp
    1604:	sub	sp, sp, #56	; 0x38
    1608:	str	ip, [sp, #12]
    160c:	str	lr, [sp, #16]
    1610:	str	r4, [sp, #24]
    1614:	str	r5, [sp, #28]
    1618:	str	r6, [sp, #32]
    161c:	str	r7, [sp, #36]	; 0x24
    1620:	mov	r7, r3
    1624:	mov	r4, r2
    1628:	mov	r5, r0
    162c:	mov	r2, #0
    1630:	mov	r0, #0
    1634:	str	r0, [sp, #48]	; 0x30
    1638:	str	r2, [sp, #52]	; 0x34
    163c:	mov	r2, #0
    1640:	str	r2, [sp, #40]	; 0x28
    1644:	mov	r6, r1
    1648:	mov	r3, #0
    164c:	mov	r2, #0
    1650:	str	r2, [r7]
    1654:	str	r3, [r7, #4]
    1658:	cmp	r1, r4
    165c:	bne	1668 <flatcc_json_parser_int64+0x68>
    1660:	mov	r0, r1
    1664:	b	16b0 <flatcc_json_parser_int64+0xb0>
    1668:	add	r3, sp, #40	; 0x28
    166c:	add	r2, sp, #48	; 0x30
    1670:	str	r2, [sp]
    1674:	mov	r2, r4
    1678:	mov	r0, r5
    167c:	bl	0 <flatcc_json_parser_integer>
    1680:	cmp	r0, r6
    1684:	beq	16b0 <flatcc_json_parser_int64+0xb0>
    1688:	ldr	r3, [sp, #40]	; 0x28
    168c:	ldr	ip, [sp, #48]	; 0x30
    1690:	ldr	r1, [sp, #52]	; 0x34
    1694:	str	r7, [sp, #8]
    1698:	str	r1, [sp, #4]
    169c:	str	ip, [sp]
    16a0:	mov	r2, r4
    16a4:	mov	r1, r0
    16a8:	mov	r0, r5
    16ac:	bl	dfc <flatcc_json_parser_coerce_int64>
    16b0:	ldr	r4, [sp, #24]
    16b4:	ldr	r5, [sp, #28]
    16b8:	ldr	r6, [sp, #32]
    16bc:	ldr	r7, [sp, #36]	; 0x24
    16c0:	ldr	lr, [sp, #16]
    16c4:	add	sp, sp, #56	; 0x38
    16c8:	bx	lr

000016cc <flatcc_json_parser_int32>:
    16cc:	mov	ip, sp
    16d0:	sub	sp, sp, #56	; 0x38
    16d4:	str	ip, [sp, #12]
    16d8:	str	lr, [sp, #16]
    16dc:	str	r4, [sp, #24]
    16e0:	str	r5, [sp, #28]
    16e4:	str	r6, [sp, #32]
    16e8:	str	r7, [sp, #36]	; 0x24
    16ec:	mov	r7, r3
    16f0:	mov	r5, r2
    16f4:	mov	r6, r0
    16f8:	mov	r2, #0
    16fc:	mov	r0, #0
    1700:	str	r0, [sp, #48]	; 0x30
    1704:	str	r2, [sp, #52]	; 0x34
    1708:	mov	r3, #0
    170c:	str	r3, [sp, #40]	; 0x28
    1710:	mov	r4, r1
    1714:	mov	r3, #0
    1718:	str	r3, [r7]
    171c:	cmp	r1, r5
    1720:	bne	172c <flatcc_json_parser_int32+0x60>
    1724:	mov	r0, r1
    1728:	b	1774 <flatcc_json_parser_int32+0xa8>
    172c:	add	r3, sp, #40	; 0x28
    1730:	add	r2, sp, #48	; 0x30
    1734:	str	r2, [sp]
    1738:	mov	r2, r5
    173c:	mov	r0, r6
    1740:	bl	0 <flatcc_json_parser_integer>
    1744:	cmp	r0, r4
    1748:	beq	1774 <flatcc_json_parser_int32+0xa8>
    174c:	ldr	r3, [sp, #40]	; 0x28
    1750:	ldr	ip, [sp, #48]	; 0x30
    1754:	ldr	r2, [sp, #52]	; 0x34
    1758:	str	r7, [sp, #8]
    175c:	str	r2, [sp, #4]
    1760:	str	ip, [sp]
    1764:	mov	r2, r5
    1768:	mov	r1, r0
    176c:	mov	r0, r6
    1770:	bl	ee8 <flatcc_json_parser_coerce_int32>
    1774:	ldr	r4, [sp, #24]
    1778:	ldr	r5, [sp, #28]
    177c:	ldr	r6, [sp, #32]
    1780:	ldr	r7, [sp, #36]	; 0x24
    1784:	ldr	lr, [sp, #16]
    1788:	add	sp, sp, #56	; 0x38
    178c:	bx	lr

00001790 <flatcc_json_parser_int16>:
    1790:	mov	ip, sp
    1794:	sub	sp, sp, #56	; 0x38
    1798:	str	ip, [sp, #12]
    179c:	str	lr, [sp, #16]
    17a0:	str	r4, [sp, #24]
    17a4:	str	r5, [sp, #28]
    17a8:	str	r6, [sp, #32]
    17ac:	str	r7, [sp, #36]	; 0x24
    17b0:	mov	r7, r3
    17b4:	mov	r5, r2
    17b8:	mov	r6, r0
    17bc:	mov	r2, #0
    17c0:	mov	r0, #0
    17c4:	str	r0, [sp, #48]	; 0x30
    17c8:	str	r2, [sp, #52]	; 0x34
    17cc:	mov	r3, #0
    17d0:	str	r3, [sp, #40]	; 0x28
    17d4:	mov	r4, r1
    17d8:	mov	r3, #0
    17dc:	strh	r3, [r7]
    17e0:	cmp	r1, r5
    17e4:	bne	17f0 <flatcc_json_parser_int16+0x60>
    17e8:	mov	r0, r1
    17ec:	b	1838 <flatcc_json_parser_int16+0xa8>
    17f0:	add	r3, sp, #40	; 0x28
    17f4:	add	r2, sp, #48	; 0x30
    17f8:	str	r2, [sp]
    17fc:	mov	r2, r5
    1800:	mov	r0, r6
    1804:	bl	0 <flatcc_json_parser_integer>
    1808:	cmp	r0, r4
    180c:	beq	1838 <flatcc_json_parser_int16+0xa8>
    1810:	ldr	r3, [sp, #40]	; 0x28
    1814:	ldr	ip, [sp, #48]	; 0x30
    1818:	ldr	r2, [sp, #52]	; 0x34
    181c:	str	r7, [sp, #8]
    1820:	str	r2, [sp, #4]
    1824:	str	ip, [sp]
    1828:	mov	r2, r5
    182c:	mov	r1, r0
    1830:	mov	r0, r6
    1834:	bl	fc8 <flatcc_json_parser_coerce_int16>
    1838:	ldr	r4, [sp, #24]
    183c:	ldr	r5, [sp, #28]
    1840:	ldr	r6, [sp, #32]
    1844:	ldr	r7, [sp, #36]	; 0x24
    1848:	ldr	lr, [sp, #16]
    184c:	add	sp, sp, #56	; 0x38
    1850:	bx	lr

00001854 <flatcc_json_parser_int8>:
    1854:	mov	ip, sp
    1858:	sub	sp, sp, #56	; 0x38
    185c:	str	ip, [sp, #12]
    1860:	str	lr, [sp, #16]
    1864:	str	r4, [sp, #24]
    1868:	str	r5, [sp, #28]
    186c:	str	r6, [sp, #32]
    1870:	str	r7, [sp, #36]	; 0x24
    1874:	mov	r7, r3
    1878:	mov	r5, r2
    187c:	mov	r6, r0
    1880:	mov	r2, #0
    1884:	mov	r0, #0
    1888:	str	r0, [sp, #48]	; 0x30
    188c:	str	r2, [sp, #52]	; 0x34
    1890:	mov	r3, #0
    1894:	str	r3, [sp, #40]	; 0x28
    1898:	mov	r4, r1
    189c:	mov	r3, #0
    18a0:	strb	r3, [r7]
    18a4:	cmp	r1, r5
    18a8:	bne	18b4 <flatcc_json_parser_int8+0x60>
    18ac:	mov	r0, r1
    18b0:	b	18fc <flatcc_json_parser_int8+0xa8>
    18b4:	add	r3, sp, #40	; 0x28
    18b8:	add	r2, sp, #48	; 0x30
    18bc:	str	r2, [sp]
    18c0:	mov	r2, r5
    18c4:	mov	r0, r6
    18c8:	bl	0 <flatcc_json_parser_integer>
    18cc:	cmp	r0, r4
    18d0:	beq	18fc <flatcc_json_parser_int8+0xa8>
    18d4:	ldr	r3, [sp, #40]	; 0x28
    18d8:	ldr	ip, [sp, #48]	; 0x30
    18dc:	ldr	r2, [sp, #52]	; 0x34
    18e0:	str	r7, [sp, #8]
    18e4:	str	r2, [sp, #4]
    18e8:	str	ip, [sp]
    18ec:	mov	r2, r5
    18f0:	mov	r1, r0
    18f4:	mov	r0, r6
    18f8:	bl	10b0 <flatcc_json_parser_coerce_int8>
    18fc:	ldr	r4, [sp, #24]
    1900:	ldr	r5, [sp, #28]
    1904:	ldr	r6, [sp, #32]
    1908:	ldr	r7, [sp, #36]	; 0x24
    190c:	ldr	lr, [sp, #16]
    1910:	add	sp, sp, #56	; 0x38
    1914:	bx	lr

00001918 <flatcc_json_parser_bool>:
    1918:	mov	ip, sp
    191c:	sub	sp, sp, #32
    1920:	str	ip, [sp]
    1924:	str	lr, [sp, #4]
    1928:	str	r4, [sp, #8]
    192c:	str	r5, [sp, #12]
    1930:	str	r6, [sp, #16]
    1934:	str	r7, [sp, #20]
    1938:	mov	r5, r3
    193c:	mov	r6, r2
    1940:	mov	r4, r1
    1944:	mov	r7, r0
    1948:	sub	r3, r6, r4
    194c:	cmp	r3, #4
    1950:	blt	1974 <flatcc_json_parser_bool+0x5c>
    1954:	ldr	r1, [pc, #196]	; 1a20 <flatcc_json_parser_bool+0x108>
    1958:	mov	r2, #4
    195c:	mov	r0, r4
    1960:	bl	0 <memcmp>
    1964:	cmp	r0, #0
    1968:	moveq	r1, #1
    196c:	movne	r1, #0
    1970:	b	1978 <flatcc_json_parser_bool+0x60>
    1974:	mov	r1, #0
    1978:	cmp	r1, #0
    197c:	bne	19f8 <flatcc_json_parser_bool+0xe0>
    1980:	sub	r3, r6, r4
    1984:	cmp	r3, #5
    1988:	blt	19ac <flatcc_json_parser_bool+0x94>
    198c:	ldr	r1, [pc, #144]	; 1a24 <flatcc_json_parser_bool+0x10c>
    1990:	mov	r2, #5
    1994:	mov	r0, r4
    1998:	bl	0 <memcmp>
    199c:	cmp	r0, #0
    19a0:	moveq	ip, #1
    19a4:	movne	ip, #0
    19a8:	b	19b0 <flatcc_json_parser_bool+0x98>
    19ac:	mov	ip, #0
    19b0:	cmp	ip, #0
    19b4:	beq	19c8 <flatcc_json_parser_bool+0xb0>
    19b8:	mov	r2, #0
    19bc:	strb	r2, [r5]
    19c0:	add	r0, r4, #5
    19c4:	b	1a04 <flatcc_json_parser_bool+0xec>
    19c8:	add	r3, sp, #24
    19cc:	mov	r2, r6
    19d0:	mov	r1, r4
    19d4:	mov	r0, r7
    19d8:	bl	153c <flatcc_json_parser_uint8>
    19dc:	ldrb	r1, [sp, #24]
    19e0:	cmp	r1, #0
    19e4:	movne	r1, #1
    19e8:	moveq	r1, #0
    19ec:	and	r1, r1, #255	; 0xff
    19f0:	strb	r1, [r5]
    19f4:	b	1a04 <flatcc_json_parser_bool+0xec>
    19f8:	mov	r0, #1
    19fc:	strb	r0, [r5]
    1a00:	add	r0, r4, #4
    1a04:	ldr	r4, [sp, #8]
    1a08:	ldr	r5, [sp, #12]
    1a0c:	ldr	r6, [sp, #16]
    1a10:	ldr	r7, [sp, #20]
    1a14:	ldr	lr, [sp, #4]
    1a18:	add	sp, sp, #32
    1a1c:	bx	lr
    1a20:	.word	0x00001ed6
    1a24:	.word	0x0000292b

00001a28 <flatcc_json_parser_symbolic_uint64>:
    1a28:	mov	ip, sp
    1a2c:	sub	sp, sp, #80	; 0x50
    1a30:	str	ip, [sp, #12]
    1a34:	str	lr, [sp, #16]
    1a38:	str	r4, [sp, #24]
    1a3c:	str	r5, [sp, #28]
    1a40:	str	r6, [sp, #32]
    1a44:	str	r7, [sp, #36]	; 0x24
    1a48:	str	r8, [sp, #40]	; 0x28
    1a4c:	str	r9, [sp, #44]	; 0x2c
    1a50:	str	sl, [sp, #48]	; 0x30
    1a54:	str	fp, [sp, #52]	; 0x34
    1a58:	ldr	r9, [ip]
    1a5c:	mov	r4, r3
    1a60:	mov	r5, r2
    1a64:	mov	r6, r0
    1a68:	mov	r0, #0
    1a6c:	mov	ip, #0
    1a70:	str	ip, [sp, #64]	; 0x40
    1a74:	str	r0, [sp, #68]	; 0x44
    1a78:	mov	r8, #0
    1a7c:	mov	r2, #0
    1a80:	mov	r0, #0
    1a84:	str	r0, [r9]
    1a88:	str	r2, [r9, #4]
    1a8c:	mov	r2, r5
    1a90:	mov	r0, r6
    1a94:	bl	5f0 <flatcc_json_parser_constant_start>
    1a98:	mov	r7, r0
    1a9c:	cmp	r7, r5
    1aa0:	beq	1be8 <flatcc_json_parser_symbolic_uint64+0x1c0>
    1aa4:	mov	fp, r4
    1aa8:	mov	r1, r7
    1aac:	mov	sl, r1
    1ab0:	ldr	r7, [fp]
    1ab4:	add	r3, sp, #56	; 0x38
    1ab8:	add	r0, sp, #72	; 0x48
    1abc:	add	r2, sp, #60	; 0x3c
    1ac0:	str	r2, [sp, #4]
    1ac4:	str	r0, [sp]
    1ac8:	mov	r2, r5
    1acc:	mov	r0, r6
    1ad0:	blx	r7
    1ad4:	mov	r7, r0
    1ad8:	cmp	r7, r5
    1adc:	beq	1be8 <flatcc_json_parser_symbolic_uint64+0x1c0>
    1ae0:	cmp	r7, sl
    1ae4:	bne	1b00 <flatcc_json_parser_symbolic_uint64+0xd8>
    1ae8:	add	fp, fp, #4
    1aec:	ldr	r3, [fp]
    1af0:	cmp	r3, #0
    1af4:	movne	r0, #1
    1af8:	moveq	r0, #0
    1afc:	b	1b04 <flatcc_json_parser_symbolic_uint64+0xdc>
    1b00:	mov	r0, #0
    1b04:	cmp	r0, #0
    1b08:	bne	1aa8 <flatcc_json_parser_symbolic_uint64+0x80>
    1b0c:	cmp	sl, r7
    1b10:	bne	1b30 <flatcc_json_parser_symbolic_uint64+0x108>
    1b14:	mov	r3, #23
    1b18:	mov	r2, r5
    1b1c:	mov	r1, r7
    1b20:	mov	r0, r6
    1b24:	bl	0 <flatcc_json_parser_set_error>
    1b28:	mov	r7, r0
    1b2c:	b	1be8 <flatcc_json_parser_symbolic_uint64+0x1c0>
    1b30:	mov	r3, r8
    1b34:	add	r8, r3, #1
    1b38:	cmp	r3, #0
    1b3c:	beq	1b54 <flatcc_json_parser_symbolic_uint64+0x12c>
    1b40:	ldr	r1, [r6, #12]
    1b44:	cmp	r1, #0
    1b48:	movne	r2, #1
    1b4c:	moveq	r2, #0
    1b50:	b	1b58 <flatcc_json_parser_symbolic_uint64+0x130>
    1b54:	mov	r2, #0
    1b58:	cmp	r2, #0
    1b5c:	beq	1b7c <flatcc_json_parser_symbolic_uint64+0x154>
    1b60:	mov	r3, #14
    1b64:	mov	r2, r5
    1b68:	mov	r1, r7
    1b6c:	mov	r0, r6
    1b70:	bl	0 <flatcc_json_parser_set_error>
    1b74:	mov	r7, r0
    1b78:	b	1be8 <flatcc_json_parser_symbolic_uint64+0x1c0>
    1b7c:	ldr	r3, [sp, #56]	; 0x38
    1b80:	ldr	r1, [sp, #72]	; 0x48
    1b84:	ldr	r0, [sp, #76]	; 0x4c
    1b88:	add	r2, sp, #64	; 0x40
    1b8c:	str	r2, [sp, #8]
    1b90:	str	r0, [sp, #4]
    1b94:	str	r1, [sp]
    1b98:	mov	r2, r5
    1b9c:	mov	r1, r7
    1ba0:	mov	r0, r6
    1ba4:	bl	b58 <flatcc_json_parser_coerce_uint64>
    1ba8:	cmp	r5, r0
    1bac:	bne	1bb8 <flatcc_json_parser_symbolic_uint64+0x190>
    1bb0:	mov	r7, r5
    1bb4:	b	1be8 <flatcc_json_parser_symbolic_uint64+0x1c0>
    1bb8:	ldr	r1, [r9]
    1bbc:	ldr	r2, [r9, #4]
    1bc0:	ldr	ip, [sp, #64]	; 0x40
    1bc4:	ldr	r3, [sp, #68]	; 0x44
    1bc8:	adds	lr, r1, ip
    1bcc:	adc	r2, r2, r3
    1bd0:	mov	r3, lr
    1bd4:	str	r3, [r9]
    1bd8:	str	r2, [r9, #4]
    1bdc:	ldr	r1, [sp, #60]	; 0x3c
    1be0:	cmp	r1, #0
    1be4:	bne	1aa4 <flatcc_json_parser_symbolic_uint64+0x7c>
    1be8:	mov	r0, r7
    1bec:	ldr	r4, [sp, #24]
    1bf0:	ldr	r5, [sp, #28]
    1bf4:	ldr	r6, [sp, #32]
    1bf8:	ldr	r7, [sp, #36]	; 0x24
    1bfc:	ldr	r8, [sp, #40]	; 0x28
    1c00:	ldr	r9, [sp, #44]	; 0x2c
    1c04:	ldr	sl, [sp, #48]	; 0x30
    1c08:	ldr	fp, [sp, #52]	; 0x34
    1c0c:	ldr	lr, [sp, #16]
    1c10:	add	sp, sp, #80	; 0x50
    1c14:	bx	lr

00001c18 <flatcc_json_parser_symbolic_uint32>:
    1c18:	mov	ip, sp
    1c1c:	sub	sp, sp, #80	; 0x50
    1c20:	str	ip, [sp, #12]
    1c24:	str	lr, [sp, #16]
    1c28:	str	r4, [sp, #24]
    1c2c:	str	r5, [sp, #28]
    1c30:	str	r6, [sp, #32]
    1c34:	str	r7, [sp, #36]	; 0x24
    1c38:	str	r8, [sp, #40]	; 0x28
    1c3c:	str	r9, [sp, #44]	; 0x2c
    1c40:	str	sl, [sp, #48]	; 0x30
    1c44:	str	fp, [sp, #52]	; 0x34
    1c48:	ldr	r9, [ip]
    1c4c:	mov	r7, r3
    1c50:	mov	r5, r2
    1c54:	mov	r6, r0
    1c58:	mov	r2, #0
    1c5c:	str	r2, [sp, #56]	; 0x38
    1c60:	mov	r8, #0
    1c64:	mov	r2, #0
    1c68:	str	r2, [r9]
    1c6c:	mov	r2, r5
    1c70:	mov	r0, r6
    1c74:	bl	5f0 <flatcc_json_parser_constant_start>
    1c78:	mov	r4, r0
    1c7c:	cmp	r4, r5
    1c80:	beq	1db4 <flatcc_json_parser_symbolic_uint32+0x19c>
    1c84:	mov	fp, r7
    1c88:	mov	r1, r4
    1c8c:	mov	sl, r1
    1c90:	ldr	r4, [fp]
    1c94:	add	r3, sp, #60	; 0x3c
    1c98:	add	r2, sp, #72	; 0x48
    1c9c:	add	r0, sp, #64	; 0x40
    1ca0:	str	r0, [sp, #4]
    1ca4:	str	r2, [sp]
    1ca8:	mov	r2, r5
    1cac:	mov	r0, r6
    1cb0:	blx	r4
    1cb4:	mov	r4, r0
    1cb8:	cmp	r4, r5
    1cbc:	beq	1db4 <flatcc_json_parser_symbolic_uint32+0x19c>
    1cc0:	cmp	r4, sl
    1cc4:	bne	1ce0 <flatcc_json_parser_symbolic_uint32+0xc8>
    1cc8:	add	fp, fp, #4
    1ccc:	ldr	r0, [fp]
    1cd0:	cmp	r0, #0
    1cd4:	movne	ip, #1
    1cd8:	moveq	ip, #0
    1cdc:	b	1ce4 <flatcc_json_parser_symbolic_uint32+0xcc>
    1ce0:	mov	ip, #0
    1ce4:	cmp	ip, #0
    1ce8:	bne	1c88 <flatcc_json_parser_symbolic_uint32+0x70>
    1cec:	cmp	sl, r4
    1cf0:	bne	1d10 <flatcc_json_parser_symbolic_uint32+0xf8>
    1cf4:	mov	r3, #23
    1cf8:	mov	r2, r5
    1cfc:	mov	r1, r4
    1d00:	mov	r0, r6
    1d04:	bl	0 <flatcc_json_parser_set_error>
    1d08:	mov	r4, r0
    1d0c:	b	1db4 <flatcc_json_parser_symbolic_uint32+0x19c>
    1d10:	mov	r1, r8
    1d14:	add	r8, r1, #1
    1d18:	cmp	r1, #0
    1d1c:	beq	1d34 <flatcc_json_parser_symbolic_uint32+0x11c>
    1d20:	ldr	r0, [r6, #12]
    1d24:	cmp	r0, #0
    1d28:	movne	r3, #1
    1d2c:	moveq	r3, #0
    1d30:	b	1d38 <flatcc_json_parser_symbolic_uint32+0x120>
    1d34:	mov	r3, #0
    1d38:	cmp	r3, #0
    1d3c:	beq	1d5c <flatcc_json_parser_symbolic_uint32+0x144>
    1d40:	mov	r3, #14
    1d44:	mov	r2, r5
    1d48:	mov	r1, r4
    1d4c:	mov	r0, r6
    1d50:	bl	0 <flatcc_json_parser_set_error>
    1d54:	mov	r4, r0
    1d58:	b	1db4 <flatcc_json_parser_symbolic_uint32+0x19c>
    1d5c:	ldr	r3, [sp, #60]	; 0x3c
    1d60:	ldr	r0, [sp, #72]	; 0x48
    1d64:	ldr	ip, [sp, #76]	; 0x4c
    1d68:	add	r1, sp, #56	; 0x38
    1d6c:	str	r1, [sp, #8]
    1d70:	str	ip, [sp, #4]
    1d74:	str	r0, [sp]
    1d78:	mov	r2, r5
    1d7c:	mov	r1, r4
    1d80:	mov	r0, r6
    1d84:	bl	c34 <flatcc_json_parser_coerce_uint32>
    1d88:	cmp	r5, r0
    1d8c:	bne	1d98 <flatcc_json_parser_symbolic_uint32+0x180>
    1d90:	mov	r4, r5
    1d94:	b	1db4 <flatcc_json_parser_symbolic_uint32+0x19c>
    1d98:	ldr	r3, [r9]
    1d9c:	ldr	ip, [sp, #56]	; 0x38
    1da0:	add	r2, r3, ip
    1da4:	str	r2, [r9]
    1da8:	ldr	ip, [sp, #64]	; 0x40
    1dac:	cmp	ip, #0
    1db0:	bne	1c84 <flatcc_json_parser_symbolic_uint32+0x6c>
    1db4:	mov	r0, r4
    1db8:	ldr	r4, [sp, #24]
    1dbc:	ldr	r5, [sp, #28]
    1dc0:	ldr	r6, [sp, #32]
    1dc4:	ldr	r7, [sp, #36]	; 0x24
    1dc8:	ldr	r8, [sp, #40]	; 0x28
    1dcc:	ldr	r9, [sp, #44]	; 0x2c
    1dd0:	ldr	sl, [sp, #48]	; 0x30
    1dd4:	ldr	fp, [sp, #52]	; 0x34
    1dd8:	ldr	lr, [sp, #16]
    1ddc:	add	sp, sp, #80	; 0x50
    1de0:	bx	lr

00001de4 <flatcc_json_parser_symbolic_uint16>:
    1de4:	mov	ip, sp
    1de8:	sub	sp, sp, #80	; 0x50
    1dec:	str	ip, [sp, #12]
    1df0:	str	lr, [sp, #16]
    1df4:	str	r4, [sp, #24]
    1df8:	str	r5, [sp, #28]
    1dfc:	str	r6, [sp, #32]
    1e00:	str	r7, [sp, #36]	; 0x24
    1e04:	str	r8, [sp, #40]	; 0x28
    1e08:	str	r9, [sp, #44]	; 0x2c
    1e0c:	str	sl, [sp, #48]	; 0x30
    1e10:	str	fp, [sp, #52]	; 0x34
    1e14:	ldr	r9, [ip]
    1e18:	mov	r7, r3
    1e1c:	mov	sl, r2
    1e20:	mov	r8, r0
    1e24:	mov	r0, #0
    1e28:	strh	r0, [sp, #56]	; 0x38
    1e2c:	mov	r6, #0
    1e30:	mov	r2, #0
    1e34:	strh	r2, [r9]
    1e38:	mov	r2, sl
    1e3c:	mov	r0, r8
    1e40:	bl	5f0 <flatcc_json_parser_constant_start>
    1e44:	mov	r4, r0
    1e48:	cmp	r4, sl
    1e4c:	beq	1f88 <flatcc_json_parser_symbolic_uint16+0x1a4>
    1e50:	mov	fp, r7
    1e54:	mov	r5, r4
    1e58:	ldr	ip, [fp]
    1e5c:	add	r3, sp, #60	; 0x3c
    1e60:	add	r0, sp, #72	; 0x48
    1e64:	add	r2, sp, #64	; 0x40
    1e68:	str	r2, [sp, #4]
    1e6c:	str	r0, [sp]
    1e70:	mov	r2, sl
    1e74:	mov	r1, r5
    1e78:	mov	r0, r8
    1e7c:	blx	ip
    1e80:	mov	r4, r0
    1e84:	cmp	r4, sl
    1e88:	beq	1f88 <flatcc_json_parser_symbolic_uint16+0x1a4>
    1e8c:	cmp	r4, r5
    1e90:	bne	1eac <flatcc_json_parser_symbolic_uint16+0xc8>
    1e94:	add	fp, fp, #4
    1e98:	ldr	ip, [fp]
    1e9c:	cmp	ip, #0
    1ea0:	movne	ip, #1
    1ea4:	moveq	ip, #0
    1ea8:	b	1eb0 <flatcc_json_parser_symbolic_uint16+0xcc>
    1eac:	mov	ip, #0
    1eb0:	cmp	ip, #0
    1eb4:	bne	1e54 <flatcc_json_parser_symbolic_uint16+0x70>
    1eb8:	cmp	r5, r4
    1ebc:	bne	1edc <flatcc_json_parser_symbolic_uint16+0xf8>
    1ec0:	mov	r3, #23
    1ec4:	mov	r2, sl
    1ec8:	mov	r1, r4
    1ecc:	mov	r0, r8
    1ed0:	bl	0 <flatcc_json_parser_set_error>
    1ed4:	mov	r4, r0
    1ed8:	b	1f88 <flatcc_json_parser_symbolic_uint16+0x1a4>
    1edc:	mov	r1, r6
    1ee0:	add	r6, r1, #1
    1ee4:	cmp	r1, #0
    1ee8:	beq	1f00 <flatcc_json_parser_symbolic_uint16+0x11c>
    1eec:	ldr	r1, [r8, #12]
    1ef0:	cmp	r1, #0
    1ef4:	movne	r2, #1
    1ef8:	moveq	r2, #0
    1efc:	b	1f04 <flatcc_json_parser_symbolic_uint16+0x120>
    1f00:	mov	r2, #0
    1f04:	cmp	r2, #0
    1f08:	beq	1f28 <flatcc_json_parser_symbolic_uint16+0x144>
    1f0c:	mov	r3, #14
    1f10:	mov	r2, sl
    1f14:	mov	r1, r4
    1f18:	mov	r0, r8
    1f1c:	bl	0 <flatcc_json_parser_set_error>
    1f20:	mov	r4, r0
    1f24:	b	1f88 <flatcc_json_parser_symbolic_uint16+0x1a4>
    1f28:	ldr	r3, [sp, #60]	; 0x3c
    1f2c:	ldr	ip, [sp, #72]	; 0x48
    1f30:	ldr	r0, [sp, #76]	; 0x4c
    1f34:	add	r1, sp, #56	; 0x38
    1f38:	str	r1, [sp, #8]
    1f3c:	str	r0, [sp, #4]
    1f40:	str	ip, [sp]
    1f44:	mov	r2, sl
    1f48:	mov	r1, r4
    1f4c:	mov	r0, r8
    1f50:	bl	cc8 <flatcc_json_parser_coerce_uint16>
    1f54:	cmp	sl, r0
    1f58:	bne	1f64 <flatcc_json_parser_symbolic_uint16+0x180>
    1f5c:	mov	r4, sl
    1f60:	b	1f88 <flatcc_json_parser_symbolic_uint16+0x1a4>
    1f64:	ldrh	r3, [r9]
    1f68:	ldrh	r1, [sp, #56]	; 0x38
    1f6c:	add	ip, r3, r1
    1f70:	bic	r0, ip, #16711680	; 0xff0000
    1f74:	bic	r0, r0, #-16777216	; 0xff000000
    1f78:	strh	r0, [r9]
    1f7c:	ldr	r2, [sp, #64]	; 0x40
    1f80:	cmp	r2, #0
    1f84:	bne	1e50 <flatcc_json_parser_symbolic_uint16+0x6c>
    1f88:	mov	r0, r4
    1f8c:	ldr	r4, [sp, #24]
    1f90:	ldr	r5, [sp, #28]
    1f94:	ldr	r6, [sp, #32]
    1f98:	ldr	r7, [sp, #36]	; 0x24
    1f9c:	ldr	r8, [sp, #40]	; 0x28
    1fa0:	ldr	r9, [sp, #44]	; 0x2c
    1fa4:	ldr	sl, [sp, #48]	; 0x30
    1fa8:	ldr	fp, [sp, #52]	; 0x34
    1fac:	ldr	lr, [sp, #16]
    1fb0:	add	sp, sp, #80	; 0x50
    1fb4:	bx	lr

00001fb8 <flatcc_json_parser_symbolic_uint8>:
    1fb8:	mov	ip, sp
    1fbc:	sub	sp, sp, #80	; 0x50
    1fc0:	str	ip, [sp, #12]
    1fc4:	str	lr, [sp, #16]
    1fc8:	str	r4, [sp, #24]
    1fcc:	str	r5, [sp, #28]
    1fd0:	str	r6, [sp, #32]
    1fd4:	str	r7, [sp, #36]	; 0x24
    1fd8:	str	r8, [sp, #40]	; 0x28
    1fdc:	str	r9, [sp, #44]	; 0x2c
    1fe0:	str	sl, [sp, #48]	; 0x30
    1fe4:	str	fp, [sp, #52]	; 0x34
    1fe8:	ldr	r9, [ip]
    1fec:	mov	r7, r3
    1ff0:	mov	sl, r2
    1ff4:	mov	r8, r0
    1ff8:	mov	r0, #0
    1ffc:	strb	r0, [sp, #56]	; 0x38
    2000:	mov	r6, #0
    2004:	mov	r2, #0
    2008:	strb	r2, [r9]
    200c:	mov	r2, sl
    2010:	mov	r0, r8
    2014:	bl	5f0 <flatcc_json_parser_constant_start>
    2018:	mov	r4, r0
    201c:	cmp	r4, sl
    2020:	beq	2158 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2024:	mov	fp, r7
    2028:	mov	r5, r4
    202c:	ldr	ip, [fp]
    2030:	add	r3, sp, #60	; 0x3c
    2034:	add	r0, sp, #72	; 0x48
    2038:	add	r2, sp, #64	; 0x40
    203c:	str	r2, [sp, #4]
    2040:	str	r0, [sp]
    2044:	mov	r2, sl
    2048:	mov	r1, r5
    204c:	mov	r0, r8
    2050:	blx	ip
    2054:	mov	r4, r0
    2058:	cmp	r4, sl
    205c:	beq	2158 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2060:	cmp	r4, r5
    2064:	bne	2080 <flatcc_json_parser_symbolic_uint8+0xc8>
    2068:	add	fp, fp, #4
    206c:	ldr	ip, [fp]
    2070:	cmp	ip, #0
    2074:	movne	ip, #1
    2078:	moveq	ip, #0
    207c:	b	2084 <flatcc_json_parser_symbolic_uint8+0xcc>
    2080:	mov	ip, #0
    2084:	cmp	ip, #0
    2088:	bne	2028 <flatcc_json_parser_symbolic_uint8+0x70>
    208c:	cmp	r5, r4
    2090:	bne	20b0 <flatcc_json_parser_symbolic_uint8+0xf8>
    2094:	mov	r3, #23
    2098:	mov	r2, sl
    209c:	mov	r1, r4
    20a0:	mov	r0, r8
    20a4:	bl	0 <flatcc_json_parser_set_error>
    20a8:	mov	r4, r0
    20ac:	b	2158 <flatcc_json_parser_symbolic_uint8+0x1a0>
    20b0:	mov	r1, r6
    20b4:	add	r6, r1, #1
    20b8:	cmp	r1, #0
    20bc:	beq	20d4 <flatcc_json_parser_symbolic_uint8+0x11c>
    20c0:	ldr	r1, [r8, #12]
    20c4:	cmp	r1, #0
    20c8:	movne	r2, #1
    20cc:	moveq	r2, #0
    20d0:	b	20d8 <flatcc_json_parser_symbolic_uint8+0x120>
    20d4:	mov	r2, #0
    20d8:	cmp	r2, #0
    20dc:	beq	20fc <flatcc_json_parser_symbolic_uint8+0x144>
    20e0:	mov	r3, #14
    20e4:	mov	r2, sl
    20e8:	mov	r1, r4
    20ec:	mov	r0, r8
    20f0:	bl	0 <flatcc_json_parser_set_error>
    20f4:	mov	r4, r0
    20f8:	b	2158 <flatcc_json_parser_symbolic_uint8+0x1a0>
    20fc:	ldr	r3, [sp, #60]	; 0x3c
    2100:	ldr	ip, [sp, #72]	; 0x48
    2104:	ldr	r0, [sp, #76]	; 0x4c
    2108:	add	r1, sp, #56	; 0x38
    210c:	str	r1, [sp, #8]
    2110:	str	r0, [sp, #4]
    2114:	str	ip, [sp]
    2118:	mov	r2, sl
    211c:	mov	r1, r4
    2120:	mov	r0, r8
    2124:	bl	d64 <flatcc_json_parser_coerce_uint8>
    2128:	cmp	sl, r0
    212c:	bne	2138 <flatcc_json_parser_symbolic_uint8+0x180>
    2130:	mov	r4, sl
    2134:	b	2158 <flatcc_json_parser_symbolic_uint8+0x1a0>
    2138:	ldrb	r3, [r9]
    213c:	ldrb	r1, [sp, #56]	; 0x38
    2140:	add	ip, r3, r1
    2144:	and	r0, ip, #255	; 0xff
    2148:	strb	r0, [r9]
    214c:	ldr	r2, [sp, #64]	; 0x40
    2150:	cmp	r2, #0
    2154:	bne	2024 <flatcc_json_parser_symbolic_uint8+0x6c>
    2158:	mov	r0, r4
    215c:	ldr	r4, [sp, #24]
    2160:	ldr	r5, [sp, #28]
    2164:	ldr	r6, [sp, #32]
    2168:	ldr	r7, [sp, #36]	; 0x24
    216c:	ldr	r8, [sp, #40]	; 0x28
    2170:	ldr	r9, [sp, #44]	; 0x2c
    2174:	ldr	sl, [sp, #48]	; 0x30
    2178:	ldr	fp, [sp, #52]	; 0x34
    217c:	ldr	lr, [sp, #16]
    2180:	add	sp, sp, #80	; 0x50
    2184:	bx	lr

00002188 <flatcc_json_parser_symbolic_int64>:
    2188:	mov	ip, sp
    218c:	sub	sp, sp, #80	; 0x50
    2190:	str	ip, [sp, #12]
    2194:	str	lr, [sp, #16]
    2198:	str	r4, [sp, #24]
    219c:	str	r5, [sp, #28]
    21a0:	str	r6, [sp, #32]
    21a4:	str	r7, [sp, #36]	; 0x24
    21a8:	str	r8, [sp, #40]	; 0x28
    21ac:	str	r9, [sp, #44]	; 0x2c
    21b0:	str	sl, [sp, #48]	; 0x30
    21b4:	str	fp, [sp, #52]	; 0x34
    21b8:	ldr	r9, [ip]
    21bc:	mov	r4, r3
    21c0:	mov	r5, r2
    21c4:	mov	r6, r0
    21c8:	mov	r0, #0
    21cc:	mov	ip, #0
    21d0:	str	ip, [sp, #64]	; 0x40
    21d4:	str	r0, [sp, #68]	; 0x44
    21d8:	mov	r8, #0
    21dc:	mov	r2, #0
    21e0:	mov	r0, #0
    21e4:	str	r0, [r9]
    21e8:	str	r2, [r9, #4]
    21ec:	mov	r2, r5
    21f0:	mov	r0, r6
    21f4:	bl	5f0 <flatcc_json_parser_constant_start>
    21f8:	mov	r7, r0
    21fc:	cmp	r7, r5
    2200:	beq	2348 <flatcc_json_parser_symbolic_int64+0x1c0>
    2204:	mov	fp, r4
    2208:	mov	r1, r7
    220c:	mov	sl, r1
    2210:	ldr	r7, [fp]
    2214:	add	r3, sp, #56	; 0x38
    2218:	add	r0, sp, #72	; 0x48
    221c:	add	r2, sp, #60	; 0x3c
    2220:	str	r2, [sp, #4]
    2224:	str	r0, [sp]
    2228:	mov	r2, r5
    222c:	mov	r0, r6
    2230:	blx	r7
    2234:	mov	r7, r0
    2238:	cmp	r7, r5
    223c:	beq	2348 <flatcc_json_parser_symbolic_int64+0x1c0>
    2240:	cmp	r7, sl
    2244:	bne	2260 <flatcc_json_parser_symbolic_int64+0xd8>
    2248:	add	fp, fp, #4
    224c:	ldr	r3, [fp]
    2250:	cmp	r3, #0
    2254:	movne	r0, #1
    2258:	moveq	r0, #0
    225c:	b	2264 <flatcc_json_parser_symbolic_int64+0xdc>
    2260:	mov	r0, #0
    2264:	cmp	r0, #0
    2268:	bne	2208 <flatcc_json_parser_symbolic_int64+0x80>
    226c:	cmp	sl, r7
    2270:	bne	2290 <flatcc_json_parser_symbolic_int64+0x108>
    2274:	mov	r3, #23
    2278:	mov	r2, r5
    227c:	mov	r1, r7
    2280:	mov	r0, r6
    2284:	bl	0 <flatcc_json_parser_set_error>
    2288:	mov	r7, r0
    228c:	b	2348 <flatcc_json_parser_symbolic_int64+0x1c0>
    2290:	mov	r3, r8
    2294:	add	r8, r3, #1
    2298:	cmp	r3, #0
    229c:	beq	22b4 <flatcc_json_parser_symbolic_int64+0x12c>
    22a0:	ldr	r1, [r6, #12]
    22a4:	cmp	r1, #0
    22a8:	movne	r2, #1
    22ac:	moveq	r2, #0
    22b0:	b	22b8 <flatcc_json_parser_symbolic_int64+0x130>
    22b4:	mov	r2, #0
    22b8:	cmp	r2, #0
    22bc:	beq	22dc <flatcc_json_parser_symbolic_int64+0x154>
    22c0:	mov	r3, #14
    22c4:	mov	r2, r5
    22c8:	mov	r1, r7
    22cc:	mov	r0, r6
    22d0:	bl	0 <flatcc_json_parser_set_error>
    22d4:	mov	r7, r0
    22d8:	b	2348 <flatcc_json_parser_symbolic_int64+0x1c0>
    22dc:	ldr	r3, [sp, #56]	; 0x38
    22e0:	ldr	r1, [sp, #72]	; 0x48
    22e4:	ldr	r0, [sp, #76]	; 0x4c
    22e8:	add	r2, sp, #64	; 0x40
    22ec:	str	r2, [sp, #8]
    22f0:	str	r0, [sp, #4]
    22f4:	str	r1, [sp]
    22f8:	mov	r2, r5
    22fc:	mov	r1, r7
    2300:	mov	r0, r6
    2304:	bl	dfc <flatcc_json_parser_coerce_int64>
    2308:	cmp	r5, r0
    230c:	bne	2318 <flatcc_json_parser_symbolic_int64+0x190>
    2310:	mov	r7, r5
    2314:	b	2348 <flatcc_json_parser_symbolic_int64+0x1c0>
    2318:	ldr	r1, [r9]
    231c:	ldr	r2, [r9, #4]
    2320:	ldr	ip, [sp, #64]	; 0x40
    2324:	ldr	r3, [sp, #68]	; 0x44
    2328:	adds	lr, r1, ip
    232c:	adc	r2, r2, r3
    2330:	mov	r3, lr
    2334:	str	r3, [r9]
    2338:	str	r2, [r9, #4]
    233c:	ldr	r1, [sp, #60]	; 0x3c
    2340:	cmp	r1, #0
    2344:	bne	2204 <flatcc_json_parser_symbolic_int64+0x7c>
    2348:	mov	r0, r7
    234c:	ldr	r4, [sp, #24]
    2350:	ldr	r5, [sp, #28]
    2354:	ldr	r6, [sp, #32]
    2358:	ldr	r7, [sp, #36]	; 0x24
    235c:	ldr	r8, [sp, #40]	; 0x28
    2360:	ldr	r9, [sp, #44]	; 0x2c
    2364:	ldr	sl, [sp, #48]	; 0x30
    2368:	ldr	fp, [sp, #52]	; 0x34
    236c:	ldr	lr, [sp, #16]
    2370:	add	sp, sp, #80	; 0x50
    2374:	bx	lr

00002378 <flatcc_json_parser_symbolic_int32>:
    2378:	mov	ip, sp
    237c:	sub	sp, sp, #80	; 0x50
    2380:	str	ip, [sp, #12]
    2384:	str	lr, [sp, #16]
    2388:	str	r4, [sp, #24]
    238c:	str	r5, [sp, #28]
    2390:	str	r6, [sp, #32]
    2394:	str	r7, [sp, #36]	; 0x24
    2398:	str	r8, [sp, #40]	; 0x28
    239c:	str	r9, [sp, #44]	; 0x2c
    23a0:	str	sl, [sp, #48]	; 0x30
    23a4:	str	fp, [sp, #52]	; 0x34
    23a8:	ldr	r9, [ip]
    23ac:	mov	r7, r3
    23b0:	mov	r5, r2
    23b4:	mov	r6, r0
    23b8:	mov	r2, #0
    23bc:	str	r2, [sp, #56]	; 0x38
    23c0:	mov	r8, #0
    23c4:	mov	r2, #0
    23c8:	str	r2, [r9]
    23cc:	mov	r2, r5
    23d0:	mov	r0, r6
    23d4:	bl	5f0 <flatcc_json_parser_constant_start>
    23d8:	mov	r4, r0
    23dc:	cmp	r4, r5
    23e0:	beq	2514 <flatcc_json_parser_symbolic_int32+0x19c>
    23e4:	mov	fp, r7
    23e8:	mov	r1, r4
    23ec:	mov	sl, r1
    23f0:	ldr	r4, [fp]
    23f4:	add	r3, sp, #60	; 0x3c
    23f8:	add	r2, sp, #72	; 0x48
    23fc:	add	r0, sp, #64	; 0x40
    2400:	str	r0, [sp, #4]
    2404:	str	r2, [sp]
    2408:	mov	r2, r5
    240c:	mov	r0, r6
    2410:	blx	r4
    2414:	mov	r4, r0
    2418:	cmp	r4, r5
    241c:	beq	2514 <flatcc_json_parser_symbolic_int32+0x19c>
    2420:	cmp	r4, sl
    2424:	bne	2440 <flatcc_json_parser_symbolic_int32+0xc8>
    2428:	add	fp, fp, #4
    242c:	ldr	r0, [fp]
    2430:	cmp	r0, #0
    2434:	movne	ip, #1
    2438:	moveq	ip, #0
    243c:	b	2444 <flatcc_json_parser_symbolic_int32+0xcc>
    2440:	mov	ip, #0
    2444:	cmp	ip, #0
    2448:	bne	23e8 <flatcc_json_parser_symbolic_int32+0x70>
    244c:	cmp	sl, r4
    2450:	bne	2470 <flatcc_json_parser_symbolic_int32+0xf8>
    2454:	mov	r3, #23
    2458:	mov	r2, r5
    245c:	mov	r1, r4
    2460:	mov	r0, r6
    2464:	bl	0 <flatcc_json_parser_set_error>
    2468:	mov	r4, r0
    246c:	b	2514 <flatcc_json_parser_symbolic_int32+0x19c>
    2470:	mov	r1, r8
    2474:	add	r8, r1, #1
    2478:	cmp	r1, #0
    247c:	beq	2494 <flatcc_json_parser_symbolic_int32+0x11c>
    2480:	ldr	r0, [r6, #12]
    2484:	cmp	r0, #0
    2488:	movne	r3, #1
    248c:	moveq	r3, #0
    2490:	b	2498 <flatcc_json_parser_symbolic_int32+0x120>
    2494:	mov	r3, #0
    2498:	cmp	r3, #0
    249c:	beq	24bc <flatcc_json_parser_symbolic_int32+0x144>
    24a0:	mov	r3, #14
    24a4:	mov	r2, r5
    24a8:	mov	r1, r4
    24ac:	mov	r0, r6
    24b0:	bl	0 <flatcc_json_parser_set_error>
    24b4:	mov	r4, r0
    24b8:	b	2514 <flatcc_json_parser_symbolic_int32+0x19c>
    24bc:	ldr	r3, [sp, #60]	; 0x3c
    24c0:	ldr	r0, [sp, #72]	; 0x48
    24c4:	ldr	ip, [sp, #76]	; 0x4c
    24c8:	add	r1, sp, #56	; 0x38
    24cc:	str	r1, [sp, #8]
    24d0:	str	ip, [sp, #4]
    24d4:	str	r0, [sp]
    24d8:	mov	r2, r5
    24dc:	mov	r1, r4
    24e0:	mov	r0, r6
    24e4:	bl	ee8 <flatcc_json_parser_coerce_int32>
    24e8:	cmp	r5, r0
    24ec:	bne	24f8 <flatcc_json_parser_symbolic_int32+0x180>
    24f0:	mov	r4, r5
    24f4:	b	2514 <flatcc_json_parser_symbolic_int32+0x19c>
    24f8:	ldr	r3, [r9]
    24fc:	ldr	ip, [sp, #56]	; 0x38
    2500:	add	r2, r3, ip
    2504:	str	r2, [r9]
    2508:	ldr	ip, [sp, #64]	; 0x40
    250c:	cmp	ip, #0
    2510:	bne	23e4 <flatcc_json_parser_symbolic_int32+0x6c>
    2514:	mov	r0, r4
    2518:	ldr	r4, [sp, #24]
    251c:	ldr	r5, [sp, #28]
    2520:	ldr	r6, [sp, #32]
    2524:	ldr	r7, [sp, #36]	; 0x24
    2528:	ldr	r8, [sp, #40]	; 0x28
    252c:	ldr	r9, [sp, #44]	; 0x2c
    2530:	ldr	sl, [sp, #48]	; 0x30
    2534:	ldr	fp, [sp, #52]	; 0x34
    2538:	ldr	lr, [sp, #16]
    253c:	add	sp, sp, #80	; 0x50
    2540:	bx	lr

00002544 <flatcc_json_parser_symbolic_int16>:
    2544:	mov	ip, sp
    2548:	sub	sp, sp, #80	; 0x50
    254c:	str	ip, [sp, #12]
    2550:	str	lr, [sp, #16]
    2554:	str	r4, [sp, #24]
    2558:	str	r5, [sp, #28]
    255c:	str	r6, [sp, #32]
    2560:	str	r7, [sp, #36]	; 0x24
    2564:	str	r8, [sp, #40]	; 0x28
    2568:	str	r9, [sp, #44]	; 0x2c
    256c:	str	sl, [sp, #48]	; 0x30
    2570:	str	fp, [sp, #52]	; 0x34
    2574:	ldr	r9, [ip]
    2578:	mov	r7, r3
    257c:	mov	sl, r2
    2580:	mov	r8, r0
    2584:	mov	r0, #0
    2588:	strh	r0, [sp, #56]	; 0x38
    258c:	mov	r6, #0
    2590:	mov	r2, #0
    2594:	strh	r2, [r9]
    2598:	mov	r2, sl
    259c:	mov	r0, r8
    25a0:	bl	5f0 <flatcc_json_parser_constant_start>
    25a4:	mov	r4, r0
    25a8:	cmp	r4, sl
    25ac:	beq	26e4 <flatcc_json_parser_symbolic_int16+0x1a0>
    25b0:	mov	fp, r7
    25b4:	mov	r5, r4
    25b8:	ldr	ip, [fp]
    25bc:	add	r3, sp, #60	; 0x3c
    25c0:	add	r0, sp, #72	; 0x48
    25c4:	add	r2, sp, #64	; 0x40
    25c8:	str	r2, [sp, #4]
    25cc:	str	r0, [sp]
    25d0:	mov	r2, sl
    25d4:	mov	r1, r5
    25d8:	mov	r0, r8
    25dc:	blx	ip
    25e0:	mov	r4, r0
    25e4:	cmp	r4, sl
    25e8:	beq	26e4 <flatcc_json_parser_symbolic_int16+0x1a0>
    25ec:	cmp	r4, r5
    25f0:	bne	260c <flatcc_json_parser_symbolic_int16+0xc8>
    25f4:	add	fp, fp, #4
    25f8:	ldr	ip, [fp]
    25fc:	cmp	ip, #0
    2600:	movne	ip, #1
    2604:	moveq	ip, #0
    2608:	b	2610 <flatcc_json_parser_symbolic_int16+0xcc>
    260c:	mov	ip, #0
    2610:	cmp	ip, #0
    2614:	bne	25b4 <flatcc_json_parser_symbolic_int16+0x70>
    2618:	cmp	r5, r4
    261c:	bne	263c <flatcc_json_parser_symbolic_int16+0xf8>
    2620:	mov	r3, #23
    2624:	mov	r2, sl
    2628:	mov	r1, r4
    262c:	mov	r0, r8
    2630:	bl	0 <flatcc_json_parser_set_error>
    2634:	mov	r4, r0
    2638:	b	26e4 <flatcc_json_parser_symbolic_int16+0x1a0>
    263c:	mov	r1, r6
    2640:	add	r6, r1, #1
    2644:	cmp	r1, #0
    2648:	beq	2660 <flatcc_json_parser_symbolic_int16+0x11c>
    264c:	ldr	r1, [r8, #12]
    2650:	cmp	r1, #0
    2654:	movne	r2, #1
    2658:	moveq	r2, #0
    265c:	b	2664 <flatcc_json_parser_symbolic_int16+0x120>
    2660:	mov	r2, #0
    2664:	cmp	r2, #0
    2668:	beq	2688 <flatcc_json_parser_symbolic_int16+0x144>
    266c:	mov	r3, #14
    2670:	mov	r2, sl
    2674:	mov	r1, r4
    2678:	mov	r0, r8
    267c:	bl	0 <flatcc_json_parser_set_error>
    2680:	mov	r4, r0
    2684:	b	26e4 <flatcc_json_parser_symbolic_int16+0x1a0>
    2688:	ldr	r3, [sp, #60]	; 0x3c
    268c:	ldr	ip, [sp, #72]	; 0x48
    2690:	ldr	r0, [sp, #76]	; 0x4c
    2694:	add	r1, sp, #56	; 0x38
    2698:	str	r1, [sp, #8]
    269c:	str	r0, [sp, #4]
    26a0:	str	ip, [sp]
    26a4:	mov	r2, sl
    26a8:	mov	r1, r4
    26ac:	mov	r0, r8
    26b0:	bl	fc8 <flatcc_json_parser_coerce_int16>
    26b4:	cmp	sl, r0
    26b8:	bne	26c4 <flatcc_json_parser_symbolic_int16+0x180>
    26bc:	mov	r4, sl
    26c0:	b	26e4 <flatcc_json_parser_symbolic_int16+0x1a0>
    26c4:	ldrsh	r3, [r9]
    26c8:	ldrsh	r1, [sp, #56]	; 0x38
    26cc:	add	ip, r3, r1
    26d0:	sbfx	r0, ip, #0, #16
    26d4:	strh	r0, [r9]
    26d8:	ldr	r2, [sp, #64]	; 0x40
    26dc:	cmp	r2, #0
    26e0:	bne	25b0 <flatcc_json_parser_symbolic_int16+0x6c>
    26e4:	mov	r0, r4
    26e8:	ldr	r4, [sp, #24]
    26ec:	ldr	r5, [sp, #28]
    26f0:	ldr	r6, [sp, #32]
    26f4:	ldr	r7, [sp, #36]	; 0x24
    26f8:	ldr	r8, [sp, #40]	; 0x28
    26fc:	ldr	r9, [sp, #44]	; 0x2c
    2700:	ldr	sl, [sp, #48]	; 0x30
    2704:	ldr	fp, [sp, #52]	; 0x34
    2708:	ldr	lr, [sp, #16]
    270c:	add	sp, sp, #80	; 0x50
    2710:	bx	lr

00002714 <flatcc_json_parser_symbolic_int8>:
    2714:	mov	ip, sp
    2718:	sub	sp, sp, #80	; 0x50
    271c:	str	ip, [sp, #12]
    2720:	str	lr, [sp, #16]
    2724:	str	r4, [sp, #24]
    2728:	str	r5, [sp, #28]
    272c:	str	r6, [sp, #32]
    2730:	str	r7, [sp, #36]	; 0x24
    2734:	str	r8, [sp, #40]	; 0x28
    2738:	str	r9, [sp, #44]	; 0x2c
    273c:	str	sl, [sp, #48]	; 0x30
    2740:	str	fp, [sp, #52]	; 0x34
    2744:	ldr	r9, [ip]
    2748:	mov	r7, r3
    274c:	mov	sl, r2
    2750:	mov	r8, r0
    2754:	mov	r0, #0
    2758:	strb	r0, [sp, #56]	; 0x38
    275c:	mov	r6, #0
    2760:	mov	r2, #0
    2764:	strb	r2, [r9]
    2768:	mov	r2, sl
    276c:	mov	r0, r8
    2770:	bl	5f0 <flatcc_json_parser_constant_start>
    2774:	mov	r4, r0
    2778:	cmp	r4, sl
    277c:	beq	28b4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2780:	mov	fp, r7
    2784:	mov	r5, r4
    2788:	ldr	ip, [fp]
    278c:	add	r3, sp, #60	; 0x3c
    2790:	add	r0, sp, #72	; 0x48
    2794:	add	r2, sp, #64	; 0x40
    2798:	str	r2, [sp, #4]
    279c:	str	r0, [sp]
    27a0:	mov	r2, sl
    27a4:	mov	r1, r5
    27a8:	mov	r0, r8
    27ac:	blx	ip
    27b0:	mov	r4, r0
    27b4:	cmp	r4, sl
    27b8:	beq	28b4 <flatcc_json_parser_symbolic_int8+0x1a0>
    27bc:	cmp	r4, r5
    27c0:	bne	27dc <flatcc_json_parser_symbolic_int8+0xc8>
    27c4:	add	fp, fp, #4
    27c8:	ldr	ip, [fp]
    27cc:	cmp	ip, #0
    27d0:	movne	ip, #1
    27d4:	moveq	ip, #0
    27d8:	b	27e0 <flatcc_json_parser_symbolic_int8+0xcc>
    27dc:	mov	ip, #0
    27e0:	cmp	ip, #0
    27e4:	bne	2784 <flatcc_json_parser_symbolic_int8+0x70>
    27e8:	cmp	r5, r4
    27ec:	bne	280c <flatcc_json_parser_symbolic_int8+0xf8>
    27f0:	mov	r3, #23
    27f4:	mov	r2, sl
    27f8:	mov	r1, r4
    27fc:	mov	r0, r8
    2800:	bl	0 <flatcc_json_parser_set_error>
    2804:	mov	r4, r0
    2808:	b	28b4 <flatcc_json_parser_symbolic_int8+0x1a0>
    280c:	mov	r1, r6
    2810:	add	r6, r1, #1
    2814:	cmp	r1, #0
    2818:	beq	2830 <flatcc_json_parser_symbolic_int8+0x11c>
    281c:	ldr	r1, [r8, #12]
    2820:	cmp	r1, #0
    2824:	movne	r2, #1
    2828:	moveq	r2, #0
    282c:	b	2834 <flatcc_json_parser_symbolic_int8+0x120>
    2830:	mov	r2, #0
    2834:	cmp	r2, #0
    2838:	beq	2858 <flatcc_json_parser_symbolic_int8+0x144>
    283c:	mov	r3, #14
    2840:	mov	r2, sl
    2844:	mov	r1, r4
    2848:	mov	r0, r8
    284c:	bl	0 <flatcc_json_parser_set_error>
    2850:	mov	r4, r0
    2854:	b	28b4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2858:	ldr	r3, [sp, #60]	; 0x3c
    285c:	ldr	ip, [sp, #72]	; 0x48
    2860:	ldr	r0, [sp, #76]	; 0x4c
    2864:	add	r1, sp, #56	; 0x38
    2868:	str	r1, [sp, #8]
    286c:	str	r0, [sp, #4]
    2870:	str	ip, [sp]
    2874:	mov	r2, sl
    2878:	mov	r1, r4
    287c:	mov	r0, r8
    2880:	bl	10b0 <flatcc_json_parser_coerce_int8>
    2884:	cmp	sl, r0
    2888:	bne	2894 <flatcc_json_parser_symbolic_int8+0x180>
    288c:	mov	r4, sl
    2890:	b	28b4 <flatcc_json_parser_symbolic_int8+0x1a0>
    2894:	ldrsb	r3, [r9]
    2898:	ldrsb	r1, [sp, #56]	; 0x38
    289c:	add	ip, r3, r1
    28a0:	sbfx	r0, ip, #0, #8
    28a4:	strb	r0, [r9]
    28a8:	ldr	r2, [sp, #64]	; 0x40
    28ac:	cmp	r2, #0
    28b0:	bne	2780 <flatcc_json_parser_symbolic_int8+0x6c>
    28b4:	mov	r0, r4
    28b8:	ldr	r4, [sp, #24]
    28bc:	ldr	r5, [sp, #28]
    28c0:	ldr	r6, [sp, #32]
    28c4:	ldr	r7, [sp, #36]	; 0x24
    28c8:	ldr	r8, [sp, #40]	; 0x28
    28cc:	ldr	r9, [sp, #44]	; 0x2c
    28d0:	ldr	sl, [sp, #48]	; 0x30
    28d4:	ldr	fp, [sp, #52]	; 0x34
    28d8:	ldr	lr, [sp, #16]
    28dc:	add	sp, sp, #80	; 0x50
    28e0:	bx	lr

000028e4 <flatcc_json_parser_symbolic_bool>:
    28e4:	mov	ip, sp
    28e8:	sub	sp, sp, #80	; 0x50
    28ec:	str	ip, [sp, #12]
    28f0:	str	lr, [sp, #16]
    28f4:	str	r4, [sp, #24]
    28f8:	str	r5, [sp, #28]
    28fc:	str	r6, [sp, #32]
    2900:	str	r7, [sp, #36]	; 0x24
    2904:	str	r8, [sp, #40]	; 0x28
    2908:	str	r9, [sp, #44]	; 0x2c
    290c:	str	sl, [sp, #48]	; 0x30
    2910:	str	fp, [sp, #52]	; 0x34
    2914:	ldr	r9, [ip]
    2918:	mov	r7, r3
    291c:	mov	sl, r2
    2920:	mov	r8, r0
    2924:	mov	r0, #0
    2928:	strb	r0, [sp, #56]	; 0x38
    292c:	mov	r6, #0
    2930:	mov	r2, #0
    2934:	strb	r2, [r9]
    2938:	mov	r2, sl
    293c:	mov	r0, r8
    2940:	bl	5f0 <flatcc_json_parser_constant_start>
    2944:	mov	r4, r0
    2948:	cmp	r4, sl
    294c:	beq	2a84 <flatcc_json_parser_symbolic_bool+0x1a0>
    2950:	mov	fp, r7
    2954:	mov	r5, r4
    2958:	ldr	ip, [fp]
    295c:	add	r3, sp, #60	; 0x3c
    2960:	add	r0, sp, #72	; 0x48
    2964:	add	r2, sp, #64	; 0x40
    2968:	str	r2, [sp, #4]
    296c:	str	r0, [sp]
    2970:	mov	r2, sl
    2974:	mov	r1, r5
    2978:	mov	r0, r8
    297c:	blx	ip
    2980:	mov	r4, r0
    2984:	cmp	r4, sl
    2988:	beq	2a84 <flatcc_json_parser_symbolic_bool+0x1a0>
    298c:	cmp	r4, r5
    2990:	bne	29ac <flatcc_json_parser_symbolic_bool+0xc8>
    2994:	add	fp, fp, #4
    2998:	ldr	ip, [fp]
    299c:	cmp	ip, #0
    29a0:	movne	ip, #1
    29a4:	moveq	ip, #0
    29a8:	b	29b0 <flatcc_json_parser_symbolic_bool+0xcc>
    29ac:	mov	ip, #0
    29b0:	cmp	ip, #0
    29b4:	bne	2954 <flatcc_json_parser_symbolic_bool+0x70>
    29b8:	cmp	r5, r4
    29bc:	bne	29dc <flatcc_json_parser_symbolic_bool+0xf8>
    29c0:	mov	r3, #23
    29c4:	mov	r2, sl
    29c8:	mov	r1, r4
    29cc:	mov	r0, r8
    29d0:	bl	0 <flatcc_json_parser_set_error>
    29d4:	mov	r4, r0
    29d8:	b	2a84 <flatcc_json_parser_symbolic_bool+0x1a0>
    29dc:	mov	r1, r6
    29e0:	add	r6, r1, #1
    29e4:	cmp	r1, #0
    29e8:	beq	2a00 <flatcc_json_parser_symbolic_bool+0x11c>
    29ec:	ldr	r1, [r8, #12]
    29f0:	cmp	r1, #0
    29f4:	movne	r2, #1
    29f8:	moveq	r2, #0
    29fc:	b	2a04 <flatcc_json_parser_symbolic_bool+0x120>
    2a00:	mov	r2, #0
    2a04:	cmp	r2, #0
    2a08:	beq	2a28 <flatcc_json_parser_symbolic_bool+0x144>
    2a0c:	mov	r3, #14
    2a10:	mov	r2, sl
    2a14:	mov	r1, r4
    2a18:	mov	r0, r8
    2a1c:	bl	0 <flatcc_json_parser_set_error>
    2a20:	mov	r4, r0
    2a24:	b	2a84 <flatcc_json_parser_symbolic_bool+0x1a0>
    2a28:	ldr	r3, [sp, #60]	; 0x3c
    2a2c:	ldr	ip, [sp, #72]	; 0x48
    2a30:	ldr	r0, [sp, #76]	; 0x4c
    2a34:	add	r1, sp, #56	; 0x38
    2a38:	str	r1, [sp, #8]
    2a3c:	str	r0, [sp, #4]
    2a40:	str	ip, [sp]
    2a44:	mov	r2, sl
    2a48:	mov	r1, r4
    2a4c:	mov	r0, r8
    2a50:	bl	bb8 <flatcc_json_parser_coerce_bool>
    2a54:	cmp	sl, r0
    2a58:	bne	2a64 <flatcc_json_parser_symbolic_bool+0x180>
    2a5c:	mov	r4, sl
    2a60:	b	2a84 <flatcc_json_parser_symbolic_bool+0x1a0>
    2a64:	ldrb	r3, [r9]
    2a68:	ldrb	r1, [sp, #56]	; 0x38
    2a6c:	add	ip, r3, r1
    2a70:	and	r0, ip, #255	; 0xff
    2a74:	strb	r0, [r9]
    2a78:	ldr	r2, [sp, #64]	; 0x40
    2a7c:	cmp	r2, #0
    2a80:	bne	2950 <flatcc_json_parser_symbolic_bool+0x6c>
    2a84:	mov	r0, r4
    2a88:	ldr	r4, [sp, #24]
    2a8c:	ldr	r5, [sp, #28]
    2a90:	ldr	r6, [sp, #32]
    2a94:	ldr	r7, [sp, #36]	; 0x24
    2a98:	ldr	r8, [sp, #40]	; 0x28
    2a9c:	ldr	r9, [sp, #44]	; 0x2c
    2aa0:	ldr	sl, [sp, #48]	; 0x30
    2aa4:	ldr	fp, [sp, #52]	; 0x34
    2aa8:	ldr	lr, [sp, #16]
    2aac:	add	sp, sp, #80	; 0x50
    2ab0:	bx	lr

00002ab4 <flatcc_json_parser_symbolic_float>:
    2ab4:	mov	ip, sp
    2ab8:	sub	sp, sp, #80	; 0x50
    2abc:	str	ip, [sp, #12]
    2ac0:	str	lr, [sp, #16]
    2ac4:	str	r4, [sp, #24]
    2ac8:	str	r5, [sp, #28]
    2acc:	str	r6, [sp, #32]
    2ad0:	str	r7, [sp, #36]	; 0x24
    2ad4:	str	r8, [sp, #40]	; 0x28
    2ad8:	str	r9, [sp, #44]	; 0x2c
    2adc:	str	sl, [sp, #48]	; 0x30
    2ae0:	str	fp, [sp, #52]	; 0x34
    2ae4:	ldr	r9, [ip]
    2ae8:	mov	r7, r3
    2aec:	mov	r5, r2
    2af0:	mov	r6, r0
    2af4:	vldr	s0, [pc, #388]	; 2c80 <flatcc_json_parser_symbolic_float+0x1cc>
    2af8:	vstr	s0, [sp, #56]	; 0x38
    2afc:	mov	r8, #0
    2b00:	vldr	s4, [pc, #376]	; 2c80 <flatcc_json_parser_symbolic_float+0x1cc>
    2b04:	vstr	s4, [r9]
    2b08:	mov	r2, r5
    2b0c:	mov	r0, r6
    2b10:	bl	5f0 <flatcc_json_parser_constant_start>
    2b14:	mov	r4, r0
    2b18:	cmp	r4, r5
    2b1c:	beq	2c50 <flatcc_json_parser_symbolic_float+0x19c>
    2b20:	mov	fp, r7
    2b24:	mov	r1, r4
    2b28:	mov	sl, r1
    2b2c:	ldr	r4, [fp]
    2b30:	add	r3, sp, #60	; 0x3c
    2b34:	add	r0, sp, #72	; 0x48
    2b38:	add	r2, sp, #64	; 0x40
    2b3c:	str	r2, [sp, #4]
    2b40:	str	r0, [sp]
    2b44:	mov	r2, r5
    2b48:	mov	r0, r6
    2b4c:	blx	r4
    2b50:	mov	r4, r0
    2b54:	cmp	r4, r5
    2b58:	beq	2c50 <flatcc_json_parser_symbolic_float+0x19c>
    2b5c:	cmp	r4, sl
    2b60:	bne	2b7c <flatcc_json_parser_symbolic_float+0xc8>
    2b64:	add	fp, fp, #4
    2b68:	ldr	r1, [fp]
    2b6c:	cmp	r1, #0
    2b70:	movne	r1, #1
    2b74:	moveq	r1, #0
    2b78:	b	2b80 <flatcc_json_parser_symbolic_float+0xcc>
    2b7c:	mov	r1, #0
    2b80:	cmp	r1, #0
    2b84:	bne	2b24 <flatcc_json_parser_symbolic_float+0x70>
    2b88:	cmp	sl, r4
    2b8c:	bne	2bac <flatcc_json_parser_symbolic_float+0xf8>
    2b90:	mov	r3, #23
    2b94:	mov	r2, r5
    2b98:	mov	r1, r4
    2b9c:	mov	r0, r6
    2ba0:	bl	0 <flatcc_json_parser_set_error>
    2ba4:	mov	r4, r0
    2ba8:	b	2c50 <flatcc_json_parser_symbolic_float+0x19c>
    2bac:	mov	r1, r8
    2bb0:	add	r8, r1, #1
    2bb4:	cmp	r1, #0
    2bb8:	beq	2bd0 <flatcc_json_parser_symbolic_float+0x11c>
    2bbc:	ldr	r0, [r6, #12]
    2bc0:	cmp	r0, #0
    2bc4:	movne	ip, #1
    2bc8:	moveq	ip, #0
    2bcc:	b	2bd4 <flatcc_json_parser_symbolic_float+0x120>
    2bd0:	mov	ip, #0
    2bd4:	cmp	ip, #0
    2bd8:	beq	2bf8 <flatcc_json_parser_symbolic_float+0x144>
    2bdc:	mov	r3, #14
    2be0:	mov	r2, r5
    2be4:	mov	r1, r4
    2be8:	mov	r0, r6
    2bec:	bl	0 <flatcc_json_parser_set_error>
    2bf0:	mov	r4, r0
    2bf4:	b	2c50 <flatcc_json_parser_symbolic_float+0x19c>
    2bf8:	ldr	r3, [sp, #60]	; 0x3c
    2bfc:	ldr	r0, [sp, #72]	; 0x48
    2c00:	ldr	r2, [sp, #76]	; 0x4c
    2c04:	add	r1, sp, #56	; 0x38
    2c08:	str	r1, [sp, #8]
    2c0c:	str	r2, [sp, #4]
    2c10:	str	r0, [sp]
    2c14:	mov	r2, r5
    2c18:	mov	r1, r4
    2c1c:	mov	r0, r6
    2c20:	bl	1198 <flatcc_json_parser_coerce_float>
    2c24:	cmp	r5, r0
    2c28:	bne	2c34 <flatcc_json_parser_symbolic_float+0x180>
    2c2c:	mov	r4, r5
    2c30:	b	2c50 <flatcc_json_parser_symbolic_float+0x19c>
    2c34:	vldr	s8, [r9]
    2c38:	vldr	s14, [sp, #56]	; 0x38
    2c3c:	vadd.f32	s10, s8, s14
    2c40:	vstr	s10, [r9]
    2c44:	ldr	r0, [sp, #64]	; 0x40
    2c48:	cmp	r0, #0
    2c4c:	bne	2b20 <flatcc_json_parser_symbolic_float+0x6c>
    2c50:	mov	r0, r4
    2c54:	ldr	r4, [sp, #24]
    2c58:	ldr	r5, [sp, #28]
    2c5c:	ldr	r6, [sp, #32]
    2c60:	ldr	r7, [sp, #36]	; 0x24
    2c64:	ldr	r8, [sp, #40]	; 0x28
    2c68:	ldr	r9, [sp, #44]	; 0x2c
    2c6c:	ldr	sl, [sp, #48]	; 0x30
    2c70:	ldr	fp, [sp, #52]	; 0x34
    2c74:	ldr	lr, [sp, #16]
    2c78:	add	sp, sp, #80	; 0x50
    2c7c:	bx	lr
    2c80:	.word	0x00000000

00002c84 <flatcc_json_parser_symbolic_double>:
    2c84:	mov	ip, sp
    2c88:	sub	sp, sp, #80	; 0x50
    2c8c:	str	ip, [sp, #12]
    2c90:	str	lr, [sp, #16]
    2c94:	str	r4, [sp, #24]
    2c98:	str	r5, [sp, #28]
    2c9c:	str	r6, [sp, #32]
    2ca0:	str	r7, [sp, #36]	; 0x24
    2ca4:	str	r8, [sp, #40]	; 0x28
    2ca8:	str	r9, [sp, #44]	; 0x2c
    2cac:	str	sl, [sp, #48]	; 0x30
    2cb0:	str	fp, [sp, #52]	; 0x34
    2cb4:	ldr	r9, [ip]
    2cb8:	mov	r7, r3
    2cbc:	mov	r5, r2
    2cc0:	mov	r6, r0
    2cc4:	vldr	d2, [pc, #388]	; 2e50 <flatcc_json_parser_symbolic_double+0x1cc>
    2cc8:	vstr	d2, [sp, #64]	; 0x40
    2ccc:	mov	r8, #0
    2cd0:	vldr	d5, [pc, #376]	; 2e50 <flatcc_json_parser_symbolic_double+0x1cc>
    2cd4:	vstr	d5, [r9]
    2cd8:	mov	r2, r5
    2cdc:	mov	r0, r6
    2ce0:	bl	5f0 <flatcc_json_parser_constant_start>
    2ce4:	mov	r4, r0
    2ce8:	cmp	r4, r5
    2cec:	beq	2e20 <flatcc_json_parser_symbolic_double+0x19c>
    2cf0:	mov	fp, r7
    2cf4:	mov	r1, r4
    2cf8:	mov	sl, r1
    2cfc:	ldr	r4, [fp]
    2d00:	add	r3, sp, #56	; 0x38
    2d04:	add	r0, sp, #72	; 0x48
    2d08:	add	r2, sp, #60	; 0x3c
    2d0c:	str	r2, [sp, #4]
    2d10:	str	r0, [sp]
    2d14:	mov	r2, r5
    2d18:	mov	r0, r6
    2d1c:	blx	r4
    2d20:	mov	r4, r0
    2d24:	cmp	r4, r5
    2d28:	beq	2e20 <flatcc_json_parser_symbolic_double+0x19c>
    2d2c:	cmp	r4, sl
    2d30:	bne	2d4c <flatcc_json_parser_symbolic_double+0xc8>
    2d34:	add	fp, fp, #4
    2d38:	ldr	r1, [fp]
    2d3c:	cmp	r1, #0
    2d40:	movne	r1, #1
    2d44:	moveq	r1, #0
    2d48:	b	2d50 <flatcc_json_parser_symbolic_double+0xcc>
    2d4c:	mov	r1, #0
    2d50:	cmp	r1, #0
    2d54:	bne	2cf4 <flatcc_json_parser_symbolic_double+0x70>
    2d58:	cmp	sl, r4
    2d5c:	bne	2d7c <flatcc_json_parser_symbolic_double+0xf8>
    2d60:	mov	r3, #23
    2d64:	mov	r2, r5
    2d68:	mov	r1, r4
    2d6c:	mov	r0, r6
    2d70:	bl	0 <flatcc_json_parser_set_error>
    2d74:	mov	r4, r0
    2d78:	b	2e20 <flatcc_json_parser_symbolic_double+0x19c>
    2d7c:	mov	r1, r8
    2d80:	add	r8, r1, #1
    2d84:	cmp	r1, #0
    2d88:	beq	2da0 <flatcc_json_parser_symbolic_double+0x11c>
    2d8c:	ldr	r0, [r6, #12]
    2d90:	cmp	r0, #0
    2d94:	movne	ip, #1
    2d98:	moveq	ip, #0
    2d9c:	b	2da4 <flatcc_json_parser_symbolic_double+0x120>
    2da0:	mov	ip, #0
    2da4:	cmp	ip, #0
    2da8:	beq	2dc8 <flatcc_json_parser_symbolic_double+0x144>
    2dac:	mov	r3, #14
    2db0:	mov	r2, r5
    2db4:	mov	r1, r4
    2db8:	mov	r0, r6
    2dbc:	bl	0 <flatcc_json_parser_set_error>
    2dc0:	mov	r4, r0
    2dc4:	b	2e20 <flatcc_json_parser_symbolic_double+0x19c>
    2dc8:	ldr	r3, [sp, #56]	; 0x38
    2dcc:	ldr	r0, [sp, #72]	; 0x48
    2dd0:	ldr	r2, [sp, #76]	; 0x4c
    2dd4:	add	r1, sp, #64	; 0x40
    2dd8:	str	r1, [sp, #8]
    2ddc:	str	r2, [sp, #4]
    2de0:	str	r0, [sp]
    2de4:	mov	r2, r5
    2de8:	mov	r1, r4
    2dec:	mov	r0, r6
    2df0:	bl	11f4 <flatcc_json_parser_coerce_double>
    2df4:	cmp	r5, r0
    2df8:	bne	2e04 <flatcc_json_parser_symbolic_double+0x180>
    2dfc:	mov	r4, r5
    2e00:	b	2e20 <flatcc_json_parser_symbolic_double+0x19c>
    2e04:	vldr	d0, [r9]
    2e08:	vldr	d7, [sp, #64]	; 0x40
    2e0c:	vadd.f64	d6, d0, d7
    2e10:	vstr	d6, [r9]
    2e14:	ldr	r0, [sp, #60]	; 0x3c
    2e18:	cmp	r0, #0
    2e1c:	bne	2cf0 <flatcc_json_parser_symbolic_double+0x6c>
    2e20:	mov	r0, r4
    2e24:	ldr	r4, [sp, #24]
    2e28:	ldr	r5, [sp, #28]
    2e2c:	ldr	r6, [sp, #32]
    2e30:	ldr	r7, [sp, #36]	; 0x24
    2e34:	ldr	r8, [sp, #40]	; 0x28
    2e38:	ldr	r9, [sp, #44]	; 0x2c
    2e3c:	ldr	sl, [sp, #48]	; 0x30
    2e40:	ldr	fp, [sp, #52]	; 0x34
    2e44:	ldr	lr, [sp, #16]
    2e48:	add	sp, sp, #80	; 0x50
    2e4c:	bx	lr
	...

00002e58 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>:
    2e58:	mov	ip, sp
    2e5c:	sub	sp, sp, #56	; 0x38
    2e60:	str	ip, [sp, #4]
    2e64:	str	lr, [sp, #8]
    2e68:	str	r4, [sp, #24]
    2e6c:	str	r5, [sp, #28]
    2e70:	str	r6, [sp, #32]
    2e74:	str	r7, [sp, #36]	; 0x24
    2e78:	str	r8, [sp, #40]	; 0x28
    2e7c:	str	r9, [sp, #44]	; 0x2c
    2e80:	str	sl, [sp, #48]	; 0x30
    2e84:	str	fp, [sp, #52]	; 0x34
    2e88:	ldr	ip, [ip, #4]
    2e8c:	str	ip, [sp, #16]
    2e90:	ldr	ip, [sp, #4]
    2e94:	ldr	r8, [ip]
    2e98:	mov	r7, r3
    2e9c:	mov	r6, r2
    2ea0:	mov	r5, r1
    2ea4:	str	r0, [sp, #20]
    2ea8:	mov	r4, r5
    2eac:	mov	r1, r6
    2eb0:	mov	r0, r5
    2eb4:	bl	590 <flatcc_json_parser_symbol_part>
    2eb8:	mov	fp, r1
    2ebc:	mov	sl, r0
    2ec0:	mov	r1, fp
    2ec4:	bic	ip, r1, #255	; 0xff
    2ec8:	mov	r3, #0
    2ecc:	eor	r0, ip, #28416	; 0x6f00
    2ed0:	eor	r0, r0, #7274496	; 0x6f0000
    2ed4:	eor	r0, r0, #1174405120	; 0x46000000
    2ed8:	orr	r2, r0, r3
    2edc:	cmp	r2, #0
    2ee0:	bne	2f2c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    2ee4:	mov	r1, r5
    2ee8:	mov	r9, r1
    2eec:	mov	r3, #3
    2ef0:	ldr	ip, [sp, #16]
    2ef4:	str	ip, [sp]
    2ef8:	mov	r2, r6
    2efc:	ldr	r0, [sp, #20]
    2f00:	bl	0 <flatcc_json_parser_match_constant>
    2f04:	mov	r5, r0
    2f08:	cmp	r5, r9
    2f0c:	beq	2f2c <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0xd4>
    2f10:	mov	r2, #0
    2f14:	mov	r1, #17
    2f18:	str	r1, [r8]
    2f1c:	str	r2, [r8, #4]
    2f20:	mov	r0, #0
    2f24:	str	r0, [r7]
    2f28:	b	2fc8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x170>
    2f2c:	eor	r2, fp, #876	; 0x36c
    2f30:	eor	r2, r2, #942080	; 0xe6000
    2f34:	eor	r2, r2, #157286400	; 0x9600000
    2f38:	eor	r2, r2, #1073741824	; 0x40000000
    2f3c:	eor	r1, sl, #86	; 0x56
    2f40:	eor	r1, r1, #25856	; 0x6500
    2f44:	eor	r1, r1, #23330816	; 0x1640000
    2f48:	eor	r1, r1, #1946157056	; 0x74000000
    2f4c:	orr	r0, r2, r1
    2f50:	cmp	r0, #0
    2f54:	bne	2fe0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x188>
    2f58:	add	r9, r5, #8
    2f5c:	mov	r1, r6
    2f60:	mov	r0, r9
    2f64:	bl	590 <flatcc_json_parser_symbol_part>
    2f68:	bic	r0, r1, #255	; 0xff
    2f6c:	bic	r0, r0, #65280	; 0xff00
    2f70:	mov	r2, #0
    2f74:	eor	r3, r0, #23855104	; 0x16c0000
    2f78:	eor	r3, r3, #1610612736	; 0x60000000
    2f7c:	orr	ip, r3, r2
    2f80:	cmp	ip, #0
    2f84:	bne	2fd8 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x180>
    2f88:	mov	r3, #2
    2f8c:	ldr	ip, [sp, #16]
    2f90:	str	ip, [sp]
    2f94:	mov	r2, r6
    2f98:	mov	r1, r9
    2f9c:	ldr	r0, [sp, #20]
    2fa0:	bl	0 <flatcc_json_parser_match_constant>
    2fa4:	mov	r5, r0
    2fa8:	cmp	r5, r9
    2fac:	beq	2fd0 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x178>
    2fb0:	mov	ip, #0
    2fb4:	mov	r3, #0
    2fb8:	str	r3, [r8]
    2fbc:	str	ip, [r8, #4]
    2fc0:	mov	r1, #0
    2fc4:	str	r1, [r7]
    2fc8:	mov	r0, r5
    2fcc:	b	2fe4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    2fd0:	mov	r0, r4
    2fd4:	b	2fe4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    2fd8:	mov	r0, r4
    2fdc:	b	2fe4 <MyGame_OtherNameSpace_FromInclude_parse_json_enum+0x18c>
    2fe0:	mov	r0, r4
    2fe4:	ldr	r4, [sp, #24]
    2fe8:	ldr	r5, [sp, #28]
    2fec:	ldr	r6, [sp, #32]
    2ff0:	ldr	r7, [sp, #36]	; 0x24
    2ff4:	ldr	r8, [sp, #40]	; 0x28
    2ff8:	ldr	r9, [sp, #44]	; 0x2c
    2ffc:	ldr	sl, [sp, #48]	; 0x30
    3000:	ldr	fp, [sp, #52]	; 0x34
    3004:	ldr	lr, [sp, #8]
    3008:	add	sp, sp, #56	; 0x38
    300c:	bx	lr

00003010 <MyGame_InParentNamespace_parse_json_table>:
    3010:	mov	ip, sp
    3014:	sub	sp, sp, #32
    3018:	str	ip, [sp]
    301c:	str	lr, [sp, #4]
    3020:	str	r4, [sp, #8]
    3024:	str	r5, [sp, #12]
    3028:	str	r6, [sp, #16]
    302c:	str	r7, [sp, #20]
    3030:	mov	r7, r3
    3034:	mov	r5, r2
    3038:	mov	r4, r1
    303c:	mov	r6, r0
    3040:	mov	r1, #0
    3044:	str	r1, [r7]
    3048:	ldr	r0, [r6]
    304c:	mov	r1, #0
    3050:	bl	0 <flatcc_builder_start_table>
    3054:	cmp	r0, #0
    3058:	bne	30e4 <MyGame_InParentNamespace_parse_json_table+0xd4>
    305c:	add	r3, sp, #24
    3060:	mov	r2, r5
    3064:	mov	r1, r4
    3068:	mov	r0, r6
    306c:	bl	64c <flatcc_json_parser_object_start>
    3070:	mov	r4, r0
    3074:	ldr	r3, [sp, #24]
    3078:	cmp	r3, #0
    307c:	beq	30bc <MyGame_InParentNamespace_parse_json_table+0xac>
    3080:	mov	r2, r5
    3084:	mov	r1, r4
    3088:	mov	r0, r6
    308c:	bl	460 <flatcc_json_parser_symbol_start>
    3090:	mov	r1, r0
    3094:	mov	r2, r5
    3098:	mov	r0, r6
    309c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    30a0:	add	r3, sp, #24
    30a4:	mov	r2, r5
    30a8:	mov	r1, r0
    30ac:	mov	r0, r6
    30b0:	bl	72c <flatcc_json_parser_object_end>
    30b4:	mov	r4, r0
    30b8:	b	3074 <MyGame_InParentNamespace_parse_json_table+0x64>
    30bc:	ldr	r1, [r6, #24]
    30c0:	cmp	r1, #0
    30c4:	bne	30e4 <MyGame_InParentNamespace_parse_json_table+0xd4>
    30c8:	ldr	r0, [r6]
    30cc:	bl	0 <flatcc_builder_end_table>
    30d0:	str	r0, [r7]
    30d4:	cmp	r0, #0
    30d8:	beq	30e4 <MyGame_InParentNamespace_parse_json_table+0xd4>
    30dc:	mov	r0, r4
    30e0:	b	30f8 <MyGame_InParentNamespace_parse_json_table+0xe8>
    30e4:	mov	r3, #33	; 0x21
    30e8:	mov	r2, r5
    30ec:	mov	r1, r4
    30f0:	mov	r0, r6
    30f4:	bl	0 <flatcc_json_parser_set_error>
    30f8:	ldr	r4, [sp, #8]
    30fc:	ldr	r5, [sp, #12]
    3100:	ldr	r6, [sp, #16]
    3104:	ldr	r7, [sp, #20]
    3108:	ldr	lr, [sp, #4]
    310c:	add	sp, sp, #32
    3110:	bx	lr

00003114 <MyGame_Example2_Monster_parse_json_table>:
    3114:	mov	ip, sp
    3118:	sub	sp, sp, #32
    311c:	str	ip, [sp]
    3120:	str	lr, [sp, #4]
    3124:	str	r4, [sp, #8]
    3128:	str	r5, [sp, #12]
    312c:	str	r6, [sp, #16]
    3130:	str	r7, [sp, #20]
    3134:	mov	r7, r3
    3138:	mov	r5, r2
    313c:	mov	r4, r1
    3140:	mov	r6, r0
    3144:	mov	r1, #0
    3148:	str	r1, [r7]
    314c:	ldr	r0, [r6]
    3150:	mov	r1, #0
    3154:	bl	0 <flatcc_builder_start_table>
    3158:	cmp	r0, #0
    315c:	bne	31e8 <MyGame_Example2_Monster_parse_json_table+0xd4>
    3160:	add	r3, sp, #24
    3164:	mov	r2, r5
    3168:	mov	r1, r4
    316c:	mov	r0, r6
    3170:	bl	64c <flatcc_json_parser_object_start>
    3174:	mov	r4, r0
    3178:	ldr	r3, [sp, #24]
    317c:	cmp	r3, #0
    3180:	beq	31c0 <MyGame_Example2_Monster_parse_json_table+0xac>
    3184:	mov	r2, r5
    3188:	mov	r1, r4
    318c:	mov	r0, r6
    3190:	bl	460 <flatcc_json_parser_symbol_start>
    3194:	mov	r1, r0
    3198:	mov	r2, r5
    319c:	mov	r0, r6
    31a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    31a4:	add	r3, sp, #24
    31a8:	mov	r2, r5
    31ac:	mov	r1, r0
    31b0:	mov	r0, r6
    31b4:	bl	72c <flatcc_json_parser_object_end>
    31b8:	mov	r4, r0
    31bc:	b	3178 <MyGame_Example2_Monster_parse_json_table+0x64>
    31c0:	ldr	r1, [r6, #24]
    31c4:	cmp	r1, #0
    31c8:	bne	31e8 <MyGame_Example2_Monster_parse_json_table+0xd4>
    31cc:	ldr	r0, [r6]
    31d0:	bl	0 <flatcc_builder_end_table>
    31d4:	str	r0, [r7]
    31d8:	cmp	r0, #0
    31dc:	beq	31e8 <MyGame_Example2_Monster_parse_json_table+0xd4>
    31e0:	mov	r0, r4
    31e4:	b	31fc <MyGame_Example2_Monster_parse_json_table+0xe8>
    31e8:	mov	r3, #33	; 0x21
    31ec:	mov	r2, r5
    31f0:	mov	r1, r4
    31f4:	mov	r0, r6
    31f8:	bl	0 <flatcc_json_parser_set_error>
    31fc:	ldr	r4, [sp, #8]
    3200:	ldr	r5, [sp, #12]
    3204:	ldr	r6, [sp, #16]
    3208:	ldr	r7, [sp, #20]
    320c:	ldr	lr, [sp, #4]
    3210:	add	sp, sp, #32
    3214:	bx	lr

00003218 <MyGame_Example_Foo_parse_json_enum>:
    3218:	mov	ip, sp
    321c:	sub	sp, sp, #48	; 0x30
    3220:	str	ip, [sp, #4]
    3224:	str	lr, [sp, #8]
    3228:	str	r4, [sp, #16]
    322c:	str	r5, [sp, #20]
    3230:	str	r6, [sp, #24]
    3234:	str	r7, [sp, #28]
    3238:	str	r8, [sp, #32]
    323c:	str	r9, [sp, #36]	; 0x24
    3240:	str	sl, [sp, #40]	; 0x28
    3244:	ldr	r5, [ip, #4]
    3248:	ldr	r8, [ip]
    324c:	mov	sl, r3
    3250:	mov	r9, r2
    3254:	mov	r4, r1
    3258:	mov	r7, r0
    325c:	mov	r1, r9
    3260:	mov	r0, r4
    3264:	bl	590 <flatcc_json_parser_symbol_part>
    3268:	mov	ip, r1
    326c:	eor	r3, ip, #97	; 0x61
    3270:	eor	r3, r3, #937984	; 0xe5000
    3274:	eor	r3, r3, #157286400	; 0x9600000
    3278:	eor	r3, r3, #1073741824	; 0x40000000
    327c:	eor	r2, r0, #628	; 0x274
    3280:	eor	r2, r2, #93184	; 0x16c00
    3284:	eor	r2, r2, #40108032	; 0x2640000
    3288:	eor	r2, r2, #1879048192	; 0x70000000
    328c:	orr	r2, r3, r2
    3290:	cmp	r2, #0
    3294:	bne	3350 <MyGame_Example_Foo_parse_json_enum+0x138>
    3298:	add	r6, r4, #8
    329c:	mov	r1, r9
    32a0:	mov	r0, r6
    32a4:	bl	590 <flatcc_json_parser_symbol_part>
    32a8:	eor	r1, r1, #101	; 0x65
    32ac:	eor	r1, r1, #27904	; 0x6d00
    32b0:	eor	r1, r1, #6356992	; 0x610000
    32b4:	eor	r1, r1, #1308622848	; 0x4e000000
    32b8:	eor	r0, r0, #99	; 0x63
    32bc:	eor	r0, r0, #24832	; 0x6100
    32c0:	eor	r0, r0, #57671680	; 0x3700000
    32c4:	eor	r0, r0, #1879048192	; 0x70000000
    32c8:	orr	ip, r1, r0
    32cc:	cmp	ip, #0
    32d0:	bne	3348 <MyGame_Example_Foo_parse_json_enum+0x130>
    32d4:	add	r6, r6, #8
    32d8:	mov	r1, r9
    32dc:	mov	r0, r6
    32e0:	bl	590 <flatcc_json_parser_symbol_part>
    32e4:	and	r3, r1, #-16777216	; 0xff000000
    32e8:	mov	r2, #0
    32ec:	eor	r3, r3, #1694498816	; 0x65000000
    32f0:	orr	ip, r3, r2
    32f4:	cmp	ip, #0
    32f8:	bne	3340 <MyGame_Example_Foo_parse_json_enum+0x128>
    32fc:	mov	r3, #1
    3300:	str	r5, [sp]
    3304:	mov	r2, r9
    3308:	mov	r1, r6
    330c:	mov	r0, r7
    3310:	bl	0 <flatcc_json_parser_match_constant>
    3314:	cmp	r0, r6
    3318:	beq	3338 <MyGame_Example_Foo_parse_json_enum+0x120>
    331c:	mov	ip, #0
    3320:	mov	r3, #1
    3324:	str	r3, [r8]
    3328:	str	ip, [r8, #4]
    332c:	mov	r1, #0
    3330:	str	r1, [sl]
    3334:	b	33bc <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3338:	mov	r0, r4
    333c:	b	33bc <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3340:	mov	r0, r4
    3344:	b	33bc <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3348:	mov	r0, r4
    334c:	b	33bc <MyGame_Example_Foo_parse_json_enum+0x1a4>
    3350:	mov	r2, #0
    3354:	eor	r1, r1, #69	; 0x45
    3358:	eor	r1, r1, #19968	; 0x4e00
    335c:	eor	r1, r1, #5177344	; 0x4f0000
    3360:	eor	r1, r1, #1308622848	; 0x4e000000
    3364:	orr	r1, r1, r2
    3368:	cmp	r1, #0
    336c:	bne	33b8 <MyGame_Example_Foo_parse_json_enum+0x1a0>
    3370:	mov	r6, r4
    3374:	mov	r3, #4
    3378:	str	r5, [sp]
    337c:	mov	r2, r9
    3380:	mov	r1, r6
    3384:	mov	r0, r7
    3388:	bl	0 <flatcc_json_parser_match_constant>
    338c:	cmp	r0, r6
    3390:	beq	33b0 <MyGame_Example_Foo_parse_json_enum+0x198>
    3394:	mov	r1, #0
    3398:	mov	ip, #0
    339c:	str	ip, [r8]
    33a0:	str	r1, [r8, #4]
    33a4:	mov	r1, #0
    33a8:	str	r1, [sl]
    33ac:	b	33bc <MyGame_Example_Foo_parse_json_enum+0x1a4>
    33b0:	mov	r0, r4
    33b4:	b	33bc <MyGame_Example_Foo_parse_json_enum+0x1a4>
    33b8:	mov	r0, r4
    33bc:	ldr	r4, [sp, #16]
    33c0:	ldr	r5, [sp, #20]
    33c4:	ldr	r6, [sp, #24]
    33c8:	ldr	r7, [sp, #28]
    33cc:	ldr	r8, [sp, #32]
    33d0:	ldr	r9, [sp, #36]	; 0x24
    33d4:	ldr	sl, [sp, #40]	; 0x28
    33d8:	ldr	lr, [sp, #8]
    33dc:	add	sp, sp, #48	; 0x30
    33e0:	bx	lr

000033e4 <MyGame_Example_neg_enum_parse_json_enum>:
    33e4:	mov	ip, sp
    33e8:	sub	sp, sp, #48	; 0x30
    33ec:	str	ip, [sp, #4]
    33f0:	str	lr, [sp, #8]
    33f4:	str	r4, [sp, #16]
    33f8:	str	r5, [sp, #20]
    33fc:	str	r6, [sp, #24]
    3400:	str	r7, [sp, #28]
    3404:	str	r8, [sp, #32]
    3408:	str	r9, [sp, #36]	; 0x24
    340c:	str	sl, [sp, #40]	; 0x28
    3410:	ldr	r9, [ip, #4]
    3414:	ldr	r5, [ip]
    3418:	mov	r8, r3
    341c:	mov	r4, r2
    3420:	mov	r7, r1
    3424:	mov	sl, r0
    3428:	mov	r6, r7
    342c:	mov	r1, r4
    3430:	mov	r0, r7
    3434:	bl	590 <flatcc_json_parser_symbol_part>
    3438:	mov	r2, r1
    343c:	movw	r3, #26418	; 0x6732
    3440:	movt	r3, #28261	; 0x6e65
    3444:	cmp	r2, r3
    3448:	bne	345c <MyGame_Example_neg_enum_parse_json_enum+0x78>
    344c:	mov	r2, #0
    3450:	cmp	r0, r2
    3454:	bcc	3548 <MyGame_Example_neg_enum_parse_json_enum+0x164>
    3458:	b	3470 <MyGame_Example_neg_enum_parse_json_enum+0x8c>
    345c:	mov	ip, r1
    3460:	movw	r0, #26418	; 0x6732
    3464:	movt	r0, #28261	; 0x6e65
    3468:	cmp	ip, r0
    346c:	bcc	3548 <MyGame_Example_neg_enum_parse_json_enum+0x164>
    3470:	mov	r2, r1
    3474:	mov	r3, #0
    3478:	eor	ip, r2, #51	; 0x33
    347c:	eor	ip, ip, #26368	; 0x6700
    3480:	eor	ip, ip, #6619136	; 0x650000
    3484:	eor	ip, ip, #1845493760	; 0x6e000000
    3488:	orr	r3, ip, r3
    348c:	cmp	r3, #0
    3490:	beq	3500 <MyGame_Example_neg_enum_parse_json_enum+0x11c>
    3494:	mov	r0, #0
    3498:	eor	r3, r1, #50	; 0x32
    349c:	eor	r3, r3, #26368	; 0x6700
    34a0:	eor	r3, r3, #6619136	; 0x650000
    34a4:	eor	r3, r3, #1845493760	; 0x6e000000
    34a8:	orr	r3, r3, r0
    34ac:	cmp	r3, #0
    34b0:	bne	34f8 <MyGame_Example_neg_enum_parse_json_enum+0x114>
    34b4:	mov	r3, #4
    34b8:	str	r9, [sp]
    34bc:	mov	r2, r4
    34c0:	mov	r1, r7
    34c4:	mov	r0, sl
    34c8:	bl	0 <flatcc_json_parser_match_constant>
    34cc:	cmp	r0, r7
    34d0:	beq	34f0 <MyGame_Example_neg_enum_parse_json_enum+0x10c>
    34d4:	mvn	r2, #0
    34d8:	mvn	r1, #10
    34dc:	str	r1, [r5]
    34e0:	str	r2, [r5, #4]
    34e4:	mov	ip, #1
    34e8:	str	ip, [r8]
    34ec:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    34f0:	mov	r0, r6
    34f4:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    34f8:	mov	r0, r6
    34fc:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3500:	mov	r1, r7
    3504:	mov	r7, r1
    3508:	mov	r3, #4
    350c:	str	r9, [sp]
    3510:	mov	r2, r4
    3514:	mov	r0, sl
    3518:	bl	0 <flatcc_json_parser_match_constant>
    351c:	cmp	r0, r7
    3520:	beq	3540 <MyGame_Example_neg_enum_parse_json_enum+0x15c>
    3524:	mvn	ip, #0
    3528:	mvn	r3, #9
    352c:	str	r3, [r5]
    3530:	str	ip, [r5, #4]
    3534:	mov	ip, #1
    3538:	str	ip, [r8]
    353c:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3540:	mov	r0, r6
    3544:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    3548:	mov	r2, #0
    354c:	eor	r1, r1, #49	; 0x31
    3550:	eor	r1, r1, #26368	; 0x6700
    3554:	eor	r1, r1, #6619136	; 0x650000
    3558:	eor	r1, r1, #1845493760	; 0x6e000000
    355c:	orr	r1, r1, r2
    3560:	cmp	r1, #0
    3564:	bne	35ac <MyGame_Example_neg_enum_parse_json_enum+0x1c8>
    3568:	mov	r3, #4
    356c:	str	r9, [sp]
    3570:	mov	r2, r4
    3574:	mov	r1, r7
    3578:	mov	r0, sl
    357c:	bl	0 <flatcc_json_parser_match_constant>
    3580:	cmp	r0, r7
    3584:	beq	35a4 <MyGame_Example_neg_enum_parse_json_enum+0x1c0>
    3588:	mvn	r2, #0
    358c:	mvn	r1, #11
    3590:	str	r1, [r5]
    3594:	str	r2, [r5, #4]
    3598:	mov	r2, #1
    359c:	str	r2, [r8]
    35a0:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    35a4:	mov	r0, r6
    35a8:	b	35b0 <MyGame_Example_neg_enum_parse_json_enum+0x1cc>
    35ac:	mov	r0, r6
    35b0:	ldr	r4, [sp, #16]
    35b4:	ldr	r5, [sp, #20]
    35b8:	ldr	r6, [sp, #24]
    35bc:	ldr	r7, [sp, #28]
    35c0:	ldr	r8, [sp, #32]
    35c4:	ldr	r9, [sp, #36]	; 0x24
    35c8:	ldr	sl, [sp, #40]	; 0x28
    35cc:	ldr	lr, [sp, #8]
    35d0:	add	sp, sp, #48	; 0x30
    35d4:	bx	lr

000035d8 <MyGame_Example_int_enum_parse_json_enum>:
    35d8:	mov	ip, sp
    35dc:	sub	sp, sp, #48	; 0x30
    35e0:	str	ip, [sp, #4]
    35e4:	str	lr, [sp, #8]
    35e8:	str	r4, [sp, #16]
    35ec:	str	r5, [sp, #20]
    35f0:	str	r6, [sp, #24]
    35f4:	str	r7, [sp, #28]
    35f8:	str	r8, [sp, #32]
    35fc:	str	r9, [sp, #36]	; 0x24
    3600:	str	sl, [sp, #40]	; 0x28
    3604:	ldr	r8, [ip, #4]
    3608:	ldr	r6, [ip]
    360c:	mov	r9, r3
    3610:	mov	r4, r2
    3614:	mov	r5, r1
    3618:	mov	r7, r0
    361c:	mov	r1, r4
    3620:	mov	r0, r5
    3624:	bl	590 <flatcc_json_parser_symbol_part>
    3628:	mov	r3, r0
    362c:	mov	r2, r1
    3630:	movw	ip, #29746	; 0x7432
    3634:	movt	ip, #26990	; 0x696e
    3638:	cmp	r2, ip
    363c:	bne	3650 <MyGame_Example_int_enum_parse_json_enum+0x78>
    3640:	mov	r2, #0
    3644:	cmp	r3, r2
    3648:	bcc	380c <MyGame_Example_int_enum_parse_json_enum+0x234>
    364c:	b	3664 <MyGame_Example_int_enum_parse_json_enum+0x8c>
    3650:	mov	ip, r1
    3654:	movw	r2, #29746	; 0x7432
    3658:	movt	r2, #26990	; 0x696e
    365c:	cmp	ip, r2
    3660:	bcc	380c <MyGame_Example_int_enum_parse_json_enum+0x234>
    3664:	mov	r3, r1
    3668:	movw	ip, #29806	; 0x746e
    366c:	movt	ip, #26990	; 0x696e
    3670:	cmp	r3, ip
    3674:	bne	3690 <MyGame_Example_int_enum_parse_json_enum+0xb8>
    3678:	mov	r2, r0
    367c:	movw	ip, #0
    3680:	movt	ip, #25959	; 0x6567
    3684:	cmp	r2, ip
    3688:	bcc	379c <MyGame_Example_int_enum_parse_json_enum+0x1c4>
    368c:	b	36a4 <MyGame_Example_int_enum_parse_json_enum+0xcc>
    3690:	mov	r2, r1
    3694:	movw	r3, #29806	; 0x746e
    3698:	movt	r3, #26990	; 0x696e
    369c:	cmp	r2, r3
    36a0:	bcc	379c <MyGame_Example_int_enum_parse_json_enum+0x1c4>
    36a4:	mov	ip, r0
    36a8:	mov	r2, r1
    36ac:	bic	ip, ip, #255	; 0xff
    36b0:	eor	r3, r2, #110	; 0x6e
    36b4:	eor	r3, r3, #160768	; 0x27400
    36b8:	eor	r3, r3, #23855104	; 0x16c0000
    36bc:	eor	r3, r3, #1744830464	; 0x68000000
    36c0:	eor	r2, ip, #12800	; 0x3200
    36c4:	eor	r2, r2, #6750208	; 0x670000
    36c8:	eor	r2, r2, #1694498816	; 0x65000000
    36cc:	orr	r2, r3, r2
    36d0:	cmp	r2, #0
    36d4:	beq	3754 <MyGame_Example_int_enum_parse_json_enum+0x17c>
    36d8:	bic	r2, r0, #255	; 0xff
    36dc:	bic	r2, r2, #65280	; 0xff00
    36e0:	eor	r3, r1, #110	; 0x6e
    36e4:	eor	r3, r3, #160768	; 0x27400
    36e8:	eor	r3, r3, #23855104	; 0x16c0000
    36ec:	eor	r3, r3, #1744830464	; 0x68000000
    36f0:	eor	r0, r2, #6750208	; 0x670000
    36f4:	eor	r0, r0, #1694498816	; 0x65000000
    36f8:	orr	r1, r3, r0
    36fc:	cmp	r1, #0
    3700:	bne	374c <MyGame_Example_int_enum_parse_json_enum+0x174>
    3704:	mov	r1, r5
    3708:	mov	sl, r1
    370c:	mov	r3, #6
    3710:	str	r8, [sp]
    3714:	mov	r2, r4
    3718:	mov	r0, r7
    371c:	bl	0 <flatcc_json_parser_match_constant>
    3720:	cmp	r0, sl
    3724:	beq	3744 <MyGame_Example_int_enum_parse_json_enum+0x16c>
    3728:	mvn	r3, #0
    372c:	mvn	r2, #1
    3730:	str	r2, [r6]
    3734:	str	r3, [r6, #4]
    3738:	mov	r1, #1
    373c:	str	r1, [r9]
    3740:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3744:	mov	r0, r5
    3748:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    374c:	mov	r0, r5
    3750:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3754:	mov	sl, r5
    3758:	mov	r3, #7
    375c:	str	r8, [sp]
    3760:	mov	r2, r4
    3764:	mov	r1, sl
    3768:	mov	r0, r7
    376c:	bl	0 <flatcc_json_parser_match_constant>
    3770:	cmp	r0, sl
    3774:	beq	3794 <MyGame_Example_int_enum_parse_json_enum+0x1bc>
    3778:	mvn	r2, #0
    377c:	mvn	r1, #0
    3780:	str	r1, [r6]
    3784:	str	r2, [r6, #4]
    3788:	mov	r2, #1
    378c:	str	r2, [r9]
    3790:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3794:	mov	r0, r5
    3798:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    379c:	mov	r2, #0
    37a0:	eor	r0, r1, #50	; 0x32
    37a4:	eor	r0, r0, #160768	; 0x27400
    37a8:	eor	r0, r0, #23855104	; 0x16c0000
    37ac:	eor	r0, r0, #1744830464	; 0x68000000
    37b0:	orr	ip, r0, r2
    37b4:	cmp	ip, #0
    37b8:	bne	3804 <MyGame_Example_int_enum_parse_json_enum+0x22c>
    37bc:	mov	r1, r5
    37c0:	mov	sl, r1
    37c4:	mov	r3, #4
    37c8:	str	r8, [sp]
    37cc:	mov	r2, r4
    37d0:	mov	r0, r7
    37d4:	bl	0 <flatcc_json_parser_match_constant>
    37d8:	cmp	r0, sl
    37dc:	beq	37fc <MyGame_Example_int_enum_parse_json_enum+0x224>
    37e0:	mov	r3, #0
    37e4:	mov	r2, #42	; 0x2a
    37e8:	str	r2, [r6]
    37ec:	str	r3, [r6, #4]
    37f0:	mov	r3, #0
    37f4:	str	r3, [r9]
    37f8:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    37fc:	mov	r0, r5
    3800:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3804:	mov	r0, r5
    3808:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    380c:	mov	r2, #0
    3810:	eor	ip, r1, #49	; 0x31
    3814:	eor	ip, ip, #160768	; 0x27400
    3818:	eor	ip, ip, #23855104	; 0x16c0000
    381c:	eor	ip, ip, #1744830464	; 0x68000000
    3820:	orr	r3, ip, r2
    3824:	cmp	r3, #0
    3828:	bne	3874 <MyGame_Example_int_enum_parse_json_enum+0x29c>
    382c:	mov	sl, r5
    3830:	mov	r3, #4
    3834:	str	r8, [sp]
    3838:	mov	r2, r4
    383c:	mov	r1, sl
    3840:	mov	r0, r7
    3844:	bl	0 <flatcc_json_parser_match_constant>
    3848:	cmp	r0, sl
    384c:	beq	386c <MyGame_Example_int_enum_parse_json_enum+0x294>
    3850:	mov	ip, #0
    3854:	mov	r3, #2
    3858:	str	r3, [r6]
    385c:	str	ip, [r6, #4]
    3860:	mov	r1, #0
    3864:	str	r1, [r9]
    3868:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    386c:	mov	r0, r5
    3870:	b	3878 <MyGame_Example_int_enum_parse_json_enum+0x2a0>
    3874:	mov	r0, r5
    3878:	ldr	r4, [sp, #16]
    387c:	ldr	r5, [sp, #20]
    3880:	ldr	r6, [sp, #24]
    3884:	ldr	r7, [sp, #28]
    3888:	ldr	r8, [sp, #32]
    388c:	ldr	r9, [sp, #36]	; 0x24
    3890:	ldr	sl, [sp, #40]	; 0x28
    3894:	ldr	lr, [sp, #8]
    3898:	add	sp, sp, #48	; 0x30
    389c:	bx	lr

000038a0 <MyGame_Example_hex_enum_parse_json_enum>:
    38a0:	mov	ip, sp
    38a4:	sub	sp, sp, #48	; 0x30
    38a8:	str	ip, [sp, #4]
    38ac:	str	lr, [sp, #8]
    38b0:	str	r4, [sp, #16]
    38b4:	str	r5, [sp, #20]
    38b8:	str	r6, [sp, #24]
    38bc:	str	r7, [sp, #28]
    38c0:	str	r8, [sp, #32]
    38c4:	str	r9, [sp, #36]	; 0x24
    38c8:	str	sl, [sp, #40]	; 0x28
    38cc:	ldr	r4, [ip, #4]
    38d0:	ldr	sl, [ip]
    38d4:	mov	r6, r3
    38d8:	mov	r5, r2
    38dc:	mov	r8, r1
    38e0:	mov	r9, r0
    38e4:	mov	r7, r8
    38e8:	mov	r1, r5
    38ec:	mov	r0, r8
    38f0:	bl	590 <flatcc_json_parser_symbol_part>
    38f4:	mov	r3, r0
    38f8:	mov	r2, r1
    38fc:	movw	ip, #30770	; 0x7832
    3900:	movt	ip, #26725	; 0x6865
    3904:	cmp	r2, ip
    3908:	bne	391c <MyGame_Example_hex_enum_parse_json_enum+0x7c>
    390c:	mov	ip, #0
    3910:	cmp	r3, ip
    3914:	bcc	3a18 <MyGame_Example_hex_enum_parse_json_enum+0x178>
    3918:	b	3930 <MyGame_Example_hex_enum_parse_json_enum+0x90>
    391c:	mov	r2, r1
    3920:	movw	r3, #30770	; 0x7832
    3924:	movt	r3, #26725	; 0x6865
    3928:	cmp	r2, r3
    392c:	bcc	3a18 <MyGame_Example_hex_enum_parse_json_enum+0x178>
    3930:	mov	r2, r1
    3934:	bic	ip, r0, #255	; 0xff
    3938:	bic	ip, ip, #65280	; 0xff00
    393c:	eor	r0, r2, #110	; 0x6e
    3940:	eor	r0, r0, #96256	; 0x17800
    3944:	eor	r0, r0, #6553600	; 0x640000
    3948:	eor	r0, r0, #1744830464	; 0x68000000
    394c:	eor	ip, ip, #6750208	; 0x670000
    3950:	eor	ip, ip, #1694498816	; 0x65000000
    3954:	orr	r0, r0, ip
    3958:	cmp	r0, #0
    395c:	beq	39d0 <MyGame_Example_hex_enum_parse_json_enum+0x130>
    3960:	mov	r0, #0
    3964:	eor	r3, r1, #50	; 0x32
    3968:	eor	r3, r3, #96256	; 0x17800
    396c:	eor	r3, r3, #6553600	; 0x640000
    3970:	eor	r3, r3, #1744830464	; 0x68000000
    3974:	orr	r2, r3, r0
    3978:	cmp	r2, #0
    397c:	bne	39c8 <MyGame_Example_hex_enum_parse_json_enum+0x128>
    3980:	mov	r3, #4
    3984:	str	r4, [sp]
    3988:	mov	r2, r5
    398c:	mov	r1, r8
    3990:	mov	r0, r9
    3994:	bl	0 <flatcc_json_parser_match_constant>
    3998:	cmp	r0, r8
    399c:	beq	39c0 <MyGame_Example_hex_enum_parse_json_enum+0x120>
    39a0:	mov	ip, #0
    39a4:	movw	r3, #48815	; 0xbeaf
    39a8:	movt	r3, #32431	; 0x7eaf
    39ac:	str	r3, [sl]
    39b0:	str	ip, [sl, #4]
    39b4:	mov	r3, #0
    39b8:	str	r3, [r6]
    39bc:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    39c0:	mov	r0, r7
    39c4:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    39c8:	mov	r0, r7
    39cc:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    39d0:	mov	r1, r8
    39d4:	mov	r8, r1
    39d8:	mov	r3, #6
    39dc:	str	r4, [sp]
    39e0:	mov	r2, r5
    39e4:	mov	r0, r9
    39e8:	bl	0 <flatcc_json_parser_match_constant>
    39ec:	cmp	r0, r8
    39f0:	beq	3a10 <MyGame_Example_hex_enum_parse_json_enum+0x170>
    39f4:	mvn	r1, #0
    39f8:	mvn	ip, #1
    39fc:	str	ip, [sl]
    3a00:	str	r1, [sl, #4]
    3a04:	mov	r2, #1
    3a08:	str	r2, [r6]
    3a0c:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    3a10:	mov	r0, r7
    3a14:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    3a18:	mov	r2, #0
    3a1c:	eor	r1, r1, #49	; 0x31
    3a20:	eor	r1, r1, #96256	; 0x17800
    3a24:	eor	r1, r1, #6553600	; 0x640000
    3a28:	eor	r1, r1, #1744830464	; 0x68000000
    3a2c:	orr	r1, r1, r2
    3a30:	cmp	r1, #0
    3a34:	bne	3a7c <MyGame_Example_hex_enum_parse_json_enum+0x1dc>
    3a38:	mov	r3, #4
    3a3c:	str	r4, [sp]
    3a40:	mov	r2, r5
    3a44:	mov	r1, r8
    3a48:	mov	r0, r9
    3a4c:	bl	0 <flatcc_json_parser_match_constant>
    3a50:	cmp	r0, r8
    3a54:	beq	3a74 <MyGame_Example_hex_enum_parse_json_enum+0x1d4>
    3a58:	mov	r3, #0
    3a5c:	mov	r2, #3
    3a60:	str	r2, [sl]
    3a64:	str	r3, [sl, #4]
    3a68:	mov	ip, #0
    3a6c:	str	ip, [r6]
    3a70:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    3a74:	mov	r0, r7
    3a78:	b	3a80 <MyGame_Example_hex_enum_parse_json_enum+0x1e0>
    3a7c:	mov	r0, r7
    3a80:	ldr	r4, [sp, #16]
    3a84:	ldr	r5, [sp, #20]
    3a88:	ldr	r6, [sp, #24]
    3a8c:	ldr	r7, [sp, #28]
    3a90:	ldr	r8, [sp, #32]
    3a94:	ldr	r9, [sp, #36]	; 0x24
    3a98:	ldr	sl, [sp, #40]	; 0x28
    3a9c:	ldr	lr, [sp, #8]
    3aa0:	add	sp, sp, #48	; 0x30
    3aa4:	bx	lr

00003aa8 <MyGame_Example_Color_parse_json_enum>:
    3aa8:	mov	ip, sp
    3aac:	sub	sp, sp, #48	; 0x30
    3ab0:	str	ip, [sp, #4]
    3ab4:	str	lr, [sp, #8]
    3ab8:	str	r4, [sp, #16]
    3abc:	str	r5, [sp, #20]
    3ac0:	str	r6, [sp, #24]
    3ac4:	str	r7, [sp, #28]
    3ac8:	str	r8, [sp, #32]
    3acc:	str	r9, [sp, #36]	; 0x24
    3ad0:	str	sl, [sp, #40]	; 0x28
    3ad4:	ldr	sl, [ip, #4]
    3ad8:	ldr	r9, [ip]
    3adc:	mov	r4, r3
    3ae0:	mov	r5, r2
    3ae4:	mov	r6, r1
    3ae8:	mov	r7, r0
    3aec:	mov	r1, r5
    3af0:	mov	r0, r6
    3af4:	bl	590 <flatcc_json_parser_symbol_part>
    3af8:	mov	r2, r1
    3afc:	movw	r3, #25957	; 0x6565
    3b00:	movt	r3, #18290	; 0x4772
    3b04:	cmp	r2, r3
    3b08:	bne	3b20 <MyGame_Example_Color_parse_json_enum+0x78>
    3b0c:	mov	r3, r0
    3b10:	mov	r2, #1845493760	; 0x6e000000
    3b14:	cmp	r3, r2
    3b18:	bcc	3c10 <MyGame_Example_Color_parse_json_enum+0x168>
    3b1c:	b	3b30 <MyGame_Example_Color_parse_json_enum+0x88>
    3b20:	movw	ip, #25957	; 0x6565
    3b24:	movt	ip, #18290	; 0x4772
    3b28:	cmp	r2, ip
    3b2c:	bcc	3c10 <MyGame_Example_Color_parse_json_enum+0x168>
    3b30:	mov	r3, r1
    3b34:	bic	r3, r3, #255	; 0xff
    3b38:	mov	r2, #0
    3b3c:	eor	ip, r3, #91136	; 0x16400
    3b40:	eor	ip, ip, #40108032	; 0x2640000
    3b44:	eor	ip, ip, #1342177280	; 0x50000000
    3b48:	orr	ip, ip, r2
    3b4c:	cmp	ip, #0
    3b50:	beq	3bc8 <MyGame_Example_Color_parse_json_enum+0x120>
    3b54:	and	ip, r0, #-16777216	; 0xff000000
    3b58:	eor	r2, r1, #101	; 0x65
    3b5c:	eor	r2, r2, #25856	; 0x6500
    3b60:	eor	r2, r2, #7471104	; 0x720000
    3b64:	eor	r2, r2, #1191182336	; 0x47000000
    3b68:	eor	r1, ip, #1845493760	; 0x6e000000
    3b6c:	orr	r3, r2, r1
    3b70:	cmp	r3, #0
    3b74:	bne	3bc0 <MyGame_Example_Color_parse_json_enum+0x118>
    3b78:	mov	r8, r6
    3b7c:	mov	r3, #5
    3b80:	str	sl, [sp]
    3b84:	mov	r2, r5
    3b88:	mov	r1, r8
    3b8c:	mov	r0, r7
    3b90:	bl	0 <flatcc_json_parser_match_constant>
    3b94:	cmp	r0, r8
    3b98:	beq	3bb8 <MyGame_Example_Color_parse_json_enum+0x110>
    3b9c:	mov	ip, #0
    3ba0:	mov	r3, #2
    3ba4:	str	r3, [r9]
    3ba8:	str	ip, [r9, #4]
    3bac:	mov	r1, #0
    3bb0:	str	r1, [r4]
    3bb4:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3bb8:	mov	r0, r6
    3bbc:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3bc0:	mov	r0, r6
    3bc4:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3bc8:	mov	r1, r6
    3bcc:	mov	r8, r1
    3bd0:	mov	r3, #3
    3bd4:	str	sl, [sp]
    3bd8:	mov	r2, r5
    3bdc:	mov	r0, r7
    3be0:	bl	0 <flatcc_json_parser_match_constant>
    3be4:	cmp	r0, r8
    3be8:	beq	3c08 <MyGame_Example_Color_parse_json_enum+0x160>
    3bec:	mov	r2, #0
    3bf0:	mov	r1, #1
    3bf4:	str	r1, [r9]
    3bf8:	str	r2, [r9, #4]
    3bfc:	mov	r3, #0
    3c00:	str	r3, [r4]
    3c04:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3c08:	mov	r0, r6
    3c0c:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3c10:	mov	r2, #0
    3c14:	eor	ip, r1, #101	; 0x65
    3c18:	eor	ip, ip, #29952	; 0x7500
    3c1c:	eor	ip, ip, #40632320	; 0x26c0000
    3c20:	eor	ip, ip, #1073741824	; 0x40000000
    3c24:	orr	r1, ip, r2
    3c28:	cmp	r1, #0
    3c2c:	bne	3c78 <MyGame_Example_Color_parse_json_enum+0x1d0>
    3c30:	mov	r8, r6
    3c34:	mov	r3, #4
    3c38:	str	sl, [sp]
    3c3c:	mov	r2, r5
    3c40:	mov	r1, r8
    3c44:	mov	r0, r7
    3c48:	bl	0 <flatcc_json_parser_match_constant>
    3c4c:	cmp	r0, r8
    3c50:	beq	3c70 <MyGame_Example_Color_parse_json_enum+0x1c8>
    3c54:	mov	r2, #0
    3c58:	mov	r1, #8
    3c5c:	str	r1, [r9]
    3c60:	str	r2, [r9, #4]
    3c64:	mov	r1, #0
    3c68:	str	r1, [r4]
    3c6c:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3c70:	mov	r0, r6
    3c74:	b	3c7c <MyGame_Example_Color_parse_json_enum+0x1d4>
    3c78:	mov	r0, r6
    3c7c:	ldr	r4, [sp, #16]
    3c80:	ldr	r5, [sp, #20]
    3c84:	ldr	r6, [sp, #24]
    3c88:	ldr	r7, [sp, #28]
    3c8c:	ldr	r8, [sp, #32]
    3c90:	ldr	r9, [sp, #36]	; 0x24
    3c94:	ldr	sl, [sp, #40]	; 0x28
    3c98:	ldr	lr, [sp, #8]
    3c9c:	add	sp, sp, #48	; 0x30
    3ca0:	bx	lr

00003ca4 <MyGame_Example_Any_parse_json_union>:
    3ca4:	mov	ip, sp
    3ca8:	sub	sp, sp, #24
    3cac:	str	ip, [sp]
    3cb0:	str	lr, [sp, #4]
    3cb4:	str	r4, [sp, #8]
    3cb8:	str	r5, [sp, #12]
    3cbc:	str	r6, [sp, #16]
    3cc0:	ldr	r6, [ip]
    3cc4:	mov	r4, r2
    3cc8:	mov	r5, r0
    3ccc:	mov	r2, #0
    3cd0:	str	r2, [r6]
    3cd4:	cmp	r3, #2
    3cd8:	bcs	3d08 <MyGame_Example_Any_parse_json_union+0x64>
    3cdc:	cmp	r3, #0
    3ce0:	bne	3cf4 <MyGame_Example_Any_parse_json_union+0x50>
    3ce4:	mov	r2, r4
    3ce8:	mov	r0, r5
    3cec:	bl	1250 <flatcc_json_parser_none>
    3cf0:	b	3db8 <MyGame_Example_Any_parse_json_union+0x114>
    3cf4:	mov	r3, r6
    3cf8:	mov	r2, r4
    3cfc:	mov	r0, r5
    3d00:	bl	787c <MyGame_Example_Monster_parse_json_table>
    3d04:	b	3d8c <MyGame_Example_Any_parse_json_union+0xe8>
    3d08:	cmp	r3, #2
    3d0c:	beq	3d7c <MyGame_Example_Any_parse_json_union+0xd8>
    3d10:	cmp	r3, #3
    3d14:	beq	3d68 <MyGame_Example_Any_parse_json_union+0xc4>
    3d18:	cmp	r3, #4
    3d1c:	bne	3d34 <MyGame_Example_Any_parse_json_union+0x90>
    3d20:	mov	r3, r6
    3d24:	mov	r2, r4
    3d28:	mov	r0, r5
    3d2c:	bl	58f0 <MyGame_Example_Alt_parse_json_table>
    3d30:	b	3d8c <MyGame_Example_Any_parse_json_union+0xe8>
    3d34:	ldr	r2, [r5, #8]
    3d38:	and	r3, r2, #1
    3d3c:	cmp	r3, #0
    3d40:	bne	3d58 <MyGame_Example_Any_parse_json_union+0xb4>
    3d44:	mov	r3, #15
    3d48:	mov	r2, r4
    3d4c:	mov	r0, r5
    3d50:	bl	0 <flatcc_json_parser_set_error>
    3d54:	b	3db8 <MyGame_Example_Any_parse_json_union+0x114>
    3d58:	mov	r2, r4
    3d5c:	mov	r0, r5
    3d60:	bl	0 <flatcc_json_parser_generic_json>
    3d64:	b	3db8 <MyGame_Example_Any_parse_json_union+0x114>
    3d68:	mov	r3, r6
    3d6c:	mov	r2, r4
    3d70:	mov	r0, r5
    3d74:	bl	3114 <MyGame_Example2_Monster_parse_json_table>
    3d78:	b	3d8c <MyGame_Example_Any_parse_json_union+0xe8>
    3d7c:	mov	r3, r6
    3d80:	mov	r2, r4
    3d84:	mov	r0, r5
    3d88:	bl	4564 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>
    3d8c:	ldr	ip, [r5, #24]
    3d90:	cmp	ip, #0
    3d94:	bne	3db8 <MyGame_Example_Any_parse_json_union+0x114>
    3d98:	ldr	r1, [r6]
    3d9c:	cmp	r1, #0
    3da0:	bne	3db8 <MyGame_Example_Any_parse_json_union+0x114>
    3da4:	mov	r3, #33	; 0x21
    3da8:	mov	r2, r4
    3dac:	mov	r1, r0
    3db0:	mov	r0, r5
    3db4:	bl	0 <flatcc_json_parser_set_error>
    3db8:	ldr	r4, [sp, #8]
    3dbc:	ldr	r5, [sp, #12]
    3dc0:	ldr	r6, [sp, #16]
    3dc4:	ldr	lr, [sp, #4]
    3dc8:	add	sp, sp, #24
    3dcc:	bx	lr

00003dd0 <MyGame_Example_Any_json_union_accept_type>:
    3dd0:	mov	ip, sp
    3dd4:	sub	sp, sp, #8
    3dd8:	str	ip, [sp]
    3ddc:	str	lr, [sp, #4]
    3de0:	cmp	r0, #2
    3de4:	bcs	3e00 <MyGame_Example_Any_json_union_accept_type+0x30>
    3de8:	cmp	r0, #0
    3dec:	bne	3df8 <MyGame_Example_Any_json_union_accept_type+0x28>
    3df0:	mov	r0, #1
    3df4:	b	3e34 <MyGame_Example_Any_json_union_accept_type+0x64>
    3df8:	mov	r0, #1
    3dfc:	b	3e34 <MyGame_Example_Any_json_union_accept_type+0x64>
    3e00:	cmp	r0, #2
    3e04:	beq	3e30 <MyGame_Example_Any_json_union_accept_type+0x60>
    3e08:	cmp	r0, #3
    3e0c:	beq	3e28 <MyGame_Example_Any_json_union_accept_type+0x58>
    3e10:	cmp	r0, #4
    3e14:	bne	3e20 <MyGame_Example_Any_json_union_accept_type+0x50>
    3e18:	mov	r0, #1
    3e1c:	b	3e34 <MyGame_Example_Any_json_union_accept_type+0x64>
    3e20:	mov	r0, #0
    3e24:	b	3e34 <MyGame_Example_Any_json_union_accept_type+0x64>
    3e28:	mov	r0, #1
    3e2c:	b	3e34 <MyGame_Example_Any_json_union_accept_type+0x64>
    3e30:	mov	r0, #1
    3e34:	ldr	lr, [sp, #4]
    3e38:	add	sp, sp, #8
    3e3c:	bx	lr

00003e40 <MyGame_Example_Any_parse_json_enum>:
    3e40:	mov	ip, sp
    3e44:	sub	sp, sp, #56	; 0x38
    3e48:	str	ip, [sp, #4]
    3e4c:	str	lr, [sp, #8]
    3e50:	str	r4, [sp, #24]
    3e54:	str	r5, [sp, #28]
    3e58:	str	r6, [sp, #32]
    3e5c:	str	r7, [sp, #36]	; 0x24
    3e60:	str	r8, [sp, #40]	; 0x28
    3e64:	str	r9, [sp, #44]	; 0x2c
    3e68:	str	sl, [sp, #48]	; 0x30
    3e6c:	str	fp, [sp, #52]	; 0x34
    3e70:	ldr	ip, [ip, #4]
    3e74:	str	ip, [sp, #20]
    3e78:	ldr	ip, [sp, #4]
    3e7c:	ldr	r7, [ip]
    3e80:	mov	fp, r3
    3e84:	mov	r8, r2
    3e88:	mov	r5, r1
    3e8c:	str	r0, [sp, #16]
    3e90:	mov	r6, r5
    3e94:	mov	r1, r8
    3e98:	mov	r0, r5
    3e9c:	bl	590 <flatcc_json_parser_symbol_part>
    3ea0:	mov	r9, r1
    3ea4:	mov	sl, r0
    3ea8:	mov	r1, sl
    3eac:	mov	r0, r9
    3eb0:	movw	r2, #28275	; 0x6e73
    3eb4:	movt	r2, #19823	; 0x4d6f
    3eb8:	cmp	r0, r2
    3ebc:	bne	3ed4 <MyGame_Example_Any_parse_json_enum+0x94>
    3ec0:	movw	r2, #29184	; 0x7200
    3ec4:	movt	r2, #29797	; 0x7465
    3ec8:	cmp	r1, r2
    3ecc:	bcc	4154 <MyGame_Example_Any_parse_json_enum+0x314>
    3ed0:	b	3ee8 <MyGame_Example_Any_parse_json_enum+0xa8>
    3ed4:	mov	r3, r9
    3ed8:	movw	r2, #28275	; 0x6e73
    3edc:	movt	r2, #19823	; 0x4d6f
    3ee0:	cmp	r3, r2
    3ee4:	bcc	4154 <MyGame_Example_Any_parse_json_enum+0x314>
    3ee8:	mov	r3, r9
    3eec:	eor	r0, r3, #115	; 0x73
    3ef0:	eor	r0, r0, #28160	; 0x6e00
    3ef4:	eor	r0, r0, #7274496	; 0x6f0000
    3ef8:	eor	r0, r0, #1291845632	; 0x4d000000
    3efc:	mov	r2, sl
    3f00:	eor	ip, r2, #50	; 0x32
    3f04:	eor	ip, ip, #29184	; 0x7200
    3f08:	eor	ip, ip, #6619136	; 0x650000
    3f0c:	eor	ip, ip, #1946157056	; 0x74000000
    3f10:	orr	r1, r0, ip
    3f14:	cmp	r1, #0
    3f18:	beq	3f98 <MyGame_Example_Any_parse_json_enum+0x158>
    3f1c:	mov	r2, r9
    3f20:	mov	r3, sl
    3f24:	bic	ip, r3, #255	; 0xff
    3f28:	eor	r1, r2, #115	; 0x73
    3f2c:	eor	r1, r1, #28160	; 0x6e00
    3f30:	eor	r1, r1, #7274496	; 0x6f0000
    3f34:	eor	r1, r1, #1291845632	; 0x4d000000
    3f38:	eor	r2, ip, #29184	; 0x7200
    3f3c:	eor	r2, r2, #6619136	; 0x650000
    3f40:	eor	r2, r2, #1946157056	; 0x74000000
    3f44:	orr	r0, r1, r2
    3f48:	cmp	r0, #0
    3f4c:	bne	3fe0 <MyGame_Example_Any_parse_json_enum+0x1a0>
    3f50:	mov	r1, r5
    3f54:	mov	r4, r1
    3f58:	mov	r3, #7
    3f5c:	ldr	ip, [sp, #20]
    3f60:	str	ip, [sp]
    3f64:	mov	r2, r8
    3f68:	ldr	r0, [sp, #16]
    3f6c:	bl	0 <flatcc_json_parser_match_constant>
    3f70:	mov	r5, r0
    3f74:	cmp	r5, r4
    3f78:	beq	3fe0 <MyGame_Example_Any_parse_json_enum+0x1a0>
    3f7c:	mov	ip, #0
    3f80:	mov	r3, #1
    3f84:	str	r3, [r7]
    3f88:	str	ip, [r7, #4]
    3f8c:	mov	ip, #0
    3f90:	str	ip, [fp]
    3f94:	b	41b8 <MyGame_Example_Any_parse_json_enum+0x378>
    3f98:	mov	r1, r5
    3f9c:	mov	r4, r1
    3fa0:	mov	r3, #8
    3fa4:	ldr	ip, [sp, #20]
    3fa8:	str	ip, [sp]
    3fac:	mov	r2, r8
    3fb0:	ldr	r0, [sp, #16]
    3fb4:	bl	0 <flatcc_json_parser_match_constant>
    3fb8:	mov	r5, r0
    3fbc:	cmp	r5, r4
    3fc0:	beq	3fe0 <MyGame_Example_Any_parse_json_enum+0x1a0>
    3fc4:	mov	r0, #0
    3fc8:	mov	ip, #3
    3fcc:	str	ip, [r7]
    3fd0:	str	r0, [r7, #4]
    3fd4:	mov	r2, #0
    3fd8:	str	r2, [fp]
    3fdc:	b	41b8 <MyGame_Example_Any_parse_json_enum+0x378>
    3fe0:	mov	r3, r9
    3fe4:	mov	r0, #0
    3fe8:	eor	r1, r3, #69	; 0x45
    3fec:	eor	r1, r1, #19968	; 0x4e00
    3ff0:	eor	r1, r1, #5177344	; 0x4f0000
    3ff4:	eor	r1, r1, #1308622848	; 0x4e000000
    3ff8:	orr	r0, r1, r0
    3ffc:	cmp	r0, #0
    4000:	bne	404c <MyGame_Example_Any_parse_json_enum+0x20c>
    4004:	mov	r4, r5
    4008:	mov	r3, #4
    400c:	ldr	ip, [sp, #20]
    4010:	str	ip, [sp]
    4014:	mov	r2, r8
    4018:	mov	r1, r4
    401c:	ldr	r0, [sp, #16]
    4020:	bl	0 <flatcc_json_parser_match_constant>
    4024:	mov	r5, r0
    4028:	cmp	r5, r4
    402c:	beq	404c <MyGame_Example_Any_parse_json_enum+0x20c>
    4030:	mov	r3, #0
    4034:	mov	r2, #0
    4038:	str	r2, [r7]
    403c:	str	r3, [r7, #4]
    4040:	mov	r1, #0
    4044:	str	r1, [fp]
    4048:	b	41b8 <MyGame_Example_Any_parse_json_enum+0x378>
    404c:	eor	r1, r9, #884	; 0x374
    4050:	eor	r1, r1, #356352	; 0x57000
    4054:	eor	r1, r1, #73400320	; 0x4600000
    4058:	eor	r1, r1, #1342177280	; 0x50000000
    405c:	eor	r0, sl, #3440	; 0xd70
    4060:	eor	r0, r0, #614400	; 0x96000
    4064:	eor	r0, r0, #56623104	; 0x3600000
    4068:	eor	r0, r0, #1342177280	; 0x50000000
    406c:	orr	r3, r1, r0
    4070:	cmp	r3, #0
    4074:	bne	414c <MyGame_Example_Any_parse_json_enum+0x30c>
    4078:	add	r4, r5, #8
    407c:	mov	r1, r8
    4080:	mov	r0, r4
    4084:	bl	590 <flatcc_json_parser_symbol_part>
    4088:	eor	r1, r1, #97	; 0x61
    408c:	eor	r1, r1, #87040	; 0x15400
    4090:	eor	r1, r1, #6553600	; 0x640000
    4094:	eor	r1, r1, #1811939328	; 0x6c000000
    4098:	eor	r0, r0, #87	; 0x57
    409c:	eor	r0, r0, #25856	; 0x6500
    40a0:	eor	r0, r0, #40632320	; 0x26c0000
    40a4:	eor	r0, r0, #1610612736	; 0x60000000
    40a8:	orr	r0, r1, r0
    40ac:	cmp	r0, #0
    40b0:	bne	4144 <MyGame_Example_Any_parse_json_enum+0x304>
    40b4:	add	r4, r4, #8
    40b8:	mov	r1, r8
    40bc:	mov	r0, r4
    40c0:	bl	590 <flatcc_json_parser_symbol_part>
    40c4:	bic	r0, r0, #255	; 0xff
    40c8:	eor	r3, r1, #69	; 0x45
    40cc:	eor	r3, r3, #26624	; 0x6800
    40d0:	eor	r3, r3, #24379392	; 0x1740000
    40d4:	eor	r3, r3, #1744830464	; 0x68000000
    40d8:	eor	r2, r0, #27904	; 0x6d00
    40dc:	eor	r2, r2, #7667712	; 0x750000
    40e0:	eor	r2, r2, #1845493760	; 0x6e000000
    40e4:	orr	ip, r3, r2
    40e8:	cmp	ip, #0
    40ec:	bne	413c <MyGame_Example_Any_parse_json_enum+0x2fc>
    40f0:	mov	r3, #7
    40f4:	ldr	ip, [sp, #20]
    40f8:	str	ip, [sp]
    40fc:	mov	r2, r8
    4100:	mov	r1, r4
    4104:	ldr	r0, [sp, #16]
    4108:	bl	0 <flatcc_json_parser_match_constant>
    410c:	mov	r5, r0
    4110:	cmp	r5, r4
    4114:	beq	4134 <MyGame_Example_Any_parse_json_enum+0x2f4>
    4118:	mov	r2, #0
    411c:	mov	r1, #2
    4120:	str	r1, [r7]
    4124:	str	r2, [r7, #4]
    4128:	mov	r0, #0
    412c:	str	r0, [fp]
    4130:	b	41b8 <MyGame_Example_Any_parse_json_enum+0x378>
    4134:	mov	r0, r6
    4138:	b	41cc <MyGame_Example_Any_parse_json_enum+0x38c>
    413c:	mov	r0, r6
    4140:	b	41cc <MyGame_Example_Any_parse_json_enum+0x38c>
    4144:	mov	r0, r6
    4148:	b	41cc <MyGame_Example_Any_parse_json_enum+0x38c>
    414c:	mov	r0, r6
    4150:	b	41cc <MyGame_Example_Any_parse_json_enum+0x38c>
    4154:	bic	r2, r9, #255	; 0xff
    4158:	mov	r1, #0
    415c:	eor	ip, r2, #29696	; 0x7400
    4160:	eor	ip, ip, #23855104	; 0x16c0000
    4164:	eor	ip, ip, #1073741824	; 0x40000000
    4168:	orr	r3, ip, r1
    416c:	cmp	r3, #0
    4170:	bne	41c8 <MyGame_Example_Any_parse_json_enum+0x388>
    4174:	mov	r4, r5
    4178:	mov	r3, #3
    417c:	ldr	ip, [sp, #20]
    4180:	str	ip, [sp]
    4184:	mov	r2, r8
    4188:	mov	r1, r4
    418c:	ldr	r0, [sp, #16]
    4190:	bl	0 <flatcc_json_parser_match_constant>
    4194:	mov	r5, r0
    4198:	cmp	r5, r4
    419c:	beq	41c0 <MyGame_Example_Any_parse_json_enum+0x380>
    41a0:	mov	ip, #0
    41a4:	mov	r3, #4
    41a8:	str	r3, [r7]
    41ac:	str	ip, [r7, #4]
    41b0:	mov	r2, #0
    41b4:	str	r2, [fp]
    41b8:	mov	r0, r5
    41bc:	b	41cc <MyGame_Example_Any_parse_json_enum+0x38c>
    41c0:	mov	r0, r6
    41c4:	b	41cc <MyGame_Example_Any_parse_json_enum+0x38c>
    41c8:	mov	r0, r6
    41cc:	ldr	r4, [sp, #24]
    41d0:	ldr	r5, [sp, #28]
    41d4:	ldr	r6, [sp, #32]
    41d8:	ldr	r7, [sp, #36]	; 0x24
    41dc:	ldr	r8, [sp, #40]	; 0x28
    41e0:	ldr	r9, [sp, #44]	; 0x2c
    41e4:	ldr	sl, [sp, #48]	; 0x30
    41e8:	ldr	fp, [sp, #52]	; 0x34
    41ec:	ldr	lr, [sp, #8]
    41f0:	add	sp, sp, #56	; 0x38
    41f4:	bx	lr

000041f8 <MyGame_Example_Test_parse_json_struct_inline>:
    41f8:	mov	ip, sp
    41fc:	sub	sp, sp, #48	; 0x30
    4200:	str	ip, [sp, #4]
    4204:	str	lr, [sp, #8]
    4208:	str	r4, [sp, #16]
    420c:	str	r5, [sp, #20]
    4210:	str	r6, [sp, #24]
    4214:	str	r7, [sp, #28]
    4218:	str	r8, [sp, #32]
    421c:	str	r9, [sp, #36]	; 0x24
    4220:	mov	r4, r3
    4224:	mov	r6, r2
    4228:	mov	r8, r0
    422c:	add	r3, sp, #44	; 0x2c
    4230:	mov	r2, r6
    4234:	mov	r0, r8
    4238:	bl	64c <flatcc_json_parser_object_start>
    423c:	mov	r1, r0
    4240:	ldr	r3, [sp, #44]	; 0x2c
    4244:	cmp	r3, #0
    4248:	beq	4460 <MyGame_Example_Test_parse_json_struct_inline+0x268>
    424c:	mov	r2, r6
    4250:	mov	r0, r8
    4254:	bl	460 <flatcc_json_parser_symbol_start>
    4258:	mov	r5, r0
    425c:	mov	r1, r6
    4260:	mov	r0, r5
    4264:	bl	590 <flatcc_json_parser_symbol_part>
    4268:	mov	r3, r1
    426c:	and	r3, r3, #-16777216	; 0xff000000
    4270:	mov	r2, #0
    4274:	eor	ip, r3, #1644167168	; 0x62000000
    4278:	orr	r2, ip, r2
    427c:	cmp	r2, #0
    4280:	beq	4370 <MyGame_Example_Test_parse_json_struct_inline+0x178>
    4284:	and	r0, r1, #-16777216	; 0xff000000
    4288:	mov	r1, #0
    428c:	eor	r2, r0, #1627389952	; 0x61000000
    4290:	orr	r3, r2, r1
    4294:	cmp	r3, #0
    4298:	bne	4358 <MyGame_Example_Test_parse_json_struct_inline+0x160>
    429c:	mov	r3, #1
    42a0:	mov	r2, r6
    42a4:	mov	r1, r5
    42a8:	mov	r0, r8
    42ac:	bl	a5c <flatcc_json_parser_match_symbol>
    42b0:	mov	r7, r0
    42b4:	cmp	r5, r7
    42b8:	beq	4340 <MyGame_Example_Test_parse_json_struct_inline+0x148>
    42bc:	mov	r1, #0
    42c0:	strh	r1, [sp, #42]	; 0x2a
    42c4:	add	r3, sp, #42	; 0x2a
    42c8:	mov	r2, r6
    42cc:	mov	r1, r7
    42d0:	mov	r0, r8
    42d4:	bl	1790 <flatcc_json_parser_int16>
    42d8:	mov	r5, r0
    42dc:	cmp	r7, r5
    42e0:	bne	432c <MyGame_Example_Test_parse_json_struct_inline+0x134>
    42e4:	mov	r1, r5
    42e8:	mov	r7, r1
    42ec:	ldr	r3, [pc, #404]	; 4488 <MyGame_Example_Test_parse_json_struct_inline+0x290>
    42f0:	add	r0, sp, #42	; 0x2a
    42f4:	str	r0, [sp]
    42f8:	mov	r2, r6
    42fc:	mov	r0, r8
    4300:	bl	2544 <flatcc_json_parser_symbolic_int16>
    4304:	mov	r5, r0
    4308:	cmp	r5, r7
    430c:	beq	4320 <MyGame_Example_Test_parse_json_struct_inline+0x128>
    4310:	cmp	r5, r6
    4314:	moveq	r2, #1
    4318:	movne	r2, #0
    431c:	b	4324 <MyGame_Example_Test_parse_json_struct_inline+0x12c>
    4320:	mov	r2, #1
    4324:	cmp	r2, #0
    4328:	bne	4404 <MyGame_Example_Test_parse_json_struct_inline+0x20c>
    432c:	ldrsh	r1, [sp, #42]	; 0x2a
    4330:	sbfx	r1, r1, #0, #16
    4334:	mov	r0, r4
    4338:	bl	1f0 <flatbuffers_int16_write_to_pe>
    433c:	b	4444 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4340:	mov	r2, r6
    4344:	mov	r1, r7
    4348:	mov	r0, r8
    434c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4350:	mov	r5, r0
    4354:	b	4444 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4358:	mov	r2, r6
    435c:	mov	r1, r5
    4360:	mov	r0, r8
    4364:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4368:	mov	r5, r0
    436c:	b	4444 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4370:	mov	r3, #1
    4374:	mov	r2, r6
    4378:	mov	r1, r5
    437c:	mov	r0, r8
    4380:	bl	a5c <flatcc_json_parser_match_symbol>
    4384:	mov	r7, r0
    4388:	cmp	r5, r7
    438c:	beq	4430 <MyGame_Example_Test_parse_json_struct_inline+0x238>
    4390:	mov	ip, #0
    4394:	strb	ip, [sp, #40]	; 0x28
    4398:	add	r9, r4, #2
    439c:	add	r3, sp, #40	; 0x28
    43a0:	mov	r2, r6
    43a4:	mov	r1, r7
    43a8:	mov	r0, r8
    43ac:	bl	1854 <flatcc_json_parser_int8>
    43b0:	mov	r5, r0
    43b4:	cmp	r7, r5
    43b8:	bne	441c <MyGame_Example_Test_parse_json_struct_inline+0x224>
    43bc:	mov	r1, r5
    43c0:	mov	r7, r1
    43c4:	ldr	r3, [pc, #192]	; 448c <MyGame_Example_Test_parse_json_struct_inline+0x294>
    43c8:	add	r2, sp, #40	; 0x28
    43cc:	str	r2, [sp]
    43d0:	mov	r2, r6
    43d4:	mov	r0, r8
    43d8:	bl	2714 <flatcc_json_parser_symbolic_int8>
    43dc:	mov	r5, r0
    43e0:	cmp	r5, r7
    43e4:	beq	43f8 <MyGame_Example_Test_parse_json_struct_inline+0x200>
    43e8:	cmp	r5, r6
    43ec:	moveq	r3, #1
    43f0:	movne	r3, #0
    43f4:	b	43fc <MyGame_Example_Test_parse_json_struct_inline+0x204>
    43f8:	mov	r3, #1
    43fc:	cmp	r3, #0
    4400:	beq	441c <MyGame_Example_Test_parse_json_struct_inline+0x224>
    4404:	mov	r3, #33	; 0x21
    4408:	mov	r2, r6
    440c:	mov	r1, r5
    4410:	mov	r0, r8
    4414:	bl	0 <flatcc_json_parser_set_error>
    4418:	b	4464 <MyGame_Example_Test_parse_json_struct_inline+0x26c>
    441c:	ldrsb	r3, [sp, #40]	; 0x28
    4420:	sbfx	r1, r3, #0, #8
    4424:	mov	r0, r9
    4428:	bl	18c <flatbuffers_int8_write_to_pe>
    442c:	b	4444 <MyGame_Example_Test_parse_json_struct_inline+0x24c>
    4430:	mov	r2, r6
    4434:	mov	r1, r7
    4438:	mov	r0, r8
    443c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4440:	mov	r5, r0
    4444:	add	r3, sp, #44	; 0x2c
    4448:	mov	r2, r6
    444c:	mov	r1, r5
    4450:	mov	r0, r8
    4454:	bl	72c <flatcc_json_parser_object_end>
    4458:	mov	r1, r0
    445c:	b	4240 <MyGame_Example_Test_parse_json_struct_inline+0x48>
    4460:	mov	r0, r1
    4464:	ldr	r4, [sp, #16]
    4468:	ldr	r5, [sp, #20]
    446c:	ldr	r6, [sp, #24]
    4470:	ldr	r7, [sp, #28]
    4474:	ldr	r8, [sp, #32]
    4478:	ldr	r9, [sp, #36]	; 0x24
    447c:	ldr	lr, [sp, #8]
    4480:	add	sp, sp, #48	; 0x30
    4484:	bx	lr
    4488:	.word	0x0000000c
    448c:	.word	0x00000000

00004490 <MyGame_Example_notemptyenum_parse_json_enum>:
    4490:	mov	ip, sp
    4494:	sub	sp, sp, #48	; 0x30
    4498:	str	ip, [sp, #4]
    449c:	str	lr, [sp, #8]
    44a0:	str	r4, [sp, #16]
    44a4:	str	r5, [sp, #20]
    44a8:	str	r6, [sp, #24]
    44ac:	str	r7, [sp, #28]
    44b0:	str	r8, [sp, #32]
    44b4:	str	r9, [sp, #36]	; 0x24
    44b8:	str	sl, [sp, #40]	; 0x28
    44bc:	ldr	r9, [ip, #4]
    44c0:	ldr	r7, [ip]
    44c4:	mov	r6, r3
    44c8:	mov	sl, r2
    44cc:	mov	r4, r1
    44d0:	mov	r8, r0
    44d4:	mov	r5, r4
    44d8:	mov	r1, sl
    44dc:	mov	r0, r4
    44e0:	bl	590 <flatcc_json_parser_symbol_part>
    44e4:	and	r2, r1, #-16777216	; 0xff000000
    44e8:	mov	ip, #0
    44ec:	eor	r3, r2, #2013265920	; 0x78000000
    44f0:	orr	ip, r3, ip
    44f4:	cmp	ip, #0
    44f8:	bne	4538 <MyGame_Example_notemptyenum_parse_json_enum+0xa8>
    44fc:	mov	r3, #1
    4500:	str	r9, [sp]
    4504:	mov	r2, sl
    4508:	mov	r1, r4
    450c:	mov	r0, r8
    4510:	bl	0 <flatcc_json_parser_match_constant>
    4514:	cmp	r0, r4
    4518:	beq	4538 <MyGame_Example_notemptyenum_parse_json_enum+0xa8>
    451c:	mov	r2, #0
    4520:	mov	r1, #0
    4524:	str	r1, [r7]
    4528:	str	r2, [r7, #4]
    452c:	mov	r3, #0
    4530:	str	r3, [r6]
    4534:	mov	r5, r0
    4538:	mov	r0, r5
    453c:	ldr	r4, [sp, #16]
    4540:	ldr	r5, [sp, #20]
    4544:	ldr	r6, [sp, #24]
    4548:	ldr	r7, [sp, #28]
    454c:	ldr	r8, [sp, #32]
    4550:	ldr	r9, [sp, #36]	; 0x24
    4554:	ldr	sl, [sp, #40]	; 0x28
    4558:	ldr	lr, [sp, #8]
    455c:	add	sp, sp, #48	; 0x30
    4560:	bx	lr

00004564 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table>:
    4564:	mov	ip, sp
    4568:	sub	sp, sp, #48	; 0x30
    456c:	str	ip, [sp, #4]
    4570:	str	lr, [sp, #8]
    4574:	str	r4, [sp, #16]
    4578:	str	r5, [sp, #20]
    457c:	str	r6, [sp, #24]
    4580:	str	r7, [sp, #28]
    4584:	str	r8, [sp, #32]
    4588:	str	r9, [sp, #36]	; 0x24
    458c:	mov	r7, r3
    4590:	mov	r5, r2
    4594:	mov	r4, r1
    4598:	mov	r6, r0
    459c:	mov	r1, #0
    45a0:	str	r1, [r7]
    45a4:	ldr	r0, [r6]
    45a8:	mov	r1, #4
    45ac:	bl	0 <flatcc_builder_start_table>
    45b0:	cmp	r0, #0
    45b4:	bne	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    45b8:	add	r3, sp, #44	; 0x2c
    45bc:	mov	r2, r5
    45c0:	mov	r1, r4
    45c4:	mov	r0, r6
    45c8:	bl	64c <flatcc_json_parser_object_start>
    45cc:	mov	r4, r0
    45d0:	ldr	r3, [sp, #44]	; 0x2c
    45d4:	cmp	r3, #0
    45d8:	beq	4ab0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x54c>
    45dc:	mov	r2, r5
    45e0:	mov	r1, r4
    45e4:	mov	r0, r6
    45e8:	bl	460 <flatcc_json_parser_symbol_start>
    45ec:	mov	r8, r0
    45f0:	mov	r1, r5
    45f4:	mov	r0, r8
    45f8:	bl	590 <flatcc_json_parser_symbol_part>
    45fc:	mov	r4, r1
    4600:	mov	r2, r4
    4604:	mov	r1, r0
    4608:	bic	r1, r1, #255	; 0xff
    460c:	bic	r1, r1, #65280	; 0xff00
    4610:	eor	r3, r2, #111	; 0x6f
    4614:	eor	r3, r3, #224256	; 0x36c00
    4618:	eor	r3, r3, #57409536	; 0x36c0000
    461c:	eor	r3, r3, #1610612736	; 0x60000000
    4620:	eor	ip, r1, #3276800	; 0x320000
    4624:	eor	ip, ip, #1912602624	; 0x72000000
    4628:	orr	r1, r3, ip
    462c:	cmp	r1, #0
    4630:	beq	474c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1e8>
    4634:	mov	r1, r4
    4638:	and	r3, r0, #-16777216	; 0xff000000
    463c:	eor	r2, r1, #111	; 0x6f
    4640:	eor	r2, r2, #224256	; 0x36c00
    4644:	eor	r2, r2, #57409536	; 0x36c0000
    4648:	eor	r2, r2, #1610612736	; 0x60000000
    464c:	eor	r1, r3, #1912602624	; 0x72000000
    4650:	orr	r0, r2, r1
    4654:	cmp	r0, #0
    4658:	bne	483c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    465c:	mov	r9, r8
    4660:	mov	r3, #5
    4664:	mov	r2, r5
    4668:	mov	r1, r8
    466c:	mov	r0, r6
    4670:	bl	a5c <flatcc_json_parser_match_symbol>
    4674:	mov	r8, r0
    4678:	cmp	r9, r8
    467c:	beq	483c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    4680:	mov	r3, #0
    4684:	strb	r3, [sp, #42]	; 0x2a
    4688:	add	r3, sp, #42	; 0x2a
    468c:	mov	r2, r5
    4690:	mov	r1, r8
    4694:	mov	r0, r6
    4698:	bl	1854 <flatcc_json_parser_int8>
    469c:	mov	r4, r0
    46a0:	cmp	r8, r4
    46a4:	bne	46f0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x18c>
    46a8:	mov	r8, r4
    46ac:	ldr	r3, [pc, #1128]	; 4b1c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b8>
    46b0:	add	r0, sp, #42	; 0x2a
    46b4:	str	r0, [sp]
    46b8:	mov	r2, r5
    46bc:	mov	r1, r4
    46c0:	mov	r0, r6
    46c4:	bl	2714 <flatcc_json_parser_symbolic_int8>
    46c8:	mov	r4, r0
    46cc:	cmp	r4, r8
    46d0:	beq	46e4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x180>
    46d4:	cmp	r4, r5
    46d8:	moveq	r3, #1
    46dc:	movne	r3, #0
    46e0:	b	46e8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x184>
    46e4:	mov	r3, #1
    46e8:	cmp	r3, #0
    46ec:	bne	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    46f0:	ldrsb	r2, [sp, #42]	; 0x2a
    46f4:	cmp	r2, #2
    46f8:	bne	4714 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1b0>
    46fc:	ldr	r3, [r6, #8]
    4700:	and	r3, r3, #2
    4704:	cmp	r3, #0
    4708:	movne	ip, #1
    470c:	moveq	ip, #0
    4710:	b	4718 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x1b4>
    4714:	mov	ip, #1
    4718:	cmp	ip, #0
    471c:	beq	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4720:	ldr	r0, [r6]
    4724:	mov	r1, #0
    4728:	mov	r2, #1
    472c:	mov	r3, #1
    4730:	bl	0 <flatcc_builder_table_add>
    4734:	cmp	r0, #0
    4738:	beq	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    473c:	ldrsb	r1, [sp, #42]	; 0x2a
    4740:	sbfx	r1, r1, #0, #8
    4744:	bl	18c <flatbuffers_int8_write_to_pe>
    4748:	b	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    474c:	mov	r9, r8
    4750:	mov	r3, #6
    4754:	mov	r2, r5
    4758:	mov	r1, r8
    475c:	mov	r0, r6
    4760:	bl	a5c <flatcc_json_parser_match_symbol>
    4764:	mov	r8, r0
    4768:	cmp	r9, r8
    476c:	beq	483c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2d8>
    4770:	mov	r0, #0
    4774:	strb	r0, [sp, #41]	; 0x29
    4778:	add	r3, sp, #41	; 0x29
    477c:	mov	r2, r5
    4780:	mov	r1, r8
    4784:	mov	r0, r6
    4788:	bl	1854 <flatcc_json_parser_int8>
    478c:	mov	r4, r0
    4790:	cmp	r8, r4
    4794:	bne	47e0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x27c>
    4798:	mov	r1, r4
    479c:	mov	r8, r1
    47a0:	ldr	r3, [pc, #872]	; 4b10 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5ac>
    47a4:	add	r0, sp, #41	; 0x29
    47a8:	str	r0, [sp]
    47ac:	mov	r2, r5
    47b0:	mov	r0, r6
    47b4:	bl	2714 <flatcc_json_parser_symbolic_int8>
    47b8:	mov	r4, r0
    47bc:	cmp	r4, r8
    47c0:	beq	47d4 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x270>
    47c4:	cmp	r4, r5
    47c8:	moveq	ip, #1
    47cc:	movne	ip, #0
    47d0:	b	47d8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x274>
    47d4:	mov	ip, #1
    47d8:	cmp	ip, #0
    47dc:	bne	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    47e0:	ldrsb	r2, [sp, #41]	; 0x29
    47e4:	cmp	r2, #2
    47e8:	bne	4804 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2a0>
    47ec:	ldr	r2, [r6, #8]
    47f0:	and	r2, r2, #2
    47f4:	cmp	r2, #0
    47f8:	movne	r0, #1
    47fc:	moveq	r0, #0
    4800:	b	4808 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x2a4>
    4804:	mov	r0, #1
    4808:	cmp	r0, #0
    480c:	beq	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4810:	ldr	r0, [r6]
    4814:	mov	r1, #1
    4818:	mov	r2, #1
    481c:	mov	r3, #1
    4820:	bl	0 <flatcc_builder_table_add>
    4824:	cmp	r0, #0
    4828:	beq	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    482c:	ldrsb	r1, [sp, #41]	; 0x29
    4830:	sbfx	r1, r1, #0, #8
    4834:	bl	18c <flatbuffers_int8_write_to_pe>
    4838:	b	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    483c:	mov	r2, r4
    4840:	bic	r0, r2, #255	; 0xff
    4844:	mov	ip, #0
    4848:	eor	r0, r0, #12800	; 0x3200
    484c:	eor	r0, r0, #6488064	; 0x630000
    4850:	eor	r0, r0, #1962934272	; 0x75000000
    4854:	orr	r0, r0, ip
    4858:	cmp	r0, #0
    485c:	beq	4998 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x434>
    4860:	bic	ip, r4, #255	; 0xff
    4864:	bic	ip, ip, #65280	; 0xff00
    4868:	mov	r3, #0
    486c:	eor	ip, ip, #6488064	; 0x630000
    4870:	eor	ip, ip, #1962934272	; 0x75000000
    4874:	orr	ip, ip, r3
    4878:	cmp	ip, #0
    487c:	bne	4980 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x41c>
    4880:	mov	r3, #2
    4884:	mov	r2, r5
    4888:	mov	r1, r8
    488c:	mov	r0, r6
    4890:	bl	a5c <flatcc_json_parser_match_symbol>
    4894:	mov	r1, r0
    4898:	cmp	r8, r1
    489c:	beq	496c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x408>
    48a0:	mov	r2, #0
    48a4:	strb	r2, [sp, #40]	; 0x28
    48a8:	mov	r8, r1
    48ac:	add	r3, sp, #40	; 0x28
    48b0:	mov	r2, r5
    48b4:	mov	r0, r6
    48b8:	bl	153c <flatcc_json_parser_uint8>
    48bc:	mov	r4, r0
    48c0:	cmp	r8, r4
    48c4:	bne	4910 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3ac>
    48c8:	mov	r8, r4
    48cc:	ldr	r3, [pc, #580]	; 4b18 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b4>
    48d0:	add	ip, sp, #40	; 0x28
    48d4:	str	ip, [sp]
    48d8:	mov	r2, r5
    48dc:	mov	r1, r4
    48e0:	mov	r0, r6
    48e4:	bl	1fb8 <flatcc_json_parser_symbolic_uint8>
    48e8:	mov	r4, r0
    48ec:	cmp	r4, r8
    48f0:	beq	4904 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3a0>
    48f4:	cmp	r4, r5
    48f8:	moveq	r1, #1
    48fc:	movne	r1, #0
    4900:	b	4908 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3a4>
    4904:	mov	r1, #1
    4908:	cmp	r1, #0
    490c:	bne	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4910:	ldrb	r1, [sp, #40]	; 0x28
    4914:	cmp	r1, #2
    4918:	bne	4934 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3d0>
    491c:	ldr	r2, [r6, #8]
    4920:	and	r0, r2, #2
    4924:	cmp	r0, #0
    4928:	movne	r2, #1
    492c:	moveq	r2, #0
    4930:	b	4938 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x3d4>
    4934:	mov	r2, #1
    4938:	cmp	r2, #0
    493c:	beq	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4940:	ldr	r0, [r6]
    4944:	mov	r1, #2
    4948:	mov	r2, #1
    494c:	mov	r3, #1
    4950:	bl	0 <flatcc_builder_table_add>
    4954:	cmp	r0, #0
    4958:	beq	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    495c:	ldrb	r3, [sp, #40]	; 0x28
    4960:	and	r1, r3, #255	; 0xff
    4964:	bl	20 <flatbuffers_uint8_write_to_pe>
    4968:	b	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    496c:	mov	r2, r5
    4970:	mov	r0, r6
    4974:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4978:	mov	r4, r0
    497c:	b	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4980:	mov	r2, r5
    4984:	mov	r1, r8
    4988:	mov	r0, r6
    498c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4990:	mov	r4, r0
    4994:	b	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4998:	mov	r3, #3
    499c:	mov	r2, r5
    49a0:	mov	r1, r8
    49a4:	mov	r0, r6
    49a8:	bl	a5c <flatcc_json_parser_match_symbol>
    49ac:	mov	r1, r0
    49b0:	cmp	r8, r1
    49b4:	beq	4a84 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x520>
    49b8:	mov	r2, #0
    49bc:	strb	r2, [sp, #43]	; 0x2b
    49c0:	mov	r8, r1
    49c4:	add	r3, sp, #43	; 0x2b
    49c8:	mov	r2, r5
    49cc:	mov	r0, r6
    49d0:	bl	153c <flatcc_json_parser_uint8>
    49d4:	mov	r4, r0
    49d8:	cmp	r8, r4
    49dc:	bne	4a28 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4c4>
    49e0:	mov	r8, r4
    49e4:	ldr	r3, [pc, #296]	; 4b14 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x5b0>
    49e8:	add	r0, sp, #43	; 0x2b
    49ec:	str	r0, [sp]
    49f0:	mov	r2, r5
    49f4:	mov	r1, r4
    49f8:	mov	r0, r6
    49fc:	bl	1fb8 <flatcc_json_parser_symbolic_uint8>
    4a00:	mov	r4, r0
    4a04:	cmp	r4, r8
    4a08:	beq	4a1c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4b8>
    4a0c:	cmp	r4, r5
    4a10:	moveq	ip, #1
    4a14:	movne	ip, #0
    4a18:	b	4a20 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4bc>
    4a1c:	mov	ip, #1
    4a20:	cmp	ip, #0
    4a24:	bne	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4a28:	ldrb	ip, [sp, #43]	; 0x2b
    4a2c:	cmp	ip, #2
    4a30:	bne	4a4c <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4e8>
    4a34:	ldr	r0, [r6, #8]
    4a38:	and	r3, r0, #2
    4a3c:	cmp	r3, #0
    4a40:	movne	ip, #1
    4a44:	moveq	ip, #0
    4a48:	b	4a50 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x4ec>
    4a4c:	mov	ip, #1
    4a50:	cmp	ip, #0
    4a54:	beq	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4a58:	ldr	r0, [r6]
    4a5c:	mov	r1, #3
    4a60:	mov	r2, #1
    4a64:	mov	r3, #1
    4a68:	bl	0 <flatcc_builder_table_add>
    4a6c:	cmp	r0, #0
    4a70:	beq	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4a74:	ldrb	r2, [sp, #43]	; 0x2b
    4a78:	and	r1, r2, #255	; 0xff
    4a7c:	bl	20 <flatbuffers_uint8_write_to_pe>
    4a80:	b	4a94 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x530>
    4a84:	mov	r2, r5
    4a88:	mov	r0, r6
    4a8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4a90:	mov	r4, r0
    4a94:	add	r3, sp, #44	; 0x2c
    4a98:	mov	r2, r5
    4a9c:	mov	r1, r4
    4aa0:	mov	r0, r6
    4aa4:	bl	72c <flatcc_json_parser_object_end>
    4aa8:	mov	r4, r0
    4aac:	b	45d0 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x6c>
    4ab0:	ldr	r1, [r6, #24]
    4ab4:	cmp	r1, #0
    4ab8:	bne	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4abc:	ldr	r0, [r6]
    4ac0:	bl	0 <flatcc_builder_end_table>
    4ac4:	str	r0, [r7]
    4ac8:	cmp	r0, #0
    4acc:	beq	4ad8 <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x574>
    4ad0:	mov	r0, r4
    4ad4:	b	4aec <MyGame_Example_TestSimpleTableWithEnum_parse_json_table+0x588>
    4ad8:	mov	r3, #33	; 0x21
    4adc:	mov	r2, r5
    4ae0:	mov	r1, r4
    4ae4:	mov	r0, r6
    4ae8:	bl	0 <flatcc_json_parser_set_error>
    4aec:	ldr	r4, [sp, #16]
    4af0:	ldr	r5, [sp, #20]
    4af4:	ldr	r6, [sp, #24]
    4af8:	ldr	r7, [sp, #28]
    4afc:	ldr	r8, [sp, #32]
    4b00:	ldr	r9, [sp, #36]	; 0x24
    4b04:	ldr	lr, [sp, #8]
    4b08:	add	sp, sp, #48	; 0x30
    4b0c:	bx	lr
    4b10:	.word	0x00000018
    4b14:	.word	0x00000038
    4b18:	.word	0x00000044
    4b1c:	.word	0x00000028

00004b20 <MyGame_Example_Vec3_parse_json_struct_inline>:
    4b20:	mov	ip, sp
    4b24:	sub	sp, sp, #72	; 0x48
    4b28:	str	ip, [sp, #4]
    4b2c:	str	lr, [sp, #8]
    4b30:	str	r4, [sp, #16]
    4b34:	str	r5, [sp, #20]
    4b38:	str	r6, [sp, #24]
    4b3c:	str	r7, [sp, #28]
    4b40:	str	r8, [sp, #32]
    4b44:	str	r9, [sp, #36]	; 0x24
    4b48:	mov	r7, r3
    4b4c:	mov	r5, r2
    4b50:	mov	r6, r0
    4b54:	add	r3, sp, #52	; 0x34
    4b58:	mov	r2, r5
    4b5c:	mov	r0, r6
    4b60:	bl	64c <flatcc_json_parser_object_start>
    4b64:	ldr	r1, [sp, #52]	; 0x34
    4b68:	cmp	r1, #0
    4b6c:	beq	5188 <MyGame_Example_Vec3_parse_json_struct_inline+0x668>
    4b70:	mov	r2, r5
    4b74:	mov	r1, r0
    4b78:	mov	r0, r6
    4b7c:	bl	460 <flatcc_json_parser_symbol_start>
    4b80:	mov	r4, r0
    4b84:	mov	r1, r5
    4b88:	mov	r0, r4
    4b8c:	bl	590 <flatcc_json_parser_symbol_part>
    4b90:	mov	r3, r1
    4b94:	movw	ip, #29556	; 0x7374
    4b98:	movt	ip, #29797	; 0x7465
    4b9c:	cmp	r3, ip
    4ba0:	bne	4bb8 <MyGame_Example_Vec3_parse_json_struct_inline+0x98>
    4ba4:	mov	r2, r0
    4ba8:	mov	r3, #855638016	; 0x33000000
    4bac:	cmp	r2, r3
    4bb0:	bcc	4f60 <MyGame_Example_Vec3_parse_json_struct_inline+0x440>
    4bb4:	b	4bc8 <MyGame_Example_Vec3_parse_json_struct_inline+0xa8>
    4bb8:	movw	ip, #29556	; 0x7374
    4bbc:	movt	ip, #29797	; 0x7465
    4bc0:	cmp	r3, ip
    4bc4:	bcc	4f60 <MyGame_Example_Vec3_parse_json_struct_inline+0x440>
    4bc8:	mov	r2, r1
    4bcc:	mov	r3, #2013265920	; 0x78000000
    4bd0:	cmp	r2, r3
    4bd4:	bne	4bec <MyGame_Example_Vec3_parse_json_struct_inline+0xcc>
    4bd8:	mov	r2, r0
    4bdc:	mov	r3, #0
    4be0:	cmp	r2, r3
    4be4:	bcc	4ed8 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b8>
    4be8:	b	4bf8 <MyGame_Example_Vec3_parse_json_struct_inline+0xd8>
    4bec:	mov	r3, #2013265920	; 0x78000000
    4bf0:	cmp	r2, r3
    4bf4:	bcc	4ed8 <MyGame_Example_Vec3_parse_json_struct_inline+0x3b8>
    4bf8:	mov	r2, r1
    4bfc:	mov	ip, #2030043136	; 0x79000000
    4c00:	cmp	r2, ip
    4c04:	bne	4c18 <MyGame_Example_Vec3_parse_json_struct_inline+0xf8>
    4c08:	mov	r2, #0
    4c0c:	cmp	r0, r2
    4c10:	bcc	4dec <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    4c14:	b	4c24 <MyGame_Example_Vec3_parse_json_struct_inline+0x104>
    4c18:	mov	r3, #2030043136	; 0x79000000
    4c1c:	cmp	r2, r3
    4c20:	bcc	4dec <MyGame_Example_Vec3_parse_json_struct_inline+0x2cc>
    4c24:	mov	r0, r1
    4c28:	and	r2, r0, #-16777216	; 0xff000000
    4c2c:	mov	ip, #0
    4c30:	eor	r0, r2, #2046820352	; 0x7a000000
    4c34:	orr	r2, r0, ip
    4c38:	cmp	r2, #0
    4c3c:	beq	4d30 <MyGame_Example_Vec3_parse_json_struct_inline+0x210>
    4c40:	and	r2, r1, #-16777216	; 0xff000000
    4c44:	mov	r0, #0
    4c48:	eor	r1, r2, #2030043136	; 0x79000000
    4c4c:	orr	r3, r1, r0
    4c50:	cmp	r3, #0
    4c54:	bne	4d18 <MyGame_Example_Vec3_parse_json_struct_inline+0x1f8>
    4c58:	mov	r1, r4
    4c5c:	mov	r4, r1
    4c60:	mov	r3, #1
    4c64:	mov	r2, r5
    4c68:	mov	r0, r6
    4c6c:	bl	a5c <flatcc_json_parser_match_symbol>
    4c70:	mov	r1, r0
    4c74:	cmp	r4, r1
    4c78:	beq	4d04 <MyGame_Example_Vec3_parse_json_struct_inline+0x1e4>
    4c7c:	vldr	s10, [pc, #964]	; 5048 <MyGame_Example_Vec3_parse_json_struct_inline+0x528>
    4c80:	vstr	s10, [sp, #48]	; 0x30
    4c84:	add	r8, r7, #4
    4c88:	mov	r9, r1
    4c8c:	add	r3, sp, #48	; 0x30
    4c90:	mov	r2, r5
    4c94:	mov	r0, r6
    4c98:	bl	0 <flatcc_json_parser_float>
    4c9c:	mov	r4, r0
    4ca0:	cmp	r9, r4
    4ca4:	bne	4cf0 <MyGame_Example_Vec3_parse_json_struct_inline+0x1d0>
    4ca8:	mov	r9, r4
    4cac:	ldr	r3, [pc, #900]	; 5038 <MyGame_Example_Vec3_parse_json_struct_inline+0x518>
    4cb0:	add	r0, sp, #48	; 0x30
    4cb4:	str	r0, [sp]
    4cb8:	mov	r2, r5
    4cbc:	mov	r1, r4
    4cc0:	mov	r0, r6
    4cc4:	bl	2ab4 <flatcc_json_parser_symbolic_float>
    4cc8:	mov	r4, r0
    4ccc:	cmp	r4, r9
    4cd0:	beq	4ce4 <MyGame_Example_Vec3_parse_json_struct_inline+0x1c4>
    4cd4:	cmp	r4, r5
    4cd8:	moveq	r2, #1
    4cdc:	movne	r2, #0
    4ce0:	b	4ce8 <MyGame_Example_Vec3_parse_json_struct_inline+0x1c8>
    4ce4:	mov	r2, #1
    4ce8:	cmp	r2, #0
    4cec:	bne	5130 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    4cf0:	vldr	s0, [sp, #48]	; 0x30
    4cf4:	mov	r0, r8
    4cf8:	vmov.f32	s0, s0
    4cfc:	bl	2fc <flatbuffers_float_write_to_pe>
    4d00:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4d04:	mov	r2, r5
    4d08:	mov	r0, r6
    4d0c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4d10:	mov	r4, r0
    4d14:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4d18:	mov	r2, r5
    4d1c:	mov	r1, r4
    4d20:	mov	r0, r6
    4d24:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4d28:	mov	r4, r0
    4d2c:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4d30:	mov	r3, #1
    4d34:	mov	r2, r5
    4d38:	mov	r1, r4
    4d3c:	mov	r0, r6
    4d40:	bl	a5c <flatcc_json_parser_match_symbol>
    4d44:	mov	r1, r0
    4d48:	cmp	r4, r1
    4d4c:	beq	4dd8 <MyGame_Example_Vec3_parse_json_struct_inline+0x2b8>
    4d50:	vldr	s0, [pc, #752]	; 5048 <MyGame_Example_Vec3_parse_json_struct_inline+0x528>
    4d54:	vstr	s0, [sp, #44]	; 0x2c
    4d58:	add	r9, r7, #8
    4d5c:	mov	r8, r1
    4d60:	add	r3, sp, #44	; 0x2c
    4d64:	mov	r2, r5
    4d68:	mov	r0, r6
    4d6c:	bl	0 <flatcc_json_parser_float>
    4d70:	mov	r4, r0
    4d74:	cmp	r8, r4
    4d78:	bne	4dc4 <MyGame_Example_Vec3_parse_json_struct_inline+0x2a4>
    4d7c:	mov	r8, r4
    4d80:	ldr	r3, [pc, #692]	; 503c <MyGame_Example_Vec3_parse_json_struct_inline+0x51c>
    4d84:	add	r2, sp, #44	; 0x2c
    4d88:	str	r2, [sp]
    4d8c:	mov	r2, r5
    4d90:	mov	r1, r8
    4d94:	mov	r0, r6
    4d98:	bl	2ab4 <flatcc_json_parser_symbolic_float>
    4d9c:	mov	r4, r0
    4da0:	cmp	r4, r8
    4da4:	beq	4db8 <MyGame_Example_Vec3_parse_json_struct_inline+0x298>
    4da8:	cmp	r4, r5
    4dac:	moveq	r0, #1
    4db0:	movne	r0, #0
    4db4:	b	4dbc <MyGame_Example_Vec3_parse_json_struct_inline+0x29c>
    4db8:	mov	r0, #1
    4dbc:	cmp	r0, #0
    4dc0:	bne	5130 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    4dc4:	vldr	s0, [sp, #44]	; 0x2c
    4dc8:	mov	r0, r9
    4dcc:	vmov.f32	s0, s0
    4dd0:	bl	2fc <flatbuffers_float_write_to_pe>
    4dd4:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4dd8:	mov	r2, r5
    4ddc:	mov	r0, r6
    4de0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4de4:	mov	r4, r0
    4de8:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4dec:	and	r0, r1, #-16777216	; 0xff000000
    4df0:	mov	r1, #0
    4df4:	eor	r3, r0, #2013265920	; 0x78000000
    4df8:	orr	ip, r3, r1
    4dfc:	cmp	ip, #0
    4e00:	bne	4ec0 <MyGame_Example_Vec3_parse_json_struct_inline+0x3a0>
    4e04:	mov	r3, #1
    4e08:	mov	r2, r5
    4e0c:	mov	r1, r4
    4e10:	mov	r0, r6
    4e14:	bl	a5c <flatcc_json_parser_match_symbol>
    4e18:	cmp	r4, r0
    4e1c:	beq	4ea8 <MyGame_Example_Vec3_parse_json_struct_inline+0x388>
    4e20:	vldr	s2, [pc, #544]	; 5048 <MyGame_Example_Vec3_parse_json_struct_inline+0x528>
    4e24:	vstr	s2, [sp, #56]	; 0x38
    4e28:	mov	r8, r0
    4e2c:	add	r3, sp, #56	; 0x38
    4e30:	mov	r2, r5
    4e34:	mov	r1, r8
    4e38:	mov	r0, r6
    4e3c:	bl	0 <flatcc_json_parser_float>
    4e40:	mov	r4, r0
    4e44:	cmp	r8, r4
    4e48:	bne	4e94 <MyGame_Example_Vec3_parse_json_struct_inline+0x374>
    4e4c:	mov	r8, r4
    4e50:	ldr	r3, [pc, #492]	; 5044 <MyGame_Example_Vec3_parse_json_struct_inline+0x524>
    4e54:	add	ip, sp, #56	; 0x38
    4e58:	str	ip, [sp]
    4e5c:	mov	r2, r5
    4e60:	mov	r1, r8
    4e64:	mov	r0, r6
    4e68:	bl	2ab4 <flatcc_json_parser_symbolic_float>
    4e6c:	mov	r4, r0
    4e70:	cmp	r4, r8
    4e74:	beq	4e88 <MyGame_Example_Vec3_parse_json_struct_inline+0x368>
    4e78:	cmp	r4, r5
    4e7c:	moveq	r2, #1
    4e80:	movne	r2, #0
    4e84:	b	4e8c <MyGame_Example_Vec3_parse_json_struct_inline+0x36c>
    4e88:	mov	r2, #1
    4e8c:	cmp	r2, #0
    4e90:	bne	5130 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    4e94:	vldr	s0, [sp, #56]	; 0x38
    4e98:	mov	r0, r7
    4e9c:	vmov.f32	s0, s0
    4ea0:	bl	2fc <flatbuffers_float_write_to_pe>
    4ea4:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4ea8:	mov	r2, r5
    4eac:	mov	r1, r0
    4eb0:	mov	r0, r6
    4eb4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4eb8:	mov	r4, r0
    4ebc:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4ec0:	mov	r2, r5
    4ec4:	mov	r1, r4
    4ec8:	mov	r0, r6
    4ecc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4ed0:	mov	r4, r0
    4ed4:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4ed8:	and	ip, r0, #-16777216	; 0xff000000
    4edc:	eor	r2, r1, #884	; 0x374
    4ee0:	eor	r2, r2, #356352	; 0x57000
    4ee4:	eor	r2, r2, #73400320	; 0x4600000
    4ee8:	eor	r2, r2, #1879048192	; 0x70000000
    4eec:	eor	r0, ip, #855638016	; 0x33000000
    4ef0:	orr	r1, r2, r0
    4ef4:	cmp	r1, #0
    4ef8:	bne	4f48 <MyGame_Example_Vec3_parse_json_struct_inline+0x428>
    4efc:	mov	r3, #5
    4f00:	mov	r2, r5
    4f04:	mov	r1, r4
    4f08:	mov	r0, r6
    4f0c:	bl	a5c <flatcc_json_parser_match_symbol>
    4f10:	mov	r1, r0
    4f14:	cmp	r4, r1
    4f18:	beq	4f34 <MyGame_Example_Vec3_parse_json_struct_inline+0x414>
    4f1c:	add	r3, r7, #26
    4f20:	mov	r2, r5
    4f24:	mov	r0, r6
    4f28:	bl	41f8 <MyGame_Example_Test_parse_json_struct_inline>
    4f2c:	mov	r4, r0
    4f30:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4f34:	mov	r2, r5
    4f38:	mov	r0, r6
    4f3c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4f40:	mov	r4, r0
    4f44:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4f48:	mov	r2, r5
    4f4c:	mov	r1, r4
    4f50:	mov	r0, r6
    4f54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    4f58:	mov	r4, r0
    4f5c:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    4f60:	mov	ip, r1
    4f64:	mov	r2, r0
    4f68:	and	r2, r2, #-16777216	; 0xff000000
    4f6c:	eor	ip, ip, #884	; 0x374
    4f70:	eor	ip, ip, #356352	; 0x57000
    4f74:	eor	ip, ip, #73400320	; 0x4600000
    4f78:	eor	ip, ip, #1879048192	; 0x70000000
    4f7c:	eor	r3, r2, #838860800	; 0x32000000
    4f80:	orr	r3, ip, r3
    4f84:	cmp	r3, #0
    4f88:	beq	509c <MyGame_Example_Vec3_parse_json_struct_inline+0x57c>
    4f8c:	and	r2, r0, #-16777216	; 0xff000000
    4f90:	eor	ip, r1, #884	; 0x374
    4f94:	eor	ip, ip, #356352	; 0x57000
    4f98:	eor	ip, ip, #73400320	; 0x4600000
    4f9c:	eor	ip, ip, #1879048192	; 0x70000000
    4fa0:	eor	r3, r2, #822083584	; 0x31000000
    4fa4:	orr	r1, ip, r3
    4fa8:	cmp	r1, #0
    4fac:	bne	5084 <MyGame_Example_Vec3_parse_json_struct_inline+0x564>
    4fb0:	mov	r3, #5
    4fb4:	mov	r2, r5
    4fb8:	mov	r1, r4
    4fbc:	mov	r0, r6
    4fc0:	bl	a5c <flatcc_json_parser_match_symbol>
    4fc4:	mov	r1, r0
    4fc8:	cmp	r4, r1
    4fcc:	beq	5070 <MyGame_Example_Vec3_parse_json_struct_inline+0x550>
    4fd0:	vldr	d7, [pc, #116]	; 504c <MyGame_Example_Vec3_parse_json_struct_inline+0x52c>
    4fd4:	vstr	d7, [sp, #64]	; 0x40
    4fd8:	add	r9, r7, #16
    4fdc:	mov	r8, r1
    4fe0:	add	r3, sp, #64	; 0x40
    4fe4:	mov	r2, r5
    4fe8:	mov	r0, r6
    4fec:	bl	0 <flatcc_json_parser_double>
    4ff0:	mov	r4, r0
    4ff4:	cmp	r8, r4
    4ff8:	bne	5060 <MyGame_Example_Vec3_parse_json_struct_inline+0x540>
    4ffc:	mov	r8, r4
    5000:	ldr	r3, [pc, #56]	; 5040 <MyGame_Example_Vec3_parse_json_struct_inline+0x520>
    5004:	add	r2, sp, #64	; 0x40
    5008:	str	r2, [sp]
    500c:	mov	r2, r5
    5010:	mov	r1, r8
    5014:	mov	r0, r6
    5018:	bl	2c84 <flatcc_json_parser_symbolic_double>
    501c:	mov	r4, r0
    5020:	cmp	r4, r8
    5024:	beq	5054 <MyGame_Example_Vec3_parse_json_struct_inline+0x534>
    5028:	cmp	r4, r5
    502c:	moveq	r2, #1
    5030:	movne	r2, #0
    5034:	b	5058 <MyGame_Example_Vec3_parse_json_struct_inline+0x538>
    5038:	.word	0x00000084
    503c:	.word	0x00000078
    5040:	.word	0x00000060
    5044:	.word	0x0000006c
	...
    5054:	mov	r2, #1
    5058:	cmp	r2, #0
    505c:	bne	5130 <MyGame_Example_Vec3_parse_json_struct_inline+0x610>
    5060:	vldr	d0, [sp, #64]	; 0x40
    5064:	mov	r0, r9
    5068:	bl	364 <flatbuffers_double_write_to_pe>
    506c:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5070:	mov	r2, r5
    5074:	mov	r0, r6
    5078:	bl	0 <flatcc_json_parser_unmatched_symbol>
    507c:	mov	r4, r0
    5080:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    5084:	mov	r2, r5
    5088:	mov	r1, r4
    508c:	mov	r0, r6
    5090:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5094:	mov	r4, r0
    5098:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    509c:	mov	r3, #5
    50a0:	mov	r2, r5
    50a4:	mov	r1, r4
    50a8:	mov	r0, r6
    50ac:	bl	a5c <flatcc_json_parser_match_symbol>
    50b0:	mov	r8, r0
    50b4:	cmp	r4, r8
    50b8:	beq	515c <MyGame_Example_Vec3_parse_json_struct_inline+0x63c>
    50bc:	mov	r1, #0
    50c0:	strb	r1, [sp, #40]	; 0x28
    50c4:	add	r9, r7, #24
    50c8:	add	r3, sp, #40	; 0x28
    50cc:	mov	r2, r5
    50d0:	mov	r1, r8
    50d4:	mov	r0, r6
    50d8:	bl	1854 <flatcc_json_parser_int8>
    50dc:	mov	r4, r0
    50e0:	cmp	r8, r4
    50e4:	bne	5148 <MyGame_Example_Vec3_parse_json_struct_inline+0x628>
    50e8:	mov	r1, r4
    50ec:	mov	r8, r1
    50f0:	ldr	r3, [pc, #180]	; 51ac <MyGame_Example_Vec3_parse_json_struct_inline+0x68c>
    50f4:	add	r2, sp, #40	; 0x28
    50f8:	str	r2, [sp]
    50fc:	mov	r2, r5
    5100:	mov	r0, r6
    5104:	bl	2714 <flatcc_json_parser_symbolic_int8>
    5108:	mov	r4, r0
    510c:	cmp	r4, r8
    5110:	beq	5124 <MyGame_Example_Vec3_parse_json_struct_inline+0x604>
    5114:	cmp	r4, r5
    5118:	moveq	r0, #1
    511c:	movne	r0, #0
    5120:	b	5128 <MyGame_Example_Vec3_parse_json_struct_inline+0x608>
    5124:	mov	r0, #1
    5128:	cmp	r0, #0
    512c:	beq	5148 <MyGame_Example_Vec3_parse_json_struct_inline+0x628>
    5130:	mov	r3, #33	; 0x21
    5134:	mov	r2, r5
    5138:	mov	r1, r4
    513c:	mov	r0, r6
    5140:	bl	0 <flatcc_json_parser_set_error>
    5144:	b	5188 <MyGame_Example_Vec3_parse_json_struct_inline+0x668>
    5148:	ldrsb	r2, [sp, #40]	; 0x28
    514c:	sbfx	r1, r2, #0, #8
    5150:	mov	r0, r9
    5154:	bl	18c <flatbuffers_int8_write_to_pe>
    5158:	b	5170 <MyGame_Example_Vec3_parse_json_struct_inline+0x650>
    515c:	mov	r2, r5
    5160:	mov	r1, r8
    5164:	mov	r0, r6
    5168:	bl	0 <flatcc_json_parser_unmatched_symbol>
    516c:	mov	r4, r0
    5170:	add	r3, sp, #52	; 0x34
    5174:	mov	r2, r5
    5178:	mov	r1, r4
    517c:	mov	r0, r6
    5180:	bl	72c <flatcc_json_parser_object_end>
    5184:	b	4b64 <MyGame_Example_Vec3_parse_json_struct_inline+0x44>
    5188:	ldr	r4, [sp, #16]
    518c:	ldr	r5, [sp, #20]
    5190:	ldr	r6, [sp, #24]
    5194:	ldr	r7, [sp, #28]
    5198:	ldr	r8, [sp, #32]
    519c:	ldr	r9, [sp, #36]	; 0x24
    51a0:	ldr	lr, [sp, #8]
    51a4:	add	sp, sp, #72	; 0x48
    51a8:	bx	lr
    51ac:	.word	0x00000050

000051b0 <MyGame_Example_Ability_parse_json_struct_inline>:
    51b0:	mov	ip, sp
    51b4:	sub	sp, sp, #56	; 0x38
    51b8:	str	ip, [sp, #4]
    51bc:	str	lr, [sp, #8]
    51c0:	str	r4, [sp, #16]
    51c4:	str	r5, [sp, #20]
    51c8:	str	r6, [sp, #24]
    51cc:	str	r7, [sp, #28]
    51d0:	str	r8, [sp, #32]
    51d4:	str	r9, [sp, #36]	; 0x24
    51d8:	mov	r7, r3
    51dc:	mov	r5, r2
    51e0:	mov	r6, r0
    51e4:	add	r3, sp, #44	; 0x2c
    51e8:	mov	r2, r5
    51ec:	mov	r0, r6
    51f0:	bl	64c <flatcc_json_parser_object_start>
    51f4:	mov	r1, r0
    51f8:	ldr	r3, [sp, #44]	; 0x2c
    51fc:	cmp	r3, #0
    5200:	beq	5428 <MyGame_Example_Ability_parse_json_struct_inline+0x278>
    5204:	mov	r2, r5
    5208:	mov	r0, r6
    520c:	bl	460 <flatcc_json_parser_symbol_start>
    5210:	mov	r4, r0
    5214:	mov	r1, r5
    5218:	mov	r0, r4
    521c:	bl	590 <flatcc_json_parser_symbol_part>
    5220:	mov	r2, r1
    5224:	bic	r2, r2, #255	; 0xff
    5228:	bic	r2, r2, #65280	; 0xff00
    522c:	mov	ip, #0
    5230:	eor	r2, r2, #23330816	; 0x1640000
    5234:	eor	r2, r2, #1744830464	; 0x68000000
    5238:	orr	ip, r2, ip
    523c:	cmp	ip, #0
    5240:	beq	5344 <MyGame_Example_Ability_parse_json_struct_inline+0x194>
    5244:	eor	r3, r1, #884	; 0x374
    5248:	eor	r3, r3, #618496	; 0x97000
    524c:	eor	r3, r3, #73400320	; 0x4600000
    5250:	eor	r3, r3, #1610612736	; 0x60000000
    5254:	eor	r0, r0, #101	; 0x65
    5258:	eor	r0, r0, #25344	; 0x6300
    525c:	eor	r0, r0, #7208960	; 0x6e0000
    5260:	eor	r0, r0, #1627389952	; 0x61000000
    5264:	orr	r1, r3, r0
    5268:	cmp	r1, #0
    526c:	bne	532c <MyGame_Example_Ability_parse_json_struct_inline+0x17c>
    5270:	mov	r1, r4
    5274:	mov	r4, r1
    5278:	mov	r3, #8
    527c:	mov	r2, r5
    5280:	mov	r0, r6
    5284:	bl	a5c <flatcc_json_parser_match_symbol>
    5288:	mov	r1, r0
    528c:	cmp	r4, r1
    5290:	beq	5318 <MyGame_Example_Ability_parse_json_struct_inline+0x168>
    5294:	mov	r2, #0
    5298:	str	r2, [sp, #40]	; 0x28
    529c:	add	r8, r7, #4
    52a0:	mov	r9, r1
    52a4:	add	r3, sp, #40	; 0x28
    52a8:	mov	r2, r5
    52ac:	mov	r0, r6
    52b0:	bl	13b4 <flatcc_json_parser_uint32>
    52b4:	mov	r4, r0
    52b8:	cmp	r9, r4
    52bc:	bne	5308 <MyGame_Example_Ability_parse_json_struct_inline+0x158>
    52c0:	mov	r9, r4
    52c4:	ldr	r3, [pc, #388]	; 5450 <MyGame_Example_Ability_parse_json_struct_inline+0x2a0>
    52c8:	add	r0, sp, #40	; 0x28
    52cc:	str	r0, [sp]
    52d0:	mov	r2, r5
    52d4:	mov	r1, r4
    52d8:	mov	r0, r6
    52dc:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    52e0:	mov	r4, r0
    52e4:	cmp	r4, r9
    52e8:	beq	52fc <MyGame_Example_Ability_parse_json_struct_inline+0x14c>
    52ec:	cmp	r4, r5
    52f0:	moveq	r3, #1
    52f4:	movne	r3, #0
    52f8:	b	5300 <MyGame_Example_Ability_parse_json_struct_inline+0x150>
    52fc:	mov	r3, #1
    5300:	cmp	r3, #0
    5304:	bne	53d4 <MyGame_Example_Ability_parse_json_struct_inline+0x224>
    5308:	ldr	r1, [sp, #40]	; 0x28
    530c:	mov	r0, r8
    5310:	bl	d8 <flatbuffers_uint32_write_to_pe>
    5314:	b	540c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    5318:	mov	r2, r5
    531c:	mov	r0, r6
    5320:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5324:	mov	r4, r0
    5328:	b	540c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    532c:	mov	r2, r5
    5330:	mov	r1, r4
    5334:	mov	r0, r6
    5338:	bl	0 <flatcc_json_parser_unmatched_symbol>
    533c:	mov	r4, r0
    5340:	b	540c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    5344:	mov	r3, #2
    5348:	mov	r2, r5
    534c:	mov	r1, r4
    5350:	mov	r0, r6
    5354:	bl	a5c <flatcc_json_parser_match_symbol>
    5358:	mov	r1, r0
    535c:	cmp	r4, r1
    5360:	beq	53fc <MyGame_Example_Ability_parse_json_struct_inline+0x24c>
    5364:	mov	ip, #0
    5368:	str	ip, [sp, #48]	; 0x30
    536c:	mov	r8, r1
    5370:	add	r3, sp, #48	; 0x30
    5374:	mov	r2, r5
    5378:	mov	r0, r6
    537c:	bl	13b4 <flatcc_json_parser_uint32>
    5380:	mov	r4, r0
    5384:	cmp	r8, r4
    5388:	bne	53ec <MyGame_Example_Ability_parse_json_struct_inline+0x23c>
    538c:	mov	r8, r4
    5390:	ldr	r3, [pc, #188]	; 5454 <MyGame_Example_Ability_parse_json_struct_inline+0x2a4>
    5394:	add	r0, sp, #48	; 0x30
    5398:	str	r0, [sp]
    539c:	mov	r2, r5
    53a0:	mov	r1, r8
    53a4:	mov	r0, r6
    53a8:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    53ac:	mov	r4, r0
    53b0:	cmp	r4, r8
    53b4:	beq	53c8 <MyGame_Example_Ability_parse_json_struct_inline+0x218>
    53b8:	cmp	r4, r5
    53bc:	moveq	r0, #1
    53c0:	movne	r0, #0
    53c4:	b	53cc <MyGame_Example_Ability_parse_json_struct_inline+0x21c>
    53c8:	mov	r0, #1
    53cc:	cmp	r0, #0
    53d0:	beq	53ec <MyGame_Example_Ability_parse_json_struct_inline+0x23c>
    53d4:	mov	r3, #33	; 0x21
    53d8:	mov	r2, r5
    53dc:	mov	r1, r4
    53e0:	mov	r0, r6
    53e4:	bl	0 <flatcc_json_parser_set_error>
    53e8:	b	542c <MyGame_Example_Ability_parse_json_struct_inline+0x27c>
    53ec:	ldr	r1, [sp, #48]	; 0x30
    53f0:	mov	r0, r7
    53f4:	bl	d8 <flatbuffers_uint32_write_to_pe>
    53f8:	b	540c <MyGame_Example_Ability_parse_json_struct_inline+0x25c>
    53fc:	mov	r2, r5
    5400:	mov	r0, r6
    5404:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5408:	mov	r4, r0
    540c:	add	r3, sp, #44	; 0x2c
    5410:	mov	r2, r5
    5414:	mov	r1, r4
    5418:	mov	r0, r6
    541c:	bl	72c <flatcc_json_parser_object_end>
    5420:	mov	r1, r0
    5424:	b	51f8 <MyGame_Example_Ability_parse_json_struct_inline+0x48>
    5428:	mov	r0, r1
    542c:	ldr	r4, [sp, #16]
    5430:	ldr	r5, [sp, #20]
    5434:	ldr	r6, [sp, #24]
    5438:	ldr	r7, [sp, #28]
    543c:	ldr	r8, [sp, #32]
    5440:	ldr	r9, [sp, #36]	; 0x24
    5444:	ldr	lr, [sp, #8]
    5448:	add	sp, sp, #56	; 0x38
    544c:	bx	lr
    5450:	.word	0x0000009c
    5454:	.word	0x00000090

00005458 <MyGame_Example_Stat_parse_json_table>:
    5458:	mov	ip, sp
    545c:	sub	sp, sp, #64	; 0x40
    5460:	str	ip, [sp, #4]
    5464:	str	lr, [sp, #8]
    5468:	str	r4, [sp, #16]
    546c:	str	r5, [sp, #20]
    5470:	str	r6, [sp, #24]
    5474:	str	r7, [sp, #28]
    5478:	str	r8, [sp, #32]
    547c:	str	r9, [sp, #36]	; 0x24
    5480:	mov	r9, r3
    5484:	mov	r5, r2
    5488:	mov	r4, r1
    548c:	mov	r6, r0
    5490:	mov	r3, #0
    5494:	str	r3, [r9]
    5498:	ldr	r0, [r6]
    549c:	mov	r1, #3
    54a0:	bl	0 <flatcc_builder_start_table>
    54a4:	cmp	r0, #0
    54a8:	bne	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    54ac:	add	r3, sp, #44	; 0x2c
    54b0:	mov	r2, r5
    54b4:	mov	r1, r4
    54b8:	mov	r0, r6
    54bc:	bl	64c <flatcc_json_parser_object_start>
    54c0:	mov	r4, r0
    54c4:	ldr	ip, [sp, #44]	; 0x2c
    54c8:	cmp	ip, #0
    54cc:	beq	5888 <MyGame_Example_Stat_parse_json_table+0x430>
    54d0:	mov	r2, r5
    54d4:	mov	r1, r4
    54d8:	mov	r0, r6
    54dc:	bl	460 <flatcc_json_parser_symbol_start>
    54e0:	mov	r4, r0
    54e4:	mov	r1, r5
    54e8:	mov	r0, r4
    54ec:	bl	590 <flatcc_json_parser_symbol_part>
    54f0:	mov	r2, r1
    54f4:	movw	r3, #0
    54f8:	movt	r3, #26980	; 0x6964
    54fc:	cmp	r2, r3
    5500:	bne	5518 <MyGame_Example_Stat_parse_json_table+0xc0>
    5504:	mov	r2, r0
    5508:	mov	ip, #0
    550c:	cmp	r2, ip
    5510:	bcc	5730 <MyGame_Example_Stat_parse_json_table+0x2d8>
    5514:	b	552c <MyGame_Example_Stat_parse_json_table+0xd4>
    5518:	mov	r2, r1
    551c:	movw	r3, #0
    5520:	movt	r3, #26980	; 0x6964
    5524:	cmp	r2, r3
    5528:	bcc	5730 <MyGame_Example_Stat_parse_json_table+0x2d8>
    552c:	mov	r2, r1
    5530:	bic	ip, r2, #255	; 0xff
    5534:	mov	r3, #0
    5538:	eor	ip, ip, #93184	; 0x16c00
    553c:	eor	ip, ip, #106954752	; 0x6600000
    5540:	eor	ip, ip, #1879048192	; 0x70000000
    5544:	orr	r3, ip, r3
    5548:	cmp	r3, #0
    554c:	bne	5668 <MyGame_Example_Stat_parse_json_table+0x210>
    5550:	mov	r1, r4
    5554:	mov	r4, r1
    5558:	mov	r3, #3
    555c:	mov	r2, r5
    5560:	mov	r0, r6
    5564:	bl	a5c <flatcc_json_parser_match_symbol>
    5568:	mov	r1, r0
    556c:	cmp	r4, r1
    5570:	beq	5654 <MyGame_Example_Stat_parse_json_table+0x1fc>
    5574:	mov	r2, #0
    5578:	mov	r0, #0
    557c:	str	r0, [sp, #56]	; 0x38
    5580:	str	r2, [sp, #60]	; 0x3c
    5584:	mov	r7, r1
    5588:	add	r3, sp, #56	; 0x38
    558c:	mov	r2, r5
    5590:	mov	r1, r7
    5594:	mov	r0, r6
    5598:	bl	1600 <flatcc_json_parser_int64>
    559c:	mov	r4, r0
    55a0:	cmp	r7, r4
    55a4:	bne	55f0 <MyGame_Example_Stat_parse_json_table+0x198>
    55a8:	mov	r7, r4
    55ac:	ldr	r3, [pc, #820]	; 58e8 <MyGame_Example_Stat_parse_json_table+0x490>
    55b0:	add	ip, sp, #56	; 0x38
    55b4:	str	ip, [sp]
    55b8:	mov	r2, r5
    55bc:	mov	r1, r7
    55c0:	mov	r0, r6
    55c4:	bl	2188 <flatcc_json_parser_symbolic_int64>
    55c8:	mov	r4, r0
    55cc:	cmp	r4, r7
    55d0:	beq	55e4 <MyGame_Example_Stat_parse_json_table+0x18c>
    55d4:	cmp	r4, r5
    55d8:	moveq	ip, #1
    55dc:	movne	ip, #0
    55e0:	b	55e8 <MyGame_Example_Stat_parse_json_table+0x190>
    55e4:	mov	ip, #1
    55e8:	cmp	ip, #0
    55ec:	bne	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    55f0:	ldr	r3, [sp, #56]	; 0x38
    55f4:	ldr	r0, [sp, #60]	; 0x3c
    55f8:	orr	r0, r0, r3
    55fc:	cmp	r0, #0
    5600:	bne	561c <MyGame_Example_Stat_parse_json_table+0x1c4>
    5604:	ldr	ip, [r6, #8]
    5608:	and	r0, ip, #2
    560c:	cmp	r0, #0
    5610:	movne	r0, #1
    5614:	moveq	r0, #0
    5618:	b	5620 <MyGame_Example_Stat_parse_json_table+0x1c8>
    561c:	mov	r0, #1
    5620:	cmp	r0, #0
    5624:	beq	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5628:	ldr	r0, [r6]
    562c:	mov	r1, #1
    5630:	mov	r2, #8
    5634:	mov	r3, #8
    5638:	bl	0 <flatcc_builder_table_add>
    563c:	cmp	r0, #0
    5640:	beq	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    5644:	ldr	r2, [sp, #56]	; 0x38
    5648:	ldr	r3, [sp, #60]	; 0x3c
    564c:	bl	294 <flatbuffers_int64_write_to_pe>
    5650:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5654:	mov	r2, r5
    5658:	mov	r0, r6
    565c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5660:	mov	r4, r0
    5664:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5668:	bic	r0, r1, #255	; 0xff
    566c:	bic	r0, r0, #65280	; 0xff00
    5670:	mov	ip, #0
    5674:	eor	r0, r0, #23330816	; 0x1640000
    5678:	eor	r0, r0, #1744830464	; 0x68000000
    567c:	orr	r0, r0, ip
    5680:	cmp	r0, #0
    5684:	bne	5718 <MyGame_Example_Stat_parse_json_table+0x2c0>
    5688:	mov	r1, r4
    568c:	mov	r4, r1
    5690:	mov	r3, #2
    5694:	mov	r2, r5
    5698:	mov	r0, r6
    569c:	bl	a5c <flatcc_json_parser_match_symbol>
    56a0:	mov	r1, r0
    56a4:	cmp	r4, r1
    56a8:	beq	5704 <MyGame_Example_Stat_parse_json_table+0x2ac>
    56ac:	add	r3, sp, #48	; 0x30
    56b0:	mov	r2, r5
    56b4:	mov	r0, r6
    56b8:	bl	0 <flatcc_json_parser_build_string>
    56bc:	mov	r4, r0
    56c0:	ldr	ip, [sp, #48]	; 0x30
    56c4:	cmp	ip, #0
    56c8:	beq	56ec <MyGame_Example_Stat_parse_json_table+0x294>
    56cc:	ldr	r0, [r6]
    56d0:	mov	r1, #0
    56d4:	bl	0 <flatcc_builder_table_add_offset>
    56d8:	mov	r8, r0
    56dc:	cmp	r8, #0
    56e0:	moveq	r1, #1
    56e4:	movne	r1, #0
    56e8:	b	56f0 <MyGame_Example_Stat_parse_json_table+0x298>
    56ec:	mov	r1, #1
    56f0:	cmp	r1, #0
    56f4:	bne	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    56f8:	ldr	r1, [sp, #48]	; 0x30
    56fc:	str	r1, [r8]
    5700:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5704:	mov	r2, r5
    5708:	mov	r0, r6
    570c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5710:	mov	r4, r0
    5714:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5718:	mov	r2, r5
    571c:	mov	r1, r4
    5720:	mov	r0, r6
    5724:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5728:	mov	r4, r0
    572c:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5730:	and	r3, r0, #-16777216	; 0xff000000
    5734:	eor	r2, r1, #110	; 0x6e
    5738:	eor	r2, r2, #29952	; 0x7500
    573c:	eor	r2, r2, #7274496	; 0x6f0000
    5740:	eor	r2, r2, #1660944384	; 0x63000000
    5744:	eor	r1, r3, #1946157056	; 0x74000000
    5748:	orr	r2, r2, r1
    574c:	cmp	r2, #0
    5750:	bne	5858 <MyGame_Example_Stat_parse_json_table+0x400>
    5754:	mov	r3, #5
    5758:	mov	r2, r5
    575c:	mov	r1, r4
    5760:	mov	r0, r6
    5764:	bl	a5c <flatcc_json_parser_match_symbol>
    5768:	mov	r1, r0
    576c:	cmp	r4, r1
    5770:	beq	5844 <MyGame_Example_Stat_parse_json_table+0x3ec>
    5774:	mov	r2, #0
    5778:	strh	r2, [sp, #40]	; 0x28
    577c:	mov	r7, r1
    5780:	add	r3, sp, #40	; 0x28
    5784:	mov	r2, r5
    5788:	mov	r0, r6
    578c:	bl	1478 <flatcc_json_parser_uint16>
    5790:	mov	r4, r0
    5794:	cmp	r7, r4
    5798:	bne	57e4 <MyGame_Example_Stat_parse_json_table+0x38c>
    579c:	mov	r1, r4
    57a0:	mov	r7, r1
    57a4:	ldr	r3, [pc, #320]	; 58ec <MyGame_Example_Stat_parse_json_table+0x494>
    57a8:	add	r0, sp, #40	; 0x28
    57ac:	str	r0, [sp]
    57b0:	mov	r2, r5
    57b4:	mov	r0, r6
    57b8:	bl	1de4 <flatcc_json_parser_symbolic_uint16>
    57bc:	mov	r4, r0
    57c0:	cmp	r4, r7
    57c4:	beq	57d8 <MyGame_Example_Stat_parse_json_table+0x380>
    57c8:	cmp	r4, r5
    57cc:	moveq	r2, #1
    57d0:	movne	r2, #0
    57d4:	b	57dc <MyGame_Example_Stat_parse_json_table+0x384>
    57d8:	mov	r2, #1
    57dc:	cmp	r2, #0
    57e0:	bne	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    57e4:	ldrh	r2, [sp, #40]	; 0x28
    57e8:	cmp	r2, #0
    57ec:	bne	5808 <MyGame_Example_Stat_parse_json_table+0x3b0>
    57f0:	ldr	r3, [r6, #8]
    57f4:	and	ip, r3, #2
    57f8:	cmp	ip, #0
    57fc:	movne	r2, #1
    5800:	moveq	r2, #0
    5804:	b	580c <MyGame_Example_Stat_parse_json_table+0x3b4>
    5808:	mov	r2, #1
    580c:	cmp	r2, #0
    5810:	beq	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5814:	ldr	r0, [r6]
    5818:	mov	r1, #2
    581c:	mov	r2, #2
    5820:	mov	r3, #2
    5824:	bl	0 <flatcc_builder_table_add>
    5828:	cmp	r0, #0
    582c:	beq	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    5830:	ldrh	r2, [sp, #40]	; 0x28
    5834:	bic	r1, r2, #16711680	; 0xff0000
    5838:	bic	r1, r1, #-16777216	; 0xff000000
    583c:	bl	7c <flatbuffers_uint16_write_to_pe>
    5840:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5844:	mov	r2, r5
    5848:	mov	r0, r6
    584c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5850:	mov	r4, r0
    5854:	b	586c <MyGame_Example_Stat_parse_json_table+0x414>
    5858:	mov	r2, r5
    585c:	mov	r1, r4
    5860:	mov	r0, r6
    5864:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5868:	mov	r4, r0
    586c:	add	r3, sp, #44	; 0x2c
    5870:	mov	r2, r5
    5874:	mov	r1, r4
    5878:	mov	r0, r6
    587c:	bl	72c <flatcc_json_parser_object_end>
    5880:	mov	r4, r0
    5884:	b	54c4 <MyGame_Example_Stat_parse_json_table+0x6c>
    5888:	ldr	ip, [r6, #24]
    588c:	cmp	ip, #0
    5890:	bne	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    5894:	ldr	r0, [r6]
    5898:	bl	0 <flatcc_builder_end_table>
    589c:	str	r0, [r9]
    58a0:	cmp	r0, #0
    58a4:	beq	58b0 <MyGame_Example_Stat_parse_json_table+0x458>
    58a8:	mov	r0, r4
    58ac:	b	58c4 <MyGame_Example_Stat_parse_json_table+0x46c>
    58b0:	mov	r3, #33	; 0x21
    58b4:	mov	r2, r5
    58b8:	mov	r1, r4
    58bc:	mov	r0, r6
    58c0:	bl	0 <flatcc_json_parser_set_error>
    58c4:	ldr	r4, [sp, #16]
    58c8:	ldr	r5, [sp, #20]
    58cc:	ldr	r6, [sp, #24]
    58d0:	ldr	r7, [sp, #28]
    58d4:	ldr	r8, [sp, #32]
    58d8:	ldr	r9, [sp, #36]	; 0x24
    58dc:	ldr	lr, [sp, #8]
    58e0:	add	sp, sp, #64	; 0x40
    58e4:	bx	lr
    58e8:	.word	0x000000b4
    58ec:	.word	0x000000a8

000058f0 <MyGame_Example_Alt_parse_json_table>:
    58f0:	mov	ip, sp
    58f4:	sub	sp, sp, #80	; 0x50
    58f8:	str	ip, [sp, #20]
    58fc:	str	lr, [sp, #24]
    5900:	str	r4, [sp, #32]
    5904:	str	r5, [sp, #36]	; 0x24
    5908:	str	r6, [sp, #40]	; 0x28
    590c:	str	r7, [sp, #44]	; 0x2c
    5910:	str	r8, [sp, #48]	; 0x30
    5914:	str	r9, [sp, #52]	; 0x34
    5918:	str	sl, [sp, #56]	; 0x38
    591c:	str	fp, [sp, #60]	; 0x3c
    5920:	mov	r7, r3
    5924:	mov	sl, r2
    5928:	mov	r4, r1
    592c:	mov	r9, r0
    5930:	mov	r1, #0
    5934:	str	r1, [r7]
    5938:	ldr	r0, [r9]
    593c:	mov	r1, #4
    5940:	bl	0 <flatcc_builder_start_table>
    5944:	cmp	r0, #0
    5948:	bne	5d1c <MyGame_Example_Alt_parse_json_table+0x42c>
    594c:	mov	r3, #1
    5950:	add	ip, sp, #64	; 0x40
    5954:	str	ip, [sp]
    5958:	mov	r2, sl
    595c:	mov	r1, r4
    5960:	mov	r0, r9
    5964:	bl	0 <flatcc_json_parser_prepare_unions>
    5968:	cmp	sl, r0
    596c:	beq	5d1c <MyGame_Example_Alt_parse_json_table+0x42c>
    5970:	add	r3, sp, #68	; 0x44
    5974:	mov	r2, sl
    5978:	mov	r1, r4
    597c:	mov	r0, r9
    5980:	bl	64c <flatcc_json_parser_object_start>
    5984:	mov	r4, r0
    5988:	ldr	r3, [sp, #68]	; 0x44
    598c:	cmp	r3, #0
    5990:	beq	5cdc <MyGame_Example_Alt_parse_json_table+0x3ec>
    5994:	mov	r2, sl
    5998:	mov	r1, r4
    599c:	mov	r0, r9
    59a0:	bl	460 <flatcc_json_parser_symbol_start>
    59a4:	mov	r6, r0
    59a8:	mov	r1, sl
    59ac:	mov	r0, r6
    59b0:	bl	590 <flatcc_json_parser_symbol_part>
    59b4:	mov	r4, r1
    59b8:	mov	r8, r0
    59bc:	mov	r0, r4
    59c0:	eor	r2, r0, #121	; 0x79
    59c4:	eor	r2, r2, #28160	; 0x6e00
    59c8:	eor	r2, r2, #6356992	; 0x610000
    59cc:	eor	r2, r2, #1828716544	; 0x6d000000
    59d0:	mov	r1, r8
    59d4:	eor	r1, r1, #95	; 0x5f
    59d8:	eor	r1, r1, #30976	; 0x7900
    59dc:	eor	r1, r1, #7208960	; 0x6e0000
    59e0:	eor	r1, r1, #1627389952	; 0x61000000
    59e4:	orr	r0, r2, r1
    59e8:	cmp	r0, #0
    59ec:	beq	5c04 <MyGame_Example_Alt_parse_json_table+0x314>
    59f0:	mov	ip, r8
    59f4:	mov	r3, r4
    59f8:	bic	r1, ip, #255	; 0xff
    59fc:	eor	r3, r3, #121	; 0x79
    5a00:	eor	r3, r3, #28160	; 0x6e00
    5a04:	eor	r3, r3, #6356992	; 0x610000
    5a08:	eor	r3, r3, #1828716544	; 0x6d000000
    5a0c:	eor	r2, r1, #30976	; 0x7900
    5a10:	eor	r2, r2, #7208960	; 0x6e0000
    5a14:	eor	r2, r2, #1627389952	; 0x61000000
    5a18:	orr	ip, r3, r2
    5a1c:	cmp	ip, #0
    5a20:	bne	5a7c <MyGame_Example_Alt_parse_json_table+0x18c>
    5a24:	mov	fp, r6
    5a28:	mov	r3, #7
    5a2c:	mov	r2, sl
    5a30:	mov	r1, fp
    5a34:	mov	r0, r9
    5a38:	bl	a5c <flatcc_json_parser_match_symbol>
    5a3c:	mov	r6, r0
    5a40:	cmp	fp, r6
    5a44:	beq	5a7c <MyGame_Example_Alt_parse_json_table+0x18c>
    5a48:	mov	r3, #0
    5a4c:	mov	r1, #3
    5a50:	ldr	ip, [sp, #64]	; 0x40
    5a54:	ldr	r0, [pc, #772]	; 5d60 <MyGame_Example_Alt_parse_json_table+0x470>
    5a58:	str	r0, [sp, #8]
    5a5c:	str	ip, [sp, #4]
    5a60:	str	r1, [sp]
    5a64:	mov	r2, sl
    5a68:	mov	r1, r6
    5a6c:	mov	r0, r9
    5a70:	bl	0 <flatcc_json_parser_union_vector>
    5a74:	mov	r4, r0
    5a78:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5a7c:	mov	r3, r8
    5a80:	mov	r0, r4
    5a84:	bic	ip, r3, #255	; 0xff
    5a88:	bic	ip, ip, #65280	; 0xff00
    5a8c:	eor	r0, r0, #102	; 0x66
    5a90:	eor	r0, r0, #25856	; 0x6500
    5a94:	eor	r0, r0, #7471104	; 0x720000
    5a98:	eor	r0, r0, #1879048192	; 0x70000000
    5a9c:	eor	ip, ip, #24641536	; 0x1780000
    5aa0:	eor	ip, ip, #1744830464	; 0x68000000
    5aa4:	orr	r1, r0, ip
    5aa8:	cmp	r1, #0
    5aac:	beq	5b78 <MyGame_Example_Alt_parse_json_table+0x288>
    5ab0:	and	r0, r8, #-16777216	; 0xff000000
    5ab4:	eor	r3, r4, #105	; 0x69
    5ab8:	eor	r3, r3, #30208	; 0x7600
    5abc:	eor	r3, r3, #7274496	; 0x6f0000
    5ac0:	eor	r3, r3, #1828716544	; 0x6d000000
    5ac4:	eor	r2, r0, #1694498816	; 0x65000000
    5ac8:	orr	ip, r3, r2
    5acc:	cmp	ip, #0
    5ad0:	bne	5b60 <MyGame_Example_Alt_parse_json_table+0x270>
    5ad4:	mov	r3, #5
    5ad8:	mov	r2, sl
    5adc:	mov	r1, r6
    5ae0:	mov	r0, r9
    5ae4:	bl	a5c <flatcc_json_parser_match_symbol>
    5ae8:	mov	r1, r0
    5aec:	cmp	r6, r1
    5af0:	beq	5b4c <MyGame_Example_Alt_parse_json_table+0x25c>
    5af4:	add	r3, sp, #72	; 0x48
    5af8:	mov	r2, sl
    5afc:	mov	r0, r9
    5b00:	bl	bca4 <Fantasy_Movie_parse_json_table>
    5b04:	mov	r4, r0
    5b08:	ldr	r2, [sp, #72]	; 0x48
    5b0c:	cmp	r2, #0
    5b10:	beq	5b34 <MyGame_Example_Alt_parse_json_table+0x244>
    5b14:	ldr	r0, [r9]
    5b18:	mov	r1, #1
    5b1c:	bl	0 <flatcc_builder_table_add_offset>
    5b20:	mov	r5, r0
    5b24:	cmp	r5, #0
    5b28:	moveq	r1, #1
    5b2c:	movne	r1, #0
    5b30:	b	5b38 <MyGame_Example_Alt_parse_json_table+0x248>
    5b34:	mov	r1, #1
    5b38:	cmp	r1, #0
    5b3c:	bne	5d1c <MyGame_Example_Alt_parse_json_table+0x42c>
    5b40:	ldr	r0, [sp, #72]	; 0x48
    5b44:	str	r0, [r5]
    5b48:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5b4c:	mov	r2, sl
    5b50:	mov	r0, r9
    5b54:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b58:	mov	r4, r0
    5b5c:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5b60:	mov	r2, sl
    5b64:	mov	r1, r6
    5b68:	mov	r0, r9
    5b6c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5b70:	mov	r4, r0
    5b74:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5b78:	mov	r3, #6
    5b7c:	mov	r2, sl
    5b80:	mov	r1, r6
    5b84:	mov	r0, r9
    5b88:	bl	a5c <flatcc_json_parser_match_symbol>
    5b8c:	mov	r1, r0
    5b90:	cmp	r6, r1
    5b94:	beq	5bf0 <MyGame_Example_Alt_parse_json_table+0x300>
    5b98:	add	r3, sp, #72	; 0x48
    5b9c:	mov	r2, sl
    5ba0:	mov	r0, r9
    5ba4:	bl	5d68 <MyGame_Example_TestJSONPrefix_parse_json_table>
    5ba8:	mov	r4, r0
    5bac:	ldr	r0, [sp, #72]	; 0x48
    5bb0:	cmp	r0, #0
    5bb4:	beq	5bd8 <MyGame_Example_Alt_parse_json_table+0x2e8>
    5bb8:	ldr	r0, [r9]
    5bbc:	mov	r1, #0
    5bc0:	bl	0 <flatcc_builder_table_add_offset>
    5bc4:	mov	r5, r0
    5bc8:	cmp	r5, #0
    5bcc:	moveq	r2, #1
    5bd0:	movne	r2, #0
    5bd4:	b	5bdc <MyGame_Example_Alt_parse_json_table+0x2ec>
    5bd8:	mov	r2, #1
    5bdc:	cmp	r2, #0
    5be0:	bne	5d1c <MyGame_Example_Alt_parse_json_table+0x42c>
    5be4:	ldr	r3, [sp, #72]	; 0x48
    5be8:	str	r3, [r5]
    5bec:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5bf0:	mov	r2, sl
    5bf4:	mov	r0, r9
    5bf8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5bfc:	mov	r4, r0
    5c00:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5c04:	add	r4, r6, #8
    5c08:	mov	r1, sl
    5c0c:	mov	r0, r4
    5c10:	bl	590 <flatcc_json_parser_symbol_part>
    5c14:	mov	ip, #0
    5c18:	eor	r2, r1, #101	; 0x65
    5c1c:	eor	r2, r2, #618496	; 0x97000
    5c20:	eor	r2, r2, #74448896	; 0x4700000
    5c24:	eor	r2, r2, #1879048192	; 0x70000000
    5c28:	orr	r3, r2, ip
    5c2c:	cmp	r3, #0
    5c30:	bne	5cac <MyGame_Example_Alt_parse_json_table+0x3bc>
    5c34:	mov	r1, r4
    5c38:	mov	r4, r1
    5c3c:	mov	r3, #4
    5c40:	mov	r2, sl
    5c44:	mov	r0, r9
    5c48:	bl	a5c <flatcc_json_parser_match_symbol>
    5c4c:	mov	r1, r0
    5c50:	cmp	r4, r1
    5c54:	beq	5c98 <MyGame_Example_Alt_parse_json_table+0x3a8>
    5c58:	mov	r3, #0
    5c5c:	mov	r4, #3
    5c60:	ldr	r6, [sp, #64]	; 0x40
    5c64:	ldr	r2, [pc, #248]	; 5d64 <MyGame_Example_Alt_parse_json_table+0x474>
    5c68:	ldr	r8, [pc, #240]	; 5d60 <MyGame_Example_Alt_parse_json_table+0x470>
    5c6c:	ldr	r0, [pc, #232]	; 5d5c <MyGame_Example_Alt_parse_json_table+0x46c>
    5c70:	str	r0, [sp, #16]
    5c74:	str	r8, [sp, #12]
    5c78:	str	r2, [sp, #8]
    5c7c:	str	r6, [sp, #4]
    5c80:	str	r4, [sp]
    5c84:	mov	r2, sl
    5c88:	mov	r0, r9
    5c8c:	bl	0 <flatcc_json_parser_union_type_vector>
    5c90:	mov	r4, r0
    5c94:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5c98:	mov	r2, sl
    5c9c:	mov	r0, r9
    5ca0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5ca4:	mov	r4, r0
    5ca8:	b	5cc0 <MyGame_Example_Alt_parse_json_table+0x3d0>
    5cac:	mov	r2, sl
    5cb0:	mov	r1, r4
    5cb4:	mov	r0, r9
    5cb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    5cbc:	mov	r4, r0
    5cc0:	add	r3, sp, #68	; 0x44
    5cc4:	mov	r2, sl
    5cc8:	mov	r1, r4
    5ccc:	mov	r0, r9
    5cd0:	bl	72c <flatcc_json_parser_object_end>
    5cd4:	mov	r4, r0
    5cd8:	b	5988 <MyGame_Example_Alt_parse_json_table+0x98>
    5cdc:	ldr	r0, [r9, #24]
    5ce0:	cmp	r0, #0
    5ce4:	bne	5d1c <MyGame_Example_Alt_parse_json_table+0x42c>
    5ce8:	ldr	r3, [sp, #64]	; 0x40
    5cec:	mov	r2, sl
    5cf0:	mov	r1, r4
    5cf4:	mov	r0, r9
    5cf8:	bl	0 <flatcc_json_parser_finalize_unions>
    5cfc:	mov	r4, r0
    5d00:	ldr	r0, [r9]
    5d04:	bl	0 <flatcc_builder_end_table>
    5d08:	str	r0, [r7]
    5d0c:	cmp	r0, #0
    5d10:	beq	5d1c <MyGame_Example_Alt_parse_json_table+0x42c>
    5d14:	mov	r0, r4
    5d18:	b	5d30 <MyGame_Example_Alt_parse_json_table+0x440>
    5d1c:	mov	r3, #33	; 0x21
    5d20:	mov	r2, sl
    5d24:	mov	r1, r4
    5d28:	mov	r0, r9
    5d2c:	bl	0 <flatcc_json_parser_set_error>
    5d30:	ldr	r4, [sp, #32]
    5d34:	ldr	r5, [sp, #36]	; 0x24
    5d38:	ldr	r6, [sp, #40]	; 0x28
    5d3c:	ldr	r7, [sp, #44]	; 0x2c
    5d40:	ldr	r8, [sp, #48]	; 0x30
    5d44:	ldr	r9, [sp, #52]	; 0x34
    5d48:	ldr	sl, [sp, #56]	; 0x38
    5d4c:	ldr	fp, [sp, #60]	; 0x3c
    5d50:	ldr	lr, [sp, #24]
    5d54:	add	sp, sp, #80	; 0x50
    5d58:	bx	lr
	...
    5d64:	.word	0x000000c0

00005d68 <MyGame_Example_TestJSONPrefix_parse_json_table>:
    5d68:	mov	ip, sp
    5d6c:	sub	sp, sp, #48	; 0x30
    5d70:	str	ip, [sp]
    5d74:	str	lr, [sp, #4]
    5d78:	str	r4, [sp, #8]
    5d7c:	str	r5, [sp, #12]
    5d80:	str	r6, [sp, #16]
    5d84:	str	r7, [sp, #20]
    5d88:	str	r8, [sp, #24]
    5d8c:	str	r9, [sp, #28]
    5d90:	str	sl, [sp, #32]
    5d94:	str	fp, [sp, #36]	; 0x24
    5d98:	mov	r9, r3
    5d9c:	mov	r8, r2
    5da0:	mov	r5, r1
    5da4:	mov	sl, r0
    5da8:	mov	r3, #0
    5dac:	str	r3, [r9]
    5db0:	ldr	r0, [sl]
    5db4:	mov	r1, #3
    5db8:	bl	0 <flatcc_builder_start_table>
    5dbc:	cmp	r0, #0
    5dc0:	bne	612c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    5dc4:	add	r3, sp, #40	; 0x28
    5dc8:	mov	r2, r8
    5dcc:	mov	r1, r5
    5dd0:	mov	r0, sl
    5dd4:	bl	64c <flatcc_json_parser_object_start>
    5dd8:	mov	r5, r0
    5ddc:	ldr	r1, [sp, #40]	; 0x28
    5de0:	cmp	r1, #0
    5de4:	beq	6104 <MyGame_Example_TestJSONPrefix_parse_json_table+0x39c>
    5de8:	mov	r2, r8
    5dec:	mov	r1, r5
    5df0:	mov	r0, sl
    5df4:	bl	460 <flatcc_json_parser_symbol_start>
    5df8:	mov	r5, r0
    5dfc:	mov	r1, r8
    5e00:	mov	r0, r5
    5e04:	bl	590 <flatcc_json_parser_symbol_part>
    5e08:	eor	r2, r1, #884	; 0x374
    5e0c:	eor	r2, r2, #356352	; 0x57000
    5e10:	eor	r2, r2, #73400320	; 0x4600000
    5e14:	eor	r2, r2, #1879048192	; 0x70000000
    5e18:	eor	r0, r0, #110	; 0x6e
    5e1c:	eor	r0, r0, #28416	; 0x6f00
    5e20:	eor	r0, r0, #7536640	; 0x730000
    5e24:	eor	r0, r0, #1778384896	; 0x6a000000
    5e28:	orr	r0, r2, r0
    5e2c:	cmp	r0, #0
    5e30:	bne	60d4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x36c>
    5e34:	add	r5, r5, #8
    5e38:	mov	r1, r8
    5e3c:	mov	r0, r5
    5e40:	bl	590 <flatcc_json_parser_symbol_part>
    5e44:	eor	r2, r1, #102	; 0x66
    5e48:	eor	r2, r2, #25856	; 0x6500
    5e4c:	eor	r2, r2, #7471104	; 0x720000
    5e50:	eor	r2, r2, #1879048192	; 0x70000000
    5e54:	eor	r1, r0, #97	; 0x61
    5e58:	eor	r1, r1, #552960	; 0x87000
    5e5c:	eor	r1, r1, #158334976	; 0x9700000
    5e60:	eor	r1, r1, #1610612736	; 0x60000000
    5e64:	orr	r0, r2, r1
    5e68:	cmp	r0, #0
    5e6c:	bne	60bc <MyGame_Example_TestJSONPrefix_parse_json_table+0x354>
    5e70:	add	r7, r5, #8
    5e74:	mov	r1, r8
    5e78:	mov	r0, r7
    5e7c:	bl	590 <flatcc_json_parser_symbol_part>
    5e80:	mov	r6, r1
    5e84:	mov	r5, r0
    5e88:	mov	r1, r6
    5e8c:	mov	ip, r5
    5e90:	bic	r0, ip, #255	; 0xff
    5e94:	bic	r0, r0, #65280	; 0xff00
    5e98:	eor	r3, r1, #110	; 0x6e
    5e9c:	eor	r3, r3, #26880	; 0x6900
    5ea0:	eor	r3, r3, #7536640	; 0x730000
    5ea4:	eor	r3, r3, #1912602624	; 0x72000000
    5ea8:	eor	r1, r0, #3276800	; 0x320000
    5eac:	eor	r1, r1, #1728053248	; 0x67000000
    5eb0:	orr	r2, r3, r1
    5eb4:	cmp	r2, #0
    5eb8:	beq	5f68 <MyGame_Example_TestJSONPrefix_parse_json_table+0x200>
    5ebc:	mov	r2, r6
    5ec0:	mov	r0, r5
    5ec4:	and	r1, r0, #-16777216	; 0xff000000
    5ec8:	eor	r3, r2, #110	; 0x6e
    5ecc:	eor	r3, r3, #26880	; 0x6900
    5ed0:	eor	r3, r3, #7536640	; 0x730000
    5ed4:	eor	r3, r3, #1912602624	; 0x72000000
    5ed8:	eor	r2, r1, #1728053248	; 0x67000000
    5edc:	orr	ip, r3, r2
    5ee0:	cmp	ip, #0
    5ee4:	bne	5fe8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x280>
    5ee8:	mov	fp, r7
    5eec:	mov	r3, #5
    5ef0:	mov	r2, r8
    5ef4:	mov	r1, fp
    5ef8:	mov	r0, sl
    5efc:	bl	a5c <flatcc_json_parser_match_symbol>
    5f00:	mov	r7, r0
    5f04:	cmp	fp, r7
    5f08:	beq	5fe8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x280>
    5f0c:	add	r3, sp, #44	; 0x2c
    5f10:	mov	r2, r8
    5f14:	mov	r1, r7
    5f18:	mov	r0, sl
    5f1c:	bl	616c <MyGame_Example_TestJSONPrefixParsing_parse_json_table>
    5f20:	mov	r5, r0
    5f24:	ldr	r3, [sp, #44]	; 0x2c
    5f28:	cmp	r3, #0
    5f2c:	beq	5f50 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1e8>
    5f30:	ldr	r0, [sl]
    5f34:	mov	r1, #0
    5f38:	bl	0 <flatcc_builder_table_add_offset>
    5f3c:	mov	r4, r0
    5f40:	cmp	r4, #0
    5f44:	moveq	ip, #1
    5f48:	movne	ip, #0
    5f4c:	b	5f54 <MyGame_Example_TestJSONPrefix_parse_json_table+0x1ec>
    5f50:	mov	ip, #1
    5f54:	cmp	ip, #0
    5f58:	bne	612c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    5f5c:	ldr	r0, [sp, #44]	; 0x2c
    5f60:	str	r0, [r4]
    5f64:	b	60e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    5f68:	mov	fp, r7
    5f6c:	mov	r3, #6
    5f70:	mov	r2, r8
    5f74:	mov	r1, fp
    5f78:	mov	r0, sl
    5f7c:	bl	a5c <flatcc_json_parser_match_symbol>
    5f80:	mov	r7, r0
    5f84:	cmp	fp, r7
    5f88:	beq	5fe8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x280>
    5f8c:	add	r3, sp, #44	; 0x2c
    5f90:	mov	r2, r8
    5f94:	mov	r1, r7
    5f98:	mov	r0, sl
    5f9c:	bl	6c94 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>
    5fa0:	mov	r5, r0
    5fa4:	ldr	r3, [sp, #44]	; 0x2c
    5fa8:	cmp	r3, #0
    5fac:	beq	5fd0 <MyGame_Example_TestJSONPrefix_parse_json_table+0x268>
    5fb0:	ldr	r0, [sl]
    5fb4:	mov	r1, #1
    5fb8:	bl	0 <flatcc_builder_table_add_offset>
    5fbc:	mov	r4, r0
    5fc0:	cmp	r0, #0
    5fc4:	moveq	r2, #1
    5fc8:	movne	r2, #0
    5fcc:	b	5fd4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x26c>
    5fd0:	mov	r2, #1
    5fd4:	cmp	r2, #0
    5fd8:	bne	612c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    5fdc:	ldr	r1, [sp, #44]	; 0x2c
    5fe0:	str	r1, [r4]
    5fe4:	b	60e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    5fe8:	bic	r3, r5, #255	; 0xff
    5fec:	bic	r3, r3, #65280	; 0xff00
    5ff0:	eor	r0, r6, #110	; 0x6e
    5ff4:	eor	r0, r0, #26880	; 0x6900
    5ff8:	eor	r0, r0, #7536640	; 0x730000
    5ffc:	eor	r0, r0, #1912602624	; 0x72000000
    6000:	eor	ip, r3, #3342336	; 0x330000
    6004:	eor	ip, ip, #1728053248	; 0x67000000
    6008:	orr	r1, r0, ip
    600c:	cmp	r1, #0
    6010:	bne	60a4 <MyGame_Example_TestJSONPrefix_parse_json_table+0x33c>
    6014:	mov	r1, r7
    6018:	mov	r5, r1
    601c:	mov	r3, #6
    6020:	mov	r2, r8
    6024:	mov	r0, sl
    6028:	bl	a5c <flatcc_json_parser_match_symbol>
    602c:	mov	r1, r0
    6030:	cmp	r5, r1
    6034:	beq	6090 <MyGame_Example_TestJSONPrefix_parse_json_table+0x328>
    6038:	add	r3, sp, #44	; 0x2c
    603c:	mov	r2, r8
    6040:	mov	r0, sl
    6044:	bl	7088 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>
    6048:	mov	r5, r0
    604c:	ldr	ip, [sp, #44]	; 0x2c
    6050:	cmp	ip, #0
    6054:	beq	6078 <MyGame_Example_TestJSONPrefix_parse_json_table+0x310>
    6058:	ldr	r0, [sl]
    605c:	mov	r1, #2
    6060:	bl	0 <flatcc_builder_table_add_offset>
    6064:	mov	r4, r0
    6068:	cmp	r4, #0
    606c:	moveq	ip, #1
    6070:	movne	ip, #0
    6074:	b	607c <MyGame_Example_TestJSONPrefix_parse_json_table+0x314>
    6078:	mov	ip, #1
    607c:	cmp	ip, #0
    6080:	bne	612c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    6084:	ldr	r1, [sp, #44]	; 0x2c
    6088:	str	r1, [r4]
    608c:	b	60e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    6090:	mov	r2, r8
    6094:	mov	r0, sl
    6098:	bl	0 <flatcc_json_parser_unmatched_symbol>
    609c:	mov	r5, r0
    60a0:	b	60e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    60a4:	mov	r2, r8
    60a8:	mov	r1, r7
    60ac:	mov	r0, sl
    60b0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60b4:	mov	r5, r0
    60b8:	b	60e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    60bc:	mov	r2, r8
    60c0:	mov	r1, r5
    60c4:	mov	r0, sl
    60c8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60cc:	mov	r5, r0
    60d0:	b	60e8 <MyGame_Example_TestJSONPrefix_parse_json_table+0x380>
    60d4:	mov	r2, r8
    60d8:	mov	r1, r5
    60dc:	mov	r0, sl
    60e0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    60e4:	mov	r5, r0
    60e8:	add	r3, sp, #40	; 0x28
    60ec:	mov	r2, r8
    60f0:	mov	r1, r5
    60f4:	mov	r0, sl
    60f8:	bl	72c <flatcc_json_parser_object_end>
    60fc:	mov	r5, r0
    6100:	b	5ddc <MyGame_Example_TestJSONPrefix_parse_json_table+0x74>
    6104:	ldr	r3, [sl, #24]
    6108:	cmp	r3, #0
    610c:	bne	612c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    6110:	ldr	r0, [sl]
    6114:	bl	0 <flatcc_builder_end_table>
    6118:	str	r0, [r9]
    611c:	cmp	r0, #0
    6120:	beq	612c <MyGame_Example_TestJSONPrefix_parse_json_table+0x3c4>
    6124:	mov	r0, r5
    6128:	b	6140 <MyGame_Example_TestJSONPrefix_parse_json_table+0x3d8>
    612c:	mov	r3, #33	; 0x21
    6130:	mov	r2, r8
    6134:	mov	r1, r5
    6138:	mov	r0, sl
    613c:	bl	0 <flatcc_json_parser_set_error>
    6140:	ldr	r4, [sp, #8]
    6144:	ldr	r5, [sp, #12]
    6148:	ldr	r6, [sp, #16]
    614c:	ldr	r7, [sp, #20]
    6150:	ldr	r8, [sp, #24]
    6154:	ldr	r9, [sp, #28]
    6158:	ldr	sl, [sp, #32]
    615c:	ldr	fp, [sp, #36]	; 0x24
    6160:	ldr	lr, [sp, #4]
    6164:	add	sp, sp, #48	; 0x30
    6168:	bx	lr

0000616c <MyGame_Example_TestJSONPrefixParsing_parse_json_table>:
    616c:	mov	ip, sp
    6170:	sub	sp, sp, #96	; 0x60
    6174:	str	ip, [sp, #4]
    6178:	str	lr, [sp, #8]
    617c:	str	r4, [sp, #16]
    6180:	str	r5, [sp, #20]
    6184:	str	r6, [sp, #24]
    6188:	str	r7, [sp, #28]
    618c:	str	r8, [sp, #32]
    6190:	str	r9, [sp, #36]	; 0x24
    6194:	str	sl, [sp, #40]	; 0x28
    6198:	str	fp, [sp, #44]	; 0x2c
    619c:	mov	r8, r3
    61a0:	mov	r5, r2
    61a4:	mov	r4, r1
    61a8:	mov	r6, r0
    61ac:	mov	r0, #0
    61b0:	str	r0, [r8]
    61b4:	ldr	r0, [r6]
    61b8:	mov	r1, #9
    61bc:	bl	0 <flatcc_builder_start_table>
    61c0:	cmp	r0, #0
    61c4:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    61c8:	add	r3, sp, #48	; 0x30
    61cc:	mov	r2, r5
    61d0:	mov	r1, r4
    61d4:	mov	r0, r6
    61d8:	bl	64c <flatcc_json_parser_object_start>
    61dc:	mov	r4, r0
    61e0:	ldr	ip, [sp, #48]	; 0x30
    61e4:	cmp	ip, #0
    61e8:	beq	6c14 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xaa8>
    61ec:	mov	r2, r5
    61f0:	mov	r1, r4
    61f4:	mov	r0, r6
    61f8:	bl	460 <flatcc_json_parser_symbol_start>
    61fc:	mov	r4, r0
    6200:	mov	r1, r5
    6204:	mov	r0, r4
    6208:	bl	590 <flatcc_json_parser_symbol_part>
    620c:	mov	r9, r1
    6210:	mov	sl, r0
    6214:	mov	r1, r9
    6218:	movw	r2, #25443	; 0x6363
    621c:	movt	r2, #25443	; 0x6363
    6220:	cmp	r1, r2
    6224:	bne	623c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xd0>
    6228:	mov	r0, sl
    622c:	mov	r1, #0
    6230:	cmp	r0, r1
    6234:	bcc	67d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x66c>
    6238:	b	624c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xe0>
    623c:	movw	r3, #25443	; 0x6363
    6240:	movt	r3, #25443	; 0x6363
    6244:	cmp	r1, r3
    6248:	bcc	67d8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x66c>
    624c:	mov	ip, r9
    6250:	mov	r3, sl
    6254:	eor	ip, ip, #99	; 0x63
    6258:	eor	ip, ip, #25344	; 0x6300
    625c:	eor	ip, ip, #6488064	; 0x630000
    6260:	eor	ip, ip, #1660944384	; 0x63000000
    6264:	eor	r1, r3, #820	; 0x334
    6268:	eor	r1, r1, #143360	; 0x23000
    626c:	eor	r1, r1, #19922944	; 0x1300000
    6270:	eor	r1, r1, #805306368	; 0x30000000
    6274:	orr	r0, ip, r1
    6278:	cmp	r0, #0
    627c:	beq	65a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x434>
    6280:	mov	r1, r9
    6284:	mov	r0, #0
    6288:	eor	r3, r1, #99	; 0x63
    628c:	eor	r3, r3, #25344	; 0x6300
    6290:	eor	r3, r3, #6488064	; 0x630000
    6294:	eor	r3, r3, #1660944384	; 0x63000000
    6298:	orr	r2, r3, r0
    629c:	cmp	r2, #0
    62a0:	bne	6324 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    62a4:	mov	fp, r4
    62a8:	mov	r3, #4
    62ac:	mov	r2, r5
    62b0:	mov	r1, fp
    62b4:	mov	r0, r6
    62b8:	bl	a5c <flatcc_json_parser_match_symbol>
    62bc:	mov	r4, r0
    62c0:	cmp	fp, r4
    62c4:	beq	6324 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1b8>
    62c8:	add	r3, sp, #52	; 0x34
    62cc:	mov	r2, r5
    62d0:	mov	r1, r4
    62d4:	mov	r0, r6
    62d8:	bl	0 <flatcc_json_parser_build_string>
    62dc:	mov	r4, r0
    62e0:	ldr	r1, [sp, #52]	; 0x34
    62e4:	cmp	r1, #0
    62e8:	beq	630c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1a0>
    62ec:	ldr	r0, [r6]
    62f0:	mov	r1, #4
    62f4:	bl	0 <flatcc_builder_table_add_offset>
    62f8:	mov	r7, r0
    62fc:	cmp	r7, #0
    6300:	moveq	r3, #1
    6304:	movne	r3, #0
    6308:	b	6310 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x1a4>
    630c:	mov	r3, #1
    6310:	cmp	r3, #0
    6314:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6318:	ldr	r2, [sp, #52]	; 0x34
    631c:	str	r2, [r7]
    6320:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6324:	eor	r1, r9, #100	; 0x64
    6328:	eor	r1, r1, #25600	; 0x6400
    632c:	eor	r1, r1, #6553600	; 0x640000
    6330:	eor	r1, r1, #1677721600	; 0x64000000
    6334:	eor	r0, sl, #820	; 0x334
    6338:	eor	r0, r0, #143360	; 0x23000
    633c:	eor	r0, r0, #19922944	; 0x1300000
    6340:	eor	r0, r0, #805306368	; 0x30000000
    6344:	orr	ip, r1, r0
    6348:	cmp	ip, #0
    634c:	bne	6588 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x41c>
    6350:	mov	r3, #8
    6354:	mov	r2, r5
    6358:	mov	r1, r4
    635c:	mov	r0, r6
    6360:	bl	a5c <flatcc_json_parser_match_symbol>
    6364:	mov	r9, r0
    6368:	cmp	r4, r9
    636c:	bne	64ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x340>
    6370:	add	r4, r9, #8
    6374:	mov	r1, r5
    6378:	mov	r0, r4
    637c:	bl	590 <flatcc_json_parser_symbol_part>
    6380:	and	r1, r1, #-16777216	; 0xff000000
    6384:	mov	r0, #0
    6388:	eor	r2, r1, #889192448	; 0x35000000
    638c:	orr	r2, r2, r0
    6390:	cmp	r2, #0
    6394:	bne	6494 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x328>
    6398:	mov	r3, #1
    639c:	mov	r2, r5
    63a0:	mov	r1, r4
    63a4:	mov	r0, r6
    63a8:	bl	a5c <flatcc_json_parser_match_symbol>
    63ac:	mov	r1, r0
    63b0:	cmp	r4, r1
    63b4:	beq	6480 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x314>
    63b8:	mov	r0, #0
    63bc:	str	r0, [sp, #64]	; 0x40
    63c0:	mov	r9, r1
    63c4:	add	r3, sp, #64	; 0x40
    63c8:	mov	r2, r5
    63cc:	mov	r0, r6
    63d0:	bl	13b4 <flatcc_json_parser_uint32>
    63d4:	mov	r4, r0
    63d8:	cmp	r9, r4
    63dc:	bne	6428 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2bc>
    63e0:	mov	r9, r4
    63e4:	ldr	r3, [pc, #2212]	; 6c90 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb24>
    63e8:	add	r1, sp, #64	; 0x40
    63ec:	str	r1, [sp]
    63f0:	mov	r2, r5
    63f4:	mov	r1, r4
    63f8:	mov	r0, r6
    63fc:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    6400:	mov	r4, r0
    6404:	cmp	r4, r9
    6408:	beq	641c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2b0>
    640c:	cmp	r4, r5
    6410:	moveq	ip, #1
    6414:	movne	ip, #0
    6418:	b	6420 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2b4>
    641c:	mov	ip, #1
    6420:	cmp	ip, #0
    6424:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6428:	ldr	r3, [sp, #64]	; 0x40
    642c:	cmp	r3, #0
    6430:	bne	644c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e0>
    6434:	ldr	ip, [r6, #8]
    6438:	and	r1, ip, #2
    643c:	cmp	r1, #0
    6440:	movne	ip, #1
    6444:	moveq	ip, #0
    6448:	b	6450 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x2e4>
    644c:	mov	ip, #1
    6450:	cmp	ip, #0
    6454:	beq	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6458:	ldr	r0, [r6]
    645c:	mov	r1, #8
    6460:	mov	r2, #4
    6464:	mov	r3, #4
    6468:	bl	0 <flatcc_builder_table_add>
    646c:	cmp	r0, #0
    6470:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6474:	ldr	r1, [sp, #64]	; 0x40
    6478:	bl	d8 <flatbuffers_uint32_write_to_pe>
    647c:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6480:	mov	r2, r5
    6484:	mov	r0, r6
    6488:	bl	0 <flatcc_json_parser_unmatched_symbol>
    648c:	mov	r4, r0
    6490:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6494:	mov	r2, r5
    6498:	mov	r1, r4
    649c:	mov	r0, r6
    64a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    64a4:	mov	r4, r0
    64a8:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    64ac:	mov	r0, #0
    64b0:	mov	ip, #0
    64b4:	str	ip, [sp, #88]	; 0x58
    64b8:	str	r0, [sp, #92]	; 0x5c
    64bc:	add	r3, sp, #88	; 0x58
    64c0:	mov	r2, r5
    64c4:	mov	r1, r9
    64c8:	mov	r0, r6
    64cc:	bl	1600 <flatcc_json_parser_int64>
    64d0:	mov	r4, r0
    64d4:	cmp	r9, r4
    64d8:	bne	6524 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3b8>
    64dc:	mov	r9, r4
    64e0:	ldr	r3, [pc, #1952]	; 6c88 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb1c>
    64e4:	add	r2, sp, #88	; 0x58
    64e8:	str	r2, [sp]
    64ec:	mov	r2, r5
    64f0:	mov	r1, r9
    64f4:	mov	r0, r6
    64f8:	bl	2188 <flatcc_json_parser_symbolic_int64>
    64fc:	mov	r4, r0
    6500:	cmp	r4, r9
    6504:	beq	6518 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3ac>
    6508:	cmp	r4, r5
    650c:	moveq	r2, #1
    6510:	movne	r2, #0
    6514:	b	651c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3b0>
    6518:	mov	r2, #1
    651c:	cmp	r2, #0
    6520:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6524:	ldr	ip, [sp, #88]	; 0x58
    6528:	ldr	r2, [sp, #92]	; 0x5c
    652c:	orr	ip, r2, ip
    6530:	cmp	ip, #0
    6534:	bne	6550 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3e4>
    6538:	ldr	r3, [r6, #8]
    653c:	and	r2, r3, #2
    6540:	cmp	r2, #0
    6544:	movne	r0, #1
    6548:	moveq	r0, #0
    654c:	b	6554 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x3e8>
    6550:	mov	r0, #1
    6554:	cmp	r0, #0
    6558:	beq	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    655c:	ldr	r0, [r6]
    6560:	mov	r1, #7
    6564:	mov	r2, #8
    6568:	mov	r3, #8
    656c:	bl	0 <flatcc_builder_table_add>
    6570:	cmp	r0, #0
    6574:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6578:	ldr	r2, [sp, #88]	; 0x58
    657c:	ldr	r3, [sp, #92]	; 0x5c
    6580:	bl	294 <flatbuffers_int64_write_to_pe>
    6584:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6588:	mov	r2, r5
    658c:	mov	r1, r4
    6590:	mov	r0, r6
    6594:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6598:	mov	r4, r0
    659c:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    65a0:	mov	r3, #8
    65a4:	mov	r2, r5
    65a8:	mov	r1, r4
    65ac:	mov	r0, r6
    65b0:	bl	a5c <flatcc_json_parser_match_symbol>
    65b4:	mov	r9, r0
    65b8:	cmp	r4, r9
    65bc:	bne	66fc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x590>
    65c0:	add	r4, r9, #8
    65c4:	mov	r1, r5
    65c8:	mov	r0, r4
    65cc:	bl	590 <flatcc_json_parser_symbol_part>
    65d0:	and	r0, r1, #-16777216	; 0xff000000
    65d4:	mov	ip, #0
    65d8:	eor	r0, r0, #889192448	; 0x35000000
    65dc:	orr	r0, r0, ip
    65e0:	cmp	r0, #0
    65e4:	bne	66e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x578>
    65e8:	mov	r3, #1
    65ec:	mov	r2, r5
    65f0:	mov	r1, r4
    65f4:	mov	r0, r6
    65f8:	bl	a5c <flatcc_json_parser_match_symbol>
    65fc:	mov	r1, r0
    6600:	cmp	r4, r1
    6604:	beq	66d0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x564>
    6608:	mov	ip, #0
    660c:	str	ip, [sp, #60]	; 0x3c
    6610:	mov	r9, r1
    6614:	add	r3, sp, #60	; 0x3c
    6618:	mov	r2, r5
    661c:	mov	r0, r6
    6620:	bl	13b4 <flatcc_json_parser_uint32>
    6624:	mov	r4, r0
    6628:	cmp	r9, r4
    662c:	bne	6678 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x50c>
    6630:	mov	r9, r4
    6634:	ldr	r3, [pc, #1600]	; 6c7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb10>
    6638:	add	r2, sp, #60	; 0x3c
    663c:	str	r2, [sp]
    6640:	mov	r2, r5
    6644:	mov	r1, r4
    6648:	mov	r0, r6
    664c:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    6650:	mov	r4, r0
    6654:	cmp	r4, r9
    6658:	beq	666c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x500>
    665c:	cmp	r4, r5
    6660:	moveq	r2, #1
    6664:	movne	r2, #0
    6668:	b	6670 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x504>
    666c:	mov	r2, #1
    6670:	cmp	r2, #0
    6674:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6678:	ldr	r2, [sp, #60]	; 0x3c
    667c:	cmp	r2, #0
    6680:	bne	669c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x530>
    6684:	ldr	r2, [r6, #8]
    6688:	and	r1, r2, #2
    668c:	cmp	r1, #0
    6690:	movne	r3, #1
    6694:	moveq	r3, #0
    6698:	b	66a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x534>
    669c:	mov	r3, #1
    66a0:	cmp	r3, #0
    66a4:	beq	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    66a8:	ldr	r0, [r6]
    66ac:	mov	r1, #6
    66b0:	mov	r2, #4
    66b4:	mov	r3, #4
    66b8:	bl	0 <flatcc_builder_table_add>
    66bc:	cmp	r0, #0
    66c0:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    66c4:	ldr	r1, [sp, #60]	; 0x3c
    66c8:	bl	d8 <flatbuffers_uint32_write_to_pe>
    66cc:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    66d0:	mov	r2, r5
    66d4:	mov	r0, r6
    66d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    66dc:	mov	r4, r0
    66e0:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    66e4:	mov	r2, r5
    66e8:	mov	r1, r4
    66ec:	mov	r0, r6
    66f0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    66f4:	mov	r4, r0
    66f8:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    66fc:	mov	r1, #0
    6700:	mov	r0, #0
    6704:	str	r0, [sp, #80]	; 0x50
    6708:	str	r1, [sp, #84]	; 0x54
    670c:	add	r3, sp, #80	; 0x50
    6710:	mov	r2, r5
    6714:	mov	r1, r9
    6718:	mov	r0, r6
    671c:	bl	1600 <flatcc_json_parser_int64>
    6720:	mov	r4, r0
    6724:	cmp	r9, r4
    6728:	bne	6774 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x608>
    672c:	mov	r9, r4
    6730:	ldr	r3, [pc, #1364]	; 6c8c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb20>
    6734:	add	r0, sp, #80	; 0x50
    6738:	str	r0, [sp]
    673c:	mov	r2, r5
    6740:	mov	r1, r9
    6744:	mov	r0, r6
    6748:	bl	2188 <flatcc_json_parser_symbolic_int64>
    674c:	mov	r4, r0
    6750:	cmp	r4, r9
    6754:	beq	6768 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x5fc>
    6758:	cmp	r4, r5
    675c:	moveq	r1, #1
    6760:	movne	r1, #0
    6764:	b	676c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x600>
    6768:	mov	r1, #1
    676c:	cmp	r1, #0
    6770:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6774:	ldr	r2, [sp, #80]	; 0x50
    6778:	ldr	r3, [sp, #84]	; 0x54
    677c:	orr	r3, r3, r2
    6780:	cmp	r3, #0
    6784:	bne	67a0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x634>
    6788:	ldr	r1, [r6, #8]
    678c:	and	ip, r1, #2
    6790:	cmp	ip, #0
    6794:	movne	r1, #1
    6798:	moveq	r1, #0
    679c:	b	67a4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x638>
    67a0:	mov	r1, #1
    67a4:	cmp	r1, #0
    67a8:	beq	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    67ac:	ldr	r0, [r6]
    67b0:	mov	r1, #5
    67b4:	mov	r2, #8
    67b8:	mov	r3, #8
    67bc:	bl	0 <flatcc_builder_table_add>
    67c0:	cmp	r0, #0
    67c4:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    67c8:	ldr	r2, [sp, #80]	; 0x50
    67cc:	ldr	r3, [sp, #84]	; 0x54
    67d0:	bl	294 <flatbuffers_int64_write_to_pe>
    67d4:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    67d8:	mov	r0, r9
    67dc:	eor	r3, r0, #97	; 0x61
    67e0:	eor	r3, r3, #24832	; 0x6100
    67e4:	eor	r3, r3, #6356992	; 0x610000
    67e8:	eor	r3, r3, #1627389952	; 0x61000000
    67ec:	mov	ip, sl
    67f0:	eor	r2, ip, #820	; 0x334
    67f4:	eor	r2, r2, #143360	; 0x23000
    67f8:	eor	r2, r2, #19922944	; 0x1300000
    67fc:	eor	r2, r2, #805306368	; 0x30000000
    6800:	orr	ip, r3, r2
    6804:	cmp	ip, #0
    6808:	beq	6abc <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x950>
    680c:	mov	r0, r9
    6810:	mov	ip, #0
    6814:	eor	r2, r0, #97	; 0x61
    6818:	eor	r2, r2, #24832	; 0x6100
    681c:	eor	r2, r2, #6356992	; 0x610000
    6820:	eor	r2, r2, #1627389952	; 0x61000000
    6824:	orr	r0, r2, ip
    6828:	cmp	r0, #0
    682c:	bne	68b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x744>
    6830:	mov	fp, r4
    6834:	mov	r3, #4
    6838:	mov	r2, r5
    683c:	mov	r1, fp
    6840:	mov	r0, r6
    6844:	bl	a5c <flatcc_json_parser_match_symbol>
    6848:	mov	r4, r0
    684c:	cmp	fp, r4
    6850:	beq	68b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x744>
    6854:	add	r3, sp, #52	; 0x34
    6858:	mov	r2, r5
    685c:	mov	r1, r4
    6860:	mov	r0, r6
    6864:	bl	0 <flatcc_json_parser_build_string>
    6868:	mov	r4, r0
    686c:	ldr	r2, [sp, #52]	; 0x34
    6870:	cmp	r2, #0
    6874:	beq	6898 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x72c>
    6878:	ldr	r0, [r6]
    687c:	mov	r1, #0
    6880:	bl	0 <flatcc_builder_table_add_offset>
    6884:	mov	r7, r0
    6888:	cmp	r0, #0
    688c:	moveq	ip, #1
    6890:	movne	ip, #0
    6894:	b	689c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x730>
    6898:	mov	ip, #1
    689c:	cmp	ip, #0
    68a0:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    68a4:	ldr	ip, [sp, #52]	; 0x34
    68a8:	str	ip, [r7]
    68ac:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    68b0:	mov	r1, r9
    68b4:	eor	r1, r1, #98	; 0x62
    68b8:	eor	r1, r1, #25088	; 0x6200
    68bc:	eor	r1, r1, #6422528	; 0x620000
    68c0:	eor	r1, r1, #1644167168	; 0x62000000
    68c4:	eor	r0, sl, #820	; 0x334
    68c8:	eor	r0, r0, #143360	; 0x23000
    68cc:	eor	r0, r0, #19922944	; 0x1300000
    68d0:	eor	r0, r0, #805306368	; 0x30000000
    68d4:	orr	r2, r1, r0
    68d8:	cmp	r2, #0
    68dc:	bne	69f8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x88c>
    68e0:	mov	r1, r4
    68e4:	mov	r4, r1
    68e8:	mov	r3, #8
    68ec:	mov	r2, r5
    68f0:	mov	r0, r6
    68f4:	bl	a5c <flatcc_json_parser_match_symbol>
    68f8:	mov	r1, r0
    68fc:	cmp	r4, r1
    6900:	beq	69e4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x878>
    6904:	mov	r3, #0
    6908:	mov	r2, #0
    690c:	str	r2, [sp, #72]	; 0x48
    6910:	str	r3, [sp, #76]	; 0x4c
    6914:	mov	r9, r1
    6918:	add	r3, sp, #72	; 0x48
    691c:	mov	r2, r5
    6920:	mov	r1, r9
    6924:	mov	r0, r6
    6928:	bl	1600 <flatcc_json_parser_int64>
    692c:	mov	r4, r0
    6930:	cmp	r9, r4
    6934:	bne	6980 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x814>
    6938:	mov	r9, r4
    693c:	ldr	r3, [pc, #828]	; 6c80 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb14>
    6940:	add	r0, sp, #72	; 0x48
    6944:	str	r0, [sp]
    6948:	mov	r2, r5
    694c:	mov	r1, r9
    6950:	mov	r0, r6
    6954:	bl	2188 <flatcc_json_parser_symbolic_int64>
    6958:	mov	r4, r0
    695c:	cmp	r4, r9
    6960:	beq	6974 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x808>
    6964:	cmp	r4, r5
    6968:	moveq	r3, #1
    696c:	movne	r3, #0
    6970:	b	6978 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x80c>
    6974:	mov	r3, #1
    6978:	cmp	r3, #0
    697c:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6980:	ldr	r0, [sp, #72]	; 0x48
    6984:	ldr	ip, [sp, #76]	; 0x4c
    6988:	orr	r3, ip, r0
    698c:	cmp	r3, #0
    6990:	bne	69ac <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x840>
    6994:	ldr	r3, [r6, #8]
    6998:	and	ip, r3, #2
    699c:	cmp	ip, #0
    69a0:	movne	r2, #1
    69a4:	moveq	r2, #0
    69a8:	b	69b0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x844>
    69ac:	mov	r2, #1
    69b0:	cmp	r2, #0
    69b4:	beq	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    69b8:	ldr	r0, [r6]
    69bc:	mov	r1, #3
    69c0:	mov	r2, #8
    69c4:	mov	r3, #8
    69c8:	bl	0 <flatcc_builder_table_add>
    69cc:	cmp	r0, #0
    69d0:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    69d4:	ldr	r2, [sp, #72]	; 0x48
    69d8:	ldr	r3, [sp, #76]	; 0x4c
    69dc:	bl	294 <flatbuffers_int64_write_to_pe>
    69e0:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    69e4:	mov	r2, r5
    69e8:	mov	r0, r6
    69ec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    69f0:	mov	r4, r0
    69f4:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    69f8:	mov	r2, #0
    69fc:	eor	r3, r9, #98	; 0x62
    6a00:	eor	r3, r3, #25088	; 0x6200
    6a04:	eor	r3, r3, #6422528	; 0x620000
    6a08:	eor	r3, r3, #1644167168	; 0x62000000
    6a0c:	orr	ip, r3, r2
    6a10:	cmp	ip, #0
    6a14:	bne	6aa4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x938>
    6a18:	mov	r3, #4
    6a1c:	mov	r2, r5
    6a20:	mov	r1, r4
    6a24:	mov	r0, r6
    6a28:	bl	a5c <flatcc_json_parser_match_symbol>
    6a2c:	mov	r1, r0
    6a30:	cmp	r4, r1
    6a34:	beq	6a90 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x924>
    6a38:	add	r3, sp, #52	; 0x34
    6a3c:	mov	r2, r5
    6a40:	mov	r0, r6
    6a44:	bl	0 <flatcc_json_parser_build_string>
    6a48:	mov	r4, r0
    6a4c:	ldr	r0, [sp, #52]	; 0x34
    6a50:	cmp	r0, #0
    6a54:	beq	6a78 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x90c>
    6a58:	ldr	r0, [r6]
    6a5c:	mov	r1, #2
    6a60:	bl	0 <flatcc_builder_table_add_offset>
    6a64:	mov	r7, r0
    6a68:	cmp	r0, #0
    6a6c:	moveq	r2, #1
    6a70:	movne	r2, #0
    6a74:	b	6a7c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x910>
    6a78:	mov	r2, #1
    6a7c:	cmp	r2, #0
    6a80:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6a84:	ldr	r2, [sp, #52]	; 0x34
    6a88:	str	r2, [r7]
    6a8c:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6a90:	mov	r2, r5
    6a94:	mov	r0, r6
    6a98:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6a9c:	mov	r4, r0
    6aa0:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6aa4:	mov	r2, r5
    6aa8:	mov	r1, r4
    6aac:	mov	r0, r6
    6ab0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6ab4:	mov	r4, r0
    6ab8:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6abc:	add	r4, r4, #8
    6ac0:	mov	r1, r5
    6ac4:	mov	r0, r4
    6ac8:	bl	590 <flatcc_json_parser_symbol_part>
    6acc:	and	r2, r1, #-16777216	; 0xff000000
    6ad0:	mov	r1, #0
    6ad4:	eor	r3, r2, #889192448	; 0x35000000
    6ad8:	orr	r0, r3, r1
    6adc:	cmp	r0, #0
    6ae0:	bne	6be4 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa78>
    6ae4:	mov	r1, r4
    6ae8:	mov	r4, r1
    6aec:	mov	r3, #1
    6af0:	mov	r2, r5
    6af4:	mov	r0, r6
    6af8:	bl	a5c <flatcc_json_parser_match_symbol>
    6afc:	mov	r1, r0
    6b00:	cmp	r4, r1
    6b04:	beq	6bd0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa64>
    6b08:	mov	r3, #0
    6b0c:	str	r3, [sp, #56]	; 0x38
    6b10:	mov	r9, r1
    6b14:	add	r3, sp, #56	; 0x38
    6b18:	mov	r2, r5
    6b1c:	mov	r0, r6
    6b20:	bl	13b4 <flatcc_json_parser_uint32>
    6b24:	mov	r4, r0
    6b28:	cmp	r9, r4
    6b2c:	bne	6b78 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa0c>
    6b30:	mov	r9, r4
    6b34:	ldr	r3, [pc, #328]	; 6c84 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xb18>
    6b38:	add	r0, sp, #56	; 0x38
    6b3c:	str	r0, [sp]
    6b40:	mov	r2, r5
    6b44:	mov	r1, r9
    6b48:	mov	r0, r6
    6b4c:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    6b50:	mov	r4, r0
    6b54:	cmp	r4, r9
    6b58:	beq	6b6c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa00>
    6b5c:	cmp	r4, r5
    6b60:	moveq	r1, #1
    6b64:	movne	r1, #0
    6b68:	b	6b70 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa04>
    6b6c:	mov	r1, #1
    6b70:	cmp	r1, #0
    6b74:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6b78:	ldr	r2, [sp, #56]	; 0x38
    6b7c:	cmp	r2, #0
    6b80:	bne	6b9c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa30>
    6b84:	ldr	r3, [r6, #8]
    6b88:	and	r2, r3, #2
    6b8c:	cmp	r2, #0
    6b90:	movne	ip, #1
    6b94:	moveq	ip, #0
    6b98:	b	6ba0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa34>
    6b9c:	mov	ip, #1
    6ba0:	cmp	ip, #0
    6ba4:	beq	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6ba8:	ldr	r0, [r6]
    6bac:	mov	r1, #1
    6bb0:	mov	r2, #4
    6bb4:	mov	r3, #4
    6bb8:	bl	0 <flatcc_builder_table_add>
    6bbc:	cmp	r0, #0
    6bc0:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6bc4:	ldr	r1, [sp, #56]	; 0x38
    6bc8:	bl	d8 <flatbuffers_uint32_write_to_pe>
    6bcc:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6bd0:	mov	r2, r5
    6bd4:	mov	r0, r6
    6bd8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6bdc:	mov	r4, r0
    6be0:	b	6bf8 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xa8c>
    6be4:	mov	r2, r5
    6be8:	mov	r1, r4
    6bec:	mov	r0, r6
    6bf0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6bf4:	mov	r4, r0
    6bf8:	add	r3, sp, #48	; 0x30
    6bfc:	mov	r2, r5
    6c00:	mov	r1, r4
    6c04:	mov	r0, r6
    6c08:	bl	72c <flatcc_json_parser_object_end>
    6c0c:	mov	r4, r0
    6c10:	b	61e0 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0x74>
    6c14:	ldr	r1, [r6, #24]
    6c18:	cmp	r1, #0
    6c1c:	bne	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6c20:	ldr	r0, [r6]
    6c24:	bl	0 <flatcc_builder_end_table>
    6c28:	str	r0, [r8]
    6c2c:	cmp	r0, #0
    6c30:	beq	6c3c <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xad0>
    6c34:	mov	r0, r4
    6c38:	b	6c50 <MyGame_Example_TestJSONPrefixParsing_parse_json_table+0xae4>
    6c3c:	mov	r3, #33	; 0x21
    6c40:	mov	r2, r5
    6c44:	mov	r1, r4
    6c48:	mov	r0, r6
    6c4c:	bl	0 <flatcc_json_parser_set_error>
    6c50:	ldr	r4, [sp, #16]
    6c54:	ldr	r5, [sp, #20]
    6c58:	ldr	r6, [sp, #24]
    6c5c:	ldr	r7, [sp, #28]
    6c60:	ldr	r8, [sp, #32]
    6c64:	ldr	r9, [sp, #36]	; 0x24
    6c68:	ldr	sl, [sp, #40]	; 0x28
    6c6c:	ldr	fp, [sp, #44]	; 0x2c
    6c70:	ldr	lr, [sp, #8]
    6c74:	add	sp, sp, #96	; 0x60
    6c78:	bx	lr
    6c7c:	.word	0x000000f4
    6c80:	.word	0x000000dc
    6c84:	.word	0x000000d0
    6c88:	.word	0x00000100
    6c8c:	.word	0x000000e8
    6c90:	.word	0x0000010c

00006c94 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table>:
    6c94:	mov	ip, sp
    6c98:	sub	sp, sp, #56	; 0x38
    6c9c:	str	ip, [sp, #4]
    6ca0:	str	lr, [sp, #8]
    6ca4:	str	r4, [sp, #16]
    6ca8:	str	r5, [sp, #20]
    6cac:	str	r6, [sp, #24]
    6cb0:	str	r7, [sp, #28]
    6cb4:	str	r8, [sp, #32]
    6cb8:	mov	r7, r3
    6cbc:	mov	r5, r2
    6cc0:	mov	r4, r1
    6cc4:	mov	r6, r0
    6cc8:	mov	r2, #0
    6ccc:	str	r2, [r7]
    6cd0:	ldr	r0, [r6]
    6cd4:	mov	r1, #2
    6cd8:	bl	0 <flatcc_builder_start_table>
    6cdc:	cmp	r0, #0
    6ce0:	bne	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    6ce4:	add	r3, sp, #44	; 0x2c
    6ce8:	mov	r2, r5
    6cec:	mov	r1, r4
    6cf0:	mov	r0, r6
    6cf4:	bl	64c <flatcc_json_parser_object_start>
    6cf8:	mov	r4, r0
    6cfc:	ldr	r0, [sp, #44]	; 0x2c
    6d00:	cmp	r0, #0
    6d04:	beq	7024 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x390>
    6d08:	mov	r2, r5
    6d0c:	mov	r1, r4
    6d10:	mov	r0, r6
    6d14:	bl	460 <flatcc_json_parser_symbol_start>
    6d18:	mov	r4, r0
    6d1c:	mov	r1, r5
    6d20:	mov	r0, r4
    6d24:	bl	590 <flatcc_json_parser_symbol_part>
    6d28:	eor	r1, r1, #97	; 0x61
    6d2c:	eor	r1, r1, #24832	; 0x6100
    6d30:	eor	r1, r1, #6356992	; 0x610000
    6d34:	eor	r1, r1, #1627389952	; 0x61000000
    6d38:	eor	r2, r0, #98	; 0x62
    6d3c:	eor	r2, r2, #25088	; 0x6200
    6d40:	eor	r2, r2, #6422528	; 0x620000
    6d44:	eor	r2, r2, #1593835520	; 0x5f000000
    6d48:	orr	r0, r1, r2
    6d4c:	cmp	r0, #0
    6d50:	bne	6ff4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x360>
    6d54:	add	r4, r4, #8
    6d58:	mov	r1, r5
    6d5c:	mov	r0, r4
    6d60:	bl	590 <flatcc_json_parser_symbol_part>
    6d64:	mov	r2, r1
    6d68:	mov	r3, r0
    6d6c:	bic	ip, r3, #255	; 0xff
    6d70:	eor	r3, r2, #884	; 0x374
    6d74:	eor	r3, r3, #1011712	; 0xf7000
    6d78:	eor	r3, r3, #38797312	; 0x2500000
    6d7c:	eor	r3, r3, #1610612736	; 0x60000000
    6d80:	eor	r2, ip, #29440	; 0x7300
    6d84:	eor	r2, r2, #91226112	; 0x5700000
    6d88:	eor	r2, r2, #1610612736	; 0x60000000
    6d8c:	orr	r2, r3, r2
    6d90:	cmp	r2, #0
    6d94:	beq	6edc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x248>
    6d98:	eor	r3, r1, #884	; 0x374
    6d9c:	eor	r3, r3, #1011712	; 0xf7000
    6da0:	eor	r3, r3, #38797312	; 0x2500000
    6da4:	eor	r3, r3, #1610612736	; 0x60000000
    6da8:	eor	r2, r0, #95	; 0x5f
    6dac:	eor	r2, r2, #160768	; 0x27400
    6db0:	eor	r2, r2, #24117248	; 0x1700000
    6db4:	eor	r2, r2, #1610612736	; 0x60000000
    6db8:	orr	ip, r3, r2
    6dbc:	cmp	ip, #0
    6dc0:	bne	6ec4 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x230>
    6dc4:	mov	r3, #8
    6dc8:	mov	r2, r5
    6dcc:	mov	r1, r4
    6dd0:	mov	r0, r6
    6dd4:	bl	a5c <flatcc_json_parser_match_symbol>
    6dd8:	mov	r8, r0
    6ddc:	cmp	r4, r8
    6de0:	beq	6eac <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x218>
    6de4:	mov	r0, #0
    6de8:	str	r0, [sp, #40]	; 0x28
    6dec:	add	r3, sp, #40	; 0x28
    6df0:	mov	r2, r5
    6df4:	mov	r1, r8
    6df8:	mov	r0, r6
    6dfc:	bl	13b4 <flatcc_json_parser_uint32>
    6e00:	mov	r4, r0
    6e04:	cmp	r8, r4
    6e08:	bne	6e54 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1c0>
    6e0c:	mov	r8, r4
    6e10:	ldr	r3, [pc, #620]	; 7084 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3f0>
    6e14:	add	r1, sp, #40	; 0x28
    6e18:	str	r1, [sp]
    6e1c:	mov	r2, r5
    6e20:	mov	r1, r4
    6e24:	mov	r0, r6
    6e28:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    6e2c:	mov	r4, r0
    6e30:	cmp	r4, r8
    6e34:	beq	6e48 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1b4>
    6e38:	cmp	r4, r5
    6e3c:	moveq	r3, #1
    6e40:	movne	r3, #0
    6e44:	b	6e4c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1b8>
    6e48:	mov	r3, #1
    6e4c:	cmp	r3, #0
    6e50:	bne	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    6e54:	ldr	r0, [sp, #40]	; 0x28
    6e58:	cmp	r0, #0
    6e5c:	bne	6e78 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e4>
    6e60:	ldr	r1, [r6, #8]
    6e64:	and	ip, r1, #2
    6e68:	cmp	ip, #0
    6e6c:	movne	r3, #1
    6e70:	moveq	r3, #0
    6e74:	b	6e7c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x1e8>
    6e78:	mov	r3, #1
    6e7c:	cmp	r3, #0
    6e80:	beq	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6e84:	ldr	r0, [r6]
    6e88:	mov	r1, #1
    6e8c:	mov	r2, #4
    6e90:	mov	r3, #4
    6e94:	bl	0 <flatcc_builder_table_add>
    6e98:	cmp	r0, #0
    6e9c:	beq	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    6ea0:	ldr	r1, [sp, #40]	; 0x28
    6ea4:	bl	d8 <flatbuffers_uint32_write_to_pe>
    6ea8:	b	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6eac:	mov	r2, r5
    6eb0:	mov	r1, r8
    6eb4:	mov	r0, r6
    6eb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6ebc:	mov	r4, r0
    6ec0:	b	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6ec4:	mov	r2, r5
    6ec8:	mov	r1, r4
    6ecc:	mov	r0, r6
    6ed0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6ed4:	mov	r4, r0
    6ed8:	b	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6edc:	mov	r1, r4
    6ee0:	mov	r4, r1
    6ee4:	mov	r3, #7
    6ee8:	mov	r2, r5
    6eec:	mov	r0, r6
    6ef0:	bl	a5c <flatcc_json_parser_match_symbol>
    6ef4:	mov	r1, r0
    6ef8:	cmp	r4, r1
    6efc:	beq	6fe0 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x34c>
    6f00:	mov	r0, #0
    6f04:	mov	ip, #0
    6f08:	str	ip, [sp, #48]	; 0x30
    6f0c:	str	r0, [sp, #52]	; 0x34
    6f10:	mov	r8, r1
    6f14:	add	r3, sp, #48	; 0x30
    6f18:	mov	r2, r5
    6f1c:	mov	r1, r8
    6f20:	mov	r0, r6
    6f24:	bl	1600 <flatcc_json_parser_int64>
    6f28:	mov	r4, r0
    6f2c:	cmp	r8, r4
    6f30:	bne	6f7c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2e8>
    6f34:	mov	r8, r4
    6f38:	ldr	r3, [pc, #320]	; 7080 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3ec>
    6f3c:	add	r2, sp, #48	; 0x30
    6f40:	str	r2, [sp]
    6f44:	mov	r2, r5
    6f48:	mov	r1, r8
    6f4c:	mov	r0, r6
    6f50:	bl	2188 <flatcc_json_parser_symbolic_int64>
    6f54:	mov	r4, r0
    6f58:	cmp	r4, r8
    6f5c:	beq	6f70 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2dc>
    6f60:	cmp	r4, r5
    6f64:	moveq	r3, #1
    6f68:	movne	r3, #0
    6f6c:	b	6f74 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x2e0>
    6f70:	mov	r3, #1
    6f74:	cmp	r3, #0
    6f78:	bne	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    6f7c:	ldr	r3, [sp, #48]	; 0x30
    6f80:	ldr	r1, [sp, #52]	; 0x34
    6f84:	orr	ip, r1, r3
    6f88:	cmp	ip, #0
    6f8c:	bne	6fa8 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x314>
    6f90:	ldr	r2, [r6, #8]
    6f94:	and	r2, r2, #2
    6f98:	cmp	r2, #0
    6f9c:	movne	r3, #1
    6fa0:	moveq	r3, #0
    6fa4:	b	6fac <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x318>
    6fa8:	mov	r3, #1
    6fac:	cmp	r3, #0
    6fb0:	beq	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6fb4:	ldr	r0, [r6]
    6fb8:	mov	r1, #0
    6fbc:	mov	r2, #8
    6fc0:	mov	r3, #8
    6fc4:	bl	0 <flatcc_builder_table_add>
    6fc8:	cmp	r0, #0
    6fcc:	beq	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    6fd0:	ldr	r2, [sp, #48]	; 0x30
    6fd4:	ldr	r3, [sp, #52]	; 0x34
    6fd8:	bl	294 <flatbuffers_int64_write_to_pe>
    6fdc:	b	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6fe0:	mov	r2, r5
    6fe4:	mov	r0, r6
    6fe8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    6fec:	mov	r4, r0
    6ff0:	b	7008 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x374>
    6ff4:	mov	r2, r5
    6ff8:	mov	r1, r4
    6ffc:	mov	r0, r6
    7000:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7004:	mov	r4, r0
    7008:	add	r3, sp, #44	; 0x2c
    700c:	mov	r2, r5
    7010:	mov	r1, r4
    7014:	mov	r0, r6
    7018:	bl	72c <flatcc_json_parser_object_end>
    701c:	mov	r4, r0
    7020:	b	6cfc <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x68>
    7024:	ldr	r0, [r6, #24]
    7028:	cmp	r0, #0
    702c:	bne	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7030:	ldr	r0, [r6]
    7034:	bl	0 <flatcc_builder_end_table>
    7038:	str	r0, [r7]
    703c:	cmp	r0, #0
    7040:	beq	704c <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3b8>
    7044:	mov	r0, r4
    7048:	b	7060 <MyGame_Example_TestJSONPrefixParsing2_parse_json_table+0x3cc>
    704c:	mov	r3, #33	; 0x21
    7050:	mov	r2, r5
    7054:	mov	r1, r4
    7058:	mov	r0, r6
    705c:	bl	0 <flatcc_json_parser_set_error>
    7060:	ldr	r4, [sp, #16]
    7064:	ldr	r5, [sp, #20]
    7068:	ldr	r6, [sp, #24]
    706c:	ldr	r7, [sp, #28]
    7070:	ldr	r8, [sp, #32]
    7074:	ldr	lr, [sp, #8]
    7078:	add	sp, sp, #56	; 0x38
    707c:	bx	lr
    7080:	.word	0x00000118
    7084:	.word	0x00000124

00007088 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table>:
    7088:	mov	ip, sp
    708c:	sub	sp, sp, #56	; 0x38
    7090:	str	ip, [sp, #4]
    7094:	str	lr, [sp, #8]
    7098:	str	r4, [sp, #16]
    709c:	str	r5, [sp, #20]
    70a0:	str	r6, [sp, #24]
    70a4:	str	r7, [sp, #28]
    70a8:	str	r8, [sp, #32]
    70ac:	mov	r6, r3
    70b0:	mov	r5, r2
    70b4:	mov	r4, r1
    70b8:	mov	r7, r0
    70bc:	mov	r1, #0
    70c0:	str	r1, [r6]
    70c4:	ldr	r0, [r7]
    70c8:	mov	r1, #2
    70cc:	bl	0 <flatcc_builder_start_table>
    70d0:	cmp	r0, #0
    70d4:	bne	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    70d8:	add	r3, sp, #40	; 0x28
    70dc:	mov	r2, r5
    70e0:	mov	r1, r4
    70e4:	mov	r0, r7
    70e8:	bl	64c <flatcc_json_parser_object_start>
    70ec:	mov	r4, r0
    70f0:	ldr	r2, [sp, #40]	; 0x28
    70f4:	cmp	r2, #0
    70f8:	beq	7464 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3dc>
    70fc:	mov	r2, r5
    7100:	mov	r1, r4
    7104:	mov	r0, r7
    7108:	bl	460 <flatcc_json_parser_symbol_start>
    710c:	mov	r4, r0
    7110:	mov	r1, r5
    7114:	mov	r0, r4
    7118:	bl	590 <flatcc_json_parser_symbol_part>
    711c:	eor	r3, r1, #97	; 0x61
    7120:	eor	r3, r3, #24832	; 0x6100
    7124:	eor	r3, r3, #6356992	; 0x610000
    7128:	eor	r3, r3, #1627389952	; 0x61000000
    712c:	eor	ip, r0, #98	; 0x62
    7130:	eor	ip, ip, #25088	; 0x6200
    7134:	eor	ip, ip, #6422528	; 0x620000
    7138:	eor	ip, ip, #1593835520	; 0x5f000000
    713c:	orr	r2, r3, ip
    7140:	cmp	r2, #0
    7144:	bne	7434 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3ac>
    7148:	add	r4, r4, #8
    714c:	mov	r1, r5
    7150:	mov	r0, r4
    7154:	bl	590 <flatcc_json_parser_symbol_part>
    7158:	mov	r2, r1
    715c:	mov	ip, r0
    7160:	eor	r2, r2, #884	; 0x374
    7164:	eor	r2, r2, #1011712	; 0xf7000
    7168:	eor	r2, r2, #38797312	; 0x2500000
    716c:	eor	r2, r2, #1610612736	; 0x60000000
    7170:	eor	ip, ip, #95	; 0x5f
    7174:	eor	ip, ip, #160768	; 0x27400
    7178:	eor	ip, ip, #24117248	; 0x1700000
    717c:	eor	ip, ip, #1610612736	; 0x60000000
    7180:	orr	r2, r2, ip
    7184:	cmp	r2, #0
    7188:	beq	72e8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x260>
    718c:	bic	r0, r0, #255	; 0xff
    7190:	eor	r1, r1, #884	; 0x374
    7194:	eor	r1, r1, #1011712	; 0xf7000
    7198:	eor	r1, r1, #38797312	; 0x2500000
    719c:	eor	r1, r1, #1610612736	; 0x60000000
    71a0:	eor	r3, r0, #29440	; 0x7300
    71a4:	eor	r3, r3, #91226112	; 0x5700000
    71a8:	eor	r3, r3, #1610612736	; 0x60000000
    71ac:	orr	r2, r1, r3
    71b0:	cmp	r2, #0
    71b4:	bne	72d0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x248>
    71b8:	mov	r1, r4
    71bc:	mov	r4, r1
    71c0:	mov	r3, #7
    71c4:	mov	r2, r5
    71c8:	mov	r0, r7
    71cc:	bl	a5c <flatcc_json_parser_match_symbol>
    71d0:	mov	r1, r0
    71d4:	cmp	r4, r1
    71d8:	beq	72bc <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x234>
    71dc:	mov	r3, #0
    71e0:	mov	r2, #0
    71e4:	str	r2, [sp, #48]	; 0x30
    71e8:	str	r3, [sp, #52]	; 0x34
    71ec:	mov	r8, r1
    71f0:	add	r3, sp, #48	; 0x30
    71f4:	mov	r2, r5
    71f8:	mov	r1, r8
    71fc:	mov	r0, r7
    7200:	bl	1600 <flatcc_json_parser_int64>
    7204:	mov	r4, r0
    7208:	cmp	r8, r4
    720c:	bne	7258 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1d0>
    7210:	mov	r8, r4
    7214:	ldr	r3, [pc, #676]	; 74c0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x438>
    7218:	add	r1, sp, #48	; 0x30
    721c:	str	r1, [sp]
    7220:	mov	r2, r5
    7224:	mov	r1, r8
    7228:	mov	r0, r7
    722c:	bl	2188 <flatcc_json_parser_symbolic_int64>
    7230:	mov	r4, r0
    7234:	cmp	r4, r8
    7238:	beq	724c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1c4>
    723c:	cmp	r4, r5
    7240:	moveq	r2, #1
    7244:	movne	r2, #0
    7248:	b	7250 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1c8>
    724c:	mov	r2, #1
    7250:	cmp	r2, #0
    7254:	bne	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7258:	ldr	r2, [sp, #48]	; 0x30
    725c:	ldr	r1, [sp, #52]	; 0x34
    7260:	orr	r3, r1, r2
    7264:	cmp	r3, #0
    7268:	bne	7284 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x1fc>
    726c:	ldr	r2, [r7, #8]
    7270:	and	r1, r2, #2
    7274:	cmp	r1, #0
    7278:	movne	r2, #1
    727c:	moveq	r2, #0
    7280:	b	7288 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x200>
    7284:	mov	r2, #1
    7288:	cmp	r2, #0
    728c:	beq	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7290:	ldr	r0, [r7]
    7294:	mov	r1, #0
    7298:	mov	r2, #8
    729c:	mov	r3, #8
    72a0:	bl	0 <flatcc_builder_table_add>
    72a4:	cmp	r0, #0
    72a8:	beq	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    72ac:	ldr	r2, [sp, #48]	; 0x30
    72b0:	ldr	r3, [sp, #52]	; 0x34
    72b4:	bl	294 <flatbuffers_int64_write_to_pe>
    72b8:	b	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    72bc:	mov	r2, r5
    72c0:	mov	r0, r7
    72c4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    72c8:	mov	r4, r0
    72cc:	b	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    72d0:	mov	r2, r5
    72d4:	mov	r1, r4
    72d8:	mov	r0, r7
    72dc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    72e0:	mov	r4, r0
    72e4:	b	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    72e8:	add	r4, r4, #8
    72ec:	mov	r1, r5
    72f0:	mov	r0, r4
    72f4:	bl	590 <flatcc_json_parser_symbol_part>
    72f8:	and	r2, r0, #-16777216	; 0xff000000
    72fc:	eor	r3, r1, #1392	; 0x570
    7300:	eor	r3, r3, #286720	; 0x46000
    7304:	eor	r3, r3, #57671680	; 0x3700000
    7308:	eor	r3, r3, #1879048192	; 0x70000000
    730c:	eor	r0, r2, #1929379840	; 0x73000000
    7310:	orr	r0, r3, r0
    7314:	cmp	r0, #0
    7318:	bne	741c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x394>
    731c:	mov	r3, #5
    7320:	mov	r2, r5
    7324:	mov	r1, r4
    7328:	mov	r0, r7
    732c:	bl	a5c <flatcc_json_parser_match_symbol>
    7330:	mov	r1, r0
    7334:	cmp	r4, r1
    7338:	beq	7408 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x380>
    733c:	mov	r0, #0
    7340:	str	r0, [sp, #44]	; 0x2c
    7344:	mov	r8, r1
    7348:	add	r3, sp, #44	; 0x2c
    734c:	mov	r2, r5
    7350:	mov	r1, r8
    7354:	mov	r0, r7
    7358:	bl	13b4 <flatcc_json_parser_uint32>
    735c:	mov	r4, r0
    7360:	cmp	r8, r4
    7364:	bne	73b0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x328>
    7368:	mov	r8, r4
    736c:	ldr	r3, [pc, #336]	; 74c4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x43c>
    7370:	add	r0, sp, #44	; 0x2c
    7374:	str	r0, [sp]
    7378:	mov	r2, r5
    737c:	mov	r1, r8
    7380:	mov	r0, r7
    7384:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    7388:	mov	r4, r0
    738c:	cmp	r4, r8
    7390:	beq	73a4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x31c>
    7394:	cmp	r4, r5
    7398:	moveq	r1, #1
    739c:	movne	r1, #0
    73a0:	b	73a8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x320>
    73a4:	mov	r1, #1
    73a8:	cmp	r1, #0
    73ac:	bne	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    73b0:	ldr	r1, [sp, #44]	; 0x2c
    73b4:	cmp	r1, #0
    73b8:	bne	73d4 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x34c>
    73bc:	ldr	r0, [r7, #8]
    73c0:	and	r2, r0, #2
    73c4:	cmp	r2, #0
    73c8:	movne	r3, #1
    73cc:	moveq	r3, #0
    73d0:	b	73d8 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x350>
    73d4:	mov	r3, #1
    73d8:	cmp	r3, #0
    73dc:	beq	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    73e0:	ldr	r0, [r7]
    73e4:	mov	r1, #1
    73e8:	mov	r2, #4
    73ec:	mov	r3, #4
    73f0:	bl	0 <flatcc_builder_table_add>
    73f4:	cmp	r0, #0
    73f8:	beq	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    73fc:	ldr	r1, [sp, #44]	; 0x2c
    7400:	bl	d8 <flatbuffers_uint32_write_to_pe>
    7404:	b	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7408:	mov	r2, r5
    740c:	mov	r0, r7
    7410:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7414:	mov	r4, r0
    7418:	b	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    741c:	mov	r2, r5
    7420:	mov	r1, r4
    7424:	mov	r0, r7
    7428:	bl	0 <flatcc_json_parser_unmatched_symbol>
    742c:	mov	r4, r0
    7430:	b	7448 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x3c0>
    7434:	mov	r2, r5
    7438:	mov	r1, r4
    743c:	mov	r0, r7
    7440:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7444:	mov	r4, r0
    7448:	add	r3, sp, #40	; 0x28
    744c:	mov	r2, r5
    7450:	mov	r1, r4
    7454:	mov	r0, r7
    7458:	bl	72c <flatcc_json_parser_object_end>
    745c:	mov	r4, r0
    7460:	b	70f0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x68>
    7464:	ldr	ip, [r7, #24]
    7468:	cmp	ip, #0
    746c:	bne	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7470:	ldr	r0, [r7]
    7474:	bl	0 <flatcc_builder_end_table>
    7478:	str	r0, [r6]
    747c:	cmp	r0, #0
    7480:	beq	748c <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x404>
    7484:	mov	r0, r4
    7488:	b	74a0 <MyGame_Example_TestJSONPrefixParsing3_parse_json_table+0x418>
    748c:	mov	r3, #33	; 0x21
    7490:	mov	r2, r5
    7494:	mov	r1, r4
    7498:	mov	r0, r7
    749c:	bl	0 <flatcc_json_parser_set_error>
    74a0:	ldr	r4, [sp, #16]
    74a4:	ldr	r5, [sp, #20]
    74a8:	ldr	r6, [sp, #24]
    74ac:	ldr	r7, [sp, #28]
    74b0:	ldr	r8, [sp, #32]
    74b4:	ldr	lr, [sp, #8]
    74b8:	add	sp, sp, #56	; 0x38
    74bc:	bx	lr
    74c0:	.word	0x0000013c
    74c4:	.word	0x00000130

000074c8 <MyGame_Example_TestBase64_parse_json_table>:
    74c8:	mov	ip, sp
    74cc:	sub	sp, sp, #48	; 0x30
    74d0:	str	ip, [sp, #4]
    74d4:	str	lr, [sp, #8]
    74d8:	str	r4, [sp, #16]
    74dc:	str	r5, [sp, #20]
    74e0:	str	r6, [sp, #24]
    74e4:	str	r7, [sp, #28]
    74e8:	str	r8, [sp, #32]
    74ec:	mov	r5, r3
    74f0:	mov	r6, r2
    74f4:	mov	r7, r1
    74f8:	mov	r8, r0
    74fc:	mov	r1, #0
    7500:	str	r1, [r5]
    7504:	ldr	r0, [r8]
    7508:	mov	r1, #3
    750c:	bl	0 <flatcc_builder_start_table>
    7510:	cmp	r0, #0
    7514:	bne	7848 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7518:	add	r3, sp, #40	; 0x28
    751c:	mov	r2, r6
    7520:	mov	r1, r7
    7524:	mov	r0, r8
    7528:	bl	64c <flatcc_json_parser_object_start>
    752c:	mov	r7, r0
    7530:	ldr	r0, [sp, #40]	; 0x28
    7534:	cmp	r0, #0
    7538:	beq	7820 <MyGame_Example_TestBase64_parse_json_table+0x358>
    753c:	mov	r2, r6
    7540:	mov	r1, r7
    7544:	mov	r0, r8
    7548:	bl	460 <flatcc_json_parser_symbol_start>
    754c:	mov	r7, r0
    7550:	mov	r1, r6
    7554:	mov	r0, r7
    7558:	bl	590 <flatcc_json_parser_symbol_part>
    755c:	mov	r3, r1
    7560:	movw	ip, #29556	; 0x7374
    7564:	movt	ip, #28261	; 0x6e65
    7568:	cmp	r3, ip
    756c:	bne	7588 <MyGame_Example_TestBase64_parse_json_table+0xc0>
    7570:	mov	r2, r0
    7574:	movw	r3, #0
    7578:	movt	r3, #25956	; 0x6564
    757c:	cmp	r2, r3
    7580:	bcc	773c <MyGame_Example_TestBase64_parse_json_table+0x274>
    7584:	b	759c <MyGame_Example_TestBase64_parse_json_table+0xd4>
    7588:	mov	ip, r1
    758c:	movw	r3, #29556	; 0x7374
    7590:	movt	r3, #28261	; 0x6e65
    7594:	cmp	ip, r3
    7598:	bcc	773c <MyGame_Example_TestBase64_parse_json_table+0x274>
    759c:	mov	r3, r0
    75a0:	mov	r2, r1
    75a4:	bic	ip, r3, #255	; 0xff
    75a8:	eor	r3, r2, #100	; 0x64
    75ac:	eor	r3, r3, #158720	; 0x26c00
    75b0:	eor	r3, r3, #91226112	; 0x5700000
    75b4:	eor	r3, r3, #1879048192	; 0x70000000
    75b8:	eor	r2, ip, #24832	; 0x6100
    75bc:	eor	r2, r2, #24379392	; 0x1740000
    75c0:	eor	r2, r2, #1610612736	; 0x60000000
    75c4:	orr	r2, r3, r2
    75c8:	cmp	r2, #0
    75cc:	beq	76a8 <MyGame_Example_TestBase64_parse_json_table+0x1e0>
    75d0:	bic	r3, r0, #255	; 0xff
    75d4:	bic	r3, r3, #65280	; 0xff00
    75d8:	eor	ip, r1, #884	; 0x374
    75dc:	eor	ip, ip, #356352	; 0x57000
    75e0:	eor	ip, ip, #241172480	; 0xe600000
    75e4:	eor	ip, ip, #1610612736	; 0x60000000
    75e8:	eor	r0, r3, #23330816	; 0x1640000
    75ec:	eor	r0, r0, #1677721600	; 0x64000000
    75f0:	orr	ip, ip, r0
    75f4:	cmp	ip, #0
    75f8:	bne	7690 <MyGame_Example_TestBase64_parse_json_table+0x1c8>
    75fc:	mov	r3, #6
    7600:	mov	r2, r6
    7604:	mov	r1, r7
    7608:	mov	r0, r8
    760c:	bl	a5c <flatcc_json_parser_match_symbol>
    7610:	mov	r1, r0
    7614:	cmp	r7, r1
    7618:	beq	767c <MyGame_Example_TestBase64_parse_json_table+0x1b4>
    761c:	add	r3, sp, #44	; 0x2c
    7620:	mov	r2, #0
    7624:	str	r2, [sp]
    7628:	mov	r2, r6
    762c:	mov	r0, r8
    7630:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    7634:	mov	r7, r0
    7638:	ldr	r3, [sp, #44]	; 0x2c
    763c:	cmp	r3, #0
    7640:	beq	7664 <MyGame_Example_TestBase64_parse_json_table+0x19c>
    7644:	ldr	r0, [r8]
    7648:	mov	r1, #2
    764c:	bl	0 <flatcc_builder_table_add_offset>
    7650:	mov	r4, r0
    7654:	cmp	r4, #0
    7658:	moveq	r0, #1
    765c:	movne	r0, #0
    7660:	b	7668 <MyGame_Example_TestBase64_parse_json_table+0x1a0>
    7664:	mov	r0, #1
    7668:	cmp	r0, #0
    766c:	bne	7848 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7670:	ldr	ip, [sp, #44]	; 0x2c
    7674:	str	ip, [r4]
    7678:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    767c:	mov	r2, r6
    7680:	mov	r0, r8
    7684:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7688:	mov	r7, r0
    768c:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7690:	mov	r2, r6
    7694:	mov	r1, r7
    7698:	mov	r0, r8
    769c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    76a0:	mov	r7, r0
    76a4:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    76a8:	mov	r3, #7
    76ac:	mov	r2, r6
    76b0:	mov	r1, r7
    76b4:	mov	r0, r8
    76b8:	bl	a5c <flatcc_json_parser_match_symbol>
    76bc:	mov	r1, r0
    76c0:	cmp	r7, r1
    76c4:	beq	7728 <MyGame_Example_TestBase64_parse_json_table+0x260>
    76c8:	add	r3, sp, #44	; 0x2c
    76cc:	mov	ip, #1
    76d0:	str	ip, [sp]
    76d4:	mov	r2, r6
    76d8:	mov	r0, r8
    76dc:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    76e0:	mov	r7, r0
    76e4:	ldr	r2, [sp, #44]	; 0x2c
    76e8:	cmp	r2, #0
    76ec:	beq	7710 <MyGame_Example_TestBase64_parse_json_table+0x248>
    76f0:	ldr	r0, [r8]
    76f4:	mov	r1, #1
    76f8:	bl	0 <flatcc_builder_table_add_offset>
    76fc:	mov	r4, r0
    7700:	cmp	r4, #0
    7704:	moveq	r0, #1
    7708:	movne	r0, #0
    770c:	b	7714 <MyGame_Example_TestBase64_parse_json_table+0x24c>
    7710:	mov	r0, #1
    7714:	cmp	r0, #0
    7718:	bne	7848 <MyGame_Example_TestBase64_parse_json_table+0x380>
    771c:	ldr	r0, [sp, #44]	; 0x2c
    7720:	str	r0, [r4]
    7724:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    7728:	mov	r2, r6
    772c:	mov	r0, r8
    7730:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7734:	mov	r7, r0
    7738:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    773c:	mov	r2, #0
    7740:	eor	r3, r1, #97	; 0x61
    7744:	eor	r3, r3, #95232	; 0x17400
    7748:	eor	r3, r3, #73400320	; 0x4600000
    774c:	eor	r3, r3, #1610612736	; 0x60000000
    7750:	orr	r3, r3, r2
    7754:	cmp	r3, #0
    7758:	bne	77f0 <MyGame_Example_TestBase64_parse_json_table+0x328>
    775c:	mov	r3, #4
    7760:	mov	r2, r6
    7764:	mov	r1, r7
    7768:	mov	r0, r8
    776c:	bl	a5c <flatcc_json_parser_match_symbol>
    7770:	mov	r1, r0
    7774:	cmp	r7, r1
    7778:	beq	77dc <MyGame_Example_TestBase64_parse_json_table+0x314>
    777c:	add	r3, sp, #44	; 0x2c
    7780:	mov	r0, #0
    7784:	str	r0, [sp]
    7788:	mov	r2, r6
    778c:	mov	r0, r8
    7790:	bl	0 <flatcc_json_parser_build_uint8_vector_base64>
    7794:	mov	r7, r0
    7798:	ldr	r1, [sp, #44]	; 0x2c
    779c:	cmp	r1, #0
    77a0:	beq	77c4 <MyGame_Example_TestBase64_parse_json_table+0x2fc>
    77a4:	ldr	r0, [r8]
    77a8:	mov	r1, #0
    77ac:	bl	0 <flatcc_builder_table_add_offset>
    77b0:	mov	r4, r0
    77b4:	cmp	r4, #0
    77b8:	moveq	r2, #1
    77bc:	movne	r2, #0
    77c0:	b	77c8 <MyGame_Example_TestBase64_parse_json_table+0x300>
    77c4:	mov	r2, #1
    77c8:	cmp	r2, #0
    77cc:	bne	7848 <MyGame_Example_TestBase64_parse_json_table+0x380>
    77d0:	ldr	r2, [sp, #44]	; 0x2c
    77d4:	str	r2, [r4]
    77d8:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    77dc:	mov	r2, r6
    77e0:	mov	r0, r8
    77e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    77e8:	mov	r7, r0
    77ec:	b	7804 <MyGame_Example_TestBase64_parse_json_table+0x33c>
    77f0:	mov	r2, r6
    77f4:	mov	r1, r7
    77f8:	mov	r0, r8
    77fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7800:	mov	r7, r0
    7804:	add	r3, sp, #40	; 0x28
    7808:	mov	r2, r6
    780c:	mov	r1, r7
    7810:	mov	r0, r8
    7814:	bl	72c <flatcc_json_parser_object_end>
    7818:	mov	r7, r0
    781c:	b	7530 <MyGame_Example_TestBase64_parse_json_table+0x68>
    7820:	ldr	r0, [r8, #24]
    7824:	cmp	r0, #0
    7828:	bne	7848 <MyGame_Example_TestBase64_parse_json_table+0x380>
    782c:	ldr	r0, [r8]
    7830:	bl	0 <flatcc_builder_end_table>
    7834:	str	r0, [r5]
    7838:	cmp	r0, #0
    783c:	beq	7848 <MyGame_Example_TestBase64_parse_json_table+0x380>
    7840:	mov	r0, r7
    7844:	b	785c <MyGame_Example_TestBase64_parse_json_table+0x394>
    7848:	mov	r3, #33	; 0x21
    784c:	mov	r2, r6
    7850:	mov	r1, r7
    7854:	mov	r0, r8
    7858:	bl	0 <flatcc_json_parser_set_error>
    785c:	ldr	r4, [sp, #16]
    7860:	ldr	r5, [sp, #20]
    7864:	ldr	r6, [sp, #24]
    7868:	ldr	r7, [sp, #28]
    786c:	ldr	r8, [sp, #32]
    7870:	ldr	lr, [sp, #8]
    7874:	add	sp, sp, #48	; 0x30
    7878:	bx	lr

0000787c <MyGame_Example_Monster_parse_json_table>:
    787c:	mov	ip, sp
    7880:	sub	sp, sp, #160	; 0xa0
    7884:	str	ip, [sp, #16]
    7888:	str	lr, [sp, #20]
    788c:	str	r4, [sp, #24]
    7890:	str	r5, [sp, #28]
    7894:	str	r6, [sp, #32]
    7898:	str	r7, [sp, #36]	; 0x24
    789c:	str	r8, [sp, #40]	; 0x28
    78a0:	str	r9, [sp, #44]	; 0x2c
    78a4:	str	sl, [sp, #48]	; 0x30
    78a8:	str	fp, [sp, #52]	; 0x34
    78ac:	mov	r8, r3
    78b0:	mov	r5, r2
    78b4:	mov	r4, r1
    78b8:	mov	r6, r0
    78bc:	mov	r3, #0
    78c0:	str	r3, [r8]
    78c4:	ldr	r0, [r6]
    78c8:	mov	r1, #36	; 0x24
    78cc:	bl	0 <flatcc_builder_start_table>
    78d0:	cmp	r0, #0
    78d4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    78d8:	mov	r3, #1
    78dc:	add	r0, sp, #84	; 0x54
    78e0:	str	r0, [sp]
    78e4:	mov	r2, r5
    78e8:	mov	r1, r4
    78ec:	mov	r0, r6
    78f0:	bl	0 <flatcc_json_parser_prepare_unions>
    78f4:	cmp	r5, r0
    78f8:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    78fc:	add	r3, sp, #76	; 0x4c
    7900:	mov	r2, r5
    7904:	mov	r1, r4
    7908:	mov	r0, r6
    790c:	bl	64c <flatcc_json_parser_object_start>
    7910:	mov	r4, r0
    7914:	ldr	ip, [sp, #76]	; 0x4c
    7918:	cmp	ip, #0
    791c:	beq	ac9c <MyGame_Example_Monster_parse_json_table+0x3420>
    7920:	mov	r2, r5
    7924:	mov	r1, r4
    7928:	mov	r0, r6
    792c:	bl	460 <flatcc_json_parser_symbol_start>
    7930:	mov	r4, r0
    7934:	mov	r1, r5
    7938:	mov	r0, r4
    793c:	bl	590 <flatcc_json_parser_symbol_part>
    7940:	mov	fp, r1
    7944:	mov	sl, r0
    7948:	mov	r1, fp
    794c:	movw	r3, #29556	; 0x7374
    7950:	movt	r3, #29797	; 0x7465
    7954:	cmp	r1, r3
    7958:	bne	7974 <MyGame_Example_Monster_parse_json_table+0xf8>
    795c:	mov	r1, sl
    7960:	movw	r0, #29281	; 0x7261
    7964:	movt	r0, #24946	; 0x6172
    7968:	cmp	r1, r0
    796c:	bcc	9c40 <MyGame_Example_Monster_parse_json_table+0x23c4>
    7970:	b	7988 <MyGame_Example_Monster_parse_json_table+0x10c>
    7974:	mov	r1, fp
    7978:	movw	r2, #29556	; 0x7374
    797c:	movt	r2, #29797	; 0x7465
    7980:	cmp	r1, r2
    7984:	bcc	9c40 <MyGame_Example_Monster_parse_json_table+0x23c4>
    7988:	mov	r1, sl
    798c:	mov	r3, fp
    7990:	movw	r2, #29556	; 0x7374
    7994:	movt	r2, #29797	; 0x7465
    7998:	cmp	r3, r2
    799c:	bne	79b4 <MyGame_Example_Monster_parse_json_table+0x138>
    79a0:	movw	r2, #0
    79a4:	movt	r2, #26163	; 0x6633
    79a8:	cmp	r1, r2
    79ac:	bcc	79c8 <MyGame_Example_Monster_parse_json_table+0x14c>
    79b0:	b	88b8 <MyGame_Example_Monster_parse_json_table+0x103c>
    79b4:	mov	r2, fp
    79b8:	movw	r3, #29556	; 0x7374
    79bc:	movt	r3, #29797	; 0x7465
    79c0:	cmp	r2, r3
    79c4:	bcs	88b8 <MyGame_Example_Monster_parse_json_table+0x103c>
    79c8:	mov	ip, fp
    79cc:	eor	r2, ip, #884	; 0x374
    79d0:	eor	r2, r2, #356352	; 0x57000
    79d4:	eor	r2, r2, #73400320	; 0x4600000
    79d8:	eor	r2, r2, #1879048192	; 0x70000000
    79dc:	mov	r0, sl
    79e0:	eor	r1, r0, #97	; 0x61
    79e4:	eor	r1, r1, #29184	; 0x7200
    79e8:	eor	r1, r1, #7471104	; 0x720000
    79ec:	eor	r1, r1, #1627389952	; 0x61000000
    79f0:	orr	ip, r2, r1
    79f4:	cmp	ip, #0
    79f8:	bne	8240 <MyGame_Example_Monster_parse_json_table+0x9c4>
    79fc:	add	r4, r4, #8
    7a00:	mov	r1, r5
    7a04:	mov	r0, r4
    7a08:	bl	590 <flatcc_json_parser_symbol_part>
    7a0c:	mov	sl, r1
    7a10:	mov	r9, r0
    7a14:	mov	r0, sl
    7a18:	movw	r1, #26227	; 0x6673
    7a1c:	movt	r1, #31087	; 0x796f
    7a20:	cmp	r0, r1
    7a24:	bne	7a40 <MyGame_Example_Monster_parse_json_table+0x1c4>
    7a28:	mov	r1, r9
    7a2c:	movw	ip, #26990	; 0x696e
    7a30:	movt	ip, #29810	; 0x7472
    7a34:	cmp	r1, ip
    7a38:	bcc	7a50 <MyGame_Example_Monster_parse_json_table+0x1d4>
    7a3c:	b	7d94 <MyGame_Example_Monster_parse_json_table+0x518>
    7a40:	movw	ip, #26227	; 0x6673
    7a44:	movt	ip, #31087	; 0x796f
    7a48:	cmp	r0, ip
    7a4c:	bcs	7d94 <MyGame_Example_Monster_parse_json_table+0x518>
    7a50:	mov	r0, sl
    7a54:	mov	ip, r9
    7a58:	eor	r3, r0, #98	; 0x62
    7a5c:	eor	r3, r3, #26112	; 0x6600
    7a60:	eor	r3, r3, #7274496	; 0x6f0000
    7a64:	eor	r3, r3, #2030043136	; 0x79000000
    7a68:	eor	r1, ip, #115	; 0x73
    7a6c:	eor	r1, r1, #224256	; 0x36c00
    7a70:	eor	r1, r1, #57409536	; 0x36c0000
    7a74:	eor	r1, r1, #1811939328	; 0x6c000000
    7a78:	orr	r2, r3, r1
    7a7c:	cmp	r2, #0
    7a80:	bne	7bf0 <MyGame_Example_Monster_parse_json_table+0x374>
    7a84:	mov	fp, r4
    7a88:	mov	r3, #8
    7a8c:	mov	r2, r5
    7a90:	mov	r1, fp
    7a94:	mov	r0, r6
    7a98:	bl	a5c <flatcc_json_parser_match_symbol>
    7a9c:	mov	r4, r0
    7aa0:	cmp	fp, r4
    7aa4:	beq	7bf0 <MyGame_Example_Monster_parse_json_table+0x374>
    7aa8:	ldr	r0, [r6]
    7aac:	mov	r1, #1
    7ab0:	mov	r2, #1
    7ab4:	mvn	r3, #0
    7ab8:	bl	0 <flatcc_builder_start_vector>
    7abc:	cmp	r0, #0
    7ac0:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7ac4:	add	r3, sp, #76	; 0x4c
    7ac8:	mov	r2, r5
    7acc:	mov	r1, r4
    7ad0:	mov	r0, r6
    7ad4:	bl	854 <flatcc_json_parser_array_start>
    7ad8:	mov	r4, r0
    7adc:	ldr	r0, [sp, #76]	; 0x4c
    7ae0:	cmp	r0, #0
    7ae4:	beq	7ba0 <MyGame_Example_Monster_parse_json_table+0x324>
    7ae8:	mov	r0, #0
    7aec:	strb	r0, [sp, #60]	; 0x3c
    7af0:	ldr	r0, [r6]
    7af4:	mov	r1, #1
    7af8:	bl	0 <flatcc_builder_extend_vector>
    7afc:	mov	r9, r0
    7b00:	cmp	r0, #0
    7b04:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7b08:	mov	r1, r4
    7b0c:	mov	sl, r1
    7b10:	add	r3, sp, #60	; 0x3c
    7b14:	mov	r2, r5
    7b18:	mov	r0, r6
    7b1c:	bl	1918 <flatcc_json_parser_bool>
    7b20:	mov	r4, r0
    7b24:	cmp	sl, r4
    7b28:	bne	7b74 <MyGame_Example_Monster_parse_json_table+0x2f8>
    7b2c:	mov	sl, r4
    7b30:	ldr	r3, [pc, #2800]	; 8628 <MyGame_Example_Monster_parse_json_table+0xdac>
    7b34:	add	r0, sp, #60	; 0x3c
    7b38:	str	r0, [sp]
    7b3c:	mov	r2, r5
    7b40:	mov	r1, sl
    7b44:	mov	r0, r6
    7b48:	bl	28e4 <flatcc_json_parser_symbolic_bool>
    7b4c:	mov	r4, r0
    7b50:	cmp	r4, sl
    7b54:	beq	7b68 <MyGame_Example_Monster_parse_json_table+0x2ec>
    7b58:	cmp	r4, r5
    7b5c:	moveq	r1, #1
    7b60:	movne	r1, #0
    7b64:	b	7b6c <MyGame_Example_Monster_parse_json_table+0x2f0>
    7b68:	mov	r1, #1
    7b6c:	cmp	r1, #0
    7b70:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7b74:	ldrb	r3, [sp, #60]	; 0x3c
    7b78:	and	r1, r3, #255	; 0xff
    7b7c:	mov	r0, r9
    7b80:	bl	3b4 <flatbuffers_bool_write_to_pe>
    7b84:	add	r3, sp, #76	; 0x4c
    7b88:	mov	r2, r5
    7b8c:	mov	r1, r4
    7b90:	mov	r0, r6
    7b94:	bl	934 <flatcc_json_parser_array_end>
    7b98:	mov	r4, r0
    7b9c:	b	7adc <MyGame_Example_Monster_parse_json_table+0x260>
    7ba0:	ldr	r0, [r6]
    7ba4:	bl	0 <flatcc_builder_end_vector>
    7ba8:	str	r0, [sp, #80]	; 0x50
    7bac:	ldr	r1, [sp, #80]	; 0x50
    7bb0:	cmp	r1, #0
    7bb4:	beq	7bd8 <MyGame_Example_Monster_parse_json_table+0x35c>
    7bb8:	ldr	r0, [r6]
    7bbc:	mov	r1, #24
    7bc0:	bl	0 <flatcc_builder_table_add_offset>
    7bc4:	mov	r7, r0
    7bc8:	cmp	r7, #0
    7bcc:	moveq	r2, #1
    7bd0:	movne	r2, #0
    7bd4:	b	7bdc <MyGame_Example_Monster_parse_json_table+0x360>
    7bd8:	mov	r2, #1
    7bdc:	cmp	r2, #0
    7be0:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7be4:	ldr	r3, [sp, #80]	; 0x50
    7be8:	str	r3, [r7]
    7bec:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7bf0:	eor	r3, sl, #115	; 0x73
    7bf4:	eor	r3, r3, #26112	; 0x6600
    7bf8:	eor	r3, r3, #7274496	; 0x6f0000
    7bfc:	eor	r3, r3, #2030043136	; 0x79000000
    7c00:	eor	r0, r9, #101	; 0x65
    7c04:	eor	r0, r0, #160768	; 0x27400
    7c08:	eor	r0, r0, #258998272	; 0xf700000
    7c0c:	eor	r0, r0, #1610612736	; 0x60000000
    7c10:	orr	r0, r3, r0
    7c14:	cmp	r0, #0
    7c18:	bne	7d7c <MyGame_Example_Monster_parse_json_table+0x500>
    7c1c:	add	r9, r4, #8
    7c20:	mov	r1, r5
    7c24:	mov	r0, r9
    7c28:	bl	590 <flatcc_json_parser_symbol_part>
    7c2c:	bic	r3, r0, #255	; 0xff
    7c30:	eor	r2, r1, #114	; 0x72
    7c34:	eor	r2, r2, #226304	; 0x37400
    7c38:	eor	r2, r2, #74448896	; 0x4700000
    7c3c:	eor	r2, r2, #1610612736	; 0x60000000
    7c40:	eor	r1, r3, #226304	; 0x37400
    7c44:	eor	r1, r1, #90177536	; 0x5600000
    7c48:	eor	r1, r1, #1879048192	; 0x70000000
    7c4c:	orr	r0, r2, r1
    7c50:	cmp	r0, #0
    7c54:	bne	7d64 <MyGame_Example_Monster_parse_json_table+0x4e8>
    7c58:	mov	r3, #7
    7c5c:	mov	r2, r5
    7c60:	mov	r1, r9
    7c64:	mov	r0, r6
    7c68:	bl	a5c <flatcc_json_parser_match_symbol>
    7c6c:	mov	r4, r0
    7c70:	cmp	r9, r4
    7c74:	beq	7d4c <MyGame_Example_Monster_parse_json_table+0x4d0>
    7c78:	ldr	r0, [r6]
    7c7c:	mov	r1, #8
    7c80:	mov	r2, #4
    7c84:	mvn	r3, #-536870912	; 0xe0000000
    7c88:	bl	0 <flatcc_builder_start_vector>
    7c8c:	cmp	r0, #0
    7c90:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7c94:	add	r3, sp, #76	; 0x4c
    7c98:	mov	r2, r5
    7c9c:	mov	r1, r4
    7ca0:	mov	r0, r6
    7ca4:	bl	854 <flatcc_json_parser_array_start>
    7ca8:	mov	r4, r0
    7cac:	ldr	r1, [sp, #76]	; 0x4c
    7cb0:	cmp	r1, #0
    7cb4:	beq	7cfc <MyGame_Example_Monster_parse_json_table+0x480>
    7cb8:	ldr	r0, [r6]
    7cbc:	mov	r1, #1
    7cc0:	bl	0 <flatcc_builder_extend_vector>
    7cc4:	mov	r3, r0
    7cc8:	cmp	r3, #0
    7ccc:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7cd0:	mov	r2, r5
    7cd4:	mov	r1, r4
    7cd8:	mov	r0, r6
    7cdc:	bl	51b0 <MyGame_Example_Ability_parse_json_struct_inline>
    7ce0:	add	r3, sp, #76	; 0x4c
    7ce4:	mov	r2, r5
    7ce8:	mov	r1, r0
    7cec:	mov	r0, r6
    7cf0:	bl	934 <flatcc_json_parser_array_end>
    7cf4:	mov	r4, r0
    7cf8:	b	7cac <MyGame_Example_Monster_parse_json_table+0x430>
    7cfc:	ldr	r0, [r6]
    7d00:	bl	0 <flatcc_builder_end_vector>
    7d04:	str	r0, [sp, #80]	; 0x50
    7d08:	ldr	ip, [sp, #80]	; 0x50
    7d0c:	cmp	ip, #0
    7d10:	beq	7d34 <MyGame_Example_Monster_parse_json_table+0x4b8>
    7d14:	ldr	r0, [r6]
    7d18:	mov	r1, #29
    7d1c:	bl	0 <flatcc_builder_table_add_offset>
    7d20:	mov	r7, r0
    7d24:	cmp	r0, #0
    7d28:	moveq	r0, #1
    7d2c:	movne	r0, #0
    7d30:	b	7d38 <MyGame_Example_Monster_parse_json_table+0x4bc>
    7d34:	mov	r0, #1
    7d38:	cmp	r0, #0
    7d3c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7d40:	ldr	r3, [sp, #80]	; 0x50
    7d44:	str	r3, [r7]
    7d48:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7d4c:	mov	r2, r5
    7d50:	mov	r1, r4
    7d54:	mov	r0, r6
    7d58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d5c:	mov	r4, r0
    7d60:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7d64:	mov	r2, r5
    7d68:	mov	r1, r9
    7d6c:	mov	r0, r6
    7d70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d74:	mov	r4, r0
    7d78:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7d7c:	mov	r2, r5
    7d80:	mov	r1, r4
    7d84:	mov	r0, r6
    7d88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7d8c:	mov	r4, r0
    7d90:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7d94:	mov	r0, sl
    7d98:	mov	ip, r9
    7d9c:	eor	r0, r0, #115	; 0x73
    7da0:	eor	r0, r0, #26112	; 0x6600
    7da4:	eor	r0, r0, #7274496	; 0x6f0000
    7da8:	eor	r0, r0, #2030043136	; 0x79000000
    7dac:	eor	r3, ip, #110	; 0x6e
    7db0:	eor	r3, r3, #26880	; 0x6900
    7db4:	eor	r3, r3, #7471104	; 0x720000
    7db8:	eor	r3, r3, #1946157056	; 0x74000000
    7dbc:	orr	r3, r0, r3
    7dc0:	cmp	r3, #0
    7dc4:	bne	808c <MyGame_Example_Monster_parse_json_table+0x810>
    7dc8:	add	r9, r4, #8
    7dcc:	mov	r1, r5
    7dd0:	mov	r0, r9
    7dd4:	bl	590 <flatcc_json_parser_symbol_part>
    7dd8:	mov	r2, r1
    7ddc:	bic	r2, r2, #255	; 0xff
    7de0:	bic	r2, r2, #65280	; 0xff00
    7de4:	mov	r0, #0
    7de8:	eor	r2, r2, #3276800	; 0x320000
    7dec:	eor	r2, r2, #1728053248	; 0x67000000
    7df0:	orr	ip, r2, r0
    7df4:	cmp	ip, #0
    7df8:	beq	7f5c <MyGame_Example_Monster_parse_json_table+0x6e0>
    7dfc:	and	r2, r1, #-16777216	; 0xff000000
    7e00:	mov	r0, #0
    7e04:	eor	r3, r2, #1728053248	; 0x67000000
    7e08:	orr	r0, r3, r0
    7e0c:	cmp	r0, #0
    7e10:	bne	7f44 <MyGame_Example_Monster_parse_json_table+0x6c8>
    7e14:	mov	r3, #1
    7e18:	mov	r2, r5
    7e1c:	mov	r1, r9
    7e20:	mov	r0, r6
    7e24:	bl	a5c <flatcc_json_parser_match_symbol>
    7e28:	mov	r4, r0
    7e2c:	cmp	r9, r4
    7e30:	beq	7f2c <MyGame_Example_Monster_parse_json_table+0x6b0>
    7e34:	ldr	r0, [r6]
    7e38:	bl	0 <flatcc_builder_start_offset_vector>
    7e3c:	cmp	r0, #0
    7e40:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7e44:	add	r3, sp, #76	; 0x4c
    7e48:	mov	r2, r5
    7e4c:	mov	r1, r4
    7e50:	mov	r0, r6
    7e54:	bl	854 <flatcc_json_parser_array_start>
    7e58:	mov	r4, r0
    7e5c:	ldr	r0, [sp, #76]	; 0x4c
    7e60:	cmp	r0, #0
    7e64:	beq	7edc <MyGame_Example_Monster_parse_json_table+0x660>
    7e68:	add	r3, sp, #80	; 0x50
    7e6c:	mov	r2, r5
    7e70:	mov	r1, r4
    7e74:	mov	r0, r6
    7e78:	bl	0 <flatcc_json_parser_build_string>
    7e7c:	mov	r4, r0
    7e80:	ldr	ip, [sp, #80]	; 0x50
    7e84:	cmp	ip, #0
    7e88:	beq	7eac <MyGame_Example_Monster_parse_json_table+0x630>
    7e8c:	ldr	r0, [r6]
    7e90:	mov	r1, #1
    7e94:	bl	0 <flatcc_builder_extend_offset_vector>
    7e98:	mov	r7, r0
    7e9c:	cmp	r7, #0
    7ea0:	moveq	r1, #1
    7ea4:	movne	r1, #0
    7ea8:	b	7eb0 <MyGame_Example_Monster_parse_json_table+0x634>
    7eac:	mov	r1, #1
    7eb0:	cmp	r1, #0
    7eb4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7eb8:	ldr	r2, [sp, #80]	; 0x50
    7ebc:	str	r2, [r7]
    7ec0:	add	r3, sp, #76	; 0x4c
    7ec4:	mov	r2, r5
    7ec8:	mov	r1, r4
    7ecc:	mov	r0, r6
    7ed0:	bl	934 <flatcc_json_parser_array_end>
    7ed4:	mov	r4, r0
    7ed8:	b	7e5c <MyGame_Example_Monster_parse_json_table+0x5e0>
    7edc:	ldr	r0, [r6]
    7ee0:	bl	0 <flatcc_builder_end_offset_vector>
    7ee4:	str	r0, [sp, #80]	; 0x50
    7ee8:	ldr	r0, [sp, #80]	; 0x50
    7eec:	cmp	r0, #0
    7ef0:	beq	7f14 <MyGame_Example_Monster_parse_json_table+0x698>
    7ef4:	ldr	r0, [r6]
    7ef8:	mov	r1, #10
    7efc:	bl	0 <flatcc_builder_table_add_offset>
    7f00:	mov	r7, r0
    7f04:	cmp	r7, #0
    7f08:	moveq	r2, #1
    7f0c:	movne	r2, #0
    7f10:	b	7f18 <MyGame_Example_Monster_parse_json_table+0x69c>
    7f14:	mov	r2, #1
    7f18:	cmp	r2, #0
    7f1c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7f20:	ldr	ip, [sp, #80]	; 0x50
    7f24:	str	ip, [r7]
    7f28:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7f2c:	mov	r2, r5
    7f30:	mov	r1, r4
    7f34:	mov	r0, r6
    7f38:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f3c:	mov	r4, r0
    7f40:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7f44:	mov	r2, r5
    7f48:	mov	r1, r9
    7f4c:	mov	r0, r6
    7f50:	bl	0 <flatcc_json_parser_unmatched_symbol>
    7f54:	mov	r4, r0
    7f58:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    7f5c:	mov	r3, #2
    7f60:	mov	r2, r5
    7f64:	mov	r1, r9
    7f68:	mov	r0, r6
    7f6c:	bl	a5c <flatcc_json_parser_match_symbol>
    7f70:	mov	r4, r0
    7f74:	cmp	r9, r4
    7f78:	beq	8074 <MyGame_Example_Monster_parse_json_table+0x7f8>
    7f7c:	ldr	r0, [r6]
    7f80:	bl	0 <flatcc_builder_start_offset_vector>
    7f84:	cmp	r0, #0
    7f88:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    7f8c:	add	r3, sp, #76	; 0x4c
    7f90:	mov	r2, r5
    7f94:	mov	r1, r4
    7f98:	mov	r0, r6
    7f9c:	bl	854 <flatcc_json_parser_array_start>
    7fa0:	mov	r4, r0
    7fa4:	ldr	ip, [sp, #76]	; 0x4c
    7fa8:	cmp	ip, #0
    7fac:	beq	8024 <MyGame_Example_Monster_parse_json_table+0x7a8>
    7fb0:	add	r3, sp, #80	; 0x50
    7fb4:	mov	r2, r5
    7fb8:	mov	r1, r4
    7fbc:	mov	r0, r6
    7fc0:	bl	0 <flatcc_json_parser_build_string>
    7fc4:	mov	r4, r0
    7fc8:	ldr	ip, [sp, #80]	; 0x50
    7fcc:	cmp	ip, #0
    7fd0:	beq	7ff4 <MyGame_Example_Monster_parse_json_table+0x778>
    7fd4:	ldr	r0, [r6]
    7fd8:	mov	r1, #1
    7fdc:	bl	0 <flatcc_builder_extend_offset_vector>
    7fe0:	mov	r7, r0
    7fe4:	cmp	r0, #0
    7fe8:	moveq	r1, #1
    7fec:	movne	r1, #0
    7ff0:	b	7ff8 <MyGame_Example_Monster_parse_json_table+0x77c>
    7ff4:	mov	r1, #1
    7ff8:	cmp	r1, #0
    7ffc:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8000:	ldr	r1, [sp, #80]	; 0x50
    8004:	str	r1, [r7]
    8008:	add	r3, sp, #76	; 0x4c
    800c:	mov	r2, r5
    8010:	mov	r1, r4
    8014:	mov	r0, r6
    8018:	bl	934 <flatcc_json_parser_array_end>
    801c:	mov	r4, r0
    8020:	b	7fa4 <MyGame_Example_Monster_parse_json_table+0x728>
    8024:	ldr	r0, [r6]
    8028:	bl	0 <flatcc_builder_end_offset_vector>
    802c:	str	r0, [sp, #80]	; 0x50
    8030:	ldr	ip, [sp, #80]	; 0x50
    8034:	cmp	ip, #0
    8038:	beq	805c <MyGame_Example_Monster_parse_json_table+0x7e0>
    803c:	ldr	r0, [r6]
    8040:	mov	r1, #28
    8044:	bl	0 <flatcc_builder_table_add_offset>
    8048:	mov	r7, r0
    804c:	cmp	r7, #0
    8050:	moveq	r3, #1
    8054:	movne	r3, #0
    8058:	b	8060 <MyGame_Example_Monster_parse_json_table+0x7e4>
    805c:	mov	r3, #1
    8060:	cmp	r3, #0
    8064:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8068:	ldr	r3, [sp, #80]	; 0x50
    806c:	str	r3, [r7]
    8070:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8074:	mov	r2, r5
    8078:	mov	r1, r4
    807c:	mov	r0, r6
    8080:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8084:	mov	r4, r0
    8088:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    808c:	eor	r2, sl, #628	; 0x274
    8090:	eor	r2, r2, #222208	; 0x36400
    8094:	eor	r2, r2, #23855104	; 0x16c0000
    8098:	eor	r2, r2, #2013265920	; 0x78000000
    809c:	eor	r1, r9, #101	; 0x65
    80a0:	eor	r1, r1, #158720	; 0x26c00
    80a4:	eor	r1, r1, #23068672	; 0x1600000
    80a8:	eor	r1, r1, #1610612736	; 0x60000000
    80ac:	orr	r3, r2, r1
    80b0:	cmp	r3, #0
    80b4:	bne	8228 <MyGame_Example_Monster_parse_json_table+0x9ac>
    80b8:	add	r9, r4, #8
    80bc:	mov	r1, r5
    80c0:	mov	r0, r9
    80c4:	bl	590 <flatcc_json_parser_symbol_part>
    80c8:	and	r2, r1, #-16777216	; 0xff000000
    80cc:	mov	r1, #0
    80d0:	eor	r2, r2, #1929379840	; 0x73000000
    80d4:	orr	r2, r2, r1
    80d8:	cmp	r2, #0
    80dc:	bne	8210 <MyGame_Example_Monster_parse_json_table+0x994>
    80e0:	mov	r3, #1
    80e4:	mov	r2, r5
    80e8:	mov	r1, r9
    80ec:	mov	r0, r6
    80f0:	bl	a5c <flatcc_json_parser_match_symbol>
    80f4:	mov	r4, r0
    80f8:	cmp	r9, r4
    80fc:	beq	81f8 <MyGame_Example_Monster_parse_json_table+0x97c>
    8100:	ldr	r0, [r6]
    8104:	bl	0 <flatcc_builder_start_offset_vector>
    8108:	cmp	r0, #0
    810c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8110:	add	r3, sp, #76	; 0x4c
    8114:	mov	r2, r5
    8118:	mov	r1, r4
    811c:	mov	r0, r6
    8120:	bl	854 <flatcc_json_parser_array_start>
    8124:	mov	r4, r0
    8128:	ldr	r1, [sp, #76]	; 0x4c
    812c:	cmp	r1, #0
    8130:	beq	81a8 <MyGame_Example_Monster_parse_json_table+0x92c>
    8134:	add	r3, sp, #80	; 0x50
    8138:	mov	r2, r5
    813c:	mov	r1, r4
    8140:	mov	r0, r6
    8144:	bl	787c <MyGame_Example_Monster_parse_json_table>
    8148:	mov	r4, r0
    814c:	ldr	r1, [sp, #80]	; 0x50
    8150:	cmp	r1, #0
    8154:	beq	8178 <MyGame_Example_Monster_parse_json_table+0x8fc>
    8158:	ldr	r0, [r6]
    815c:	mov	r1, #1
    8160:	bl	0 <flatcc_builder_extend_offset_vector>
    8164:	mov	r7, r0
    8168:	cmp	r7, #0
    816c:	moveq	r1, #1
    8170:	movne	r1, #0
    8174:	b	817c <MyGame_Example_Monster_parse_json_table+0x900>
    8178:	mov	r1, #1
    817c:	cmp	r1, #0
    8180:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8184:	ldr	r1, [sp, #80]	; 0x50
    8188:	str	r1, [r7]
    818c:	add	r3, sp, #76	; 0x4c
    8190:	mov	r2, r5
    8194:	mov	r1, r4
    8198:	mov	r0, r6
    819c:	bl	934 <flatcc_json_parser_array_end>
    81a0:	mov	r4, r0
    81a4:	b	8128 <MyGame_Example_Monster_parse_json_table+0x8ac>
    81a8:	ldr	r0, [r6]
    81ac:	bl	0 <flatcc_builder_end_offset_vector>
    81b0:	str	r0, [sp, #80]	; 0x50
    81b4:	ldr	r0, [sp, #80]	; 0x50
    81b8:	cmp	r0, #0
    81bc:	beq	81e0 <MyGame_Example_Monster_parse_json_table+0x964>
    81c0:	ldr	r0, [r6]
    81c4:	mov	r1, #11
    81c8:	bl	0 <flatcc_builder_table_add_offset>
    81cc:	mov	r7, r0
    81d0:	cmp	r0, #0
    81d4:	moveq	r0, #1
    81d8:	movne	r0, #0
    81dc:	b	81e4 <MyGame_Example_Monster_parse_json_table+0x968>
    81e0:	mov	r0, #1
    81e4:	cmp	r0, #0
    81e8:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    81ec:	ldr	ip, [sp, #80]	; 0x50
    81f0:	str	ip, [r7]
    81f4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    81f8:	mov	r2, r5
    81fc:	mov	r1, r4
    8200:	mov	r0, r6
    8204:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8208:	mov	r4, r0
    820c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8210:	mov	r2, r5
    8214:	mov	r1, r9
    8218:	mov	r0, r6
    821c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8220:	mov	r4, r0
    8224:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8228:	mov	r2, r5
    822c:	mov	r1, r4
    8230:	mov	r0, r6
    8234:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8238:	mov	r4, r0
    823c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8240:	mov	r1, fp
    8244:	mov	r0, sl
    8248:	movw	r2, #29556	; 0x7374
    824c:	movt	r2, #29797	; 0x7465
    8250:	cmp	r1, r2
    8254:	bne	826c <MyGame_Example_Monster_parse_json_table+0x9f0>
    8258:	movw	r2, #28788	; 0x7074
    825c:	movt	r2, #25965	; 0x656d
    8260:	cmp	r0, r2
    8264:	bcc	866c <MyGame_Example_Monster_parse_json_table+0xdf0>
    8268:	b	827c <MyGame_Example_Monster_parse_json_table+0xa00>
    826c:	movw	r2, #29556	; 0x7374
    8270:	movt	r2, #29797	; 0x7465
    8274:	cmp	r1, r2
    8278:	bcc	866c <MyGame_Example_Monster_parse_json_table+0xdf0>
    827c:	mov	r3, fp
    8280:	movw	r1, #29556	; 0x7374
    8284:	movt	r1, #29797	; 0x7465
    8288:	cmp	r3, r1
    828c:	bne	82a4 <MyGame_Example_Monster_parse_json_table+0xa28>
    8290:	mov	r3, sl
    8294:	mov	ip, #1711276032	; 0x66000000
    8298:	cmp	r3, ip
    829c:	bcc	8540 <MyGame_Example_Monster_parse_json_table+0xcc4>
    82a0:	b	82b4 <MyGame_Example_Monster_parse_json_table+0xa38>
    82a4:	movw	ip, #29556	; 0x7374
    82a8:	movt	ip, #29797	; 0x7465
    82ac:	cmp	r3, ip
    82b0:	bcc	8540 <MyGame_Example_Monster_parse_json_table+0xcc4>
    82b4:	mov	r2, fp
    82b8:	mov	r0, sl
    82bc:	bic	r1, r0, #255	; 0xff
    82c0:	bic	r1, r1, #65280	; 0xff00
    82c4:	eor	r2, r2, #884	; 0x374
    82c8:	eor	r2, r2, #356352	; 0x57000
    82cc:	eor	r2, r2, #73400320	; 0x4600000
    82d0:	eor	r2, r2, #1879048192	; 0x70000000
    82d4:	eor	r3, r1, #3276800	; 0x320000
    82d8:	eor	r3, r3, #1711276032	; 0x66000000
    82dc:	orr	ip, r2, r3
    82e0:	cmp	ip, #0
    82e4:	beq	8434 <MyGame_Example_Monster_parse_json_table+0xbb8>
    82e8:	and	r1, sl, #-16777216	; 0xff000000
    82ec:	eor	ip, fp, #884	; 0x374
    82f0:	eor	ip, ip, #356352	; 0x57000
    82f4:	eor	ip, ip, #73400320	; 0x4600000
    82f8:	eor	ip, ip, #1879048192	; 0x70000000
    82fc:	eor	r3, r1, #1711276032	; 0x66000000
    8300:	orr	ip, ip, r3
    8304:	cmp	ip, #0
    8308:	bne	841c <MyGame_Example_Monster_parse_json_table+0xba0>
    830c:	mov	r3, #5
    8310:	mov	r2, r5
    8314:	mov	r1, r4
    8318:	mov	r0, r6
    831c:	bl	a5c <flatcc_json_parser_match_symbol>
    8320:	mov	r1, r0
    8324:	cmp	r4, r1
    8328:	beq	8408 <MyGame_Example_Monster_parse_json_table+0xb8c>
    832c:	vldr	s2, [pc, #764]	; 8630 <MyGame_Example_Monster_parse_json_table+0xdb4>
    8330:	vstr	s2, [sp, #92]	; 0x5c
    8334:	mov	r9, r1
    8338:	add	r3, sp, #92	; 0x5c
    833c:	mov	r2, r5
    8340:	mov	r1, r9
    8344:	mov	r0, r6
    8348:	bl	0 <flatcc_json_parser_float>
    834c:	mov	r4, r0
    8350:	cmp	r9, r4
    8354:	bne	83a0 <MyGame_Example_Monster_parse_json_table+0xb24>
    8358:	mov	r9, r4
    835c:	ldr	r3, [pc, #704]	; 8624 <MyGame_Example_Monster_parse_json_table+0xda8>
    8360:	add	r1, sp, #92	; 0x5c
    8364:	str	r1, [sp]
    8368:	mov	r2, r5
    836c:	mov	r1, r9
    8370:	mov	r0, r6
    8374:	bl	2ab4 <flatcc_json_parser_symbolic_float>
    8378:	mov	r4, r0
    837c:	cmp	r4, r9
    8380:	beq	8394 <MyGame_Example_Monster_parse_json_table+0xb18>
    8384:	cmp	r4, r5
    8388:	moveq	ip, #1
    838c:	movne	ip, #0
    8390:	b	8398 <MyGame_Example_Monster_parse_json_table+0xb1c>
    8394:	mov	ip, #1
    8398:	cmp	ip, #0
    839c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    83a0:	vldr	s6, [sp, #92]	; 0x5c
    83a4:	vcvt.f64.f32	d1, s6
    83a8:	vldr	d0, [pc, #644]	; 8634 <MyGame_Example_Monster_parse_json_table+0xdb8>
    83ac:	vcmp.f64	d1, d0
    83b0:	vmrs	APSR_nzcv, fpscr
    83b4:	bne	83d0 <MyGame_Example_Monster_parse_json_table+0xb54>
    83b8:	ldr	ip, [r6, #8]
    83bc:	and	r2, ip, #2
    83c0:	cmp	r2, #0
    83c4:	movne	r1, #1
    83c8:	moveq	r1, #0
    83cc:	b	83d4 <MyGame_Example_Monster_parse_json_table+0xb58>
    83d0:	mov	r1, #1
    83d4:	cmp	r1, #0
    83d8:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    83dc:	ldr	r0, [r6]
    83e0:	mov	r1, #25
    83e4:	mov	r2, #4
    83e8:	mov	r3, #4
    83ec:	bl	0 <flatcc_builder_table_add>
    83f0:	cmp	r0, #0
    83f4:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    83f8:	vldr	s0, [sp, #92]	; 0x5c
    83fc:	vmov.f32	s0, s0
    8400:	bl	2fc <flatbuffers_float_write_to_pe>
    8404:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8408:	mov	r2, r5
    840c:	mov	r0, r6
    8410:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8414:	mov	r4, r0
    8418:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    841c:	mov	r2, r5
    8420:	mov	r1, r4
    8424:	mov	r0, r6
    8428:	bl	0 <flatcc_json_parser_unmatched_symbol>
    842c:	mov	r4, r0
    8430:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8434:	mov	r3, #6
    8438:	mov	r2, r5
    843c:	mov	r1, r4
    8440:	mov	r0, r6
    8444:	bl	a5c <flatcc_json_parser_match_symbol>
    8448:	mov	r1, r0
    844c:	cmp	r4, r1
    8450:	beq	852c <MyGame_Example_Monster_parse_json_table+0xcb0>
    8454:	vldr	s6, [pc, #468]	; 8630 <MyGame_Example_Monster_parse_json_table+0xdb4>
    8458:	vstr	s6, [sp, #88]	; 0x58
    845c:	mov	r9, r1
    8460:	add	r3, sp, #88	; 0x58
    8464:	mov	r2, r5
    8468:	mov	r0, r6
    846c:	bl	0 <flatcc_json_parser_float>
    8470:	mov	r4, r0
    8474:	cmp	r9, r4
    8478:	bne	84c4 <MyGame_Example_Monster_parse_json_table+0xc48>
    847c:	mov	r1, r4
    8480:	mov	r9, r1
    8484:	ldr	r3, [pc, #416]	; 862c <MyGame_Example_Monster_parse_json_table+0xdb0>
    8488:	add	r0, sp, #88	; 0x58
    848c:	str	r0, [sp]
    8490:	mov	r2, r5
    8494:	mov	r0, r6
    8498:	bl	2ab4 <flatcc_json_parser_symbolic_float>
    849c:	mov	r4, r0
    84a0:	cmp	r4, r9
    84a4:	beq	84b8 <MyGame_Example_Monster_parse_json_table+0xc3c>
    84a8:	cmp	r4, r5
    84ac:	moveq	r0, #1
    84b0:	movne	r0, #0
    84b4:	b	84bc <MyGame_Example_Monster_parse_json_table+0xc40>
    84b8:	mov	r0, #1
    84bc:	cmp	r0, #0
    84c0:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    84c4:	vldr	s2, [sp, #88]	; 0x58
    84c8:	vcvt.f64.f32	d0, s2
    84cc:	vmov.f64	d5, #8	; 0x40400000  3.0
    84d0:	vcmp.f64	d0, d5
    84d4:	vmrs	APSR_nzcv, fpscr
    84d8:	bne	84f4 <MyGame_Example_Monster_parse_json_table+0xc78>
    84dc:	ldr	ip, [r6, #8]
    84e0:	and	r3, ip, #2
    84e4:	cmp	r3, #0
    84e8:	movne	r0, #1
    84ec:	moveq	r0, #0
    84f0:	b	84f8 <MyGame_Example_Monster_parse_json_table+0xc7c>
    84f4:	mov	r0, #1
    84f8:	cmp	r0, #0
    84fc:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8500:	ldr	r0, [r6]
    8504:	mov	r1, #26
    8508:	mov	r2, #4
    850c:	mov	r3, #4
    8510:	bl	0 <flatcc_builder_table_add>
    8514:	cmp	r0, #0
    8518:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    851c:	vldr	s0, [sp, #88]	; 0x58
    8520:	vmov.f32	s0, s0
    8524:	bl	2fc <flatbuffers_float_write_to_pe>
    8528:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    852c:	mov	r2, r5
    8530:	mov	r0, r6
    8534:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8538:	mov	r4, r0
    853c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8540:	eor	r3, fp, #884	; 0x374
    8544:	eor	r3, r3, #356352	; 0x57000
    8548:	eor	r3, r3, #73400320	; 0x4600000
    854c:	eor	r3, r3, #1879048192	; 0x70000000
    8550:	eor	ip, sl, #116	; 0x74
    8554:	eor	ip, ip, #880640	; 0xd7000
    8558:	eor	ip, ip, #90177536	; 0x5600000
    855c:	eor	ip, ip, #1610612736	; 0x60000000
    8560:	orr	r0, r3, ip
    8564:	cmp	r0, #0
    8568:	bne	8654 <MyGame_Example_Monster_parse_json_table+0xdd8>
    856c:	add	r4, r4, #8
    8570:	mov	r1, r5
    8574:	mov	r0, r4
    8578:	bl	590 <flatcc_json_parser_symbol_part>
    857c:	and	r0, r1, #-16777216	; 0xff000000
    8580:	mov	r3, #0
    8584:	eor	r0, r0, #2030043136	; 0x79000000
    8588:	orr	r2, r0, r3
    858c:	cmp	r2, #0
    8590:	bne	863c <MyGame_Example_Monster_parse_json_table+0xdc0>
    8594:	mov	r1, r4
    8598:	mov	r4, r1
    859c:	mov	r3, #1
    85a0:	mov	r2, r5
    85a4:	mov	r0, r6
    85a8:	bl	a5c <flatcc_json_parser_match_symbol>
    85ac:	mov	r1, r0
    85b0:	cmp	r4, r1
    85b4:	beq	8610 <MyGame_Example_Monster_parse_json_table+0xd94>
    85b8:	add	r3, sp, #80	; 0x50
    85bc:	mov	r2, r5
    85c0:	mov	r0, r6
    85c4:	bl	5458 <MyGame_Example_Stat_parse_json_table>
    85c8:	mov	r4, r0
    85cc:	ldr	r1, [sp, #80]	; 0x50
    85d0:	cmp	r1, #0
    85d4:	beq	85f8 <MyGame_Example_Monster_parse_json_table+0xd7c>
    85d8:	ldr	r0, [r6]
    85dc:	mov	r1, #14
    85e0:	bl	0 <flatcc_builder_table_add_offset>
    85e4:	mov	r7, r0
    85e8:	cmp	r7, #0
    85ec:	moveq	r1, #1
    85f0:	movne	r1, #0
    85f4:	b	85fc <MyGame_Example_Monster_parse_json_table+0xd80>
    85f8:	mov	r1, #1
    85fc:	cmp	r1, #0
    8600:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8604:	ldr	r1, [sp, #80]	; 0x50
    8608:	str	r1, [r7]
    860c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8610:	mov	r2, r5
    8614:	mov	r0, r6
    8618:	bl	0 <flatcc_json_parser_unmatched_symbol>
    861c:	mov	r4, r0
    8620:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8624:	.word	0x000001bc
    8628:	.word	0x00000198
    862c:	.word	0x000001b0
	...
    8638:	.word	0x41132cbc
    863c:	mov	r2, r5
    8640:	mov	r1, r4
    8644:	mov	r0, r6
    8648:	bl	0 <flatcc_json_parser_unmatched_symbol>
    864c:	mov	r4, r0
    8650:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8654:	mov	r2, r5
    8658:	mov	r1, r4
    865c:	mov	r0, r6
    8660:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8664:	mov	r4, r0
    8668:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    866c:	mov	r2, fp
    8670:	eor	r0, r2, #884	; 0x374
    8674:	eor	r0, r0, #356352	; 0x57000
    8678:	eor	r0, r0, #73400320	; 0x4600000
    867c:	eor	r0, r0, #1879048192	; 0x70000000
    8680:	mov	ip, sl
    8684:	eor	r2, ip, #101	; 0x65
    8688:	eor	r2, r2, #29440	; 0x7300
    868c:	eor	r2, r2, #6356992	; 0x610000
    8690:	eor	r2, r2, #1644167168	; 0x62000000
    8694:	orr	r3, r0, r2
    8698:	cmp	r3, #0
    869c:	beq	87e4 <MyGame_Example_Monster_parse_json_table+0xf68>
    86a0:	eor	r0, fp, #884	; 0x374
    86a4:	eor	r0, r0, #356352	; 0x57000
    86a8:	eor	r0, r0, #73400320	; 0x4600000
    86ac:	eor	r0, r0, #1879048192	; 0x70000000
    86b0:	eor	ip, sl, #876	; 0x36c
    86b4:	eor	ip, ip, #224256	; 0x36c00
    86b8:	eor	ip, ip, #40632320	; 0x26c0000
    86bc:	eor	ip, ip, #1610612736	; 0x60000000
    86c0:	orr	r2, r0, ip
    86c4:	cmp	r2, #0
    86c8:	bne	87cc <MyGame_Example_Monster_parse_json_table+0xf50>
    86cc:	mov	r3, #8
    86d0:	mov	r2, r5
    86d4:	mov	r1, r4
    86d8:	mov	r0, r6
    86dc:	bl	a5c <flatcc_json_parser_match_symbol>
    86e0:	mov	r1, r0
    86e4:	cmp	r4, r1
    86e8:	beq	87b8 <MyGame_Example_Monster_parse_json_table+0xf3c>
    86ec:	mov	r3, #0
    86f0:	strb	r3, [sp, #61]	; 0x3d
    86f4:	mov	r9, r1
    86f8:	add	r3, sp, #61	; 0x3d
    86fc:	mov	r2, r5
    8700:	mov	r0, r6
    8704:	bl	1918 <flatcc_json_parser_bool>
    8708:	mov	r4, r0
    870c:	cmp	r9, r4
    8710:	bne	875c <MyGame_Example_Monster_parse_json_table+0xee0>
    8714:	mov	r9, r4
    8718:	ldr	r3, [pc, #2812]	; 921c <MyGame_Example_Monster_parse_json_table+0x19a0>
    871c:	add	r0, sp, #61	; 0x3d
    8720:	str	r0, [sp]
    8724:	mov	r2, r5
    8728:	mov	r1, r4
    872c:	mov	r0, r6
    8730:	bl	28e4 <flatcc_json_parser_symbolic_bool>
    8734:	mov	r4, r0
    8738:	cmp	r4, r9
    873c:	beq	8750 <MyGame_Example_Monster_parse_json_table+0xed4>
    8740:	cmp	r4, r5
    8744:	moveq	ip, #1
    8748:	movne	ip, #0
    874c:	b	8754 <MyGame_Example_Monster_parse_json_table+0xed8>
    8750:	mov	ip, #1
    8754:	cmp	ip, #0
    8758:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    875c:	ldrb	r2, [sp, #61]	; 0x3d
    8760:	cmp	r2, #1
    8764:	bne	8780 <MyGame_Example_Monster_parse_json_table+0xf04>
    8768:	ldr	ip, [r6, #8]
    876c:	and	r0, ip, #2
    8770:	cmp	r0, #0
    8774:	movne	r1, #1
    8778:	moveq	r1, #0
    877c:	b	8784 <MyGame_Example_Monster_parse_json_table+0xf08>
    8780:	mov	r1, #1
    8784:	cmp	r1, #0
    8788:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    878c:	ldr	r0, [r6]
    8790:	mov	r1, #15
    8794:	mov	r2, #1
    8798:	mov	r3, #1
    879c:	bl	0 <flatcc_builder_table_add>
    87a0:	cmp	r0, #0
    87a4:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    87a8:	ldrb	r1, [sp, #61]	; 0x3d
    87ac:	and	r1, r1, #255	; 0xff
    87b0:	bl	3b4 <flatbuffers_bool_write_to_pe>
    87b4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    87b8:	mov	r2, r5
    87bc:	mov	r0, r6
    87c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    87c4:	mov	r4, r0
    87c8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    87cc:	mov	r2, r5
    87d0:	mov	r1, r4
    87d4:	mov	r0, r6
    87d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    87dc:	mov	r4, r0
    87e0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    87e4:	add	r4, r4, #8
    87e8:	mov	r1, r5
    87ec:	mov	r0, r4
    87f0:	bl	590 <flatcc_json_parser_symbol_part>
    87f4:	bic	r2, r1, #255	; 0xff
    87f8:	bic	r2, r2, #65280	; 0xff00
    87fc:	mov	ip, #0
    8800:	eor	r0, r2, #36962304	; 0x2340000
    8804:	eor	r0, r0, #872415232	; 0x34000000
    8808:	orr	r3, r0, ip
    880c:	cmp	r3, #0
    8810:	bne	88a0 <MyGame_Example_Monster_parse_json_table+0x1024>
    8814:	mov	r3, #2
    8818:	mov	r2, r5
    881c:	mov	r1, r4
    8820:	mov	r0, r6
    8824:	bl	a5c <flatcc_json_parser_match_symbol>
    8828:	mov	r1, r0
    882c:	cmp	r4, r1
    8830:	beq	888c <MyGame_Example_Monster_parse_json_table+0x1010>
    8834:	add	r3, sp, #80	; 0x50
    8838:	mov	r2, r5
    883c:	mov	r0, r6
    8840:	bl	74c8 <MyGame_Example_TestBase64_parse_json_table>
    8844:	mov	r4, r0
    8848:	ldr	r3, [sp, #80]	; 0x50
    884c:	cmp	r3, #0
    8850:	beq	8874 <MyGame_Example_Monster_parse_json_table+0xff8>
    8854:	ldr	r0, [r6]
    8858:	mov	r1, #35	; 0x23
    885c:	bl	0 <flatcc_builder_table_add_offset>
    8860:	mov	r7, r0
    8864:	cmp	r7, #0
    8868:	moveq	r0, #1
    886c:	movne	r0, #0
    8870:	b	8878 <MyGame_Example_Monster_parse_json_table+0xffc>
    8874:	mov	r0, #1
    8878:	cmp	r0, #0
    887c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8880:	ldr	ip, [sp, #80]	; 0x50
    8884:	str	ip, [r7]
    8888:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    888c:	mov	r2, r5
    8890:	mov	r0, r6
    8894:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8898:	mov	r4, r0
    889c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    88a0:	mov	r2, r5
    88a4:	mov	r1, r4
    88a8:	mov	r0, r6
    88ac:	bl	0 <flatcc_json_parser_unmatched_symbol>
    88b0:	mov	r4, r0
    88b4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    88b8:	mov	r2, fp
    88bc:	movw	r0, #29556	; 0x7374
    88c0:	movt	r0, #29797	; 0x7465
    88c4:	cmp	r2, r0
    88c8:	bne	88e4 <MyGame_Example_Monster_parse_json_table+0x1068>
    88cc:	mov	r3, sl
    88d0:	movw	ip, #29544	; 0x7368
    88d4:	movt	ip, #26721	; 0x6861
    88d8:	cmp	r3, ip
    88dc:	bcc	9aec <MyGame_Example_Monster_parse_json_table+0x2270>
    88e0:	b	88f4 <MyGame_Example_Monster_parse_json_table+0x1078>
    88e4:	movw	r3, #29556	; 0x7374
    88e8:	movt	r3, #29797	; 0x7465
    88ec:	cmp	r2, r3
    88f0:	bcc	9aec <MyGame_Example_Monster_parse_json_table+0x2270>
    88f4:	mov	ip, fp
    88f8:	mov	r3, sl
    88fc:	eor	r2, ip, #884	; 0x374
    8900:	eor	r2, r2, #356352	; 0x57000
    8904:	eor	r2, r2, #73400320	; 0x4600000
    8908:	eor	r2, r2, #1879048192	; 0x70000000
    890c:	eor	ip, r3, #872	; 0x368
    8910:	eor	ip, ip, #94208	; 0x17000
    8914:	eor	ip, ip, #140509184	; 0x8600000
    8918:	eor	ip, ip, #1610612736	; 0x60000000
    891c:	orr	r2, r2, ip
    8920:	cmp	r2, #0
    8924:	beq	9054 <MyGame_Example_Monster_parse_json_table+0x17d8>
    8928:	mov	r1, fp
    892c:	mov	r0, sl
    8930:	movw	ip, #25460	; 0x6374
    8934:	movt	ip, #30309	; 0x7665
    8938:	cmp	r1, ip
    893c:	bne	8954 <MyGame_Example_Monster_parse_json_table+0x10d8>
    8940:	movw	r1, #24431	; 0x5f6f
    8944:	movt	r1, #28530	; 0x6f72
    8948:	cmp	r0, r1
    894c:	bcc	8964 <MyGame_Example_Monster_parse_json_table+0x10e8>
    8950:	b	8c40 <MyGame_Example_Monster_parse_json_table+0x13c4>
    8954:	movw	r2, #25460	; 0x6374
    8958:	movt	r2, #30309	; 0x7665
    895c:	cmp	r1, r2
    8960:	bcs	8c40 <MyGame_Example_Monster_parse_json_table+0x13c4>
    8964:	eor	r1, fp, #884	; 0x374
    8968:	eor	r1, r1, #356352	; 0x57000
    896c:	eor	r1, r1, #73400320	; 0x4600000
    8970:	eor	r1, r1, #1879048192	; 0x70000000
    8974:	eor	r2, sl, #884	; 0x374
    8978:	eor	r2, r2, #356352	; 0x57000
    897c:	eor	r2, r2, #241172480	; 0xe600000
    8980:	eor	r2, r2, #1610612736	; 0x60000000
    8984:	orr	r3, r1, r2
    8988:	cmp	r3, #0
    898c:	bne	8c28 <MyGame_Example_Monster_parse_json_table+0x13ac>
    8990:	add	r4, r4, #8
    8994:	mov	r1, r5
    8998:	mov	r0, r4
    899c:	bl	590 <flatcc_json_parser_symbol_part>
    89a0:	eor	r1, r1, #620	; 0x26c
    89a4:	eor	r1, r1, #25600	; 0x6400
    89a8:	eor	r1, r1, #23330816	; 0x1640000
    89ac:	eor	r1, r1, #1677721600	; 0x64000000
    89b0:	eor	ip, r0, #117	; 0x75
    89b4:	eor	ip, ip, #25088	; 0x6200
    89b8:	eor	ip, ip, #24379392	; 0x1740000
    89bc:	eor	ip, ip, #1610612736	; 0x60000000
    89c0:	orr	r2, r1, ip
    89c4:	cmp	r2, #0
    89c8:	bne	8c10 <MyGame_Example_Monster_parse_json_table+0x1394>
    89cc:	add	r9, r4, #8
    89d0:	mov	r1, r5
    89d4:	mov	r0, r9
    89d8:	bl	590 <flatcc_json_parser_symbol_part>
    89dc:	mov	ip, #0
    89e0:	eor	r1, r1, #114	; 0x72
    89e4:	eor	r1, r1, #25856	; 0x6500
    89e8:	eor	r1, r1, #6684672	; 0x660000
    89ec:	eor	r1, r1, #1711276032	; 0x66000000
    89f0:	orr	r2, r1, ip
    89f4:	cmp	r2, #0
    89f8:	bne	8bf8 <MyGame_Example_Monster_parse_json_table+0x137c>
    89fc:	mov	r3, #4
    8a00:	mov	r2, r5
    8a04:	mov	r1, r9
    8a08:	mov	r0, r6
    8a0c:	bl	a5c <flatcc_json_parser_match_symbol>
    8a10:	mov	r4, r0
    8a14:	cmp	r9, r4
    8a18:	beq	8be0 <MyGame_Example_Monster_parse_json_table+0x1364>
    8a1c:	cmp	r4, r5
    8a20:	beq	8a38 <MyGame_Example_Monster_parse_json_table+0x11bc>
    8a24:	ldrb	r0, [r4]
    8a28:	cmp	r0, #91	; 0x5b
    8a2c:	moveq	r1, #1
    8a30:	movne	r1, #0
    8a34:	b	8a3c <MyGame_Example_Monster_parse_json_table+0x11c0>
    8a38:	mov	r1, #0
    8a3c:	cmp	r1, #0
    8a40:	beq	8b4c <MyGame_Example_Monster_parse_json_table+0x12d0>
    8a44:	ldr	r0, [r6]
    8a48:	mov	r1, #1
    8a4c:	mov	r2, #1
    8a50:	mvn	r3, #0
    8a54:	bl	0 <flatcc_builder_start_vector>
    8a58:	cmp	r0, #0
    8a5c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8a60:	add	r3, sp, #76	; 0x4c
    8a64:	mov	r2, r5
    8a68:	mov	r1, r4
    8a6c:	mov	r0, r6
    8a70:	bl	854 <flatcc_json_parser_array_start>
    8a74:	mov	r4, r0
    8a78:	ldr	r0, [sp, #76]	; 0x4c
    8a7c:	cmp	r0, #0
    8a80:	beq	8b3c <MyGame_Example_Monster_parse_json_table+0x12c0>
    8a84:	mov	r1, #0
    8a88:	strb	r1, [sp, #56]	; 0x38
    8a8c:	ldr	r0, [r6]
    8a90:	mov	r1, #1
    8a94:	bl	0 <flatcc_builder_extend_vector>
    8a98:	mov	sl, r0
    8a9c:	cmp	sl, #0
    8aa0:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8aa4:	mov	r9, r4
    8aa8:	add	r3, sp, #56	; 0x38
    8aac:	mov	r2, r5
    8ab0:	mov	r1, r4
    8ab4:	mov	r0, r6
    8ab8:	bl	153c <flatcc_json_parser_uint8>
    8abc:	mov	r4, r0
    8ac0:	cmp	r9, r4
    8ac4:	bne	8b10 <MyGame_Example_Monster_parse_json_table+0x1294>
    8ac8:	mov	r1, r4
    8acc:	mov	r9, r1
    8ad0:	ldr	r3, [pc, #1848]	; 9210 <MyGame_Example_Monster_parse_json_table+0x1994>
    8ad4:	add	r0, sp, #56	; 0x38
    8ad8:	str	r0, [sp]
    8adc:	mov	r2, r5
    8ae0:	mov	r0, r6
    8ae4:	bl	1fb8 <flatcc_json_parser_symbolic_uint8>
    8ae8:	mov	r4, r0
    8aec:	cmp	r4, r9
    8af0:	beq	8b04 <MyGame_Example_Monster_parse_json_table+0x1288>
    8af4:	cmp	r4, r5
    8af8:	moveq	r3, #1
    8afc:	movne	r3, #0
    8b00:	b	8b08 <MyGame_Example_Monster_parse_json_table+0x128c>
    8b04:	mov	r3, #1
    8b08:	cmp	r3, #0
    8b0c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8b10:	ldrb	r3, [sp, #56]	; 0x38
    8b14:	and	r1, r3, #255	; 0xff
    8b18:	mov	r0, sl
    8b1c:	bl	20 <flatbuffers_uint8_write_to_pe>
    8b20:	add	r3, sp, #76	; 0x4c
    8b24:	mov	r2, r5
    8b28:	mov	r1, r4
    8b2c:	mov	r0, r6
    8b30:	bl	934 <flatcc_json_parser_array_end>
    8b34:	mov	r4, r0
    8b38:	b	8a78 <MyGame_Example_Monster_parse_json_table+0x11fc>
    8b3c:	ldr	r0, [r6]
    8b40:	bl	0 <flatcc_builder_end_vector>
    8b44:	str	r0, [sp, #80]	; 0x50
    8b48:	b	8b9c <MyGame_Example_Monster_parse_json_table+0x1320>
    8b4c:	ldr	r0, [r6]
    8b50:	mov	r1, #0
    8b54:	mov	r2, #0
    8b58:	mov	r3, #0
    8b5c:	bl	0 <flatcc_builder_start_buffer>
    8b60:	cmp	r0, #0
    8b64:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8b68:	add	r3, sp, #80	; 0x50
    8b6c:	mov	r2, r5
    8b70:	mov	r1, r4
    8b74:	mov	r0, r6
    8b78:	bl	787c <MyGame_Example_Monster_parse_json_table>
    8b7c:	mov	r4, r0
    8b80:	ldr	r1, [sp, #80]	; 0x50
    8b84:	cmp	r1, #0
    8b88:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8b8c:	ldr	r0, [r6]
    8b90:	ldr	r1, [sp, #80]	; 0x50
    8b94:	bl	0 <flatcc_builder_end_buffer>
    8b98:	str	r0, [sp, #80]	; 0x50
    8b9c:	ldr	ip, [sp, #80]	; 0x50
    8ba0:	cmp	ip, #0
    8ba4:	beq	8bc8 <MyGame_Example_Monster_parse_json_table+0x134c>
    8ba8:	ldr	r0, [r6]
    8bac:	mov	r1, #13
    8bb0:	bl	0 <flatcc_builder_table_add_offset>
    8bb4:	mov	r7, r0
    8bb8:	cmp	r7, #0
    8bbc:	moveq	r1, #1
    8bc0:	movne	r1, #0
    8bc4:	b	8bcc <MyGame_Example_Monster_parse_json_table+0x1350>
    8bc8:	mov	r1, #1
    8bcc:	cmp	r1, #0
    8bd0:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8bd4:	ldr	r3, [sp, #80]	; 0x50
    8bd8:	str	r3, [r7]
    8bdc:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8be0:	mov	r2, r5
    8be4:	mov	r1, r4
    8be8:	mov	r0, r6
    8bec:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8bf0:	mov	r4, r0
    8bf4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8bf8:	mov	r2, r5
    8bfc:	mov	r1, r9
    8c00:	mov	r0, r6
    8c04:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8c08:	mov	r4, r0
    8c0c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8c10:	mov	r2, r5
    8c14:	mov	r1, r4
    8c18:	mov	r0, r6
    8c1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8c20:	mov	r4, r0
    8c24:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8c28:	mov	r2, r5
    8c2c:	mov	r1, r4
    8c30:	mov	r0, r6
    8c34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8c38:	mov	r4, r0
    8c3c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8c40:	eor	r1, fp, #884	; 0x374
    8c44:	eor	r1, r1, #352256	; 0x56000
    8c48:	eor	r1, r1, #106954752	; 0x6600000
    8c4c:	eor	r1, r1, #1879048192	; 0x70000000
    8c50:	eor	r2, sl, #111	; 0x6f
    8c54:	eor	r2, r2, #24320	; 0x5f00
    8c58:	eor	r2, r2, #7471104	; 0x720000
    8c5c:	eor	r2, r2, #1862270976	; 0x6f000000
    8c60:	orr	r2, r1, r2
    8c64:	cmp	r2, #0
    8c68:	bne	903c <MyGame_Example_Monster_parse_json_table+0x17c0>
    8c6c:	add	r9, r4, #8
    8c70:	mov	r1, r5
    8c74:	mov	r0, r9
    8c78:	bl	590 <flatcc_json_parser_symbol_part>
    8c7c:	mov	r2, r1
    8c80:	eor	ip, r2, #111	; 0x6f
    8c84:	eor	ip, ip, #222208	; 0x36400
    8c88:	eor	ip, ip, #39583744	; 0x25c0000
    8c8c:	eor	ip, ip, #1677721600	; 0x64000000
    8c90:	mov	r3, r0
    8c94:	eor	r2, r3, #101	; 0x65
    8c98:	eor	r2, r2, #158720	; 0x26c00
    8c9c:	eor	r2, r2, #90177536	; 0x5600000
    8ca0:	eor	r2, r2, #1879048192	; 0x70000000
    8ca4:	orr	r2, ip, r2
    8ca8:	cmp	r2, #0
    8cac:	beq	8e7c <MyGame_Example_Monster_parse_json_table+0x1600>
    8cb0:	bic	ip, r0, #255	; 0xff
    8cb4:	eor	r0, r1, #111	; 0x6f
    8cb8:	eor	r0, r0, #224256	; 0x36c00
    8cbc:	eor	r0, r0, #39583744	; 0x25c0000
    8cc0:	eor	r0, r0, #1677721600	; 0x64000000
    8cc4:	eor	ip, ip, #29440	; 0x7300
    8cc8:	eor	ip, ip, #6750208	; 0x670000
    8ccc:	eor	ip, ip, #1845493760	; 0x6e000000
    8cd0:	orr	r1, r0, ip
    8cd4:	cmp	r1, #0
    8cd8:	bne	8e64 <MyGame_Example_Monster_parse_json_table+0x15e8>
    8cdc:	mov	r3, #7
    8ce0:	mov	r2, r5
    8ce4:	mov	r1, r9
    8ce8:	mov	r0, r6
    8cec:	bl	a5c <flatcc_json_parser_match_symbol>
    8cf0:	mov	r4, r0
    8cf4:	cmp	r9, r4
    8cf8:	beq	8e4c <MyGame_Example_Monster_parse_json_table+0x15d0>
    8cfc:	ldr	r0, [r6]
    8d00:	mov	r1, #8
    8d04:	mov	r2, #8
    8d08:	mvn	r3, #-536870912	; 0xe0000000
    8d0c:	bl	0 <flatcc_builder_start_vector>
    8d10:	cmp	r0, #0
    8d14:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8d18:	add	r3, sp, #76	; 0x4c
    8d1c:	mov	r2, r5
    8d20:	mov	r1, r4
    8d24:	mov	r0, r6
    8d28:	bl	854 <flatcc_json_parser_array_start>
    8d2c:	mov	r4, r0
    8d30:	ldr	r2, [sp, #76]	; 0x4c
    8d34:	cmp	r2, #0
    8d38:	beq	8dfc <MyGame_Example_Monster_parse_json_table+0x1580>
    8d3c:	mov	ip, #0
    8d40:	mov	r3, #0
    8d44:	str	r3, [sp, #144]	; 0x90
    8d48:	str	ip, [sp, #148]	; 0x94
    8d4c:	ldr	r0, [r6]
    8d50:	mov	r1, #1
    8d54:	bl	0 <flatcc_builder_extend_vector>
    8d58:	mov	sl, r0
    8d5c:	cmp	sl, #0
    8d60:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8d64:	mov	r9, r4
    8d68:	add	r3, sp, #144	; 0x90
    8d6c:	mov	r2, r5
    8d70:	mov	r1, r4
    8d74:	mov	r0, r6
    8d78:	bl	1600 <flatcc_json_parser_int64>
    8d7c:	mov	r4, r0
    8d80:	cmp	r9, r4
    8d84:	bne	8dd0 <MyGame_Example_Monster_parse_json_table+0x1554>
    8d88:	mov	r9, r4
    8d8c:	ldr	r3, [pc, #1164]	; 9220 <MyGame_Example_Monster_parse_json_table+0x19a4>
    8d90:	add	r0, sp, #144	; 0x90
    8d94:	str	r0, [sp]
    8d98:	mov	r2, r5
    8d9c:	mov	r1, r4
    8da0:	mov	r0, r6
    8da4:	bl	2188 <flatcc_json_parser_symbolic_int64>
    8da8:	mov	r4, r0
    8dac:	cmp	r4, r9
    8db0:	beq	8dc4 <MyGame_Example_Monster_parse_json_table+0x1548>
    8db4:	cmp	r4, r5
    8db8:	moveq	ip, #1
    8dbc:	movne	ip, #0
    8dc0:	b	8dc8 <MyGame_Example_Monster_parse_json_table+0x154c>
    8dc4:	mov	ip, #1
    8dc8:	cmp	ip, #0
    8dcc:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8dd0:	ldr	r2, [sp, #144]	; 0x90
    8dd4:	ldr	r3, [sp, #148]	; 0x94
    8dd8:	mov	r0, sl
    8ddc:	bl	294 <flatbuffers_int64_write_to_pe>
    8de0:	add	r3, sp, #76	; 0x4c
    8de4:	mov	r2, r5
    8de8:	mov	r1, r4
    8dec:	mov	r0, r6
    8df0:	bl	934 <flatcc_json_parser_array_end>
    8df4:	mov	r4, r0
    8df8:	b	8d30 <MyGame_Example_Monster_parse_json_table+0x14b4>
    8dfc:	ldr	r0, [r6]
    8e00:	bl	0 <flatcc_builder_end_vector>
    8e04:	str	r0, [sp, #80]	; 0x50
    8e08:	ldr	r3, [sp, #80]	; 0x50
    8e0c:	cmp	r3, #0
    8e10:	beq	8e34 <MyGame_Example_Monster_parse_json_table+0x15b8>
    8e14:	ldr	r0, [r6]
    8e18:	mov	r1, #32
    8e1c:	bl	0 <flatcc_builder_table_add_offset>
    8e20:	mov	r7, r0
    8e24:	cmp	r0, #0
    8e28:	moveq	r1, #1
    8e2c:	movne	r1, #0
    8e30:	b	8e38 <MyGame_Example_Monster_parse_json_table+0x15bc>
    8e34:	mov	r1, #1
    8e38:	cmp	r1, #0
    8e3c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8e40:	ldr	r0, [sp, #80]	; 0x50
    8e44:	str	r0, [r7]
    8e48:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8e4c:	mov	r2, r5
    8e50:	mov	r1, r4
    8e54:	mov	r0, r6
    8e58:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8e5c:	mov	r4, r0
    8e60:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8e64:	mov	r2, r5
    8e68:	mov	r1, r9
    8e6c:	mov	r0, r6
    8e70:	bl	0 <flatcc_json_parser_unmatched_symbol>
    8e74:	mov	r4, r0
    8e78:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    8e7c:	add	r4, r9, #8
    8e80:	mov	r1, r5
    8e84:	mov	r0, r4
    8e88:	bl	590 <flatcc_json_parser_symbol_part>
    8e8c:	and	ip, r1, #-16777216	; 0xff000000
    8e90:	mov	r3, #0
    8e94:	eor	ip, ip, #1929379840	; 0x73000000
    8e98:	orr	r3, ip, r3
    8e9c:	cmp	r3, #0
    8ea0:	bne	9024 <MyGame_Example_Monster_parse_json_table+0x17a8>
    8ea4:	mov	r1, r4
    8ea8:	mov	r9, r1
    8eac:	mov	r3, #1
    8eb0:	mov	r2, r5
    8eb4:	mov	r0, r6
    8eb8:	bl	a5c <flatcc_json_parser_match_symbol>
    8ebc:	mov	r4, r0
    8ec0:	cmp	r9, r4
    8ec4:	beq	900c <MyGame_Example_Monster_parse_json_table+0x1790>
    8ec8:	ldr	r0, [r6]
    8ecc:	mov	r1, #8
    8ed0:	mov	r2, #8
    8ed4:	mvn	r3, #-536870912	; 0xe0000000
    8ed8:	bl	0 <flatcc_builder_start_vector>
    8edc:	cmp	r0, #0
    8ee0:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8ee4:	add	r3, sp, #76	; 0x4c
    8ee8:	mov	r2, r5
    8eec:	mov	r1, r4
    8ef0:	mov	r0, r6
    8ef4:	bl	854 <flatcc_json_parser_array_start>
    8ef8:	mov	r4, r0
    8efc:	ldr	r2, [sp, #76]	; 0x4c
    8f00:	cmp	r2, #0
    8f04:	beq	8fbc <MyGame_Example_Monster_parse_json_table+0x1740>
    8f08:	vldr	d6, [pc, #788]	; 9224 <MyGame_Example_Monster_parse_json_table+0x19a8>
    8f0c:	vstr	d6, [sp, #136]	; 0x88
    8f10:	ldr	r0, [r6]
    8f14:	mov	r1, #1
    8f18:	bl	0 <flatcc_builder_extend_vector>
    8f1c:	mov	sl, r0
    8f20:	cmp	sl, #0
    8f24:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8f28:	mov	r9, r4
    8f2c:	add	r3, sp, #136	; 0x88
    8f30:	mov	r2, r5
    8f34:	mov	r1, r9
    8f38:	mov	r0, r6
    8f3c:	bl	0 <flatcc_json_parser_double>
    8f40:	mov	r4, r0
    8f44:	cmp	r9, r4
    8f48:	bne	8f94 <MyGame_Example_Monster_parse_json_table+0x1718>
    8f4c:	mov	r9, r4
    8f50:	ldr	r3, [pc, #700]	; 9214 <MyGame_Example_Monster_parse_json_table+0x1998>
    8f54:	add	r0, sp, #136	; 0x88
    8f58:	str	r0, [sp]
    8f5c:	mov	r2, r5
    8f60:	mov	r1, r9
    8f64:	mov	r0, r6
    8f68:	bl	2c84 <flatcc_json_parser_symbolic_double>
    8f6c:	mov	r4, r0
    8f70:	cmp	r4, r9
    8f74:	beq	8f88 <MyGame_Example_Monster_parse_json_table+0x170c>
    8f78:	cmp	r4, r5
    8f7c:	moveq	r3, #1
    8f80:	movne	r3, #0
    8f84:	b	8f8c <MyGame_Example_Monster_parse_json_table+0x1710>
    8f88:	mov	r3, #1
    8f8c:	cmp	r3, #0
    8f90:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    8f94:	vldr	d0, [sp, #136]	; 0x88
    8f98:	mov	r0, sl
    8f9c:	bl	364 <flatbuffers_double_write_to_pe>
    8fa0:	add	r3, sp, #76	; 0x4c
    8fa4:	mov	r2, r5
    8fa8:	mov	r1, r4
    8fac:	mov	r0, r6
    8fb0:	bl	934 <flatcc_json_parser_array_end>
    8fb4:	mov	r4, r0
    8fb8:	b	8efc <MyGame_Example_Monster_parse_json_table+0x1680>
    8fbc:	ldr	r0, [r6]
    8fc0:	bl	0 <flatcc_builder_end_vector>
    8fc4:	str	r0, [sp, #80]	; 0x50
    8fc8:	ldr	ip, [sp, #80]	; 0x50
    8fcc:	cmp	ip, #0
    8fd0:	beq	8ff4 <MyGame_Example_Monster_parse_json_table+0x1778>
    8fd4:	ldr	r0, [r6]
    8fd8:	mov	r1, #33	; 0x21
    8fdc:	bl	0 <flatcc_builder_table_add_offset>
    8fe0:	mov	r7, r0
    8fe4:	cmp	r7, #0
    8fe8:	moveq	ip, #1
    8fec:	movne	ip, #0
    8ff0:	b	8ff8 <MyGame_Example_Monster_parse_json_table+0x177c>
    8ff4:	mov	ip, #1
    8ff8:	cmp	ip, #0
    8ffc:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9000:	ldr	r3, [sp, #80]	; 0x50
    9004:	str	r3, [r7]
    9008:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    900c:	mov	r2, r5
    9010:	mov	r1, r4
    9014:	mov	r0, r6
    9018:	bl	0 <flatcc_json_parser_unmatched_symbol>
    901c:	mov	r4, r0
    9020:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9024:	mov	r2, r5
    9028:	mov	r1, r4
    902c:	mov	r0, r6
    9030:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9034:	mov	r4, r0
    9038:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    903c:	mov	r2, r5
    9040:	mov	r1, r4
    9044:	mov	r0, r6
    9048:	bl	0 <flatcc_json_parser_unmatched_symbol>
    904c:	mov	r4, r0
    9050:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9054:	add	r4, r4, #8
    9058:	mov	r1, r5
    905c:	mov	r0, r4
    9060:	bl	590 <flatcc_json_parser_symbol_part>
    9064:	mov	ip, r1
    9068:	mov	r3, r0
    906c:	movw	r2, #13407	; 0x345f
    9070:	movt	r2, #29494	; 0x7336
    9074:	cmp	ip, r2
    9078:	bne	9090 <MyGame_Example_Monster_parse_json_table+0x1814>
    907c:	movw	r2, #30257	; 0x7631
    9080:	movt	r2, #26222	; 0x666e
    9084:	cmp	r3, r2
    9088:	bcc	9880 <MyGame_Example_Monster_parse_json_table+0x2004>
    908c:	b	90a0 <MyGame_Example_Monster_parse_json_table+0x1824>
    9090:	movw	r2, #13407	; 0x345f
    9094:	movt	r2, #29494	; 0x7336
    9098:	cmp	ip, r2
    909c:	bcc	9880 <MyGame_Example_Monster_parse_json_table+0x2004>
    90a0:	mov	r3, r1
    90a4:	mov	r2, r0
    90a8:	movw	ip, #12895	; 0x325f
    90ac:	movt	ip, #30003	; 0x7533
    90b0:	cmp	r3, ip
    90b4:	bne	90cc <MyGame_Example_Monster_parse_json_table+0x1850>
    90b8:	movw	r3, #30257	; 0x7631
    90bc:	movt	r3, #26222	; 0x666e
    90c0:	cmp	r2, r3
    90c4:	bcc	95ec <MyGame_Example_Monster_parse_json_table+0x1d70>
    90c8:	b	90dc <MyGame_Example_Monster_parse_json_table+0x1860>
    90cc:	movw	r2, #12895	; 0x325f
    90d0:	movt	r2, #30003	; 0x7533
    90d4:	cmp	r3, r2
    90d8:	bcc	95ec <MyGame_Example_Monster_parse_json_table+0x1d70>
    90dc:	mov	ip, r1
    90e0:	mov	r3, r0
    90e4:	eor	r2, ip, #95	; 0x5f
    90e8:	eor	r2, r2, #12800	; 0x3200
    90ec:	eor	r2, r2, #3342336	; 0x330000
    90f0:	eor	r2, r2, #1962934272	; 0x75000000
    90f4:	eor	r3, r3, #49	; 0x31
    90f8:	eor	r3, r3, #30208	; 0x7600
    90fc:	eor	r3, r3, #7208960	; 0x6e0000
    9100:	eor	r3, r3, #1711276032	; 0x66000000
    9104:	orr	r3, r2, r3
    9108:	cmp	r3, #0
    910c:	beq	93c0 <MyGame_Example_Monster_parse_json_table+0x1b44>
    9110:	eor	ip, r1, #95	; 0x5f
    9114:	eor	ip, ip, #144384	; 0x23400
    9118:	eor	ip, ip, #20185088	; 0x1340000
    911c:	eor	ip, ip, #1946157056	; 0x74000000
    9120:	eor	r0, r0, #49	; 0x31
    9124:	eor	r0, r0, #30208	; 0x7600
    9128:	eor	r0, r0, #7208960	; 0x6e0000
    912c:	eor	r0, r0, #1711276032	; 0x66000000
    9130:	orr	r1, ip, r0
    9134:	cmp	r1, #0
    9138:	bne	93a8 <MyGame_Example_Monster_parse_json_table+0x1b2c>
    913c:	mov	r1, r4
    9140:	mov	r4, r1
    9144:	mov	r3, #8
    9148:	mov	r2, r5
    914c:	mov	r0, r6
    9150:	bl	a5c <flatcc_json_parser_match_symbol>
    9154:	cmp	r4, r0
    9158:	bne	92c8 <MyGame_Example_Monster_parse_json_table+0x1a4c>
    915c:	add	r4, r0, #8
    9160:	mov	r1, r5
    9164:	mov	r0, r4
    9168:	bl	590 <flatcc_json_parser_symbol_part>
    916c:	and	r3, r1, #-16777216	; 0xff000000
    9170:	mov	ip, #0
    9174:	eor	r1, r3, #1627389952	; 0x61000000
    9178:	orr	r1, r1, ip
    917c:	cmp	r1, #0
    9180:	bne	92b0 <MyGame_Example_Monster_parse_json_table+0x1a34>
    9184:	mov	r3, #1
    9188:	mov	r2, r5
    918c:	mov	r1, r4
    9190:	mov	r0, r6
    9194:	bl	a5c <flatcc_json_parser_match_symbol>
    9198:	mov	r1, r0
    919c:	cmp	r4, r1
    91a0:	beq	929c <MyGame_Example_Monster_parse_json_table+0x1a20>
    91a4:	mov	ip, #0
    91a8:	mov	r3, #0
    91ac:	str	r3, [sp, #128]	; 0x80
    91b0:	str	ip, [sp, #132]	; 0x84
    91b4:	mov	r9, r1
    91b8:	add	r3, sp, #128	; 0x80
    91bc:	mov	r2, r5
    91c0:	mov	r0, r6
    91c4:	bl	12e8 <flatcc_json_parser_uint64>
    91c8:	mov	r4, r0
    91cc:	cmp	r9, r4
    91d0:	bne	9238 <MyGame_Example_Monster_parse_json_table+0x19bc>
    91d4:	mov	r9, r4
    91d8:	ldr	r3, [pc, #56]	; 9218 <MyGame_Example_Monster_parse_json_table+0x199c>
    91dc:	add	r1, sp, #128	; 0x80
    91e0:	str	r1, [sp]
    91e4:	mov	r2, r5
    91e8:	mov	r1, r9
    91ec:	mov	r0, r6
    91f0:	bl	1a28 <flatcc_json_parser_symbolic_uint64>
    91f4:	mov	r4, r0
    91f8:	cmp	r4, r9
    91fc:	beq	922c <MyGame_Example_Monster_parse_json_table+0x19b0>
    9200:	cmp	r4, r5
    9204:	moveq	ip, #1
    9208:	movne	ip, #0
    920c:	b	9230 <MyGame_Example_Monster_parse_json_table+0x19b4>
    9210:	.word	0x00000234
    9214:	.word	0x00000240
    9218:	.word	0x00000228
    921c:	.word	0x000001a4
    9220:	.word	0x0000024c
	...
    922c:	mov	ip, #1
    9230:	cmp	ip, #0
    9234:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9238:	ldr	r3, [sp, #128]	; 0x80
    923c:	ldr	r1, [sp, #132]	; 0x84
    9240:	orr	r1, r1, r3
    9244:	cmp	r1, #0
    9248:	bne	9264 <MyGame_Example_Monster_parse_json_table+0x19e8>
    924c:	ldr	r1, [r6, #8]
    9250:	and	r0, r1, #2
    9254:	cmp	r0, #0
    9258:	movne	r1, #1
    925c:	moveq	r1, #0
    9260:	b	9268 <MyGame_Example_Monster_parse_json_table+0x19ec>
    9264:	mov	r1, #1
    9268:	cmp	r1, #0
    926c:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9270:	ldr	r0, [r6]
    9274:	mov	r1, #23
    9278:	mov	r2, #8
    927c:	mov	r3, #8
    9280:	bl	0 <flatcc_builder_table_add>
    9284:	cmp	r0, #0
    9288:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    928c:	ldr	r2, [sp, #128]	; 0x80
    9290:	ldr	r3, [sp, #132]	; 0x84
    9294:	bl	128 <flatbuffers_uint64_write_to_pe>
    9298:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    929c:	mov	r2, r5
    92a0:	mov	r0, r6
    92a4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    92a8:	mov	r4, r0
    92ac:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    92b0:	mov	r2, r5
    92b4:	mov	r1, r4
    92b8:	mov	r0, r6
    92bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    92c0:	mov	r4, r0
    92c4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    92c8:	mov	r1, #0
    92cc:	mov	ip, #0
    92d0:	str	ip, [sp, #120]	; 0x78
    92d4:	str	r1, [sp, #124]	; 0x7c
    92d8:	mov	r9, r0
    92dc:	add	r3, sp, #120	; 0x78
    92e0:	mov	r2, r5
    92e4:	mov	r1, r0
    92e8:	mov	r0, r6
    92ec:	bl	12e8 <flatcc_json_parser_uint64>
    92f0:	mov	r4, r0
    92f4:	cmp	r9, r4
    92f8:	bne	9344 <MyGame_Example_Monster_parse_json_table+0x1ac8>
    92fc:	mov	r9, r4
    9300:	ldr	r3, [pc, #2916]	; 9e6c <MyGame_Example_Monster_parse_json_table+0x25f0>
    9304:	add	r0, sp, #120	; 0x78
    9308:	str	r0, [sp]
    930c:	mov	r2, r5
    9310:	mov	r1, r4
    9314:	mov	r0, r6
    9318:	bl	1a28 <flatcc_json_parser_symbolic_uint64>
    931c:	mov	r4, r0
    9320:	cmp	r4, r9
    9324:	beq	9338 <MyGame_Example_Monster_parse_json_table+0x1abc>
    9328:	cmp	r4, r5
    932c:	moveq	r0, #1
    9330:	movne	r0, #0
    9334:	b	933c <MyGame_Example_Monster_parse_json_table+0x1ac0>
    9338:	mov	r0, #1
    933c:	cmp	r0, #0
    9340:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9344:	ldr	r3, [sp, #120]	; 0x78
    9348:	ldr	ip, [sp, #124]	; 0x7c
    934c:	orr	r2, ip, r3
    9350:	cmp	r2, #0
    9354:	bne	9370 <MyGame_Example_Monster_parse_json_table+0x1af4>
    9358:	ldr	r1, [r6, #8]
    935c:	and	r3, r1, #2
    9360:	cmp	r3, #0
    9364:	movne	r0, #1
    9368:	moveq	r0, #0
    936c:	b	9374 <MyGame_Example_Monster_parse_json_table+0x1af8>
    9370:	mov	r0, #1
    9374:	cmp	r0, #0
    9378:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    937c:	ldr	r0, [r6]
    9380:	mov	r1, #19
    9384:	mov	r2, #8
    9388:	mov	r3, #8
    938c:	bl	0 <flatcc_builder_table_add>
    9390:	cmp	r0, #0
    9394:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9398:	ldr	r2, [sp, #120]	; 0x78
    939c:	ldr	r3, [sp, #124]	; 0x7c
    93a0:	bl	128 <flatbuffers_uint64_write_to_pe>
    93a4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    93a8:	mov	r2, r5
    93ac:	mov	r1, r4
    93b0:	mov	r0, r6
    93b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    93b8:	mov	r4, r0
    93bc:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    93c0:	mov	r1, r4
    93c4:	mov	r4, r1
    93c8:	mov	r3, #8
    93cc:	mov	r2, r5
    93d0:	mov	r0, r6
    93d4:	bl	a5c <flatcc_json_parser_match_symbol>
    93d8:	cmp	r4, r0
    93dc:	bne	9520 <MyGame_Example_Monster_parse_json_table+0x1ca4>
    93e0:	add	r4, r0, #8
    93e4:	mov	r1, r5
    93e8:	mov	r0, r4
    93ec:	bl	590 <flatcc_json_parser_symbol_part>
    93f0:	and	r1, r1, #-16777216	; 0xff000000
    93f4:	mov	r3, #0
    93f8:	eor	ip, r1, #1627389952	; 0x61000000
    93fc:	orr	r1, ip, r3
    9400:	cmp	r1, #0
    9404:	bne	9508 <MyGame_Example_Monster_parse_json_table+0x1c8c>
    9408:	mov	r3, #1
    940c:	mov	r2, r5
    9410:	mov	r1, r4
    9414:	mov	r0, r6
    9418:	bl	a5c <flatcc_json_parser_match_symbol>
    941c:	mov	r1, r0
    9420:	cmp	r4, r1
    9424:	beq	94f4 <MyGame_Example_Monster_parse_json_table+0x1c78>
    9428:	mov	r2, #0
    942c:	str	r2, [sp, #72]	; 0x48
    9430:	mov	r9, r1
    9434:	add	r3, sp, #72	; 0x48
    9438:	mov	r2, r5
    943c:	mov	r1, r9
    9440:	mov	r0, r6
    9444:	bl	13b4 <flatcc_json_parser_uint32>
    9448:	mov	r4, r0
    944c:	cmp	r9, r4
    9450:	bne	949c <MyGame_Example_Monster_parse_json_table+0x1c20>
    9454:	mov	r9, r4
    9458:	ldr	r3, [pc, #2568]	; 9e68 <MyGame_Example_Monster_parse_json_table+0x25ec>
    945c:	add	r2, sp, #72	; 0x48
    9460:	str	r2, [sp]
    9464:	mov	r2, r5
    9468:	mov	r1, r9
    946c:	mov	r0, r6
    9470:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    9474:	mov	r4, r0
    9478:	cmp	r4, r9
    947c:	beq	9490 <MyGame_Example_Monster_parse_json_table+0x1c14>
    9480:	cmp	r4, r5
    9484:	moveq	r1, #1
    9488:	movne	r1, #0
    948c:	b	9494 <MyGame_Example_Monster_parse_json_table+0x1c18>
    9490:	mov	r1, #1
    9494:	cmp	r1, #0
    9498:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    949c:	ldr	r1, [sp, #72]	; 0x48
    94a0:	cmp	r1, #0
    94a4:	bne	94c0 <MyGame_Example_Monster_parse_json_table+0x1c44>
    94a8:	ldr	ip, [r6, #8]
    94ac:	and	r3, ip, #2
    94b0:	cmp	r3, #0
    94b4:	movne	r3, #1
    94b8:	moveq	r3, #0
    94bc:	b	94c4 <MyGame_Example_Monster_parse_json_table+0x1c48>
    94c0:	mov	r3, #1
    94c4:	cmp	r3, #0
    94c8:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    94cc:	ldr	r0, [r6]
    94d0:	mov	r1, #21
    94d4:	mov	r2, #4
    94d8:	mov	r3, #4
    94dc:	bl	0 <flatcc_builder_table_add>
    94e0:	cmp	r0, #0
    94e4:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    94e8:	ldr	r1, [sp, #72]	; 0x48
    94ec:	bl	d8 <flatbuffers_uint32_write_to_pe>
    94f0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    94f4:	mov	r2, r5
    94f8:	mov	r0, r6
    94fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9500:	mov	r4, r0
    9504:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9508:	mov	r2, r5
    950c:	mov	r1, r4
    9510:	mov	r0, r6
    9514:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9518:	mov	r4, r0
    951c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9520:	mov	r1, #0
    9524:	str	r1, [sp, #68]	; 0x44
    9528:	mov	r9, r0
    952c:	add	r3, sp, #68	; 0x44
    9530:	mov	r2, r5
    9534:	mov	r1, r0
    9538:	mov	r0, r6
    953c:	bl	13b4 <flatcc_json_parser_uint32>
    9540:	mov	r4, r0
    9544:	cmp	r9, r4
    9548:	bne	9594 <MyGame_Example_Monster_parse_json_table+0x1d18>
    954c:	mov	r9, r4
    9550:	ldr	r3, [pc, #2312]	; 9e60 <MyGame_Example_Monster_parse_json_table+0x25e4>
    9554:	add	r0, sp, #68	; 0x44
    9558:	str	r0, [sp]
    955c:	mov	r2, r5
    9560:	mov	r1, r4
    9564:	mov	r0, r6
    9568:	bl	1c18 <flatcc_json_parser_symbolic_uint32>
    956c:	mov	r4, r0
    9570:	cmp	r4, r9
    9574:	beq	9588 <MyGame_Example_Monster_parse_json_table+0x1d0c>
    9578:	cmp	r4, r5
    957c:	moveq	r2, #1
    9580:	movne	r2, #0
    9584:	b	958c <MyGame_Example_Monster_parse_json_table+0x1d10>
    9588:	mov	r2, #1
    958c:	cmp	r2, #0
    9590:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9594:	ldr	r2, [sp, #68]	; 0x44
    9598:	cmp	r2, #0
    959c:	bne	95b8 <MyGame_Example_Monster_parse_json_table+0x1d3c>
    95a0:	ldr	r0, [r6, #8]
    95a4:	and	r0, r0, #2
    95a8:	cmp	r0, #0
    95ac:	movne	r2, #1
    95b0:	moveq	r2, #0
    95b4:	b	95bc <MyGame_Example_Monster_parse_json_table+0x1d40>
    95b8:	mov	r2, #1
    95bc:	cmp	r2, #0
    95c0:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    95c4:	ldr	r0, [r6]
    95c8:	mov	r1, #17
    95cc:	mov	r2, #4
    95d0:	mov	r3, #4
    95d4:	bl	0 <flatcc_builder_table_add>
    95d8:	cmp	r0, #0
    95dc:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    95e0:	ldr	r1, [sp, #68]	; 0x44
    95e4:	bl	d8 <flatbuffers_uint32_write_to_pe>
    95e8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    95ec:	eor	r3, r1, #95	; 0x5f
    95f0:	eor	r3, r3, #144384	; 0x23400
    95f4:	eor	r3, r3, #53739520	; 0x3340000
    95f8:	eor	r3, r3, #1879048192	; 0x70000000
    95fc:	eor	r1, r0, #49	; 0x31
    9600:	eor	r1, r1, #30208	; 0x7600
    9604:	eor	r1, r1, #7208960	; 0x6e0000
    9608:	eor	r1, r1, #1711276032	; 0x66000000
    960c:	orr	r3, r3, r1
    9610:	cmp	r3, #0
    9614:	bne	9868 <MyGame_Example_Monster_parse_json_table+0x1fec>
    9618:	mov	r1, r4
    961c:	mov	r4, r1
    9620:	mov	r3, #8
    9624:	mov	r2, r5
    9628:	mov	r0, r6
    962c:	bl	a5c <flatcc_json_parser_match_symbol>
    9630:	cmp	r4, r0
    9634:	bne	9788 <MyGame_Example_Monster_parse_json_table+0x1f0c>
    9638:	add	r4, r0, #8
    963c:	mov	r1, r5
    9640:	mov	r0, r4
    9644:	bl	590 <flatcc_json_parser_symbol_part>
    9648:	and	r1, r1, #-16777216	; 0xff000000
    964c:	mov	ip, #0
    9650:	eor	r0, r1, #1627389952	; 0x61000000
    9654:	orr	r0, r0, ip
    9658:	cmp	r0, #0
    965c:	bne	9770 <MyGame_Example_Monster_parse_json_table+0x1ef4>
    9660:	mov	r3, #1
    9664:	mov	r2, r5
    9668:	mov	r1, r4
    966c:	mov	r0, r6
    9670:	bl	a5c <flatcc_json_parser_match_symbol>
    9674:	mov	r1, r0
    9678:	cmp	r4, r1
    967c:	beq	975c <MyGame_Example_Monster_parse_json_table+0x1ee0>
    9680:	mov	r0, #0
    9684:	mov	ip, #0
    9688:	str	ip, [sp, #112]	; 0x70
    968c:	str	r0, [sp, #116]	; 0x74
    9690:	mov	r9, r1
    9694:	add	r3, sp, #112	; 0x70
    9698:	mov	r2, r5
    969c:	mov	r0, r6
    96a0:	bl	1600 <flatcc_json_parser_int64>
    96a4:	mov	r4, r0
    96a8:	cmp	r9, r4
    96ac:	bne	96f8 <MyGame_Example_Monster_parse_json_table+0x1e7c>
    96b0:	mov	r9, r4
    96b4:	ldr	r3, [pc, #1960]	; 9e64 <MyGame_Example_Monster_parse_json_table+0x25e8>
    96b8:	add	r0, sp, #112	; 0x70
    96bc:	str	r0, [sp]
    96c0:	mov	r2, r5
    96c4:	mov	r1, r9
    96c8:	mov	r0, r6
    96cc:	bl	2188 <flatcc_json_parser_symbolic_int64>
    96d0:	mov	r4, r0
    96d4:	cmp	r4, r9
    96d8:	beq	96ec <MyGame_Example_Monster_parse_json_table+0x1e70>
    96dc:	cmp	r4, r5
    96e0:	moveq	r1, #1
    96e4:	movne	r1, #0
    96e8:	b	96f0 <MyGame_Example_Monster_parse_json_table+0x1e74>
    96ec:	mov	r1, #1
    96f0:	cmp	r1, #0
    96f4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    96f8:	ldr	r2, [sp, #112]	; 0x70
    96fc:	ldr	r0, [sp, #116]	; 0x74
    9700:	orr	r2, r0, r2
    9704:	cmp	r2, #0
    9708:	bne	9724 <MyGame_Example_Monster_parse_json_table+0x1ea8>
    970c:	ldr	r0, [r6, #8]
    9710:	and	r1, r0, #2
    9714:	cmp	r1, #0
    9718:	movne	r2, #1
    971c:	moveq	r2, #0
    9720:	b	9728 <MyGame_Example_Monster_parse_json_table+0x1eac>
    9724:	mov	r2, #1
    9728:	cmp	r2, #0
    972c:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9730:	ldr	r0, [r6]
    9734:	mov	r1, #22
    9738:	mov	r2, #8
    973c:	mov	r3, #8
    9740:	bl	0 <flatcc_builder_table_add>
    9744:	cmp	r0, #0
    9748:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    974c:	ldr	r2, [sp, #112]	; 0x70
    9750:	ldr	r3, [sp, #116]	; 0x74
    9754:	bl	294 <flatbuffers_int64_write_to_pe>
    9758:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    975c:	mov	r2, r5
    9760:	mov	r0, r6
    9764:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9768:	mov	r4, r0
    976c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9770:	mov	r2, r5
    9774:	mov	r1, r4
    9778:	mov	r0, r6
    977c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9780:	mov	r4, r0
    9784:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9788:	mov	r1, #0
    978c:	mov	ip, #0
    9790:	str	ip, [sp, #152]	; 0x98
    9794:	str	r1, [sp, #156]	; 0x9c
    9798:	mov	r9, r0
    979c:	add	r3, sp, #152	; 0x98
    97a0:	mov	r2, r5
    97a4:	mov	r1, r0
    97a8:	mov	r0, r6
    97ac:	bl	1600 <flatcc_json_parser_int64>
    97b0:	mov	r4, r0
    97b4:	cmp	r9, r4
    97b8:	bne	9804 <MyGame_Example_Monster_parse_json_table+0x1f88>
    97bc:	mov	r9, r4
    97c0:	ldr	r3, [pc, #1708]	; 9e74 <MyGame_Example_Monster_parse_json_table+0x25f8>
    97c4:	add	r0, sp, #152	; 0x98
    97c8:	str	r0, [sp]
    97cc:	mov	r2, r5
    97d0:	mov	r1, r4
    97d4:	mov	r0, r6
    97d8:	bl	2188 <flatcc_json_parser_symbolic_int64>
    97dc:	mov	r4, r0
    97e0:	cmp	r4, r9
    97e4:	beq	97f8 <MyGame_Example_Monster_parse_json_table+0x1f7c>
    97e8:	cmp	r4, r5
    97ec:	moveq	r0, #1
    97f0:	movne	r0, #0
    97f4:	b	97fc <MyGame_Example_Monster_parse_json_table+0x1f80>
    97f8:	mov	r0, #1
    97fc:	cmp	r0, #0
    9800:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9804:	ldr	r3, [sp, #152]	; 0x98
    9808:	ldr	ip, [sp, #156]	; 0x9c
    980c:	orr	r1, ip, r3
    9810:	cmp	r1, #0
    9814:	bne	9830 <MyGame_Example_Monster_parse_json_table+0x1fb4>
    9818:	ldr	r1, [r6, #8]
    981c:	and	r0, r1, #2
    9820:	cmp	r0, #0
    9824:	movne	r2, #1
    9828:	moveq	r2, #0
    982c:	b	9834 <MyGame_Example_Monster_parse_json_table+0x1fb8>
    9830:	mov	r2, #1
    9834:	cmp	r2, #0
    9838:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    983c:	ldr	r0, [r6]
    9840:	mov	r1, #18
    9844:	mov	r2, #8
    9848:	mov	r3, #8
    984c:	bl	0 <flatcc_builder_table_add>
    9850:	cmp	r0, #0
    9854:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9858:	ldr	r2, [sp, #152]	; 0x98
    985c:	ldr	r3, [sp, #156]	; 0x9c
    9860:	bl	294 <flatbuffers_int64_write_to_pe>
    9864:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9868:	mov	r2, r5
    986c:	mov	r1, r4
    9870:	mov	r0, r6
    9874:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9878:	mov	r4, r0
    987c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9880:	eor	r3, r1, #95	; 0x5f
    9884:	eor	r3, r3, #12800	; 0x3200
    9888:	eor	r3, r3, #3342336	; 0x330000
    988c:	eor	r3, r3, #1929379840	; 0x73000000
    9890:	eor	r2, r0, #49	; 0x31
    9894:	eor	r2, r2, #30208	; 0x7600
    9898:	eor	r2, r2, #7208960	; 0x6e0000
    989c:	eor	r2, r2, #1711276032	; 0x66000000
    98a0:	orr	r0, r3, r2
    98a4:	cmp	r0, #0
    98a8:	bne	9ad4 <MyGame_Example_Monster_parse_json_table+0x2258>
    98ac:	mov	r3, #8
    98b0:	mov	r2, r5
    98b4:	mov	r1, r4
    98b8:	mov	r0, r6
    98bc:	bl	a5c <flatcc_json_parser_match_symbol>
    98c0:	mov	r9, r0
    98c4:	cmp	r4, r9
    98c8:	bne	9a0c <MyGame_Example_Monster_parse_json_table+0x2190>
    98cc:	add	r4, r9, #8
    98d0:	mov	r1, r5
    98d4:	mov	r0, r4
    98d8:	bl	590 <flatcc_json_parser_symbol_part>
    98dc:	and	r3, r1, #-16777216	; 0xff000000
    98e0:	mov	ip, #0
    98e4:	eor	r0, r3, #1627389952	; 0x61000000
    98e8:	orr	ip, r0, ip
    98ec:	cmp	ip, #0
    98f0:	bne	99f4 <MyGame_Example_Monster_parse_json_table+0x2178>
    98f4:	mov	r1, r4
    98f8:	mov	r4, r1
    98fc:	mov	r3, #1
    9900:	mov	r2, r5
    9904:	mov	r0, r6
    9908:	bl	a5c <flatcc_json_parser_match_symbol>
    990c:	mov	r1, r0
    9910:	cmp	r4, r1
    9914:	beq	99e0 <MyGame_Example_Monster_parse_json_table+0x2164>
    9918:	mov	r0, #0
    991c:	str	r0, [sp, #104]	; 0x68
    9920:	mov	r9, r1
    9924:	add	r3, sp, #104	; 0x68
    9928:	mov	r2, r5
    992c:	mov	r0, r6
    9930:	bl	16cc <flatcc_json_parser_int32>
    9934:	mov	r4, r0
    9938:	cmp	r9, r4
    993c:	bne	9988 <MyGame_Example_Monster_parse_json_table+0x210c>
    9940:	mov	r9, r4
    9944:	ldr	r3, [pc, #1292]	; 9e58 <MyGame_Example_Monster_parse_json_table+0x25dc>
    9948:	add	r1, sp, #104	; 0x68
    994c:	str	r1, [sp]
    9950:	mov	r2, r5
    9954:	mov	r1, r9
    9958:	mov	r0, r6
    995c:	bl	2378 <flatcc_json_parser_symbolic_int32>
    9960:	mov	r4, r0
    9964:	cmp	r4, r9
    9968:	beq	997c <MyGame_Example_Monster_parse_json_table+0x2100>
    996c:	cmp	r4, r5
    9970:	moveq	r1, #1
    9974:	movne	r1, #0
    9978:	b	9980 <MyGame_Example_Monster_parse_json_table+0x2104>
    997c:	mov	r1, #1
    9980:	cmp	r1, #0
    9984:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9988:	ldr	r1, [sp, #104]	; 0x68
    998c:	cmp	r1, #0
    9990:	bne	99ac <MyGame_Example_Monster_parse_json_table+0x2130>
    9994:	ldr	r2, [r6, #8]
    9998:	and	r0, r2, #2
    999c:	cmp	r0, #0
    99a0:	movne	r1, #1
    99a4:	moveq	r1, #0
    99a8:	b	99b0 <MyGame_Example_Monster_parse_json_table+0x2134>
    99ac:	mov	r1, #1
    99b0:	cmp	r1, #0
    99b4:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    99b8:	ldr	r0, [r6]
    99bc:	mov	r1, #20
    99c0:	mov	r2, #4
    99c4:	mov	r3, #4
    99c8:	bl	0 <flatcc_builder_table_add>
    99cc:	cmp	r0, #0
    99d0:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    99d4:	ldr	r1, [sp, #104]	; 0x68
    99d8:	bl	244 <flatbuffers_int32_write_to_pe>
    99dc:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    99e0:	mov	r2, r5
    99e4:	mov	r0, r6
    99e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    99ec:	mov	r4, r0
    99f0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    99f4:	mov	r2, r5
    99f8:	mov	r1, r4
    99fc:	mov	r0, r6
    9a00:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9a04:	mov	r4, r0
    9a08:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9a0c:	mov	r1, #0
    9a10:	str	r1, [sp, #100]	; 0x64
    9a14:	add	r3, sp, #100	; 0x64
    9a18:	mov	r2, r5
    9a1c:	mov	r1, r9
    9a20:	mov	r0, r6
    9a24:	bl	16cc <flatcc_json_parser_int32>
    9a28:	mov	r4, r0
    9a2c:	cmp	r9, r4
    9a30:	bne	9a7c <MyGame_Example_Monster_parse_json_table+0x2200>
    9a34:	mov	r9, r4
    9a38:	ldr	r3, [pc, #1052]	; 9e5c <MyGame_Example_Monster_parse_json_table+0x25e0>
    9a3c:	add	r1, sp, #100	; 0x64
    9a40:	str	r1, [sp]
    9a44:	mov	r2, r5
    9a48:	mov	r1, r4
    9a4c:	mov	r0, r6
    9a50:	bl	2378 <flatcc_json_parser_symbolic_int32>
    9a54:	mov	r4, r0
    9a58:	cmp	r4, r9
    9a5c:	beq	9a70 <MyGame_Example_Monster_parse_json_table+0x21f4>
    9a60:	cmp	r4, r5
    9a64:	moveq	r1, #1
    9a68:	movne	r1, #0
    9a6c:	b	9a74 <MyGame_Example_Monster_parse_json_table+0x21f8>
    9a70:	mov	r1, #1
    9a74:	cmp	r1, #0
    9a78:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9a7c:	ldr	r3, [sp, #100]	; 0x64
    9a80:	cmp	r3, #0
    9a84:	bne	9aa0 <MyGame_Example_Monster_parse_json_table+0x2224>
    9a88:	ldr	r3, [r6, #8]
    9a8c:	and	ip, r3, #2
    9a90:	cmp	ip, #0
    9a94:	movne	r1, #1
    9a98:	moveq	r1, #0
    9a9c:	b	9aa4 <MyGame_Example_Monster_parse_json_table+0x2228>
    9aa0:	mov	r1, #1
    9aa4:	cmp	r1, #0
    9aa8:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9aac:	ldr	r0, [r6]
    9ab0:	mov	r1, #16
    9ab4:	mov	r2, #4
    9ab8:	mov	r3, #4
    9abc:	bl	0 <flatcc_builder_table_add>
    9ac0:	cmp	r0, #0
    9ac4:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9ac8:	ldr	r1, [sp, #100]	; 0x64
    9acc:	bl	244 <flatbuffers_int32_write_to_pe>
    9ad0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9ad4:	mov	r2, r5
    9ad8:	mov	r1, r4
    9adc:	mov	r0, r6
    9ae0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9ae4:	mov	r4, r0
    9ae8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9aec:	bic	ip, sl, #255	; 0xff
    9af0:	bic	ip, ip, #65280	; 0xff00
    9af4:	eor	r2, fp, #884	; 0x374
    9af8:	eor	r2, r2, #356352	; 0x57000
    9afc:	eor	r2, r2, #73400320	; 0x4600000
    9b00:	eor	r2, r2, #1879048192	; 0x70000000
    9b04:	eor	r3, ip, #3342336	; 0x330000
    9b08:	eor	r3, r3, #1711276032	; 0x66000000
    9b0c:	orr	r0, r2, r3
    9b10:	cmp	r0, #0
    9b14:	bne	9c28 <MyGame_Example_Monster_parse_json_table+0x23ac>
    9b18:	mov	r1, r4
    9b1c:	mov	r4, r1
    9b20:	mov	r3, #6
    9b24:	mov	r2, r5
    9b28:	mov	r0, r6
    9b2c:	bl	a5c <flatcc_json_parser_match_symbol>
    9b30:	mov	r1, r0
    9b34:	cmp	r4, r1
    9b38:	beq	9c14 <MyGame_Example_Monster_parse_json_table+0x2398>
    9b3c:	vldr	s4, [pc, #824]	; 9e7c <MyGame_Example_Monster_parse_json_table+0x2600>
    9b40:	vstr	s4, [sp, #96]	; 0x60
    9b44:	mov	r9, r1
    9b48:	add	r3, sp, #96	; 0x60
    9b4c:	mov	r2, r5
    9b50:	mov	r0, r6
    9b54:	bl	0 <flatcc_json_parser_float>
    9b58:	mov	r4, r0
    9b5c:	cmp	r9, r4
    9b60:	bne	9bac <MyGame_Example_Monster_parse_json_table+0x2330>
    9b64:	mov	r9, r4
    9b68:	ldr	r3, [pc, #768]	; 9e70 <MyGame_Example_Monster_parse_json_table+0x25f4>
    9b6c:	add	r1, sp, #96	; 0x60
    9b70:	str	r1, [sp]
    9b74:	mov	r2, r5
    9b78:	mov	r1, r9
    9b7c:	mov	r0, r6
    9b80:	bl	2ab4 <flatcc_json_parser_symbolic_float>
    9b84:	mov	r4, r0
    9b88:	cmp	r4, r9
    9b8c:	beq	9ba0 <MyGame_Example_Monster_parse_json_table+0x2324>
    9b90:	cmp	r4, r5
    9b94:	moveq	r1, #1
    9b98:	movne	r1, #0
    9b9c:	b	9ba4 <MyGame_Example_Monster_parse_json_table+0x2328>
    9ba0:	mov	r1, #1
    9ba4:	cmp	r1, #0
    9ba8:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9bac:	vldr	s2, [sp, #96]	; 0x60
    9bb0:	vcvt.f64.f32	d6, s2
    9bb4:	vldr	d7, [pc, #708]	; 9e80 <MyGame_Example_Monster_parse_json_table+0x2604>
    9bb8:	vcmp.f64	d6, d7
    9bbc:	vmrs	APSR_nzcv, fpscr
    9bc0:	bne	9bdc <MyGame_Example_Monster_parse_json_table+0x2360>
    9bc4:	ldr	r0, [r6, #8]
    9bc8:	and	r3, r0, #2
    9bcc:	cmp	r3, #0
    9bd0:	movne	r2, #1
    9bd4:	moveq	r2, #0
    9bd8:	b	9be0 <MyGame_Example_Monster_parse_json_table+0x2364>
    9bdc:	mov	r2, #1
    9be0:	cmp	r2, #0
    9be4:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9be8:	ldr	r0, [r6]
    9bec:	mov	r1, #27
    9bf0:	mov	r2, #4
    9bf4:	mov	r3, #4
    9bf8:	bl	0 <flatcc_builder_table_add>
    9bfc:	cmp	r0, #0
    9c00:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9c04:	vldr	s0, [sp, #96]	; 0x60
    9c08:	vmov.f32	s0, s0
    9c0c:	bl	2fc <flatbuffers_float_write_to_pe>
    9c10:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9c14:	mov	r2, r5
    9c18:	mov	r0, r6
    9c1c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9c20:	mov	r4, r0
    9c24:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9c28:	mov	r2, r5
    9c2c:	mov	r1, r4
    9c30:	mov	r0, r6
    9c34:	bl	0 <flatcc_json_parser_unmatched_symbol>
    9c38:	mov	r4, r0
    9c3c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9c40:	mov	r2, sl
    9c44:	mov	ip, fp
    9c48:	movw	r3, #28005	; 0x6d65
    9c4c:	movt	r3, #28257	; 0x6e61
    9c50:	cmp	ip, r3
    9c54:	bne	9c68 <MyGame_Example_Monster_parse_json_table+0x23ec>
    9c58:	mov	r3, #0
    9c5c:	cmp	r2, r3
    9c60:	bcc	a3ac <MyGame_Example_Monster_parse_json_table+0x2b30>
    9c64:	b	9c7c <MyGame_Example_Monster_parse_json_table+0x2400>
    9c68:	mov	r2, fp
    9c6c:	movw	r0, #28005	; 0x6d65
    9c70:	movt	r0, #28257	; 0x6e61
    9c74:	cmp	r2, r0
    9c78:	bcc	a3ac <MyGame_Example_Monster_parse_json_table+0x2b30>
    9c7c:	mov	r0, sl
    9c80:	mov	r3, fp
    9c84:	movw	ip, #29556	; 0x7374
    9c88:	movt	ip, #29797	; 0x7465
    9c8c:	cmp	r3, ip
    9c90:	bne	9ca4 <MyGame_Example_Monster_parse_json_table+0x2428>
    9c94:	mov	ip, #0
    9c98:	cmp	r0, ip
    9c9c:	bcc	a09c <MyGame_Example_Monster_parse_json_table+0x2820>
    9ca0:	b	9cb8 <MyGame_Example_Monster_parse_json_table+0x243c>
    9ca4:	mov	r1, fp
    9ca8:	movw	r0, #29556	; 0x7374
    9cac:	movt	r0, #29797	; 0x7465
    9cb0:	cmp	r1, r0
    9cb4:	bcc	a09c <MyGame_Example_Monster_parse_json_table+0x2820>
    9cb8:	mov	r3, fp
    9cbc:	mov	r0, sl
    9cc0:	and	r1, r0, #-16777216	; 0xff000000
    9cc4:	eor	r2, r3, #884	; 0x374
    9cc8:	eor	r2, r2, #356352	; 0x57000
    9ccc:	eor	r2, r2, #73400320	; 0x4600000
    9cd0:	eor	r2, r2, #1879048192	; 0x70000000
    9cd4:	eor	r0, r1, #872415232	; 0x34000000
    9cd8:	orr	r0, r2, r0
    9cdc:	cmp	r0, #0
    9ce0:	bne	9ddc <MyGame_Example_Monster_parse_json_table+0x2560>
    9ce4:	mov	r1, r4
    9ce8:	mov	r9, r1
    9cec:	mov	r3, #5
    9cf0:	mov	r2, r5
    9cf4:	mov	r0, r6
    9cf8:	bl	a5c <flatcc_json_parser_match_symbol>
    9cfc:	mov	r4, r0
    9d00:	cmp	r9, r4
    9d04:	beq	9e88 <MyGame_Example_Monster_parse_json_table+0x260c>
    9d08:	ldr	r0, [r6]
    9d0c:	mov	r1, #4
    9d10:	mov	r2, #2
    9d14:	mvn	r3, #-1073741824	; 0xc0000000
    9d18:	bl	0 <flatcc_builder_start_vector>
    9d1c:	cmp	r0, #0
    9d20:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9d24:	add	r3, sp, #76	; 0x4c
    9d28:	mov	r2, r5
    9d2c:	mov	r1, r4
    9d30:	mov	r0, r6
    9d34:	bl	854 <flatcc_json_parser_array_start>
    9d38:	mov	r4, r0
    9d3c:	ldr	r1, [sp, #76]	; 0x4c
    9d40:	cmp	r1, #0
    9d44:	beq	9d8c <MyGame_Example_Monster_parse_json_table+0x2510>
    9d48:	ldr	r0, [r6]
    9d4c:	mov	r1, #1
    9d50:	bl	0 <flatcc_builder_extend_vector>
    9d54:	mov	r3, r0
    9d58:	cmp	r3, #0
    9d5c:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9d60:	mov	r2, r5
    9d64:	mov	r1, r4
    9d68:	mov	r0, r6
    9d6c:	bl	41f8 <MyGame_Example_Test_parse_json_struct_inline>
    9d70:	mov	r1, r0
    9d74:	add	r3, sp, #76	; 0x4c
    9d78:	mov	r2, r5
    9d7c:	mov	r0, r6
    9d80:	bl	934 <flatcc_json_parser_array_end>
    9d84:	mov	r4, r0
    9d88:	b	9d3c <MyGame_Example_Monster_parse_json_table+0x24c0>
    9d8c:	ldr	r0, [r6]
    9d90:	bl	0 <flatcc_builder_end_vector>
    9d94:	str	r0, [sp, #80]	; 0x50
    9d98:	ldr	r3, [sp, #80]	; 0x50
    9d9c:	cmp	r3, #0
    9da0:	beq	9dc4 <MyGame_Example_Monster_parse_json_table+0x2548>
    9da4:	ldr	r0, [r6]
    9da8:	mov	r1, #9
    9dac:	bl	0 <flatcc_builder_table_add_offset>
    9db0:	mov	r7, r0
    9db4:	cmp	r7, #0
    9db8:	moveq	r1, #1
    9dbc:	movne	r1, #0
    9dc0:	b	9dc8 <MyGame_Example_Monster_parse_json_table+0x254c>
    9dc4:	mov	r1, #1
    9dc8:	cmp	r1, #0
    9dcc:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9dd0:	ldr	r2, [sp, #80]	; 0x50
    9dd4:	str	r2, [r7]
    9dd8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9ddc:	mov	r0, fp
    9de0:	mov	r1, #0
    9de4:	eor	r2, r0, #884	; 0x374
    9de8:	eor	r2, r2, #356352	; 0x57000
    9dec:	eor	r2, r2, #73400320	; 0x4600000
    9df0:	eor	r2, r2, #1879048192	; 0x70000000
    9df4:	orr	ip, r2, r1
    9df8:	cmp	ip, #0
    9dfc:	bne	9e88 <MyGame_Example_Monster_parse_json_table+0x260c>
    9e00:	mov	r9, r4
    9e04:	mov	r3, #4
    9e08:	mov	r2, r5
    9e0c:	mov	r1, r9
    9e10:	mov	r0, r6
    9e14:	bl	a5c <flatcc_json_parser_match_symbol>
    9e18:	mov	r4, r0
    9e1c:	cmp	r9, r4
    9e20:	beq	9e88 <MyGame_Example_Monster_parse_json_table+0x260c>
    9e24:	mov	r3, #0
    9e28:	mov	ip, #8
    9e2c:	ldr	r0, [sp, #84]	; 0x54
    9e30:	ldr	r1, [pc, #64]	; 9e78 <MyGame_Example_Monster_parse_json_table+0x25fc>
    9e34:	str	r1, [sp, #8]
    9e38:	str	r0, [sp, #4]
    9e3c:	str	ip, [sp]
    9e40:	mov	r2, r5
    9e44:	mov	r1, r4
    9e48:	mov	r0, r6
    9e4c:	bl	0 <flatcc_json_parser_union>
    9e50:	mov	r4, r0
    9e54:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9e58:	.word	0x000001e0
    9e5c:	.word	0x000001d4
    9e60:	.word	0x00000204
    9e64:	.word	0x000001f8
    9e68:	.word	0x00000210
    9e6c:	.word	0x0000021c
    9e70:	.word	0x000001c8
    9e74:	.word	0x000001ec
	...
    9e88:	mov	r3, fp
    9e8c:	mov	r2, sl
    9e90:	and	r2, r2, #-16777216	; 0xff000000
    9e94:	eor	r3, r3, #884	; 0x374
    9e98:	eor	r3, r3, #356352	; 0x57000
    9e9c:	eor	r3, r3, #73400320	; 0x4600000
    9ea0:	eor	r3, r3, #1879048192	; 0x70000000
    9ea4:	eor	r1, r2, #889192448	; 0x35000000
    9ea8:	orr	r2, r3, r1
    9eac:	cmp	r2, #0
    9eb0:	bne	9fac <MyGame_Example_Monster_parse_json_table+0x2730>
    9eb4:	mov	r9, r4
    9eb8:	mov	r3, #5
    9ebc:	mov	r2, r5
    9ec0:	mov	r1, r9
    9ec4:	mov	r0, r6
    9ec8:	bl	a5c <flatcc_json_parser_match_symbol>
    9ecc:	mov	r4, r0
    9ed0:	cmp	r9, r4
    9ed4:	beq	9fac <MyGame_Example_Monster_parse_json_table+0x2730>
    9ed8:	ldr	r0, [r6]
    9edc:	mov	r1, #4
    9ee0:	mov	r2, #2
    9ee4:	mvn	r3, #-1073741824	; 0xc0000000
    9ee8:	bl	0 <flatcc_builder_start_vector>
    9eec:	cmp	r0, #0
    9ef0:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9ef4:	add	r3, sp, #76	; 0x4c
    9ef8:	mov	r2, r5
    9efc:	mov	r1, r4
    9f00:	mov	r0, r6
    9f04:	bl	854 <flatcc_json_parser_array_start>
    9f08:	mov	r4, r0
    9f0c:	ldr	r2, [sp, #76]	; 0x4c
    9f10:	cmp	r2, #0
    9f14:	beq	9f5c <MyGame_Example_Monster_parse_json_table+0x26e0>
    9f18:	ldr	r0, [r6]
    9f1c:	mov	r1, #1
    9f20:	bl	0 <flatcc_builder_extend_vector>
    9f24:	mov	r3, r0
    9f28:	cmp	r3, #0
    9f2c:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9f30:	mov	r2, r5
    9f34:	mov	r1, r4
    9f38:	mov	r0, r6
    9f3c:	bl	41f8 <MyGame_Example_Test_parse_json_struct_inline>
    9f40:	mov	r1, r0
    9f44:	add	r3, sp, #76	; 0x4c
    9f48:	mov	r2, r5
    9f4c:	mov	r0, r6
    9f50:	bl	934 <flatcc_json_parser_array_end>
    9f54:	mov	r4, r0
    9f58:	b	9f0c <MyGame_Example_Monster_parse_json_table+0x2690>
    9f5c:	ldr	r0, [r6]
    9f60:	bl	0 <flatcc_builder_end_vector>
    9f64:	str	r0, [sp, #80]	; 0x50
    9f68:	ldr	r1, [sp, #80]	; 0x50
    9f6c:	cmp	r1, #0
    9f70:	beq	9f94 <MyGame_Example_Monster_parse_json_table+0x2718>
    9f74:	ldr	r0, [r6]
    9f78:	mov	r1, #31
    9f7c:	bl	0 <flatcc_builder_table_add_offset>
    9f80:	mov	r7, r0
    9f84:	cmp	r7, #0
    9f88:	moveq	r0, #1
    9f8c:	movne	r0, #0
    9f90:	b	9f98 <MyGame_Example_Monster_parse_json_table+0x271c>
    9f94:	mov	r0, #1
    9f98:	cmp	r0, #0
    9f9c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    9fa0:	ldr	r1, [sp, #80]	; 0x50
    9fa4:	str	r1, [r7]
    9fa8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    9fac:	eor	r3, fp, #884	; 0x374
    9fb0:	eor	r3, r3, #356352	; 0x57000
    9fb4:	eor	r3, r3, #73400320	; 0x4600000
    9fb8:	eor	r3, r3, #1879048192	; 0x70000000
    9fbc:	eor	r2, sl, #2416	; 0x970
    9fc0:	eor	r2, r2, #290816	; 0x47000
    9fc4:	eor	r2, r2, #258998272	; 0xf700000
    9fc8:	eor	r2, r2, #1342177280	; 0x50000000
    9fcc:	orr	r2, r3, r2
    9fd0:	cmp	r2, #0
    9fd4:	bne	a084 <MyGame_Example_Monster_parse_json_table+0x2808>
    9fd8:	add	r4, r4, #8
    9fdc:	mov	r1, r5
    9fe0:	mov	r0, r4
    9fe4:	bl	590 <flatcc_json_parser_symbol_part>
    9fe8:	and	r0, r1, #-16777216	; 0xff000000
    9fec:	mov	ip, #0
    9ff0:	eor	r0, r0, #1694498816	; 0x65000000
    9ff4:	orr	r1, r0, ip
    9ff8:	cmp	r1, #0
    9ffc:	bne	a06c <MyGame_Example_Monster_parse_json_table+0x27f0>
    a000:	mov	r3, #1
    a004:	mov	r2, r5
    a008:	mov	r1, r4
    a00c:	mov	r0, r6
    a010:	bl	a5c <flatcc_json_parser_match_symbol>
    a014:	mov	r1, r0
    a018:	cmp	r4, r1
    a01c:	beq	a058 <MyGame_Example_Monster_parse_json_table+0x27dc>
    a020:	mov	r3, #0
    a024:	mov	r0, #8
    a028:	ldr	r9, [sp, #84]	; 0x54
    a02c:	ldr	ip, [pc, #3352]	; ad4c <MyGame_Example_Monster_parse_json_table+0x34d0>
    a030:	ldr	r2, [pc, #3368]	; ad60 <MyGame_Example_Monster_parse_json_table+0x34e4>
    a034:	str	r2, [sp, #12]
    a038:	str	ip, [sp, #8]
    a03c:	str	r9, [sp, #4]
    a040:	str	r0, [sp]
    a044:	mov	r2, r5
    a048:	mov	r0, r6
    a04c:	bl	0 <flatcc_json_parser_union_type>
    a050:	mov	r4, r0
    a054:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a058:	mov	r2, r5
    a05c:	mov	r0, r6
    a060:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a064:	mov	r4, r0
    a068:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a06c:	mov	r2, r5
    a070:	mov	r1, r4
    a074:	mov	r0, r6
    a078:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a07c:	mov	r4, r0
    a080:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a084:	mov	r2, r5
    a088:	mov	r1, r4
    a08c:	mov	r0, r6
    a090:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a094:	mov	r4, r0
    a098:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a09c:	mov	r0, fp
    a0a0:	mov	ip, sl
    a0a4:	movw	r1, #29285	; 0x7265
    a0a8:	movt	r1, #28769	; 0x7061
    a0ac:	cmp	r0, r1
    a0b0:	bne	a0c8 <MyGame_Example_Monster_parse_json_table+0x284c>
    a0b4:	movw	r2, #24430	; 0x5f6e
    a0b8:	movt	r2, #28276	; 0x6e74
    a0bc:	cmp	ip, r2
    a0c0:	bcc	a2e4 <MyGame_Example_Monster_parse_json_table+0x2a68>
    a0c4:	b	a0d8 <MyGame_Example_Monster_parse_json_table+0x285c>
    a0c8:	movw	r1, #29285	; 0x7265
    a0cc:	movt	r1, #28769	; 0x7061
    a0d0:	cmp	r0, r1
    a0d4:	bcc	a2e4 <MyGame_Example_Monster_parse_json_table+0x2a68>
    a0d8:	mov	r2, fp
    a0dc:	eor	ip, r2, #101	; 0x65
    a0e0:	eor	ip, ip, #29184	; 0x7200
    a0e4:	eor	ip, ip, #6356992	; 0x610000
    a0e8:	eor	ip, ip, #1879048192	; 0x70000000
    a0ec:	eor	r1, sl, #110	; 0x6e
    a0f0:	eor	r1, r1, #24320	; 0x5f00
    a0f4:	eor	r1, r1, #41156608	; 0x2740000
    a0f8:	eor	r1, r1, #1811939328	; 0x6c000000
    a0fc:	orr	ip, ip, r1
    a100:	cmp	ip, #0
    a104:	bne	a238 <MyGame_Example_Monster_parse_json_table+0x29bc>
    a108:	add	r4, r4, #8
    a10c:	mov	r1, r5
    a110:	mov	r0, r4
    a114:	bl	590 <flatcc_json_parser_symbol_part>
    a118:	eor	ip, r1, #115	; 0x73
    a11c:	eor	ip, ip, #25856	; 0x6500
    a120:	eor	ip, ip, #7143424	; 0x6d0000
    a124:	eor	ip, ip, #1627389952	; 0x61000000
    a128:	eor	r3, r0, #101	; 0x65
    a12c:	eor	r3, r3, #25344	; 0x6300
    a130:	eor	r3, r3, #6356992	; 0x610000
    a134:	eor	r3, r3, #1879048192	; 0x70000000
    a138:	orr	r3, ip, r3
    a13c:	cmp	r3, #0
    a140:	bne	a220 <MyGame_Example_Monster_parse_json_table+0x29a4>
    a144:	add	r4, r4, #8
    a148:	mov	r1, r5
    a14c:	mov	r0, r4
    a150:	bl	590 <flatcc_json_parser_symbol_part>
    a154:	and	r3, r0, #-16777216	; 0xff000000
    a158:	eor	r2, r1, #115	; 0x73
    a15c:	eor	r2, r2, #25856	; 0x6500
    a160:	eor	r2, r2, #57933824	; 0x3740000
    a164:	eor	r2, r2, #1543503872	; 0x5c000000
    a168:	eor	ip, r3, #1946157056	; 0x74000000
    a16c:	orr	r3, r2, ip
    a170:	cmp	r3, #0
    a174:	bne	a208 <MyGame_Example_Monster_parse_json_table+0x298c>
    a178:	mov	r1, r4
    a17c:	mov	r4, r1
    a180:	mov	r3, #5
    a184:	mov	r2, r5
    a188:	mov	r0, r6
    a18c:	bl	a5c <flatcc_json_parser_match_symbol>
    a190:	mov	r1, r0
    a194:	cmp	r4, r1
    a198:	beq	a1f4 <MyGame_Example_Monster_parse_json_table+0x2978>
    a19c:	add	r3, sp, #80	; 0x50
    a1a0:	mov	r2, r5
    a1a4:	mov	r0, r6
    a1a8:	bl	3010 <MyGame_InParentNamespace_parse_json_table>
    a1ac:	mov	r4, r0
    a1b0:	ldr	r2, [sp, #80]	; 0x50
    a1b4:	cmp	r2, #0
    a1b8:	beq	a1dc <MyGame_Example_Monster_parse_json_table+0x2960>
    a1bc:	ldr	r0, [r6]
    a1c0:	mov	r1, #34	; 0x22
    a1c4:	bl	0 <flatcc_builder_table_add_offset>
    a1c8:	mov	r7, r0
    a1cc:	cmp	r7, #0
    a1d0:	moveq	r1, #1
    a1d4:	movne	r1, #0
    a1d8:	b	a1e0 <MyGame_Example_Monster_parse_json_table+0x2964>
    a1dc:	mov	r1, #1
    a1e0:	cmp	r1, #0
    a1e4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a1e8:	ldr	ip, [sp, #80]	; 0x50
    a1ec:	str	ip, [r7]
    a1f0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a1f4:	mov	r2, r5
    a1f8:	mov	r0, r6
    a1fc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a200:	mov	r4, r0
    a204:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a208:	mov	r2, r5
    a20c:	mov	r1, r4
    a210:	mov	r0, r6
    a214:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a218:	mov	r4, r0
    a21c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a220:	mov	r2, r5
    a224:	mov	r1, r4
    a228:	mov	r0, r6
    a22c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a230:	mov	r4, r0
    a234:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a238:	bic	ip, fp, #255	; 0xff
    a23c:	mov	r3, #0
    a240:	eor	ip, ip, #29440	; 0x7300
    a244:	eor	ip, ip, #7274496	; 0x6f0000
    a248:	eor	ip, ip, #1879048192	; 0x70000000
    a24c:	orr	r2, ip, r3
    a250:	cmp	r2, #0
    a254:	bne	a2cc <MyGame_Example_Monster_parse_json_table+0x2a50>
    a258:	mov	r1, r4
    a25c:	mov	r9, r1
    a260:	mov	r3, #3
    a264:	mov	r2, r5
    a268:	mov	r0, r6
    a26c:	bl	a5c <flatcc_json_parser_match_symbol>
    a270:	mov	r4, r0
    a274:	cmp	r9, r4
    a278:	beq	a2b4 <MyGame_Example_Monster_parse_json_table+0x2a38>
    a27c:	ldr	r0, [r6]
    a280:	mov	r1, #0
    a284:	mov	r2, #32
    a288:	mov	r3, #16
    a28c:	bl	0 <flatcc_builder_table_add>
    a290:	cmp	r0, #0
    a294:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a298:	mov	r3, r0
    a29c:	mov	r2, r5
    a2a0:	mov	r1, r4
    a2a4:	mov	r0, r6
    a2a8:	bl	4b20 <MyGame_Example_Vec3_parse_json_struct_inline>
    a2ac:	mov	r4, r0
    a2b0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a2b4:	mov	r2, r5
    a2b8:	mov	r1, r4
    a2bc:	mov	r0, r6
    a2c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a2c4:	mov	r4, r0
    a2c8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a2cc:	mov	r2, r5
    a2d0:	mov	r1, r4
    a2d4:	mov	r0, r6
    a2d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a2dc:	mov	r4, r0
    a2e0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a2e4:	mov	r0, #0
    a2e8:	eor	r1, fp, #101	; 0x65
    a2ec:	eor	r1, r1, #27904	; 0x6d00
    a2f0:	eor	r1, r1, #6356992	; 0x610000
    a2f4:	eor	r1, r1, #1845493760	; 0x6e000000
    a2f8:	orr	r2, r1, r0
    a2fc:	cmp	r2, #0
    a300:	bne	a394 <MyGame_Example_Monster_parse_json_table+0x2b18>
    a304:	mov	r1, r4
    a308:	mov	r4, r1
    a30c:	mov	r3, #4
    a310:	mov	r2, r5
    a314:	mov	r0, r6
    a318:	bl	a5c <flatcc_json_parser_match_symbol>
    a31c:	mov	r1, r0
    a320:	cmp	r4, r1
    a324:	beq	a380 <MyGame_Example_Monster_parse_json_table+0x2b04>
    a328:	add	r3, sp, #80	; 0x50
    a32c:	mov	r2, r5
    a330:	mov	r0, r6
    a334:	bl	0 <flatcc_json_parser_build_string>
    a338:	mov	r4, r0
    a33c:	ldr	ip, [sp, #80]	; 0x50
    a340:	cmp	ip, #0
    a344:	beq	a368 <MyGame_Example_Monster_parse_json_table+0x2aec>
    a348:	ldr	r0, [r6]
    a34c:	mov	r1, #3
    a350:	bl	0 <flatcc_builder_table_add_offset>
    a354:	mov	r7, r0
    a358:	cmp	r7, #0
    a35c:	moveq	ip, #1
    a360:	movne	ip, #0
    a364:	b	a36c <MyGame_Example_Monster_parse_json_table+0x2af0>
    a368:	mov	ip, #1
    a36c:	cmp	ip, #0
    a370:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a374:	ldr	r3, [sp, #80]	; 0x50
    a378:	str	r3, [r7]
    a37c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a380:	mov	r2, r5
    a384:	mov	r0, r6
    a388:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a38c:	mov	r4, r0
    a390:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a394:	mov	r2, r5
    a398:	mov	r1, r4
    a39c:	mov	r0, r6
    a3a0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a3a4:	mov	r4, r0
    a3a8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a3ac:	mov	r3, fp
    a3b0:	movw	r1, #25976	; 0x6578
    a3b4:	movt	r1, #26220	; 0x666c
    a3b8:	cmp	r3, r1
    a3bc:	bne	a3d4 <MyGame_Example_Monster_parse_json_table+0x2b58>
    a3c0:	mov	r2, sl
    a3c4:	mov	r0, #0
    a3c8:	cmp	r2, r0
    a3cc:	bcc	aa88 <MyGame_Example_Monster_parse_json_table+0x320c>
    a3d0:	b	a3e8 <MyGame_Example_Monster_parse_json_table+0x2b6c>
    a3d4:	mov	r3, fp
    a3d8:	movw	ip, #25976	; 0x6578
    a3dc:	movt	ip, #26220	; 0x666c
    a3e0:	cmp	r3, ip
    a3e4:	bcc	aa88 <MyGame_Example_Monster_parse_json_table+0x320c>
    a3e8:	mov	r1, sl
    a3ec:	mov	r0, fp
    a3f0:	movw	r2, #0
    a3f4:	movt	r2, #26736	; 0x6870
    a3f8:	cmp	r0, r2
    a3fc:	bne	a410 <MyGame_Example_Monster_parse_json_table+0x2b94>
    a400:	mov	r0, #0
    a404:	cmp	r1, r0
    a408:	bcc	a8cc <MyGame_Example_Monster_parse_json_table+0x3050>
    a40c:	b	a424 <MyGame_Example_Monster_parse_json_table+0x2ba8>
    a410:	mov	r3, fp
    a414:	movw	r0, #0
    a418:	movt	r0, #26736	; 0x6870
    a41c:	cmp	r3, r0
    a420:	bcc	a8cc <MyGame_Example_Monster_parse_json_table+0x3050>
    a424:	mov	r3, sl
    a428:	mov	r2, fp
    a42c:	movw	ip, #30309	; 0x7665
    a430:	movt	ip, #26990	; 0x696e
    a434:	cmp	r2, ip
    a438:	bne	a450 <MyGame_Example_Monster_parse_json_table+0x2bd4>
    a43c:	movw	ip, #28530	; 0x6f72
    a440:	movt	ip, #28276	; 0x6e74
    a444:	cmp	r3, ip
    a448:	bcc	a78c <MyGame_Example_Monster_parse_json_table+0x2f10>
    a44c:	b	a464 <MyGame_Example_Monster_parse_json_table+0x2be8>
    a450:	mov	r2, fp
    a454:	movw	r3, #30309	; 0x7665
    a458:	movt	r3, #26990	; 0x696e
    a45c:	cmp	r2, r3
    a460:	bcc	a78c <MyGame_Example_Monster_parse_json_table+0x2f10>
    a464:	mov	r1, fp
    a468:	eor	r1, r1, #101	; 0x65
    a46c:	eor	r1, r1, #30208	; 0x7600
    a470:	eor	r1, r1, #7208960	; 0x6e0000
    a474:	eor	r1, r1, #1761607680	; 0x69000000
    a478:	eor	r2, sl, #114	; 0x72
    a47c:	eor	r2, r2, #28416	; 0x6f00
    a480:	eor	r2, r2, #41156608	; 0x2740000
    a484:	eor	r2, r2, #1811939328	; 0x6c000000
    a488:	orr	ip, r1, r2
    a48c:	cmp	ip, #0
    a490:	bne	a654 <MyGame_Example_Monster_parse_json_table+0x2dd8>
    a494:	add	r9, r4, #8
    a498:	mov	r1, r5
    a49c:	mov	r0, r9
    a4a0:	bl	590 <flatcc_json_parser_symbol_part>
    a4a4:	and	r3, r1, #-16777216	; 0xff000000
    a4a8:	mov	r2, #0
    a4ac:	eor	ip, r3, #2030043136	; 0x79000000
    a4b0:	orr	r1, ip, r2
    a4b4:	cmp	r1, #0
    a4b8:	bne	a63c <MyGame_Example_Monster_parse_json_table+0x2dc0>
    a4bc:	mov	r3, #1
    a4c0:	mov	r2, r5
    a4c4:	mov	r1, r9
    a4c8:	mov	r0, r6
    a4cc:	bl	a5c <flatcc_json_parser_match_symbol>
    a4d0:	mov	r4, r0
    a4d4:	cmp	r9, r4
    a4d8:	beq	a624 <MyGame_Example_Monster_parse_json_table+0x2da8>
    a4dc:	ldr	r0, [r6]
    a4e0:	mov	r1, #1
    a4e4:	mov	r2, #1
    a4e8:	mvn	r3, #0
    a4ec:	bl	0 <flatcc_builder_start_vector>
    a4f0:	cmp	r0, #0
    a4f4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a4f8:	add	r3, sp, #76	; 0x4c
    a4fc:	mov	r2, r5
    a500:	mov	r1, r4
    a504:	mov	r0, r6
    a508:	bl	854 <flatcc_json_parser_array_start>
    a50c:	mov	r4, r0
    a510:	ldr	r1, [sp, #76]	; 0x4c
    a514:	cmp	r1, #0
    a518:	beq	a5d4 <MyGame_Example_Monster_parse_json_table+0x2d58>
    a51c:	mov	r0, #0
    a520:	strb	r0, [sp, #59]	; 0x3b
    a524:	ldr	r0, [r6]
    a528:	mov	r1, #1
    a52c:	bl	0 <flatcc_builder_extend_vector>
    a530:	mov	sl, r0
    a534:	cmp	sl, #0
    a538:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a53c:	mov	r9, r4
    a540:	add	r3, sp, #59	; 0x3b
    a544:	mov	r2, r5
    a548:	mov	r1, r4
    a54c:	mov	r0, r6
    a550:	bl	153c <flatcc_json_parser_uint8>
    a554:	mov	r4, r0
    a558:	cmp	r9, r4
    a55c:	bne	a5a8 <MyGame_Example_Monster_parse_json_table+0x2d2c>
    a560:	mov	r9, r4
    a564:	ldr	r3, [pc, #2020]	; ad50 <MyGame_Example_Monster_parse_json_table+0x34d4>
    a568:	add	r0, sp, #59	; 0x3b
    a56c:	str	r0, [sp]
    a570:	mov	r2, r5
    a574:	mov	r1, r4
    a578:	mov	r0, r6
    a57c:	bl	1fb8 <flatcc_json_parser_symbolic_uint8>
    a580:	mov	r4, r0
    a584:	cmp	r4, r9
    a588:	beq	a59c <MyGame_Example_Monster_parse_json_table+0x2d20>
    a58c:	cmp	r4, r5
    a590:	moveq	r3, #1
    a594:	movne	r3, #0
    a598:	b	a5a0 <MyGame_Example_Monster_parse_json_table+0x2d24>
    a59c:	mov	r3, #1
    a5a0:	cmp	r3, #0
    a5a4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a5a8:	ldrb	ip, [sp, #59]	; 0x3b
    a5ac:	and	r1, ip, #255	; 0xff
    a5b0:	mov	r0, sl
    a5b4:	bl	20 <flatbuffers_uint8_write_to_pe>
    a5b8:	add	r3, sp, #76	; 0x4c
    a5bc:	mov	r2, r5
    a5c0:	mov	r1, r4
    a5c4:	mov	r0, r6
    a5c8:	bl	934 <flatcc_json_parser_array_end>
    a5cc:	mov	r4, r0
    a5d0:	b	a510 <MyGame_Example_Monster_parse_json_table+0x2c94>
    a5d4:	ldr	r0, [r6]
    a5d8:	bl	0 <flatcc_builder_end_vector>
    a5dc:	str	r0, [sp, #80]	; 0x50
    a5e0:	ldr	r0, [sp, #80]	; 0x50
    a5e4:	cmp	r0, #0
    a5e8:	beq	a60c <MyGame_Example_Monster_parse_json_table+0x2d90>
    a5ec:	ldr	r0, [r6]
    a5f0:	mov	r1, #5
    a5f4:	bl	0 <flatcc_builder_table_add_offset>
    a5f8:	mov	r7, r0
    a5fc:	cmp	r7, #0
    a600:	moveq	r3, #1
    a604:	movne	r3, #0
    a608:	b	a610 <MyGame_Example_Monster_parse_json_table+0x2d94>
    a60c:	mov	r3, #1
    a610:	cmp	r3, #0
    a614:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a618:	ldr	ip, [sp, #80]	; 0x50
    a61c:	str	ip, [r7]
    a620:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a624:	mov	r2, r5
    a628:	mov	r1, r4
    a62c:	mov	r0, r6
    a630:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a634:	mov	r4, r0
    a638:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a63c:	mov	r2, r5
    a640:	mov	r1, r9
    a644:	mov	r0, r6
    a648:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a64c:	mov	r4, r0
    a650:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a654:	mov	r1, #0
    a658:	eor	r0, fp, #97	; 0x61
    a65c:	eor	r0, r0, #28160	; 0x6e00
    a660:	eor	r0, r0, #6356992	; 0x610000
    a664:	eor	r0, r0, #1828716544	; 0x6d000000
    a668:	orr	r3, r0, r1
    a66c:	cmp	r3, #0
    a670:	bne	a774 <MyGame_Example_Monster_parse_json_table+0x2ef8>
    a674:	mov	r3, #4
    a678:	mov	r2, r5
    a67c:	mov	r1, r4
    a680:	mov	r0, r6
    a684:	bl	a5c <flatcc_json_parser_match_symbol>
    a688:	mov	r1, r0
    a68c:	cmp	r4, r1
    a690:	beq	a760 <MyGame_Example_Monster_parse_json_table+0x2ee4>
    a694:	mov	r3, #0
    a698:	strh	r3, [sp, #64]	; 0x40
    a69c:	mov	r9, r1
    a6a0:	add	r3, sp, #64	; 0x40
    a6a4:	mov	r2, r5
    a6a8:	mov	r0, r6
    a6ac:	bl	1790 <flatcc_json_parser_int16>
    a6b0:	mov	r4, r0
    a6b4:	cmp	r9, r4
    a6b8:	bne	a704 <MyGame_Example_Monster_parse_json_table+0x2e88>
    a6bc:	mov	r9, r4
    a6c0:	ldr	r3, [pc, #1680]	; ad58 <MyGame_Example_Monster_parse_json_table+0x34dc>
    a6c4:	add	r0, sp, #64	; 0x40
    a6c8:	str	r0, [sp]
    a6cc:	mov	r2, r5
    a6d0:	mov	r1, r4
    a6d4:	mov	r0, r6
    a6d8:	bl	2544 <flatcc_json_parser_symbolic_int16>
    a6dc:	mov	r4, r0
    a6e0:	cmp	r4, r9
    a6e4:	beq	a6f8 <MyGame_Example_Monster_parse_json_table+0x2e7c>
    a6e8:	cmp	r4, r5
    a6ec:	moveq	r0, #1
    a6f0:	movne	r0, #0
    a6f4:	b	a6fc <MyGame_Example_Monster_parse_json_table+0x2e80>
    a6f8:	mov	r0, #1
    a6fc:	cmp	r0, #0
    a700:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a704:	ldrsh	r3, [sp, #64]	; 0x40
    a708:	cmp	r3, #150	; 0x96
    a70c:	bne	a728 <MyGame_Example_Monster_parse_json_table+0x2eac>
    a710:	ldr	r1, [r6, #8]
    a714:	and	r0, r1, #2
    a718:	cmp	r0, #0
    a71c:	movne	ip, #1
    a720:	moveq	ip, #0
    a724:	b	a72c <MyGame_Example_Monster_parse_json_table+0x2eb0>
    a728:	mov	ip, #1
    a72c:	cmp	ip, #0
    a730:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a734:	ldr	r0, [r6]
    a738:	mov	r1, #1
    a73c:	mov	r2, #2
    a740:	mov	r3, #2
    a744:	bl	0 <flatcc_builder_table_add>
    a748:	cmp	r0, #0
    a74c:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a750:	ldrsh	r2, [sp, #64]	; 0x40
    a754:	sbfx	r1, r2, #0, #16
    a758:	bl	1f0 <flatbuffers_int16_write_to_pe>
    a75c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a760:	mov	r2, r5
    a764:	mov	r0, r6
    a768:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a76c:	mov	r4, r0
    a770:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a774:	mov	r2, r5
    a778:	mov	r1, r4
    a77c:	mov	r0, r6
    a780:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a784:	mov	r4, r0
    a788:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a78c:	bic	r1, fp, #255	; 0xff
    a790:	bic	r1, r1, #65280	; 0xff00
    a794:	mov	r0, #0
    a798:	eor	r1, r1, #141557760	; 0x8700000
    a79c:	eor	r1, r1, #1610612736	; 0x60000000
    a7a0:	orr	ip, r1, r0
    a7a4:	cmp	ip, #0
    a7a8:	bne	a8b4 <MyGame_Example_Monster_parse_json_table+0x3038>
    a7ac:	mov	r1, r4
    a7b0:	mov	r4, r1
    a7b4:	mov	r3, #2
    a7b8:	mov	r2, r5
    a7bc:	mov	r0, r6
    a7c0:	bl	a5c <flatcc_json_parser_match_symbol>
    a7c4:	cmp	r4, r0
    a7c8:	beq	a89c <MyGame_Example_Monster_parse_json_table+0x3020>
    a7cc:	mov	ip, #0
    a7d0:	strh	ip, [sp, #62]	; 0x3e
    a7d4:	mov	r1, r0
    a7d8:	mov	r9, r1
    a7dc:	add	r3, sp, #62	; 0x3e
    a7e0:	mov	r2, r5
    a7e4:	mov	r0, r6
    a7e8:	bl	1790 <flatcc_json_parser_int16>
    a7ec:	mov	r4, r0
    a7f0:	cmp	r9, r4
    a7f4:	bne	a840 <MyGame_Example_Monster_parse_json_table+0x2fc4>
    a7f8:	mov	r9, r4
    a7fc:	ldr	r3, [pc, #1368]	; ad5c <MyGame_Example_Monster_parse_json_table+0x34e0>
    a800:	add	r0, sp, #62	; 0x3e
    a804:	str	r0, [sp]
    a808:	mov	r2, r5
    a80c:	mov	r1, r9
    a810:	mov	r0, r6
    a814:	bl	2544 <flatcc_json_parser_symbolic_int16>
    a818:	mov	r4, r0
    a81c:	cmp	r4, r9
    a820:	beq	a834 <MyGame_Example_Monster_parse_json_table+0x2fb8>
    a824:	cmp	r4, r5
    a828:	moveq	r2, #1
    a82c:	movne	r2, #0
    a830:	b	a838 <MyGame_Example_Monster_parse_json_table+0x2fbc>
    a834:	mov	r2, #1
    a838:	cmp	r2, #0
    a83c:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a840:	ldrsh	ip, [sp, #62]	; 0x3e
    a844:	cmp	ip, #100	; 0x64
    a848:	bne	a864 <MyGame_Example_Monster_parse_json_table+0x2fe8>
    a84c:	ldr	r3, [r6, #8]
    a850:	and	r3, r3, #2
    a854:	cmp	r3, #0
    a858:	movne	r3, #1
    a85c:	moveq	r3, #0
    a860:	b	a868 <MyGame_Example_Monster_parse_json_table+0x2fec>
    a864:	mov	r3, #1
    a868:	cmp	r3, #0
    a86c:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a870:	ldr	r0, [r6]
    a874:	mov	r1, #2
    a878:	mov	r2, #2
    a87c:	mov	r3, #2
    a880:	bl	0 <flatcc_builder_table_add>
    a884:	cmp	r0, #0
    a888:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a88c:	ldrsh	r1, [sp, #62]	; 0x3e
    a890:	sbfx	r1, r1, #0, #16
    a894:	bl	1f0 <flatbuffers_int16_write_to_pe>
    a898:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a89c:	mov	r2, r5
    a8a0:	mov	r1, r0
    a8a4:	mov	r0, r6
    a8a8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a8ac:	mov	r4, r0
    a8b0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a8b4:	mov	r2, r5
    a8b8:	mov	r1, r4
    a8bc:	mov	r0, r6
    a8c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    a8c4:	mov	r4, r0
    a8c8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    a8cc:	mov	r2, #0
    a8d0:	eor	r1, fp, #376	; 0x178
    a8d4:	eor	r1, r1, #25600	; 0x6400
    a8d8:	eor	r1, r1, #40632320	; 0x26c0000
    a8dc:	eor	r1, r1, #1677721600	; 0x64000000
    a8e0:	orr	r1, r1, r2
    a8e4:	cmp	r1, #0
    a8e8:	bne	aa70 <MyGame_Example_Monster_parse_json_table+0x31f4>
    a8ec:	mov	r9, r4
    a8f0:	mov	r3, #4
    a8f4:	mov	r2, r5
    a8f8:	mov	r1, r9
    a8fc:	mov	r0, r6
    a900:	bl	a5c <flatcc_json_parser_match_symbol>
    a904:	mov	r4, r0
    a908:	cmp	r9, r4
    a90c:	beq	aa58 <MyGame_Example_Monster_parse_json_table+0x31dc>
    a910:	ldr	r0, [r6]
    a914:	mov	r1, #1
    a918:	mov	r2, #1
    a91c:	mvn	r3, #0
    a920:	bl	0 <flatcc_builder_start_vector>
    a924:	cmp	r0, #0
    a928:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a92c:	add	r3, sp, #76	; 0x4c
    a930:	mov	r2, r5
    a934:	mov	r1, r4
    a938:	mov	r0, r6
    a93c:	bl	854 <flatcc_json_parser_array_start>
    a940:	mov	r4, r0
    a944:	ldr	r0, [sp, #76]	; 0x4c
    a948:	cmp	r0, #0
    a94c:	beq	aa08 <MyGame_Example_Monster_parse_json_table+0x318c>
    a950:	mov	r1, #0
    a954:	strb	r1, [sp, #58]	; 0x3a
    a958:	ldr	r0, [r6]
    a95c:	mov	r1, #1
    a960:	bl	0 <flatcc_builder_extend_vector>
    a964:	mov	sl, r0
    a968:	cmp	r0, #0
    a96c:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a970:	mov	r1, r4
    a974:	mov	r9, r1
    a978:	add	r3, sp, #58	; 0x3a
    a97c:	mov	r2, r5
    a980:	mov	r0, r6
    a984:	bl	153c <flatcc_json_parser_uint8>
    a988:	mov	r4, r0
    a98c:	cmp	r9, r4
    a990:	bne	a9dc <MyGame_Example_Monster_parse_json_table+0x3160>
    a994:	mov	r9, r4
    a998:	ldr	r3, [pc, #964]	; ad64 <MyGame_Example_Monster_parse_json_table+0x34e8>
    a99c:	add	r0, sp, #58	; 0x3a
    a9a0:	str	r0, [sp]
    a9a4:	mov	r2, r5
    a9a8:	mov	r1, r9
    a9ac:	mov	r0, r6
    a9b0:	bl	1fb8 <flatcc_json_parser_symbolic_uint8>
    a9b4:	mov	r4, r0
    a9b8:	cmp	r4, r9
    a9bc:	beq	a9d0 <MyGame_Example_Monster_parse_json_table+0x3154>
    a9c0:	cmp	r4, r5
    a9c4:	moveq	r3, #1
    a9c8:	movne	r3, #0
    a9cc:	b	a9d4 <MyGame_Example_Monster_parse_json_table+0x3158>
    a9d0:	mov	r3, #1
    a9d4:	cmp	r3, #0
    a9d8:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    a9dc:	ldrb	r2, [sp, #58]	; 0x3a
    a9e0:	and	r1, r2, #255	; 0xff
    a9e4:	mov	r0, sl
    a9e8:	bl	20 <flatbuffers_uint8_write_to_pe>
    a9ec:	add	r3, sp, #76	; 0x4c
    a9f0:	mov	r2, r5
    a9f4:	mov	r1, r4
    a9f8:	mov	r0, r6
    a9fc:	bl	934 <flatcc_json_parser_array_end>
    aa00:	mov	r4, r0
    aa04:	b	a944 <MyGame_Example_Monster_parse_json_table+0x30c8>
    aa08:	ldr	r0, [r6]
    aa0c:	bl	0 <flatcc_builder_end_vector>
    aa10:	str	r0, [sp, #80]	; 0x50
    aa14:	ldr	r0, [sp, #80]	; 0x50
    aa18:	cmp	r0, #0
    aa1c:	beq	aa40 <MyGame_Example_Monster_parse_json_table+0x31c4>
    aa20:	ldr	r0, [r6]
    aa24:	mov	r1, #30
    aa28:	bl	0 <flatcc_builder_table_add_offset>
    aa2c:	mov	r7, r0
    aa30:	cmp	r7, #0
    aa34:	moveq	r2, #1
    aa38:	movne	r2, #0
    aa3c:	b	aa44 <MyGame_Example_Monster_parse_json_table+0x31c8>
    aa40:	mov	r2, #1
    aa44:	cmp	r2, #0
    aa48:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    aa4c:	ldr	ip, [sp, #80]	; 0x50
    aa50:	str	ip, [r7]
    aa54:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    aa58:	mov	r2, r5
    aa5c:	mov	r1, r4
    aa60:	mov	r0, r6
    aa64:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa68:	mov	r4, r0
    aa6c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    aa70:	mov	r2, r5
    aa74:	mov	r1, r4
    aa78:	mov	r0, r6
    aa7c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    aa80:	mov	r4, r0
    aa84:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    aa88:	mov	r1, fp
    aa8c:	mov	r0, sl
    aa90:	and	r0, r0, #-16777216	; 0xff000000
    aa94:	eor	r1, r1, #109	; 0x6d
    aa98:	eor	r1, r1, #25856	; 0x6500
    aa9c:	eor	r1, r1, #7208960	; 0x6e0000
    aaa0:	eor	r1, r1, #1694498816	; 0x65000000
    aaa4:	eor	r2, r0, #2030043136	; 0x79000000
    aaa8:	orr	r1, r1, r2
    aaac:	cmp	r1, #0
    aab0:	beq	abf4 <MyGame_Example_Monster_parse_json_table+0x3378>
    aab4:	and	r0, sl, #-16777216	; 0xff000000
    aab8:	eor	r1, fp, #111	; 0x6f
    aabc:	eor	r1, r1, #224256	; 0x36c00
    aac0:	eor	r1, r1, #57409536	; 0x36c0000
    aac4:	eor	r1, r1, #1610612736	; 0x60000000
    aac8:	eor	r3, r0, #1912602624	; 0x72000000
    aacc:	orr	r3, r1, r3
    aad0:	cmp	r3, #0
    aad4:	bne	abdc <MyGame_Example_Monster_parse_json_table+0x3360>
    aad8:	mov	r3, #5
    aadc:	mov	r2, r5
    aae0:	mov	r1, r4
    aae4:	mov	r0, r6
    aae8:	bl	a5c <flatcc_json_parser_match_symbol>
    aaec:	mov	r1, r0
    aaf0:	cmp	r4, r1
    aaf4:	beq	abc8 <MyGame_Example_Monster_parse_json_table+0x334c>
    aaf8:	mov	r0, #0
    aafc:	strb	r0, [sp, #57]	; 0x39
    ab00:	mov	r9, r1
    ab04:	add	r3, sp, #57	; 0x39
    ab08:	mov	r2, r5
    ab0c:	mov	r1, r9
    ab10:	mov	r0, r6
    ab14:	bl	1854 <flatcc_json_parser_int8>
    ab18:	mov	r4, r0
    ab1c:	cmp	r9, r4
    ab20:	bne	ab6c <MyGame_Example_Monster_parse_json_table+0x32f0>
    ab24:	mov	r9, r4
    ab28:	ldr	r3, [pc, #548]	; ad54 <MyGame_Example_Monster_parse_json_table+0x34d8>
    ab2c:	add	ip, sp, #57	; 0x39
    ab30:	str	ip, [sp]
    ab34:	mov	r2, r5
    ab38:	mov	r1, r9
    ab3c:	mov	r0, r6
    ab40:	bl	2714 <flatcc_json_parser_symbolic_int8>
    ab44:	mov	r4, r0
    ab48:	cmp	r4, r9
    ab4c:	beq	ab60 <MyGame_Example_Monster_parse_json_table+0x32e4>
    ab50:	cmp	r4, r5
    ab54:	moveq	ip, #1
    ab58:	movne	ip, #0
    ab5c:	b	ab64 <MyGame_Example_Monster_parse_json_table+0x32e8>
    ab60:	mov	ip, #1
    ab64:	cmp	ip, #0
    ab68:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    ab6c:	ldrsb	r0, [sp, #57]	; 0x39
    ab70:	cmp	r0, #8
    ab74:	bne	ab90 <MyGame_Example_Monster_parse_json_table+0x3314>
    ab78:	ldr	r2, [r6, #8]
    ab7c:	and	r3, r2, #2
    ab80:	cmp	r3, #0
    ab84:	movne	r2, #1
    ab88:	moveq	r2, #0
    ab8c:	b	ab94 <MyGame_Example_Monster_parse_json_table+0x3318>
    ab90:	mov	r2, #1
    ab94:	cmp	r2, #0
    ab98:	beq	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    ab9c:	ldr	r0, [r6]
    aba0:	mov	r1, #6
    aba4:	mov	r2, #1
    aba8:	mov	r3, #1
    abac:	bl	0 <flatcc_builder_table_add>
    abb0:	cmp	r0, #0
    abb4:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    abb8:	ldrsb	r1, [sp, #57]	; 0x39
    abbc:	sbfx	r1, r1, #0, #8
    abc0:	bl	18c <flatbuffers_int8_write_to_pe>
    abc4:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    abc8:	mov	r2, r5
    abcc:	mov	r0, r6
    abd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abd4:	mov	r4, r0
    abd8:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    abdc:	mov	r2, r5
    abe0:	mov	r1, r4
    abe4:	mov	r0, r6
    abe8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    abec:	mov	r4, r0
    abf0:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    abf4:	mov	r1, r4
    abf8:	mov	r4, r1
    abfc:	mov	r3, #5
    ac00:	mov	r2, r5
    ac04:	mov	r0, r6
    ac08:	bl	a5c <flatcc_json_parser_match_symbol>
    ac0c:	mov	r1, r0
    ac10:	cmp	r4, r1
    ac14:	beq	ac70 <MyGame_Example_Monster_parse_json_table+0x33f4>
    ac18:	add	r3, sp, #80	; 0x50
    ac1c:	mov	r2, r5
    ac20:	mov	r0, r6
    ac24:	bl	787c <MyGame_Example_Monster_parse_json_table>
    ac28:	mov	r4, r0
    ac2c:	ldr	r0, [sp, #80]	; 0x50
    ac30:	cmp	r0, #0
    ac34:	beq	ac58 <MyGame_Example_Monster_parse_json_table+0x33dc>
    ac38:	ldr	r0, [r6]
    ac3c:	mov	r1, #12
    ac40:	bl	0 <flatcc_builder_table_add_offset>
    ac44:	mov	r7, r0
    ac48:	cmp	r7, #0
    ac4c:	moveq	ip, #1
    ac50:	movne	ip, #0
    ac54:	b	ac5c <MyGame_Example_Monster_parse_json_table+0x33e0>
    ac58:	mov	ip, #1
    ac5c:	cmp	ip, #0
    ac60:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    ac64:	ldr	r3, [sp, #80]	; 0x50
    ac68:	str	r3, [r7]
    ac6c:	b	ac80 <MyGame_Example_Monster_parse_json_table+0x3404>
    ac70:	mov	r2, r5
    ac74:	mov	r0, r6
    ac78:	bl	0 <flatcc_json_parser_unmatched_symbol>
    ac7c:	mov	r4, r0
    ac80:	add	r3, sp, #76	; 0x4c
    ac84:	mov	r2, r5
    ac88:	mov	r1, r4
    ac8c:	mov	r0, r6
    ac90:	bl	72c <flatcc_json_parser_object_end>
    ac94:	mov	r4, r0
    ac98:	b	7914 <MyGame_Example_Monster_parse_json_table+0x98>
    ac9c:	ldr	r1, [r6, #24]
    aca0:	cmp	r1, #0
    aca4:	bne	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    aca8:	ldr	r0, [r6]
    acac:	mov	r1, #3
    acb0:	bl	0 <flatcc_builder_check_required_field>
    acb4:	cmp	r0, #0
    acb8:	bne	acd8 <MyGame_Example_Monster_parse_json_table+0x345c>
    acbc:	mov	r3, #29
    acc0:	mov	r2, r5
    acc4:	mov	r1, r4
    acc8:	mov	r0, r6
    accc:	bl	0 <flatcc_json_parser_set_error>
    acd0:	mov	r4, r0
    acd4:	b	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    acd8:	ldr	r3, [sp, #84]	; 0x54
    acdc:	mov	r2, r5
    ace0:	mov	r1, r4
    ace4:	mov	r0, r6
    ace8:	bl	0 <flatcc_json_parser_finalize_unions>
    acec:	mov	r4, r0
    acf0:	ldr	r0, [r6]
    acf4:	bl	0 <flatcc_builder_end_table>
    acf8:	str	r0, [r8]
    acfc:	cmp	r0, #0
    ad00:	beq	ad0c <MyGame_Example_Monster_parse_json_table+0x3490>
    ad04:	mov	r0, r4
    ad08:	b	ad20 <MyGame_Example_Monster_parse_json_table+0x34a4>
    ad0c:	mov	r3, #33	; 0x21
    ad10:	mov	r2, r5
    ad14:	mov	r1, r4
    ad18:	mov	r0, r6
    ad1c:	bl	0 <flatcc_json_parser_set_error>
    ad20:	ldr	r4, [sp, #24]
    ad24:	ldr	r5, [sp, #28]
    ad28:	ldr	r6, [sp, #32]
    ad2c:	ldr	r7, [sp, #36]	; 0x24
    ad30:	ldr	r8, [sp, #40]	; 0x28
    ad34:	ldr	r9, [sp, #44]	; 0x2c
    ad38:	ldr	sl, [sp, #48]	; 0x30
    ad3c:	ldr	fp, [sp, #52]	; 0x34
    ad40:	ldr	lr, [sp, #20]
    ad44:	add	sp, sp, #160	; 0xa0
    ad48:	bx	lr
    ad4c:	.word	0x00000188
    ad50:	.word	0x00000170
    ad54:	.word	0x00000148
    ad58:	.word	0x0000017c
    ad5c:	.word	0x00000164
    ad60:	.word	0x00000000
    ad64:	.word	0x00000158

0000ad68 <Fantasy_Attacker_parse_json_table>:
    ad68:	mov	ip, sp
    ad6c:	sub	sp, sp, #48	; 0x30
    ad70:	str	ip, [sp, #4]
    ad74:	str	lr, [sp, #8]
    ad78:	str	r4, [sp, #16]
    ad7c:	str	r5, [sp, #20]
    ad80:	str	r6, [sp, #24]
    ad84:	str	r7, [sp, #28]
    ad88:	str	r8, [sp, #32]
    ad8c:	mov	r8, r3
    ad90:	mov	r5, r2
    ad94:	mov	r4, r1
    ad98:	mov	r6, r0
    ad9c:	mov	r3, #0
    ada0:	str	r3, [r8]
    ada4:	ldr	r0, [r6]
    ada8:	mov	r1, #1
    adac:	bl	0 <flatcc_builder_start_table>
    adb0:	cmp	r0, #0
    adb4:	bne	b01c <Fantasy_Attacker_parse_json_table+0x2b4>
    adb8:	add	r3, sp, #40	; 0x28
    adbc:	mov	r2, r5
    adc0:	mov	r1, r4
    adc4:	mov	r0, r6
    adc8:	bl	64c <flatcc_json_parser_object_start>
    adcc:	mov	r4, r0
    add0:	ldr	r3, [sp, #40]	; 0x28
    add4:	cmp	r3, #0
    add8:	beq	aff4 <Fantasy_Attacker_parse_json_table+0x28c>
    addc:	mov	r2, r5
    ade0:	mov	r1, r4
    ade4:	mov	r0, r6
    ade8:	bl	460 <flatcc_json_parser_symbol_start>
    adec:	mov	r4, r0
    adf0:	mov	r1, r5
    adf4:	mov	r0, r4
    adf8:	bl	590 <flatcc_json_parser_symbol_part>
    adfc:	eor	r2, r1, #114	; 0x72
    ae00:	eor	r2, r2, #28416	; 0x6f00
    ae04:	eor	r2, r2, #7798784	; 0x770000
    ae08:	eor	r2, r2, #1929379840	; 0x73000000
    ae0c:	eor	r1, r0, #372	; 0x174
    ae10:	eor	r1, r1, #1007616	; 0xf6000
    ae14:	eor	r1, r1, #72351744	; 0x4500000
    ae18:	eor	r1, r1, #1610612736	; 0x60000000
    ae1c:	orr	r3, r2, r1
    ae20:	cmp	r3, #0
    ae24:	bne	afc4 <Fantasy_Attacker_parse_json_table+0x25c>
    ae28:	add	r4, r4, #8
    ae2c:	mov	r1, r5
    ae30:	mov	r0, r4
    ae34:	bl	590 <flatcc_json_parser_symbol_part>
    ae38:	eor	r1, r1, #107	; 0x6b
    ae3c:	eor	r1, r1, #25344	; 0x6300
    ae40:	eor	r1, r1, #6356992	; 0x610000
    ae44:	eor	r1, r1, #1946157056	; 0x74000000
    ae48:	eor	r2, r0, #109	; 0x6d
    ae4c:	eor	r2, r2, #24832	; 0x6100
    ae50:	eor	r2, r2, #56885248	; 0x3640000
    ae54:	eor	r2, r2, #1543503872	; 0x5c000000
    ae58:	orr	r2, r1, r2
    ae5c:	cmp	r2, #0
    ae60:	bne	afac <Fantasy_Attacker_parse_json_table+0x244>
    ae64:	add	r4, r4, #8
    ae68:	mov	r1, r5
    ae6c:	mov	r0, r4
    ae70:	bl	590 <flatcc_json_parser_symbol_part>
    ae74:	bic	r3, r1, #255	; 0xff
    ae78:	mov	r0, #0
    ae7c:	eor	ip, r3, #25856	; 0x6500
    ae80:	eor	ip, ip, #6750208	; 0x670000
    ae84:	eor	ip, ip, #1627389952	; 0x61000000
    ae88:	orr	r3, ip, r0
    ae8c:	cmp	r3, #0
    ae90:	bne	af94 <Fantasy_Attacker_parse_json_table+0x22c>
    ae94:	mov	r1, r4
    ae98:	mov	r4, r1
    ae9c:	mov	r3, #3
    aea0:	mov	r2, r5
    aea4:	mov	r0, r6
    aea8:	bl	a5c <flatcc_json_parser_match_symbol>
    aeac:	mov	r1, r0
    aeb0:	cmp	r4, r1
    aeb4:	beq	af80 <Fantasy_Attacker_parse_json_table+0x218>
    aeb8:	mov	r2, #0
    aebc:	str	r2, [sp, #44]	; 0x2c
    aec0:	mov	r7, r1
    aec4:	add	r3, sp, #44	; 0x2c
    aec8:	mov	r2, r5
    aecc:	mov	r0, r6
    aed0:	bl	16cc <flatcc_json_parser_int32>
    aed4:	mov	r4, r0
    aed8:	cmp	r7, r4
    aedc:	bne	af28 <Fantasy_Attacker_parse_json_table+0x1c0>
    aee0:	mov	r7, r4
    aee4:	ldr	r3, [pc, #356]	; b050 <Fantasy_Attacker_parse_json_table+0x2e8>
    aee8:	add	ip, sp, #44	; 0x2c
    aeec:	str	ip, [sp]
    aef0:	mov	r2, r5
    aef4:	mov	r1, r7
    aef8:	mov	r0, r6
    aefc:	bl	2378 <flatcc_json_parser_symbolic_int32>
    af00:	mov	r4, r0
    af04:	cmp	r4, r7
    af08:	beq	af1c <Fantasy_Attacker_parse_json_table+0x1b4>
    af0c:	cmp	r4, r5
    af10:	moveq	r0, #1
    af14:	movne	r0, #0
    af18:	b	af20 <Fantasy_Attacker_parse_json_table+0x1b8>
    af1c:	mov	r0, #1
    af20:	cmp	r0, #0
    af24:	bne	b01c <Fantasy_Attacker_parse_json_table+0x2b4>
    af28:	ldr	r0, [sp, #44]	; 0x2c
    af2c:	cmp	r0, #0
    af30:	bne	af4c <Fantasy_Attacker_parse_json_table+0x1e4>
    af34:	ldr	ip, [r6, #8]
    af38:	and	r2, ip, #2
    af3c:	cmp	r2, #0
    af40:	movne	r1, #1
    af44:	moveq	r1, #0
    af48:	b	af50 <Fantasy_Attacker_parse_json_table+0x1e8>
    af4c:	mov	r1, #1
    af50:	cmp	r1, #0
    af54:	beq	afd8 <Fantasy_Attacker_parse_json_table+0x270>
    af58:	ldr	r0, [r6]
    af5c:	mov	r1, #0
    af60:	mov	r2, #4
    af64:	mov	r3, #4
    af68:	bl	0 <flatcc_builder_table_add>
    af6c:	cmp	r0, #0
    af70:	beq	b01c <Fantasy_Attacker_parse_json_table+0x2b4>
    af74:	ldr	r1, [sp, #44]	; 0x2c
    af78:	bl	244 <flatbuffers_int32_write_to_pe>
    af7c:	b	afd8 <Fantasy_Attacker_parse_json_table+0x270>
    af80:	mov	r2, r5
    af84:	mov	r0, r6
    af88:	bl	0 <flatcc_json_parser_unmatched_symbol>
    af8c:	mov	r4, r0
    af90:	b	afd8 <Fantasy_Attacker_parse_json_table+0x270>
    af94:	mov	r2, r5
    af98:	mov	r1, r4
    af9c:	mov	r0, r6
    afa0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    afa4:	mov	r4, r0
    afa8:	b	afd8 <Fantasy_Attacker_parse_json_table+0x270>
    afac:	mov	r2, r5
    afb0:	mov	r1, r4
    afb4:	mov	r0, r6
    afb8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    afbc:	mov	r4, r0
    afc0:	b	afd8 <Fantasy_Attacker_parse_json_table+0x270>
    afc4:	mov	r2, r5
    afc8:	mov	r1, r4
    afcc:	mov	r0, r6
    afd0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    afd4:	mov	r4, r0
    afd8:	add	r3, sp, #40	; 0x28
    afdc:	mov	r2, r5
    afe0:	mov	r1, r4
    afe4:	mov	r0, r6
    afe8:	bl	72c <flatcc_json_parser_object_end>
    afec:	mov	r4, r0
    aff0:	b	add0 <Fantasy_Attacker_parse_json_table+0x68>
    aff4:	ldr	r2, [r6, #24]
    aff8:	cmp	r2, #0
    affc:	bne	b01c <Fantasy_Attacker_parse_json_table+0x2b4>
    b000:	ldr	r0, [r6]
    b004:	bl	0 <flatcc_builder_end_table>
    b008:	str	r0, [r8]
    b00c:	cmp	r0, #0
    b010:	beq	b01c <Fantasy_Attacker_parse_json_table+0x2b4>
    b014:	mov	r0, r4
    b018:	b	b030 <Fantasy_Attacker_parse_json_table+0x2c8>
    b01c:	mov	r3, #33	; 0x21
    b020:	mov	r2, r5
    b024:	mov	r1, r4
    b028:	mov	r0, r6
    b02c:	bl	0 <flatcc_json_parser_set_error>
    b030:	ldr	r4, [sp, #16]
    b034:	ldr	r5, [sp, #20]
    b038:	ldr	r6, [sp, #24]
    b03c:	ldr	r7, [sp, #28]
    b040:	ldr	r8, [sp, #32]
    b044:	ldr	lr, [sp, #8]
    b048:	add	sp, sp, #48	; 0x30
    b04c:	bx	lr
    b050:	.word	0x00000258

0000b054 <Fantasy_Rapunzel_parse_json_struct_inline>:
    b054:	mov	ip, sp
    b058:	sub	sp, sp, #48	; 0x30
    b05c:	str	ip, [sp, #4]
    b060:	str	lr, [sp, #8]
    b064:	str	r4, [sp, #16]
    b068:	str	r5, [sp, #20]
    b06c:	str	r6, [sp, #24]
    b070:	str	r7, [sp, #28]
    b074:	str	r8, [sp, #32]
    b078:	mov	r8, r3
    b07c:	mov	r5, r2
    b080:	mov	r7, r0
    b084:	add	r3, sp, #44	; 0x2c
    b088:	mov	r2, r5
    b08c:	mov	r0, r7
    b090:	bl	64c <flatcc_json_parser_object_start>
    b094:	ldr	r1, [sp, #44]	; 0x2c
    b098:	cmp	r1, #0
    b09c:	beq	b238 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
    b0a0:	mov	r2, r5
    b0a4:	mov	r1, r0
    b0a8:	mov	r0, r7
    b0ac:	bl	460 <flatcc_json_parser_symbol_start>
    b0b0:	mov	r4, r0
    b0b4:	mov	r1, r5
    b0b8:	mov	r0, r4
    b0bc:	bl	590 <flatcc_json_parser_symbol_part>
    b0c0:	eor	r1, r1, #114	; 0x72
    b0c4:	eor	r1, r1, #26880	; 0x6900
    b0c8:	eor	r1, r1, #6356992	; 0x610000
    b0cc:	eor	r1, r1, #1744830464	; 0x68000000
    b0d0:	eor	ip, r0, #110	; 0x6e
    b0d4:	eor	ip, ip, #25856	; 0x6500
    b0d8:	eor	ip, ip, #57409536	; 0x36c0000
    b0dc:	eor	ip, ip, #1543503872	; 0x5c000000
    b0e0:	orr	r3, r1, ip
    b0e4:	cmp	r3, #0
    b0e8:	bne	b20c <Fantasy_Rapunzel_parse_json_struct_inline+0x1b8>
    b0ec:	add	r4, r4, #8
    b0f0:	mov	r1, r5
    b0f4:	mov	r0, r4
    b0f8:	bl	590 <flatcc_json_parser_symbol_part>
    b0fc:	bic	r2, r1, #255	; 0xff
    b100:	mov	r3, #0
    b104:	eor	r1, r2, #26624	; 0x6800
    b108:	eor	r1, r1, #57933824	; 0x3740000
    b10c:	eor	r1, r1, #1677721600	; 0x64000000
    b110:	orr	ip, r1, r3
    b114:	cmp	ip, #0
    b118:	bne	b1f4 <Fantasy_Rapunzel_parse_json_struct_inline+0x1a0>
    b11c:	mov	r3, #3
    b120:	mov	r2, r5
    b124:	mov	r1, r4
    b128:	mov	r0, r7
    b12c:	bl	a5c <flatcc_json_parser_match_symbol>
    b130:	mov	r6, r0
    b134:	cmp	r4, r6
    b138:	beq	b1dc <Fantasy_Rapunzel_parse_json_struct_inline+0x188>
    b13c:	mov	r1, #0
    b140:	strh	r1, [sp, #40]	; 0x28
    b144:	add	r3, sp, #40	; 0x28
    b148:	mov	r2, r5
    b14c:	mov	r1, r6
    b150:	mov	r0, r7
    b154:	bl	1478 <flatcc_json_parser_uint16>
    b158:	mov	r4, r0
    b15c:	cmp	r6, r4
    b160:	bne	b1c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x170>
    b164:	mov	r6, r4
    b168:	ldr	r3, [pc, #232]	; b258 <Fantasy_Rapunzel_parse_json_struct_inline+0x204>
    b16c:	add	r1, sp, #40	; 0x28
    b170:	str	r1, [sp]
    b174:	mov	r2, r5
    b178:	mov	r1, r4
    b17c:	mov	r0, r7
    b180:	bl	1de4 <flatcc_json_parser_symbolic_uint16>
    b184:	mov	r4, r0
    b188:	cmp	r4, r6
    b18c:	beq	b1a0 <Fantasy_Rapunzel_parse_json_struct_inline+0x14c>
    b190:	cmp	r4, r5
    b194:	moveq	ip, #1
    b198:	movne	ip, #0
    b19c:	b	b1a4 <Fantasy_Rapunzel_parse_json_struct_inline+0x150>
    b1a0:	mov	ip, #1
    b1a4:	cmp	ip, #0
    b1a8:	beq	b1c4 <Fantasy_Rapunzel_parse_json_struct_inline+0x170>
    b1ac:	mov	r3, #33	; 0x21
    b1b0:	mov	r2, r5
    b1b4:	mov	r1, r4
    b1b8:	mov	r0, r7
    b1bc:	bl	0 <flatcc_json_parser_set_error>
    b1c0:	b	b238 <Fantasy_Rapunzel_parse_json_struct_inline+0x1e4>
    b1c4:	ldrh	r0, [sp, #40]	; 0x28
    b1c8:	bic	r1, r0, #16711680	; 0xff0000
    b1cc:	bic	r1, r1, #-16777216	; 0xff000000
    b1d0:	mov	r0, r8
    b1d4:	bl	7c <flatbuffers_uint16_write_to_pe>
    b1d8:	b	b220 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    b1dc:	mov	r2, r5
    b1e0:	mov	r1, r6
    b1e4:	mov	r0, r7
    b1e8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b1ec:	mov	r4, r0
    b1f0:	b	b220 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    b1f4:	mov	r2, r5
    b1f8:	mov	r1, r4
    b1fc:	mov	r0, r7
    b200:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b204:	mov	r4, r0
    b208:	b	b220 <Fantasy_Rapunzel_parse_json_struct_inline+0x1cc>
    b20c:	mov	r2, r5
    b210:	mov	r1, r4
    b214:	mov	r0, r7
    b218:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b21c:	mov	r4, r0
    b220:	add	r3, sp, #44	; 0x2c
    b224:	mov	r2, r5
    b228:	mov	r1, r4
    b22c:	mov	r0, r7
    b230:	bl	72c <flatcc_json_parser_object_end>
    b234:	b	b094 <Fantasy_Rapunzel_parse_json_struct_inline+0x40>
    b238:	ldr	r4, [sp, #16]
    b23c:	ldr	r5, [sp, #20]
    b240:	ldr	r6, [sp, #24]
    b244:	ldr	r7, [sp, #28]
    b248:	ldr	r8, [sp, #32]
    b24c:	ldr	lr, [sp, #8]
    b250:	add	sp, sp, #48	; 0x30
    b254:	bx	lr
    b258:	.word	0x00000264

0000b25c <Fantasy_Rapunzel_parse_json_struct>:
    b25c:	mov	ip, sp
    b260:	sub	sp, sp, #24
    b264:	str	ip, [sp]
    b268:	str	lr, [sp, #4]
    b26c:	str	r4, [sp, #8]
    b270:	str	r5, [sp, #12]
    b274:	str	r6, [sp, #16]
    b278:	str	r7, [sp, #20]
    b27c:	mov	r7, r3
    b280:	mov	r5, r2
    b284:	mov	r4, r1
    b288:	mov	r6, r0
    b28c:	mov	r1, #0
    b290:	str	r1, [r7]
    b294:	ldr	r0, [r6]
    b298:	mov	r1, #2
    b29c:	mov	r2, #2
    b2a0:	bl	0 <flatcc_builder_start_struct>
    b2a4:	cmp	r0, #0
    b2a8:	beq	b2fc <Fantasy_Rapunzel_parse_json_struct+0xa0>
    b2ac:	mov	r3, r0
    b2b0:	mov	r2, r5
    b2b4:	mov	r1, r4
    b2b8:	mov	r0, r6
    b2bc:	bl	b054 <Fantasy_Rapunzel_parse_json_struct_inline>
    b2c0:	mov	r4, r0
    b2c4:	cmp	r4, r5
    b2c8:	beq	b2e8 <Fantasy_Rapunzel_parse_json_struct+0x8c>
    b2cc:	ldr	r0, [r6]
    b2d0:	bl	0 <flatcc_builder_end_struct>
    b2d4:	str	r0, [r7]
    b2d8:	cmp	r0, #0
    b2dc:	moveq	r3, #1
    b2e0:	movne	r3, #0
    b2e4:	b	b2ec <Fantasy_Rapunzel_parse_json_struct+0x90>
    b2e8:	mov	r3, #1
    b2ec:	cmp	r3, #0
    b2f0:	bne	b2fc <Fantasy_Rapunzel_parse_json_struct+0xa0>
    b2f4:	mov	r0, r4
    b2f8:	b	b310 <Fantasy_Rapunzel_parse_json_struct+0xb4>
    b2fc:	mov	r3, #33	; 0x21
    b300:	mov	r2, r5
    b304:	mov	r1, r4
    b308:	mov	r0, r6
    b30c:	bl	0 <flatcc_json_parser_set_error>
    b310:	ldr	r4, [sp, #8]
    b314:	ldr	r5, [sp, #12]
    b318:	ldr	r6, [sp, #16]
    b31c:	ldr	r7, [sp, #20]
    b320:	ldr	lr, [sp, #4]
    b324:	add	sp, sp, #24
    b328:	bx	lr

0000b32c <Fantasy_BookReader_parse_json_struct_inline>:
    b32c:	mov	ip, sp
    b330:	sub	sp, sp, #48	; 0x30
    b334:	str	ip, [sp, #4]
    b338:	str	lr, [sp, #8]
    b33c:	str	r4, [sp, #16]
    b340:	str	r5, [sp, #20]
    b344:	str	r6, [sp, #24]
    b348:	str	r7, [sp, #28]
    b34c:	str	r8, [sp, #32]
    b350:	mov	r7, r3
    b354:	mov	r4, r2
    b358:	mov	r6, r0
    b35c:	add	r3, sp, #40	; 0x28
    b360:	mov	r2, r4
    b364:	mov	r0, r6
    b368:	bl	64c <flatcc_json_parser_object_start>
    b36c:	mov	r1, r0
    b370:	ldr	r0, [sp, #40]	; 0x28
    b374:	cmp	r0, #0
    b378:	beq	b508 <Fantasy_BookReader_parse_json_struct_inline+0x1dc>
    b37c:	mov	r2, r4
    b380:	mov	r0, r6
    b384:	bl	460 <flatcc_json_parser_symbol_start>
    b388:	mov	r5, r0
    b38c:	mov	r1, r4
    b390:	mov	r0, r5
    b394:	bl	590 <flatcc_json_parser_symbol_part>
    b398:	eor	r1, r1, #107	; 0x6b
    b39c:	eor	r1, r1, #28416	; 0x6f00
    b3a0:	eor	r1, r1, #7274496	; 0x6f0000
    b3a4:	eor	r1, r1, #1644167168	; 0x62000000
    b3a8:	eor	r0, r0, #101	; 0x65
    b3ac:	eor	r0, r0, #29184	; 0x7200
    b3b0:	eor	r0, r0, #6225920	; 0x5f0000
    b3b4:	eor	r0, r0, #1929379840	; 0x73000000
    b3b8:	orr	r0, r1, r0
    b3bc:	cmp	r0, #0
    b3c0:	bne	b4d8 <Fantasy_BookReader_parse_json_struct_inline+0x1ac>
    b3c4:	add	r5, r5, #8
    b3c8:	mov	r1, r4
    b3cc:	mov	r0, r5
    b3d0:	bl	590 <flatcc_json_parser_symbol_part>
    b3d4:	bic	ip, r1, #255	; 0xff
    b3d8:	bic	ip, ip, #65280	; 0xff00
    b3dc:	mov	r2, #0
    b3e0:	eor	r3, ip, #23330816	; 0x1640000
    b3e4:	eor	r3, r3, #1610612736	; 0x60000000
    b3e8:	orr	r0, r3, r2
    b3ec:	cmp	r0, #0
    b3f0:	bne	b4c0 <Fantasy_BookReader_parse_json_struct_inline+0x194>
    b3f4:	mov	r3, #2
    b3f8:	mov	r2, r4
    b3fc:	mov	r1, r5
    b400:	mov	r0, r6
    b404:	bl	a5c <flatcc_json_parser_match_symbol>
    b408:	mov	r1, r0
    b40c:	cmp	r5, r1
    b410:	beq	b4ac <Fantasy_BookReader_parse_json_struct_inline+0x180>
    b414:	mov	r3, #0
    b418:	str	r3, [sp, #44]	; 0x2c
    b41c:	mov	r8, r1
    b420:	add	r3, sp, #44	; 0x2c
    b424:	mov	r2, r4
    b428:	mov	r0, r6
    b42c:	bl	16cc <flatcc_json_parser_int32>
    b430:	mov	r5, r0
    b434:	cmp	r8, r5
    b438:	bne	b49c <Fantasy_BookReader_parse_json_struct_inline+0x170>
    b43c:	mov	r8, r5
    b440:	ldr	r3, [pc, #228]	; b52c <Fantasy_BookReader_parse_json_struct_inline+0x200>
    b444:	add	r1, sp, #44	; 0x2c
    b448:	str	r1, [sp]
    b44c:	mov	r2, r4
    b450:	mov	r1, r8
    b454:	mov	r0, r6
    b458:	bl	2378 <flatcc_json_parser_symbolic_int32>
    b45c:	mov	r5, r0
    b460:	cmp	r5, r8
    b464:	beq	b478 <Fantasy_BookReader_parse_json_struct_inline+0x14c>
    b468:	cmp	r5, r4
    b46c:	moveq	ip, #1
    b470:	movne	ip, #0
    b474:	b	b47c <Fantasy_BookReader_parse_json_struct_inline+0x150>
    b478:	mov	ip, #1
    b47c:	cmp	ip, #0
    b480:	beq	b49c <Fantasy_BookReader_parse_json_struct_inline+0x170>
    b484:	mov	r3, #33	; 0x21
    b488:	mov	r2, r4
    b48c:	mov	r1, r5
    b490:	mov	r0, r6
    b494:	bl	0 <flatcc_json_parser_set_error>
    b498:	b	b50c <Fantasy_BookReader_parse_json_struct_inline+0x1e0>
    b49c:	ldr	r1, [sp, #44]	; 0x2c
    b4a0:	mov	r0, r7
    b4a4:	bl	244 <flatbuffers_int32_write_to_pe>
    b4a8:	b	b4ec <Fantasy_BookReader_parse_json_struct_inline+0x1c0>
    b4ac:	mov	r2, r4
    b4b0:	mov	r0, r6
    b4b4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b4b8:	mov	r5, r0
    b4bc:	b	b4ec <Fantasy_BookReader_parse_json_struct_inline+0x1c0>
    b4c0:	mov	r2, r4
    b4c4:	mov	r1, r5
    b4c8:	mov	r0, r6
    b4cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b4d0:	mov	r5, r0
    b4d4:	b	b4ec <Fantasy_BookReader_parse_json_struct_inline+0x1c0>
    b4d8:	mov	r2, r4
    b4dc:	mov	r1, r5
    b4e0:	mov	r0, r6
    b4e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    b4e8:	mov	r5, r0
    b4ec:	add	r3, sp, #40	; 0x28
    b4f0:	mov	r2, r4
    b4f4:	mov	r1, r5
    b4f8:	mov	r0, r6
    b4fc:	bl	72c <flatcc_json_parser_object_end>
    b500:	mov	r1, r0
    b504:	b	b370 <Fantasy_BookReader_parse_json_struct_inline+0x44>
    b508:	mov	r0, r1
    b50c:	ldr	r4, [sp, #16]
    b510:	ldr	r5, [sp, #20]
    b514:	ldr	r6, [sp, #24]
    b518:	ldr	r7, [sp, #28]
    b51c:	ldr	r8, [sp, #32]
    b520:	ldr	lr, [sp, #8]
    b524:	add	sp, sp, #48	; 0x30
    b528:	bx	lr
    b52c:	.word	0x00000270

0000b530 <Fantasy_BookReader_parse_json_struct>:
    b530:	mov	ip, sp
    b534:	sub	sp, sp, #24
    b538:	str	ip, [sp]
    b53c:	str	lr, [sp, #4]
    b540:	str	r4, [sp, #8]
    b544:	str	r5, [sp, #12]
    b548:	str	r6, [sp, #16]
    b54c:	str	r7, [sp, #20]
    b550:	mov	r7, r3
    b554:	mov	r5, r2
    b558:	mov	r4, r1
    b55c:	mov	r6, r0
    b560:	mov	r1, #0
    b564:	str	r1, [r7]
    b568:	ldr	r0, [r6]
    b56c:	mov	r1, #4
    b570:	mov	r2, #4
    b574:	bl	0 <flatcc_builder_start_struct>
    b578:	cmp	r0, #0
    b57c:	beq	b5d0 <Fantasy_BookReader_parse_json_struct+0xa0>
    b580:	mov	r3, r0
    b584:	mov	r2, r5
    b588:	mov	r1, r4
    b58c:	mov	r0, r6
    b590:	bl	b32c <Fantasy_BookReader_parse_json_struct_inline>
    b594:	mov	r4, r0
    b598:	cmp	r4, r5
    b59c:	beq	b5bc <Fantasy_BookReader_parse_json_struct+0x8c>
    b5a0:	ldr	r0, [r6]
    b5a4:	bl	0 <flatcc_builder_end_struct>
    b5a8:	str	r0, [r7]
    b5ac:	cmp	r0, #0
    b5b0:	moveq	r3, #1
    b5b4:	movne	r3, #0
    b5b8:	b	b5c0 <Fantasy_BookReader_parse_json_struct+0x90>
    b5bc:	mov	r3, #1
    b5c0:	cmp	r3, #0
    b5c4:	bne	b5d0 <Fantasy_BookReader_parse_json_struct+0xa0>
    b5c8:	mov	r0, r4
    b5cc:	b	b5e4 <Fantasy_BookReader_parse_json_struct+0xb4>
    b5d0:	mov	r3, #33	; 0x21
    b5d4:	mov	r2, r5
    b5d8:	mov	r1, r4
    b5dc:	mov	r0, r6
    b5e0:	bl	0 <flatcc_json_parser_set_error>
    b5e4:	ldr	r4, [sp, #8]
    b5e8:	ldr	r5, [sp, #12]
    b5ec:	ldr	r6, [sp, #16]
    b5f0:	ldr	r7, [sp, #20]
    b5f4:	ldr	lr, [sp, #4]
    b5f8:	add	sp, sp, #24
    b5fc:	bx	lr

0000b600 <Fantasy_Character_parse_json_union>:
    b600:	mov	ip, sp
    b604:	sub	sp, sp, #24
    b608:	str	ip, [sp]
    b60c:	str	lr, [sp, #4]
    b610:	str	r4, [sp, #8]
    b614:	str	r5, [sp, #12]
    b618:	str	r6, [sp, #16]
    b61c:	ldr	r6, [ip]
    b620:	mov	r4, r2
    b624:	mov	r5, r0
    b628:	mov	r0, #0
    b62c:	str	r0, [r6]
    b630:	cmp	r3, #9
    b634:	bcs	b688 <Fantasy_Character_parse_json_union+0x88>
    b638:	cmp	r3, #0
    b63c:	beq	b678 <Fantasy_Character_parse_json_union+0x78>
    b640:	cmp	r3, #2
    b644:	beq	b664 <Fantasy_Character_parse_json_union+0x64>
    b648:	cmp	r3, #8
    b64c:	bne	b6e4 <Fantasy_Character_parse_json_union+0xe4>
    b650:	mov	r3, r6
    b654:	mov	r2, r4
    b658:	mov	r0, r5
    b65c:	bl	b25c <Fantasy_Rapunzel_parse_json_struct>
    b660:	b	b728 <Fantasy_Character_parse_json_union+0x128>
    b664:	mov	r3, r6
    b668:	mov	r2, r4
    b66c:	mov	r0, r5
    b670:	bl	ad68 <Fantasy_Attacker_parse_json_table>
    b674:	b	b728 <Fantasy_Character_parse_json_union+0x128>
    b678:	mov	r2, r4
    b67c:	mov	r0, r5
    b680:	bl	1250 <flatcc_json_parser_none>
    b684:	b	b754 <Fantasy_Character_parse_json_union+0x154>
    b688:	cmp	r3, #11
    b68c:	bcs	b6c0 <Fantasy_Character_parse_json_union+0xc0>
    b690:	cmp	r3, #9
    b694:	bne	b6ac <Fantasy_Character_parse_json_union+0xac>
    b698:	mov	r3, r6
    b69c:	mov	r2, r4
    b6a0:	mov	r0, r5
    b6a4:	bl	b530 <Fantasy_BookReader_parse_json_struct>
    b6a8:	b	b728 <Fantasy_Character_parse_json_union+0x128>
    b6ac:	mov	r3, r6
    b6b0:	mov	r2, r4
    b6b4:	mov	r0, r5
    b6b8:	bl	b530 <Fantasy_BookReader_parse_json_struct>
    b6bc:	b	b728 <Fantasy_Character_parse_json_union+0x128>
    b6c0:	cmp	r3, #11
    b6c4:	beq	b718 <Fantasy_Character_parse_json_union+0x118>
    b6c8:	cmp	r3, #255	; 0xff
    b6cc:	bne	b6e4 <Fantasy_Character_parse_json_union+0xe4>
    b6d0:	mov	r3, r6
    b6d4:	mov	r2, r4
    b6d8:	mov	r0, r5
    b6dc:	bl	0 <flatcc_json_parser_build_string>
    b6e0:	b	b728 <Fantasy_Character_parse_json_union+0x128>
    b6e4:	ldr	r2, [r5, #8]
    b6e8:	and	r3, r2, #1
    b6ec:	cmp	r3, #0
    b6f0:	bne	b708 <Fantasy_Character_parse_json_union+0x108>
    b6f4:	mov	r3, #15
    b6f8:	mov	r2, r4
    b6fc:	mov	r0, r5
    b700:	bl	0 <flatcc_json_parser_set_error>
    b704:	b	b754 <Fantasy_Character_parse_json_union+0x154>
    b708:	mov	r2, r4
    b70c:	mov	r0, r5
    b710:	bl	0 <flatcc_json_parser_generic_json>
    b714:	b	b754 <Fantasy_Character_parse_json_union+0x154>
    b718:	mov	r3, r6
    b71c:	mov	r2, r4
    b720:	mov	r0, r5
    b724:	bl	0 <flatcc_json_parser_build_string>
    b728:	ldr	r1, [r5, #24]
    b72c:	cmp	r1, #0
    b730:	bne	b754 <Fantasy_Character_parse_json_union+0x154>
    b734:	ldr	ip, [r6]
    b738:	cmp	ip, #0
    b73c:	bne	b754 <Fantasy_Character_parse_json_union+0x154>
    b740:	mov	r3, #33	; 0x21
    b744:	mov	r2, r4
    b748:	mov	r1, r0
    b74c:	mov	r0, r5
    b750:	bl	0 <flatcc_json_parser_set_error>
    b754:	ldr	r4, [sp, #8]
    b758:	ldr	r5, [sp, #12]
    b75c:	ldr	r6, [sp, #16]
    b760:	ldr	lr, [sp, #4]
    b764:	add	sp, sp, #24
    b768:	bx	lr

0000b76c <Fantasy_Character_json_union_accept_type>:
    b76c:	mov	ip, sp
    b770:	sub	sp, sp, #8
    b774:	str	ip, [sp]
    b778:	str	lr, [sp, #4]
    b77c:	cmp	r0, #9
    b780:	bcs	b7b4 <Fantasy_Character_json_union_accept_type+0x48>
    b784:	cmp	r0, #0
    b788:	beq	b7ac <Fantasy_Character_json_union_accept_type+0x40>
    b78c:	cmp	r0, #2
    b790:	beq	b7a4 <Fantasy_Character_json_union_accept_type+0x38>
    b794:	cmp	r0, #8
    b798:	bne	b7ec <Fantasy_Character_json_union_accept_type+0x80>
    b79c:	mov	r0, #1
    b7a0:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7a4:	mov	r0, #1
    b7a8:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7ac:	mov	r0, #1
    b7b0:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7b4:	cmp	r0, #11
    b7b8:	bcs	b7d4 <Fantasy_Character_json_union_accept_type+0x68>
    b7bc:	cmp	r0, #9
    b7c0:	bne	b7cc <Fantasy_Character_json_union_accept_type+0x60>
    b7c4:	mov	r0, #1
    b7c8:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7cc:	mov	r0, #1
    b7d0:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7d4:	cmp	r0, #11
    b7d8:	beq	b7f4 <Fantasy_Character_json_union_accept_type+0x88>
    b7dc:	cmp	r0, #255	; 0xff
    b7e0:	bne	b7ec <Fantasy_Character_json_union_accept_type+0x80>
    b7e4:	mov	r0, #1
    b7e8:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7ec:	mov	r0, #0
    b7f0:	b	b7f8 <Fantasy_Character_json_union_accept_type+0x8c>
    b7f4:	mov	r0, #1
    b7f8:	ldr	lr, [sp, #4]
    b7fc:	add	sp, sp, #8
    b800:	bx	lr

0000b804 <Fantasy_Character_parse_json_enum>:
    b804:	mov	ip, sp
    b808:	sub	sp, sp, #48	; 0x30
    b80c:	str	ip, [sp, #4]
    b810:	str	lr, [sp, #8]
    b814:	str	r4, [sp, #16]
    b818:	str	r5, [sp, #20]
    b81c:	str	r6, [sp, #24]
    b820:	str	r7, [sp, #28]
    b824:	str	r8, [sp, #32]
    b828:	str	r9, [sp, #36]	; 0x24
    b82c:	str	sl, [sp, #40]	; 0x28
    b830:	ldr	r6, [ip, #4]
    b834:	ldr	r4, [ip]
    b838:	mov	r7, r3
    b83c:	mov	r5, r2
    b840:	mov	r9, r1
    b844:	mov	r8, r0
    b848:	mov	r1, r5
    b84c:	mov	r0, r9
    b850:	bl	590 <flatcc_json_parser_symbol_part>
    b854:	mov	r2, r1
    b858:	movw	r3, #20037	; 0x4e45
    b85c:	movt	r3, #20047	; 0x4e4f
    b860:	cmp	r2, r3
    b864:	bne	b87c <Fantasy_Character_parse_json_enum+0x78>
    b868:	mov	r2, r0
    b86c:	mov	r3, #0
    b870:	cmp	r2, r3
    b874:	bcc	badc <Fantasy_Character_parse_json_enum+0x2d8>
    b878:	b	b88c <Fantasy_Character_parse_json_enum+0x88>
    b87c:	movw	r3, #20037	; 0x4e45
    b880:	movt	r3, #20047	; 0x4e4f
    b884:	cmp	r2, r3
    b888:	bcc	badc <Fantasy_Character_parse_json_enum+0x2d8>
    b88c:	mov	r3, r1
    b890:	movw	r2, #26725	; 0x6865
    b894:	movt	r2, #20340	; 0x4f74
    b898:	cmp	r3, r2
    b89c:	bne	b8b4 <Fantasy_Character_parse_json_enum+0xb0>
    b8a0:	mov	r2, r0
    b8a4:	mov	r3, #1912602624	; 0x72000000
    b8a8:	cmp	r2, r3
    b8ac:	bcc	ba6c <Fantasy_Character_parse_json_enum+0x268>
    b8b0:	b	b8c4 <Fantasy_Character_parse_json_enum+0xc0>
    b8b4:	movw	ip, #26725	; 0x6865
    b8b8:	movt	ip, #20340	; 0x4f74
    b8bc:	cmp	r3, ip
    b8c0:	bcc	ba6c <Fantasy_Character_parse_json_enum+0x268>
    b8c4:	mov	r3, r1
    b8c8:	mov	r2, r0
    b8cc:	movw	ip, #28789	; 0x7075
    b8d0:	movt	ip, #21089	; 0x5261
    b8d4:	cmp	r3, ip
    b8d8:	bne	b8f0 <Fantasy_Character_parse_json_enum+0xec>
    b8dc:	movw	r3, #25964	; 0x656c
    b8e0:	movt	r3, #28282	; 0x6e7a
    b8e4:	cmp	r2, r3
    b8e8:	bcc	b9f8 <Fantasy_Character_parse_json_enum+0x1f4>
    b8ec:	b	b900 <Fantasy_Character_parse_json_enum+0xfc>
    b8f0:	movw	r2, #28789	; 0x7075
    b8f4:	movt	r2, #21089	; 0x5261
    b8f8:	cmp	r3, r2
    b8fc:	bcc	b9f8 <Fantasy_Character_parse_json_enum+0x1f4>
    b900:	mov	r3, r1
    b904:	mov	r2, r0
    b908:	bic	r2, r2, #255	; 0xff
    b90c:	bic	r2, r2, #65280	; 0xff00
    b910:	eor	r3, r3, #115	; 0x73
    b914:	eor	r3, r3, #29952	; 0x7500
    b918:	eor	r3, r3, #7208960	; 0x6e0000
    b91c:	eor	r3, r3, #1426063360	; 0x55000000
    b920:	eor	ip, r2, #23330816	; 0x1640000
    b924:	eor	ip, ip, #1677721600	; 0x64000000
    b928:	orr	r2, r3, ip
    b92c:	cmp	r2, #0
    b930:	beq	b9b0 <Fantasy_Character_parse_json_enum+0x1ac>
    b934:	eor	r3, r1, #117	; 0x75
    b938:	eor	r3, r3, #94208	; 0x17000
    b93c:	eor	r3, r3, #39845888	; 0x2600000
    b940:	eor	r3, r3, #1342177280	; 0x50000000
    b944:	eor	ip, r0, #364	; 0x16c
    b948:	eor	ip, ip, #156672	; 0x26400
    b94c:	eor	ip, ip, #41418752	; 0x2780000
    b950:	eor	ip, ip, #1811939328	; 0x6c000000
    b954:	orr	r0, r3, ip
    b958:	cmp	r0, #0
    b95c:	bne	b9a8 <Fantasy_Character_parse_json_enum+0x1a4>
    b960:	mov	sl, r9
    b964:	mov	r3, #8
    b968:	str	r6, [sp]
    b96c:	mov	r2, r5
    b970:	mov	r1, sl
    b974:	mov	r0, r8
    b978:	bl	0 <flatcc_json_parser_match_constant>
    b97c:	cmp	r0, sl
    b980:	beq	b9a0 <Fantasy_Character_parse_json_enum+0x19c>
    b984:	mov	r3, #0
    b988:	mov	r2, #8
    b98c:	str	r2, [r4]
    b990:	str	r3, [r4, #4]
    b994:	mov	r3, #0
    b998:	str	r3, [r7]
    b99c:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    b9a0:	mov	r0, r9
    b9a4:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    b9a8:	mov	r0, r9
    b9ac:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    b9b0:	mov	r1, r9
    b9b4:	mov	sl, r1
    b9b8:	mov	r3, #6
    b9bc:	str	r6, [sp]
    b9c0:	mov	r2, r5
    b9c4:	mov	r0, r8
    b9c8:	bl	0 <flatcc_json_parser_match_constant>
    b9cc:	cmp	r0, sl
    b9d0:	beq	b9f0 <Fantasy_Character_parse_json_enum+0x1ec>
    b9d4:	mov	r3, #0
    b9d8:	mov	r2, #255	; 0xff
    b9dc:	str	r2, [r4]
    b9e0:	str	r3, [r4, #4]
    b9e4:	mov	r1, #0
    b9e8:	str	r1, [r7]
    b9ec:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    b9f0:	mov	r0, r9
    b9f4:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    b9f8:	and	r2, r0, #-16777216	; 0xff000000
    b9fc:	eor	r0, r1, #101	; 0x65
    ba00:	eor	r0, r0, #26624	; 0x6800
    ba04:	eor	r0, r0, #57933824	; 0x3740000
    ba08:	eor	r0, r0, #1275068416	; 0x4c000000
    ba0c:	eor	ip, r2, #1912602624	; 0x72000000
    ba10:	orr	ip, r0, ip
    ba14:	cmp	ip, #0
    ba18:	bne	ba64 <Fantasy_Character_parse_json_enum+0x260>
    ba1c:	mov	sl, r9
    ba20:	mov	r3, #5
    ba24:	str	r6, [sp]
    ba28:	mov	r2, r5
    ba2c:	mov	r1, sl
    ba30:	mov	r0, r8
    ba34:	bl	0 <flatcc_json_parser_match_constant>
    ba38:	cmp	r0, sl
    ba3c:	beq	ba5c <Fantasy_Character_parse_json_enum+0x258>
    ba40:	mov	r2, #0
    ba44:	mov	r1, #11
    ba48:	str	r1, [r4]
    ba4c:	str	r2, [r4, #4]
    ba50:	mov	r1, #0
    ba54:	str	r1, [r7]
    ba58:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    ba5c:	mov	r0, r9
    ba60:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    ba64:	mov	r0, r9
    ba68:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    ba6c:	mov	r2, #0
    ba70:	eor	r3, r1, #69	; 0x45
    ba74:	eor	r3, r3, #19968	; 0x4e00
    ba78:	eor	r3, r3, #5177344	; 0x4f0000
    ba7c:	eor	r3, r3, #1308622848	; 0x4e000000
    ba80:	orr	ip, r3, r2
    ba84:	cmp	ip, #0
    ba88:	bne	bad4 <Fantasy_Character_parse_json_enum+0x2d0>
    ba8c:	mov	r1, r9
    ba90:	mov	sl, r1
    ba94:	mov	r3, #4
    ba98:	str	r6, [sp]
    ba9c:	mov	r2, r5
    baa0:	mov	r0, r8
    baa4:	bl	0 <flatcc_json_parser_match_constant>
    baa8:	cmp	r0, sl
    baac:	beq	bacc <Fantasy_Character_parse_json_enum+0x2c8>
    bab0:	mov	r1, #0
    bab4:	mov	ip, #0
    bab8:	str	ip, [r4]
    babc:	str	r1, [r4, #4]
    bac0:	mov	r3, #0
    bac4:	str	r3, [r7]
    bac8:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bacc:	mov	r0, r9
    bad0:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bad4:	mov	r0, r9
    bad8:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    badc:	mov	ip, r1
    bae0:	movw	r2, #28523	; 0x6f6b
    bae4:	movt	r2, #17007	; 0x426f
    bae8:	cmp	ip, r2
    baec:	bne	bb08 <Fantasy_Character_parse_json_enum+0x304>
    baf0:	mov	r2, r0
    baf4:	movw	r3, #28160	; 0x6e00
    baf8:	movt	r3, #18017	; 0x4661
    bafc:	cmp	r2, r3
    bb00:	bcc	bc0c <Fantasy_Character_parse_json_enum+0x408>
    bb04:	b	bb1c <Fantasy_Character_parse_json_enum+0x318>
    bb08:	mov	ip, r1
    bb0c:	movw	r2, #28523	; 0x6f6b
    bb10:	movt	r2, #17007	; 0x426f
    bb14:	cmp	ip, r2
    bb18:	bcc	bc0c <Fantasy_Character_parse_json_enum+0x408>
    bb1c:	mov	r3, r0
    bb20:	mov	r2, r1
    bb24:	and	ip, r3, #-16777216	; 0xff000000
    bb28:	eor	r3, r2, #97	; 0x61
    bb2c:	eor	r3, r3, #84992	; 0x14c00
    bb30:	eor	r3, r3, #24379392	; 0x1740000
    bb34:	eor	r3, r3, #1275068416	; 0x4c000000
    bb38:	eor	r2, ip, #1845493760	; 0x6e000000
    bb3c:	orr	ip, r3, r2
    bb40:	cmp	ip, #0
    bb44:	beq	bbc4 <Fantasy_Character_parse_json_enum+0x3c0>
    bb48:	bic	r0, r0, #255	; 0xff
    bb4c:	eor	r1, r1, #107	; 0x6b
    bb50:	eor	r1, r1, #28416	; 0x6f00
    bb54:	eor	r1, r1, #7274496	; 0x6f0000
    bb58:	eor	r1, r1, #1107296256	; 0x42000000
    bb5c:	eor	ip, r0, #28160	; 0x6e00
    bb60:	eor	ip, ip, #6356992	; 0x610000
    bb64:	eor	ip, ip, #1174405120	; 0x46000000
    bb68:	orr	ip, r1, ip
    bb6c:	cmp	ip, #0
    bb70:	bne	bbbc <Fantasy_Character_parse_json_enum+0x3b8>
    bb74:	mov	r1, r9
    bb78:	mov	sl, r1
    bb7c:	mov	r3, #7
    bb80:	str	r6, [sp]
    bb84:	mov	r2, r5
    bb88:	mov	r0, r8
    bb8c:	bl	0 <flatcc_json_parser_match_constant>
    bb90:	cmp	r0, sl
    bb94:	beq	bbb4 <Fantasy_Character_parse_json_enum+0x3b0>
    bb98:	mov	r3, #0
    bb9c:	mov	r2, #10
    bba0:	str	r2, [r4]
    bba4:	str	r3, [r4, #4]
    bba8:	mov	ip, #0
    bbac:	str	ip, [r7]
    bbb0:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bbb4:	mov	r0, r9
    bbb8:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bbbc:	mov	r0, r9
    bbc0:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bbc4:	mov	sl, r9
    bbc8:	mov	r3, #5
    bbcc:	str	r6, [sp]
    bbd0:	mov	r2, r5
    bbd4:	mov	r1, sl
    bbd8:	mov	r0, r8
    bbdc:	bl	0 <flatcc_json_parser_match_constant>
    bbe0:	cmp	r0, sl
    bbe4:	beq	bc04 <Fantasy_Character_parse_json_enum+0x400>
    bbe8:	mov	r2, #0
    bbec:	mov	r1, #2
    bbf0:	str	r1, [r4]
    bbf4:	str	r2, [r4, #4]
    bbf8:	mov	r3, #0
    bbfc:	str	r3, [r7]
    bc00:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bc04:	mov	r0, r9
    bc08:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bc0c:	and	r3, r0, #-16777216	; 0xff000000
    bc10:	eor	r2, r1, #108	; 0x6c
    bc14:	eor	r2, r2, #93184	; 0x16c00
    bc18:	eor	r2, r2, #40108032	; 0x2640000
    bc1c:	eor	r2, r2, #1073741824	; 0x40000000
    bc20:	eor	r1, r3, #1694498816	; 0x65000000
    bc24:	orr	r1, r2, r1
    bc28:	cmp	r1, #0
    bc2c:	bne	bc78 <Fantasy_Character_parse_json_enum+0x474>
    bc30:	mov	sl, r9
    bc34:	mov	r3, #5
    bc38:	str	r6, [sp]
    bc3c:	mov	r2, r5
    bc40:	mov	r1, sl
    bc44:	mov	r0, r8
    bc48:	bl	0 <flatcc_json_parser_match_constant>
    bc4c:	cmp	r0, sl
    bc50:	beq	bc70 <Fantasy_Character_parse_json_enum+0x46c>
    bc54:	mov	ip, #0
    bc58:	mov	r3, #9
    bc5c:	str	r3, [r4]
    bc60:	str	ip, [r4, #4]
    bc64:	mov	r1, #0
    bc68:	str	r1, [r7]
    bc6c:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bc70:	mov	r0, r9
    bc74:	b	bc7c <Fantasy_Character_parse_json_enum+0x478>
    bc78:	mov	r0, r9
    bc7c:	ldr	r4, [sp, #16]
    bc80:	ldr	r5, [sp, #20]
    bc84:	ldr	r6, [sp, #24]
    bc88:	ldr	r7, [sp, #28]
    bc8c:	ldr	r8, [sp, #32]
    bc90:	ldr	r9, [sp, #36]	; 0x24
    bc94:	ldr	sl, [sp, #40]	; 0x28
    bc98:	ldr	lr, [sp, #8]
    bc9c:	add	sp, sp, #48	; 0x30
    bca0:	bx	lr

0000bca4 <Fantasy_Movie_parse_json_table>:
    bca4:	mov	ip, sp
    bca8:	sub	sp, sp, #64	; 0x40
    bcac:	str	ip, [sp, #20]
    bcb0:	str	lr, [sp, #24]
    bcb4:	str	r4, [sp, #32]
    bcb8:	str	r5, [sp, #36]	; 0x24
    bcbc:	str	r6, [sp, #40]	; 0x28
    bcc0:	str	r7, [sp, #44]	; 0x2c
    bcc4:	str	r8, [sp, #48]	; 0x30
    bcc8:	str	r9, [sp, #52]	; 0x34
    bccc:	mov	r7, r3
    bcd0:	mov	r4, r2
    bcd4:	mov	r5, r1
    bcd8:	mov	r6, r0
    bcdc:	mov	r1, #0
    bce0:	str	r1, [r7]
    bce4:	ldr	r0, [r6]
    bce8:	mov	r1, #10
    bcec:	bl	0 <flatcc_builder_start_table>
    bcf0:	cmp	r0, #0
    bcf4:	bne	c638 <Fantasy_Movie_parse_json_table+0x994>
    bcf8:	mov	r3, #5
    bcfc:	add	r1, sp, #60	; 0x3c
    bd00:	str	r1, [sp]
    bd04:	mov	r2, r4
    bd08:	mov	r1, r5
    bd0c:	mov	r0, r6
    bd10:	bl	0 <flatcc_json_parser_prepare_unions>
    bd14:	cmp	r4, r0
    bd18:	beq	c638 <Fantasy_Movie_parse_json_table+0x994>
    bd1c:	add	r3, sp, #56	; 0x38
    bd20:	mov	r2, r4
    bd24:	mov	r1, r5
    bd28:	mov	r0, r6
    bd2c:	bl	64c <flatcc_json_parser_object_start>
    bd30:	mov	r5, r0
    bd34:	ldr	r0, [sp, #56]	; 0x38
    bd38:	cmp	r0, #0
    bd3c:	beq	c5f8 <Fantasy_Movie_parse_json_table+0x954>
    bd40:	mov	r2, r4
    bd44:	mov	r1, r5
    bd48:	mov	r0, r6
    bd4c:	bl	460 <flatcc_json_parser_symbol_start>
    bd50:	mov	r5, r0
    bd54:	mov	r1, r4
    bd58:	mov	r0, r5
    bd5c:	bl	590 <flatcc_json_parser_symbol_part>
    bd60:	mov	r3, r0
    bd64:	mov	r2, r1
    bd68:	movw	ip, #24946	; 0x6172
    bd6c:	movt	ip, #25448	; 0x6368
    bd70:	cmp	r2, ip
    bd74:	bne	bd8c <Fantasy_Movie_parse_json_table+0xe8>
    bd78:	movw	r2, #29797	; 0x7465
    bd7c:	movt	r2, #24931	; 0x6163
    bd80:	cmp	r3, r2
    bd84:	bcc	c2e0 <Fantasy_Movie_parse_json_table+0x63c>
    bd88:	b	bda0 <Fantasy_Movie_parse_json_table+0xfc>
    bd8c:	mov	r2, r1
    bd90:	movw	r3, #24946	; 0x6172
    bd94:	movt	r3, #25448	; 0x6368
    bd98:	cmp	r2, r3
    bd9c:	bcc	c2e0 <Fantasy_Movie_parse_json_table+0x63c>
    bda0:	mov	r2, r1
    bda4:	movw	r3, #26990	; 0x696e
    bda8:	movt	r3, #28001	; 0x6d61
    bdac:	cmp	r2, r3
    bdb0:	bne	bdcc <Fantasy_Movie_parse_json_table+0x128>
    bdb4:	mov	r3, r0
    bdb8:	movw	ip, #26721	; 0x6861
    bdbc:	movt	ip, #24419	; 0x5f63
    bdc0:	cmp	r3, ip
    bdc4:	bcc	c144 <Fantasy_Movie_parse_json_table+0x4a0>
    bdc8:	b	bde0 <Fantasy_Movie_parse_json_table+0x13c>
    bdcc:	mov	r2, r1
    bdd0:	movw	r3, #26990	; 0x696e
    bdd4:	movt	r3, #28001	; 0x6d61
    bdd8:	cmp	r2, r3
    bddc:	bcc	c144 <Fantasy_Movie_parse_json_table+0x4a0>
    bde0:	mov	r2, r1
    bde4:	eor	r3, r2, #110	; 0x6e
    bde8:	eor	r3, r3, #26880	; 0x6900
    bdec:	eor	r3, r3, #6356992	; 0x610000
    bdf0:	eor	r3, r3, #1828716544	; 0x6d000000
    bdf4:	mov	ip, r0
    bdf8:	eor	r2, ip, #97	; 0x61
    bdfc:	eor	r2, r2, #223232	; 0x36800
    be00:	eor	r2, r2, #257949696	; 0xf600000
    be04:	eor	r2, r2, #1342177280	; 0x50000000
    be08:	orr	r2, r3, r2
    be0c:	cmp	r2, #0
    be10:	beq	bf98 <Fantasy_Movie_parse_json_table+0x2f4>
    be14:	eor	r2, r1, #101	; 0x65
    be18:	eor	r2, r2, #91136	; 0x16400
    be1c:	eor	r2, r2, #57147392	; 0x3680000
    be20:	eor	r2, r2, #1879048192	; 0x70000000
    be24:	eor	r1, r0, #99	; 0x63
    be28:	eor	r1, r1, #26880	; 0x6900
    be2c:	eor	r1, r1, #7012352	; 0x6b0000
    be30:	eor	r1, r1, #1593835520	; 0x5f000000
    be34:	orr	r3, r2, r1
    be38:	cmp	r3, #0
    be3c:	bne	bf80 <Fantasy_Movie_parse_json_table+0x2dc>
    be40:	add	r5, r5, #8
    be44:	mov	r1, r4
    be48:	mov	r0, r5
    be4c:	bl	590 <flatcc_json_parser_symbol_part>
    be50:	mov	r3, r1
    be54:	bic	r2, r0, #255	; 0xff
    be58:	bic	r2, r2, #65280	; 0xff00
    be5c:	eor	ip, r3, #121	; 0x79
    be60:	eor	ip, ip, #226304	; 0x37400
    be64:	eor	ip, ip, #56360960	; 0x35c0000
    be68:	eor	ip, ip, #1744830464	; 0x68000000
    be6c:	eor	r2, r2, #6619136	; 0x650000
    be70:	eor	r2, r2, #1879048192	; 0x70000000
    be74:	orr	r3, ip, r2
    be78:	cmp	r3, #0
    be7c:	beq	bf14 <Fantasy_Movie_parse_json_table+0x270>
    be80:	and	ip, r1, #-16777216	; 0xff000000
    be84:	mov	r3, #0
    be88:	eor	ip, ip, #1795162112	; 0x6b000000
    be8c:	orr	r2, ip, r3
    be90:	cmp	r2, #0
    be94:	bne	befc <Fantasy_Movie_parse_json_table+0x258>
    be98:	mov	r3, #1
    be9c:	mov	r2, r4
    bea0:	mov	r1, r5
    bea4:	mov	r0, r6
    bea8:	bl	a5c <flatcc_json_parser_match_symbol>
    beac:	mov	r1, r0
    beb0:	cmp	r5, r1
    beb4:	beq	bee8 <Fantasy_Movie_parse_json_table+0x244>
    beb8:	mov	r3, #2
    bebc:	mov	r5, #5
    bec0:	ldr	r0, [sp, #60]	; 0x3c
    bec4:	ldr	r2, [pc, #1960]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    bec8:	str	r2, [sp, #8]
    becc:	str	r0, [sp, #4]
    bed0:	str	r5, [sp]
    bed4:	mov	r2, r4
    bed8:	mov	r0, r6
    bedc:	bl	0 <flatcc_json_parser_union>
    bee0:	mov	r1, r0
    bee4:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    bee8:	mov	r2, r4
    beec:	mov	r0, r6
    bef0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bef4:	mov	r1, r0
    bef8:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    befc:	mov	r2, r4
    bf00:	mov	r1, r5
    bf04:	mov	r0, r6
    bf08:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf0c:	mov	r1, r0
    bf10:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    bf14:	mov	r3, #6
    bf18:	mov	r2, r4
    bf1c:	mov	r1, r5
    bf20:	mov	r0, r6
    bf24:	bl	a5c <flatcc_json_parser_match_symbol>
    bf28:	mov	r1, r0
    bf2c:	cmp	r5, r1
    bf30:	beq	bf6c <Fantasy_Movie_parse_json_table+0x2c8>
    bf34:	mov	r3, #2
    bf38:	mov	r0, #5
    bf3c:	ldr	r8, [sp, #60]	; 0x3c
    bf40:	ldr	r2, [pc, #1844]	; c67c <Fantasy_Movie_parse_json_table+0x9d8>
    bf44:	ldr	ip, [pc, #1832]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    bf48:	str	ip, [sp, #12]
    bf4c:	str	r2, [sp, #8]
    bf50:	str	r8, [sp, #4]
    bf54:	str	r0, [sp]
    bf58:	mov	r2, r4
    bf5c:	mov	r0, r6
    bf60:	bl	0 <flatcc_json_parser_union_type>
    bf64:	mov	r1, r0
    bf68:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    bf6c:	mov	r2, r4
    bf70:	mov	r0, r6
    bf74:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf78:	mov	r1, r0
    bf7c:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    bf80:	mov	r2, r4
    bf84:	mov	r1, r5
    bf88:	mov	r0, r6
    bf8c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    bf90:	mov	r1, r0
    bf94:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    bf98:	add	r5, r5, #8
    bf9c:	mov	r1, r4
    bfa0:	mov	r0, r5
    bfa4:	bl	590 <flatcc_json_parser_symbol_part>
    bfa8:	mov	r2, r1
    bfac:	eor	r2, r2, #884	; 0x374
    bfb0:	eor	r2, r2, #90112	; 0x16000
    bfb4:	eor	r2, r2, #39845888	; 0x2600000
    bfb8:	eor	r2, r2, #1879048192	; 0x70000000
    bfbc:	mov	ip, r0
    bfc0:	eor	r3, ip, #884	; 0x374
    bfc4:	eor	r3, r3, #154624	; 0x25c00
    bfc8:	eor	r3, r3, #91226112	; 0x5700000
    bfcc:	eor	r3, r3, #1610612736	; 0x60000000
    bfd0:	orr	r2, r2, r3
    bfd4:	cmp	r2, #0
    bfd8:	bne	c094 <Fantasy_Movie_parse_json_table+0x3f0>
    bfdc:	add	r5, r5, #8
    bfe0:	mov	r1, r4
    bfe4:	mov	r0, r5
    bfe8:	bl	590 <flatcc_json_parser_symbol_part>
    bfec:	bic	ip, r1, #255	; 0xff
    bff0:	mov	r1, #0
    bff4:	eor	ip, ip, #25856	; 0x6500
    bff8:	eor	ip, ip, #158334976	; 0x9700000
    bffc:	eor	ip, ip, #1879048192	; 0x70000000
    c000:	orr	ip, ip, r1
    c004:	cmp	ip, #0
    c008:	bne	c07c <Fantasy_Movie_parse_json_table+0x3d8>
    c00c:	mov	r3, #3
    c010:	mov	r2, r4
    c014:	mov	r1, r5
    c018:	mov	r0, r6
    c01c:	bl	a5c <flatcc_json_parser_match_symbol>
    c020:	cmp	r5, r0
    c024:	beq	c064 <Fantasy_Movie_parse_json_table+0x3c0>
    c028:	mov	r3, #0
    c02c:	mov	r8, #1
    c030:	ldr	ip, [sp, #60]	; 0x3c
    c034:	ldr	r1, [pc, #1604]	; c680 <Fantasy_Movie_parse_json_table+0x9dc>
    c038:	ldr	r2, [pc, #1588]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c03c:	str	r2, [sp, #12]
    c040:	str	r1, [sp, #8]
    c044:	str	ip, [sp, #4]
    c048:	str	r8, [sp]
    c04c:	mov	r2, r4
    c050:	mov	r1, r0
    c054:	mov	r0, r6
    c058:	bl	0 <flatcc_json_parser_union_type>
    c05c:	mov	r1, r0
    c060:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c064:	mov	r2, r4
    c068:	mov	r1, r0
    c06c:	mov	r0, r6
    c070:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c074:	mov	r1, r0
    c078:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c07c:	mov	r2, r4
    c080:	mov	r1, r5
    c084:	mov	r0, r6
    c088:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c08c:	mov	r1, r0
    c090:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c094:	bic	ip, r0, #255	; 0xff
    c098:	bic	ip, ip, #65280	; 0xff00
    c09c:	eor	r2, r1, #884	; 0x374
    c0a0:	eor	r2, r2, #90112	; 0x16000
    c0a4:	eor	r2, r2, #39845888	; 0x2600000
    c0a8:	eor	r2, r2, #1879048192	; 0x70000000
    c0ac:	eor	r3, ip, #7471104	; 0x720000
    c0b0:	eor	r3, r3, #1694498816	; 0x65000000
    c0b4:	orr	ip, r2, r3
    c0b8:	cmp	ip, #0
    c0bc:	bne	c12c <Fantasy_Movie_parse_json_table+0x488>
    c0c0:	mov	r1, r5
    c0c4:	mov	r5, r1
    c0c8:	mov	r3, #6
    c0cc:	mov	r2, r4
    c0d0:	mov	r0, r6
    c0d4:	bl	a5c <flatcc_json_parser_match_symbol>
    c0d8:	cmp	r5, r0
    c0dc:	beq	c114 <Fantasy_Movie_parse_json_table+0x470>
    c0e0:	mov	r3, #0
    c0e4:	mov	r2, #1
    c0e8:	ldr	ip, [sp, #60]	; 0x3c
    c0ec:	ldr	r1, [pc, #1408]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c0f0:	str	r1, [sp, #8]
    c0f4:	str	ip, [sp, #4]
    c0f8:	str	r2, [sp]
    c0fc:	mov	r2, r4
    c100:	mov	r1, r0
    c104:	mov	r0, r6
    c108:	bl	0 <flatcc_json_parser_union>
    c10c:	mov	r1, r0
    c110:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c114:	mov	r2, r4
    c118:	mov	r1, r0
    c11c:	mov	r0, r6
    c120:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c124:	mov	r1, r0
    c128:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c12c:	mov	r2, r4
    c130:	mov	r1, r5
    c134:	mov	r0, r6
    c138:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c13c:	mov	r1, r0
    c140:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c144:	eor	r1, r1, #114	; 0x72
    c148:	eor	r1, r1, #24832	; 0x6100
    c14c:	eor	r1, r1, #57147392	; 0x3680000
    c150:	eor	r1, r1, #1610612736	; 0x60000000
    c154:	eor	r0, r0, #101	; 0x65
    c158:	eor	r0, r0, #226304	; 0x37400
    c15c:	eor	r0, r0, #23068672	; 0x1600000
    c160:	eor	r0, r0, #1610612736	; 0x60000000
    c164:	orr	r2, r1, r0
    c168:	cmp	r2, #0
    c16c:	bne	c2c8 <Fantasy_Movie_parse_json_table+0x624>
    c170:	add	r5, r5, #8
    c174:	mov	r1, r4
    c178:	mov	r0, r5
    c17c:	bl	590 <flatcc_json_parser_symbol_part>
    c180:	mov	r2, r1
    c184:	bic	r3, r0, #255	; 0xff
    c188:	eor	ip, r2, #884	; 0x374
    c18c:	eor	ip, ip, #220160	; 0x35c00
    c190:	eor	ip, ip, #40894464	; 0x2700000
    c194:	eor	ip, ip, #1879048192	; 0x70000000
    c198:	eor	r3, r3, #25856	; 0x6500
    c19c:	eor	r3, r3, #158334976	; 0x9700000
    c1a0:	eor	r3, r3, #1879048192	; 0x70000000
    c1a4:	orr	r2, ip, r3
    c1a8:	cmp	r2, #0
    c1ac:	beq	c250 <Fantasy_Movie_parse_json_table+0x5ac>
    c1b0:	bic	ip, r1, #255	; 0xff
    c1b4:	bic	ip, ip, #65280	; 0xff00
    c1b8:	mov	r3, #0
    c1bc:	eor	r0, ip, #7536640	; 0x730000
    c1c0:	eor	r0, r0, #1912602624	; 0x72000000
    c1c4:	orr	r2, r0, r3
    c1c8:	cmp	r2, #0
    c1cc:	bne	c238 <Fantasy_Movie_parse_json_table+0x594>
    c1d0:	mov	r1, r5
    c1d4:	mov	r5, r1
    c1d8:	mov	r3, #2
    c1dc:	mov	r2, r4
    c1e0:	mov	r0, r6
    c1e4:	bl	a5c <flatcc_json_parser_match_symbol>
    c1e8:	mov	r1, r0
    c1ec:	cmp	r5, r1
    c1f0:	beq	c224 <Fantasy_Movie_parse_json_table+0x580>
    c1f4:	mov	r3, #4
    c1f8:	mov	r2, #9
    c1fc:	ldr	r5, [sp, #60]	; 0x3c
    c200:	ldr	r0, [pc, #1132]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c204:	str	r0, [sp, #8]
    c208:	str	r5, [sp, #4]
    c20c:	str	r2, [sp]
    c210:	mov	r2, r4
    c214:	mov	r0, r6
    c218:	bl	0 <flatcc_json_parser_union_vector>
    c21c:	mov	r1, r0
    c220:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c224:	mov	r2, r4
    c228:	mov	r0, r6
    c22c:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c230:	mov	r1, r0
    c234:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c238:	mov	r2, r4
    c23c:	mov	r1, r5
    c240:	mov	r0, r6
    c244:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c248:	mov	r1, r0
    c24c:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c250:	mov	r1, r5
    c254:	mov	r5, r1
    c258:	mov	r3, #7
    c25c:	mov	r2, r4
    c260:	mov	r0, r6
    c264:	bl	a5c <flatcc_json_parser_match_symbol>
    c268:	mov	r1, r0
    c26c:	cmp	r5, r1
    c270:	beq	c2b4 <Fantasy_Movie_parse_json_table+0x610>
    c274:	mov	r3, #4
    c278:	mov	r2, #9
    c27c:	ldr	r9, [sp, #60]	; 0x3c
    c280:	ldr	r8, [pc, #1008]	; c678 <Fantasy_Movie_parse_json_table+0x9d4>
    c284:	ldr	ip, [pc, #1000]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c288:	ldr	r0, [pc, #1016]	; c688 <Fantasy_Movie_parse_json_table+0x9e4>
    c28c:	str	r0, [sp, #16]
    c290:	str	ip, [sp, #12]
    c294:	str	r8, [sp, #8]
    c298:	str	r9, [sp, #4]
    c29c:	str	r2, [sp]
    c2a0:	mov	r2, r4
    c2a4:	mov	r0, r6
    c2a8:	bl	0 <flatcc_json_parser_union_type_vector>
    c2ac:	mov	r1, r0
    c2b0:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c2b4:	mov	r2, r4
    c2b8:	mov	r0, r6
    c2bc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c2c0:	mov	r1, r0
    c2c4:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c2c8:	mov	r2, r4
    c2cc:	mov	r1, r5
    c2d0:	mov	r0, r6
    c2d4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c2d8:	mov	r1, r0
    c2dc:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c2e0:	mov	r3, r1
    c2e4:	mov	r2, r0
    c2e8:	eor	r3, r3, #97	; 0x61
    c2ec:	eor	r3, r3, #160768	; 0x27400
    c2f0:	eor	r3, r3, #23855104	; 0x16c0000
    c2f4:	eor	r3, r3, #1610612736	; 0x60000000
    c2f8:	eor	r2, r2, #105	; 0x69
    c2fc:	eor	r2, r2, #28160	; 0x6e00
    c300:	eor	r2, r2, #7274496	; 0x6f0000
    c304:	eor	r2, r2, #1728053248	; 0x67000000
    c308:	orr	ip, r3, r2
    c30c:	cmp	ip, #0
    c310:	bne	c45c <Fantasy_Movie_parse_json_table+0x7b8>
    c314:	add	r5, r5, #8
    c318:	mov	r1, r4
    c31c:	mov	r0, r5
    c320:	bl	590 <flatcc_json_parser_symbol_part>
    c324:	mov	r3, r1
    c328:	bic	r2, r0, #255	; 0xff
    c32c:	eor	r3, r3, #884	; 0x374
    c330:	eor	r3, r3, #23552	; 0x5c00
    c334:	eor	r3, r3, #57933824	; 0x3740000
    c338:	eor	r3, r3, #1879048192	; 0x70000000
    c33c:	eor	r0, r2, #25856	; 0x6500
    c340:	eor	r0, r0, #158334976	; 0x9700000
    c344:	eor	r0, r0, #1879048192	; 0x70000000
    c348:	orr	r3, r3, r0
    c34c:	cmp	r3, #0
    c350:	beq	c3f0 <Fantasy_Movie_parse_json_table+0x74c>
    c354:	bic	r0, r1, #255	; 0xff
    c358:	bic	r0, r0, #65280	; 0xff00
    c35c:	mov	r3, #0
    c360:	eor	r0, r0, #57933824	; 0x3740000
    c364:	eor	r0, r0, #1879048192	; 0x70000000
    c368:	orr	r0, r0, r3
    c36c:	cmp	r0, #0
    c370:	bne	c3d8 <Fantasy_Movie_parse_json_table+0x734>
    c374:	mov	r3, #2
    c378:	mov	r2, r4
    c37c:	mov	r1, r5
    c380:	mov	r0, r6
    c384:	bl	a5c <flatcc_json_parser_match_symbol>
    c388:	mov	r1, r0
    c38c:	cmp	r5, r1
    c390:	beq	c3c4 <Fantasy_Movie_parse_json_table+0x720>
    c394:	mov	r3, #1
    c398:	mov	r2, #3
    c39c:	ldr	r0, [sp, #60]	; 0x3c
    c3a0:	ldr	r5, [pc, #716]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c3a4:	str	r5, [sp, #8]
    c3a8:	str	r0, [sp, #4]
    c3ac:	str	r2, [sp]
    c3b0:	mov	r2, r4
    c3b4:	mov	r0, r6
    c3b8:	bl	0 <flatcc_json_parser_union>
    c3bc:	mov	r1, r0
    c3c0:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c3c4:	mov	r2, r4
    c3c8:	mov	r0, r6
    c3cc:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c3d0:	mov	r1, r0
    c3d4:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c3d8:	mov	r2, r4
    c3dc:	mov	r1, r5
    c3e0:	mov	r0, r6
    c3e4:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c3e8:	mov	r1, r0
    c3ec:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c3f0:	mov	r3, #7
    c3f4:	mov	r2, r4
    c3f8:	mov	r1, r5
    c3fc:	mov	r0, r6
    c400:	bl	a5c <flatcc_json_parser_match_symbol>
    c404:	mov	r1, r0
    c408:	cmp	r5, r1
    c40c:	beq	c448 <Fantasy_Movie_parse_json_table+0x7a4>
    c410:	mov	r3, #1
    c414:	mov	ip, #3
    c418:	ldr	r0, [sp, #60]	; 0x3c
    c41c:	ldr	r2, [pc, #608]	; c684 <Fantasy_Movie_parse_json_table+0x9e0>
    c420:	ldr	r8, [pc, #588]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c424:	str	r8, [sp, #12]
    c428:	str	r2, [sp, #8]
    c42c:	str	r0, [sp, #4]
    c430:	str	ip, [sp]
    c434:	mov	r2, r4
    c438:	mov	r0, r6
    c43c:	bl	0 <flatcc_json_parser_union_type>
    c440:	mov	r1, r0
    c444:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c448:	mov	r2, r4
    c44c:	mov	r0, r6
    c450:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c454:	mov	r1, r0
    c458:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c45c:	mov	r2, r1
    c460:	eor	r3, r2, #101	; 0x65
    c464:	eor	r3, r3, #27904	; 0x6d00
    c468:	eor	r3, r3, #6356992	; 0x610000
    c46c:	eor	r3, r3, #1660944384	; 0x63000000
    c470:	mov	r2, r0
    c474:	eor	r2, r2, #121	; 0x79
    c478:	eor	r2, r2, #226304	; 0x37400
    c47c:	eor	r2, r2, #56360960	; 0x35c0000
    c480:	eor	r2, r2, #1811939328	; 0x6c000000
    c484:	orr	r2, r3, r2
    c488:	cmp	r2, #0
    c48c:	bne	c544 <Fantasy_Movie_parse_json_table+0x8a0>
    c490:	add	r5, r5, #8
    c494:	mov	r1, r4
    c498:	mov	r0, r5
    c49c:	bl	590 <flatcc_json_parser_symbol_part>
    c4a0:	bic	r3, r1, #255	; 0xff
    c4a4:	bic	r3, r3, #65280	; 0xff00
    c4a8:	mov	r2, #0
    c4ac:	eor	r3, r3, #6619136	; 0x650000
    c4b0:	eor	r3, r3, #1879048192	; 0x70000000
    c4b4:	orr	r3, r3, r2
    c4b8:	cmp	r3, #0
    c4bc:	bne	c52c <Fantasy_Movie_parse_json_table+0x888>
    c4c0:	mov	r3, #2
    c4c4:	mov	r2, r4
    c4c8:	mov	r1, r5
    c4cc:	mov	r0, r6
    c4d0:	bl	a5c <flatcc_json_parser_match_symbol>
    c4d4:	mov	r1, r0
    c4d8:	cmp	r5, r1
    c4dc:	beq	c518 <Fantasy_Movie_parse_json_table+0x874>
    c4e0:	mov	r3, #3
    c4e4:	mov	r2, #7
    c4e8:	ldr	ip, [sp, #60]	; 0x3c
    c4ec:	ldr	r8, [pc, #380]	; c670 <Fantasy_Movie_parse_json_table+0x9cc>
    c4f0:	ldr	r0, [pc, #380]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c4f4:	str	r0, [sp, #12]
    c4f8:	str	r8, [sp, #8]
    c4fc:	str	ip, [sp, #4]
    c500:	str	r2, [sp]
    c504:	mov	r2, r4
    c508:	mov	r0, r6
    c50c:	bl	0 <flatcc_json_parser_union_type>
    c510:	mov	r1, r0
    c514:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c518:	mov	r2, r4
    c51c:	mov	r0, r6
    c520:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c524:	mov	r1, r0
    c528:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c52c:	mov	r2, r4
    c530:	mov	r1, r5
    c534:	mov	r0, r6
    c538:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c53c:	mov	r1, r0
    c540:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c544:	and	r0, r0, #-16777216	; 0xff000000
    c548:	eor	ip, r1, #101	; 0x65
    c54c:	eor	ip, ip, #27904	; 0x6d00
    c550:	eor	ip, ip, #6356992	; 0x610000
    c554:	eor	ip, ip, #1660944384	; 0x63000000
    c558:	eor	r0, r0, #1862270976	; 0x6f000000
    c55c:	orr	ip, ip, r0
    c560:	cmp	ip, #0
    c564:	bne	c5cc <Fantasy_Movie_parse_json_table+0x928>
    c568:	mov	r3, #5
    c56c:	mov	r2, r4
    c570:	mov	r1, r5
    c574:	mov	r0, r6
    c578:	bl	a5c <flatcc_json_parser_match_symbol>
    c57c:	mov	r1, r0
    c580:	cmp	r5, r1
    c584:	beq	c5b8 <Fantasy_Movie_parse_json_table+0x914>
    c588:	mov	r3, #3
    c58c:	mov	r0, #7
    c590:	ldr	r2, [sp, #60]	; 0x3c
    c594:	ldr	ip, [pc, #216]	; c674 <Fantasy_Movie_parse_json_table+0x9d0>
    c598:	str	ip, [sp, #8]
    c59c:	str	r2, [sp, #4]
    c5a0:	str	r0, [sp]
    c5a4:	mov	r2, r4
    c5a8:	mov	r0, r6
    c5ac:	bl	0 <flatcc_json_parser_union>
    c5b0:	mov	r1, r0
    c5b4:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c5b8:	mov	r2, r4
    c5bc:	mov	r0, r6
    c5c0:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5c4:	mov	r1, r0
    c5c8:	b	c5e0 <Fantasy_Movie_parse_json_table+0x93c>
    c5cc:	mov	r2, r4
    c5d0:	mov	r1, r5
    c5d4:	mov	r0, r6
    c5d8:	bl	0 <flatcc_json_parser_unmatched_symbol>
    c5dc:	mov	r1, r0
    c5e0:	add	r3, sp, #56	; 0x38
    c5e4:	mov	r2, r4
    c5e8:	mov	r0, r6
    c5ec:	bl	72c <flatcc_json_parser_object_end>
    c5f0:	mov	r5, r0
    c5f4:	b	bd34 <Fantasy_Movie_parse_json_table+0x90>
    c5f8:	ldr	r1, [r6, #24]
    c5fc:	cmp	r1, #0
    c600:	bne	c638 <Fantasy_Movie_parse_json_table+0x994>
    c604:	ldr	r3, [sp, #60]	; 0x3c
    c608:	mov	r2, r4
    c60c:	mov	r1, r5
    c610:	mov	r0, r6
    c614:	bl	0 <flatcc_json_parser_finalize_unions>
    c618:	mov	r5, r0
    c61c:	ldr	r0, [r6]
    c620:	bl	0 <flatcc_builder_end_table>
    c624:	str	r0, [r7]
    c628:	cmp	r0, #0
    c62c:	beq	c638 <Fantasy_Movie_parse_json_table+0x994>
    c630:	mov	r0, r5
    c634:	b	c64c <Fantasy_Movie_parse_json_table+0x9a8>
    c638:	mov	r3, #33	; 0x21
    c63c:	mov	r2, r4
    c640:	mov	r1, r5
    c644:	mov	r0, r6
    c648:	bl	0 <flatcc_json_parser_set_error>
    c64c:	ldr	r4, [sp, #32]
    c650:	ldr	r5, [sp, #36]	; 0x24
    c654:	ldr	r6, [sp, #40]	; 0x28
    c658:	ldr	r7, [sp, #44]	; 0x2c
    c65c:	ldr	r8, [sp, #48]	; 0x30
    c660:	ldr	r9, [sp, #52]	; 0x34
    c664:	ldr	lr, [sp, #24]
    c668:	add	sp, sp, #64	; 0x40
    c66c:	bx	lr
    c670:	.word	0x0000028c
    c674:	.word	0x00000000
    c678:	.word	0x0000029c
    c67c:	.word	0x000002bc
    c680:	.word	0x000002ac
    c684:	.word	0x0000027c
    c688:	.word	0x00000000

0000c68c <monster_test_local_MyGame_Example_json_parser_enum>:
    c68c:	mov	ip, sp
    c690:	sub	sp, sp, #56	; 0x38
    c694:	str	ip, [sp, #8]
    c698:	str	lr, [sp, #12]
    c69c:	str	r4, [sp, #24]
    c6a0:	str	r5, [sp, #28]
    c6a4:	str	r6, [sp, #32]
    c6a8:	str	r7, [sp, #36]	; 0x24
    c6ac:	str	r8, [sp, #40]	; 0x28
    c6b0:	str	r9, [sp, #44]	; 0x2c
    c6b4:	str	sl, [sp, #48]	; 0x30
    c6b8:	str	fp, [sp, #52]	; 0x34
    c6bc:	ldr	ip, [ip, #4]
    c6c0:	str	ip, [sp, #20]
    c6c4:	ldr	ip, [sp, #8]
    c6c8:	ldr	r7, [ip]
    c6cc:	str	r3, [sp, #16]
    c6d0:	mov	r6, r2
    c6d4:	mov	r9, r1
    c6d8:	mov	r5, r0
    c6dc:	mov	r8, r9
    c6e0:	mov	r1, r6
    c6e4:	mov	r0, r9
    c6e8:	bl	590 <flatcc_json_parser_symbol_part>
    c6ec:	mov	sl, r1
    c6f0:	mov	fp, r0
    c6f4:	mov	r2, sl
    c6f8:	movw	ip, #30815	; 0x785f
    c6fc:	movt	ip, #26725	; 0x6865
    c700:	cmp	r2, ip
    c704:	bne	c720 <monster_test_local_MyGame_Example_json_parser_enum+0x94>
    c708:	mov	r2, fp
    c70c:	movw	r3, #30061	; 0x756d
    c710:	movt	r3, #25966	; 0x656e
    c714:	cmp	r2, r3
    c718:	bcc	c9dc <monster_test_local_MyGame_Example_json_parser_enum+0x350>
    c71c:	b	c734 <monster_test_local_MyGame_Example_json_parser_enum+0xa8>
    c720:	mov	ip, sl
    c724:	movw	r0, #30815	; 0x785f
    c728:	movt	r0, #26725	; 0x6865
    c72c:	cmp	ip, r0
    c730:	bcc	c9dc <monster_test_local_MyGame_Example_json_parser_enum+0x350>
    c734:	mov	r2, sl
    c738:	movw	r1, #29791	; 0x745f
    c73c:	movt	r1, #26990	; 0x696e
    c740:	cmp	r2, r1
    c744:	bne	c760 <monster_test_local_MyGame_Example_json_parser_enum+0xd4>
    c748:	mov	r2, fp
    c74c:	movw	r3, #30061	; 0x756d
    c750:	movt	r3, #25966	; 0x656e
    c754:	cmp	r2, r3
    c758:	bcc	c960 <monster_test_local_MyGame_Example_json_parser_enum+0x2d4>
    c75c:	b	c774 <monster_test_local_MyGame_Example_json_parser_enum+0xe8>
    c760:	mov	r1, sl
    c764:	movw	ip, #29791	; 0x745f
    c768:	movt	ip, #26990	; 0x696e
    c76c:	cmp	r1, ip
    c770:	bcc	c960 <monster_test_local_MyGame_Example_json_parser_enum+0x2d4>
    c774:	mov	r0, fp
    c778:	mov	ip, sl
    c77c:	movw	r1, #26463	; 0x675f
    c780:	movt	r1, #28261	; 0x6e65
    c784:	cmp	ip, r1
    c788:	bne	c7a0 <monster_test_local_MyGame_Example_json_parser_enum+0x114>
    c78c:	movw	r3, #30061	; 0x756d
    c790:	movt	r3, #25966	; 0x656e
    c794:	cmp	r0, r3
    c798:	bcc	c8e4 <monster_test_local_MyGame_Example_json_parser_enum+0x258>
    c79c:	b	c7b4 <monster_test_local_MyGame_Example_json_parser_enum+0x128>
    c7a0:	mov	ip, sl
    c7a4:	movw	r1, #26463	; 0x675f
    c7a8:	movt	r1, #28261	; 0x6e65
    c7ac:	cmp	ip, r1
    c7b0:	bcc	c8e4 <monster_test_local_MyGame_Example_json_parser_enum+0x258>
    c7b4:	mov	r2, sl
    c7b8:	eor	r3, r2, #95	; 0x5f
    c7bc:	eor	r3, r3, #26368	; 0x6700
    c7c0:	eor	r3, r3, #6619136	; 0x650000
    c7c4:	eor	r3, r3, #1845493760	; 0x6e000000
    c7c8:	mov	ip, fp
    c7cc:	eor	r2, ip, #109	; 0x6d
    c7d0:	eor	r2, r2, #29952	; 0x7500
    c7d4:	eor	r2, r2, #7208960	; 0x6e0000
    c7d8:	eor	r2, r2, #1694498816	; 0x65000000
    c7dc:	orr	r0, r3, r2
    c7e0:	cmp	r0, #0
    c7e4:	bne	c830 <monster_test_local_MyGame_Example_json_parser_enum+0x1a4>
    c7e8:	mov	r4, r9
    c7ec:	mov	r3, #8
    c7f0:	mov	r2, r6
    c7f4:	mov	r1, r4
    c7f8:	mov	r0, r5
    c7fc:	bl	5b0 <flatcc_json_parser_match_scope>
    c800:	mov	r9, r0
    c804:	cmp	r9, r4
    c808:	beq	c830 <monster_test_local_MyGame_Example_json_parser_enum+0x1a4>
    c80c:	ldr	ip, [sp, #20]
    c810:	str	ip, [sp, #4]
    c814:	str	r7, [sp]
    c818:	ldr	r3, [sp, #16]
    c81c:	mov	r2, r6
    c820:	mov	r1, r9
    c824:	mov	r0, r5
    c828:	bl	33e4 <MyGame_Example_neg_enum_parse_json_enum>
    c82c:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c830:	eor	r1, sl, #101	; 0x65
    c834:	eor	r1, r1, #226304	; 0x37400
    c838:	eor	r1, r1, #40632320	; 0x26c0000
    c83c:	eor	r1, r1, #1811939328	; 0x6c000000
    c840:	eor	r0, fp, #121	; 0x79
    c844:	eor	r0, r0, #29696	; 0x7400
    c848:	eor	r0, r0, #225443840	; 0xd700000
    c84c:	eor	r0, r0, #1610612736	; 0x60000000
    c850:	orr	r1, r1, r0
    c854:	cmp	r1, #0
    c858:	bne	c8dc <monster_test_local_MyGame_Example_json_parser_enum+0x250>
    c85c:	add	r4, r9, #8
    c860:	mov	r1, r6
    c864:	mov	r0, r4
    c868:	bl	590 <flatcc_json_parser_symbol_part>
    c86c:	mov	r2, #0
    c870:	eor	r3, r1, #109	; 0x6d
    c874:	eor	r3, r3, #29952	; 0x7500
    c878:	eor	r3, r3, #7208960	; 0x6e0000
    c87c:	eor	r3, r3, #1694498816	; 0x65000000
    c880:	orr	r1, r3, r2
    c884:	cmp	r1, #0
    c888:	bne	c8d4 <monster_test_local_MyGame_Example_json_parser_enum+0x248>
    c88c:	mov	r3, #4
    c890:	mov	r2, r6
    c894:	mov	r1, r4
    c898:	mov	r0, r5
    c89c:	bl	5b0 <flatcc_json_parser_match_scope>
    c8a0:	mov	r1, r0
    c8a4:	cmp	r1, r4
    c8a8:	beq	c8cc <monster_test_local_MyGame_Example_json_parser_enum+0x240>
    c8ac:	ldr	ip, [sp, #20]
    c8b0:	str	ip, [sp, #4]
    c8b4:	str	r7, [sp]
    c8b8:	ldr	r3, [sp, #16]
    c8bc:	mov	r2, r6
    c8c0:	mov	r0, r5
    c8c4:	bl	4490 <MyGame_Example_notemptyenum_parse_json_enum>
    c8c8:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c8cc:	mov	r0, r8
    c8d0:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c8d4:	mov	r0, r8
    c8d8:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c8dc:	mov	r0, r8
    c8e0:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c8e4:	eor	r1, sl, #95	; 0x5f
    c8e8:	eor	r1, r1, #160768	; 0x27400
    c8ec:	eor	r1, r1, #23855104	; 0x16c0000
    c8f0:	eor	r1, r1, #1744830464	; 0x68000000
    c8f4:	eor	r0, fp, #109	; 0x6d
    c8f8:	eor	r0, r0, #29952	; 0x7500
    c8fc:	eor	r0, r0, #7208960	; 0x6e0000
    c900:	eor	r0, r0, #1694498816	; 0x65000000
    c904:	orr	r1, r1, r0
    c908:	cmp	r1, #0
    c90c:	bne	c958 <monster_test_local_MyGame_Example_json_parser_enum+0x2cc>
    c910:	mov	r3, #8
    c914:	mov	r2, r6
    c918:	mov	r1, r9
    c91c:	mov	r0, r5
    c920:	bl	5b0 <flatcc_json_parser_match_scope>
    c924:	mov	r1, r0
    c928:	cmp	r1, r9
    c92c:	beq	c950 <monster_test_local_MyGame_Example_json_parser_enum+0x2c4>
    c930:	ldr	ip, [sp, #20]
    c934:	str	ip, [sp, #4]
    c938:	str	r7, [sp]
    c93c:	ldr	r3, [sp, #16]
    c940:	mov	r2, r6
    c944:	mov	r0, r5
    c948:	bl	35d8 <MyGame_Example_int_enum_parse_json_enum>
    c94c:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c950:	mov	r0, r8
    c954:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c958:	mov	r0, r8
    c95c:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c960:	eor	r3, sl, #95	; 0x5f
    c964:	eor	r3, r3, #96256	; 0x17800
    c968:	eor	r3, r3, #6553600	; 0x640000
    c96c:	eor	r3, r3, #1744830464	; 0x68000000
    c970:	eor	r2, fp, #109	; 0x6d
    c974:	eor	r2, r2, #29952	; 0x7500
    c978:	eor	r2, r2, #7208960	; 0x6e0000
    c97c:	eor	r2, r2, #1694498816	; 0x65000000
    c980:	orr	r2, r3, r2
    c984:	cmp	r2, #0
    c988:	bne	c9d4 <monster_test_local_MyGame_Example_json_parser_enum+0x348>
    c98c:	mov	r3, #8
    c990:	mov	r2, r6
    c994:	mov	r1, r9
    c998:	mov	r0, r5
    c99c:	bl	5b0 <flatcc_json_parser_match_scope>
    c9a0:	mov	r1, r0
    c9a4:	cmp	r1, r9
    c9a8:	beq	c9cc <monster_test_local_MyGame_Example_json_parser_enum+0x340>
    c9ac:	ldr	ip, [sp, #20]
    c9b0:	str	ip, [sp, #4]
    c9b4:	str	r7, [sp]
    c9b8:	ldr	r3, [sp, #16]
    c9bc:	mov	r2, r6
    c9c0:	mov	r0, r5
    c9c4:	bl	38a0 <MyGame_Example_hex_enum_parse_json_enum>
    c9c8:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c9cc:	mov	r0, r8
    c9d0:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c9d4:	mov	r0, r8
    c9d8:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    c9dc:	mov	r3, fp
    c9e0:	mov	r0, sl
    c9e4:	movw	r1, #27759	; 0x6c6f
    c9e8:	movt	r1, #17263	; 0x436f
    c9ec:	cmp	r0, r1
    c9f0:	bne	ca04 <monster_test_local_MyGame_Example_json_parser_enum+0x378>
    c9f4:	mov	ip, #1912602624	; 0x72000000
    c9f8:	cmp	r3, ip
    c9fc:	bcc	cafc <monster_test_local_MyGame_Example_json_parser_enum+0x470>
    ca00:	b	ca18 <monster_test_local_MyGame_Example_json_parser_enum+0x38c>
    ca04:	mov	r2, sl
    ca08:	movw	r3, #27759	; 0x6c6f
    ca0c:	movt	r3, #17263	; 0x436f
    ca10:	cmp	r2, r3
    ca14:	bcc	cafc <monster_test_local_MyGame_Example_json_parser_enum+0x470>
    ca18:	mov	r0, sl
    ca1c:	bic	ip, r0, #255	; 0xff
    ca20:	mov	r1, #0
    ca24:	eor	r0, ip, #28416	; 0x6f00
    ca28:	eor	r0, r0, #7274496	; 0x6f0000
    ca2c:	eor	r0, r0, #1174405120	; 0x46000000
    ca30:	orr	r3, r0, r1
    ca34:	cmp	r3, #0
    ca38:	beq	cab0 <monster_test_local_MyGame_Example_json_parser_enum+0x424>
    ca3c:	and	r2, fp, #-16777216	; 0xff000000
    ca40:	eor	r1, sl, #111	; 0x6f
    ca44:	eor	r1, r1, #224256	; 0x36c00
    ca48:	eor	r1, r1, #57409536	; 0x36c0000
    ca4c:	eor	r1, r1, #1073741824	; 0x40000000
    ca50:	eor	ip, r2, #1912602624	; 0x72000000
    ca54:	orr	r1, r1, ip
    ca58:	cmp	r1, #0
    ca5c:	bne	caa8 <monster_test_local_MyGame_Example_json_parser_enum+0x41c>
    ca60:	mov	r3, #5
    ca64:	mov	r2, r6
    ca68:	mov	r1, r9
    ca6c:	mov	r0, r5
    ca70:	bl	5b0 <flatcc_json_parser_match_scope>
    ca74:	mov	r1, r0
    ca78:	cmp	r1, r9
    ca7c:	beq	caa0 <monster_test_local_MyGame_Example_json_parser_enum+0x414>
    ca80:	ldr	ip, [sp, #20]
    ca84:	str	ip, [sp, #4]
    ca88:	str	r7, [sp]
    ca8c:	ldr	r3, [sp, #16]
    ca90:	mov	r2, r6
    ca94:	mov	r0, r5
    ca98:	bl	3aa8 <MyGame_Example_Color_parse_json_enum>
    ca9c:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    caa0:	mov	r0, r8
    caa4:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    caa8:	mov	r0, r8
    caac:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    cab0:	mov	r1, r9
    cab4:	mov	r4, r1
    cab8:	mov	r3, #3
    cabc:	mov	r2, r6
    cac0:	mov	r0, r5
    cac4:	bl	5b0 <flatcc_json_parser_match_scope>
    cac8:	cmp	r0, r4
    cacc:	beq	caf4 <monster_test_local_MyGame_Example_json_parser_enum+0x468>
    cad0:	ldr	ip, [sp, #20]
    cad4:	str	ip, [sp, #4]
    cad8:	str	r7, [sp]
    cadc:	ldr	r3, [sp, #16]
    cae0:	mov	r2, r6
    cae4:	mov	r1, r0
    cae8:	mov	r0, r5
    caec:	bl	3218 <MyGame_Example_Foo_parse_json_enum>
    caf0:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    caf4:	mov	r0, r8
    caf8:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    cafc:	bic	r3, sl, #255	; 0xff
    cb00:	mov	r0, #0
    cb04:	eor	ip, r3, #30976	; 0x7900
    cb08:	eor	ip, ip, #7208960	; 0x6e0000
    cb0c:	eor	ip, ip, #1090519040	; 0x41000000
    cb10:	orr	ip, ip, r0
    cb14:	cmp	ip, #0
    cb18:	bne	cb64 <monster_test_local_MyGame_Example_json_parser_enum+0x4d8>
    cb1c:	mov	r3, #3
    cb20:	mov	r2, r6
    cb24:	mov	r1, r9
    cb28:	mov	r0, r5
    cb2c:	bl	5b0 <flatcc_json_parser_match_scope>
    cb30:	mov	r1, r0
    cb34:	cmp	r1, r9
    cb38:	beq	cb5c <monster_test_local_MyGame_Example_json_parser_enum+0x4d0>
    cb3c:	ldr	ip, [sp, #20]
    cb40:	str	ip, [sp, #4]
    cb44:	str	r7, [sp]
    cb48:	ldr	r3, [sp, #16]
    cb4c:	mov	r2, r6
    cb50:	mov	r0, r5
    cb54:	bl	3e40 <MyGame_Example_Any_parse_json_enum>
    cb58:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    cb5c:	mov	r0, r8
    cb60:	b	cb68 <monster_test_local_MyGame_Example_json_parser_enum+0x4dc>
    cb64:	mov	r0, r8
    cb68:	ldr	r4, [sp, #24]
    cb6c:	ldr	r5, [sp, #28]
    cb70:	ldr	r6, [sp, #32]
    cb74:	ldr	r7, [sp, #36]	; 0x24
    cb78:	ldr	r8, [sp, #40]	; 0x28
    cb7c:	ldr	r9, [sp, #44]	; 0x2c
    cb80:	ldr	sl, [sp, #48]	; 0x30
    cb84:	ldr	fp, [sp, #52]	; 0x34
    cb88:	ldr	lr, [sp, #12]
    cb8c:	add	sp, sp, #56	; 0x38
    cb90:	bx	lr

0000cb94 <monster_test_local_Fantasy_json_parser_enum>:
    cb94:	mov	ip, sp
    cb98:	sub	sp, sp, #48	; 0x30
    cb9c:	str	ip, [sp, #8]
    cba0:	str	lr, [sp, #12]
    cba4:	str	r4, [sp, #16]
    cba8:	str	r5, [sp, #20]
    cbac:	str	r6, [sp, #24]
    cbb0:	str	r7, [sp, #28]
    cbb4:	str	r8, [sp, #32]
    cbb8:	str	r9, [sp, #36]	; 0x24
    cbbc:	str	sl, [sp, #40]	; 0x28
    cbc0:	ldr	r5, [ip, #4]
    cbc4:	ldr	r9, [ip]
    cbc8:	mov	r6, r3
    cbcc:	mov	r7, r2
    cbd0:	mov	r4, r1
    cbd4:	mov	r8, r0
    cbd8:	mov	r1, r7
    cbdc:	mov	r0, r4
    cbe0:	bl	590 <flatcc_json_parser_symbol_part>
    cbe4:	eor	r2, r1, #114	; 0x72
    cbe8:	eor	r2, r2, #24832	; 0x6100
    cbec:	eor	r2, r2, #57147392	; 0x3680000
    cbf0:	eor	r2, r2, #1073741824	; 0x40000000
    cbf4:	eor	r0, r0, #101	; 0x65
    cbf8:	eor	r0, r0, #226304	; 0x37400
    cbfc:	eor	r0, r0, #23068672	; 0x1600000
    cc00:	eor	r0, r0, #1610612736	; 0x60000000
    cc04:	orr	r1, r2, r0
    cc08:	cmp	r1, #0
    cc0c:	bne	cc74 <monster_test_local_Fantasy_json_parser_enum+0xe0>
    cc10:	add	sl, r4, #8
    cc14:	mov	r1, r7
    cc18:	mov	r0, sl
    cc1c:	bl	590 <flatcc_json_parser_symbol_part>
    cc20:	and	r0, r1, #-16777216	; 0xff000000
    cc24:	mov	r1, #0
    cc28:	eor	r3, r0, #1912602624	; 0x72000000
    cc2c:	orr	r0, r3, r1
    cc30:	cmp	r0, #0
    cc34:	bne	cc74 <monster_test_local_Fantasy_json_parser_enum+0xe0>
    cc38:	mov	r3, #1
    cc3c:	mov	r2, r7
    cc40:	mov	r1, sl
    cc44:	mov	r0, r8
    cc48:	bl	5b0 <flatcc_json_parser_match_scope>
    cc4c:	mov	r1, r0
    cc50:	cmp	r1, sl
    cc54:	beq	cc74 <monster_test_local_Fantasy_json_parser_enum+0xe0>
    cc58:	str	r5, [sp, #4]
    cc5c:	str	r9, [sp]
    cc60:	mov	r3, r6
    cc64:	mov	r2, r7
    cc68:	mov	r0, r8
    cc6c:	bl	b804 <Fantasy_Character_parse_json_enum>
    cc70:	mov	r4, r0
    cc74:	mov	r0, r4
    cc78:	ldr	r4, [sp, #16]
    cc7c:	ldr	r5, [sp, #20]
    cc80:	ldr	r6, [sp, #24]
    cc84:	ldr	r7, [sp, #28]
    cc88:	ldr	r8, [sp, #32]
    cc8c:	ldr	r9, [sp, #36]	; 0x24
    cc90:	ldr	sl, [sp, #40]	; 0x28
    cc94:	ldr	lr, [sp, #12]
    cc98:	add	sp, sp, #48	; 0x30
    cc9c:	bx	lr

0000cca0 <monster_test_global_json_parser_enum>:
    cca0:	mov	ip, sp
    cca4:	sub	sp, sp, #56	; 0x38
    cca8:	str	ip, [sp, #8]
    ccac:	str	lr, [sp, #12]
    ccb0:	str	r4, [sp, #24]
    ccb4:	str	r5, [sp, #28]
    ccb8:	str	r6, [sp, #32]
    ccbc:	str	r7, [sp, #36]	; 0x24
    ccc0:	str	r8, [sp, #40]	; 0x28
    ccc4:	str	r9, [sp, #44]	; 0x2c
    ccc8:	str	sl, [sp, #48]	; 0x30
    cccc:	str	fp, [sp, #52]	; 0x34
    ccd0:	ldr	ip, [ip, #4]
    ccd4:	str	ip, [sp, #16]
    ccd8:	ldr	ip, [sp, #8]
    ccdc:	ldr	ip, [ip]
    cce0:	str	ip, [sp, #20]
    cce4:	mov	r7, r3
    cce8:	mov	r6, r2
    ccec:	mov	r4, r1
    ccf0:	mov	r5, r0
    ccf4:	mov	sl, r4
    ccf8:	mov	r1, r6
    ccfc:	mov	r0, r4
    cd00:	bl	590 <flatcc_json_parser_symbol_part>
    cd04:	mov	r2, r1
    cd08:	movw	r3, #18273	; 0x4761
    cd0c:	movt	r3, #19833	; 0x4d79
    cd10:	cmp	r2, r3
    cd14:	bne	cd30 <monster_test_global_json_parser_enum+0x90>
    cd18:	mov	r2, r0
    cd1c:	movw	r3, #11845	; 0x2e45
    cd20:	movt	r3, #28005	; 0x6d65
    cd24:	cmp	r2, r3
    cd28:	bcc	d530 <monster_test_global_json_parser_enum+0x890>
    cd2c:	b	cd44 <monster_test_global_json_parser_enum+0xa4>
    cd30:	mov	r3, r1
    cd34:	movw	r2, #18273	; 0x4761
    cd38:	movt	r2, #19833	; 0x4d79
    cd3c:	cmp	r3, r2
    cd40:	bcc	d530 <monster_test_global_json_parser_enum+0x890>
    cd44:	mov	r3, r1
    cd48:	eor	r3, r3, #97	; 0x61
    cd4c:	eor	r3, r3, #18176	; 0x4700
    cd50:	eor	r3, r3, #7929856	; 0x790000
    cd54:	eor	r3, r3, #1291845632	; 0x4d000000
    cd58:	mov	ip, r0
    cd5c:	eor	r2, ip, #69	; 0x45
    cd60:	eor	r2, r2, #11776	; 0x2e00
    cd64:	eor	r2, r2, #6619136	; 0x650000
    cd68:	eor	r2, r2, #1828716544	; 0x6d000000
    cd6c:	orr	r3, r3, r2
    cd70:	cmp	r3, #0
    cd74:	bne	d3b4 <monster_test_global_json_parser_enum+0x714>
    cd78:	add	r4, r4, #8
    cd7c:	mov	r1, r6
    cd80:	mov	r0, r4
    cd84:	bl	590 <flatcc_json_parser_symbol_part>
    cd88:	mov	r3, r1
    cd8c:	mov	r2, r0
    cd90:	movw	ip, #28016	; 0x6d70
    cd94:	movt	ip, #30817	; 0x7861
    cd98:	cmp	r3, ip
    cd9c:	bne	cdb4 <monster_test_global_json_parser_enum+0x114>
    cda0:	movw	r3, #11880	; 0x2e68
    cda4:	movt	r3, #27749	; 0x6c65
    cda8:	cmp	r2, r3
    cdac:	bcc	d14c <monster_test_global_json_parser_enum+0x4ac>
    cdb0:	b	cdc4 <monster_test_global_json_parser_enum+0x124>
    cdb4:	movw	ip, #28016	; 0x6d70
    cdb8:	movt	ip, #30817	; 0x7861
    cdbc:	cmp	r3, ip
    cdc0:	bcc	d14c <monster_test_global_json_parser_enum+0x4ac>
    cdc4:	mov	r2, r1
    cdc8:	movw	r3, #28016	; 0x6d70
    cdcc:	movt	r3, #30817	; 0x7861
    cdd0:	cmp	r2, r3
    cdd4:	bne	cdf0 <monster_test_global_json_parser_enum+0x150>
    cdd8:	mov	ip, r0
    cddc:	movw	r2, #11881	; 0x2e69
    cde0:	movt	r2, #27749	; 0x6c65
    cde4:	cmp	ip, r2
    cde8:	bcc	d084 <monster_test_global_json_parser_enum+0x3e4>
    cdec:	b	ce00 <monster_test_global_json_parser_enum+0x160>
    cdf0:	movw	r3, #28016	; 0x6d70
    cdf4:	movt	r3, #30817	; 0x7861
    cdf8:	cmp	r2, r3
    cdfc:	bcc	d084 <monster_test_global_json_parser_enum+0x3e4>
    ce00:	mov	r2, r1
    ce04:	movw	r3, #28016	; 0x6d70
    ce08:	movt	r3, #30817	; 0x7861
    ce0c:	cmp	r2, r3
    ce10:	bne	ce2c <monster_test_global_json_parser_enum+0x18c>
    ce14:	mov	r2, r0
    ce18:	movw	r3, #11886	; 0x2e6e
    ce1c:	movt	r3, #27749	; 0x6c65
    ce20:	cmp	r2, r3
    ce24:	bcc	cfc0 <monster_test_global_json_parser_enum+0x320>
    ce28:	b	ce3c <monster_test_global_json_parser_enum+0x19c>
    ce2c:	movw	r3, #28016	; 0x6d70
    ce30:	movt	r3, #30817	; 0x7861
    ce34:	cmp	r2, r3
    ce38:	bcc	cfc0 <monster_test_global_json_parser_enum+0x320>
    ce3c:	eor	r1, r1, #3440	; 0xd70
    ce40:	eor	r1, r1, #90112	; 0x16000
    ce44:	eor	r1, r1, #140509184	; 0x8600000
    ce48:	eor	r1, r1, #1879048192	; 0x70000000
    ce4c:	eor	ip, r0, #110	; 0x6e
    ce50:	eor	ip, ip, #11776	; 0x2e00
    ce54:	eor	ip, ip, #6619136	; 0x650000
    ce58:	eor	ip, ip, #1811939328	; 0x6c000000
    ce5c:	orr	r3, r1, ip
    ce60:	cmp	r3, #0
    ce64:	bne	cfb8 <monster_test_global_json_parser_enum+0x318>
    ce68:	add	fp, r4, #8
    ce6c:	mov	r1, r6
    ce70:	mov	r0, fp
    ce74:	bl	590 <flatcc_json_parser_symbol_part>
    ce78:	mov	r8, r1
    ce7c:	mov	r9, r0
    ce80:	mov	r2, r9
    ce84:	mov	r1, r8
    ce88:	bic	r3, r2, #255	; 0xff
    ce8c:	eor	r0, r1, #101	; 0x65
    ce90:	eor	r0, r0, #24320	; 0x5f00
    ce94:	eor	r0, r0, #6750208	; 0x670000
    ce98:	eor	r0, r0, #1694498816	; 0x65000000
    ce9c:	eor	ip, r3, #27904	; 0x6d00
    cea0:	eor	ip, ip, #7667712	; 0x750000
    cea4:	eor	ip, ip, #1845493760	; 0x6e000000
    cea8:	orr	r1, r0, ip
    ceac:	cmp	r1, #0
    ceb0:	bne	cf00 <monster_test_global_json_parser_enum+0x260>
    ceb4:	mov	r4, fp
    ceb8:	mov	r3, #7
    cebc:	mov	r2, r6
    cec0:	mov	r1, r4
    cec4:	mov	r0, r5
    cec8:	bl	5b0 <flatcc_json_parser_match_scope>
    cecc:	mov	fp, r0
    ced0:	cmp	fp, r4
    ced4:	beq	cf00 <monster_test_global_json_parser_enum+0x260>
    ced8:	ldr	ip, [sp, #16]
    cedc:	str	ip, [sp, #4]
    cee0:	ldr	ip, [sp, #20]
    cee4:	str	ip, [sp]
    cee8:	mov	r3, r7
    ceec:	mov	r2, r6
    cef0:	mov	r1, fp
    cef4:	mov	r0, r5
    cef8:	bl	33e4 <MyGame_Example_neg_enum_parse_json_enum>
    cefc:	b	d624 <monster_test_global_json_parser_enum+0x984>
    cf00:	eor	r2, r8, #109	; 0x6d
    cf04:	eor	r2, r2, #25856	; 0x6500
    cf08:	eor	r2, r2, #57933824	; 0x3740000
    cf0c:	eor	r2, r2, #1811939328	; 0x6c000000
    cf10:	eor	r1, r9, #101	; 0x65
    cf14:	eor	r1, r1, #30976	; 0x7900
    cf18:	eor	r1, r1, #7602176	; 0x740000
    cf1c:	eor	r1, r1, #1879048192	; 0x70000000
    cf20:	orr	r2, r2, r1
    cf24:	cmp	r2, #0
    cf28:	bne	cfb0 <monster_test_global_json_parser_enum+0x310>
    cf2c:	add	r4, fp, #8
    cf30:	mov	r1, r6
    cf34:	mov	r0, r4
    cf38:	bl	590 <flatcc_json_parser_symbol_part>
    cf3c:	bic	r2, r1, #255	; 0xff
    cf40:	mov	r3, #0
    cf44:	eor	ip, r2, #27904	; 0x6d00
    cf48:	eor	ip, ip, #7667712	; 0x750000
    cf4c:	eor	ip, ip, #1845493760	; 0x6e000000
    cf50:	orr	ip, ip, r3
    cf54:	cmp	ip, #0
    cf58:	bne	cfa8 <monster_test_global_json_parser_enum+0x308>
    cf5c:	mov	r3, #3
    cf60:	mov	r2, r6
    cf64:	mov	r1, r4
    cf68:	mov	r0, r5
    cf6c:	bl	5b0 <flatcc_json_parser_match_scope>
    cf70:	mov	r1, r0
    cf74:	cmp	r1, r4
    cf78:	beq	cfa0 <monster_test_global_json_parser_enum+0x300>
    cf7c:	ldr	ip, [sp, #16]
    cf80:	str	ip, [sp, #4]
    cf84:	ldr	ip, [sp, #20]
    cf88:	str	ip, [sp]
    cf8c:	mov	r3, r7
    cf90:	mov	r2, r6
    cf94:	mov	r0, r5
    cf98:	bl	4490 <MyGame_Example_notemptyenum_parse_json_enum>
    cf9c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    cfa0:	mov	r0, sl
    cfa4:	b	d624 <monster_test_global_json_parser_enum+0x984>
    cfa8:	mov	r0, sl
    cfac:	b	d624 <monster_test_global_json_parser_enum+0x984>
    cfb0:	mov	r0, sl
    cfb4:	b	d624 <monster_test_global_json_parser_enum+0x984>
    cfb8:	mov	r0, sl
    cfbc:	b	d624 <monster_test_global_json_parser_enum+0x984>
    cfc0:	eor	r3, r1, #3440	; 0xd70
    cfc4:	eor	r3, r3, #90112	; 0x16000
    cfc8:	eor	r3, r3, #140509184	; 0x8600000
    cfcc:	eor	r3, r3, #1879048192	; 0x70000000
    cfd0:	eor	r2, r0, #105	; 0x69
    cfd4:	eor	r2, r2, #11776	; 0x2e00
    cfd8:	eor	r2, r2, #6619136	; 0x650000
    cfdc:	eor	r2, r2, #1811939328	; 0x6c000000
    cfe0:	orr	ip, r3, r2
    cfe4:	cmp	ip, #0
    cfe8:	bne	d07c <monster_test_global_json_parser_enum+0x3dc>
    cfec:	add	r4, r4, #8
    cff0:	mov	r1, r6
    cff4:	mov	r0, r4
    cff8:	bl	590 <flatcc_json_parser_symbol_part>
    cffc:	bic	r0, r0, #255	; 0xff
    d000:	eor	ip, r1, #101	; 0x65
    d004:	eor	ip, ip, #24320	; 0x5f00
    d008:	eor	ip, ip, #41156608	; 0x2740000
    d00c:	eor	ip, ip, #1811939328	; 0x6c000000
    d010:	eor	r0, r0, #27904	; 0x6d00
    d014:	eor	r0, r0, #7667712	; 0x750000
    d018:	eor	r0, r0, #1845493760	; 0x6e000000
    d01c:	orr	ip, ip, r0
    d020:	cmp	ip, #0
    d024:	bne	d074 <monster_test_global_json_parser_enum+0x3d4>
    d028:	mov	r3, #7
    d02c:	mov	r2, r6
    d030:	mov	r1, r4
    d034:	mov	r0, r5
    d038:	bl	5b0 <flatcc_json_parser_match_scope>
    d03c:	mov	r1, r0
    d040:	cmp	r1, r4
    d044:	beq	d06c <monster_test_global_json_parser_enum+0x3cc>
    d048:	ldr	ip, [sp, #16]
    d04c:	str	ip, [sp, #4]
    d050:	ldr	ip, [sp, #20]
    d054:	str	ip, [sp]
    d058:	mov	r3, r7
    d05c:	mov	r2, r6
    d060:	mov	r0, r5
    d064:	bl	35d8 <MyGame_Example_int_enum_parse_json_enum>
    d068:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d06c:	mov	r0, sl
    d070:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d074:	mov	r0, sl
    d078:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d07c:	mov	r0, sl
    d080:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d084:	eor	r1, r1, #3440	; 0xd70
    d088:	eor	r1, r1, #90112	; 0x16000
    d08c:	eor	r1, r1, #140509184	; 0x8600000
    d090:	eor	r1, r1, #1879048192	; 0x70000000
    d094:	eor	ip, r0, #616	; 0x268
    d098:	eor	ip, ip, #76800	; 0x12c00
    d09c:	eor	ip, ip, #6553600	; 0x640000
    d0a0:	eor	ip, ip, #1811939328	; 0x6c000000
    d0a4:	orr	r3, r1, ip
    d0a8:	cmp	r3, #0
    d0ac:	bne	d144 <monster_test_global_json_parser_enum+0x4a4>
    d0b0:	add	r4, r4, #8
    d0b4:	mov	r1, r6
    d0b8:	mov	r0, r4
    d0bc:	bl	590 <flatcc_json_parser_symbol_part>
    d0c0:	bic	r0, r0, #255	; 0xff
    d0c4:	eor	r1, r1, #101	; 0x65
    d0c8:	eor	r1, r1, #24320	; 0x5f00
    d0cc:	eor	r1, r1, #24641536	; 0x1780000
    d0d0:	eor	r1, r1, #1677721600	; 0x64000000
    d0d4:	eor	r2, r0, #27904	; 0x6d00
    d0d8:	eor	r2, r2, #7667712	; 0x750000
    d0dc:	eor	r2, r2, #1845493760	; 0x6e000000
    d0e0:	orr	r3, r1, r2
    d0e4:	cmp	r3, #0
    d0e8:	bne	d13c <monster_test_global_json_parser_enum+0x49c>
    d0ec:	mov	r1, r4
    d0f0:	mov	r4, r1
    d0f4:	mov	r3, #7
    d0f8:	mov	r2, r6
    d0fc:	mov	r0, r5
    d100:	bl	5b0 <flatcc_json_parser_match_scope>
    d104:	cmp	r0, r4
    d108:	beq	d134 <monster_test_global_json_parser_enum+0x494>
    d10c:	ldr	ip, [sp, #16]
    d110:	str	ip, [sp, #4]
    d114:	ldr	ip, [sp, #20]
    d118:	str	ip, [sp]
    d11c:	mov	r3, r7
    d120:	mov	r2, r6
    d124:	mov	r1, r0
    d128:	mov	r0, r5
    d12c:	bl	38a0 <MyGame_Example_hex_enum_parse_json_enum>
    d130:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d134:	mov	r0, sl
    d138:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d13c:	mov	r0, sl
    d140:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d144:	mov	r0, sl
    d148:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d14c:	mov	r2, r0
    d150:	mov	ip, r1
    d154:	movw	r3, #28016	; 0x6d70
    d158:	movt	r3, #30817	; 0x7861
    d15c:	cmp	ip, r3
    d160:	bne	d178 <monster_test_global_json_parser_enum+0x4d8>
    d164:	movw	r3, #11843	; 0x2e43
    d168:	movt	r3, #27749	; 0x6c65
    d16c:	cmp	r2, r3
    d170:	bcc	d2fc <monster_test_global_json_parser_enum+0x65c>
    d174:	b	d18c <monster_test_global_json_parser_enum+0x4ec>
    d178:	mov	ip, r1
    d17c:	movw	r2, #28016	; 0x6d70
    d180:	movt	r2, #30817	; 0x7861
    d184:	cmp	ip, r2
    d188:	bcc	d2fc <monster_test_global_json_parser_enum+0x65c>
    d18c:	mov	r3, r1
    d190:	eor	r3, r3, #3440	; 0xd70
    d194:	eor	r3, r3, #90112	; 0x16000
    d198:	eor	r3, r3, #140509184	; 0x8600000
    d19c:	eor	r3, r3, #1879048192	; 0x70000000
    d1a0:	mov	r2, r0
    d1a4:	eor	r2, r2, #67	; 0x43
    d1a8:	eor	r2, r2, #11776	; 0x2e00
    d1ac:	eor	r2, r2, #6619136	; 0x650000
    d1b0:	eor	r2, r2, #1811939328	; 0x6c000000
    d1b4:	orr	r3, r3, r2
    d1b8:	cmp	r3, #0
    d1bc:	beq	d278 <monster_test_global_json_parser_enum+0x5d8>
    d1c0:	eor	r1, r1, #3440	; 0xd70
    d1c4:	eor	r1, r1, #90112	; 0x16000
    d1c8:	eor	r1, r1, #140509184	; 0x8600000
    d1cc:	eor	r1, r1, #1879048192	; 0x70000000
    d1d0:	eor	ip, r0, #70	; 0x46
    d1d4:	eor	ip, ip, #11776	; 0x2e00
    d1d8:	eor	ip, ip, #6619136	; 0x650000
    d1dc:	eor	ip, ip, #1811939328	; 0x6c000000
    d1e0:	orr	ip, r1, ip
    d1e4:	cmp	ip, #0
    d1e8:	bne	d270 <monster_test_global_json_parser_enum+0x5d0>
    d1ec:	add	r4, r4, #8
    d1f0:	mov	r1, r6
    d1f4:	mov	r0, r4
    d1f8:	bl	590 <flatcc_json_parser_symbol_part>
    d1fc:	bic	r3, r1, #255	; 0xff
    d200:	bic	r3, r3, #65280	; 0xff00
    d204:	mov	r1, #0
    d208:	eor	r3, r3, #7274496	; 0x6f0000
    d20c:	eor	r3, r3, #1862270976	; 0x6f000000
    d210:	orr	r0, r3, r1
    d214:	cmp	r0, #0
    d218:	bne	d268 <monster_test_global_json_parser_enum+0x5c8>
    d21c:	mov	r3, #2
    d220:	mov	r2, r6
    d224:	mov	r1, r4
    d228:	mov	r0, r5
    d22c:	bl	5b0 <flatcc_json_parser_match_scope>
    d230:	mov	r1, r0
    d234:	cmp	r1, r4
    d238:	beq	d260 <monster_test_global_json_parser_enum+0x5c0>
    d23c:	ldr	ip, [sp, #16]
    d240:	str	ip, [sp, #4]
    d244:	ldr	ip, [sp, #20]
    d248:	str	ip, [sp]
    d24c:	mov	r3, r7
    d250:	mov	r2, r6
    d254:	mov	r0, r5
    d258:	bl	3218 <MyGame_Example_Foo_parse_json_enum>
    d25c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d260:	mov	r0, sl
    d264:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d268:	mov	r0, sl
    d26c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d270:	mov	r0, sl
    d274:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d278:	add	r4, r4, #8
    d27c:	mov	r1, r6
    d280:	mov	r0, r4
    d284:	bl	590 <flatcc_json_parser_symbol_part>
    d288:	mov	r0, #0
    d28c:	eor	r1, r1, #114	; 0x72
    d290:	eor	r1, r1, #28416	; 0x6f00
    d294:	eor	r1, r1, #57409536	; 0x36c0000
    d298:	eor	r1, r1, #1811939328	; 0x6c000000
    d29c:	orr	r2, r1, r0
    d2a0:	cmp	r2, #0
    d2a4:	bne	d2f4 <monster_test_global_json_parser_enum+0x654>
    d2a8:	mov	r3, #4
    d2ac:	mov	r2, r6
    d2b0:	mov	r1, r4
    d2b4:	mov	r0, r5
    d2b8:	bl	5b0 <flatcc_json_parser_match_scope>
    d2bc:	mov	r1, r0
    d2c0:	cmp	r1, r4
    d2c4:	beq	d2ec <monster_test_global_json_parser_enum+0x64c>
    d2c8:	ldr	ip, [sp, #16]
    d2cc:	str	ip, [sp, #4]
    d2d0:	ldr	ip, [sp, #20]
    d2d4:	str	ip, [sp]
    d2d8:	mov	r3, r7
    d2dc:	mov	r2, r6
    d2e0:	mov	r0, r5
    d2e4:	bl	3aa8 <MyGame_Example_Color_parse_json_enum>
    d2e8:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d2ec:	mov	r0, sl
    d2f0:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d2f4:	mov	r0, sl
    d2f8:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d2fc:	eor	r1, r1, #3440	; 0xd70
    d300:	eor	r1, r1, #90112	; 0x16000
    d304:	eor	r1, r1, #140509184	; 0x8600000
    d308:	eor	r1, r1, #1879048192	; 0x70000000
    d30c:	eor	ip, r0, #65	; 0x41
    d310:	eor	ip, ip, #11776	; 0x2e00
    d314:	eor	ip, ip, #6619136	; 0x650000
    d318:	eor	ip, ip, #1811939328	; 0x6c000000
    d31c:	orr	r0, r1, ip
    d320:	cmp	r0, #0
    d324:	bne	d3ac <monster_test_global_json_parser_enum+0x70c>
    d328:	add	r4, r4, #8
    d32c:	mov	r1, r6
    d330:	mov	r0, r4
    d334:	bl	590 <flatcc_json_parser_symbol_part>
    d338:	bic	ip, r1, #255	; 0xff
    d33c:	bic	ip, ip, #65280	; 0xff00
    d340:	mov	r3, #0
    d344:	eor	ip, ip, #7929856	; 0x790000
    d348:	eor	ip, ip, #1845493760	; 0x6e000000
    d34c:	orr	r0, ip, r3
    d350:	cmp	r0, #0
    d354:	bne	d3a4 <monster_test_global_json_parser_enum+0x704>
    d358:	mov	r3, #2
    d35c:	mov	r2, r6
    d360:	mov	r1, r4
    d364:	mov	r0, r5
    d368:	bl	5b0 <flatcc_json_parser_match_scope>
    d36c:	mov	r1, r0
    d370:	cmp	r1, r4
    d374:	beq	d39c <monster_test_global_json_parser_enum+0x6fc>
    d378:	ldr	ip, [sp, #16]
    d37c:	str	ip, [sp, #4]
    d380:	ldr	ip, [sp, #20]
    d384:	str	ip, [sp]
    d388:	mov	r3, r7
    d38c:	mov	r2, r6
    d390:	mov	r0, r5
    d394:	bl	3e40 <MyGame_Example_Any_parse_json_enum>
    d398:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d39c:	mov	r0, sl
    d3a0:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d3a4:	mov	r0, sl
    d3a8:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d3ac:	mov	r0, sl
    d3b0:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d3b4:	eor	r2, r1, #97	; 0x61
    d3b8:	eor	r2, r2, #18176	; 0x4700
    d3bc:	eor	r2, r2, #7929856	; 0x790000
    d3c0:	eor	r2, r2, #1291845632	; 0x4d000000
    d3c4:	eor	r0, r0, #79	; 0x4f
    d3c8:	eor	r0, r0, #11776	; 0x2e00
    d3cc:	eor	r0, r0, #6619136	; 0x650000
    d3d0:	eor	r0, r0, #1828716544	; 0x6d000000
    d3d4:	orr	r1, r2, r0
    d3d8:	cmp	r1, #0
    d3dc:	bne	d528 <monster_test_global_json_parser_enum+0x888>
    d3e0:	add	r4, r4, #8
    d3e4:	mov	r1, r6
    d3e8:	mov	r0, r4
    d3ec:	bl	590 <flatcc_json_parser_symbol_part>
    d3f0:	eor	r1, r1, #114	; 0x72
    d3f4:	eor	r1, r1, #25856	; 0x6500
    d3f8:	eor	r1, r1, #6815744	; 0x680000
    d3fc:	eor	r1, r1, #1946157056	; 0x74000000
    d400:	eor	r2, r0, #101	; 0x65
    d404:	eor	r2, r2, #27904	; 0x6d00
    d408:	eor	r2, r2, #6356992	; 0x610000
    d40c:	eor	r2, r2, #1308622848	; 0x4e000000
    d410:	orr	r0, r1, r2
    d414:	cmp	r0, #0
    d418:	bne	d520 <monster_test_global_json_parser_enum+0x880>
    d41c:	add	r4, r4, #8
    d420:	mov	r1, r6
    d424:	mov	r0, r4
    d428:	bl	590 <flatcc_json_parser_symbol_part>
    d42c:	eor	r1, r1, #99	; 0x63
    d430:	eor	r1, r1, #24832	; 0x6100
    d434:	eor	r1, r1, #57671680	; 0x3700000
    d438:	eor	r1, r1, #1342177280	; 0x50000000
    d43c:	eor	r3, r0, #114	; 0x72
    d440:	eor	r3, r3, #17920	; 0x4600
    d444:	eor	r3, r3, #3014656	; 0x2e0000
    d448:	eor	r3, r3, #1694498816	; 0x65000000
    d44c:	orr	r1, r1, r3
    d450:	cmp	r1, #0
    d454:	bne	d518 <monster_test_global_json_parser_enum+0x878>
    d458:	add	r4, r4, #8
    d45c:	mov	r1, r6
    d460:	mov	r0, r4
    d464:	bl	590 <flatcc_json_parser_symbol_part>
    d468:	eor	r2, r1, #110	; 0x6e
    d46c:	eor	r2, r2, #18688	; 0x4900
    d470:	eor	r2, r2, #7143424	; 0x6d0000
    d474:	eor	r2, r2, #1862270976	; 0x6f000000
    d478:	eor	r1, r0, #356	; 0x164
    d47c:	eor	r1, r1, #29696	; 0x7400
    d480:	eor	r1, r1, #57409536	; 0x36c0000
    d484:	eor	r1, r1, #1610612736	; 0x60000000
    d488:	orr	r1, r2, r1
    d48c:	cmp	r1, #0
    d490:	bne	d510 <monster_test_global_json_parser_enum+0x870>
    d494:	add	r4, r4, #8
    d498:	mov	r1, r6
    d49c:	mov	r0, r4
    d4a0:	bl	590 <flatcc_json_parser_symbol_part>
    d4a4:	and	r1, r1, #-16777216	; 0xff000000
    d4a8:	mov	ip, #0
    d4ac:	eor	r0, r1, #1694498816	; 0x65000000
    d4b0:	orr	r2, r0, ip
    d4b4:	cmp	r2, #0
    d4b8:	bne	d508 <monster_test_global_json_parser_enum+0x868>
    d4bc:	mov	r3, #1
    d4c0:	mov	r2, r6
    d4c4:	mov	r1, r4
    d4c8:	mov	r0, r5
    d4cc:	bl	5b0 <flatcc_json_parser_match_scope>
    d4d0:	mov	r1, r0
    d4d4:	cmp	r1, r4
    d4d8:	beq	d500 <monster_test_global_json_parser_enum+0x860>
    d4dc:	ldr	ip, [sp, #16]
    d4e0:	str	ip, [sp, #4]
    d4e4:	ldr	ip, [sp, #20]
    d4e8:	str	ip, [sp]
    d4ec:	mov	r3, r7
    d4f0:	mov	r2, r6
    d4f4:	mov	r0, r5
    d4f8:	bl	2e58 <MyGame_OtherNameSpace_FromInclude_parse_json_enum>
    d4fc:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d500:	mov	r0, sl
    d504:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d508:	mov	r0, sl
    d50c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d510:	mov	r0, sl
    d514:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d518:	mov	r0, sl
    d51c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d520:	mov	r0, sl
    d524:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d528:	mov	r0, sl
    d52c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d530:	eor	r3, r1, #628	; 0x274
    d534:	eor	r3, r3, #93184	; 0x16c00
    d538:	eor	r3, r3, #106954752	; 0x6600000
    d53c:	eor	r3, r3, #1073741824	; 0x40000000
    d540:	eor	r2, r0, #46	; 0x2e
    d544:	eor	r2, r2, #30976	; 0x7900
    d548:	eor	r2, r2, #7536640	; 0x730000
    d54c:	eor	r2, r2, #1627389952	; 0x61000000
    d550:	orr	ip, r3, r2
    d554:	cmp	ip, #0
    d558:	bne	d620 <monster_test_global_json_parser_enum+0x980>
    d55c:	add	r4, r4, #8
    d560:	mov	r1, r6
    d564:	mov	r0, r4
    d568:	bl	590 <flatcc_json_parser_symbol_part>
    d56c:	eor	r3, r1, #114	; 0x72
    d570:	eor	r3, r3, #24832	; 0x6100
    d574:	eor	r3, r3, #57147392	; 0x3680000
    d578:	eor	r3, r3, #1073741824	; 0x40000000
    d57c:	eor	ip, r0, #101	; 0x65
    d580:	eor	ip, ip, #226304	; 0x37400
    d584:	eor	ip, ip, #23068672	; 0x1600000
    d588:	eor	ip, ip, #1610612736	; 0x60000000
    d58c:	orr	r2, r3, ip
    d590:	cmp	r2, #0
    d594:	bne	d618 <monster_test_global_json_parser_enum+0x978>
    d598:	add	r4, r4, #8
    d59c:	mov	r1, r6
    d5a0:	mov	r0, r4
    d5a4:	bl	590 <flatcc_json_parser_symbol_part>
    d5a8:	and	r3, r1, #-16777216	; 0xff000000
    d5ac:	mov	r2, #0
    d5b0:	eor	r1, r3, #1912602624	; 0x72000000
    d5b4:	orr	r2, r1, r2
    d5b8:	cmp	r2, #0
    d5bc:	bne	d610 <monster_test_global_json_parser_enum+0x970>
    d5c0:	mov	r1, r4
    d5c4:	mov	r4, r1
    d5c8:	mov	r3, #1
    d5cc:	mov	r2, r6
    d5d0:	mov	r0, r5
    d5d4:	bl	5b0 <flatcc_json_parser_match_scope>
    d5d8:	cmp	r0, r4
    d5dc:	beq	d608 <monster_test_global_json_parser_enum+0x968>
    d5e0:	ldr	ip, [sp, #16]
    d5e4:	str	ip, [sp, #4]
    d5e8:	ldr	ip, [sp, #20]
    d5ec:	str	ip, [sp]
    d5f0:	mov	r3, r7
    d5f4:	mov	r2, r6
    d5f8:	mov	r1, r0
    d5fc:	mov	r0, r5
    d600:	bl	b804 <Fantasy_Character_parse_json_enum>
    d604:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d608:	mov	r0, sl
    d60c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d610:	mov	r0, sl
    d614:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d618:	mov	r0, sl
    d61c:	b	d624 <monster_test_global_json_parser_enum+0x984>
    d620:	mov	r0, sl
    d624:	ldr	r4, [sp, #24]
    d628:	ldr	r5, [sp, #28]
    d62c:	ldr	r6, [sp, #32]
    d630:	ldr	r7, [sp, #36]	; 0x24
    d634:	ldr	r8, [sp, #40]	; 0x28
    d638:	ldr	r9, [sp, #44]	; 0x2c
    d63c:	ldr	sl, [sp, #48]	; 0x30
    d640:	ldr	fp, [sp, #52]	; 0x34
    d644:	ldr	lr, [sp, #12]
    d648:	add	sp, sp, #56	; 0x38
    d64c:	bx	lr

0000d650 <flatcc_json_printer_set_unquoted>:
    d650:	mov	ip, sp
    d654:	sub	sp, sp, #8
    d658:	str	ip, [sp]
    d65c:	str	lr, [sp, #4]
    d660:	cmp	r1, #0
    d664:	movne	r1, #1
    d668:	moveq	r1, #0
    d66c:	and	r1, r1, #255	; 0xff
    d670:	strb	r1, [r0, #26]
    d674:	ldr	lr, [sp, #4]
    d678:	add	sp, sp, #8
    d67c:	bx	lr

0000d680 <flatcc_json_printer_set_noenum>:
    d680:	mov	ip, sp
    d684:	sub	sp, sp, #8
    d688:	str	ip, [sp]
    d68c:	str	lr, [sp, #4]
    d690:	cmp	r1, #0
    d694:	movne	r1, #1
    d698:	moveq	r1, #0
    d69c:	and	r1, r1, #255	; 0xff
    d6a0:	strb	r1, [r0, #27]
    d6a4:	ldr	lr, [sp, #4]
    d6a8:	add	sp, sp, #8
    d6ac:	bx	lr

0000d6b0 <flatcc_json_printer_set_indent>:
    d6b0:	mov	ip, sp
    d6b4:	sub	sp, sp, #8
    d6b8:	str	ip, [sp]
    d6bc:	str	lr, [sp, #4]
    d6c0:	and	r1, r1, #255	; 0xff
    d6c4:	strb	r1, [r0, #25]
    d6c8:	ldr	lr, [sp, #4]
    d6cc:	add	sp, sp, #8
    d6d0:	bx	lr

0000d6d4 <flatcc_json_printer_set_nonstrict>:
    d6d4:	mov	ip, sp
    d6d8:	sub	sp, sp, #16
    d6dc:	str	ip, [sp]
    d6e0:	str	lr, [sp, #4]
    d6e4:	str	r4, [sp, #8]
    d6e8:	mov	r4, r0
    d6ec:	mov	r1, #2
    d6f0:	mov	r0, r4
    d6f4:	bl	d6b0 <flatcc_json_printer_set_indent>
    d6f8:	mov	r1, #1
    d6fc:	mov	r0, r4
    d700:	bl	d650 <flatcc_json_printer_set_unquoted>
    d704:	mov	r1, #0
    d708:	mov	r0, r4
    d70c:	bl	d680 <flatcc_json_printer_set_noenum>
    d710:	ldr	r4, [sp, #8]
    d714:	ldr	lr, [sp, #4]
    d718:	add	sp, sp, #16
    d71c:	bx	lr

0000d720 <flatcc_json_printer_set_flags>:
    d720:	mov	ip, sp
    d724:	sub	sp, sp, #16
    d728:	str	ip, [sp]
    d72c:	str	lr, [sp, #4]
    d730:	str	r4, [sp, #8]
    d734:	str	r5, [sp, #12]
    d738:	mov	r5, r1
    d73c:	mov	r4, r0
    d740:	and	r1, r5, #1
    d744:	cmp	r1, #0
    d748:	movne	r3, #1
    d74c:	moveq	r3, #0
    d750:	and	r3, r3, #255	; 0xff
    d754:	strb	r3, [r4, #26]
    d758:	and	r0, r5, #2
    d75c:	cmp	r0, #0
    d760:	movne	ip, #1
    d764:	moveq	ip, #0
    d768:	and	ip, ip, #255	; 0xff
    d76c:	strb	ip, [r4, #27]
    d770:	and	r1, r5, #4
    d774:	cmp	r1, #0
    d778:	movne	r2, #1
    d77c:	moveq	r2, #0
    d780:	and	r2, r2, #255	; 0xff
    d784:	strb	r2, [r4, #28]
    d788:	and	r1, r5, #8
    d78c:	cmp	r1, #0
    d790:	movne	ip, #1
    d794:	moveq	ip, #0
    d798:	and	r0, ip, #255	; 0xff
    d79c:	strb	r0, [r4, #29]
    d7a0:	and	r0, r5, #16
    d7a4:	cmp	r0, #0
    d7a8:	beq	d7b8 <flatcc_json_printer_set_flags+0x98>
    d7ac:	mov	r1, #2
    d7b0:	mov	r0, r4
    d7b4:	bl	d6b0 <flatcc_json_printer_set_indent>
    d7b8:	and	r3, r5, #32
    d7bc:	cmp	r3, #0
    d7c0:	beq	d7cc <flatcc_json_printer_set_flags+0xac>
    d7c4:	mov	r0, r4
    d7c8:	bl	d6d4 <flatcc_json_printer_set_nonstrict>
    d7cc:	ldr	r4, [sp, #8]
    d7d0:	ldr	r5, [sp, #12]
    d7d4:	ldr	lr, [sp, #4]
    d7d8:	add	sp, sp, #16
    d7dc:	bx	lr

0000d7e0 <MyGame_Example_Color_print_json_enum>:
    d7e0:	mov	ip, sp
    d7e4:	sub	sp, sp, #24
    d7e8:	str	ip, [sp]
    d7ec:	str	lr, [sp, #4]
    d7f0:	str	r4, [sp, #8]
    d7f4:	str	r5, [sp, #12]
    d7f8:	str	r6, [sp, #16]
    d7fc:	str	r7, [sp, #20]
    d800:	mov	r5, r0
    d804:	and	r7, r1, #255	; 0xff
    d808:	sub	r3, r7, #1
    d80c:	and	r2, r7, r3
    d810:	cmp	r2, #0
    d814:	movne	r4, #1
    d818:	moveq	r4, #0
    d81c:	mov	r6, #0
    d820:	and	r2, r7, #244	; 0xf4
    d824:	cmp	r2, #0
    d828:	bne	d83c <MyGame_Example_Color_print_json_enum+0x5c>
    d82c:	cmp	r7, #0
    d830:	moveq	r0, #1
    d834:	movne	r0, #0
    d838:	b	d840 <MyGame_Example_Color_print_json_enum+0x60>
    d83c:	mov	r0, #1
    d840:	cmp	r0, #0
    d844:	beq	d858 <MyGame_Example_Color_print_json_enum+0x78>
    d848:	sbfx	r1, r1, #0, #8
    d84c:	mov	r0, r5
    d850:	bl	0 <flatcc_json_printer_int8>
    d854:	b	d8d8 <MyGame_Example_Color_print_json_enum+0xf8>
    d858:	mov	r1, r4
    d85c:	mov	r0, r5
    d860:	bl	0 <flatcc_json_printer_delimit_enum_flags>
    d864:	and	r1, r7, #1
    d868:	cmp	r1, #0
    d86c:	beq	d888 <MyGame_Example_Color_print_json_enum+0xa8>
    d870:	mov	r1, r6
    d874:	add	r6, r1, #1
    d878:	ldr	r2, [pc, #120]	; d8f8 <MyGame_Example_Color_print_json_enum+0x118>
    d87c:	mov	r3, #3
    d880:	mov	r0, r5
    d884:	bl	0 <flatcc_json_printer_enum_flag>
    d888:	and	r0, r7, #2
    d88c:	cmp	r0, #0
    d890:	beq	d8ac <MyGame_Example_Color_print_json_enum+0xcc>
    d894:	mov	r1, r6
    d898:	add	r6, r1, #1
    d89c:	ldr	r2, [pc, #88]	; d8fc <MyGame_Example_Color_print_json_enum+0x11c>
    d8a0:	mov	r3, #5
    d8a4:	mov	r0, r5
    d8a8:	bl	0 <flatcc_json_printer_enum_flag>
    d8ac:	and	r1, r7, #8
    d8b0:	cmp	r1, #0
    d8b4:	beq	d8cc <MyGame_Example_Color_print_json_enum+0xec>
    d8b8:	ldr	r2, [pc, #52]	; d8f4 <MyGame_Example_Color_print_json_enum+0x114>
    d8bc:	mov	r3, #4
    d8c0:	mov	r1, r6
    d8c4:	mov	r0, r5
    d8c8:	bl	0 <flatcc_json_printer_enum_flag>
    d8cc:	mov	r1, r4
    d8d0:	mov	r0, r5
    d8d4:	bl	0 <flatcc_json_printer_delimit_enum_flags>
    d8d8:	ldr	r4, [sp, #8]
    d8dc:	ldr	r5, [sp, #12]
    d8e0:	ldr	r6, [sp, #16]
    d8e4:	ldr	r7, [sp, #20]
    d8e8:	ldr	lr, [sp, #4]
    d8ec:	add	sp, sp, #24
    d8f0:	bx	lr
    d8f4:	.word	0x00000f43
    d8f8:	.word	0x00001a0e
    d8fc:	.word	0x000000ef

0000d900 <MyGame_Example_Any_print_json_union_type>:
    d900:	mov	ip, sp
    d904:	sub	sp, sp, #8
    d908:	str	ip, [sp]
    d90c:	str	lr, [sp, #4]
    d910:	cmp	r1, #3
    d914:	bcs	d948 <MyGame_Example_Any_print_json_union_type+0x48>
    d918:	cmp	r1, #1
    d91c:	beq	d938 <MyGame_Example_Any_print_json_union_type+0x38>
    d920:	cmp	r1, #2
    d924:	bne	d968 <MyGame_Example_Any_print_json_union_type+0x68>
    d928:	ldr	r1, [pc, #96]	; d990 <MyGame_Example_Any_print_json_union_type+0x90>
    d92c:	mov	r2, #23
    d930:	bl	0 <flatcc_json_printer_enum>
    d934:	b	d984 <MyGame_Example_Any_print_json_union_type+0x84>
    d938:	ldr	r1, [pc, #96]	; d9a0 <MyGame_Example_Any_print_json_union_type+0xa0>
    d93c:	mov	r2, #7
    d940:	bl	0 <flatcc_json_printer_enum>
    d944:	b	d984 <MyGame_Example_Any_print_json_union_type+0x84>
    d948:	cmp	r1, #3
    d94c:	beq	d978 <MyGame_Example_Any_print_json_union_type+0x78>
    d950:	cmp	r1, #4
    d954:	bne	d968 <MyGame_Example_Any_print_json_union_type+0x68>
    d958:	ldr	r1, [pc, #52]	; d994 <MyGame_Example_Any_print_json_union_type+0x94>
    d95c:	mov	r2, #3
    d960:	bl	0 <flatcc_json_printer_enum>
    d964:	b	d984 <MyGame_Example_Any_print_json_union_type+0x84>
    d968:	ldr	r1, [pc, #40]	; d998 <MyGame_Example_Any_print_json_union_type+0x98>
    d96c:	mov	r2, #4
    d970:	bl	0 <flatcc_json_printer_enum>
    d974:	b	d984 <MyGame_Example_Any_print_json_union_type+0x84>
    d978:	ldr	r1, [pc, #28]	; d99c <MyGame_Example_Any_print_json_union_type+0x9c>
    d97c:	mov	r2, #8
    d980:	bl	0 <flatcc_json_printer_enum>
    d984:	ldr	lr, [sp, #4]
    d988:	add	sp, sp, #8
    d98c:	bx	lr
    d990:	.word	0x00003406
    d994:	.word	0x00001285
    d998:	.word	0x00000394
    d99c:	.word	0x00000917
    d9a0:	.word	0x00000a88

0000d9a4 <MyGame_Example_Any_print_json_union>:
    d9a4:	mov	ip, sp
    d9a8:	sub	sp, sp, #8
    d9ac:	str	ip, [sp]
    d9b0:	str	lr, [sp, #4]
    d9b4:	ldrb	ip, [r1, #8]
    d9b8:	cmp	ip, #3
    d9bc:	bcs	d9e8 <MyGame_Example_Any_print_json_union+0x44>
    d9c0:	cmp	ip, #1
    d9c4:	beq	d9dc <MyGame_Example_Any_print_json_union+0x38>
    d9c8:	cmp	ip, #2
    d9cc:	bne	da0c <MyGame_Example_Any_print_json_union+0x68>
    d9d0:	ldr	r2, [pc, #76]	; da24 <MyGame_Example_Any_print_json_union+0x80>
    d9d4:	bl	0 <flatcc_json_printer_union_table>
    d9d8:	b	da0c <MyGame_Example_Any_print_json_union+0x68>
    d9dc:	ldr	r2, [pc, #52]	; da18 <MyGame_Example_Any_print_json_union+0x74>
    d9e0:	bl	0 <flatcc_json_printer_union_table>
    d9e4:	b	da0c <MyGame_Example_Any_print_json_union+0x68>
    d9e8:	cmp	ip, #3
    d9ec:	beq	da04 <MyGame_Example_Any_print_json_union+0x60>
    d9f0:	cmp	ip, #4
    d9f4:	bne	da0c <MyGame_Example_Any_print_json_union+0x68>
    d9f8:	ldr	r2, [pc, #28]	; da1c <MyGame_Example_Any_print_json_union+0x78>
    d9fc:	bl	0 <flatcc_json_printer_union_table>
    da00:	b	da0c <MyGame_Example_Any_print_json_union+0x68>
    da04:	ldr	r2, [pc, #20]	; da20 <MyGame_Example_Any_print_json_union+0x7c>
    da08:	bl	0 <flatcc_json_printer_union_table>
    da0c:	ldr	lr, [sp, #4]
    da10:	add	sp, sp, #8
    da14:	bx	lr
	...

0000da28 <Fantasy_Character_print_json_union_type>:
    da28:	mov	ip, sp
    da2c:	sub	sp, sp, #8
    da30:	str	ip, [sp]
    da34:	str	lr, [sp, #4]
    da38:	cmp	r1, #10
    da3c:	bcs	da88 <Fantasy_Character_print_json_union_type+0x60>
    da40:	cmp	r1, #2
    da44:	beq	da78 <Fantasy_Character_print_json_union_type+0x50>
    da48:	cmp	r1, #8
    da4c:	beq	da68 <Fantasy_Character_print_json_union_type+0x40>
    da50:	cmp	r1, #9
    da54:	bne	dab0 <Fantasy_Character_print_json_union_type+0x88>
    da58:	ldr	r1, [pc, #136]	; dae8 <Fantasy_Character_print_json_union_type+0xc0>
    da5c:	mov	r2, #5
    da60:	bl	0 <flatcc_json_printer_enum>
    da64:	b	dadc <Fantasy_Character_print_json_union_type+0xb4>
    da68:	ldr	r1, [pc, #140]	; dafc <Fantasy_Character_print_json_union_type+0xd4>
    da6c:	mov	r2, #8
    da70:	bl	0 <flatcc_json_printer_enum>
    da74:	b	dadc <Fantasy_Character_print_json_union_type+0xb4>
    da78:	ldr	r1, [pc, #128]	; db00 <Fantasy_Character_print_json_union_type+0xd8>
    da7c:	mov	r2, #5
    da80:	bl	0 <flatcc_json_printer_enum>
    da84:	b	dadc <Fantasy_Character_print_json_union_type+0xb4>
    da88:	cmp	r1, #10
    da8c:	beq	dad0 <Fantasy_Character_print_json_union_type+0xa8>
    da90:	cmp	r1, #11
    da94:	beq	dac0 <Fantasy_Character_print_json_union_type+0x98>
    da98:	cmp	r1, #255	; 0xff
    da9c:	bne	dab0 <Fantasy_Character_print_json_union_type+0x88>
    daa0:	ldr	r1, [pc, #72]	; daf0 <Fantasy_Character_print_json_union_type+0xc8>
    daa4:	mov	r2, #6
    daa8:	bl	0 <flatcc_json_printer_enum>
    daac:	b	dadc <Fantasy_Character_print_json_union_type+0xb4>
    dab0:	ldr	r1, [pc, #64]	; daf8 <Fantasy_Character_print_json_union_type+0xd0>
    dab4:	mov	r2, #4
    dab8:	bl	0 <flatcc_json_printer_enum>
    dabc:	b	dadc <Fantasy_Character_print_json_union_type+0xb4>
    dac0:	ldr	r1, [pc, #44]	; daf4 <Fantasy_Character_print_json_union_type+0xcc>
    dac4:	mov	r2, #5
    dac8:	bl	0 <flatcc_json_printer_enum>
    dacc:	b	dadc <Fantasy_Character_print_json_union_type+0xb4>
    dad0:	ldr	r1, [pc, #20]	; daec <Fantasy_Character_print_json_union_type+0xc4>
    dad4:	mov	r2, #7
    dad8:	bl	0 <flatcc_json_printer_enum>
    dadc:	ldr	lr, [sp, #4]
    dae0:	add	sp, sp, #8
    dae4:	bx	lr
    dae8:	.word	0x0000311c
    daec:	.word	0x00002bfd
    daf0:	.word	0x00002838
    daf4:	.word	0x00001bae
    daf8:	.word	0x00000394
    dafc:	.word	0x00002d6e
    db00:	.word	0x00002afe

0000db04 <Fantasy_Character_print_json_union>:
    db04:	mov	ip, sp
    db08:	sub	sp, sp, #8
    db0c:	str	ip, [sp]
    db10:	str	lr, [sp, #4]
    db14:	ldrb	ip, [r1, #8]
    db18:	cmp	ip, #10
    db1c:	bcs	db5c <Fantasy_Character_print_json_union+0x58>
    db20:	cmp	ip, #2
    db24:	beq	db50 <Fantasy_Character_print_json_union+0x4c>
    db28:	cmp	ip, #8
    db2c:	beq	db44 <Fantasy_Character_print_json_union+0x40>
    db30:	cmp	ip, #9
    db34:	bne	db8c <Fantasy_Character_print_json_union+0x88>
    db38:	ldr	r2, [pc, #96]	; dba0 <Fantasy_Character_print_json_union+0x9c>
    db3c:	bl	0 <flatcc_json_printer_union_struct>
    db40:	b	db8c <Fantasy_Character_print_json_union+0x88>
    db44:	ldr	r2, [pc, #80]	; db9c <Fantasy_Character_print_json_union+0x98>
    db48:	bl	0 <flatcc_json_printer_union_struct>
    db4c:	b	db8c <Fantasy_Character_print_json_union+0x88>
    db50:	ldr	r2, [pc, #64]	; db98 <Fantasy_Character_print_json_union+0x94>
    db54:	bl	0 <flatcc_json_printer_union_table>
    db58:	b	db8c <Fantasy_Character_print_json_union+0x88>
    db5c:	cmp	ip, #10
    db60:	beq	db84 <Fantasy_Character_print_json_union+0x80>
    db64:	cmp	ip, #11
    db68:	beq	db7c <Fantasy_Character_print_json_union+0x78>
    db6c:	cmp	ip, #255	; 0xff
    db70:	bne	db8c <Fantasy_Character_print_json_union+0x88>
    db74:	bl	0 <flatcc_json_printer_union_string>
    db78:	b	db8c <Fantasy_Character_print_json_union+0x88>
    db7c:	bl	0 <flatcc_json_printer_union_string>
    db80:	b	db8c <Fantasy_Character_print_json_union+0x88>
    db84:	ldr	r2, [pc, #20]	; dba0 <Fantasy_Character_print_json_union+0x9c>
    db88:	bl	0 <flatcc_json_printer_union_struct>
    db8c:	ldr	lr, [sp, #4]
    db90:	add	sp, sp, #8
    db94:	bx	lr
	...

0000dba4 <MyGame_Example_Test_print_json_struct>:
    dba4:	mov	ip, sp
    dba8:	sub	sp, sp, #24
    dbac:	str	ip, [sp, #8]
    dbb0:	str	lr, [sp, #12]
    dbb4:	str	r4, [sp, #16]
    dbb8:	str	r5, [sp, #20]
    dbbc:	mov	r4, r1
    dbc0:	mov	r5, r0
    dbc4:	mov	r1, #0
    dbc8:	mov	r3, #0
    dbcc:	ldr	r0, [pc, #80]	; dc24 <MyGame_Example_Test_print_json_struct+0x80>
    dbd0:	mov	r2, #1
    dbd4:	str	r2, [sp, #4]
    dbd8:	str	r0, [sp]
    dbdc:	mov	r2, r4
    dbe0:	mov	r0, r5
    dbe4:	bl	0 <flatcc_json_printer_int16_struct_field>
    dbe8:	mov	r1, #1
    dbec:	mov	r3, #2
    dbf0:	ldr	r0, [pc, #40]	; dc20 <MyGame_Example_Test_print_json_struct+0x7c>
    dbf4:	mov	r2, #1
    dbf8:	str	r2, [sp, #4]
    dbfc:	str	r0, [sp]
    dc00:	mov	r2, r4
    dc04:	mov	r0, r5
    dc08:	bl	0 <flatcc_json_printer_int8_struct_field>
    dc0c:	ldr	r4, [sp, #16]
    dc10:	ldr	r5, [sp, #20]
    dc14:	ldr	lr, [sp, #12]
    dc18:	add	sp, sp, #24
    dc1c:	bx	lr
    dc20:	.word	0x000031f2
    dc24:	.word	0x00003a9e

0000dc28 <MyGame_Example_Vec3_print_json_struct>:
    dc28:	mov	ip, sp
    dc2c:	sub	sp, sp, #40	; 0x28
    dc30:	str	ip, [sp, #12]
    dc34:	str	lr, [sp, #16]
    dc38:	str	r4, [sp, #24]
    dc3c:	str	r5, [sp, #28]
    dc40:	str	r6, [sp, #32]
    dc44:	mov	r4, r1
    dc48:	mov	r5, r0
    dc4c:	mov	r1, #0
    dc50:	mov	r3, #0
    dc54:	ldr	r0, [pc, #268]	; dd68 <MyGame_Example_Vec3_print_json_struct+0x140>
    dc58:	mov	r2, #1
    dc5c:	str	r2, [sp, #4]
    dc60:	str	r0, [sp]
    dc64:	mov	r2, r4
    dc68:	mov	r0, r5
    dc6c:	bl	0 <flatcc_json_printer_float_struct_field>
    dc70:	mov	r1, #1
    dc74:	mov	r3, #4
    dc78:	ldr	r0, [pc, #212]	; dd54 <MyGame_Example_Vec3_print_json_struct+0x12c>
    dc7c:	mov	r2, #1
    dc80:	str	r2, [sp, #4]
    dc84:	str	r0, [sp]
    dc88:	mov	r2, r4
    dc8c:	mov	r0, r5
    dc90:	bl	0 <flatcc_json_printer_float_struct_field>
    dc94:	mov	r1, #2
    dc98:	mov	r3, #8
    dc9c:	ldr	r0, [pc, #192]	; dd64 <MyGame_Example_Vec3_print_json_struct+0x13c>
    dca0:	mov	r2, #1
    dca4:	str	r2, [sp, #4]
    dca8:	str	r0, [sp]
    dcac:	mov	r2, r4
    dcb0:	mov	r0, r5
    dcb4:	bl	0 <flatcc_json_printer_float_struct_field>
    dcb8:	mov	r1, #3
    dcbc:	mov	r3, #16
    dcc0:	ldr	r0, [pc, #148]	; dd5c <MyGame_Example_Vec3_print_json_struct+0x134>
    dcc4:	mov	r2, #5
    dcc8:	str	r2, [sp, #4]
    dccc:	str	r0, [sp]
    dcd0:	mov	r2, r4
    dcd4:	mov	r0, r5
    dcd8:	bl	0 <flatcc_json_printer_double_struct_field>
    dcdc:	mov	r1, #4
    dce0:	mov	r3, #24
    dce4:	ldr	r6, [pc, #116]	; dd60 <MyGame_Example_Vec3_print_json_struct+0x138>
    dce8:	mov	r0, #5
    dcec:	ldr	r2, [pc, #92]	; dd50 <MyGame_Example_Vec3_print_json_struct+0x128>
    dcf0:	str	r2, [sp, #8]
    dcf4:	str	r0, [sp, #4]
    dcf8:	str	r6, [sp]
    dcfc:	mov	r2, r4
    dd00:	mov	r0, r5
    dd04:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
    dd08:	mov	r1, #5
    dd0c:	mov	r3, #26
    dd10:	ldr	r2, [pc, #52]	; dd4c <MyGame_Example_Vec3_print_json_struct+0x124>
    dd14:	mov	r6, #5
    dd18:	ldr	r0, [pc, #56]	; dd58 <MyGame_Example_Vec3_print_json_struct+0x130>
    dd1c:	str	r0, [sp, #8]
    dd20:	str	r6, [sp, #4]
    dd24:	str	r2, [sp]
    dd28:	mov	r2, r4
    dd2c:	mov	r0, r5
    dd30:	bl	0 <flatcc_json_printer_embedded_struct_field>
    dd34:	ldr	r4, [sp, #24]
    dd38:	ldr	r5, [sp, #28]
    dd3c:	ldr	r6, [sp, #32]
    dd40:	ldr	lr, [sp, #16]
    dd44:	add	sp, sp, #40	; 0x28
    dd48:	bx	lr
    dd4c:	.word	0x0000038e
    dd50:	.word	0x00000000
    dd54:	.word	0x00002dfb
    dd58:	.word	0x00000000
    dd5c:	.word	0x00001315
    dd60:	.word	0x00000d26
    dd64:	.word	0x000032c0
    dd68:	.word	0x00001d00

0000dd6c <MyGame_Example_Ability_print_json_struct>:
    dd6c:	mov	ip, sp
    dd70:	sub	sp, sp, #24
    dd74:	str	ip, [sp, #8]
    dd78:	str	lr, [sp, #12]
    dd7c:	str	r4, [sp, #16]
    dd80:	str	r5, [sp, #20]
    dd84:	mov	r4, r1
    dd88:	mov	r5, r0
    dd8c:	mov	r1, #0
    dd90:	mov	r3, #0
    dd94:	ldr	r0, [pc, #80]	; ddec <MyGame_Example_Ability_print_json_struct+0x80>
    dd98:	mov	r2, #2
    dd9c:	str	r2, [sp, #4]
    dda0:	str	r0, [sp]
    dda4:	mov	r2, r4
    dda8:	mov	r0, r5
    ddac:	bl	0 <flatcc_json_printer_uint32_struct_field>
    ddb0:	mov	r1, #1
    ddb4:	mov	r3, #4
    ddb8:	ldr	r0, [pc, #40]	; dde8 <MyGame_Example_Ability_print_json_struct+0x7c>
    ddbc:	mov	r2, #8
    ddc0:	str	r2, [sp, #4]
    ddc4:	str	r0, [sp]
    ddc8:	mov	r2, r4
    ddcc:	mov	r0, r5
    ddd0:	bl	0 <flatcc_json_printer_uint32_struct_field>
    ddd4:	ldr	r4, [sp, #16]
    ddd8:	ldr	r5, [sp, #20]
    dddc:	ldr	lr, [sp, #12]
    dde0:	add	sp, sp, #24
    dde4:	bx	lr
    dde8:	.word	0x00003113
    ddec:	.word	0x00000920

0000ddf0 <Fantasy_Rapunzel_print_json_struct>:
    ddf0:	mov	ip, sp
    ddf4:	sub	sp, sp, #24
    ddf8:	str	ip, [sp, #8]
    ddfc:	str	lr, [sp, #12]
    de00:	str	r4, [sp, #16]
    de04:	str	r5, [sp, #20]
    de08:	mov	r2, #0
    de0c:	mov	r3, #0
    de10:	ldr	r4, [pc, #44]	; de44 <Fantasy_Rapunzel_print_json_struct+0x54>
    de14:	mov	r5, #11
    de18:	str	r5, [sp, #4]
    de1c:	str	r4, [sp]
    de20:	mov	ip, r1
    de24:	mov	r1, r2
    de28:	mov	r2, ip
    de2c:	bl	0 <flatcc_json_printer_uint16_struct_field>
    de30:	ldr	r4, [sp, #16]
    de34:	ldr	r5, [sp, #20]
    de38:	ldr	lr, [sp, #12]
    de3c:	add	sp, sp, #24
    de40:	bx	lr
    de44:	.word	0x000031f4

0000de48 <Fantasy_BookReader_print_json_struct>:
    de48:	mov	ip, sp
    de4c:	sub	sp, sp, #24
    de50:	str	ip, [sp, #8]
    de54:	str	lr, [sp, #12]
    de58:	str	r4, [sp, #16]
    de5c:	str	r5, [sp, #20]
    de60:	mov	r2, #0
    de64:	mov	r3, #0
    de68:	ldr	r4, [pc, #44]	; de9c <Fantasy_BookReader_print_json_struct+0x54>
    de6c:	mov	r5, #10
    de70:	str	r5, [sp, #4]
    de74:	str	r4, [sp]
    de78:	mov	ip, r1
    de7c:	mov	r1, r2
    de80:	mov	r2, ip
    de84:	bl	0 <flatcc_json_printer_int32_struct_field>
    de88:	ldr	r4, [sp, #16]
    de8c:	ldr	r5, [sp, #20]
    de90:	ldr	lr, [sp, #12]
    de94:	add	sp, sp, #24
    de98:	bx	lr
    de9c:	.word	0x000003d9

0000dea0 <MyGame_InParentNamespace_print_json_table>:
    dea0:	mov	ip, sp
    dea4:	sub	sp, sp, #8
    dea8:	str	ip, [sp]
    deac:	str	lr, [sp, #4]
    deb0:	ldr	lr, [sp, #4]
    deb4:	add	sp, sp, #8
    deb8:	bx	lr

0000debc <MyGame_Example2_Monster_print_json_table>:
    debc:	mov	ip, sp
    dec0:	sub	sp, sp, #8
    dec4:	str	ip, [sp]
    dec8:	str	lr, [sp, #4]
    decc:	ldr	lr, [sp, #4]
    ded0:	add	sp, sp, #8
    ded4:	bx	lr

0000ded8 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
    ded8:	mov	ip, sp
    dedc:	sub	sp, sp, #32
    dee0:	str	ip, [sp, #12]
    dee4:	str	lr, [sp, #16]
    dee8:	str	r4, [sp, #24]
    deec:	str	r5, [sp, #28]
    def0:	mov	r4, r1
    def4:	mov	r5, r0
    def8:	mov	r2, #0
    defc:	ldr	r3, [pc, #176]	; dfb4 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xdc>
    df00:	mov	ip, #5
    df04:	mov	r1, #2
    df08:	ldr	r0, [pc, #156]	; dfac <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd4>
    df0c:	str	r0, [sp, #8]
    df10:	str	r1, [sp, #4]
    df14:	str	ip, [sp]
    df18:	mov	r1, r4
    df1c:	mov	r0, r5
    df20:	bl	0 <flatcc_json_printer_int8_enum_field>
    df24:	mov	r2, #1
    df28:	ldr	r3, [pc, #128]	; dfb0 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd8>
    df2c:	mov	r0, #6
    df30:	mov	ip, #2
    df34:	ldr	r1, [pc, #112]	; dfac <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xd4>
    df38:	str	r1, [sp, #8]
    df3c:	str	ip, [sp, #4]
    df40:	str	r0, [sp]
    df44:	mov	r1, r4
    df48:	mov	r0, r5
    df4c:	bl	0 <flatcc_json_printer_int8_enum_field>
    df50:	mov	r2, #2
    df54:	ldr	r3, [pc, #96]	; dfbc <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xe4>
    df58:	mov	ip, #2
    df5c:	mov	r0, #2
    df60:	str	r0, [sp, #4]
    df64:	str	ip, [sp]
    df68:	mov	r1, r4
    df6c:	mov	r0, r5
    df70:	bl	0 <flatcc_json_printer_uint8_field>
    df74:	mov	r2, #3
    df78:	ldr	r3, [pc, #56]	; dfb8 <MyGame_Example_TestSimpleTableWithEnum_print_json_table+0xe0>
    df7c:	mov	ip, #3
    df80:	mov	r1, #2
    df84:	str	r1, [sp, #4]
    df88:	str	ip, [sp]
    df8c:	mov	r1, r4
    df90:	mov	r0, r5
    df94:	bl	0 <flatcc_json_printer_uint8_field>
    df98:	ldr	r4, [sp, #24]
    df9c:	ldr	r5, [sp, #28]
    dfa0:	ldr	lr, [sp, #16]
    dfa4:	add	sp, sp, #32
    dfa8:	bx	lr
    dfac:	.word	0x00000000
    dfb0:	.word	0x00001654
    dfb4:	.word	0x000034e4
    dfb8:	.word	0x000006f7
    dfbc:	.word	0x00002d77

0000dfc0 <MyGame_Example_Stat_print_json_table>:
    dfc0:	mov	ip, sp
    dfc4:	sub	sp, sp, #32
    dfc8:	str	ip, [sp, #16]
    dfcc:	str	lr, [sp, #20]
    dfd0:	str	r4, [sp, #24]
    dfd4:	str	r5, [sp, #28]
    dfd8:	mov	r4, r1
    dfdc:	mov	r5, r0
    dfe0:	mov	r2, #0
    dfe4:	ldr	r3, [pc, #120]	; e064 <MyGame_Example_Stat_print_json_table+0xa4>
    dfe8:	mov	r1, #2
    dfec:	str	r1, [sp]
    dff0:	mov	r1, r4
    dff4:	mov	r0, r5
    dff8:	bl	0 <flatcc_json_printer_string_field>
    dffc:	mov	r2, #1
    e000:	ldr	r3, [pc, #96]	; e068 <MyGame_Example_Stat_print_json_table+0xa8>
    e004:	mov	ip, #3
    e008:	mov	r1, #0
    e00c:	mov	r0, #0
    e010:	str	r1, [sp, #12]
    e014:	str	r0, [sp, #8]
    e018:	str	ip, [sp]
    e01c:	mov	r1, r4
    e020:	mov	r0, r5
    e024:	bl	0 <flatcc_json_printer_int64_field>
    e028:	mov	r2, #2
    e02c:	ldr	r3, [pc, #44]	; e060 <MyGame_Example_Stat_print_json_table+0xa0>
    e030:	mov	r1, #5
    e034:	mov	r0, #0
    e038:	str	r0, [sp, #4]
    e03c:	str	r1, [sp]
    e040:	mov	r1, r4
    e044:	mov	r0, r5
    e048:	bl	0 <flatcc_json_printer_uint16_field>
    e04c:	ldr	r4, [sp, #24]
    e050:	ldr	r5, [sp, #28]
    e054:	ldr	lr, [sp, #20]
    e058:	add	sp, sp, #32
    e05c:	bx	lr
    e060:	.word	0x00001cf5
    e064:	.word	0x00000920
    e068:	.word	0x00003a9a

0000e06c <MyGame_Example_Alt_print_json_table>:
    e06c:	mov	ip, sp
    e070:	sub	sp, sp, #40	; 0x28
    e074:	str	ip, [sp, #12]
    e078:	str	lr, [sp, #16]
    e07c:	str	r4, [sp, #24]
    e080:	str	r5, [sp, #28]
    e084:	str	r6, [sp, #32]
    e088:	mov	r4, r1
    e08c:	mov	r5, r0
    e090:	mov	r2, #0
    e094:	ldr	r3, [pc, #132]	; e120 <MyGame_Example_Alt_print_json_table+0xb4>
    e098:	mov	r0, #6
    e09c:	ldr	r1, [pc, #136]	; e12c <MyGame_Example_Alt_print_json_table+0xc0>
    e0a0:	str	r1, [sp, #4]
    e0a4:	str	r0, [sp]
    e0a8:	mov	r1, r4
    e0ac:	mov	r0, r5
    e0b0:	bl	0 <flatcc_json_printer_table_field>
    e0b4:	mov	r2, #1
    e0b8:	ldr	r3, [pc, #116]	; e134 <MyGame_Example_Alt_print_json_table+0xc8>
    e0bc:	mov	r0, #5
    e0c0:	ldr	r1, [pc, #104]	; e130 <MyGame_Example_Alt_print_json_table+0xc4>
    e0c4:	str	r1, [sp, #4]
    e0c8:	str	r0, [sp]
    e0cc:	mov	r1, r4
    e0d0:	mov	r0, r5
    e0d4:	bl	0 <flatcc_json_printer_table_field>
    e0d8:	mov	r2, #3
    e0dc:	ldr	r3, [pc, #64]	; e124 <MyGame_Example_Alt_print_json_table+0xb8>
    e0e0:	mov	r0, #7
    e0e4:	ldr	r1, [pc, #60]	; e128 <MyGame_Example_Alt_print_json_table+0xbc>
    e0e8:	ldr	r6, [pc, #44]	; e11c <MyGame_Example_Alt_print_json_table+0xb0>
    e0ec:	str	r6, [sp, #8]
    e0f0:	str	r1, [sp, #4]
    e0f4:	str	r0, [sp]
    e0f8:	mov	r1, r4
    e0fc:	mov	r0, r5
    e100:	bl	0 <flatcc_json_printer_union_vector_field>
    e104:	ldr	r4, [sp, #24]
    e108:	ldr	r5, [sp, #28]
    e10c:	ldr	r6, [sp, #32]
    e110:	ldr	lr, [sp, #16]
    e114:	add	sp, sp, #40	; 0x28
    e118:	bx	lr
    e11c:	.word	0x00000000
    e120:	.word	0x000028e4
    e124:	.word	0x00001715
	...
    e134:	.word	0x00002c05

0000e138 <MyGame_Example_TestJSONPrefix_print_json_table>:
    e138:	mov	ip, sp
    e13c:	sub	sp, sp, #24
    e140:	str	ip, [sp, #8]
    e144:	str	lr, [sp, #12]
    e148:	str	r4, [sp, #16]
    e14c:	str	r5, [sp, #20]
    e150:	mov	r4, r1
    e154:	mov	r5, r0
    e158:	mov	r2, #0
    e15c:	ldr	r3, [pc, #128]	; e1e4 <MyGame_Example_TestJSONPrefix_print_json_table+0xac>
    e160:	mov	r1, #21
    e164:	ldr	r0, [pc, #108]	; e1d8 <MyGame_Example_TestJSONPrefix_print_json_table+0xa0>
    e168:	str	r0, [sp, #4]
    e16c:	str	r1, [sp]
    e170:	mov	r1, r4
    e174:	mov	r0, r5
    e178:	bl	0 <flatcc_json_printer_table_field>
    e17c:	mov	r2, #1
    e180:	ldr	r3, [pc, #84]	; e1dc <MyGame_Example_TestJSONPrefix_print_json_table+0xa4>
    e184:	mov	ip, #22
    e188:	ldr	r0, [pc, #92]	; e1ec <MyGame_Example_TestJSONPrefix_print_json_table+0xb4>
    e18c:	str	r0, [sp, #4]
    e190:	str	ip, [sp]
    e194:	mov	r1, r4
    e198:	mov	r0, r5
    e19c:	bl	0 <flatcc_json_printer_table_field>
    e1a0:	mov	r2, #2
    e1a4:	ldr	r3, [pc, #60]	; e1e8 <MyGame_Example_TestJSONPrefix_print_json_table+0xb0>
    e1a8:	mov	ip, #22
    e1ac:	ldr	r1, [pc, #44]	; e1e0 <MyGame_Example_TestJSONPrefix_print_json_table+0xa8>
    e1b0:	str	r1, [sp, #4]
    e1b4:	str	ip, [sp]
    e1b8:	mov	r1, r4
    e1bc:	mov	r0, r5
    e1c0:	bl	0 <flatcc_json_printer_table_field>
    e1c4:	ldr	r4, [sp, #16]
    e1c8:	ldr	r5, [sp, #20]
    e1cc:	ldr	lr, [sp, #12]
    e1d0:	add	sp, sp, #24
    e1d4:	bx	lr
    e1d8:	.word	0x00000000
    e1dc:	.word	0x000037b6
    e1e0:	.word	0x00000000
    e1e4:	.word	0x000033f0
    e1e8:	.word	0x00001077
    e1ec:	.word	0x00000000

0000e1f0 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
    e1f0:	mov	ip, sp
    e1f4:	sub	sp, sp, #32
    e1f8:	str	ip, [sp, #16]
    e1fc:	str	lr, [sp, #20]
    e200:	str	r4, [sp, #24]
    e204:	str	r5, [sp, #28]
    e208:	mov	r4, r1
    e20c:	mov	r5, r0
    e210:	mov	r2, #0
    e214:	ldr	r3, [pc, #356]	; e380 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x190>
    e218:	mov	r1, #4
    e21c:	str	r1, [sp]
    e220:	mov	r1, r4
    e224:	mov	r0, r5
    e228:	bl	0 <flatcc_json_printer_string_field>
    e22c:	mov	r2, #1
    e230:	ldr	r3, [pc, #320]	; e378 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x188>
    e234:	mov	r0, #9
    e238:	mov	r1, #0
    e23c:	str	r1, [sp, #4]
    e240:	str	r0, [sp]
    e244:	mov	r1, r4
    e248:	mov	r0, r5
    e24c:	bl	0 <flatcc_json_printer_uint32_field>
    e250:	mov	r2, #2
    e254:	ldr	r3, [pc, #268]	; e368 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x178>
    e258:	mov	r0, #4
    e25c:	str	r0, [sp]
    e260:	mov	r1, r4
    e264:	mov	r0, r5
    e268:	bl	0 <flatcc_json_printer_string_field>
    e26c:	mov	r2, #3
    e270:	ldr	r3, [pc, #260]	; e37c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x18c>
    e274:	mov	r1, #8
    e278:	mov	r0, #0
    e27c:	mov	ip, #0
    e280:	str	r0, [sp, #12]
    e284:	str	ip, [sp, #8]
    e288:	str	r1, [sp]
    e28c:	mov	r1, r4
    e290:	mov	r0, r5
    e294:	bl	0 <flatcc_json_printer_int64_field>
    e298:	mov	r2, #4
    e29c:	ldr	r3, [pc, #228]	; e388 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x198>
    e2a0:	mov	r1, #4
    e2a4:	str	r1, [sp]
    e2a8:	mov	r1, r4
    e2ac:	mov	r0, r5
    e2b0:	bl	0 <flatcc_json_printer_string_field>
    e2b4:	mov	r2, #5
    e2b8:	ldr	r3, [pc, #196]	; e384 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x194>
    e2bc:	mov	r1, #8
    e2c0:	mov	r0, #0
    e2c4:	mov	ip, #0
    e2c8:	str	r0, [sp, #12]
    e2cc:	str	ip, [sp, #8]
    e2d0:	str	r1, [sp]
    e2d4:	mov	r1, r4
    e2d8:	mov	r0, r5
    e2dc:	bl	0 <flatcc_json_printer_int64_field>
    e2e0:	mov	r2, #6
    e2e4:	ldr	r3, [pc, #132]	; e370 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x180>
    e2e8:	mov	r1, #9
    e2ec:	mov	r0, #0
    e2f0:	str	r0, [sp, #4]
    e2f4:	str	r1, [sp]
    e2f8:	mov	r1, r4
    e2fc:	mov	r0, r5
    e300:	bl	0 <flatcc_json_printer_uint32_field>
    e304:	mov	r2, #7
    e308:	ldr	r3, [pc, #100]	; e374 <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x184>
    e30c:	mov	ip, #8
    e310:	mov	r1, #0
    e314:	mov	r0, #0
    e318:	str	r1, [sp, #12]
    e31c:	str	r0, [sp, #8]
    e320:	str	ip, [sp]
    e324:	mov	r1, r4
    e328:	mov	r0, r5
    e32c:	bl	0 <flatcc_json_printer_int64_field>
    e330:	mov	r2, #8
    e334:	ldr	r3, [pc, #48]	; e36c <MyGame_Example_TestJSONPrefixParsing_print_json_table+0x17c>
    e338:	mov	r1, #9
    e33c:	mov	r0, #0
    e340:	str	r0, [sp, #4]
    e344:	str	r1, [sp]
    e348:	mov	r1, r4
    e34c:	mov	r0, r5
    e350:	bl	0 <flatcc_json_printer_uint32_field>
    e354:	ldr	r4, [sp, #24]
    e358:	ldr	r5, [sp, #28]
    e35c:	ldr	lr, [sp, #20]
    e360:	add	sp, sp, #32
    e364:	bx	lr
    e368:	.word	0x00001200
    e36c:	.word	0x00002449
    e370:	.word	0x00001a12
    e374:	.word	0x000032c2
    e378:	.word	0x0000171d
    e37c:	.word	0x0000283f
    e380:	.word	0x00001a59
    e384:	.word	0x00000a90
    e388:	.word	0x00001072

0000e38c <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
    e38c:	mov	ip, sp
    e390:	sub	sp, sp, #40	; 0x28
    e394:	str	ip, [sp, #16]
    e398:	str	lr, [sp, #20]
    e39c:	str	r4, [sp, #24]
    e3a0:	str	r5, [sp, #28]
    e3a4:	str	r6, [sp, #32]
    e3a8:	mov	r4, r1
    e3ac:	mov	r5, r0
    e3b0:	mov	r2, #0
    e3b4:	ldr	r3, [pc, #92]	; e418 <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x8c>
    e3b8:	mov	r6, #15
    e3bc:	mov	r1, #0
    e3c0:	mov	r0, #0
    e3c4:	str	r1, [sp, #12]
    e3c8:	str	r0, [sp, #8]
    e3cc:	str	r6, [sp]
    e3d0:	mov	r1, r4
    e3d4:	mov	r0, r5
    e3d8:	bl	0 <flatcc_json_printer_int64_field>
    e3dc:	mov	r2, #1
    e3e0:	ldr	r3, [pc, #52]	; e41c <MyGame_Example_TestJSONPrefixParsing2_print_json_table+0x90>
    e3e4:	mov	ip, #16
    e3e8:	mov	r0, #0
    e3ec:	str	r0, [sp, #4]
    e3f0:	str	ip, [sp]
    e3f4:	mov	r1, r4
    e3f8:	mov	r0, r5
    e3fc:	bl	0 <flatcc_json_printer_uint32_field>
    e400:	ldr	r4, [sp, #24]
    e404:	ldr	r5, [sp, #28]
    e408:	ldr	r6, [sp, #32]
    e40c:	ldr	lr, [sp, #20]
    e410:	add	sp, sp, #40	; 0x28
    e414:	bx	lr
    e418:	.word	0x000005f6
    e41c:	.word	0x0000108e

0000e420 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
    e420:	mov	ip, sp
    e424:	sub	sp, sp, #40	; 0x28
    e428:	str	ip, [sp, #16]
    e42c:	str	lr, [sp, #20]
    e430:	str	r4, [sp, #24]
    e434:	str	r5, [sp, #28]
    e438:	str	r6, [sp, #32]
    e43c:	mov	r4, r1
    e440:	mov	r5, r0
    e444:	mov	r2, #0
    e448:	ldr	r3, [pc, #92]	; e4ac <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x8c>
    e44c:	mov	r6, #15
    e450:	mov	r1, #0
    e454:	mov	r0, #0
    e458:	str	r1, [sp, #12]
    e45c:	str	r0, [sp, #8]
    e460:	str	r6, [sp]
    e464:	mov	r1, r4
    e468:	mov	r0, r5
    e46c:	bl	0 <flatcc_json_printer_int64_field>
    e470:	mov	r2, #1
    e474:	ldr	r3, [pc, #52]	; e4b0 <MyGame_Example_TestJSONPrefixParsing3_print_json_table+0x90>
    e478:	mov	ip, #21
    e47c:	mov	r0, #0
    e480:	str	r0, [sp, #4]
    e484:	str	ip, [sp]
    e488:	mov	r1, r4
    e48c:	mov	r0, r5
    e490:	bl	0 <flatcc_json_printer_uint32_field>
    e494:	ldr	r4, [sp, #24]
    e498:	ldr	r5, [sp, #28]
    e49c:	ldr	r6, [sp, #32]
    e4a0:	ldr	lr, [sp, #20]
    e4a4:	add	sp, sp, #40	; 0x28
    e4a8:	bx	lr
    e4ac:	.word	0x000005f6
    e4b0:	.word	0x00002453

0000e4b4 <MyGame_Example_TestBase64_print_json_table>:
    e4b4:	mov	ip, sp
    e4b8:	sub	sp, sp, #24
    e4bc:	str	ip, [sp, #8]
    e4c0:	str	lr, [sp, #12]
    e4c4:	str	r4, [sp, #16]
    e4c8:	str	r5, [sp, #20]
    e4cc:	mov	r4, r1
    e4d0:	mov	r5, r0
    e4d4:	mov	r2, #0
    e4d8:	ldr	r3, [pc, #124]	; e55c <MyGame_Example_TestBase64_print_json_table+0xa8>
    e4dc:	mov	r1, #4
    e4e0:	mov	r0, #0
    e4e4:	str	r0, [sp, #4]
    e4e8:	str	r1, [sp]
    e4ec:	mov	r1, r4
    e4f0:	mov	r0, r5
    e4f4:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    e4f8:	mov	r2, #1
    e4fc:	ldr	r3, [pc, #80]	; e554 <MyGame_Example_TestBase64_print_json_table+0xa0>
    e500:	mov	ip, #7
    e504:	mov	r0, #1
    e508:	str	r0, [sp, #4]
    e50c:	str	ip, [sp]
    e510:	mov	r1, r4
    e514:	mov	r0, r5
    e518:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    e51c:	mov	r2, #2
    e520:	ldr	r3, [pc, #48]	; e558 <MyGame_Example_TestBase64_print_json_table+0xa4>
    e524:	mov	ip, #6
    e528:	mov	r1, #0
    e52c:	str	r1, [sp, #4]
    e530:	str	ip, [sp]
    e534:	mov	r1, r4
    e538:	mov	r0, r5
    e53c:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    e540:	ldr	r4, [sp, #16]
    e544:	ldr	r5, [sp, #20]
    e548:	ldr	lr, [sp, #12]
    e54c:	add	sp, sp, #24
    e550:	bx	lr
    e554:	.word	0x000005da
    e558:	.word	0x000023b4
    e55c:	.word	0x00000821

0000e560 <MyGame_Example_Monster_print_json_table>:
    e560:	mov	ip, sp
    e564:	sub	sp, sp, #40	; 0x28
    e568:	str	ip, [sp, #16]
    e56c:	str	lr, [sp, #20]
    e570:	str	r4, [sp, #24]
    e574:	str	r5, [sp, #28]
    e578:	str	r6, [sp, #32]
    e57c:	mov	r4, r1
    e580:	mov	r5, r0
    e584:	mov	r2, #0
    e588:	ldr	r3, [pc, #1340]	; eacc <MyGame_Example_Monster_print_json_table+0x56c>
    e58c:	mov	ip, #3
    e590:	ldr	r0, [pc, #1300]	; eaac <MyGame_Example_Monster_print_json_table+0x54c>
    e594:	str	r0, [sp, #4]
    e598:	str	ip, [sp]
    e59c:	mov	r1, r4
    e5a0:	mov	r0, r5
    e5a4:	bl	0 <flatcc_json_printer_struct_field>
    e5a8:	mov	r2, #1
    e5ac:	ldr	r3, [pc, #1316]	; ead8 <MyGame_Example_Monster_print_json_table+0x578>
    e5b0:	mov	r0, #4
    e5b4:	mov	r1, #150	; 0x96
    e5b8:	str	r1, [sp, #4]
    e5bc:	str	r0, [sp]
    e5c0:	mov	r1, r4
    e5c4:	mov	r0, r5
    e5c8:	bl	0 <flatcc_json_printer_int16_field>
    e5cc:	mov	r2, #2
    e5d0:	ldr	r3, [pc, #1192]	; ea80 <MyGame_Example_Monster_print_json_table+0x520>
    e5d4:	mov	r0, #2
    e5d8:	mov	r1, #100	; 0x64
    e5dc:	str	r1, [sp, #4]
    e5e0:	str	r0, [sp]
    e5e4:	mov	r1, r4
    e5e8:	mov	r0, r5
    e5ec:	bl	0 <flatcc_json_printer_int16_field>
    e5f0:	mov	r2, #3
    e5f4:	ldr	r3, [pc, #1256]	; eae4 <MyGame_Example_Monster_print_json_table+0x584>
    e5f8:	mov	r1, #4
    e5fc:	str	r1, [sp]
    e600:	mov	r1, r4
    e604:	mov	r0, r5
    e608:	bl	0 <flatcc_json_printer_string_field>
    e60c:	mov	r2, #5
    e610:	ldr	r3, [pc, #1288]	; eb20 <MyGame_Example_Monster_print_json_table+0x5c0>
    e614:	mov	r0, #9
    e618:	str	r0, [sp]
    e61c:	mov	r1, r4
    e620:	mov	r0, r5
    e624:	bl	0 <flatcc_json_printer_uint8_vector_field>
    e628:	mov	r2, #6
    e62c:	ldr	r3, [pc, #1224]	; eafc <MyGame_Example_Monster_print_json_table+0x59c>
    e630:	mov	r0, #5
    e634:	mov	r1, #8
    e638:	ldr	r6, [pc, #1136]	; eab0 <MyGame_Example_Monster_print_json_table+0x550>
    e63c:	str	r6, [sp, #8]
    e640:	str	r1, [sp, #4]
    e644:	str	r0, [sp]
    e648:	mov	r1, r4
    e64c:	mov	r0, r5
    e650:	bl	0 <flatcc_json_printer_int8_enum_field>
    e654:	mov	r2, #8
    e658:	ldr	r3, [pc, #1096]	; eaa8 <MyGame_Example_Monster_print_json_table+0x548>
    e65c:	mov	ip, #4
    e660:	ldr	r0, [pc, #1152]	; eae8 <MyGame_Example_Monster_print_json_table+0x588>
    e664:	ldr	r1, [pc, #1048]	; ea84 <MyGame_Example_Monster_print_json_table+0x524>
    e668:	str	r1, [sp, #8]
    e66c:	str	r0, [sp, #4]
    e670:	str	ip, [sp]
    e674:	mov	r1, r4
    e678:	mov	r0, r5
    e67c:	bl	0 <flatcc_json_printer_union_field>
    e680:	mov	r2, #9
    e684:	ldr	r3, [pc, #1064]	; eab4 <MyGame_Example_Monster_print_json_table+0x554>
    e688:	mov	r0, #5
    e68c:	mov	r1, #4
    e690:	ldr	r6, [pc, #1112]	; eaf0 <MyGame_Example_Monster_print_json_table+0x590>
    e694:	str	r6, [sp, #8]
    e698:	str	r1, [sp, #4]
    e69c:	str	r0, [sp]
    e6a0:	mov	r1, r4
    e6a4:	mov	r0, r5
    e6a8:	bl	0 <flatcc_json_printer_struct_vector_field>
    e6ac:	mov	r2, #10
    e6b0:	ldr	r3, [pc, #1096]	; eb00 <MyGame_Example_Monster_print_json_table+0x5a0>
    e6b4:	mov	ip, #17
    e6b8:	str	ip, [sp]
    e6bc:	mov	r1, r4
    e6c0:	mov	r0, r5
    e6c4:	bl	0 <flatcc_json_printer_string_vector_field>
    e6c8:	mov	r2, #11
    e6cc:	ldr	r3, [pc, #996]	; eab8 <MyGame_Example_Monster_print_json_table+0x558>
    e6d0:	mov	ip, #17
    e6d4:	ldr	r0, [pc, #948]	; ea90 <MyGame_Example_Monster_print_json_table+0x530>
    e6d8:	str	r0, [sp, #4]
    e6dc:	str	ip, [sp]
    e6e0:	mov	r1, r4
    e6e4:	mov	r0, r5
    e6e8:	bl	0 <flatcc_json_printer_table_vector_field>
    e6ec:	mov	r2, #12
    e6f0:	ldr	r3, [pc, #936]	; eaa0 <MyGame_Example_Monster_print_json_table+0x540>
    e6f4:	mov	r0, #5
    e6f8:	ldr	r1, [pc, #912]	; ea90 <MyGame_Example_Monster_print_json_table+0x530>
    e6fc:	str	r1, [sp, #4]
    e700:	str	r0, [sp]
    e704:	mov	r1, r4
    e708:	mov	r0, r5
    e70c:	bl	0 <flatcc_json_printer_table_field>
    e710:	mov	r2, #13
    e714:	ldr	r3, [pc, #1012]	; eb10 <MyGame_Example_Monster_print_json_table+0x5b0>
    e718:	mov	r0, #20
    e71c:	mov	r1, #0
    e720:	ldr	ip, [pc, #872]	; ea90 <MyGame_Example_Monster_print_json_table+0x530>
    e724:	str	ip, [sp, #8]
    e728:	str	r1, [sp, #4]
    e72c:	str	r0, [sp]
    e730:	mov	r1, r4
    e734:	mov	r0, r5
    e738:	bl	0 <flatcc_json_printer_table_as_nested_root>
    e73c:	mov	r2, #14
    e740:	ldr	r3, [pc, #860]	; eaa4 <MyGame_Example_Monster_print_json_table+0x544>
    e744:	mov	r0, #9
    e748:	ldr	r1, [pc, #908]	; eadc <MyGame_Example_Monster_print_json_table+0x57c>
    e74c:	str	r1, [sp, #4]
    e750:	str	r0, [sp]
    e754:	mov	r1, r4
    e758:	mov	r0, r5
    e75c:	bl	0 <flatcc_json_printer_table_field>
    e760:	mov	r2, #15
    e764:	ldr	r3, [pc, #860]	; eac8 <MyGame_Example_Monster_print_json_table+0x568>
    e768:	mov	r0, #8
    e76c:	mov	r1, #1
    e770:	str	r1, [sp, #4]
    e774:	str	r0, [sp]
    e778:	mov	r1, r4
    e77c:	mov	r0, r5
    e780:	bl	0 <flatcc_json_printer_bool_field>
    e784:	mov	r2, #16
    e788:	ldr	r3, [pc, #920]	; eb28 <MyGame_Example_Monster_print_json_table+0x5c8>
    e78c:	mov	r0, #16
    e790:	mov	ip, #0
    e794:	str	ip, [sp, #4]
    e798:	str	r0, [sp]
    e79c:	mov	r1, r4
    e7a0:	mov	r0, r5
    e7a4:	bl	0 <flatcc_json_printer_int32_field>
    e7a8:	mov	r2, #17
    e7ac:	ldr	r3, [pc, #852]	; eb08 <MyGame_Example_Monster_print_json_table+0x5a8>
    e7b0:	mov	r0, #16
    e7b4:	mov	ip, #0
    e7b8:	str	ip, [sp, #4]
    e7bc:	str	r0, [sp]
    e7c0:	mov	r1, r4
    e7c4:	mov	r0, r5
    e7c8:	bl	0 <flatcc_json_printer_uint32_field>
    e7cc:	mov	r2, #18
    e7d0:	ldr	r3, [pc, #760]	; ead0 <MyGame_Example_Monster_print_json_table+0x570>
    e7d4:	mov	r1, #16
    e7d8:	mov	r0, #0
    e7dc:	mov	ip, #0
    e7e0:	str	r0, [sp, #12]
    e7e4:	str	ip, [sp, #8]
    e7e8:	str	r1, [sp]
    e7ec:	mov	r1, r4
    e7f0:	mov	r0, r5
    e7f4:	bl	0 <flatcc_json_printer_int64_field>
    e7f8:	mov	r2, #19
    e7fc:	ldr	r3, [pc, #752]	; eaf4 <MyGame_Example_Monster_print_json_table+0x594>
    e800:	mov	r1, #16
    e804:	mov	r0, #0
    e808:	mov	ip, #0
    e80c:	str	r0, [sp, #12]
    e810:	str	ip, [sp, #8]
    e814:	str	r1, [sp]
    e818:	mov	r1, r4
    e81c:	mov	r0, r5
    e820:	bl	0 <flatcc_json_printer_uint64_field>
    e824:	mov	r2, #20
    e828:	ldr	r3, [pc, #620]	; ea9c <MyGame_Example_Monster_print_json_table+0x53c>
    e82c:	mov	ip, #17
    e830:	mov	r0, #0
    e834:	str	r0, [sp, #4]
    e838:	str	ip, [sp]
    e83c:	mov	r1, r4
    e840:	mov	r0, r5
    e844:	bl	0 <flatcc_json_printer_int32_field>
    e848:	mov	r2, #21
    e84c:	ldr	r3, [pc, #696]	; eb0c <MyGame_Example_Monster_print_json_table+0x5ac>
    e850:	mov	r0, #17
    e854:	mov	ip, #0
    e858:	str	ip, [sp, #4]
    e85c:	str	r0, [sp]
    e860:	mov	r1, r4
    e864:	mov	r0, r5
    e868:	bl	0 <flatcc_json_printer_uint32_field>
    e86c:	mov	r2, #22
    e870:	ldr	r3, [pc, #628]	; eaec <MyGame_Example_Monster_print_json_table+0x58c>
    e874:	mov	r6, #17
    e878:	mov	r1, #0
    e87c:	mov	r0, #0
    e880:	str	r1, [sp, #12]
    e884:	str	r0, [sp, #8]
    e888:	str	r6, [sp]
    e88c:	mov	r1, r4
    e890:	mov	r0, r5
    e894:	bl	0 <flatcc_json_printer_int64_field>
    e898:	mov	r2, #23
    e89c:	ldr	r3, [pc, #640]	; eb24 <MyGame_Example_Monster_print_json_table+0x5c4>
    e8a0:	mov	r0, #17
    e8a4:	mov	ip, #0
    e8a8:	mov	r1, #0
    e8ac:	str	ip, [sp, #12]
    e8b0:	str	r1, [sp, #8]
    e8b4:	str	r0, [sp]
    e8b8:	mov	r1, r4
    e8bc:	mov	r0, r5
    e8c0:	bl	0 <flatcc_json_printer_uint64_field>
    e8c4:	mov	r2, #24
    e8c8:	ldr	r3, [pc, #456]	; ea98 <MyGame_Example_Monster_print_json_table+0x538>
    e8cc:	mov	r0, #16
    e8d0:	str	r0, [sp]
    e8d4:	mov	r1, r4
    e8d8:	mov	r0, r5
    e8dc:	bl	0 <flatcc_json_printer_bool_vector_field>
    e8e0:	mov	r2, #25
    e8e4:	ldr	r3, [pc, #552]	; eb14 <MyGame_Example_Monster_print_json_table+0x5b4>
    e8e8:	mov	ip, #5
    e8ec:	vldr	d6, [pc, #580]	; eb38 <MyGame_Example_Monster_print_json_table+0x5d8>
    e8f0:	vcvt.f32.f64	s0, d6
    e8f4:	str	ip, [sp]
    e8f8:	mov	r1, r4
    e8fc:	mov	r0, r5
    e900:	vmov.f32	s0, s0
    e904:	bl	0 <flatcc_json_printer_float_field>
    e908:	mov	r2, #26
    e90c:	ldr	r3, [pc, #520]	; eb1c <MyGame_Example_Monster_print_json_table+0x5bc>
    e910:	mov	r0, #6
    e914:	vmov.f64	d3, #8	; 0x40400000  3.0
    e918:	vcvt.f32.f64	s0, d3
    e91c:	str	r0, [sp]
    e920:	mov	r1, r4
    e924:	mov	r0, r5
    e928:	vmov.f32	s0, s0
    e92c:	bl	0 <flatcc_json_printer_float_field>
    e930:	mov	r2, #27
    e934:	ldr	r3, [pc, #344]	; ea94 <MyGame_Example_Monster_print_json_table+0x534>
    e938:	mov	ip, #6
    e93c:	vldr	d2, [pc, #492]	; eb30 <MyGame_Example_Monster_print_json_table+0x5d0>
    e940:	vcvt.f32.f64	s0, d2
    e944:	str	ip, [sp]
    e948:	mov	r1, r4
    e94c:	mov	r0, r5
    e950:	vmov.f32	s0, s0
    e954:	bl	0 <flatcc_json_printer_float_field>
    e958:	mov	r2, #28
    e95c:	ldr	r3, [pc, #436]	; eb18 <MyGame_Example_Monster_print_json_table+0x5b8>
    e960:	mov	r1, #18
    e964:	str	r1, [sp]
    e968:	mov	r1, r4
    e96c:	mov	r0, r5
    e970:	bl	0 <flatcc_json_printer_string_vector_field>
    e974:	mov	r2, #29
    e978:	ldr	r3, [pc, #352]	; eae0 <MyGame_Example_Monster_print_json_table+0x580>
    e97c:	mov	r1, #23
    e980:	mov	r0, #8
    e984:	ldr	ip, [pc, #252]	; ea88 <MyGame_Example_Monster_print_json_table+0x528>
    e988:	str	ip, [sp, #8]
    e98c:	str	r0, [sp, #4]
    e990:	str	r1, [sp]
    e994:	mov	r1, r4
    e998:	mov	r0, r5
    e99c:	bl	0 <flatcc_json_printer_struct_vector_field>
    e9a0:	mov	r2, #30
    e9a4:	ldr	r3, [pc, #384]	; eb2c <MyGame_Example_Monster_print_json_table+0x5cc>
    e9a8:	mov	r1, #4
    e9ac:	str	r1, [sp]
    e9b0:	mov	r1, r4
    e9b4:	mov	r0, r5
    e9b8:	bl	0 <flatcc_json_printer_uint8_vector_field>
    e9bc:	mov	r2, #31
    e9c0:	ldr	r3, [pc, #244]	; eabc <MyGame_Example_Monster_print_json_table+0x55c>
    e9c4:	mov	ip, #5
    e9c8:	mov	r0, #4
    e9cc:	ldr	r1, [pc, #284]	; eaf0 <MyGame_Example_Monster_print_json_table+0x590>
    e9d0:	str	r1, [sp, #8]
    e9d4:	str	r0, [sp, #4]
    e9d8:	str	ip, [sp]
    e9dc:	mov	r1, r4
    e9e0:	mov	r0, r5
    e9e4:	bl	0 <flatcc_json_printer_struct_vector_field>
    e9e8:	mov	r2, #32
    e9ec:	ldr	r3, [pc, #224]	; ead4 <MyGame_Example_Monster_print_json_table+0x574>
    e9f0:	mov	r1, #15
    e9f4:	str	r1, [sp]
    e9f8:	mov	r1, r4
    e9fc:	mov	r0, r5
    ea00:	bl	0 <flatcc_json_printer_int64_vector_field>
    ea04:	mov	r2, #33	; 0x21
    ea08:	ldr	r3, [pc, #244]	; eb04 <MyGame_Example_Monster_print_json_table+0x5a4>
    ea0c:	mov	ip, #17
    ea10:	str	ip, [sp]
    ea14:	mov	r1, r4
    ea18:	mov	r0, r5
    ea1c:	bl	0 <flatcc_json_printer_double_vector_field>
    ea20:	mov	r2, #34	; 0x22
    ea24:	ldr	r3, [pc, #148]	; eac0 <MyGame_Example_Monster_print_json_table+0x560>
    ea28:	mov	r0, #21
    ea2c:	ldr	ip, [pc, #196]	; eaf8 <MyGame_Example_Monster_print_json_table+0x598>
    ea30:	str	ip, [sp, #4]
    ea34:	str	r0, [sp]
    ea38:	mov	r1, r4
    ea3c:	mov	r0, r5
    ea40:	bl	0 <flatcc_json_printer_table_field>
    ea44:	mov	r2, #35	; 0x23
    ea48:	ldr	r3, [pc, #116]	; eac4 <MyGame_Example_Monster_print_json_table+0x564>
    ea4c:	mov	r1, #10
    ea50:	ldr	r0, [pc, #52]	; ea8c <MyGame_Example_Monster_print_json_table+0x52c>
    ea54:	str	r0, [sp, #4]
    ea58:	str	r1, [sp]
    ea5c:	mov	r1, r4
    ea60:	mov	r0, r5
    ea64:	bl	0 <flatcc_json_printer_table_field>
    ea68:	ldr	r4, [sp, #24]
    ea6c:	ldr	r5, [sp, #28]
    ea70:	ldr	r6, [sp, #32]
    ea74:	ldr	lr, [sp, #20]
    ea78:	add	sp, sp, #40	; 0x28
    ea7c:	bx	lr
    ea80:	.word	0x00003110
	...
    ea94:	.word	0x000014b3
    ea98:	.word	0x00000aa4
    ea9c:	.word	0x000006e5
    eaa0:	.word	0x000029be
    eaa4:	.word	0x00001332
    eaa8:	.word	0x0000349e
	...
    eab4:	.word	0x00002848
    eab8:	.word	0x000020a5
    eabc:	.word	0x0000345b
    eac0:	.word	0x00000a47
    eac4:	.word	0x00000383
    eac8:	.word	0x00002da6
    eacc:	.word	0x00001c70
    ead0:	.word	0x00001a5e
    ead4:	.word	0x00003aa0
    ead8:	.word	0x000023bb
    eadc:	.word	0x00000000
    eae0:	.word	0x000039d2
    eae4:	.word	0x0000037e
    eae8:	.word	0x00000000
    eaec:	.word	0x00001a42
    eaf0:	.word	0x00000000
    eaf4:	.word	0x00000ab5
    eaf8:	.word	0x00000000
    eafc:	.word	0x000034e4
    eb00:	.word	0x000038d1
    eb04:	.word	0x00000a35
    eb08:	.word	0x00002b74
    eb0c:	.word	0x00000d2c
    eb10:	.word	0x000005ad
    eb14:	.word	0x000032cb
    eb18:	.word	0x00001a84
    eb1c:	.word	0x00002d7a
    eb20:	.word	0x000019c5
    eb24:	.word	0x00001205
    eb28:	.word	0x0000131b
    eb2c:	.word	0x00001bb4
	...
    eb3c:	.word	0x41132cbc

0000eb40 <Fantasy_Attacker_print_json_table>:
    eb40:	mov	ip, sp
    eb44:	sub	sp, sp, #24
    eb48:	str	ip, [sp, #8]
    eb4c:	str	lr, [sp, #12]
    eb50:	str	r4, [sp, #16]
    eb54:	str	r5, [sp, #20]
    eb58:	mov	r2, #0
    eb5c:	ldr	r3, [pc, #36]	; eb88 <Fantasy_Attacker_print_json_table+0x48>
    eb60:	mov	r4, #19
    eb64:	mov	r5, #0
    eb68:	str	r5, [sp, #4]
    eb6c:	str	r4, [sp]
    eb70:	bl	0 <flatcc_json_printer_int32_field>
    eb74:	ldr	r4, [sp, #16]
    eb78:	ldr	r5, [sp, #20]
    eb7c:	ldr	lr, [sp, #12]
    eb80:	add	sp, sp, #24
    eb84:	bx	lr
    eb88:	.word	0x000005e2

0000eb8c <Fantasy_Movie_print_json_table>:
    eb8c:	mov	ip, sp
    eb90:	sub	sp, sp, #40	; 0x28
    eb94:	str	ip, [sp, #12]
    eb98:	str	lr, [sp, #16]
    eb9c:	str	r4, [sp, #24]
    eba0:	str	r5, [sp, #28]
    eba4:	str	r6, [sp, #32]
    eba8:	mov	r4, r1
    ebac:	mov	r5, r0
    ebb0:	mov	r2, #1
    ebb4:	ldr	r3, [pc, #256]	; ecbc <Fantasy_Movie_print_json_table+0x130>
    ebb8:	mov	r1, #14
    ebbc:	ldr	r0, [pc, #224]	; eca4 <Fantasy_Movie_print_json_table+0x118>
    ebc0:	ldr	r6, [pc, #232]	; ecb0 <Fantasy_Movie_print_json_table+0x124>
    ebc4:	str	r6, [sp, #8]
    ebc8:	str	r0, [sp, #4]
    ebcc:	str	r1, [sp]
    ebd0:	mov	r1, r4
    ebd4:	mov	r0, r5
    ebd8:	bl	0 <flatcc_json_printer_union_field>
    ebdc:	mov	r2, #3
    ebe0:	ldr	r3, [pc, #208]	; ecb8 <Fantasy_Movie_print_json_table+0x12c>
    ebe4:	mov	r0, #10
    ebe8:	ldr	ip, [pc, #180]	; eca4 <Fantasy_Movie_print_json_table+0x118>
    ebec:	ldr	r1, [pc, #188]	; ecb0 <Fantasy_Movie_print_json_table+0x124>
    ebf0:	str	r1, [sp, #8]
    ebf4:	str	ip, [sp, #4]
    ebf8:	str	r0, [sp]
    ebfc:	mov	r1, r4
    ec00:	mov	r0, r5
    ec04:	bl	0 <flatcc_json_printer_union_field>
    ec08:	mov	r2, #5
    ec0c:	ldr	r3, [pc, #160]	; ecb4 <Fantasy_Movie_print_json_table+0x128>
    ec10:	mov	ip, #9
    ec14:	ldr	r1, [pc, #136]	; eca4 <Fantasy_Movie_print_json_table+0x118>
    ec18:	ldr	r0, [pc, #144]	; ecb0 <Fantasy_Movie_print_json_table+0x124>
    ec1c:	str	r0, [sp, #8]
    ec20:	str	r1, [sp, #4]
    ec24:	str	ip, [sp]
    ec28:	mov	r1, r4
    ec2c:	mov	r0, r5
    ec30:	bl	0 <flatcc_json_printer_union_field>
    ec34:	mov	r2, #7
    ec38:	ldr	r3, [pc, #108]	; ecac <Fantasy_Movie_print_json_table+0x120>
    ec3c:	mov	r1, #5
    ec40:	ldr	r0, [pc, #92]	; eca4 <Fantasy_Movie_print_json_table+0x118>
    ec44:	ldr	ip, [pc, #100]	; ecb0 <Fantasy_Movie_print_json_table+0x124>
    ec48:	str	ip, [sp, #8]
    ec4c:	str	r0, [sp, #4]
    ec50:	str	r1, [sp]
    ec54:	mov	r1, r4
    ec58:	mov	r0, r5
    ec5c:	bl	0 <flatcc_json_printer_union_field>
    ec60:	mov	r2, #9
    ec64:	ldr	r3, [pc, #60]	; eca8 <Fantasy_Movie_print_json_table+0x11c>
    ec68:	mov	r0, #10
    ec6c:	ldr	r1, [pc, #48]	; eca4 <Fantasy_Movie_print_json_table+0x118>
    ec70:	ldr	ip, [pc, #56]	; ecb0 <Fantasy_Movie_print_json_table+0x124>
    ec74:	str	ip, [sp, #8]
    ec78:	str	r1, [sp, #4]
    ec7c:	str	r0, [sp]
    ec80:	mov	r1, r4
    ec84:	mov	r0, r5
    ec88:	bl	0 <flatcc_json_printer_union_vector_field>
    ec8c:	ldr	r4, [sp, #24]
    ec90:	ldr	r5, [sp, #28]
    ec94:	ldr	r6, [sp, #32]
    ec98:	ldr	lr, [sp, #16]
    ec9c:	add	sp, sp, #40	; 0x28
    eca0:	bx	lr
    eca4:	.word	0x00000000
    eca8:	.word	0x000032b5
    ecac:	.word	0x0000132c
    ecb0:	.word	0x00000000
    ecb4:	.word	0x00000d93
    ecb8:	.word	0x00000a99
    ecbc:	.word	0x00001217

0000ecc0 <MyGame_Example_Any_union_verifier>:
    ecc0:	mov	ip, sp
    ecc4:	sub	sp, sp, #8
    ecc8:	str	ip, [sp]
    eccc:	str	lr, [sp, #4]
    ecd0:	ldrb	r2, [r0, #12]
    ecd4:	cmp	r2, #3
    ecd8:	bcs	ed04 <MyGame_Example_Any_union_verifier+0x44>
    ecdc:	cmp	r2, #1
    ece0:	beq	ecf8 <MyGame_Example_Any_union_verifier+0x38>
    ece4:	cmp	r2, #2
    ece8:	bne	ed20 <MyGame_Example_Any_union_verifier+0x60>
    ecec:	ldr	r1, [pc, #84]	; ed48 <MyGame_Example_Any_union_verifier+0x88>
    ecf0:	bl	0 <flatcc_verify_union_table>
    ecf4:	b	ed30 <MyGame_Example_Any_union_verifier+0x70>
    ecf8:	ldr	r1, [pc, #60]	; ed3c <MyGame_Example_Any_union_verifier+0x7c>
    ecfc:	bl	0 <flatcc_verify_union_table>
    ed00:	b	ed30 <MyGame_Example_Any_union_verifier+0x70>
    ed04:	cmp	r2, #3
    ed08:	beq	ed28 <MyGame_Example_Any_union_verifier+0x68>
    ed0c:	cmp	r2, #4
    ed10:	bne	ed20 <MyGame_Example_Any_union_verifier+0x60>
    ed14:	ldr	r1, [pc, #40]	; ed44 <MyGame_Example_Any_union_verifier+0x84>
    ed18:	bl	0 <flatcc_verify_union_table>
    ed1c:	b	ed30 <MyGame_Example_Any_union_verifier+0x70>
    ed20:	mov	r0, #0
    ed24:	b	ed30 <MyGame_Example_Any_union_verifier+0x70>
    ed28:	ldr	r1, [pc, #16]	; ed40 <MyGame_Example_Any_union_verifier+0x80>
    ed2c:	bl	0 <flatcc_verify_union_table>
    ed30:	ldr	lr, [sp, #4]
    ed34:	add	sp, sp, #8
    ed38:	bx	lr
	...

0000ed4c <Fantasy_Character_union_verifier>:
    ed4c:	mov	ip, sp
    ed50:	sub	sp, sp, #8
    ed54:	str	ip, [sp]
    ed58:	str	lr, [sp, #4]
    ed5c:	ldrb	ip, [r0, #12]
    ed60:	cmp	ip, #10
    ed64:	bcs	edac <Fantasy_Character_union_verifier+0x60>
    ed68:	cmp	ip, #2
    ed6c:	beq	eda0 <Fantasy_Character_union_verifier+0x54>
    ed70:	cmp	ip, #8
    ed74:	beq	ed90 <Fantasy_Character_union_verifier+0x44>
    ed78:	cmp	ip, #9
    ed7c:	bne	edcc <Fantasy_Character_union_verifier+0x80>
    ed80:	mov	r1, #4
    ed84:	mov	r2, #4
    ed88:	bl	0 <flatcc_verify_union_struct>
    ed8c:	b	ede8 <Fantasy_Character_union_verifier+0x9c>
    ed90:	mov	r1, #2
    ed94:	mov	r2, #2
    ed98:	bl	0 <flatcc_verify_union_struct>
    ed9c:	b	ede8 <Fantasy_Character_union_verifier+0x9c>
    eda0:	ldr	r1, [pc, #76]	; edf4 <Fantasy_Character_union_verifier+0xa8>
    eda4:	bl	0 <flatcc_verify_union_table>
    eda8:	b	ede8 <Fantasy_Character_union_verifier+0x9c>
    edac:	cmp	ip, #10
    edb0:	beq	eddc <Fantasy_Character_union_verifier+0x90>
    edb4:	cmp	ip, #11
    edb8:	beq	edd4 <Fantasy_Character_union_verifier+0x88>
    edbc:	cmp	ip, #255	; 0xff
    edc0:	bne	edcc <Fantasy_Character_union_verifier+0x80>
    edc4:	bl	0 <flatcc_verify_union_string>
    edc8:	b	ede8 <Fantasy_Character_union_verifier+0x9c>
    edcc:	mov	r0, #0
    edd0:	b	ede8 <Fantasy_Character_union_verifier+0x9c>
    edd4:	bl	0 <flatcc_verify_union_string>
    edd8:	b	ede8 <Fantasy_Character_union_verifier+0x9c>
    eddc:	mov	r1, #4
    ede0:	mov	r2, #4
    ede4:	bl	0 <flatcc_verify_union_struct>
    ede8:	ldr	lr, [sp, #4]
    edec:	add	sp, sp, #8
    edf0:	bx	lr
    edf4:	.word	0x00000000

0000edf8 <MyGame_InParentNamespace_verify_table>:
    edf8:	mov	ip, sp
    edfc:	sub	sp, sp, #8
    ee00:	str	ip, [sp]
    ee04:	str	lr, [sp, #4]
    ee08:	mov	r0, #0
    ee0c:	ldr	lr, [sp, #4]
    ee10:	add	sp, sp, #8
    ee14:	bx	lr

0000ee18 <MyGame_Example2_Monster_verify_table>:
    ee18:	mov	ip, sp
    ee1c:	sub	sp, sp, #8
    ee20:	str	ip, [sp]
    ee24:	str	lr, [sp, #4]
    ee28:	mov	r0, #0
    ee2c:	ldr	lr, [sp, #4]
    ee30:	add	sp, sp, #8
    ee34:	bx	lr

0000ee38 <MyGame_Example_TestSimpleTableWithEnum_verify_table>:
    ee38:	mov	ip, sp
    ee3c:	sub	sp, sp, #16
    ee40:	str	ip, [sp]
    ee44:	str	lr, [sp, #4]
    ee48:	str	r4, [sp, #8]
    ee4c:	mov	r4, r0
    ee50:	mov	r1, #0
    ee54:	mov	r2, #1
    ee58:	mov	r3, #1
    ee5c:	mov	r0, r4
    ee60:	bl	0 <flatcc_verify_field>
    ee64:	cmp	r0, #0
    ee68:	bne	eec4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
    ee6c:	mov	r1, #1
    ee70:	mov	r2, #1
    ee74:	mov	r3, #1
    ee78:	mov	r0, r4
    ee7c:	bl	0 <flatcc_verify_field>
    ee80:	cmp	r0, #0
    ee84:	bne	eec4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
    ee88:	mov	r1, #2
    ee8c:	mov	r2, #1
    ee90:	mov	r3, #1
    ee94:	mov	r0, r4
    ee98:	bl	0 <flatcc_verify_field>
    ee9c:	cmp	r0, #0
    eea0:	bne	eec4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
    eea4:	mov	r1, #3
    eea8:	mov	r2, #1
    eeac:	mov	r3, #1
    eeb0:	mov	r0, r4
    eeb4:	bl	0 <flatcc_verify_field>
    eeb8:	cmp	r0, #0
    eebc:	bne	eec4 <MyGame_Example_TestSimpleTableWithEnum_verify_table+0x8c>
    eec0:	mov	r0, #0
    eec4:	ldr	r4, [sp, #8]
    eec8:	ldr	lr, [sp, #4]
    eecc:	add	sp, sp, #16
    eed0:	bx	lr

0000eed4 <MyGame_Example_Stat_verify_table>:
    eed4:	mov	ip, sp
    eed8:	sub	sp, sp, #16
    eedc:	str	ip, [sp]
    eee0:	str	lr, [sp, #4]
    eee4:	str	r4, [sp, #8]
    eee8:	mov	r4, r0
    eeec:	mov	r1, #0
    eef0:	mov	r2, #0
    eef4:	mov	r0, r4
    eef8:	bl	0 <flatcc_verify_string_field>
    eefc:	cmp	r0, #0
    ef00:	bne	ef40 <MyGame_Example_Stat_verify_table+0x6c>
    ef04:	mov	r1, #1
    ef08:	mov	r2, #8
    ef0c:	mov	r3, #8
    ef10:	mov	r0, r4
    ef14:	bl	0 <flatcc_verify_field>
    ef18:	cmp	r0, #0
    ef1c:	bne	ef40 <MyGame_Example_Stat_verify_table+0x6c>
    ef20:	mov	r1, #2
    ef24:	mov	r2, #2
    ef28:	mov	r3, #2
    ef2c:	mov	r0, r4
    ef30:	bl	0 <flatcc_verify_field>
    ef34:	cmp	r0, #0
    ef38:	bne	ef40 <MyGame_Example_Stat_verify_table+0x6c>
    ef3c:	mov	r0, #0
    ef40:	ldr	r4, [sp, #8]
    ef44:	ldr	lr, [sp, #4]
    ef48:	add	sp, sp, #16
    ef4c:	bx	lr

0000ef50 <MyGame_Example_Alt_verify_table>:
    ef50:	mov	ip, sp
    ef54:	sub	sp, sp, #16
    ef58:	str	ip, [sp]
    ef5c:	str	lr, [sp, #4]
    ef60:	str	r4, [sp, #8]
    ef64:	mov	r4, r0
    ef68:	mov	r1, #0
    ef6c:	mov	r2, #0
    ef70:	ldr	r3, [pc, #92]	; efd4 <MyGame_Example_Alt_verify_table+0x84>
    ef74:	mov	r0, r4
    ef78:	bl	0 <flatcc_verify_table_field>
    ef7c:	cmp	r0, #0
    ef80:	bne	efc0 <MyGame_Example_Alt_verify_table+0x70>
    ef84:	mov	r1, #1
    ef88:	mov	r2, #0
    ef8c:	ldr	r3, [pc, #60]	; efd0 <MyGame_Example_Alt_verify_table+0x80>
    ef90:	mov	r0, r4
    ef94:	bl	0 <flatcc_verify_table_field>
    ef98:	cmp	r0, #0
    ef9c:	bne	efc0 <MyGame_Example_Alt_verify_table+0x70>
    efa0:	mov	r1, #3
    efa4:	mov	r2, #0
    efa8:	ldr	r3, [pc, #40]	; efd8 <MyGame_Example_Alt_verify_table+0x88>
    efac:	mov	r0, r4
    efb0:	bl	0 <flatcc_verify_union_vector_field>
    efb4:	cmp	r0, #0
    efb8:	bne	efc0 <MyGame_Example_Alt_verify_table+0x70>
    efbc:	mov	r0, #0
    efc0:	ldr	r4, [sp, #8]
    efc4:	ldr	lr, [sp, #4]
    efc8:	add	sp, sp, #16
    efcc:	bx	lr
	...

0000efdc <MyGame_Example_TestJSONPrefix_verify_table>:
    efdc:	mov	ip, sp
    efe0:	sub	sp, sp, #16
    efe4:	str	ip, [sp]
    efe8:	str	lr, [sp, #4]
    efec:	str	r4, [sp, #8]
    eff0:	mov	r4, r0
    eff4:	mov	r1, #0
    eff8:	mov	r2, #0
    effc:	ldr	r3, [pc, #88]	; f05c <MyGame_Example_TestJSONPrefix_verify_table+0x80>
    f000:	mov	r0, r4
    f004:	bl	0 <flatcc_verify_table_field>
    f008:	cmp	r0, #0
    f00c:	bne	f04c <MyGame_Example_TestJSONPrefix_verify_table+0x70>
    f010:	mov	r1, #1
    f014:	mov	r2, #0
    f018:	ldr	r3, [pc, #64]	; f060 <MyGame_Example_TestJSONPrefix_verify_table+0x84>
    f01c:	mov	r0, r4
    f020:	bl	0 <flatcc_verify_table_field>
    f024:	cmp	r0, #0
    f028:	bne	f04c <MyGame_Example_TestJSONPrefix_verify_table+0x70>
    f02c:	mov	r1, #2
    f030:	mov	r2, #0
    f034:	ldr	r3, [pc, #40]	; f064 <MyGame_Example_TestJSONPrefix_verify_table+0x88>
    f038:	mov	r0, r4
    f03c:	bl	0 <flatcc_verify_table_field>
    f040:	cmp	r0, #0
    f044:	bne	f04c <MyGame_Example_TestJSONPrefix_verify_table+0x70>
    f048:	mov	r0, #0
    f04c:	ldr	r4, [sp, #8]
    f050:	ldr	lr, [sp, #4]
    f054:	add	sp, sp, #16
    f058:	bx	lr
	...

0000f068 <MyGame_Example_TestJSONPrefixParsing_verify_table>:
    f068:	mov	ip, sp
    f06c:	sub	sp, sp, #16
    f070:	str	ip, [sp]
    f074:	str	lr, [sp, #4]
    f078:	str	r4, [sp, #8]
    f07c:	mov	r4, r0
    f080:	mov	r1, #0
    f084:	mov	r2, #0
    f088:	mov	r0, r4
    f08c:	bl	0 <flatcc_verify_string_field>
    f090:	cmp	r0, #0
    f094:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f098:	mov	r1, #1
    f09c:	mov	r2, #4
    f0a0:	mov	r3, #4
    f0a4:	mov	r0, r4
    f0a8:	bl	0 <flatcc_verify_field>
    f0ac:	cmp	r0, #0
    f0b0:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f0b4:	mov	r1, #2
    f0b8:	mov	r2, #0
    f0bc:	mov	r0, r4
    f0c0:	bl	0 <flatcc_verify_string_field>
    f0c4:	cmp	r0, #0
    f0c8:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f0cc:	mov	r1, #3
    f0d0:	mov	r2, #8
    f0d4:	mov	r3, #8
    f0d8:	mov	r0, r4
    f0dc:	bl	0 <flatcc_verify_field>
    f0e0:	cmp	r0, #0
    f0e4:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f0e8:	mov	r1, #4
    f0ec:	mov	r2, #0
    f0f0:	mov	r0, r4
    f0f4:	bl	0 <flatcc_verify_string_field>
    f0f8:	cmp	r0, #0
    f0fc:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f100:	mov	r1, #5
    f104:	mov	r2, #8
    f108:	mov	r3, #8
    f10c:	mov	r0, r4
    f110:	bl	0 <flatcc_verify_field>
    f114:	cmp	r0, #0
    f118:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f11c:	mov	r1, #6
    f120:	mov	r2, #4
    f124:	mov	r3, #4
    f128:	mov	r0, r4
    f12c:	bl	0 <flatcc_verify_field>
    f130:	cmp	r0, #0
    f134:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f138:	mov	r1, #7
    f13c:	mov	r2, #8
    f140:	mov	r3, #8
    f144:	mov	r0, r4
    f148:	bl	0 <flatcc_verify_field>
    f14c:	cmp	r0, #0
    f150:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f154:	mov	r1, #8
    f158:	mov	r2, #4
    f15c:	mov	r3, #4
    f160:	mov	r0, r4
    f164:	bl	0 <flatcc_verify_field>
    f168:	cmp	r0, #0
    f16c:	bne	f174 <MyGame_Example_TestJSONPrefixParsing_verify_table+0x10c>
    f170:	mov	r0, #0
    f174:	ldr	r4, [sp, #8]
    f178:	ldr	lr, [sp, #4]
    f17c:	add	sp, sp, #16
    f180:	bx	lr

0000f184 <MyGame_Example_TestJSONPrefixParsing2_verify_table>:
    f184:	mov	ip, sp
    f188:	sub	sp, sp, #16
    f18c:	str	ip, [sp]
    f190:	str	lr, [sp, #4]
    f194:	str	r4, [sp, #8]
    f198:	mov	r4, r0
    f19c:	mov	r1, #0
    f1a0:	mov	r2, #8
    f1a4:	mov	r3, #8
    f1a8:	mov	r0, r4
    f1ac:	bl	0 <flatcc_verify_field>
    f1b0:	cmp	r0, #0
    f1b4:	bne	f1d8 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x54>
    f1b8:	mov	r1, #1
    f1bc:	mov	r2, #4
    f1c0:	mov	r3, #4
    f1c4:	mov	r0, r4
    f1c8:	bl	0 <flatcc_verify_field>
    f1cc:	cmp	r0, #0
    f1d0:	bne	f1d8 <MyGame_Example_TestJSONPrefixParsing2_verify_table+0x54>
    f1d4:	mov	r0, #0
    f1d8:	ldr	r4, [sp, #8]
    f1dc:	ldr	lr, [sp, #4]
    f1e0:	add	sp, sp, #16
    f1e4:	bx	lr

0000f1e8 <MyGame_Example_TestJSONPrefixParsing3_verify_table>:
    f1e8:	mov	ip, sp
    f1ec:	sub	sp, sp, #16
    f1f0:	str	ip, [sp]
    f1f4:	str	lr, [sp, #4]
    f1f8:	str	r4, [sp, #8]
    f1fc:	mov	r4, r0
    f200:	mov	r1, #0
    f204:	mov	r2, #8
    f208:	mov	r3, #8
    f20c:	mov	r0, r4
    f210:	bl	0 <flatcc_verify_field>
    f214:	cmp	r0, #0
    f218:	bne	f23c <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x54>
    f21c:	mov	r1, #1
    f220:	mov	r2, #4
    f224:	mov	r3, #4
    f228:	mov	r0, r4
    f22c:	bl	0 <flatcc_verify_field>
    f230:	cmp	r0, #0
    f234:	bne	f23c <MyGame_Example_TestJSONPrefixParsing3_verify_table+0x54>
    f238:	mov	r0, #0
    f23c:	ldr	r4, [sp, #8]
    f240:	ldr	lr, [sp, #4]
    f244:	add	sp, sp, #16
    f248:	bx	lr

0000f24c <MyGame_Example_TestBase64_verify_table>:
    f24c:	mov	ip, sp
    f250:	sub	sp, sp, #24
    f254:	str	ip, [sp, #8]
    f258:	str	lr, [sp, #12]
    f25c:	str	r4, [sp, #16]
    f260:	str	r5, [sp, #20]
    f264:	mov	r4, r0
    f268:	mov	r1, #0
    f26c:	mov	r2, #0
    f270:	mov	r3, #1
    f274:	mov	r0, #1
    f278:	mvn	ip, #0
    f27c:	str	ip, [sp, #4]
    f280:	str	r0, [sp]
    f284:	mov	r0, r4
    f288:	bl	0 <flatcc_verify_vector_field>
    f28c:	cmp	r0, #0
    f290:	bne	f2f0 <MyGame_Example_TestBase64_verify_table+0xa4>
    f294:	mov	r1, #1
    f298:	mov	r2, #0
    f29c:	mov	r3, #1
    f2a0:	mov	r5, #1
    f2a4:	mvn	r0, #0
    f2a8:	str	r0, [sp, #4]
    f2ac:	str	r5, [sp]
    f2b0:	mov	r0, r4
    f2b4:	bl	0 <flatcc_verify_vector_field>
    f2b8:	cmp	r0, #0
    f2bc:	bne	f2f0 <MyGame_Example_TestBase64_verify_table+0xa4>
    f2c0:	mov	r1, #2
    f2c4:	mov	r2, #0
    f2c8:	mov	r3, #0
    f2cc:	mov	ip, #1
    f2d0:	ldr	r0, [pc, #44]	; f304 <MyGame_Example_TestBase64_verify_table+0xb8>
    f2d4:	str	r0, [sp, #4]
    f2d8:	str	ip, [sp]
    f2dc:	mov	r0, r4
    f2e0:	bl	0 <flatcc_verify_table_as_nested_root>
    f2e4:	cmp	r0, #0
    f2e8:	bne	f2f0 <MyGame_Example_TestBase64_verify_table+0xa4>
    f2ec:	mov	r0, #0
    f2f0:	ldr	r4, [sp, #16]
    f2f4:	ldr	r5, [sp, #20]
    f2f8:	ldr	lr, [sp, #12]
    f2fc:	add	sp, sp, #24
    f300:	bx	lr
    f304:	.word	0x00000000

0000f308 <MyGame_Example_Monster_verify_table>:
    f308:	mov	ip, sp
    f30c:	sub	sp, sp, #24
    f310:	str	ip, [sp, #8]
    f314:	str	lr, [sp, #12]
    f318:	str	r4, [sp, #16]
    f31c:	str	r5, [sp, #20]
    f320:	mov	r4, r0
    f324:	mov	r1, #0
    f328:	mov	r2, #32
    f32c:	mov	r3, #16
    f330:	mov	r0, r4
    f334:	bl	0 <flatcc_verify_field>
    f338:	cmp	r0, #0
    f33c:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f340:	mov	r1, #2
    f344:	mov	r2, #2
    f348:	mov	r3, #2
    f34c:	mov	r0, r4
    f350:	bl	0 <flatcc_verify_field>
    f354:	cmp	r0, #0
    f358:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f35c:	mov	r1, #1
    f360:	mov	r2, #2
    f364:	mov	r3, #2
    f368:	mov	r0, r4
    f36c:	bl	0 <flatcc_verify_field>
    f370:	cmp	r0, #0
    f374:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f378:	mov	r1, #3
    f37c:	mov	r2, #1
    f380:	mov	r0, r4
    f384:	bl	0 <flatcc_verify_string_field>
    f388:	cmp	r0, #0
    f38c:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f390:	mov	r1, #6
    f394:	mov	r2, #1
    f398:	mov	r3, #1
    f39c:	mov	r0, r4
    f3a0:	bl	0 <flatcc_verify_field>
    f3a4:	cmp	r0, #0
    f3a8:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f3ac:	mov	r1, #5
    f3b0:	mov	r2, #0
    f3b4:	mov	r3, #1
    f3b8:	mov	r0, #1
    f3bc:	mvn	r5, #0
    f3c0:	str	r5, [sp, #4]
    f3c4:	str	r0, [sp]
    f3c8:	mov	r0, r4
    f3cc:	bl	0 <flatcc_verify_vector_field>
    f3d0:	cmp	r0, #0
    f3d4:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f3d8:	mov	r1, #11
    f3dc:	mov	r2, #0
    f3e0:	ldr	r3, [pc, #912]	; f778 <MyGame_Example_Monster_verify_table+0x470>
    f3e4:	mov	r0, r4
    f3e8:	bl	0 <flatcc_verify_table_vector_field>
    f3ec:	cmp	r0, #0
    f3f0:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f3f4:	mov	r1, #10
    f3f8:	mov	r2, #0
    f3fc:	mov	r0, r4
    f400:	bl	0 <flatcc_verify_string_vector_field>
    f404:	cmp	r0, #0
    f408:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f40c:	mov	r1, #28
    f410:	mov	r2, #0
    f414:	mov	r0, r4
    f418:	bl	0 <flatcc_verify_string_vector_field>
    f41c:	cmp	r0, #0
    f420:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f424:	mov	r1, #24
    f428:	mov	r2, #0
    f42c:	mov	r3, #1
    f430:	mov	r5, #1
    f434:	mvn	r0, #0
    f438:	str	r0, [sp, #4]
    f43c:	str	r5, [sp]
    f440:	mov	r0, r4
    f444:	bl	0 <flatcc_verify_vector_field>
    f448:	cmp	r0, #0
    f44c:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f450:	mov	r1, #29
    f454:	mov	r2, #0
    f458:	mov	r3, #8
    f45c:	mov	r0, #4
    f460:	mvn	ip, #-536870912	; 0xe0000000
    f464:	str	ip, [sp, #4]
    f468:	str	r0, [sp]
    f46c:	mov	r0, r4
    f470:	bl	0 <flatcc_verify_vector_field>
    f474:	cmp	r0, #0
    f478:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f47c:	mov	r1, #12
    f480:	mov	r2, #0
    f484:	ldr	r3, [pc, #748]	; f778 <MyGame_Example_Monster_verify_table+0x470>
    f488:	mov	r0, r4
    f48c:	bl	0 <flatcc_verify_table_field>
    f490:	cmp	r0, #0
    f494:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f498:	mov	r1, #8
    f49c:	mov	r2, #0
    f4a0:	ldr	r3, [pc, #724]	; f77c <MyGame_Example_Monster_verify_table+0x474>
    f4a4:	mov	r0, r4
    f4a8:	bl	0 <flatcc_verify_union_field>
    f4ac:	cmp	r0, #0
    f4b0:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f4b4:	mov	r1, #9
    f4b8:	mov	r2, #0
    f4bc:	mov	r3, #4
    f4c0:	mov	r0, #2
    f4c4:	mvn	ip, #-1073741824	; 0xc0000000
    f4c8:	str	ip, [sp, #4]
    f4cc:	str	r0, [sp]
    f4d0:	mov	r0, r4
    f4d4:	bl	0 <flatcc_verify_vector_field>
    f4d8:	cmp	r0, #0
    f4dc:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f4e0:	mov	r1, #31
    f4e4:	mov	r2, #0
    f4e8:	mov	r3, #4
    f4ec:	mov	r0, #2
    f4f0:	mvn	r5, #-1073741824	; 0xc0000000
    f4f4:	str	r5, [sp, #4]
    f4f8:	str	r0, [sp]
    f4fc:	mov	r0, r4
    f500:	bl	0 <flatcc_verify_vector_field>
    f504:	cmp	r0, #0
    f508:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f50c:	mov	r1, #13
    f510:	mov	r2, #0
    f514:	mov	r3, #0
    f518:	mov	ip, #1
    f51c:	ldr	r0, [pc, #596]	; f778 <MyGame_Example_Monster_verify_table+0x470>
    f520:	str	r0, [sp, #4]
    f524:	str	ip, [sp]
    f528:	mov	r0, r4
    f52c:	bl	0 <flatcc_verify_table_as_nested_root>
    f530:	cmp	r0, #0
    f534:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f538:	mov	r1, #14
    f53c:	mov	r2, #0
    f540:	ldr	r3, [pc, #572]	; f784 <MyGame_Example_Monster_verify_table+0x47c>
    f544:	mov	r0, r4
    f548:	bl	0 <flatcc_verify_table_field>
    f54c:	cmp	r0, #0
    f550:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f554:	mov	r1, #15
    f558:	mov	r2, #1
    f55c:	mov	r3, #1
    f560:	mov	r0, r4
    f564:	bl	0 <flatcc_verify_field>
    f568:	cmp	r0, #0
    f56c:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f570:	mov	r1, #16
    f574:	mov	r2, #4
    f578:	mov	r3, #4
    f57c:	mov	r0, r4
    f580:	bl	0 <flatcc_verify_field>
    f584:	cmp	r0, #0
    f588:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f58c:	mov	r1, #17
    f590:	mov	r2, #4
    f594:	mov	r3, #4
    f598:	mov	r0, r4
    f59c:	bl	0 <flatcc_verify_field>
    f5a0:	cmp	r0, #0
    f5a4:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f5a8:	mov	r1, #18
    f5ac:	mov	r2, #8
    f5b0:	mov	r3, #8
    f5b4:	mov	r0, r4
    f5b8:	bl	0 <flatcc_verify_field>
    f5bc:	cmp	r0, #0
    f5c0:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f5c4:	mov	r1, #19
    f5c8:	mov	r2, #8
    f5cc:	mov	r3, #8
    f5d0:	mov	r0, r4
    f5d4:	bl	0 <flatcc_verify_field>
    f5d8:	cmp	r0, #0
    f5dc:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f5e0:	mov	r1, #20
    f5e4:	mov	r2, #4
    f5e8:	mov	r3, #4
    f5ec:	mov	r0, r4
    f5f0:	bl	0 <flatcc_verify_field>
    f5f4:	cmp	r0, #0
    f5f8:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f5fc:	mov	r1, #21
    f600:	mov	r2, #4
    f604:	mov	r3, #4
    f608:	mov	r0, r4
    f60c:	bl	0 <flatcc_verify_field>
    f610:	cmp	r0, #0
    f614:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f618:	mov	r1, #22
    f61c:	mov	r2, #8
    f620:	mov	r3, #8
    f624:	mov	r0, r4
    f628:	bl	0 <flatcc_verify_field>
    f62c:	cmp	r0, #0
    f630:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f634:	mov	r1, #23
    f638:	mov	r2, #8
    f63c:	mov	r3, #8
    f640:	mov	r0, r4
    f644:	bl	0 <flatcc_verify_field>
    f648:	cmp	r0, #0
    f64c:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f650:	mov	r1, #25
    f654:	mov	r2, #4
    f658:	mov	r3, #4
    f65c:	mov	r0, r4
    f660:	bl	0 <flatcc_verify_field>
    f664:	cmp	r0, #0
    f668:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f66c:	mov	r1, #26
    f670:	mov	r2, #4
    f674:	mov	r3, #4
    f678:	mov	r0, r4
    f67c:	bl	0 <flatcc_verify_field>
    f680:	cmp	r0, #0
    f684:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f688:	mov	r1, #27
    f68c:	mov	r2, #4
    f690:	mov	r3, #4
    f694:	mov	r0, r4
    f698:	bl	0 <flatcc_verify_field>
    f69c:	cmp	r0, #0
    f6a0:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f6a4:	mov	r1, #30
    f6a8:	mov	r2, #0
    f6ac:	mov	r3, #1
    f6b0:	mov	r0, #1
    f6b4:	mvn	ip, #0
    f6b8:	str	ip, [sp, #4]
    f6bc:	str	r0, [sp]
    f6c0:	mov	r0, r4
    f6c4:	bl	0 <flatcc_verify_vector_field>
    f6c8:	cmp	r0, #0
    f6cc:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f6d0:	mov	r1, #32
    f6d4:	mov	r2, #0
    f6d8:	mov	r3, #8
    f6dc:	mov	r0, #8
    f6e0:	mvn	ip, #-536870912	; 0xe0000000
    f6e4:	str	ip, [sp, #4]
    f6e8:	str	r0, [sp]
    f6ec:	mov	r0, r4
    f6f0:	bl	0 <flatcc_verify_vector_field>
    f6f4:	cmp	r0, #0
    f6f8:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f6fc:	mov	r1, #33	; 0x21
    f700:	mov	r2, #0
    f704:	mov	r3, #8
    f708:	mov	r5, #8
    f70c:	mvn	r0, #-536870912	; 0xe0000000
    f710:	str	r0, [sp, #4]
    f714:	str	r5, [sp]
    f718:	mov	r0, r4
    f71c:	bl	0 <flatcc_verify_vector_field>
    f720:	cmp	r0, #0
    f724:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f728:	mov	r1, #34	; 0x22
    f72c:	mov	r2, #0
    f730:	ldr	r3, [pc, #72]	; f780 <MyGame_Example_Monster_verify_table+0x478>
    f734:	mov	r0, r4
    f738:	bl	0 <flatcc_verify_table_field>
    f73c:	cmp	r0, #0
    f740:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f744:	mov	r1, #35	; 0x23
    f748:	mov	r2, #0
    f74c:	ldr	r3, [pc, #52]	; f788 <MyGame_Example_Monster_verify_table+0x480>
    f750:	mov	r0, r4
    f754:	bl	0 <flatcc_verify_table_field>
    f758:	cmp	r0, #0
    f75c:	bne	f764 <MyGame_Example_Monster_verify_table+0x45c>
    f760:	mov	r0, #0
    f764:	ldr	r4, [sp, #16]
    f768:	ldr	r5, [sp, #20]
    f76c:	ldr	lr, [sp, #12]
    f770:	add	sp, sp, #24
    f774:	bx	lr
	...

0000f78c <Fantasy_Attacker_verify_table>:
    f78c:	mov	ip, sp
    f790:	sub	sp, sp, #8
    f794:	str	ip, [sp]
    f798:	str	lr, [sp, #4]
    f79c:	mov	r1, #0
    f7a0:	mov	r2, #4
    f7a4:	mov	r3, #4
    f7a8:	bl	0 <flatcc_verify_field>
    f7ac:	cmp	r0, #0
    f7b0:	bne	f7b8 <Fantasy_Attacker_verify_table+0x2c>
    f7b4:	mov	r0, #0
    f7b8:	ldr	lr, [sp, #4]
    f7bc:	add	sp, sp, #8
    f7c0:	bx	lr

0000f7c4 <Fantasy_Movie_verify_table>:
    f7c4:	mov	ip, sp
    f7c8:	sub	sp, sp, #16
    f7cc:	str	ip, [sp]
    f7d0:	str	lr, [sp, #4]
    f7d4:	str	r4, [sp, #8]
    f7d8:	mov	r4, r0
    f7dc:	mov	r1, #1
    f7e0:	mov	r2, #0
    f7e4:	ldr	r3, [pc, #144]	; f87c <Fantasy_Movie_verify_table+0xb8>
    f7e8:	mov	r0, r4
    f7ec:	bl	0 <flatcc_verify_union_field>
    f7f0:	cmp	r0, #0
    f7f4:	bne	f86c <Fantasy_Movie_verify_table+0xa8>
    f7f8:	mov	r1, #3
    f7fc:	mov	r2, #0
    f800:	ldr	r3, [pc, #116]	; f87c <Fantasy_Movie_verify_table+0xb8>
    f804:	mov	r0, r4
    f808:	bl	0 <flatcc_verify_union_field>
    f80c:	cmp	r0, #0
    f810:	bne	f86c <Fantasy_Movie_verify_table+0xa8>
    f814:	mov	r1, #5
    f818:	mov	r2, #0
    f81c:	ldr	r3, [pc, #88]	; f87c <Fantasy_Movie_verify_table+0xb8>
    f820:	mov	r0, r4
    f824:	bl	0 <flatcc_verify_union_field>
    f828:	cmp	r0, #0
    f82c:	bne	f86c <Fantasy_Movie_verify_table+0xa8>
    f830:	mov	r1, #7
    f834:	mov	r2, #0
    f838:	ldr	r3, [pc, #60]	; f87c <Fantasy_Movie_verify_table+0xb8>
    f83c:	mov	r0, r4
    f840:	bl	0 <flatcc_verify_union_field>
    f844:	cmp	r0, #0
    f848:	bne	f86c <Fantasy_Movie_verify_table+0xa8>
    f84c:	mov	r1, #9
    f850:	mov	r2, #0
    f854:	ldr	r3, [pc, #32]	; f87c <Fantasy_Movie_verify_table+0xb8>
    f858:	mov	r0, r4
    f85c:	bl	0 <flatcc_verify_union_vector_field>
    f860:	cmp	r0, #0
    f864:	bne	f86c <Fantasy_Movie_verify_table+0xa8>
    f868:	mov	r0, #0
    f86c:	ldr	r4, [sp, #8]
    f870:	ldr	lr, [sp, #4]
    f874:	add	sp, sp, #16
    f878:	bx	lr
    f87c:	.word	0x00000000

0000f880 <hexdump>:
    f880:	mov	ip, sp
    f884:	sub	sp, sp, #48	; 0x30
    f888:	str	ip, [sp]
    f88c:	str	lr, [sp, #4]
    f890:	str	r4, [sp, #8]
    f894:	str	r5, [sp, #12]
    f898:	str	r6, [sp, #16]
    f89c:	str	r7, [sp, #20]
    f8a0:	mov	r4, r3
    f8a4:	mov	r5, r2
    f8a8:	mov	r6, r1
    f8ac:	mov	r2, r0
    f8b0:	cmp	r2, #0
    f8b4:	beq	f8c4 <hexdump+0x44>
    f8b8:	ldr	r1, [pc, #320]	; fa00 <hexdump+0x180>
    f8bc:	mov	r0, r4
    f8c0:	bl	0 <fprintf>
    f8c4:	mov	r7, #0
    f8c8:	cmp	r7, r5
    f8cc:	bcs	f9a0 <hexdump+0x120>
    f8d0:	and	r1, r7, #15
    f8d4:	cmp	r1, #0
    f8d8:	bne	f908 <hexdump+0x88>
    f8dc:	cmp	r7, #0
    f8e0:	beq	f8f4 <hexdump+0x74>
    f8e4:	ldr	r1, [pc, #256]	; f9ec <hexdump+0x16c>
    f8e8:	add	r2, sp, #24
    f8ec:	mov	r0, r4
    f8f0:	bl	0 <fprintf>
    f8f4:	ldr	r1, [pc, #244]	; f9f0 <hexdump+0x170>
    f8f8:	mov	r2, r7
    f8fc:	mov	r0, r4
    f900:	bl	0 <fprintf>
    f904:	b	f920 <hexdump+0xa0>
    f908:	and	r3, r7, #7
    f90c:	cmp	r3, #0
    f910:	bne	f920 <hexdump+0xa0>
    f914:	ldr	r1, [pc, #216]	; f9f4 <hexdump+0x174>
    f918:	mov	r0, r4
    f91c:	bl	0 <fprintf>
    f920:	ldr	r1, [pc, #208]	; f9f8 <hexdump+0x178>
    f924:	ldrb	r2, [r6, r7]
    f928:	mov	r0, r4
    f92c:	bl	0 <fprintf>
    f930:	ldrb	r3, [r6, r7]
    f934:	cmp	r3, #32
    f938:	blt	f950 <hexdump+0xd0>
    f93c:	ldrb	r2, [r6, r7]
    f940:	cmp	r2, #126	; 0x7e
    f944:	movgt	r1, #1
    f948:	movle	r1, #0
    f94c:	b	f954 <hexdump+0xd4>
    f950:	mov	r1, #1
    f954:	cmp	r1, #0
    f958:	bne	f974 <hexdump+0xf4>
    f95c:	add	r2, sp, #24
    f960:	and	r0, r7, #15
    f964:	ldrb	r3, [r6, r7]
    f968:	and	r1, r3, #255	; 0xff
    f96c:	strb	r1, [r2, r0]
    f970:	b	f984 <hexdump+0x104>
    f974:	add	r0, sp, #24
    f978:	and	r3, r7, #15
    f97c:	mov	r2, #46	; 0x2e
    f980:	strb	r2, [r0, r3]
    f984:	add	r0, sp, #24
    f988:	and	ip, r7, #15
    f98c:	add	r2, r0, ip
    f990:	mov	r3, #0
    f994:	strb	r3, [r2, #1]
    f998:	add	r7, r7, #1
    f99c:	b	f8c8 <hexdump+0x48>
    f9a0:	and	ip, r7, #15
    f9a4:	cmp	ip, #0
    f9a8:	beq	f9c0 <hexdump+0x140>
    f9ac:	ldr	r1, [pc, #72]	; f9fc <hexdump+0x17c>
    f9b0:	mov	r0, r4
    f9b4:	bl	0 <fprintf>
    f9b8:	add	r7, r7, #1
    f9bc:	b	f9a0 <hexdump+0x120>
    f9c0:	ldr	r1, [pc, #36]	; f9ec <hexdump+0x16c>
    f9c4:	add	r2, sp, #24
    f9c8:	mov	r0, r4
    f9cc:	bl	0 <fprintf>
    f9d0:	ldr	r4, [sp, #8]
    f9d4:	ldr	r5, [sp, #12]
    f9d8:	ldr	r6, [sp, #16]
    f9dc:	ldr	r7, [sp, #20]
    f9e0:	ldr	lr, [sp, #4]
    f9e4:	add	sp, sp, #48	; 0x30
    f9e8:	bx	lr
    f9ec:	.word	0x000014e4
    f9f0:	.word	0x00001124
    f9f4:	.word	0x00003461
    f9f8:	.word	0x00003122
    f9fc:	.word	0x00002d81
    fa00:	.word	0x00000684

0000fa04 <test_json>:
    fa04:	mov	ip, sp
    fa08:	sub	sp, sp, #400	; 0x190
    fa0c:	str	ip, [sp, #12]
    fa10:	str	lr, [sp, #16]
    fa14:	str	r4, [sp, #28]
    fa18:	str	r5, [sp, #32]
    fa1c:	str	r6, [sp, #36]	; 0x24
    fa20:	str	r7, [sp, #40]	; 0x28
    fa24:	str	r8, [sp, #44]	; 0x2c
    fa28:	str	r9, [sp, #48]	; 0x30
    fa2c:	str	sl, [sp, #52]	; 0x34
    fa30:	str	fp, [sp, #56]	; 0x38
    fa34:	ldr	sl, [ip, #8]
    fa38:	ldr	r9, [ip, #4]
    fa3c:	ldr	ip, [ip]
    fa40:	str	ip, [sp, #24]
    fa44:	mov	r8, r3
    fa48:	mov	r7, r2
    fa4c:	mov	r6, r1
    fa50:	mov	r5, r0
    fa54:	mov	fp, #0
    fa58:	add	r4, sp, #168	; 0xa8
    fa5c:	mov	r0, r4
    fa60:	bl	0 <flatcc_builder_init>
    fa64:	add	r0, sp, #120	; 0x78
    fa68:	mov	r1, #0
    fa6c:	bl	0 <flatcc_json_printer_init_dynamic_buffer>
    fa70:	add	r0, sp, #120	; 0x78
    fa74:	mov	r1, r9
    fa78:	bl	d720 <flatcc_json_printer_set_flags>
    fa7c:	mov	r0, r6
    fa80:	bl	0 <strlen>
    fa84:	mov	r3, r0
    fa88:	add	r1, sp, #72	; 0x48
    fa8c:	ldr	r2, [r5]
    fa90:	ldr	r0, [r5, #4]
    fa94:	str	r0, [sp, #8]
    fa98:	str	r2, [sp, #4]
    fa9c:	ldr	ip, [sp, #24]
    faa0:	str	ip, [sp]
    faa4:	mov	r2, r6
    faa8:	mov	r0, r4
    faac:	bl	0 <flatcc_json_parser_table_as_root>
    fab0:	cmp	r0, r8
    fab4:	beq	fbc4 <test_json+0x1c0>
    fab8:	cmp	r8, #0
    fabc:	beq	fb54 <test_json+0x150>
    fac0:	cmp	r0, #0
    fac4:	beq	fb1c <test_json+0x118>
    fac8:	bl	0 <flatcc_json_parser_error_string>
    facc:	ldr	r1, [pc, #652]	; fd60 <test_json+0x35c>
    fad0:	ldr	r2, [r1]
    fad4:	ldr	r1, [pc, #624]	; fd4c <test_json+0x348>
    fad8:	mov	r3, r0
    fadc:	mov	r0, r2
    fae0:	mov	r2, sl
    fae4:	bl	0 <fprintf>
    fae8:	mov	r0, r8
    faec:	bl	0 <flatcc_json_parser_error_string>
    faf0:	mov	r2, r0
    faf4:	ldr	r3, [pc, #612]	; fd60 <test_json+0x35c>
    faf8:	ldr	r0, [r3]
    fafc:	ldr	r1, [pc, #580]	; fd48 <test_json+0x344>
    fb00:	bl	0 <fprintf>
    fb04:	ldr	ip, [pc, #596]	; fd60 <test_json+0x35c>
    fb08:	ldr	r0, [ip]
    fb0c:	ldr	r1, [pc, #580]	; fd58 <test_json+0x354>
    fb10:	mov	r2, r6
    fb14:	bl	0 <fprintf>
    fb18:	b	fb84 <test_json+0x180>
    fb1c:	mov	r0, r8
    fb20:	bl	0 <flatcc_json_parser_error_string>
    fb24:	mov	r3, r0
    fb28:	ldr	r1, [pc, #560]	; fd60 <test_json+0x35c>
    fb2c:	ldr	r0, [r1]
    fb30:	ldr	r1, [pc, #524]	; fd44 <test_json+0x340>
    fb34:	mov	r2, sl
    fb38:	bl	0 <fprintf>
    fb3c:	ldr	ip, [pc, #540]	; fd60 <test_json+0x35c>
    fb40:	ldr	r0, [ip]
    fb44:	ldr	r1, [pc, #524]	; fd58 <test_json+0x354>
    fb48:	mov	r2, r6
    fb4c:	bl	0 <fprintf>
    fb50:	b	fb84 <test_json+0x180>
    fb54:	bl	0 <flatcc_json_parser_error_string>
    fb58:	mov	r3, r0
    fb5c:	ldr	r2, [pc, #508]	; fd60 <test_json+0x35c>
    fb60:	ldr	r0, [r2]
    fb64:	ldr	r1, [pc, #484]	; fd50 <test_json+0x34c>
    fb68:	mov	r2, sl
    fb6c:	bl	0 <fprintf>
    fb70:	ldr	r0, [pc, #488]	; fd60 <test_json+0x35c>
    fb74:	ldr	r0, [r0]
    fb78:	ldr	r1, [pc, #472]	; fd58 <test_json+0x354>
    fb7c:	mov	r2, r6
    fb80:	bl	0 <fprintf>
    fb84:	mov	r5, #0
    fb88:	ldr	r3, [sp, #92]	; 0x5c
    fb8c:	sub	r1, r3, #1
    fb90:	cmp	r5, r1
    fb94:	bge	fbb0 <test_json+0x1ac>
    fb98:	ldr	r0, [pc, #448]	; fd60 <test_json+0x35c>
    fb9c:	ldr	r0, [r0]
    fba0:	ldr	r1, [pc, #436]	; fd5c <test_json+0x358>
    fba4:	bl	0 <fprintf>
    fba8:	add	r5, r5, #1
    fbac:	b	fb88 <test_json+0x184>
    fbb0:	ldr	ip, [pc, #424]	; fd60 <test_json+0x35c>
    fbb4:	ldr	r0, [ip]
    fbb8:	ldr	r1, [pc, #424]	; fd68 <test_json+0x364>
    fbbc:	bl	0 <fprintf>
    fbc0:	b	fcd0 <test_json+0x2cc>
    fbc4:	cmp	r8, #0
    fbc8:	beq	fbd4 <test_json+0x1d0>
    fbcc:	mov	r5, #0
    fbd0:	b	fcfc <test_json+0x2f8>
    fbd4:	add	r1, sp, #64	; 0x40
    fbd8:	mov	r0, r4
    fbdc:	bl	0 <flatcc_builder_finalize_aligned_buffer>
    fbe0:	mov	fp, r0
    fbe4:	ldr	r1, [sp, #64]	; 0x40
    fbe8:	ldr	r2, [r5]
    fbec:	ldr	r3, [r5, #12]
    fbf0:	mov	r0, fp
    fbf4:	bl	0 <flatcc_verify_table_as_root>
    fbf8:	cmp	r0, #0
    fbfc:	beq	fc28 <test_json+0x224>
    fc00:	bl	0 <flatcc_verify_error_string>
    fc04:	mov	r3, r0
    fc08:	ldr	ip, [pc, #336]	; fd60 <test_json+0x35c>
    fc0c:	ldr	r0, [ip]
    fc10:	ldr	r1, [pc, #344]	; fd70 <test_json+0x36c>
    fc14:	ldr	r2, [pc, #336]	; fd6c <test_json+0x368>
    fc18:	str	r3, [sp]
    fc1c:	mov	r3, sl
    fc20:	bl	0 <fprintf>
    fc24:	b	fcd0 <test_json+0x2cc>
    fc28:	add	r0, sp, #120	; 0x78
    fc2c:	ldr	r2, [sp, #64]	; 0x40
    fc30:	ldr	r3, [r5]
    fc34:	ldr	ip, [r5, #8]
    fc38:	str	ip, [sp]
    fc3c:	mov	r1, fp
    fc40:	bl	0 <flatcc_json_printer_table_as_root>
    fc44:	add	r0, sp, #120	; 0x78
    fc48:	add	r1, sp, #68	; 0x44
    fc4c:	bl	0 <flatcc_json_printer_get_buffer>
    fc50:	mov	r5, r0
    fc54:	cmp	r5, #0
    fc58:	beq	fc78 <test_json+0x274>
    fc5c:	mov	r1, r5
    fc60:	mov	r0, r7
    fc64:	bl	0 <strcmp>
    fc68:	cmp	r0, #0
    fc6c:	movne	ip, #1
    fc70:	moveq	ip, #0
    fc74:	b	fc7c <test_json+0x278>
    fc78:	mov	ip, #1
    fc7c:	cmp	ip, #0
    fc80:	beq	fcf8 <test_json+0x2f4>
    fc84:	ldr	r2, [pc, #212]	; fd60 <test_json+0x35c>
    fc88:	ldr	r0, [r2]
    fc8c:	ldr	r1, [pc, #192]	; fd54 <test_json+0x350>
    fc90:	mov	r2, sl
    fc94:	bl	0 <fprintf>
    fc98:	ldr	r2, [pc, #192]	; fd60 <test_json+0x35c>
    fc9c:	ldr	r0, [r2]
    fca0:	ldr	r1, [pc, #176]	; fd58 <test_json+0x354>
    fca4:	mov	r2, r5
    fca8:	bl	0 <fprintf>
    fcac:	ldr	r2, [pc, #172]	; fd60 <test_json+0x35c>
    fcb0:	ldr	r0, [r2]
    fcb4:	ldr	r1, [pc, #184]	; fd74 <test_json+0x370>
    fcb8:	bl	0 <fprintf>
    fcbc:	ldr	r0, [pc, #156]	; fd60 <test_json+0x35c>
    fcc0:	ldr	r0, [r0]
    fcc4:	ldr	r1, [pc, #140]	; fd58 <test_json+0x354>
    fcc8:	mov	r2, r7
    fccc:	bl	0 <fprintf>
    fcd0:	cmp	fp, #0
    fcd4:	beq	fcf0 <test_json+0x2ec>
    fcd8:	ldr	r0, [pc, #132]	; fd64 <test_json+0x360>
    fcdc:	ldr	r2, [sp, #64]	; 0x40
    fce0:	ldr	ip, [pc, #120]	; fd60 <test_json+0x35c>
    fce4:	ldr	r3, [ip]
    fce8:	mov	r1, fp
    fcec:	bl	f880 <hexdump>
    fcf0:	mvn	r5, #0
    fcf4:	b	fcfc <test_json+0x2f8>
    fcf8:	mov	r5, #0
    fcfc:	mov	r0, fp
    fd00:	bl	0 <flatcc_builder_aligned_free>
    fd04:	mov	r0, r4
    fd08:	bl	0 <flatcc_builder_clear>
    fd0c:	add	r0, sp, #120	; 0x78
    fd10:	bl	0 <flatcc_json_printer_clear>
    fd14:	mov	r0, r5
    fd18:	ldr	r4, [sp, #28]
    fd1c:	ldr	r5, [sp, #32]
    fd20:	ldr	r6, [sp, #36]	; 0x24
    fd24:	ldr	r7, [sp, #40]	; 0x28
    fd28:	ldr	r8, [sp, #44]	; 0x2c
    fd2c:	ldr	r9, [sp, #48]	; 0x30
    fd30:	ldr	sl, [sp, #52]	; 0x34
    fd34:	ldr	fp, [sp, #56]	; 0x38
    fd38:	ldr	lr, [sp, #16]
    fd3c:	add	sp, sp, #400	; 0x190
    fd40:	bx	lr
    fd44:	.word	0x000014ea
    fd48:	.word	0x0000284e
    fd4c:	.word	0x00001a1c
    fd50:	.word	0x00000606
    fd54:	.word	0x00003a40
    fd58:	.word	0x00000ac6
    fd5c:	.word	0x00003461
    fd60:	.word	0x00000000
    fd64:	.word	0x00003ac6
    fd68:	.word	0x000020b7
    fd6c:	.word	0x0000025e
    fd70:	.word	0x00001aa2
    fd74:	.word	0x00001a97

0000fd78 <edge_case_tests>:
    fd78:	mov	ip, sp
    fd7c:	sub	sp, sp, #40	; 0x28
    fd80:	str	ip, [sp, #12]
    fd84:	str	lr, [sp, #16]
    fd88:	str	r4, [sp, #24]
    fd8c:	str	r5, [sp, #28]
    fd90:	str	r6, [sp, #32]
    fd94:	str	r7, [sp, #36]	; 0x24
    fd98:	mov	r5, #0
    fd9c:	ldr	r4, [pc, #884]	; 10118 <edge_case_tests+0x3a0>
    fda0:	ldr	r1, [pc, #912]	; 10138 <edge_case_tests+0x3c0>
    fda4:	ldr	r2, [pc, #912]	; 1013c <edge_case_tests+0x3c4>
    fda8:	mov	r3, #0
    fdac:	mov	r7, #0
    fdb0:	mov	r6, #0
    fdb4:	mov	r0, #154	; 0x9a
    fdb8:	str	r0, [sp, #8]
    fdbc:	str	r6, [sp, #4]
    fdc0:	str	r7, [sp]
    fdc4:	mov	r0, r4
    fdc8:	bl	fa04 <test_json>
    fdcc:	orr	r5, r5, r0
    fdd0:	ldr	r1, [pc, #860]	; 10134 <edge_case_tests+0x3bc>
    fdd4:	ldr	r2, [pc, #784]	; 100ec <edge_case_tests+0x374>
    fdd8:	mov	r3, #0
    fddc:	mov	r7, #2
    fde0:	mov	r0, #0
    fde4:	mov	ip, #166	; 0xa6
    fde8:	str	ip, [sp, #8]
    fdec:	str	r0, [sp, #4]
    fdf0:	str	r7, [sp]
    fdf4:	mov	r0, r4
    fdf8:	bl	fa04 <test_json>
    fdfc:	orr	r5, r5, r0
    fe00:	ldr	r1, [pc, #744]	; 100f0 <edge_case_tests+0x378>
    fe04:	ldr	r2, [pc, #764]	; 10108 <edge_case_tests+0x390>
    fe08:	mov	r3, #0
    fe0c:	mov	ip, #0
    fe10:	mov	r0, #2
    fe14:	mov	r6, #170	; 0xaa
    fe18:	str	r6, [sp, #8]
    fe1c:	str	r0, [sp, #4]
    fe20:	str	ip, [sp]
    fe24:	mov	r0, r4
    fe28:	bl	fa04 <test_json>
    fe2c:	orr	r6, r5, r0
    fe30:	ldr	r1, [pc, #764]	; 10134 <edge_case_tests+0x3bc>
    fe34:	ldr	r2, [pc, #736]	; 1011c <edge_case_tests+0x3a4>
    fe38:	mov	r3, #0
    fe3c:	mov	ip, #2
    fe40:	mov	r0, #4
    fe44:	mov	r7, #174	; 0xae
    fe48:	str	r7, [sp, #8]
    fe4c:	str	r0, [sp, #4]
    fe50:	str	ip, [sp]
    fe54:	mov	r0, r4
    fe58:	bl	fa04 <test_json>
    fe5c:	orr	r5, r6, r0
    fe60:	ldr	r1, [pc, #668]	; 10104 <edge_case_tests+0x38c>
    fe64:	ldr	r2, [pc, #704]	; 1012c <edge_case_tests+0x3b4>
    fe68:	mov	r3, #0
    fe6c:	mov	r0, #0
    fe70:	mov	r7, #8
    fe74:	mov	r6, #178	; 0xb2
    fe78:	str	r6, [sp, #8]
    fe7c:	str	r7, [sp, #4]
    fe80:	str	r0, [sp]
    fe84:	mov	r0, r4
    fe88:	bl	fa04 <test_json>
    fe8c:	orr	r6, r5, r0
    fe90:	ldr	r1, [pc, #616]	; 10100 <edge_case_tests+0x388>
    fe94:	ldr	r2, [pc, #592]	; 100ec <edge_case_tests+0x374>
    fe98:	mov	r3, #0
    fe9c:	mov	r7, #2
    fea0:	mov	ip, #0
    fea4:	mov	r0, #193	; 0xc1
    fea8:	str	r0, [sp, #8]
    feac:	str	ip, [sp, #4]
    feb0:	str	r7, [sp]
    feb4:	mov	r0, r4
    feb8:	bl	fa04 <test_json>
    febc:	orr	r5, r6, r0
    fec0:	ldr	r1, [pc, #556]	; 100f4 <edge_case_tests+0x37c>
    fec4:	ldr	r2, [pc, #560]	; 100fc <edge_case_tests+0x384>
    fec8:	mov	r3, #0
    fecc:	mov	ip, #1
    fed0:	mov	r7, #0
    fed4:	mov	r0, #197	; 0xc5
    fed8:	str	r0, [sp, #8]
    fedc:	str	r7, [sp, #4]
    fee0:	str	ip, [sp]
    fee4:	mov	r0, r4
    fee8:	bl	fa04 <test_json>
    feec:	orr	r5, r5, r0
    fef0:	ldr	r1, [pc, #508]	; 100f4 <edge_case_tests+0x37c>
    fef4:	ldr	r2, [pc, #548]	; 10120 <edge_case_tests+0x3a8>
    fef8:	mov	r3, #0
    fefc:	mov	ip, #1
    ff00:	mov	r6, #1
    ff04:	mov	r0, #201	; 0xc9
    ff08:	str	r0, [sp, #8]
    ff0c:	str	r6, [sp, #4]
    ff10:	str	ip, [sp]
    ff14:	mov	r0, r4
    ff18:	bl	fa04 <test_json>
    ff1c:	orr	r6, r5, r0
    ff20:	ldr	r1, [pc, #492]	; 10114 <edge_case_tests+0x39c>
    ff24:	ldr	r2, [pc, #464]	; 100fc <edge_case_tests+0x384>
    ff28:	mov	r3, #0
    ff2c:	mov	ip, #1
    ff30:	mov	r7, #0
    ff34:	mov	r0, #206	; 0xce
    ff38:	str	r0, [sp, #8]
    ff3c:	str	r7, [sp, #4]
    ff40:	str	ip, [sp]
    ff44:	mov	r0, r4
    ff48:	bl	fa04 <test_json>
    ff4c:	orr	r5, r6, r0
    ff50:	ldr	r1, [pc, #436]	; 1010c <edge_case_tests+0x394>
    ff54:	ldr	r2, [pc, #400]	; 100ec <edge_case_tests+0x374>
    ff58:	mov	r3, #0
    ff5c:	mov	ip, #2
    ff60:	mov	r6, #0
    ff64:	mov	r0, #215	; 0xd7
    ff68:	str	r0, [sp, #8]
    ff6c:	str	r6, [sp, #4]
    ff70:	str	ip, [sp]
    ff74:	mov	r0, r4
    ff78:	bl	fa04 <test_json>
    ff7c:	orr	r5, r5, r0
    ff80:	ldr	r1, [pc, #412]	; 10124 <edge_case_tests+0x3ac>
    ff84:	ldr	r2, [pc, #380]	; 10108 <edge_case_tests+0x390>
    ff88:	mov	r3, #0
    ff8c:	mov	r7, #0
    ff90:	mov	r0, #2
    ff94:	mov	ip, #219	; 0xdb
    ff98:	str	ip, [sp, #8]
    ff9c:	str	r0, [sp, #4]
    ffa0:	str	r7, [sp]
    ffa4:	mov	r0, r4
    ffa8:	bl	fa04 <test_json>
    ffac:	orr	r5, r5, r0
    ffb0:	ldr	r1, [pc, #340]	; 1010c <edge_case_tests+0x394>
    ffb4:	ldr	r2, [pc, #352]	; 1011c <edge_case_tests+0x3a4>
    ffb8:	mov	r3, #0
    ffbc:	mov	r7, #2
    ffc0:	mov	ip, #4
    ffc4:	mov	r0, #223	; 0xdf
    ffc8:	str	r0, [sp, #8]
    ffcc:	str	ip, [sp, #4]
    ffd0:	str	r7, [sp]
    ffd4:	mov	r0, r4
    ffd8:	bl	fa04 <test_json>
    ffdc:	orr	r5, r5, r0
    ffe0:	ldr	r1, [pc, #272]	; 100f8 <edge_case_tests+0x380>
    ffe4:	ldr	r2, [pc, #316]	; 10128 <edge_case_tests+0x3b0>
    ffe8:	mov	r3, #0
    ffec:	mov	ip, #0
    fff0:	mov	r7, #8
    fff4:	mov	r0, #227	; 0xe3
    fff8:	str	r0, [sp, #8]
    fffc:	str	r7, [sp, #4]
   10000:	str	ip, [sp]
   10004:	mov	r0, r4
   10008:	bl	fa04 <test_json>
   1000c:	orr	r6, r5, r0
   10010:	ldr	r1, [pc, #280]	; 10130 <edge_case_tests+0x3b8>
   10014:	ldr	r2, [pc, #208]	; 100ec <edge_case_tests+0x374>
   10018:	mov	r3, #0
   1001c:	mov	r7, #2
   10020:	mov	ip, #0
   10024:	mov	r0, #231	; 0xe7
   10028:	str	r0, [sp, #8]
   1002c:	str	ip, [sp, #4]
   10030:	str	r7, [sp]
   10034:	mov	r0, r4
   10038:	bl	fa04 <test_json>
   1003c:	orr	r5, r6, r0
   10040:	ldr	r1, [pc, #248]	; 10140 <edge_case_tests+0x3c8>
   10044:	ldr	r2, [pc, #176]	; 100fc <edge_case_tests+0x384>
   10048:	mov	r3, #0
   1004c:	mov	r7, #1
   10050:	mov	r0, #0
   10054:	mov	ip, #235	; 0xeb
   10058:	str	ip, [sp, #8]
   1005c:	str	r0, [sp, #4]
   10060:	str	r7, [sp]
   10064:	mov	r0, r4
   10068:	bl	fa04 <test_json>
   1006c:	orr	r6, r5, r0
   10070:	ldr	r1, [pc, #200]	; 10140 <edge_case_tests+0x3c8>
   10074:	ldr	r2, [pc, #164]	; 10120 <edge_case_tests+0x3a8>
   10078:	mov	r3, #0
   1007c:	mov	r0, #1
   10080:	mov	r7, #1
   10084:	mov	ip, #239	; 0xef
   10088:	str	ip, [sp, #8]
   1008c:	str	r7, [sp, #4]
   10090:	str	r0, [sp]
   10094:	mov	r0, r4
   10098:	bl	fa04 <test_json>
   1009c:	orr	r6, r6, r0
   100a0:	ldr	r1, [pc, #104]	; 10110 <edge_case_tests+0x398>
   100a4:	ldr	r2, [pc, #80]	; 100fc <edge_case_tests+0x384>
   100a8:	mov	r3, #0
   100ac:	mov	r7, #1
   100b0:	mov	r0, #0
   100b4:	mov	ip, #244	; 0xf4
   100b8:	str	ip, [sp, #8]
   100bc:	str	r0, [sp, #4]
   100c0:	str	r7, [sp]
   100c4:	mov	r0, r4
   100c8:	bl	fa04 <test_json>
   100cc:	orr	r0, r6, r0
   100d0:	ldr	r4, [sp, #24]
   100d4:	ldr	r5, [sp, #28]
   100d8:	ldr	r6, [sp, #32]
   100dc:	ldr	r7, [sp, #36]	; 0x24
   100e0:	ldr	lr, [sp, #16]
   100e4:	add	sp, sp, #40	; 0x28
   100e8:	bx	lr
   100ec:	.word	0x00003128
   100f0:	.word	0x00001727
   100f4:	.word	0x000001e2
   100f8:	.word	0x0000109f
   100fc:	.word	0x00000000
   10100:	.word	0x00000358
   10104:	.word	0x000003b7
   10108:	.word	0x000019cf
   1010c:	.word	0x0000309c
   10110:	.word	0x00001d02
   10114:	.word	0x00001420
   10118:	.word	0x00003ad4
   1011c:	.word	0x000032f3
   10120:	.word	0x00001ac9
   10124:	.word	0x000026d1
   10128:	.word	0x000025ba
   1012c:	.word	0x00000923
   10130:	.word	0x0000341e
   10134:	.word	0x000001c1
   10138:	.word	0x000026f2
   1013c:	.word	0x00000399
   10140:	.word	0x00001226

00010144 <error_case_tests>:
   10144:	mov	ip, sp
   10148:	sub	sp, sp, #40	; 0x28
   1014c:	str	ip, [sp, #12]
   10150:	str	lr, [sp, #16]
   10154:	str	r4, [sp, #24]
   10158:	str	r5, [sp, #28]
   1015c:	str	r6, [sp, #32]
   10160:	str	r7, [sp, #36]	; 0x24
   10164:	mov	r5, #0
   10168:	ldr	r4, [pc, #920]	; 10508 <error_case_tests+0x3c4>
   1016c:	ldr	r1, [pc, #904]	; 104fc <error_case_tests+0x3b8>
   10170:	mov	r2, #0
   10174:	mov	r3, #13
   10178:	mov	r0, #0
   1017c:	mov	r7, #0
   10180:	mov	ip, #284	; 0x11c
   10184:	str	ip, [sp, #8]
   10188:	str	r7, [sp, #4]
   1018c:	str	r0, [sp]
   10190:	mov	r0, r4
   10194:	bl	fa04 <test_json>
   10198:	orr	r5, r5, r0
   1019c:	ldr	r1, [pc, #848]	; 104f4 <error_case_tests+0x3b0>
   101a0:	mov	r2, #0
   101a4:	mov	r3, #13
   101a8:	mov	ip, #0
   101ac:	mov	r7, #0
   101b0:	movw	r0, #286	; 0x11e
   101b4:	str	r0, [sp, #8]
   101b8:	str	r7, [sp, #4]
   101bc:	str	ip, [sp]
   101c0:	mov	r0, r4
   101c4:	bl	fa04 <test_json>
   101c8:	orr	r5, r5, r0
   101cc:	ldr	r1, [pc, #840]	; 1051c <error_case_tests+0x3d8>
   101d0:	mov	r2, #0
   101d4:	mov	r3, #13
   101d8:	mov	r7, #0
   101dc:	mov	r0, #0
   101e0:	mov	ip, #288	; 0x120
   101e4:	str	ip, [sp, #8]
   101e8:	str	r0, [sp, #4]
   101ec:	str	r7, [sp]
   101f0:	mov	r0, r4
   101f4:	bl	fa04 <test_json>
   101f8:	orr	r5, r5, r0
   101fc:	ldr	r1, [pc, #780]	; 10510 <error_case_tests+0x3cc>
   10200:	mov	r2, #0
   10204:	mov	r3, #13
   10208:	mov	r6, #0
   1020c:	mov	r0, #0
   10210:	movw	r7, #290	; 0x122
   10214:	str	r7, [sp, #8]
   10218:	str	r0, [sp, #4]
   1021c:	str	r6, [sp]
   10220:	mov	r0, r4
   10224:	bl	fa04 <test_json>
   10228:	orr	r5, r5, r0
   1022c:	ldr	r1, [pc, #720]	; 10504 <error_case_tests+0x3c0>
   10230:	mov	r2, #0
   10234:	mov	r3, #13
   10238:	mov	r0, #0
   1023c:	mov	r6, #0
   10240:	mov	ip, #292	; 0x124
   10244:	str	ip, [sp, #8]
   10248:	str	r6, [sp, #4]
   1024c:	str	r0, [sp]
   10250:	mov	r0, r4
   10254:	bl	fa04 <test_json>
   10258:	orr	r5, r5, r0
   1025c:	ldr	r1, [pc, #644]	; 104e8 <error_case_tests+0x3a4>
   10260:	mov	r2, #0
   10264:	mov	r3, #13
   10268:	mov	ip, #0
   1026c:	mov	r7, #0
   10270:	movw	r0, #294	; 0x126
   10274:	str	r0, [sp, #8]
   10278:	str	r7, [sp, #4]
   1027c:	str	ip, [sp]
   10280:	mov	r0, r4
   10284:	bl	fa04 <test_json>
   10288:	orr	r5, r5, r0
   1028c:	ldr	r1, [pc, #652]	; 10520 <error_case_tests+0x3dc>
   10290:	mov	r2, #0
   10294:	mov	r3, #13
   10298:	mov	ip, #0
   1029c:	mov	r7, #0
   102a0:	movw	r0, #297	; 0x129
   102a4:	str	r0, [sp, #8]
   102a8:	str	r7, [sp, #4]
   102ac:	str	ip, [sp]
   102b0:	mov	r0, r4
   102b4:	bl	fa04 <test_json>
   102b8:	orr	r5, r5, r0
   102bc:	ldr	r1, [pc, #564]	; 104f8 <error_case_tests+0x3b4>
   102c0:	mov	r2, #0
   102c4:	mov	r3, #13
   102c8:	mov	r7, #0
   102cc:	mov	r0, #0
   102d0:	mov	r6, #300	; 0x12c
   102d4:	str	r6, [sp, #8]
   102d8:	str	r0, [sp, #4]
   102dc:	str	r7, [sp]
   102e0:	mov	r0, r4
   102e4:	bl	fa04 <test_json>
   102e8:	orr	r5, r5, r0
   102ec:	ldr	r1, [pc, #564]	; 10528 <error_case_tests+0x3e4>
   102f0:	mov	r2, #0
   102f4:	mov	r3, #13
   102f8:	mov	ip, #0
   102fc:	mov	r0, #0
   10300:	mov	r6, #304	; 0x130
   10304:	str	r6, [sp, #8]
   10308:	str	r0, [sp, #4]
   1030c:	str	ip, [sp]
   10310:	mov	r0, r4
   10314:	bl	fa04 <test_json>
   10318:	orr	r5, r5, r0
   1031c:	ldr	r1, [pc, #456]	; 104ec <error_case_tests+0x3a8>
   10320:	mov	r2, #0
   10324:	mov	r3, #13
   10328:	mov	r0, #0
   1032c:	mov	r6, #0
   10330:	movw	r7, #321	; 0x141
   10334:	str	r7, [sp, #8]
   10338:	str	r6, [sp, #4]
   1033c:	str	r0, [sp]
   10340:	mov	r0, r4
   10344:	bl	fa04 <test_json>
   10348:	orr	r5, r5, r0
   1034c:	ldr	r1, [pc, #452]	; 10518 <error_case_tests+0x3d4>
   10350:	mov	r2, #0
   10354:	mov	r3, #13
   10358:	mov	ip, #0
   1035c:	mov	r0, #0
   10360:	movw	r7, #323	; 0x143
   10364:	str	r7, [sp, #8]
   10368:	str	r0, [sp, #4]
   1036c:	str	ip, [sp]
   10370:	mov	r0, r4
   10374:	bl	fa04 <test_json>
   10378:	orr	r6, r5, r0
   1037c:	ldr	r1, [pc, #400]	; 10514 <error_case_tests+0x3d0>
   10380:	mov	r2, #0
   10384:	mov	r3, #13
   10388:	mov	r0, #0
   1038c:	mov	r7, #0
   10390:	movw	ip, #325	; 0x145
   10394:	str	ip, [sp, #8]
   10398:	str	r7, [sp, #4]
   1039c:	str	r0, [sp]
   103a0:	mov	r0, r4
   103a4:	bl	fa04 <test_json>
   103a8:	orr	r6, r6, r0
   103ac:	ldr	r1, [pc, #376]	; 1052c <error_case_tests+0x3e8>
   103b0:	mov	r2, #0
   103b4:	mov	r3, #13
   103b8:	mov	r7, #0
   103bc:	mov	r0, #0
   103c0:	movw	ip, #327	; 0x147
   103c4:	str	ip, [sp, #8]
   103c8:	str	r0, [sp, #4]
   103cc:	str	r7, [sp]
   103d0:	mov	r0, r4
   103d4:	bl	fa04 <test_json>
   103d8:	orr	r5, r6, r0
   103dc:	ldr	r1, [pc, #296]	; 1050c <error_case_tests+0x3c8>
   103e0:	mov	r2, #0
   103e4:	mov	r3, #13
   103e8:	mov	ip, #0
   103ec:	mov	r0, #0
   103f0:	movw	r6, #329	; 0x149
   103f4:	str	r6, [sp, #8]
   103f8:	str	r0, [sp, #4]
   103fc:	str	ip, [sp]
   10400:	mov	r0, r4
   10404:	bl	fa04 <test_json>
   10408:	orr	r6, r5, r0
   1040c:	ldr	r1, [pc, #272]	; 10524 <error_case_tests+0x3e0>
   10410:	mov	r2, #0
   10414:	mov	r3, #13
   10418:	mov	r7, #0
   1041c:	mov	ip, #0
   10420:	movw	r0, #331	; 0x14b
   10424:	str	r0, [sp, #8]
   10428:	str	ip, [sp, #4]
   1042c:	str	r7, [sp]
   10430:	mov	r0, r4
   10434:	bl	fa04 <test_json>
   10438:	orr	r6, r6, r0
   1043c:	ldr	r1, [pc, #236]	; 10530 <error_case_tests+0x3ec>
   10440:	mov	r2, #0
   10444:	mov	r3, #13
   10448:	mov	ip, #0
   1044c:	mov	r7, #0
   10450:	movw	r0, #334	; 0x14e
   10454:	str	r0, [sp, #8]
   10458:	str	r7, [sp, #4]
   1045c:	str	ip, [sp]
   10460:	mov	r0, r4
   10464:	bl	fa04 <test_json>
   10468:	orr	r5, r6, r0
   1046c:	ldr	r1, [pc, #140]	; 10500 <error_case_tests+0x3bc>
   10470:	mov	r2, #0
   10474:	mov	r3, #13
   10478:	mov	ip, #0
   1047c:	mov	r7, #0
   10480:	movw	r0, #337	; 0x151
   10484:	str	r0, [sp, #8]
   10488:	str	r7, [sp, #4]
   1048c:	str	ip, [sp]
   10490:	mov	r0, r4
   10494:	bl	fa04 <test_json>
   10498:	orr	r5, r5, r0
   1049c:	ldr	r1, [pc, #76]	; 104f0 <error_case_tests+0x3ac>
   104a0:	mov	r2, #0
   104a4:	mov	r3, #13
   104a8:	mov	r7, #0
   104ac:	mov	r0, #0
   104b0:	movw	r6, #341	; 0x155
   104b4:	str	r6, [sp, #8]
   104b8:	str	r0, [sp, #4]
   104bc:	str	r7, [sp]
   104c0:	mov	r0, r4
   104c4:	bl	fa04 <test_json>
   104c8:	orr	r0, r5, r0
   104cc:	ldr	r4, [sp, #24]
   104d0:	ldr	r5, [sp, #28]
   104d4:	ldr	r6, [sp, #32]
   104d8:	ldr	r7, [sp, #36]	; 0x24
   104dc:	ldr	lr, [sp, #16]
   104e0:	add	sp, sp, #40	; 0x28
   104e4:	bx	lr
   104e8:	.word	0x0000152a
   104ec:	.word	0x000005c2
   104f0:	.word	0x000036c0
   104f4:	.word	0x0000054c
   104f8:	.word	0x0000390b
   104fc:	.word	0x0000001b
   10500:	.word	0x00000b9a
   10504:	.word	0x00000d3e
   10508:	.word	0x00003ad4
   1050c:	.word	0x00002d21
   10510:	.word	0x0000314a
   10514:	.word	0x00002723
   10518:	.word	0x000003e4
   1051c:	.word	0x0000352c
   10520:	.word	0x0000177a
   10524:	.word	0x00001289
   10528:	.word	0x00001359
   1052c:	.word	0x000031a2
   10530:	.word	0x00002531

00010534 <base64_tests>:
   10534:	mov	ip, sp
   10538:	sub	sp, sp, #40	; 0x28
   1053c:	str	ip, [sp, #12]
   10540:	str	lr, [sp, #16]
   10544:	str	r4, [sp, #24]
   10548:	str	r5, [sp, #28]
   1054c:	str	r6, [sp, #32]
   10550:	str	r7, [sp, #36]	; 0x24
   10554:	mov	r6, #0
   10558:	ldr	r4, [pc, #524]	; 1076c <base64_tests+0x238>
   1055c:	ldr	r1, [pc, #544]	; 10784 <base64_tests+0x250>
   10560:	ldr	r2, [pc, #524]	; 10774 <base64_tests+0x240>
   10564:	mov	r3, #0
   10568:	mov	r7, #0
   1056c:	mov	r0, #0
   10570:	mov	ip, #368	; 0x170
   10574:	str	ip, [sp, #8]
   10578:	str	r0, [sp, #4]
   1057c:	str	r7, [sp]
   10580:	mov	r0, r4
   10584:	bl	fa04 <test_json>
   10588:	orr	r5, r6, r0
   1058c:	ldr	r1, [pc, #460]	; 10760 <base64_tests+0x22c>
   10590:	ldr	r2, [pc, #488]	; 10780 <base64_tests+0x24c>
   10594:	mov	r3, #0
   10598:	mov	r0, #0
   1059c:	mov	ip, #0
   105a0:	movw	r6, #371	; 0x173
   105a4:	str	r6, [sp, #8]
   105a8:	str	ip, [sp, #4]
   105ac:	str	r0, [sp]
   105b0:	mov	r0, r4
   105b4:	bl	fa04 <test_json>
   105b8:	orr	r5, r5, r0
   105bc:	ldr	r1, [pc, #416]	; 10764 <base64_tests+0x230>
   105c0:	ldr	r2, [pc, #452]	; 1078c <base64_tests+0x258>
   105c4:	mov	r3, #0
   105c8:	mov	r7, #0
   105cc:	mov	ip, #0
   105d0:	movw	r0, #375	; 0x177
   105d4:	str	r0, [sp, #8]
   105d8:	str	ip, [sp, #4]
   105dc:	str	r7, [sp]
   105e0:	mov	r0, r4
   105e4:	bl	fa04 <test_json>
   105e8:	orr	r5, r5, r0
   105ec:	ldr	r1, [pc, #412]	; 10790 <base64_tests+0x25c>
   105f0:	ldr	r2, [pc, #352]	; 10758 <base64_tests+0x224>
   105f4:	mov	r3, #0
   105f8:	mov	r7, #0
   105fc:	mov	ip, #0
   10600:	movw	r0, #378	; 0x17a
   10604:	str	r0, [sp, #8]
   10608:	str	ip, [sp, #4]
   1060c:	str	r7, [sp]
   10610:	mov	r0, r4
   10614:	bl	fa04 <test_json>
   10618:	orr	r5, r5, r0
   1061c:	ldr	r1, [pc, #368]	; 10794 <base64_tests+0x260>
   10620:	ldr	r2, [pc, #356]	; 1078c <base64_tests+0x258>
   10624:	mov	r3, #0
   10628:	mov	r6, #0
   1062c:	mov	r0, #0
   10630:	movw	r7, #381	; 0x17d
   10634:	str	r7, [sp, #8]
   10638:	str	r0, [sp, #4]
   1063c:	str	r6, [sp]
   10640:	mov	r0, r4
   10644:	bl	fa04 <test_json>
   10648:	orr	r5, r5, r0
   1064c:	ldr	r1, [pc, #264]	; 1075c <base64_tests+0x228>
   10650:	ldr	r2, [pc, #256]	; 10758 <base64_tests+0x224>
   10654:	mov	r3, #0
   10658:	mov	r0, #0
   1065c:	mov	ip, #0
   10660:	mov	r7, #384	; 0x180
   10664:	str	r7, [sp, #8]
   10668:	str	ip, [sp, #4]
   1066c:	str	r0, [sp]
   10670:	mov	r0, r4
   10674:	bl	fa04 <test_json>
   10678:	orr	r5, r5, r0
   1067c:	ldr	r1, [pc, #244]	; 10778 <base64_tests+0x244>
   10680:	mov	r2, #0
   10684:	mov	r3, #31
   10688:	mov	r0, #0
   1068c:	mov	r7, #0
   10690:	movw	r6, #387	; 0x183
   10694:	str	r6, [sp, #8]
   10698:	str	r7, [sp, #4]
   1069c:	str	r0, [sp]
   106a0:	mov	r0, r4
   106a4:	bl	fa04 <test_json>
   106a8:	orr	r5, r5, r0
   106ac:	ldr	r1, [pc, #200]	; 1077c <base64_tests+0x248>
   106b0:	mov	r2, #0
   106b4:	mov	r3, #32
   106b8:	mov	r0, #0
   106bc:	mov	r7, #0
   106c0:	movw	r6, #390	; 0x186
   106c4:	str	r6, [sp, #8]
   106c8:	str	r7, [sp, #4]
   106cc:	str	r0, [sp]
   106d0:	mov	r0, r4
   106d4:	bl	fa04 <test_json>
   106d8:	orr	r5, r5, r0
   106dc:	ldr	r1, [pc, #132]	; 10768 <base64_tests+0x234>
   106e0:	ldr	r2, [pc, #160]	; 10788 <base64_tests+0x254>
   106e4:	mov	r3, #0
   106e8:	mov	ip, #0
   106ec:	mov	r7, #0
   106f0:	movw	r0, #395	; 0x18b
   106f4:	str	r0, [sp, #8]
   106f8:	str	r7, [sp, #4]
   106fc:	str	ip, [sp]
   10700:	mov	r0, r4
   10704:	bl	fa04 <test_json>
   10708:	orr	r5, r5, r0
   1070c:	ldr	r1, [pc, #92]	; 10770 <base64_tests+0x23c>
   10710:	ldr	r2, [pc, #112]	; 10788 <base64_tests+0x254>
   10714:	mov	r3, #0
   10718:	mov	r7, #0
   1071c:	mov	r0, #0
   10720:	mov	ip, #408	; 0x198
   10724:	str	ip, [sp, #8]
   10728:	str	r0, [sp, #4]
   1072c:	str	r7, [sp]
   10730:	mov	r0, r4
   10734:	bl	fa04 <test_json>
   10738:	orr	r0, r5, r0
   1073c:	ldr	r4, [sp, #24]
   10740:	ldr	r5, [sp, #28]
   10744:	ldr	r6, [sp, #32]
   10748:	ldr	r7, [sp, #36]	; 0x24
   1074c:	ldr	lr, [sp, #16]
   10750:	add	sp, sp, #40	; 0x28
   10754:	bx	lr
   10758:	.word	0x0000074c
   1075c:	.word	0x00000035
   10760:	.word	0x00002c7b
   10764:	.word	0x000022c8
   10768:	.word	0x0000045e
   1076c:	.word	0x00003ad4
   10770:	.word	0x000000f5
   10774:	.word	0x000032f3
   10778:	.word	0x0000358a
   1077c:	.word	0x00000f48
   10780:	.word	0x00000d9d
   10784:	.word	0x00003ab0
   10788:	.word	0x000037cd
   1078c:	.word	0x00003306
   10790:	.word	0x00000c6a
   10794:	.word	0x00000826

00010798 <mixed_type_union_tests>:
   10798:	mov	ip, sp
   1079c:	sub	sp, sp, #40	; 0x28
   107a0:	str	ip, [sp, #12]
   107a4:	str	lr, [sp, #16]
   107a8:	str	r4, [sp, #24]
   107ac:	str	r5, [sp, #28]
   107b0:	str	r6, [sp, #32]
   107b4:	str	r7, [sp, #36]	; 0x24
   107b8:	mov	r5, #0
   107bc:	ldr	r4, [pc, #384]	; 10944 <mixed_type_union_tests+0x1ac>
   107c0:	ldr	r1, [pc, #364]	; 10934 <mixed_type_union_tests+0x19c>
   107c4:	ldr	r2, [pc, #352]	; 1092c <mixed_type_union_tests+0x194>
   107c8:	mov	r3, #0
   107cc:	mov	r6, #0
   107d0:	mov	r0, #0
   107d4:	movw	r7, #431	; 0x1af
   107d8:	str	r7, [sp, #8]
   107dc:	str	r0, [sp, #4]
   107e0:	str	r6, [sp]
   107e4:	mov	r0, r4
   107e8:	bl	fa04 <test_json>
   107ec:	orr	r5, r5, r0
   107f0:	ldr	r1, [pc, #352]	; 10958 <mixed_type_union_tests+0x1c0>
   107f4:	ldr	r2, [pc, #320]	; 1093c <mixed_type_union_tests+0x1a4>
   107f8:	mov	r3, #0
   107fc:	mov	ip, #0
   10800:	mov	r7, #0
   10804:	movw	r0, #434	; 0x1b2
   10808:	str	r0, [sp, #8]
   1080c:	str	r7, [sp, #4]
   10810:	str	ip, [sp]
   10814:	mov	r0, r4
   10818:	bl	fa04 <test_json>
   1081c:	orr	r6, r5, r0
   10820:	ldr	r1, [pc, #264]	; 10930 <mixed_type_union_tests+0x198>
   10824:	ldr	r2, [pc, #272]	; 1093c <mixed_type_union_tests+0x1a4>
   10828:	mov	r3, #0
   1082c:	mov	r7, #0
   10830:	mov	ip, #0
   10834:	movw	r0, #439	; 0x1b7
   10838:	str	r0, [sp, #8]
   1083c:	str	ip, [sp, #4]
   10840:	str	r7, [sp]
   10844:	mov	r0, r4
   10848:	bl	fa04 <test_json>
   1084c:	orr	r5, r6, r0
   10850:	ldr	r1, [pc, #252]	; 10954 <mixed_type_union_tests+0x1bc>
   10854:	ldr	r2, [pc, #220]	; 10938 <mixed_type_union_tests+0x1a0>
   10858:	mov	r3, #0
   1085c:	mov	r7, #0
   10860:	mov	r0, #0
   10864:	mov	r6, #444	; 0x1bc
   10868:	str	r6, [sp, #8]
   1086c:	str	r0, [sp, #4]
   10870:	str	r7, [sp]
   10874:	mov	r0, r4
   10878:	bl	fa04 <test_json>
   1087c:	orr	r5, r5, r0
   10880:	ldr	r1, [pc, #184]	; 10940 <mixed_type_union_tests+0x1a8>
   10884:	ldr	r2, [pc, #188]	; 10948 <mixed_type_union_tests+0x1b0>
   10888:	mov	r3, #0
   1088c:	mov	r0, #0
   10890:	mov	r6, #0
   10894:	movw	r7, #451	; 0x1c3
   10898:	str	r7, [sp, #8]
   1089c:	str	r6, [sp, #4]
   108a0:	str	r0, [sp]
   108a4:	mov	r0, r4
   108a8:	bl	fa04 <test_json>
   108ac:	orr	r5, r5, r0
   108b0:	ldr	r1, [pc, #148]	; 1094c <mixed_type_union_tests+0x1b4>
   108b4:	ldr	r2, [pc, #160]	; 1095c <mixed_type_union_tests+0x1c4>
   108b8:	mov	r3, #0
   108bc:	mov	r6, #0
   108c0:	mov	r7, #0
   108c4:	mov	r0, #460	; 0x1cc
   108c8:	str	r0, [sp, #8]
   108cc:	str	r7, [sp, #4]
   108d0:	str	r6, [sp]
   108d4:	mov	r0, r4
   108d8:	bl	fa04 <test_json>
   108dc:	orr	r5, r5, r0
   108e0:	ldr	r1, [pc, #104]	; 10950 <mixed_type_union_tests+0x1b8>
   108e4:	ldr	r2, [pc, #80]	; 1093c <mixed_type_union_tests+0x1a4>
   108e8:	mov	r3, #0
   108ec:	mov	ip, #0
   108f0:	mov	r0, #0
   108f4:	movw	r7, #471	; 0x1d7
   108f8:	str	r7, [sp, #8]
   108fc:	str	r0, [sp, #4]
   10900:	str	ip, [sp]
   10904:	mov	r0, r4
   10908:	bl	fa04 <test_json>
   1090c:	orr	r0, r5, r0
   10910:	ldr	r4, [sp, #24]
   10914:	ldr	r5, [sp, #28]
   10918:	ldr	r6, [sp, #32]
   1091c:	ldr	r7, [sp, #36]	; 0x24
   10920:	ldr	lr, [sp, #16]
   10924:	add	sp, sp, #40	; 0x28
   10928:	bx	lr
   1092c:	.word	0x00001bb9
   10930:	.word	0x00002f3b
   10934:	.word	0x00001ae0
   10938:	.word	0x00000e8a
   1093c:	.word	0x0000286d
   10940:	.word	0x00001d61
   10944:	.word	0x00003af4
   10948:	.word	0x000020ba
   1094c:	.word	0x00001815
   10950:	.word	0x00002931
   10954:	.word	0x00002e21
   10958:	.word	0x00002a0f
   1095c:	.word	0x00001edb

00010960 <union_vector_tests>:
   10960:	mov	ip, sp
   10964:	sub	sp, sp, #40	; 0x28
   10968:	str	ip, [sp, #12]
   1096c:	str	lr, [sp, #16]
   10970:	str	r4, [sp, #24]
   10974:	str	r5, [sp, #28]
   10978:	str	r6, [sp, #32]
   1097c:	str	r7, [sp, #36]	; 0x24
   10980:	mov	r5, #0
   10984:	ldr	r4, [pc, #332]	; 10ad8 <union_vector_tests+0x178>
   10988:	ldr	r1, [pc, #316]	; 10acc <union_vector_tests+0x16c>
   1098c:	ldr	r2, [pc, #348]	; 10af0 <union_vector_tests+0x190>
   10990:	mov	r3, #0
   10994:	mov	ip, #0
   10998:	mov	r7, #0
   1099c:	mov	r0, #484	; 0x1e4
   109a0:	str	r0, [sp, #8]
   109a4:	str	r7, [sp, #4]
   109a8:	str	ip, [sp]
   109ac:	mov	r0, r4
   109b0:	bl	fa04 <test_json>
   109b4:	orr	r5, r5, r0
   109b8:	ldr	r1, [pc, #284]	; 10adc <union_vector_tests+0x17c>
   109bc:	ldr	r2, [pc, #284]	; 10ae0 <union_vector_tests+0x180>
   109c0:	mov	r3, #0
   109c4:	mov	r6, #0
   109c8:	mov	r7, #0
   109cc:	movw	r0, #487	; 0x1e7
   109d0:	str	r0, [sp, #8]
   109d4:	str	r7, [sp, #4]
   109d8:	str	r6, [sp]
   109dc:	mov	r0, r4
   109e0:	bl	fa04 <test_json>
   109e4:	orr	r5, r5, r0
   109e8:	ldr	r1, [pc, #248]	; 10ae8 <union_vector_tests+0x188>
   109ec:	ldr	r2, [pc, #220]	; 10ad0 <union_vector_tests+0x170>
   109f0:	mov	r3, #0
   109f4:	mov	r7, #0
   109f8:	mov	r6, #0
   109fc:	movw	r0, #490	; 0x1ea
   10a00:	str	r0, [sp, #8]
   10a04:	str	r6, [sp, #4]
   10a08:	str	r7, [sp]
   10a0c:	mov	r0, r4
   10a10:	bl	fa04 <test_json>
   10a14:	orr	r5, r5, r0
   10a18:	ldr	r1, [pc, #196]	; 10ae4 <union_vector_tests+0x184>
   10a1c:	ldr	r2, [pc, #200]	; 10aec <union_vector_tests+0x18c>
   10a20:	mov	r3, #0
   10a24:	mov	r7, #0
   10a28:	mov	r0, #0
   10a2c:	movw	r6, #493	; 0x1ed
   10a30:	str	r6, [sp, #8]
   10a34:	str	r0, [sp, #4]
   10a38:	str	r7, [sp]
   10a3c:	mov	r0, r4
   10a40:	bl	fa04 <test_json>
   10a44:	orr	r6, r5, r0
   10a48:	ldr	r1, [pc, #120]	; 10ac8 <union_vector_tests+0x168>
   10a4c:	ldr	r2, [pc, #156]	; 10af0 <union_vector_tests+0x190>
   10a50:	mov	r3, #0
   10a54:	mov	r0, #0
   10a58:	mov	ip, #0
   10a5c:	mov	r7, #496	; 0x1f0
   10a60:	str	r7, [sp, #8]
   10a64:	str	ip, [sp, #4]
   10a68:	str	r0, [sp]
   10a6c:	mov	r0, r4
   10a70:	bl	fa04 <test_json>
   10a74:	orr	r5, r6, r0
   10a78:	ldr	r1, [pc, #68]	; 10ac4 <union_vector_tests+0x164>
   10a7c:	ldr	r2, [pc, #80]	; 10ad4 <union_vector_tests+0x174>
   10a80:	mov	r3, #0
   10a84:	mov	r7, #0
   10a88:	mov	r0, #0
   10a8c:	movw	ip, #499	; 0x1f3
   10a90:	str	ip, [sp, #8]
   10a94:	str	r0, [sp, #4]
   10a98:	str	r7, [sp]
   10a9c:	mov	r0, r4
   10aa0:	bl	fa04 <test_json>
   10aa4:	orr	r0, r5, r0
   10aa8:	ldr	r4, [sp, #24]
   10aac:	ldr	r5, [sp, #28]
   10ab0:	ldr	r6, [sp, #32]
   10ab4:	ldr	r7, [sp, #36]	; 0x24
   10ab8:	ldr	lr, [sp, #16]
   10abc:	add	sp, sp, #40	; 0x28
   10ac0:	bx	lr
   10ac4:	.word	0x00002469
   10ac8:	.word	0x0000165b
   10acc:	.word	0x00001614
   10ad0:	.word	0x00002b04
   10ad4:	.word	0x00000689
   10ad8:	.word	0x00003ae4
   10adc:	.word	0x00002381
   10ae0:	.word	0x00002dd0
   10ae4:	.word	0x00003643
   10ae8:	.word	0x00001004
   10aec:	.word	0x00002a92
   10af0:	.word	0x00002775

00010af4 <main>:
   10af4:	mov	ip, sp
   10af8:	sub	sp, sp, #40	; 0x28
   10afc:	str	ip, [sp, #12]
   10b00:	str	lr, [sp, #16]
   10b04:	str	r4, [sp, #24]
   10b08:	str	r5, [sp, #28]
   10b0c:	str	r6, [sp, #32]
   10b10:	str	r7, [sp, #36]	; 0x24
   10b14:	mov	r5, #0
   10b18:	ldr	r4, [pc, #3352]	; 11838 <main+0xd44>
   10b1c:	bl	fd78 <edge_case_tests>
   10b20:	orr	r5, r5, r0
   10b24:	bl	10144 <error_case_tests>
   10b28:	orr	r5, r5, r0
   10b2c:	bl	10960 <union_vector_tests>
   10b30:	orr	r5, r5, r0
   10b34:	bl	10534 <base64_tests>
   10b38:	orr	r5, r5, r0
   10b3c:	bl	10798 <mixed_type_union_tests>
   10b40:	orr	r5, r5, r0
   10b44:	ldr	r1, [pc, #3204]	; 117d0 <main+0xcdc>
   10b48:	ldr	r2, [pc, #3312]	; 11840 <main+0xd4c>
   10b4c:	mov	r3, #0
   10b50:	mov	r0, #0
   10b54:	mov	r6, #0
   10b58:	mov	r7, #524	; 0x20c
   10b5c:	str	r7, [sp, #8]
   10b60:	str	r6, [sp, #4]
   10b64:	str	r0, [sp]
   10b68:	mov	r0, r4
   10b6c:	bl	fa04 <test_json>
   10b70:	orr	r5, r5, r0
   10b74:	ldr	r1, [pc, #3256]	; 11834 <main+0xd40>
   10b78:	ldr	r2, [pc, #3196]	; 117fc <main+0xd08>
   10b7c:	mov	r3, #0
   10b80:	mov	r6, #0
   10b84:	mov	r0, #0
   10b88:	movw	r7, #527	; 0x20f
   10b8c:	str	r7, [sp, #8]
   10b90:	str	r0, [sp, #4]
   10b94:	str	r6, [sp]
   10b98:	mov	r0, r4
   10b9c:	bl	fa04 <test_json>
   10ba0:	orr	r5, r5, r0
   10ba4:	ldr	r1, [pc, #3180]	; 11818 <main+0xd24>
   10ba8:	ldr	r2, [pc, #3032]	; 11788 <main+0xc94>
   10bac:	mov	r3, #0
   10bb0:	mov	r7, #0
   10bb4:	mov	r0, #0
   10bb8:	movw	r6, #530	; 0x212
   10bbc:	str	r6, [sp, #8]
   10bc0:	str	r0, [sp, #4]
   10bc4:	str	r7, [sp]
   10bc8:	mov	r0, r4
   10bcc:	bl	fa04 <test_json>
   10bd0:	orr	r6, r5, r0
   10bd4:	ldr	r1, [pc, #3308]	; 118c8 <main+0xdd4>
   10bd8:	ldr	r2, [pc, #3188]	; 11854 <main+0xd60>
   10bdc:	mov	r3, #0
   10be0:	mov	r0, #0
   10be4:	mov	r7, #0
   10be8:	movw	ip, #533	; 0x215
   10bec:	str	ip, [sp, #8]
   10bf0:	str	r7, [sp, #4]
   10bf4:	str	r0, [sp]
   10bf8:	mov	r0, r4
   10bfc:	bl	fa04 <test_json>
   10c00:	orr	r5, r6, r0
   10c04:	ldr	r1, [pc, #3228]	; 118a8 <main+0xdb4>
   10c08:	ldr	r2, [pc, #3140]	; 11854 <main+0xd60>
   10c0c:	mov	r3, #0
   10c10:	mov	ip, #0
   10c14:	mov	r0, #0
   10c18:	mov	r7, #536	; 0x218
   10c1c:	str	r7, [sp, #8]
   10c20:	str	r0, [sp, #4]
   10c24:	str	ip, [sp]
   10c28:	mov	r0, r4
   10c2c:	bl	fa04 <test_json>
   10c30:	orr	r5, r5, r0
   10c34:	ldr	r1, [pc, #3020]	; 11808 <main+0xd14>
   10c38:	ldr	r2, [pc, #3004]	; 117fc <main+0xd08>
   10c3c:	mov	r3, #0
   10c40:	mov	ip, #0
   10c44:	mov	r0, #0
   10c48:	movw	r7, #539	; 0x21b
   10c4c:	str	r7, [sp, #8]
   10c50:	str	r0, [sp, #4]
   10c54:	str	ip, [sp]
   10c58:	mov	r0, r4
   10c5c:	bl	fa04 <test_json>
   10c60:	orr	r6, r5, r0
   10c64:	ldr	r1, [pc, #3064]	; 11864 <main+0xd70>
   10c68:	ldr	r2, [pc, #2840]	; 11788 <main+0xc94>
   10c6c:	mov	r3, #0
   10c70:	mov	r0, #0
   10c74:	mov	ip, #0
   10c78:	movw	r7, #542	; 0x21e
   10c7c:	str	r7, [sp, #8]
   10c80:	str	ip, [sp, #4]
   10c84:	str	r0, [sp]
   10c88:	mov	r0, r4
   10c8c:	bl	fa04 <test_json>
   10c90:	orr	r5, r6, r0
   10c94:	ldr	r1, [pc, #2964]	; 11830 <main+0xd3c>
   10c98:	ldr	r2, [pc, #2976]	; 11840 <main+0xd4c>
   10c9c:	mov	r3, #0
   10ca0:	mov	r0, #0
   10ca4:	mov	r7, #0
   10ca8:	movw	r6, #546	; 0x222
   10cac:	str	r6, [sp, #8]
   10cb0:	str	r7, [sp, #4]
   10cb4:	str	r0, [sp]
   10cb8:	mov	r0, r4
   10cbc:	bl	fa04 <test_json>
   10cc0:	orr	r5, r5, r0
   10cc4:	ldr	r1, [pc, #3044]	; 118b0 <main+0xdbc>
   10cc8:	ldr	r2, [pc, #2928]	; 11840 <main+0xd4c>
   10ccc:	mov	r3, #0
   10cd0:	mov	r0, #0
   10cd4:	mov	r6, #0
   10cd8:	movw	ip, #550	; 0x226
   10cdc:	str	ip, [sp, #8]
   10ce0:	str	r6, [sp, #4]
   10ce4:	str	r0, [sp]
   10ce8:	mov	r0, r4
   10cec:	bl	fa04 <test_json>
   10cf0:	orr	r5, r5, r0
   10cf4:	ldr	r1, [pc, #2680]	; 11774 <main+0xc80>
   10cf8:	ldr	r2, [pc, #2880]	; 11840 <main+0xd4c>
   10cfc:	mov	r3, #0
   10d00:	mov	r6, #0
   10d04:	mov	ip, #0
   10d08:	movw	r0, #554	; 0x22a
   10d0c:	str	r0, [sp, #8]
   10d10:	str	ip, [sp, #4]
   10d14:	str	r6, [sp]
   10d18:	mov	r0, r4
   10d1c:	bl	fa04 <test_json>
   10d20:	orr	r5, r5, r0
   10d24:	ldr	r1, [pc, #2944]	; 118ac <main+0xdb8>
   10d28:	ldr	r2, [pc, #2764]	; 117fc <main+0xd08>
   10d2c:	mov	r3, #0
   10d30:	mov	r7, #0
   10d34:	mov	r0, #0
   10d38:	movw	r6, #557	; 0x22d
   10d3c:	str	r6, [sp, #8]
   10d40:	str	r0, [sp, #4]
   10d44:	str	r7, [sp]
   10d48:	mov	r0, r4
   10d4c:	bl	fa04 <test_json>
   10d50:	orr	r5, r5, r0
   10d54:	ldr	r1, [pc, #2764]	; 11828 <main+0xd34>
   10d58:	ldr	r2, [pc, #2600]	; 11788 <main+0xc94>
   10d5c:	mov	r3, #0
   10d60:	mov	r6, #0
   10d64:	mov	r7, #0
   10d68:	mov	r0, #560	; 0x230
   10d6c:	str	r0, [sp, #8]
   10d70:	str	r7, [sp, #4]
   10d74:	str	r6, [sp]
   10d78:	mov	r0, r4
   10d7c:	bl	fa04 <test_json>
   10d80:	orr	r5, r5, r0
   10d84:	ldr	r1, [pc, #2540]	; 11778 <main+0xc84>
   10d88:	ldr	r2, [pc, #2756]	; 11854 <main+0xd60>
   10d8c:	mov	r3, #0
   10d90:	mov	r0, #0
   10d94:	mov	r7, #0
   10d98:	movw	r6, #563	; 0x233
   10d9c:	str	r6, [sp, #8]
   10da0:	str	r7, [sp, #4]
   10da4:	str	r0, [sp]
   10da8:	mov	r0, r4
   10dac:	bl	fa04 <test_json>
   10db0:	orr	r6, r5, r0
   10db4:	ldr	r1, [pc, #2568]	; 117c4 <main+0xcd0>
   10db8:	ldr	r2, [pc, #2708]	; 11854 <main+0xd60>
   10dbc:	mov	r3, #0
   10dc0:	mov	r7, #0
   10dc4:	mov	ip, #0
   10dc8:	movw	r0, #566	; 0x236
   10dcc:	str	r0, [sp, #8]
   10dd0:	str	ip, [sp, #4]
   10dd4:	str	r7, [sp]
   10dd8:	mov	r0, r4
   10ddc:	bl	fa04 <test_json>
   10de0:	orr	r5, r6, r0
   10de4:	ldr	r1, [pc, #2700]	; 11878 <main+0xd84>
   10de8:	ldr	r2, [pc, #2572]	; 117fc <main+0xd08>
   10dec:	mov	r3, #0
   10df0:	mov	r0, #0
   10df4:	mov	ip, #0
   10df8:	movw	r6, #569	; 0x239
   10dfc:	str	r6, [sp, #8]
   10e00:	str	ip, [sp, #4]
   10e04:	str	r0, [sp]
   10e08:	mov	r0, r4
   10e0c:	bl	fa04 <test_json>
   10e10:	orr	r5, r5, r0
   10e14:	ldr	r1, [pc, #2608]	; 1184c <main+0xd58>
   10e18:	ldr	r2, [pc, #2408]	; 11788 <main+0xc94>
   10e1c:	mov	r3, #0
   10e20:	mov	r0, #0
   10e24:	mov	r6, #0
   10e28:	mov	ip, #572	; 0x23c
   10e2c:	str	ip, [sp, #8]
   10e30:	str	r6, [sp, #4]
   10e34:	str	r0, [sp]
   10e38:	mov	r0, r4
   10e3c:	bl	fa04 <test_json>
   10e40:	orr	r5, r5, r0
   10e44:	ldr	r1, [pc, #2448]	; 117dc <main+0xce8>
   10e48:	ldr	r2, [pc, #2544]	; 11840 <main+0xd4c>
   10e4c:	mov	r3, #0
   10e50:	mov	ip, #0
   10e54:	mov	r6, #0
   10e58:	mov	r0, #576	; 0x240
   10e5c:	str	r0, [sp, #8]
   10e60:	str	r6, [sp, #4]
   10e64:	str	ip, [sp]
   10e68:	mov	r0, r4
   10e6c:	bl	fa04 <test_json>
   10e70:	orr	r5, r5, r0
   10e74:	ldr	r1, [pc, #2448]	; 1180c <main+0xd18>
   10e78:	ldr	r2, [pc, #2496]	; 11840 <main+0xd4c>
   10e7c:	mov	r3, #0
   10e80:	mov	r6, #0
   10e84:	mov	r0, #0
   10e88:	mov	r7, #580	; 0x244
   10e8c:	str	r7, [sp, #8]
   10e90:	str	r0, [sp, #4]
   10e94:	str	r6, [sp]
   10e98:	mov	r0, r4
   10e9c:	bl	fa04 <test_json>
   10ea0:	orr	r5, r5, r0
   10ea4:	ldr	r1, [pc, #2284]	; 11798 <main+0xca4>
   10ea8:	ldr	r2, [pc, #2380]	; 117fc <main+0xd08>
   10eac:	mov	r3, #0
   10eb0:	mov	r0, #0
   10eb4:	mov	ip, #0
   10eb8:	mov	r6, #600	; 0x258
   10ebc:	str	r6, [sp, #8]
   10ec0:	str	ip, [sp, #4]
   10ec4:	str	r0, [sp]
   10ec8:	mov	r0, r4
   10ecc:	bl	fa04 <test_json>
   10ed0:	orr	r5, r5, r0
   10ed4:	ldr	r1, [pc, #2328]	; 117f4 <main+0xd00>
   10ed8:	ldr	r2, [pc, #2216]	; 11788 <main+0xc94>
   10edc:	mov	r3, #0
   10ee0:	mov	r6, #0
   10ee4:	mov	r0, #0
   10ee8:	movw	r7, #603	; 0x25b
   10eec:	str	r7, [sp, #8]
   10ef0:	str	r0, [sp, #4]
   10ef4:	str	r6, [sp]
   10ef8:	mov	r0, r4
   10efc:	bl	fa04 <test_json>
   10f00:	orr	r5, r5, r0
   10f04:	ldr	r1, [pc, #2192]	; 1179c <main+0xca8>
   10f08:	ldr	r2, [pc, #2412]	; 1187c <main+0xd88>
   10f0c:	mov	r3, #0
   10f10:	mov	r7, #0
   10f14:	mov	ip, #0
   10f18:	movw	r0, #606	; 0x25e
   10f1c:	str	r0, [sp, #8]
   10f20:	str	ip, [sp, #4]
   10f24:	str	r7, [sp]
   10f28:	mov	r0, r4
   10f2c:	bl	fa04 <test_json>
   10f30:	orr	r6, r5, r0
   10f34:	ldr	r1, [pc, #2360]	; 11874 <main+0xd80>
   10f38:	ldr	r2, [pc, #2324]	; 11854 <main+0xd60>
   10f3c:	mov	r3, #0
   10f40:	mov	r7, #0
   10f44:	mov	ip, #0
   10f48:	movw	r0, #609	; 0x261
   10f4c:	str	r0, [sp, #8]
   10f50:	str	ip, [sp, #4]
   10f54:	str	r7, [sp]
   10f58:	mov	r0, r4
   10f5c:	bl	fa04 <test_json>
   10f60:	orr	r5, r6, r0
   10f64:	ldr	r1, [pc, #2352]	; 1189c <main+0xda8>
   10f68:	ldr	r2, [pc, #2356]	; 118a4 <main+0xdb0>
   10f6c:	mov	r3, #0
   10f70:	mov	r6, #0
   10f74:	mov	r0, #0
   10f78:	mov	r7, #612	; 0x264
   10f7c:	str	r7, [sp, #8]
   10f80:	str	r0, [sp, #4]
   10f84:	str	r6, [sp]
   10f88:	mov	r0, r4
   10f8c:	bl	fa04 <test_json>
   10f90:	orr	r5, r5, r0
   10f94:	ldr	r1, [pc, #2276]	; 11880 <main+0xd8c>
   10f98:	ldr	r2, [pc, #2112]	; 117e0 <main+0xcec>
   10f9c:	mov	r3, #0
   10fa0:	mov	r6, #0
   10fa4:	mov	r0, #0
   10fa8:	movw	ip, #615	; 0x267
   10fac:	str	ip, [sp, #8]
   10fb0:	str	r0, [sp, #4]
   10fb4:	str	r6, [sp]
   10fb8:	mov	r0, r4
   10fbc:	bl	fa04 <test_json>
   10fc0:	orr	r6, r5, r0
   10fc4:	ldr	r1, [pc, #1984]	; 1178c <main+0xc98>
   10fc8:	ldr	r2, [pc, #2228]	; 11884 <main+0xd90>
   10fcc:	mov	r3, #0
   10fd0:	mov	ip, #0
   10fd4:	mov	r0, #0
   10fd8:	movw	r7, #618	; 0x26a
   10fdc:	str	r7, [sp, #8]
   10fe0:	str	r0, [sp, #4]
   10fe4:	str	ip, [sp]
   10fe8:	mov	r0, r4
   10fec:	bl	fa04 <test_json>
   10ff0:	orr	r5, r6, r0
   10ff4:	ldr	r1, [pc, #2192]	; 1188c <main+0xd98>
   10ff8:	ldr	r2, [pc, #2044]	; 117fc <main+0xd08>
   10ffc:	mov	r3, #0
   11000:	mov	ip, #0
   11004:	mov	r0, #0
   11008:	movw	r6, #621	; 0x26d
   1100c:	str	r6, [sp, #8]
   11010:	str	r0, [sp, #4]
   11014:	str	ip, [sp]
   11018:	mov	r0, r4
   1101c:	bl	fa04 <test_json>
   11020:	orr	r5, r5, r0
   11024:	ldr	r1, [pc, #2064]	; 1183c <main+0xd48>
   11028:	ldr	r2, [pc, #1996]	; 117fc <main+0xd08>
   1102c:	mov	r3, #0
   11030:	mov	r7, #0
   11034:	mov	ip, #0
   11038:	mov	r0, #624	; 0x270
   1103c:	str	r0, [sp, #8]
   11040:	str	ip, [sp, #4]
   11044:	str	r7, [sp]
   11048:	mov	r0, r4
   1104c:	bl	fa04 <test_json>
   11050:	orr	r5, r5, r0
   11054:	ldr	r1, [pc, #1956]	; 11800 <main+0xd0c>
   11058:	ldr	r2, [pc, #1872]	; 117b0 <main+0xcbc>
   1105c:	mov	r3, #0
   11060:	mov	r0, #0
   11064:	mov	r7, #0
   11068:	movw	r6, #627	; 0x273
   1106c:	str	r6, [sp, #8]
   11070:	str	r7, [sp, #4]
   11074:	str	r0, [sp]
   11078:	mov	r0, r4
   1107c:	bl	fa04 <test_json>
   11080:	orr	r6, r5, r0
   11084:	ldr	r1, [pc, #1908]	; 11800 <main+0xd0c>
   11088:	ldr	r2, [pc, #1824]	; 117b0 <main+0xcbc>
   1108c:	mov	r3, #0
   11090:	mov	r7, #0
   11094:	mov	ip, #0
   11098:	movw	r0, #630	; 0x276
   1109c:	str	r0, [sp, #8]
   110a0:	str	ip, [sp, #4]
   110a4:	str	r7, [sp]
   110a8:	mov	r0, r4
   110ac:	bl	fa04 <test_json>
   110b0:	orr	r5, r6, r0
   110b4:	ldr	r1, [pc, #1928]	; 11844 <main+0xd50>
   110b8:	ldr	r2, [pc, #1992]	; 11888 <main+0xd94>
   110bc:	mov	r3, #0
   110c0:	mov	r7, #0
   110c4:	mov	ip, #0
   110c8:	movw	r0, #633	; 0x279
   110cc:	str	r0, [sp, #8]
   110d0:	str	ip, [sp, #4]
   110d4:	str	r7, [sp]
   110d8:	mov	r0, r4
   110dc:	bl	fa04 <test_json>
   110e0:	orr	r5, r5, r0
   110e4:	ldr	r1, [pc, #1716]	; 117a0 <main+0xcac>
   110e8:	ldr	r2, [pc, #1852]	; 1182c <main+0xd38>
   110ec:	mov	r3, #0
   110f0:	mov	r7, #0
   110f4:	mov	r0, #0
   110f8:	movw	r6, #637	; 0x27d
   110fc:	str	r6, [sp, #8]
   11100:	str	r0, [sp, #4]
   11104:	str	r7, [sp]
   11108:	mov	r0, r4
   1110c:	bl	fa04 <test_json>
   11110:	orr	r5, r5, r0
   11114:	ldr	r1, [pc, #1844]	; 11850 <main+0xd5c>
   11118:	ldr	r2, [pc, #1740]	; 117ec <main+0xcf8>
   1111c:	mov	r3, #0
   11120:	mov	r0, #0
   11124:	mov	r6, #0
   11128:	movw	ip, #641	; 0x281
   1112c:	str	ip, [sp, #8]
   11130:	str	r6, [sp, #4]
   11134:	str	r0, [sp]
   11138:	mov	r0, r4
   1113c:	bl	fa04 <test_json>
   11140:	orr	r5, r5, r0
   11144:	ldr	r1, [pc, #1788]	; 11848 <main+0xd54>
   11148:	ldr	r2, [pc, #1776]	; 11840 <main+0xd4c>
   1114c:	mov	r3, #0
   11150:	mov	r6, #0
   11154:	mov	ip, #0
   11158:	movw	r0, #645	; 0x285
   1115c:	str	r0, [sp, #8]
   11160:	str	ip, [sp, #4]
   11164:	str	r6, [sp]
   11168:	mov	r0, r4
   1116c:	bl	fa04 <test_json>
   11170:	orr	r5, r5, r0
   11174:	ldr	r1, [pc, #1544]	; 11784 <main+0xc90>
   11178:	ldr	r2, [pc, #1728]	; 11840 <main+0xd4c>
   1117c:	mov	r3, #0
   11180:	mov	r7, #0
   11184:	mov	r0, #0
   11188:	mov	r6, #648	; 0x288
   1118c:	str	r6, [sp, #8]
   11190:	str	r0, [sp, #4]
   11194:	str	r7, [sp]
   11198:	mov	r0, r4
   1119c:	bl	fa04 <test_json>
   111a0:	orr	r5, r5, r0
   111a4:	ldr	r1, [pc, #1528]	; 117a4 <main+0xcb0>
   111a8:	ldr	r2, [pc, #1612]	; 117fc <main+0xd08>
   111ac:	mov	r3, #0
   111b0:	mov	r0, #0
   111b4:	mov	r6, #0
   111b8:	mov	ip, #652	; 0x28c
   111bc:	str	ip, [sp, #8]
   111c0:	str	r6, [sp, #4]
   111c4:	str	r0, [sp]
   111c8:	mov	r0, r4
   111cc:	bl	fa04 <test_json>
   111d0:	orr	r6, r5, r0
   111d4:	ldr	r1, [pc, #1496]	; 117b4 <main+0xcc0>
   111d8:	ldr	r2, [pc, #1448]	; 11788 <main+0xc94>
   111dc:	mov	r3, #0
   111e0:	mov	ip, #0
   111e4:	mov	r7, #0
   111e8:	movw	r0, #655	; 0x28f
   111ec:	str	r0, [sp, #8]
   111f0:	str	r7, [sp, #4]
   111f4:	str	ip, [sp]
   111f8:	mov	r0, r4
   111fc:	bl	fa04 <test_json>
   11200:	orr	r5, r6, r0
   11204:	ldr	r1, [pc, #1684]	; 118a0 <main+0xdac>
   11208:	ldr	r2, [pc, #1644]	; 1187c <main+0xd88>
   1120c:	mov	r3, #0
   11210:	mov	ip, #0
   11214:	mov	r0, #0
   11218:	movw	r6, #658	; 0x292
   1121c:	str	r6, [sp, #8]
   11220:	str	r0, [sp, #4]
   11224:	str	ip, [sp]
   11228:	mov	r0, r4
   1122c:	bl	fa04 <test_json>
   11230:	orr	r6, r5, r0
   11234:	ldr	r1, [pc, #1588]	; 11870 <main+0xd7c>
   11238:	ldr	r2, [pc, #1556]	; 11854 <main+0xd60>
   1123c:	mov	r3, #0
   11240:	mov	r7, #0
   11244:	mov	ip, #0
   11248:	movw	r0, #661	; 0x295
   1124c:	str	r0, [sp, #8]
   11250:	str	ip, [sp, #4]
   11254:	str	r7, [sp]
   11258:	mov	r0, r4
   1125c:	bl	fa04 <test_json>
   11260:	orr	r5, r6, r0
   11264:	ldr	r1, [pc, #1536]	; 1186c <main+0xd78>
   11268:	ldr	r2, [pc, #1588]	; 118a4 <main+0xdb0>
   1126c:	mov	r3, #0
   11270:	mov	r7, #0
   11274:	mov	r6, #0
   11278:	mov	r0, #664	; 0x298
   1127c:	str	r0, [sp, #8]
   11280:	str	r6, [sp, #4]
   11284:	str	r7, [sp]
   11288:	mov	r0, r4
   1128c:	bl	fa04 <test_json>
   11290:	orr	r5, r5, r0
   11294:	ldr	r1, [pc, #1408]	; 1181c <main+0xd28>
   11298:	ldr	r2, [pc, #1344]	; 117e0 <main+0xcec>
   1129c:	mov	r3, #0
   112a0:	mov	ip, #0
   112a4:	mov	r6, #0
   112a8:	movw	r0, #667	; 0x29b
   112ac:	str	r0, [sp, #8]
   112b0:	str	r6, [sp, #4]
   112b4:	str	ip, [sp]
   112b8:	mov	r0, r4
   112bc:	bl	fa04 <test_json>
   112c0:	orr	r5, r5, r0
   112c4:	ldr	r1, [pc, #1288]	; 117d4 <main+0xce0>
   112c8:	ldr	r2, [pc, #1460]	; 11884 <main+0xd90>
   112cc:	mov	r3, #0
   112d0:	mov	r7, #0
   112d4:	mov	r6, #0
   112d8:	movw	r0, #670	; 0x29e
   112dc:	str	r0, [sp, #8]
   112e0:	str	r6, [sp, #4]
   112e4:	str	r7, [sp]
   112e8:	mov	r0, r4
   112ec:	bl	fa04 <test_json>
   112f0:	orr	r5, r5, r0
   112f4:	ldr	r1, [pc, #1244]	; 117d8 <main+0xce4>
   112f8:	ldr	r2, [pc, #1276]	; 117fc <main+0xd08>
   112fc:	mov	r3, #0
   11300:	mov	r6, #0
   11304:	mov	r0, #0
   11308:	movw	ip, #673	; 0x2a1
   1130c:	str	ip, [sp, #8]
   11310:	str	r0, [sp, #4]
   11314:	str	r6, [sp]
   11318:	mov	r0, r4
   1131c:	bl	fa04 <test_json>
   11320:	orr	r5, r5, r0
   11324:	ldr	r1, [pc, #1220]	; 117f0 <main+0xcfc>
   11328:	ldr	r2, [pc, #1228]	; 117fc <main+0xd08>
   1132c:	mov	r3, #0
   11330:	mov	r7, #0
   11334:	mov	r0, #0
   11338:	mov	ip, #676	; 0x2a4
   1133c:	str	ip, [sp, #8]
   11340:	str	r0, [sp, #4]
   11344:	str	r7, [sp]
   11348:	mov	r0, r4
   1134c:	bl	fa04 <test_json>
   11350:	orr	r5, r5, r0
   11354:	ldr	r1, [pc, #1160]	; 117e4 <main+0xcf0>
   11358:	ldr	r2, [pc, #1104]	; 117b0 <main+0xcbc>
   1135c:	mov	r3, #0
   11360:	mov	r0, #0
   11364:	mov	r6, #0
   11368:	movw	r7, #679	; 0x2a7
   1136c:	str	r7, [sp, #8]
   11370:	str	r6, [sp, #4]
   11374:	str	r0, [sp]
   11378:	mov	r0, r4
   1137c:	bl	fa04 <test_json>
   11380:	orr	r5, r5, r0
   11384:	ldr	r1, [pc, #1112]	; 117e4 <main+0xcf0>
   11388:	ldr	r2, [pc, #1056]	; 117b0 <main+0xcbc>
   1138c:	mov	r3, #0
   11390:	mov	ip, #0
   11394:	mov	r0, #0
   11398:	movw	r7, #682	; 0x2aa
   1139c:	str	r7, [sp, #8]
   113a0:	str	r0, [sp, #4]
   113a4:	str	ip, [sp]
   113a8:	mov	r0, r4
   113ac:	bl	fa04 <test_json>
   113b0:	orr	r5, r5, r0
   113b4:	ldr	r1, [pc, #1068]	; 117e8 <main+0xcf4>
   113b8:	ldr	r2, [pc, #1224]	; 11888 <main+0xd94>
   113bc:	mov	r3, #0
   113c0:	mov	r0, #0
   113c4:	mov	ip, #0
   113c8:	movw	r6, #685	; 0x2ad
   113cc:	str	r6, [sp, #8]
   113d0:	str	ip, [sp, #4]
   113d4:	str	r0, [sp]
   113d8:	mov	r0, r4
   113dc:	bl	fa04 <test_json>
   113e0:	orr	r5, r5, r0
   113e4:	ldr	r1, [pc, #1236]	; 118c0 <main+0xdcc>
   113e8:	ldr	r2, [pc, #1084]	; 1182c <main+0xd38>
   113ec:	mov	r3, #0
   113f0:	mov	r0, #0
   113f4:	mov	r7, #0
   113f8:	movw	r6, #689	; 0x2b1
   113fc:	str	r6, [sp, #8]
   11400:	str	r7, [sp, #4]
   11404:	str	r0, [sp]
   11408:	mov	r0, r4
   1140c:	bl	fa04 <test_json>
   11410:	orr	r5, r5, r0
   11414:	ldr	r1, [pc, #1084]	; 11858 <main+0xd64>
   11418:	ldr	r2, [pc, #972]	; 117ec <main+0xcf8>
   1141c:	mov	r3, #0
   11420:	mov	r6, #0
   11424:	mov	ip, #0
   11428:	movw	r0, #693	; 0x2b5
   1142c:	str	r0, [sp, #8]
   11430:	str	ip, [sp, #4]
   11434:	str	r6, [sp]
   11438:	mov	r0, r4
   1143c:	bl	fa04 <test_json>
   11440:	orr	r5, r5, r0
   11444:	ldr	r1, [pc, #1052]	; 11868 <main+0xd74>
   11448:	ldr	r2, [pc, #1008]	; 11840 <main+0xd4c>
   1144c:	mov	r3, #0
   11450:	mov	r7, #0
   11454:	mov	r6, #0
   11458:	movw	r0, #697	; 0x2b9
   1145c:	str	r0, [sp, #8]
   11460:	str	r6, [sp, #4]
   11464:	str	r7, [sp]
   11468:	mov	r0, r4
   1146c:	bl	fa04 <test_json>
   11470:	orr	r6, r5, r0
   11474:	ldr	r1, [pc, #1044]	; 11890 <main+0xd9c>
   11478:	ldr	r2, [pc, #960]	; 11840 <main+0xd4c>
   1147c:	mov	r3, #0
   11480:	mov	r7, #0
   11484:	mov	ip, #0
   11488:	mov	r0, #700	; 0x2bc
   1148c:	str	r0, [sp, #8]
   11490:	str	ip, [sp, #4]
   11494:	str	r7, [sp]
   11498:	mov	r0, r4
   1149c:	bl	fa04 <test_json>
   114a0:	orr	r5, r6, r0
   114a4:	ldr	r1, [pc, #872]	; 11814 <main+0xd20>
   114a8:	ldr	r2, [pc, #760]	; 117a8 <main+0xcb4>
   114ac:	mov	r3, #0
   114b0:	mov	r0, #0
   114b4:	mov	r6, #0
   114b8:	movw	r7, #715	; 0x2cb
   114bc:	str	r7, [sp, #8]
   114c0:	str	r6, [sp, #4]
   114c4:	str	r0, [sp]
   114c8:	mov	r0, r4
   114cc:	bl	fa04 <test_json>
   114d0:	orr	r5, r5, r0
   114d4:	ldr	r1, [pc, #984]	; 118b4 <main+0xdc0>
   114d8:	ldr	r2, [pc, #728]	; 117b8 <main+0xcc4>
   114dc:	mov	r3, #0
   114e0:	mov	r7, #0
   114e4:	mov	r6, #0
   114e8:	movw	r0, #730	; 0x2da
   114ec:	str	r0, [sp, #8]
   114f0:	str	r6, [sp, #4]
   114f4:	str	r7, [sp]
   114f8:	mov	r0, r4
   114fc:	bl	fa04 <test_json>
   11500:	orr	r6, r5, r0
   11504:	ldr	r1, [pc, #940]	; 118b8 <main+0xdc4>
   11508:	ldr	r2, [pc, #684]	; 117bc <main+0xcc8>
   1150c:	mov	r3, #0
   11510:	mov	ip, #0
   11514:	mov	r0, #0
   11518:	movw	r7, #733	; 0x2dd
   1151c:	str	r7, [sp, #8]
   11520:	str	r0, [sp, #4]
   11524:	str	ip, [sp]
   11528:	mov	r0, r4
   1152c:	bl	fa04 <test_json>
   11530:	orr	r5, r6, r0
   11534:	ldr	r1, [pc, #580]	; 11780 <main+0xc8c>
   11538:	ldr	r2, [pc, #736]	; 11820 <main+0xd2c>
   1153c:	mov	r3, #0
   11540:	mov	r7, #0
   11544:	mov	r0, #0
   11548:	movw	ip, #737	; 0x2e1
   1154c:	str	ip, [sp, #8]
   11550:	str	r0, [sp, #4]
   11554:	str	r7, [sp]
   11558:	mov	r0, r4
   1155c:	bl	fa04 <test_json>
   11560:	orr	r5, r5, r0
   11564:	ldr	r1, [pc, #752]	; 1185c <main+0xd68>
   11568:	ldr	r2, [pc, #688]	; 11820 <main+0xd2c>
   1156c:	mov	r3, #0
   11570:	mov	r0, #0
   11574:	mov	r6, #0
   11578:	movw	r7, #741	; 0x2e5
   1157c:	str	r7, [sp, #8]
   11580:	str	r6, [sp, #4]
   11584:	str	r0, [sp]
   11588:	mov	r0, r4
   1158c:	bl	fa04 <test_json>
   11590:	orr	r5, r5, r0
   11594:	ldr	r1, [pc, #708]	; 11860 <main+0xd6c>
   11598:	ldr	r2, [pc, #552]	; 117c8 <main+0xcd4>
   1159c:	mov	r3, #0
   115a0:	mov	r6, #0
   115a4:	mov	r0, #0
   115a8:	movw	ip, #765	; 0x2fd
   115ac:	str	ip, [sp, #8]
   115b0:	str	r0, [sp, #4]
   115b4:	str	r6, [sp]
   115b8:	mov	r0, r4
   115bc:	bl	fa04 <test_json>
   115c0:	orr	r5, r5, r0
   115c4:	ldr	r1, [pc, #480]	; 117ac <main+0xcb8>
   115c8:	ldr	r2, [pc, #496]	; 117c0 <main+0xccc>
   115cc:	mov	r3, #0
   115d0:	mov	r6, #0
   115d4:	mov	r7, #0
   115d8:	movw	r0, #769	; 0x301
   115dc:	str	r0, [sp, #8]
   115e0:	str	r7, [sp, #4]
   115e4:	str	r6, [sp]
   115e8:	mov	r0, r4
   115ec:	bl	fa04 <test_json>
   115f0:	orr	r5, r5, r0
   115f4:	ldr	r1, [pc, #384]	; 1177c <main+0xc88>
   115f8:	ldr	r2, [pc, #504]	; 117f8 <main+0xd04>
   115fc:	mov	r3, #0
   11600:	mov	r6, #0
   11604:	mov	r7, #0
   11608:	movw	r0, #773	; 0x305
   1160c:	str	r0, [sp, #8]
   11610:	str	r7, [sp, #4]
   11614:	str	r6, [sp]
   11618:	mov	r0, r4
   1161c:	bl	fa04 <test_json>
   11620:	orr	r5, r5, r0
   11624:	ldr	r1, [pc, #416]	; 117cc <main+0xcd8>
   11628:	ldr	r2, [pc, #528]	; 11840 <main+0xd4c>
   1162c:	mov	r3, #0
   11630:	mov	r0, #0
   11634:	mov	r7, #0
   11638:	movw	r6, #779	; 0x30b
   1163c:	str	r6, [sp, #8]
   11640:	str	r7, [sp, #4]
   11644:	str	r0, [sp]
   11648:	mov	r0, r4
   1164c:	bl	fa04 <test_json>
   11650:	orr	r5, r5, r0
   11654:	ldr	r1, [pc, #308]	; 11790 <main+0xc9c>
   11658:	ldr	r2, [pc, #612]	; 118c4 <main+0xdd0>
   1165c:	mov	r3, #0
   11660:	mov	r0, #0
   11664:	mov	r7, #0
   11668:	movw	r6, #783	; 0x30f
   1166c:	str	r6, [sp, #8]
   11670:	str	r7, [sp, #4]
   11674:	str	r0, [sp]
   11678:	mov	r0, r4
   1167c:	bl	fa04 <test_json>
   11680:	orr	r6, r5, r0
   11684:	ldr	r1, [pc, #376]	; 11804 <main+0xd10>
   11688:	ldr	r2, [pc, #384]	; 11810 <main+0xd1c>
   1168c:	mov	r3, #0
   11690:	mov	r0, #0
   11694:	mov	r7, #0
   11698:	mov	ip, #788	; 0x314
   1169c:	str	ip, [sp, #8]
   116a0:	str	r7, [sp, #4]
   116a4:	str	r0, [sp]
   116a8:	mov	r0, r4
   116ac:	bl	fa04 <test_json>
   116b0:	orr	r6, r6, r0
   116b4:	ldr	r1, [pc, #512]	; 118bc <main+0xdc8>
   116b8:	ldr	r2, [pc, #468]	; 11894 <main+0xda0>
   116bc:	mov	r3, #0
   116c0:	mov	r7, #0
   116c4:	mov	r0, #0
   116c8:	movw	ip, #793	; 0x319
   116cc:	str	ip, [sp, #8]
   116d0:	str	r0, [sp, #4]
   116d4:	str	r7, [sp]
   116d8:	mov	r0, r4
   116dc:	bl	fa04 <test_json>
   116e0:	orr	r5, r6, r0
   116e4:	ldr	r1, [pc, #312]	; 11824 <main+0xd30>
   116e8:	ldr	r2, [pc, #164]	; 11794 <main+0xca0>
   116ec:	mov	r3, #0
   116f0:	mov	r7, #0
   116f4:	mov	r6, #0
   116f8:	movw	r0, #798	; 0x31e
   116fc:	str	r0, [sp, #8]
   11700:	str	r6, [sp, #4]
   11704:	str	r7, [sp]
   11708:	mov	r0, r4
   1170c:	bl	fa04 <test_json>
   11710:	orr	r6, r5, r0
   11714:	ldr	r1, [pc, #432]	; 118cc <main+0xdd8>
   11718:	ldr	r2, [pc, #376]	; 11898 <main+0xda4>
   1171c:	mov	r3, #0
   11720:	mov	r0, #0
   11724:	mov	r7, #0
   11728:	movw	ip, #803	; 0x323
   1172c:	str	ip, [sp, #8]
   11730:	str	r7, [sp, #4]
   11734:	str	r0, [sp]
   11738:	mov	r0, r4
   1173c:	bl	fa04 <test_json>
   11740:	orr	r0, r6, r0
   11744:	cmp	r0, #0
   11748:	bne	11754 <main+0xc60>
   1174c:	mov	r0, #0
   11750:	b	11758 <main+0xc64>
   11754:	mvn	r0, #0
   11758:	ldr	r4, [sp, #24]
   1175c:	ldr	r5, [sp, #28]
   11760:	ldr	r6, [sp, #32]
   11764:	ldr	r7, [sp, #36]	; 0x24
   11768:	ldr	lr, [sp, #16]
   1176c:	add	sp, sp, #40	; 0x28
   11770:	bx	lr
   11774:	.word	0x00001a6f
   11778:	.word	0x00000dc0
   1177c:	.word	0x0000224d
   11780:	.word	0x00002bb5
   11784:	.word	0x000030ea
   11788:	.word	0x00001cd2
   1178c:	.word	0x00002d85
   11790:	.word	0x00001b2f
   11794:	.word	0x00002ca2
   11798:	.word	0x00002daf
   1179c:	.word	0x00001051
   117a0:	.word	0x0000118b
   117a4:	.word	0x0000033b
   117a8:	.word	0x00001c74
   117ac:	.word	0x00001996
   117b0:	.word	0x00003484
   117b4:	.word	0x0000343e
   117b8:	.word	0x00002b85
   117bc:	.word	0x000038bf
   117c0:	.word	0x000014ba
   117c4:	.word	0x000033ba
   117c8:	.word	0x000032d1
   117cc:	.word	0x000002c3
   117d0:	.word	0x00001250
   117d4:	.word	0x0000133c
   117d8:	.word	0x00000439
   117dc:	.word	0x00003463
   117e0:	.word	0x000028eb
   117e4:	.word	0x00003508
   117e8:	.word	0x0000376f
   117ec:	.word	0x000024cf
   117f0:	.word	0x00003a0c
   117f4:	.word	0x00000c49
   117f8:	.word	0x00001c00
   117fc:	.word	0x0000222c
   11800:	.word	0x000015c8
   11804:	.word	0x000027ad
   11808:	.word	0x00003200
   1180c:	.word	0x0000309c
   11810:	.word	0x00002ff8
   11814:	.word	0x00002198
   11818:	.word	0x000038e3
   1181c:	.word	0x00000803
   11820:	.word	0x000034a3
   11824:	.word	0x00000b10
   11828:	.word	0x00002dfd
   1182c:	.word	0x00000214
   11830:	.word	0x00002205
   11834:	.word	0x00002fd1
   11838:	.word	0x00003ad4
   1183c:	.word	0x000008dd
   11840:	.word	0x000032f3
   11844:	.word	0x000006fb
   11848:	.word	0x00000a5d
   1184c:	.word	0x000019ec
   11850:	.word	0x00001e67
   11854:	.word	0x00002b48
   11858:	.word	0x0000112c
   1185c:	.word	0x00000ded
   11860:	.word	0x0000174e
   11864:	.word	0x00000aca
   11868:	.word	0x00003a75
   1186c:	.word	0x00001267
   11870:	.word	0x000034ea
   11874:	.word	0x00002909
   11878:	.word	0x000011e0
   1187c:	.word	0x00003076
   11880:	.word	0x000039ea
   11884:	.word	0x000038a2
   11888:	.word	0x000010dd
   1188c:	.word	0x000010b2
   11890:	.word	0x00001491
   11894:	.word	0x00002c0b
   11898:	.word	0x00002021
   1189c:	.word	0x000015f2
   118a0:	.word	0x00000af3
   118a4:	.word	0x0000052e
   118a8:	.word	0x00000627
   118ac:	.word	0x00000661
   118b0:	.word	0x000001c1
   118b4:	.word	0x00002efe
   118b8:	.word	0x000023c0
   118bc:	.word	0x0000169a
   118c0:	.word	0x000029c4
   118c4:	.word	0x000023da
   118c8:	.word	0x000030b9
   118cc:	.word	0x00003226
