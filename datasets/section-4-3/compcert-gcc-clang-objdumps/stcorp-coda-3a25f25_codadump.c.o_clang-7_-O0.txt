
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <handle_coda_error>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	movw	r0, #0
      10:	movt	r0, #0
      14:	ldr	r0, [r0]
      18:	str	r0, [fp, #-4]
      1c:	bl	0 <coda_get_errno>
      20:	ldr	r0, [r0]
      24:	bl	0 <coda_errno_to_string>
      28:	ldr	lr, [fp, #-4]
      2c:	str	r0, [sp, #8]
      30:	mov	r0, lr
      34:	movw	r1, #0
      38:	movt	r1, #0
      3c:	ldr	r2, [sp, #8]
      40:	bl	0 <fprintf>
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	ldr	r1, [r1]
      50:	str	r0, [sp, #4]
      54:	mov	r0, r1
      58:	bl	0 <fflush>
      5c:	movw	r1, #1
      60:	str	r0, [sp]
      64:	mov	r0, r1
      68:	bl	0 <exit>

0000006c <main>:
      6c:	push	{fp, lr}
      70:	mov	fp, sp
      74:	sub	sp, sp, #40	; 0x28
      78:	movw	r2, #0
      7c:	str	r2, [fp, #-4]
      80:	str	r0, [fp, #-8]
      84:	str	r1, [fp, #-12]
      88:	ldr	r0, [fp, #-8]
      8c:	cmp	r0, #1
      90:	beq	cc <main+0x60>
      94:	ldr	r0, [fp, #-12]
      98:	ldr	r0, [r0, #4]
      9c:	movw	r1, #0
      a0:	movt	r1, #0
      a4:	bl	0 <strcmp>
      a8:	cmp	r0, #0
      ac:	beq	cc <main+0x60>
      b0:	ldr	r0, [fp, #-12]
      b4:	ldr	r0, [r0, #4]
      b8:	movw	r1, #0
      bc:	movt	r1, #0
      c0:	bl	0 <strcmp>
      c4:	cmp	r0, #0
      c8:	bne	d8 <main+0x6c>
      cc:	bl	20bc <print_help>
      d0:	movw	r0, #0
      d4:	bl	0 <exit>
      d8:	ldr	r0, [fp, #-12]
      dc:	ldr	r0, [r0, #4]
      e0:	movw	r1, #0
      e4:	movt	r1, #0
      e8:	bl	0 <strcmp>
      ec:	cmp	r0, #0
      f0:	beq	110 <main+0xa4>
      f4:	ldr	r0, [fp, #-12]
      f8:	ldr	r0, [r0, #4]
      fc:	movw	r1, #0
     100:	movt	r1, #0
     104:	bl	0 <strcmp>
     108:	cmp	r0, #0
     10c:	bne	11c <main+0xb0>
     110:	bl	2a04 <print_version>
     114:	movw	r0, #0
     118:	bl	0 <exit>
     11c:	movw	r0, #1
     120:	str	r0, [fp, #-16]
     124:	ldr	r0, [fp, #-16]
     128:	add	r0, r0, #1
     12c:	ldr	r1, [fp, #-8]
     130:	cmp	r0, r1
     134:	bge	188 <main+0x11c>
     138:	ldr	r0, [fp, #-12]
     13c:	ldr	r1, [fp, #-16]
     140:	add	r0, r0, r1, lsl #2
     144:	ldr	r0, [r0]
     148:	movw	r1, #0
     14c:	movt	r1, #0
     150:	bl	0 <strcmp>
     154:	cmp	r0, #0
     158:	bne	188 <main+0x11c>
     15c:	ldr	r0, [fp, #-12]
     160:	ldr	r1, [fp, #-16]
     164:	add	r1, r1, #1
     168:	add	r0, r0, r1, lsl #2
     16c:	ldr	r0, [r0]
     170:	bl	0 <coda_set_definition_path>
     174:	ldr	r1, [fp, #-16]
     178:	add	r1, r1, #2
     17c:	str	r1, [fp, #-16]
     180:	str	r0, [sp, #16]
     184:	b	1fc <main+0x190>
     188:	movw	r0, #0
     18c:	movt	r0, #0
     190:	str	r0, [sp, #20]
     194:	ldr	r0, [fp, #-12]
     198:	ldr	r0, [r0]
     19c:	ldr	r2, [sp, #20]
     1a0:	movw	r1, #0
     1a4:	bl	0 <coda_set_definition_path_conditional>
     1a8:	cmp	r0, #0
     1ac:	beq	1f8 <main+0x18c>
     1b0:	movw	r0, #0
     1b4:	movt	r0, #0
     1b8:	ldr	r0, [r0]
     1bc:	str	r0, [sp, #12]
     1c0:	bl	0 <coda_get_errno>
     1c4:	ldr	r0, [r0]
     1c8:	bl	0 <coda_errno_to_string>
     1cc:	ldr	lr, [sp, #12]
     1d0:	str	r0, [sp, #8]
     1d4:	mov	r0, lr
     1d8:	movw	r1, #0
     1dc:	movt	r1, #0
     1e0:	ldr	r2, [sp, #8]
     1e4:	bl	0 <fprintf>
     1e8:	movw	r1, #1
     1ec:	str	r0, [sp, #4]
     1f0:	mov	r0, r1
     1f4:	bl	0 <exit>
     1f8:	b	1fc <main+0x190>
     1fc:	ldr	r0, [fp, #-12]
     200:	ldr	r1, [fp, #-16]
     204:	add	r0, r0, r1, lsl #2
     208:	ldr	r0, [r0]
     20c:	movw	r1, #0
     210:	movt	r1, #0
     214:	bl	0 <strcmp>
     218:	cmp	r0, #0
     21c:	bne	258 <main+0x1ec>
     220:	movw	r0, #0
     224:	movt	r0, #0
     228:	mov	r1, #0
     22c:	str	r1, [r0]
     230:	ldr	r0, [fp, #-16]
     234:	add	r0, r0, #1
     238:	str	r0, [fp, #-16]
     23c:	ldr	r0, [fp, #-8]
     240:	ldr	r1, [fp, #-16]
     244:	sub	r0, r0, r1
     248:	ldr	r2, [fp, #-12]
     24c:	add	r1, r2, r1, lsl #2
     250:	bl	40c <handle_list_run_mode>
     254:	b	400 <main+0x394>
     258:	ldr	r0, [fp, #-12]
     25c:	ldr	r1, [fp, #-16]
     260:	add	r0, r0, r1, lsl #2
     264:	ldr	r0, [r0]
     268:	movw	r1, #0
     26c:	movt	r1, #0
     270:	bl	0 <strcmp>
     274:	cmp	r0, #0
     278:	bne	2b4 <main+0x248>
     27c:	movw	r0, #0
     280:	movt	r0, #0
     284:	mov	r1, #1
     288:	str	r1, [r0]
     28c:	ldr	r0, [fp, #-16]
     290:	add	r0, r0, #1
     294:	str	r0, [fp, #-16]
     298:	ldr	r0, [fp, #-8]
     29c:	ldr	r1, [fp, #-16]
     2a0:	sub	r0, r0, r1
     2a4:	ldr	r2, [fp, #-12]
     2a8:	add	r1, r2, r1, lsl #2
     2ac:	bl	97c <handle_ascii_run_mode>
     2b0:	b	3fc <main+0x390>
     2b4:	ldr	r0, [fp, #-12]
     2b8:	ldr	r1, [fp, #-16]
     2bc:	add	r0, r0, r1, lsl #2
     2c0:	ldr	r0, [r0]
     2c4:	movw	r1, #0
     2c8:	movt	r1, #0
     2cc:	bl	0 <strcmp>
     2d0:	cmp	r0, #0
     2d4:	bne	310 <main+0x2a4>
     2d8:	movw	r0, #0
     2dc:	movt	r0, #0
     2e0:	mov	r1, #3
     2e4:	str	r1, [r0]
     2e8:	ldr	r0, [fp, #-16]
     2ec:	add	r0, r0, #1
     2f0:	str	r0, [fp, #-16]
     2f4:	ldr	r0, [fp, #-8]
     2f8:	ldr	r1, [fp, #-16]
     2fc:	sub	r0, r0, r1
     300:	ldr	r2, [fp, #-12]
     304:	add	r1, r2, r1, lsl #2
     308:	bl	1110 <handle_json_run_mode>
     30c:	b	3f8 <main+0x38c>
     310:	ldr	r0, [fp, #-12]
     314:	ldr	r1, [fp, #-16]
     318:	add	r0, r0, r1, lsl #2
     31c:	ldr	r0, [r0]
     320:	movw	r1, #0
     324:	movt	r1, #0
     328:	bl	0 <strcmp>
     32c:	cmp	r0, #0
     330:	bne	36c <main+0x300>
     334:	movw	r0, #0
     338:	movt	r0, #0
     33c:	mov	r1, #4
     340:	str	r1, [r0]
     344:	ldr	r0, [fp, #-16]
     348:	add	r0, r0, #1
     34c:	str	r0, [fp, #-16]
     350:	ldr	r0, [fp, #-8]
     354:	ldr	r1, [fp, #-16]
     358:	sub	r0, r0, r1
     35c:	ldr	r2, [fp, #-12]
     360:	add	r1, r2, r1, lsl #2
     364:	bl	15fc <handle_yaml_run_mode>
     368:	b	3f4 <main+0x388>
     36c:	ldr	r0, [fp, #-12]
     370:	ldr	r1, [fp, #-16]
     374:	add	r0, r0, r1, lsl #2
     378:	ldr	r0, [r0]
     37c:	movw	r1, #0
     380:	movt	r1, #0
     384:	bl	0 <strcmp>
     388:	cmp	r0, #0
     38c:	bne	3c8 <main+0x35c>
     390:	movw	r0, #0
     394:	movt	r0, #0
     398:	mov	r1, #5
     39c:	str	r1, [r0]
     3a0:	ldr	r0, [fp, #-16]
     3a4:	add	r0, r0, #1
     3a8:	str	r0, [fp, #-16]
     3ac:	ldr	r0, [fp, #-8]
     3b0:	ldr	r1, [fp, #-16]
     3b4:	sub	r0, r0, r1
     3b8:	ldr	r2, [fp, #-12]
     3bc:	add	r1, r2, r1, lsl #2
     3c0:	bl	1ae8 <handle_debug_run_mode>
     3c4:	b	3f0 <main+0x384>
     3c8:	movw	r0, #0
     3cc:	movt	r0, #0
     3d0:	ldr	r0, [r0]
     3d4:	movw	r1, #0
     3d8:	movt	r1, #0
     3dc:	bl	0 <fprintf>
     3e0:	str	r0, [sp]
     3e4:	bl	20bc <print_help>
     3e8:	movw	r0, #1
     3ec:	bl	0 <exit>
     3f0:	b	3f4 <main+0x388>
     3f4:	b	3f8 <main+0x38c>
     3f8:	b	3fc <main+0x390>
     3fc:	b	400 <main+0x394>
     400:	movw	r0, #0
     404:	mov	sp, fp
     408:	pop	{fp, pc}

0000040c <handle_list_run_mode>:
     40c:	push	{fp, lr}
     410:	mov	fp, sp
     414:	sub	sp, sp, #56	; 0x38
     418:	str	r0, [fp, #-4]
     41c:	str	r1, [fp, #-8]
     420:	movw	r0, #0
     424:	movt	r0, #0
     428:	movw	r1, #0
     42c:	str	r1, [r0]
     430:	str	r1, [r0, #664]	; 0x298
     434:	movw	r0, #0
     438:	movt	r0, #0
     43c:	movw	r2, #1
     440:	str	r2, [r0]
     444:	movw	r0, #0
     448:	movt	r0, #0
     44c:	str	r1, [r0]
     450:	str	r2, [fp, #-12]
     454:	str	r2, [fp, #-16]
     458:	movw	r0, #0
     45c:	movt	r0, #0
     460:	str	r1, [r0]
     464:	movw	r0, #0
     468:	movt	r0, #0
     46c:	str	r1, [r0]
     470:	movw	r0, #0
     474:	movt	r0, #0
     478:	str	r1, [r0]
     47c:	movw	r0, #0
     480:	movt	r0, #0
     484:	str	r1, [r0]
     488:	str	r1, [fp, #-20]	; 0xffffffec
     48c:	ldr	r0, [fp, #-20]	; 0xffffffec
     490:	ldr	r1, [fp, #-4]
     494:	cmp	r0, r1
     498:	bge	844 <handle_list_run_mode+0x438>
     49c:	ldr	r0, [fp, #-8]
     4a0:	ldr	r1, [fp, #-20]	; 0xffffffec
     4a4:	add	r0, r0, r1, lsl #2
     4a8:	ldr	r0, [r0]
     4ac:	movw	r1, #0
     4b0:	movt	r1, #0
     4b4:	bl	0 <strcmp>
     4b8:	cmp	r0, #0
     4bc:	beq	4e4 <handle_list_run_mode+0xd8>
     4c0:	ldr	r0, [fp, #-8]
     4c4:	ldr	r1, [fp, #-20]	; 0xffffffec
     4c8:	add	r0, r0, r1, lsl #2
     4cc:	ldr	r0, [r0]
     4d0:	movw	r1, #0
     4d4:	movt	r1, #0
     4d8:	bl	0 <strcmp>
     4dc:	cmp	r0, #0
     4e0:	bne	4f8 <handle_list_run_mode+0xec>
     4e4:	movw	r0, #0
     4e8:	movt	r0, #0
     4ec:	movw	r1, #1
     4f0:	str	r1, [r0]
     4f4:	b	830 <handle_list_run_mode+0x424>
     4f8:	ldr	r0, [fp, #-8]
     4fc:	ldr	r1, [fp, #-20]	; 0xffffffec
     500:	add	r0, r0, r1, lsl #2
     504:	ldr	r0, [r0]
     508:	movw	r1, #0
     50c:	movt	r1, #0
     510:	bl	0 <strcmp>
     514:	cmp	r0, #0
     518:	beq	540 <handle_list_run_mode+0x134>
     51c:	ldr	r0, [fp, #-8]
     520:	ldr	r1, [fp, #-20]	; 0xffffffec
     524:	add	r0, r0, r1, lsl #2
     528:	ldr	r0, [r0]
     52c:	movw	r1, #0
     530:	movt	r1, #0
     534:	bl	0 <strcmp>
     538:	cmp	r0, #0
     53c:	bne	54c <handle_list_run_mode+0x140>
     540:	movw	r0, #0
     544:	str	r0, [fp, #-16]
     548:	b	82c <handle_list_run_mode+0x420>
     54c:	ldr	r0, [fp, #-8]
     550:	ldr	r1, [fp, #-20]	; 0xffffffec
     554:	add	r0, r0, r1, lsl #2
     558:	ldr	r0, [r0]
     55c:	movw	r1, #0
     560:	movt	r1, #0
     564:	bl	0 <strcmp>
     568:	cmp	r0, #0
     56c:	beq	594 <handle_list_run_mode+0x188>
     570:	ldr	r0, [fp, #-8]
     574:	ldr	r1, [fp, #-20]	; 0xffffffec
     578:	add	r0, r0, r1, lsl #2
     57c:	ldr	r0, [r0]
     580:	movw	r1, #0
     584:	movt	r1, #0
     588:	bl	0 <strcmp>
     58c:	cmp	r0, #0
     590:	bne	634 <handle_list_run_mode+0x228>
     594:	ldr	r0, [fp, #-20]	; 0xffffffec
     598:	add	r0, r0, #1
     59c:	ldr	r1, [fp, #-4]
     5a0:	cmp	r0, r1
     5a4:	bge	634 <handle_list_run_mode+0x228>
     5a8:	ldr	r0, [fp, #-8]
     5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
     5b0:	add	r1, r1, #1
     5b4:	add	r0, r0, r1, lsl #2
     5b8:	ldr	r0, [r0]
     5bc:	ldrb	r0, [r0]
     5c0:	cmp	r0, #45	; 0x2d
     5c4:	beq	634 <handle_list_run_mode+0x228>
     5c8:	ldr	r0, [fp, #-8]
     5cc:	ldr	r1, [fp, #-20]	; 0xffffffec
     5d0:	add	r1, r1, #1
     5d4:	add	r0, r0, r1, lsl #2
     5d8:	ldr	r0, [r0]
     5dc:	bl	0 <codadump_filter_create>
     5e0:	movw	r1, #0
     5e4:	movt	r1, #0
     5e8:	str	r0, [r1, #664]	; 0x298
     5ec:	ldr	r0, [r1, #664]	; 0x298
     5f0:	movw	r1, #0
     5f4:	cmp	r0, r1
     5f8:	bne	624 <handle_list_run_mode+0x218>
     5fc:	movw	r0, #0
     600:	movt	r0, #0
     604:	ldr	r0, [r0]
     608:	movw	r1, #0
     60c:	movt	r1, #0
     610:	bl	0 <fprintf>
     614:	str	r0, [fp, #-24]	; 0xffffffe8
     618:	bl	20bc <print_help>
     61c:	movw	r0, #1
     620:	bl	0 <exit>
     624:	ldr	r0, [fp, #-20]	; 0xffffffec
     628:	add	r0, r0, #1
     62c:	str	r0, [fp, #-20]	; 0xffffffec
     630:	b	828 <handle_list_run_mode+0x41c>
     634:	ldr	r0, [fp, #-8]
     638:	ldr	r1, [fp, #-20]	; 0xffffffec
     63c:	add	r0, r0, r1, lsl #2
     640:	ldr	r0, [r0]
     644:	movw	r1, #0
     648:	movt	r1, #0
     64c:	bl	0 <strcmp>
     650:	cmp	r0, #0
     654:	beq	67c <handle_list_run_mode+0x270>
     658:	ldr	r0, [fp, #-8]
     65c:	ldr	r1, [fp, #-20]	; 0xffffffec
     660:	add	r0, r0, r1, lsl #2
     664:	ldr	r0, [r0]
     668:	movw	r1, #0
     66c:	movt	r1, #0
     670:	bl	0 <strcmp>
     674:	cmp	r0, #0
     678:	bne	690 <handle_list_run_mode+0x284>
     67c:	movw	r0, #0
     680:	movt	r0, #0
     684:	movw	r1, #1
     688:	str	r1, [r0]
     68c:	b	824 <handle_list_run_mode+0x418>
     690:	ldr	r0, [fp, #-8]
     694:	ldr	r1, [fp, #-20]	; 0xffffffec
     698:	add	r0, r0, r1, lsl #2
     69c:	ldr	r0, [r0]
     6a0:	movw	r1, #0
     6a4:	movt	r1, #0
     6a8:	bl	0 <strcmp>
     6ac:	cmp	r0, #0
     6b0:	beq	6d8 <handle_list_run_mode+0x2cc>
     6b4:	ldr	r0, [fp, #-8]
     6b8:	ldr	r1, [fp, #-20]	; 0xffffffec
     6bc:	add	r0, r0, r1, lsl #2
     6c0:	ldr	r0, [r0]
     6c4:	movw	r1, #0
     6c8:	movt	r1, #0
     6cc:	bl	0 <strcmp>
     6d0:	cmp	r0, #0
     6d4:	bne	6ec <handle_list_run_mode+0x2e0>
     6d8:	movw	r0, #0
     6dc:	movt	r0, #0
     6e0:	movw	r1, #1
     6e4:	str	r1, [r0]
     6e8:	b	820 <handle_list_run_mode+0x414>
     6ec:	ldr	r0, [fp, #-8]
     6f0:	ldr	r1, [fp, #-20]	; 0xffffffec
     6f4:	add	r0, r0, r1, lsl #2
     6f8:	ldr	r0, [r0]
     6fc:	movw	r1, #0
     700:	movt	r1, #0
     704:	bl	0 <strcmp>
     708:	cmp	r0, #0
     70c:	bne	724 <handle_list_run_mode+0x318>
     710:	movw	r0, #0
     714:	movt	r0, #0
     718:	movw	r1, #1
     71c:	str	r1, [r0]
     720:	b	81c <handle_list_run_mode+0x410>
     724:	ldr	r0, [fp, #-8]
     728:	ldr	r1, [fp, #-20]	; 0xffffffec
     72c:	add	r0, r0, r1, lsl #2
     730:	ldr	r0, [r0]
     734:	movw	r1, #0
     738:	movt	r1, #0
     73c:	bl	0 <strcmp>
     740:	cmp	r0, #0
     744:	bne	768 <handle_list_run_mode+0x35c>
     748:	movw	r0, #0
     74c:	movt	r0, #0
     750:	movw	r1, #1
     754:	str	r1, [r0]
     758:	movw	r0, #0
     75c:	movt	r0, #0
     760:	str	r1, [r0]
     764:	b	818 <handle_list_run_mode+0x40c>
     768:	ldr	r0, [fp, #-8]
     76c:	ldr	r1, [fp, #-20]	; 0xffffffec
     770:	add	r0, r0, r1, lsl #2
     774:	ldr	r0, [r0]
     778:	movw	r1, #0
     77c:	movt	r1, #0
     780:	bl	0 <strcmp>
     784:	cmp	r0, #0
     788:	bne	798 <handle_list_run_mode+0x38c>
     78c:	movw	r0, #0
     790:	str	r0, [fp, #-12]
     794:	b	814 <handle_list_run_mode+0x408>
     798:	ldr	r0, [fp, #-20]	; 0xffffffec
     79c:	ldr	r1, [fp, #-4]
     7a0:	sub	r1, r1, #1
     7a4:	cmp	r0, r1
     7a8:	bne	7e8 <handle_list_run_mode+0x3dc>
     7ac:	ldr	r0, [fp, #-8]
     7b0:	ldr	r1, [fp, #-20]	; 0xffffffec
     7b4:	add	r0, r0, r1, lsl #2
     7b8:	ldr	r0, [r0]
     7bc:	ldrb	r0, [r0]
     7c0:	cmp	r0, #45	; 0x2d
     7c4:	beq	7e8 <handle_list_run_mode+0x3dc>
     7c8:	ldr	r0, [fp, #-8]
     7cc:	ldr	r1, [fp, #-20]	; 0xffffffec
     7d0:	add	r0, r0, r1, lsl #2
     7d4:	ldr	r0, [r0]
     7d8:	movw	r1, #0
     7dc:	movt	r1, #0
     7e0:	str	r0, [r1]
     7e4:	b	810 <handle_list_run_mode+0x404>
     7e8:	movw	r0, #0
     7ec:	movt	r0, #0
     7f0:	ldr	r0, [r0]
     7f4:	movw	r1, #0
     7f8:	movt	r1, #0
     7fc:	bl	0 <fprintf>
     800:	str	r0, [sp, #28]
     804:	bl	20bc <print_help>
     808:	movw	r0, #1
     80c:	bl	0 <exit>
     810:	b	814 <handle_list_run_mode+0x408>
     814:	b	818 <handle_list_run_mode+0x40c>
     818:	b	81c <handle_list_run_mode+0x410>
     81c:	b	820 <handle_list_run_mode+0x414>
     820:	b	824 <handle_list_run_mode+0x418>
     824:	b	828 <handle_list_run_mode+0x41c>
     828:	b	82c <handle_list_run_mode+0x420>
     82c:	b	830 <handle_list_run_mode+0x424>
     830:	b	834 <handle_list_run_mode+0x428>
     834:	ldr	r0, [fp, #-20]	; 0xffffffec
     838:	add	r0, r0, #1
     83c:	str	r0, [fp, #-20]	; 0xffffffec
     840:	b	48c <handle_list_run_mode+0x80>
     844:	movw	r0, #0
     848:	movt	r0, #0
     84c:	ldr	r0, [r0]
     850:	movw	r1, #0
     854:	cmp	r0, r1
     858:	beq	874 <handle_list_run_mode+0x468>
     85c:	movw	r0, #0
     860:	movt	r0, #0
     864:	ldr	r0, [r0]
     868:	ldrb	r0, [r0]
     86c:	cmp	r0, #0
     870:	bne	89c <handle_list_run_mode+0x490>
     874:	movw	r0, #0
     878:	movt	r0, #0
     87c:	ldr	r0, [r0]
     880:	movw	r1, #0
     884:	movt	r1, #0
     888:	bl	0 <fprintf>
     88c:	str	r0, [sp, #24]
     890:	bl	20bc <print_help>
     894:	movw	r0, #1
     898:	bl	0 <exit>
     89c:	bl	0 <coda_init>
     8a0:	cmp	r0, #0
     8a4:	beq	8f0 <handle_list_run_mode+0x4e4>
     8a8:	movw	r0, #0
     8ac:	movt	r0, #0
     8b0:	ldr	r0, [r0]
     8b4:	str	r0, [sp, #20]
     8b8:	bl	0 <coda_get_errno>
     8bc:	ldr	r0, [r0]
     8c0:	bl	0 <coda_errno_to_string>
     8c4:	ldr	lr, [sp, #20]
     8c8:	str	r0, [sp, #16]
     8cc:	mov	r0, lr
     8d0:	movw	r1, #0
     8d4:	movt	r1, #0
     8d8:	ldr	r2, [sp, #16]
     8dc:	bl	0 <fprintf>
     8e0:	movw	r1, #1
     8e4:	str	r0, [sp, #12]
     8e8:	mov	r0, r1
     8ec:	bl	0 <exit>
     8f0:	ldr	r0, [fp, #-12]
     8f4:	cmp	r0, #0
     8f8:	movw	r0, #0
     8fc:	movne	r0, #1
     900:	mvn	r1, #0
     904:	eor	r0, r0, r1
     908:	and	r0, r0, #1
     90c:	bl	0 <coda_set_option_bypass_special_types>
     910:	movw	r1, #0
     914:	str	r0, [sp, #8]
     918:	mov	r0, r1
     91c:	bl	0 <coda_set_option_perform_boundary_checks>
     920:	ldr	r1, [fp, #-16]
     924:	str	r0, [sp, #4]
     928:	mov	r0, r1
     92c:	bl	0 <coda_set_option_perform_conversions>
     930:	movw	r1, #0
     934:	movt	r1, #0
     938:	str	r0, [sp]
     93c:	blx	r1
     940:	movw	r0, #0
     944:	movt	r0, #0
     948:	blx	r0
     94c:	movw	r0, #0
     950:	movt	r0, #0
     954:	blx	r0
     958:	movw	r0, #0
     95c:	movt	r0, #0
     960:	blx	r0
     964:	movw	r0, #0
     968:	movt	r0, #0
     96c:	blx	r0
     970:	bl	0 <coda_done>
     974:	mov	sp, fp
     978:	pop	{fp, pc}

0000097c <handle_ascii_run_mode>:
     97c:	push	{fp, lr}
     980:	mov	fp, sp
     984:	sub	sp, sp, #64	; 0x40
     988:	str	r0, [fp, #-4]
     98c:	str	r1, [fp, #-8]
     990:	movw	r0, #0
     994:	movt	r0, #0
     998:	movw	r1, #0
     99c:	str	r1, [r0]
     9a0:	str	r1, [r0, #664]	; 0x298
     9a4:	movw	r0, #0
     9a8:	movt	r0, #0
     9ac:	str	r1, [r0]
     9b0:	movw	r0, #0
     9b4:	movt	r0, #0
     9b8:	movw	r2, #0
     9bc:	movt	r2, #0
     9c0:	str	r2, [r0]
     9c4:	movw	r0, #0
     9c8:	movt	r0, #0
     9cc:	ldr	r0, [r0]
     9d0:	movw	r2, #0
     9d4:	movt	r2, #0
     9d8:	str	r0, [r2]
     9dc:	movw	r0, #0
     9e0:	movt	r0, #0
     9e4:	movw	r2, #1
     9e8:	str	r2, [r0]
     9ec:	movw	r0, #0
     9f0:	movt	r0, #0
     9f4:	str	r2, [r0]
     9f8:	str	r2, [fp, #-12]
     9fc:	str	r2, [fp, #-16]
     a00:	movw	r0, #0
     a04:	movt	r0, #0
     a08:	str	r1, [r0]
     a0c:	movw	r0, #0
     a10:	movt	r0, #0
     a14:	str	r1, [r0]
     a18:	movw	r0, #0
     a1c:	movt	r0, #0
     a20:	str	r1, [r0]
     a24:	movw	r0, #0
     a28:	movt	r0, #0
     a2c:	str	r1, [r0]
     a30:	str	r1, [fp, #-20]	; 0xffffffec
     a34:	ldr	r0, [fp, #-20]	; 0xffffffec
     a38:	ldr	r1, [fp, #-4]
     a3c:	cmp	r0, r1
     a40:	bge	f28 <handle_ascii_run_mode+0x5ac>
     a44:	ldr	r0, [fp, #-8]
     a48:	ldr	r1, [fp, #-20]	; 0xffffffec
     a4c:	add	r0, r0, r1, lsl #2
     a50:	ldr	r0, [r0]
     a54:	movw	r1, #0
     a58:	movt	r1, #0
     a5c:	bl	0 <strcmp>
     a60:	cmp	r0, #0
     a64:	beq	a8c <handle_ascii_run_mode+0x110>
     a68:	ldr	r0, [fp, #-8]
     a6c:	ldr	r1, [fp, #-20]	; 0xffffffec
     a70:	add	r0, r0, r1, lsl #2
     a74:	ldr	r0, [r0]
     a78:	movw	r1, #0
     a7c:	movt	r1, #0
     a80:	bl	0 <strcmp>
     a84:	cmp	r0, #0
     a88:	bne	a98 <handle_ascii_run_mode+0x11c>
     a8c:	movw	r0, #0
     a90:	str	r0, [fp, #-16]
     a94:	b	f14 <handle_ascii_run_mode+0x598>
     a98:	ldr	r0, [fp, #-8]
     a9c:	ldr	r1, [fp, #-20]	; 0xffffffec
     aa0:	add	r0, r0, r1, lsl #2
     aa4:	ldr	r0, [r0]
     aa8:	movw	r1, #0
     aac:	movt	r1, #0
     ab0:	bl	0 <strcmp>
     ab4:	cmp	r0, #0
     ab8:	beq	ae0 <handle_ascii_run_mode+0x164>
     abc:	ldr	r0, [fp, #-8]
     ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
     ac4:	add	r0, r0, r1, lsl #2
     ac8:	ldr	r0, [r0]
     acc:	movw	r1, #0
     ad0:	movt	r1, #0
     ad4:	bl	0 <strcmp>
     ad8:	cmp	r0, #0
     adc:	bne	b80 <handle_ascii_run_mode+0x204>
     ae0:	ldr	r0, [fp, #-20]	; 0xffffffec
     ae4:	add	r0, r0, #1
     ae8:	ldr	r1, [fp, #-4]
     aec:	cmp	r0, r1
     af0:	bge	b80 <handle_ascii_run_mode+0x204>
     af4:	ldr	r0, [fp, #-8]
     af8:	ldr	r1, [fp, #-20]	; 0xffffffec
     afc:	add	r1, r1, #1
     b00:	add	r0, r0, r1, lsl #2
     b04:	ldr	r0, [r0]
     b08:	ldrb	r0, [r0]
     b0c:	cmp	r0, #45	; 0x2d
     b10:	beq	b80 <handle_ascii_run_mode+0x204>
     b14:	ldr	r0, [fp, #-8]
     b18:	ldr	r1, [fp, #-20]	; 0xffffffec
     b1c:	add	r1, r1, #1
     b20:	add	r0, r0, r1, lsl #2
     b24:	ldr	r0, [r0]
     b28:	bl	0 <codadump_filter_create>
     b2c:	movw	r1, #0
     b30:	movt	r1, #0
     b34:	str	r0, [r1, #664]	; 0x298
     b38:	ldr	r0, [r1, #664]	; 0x298
     b3c:	movw	r1, #0
     b40:	cmp	r0, r1
     b44:	bne	b70 <handle_ascii_run_mode+0x1f4>
     b48:	movw	r0, #0
     b4c:	movt	r0, #0
     b50:	ldr	r0, [r0]
     b54:	movw	r1, #0
     b58:	movt	r1, #0
     b5c:	bl	0 <fprintf>
     b60:	str	r0, [fp, #-24]	; 0xffffffe8
     b64:	bl	20bc <print_help>
     b68:	movw	r0, #1
     b6c:	bl	0 <exit>
     b70:	ldr	r0, [fp, #-20]	; 0xffffffec
     b74:	add	r0, r0, #1
     b78:	str	r0, [fp, #-20]	; 0xffffffec
     b7c:	b	f10 <handle_ascii_run_mode+0x594>
     b80:	ldr	r0, [fp, #-8]
     b84:	ldr	r1, [fp, #-20]	; 0xffffffec
     b88:	add	r0, r0, r1, lsl #2
     b8c:	ldr	r0, [r0]
     b90:	movw	r1, #0
     b94:	movt	r1, #0
     b98:	bl	0 <strcmp>
     b9c:	cmp	r0, #0
     ba0:	beq	bc8 <handle_ascii_run_mode+0x24c>
     ba4:	ldr	r0, [fp, #-8]
     ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
     bac:	add	r0, r0, r1, lsl #2
     bb0:	ldr	r0, [r0]
     bb4:	movw	r1, #0
     bb8:	movt	r1, #0
     bbc:	bl	0 <strcmp>
     bc0:	cmp	r0, #0
     bc4:	bne	bdc <handle_ascii_run_mode+0x260>
     bc8:	movw	r0, #0
     bcc:	movt	r0, #0
     bd0:	movw	r1, #1
     bd4:	str	r1, [r0]
     bd8:	b	f0c <handle_ascii_run_mode+0x590>
     bdc:	ldr	r0, [fp, #-8]
     be0:	ldr	r1, [fp, #-20]	; 0xffffffec
     be4:	add	r0, r0, r1, lsl #2
     be8:	ldr	r0, [r0]
     bec:	movw	r1, #0
     bf0:	movt	r1, #0
     bf4:	bl	0 <strcmp>
     bf8:	cmp	r0, #0
     bfc:	beq	c24 <handle_ascii_run_mode+0x2a8>
     c00:	ldr	r0, [fp, #-8]
     c04:	ldr	r1, [fp, #-20]	; 0xffffffec
     c08:	add	r0, r0, r1, lsl #2
     c0c:	ldr	r0, [r0]
     c10:	movw	r1, #0
     c14:	movt	r1, #0
     c18:	bl	0 <strcmp>
     c1c:	cmp	r0, #0
     c20:	bne	c38 <handle_ascii_run_mode+0x2bc>
     c24:	movw	r0, #0
     c28:	movt	r0, #0
     c2c:	movw	r1, #1
     c30:	str	r1, [r0]
     c34:	b	f08 <handle_ascii_run_mode+0x58c>
     c38:	ldr	r0, [fp, #-8]
     c3c:	ldr	r1, [fp, #-20]	; 0xffffffec
     c40:	add	r0, r0, r1, lsl #2
     c44:	ldr	r0, [r0]
     c48:	movw	r1, #0
     c4c:	movt	r1, #0
     c50:	bl	0 <strcmp>
     c54:	cmp	r0, #0
     c58:	beq	c80 <handle_ascii_run_mode+0x304>
     c5c:	ldr	r0, [fp, #-8]
     c60:	ldr	r1, [fp, #-20]	; 0xffffffec
     c64:	add	r0, r0, r1, lsl #2
     c68:	ldr	r0, [r0]
     c6c:	movw	r1, #0
     c70:	movt	r1, #0
     c74:	bl	0 <strcmp>
     c78:	cmp	r0, #0
     c7c:	bne	ce4 <handle_ascii_run_mode+0x368>
     c80:	ldr	r0, [fp, #-20]	; 0xffffffec
     c84:	add	r0, r0, #1
     c88:	ldr	r1, [fp, #-4]
     c8c:	cmp	r0, r1
     c90:	bge	ce4 <handle_ascii_run_mode+0x368>
     c94:	ldr	r0, [fp, #-8]
     c98:	ldr	r1, [fp, #-20]	; 0xffffffec
     c9c:	add	r1, r1, #1
     ca0:	add	r0, r0, r1, lsl #2
     ca4:	ldr	r0, [r0]
     ca8:	ldrb	r0, [r0]
     cac:	cmp	r0, #45	; 0x2d
     cb0:	beq	ce4 <handle_ascii_run_mode+0x368>
     cb4:	ldr	r0, [fp, #-8]
     cb8:	ldr	r1, [fp, #-20]	; 0xffffffec
     cbc:	add	r1, r1, #1
     cc0:	add	r0, r0, r1, lsl #2
     cc4:	ldr	r0, [r0]
     cc8:	movw	r1, #0
     ccc:	movt	r1, #0
     cd0:	str	r0, [r1]
     cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
     cd8:	add	r0, r0, #1
     cdc:	str	r0, [fp, #-20]	; 0xffffffec
     ce0:	b	f04 <handle_ascii_run_mode+0x588>
     ce4:	ldr	r0, [fp, #-8]
     ce8:	ldr	r1, [fp, #-20]	; 0xffffffec
     cec:	add	r0, r0, r1, lsl #2
     cf0:	ldr	r0, [r0]
     cf4:	movw	r1, #0
     cf8:	movt	r1, #0
     cfc:	bl	0 <strcmp>
     d00:	cmp	r0, #0
     d04:	beq	d2c <handle_ascii_run_mode+0x3b0>
     d08:	ldr	r0, [fp, #-8]
     d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
     d10:	add	r0, r0, r1, lsl #2
     d14:	ldr	r0, [r0]
     d18:	movw	r1, #0
     d1c:	movt	r1, #0
     d20:	bl	0 <strcmp>
     d24:	cmp	r0, #0
     d28:	bne	d40 <handle_ascii_run_mode+0x3c4>
     d2c:	movw	r0, #0
     d30:	movt	r0, #0
     d34:	movw	r1, #1
     d38:	str	r1, [r0]
     d3c:	b	f00 <handle_ascii_run_mode+0x584>
     d40:	ldr	r0, [fp, #-8]
     d44:	ldr	r1, [fp, #-20]	; 0xffffffec
     d48:	add	r0, r0, r1, lsl #2
     d4c:	ldr	r0, [r0]
     d50:	movw	r1, #0
     d54:	movt	r1, #0
     d58:	bl	0 <strcmp>
     d5c:	cmp	r0, #0
     d60:	beq	d88 <handle_ascii_run_mode+0x40c>
     d64:	ldr	r0, [fp, #-8]
     d68:	ldr	r1, [fp, #-20]	; 0xffffffec
     d6c:	add	r0, r0, r1, lsl #2
     d70:	ldr	r0, [r0]
     d74:	movw	r1, #0
     d78:	movt	r1, #0
     d7c:	bl	0 <strcmp>
     d80:	cmp	r0, #0
     d84:	bne	dec <handle_ascii_run_mode+0x470>
     d88:	ldr	r0, [fp, #-20]	; 0xffffffec
     d8c:	add	r0, r0, #1
     d90:	ldr	r1, [fp, #-4]
     d94:	cmp	r0, r1
     d98:	bge	dec <handle_ascii_run_mode+0x470>
     d9c:	ldr	r0, [fp, #-8]
     da0:	ldr	r1, [fp, #-20]	; 0xffffffec
     da4:	add	r1, r1, #1
     da8:	add	r0, r0, r1, lsl #2
     dac:	ldr	r0, [r0]
     db0:	ldrb	r0, [r0]
     db4:	cmp	r0, #45	; 0x2d
     db8:	beq	dec <handle_ascii_run_mode+0x470>
     dbc:	ldr	r0, [fp, #-8]
     dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
     dc4:	add	r1, r1, #1
     dc8:	add	r0, r0, r1, lsl #2
     dcc:	ldr	r0, [r0]
     dd0:	movw	r1, #0
     dd4:	movt	r1, #0
     dd8:	str	r0, [r1]
     ddc:	ldr	r0, [fp, #-20]	; 0xffffffec
     de0:	add	r0, r0, #1
     de4:	str	r0, [fp, #-20]	; 0xffffffec
     de8:	b	efc <handle_ascii_run_mode+0x580>
     dec:	ldr	r0, [fp, #-8]
     df0:	ldr	r1, [fp, #-20]	; 0xffffffec
     df4:	add	r0, r0, r1, lsl #2
     df8:	ldr	r0, [r0]
     dfc:	movw	r1, #0
     e00:	movt	r1, #0
     e04:	bl	0 <strcmp>
     e08:	cmp	r0, #0
     e0c:	beq	e34 <handle_ascii_run_mode+0x4b8>
     e10:	ldr	r0, [fp, #-8]
     e14:	ldr	r1, [fp, #-20]	; 0xffffffec
     e18:	add	r0, r0, r1, lsl #2
     e1c:	ldr	r0, [r0]
     e20:	movw	r1, #0
     e24:	movt	r1, #0
     e28:	bl	0 <strcmp>
     e2c:	cmp	r0, #0
     e30:	bne	e48 <handle_ascii_run_mode+0x4cc>
     e34:	movw	r0, #0
     e38:	movt	r0, #0
     e3c:	movw	r1, #1
     e40:	str	r1, [r0]
     e44:	b	ef8 <handle_ascii_run_mode+0x57c>
     e48:	ldr	r0, [fp, #-8]
     e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
     e50:	add	r0, r0, r1, lsl #2
     e54:	ldr	r0, [r0]
     e58:	movw	r1, #0
     e5c:	movt	r1, #0
     e60:	bl	0 <strcmp>
     e64:	cmp	r0, #0
     e68:	bne	e78 <handle_ascii_run_mode+0x4fc>
     e6c:	movw	r0, #0
     e70:	str	r0, [fp, #-12]
     e74:	b	ef4 <handle_ascii_run_mode+0x578>
     e78:	ldr	r0, [fp, #-20]	; 0xffffffec
     e7c:	ldr	r1, [fp, #-4]
     e80:	sub	r1, r1, #1
     e84:	cmp	r0, r1
     e88:	bne	ec8 <handle_ascii_run_mode+0x54c>
     e8c:	ldr	r0, [fp, #-8]
     e90:	ldr	r1, [fp, #-20]	; 0xffffffec
     e94:	add	r0, r0, r1, lsl #2
     e98:	ldr	r0, [r0]
     e9c:	ldrb	r0, [r0]
     ea0:	cmp	r0, #45	; 0x2d
     ea4:	beq	ec8 <handle_ascii_run_mode+0x54c>
     ea8:	ldr	r0, [fp, #-8]
     eac:	ldr	r1, [fp, #-20]	; 0xffffffec
     eb0:	add	r0, r0, r1, lsl #2
     eb4:	ldr	r0, [r0]
     eb8:	movw	r1, #0
     ebc:	movt	r1, #0
     ec0:	str	r0, [r1]
     ec4:	b	ef0 <handle_ascii_run_mode+0x574>
     ec8:	movw	r0, #0
     ecc:	movt	r0, #0
     ed0:	ldr	r0, [r0]
     ed4:	movw	r1, #0
     ed8:	movt	r1, #0
     edc:	bl	0 <fprintf>
     ee0:	str	r0, [fp, #-28]	; 0xffffffe4
     ee4:	bl	20bc <print_help>
     ee8:	movw	r0, #1
     eec:	bl	0 <exit>
     ef0:	b	ef4 <handle_ascii_run_mode+0x578>
     ef4:	b	ef8 <handle_ascii_run_mode+0x57c>
     ef8:	b	efc <handle_ascii_run_mode+0x580>
     efc:	b	f00 <handle_ascii_run_mode+0x584>
     f00:	b	f04 <handle_ascii_run_mode+0x588>
     f04:	b	f08 <handle_ascii_run_mode+0x58c>
     f08:	b	f0c <handle_ascii_run_mode+0x590>
     f0c:	b	f10 <handle_ascii_run_mode+0x594>
     f10:	b	f14 <handle_ascii_run_mode+0x598>
     f14:	b	f18 <handle_ascii_run_mode+0x59c>
     f18:	ldr	r0, [fp, #-20]	; 0xffffffec
     f1c:	add	r0, r0, #1
     f20:	str	r0, [fp, #-20]	; 0xffffffec
     f24:	b	a34 <handle_ascii_run_mode+0xb8>
     f28:	movw	r0, #0
     f2c:	movt	r0, #0
     f30:	ldr	r0, [r0]
     f34:	movw	r1, #0
     f38:	cmp	r0, r1
     f3c:	beq	f58 <handle_ascii_run_mode+0x5dc>
     f40:	movw	r0, #0
     f44:	movt	r0, #0
     f48:	ldr	r0, [r0]
     f4c:	ldrb	r0, [r0]
     f50:	cmp	r0, #0
     f54:	bne	f80 <handle_ascii_run_mode+0x604>
     f58:	movw	r0, #0
     f5c:	movt	r0, #0
     f60:	ldr	r0, [r0]
     f64:	movw	r1, #0
     f68:	movt	r1, #0
     f6c:	bl	0 <fprintf>
     f70:	str	r0, [sp, #32]
     f74:	bl	20bc <print_help>
     f78:	movw	r0, #1
     f7c:	bl	0 <exit>
     f80:	bl	0 <coda_init>
     f84:	cmp	r0, #0
     f88:	beq	fd4 <handle_ascii_run_mode+0x658>
     f8c:	movw	r0, #0
     f90:	movt	r0, #0
     f94:	ldr	r0, [r0]
     f98:	str	r0, [sp, #28]
     f9c:	bl	0 <coda_get_errno>
     fa0:	ldr	r0, [r0]
     fa4:	bl	0 <coda_errno_to_string>
     fa8:	ldr	lr, [sp, #28]
     fac:	str	r0, [sp, #24]
     fb0:	mov	r0, lr
     fb4:	movw	r1, #0
     fb8:	movt	r1, #0
     fbc:	ldr	r2, [sp, #24]
     fc0:	bl	0 <fprintf>
     fc4:	movw	r1, #1
     fc8:	str	r0, [sp, #20]
     fcc:	mov	r0, r1
     fd0:	bl	0 <exit>
     fd4:	ldr	r0, [fp, #-12]
     fd8:	cmp	r0, #0
     fdc:	movw	r0, #0
     fe0:	movne	r0, #1
     fe4:	mvn	r1, #0
     fe8:	eor	r0, r0, r1
     fec:	and	r0, r0, #1
     ff0:	bl	0 <coda_set_option_bypass_special_types>
     ff4:	movw	r1, #0
     ff8:	str	r0, [sp, #16]
     ffc:	mov	r0, r1
    1000:	bl	0 <coda_set_option_perform_boundary_checks>
    1004:	ldr	r1, [fp, #-16]
    1008:	str	r0, [sp, #12]
    100c:	mov	r0, r1
    1010:	bl	0 <coda_set_option_perform_conversions>
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	str	r0, [sp, #8]
    1020:	blx	r1
    1024:	movw	r0, #0
    1028:	movt	r0, #0
    102c:	blx	r0
    1030:	movw	r0, #0
    1034:	movt	r0, #0
    1038:	ldr	r0, [r0]
    103c:	movw	r1, #0
    1040:	cmp	r0, r1
    1044:	beq	10b4 <handle_ascii_run_mode+0x738>
    1048:	movw	r0, #0
    104c:	movt	r0, #0
    1050:	ldr	r0, [r0]
    1054:	movw	r1, #0
    1058:	movt	r1, #0
    105c:	bl	0 <fopen>
    1060:	movw	r1, #0
    1064:	movt	r1, #0
    1068:	str	r0, [r1]
    106c:	ldr	r0, [r1]
    1070:	movw	r1, #0
    1074:	cmp	r0, r1
    1078:	bne	10b0 <handle_ascii_run_mode+0x734>
    107c:	movw	r0, #0
    1080:	movt	r0, #0
    1084:	ldr	r0, [r0]
    1088:	movw	r1, #0
    108c:	movt	r1, #0
    1090:	ldr	r2, [r1]
    1094:	movw	r1, #0
    1098:	movt	r1, #0
    109c:	bl	0 <fprintf>
    10a0:	movw	r1, #1
    10a4:	str	r0, [sp, #4]
    10a8:	mov	r0, r1
    10ac:	bl	0 <exit>
    10b0:	b	10b4 <handle_ascii_run_mode+0x738>
    10b4:	movw	r0, #0
    10b8:	movt	r0, #0
    10bc:	blx	r0
    10c0:	movw	r0, #0
    10c4:	movt	r0, #0
    10c8:	ldr	r0, [r0]
    10cc:	movw	lr, #0
    10d0:	cmp	r0, lr
    10d4:	beq	10ec <handle_ascii_run_mode+0x770>
    10d8:	movw	r0, #0
    10dc:	movt	r0, #0
    10e0:	ldr	r0, [r0]
    10e4:	bl	0 <fclose>
    10e8:	str	r0, [sp]
    10ec:	movw	r0, #0
    10f0:	movt	r0, #0
    10f4:	blx	r0
    10f8:	movw	r0, #0
    10fc:	movt	r0, #0
    1100:	blx	r0
    1104:	bl	0 <coda_done>
    1108:	mov	sp, fp
    110c:	pop	{fp, pc}

00001110 <handle_json_run_mode>:
    1110:	push	{fp, lr}
    1114:	mov	fp, sp
    1118:	sub	sp, sp, #64	; 0x40
    111c:	str	r0, [fp, #-4]
    1120:	str	r1, [fp, #-8]
    1124:	movw	r0, #0
    1128:	movt	r0, #0
    112c:	movw	r1, #0
    1130:	str	r1, [r0]
    1134:	movw	r0, #0
    1138:	movt	r0, #0
    113c:	str	r1, [r0]
    1140:	movw	r0, #0
    1144:	movt	r0, #0
    1148:	str	r1, [r0]
    114c:	movw	r0, #0
    1150:	movt	r0, #0
    1154:	ldr	r0, [r0]
    1158:	movw	r2, #0
    115c:	movt	r2, #0
    1160:	str	r0, [r2]
    1164:	movw	r0, #1
    1168:	str	r0, [fp, #-12]
    116c:	str	r0, [fp, #-16]
    1170:	str	r1, [fp, #-20]	; 0xffffffec
    1174:	str	r1, [fp, #-24]	; 0xffffffe8
    1178:	ldr	r0, [fp, #-24]	; 0xffffffe8
    117c:	ldr	r1, [fp, #-4]
    1180:	cmp	r0, r1
    1184:	bge	1458 <handle_json_run_mode+0x348>
    1188:	ldr	r0, [fp, #-8]
    118c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1190:	add	r0, r0, r1, lsl #2
    1194:	ldr	r0, [r0]
    1198:	movw	r1, #0
    119c:	movt	r1, #0
    11a0:	bl	0 <strcmp>
    11a4:	cmp	r0, #0
    11a8:	beq	11d0 <handle_json_run_mode+0xc0>
    11ac:	ldr	r0, [fp, #-8]
    11b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11b4:	add	r0, r0, r1, lsl #2
    11b8:	ldr	r0, [r0]
    11bc:	movw	r1, #0
    11c0:	movt	r1, #0
    11c4:	bl	0 <strcmp>
    11c8:	cmp	r0, #0
    11cc:	bne	11dc <handle_json_run_mode+0xcc>
    11d0:	movw	r0, #1
    11d4:	str	r0, [fp, #-20]	; 0xffffffec
    11d8:	b	1444 <handle_json_run_mode+0x334>
    11dc:	ldr	r0, [fp, #-8]
    11e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    11e4:	add	r0, r0, r1, lsl #2
    11e8:	ldr	r0, [r0]
    11ec:	movw	r1, #0
    11f0:	movt	r1, #0
    11f4:	bl	0 <strcmp>
    11f8:	cmp	r0, #0
    11fc:	beq	1224 <handle_json_run_mode+0x114>
    1200:	ldr	r0, [fp, #-8]
    1204:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1208:	add	r0, r0, r1, lsl #2
    120c:	ldr	r0, [r0]
    1210:	movw	r1, #0
    1214:	movt	r1, #0
    1218:	bl	0 <strcmp>
    121c:	cmp	r0, #0
    1220:	bne	1230 <handle_json_run_mode+0x120>
    1224:	movw	r0, #0
    1228:	str	r0, [fp, #-16]
    122c:	b	1440 <handle_json_run_mode+0x330>
    1230:	ldr	r0, [fp, #-8]
    1234:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1238:	add	r0, r0, r1, lsl #2
    123c:	ldr	r0, [r0]
    1240:	movw	r1, #0
    1244:	movt	r1, #0
    1248:	bl	0 <strcmp>
    124c:	cmp	r0, #0
    1250:	beq	1278 <handle_json_run_mode+0x168>
    1254:	ldr	r0, [fp, #-8]
    1258:	ldr	r1, [fp, #-24]	; 0xffffffe8
    125c:	add	r0, r0, r1, lsl #2
    1260:	ldr	r0, [r0]
    1264:	movw	r1, #0
    1268:	movt	r1, #0
    126c:	bl	0 <strcmp>
    1270:	cmp	r0, #0
    1274:	bne	12dc <handle_json_run_mode+0x1cc>
    1278:	ldr	r0, [fp, #-24]	; 0xffffffe8
    127c:	add	r0, r0, #1
    1280:	ldr	r1, [fp, #-4]
    1284:	cmp	r0, r1
    1288:	bge	12dc <handle_json_run_mode+0x1cc>
    128c:	ldr	r0, [fp, #-8]
    1290:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1294:	add	r1, r1, #1
    1298:	add	r0, r0, r1, lsl #2
    129c:	ldr	r0, [r0]
    12a0:	ldrb	r0, [r0]
    12a4:	cmp	r0, #45	; 0x2d
    12a8:	beq	12dc <handle_json_run_mode+0x1cc>
    12ac:	ldr	r0, [fp, #-8]
    12b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    12b4:	add	r1, r1, #1
    12b8:	add	r0, r0, r1, lsl #2
    12bc:	ldr	r0, [r0]
    12c0:	movw	r1, #0
    12c4:	movt	r1, #0
    12c8:	str	r0, [r1]
    12cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    12d0:	add	r0, r0, #1
    12d4:	str	r0, [fp, #-24]	; 0xffffffe8
    12d8:	b	143c <handle_json_run_mode+0x32c>
    12dc:	ldr	r0, [fp, #-8]
    12e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    12e4:	add	r0, r0, r1, lsl #2
    12e8:	ldr	r0, [r0]
    12ec:	movw	r1, #0
    12f0:	movt	r1, #0
    12f4:	bl	0 <strcmp>
    12f8:	cmp	r0, #0
    12fc:	beq	1324 <handle_json_run_mode+0x214>
    1300:	ldr	r0, [fp, #-8]
    1304:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1308:	add	r0, r0, r1, lsl #2
    130c:	ldr	r0, [r0]
    1310:	movw	r1, #0
    1314:	movt	r1, #0
    1318:	bl	0 <strcmp>
    131c:	cmp	r0, #0
    1320:	bne	1388 <handle_json_run_mode+0x278>
    1324:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1328:	add	r0, r0, #1
    132c:	ldr	r1, [fp, #-4]
    1330:	cmp	r0, r1
    1334:	bge	1388 <handle_json_run_mode+0x278>
    1338:	ldr	r0, [fp, #-8]
    133c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1340:	add	r1, r1, #1
    1344:	add	r0, r0, r1, lsl #2
    1348:	ldr	r0, [r0]
    134c:	ldrb	r0, [r0]
    1350:	cmp	r0, #45	; 0x2d
    1354:	beq	1388 <handle_json_run_mode+0x278>
    1358:	ldr	r0, [fp, #-8]
    135c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1360:	add	r1, r1, #1
    1364:	add	r0, r0, r1, lsl #2
    1368:	ldr	r0, [r0]
    136c:	movw	r1, #0
    1370:	movt	r1, #0
    1374:	str	r0, [r1]
    1378:	ldr	r0, [fp, #-24]	; 0xffffffe8
    137c:	add	r0, r0, #1
    1380:	str	r0, [fp, #-24]	; 0xffffffe8
    1384:	b	1438 <handle_json_run_mode+0x328>
    1388:	ldr	r0, [fp, #-8]
    138c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1390:	add	r0, r0, r1, lsl #2
    1394:	ldr	r0, [r0]
    1398:	movw	r1, #0
    139c:	movt	r1, #0
    13a0:	bl	0 <strcmp>
    13a4:	cmp	r0, #0
    13a8:	bne	13b8 <handle_json_run_mode+0x2a8>
    13ac:	movw	r0, #0
    13b0:	str	r0, [fp, #-12]
    13b4:	b	1434 <handle_json_run_mode+0x324>
    13b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    13bc:	ldr	r1, [fp, #-4]
    13c0:	sub	r1, r1, #1
    13c4:	cmp	r0, r1
    13c8:	bne	1408 <handle_json_run_mode+0x2f8>
    13cc:	ldr	r0, [fp, #-8]
    13d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13d4:	add	r0, r0, r1, lsl #2
    13d8:	ldr	r0, [r0]
    13dc:	ldrb	r0, [r0]
    13e0:	cmp	r0, #45	; 0x2d
    13e4:	beq	1408 <handle_json_run_mode+0x2f8>
    13e8:	ldr	r0, [fp, #-8]
    13ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
    13f0:	add	r0, r0, r1, lsl #2
    13f4:	ldr	r0, [r0]
    13f8:	movw	r1, #0
    13fc:	movt	r1, #0
    1400:	str	r0, [r1]
    1404:	b	1430 <handle_json_run_mode+0x320>
    1408:	movw	r0, #0
    140c:	movt	r0, #0
    1410:	ldr	r0, [r0]
    1414:	movw	r1, #0
    1418:	movt	r1, #0
    141c:	bl	0 <fprintf>
    1420:	str	r0, [fp, #-28]	; 0xffffffe4
    1424:	bl	20bc <print_help>
    1428:	movw	r0, #1
    142c:	bl	0 <exit>
    1430:	b	1434 <handle_json_run_mode+0x324>
    1434:	b	1438 <handle_json_run_mode+0x328>
    1438:	b	143c <handle_json_run_mode+0x32c>
    143c:	b	1440 <handle_json_run_mode+0x330>
    1440:	b	1444 <handle_json_run_mode+0x334>
    1444:	b	1448 <handle_json_run_mode+0x338>
    1448:	ldr	r0, [fp, #-24]	; 0xffffffe8
    144c:	add	r0, r0, #1
    1450:	str	r0, [fp, #-24]	; 0xffffffe8
    1454:	b	1178 <handle_json_run_mode+0x68>
    1458:	movw	r0, #0
    145c:	movt	r0, #0
    1460:	ldr	r0, [r0]
    1464:	movw	r1, #0
    1468:	cmp	r0, r1
    146c:	beq	1488 <handle_json_run_mode+0x378>
    1470:	movw	r0, #0
    1474:	movt	r0, #0
    1478:	ldr	r0, [r0]
    147c:	ldrb	r0, [r0]
    1480:	cmp	r0, #0
    1484:	bne	14b0 <handle_json_run_mode+0x3a0>
    1488:	movw	r0, #0
    148c:	movt	r0, #0
    1490:	ldr	r0, [r0]
    1494:	movw	r1, #0
    1498:	movt	r1, #0
    149c:	bl	0 <fprintf>
    14a0:	str	r0, [sp, #32]
    14a4:	bl	20bc <print_help>
    14a8:	movw	r0, #1
    14ac:	bl	0 <exit>
    14b0:	bl	0 <coda_init>
    14b4:	cmp	r0, #0
    14b8:	beq	1504 <handle_json_run_mode+0x3f4>
    14bc:	movw	r0, #0
    14c0:	movt	r0, #0
    14c4:	ldr	r0, [r0]
    14c8:	str	r0, [sp, #28]
    14cc:	bl	0 <coda_get_errno>
    14d0:	ldr	r0, [r0]
    14d4:	bl	0 <coda_errno_to_string>
    14d8:	ldr	lr, [sp, #28]
    14dc:	str	r0, [sp, #24]
    14e0:	mov	r0, lr
    14e4:	movw	r1, #0
    14e8:	movt	r1, #0
    14ec:	ldr	r2, [sp, #24]
    14f0:	bl	0 <fprintf>
    14f4:	movw	r1, #1
    14f8:	str	r0, [sp, #20]
    14fc:	mov	r0, r1
    1500:	bl	0 <exit>
    1504:	ldr	r0, [fp, #-12]
    1508:	cmp	r0, #0
    150c:	movw	r0, #0
    1510:	movne	r0, #1
    1514:	mvn	r1, #0
    1518:	eor	r0, r0, r1
    151c:	and	r0, r0, #1
    1520:	bl	0 <coda_set_option_bypass_special_types>
    1524:	ldr	r1, [fp, #-16]
    1528:	str	r0, [sp, #16]
    152c:	mov	r0, r1
    1530:	bl	0 <coda_set_option_perform_conversions>
    1534:	movw	r1, #0
    1538:	movt	r1, #0
    153c:	ldr	r1, [r1]
    1540:	movw	lr, #0
    1544:	cmp	r1, lr
    1548:	str	r0, [sp, #12]
    154c:	beq	15bc <handle_json_run_mode+0x4ac>
    1550:	movw	r0, #0
    1554:	movt	r0, #0
    1558:	ldr	r0, [r0]
    155c:	movw	r1, #0
    1560:	movt	r1, #0
    1564:	bl	0 <fopen>
    1568:	movw	r1, #0
    156c:	movt	r1, #0
    1570:	str	r0, [r1]
    1574:	ldr	r0, [r1]
    1578:	movw	r1, #0
    157c:	cmp	r0, r1
    1580:	bne	15b8 <handle_json_run_mode+0x4a8>
    1584:	movw	r0, #0
    1588:	movt	r0, #0
    158c:	ldr	r0, [r0]
    1590:	movw	r1, #0
    1594:	movt	r1, #0
    1598:	ldr	r2, [r1]
    159c:	movw	r1, #0
    15a0:	movt	r1, #0
    15a4:	bl	0 <fprintf>
    15a8:	movw	r1, #1
    15ac:	str	r0, [sp, #8]
    15b0:	mov	r0, r1
    15b4:	bl	0 <exit>
    15b8:	b	15bc <handle_json_run_mode+0x4ac>
    15bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    15c0:	bl	0 <print_json_data>
    15c4:	movw	r0, #0
    15c8:	movt	r0, #0
    15cc:	ldr	r0, [r0]
    15d0:	movw	lr, #0
    15d4:	cmp	r0, lr
    15d8:	beq	15f0 <handle_json_run_mode+0x4e0>
    15dc:	movw	r0, #0
    15e0:	movt	r0, #0
    15e4:	ldr	r0, [r0]
    15e8:	bl	0 <fclose>
    15ec:	str	r0, [sp, #4]
    15f0:	bl	0 <coda_done>
    15f4:	mov	sp, fp
    15f8:	pop	{fp, pc}

000015fc <handle_yaml_run_mode>:
    15fc:	push	{fp, lr}
    1600:	mov	fp, sp
    1604:	sub	sp, sp, #64	; 0x40
    1608:	str	r0, [fp, #-4]
    160c:	str	r1, [fp, #-8]
    1610:	movw	r0, #0
    1614:	movt	r0, #0
    1618:	movw	r1, #0
    161c:	str	r1, [r0]
    1620:	movw	r0, #0
    1624:	movt	r0, #0
    1628:	str	r1, [r0]
    162c:	movw	r0, #0
    1630:	movt	r0, #0
    1634:	str	r1, [r0]
    1638:	movw	r0, #0
    163c:	movt	r0, #0
    1640:	ldr	r0, [r0]
    1644:	movw	r2, #0
    1648:	movt	r2, #0
    164c:	str	r0, [r2]
    1650:	movw	r0, #1
    1654:	str	r0, [fp, #-12]
    1658:	str	r0, [fp, #-16]
    165c:	str	r1, [fp, #-20]	; 0xffffffec
    1660:	str	r1, [fp, #-24]	; 0xffffffe8
    1664:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1668:	ldr	r1, [fp, #-4]
    166c:	cmp	r0, r1
    1670:	bge	1944 <handle_yaml_run_mode+0x348>
    1674:	ldr	r0, [fp, #-8]
    1678:	ldr	r1, [fp, #-24]	; 0xffffffe8
    167c:	add	r0, r0, r1, lsl #2
    1680:	ldr	r0, [r0]
    1684:	movw	r1, #0
    1688:	movt	r1, #0
    168c:	bl	0 <strcmp>
    1690:	cmp	r0, #0
    1694:	beq	16bc <handle_yaml_run_mode+0xc0>
    1698:	ldr	r0, [fp, #-8]
    169c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16a0:	add	r0, r0, r1, lsl #2
    16a4:	ldr	r0, [r0]
    16a8:	movw	r1, #0
    16ac:	movt	r1, #0
    16b0:	bl	0 <strcmp>
    16b4:	cmp	r0, #0
    16b8:	bne	16c8 <handle_yaml_run_mode+0xcc>
    16bc:	movw	r0, #1
    16c0:	str	r0, [fp, #-20]	; 0xffffffec
    16c4:	b	1930 <handle_yaml_run_mode+0x334>
    16c8:	ldr	r0, [fp, #-8]
    16cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16d0:	add	r0, r0, r1, lsl #2
    16d4:	ldr	r0, [r0]
    16d8:	movw	r1, #0
    16dc:	movt	r1, #0
    16e0:	bl	0 <strcmp>
    16e4:	cmp	r0, #0
    16e8:	beq	1710 <handle_yaml_run_mode+0x114>
    16ec:	ldr	r0, [fp, #-8]
    16f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    16f4:	add	r0, r0, r1, lsl #2
    16f8:	ldr	r0, [r0]
    16fc:	movw	r1, #0
    1700:	movt	r1, #0
    1704:	bl	0 <strcmp>
    1708:	cmp	r0, #0
    170c:	bne	171c <handle_yaml_run_mode+0x120>
    1710:	movw	r0, #0
    1714:	str	r0, [fp, #-16]
    1718:	b	192c <handle_yaml_run_mode+0x330>
    171c:	ldr	r0, [fp, #-8]
    1720:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1724:	add	r0, r0, r1, lsl #2
    1728:	ldr	r0, [r0]
    172c:	movw	r1, #0
    1730:	movt	r1, #0
    1734:	bl	0 <strcmp>
    1738:	cmp	r0, #0
    173c:	beq	1764 <handle_yaml_run_mode+0x168>
    1740:	ldr	r0, [fp, #-8]
    1744:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1748:	add	r0, r0, r1, lsl #2
    174c:	ldr	r0, [r0]
    1750:	movw	r1, #0
    1754:	movt	r1, #0
    1758:	bl	0 <strcmp>
    175c:	cmp	r0, #0
    1760:	bne	17c8 <handle_yaml_run_mode+0x1cc>
    1764:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1768:	add	r0, r0, #1
    176c:	ldr	r1, [fp, #-4]
    1770:	cmp	r0, r1
    1774:	bge	17c8 <handle_yaml_run_mode+0x1cc>
    1778:	ldr	r0, [fp, #-8]
    177c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1780:	add	r1, r1, #1
    1784:	add	r0, r0, r1, lsl #2
    1788:	ldr	r0, [r0]
    178c:	ldrb	r0, [r0]
    1790:	cmp	r0, #45	; 0x2d
    1794:	beq	17c8 <handle_yaml_run_mode+0x1cc>
    1798:	ldr	r0, [fp, #-8]
    179c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17a0:	add	r1, r1, #1
    17a4:	add	r0, r0, r1, lsl #2
    17a8:	ldr	r0, [r0]
    17ac:	movw	r1, #0
    17b0:	movt	r1, #0
    17b4:	str	r0, [r1]
    17b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    17bc:	add	r0, r0, #1
    17c0:	str	r0, [fp, #-24]	; 0xffffffe8
    17c4:	b	1928 <handle_yaml_run_mode+0x32c>
    17c8:	ldr	r0, [fp, #-8]
    17cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17d0:	add	r0, r0, r1, lsl #2
    17d4:	ldr	r0, [r0]
    17d8:	movw	r1, #0
    17dc:	movt	r1, #0
    17e0:	bl	0 <strcmp>
    17e4:	cmp	r0, #0
    17e8:	beq	1810 <handle_yaml_run_mode+0x214>
    17ec:	ldr	r0, [fp, #-8]
    17f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    17f4:	add	r0, r0, r1, lsl #2
    17f8:	ldr	r0, [r0]
    17fc:	movw	r1, #0
    1800:	movt	r1, #0
    1804:	bl	0 <strcmp>
    1808:	cmp	r0, #0
    180c:	bne	1874 <handle_yaml_run_mode+0x278>
    1810:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1814:	add	r0, r0, #1
    1818:	ldr	r1, [fp, #-4]
    181c:	cmp	r0, r1
    1820:	bge	1874 <handle_yaml_run_mode+0x278>
    1824:	ldr	r0, [fp, #-8]
    1828:	ldr	r1, [fp, #-24]	; 0xffffffe8
    182c:	add	r1, r1, #1
    1830:	add	r0, r0, r1, lsl #2
    1834:	ldr	r0, [r0]
    1838:	ldrb	r0, [r0]
    183c:	cmp	r0, #45	; 0x2d
    1840:	beq	1874 <handle_yaml_run_mode+0x278>
    1844:	ldr	r0, [fp, #-8]
    1848:	ldr	r1, [fp, #-24]	; 0xffffffe8
    184c:	add	r1, r1, #1
    1850:	add	r0, r0, r1, lsl #2
    1854:	ldr	r0, [r0]
    1858:	movw	r1, #0
    185c:	movt	r1, #0
    1860:	str	r0, [r1]
    1864:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1868:	add	r0, r0, #1
    186c:	str	r0, [fp, #-24]	; 0xffffffe8
    1870:	b	1924 <handle_yaml_run_mode+0x328>
    1874:	ldr	r0, [fp, #-8]
    1878:	ldr	r1, [fp, #-24]	; 0xffffffe8
    187c:	add	r0, r0, r1, lsl #2
    1880:	ldr	r0, [r0]
    1884:	movw	r1, #0
    1888:	movt	r1, #0
    188c:	bl	0 <strcmp>
    1890:	cmp	r0, #0
    1894:	bne	18a4 <handle_yaml_run_mode+0x2a8>
    1898:	movw	r0, #0
    189c:	str	r0, [fp, #-12]
    18a0:	b	1920 <handle_yaml_run_mode+0x324>
    18a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    18a8:	ldr	r1, [fp, #-4]
    18ac:	sub	r1, r1, #1
    18b0:	cmp	r0, r1
    18b4:	bne	18f4 <handle_yaml_run_mode+0x2f8>
    18b8:	ldr	r0, [fp, #-8]
    18bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    18c0:	add	r0, r0, r1, lsl #2
    18c4:	ldr	r0, [r0]
    18c8:	ldrb	r0, [r0]
    18cc:	cmp	r0, #45	; 0x2d
    18d0:	beq	18f4 <handle_yaml_run_mode+0x2f8>
    18d4:	ldr	r0, [fp, #-8]
    18d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    18dc:	add	r0, r0, r1, lsl #2
    18e0:	ldr	r0, [r0]
    18e4:	movw	r1, #0
    18e8:	movt	r1, #0
    18ec:	str	r0, [r1]
    18f0:	b	191c <handle_yaml_run_mode+0x320>
    18f4:	movw	r0, #0
    18f8:	movt	r0, #0
    18fc:	ldr	r0, [r0]
    1900:	movw	r1, #0
    1904:	movt	r1, #0
    1908:	bl	0 <fprintf>
    190c:	str	r0, [fp, #-28]	; 0xffffffe4
    1910:	bl	20bc <print_help>
    1914:	movw	r0, #1
    1918:	bl	0 <exit>
    191c:	b	1920 <handle_yaml_run_mode+0x324>
    1920:	b	1924 <handle_yaml_run_mode+0x328>
    1924:	b	1928 <handle_yaml_run_mode+0x32c>
    1928:	b	192c <handle_yaml_run_mode+0x330>
    192c:	b	1930 <handle_yaml_run_mode+0x334>
    1930:	b	1934 <handle_yaml_run_mode+0x338>
    1934:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1938:	add	r0, r0, #1
    193c:	str	r0, [fp, #-24]	; 0xffffffe8
    1940:	b	1664 <handle_yaml_run_mode+0x68>
    1944:	movw	r0, #0
    1948:	movt	r0, #0
    194c:	ldr	r0, [r0]
    1950:	movw	r1, #0
    1954:	cmp	r0, r1
    1958:	beq	1974 <handle_yaml_run_mode+0x378>
    195c:	movw	r0, #0
    1960:	movt	r0, #0
    1964:	ldr	r0, [r0]
    1968:	ldrb	r0, [r0]
    196c:	cmp	r0, #0
    1970:	bne	199c <handle_yaml_run_mode+0x3a0>
    1974:	movw	r0, #0
    1978:	movt	r0, #0
    197c:	ldr	r0, [r0]
    1980:	movw	r1, #0
    1984:	movt	r1, #0
    1988:	bl	0 <fprintf>
    198c:	str	r0, [sp, #32]
    1990:	bl	20bc <print_help>
    1994:	movw	r0, #1
    1998:	bl	0 <exit>
    199c:	bl	0 <coda_init>
    19a0:	cmp	r0, #0
    19a4:	beq	19f0 <handle_yaml_run_mode+0x3f4>
    19a8:	movw	r0, #0
    19ac:	movt	r0, #0
    19b0:	ldr	r0, [r0]
    19b4:	str	r0, [sp, #28]
    19b8:	bl	0 <coda_get_errno>
    19bc:	ldr	r0, [r0]
    19c0:	bl	0 <coda_errno_to_string>
    19c4:	ldr	lr, [sp, #28]
    19c8:	str	r0, [sp, #24]
    19cc:	mov	r0, lr
    19d0:	movw	r1, #0
    19d4:	movt	r1, #0
    19d8:	ldr	r2, [sp, #24]
    19dc:	bl	0 <fprintf>
    19e0:	movw	r1, #1
    19e4:	str	r0, [sp, #20]
    19e8:	mov	r0, r1
    19ec:	bl	0 <exit>
    19f0:	ldr	r0, [fp, #-12]
    19f4:	cmp	r0, #0
    19f8:	movw	r0, #0
    19fc:	movne	r0, #1
    1a00:	mvn	r1, #0
    1a04:	eor	r0, r0, r1
    1a08:	and	r0, r0, #1
    1a0c:	bl	0 <coda_set_option_bypass_special_types>
    1a10:	ldr	r1, [fp, #-16]
    1a14:	str	r0, [sp, #16]
    1a18:	mov	r0, r1
    1a1c:	bl	0 <coda_set_option_perform_conversions>
    1a20:	movw	r1, #0
    1a24:	movt	r1, #0
    1a28:	ldr	r1, [r1]
    1a2c:	movw	lr, #0
    1a30:	cmp	r1, lr
    1a34:	str	r0, [sp, #12]
    1a38:	beq	1aa8 <handle_yaml_run_mode+0x4ac>
    1a3c:	movw	r0, #0
    1a40:	movt	r0, #0
    1a44:	ldr	r0, [r0]
    1a48:	movw	r1, #0
    1a4c:	movt	r1, #0
    1a50:	bl	0 <fopen>
    1a54:	movw	r1, #0
    1a58:	movt	r1, #0
    1a5c:	str	r0, [r1]
    1a60:	ldr	r0, [r1]
    1a64:	movw	r1, #0
    1a68:	cmp	r0, r1
    1a6c:	bne	1aa4 <handle_yaml_run_mode+0x4a8>
    1a70:	movw	r0, #0
    1a74:	movt	r0, #0
    1a78:	ldr	r0, [r0]
    1a7c:	movw	r1, #0
    1a80:	movt	r1, #0
    1a84:	ldr	r2, [r1]
    1a88:	movw	r1, #0
    1a8c:	movt	r1, #0
    1a90:	bl	0 <fprintf>
    1a94:	movw	r1, #1
    1a98:	str	r0, [sp, #8]
    1a9c:	mov	r0, r1
    1aa0:	bl	0 <exit>
    1aa4:	b	1aa8 <handle_yaml_run_mode+0x4ac>
    1aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1aac:	bl	0 <print_yaml_data>
    1ab0:	movw	r0, #0
    1ab4:	movt	r0, #0
    1ab8:	ldr	r0, [r0]
    1abc:	movw	lr, #0
    1ac0:	cmp	r0, lr
    1ac4:	beq	1adc <handle_yaml_run_mode+0x4e0>
    1ac8:	movw	r0, #0
    1acc:	movt	r0, #0
    1ad0:	ldr	r0, [r0]
    1ad4:	bl	0 <fclose>
    1ad8:	str	r0, [sp, #4]
    1adc:	bl	0 <coda_done>
    1ae0:	mov	sp, fp
    1ae4:	pop	{fp, pc}

00001ae8 <handle_debug_run_mode>:
    1ae8:	push	{fp, lr}
    1aec:	mov	fp, sp
    1af0:	sub	sp, sp, #64	; 0x40
    1af4:	str	r0, [fp, #-4]
    1af8:	str	r1, [fp, #-8]
    1afc:	movw	r0, #0
    1b00:	str	r0, [fp, #-12]
    1b04:	str	r0, [fp, #-16]
    1b08:	str	r0, [fp, #-20]	; 0xffffffec
    1b0c:	movw	r1, #0
    1b10:	movt	r1, #0
    1b14:	str	r0, [r1]
    1b18:	movw	r1, #0
    1b1c:	movt	r1, #0
    1b20:	str	r0, [r1]
    1b24:	movw	r1, #0
    1b28:	movt	r1, #0
    1b2c:	str	r0, [r1]
    1b30:	movw	r1, #0
    1b34:	movt	r1, #0
    1b38:	ldr	r1, [r1]
    1b3c:	movw	r2, #0
    1b40:	movt	r2, #0
    1b44:	str	r1, [r2]
    1b48:	movw	r1, #1
    1b4c:	str	r1, [fp, #-24]	; 0xffffffe8
    1b50:	str	r0, [fp, #-28]	; 0xffffffe4
    1b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1b58:	ldr	r1, [fp, #-4]
    1b5c:	cmp	r0, r1
    1b60:	bge	1f28 <handle_debug_run_mode+0x440>
    1b64:	ldr	r0, [fp, #-8]
    1b68:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1b6c:	add	r0, r0, r1, lsl #2
    1b70:	ldr	r0, [r0]
    1b74:	movw	r1, #0
    1b78:	movt	r1, #0
    1b7c:	bl	0 <strcmp>
    1b80:	cmp	r0, #0
    1b84:	beq	1bac <handle_debug_run_mode+0xc4>
    1b88:	ldr	r0, [fp, #-8]
    1b8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1b90:	add	r0, r0, r1, lsl #2
    1b94:	ldr	r0, [r0]
    1b98:	movw	r1, #0
    1b9c:	movt	r1, #0
    1ba0:	bl	0 <strcmp>
    1ba4:	cmp	r0, #0
    1ba8:	bne	1bb8 <handle_debug_run_mode+0xd0>
    1bac:	movw	r0, #0
    1bb0:	str	r0, [fp, #-24]	; 0xffffffe8
    1bb4:	b	1f14 <handle_debug_run_mode+0x42c>
    1bb8:	ldr	r0, [fp, #-8]
    1bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1bc0:	add	r0, r0, r1, lsl #2
    1bc4:	ldr	r0, [r0]
    1bc8:	movw	r1, #0
    1bcc:	movt	r1, #0
    1bd0:	bl	0 <strcmp>
    1bd4:	cmp	r0, #0
    1bd8:	beq	1c00 <handle_debug_run_mode+0x118>
    1bdc:	ldr	r0, [fp, #-8]
    1be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1be4:	add	r0, r0, r1, lsl #2
    1be8:	ldr	r0, [r0]
    1bec:	movw	r1, #0
    1bf0:	movt	r1, #0
    1bf4:	bl	0 <strcmp>
    1bf8:	cmp	r0, #0
    1bfc:	bne	1c64 <handle_debug_run_mode+0x17c>
    1c00:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1c04:	add	r0, r0, #1
    1c08:	ldr	r1, [fp, #-4]
    1c0c:	cmp	r0, r1
    1c10:	bge	1c64 <handle_debug_run_mode+0x17c>
    1c14:	ldr	r0, [fp, #-8]
    1c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1c1c:	add	r1, r1, #1
    1c20:	add	r0, r0, r1, lsl #2
    1c24:	ldr	r0, [r0]
    1c28:	ldrb	r0, [r0]
    1c2c:	cmp	r0, #45	; 0x2d
    1c30:	beq	1c64 <handle_debug_run_mode+0x17c>
    1c34:	ldr	r0, [fp, #-8]
    1c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1c3c:	add	r1, r1, #1
    1c40:	add	r0, r0, r1, lsl #2
    1c44:	ldr	r0, [r0]
    1c48:	movw	r1, #0
    1c4c:	movt	r1, #0
    1c50:	str	r0, [r1]
    1c54:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1c58:	add	r0, r0, #1
    1c5c:	str	r0, [fp, #-28]	; 0xffffffe4
    1c60:	b	1f10 <handle_debug_run_mode+0x428>
    1c64:	ldr	r0, [fp, #-8]
    1c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1c6c:	add	r0, r0, r1, lsl #2
    1c70:	ldr	r0, [r0]
    1c74:	movw	r1, #0
    1c78:	movt	r1, #0
    1c7c:	bl	0 <strcmp>
    1c80:	cmp	r0, #0
    1c84:	beq	1cac <handle_debug_run_mode+0x1c4>
    1c88:	ldr	r0, [fp, #-8]
    1c8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1c90:	add	r0, r0, r1, lsl #2
    1c94:	ldr	r0, [r0]
    1c98:	movw	r1, #0
    1c9c:	movt	r1, #0
    1ca0:	bl	0 <strcmp>
    1ca4:	cmp	r0, #0
    1ca8:	bne	1d10 <handle_debug_run_mode+0x228>
    1cac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1cb0:	add	r0, r0, #1
    1cb4:	ldr	r1, [fp, #-4]
    1cb8:	cmp	r0, r1
    1cbc:	bge	1d10 <handle_debug_run_mode+0x228>
    1cc0:	ldr	r0, [fp, #-8]
    1cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1cc8:	add	r1, r1, #1
    1ccc:	add	r0, r0, r1, lsl #2
    1cd0:	ldr	r0, [r0]
    1cd4:	ldrb	r0, [r0]
    1cd8:	cmp	r0, #45	; 0x2d
    1cdc:	beq	1d10 <handle_debug_run_mode+0x228>
    1ce0:	ldr	r0, [fp, #-8]
    1ce4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1ce8:	add	r1, r1, #1
    1cec:	add	r0, r0, r1, lsl #2
    1cf0:	ldr	r0, [r0]
    1cf4:	movw	r1, #0
    1cf8:	movt	r1, #0
    1cfc:	str	r0, [r1]
    1d00:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1d04:	add	r0, r0, #1
    1d08:	str	r0, [fp, #-28]	; 0xffffffe4
    1d0c:	b	1f0c <handle_debug_run_mode+0x424>
    1d10:	ldr	r0, [fp, #-8]
    1d14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d18:	add	r0, r0, r1, lsl #2
    1d1c:	ldr	r0, [r0]
    1d20:	movw	r1, #0
    1d24:	movt	r1, #0
    1d28:	bl	0 <strcmp>
    1d2c:	cmp	r0, #0
    1d30:	bne	1d9c <handle_debug_run_mode+0x2b4>
    1d34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1d38:	add	r0, r0, #1
    1d3c:	ldr	r1, [fp, #-4]
    1d40:	cmp	r0, r1
    1d44:	bge	1d9c <handle_debug_run_mode+0x2b4>
    1d48:	ldr	r0, [fp, #-8]
    1d4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d50:	add	r1, r1, #1
    1d54:	add	r0, r0, r1, lsl #2
    1d58:	ldr	r0, [r0]
    1d5c:	ldrb	r0, [r0]
    1d60:	cmp	r0, #45	; 0x2d
    1d64:	beq	1d9c <handle_debug_run_mode+0x2b4>
    1d68:	ldr	r0, [fp, #-8]
    1d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d70:	add	r1, r1, #1
    1d74:	add	r0, r0, r1, lsl #2
    1d78:	ldr	r0, [r0]
    1d7c:	bl	0 <atoi>
    1d80:	movw	r1, #0
    1d84:	movt	r1, #0
    1d88:	str	r0, [r1]
    1d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1d90:	add	r0, r0, #1
    1d94:	str	r0, [fp, #-28]	; 0xffffffe4
    1d98:	b	1f08 <handle_debug_run_mode+0x420>
    1d9c:	ldr	r0, [fp, #-8]
    1da0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1da4:	add	r0, r0, r1, lsl #2
    1da8:	ldr	r0, [r0]
    1dac:	movw	r1, #0
    1db0:	movt	r1, #0
    1db4:	bl	0 <strcmp>
    1db8:	cmp	r0, #0
    1dbc:	bne	1e88 <handle_debug_run_mode+0x3a0>
    1dc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1dc4:	add	r0, r0, #3
    1dc8:	ldr	r1, [fp, #-4]
    1dcc:	cmp	r0, r1
    1dd0:	bge	1e88 <handle_debug_run_mode+0x3a0>
    1dd4:	ldr	r0, [fp, #-8]
    1dd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1ddc:	add	r1, r1, #1
    1de0:	add	r0, r0, r1, lsl #2
    1de4:	ldr	r0, [r0]
    1de8:	ldrb	r0, [r0]
    1dec:	cmp	r0, #45	; 0x2d
    1df0:	beq	1e88 <handle_debug_run_mode+0x3a0>
    1df4:	ldr	r0, [fp, #-8]
    1df8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1dfc:	add	r1, r1, #2
    1e00:	add	r0, r0, r1, lsl #2
    1e04:	ldr	r0, [r0]
    1e08:	ldrb	r0, [r0]
    1e0c:	cmp	r0, #45	; 0x2d
    1e10:	beq	1e88 <handle_debug_run_mode+0x3a0>
    1e14:	ldr	r0, [fp, #-8]
    1e18:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e1c:	add	r1, r1, #3
    1e20:	add	r0, r0, r1, lsl #2
    1e24:	ldr	r0, [r0]
    1e28:	ldrb	r0, [r0]
    1e2c:	cmp	r0, #45	; 0x2d
    1e30:	beq	1e88 <handle_debug_run_mode+0x3a0>
    1e34:	ldr	r0, [fp, #-8]
    1e38:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e3c:	add	r0, r0, r1, lsl #2
    1e40:	ldr	r0, [r0, #4]
    1e44:	str	r0, [fp, #-12]
    1e48:	ldr	r0, [fp, #-8]
    1e4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e50:	add	r0, r0, r1, lsl #2
    1e54:	ldr	r0, [r0, #8]
    1e58:	str	r0, [fp, #-16]
    1e5c:	ldr	r0, [fp, #-8]
    1e60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e64:	add	r1, r1, #3
    1e68:	add	r0, r0, r1, lsl #2
    1e6c:	ldr	r0, [r0]
    1e70:	bl	0 <atoi>
    1e74:	str	r0, [fp, #-20]	; 0xffffffec
    1e78:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1e7c:	add	r0, r0, #3
    1e80:	str	r0, [fp, #-28]	; 0xffffffe4
    1e84:	b	1f04 <handle_debug_run_mode+0x41c>
    1e88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1e8c:	ldr	r1, [fp, #-4]
    1e90:	sub	r1, r1, #1
    1e94:	cmp	r0, r1
    1e98:	bne	1ed8 <handle_debug_run_mode+0x3f0>
    1e9c:	ldr	r0, [fp, #-8]
    1ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1ea4:	add	r0, r0, r1, lsl #2
    1ea8:	ldr	r0, [r0]
    1eac:	ldrb	r0, [r0]
    1eb0:	cmp	r0, #45	; 0x2d
    1eb4:	beq	1ed8 <handle_debug_run_mode+0x3f0>
    1eb8:	ldr	r0, [fp, #-8]
    1ebc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1ec0:	add	r0, r0, r1, lsl #2
    1ec4:	ldr	r0, [r0]
    1ec8:	movw	r1, #0
    1ecc:	movt	r1, #0
    1ed0:	str	r0, [r1]
    1ed4:	b	1f00 <handle_debug_run_mode+0x418>
    1ed8:	movw	r0, #0
    1edc:	movt	r0, #0
    1ee0:	ldr	r0, [r0]
    1ee4:	movw	r1, #0
    1ee8:	movt	r1, #0
    1eec:	bl	0 <fprintf>
    1ef0:	str	r0, [sp, #32]
    1ef4:	bl	20bc <print_help>
    1ef8:	movw	r0, #1
    1efc:	bl	0 <exit>
    1f00:	b	1f04 <handle_debug_run_mode+0x41c>
    1f04:	b	1f08 <handle_debug_run_mode+0x420>
    1f08:	b	1f0c <handle_debug_run_mode+0x424>
    1f0c:	b	1f10 <handle_debug_run_mode+0x428>
    1f10:	b	1f14 <handle_debug_run_mode+0x42c>
    1f14:	b	1f18 <handle_debug_run_mode+0x430>
    1f18:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1f1c:	add	r0, r0, #1
    1f20:	str	r0, [fp, #-28]	; 0xffffffe4
    1f24:	b	1b54 <handle_debug_run_mode+0x6c>
    1f28:	movw	r0, #0
    1f2c:	movt	r0, #0
    1f30:	ldr	r0, [r0]
    1f34:	movw	r1, #0
    1f38:	cmp	r0, r1
    1f3c:	beq	1f58 <handle_debug_run_mode+0x470>
    1f40:	movw	r0, #0
    1f44:	movt	r0, #0
    1f48:	ldr	r0, [r0]
    1f4c:	ldrb	r0, [r0]
    1f50:	cmp	r0, #0
    1f54:	bne	1f80 <handle_debug_run_mode+0x498>
    1f58:	movw	r0, #0
    1f5c:	movt	r0, #0
    1f60:	ldr	r0, [r0]
    1f64:	movw	r1, #0
    1f68:	movt	r1, #0
    1f6c:	bl	0 <fprintf>
    1f70:	str	r0, [sp, #28]
    1f74:	bl	20bc <print_help>
    1f78:	movw	r0, #1
    1f7c:	bl	0 <exit>
    1f80:	bl	0 <coda_init>
    1f84:	cmp	r0, #0
    1f88:	beq	1fd4 <handle_debug_run_mode+0x4ec>
    1f8c:	movw	r0, #0
    1f90:	movt	r0, #0
    1f94:	ldr	r0, [r0]
    1f98:	str	r0, [sp, #24]
    1f9c:	bl	0 <coda_get_errno>
    1fa0:	ldr	r0, [r0]
    1fa4:	bl	0 <coda_errno_to_string>
    1fa8:	ldr	lr, [sp, #24]
    1fac:	str	r0, [sp, #20]
    1fb0:	mov	r0, lr
    1fb4:	movw	r1, #0
    1fb8:	movt	r1, #0
    1fbc:	ldr	r2, [sp, #20]
    1fc0:	bl	0 <fprintf>
    1fc4:	movw	r1, #1
    1fc8:	str	r0, [sp, #16]
    1fcc:	mov	r0, r1
    1fd0:	bl	0 <exit>
    1fd4:	movw	r0, #0
    1fd8:	bl	0 <coda_set_option_perform_conversions>
    1fdc:	ldr	lr, [fp, #-24]	; 0xffffffe8
    1fe0:	str	r0, [sp, #12]
    1fe4:	mov	r0, lr
    1fe8:	bl	0 <coda_set_option_use_fast_size_expressions>
    1fec:	movw	lr, #0
    1ff0:	movt	lr, #0
    1ff4:	ldr	lr, [lr]
    1ff8:	movw	r1, #0
    1ffc:	cmp	lr, r1
    2000:	str	r0, [sp, #8]
    2004:	beq	2074 <handle_debug_run_mode+0x58c>
    2008:	movw	r0, #0
    200c:	movt	r0, #0
    2010:	ldr	r0, [r0]
    2014:	movw	r1, #0
    2018:	movt	r1, #0
    201c:	bl	0 <fopen>
    2020:	movw	r1, #0
    2024:	movt	r1, #0
    2028:	str	r0, [r1]
    202c:	ldr	r0, [r1]
    2030:	movw	r1, #0
    2034:	cmp	r0, r1
    2038:	bne	2070 <handle_debug_run_mode+0x588>
    203c:	movw	r0, #0
    2040:	movt	r0, #0
    2044:	ldr	r0, [r0]
    2048:	movw	r1, #0
    204c:	movt	r1, #0
    2050:	ldr	r2, [r1]
    2054:	movw	r1, #0
    2058:	movt	r1, #0
    205c:	bl	0 <fprintf>
    2060:	movw	r1, #1
    2064:	str	r0, [sp, #4]
    2068:	mov	r0, r1
    206c:	bl	0 <exit>
    2070:	b	2074 <handle_debug_run_mode+0x58c>
    2074:	ldr	r0, [fp, #-12]
    2078:	ldr	r1, [fp, #-16]
    207c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2080:	bl	0 <print_debug_data>
    2084:	movw	r0, #0
    2088:	movt	r0, #0
    208c:	ldr	r0, [r0]
    2090:	movw	r1, #0
    2094:	cmp	r0, r1
    2098:	beq	20b0 <handle_debug_run_mode+0x5c8>
    209c:	movw	r0, #0
    20a0:	movt	r0, #0
    20a4:	ldr	r0, [r0]
    20a8:	bl	0 <fclose>
    20ac:	str	r0, [sp]
    20b0:	bl	0 <coda_done>
    20b4:	mov	sp, fp
    20b8:	pop	{fp, pc}

000020bc <print_help>:
    20bc:	push	{fp, lr}
    20c0:	mov	fp, sp
    20c4:	sub	sp, sp, #472	; 0x1d8
    20c8:	movw	r0, #0
    20cc:	movt	r0, #0
    20d0:	bl	0 <printf>
    20d4:	movw	lr, #0
    20d8:	movt	lr, #0
    20dc:	str	r0, [fp, #-4]
    20e0:	mov	r0, lr
    20e4:	bl	0 <printf>
    20e8:	movw	lr, #0
    20ec:	movt	lr, #0
    20f0:	str	r0, [fp, #-8]
    20f4:	mov	r0, lr
    20f8:	bl	0 <printf>
    20fc:	movw	lr, #0
    2100:	movt	lr, #0
    2104:	str	r0, [fp, #-12]
    2108:	mov	r0, lr
    210c:	bl	0 <printf>
    2110:	movw	lr, #0
    2114:	movt	lr, #0
    2118:	str	r0, [fp, #-16]
    211c:	mov	r0, lr
    2120:	bl	0 <printf>
    2124:	movw	lr, #0
    2128:	movt	lr, #0
    212c:	str	r0, [fp, #-20]	; 0xffffffec
    2130:	mov	r0, lr
    2134:	bl	0 <printf>
    2138:	movw	lr, #0
    213c:	movt	lr, #0
    2140:	str	r0, [fp, #-24]	; 0xffffffe8
    2144:	mov	r0, lr
    2148:	bl	0 <printf>
    214c:	movw	lr, #0
    2150:	movt	lr, #0
    2154:	str	r0, [fp, #-28]	; 0xffffffe4
    2158:	mov	r0, lr
    215c:	bl	0 <printf>
    2160:	movw	lr, #0
    2164:	movt	lr, #0
    2168:	str	r0, [fp, #-32]	; 0xffffffe0
    216c:	mov	r0, lr
    2170:	bl	0 <printf>
    2174:	movw	lr, #0
    2178:	movt	lr, #0
    217c:	str	r0, [fp, #-36]	; 0xffffffdc
    2180:	mov	r0, lr
    2184:	bl	0 <printf>
    2188:	movw	lr, #0
    218c:	movt	lr, #0
    2190:	str	r0, [fp, #-40]	; 0xffffffd8
    2194:	mov	r0, lr
    2198:	bl	0 <printf>
    219c:	movw	lr, #0
    21a0:	movt	lr, #0
    21a4:	str	r0, [fp, #-44]	; 0xffffffd4
    21a8:	mov	r0, lr
    21ac:	bl	0 <printf>
    21b0:	movw	lr, #0
    21b4:	movt	lr, #0
    21b8:	str	r0, [fp, #-48]	; 0xffffffd0
    21bc:	mov	r0, lr
    21c0:	bl	0 <printf>
    21c4:	movw	lr, #0
    21c8:	movt	lr, #0
    21cc:	str	r0, [fp, #-52]	; 0xffffffcc
    21d0:	mov	r0, lr
    21d4:	bl	0 <printf>
    21d8:	movw	lr, #0
    21dc:	movt	lr, #0
    21e0:	str	r0, [fp, #-56]	; 0xffffffc8
    21e4:	mov	r0, lr
    21e8:	bl	0 <printf>
    21ec:	movw	lr, #0
    21f0:	movt	lr, #0
    21f4:	str	r0, [fp, #-60]	; 0xffffffc4
    21f8:	mov	r0, lr
    21fc:	bl	0 <printf>
    2200:	movw	lr, #0
    2204:	movt	lr, #0
    2208:	str	r0, [fp, #-64]	; 0xffffffc0
    220c:	mov	r0, lr
    2210:	bl	0 <printf>
    2214:	movw	lr, #0
    2218:	movt	lr, #0
    221c:	str	r0, [fp, #-68]	; 0xffffffbc
    2220:	mov	r0, lr
    2224:	bl	0 <printf>
    2228:	movw	lr, #0
    222c:	movt	lr, #0
    2230:	str	r0, [fp, #-72]	; 0xffffffb8
    2234:	mov	r0, lr
    2238:	bl	0 <printf>
    223c:	movw	lr, #0
    2240:	movt	lr, #0
    2244:	str	r0, [fp, #-76]	; 0xffffffb4
    2248:	mov	r0, lr
    224c:	bl	0 <printf>
    2250:	movw	lr, #0
    2254:	movt	lr, #0
    2258:	str	r0, [fp, #-80]	; 0xffffffb0
    225c:	mov	r0, lr
    2260:	bl	0 <printf>
    2264:	movw	lr, #0
    2268:	movt	lr, #0
    226c:	str	r0, [fp, #-84]	; 0xffffffac
    2270:	mov	r0, lr
    2274:	bl	0 <printf>
    2278:	movw	lr, #0
    227c:	movt	lr, #0
    2280:	str	r0, [fp, #-88]	; 0xffffffa8
    2284:	mov	r0, lr
    2288:	bl	0 <printf>
    228c:	movw	lr, #0
    2290:	movt	lr, #0
    2294:	str	r0, [fp, #-92]	; 0xffffffa4
    2298:	mov	r0, lr
    229c:	bl	0 <printf>
    22a0:	movw	lr, #0
    22a4:	movt	lr, #0
    22a8:	str	r0, [fp, #-96]	; 0xffffffa0
    22ac:	mov	r0, lr
    22b0:	bl	0 <printf>
    22b4:	movw	lr, #0
    22b8:	movt	lr, #0
    22bc:	str	r0, [fp, #-100]	; 0xffffff9c
    22c0:	mov	r0, lr
    22c4:	bl	0 <printf>
    22c8:	movw	lr, #0
    22cc:	movt	lr, #0
    22d0:	str	r0, [fp, #-104]	; 0xffffff98
    22d4:	mov	r0, lr
    22d8:	bl	0 <printf>
    22dc:	movw	lr, #0
    22e0:	movt	lr, #0
    22e4:	str	r0, [fp, #-108]	; 0xffffff94
    22e8:	mov	r0, lr
    22ec:	bl	0 <printf>
    22f0:	movw	lr, #0
    22f4:	movt	lr, #0
    22f8:	str	r0, [fp, #-112]	; 0xffffff90
    22fc:	mov	r0, lr
    2300:	bl	0 <printf>
    2304:	movw	lr, #0
    2308:	movt	lr, #0
    230c:	str	r0, [fp, #-116]	; 0xffffff8c
    2310:	mov	r0, lr
    2314:	bl	0 <printf>
    2318:	movw	lr, #0
    231c:	movt	lr, #0
    2320:	str	r0, [fp, #-120]	; 0xffffff88
    2324:	mov	r0, lr
    2328:	bl	0 <printf>
    232c:	movw	lr, #0
    2330:	movt	lr, #0
    2334:	str	r0, [fp, #-124]	; 0xffffff84
    2338:	mov	r0, lr
    233c:	bl	0 <printf>
    2340:	movw	lr, #0
    2344:	movt	lr, #0
    2348:	str	r0, [fp, #-128]	; 0xffffff80
    234c:	mov	r0, lr
    2350:	bl	0 <printf>
    2354:	movw	lr, #0
    2358:	movt	lr, #0
    235c:	str	r0, [fp, #-132]	; 0xffffff7c
    2360:	mov	r0, lr
    2364:	bl	0 <printf>
    2368:	movw	lr, #0
    236c:	movt	lr, #0
    2370:	str	r0, [fp, #-136]	; 0xffffff78
    2374:	mov	r0, lr
    2378:	bl	0 <printf>
    237c:	movw	lr, #0
    2380:	movt	lr, #0
    2384:	str	r0, [fp, #-140]	; 0xffffff74
    2388:	mov	r0, lr
    238c:	bl	0 <printf>
    2390:	movw	lr, #0
    2394:	movt	lr, #0
    2398:	str	r0, [fp, #-144]	; 0xffffff70
    239c:	mov	r0, lr
    23a0:	bl	0 <printf>
    23a4:	movw	lr, #0
    23a8:	movt	lr, #0
    23ac:	str	r0, [fp, #-148]	; 0xffffff6c
    23b0:	mov	r0, lr
    23b4:	bl	0 <printf>
    23b8:	movw	lr, #0
    23bc:	movt	lr, #0
    23c0:	str	r0, [fp, #-152]	; 0xffffff68
    23c4:	mov	r0, lr
    23c8:	bl	0 <printf>
    23cc:	movw	lr, #0
    23d0:	movt	lr, #0
    23d4:	str	r0, [fp, #-156]	; 0xffffff64
    23d8:	mov	r0, lr
    23dc:	bl	0 <printf>
    23e0:	movw	lr, #0
    23e4:	movt	lr, #0
    23e8:	str	r0, [fp, #-160]	; 0xffffff60
    23ec:	mov	r0, lr
    23f0:	bl	0 <printf>
    23f4:	movw	lr, #0
    23f8:	movt	lr, #0
    23fc:	str	r0, [fp, #-164]	; 0xffffff5c
    2400:	mov	r0, lr
    2404:	bl	0 <printf>
    2408:	movw	lr, #0
    240c:	movt	lr, #0
    2410:	str	r0, [fp, #-168]	; 0xffffff58
    2414:	mov	r0, lr
    2418:	bl	0 <printf>
    241c:	movw	lr, #0
    2420:	movt	lr, #0
    2424:	str	r0, [fp, #-172]	; 0xffffff54
    2428:	mov	r0, lr
    242c:	bl	0 <printf>
    2430:	movw	lr, #0
    2434:	movt	lr, #0
    2438:	str	r0, [fp, #-176]	; 0xffffff50
    243c:	mov	r0, lr
    2440:	bl	0 <printf>
    2444:	movw	lr, #0
    2448:	movt	lr, #0
    244c:	str	r0, [fp, #-180]	; 0xffffff4c
    2450:	mov	r0, lr
    2454:	bl	0 <printf>
    2458:	movw	lr, #0
    245c:	movt	lr, #0
    2460:	str	r0, [fp, #-184]	; 0xffffff48
    2464:	mov	r0, lr
    2468:	bl	0 <printf>
    246c:	movw	lr, #0
    2470:	movt	lr, #0
    2474:	str	r0, [fp, #-188]	; 0xffffff44
    2478:	mov	r0, lr
    247c:	bl	0 <printf>
    2480:	movw	lr, #0
    2484:	movt	lr, #0
    2488:	str	r0, [fp, #-192]	; 0xffffff40
    248c:	mov	r0, lr
    2490:	bl	0 <printf>
    2494:	movw	lr, #0
    2498:	movt	lr, #0
    249c:	str	r0, [fp, #-196]	; 0xffffff3c
    24a0:	mov	r0, lr
    24a4:	bl	0 <printf>
    24a8:	movw	lr, #0
    24ac:	movt	lr, #0
    24b0:	str	r0, [fp, #-200]	; 0xffffff38
    24b4:	mov	r0, lr
    24b8:	bl	0 <printf>
    24bc:	movw	lr, #0
    24c0:	movt	lr, #0
    24c4:	str	r0, [fp, #-204]	; 0xffffff34
    24c8:	mov	r0, lr
    24cc:	bl	0 <printf>
    24d0:	movw	lr, #0
    24d4:	movt	lr, #0
    24d8:	str	r0, [fp, #-208]	; 0xffffff30
    24dc:	mov	r0, lr
    24e0:	bl	0 <printf>
    24e4:	movw	lr, #0
    24e8:	movt	lr, #0
    24ec:	str	r0, [fp, #-212]	; 0xffffff2c
    24f0:	mov	r0, lr
    24f4:	bl	0 <printf>
    24f8:	movw	lr, #0
    24fc:	movt	lr, #0
    2500:	str	r0, [fp, #-216]	; 0xffffff28
    2504:	mov	r0, lr
    2508:	bl	0 <printf>
    250c:	movw	lr, #0
    2510:	movt	lr, #0
    2514:	str	r0, [fp, #-220]	; 0xffffff24
    2518:	mov	r0, lr
    251c:	bl	0 <printf>
    2520:	movw	lr, #0
    2524:	movt	lr, #0
    2528:	str	r0, [fp, #-224]	; 0xffffff20
    252c:	mov	r0, lr
    2530:	bl	0 <printf>
    2534:	movw	lr, #0
    2538:	movt	lr, #0
    253c:	str	r0, [fp, #-228]	; 0xffffff1c
    2540:	mov	r0, lr
    2544:	bl	0 <printf>
    2548:	movw	lr, #0
    254c:	movt	lr, #0
    2550:	str	r0, [fp, #-232]	; 0xffffff18
    2554:	mov	r0, lr
    2558:	bl	0 <printf>
    255c:	movw	lr, #0
    2560:	movt	lr, #0
    2564:	str	r0, [sp, #236]	; 0xec
    2568:	mov	r0, lr
    256c:	bl	0 <printf>
    2570:	movw	lr, #0
    2574:	movt	lr, #0
    2578:	str	r0, [sp, #232]	; 0xe8
    257c:	mov	r0, lr
    2580:	bl	0 <printf>
    2584:	movw	lr, #0
    2588:	movt	lr, #0
    258c:	str	r0, [sp, #228]	; 0xe4
    2590:	mov	r0, lr
    2594:	bl	0 <printf>
    2598:	movw	lr, #0
    259c:	movt	lr, #0
    25a0:	str	r0, [sp, #224]	; 0xe0
    25a4:	mov	r0, lr
    25a8:	bl	0 <printf>
    25ac:	movw	lr, #0
    25b0:	movt	lr, #0
    25b4:	str	r0, [sp, #220]	; 0xdc
    25b8:	mov	r0, lr
    25bc:	bl	0 <printf>
    25c0:	movw	lr, #0
    25c4:	movt	lr, #0
    25c8:	str	r0, [sp, #216]	; 0xd8
    25cc:	mov	r0, lr
    25d0:	bl	0 <printf>
    25d4:	movw	lr, #0
    25d8:	movt	lr, #0
    25dc:	str	r0, [sp, #212]	; 0xd4
    25e0:	mov	r0, lr
    25e4:	bl	0 <printf>
    25e8:	movw	lr, #0
    25ec:	movt	lr, #0
    25f0:	str	r0, [sp, #208]	; 0xd0
    25f4:	mov	r0, lr
    25f8:	bl	0 <printf>
    25fc:	movw	lr, #0
    2600:	movt	lr, #0
    2604:	str	r0, [sp, #204]	; 0xcc
    2608:	mov	r0, lr
    260c:	bl	0 <printf>
    2610:	movw	lr, #0
    2614:	movt	lr, #0
    2618:	str	r0, [sp, #200]	; 0xc8
    261c:	mov	r0, lr
    2620:	bl	0 <printf>
    2624:	movw	lr, #0
    2628:	movt	lr, #0
    262c:	str	r0, [sp, #196]	; 0xc4
    2630:	mov	r0, lr
    2634:	bl	0 <printf>
    2638:	movw	lr, #0
    263c:	movt	lr, #0
    2640:	str	r0, [sp, #192]	; 0xc0
    2644:	mov	r0, lr
    2648:	bl	0 <printf>
    264c:	movw	lr, #0
    2650:	movt	lr, #0
    2654:	str	r0, [sp, #188]	; 0xbc
    2658:	mov	r0, lr
    265c:	bl	0 <printf>
    2660:	movw	lr, #0
    2664:	movt	lr, #0
    2668:	str	r0, [sp, #184]	; 0xb8
    266c:	mov	r0, lr
    2670:	bl	0 <printf>
    2674:	movw	lr, #0
    2678:	movt	lr, #0
    267c:	str	r0, [sp, #180]	; 0xb4
    2680:	mov	r0, lr
    2684:	bl	0 <printf>
    2688:	movw	lr, #0
    268c:	movt	lr, #0
    2690:	str	r0, [sp, #176]	; 0xb0
    2694:	mov	r0, lr
    2698:	bl	0 <printf>
    269c:	movw	lr, #0
    26a0:	movt	lr, #0
    26a4:	str	r0, [sp, #172]	; 0xac
    26a8:	mov	r0, lr
    26ac:	bl	0 <printf>
    26b0:	movw	lr, #0
    26b4:	movt	lr, #0
    26b8:	str	r0, [sp, #168]	; 0xa8
    26bc:	mov	r0, lr
    26c0:	bl	0 <printf>
    26c4:	movw	lr, #0
    26c8:	movt	lr, #0
    26cc:	str	r0, [sp, #164]	; 0xa4
    26d0:	mov	r0, lr
    26d4:	bl	0 <printf>
    26d8:	movw	lr, #0
    26dc:	movt	lr, #0
    26e0:	str	r0, [sp, #160]	; 0xa0
    26e4:	mov	r0, lr
    26e8:	bl	0 <printf>
    26ec:	movw	lr, #0
    26f0:	movt	lr, #0
    26f4:	str	r0, [sp, #156]	; 0x9c
    26f8:	mov	r0, lr
    26fc:	bl	0 <printf>
    2700:	movw	lr, #0
    2704:	movt	lr, #0
    2708:	str	r0, [sp, #152]	; 0x98
    270c:	mov	r0, lr
    2710:	bl	0 <printf>
    2714:	movw	lr, #0
    2718:	movt	lr, #0
    271c:	str	r0, [sp, #148]	; 0x94
    2720:	mov	r0, lr
    2724:	bl	0 <printf>
    2728:	movw	lr, #0
    272c:	movt	lr, #0
    2730:	str	r0, [sp, #144]	; 0x90
    2734:	mov	r0, lr
    2738:	bl	0 <printf>
    273c:	movw	lr, #0
    2740:	movt	lr, #0
    2744:	str	r0, [sp, #140]	; 0x8c
    2748:	mov	r0, lr
    274c:	bl	0 <printf>
    2750:	movw	lr, #0
    2754:	movt	lr, #0
    2758:	str	r0, [sp, #136]	; 0x88
    275c:	mov	r0, lr
    2760:	bl	0 <printf>
    2764:	movw	lr, #0
    2768:	movt	lr, #0
    276c:	str	r0, [sp, #132]	; 0x84
    2770:	mov	r0, lr
    2774:	bl	0 <printf>
    2778:	movw	lr, #0
    277c:	movt	lr, #0
    2780:	str	r0, [sp, #128]	; 0x80
    2784:	mov	r0, lr
    2788:	bl	0 <printf>
    278c:	movw	lr, #0
    2790:	movt	lr, #0
    2794:	str	r0, [sp, #124]	; 0x7c
    2798:	mov	r0, lr
    279c:	bl	0 <printf>
    27a0:	movw	lr, #0
    27a4:	movt	lr, #0
    27a8:	str	r0, [sp, #120]	; 0x78
    27ac:	mov	r0, lr
    27b0:	bl	0 <printf>
    27b4:	movw	lr, #0
    27b8:	movt	lr, #0
    27bc:	str	r0, [sp, #116]	; 0x74
    27c0:	mov	r0, lr
    27c4:	bl	0 <printf>
    27c8:	movw	lr, #0
    27cc:	movt	lr, #0
    27d0:	str	r0, [sp, #112]	; 0x70
    27d4:	mov	r0, lr
    27d8:	bl	0 <printf>
    27dc:	movw	lr, #0
    27e0:	movt	lr, #0
    27e4:	str	r0, [sp, #108]	; 0x6c
    27e8:	mov	r0, lr
    27ec:	bl	0 <printf>
    27f0:	movw	lr, #0
    27f4:	movt	lr, #0
    27f8:	str	r0, [sp, #104]	; 0x68
    27fc:	mov	r0, lr
    2800:	bl	0 <printf>
    2804:	movw	lr, #0
    2808:	movt	lr, #0
    280c:	str	r0, [sp, #100]	; 0x64
    2810:	mov	r0, lr
    2814:	bl	0 <printf>
    2818:	movw	lr, #0
    281c:	movt	lr, #0
    2820:	str	r0, [sp, #96]	; 0x60
    2824:	mov	r0, lr
    2828:	bl	0 <printf>
    282c:	movw	lr, #0
    2830:	movt	lr, #0
    2834:	str	r0, [sp, #92]	; 0x5c
    2838:	mov	r0, lr
    283c:	bl	0 <printf>
    2840:	movw	lr, #0
    2844:	movt	lr, #0
    2848:	str	r0, [sp, #88]	; 0x58
    284c:	mov	r0, lr
    2850:	bl	0 <printf>
    2854:	movw	lr, #0
    2858:	movt	lr, #0
    285c:	str	r0, [sp, #84]	; 0x54
    2860:	mov	r0, lr
    2864:	bl	0 <printf>
    2868:	movw	lr, #0
    286c:	movt	lr, #0
    2870:	str	r0, [sp, #80]	; 0x50
    2874:	mov	r0, lr
    2878:	bl	0 <printf>
    287c:	movw	lr, #0
    2880:	movt	lr, #0
    2884:	str	r0, [sp, #76]	; 0x4c
    2888:	mov	r0, lr
    288c:	bl	0 <printf>
    2890:	movw	lr, #0
    2894:	movt	lr, #0
    2898:	str	r0, [sp, #72]	; 0x48
    289c:	mov	r0, lr
    28a0:	bl	0 <printf>
    28a4:	movw	lr, #0
    28a8:	movt	lr, #0
    28ac:	str	r0, [sp, #68]	; 0x44
    28b0:	mov	r0, lr
    28b4:	bl	0 <printf>
    28b8:	movw	lr, #0
    28bc:	movt	lr, #0
    28c0:	str	r0, [sp, #64]	; 0x40
    28c4:	mov	r0, lr
    28c8:	bl	0 <printf>
    28cc:	movw	lr, #0
    28d0:	movt	lr, #0
    28d4:	str	r0, [sp, #60]	; 0x3c
    28d8:	mov	r0, lr
    28dc:	bl	0 <printf>
    28e0:	movw	lr, #0
    28e4:	movt	lr, #0
    28e8:	str	r0, [sp, #56]	; 0x38
    28ec:	mov	r0, lr
    28f0:	bl	0 <printf>
    28f4:	movw	lr, #0
    28f8:	movt	lr, #0
    28fc:	str	r0, [sp, #52]	; 0x34
    2900:	mov	r0, lr
    2904:	bl	0 <printf>
    2908:	movw	lr, #0
    290c:	movt	lr, #0
    2910:	str	r0, [sp, #48]	; 0x30
    2914:	mov	r0, lr
    2918:	bl	0 <printf>
    291c:	movw	lr, #0
    2920:	movt	lr, #0
    2924:	str	r0, [sp, #44]	; 0x2c
    2928:	mov	r0, lr
    292c:	bl	0 <printf>
    2930:	movw	lr, #0
    2934:	movt	lr, #0
    2938:	str	r0, [sp, #40]	; 0x28
    293c:	mov	r0, lr
    2940:	bl	0 <printf>
    2944:	movw	lr, #0
    2948:	movt	lr, #0
    294c:	str	r0, [sp, #36]	; 0x24
    2950:	mov	r0, lr
    2954:	bl	0 <printf>
    2958:	movw	lr, #0
    295c:	movt	lr, #0
    2960:	str	r0, [sp, #32]
    2964:	mov	r0, lr
    2968:	bl	0 <printf>
    296c:	movw	lr, #0
    2970:	movt	lr, #0
    2974:	str	r0, [sp, #28]
    2978:	mov	r0, lr
    297c:	bl	0 <printf>
    2980:	movw	lr, #0
    2984:	movt	lr, #0
    2988:	str	r0, [sp, #24]
    298c:	mov	r0, lr
    2990:	bl	0 <printf>
    2994:	movw	lr, #0
    2998:	movt	lr, #0
    299c:	str	r0, [sp, #20]
    29a0:	mov	r0, lr
    29a4:	bl	0 <printf>
    29a8:	movw	lr, #0
    29ac:	movt	lr, #0
    29b0:	str	r0, [sp, #16]
    29b4:	mov	r0, lr
    29b8:	bl	0 <printf>
    29bc:	movw	lr, #0
    29c0:	movt	lr, #0
    29c4:	str	r0, [sp, #12]
    29c8:	mov	r0, lr
    29cc:	bl	0 <printf>
    29d0:	movw	lr, #0
    29d4:	movt	lr, #0
    29d8:	str	r0, [sp, #8]
    29dc:	mov	r0, lr
    29e0:	bl	0 <printf>
    29e4:	movw	lr, #0
    29e8:	movt	lr, #0
    29ec:	str	r0, [sp, #4]
    29f0:	mov	r0, lr
    29f4:	bl	0 <printf>
    29f8:	str	r0, [sp]
    29fc:	mov	sp, fp
    2a00:	pop	{fp, pc}

00002a04 <print_version>:
    2a04:	push	{fp, lr}
    2a08:	mov	fp, sp
    2a0c:	sub	sp, sp, #16
    2a10:	bl	0 <coda_get_libcoda_version>
    2a14:	movw	lr, #0
    2a18:	movt	lr, #0
    2a1c:	str	r0, [fp, #-4]
    2a20:	mov	r0, lr
    2a24:	ldr	r1, [fp, #-4]
    2a28:	bl	0 <printf>
    2a2c:	movw	r1, #0
    2a30:	movt	r1, #0
    2a34:	str	r0, [sp, #8]
    2a38:	mov	r0, r1
    2a3c:	bl	0 <printf>
    2a40:	movw	r1, #0
    2a44:	movt	r1, #0
    2a48:	str	r0, [sp, #4]
    2a4c:	mov	r0, r1
    2a50:	bl	0 <printf>
    2a54:	str	r0, [sp]
    2a58:	mov	sp, fp
    2a5c:	pop	{fp, pc}
