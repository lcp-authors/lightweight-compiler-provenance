
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_default_error_out>:
       0:	movw	r3, #0
       4:	movt	r3, #0
       8:	mov	r0, r1
       c:	mov	r1, #1
      10:	ldr	r3, [r3]
      14:	b	0 <fwrite>

00000018 <__destroy_scope_item>:
      18:	add	r0, r1, #4
      1c:	b	0 <fb_symbol_table_clear>

00000020 <checkmem.part.1>:
      20:	movw	r3, #0
      24:	movt	r3, #0
      28:	str	r4, [sp, #-8]!
      2c:	movw	r0, #0
      30:	movt	r0, #0
      34:	ldr	r3, [r3]
      38:	mov	r2, #34	; 0x22
      3c:	mov	r1, #1
      40:	str	lr, [sp, #4]
      44:	bl	0 <fwrite>
      48:	mov	r0, #1
      4c:	bl	0 <exit>

00000050 <push_token>:
      50:	ldr	ip, [r0, #28]
      54:	strd	r4, [sp, #-24]!	; 0xffffffe8
      58:	mov	r4, r0
      5c:	ldr	r0, [r0, #20]
      60:	strd	r6, [sp, #8]
      64:	mov	r7, r1
      68:	mov	r6, r2
      6c:	ldr	r1, [r4, #40]	; 0x28
      70:	add	r5, ip, ip, lsl #2
      74:	str	r8, [sp, #16]
      78:	mov	r8, r3
      7c:	str	lr, [sp, #20]
      80:	add	r5, r0, r5, lsl #2
      84:	cmp	r5, r1
      88:	str	r5, [r4, #24]
      8c:	beq	d0 <push_token+0x80>
      90:	ldr	r2, [r4, #60]	; 0x3c
      94:	sub	r8, r8, r6
      98:	add	r3, r1, #20
      9c:	ldr	r0, [r4, #64]	; 0x40
      a0:	stm	r1, {r6, r8}
      a4:	ldr	r8, [sp, #16]
      a8:	sub	r6, r6, r2
      ac:	add	r6, r6, #1
      b0:	str	r0, [r1, #8]
      b4:	str	r6, [r1, #12]
      b8:	str	r7, [r1, #16]
      bc:	str	r3, [r4, #40]	; 0x28
      c0:	ldrd	r4, [sp]
      c4:	ldrd	r6, [sp, #8]
      c8:	add	sp, sp, #20
      cc:	pop	{pc}		; (ldr pc, [sp], #4)
      d0:	cmp	ip, #0
      d4:	sub	r5, r5, r0
      d8:	moveq	r1, #20480	; 0x5000
      dc:	moveq	r3, #1024	; 0x400
      e0:	bne	110 <push_token+0xc0>
      e4:	str	r3, [r4, #28]
      e8:	bl	0 <realloc>
      ec:	cmp	r0, #0
      f0:	str	r0, [r4, #20]
      f4:	beq	120 <push_token+0xd0>
      f8:	ldr	r3, [r4, #28]
      fc:	add	r1, r0, r5
     100:	add	r3, r3, r3, lsl #2
     104:	add	r0, r0, r3, lsl #2
     108:	str	r0, [r4, #24]
     10c:	b	90 <push_token+0x40>
     110:	lsl	r3, ip, #1
     114:	add	r1, r3, ip, lsl #3
     118:	lsl	r1, r1, #2
     11c:	b	e4 <push_token+0x94>
     120:	bl	20 <checkmem.part.1>

00000124 <next>:
     124:	ldr	ip, [r0, #40]	; 0x28
     128:	strd	r4, [sp, #-16]!
     12c:	mov	r4, r0
     130:	str	r6, [sp, #8]
     134:	ldr	r6, [r0, #24]
     138:	str	lr, [sp, #12]
     13c:	add	r5, ip, #20
     140:	mov	r1, ip
     144:	str	r5, [r0, #40]	; 0x28
     148:	cmp	r5, r6
     14c:	beq	200 <next+0xdc>
     150:	ldr	r3, [ip, #36]	; 0x24
     154:	cmn	r3, #964	; 0x3c4
     158:	bne	1ec <next+0xc8>
     15c:	mov	ip, r5
     160:	ldr	r2, [r0, #52]	; 0x34
     164:	b	19c <next+0x78>
     168:	ldr	r0, [r4, #36]	; 0x24
     16c:	mov	r1, ip
     170:	str	r2, [r4, #52]	; 0x34
     174:	stm	r3, {r0, r5}
     178:	add	r5, ip, #20
     17c:	cmp	r5, r6
     180:	mov	ip, r5
     184:	str	r3, [r4, #36]	; 0x24
     188:	str	r5, [r4, #40]	; 0x28
     18c:	beq	200 <next+0xdc>
     190:	ldr	r3, [r1, #36]	; 0x24
     194:	cmn	r3, #964	; 0x3c4
     198:	bne	1ec <next+0xc8>
     19c:	ldr	r3, [r4, #44]	; 0x2c
     1a0:	add	r1, r2, #16
     1a4:	cmp	r1, r3
     1a8:	movls	r3, r2
     1ac:	movls	r2, r1
     1b0:	bls	168 <next+0x44>
     1b4:	mov	r1, #1
     1b8:	mov	r0, #65536	; 0x10000
     1bc:	bl	0 <calloc>
     1c0:	cmp	r0, #0
     1c4:	beq	224 <next+0x100>
     1c8:	ldr	r1, [r4, #48]	; 0x30
     1cc:	add	ip, r0, #65536	; 0x10000
     1d0:	add	r3, r0, #16
     1d4:	add	r2, r0, #32
     1d8:	str	ip, [r4, #44]	; 0x2c
     1dc:	str	r0, [r4, #48]	; 0x30
     1e0:	ldr	ip, [r4, #40]	; 0x28
     1e4:	str	r1, [r0]
     1e8:	b	168 <next+0x44>
     1ec:	mov	r0, r5
     1f0:	ldrd	r4, [sp]
     1f4:	ldr	r6, [sp, #8]
     1f8:	add	sp, sp, #12
     1fc:	pop	{pc}		; (ldr pc, [sp], #4)
     200:	movw	r3, #0
     204:	movt	r3, #0
     208:	str	r1, [r4, #40]	; 0x28
     20c:	movw	r0, #0
     210:	movt	r0, #0
     214:	movw	r1, #0
     218:	movt	r1, #0
     21c:	movw	r2, #341	; 0x155
     220:	bl	0 <__assert_fail>
     224:	movw	r3, #0
     228:	movt	r3, #0
     22c:	movw	r0, #0
     230:	movt	r0, #0
     234:	ldr	r3, [r3]
     238:	mov	r2, #34	; 0x22
     23c:	mov	r1, #1
     240:	bl	0 <fwrite>
     244:	mov	r0, #1
     248:	bl	0 <exit>

0000024c <recover2.constprop.9>:
     24c:	ldr	r3, [r0, #40]	; 0x28
     250:	ldr	r3, [r3, #16]
     254:	cmp	r3, #0
     258:	bxeq	lr
     25c:	str	r4, [sp, #-8]!
     260:	mov	r4, r0
     264:	str	lr, [sp, #4]
     268:	b	28c <recover2.constprop.9+0x40>
     26c:	cmp	r3, #125	; 0x7d
     270:	beq	2b0 <recover2.constprop.9+0x64>
     274:	mov	r0, r4
     278:	bl	124 <next>
     27c:	ldr	r3, [r4, #40]	; 0x28
     280:	ldr	r3, [r3, #16]
     284:	cmp	r3, #0
     288:	beq	2a4 <recover2.constprop.9+0x58>
     28c:	cmp	r3, #59	; 0x3b
     290:	bne	26c <recover2.constprop.9+0x20>
     294:	mov	r0, r4
     298:	bl	124 <next>
     29c:	mov	r3, #0
     2a0:	str	r3, [r4, #36]	; 0x24
     2a4:	ldr	r4, [sp]
     2a8:	add	sp, sp, #4
     2ac:	pop	{pc}		; (ldr pc, [sp], #4)
     2b0:	mov	r3, #0
     2b4:	str	r3, [r4, #36]	; 0x24
     2b8:	ldr	r4, [sp]
     2bc:	add	sp, sp, #4
     2c0:	pop	{pc}		; (ldr pc, [sp], #4)

000002c4 <recover.constprop.10>:
     2c4:	ldr	r3, [r0, #40]	; 0x28
     2c8:	ldr	r3, [r3, #16]
     2cc:	cmp	r3, #0
     2d0:	bxeq	lr
     2d4:	cmp	r1, r3
     2d8:	strd	r4, [sp, #-16]!
     2dc:	mov	r5, r1
     2e0:	mov	r4, r0
     2e4:	str	r6, [sp, #8]
     2e8:	str	lr, [sp, #12]
     2ec:	bne	2fc <recover.constprop.10+0x38>
     2f0:	b	324 <recover.constprop.10+0x60>
     2f4:	cmp	r5, r3
     2f8:	beq	324 <recover.constprop.10+0x60>
     2fc:	mov	r0, r4
     300:	bl	124 <next>
     304:	ldr	r3, [r4, #40]	; 0x28
     308:	ldr	r3, [r3, #16]
     30c:	cmp	r3, #0
     310:	bne	2f4 <recover.constprop.10+0x30>
     314:	ldrd	r4, [sp]
     318:	ldr	r6, [sp, #8]
     31c:	add	sp, sp, #12
     320:	pop	{pc}		; (ldr pc, [sp], #4)
     324:	mov	r0, r4
     328:	bl	124 <next>
     32c:	mov	r3, #0
     330:	ldr	r6, [sp, #8]
     334:	str	r3, [r4, #36]	; 0x24
     338:	ldrd	r4, [sp]
     33c:	add	sp, sp, #12
     340:	pop	{pc}		; (ldr pc, [sp], #4)

00000344 <__flatcc_fb_print_error>:
     344:	push	{r1, r2, r3}
     348:	mov	r1, #200	; 0xc8
     34c:	strd	r4, [sp, #-12]!
     350:	mov	r5, r0
     354:	str	lr, [sp, #8]
     358:	sub	sp, sp, #208	; 0xd0
     35c:	add	ip, sp, #224	; 0xe0
     360:	add	r0, sp, #8
     364:	ldr	r2, [sp, #220]	; 0xdc
     368:	mov	r3, ip
     36c:	str	ip, [sp, #4]
     370:	bl	0 <vsnprintf>
     374:	cmp	r0, #199	; 0xc7
     378:	movle	r4, r0
     37c:	bgt	3b0 <__flatcc_fb_print_error+0x6c>
     380:	ldr	r3, [r5, #8]
     384:	add	r1, sp, #8
     388:	mov	r2, r4
     38c:	ldr	r0, [r5, #12]
     390:	blx	r3
     394:	mov	r0, r4
     398:	add	sp, sp, #208	; 0xd0
     39c:	ldrd	r4, [sp]
     3a0:	ldr	lr, [sp, #8]
     3a4:	add	sp, sp, #12
     3a8:	add	sp, sp, #12
     3ac:	bx	lr
     3b0:	movw	r3, #0
     3b4:	movt	r3, #0
     3b8:	ldrb	r2, [r3, #4]
     3bc:	mov	r4, #199	; 0xc7
     3c0:	ldr	r3, [r3]
     3c4:	str	r3, [sp, #203]	; 0xcb
     3c8:	strb	r2, [sp, #207]	; 0xcf
     3cc:	b	380 <__flatcc_fb_print_error+0x3c>

000003d0 <__flatcc_error_find_file_of_token>:
     3d0:	cmp	r0, #0
     3d4:	beq	3fc <__flatcc_error_find_file_of_token+0x2c>
     3d8:	ldr	r3, [r0, #20]
     3dc:	cmp	r3, r1
     3e0:	bhi	3f0 <__flatcc_error_find_file_of_token+0x20>
     3e4:	ldr	r3, [r0, #24]
     3e8:	cmp	r3, r1
     3ec:	bhi	408 <__flatcc_error_find_file_of_token+0x38>
     3f0:	ldr	r0, [r0]
     3f4:	cmp	r0, #0
     3f8:	bne	3d8 <__flatcc_error_find_file_of_token+0x8>
     3fc:	movw	r0, #0
     400:	movt	r0, #0
     404:	bx	lr
     408:	ldr	r0, [r0, #520]	; 0x208
     40c:	bx	lr

00000410 <__flatcc_error_report>:
     410:	strd	r4, [sp, #-24]!	; 0xffffffe8
     414:	mov	r4, r0
     418:	mov	r0, r3
     41c:	strd	r6, [sp, #8]
     420:	adds	r6, r1, #0
     424:	mov	ip, r1
     428:	str	r8, [sp, #16]
     42c:	movne	r6, #1
     430:	mov	r5, r2
     434:	str	lr, [sp, #20]
     438:	sub	sp, sp, #40	; 0x28
     43c:	ldr	lr, [sp, #64]	; 0x40
     440:	ldr	r1, [sp, #68]	; 0x44
     444:	cmp	lr, #0
     448:	moveq	r3, r6
     44c:	movne	r3, #0
     450:	cmp	r3, #0
     454:	movw	r3, #0
     458:	movt	r3, #0
     45c:	ldrne	lr, [ip]
     460:	ldrne	r1, [ip, #4]
     464:	cmp	r2, #0
     468:	moveq	r5, r3
     46c:	cmp	lr, #0
     470:	moveq	r1, lr
     474:	moveq	lr, r3
     478:	cmp	r0, #0
     47c:	moveq	r3, r6
     480:	movne	r3, #0
     484:	cmp	r3, #0
     488:	beq	50c <__flatcc_error_report+0xfc>
     48c:	cmp	r4, #0
     490:	beq	4bc <__flatcc_error_report+0xac>
     494:	mov	r3, r4
     498:	ldr	r2, [r3, #20]
     49c:	cmp	ip, r2
     4a0:	bcc	4b0 <__flatcc_error_report+0xa0>
     4a4:	ldr	r2, [r3, #24]
     4a8:	cmp	ip, r2
     4ac:	bcc	668 <__flatcc_error_report+0x258>
     4b0:	ldr	r3, [r3]
     4b4:	cmp	r3, #0
     4b8:	bne	498 <__flatcc_error_report+0x88>
     4bc:	movw	r2, #0
     4c0:	movt	r2, #0
     4c4:	stmib	sp, {r1, lr}
     4c8:	mov	r0, r4
     4cc:	movw	r1, #0
     4d0:	movt	r1, #0
     4d4:	str	r5, [sp, #12]
     4d8:	ldr	r3, [ip, #12]
     4dc:	str	r3, [sp]
     4e0:	ldr	r3, [ip, #8]
     4e4:	bl	344 <__flatcc_fb_print_error>
     4e8:	ldr	r3, [r4, #108]	; 0x6c
     4ec:	add	r3, r3, #1
     4f0:	str	r3, [r4, #108]	; 0x6c
     4f4:	add	sp, sp, #40	; 0x28
     4f8:	ldrd	r4, [sp]
     4fc:	ldrd	r6, [sp, #8]
     500:	ldr	r8, [sp, #16]
     504:	add	sp, sp, #20
     508:	pop	{pc}		; (ldr pc, [sp], #4)
     50c:	cmp	r0, #0
     510:	moveq	r6, #0
     514:	cmp	r6, #0
     518:	beq	5d4 <__flatcc_error_report+0x1c4>
     51c:	cmp	r4, #0
     520:	beq	69c <__flatcc_error_report+0x28c>
     524:	mov	r3, r4
     528:	ldr	r2, [r3, #20]
     52c:	cmp	ip, r2
     530:	bcc	540 <__flatcc_error_report+0x130>
     534:	ldr	r2, [r3, #24]
     538:	cmp	ip, r2
     53c:	bcc	670 <__flatcc_error_report+0x260>
     540:	ldr	r3, [r3]
     544:	cmp	r3, #0
     548:	bne	528 <__flatcc_error_report+0x118>
     54c:	movw	r2, #0
     550:	movt	r2, #0
     554:	mov	r3, r4
     558:	ldr	r6, [r3, #20]
     55c:	cmp	r0, r6
     560:	bcc	570 <__flatcc_error_report+0x160>
     564:	ldr	r6, [r3, #24]
     568:	cmp	r0, r6
     56c:	bcc	678 <__flatcc_error_report+0x268>
     570:	ldr	r3, [r3]
     574:	cmp	r3, #0
     578:	bne	558 <__flatcc_error_report+0x148>
     57c:	movw	r3, #0
     580:	movt	r3, #0
     584:	ldr	r6, [r0]
     588:	str	r1, [sp, #4]
     58c:	movw	r1, #0
     590:	movt	r1, #0
     594:	ldr	r8, [r0, #4]
     598:	str	lr, [sp, #8]
     59c:	ldr	r7, [r0, #8]
     5a0:	str	r5, [sp, #12]
     5a4:	ldr	lr, [r0, #12]
     5a8:	mov	r0, r4
     5ac:	str	r3, [sp, #16]
     5b0:	str	r7, [sp, #20]
     5b4:	str	r8, [sp, #28]
     5b8:	str	lr, [sp, #24]
     5bc:	str	r6, [sp, #32]
     5c0:	ldr	r3, [ip, #12]
     5c4:	str	r3, [sp]
     5c8:	ldr	r3, [ip, #8]
     5cc:	bl	344 <__flatcc_fb_print_error>
     5d0:	b	4e8 <__flatcc_error_report+0xd8>
     5d4:	orrs	r3, ip, r0
     5d8:	beq	650 <__flatcc_error_report+0x240>
     5dc:	cmp	r0, #0
     5e0:	beq	688 <__flatcc_error_report+0x278>
     5e4:	cmp	r4, #0
     5e8:	beq	614 <__flatcc_error_report+0x204>
     5ec:	mov	r3, r4
     5f0:	ldr	r2, [r3, #20]
     5f4:	cmp	r0, r2
     5f8:	bcc	608 <__flatcc_error_report+0x1f8>
     5fc:	ldr	r2, [r3, #24]
     600:	cmp	r0, r2
     604:	bcc	680 <__flatcc_error_report+0x270>
     608:	ldr	r3, [r3]
     60c:	cmp	r3, #0
     610:	bne	5f0 <__flatcc_error_report+0x1e0>
     614:	movw	r3, #0
     618:	movt	r3, #0
     61c:	ldr	ip, [r0]
     620:	mov	r2, r5
     624:	movw	r1, #0
     628:	movt	r1, #0
     62c:	ldmib	r0, {r5, lr}
     630:	str	ip, [sp, #12]
     634:	ldr	ip, [r0, #12]
     638:	mov	r0, r4
     63c:	str	lr, [sp]
     640:	str	ip, [sp, #4]
     644:	str	r5, [sp, #8]
     648:	bl	344 <__flatcc_fb_print_error>
     64c:	b	4e8 <__flatcc_error_report+0xd8>
     650:	mov	r2, r5
     654:	movw	r1, #0
     658:	movt	r1, #0
     65c:	mov	r0, r4
     660:	bl	344 <__flatcc_fb_print_error>
     664:	b	4e8 <__flatcc_error_report+0xd8>
     668:	ldr	r2, [r3, #520]	; 0x208
     66c:	b	4c4 <__flatcc_error_report+0xb4>
     670:	ldr	r2, [r3, #520]	; 0x208
     674:	b	554 <__flatcc_error_report+0x144>
     678:	ldr	r3, [r3, #520]	; 0x208
     67c:	b	584 <__flatcc_error_report+0x174>
     680:	ldr	r3, [r3, #520]	; 0x208
     684:	b	61c <__flatcc_error_report+0x20c>
     688:	movw	r1, #0
     68c:	movt	r1, #0
     690:	mov	r0, r4
     694:	bl	344 <__flatcc_fb_print_error>
     698:	b	4e8 <__flatcc_error_report+0xd8>
     69c:	movw	r2, #0
     6a0:	movt	r2, #0
     6a4:	mov	r3, r2
     6a8:	b	584 <__flatcc_error_report+0x174>

000006ac <parse_ref>:
     6ac:	ldr	r3, [r0, #52]	; 0x34
     6b0:	strd	r4, [sp, #-16]!
     6b4:	mov	r5, r1
     6b8:	mov	r4, r0
     6bc:	ldr	r1, [r0, #44]	; 0x2c
     6c0:	str	r6, [sp, #8]
     6c4:	str	lr, [sp, #12]
     6c8:	sub	sp, sp, #8
     6cc:	add	r2, r3, #16
     6d0:	ldr	r6, [r0, #40]	; 0x28
     6d4:	cmp	r2, r1
     6d8:	bhi	770 <parse_ref+0xc4>
     6dc:	mov	r0, r4
     6e0:	str	r2, [r4, #52]	; 0x34
     6e4:	str	r6, [r3, #4]
     6e8:	str	r3, [r5]
     6ec:	bl	124 <next>
     6f0:	ldr	r3, [r4, #40]	; 0x28
     6f4:	ldr	r3, [r3, #16]
     6f8:	cmp	r3, #46	; 0x2e
     6fc:	beq	714 <parse_ref+0x68>
     700:	add	sp, sp, #8
     704:	ldrd	r4, [sp]
     708:	ldr	r6, [sp, #8]
     70c:	add	sp, sp, #12
     710:	pop	{pc}		; (ldr pc, [sp], #4)
     714:	ldr	r6, [r5]
     718:	mov	r0, r4
     71c:	bl	124 <next>
     720:	ldr	r5, [r4, #40]	; 0x28
     724:	ldr	r3, [r5, #16]
     728:	cmp	r3, #9
     72c:	bne	7d8 <parse_ref+0x12c>
     730:	ldr	r1, [r4, #44]	; 0x2c
     734:	ldr	r3, [r4, #52]	; 0x34
     738:	add	r2, r3, #16
     73c:	cmp	r2, r1
     740:	bhi	7a4 <parse_ref+0xf8>
     744:	mov	r0, r4
     748:	str	r2, [r4, #52]	; 0x34
     74c:	str	r5, [r3, #4]
     750:	str	r3, [r6]
     754:	mov	r6, r3
     758:	bl	124 <next>
     75c:	ldr	r3, [r4, #40]	; 0x28
     760:	ldr	r3, [r3, #16]
     764:	cmp	r3, #46	; 0x2e
     768:	bne	700 <parse_ref+0x54>
     76c:	b	718 <parse_ref+0x6c>
     770:	mov	r1, #1
     774:	mov	r0, #65536	; 0x10000
     778:	bl	0 <calloc>
     77c:	cmp	r0, #0
     780:	beq	800 <parse_ref+0x154>
     784:	ldr	r1, [r4, #48]	; 0x30
     788:	add	ip, r0, #65536	; 0x10000
     78c:	add	r3, r0, #16
     790:	add	r2, r0, #32
     794:	str	ip, [r4, #44]	; 0x2c
     798:	str	r0, [r4, #48]	; 0x30
     79c:	str	r1, [r0]
     7a0:	b	6dc <parse_ref+0x30>
     7a4:	mov	r1, #1
     7a8:	mov	r0, #65536	; 0x10000
     7ac:	bl	0 <calloc>
     7b0:	cmp	r0, #0
     7b4:	beq	800 <parse_ref+0x154>
     7b8:	ldr	r1, [r4, #48]	; 0x30
     7bc:	add	ip, r0, #65536	; 0x10000
     7c0:	add	r3, r0, #16
     7c4:	add	r2, r0, #32
     7c8:	str	ip, [r4, #44]	; 0x2c
     7cc:	str	r0, [r4, #48]	; 0x30
     7d0:	str	r1, [r0]
     7d4:	b	744 <parse_ref+0x98>
     7d8:	mov	ip, #0
     7dc:	mov	r1, r5
     7e0:	mov	r0, r4
     7e4:	mov	r3, ip
     7e8:	movw	r2, #0
     7ec:	movt	r2, #0
     7f0:	str	ip, [sp]
     7f4:	str	ip, [sp, #4]
     7f8:	bl	410 <__flatcc_error_report>
     7fc:	b	700 <parse_ref+0x54>
     800:	bl	20 <checkmem.part.1>

00000804 <advance>:
     804:	strd	r4, [sp, #-12]!
     808:	ldr	r5, [r0, #40]	; 0x28
     80c:	ldr	ip, [r5, #16]
     810:	str	lr, [sp, #8]
     814:	mov	lr, #0
     818:	sub	sp, sp, #12
     81c:	str	lr, [r0, #36]	; 0x24
     820:	cmp	ip, r1
     824:	bne	83c <advance+0x38>
     828:	add	sp, sp, #12
     82c:	ldrd	r4, [sp]
     830:	ldr	lr, [sp, #8]
     834:	add	sp, sp, #12
     838:	b	124 <next>
     83c:	mov	r4, r0
     840:	mov	r1, r5
     844:	str	lr, [sp]
     848:	str	lr, [sp, #4]
     84c:	bl	410 <__flatcc_error_report>
     850:	ldr	r0, [r4, #40]	; 0x28
     854:	add	sp, sp, #12
     858:	ldrd	r4, [sp]
     85c:	add	sp, sp, #8
     860:	pop	{pc}		; (ldr pc, [sp], #4)

00000864 <parse_type>:
     864:	strd	r4, [sp, #-20]!	; 0xffffffec
     868:	mov	r3, #1
     86c:	mov	r4, r0
     870:	strd	r6, [sp, #8]
     874:	mov	r7, r1
     878:	ldr	r6, [r0, #40]	; 0x28
     87c:	str	lr, [sp, #16]
     880:	sub	sp, sp, #12
     884:	strh	r3, [r1, #8]
     888:	ldr	r3, [r6, #16]
     88c:	cmp	r3, #91	; 0x5b
     890:	beq	a5c <parse_type+0x1f8>
     894:	cmn	r3, #984	; 0x3d8
     898:	ble	920 <parse_type+0xbc>
     89c:	movw	r2, #64562	; 0xfc32
     8a0:	movt	r2, #65535	; 0xffff
     8a4:	cmp	r3, r2
     8a8:	beq	b90 <parse_type+0x32c>
     8ac:	ble	a30 <parse_type+0x1cc>
     8b0:	cmp	r3, #9
     8b4:	beq	b7c <parse_type+0x318>
     8b8:	cmp	r3, #93	; 0x5d
     8bc:	moveq	r5, #0
     8c0:	beq	adc <parse_type+0x278>
     8c4:	cmn	r3, #972	; 0x3cc
     8c8:	beq	94c <parse_type+0xe8>
     8cc:	mov	r5, #0
     8d0:	movw	r2, #0
     8d4:	movt	r2, #0
     8d8:	mov	ip, #0
     8dc:	mov	r3, ip
     8e0:	mov	r1, ip
     8e4:	str	ip, [sp]
     8e8:	mov	r0, r4
     8ec:	str	ip, [sp, #4]
     8f0:	bl	410 <__flatcc_error_report>
     8f4:	ldr	r3, [r4, #40]	; 0x28
     8f8:	ldr	r3, [r3, #16]
     8fc:	cmp	r3, #93	; 0x5d
     900:	beq	974 <parse_type+0x110>
     904:	cmp	r5, #0
     908:	bne	988 <parse_type+0x124>
     90c:	add	sp, sp, #12
     910:	ldrd	r4, [sp]
     914:	ldrd	r6, [sp, #8]
     918:	add	sp, sp, #16
     91c:	pop	{pc}		; (ldr pc, [sp], #4)
     920:	mvn	r2, #984	; 0x3d8
     924:	cmp	r3, r2
     928:	bge	94c <parse_type+0xe8>
     92c:	cmn	r3, #988	; 0x3dc
     930:	bge	a10 <parse_type+0x1ac>
     934:	cmn	r3, #996	; 0x3e4
     938:	bge	94c <parse_type+0xe8>
     93c:	add	r3, r3, #996	; 0x3e4
     940:	add	r3, r3, #3
     944:	cmp	r3, #1
     948:	bhi	8cc <parse_type+0x68>
     94c:	mov	r5, #0
     950:	mov	r3, #8
     954:	str	r6, [r7]
     958:	mov	r0, r4
     95c:	strh	r3, [r7, #8]
     960:	bl	124 <next>
     964:	ldr	r3, [r4, #40]	; 0x28
     968:	ldr	r3, [r3, #16]
     96c:	cmp	r3, #93	; 0x5d
     970:	bne	904 <parse_type+0xa0>
     974:	sub	r5, r5, #1
     978:	mov	r0, r4
     97c:	bl	124 <next>
     980:	cmn	r5, #1
     984:	bne	8f4 <parse_type+0x90>
     988:	mov	r5, #0
     98c:	mov	r3, r6
     990:	movw	r2, #0
     994:	movt	r2, #0
     998:	mov	r1, r5
     99c:	mov	r0, r4
     9a0:	str	r5, [sp]
     9a4:	str	r5, [sp, #4]
     9a8:	bl	410 <__flatcc_error_report>
     9ac:	ldr	r7, [r4, #40]	; 0x28
     9b0:	ldr	r3, [r7, #16]
     9b4:	cmp	r3, #93	; 0x5d
     9b8:	bne	90c <parse_type+0xa8>
     9bc:	mov	r0, r4
     9c0:	bl	124 <next>
     9c4:	mov	r3, r6
     9c8:	mov	r1, r7
     9cc:	str	r5, [sp]
     9d0:	movw	r2, #0
     9d4:	movt	r2, #0
     9d8:	str	r5, [sp, #4]
     9dc:	mov	r0, r4
     9e0:	bl	410 <__flatcc_error_report>
     9e4:	ldr	r3, [r4, #40]	; 0x28
     9e8:	ldr	r3, [r3, #16]
     9ec:	cmp	r3, #93	; 0x5d
     9f0:	bne	90c <parse_type+0xa8>
     9f4:	mov	r0, r4
     9f8:	bl	124 <next>
     9fc:	ldr	r3, [r4, #40]	; 0x28
     a00:	ldr	r3, [r3, #16]
     a04:	cmp	r3, #93	; 0x5d
     a08:	bne	90c <parse_type+0xa8>
     a0c:	b	9f4 <parse_type+0x190>
     a10:	movw	r2, #64549	; 0xfc25
     a14:	movt	r2, #65535	; 0xffff
     a18:	cmp	r3, r2
     a1c:	bne	8cc <parse_type+0x68>
     a20:	mov	r5, #0
     a24:	mov	r3, #8
     a28:	str	r6, [r7]
     a2c:	b	958 <parse_type+0xf4>
     a30:	movw	r2, #64554	; 0xfc2a
     a34:	movt	r2, #65535	; 0xffff
     a38:	cmp	r3, r2
     a3c:	blt	8cc <parse_type+0x68>
     a40:	cmn	r3, #976	; 0x3d0
     a44:	blt	94c <parse_type+0xe8>
     a48:	movw	r2, #64561	; 0xfc31
     a4c:	movt	r2, #65535	; 0xffff
     a50:	cmp	r3, r2
     a54:	bne	8cc <parse_type+0x68>
     a58:	b	94c <parse_type+0xe8>
     a5c:	mov	r5, #0
     a60:	mov	r0, r4
     a64:	add	r5, r5, #1
     a68:	bl	124 <next>
     a6c:	ldr	r2, [r4, #40]	; 0x28
     a70:	ldr	r3, [r2, #16]
     a74:	cmp	r3, #91	; 0x5b
     a78:	beq	a60 <parse_type+0x1fc>
     a7c:	cmp	r5, #1
     a80:	beq	bcc <parse_type+0x368>
     a84:	mov	ip, #0
     a88:	movw	r2, #0
     a8c:	movt	r2, #0
     a90:	mov	r3, ip
     a94:	mov	r1, r6
     a98:	mov	r0, r4
     a9c:	str	ip, [sp]
     aa0:	str	ip, [sp, #4]
     aa4:	bl	410 <__flatcc_error_report>
     aa8:	ldr	r2, [r4, #40]	; 0x28
     aac:	ldr	r3, [r2, #16]
     ab0:	cmn	r3, #984	; 0x3d8
     ab4:	ble	aec <parse_type+0x288>
     ab8:	movw	r1, #64562	; 0xfc32
     abc:	movt	r1, #65535	; 0xffff
     ac0:	cmp	r3, r1
     ac4:	beq	bc0 <parse_type+0x35c>
     ac8:	ble	b28 <parse_type+0x2c4>
     acc:	cmp	r3, #9
     ad0:	beq	bac <parse_type+0x348>
     ad4:	cmp	r3, #93	; 0x5d
     ad8:	bne	b1c <parse_type+0x2b8>
     adc:	movw	r2, #0
     ae0:	movt	r2, #0
     ae4:	mov	ip, #0
     ae8:	b	8dc <parse_type+0x78>
     aec:	mvn	r1, #984	; 0x3d8
     af0:	cmp	r3, r1
     af4:	bge	b50 <parse_type+0x2ec>
     af8:	cmn	r3, #988	; 0x3dc
     afc:	bge	b68 <parse_type+0x304>
     b00:	cmn	r3, #996	; 0x3e4
     b04:	bge	b50 <parse_type+0x2ec>
     b08:	add	r3, r3, #996	; 0x3e4
     b0c:	add	r3, r3, #3
     b10:	cmp	r3, #1
     b14:	bhi	8d0 <parse_type+0x6c>
     b18:	b	b50 <parse_type+0x2ec>
     b1c:	cmn	r3, #972	; 0x3cc
     b20:	bne	8d0 <parse_type+0x6c>
     b24:	b	b50 <parse_type+0x2ec>
     b28:	movw	r1, #64554	; 0xfc2a
     b2c:	movt	r1, #65535	; 0xffff
     b30:	cmp	r3, r1
     b34:	blt	8d0 <parse_type+0x6c>
     b38:	cmn	r3, #976	; 0x3d0
     b3c:	blt	b50 <parse_type+0x2ec>
     b40:	movw	r1, #64561	; 0xfc31
     b44:	movt	r1, #65535	; 0xffff
     b48:	cmp	r3, r1
     b4c:	bne	8d0 <parse_type+0x6c>
     b50:	mov	r3, #7
     b54:	mov	r0, r4
     b58:	str	r2, [r7]
     b5c:	strh	r3, [r7, #8]
     b60:	bl	124 <next>
     b64:	b	964 <parse_type+0x100>
     b68:	movw	r1, #64549	; 0xfc25
     b6c:	movt	r1, #65535	; 0xffff
     b70:	cmp	r3, r1
     b74:	bne	8d0 <parse_type+0x6c>
     b78:	b	b50 <parse_type+0x2ec>
     b7c:	bl	6ac <parse_ref>
     b80:	mov	r5, #0
     b84:	mov	r3, #12
     b88:	strh	r3, [r7, #8]
     b8c:	b	8f4 <parse_type+0x90>
     b90:	mov	r3, #10
     b94:	mov	r0, r4
     b98:	str	r6, [r1]
     b9c:	mov	r5, #0
     ba0:	strh	r3, [r7, #8]
     ba4:	bl	124 <next>
     ba8:	b	964 <parse_type+0x100>
     bac:	mov	r1, r7
     bb0:	mov	r0, r4
     bb4:	bl	6ac <parse_ref>
     bb8:	mov	r3, #11
     bbc:	b	b88 <parse_type+0x324>
     bc0:	mov	r3, #9
     bc4:	str	r2, [r7]
     bc8:	b	958 <parse_type+0xf4>
     bcc:	cmn	r3, #984	; 0x3d8
     bd0:	ble	c0c <parse_type+0x3a8>
     bd4:	movw	r1, #64562	; 0xfc32
     bd8:	movt	r1, #65535	; 0xffff
     bdc:	cmp	r3, r1
     be0:	beq	bc0 <parse_type+0x35c>
     be4:	ble	c3c <parse_type+0x3d8>
     be8:	cmp	r3, #9
     bec:	beq	bac <parse_type+0x348>
     bf0:	cmp	r3, #93	; 0x5d
     bf4:	beq	adc <parse_type+0x278>
     bf8:	cmn	r3, #972	; 0x3cc
     bfc:	bne	8d0 <parse_type+0x6c>
     c00:	mov	r3, #7
     c04:	str	r2, [r7]
     c08:	b	958 <parse_type+0xf4>
     c0c:	mvn	r1, #984	; 0x3d8
     c10:	cmp	r3, r1
     c14:	bge	c00 <parse_type+0x39c>
     c18:	cmn	r3, #988	; 0x3dc
     c1c:	bge	c68 <parse_type+0x404>
     c20:	cmn	r3, #996	; 0x3e4
     c24:	bge	c00 <parse_type+0x39c>
     c28:	add	r3, r3, #996	; 0x3e4
     c2c:	add	r3, r3, #3
     c30:	cmp	r3, #1
     c34:	bhi	8d0 <parse_type+0x6c>
     c38:	b	c00 <parse_type+0x39c>
     c3c:	movw	r1, #64554	; 0xfc2a
     c40:	movt	r1, #65535	; 0xffff
     c44:	cmp	r3, r1
     c48:	blt	8d0 <parse_type+0x6c>
     c4c:	cmn	r3, #976	; 0x3d0
     c50:	blt	c00 <parse_type+0x39c>
     c54:	movw	r1, #64561	; 0xfc31
     c58:	movt	r1, #65535	; 0xffff
     c5c:	cmp	r3, r1
     c60:	beq	c00 <parse_type+0x39c>
     c64:	b	8d0 <parse_type+0x6c>
     c68:	movw	r1, #64549	; 0xfc25
     c6c:	movt	r1, #65535	; 0xffff
     c70:	cmp	r3, r1
     c74:	bne	8d0 <parse_type+0x6c>
     c78:	b	c00 <parse_type+0x39c>

00000c7c <parse_string_literal.part.7>:
     c7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
     c80:	mov	r4, r0
     c84:	mov	r5, r1
     c88:	strd	r6, [sp, #8]
     c8c:	movw	r7, #0
     c90:	movt	r7, #0
     c94:	movw	r6, #0
     c98:	movt	r6, #0
     c9c:	str	r8, [sp, #16]
     ca0:	movw	r8, #0
     ca4:	movt	r8, #0
     ca8:	str	lr, [sp, #20]
     cac:	sub	sp, sp, #8
     cb0:	ldr	r1, [r4, #40]	; 0x28
     cb4:	ldr	r3, [r1, #16]
     cb8:	sub	r3, r3, #6
     cbc:	cmp	r3, #17
     cc0:	ldrls	pc, [pc, r3, lsl #2]
     cc4:	b	d10 <parse_string_literal.part.7+0x94>
     cc8:	.word	0x00000df8
     ccc:	.word	0x00000d10
     cd0:	.word	0x00000d10
     cd4:	.word	0x00000d10
     cd8:	.word	0x00000d10
     cdc:	.word	0x00000d10
     ce0:	.word	0x00000d10
     ce4:	.word	0x00000d10
     ce8:	.word	0x00000d10
     cec:	.word	0x00000d10
     cf0:	.word	0x00000d10
     cf4:	.word	0x00000d10
     cf8:	.word	0x00000dd0
     cfc:	.word	0x00000d10
     d00:	.word	0x00000db8
     d04:	.word	0x00000d84
     d08:	.word	0x00000d3c
     d0c:	.word	0x00000d3c
     d10:	mov	ip, #0
     d14:	movw	r2, #0
     d18:	movt	r2, #0
     d1c:	mov	r3, ip
     d20:	mov	r0, r4
     d24:	str	ip, [sp]
     d28:	str	ip, [sp, #4]
     d2c:	bl	410 <__flatcc_error_report>
     d30:	mov	r3, #1
     d34:	ldr	r1, [r4, #40]	; 0x28
     d38:	strh	r3, [r5, #8]
     d3c:	ldr	r2, [r5]
     d40:	cmp	r2, #0
     d44:	beq	d58 <parse_string_literal.part.7+0xdc>
     d48:	ldr	r3, [r1]
     d4c:	sub	r3, r3, r2
     d50:	str	r3, [r5, #4]
     d54:	ldr	r1, [r4, #40]	; 0x28
     d58:	ldr	r3, [r1, #16]
     d5c:	cmp	r3, #22
     d60:	bne	e18 <parse_string_literal.part.7+0x19c>
     d64:	mov	r0, r4
     d68:	add	sp, sp, #8
     d6c:	ldrd	r4, [sp]
     d70:	ldrd	r6, [sp, #8]
     d74:	ldr	r8, [sp, #16]
     d78:	ldr	lr, [sp, #20]
     d7c:	add	sp, sp, #24
     d80:	b	124 <next>
     d84:	mov	r0, #0
     d88:	mov	ip, #1
     d8c:	mov	r3, r0
     d90:	movw	r2, #0
     d94:	movt	r2, #0
     d98:	str	r0, [sp]
     d9c:	str	r0, [sp, #4]
     da0:	mov	r0, r4
     da4:	strh	ip, [r5, #8]
     da8:	bl	410 <__flatcc_error_report>
     dac:	mov	r0, r4
     db0:	bl	124 <next>
     db4:	b	cb0 <parse_string_literal.part.7+0x34>
     db8:	ldr	r3, [r5]
     dbc:	cmp	r3, #0
     dc0:	bne	dac <parse_string_literal.part.7+0x130>
     dc4:	ldr	r3, [r1]
     dc8:	str	r3, [r5]
     dcc:	b	dac <parse_string_literal.part.7+0x130>
     dd0:	mov	r0, #0
     dd4:	mov	ip, #1
     dd8:	mov	r3, r0
     ddc:	mov	r2, r8
     de0:	str	r0, [sp]
     de4:	str	r0, [sp, #4]
     de8:	mov	r0, r4
     dec:	strh	ip, [r5, #8]
     df0:	bl	410 <__flatcc_error_report>
     df4:	b	dac <parse_string_literal.part.7+0x130>
     df8:	mov	ip, #1
     dfc:	mov	r3, #0
     e00:	mov	r2, r6
     e04:	mov	r0, r4
     e08:	stm	sp, {r7, ip}
     e0c:	strh	ip, [r5, #8]
     e10:	bl	410 <__flatcc_error_report>
     e14:	b	dac <parse_string_literal.part.7+0x130>
     e18:	mov	ip, #0
     e1c:	mov	r0, r4
     e20:	mov	r3, ip
     e24:	movw	r2, #0
     e28:	movt	r2, #0
     e2c:	str	ip, [sp]
     e30:	str	ip, [sp, #4]
     e34:	bl	410 <__flatcc_error_report>
     e38:	mov	r3, #1
     e3c:	strh	r3, [r5, #8]
     e40:	add	sp, sp, #8
     e44:	ldrd	r4, [sp]
     e48:	ldrd	r6, [sp, #8]
     e4c:	ldr	r8, [sp, #16]
     e50:	add	sp, sp, #20
     e54:	pop	{pc}		; (ldr pc, [sp], #4)

00000e58 <parse_value>:
     e58:	strd	r4, [sp, #-36]!	; 0xffffffdc
     e5c:	strd	r6, [sp, #8]
     e60:	mov	r7, r0
     e64:	ldr	r6, [r0, #40]	; 0x28
     e68:	strd	r8, [sp, #16]
     e6c:	mov	r8, r1
     e70:	strd	sl, [sp, #24]
     e74:	mov	fp, r3
     e78:	mov	sl, r2
     e7c:	str	lr, [sp, #32]
     e80:	sub	sp, sp, #68	; 0x44
     e84:	ldr	r3, [r6, #16]
     e88:	cmp	r3, #45	; 0x2d
     e8c:	beq	fd0 <parse_value+0x178>
     e90:	cmp	r3, #10
     e94:	beq	1224 <parse_value+0x3cc>
     e98:	ble	f2c <parse_value+0xd4>
     e9c:	cmp	r3, #14
     ea0:	beq	10cc <parse_value+0x274>
     ea4:	cmp	r3, #19
     ea8:	beq	f68 <parse_value+0x110>
     eac:	cmp	r3, #11
     eb0:	bne	100c <parse_value+0x1b4>
     eb4:	mov	r4, #0
     eb8:	mov	r3, #3
     ebc:	add	r1, sp, #60	; 0x3c
     ec0:	ldr	r0, [r6]
     ec4:	strh	r3, [r8, #8]
     ec8:	bl	0 <strtod>
     ecc:	ldrd	r2, [r6]
     ed0:	vstr	d0, [r8]
     ed4:	ldr	r1, [sp, #60]	; 0x3c
     ed8:	add	r3, r2, r3
     edc:	cmp	r1, r3
     ee0:	beq	11ec <parse_value+0x394>
     ee4:	mov	r0, #0
     ee8:	movw	r2, #0
     eec:	movt	r2, #0
     ef0:	mov	ip, #1
     ef4:	mov	r3, r0
     ef8:	mov	r1, r6
     efc:	str	r0, [sp]
     f00:	str	r0, [sp, #4]
     f04:	mov	r0, r7
     f08:	strh	ip, [r8, #8]
     f0c:	bl	410 <__flatcc_error_report>
     f10:	cmp	r4, #0
     f14:	beq	f5c <parse_value+0x104>
     f18:	ldrh	r3, [r8, #8]
     f1c:	cmp	r3, #6
     f20:	bne	f5c <parse_value+0x104>
     f24:	mov	r9, r6
     f28:	b	1408 <parse_value+0x5b0>
     f2c:	movw	r2, #64550	; 0xfc26
     f30:	movt	r2, #65535	; 0xffff
     f34:	cmp	r3, r2
     f38:	beq	107c <parse_value+0x224>
     f3c:	cmp	r3, #9
     f40:	beq	106c <parse_value+0x214>
     f44:	cmn	r3, #988	; 0x3dc
     f48:	bne	100c <parse_value+0x1b4>
     f4c:	mov	r2, #1
     f50:	mov	r3, #6
     f54:	strb	r2, [r8]
     f58:	strh	r3, [r8, #8]
     f5c:	mov	r0, r7
     f60:	bl	124 <next>
     f64:	b	102c <parse_value+0x1d4>
     f68:	mov	r4, #0
     f6c:	mov	r0, r7
     f70:	mov	r5, #0
     f74:	bl	124 <next>
     f78:	mov	r3, #2
     f7c:	mov	r1, r8
     f80:	str	r5, [r8]
     f84:	mov	r0, r7
     f88:	str	r5, [r8, #4]
     f8c:	strh	r3, [r8, #8]
     f90:	bl	c7c <parse_string_literal.part.7>
     f94:	ands	r3, sl, #1
     f98:	beq	13c4 <parse_value+0x56c>
     f9c:	cmp	r4, #0
     fa0:	beq	102c <parse_value+0x1d4>
     fa4:	mov	r2, #1
     fa8:	mov	r1, r6
     fac:	str	r5, [sp]
     fb0:	mov	r0, r7
     fb4:	mov	r3, r5
     fb8:	str	r5, [sp, #4]
     fbc:	strh	r2, [r8, #8]
     fc0:	movw	r2, #0
     fc4:	movt	r2, #0
     fc8:	bl	410 <__flatcc_error_report>
     fcc:	b	102c <parse_value+0x1d4>
     fd0:	bl	124 <next>
     fd4:	ldr	r9, [r7, #40]	; 0x28
     fd8:	ldr	r3, [r9, #16]
     fdc:	cmp	r3, #10
     fe0:	beq	1444 <parse_value+0x5ec>
     fe4:	bgt	1048 <parse_value+0x1f0>
     fe8:	movw	r2, #64550	; 0xfc26
     fec:	movt	r2, #65535	; 0xffff
     ff0:	cmp	r3, r2
     ff4:	beq	1400 <parse_value+0x5a8>
     ff8:	cmp	r3, #9
     ffc:	beq	1090 <parse_value+0x238>
    1000:	cmn	r3, #988	; 0x3dc
    1004:	beq	1438 <parse_value+0x5e0>
    1008:	mov	r6, r9
    100c:	mov	ip, #0
    1010:	mov	r2, fp
    1014:	mov	r1, r6
    1018:	mov	r0, r7
    101c:	mov	r3, ip
    1020:	str	ip, [sp]
    1024:	str	ip, [sp, #4]
    1028:	bl	410 <__flatcc_error_report>
    102c:	add	sp, sp, #68	; 0x44
    1030:	ldrd	r4, [sp]
    1034:	ldrd	r6, [sp, #8]
    1038:	ldrd	r8, [sp, #16]
    103c:	ldrd	sl, [sp, #24]
    1040:	add	sp, sp, #32
    1044:	pop	{pc}		; (ldr pc, [sp], #4)
    1048:	cmp	r3, #14
    104c:	beq	1218 <parse_value+0x3c0>
    1050:	cmp	r3, #19
    1054:	beq	120c <parse_value+0x3b4>
    1058:	cmp	r3, #11
    105c:	bne	1008 <parse_value+0x1b0>
    1060:	mov	r4, r6
    1064:	mov	r6, r9
    1068:	b	eb8 <parse_value+0x60>
    106c:	bl	6ac <parse_ref>
    1070:	mov	r3, #13
    1074:	strh	r3, [r8, #8]
    1078:	b	102c <parse_value+0x1d4>
    107c:	mov	r2, #0
    1080:	mov	r3, #6
    1084:	strb	r2, [r8]
    1088:	strh	r3, [r8, #8]
    108c:	b	f5c <parse_value+0x104>
    1090:	mov	r1, r8
    1094:	mov	r0, r7
    1098:	bl	6ac <parse_ref>
    109c:	mov	r2, #0
    10a0:	mov	ip, #1
    10a4:	mov	r3, r2
    10a8:	mov	r1, r9
    10ac:	mov	r0, r7
    10b0:	str	r2, [sp]
    10b4:	str	r2, [sp, #4]
    10b8:	movw	r2, #0
    10bc:	movt	r2, #0
    10c0:	strh	ip, [r8, #8]
    10c4:	bl	410 <__flatcc_error_report>
    10c8:	b	102c <parse_value+0x1d4>
    10cc:	mov	r4, #0
    10d0:	ldr	r3, [r6]
    10d4:	mov	r1, #5
    10d8:	ldr	r2, [r6, #4]
    10dc:	strh	r1, [r8, #8]
    10e0:	add	r0, r3, r2
    10e4:	cmp	r3, r0
    10e8:	str	r0, [sp, #20]
    10ec:	beq	138c <parse_value+0x534>
    10f0:	ldrb	r1, [r3]
    10f4:	cmp	r1, #45	; 0x2d
    10f8:	str	r1, [sp, #32]
    10fc:	movne	r1, #0
    1100:	moveq	r1, #1
    1104:	sub	r2, r2, r1
    1108:	cmp	r2, #1
    110c:	ble	138c <parse_value+0x534>
    1110:	ldrb	r2, [r3, r1]
    1114:	add	r3, r3, r1
    1118:	cmp	r2, #48	; 0x30
    111c:	bne	138c <parse_value+0x534>
    1120:	ldrb	r2, [r3, #1]
    1124:	orr	r2, r2, #32
    1128:	cmp	r2, #120	; 0x78
    112c:	bne	138c <parse_value+0x534>
    1130:	add	r2, r3, #2
    1134:	str	r2, [sp, #24]
    1138:	sub	r2, r0, r2
    113c:	cmp	r2, #16
    1140:	addgt	r3, r3, #18
    1144:	strgt	r3, [sp, #16]
    1148:	bgt	1154 <parse_value+0x2fc>
    114c:	ldr	r3, [sp, #20]
    1150:	str	r3, [sp, #16]
    1154:	ldr	r2, [sp, #16]
    1158:	ldr	r3, [sp, #24]
    115c:	cmp	r3, r2
    1160:	beq	138c <parse_value+0x534>
    1164:	mov	r2, #0
    1168:	mov	r3, #0
    116c:	strd	r6, [sp, #36]	; 0x24
    1170:	str	r4, [sp, #48]	; 0x30
    1174:	str	r8, [sp, #52]	; 0x34
    1178:	ldr	r1, [sp, #24]
    117c:	b	119c <parse_value+0x344>
    1180:	subs	r4, r8, #48	; 0x30
    1184:	sbc	r5, lr, #0
    1188:	adds	r2, r4, r0
    118c:	adc	r3, r5, #0
    1190:	ldr	r0, [sp, #16]
    1194:	cmp	r0, r1
    1198:	beq	14a0 <parse_value+0x648>
    119c:	mov	fp, r1
    11a0:	ldrb	r0, [r1], #1
    11a4:	lsl	lr, r3, #4
    11a8:	lsl	r8, r2, #4
    11ac:	orr	lr, lr, r2, lsr #28
    11b0:	sub	r9, r0, #48	; 0x30
    11b4:	orr	r7, r0, #32
    11b8:	cmp	r9, #9
    11bc:	sub	sl, r7, #97	; 0x61
    11c0:	bls	1180 <parse_value+0x328>
    11c4:	cmp	sl, #5
    11c8:	bhi	14cc <parse_value+0x674>
    11cc:	subs	r3, r8, #87	; 0x57
    11d0:	str	r3, [sp, #8]
    11d4:	sbc	r3, lr, #0
    11d8:	str	r3, [sp, #12]
    11dc:	ldrd	r2, [sp, #8]
    11e0:	adds	r2, r2, r7
    11e4:	adc	r3, r3, #0
    11e8:	b	1190 <parse_value+0x338>
    11ec:	ldrb	r3, [r2]
    11f0:	cmp	r3, #46	; 0x2e
    11f4:	beq	13e8 <parse_value+0x590>
    11f8:	cmp	r4, #0
    11fc:	vnegne.f64	d0, d0
    1200:	vstrne	d0, [r8]
    1204:	bne	f18 <parse_value+0xc0>
    1208:	b	f5c <parse_value+0x104>
    120c:	mov	r4, r6
    1210:	mov	r6, r9
    1214:	b	f6c <parse_value+0x114>
    1218:	mov	r4, r6
    121c:	mov	r6, r9
    1220:	b	10d0 <parse_value+0x278>
    1224:	mov	r3, #0
    1228:	str	r3, [sp, #8]
    122c:	ldr	ip, [r6]
    1230:	mov	r3, #5
    1234:	ldr	r0, [r6, #4]
    1238:	strh	r3, [r8, #8]
    123c:	add	r0, ip, r0
    1240:	cmp	ip, r0
    1244:	beq	145c <parse_value+0x604>
    1248:	ldrb	r3, [ip]
    124c:	cmp	r3, #45	; 0x2d
    1250:	str	r3, [sp, #20]
    1254:	movne	r3, #0
    1258:	moveq	r3, #1
    125c:	add	fp, ip, r3
    1260:	cmp	r0, fp
    1264:	beq	145c <parse_value+0x604>
    1268:	ldrb	r2, [ip, r3]
    126c:	sub	r3, r2, #48	; 0x30
    1270:	cmp	r3, #9
    1274:	bhi	145c <parse_value+0x604>
    1278:	uxtb	r2, r2
    127c:	mov	r3, #0
    1280:	str	fp, [sp, #16]
    1284:	subs	r4, r2, #48	; 0x30
    1288:	add	r1, fp, #1
    128c:	str	ip, [sp, #32]
    1290:	sbc	r5, r3, #0
    1294:	b	12cc <parse_value+0x474>
    1298:	adds	r3, r3, r4
    129c:	adc	r2, r2, r5
    12a0:	adds	r3, r3, r3
    12a4:	adc	r2, r2, r2
    12a8:	subs	sl, r3, #48	; 0x30
    12ac:	sbc	fp, r2, #0
    12b0:	adds	r2, sl, lr
    12b4:	adc	r3, fp, #0
    12b8:	cmp	r3, r5
    12bc:	mov	r5, r3
    12c0:	cmpeq	r2, r4
    12c4:	mov	r4, r2
    12c8:	bcc	145c <parse_value+0x604>
    12cc:	cmp	r0, r1
    12d0:	lsl	r2, r5, #2
    12d4:	mov	ip, r1
    12d8:	lsl	r3, r4, #2
    12dc:	beq	1450 <parse_value+0x5f8>
    12e0:	ldrb	lr, [r1], #1
    12e4:	orr	r2, r2, r4, lsr #30
    12e8:	sub	r9, lr, #48	; 0x30
    12ec:	cmp	r9, #9
    12f0:	bls	1298 <parse_value+0x440>
    12f4:	mov	sl, ip
    12f8:	ldr	fp, [sp, #16]
    12fc:	ldr	ip, [sp, #32]
    1300:	cmp	ip, sl
    1304:	beq	145c <parse_value+0x604>
    1308:	cmp	fp, sl
    130c:	beq	145c <parse_value+0x604>
    1310:	cmp	lr, #80	; 0x50
    1314:	beq	145c <parse_value+0x604>
    1318:	bhi	148c <parse_value+0x634>
    131c:	cmp	lr, #46	; 0x2e
    1320:	beq	145c <parse_value+0x604>
    1324:	cmp	lr, #69	; 0x45
    1328:	beq	145c <parse_value+0x604>
    132c:	ldr	r3, [sp, #20]
    1330:	strd	r4, [r8]
    1334:	cmp	r3, #45	; 0x2d
    1338:	beq	145c <parse_value+0x604>
    133c:	ldr	r3, [sp, #8]
    1340:	cmp	r3, #0
    1344:	beq	f5c <parse_value+0x104>
    1348:	ldrd	r2, [r8]
    134c:	mov	r1, #4
    1350:	strh	r1, [r8, #8]
    1354:	rsbs	r2, r2, #0
    1358:	rsc	r3, r3, #0
    135c:	strd	r2, [r8]
    1360:	b	f5c <parse_value+0x104>
    1364:	ldr	r1, [sp, #16]
    1368:	ldrb	r1, [r1]
    136c:	sub	r0, r1, #48	; 0x30
    1370:	cmp	r0, #9
    1374:	bls	138c <parse_value+0x534>
    1378:	orr	r1, r1, #32
    137c:	sub	r0, r1, #97	; 0x61
    1380:	uxtb	r0, r0
    1384:	cmp	r0, #5
    1388:	bhi	1500 <parse_value+0x6a8>
    138c:	mov	r0, #0
    1390:	mov	ip, #1
    1394:	mov	r3, r0
    1398:	movw	r2, #0
    139c:	movt	r2, #0
    13a0:	mov	r1, r6
    13a4:	str	r0, [sp]
    13a8:	str	r0, [sp, #4]
    13ac:	mov	r0, r7
    13b0:	strh	ip, [r8, #8]
    13b4:	bl	410 <__flatcc_error_report>
    13b8:	cmp	r4, #0
    13bc:	beq	f5c <parse_value+0x104>
    13c0:	b	1348 <parse_value+0x4f0>
    13c4:	mov	ip, #1
    13c8:	mov	r2, fp
    13cc:	str	r3, [sp]
    13d0:	mov	r1, r6
    13d4:	mov	r0, r7
    13d8:	str	r3, [sp, #4]
    13dc:	strh	ip, [r8, #8]
    13e0:	bl	410 <__flatcc_error_report>
    13e4:	b	102c <parse_value+0x1d4>
    13e8:	mov	r0, #0
    13ec:	movw	r2, #0
    13f0:	movt	r2, #0
    13f4:	mov	ip, #1
    13f8:	mov	r3, r0
    13fc:	b	ef8 <parse_value+0xa0>
    1400:	mov	r3, #0
    1404:	strb	r3, [r8]
    1408:	mov	r2, #0
    140c:	mov	r0, #1
    1410:	mov	r3, r2
    1414:	mov	r1, r9
    1418:	str	r2, [sp]
    141c:	str	r2, [sp, #4]
    1420:	movw	r2, #0
    1424:	movt	r2, #0
    1428:	strh	r0, [r8, #8]
    142c:	mov	r0, r7
    1430:	bl	410 <__flatcc_error_report>
    1434:	b	f5c <parse_value+0x104>
    1438:	mov	r3, #1
    143c:	strb	r3, [r8]
    1440:	b	1408 <parse_value+0x5b0>
    1444:	str	r6, [sp, #8]
    1448:	mov	r6, r9
    144c:	b	122c <parse_value+0x3d4>
    1450:	ldr	fp, [sp, #16]
    1454:	cmp	fp, r0
    1458:	bne	132c <parse_value+0x4d4>
    145c:	mov	r0, #0
    1460:	mov	ip, #1
    1464:	mov	r3, r0
    1468:	mov	r1, r6
    146c:	movw	r2, #0
    1470:	movt	r2, #0
    1474:	str	r0, [sp]
    1478:	str	r0, [sp, #4]
    147c:	mov	r0, r7
    1480:	strh	ip, [r8, #8]
    1484:	bl	410 <__flatcc_error_report>
    1488:	b	133c <parse_value+0x4e4>
    148c:	cmp	lr, #101	; 0x65
    1490:	beq	145c <parse_value+0x604>
    1494:	cmp	lr, #112	; 0x70
    1498:	bne	132c <parse_value+0x4d4>
    149c:	b	145c <parse_value+0x604>
    14a0:	ldr	r1, [sp, #20]
    14a4:	ldrd	r6, [sp, #36]	; 0x24
    14a8:	ldr	r4, [sp, #48]	; 0x30
    14ac:	cmp	r1, r0
    14b0:	ldr	r8, [sp, #52]	; 0x34
    14b4:	bne	1364 <parse_value+0x50c>
    14b8:	strd	r2, [r8]
    14bc:	ldr	r1, [sp, #32]
    14c0:	cmp	r1, #45	; 0x2d
    14c4:	bne	13b8 <parse_value+0x560>
    14c8:	b	138c <parse_value+0x534>
    14cc:	ldr	r1, [sp, #24]
    14d0:	ldrd	r6, [sp, #36]	; 0x24
    14d4:	ldr	r4, [sp, #48]	; 0x30
    14d8:	cmp	fp, r1
    14dc:	ldr	r8, [sp, #52]	; 0x34
    14e0:	beq	138c <parse_value+0x534>
    14e4:	ldr	r0, [sp, #20]
    14e8:	cmp	fp, r0
    14ec:	beq	14b8 <parse_value+0x660>
    14f0:	ldr	r0, [sp, #16]
    14f4:	ldrb	r1, [fp]
    14f8:	cmp	fp, r0
    14fc:	beq	136c <parse_value+0x514>
    1500:	cmp	r1, #80	; 0x50
    1504:	beq	138c <parse_value+0x534>
    1508:	cmp	r1, #112	; 0x70
    150c:	beq	138c <parse_value+0x534>
    1510:	cmp	r1, #46	; 0x2e
    1514:	bne	14b8 <parse_value+0x660>
    1518:	b	138c <parse_value+0x534>

0000151c <parse_metadata>:
    151c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1520:	strd	r6, [sp, #8]
    1524:	ldr	r6, [r0, #40]	; 0x28
    1528:	strd	r8, [sp, #16]
    152c:	str	sl, [sp, #24]
    1530:	str	lr, [sp, #28]
    1534:	sub	sp, sp, #8
    1538:	ldr	r3, [r6, #16]
    153c:	cmp	r3, #40	; 0x28
    1540:	movne	r4, #0
    1544:	beq	1568 <parse_metadata+0x4c>
    1548:	mov	r0, r4
    154c:	add	sp, sp, #8
    1550:	ldrd	r4, [sp]
    1554:	ldrd	r6, [sp, #8]
    1558:	ldrd	r8, [sp, #16]
    155c:	ldr	sl, [sp, #24]
    1560:	add	sp, sp, #28
    1564:	pop	{pc}		; (ldr pc, [sp], #4)
    1568:	mov	r5, r0
    156c:	bl	124 <next>
    1570:	ldr	r8, [r5, #40]	; 0x28
    1574:	ldr	r3, [r8, #16]
    1578:	cmp	r3, #9
    157c:	beq	15a0 <parse_metadata+0x84>
    1580:	mov	r3, r6
    1584:	mov	r0, r5
    1588:	movw	r2, #0
    158c:	movt	r2, #0
    1590:	mov	r1, #41	; 0x29
    1594:	mov	r4, #0
    1598:	bl	804 <advance>
    159c:	b	1548 <parse_metadata+0x2c>
    15a0:	mov	r0, r5
    15a4:	movw	r9, #0
    15a8:	movt	r9, #0
    15ac:	mov	sl, #0
    15b0:	bl	124 <next>
    15b4:	ldr	r2, [r5, #44]	; 0x2c
    15b8:	ldr	r7, [r5, #52]	; 0x34
    15bc:	add	r3, r7, #32
    15c0:	cmp	r3, r2
    15c4:	bhi	1684 <parse_metadata+0x168>
    15c8:	ldr	r2, [r5, #40]	; 0x28
    15cc:	mov	r4, r7
    15d0:	str	r3, [r5, #52]	; 0x34
    15d4:	str	sl, [r7]
    15d8:	str	r8, [r7, #4]
    15dc:	ldr	r3, [r2, #16]
    15e0:	cmp	r3, #58	; 0x3a
    15e4:	bne	1604 <parse_metadata+0xe8>
    15e8:	mov	r0, r5
    15ec:	bl	124 <next>
    15f0:	mov	r3, r9
    15f4:	mov	r2, #1
    15f8:	add	r1, r7, #8
    15fc:	mov	r0, r5
    1600:	bl	e58 <parse_value>
    1604:	ldr	r3, [r5, #108]	; 0x6c
    1608:	cmp	r3, #9
    160c:	bgt	1548 <parse_metadata+0x2c>
    1610:	ldr	r3, [r5, #40]	; 0x28
    1614:	ldr	r3, [r3, #16]
    1618:	cmp	r3, #44	; 0x2c
    161c:	beq	165c <parse_metadata+0x140>
    1620:	mov	r3, r6
    1624:	mov	r0, r5
    1628:	movw	r2, #0
    162c:	movt	r2, #0
    1630:	mov	r1, #41	; 0x29
    1634:	bl	804 <advance>
    1638:	mov	r2, #0
    163c:	b	1644 <parse_metadata+0x128>
    1640:	mov	r4, r3
    1644:	ldr	r3, [r4]
    1648:	str	r2, [r4]
    164c:	mov	r2, r4
    1650:	cmp	r3, #0
    1654:	bne	1640 <parse_metadata+0x124>
    1658:	b	1548 <parse_metadata+0x2c>
    165c:	mov	r0, r5
    1660:	bl	124 <next>
    1664:	ldr	r8, [r5, #40]	; 0x28
    1668:	ldr	r3, [r8, #16]
    166c:	cmp	r3, #9
    1670:	bne	16b8 <parse_metadata+0x19c>
    1674:	mov	r0, r5
    1678:	mov	sl, r7
    167c:	bl	124 <next>
    1680:	b	15b4 <parse_metadata+0x98>
    1684:	mov	r1, #1
    1688:	mov	r0, #65536	; 0x10000
    168c:	bl	0 <calloc>
    1690:	cmp	r0, #0
    1694:	beq	16e0 <parse_metadata+0x1c4>
    1698:	ldr	r2, [r5, #48]	; 0x30
    169c:	add	r1, r0, #65536	; 0x10000
    16a0:	add	r7, r0, #16
    16a4:	add	r3, r0, #48	; 0x30
    16a8:	str	r1, [r5, #44]	; 0x2c
    16ac:	str	r0, [r5, #48]	; 0x30
    16b0:	str	r2, [r0]
    16b4:	b	15c8 <parse_metadata+0xac>
    16b8:	mov	ip, #0
    16bc:	mov	r1, r8
    16c0:	mov	r3, ip
    16c4:	movw	r2, #0
    16c8:	movt	r2, #0
    16cc:	mov	r0, r5
    16d0:	str	ip, [sp]
    16d4:	str	ip, [sp, #4]
    16d8:	bl	410 <__flatcc_error_report>
    16dc:	b	1620 <parse_metadata+0x104>
    16e0:	bl	20 <checkmem.part.1>

000016e4 <parse_compound_type>:
    16e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    16e8:	mov	r4, r0
    16ec:	ldr	r5, [r0, #40]	; 0x28
    16f0:	ldr	r3, [r5, #16]
    16f4:	strd	r6, [sp, #8]
    16f8:	strd	r8, [sp, #16]
    16fc:	strd	sl, [sp, #24]
    1700:	str	lr, [sp, #32]
    1704:	sub	sp, sp, #20
    1708:	cmp	r3, #9
    170c:	bne	1b18 <parse_compound_type+0x434>
    1710:	mov	r7, r1
    1714:	mov	r8, r2
    1718:	bl	124 <next>
    171c:	mov	r0, r4
    1720:	str	r5, [r7, #4]
    1724:	bl	151c <parse_metadata>
    1728:	ldr	r1, [r4, #40]	; 0x28
    172c:	ldr	r3, [r1, #16]
    1730:	str	r0, [r7, #28]
    1734:	cmp	r3, #123	; 0x7b
    1738:	bne	18dc <parse_compound_type+0x1f8>
    173c:	movw	r3, #0
    1740:	movt	r3, #0
    1744:	mov	r0, r4
    1748:	movw	r9, #64569	; 0xfc39
    174c:	movt	r9, #65535	; 0xffff
    1750:	str	r3, [sp, #8]
    1754:	movw	r3, #0
    1758:	movt	r3, #0
    175c:	str	r3, [sp, #12]
    1760:	bl	124 <next>
    1764:	ldr	sl, [r4, #40]	; 0x28
    1768:	ldr	fp, [sl, #16]
    176c:	cmp	fp, #125	; 0x7d
    1770:	beq	1888 <parse_compound_type+0x1a4>
    1774:	cmp	r8, r9
    1778:	ldr	r0, [r4, #44]	; 0x2c
    177c:	ldr	r5, [r4, #52]	; 0x34
    1780:	add	r1, r5, #128	; 0x80
    1784:	beq	1924 <parse_compound_type+0x240>
    1788:	cmp	r1, r0
    178c:	bhi	1a50 <parse_compound_type+0x36c>
    1790:	ldr	r0, [r7, #20]
    1794:	mov	ip, #5
    1798:	str	r1, [r4, #52]	; 0x34
    179c:	str	r0, [r5]
    17a0:	strh	ip, [r5, #8]
    17a4:	str	r5, [r7, #20]
    17a8:	ldr	r1, [r4, #36]	; 0x24
    17ac:	cmp	r1, #0
    17b0:	beq	17d4 <parse_compound_type+0xf0>
    17b4:	mov	ip, #0
    17b8:	b	17c0 <parse_compound_type+0xdc>
    17bc:	mov	r1, r0
    17c0:	ldr	r0, [r1]
    17c4:	str	ip, [r1]
    17c8:	mov	ip, r1
    17cc:	cmp	r0, #0
    17d0:	bne	17bc <parse_compound_type+0xd8>
    17d4:	mov	r6, #0
    17d8:	cmp	fp, #9
    17dc:	str	r1, [r5, #68]	; 0x44
    17e0:	str	r6, [r4, #36]	; 0x24
    17e4:	bne	1a28 <parse_compound_type+0x344>
    17e8:	mov	r0, r4
    17ec:	bl	124 <next>
    17f0:	ldr	r1, [r4, #40]	; 0x28
    17f4:	ldr	r3, [r1, #16]
    17f8:	str	sl, [r5, #4]
    17fc:	cmp	r3, #58	; 0x3a
    1800:	bne	1a84 <parse_compound_type+0x3a0>
    1804:	mov	r0, r4
    1808:	bl	124 <next>
    180c:	add	r1, r5, #16
    1810:	mov	r0, r4
    1814:	bl	864 <parse_type>
    1818:	ldr	r3, [r4, #40]	; 0x28
    181c:	ldr	r3, [r3, #16]
    1820:	cmp	r3, #61	; 0x3d
    1824:	bne	1848 <parse_compound_type+0x164>
    1828:	mov	r0, r4
    182c:	bl	124 <next>
    1830:	movw	r3, #0
    1834:	movt	r3, #0
    1838:	mov	r2, #2
    183c:	add	r1, r5, #48	; 0x30
    1840:	mov	r0, r4
    1844:	bl	e58 <parse_value>
    1848:	mov	r0, r4
    184c:	bl	151c <parse_metadata>
    1850:	movw	r2, #0
    1854:	movt	r2, #0
    1858:	str	r0, [r5, #64]	; 0x40
    185c:	mov	r3, #0
    1860:	mov	r1, #59	; 0x3b
    1864:	mov	r0, r4
    1868:	bl	804 <advance>
    186c:	ldr	r3, [r4, #108]	; 0x6c
    1870:	cmp	r3, #9
    1874:	bgt	18fc <parse_compound_type+0x218>
    1878:	ldr	sl, [r4, #40]	; 0x28
    187c:	ldr	fp, [sl, #16]
    1880:	cmp	fp, #125	; 0x7d
    1884:	bne	1774 <parse_compound_type+0x90>
    1888:	mov	r0, r4
    188c:	bl	124 <next>
    1890:	ldr	r3, [r7, #20]
    1894:	cmp	r3, #0
    1898:	beq	18bc <parse_compound_type+0x1d8>
    189c:	mov	r1, #0
    18a0:	b	18a8 <parse_compound_type+0x1c4>
    18a4:	mov	r3, r2
    18a8:	ldr	r2, [r3]
    18ac:	str	r1, [r3]
    18b0:	mov	r1, r3
    18b4:	cmp	r2, #0
    18b8:	bne	18a4 <parse_compound_type+0x1c0>
    18bc:	str	r3, [r7, #20]
    18c0:	add	sp, sp, #20
    18c4:	ldrd	r4, [sp]
    18c8:	ldrd	r6, [sp, #8]
    18cc:	ldrd	r8, [sp, #16]
    18d0:	ldrd	sl, [sp, #24]
    18d4:	add	sp, sp, #32
    18d8:	pop	{pc}		; (ldr pc, [sp], #4)
    18dc:	mov	ip, #0
    18e0:	movw	r2, #0
    18e4:	movt	r2, #0
    18e8:	mov	r3, ip
    18ec:	mov	r0, r4
    18f0:	str	ip, [sp]
    18f4:	str	ip, [sp, #4]
    18f8:	bl	410 <__flatcc_error_report>
    18fc:	mov	r0, r4
    1900:	mov	r1, #125	; 0x7d
    1904:	add	sp, sp, #20
    1908:	ldrd	r4, [sp]
    190c:	ldrd	r6, [sp, #8]
    1910:	ldrd	r8, [sp, #16]
    1914:	ldrd	sl, [sp, #24]
    1918:	ldr	lr, [sp, #32]
    191c:	add	sp, sp, #36	; 0x24
    1920:	b	2c4 <recover.constprop.10>
    1924:	cmp	r1, r0
    1928:	bhi	1ac4 <parse_compound_type+0x3e0>
    192c:	ldr	r0, [r7, #20]
    1930:	mov	ip, #5
    1934:	str	r1, [r4, #52]	; 0x34
    1938:	str	r0, [r5]
    193c:	strh	ip, [r5, #8]
    1940:	str	r5, [r7, #20]
    1944:	ldr	r1, [r4, #36]	; 0x24
    1948:	cmp	r1, #0
    194c:	beq	1970 <parse_compound_type+0x28c>
    1950:	mov	ip, #0
    1954:	b	195c <parse_compound_type+0x278>
    1958:	mov	r1, r0
    195c:	ldr	r0, [r1]
    1960:	str	ip, [r1]
    1964:	mov	ip, r1
    1968:	cmp	r0, #0
    196c:	bne	1958 <parse_compound_type+0x274>
    1970:	mov	r6, #0
    1974:	cmp	fp, #9
    1978:	str	r1, [r5, #68]	; 0x44
    197c:	str	r6, [r4, #36]	; 0x24
    1980:	bne	1aa0 <parse_compound_type+0x3bc>
    1984:	mov	r0, r4
    1988:	bl	124 <next>
    198c:	ldr	r1, [r4, #40]	; 0x28
    1990:	ldr	r3, [r1, #16]
    1994:	str	sl, [r5, #4]
    1998:	cmp	r3, #40	; 0x28
    199c:	bne	1af8 <parse_compound_type+0x414>
    19a0:	mov	r0, r4
    19a4:	bl	124 <next>
    19a8:	add	r1, r5, #32
    19ac:	mov	r0, r4
    19b0:	bl	864 <parse_type>
    19b4:	ldr	r1, [r4, #40]	; 0x28
    19b8:	ldr	r3, [r1, #16]
    19bc:	cmp	r3, #41	; 0x29
    19c0:	bne	1b3c <parse_compound_type+0x458>
    19c4:	mov	r0, r4
    19c8:	bl	124 <next>
    19cc:	ldr	r1, [r4, #40]	; 0x28
    19d0:	ldr	r3, [r1, #16]
    19d4:	cmp	r3, #58	; 0x3a
    19d8:	bne	1b5c <parse_compound_type+0x478>
    19dc:	mov	r0, r4
    19e0:	bl	124 <next>
    19e4:	add	r1, r5, #16
    19e8:	mov	r0, r4
    19ec:	bl	864 <parse_type>
    19f0:	ldr	sl, [r4, #40]	; 0x28
    19f4:	ldr	r3, [sl, #16]
    19f8:	cmp	r3, #61	; 0x3d
    19fc:	beq	1b7c <parse_compound_type+0x498>
    1a00:	mov	r0, r4
    1a04:	bl	151c <parse_metadata>
    1a08:	mov	r3, r6
    1a0c:	movw	r2, #0
    1a10:	movt	r2, #0
    1a14:	mov	r1, #59	; 0x3b
    1a18:	str	r0, [r5, #64]	; 0x40
    1a1c:	mov	r0, r4
    1a20:	bl	804 <advance>
    1a24:	b	186c <parse_compound_type+0x188>
    1a28:	mov	r3, r6
    1a2c:	mov	r1, sl
    1a30:	str	r6, [sp]
    1a34:	mov	r0, r4
    1a38:	str	r6, [sp, #4]
    1a3c:	ldr	r2, [sp, #8]
    1a40:	bl	410 <__flatcc_error_report>
    1a44:	mov	r0, r4
    1a48:	bl	24c <recover2.constprop.9>
    1a4c:	b	186c <parse_compound_type+0x188>
    1a50:	mov	r1, #1
    1a54:	mov	r0, #65536	; 0x10000
    1a58:	bl	0 <calloc>
    1a5c:	cmp	r0, #0
    1a60:	beq	1ba8 <parse_compound_type+0x4c4>
    1a64:	ldr	ip, [r4, #48]	; 0x30
    1a68:	add	lr, r0, #65536	; 0x10000
    1a6c:	add	r5, r0, #16
    1a70:	add	r1, r0, #144	; 0x90
    1a74:	str	lr, [r4, #44]	; 0x2c
    1a78:	str	r0, [r4, #48]	; 0x30
    1a7c:	str	ip, [r0]
    1a80:	b	1790 <parse_compound_type+0xac>
    1a84:	mov	r3, r6
    1a88:	mov	r0, r4
    1a8c:	str	r6, [sp]
    1a90:	str	r6, [sp, #4]
    1a94:	ldr	r2, [sp, #12]
    1a98:	bl	410 <__flatcc_error_report>
    1a9c:	b	1a44 <parse_compound_type+0x360>
    1aa0:	mov	r3, r6
    1aa4:	mov	r1, sl
    1aa8:	str	r6, [sp]
    1aac:	movw	r2, #0
    1ab0:	movt	r2, #0
    1ab4:	str	r6, [sp, #4]
    1ab8:	mov	r0, r4
    1abc:	bl	410 <__flatcc_error_report>
    1ac0:	b	1a44 <parse_compound_type+0x360>
    1ac4:	mov	r1, #1
    1ac8:	mov	r0, #65536	; 0x10000
    1acc:	bl	0 <calloc>
    1ad0:	cmp	r0, #0
    1ad4:	beq	1ba8 <parse_compound_type+0x4c4>
    1ad8:	ldr	ip, [r4, #48]	; 0x30
    1adc:	add	lr, r0, #65536	; 0x10000
    1ae0:	add	r5, r0, #16
    1ae4:	add	r1, r0, #144	; 0x90
    1ae8:	str	lr, [r4, #44]	; 0x2c
    1aec:	str	r0, [r4, #48]	; 0x30
    1af0:	str	ip, [r0]
    1af4:	b	192c <parse_compound_type+0x248>
    1af8:	mov	r3, r6
    1afc:	movw	r2, #0
    1b00:	movt	r2, #0
    1b04:	mov	r0, r4
    1b08:	str	r6, [sp]
    1b0c:	str	r6, [sp, #4]
    1b10:	bl	410 <__flatcc_error_report>
    1b14:	b	1a44 <parse_compound_type+0x360>
    1b18:	mov	ip, #0
    1b1c:	mov	r1, r5
    1b20:	mov	r3, ip
    1b24:	movw	r2, #0
    1b28:	movt	r2, #0
    1b2c:	str	ip, [sp]
    1b30:	str	ip, [sp, #4]
    1b34:	bl	410 <__flatcc_error_report>
    1b38:	b	18fc <parse_compound_type+0x218>
    1b3c:	mov	r3, r6
    1b40:	movw	r2, #0
    1b44:	movt	r2, #0
    1b48:	mov	r0, r4
    1b4c:	str	r6, [sp]
    1b50:	str	r6, [sp, #4]
    1b54:	bl	410 <__flatcc_error_report>
    1b58:	b	1a44 <parse_compound_type+0x360>
    1b5c:	mov	r3, r6
    1b60:	movw	r2, #0
    1b64:	movt	r2, #0
    1b68:	mov	r0, r4
    1b6c:	str	r6, [sp]
    1b70:	str	r6, [sp, #4]
    1b74:	bl	410 <__flatcc_error_report>
    1b78:	b	1a44 <parse_compound_type+0x360>
    1b7c:	mov	r0, r4
    1b80:	bl	124 <next>
    1b84:	mov	r3, r6
    1b88:	mov	r1, sl
    1b8c:	str	r6, [sp]
    1b90:	movw	r2, #0
    1b94:	movt	r2, #0
    1b98:	str	r6, [sp, #4]
    1b9c:	mov	r0, r4
    1ba0:	bl	410 <__flatcc_error_report>
    1ba4:	b	1a44 <parse_compound_type+0x360>
    1ba8:	bl	20 <checkmem.part.1>

00001bac <error_ref_sym>:
    1bac:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1bb0:	strd	r6, [sp, #8]
    1bb4:	strd	r8, [sp, #16]
    1bb8:	mov	r9, r3
    1bbc:	strd	sl, [sp, #24]
    1bc0:	subs	sl, r1, #0
    1bc4:	str	lr, [sp, #32]
    1bc8:	sub	sp, sp, #76	; 0x4c
    1bcc:	str	r0, [sp, #8]
    1bd0:	str	r2, [sp, #12]
    1bd4:	beq	1cb4 <error_ref_sym+0x108>
    1bd8:	mov	r6, sl
    1bdc:	mov	fp, #0
    1be0:	mov	r4, #50	; 0x32
    1be4:	add	r7, sp, #20
    1be8:	mov	r8, #46	; 0x2e
    1bec:	ldr	r3, [r6, #4]
    1bf0:	add	r0, r7, fp
    1bf4:	ldm	r3, {r1, r5}
    1bf8:	cmp	r5, r4
    1bfc:	movge	r5, r4
    1c00:	mov	r2, r5
    1c04:	bl	0 <memcpy>
    1c08:	add	ip, r5, fp
    1c0c:	add	r3, sp, #72	; 0x48
    1c10:	add	r3, r3, ip
    1c14:	sub	r5, r4, r5
    1c18:	sub	r4, r5, #1
    1c1c:	add	fp, ip, #1
    1c20:	strb	r8, [r3, #-52]	; 0xffffffcc
    1c24:	cmp	r4, #0
    1c28:	ldr	r6, [r6]
    1c2c:	movle	r2, #0
    1c30:	movgt	r2, #1
    1c34:	cmp	r6, #0
    1c38:	moveq	r2, #0
    1c3c:	cmp	r2, #0
    1c40:	bne	1bec <error_ref_sym+0x40>
    1c44:	add	r3, sp, #72	; 0x48
    1c48:	cmp	fp, #0
    1c4c:	add	r1, r3, fp
    1c50:	movle	ip, fp
    1c54:	cmp	r4, #0
    1c58:	strb	r2, [r1, #-52]	; 0xffffffcc
    1c5c:	ble	1c9c <error_ref_sym+0xf0>
    1c60:	cmp	r9, #0
    1c64:	ldr	r1, [sl, #4]
    1c68:	ldrne	r9, [r9, #4]
    1c6c:	stm	sp, {r7, ip}
    1c70:	ldr	r0, [sp, #8]
    1c74:	ldr	r2, [sp, #12]
    1c78:	mov	r3, r9
    1c7c:	bl	410 <__flatcc_error_report>
    1c80:	add	sp, sp, #76	; 0x4c
    1c84:	ldrd	r4, [sp]
    1c88:	ldrd	r6, [sp, #8]
    1c8c:	ldrd	r8, [sp, #16]
    1c90:	ldrd	sl, [sp, #24]
    1c94:	add	sp, sp, #32
    1c98:	pop	{pc}		; (ldr pc, [sp], #4)
    1c9c:	movw	r3, #0
    1ca0:	movt	r3, #0
    1ca4:	ldr	r3, [r3, #8]
    1ca8:	mov	ip, #50	; 0x32
    1cac:	str	r3, [sp, #67]	; 0x43
    1cb0:	b	1c60 <error_ref_sym+0xb4>
    1cb4:	mov	ip, sl
    1cb8:	add	r7, sp, #20
    1cbc:	strb	sl, [sp, #20]
    1cc0:	b	1c60 <error_ref_sym+0xb4>

00001cc4 <__flatcc_fb_init_parser>:
    1cc4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1cc8:	mov	r4, r0
    1ccc:	strd	r6, [sp, #8]
    1cd0:	mov	r7, r3
    1cd4:	mov	r6, r2
    1cd8:	mov	r2, #560	; 0x230
    1cdc:	strd	r8, [sp, #16]
    1ce0:	mov	r9, r1
    1ce4:	mov	r1, #0
    1ce8:	str	sl, [sp, #24]
    1cec:	str	lr, [sp, #28]
    1cf0:	sub	sp, sp, #8
    1cf4:	ldr	r5, [sp, #44]	; 0x2c
    1cf8:	bl	0 <memset>
    1cfc:	cmp	r7, #0
    1d00:	beq	1f18 <__flatcc_fb_init_parser+0x254>
    1d04:	ldr	r3, [sp, #40]	; 0x28
    1d08:	str	r7, [r4, #8]
    1d0c:	str	r3, [r4, #12]
    1d10:	cmp	r9, #0
    1d14:	add	r0, r4, #128	; 0x80
    1d18:	beq	1f10 <__flatcc_fb_init_parser+0x24c>
    1d1c:	mov	r2, #224	; 0xe0
    1d20:	mov	r1, r9
    1d24:	bl	0 <memcpy>
    1d28:	ldr	r3, [r4, #192]	; 0xc0
    1d2c:	cmp	r5, #0
    1d30:	addeq	r5, r4, #416	; 0x1a0
    1d34:	str	r5, [r4, #412]	; 0x19c
    1d38:	cmp	r3, #4
    1d3c:	beq	1d94 <__flatcc_fb_init_parser+0xd0>
    1d40:	cmp	r3, #8
    1d44:	beq	1d94 <__flatcc_fb_init_parser+0xd0>
    1d48:	cmp	r3, #2
    1d4c:	beq	1d94 <__flatcc_fb_init_parser+0xd0>
    1d50:	mov	ip, #0
    1d54:	mov	r0, r4
    1d58:	mov	r3, ip
    1d5c:	mov	r1, ip
    1d60:	movw	r2, #0
    1d64:	movt	r2, #0
    1d68:	str	ip, [sp]
    1d6c:	str	ip, [sp, #4]
    1d70:	bl	410 <__flatcc_error_report>
    1d74:	mvn	r0, #0
    1d78:	add	sp, sp, #8
    1d7c:	ldrd	r4, [sp]
    1d80:	ldrd	r6, [sp, #8]
    1d84:	ldrd	r8, [sp, #16]
    1d88:	ldr	sl, [sp, #24]
    1d8c:	add	sp, sp, #28
    1d90:	pop	{pc}		; (ldr pc, [sp], #4)
    1d94:	ldr	r3, [r4, #196]	; 0xc4
    1d98:	cmp	r3, #4
    1d9c:	beq	1ddc <__flatcc_fb_init_parser+0x118>
    1da0:	cmp	r3, #8
    1da4:	beq	1ddc <__flatcc_fb_init_parser+0x118>
    1da8:	cmp	r3, #2
    1dac:	beq	1ddc <__flatcc_fb_init_parser+0x118>
    1db0:	mov	ip, #0
    1db4:	mov	r0, r4
    1db8:	mov	r3, ip
    1dbc:	mov	r1, ip
    1dc0:	movw	r2, #0
    1dc4:	movt	r2, #0
    1dc8:	str	ip, [sp]
    1dcc:	str	ip, [sp, #4]
    1dd0:	bl	410 <__flatcc_error_report>
    1dd4:	mvn	r0, #0
    1dd8:	b	1d78 <__flatcc_fb_init_parser+0xb4>
    1ddc:	cmp	r6, #0
    1de0:	beq	1f28 <__flatcc_fb_init_parser+0x264>
    1de4:	mov	r0, r6
    1de8:	bl	0 <strlen>
    1dec:	mov	sl, r0
    1df0:	mov	r1, sl
    1df4:	mov	r0, r6
    1df8:	ldr	r2, [r9, #96]	; 0x60
    1dfc:	bl	0 <__flatcc_fb_create_basename>
    1e00:	cmp	r0, #0
    1e04:	mov	r5, r0
    1e08:	str	r0, [r4, #512]	; 0x200
    1e0c:	beq	1fac <__flatcc_fb_init_parser+0x2e8>
    1e10:	bl	0 <strlen>
    1e14:	mov	r1, r0
    1e18:	mov	r8, r0
    1e1c:	mov	r0, r5
    1e20:	bl	0 <__flatcc_fb_copy_path_n>
    1e24:	subs	r5, r0, #0
    1e28:	beq	1fac <__flatcc_fb_init_parser+0x2e8>
    1e2c:	cmp	r8, #0
    1e30:	beq	1e74 <__flatcc_fb_init_parser+0x1b0>
    1e34:	ldrb	r7, [r5]
    1e38:	cmp	r7, #0
    1e3c:	beq	1e74 <__flatcc_fb_init_parser+0x1b0>
    1e40:	bl	0 <__ctype_toupper_loc>
    1e44:	sub	r2, r8, #1
    1e48:	mov	r3, r5
    1e4c:	add	r2, r5, r2
    1e50:	b	1e60 <__flatcc_fb_init_parser+0x19c>
    1e54:	ldrb	r7, [r3, #1]!
    1e58:	cmp	r7, #0
    1e5c:	beq	1e74 <__flatcc_fb_init_parser+0x1b0>
    1e60:	ldr	r1, [r0]
    1e64:	cmp	r3, r2
    1e68:	ldr	r1, [r1, r7, lsl #2]
    1e6c:	strb	r1, [r3]
    1e70:	bne	1e54 <__flatcc_fb_init_parser+0x190>
    1e74:	mov	r1, sl
    1e78:	mov	r0, r6
    1e7c:	str	r5, [r4, #496]	; 0x1f0
    1e80:	movw	r2, #0
    1e84:	movt	r2, #0
    1e88:	str	r8, [r4, #500]	; 0x1f4
    1e8c:	str	r5, [r4, #516]	; 0x204
    1e90:	bl	0 <__flatcc_fb_create_basename>
    1e94:	cmp	r0, #0
    1e98:	str	r0, [r4, #520]	; 0x208
    1e9c:	beq	1fac <__flatcc_fb_init_parser+0x2e8>
    1ea0:	ldr	r3, [r9, #192]	; 0xc0
    1ea4:	cmp	r3, #0
    1ea8:	beq	1ebc <__flatcc_fb_init_parser+0x1f8>
    1eac:	mov	r0, r3
    1eb0:	str	r3, [r4, #476]	; 0x1dc
    1eb4:	bl	0 <strlen>
    1eb8:	str	r0, [r4, #480]	; 0x1e0
    1ebc:	mov	r2, #0
    1ec0:	ldr	r0, [r4, #412]	; 0x19c
    1ec4:	mov	r1, r2
    1ec8:	bl	0 <fb_scope_table_find>
    1ecc:	subs	r5, r0, #0
    1ed0:	beq	1f38 <__flatcc_fb_init_parser+0x274>
    1ed4:	mov	r2, #0
    1ed8:	str	r5, [r4, #544]	; 0x220
    1edc:	mov	r1, r2
    1ee0:	ldr	r0, [r4, #412]	; 0x19c
    1ee4:	bl	0 <fb_scope_table_find>
    1ee8:	cmp	r5, r0
    1eec:	moveq	r0, #0
    1ef0:	beq	1d78 <__flatcc_fb_init_parser+0xb4>
    1ef4:	movw	r1, #0
    1ef8:	movt	r1, #0
    1efc:	ldr	r3, [pc, #172]	; 1fb0 <__flatcc_fb_init_parser+0x2ec>
    1f00:	movw	r0, #0
    1f04:	movt	r0, #0
    1f08:	movw	r2, #1331	; 0x533
    1f0c:	bl	0 <__assert_fail>
    1f10:	bl	0 <flatcc_init_options>
    1f14:	b	1d28 <__flatcc_fb_init_parser+0x64>
    1f18:	movw	r3, #0
    1f1c:	movt	r3, #0
    1f20:	str	r3, [r4, #8]
    1f24:	b	1d10 <__flatcc_fb_init_parser+0x4c>
    1f28:	movw	r6, #0
    1f2c:	movt	r6, #0
    1f30:	mov	sl, #4
    1f34:	b	1df0 <__flatcc_fb_init_parser+0x12c>
    1f38:	ldr	r3, [r4, #44]	; 0x2c
    1f3c:	ldr	r5, [r4, #52]	; 0x34
    1f40:	add	r2, r5, #32
    1f44:	cmp	r2, r3
    1f48:	bhi	1f78 <__flatcc_fb_init_parser+0x2b4>
    1f4c:	add	r3, r4, #476	; 0x1dc
    1f50:	mov	r1, r5
    1f54:	ldr	r0, [r4, #412]	; 0x19c
    1f58:	ldrd	r6, [r3]
    1f5c:	mov	r3, #0
    1f60:	str	r2, [r4, #52]	; 0x34
    1f64:	mov	r2, #1
    1f68:	str	r3, [r5]
    1f6c:	strd	r6, [r5, #20]
    1f70:	bl	0 <fb_scope_table_insert_item>
    1f74:	b	1ed4 <__flatcc_fb_init_parser+0x210>
    1f78:	mov	r1, #1
    1f7c:	mov	r0, #65536	; 0x10000
    1f80:	bl	0 <calloc>
    1f84:	cmp	r0, #0
    1f88:	beq	1fac <__flatcc_fb_init_parser+0x2e8>
    1f8c:	ldr	r3, [r4, #48]	; 0x30
    1f90:	add	r1, r0, #65536	; 0x10000
    1f94:	add	r5, r0, #16
    1f98:	add	r2, r0, #48	; 0x30
    1f9c:	str	r1, [r4, #44]	; 0x2c
    1fa0:	str	r0, [r4, #48]	; 0x30
    1fa4:	str	r3, [r0]
    1fa8:	b	1f4c <__flatcc_fb_init_parser+0x288>
    1fac:	bl	20 <checkmem.part.1>
    1fb0:	.word	0x00000010

00001fb4 <__flatcc_fb_parse>:
    1fb4:	cmp	r3, #0
    1fb8:	movw	r3, #0
    1fbc:	movt	r3, #0
    1fc0:	mov	ip, #4
    1fc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1fc8:	mov	r4, r0
    1fcc:	mov	r5, r1
    1fd0:	strd	r6, [sp, #8]
    1fd4:	mov	r1, #1
    1fd8:	strd	r8, [sp, #16]
    1fdc:	add	r6, r5, r2
    1fe0:	strd	sl, [sp, #24]
    1fe4:	movw	r9, #29243	; 0x723b
    1fe8:	movt	r9, #25968	; 0x6570
    1fec:	str	lr, [sp, #32]
    1ff0:	movw	r8, #26174	; 0x663e
    1ff4:	movt	r8, #28265	; 0x6e69
    1ff8:	sub	sp, sp, #36	; 0x24
    1ffc:	mov	lr, #9
    2000:	str	r5, [r0, #60]	; 0x3c
    2004:	str	r3, [r0, #68]	; 0x44
    2008:	mov	r3, #0
    200c:	movw	fp, #26931	; 0x6933
    2010:	movt	fp, #29806	; 0x746e
    2014:	str	r1, [r0, #64]	; 0x40
    2018:	movw	r1, #0
    201c:	movt	r1, #0
    2020:	str	ip, [r0, #72]	; 0x48
    2024:	movw	r0, #64554	; 0xfc2a
    2028:	movt	r0, #65535	; 0xffff
    202c:	mov	ip, #5
    2030:	str	r3, [r4, #76]	; 0x4c
    2034:	str	r3, [r4, #80]	; 0x50
    2038:	strne	r5, [r4, #16]
    203c:	str	r3, [r4, #96]	; 0x60
    2040:	str	r3, [r4, #100]	; 0x64
    2044:	movw	r3, #30004	; 0x7534
    2048:	movt	r3, #29801	; 0x7469
    204c:	str	lr, [r4, #84]	; 0x54
    2050:	str	r3, [sp, #12]
    2054:	str	r9, [sp, #16]
    2058:	str	r1, [r4, #88]	; 0x58
    205c:	str	ip, [r4, #92]	; 0x5c
    2060:	str	r0, [r4, #104]	; 0x68
    2064:	cmp	r6, r5
    2068:	beq	22ac <__flatcc_fb_parse+0x2f8>
    206c:	ldrb	r1, [r5]
    2070:	movw	r7, #30006	; 0x7536
    2074:	movt	r7, #29811	; 0x7473
    2078:	movw	sl, #29494	; 0x7336
    207c:	movt	sl, #29812	; 0x7474
    2080:	cmp	r1, #126	; 0x7e
    2084:	ldrls	pc, [pc, r1, lsl #2]
    2088:	b	38d4 <__flatcc_fb_parse+0x1920>
    208c:	.word	0x000022ac
    2090:	.word	0x000038d4
    2094:	.word	0x000038d4
    2098:	.word	0x000038d4
    209c:	.word	0x000038d4
    20a0:	.word	0x000038d4
    20a4:	.word	0x000038d4
    20a8:	.word	0x000038d4
    20ac:	.word	0x000038d4
    20b0:	.word	0x00002288
    20b4:	.word	0x00003634
    20b8:	.word	0x000038d4
    20bc:	.word	0x000038d4
    20c0:	.word	0x00003664
    20c4:	.word	0x000038d4
    20c8:	.word	0x000038d4
    20cc:	.word	0x000038d4
    20d0:	.word	0x000038d4
    20d4:	.word	0x000038d4
    20d8:	.word	0x000038d4
    20dc:	.word	0x000038d4
    20e0:	.word	0x000038d4
    20e4:	.word	0x000038d4
    20e8:	.word	0x000038d4
    20ec:	.word	0x000038d4
    20f0:	.word	0x000038d4
    20f4:	.word	0x000038d4
    20f8:	.word	0x000038d4
    20fc:	.word	0x000038d4
    2100:	.word	0x000038d4
    2104:	.word	0x000038d4
    2108:	.word	0x000038d4
    210c:	.word	0x00002288
    2110:	.word	0x00003270
    2114:	.word	0x000024fc
    2118:	.word	0x000038d4
    211c:	.word	0x000038d4
    2120:	.word	0x00003270
    2124:	.word	0x00003234
    2128:	.word	0x000038d4
    212c:	.word	0x0000321c
    2130:	.word	0x0000321c
    2134:	.word	0x000031dc
    2138:	.word	0x000031a0
    213c:	.word	0x0000321c
    2140:	.word	0x000035f4
    2144:	.word	0x0000359c
    2148:	.word	0x000034e0
    214c:	.word	0x00003478
    2150:	.word	0x000030b4
    2154:	.word	0x000030b4
    2158:	.word	0x000030b4
    215c:	.word	0x000030b4
    2160:	.word	0x000030b4
    2164:	.word	0x000030b4
    2168:	.word	0x000030b4
    216c:	.word	0x000030b4
    2170:	.word	0x000030b4
    2174:	.word	0x00003158
    2178:	.word	0x0000321c
    217c:	.word	0x0000355c
    2180:	.word	0x00003520
    2184:	.word	0x00003404
    2188:	.word	0x0000321c
    218c:	.word	0x000038d4
    2190:	.word	0x000032f0
    2194:	.word	0x000032f0
    2198:	.word	0x000032f0
    219c:	.word	0x000032f0
    21a0:	.word	0x000032f0
    21a4:	.word	0x000032f0
    21a8:	.word	0x000032f0
    21ac:	.word	0x000032f0
    21b0:	.word	0x000032f0
    21b4:	.word	0x000032f0
    21b8:	.word	0x000032f0
    21bc:	.word	0x000032f0
    21c0:	.word	0x000032f0
    21c4:	.word	0x000032f0
    21c8:	.word	0x000032f0
    21cc:	.word	0x000032f0
    21d0:	.word	0x000032f0
    21d4:	.word	0x000032f0
    21d8:	.word	0x000032f0
    21dc:	.word	0x000032f0
    21e0:	.word	0x000032f0
    21e4:	.word	0x000032f0
    21e8:	.word	0x000032f0
    21ec:	.word	0x000032f0
    21f0:	.word	0x000032f0
    21f4:	.word	0x000032f0
    21f8:	.word	0x0000321c
    21fc:	.word	0x0000321c
    2200:	.word	0x0000321c
    2204:	.word	0x00003270
    2208:	.word	0x000032f0
    220c:	.word	0x000038d4
    2210:	.word	0x000032f0
    2214:	.word	0x000032f0
    2218:	.word	0x000032f0
    221c:	.word	0x000032f0
    2220:	.word	0x000032f0
    2224:	.word	0x000032f0
    2228:	.word	0x000032f0
    222c:	.word	0x000032f0
    2230:	.word	0x000032f0
    2234:	.word	0x000032f0
    2238:	.word	0x000032f0
    223c:	.word	0x000032f0
    2240:	.word	0x000032f0
    2244:	.word	0x000032f0
    2248:	.word	0x000032f0
    224c:	.word	0x000032f0
    2250:	.word	0x000032f0
    2254:	.word	0x000032f0
    2258:	.word	0x000032f0
    225c:	.word	0x000032f0
    2260:	.word	0x000032f0
    2264:	.word	0x000032f0
    2268:	.word	0x000032f0
    226c:	.word	0x000032f0
    2270:	.word	0x000032f0
    2274:	.word	0x000032f0
    2278:	.word	0x0000321c
    227c:	.word	0x0000329c
    2280:	.word	0x0000321c
    2284:	.word	0x00003270
    2288:	add	r3, r5, #1
    228c:	b	22a0 <__flatcc_fb_parse+0x2ec>
    2290:	ldrb	r1, [r3], #1
    2294:	cmp	r1, #9
    2298:	cmpne	r1, #32
    229c:	bne	2080 <__flatcc_fb_parse+0xcc>
    22a0:	cmp	r6, r3
    22a4:	mov	r5, r3
    22a8:	bne	2290 <__flatcc_fb_parse+0x2dc>
    22ac:	mov	r3, r5
    22b0:	mov	r2, r5
    22b4:	mov	r1, #0
    22b8:	mov	r0, r4
    22bc:	bl	50 <push_token>
    22c0:	ldr	r6, [r4, #20]
    22c4:	ldr	r3, [r4, #40]	; 0x28
    22c8:	ldr	r0, [r4, #216]	; 0xd8
    22cc:	str	r3, [r4, #24]
    22d0:	str	r6, [r4, #40]	; 0x28
    22d4:	bl	0 <malloc>
    22d8:	cmp	r0, #0
    22dc:	str	r0, [r4, #112]	; 0x70
    22e0:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    22e4:	ldr	r3, [r6, #16]
    22e8:	cmn	r3, #964	; 0x3c4
    22ec:	beq	3e4c <__flatcc_fb_parse+0x1e98>
    22f0:	movw	r7, #64565	; 0xfc35
    22f4:	movt	r7, #65535	; 0xffff
    22f8:	movw	r9, #0
    22fc:	movt	r9, #0
    2300:	movw	r8, #0
    2304:	movt	r8, #0
    2308:	mov	r1, r6
    230c:	cmp	r3, r7
    2310:	beq	26d8 <__flatcc_fb_parse+0x724>
    2314:	ldr	r0, [r4, #108]	; 0x6c
    2318:	mov	r5, r1
    231c:	movw	r9, #0
    2320:	movt	r9, #0
    2324:	movw	sl, #0
    2328:	movt	sl, #0
    232c:	movw	fp, #0
    2330:	movt	fp, #0
    2334:	str	r9, [sp, #12]
    2338:	b	23a8 <__flatcc_fb_parse+0x3f4>
    233c:	mvn	r2, #972	; 0x3cc
    2340:	cmp	r3, r2
    2344:	beq	2900 <__flatcc_fb_parse+0x94c>
    2348:	cmn	r3, #972	; 0x3cc
    234c:	bge	25f8 <__flatcc_fb_parse+0x644>
    2350:	movw	r2, #64553	; 0xfc29
    2354:	movt	r2, #65535	; 0xffff
    2358:	cmp	r3, r2
    235c:	beq	2ee4 <__flatcc_fb_parse+0xf30>
    2360:	cmn	r3, #976	; 0x3d0
    2364:	beq	2c58 <__flatcc_fb_parse+0xca4>
    2368:	mvn	r2, #996	; 0x3e4
    236c:	cmp	r3, r2
    2370:	beq	2984 <__flatcc_fb_parse+0x9d0>
    2374:	mov	ip, #0
    2378:	mov	r2, fp
    237c:	mov	r3, ip
    2380:	mov	r0, r4
    2384:	str	ip, [sp]
    2388:	str	ip, [sp, #4]
    238c:	bl	410 <__flatcc_error_report>
    2390:	ldr	r3, [r4, #40]	; 0x28
    2394:	ldr	r0, [r4, #108]	; 0x6c
    2398:	cmp	r5, r3
    239c:	beq	24b4 <__flatcc_fb_parse+0x500>
    23a0:	mov	r5, r3
    23a4:	ldr	r3, [r3, #16]
    23a8:	cmp	r3, #0
    23ac:	beq	3914 <__flatcc_fb_parse+0x1960>
    23b0:	cmp	r0, #9
    23b4:	bgt	24e0 <__flatcc_fb_parse+0x52c>
    23b8:	ldr	r1, [r4, #40]	; 0x28
    23bc:	ldr	r3, [r1, #16]
    23c0:	cmn	r3, #968	; 0x3c8
    23c4:	beq	2898 <__flatcc_fb_parse+0x8e4>
    23c8:	ble	233c <__flatcc_fb_parse+0x388>
    23cc:	cmp	r3, #5
    23d0:	beq	2880 <__flatcc_fb_parse+0x8cc>
    23d4:	bgt	25b4 <__flatcc_fb_parse+0x600>
    23d8:	movw	r2, #64570	; 0xfc3a
    23dc:	movt	r2, #65535	; 0xffff
    23e0:	cmp	r3, r2
    23e4:	beq	2800 <__flatcc_fb_parse+0x84c>
    23e8:	blt	2778 <__flatcc_fb_parse+0x7c4>
    23ec:	mvn	r2, #964	; 0x3c4
    23f0:	cmp	r3, r2
    23f4:	bne	2374 <__flatcc_fb_parse+0x3c0>
    23f8:	mov	r0, r4
    23fc:	add	r6, r4, #360	; 0x168
    2400:	bl	124 <next>
    2404:	ldrh	r3, [r6, #8]
    2408:	cmp	r3, #0
    240c:	bne	3818 <__flatcc_fb_parse+0x1864>
    2410:	ldr	r1, [r4, #40]	; 0x28
    2414:	ldr	r3, [r1, #16]
    2418:	cmp	r3, #19
    241c:	bne	2fb8 <__flatcc_fb_parse+0x1004>
    2420:	mov	r0, r4
    2424:	mov	r7, #0
    2428:	bl	124 <next>
    242c:	mov	r3, #2
    2430:	mov	r1, r6
    2434:	ldr	r8, [r4, #40]	; 0x28
    2438:	mov	r0, r4
    243c:	strh	r3, [r6, #8]
    2440:	str	r7, [r4, #360]	; 0x168
    2444:	str	r7, [r4, #364]	; 0x16c
    2448:	bl	c7c <parse_string_literal.part.7>
    244c:	ldr	r3, [r4, #360]	; 0x168
    2450:	cmp	r3, r7
    2454:	beq	248c <__flatcc_fb_parse+0x4d8>
    2458:	ldr	r3, [r4, #364]	; 0x16c
    245c:	cmp	r3, #4
    2460:	beq	248c <__flatcc_fb_parse+0x4d8>
    2464:	mov	r0, #1
    2468:	movw	r2, #0
    246c:	movt	r2, #0
    2470:	mov	r1, r8
    2474:	str	r7, [sp]
    2478:	mov	r3, r7
    247c:	str	r7, [sp, #4]
    2480:	strh	r0, [r6, #8]
    2484:	mov	r0, r4
    2488:	bl	410 <__flatcc_error_report>
    248c:	ldr	r1, [r4, #40]	; 0x28
    2490:	ldr	r3, [r1, #16]
    2494:	cmp	r3, #59	; 0x3b
    2498:	bne	36bc <__flatcc_fb_parse+0x1708>
    249c:	mov	r0, r4
    24a0:	bl	124 <next>
    24a4:	ldr	r3, [r4, #40]	; 0x28
    24a8:	ldr	r0, [r4, #108]	; 0x6c
    24ac:	cmp	r5, r3
    24b0:	bne	23a0 <__flatcc_fb_parse+0x3ec>
    24b4:	cmp	r0, #0
    24b8:	bne	24e0 <__flatcc_fb_parse+0x52c>
    24bc:	mov	r3, r0
    24c0:	mov	r1, r5
    24c4:	str	r0, [sp]
    24c8:	movw	r2, #0
    24cc:	movt	r2, #0
    24d0:	str	r0, [sp, #4]
    24d4:	mov	r0, r4
    24d8:	bl	410 <__flatcc_error_report>
    24dc:	ldr	r0, [r4, #108]	; 0x6c
    24e0:	add	sp, sp, #36	; 0x24
    24e4:	ldrd	r4, [sp]
    24e8:	ldrd	r6, [sp, #8]
    24ec:	ldrd	r8, [sp, #16]
    24f0:	ldrd	sl, [sp, #24]
    24f4:	add	sp, sp, #32
    24f8:	pop	{pc}		; (ldr pc, [sp], #4)
    24fc:	add	r7, r5, #1
    2500:	mov	r2, r5
    2504:	mov	r3, r7
    2508:	mov	r1, #19
    250c:	mov	r0, r4
    2510:	mov	r9, r7
    2514:	bl	50 <push_token>
    2518:	sub	r7, r7, #1
    251c:	b	2530 <__flatcc_fb_parse+0x57c>
    2520:	cmp	r3, #127	; 0x7f
    2524:	cmpne	r3, #31
    2528:	bls	254c <__flatcc_fb_parse+0x598>
    252c:	mov	r7, r5
    2530:	add	r5, r7, #1
    2534:	cmp	r6, r5
    2538:	beq	254c <__flatcc_fb_parse+0x598>
    253c:	ldrb	r3, [r7, #1]
    2540:	cmp	r3, #34	; 0x22
    2544:	cmpne	r3, #92	; 0x5c
    2548:	bne	2520 <__flatcc_fb_parse+0x56c>
    254c:	cmp	r5, r9
    2550:	beq	2568 <__flatcc_fb_parse+0x5b4>
    2554:	mov	r2, r9
    2558:	mov	r3, r5
    255c:	mov	r1, #20
    2560:	mov	r0, r4
    2564:	bl	50 <push_token>
    2568:	ldrb	r3, [r5]
    256c:	cmp	r3, #34	; 0x22
    2570:	beq	40c0 <__flatcc_fb_parse+0x210c>
    2574:	cmp	r3, #0
    2578:	cmpne	r6, r5
    257c:	beq	38fc <__flatcc_fb_parse+0x1948>
    2580:	cmp	r3, #92	; 0x5c
    2584:	beq	2640 <__flatcc_fb_parse+0x68c>
    2588:	cmp	r3, #13
    258c:	cmpne	r3, #10
    2590:	beq	38fc <__flatcc_fb_parse+0x1948>
    2594:	add	r7, r5, #1
    2598:	mov	r2, r5
    259c:	mov	r3, r7
    25a0:	mov	r1, #6
    25a4:	mov	r0, r4
    25a8:	mov	r9, r7
    25ac:	bl	50 <push_token>
    25b0:	b	2518 <__flatcc_fb_parse+0x564>
    25b4:	cmp	r3, #27
    25b8:	beq	2f8c <__flatcc_fb_parse+0xfd8>
    25bc:	cmp	r3, #123	; 0x7b
    25c0:	beq	2f68 <__flatcc_fb_parse+0xfb4>
    25c4:	cmp	r3, #7
    25c8:	bne	2374 <__flatcc_fb_parse+0x3c0>
    25cc:	movw	r3, #0
    25d0:	movt	r3, #0
    25d4:	movw	r2, #0
    25d8:	movt	r2, #0
    25dc:	mov	r0, #1
    25e0:	str	r3, [sp]
    25e4:	mov	r3, #0
    25e8:	str	r0, [sp, #4]
    25ec:	mov	r0, r4
    25f0:	bl	410 <__flatcc_error_report>
    25f4:	b	2390 <__flatcc_fb_parse+0x3dc>
    25f8:	movw	r2, #64566	; 0xfc36
    25fc:	movt	r2, #65535	; 0xffff
    2600:	cmp	r3, r2
    2604:	beq	2bc4 <__flatcc_fb_parse+0xc10>
    2608:	bgt	2b68 <__flatcc_fb_parse+0xbb4>
    260c:	movw	r2, #64565	; 0xfc35
    2610:	movt	r2, #65535	; 0xffff
    2614:	cmp	r3, r2
    2618:	bne	2374 <__flatcc_fb_parse+0x3c0>
    261c:	mov	ip, #0
    2620:	movw	r2, #0
    2624:	movt	r2, #0
    2628:	mov	r3, ip
    262c:	mov	r0, r4
    2630:	str	ip, [sp]
    2634:	str	ip, [sp, #4]
    2638:	bl	410 <__flatcc_error_report>
    263c:	b	2390 <__flatcc_fb_parse+0x3dc>
    2640:	add	r9, r7, #2
    2644:	mov	r2, r5
    2648:	mov	r3, r9
    264c:	mov	r1, #21
    2650:	mov	r0, r4
    2654:	bl	50 <push_token>
    2658:	cmp	r6, r9
    265c:	beq	4764 <__flatcc_fb_parse+0x27b0>
    2660:	ldrb	r3, [r5, #1]
    2664:	cmp	r3, #0
    2668:	beq	4764 <__flatcc_fb_parse+0x27b0>
    266c:	cmp	r3, #34	; 0x22
    2670:	cmpne	r3, #92	; 0x5c
    2674:	addeq	r7, r5, #2
    2678:	beq	2518 <__flatcc_fb_parse+0x564>
    267c:	cmp	r3, #10
    2680:	beq	3ff4 <__flatcc_fb_parse+0x2040>
    2684:	cmp	r3, #13
    2688:	movne	r5, r9
    268c:	bne	2594 <__flatcc_fb_parse+0x5e0>
    2690:	add	r7, r5, #2
    2694:	cmp	r6, r7
    2698:	beq	26ac <__flatcc_fb_parse+0x6f8>
    269c:	ldrb	r3, [r5, #2]
    26a0:	cmp	r3, #10
    26a4:	bne	26ac <__flatcc_fb_parse+0x6f8>
    26a8:	add	r7, r5, #3
    26ac:	ldr	ip, [r4, #64]	; 0x40
    26b0:	mov	r2, r9
    26b4:	mov	r3, r7
    26b8:	mov	r1, #18
    26bc:	mov	r0, r4
    26c0:	str	r7, [r4, #60]	; 0x3c
    26c4:	mov	r9, r7
    26c8:	add	ip, ip, #1
    26cc:	str	ip, [r4, #64]	; 0x40
    26d0:	bl	50 <push_token>
    26d4:	b	2518 <__flatcc_fb_parse+0x564>
    26d8:	mov	r0, r4
    26dc:	bl	124 <next>
    26e0:	ldr	r3, [r4, #140]	; 0x8c
    26e4:	cmp	r3, #0
    26e8:	bne	3e60 <__flatcc_fb_parse+0x1eac>
    26ec:	ldr	r1, [r4, #40]	; 0x28
    26f0:	ldr	r0, [r4, #108]	; 0x6c
    26f4:	ldr	r3, [r1, #16]
    26f8:	cmp	r0, #9
    26fc:	bgt	47f8 <__flatcc_fb_parse+0x2844>
    2700:	cmp	r3, #19
    2704:	bne	3024 <__flatcc_fb_parse+0x1070>
    2708:	mov	r0, r4
    270c:	bl	124 <next>
    2710:	ldr	r1, [r4, #44]	; 0x2c
    2714:	ldr	r3, [r4, #52]	; 0x34
    2718:	add	r2, r3, #32
    271c:	cmp	r2, r1
    2720:	bhi	3e84 <__flatcc_fb_parse+0x1ed0>
    2724:	ldr	lr, [r4, #352]	; 0x160
    2728:	mov	ip, #2
    272c:	mov	r5, #0
    2730:	add	r1, r3, #8
    2734:	mov	r0, r4
    2738:	str	r2, [r4, #52]	; 0x34
    273c:	str	lr, [r3]
    2740:	str	r3, [r4, #352]	; 0x160
    2744:	str	r5, [r3, #8]
    2748:	str	r5, [r3, #12]
    274c:	strh	ip, [r3, #16]
    2750:	bl	c7c <parse_string_literal.part.7>
    2754:	ldr	r1, [r4, #40]	; 0x28
    2758:	ldr	r3, [r1, #16]
    275c:	cmp	r3, #59	; 0x3b
    2760:	bne	3974 <__flatcc_fb_parse+0x19c0>
    2764:	mov	r0, r4
    2768:	bl	124 <next>
    276c:	ldr	r1, [r4, #40]	; 0x28
    2770:	ldr	r3, [r1, #16]
    2774:	b	230c <__flatcc_fb_parse+0x358>
    2778:	mov	r0, r4
    277c:	bl	124 <next>
    2780:	ldr	r2, [r4, #44]	; 0x2c
    2784:	ldr	r1, [r4, #52]	; 0x34
    2788:	add	r3, r1, #128	; 0x80
    278c:	cmp	r3, r2
    2790:	bhi	3748 <__flatcc_fb_parse+0x1794>
    2794:	ldr	r0, [r4, #392]	; 0x188
    2798:	mov	ip, #2
    279c:	str	r3, [r4, #52]	; 0x34
    27a0:	ldr	r2, [r4, #544]	; 0x220
    27a4:	str	r0, [r1]
    27a8:	ldr	r3, [r4, #36]	; 0x24
    27ac:	strh	ip, [r1, #8]
    27b0:	str	r1, [r4, #392]	; 0x188
    27b4:	str	r2, [r1, #12]
    27b8:	cmp	r3, #0
    27bc:	beq	27e0 <__flatcc_fb_parse+0x82c>
    27c0:	mov	r0, #0
    27c4:	b	27cc <__flatcc_fb_parse+0x818>
    27c8:	mov	r3, r2
    27cc:	ldr	r2, [r3]
    27d0:	str	r0, [r3]
    27d4:	mov	r0, r3
    27d8:	cmp	r2, #0
    27dc:	bne	27c8 <__flatcc_fb_parse+0x814>
    27e0:	mov	r0, #0
    27e4:	movw	r2, #64569	; 0xfc39
    27e8:	movt	r2, #65535	; 0xffff
    27ec:	str	r3, [r1, #32]
    27f0:	str	r0, [r4, #36]	; 0x24
    27f4:	mov	r0, r4
    27f8:	bl	16e4 <parse_compound_type>
    27fc:	b	2390 <__flatcc_fb_parse+0x3dc>
    2800:	mov	r0, r4
    2804:	add	r6, r4, #376	; 0x178
    2808:	bl	124 <next>
    280c:	ldrh	r3, [r6, #8]
    2810:	cmp	r3, #2
    2814:	beq	40f4 <__flatcc_fb_parse+0x2140>
    2818:	ldr	r1, [r4, #40]	; 0x28
    281c:	ldr	r3, [r1, #16]
    2820:	cmp	r3, #19
    2824:	bne	2fa4 <__flatcc_fb_parse+0xff0>
    2828:	mov	r0, r4
    282c:	mov	r7, #0
    2830:	bl	124 <next>
    2834:	mov	r3, #2
    2838:	mov	r1, r6
    283c:	mov	r0, r4
    2840:	strh	r3, [r6, #8]
    2844:	str	r7, [r4, #376]	; 0x178
    2848:	str	r7, [r4, #380]	; 0x17c
    284c:	bl	c7c <parse_string_literal.part.7>
    2850:	ldr	r1, [r4, #40]	; 0x28
    2854:	ldr	r3, [r1, #16]
    2858:	cmp	r3, #59	; 0x3b
    285c:	beq	249c <__flatcc_fb_parse+0x4e8>
    2860:	mov	r3, r7
    2864:	movw	r2, #0
    2868:	movt	r2, #0
    286c:	mov	r0, r4
    2870:	str	r7, [sp]
    2874:	str	r7, [sp, #4]
    2878:	bl	410 <__flatcc_error_report>
    287c:	b	2390 <__flatcc_fb_parse+0x3dc>
    2880:	movw	r3, #0
    2884:	movt	r3, #0
    2888:	movw	r2, #0
    288c:	movt	r2, #0
    2890:	mov	r0, #1
    2894:	b	25e0 <__flatcc_fb_parse+0x62c>
    2898:	mov	r0, r4
    289c:	add	r7, r4, #400	; 0x190
    28a0:	bl	124 <next>
    28a4:	ldr	r6, [r4, #40]	; 0x28
    28a8:	ldr	r3, [r4, #400]	; 0x190
    28ac:	cmp	r3, #0
    28b0:	beq	28d4 <__flatcc_fb_parse+0x920>
    28b4:	mov	ip, #0
    28b8:	mov	r1, r6
    28bc:	ldr	r2, [sp, #12]
    28c0:	mov	r3, ip
    28c4:	mov	r0, r4
    28c8:	str	ip, [sp]
    28cc:	str	ip, [sp, #4]
    28d0:	bl	410 <__flatcc_error_report>
    28d4:	mov	r1, r7
    28d8:	mov	r0, r4
    28dc:	bl	6ac <parse_ref>
    28e0:	ldr	ip, [r4, #544]	; 0x220
    28e4:	mov	r3, r6
    28e8:	mov	r2, sl
    28ec:	mov	r1, #59	; 0x3b
    28f0:	mov	r0, r4
    28f4:	str	ip, [r4, #408]	; 0x198
    28f8:	bl	804 <advance>
    28fc:	b	2390 <__flatcc_fb_parse+0x3dc>
    2900:	mov	r0, r4
    2904:	bl	124 <next>
    2908:	ldr	r2, [r4, #44]	; 0x2c
    290c:	ldr	r1, [r4, #52]	; 0x34
    2910:	add	r3, r1, #128	; 0x80
    2914:	cmp	r3, r2
    2918:	bhi	37e4 <__flatcc_fb_parse+0x1830>
    291c:	ldr	r0, [r4, #392]	; 0x188
    2920:	mov	ip, #1
    2924:	str	r3, [r4, #52]	; 0x34
    2928:	ldr	r2, [r4, #544]	; 0x220
    292c:	str	r0, [r1]
    2930:	ldr	r3, [r4, #36]	; 0x24
    2934:	strh	ip, [r1, #8]
    2938:	str	r1, [r4, #392]	; 0x188
    293c:	str	r2, [r1, #12]
    2940:	cmp	r3, #0
    2944:	beq	2968 <__flatcc_fb_parse+0x9b4>
    2948:	mov	r0, #0
    294c:	b	2954 <__flatcc_fb_parse+0x9a0>
    2950:	mov	r3, r2
    2954:	ldr	r2, [r3]
    2958:	str	r0, [r3]
    295c:	mov	r0, r3
    2960:	cmp	r2, #0
    2964:	bne	2950 <__flatcc_fb_parse+0x99c>
    2968:	mov	ip, #0
    296c:	mvn	r2, #972	; 0x3cc
    2970:	str	r3, [r1, #32]
    2974:	mov	r0, r4
    2978:	str	ip, [r4, #36]	; 0x24
    297c:	bl	16e4 <parse_compound_type>
    2980:	b	2390 <__flatcc_fb_parse+0x3dc>
    2984:	mov	r0, r4
    2988:	bl	124 <next>
    298c:	ldr	r2, [r4, #44]	; 0x2c
    2990:	ldr	r6, [r4, #52]	; 0x34
    2994:	add	r3, r6, #128	; 0x80
    2998:	cmp	r3, r2
    299c:	bhi	377c <__flatcc_fb_parse+0x17c8>
    29a0:	ldr	r1, [r4, #392]	; 0x188
    29a4:	mov	r0, #3
    29a8:	str	r3, [r4, #52]	; 0x34
    29ac:	ldr	r2, [r4, #544]	; 0x220
    29b0:	str	r1, [r6]
    29b4:	ldr	r3, [r4, #36]	; 0x24
    29b8:	strh	r0, [r6, #8]
    29bc:	str	r6, [r4, #392]	; 0x188
    29c0:	str	r2, [r6, #12]
    29c4:	cmp	r3, #0
    29c8:	beq	29ec <__flatcc_fb_parse+0xa38>
    29cc:	mov	r1, #0
    29d0:	b	29d8 <__flatcc_fb_parse+0xa24>
    29d4:	mov	r3, r2
    29d8:	ldr	r2, [r3]
    29dc:	str	r1, [r3]
    29e0:	mov	r1, r3
    29e4:	cmp	r2, #0
    29e8:	bne	29d4 <__flatcc_fb_parse+0xa20>
    29ec:	ldr	r8, [r4, #40]	; 0x28
    29f0:	mov	r7, #0
    29f4:	str	r3, [r6, #32]
    29f8:	str	r7, [r4, #36]	; 0x24
    29fc:	ldr	r3, [r8, #16]
    2a00:	cmp	r3, #9
    2a04:	bne	3050 <__flatcc_fb_parse+0x109c>
    2a08:	mov	r0, r4
    2a0c:	bl	124 <next>
    2a10:	ldr	r3, [r4, #40]	; 0x28
    2a14:	ldr	r3, [r3, #16]
    2a18:	str	r8, [r6, #4]
    2a1c:	cmp	r3, #58	; 0x3a
    2a20:	beq	3844 <__flatcc_fb_parse+0x1890>
    2a24:	mov	r0, r4
    2a28:	bl	151c <parse_metadata>
    2a2c:	ldr	r8, [r4, #40]	; 0x28
    2a30:	ldr	r3, [r8, #16]
    2a34:	str	r0, [r6, #28]
    2a38:	cmp	r3, #123	; 0x7b
    2a3c:	bne	3694 <__flatcc_fb_parse+0x16e0>
    2a40:	mov	r0, r4
    2a44:	bl	124 <next>
    2a48:	ldr	r9, [r4, #40]	; 0x28
    2a4c:	ldr	r2, [r9, #16]
    2a50:	cmp	r2, #9
    2a54:	bne	39bc <__flatcc_fb_parse+0x1a08>
    2a58:	movw	r3, #0
    2a5c:	movt	r3, #0
    2a60:	str	r3, [sp, #16]
    2a64:	mov	r0, r4
    2a68:	bl	124 <next>
    2a6c:	ldr	r3, [r4, #108]	; 0x6c
    2a70:	cmp	r3, #9
    2a74:	bgt	3074 <__flatcc_fb_parse+0x10c0>
    2a78:	ldr	r2, [r4, #44]	; 0x2c
    2a7c:	ldr	r7, [r4, #52]	; 0x34
    2a80:	add	r3, r7, #128	; 0x80
    2a84:	cmp	r3, r2
    2a88:	bhi	3eb8 <__flatcc_fb_parse+0x1f04>
    2a8c:	ldr	r2, [r6, #20]
    2a90:	mov	r0, #5
    2a94:	str	r3, [r4, #52]	; 0x34
    2a98:	str	r2, [r7]
    2a9c:	strh	r0, [r7, #8]
    2aa0:	str	r7, [r6, #20]
    2aa4:	ldr	r3, [r4, #36]	; 0x24
    2aa8:	cmp	r3, #0
    2aac:	beq	2ad0 <__flatcc_fb_parse+0xb1c>
    2ab0:	mov	r0, #0
    2ab4:	b	2abc <__flatcc_fb_parse+0xb08>
    2ab8:	mov	r3, r2
    2abc:	ldr	r2, [r3]
    2ac0:	str	r0, [r3]
    2ac4:	mov	r0, r3
    2ac8:	cmp	r2, #0
    2acc:	bne	2ab8 <__flatcc_fb_parse+0xb04>
    2ad0:	ldr	r0, [r4, #40]	; 0x28
    2ad4:	mov	r2, #0
    2ad8:	str	r3, [r7, #68]	; 0x44
    2adc:	str	r2, [r4, #36]	; 0x24
    2ae0:	str	r9, [r7, #4]
    2ae4:	ldr	r3, [r0, #16]
    2ae8:	cmp	r3, #61	; 0x3d
    2aec:	bne	2b14 <__flatcc_fb_parse+0xb60>
    2af0:	mov	r0, r4
    2af4:	bl	124 <next>
    2af8:	mov	r2, #0
    2afc:	add	r1, r7, #48	; 0x30
    2b00:	ldr	r3, [sp, #16]
    2b04:	mov	r0, r4
    2b08:	bl	e58 <parse_value>
    2b0c:	ldr	r3, [r4, #40]	; 0x28
    2b10:	ldr	r3, [r3, #16]
    2b14:	cmp	r3, #44	; 0x2c
    2b18:	beq	3994 <__flatcc_fb_parse+0x19e0>
    2b1c:	mov	r3, r8
    2b20:	movw	r2, #0
    2b24:	movt	r2, #0
    2b28:	mov	r1, #125	; 0x7d
    2b2c:	mov	r0, r4
    2b30:	bl	804 <advance>
    2b34:	ldr	r3, [r6, #20]
    2b38:	cmp	r3, #0
    2b3c:	beq	2b60 <__flatcc_fb_parse+0xbac>
    2b40:	mov	r1, #0
    2b44:	b	2b4c <__flatcc_fb_parse+0xb98>
    2b48:	mov	r3, r2
    2b4c:	ldr	r2, [r3]
    2b50:	str	r1, [r3]
    2b54:	mov	r1, r3
    2b58:	cmp	r2, #0
    2b5c:	bne	2b48 <__flatcc_fb_parse+0xb94>
    2b60:	str	r3, [r6, #20]
    2b64:	b	2390 <__flatcc_fb_parse+0x3dc>
    2b68:	mov	r0, r4
    2b6c:	mov	r7, #0
    2b70:	bl	124 <next>
    2b74:	ldr	r6, [r4, #40]	; 0x28
    2b78:	str	r7, [sp, #24]
    2b7c:	ldr	r3, [r6, #16]
    2b80:	cmp	r3, #59	; 0x3b
    2b84:	beq	3684 <__flatcc_fb_parse+0x16d0>
    2b88:	cmp	r3, #9
    2b8c:	beq	3f88 <__flatcc_fb_parse+0x1fd4>
    2b90:	mov	ip, #0
    2b94:	movw	r2, #0
    2b98:	movt	r2, #0
    2b9c:	mov	r1, r6
    2ba0:	mov	r3, ip
    2ba4:	mov	r0, r4
    2ba8:	str	ip, [sp]
    2bac:	str	ip, [sp, #4]
    2bb0:	bl	410 <__flatcc_error_report>
    2bb4:	mov	r1, #59	; 0x3b
    2bb8:	mov	r0, r4
    2bbc:	bl	2c4 <recover.constprop.10>
    2bc0:	b	2390 <__flatcc_fb_parse+0x3dc>
    2bc4:	mov	r0, r4
    2bc8:	bl	124 <next>
    2bcc:	ldr	r2, [r4, #44]	; 0x2c
    2bd0:	ldr	r6, [r4, #52]	; 0x34
    2bd4:	add	r3, r6, #32
    2bd8:	cmp	r3, r2
    2bdc:	bhi	3714 <__flatcc_fb_parse+0x1760>
    2be0:	ldr	r7, [r4, #40]	; 0x28
    2be4:	str	r3, [r4, #52]	; 0x34
    2be8:	ldr	r2, [r4, #356]	; 0x164
    2bec:	ldr	r3, [r7, #16]
    2bf0:	str	r2, [r6]
    2bf4:	str	r6, [r4, #356]	; 0x164
    2bf8:	cmp	r3, #19
    2bfc:	beq	2fcc <__flatcc_fb_parse+0x1018>
    2c00:	mov	ip, #0
    2c04:	movw	r2, #0
    2c08:	movt	r2, #0
    2c0c:	mov	r1, r7
    2c10:	mov	r3, ip
    2c14:	mov	r0, r4
    2c18:	str	ip, [sp]
    2c1c:	str	ip, [sp, #4]
    2c20:	bl	410 <__flatcc_error_report>
    2c24:	ldr	r1, [r4, #40]	; 0x28
    2c28:	ldr	r3, [r1, #16]
    2c2c:	cmp	r3, #59	; 0x3b
    2c30:	beq	249c <__flatcc_fb_parse+0x4e8>
    2c34:	mov	ip, #0
    2c38:	movw	r2, #0
    2c3c:	movt	r2, #0
    2c40:	mov	r3, ip
    2c44:	mov	r0, r4
    2c48:	str	ip, [sp]
    2c4c:	str	ip, [sp, #4]
    2c50:	bl	410 <__flatcc_error_report>
    2c54:	b	2390 <__flatcc_fb_parse+0x3dc>
    2c58:	mov	r0, r4
    2c5c:	bl	124 <next>
    2c60:	ldr	r2, [r4, #44]	; 0x2c
    2c64:	ldr	r6, [r4, #52]	; 0x34
    2c68:	add	r3, r6, #128	; 0x80
    2c6c:	cmp	r3, r2
    2c70:	bhi	37b0 <__flatcc_fb_parse+0x17fc>
    2c74:	ldr	r1, [r4, #392]	; 0x188
    2c78:	mov	r0, #4
    2c7c:	str	r3, [r4, #52]	; 0x34
    2c80:	ldr	r2, [r4, #544]	; 0x220
    2c84:	str	r1, [r6]
    2c88:	ldr	r3, [r4, #36]	; 0x24
    2c8c:	strh	r0, [r6, #8]
    2c90:	str	r6, [r4, #392]	; 0x188
    2c94:	str	r2, [r6, #12]
    2c98:	cmp	r3, #0
    2c9c:	beq	2cc0 <__flatcc_fb_parse+0xd0c>
    2ca0:	mov	r1, #0
    2ca4:	b	2cac <__flatcc_fb_parse+0xcf8>
    2ca8:	mov	r3, r2
    2cac:	ldr	r2, [r3]
    2cb0:	str	r1, [r3]
    2cb4:	mov	r1, r3
    2cb8:	cmp	r2, #0
    2cbc:	bne	2ca8 <__flatcc_fb_parse+0xcf4>
    2cc0:	ldr	r8, [r4, #40]	; 0x28
    2cc4:	mov	r7, #0
    2cc8:	str	r3, [r6, #32]
    2ccc:	str	r7, [r4, #36]	; 0x24
    2cd0:	ldr	r3, [r8, #16]
    2cd4:	cmp	r3, #9
    2cd8:	bne	3084 <__flatcc_fb_parse+0x10d0>
    2cdc:	mov	r0, r4
    2ce0:	bl	124 <next>
    2ce4:	mov	r0, r4
    2ce8:	str	r8, [r6, #4]
    2cec:	bl	151c <parse_metadata>
    2cf0:	ldr	r9, [r4, #40]	; 0x28
    2cf4:	ldr	r3, [r9, #16]
    2cf8:	str	r0, [r6, #28]
    2cfc:	cmp	r3, #123	; 0x7b
    2d00:	bne	3fd0 <__flatcc_fb_parse+0x201c>
    2d04:	mov	r0, r4
    2d08:	bl	124 <next>
    2d0c:	ldr	r8, [r4, #40]	; 0x28
    2d10:	ldr	r3, [r8, #16]
    2d14:	cmp	r3, #9
    2d18:	bne	48bc <__flatcc_fb_parse+0x2908>
    2d1c:	ldr	r3, [r4, #108]	; 0x6c
    2d20:	cmp	r3, #9
    2d24:	bgt	30a8 <__flatcc_fb_parse+0x10f4>
    2d28:	movw	r3, #0
    2d2c:	movt	r3, #0
    2d30:	str	r3, [sp, #20]
    2d34:	movw	r3, #0
    2d38:	movt	r3, #0
    2d3c:	str	r3, [sp, #16]
    2d40:	ldr	r2, [r4, #44]	; 0x2c
    2d44:	ldr	r7, [r4, #52]	; 0x34
    2d48:	add	r3, r7, #128	; 0x80
    2d4c:	cmp	r3, r2
    2d50:	bhi	4044 <__flatcc_fb_parse+0x2090>
    2d54:	ldr	r2, [r6, #20]
    2d58:	mov	r1, #5
    2d5c:	str	r3, [r4, #52]	; 0x34
    2d60:	str	r2, [r7]
    2d64:	strh	r1, [r7, #8]
    2d68:	str	r7, [r6, #20]
    2d6c:	ldr	r3, [r4, #36]	; 0x24
    2d70:	cmp	r3, #0
    2d74:	beq	2d98 <__flatcc_fb_parse+0xde4>
    2d78:	mov	r1, #0
    2d7c:	b	2d84 <__flatcc_fb_parse+0xdd0>
    2d80:	mov	r3, r2
    2d84:	ldr	r2, [r3]
    2d88:	str	r1, [r3]
    2d8c:	mov	r1, r3
    2d90:	cmp	r2, #0
    2d94:	bne	2d80 <__flatcc_fb_parse+0xdcc>
    2d98:	mov	r2, #0
    2d9c:	add	r1, sp, #28
    2da0:	str	r3, [r7, #68]	; 0x44
    2da4:	mov	r0, r4
    2da8:	str	r2, [r4, #36]	; 0x24
    2dac:	bl	6ac <parse_ref>
    2db0:	ldr	r3, [sp, #28]
    2db4:	mov	r2, #12
    2db8:	str	r3, [r7, #16]
    2dbc:	strh	r2, [r7, #24]
    2dc0:	ldr	r2, [r3]
    2dc4:	cmp	r2, #0
    2dc8:	bne	2dd4 <__flatcc_fb_parse+0xe20>
    2dcc:	b	4780 <__flatcc_fb_parse+0x27cc>
    2dd0:	mov	r2, r3
    2dd4:	ldr	r3, [r2]
    2dd8:	cmp	r3, #0
    2ddc:	bne	2dd0 <__flatcc_fb_parse+0xe1c>
    2de0:	str	r2, [sp, #28]
    2de4:	ldr	r3, [r4, #40]	; 0x28
    2de8:	ldr	r2, [r2, #4]
    2dec:	ldr	r3, [r3, #16]
    2df0:	str	r2, [r7, #4]
    2df4:	cmp	r3, #58	; 0x3a
    2df8:	beq	3f00 <__flatcc_fb_parse+0x1f4c>
    2dfc:	cmp	r3, #61	; 0x3d
    2e00:	bne	2e28 <__flatcc_fb_parse+0xe74>
    2e04:	mov	r0, r4
    2e08:	bl	124 <next>
    2e0c:	add	r1, r7, #48	; 0x30
    2e10:	mov	r2, #0
    2e14:	ldr	r3, [sp, #16]
    2e18:	mov	r0, r4
    2e1c:	bl	e58 <parse_value>
    2e20:	ldr	r3, [r4, #40]	; 0x28
    2e24:	ldr	r3, [r3, #16]
    2e28:	cmp	r3, #44	; 0x2c
    2e2c:	beq	3f50 <__flatcc_fb_parse+0x1f9c>
    2e30:	mov	r3, r9
    2e34:	movw	r2, #0
    2e38:	movt	r2, #0
    2e3c:	mov	r1, #125	; 0x7d
    2e40:	mov	r0, r4
    2e44:	bl	804 <advance>
    2e48:	ldr	r3, [r6, #20]
    2e4c:	cmp	r3, #0
    2e50:	beq	2e74 <__flatcc_fb_parse+0xec0>
    2e54:	mov	r1, #0
    2e58:	b	2e60 <__flatcc_fb_parse+0xeac>
    2e5c:	mov	r3, r2
    2e60:	ldr	r2, [r3]
    2e64:	str	r1, [r3]
    2e68:	mov	r1, r3
    2e6c:	cmp	r2, #0
    2e70:	bne	2e5c <__flatcc_fb_parse+0xea8>
    2e74:	ldr	r1, [r4, #44]	; 0x2c
    2e78:	ldr	ip, [r4, #52]	; 0x34
    2e7c:	str	r3, [r6, #20]
    2e80:	add	r2, ip, #128	; 0x80
    2e84:	cmp	r2, r1
    2e88:	bhi	41b0 <__flatcc_fb_parse+0x21fc>
    2e8c:	mov	r1, #5
    2e90:	str	r2, [r4, #52]	; 0x34
    2e94:	str	r3, [ip]
    2e98:	strh	r1, [ip, #8]
    2e9c:	str	ip, [r6, #20]
    2ea0:	ldr	r3, [r4, #36]	; 0x24
    2ea4:	cmp	r3, #0
    2ea8:	beq	2ecc <__flatcc_fb_parse+0xf18>
    2eac:	mov	r1, #0
    2eb0:	b	2eb8 <__flatcc_fb_parse+0xf04>
    2eb4:	mov	r3, r2
    2eb8:	ldr	r2, [r3]
    2ebc:	str	r1, [r3]
    2ec0:	mov	r1, r3
    2ec4:	cmp	r2, #0
    2ec8:	bne	2eb4 <__flatcc_fb_parse+0xf00>
    2ecc:	mov	r2, #0
    2ed0:	str	r3, [ip, #68]	; 0x44
    2ed4:	add	r3, r4, #68	; 0x44
    2ed8:	str	r2, [r4, #36]	; 0x24
    2edc:	str	r3, [ip, #4]
    2ee0:	b	2390 <__flatcc_fb_parse+0x3dc>
    2ee4:	mov	r0, r4
    2ee8:	bl	124 <next>
    2eec:	ldr	r2, [r4, #44]	; 0x2c
    2ef0:	ldr	r1, [r4, #52]	; 0x34
    2ef4:	add	r3, r1, #128	; 0x80
    2ef8:	cmp	r3, r2
    2efc:	bhi	36e0 <__flatcc_fb_parse+0x172c>
    2f00:	ldr	ip, [r4, #392]	; 0x188
    2f04:	mov	r2, #0
    2f08:	str	r3, [r4, #52]	; 0x34
    2f0c:	ldr	r0, [r4, #544]	; 0x220
    2f10:	str	ip, [r1]
    2f14:	ldr	r3, [r4, #36]	; 0x24
    2f18:	strh	r2, [r1, #8]
    2f1c:	str	r1, [r4, #392]	; 0x188
    2f20:	str	r0, [r1, #12]
    2f24:	cmp	r3, r2
    2f28:	bne	2f34 <__flatcc_fb_parse+0xf80>
    2f2c:	b	2f48 <__flatcc_fb_parse+0xf94>
    2f30:	mov	r3, r0
    2f34:	ldr	r0, [r3]
    2f38:	str	r2, [r3]
    2f3c:	mov	r2, r3
    2f40:	cmp	r0, #0
    2f44:	bne	2f30 <__flatcc_fb_parse+0xf7c>
    2f48:	mov	r0, #0
    2f4c:	movw	r2, #64553	; 0xfc29
    2f50:	movt	r2, #65535	; 0xffff
    2f54:	str	r3, [r1, #32]
    2f58:	str	r0, [r4, #36]	; 0x24
    2f5c:	mov	r0, r4
    2f60:	bl	16e4 <parse_compound_type>
    2f64:	b	2390 <__flatcc_fb_parse+0x3dc>
    2f68:	mov	ip, #0
    2f6c:	movw	r2, #0
    2f70:	movt	r2, #0
    2f74:	mov	r3, ip
    2f78:	mov	r0, r4
    2f7c:	str	ip, [sp]
    2f80:	str	ip, [sp, #4]
    2f84:	bl	410 <__flatcc_error_report>
    2f88:	b	2390 <__flatcc_fb_parse+0x3dc>
    2f8c:	movw	r3, #0
    2f90:	movt	r3, #0
    2f94:	movw	r2, #0
    2f98:	movt	r2, #0
    2f9c:	mov	r0, #5
    2fa0:	b	25e0 <__flatcc_fb_parse+0x62c>
    2fa4:	mov	ip, #0
    2fa8:	movw	r2, #0
    2fac:	movt	r2, #0
    2fb0:	mov	r3, ip
    2fb4:	b	2ba4 <__flatcc_fb_parse+0xbf0>
    2fb8:	mov	ip, #0
    2fbc:	movw	r2, #0
    2fc0:	movt	r2, #0
    2fc4:	mov	r3, ip
    2fc8:	b	2ba4 <__flatcc_fb_parse+0xbf0>
    2fcc:	mov	r0, r4
    2fd0:	bl	124 <next>
    2fd4:	mov	r3, #0
    2fd8:	mov	r2, #2
    2fdc:	mov	r0, r4
    2fe0:	add	r1, r6, #8
    2fe4:	str	r3, [r6, #8]
    2fe8:	str	r3, [r6, #12]
    2fec:	strh	r2, [r6, #16]
    2ff0:	bl	c7c <parse_string_literal.part.7>
    2ff4:	ldr	r0, [r6, #12]
    2ff8:	cmp	r0, #0
    2ffc:	bne	2c24 <__flatcc_fb_parse+0xc70>
    3000:	mov	r3, r0
    3004:	mov	r1, r7
    3008:	str	r0, [sp]
    300c:	movw	r2, #0
    3010:	movt	r2, #0
    3014:	str	r0, [sp, #4]
    3018:	mov	r0, r4
    301c:	bl	410 <__flatcc_error_report>
    3020:	b	2c24 <__flatcc_fb_parse+0xc70>
    3024:	mov	ip, #0
    3028:	mov	r0, r4
    302c:	mov	r3, ip
    3030:	mov	r2, r8
    3034:	str	ip, [sp]
    3038:	str	ip, [sp, #4]
    303c:	bl	410 <__flatcc_error_report>
    3040:	mov	r1, #59	; 0x3b
    3044:	mov	r0, r4
    3048:	bl	2c4 <recover.constprop.10>
    304c:	b	2710 <__flatcc_fb_parse+0x75c>
    3050:	mov	r1, r8
    3054:	movw	r2, #0
    3058:	movt	r2, #0
    305c:	mov	r3, r7
    3060:	str	r7, [sp]
    3064:	mov	r0, r4
    3068:	str	r7, [sp, #4]
    306c:	bl	410 <__flatcc_error_report>
    3070:	str	r7, [r6, #4]
    3074:	mov	r1, #125	; 0x7d
    3078:	mov	r0, r4
    307c:	bl	2c4 <recover.constprop.10>
    3080:	b	2390 <__flatcc_fb_parse+0x3dc>
    3084:	mov	r1, r8
    3088:	movw	r2, #0
    308c:	movt	r2, #0
    3090:	mov	r3, r7
    3094:	str	r7, [sp]
    3098:	mov	r0, r4
    309c:	str	r7, [sp, #4]
    30a0:	bl	410 <__flatcc_error_report>
    30a4:	str	r7, [r6, #4]
    30a8:	mov	r0, r4
    30ac:	bl	24c <recover2.constprop.9>
    30b0:	b	2390 <__flatcc_fb_parse+0x3dc>
    30b4:	add	r2, r5, #1
    30b8:	subs	r3, r2, #0
    30bc:	beq	4ca8 <__flatcc_fb_parse+0x2cf4>
    30c0:	ldrb	r1, [r2]
    30c4:	add	r2, r3, #1
    30c8:	sub	r0, r1, #48	; 0x30
    30cc:	cmp	r0, #9
    30d0:	bls	30b8 <__flatcc_fb_parse+0x1104>
    30d4:	cmp	r1, #46	; 0x2e
    30d8:	beq	4800 <__flatcc_fb_parse+0x284c>
    30dc:	cmp	r6, r3
    30e0:	beq	40dc <__flatcc_fb_parse+0x2128>
    30e4:	and	r1, r1, #223	; 0xdf
    30e8:	cmp	r1, #69	; 0x45
    30ec:	moveq	r0, r3
    30f0:	bne	40dc <__flatcc_fb_parse+0x2128>
    30f4:	add	r2, r3, #1
    30f8:	cmp	r6, r2
    30fc:	beq	3110 <__flatcc_fb_parse+0x115c>
    3100:	ldrb	r1, [r3, #1]
    3104:	sub	r1, r1, #43	; 0x2b
    3108:	tst	r1, #253	; 0xfd
    310c:	movne	r2, r3
    3110:	add	r2, r2, #1
    3114:	b	312c <__flatcc_fb_parse+0x1178>
    3118:	ldrb	r1, [r2]
    311c:	add	r2, r2, #1
    3120:	sub	r1, r1, #48	; 0x30
    3124:	cmp	r1, #9
    3128:	bhi	3138 <__flatcc_fb_parse+0x1184>
    312c:	cmp	r6, r2
    3130:	mov	r3, r2
    3134:	bne	3118 <__flatcc_fb_parse+0x1164>
    3138:	cmp	r3, r0
    313c:	beq	40dc <__flatcc_fb_parse+0x2128>
    3140:	mov	r2, r5
    3144:	mov	r1, #11
    3148:	mov	r0, r4
    314c:	mov	r5, r3
    3150:	bl	50 <push_token>
    3154:	b	3190 <__flatcc_fb_parse+0x11dc>
    3158:	add	r3, r5, #1
    315c:	cmp	r6, r3
    3160:	beq	4234 <__flatcc_fb_parse+0x2280>
    3164:	ldrb	r2, [r5, #1]
    3168:	cmp	r2, #58	; 0x3a
    316c:	beq	429c <__flatcc_fb_parse+0x22e8>
    3170:	cmp	r2, #61	; 0x3d
    3174:	bne	4234 <__flatcc_fb_parse+0x2280>
    3178:	add	r3, r5, #2
    317c:	mov	r2, r5
    3180:	movw	r1, #15674	; 0x3d3a
    3184:	mov	r0, r4
    3188:	mov	r5, r3
    318c:	bl	50 <push_token>
    3190:	cmp	r6, r5
    3194:	beq	22ac <__flatcc_fb_parse+0x2f8>
    3198:	ldrb	r1, [r5]
    319c:	b	2080 <__flatcc_fb_parse+0xcc>
    31a0:	add	r3, r5, #1
    31a4:	cmp	r6, r3
    31a8:	beq	421c <__flatcc_fb_parse+0x2268>
    31ac:	ldrb	r2, [r5, #1]
    31b0:	cmp	r2, #43	; 0x2b
    31b4:	beq	4280 <__flatcc_fb_parse+0x22cc>
    31b8:	cmp	r2, #61	; 0x3d
    31bc:	bne	421c <__flatcc_fb_parse+0x2268>
    31c0:	add	r3, r5, #2
    31c4:	mov	r2, r5
    31c8:	movw	r1, #15659	; 0x3d2b
    31cc:	mov	r0, r4
    31d0:	mov	r5, r3
    31d4:	bl	50 <push_token>
    31d8:	b	3190 <__flatcc_fb_parse+0x11dc>
    31dc:	add	r9, r5, #1
    31e0:	cmp	r6, r9
    31e4:	beq	4200 <__flatcc_fb_parse+0x224c>
    31e8:	ldrb	r3, [r5, #1]
    31ec:	cmp	r3, #42	; 0x2a
    31f0:	beq	4318 <__flatcc_fb_parse+0x2364>
    31f4:	cmp	r3, #61	; 0x3d
    31f8:	bne	4200 <__flatcc_fb_parse+0x224c>
    31fc:	mov	r2, r5
    3200:	movw	r1, #15658	; 0x3d2a
    3204:	mov	r3, r9
    3208:	mov	r0, r4
    320c:	bl	50 <push_token>
    3210:	ldrb	r1, [r5, #1]
    3214:	mov	r5, r9
    3218:	b	2080 <__flatcc_fb_parse+0xcc>
    321c:	add	r3, r5, #1
    3220:	mov	r2, r5
    3224:	mov	r0, r4
    3228:	mov	r5, r3
    322c:	bl	50 <push_token>
    3230:	b	3190 <__flatcc_fb_parse+0x11dc>
    3234:	add	r9, r5, #1
    3238:	cmp	r6, r9
    323c:	beq	4028 <__flatcc_fb_parse+0x2074>
    3240:	ldrb	r3, [r5, #1]
    3244:	cmp	r3, #38	; 0x26
    3248:	beq	4010 <__flatcc_fb_parse+0x205c>
    324c:	cmp	r3, #61	; 0x3d
    3250:	bne	4028 <__flatcc_fb_parse+0x2074>
    3254:	add	r3, r5, #2
    3258:	mov	r2, r5
    325c:	movw	r1, #15654	; 0x3d26
    3260:	mov	r0, r4
    3264:	mov	r5, r3
    3268:	bl	50 <push_token>
    326c:	b	3190 <__flatcc_fb_parse+0x11dc>
    3270:	add	r3, r5, #1
    3274:	cmp	r6, r3
    3278:	beq	3288 <__flatcc_fb_parse+0x12d4>
    327c:	ldrb	r2, [r5, #1]
    3280:	cmp	r2, #61	; 0x3d
    3284:	beq	47c4 <__flatcc_fb_parse+0x2810>
    3288:	mov	r2, r5
    328c:	mov	r0, r4
    3290:	mov	r5, r3
    3294:	bl	50 <push_token>
    3298:	b	3190 <__flatcc_fb_parse+0x11dc>
    329c:	add	r9, r5, #1
    32a0:	cmp	r6, r9
    32a4:	beq	32d4 <__flatcc_fb_parse+0x1320>
    32a8:	ldrb	r3, [r5, #1]
    32ac:	cmp	r3, #61	; 0x3d
    32b0:	beq	42cc <__flatcc_fb_parse+0x2318>
    32b4:	cmp	r3, #124	; 0x7c
    32b8:	bne	32d4 <__flatcc_fb_parse+0x1320>
    32bc:	add	r9, r5, #2
    32c0:	mov	r2, r5
    32c4:	mov	r3, r9
    32c8:	movw	r1, #31868	; 0x7c7c
    32cc:	mov	r0, r4
    32d0:	bl	50 <push_token>
    32d4:	mov	r2, r5
    32d8:	mov	r3, r9
    32dc:	mov	r1, #124	; 0x7c
    32e0:	mov	r0, r4
    32e4:	mov	r5, r9
    32e8:	bl	50 <push_token>
    32ec:	b	3190 <__flatcc_fb_parse+0x11dc>
    32f0:	add	r2, r5, #1
    32f4:	lsl	r3, r1, #8
    32f8:	cmp	r6, r2
    32fc:	mov	r9, r2
    3300:	beq	3328 <__flatcc_fb_parse+0x1374>
    3304:	ldrb	ip, [r5, #1]
    3308:	movw	r0, #0
    330c:	movt	r0, #0
    3310:	add	lr, r0, ip
    3314:	ldrb	lr, [lr, #40]	; 0x28
    3318:	cmp	lr, #0
    331c:	orrne	r3, r3, ip, lsl #16
    3320:	movne	ip, r2
    3324:	bne	33e4 <__flatcc_fb_parse+0x1430>
    3328:	mov	r0, #49	; 0x31
    332c:	orr	r3, r3, r0
    3330:	orr	r1, r3, r1, lsl #24
    3334:	ldr	r3, [sp, #16]
    3338:	cmp	r1, r3
    333c:	beq	4944 <__flatcc_fb_parse+0x2990>
    3340:	bhi	3a44 <__flatcc_fb_parse+0x1a90>
    3344:	movw	r3, #30005	; 0x7535
    3348:	movt	r3, #14441	; 0x3869
    334c:	cmp	r1, r3
    3350:	beq	4994 <__flatcc_fb_parse+0x29e0>
    3354:	bhi	39e4 <__flatcc_fb_parse+0x1a30>
    3358:	movw	r3, #30006	; 0x7536
    335c:	movt	r3, #13417	; 0x3469
    3360:	cmp	r1, r3
    3364:	beq	496c <__flatcc_fb_parse+0x29b8>
    3368:	bls	3df4 <__flatcc_fb_parse+0x1e40>
    336c:	movw	r3, #26933	; 0x6935
    3370:	movt	r3, #13422	; 0x346e
    3374:	cmp	r1, r3
    3378:	beq	4b9c <__flatcc_fb_parse+0x2be8>
    337c:	bls	3dbc <__flatcc_fb_parse+0x1e08>
    3380:	movw	r3, #30006	; 0x7536
    3384:	movt	r3, #13929	; 0x3669
    3388:	cmp	r1, r3
    338c:	bne	3bf0 <__flatcc_fb_parse+0x1c3c>
    3390:	mov	r1, r5
    3394:	movw	r0, #0
    3398:	movt	r0, #0
    339c:	mov	r2, #6
    33a0:	bl	0 <memcmp>
    33a4:	cmp	r0, #0
    33a8:	movw	r1, #64556	; 0xfc2c
    33ac:	movt	r1, #65535	; 0xffff
    33b0:	movne	r1, #9
    33b4:	mov	r2, r5
    33b8:	mov	r3, r9
    33bc:	mov	r0, r4
    33c0:	mov	r5, r9
    33c4:	bl	50 <push_token>
    33c8:	b	3190 <__flatcc_fb_parse+0x11dc>
    33cc:	ldrb	r1, [r9]
    33d0:	add	r1, r0, r1
    33d4:	ldrb	r1, [r1, #40]	; 0x28
    33d8:	cmp	r1, #0
    33dc:	beq	4808 <__flatcc_fb_parse+0x2854>
    33e0:	mov	ip, r9
    33e4:	add	r9, r9, #1
    33e8:	cmp	r6, r9
    33ec:	bne	33cc <__flatcc_fb_parse+0x1418>
    33f0:	sub	r0, r6, r5
    33f4:	ldrb	r1, [ip]
    33f8:	uxtb	r0, r0
    33fc:	add	r0, r0, #48	; 0x30
    3400:	b	332c <__flatcc_fb_parse+0x1378>
    3404:	add	r3, r5, #1
    3408:	cmp	r6, r3
    340c:	beq	424c <__flatcc_fb_parse+0x2298>
    3410:	ldrb	r2, [r5, #1]
    3414:	cmp	r2, #61	; 0x3d
    3418:	beq	4264 <__flatcc_fb_parse+0x22b0>
    341c:	cmp	r2, #62	; 0x3e
    3420:	bne	424c <__flatcc_fb_parse+0x2298>
    3424:	add	r3, r5, #2
    3428:	cmp	r6, r3
    342c:	beq	4164 <__flatcc_fb_parse+0x21b0>
    3430:	ldrb	r2, [r5, #2]
    3434:	cmp	r2, #61	; 0x3d
    3438:	beq	481c <__flatcc_fb_parse+0x2868>
    343c:	cmp	r2, #62	; 0x3e
    3440:	bne	4164 <__flatcc_fb_parse+0x21b0>
    3444:	add	r3, r5, #3
    3448:	cmp	r6, r3
    344c:	beq	345c <__flatcc_fb_parse+0x14a8>
    3450:	ldrb	r2, [r5, #3]
    3454:	cmp	r2, #61	; 0x3d
    3458:	beq	4c64 <__flatcc_fb_parse+0x2cb0>
    345c:	mov	r2, r5
    3460:	movw	r1, #15934	; 0x3e3e
    3464:	movt	r1, #62	; 0x3e
    3468:	mov	r0, r4
    346c:	mov	r5, r3
    3470:	bl	50 <push_token>
    3474:	b	3190 <__flatcc_fb_parse+0x11dc>
    3478:	add	r2, r5, #1
    347c:	cmp	r6, r2
    3480:	beq	30b8 <__flatcc_fb_parse+0x1104>
    3484:	ldrb	r3, [r5, #1]
    3488:	cmp	r3, #88	; 0x58
    348c:	beq	3498 <__flatcc_fb_parse+0x14e4>
    3490:	cmp	r3, #120	; 0x78
    3494:	bne	30b8 <__flatcc_fb_parse+0x1104>
    3498:	add	r1, r5, #2
    349c:	cmp	r6, r1
    34a0:	mov	r3, r1
    34a4:	beq	34c8 <__flatcc_fb_parse+0x1514>
    34a8:	ldrb	r2, [r1], #1
    34ac:	sub	r0, r2, #48	; 0x30
    34b0:	cmp	r0, #9
    34b4:	bls	349c <__flatcc_fb_parse+0x14e8>
    34b8:	orr	r2, r2, #32
    34bc:	sub	r2, r2, #97	; 0x61
    34c0:	cmp	r2, #5
    34c4:	bls	349c <__flatcc_fb_parse+0x14e8>
    34c8:	mov	r2, r5
    34cc:	mov	r1, #14
    34d0:	mov	r0, r4
    34d4:	mov	r5, r3
    34d8:	bl	50 <push_token>
    34dc:	b	3190 <__flatcc_fb_parse+0x11dc>
    34e0:	add	r3, r5, #1
    34e4:	cmp	r6, r3
    34e8:	beq	3508 <__flatcc_fb_parse+0x1554>
    34ec:	ldrb	r2, [r5, #1]
    34f0:	cmp	r2, #47	; 0x2f
    34f4:	beq	4548 <__flatcc_fb_parse+0x2594>
    34f8:	cmp	r2, #61	; 0x3d
    34fc:	beq	46ac <__flatcc_fb_parse+0x26f8>
    3500:	cmp	r2, #42	; 0x2a
    3504:	beq	43f8 <__flatcc_fb_parse+0x2444>
    3508:	mov	r2, r5
    350c:	mov	r1, #47	; 0x2f
    3510:	mov	r0, r4
    3514:	mov	r5, r3
    3518:	bl	50 <push_token>
    351c:	b	3190 <__flatcc_fb_parse+0x11dc>
    3520:	add	r9, r5, #1
    3524:	cmp	r6, r9
    3528:	beq	40a4 <__flatcc_fb_parse+0x20f0>
    352c:	ldrb	r3, [r5, #1]
    3530:	cmp	r3, #61	; 0x3d
    3534:	beq	4078 <__flatcc_fb_parse+0x20c4>
    3538:	cmp	r3, #62	; 0x3e
    353c:	bne	40a4 <__flatcc_fb_parse+0x20f0>
    3540:	add	r3, r5, #2
    3544:	mov	r2, r5
    3548:	movw	r1, #15933	; 0x3e3d
    354c:	mov	r0, r4
    3550:	mov	r5, r3
    3554:	bl	50 <push_token>
    3558:	b	3190 <__flatcc_fb_parse+0x11dc>
    355c:	add	r3, r5, #1
    3560:	cmp	r6, r3
    3564:	beq	3584 <__flatcc_fb_parse+0x15d0>
    3568:	ldrb	r2, [r5, #1]
    356c:	cmp	r2, #60	; 0x3c
    3570:	beq	43b8 <__flatcc_fb_parse+0x2404>
    3574:	cmp	r2, #61	; 0x3d
    3578:	beq	439c <__flatcc_fb_parse+0x23e8>
    357c:	cmp	r2, #45	; 0x2d
    3580:	beq	4380 <__flatcc_fb_parse+0x23cc>
    3584:	mov	r2, r5
    3588:	mov	r1, #60	; 0x3c
    358c:	mov	r0, r4
    3590:	mov	r5, r3
    3594:	bl	50 <push_token>
    3598:	b	3190 <__flatcc_fb_parse+0x11dc>
    359c:	add	r3, r5, #1
    35a0:	cmp	r6, r3
    35a4:	beq	41e8 <__flatcc_fb_parse+0x2234>
    35a8:	ldrb	r2, [r5, #1]
    35ac:	cmp	r2, #46	; 0x2e
    35b0:	beq	42e8 <__flatcc_fb_parse+0x2334>
    35b4:	bcc	41e8 <__flatcc_fb_parse+0x2234>
    35b8:	sub	r2, r2, #48	; 0x30
    35bc:	cmp	r2, #9
    35c0:	movls	r0, r5
    35c4:	bhi	41e8 <__flatcc_fb_parse+0x2234>
    35c8:	add	r2, r3, #1
    35cc:	b	35e4 <__flatcc_fb_parse+0x1630>
    35d0:	ldrb	r1, [r2]
    35d4:	add	r2, r2, #1
    35d8:	sub	ip, r1, #48	; 0x30
    35dc:	cmp	ip, #9
    35e0:	bhi	4338 <__flatcc_fb_parse+0x2384>
    35e4:	cmp	r6, r2
    35e8:	mov	r3, r2
    35ec:	bne	35d0 <__flatcc_fb_parse+0x161c>
    35f0:	b	3138 <__flatcc_fb_parse+0x1184>
    35f4:	add	r3, r5, #1
    35f8:	cmp	r6, r3
    35fc:	beq	361c <__flatcc_fb_parse+0x1668>
    3600:	ldrb	r2, [r5, #1]
    3604:	cmp	r2, #61	; 0x3d
    3608:	beq	4364 <__flatcc_fb_parse+0x23b0>
    360c:	cmp	r2, #62	; 0x3e
    3610:	beq	4348 <__flatcc_fb_parse+0x2394>
    3614:	cmp	r2, #45	; 0x2d
    3618:	beq	4690 <__flatcc_fb_parse+0x26dc>
    361c:	mov	r2, r5
    3620:	mov	r1, #45	; 0x2d
    3624:	mov	r0, r4
    3628:	mov	r5, r3
    362c:	bl	50 <push_token>
    3630:	b	3190 <__flatcc_fb_parse+0x11dc>
    3634:	add	r3, r5, #1
    3638:	cmp	r6, r3
    363c:	beq	364c <__flatcc_fb_parse+0x1698>
    3640:	ldrb	r2, [r5, #1]
    3644:	cmp	r2, #13
    3648:	beq	367c <__flatcc_fb_parse+0x16c8>
    364c:	ldr	r2, [r4, #64]	; 0x40
    3650:	mov	r5, r3
    3654:	str	r3, [r4, #60]	; 0x3c
    3658:	add	r3, r2, #1
    365c:	str	r3, [r4, #64]	; 0x40
    3660:	b	3190 <__flatcc_fb_parse+0x11dc>
    3664:	add	r3, r5, #1
    3668:	cmp	r6, r3
    366c:	beq	364c <__flatcc_fb_parse+0x1698>
    3670:	ldrb	r2, [r5, #1]
    3674:	cmp	r2, #10
    3678:	bne	364c <__flatcc_fb_parse+0x1698>
    367c:	add	r3, r5, #2
    3680:	b	364c <__flatcc_fb_parse+0x1698>
    3684:	mov	r0, r4
    3688:	bl	124 <next>
    368c:	str	r7, [r4, #544]	; 0x220
    3690:	b	2390 <__flatcc_fb_parse+0x3dc>
    3694:	mov	ip, #0
    3698:	mov	r1, r8
    369c:	mov	r3, ip
    36a0:	movw	r2, #0
    36a4:	movt	r2, #0
    36a8:	mov	r0, r4
    36ac:	str	ip, [sp]
    36b0:	str	ip, [sp, #4]
    36b4:	bl	410 <__flatcc_error_report>
    36b8:	b	3074 <__flatcc_fb_parse+0x10c0>
    36bc:	mov	ip, #0
    36c0:	movw	r2, #0
    36c4:	movt	r2, #0
    36c8:	mov	r3, ip
    36cc:	mov	r0, r4
    36d0:	str	ip, [sp]
    36d4:	str	ip, [sp, #4]
    36d8:	bl	410 <__flatcc_error_report>
    36dc:	b	2390 <__flatcc_fb_parse+0x3dc>
    36e0:	mov	r1, #1
    36e4:	mov	r0, #65536	; 0x10000
    36e8:	bl	0 <calloc>
    36ec:	cmp	r0, #0
    36f0:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    36f4:	ldr	r2, [r4, #48]	; 0x30
    36f8:	add	ip, r0, #65536	; 0x10000
    36fc:	add	r1, r0, #16
    3700:	add	r3, r0, #144	; 0x90
    3704:	str	ip, [r4, #44]	; 0x2c
    3708:	str	r0, [r4, #48]	; 0x30
    370c:	str	r2, [r0]
    3710:	b	2f00 <__flatcc_fb_parse+0xf4c>
    3714:	mov	r1, #1
    3718:	mov	r0, #65536	; 0x10000
    371c:	bl	0 <calloc>
    3720:	cmp	r0, #0
    3724:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    3728:	ldr	r2, [r4, #48]	; 0x30
    372c:	add	r3, r0, #65536	; 0x10000
    3730:	add	r6, r0, #16
    3734:	str	r3, [r4, #44]	; 0x2c
    3738:	add	r3, r0, #48	; 0x30
    373c:	str	r0, [r4, #48]	; 0x30
    3740:	str	r2, [r0]
    3744:	b	2be0 <__flatcc_fb_parse+0xc2c>
    3748:	mov	r1, #1
    374c:	mov	r0, #65536	; 0x10000
    3750:	bl	0 <calloc>
    3754:	cmp	r0, #0
    3758:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    375c:	ldr	r2, [r4, #48]	; 0x30
    3760:	add	ip, r0, #65536	; 0x10000
    3764:	add	r1, r0, #16
    3768:	add	r3, r0, #144	; 0x90
    376c:	str	ip, [r4, #44]	; 0x2c
    3770:	str	r0, [r4, #48]	; 0x30
    3774:	str	r2, [r0]
    3778:	b	2794 <__flatcc_fb_parse+0x7e0>
    377c:	mov	r1, #1
    3780:	mov	r0, #65536	; 0x10000
    3784:	bl	0 <calloc>
    3788:	cmp	r0, #0
    378c:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    3790:	ldr	r2, [r4, #48]	; 0x30
    3794:	add	r1, r0, #65536	; 0x10000
    3798:	add	r6, r0, #16
    379c:	add	r3, r0, #144	; 0x90
    37a0:	str	r1, [r4, #44]	; 0x2c
    37a4:	str	r0, [r4, #48]	; 0x30
    37a8:	str	r2, [r0]
    37ac:	b	29a0 <__flatcc_fb_parse+0x9ec>
    37b0:	mov	r1, #1
    37b4:	mov	r0, #65536	; 0x10000
    37b8:	bl	0 <calloc>
    37bc:	cmp	r0, #0
    37c0:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    37c4:	ldr	r2, [r4, #48]	; 0x30
    37c8:	add	r1, r0, #65536	; 0x10000
    37cc:	add	r6, r0, #16
    37d0:	add	r3, r0, #144	; 0x90
    37d4:	str	r1, [r4, #44]	; 0x2c
    37d8:	str	r0, [r4, #48]	; 0x30
    37dc:	str	r2, [r0]
    37e0:	b	2c74 <__flatcc_fb_parse+0xcc0>
    37e4:	mov	r1, #1
    37e8:	mov	r0, #65536	; 0x10000
    37ec:	bl	0 <calloc>
    37f0:	cmp	r0, #0
    37f4:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    37f8:	ldr	r2, [r4, #48]	; 0x30
    37fc:	add	ip, r0, #65536	; 0x10000
    3800:	add	r1, r0, #16
    3804:	add	r3, r0, #144	; 0x90
    3808:	str	ip, [r4, #44]	; 0x2c
    380c:	str	r0, [r4, #48]	; 0x30
    3810:	str	r2, [r0]
    3814:	b	291c <__flatcc_fb_parse+0x968>
    3818:	ldr	r1, [r4, #360]	; 0x168
    381c:	movw	r2, #0
    3820:	movt	r2, #0
    3824:	mov	r3, #0
    3828:	mov	r0, r4
    382c:	ldr	ip, [r4, #364]	; 0x16c
    3830:	str	r1, [sp]
    3834:	ldr	r1, [r4, #40]	; 0x28
    3838:	str	ip, [sp, #4]
    383c:	bl	410 <__flatcc_error_report>
    3840:	b	2410 <__flatcc_fb_parse+0x45c>
    3844:	mov	r0, r4
    3848:	bl	124 <next>
    384c:	add	r1, r6, #40	; 0x28
    3850:	mov	r0, r4
    3854:	bl	864 <parse_type>
    3858:	ldrh	r3, [r6, #48]	; 0x30
    385c:	ldr	r1, [r6, #40]	; 0x28
    3860:	cmp	r3, #8
    3864:	bne	4120 <__flatcc_fb_parse+0x216c>
    3868:	ldr	r3, [r1, #16]
    386c:	add	r3, r3, #996	; 0x3e4
    3870:	cmp	r3, #21
    3874:	ldrls	pc, [pc, r3, lsl #2]
    3878:	b	2a24 <__flatcc_fb_parse+0xa70>
    387c:	.word	0x00004140
    3880:	.word	0x00004140
    3884:	.word	0x00002a24
    3888:	.word	0x00002a24
    388c:	.word	0x00002a24
    3890:	.word	0x00002a24
    3894:	.word	0x00002a24
    3898:	.word	0x00002a24
    389c:	.word	0x00002a24
    38a0:	.word	0x00002a24
    38a4:	.word	0x00002a24
    38a8:	.word	0x00004140
    38ac:	.word	0x00002a24
    38b0:	.word	0x00002a24
    38b4:	.word	0x00002a24
    38b8:	.word	0x00002a24
    38bc:	.word	0x00002a24
    38c0:	.word	0x00002a24
    38c4:	.word	0x00002a24
    38c8:	.word	0x00002a24
    38cc:	.word	0x00002a24
    38d0:	.word	0x00004140
    38d4:	cmp	r1, #127	; 0x7f
    38d8:	cmpne	r1, #31
    38dc:	mov	r2, r5
    38e0:	add	r3, r5, #1
    38e4:	bhi	3eec <__flatcc_fb_parse+0x1f38>
    38e8:	mov	r1, #5
    38ec:	mov	r0, r4
    38f0:	mov	r5, r3
    38f4:	bl	50 <push_token>
    38f8:	b	3190 <__flatcc_fb_parse+0x11dc>
    38fc:	mov	r3, r5
    3900:	mov	r2, r5
    3904:	mov	r1, #23
    3908:	mov	r0, r4
    390c:	bl	50 <push_token>
    3910:	b	2064 <__flatcc_fb_parse+0xb0>
    3914:	ldr	r2, [r4, #356]	; 0x164
    3918:	cmp	r2, #0
    391c:	bne	3928 <__flatcc_fb_parse+0x1974>
    3920:	b	393c <__flatcc_fb_parse+0x1988>
    3924:	mov	r2, r1
    3928:	ldr	r1, [r2]
    392c:	str	r3, [r2]
    3930:	mov	r3, r2
    3934:	cmp	r1, #0
    3938:	bne	3924 <__flatcc_fb_parse+0x1970>
    393c:	ldr	r3, [r4, #392]	; 0x188
    3940:	str	r2, [r4, #356]	; 0x164
    3944:	cmp	r3, #0
    3948:	beq	396c <__flatcc_fb_parse+0x19b8>
    394c:	mov	r1, #0
    3950:	b	3958 <__flatcc_fb_parse+0x19a4>
    3954:	mov	r3, r2
    3958:	ldr	r2, [r3]
    395c:	str	r1, [r3]
    3960:	mov	r1, r3
    3964:	cmp	r2, #0
    3968:	bne	3954 <__flatcc_fb_parse+0x19a0>
    396c:	str	r3, [r4, #392]	; 0x188
    3970:	b	24e0 <__flatcc_fb_parse+0x52c>
    3974:	mov	r3, r5
    3978:	movw	r2, #0
    397c:	movt	r2, #0
    3980:	mov	r0, r4
    3984:	str	r5, [sp]
    3988:	str	r5, [sp, #4]
    398c:	bl	410 <__flatcc_error_report>
    3990:	b	276c <__flatcc_fb_parse+0x7b8>
    3994:	mov	r0, r4
    3998:	bl	124 <next>
    399c:	ldr	r9, [r4, #40]	; 0x28
    39a0:	ldr	r3, [r9, #16]
    39a4:	cmp	r3, #125	; 0x7d
    39a8:	beq	2b1c <__flatcc_fb_parse+0xb68>
    39ac:	mov	r2, #0
    39b0:	cmp	r3, #9
    39b4:	str	r2, [r4, #36]	; 0x24
    39b8:	beq	2a64 <__flatcc_fb_parse+0xab0>
    39bc:	mov	ip, #0
    39c0:	mov	r1, r9
    39c4:	mov	r3, ip
    39c8:	movw	r2, #0
    39cc:	movt	r2, #0
    39d0:	mov	r0, r4
    39d4:	str	ip, [sp]
    39d8:	str	ip, [sp, #4]
    39dc:	bl	410 <__flatcc_error_report>
    39e0:	b	3074 <__flatcc_fb_parse+0x10c0>
    39e4:	movw	r3, #29749	; 0x7435
    39e8:	movt	r3, #25953	; 0x6561
    39ec:	cmp	r1, r3
    39f0:	beq	4bec <__flatcc_fb_parse+0x2c38>
    39f4:	bls	3d50 <__flatcc_fb_parse+0x1d9c>
    39f8:	movw	r3, #26935	; 0x6937
    39fc:	movt	r3, #25966	; 0x656e
    3a00:	cmp	r1, r3
    3a04:	beq	4bc4 <__flatcc_fb_parse+0x2c10>
    3a08:	bls	3d18 <__flatcc_fb_parse+0x1d64>
    3a0c:	movw	r3, #25654	; 0x6436
    3a10:	movt	r3, #25967	; 0x656f
    3a14:	cmp	r1, r3
    3a18:	bne	3ce0 <__flatcc_fb_parse+0x1d2c>
    3a1c:	mov	r1, r5
    3a20:	movw	r0, #0
    3a24:	movt	r0, #0
    3a28:	mov	r2, #6
    3a2c:	bl	0 <memcmp>
    3a30:	cmp	r0, #0
    3a34:	movw	r1, #64561	; 0xfc31
    3a38:	movt	r1, #65535	; 0xffff
    3a3c:	movne	r1, #9
    3a40:	b	33b4 <__flatcc_fb_parse+0x1400>
    3a44:	cmp	r1, r8
    3a48:	beq	4a04 <__flatcc_fb_parse+0x2a50>
    3a4c:	bhi	3ba4 <__flatcc_fb_parse+0x1bf0>
    3a50:	movw	r3, #30005	; 0x7535
    3a54:	movt	r3, #26476	; 0x676c
    3a58:	cmp	r1, r3
    3a5c:	beq	49e0 <__flatcc_fb_parse+0x2a2c>
    3a60:	bls	3b34 <__flatcc_fb_parse+0x1b80>
    3a64:	movw	r3, #29494	; 0x7336
    3a68:	movt	r3, #26484	; 0x6774
    3a6c:	cmp	r1, r3
    3a70:	beq	49b8 <__flatcc_fb_parse+0x2a04>
    3a74:	bls	3ae8 <__flatcc_fb_parse+0x1b34>
    3a78:	movw	r3, #25140	; 0x6234
    3a7c:	movt	r3, #27759	; 0x6c6f
    3a80:	cmp	r1, r3
    3a84:	bne	3a9c <__flatcc_fb_parse+0x1ae8>
    3a88:	ldrb	r3, [r5]
    3a8c:	cmp	r3, #98	; 0x62
    3a90:	beq	417c <__flatcc_fb_parse+0x21c8>
    3a94:	mov	r1, #9
    3a98:	b	33b4 <__flatcc_fb_parse+0x1400>
    3a9c:	movw	r3, #25908	; 0x6534
    3aa0:	movt	r3, #28014	; 0x6d6e
    3aa4:	cmp	r1, r3
    3aa8:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3aac:	ldrb	r3, [r5]
    3ab0:	cmp	r3, #101	; 0x65
    3ab4:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3ab8:	ldrb	r3, [r2]
    3abc:	cmp	r3, #110	; 0x6e
    3ac0:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3ac4:	ldrb	r3, [r2, #1]
    3ac8:	add	r2, r2, #1
    3acc:	cmp	r3, #117	; 0x75
    3ad0:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3ad4:	ldrb	r3, [r2, #1]
    3ad8:	cmp	r3, #109	; 0x6d
    3adc:	mvneq	r1, #996	; 0x3e4
    3ae0:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3ae4:	b	33b4 <__flatcc_fb_parse+0x1400>
    3ae8:	movw	r3, #27700	; 0x6c34
    3aec:	movt	r3, #26479	; 0x676f
    3af0:	cmp	r1, r3
    3af4:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3af8:	ldrb	r3, [r5]
    3afc:	cmp	r3, #108	; 0x6c
    3b00:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b04:	ldrb	r3, [r2]
    3b08:	cmp	r3, #111	; 0x6f
    3b0c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b10:	ldrb	r3, [r2, #1]
    3b14:	add	r2, r2, #1
    3b18:	cmp	r3, #110	; 0x6e
    3b1c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b20:	ldrb	r3, [r2, #1]
    3b24:	cmp	r3, #103	; 0x67
    3b28:	mvneq	r1, #988	; 0x3dc
    3b2c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b30:	b	33b4 <__flatcc_fb_parse+0x1400>
    3b34:	movw	r3, #24889	; 0x6139
    3b38:	movt	r3, #25972	; 0x6574
    3b3c:	cmp	r1, r3
    3b40:	beq	4c3c <__flatcc_fb_parse+0x2c88>
    3b44:	movw	r3, #25140	; 0x6234
    3b48:	movt	r3, #25977	; 0x6579
    3b4c:	cmp	r1, r3
    3b50:	beq	4a78 <__flatcc_fb_parse+0x2ac4>
    3b54:	movw	r3, #29748	; 0x7434
    3b58:	movt	r3, #25970	; 0x6572
    3b5c:	cmp	r1, r3
    3b60:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b64:	ldrb	r3, [r5]
    3b68:	cmp	r3, #116	; 0x74
    3b6c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b70:	ldrb	r3, [r2]
    3b74:	cmp	r3, #114	; 0x72
    3b78:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b7c:	ldrb	r3, [r2, #1]
    3b80:	add	r2, r2, #1
    3b84:	cmp	r3, #117	; 0x75
    3b88:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3b8c:	ldrb	r3, [r2, #1]
    3b90:	cmp	r3, #101	; 0x65
    3b94:	movweq	r1, #64548	; 0xfc24
    3b98:	movteq	r1, #65535	; 0xffff
    3b9c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3ba0:	b	33b4 <__flatcc_fb_parse+0x1400>
    3ba4:	ldr	r3, [sp, #12]
    3ba8:	cmp	r1, r3
    3bac:	beq	4b34 <__flatcc_fb_parse+0x2b80>
    3bb0:	bls	3c88 <__flatcc_fb_parse+0x1cd4>
    3bb4:	cmp	r1, fp
    3bb8:	beq	4b04 <__flatcc_fb_parse+0x2b50>
    3bbc:	bls	3c54 <__flatcc_fb_parse+0x1ca0>
    3bc0:	cmp	r1, r7
    3bc4:	bne	3c28 <__flatcc_fb_parse+0x1c74>
    3bc8:	mov	r1, r5
    3bcc:	movw	r0, #0
    3bd0:	movt	r0, #0
    3bd4:	mov	r2, #6
    3bd8:	bl	0 <memcmp>
    3bdc:	cmp	r0, #0
    3be0:	movw	r1, #64564	; 0xfc34
    3be4:	movt	r1, #65535	; 0xffff
    3be8:	movne	r1, #9
    3bec:	b	33b4 <__flatcc_fb_parse+0x1400>
    3bf0:	movw	r3, #26933	; 0x6935
    3bf4:	movt	r3, #13934	; 0x366e
    3bf8:	cmp	r1, r3
    3bfc:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3c00:	mov	r1, r5
    3c04:	movw	r0, #0
    3c08:	movt	r0, #0
    3c0c:	mov	r2, #5
    3c10:	bl	0 <memcmp>
    3c14:	cmp	r0, #0
    3c18:	movw	r1, #64544	; 0xfc20
    3c1c:	movt	r1, #65535	; 0xffff
    3c20:	movne	r1, #9
    3c24:	b	33b4 <__flatcc_fb_parse+0x1400>
    3c28:	cmp	r1, sl
    3c2c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3c30:	mov	r1, r5
    3c34:	movw	r0, #0
    3c38:	movt	r0, #0
    3c3c:	mov	r2, #6
    3c40:	bl	0 <memcmp>
    3c44:	cmp	r0, #0
    3c48:	movne	r1, #9
    3c4c:	mvneq	r1, #972	; 0x3cc
    3c50:	b	33b4 <__flatcc_fb_parse+0x1400>
    3c54:	movw	r3, #26165	; 0x6635
    3c58:	movt	r3, #29804	; 0x746c
    3c5c:	cmp	r1, r3
    3c60:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3c64:	mov	r1, r5
    3c68:	movw	r0, #0
    3c6c:	movt	r0, #0
    3c70:	mov	r2, #5
    3c74:	bl	0 <memcmp>
    3c78:	cmp	r0, #0
    3c7c:	movne	r1, #9
    3c80:	mvneq	r1, #984	; 0x3d8
    3c84:	b	33b4 <__flatcc_fb_parse+0x1400>
    3c88:	movw	r3, #26175	; 0x663f
    3c8c:	movt	r3, #29289	; 0x7269
    3c90:	cmp	r1, r3
    3c94:	beq	4ae0 <__flatcc_fb_parse+0x2b2c>
    3c98:	movw	r3, #29493	; 0x7335
    3c9c:	movt	r3, #29800	; 0x7468
    3ca0:	cmp	r1, r3
    3ca4:	beq	4b74 <__flatcc_fb_parse+0x2bc0>
    3ca8:	movw	r3, #30005	; 0x7535
    3cac:	movt	r3, #28270	; 0x6e6e
    3cb0:	cmp	r1, r3
    3cb4:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3cb8:	mov	r1, r5
    3cbc:	movw	r0, #0
    3cc0:	movt	r0, #0
    3cc4:	mov	r2, #5
    3cc8:	bl	0 <memcmp>
    3ccc:	cmp	r0, #0
    3cd0:	movw	r1, #64560	; 0xfc30
    3cd4:	movt	r1, #65535	; 0xffff
    3cd8:	movne	r1, #9
    3cdc:	b	33b4 <__flatcc_fb_parse+0x1400>
    3ce0:	movw	r3, #29241	; 0x7239
    3ce4:	movt	r3, #25967	; 0x656f
    3ce8:	cmp	r1, r3
    3cec:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3cf0:	mov	r1, r5
    3cf4:	movw	r0, #0
    3cf8:	movt	r0, #0
    3cfc:	mov	r2, #9
    3d00:	bl	0 <memcmp>
    3d04:	cmp	r0, #0
    3d08:	movw	r1, #64568	; 0xfc38
    3d0c:	movt	r1, #65535	; 0xffff
    3d10:	movne	r1, #9
    3d14:	b	33b4 <__flatcc_fb_parse+0x1400>
    3d18:	movw	r3, #30005	; 0x7535
    3d1c:	movt	r3, #25954	; 0x6562
    3d20:	cmp	r1, r3
    3d24:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3d28:	mov	r1, r5
    3d2c:	movw	r0, #0
    3d30:	movt	r0, #0
    3d34:	mov	r2, #5
    3d38:	bl	0 <memcmp>
    3d3c:	cmp	r0, #0
    3d40:	movw	r1, #64554	; 0xfc2a
    3d44:	movt	r1, #65535	; 0xffff
    3d48:	movne	r1, #9
    3d4c:	b	33b4 <__flatcc_fb_parse+0x1400>
    3d50:	movw	r3, #26165	; 0x6635
    3d54:	movt	r3, #25953	; 0x6561
    3d58:	cmp	r1, r3
    3d5c:	beq	4ab8 <__flatcc_fb_parse+0x2b04>
    3d60:	movw	r3, #28217	; 0x6e39
    3d64:	movt	r3, #25953	; 0x6561
    3d68:	cmp	r1, r3
    3d6c:	beq	4a54 <__flatcc_fb_parse+0x2aa0>
    3d70:	movw	r3, #26932	; 0x6934
    3d74:	movt	r3, #14446	; 0x386e
    3d78:	cmp	r1, r3
    3d7c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3d80:	ldrb	r3, [r5]
    3d84:	cmp	r3, #105	; 0x69
    3d88:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3d8c:	ldrb	r3, [r2]
    3d90:	cmp	r3, #110	; 0x6e
    3d94:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3d98:	ldrb	r3, [r2, #1]
    3d9c:	add	r2, r2, #1
    3da0:	cmp	r3, #116	; 0x74
    3da4:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3da8:	ldrb	r3, [r2, #1]
    3dac:	cmp	r3, #56	; 0x38
    3db0:	mvneq	r1, #992	; 0x3e0
    3db4:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3db8:	b	33b4 <__flatcc_fb_parse+0x1400>
    3dbc:	movw	r3, #26167	; 0x6637
    3dc0:	movt	r3, #13420	; 0x346c
    3dc4:	cmp	r1, r3
    3dc8:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3dcc:	mov	r1, r5
    3dd0:	movw	r0, #0
    3dd4:	movt	r0, #0
    3dd8:	mov	r2, #7
    3ddc:	bl	0 <memcmp>
    3de0:	cmp	r0, #0
    3de4:	movw	r1, #64541	; 0xfc1d
    3de8:	movt	r1, #65535	; 0xffff
    3dec:	movne	r1, #9
    3df0:	b	33b4 <__flatcc_fb_parse+0x1400>
    3df4:	movw	r3, #26167	; 0x6637
    3df8:	movt	r3, #12908	; 0x326c
    3dfc:	cmp	r1, r3
    3e00:	beq	4c14 <__flatcc_fb_parse+0x2c60>
    3e04:	movw	r3, #26933	; 0x6935
    3e08:	movt	r3, #12910	; 0x326e
    3e0c:	cmp	r1, r3
    3e10:	beq	4a2c <__flatcc_fb_parse+0x2a78>
    3e14:	movw	r3, #30006	; 0x7536
    3e18:	movt	r3, #12905	; 0x3269
    3e1c:	cmp	r1, r3
    3e20:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    3e24:	mov	r1, r5
    3e28:	movw	r0, #0
    3e2c:	movt	r0, #0
    3e30:	mov	r2, #6
    3e34:	bl	0 <memcmp>
    3e38:	cmp	r0, #0
    3e3c:	movw	r1, #64557	; 0xfc2d
    3e40:	movt	r1, #65535	; 0xffff
    3e44:	movne	r1, #9
    3e48:	b	33b4 <__flatcc_fb_parse+0x1400>
    3e4c:	mov	r0, r4
    3e50:	bl	124 <next>
    3e54:	ldr	r6, [r4, #40]	; 0x28
    3e58:	ldr	r3, [r6, #16]
    3e5c:	b	22f0 <__flatcc_fb_parse+0x33c>
    3e60:	mov	ip, #0
    3e64:	mov	r2, r9
    3e68:	mov	r3, ip
    3e6c:	mov	r1, r6
    3e70:	mov	r0, r4
    3e74:	str	ip, [sp]
    3e78:	str	ip, [sp, #4]
    3e7c:	bl	410 <__flatcc_error_report>
    3e80:	b	26ec <__flatcc_fb_parse+0x738>
    3e84:	mov	r1, #1
    3e88:	mov	r0, #65536	; 0x10000
    3e8c:	bl	0 <calloc>
    3e90:	cmp	r0, #0
    3e94:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    3e98:	ldr	r1, [r4, #48]	; 0x30
    3e9c:	add	ip, r0, #65536	; 0x10000
    3ea0:	add	r3, r0, #16
    3ea4:	add	r2, r0, #48	; 0x30
    3ea8:	str	ip, [r4, #44]	; 0x2c
    3eac:	str	r0, [r4, #48]	; 0x30
    3eb0:	str	r1, [r0]
    3eb4:	b	2724 <__flatcc_fb_parse+0x770>
    3eb8:	mov	r1, #1
    3ebc:	mov	r0, #65536	; 0x10000
    3ec0:	bl	0 <calloc>
    3ec4:	cmp	r0, #0
    3ec8:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    3ecc:	ldr	r2, [r4, #48]	; 0x30
    3ed0:	add	ip, r0, #65536	; 0x10000
    3ed4:	add	r7, r0, #16
    3ed8:	add	r3, r0, #144	; 0x90
    3edc:	str	ip, [r4, #44]	; 0x2c
    3ee0:	str	r0, [r4, #48]	; 0x30
    3ee4:	str	r2, [r0]
    3ee8:	b	2a8c <__flatcc_fb_parse+0xad8>
    3eec:	mov	r1, #8
    3ef0:	mov	r0, r4
    3ef4:	mov	r5, r3
    3ef8:	bl	50 <push_token>
    3efc:	b	3190 <__flatcc_fb_parse+0x11dc>
    3f00:	mov	r0, r4
    3f04:	bl	124 <next>
    3f08:	ldr	r3, [r7, #16]
    3f0c:	ldr	r3, [r3]
    3f10:	cmp	r3, #0
    3f14:	beq	3f38 <__flatcc_fb_parse+0x1f84>
    3f18:	mov	ip, #0
    3f1c:	mov	r1, r8
    3f20:	ldr	r2, [sp, #20]
    3f24:	mov	r3, ip
    3f28:	mov	r0, r4
    3f2c:	str	ip, [sp]
    3f30:	str	ip, [sp, #4]
    3f34:	bl	410 <__flatcc_error_report>
    3f38:	add	r1, r7, #16
    3f3c:	mov	r0, r4
    3f40:	bl	864 <parse_type>
    3f44:	ldr	r3, [r4, #40]	; 0x28
    3f48:	ldr	r3, [r3, #16]
    3f4c:	b	2dfc <__flatcc_fb_parse+0xe48>
    3f50:	mov	r0, r4
    3f54:	bl	124 <next>
    3f58:	ldr	r8, [r4, #40]	; 0x28
    3f5c:	ldr	r3, [r8, #16]
    3f60:	cmp	r3, #125	; 0x7d
    3f64:	beq	2e30 <__flatcc_fb_parse+0xe7c>
    3f68:	mov	r2, #0
    3f6c:	cmp	r3, #9
    3f70:	str	r2, [r4, #36]	; 0x24
    3f74:	bne	48bc <__flatcc_fb_parse+0x2908>
    3f78:	ldr	r3, [r4, #108]	; 0x6c
    3f7c:	cmp	r3, #9
    3f80:	ble	2d40 <__flatcc_fb_parse+0xd8c>
    3f84:	b	30a8 <__flatcc_fb_parse+0x10f4>
    3f88:	add	r1, sp, #24
    3f8c:	mov	r0, r4
    3f90:	bl	6ac <parse_ref>
    3f94:	mov	r3, r6
    3f98:	mov	r1, #59	; 0x3b
    3f9c:	movw	r2, #0
    3fa0:	movt	r2, #0
    3fa4:	mov	r0, r4
    3fa8:	bl	804 <advance>
    3fac:	ldr	r9, [sp, #24]
    3fb0:	mov	r2, #0
    3fb4:	ldr	r0, [r4, #412]	; 0x19c
    3fb8:	mov	r1, r9
    3fbc:	bl	0 <fb_scope_table_find>
    3fc0:	subs	r8, r0, #0
    3fc4:	beq	4788 <__flatcc_fb_parse+0x27d4>
    3fc8:	str	r8, [r4, #544]	; 0x220
    3fcc:	b	2390 <__flatcc_fb_parse+0x3dc>
    3fd0:	mov	r3, r7
    3fd4:	mov	r1, r9
    3fd8:	str	r7, [sp]
    3fdc:	movw	r2, #0
    3fe0:	movt	r2, #0
    3fe4:	str	r7, [sp, #4]
    3fe8:	mov	r0, r4
    3fec:	bl	410 <__flatcc_error_report>
    3ff0:	b	30a8 <__flatcc_fb_parse+0x10f4>
    3ff4:	add	r7, r5, #2
    3ff8:	cmp	r6, r7
    3ffc:	beq	26ac <__flatcc_fb_parse+0x6f8>
    4000:	ldrb	r3, [r5, #2]
    4004:	cmp	r3, #13
    4008:	bne	26ac <__flatcc_fb_parse+0x6f8>
    400c:	b	26a8 <__flatcc_fb_parse+0x6f4>
    4010:	add	r9, r5, #2
    4014:	mov	r2, r5
    4018:	mov	r3, r9
    401c:	movw	r1, #9766	; 0x2626
    4020:	mov	r0, r4
    4024:	bl	50 <push_token>
    4028:	mov	r2, r5
    402c:	mov	r3, r9
    4030:	mov	r1, #38	; 0x26
    4034:	mov	r0, r4
    4038:	mov	r5, r9
    403c:	bl	50 <push_token>
    4040:	b	3190 <__flatcc_fb_parse+0x11dc>
    4044:	mov	r1, #1
    4048:	mov	r0, #65536	; 0x10000
    404c:	bl	0 <calloc>
    4050:	cmp	r0, #0
    4054:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    4058:	ldr	r2, [r4, #48]	; 0x30
    405c:	add	r1, r0, #65536	; 0x10000
    4060:	add	r7, r0, #16
    4064:	add	r3, r0, #144	; 0x90
    4068:	str	r1, [r4, #44]	; 0x2c
    406c:	str	r0, [r4, #48]	; 0x30
    4070:	str	r2, [r0]
    4074:	b	2d54 <__flatcc_fb_parse+0xda0>
    4078:	add	r9, r5, #2
    407c:	cmp	r6, r9
    4080:	beq	4090 <__flatcc_fb_parse+0x20dc>
    4084:	ldrb	r3, [r5, #2]
    4088:	cmp	r3, #61	; 0x3d
    408c:	beq	4904 <__flatcc_fb_parse+0x2950>
    4090:	mov	r3, r9
    4094:	mov	r2, r5
    4098:	movw	r1, #15677	; 0x3d3d
    409c:	mov	r0, r4
    40a0:	bl	50 <push_token>
    40a4:	mov	r2, r5
    40a8:	mov	r3, r9
    40ac:	mov	r1, #61	; 0x3d
    40b0:	mov	r0, r4
    40b4:	mov	r5, r9
    40b8:	bl	50 <push_token>
    40bc:	b	3190 <__flatcc_fb_parse+0x11dc>
    40c0:	add	r3, r7, #2
    40c4:	mov	r2, r5
    40c8:	mov	r1, #22
    40cc:	mov	r0, r4
    40d0:	mov	r5, r3
    40d4:	bl	50 <push_token>
    40d8:	b	2064 <__flatcc_fb_parse+0xb0>
    40dc:	mov	r2, r5
    40e0:	mov	r1, #10
    40e4:	mov	r0, r4
    40e8:	mov	r5, r3
    40ec:	bl	50 <push_token>
    40f0:	b	3190 <__flatcc_fb_parse+0x11dc>
    40f4:	ldr	r1, [r4, #376]	; 0x178
    40f8:	movw	r2, #0
    40fc:	movt	r2, #0
    4100:	mov	r3, #0
    4104:	mov	r0, r4
    4108:	ldr	ip, [r4, #380]	; 0x17c
    410c:	str	r1, [sp]
    4110:	ldr	r1, [r4, #40]	; 0x28
    4114:	str	ip, [sp, #4]
    4118:	bl	410 <__flatcc_error_report>
    411c:	b	2818 <__flatcc_fb_parse+0x864>
    4120:	mov	r3, r7
    4124:	movw	r2, #0
    4128:	movt	r2, #0
    412c:	mov	r0, r4
    4130:	str	r7, [sp]
    4134:	str	r7, [sp, #4]
    4138:	bl	410 <__flatcc_error_report>
    413c:	b	2a24 <__flatcc_fb_parse+0xa70>
    4140:	mov	ip, #0
    4144:	movw	r2, #0
    4148:	movt	r2, #0
    414c:	mov	r3, ip
    4150:	mov	r0, r4
    4154:	str	ip, [sp]
    4158:	str	ip, [sp, #4]
    415c:	bl	410 <__flatcc_error_report>
    4160:	b	2a24 <__flatcc_fb_parse+0xa70>
    4164:	mov	r2, r5
    4168:	movw	r1, #15934	; 0x3e3e
    416c:	mov	r0, r4
    4170:	mov	r5, r3
    4174:	bl	50 <push_token>
    4178:	b	3190 <__flatcc_fb_parse+0x11dc>
    417c:	ldrb	r3, [r2]
    4180:	cmp	r3, #111	; 0x6f
    4184:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4188:	ldrb	r3, [r2, #1]
    418c:	add	r2, r2, #1
    4190:	cmp	r3, #111	; 0x6f
    4194:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4198:	ldrb	r3, [r2, #1]
    419c:	cmp	r3, #108	; 0x6c
    41a0:	movweq	r1, #64537	; 0xfc19
    41a4:	movteq	r1, #65535	; 0xffff
    41a8:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    41ac:	b	33b4 <__flatcc_fb_parse+0x1400>
    41b0:	mov	r1, #1
    41b4:	mov	r0, #65536	; 0x10000
    41b8:	bl	0 <calloc>
    41bc:	cmp	r0, #0
    41c0:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    41c4:	ldr	r3, [r4, #48]	; 0x30
    41c8:	add	r2, r0, #65536	; 0x10000
    41cc:	add	ip, r0, #16
    41d0:	str	r2, [r4, #44]	; 0x2c
    41d4:	add	r2, r0, #144	; 0x90
    41d8:	str	r0, [r4, #48]	; 0x30
    41dc:	str	r3, [r0]
    41e0:	ldr	r3, [r6, #20]
    41e4:	b	2e8c <__flatcc_fb_parse+0xed8>
    41e8:	mov	r2, r5
    41ec:	mov	r1, #46	; 0x2e
    41f0:	mov	r0, r4
    41f4:	mov	r5, r3
    41f8:	bl	50 <push_token>
    41fc:	b	3190 <__flatcc_fb_parse+0x11dc>
    4200:	mov	r2, r5
    4204:	mov	r3, r9
    4208:	mov	r1, #42	; 0x2a
    420c:	mov	r0, r4
    4210:	mov	r5, r9
    4214:	bl	50 <push_token>
    4218:	b	3190 <__flatcc_fb_parse+0x11dc>
    421c:	mov	r2, r5
    4220:	mov	r1, #43	; 0x2b
    4224:	mov	r0, r4
    4228:	mov	r5, r3
    422c:	bl	50 <push_token>
    4230:	b	3190 <__flatcc_fb_parse+0x11dc>
    4234:	mov	r2, r5
    4238:	mov	r1, #58	; 0x3a
    423c:	mov	r0, r4
    4240:	mov	r5, r3
    4244:	bl	50 <push_token>
    4248:	b	3190 <__flatcc_fb_parse+0x11dc>
    424c:	mov	r2, r5
    4250:	mov	r1, #62	; 0x3e
    4254:	mov	r0, r4
    4258:	mov	r5, r3
    425c:	bl	50 <push_token>
    4260:	b	3190 <__flatcc_fb_parse+0x11dc>
    4264:	add	r3, r5, #2
    4268:	mov	r2, r5
    426c:	movw	r1, #15678	; 0x3d3e
    4270:	mov	r0, r4
    4274:	mov	r5, r3
    4278:	bl	50 <push_token>
    427c:	b	3190 <__flatcc_fb_parse+0x11dc>
    4280:	add	r3, r5, #2
    4284:	mov	r2, r5
    4288:	movw	r1, #11051	; 0x2b2b
    428c:	mov	r0, r4
    4290:	mov	r5, r3
    4294:	bl	50 <push_token>
    4298:	b	3190 <__flatcc_fb_parse+0x11dc>
    429c:	add	r3, r5, #2
    42a0:	cmp	r6, r3
    42a4:	beq	42b4 <__flatcc_fb_parse+0x2300>
    42a8:	ldrb	r2, [r5, #2]
    42ac:	cmp	r2, #61	; 0x3d
    42b0:	beq	4924 <__flatcc_fb_parse+0x2970>
    42b4:	mov	r2, r5
    42b8:	movw	r1, #14906	; 0x3a3a
    42bc:	mov	r0, r4
    42c0:	mov	r5, r3
    42c4:	bl	50 <push_token>
    42c8:	b	3190 <__flatcc_fb_parse+0x11dc>
    42cc:	add	r3, r5, #2
    42d0:	mov	r2, r5
    42d4:	movw	r1, #15740	; 0x3d7c
    42d8:	mov	r0, r4
    42dc:	mov	r5, r3
    42e0:	bl	50 <push_token>
    42e4:	b	3190 <__flatcc_fb_parse+0x11dc>
    42e8:	add	r3, r5, #2
    42ec:	cmp	r6, r3
    42f0:	beq	4300 <__flatcc_fb_parse+0x234c>
    42f4:	ldrb	r2, [r5, #2]
    42f8:	cmp	r2, #46	; 0x2e
    42fc:	beq	48e4 <__flatcc_fb_parse+0x2930>
    4300:	mov	r2, r5
    4304:	movw	r1, #11822	; 0x2e2e
    4308:	mov	r0, r4
    430c:	mov	r5, r3
    4310:	bl	50 <push_token>
    4314:	b	3190 <__flatcc_fb_parse+0x11dc>
    4318:	mov	r2, r5
    431c:	movw	r1, #10794	; 0x2a2a
    4320:	mov	r3, r9
    4324:	mov	r0, r4
    4328:	bl	50 <push_token>
    432c:	ldrb	r1, [r5, #1]
    4330:	mov	r5, r9
    4334:	b	2080 <__flatcc_fb_parse+0xcc>
    4338:	and	r1, r1, #223	; 0xdf
    433c:	cmp	r1, #69	; 0x45
    4340:	bne	3138 <__flatcc_fb_parse+0x1184>
    4344:	b	30f4 <__flatcc_fb_parse+0x1140>
    4348:	add	r3, r5, #2
    434c:	mov	r2, r5
    4350:	movw	r1, #15917	; 0x3e2d
    4354:	mov	r0, r4
    4358:	mov	r5, r3
    435c:	bl	50 <push_token>
    4360:	b	3190 <__flatcc_fb_parse+0x11dc>
    4364:	add	r3, r5, #2
    4368:	mov	r2, r5
    436c:	movw	r1, #15661	; 0x3d2d
    4370:	mov	r0, r4
    4374:	mov	r5, r3
    4378:	bl	50 <push_token>
    437c:	b	3190 <__flatcc_fb_parse+0x11dc>
    4380:	add	r3, r5, #2
    4384:	mov	r2, r5
    4388:	movw	r1, #11580	; 0x2d3c
    438c:	mov	r0, r4
    4390:	mov	r5, r3
    4394:	bl	50 <push_token>
    4398:	b	3190 <__flatcc_fb_parse+0x11dc>
    439c:	add	r3, r5, #2
    43a0:	mov	r2, r5
    43a4:	movw	r1, #15676	; 0x3d3c
    43a8:	mov	r0, r4
    43ac:	mov	r5, r3
    43b0:	bl	50 <push_token>
    43b4:	b	3190 <__flatcc_fb_parse+0x11dc>
    43b8:	add	r3, r5, #2
    43bc:	cmp	r6, r3
    43c0:	beq	483c <__flatcc_fb_parse+0x2888>
    43c4:	ldrb	r2, [r5, #2]
    43c8:	cmp	r2, #60	; 0x3c
    43cc:	beq	4888 <__flatcc_fb_parse+0x28d4>
    43d0:	cmp	r2, #61	; 0x3d
    43d4:	bne	483c <__flatcc_fb_parse+0x2888>
    43d8:	add	r3, r5, #3
    43dc:	mov	r2, r5
    43e0:	movw	r1, #15420	; 0x3c3c
    43e4:	movt	r1, #61	; 0x3d
    43e8:	mov	r0, r4
    43ec:	mov	r5, r3
    43f0:	bl	50 <push_token>
    43f4:	b	3190 <__flatcc_fb_parse+0x11dc>
    43f8:	add	r7, r5, #2
    43fc:	cmp	r6, r7
    4400:	beq	47ec <__flatcc_fb_parse+0x2838>
    4404:	ldrb	r3, [r5, #2]
    4408:	cmp	r3, #33	; 0x21
    440c:	cmpne	r3, #42	; 0x2a
    4410:	bne	47ec <__flatcc_fb_parse+0x2838>
    4414:	mov	r0, #1
    4418:	add	r7, r5, #3
    441c:	movw	r1, #64572	; 0xfc3c
    4420:	movt	r1, #65535	; 0xffff
    4424:	mov	r3, r7
    4428:	mov	r2, r7
    442c:	str	r0, [r4, #32]
    4430:	mov	r0, r4
    4434:	bl	50 <push_token>
    4438:	movw	r9, #64572	; 0xfc3c
    443c:	movt	r9, #65535	; 0xffff
    4440:	sub	r2, r7, #1
    4444:	b	444c <__flatcc_fb_parse+0x2498>
    4448:	mov	r2, r5
    444c:	add	r5, r2, #1
    4450:	cmp	r6, r5
    4454:	beq	4504 <__flatcc_fb_parse+0x2550>
    4458:	ldrb	r3, [r2, #1]
    445c:	cmp	r3, #127	; 0x7f
    4460:	cmpne	r3, #31
    4464:	bls	4530 <__flatcc_fb_parse+0x257c>
    4468:	cmp	r3, #47	; 0x2f
    446c:	bne	4448 <__flatcc_fb_parse+0x2494>
    4470:	ldrb	r3, [r5, #-1]
    4474:	cmp	r3, #42	; 0x2a
    4478:	bne	4448 <__flatcc_fb_parse+0x2494>
    447c:	cmp	r7, r2
    4480:	moveq	r5, r7
    4484:	beq	4498 <__flatcc_fb_parse+0x24e4>
    4488:	ldr	r3, [r4, #32]
    448c:	mov	r5, r2
    4490:	cmp	r3, #0
    4494:	bne	4518 <__flatcc_fb_parse+0x2564>
    4498:	cmp	r6, r5
    449c:	beq	45e4 <__flatcc_fb_parse+0x2630>
    44a0:	ldrb	r3, [r5]
    44a4:	cmp	r3, #0
    44a8:	beq	45e4 <__flatcc_fb_parse+0x2630>
    44ac:	cmp	r3, #10
    44b0:	beq	462c <__flatcc_fb_parse+0x2678>
    44b4:	cmp	r3, #13
    44b8:	beq	4658 <__flatcc_fb_parse+0x26a4>
    44bc:	cmp	r3, #127	; 0x7f
    44c0:	cmpne	r3, #31
    44c4:	movls	r2, #1
    44c8:	movhi	r2, #0
    44cc:	bhi	4620 <__flatcc_fb_parse+0x266c>
    44d0:	cmp	r3, #9
    44d4:	cmpne	r3, #32
    44d8:	add	r7, r5, #1
    44dc:	bne	4678 <__flatcc_fb_parse+0x26c4>
    44e0:	ldr	r3, [r4, #32]
    44e4:	cmp	r3, #0
    44e8:	beq	4440 <__flatcc_fb_parse+0x248c>
    44ec:	mov	r2, r5
    44f0:	mov	r3, r7
    44f4:	mov	r1, r9
    44f8:	mov	r0, r4
    44fc:	bl	50 <push_token>
    4500:	b	4440 <__flatcc_fb_parse+0x248c>
    4504:	cmp	r7, r6
    4508:	beq	45e4 <__flatcc_fb_parse+0x2630>
    450c:	ldr	r3, [r4, #32]
    4510:	cmp	r3, #0
    4514:	beq	45e4 <__flatcc_fb_parse+0x2630>
    4518:	mov	r2, r7
    451c:	mov	r3, r5
    4520:	mov	r1, r9
    4524:	mov	r0, r4
    4528:	bl	50 <push_token>
    452c:	b	4498 <__flatcc_fb_parse+0x24e4>
    4530:	cmp	r7, r5
    4534:	beq	44a4 <__flatcc_fb_parse+0x24f0>
    4538:	ldr	r3, [r4, #32]
    453c:	cmp	r3, #0
    4540:	beq	44a0 <__flatcc_fb_parse+0x24ec>
    4544:	b	4518 <__flatcc_fb_parse+0x2564>
    4548:	add	r7, r5, #2
    454c:	cmp	r6, r7
    4550:	beq	47e0 <__flatcc_fb_parse+0x282c>
    4554:	ldrb	r3, [r5, #2]
    4558:	cmp	r3, #33	; 0x21
    455c:	cmpne	r3, #47	; 0x2f
    4560:	bne	47e0 <__flatcc_fb_parse+0x282c>
    4564:	mov	r0, #1
    4568:	add	r7, r5, #3
    456c:	movw	r1, #64572	; 0xfc3c
    4570:	movt	r1, #65535	; 0xffff
    4574:	mov	r3, r7
    4578:	mov	r2, r7
    457c:	str	r0, [r4, #32]
    4580:	mov	r0, r4
    4584:	bl	50 <push_token>
    4588:	movw	sl, #64572	; 0xfc3c
    458c:	movt	sl, #65535	; 0xffff
    4590:	sub	r9, r7, #1
    4594:	b	45ac <__flatcc_fb_parse+0x25f8>
    4598:	ldrb	r3, [r9, #1]
    459c:	cmp	r3, #127	; 0x7f
    45a0:	cmpne	r3, #31
    45a4:	bls	46c8 <__flatcc_fb_parse+0x2714>
    45a8:	mov	r9, r5
    45ac:	add	r5, r9, #1
    45b0:	cmp	r6, r5
    45b4:	bne	4598 <__flatcc_fb_parse+0x25e4>
    45b8:	cmp	r7, r6
    45bc:	beq	45e4 <__flatcc_fb_parse+0x2630>
    45c0:	ldr	r3, [r4, #32]
    45c4:	cmp	r3, #0
    45c8:	beq	45e4 <__flatcc_fb_parse+0x2630>
    45cc:	movw	r1, #64572	; 0xfc3c
    45d0:	movt	r1, #65535	; 0xffff
    45d4:	mov	r2, r7
    45d8:	mov	r3, r6
    45dc:	mov	r0, r4
    45e0:	bl	50 <push_token>
    45e4:	mov	r3, r5
    45e8:	mov	r2, r5
    45ec:	mov	r1, #27
    45f0:	mov	r0, r4
    45f4:	bl	50 <push_token>
    45f8:	cmp	r6, r5
    45fc:	beq	22ac <__flatcc_fb_parse+0x2f8>
    4600:	ldrb	r1, [r5]
    4604:	cmp	r1, #0
    4608:	bne	22ac <__flatcc_fb_parse+0x2f8>
    460c:	mov	r3, r5
    4610:	mov	r2, r5
    4614:	mov	r0, r4
    4618:	bl	50 <push_token>
    461c:	b	22c0 <__flatcc_fb_parse+0x30c>
    4620:	add	r5, r5, #2
    4624:	str	r2, [r4, #32]
    4628:	b	2064 <__flatcc_fb_parse+0xb0>
    462c:	add	r7, r5, #1
    4630:	cmp	r6, r7
    4634:	beq	4644 <__flatcc_fb_parse+0x2690>
    4638:	ldrb	r3, [r5, #1]
    463c:	cmp	r3, #13
    4640:	beq	4670 <__flatcc_fb_parse+0x26bc>
    4644:	ldr	r3, [r4, #64]	; 0x40
    4648:	str	r7, [r4, #60]	; 0x3c
    464c:	add	r3, r3, #1
    4650:	str	r3, [r4, #64]	; 0x40
    4654:	b	4440 <__flatcc_fb_parse+0x248c>
    4658:	add	r7, r5, #1
    465c:	cmp	r6, r7
    4660:	beq	4644 <__flatcc_fb_parse+0x2690>
    4664:	ldrb	r3, [r5, #1]
    4668:	cmp	r3, #10
    466c:	bne	4644 <__flatcc_fb_parse+0x2690>
    4670:	add	r7, r5, #2
    4674:	b	4644 <__flatcc_fb_parse+0x2690>
    4678:	mov	r2, r5
    467c:	mov	r3, r7
    4680:	mov	r1, #7
    4684:	mov	r0, r4
    4688:	bl	50 <push_token>
    468c:	b	4440 <__flatcc_fb_parse+0x248c>
    4690:	add	r3, r5, #2
    4694:	mov	r2, r5
    4698:	movw	r1, #11565	; 0x2d2d
    469c:	mov	r0, r4
    46a0:	mov	r5, r3
    46a4:	bl	50 <push_token>
    46a8:	b	3190 <__flatcc_fb_parse+0x11dc>
    46ac:	add	r3, r5, #2
    46b0:	mov	r2, r5
    46b4:	movw	r1, #15663	; 0x3d2f
    46b8:	mov	r0, r4
    46bc:	mov	r5, r3
    46c0:	bl	50 <push_token>
    46c4:	b	3190 <__flatcc_fb_parse+0x11dc>
    46c8:	cmp	r7, r5
    46cc:	bne	4734 <__flatcc_fb_parse+0x2780>
    46d0:	ldrb	r3, [r5]
    46d4:	cmp	r3, #0
    46d8:	beq	45e4 <__flatcc_fb_parse+0x2630>
    46dc:	cmp	r3, #13
    46e0:	cmpne	r3, #10
    46e4:	beq	4758 <__flatcc_fb_parse+0x27a4>
    46e8:	cmp	r3, #9
    46ec:	cmpne	r3, #32
    46f0:	add	r7, r9, #2
    46f4:	bne	471c <__flatcc_fb_parse+0x2768>
    46f8:	ldr	r3, [r4, #32]
    46fc:	cmp	r3, #0
    4700:	beq	4590 <__flatcc_fb_parse+0x25dc>
    4704:	mov	r2, r5
    4708:	mov	r3, r7
    470c:	mov	r1, sl
    4710:	mov	r0, r4
    4714:	bl	50 <push_token>
    4718:	b	4590 <__flatcc_fb_parse+0x25dc>
    471c:	mov	r2, r5
    4720:	mov	r3, r7
    4724:	mov	r1, #7
    4728:	mov	r0, r4
    472c:	bl	50 <push_token>
    4730:	b	4590 <__flatcc_fb_parse+0x25dc>
    4734:	ldr	r3, [r4, #32]
    4738:	cmp	r3, #0
    473c:	beq	46d0 <__flatcc_fb_parse+0x271c>
    4740:	mov	r2, r7
    4744:	mov	r3, r5
    4748:	mov	r1, sl
    474c:	mov	r0, r4
    4750:	bl	50 <push_token>
    4754:	b	46d0 <__flatcc_fb_parse+0x271c>
    4758:	mov	r3, #0
    475c:	str	r3, [r4, #32]
    4760:	b	2064 <__flatcc_fb_parse+0xb0>
    4764:	mov	r3, r9
    4768:	mov	r2, r9
    476c:	mov	r1, #23
    4770:	mov	r0, r4
    4774:	mov	r5, r9
    4778:	bl	50 <push_token>
    477c:	b	2064 <__flatcc_fb_parse+0xb0>
    4780:	mov	r2, r3
    4784:	b	2de4 <__flatcc_fb_parse+0xe30>
    4788:	ldr	r3, [r4, #44]	; 0x2c
    478c:	ldr	r8, [r4, #52]	; 0x34
    4790:	add	r2, r8, #32
    4794:	cmp	r2, r3
    4798:	bhi	4854 <__flatcc_fb_parse+0x28a0>
    479c:	add	r3, r4, #476	; 0x1dc
    47a0:	mov	r1, r8
    47a4:	ldr	r0, [r4, #412]	; 0x19c
    47a8:	ldrd	r6, [r3]
    47ac:	str	r2, [r4, #52]	; 0x34
    47b0:	mov	r2, #1
    47b4:	str	r9, [r8]
    47b8:	strd	r6, [r8, #20]
    47bc:	bl	0 <fb_scope_table_insert_item>
    47c0:	b	3fc8 <__flatcc_fb_parse+0x2014>
    47c4:	add	r3, r5, #2
    47c8:	mov	r2, r5
    47cc:	orr	r1, r1, #15616	; 0x3d00
    47d0:	mov	r0, r4
    47d4:	mov	r5, r3
    47d8:	bl	50 <push_token>
    47dc:	b	3190 <__flatcc_fb_parse+0x11dc>
    47e0:	mov	r3, #0
    47e4:	str	r3, [r4, #32]
    47e8:	b	4588 <__flatcc_fb_parse+0x25d4>
    47ec:	mov	r3, #0
    47f0:	str	r3, [r4, #32]
    47f4:	b	4438 <__flatcc_fb_parse+0x2484>
    47f8:	mov	r5, r1
    47fc:	b	231c <__flatcc_fb_parse+0x368>
    4800:	mov	r0, r3
    4804:	b	35c8 <__flatcc_fb_parse+0x1614>
    4808:	sub	r0, r9, r5
    480c:	ldrb	r1, [ip]
    4810:	uxtb	r0, r0
    4814:	add	r0, r0, #48	; 0x30
    4818:	b	332c <__flatcc_fb_parse+0x1378>
    481c:	add	r3, r5, #3
    4820:	mov	r2, r5
    4824:	movw	r1, #15934	; 0x3e3e
    4828:	movt	r1, #61	; 0x3d
    482c:	mov	r0, r4
    4830:	mov	r5, r3
    4834:	bl	50 <push_token>
    4838:	b	3190 <__flatcc_fb_parse+0x11dc>
    483c:	mov	r2, r5
    4840:	movw	r1, #15420	; 0x3c3c
    4844:	mov	r0, r4
    4848:	mov	r5, r3
    484c:	bl	50 <push_token>
    4850:	b	3190 <__flatcc_fb_parse+0x11dc>
    4854:	mov	r1, #1
    4858:	mov	r0, #65536	; 0x10000
    485c:	bl	0 <calloc>
    4860:	cmp	r0, #0
    4864:	beq	4ca4 <__flatcc_fb_parse+0x2cf0>
    4868:	ldr	r3, [r4, #48]	; 0x30
    486c:	add	r1, r0, #65536	; 0x10000
    4870:	add	r8, r0, #16
    4874:	add	r2, r0, #48	; 0x30
    4878:	str	r1, [r4, #44]	; 0x2c
    487c:	str	r0, [r4, #48]	; 0x30
    4880:	str	r3, [r0]
    4884:	b	479c <__flatcc_fb_parse+0x27e8>
    4888:	add	r3, r5, #3
    488c:	cmp	r6, r3
    4890:	beq	48a0 <__flatcc_fb_parse+0x28ec>
    4894:	ldrb	r2, [r5, #3]
    4898:	cmp	r2, #61	; 0x3d
    489c:	beq	4c84 <__flatcc_fb_parse+0x2cd0>
    48a0:	mov	r2, r5
    48a4:	movw	r1, #15420	; 0x3c3c
    48a8:	movt	r1, #60	; 0x3c
    48ac:	mov	r0, r4
    48b0:	mov	r5, r3
    48b4:	bl	50 <push_token>
    48b8:	b	3190 <__flatcc_fb_parse+0x11dc>
    48bc:	mov	ip, #0
    48c0:	mov	r1, r8
    48c4:	mov	r3, ip
    48c8:	movw	r2, #0
    48cc:	movt	r2, #0
    48d0:	mov	r0, r4
    48d4:	str	ip, [sp]
    48d8:	str	ip, [sp, #4]
    48dc:	bl	410 <__flatcc_error_report>
    48e0:	b	30a8 <__flatcc_fb_parse+0x10f4>
    48e4:	add	r3, r5, #3
    48e8:	mov	r2, r5
    48ec:	movw	r1, #11822	; 0x2e2e
    48f0:	movt	r1, #46	; 0x2e
    48f4:	mov	r0, r4
    48f8:	mov	r5, r3
    48fc:	bl	50 <push_token>
    4900:	b	3190 <__flatcc_fb_parse+0x11dc>
    4904:	add	r3, r5, #3
    4908:	mov	r2, r5
    490c:	movw	r1, #15677	; 0x3d3d
    4910:	movt	r1, #61	; 0x3d
    4914:	mov	r0, r4
    4918:	mov	r5, r3
    491c:	bl	50 <push_token>
    4920:	b	3190 <__flatcc_fb_parse+0x11dc>
    4924:	add	r3, r5, #3
    4928:	mov	r2, r5
    492c:	movw	r1, #14906	; 0x3a3a
    4930:	movt	r1, #61	; 0x3d
    4934:	mov	r0, r4
    4938:	mov	r5, r3
    493c:	bl	50 <push_token>
    4940:	b	3190 <__flatcc_fb_parse+0x11dc>
    4944:	mov	r1, r5
    4948:	movw	r0, #0
    494c:	movt	r0, #0
    4950:	mov	r2, #11
    4954:	bl	0 <memcmp>
    4958:	cmp	r0, #0
    495c:	movw	r1, #64569	; 0xfc39
    4960:	movt	r1, #65535	; 0xffff
    4964:	movne	r1, #9
    4968:	b	33b4 <__flatcc_fb_parse+0x1400>
    496c:	mov	r1, r5
    4970:	movw	r0, #0
    4974:	movt	r0, #0
    4978:	mov	r2, #6
    497c:	bl	0 <memcmp>
    4980:	cmp	r0, #0
    4984:	movw	r1, #64558	; 0xfc2e
    4988:	movt	r1, #65535	; 0xffff
    498c:	movne	r1, #9
    4990:	b	33b4 <__flatcc_fb_parse+0x1400>
    4994:	mov	r1, r5
    4998:	movw	r0, #0
    499c:	movt	r0, #0
    49a0:	mov	r2, #5
    49a4:	bl	0 <memcmp>
    49a8:	cmp	r0, #0
    49ac:	movne	r1, #9
    49b0:	mvneq	r1, #980	; 0x3d4
    49b4:	b	33b4 <__flatcc_fb_parse+0x1400>
    49b8:	mov	r1, r5
    49bc:	movw	r0, #0
    49c0:	movt	r0, #0
    49c4:	mov	r2, #6
    49c8:	bl	0 <memcmp>
    49cc:	cmp	r0, #0
    49d0:	movw	r1, #64562	; 0xfc32
    49d4:	movt	r1, #65535	; 0xffff
    49d8:	movne	r1, #9
    49dc:	b	33b4 <__flatcc_fb_parse+0x1400>
    49e0:	mov	r1, r5
    49e4:	movw	r0, #0
    49e8:	movt	r0, #0
    49ec:	mov	r2, #5
    49f0:	bl	0 <memcmp>
    49f4:	cmp	r0, #0
    49f8:	movne	r1, #9
    49fc:	mvneq	r1, #976	; 0x3d0
    4a00:	b	33b4 <__flatcc_fb_parse+0x1400>
    4a04:	mov	r1, r5
    4a08:	movw	r0, #0
    4a0c:	movt	r0, #0
    4a10:	mov	r2, #14
    4a14:	bl	0 <memcmp>
    4a18:	cmp	r0, #0
    4a1c:	movw	r1, #64570	; 0xfc3a
    4a20:	movt	r1, #65535	; 0xffff
    4a24:	movne	r1, #9
    4a28:	b	33b4 <__flatcc_fb_parse+0x1400>
    4a2c:	mov	r1, r5
    4a30:	movw	r0, #0
    4a34:	movt	r0, #0
    4a38:	mov	r2, #5
    4a3c:	bl	0 <memcmp>
    4a40:	cmp	r0, #0
    4a44:	movw	r1, #64545	; 0xfc21
    4a48:	movt	r1, #65535	; 0xffff
    4a4c:	movne	r1, #9
    4a50:	b	33b4 <__flatcc_fb_parse+0x1400>
    4a54:	mov	r1, r5
    4a58:	movw	r0, #0
    4a5c:	movt	r0, #0
    4a60:	mov	r2, #9
    4a64:	bl	0 <memcmp>
    4a68:	cmp	r0, #0
    4a6c:	movne	r1, #9
    4a70:	mvneq	r1, #968	; 0x3c8
    4a74:	b	33b4 <__flatcc_fb_parse+0x1400>
    4a78:	ldrb	r3, [r5]
    4a7c:	cmp	r3, #98	; 0x62
    4a80:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4a84:	ldrb	r3, [r2]
    4a88:	cmp	r3, #121	; 0x79
    4a8c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4a90:	ldrb	r3, [r2, #1]
    4a94:	add	r2, r2, #1
    4a98:	cmp	r3, #116	; 0x74
    4a9c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4aa0:	ldrb	r3, [r2, #1]
    4aa4:	cmp	r3, #101	; 0x65
    4aa8:	movweq	r1, #64538	; 0xfc1a
    4aac:	movteq	r1, #65535	; 0xffff
    4ab0:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4ab4:	b	33b4 <__flatcc_fb_parse+0x1400>
    4ab8:	mov	r1, r5
    4abc:	movw	r0, #0
    4ac0:	movt	r0, #0
    4ac4:	mov	r2, #5
    4ac8:	bl	0 <memcmp>
    4acc:	cmp	r0, #0
    4ad0:	movw	r1, #64550	; 0xfc26
    4ad4:	movt	r1, #65535	; 0xffff
    4ad8:	movne	r1, #9
    4adc:	b	33b4 <__flatcc_fb_parse+0x1400>
    4ae0:	mov	r1, r5
    4ae4:	movw	r0, #0
    4ae8:	movt	r0, #0
    4aec:	mov	r2, #15
    4af0:	bl	0 <memcmp>
    4af4:	cmp	r0, #0
    4af8:	movne	r1, #9
    4afc:	mvneq	r1, #964	; 0x3c4
    4b00:	b	33b4 <__flatcc_fb_parse+0x1400>
    4b04:	ldrb	r3, [r5]
    4b08:	cmp	r3, #105	; 0x69
    4b0c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b10:	ldrb	r3, [r2]
    4b14:	cmp	r3, #110	; 0x6e
    4b18:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b1c:	ldrb	r3, [r2, #1]
    4b20:	cmp	r3, #116	; 0x74
    4b24:	movweq	r1, #64542	; 0xfc1e
    4b28:	movteq	r1, #65535	; 0xffff
    4b2c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b30:	b	33b4 <__flatcc_fb_parse+0x1400>
    4b34:	ldrb	r3, [r5]
    4b38:	cmp	r3, #117	; 0x75
    4b3c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b40:	ldrb	r3, [r2]
    4b44:	cmp	r3, #105	; 0x69
    4b48:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b4c:	ldrb	r3, [r2, #1]
    4b50:	add	r2, r2, #1
    4b54:	cmp	r3, #110	; 0x6e
    4b58:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b5c:	ldrb	r3, [r2, #1]
    4b60:	cmp	r3, #116	; 0x74
    4b64:	movweq	r1, #64549	; 0xfc25
    4b68:	movteq	r1, #65535	; 0xffff
    4b6c:	bne	3a94 <__flatcc_fb_parse+0x1ae0>
    4b70:	b	33b4 <__flatcc_fb_parse+0x1400>
    4b74:	mov	r1, r5
    4b78:	movw	r0, #0
    4b7c:	movt	r0, #0
    4b80:	mov	r2, #5
    4b84:	bl	0 <memcmp>
    4b88:	cmp	r0, #0
    4b8c:	movw	r1, #64552	; 0xfc28
    4b90:	movt	r1, #65535	; 0xffff
    4b94:	movne	r1, #9
    4b98:	b	33b4 <__flatcc_fb_parse+0x1400>
    4b9c:	mov	r1, r5
    4ba0:	movw	r0, #0
    4ba4:	movt	r0, #0
    4ba8:	mov	r2, #5
    4bac:	bl	0 <memcmp>
    4bb0:	cmp	r0, #0
    4bb4:	movw	r1, #64546	; 0xfc22
    4bb8:	movt	r1, #65535	; 0xffff
    4bbc:	movne	r1, #9
    4bc0:	b	33b4 <__flatcc_fb_parse+0x1400>
    4bc4:	mov	r1, r5
    4bc8:	movw	r0, #0
    4bcc:	movt	r0, #0
    4bd0:	mov	r2, #7
    4bd4:	bl	0 <memcmp>
    4bd8:	cmp	r0, #0
    4bdc:	movw	r1, #64565	; 0xfc35
    4be0:	movt	r1, #65535	; 0xffff
    4be4:	movne	r1, #9
    4be8:	b	33b4 <__flatcc_fb_parse+0x1400>
    4bec:	mov	r1, r5
    4bf0:	movw	r0, #0
    4bf4:	movt	r0, #0
    4bf8:	mov	r2, #5
    4bfc:	bl	0 <memcmp>
    4c00:	cmp	r0, #0
    4c04:	movw	r1, #64553	; 0xfc29
    4c08:	movt	r1, #65535	; 0xffff
    4c0c:	movne	r1, #9
    4c10:	b	33b4 <__flatcc_fb_parse+0x1400>
    4c14:	mov	r1, r5
    4c18:	movw	r0, #0
    4c1c:	movt	r0, #0
    4c20:	mov	r2, #7
    4c24:	bl	0 <memcmp>
    4c28:	cmp	r0, #0
    4c2c:	movw	r1, #64540	; 0xfc1c
    4c30:	movt	r1, #65535	; 0xffff
    4c34:	movne	r1, #9
    4c38:	b	33b4 <__flatcc_fb_parse+0x1400>
    4c3c:	mov	r1, r5
    4c40:	movw	r0, #0
    4c44:	movt	r0, #0
    4c48:	mov	r2, #9
    4c4c:	bl	0 <memcmp>
    4c50:	cmp	r0, #0
    4c54:	movw	r1, #64566	; 0xfc36
    4c58:	movt	r1, #65535	; 0xffff
    4c5c:	movne	r1, #9
    4c60:	b	33b4 <__flatcc_fb_parse+0x1400>
    4c64:	add	r3, r5, #4
    4c68:	mov	r2, r5
    4c6c:	movw	r1, #15934	; 0x3e3e
    4c70:	movt	r1, #15678	; 0x3d3e
    4c74:	mov	r0, r4
    4c78:	mov	r5, r3
    4c7c:	bl	50 <push_token>
    4c80:	b	3190 <__flatcc_fb_parse+0x11dc>
    4c84:	add	r3, r5, #4
    4c88:	mov	r2, r5
    4c8c:	movw	r1, #15420	; 0x3c3c
    4c90:	movt	r1, #15676	; 0x3d3c
    4c94:	mov	r0, r4
    4c98:	mov	r5, r3
    4c9c:	bl	50 <push_token>
    4ca0:	b	3190 <__flatcc_fb_parse+0x11dc>
    4ca4:	bl	20 <checkmem.part.1>
    4ca8:	ldrb	r3, [r2]
    4cac:	udf	#0

00004cb0 <__flatcc_fb_clear_parser>:
    4cb0:	strd	r4, [sp, #-16]!
    4cb4:	mov	r5, r0
    4cb8:	ldr	r4, [r0, #392]	; 0x188
    4cbc:	str	r6, [sp, #8]
    4cc0:	str	lr, [sp, #12]
    4cc4:	cmp	r4, #0
    4cc8:	bne	4cdc <__flatcc_fb_clear_parser+0x2c>
    4ccc:	b	4d04 <__flatcc_fb_clear_parser+0x54>
    4cd0:	ldr	r4, [r4]
    4cd4:	cmp	r4, #0
    4cd8:	beq	4d04 <__flatcc_fb_clear_parser+0x54>
    4cdc:	ldrh	r3, [r4, #8]
    4ce0:	cmp	r3, #4
    4ce4:	bhi	4cd0 <__flatcc_fb_clear_parser+0x20>
    4ce8:	add	r0, r4, #56	; 0x38
    4cec:	bl	0 <fb_symbol_table_clear>
    4cf0:	add	r0, r4, #72	; 0x48
    4cf4:	bl	0 <fb_value_set_clear>
    4cf8:	ldr	r4, [r4]
    4cfc:	cmp	r4, #0
    4d00:	bne	4cdc <__flatcc_fb_clear_parser+0x2c>
    4d04:	add	r0, r5, #448	; 0x1c0
    4d08:	bl	0 <fb_schema_table_clear>
    4d0c:	add	r0, r5, #432	; 0x1b0
    4d10:	bl	0 <fb_name_table_clear>
    4d14:	add	r0, r5, #524	; 0x20c
    4d18:	bl	0 <ptr_set_clear>
    4d1c:	ldr	r0, [r5, #112]	; 0x70
    4d20:	cmp	r0, #0
    4d24:	beq	4d2c <__flatcc_fb_clear_parser+0x7c>
    4d28:	bl	0 <free>
    4d2c:	ldr	r0, [r5, #20]
    4d30:	cmp	r0, #0
    4d34:	beq	4d3c <__flatcc_fb_clear_parser+0x8c>
    4d38:	bl	0 <free>
    4d3c:	ldr	r0, [r5, #512]	; 0x200
    4d40:	cmp	r0, #0
    4d44:	beq	4d4c <__flatcc_fb_clear_parser+0x9c>
    4d48:	bl	0 <free>
    4d4c:	ldr	r0, [r5, #516]	; 0x204
    4d50:	cmp	r0, #0
    4d54:	beq	4d5c <__flatcc_fb_clear_parser+0xac>
    4d58:	bl	0 <free>
    4d5c:	ldr	r0, [r5, #520]	; 0x208
    4d60:	cmp	r0, #0
    4d64:	beq	4d6c <__flatcc_fb_clear_parser+0xbc>
    4d68:	bl	0 <free>
    4d6c:	ldr	r0, [r5, #548]	; 0x224
    4d70:	cmp	r0, #0
    4d74:	beq	4d7c <__flatcc_fb_clear_parser+0xcc>
    4d78:	bl	0 <free>
    4d7c:	add	r0, r5, #416	; 0x1a0
    4d80:	movw	r1, #0
    4d84:	movt	r1, #0
    4d88:	mov	r2, #0
    4d8c:	bl	0 <fb_scope_table_destroy>
    4d90:	ldr	r0, [r5, #48]	; 0x30
    4d94:	cmp	r0, #0
    4d98:	beq	4dac <__flatcc_fb_clear_parser+0xfc>
    4d9c:	ldr	r4, [r0]
    4da0:	bl	0 <free>
    4da4:	subs	r0, r4, #0
    4da8:	bne	4d9c <__flatcc_fb_clear_parser+0xec>
    4dac:	ldr	r0, [r5, #16]
    4db0:	cmp	r0, #0
    4db4:	beq	4dbc <__flatcc_fb_clear_parser+0x10c>
    4db8:	bl	0 <free>
    4dbc:	mov	r0, r5
    4dc0:	mov	r2, #560	; 0x230
    4dc4:	ldrd	r4, [sp]
    4dc8:	mov	r1, #0
    4dcc:	ldr	r6, [sp, #8]
    4dd0:	ldr	lr, [sp, #12]
    4dd4:	add	sp, sp, #16
    4dd8:	b	0 <memset>
