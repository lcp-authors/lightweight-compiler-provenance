
../compcert-repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e50 <.init>:
   10e50:	push	{r3, lr}
   10e54:	bl	111c8 <_start@@Base+0x3c>
   10e58:	pop	{r3, pc}

Disassembly of section .plt:

00010e5c <calloc@plt-0x14>:
   10e5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e60:	ldr	lr, [pc, #4]	; 10e6c <calloc@plt-0x4>
   10e64:	add	lr, pc, lr
   10e68:	ldr	pc, [lr, #8]!
   10e6c:	muleq	r1, r4, r1

00010e70 <calloc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #73728	; 0x12000
   10e78:	ldr	pc, [ip, #404]!	; 0x194

00010e7c <strcmp@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #73728	; 0x12000
   10e84:	ldr	pc, [ip, #396]!	; 0x18c

00010e88 <strtol@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #388]!	; 0x184

00010e94 <printf@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #380]!	; 0x17c

00010ea0 <__isoc99_fscanf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #372]!	; 0x174

00010eac <fopen@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #364]!	; 0x16c

00010eb8 <free@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #356]!	; 0x164

00010ec4 <memcpy@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #348]!	; 0x15c

00010ed0 <realloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #340]!	; 0x154

00010edc <strcpy@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #332]!	; 0x14c

00010ee8 <puts@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #324]!	; 0x144

00010ef4 <malloc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #316]!	; 0x13c

00010f00 <__libc_start_main@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #308]!	; 0x134

00010f0c <__gmon_start__@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #300]!	; 0x12c

00010f18 <strlen@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #292]!	; 0x124

00010f24 <setvbuf@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #284]!	; 0x11c

00010f30 <putchar@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #276]!	; 0x114

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #268]!	; 0x10c

00010f48 <getline@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #260]!	; 0x104

00010f54 <abort@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00010f60 <main@@Base>:
   10f60:	mov	r3, #0
   10f64:	movw	r1, #12392	; 0x3068
   10f68:	movt	r1, #2
   10f6c:	mov	r2, #2
   10f70:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10f74:	ldr	r0, [r1]
   10f78:	mov	r1, r3
   10f7c:	strd	r6, [sp, #8]
   10f80:	strd	r8, [sp, #16]
   10f84:	str	lr, [sp, #24]
   10f88:	sub	sp, sp, #36	; 0x24
   10f8c:	bl	10f24 <setvbuf@plt>
   10f90:	movw	r1, #11296	; 0x2c20
   10f94:	movt	r1, #1
   10f98:	movw	r0, #11372	; 0x2c6c
   10f9c:	movt	r0, #1
   10fa0:	bl	10eac <fopen@plt>
   10fa4:	mov	r7, r0
   10fa8:	bl	124a4 <lista_nova@@Base>
   10fac:	mov	r3, #0
   10fb0:	mov	r5, r0
   10fb4:	mov	r6, r3
   10fb8:	str	r3, [sp, #4]
   10fbc:	str	r3, [sp, #8]
   10fc0:	b	10fe8 <main@@Base+0x88>
   10fc4:	ldr	r4, [sp, #4]
   10fc8:	mov	r0, r4
   10fcc:	bl	10f18 <strlen@plt>
   10fd0:	add	r4, r4, r0
   10fd4:	mov	r2, #0
   10fd8:	mov	r0, r5
   10fdc:	strb	r6, [r4, #-1]
   10fe0:	ldr	r1, [sp, #4]
   10fe4:	bl	12560 <lista_insere@@Base>
   10fe8:	mov	r2, r7
   10fec:	add	r1, sp, #8
   10ff0:	add	r0, sp, #4
   10ff4:	bl	10f48 <getline@plt>
   10ff8:	cmn	r0, #1
   10ffc:	bne	10fc4 <main@@Base+0x64>
   11000:	ldr	r0, [sp, #4]
   11004:	movw	r6, #11436	; 0x2cac
   11008:	movt	r6, #1
   1100c:	bl	10eb8 <free@plt>
   11010:	mov	r0, r7
   11014:	bl	10f3c <fclose@plt>
   11018:	movw	r1, #11388	; 0x2c7c
   1101c:	movt	r1, #1
   11020:	mov	r0, r5
   11024:	bl	114cc <carrega_rotas@@Base>
   11028:	mov	r9, r0
   1102c:	movw	r0, #11400	; 0x2c88
   11030:	movt	r0, #1
   11034:	bl	10ee8 <puts@plt>
   11038:	movw	r1, #11296	; 0x2c20
   1103c:	movt	r1, #1
   11040:	movw	r0, #11420	; 0x2c9c
   11044:	movt	r0, #1
   11048:	bl	10eac <fopen@plt>
   1104c:	mov	r7, r0
   11050:	bl	124a4 <lista_nova@@Base>
   11054:	mov	r4, r0
   11058:	bl	124a4 <lista_nova@@Base>
   1105c:	mov	r8, r0
   11060:	b	11078 <main@@Base+0x118>
   11064:	bl	12560 <lista_insere@@Base>
   11068:	mov	r2, #0
   1106c:	add	r1, sp, #20
   11070:	mov	r0, r8
   11074:	bl	12560 <lista_insere@@Base>
   11078:	add	r2, sp, #12
   1107c:	mov	r1, r6
   11080:	add	r3, sp, #20
   11084:	mov	r0, r7
   11088:	bl	10ea0 <__isoc99_fscanf@plt>
   1108c:	cmp	r0, #2
   11090:	mov	r2, #0
   11094:	add	r1, sp, #12
   11098:	mov	r0, r4
   1109c:	beq	11064 <main@@Base+0x104>
   110a0:	mov	r3, #5
   110a4:	mov	r2, r5
   110a8:	mov	r1, r8
   110ac:	bl	1127c <proximas_n_chegadas@@Base>
   110b0:	cmp	r0, #1
   110b4:	beq	110c4 <main@@Base+0x164>
   110b8:	movw	r0, #11444	; 0x2cb4
   110bc:	movt	r0, #1
   110c0:	bl	10ee8 <puts@plt>
   110c4:	mov	r0, r4
   110c8:	bl	124d8 <lista_apaga@@Base>
   110cc:	mov	r0, r8
   110d0:	bl	124d8 <lista_apaga@@Base>
   110d4:	mov	r0, r7
   110d8:	bl	10f3c <fclose@plt>
   110dc:	movw	r0, #11472	; 0x2cd0
   110e0:	movt	r0, #1
   110e4:	bl	10ee8 <puts@plt>
   110e8:	movw	r2, #11492	; 0x2ce4
   110ec:	movt	r2, #1
   110f0:	mov	r1, r5
   110f4:	mov	r0, r9
   110f8:	bl	113dc <pesquisa_destinos@@Base>
   110fc:	subs	r6, r0, #0
   11100:	beq	11174 <main@@Base+0x214>
   11104:	bl	12538 <lista_tamanho@@Base>
   11108:	mov	r2, r0
   1110c:	movw	r1, #11492	; 0x2ce4
   11110:	movt	r1, #1
   11114:	movw	r0, #11544	; 0x2d18
   11118:	movt	r0, #1
   1111c:	bl	10e94 <printf@plt>
   11120:	ldr	r4, [r6]
   11124:	cmp	r4, #0
   11128:	beq	11140 <main@@Base+0x1e0>
   1112c:	ldr	r0, [r4]
   11130:	bl	10ee8 <puts@plt>
   11134:	ldr	r4, [r4, #4]
   11138:	cmp	r4, #0
   1113c:	bne	1112c <main@@Base+0x1cc>
   11140:	mov	r0, r6
   11144:	bl	124d8 <lista_apaga@@Base>
   11148:	mov	r0, r9
   1114c:	bl	11634 <grafo_apaga@@Base>
   11150:	mov	r0, r5
   11154:	bl	124d8 <lista_apaga@@Base>
   11158:	mov	r0, #0
   1115c:	add	sp, sp, #36	; 0x24
   11160:	ldrd	r4, [sp]
   11164:	ldrd	r6, [sp, #8]
   11168:	ldrd	r8, [sp, #16]
   1116c:	add	sp, sp, #24
   11170:	pop	{pc}		; (ldr pc, [sp], #4)
   11174:	movw	r1, #11492	; 0x2ce4
   11178:	movt	r1, #1
   1117c:	movw	r0, #11504	; 0x2cf0
   11180:	movt	r0, #1
   11184:	bl	10e94 <printf@plt>
   11188:	b	11148 <main@@Base+0x1e8>

0001118c <_start@@Base>:
   1118c:	mov	fp, #0
   11190:	mov	lr, #0
   11194:	pop	{r1}		; (ldr r1, [sp], #4)
   11198:	mov	r2, sp
   1119c:	push	{r2}		; (str r2, [sp, #-4]!)
   111a0:	push	{r0}		; (str r0, [sp, #-4]!)
   111a4:	ldr	ip, [pc, #16]	; 111bc <_start@@Base+0x30>
   111a8:	push	{ip}		; (str ip, [sp, #-4]!)
   111ac:	ldr	r0, [pc, #12]	; 111c0 <_start@@Base+0x34>
   111b0:	ldr	r3, [pc, #12]	; 111c4 <_start@@Base+0x38>
   111b4:	bl	10f00 <__libc_start_main@plt>
   111b8:	bl	10f54 <abort@plt>
   111bc:	andeq	r2, r1, r4, lsl #24
   111c0:	andeq	r0, r1, r0, ror #30
   111c4:	andeq	r2, r1, r4, lsr #23
   111c8:	ldr	r3, [pc, #20]	; 111e4 <_start@@Base+0x58>
   111cc:	ldr	r2, [pc, #20]	; 111e8 <_start@@Base+0x5c>
   111d0:	add	r3, pc, r3
   111d4:	ldr	r2, [r3, r2]
   111d8:	cmp	r2, #0
   111dc:	bxeq	lr
   111e0:	b	10f0c <__gmon_start__@plt>
   111e4:	andeq	r1, r1, r8, lsr #28
   111e8:	andeq	r0, r0, ip, asr r0
   111ec:	ldr	r0, [pc, #24]	; 1120c <_start@@Base+0x80>
   111f0:	ldr	r3, [pc, #24]	; 11210 <_start@@Base+0x84>
   111f4:	cmp	r3, r0
   111f8:	bxeq	lr
   111fc:	ldr	r3, [pc, #16]	; 11214 <_start@@Base+0x88>
   11200:	cmp	r3, #0
   11204:	bxeq	lr
   11208:	bx	r3
   1120c:	andeq	r3, r2, r8, rrx
   11210:	andeq	r3, r2, r8, rrx
   11214:	andeq	r0, r0, r0
   11218:	ldr	r0, [pc, #36]	; 11244 <_start@@Base+0xb8>
   1121c:	ldr	r1, [pc, #36]	; 11248 <_start@@Base+0xbc>
   11220:	sub	r1, r1, r0
   11224:	asr	r1, r1, #2
   11228:	add	r1, r1, r1, lsr #31
   1122c:	asrs	r1, r1, #1
   11230:	bxeq	lr
   11234:	ldr	r3, [pc, #16]	; 1124c <_start@@Base+0xc0>
   11238:	cmp	r3, #0
   1123c:	bxeq	lr
   11240:	bx	r3
   11244:	andeq	r3, r2, r8, rrx
   11248:	andeq	r3, r2, r8, rrx
   1124c:	andeq	r0, r0, r0
   11250:	push	{r4, lr}
   11254:	ldr	r4, [pc, #24]	; 11274 <_start@@Base+0xe8>
   11258:	ldrb	r3, [r4]
   1125c:	cmp	r3, #0
   11260:	popne	{r4, pc}
   11264:	bl	111ec <_start@@Base+0x60>
   11268:	mov	r3, #1
   1126c:	strb	r3, [r4]
   11270:	pop	{r4, pc}
   11274:	andeq	r3, r2, ip, rrx
   11278:	b	11218 <_start@@Base+0x8c>

0001127c <proximas_n_chegadas@@Base>:
   1127c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11280:	ldr	r4, [r2]
   11284:	strd	r6, [sp, #8]
   11288:	mov	r7, r3
   1128c:	strd	sl, [sp, #24]
   11290:	mov	fp, r0
   11294:	mov	sl, r1
   11298:	ldr	r0, [r2, #8]
   1129c:	strd	r8, [sp, #16]
   112a0:	mov	r9, r2
   112a4:	str	lr, [sp, #32]
   112a8:	sub	sp, sp, #4
   112ac:	lsl	r0, r0, #2
   112b0:	bl	10ef4 <malloc@plt>
   112b4:	cmp	r4, #0
   112b8:	mov	r8, r0
   112bc:	beq	112e4 <proximas_n_chegadas@@Base+0x68>
   112c0:	sub	r5, r0, #4
   112c4:	mov	r0, #200	; 0xc8
   112c8:	bl	10ef4 <malloc@plt>
   112cc:	str	r0, [r5, #4]!
   112d0:	ldr	r1, [r4]
   112d4:	bl	10edc <strcpy@plt>
   112d8:	ldr	r4, [r4, #4]
   112dc:	cmp	r4, #0
   112e0:	bne	112c4 <proximas_n_chegadas@@Base+0x48>
   112e4:	ldr	r0, [fp, #8]
   112e8:	bl	11f98 <heap_nova@@Base>
   112ec:	ldr	r4, [fp]
   112f0:	mov	r6, r0
   112f4:	ldr	r5, [sl]
   112f8:	cmp	r4, #0
   112fc:	beq	11344 <proximas_n_chegadas@@Base+0xc8>
   11300:	mov	r2, #10
   11304:	mov	r1, #0
   11308:	ldr	r0, [r5]
   1130c:	bl	10e88 <strtol@plt>
   11310:	ldr	sl, [r8, r0, lsl #2]
   11314:	mov	r2, #10
   11318:	mov	r1, #0
   1131c:	ldr	r0, [r4]
   11320:	bl	10e88 <strtol@plt>
   11324:	mov	r2, r0
   11328:	mov	r0, r6
   1132c:	mov	r1, sl
   11330:	bl	12110 <heap_insere@@Base>
   11334:	ldr	r4, [r4, #4]
   11338:	ldr	r5, [r5, #4]
   1133c:	cmp	r4, #0
   11340:	bne	11300 <proximas_n_chegadas@@Base+0x84>
   11344:	ldr	r5, [r9, #8]
   11348:	cmp	r5, #0
   1134c:	ble	11368 <proximas_n_chegadas@@Base+0xec>
   11350:	add	r5, r8, r5, lsl #2
   11354:	mov	r4, r8
   11358:	ldr	r0, [r4], #4
   1135c:	bl	10eb8 <free@plt>
   11360:	cmp	r5, r4
   11364:	bne	11358 <proximas_n_chegadas@@Base+0xdc>
   11368:	mov	r0, r8
   1136c:	bl	10eb8 <free@plt>
   11370:	cmp	r7, #0
   11374:	ble	113b4 <proximas_n_chegadas@@Base+0x138>
   11378:	movw	r8, #11284	; 0x2c14
   1137c:	movt	r8, #1
   11380:	mov	r4, #0
   11384:	mov	r0, r6
   11388:	add	r4, r4, #1
   1138c:	bl	121ec <heap_remove@@Base>
   11390:	mov	r2, r0
   11394:	mov	r5, r0
   11398:	mov	r1, r4
   1139c:	mov	r0, r8
   113a0:	bl	10e94 <printf@plt>
   113a4:	mov	r0, r5
   113a8:	bl	10eb8 <free@plt>
   113ac:	cmp	r4, r7
   113b0:	bne	11384 <proximas_n_chegadas@@Base+0x108>
   113b4:	mov	r0, r6
   113b8:	bl	12000 <heap_apaga@@Base>
   113bc:	mov	r0, #1
   113c0:	add	sp, sp, #4
   113c4:	ldrd	r4, [sp]
   113c8:	ldrd	r6, [sp, #8]
   113cc:	ldrd	r8, [sp, #16]
   113d0:	ldrd	sl, [sp, #24]
   113d4:	add	sp, sp, #32
   113d8:	pop	{pc}		; (ldr pc, [sp], #4)

000113dc <pesquisa_destinos@@Base>:
   113dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   113e0:	strd	r6, [sp, #8]
   113e4:	mov	r7, r0
   113e8:	mov	r6, r2
   113ec:	strd	r8, [sp, #16]
   113f0:	mov	r9, r1
   113f4:	str	sl, [sp, #24]
   113f8:	str	lr, [sp, #28]
   113fc:	bl	124a4 <lista_nova@@Base>
   11400:	ldr	r4, [r9]
   11404:	mov	r8, r0
   11408:	cmp	r4, #0
   1140c:	moveq	r5, r4
   11410:	beq	11440 <pesquisa_destinos@@Base+0x64>
   11414:	mov	r5, #0
   11418:	b	1142c <pesquisa_destinos@@Base+0x50>
   1141c:	ldr	r4, [r4, #4]
   11420:	add	r5, r5, #1
   11424:	cmp	r4, #0
   11428:	beq	11440 <pesquisa_destinos@@Base+0x64>
   1142c:	mov	r1, r6
   11430:	ldr	r0, [r4]
   11434:	bl	10e7c <strcmp@plt>
   11438:	cmp	r0, #0
   1143c:	bne	1141c <pesquisa_destinos@@Base+0x40>
   11440:	mov	r0, r7
   11444:	mov	r1, r5
   11448:	bl	11a10 <v_sucessores@@Base>
   1144c:	ldr	r3, [r0]
   11450:	mov	r7, r0
   11454:	cmp	r3, #0
   11458:	ble	114a8 <pesquisa_destinos@@Base+0xcc>
   1145c:	mov	r6, #0
   11460:	mov	r4, #0
   11464:	ldr	r5, [r9]
   11468:	b	11470 <pesquisa_destinos@@Base+0x94>
   1146c:	ldr	r5, [r5, #4]
   11470:	mov	r1, r6
   11474:	mov	r0, r7
   11478:	bl	12958 <vetor_elemento@@Base>
   1147c:	cmp	r0, r4
   11480:	add	r4, r4, #1
   11484:	bgt	1146c <pesquisa_destinos@@Base+0x90>
   11488:	mov	r2, #0
   1148c:	mov	r0, r8
   11490:	ldr	r1, [r5]
   11494:	bl	12560 <lista_insere@@Base>
   11498:	ldr	r3, [r7]
   1149c:	add	r6, r6, #1
   114a0:	cmp	r3, r6
   114a4:	bgt	11460 <pesquisa_destinos@@Base+0x84>
   114a8:	mov	r0, r7
   114ac:	bl	128d8 <vetor_apaga@@Base>
   114b0:	mov	r0, r8
   114b4:	ldrd	r4, [sp]
   114b8:	ldrd	r6, [sp, #8]
   114bc:	ldrd	r8, [sp, #16]
   114c0:	ldr	sl, [sp, #24]
   114c4:	add	sp, sp, #28
   114c8:	pop	{pc}		; (ldr pc, [sp], #4)

000114cc <carrega_rotas@@Base>:
   114cc:	strd	r4, [sp, #-16]!
   114d0:	subs	r4, r1, #0
   114d4:	str	r6, [sp, #8]
   114d8:	str	lr, [sp, #12]
   114dc:	sub	sp, sp, #8
   114e0:	beq	11554 <carrega_rotas@@Base+0x88>
   114e4:	mov	r5, r0
   114e8:	movw	r1, #11296	; 0x2c20
   114ec:	movt	r1, #1
   114f0:	mov	r0, r4
   114f4:	bl	10eac <fopen@plt>
   114f8:	subs	r6, r0, #0
   114fc:	beq	1156c <carrega_rotas@@Base+0xa0>
   11500:	mov	r0, r5
   11504:	bl	12538 <lista_tamanho@@Base>
   11508:	mov	r1, #0
   1150c:	bl	115c8 <grafo_novo@@Base>
   11510:	subs	r4, r0, #0
   11514:	beq	11584 <carrega_rotas@@Base+0xb8>
   11518:	movw	r5, #11364	; 0x2c64
   1151c:	movt	r5, #1
   11520:	b	1152c <carrega_rotas@@Base+0x60>
   11524:	ldm	sp, {r1, r2}
   11528:	bl	116d8 <grafo_adiciona@@Base>
   1152c:	add	r3, sp, #4
   11530:	mov	r2, sp
   11534:	mov	r1, r5
   11538:	mov	r0, r6
   1153c:	bl	10ea0 <__isoc99_fscanf@plt>
   11540:	cmp	r0, #2
   11544:	mov	r0, r4
   11548:	beq	11524 <carrega_rotas@@Base+0x58>
   1154c:	mov	r0, r6
   11550:	bl	10f3c <fclose@plt>
   11554:	mov	r0, r4
   11558:	add	sp, sp, #8
   1155c:	ldrd	r4, [sp]
   11560:	ldr	r6, [sp, #8]
   11564:	add	sp, sp, #12
   11568:	pop	{pc}		; (ldr pc, [sp], #4)
   1156c:	mov	r1, r4
   11570:	movw	r0, #11300	; 0x2c24
   11574:	movt	r0, #1
   11578:	mov	r4, r6
   1157c:	bl	10e94 <printf@plt>
   11580:	b	11554 <carrega_rotas@@Base+0x88>
   11584:	movw	r0, #11336	; 0x2c48
   11588:	movt	r0, #1
   1158c:	bl	10ee8 <puts@plt>
   11590:	b	11554 <carrega_rotas@@Base+0x88>

00011594 <cria_no@@Base>:
   11594:	str	r4, [sp, #-8]!
   11598:	mov	r4, r0
   1159c:	mov	r0, #8
   115a0:	str	lr, [sp, #4]
   115a4:	bl	10ef4 <malloc@plt>
   115a8:	cmp	r0, #0
   115ac:	beq	115bc <cria_no@@Base+0x28>
   115b0:	mov	r3, #0
   115b4:	str	r4, [r0]
   115b8:	str	r3, [r0, #4]
   115bc:	ldr	r4, [sp]
   115c0:	add	sp, sp, #4
   115c4:	pop	{pc}		; (ldr pc, [sp], #4)

000115c8 <grafo_novo@@Base>:
   115c8:	strd	r4, [sp, #-16]!
   115cc:	mov	r5, r0
   115d0:	mov	r0, #12
   115d4:	str	r6, [sp, #8]
   115d8:	mov	r6, r1
   115dc:	str	lr, [sp, #12]
   115e0:	bl	10ef4 <malloc@plt>
   115e4:	subs	r4, r0, #0
   115e8:	beq	11610 <grafo_novo@@Base+0x48>
   115ec:	mov	r0, r5
   115f0:	mov	r1, #8
   115f4:	str	r6, [r4]
   115f8:	str	r5, [r4, #4]
   115fc:	bl	10e70 <calloc@plt>
   11600:	cmp	r0, #0
   11604:	mov	r3, r0
   11608:	str	r0, [r4, #8]
   1160c:	beq	11624 <grafo_novo@@Base+0x5c>
   11610:	mov	r0, r4
   11614:	ldrd	r4, [sp]
   11618:	ldr	r6, [sp, #8]
   1161c:	add	sp, sp, #12
   11620:	pop	{pc}		; (ldr pc, [sp], #4)
   11624:	mov	r0, r4
   11628:	mov	r4, r3
   1162c:	bl	10eb8 <free@plt>
   11630:	b	11610 <grafo_novo@@Base+0x48>

00011634 <grafo_apaga@@Base>:
   11634:	strd	r4, [sp, #-16]!
   11638:	subs	r5, r0, #0
   1163c:	str	r6, [sp, #8]
   11640:	str	lr, [sp, #12]
   11644:	beq	116c8 <grafo_apaga@@Base+0x94>
   11648:	ldr	r2, [r5, #8]
   1164c:	cmp	r2, #0
   11650:	beq	116b0 <grafo_apaga@@Base+0x7c>
   11654:	ldr	r1, [r5, #4]
   11658:	cmp	r1, #0
   1165c:	movgt	r6, #0
   11660:	ble	116a8 <grafo_apaga@@Base+0x74>
   11664:	lsl	r4, r6, #3
   11668:	add	r3, r2, r4
   1166c:	ldr	r0, [r3, #4]
   11670:	cmp	r0, #0
   11674:	beq	1169c <grafo_apaga@@Base+0x68>
   11678:	ldr	r2, [r0, #4]
   1167c:	str	r2, [r3, #4]
   11680:	bl	10eb8 <free@plt>
   11684:	ldr	r2, [r5, #8]
   11688:	add	r3, r2, r4
   1168c:	ldr	r0, [r3, #4]
   11690:	cmp	r0, #0
   11694:	bne	11678 <grafo_apaga@@Base+0x44>
   11698:	ldr	r1, [r5, #4]
   1169c:	add	r6, r6, #1
   116a0:	cmp	r1, r6
   116a4:	bgt	11664 <grafo_apaga@@Base+0x30>
   116a8:	mov	r0, r2
   116ac:	bl	10eb8 <free@plt>
   116b0:	mov	r0, r5
   116b4:	ldrd	r4, [sp]
   116b8:	ldr	r6, [sp, #8]
   116bc:	ldr	lr, [sp, #12]
   116c0:	add	sp, sp, #16
   116c4:	b	10eb8 <free@plt>
   116c8:	ldrd	r4, [sp]
   116cc:	ldr	r6, [sp, #8]
   116d0:	add	sp, sp, #12
   116d4:	pop	{pc}		; (ldr pc, [sp], #4)

000116d8 <grafo_adiciona@@Base>:
   116d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   116dc:	strd	r6, [sp, #8]
   116e0:	subs	r6, r0, #0
   116e4:	strd	r8, [sp, #16]
   116e8:	str	sl, [sp, #24]
   116ec:	str	lr, [sp, #28]
   116f0:	beq	1176c <grafo_adiciona@@Base+0x94>
   116f4:	ldr	r8, [r6, #8]
   116f8:	add	r9, r8, r1, lsl #3
   116fc:	ldr	r5, [r9, #4]
   11700:	cmp	r5, #0
   11704:	beq	11734 <grafo_adiciona@@Base+0x5c>
   11708:	ldr	r3, [r5]
   1170c:	cmp	r2, r3
   11710:	beq	1176c <grafo_adiciona@@Base+0x94>
   11714:	mov	r3, r5
   11718:	b	11728 <grafo_adiciona@@Base+0x50>
   1171c:	ldr	ip, [r3]
   11720:	cmp	r2, ip
   11724:	beq	1176c <grafo_adiciona@@Base+0x94>
   11728:	ldr	r3, [r3, #4]
   1172c:	cmp	r3, #0
   11730:	bne	1171c <grafo_adiciona@@Base+0x44>
   11734:	mov	r0, #8
   11738:	mov	r4, r2
   1173c:	mov	r7, r1
   11740:	bl	10ef4 <malloc@plt>
   11744:	cmp	r0, #0
   11748:	beq	117c0 <grafo_adiciona@@Base+0xe8>
   1174c:	ldr	r3, [r8, r7, lsl #3]
   11750:	strd	r4, [r0]
   11754:	ldr	r2, [r6]
   11758:	str	r0, [r9, #4]
   1175c:	add	r3, r3, #1
   11760:	cmp	r2, #0
   11764:	str	r3, [r8, r7, lsl #3]
   11768:	beq	11784 <grafo_adiciona@@Base+0xac>
   1176c:	ldrd	r4, [sp]
   11770:	ldrd	r6, [sp, #8]
   11774:	ldrd	r8, [sp, #16]
   11778:	ldr	sl, [sp, #24]
   1177c:	add	sp, sp, #28
   11780:	pop	{pc}		; (ldr pc, [sp], #4)
   11784:	mov	r0, #8
   11788:	bl	10ef4 <malloc@plt>
   1178c:	add	r2, r8, r4, lsl #3
   11790:	cmp	r0, #0
   11794:	ldr	r1, [r2, #4]
   11798:	beq	117b8 <grafo_adiciona@@Base+0xe0>
   1179c:	ldr	r3, [r8, r4, lsl #3]
   117a0:	str	r7, [r0]
   117a4:	str	r1, [r0, #4]
   117a8:	str	r0, [r2, #4]
   117ac:	add	r3, r3, #1
   117b0:	str	r3, [r8, r4, lsl #3]
   117b4:	b	1176c <grafo_adiciona@@Base+0x94>
   117b8:	str	r1, [r0, #4]
   117bc:	udf	#0
   117c0:	str	r5, [r0, #4]
   117c4:	udf	#0

000117c8 <grafo_remove@@Base>:
   117c8:	strd	r4, [sp, #-16]!
   117cc:	str	r6, [sp, #8]
   117d0:	subs	r6, r0, #0
   117d4:	str	lr, [sp, #12]
   117d8:	beq	1188c <grafo_remove@@Base+0xc4>
   117dc:	ldr	ip, [r6, #8]
   117e0:	add	ip, ip, r1, lsl #3
   117e4:	ldr	lr, [ip, #4]
   117e8:	cmp	lr, #0
   117ec:	beq	1188c <grafo_remove@@Base+0xc4>
   117f0:	mov	r4, r2
   117f4:	ldrd	r2, [lr]
   117f8:	mov	r5, r1
   117fc:	cmp	r2, r4
   11800:	beq	118ec <grafo_remove@@Base+0x124>
   11804:	cmp	r3, #0
   11808:	beq	1182c <grafo_remove@@Base+0x64>
   1180c:	ldr	r2, [r3]
   11810:	cmp	r4, r2
   11814:	bne	118ac <grafo_remove@@Base+0xe4>
   11818:	mov	r0, r3
   1181c:	mov	r3, lr
   11820:	ldr	r2, [r0, #4]
   11824:	str	r2, [r3, #4]
   11828:	bl	10eb8 <free@plt>
   1182c:	ldr	r3, [r6]
   11830:	cmp	r3, #0
   11834:	bne	1188c <grafo_remove@@Base+0xc4>
   11838:	ldr	r2, [r6, #8]
   1183c:	add	r4, r2, r4, lsl #3
   11840:	ldr	r2, [r4, #4]
   11844:	ldm	r2, {r1, r3}
   11848:	cmp	r1, r5
   1184c:	moveq	r0, r2
   11850:	streq	r3, [r4, #4]
   11854:	beq	118d8 <grafo_remove@@Base+0x110>
   11858:	cmp	r3, #0
   1185c:	beq	1188c <grafo_remove@@Base+0xc4>
   11860:	ldr	r1, [r3]
   11864:	cmp	r1, r5
   11868:	bne	11880 <grafo_remove@@Base+0xb8>
   1186c:	b	118c8 <grafo_remove@@Base+0x100>
   11870:	ldr	r2, [r0]
   11874:	cmp	r2, r5
   11878:	beq	118d0 <grafo_remove@@Base+0x108>
   1187c:	mov	r3, r0
   11880:	ldr	r0, [r3, #4]
   11884:	cmp	r0, #0
   11888:	bne	11870 <grafo_remove@@Base+0xa8>
   1188c:	ldrd	r4, [sp]
   11890:	ldr	r6, [sp, #8]
   11894:	add	sp, sp, #12
   11898:	pop	{pc}		; (ldr pc, [sp], #4)
   1189c:	ldr	ip, [r0]
   118a0:	cmp	ip, r4
   118a4:	beq	11820 <grafo_remove@@Base+0x58>
   118a8:	mov	r3, r0
   118ac:	ldr	r0, [r3, #4]
   118b0:	cmp	r0, #0
   118b4:	bne	1189c <grafo_remove@@Base+0xd4>
   118b8:	ldr	r3, [r6]
   118bc:	cmp	r3, #0
   118c0:	bne	1188c <grafo_remove@@Base+0xc4>
   118c4:	b	11838 <grafo_remove@@Base+0x70>
   118c8:	mov	r0, r3
   118cc:	mov	r3, r2
   118d0:	ldr	r2, [r0, #4]
   118d4:	str	r2, [r3, #4]
   118d8:	ldrd	r4, [sp]
   118dc:	ldr	r6, [sp, #8]
   118e0:	ldr	lr, [sp, #12]
   118e4:	add	sp, sp, #16
   118e8:	b	10eb8 <free@plt>
   118ec:	mov	r0, lr
   118f0:	str	r3, [ip, #4]
   118f4:	bl	10eb8 <free@plt>
   118f8:	ldr	r3, [r6]
   118fc:	cmp	r3, #0
   11900:	bne	1188c <grafo_remove@@Base+0xc4>
   11904:	b	11838 <grafo_remove@@Base+0x70>

00011908 <grafo_aresta@@Base>:
   11908:	cmp	r0, #0
   1190c:	beq	11954 <grafo_aresta@@Base+0x4c>
   11910:	ldr	r3, [r0, #8]
   11914:	add	r3, r3, r1, lsl #3
   11918:	ldr	r0, [r3, #4]
   1191c:	cmp	r0, #0
   11920:	beq	11954 <grafo_aresta@@Base+0x4c>
   11924:	ldr	r3, [r0]
   11928:	cmp	r2, r3
   1192c:	bne	11940 <grafo_aresta@@Base+0x38>
   11930:	b	11950 <grafo_aresta@@Base+0x48>
   11934:	ldr	r3, [r0]
   11938:	cmp	r3, r2
   1193c:	beq	11950 <grafo_aresta@@Base+0x48>
   11940:	ldr	r0, [r0, #4]
   11944:	cmp	r0, #0
   11948:	bne	11934 <grafo_aresta@@Base+0x2c>
   1194c:	bx	lr
   11950:	mov	r0, #1
   11954:	bx	lr

00011958 <grafo_imprime@@Base>:
   11958:	ldr	r3, [r0, #4]
   1195c:	cmp	r3, #0
   11960:	bxle	lr
   11964:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11968:	mov	r5, #0
   1196c:	strd	r6, [sp, #8]
   11970:	movw	r6, #11596	; 0x2d4c
   11974:	movt	r6, #1
   11978:	mov	r7, r0
   1197c:	strd	r8, [sp, #16]
   11980:	movw	r8, #11584	; 0x2d40
   11984:	movt	r8, #1
   11988:	movw	r9, #11592	; 0x2d48
   1198c:	movt	r9, #1
   11990:	str	sl, [sp, #24]
   11994:	str	lr, [sp, #28]
   11998:	b	119b4 <grafo_imprime@@Base+0x5c>
   1199c:	mov	r0, #10
   119a0:	add	r5, r5, #1
   119a4:	bl	10f30 <putchar@plt>
   119a8:	ldr	r3, [r7, #4]
   119ac:	cmp	r3, r5
   119b0:	ble	119f8 <grafo_imprime@@Base+0xa0>
   119b4:	ldr	r3, [r7, #8]
   119b8:	mov	r1, r5
   119bc:	mov	r0, r8
   119c0:	add	r3, r3, r5, lsl #3
   119c4:	ldr	r4, [r3, #4]
   119c8:	bl	10e94 <printf@plt>
   119cc:	cmp	r4, #0
   119d0:	beq	1199c <grafo_imprime@@Base+0x44>
   119d4:	mov	r0, r9
   119d8:	b	119e0 <grafo_imprime@@Base+0x88>
   119dc:	mov	r0, r6
   119e0:	ldr	r1, [r4]
   119e4:	bl	10e94 <printf@plt>
   119e8:	ldr	r4, [r4, #4]
   119ec:	cmp	r4, #0
   119f0:	bne	119dc <grafo_imprime@@Base+0x84>
   119f4:	b	1199c <grafo_imprime@@Base+0x44>
   119f8:	ldrd	r4, [sp]
   119fc:	ldrd	r6, [sp, #8]
   11a00:	ldrd	r8, [sp, #16]
   11a04:	ldr	sl, [sp, #24]
   11a08:	add	sp, sp, #28
   11a0c:	pop	{pc}		; (ldr pc, [sp], #4)

00011a10 <v_sucessores@@Base>:
   11a10:	cmp	r0, #0
   11a14:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a18:	lsrne	r4, r1, #31
   11a1c:	moveq	r4, #1
   11a20:	strd	r6, [sp, #8]
   11a24:	str	r8, [sp, #16]
   11a28:	cmp	r4, #0
   11a2c:	str	lr, [sp, #20]
   11a30:	bne	11ae4 <v_sucessores@@Base+0xd4>
   11a34:	ldr	r3, [r0, #4]
   11a38:	cmp	r3, r1
   11a3c:	ble	11ae4 <v_sucessores@@Base+0xd4>
   11a40:	mov	r5, r0
   11a44:	mov	r6, r1
   11a48:	bl	128a4 <vetor_novo@@Base>
   11a4c:	mov	r7, r0
   11a50:	ldr	r0, [r5, #4]
   11a54:	cmp	r0, #0
   11a58:	ble	11aa8 <v_sucessores@@Base+0x98>
   11a5c:	lsl	r6, r6, #3
   11a60:	ldr	r3, [r5, #8]
   11a64:	add	r3, r3, r6
   11a68:	ldr	r3, [r3, #4]
   11a6c:	cmp	r3, #0
   11a70:	beq	11a9c <v_sucessores@@Base+0x8c>
   11a74:	ldr	r2, [r3]
   11a78:	cmp	r4, r2
   11a7c:	bne	11a90 <v_sucessores@@Base+0x80>
   11a80:	b	11ac0 <v_sucessores@@Base+0xb0>
   11a84:	ldr	r2, [r3]
   11a88:	cmp	r2, r4
   11a8c:	beq	11ac0 <v_sucessores@@Base+0xb0>
   11a90:	ldr	r3, [r3, #4]
   11a94:	cmp	r3, #0
   11a98:	bne	11a84 <v_sucessores@@Base+0x74>
   11a9c:	add	r4, r4, #1
   11aa0:	cmp	r0, r4
   11aa4:	bgt	11a60 <v_sucessores@@Base+0x50>
   11aa8:	mov	r0, r7
   11aac:	ldrd	r4, [sp]
   11ab0:	ldrd	r6, [sp, #8]
   11ab4:	ldr	r8, [sp, #16]
   11ab8:	add	sp, sp, #20
   11abc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ac0:	mov	r1, r4
   11ac4:	mvn	r2, #0
   11ac8:	mov	r0, r7
   11acc:	add	r4, r4, #1
   11ad0:	bl	1298c <vetor_insere@@Base>
   11ad4:	ldr	r0, [r5, #4]
   11ad8:	cmp	r0, r4
   11adc:	bgt	11a60 <v_sucessores@@Base+0x50>
   11ae0:	b	11aa8 <v_sucessores@@Base+0x98>
   11ae4:	mov	r7, #0
   11ae8:	b	11aa8 <v_sucessores@@Base+0x98>

00011aec <v_antecessores@@Base>:
   11aec:	cmp	r0, #0
   11af0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11af4:	lsrne	r5, r1, #31
   11af8:	moveq	r5, #1
   11afc:	strd	r6, [sp, #8]
   11b00:	str	r8, [sp, #16]
   11b04:	cmp	r5, #0
   11b08:	str	lr, [sp, #20]
   11b0c:	bne	11ba4 <v_antecessores@@Base+0xb8>
   11b10:	ldr	r3, [r0, #4]
   11b14:	cmp	r3, r1
   11b18:	ble	11ba4 <v_antecessores@@Base+0xb8>
   11b1c:	mov	r6, r0
   11b20:	mov	r4, r1
   11b24:	bl	128a4 <vetor_novo@@Base>
   11b28:	ldr	r1, [r6, #4]
   11b2c:	mov	r7, r0
   11b30:	cmp	r1, #0
   11b34:	ble	11b68 <v_antecessores@@Base+0x7c>
   11b38:	ldr	r3, [r6, #8]
   11b3c:	add	r3, r3, r5, lsl #3
   11b40:	b	11b50 <v_antecessores@@Base+0x64>
   11b44:	ldr	r2, [r3]
   11b48:	cmp	r4, r2
   11b4c:	beq	11b80 <v_antecessores@@Base+0x94>
   11b50:	ldr	r3, [r3, #4]
   11b54:	cmp	r3, #0
   11b58:	bne	11b44 <v_antecessores@@Base+0x58>
   11b5c:	add	r5, r5, #1
   11b60:	cmp	r1, r5
   11b64:	bgt	11b38 <v_antecessores@@Base+0x4c>
   11b68:	mov	r0, r7
   11b6c:	ldrd	r4, [sp]
   11b70:	ldrd	r6, [sp, #8]
   11b74:	ldr	r8, [sp, #16]
   11b78:	add	sp, sp, #20
   11b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b80:	mov	r1, r5
   11b84:	mvn	r2, #0
   11b88:	mov	r0, r7
   11b8c:	add	r5, r5, #1
   11b90:	bl	1298c <vetor_insere@@Base>
   11b94:	ldr	r1, [r6, #4]
   11b98:	cmp	r1, r5
   11b9c:	bgt	11b38 <v_antecessores@@Base+0x4c>
   11ba0:	b	11b68 <v_antecessores@@Base+0x7c>
   11ba4:	mov	r7, #0
   11ba8:	b	11b68 <v_antecessores@@Base+0x7c>

00011bac <dfs_helper@@Base>:
   11bac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11bb0:	strd	r6, [sp, #8]
   11bb4:	strd	r8, [sp, #16]
   11bb8:	strd	sl, [sp, #24]
   11bbc:	str	lr, [sp, #32]
   11bc0:	sub	sp, sp, #12
   11bc4:	ldr	r8, [sp, #48]	; 0x30
   11bc8:	ldr	r9, [r8, r1, lsl #2]
   11bcc:	cmp	r9, #0
   11bd0:	movne	r9, #0
   11bd4:	bne	11c5c <dfs_helper@@Base+0xb0>
   11bd8:	cmp	r1, r2
   11bdc:	str	r3, [r8, r1, lsl #2]
   11be0:	moveq	r9, r3
   11be4:	beq	11c5c <dfs_helper@@Base+0xb0>
   11be8:	mov	r6, r1
   11bec:	ldr	r1, [r0, #4]
   11bf0:	mov	fp, r2
   11bf4:	mov	r5, r0
   11bf8:	cmp	r1, #0
   11bfc:	ble	11c54 <dfs_helper@@Base+0xa8>
   11c00:	lsl	sl, r6, #3
   11c04:	add	r7, r3, #1
   11c08:	mov	r4, r9
   11c0c:	ldr	r3, [r5, #8]
   11c10:	add	r3, r3, sl
   11c14:	ldr	r3, [r3, #4]
   11c18:	cmp	r3, #0
   11c1c:	beq	11c48 <dfs_helper@@Base+0x9c>
   11c20:	ldr	r2, [r3]
   11c24:	cmp	r4, r2
   11c28:	bne	11c3c <dfs_helper@@Base+0x90>
   11c2c:	b	11c7c <dfs_helper@@Base+0xd0>
   11c30:	ldr	r2, [r3]
   11c34:	cmp	r2, r4
   11c38:	beq	11c7c <dfs_helper@@Base+0xd0>
   11c3c:	ldr	r3, [r3, #4]
   11c40:	cmp	r3, #0
   11c44:	bne	11c30 <dfs_helper@@Base+0x84>
   11c48:	add	r4, r4, #1
   11c4c:	cmp	r1, r4
   11c50:	bgt	11c0c <dfs_helper@@Base+0x60>
   11c54:	mov	r3, #0
   11c58:	str	r3, [r8, r6, lsl #2]
   11c5c:	mov	r0, r9
   11c60:	add	sp, sp, #12
   11c64:	ldrd	r4, [sp]
   11c68:	ldrd	r6, [sp, #8]
   11c6c:	ldrd	r8, [sp, #16]
   11c70:	ldrd	sl, [sp, #24]
   11c74:	add	sp, sp, #32
   11c78:	pop	{pc}		; (ldr pc, [sp], #4)
   11c7c:	mov	r3, r7
   11c80:	mov	r2, fp
   11c84:	str	r8, [sp]
   11c88:	mov	r1, r4
   11c8c:	mov	r0, r5
   11c90:	bl	11bac <dfs_helper@@Base>
   11c94:	cmp	r0, #0
   11c98:	bne	11cb0 <dfs_helper@@Base+0x104>
   11c9c:	ldr	r1, [r5, #4]
   11ca0:	add	r4, r4, #1
   11ca4:	cmp	r1, r4
   11ca8:	bgt	11c0c <dfs_helper@@Base+0x60>
   11cac:	b	11c54 <dfs_helper@@Base+0xa8>
   11cb0:	mov	r9, r0
   11cb4:	b	11c5c <dfs_helper@@Base+0xb0>

00011cb8 <grafo_dfs@@Base>:
   11cb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11cbc:	strd	r6, [sp, #8]
   11cc0:	subs	r7, r0, #0
   11cc4:	str	r8, [sp, #16]
   11cc8:	moveq	r8, r7
   11ccc:	str	lr, [sp, #20]
   11cd0:	sub	sp, sp, #8
   11cd4:	beq	11d84 <grafo_dfs@@Base+0xcc>
   11cd8:	mov	r6, r1
   11cdc:	mov	r1, #4
   11ce0:	ldr	r0, [r7, #4]
   11ce4:	mov	r5, r3
   11ce8:	mov	r8, r2
   11cec:	bl	10e70 <calloc@plt>
   11cf0:	mov	r4, r0
   11cf4:	mov	r1, r6
   11cf8:	mov	r2, r8
   11cfc:	mov	r3, #1
   11d00:	mov	r0, r7
   11d04:	str	r4, [sp]
   11d08:	bl	11bac <dfs_helper@@Base>
   11d0c:	subs	r6, r0, #0
   11d10:	beq	11db4 <grafo_dfs@@Base+0xfc>
   11d14:	mov	r1, #4
   11d18:	bl	10e70 <calloc@plt>
   11d1c:	cmp	r6, #0
   11d20:	mov	r8, r0
   11d24:	ble	11d78 <grafo_dfs@@Base+0xc0>
   11d28:	ldr	lr, [r7, #4]
   11d2c:	mov	ip, #0
   11d30:	sub	r3, r0, #4
   11d34:	cmp	lr, #0
   11d38:	add	ip, ip, #1
   11d3c:	ble	11d70 <grafo_dfs@@Base+0xb8>
   11d40:	ldr	r2, [r4]
   11d44:	cmp	ip, r2
   11d48:	movne	r1, r4
   11d4c:	movne	r2, #0
   11d50:	bne	11d64 <grafo_dfs@@Base+0xac>
   11d54:	b	11da0 <grafo_dfs@@Base+0xe8>
   11d58:	ldr	r0, [r1, #4]!
   11d5c:	cmp	r0, ip
   11d60:	beq	11da4 <grafo_dfs@@Base+0xec>
   11d64:	add	r2, r2, #1
   11d68:	cmp	r2, lr
   11d6c:	bne	11d58 <grafo_dfs@@Base+0xa0>
   11d70:	cmp	r6, ip
   11d74:	bne	11d34 <grafo_dfs@@Base+0x7c>
   11d78:	mov	r0, r4
   11d7c:	str	r6, [r5]
   11d80:	bl	10eb8 <free@plt>
   11d84:	mov	r0, r8
   11d88:	add	sp, sp, #8
   11d8c:	ldrd	r4, [sp]
   11d90:	ldrd	r6, [sp, #8]
   11d94:	ldr	r8, [sp, #16]
   11d98:	add	sp, sp, #20
   11d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11da0:	mov	r2, #0
   11da4:	cmp	r6, ip
   11da8:	str	r2, [r3, ip, lsl #2]
   11dac:	bne	11d34 <grafo_dfs@@Base+0x7c>
   11db0:	b	11d78 <grafo_dfs@@Base+0xc0>
   11db4:	mov	r0, r4
   11db8:	mov	r8, r6
   11dbc:	bl	10eb8 <free@plt>
   11dc0:	str	r6, [r5]
   11dc4:	b	11d84 <grafo_dfs@@Base+0xcc>

00011dc8 <grafo_bfs@@Base>:
   11dc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11dcc:	strd	r6, [sp, #8]
   11dd0:	subs	r6, r0, #0
   11dd4:	moveq	r7, r6
   11dd8:	strd	r8, [sp, #16]
   11ddc:	strd	sl, [sp, #24]
   11de0:	str	lr, [sp, #32]
   11de4:	sub	sp, sp, #4
   11de8:	beq	11f14 <grafo_bfs@@Base+0x14c>
   11dec:	ldr	r4, [r6, #4]
   11df0:	mov	r5, r1
   11df4:	mov	r1, #4
   11df8:	mov	r9, r2
   11dfc:	mov	r8, r3
   11e00:	mov	r0, r4
   11e04:	bl	10e70 <calloc@plt>
   11e08:	mov	sl, r0
   11e0c:	mov	r1, #4
   11e10:	mov	r0, r4
   11e14:	bl	10e70 <calloc@plt>
   11e18:	cmp	r4, #0
   11e1c:	mov	fp, r0
   11e20:	addgt	r1, sl, r4, lsl #2
   11e24:	movgt	r3, sl
   11e28:	mvngt	r2, #0
   11e2c:	ble	11e3c <grafo_bfs@@Base+0x74>
   11e30:	str	r2, [r3], #4
   11e34:	cmp	r1, r3
   11e38:	bne	11e30 <grafo_bfs@@Base+0x68>
   11e3c:	mov	ip, #1
   11e40:	mov	lr, #0
   11e44:	str	r5, [sl, r5, lsl #2]
   11e48:	str	r5, [fp]
   11e4c:	add	lr, lr, #1
   11e50:	cmp	r4, #0
   11e54:	sdiv	r3, lr, r4
   11e58:	mls	lr, r4, r3, lr
   11e5c:	ble	11eb0 <grafo_bfs@@Base+0xe8>
   11e60:	ldr	r3, [r6, #8]
   11e64:	mov	r0, #0
   11e68:	add	r3, r3, r5, lsl #3
   11e6c:	ldr	r2, [r3, #4]
   11e70:	cmp	r2, #0
   11e74:	beq	11ea4 <grafo_bfs@@Base+0xdc>
   11e78:	ldr	r3, [r2]
   11e7c:	cmp	r3, r0
   11e80:	beq	11ec0 <grafo_bfs@@Base+0xf8>
   11e84:	mov	r3, r2
   11e88:	b	11e98 <grafo_bfs@@Base+0xd0>
   11e8c:	ldr	r1, [r3]
   11e90:	cmp	r1, r0
   11e94:	beq	11ec0 <grafo_bfs@@Base+0xf8>
   11e98:	ldr	r3, [r3, #4]
   11e9c:	cmp	r3, #0
   11ea0:	bne	11e8c <grafo_bfs@@Base+0xc4>
   11ea4:	add	r0, r0, #1
   11ea8:	cmp	r4, r0
   11eac:	bne	11e70 <grafo_bfs@@Base+0xa8>
   11eb0:	cmp	lr, ip
   11eb4:	beq	11ef0 <grafo_bfs@@Base+0x128>
   11eb8:	ldr	r5, [fp, lr, lsl #2]
   11ebc:	b	11e4c <grafo_bfs@@Base+0x84>
   11ec0:	ldr	r3, [sl, r0, lsl #2]
   11ec4:	cmn	r3, #1
   11ec8:	bne	11ea4 <grafo_bfs@@Base+0xdc>
   11ecc:	add	r3, ip, #1
   11ed0:	str	r0, [fp, ip, lsl #2]
   11ed4:	str	r5, [sl, r0, lsl #2]
   11ed8:	add	r0, r0, #1
   11edc:	sdiv	ip, r3, r4
   11ee0:	cmp	r4, r0
   11ee4:	mls	ip, r4, ip, r3
   11ee8:	bne	11e70 <grafo_bfs@@Base+0xa8>
   11eec:	b	11eb0 <grafo_bfs@@Base+0xe8>
   11ef0:	ldr	r5, [sl, r9, lsl #2]
   11ef4:	cmp	r5, #0
   11ef8:	movlt	r6, #0
   11efc:	bge	11f34 <grafo_bfs@@Base+0x16c>
   11f00:	mov	r0, fp
   11f04:	bl	10eb8 <free@plt>
   11f08:	mov	r0, sl
   11f0c:	bl	10eb8 <free@plt>
   11f10:	str	r6, [r8]
   11f14:	mov	r0, r7
   11f18:	add	sp, sp, #4
   11f1c:	ldrd	r4, [sp]
   11f20:	ldrd	r6, [sp, #8]
   11f24:	ldrd	r8, [sp, #16]
   11f28:	ldrd	sl, [sp, #24]
   11f2c:	add	sp, sp, #32
   11f30:	pop	{pc}		; (ldr pc, [sp], #4)
   11f34:	cmp	r5, r9
   11f38:	beq	11f88 <grafo_bfs@@Base+0x1c0>
   11f3c:	mov	r3, r5
   11f40:	mov	r6, #1
   11f44:	ldr	r2, [sl, r3, lsl #2]
   11f48:	add	r6, r6, #1
   11f4c:	cmp	r2, r3
   11f50:	mov	r3, r2
   11f54:	bne	11f44 <grafo_bfs@@Base+0x17c>
   11f58:	lsl	r4, r6, #2
   11f5c:	mov	r0, r4
   11f60:	bl	10ef4 <malloc@plt>
   11f64:	mov	r7, r0
   11f68:	add	r3, r0, r4
   11f6c:	b	11f74 <grafo_bfs@@Base+0x1ac>
   11f70:	ldr	r5, [sl, r5, lsl #2]
   11f74:	str	r9, [r3, #-4]!
   11f78:	cmp	r3, r7
   11f7c:	mov	r9, r5
   11f80:	bne	11f70 <grafo_bfs@@Base+0x1a8>
   11f84:	b	11f00 <grafo_bfs@@Base+0x138>
   11f88:	mov	r0, #4
   11f8c:	mov	r6, #1
   11f90:	mov	r4, r0
   11f94:	b	11f60 <grafo_bfs@@Base+0x198>

00011f98 <heap_nova@@Base>:
   11f98:	strd	r4, [sp, #-16]!
   11f9c:	mov	r5, r0
   11fa0:	mov	r0, #12
   11fa4:	str	r6, [sp, #8]
   11fa8:	str	lr, [sp, #12]
   11fac:	bl	10ef4 <malloc@plt>
   11fb0:	subs	r4, r0, #0
   11fb4:	beq	11fdc <heap_nova@@Base+0x44>
   11fb8:	mov	r3, #0
   11fbc:	mov	r0, r5
   11fc0:	mov	r1, #4
   11fc4:	stm	r4, {r3, r5}
   11fc8:	bl	10e70 <calloc@plt>
   11fcc:	cmp	r0, #0
   11fd0:	mov	r3, r0
   11fd4:	str	r0, [r4, #8]
   11fd8:	beq	11ff0 <heap_nova@@Base+0x58>
   11fdc:	mov	r0, r4
   11fe0:	ldrd	r4, [sp]
   11fe4:	ldr	r6, [sp, #8]
   11fe8:	add	sp, sp, #12
   11fec:	pop	{pc}		; (ldr pc, [sp], #4)
   11ff0:	mov	r0, r4
   11ff4:	mov	r4, r3
   11ff8:	bl	10eb8 <free@plt>
   11ffc:	b	11fdc <heap_nova@@Base+0x44>

00012000 <heap_apaga@@Base>:
   12000:	strd	r4, [sp, #-16]!
   12004:	subs	r5, r0, #0
   12008:	str	r6, [sp, #8]
   1200c:	str	lr, [sp, #12]
   12010:	beq	12078 <heap_apaga@@Base+0x78>
   12014:	ldr	r3, [r5]
   12018:	ldr	r0, [r5, #8]
   1201c:	cmp	r3, #0
   12020:	ble	1205c <heap_apaga@@Base+0x5c>
   12024:	mov	r4, #0
   12028:	mov	r6, r4
   1202c:	ldr	r3, [r0, r4, lsl #2]
   12030:	ldr	r0, [r3, #4]
   12034:	bl	10eb8 <free@plt>
   12038:	ldr	r3, [r5, #8]
   1203c:	ldr	r0, [r3, r4, lsl #2]
   12040:	bl	10eb8 <free@plt>
   12044:	ldr	r3, [r5]
   12048:	ldr	r0, [r5, #8]
   1204c:	str	r6, [r0, r4, lsl #2]
   12050:	add	r4, r4, #1
   12054:	cmp	r3, r4
   12058:	bgt	1202c <heap_apaga@@Base+0x2c>
   1205c:	bl	10eb8 <free@plt>
   12060:	mov	r0, r5
   12064:	ldrd	r4, [sp]
   12068:	ldr	r6, [sp, #8]
   1206c:	ldr	lr, [sp, #12]
   12070:	add	sp, sp, #16
   12074:	b	10eb8 <free@plt>
   12078:	ldrd	r4, [sp]
   1207c:	ldr	r6, [sp, #8]
   12080:	add	sp, sp, #12
   12084:	pop	{pc}		; (ldr pc, [sp], #4)

00012088 <elemento_cria@@Base>:
   12088:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1208c:	mov	r5, r1
   12090:	strd	r6, [sp, #8]
   12094:	mov	r7, r0
   12098:	mov	r0, #8
   1209c:	str	r8, [sp, #16]
   120a0:	str	lr, [sp, #20]
   120a4:	bl	10ef4 <malloc@plt>
   120a8:	subs	r4, r0, #0
   120ac:	beq	120e8 <elemento_cria@@Base+0x60>
   120b0:	mov	r0, r5
   120b4:	bl	10f18 <strlen@plt>
   120b8:	add	r6, r0, #1
   120bc:	mov	r1, #1
   120c0:	mov	r0, r6
   120c4:	bl	10e70 <calloc@plt>
   120c8:	cmp	r0, #0
   120cc:	mov	r3, r0
   120d0:	str	r0, [r4, #4]
   120d4:	beq	12100 <elemento_cria@@Base+0x78>
   120d8:	mov	r2, r6
   120dc:	mov	r1, r5
   120e0:	bl	10ec4 <memcpy@plt>
   120e4:	str	r7, [r4]
   120e8:	mov	r0, r4
   120ec:	ldrd	r4, [sp]
   120f0:	ldrd	r6, [sp, #8]
   120f4:	ldr	r8, [sp, #16]
   120f8:	add	sp, sp, #20
   120fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12100:	mov	r0, r4
   12104:	mov	r4, r3
   12108:	bl	10eb8 <free@plt>
   1210c:	b	120e8 <elemento_cria@@Base+0x60>

00012110 <heap_insere@@Base>:
   12110:	ldr	ip, [r0]
   12114:	ldr	r3, [r0, #4]
   12118:	cmp	ip, r3
   1211c:	blt	12128 <heap_insere@@Base+0x18>
   12120:	mov	r0, #0
   12124:	bx	lr
   12128:	strd	r4, [sp, #-16]!
   1212c:	mov	r4, r0
   12130:	mov	r0, r2
   12134:	str	r6, [sp, #8]
   12138:	str	lr, [sp, #12]
   1213c:	bl	12088 <elemento_cria@@Base>
   12140:	cmp	r0, #0
   12144:	moveq	r0, #0
   12148:	beq	121dc <heap_insere@@Base+0xcc>
   1214c:	ldr	r3, [r4]
   12150:	ldr	r2, [r4, #8]
   12154:	add	r1, r3, #1
   12158:	cmp	r3, #0
   1215c:	add	r5, r2, r3, lsl #2
   12160:	str	r0, [r2, r3, lsl #2]
   12164:	str	r1, [r4]
   12168:	beq	121d8 <heap_insere@@Base+0xc8>
   1216c:	sub	r3, r3, #1
   12170:	add	r3, r3, r3, lsr #31
   12174:	asr	r3, r3, #1
   12178:	ldr	r1, [r2, r3, lsl #2]
   1217c:	lsl	ip, r3, #2
   12180:	add	r4, r2, ip
   12184:	cmp	r1, #0
   12188:	beq	121d8 <heap_insere@@Base+0xc8>
   1218c:	ldr	r6, [r0]
   12190:	ldr	lr, [r1]
   12194:	cmp	r6, lr
   12198:	bge	121d8 <heap_insere@@Base+0xc8>
   1219c:	sub	lr, r3, #1
   121a0:	cmp	r3, #0
   121a4:	str	r0, [r4]
   121a8:	add	lr, lr, lr, lsr #31
   121ac:	str	r1, [r5]
   121b0:	add	r5, r2, ip
   121b4:	beq	121d8 <heap_insere@@Base+0xc8>
   121b8:	asr	r3, lr, #1
   121bc:	ldr	r0, [r2, ip]
   121c0:	ldr	r1, [r2, r3, lsl #2]
   121c4:	lsl	ip, r3, #2
   121c8:	add	r4, r2, ip
   121cc:	cmp	r1, #0
   121d0:	cmpne	r0, #0
   121d4:	bne	1218c <heap_insere@@Base+0x7c>
   121d8:	mov	r0, #1
   121dc:	ldrd	r4, [sp]
   121e0:	ldr	r6, [sp, #8]
   121e4:	add	sp, sp, #12
   121e8:	pop	{pc}		; (ldr pc, [sp], #4)

000121ec <heap_remove@@Base>:
   121ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   121f0:	subs	r4, r0, #0
   121f4:	strd	r6, [sp, #8]
   121f8:	strd	r8, [sp, #16]
   121fc:	str	sl, [sp, #24]
   12200:	str	lr, [sp, #28]
   12204:	beq	122f4 <heap_remove@@Base+0x108>
   12208:	ldr	r3, [r4]
   1220c:	cmp	r3, #0
   12210:	ble	122f4 <heap_remove@@Base+0x108>
   12214:	ldr	r3, [r4, #8]
   12218:	ldr	r3, [r3]
   1221c:	mov	r0, r3
   12220:	ldr	r6, [r3, #4]
   12224:	bl	10eb8 <free@plt>
   12228:	ldr	lr, [r4]
   1222c:	mov	r1, #0
   12230:	ldr	r3, [r4, #8]
   12234:	sub	lr, lr, #1
   12238:	cmp	lr, #1
   1223c:	ldr	r2, [r3, lr, lsl #2]
   12240:	str	lr, [r4]
   12244:	str	r2, [r3]
   12248:	str	r1, [r3, lr, lsl #2]
   1224c:	ble	122d8 <heap_remove@@Base+0xec>
   12250:	mov	r2, #1
   12254:	add	r0, r1, #1
   12258:	lsl	r4, r1, #2
   1225c:	lsl	ip, r0, #1
   12260:	add	r5, r3, r0, lsl #3
   12264:	cmp	lr, ip
   12268:	ble	12290 <heap_remove@@Base+0xa4>
   1226c:	ldr	r5, [r5, #-4]
   12270:	ldr	r0, [r3, r0, lsl #3]
   12274:	cmp	r0, #0
   12278:	cmpne	r5, #0
   1227c:	beq	12290 <heap_remove@@Base+0xa4>
   12280:	ldr	r7, [r0]
   12284:	ldr	r0, [r5]
   12288:	cmp	r7, r0
   1228c:	movlt	r2, ip
   12290:	ldr	r5, [r3, r1, lsl #2]
   12294:	lsl	ip, r2, #1
   12298:	mov	r1, r2
   1229c:	lsl	r7, r2, #2
   122a0:	ldr	r0, [r3, r2, lsl #2]
   122a4:	add	ip, ip, #1
   122a8:	mov	r2, ip
   122ac:	cmp	r5, #0
   122b0:	cmpne	r0, #0
   122b4:	beq	122d8 <heap_remove@@Base+0xec>
   122b8:	ldr	r9, [r0]
   122bc:	ldr	r8, [r5]
   122c0:	cmp	r9, r8
   122c4:	bge	122d8 <heap_remove@@Base+0xec>
   122c8:	cmp	lr, ip
   122cc:	str	r5, [r3, r7]
   122d0:	str	r0, [r3, r4]
   122d4:	bgt	12254 <heap_remove@@Base+0x68>
   122d8:	mov	r0, r6
   122dc:	ldrd	r4, [sp]
   122e0:	ldrd	r6, [sp, #8]
   122e4:	ldrd	r8, [sp, #16]
   122e8:	ldr	sl, [sp, #24]
   122ec:	add	sp, sp, #28
   122f0:	pop	{pc}		; (ldr pc, [sp], #4)
   122f4:	mov	r6, #0
   122f8:	b	122d8 <heap_remove@@Base+0xec>

000122fc <mostraHeap@@Base>:
   122fc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12300:	movw	r5, #11604	; 0x2d54
   12304:	movt	r5, #1
   12308:	strd	r6, [sp, #8]
   1230c:	mov	r7, r0
   12310:	mov	r6, r1
   12314:	ldr	r3, [r7]
   12318:	strd	r8, [sp, #16]
   1231c:	movw	r8, #11612	; 0x2d5c
   12320:	movt	r8, #1
   12324:	str	sl, [sp, #24]
   12328:	str	lr, [sp, #28]
   1232c:	cmp	r3, r6
   12330:	ble	123a4 <mostraHeap@@Base+0xa8>
   12334:	lsl	r9, r6, #1
   12338:	cmp	r6, #0
   1233c:	add	r1, r9, #1
   12340:	ble	123c4 <mostraHeap@@Base+0xc8>
   12344:	mov	r4, r6
   12348:	mov	r3, #0
   1234c:	sub	r4, r4, #1
   12350:	add	r3, r3, #1
   12354:	asrs	r4, r4, #1
   12358:	bne	1234c <mostraHeap@@Base+0x50>
   1235c:	mov	r0, r7
   12360:	add	sl, r3, r3, lsl #1
   12364:	bl	122fc <mostraHeap@@Base>
   12368:	add	r4, r4, #1
   1236c:	mov	r0, r5
   12370:	bl	10e94 <printf@plt>
   12374:	cmp	r4, sl
   12378:	blt	12368 <mostraHeap@@Base+0x6c>
   1237c:	ldr	r3, [r7, #8]
   12380:	mov	r0, r8
   12384:	ldr	r3, [r3, r6, lsl #2]
   12388:	add	r6, r9, #2
   1238c:	ldr	r2, [r3]
   12390:	ldr	r1, [r3, #4]
   12394:	bl	10e94 <printf@plt>
   12398:	ldr	r3, [r7]
   1239c:	cmp	r3, r6
   123a0:	bgt	12334 <mostraHeap@@Base+0x38>
   123a4:	mov	r0, #10
   123a8:	ldrd	r4, [sp]
   123ac:	ldrd	r6, [sp, #8]
   123b0:	ldrd	r8, [sp, #16]
   123b4:	ldr	sl, [sp, #24]
   123b8:	ldr	lr, [sp, #28]
   123bc:	add	sp, sp, #32
   123c0:	b	10f30 <putchar@plt>
   123c4:	mov	r0, r7
   123c8:	bl	122fc <mostraHeap@@Base>
   123cc:	ldr	r3, [r7, #8]
   123d0:	movw	r0, #11612	; 0x2d5c
   123d4:	movt	r0, #1
   123d8:	ldr	r3, [r3, r6, lsl #2]
   123dc:	ldr	r2, [r3]
   123e0:	ldr	r1, [r3, #4]
   123e4:	bl	10e94 <printf@plt>
   123e8:	add	r1, r9, #2
   123ec:	mov	r0, r7
   123f0:	bl	122fc <mostraHeap@@Base>
   123f4:	b	123a4 <mostraHeap@@Base+0xa8>

000123f8 <menor_que@@Base>:
   123f8:	cmp	r1, #0
   123fc:	cmpne	r0, #0
   12400:	beq	1241c <menor_que@@Base+0x24>
   12404:	ldr	r0, [r0]
   12408:	ldr	r3, [r1]
   1240c:	cmp	r0, r3
   12410:	movge	r0, #0
   12414:	movlt	r0, #1
   12418:	bx	lr
   1241c:	mov	r0, #0
   12420:	bx	lr

00012424 <novo_str@@Base>:
   12424:	strd	r4, [sp, #-16]!
   12428:	mov	r5, r0
   1242c:	mov	r0, #12
   12430:	str	r6, [sp, #8]
   12434:	str	lr, [sp, #12]
   12438:	bl	10ef4 <malloc@plt>
   1243c:	subs	r4, r0, #0
   12440:	beq	12480 <novo_str@@Base+0x5c>
   12444:	mov	r0, r5
   12448:	bl	10f18 <strlen@plt>
   1244c:	add	r6, r0, #1
   12450:	mov	r0, r6
   12454:	bl	10ef4 <malloc@plt>
   12458:	cmp	r0, #0
   1245c:	mov	r3, r0
   12460:	str	r0, [r4]
   12464:	beq	12494 <novo_str@@Base+0x70>
   12468:	mov	r2, r6
   1246c:	mov	r1, r5
   12470:	bl	10ec4 <memcpy@plt>
   12474:	mov	r3, #0
   12478:	str	r3, [r4, #4]
   1247c:	str	r3, [r4, #8]
   12480:	mov	r0, r4
   12484:	ldrd	r4, [sp]
   12488:	ldr	r6, [sp, #8]
   1248c:	add	sp, sp, #12
   12490:	pop	{pc}		; (ldr pc, [sp], #4)
   12494:	mov	r0, r4
   12498:	mov	r4, r3
   1249c:	bl	10eb8 <free@plt>
   124a0:	b	12480 <novo_str@@Base+0x5c>

000124a4 <lista_nova@@Base>:
   124a4:	mov	r0, #12
   124a8:	str	r4, [sp, #-8]!
   124ac:	str	lr, [sp, #4]
   124b0:	bl	10ef4 <malloc@plt>
   124b4:	cmp	r0, #0
   124b8:	beq	124cc <lista_nova@@Base+0x28>
   124bc:	mov	r3, #0
   124c0:	str	r3, [r0]
   124c4:	str	r3, [r0, #4]
   124c8:	str	r3, [r0, #8]
   124cc:	ldr	r4, [sp]
   124d0:	add	sp, sp, #4
   124d4:	pop	{pc}		; (ldr pc, [sp], #4)

000124d8 <lista_apaga@@Base>:
   124d8:	strd	r4, [sp, #-16]!
   124dc:	subs	r5, r0, #0
   124e0:	str	r6, [sp, #8]
   124e4:	str	lr, [sp, #12]
   124e8:	bne	12504 <lista_apaga@@Base+0x2c>
   124ec:	b	12528 <lista_apaga@@Base+0x50>
   124f0:	ldm	r4, {r0, r3}
   124f4:	str	r3, [r5]
   124f8:	bl	10eb8 <free@plt>
   124fc:	mov	r0, r4
   12500:	bl	10eb8 <free@plt>
   12504:	ldr	r4, [r5]
   12508:	cmp	r4, #0
   1250c:	bne	124f0 <lista_apaga@@Base+0x18>
   12510:	mov	r0, r5
   12514:	ldrd	r4, [sp]
   12518:	ldr	r6, [sp, #8]
   1251c:	ldr	lr, [sp, #12]
   12520:	add	sp, sp, #16
   12524:	b	10eb8 <free@plt>
   12528:	ldrd	r4, [sp]
   1252c:	ldr	r6, [sp, #8]
   12530:	add	sp, sp, #12
   12534:	pop	{pc}		; (ldr pc, [sp], #4)

00012538 <lista_tamanho@@Base>:
   12538:	cmp	r0, #0
   1253c:	ldrne	r0, [r0, #8]
   12540:	mvneq	r0, #0
   12544:	bx	lr

00012548 <lista_inicio@@Base>:
   12548:	cmp	r0, #0
   1254c:	ldrne	r0, [r0]
   12550:	bx	lr

00012554 <lista_fim@@Base>:
   12554:	cmp	r0, #0
   12558:	ldrne	r0, [r0, #4]
   1255c:	bx	lr

00012560 <lista_insere@@Base>:
   12560:	cmp	r1, #0
   12564:	cmpne	r0, #0
   12568:	beq	12620 <lista_insere@@Base+0xc0>
   1256c:	strd	r4, [sp, #-16]!
   12570:	mov	r5, r0
   12574:	mov	r0, r1
   12578:	mov	r4, r2
   1257c:	str	r6, [sp, #8]
   12580:	str	lr, [sp, #12]
   12584:	bl	12424 <novo_str@@Base>
   12588:	cmp	r0, #0
   1258c:	beq	125e4 <lista_insere@@Base+0x84>
   12590:	cmp	r4, #0
   12594:	ldr	r2, [r5]
   12598:	ldr	r3, [r5, #8]
   1259c:	add	r3, r3, #1
   125a0:	str	r3, [r5, #8]
   125a4:	beq	125f8 <lista_insere@@Base+0x98>
   125a8:	cmp	r4, r2
   125ac:	streq	r4, [r0, #4]
   125b0:	streq	r0, [r4, #8]
   125b4:	streq	r0, [r5]
   125b8:	beq	125d4 <lista_insere@@Base+0x74>
   125bc:	ldr	r3, [r4, #8]
   125c0:	str	r4, [r0, #4]
   125c4:	str	r3, [r0, #8]
   125c8:	ldr	r3, [r4, #8]
   125cc:	str	r0, [r3, #4]
   125d0:	str	r0, [r4, #8]
   125d4:	ldrd	r4, [sp]
   125d8:	ldr	r6, [sp, #8]
   125dc:	add	sp, sp, #12
   125e0:	pop	{pc}		; (ldr pc, [sp], #4)
   125e4:	ldrd	r4, [sp]
   125e8:	mov	r0, #0
   125ec:	ldr	r6, [sp, #8]
   125f0:	add	sp, sp, #12
   125f4:	pop	{pc}		; (ldr pc, [sp], #4)
   125f8:	cmp	r2, #0
   125fc:	ldr	r6, [sp, #8]
   12600:	ldrne	r3, [r5, #4]
   12604:	streq	r0, [r5]
   12608:	strne	r3, [r0, #8]
   1260c:	strne	r0, [r3, #4]
   12610:	str	r0, [r5, #4]
   12614:	ldrd	r4, [sp]
   12618:	add	sp, sp, #12
   1261c:	pop	{pc}		; (ldr pc, [sp], #4)
   12620:	mov	r0, #0
   12624:	bx	lr

00012628 <lista_remove@@Base>:
   12628:	cmp	r1, #0
   1262c:	cmpne	r0, #0
   12630:	strd	r4, [sp, #-16]!
   12634:	moveq	r5, #0
   12638:	str	r6, [sp, #8]
   1263c:	str	lr, [sp, #12]
   12640:	beq	12688 <lista_remove@@Base+0x60>
   12644:	ldr	r3, [r0, #8]
   12648:	mov	r4, r1
   1264c:	ldr	r2, [r1, #8]
   12650:	ldr	r5, [r1, #4]
   12654:	sub	r3, r3, #1
   12658:	cmp	r2, #0
   1265c:	str	r3, [r0, #8]
   12660:	strne	r5, [r2, #4]
   12664:	ldrne	r5, [r1, #4]
   12668:	streq	r5, [r0]
   1266c:	cmp	r5, #0
   12670:	streq	r2, [r0, #4]
   12674:	strne	r2, [r5, #8]
   12678:	ldr	r0, [r1]
   1267c:	bl	10eb8 <free@plt>
   12680:	mov	r0, r4
   12684:	bl	10eb8 <free@plt>
   12688:	mov	r0, r5
   1268c:	ldrd	r4, [sp]
   12690:	ldr	r6, [sp, #8]
   12694:	add	sp, sp, #12
   12698:	pop	{pc}		; (ldr pc, [sp], #4)

0001269c <lista_pesquisa@@Base>:
   1269c:	strd	r4, [sp, #-16]!
   126a0:	clz	r4, r1
   126a4:	cmp	r0, #0
   126a8:	lsr	r4, r4, #5
   126ac:	moveq	r4, #1
   126b0:	str	r6, [sp, #8]
   126b4:	str	lr, [sp, #12]
   126b8:	cmp	r4, #0
   126bc:	movne	r4, #0
   126c0:	bne	12708 <lista_pesquisa@@Base+0x6c>
   126c4:	cmp	r2, #1
   126c8:	bhi	12708 <lista_pesquisa@@Base+0x6c>
   126cc:	cmp	r2, #0
   126d0:	mov	r5, r1
   126d4:	bne	1271c <lista_pesquisa@@Base+0x80>
   126d8:	ldr	r4, [r0]
   126dc:	cmp	r4, #0
   126e0:	bne	126f4 <lista_pesquisa@@Base+0x58>
   126e4:	b	12708 <lista_pesquisa@@Base+0x6c>
   126e8:	ldr	r4, [r4, #4]
   126ec:	cmp	r4, #0
   126f0:	beq	12708 <lista_pesquisa@@Base+0x6c>
   126f4:	mov	r1, r5
   126f8:	ldr	r0, [r4]
   126fc:	bl	10e7c <strcmp@plt>
   12700:	cmp	r0, #0
   12704:	bne	126e8 <lista_pesquisa@@Base+0x4c>
   12708:	mov	r0, r4
   1270c:	ldrd	r4, [sp]
   12710:	ldr	r6, [sp, #8]
   12714:	add	sp, sp, #12
   12718:	pop	{pc}		; (ldr pc, [sp], #4)
   1271c:	ldr	r4, [r0, #4]
   12720:	cmp	r4, #0
   12724:	bne	12738 <lista_pesquisa@@Base+0x9c>
   12728:	b	12708 <lista_pesquisa@@Base+0x6c>
   1272c:	ldr	r4, [r4, #8]
   12730:	cmp	r4, #0
   12734:	beq	12708 <lista_pesquisa@@Base+0x6c>
   12738:	mov	r1, r5
   1273c:	ldr	r0, [r4]
   12740:	bl	10e7c <strcmp@plt>
   12744:	cmp	r0, #0
   12748:	bne	1272c <lista_pesquisa@@Base+0x90>
   1274c:	b	12708 <lista_pesquisa@@Base+0x6c>

00012750 <lista_ordena@@Base>:
   12750:	cmp	r0, #0
   12754:	beq	127f4 <lista_ordena@@Base+0xa4>
   12758:	ldr	r3, [r0, #8]
   1275c:	cmp	r3, #0
   12760:	beq	127ec <lista_ordena@@Base+0x9c>
   12764:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12768:	strd	r6, [sp, #8]
   1276c:	ldr	r6, [r0]
   12770:	str	r8, [sp, #16]
   12774:	str	lr, [sp, #20]
   12778:	ldr	r7, [r6, #4]
   1277c:	cmp	r7, #0
   12780:	beq	127d4 <lista_ordena@@Base+0x84>
   12784:	mov	r5, r6
   12788:	mov	r4, r7
   1278c:	ldr	r0, [r4]
   12790:	ldr	r1, [r5]
   12794:	bl	10e7c <strcmp@plt>
   12798:	cmp	r0, #0
   1279c:	movlt	r5, r4
   127a0:	ldr	r4, [r4, #4]
   127a4:	cmp	r4, #0
   127a8:	bne	1278c <lista_ordena@@Base+0x3c>
   127ac:	cmp	r6, r5
   127b0:	beq	127c4 <lista_ordena@@Base+0x74>
   127b4:	ldr	r2, [r5]
   127b8:	ldr	r3, [r6]
   127bc:	str	r2, [r6]
   127c0:	str	r3, [r5]
   127c4:	mov	r6, r7
   127c8:	ldr	r7, [r6, #4]
   127cc:	cmp	r7, #0
   127d0:	bne	12784 <lista_ordena@@Base+0x34>
   127d4:	ldrd	r4, [sp]
   127d8:	mov	r0, #0
   127dc:	ldrd	r6, [sp, #8]
   127e0:	ldr	r8, [sp, #16]
   127e4:	add	sp, sp, #20
   127e8:	pop	{pc}		; (ldr pc, [sp], #4)
   127ec:	mov	r0, #0
   127f0:	bx	lr
   127f4:	mvn	r0, #0
   127f8:	bx	lr

000127fc <lista_inverte@@Base>:
   127fc:	strd	r4, [sp, #-12]!
   12800:	subs	r5, r0, #0
   12804:	str	lr, [sp, #8]
   12808:	beq	1289c <lista_inverte@@Base+0xa0>
   1280c:	ldr	r4, [r5, #8]
   12810:	cmp	r4, #1
   12814:	movle	r0, #0
   12818:	ble	12888 <lista_inverte@@Base+0x8c>
   1281c:	ldr	r1, [r5]
   12820:	cmp	r4, #2
   12824:	ldr	r3, [r1, #4]
   12828:	beq	12894 <lista_inverte@@Base+0x98>
   1282c:	sub	r4, r4, #2
   12830:	mov	ip, #0
   12834:	b	1283c <lista_inverte@@Base+0x40>
   12838:	mov	r3, r2
   1283c:	ldmib	r3, {r2, lr}
   12840:	add	ip, ip, #1
   12844:	cmp	r4, ip
   12848:	str	r2, [lr, #4]
   1284c:	str	lr, [r2, #8]
   12850:	str	r1, [r3, #4]
   12854:	str	r3, [r1, #8]
   12858:	mov	r1, r3
   1285c:	bne	12838 <lista_inverte@@Base+0x3c>
   12860:	ldr	r2, [r5, #4]
   12864:	mov	r1, #0
   12868:	mov	r0, r1
   1286c:	ldr	ip, [r2, #8]
   12870:	str	ip, [r5, #4]
   12874:	str	r1, [ip, #4]
   12878:	str	r3, [r2, #4]
   1287c:	str	r1, [r2, #8]
   12880:	str	r2, [r3, #8]
   12884:	str	r2, [r5]
   12888:	ldrd	r4, [sp]
   1288c:	add	sp, sp, #8
   12890:	pop	{pc}		; (ldr pc, [sp], #4)
   12894:	mov	r3, r1
   12898:	b	12860 <lista_inverte@@Base+0x64>
   1289c:	mvn	r0, #0
   128a0:	b	12888 <lista_inverte@@Base+0x8c>

000128a4 <vetor_novo@@Base>:
   128a4:	mov	r0, #12
   128a8:	str	r4, [sp, #-8]!
   128ac:	str	lr, [sp, #4]
   128b0:	bl	10ef4 <malloc@plt>
   128b4:	cmp	r0, #0
   128b8:	beq	128cc <vetor_novo@@Base+0x28>
   128bc:	mov	r3, #0
   128c0:	str	r3, [r0]
   128c4:	str	r3, [r0, #4]
   128c8:	str	r3, [r0, #8]
   128cc:	ldr	r4, [sp]
   128d0:	add	sp, sp, #4
   128d4:	pop	{pc}		; (ldr pc, [sp], #4)

000128d8 <vetor_apaga@@Base>:
   128d8:	str	r4, [sp, #-8]!
   128dc:	subs	r4, r0, #0
   128e0:	str	lr, [sp, #4]
   128e4:	beq	12904 <vetor_apaga@@Base+0x2c>
   128e8:	ldr	r0, [r4, #8]
   128ec:	bl	10eb8 <free@plt>
   128f0:	mov	r0, r4
   128f4:	ldr	r4, [sp]
   128f8:	ldr	lr, [sp, #4]
   128fc:	add	sp, sp, #8
   12900:	b	10eb8 <free@plt>
   12904:	ldr	r4, [sp]
   12908:	add	sp, sp, #4
   1290c:	pop	{pc}		; (ldr pc, [sp], #4)

00012910 <vetor_atribui@@Base>:
   12910:	cmp	r0, #0
   12914:	lsrne	r3, r1, #31
   12918:	moveq	r3, #1
   1291c:	cmp	r3, #0
   12920:	bne	12940 <vetor_atribui@@Base+0x30>
   12924:	ldr	r3, [r0]
   12928:	cmp	r3, r1
   1292c:	ble	12940 <vetor_atribui@@Base+0x30>
   12930:	ldr	r3, [r0, #8]
   12934:	mov	r0, r1
   12938:	str	r2, [r3, r1, lsl #2]
   1293c:	bx	lr
   12940:	mvn	r0, #0
   12944:	bx	lr

00012948 <vetor_tamanho@@Base>:
   12948:	cmp	r0, #0
   1294c:	ldrne	r0, [r0]
   12950:	mvneq	r0, #0
   12954:	bx	lr

00012958 <vetor_elemento@@Base>:
   12958:	cmp	r0, #0
   1295c:	lsrne	r3, r1, #31
   12960:	moveq	r3, #1
   12964:	cmp	r3, #0
   12968:	bne	12984 <vetor_elemento@@Base+0x2c>
   1296c:	ldr	r3, [r0]
   12970:	cmp	r3, r1
   12974:	ble	12984 <vetor_elemento@@Base+0x2c>
   12978:	ldr	r3, [r0, #8]
   1297c:	ldr	r0, [r3, r1, lsl #2]
   12980:	bx	lr
   12984:	mov	r0, #-2147483648	; 0x80000000
   12988:	bx	lr

0001298c <vetor_insere@@Base>:
   1298c:	cmn	r2, #1
   12990:	movge	r3, #0
   12994:	movlt	r3, #1
   12998:	cmp	r0, #0
   1299c:	moveq	r3, #1
   129a0:	cmp	r3, #0
   129a4:	bne	12a5c <vetor_insere@@Base+0xd0>
   129a8:	strd	r4, [sp, #-16]!
   129ac:	mov	r4, r2
   129b0:	mov	r5, r0
   129b4:	str	r6, [sp, #8]
   129b8:	mov	r6, r1
   129bc:	ldr	r1, [r0]
   129c0:	str	lr, [sp, #12]
   129c4:	cmp	r1, r2
   129c8:	blt	12a54 <vetor_insere@@Base+0xc8>
   129cc:	ldr	r3, [r0, #4]
   129d0:	cmn	r2, #1
   129d4:	moveq	r4, r1
   129d8:	ldr	r0, [r0, #8]
   129dc:	cmp	r1, r3
   129e0:	beq	12a24 <vetor_insere@@Base+0x98>
   129e4:	cmp	r4, r1
   129e8:	addlt	r3, r0, r1, lsl #2
   129ec:	addlt	r2, r0, r4, lsl #2
   129f0:	bge	12a04 <vetor_insere@@Base+0x78>
   129f4:	ldr	ip, [r3, #-4]
   129f8:	str	ip, [r3], #-4
   129fc:	cmp	r2, r3
   12a00:	bne	129f4 <vetor_insere@@Base+0x68>
   12a04:	add	r1, r1, #1
   12a08:	str	r6, [r0, r4, lsl #2]
   12a0c:	mov	r0, r4
   12a10:	str	r1, [r5]
   12a14:	ldrd	r4, [sp]
   12a18:	ldr	r6, [sp, #8]
   12a1c:	add	sp, sp, #12
   12a20:	pop	{pc}		; (ldr pc, [sp], #4)
   12a24:	cmp	r1, #0
   12a28:	lslne	r3, r1, #1
   12a2c:	moveq	r3, #1
   12a30:	moveq	r1, #4
   12a34:	lslne	r1, r1, #3
   12a38:	str	r3, [r5, #4]
   12a3c:	bl	10ed0 <realloc@plt>
   12a40:	cmp	r0, #0
   12a44:	str	r0, [r5, #8]
   12a48:	beq	12a54 <vetor_insere@@Base+0xc8>
   12a4c:	ldr	r1, [r5]
   12a50:	b	129e4 <vetor_insere@@Base+0x58>
   12a54:	mvn	r0, #0
   12a58:	b	12a14 <vetor_insere@@Base+0x88>
   12a5c:	mvn	r0, #0
   12a60:	bx	lr

00012a64 <vetor_remove@@Base>:
   12a64:	cmp	r0, #0
   12a68:	lsrne	r3, r1, #31
   12a6c:	moveq	r3, #1
   12a70:	cmp	r3, #0
   12a74:	bne	12ac4 <vetor_remove@@Base+0x60>
   12a78:	ldr	ip, [r0]
   12a7c:	cmp	ip, r1
   12a80:	ble	12ac4 <vetor_remove@@Base+0x60>
   12a84:	add	r3, r1, #1
   12a88:	cmp	ip, r3
   12a8c:	ble	12ab0 <vetor_remove@@Base+0x4c>
   12a90:	ldr	r3, [r0, #8]
   12a94:	sub	r2, r3, #4
   12a98:	add	r1, r3, r1, lsl #2
   12a9c:	add	r2, r2, ip, lsl #2
   12aa0:	ldr	r3, [r1, #4]
   12aa4:	str	r3, [r1], #4
   12aa8:	cmp	r1, r2
   12aac:	bne	12aa0 <vetor_remove@@Base+0x3c>
   12ab0:	sub	ip, ip, #1
   12ab4:	mov	r3, #0
   12ab8:	str	ip, [r0]
   12abc:	mov	r0, r3
   12ac0:	bx	lr
   12ac4:	mvn	r3, #0
   12ac8:	b	12abc <vetor_remove@@Base+0x58>

00012acc <vetor_pesquisa@@Base>:
   12acc:	cmp	r0, #0
   12ad0:	beq	12b10 <vetor_pesquisa@@Base+0x44>
   12ad4:	ldr	ip, [r0]
   12ad8:	cmp	ip, #0
   12adc:	ble	12b10 <vetor_pesquisa@@Base+0x44>
   12ae0:	ldr	r3, [r0, #8]
   12ae4:	mov	r0, #0
   12ae8:	ldr	r2, [r3]
   12aec:	cmp	r1, r2
   12af0:	bne	12b04 <vetor_pesquisa@@Base+0x38>
   12af4:	b	12b18 <vetor_pesquisa@@Base+0x4c>
   12af8:	ldr	r2, [r3, #4]!
   12afc:	cmp	r2, r1
   12b00:	beq	12b18 <vetor_pesquisa@@Base+0x4c>
   12b04:	add	r0, r0, #1
   12b08:	cmp	ip, r0
   12b0c:	bne	12af8 <vetor_pesquisa@@Base+0x2c>
   12b10:	mvn	r0, #0
   12b14:	bx	lr
   12b18:	bx	lr

00012b1c <vetor_ordena@@Base>:
   12b1c:	cmp	r0, #0
   12b20:	beq	12b9c <vetor_ordena@@Base+0x80>
   12b24:	strd	r4, [sp, #-16]!
   12b28:	ldr	r5, [r0]
   12b2c:	str	r6, [sp, #8]
   12b30:	str	lr, [sp, #12]
   12b34:	cmp	r5, #1
   12b38:	ble	12b88 <vetor_ordena@@Base+0x6c>
   12b3c:	ldr	r6, [r0, #8]
   12b40:	mov	lr, #1
   12b44:	mov	r4, r6
   12b48:	ldr	ip, [r4, #4]!
   12b4c:	mov	r2, lr
   12b50:	mov	r3, r4
   12b54:	ldr	r1, [r3, #-4]
   12b58:	mov	r0, r3
   12b5c:	cmp	r1, ip
   12b60:	ble	12b78 <vetor_ordena@@Base+0x5c>
   12b64:	subs	r2, r2, #1
   12b68:	str	r1, [r3]
   12b6c:	sub	r3, r0, #4
   12b70:	bne	12b54 <vetor_ordena@@Base+0x38>
   12b74:	mov	r0, r6
   12b78:	add	lr, lr, #1
   12b7c:	str	ip, [r0]
   12b80:	cmp	lr, r5
   12b84:	bne	12b48 <vetor_ordena@@Base+0x2c>
   12b88:	ldrd	r4, [sp]
   12b8c:	mov	r0, #0
   12b90:	ldr	r6, [sp, #8]
   12b94:	add	sp, sp, #12
   12b98:	pop	{pc}		; (ldr pc, [sp], #4)
   12b9c:	mvn	r0, #0
   12ba0:	bx	lr

00012ba4 <__libc_csu_init@@Base>:
   12ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ba8:	mov	r7, r0
   12bac:	ldr	r6, [pc, #72]	; 12bfc <__libc_csu_init@@Base+0x58>
   12bb0:	ldr	r5, [pc, #72]	; 12c00 <__libc_csu_init@@Base+0x5c>
   12bb4:	add	r6, pc, r6
   12bb8:	add	r5, pc, r5
   12bbc:	sub	r6, r6, r5
   12bc0:	mov	r8, r1
   12bc4:	mov	r9, r2
   12bc8:	bl	10e50 <calloc@plt-0x20>
   12bcc:	asrs	r6, r6, #2
   12bd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd4:	mov	r4, #0
   12bd8:	add	r4, r4, #1
   12bdc:	ldr	r3, [r5], #4
   12be0:	mov	r2, r9
   12be4:	mov	r1, r8
   12be8:	mov	r0, r7
   12bec:	blx	r3
   12bf0:	cmp	r6, r4
   12bf4:	bne	12bd8 <__libc_csu_init@@Base+0x34>
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bfc:	andeq	r0, r1, r8, asr r3
   12c00:	andeq	r0, r1, r0, asr r3

00012c04 <__libc_csu_fini@@Base>:
   12c04:	bx	lr

Disassembly of section .fini:

00012c08 <.fini>:
   12c08:	push	{r3, lr}
   12c0c:	pop	{r3, pc}
