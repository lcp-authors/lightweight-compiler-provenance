
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_json_printer.dir/test_json_printer.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test_print>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #136	; 0x88
       c:	movw	r0, #0
      10:	str	r0, [fp, #-8]
      14:	str	r0, [fp, #-12]
      18:	str	r0, [fp, #-16]
      1c:	str	r0, [fp, #-20]	; 0xffffffec
      20:	str	r0, [fp, #-24]	; 0xffffffe8
      24:	str	r0, [fp, #-28]	; 0xffffffe4
      28:	str	r0, [fp, #-32]	; 0xffffffe0
      2c:	str	r0, [sp, #48]	; 0x30
      30:	add	r0, sp, #56	; 0x38
      34:	str	r0, [sp, #52]	; 0x34
      38:	movw	r0, #0
      3c:	movt	r0, #0
      40:	ldr	r0, [r0]
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	bl	0 <fopen>
      50:	str	r0, [sp, #48]	; 0x30
      54:	ldr	r0, [sp, #48]	; 0x30
      58:	movw	r1, #0
      5c:	cmp	r0, r1
      60:	bne	98 <test_print+0x98>
      64:	movw	r0, #0
      68:	movt	r0, #0
      6c:	ldr	r0, [r0]
      70:	movw	r1, #0
      74:	movt	r1, #0
      78:	ldr	r2, [r1]
      7c:	movw	r1, #0
      80:	movt	r1, #0
      84:	bl	0 <fprintf>
      88:	mvn	r1, #0
      8c:	str	r1, [fp, #-4]
      90:	str	r0, [sp, #44]	; 0x2c
      94:	b	37c <test_print+0x37c>
      98:	ldr	r0, [sp, #52]	; 0x34
      9c:	ldr	r1, [sp, #48]	; 0x30
      a0:	bl	0 <flatcc_json_printer_init>
      a4:	ldr	r1, [sp, #52]	; 0x34
      a8:	str	r0, [sp, #40]	; 0x28
      ac:	mov	r0, r1
      b0:	bl	388 <flatcc_json_printer_set_nonstrict>
      b4:	movw	r0, #0
      b8:	movt	r0, #0
      bc:	ldr	r0, [r0]
      c0:	movw	r1, #0
      c4:	cmp	r0, r1
      c8:	beq	10c <test_print+0x10c>
      cc:	movw	r0, #0
      d0:	movt	r0, #0
      d4:	ldr	r0, [r0]
      d8:	movw	r1, #0
      dc:	movt	r1, #0
      e0:	bl	0 <strcmp>
      e4:	cmp	r0, #0
      e8:	beq	10c <test_print+0x10c>
      ec:	movw	r0, #0
      f0:	movt	r0, #0
      f4:	ldr	r0, [r0]
      f8:	movw	r1, #10240	; 0x2800
      fc:	sub	r2, fp, #24
     100:	bl	3c8 <readfile>
     104:	str	r0, [fp, #-12]
     108:	b	120 <test_print+0x120>
     10c:	movw	r0, #0
     110:	movt	r0, #0
     114:	str	r0, [fp, #-12]
     118:	movw	r0, #288	; 0x120
     11c:	str	r0, [fp, #-24]	; 0xffffffe8
     120:	ldr	r0, [fp, #-12]
     124:	movw	r1, #0
     128:	cmp	r0, r1
     12c:	bne	15c <test_print+0x15c>
     130:	movw	r0, #0
     134:	movt	r0, #0
     138:	ldr	r0, [r0]
     13c:	movw	r1, #0
     140:	movt	r1, #0
     144:	ldr	r2, [r1]
     148:	movw	r1, #0
     14c:	movt	r1, #0
     150:	bl	0 <fprintf>
     154:	str	r0, [sp, #36]	; 0x24
     158:	b	370 <test_print+0x370>
     15c:	movw	r0, #0
     160:	movt	r0, #0
     164:	ldr	r0, [r0]
     168:	movw	r1, #10240	; 0x2800
     16c:	sub	r2, fp, #28
     170:	bl	3c8 <readfile>
     174:	str	r0, [fp, #-16]
     178:	ldr	r0, [fp, #-16]
     17c:	movw	r1, #0
     180:	cmp	r0, r1
     184:	bne	1b4 <test_print+0x1b4>
     188:	movw	r0, #0
     18c:	movt	r0, #0
     190:	ldr	r0, [r0]
     194:	movw	r1, #0
     198:	movt	r1, #0
     19c:	ldr	r2, [r1]
     1a0:	movw	r1, #0
     1a4:	movt	r1, #0
     1a8:	bl	0 <fprintf>
     1ac:	str	r0, [sp, #32]
     1b0:	b	370 <test_print+0x370>
     1b4:	ldr	r0, [sp, #52]	; 0x34
     1b8:	ldr	r1, [fp, #-12]
     1bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     1c0:	movw	r3, #0
     1c4:	movt	r3, #0
     1c8:	bl	5b4 <MyGame_Example_Monster_print_json_as_root>
     1cc:	ldr	r1, [sp, #52]	; 0x34
     1d0:	str	r0, [sp, #28]
     1d4:	mov	r0, r1
     1d8:	bl	5f8 <flatcc_json_printer_flush>
     1dc:	ldr	r1, [sp, #52]	; 0x34
     1e0:	str	r0, [sp, #24]
     1e4:	mov	r0, r1
     1e8:	bl	638 <flatcc_json_printer_get_error>
     1ec:	cmp	r0, #0
     1f0:	beq	204 <test_print+0x204>
     1f4:	movw	r0, #0
     1f8:	movt	r0, #0
     1fc:	bl	0 <printf>
     200:	str	r0, [sp, #20]
     204:	ldr	r0, [sp, #48]	; 0x30
     208:	bl	0 <fclose>
     20c:	movw	lr, #0
     210:	str	lr, [sp, #48]	; 0x30
     214:	movw	lr, #0
     218:	movt	lr, #0
     21c:	ldr	lr, [lr]
     220:	str	r0, [sp, #16]
     224:	mov	r0, lr
     228:	movw	r1, #10240	; 0x2800
     22c:	sub	r2, fp, #32
     230:	bl	3c8 <readfile>
     234:	str	r0, [fp, #-20]	; 0xffffffec
     238:	ldr	r0, [fp, #-20]	; 0xffffffec
     23c:	movw	r1, #0
     240:	cmp	r0, r1
     244:	bne	274 <test_print+0x274>
     248:	movw	r0, #0
     24c:	movt	r0, #0
     250:	ldr	r0, [r0]
     254:	movw	r1, #0
     258:	movt	r1, #0
     25c:	ldr	r2, [r1]
     260:	movw	r1, #0
     264:	movt	r1, #0
     268:	bl	0 <fprintf>
     26c:	str	r0, [sp, #12]
     270:	b	370 <test_print+0x370>
     274:	ldr	r0, [fp, #-32]	; 0xffffffe0
     278:	ldr	r1, [fp, #-28]	; 0xffffffe4
     27c:	cmp	r0, r1
     280:	bne	29c <test_print+0x29c>
     284:	ldr	r0, [fp, #-20]	; 0xffffffec
     288:	ldr	r1, [fp, #-16]
     28c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     290:	bl	0 <memcmp>
     294:	cmp	r0, #0
     298:	beq	2bc <test_print+0x2bc>
     29c:	movw	r0, #0
     2a0:	movt	r0, #0
     2a4:	ldr	r0, [r0]
     2a8:	movw	r1, #0
     2ac:	movt	r1, #0
     2b0:	bl	0 <fprintf>
     2b4:	str	r0, [sp, #8]
     2b8:	b	370 <test_print+0x370>
     2bc:	movw	r0, #0
     2c0:	movt	r0, #0
     2c4:	ldr	r0, [r0]
     2c8:	movw	r1, #0
     2cc:	movt	r1, #0
     2d0:	bl	0 <fprintf>
     2d4:	str	r0, [sp, #4]
     2d8:	ldr	r0, [sp, #52]	; 0x34
     2dc:	bl	0 <flatcc_json_printer_clear>
     2e0:	movw	r0, #0
     2e4:	movt	r0, #0
     2e8:	ldr	r0, [r0]
     2ec:	movw	lr, #0
     2f0:	cmp	r0, lr
     2f4:	bne	300 <test_print+0x300>
     2f8:	movw	r0, #0
     2fc:	str	r0, [fp, #-12]
     300:	ldr	r0, [fp, #-12]
     304:	movw	r1, #0
     308:	cmp	r0, r1
     30c:	beq	318 <test_print+0x318>
     310:	ldr	r0, [fp, #-12]
     314:	bl	0 <free>
     318:	ldr	r0, [fp, #-16]
     31c:	movw	r1, #0
     320:	cmp	r0, r1
     324:	beq	330 <test_print+0x330>
     328:	ldr	r0, [fp, #-16]
     32c:	bl	0 <free>
     330:	ldr	r0, [fp, #-20]	; 0xffffffec
     334:	movw	r1, #0
     338:	cmp	r0, r1
     33c:	beq	348 <test_print+0x348>
     340:	ldr	r0, [fp, #-20]	; 0xffffffec
     344:	bl	0 <free>
     348:	ldr	r0, [sp, #48]	; 0x30
     34c:	movw	r1, #0
     350:	cmp	r0, r1
     354:	beq	364 <test_print+0x364>
     358:	ldr	r0, [sp, #48]	; 0x30
     35c:	bl	0 <fclose>
     360:	str	r0, [sp]
     364:	ldr	r0, [fp, #-8]
     368:	str	r0, [fp, #-4]
     36c:	b	37c <test_print+0x37c>
     370:	mvn	r0, #0
     374:	str	r0, [fp, #-8]
     378:	b	2d8 <test_print+0x2d8>
     37c:	ldr	r0, [fp, #-4]
     380:	mov	sp, fp
     384:	pop	{fp, pc}

00000388 <flatcc_json_printer_set_nonstrict>:
     388:	push	{fp, lr}
     38c:	mov	fp, sp
     390:	sub	sp, sp, #8
     394:	str	r0, [sp, #4]
     398:	ldr	r0, [sp, #4]
     39c:	movw	r1, #2
     3a0:	and	r1, r1, #255	; 0xff
     3a4:	bl	71c <flatcc_json_printer_set_indent>
     3a8:	ldr	r0, [sp, #4]
     3ac:	movw	r1, #1
     3b0:	bl	73c <flatcc_json_printer_set_unquoted>
     3b4:	ldr	r0, [sp, #4]
     3b8:	movw	r1, #0
     3bc:	bl	778 <flatcc_json_printer_set_noenum>
     3c0:	mov	sp, fp
     3c4:	pop	{fp, pc}

000003c8 <readfile>:
     3c8:	push	{fp, lr}
     3cc:	mov	fp, sp
     3d0:	sub	sp, sp, #64	; 0x40
     3d4:	str	r0, [fp, #-8]
     3d8:	str	r1, [fp, #-12]
     3dc:	str	r2, [fp, #-16]
     3e0:	ldr	r0, [fp, #-16]
     3e4:	movw	r1, #0
     3e8:	cmp	r0, r1
     3ec:	beq	3fc <readfile+0x34>
     3f0:	ldr	r0, [fp, #-16]
     3f4:	str	r0, [sp, #20]
     3f8:	b	408 <readfile+0x40>
     3fc:	add	r0, sp, #28
     400:	str	r0, [sp, #20]
     404:	b	408 <readfile+0x40>
     408:	ldr	r0, [sp, #20]
     40c:	str	r0, [fp, #-16]
     410:	ldr	r0, [fp, #-8]
     414:	movw	r1, #0
     418:	movt	r1, #0
     41c:	bl	0 <fopen>
     420:	str	r0, [fp, #-20]	; 0xffffffec
     424:	movw	r0, #0
     428:	str	r0, [fp, #-24]	; 0xffffffe8
     42c:	str	r0, [sp, #24]
     430:	ldr	r1, [fp, #-20]	; 0xffffffec
     434:	cmp	r1, r0
     438:	bne	440 <readfile+0x78>
     43c:	b	560 <readfile+0x198>
     440:	ldr	r0, [fp, #-20]	; 0xffffffec
     444:	movw	r1, #0
     448:	movw	r2, #2
     44c:	bl	0 <fseek>
     450:	ldr	r1, [fp, #-20]	; 0xffffffec
     454:	str	r0, [sp, #16]
     458:	mov	r0, r1
     45c:	bl	0 <ftell>
     460:	str	r0, [fp, #-24]	; 0xffffffe8
     464:	ldr	r0, [fp, #-24]	; 0xffffffe8
     468:	ldr	r1, [fp, #-16]
     46c:	str	r0, [r1]
     470:	ldr	r0, [fp, #-12]
     474:	cmp	r0, #0
     478:	bls	490 <readfile+0xc8>
     47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     480:	ldr	r1, [fp, #-12]
     484:	cmp	r0, r1
     488:	bls	490 <readfile+0xc8>
     48c:	b	560 <readfile+0x198>
     490:	ldr	r0, [fp, #-20]	; 0xffffffec
     494:	bl	0 <rewind>
     498:	ldr	r0, [fp, #-24]	; 0xffffffe8
     49c:	cmp	r0, #0
     4a0:	beq	4b0 <readfile+0xe8>
     4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     4a8:	str	r0, [sp, #12]
     4ac:	b	4bc <readfile+0xf4>
     4b0:	movw	r0, #1
     4b4:	str	r0, [sp, #12]
     4b8:	b	4bc <readfile+0xf4>
     4bc:	ldr	r0, [sp, #12]
     4c0:	bl	0 <malloc>
     4c4:	str	r0, [sp, #24]
     4c8:	ldr	r0, [sp, #24]
     4cc:	movw	lr, #0
     4d0:	cmp	r0, lr
     4d4:	bne	4dc <readfile+0x114>
     4d8:	b	560 <readfile+0x198>
     4dc:	movw	r0, #0
     4e0:	str	r0, [fp, #-28]	; 0xffffffe4
     4e4:	ldr	r0, [sp, #24]
     4e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     4ec:	add	r0, r0, r1
     4f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
     4f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     4f8:	sub	r2, r1, r2
     4fc:	ldr	r3, [fp, #-20]	; 0xffffffec
     500:	movw	r1, #1
     504:	bl	0 <fread>
     508:	str	r0, [sp, #32]
     50c:	cmp	r0, #0
     510:	beq	528 <readfile+0x160>
     514:	ldr	r0, [sp, #32]
     518:	ldr	r1, [fp, #-28]	; 0xffffffe4
     51c:	add	r0, r1, r0
     520:	str	r0, [fp, #-28]	; 0xffffffe4
     524:	b	4e4 <readfile+0x11c>
     528:	ldr	r0, [fp, #-28]	; 0xffffffe4
     52c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     530:	cmp	r0, r1
     534:	beq	53c <readfile+0x174>
     538:	b	560 <readfile+0x198>
     53c:	ldr	r0, [fp, #-20]	; 0xffffffec
     540:	bl	0 <fclose>
     544:	ldr	lr, [fp, #-24]	; 0xffffffe8
     548:	ldr	r1, [fp, #-16]
     54c:	str	lr, [r1]
     550:	ldr	r1, [sp, #24]
     554:	str	r1, [fp, #-4]
     558:	str	r0, [sp, #8]
     55c:	b	5a8 <readfile+0x1e0>
     560:	ldr	r0, [fp, #-20]	; 0xffffffec
     564:	movw	r1, #0
     568:	cmp	r0, r1
     56c:	beq	57c <readfile+0x1b4>
     570:	ldr	r0, [fp, #-20]	; 0xffffffec
     574:	bl	0 <fclose>
     578:	str	r0, [sp, #4]
     57c:	ldr	r0, [sp, #24]
     580:	movw	r1, #0
     584:	cmp	r0, r1
     588:	beq	594 <readfile+0x1cc>
     58c:	ldr	r0, [sp, #24]
     590:	bl	0 <free>
     594:	ldr	r0, [fp, #-24]	; 0xffffffe8
     598:	ldr	r1, [fp, #-16]
     59c:	str	r0, [r1]
     5a0:	movw	r0, #0
     5a4:	str	r0, [fp, #-4]
     5a8:	ldr	r0, [fp, #-4]
     5ac:	mov	sp, fp
     5b0:	pop	{fp, pc}

000005b4 <MyGame_Example_Monster_print_json_as_root>:
     5b4:	push	{fp, lr}
     5b8:	mov	fp, sp
     5bc:	sub	sp, sp, #24
     5c0:	str	r0, [fp, #-4]
     5c4:	str	r1, [fp, #-8]
     5c8:	str	r2, [sp, #12]
     5cc:	str	r3, [sp, #8]
     5d0:	ldr	r0, [fp, #-4]
     5d4:	ldr	r1, [fp, #-8]
     5d8:	ldr	r2, [sp, #12]
     5dc:	ldr	r3, [sp, #8]
     5e0:	movw	ip, #0
     5e4:	movt	ip, #0
     5e8:	str	ip, [sp]
     5ec:	bl	0 <flatcc_json_printer_table_as_root>
     5f0:	mov	sp, fp
     5f4:	pop	{fp, pc}

000005f8 <flatcc_json_printer_flush>:
     5f8:	push	{fp, lr}
     5fc:	mov	fp, sp
     600:	sub	sp, sp, #8
     604:	str	r0, [sp, #4]
     608:	ldr	r0, [sp, #4]
     60c:	ldr	r0, [r0, #44]	; 0x2c
     610:	ldr	r1, [sp, #4]
     614:	str	r0, [sp]
     618:	mov	r0, r1
     61c:	movw	r1, #1
     620:	ldr	r2, [sp]
     624:	blx	r2
     628:	ldr	r0, [sp, #4]
     62c:	bl	1c80 <flatcc_json_printer_total>
     630:	mov	sp, fp
     634:	pop	{fp, pc}

00000638 <flatcc_json_printer_get_error>:
     638:	sub	sp, sp, #4
     63c:	str	r0, [sp]
     640:	ldr	r0, [sp]
     644:	ldr	r0, [r0, #36]	; 0x24
     648:	add	sp, sp, #4
     64c:	bx	lr

00000650 <main>:
     650:	push	{fp, lr}
     654:	mov	fp, sp
     658:	sub	sp, sp, #24
     65c:	movw	r2, #0
     660:	str	r2, [fp, #-4]
     664:	str	r0, [fp, #-8]
     668:	str	r1, [sp, #12]
     66c:	movw	r0, #0
     670:	movt	r0, #0
     674:	ldr	r0, [r0]
     678:	movw	r1, #0
     67c:	movt	r1, #0
     680:	bl	0 <fprintf>
     684:	ldr	r1, [fp, #-8]
     688:	cmp	r1, #1
     68c:	str	r0, [sp, #8]
     690:	beq	6c8 <main+0x78>
     694:	ldr	r0, [fp, #-8]
     698:	cmp	r0, #4
     69c:	beq	6c8 <main+0x78>
     6a0:	movw	r0, #0
     6a4:	movt	r0, #0
     6a8:	ldr	r0, [r0]
     6ac:	movw	r1, #0
     6b0:	movt	r1, #0
     6b4:	bl	0 <fprintf>
     6b8:	movw	r1, #1
     6bc:	str	r0, [sp, #4]
     6c0:	mov	r0, r1
     6c4:	bl	0 <exit>
     6c8:	ldr	r0, [fp, #-8]
     6cc:	cmp	r0, #4
     6d0:	bne	710 <main+0xc0>
     6d4:	ldr	r0, [sp, #12]
     6d8:	ldr	r0, [r0, #4]
     6dc:	movw	r1, #0
     6e0:	movt	r1, #0
     6e4:	str	r0, [r1]
     6e8:	ldr	r0, [sp, #12]
     6ec:	ldr	r0, [r0, #8]
     6f0:	movw	r1, #0
     6f4:	movt	r1, #0
     6f8:	str	r0, [r1]
     6fc:	ldr	r0, [sp, #12]
     700:	ldr	r0, [r0, #12]
     704:	movw	r1, #0
     708:	movt	r1, #0
     70c:	str	r0, [r1]
     710:	bl	0 <test_print>
     714:	mov	sp, fp
     718:	pop	{fp, pc}

0000071c <flatcc_json_printer_set_indent>:
     71c:	sub	sp, sp, #8
     720:	str	r0, [sp, #4]
     724:	strb	r1, [sp, #3]
     728:	ldrb	r0, [sp, #3]
     72c:	ldr	r1, [sp, #4]
     730:	strb	r0, [r1, #25]
     734:	add	sp, sp, #8
     738:	bx	lr

0000073c <flatcc_json_printer_set_unquoted>:
     73c:	sub	sp, sp, #8
     740:	str	r0, [sp, #4]
     744:	str	r1, [sp]
     748:	ldr	r0, [sp]
     74c:	cmp	r0, #0
     750:	movw	r0, #0
     754:	movne	r0, #1
     758:	mvn	r1, #0
     75c:	eor	r0, r0, r1
     760:	eor	r0, r0, r1
     764:	and	r0, r0, #1
     768:	ldr	r1, [sp, #4]
     76c:	strb	r0, [r1, #26]
     770:	add	sp, sp, #8
     774:	bx	lr

00000778 <flatcc_json_printer_set_noenum>:
     778:	sub	sp, sp, #8
     77c:	str	r0, [sp, #4]
     780:	str	r1, [sp]
     784:	ldr	r0, [sp]
     788:	cmp	r0, #0
     78c:	movw	r0, #0
     790:	movne	r0, #1
     794:	mvn	r1, #0
     798:	eor	r0, r0, r1
     79c:	eor	r0, r0, r1
     7a0:	and	r0, r0, #1
     7a4:	ldr	r1, [sp, #4]
     7a8:	strb	r0, [r1, #27]
     7ac:	add	sp, sp, #8
     7b0:	bx	lr

000007b4 <MyGame_Example_Monster_print_json_table>:
     7b4:	push	{fp, lr}
     7b8:	mov	fp, sp
     7bc:	sub	sp, sp, #32
     7c0:	str	r0, [fp, #-4]
     7c4:	str	r1, [fp, #-8]
     7c8:	ldr	r0, [fp, #-4]
     7cc:	ldr	r1, [fp, #-8]
     7d0:	movw	r2, #0
     7d4:	movw	r3, #0
     7d8:	movt	r3, #0
     7dc:	movw	ip, #3
     7e0:	str	ip, [sp]
     7e4:	movw	ip, #0
     7e8:	movt	ip, #0
     7ec:	str	ip, [sp, #4]
     7f0:	bl	0 <flatcc_json_printer_struct_field>
     7f4:	ldr	r0, [fp, #-4]
     7f8:	ldr	r1, [fp, #-8]
     7fc:	movw	r2, #1
     800:	movw	r3, #0
     804:	movt	r3, #0
     808:	movw	ip, #4
     80c:	str	ip, [sp]
     810:	movw	ip, #150	; 0x96
     814:	sxth	ip, ip
     818:	str	ip, [sp, #4]
     81c:	bl	0 <flatcc_json_printer_int16_field>
     820:	ldr	r0, [fp, #-4]
     824:	ldr	r1, [fp, #-8]
     828:	movw	r2, #2
     82c:	str	r2, [fp, #-12]
     830:	movw	r3, #0
     834:	movt	r3, #0
     838:	ldr	ip, [fp, #-12]
     83c:	str	ip, [sp]
     840:	movw	lr, #100	; 0x64
     844:	sxth	lr, lr
     848:	str	lr, [sp, #4]
     84c:	bl	0 <flatcc_json_printer_int16_field>
     850:	ldr	r0, [fp, #-4]
     854:	ldr	r1, [fp, #-8]
     858:	movw	r2, #3
     85c:	movw	r3, #0
     860:	movt	r3, #0
     864:	movw	ip, #4
     868:	str	ip, [sp]
     86c:	bl	0 <flatcc_json_printer_string_field>
     870:	ldr	r0, [fp, #-4]
     874:	ldr	r1, [fp, #-8]
     878:	movw	r2, #5
     87c:	movw	r3, #0
     880:	movt	r3, #0
     884:	movw	ip, #9
     888:	str	ip, [sp]
     88c:	bl	0 <flatcc_json_printer_uint8_vector_field>
     890:	ldr	r0, [fp, #-4]
     894:	ldr	r1, [fp, #-8]
     898:	movw	r2, #6
     89c:	movw	r3, #0
     8a0:	movt	r3, #0
     8a4:	movw	ip, #5
     8a8:	str	ip, [sp]
     8ac:	movw	ip, #8
     8b0:	sxtb	ip, ip
     8b4:	str	ip, [sp, #4]
     8b8:	movw	ip, #0
     8bc:	movt	ip, #0
     8c0:	str	ip, [sp, #8]
     8c4:	bl	0 <flatcc_json_printer_int8_enum_field>
     8c8:	ldr	r0, [fp, #-4]
     8cc:	ldr	r1, [fp, #-8]
     8d0:	movw	r2, #8
     8d4:	movw	r3, #0
     8d8:	movt	r3, #0
     8dc:	movw	ip, #4
     8e0:	str	ip, [sp]
     8e4:	movw	ip, #0
     8e8:	movt	ip, #0
     8ec:	str	ip, [sp, #4]
     8f0:	movw	ip, #0
     8f4:	movt	ip, #0
     8f8:	str	ip, [sp, #8]
     8fc:	bl	0 <flatcc_json_printer_union_field>
     900:	ldr	r0, [fp, #-4]
     904:	ldr	r1, [fp, #-8]
     908:	movw	r2, #9
     90c:	movw	r3, #0
     910:	movt	r3, #0
     914:	movw	ip, #5
     918:	str	ip, [sp]
     91c:	movw	ip, #4
     920:	str	ip, [sp, #4]
     924:	movw	ip, #0
     928:	movt	ip, #0
     92c:	str	ip, [sp, #8]
     930:	bl	0 <flatcc_json_printer_struct_vector_field>
     934:	ldr	r0, [fp, #-4]
     938:	ldr	r1, [fp, #-8]
     93c:	movw	r2, #10
     940:	movw	r3, #0
     944:	movt	r3, #0
     948:	movw	ip, #17
     94c:	str	ip, [sp]
     950:	bl	0 <flatcc_json_printer_string_vector_field>
     954:	ldr	r0, [fp, #-4]
     958:	ldr	r1, [fp, #-8]
     95c:	movw	r2, #11
     960:	movw	r3, #0
     964:	movt	r3, #0
     968:	movw	ip, #17
     96c:	str	ip, [sp]
     970:	movw	ip, #0
     974:	movt	ip, #0
     978:	str	ip, [sp, #4]
     97c:	bl	0 <flatcc_json_printer_table_vector_field>
     980:	ldr	r0, [fp, #-4]
     984:	ldr	r1, [fp, #-8]
     988:	movw	r2, #12
     98c:	movw	r3, #0
     990:	movt	r3, #0
     994:	movw	ip, #5
     998:	str	ip, [sp]
     99c:	movw	ip, #0
     9a0:	movt	ip, #0
     9a4:	str	ip, [sp, #4]
     9a8:	bl	0 <flatcc_json_printer_table_field>
     9ac:	ldr	r0, [fp, #-4]
     9b0:	ldr	r1, [fp, #-8]
     9b4:	movw	r2, #13
     9b8:	movw	r3, #0
     9bc:	movt	r3, #0
     9c0:	movw	ip, #20
     9c4:	str	ip, [sp]
     9c8:	movw	ip, #0
     9cc:	str	ip, [sp, #4]
     9d0:	movw	ip, #0
     9d4:	movt	ip, #0
     9d8:	str	ip, [sp, #8]
     9dc:	bl	0 <flatcc_json_printer_table_as_nested_root>
     9e0:	ldr	r0, [fp, #-4]
     9e4:	ldr	r1, [fp, #-8]
     9e8:	movw	r2, #14
     9ec:	movw	r3, #0
     9f0:	movt	r3, #0
     9f4:	movw	ip, #9
     9f8:	str	ip, [sp]
     9fc:	movw	ip, #0
     a00:	movt	ip, #0
     a04:	str	ip, [sp, #4]
     a08:	bl	0 <flatcc_json_printer_table_field>
     a0c:	ldr	r0, [fp, #-4]
     a10:	ldr	r1, [fp, #-8]
     a14:	movw	r2, #15
     a18:	movw	r3, #0
     a1c:	movt	r3, #0
     a20:	movw	ip, #8
     a24:	str	ip, [sp]
     a28:	movw	ip, #1
     a2c:	and	ip, ip, #255	; 0xff
     a30:	str	ip, [sp, #4]
     a34:	bl	0 <flatcc_json_printer_bool_field>
     a38:	ldr	r0, [fp, #-4]
     a3c:	ldr	r1, [fp, #-8]
     a40:	movw	r2, #16
     a44:	str	r2, [sp, #16]
     a48:	movw	r3, #0
     a4c:	movt	r3, #0
     a50:	ldr	ip, [sp, #16]
     a54:	str	ip, [sp]
     a58:	movw	lr, #0
     a5c:	str	lr, [sp, #4]
     a60:	bl	0 <flatcc_json_printer_int32_field>
     a64:	ldr	r0, [fp, #-4]
     a68:	ldr	r1, [fp, #-8]
     a6c:	movw	r2, #17
     a70:	movw	r3, #0
     a74:	movt	r3, #0
     a78:	movw	ip, #16
     a7c:	str	ip, [sp]
     a80:	movw	ip, #0
     a84:	str	ip, [sp, #4]
     a88:	bl	0 <flatcc_json_printer_uint32_field>
     a8c:	ldr	r0, [fp, #-4]
     a90:	ldr	r1, [fp, #-8]
     a94:	mov	r2, sp
     a98:	mov	r3, #0
     a9c:	str	r3, [r2, #12]
     aa0:	str	r3, [r2, #8]
     aa4:	mov	r3, #16
     aa8:	str	r3, [r2]
     aac:	movw	r3, #0
     ab0:	movt	r3, #0
     ab4:	mov	r2, #18
     ab8:	bl	0 <flatcc_json_printer_int64_field>
     abc:	ldr	r0, [fp, #-4]
     ac0:	ldr	r1, [fp, #-8]
     ac4:	mov	r2, sp
     ac8:	mov	r3, #0
     acc:	str	r3, [r2, #12]
     ad0:	str	r3, [r2, #8]
     ad4:	mov	r3, #16
     ad8:	str	r3, [r2]
     adc:	movw	r3, #0
     ae0:	movt	r3, #0
     ae4:	mov	r2, #19
     ae8:	bl	0 <flatcc_json_printer_uint64_field>
     aec:	ldr	r0, [fp, #-4]
     af0:	ldr	r1, [fp, #-8]
     af4:	movw	r2, #20
     af8:	movw	r3, #0
     afc:	movt	r3, #0
     b00:	movw	ip, #17
     b04:	str	ip, [sp]
     b08:	movw	ip, #0
     b0c:	str	ip, [sp, #4]
     b10:	bl	0 <flatcc_json_printer_int32_field>
     b14:	ldr	r0, [fp, #-4]
     b18:	ldr	r1, [fp, #-8]
     b1c:	movw	r2, #21
     b20:	movw	r3, #0
     b24:	movt	r3, #0
     b28:	movw	ip, #17
     b2c:	str	ip, [sp]
     b30:	movw	ip, #0
     b34:	str	ip, [sp, #4]
     b38:	bl	0 <flatcc_json_printer_uint32_field>
     b3c:	ldr	r0, [fp, #-4]
     b40:	ldr	r1, [fp, #-8]
     b44:	mov	r2, sp
     b48:	mov	r3, #0
     b4c:	str	r3, [r2, #12]
     b50:	str	r3, [r2, #8]
     b54:	mov	r3, #17
     b58:	str	r3, [r2]
     b5c:	movw	r3, #0
     b60:	movt	r3, #0
     b64:	mov	r2, #22
     b68:	bl	0 <flatcc_json_printer_int64_field>
     b6c:	ldr	r0, [fp, #-4]
     b70:	ldr	r1, [fp, #-8]
     b74:	mov	r2, sp
     b78:	mov	r3, #0
     b7c:	str	r3, [r2, #12]
     b80:	str	r3, [r2, #8]
     b84:	mov	r3, #17
     b88:	str	r3, [r2]
     b8c:	movw	r3, #0
     b90:	movt	r3, #0
     b94:	mov	r2, #23
     b98:	bl	0 <flatcc_json_printer_uint64_field>
     b9c:	ldr	r0, [fp, #-4]
     ba0:	ldr	r1, [fp, #-8]
     ba4:	movw	r2, #24
     ba8:	movw	r3, #0
     bac:	movt	r3, #0
     bb0:	movw	ip, #16
     bb4:	str	ip, [sp]
     bb8:	bl	0 <flatcc_json_printer_bool_vector_field>
     bbc:	vldr	s0, [pc, #432]	; d74 <MyGame_Example_Monster_print_json_table+0x5c0>
     bc0:	ldr	r0, [fp, #-4]
     bc4:	ldr	r1, [fp, #-8]
     bc8:	movw	r2, #25
     bcc:	movw	r3, #0
     bd0:	movt	r3, #0
     bd4:	movw	ip, #5
     bd8:	str	ip, [sp]
     bdc:	bl	0 <flatcc_json_printer_float_field>
     be0:	ldr	r0, [fp, #-4]
     be4:	ldr	r1, [fp, #-8]
     be8:	movw	r2, #26
     bec:	movw	r3, #0
     bf0:	movt	r3, #0
     bf4:	movw	ip, #6
     bf8:	str	ip, [sp]
     bfc:	vmov.f32	s0, #8	; 0x40400000  3.0
     c00:	bl	0 <flatcc_json_printer_float_field>
     c04:	vldr	s0, [pc, #356]	; d70 <MyGame_Example_Monster_print_json_table+0x5bc>
     c08:	ldr	r0, [fp, #-4]
     c0c:	ldr	r1, [fp, #-8]
     c10:	movw	r2, #27
     c14:	movw	r3, #0
     c18:	movt	r3, #0
     c1c:	movw	ip, #6
     c20:	str	ip, [sp]
     c24:	bl	0 <flatcc_json_printer_float_field>
     c28:	ldr	r0, [fp, #-4]
     c2c:	ldr	r1, [fp, #-8]
     c30:	movw	r2, #28
     c34:	movw	r3, #0
     c38:	movt	r3, #0
     c3c:	movw	ip, #18
     c40:	str	ip, [sp]
     c44:	bl	0 <flatcc_json_printer_string_vector_field>
     c48:	ldr	r0, [fp, #-4]
     c4c:	ldr	r1, [fp, #-8]
     c50:	movw	r2, #29
     c54:	movw	r3, #0
     c58:	movt	r3, #0
     c5c:	movw	ip, #23
     c60:	str	ip, [sp]
     c64:	movw	ip, #8
     c68:	str	ip, [sp, #4]
     c6c:	movw	ip, #0
     c70:	movt	ip, #0
     c74:	str	ip, [sp, #8]
     c78:	bl	0 <flatcc_json_printer_struct_vector_field>
     c7c:	ldr	r0, [fp, #-4]
     c80:	ldr	r1, [fp, #-8]
     c84:	movw	r2, #30
     c88:	movw	r3, #0
     c8c:	movt	r3, #0
     c90:	movw	ip, #4
     c94:	str	ip, [sp]
     c98:	bl	0 <flatcc_json_printer_uint8_vector_field>
     c9c:	ldr	r0, [fp, #-4]
     ca0:	ldr	r1, [fp, #-8]
     ca4:	movw	r2, #31
     ca8:	movw	r3, #0
     cac:	movt	r3, #0
     cb0:	movw	ip, #5
     cb4:	str	ip, [sp]
     cb8:	movw	ip, #4
     cbc:	str	ip, [sp, #4]
     cc0:	movw	ip, #0
     cc4:	movt	ip, #0
     cc8:	str	ip, [sp, #8]
     ccc:	bl	0 <flatcc_json_printer_struct_vector_field>
     cd0:	ldr	r0, [fp, #-4]
     cd4:	ldr	r1, [fp, #-8]
     cd8:	movw	r2, #32
     cdc:	movw	r3, #0
     ce0:	movt	r3, #0
     ce4:	movw	ip, #15
     ce8:	str	ip, [sp]
     cec:	bl	0 <flatcc_json_printer_int64_vector_field>
     cf0:	ldr	r0, [fp, #-4]
     cf4:	ldr	r1, [fp, #-8]
     cf8:	movw	r2, #33	; 0x21
     cfc:	movw	r3, #0
     d00:	movt	r3, #0
     d04:	movw	ip, #17
     d08:	str	ip, [sp]
     d0c:	bl	0 <flatcc_json_printer_double_vector_field>
     d10:	ldr	r0, [fp, #-4]
     d14:	ldr	r1, [fp, #-8]
     d18:	movw	r2, #34	; 0x22
     d1c:	movw	r3, #0
     d20:	movt	r3, #0
     d24:	movw	ip, #21
     d28:	str	ip, [sp]
     d2c:	movw	ip, #0
     d30:	movt	ip, #0
     d34:	str	ip, [sp, #4]
     d38:	bl	0 <flatcc_json_printer_table_field>
     d3c:	ldr	r0, [fp, #-4]
     d40:	ldr	r1, [fp, #-8]
     d44:	movw	r2, #35	; 0x23
     d48:	movw	r3, #0
     d4c:	movt	r3, #0
     d50:	movw	ip, #10
     d54:	str	ip, [sp]
     d58:	movw	ip, #0
     d5c:	movt	ip, #0
     d60:	str	ip, [sp, #4]
     d64:	bl	0 <flatcc_json_printer_table_field>
     d68:	mov	sp, fp
     d6c:	pop	{fp, pc}
     d70:	.word	0x00000000
     d74:	.word	0x489965e0

00000d78 <MyGame_Example_Vec3_print_json_struct>:
     d78:	push	{fp, lr}
     d7c:	mov	fp, sp
     d80:	sub	sp, sp, #32
     d84:	str	r0, [fp, #-4]
     d88:	str	r1, [fp, #-8]
     d8c:	ldr	r0, [fp, #-4]
     d90:	ldr	r2, [fp, #-8]
     d94:	movw	r1, #0
     d98:	str	r1, [fp, #-12]
     d9c:	ldr	r3, [fp, #-12]
     da0:	movw	ip, #0
     da4:	movt	ip, #0
     da8:	str	ip, [sp]
     dac:	movw	ip, #1
     db0:	str	ip, [sp, #4]
     db4:	bl	0 <flatcc_json_printer_float_struct_field>
     db8:	ldr	r0, [fp, #-4]
     dbc:	ldr	r2, [fp, #-8]
     dc0:	movw	r1, #1
     dc4:	str	r1, [sp, #16]
     dc8:	movw	r3, #4
     dcc:	movw	ip, #0
     dd0:	movt	ip, #0
     dd4:	str	ip, [sp]
     dd8:	ldr	ip, [sp, #16]
     ddc:	str	ip, [sp, #4]
     de0:	bl	0 <flatcc_json_printer_float_struct_field>
     de4:	ldr	r0, [fp, #-4]
     de8:	ldr	r2, [fp, #-8]
     dec:	movw	r1, #2
     df0:	movw	r3, #8
     df4:	movw	ip, #0
     df8:	movt	ip, #0
     dfc:	str	ip, [sp]
     e00:	movw	ip, #1
     e04:	str	ip, [sp, #4]
     e08:	bl	0 <flatcc_json_printer_float_struct_field>
     e0c:	ldr	r0, [fp, #-4]
     e10:	ldr	r2, [fp, #-8]
     e14:	movw	r1, #3
     e18:	movw	r3, #16
     e1c:	movw	ip, #0
     e20:	movt	ip, #0
     e24:	str	ip, [sp]
     e28:	movw	ip, #5
     e2c:	str	ip, [sp, #4]
     e30:	bl	0 <flatcc_json_printer_double_struct_field>
     e34:	ldr	r0, [fp, #-4]
     e38:	ldr	r2, [fp, #-8]
     e3c:	movw	r1, #4
     e40:	movw	r3, #24
     e44:	movw	ip, #0
     e48:	movt	ip, #0
     e4c:	str	ip, [sp]
     e50:	movw	ip, #5
     e54:	str	ip, [sp, #4]
     e58:	movw	ip, #0
     e5c:	movt	ip, #0
     e60:	str	ip, [sp, #8]
     e64:	bl	0 <flatcc_json_printer_int8_enum_struct_field>
     e68:	ldr	r0, [fp, #-4]
     e6c:	ldr	r2, [fp, #-8]
     e70:	movw	r1, #5
     e74:	str	r1, [sp, #12]
     e78:	movw	r3, #26
     e7c:	movw	ip, #0
     e80:	movt	ip, #0
     e84:	str	ip, [sp]
     e88:	ldr	ip, [sp, #12]
     e8c:	str	ip, [sp, #4]
     e90:	movw	lr, #0
     e94:	movt	lr, #0
     e98:	str	lr, [sp, #8]
     e9c:	bl	0 <flatcc_json_printer_embedded_struct_field>
     ea0:	mov	sp, fp
     ea4:	pop	{fp, pc}

00000ea8 <MyGame_Example_Color_print_json_enum>:
     ea8:	push	{fp, lr}
     eac:	mov	fp, sp
     eb0:	sub	sp, sp, #16
     eb4:	str	r0, [fp, #-4]
     eb8:	strb	r1, [fp, #-5]
     ebc:	ldrb	r0, [fp, #-5]
     ec0:	strb	r0, [fp, #-6]
     ec4:	ldrb	r0, [fp, #-6]
     ec8:	ldrb	r1, [fp, #-6]
     ecc:	sub	r1, r1, #1
     ed0:	and	r0, r0, r1
     ed4:	movw	r1, #0
     ed8:	cmp	r1, r0
     edc:	movw	r0, #0
     ee0:	movne	r0, #1
     ee4:	and	r0, r0, #1
     ee8:	str	r0, [sp, #4]
     eec:	str	r1, [sp]
     ef0:	ldrb	r0, [fp, #-6]
     ef4:	and	r0, r0, #244	; 0xf4
     ef8:	cmp	r0, #0
     efc:	bne	f0c <MyGame_Example_Color_print_json_enum+0x64>
     f00:	ldrb	r0, [fp, #-6]
     f04:	cmp	r0, #0
     f08:	bne	f1c <MyGame_Example_Color_print_json_enum+0x74>
     f0c:	ldr	r0, [fp, #-4]
     f10:	ldrsb	r1, [fp, #-5]
     f14:	bl	0 <flatcc_json_printer_int8>
     f18:	b	fc4 <MyGame_Example_Color_print_json_enum+0x11c>
     f1c:	ldr	r0, [fp, #-4]
     f20:	ldr	r1, [sp, #4]
     f24:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     f28:	ldrb	r0, [fp, #-6]
     f2c:	and	r0, r0, #1
     f30:	cmp	r0, #0
     f34:	beq	f58 <MyGame_Example_Color_print_json_enum+0xb0>
     f38:	ldr	r0, [fp, #-4]
     f3c:	ldr	r1, [sp]
     f40:	add	r2, r1, #1
     f44:	str	r2, [sp]
     f48:	movw	r2, #0
     f4c:	movt	r2, #0
     f50:	movw	r3, #3
     f54:	bl	0 <flatcc_json_printer_enum_flag>
     f58:	ldrb	r0, [fp, #-6]
     f5c:	and	r0, r0, #2
     f60:	cmp	r0, #0
     f64:	beq	f88 <MyGame_Example_Color_print_json_enum+0xe0>
     f68:	ldr	r0, [fp, #-4]
     f6c:	ldr	r1, [sp]
     f70:	add	r2, r1, #1
     f74:	str	r2, [sp]
     f78:	movw	r2, #0
     f7c:	movt	r2, #0
     f80:	movw	r3, #5
     f84:	bl	0 <flatcc_json_printer_enum_flag>
     f88:	ldrb	r0, [fp, #-6]
     f8c:	and	r0, r0, #8
     f90:	cmp	r0, #0
     f94:	beq	fb8 <MyGame_Example_Color_print_json_enum+0x110>
     f98:	ldr	r0, [fp, #-4]
     f9c:	ldr	r1, [sp]
     fa0:	add	r2, r1, #1
     fa4:	str	r2, [sp]
     fa8:	movw	r2, #0
     fac:	movt	r2, #0
     fb0:	movw	r3, #4
     fb4:	bl	0 <flatcc_json_printer_enum_flag>
     fb8:	ldr	r0, [fp, #-4]
     fbc:	ldr	r1, [sp, #4]
     fc0:	bl	0 <flatcc_json_printer_delimit_enum_flags>
     fc4:	mov	sp, fp
     fc8:	pop	{fp, pc}

00000fcc <MyGame_Example_Any_print_json_union_type>:
     fcc:	push	{fp, lr}
     fd0:	mov	fp, sp
     fd4:	sub	sp, sp, #16
     fd8:	str	r0, [fp, #-4]
     fdc:	strb	r1, [fp, #-5]
     fe0:	ldrb	r0, [fp, #-5]
     fe4:	sub	r0, r0, #1
     fe8:	cmp	r0, #3
     fec:	str	r0, [sp, #4]
     ff0:	bhi	1074 <MyGame_Example_Any_print_json_union_type+0xa8>
     ff4:	add	r0, pc, #8
     ff8:	ldr	r1, [sp, #4]
     ffc:	ldr	r0, [r0, r1, lsl #2]
    1000:	mov	pc, r0
    1004:	.word	0x00001014
    1008:	.word	0x0000102c
    100c:	.word	0x00001044
    1010:	.word	0x0000105c
    1014:	ldr	r0, [fp, #-4]
    1018:	movw	r1, #0
    101c:	movt	r1, #0
    1020:	movw	r2, #7
    1024:	bl	0 <flatcc_json_printer_enum>
    1028:	b	1088 <MyGame_Example_Any_print_json_union_type+0xbc>
    102c:	ldr	r0, [fp, #-4]
    1030:	movw	r1, #0
    1034:	movt	r1, #0
    1038:	movw	r2, #23
    103c:	bl	0 <flatcc_json_printer_enum>
    1040:	b	1088 <MyGame_Example_Any_print_json_union_type+0xbc>
    1044:	ldr	r0, [fp, #-4]
    1048:	movw	r1, #0
    104c:	movt	r1, #0
    1050:	movw	r2, #8
    1054:	bl	0 <flatcc_json_printer_enum>
    1058:	b	1088 <MyGame_Example_Any_print_json_union_type+0xbc>
    105c:	ldr	r0, [fp, #-4]
    1060:	movw	r1, #0
    1064:	movt	r1, #0
    1068:	movw	r2, #3
    106c:	bl	0 <flatcc_json_printer_enum>
    1070:	b	1088 <MyGame_Example_Any_print_json_union_type+0xbc>
    1074:	ldr	r0, [fp, #-4]
    1078:	movw	r1, #0
    107c:	movt	r1, #0
    1080:	movw	r2, #4
    1084:	bl	0 <flatcc_json_printer_enum>
    1088:	mov	sp, fp
    108c:	pop	{fp, pc}

00001090 <MyGame_Example_Any_print_json_union>:
    1090:	push	{fp, lr}
    1094:	mov	fp, sp
    1098:	sub	sp, sp, #16
    109c:	str	r0, [fp, #-4]
    10a0:	str	r1, [sp, #8]
    10a4:	ldr	r0, [sp, #8]
    10a8:	ldrb	r0, [r0, #8]
    10ac:	sub	r0, r0, #1
    10b0:	cmp	r0, #3
    10b4:	str	r0, [sp, #4]
    10b8:	bhi	113c <MyGame_Example_Any_print_json_union+0xac>
    10bc:	add	r0, pc, #8
    10c0:	ldr	r1, [sp, #4]
    10c4:	ldr	r0, [r0, r1, lsl #2]
    10c8:	mov	pc, r0
    10cc:	.word	0x000010dc
    10d0:	.word	0x000010f4
    10d4:	.word	0x0000110c
    10d8:	.word	0x00001124
    10dc:	ldr	r0, [fp, #-4]
    10e0:	ldr	r1, [sp, #8]
    10e4:	movw	r2, #0
    10e8:	movt	r2, #0
    10ec:	bl	0 <flatcc_json_printer_union_table>
    10f0:	b	1140 <MyGame_Example_Any_print_json_union+0xb0>
    10f4:	ldr	r0, [fp, #-4]
    10f8:	ldr	r1, [sp, #8]
    10fc:	movw	r2, #0
    1100:	movt	r2, #0
    1104:	bl	0 <flatcc_json_printer_union_table>
    1108:	b	1140 <MyGame_Example_Any_print_json_union+0xb0>
    110c:	ldr	r0, [fp, #-4]
    1110:	ldr	r1, [sp, #8]
    1114:	movw	r2, #0
    1118:	movt	r2, #0
    111c:	bl	0 <flatcc_json_printer_union_table>
    1120:	b	1140 <MyGame_Example_Any_print_json_union+0xb0>
    1124:	ldr	r0, [fp, #-4]
    1128:	ldr	r1, [sp, #8]
    112c:	movw	r2, #0
    1130:	movt	r2, #0
    1134:	bl	0 <flatcc_json_printer_union_table>
    1138:	b	1140 <MyGame_Example_Any_print_json_union+0xb0>
    113c:	b	1140 <MyGame_Example_Any_print_json_union+0xb0>
    1140:	mov	sp, fp
    1144:	pop	{fp, pc}

00001148 <MyGame_Example_Test_print_json_struct>:
    1148:	push	{fp, lr}
    114c:	mov	fp, sp
    1150:	sub	sp, sp, #24
    1154:	str	r0, [fp, #-4]
    1158:	str	r1, [fp, #-8]
    115c:	ldr	r0, [fp, #-4]
    1160:	ldr	r2, [fp, #-8]
    1164:	movw	r1, #0
    1168:	str	r1, [sp, #12]
    116c:	ldr	r3, [sp, #12]
    1170:	movw	ip, #0
    1174:	movt	ip, #0
    1178:	str	ip, [sp]
    117c:	movw	ip, #1
    1180:	str	ip, [sp, #4]
    1184:	bl	0 <flatcc_json_printer_int16_struct_field>
    1188:	ldr	r0, [fp, #-4]
    118c:	ldr	r2, [fp, #-8]
    1190:	movw	r1, #1
    1194:	str	r1, [sp, #8]
    1198:	movw	r3, #2
    119c:	movw	ip, #0
    11a0:	movt	ip, #0
    11a4:	str	ip, [sp]
    11a8:	ldr	ip, [sp, #8]
    11ac:	str	ip, [sp, #4]
    11b0:	bl	0 <flatcc_json_printer_int8_struct_field>
    11b4:	mov	sp, fp
    11b8:	pop	{fp, pc}

000011bc <MyGame_Example_Stat_print_json_table>:
    11bc:	push	{fp, lr}
    11c0:	mov	fp, sp
    11c4:	sub	sp, sp, #24
    11c8:	str	r0, [fp, #-4]
    11cc:	str	r1, [fp, #-8]
    11d0:	ldr	r0, [fp, #-4]
    11d4:	ldr	r1, [fp, #-8]
    11d8:	movw	r2, #0
    11dc:	movw	r3, #0
    11e0:	movt	r3, #0
    11e4:	movw	ip, #2
    11e8:	str	ip, [sp]
    11ec:	bl	0 <flatcc_json_printer_string_field>
    11f0:	ldr	r0, [fp, #-4]
    11f4:	ldr	r1, [fp, #-8]
    11f8:	mov	r2, sp
    11fc:	mov	r3, #0
    1200:	str	r3, [r2, #12]
    1204:	str	r3, [r2, #8]
    1208:	mov	r3, #3
    120c:	str	r3, [r2]
    1210:	movw	r3, #0
    1214:	movt	r3, #0
    1218:	mov	r2, #1
    121c:	bl	0 <flatcc_json_printer_int64_field>
    1220:	ldr	r0, [fp, #-4]
    1224:	ldr	r1, [fp, #-8]
    1228:	movw	r2, #2
    122c:	movw	r3, #0
    1230:	movt	r3, #0
    1234:	movw	ip, #5
    1238:	str	ip, [sp]
    123c:	movw	ip, #0
    1240:	uxth	ip, ip
    1244:	str	ip, [sp, #4]
    1248:	bl	0 <flatcc_json_printer_uint16_field>
    124c:	mov	sp, fp
    1250:	pop	{fp, pc}

00001254 <MyGame_Example_Ability_print_json_struct>:
    1254:	push	{fp, lr}
    1258:	mov	fp, sp
    125c:	sub	sp, sp, #24
    1260:	str	r0, [fp, #-4]
    1264:	str	r1, [fp, #-8]
    1268:	ldr	r0, [fp, #-4]
    126c:	ldr	r2, [fp, #-8]
    1270:	movw	r1, #0
    1274:	str	r1, [sp, #12]
    1278:	ldr	r3, [sp, #12]
    127c:	movw	ip, #0
    1280:	movt	ip, #0
    1284:	str	ip, [sp]
    1288:	movw	ip, #2
    128c:	str	ip, [sp, #4]
    1290:	bl	0 <flatcc_json_printer_uint32_struct_field>
    1294:	ldr	r0, [fp, #-4]
    1298:	ldr	r2, [fp, #-8]
    129c:	movw	r1, #1
    12a0:	movw	r3, #4
    12a4:	movw	ip, #0
    12a8:	movt	ip, #0
    12ac:	str	ip, [sp]
    12b0:	movw	ip, #8
    12b4:	str	ip, [sp, #4]
    12b8:	bl	0 <flatcc_json_printer_uint32_struct_field>
    12bc:	mov	sp, fp
    12c0:	pop	{fp, pc}

000012c4 <MyGame_InParentNamespace_print_json_table>:
    12c4:	sub	sp, sp, #8
    12c8:	str	r0, [sp, #4]
    12cc:	str	r1, [sp]
    12d0:	add	sp, sp, #8
    12d4:	bx	lr

000012d8 <MyGame_Example_TestBase64_print_json_table>:
    12d8:	push	{fp, lr}
    12dc:	mov	fp, sp
    12e0:	sub	sp, sp, #24
    12e4:	str	r0, [fp, #-4]
    12e8:	str	r1, [fp, #-8]
    12ec:	ldr	r0, [fp, #-4]
    12f0:	ldr	r1, [fp, #-8]
    12f4:	movw	r2, #0
    12f8:	str	r2, [sp, #12]
    12fc:	movw	r3, #0
    1300:	movt	r3, #0
    1304:	movw	ip, #4
    1308:	str	ip, [sp]
    130c:	ldr	ip, [sp, #12]
    1310:	str	ip, [sp, #4]
    1314:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    1318:	ldr	r0, [fp, #-4]
    131c:	ldr	r1, [fp, #-8]
    1320:	movw	r2, #1
    1324:	str	r2, [sp, #8]
    1328:	movw	r3, #0
    132c:	movt	r3, #0
    1330:	movw	ip, #7
    1334:	str	ip, [sp]
    1338:	ldr	ip, [sp, #8]
    133c:	str	ip, [sp, #4]
    1340:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    1344:	ldr	r0, [fp, #-4]
    1348:	ldr	r1, [fp, #-8]
    134c:	movw	r2, #2
    1350:	movw	r3, #0
    1354:	movt	r3, #0
    1358:	movw	ip, #6
    135c:	str	ip, [sp]
    1360:	movw	ip, #0
    1364:	str	ip, [sp, #4]
    1368:	bl	0 <flatcc_json_printer_uint8_vector_base64_field>
    136c:	mov	sp, fp
    1370:	pop	{fp, pc}

00001374 <MyGame_Example_TestSimpleTableWithEnum_print_json_table>:
    1374:	push	{fp, lr}
    1378:	mov	fp, sp
    137c:	sub	sp, sp, #32
    1380:	str	r0, [fp, #-4]
    1384:	str	r1, [fp, #-8]
    1388:	ldr	r0, [fp, #-4]
    138c:	ldr	r1, [fp, #-8]
    1390:	movw	r2, #0
    1394:	movw	r3, #0
    1398:	movt	r3, #0
    139c:	movw	ip, #5
    13a0:	str	ip, [sp]
    13a4:	movw	ip, #2
    13a8:	sxtb	ip, ip
    13ac:	str	ip, [sp, #4]
    13b0:	movw	ip, #0
    13b4:	movt	ip, #0
    13b8:	str	ip, [sp, #8]
    13bc:	bl	0 <flatcc_json_printer_int8_enum_field>
    13c0:	ldr	r0, [fp, #-4]
    13c4:	ldr	r1, [fp, #-8]
    13c8:	movw	r2, #1
    13cc:	movw	r3, #0
    13d0:	movt	r3, #0
    13d4:	movw	ip, #6
    13d8:	str	ip, [sp]
    13dc:	movw	ip, #2
    13e0:	sxtb	ip, ip
    13e4:	str	ip, [sp, #4]
    13e8:	movw	ip, #0
    13ec:	movt	ip, #0
    13f0:	str	ip, [sp, #8]
    13f4:	bl	0 <flatcc_json_printer_int8_enum_field>
    13f8:	ldr	r0, [fp, #-4]
    13fc:	ldr	r1, [fp, #-8]
    1400:	movw	r2, #2
    1404:	str	r2, [fp, #-12]
    1408:	movw	r3, #0
    140c:	movt	r3, #0
    1410:	ldr	ip, [fp, #-12]
    1414:	str	ip, [sp]
    1418:	movw	lr, #2
    141c:	and	lr, lr, #255	; 0xff
    1420:	str	lr, [sp, #4]
    1424:	bl	0 <flatcc_json_printer_uint8_field>
    1428:	ldr	r0, [fp, #-4]
    142c:	ldr	r1, [fp, #-8]
    1430:	movw	r2, #3
    1434:	str	r2, [sp, #16]
    1438:	movw	r3, #0
    143c:	movt	r3, #0
    1440:	ldr	ip, [sp, #16]
    1444:	str	ip, [sp]
    1448:	movw	lr, #2
    144c:	and	lr, lr, #255	; 0xff
    1450:	str	lr, [sp, #4]
    1454:	bl	0 <flatcc_json_printer_uint8_field>
    1458:	mov	sp, fp
    145c:	pop	{fp, pc}

00001460 <MyGame_Example2_Monster_print_json_table>:
    1460:	sub	sp, sp, #8
    1464:	str	r0, [sp, #4]
    1468:	str	r1, [sp]
    146c:	add	sp, sp, #8
    1470:	bx	lr

00001474 <MyGame_Example_Alt_print_json_table>:
    1474:	push	{fp, lr}
    1478:	mov	fp, sp
    147c:	sub	sp, sp, #24
    1480:	str	r0, [fp, #-4]
    1484:	str	r1, [fp, #-8]
    1488:	ldr	r0, [fp, #-4]
    148c:	ldr	r1, [fp, #-8]
    1490:	movw	r2, #0
    1494:	movw	r3, #0
    1498:	movt	r3, #0
    149c:	movw	ip, #6
    14a0:	str	ip, [sp]
    14a4:	movw	ip, #0
    14a8:	movt	ip, #0
    14ac:	str	ip, [sp, #4]
    14b0:	bl	0 <flatcc_json_printer_table_field>
    14b4:	ldr	r0, [fp, #-4]
    14b8:	ldr	r1, [fp, #-8]
    14bc:	movw	r2, #1
    14c0:	movw	r3, #0
    14c4:	movt	r3, #0
    14c8:	movw	ip, #5
    14cc:	str	ip, [sp]
    14d0:	movw	ip, #0
    14d4:	movt	ip, #0
    14d8:	str	ip, [sp, #4]
    14dc:	bl	0 <flatcc_json_printer_table_field>
    14e0:	ldr	r0, [fp, #-4]
    14e4:	ldr	r1, [fp, #-8]
    14e8:	movw	r2, #3
    14ec:	movw	r3, #0
    14f0:	movt	r3, #0
    14f4:	movw	ip, #7
    14f8:	str	ip, [sp]
    14fc:	movw	ip, #0
    1500:	movt	ip, #0
    1504:	str	ip, [sp, #4]
    1508:	movw	ip, #0
    150c:	movt	ip, #0
    1510:	str	ip, [sp, #8]
    1514:	bl	0 <flatcc_json_printer_union_vector_field>
    1518:	mov	sp, fp
    151c:	pop	{fp, pc}

00001520 <MyGame_Example_TestJSONPrefix_print_json_table>:
    1520:	push	{fp, lr}
    1524:	mov	fp, sp
    1528:	sub	sp, sp, #16
    152c:	str	r0, [fp, #-4]
    1530:	str	r1, [sp, #8]
    1534:	ldr	r0, [fp, #-4]
    1538:	ldr	r1, [sp, #8]
    153c:	movw	r2, #0
    1540:	movw	r3, #0
    1544:	movt	r3, #0
    1548:	movw	ip, #21
    154c:	str	ip, [sp]
    1550:	movw	ip, #0
    1554:	movt	ip, #0
    1558:	str	ip, [sp, #4]
    155c:	bl	0 <flatcc_json_printer_table_field>
    1560:	ldr	r0, [fp, #-4]
    1564:	ldr	r1, [sp, #8]
    1568:	movw	r2, #1
    156c:	movw	r3, #0
    1570:	movt	r3, #0
    1574:	movw	ip, #22
    1578:	str	ip, [sp]
    157c:	movw	ip, #0
    1580:	movt	ip, #0
    1584:	str	ip, [sp, #4]
    1588:	bl	0 <flatcc_json_printer_table_field>
    158c:	ldr	r0, [fp, #-4]
    1590:	ldr	r1, [sp, #8]
    1594:	movw	r2, #2
    1598:	movw	r3, #0
    159c:	movt	r3, #0
    15a0:	movw	ip, #22
    15a4:	str	ip, [sp]
    15a8:	movw	ip, #0
    15ac:	movt	ip, #0
    15b0:	str	ip, [sp, #4]
    15b4:	bl	0 <flatcc_json_printer_table_field>
    15b8:	mov	sp, fp
    15bc:	pop	{fp, pc}

000015c0 <Fantasy_Movie_print_json_table>:
    15c0:	push	{fp, lr}
    15c4:	mov	fp, sp
    15c8:	sub	sp, sp, #24
    15cc:	str	r0, [fp, #-4]
    15d0:	str	r1, [fp, #-8]
    15d4:	ldr	r0, [fp, #-4]
    15d8:	ldr	r1, [fp, #-8]
    15dc:	movw	r2, #1
    15e0:	movw	r3, #0
    15e4:	movt	r3, #0
    15e8:	movw	ip, #14
    15ec:	str	ip, [sp]
    15f0:	movw	ip, #0
    15f4:	movt	ip, #0
    15f8:	str	ip, [sp, #4]
    15fc:	movw	ip, #0
    1600:	movt	ip, #0
    1604:	str	ip, [sp, #8]
    1608:	bl	0 <flatcc_json_printer_union_field>
    160c:	ldr	r0, [fp, #-4]
    1610:	ldr	r1, [fp, #-8]
    1614:	movw	r2, #3
    1618:	movw	r3, #0
    161c:	movt	r3, #0
    1620:	movw	ip, #10
    1624:	str	ip, [sp]
    1628:	movw	ip, #0
    162c:	movt	ip, #0
    1630:	str	ip, [sp, #4]
    1634:	movw	ip, #0
    1638:	movt	ip, #0
    163c:	str	ip, [sp, #8]
    1640:	bl	0 <flatcc_json_printer_union_field>
    1644:	ldr	r0, [fp, #-4]
    1648:	ldr	r1, [fp, #-8]
    164c:	movw	r2, #5
    1650:	movw	r3, #0
    1654:	movt	r3, #0
    1658:	movw	ip, #9
    165c:	str	ip, [sp]
    1660:	movw	ip, #0
    1664:	movt	ip, #0
    1668:	str	ip, [sp, #4]
    166c:	movw	ip, #0
    1670:	movt	ip, #0
    1674:	str	ip, [sp, #8]
    1678:	bl	0 <flatcc_json_printer_union_field>
    167c:	ldr	r0, [fp, #-4]
    1680:	ldr	r1, [fp, #-8]
    1684:	movw	r2, #7
    1688:	movw	r3, #0
    168c:	movt	r3, #0
    1690:	movw	ip, #5
    1694:	str	ip, [sp]
    1698:	movw	ip, #0
    169c:	movt	ip, #0
    16a0:	str	ip, [sp, #4]
    16a4:	movw	ip, #0
    16a8:	movt	ip, #0
    16ac:	str	ip, [sp, #8]
    16b0:	bl	0 <flatcc_json_printer_union_field>
    16b4:	ldr	r0, [fp, #-4]
    16b8:	ldr	r1, [fp, #-8]
    16bc:	movw	r2, #9
    16c0:	movw	r3, #0
    16c4:	movt	r3, #0
    16c8:	movw	ip, #10
    16cc:	str	ip, [sp]
    16d0:	movw	ip, #0
    16d4:	movt	ip, #0
    16d8:	str	ip, [sp, #4]
    16dc:	movw	ip, #0
    16e0:	movt	ip, #0
    16e4:	str	ip, [sp, #8]
    16e8:	bl	0 <flatcc_json_printer_union_vector_field>
    16ec:	mov	sp, fp
    16f0:	pop	{fp, pc}

000016f4 <MyGame_Example_TestJSONPrefixParsing_print_json_table>:
    16f4:	push	{fp, lr}
    16f8:	mov	fp, sp
    16fc:	sub	sp, sp, #32
    1700:	str	r0, [fp, #-4]
    1704:	str	r1, [fp, #-8]
    1708:	ldr	r0, [fp, #-4]
    170c:	ldr	r1, [fp, #-8]
    1710:	movw	r2, #0
    1714:	movw	r3, #0
    1718:	movt	r3, #0
    171c:	movw	ip, #4
    1720:	str	ip, [sp]
    1724:	bl	0 <flatcc_json_printer_string_field>
    1728:	ldr	r0, [fp, #-4]
    172c:	ldr	r1, [fp, #-8]
    1730:	movw	r2, #1
    1734:	movw	r3, #0
    1738:	movt	r3, #0
    173c:	movw	ip, #9
    1740:	str	ip, [sp]
    1744:	movw	ip, #0
    1748:	str	ip, [sp, #4]
    174c:	bl	0 <flatcc_json_printer_uint32_field>
    1750:	ldr	r0, [fp, #-4]
    1754:	ldr	r1, [fp, #-8]
    1758:	movw	r2, #2
    175c:	movw	r3, #0
    1760:	movt	r3, #0
    1764:	movw	ip, #4
    1768:	str	ip, [sp]
    176c:	bl	0 <flatcc_json_printer_string_field>
    1770:	ldr	r0, [fp, #-4]
    1774:	ldr	r1, [fp, #-8]
    1778:	mov	r2, sp
    177c:	mov	r3, #0
    1780:	str	r3, [r2, #12]
    1784:	str	r3, [r2, #8]
    1788:	mov	r3, #8
    178c:	str	r3, [r2]
    1790:	movw	r3, #0
    1794:	movt	r3, #0
    1798:	mov	r2, #3
    179c:	bl	0 <flatcc_json_printer_int64_field>
    17a0:	ldr	r0, [fp, #-4]
    17a4:	ldr	r1, [fp, #-8]
    17a8:	movw	r2, #4
    17ac:	str	r2, [fp, #-12]
    17b0:	movw	r3, #0
    17b4:	movt	r3, #0
    17b8:	ldr	ip, [fp, #-12]
    17bc:	str	ip, [sp]
    17c0:	bl	0 <flatcc_json_printer_string_field>
    17c4:	ldr	r0, [fp, #-4]
    17c8:	ldr	r1, [fp, #-8]
    17cc:	mov	r2, sp
    17d0:	mov	r3, #0
    17d4:	str	r3, [r2, #12]
    17d8:	str	r3, [r2, #8]
    17dc:	mov	r3, #8
    17e0:	str	r3, [r2]
    17e4:	movw	r3, #0
    17e8:	movt	r3, #0
    17ec:	mov	r2, #5
    17f0:	bl	0 <flatcc_json_printer_int64_field>
    17f4:	ldr	r0, [fp, #-4]
    17f8:	ldr	r1, [fp, #-8]
    17fc:	movw	r2, #6
    1800:	movw	r3, #0
    1804:	movt	r3, #0
    1808:	movw	ip, #9
    180c:	str	ip, [sp]
    1810:	movw	ip, #0
    1814:	str	ip, [sp, #4]
    1818:	bl	0 <flatcc_json_printer_uint32_field>
    181c:	ldr	r0, [fp, #-4]
    1820:	ldr	r1, [fp, #-8]
    1824:	mov	r2, sp
    1828:	mov	r3, #0
    182c:	str	r3, [r2, #12]
    1830:	str	r3, [r2, #8]
    1834:	mov	r3, #8
    1838:	str	r3, [r2]
    183c:	movw	r3, #0
    1840:	movt	r3, #0
    1844:	mov	r2, #7
    1848:	bl	0 <flatcc_json_printer_int64_field>
    184c:	ldr	r0, [fp, #-4]
    1850:	ldr	r1, [fp, #-8]
    1854:	movw	r2, #8
    1858:	movw	r3, #0
    185c:	movt	r3, #0
    1860:	movw	ip, #9
    1864:	str	ip, [sp]
    1868:	movw	ip, #0
    186c:	str	ip, [sp, #4]
    1870:	bl	0 <flatcc_json_printer_uint32_field>
    1874:	mov	sp, fp
    1878:	pop	{fp, pc}

0000187c <MyGame_Example_TestJSONPrefixParsing2_print_json_table>:
    187c:	push	{fp, lr}
    1880:	mov	fp, sp
    1884:	sub	sp, sp, #32
    1888:	str	r0, [fp, #-4]
    188c:	str	r1, [fp, #-8]
    1890:	ldr	r0, [fp, #-4]
    1894:	ldr	r1, [fp, #-8]
    1898:	mov	r2, sp
    189c:	mov	r3, #0
    18a0:	str	r3, [r2, #12]
    18a4:	str	r3, [r2, #8]
    18a8:	mov	ip, #15
    18ac:	str	ip, [r2]
    18b0:	movw	r2, #0
    18b4:	movt	r2, #0
    18b8:	str	r2, [fp, #-12]
    18bc:	mov	r2, r3
    18c0:	ldr	r3, [fp, #-12]
    18c4:	bl	0 <flatcc_json_printer_int64_field>
    18c8:	ldr	r0, [fp, #-4]
    18cc:	ldr	r1, [fp, #-8]
    18d0:	movw	r2, #1
    18d4:	movw	r3, #0
    18d8:	movt	r3, #0
    18dc:	movw	ip, #16
    18e0:	str	ip, [sp]
    18e4:	movw	ip, #0
    18e8:	str	ip, [sp, #4]
    18ec:	bl	0 <flatcc_json_printer_uint32_field>
    18f0:	mov	sp, fp
    18f4:	pop	{fp, pc}

000018f8 <MyGame_Example_TestJSONPrefixParsing3_print_json_table>:
    18f8:	push	{fp, lr}
    18fc:	mov	fp, sp
    1900:	sub	sp, sp, #32
    1904:	str	r0, [fp, #-4]
    1908:	str	r1, [fp, #-8]
    190c:	ldr	r0, [fp, #-4]
    1910:	ldr	r1, [fp, #-8]
    1914:	mov	r2, sp
    1918:	mov	r3, #0
    191c:	str	r3, [r2, #12]
    1920:	str	r3, [r2, #8]
    1924:	mov	ip, #15
    1928:	str	ip, [r2]
    192c:	movw	r2, #0
    1930:	movt	r2, #0
    1934:	str	r2, [fp, #-12]
    1938:	mov	r2, r3
    193c:	ldr	r3, [fp, #-12]
    1940:	bl	0 <flatcc_json_printer_int64_field>
    1944:	ldr	r0, [fp, #-4]
    1948:	ldr	r1, [fp, #-8]
    194c:	movw	r2, #1
    1950:	movw	r3, #0
    1954:	movt	r3, #0
    1958:	movw	ip, #21
    195c:	str	ip, [sp]
    1960:	movw	ip, #0
    1964:	str	ip, [sp, #4]
    1968:	bl	0 <flatcc_json_printer_uint32_field>
    196c:	mov	sp, fp
    1970:	pop	{fp, pc}

00001974 <Fantasy_Character_print_json_union_type>:
    1974:	push	{fp, lr}
    1978:	mov	fp, sp
    197c:	sub	sp, sp, #16
    1980:	str	r0, [fp, #-4]
    1984:	strb	r1, [fp, #-5]
    1988:	ldrb	r0, [fp, #-5]
    198c:	mov	r1, r0
    1990:	cmp	r0, #2
    1994:	str	r1, [sp, #4]
    1998:	beq	19f0 <Fantasy_Character_print_json_union_type+0x7c>
    199c:	b	19a0 <Fantasy_Character_print_json_union_type+0x2c>
    19a0:	ldr	r0, [sp, #4]
    19a4:	cmp	r0, #8
    19a8:	beq	1a08 <Fantasy_Character_print_json_union_type+0x94>
    19ac:	b	19b0 <Fantasy_Character_print_json_union_type+0x3c>
    19b0:	ldr	r0, [sp, #4]
    19b4:	cmp	r0, #9
    19b8:	beq	1a20 <Fantasy_Character_print_json_union_type+0xac>
    19bc:	b	19c0 <Fantasy_Character_print_json_union_type+0x4c>
    19c0:	ldr	r0, [sp, #4]
    19c4:	cmp	r0, #10
    19c8:	beq	1a38 <Fantasy_Character_print_json_union_type+0xc4>
    19cc:	b	19d0 <Fantasy_Character_print_json_union_type+0x5c>
    19d0:	ldr	r0, [sp, #4]
    19d4:	cmp	r0, #11
    19d8:	beq	1a50 <Fantasy_Character_print_json_union_type+0xdc>
    19dc:	b	19e0 <Fantasy_Character_print_json_union_type+0x6c>
    19e0:	ldr	r0, [sp, #4]
    19e4:	cmp	r0, #255	; 0xff
    19e8:	beq	1a68 <Fantasy_Character_print_json_union_type+0xf4>
    19ec:	b	1a80 <Fantasy_Character_print_json_union_type+0x10c>
    19f0:	ldr	r0, [fp, #-4]
    19f4:	movw	r1, #0
    19f8:	movt	r1, #0
    19fc:	movw	r2, #5
    1a00:	bl	0 <flatcc_json_printer_enum>
    1a04:	b	1a94 <Fantasy_Character_print_json_union_type+0x120>
    1a08:	ldr	r0, [fp, #-4]
    1a0c:	movw	r1, #0
    1a10:	movt	r1, #0
    1a14:	movw	r2, #8
    1a18:	bl	0 <flatcc_json_printer_enum>
    1a1c:	b	1a94 <Fantasy_Character_print_json_union_type+0x120>
    1a20:	ldr	r0, [fp, #-4]
    1a24:	movw	r1, #0
    1a28:	movt	r1, #0
    1a2c:	movw	r2, #5
    1a30:	bl	0 <flatcc_json_printer_enum>
    1a34:	b	1a94 <Fantasy_Character_print_json_union_type+0x120>
    1a38:	ldr	r0, [fp, #-4]
    1a3c:	movw	r1, #0
    1a40:	movt	r1, #0
    1a44:	movw	r2, #7
    1a48:	bl	0 <flatcc_json_printer_enum>
    1a4c:	b	1a94 <Fantasy_Character_print_json_union_type+0x120>
    1a50:	ldr	r0, [fp, #-4]
    1a54:	movw	r1, #0
    1a58:	movt	r1, #0
    1a5c:	movw	r2, #5
    1a60:	bl	0 <flatcc_json_printer_enum>
    1a64:	b	1a94 <Fantasy_Character_print_json_union_type+0x120>
    1a68:	ldr	r0, [fp, #-4]
    1a6c:	movw	r1, #0
    1a70:	movt	r1, #0
    1a74:	movw	r2, #6
    1a78:	bl	0 <flatcc_json_printer_enum>
    1a7c:	b	1a94 <Fantasy_Character_print_json_union_type+0x120>
    1a80:	ldr	r0, [fp, #-4]
    1a84:	movw	r1, #0
    1a88:	movt	r1, #0
    1a8c:	movw	r2, #4
    1a90:	bl	0 <flatcc_json_printer_enum>
    1a94:	mov	sp, fp
    1a98:	pop	{fp, pc}

00001a9c <Fantasy_Character_print_json_union>:
    1a9c:	push	{fp, lr}
    1aa0:	mov	fp, sp
    1aa4:	sub	sp, sp, #16
    1aa8:	str	r0, [fp, #-4]
    1aac:	str	r1, [sp, #8]
    1ab0:	ldr	r0, [sp, #8]
    1ab4:	ldrb	r0, [r0, #8]
    1ab8:	mov	r1, r0
    1abc:	cmp	r0, #2
    1ac0:	str	r1, [sp, #4]
    1ac4:	beq	1b1c <Fantasy_Character_print_json_union+0x80>
    1ac8:	b	1acc <Fantasy_Character_print_json_union+0x30>
    1acc:	ldr	r0, [sp, #4]
    1ad0:	cmp	r0, #8
    1ad4:	beq	1b34 <Fantasy_Character_print_json_union+0x98>
    1ad8:	b	1adc <Fantasy_Character_print_json_union+0x40>
    1adc:	ldr	r0, [sp, #4]
    1ae0:	cmp	r0, #9
    1ae4:	beq	1b4c <Fantasy_Character_print_json_union+0xb0>
    1ae8:	b	1aec <Fantasy_Character_print_json_union+0x50>
    1aec:	ldr	r0, [sp, #4]
    1af0:	cmp	r0, #10
    1af4:	beq	1b64 <Fantasy_Character_print_json_union+0xc8>
    1af8:	b	1afc <Fantasy_Character_print_json_union+0x60>
    1afc:	ldr	r0, [sp, #4]
    1b00:	cmp	r0, #11
    1b04:	beq	1b7c <Fantasy_Character_print_json_union+0xe0>
    1b08:	b	1b0c <Fantasy_Character_print_json_union+0x70>
    1b0c:	ldr	r0, [sp, #4]
    1b10:	cmp	r0, #255	; 0xff
    1b14:	beq	1b8c <Fantasy_Character_print_json_union+0xf0>
    1b18:	b	1b9c <Fantasy_Character_print_json_union+0x100>
    1b1c:	ldr	r0, [fp, #-4]
    1b20:	ldr	r1, [sp, #8]
    1b24:	movw	r2, #0
    1b28:	movt	r2, #0
    1b2c:	bl	0 <flatcc_json_printer_union_table>
    1b30:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1b34:	ldr	r0, [fp, #-4]
    1b38:	ldr	r1, [sp, #8]
    1b3c:	movw	r2, #0
    1b40:	movt	r2, #0
    1b44:	bl	0 <flatcc_json_printer_union_struct>
    1b48:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1b4c:	ldr	r0, [fp, #-4]
    1b50:	ldr	r1, [sp, #8]
    1b54:	movw	r2, #0
    1b58:	movt	r2, #0
    1b5c:	bl	0 <flatcc_json_printer_union_struct>
    1b60:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1b64:	ldr	r0, [fp, #-4]
    1b68:	ldr	r1, [sp, #8]
    1b6c:	movw	r2, #0
    1b70:	movt	r2, #0
    1b74:	bl	0 <flatcc_json_printer_union_struct>
    1b78:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1b7c:	ldr	r0, [fp, #-4]
    1b80:	ldr	r1, [sp, #8]
    1b84:	bl	0 <flatcc_json_printer_union_string>
    1b88:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1b8c:	ldr	r0, [fp, #-4]
    1b90:	ldr	r1, [sp, #8]
    1b94:	bl	0 <flatcc_json_printer_union_string>
    1b98:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1b9c:	b	1ba0 <Fantasy_Character_print_json_union+0x104>
    1ba0:	mov	sp, fp
    1ba4:	pop	{fp, pc}

00001ba8 <Fantasy_Attacker_print_json_table>:
    1ba8:	push	{fp, lr}
    1bac:	mov	fp, sp
    1bb0:	sub	sp, sp, #24
    1bb4:	str	r0, [fp, #-4]
    1bb8:	str	r1, [fp, #-8]
    1bbc:	ldr	r0, [fp, #-4]
    1bc0:	ldr	r1, [fp, #-8]
    1bc4:	movw	r2, #0
    1bc8:	str	r2, [sp, #12]
    1bcc:	movw	r3, #0
    1bd0:	movt	r3, #0
    1bd4:	movw	ip, #19
    1bd8:	str	ip, [sp]
    1bdc:	ldr	ip, [sp, #12]
    1be0:	str	ip, [sp, #4]
    1be4:	bl	0 <flatcc_json_printer_int32_field>
    1be8:	mov	sp, fp
    1bec:	pop	{fp, pc}

00001bf0 <Fantasy_Rapunzel_print_json_struct>:
    1bf0:	push	{fp, lr}
    1bf4:	mov	fp, sp
    1bf8:	sub	sp, sp, #24
    1bfc:	str	r0, [fp, #-4]
    1c00:	str	r1, [fp, #-8]
    1c04:	ldr	r0, [fp, #-4]
    1c08:	ldr	r2, [fp, #-8]
    1c0c:	movw	r1, #0
    1c10:	str	r1, [sp, #12]
    1c14:	ldr	r3, [sp, #12]
    1c18:	movw	ip, #0
    1c1c:	movt	ip, #0
    1c20:	str	ip, [sp]
    1c24:	movw	ip, #11
    1c28:	str	ip, [sp, #4]
    1c2c:	bl	0 <flatcc_json_printer_uint16_struct_field>
    1c30:	mov	sp, fp
    1c34:	pop	{fp, pc}

00001c38 <Fantasy_BookReader_print_json_struct>:
    1c38:	push	{fp, lr}
    1c3c:	mov	fp, sp
    1c40:	sub	sp, sp, #24
    1c44:	str	r0, [fp, #-4]
    1c48:	str	r1, [fp, #-8]
    1c4c:	ldr	r0, [fp, #-4]
    1c50:	ldr	r2, [fp, #-8]
    1c54:	movw	r1, #0
    1c58:	str	r1, [sp, #12]
    1c5c:	ldr	r3, [sp, #12]
    1c60:	movw	ip, #0
    1c64:	movt	ip, #0
    1c68:	str	ip, [sp]
    1c6c:	movw	ip, #10
    1c70:	str	ip, [sp, #4]
    1c74:	bl	0 <flatcc_json_printer_int32_struct_field>
    1c78:	mov	sp, fp
    1c7c:	pop	{fp, pc}

00001c80 <flatcc_json_printer_total>:
    1c80:	sub	sp, sp, #4
    1c84:	str	r0, [sp]
    1c88:	ldr	r0, [sp]
    1c8c:	ldr	r0, [r0, #12]
    1c90:	ldr	r1, [sp]
    1c94:	ldr	r1, [r1, #20]
    1c98:	ldr	r2, [sp]
    1c9c:	ldr	r2, [r2]
    1ca0:	sub	r1, r1, r2
    1ca4:	add	r0, r0, r1
    1ca8:	add	sp, sp, #4
    1cac:	bx	lr
