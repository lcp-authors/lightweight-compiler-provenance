
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/pcre/pcre_study.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <find_minlength>:
       0:	push	{r4, r5, r6, fp, lr}
       4:	add	fp, sp, #16
       8:	sub	sp, sp, #92	; 0x5c
       c:	str	r0, [fp, #-88]	; 0xffffffa8
      10:	str	r1, [fp, #-92]	; 0xffffffa4
      14:	str	r2, [fp, #-96]	; 0xffffffa0
      18:	str	r3, [fp, #-100]	; 0xffffff9c
      1c:	mvn	r3, #0
      20:	str	r3, [fp, #-24]	; 0xffffffe8
      24:	ldr	r3, [fp, #-100]	; 0xffffff9c
      28:	and	r3, r3, #2048	; 0x800
      2c:	cmp	r3, #0
      30:	movne	r3, #1
      34:	moveq	r3, #0
      38:	uxtb	r3, r3
      3c:	str	r3, [fp, #-64]	; 0xffffffc0
      40:	mov	r3, #0
      44:	str	r3, [fp, #-28]	; 0xffffffe4
      48:	mov	r5, #0
      4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
      50:	add	r4, r3, #3
      54:	ldr	r3, [fp, #8]
      58:	ldr	r3, [r3]
      5c:	add	r1, r3, #1
      60:	ldr	r2, [fp, #8]
      64:	str	r1, [r2]
      68:	cmp	r3, #1000	; 0x3e8
      6c:	ble	78 <find_minlength+0x78>
      70:	mvn	r3, #0
      74:	b	cb8 <find_minlength+0xcb8>
      78:	ldr	r3, [fp, #-92]	; 0xffffffa4
      7c:	ldrb	r3, [r3]
      80:	cmp	r3, #133	; 0x85
      84:	beq	b8 <find_minlength+0xb8>
      88:	ldr	r3, [fp, #-92]	; 0xffffffa4
      8c:	ldrb	r3, [r3]
      90:	cmp	r3, #138	; 0x8a
      94:	beq	b8 <find_minlength+0xb8>
      98:	ldr	r3, [fp, #-92]	; 0xffffffa4
      9c:	ldrb	r3, [r3]
      a0:	cmp	r3, #134	; 0x86
      a4:	beq	b8 <find_minlength+0xb8>
      a8:	ldr	r3, [fp, #-92]	; 0xffffffa4
      ac:	ldrb	r3, [r3]
      b0:	cmp	r3, #139	; 0x8b
      b4:	bne	bc <find_minlength+0xbc>
      b8:	add	r4, r4, #2
      bc:	ldrb	r6, [r4]
      c0:	mov	r3, r6
      c4:	cmp	r3, #161	; 0xa1
      c8:	ldrls	pc, [pc, r3, lsl #2]
      cc:	b	cac <find_minlength+0xcac>
      d0:	.word	0x00000410
      d4:	.word	0x00000484
      d8:	.word	0x00000484
      dc:	.word	0x00000c98
      e0:	.word	0x00000484
      e4:	.word	0x00000484
      e8:	.word	0x000005b4
      ec:	.word	0x000005b4
      f0:	.word	0x000005b4
      f4:	.word	0x000005b4
      f8:	.word	0x000005b4
      fc:	.word	0x000005b4
     100:	.word	0x000005b4
     104:	.word	0x000005b4
     108:	.word	0x000005cc
     10c:	.word	0x000005b0
     110:	.word	0x000005b0
     114:	.word	0x000005c0
     118:	.word	0x000005b4
     11c:	.word	0x000005b4
     120:	.word	0x000005b4
     124:	.word	0x000005b4
     128:	.word	0x000005b4
     12c:	.word	0x00000484
     130:	.word	0x00000484
     134:	.word	0x00000484
     138:	.word	0x00000484
     13c:	.word	0x00000484
     140:	.word	0x00000484
     144:	.word	0x000004e0
     148:	.word	0x000004e0
     14c:	.word	0x000004e0
     150:	.word	0x000004e0
     154:	.word	0x00000c60
     158:	.word	0x00000c60
     15c:	.word	0x000004e0
     160:	.word	0x000004e0
     164:	.word	0x00000c60
     168:	.word	0x00000c60
     16c:	.word	0x00000c60
     170:	.word	0x00000c60
     174:	.word	0x00000524
     178:	.word	0x00000c60
     17c:	.word	0x000004e0
     180:	.word	0x00000c60
     184:	.word	0x00000c60
     188:	.word	0x00000c60
     18c:	.word	0x00000c60
     190:	.word	0x000004e0
     194:	.word	0x000004e0
     198:	.word	0x00000c60
     19c:	.word	0x00000c60
     1a0:	.word	0x00000c60
     1a4:	.word	0x00000c60
     1a8:	.word	0x00000524
     1ac:	.word	0x00000c60
     1b0:	.word	0x000004e0
     1b4:	.word	0x00000c60
     1b8:	.word	0x00000c60
     1bc:	.word	0x00000c60
     1c0:	.word	0x00000c60
     1c4:	.word	0x000004e0
     1c8:	.word	0x000004e0
     1cc:	.word	0x00000c60
     1d0:	.word	0x00000c60
     1d4:	.word	0x00000c60
     1d8:	.word	0x00000c60
     1dc:	.word	0x00000524
     1e0:	.word	0x00000c60
     1e4:	.word	0x000004e0
     1e8:	.word	0x00000c60
     1ec:	.word	0x00000c60
     1f0:	.word	0x00000c60
     1f4:	.word	0x00000c60
     1f8:	.word	0x000004e0
     1fc:	.word	0x000004e0
     200:	.word	0x00000c60
     204:	.word	0x00000c60
     208:	.word	0x00000c60
     20c:	.word	0x00000c60
     210:	.word	0x00000524
     214:	.word	0x00000c60
     218:	.word	0x000004e0
     21c:	.word	0x00000c60
     220:	.word	0x00000c60
     224:	.word	0x000005d8
     228:	.word	0x000005d8
     22c:	.word	0x000004ec
     230:	.word	0x000004ec
     234:	.word	0x000005d8
     238:	.word	0x000005d8
     23c:	.word	0x00000610
     240:	.word	0x00000610
     244:	.word	0x00000554
     248:	.word	0x000005d8
     24c:	.word	0x000004ec
     250:	.word	0x000005d8
     254:	.word	0x00000610
     258:	.word	0x00000cac
     25c:	.word	0x00000cac
     260:	.word	0x00000cac
     264:	.word	0x00000cac
     268:	.word	0x00000cac
     26c:	.word	0x00000cac
     270:	.word	0x00000cac
     274:	.word	0x00000cac
     278:	.word	0x00000cac
     27c:	.word	0x00000cac
     280:	.word	0x00000cac
     284:	.word	0x00000cac
     288:	.word	0x00000648
     28c:	.word	0x00000648
     290:	.word	0x00000cac
     294:	.word	0x0000090c
     298:	.word	0x0000090c
     29c:	.word	0x000006e0
     2a0:	.word	0x000006e0
     2a4:	.word	0x00000b28
     2a8:	.word	0x00000484
     2ac:	.word	0x00000410
     2b0:	.word	0x00000410
     2b4:	.word	0x00000410
     2b8:	.word	0x00000410
     2bc:	.word	0x00000410
     2c0:	.word	0x00000484
     2c4:	.word	0x0000045c
     2c8:	.word	0x0000045c
     2cc:	.word	0x0000045c
     2d0:	.word	0x0000045c
     2d4:	.word	0x00000394
     2d8:	.word	0x00000394
     2dc:	.word	0x00000394
     2e0:	.word	0x00000394
     2e4:	.word	0x00000394
     2e8:	.word	0x00000394
     2ec:	.word	0x00000358
     2f0:	.word	0x00000394
     2f4:	.word	0x00000394
     2f8:	.word	0x00000394
     2fc:	.word	0x00000394
     300:	.word	0x00000358
     304:	.word	0x00000484
     308:	.word	0x00000484
     30c:	.word	0x00000484
     310:	.word	0x00000484
     314:	.word	0x00000484
     318:	.word	0x0000049c
     31c:	.word	0x0000049c
     320:	.word	0x0000049c
     324:	.word	0x00000c74
     328:	.word	0x00000c98
     32c:	.word	0x00000c74
     330:	.word	0x00000c98
     334:	.word	0x00000c74
     338:	.word	0x00000c98
     33c:	.word	0x00000c74
     340:	.word	0x00000c98
     344:	.word	0x00000c98
     348:	.word	0x00000408
     34c:	.word	0x00000408
     350:	.word	0x00000c98
     354:	.word	0x0000049c
     358:	add	r3, r4, #1
     35c:	ldrb	r3, [r3]
     360:	lsl	r3, r3, #8
     364:	add	r2, r4, #2
     368:	ldrb	r2, [r2]
     36c:	orr	r3, r3, r2
     370:	add	r3, r4, r3
     374:	str	r3, [fp, #-68]	; 0xffffffbc
     378:	ldr	r3, [fp, #-68]	; 0xffffffbc
     37c:	ldrb	r3, [r3]
     380:	cmp	r3, #119	; 0x77
     384:	beq	394 <find_minlength+0x394>
     388:	ldr	r3, [fp, #-68]	; 0xffffffbc
     38c:	add	r4, r3, #3
     390:	b	cb4 <find_minlength+0xcb4>
     394:	ldr	r3, [fp, #8]
     398:	str	r3, [sp, #4]
     39c:	ldr	r3, [fp, #4]
     3a0:	str	r3, [sp]
     3a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
     3a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
     3ac:	mov	r1, r4
     3b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
     3b4:	bl	0 <find_minlength>
     3b8:	str	r0, [fp, #-32]	; 0xffffffe0
     3bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3c0:	cmp	r3, #0
     3c4:	bge	3d0 <find_minlength+0x3d0>
     3c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3cc:	b	cb8 <find_minlength+0xcb8>
     3d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3d4:	add	r5, r5, r3
     3d8:	add	r3, r4, #1
     3dc:	ldrb	r3, [r3]
     3e0:	lsl	r3, r3, #8
     3e4:	add	r2, r4, #2
     3e8:	ldrb	r2, [r2]
     3ec:	orr	r3, r3, r2
     3f0:	add	r4, r4, r3
     3f4:	ldrb	r3, [r4]
     3f8:	cmp	r3, #119	; 0x77
     3fc:	beq	3d8 <find_minlength+0x3d8>
     400:	add	r4, r4, #3
     404:	b	cb4 <find_minlength+0xcb4>
     408:	mvn	r3, #0
     40c:	b	cb8 <find_minlength+0xcb8>
     410:	ldr	r3, [fp, #-24]	; 0xffffffe8
     414:	cmp	r3, #0
     418:	blt	434 <find_minlength+0x434>
     41c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     420:	cmp	r3, #0
     424:	bne	438 <find_minlength+0x438>
     428:	ldr	r3, [fp, #-24]	; 0xffffffe8
     42c:	cmp	r5, r3
     430:	bge	438 <find_minlength+0x438>
     434:	str	r5, [fp, #-24]	; 0xffffffe8
     438:	cmp	r6, #119	; 0x77
     43c:	beq	448 <find_minlength+0x448>
     440:	ldr	r3, [fp, #-24]	; 0xffffffe8
     444:	b	cb8 <find_minlength+0xcb8>
     448:	add	r4, r4, #3
     44c:	mov	r5, #0
     450:	mov	r3, #0
     454:	str	r3, [fp, #-28]	; 0xffffffe4
     458:	b	cb4 <find_minlength+0xcb4>
     45c:	add	r3, r4, #1
     460:	ldrb	r3, [r3]
     464:	lsl	r3, r3, #8
     468:	add	r2, r4, #2
     46c:	ldrb	r2, [r2]
     470:	orr	r3, r3, r2
     474:	add	r4, r4, r3
     478:	ldrb	r3, [r4]
     47c:	cmp	r3, #119	; 0x77
     480:	beq	45c <find_minlength+0x45c>
     484:	ldrb	r3, [r4]
     488:	mov	r2, r3
     48c:	ldr	r3, [pc, #2096]	; cc4 <find_minlength+0xcc4>
     490:	ldrb	r3, [r3, r2]
     494:	add	r4, r4, r3
     498:	b	cb4 <find_minlength+0xcb4>
     49c:	ldrb	r3, [r4]
     4a0:	mov	r2, r3
     4a4:	ldr	r3, [pc, #2072]	; cc4 <find_minlength+0xcc4>
     4a8:	ldrb	r3, [r3, r2]
     4ac:	add	r4, r4, r3
     4b0:	add	r3, r4, #1
     4b4:	ldrb	r3, [r3]
     4b8:	lsl	r3, r3, #8
     4bc:	add	r2, r4, #2
     4c0:	ldrb	r2, [r2]
     4c4:	orr	r3, r3, r2
     4c8:	add	r4, r4, r3
     4cc:	ldrb	r3, [r4]
     4d0:	cmp	r3, #119	; 0x77
     4d4:	beq	4b0 <find_minlength+0x4b0>
     4d8:	add	r4, r4, #3
     4dc:	b	cb4 <find_minlength+0xcb4>
     4e0:	add	r5, r5, #1
     4e4:	add	r4, r4, #2
     4e8:	b	cb4 <find_minlength+0xcb4>
     4ec:	add	r5, r5, #1
     4f0:	add	r3, r4, #1
     4f4:	ldrb	r3, [r3]
     4f8:	cmp	r3, #16
     4fc:	beq	510 <find_minlength+0x510>
     500:	add	r3, r4, #1
     504:	ldrb	r3, [r3]
     508:	cmp	r3, #15
     50c:	bne	518 <find_minlength+0x518>
     510:	mov	r3, #4
     514:	b	51c <find_minlength+0x51c>
     518:	mov	r3, #2
     51c:	add	r4, r4, r3
     520:	b	cb4 <find_minlength+0xcb4>
     524:	add	r3, r4, #1
     528:	ldrb	r3, [r3]
     52c:	lsl	r3, r3, #8
     530:	add	r2, r4, #2
     534:	ldrb	r2, [r2]
     538:	orr	r3, r3, r2
     53c:	mov	r2, r3
     540:	mov	r3, r5
     544:	add	r3, r2, r3
     548:	mov	r5, r3
     54c:	add	r4, r4, #4
     550:	b	cb4 <find_minlength+0xcb4>
     554:	add	r3, r4, #1
     558:	ldrb	r3, [r3]
     55c:	lsl	r3, r3, #8
     560:	add	r2, r4, #2
     564:	ldrb	r2, [r2]
     568:	orr	r3, r3, r2
     56c:	mov	r2, r3
     570:	mov	r3, r5
     574:	add	r3, r2, r3
     578:	mov	r5, r3
     57c:	add	r3, r4, #3
     580:	ldrb	r3, [r3]
     584:	cmp	r3, #16
     588:	beq	59c <find_minlength+0x59c>
     58c:	add	r3, r4, #3
     590:	ldrb	r3, [r3]
     594:	cmp	r3, #15
     598:	bne	5a4 <find_minlength+0x5a4>
     59c:	mov	r3, #6
     5a0:	b	5a8 <find_minlength+0x5a8>
     5a4:	mov	r3, #4
     5a8:	add	r4, r4, r3
     5ac:	b	cb4 <find_minlength+0xcb4>
     5b0:	add	r4, r4, #2
     5b4:	add	r5, r5, #1
     5b8:	add	r4, r4, #1
     5bc:	b	cb4 <find_minlength+0xcb4>
     5c0:	add	r5, r5, #1
     5c4:	add	r4, r4, #1
     5c8:	b	cb4 <find_minlength+0xcb4>
     5cc:	add	r5, r5, #1
     5d0:	add	r4, r4, #1
     5d4:	b	cb4 <find_minlength+0xcb4>
     5d8:	add	r3, r4, #1
     5dc:	ldrb	r3, [r3]
     5e0:	cmp	r3, #16
     5e4:	beq	5f8 <find_minlength+0x5f8>
     5e8:	add	r3, r4, #1
     5ec:	ldrb	r3, [r3]
     5f0:	cmp	r3, #15
     5f4:	bne	5fc <find_minlength+0x5fc>
     5f8:	add	r4, r4, #2
     5fc:	mov	r2, r6
     600:	ldr	r3, [pc, #1724]	; cc4 <find_minlength+0xcc4>
     604:	ldrb	r3, [r3, r2]
     608:	add	r4, r4, r3
     60c:	b	cb4 <find_minlength+0xcb4>
     610:	add	r3, r4, #3
     614:	ldrb	r3, [r3]
     618:	cmp	r3, #16
     61c:	beq	630 <find_minlength+0x630>
     620:	add	r3, r4, #3
     624:	ldrb	r3, [r3]
     628:	cmp	r3, #15
     62c:	bne	634 <find_minlength+0x634>
     630:	add	r4, r4, #2
     634:	mov	r2, r6
     638:	ldr	r3, [pc, #1668]	; cc4 <find_minlength+0xcc4>
     63c:	ldrb	r3, [r3, r2]
     640:	add	r4, r4, r3
     644:	b	cb4 <find_minlength+0xcb4>
     648:	ldr	r3, [pc, #1652]	; cc4 <find_minlength+0xcc4>
     64c:	ldrb	r3, [r3, #110]	; 0x6e
     650:	add	r4, r4, r3
     654:	ldrb	r3, [r4]
     658:	sub	r3, r3, #98	; 0x62
     65c:	cmp	r3, #11
     660:	ldrls	pc, [pc, r3, lsl #2]
     664:	b	6d4 <find_minlength+0x6d4>
     668:	.word	0x0000069c
     66c:	.word	0x0000069c
     670:	.word	0x00000698
     674:	.word	0x00000698
     678:	.word	0x0000069c
     67c:	.word	0x0000069c
     680:	.word	0x000006a4
     684:	.word	0x000006a4
     688:	.word	0x0000069c
     68c:	.word	0x00000698
     690:	.word	0x0000069c
     694:	.word	0x000006a4
     698:	add	r5, r5, #1
     69c:	add	r4, r4, #1
     6a0:	b	6dc <find_minlength+0x6dc>
     6a4:	add	r3, r4, #1
     6a8:	ldrb	r3, [r3]
     6ac:	lsl	r3, r3, #8
     6b0:	add	r2, r4, #2
     6b4:	ldrb	r2, [r2]
     6b8:	orr	r3, r3, r2
     6bc:	mov	r2, r3
     6c0:	mov	r3, r5
     6c4:	add	r3, r2, r3
     6c8:	mov	r5, r3
     6cc:	add	r4, r4, #5
     6d0:	b	6dc <find_minlength+0x6dc>
     6d4:	add	r5, r5, #1
     6d8:	nop			; (mov r0, r0)
     6dc:	b	cb4 <find_minlength+0xcb4>
     6e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
     6e4:	and	r3, r3, #33554432	; 0x2000000
     6e8:	cmp	r3, #0
     6ec:	bne	8fc <find_minlength+0x8fc>
     6f0:	add	r3, r4, #3
     6f4:	ldrb	r3, [r3]
     6f8:	lsl	r3, r3, #8
     6fc:	add	r2, r4, #4
     700:	ldrb	r2, [r2]
     704:	orr	r3, r3, r2
     708:	str	r3, [fp, #-44]	; 0xffffffd4
     70c:	ldr	r3, [fp, #-88]	; 0xffffffa8
     710:	ldrh	r3, [r3, #34]	; 0x22
     714:	mov	r1, r3
     718:	add	r3, r4, #1
     71c:	ldrb	r3, [r3]
     720:	lsl	r3, r3, #8
     724:	add	r2, r4, #2
     728:	ldrb	r2, [r2]
     72c:	orr	r3, r3, r2
     730:	mov	r2, r3
     734:	ldr	r3, [fp, #-88]	; 0xffffffa8
     738:	ldrh	r3, [r3, #36]	; 0x24
     73c:	mul	r3, r3, r2
     740:	add	r3, r1, r3
     744:	ldr	r2, [fp, #-88]	; 0xffffffa8
     748:	add	r3, r2, r3
     74c:	str	r3, [fp, #-48]	; 0xffffffd0
     750:	mvn	r3, #-2147483648	; 0x80000000
     754:	str	r3, [fp, #-32]	; 0xffffffe0
     758:	b	8e4 <find_minlength+0x8e4>
     75c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     760:	ldrb	r3, [r3]
     764:	lsl	r3, r3, #8
     768:	ldr	r2, [fp, #-48]	; 0xffffffd0
     76c:	add	r2, r2, #1
     770:	ldrb	r2, [r2]
     774:	orr	r3, r3, r2
     778:	mov	r2, r3
     77c:	ldr	r1, [fp, #-64]	; 0xffffffc0
     780:	ldr	r0, [fp, #-96]	; 0xffffffa0
     784:	bl	0 <coda__pcre_find_bracket>
     788:	str	r0, [fp, #-68]	; 0xffffffbc
     78c:	ldr	r3, [fp, #-68]	; 0xffffffbc
     790:	str	r3, [fp, #-40]	; 0xffffffd8
     794:	ldr	r3, [fp, #-68]	; 0xffffffbc
     798:	cmp	r3, #0
     79c:	bne	7a8 <find_minlength+0x7a8>
     7a0:	mvn	r3, #1
     7a4:	b	cb8 <find_minlength+0xcb8>
     7a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     7ac:	add	r3, r3, #1
     7b0:	ldrb	r3, [r3]
     7b4:	lsl	r3, r3, #8
     7b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
     7bc:	add	r2, r2, #2
     7c0:	ldrb	r2, [r2]
     7c4:	orr	r3, r3, r2
     7c8:	mov	r2, r3
     7cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
     7d0:	add	r3, r3, r2
     7d4:	str	r3, [fp, #-40]	; 0xffffffd8
     7d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     7dc:	ldrb	r3, [r3]
     7e0:	cmp	r3, #119	; 0x77
     7e4:	beq	7a8 <find_minlength+0x7a8>
     7e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     7ec:	cmp	r4, r3
     7f0:	bls	814 <find_minlength+0x814>
     7f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     7f8:	cmp	r4, r3
     7fc:	bcs	814 <find_minlength+0x814>
     800:	mov	r3, #0
     804:	str	r3, [fp, #-32]	; 0xffffffe0
     808:	mov	r3, #1
     80c:	str	r3, [fp, #-28]	; 0xffffffe4
     810:	b	904 <find_minlength+0x904>
     814:	ldr	r3, [fp, #4]
     818:	str	r3, [fp, #-52]	; 0xffffffcc
     81c:	ldr	r3, [fp, #4]
     820:	str	r3, [fp, #-52]	; 0xffffffcc
     824:	b	848 <find_minlength+0x848>
     828:	ldr	r3, [fp, #-52]	; 0xffffffcc
     82c:	ldr	r2, [r3, #4]
     830:	ldr	r3, [fp, #-68]	; 0xffffffbc
     834:	cmp	r2, r3
     838:	beq	858 <find_minlength+0x858>
     83c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     840:	ldr	r3, [r3]
     844:	str	r3, [fp, #-52]	; 0xffffffcc
     848:	ldr	r3, [fp, #-52]	; 0xffffffcc
     84c:	cmp	r3, #0
     850:	bne	828 <find_minlength+0x828>
     854:	b	85c <find_minlength+0x85c>
     858:	nop			; (mov r0, r0)
     85c:	ldr	r3, [fp, #-52]	; 0xffffffcc
     860:	cmp	r3, #0
     864:	beq	87c <find_minlength+0x87c>
     868:	mov	r3, #0
     86c:	str	r3, [fp, #-32]	; 0xffffffe0
     870:	mov	r3, #1
     874:	str	r3, [fp, #-28]	; 0xffffffe4
     878:	b	904 <find_minlength+0x904>
     87c:	ldr	r3, [fp, #4]
     880:	str	r3, [fp, #-80]	; 0xffffffb0
     884:	ldr	r3, [fp, #-68]	; 0xffffffbc
     888:	str	r3, [fp, #-76]	; 0xffffffb4
     88c:	ldr	r3, [fp, #8]
     890:	str	r3, [sp, #4]
     894:	sub	r3, fp, #80	; 0x50
     898:	str	r3, [sp]
     89c:	ldr	r3, [fp, #-100]	; 0xffffff9c
     8a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
     8a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
     8a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
     8ac:	bl	0 <find_minlength>
     8b0:	str	r0, [fp, #-72]	; 0xffffffb8
     8b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
     8b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     8bc:	cmp	r2, r3
     8c0:	bge	8cc <find_minlength+0x8cc>
     8c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
     8c8:	str	r3, [fp, #-32]	; 0xffffffe0
     8cc:	ldr	r3, [fp, #-88]	; 0xffffffa8
     8d0:	ldrh	r3, [r3, #36]	; 0x24
     8d4:	mov	r2, r3
     8d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
     8dc:	add	r3, r3, r2
     8e0:	str	r3, [fp, #-48]	; 0xffffffd0
     8e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     8e8:	sub	r2, r3, #1
     8ec:	str	r2, [fp, #-44]	; 0xffffffd4
     8f0:	cmp	r3, #0
     8f4:	bgt	75c <find_minlength+0x75c>
     8f8:	b	904 <find_minlength+0x904>
     8fc:	mov	r3, #0
     900:	str	r3, [fp, #-32]	; 0xffffffe0
     904:	add	r4, r4, #5
     908:	b	a80 <find_minlength+0xa80>
     90c:	ldr	r3, [fp, #-100]	; 0xffffff9c
     910:	and	r3, r3, #33554432	; 0x2000000
     914:	cmp	r3, #0
     918:	bne	a74 <find_minlength+0xa74>
     91c:	add	r3, r4, #1
     920:	ldrb	r3, [r3]
     924:	lsl	r3, r3, #8
     928:	add	r2, r4, #2
     92c:	ldrb	r2, [r2]
     930:	orr	r3, r3, r2
     934:	mov	r2, r3
     938:	ldr	r1, [fp, #-64]	; 0xffffffc0
     93c:	ldr	r0, [fp, #-96]	; 0xffffffa0
     940:	bl	0 <coda__pcre_find_bracket>
     944:	str	r0, [fp, #-68]	; 0xffffffbc
     948:	ldr	r3, [fp, #-68]	; 0xffffffbc
     94c:	str	r3, [fp, #-40]	; 0xffffffd8
     950:	ldr	r3, [fp, #-68]	; 0xffffffbc
     954:	cmp	r3, #0
     958:	bne	964 <find_minlength+0x964>
     95c:	mvn	r3, #1
     960:	b	cb8 <find_minlength+0xcb8>
     964:	ldr	r3, [fp, #-40]	; 0xffffffd8
     968:	add	r3, r3, #1
     96c:	ldrb	r3, [r3]
     970:	lsl	r3, r3, #8
     974:	ldr	r2, [fp, #-40]	; 0xffffffd8
     978:	add	r2, r2, #2
     97c:	ldrb	r2, [r2]
     980:	orr	r3, r3, r2
     984:	mov	r2, r3
     988:	ldr	r3, [fp, #-40]	; 0xffffffd8
     98c:	add	r3, r3, r2
     990:	str	r3, [fp, #-40]	; 0xffffffd8
     994:	ldr	r3, [fp, #-40]	; 0xffffffd8
     998:	ldrb	r3, [r3]
     99c:	cmp	r3, #119	; 0x77
     9a0:	beq	964 <find_minlength+0x964>
     9a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
     9a8:	cmp	r4, r3
     9ac:	bls	9d0 <find_minlength+0x9d0>
     9b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
     9b4:	cmp	r4, r3
     9b8:	bcs	9d0 <find_minlength+0x9d0>
     9bc:	mov	r3, #0
     9c0:	str	r3, [fp, #-32]	; 0xffffffe0
     9c4:	mov	r3, #1
     9c8:	str	r3, [fp, #-28]	; 0xffffffe4
     9cc:	b	a7c <find_minlength+0xa7c>
     9d0:	ldr	r3, [fp, #4]
     9d4:	str	r3, [fp, #-56]	; 0xffffffc8
     9d8:	ldr	r3, [fp, #4]
     9dc:	str	r3, [fp, #-56]	; 0xffffffc8
     9e0:	b	a04 <find_minlength+0xa04>
     9e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     9e8:	ldr	r2, [r3, #4]
     9ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
     9f0:	cmp	r2, r3
     9f4:	beq	a14 <find_minlength+0xa14>
     9f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     9fc:	ldr	r3, [r3]
     a00:	str	r3, [fp, #-56]	; 0xffffffc8
     a04:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a08:	cmp	r3, #0
     a0c:	bne	9e4 <find_minlength+0x9e4>
     a10:	b	a18 <find_minlength+0xa18>
     a14:	nop			; (mov r0, r0)
     a18:	ldr	r3, [fp, #-56]	; 0xffffffc8
     a1c:	cmp	r3, #0
     a20:	beq	a38 <find_minlength+0xa38>
     a24:	mov	r3, #0
     a28:	str	r3, [fp, #-32]	; 0xffffffe0
     a2c:	mov	r3, #1
     a30:	str	r3, [fp, #-28]	; 0xffffffe4
     a34:	b	a7c <find_minlength+0xa7c>
     a38:	ldr	r3, [fp, #4]
     a3c:	str	r3, [fp, #-80]	; 0xffffffb0
     a40:	ldr	r3, [fp, #-68]	; 0xffffffbc
     a44:	str	r3, [fp, #-76]	; 0xffffffb4
     a48:	ldr	r3, [fp, #8]
     a4c:	str	r3, [sp, #4]
     a50:	sub	r3, fp, #80	; 0x50
     a54:	str	r3, [sp]
     a58:	ldr	r3, [fp, #-100]	; 0xffffff9c
     a5c:	ldr	r2, [fp, #-96]	; 0xffffffa0
     a60:	ldr	r1, [fp, #-68]	; 0xffffffbc
     a64:	ldr	r0, [fp, #-88]	; 0xffffffa8
     a68:	bl	0 <find_minlength>
     a6c:	str	r0, [fp, #-32]	; 0xffffffe0
     a70:	b	a7c <find_minlength+0xa7c>
     a74:	mov	r3, #0
     a78:	str	r3, [fp, #-32]	; 0xffffffe0
     a7c:	add	r4, r4, #3
     a80:	ldrb	r3, [r4]
     a84:	sub	r3, r3, #98	; 0x62
     a88:	cmp	r3, #11
     a8c:	ldrls	pc, [pc, r3, lsl #2]
     a90:	b	b08 <find_minlength+0xb08>
     a94:	.word	0x00000ac4
     a98:	.word	0x00000ac4
     a9c:	.word	0x00000ad4
     aa0:	.word	0x00000ad4
     aa4:	.word	0x00000ac4
     aa8:	.word	0x00000ac4
     aac:	.word	0x00000ae4
     ab0:	.word	0x00000ae4
     ab4:	.word	0x00000ac4
     ab8:	.word	0x00000ad4
     abc:	.word	0x00000ac4
     ac0:	.word	0x00000ae4
     ac4:	mov	r3, #0
     ac8:	str	r3, [fp, #-36]	; 0xffffffdc
     acc:	add	r4, r4, #1
     ad0:	b	b14 <find_minlength+0xb14>
     ad4:	mov	r3, #1
     ad8:	str	r3, [fp, #-36]	; 0xffffffdc
     adc:	add	r4, r4, #1
     ae0:	b	b14 <find_minlength+0xb14>
     ae4:	add	r3, r4, #1
     ae8:	ldrb	r3, [r3]
     aec:	lsl	r3, r3, #8
     af0:	add	r2, r4, #2
     af4:	ldrb	r2, [r2]
     af8:	orr	r3, r3, r2
     afc:	str	r3, [fp, #-36]	; 0xffffffdc
     b00:	add	r4, r4, #5
     b04:	b	b14 <find_minlength+0xb14>
     b08:	mov	r3, #1
     b0c:	str	r3, [fp, #-36]	; 0xffffffdc
     b10:	nop			; (mov r0, r0)
     b14:	ldr	r3, [fp, #-36]	; 0xffffffdc
     b18:	ldr	r2, [fp, #-32]	; 0xffffffe0
     b1c:	mul	r3, r2, r3
     b20:	add	r5, r5, r3
     b24:	b	cb4 <find_minlength+0xcb4>
     b28:	add	r3, r4, #1
     b2c:	ldrb	r3, [r3]
     b30:	lsl	r3, r3, #8
     b34:	add	r2, r4, #2
     b38:	ldrb	r2, [r2]
     b3c:	orr	r3, r3, r2
     b40:	mov	r2, r3
     b44:	ldr	r3, [fp, #-96]	; 0xffffffa0
     b48:	add	r3, r3, r2
     b4c:	str	r3, [fp, #-40]	; 0xffffffd8
     b50:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b54:	str	r3, [fp, #-68]	; 0xffffffbc
     b58:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b5c:	add	r3, r3, #1
     b60:	ldrb	r3, [r3]
     b64:	lsl	r3, r3, #8
     b68:	ldr	r2, [fp, #-40]	; 0xffffffd8
     b6c:	add	r2, r2, #2
     b70:	ldrb	r2, [r2]
     b74:	orr	r3, r3, r2
     b78:	mov	r2, r3
     b7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b80:	add	r3, r3, r2
     b84:	str	r3, [fp, #-40]	; 0xffffffd8
     b88:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b8c:	ldrb	r3, [r3]
     b90:	cmp	r3, #119	; 0x77
     b94:	beq	b58 <find_minlength+0xb58>
     b98:	ldr	r3, [fp, #-68]	; 0xffffffbc
     b9c:	cmp	r4, r3
     ba0:	bls	bbc <find_minlength+0xbbc>
     ba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
     ba8:	cmp	r4, r3
     bac:	bcs	bbc <find_minlength+0xbbc>
     bb0:	mov	r3, #1
     bb4:	str	r3, [fp, #-28]	; 0xffffffe4
     bb8:	b	c58 <find_minlength+0xc58>
     bbc:	ldr	r3, [fp, #4]
     bc0:	str	r3, [fp, #-60]	; 0xffffffc4
     bc4:	ldr	r3, [fp, #4]
     bc8:	str	r3, [fp, #-60]	; 0xffffffc4
     bcc:	b	bf0 <find_minlength+0xbf0>
     bd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
     bd4:	ldr	r2, [r3, #4]
     bd8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     bdc:	cmp	r2, r3
     be0:	beq	c00 <find_minlength+0xc00>
     be4:	ldr	r3, [fp, #-60]	; 0xffffffc4
     be8:	ldr	r3, [r3]
     bec:	str	r3, [fp, #-60]	; 0xffffffc4
     bf0:	ldr	r3, [fp, #-60]	; 0xffffffc4
     bf4:	cmp	r3, #0
     bf8:	bne	bd0 <find_minlength+0xbd0>
     bfc:	b	c04 <find_minlength+0xc04>
     c00:	nop			; (mov r0, r0)
     c04:	ldr	r3, [fp, #-60]	; 0xffffffc4
     c08:	cmp	r3, #0
     c0c:	beq	c1c <find_minlength+0xc1c>
     c10:	mov	r3, #1
     c14:	str	r3, [fp, #-28]	; 0xffffffe4
     c18:	b	c58 <find_minlength+0xc58>
     c1c:	ldr	r3, [fp, #4]
     c20:	str	r3, [fp, #-80]	; 0xffffffb0
     c24:	ldr	r3, [fp, #-68]	; 0xffffffbc
     c28:	str	r3, [fp, #-76]	; 0xffffffb4
     c2c:	ldr	r3, [fp, #8]
     c30:	str	r3, [sp, #4]
     c34:	sub	r3, fp, #80	; 0x50
     c38:	str	r3, [sp]
     c3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
     c40:	ldr	r2, [fp, #-96]	; 0xffffffa0
     c44:	ldr	r1, [fp, #-68]	; 0xffffffbc
     c48:	ldr	r0, [fp, #-88]	; 0xffffffa8
     c4c:	bl	0 <find_minlength>
     c50:	mov	r3, r0
     c54:	add	r5, r5, r3
     c58:	add	r4, r4, #3
     c5c:	b	cb4 <find_minlength+0xcb4>
     c60:	mov	r2, r6
     c64:	ldr	r3, [pc, #88]	; cc4 <find_minlength+0xcc4>
     c68:	ldrb	r3, [r3, r2]
     c6c:	add	r4, r4, r3
     c70:	b	cb4 <find_minlength+0xcb4>
     c74:	mov	r2, r6
     c78:	ldr	r3, [pc, #68]	; cc4 <find_minlength+0xcc4>
     c7c:	ldrb	r3, [r3, r2]
     c80:	mov	r2, r3
     c84:	add	r3, r4, #1
     c88:	ldrb	r3, [r3]
     c8c:	add	r3, r2, r3
     c90:	add	r4, r4, r3
     c94:	b	cb4 <find_minlength+0xcb4>
     c98:	mov	r2, r6
     c9c:	ldr	r3, [pc, #32]	; cc4 <find_minlength+0xcc4>
     ca0:	ldrb	r3, [r3, r2]
     ca4:	add	r4, r4, r3
     ca8:	b	cb4 <find_minlength+0xcb4>
     cac:	mvn	r3, #2
     cb0:	b	cb8 <find_minlength+0xcb8>
     cb4:	b	bc <find_minlength+0xbc>
     cb8:	mov	r0, r3
     cbc:	sub	sp, fp, #16
     cc0:	pop	{r4, r5, r6, fp, pc}
     cc4:	.word	0x00000000

00000cc8 <set_table_bit>:
     cc8:	push	{fp}		; (str fp, [sp, #-4]!)
     ccc:	add	fp, sp, #0
     cd0:	sub	sp, sp, #28
     cd4:	str	r0, [fp, #-16]
     cd8:	str	r1, [fp, #-20]	; 0xffffffec
     cdc:	str	r2, [fp, #-24]	; 0xffffffe8
     ce0:	str	r3, [fp, #-28]	; 0xffffffe4
     ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
     ce8:	ldrb	r3, [r3]
     cec:	str	r3, [fp, #-8]
     cf0:	ldr	r3, [fp, #-8]
     cf4:	lsr	r3, r3, #3
     cf8:	ldr	r2, [fp, #-16]
     cfc:	add	r2, r2, r3
     d00:	ldr	r1, [fp, #-16]
     d04:	add	r3, r1, r3
     d08:	ldrb	r3, [r3]
     d0c:	sxtb	r1, r3
     d10:	ldr	r3, [fp, #-8]
     d14:	and	r3, r3, #7
     d18:	mov	r0, #1
     d1c:	lsl	r3, r0, r3
     d20:	sxtb	r3, r3
     d24:	orr	r3, r1, r3
     d28:	sxtb	r3, r3
     d2c:	uxtb	r3, r3
     d30:	strb	r3, [r2]
     d34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d38:	cmp	r3, #0
     d3c:	beq	dec <set_table_bit+0x124>
     d40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d44:	ldr	r2, [r3, #12]
     d48:	ldr	r3, [fp, #-8]
     d4c:	add	r3, r2, r3
     d50:	ldrb	r3, [r3]
     d54:	and	r3, r3, #2
     d58:	cmp	r3, #0
     d5c:	beq	dec <set_table_bit+0x124>
     d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d64:	ldr	r2, [r3, #4]
     d68:	ldr	r3, [fp, #-8]
     d6c:	add	r3, r2, r3
     d70:	ldrb	r3, [r3]
     d74:	lsr	r3, r3, #3
     d78:	uxtb	r3, r3
     d7c:	mov	r2, r3
     d80:	ldr	r3, [fp, #-16]
     d84:	add	r3, r3, r2
     d88:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d8c:	ldr	r1, [r2, #4]
     d90:	ldr	r2, [fp, #-8]
     d94:	add	r2, r1, r2
     d98:	ldrb	r2, [r2]
     d9c:	lsr	r2, r2, #3
     da0:	uxtb	r2, r2
     da4:	mov	r1, r2
     da8:	ldr	r2, [fp, #-16]
     dac:	add	r2, r2, r1
     db0:	ldrb	r2, [r2]
     db4:	sxtb	r1, r2
     db8:	ldr	r2, [fp, #-28]	; 0xffffffe4
     dbc:	ldr	r0, [r2, #4]
     dc0:	ldr	r2, [fp, #-8]
     dc4:	add	r2, r0, r2
     dc8:	ldrb	r2, [r2]
     dcc:	and	r2, r2, #7
     dd0:	mov	r0, #1
     dd4:	lsl	r2, r0, r2
     dd8:	sxtb	r2, r2
     ddc:	orr	r2, r1, r2
     de0:	sxtb	r2, r2
     de4:	uxtb	r2, r2
     de8:	strb	r2, [r3]
     dec:	ldr	r3, [fp, #-20]	; 0xffffffec
     df0:	add	r3, r3, #1
     df4:	mov	r0, r3
     df8:	add	sp, fp, #0
     dfc:	pop	{fp}		; (ldr fp, [sp], #4)
     e00:	bx	lr

00000e04 <set_type_bits>:
     e04:	push	{r4, fp}
     e08:	add	fp, sp, #4
     e0c:	sub	sp, sp, #16
     e10:	str	r0, [fp, #-8]
     e14:	str	r1, [fp, #-12]
     e18:	str	r2, [fp, #-16]
     e1c:	str	r3, [fp, #-20]	; 0xffffffec
     e20:	mov	r4, #0
     e24:	b	e64 <set_type_bits+0x60>
     e28:	ldr	r3, [fp, #-8]
     e2c:	add	r3, r3, r4
     e30:	ldr	r2, [fp, #-8]
     e34:	add	r2, r2, r4
     e38:	ldrb	r1, [r2]
     e3c:	ldr	r2, [fp, #-20]	; 0xffffffec
     e40:	ldr	r0, [r2, #8]
     e44:	ldr	r2, [fp, #-12]
     e48:	add	r2, r4, r2
     e4c:	add	r2, r0, r2
     e50:	ldrb	r2, [r2]
     e54:	orr	r2, r1, r2
     e58:	uxtb	r2, r2
     e5c:	strb	r2, [r3]
     e60:	add	r4, r4, #1
     e64:	ldr	r3, [fp, #-16]
     e68:	cmp	r4, r3
     e6c:	bcc	e28 <set_type_bits+0x24>
     e70:	nop			; (mov r0, r0)
     e74:	sub	sp, fp, #4
     e78:	pop	{r4, fp}
     e7c:	bx	lr

00000e80 <set_nottype_bits>:
     e80:	push	{r4, fp}
     e84:	add	fp, sp, #4
     e88:	sub	sp, sp, #16
     e8c:	str	r0, [fp, #-8]
     e90:	str	r1, [fp, #-12]
     e94:	str	r2, [fp, #-16]
     e98:	str	r3, [fp, #-20]	; 0xffffffec
     e9c:	mov	r4, #0
     ea0:	b	ef4 <set_nottype_bits+0x74>
     ea4:	ldr	r3, [fp, #-8]
     ea8:	add	r3, r3, r4
     eac:	ldr	r2, [fp, #-8]
     eb0:	add	r2, r2, r4
     eb4:	ldrb	r2, [r2]
     eb8:	sxtb	r1, r2
     ebc:	ldr	r2, [fp, #-20]	; 0xffffffec
     ec0:	ldr	r0, [r2, #8]
     ec4:	ldr	r2, [fp, #-12]
     ec8:	add	r2, r4, r2
     ecc:	add	r2, r0, r2
     ed0:	ldrb	r2, [r2]
     ed4:	sxtb	r2, r2
     ed8:	mvn	r2, r2
     edc:	sxtb	r2, r2
     ee0:	orr	r2, r1, r2
     ee4:	sxtb	r2, r2
     ee8:	uxtb	r2, r2
     eec:	strb	r2, [r3]
     ef0:	add	r4, r4, #1
     ef4:	ldr	r3, [fp, #-16]
     ef8:	cmp	r4, r3
     efc:	bcc	ea4 <set_nottype_bits+0x24>
     f00:	nop			; (mov r0, r0)
     f04:	sub	sp, fp, #4
     f08:	pop	{r4, fp}
     f0c:	bx	lr

00000f10 <set_start_bits>:
     f10:	push	{r4, fp, lr}
     f14:	add	fp, sp, #8
     f18:	sub	sp, sp, #60	; 0x3c
     f1c:	str	r0, [fp, #-48]	; 0xffffffd0
     f20:	str	r1, [fp, #-52]	; 0xffffffcc
     f24:	str	r2, [fp, #-56]	; 0xffffffc8
     f28:	str	r3, [fp, #-60]	; 0xffffffc4
     f2c:	mov	r3, #1
     f30:	str	r3, [fp, #-16]
     f34:	mov	r3, #32
     f38:	str	r3, [fp, #-32]	; 0xffffffe0
     f3c:	mov	r3, #1
     f40:	str	r3, [fp, #-20]	; 0xffffffec
     f44:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f48:	add	r3, r3, #3
     f4c:	str	r3, [fp, #-24]	; 0xffffffe8
     f50:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f54:	ldrb	r3, [r3]
     f58:	cmp	r3, #133	; 0x85
     f5c:	beq	f90 <set_start_bits+0x80>
     f60:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f64:	ldrb	r3, [r3]
     f68:	cmp	r3, #138	; 0x8a
     f6c:	beq	f90 <set_start_bits+0x80>
     f70:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f74:	ldrb	r3, [r3]
     f78:	cmp	r3, #134	; 0x86
     f7c:	beq	f90 <set_start_bits+0x80>
     f80:	ldr	r3, [fp, #-48]	; 0xffffffd0
     f84:	ldrb	r3, [r3]
     f88:	cmp	r3, #139	; 0x8b
     f8c:	bne	1b60 <set_start_bits+0xc50>
     f90:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f94:	add	r3, r3, #2
     f98:	str	r3, [fp, #-24]	; 0xffffffe8
     f9c:	b	1b60 <set_start_bits+0xc50>
     fa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fa4:	ldrb	r3, [r3]
     fa8:	cmp	r3, #161	; 0xa1
     fac:	ldrls	pc, [pc, r3, lsl #2]
     fb0:	b	123c <set_start_bits+0x32c>
     fb4:	.word	0x00001244
     fb8:	.word	0x00001244
     fbc:	.word	0x00001244
     fc0:	.word	0x00001244
     fc4:	.word	0x00001318
     fc8:	.word	0x00001318
     fcc:	.word	0x0000175c
     fd0:	.word	0x0000177c
     fd4:	.word	0x0000179c
     fd8:	.word	0x000017bc
     fdc:	.word	0x000017dc
     fe0:	.word	0x000017fc
     fe4:	.word	0x00001244
     fe8:	.word	0x00001244
     fec:	.word	0x00001244
     ff0:	.word	0x00001244
     ff4:	.word	0x0000124c
     ff8:	.word	0x000016b0
     ffc:	.word	0x00001244
    1000:	.word	0x00001644
    1004:	.word	0x00001244
    1008:	.word	0x000016b0
    100c:	.word	0x00001244
    1010:	.word	0x00001244
    1014:	.word	0x00001244
    1018:	.word	0x00001244
    101c:	.word	0x00001244
    1020:	.word	0x00001244
    1024:	.word	0x00001244
    1028:	.word	0x000015e0
    102c:	.word	0x00001618
    1030:	.word	0x00001244
    1034:	.word	0x00001244
    1038:	.word	0x00001534
    103c:	.word	0x00001534
    1040:	.word	0x000015e0
    1044:	.word	0x000015e0
    1048:	.word	0x00001534
    104c:	.word	0x00001534
    1050:	.word	0x00001584
    1054:	.word	0x00001584
    1058:	.word	0x000015d4
    105c:	.word	0x00001534
    1060:	.word	0x000015e0
    1064:	.word	0x00001534
    1068:	.word	0x00001584
    106c:	.word	0x0000155c
    1070:	.word	0x0000155c
    1074:	.word	0x00001618
    1078:	.word	0x00001618
    107c:	.word	0x0000155c
    1080:	.word	0x0000155c
    1084:	.word	0x000015ac
    1088:	.word	0x000015ac
    108c:	.word	0x0000160c
    1090:	.word	0x0000155c
    1094:	.word	0x00001618
    1098:	.word	0x0000155c
    109c:	.word	0x000015ac
    10a0:	.word	0x00001244
    10a4:	.word	0x00001244
    10a8:	.word	0x00001244
    10ac:	.word	0x00001244
    10b0:	.word	0x00001244
    10b4:	.word	0x00001244
    10b8:	.word	0x00001244
    10bc:	.word	0x00001244
    10c0:	.word	0x00001244
    10c4:	.word	0x00001244
    10c8:	.word	0x00001244
    10cc:	.word	0x00001244
    10d0:	.word	0x00001244
    10d4:	.word	0x00001244
    10d8:	.word	0x00001244
    10dc:	.word	0x00001244
    10e0:	.word	0x00001244
    10e4:	.word	0x00001244
    10e8:	.word	0x00001244
    10ec:	.word	0x00001244
    10f0:	.word	0x00001244
    10f4:	.word	0x00001244
    10f8:	.word	0x00001244
    10fc:	.word	0x00001244
    1100:	.word	0x00001244
    1104:	.word	0x00001244
    1108:	.word	0x00001848
    110c:	.word	0x00001848
    1110:	.word	0x0000181c
    1114:	.word	0x0000181c
    1118:	.word	0x00001848
    111c:	.word	0x00001848
    1120:	.word	0x0000183c
    1124:	.word	0x0000183c
    1128:	.word	0x0000182c
    112c:	.word	0x00001848
    1130:	.word	0x0000181c
    1134:	.word	0x00001848
    1138:	.word	0x0000183c
    113c:	.word	0x0000123c
    1140:	.word	0x0000123c
    1144:	.word	0x0000123c
    1148:	.word	0x0000123c
    114c:	.word	0x0000123c
    1150:	.word	0x0000123c
    1154:	.word	0x0000123c
    1158:	.word	0x0000123c
    115c:	.word	0x0000123c
    1160:	.word	0x0000123c
    1164:	.word	0x0000123c
    1168:	.word	0x0000123c
    116c:	.word	0x00001a54
    1170:	.word	0x00001a54
    1174:	.word	0x0000123c
    1178:	.word	0x00001244
    117c:	.word	0x00001244
    1180:	.word	0x00001244
    1184:	.word	0x00001244
    1188:	.word	0x00001244
    118c:	.word	0x000013e4
    1190:	.word	0x000013c8
    1194:	.word	0x000013dc
    1198:	.word	0x000013dc
    119c:	.word	0x000013dc
    11a0:	.word	0x000013dc
    11a4:	.word	0x00001244
    11a8:	.word	0x00001328
    11ac:	.word	0x000013f4
    11b0:	.word	0x000013f4
    11b4:	.word	0x000013f4
    11b8:	.word	0x00001328
    11bc:	.word	0x00001328
    11c0:	.word	0x00001328
    11c4:	.word	0x00001328
    11c8:	.word	0x00001328
    11cc:	.word	0x00001328
    11d0:	.word	0x00001244
    11d4:	.word	0x00001328
    11d8:	.word	0x00001328
    11dc:	.word	0x00001328
    11e0:	.word	0x00001328
    11e4:	.word	0x00001244
    11e8:	.word	0x00001244
    11ec:	.word	0x00001244
    11f0:	.word	0x00001244
    11f4:	.word	0x00001244
    11f8:	.word	0x00001244
    11fc:	.word	0x00001444
    1200:	.word	0x00001444
    1204:	.word	0x00001444
    1208:	.word	0x00001244
    120c:	.word	0x00001244
    1210:	.word	0x00001244
    1214:	.word	0x00001244
    1218:	.word	0x00001244
    121c:	.word	0x00001244
    1220:	.word	0x00001244
    1224:	.word	0x00001244
    1228:	.word	0x00001244
    122c:	.word	0x00001244
    1230:	.word	0x00001244
    1234:	.word	0x00001244
    1238:	.word	0x000014d8
    123c:	mov	r3, #3
    1240:	b	1bb0 <set_start_bits+0xca0>
    1244:	mov	r3, #0
    1248:	b	1bb0 <set_start_bits+0xca0>
    124c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1250:	add	r3, r3, #1
    1254:	ldrb	r3, [r3]
    1258:	cmp	r3, #9
    125c:	beq	1268 <set_start_bits+0x358>
    1260:	mov	r3, #0
    1264:	b	1bb0 <set_start_bits+0xca0>
    1268:	ldr	r3, [fp, #-24]	; 0xffffffe8
    126c:	add	r3, r3, #2
    1270:	ldrb	r3, [r3]
    1274:	lsl	r3, r3, #2
    1278:	ldr	r2, [pc, #2364]	; 1bbc <set_start_bits+0xcac>
    127c:	add	r3, r3, r2
    1280:	str	r3, [fp, #-28]	; 0xffffffe4
    1284:	b	12f4 <set_start_bits+0x3e4>
    1288:	cmp	r4, #255	; 0xff
    128c:	bls	12b8 <set_start_bits+0x3a8>
    1290:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1294:	add	r2, r3, #31
    1298:	ldr	r3, [fp, #-52]	; 0xffffffcc
    129c:	add	r3, r3, #31
    12a0:	ldrb	r3, [r3]
    12a4:	mvn	r3, r3, lsl #25
    12a8:	mvn	r3, r3, lsr #25
    12ac:	uxtb	r3, r3
    12b0:	strb	r3, [r2]
    12b4:	b	12f4 <set_start_bits+0x3e4>
    12b8:	lsr	r3, r4, #3
    12bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
    12c0:	add	r2, r2, r3
    12c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
    12c8:	add	r3, r1, r3
    12cc:	ldrb	r3, [r3]
    12d0:	sxtb	r1, r3
    12d4:	and	r3, r4, #7
    12d8:	mov	r0, #1
    12dc:	lsl	r3, r0, r3
    12e0:	sxtb	r3, r3
    12e4:	orr	r3, r1, r3
    12e8:	sxtb	r3, r3
    12ec:	uxtb	r3, r3
    12f0:	strb	r3, [r2]
    12f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12f8:	add	r2, r3, #4
    12fc:	str	r2, [fp, #-28]	; 0xffffffe4
    1300:	ldr	r4, [r3]
    1304:	cmn	r4, #1
    1308:	bne	1288 <set_start_bits+0x378>
    130c:	mov	r3, #0
    1310:	str	r3, [fp, #-20]	; 0xffffffec
    1314:	b	1b60 <set_start_bits+0xc50>
    1318:	ldr	r3, [fp, #-24]	; 0xffffffe8
    131c:	add	r3, r3, #1
    1320:	str	r3, [fp, #-24]	; 0xffffffe8
    1324:	b	1b60 <set_start_bits+0xc50>
    1328:	ldr	r3, [fp, #-60]	; 0xffffffc4
    132c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1330:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1334:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1338:	bl	f10 <set_start_bits>
    133c:	str	r0, [fp, #-36]	; 0xffffffdc
    1340:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1344:	cmp	r3, #0
    1348:	beq	1358 <set_start_bits+0x448>
    134c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1350:	cmp	r3, #3
    1354:	bne	1360 <set_start_bits+0x450>
    1358:	ldr	r3, [fp, #-36]	; 0xffffffdc
    135c:	b	1bb0 <set_start_bits+0xca0>
    1360:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1364:	cmp	r3, #1
    1368:	bne	1378 <set_start_bits+0x468>
    136c:	mov	r3, #0
    1370:	str	r3, [fp, #-20]	; 0xffffffec
    1374:	b	1b60 <set_start_bits+0xc50>
    1378:	ldr	r3, [fp, #-24]	; 0xffffffe8
    137c:	add	r3, r3, #1
    1380:	ldrb	r3, [r3]
    1384:	lsl	r3, r3, #8
    1388:	ldr	r2, [fp, #-24]	; 0xffffffe8
    138c:	add	r2, r2, #2
    1390:	ldrb	r2, [r2]
    1394:	orr	r3, r3, r2
    1398:	mov	r2, r3
    139c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13a0:	add	r3, r3, r2
    13a4:	str	r3, [fp, #-24]	; 0xffffffe8
    13a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13ac:	ldrb	r3, [r3]
    13b0:	cmp	r3, #119	; 0x77
    13b4:	beq	1378 <set_start_bits+0x468>
    13b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13bc:	add	r3, r3, #3
    13c0:	str	r3, [fp, #-24]	; 0xffffffe8
    13c4:	b	1b60 <set_start_bits+0xc50>
    13c8:	mov	r3, #2
    13cc:	str	r3, [fp, #-16]
    13d0:	mov	r3, #0
    13d4:	str	r3, [fp, #-20]	; 0xffffffec
    13d8:	b	1b60 <set_start_bits+0xc50>
    13dc:	mov	r3, #2
    13e0:	b	1bb0 <set_start_bits+0xca0>
    13e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13e8:	add	r3, r3, #6
    13ec:	str	r3, [fp, #-24]	; 0xffffffe8
    13f0:	b	1b60 <set_start_bits+0xc50>
    13f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    13f8:	add	r3, r3, #1
    13fc:	ldrb	r3, [r3]
    1400:	lsl	r3, r3, #8
    1404:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1408:	add	r2, r2, #2
    140c:	ldrb	r2, [r2]
    1410:	orr	r3, r3, r2
    1414:	mov	r2, r3
    1418:	ldr	r3, [fp, #-24]	; 0xffffffe8
    141c:	add	r3, r3, r2
    1420:	str	r3, [fp, #-24]	; 0xffffffe8
    1424:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1428:	ldrb	r3, [r3]
    142c:	cmp	r3, #119	; 0x77
    1430:	beq	13f4 <set_start_bits+0x4e4>
    1434:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1438:	add	r3, r3, #3
    143c:	str	r3, [fp, #-24]	; 0xffffffe8
    1440:	b	1b60 <set_start_bits+0xc50>
    1444:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1448:	add	r3, r3, #1
    144c:	str	r3, [fp, #-24]	; 0xffffffe8
    1450:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1454:	ldr	r2, [fp, #-56]	; 0xffffffc8
    1458:	ldr	r1, [fp, #-52]	; 0xffffffcc
    145c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1460:	bl	f10 <set_start_bits>
    1464:	str	r0, [fp, #-36]	; 0xffffffdc
    1468:	ldr	r3, [fp, #-36]	; 0xffffffdc
    146c:	cmp	r3, #0
    1470:	beq	1480 <set_start_bits+0x570>
    1474:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1478:	cmp	r3, #3
    147c:	bne	1488 <set_start_bits+0x578>
    1480:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1484:	b	1bb0 <set_start_bits+0xca0>
    1488:	ldr	r3, [fp, #-24]	; 0xffffffe8
    148c:	add	r3, r3, #1
    1490:	ldrb	r3, [r3]
    1494:	lsl	r3, r3, #8
    1498:	ldr	r2, [fp, #-24]	; 0xffffffe8
    149c:	add	r2, r2, #2
    14a0:	ldrb	r2, [r2]
    14a4:	orr	r3, r3, r2
    14a8:	mov	r2, r3
    14ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14b0:	add	r3, r3, r2
    14b4:	str	r3, [fp, #-24]	; 0xffffffe8
    14b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14bc:	ldrb	r3, [r3]
    14c0:	cmp	r3, #119	; 0x77
    14c4:	beq	1488 <set_start_bits+0x578>
    14c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14cc:	add	r3, r3, #3
    14d0:	str	r3, [fp, #-24]	; 0xffffffe8
    14d4:	b	1b60 <set_start_bits+0xc50>
    14d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14dc:	add	r3, r3, #1
    14e0:	str	r3, [fp, #-24]	; 0xffffffe8
    14e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14e8:	add	r3, r3, #1
    14ec:	ldrb	r3, [r3]
    14f0:	lsl	r3, r3, #8
    14f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    14f8:	add	r2, r2, #2
    14fc:	ldrb	r2, [r2]
    1500:	orr	r3, r3, r2
    1504:	mov	r2, r3
    1508:	ldr	r3, [fp, #-24]	; 0xffffffe8
    150c:	add	r3, r3, r2
    1510:	str	r3, [fp, #-24]	; 0xffffffe8
    1514:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1518:	ldrb	r3, [r3]
    151c:	cmp	r3, #119	; 0x77
    1520:	beq	14e4 <set_start_bits+0x5d4>
    1524:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1528:	add	r3, r3, #3
    152c:	str	r3, [fp, #-24]	; 0xffffffe8
    1530:	b	1b60 <set_start_bits+0xc50>
    1534:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1538:	add	r1, r3, #1
    153c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1540:	str	r3, [sp]
    1544:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1548:	mov	r2, #0
    154c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1550:	bl	cc8 <set_table_bit>
    1554:	str	r0, [fp, #-24]	; 0xffffffe8
    1558:	b	1b60 <set_start_bits+0xc50>
    155c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1560:	add	r1, r3, #1
    1564:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1568:	str	r3, [sp]
    156c:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1570:	mov	r2, #1
    1574:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1578:	bl	cc8 <set_table_bit>
    157c:	str	r0, [fp, #-24]	; 0xffffffe8
    1580:	b	1b60 <set_start_bits+0xc50>
    1584:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1588:	add	r1, r3, #3
    158c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1590:	str	r3, [sp]
    1594:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1598:	mov	r2, #0
    159c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    15a0:	bl	cc8 <set_table_bit>
    15a4:	str	r0, [fp, #-24]	; 0xffffffe8
    15a8:	b	1b60 <set_start_bits+0xc50>
    15ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15b0:	add	r1, r3, #3
    15b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15b8:	str	r3, [sp]
    15bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    15c0:	mov	r2, #1
    15c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    15c8:	bl	cc8 <set_table_bit>
    15cc:	str	r0, [fp, #-24]	; 0xffffffe8
    15d0:	b	1b60 <set_start_bits+0xc50>
    15d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15d8:	add	r3, r3, #2
    15dc:	str	r3, [fp, #-24]	; 0xffffffe8
    15e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    15e4:	add	r1, r3, #1
    15e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    15ec:	str	r3, [sp]
    15f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    15f4:	mov	r2, #0
    15f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    15fc:	bl	cc8 <set_table_bit>
    1600:	mov	r3, #0
    1604:	str	r3, [fp, #-20]	; 0xffffffec
    1608:	b	1b60 <set_start_bits+0xc50>
    160c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1610:	add	r3, r3, #2
    1614:	str	r3, [fp, #-24]	; 0xffffffe8
    1618:	ldr	r3, [fp, #-24]	; 0xffffffe8
    161c:	add	r1, r3, #1
    1620:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1624:	str	r3, [sp]
    1628:	ldr	r3, [fp, #-60]	; 0xffffffc4
    162c:	mov	r2, #1
    1630:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1634:	bl	cc8 <set_table_bit>
    1638:	mov	r3, #0
    163c:	str	r3, [fp, #-20]	; 0xffffffec
    1640:	b	1b60 <set_start_bits+0xc50>
    1644:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1648:	add	r3, r3, #1
    164c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1650:	add	r2, r2, #1
    1654:	ldrb	r2, [r2]
    1658:	orr	r2, r2, #2
    165c:	uxtb	r2, r2
    1660:	strb	r2, [r3]
    1664:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1668:	add	r3, r3, #4
    166c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1670:	add	r2, r2, #4
    1674:	ldrb	r2, [r2]
    1678:	orr	r2, r2, #1
    167c:	uxtb	r2, r2
    1680:	strb	r2, [r3]
    1684:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1688:	add	r3, r3, #20
    168c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1690:	add	r2, r2, #20
    1694:	ldrb	r2, [r2]
    1698:	orr	r2, r2, #1
    169c:	uxtb	r2, r2
    16a0:	strb	r2, [r3]
    16a4:	mov	r3, #0
    16a8:	str	r3, [fp, #-20]	; 0xffffffec
    16ac:	b	1b60 <set_start_bits+0xc50>
    16b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16b4:	add	r3, r3, #1
    16b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    16bc:	add	r2, r2, #1
    16c0:	ldrb	r2, [r2]
    16c4:	orr	r2, r2, #4
    16c8:	uxtb	r2, r2
    16cc:	strb	r2, [r3]
    16d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16d4:	add	r3, r3, #1
    16d8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    16dc:	add	r2, r2, #1
    16e0:	ldrb	r2, [r2]
    16e4:	orr	r2, r2, #8
    16e8:	uxtb	r2, r2
    16ec:	strb	r2, [r3]
    16f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    16f4:	add	r3, r3, #1
    16f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    16fc:	add	r2, r2, #1
    1700:	ldrb	r2, [r2]
    1704:	orr	r2, r2, #16
    1708:	uxtb	r2, r2
    170c:	strb	r2, [r3]
    1710:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1714:	add	r3, r3, #1
    1718:	ldr	r2, [fp, #-52]	; 0xffffffcc
    171c:	add	r2, r2, #1
    1720:	ldrb	r2, [r2]
    1724:	orr	r2, r2, #32
    1728:	uxtb	r2, r2
    172c:	strb	r2, [r3]
    1730:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1734:	add	r3, r3, #16
    1738:	ldr	r2, [fp, #-52]	; 0xffffffcc
    173c:	add	r2, r2, #16
    1740:	ldrb	r2, [r2]
    1744:	orr	r2, r2, #32
    1748:	uxtb	r2, r2
    174c:	strb	r2, [r3]
    1750:	mov	r3, #0
    1754:	str	r3, [fp, #-20]	; 0xffffffec
    1758:	b	1b60 <set_start_bits+0xc50>
    175c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1760:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1764:	mov	r1, #64	; 0x40
    1768:	ldr	r0, [fp, #-52]	; 0xffffffcc
    176c:	bl	e80 <set_nottype_bits>
    1770:	mov	r3, #0
    1774:	str	r3, [fp, #-20]	; 0xffffffec
    1778:	b	1b60 <set_start_bits+0xc50>
    177c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1780:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1784:	mov	r1, #64	; 0x40
    1788:	ldr	r0, [fp, #-52]	; 0xffffffcc
    178c:	bl	e04 <set_type_bits>
    1790:	mov	r3, #0
    1794:	str	r3, [fp, #-20]	; 0xffffffec
    1798:	b	1b60 <set_start_bits+0xc50>
    179c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    17a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17a4:	mov	r1, #0
    17a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    17ac:	bl	e80 <set_nottype_bits>
    17b0:	mov	r3, #0
    17b4:	str	r3, [fp, #-20]	; 0xffffffec
    17b8:	b	1b60 <set_start_bits+0xc50>
    17bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    17c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17c4:	mov	r1, #0
    17c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    17cc:	bl	e04 <set_type_bits>
    17d0:	mov	r3, #0
    17d4:	str	r3, [fp, #-20]	; 0xffffffec
    17d8:	b	1b60 <set_start_bits+0xc50>
    17dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    17e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    17e4:	mov	r1, #160	; 0xa0
    17e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    17ec:	bl	e80 <set_nottype_bits>
    17f0:	mov	r3, #0
    17f4:	str	r3, [fp, #-20]	; 0xffffffec
    17f8:	b	1b60 <set_start_bits+0xc50>
    17fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1800:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1804:	mov	r1, #160	; 0xa0
    1808:	ldr	r0, [fp, #-52]	; 0xffffffcc
    180c:	bl	e04 <set_type_bits>
    1810:	mov	r3, #0
    1814:	str	r3, [fp, #-20]	; 0xffffffec
    1818:	b	1b60 <set_start_bits+0xc50>
    181c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1820:	add	r3, r3, #1
    1824:	str	r3, [fp, #-24]	; 0xffffffe8
    1828:	b	1b60 <set_start_bits+0xc50>
    182c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1830:	add	r3, r3, #3
    1834:	str	r3, [fp, #-24]	; 0xffffffe8
    1838:	b	1b60 <set_start_bits+0xc50>
    183c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1840:	add	r3, r3, #2
    1844:	str	r3, [fp, #-24]	; 0xffffffe8
    1848:	ldr	r3, [fp, #-24]	; 0xffffffe8
    184c:	add	r3, r3, #1
    1850:	ldrb	r3, [r3]
    1854:	sub	r3, r3, #6
    1858:	cmp	r3, #15
    185c:	ldrls	pc, [pc, r3, lsl #2]
    1860:	b	18a4 <set_start_bits+0x994>
    1864:	.word	0x000019b4
    1868:	.word	0x000019cc
    186c:	.word	0x000019e4
    1870:	.word	0x000019fc
    1874:	.word	0x00001a14
    1878:	.word	0x00001a2c
    187c:	.word	0x000018a4
    1880:	.word	0x000018a4
    1884:	.word	0x000018a4
    1888:	.word	0x000018a4
    188c:	.word	0x000018a4
    1890:	.word	0x00001910
    1894:	.word	0x000018a4
    1898:	.word	0x000018ac
    189c:	.word	0x000018a4
    18a0:	.word	0x00001910
    18a4:	mov	r3, #0
    18a8:	b	1bb0 <set_start_bits+0xca0>
    18ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
    18b0:	add	r3, r3, #1
    18b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    18b8:	add	r2, r2, #1
    18bc:	ldrb	r2, [r2]
    18c0:	orr	r2, r2, #2
    18c4:	uxtb	r2, r2
    18c8:	strb	r2, [r3]
    18cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    18d0:	add	r3, r3, #4
    18d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    18d8:	add	r2, r2, #4
    18dc:	ldrb	r2, [r2]
    18e0:	orr	r2, r2, #1
    18e4:	uxtb	r2, r2
    18e8:	strb	r2, [r3]
    18ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    18f0:	add	r3, r3, #20
    18f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    18f8:	add	r2, r2, #20
    18fc:	ldrb	r2, [r2]
    1900:	orr	r2, r2, #1
    1904:	uxtb	r2, r2
    1908:	strb	r2, [r3]
    190c:	b	1a44 <set_start_bits+0xb34>
    1910:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1914:	add	r3, r3, #1
    1918:	ldr	r2, [fp, #-52]	; 0xffffffcc
    191c:	add	r2, r2, #1
    1920:	ldrb	r2, [r2]
    1924:	orr	r2, r2, #4
    1928:	uxtb	r2, r2
    192c:	strb	r2, [r3]
    1930:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1934:	add	r3, r3, #1
    1938:	ldr	r2, [fp, #-52]	; 0xffffffcc
    193c:	add	r2, r2, #1
    1940:	ldrb	r2, [r2]
    1944:	orr	r2, r2, #8
    1948:	uxtb	r2, r2
    194c:	strb	r2, [r3]
    1950:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1954:	add	r3, r3, #1
    1958:	ldr	r2, [fp, #-52]	; 0xffffffcc
    195c:	add	r2, r2, #1
    1960:	ldrb	r2, [r2]
    1964:	orr	r2, r2, #16
    1968:	uxtb	r2, r2
    196c:	strb	r2, [r3]
    1970:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1974:	add	r3, r3, #1
    1978:	ldr	r2, [fp, #-52]	; 0xffffffcc
    197c:	add	r2, r2, #1
    1980:	ldrb	r2, [r2]
    1984:	orr	r2, r2, #32
    1988:	uxtb	r2, r2
    198c:	strb	r2, [r3]
    1990:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1994:	add	r3, r3, #16
    1998:	ldr	r2, [fp, #-52]	; 0xffffffcc
    199c:	add	r2, r2, #16
    19a0:	ldrb	r2, [r2]
    19a4:	orr	r2, r2, #32
    19a8:	uxtb	r2, r2
    19ac:	strb	r2, [r3]
    19b0:	b	1a44 <set_start_bits+0xb34>
    19b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    19b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    19bc:	mov	r1, #64	; 0x40
    19c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    19c4:	bl	e80 <set_nottype_bits>
    19c8:	b	1a44 <set_start_bits+0xb34>
    19cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    19d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    19d4:	mov	r1, #64	; 0x40
    19d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    19dc:	bl	e04 <set_type_bits>
    19e0:	b	1a44 <set_start_bits+0xb34>
    19e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    19e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
    19ec:	mov	r1, #0
    19f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    19f4:	bl	e80 <set_nottype_bits>
    19f8:	b	1a44 <set_start_bits+0xb34>
    19fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a00:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a04:	mov	r1, #0
    1a08:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a0c:	bl	e04 <set_type_bits>
    1a10:	b	1a44 <set_start_bits+0xb34>
    1a14:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a18:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a1c:	mov	r1, #160	; 0xa0
    1a20:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a24:	bl	e80 <set_nottype_bits>
    1a28:	b	1a44 <set_start_bits+0xb34>
    1a2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1a30:	ldr	r3, [fp, #-60]	; 0xffffffc4
    1a34:	mov	r1, #160	; 0xa0
    1a38:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1a3c:	bl	e04 <set_type_bits>
    1a40:	nop			; (mov r0, r0)
    1a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a48:	add	r3, r3, #2
    1a4c:	str	r3, [fp, #-24]	; 0xffffffe8
    1a50:	b	1b60 <set_start_bits+0xc50>
    1a54:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a58:	add	r3, r3, #1
    1a5c:	str	r3, [fp, #-24]	; 0xffffffe8
    1a60:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a64:	str	r3, [fp, #-40]	; 0xffffffd8
    1a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a6c:	add	r3, r3, #32
    1a70:	str	r3, [fp, #-24]	; 0xffffffe8
    1a74:	mov	r4, #0
    1a78:	b	1aac <set_start_bits+0xb9c>
    1a7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1a80:	add	r3, r3, r4
    1a84:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1a88:	add	r2, r2, r4
    1a8c:	ldrb	r1, [r2]
    1a90:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1a94:	add	r2, r2, r4
    1a98:	ldrb	r2, [r2]
    1a9c:	orr	r2, r1, r2
    1aa0:	uxtb	r2, r2
    1aa4:	strb	r2, [r3]
    1aa8:	add	r4, r4, #1
    1aac:	cmp	r4, #31
    1ab0:	bls	1a7c <set_start_bits+0xb6c>
    1ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1ab8:	ldrb	r3, [r3]
    1abc:	sub	r3, r3, #98	; 0x62
    1ac0:	cmp	r3, #11
    1ac4:	ldrls	pc, [pc, r3, lsl #2]
    1ac8:	b	1b50 <set_start_bits+0xc40>
    1acc:	.word	0x00001afc
    1ad0:	.word	0x00001afc
    1ad4:	.word	0x00001b50
    1ad8:	.word	0x00001b50
    1adc:	.word	0x00001afc
    1ae0:	.word	0x00001afc
    1ae4:	.word	0x00001b0c
    1ae8:	.word	0x00001b0c
    1aec:	.word	0x00001afc
    1af0:	.word	0x00001b50
    1af4:	.word	0x00001afc
    1af8:	.word	0x00001b0c
    1afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b00:	add	r3, r3, #1
    1b04:	str	r3, [fp, #-24]	; 0xffffffe8
    1b08:	b	1b5c <set_start_bits+0xc4c>
    1b0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b10:	add	r3, r3, #1
    1b14:	ldrb	r3, [r3]
    1b18:	lsl	r3, r3, #8
    1b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1b20:	add	r2, r2, #2
    1b24:	ldrb	r2, [r2]
    1b28:	orr	r3, r3, r2
    1b2c:	cmp	r3, #0
    1b30:	bne	1b44 <set_start_bits+0xc34>
    1b34:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1b38:	add	r3, r3, #5
    1b3c:	str	r3, [fp, #-24]	; 0xffffffe8
    1b40:	b	1b5c <set_start_bits+0xc4c>
    1b44:	mov	r3, #0
    1b48:	str	r3, [fp, #-20]	; 0xffffffec
    1b4c:	b	1b5c <set_start_bits+0xc4c>
    1b50:	mov	r3, #0
    1b54:	str	r3, [fp, #-20]	; 0xffffffec
    1b58:	nop			; (mov r0, r0)
    1b5c:	nop			; (mov r0, r0)
    1b60:	ldr	r3, [fp, #-20]	; 0xffffffec
    1b64:	cmp	r3, #0
    1b68:	bne	fa0 <set_start_bits+0x90>
    1b6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1b70:	add	r3, r3, #1
    1b74:	ldrb	r3, [r3]
    1b78:	lsl	r3, r3, #8
    1b7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    1b80:	add	r2, r2, #2
    1b84:	ldrb	r2, [r2]
    1b88:	orr	r3, r3, r2
    1b8c:	mov	r2, r3
    1b90:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1b94:	add	r3, r3, r2
    1b98:	str	r3, [fp, #-48]	; 0xffffffd0
    1b9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1ba0:	ldrb	r3, [r3]
    1ba4:	cmp	r3, #119	; 0x77
    1ba8:	beq	f3c <set_start_bits+0x2c>
    1bac:	ldr	r3, [fp, #-16]
    1bb0:	mov	r0, r3
    1bb4:	sub	sp, fp, #8
    1bb8:	pop	{r4, fp, pc}
    1bbc:	.word	0x00000000

00001bc0 <coda_pcre_study>:
    1bc0:	push	{fp, lr}
    1bc4:	add	fp, sp, #4
    1bc8:	sub	sp, sp, #240	; 0xf0
    1bcc:	str	r0, [fp, #-224]	; 0xffffff20
    1bd0:	str	r1, [fp, #-228]	; 0xffffff1c
    1bd4:	str	r2, [fp, #-232]	; 0xffffff18
    1bd8:	mov	r3, #0
    1bdc:	str	r3, [fp, #-36]	; 0xffffffdc
    1be0:	mov	r3, #0
    1be4:	str	r3, [fp, #-8]
    1be8:	mov	r3, #0
    1bec:	str	r3, [fp, #-12]
    1bf0:	ldr	r3, [fp, #-224]	; 0xffffff20
    1bf4:	str	r3, [fp, #-16]
    1bf8:	ldr	r3, [fp, #-232]	; 0xffffff18
    1bfc:	mov	r2, #0
    1c00:	str	r2, [r3]
    1c04:	ldr	r3, [fp, #-16]
    1c08:	cmp	r3, #0
    1c0c:	beq	1c24 <coda_pcre_study+0x64>
    1c10:	ldr	r3, [fp, #-16]
    1c14:	ldr	r3, [r3]
    1c18:	ldr	r2, [pc, #872]	; 1f88 <coda_pcre_study+0x3c8>
    1c1c:	cmp	r3, r2
    1c20:	beq	1c38 <coda_pcre_study+0x78>
    1c24:	ldr	r3, [fp, #-232]	; 0xffffff18
    1c28:	ldr	r2, [pc, #860]	; 1f8c <coda_pcre_study+0x3cc>
    1c2c:	str	r2, [r3]
    1c30:	mov	r3, #0
    1c34:	b	1f7c <coda_pcre_study+0x3bc>
    1c38:	ldr	r3, [fp, #-16]
    1c3c:	ldr	r3, [r3, #12]
    1c40:	and	r3, r3, #1
    1c44:	cmp	r3, #0
    1c48:	bne	1c60 <coda_pcre_study+0xa0>
    1c4c:	ldr	r3, [fp, #-232]	; 0xffffff18
    1c50:	ldr	r2, [pc, #824]	; 1f90 <coda_pcre_study+0x3d0>
    1c54:	str	r2, [r3]
    1c58:	mov	r3, #0
    1c5c:	b	1f7c <coda_pcre_study+0x3bc>
    1c60:	ldr	r3, [fp, #-228]	; 0xffffff1c
    1c64:	bic	r3, r3, #15
    1c68:	cmp	r3, #0
    1c6c:	beq	1c84 <coda_pcre_study+0xc4>
    1c70:	ldr	r3, [fp, #-232]	; 0xffffff18
    1c74:	ldr	r2, [pc, #792]	; 1f94 <coda_pcre_study+0x3d4>
    1c78:	str	r2, [r3]
    1c7c:	mov	r3, #0
    1c80:	b	1f7c <coda_pcre_study+0x3bc>
    1c84:	ldr	r3, [fp, #-16]
    1c88:	ldrh	r3, [r3, #34]	; 0x22
    1c8c:	mov	r2, r3
    1c90:	ldr	r3, [fp, #-16]
    1c94:	ldrh	r3, [r3, #38]	; 0x26
    1c98:	mov	r1, r3
    1c9c:	ldr	r3, [fp, #-16]
    1ca0:	ldrh	r3, [r3, #36]	; 0x24
    1ca4:	mul	r3, r3, r1
    1ca8:	add	r3, r2, r3
    1cac:	ldr	r2, [fp, #-16]
    1cb0:	add	r3, r2, r3
    1cb4:	str	r3, [fp, #-20]	; 0xffffffec
    1cb8:	ldr	r3, [fp, #-16]
    1cbc:	ldr	r3, [r3, #8]
    1cc0:	and	r3, r3, #16
    1cc4:	cmp	r3, #0
    1cc8:	bne	1db8 <coda_pcre_study+0x1f8>
    1ccc:	ldr	r3, [fp, #-16]
    1cd0:	ldr	r3, [r3, #12]
    1cd4:	and	r3, r3, #272	; 0x110
    1cd8:	cmp	r3, #0
    1cdc:	bne	1db8 <coda_pcre_study+0x1f8>
    1ce0:	ldr	r3, [fp, #-16]
    1ce4:	ldr	r3, [r3, #48]	; 0x30
    1ce8:	str	r3, [fp, #-72]	; 0xffffffb8
    1cec:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1cf0:	cmp	r3, #0
    1cf4:	bne	1d0c <coda_pcre_study+0x14c>
    1cf8:	sub	r3, fp, #72	; 0x48
    1cfc:	mov	r2, #11
    1d00:	mov	r1, #0
    1d04:	ldr	r0, [fp, #-224]	; 0xffffff20
    1d08:	bl	0 <coda_pcre_fullinfo>
    1d0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d10:	str	r3, [fp, #-216]	; 0xffffff28
    1d14:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d18:	add	r3, r3, #256	; 0x100
    1d1c:	str	r3, [fp, #-212]	; 0xffffff2c
    1d20:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d24:	add	r3, r3, #512	; 0x200
    1d28:	str	r3, [fp, #-208]	; 0xffffff30
    1d2c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    1d30:	add	r3, r3, #832	; 0x340
    1d34:	str	r3, [fp, #-204]	; 0xffffff34
    1d38:	sub	r3, fp, #68	; 0x44
    1d3c:	mov	r2, #32
    1d40:	mov	r1, #0
    1d44:	mov	r0, r3
    1d48:	bl	0 <memset>
    1d4c:	ldr	r3, [fp, #-16]
    1d50:	ldr	r3, [r3, #8]
    1d54:	and	r3, r3, #2048	; 0x800
    1d58:	cmp	r3, #0
    1d5c:	movne	r3, #1
    1d60:	moveq	r3, #0
    1d64:	uxtb	r3, r3
    1d68:	mov	r2, r3
    1d6c:	sub	r3, fp, #216	; 0xd8
    1d70:	sub	r1, fp, #68	; 0x44
    1d74:	ldr	r0, [fp, #-20]	; 0xffffffec
    1d78:	bl	f10 <set_start_bits>
    1d7c:	str	r0, [fp, #-24]	; 0xffffffe8
    1d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d84:	cmp	r3, #1
    1d88:	moveq	r3, #1
    1d8c:	movne	r3, #0
    1d90:	uxtb	r3, r3
    1d94:	str	r3, [fp, #-8]
    1d98:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1d9c:	cmp	r3, #3
    1da0:	bne	1db8 <coda_pcre_study+0x1f8>
    1da4:	ldr	r3, [fp, #-232]	; 0xffffff18
    1da8:	ldr	r2, [pc, #488]	; 1f98 <coda_pcre_study+0x3d8>
    1dac:	str	r2, [r3]
    1db0:	mov	r3, #0
    1db4:	b	1f7c <coda_pcre_study+0x3bc>
    1db8:	ldr	r3, [fp, #-16]
    1dbc:	ldr	r3, [r3, #8]
    1dc0:	mov	r2, r3
    1dc4:	sub	r3, fp, #36	; 0x24
    1dc8:	str	r3, [sp, #4]
    1dcc:	mov	r3, #0
    1dd0:	str	r3, [sp]
    1dd4:	mov	r3, r2
    1dd8:	ldr	r2, [fp, #-20]	; 0xffffffec
    1ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1de0:	ldr	r0, [fp, #-16]
    1de4:	bl	0 <find_minlength>
    1de8:	str	r0, [fp, #-28]	; 0xffffffe4
    1dec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1df0:	cmn	r3, #3
    1df4:	beq	1e28 <coda_pcre_study+0x268>
    1df8:	cmn	r3, #2
    1dfc:	beq	1e14 <coda_pcre_study+0x254>
    1e00:	nop			; (mov r0, r0)
    1e04:	ldr	r3, [fp, #-8]
    1e08:	cmp	r3, #0
    1e0c:	bne	1e58 <coda_pcre_study+0x298>
    1e10:	b	1e3c <coda_pcre_study+0x27c>
    1e14:	ldr	r3, [fp, #-232]	; 0xffffff18
    1e18:	ldr	r2, [pc, #380]	; 1f9c <coda_pcre_study+0x3dc>
    1e1c:	str	r2, [r3]
    1e20:	mov	r3, #0
    1e24:	b	1f7c <coda_pcre_study+0x3bc>
    1e28:	ldr	r3, [fp, #-232]	; 0xffffff18
    1e2c:	ldr	r2, [pc, #356]	; 1f98 <coda_pcre_study+0x3d8>
    1e30:	str	r2, [r3]
    1e34:	mov	r3, #0
    1e38:	b	1f7c <coda_pcre_study+0x3bc>
    1e3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1e40:	cmp	r3, #0
    1e44:	bgt	1e58 <coda_pcre_study+0x298>
    1e48:	ldr	r3, [fp, #-228]	; 0xffffff1c
    1e4c:	and	r3, r3, #8
    1e50:	cmp	r3, #0
    1e54:	beq	1f78 <coda_pcre_study+0x3b8>
    1e58:	ldr	r3, [pc, #320]	; 1fa0 <coda_pcre_study+0x3e0>
    1e5c:	ldr	r3, [r3]
    1e60:	mov	r0, #76	; 0x4c
    1e64:	blx	r3
    1e68:	str	r0, [fp, #-12]
    1e6c:	ldr	r3, [fp, #-12]
    1e70:	cmp	r3, #0
    1e74:	bne	1e8c <coda_pcre_study+0x2cc>
    1e78:	ldr	r3, [fp, #-232]	; 0xffffff18
    1e7c:	ldr	r2, [pc, #288]	; 1fa4 <coda_pcre_study+0x3e4>
    1e80:	str	r2, [r3]
    1e84:	mov	r3, #0
    1e88:	b	1f7c <coda_pcre_study+0x3bc>
    1e8c:	ldr	r3, [fp, #-12]
    1e90:	add	r3, r3, #32
    1e94:	str	r3, [fp, #-32]	; 0xffffffe0
    1e98:	ldr	r3, [fp, #-12]
    1e9c:	mov	r2, #1
    1ea0:	str	r2, [r3]
    1ea4:	ldr	r3, [fp, #-12]
    1ea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1eac:	str	r2, [r3, #4]
    1eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1eb4:	mov	r2, #44	; 0x2c
    1eb8:	str	r2, [r3]
    1ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ec0:	mov	r2, #0
    1ec4:	str	r2, [r3, #4]
    1ec8:	ldr	r3, [fp, #-8]
    1ecc:	cmp	r3, #0
    1ed0:	beq	1f24 <coda_pcre_study+0x364>
    1ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ed8:	ldr	r3, [r3, #4]
    1edc:	orr	r2, r3, #1
    1ee0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1ee4:	str	r2, [r3, #4]
    1ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1eec:	add	r3, r3, #8
    1ef0:	mov	lr, r3
    1ef4:	sub	ip, fp, #68	; 0x44
    1ef8:	ldm	ip!, {r0, r1, r2, r3}
    1efc:	str	r0, [lr]
    1f00:	str	r1, [lr, #4]
    1f04:	str	r2, [lr, #8]
    1f08:	str	r3, [lr, #12]
    1f0c:	ldm	ip!, {r0, r1, r2, r3}
    1f10:	str	r0, [lr, #16]
    1f14:	str	r1, [lr, #20]
    1f18:	str	r2, [lr, #24]
    1f1c:	str	r3, [lr, #28]
    1f20:	b	1f3c <coda_pcre_study+0x37c>
    1f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f28:	add	r3, r3, #8
    1f2c:	mov	r2, #32
    1f30:	mov	r1, #0
    1f34:	mov	r0, r3
    1f38:	bl	0 <memset>
    1f3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1f40:	cmp	r3, #0
    1f44:	ble	1f6c <coda_pcre_study+0x3ac>
    1f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f4c:	ldr	r3, [r3, #4]
    1f50:	orr	r2, r3, #2
    1f54:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f58:	str	r2, [r3, #4]
    1f5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1f60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f64:	str	r2, [r3, #40]	; 0x28
    1f68:	b	1f78 <coda_pcre_study+0x3b8>
    1f6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1f70:	mov	r2, #0
    1f74:	str	r2, [r3, #40]	; 0x28
    1f78:	ldr	r3, [fp, #-12]
    1f7c:	mov	r0, r3
    1f80:	sub	sp, fp, #4
    1f84:	pop	{fp, pc}
    1f88:	.word	0x50435245
    1f8c:	.word	0x00000000
    1f90:	.word	0x00000030
    1f94:	.word	0x00000054
    1f98:	.word	0x0000007c
    1f9c:	.word	0x000000a4
    1fa0:	.word	0x00000000
    1fa4:	.word	0x000000d0

00001fa8 <coda_pcre_free_study>:
    1fa8:	push	{fp, lr}
    1fac:	add	fp, sp, #4
    1fb0:	sub	sp, sp, #8
    1fb4:	str	r0, [fp, #-8]
    1fb8:	ldr	r3, [fp, #-8]
    1fbc:	cmp	r3, #0
    1fc0:	beq	1fd8 <coda_pcre_free_study+0x30>
    1fc4:	ldr	r3, [pc, #24]	; 1fe4 <coda_pcre_free_study+0x3c>
    1fc8:	ldr	r3, [r3]
    1fcc:	ldr	r0, [fp, #-8]
    1fd0:	blx	r3
    1fd4:	b	1fdc <coda_pcre_free_study+0x34>
    1fd8:	nop			; (mov r0, r0)
    1fdc:	sub	sp, fp, #4
    1fe0:	pop	{fp, pc}
    1fe4:	.word	0x00000000
