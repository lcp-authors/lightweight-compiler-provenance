
../compcert-repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

000109c0 <.init>:
   109c0:	push	{r3, lr}
   109c4:	bl	10b0c <_start@@Base+0x3c>
   109c8:	pop	{r3, pc}

Disassembly of section .plt:

000109cc <coda_match_filefilter@plt-0x14>:
   109cc:	push	{lr}		; (str lr, [sp, #-4]!)
   109d0:	ldr	lr, [pc, #4]	; 109dc <coda_match_filefilter@plt-0x4>
   109d4:	add	lr, pc, lr
   109d8:	ldr	pc, [lr, #8]!
   109dc:	andeq	r1, r1, r4, lsr #12

000109e0 <coda_match_filefilter@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1572]!	; 0x624

000109ec <strcmp@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1564]!	; 0x61c

000109f8 <printf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1556]!	; 0x614

00010a04 <coda_set_definition_path_conditional@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a10 <coda_set_definition_path@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1540]!	; 0x604

00010a1c <fwrite@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a28 <coda_done@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a40 <__libc_start_main@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a4c <__gmon_start__@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a58 <exit@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a64 <fprintf@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a70 <coda_init@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a7c <coda_set_option_perform_conversions@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a88 <putchar@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a94 <coda_errno_to_string@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1452]!	; 0x5ac

00010aa0 <coda_get_libcoda_version@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1444]!	; 0x5a4

00010aac <coda_get_errno@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1436]!	; 0x59c

00010ab8 <abort@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1428]!	; 0x594

00010ac4 <__assert_fail@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010ad0 <_start@@Base>:
   10ad0:	mov	fp, #0
   10ad4:	mov	lr, #0
   10ad8:	pop	{r1}		; (ldr r1, [sp], #4)
   10adc:	mov	r2, sp
   10ae0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ae4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ae8:	ldr	ip, [pc, #16]	; 10b00 <_start@@Base+0x30>
   10aec:	push	{ip}		; (str ip, [sp, #-4]!)
   10af0:	ldr	r0, [pc, #12]	; 10b04 <_start@@Base+0x34>
   10af4:	ldr	r3, [pc, #12]	; 10b08 <_start@@Base+0x38>
   10af8:	bl	10a40 <__libc_start_main@plt>
   10afc:	bl	10ab8 <abort@plt>
   10b00:	muleq	r1, r4, r1
   10b04:	andeq	r0, r1, r8, ror #25
   10b08:	andeq	r1, r1, r4, lsr r1
   10b0c:	ldr	r3, [pc, #20]	; 10b28 <_start@@Base+0x58>
   10b10:	ldr	r2, [pc, #20]	; 10b2c <_start@@Base+0x5c>
   10b14:	add	r3, pc, r3
   10b18:	ldr	r2, [r3, r2]
   10b1c:	cmp	r2, #0
   10b20:	bxeq	lr
   10b24:	b	10a4c <__gmon_start__@plt>
   10b28:	andeq	r1, r1, r4, ror #9
   10b2c:	andeq	r0, r0, ip, asr r0
   10b30:	ldr	r0, [pc, #24]	; 10b50 <_start@@Base+0x80>
   10b34:	ldr	r3, [pc, #24]	; 10b54 <_start@@Base+0x84>
   10b38:	cmp	r3, r0
   10b3c:	bxeq	lr
   10b40:	ldr	r3, [pc, #16]	; 10b58 <_start@@Base+0x88>
   10b44:	cmp	r3, #0
   10b48:	bxeq	lr
   10b4c:	bx	r3
   10b50:	andeq	r2, r2, r8, rrx
   10b54:	andeq	r2, r2, r8, rrx
   10b58:	andeq	r0, r0, r0
   10b5c:	ldr	r0, [pc, #36]	; 10b88 <_start@@Base+0xb8>
   10b60:	ldr	r1, [pc, #36]	; 10b8c <_start@@Base+0xbc>
   10b64:	sub	r1, r1, r0
   10b68:	asr	r1, r1, #2
   10b6c:	add	r1, r1, r1, lsr #31
   10b70:	asrs	r1, r1, #1
   10b74:	bxeq	lr
   10b78:	ldr	r3, [pc, #16]	; 10b90 <_start@@Base+0xc0>
   10b7c:	cmp	r3, #0
   10b80:	bxeq	lr
   10b84:	bx	r3
   10b88:	andeq	r2, r2, r8, rrx
   10b8c:	andeq	r2, r2, r8, rrx
   10b90:	andeq	r0, r0, r0
   10b94:	push	{r4, lr}
   10b98:	ldr	r4, [pc, #24]	; 10bb8 <_start@@Base+0xe8>
   10b9c:	ldrb	r3, [r4]
   10ba0:	cmp	r3, #0
   10ba4:	popne	{r4, pc}
   10ba8:	bl	10b30 <_start@@Base+0x60>
   10bac:	mov	r3, #1
   10bb0:	strb	r3, [r4]
   10bb4:	pop	{r4, pc}
   10bb8:	andeq	r2, r2, ip, rrx
   10bbc:	b	10b5c <_start@@Base+0x8c>

00010bc0 <callback@@Base>:
   10bc0:	push	{r4, sl, fp, lr}
   10bc4:	add	fp, sp, #8
   10bc8:	mov	r3, r2
   10bcc:	mov	r2, r0
   10bd0:	cmp	r1, #2
   10bd4:	beq	10c74 <callback@@Base+0xb4>
   10bd8:	mov	r4, r1
   10bdc:	cmp	r1, #1
   10be0:	beq	10ca8 <callback@@Base+0xe8>
   10be4:	cmp	r4, #0
   10be8:	beq	10c94 <callback@@Base+0xd4>
   10bec:	movw	r0, #8304	; 0x2070
   10bf0:	movt	r0, #2
   10bf4:	ldrb	r0, [r0]
   10bf8:	cmp	r0, #1
   10bfc:	bne	10c44 <callback@@Base+0x84>
   10c00:	movw	r0, #4586	; 0x11ea
   10c04:	mov	r1, r2
   10c08:	movt	r0, #1
   10c0c:	bl	109f8 <printf@plt>
   10c10:	cmp	r4, #5
   10c14:	bhi	10c6c <callback@@Base+0xac>
   10c18:	add	r0, pc, #0
   10c1c:	ldr	pc, [r0, r4, lsl #2]
   10c20:	andeq	r0, r1, r8, asr #25
   10c24:	andeq	r0, r1, ip, ror #24
   10c28:	andeq	r0, r1, ip, ror #24
   10c2c:	andeq	r0, r1, r8, lsr ip
   10c30:	andeq	r0, r1, r0, ror #24
   10c34:	andeq	r0, r1, r4, asr ip
   10c38:	movw	r0, #4928	; 0x1340
   10c3c:	movt	r0, #1
   10c40:	b	10c68 <callback@@Base+0xa8>
   10c44:	cmp	r4, #4
   10c48:	bne	10c6c <callback@@Base+0xac>
   10c4c:	mov	r0, r2
   10c50:	b	10c68 <callback@@Base+0xa8>
   10c54:	movw	r0, #4900	; 0x1324
   10c58:	movt	r0, #1
   10c5c:	b	10c68 <callback@@Base+0xa8>
   10c60:	movw	r0, #4903	; 0x1327
   10c64:	movt	r0, #1
   10c68:	bl	10a34 <puts@plt>
   10c6c:	mov	r0, #0
   10c70:	pop	{r4, sl, fp, pc}
   10c74:	movw	r0, #8296	; 0x2068
   10c78:	movw	r1, #4524	; 0x11ac
   10c7c:	movt	r0, #2
   10c80:	movt	r1, #1
   10c84:	ldr	r0, [r0]
   10c88:	bl	10a64 <fprintf@plt>
   10c8c:	mov	r0, #0
   10c90:	pop	{r4, sl, fp, pc}
   10c94:	movw	r0, #8296	; 0x2068
   10c98:	movw	r1, #4516	; 0x11a4
   10c9c:	movt	r0, #2
   10ca0:	movt	r1, #1
   10ca4:	b	10cb8 <callback@@Base+0xf8>
   10ca8:	movw	r0, #8296	; 0x2068
   10cac:	movw	r1, #4556	; 0x11cc
   10cb0:	movt	r0, #2
   10cb4:	movt	r1, #1
   10cb8:	ldr	r0, [r0]
   10cbc:	bl	10a64 <fprintf@plt>
   10cc0:	mov	r0, #0
   10cc4:	pop	{r4, sl, fp, pc}
   10cc8:	movw	r0, #4593	; 0x11f1
   10ccc:	movw	r1, #4595	; 0x11f3
   10cd0:	movw	r3, #4673	; 0x1241
   10cd4:	mov	r2, #110	; 0x6e
   10cd8:	movt	r0, #1
   10cdc:	movt	r1, #1
   10ce0:	movt	r3, #1
   10ce4:	bl	10ac4 <__assert_fail@plt>

00010ce8 <main@@Base>:
   10ce8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cec:	add	fp, sp, #28
   10cf0:	sub	sp, sp, #12
   10cf4:	mov	r5, r0
   10cf8:	mov	r4, r1
   10cfc:	movw	r1, #8304	; 0x2070
   10d00:	mov	r0, #0
   10d04:	movt	r1, #2
   10d08:	cmp	r5, #1
   10d0c:	strb	r0, [r1]
   10d10:	beq	10f60 <main@@Base+0x278>
   10d14:	ldr	r6, [r4, #4]
   10d18:	movw	r1, #4746	; 0x128a
   10d1c:	movt	r1, #1
   10d20:	mov	r0, r6
   10d24:	bl	109ec <strcmp@plt>
   10d28:	cmp	r0, #0
   10d2c:	beq	10f60 <main@@Base+0x278>
   10d30:	movw	r1, #4749	; 0x128d
   10d34:	mov	r0, r6
   10d38:	movt	r1, #1
   10d3c:	bl	109ec <strcmp@plt>
   10d40:	cmp	r0, #0
   10d44:	beq	10f60 <main@@Base+0x278>
   10d48:	movw	r1, #4756	; 0x1294
   10d4c:	mov	r0, r6
   10d50:	movt	r1, #1
   10d54:	bl	109ec <strcmp@plt>
   10d58:	cmp	r0, #0
   10d5c:	beq	10fa0 <main@@Base+0x2b8>
   10d60:	movw	r1, #4759	; 0x1297
   10d64:	mov	r0, r6
   10d68:	movt	r1, #1
   10d6c:	bl	109ec <strcmp@plt>
   10d70:	cmp	r0, #0
   10d74:	beq	10fa0 <main@@Base+0x2b8>
   10d78:	cmp	r5, #3
   10d7c:	blt	10d98 <main@@Base+0xb0>
   10d80:	movw	r1, #4769	; 0x12a1
   10d84:	mov	r0, r6
   10d88:	movt	r1, #1
   10d8c:	bl	109ec <strcmp@plt>
   10d90:	cmp	r0, #0
   10d94:	beq	10f18 <main@@Base+0x230>
   10d98:	ldr	r0, [r4]
   10d9c:	movw	r2, #4772	; 0x12a4
   10da0:	mov	r1, #0
   10da4:	movt	r2, #1
   10da8:	bl	10a04 <coda_set_definition_path_conditional@plt>
   10dac:	mov	sl, #1
   10db0:	cmp	r0, #0
   10db4:	bne	10f6c <main@@Base+0x284>
   10db8:	mov	r0, #0
   10dbc:	cmp	sl, r5
   10dc0:	bge	10ebc <main@@Base+0x1d4>
   10dc4:	movw	r6, #4809	; 0x12c9
   10dc8:	movw	r9, #4812	; 0x12cc
   10dcc:	mov	r7, #1
   10dd0:	str	r0, [sp, #8]
   10dd4:	movt	r6, #1
   10dd8:	movt	r9, #1
   10ddc:	b	10dec <main@@Base+0x104>
   10de0:	mov	sl, r0
   10de4:	str	r1, [sp, #8]
   10de8:	b	10eac <main@@Base+0x1c4>
   10dec:	ldr	r8, [r4, sl, lsl #2]
   10df0:	mov	r1, r6
   10df4:	mov	r0, r8
   10df8:	bl	109ec <strcmp@plt>
   10dfc:	cmp	r0, #0
   10e00:	beq	10ea8 <main@@Base+0x1c0>
   10e04:	mov	r0, r8
   10e08:	mov	r1, r9
   10e0c:	bl	109ec <strcmp@plt>
   10e10:	cmp	r0, #0
   10e14:	beq	10ea8 <main@@Base+0x1c0>
   10e18:	movw	r1, #4834	; 0x12e2
   10e1c:	mov	r0, r8
   10e20:	movt	r1, #1
   10e24:	bl	109ec <strcmp@plt>
   10e28:	cmp	r0, #0
   10e2c:	beq	10e48 <main@@Base+0x160>
   10e30:	movw	r1, #4837	; 0x12e5
   10e34:	mov	r0, r8
   10e38:	movt	r1, #1
   10e3c:	bl	109ec <strcmp@plt>
   10e40:	cmp	r0, #0
   10e44:	bne	10e64 <main@@Base+0x17c>
   10e48:	add	r0, sl, #1
   10e4c:	cmp	r0, r5
   10e50:	bge	10e64 <main@@Base+0x17c>
   10e54:	ldr	r1, [r4, r0, lsl #2]
   10e58:	ldrb	r2, [r1]
   10e5c:	cmp	r2, #45	; 0x2d
   10e60:	bne	10de0 <main@@Base+0xf8>
   10e64:	movw	r1, #4846	; 0x12ee
   10e68:	mov	r0, r8
   10e6c:	movt	r1, #1
   10e70:	bl	109ec <strcmp@plt>
   10e74:	cmp	r0, #0
   10e78:	beq	10e94 <main@@Base+0x1ac>
   10e7c:	movw	r1, #4849	; 0x12f1
   10e80:	mov	r0, r8
   10e84:	movt	r1, #1
   10e88:	bl	109ec <strcmp@plt>
   10e8c:	cmp	r0, #0
   10e90:	bne	10f28 <main@@Base+0x240>
   10e94:	movw	r0, #8304	; 0x2070
   10e98:	mov	r1, #1
   10e9c:	movt	r0, #2
   10ea0:	strb	r1, [r0]
   10ea4:	b	10eac <main@@Base+0x1c4>
   10ea8:	mov	r7, #0
   10eac:	add	sl, sl, #1
   10eb0:	cmp	sl, r5
   10eb4:	blt	10dec <main@@Base+0x104>
   10eb8:	b	10ec4 <main@@Base+0x1dc>
   10ebc:	str	r0, [sp, #8]
   10ec0:	mov	r7, #1
   10ec4:	cmp	sl, r5
   10ec8:	beq	10f34 <main@@Base+0x24c>
   10ecc:	bl	10a70 <coda_init@plt>
   10ed0:	cmp	r0, #0
   10ed4:	bne	10f6c <main@@Base+0x284>
   10ed8:	mov	r0, r7
   10edc:	bl	10a7c <coda_set_option_perform_conversions@plt>
   10ee0:	mov	r0, #0
   10ee4:	movw	r3, #3008	; 0xbc0
   10ee8:	sub	r1, r5, sl
   10eec:	add	r2, r4, sl, lsl #2
   10ef0:	str	r0, [sp]
   10ef4:	ldr	r0, [sp, #8]
   10ef8:	movt	r3, #1
   10efc:	bl	109e0 <coda_match_filefilter@plt>
   10f00:	cmp	r0, #0
   10f04:	bne	10f6c <main@@Base+0x284>
   10f08:	bl	10a28 <coda_done@plt>
   10f0c:	mov	r0, #0
   10f10:	sub	sp, fp, #28
   10f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f18:	ldr	r0, [r4, #8]
   10f1c:	bl	10a10 <coda_set_definition_path@plt>
   10f20:	mov	sl, #3
   10f24:	b	10db8 <main@@Base+0xd0>
   10f28:	ldrb	r0, [r8]
   10f2c:	cmp	r0, #45	; 0x2d
   10f30:	bne	10ec4 <main@@Base+0x1dc>
   10f34:	movw	r0, #8296	; 0x2068
   10f38:	mov	r1, #25
   10f3c:	mov	r2, #1
   10f40:	movt	r0, #2
   10f44:	ldr	r3, [r0]
   10f48:	movw	r0, #4861	; 0x12fd
   10f4c:	movt	r0, #1
   10f50:	bl	10a1c <fwrite@plt>
   10f54:	bl	10fac <main@@Base+0x2c4>
   10f58:	mov	r0, #1
   10f5c:	bl	10a58 <exit@plt>
   10f60:	bl	10fac <main@@Base+0x2c4>
   10f64:	mov	r0, #0
   10f68:	bl	10a58 <exit@plt>
   10f6c:	movw	r0, #8296	; 0x2068
   10f70:	movt	r0, #2
   10f74:	ldr	r4, [r0]
   10f78:	bl	10aac <coda_get_errno@plt>
   10f7c:	ldr	r0, [r0]
   10f80:	bl	10a94 <coda_errno_to_string@plt>
   10f84:	movw	r1, #4798	; 0x12be
   10f88:	mov	r2, r0
   10f8c:	mov	r0, r4
   10f90:	movt	r1, #1
   10f94:	bl	10a64 <fprintf@plt>
   10f98:	mov	r0, #1
   10f9c:	bl	10a58 <exit@plt>
   10fa0:	bl	11100 <main@@Base+0x418>
   10fa4:	mov	r0, #0
   10fa8:	bl	10a58 <exit@plt>
   10fac:	push	{fp, lr}
   10fb0:	mov	fp, sp
   10fb4:	movw	r0, #4909	; 0x132d
   10fb8:	movt	r0, #1
   10fbc:	bl	10a34 <puts@plt>
   10fc0:	movw	r0, #4960	; 0x1360
   10fc4:	movt	r0, #1
   10fc8:	bl	10a34 <puts@plt>
   10fcc:	movw	r0, #5040	; 0x13b0
   10fd0:	movt	r0, #1
   10fd4:	bl	10a34 <puts@plt>
   10fd8:	movw	r0, #5120	; 0x1400
   10fdc:	movt	r0, #1
   10fe0:	bl	10a34 <puts@plt>
   10fe4:	mov	r0, #10
   10fe8:	bl	10a88 <putchar@plt>
   10fec:	movw	r0, #5152	; 0x1420
   10ff0:	movt	r0, #1
   10ff4:	bl	10a34 <puts@plt>
   10ff8:	movw	r0, #5184	; 0x1440
   10ffc:	movt	r0, #1
   11000:	bl	10a34 <puts@plt>
   11004:	movw	r0, #5232	; 0x1470
   11008:	movt	r0, #1
   1100c:	bl	10a34 <puts@plt>
   11010:	movw	r0, #5296	; 0x14b0
   11014:	movt	r0, #1
   11018:	bl	10a34 <puts@plt>
   1101c:	movw	r0, #5344	; 0x14e0
   11020:	movt	r0, #1
   11024:	bl	10a34 <puts@plt>
   11028:	movw	r0, #5424	; 0x1530
   1102c:	movt	r0, #1
   11030:	bl	10a34 <puts@plt>
   11034:	movw	r0, #5504	; 0x1580
   11038:	movt	r0, #1
   1103c:	bl	10a34 <puts@plt>
   11040:	movw	r0, #5552	; 0x15b0
   11044:	movt	r0, #1
   11048:	bl	10a34 <puts@plt>
   1104c:	movw	r0, #5584	; 0x15d0
   11050:	movt	r0, #1
   11054:	bl	10a34 <puts@plt>
   11058:	mov	r0, #10
   1105c:	bl	10a88 <putchar@plt>
   11060:	movw	r0, #5648	; 0x1610
   11064:	movt	r0, #1
   11068:	bl	10a34 <puts@plt>
   1106c:	movw	r0, #5680	; 0x1630
   11070:	movt	r0, #1
   11074:	bl	10a34 <puts@plt>
   11078:	mov	r0, #10
   1107c:	bl	10a88 <putchar@plt>
   11080:	movw	r0, #5712	; 0x1650
   11084:	movt	r0, #1
   11088:	bl	10a34 <puts@plt>
   1108c:	movw	r0, #5744	; 0x1670
   11090:	movt	r0, #1
   11094:	bl	10a34 <puts@plt>
   11098:	mov	r0, #10
   1109c:	bl	10a88 <putchar@plt>
   110a0:	movw	r0, #5808	; 0x16b0
   110a4:	movt	r0, #1
   110a8:	bl	10a34 <puts@plt>
   110ac:	movw	r0, #5888	; 0x1700
   110b0:	movt	r0, #1
   110b4:	bl	10a34 <puts@plt>
   110b8:	movw	r0, #5968	; 0x1750
   110bc:	movt	r0, #1
   110c0:	bl	10a34 <puts@plt>
   110c4:	movw	r0, #6016	; 0x1780
   110c8:	movt	r0, #1
   110cc:	bl	10a34 <puts@plt>
   110d0:	movw	r0, #6096	; 0x17d0
   110d4:	movt	r0, #1
   110d8:	bl	10a34 <puts@plt>
   110dc:	movw	r0, #6176	; 0x1820
   110e0:	movt	r0, #1
   110e4:	bl	10a34 <puts@plt>
   110e8:	movw	r0, #6240	; 0x1860
   110ec:	movt	r0, #1
   110f0:	bl	10a34 <puts@plt>
   110f4:	mov	r0, #10
   110f8:	pop	{fp, lr}
   110fc:	b	10a88 <putchar@plt>
   11100:	push	{fp, lr}
   11104:	mov	fp, sp
   11108:	bl	10aa0 <coda_get_libcoda_version@plt>
   1110c:	mov	r1, r0
   11110:	movw	r0, #4887	; 0x1317
   11114:	movt	r0, #1
   11118:	bl	109f8 <printf@plt>
   1111c:	movw	r0, #6304	; 0x18a0
   11120:	movt	r0, #1
   11124:	bl	10a34 <puts@plt>
   11128:	mov	r0, #10
   1112c:	pop	{fp, lr}
   11130:	b	10a88 <putchar@plt>

00011134 <__libc_csu_init@@Base>:
   11134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11138:	mov	r7, r0
   1113c:	ldr	r6, [pc, #72]	; 1118c <__libc_csu_init@@Base+0x58>
   11140:	ldr	r5, [pc, #72]	; 11190 <__libc_csu_init@@Base+0x5c>
   11144:	add	r6, pc, r6
   11148:	add	r5, pc, r5
   1114c:	sub	r6, r6, r5
   11150:	mov	r8, r1
   11154:	mov	r9, r2
   11158:	bl	109c0 <coda_match_filefilter@plt-0x20>
   1115c:	asrs	r6, r6, #2
   11160:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11164:	mov	r4, #0
   11168:	add	r4, r4, #1
   1116c:	ldr	r3, [r5], #4
   11170:	mov	r2, r9
   11174:	mov	r1, r8
   11178:	mov	r0, r7
   1117c:	blx	r3
   11180:	cmp	r6, r4
   11184:	bne	11168 <__libc_csu_init@@Base+0x34>
   11188:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1118c:	andeq	r0, r1, r8, lsr #27
   11190:	andeq	r0, r1, r0, lsr #27

00011194 <__libc_csu_fini@@Base>:
   11194:	bx	lr

Disassembly of section .fini:

00011198 <.fini>:
   11198:	push	{r3, lr}
   1119c:	pop	{r3, pc}
