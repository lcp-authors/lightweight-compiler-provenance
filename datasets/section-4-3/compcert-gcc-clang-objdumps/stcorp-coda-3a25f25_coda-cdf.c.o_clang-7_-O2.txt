
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_cdf_reopen>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	add	fp, sp, #28
       8:	sub	sp, sp, #140	; 0x8c
       c:	mov	r5, r0
      10:	mov	r0, #120	; 0x78
      14:	bl	0 <malloc>
      18:	cmp	r0, #0
      1c:	beq	114 <coda_cdf_reopen+0x114>
      20:	mov	r7, #0
      24:	mov	r4, r0
      28:	vmov.i32	q8, #0	; 0x00000000
      2c:	mov	r1, #5
      30:	str	r7, [r0]
      34:	add	r6, r4, #20
      38:	ldr	r0, [r5]
      3c:	ldrd	r2, [r0, #8]
      40:	vst1.32	{d16-d17}, [r6]
      44:	str	r7, [r4, #40]	; 0x28
      48:	str	r7, [r4, #44]	; 0x2c
      4c:	str	r7, [r4, #48]	; 0x30
      50:	str	r0, [r4, #52]	; 0x34
      54:	str	r2, [r4, #8]
      58:	str	r3, [r4, #12]
      5c:	str	r1, [r4, #16]
      60:	ldr	r0, [r0]
      64:	bl	0 <strdup>
      68:	add	r9, r4, #52	; 0x34
      6c:	cmp	r0, #0
      70:	str	r0, [r4]
      74:	beq	148 <coda_cdf_reopen+0x148>
      78:	ldr	r0, [r9]
      7c:	mov	r2, #8
      80:	add	r1, sp, #16
      84:	mov	r3, #0
      88:	stm	sp, {r2, r7}
      8c:	mov	r2, #0
      90:	str	r1, [sp, #8]
      94:	bl	a5c <read_bytes>
      98:	cmn	r0, #1
      9c:	ble	164 <coda_cdf_reopen+0x164>
      a0:	ldrb	r0, [sp, #16]
      a4:	ldrb	r1, [sp, #17]
      a8:	ldrb	r2, [sp, #18]
      ac:	ldrb	r3, [sp, #19]
      b0:	strb	r0, [sp, #19]
      b4:	strb	r3, [sp, #16]
      b8:	strb	r2, [sp, #17]
      bc:	strb	r1, [sp, #18]
      c0:	ldrb	r0, [sp, #20]
      c4:	ldrb	r1, [sp, #23]
      c8:	strb	r1, [sp, #20]
      cc:	strb	r0, [sp, #23]
      d0:	ldrb	r0, [sp, #22]
      d4:	ldrb	r1, [sp, #21]
      d8:	strb	r1, [sp, #22]
      dc:	strb	r0, [sp, #21]
      e0:	movw	r1, #65535	; 0xffff
      e4:	ldr	r0, [sp, #16]
      e8:	cmp	r0, r1
      ec:	beq	100 <coda_cdf_reopen+0x100>
      f0:	movw	r1, #24578	; 0x6002
      f4:	movt	r1, #52722	; 0xcdf2
      f8:	cmp	r0, r1
      fc:	bne	1bc <coda_cdf_reopen+0x1bc>
     100:	movw	r1, #0
     104:	movt	r1, #0
     108:	mvn	r0, #199	; 0xc7
     10c:	bl	0 <coda_set_error>
     110:	b	164 <coda_cdf_reopen+0x164>
     114:	movw	r1, #0
     118:	movw	r3, #0
     11c:	movw	r0, #1315	; 0x523
     120:	mov	r2, #120	; 0x78
     124:	mvn	r4, #0
     128:	str	r0, [sp]
     12c:	movt	r1, #0
     130:	movt	r3, #0
     134:	mvn	r0, #0
     138:	bl	0 <coda_set_error>
     13c:	ldr	r0, [r5]
     140:	bl	0 <coda_close>
     144:	b	1b0 <coda_cdf_reopen+0x1b0>
     148:	movw	r1, #0
     14c:	movw	r2, #0
     150:	mvn	r0, #0
     154:	movw	r3, #1335	; 0x537
     158:	movt	r1, #0
     15c:	movt	r2, #0
     160:	bl	0 <coda_set_error>
     164:	ldr	r0, [r4]
     168:	cmp	r0, #0
     16c:	beq	174 <coda_cdf_reopen+0x174>
     170:	bl	0 <free>
     174:	ldr	r0, [r6]
     178:	cmp	r0, #0
     17c:	beq	184 <coda_cdf_reopen+0x184>
     180:	bl	0 <coda_dynamic_type_delete>
     184:	ldr	r0, [r4, #48]	; 0x30
     188:	cmp	r0, #0
     18c:	beq	194 <coda_cdf_reopen+0x194>
     190:	bl	0 <free>
     194:	ldr	r0, [r9]
     198:	cmp	r0, #0
     19c:	beq	1a4 <coda_cdf_reopen+0x1a4>
     1a0:	bl	0 <coda_bin_close>
     1a4:	mov	r0, r4
     1a8:	bl	0 <free>
     1ac:	mvn	r4, #0
     1b0:	mov	r0, r4
     1b4:	sub	sp, fp, #28
     1b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     1bc:	ldr	r1, [sp, #20]
     1c0:	movw	r2, #1
     1c4:	movt	r2, #52428	; 0xcccc
     1c8:	cmp	r1, r2
     1cc:	bne	1dc <coda_cdf_reopen+0x1dc>
     1d0:	movw	r1, #0
     1d4:	movt	r1, #0
     1d8:	b	108 <coda_cdf_reopen+0x108>
     1dc:	movw	r2, #1
     1e0:	movt	r2, #52723	; 0xcdf3
     1e4:	cmp	r0, r2
     1e8:	movweq	r0, #65535	; 0xffff
     1ec:	cmpeq	r1, r0
     1f0:	beq	214 <coda_cdf_reopen+0x214>
     1f4:	movw	r0, #0
     1f8:	movw	r1, #0
     1fc:	movw	r3, #0
     200:	movw	r2, #1362	; 0x552
     204:	movt	r0, #0
     208:	movt	r1, #0
     20c:	movt	r3, #0
     210:	bl	0 <__assert_fail>
     214:	mov	r0, #5
     218:	bl	0 <coda_type_record_new>
     21c:	cmp	r0, #0
     220:	beq	164 <coda_cdf_reopen+0x164>
     224:	mov	r1, #0
     228:	mov	r8, r0
     22c:	mov	r7, #0
     230:	bl	0 <coda_mem_record_new>
     234:	cmp	r0, #0
     238:	str	r0, [r6]
     23c:	beq	4dc <coda_cdf_reopen+0x4dc>
     240:	mov	r0, r8
     244:	bl	0 <coda_type_release>
     248:	ldr	r0, [r9]
     24c:	mov	r2, #4
     250:	add	r1, sp, #44	; 0x2c
     254:	mov	r3, #0
     258:	stm	sp, {r2, r7}
     25c:	mov	r2, #16
     260:	str	r1, [sp, #8]
     264:	bl	a5c <read_bytes>
     268:	mvn	sl, #0
     26c:	cmp	r0, #0
     270:	blt	544 <coda_cdf_reopen+0x544>
     274:	ldrb	r0, [sp, #44]	; 0x2c
     278:	ldrb	r1, [sp, #45]	; 0x2d
     27c:	ldrb	r2, [sp, #46]	; 0x2e
     280:	ldrb	r3, [sp, #47]	; 0x2f
     284:	strb	r0, [sp, #47]	; 0x2f
     288:	strb	r3, [sp, #44]	; 0x2c
     28c:	strb	r2, [sp, #45]	; 0x2d
     290:	strb	r1, [sp, #46]	; 0x2e
     294:	ldr	r2, [sp, #44]	; 0x2c
     298:	cmp	r2, #1
     29c:	bne	530 <coda_cdf_reopen+0x530>
     2a0:	ldr	r0, [r9]
     2a4:	mov	r7, #0
     2a8:	mov	r2, #8
     2ac:	add	r1, sp, #32
     2b0:	mov	r3, #0
     2b4:	stm	sp, {r2, r7}
     2b8:	mov	r2, #20
     2bc:	str	r1, [sp, #8]
     2c0:	bl	a5c <read_bytes>
     2c4:	cmp	r0, #0
     2c8:	blt	544 <coda_cdf_reopen+0x544>
     2cc:	ldr	r0, [r4, #52]	; 0x34
     2d0:	add	r1, r4, #56	; 0x38
     2d4:	mov	r8, #4
     2d8:	mov	r2, #28
     2dc:	mov	r3, #0
     2e0:	str	r7, [sp, #4]
     2e4:	str	r8, [sp]
     2e8:	str	r1, [sp, #8]
     2ec:	bl	a5c <read_bytes>
     2f0:	cmp	r0, #0
     2f4:	blt	544 <coda_cdf_reopen+0x544>
     2f8:	ldr	r0, [r4, #52]	; 0x34
     2fc:	add	r1, r4, #60	; 0x3c
     300:	mov	r7, #0
     304:	mov	r2, #32
     308:	mov	r3, #0
     30c:	str	r8, [sp]
     310:	str	r7, [sp, #4]
     314:	str	r1, [sp, #8]
     318:	bl	a5c <read_bytes>
     31c:	cmp	r0, #0
     320:	blt	544 <coda_cdf_reopen+0x544>
     324:	ldr	r0, [r9]
     328:	add	r1, sp, #28
     32c:	mov	r8, #4
     330:	mov	r2, #36	; 0x24
     334:	mov	r3, #0
     338:	str	r7, [sp, #4]
     33c:	str	r8, [sp]
     340:	str	r1, [sp, #8]
     344:	bl	a5c <read_bytes>
     348:	cmp	r0, #0
     34c:	blt	544 <coda_cdf_reopen+0x544>
     350:	ldr	r0, [r9]
     354:	add	r1, sp, #24
     358:	mov	r7, #0
     35c:	mov	r2, #40	; 0x28
     360:	mov	r3, #0
     364:	str	r8, [sp]
     368:	str	r7, [sp, #4]
     36c:	str	r1, [sp, #8]
     370:	bl	a5c <read_bytes>
     374:	cmp	r0, #0
     378:	blt	544 <coda_cdf_reopen+0x544>
     37c:	ldr	r0, [r4, #52]	; 0x34
     380:	mov	r2, #4
     384:	add	r1, r4, #64	; 0x40
     388:	mov	r3, #0
     38c:	stm	sp, {r2, r7}
     390:	mov	r2, #52	; 0x34
     394:	str	r1, [sp, #8]
     398:	bl	a5c <read_bytes>
     39c:	cmp	r0, #0
     3a0:	blt	544 <coda_cdf_reopen+0x544>
     3a4:	ldrb	r0, [sp, #39]	; 0x27
     3a8:	ldrb	r1, [sp, #32]
     3ac:	ldrb	r2, [sp, #33]	; 0x21
     3b0:	ldrb	r3, [sp, #34]	; 0x22
     3b4:	ldrb	r7, [sp, #35]	; 0x23
     3b8:	strb	r1, [sp, #39]	; 0x27
     3bc:	strb	r0, [sp, #32]
     3c0:	ldrb	r1, [r4, #57]	; 0x39
     3c4:	ldrb	r0, [sp, #38]	; 0x26
     3c8:	strb	r0, [sp, #33]	; 0x21
     3cc:	strb	r2, [sp, #38]	; 0x26
     3d0:	ldrb	r2, [r4, #58]	; 0x3a
     3d4:	ldrb	r0, [sp, #37]	; 0x25
     3d8:	strb	r0, [sp, #34]	; 0x22
     3dc:	strb	r3, [sp, #37]	; 0x25
     3e0:	ldrb	r3, [r4, #59]	; 0x3b
     3e4:	ldrb	r0, [sp, #36]	; 0x24
     3e8:	strb	r7, [sp, #36]	; 0x24
     3ec:	strb	r0, [sp, #35]	; 0x23
     3f0:	ldrb	r0, [r4, #56]	; 0x38
     3f4:	strb	r0, [r4, #59]	; 0x3b
     3f8:	strb	r3, [r4, #56]	; 0x38
     3fc:	strb	r2, [r4, #57]	; 0x39
     400:	strb	r1, [r4, #58]	; 0x3a
     404:	ldrb	r2, [sp, #30]
     408:	ldrb	r3, [sp, #31]
     40c:	ldrb	r0, [r4, #60]	; 0x3c
     410:	ldrb	r1, [r4, #63]	; 0x3f
     414:	strb	r1, [r4, #60]	; 0x3c
     418:	strb	r0, [r4, #63]	; 0x3f
     41c:	ldrb	r0, [r4, #61]	; 0x3d
     420:	ldrb	r1, [r4, #62]	; 0x3e
     424:	strb	r1, [r4, #61]	; 0x3d
     428:	strb	r0, [r4, #62]	; 0x3e
     42c:	ldrb	r0, [sp, #28]
     430:	ldrb	r1, [sp, #29]
     434:	strb	r0, [sp, #31]
     438:	strb	r3, [sp, #28]
     43c:	strb	r2, [sp, #29]
     440:	ldrb	r0, [sp, #24]
     444:	ldrb	r2, [sp, #26]
     448:	ldrb	r3, [sp, #27]
     44c:	strb	r1, [sp, #30]
     450:	ldrb	r1, [sp, #25]
     454:	strb	r3, [sp, #24]
     458:	strb	r0, [sp, #27]
     45c:	strb	r2, [sp, #25]
     460:	ldrb	r0, [r4, #64]	; 0x40
     464:	ldrb	r2, [r4, #66]	; 0x42
     468:	ldrb	r3, [r4, #67]	; 0x43
     46c:	strb	r1, [sp, #26]
     470:	ldrb	r1, [r4, #65]	; 0x41
     474:	strb	r0, [r4, #67]	; 0x43
     478:	strb	r3, [r4, #64]	; 0x40
     47c:	strb	r2, [r4, #65]	; 0x41
     480:	ldr	r2, [sp, #28]
     484:	strb	r1, [r4, #66]	; 0x42
     488:	cmp	r2, #16
     48c:	bhi	9a4 <coda_cdf_reopen+0x9a4>
     490:	mov	r0, #1
     494:	movw	r3, #6822	; 0x1aa6
     498:	mov	r1, #0
     49c:	tst	r3, r0, lsl r2
     4a0:	bne	4b8 <coda_cdf_reopen+0x4b8>
     4a4:	movw	r1, #8272	; 0x2050
     4a8:	movt	r1, #1
     4ac:	tst	r1, r0, lsl r2
     4b0:	beq	964 <coda_cdf_reopen+0x964>
     4b4:	mov	r1, #1
     4b8:	ldr	r2, [sp, #24]
     4bc:	str	r1, [r4, #68]	; 0x44
     4c0:	bic	r0, r0, r2
     4c4:	tst	r2, #2
     4c8:	str	r0, [r4, #72]	; 0x48
     4cc:	bne	558 <coda_cdf_reopen+0x558>
     4d0:	movw	r1, #0
     4d4:	movt	r1, #0
     4d8:	b	97c <coda_cdf_reopen+0x97c>
     4dc:	ldr	r0, [r4]
     4e0:	cmp	r0, #0
     4e4:	beq	4fc <coda_cdf_reopen+0x4fc>
     4e8:	bl	0 <free>
     4ec:	ldr	r0, [r6]
     4f0:	cmp	r0, #0
     4f4:	beq	4fc <coda_cdf_reopen+0x4fc>
     4f8:	bl	0 <coda_dynamic_type_delete>
     4fc:	ldr	r0, [r4, #48]	; 0x30
     500:	cmp	r0, #0
     504:	beq	50c <coda_cdf_reopen+0x50c>
     508:	bl	0 <free>
     50c:	ldr	r0, [r9]
     510:	cmp	r0, #0
     514:	beq	51c <coda_cdf_reopen+0x51c>
     518:	bl	0 <coda_bin_close>
     51c:	mov	r0, r4
     520:	bl	0 <free>
     524:	mov	r0, r8
     528:	bl	0 <coda_type_release>
     52c:	b	1ac <coda_cdf_reopen+0x1ac>
     530:	movw	r0, #65236	; 0xfed4
     534:	movw	r1, #0
     538:	movt	r0, #65535	; 0xffff
     53c:	movt	r1, #0
     540:	bl	0 <coda_set_error>
     544:	cmp	sl, #0
     548:	bne	164 <coda_cdf_reopen+0x164>
     54c:	str	r4, [r5]
     550:	mov	r4, #0
     554:	b	1b0 <coda_cdf_reopen+0x1b0>
     558:	ubfx	r0, r2, #2, #1
     55c:	ldr	r8, [sp, #32]
     560:	ldr	r7, [sp, #36]	; 0x24
     564:	mov	r3, #4
     568:	sub	r1, fp, #32
     56c:	and	r0, r0, r2, lsr #3
     570:	mov	r2, #0
     574:	str	r3, [sp]
     578:	str	r1, [sp, #8]
     57c:	str	r0, [r4, #76]	; 0x4c
     580:	str	r2, [sp, #4]
     584:	ldr	r0, [r4, #52]	; 0x34
     588:	adds	r2, r8, #8
     58c:	adc	r3, r7, #0
     590:	bl	a5c <read_bytes>
     594:	mvn	sl, #0
     598:	cmp	r0, #0
     59c:	blt	544 <coda_cdf_reopen+0x544>
     5a0:	ldrb	r0, [fp, #-32]	; 0xffffffe0
     5a4:	ldrb	r1, [fp, #-31]	; 0xffffffe1
     5a8:	ldrb	r2, [fp, #-30]	; 0xffffffe2
     5ac:	ldrb	r3, [fp, #-29]	; 0xffffffe3
     5b0:	strb	r0, [fp, #-29]	; 0xffffffe3
     5b4:	strb	r3, [fp, #-32]	; 0xffffffe0
     5b8:	strb	r2, [fp, #-31]	; 0xffffffe1
     5bc:	strb	r1, [fp, #-30]	; 0xffffffe2
     5c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     5c4:	cmp	r2, #2
     5c8:	bne	990 <coda_cdf_reopen+0x990>
     5cc:	ldr	r0, [r9]
     5d0:	mov	r2, #0
     5d4:	mov	r3, #8
     5d8:	sub	r1, fp, #40	; 0x28
     5dc:	str	r2, [sp, #4]
     5e0:	adds	r2, r8, #12
     5e4:	str	r3, [sp]
     5e8:	str	r1, [sp, #8]
     5ec:	adc	r3, r7, #0
     5f0:	bl	a5c <read_bytes>
     5f4:	cmp	r0, #0
     5f8:	blt	544 <coda_cdf_reopen+0x544>
     5fc:	mov	r2, #8
     600:	ldr	r0, [r9]
     604:	sub	r1, fp, #48	; 0x30
     608:	str	r2, [sp]
     60c:	mov	r2, #0
     610:	str	r1, [sp, #8]
     614:	str	r2, [sp, #4]
     618:	adds	r2, r8, #20
     61c:	adc	r3, r7, #0
     620:	bl	a5c <read_bytes>
     624:	cmp	r0, #0
     628:	blt	544 <coda_cdf_reopen+0x544>
     62c:	ldr	r0, [r9]
     630:	mov	r2, #0
     634:	mov	r3, #8
     638:	sub	r1, fp, #56	; 0x38
     63c:	str	r2, [sp, #4]
     640:	adds	r2, r8, #28
     644:	str	r3, [sp]
     648:	str	r1, [sp, #8]
     64c:	adc	r3, r7, #0
     650:	bl	a5c <read_bytes>
     654:	cmp	r0, #0
     658:	blt	544 <coda_cdf_reopen+0x544>
     65c:	mov	r2, #8
     660:	ldr	r0, [r9]
     664:	sub	r1, fp, #64	; 0x40
     668:	str	r2, [sp]
     66c:	mov	r2, #0
     670:	str	r1, [sp, #8]
     674:	str	r2, [sp, #4]
     678:	adds	r2, r8, #36	; 0x24
     67c:	adc	r3, r7, #0
     680:	bl	a5c <read_bytes>
     684:	cmp	r0, #0
     688:	blt	544 <coda_cdf_reopen+0x544>
     68c:	ldr	r0, [r9]
     690:	mov	r2, #0
     694:	mov	r3, #4
     698:	sub	r1, fp, #68	; 0x44
     69c:	str	r2, [sp, #4]
     6a0:	adds	r2, r8, #44	; 0x2c
     6a4:	str	r3, [sp]
     6a8:	str	r1, [sp, #8]
     6ac:	adc	r3, r7, #0
     6b0:	bl	a5c <read_bytes>
     6b4:	cmp	r0, #0
     6b8:	blt	544 <coda_cdf_reopen+0x544>
     6bc:	mov	r2, #4
     6c0:	ldr	r0, [r9]
     6c4:	sub	r1, fp, #72	; 0x48
     6c8:	str	r2, [sp]
     6cc:	mov	r2, #0
     6d0:	str	r1, [sp, #8]
     6d4:	str	r2, [sp, #4]
     6d8:	adds	r2, r8, #48	; 0x30
     6dc:	adc	r3, r7, #0
     6e0:	bl	a5c <read_bytes>
     6e4:	cmp	r0, #0
     6e8:	blt	544 <coda_cdf_reopen+0x544>
     6ec:	ldr	r0, [r4, #52]	; 0x34
     6f0:	mov	r2, #0
     6f4:	mov	r3, #4
     6f8:	add	r1, r4, #80	; 0x50
     6fc:	str	r2, [sp, #4]
     700:	adds	r2, r8, #56	; 0x38
     704:	str	r3, [sp]
     708:	str	r1, [sp, #8]
     70c:	adc	r3, r7, #0
     710:	bl	a5c <read_bytes>
     714:	cmp	r0, #0
     718:	blt	544 <coda_cdf_reopen+0x544>
     71c:	mov	r2, #4
     720:	ldr	r0, [r9]
     724:	sub	r1, fp, #76	; 0x4c
     728:	str	r2, [sp]
     72c:	mov	r2, #0
     730:	str	r1, [sp, #8]
     734:	str	r2, [sp, #4]
     738:	adds	r2, r8, #60	; 0x3c
     73c:	adc	r3, r7, #0
     740:	bl	a5c <read_bytes>
     744:	cmp	r0, #0
     748:	blt	544 <coda_cdf_reopen+0x544>
     74c:	ldrb	r0, [fp, #-33]	; 0xffffffdf
     750:	ldrb	r1, [fp, #-40]	; 0xffffffd8
     754:	ldrb	r2, [fp, #-39]	; 0xffffffd9
     758:	ldrb	r3, [fp, #-38]	; 0xffffffda
     75c:	ldrb	r7, [fp, #-37]	; 0xffffffdb
     760:	add	r8, r4, #8
     764:	strb	r1, [fp, #-33]	; 0xffffffdf
     768:	strb	r0, [fp, #-40]	; 0xffffffd8
     76c:	ldrb	r1, [fp, #-41]	; 0xffffffd7
     770:	ldrb	r0, [fp, #-34]	; 0xffffffde
     774:	strb	r0, [fp, #-39]	; 0xffffffd9
     778:	strb	r2, [fp, #-34]	; 0xffffffde
     77c:	ldrb	r2, [r4, #82]	; 0x52
     780:	ldrb	r0, [fp, #-35]	; 0xffffffdd
     784:	strb	r0, [fp, #-38]	; 0xffffffda
     788:	strb	r3, [fp, #-35]	; 0xffffffdd
     78c:	ldrb	r3, [r4, #83]	; 0x53
     790:	ldrb	r0, [fp, #-36]	; 0xffffffdc
     794:	strb	r7, [fp, #-36]	; 0xffffffdc
     798:	strb	r0, [fp, #-37]	; 0xffffffdb
     79c:	ldrb	r0, [fp, #-48]	; 0xffffffd0
     7a0:	strb	r0, [fp, #-41]	; 0xffffffd7
     7a4:	strb	r1, [fp, #-48]	; 0xffffffd0
     7a8:	ldrb	r0, [fp, #-47]	; 0xffffffd1
     7ac:	ldrb	r1, [fp, #-42]	; 0xffffffd6
     7b0:	strb	r0, [fp, #-42]	; 0xffffffd6
     7b4:	strb	r1, [fp, #-47]	; 0xffffffd1
     7b8:	ldrb	r0, [fp, #-46]	; 0xffffffd2
     7bc:	ldrb	r1, [fp, #-43]	; 0xffffffd5
     7c0:	strb	r0, [fp, #-43]	; 0xffffffd5
     7c4:	strb	r1, [fp, #-46]	; 0xffffffd2
     7c8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
     7cc:	ldrb	r1, [fp, #-44]	; 0xffffffd4
     7d0:	strb	r0, [fp, #-44]	; 0xffffffd4
     7d4:	strb	r1, [fp, #-45]	; 0xffffffd3
     7d8:	ldrb	r0, [fp, #-56]	; 0xffffffc8
     7dc:	ldrb	r1, [fp, #-49]	; 0xffffffcf
     7e0:	strb	r0, [fp, #-49]	; 0xffffffcf
     7e4:	strb	r1, [fp, #-56]	; 0xffffffc8
     7e8:	ldrb	r0, [fp, #-55]	; 0xffffffc9
     7ec:	ldrb	r1, [fp, #-50]	; 0xffffffce
     7f0:	strb	r0, [fp, #-50]	; 0xffffffce
     7f4:	strb	r1, [fp, #-55]	; 0xffffffc9
     7f8:	ldrb	r0, [fp, #-54]	; 0xffffffca
     7fc:	ldrb	r1, [fp, #-51]	; 0xffffffcd
     800:	strb	r0, [fp, #-51]	; 0xffffffcd
     804:	strb	r1, [fp, #-54]	; 0xffffffca
     808:	ldrb	r0, [fp, #-53]	; 0xffffffcb
     80c:	ldrb	r1, [fp, #-52]	; 0xffffffcc
     810:	strb	r0, [fp, #-52]	; 0xffffffcc
     814:	strb	r1, [fp, #-53]	; 0xffffffcb
     818:	ldrb	r0, [fp, #-64]	; 0xffffffc0
     81c:	ldrb	r1, [fp, #-57]	; 0xffffffc7
     820:	strb	r0, [fp, #-57]	; 0xffffffc7
     824:	strb	r1, [fp, #-64]	; 0xffffffc0
     828:	ldrb	r0, [fp, #-63]	; 0xffffffc1
     82c:	ldrb	r1, [fp, #-58]	; 0xffffffc6
     830:	strb	r0, [fp, #-58]	; 0xffffffc6
     834:	strb	r1, [fp, #-63]	; 0xffffffc1
     838:	ldrb	r0, [fp, #-62]	; 0xffffffc2
     83c:	ldrb	r1, [fp, #-59]	; 0xffffffc5
     840:	strb	r0, [fp, #-59]	; 0xffffffc5
     844:	strb	r1, [fp, #-62]	; 0xffffffc2
     848:	ldrb	r0, [fp, #-61]	; 0xffffffc3
     84c:	ldrb	r1, [fp, #-60]	; 0xffffffc4
     850:	strb	r0, [fp, #-60]	; 0xffffffc4
     854:	strb	r1, [fp, #-61]	; 0xffffffc3
     858:	ldrb	r0, [fp, #-68]	; 0xffffffbc
     85c:	ldrb	r1, [fp, #-65]	; 0xffffffbf
     860:	strb	r0, [fp, #-65]	; 0xffffffbf
     864:	strb	r1, [fp, #-68]	; 0xffffffbc
     868:	ldrb	r0, [fp, #-67]	; 0xffffffbd
     86c:	ldrb	r1, [fp, #-66]	; 0xffffffbe
     870:	strb	r0, [fp, #-66]	; 0xffffffbe
     874:	strb	r1, [fp, #-67]	; 0xffffffbd
     878:	ldrb	r0, [fp, #-72]	; 0xffffffb8
     87c:	ldrb	r1, [fp, #-69]	; 0xffffffbb
     880:	strb	r0, [fp, #-69]	; 0xffffffbb
     884:	strb	r1, [fp, #-72]	; 0xffffffb8
     888:	ldrb	r0, [fp, #-71]	; 0xffffffb9
     88c:	ldrb	r1, [fp, #-70]	; 0xffffffba
     890:	strb	r0, [fp, #-70]	; 0xffffffba
     894:	strb	r1, [fp, #-71]	; 0xffffffb9
     898:	ldrb	r0, [r4, #80]	; 0x50
     89c:	ldrb	r1, [r4, #81]	; 0x51
     8a0:	strb	r0, [r4, #83]	; 0x53
     8a4:	strb	r3, [r4, #80]	; 0x50
     8a8:	strb	r2, [r4, #81]	; 0x51
     8ac:	strb	r1, [r4, #82]	; 0x52
     8b0:	ldrb	r0, [fp, #-76]	; 0xffffffb4
     8b4:	ldrb	r1, [fp, #-75]	; 0xffffffb5
     8b8:	ldrb	r2, [fp, #-74]	; 0xffffffb6
     8bc:	ldrb	r3, [fp, #-73]	; 0xffffffb7
     8c0:	strb	r0, [fp, #-73]	; 0xffffffb7
     8c4:	strb	r3, [fp, #-76]	; 0xffffffb4
     8c8:	strb	r2, [fp, #-75]	; 0xffffffb5
     8cc:	strb	r1, [fp, #-74]	; 0xffffffb6
     8d0:	ldrd	r2, [r8]
     8d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
     8dc:	eor	r3, r1, r3
     8e0:	eor	r2, r0, r2
     8e4:	orrs	r2, r2, r3
     8e8:	bne	9c0 <coda_cdf_reopen+0x9c0>
     8ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
     8f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
     8f4:	orrs	r0, r2, r3
     8f8:	beq	914 <coda_cdf_reopen+0x914>
     8fc:	mov	r0, #0
     900:	str	r0, [sp]
     904:	mov	r0, r4
     908:	bl	bc4 <read_VDR>
     90c:	cmp	r0, #0
     910:	bne	544 <coda_cdf_reopen+0x544>
     914:	ldr	r2, [fp, #-48]	; 0xffffffd0
     918:	ldr	r3, [fp, #-44]	; 0xffffffd4
     91c:	orrs	r0, r2, r3
     920:	beq	93c <coda_cdf_reopen+0x93c>
     924:	mov	r0, #1
     928:	str	r0, [sp]
     92c:	mov	r0, r4
     930:	bl	bc4 <read_VDR>
     934:	cmp	r0, #0
     938:	bne	544 <coda_cdf_reopen+0x544>
     93c:	ldr	r2, [fp, #-56]	; 0xffffffc8
     940:	ldr	r3, [fp, #-52]	; 0xffffffcc
     944:	mov	r0, r4
     948:	bl	14e8 <read_ADR>
     94c:	mov	sl, r0
     950:	cmp	r0, #0
     954:	mvnne	sl, #0
     958:	cmp	sl, #0
     95c:	bne	164 <coda_cdf_reopen+0x164>
     960:	b	54c <coda_cdf_reopen+0x54c>
     964:	mov	r0, #1
     968:	movw	r1, #49160	; 0xc008
     96c:	tst	r1, r0, lsl r2
     970:	beq	9a4 <coda_cdf_reopen+0x9a4>
     974:	movw	r1, #0
     978:	movt	r1, #0
     97c:	mvn	r0, #199	; 0xc7
     980:	bl	0 <coda_set_error>
     984:	cmp	sl, #0
     988:	bne	164 <coda_cdf_reopen+0x164>
     98c:	b	54c <coda_cdf_reopen+0x54c>
     990:	movw	r0, #65236	; 0xfed4
     994:	movw	r1, #0
     998:	movt	r0, #65535	; 0xffff
     99c:	movt	r1, #0
     9a0:	b	9b0 <coda_cdf_reopen+0x9b0>
     9a4:	movw	r1, #0
     9a8:	mvn	r0, #199	; 0xc7
     9ac:	movt	r1, #0
     9b0:	bl	0 <coda_set_error>
     9b4:	cmp	sl, #0
     9b8:	bne	164 <coda_cdf_reopen+0x164>
     9bc:	b	54c <coda_cdf_reopen+0x54c>
     9c0:	add	r2, sp, #71	; 0x47
     9c4:	bl	0 <coda_str64>
     9c8:	ldrd	r0, [r8]
     9cc:	add	r7, sp, #50	; 0x32
     9d0:	mov	r2, r7
     9d4:	bl	0 <coda_str64>
     9d8:	movw	r0, #65236	; 0xfed4
     9dc:	movw	r1, #0
     9e0:	add	r2, sp, #71	; 0x47
     9e4:	mov	r3, r7
     9e8:	movt	r0, #65535	; 0xffff
     9ec:	movt	r1, #0
     9f0:	bl	0 <coda_set_error>
     9f4:	cmp	sl, #0
     9f8:	bne	164 <coda_cdf_reopen+0x164>
     9fc:	b	54c <coda_cdf_reopen+0x54c>

00000a00 <coda_cdf_close>:
     a00:	push	{r4, sl, fp, lr}
     a04:	add	fp, sp, #8
     a08:	mov	r4, r0
     a0c:	ldr	r0, [r0]
     a10:	cmp	r0, #0
     a14:	beq	a1c <coda_cdf_close+0x1c>
     a18:	bl	0 <free>
     a1c:	ldr	r0, [r4, #20]
     a20:	cmp	r0, #0
     a24:	beq	a2c <coda_cdf_close+0x2c>
     a28:	bl	0 <coda_dynamic_type_delete>
     a2c:	ldr	r0, [r4, #48]	; 0x30
     a30:	cmp	r0, #0
     a34:	beq	a3c <coda_cdf_close+0x3c>
     a38:	bl	0 <free>
     a3c:	ldr	r0, [r4, #52]	; 0x34
     a40:	cmp	r0, #0
     a44:	beq	a4c <coda_cdf_close+0x4c>
     a48:	bl	0 <coda_bin_close>
     a4c:	mov	r0, r4
     a50:	bl	0 <free>
     a54:	mov	r0, #0
     a58:	pop	{r4, sl, fp, pc}

00000a5c <read_bytes>:
     a5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a60:	add	fp, sp, #28
     a64:	sub	sp, sp, #68	; 0x44
     a68:	ldr	r7, [r0, #48]	; 0x30
     a6c:	mov	sl, r2
     a70:	ldr	r1, [fp, #12]
     a74:	ldr	r2, [fp, #8]
     a78:	ldr	ip, [fp, #16]
     a7c:	mov	r9, r3
     a80:	cmp	r7, #0
     a84:	beq	b08 <read_bytes+0xac>
     a88:	mov	r6, r0
     a8c:	adds	lr, r2, sl
     a90:	ldr	r4, [r6, #40]!	; 0x28
     a94:	adc	r5, r1, r9
     a98:	ldr	r3, [r6, #4]
     a9c:	subs	r4, r4, lr
     aa0:	sbcs	r3, r3, r5
     aa4:	bcs	b48 <read_bytes+0xec>
     aa8:	ldr	r0, [r0, #16]
     aac:	cmp	r0, #1
     ab0:	bls	b2c <read_bytes+0xd0>
     ab4:	add	r8, sp, #47	; 0x2f
     ab8:	mov	r0, r2
     abc:	mov	r2, r8
     ac0:	bl	0 <coda_str64>
     ac4:	add	r7, sp, #26
     ac8:	mov	r0, sl
     acc:	mov	r1, r9
     ad0:	mov	r2, r7
     ad4:	bl	0 <coda_str64>
     ad8:	ldrd	r0, [r6]
     adc:	add	r4, sp, #5
     ae0:	mov	r2, r4
     ae4:	bl	0 <coda_str64>
     ae8:	movw	r1, #0
     aec:	mvn	r0, #300	; 0x12c
     af0:	mov	r2, r8
     af4:	mov	r3, r7
     af8:	str	r4, [sp]
     afc:	movt	r1, #0
     b00:	bl	0 <coda_set_error>
     b04:	b	b3c <read_bytes+0xe0>
     b08:	ldr	r3, [r0, #16]
     b0c:	cmp	r3, #2
     b10:	bcs	ba4 <read_bytes+0x148>
     b14:	ldrd	r4, [r0, #8]
     b18:	adds	r3, r2, sl
     b1c:	adc	r1, r1, r9
     b20:	subs	r3, r4, r3
     b24:	sbcs	r1, r5, r1
     b28:	bcs	b60 <read_bytes+0x104>
     b2c:	movw	r1, #0
     b30:	mvn	r0, #300	; 0x12c
     b34:	movt	r1, #0
     b38:	bl	0 <coda_set_error>
     b3c:	mvn	r0, #0
     b40:	sub	sp, fp, #28
     b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b48:	add	r1, r7, sl
     b4c:	mov	r0, ip
     b50:	bl	0 <memcpy>
     b54:	mov	r0, #0
     b58:	sub	sp, fp, #28
     b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b60:	ldr	r0, [r0, #56]	; 0x38
     b64:	mov	r1, ip
     b68:	mov	r3, sl
     b6c:	bl	0 <pread>
     b70:	mov	r1, r0
     b74:	mov	r0, #0
     b78:	cmn	r1, #1
     b7c:	bgt	b40 <read_bytes+0xe4>
     b80:	bl	0 <__errno_location>
     b84:	ldr	r0, [r0]
     b88:	bl	0 <strerror>
     b8c:	movw	r1, #0
     b90:	mov	r2, r0
     b94:	mvn	r0, #21
     b98:	movt	r1, #0
     b9c:	bl	0 <coda_set_error>
     ba0:	b	b3c <read_bytes+0xe0>
     ba4:	movw	r0, #0
     ba8:	movw	r1, #0
     bac:	movw	r3, #0
     bb0:	mov	r2, #83	; 0x53
     bb4:	movt	r0, #0
     bb8:	movt	r1, #0
     bbc:	movt	r3, #0
     bc0:	bl	0 <__assert_fail>

00000bc4 <read_VDR>:
     bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     bc8:	add	fp, sp, #28
     bcc:	sub	sp, sp, #452	; 0x1c4
     bd0:	mov	r9, r0
     bd4:	orrs	r0, r2, r3
     bd8:	beq	c68 <read_VDR+0xa4>
     bdc:	ldr	r0, [r9, #52]	; 0x34
     be0:	mov	r7, r2
     be4:	mov	r2, #0
     be8:	mov	r6, r3
     bec:	mov	r3, #4
     bf0:	sub	r1, fp, #44	; 0x2c
     bf4:	str	r2, [sp, #4]
     bf8:	adds	r2, r7, #8
     bfc:	str	r3, [sp]
     c00:	str	r1, [sp, #8]
     c04:	adc	r3, r6, #0
     c08:	bl	a5c <read_bytes>
     c0c:	mvn	r8, #0
     c10:	cmp	r0, #0
     c14:	blt	c6c <read_VDR+0xa8>
     c18:	ldrb	r0, [fp, #-44]	; 0xffffffd4
     c1c:	ldrb	r1, [fp, #-43]	; 0xffffffd5
     c20:	ldrb	r2, [fp, #-42]	; 0xffffffd6
     c24:	ldrb	r3, [fp, #-41]	; 0xffffffd7
     c28:	ldr	sl, [fp, #8]
     c2c:	strb	r0, [fp, #-41]	; 0xffffffd7
     c30:	strb	r3, [fp, #-44]	; 0xffffffd4
     c34:	strb	r2, [fp, #-43]	; 0xffffffd5
     c38:	strb	r1, [fp, #-42]	; 0xffffffd6
     c3c:	cmp	sl, #0
     c40:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c44:	beq	c78 <read_VDR+0xb4>
     c48:	cmp	r2, #8
     c4c:	beq	c80 <read_VDR+0xbc>
     c50:	movw	r0, #65236	; 0xfed4
     c54:	movw	r1, #0
     c58:	movt	r0, #65535	; 0xffff
     c5c:	movt	r1, #0
     c60:	bl	0 <coda_set_error>
     c64:	b	c6c <read_VDR+0xa8>
     c68:	mov	r8, #0
     c6c:	mov	r0, r8
     c70:	sub	sp, fp, #28
     c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     c78:	cmp	r2, #3
     c7c:	bne	10cc <read_VDR+0x508>
     c80:	ldr	r0, [r9, #52]	; 0x34
     c84:	mov	r4, #0
     c88:	mov	r2, #8
     c8c:	sub	r1, fp, #56	; 0x38
     c90:	stm	sp, {r2, r4}
     c94:	adds	r2, r7, #12
     c98:	str	r1, [sp, #8]
     c9c:	adc	r3, r6, #0
     ca0:	bl	a5c <read_bytes>
     ca4:	cmp	r0, #0
     ca8:	blt	c6c <read_VDR+0xa8>
     cac:	ldr	r0, [r9, #52]	; 0x34
     cb0:	adds	r2, r7, #20
     cb4:	sub	r1, fp, #60	; 0x3c
     cb8:	mov	r5, #4
     cbc:	str	r4, [sp, #4]
     cc0:	adc	r3, r6, #0
     cc4:	str	r5, [sp]
     cc8:	str	r1, [sp, #8]
     ccc:	bl	a5c <read_bytes>
     cd0:	cmp	r0, #0
     cd4:	blt	c6c <read_VDR+0xa8>
     cd8:	ldr	r0, [r9, #52]	; 0x34
     cdc:	adds	r2, r7, #24
     ce0:	sub	r1, fp, #64	; 0x40
     ce4:	mov	r4, #0
     ce8:	str	r5, [sp]
     cec:	adc	r3, r6, #0
     cf0:	str	r4, [sp, #4]
     cf4:	str	r1, [sp, #8]
     cf8:	bl	a5c <read_bytes>
     cfc:	cmp	r0, #0
     d00:	blt	c6c <read_VDR+0xa8>
     d04:	ldr	r0, [r9, #52]	; 0x34
     d08:	adds	r2, r7, #28
     d0c:	sub	r1, fp, #72	; 0x48
     d10:	mov	r5, #8
     d14:	str	r4, [sp, #4]
     d18:	adc	r3, r6, #0
     d1c:	str	r5, [sp]
     d20:	str	r1, [sp, #8]
     d24:	bl	a5c <read_bytes>
     d28:	cmp	r0, #0
     d2c:	blt	c6c <read_VDR+0xa8>
     d30:	ldr	r0, [r9, #52]	; 0x34
     d34:	adds	r2, r7, #36	; 0x24
     d38:	sub	r1, fp, #80	; 0x50
     d3c:	mov	r4, #0
     d40:	str	r5, [sp]
     d44:	adc	r3, r6, #0
     d48:	str	r4, [sp, #4]
     d4c:	str	r1, [sp, #8]
     d50:	bl	a5c <read_bytes>
     d54:	cmp	r0, #0
     d58:	blt	c6c <read_VDR+0xa8>
     d5c:	ldr	r0, [r9, #52]	; 0x34
     d60:	adds	r2, r7, #44	; 0x2c
     d64:	sub	r1, fp, #84	; 0x54
     d68:	mov	r5, #4
     d6c:	str	r4, [sp, #4]
     d70:	adc	r3, r6, #0
     d74:	str	r5, [sp]
     d78:	str	r1, [sp, #8]
     d7c:	bl	a5c <read_bytes>
     d80:	cmp	r0, #0
     d84:	blt	c6c <read_VDR+0xa8>
     d88:	ldr	r0, [r9, #52]	; 0x34
     d8c:	adds	r2, r7, #48	; 0x30
     d90:	sub	r1, fp, #88	; 0x58
     d94:	mov	r4, #0
     d98:	str	r5, [sp]
     d9c:	adc	r3, r6, #0
     da0:	str	r4, [sp, #4]
     da4:	str	r1, [sp, #8]
     da8:	bl	a5c <read_bytes>
     dac:	cmp	r0, #0
     db0:	blt	c6c <read_VDR+0xa8>
     db4:	ldr	r0, [r9, #52]	; 0x34
     db8:	adds	r2, r7, #64	; 0x40
     dbc:	sub	r1, fp, #92	; 0x5c
     dc0:	mov	r5, #4
     dc4:	str	r4, [sp, #4]
     dc8:	adc	r3, r6, #0
     dcc:	str	r5, [sp]
     dd0:	str	r1, [sp, #8]
     dd4:	bl	a5c <read_bytes>
     dd8:	cmp	r0, #0
     ddc:	blt	c6c <read_VDR+0xa8>
     de0:	ldr	r0, [r9, #52]	; 0x34
     de4:	adds	r2, r7, #68	; 0x44
     de8:	sub	r1, fp, #96	; 0x60
     dec:	mov	r4, #0
     df0:	str	r5, [sp]
     df4:	adc	r3, r6, #0
     df8:	str	r4, [sp, #4]
     dfc:	str	r1, [sp, #8]
     e00:	bl	a5c <read_bytes>
     e04:	cmp	r0, #0
     e08:	blt	c6c <read_VDR+0xa8>
     e0c:	ldr	r0, [r9, #52]	; 0x34
     e10:	mov	r2, #8
     e14:	sub	r1, fp, #104	; 0x68
     e18:	stm	sp, {r2, r4}
     e1c:	adds	r2, r7, #72	; 0x48
     e20:	str	r1, [sp, #8]
     e24:	adc	r3, r6, #0
     e28:	bl	a5c <read_bytes>
     e2c:	cmp	r0, #0
     e30:	blt	c6c <read_VDR+0xa8>
     e34:	ldr	r0, [r9, #52]	; 0x34
     e38:	mov	r4, #0
     e3c:	mov	r2, #4
     e40:	sub	r1, fp, #108	; 0x6c
     e44:	stm	sp, {r2, r4}
     e48:	adds	r2, r7, #80	; 0x50
     e4c:	str	r1, [sp, #8]
     e50:	adc	r3, r6, #0
     e54:	bl	a5c <read_bytes>
     e58:	cmp	r0, #0
     e5c:	blt	c6c <read_VDR+0xa8>
     e60:	ldr	r0, [r9, #52]	; 0x34
     e64:	mov	r2, #256	; 0x100
     e68:	add	r1, sp, #115	; 0x73
     e6c:	stm	sp, {r2, r4}
     e70:	adds	r2, r7, #84	; 0x54
     e74:	str	r1, [sp, #8]
     e78:	adc	r3, r6, #0
     e7c:	bl	a5c <read_bytes>
     e80:	cmp	r0, #0
     e84:	blt	c6c <read_VDR+0xa8>
     e88:	add	r4, sp, #115	; 0x73
     e8c:	mov	r5, #0
     e90:	mov	r0, r4
     e94:	strb	r5, [sp, #371]	; 0x173
     e98:	bl	0 <strlen>
     e9c:	cmp	r0, #1
     ea0:	blt	ecc <read_VDR+0x308>
     ea4:	sub	r1, r4, #1
     ea8:	ldrb	r2, [r1, r0]
     eac:	cmp	r2, #32
     eb0:	bne	ecc <read_VDR+0x308>
     eb4:	sub	r2, r0, #1
     eb8:	strb	r5, [r1, r0]
     ebc:	add	r0, r2, #1
     ec0:	cmp	r0, #1
     ec4:	mov	r0, r2
     ec8:	bgt	ea8 <read_VDR+0x2e4>
     ecc:	ldrb	r0, [fp, #-49]	; 0xffffffcf
     ed0:	ldrb	r1, [fp, #-56]	; 0xffffffc8
     ed4:	ldrb	r2, [fp, #-55]	; 0xffffffc9
     ed8:	ldrb	r3, [fp, #-54]	; 0xffffffca
     edc:	ldrb	r5, [fp, #-53]	; 0xffffffcb
     ee0:	strb	r1, [fp, #-49]	; 0xffffffcf
     ee4:	strb	r0, [fp, #-56]	; 0xffffffc8
     ee8:	ldrb	r1, [fp, #-57]	; 0xffffffc7
     eec:	ldrb	r0, [fp, #-50]	; 0xffffffce
     ef0:	strb	r0, [fp, #-55]	; 0xffffffc9
     ef4:	strb	r2, [fp, #-50]	; 0xffffffce
     ef8:	ldrb	r0, [fp, #-51]	; 0xffffffcd
     efc:	strb	r0, [fp, #-54]	; 0xffffffca
     f00:	strb	r3, [fp, #-51]	; 0xffffffcd
     f04:	ldrb	r0, [fp, #-52]	; 0xffffffcc
     f08:	strb	r5, [fp, #-52]	; 0xffffffcc
     f0c:	strb	r0, [fp, #-53]	; 0xffffffcb
     f10:	ldrb	r0, [fp, #-60]	; 0xffffffc4
     f14:	strb	r0, [fp, #-57]	; 0xffffffc7
     f18:	strb	r1, [fp, #-60]	; 0xffffffc4
     f1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
     f20:	ldrb	r1, [fp, #-58]	; 0xffffffc6
     f24:	strb	r0, [fp, #-58]	; 0xffffffc6
     f28:	strb	r1, [fp, #-59]	; 0xffffffc5
     f2c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
     f30:	ldrb	r1, [fp, #-61]	; 0xffffffc3
     f34:	ldr	r4, [fp, #-60]	; 0xffffffc4
     f38:	strb	r0, [fp, #-61]	; 0xffffffc3
     f3c:	strb	r1, [fp, #-64]	; 0xffffffc0
     f40:	ldrb	r0, [fp, #-63]	; 0xffffffc1
     f44:	ldrb	r1, [fp, #-62]	; 0xffffffc2
     f48:	cmp	r4, #32
     f4c:	strb	r0, [fp, #-62]	; 0xffffffc2
     f50:	strb	r1, [fp, #-63]	; 0xffffffc1
     f54:	ldrb	r0, [fp, #-72]	; 0xffffffb8
     f58:	ldrb	r1, [fp, #-65]	; 0xffffffbf
     f5c:	strb	r0, [fp, #-65]	; 0xffffffbf
     f60:	strb	r1, [fp, #-72]	; 0xffffffb8
     f64:	ldrb	r0, [fp, #-71]	; 0xffffffb9
     f68:	ldrb	r1, [fp, #-66]	; 0xffffffbe
     f6c:	strb	r0, [fp, #-66]	; 0xffffffbe
     f70:	strb	r1, [fp, #-71]	; 0xffffffb9
     f74:	ldrb	r0, [fp, #-70]	; 0xffffffba
     f78:	ldrb	r1, [fp, #-67]	; 0xffffffbd
     f7c:	strb	r0, [fp, #-67]	; 0xffffffbd
     f80:	strb	r1, [fp, #-70]	; 0xffffffba
     f84:	ldrb	r0, [fp, #-69]	; 0xffffffbb
     f88:	ldrb	r1, [fp, #-68]	; 0xffffffbc
     f8c:	strb	r0, [fp, #-68]	; 0xffffffbc
     f90:	strb	r1, [fp, #-69]	; 0xffffffbb
     f94:	ldrb	r0, [fp, #-80]	; 0xffffffb0
     f98:	ldrb	r1, [fp, #-73]	; 0xffffffb7
     f9c:	strb	r0, [fp, #-73]	; 0xffffffb7
     fa0:	strb	r1, [fp, #-80]	; 0xffffffb0
     fa4:	ldrb	r0, [fp, #-79]	; 0xffffffb1
     fa8:	ldrb	r1, [fp, #-74]	; 0xffffffb6
     fac:	strb	r0, [fp, #-74]	; 0xffffffb6
     fb0:	strb	r1, [fp, #-79]	; 0xffffffb1
     fb4:	ldrb	r0, [fp, #-78]	; 0xffffffb2
     fb8:	ldrb	r1, [fp, #-75]	; 0xffffffb5
     fbc:	strb	r0, [fp, #-75]	; 0xffffffb5
     fc0:	strb	r1, [fp, #-78]	; 0xffffffb2
     fc4:	ldrb	r0, [fp, #-77]	; 0xffffffb3
     fc8:	ldrb	r1, [fp, #-76]	; 0xffffffb4
     fcc:	strb	r0, [fp, #-76]	; 0xffffffb4
     fd0:	strb	r1, [fp, #-77]	; 0xffffffb3
     fd4:	ldrb	r0, [fp, #-84]	; 0xffffffac
     fd8:	ldrb	r1, [fp, #-81]	; 0xffffffaf
     fdc:	strb	r0, [fp, #-81]	; 0xffffffaf
     fe0:	strb	r1, [fp, #-84]	; 0xffffffac
     fe4:	ldrb	r0, [fp, #-83]	; 0xffffffad
     fe8:	ldrb	r1, [fp, #-82]	; 0xffffffae
     fec:	strb	r0, [fp, #-82]	; 0xffffffae
     ff0:	strb	r1, [fp, #-83]	; 0xffffffad
     ff4:	ldrb	r0, [fp, #-88]	; 0xffffffa8
     ff8:	ldrb	r1, [fp, #-85]	; 0xffffffab
     ffc:	strb	r0, [fp, #-85]	; 0xffffffab
    1000:	strb	r1, [fp, #-88]	; 0xffffffa8
    1004:	ldrb	r0, [fp, #-87]	; 0xffffffa9
    1008:	ldrb	r1, [fp, #-86]	; 0xffffffaa
    100c:	strb	r0, [fp, #-86]	; 0xffffffaa
    1010:	strb	r1, [fp, #-87]	; 0xffffffa9
    1014:	ldrb	r0, [fp, #-92]	; 0xffffffa4
    1018:	ldrb	r1, [fp, #-89]	; 0xffffffa7
    101c:	strb	r0, [fp, #-89]	; 0xffffffa7
    1020:	strb	r1, [fp, #-92]	; 0xffffffa4
    1024:	ldrb	r0, [fp, #-91]	; 0xffffffa5
    1028:	ldrb	r1, [fp, #-90]	; 0xffffffa6
    102c:	strb	r0, [fp, #-90]	; 0xffffffa6
    1030:	strb	r1, [fp, #-91]	; 0xffffffa5
    1034:	ldrb	r0, [fp, #-96]	; 0xffffffa0
    1038:	ldrb	r1, [fp, #-93]	; 0xffffffa3
    103c:	strb	r0, [fp, #-93]	; 0xffffffa3
    1040:	strb	r1, [fp, #-96]	; 0xffffffa0
    1044:	ldrb	r0, [fp, #-95]	; 0xffffffa1
    1048:	ldrb	r1, [fp, #-94]	; 0xffffffa2
    104c:	strb	r0, [fp, #-94]	; 0xffffffa2
    1050:	strb	r1, [fp, #-95]	; 0xffffffa1
    1054:	ldrb	r0, [fp, #-104]	; 0xffffff98
    1058:	ldrb	r1, [fp, #-97]	; 0xffffff9f
    105c:	strb	r0, [fp, #-97]	; 0xffffff9f
    1060:	strb	r1, [fp, #-104]	; 0xffffff98
    1064:	ldrb	r0, [fp, #-103]	; 0xffffff99
    1068:	ldrb	r1, [fp, #-98]	; 0xffffff9e
    106c:	strb	r0, [fp, #-98]	; 0xffffff9e
    1070:	strb	r1, [fp, #-103]	; 0xffffff99
    1074:	ldrb	r0, [fp, #-102]	; 0xffffff9a
    1078:	ldrb	r1, [fp, #-99]	; 0xffffff9d
    107c:	strb	r0, [fp, #-99]	; 0xffffff9d
    1080:	strb	r1, [fp, #-102]	; 0xffffff9a
    1084:	ldrb	r0, [fp, #-101]	; 0xffffff9b
    1088:	ldrb	r1, [fp, #-100]	; 0xffffff9c
    108c:	strb	r0, [fp, #-100]	; 0xffffff9c
    1090:	strb	r1, [fp, #-101]	; 0xffffff9b
    1094:	ldrb	r0, [fp, #-108]	; 0xffffff94
    1098:	ldrb	r1, [fp, #-105]	; 0xffffff97
    109c:	strb	r0, [fp, #-105]	; 0xffffff97
    10a0:	strb	r1, [fp, #-108]	; 0xffffff94
    10a4:	ldrb	r0, [fp, #-107]	; 0xffffff95
    10a8:	ldrb	r1, [fp, #-106]	; 0xffffff96
    10ac:	strb	r0, [fp, #-106]	; 0xffffff96
    10b0:	strb	r1, [fp, #-107]	; 0xffffff95
    10b4:	bne	10e4 <read_VDR+0x520>
    10b8:	movw	r1, #0
    10bc:	mvn	r0, #199	; 0xc7
    10c0:	movt	r1, #0
    10c4:	bl	0 <coda_set_error>
    10c8:	b	c6c <read_VDR+0xa8>
    10cc:	movw	r0, #65236	; 0xfed4
    10d0:	movw	r1, #0
    10d4:	movt	r0, #65535	; 0xffff
    10d8:	movt	r1, #0
    10dc:	bl	0 <coda_set_error>
    10e0:	b	c6c <read_VDR+0xa8>
    10e4:	cmp	sl, #0
    10e8:	beq	1168 <read_VDR+0x5a4>
    10ec:	ldr	r0, [r9, #52]	; 0x34
    10f0:	mov	r2, #0
    10f4:	mov	r3, #4
    10f8:	add	r1, sp, #108	; 0x6c
    10fc:	str	r2, [sp, #4]
    1100:	adds	r2, r7, #340	; 0x154
    1104:	str	r3, [sp]
    1108:	str	r1, [sp, #8]
    110c:	adc	r3, r6, #0
    1110:	bl	a5c <read_bytes>
    1114:	cmp	r0, #0
    1118:	blt	c6c <read_VDR+0xa8>
    111c:	ldrb	r0, [sp, #108]	; 0x6c
    1120:	ldrb	r1, [sp, #109]	; 0x6d
    1124:	ldrb	r2, [sp, #110]	; 0x6e
    1128:	ldrb	r3, [sp, #111]	; 0x6f
    112c:	strb	r0, [sp, #111]	; 0x6f
    1130:	strb	r3, [sp, #108]	; 0x6c
    1134:	strb	r2, [sp, #109]	; 0x6d
    1138:	strb	r1, [sp, #110]	; 0x6e
    113c:	ldr	r3, [sp, #108]	; 0x6c
    1140:	cmn	r3, #1
    1144:	ble	1200 <read_VDR+0x63c>
    1148:	cmp	r3, #9
    114c:	str	r4, [sp, #28]
    1150:	blt	1214 <read_VDR+0x650>
    1154:	movw	r0, #65236	; 0xfed4
    1158:	movw	r1, #0
    115c:	movt	r0, #65535	; 0xffff
    1160:	movt	r1, #0
    1164:	b	12f8 <read_VDR+0x734>
    1168:	ldr	r1, [r9, #80]	; 0x50
    116c:	str	r1, [sp, #108]	; 0x6c
    1170:	cmp	r1, #1
    1174:	str	r4, [sp, #28]
    1178:	str	r1, [sp, #36]	; 0x24
    117c:	blt	12cc <read_VDR+0x708>
    1180:	mov	r0, #0
    1184:	add	r1, sp, #44	; 0x2c
    1188:	mov	r4, #0
    118c:	str	r0, [sp, #40]	; 0x28
    1190:	ldr	r0, [r9, #52]	; 0x34
    1194:	add	r5, r1, r4
    1198:	mov	r1, #4
    119c:	adds	r2, r7, r4
    11a0:	str	r1, [sp]
    11a4:	mov	r1, #0
    11a8:	adc	r3, r6, #0
    11ac:	stmib	sp, {r1, r5}
    11b0:	bl	a5c <read_bytes>
    11b4:	cmp	r0, #0
    11b8:	blt	c6c <read_VDR+0xa8>
    11bc:	add	r1, sp, #44	; 0x2c
    11c0:	ldrb	r2, [r5, #2]
    11c4:	ldrb	r3, [r5, #3]
    11c8:	ldrb	ip, [r5, #1]
    11cc:	ldrb	r0, [r1, r4]
    11d0:	strb	r3, [r1, r4]
    11d4:	add	r4, r4, #4
    11d8:	strb	r0, [r5, #3]
    11dc:	strb	r2, [r5, #1]
    11e0:	ldr	r2, [sp, #40]	; 0x28
    11e4:	ldr	r0, [sp, #36]	; 0x24
    11e8:	strb	ip, [r5, #2]
    11ec:	add	r2, r2, #1
    11f0:	cmp	r2, r0
    11f4:	str	r2, [sp, #40]	; 0x28
    11f8:	blt	1190 <read_VDR+0x5cc>
    11fc:	b	12cc <read_VDR+0x708>
    1200:	movw	r0, #65236	; 0xfed4
    1204:	movw	r1, #0
    1208:	movt	r0, #65535	; 0xffff
    120c:	movt	r1, #0
    1210:	b	12f8 <read_VDR+0x734>
    1214:	adds	r0, r7, #344	; 0x158
    1218:	str	r3, [sp, #36]	; 0x24
    121c:	str	r0, [sp, #40]	; 0x28
    1220:	adc	r0, r6, #0
    1224:	cmp	r3, #1
    1228:	str	r0, [sp, #32]
    122c:	blt	12c4 <read_VDR+0x700>
    1230:	add	r4, sp, #76	; 0x4c
    1234:	mov	r6, #0
    1238:	mov	r7, #0
    123c:	mov	r1, #4
    1240:	ldr	r0, [r9, #52]	; 0x34
    1244:	add	r5, r4, r6
    1248:	str	r1, [sp]
    124c:	mov	r1, #0
    1250:	stmib	sp, {r1, r5}
    1254:	ldr	r1, [sp, #40]	; 0x28
    1258:	adds	r2, r1, r6
    125c:	ldr	r1, [sp, #32]
    1260:	adc	r3, r1, #0
    1264:	bl	a5c <read_bytes>
    1268:	cmp	r0, #0
    126c:	blt	c6c <read_VDR+0xa8>
    1270:	ldrb	r0, [r4, r6]
    1274:	ldrb	r3, [r5, #3]
    1278:	ldrb	r1, [r5, #1]
    127c:	ldrb	r2, [r5, #2]
    1280:	add	r7, r7, #1
    1284:	strb	r3, [r4, r6]
    1288:	strb	r0, [r5, #3]
    128c:	ldr	r0, [sp, #36]	; 0x24
    1290:	add	r6, r6, #4
    1294:	strb	r2, [r5, #1]
    1298:	strb	r1, [r5, #2]
    129c:	cmp	r7, r0
    12a0:	blt	123c <read_VDR+0x678>
    12a4:	ldr	r1, [sp, #36]	; 0x24
    12a8:	ldr	r2, [sp, #40]	; 0x28
    12ac:	ldr	r4, [sp, #28]
    12b0:	adds	r7, r2, r1, lsl #2
    12b4:	ldr	r2, [sp, #32]
    12b8:	lsl	r0, r1, #2
    12bc:	adc	r6, r2, r0, asr #31
    12c0:	b	1170 <read_VDR+0x5ac>
    12c4:	mov	r0, #0
    12c8:	str	r0, [sp, #36]	; 0x24
    12cc:	ldr	r0, [fp, #-84]	; 0xffffffac
    12d0:	ldr	r7, [fp, #-64]	; 0xffffffc0
    12d4:	ands	r4, r0, #1
    12d8:	bne	1304 <read_VDR+0x740>
    12dc:	cmp	r7, #0
    12e0:	beq	1304 <read_VDR+0x740>
    12e4:	movw	r0, #65236	; 0xfed4
    12e8:	movw	r1, #0
    12ec:	add	r3, r7, #1
    12f0:	movt	r0, #65535	; 0xffff
    12f4:	movt	r1, #0
    12f8:	add	r2, sp, #115	; 0x73
    12fc:	bl	0 <coda_set_error>
    1300:	b	c6c <read_VDR+0xa8>
    1304:	tst	r0, #4
    1308:	beq	1324 <read_VDR+0x760>
    130c:	ldr	r6, [fp, #-104]	; 0xffffff98
    1310:	ldr	r5, [fp, #-100]	; 0xffffff9c
    1314:	and	r0, r6, r5
    1318:	cmn	r0, #1
    131c:	orrsne	r0, r6, r5
    1320:	bne	13c4 <read_VDR+0x800>
    1324:	ldr	r0, [r9, #20]
    1328:	ldr	r2, [fp, #-96]	; 0xffffffa0
    132c:	ldr	r3, [r0, #16]
    1330:	cmp	r3, r2
    1334:	bne	13ac <read_VDR+0x7e8>
    1338:	ldr	r0, [r9, #72]	; 0x48
    133c:	ldr	r1, [fp, #-92]	; 0xffffffa4
    1340:	ldr	r2, [fp, #-88]	; 0xffffffa8
    1344:	cmp	sl, #0
    1348:	sub	r3, fp, #36	; 0x24
    134c:	add	r6, sp, #44	; 0x2c
    1350:	add	ip, sp, #8
    1354:	addeq	r5, r9, #84	; 0x54
    1358:	addne	r5, sp, #76	; 0x4c
    135c:	stm	sp, {r5, r6}
    1360:	stm	ip, {r0, r1, r2, r3}
    1364:	mov	r1, r7
    1368:	mov	r2, r4
    136c:	ldr	r0, [sp, #28]
    1370:	ldr	r3, [sp, #36]	; 0x24
    1374:	bl	0 <coda_cdf_variable_new>
    1378:	mov	r6, r0
    137c:	cmp	r0, #0
    1380:	beq	c6c <read_VDR+0xa8>
    1384:	ldr	r0, [r9, #20]
    1388:	add	r1, sp, #115	; 0x73
    138c:	mov	r2, r6
    1390:	mov	r3, #1
    1394:	bl	0 <coda_mem_record_add_field>
    1398:	cmp	r0, #0
    139c:	beq	1490 <read_VDR+0x8cc>
    13a0:	mov	r0, r6
    13a4:	bl	0 <coda_cdf_type_delete>
    13a8:	b	c6c <read_VDR+0xa8>
    13ac:	movw	r0, #65236	; 0xfed4
    13b0:	movw	r1, #0
    13b4:	movt	r0, #65535	; 0xffff
    13b8:	movt	r1, #0
    13bc:	bl	0 <coda_set_error>
    13c0:	b	c6c <read_VDR+0xa8>
    13c4:	ldr	r0, [r9, #52]	; 0x34
    13c8:	mov	r2, #0
    13cc:	mov	r3, #4
    13d0:	sub	r1, fp, #36	; 0x24
    13d4:	str	r2, [sp, #4]
    13d8:	adds	r2, r6, #8
    13dc:	str	r3, [sp]
    13e0:	str	r1, [sp, #8]
    13e4:	adc	r3, r5, #0
    13e8:	bl	a5c <read_bytes>
    13ec:	cmp	r0, #0
    13f0:	blt	c6c <read_VDR+0xa8>
    13f4:	ldrb	r0, [fp, #-36]	; 0xffffffdc
    13f8:	ldrb	r1, [fp, #-35]	; 0xffffffdd
    13fc:	ldrb	r2, [fp, #-34]	; 0xffffffde
    1400:	ldrb	r3, [fp, #-33]	; 0xffffffdf
    1404:	strb	r0, [fp, #-33]	; 0xffffffdf
    1408:	strb	r3, [fp, #-36]	; 0xffffffdc
    140c:	strb	r2, [fp, #-35]	; 0xffffffdd
    1410:	strb	r1, [fp, #-34]	; 0xffffffde
    1414:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1418:	cmp	r2, #11
    141c:	bne	14d0 <read_VDR+0x90c>
    1420:	ldr	r0, [r9, #52]	; 0x34
    1424:	mov	r2, #0
    1428:	mov	r3, #4
    142c:	sub	r1, fp, #40	; 0x28
    1430:	str	r2, [sp, #4]
    1434:	adds	r2, r6, #12
    1438:	str	r3, [sp]
    143c:	str	r1, [sp, #8]
    1440:	adc	r3, r5, #0
    1444:	bl	a5c <read_bytes>
    1448:	cmp	r0, #0
    144c:	blt	c6c <read_VDR+0xa8>
    1450:	ldrb	r0, [fp, #-40]	; 0xffffffd8
    1454:	ldrb	r1, [fp, #-39]	; 0xffffffd9
    1458:	ldrb	r2, [fp, #-38]	; 0xffffffda
    145c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    1460:	strb	r0, [fp, #-37]	; 0xffffffdb
    1464:	strb	r3, [fp, #-40]	; 0xffffffd8
    1468:	strb	r2, [fp, #-39]	; 0xffffffd9
    146c:	strb	r1, [fp, #-38]	; 0xffffffda
    1470:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1474:	cmp	r2, #5
    1478:	beq	1324 <read_VDR+0x760>
    147c:	movw	r1, #0
    1480:	mvn	r0, #199	; 0xc7
    1484:	movt	r1, #0
    1488:	bl	0 <coda_set_error>
    148c:	b	c6c <read_VDR+0xa8>
    1490:	ldr	r2, [fp, #-72]	; 0xffffffb8
    1494:	ldr	r3, [fp, #-68]	; 0xffffffbc
    1498:	ldr	r1, [fp, #-36]	; 0xffffffdc
    149c:	mov	r0, r9
    14a0:	bl	1988 <read_VXR>
    14a4:	cmp	r0, #0
    14a8:	bne	c6c <read_VDR+0xa8>
    14ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
    14b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    14b4:	mov	r0, r9
    14b8:	str	sl, [sp]
    14bc:	bl	bc4 <read_VDR>
    14c0:	mov	r8, r0
    14c4:	cmp	r0, #0
    14c8:	mvnne	r8, #0
    14cc:	b	c6c <read_VDR+0xa8>
    14d0:	movw	r0, #65236	; 0xfed4
    14d4:	movw	r1, #0
    14d8:	movt	r0, #65535	; 0xffff
    14dc:	movt	r1, #0
    14e0:	bl	0 <coda_set_error>
    14e4:	b	c6c <read_VDR+0xa8>

000014e8 <read_ADR>:
    14e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14ec:	add	fp, sp, #28
    14f0:	sub	sp, sp, #332	; 0x14c
    14f4:	mov	sl, r0
    14f8:	orrs	r0, r2, r3
    14fc:	beq	1904 <read_ADR+0x41c>
    1500:	ldr	r0, [sl, #52]	; 0x34
    1504:	mov	r7, r2
    1508:	mov	r2, #0
    150c:	mov	r6, r3
    1510:	mov	r3, #4
    1514:	sub	r1, fp, #36	; 0x24
    1518:	str	r2, [sp, #4]
    151c:	adds	r2, r7, #8
    1520:	str	r3, [sp]
    1524:	str	r1, [sp, #8]
    1528:	adc	r3, r6, #0
    152c:	bl	a5c <read_bytes>
    1530:	mvn	r9, #0
    1534:	cmp	r0, #0
    1538:	blt	1920 <read_ADR+0x438>
    153c:	ldrb	r0, [fp, #-36]	; 0xffffffdc
    1540:	ldrb	r1, [fp, #-35]	; 0xffffffdd
    1544:	ldrb	r2, [fp, #-34]	; 0xffffffde
    1548:	ldrb	r3, [fp, #-33]	; 0xffffffdf
    154c:	strb	r0, [fp, #-33]	; 0xffffffdf
    1550:	strb	r3, [fp, #-36]	; 0xffffffdc
    1554:	strb	r2, [fp, #-35]	; 0xffffffdd
    1558:	strb	r1, [fp, #-34]	; 0xffffffde
    155c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1560:	cmp	r2, #4
    1564:	bne	190c <read_ADR+0x424>
    1568:	ldr	r0, [sl, #52]	; 0x34
    156c:	adds	r2, r7, #12
    1570:	sub	r1, fp, #48	; 0x30
    1574:	mov	r4, #0
    1578:	mov	r5, #8
    157c:	adc	r3, r6, #0
    1580:	str	r5, [sp]
    1584:	str	r4, [sp, #4]
    1588:	str	r1, [sp, #8]
    158c:	bl	a5c <read_bytes>
    1590:	cmp	r0, #0
    1594:	blt	1920 <read_ADR+0x438>
    1598:	ldr	r0, [sl, #52]	; 0x34
    159c:	adds	r2, r7, #20
    15a0:	sub	r1, fp, #56	; 0x38
    15a4:	str	r5, [sp]
    15a8:	str	r4, [sp, #4]
    15ac:	adc	r3, r6, #0
    15b0:	str	r1, [sp, #8]
    15b4:	bl	a5c <read_bytes>
    15b8:	cmp	r0, #0
    15bc:	blt	1920 <read_ADR+0x438>
    15c0:	ldr	r0, [sl, #52]	; 0x34
    15c4:	adds	r2, r7, #28
    15c8:	sub	r1, fp, #60	; 0x3c
    15cc:	mov	r4, #0
    15d0:	mov	r5, #4
    15d4:	adc	r3, r6, #0
    15d8:	str	r5, [sp]
    15dc:	str	r4, [sp, #4]
    15e0:	str	r1, [sp, #8]
    15e4:	bl	a5c <read_bytes>
    15e8:	cmp	r0, #0
    15ec:	blt	1920 <read_ADR+0x438>
    15f0:	ldr	r0, [sl, #52]	; 0x34
    15f4:	adds	r2, r7, #32
    15f8:	sub	r1, fp, #64	; 0x40
    15fc:	str	r5, [sp]
    1600:	str	r4, [sp, #4]
    1604:	adc	r3, r6, #0
    1608:	str	r1, [sp, #8]
    160c:	bl	a5c <read_bytes>
    1610:	cmp	r0, #0
    1614:	blt	1920 <read_ADR+0x438>
    1618:	ldr	r0, [sl, #52]	; 0x34
    161c:	adds	r2, r7, #36	; 0x24
    1620:	sub	r1, fp, #68	; 0x44
    1624:	mov	r4, #0
    1628:	mov	r5, #4
    162c:	adc	r3, r6, #0
    1630:	str	r5, [sp]
    1634:	str	r4, [sp, #4]
    1638:	str	r1, [sp, #8]
    163c:	bl	a5c <read_bytes>
    1640:	cmp	r0, #0
    1644:	blt	1920 <read_ADR+0x438>
    1648:	ldr	r0, [sl, #52]	; 0x34
    164c:	adds	r2, r7, #40	; 0x28
    1650:	sub	r1, fp, #72	; 0x48
    1654:	str	r5, [sp]
    1658:	str	r4, [sp, #4]
    165c:	adc	r3, r6, #0
    1660:	str	r1, [sp, #8]
    1664:	bl	a5c <read_bytes>
    1668:	cmp	r0, #0
    166c:	blt	1920 <read_ADR+0x438>
    1670:	ldr	r0, [sl, #52]	; 0x34
    1674:	mov	r8, #0
    1678:	mov	r2, #8
    167c:	sub	r1, fp, #80	; 0x50
    1680:	stm	sp, {r2, r8}
    1684:	adds	r2, r7, #48	; 0x30
    1688:	str	r1, [sp, #8]
    168c:	adc	r3, r6, #0
    1690:	bl	a5c <read_bytes>
    1694:	cmp	r0, #0
    1698:	blt	1920 <read_ADR+0x438>
    169c:	ldr	r0, [sl, #52]	; 0x34
    16a0:	adds	r2, r7, #56	; 0x38
    16a4:	mov	r4, #4
    16a8:	sub	r1, fp, #84	; 0x54
    16ac:	adc	r3, r6, #0
    16b0:	stm	sp, {r4, r8}
    16b4:	str	r1, [sp, #8]
    16b8:	bl	a5c <read_bytes>
    16bc:	cmp	r0, #0
    16c0:	blt	1920 <read_ADR+0x438>
    16c4:	ldr	r0, [sl, #52]	; 0x34
    16c8:	adds	r2, r7, #60	; 0x3c
    16cc:	mov	r8, #0
    16d0:	sub	r1, fp, #88	; 0x58
    16d4:	adc	r3, r6, #0
    16d8:	stm	sp, {r4, r8}
    16dc:	str	r1, [sp, #8]
    16e0:	bl	a5c <read_bytes>
    16e4:	cmp	r0, #0
    16e8:	blt	1920 <read_ADR+0x438>
    16ec:	ldr	r0, [sl, #52]	; 0x34
    16f0:	mov	r2, #256	; 0x100
    16f4:	add	r1, sp, #15
    16f8:	stm	sp, {r2, r8}
    16fc:	adds	r2, r7, #68	; 0x44
    1700:	str	r1, [sp, #8]
    1704:	adc	r3, r6, #0
    1708:	bl	a5c <read_bytes>
    170c:	cmp	r0, #0
    1710:	blt	1920 <read_ADR+0x438>
    1714:	add	r6, sp, #15
    1718:	mov	r7, #0
    171c:	mov	r0, r6
    1720:	strb	r7, [sp, #271]	; 0x10f
    1724:	bl	0 <strlen>
    1728:	cmp	r0, #1
    172c:	blt	1758 <read_ADR+0x270>
    1730:	sub	r1, r6, #1
    1734:	ldrb	r2, [r1, r0]
    1738:	cmp	r2, #32
    173c:	bne	1758 <read_ADR+0x270>
    1740:	sub	r2, r0, #1
    1744:	strb	r7, [r1, r0]
    1748:	add	r0, r2, #1
    174c:	cmp	r0, #1
    1750:	mov	r0, r2
    1754:	bgt	1734 <read_ADR+0x24c>
    1758:	ldrb	r0, [fp, #-41]	; 0xffffffd7
    175c:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    1760:	ldrb	r2, [fp, #-47]	; 0xffffffd1
    1764:	ldrb	r3, [fp, #-46]	; 0xffffffd2
    1768:	ldrb	r7, [fp, #-45]	; 0xffffffd3
    176c:	strb	r1, [fp, #-41]	; 0xffffffd7
    1770:	strb	r0, [fp, #-48]	; 0xffffffd0
    1774:	ldrb	r1, [fp, #-49]	; 0xffffffcf
    1778:	ldrb	r0, [fp, #-42]	; 0xffffffd6
    177c:	strb	r0, [fp, #-47]	; 0xffffffd1
    1780:	strb	r2, [fp, #-42]	; 0xffffffd6
    1784:	ldrb	r0, [fp, #-43]	; 0xffffffd5
    1788:	strb	r0, [fp, #-46]	; 0xffffffd2
    178c:	strb	r3, [fp, #-43]	; 0xffffffd5
    1790:	sub	r3, fp, #60	; 0x3c
    1794:	ldrb	r0, [fp, #-44]	; 0xffffffd4
    1798:	strb	r7, [fp, #-44]	; 0xffffffd4
    179c:	strb	r0, [fp, #-45]	; 0xffffffd3
    17a0:	ldrb	r0, [fp, #-56]	; 0xffffffc8
    17a4:	strb	r0, [fp, #-49]	; 0xffffffcf
    17a8:	strb	r1, [fp, #-56]	; 0xffffffc8
    17ac:	ldrb	r0, [fp, #-55]	; 0xffffffc9
    17b0:	ldrb	r1, [fp, #-50]	; 0xffffffce
    17b4:	strb	r0, [fp, #-50]	; 0xffffffce
    17b8:	strb	r1, [fp, #-55]	; 0xffffffc9
    17bc:	ldrb	r0, [fp, #-54]	; 0xffffffca
    17c0:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    17c4:	strb	r0, [fp, #-51]	; 0xffffffcd
    17c8:	strb	r1, [fp, #-54]	; 0xffffffca
    17cc:	ldrb	r0, [fp, #-53]	; 0xffffffcb
    17d0:	ldrb	r1, [fp, #-52]	; 0xffffffcc
    17d4:	strb	r0, [fp, #-52]	; 0xffffffcc
    17d8:	strb	r1, [fp, #-53]	; 0xffffffcb
    17dc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
    17e0:	ldrb	r1, [fp, #-57]	; 0xffffffc7
    17e4:	strb	r0, [fp, #-57]	; 0xffffffc7
    17e8:	strb	r1, [fp, #-60]	; 0xffffffc4
    17ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
    17f0:	ldrb	r1, [fp, #-58]	; 0xffffffc6
    17f4:	strb	r0, [fp, #-58]	; 0xffffffc6
    17f8:	strb	r1, [fp, #-59]	; 0xffffffc5
    17fc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
    1800:	ldrb	r1, [fp, #-61]	; 0xffffffc3
    1804:	strb	r0, [fp, #-61]	; 0xffffffc3
    1808:	strb	r1, [fp, #-64]	; 0xffffffc0
    180c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
    1810:	ldrb	r1, [fp, #-62]	; 0xffffffc2
    1814:	strb	r0, [fp, #-62]	; 0xffffffc2
    1818:	strb	r1, [fp, #-63]	; 0xffffffc1
    181c:	ldrb	r0, [fp, #-68]	; 0xffffffbc
    1820:	ldrb	r1, [fp, #-65]	; 0xffffffbf
    1824:	strb	r0, [fp, #-65]	; 0xffffffbf
    1828:	strb	r1, [fp, #-68]	; 0xffffffbc
    182c:	ldrb	r0, [fp, #-67]	; 0xffffffbd
    1830:	ldrb	r1, [fp, #-66]	; 0xffffffbe
    1834:	strb	r0, [fp, #-66]	; 0xffffffbe
    1838:	strb	r1, [fp, #-67]	; 0xffffffbd
    183c:	ldrb	r0, [fp, #-72]	; 0xffffffb8
    1840:	ldrb	r1, [fp, #-69]	; 0xffffffbb
    1844:	strb	r0, [fp, #-69]	; 0xffffffbb
    1848:	strb	r1, [fp, #-72]	; 0xffffffb8
    184c:	ldrb	r0, [fp, #-71]	; 0xffffffb9
    1850:	ldrb	r1, [fp, #-70]	; 0xffffffba
    1854:	strb	r0, [fp, #-70]	; 0xffffffba
    1858:	strb	r1, [fp, #-71]	; 0xffffffb9
    185c:	ldrb	r0, [fp, #-80]	; 0xffffffb0
    1860:	ldrb	r1, [fp, #-73]	; 0xffffffb7
    1864:	strb	r0, [fp, #-73]	; 0xffffffb7
    1868:	strb	r1, [fp, #-80]	; 0xffffffb0
    186c:	ldrb	r0, [fp, #-79]	; 0xffffffb1
    1870:	ldrb	r1, [fp, #-74]	; 0xffffffb6
    1874:	strb	r0, [fp, #-74]	; 0xffffffb6
    1878:	strb	r1, [fp, #-79]	; 0xffffffb1
    187c:	ldrb	r0, [fp, #-78]	; 0xffffffb2
    1880:	ldrb	r1, [fp, #-75]	; 0xffffffb5
    1884:	strb	r0, [fp, #-75]	; 0xffffffb5
    1888:	strb	r1, [fp, #-78]	; 0xffffffb2
    188c:	ldrb	r0, [fp, #-77]	; 0xffffffb3
    1890:	ldrb	r1, [fp, #-76]	; 0xffffffb4
    1894:	strb	r0, [fp, #-76]	; 0xffffffb4
    1898:	strb	r1, [fp, #-77]	; 0xffffffb3
    189c:	ldrb	r0, [fp, #-84]	; 0xffffffac
    18a0:	ldrb	r1, [fp, #-81]	; 0xffffffaf
    18a4:	strb	r0, [fp, #-81]	; 0xffffffaf
    18a8:	strb	r1, [fp, #-84]	; 0xffffffac
    18ac:	ldrb	r0, [fp, #-83]	; 0xffffffad
    18b0:	ldrb	r1, [fp, #-82]	; 0xffffffae
    18b4:	strb	r0, [fp, #-82]	; 0xffffffae
    18b8:	strb	r1, [fp, #-83]	; 0xffffffad
    18bc:	ldrb	r0, [fp, #-88]	; 0xffffffa8
    18c0:	ldrb	r1, [fp, #-85]	; 0xffffffab
    18c4:	strb	r0, [fp, #-85]	; 0xffffffab
    18c8:	strb	r1, [fp, #-88]	; 0xffffffa8
    18cc:	ldrb	r0, [fp, #-87]	; 0xffffffa9
    18d0:	ldrb	r1, [fp, #-86]	; 0xffffffaa
    18d4:	strb	r0, [fp, #-86]	; 0xffffffaa
    18d8:	strb	r1, [fp, #-87]	; 0xffffffa9
    18dc:	ldm	r3, {r0, r2, r3}
    18e0:	tst	r0, #1
    18e4:	bne	192c <read_ADR+0x444>
    18e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
    18ec:	ldr	r7, [fp, #-80]	; 0xffffffb0
    18f0:	ldr	r5, [fp, #-76]	; 0xffffffb4
    18f4:	cmp	r1, #0
    18f8:	moveq	r3, r5
    18fc:	moveq	r2, r7
    1900:	b	1950 <read_ADR+0x468>
    1904:	mov	r9, #0
    1908:	b	1920 <read_ADR+0x438>
    190c:	movw	r0, #65236	; 0xfed4
    1910:	movw	r1, #0
    1914:	movt	r0, #65535	; 0xffff
    1918:	movt	r1, #0
    191c:	bl	0 <coda_set_error>
    1920:	mov	r0, r9
    1924:	sub	sp, fp, #28
    1928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    192c:	ldr	r7, [fp, #-84]	; 0xffffffac
    1930:	cmp	r7, #0
    1934:	beq	1950 <read_ADR+0x468>
    1938:	movw	r0, #65236	; 0xfed4
    193c:	movw	r1, #0
    1940:	mov	r2, r7
    1944:	movt	r0, #65535	; 0xffff
    1948:	movt	r1, #0
    194c:	b	191c <read_ADR+0x434>
    1950:	str	r0, [sp, #4]
    1954:	mov	r0, sl
    1958:	str	r6, [sp]
    195c:	bl	2280 <read_AEDR>
    1960:	cmp	r0, #0
    1964:	bne	1920 <read_ADR+0x438>
    1968:	ldr	r2, [fp, #-48]	; 0xffffffd0
    196c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1970:	mov	r0, sl
    1974:	bl	14e8 <read_ADR>
    1978:	mov	r9, r0
    197c:	cmp	r0, #0
    1980:	mvnne	r9, #0
    1984:	b	1920 <read_ADR+0x438>

00001988 <read_VXR>:
    1988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    198c:	add	fp, sp, #28
    1990:	sub	sp, sp, #4
    1994:	vpush	{d8-d9}
    1998:	sub	sp, sp, #152	; 0x98
    199c:	mov	r8, r0
    19a0:	orrs	r0, r2, r3
    19a4:	beq	2214 <read_VXR+0x88c>
    19a8:	ldr	r0, [r8, #52]	; 0x34
    19ac:	mov	r7, r2
    19b0:	mov	r2, #0
    19b4:	mov	r6, r3
    19b8:	mov	r3, #4
    19bc:	mov	r5, r1
    19c0:	add	r1, sp, #76	; 0x4c
    19c4:	str	r2, [sp, #4]
    19c8:	adds	r2, r7, #8
    19cc:	str	r3, [sp]
    19d0:	str	r1, [sp, #8]
    19d4:	adc	r3, r6, #0
    19d8:	bl	a5c <read_bytes>
    19dc:	mvn	r4, #0
    19e0:	cmp	r0, #0
    19e4:	blt	2230 <read_VXR+0x8a8>
    19e8:	ldrb	r0, [sp, #76]	; 0x4c
    19ec:	ldrb	r1, [sp, #77]	; 0x4d
    19f0:	ldrb	r2, [sp, #78]	; 0x4e
    19f4:	ldrb	r3, [sp, #79]	; 0x4f
    19f8:	strb	r0, [sp, #79]	; 0x4f
    19fc:	strb	r3, [sp, #76]	; 0x4c
    1a00:	strb	r2, [sp, #77]	; 0x4d
    1a04:	strb	r1, [sp, #78]	; 0x4e
    1a08:	ldr	r2, [sp, #76]	; 0x4c
    1a0c:	cmp	r2, #6
    1a10:	bne	221c <read_VXR+0x894>
    1a14:	ldr	r0, [r8, #52]	; 0x34
    1a18:	mov	r9, #0
    1a1c:	mov	r2, #8
    1a20:	add	r1, sp, #64	; 0x40
    1a24:	stm	sp, {r2, r9}
    1a28:	adds	r2, r7, #12
    1a2c:	str	r1, [sp, #8]
    1a30:	adc	r3, r6, #0
    1a34:	bl	a5c <read_bytes>
    1a38:	cmp	r0, #0
    1a3c:	blt	2230 <read_VXR+0x8a8>
    1a40:	ldr	r0, [r8, #52]	; 0x34
    1a44:	adds	r2, r7, #20
    1a48:	add	r1, sp, #60	; 0x3c
    1a4c:	mov	sl, #4
    1a50:	str	r5, [sp, #36]	; 0x24
    1a54:	str	r9, [sp, #4]
    1a58:	adc	r3, r6, #0
    1a5c:	str	sl, [sp]
    1a60:	str	r1, [sp, #8]
    1a64:	bl	a5c <read_bytes>
    1a68:	cmp	r0, #0
    1a6c:	blt	2230 <read_VXR+0x8a8>
    1a70:	ldr	r0, [r8, #52]	; 0x34
    1a74:	mov	r2, #0
    1a78:	add	r1, sp, #56	; 0x38
    1a7c:	str	sl, [sp]
    1a80:	str	r2, [sp, #4]
    1a84:	adds	r2, r7, #24
    1a88:	str	r1, [sp, #8]
    1a8c:	adc	r3, r6, #0
    1a90:	bl	a5c <read_bytes>
    1a94:	cmp	r0, #0
    1a98:	blt	2230 <read_VXR+0x8a8>
    1a9c:	ldrb	r0, [sp, #71]	; 0x47
    1aa0:	ldrb	r1, [sp, #64]	; 0x40
    1aa4:	ldrb	r2, [sp, #65]	; 0x41
    1aa8:	ldrb	r3, [sp, #66]	; 0x42
    1aac:	ldrb	r5, [sp, #67]	; 0x43
    1ab0:	strb	r1, [sp, #71]	; 0x47
    1ab4:	strb	r0, [sp, #64]	; 0x40
    1ab8:	ldrb	r1, [sp, #63]	; 0x3f
    1abc:	ldrb	r0, [sp, #70]	; 0x46
    1ac0:	strb	r0, [sp, #65]	; 0x41
    1ac4:	strb	r2, [sp, #70]	; 0x46
    1ac8:	ldrb	r0, [sp, #69]	; 0x45
    1acc:	strb	r0, [sp, #66]	; 0x42
    1ad0:	strb	r3, [sp, #69]	; 0x45
    1ad4:	ldrb	r0, [sp, #68]	; 0x44
    1ad8:	strb	r5, [sp, #68]	; 0x44
    1adc:	adds	r5, r7, #28
    1ae0:	adc	r6, r6, #0
    1ae4:	strb	r0, [sp, #67]	; 0x43
    1ae8:	ldrb	r0, [sp, #60]	; 0x3c
    1aec:	strb	r0, [sp, #63]	; 0x3f
    1af0:	strb	r1, [sp, #60]	; 0x3c
    1af4:	ldrb	r0, [sp, #61]	; 0x3d
    1af8:	ldrb	r1, [sp, #62]	; 0x3e
    1afc:	strb	r0, [sp, #62]	; 0x3e
    1b00:	strb	r1, [sp, #61]	; 0x3d
    1b04:	ldrb	r0, [sp, #56]	; 0x38
    1b08:	ldrb	r1, [sp, #59]	; 0x3b
    1b0c:	strb	r0, [sp, #59]	; 0x3b
    1b10:	strb	r1, [sp, #56]	; 0x38
    1b14:	ldrb	r0, [sp, #57]	; 0x39
    1b18:	ldrb	r1, [sp, #58]	; 0x3a
    1b1c:	strb	r0, [sp, #58]	; 0x3a
    1b20:	strb	r1, [sp, #57]	; 0x39
    1b24:	ldr	r0, [sp, #56]	; 0x38
    1b28:	cmp	r0, #1
    1b2c:	str	r0, [sp, #28]
    1b30:	blt	21f0 <read_VXR+0x868>
    1b34:	ldr	r0, [sp, #60]	; 0x3c
    1b38:	vldr	d8, [pc, #928]	; 1ee0 <read_VXR+0x558>
    1b3c:	mov	r7, #0
    1b40:	mov	r4, #4
    1b44:	vmov.i32	d9, #2	; 0x00000002
    1b48:	mov	sl, #0
    1b4c:	str	r5, [sp, #24]
    1b50:	str	r6, [sp, #20]
    1b54:	str	r0, [sp, #32]
    1b58:	ldr	r0, [r8, #52]	; 0x34
    1b5c:	adds	r2, r5, sl, lsl #2
    1b60:	add	r1, sp, #52	; 0x34
    1b64:	stm	sp, {r4, r7}
    1b68:	adc	r3, r6, #0
    1b6c:	str	r1, [sp, #8]
    1b70:	bl	a5c <read_bytes>
    1b74:	cmp	r0, #0
    1b78:	blt	2258 <read_VXR+0x8d0>
    1b7c:	ldr	r0, [r8, #52]	; 0x34
    1b80:	stm	sp, {r4, r7}
    1b84:	add	r1, sp, #48	; 0x30
    1b88:	mov	r9, #4
    1b8c:	str	r1, [sp, #8]
    1b90:	ldr	r1, [sp, #32]
    1b94:	add	r4, r1, sl
    1b98:	lsl	r1, r4, #2
    1b9c:	adds	r2, r5, r4, lsl #2
    1ba0:	adc	r3, r6, r1, asr #31
    1ba4:	bl	a5c <read_bytes>
    1ba8:	cmp	r0, #0
    1bac:	blt	2258 <read_VXR+0x8d0>
    1bb0:	ldr	r0, [r8, #52]	; 0x34
    1bb4:	mov	r1, #8
    1bb8:	adds	r2, r5, r4, lsl #3
    1bbc:	stm	sp, {r1, r7}
    1bc0:	add	r1, sp, #40	; 0x28
    1bc4:	str	r1, [sp, #8]
    1bc8:	lsl	r1, r4, #3
    1bcc:	adc	r3, r6, r1, asr #31
    1bd0:	bl	a5c <read_bytes>
    1bd4:	cmp	r0, #0
    1bd8:	blt	2258 <read_VXR+0x8d0>
    1bdc:	ldrb	r0, [sp, #52]	; 0x34
    1be0:	ldrb	r1, [sp, #53]	; 0x35
    1be4:	ldrb	r2, [sp, #54]	; 0x36
    1be8:	ldrb	r3, [sp, #55]	; 0x37
    1bec:	strb	r0, [sp, #55]	; 0x37
    1bf0:	strb	r3, [sp, #52]	; 0x34
    1bf4:	strb	r2, [sp, #53]	; 0x35
    1bf8:	strb	r1, [sp, #54]	; 0x36
    1bfc:	ldrb	r0, [sp, #48]	; 0x30
    1c00:	ldrb	r1, [sp, #49]	; 0x31
    1c04:	ldrb	r3, [sp, #51]	; 0x33
    1c08:	ldrb	r2, [sp, #50]	; 0x32
    1c0c:	strb	r3, [sp, #48]	; 0x30
    1c10:	strb	r0, [sp, #51]	; 0x33
    1c14:	strb	r1, [sp, #50]	; 0x32
    1c18:	ldrb	r0, [sp, #40]	; 0x28
    1c1c:	ldrb	r1, [sp, #47]	; 0x2f
    1c20:	strb	r2, [sp, #49]	; 0x31
    1c24:	strb	r0, [sp, #47]	; 0x2f
    1c28:	strb	r1, [sp, #40]	; 0x28
    1c2c:	ldrb	r0, [sp, #41]	; 0x29
    1c30:	ldrb	r1, [sp, #46]	; 0x2e
    1c34:	strb	r0, [sp, #46]	; 0x2e
    1c38:	strb	r1, [sp, #41]	; 0x29
    1c3c:	ldrb	r0, [sp, #42]	; 0x2a
    1c40:	ldrb	r1, [sp, #45]	; 0x2d
    1c44:	strb	r0, [sp, #45]	; 0x2d
    1c48:	strb	r1, [sp, #42]	; 0x2a
    1c4c:	ldrb	r0, [sp, #43]	; 0x2b
    1c50:	ldrb	r1, [sp, #44]	; 0x2c
    1c54:	strb	r0, [sp, #44]	; 0x2c
    1c58:	strb	r1, [sp, #43]	; 0x2b
    1c5c:	ldr	r6, [sp, #44]	; 0x2c
    1c60:	ldr	r7, [sp, #40]	; 0x28
    1c64:	orrs	r0, r7, r6
    1c68:	beq	1dd8 <read_VXR+0x450>
    1c6c:	ldr	r0, [r8, #52]	; 0x34
    1c70:	ldr	r4, [sp, #48]	; 0x30
    1c74:	ldr	r5, [sp, #52]	; 0x34
    1c78:	mov	r1, #0
    1c7c:	adds	r2, r7, #8
    1c80:	str	r9, [sp]
    1c84:	str	r1, [sp, #4]
    1c88:	sub	r1, fp, #52	; 0x34
    1c8c:	adc	r3, r6, #0
    1c90:	str	r1, [sp, #8]
    1c94:	bl	a5c <read_bytes>
    1c98:	cmp	r0, #0
    1c9c:	blt	2258 <read_VXR+0x8d0>
    1ca0:	ldrb	r0, [fp, #-52]	; 0xffffffcc
    1ca4:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    1ca8:	ldrb	r2, [fp, #-50]	; 0xffffffce
    1cac:	ldrb	r3, [fp, #-49]	; 0xffffffcf
    1cb0:	strb	r0, [fp, #-49]	; 0xffffffcf
    1cb4:	strb	r3, [fp, #-52]	; 0xffffffcc
    1cb8:	strb	r2, [fp, #-51]	; 0xffffffcd
    1cbc:	strb	r1, [fp, #-50]	; 0xffffffce
    1cc0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1cc4:	cmp	r2, #13
    1cc8:	beq	1dec <read_VXR+0x464>
    1ccc:	cmp	r2, #7
    1cd0:	beq	1cf8 <read_VXR+0x370>
    1cd4:	cmp	r2, #6
    1cd8:	bne	2244 <read_VXR+0x8bc>
    1cdc:	ldr	r1, [sp, #36]	; 0x24
    1ce0:	mov	r0, r8
    1ce4:	mov	r2, r7
    1ce8:	mov	r3, r6
    1cec:	bl	1988 <read_VXR>
    1cf0:	mov	r9, r0
    1cf4:	b	21c8 <read_VXR+0x840>
    1cf8:	ldr	r0, [sp, #36]	; 0x24
    1cfc:	ldr	r0, [r0, #20]
    1d00:	cmp	r0, r4
    1d04:	suble	r4, r0, #1
    1d08:	cmp	r5, r4
    1d0c:	bgt	1dd8 <read_VXR+0x450>
    1d10:	ldr	r0, [sp, #36]	; 0x24
    1d14:	adds	lr, r7, #12
    1d18:	mov	r2, r5
    1d1c:	adc	r1, r6, #0
    1d20:	cmp	r4, r5
    1d24:	movgt	r2, r4
    1d28:	add	r2, r2, #1
    1d2c:	ldr	r9, [r0, #24]
    1d30:	ldr	r7, [r0, #28]
    1d34:	ldr	r0, [r0, #36]	; 0x24
    1d38:	sub	r6, r2, r5
    1d3c:	mov	r2, r5
    1d40:	cmp	r6, #2
    1d44:	bcc	1da4 <read_VXR+0x41c>
    1d48:	vmov.32	d16[0], lr
    1d4c:	vdup.32	d18, r5
    1d50:	str	r0, [sp, #16]
    1d54:	add	ip, r0, r5, lsl #3
    1d58:	bic	r0, r6, #1
    1d5c:	vdup.32	d19, r7
    1d60:	vdup.32	d20, r9
    1d64:	vmov.32	d16[1], r1
    1d68:	add	r2, r5, r0
    1d6c:	vadd.i32	d21, d18, d8
    1d70:	mov	r3, r0
    1d74:	vorr	d17, d16, d16
    1d78:	vsub.i32	d22, d21, d18
    1d7c:	vadd.i32	d21, d21, d9
    1d80:	subs	r3, r3, #2
    1d84:	vmul.i32	d22, d20, d22
    1d88:	vmul.i32	d22, d22, d19
    1d8c:	vaddw.s32	q11, q8, d22
    1d90:	vst1.64	{d22-d23}, [ip]!
    1d94:	bne	1d78 <read_VXR+0x3f0>
    1d98:	cmp	r6, r0
    1d9c:	ldr	r0, [sp, #16]
    1da0:	beq	1dd8 <read_VXR+0x450>
    1da4:	sub	r6, r2, r5
    1da8:	mul	r3, r9, r7
    1dac:	mul	r7, r3, r6
    1db0:	add	r6, r0, r2, lsl #3
    1db4:	sub	r2, r2, #1
    1db8:	adds	r0, lr, r7
    1dbc:	add	r2, r2, #1
    1dc0:	adc	r5, r1, r7, asr #31
    1dc4:	add	r7, r7, r3
    1dc8:	cmp	r2, r4
    1dcc:	stm	r6, {r0, r5}
    1dd0:	add	r6, r6, #8
    1dd4:	blt	1db8 <read_VXR+0x430>
    1dd8:	ldr	r5, [sp, #24]
    1ddc:	ldr	r6, [sp, #20]
    1de0:	mov	r7, #0
    1de4:	mov	r4, #4
    1de8:	b	21e0 <read_VXR+0x858>
    1dec:	ldr	r0, [sp, #36]	; 0x24
    1df0:	mov	r9, #0
    1df4:	ldr	r0, [r0, #20]
    1df8:	cmp	r0, r5
    1dfc:	ble	21c8 <read_VXR+0x840>
    1e00:	ldr	r1, [sp, #36]	; 0x24
    1e04:	ldr	r1, [r1, #40]	; 0x28
    1e08:	cmp	r1, #0
    1e0c:	bne	1e38 <read_VXR+0x4b0>
    1e10:	ldr	r9, [sp, #36]	; 0x24
    1e14:	ldr	r1, [r9, #24]
    1e18:	ldr	r2, [r9, #28]
    1e1c:	mul	r0, r1, r0
    1e20:	mul	r0, r0, r2
    1e24:	str	r0, [sp, #16]
    1e28:	bl	0 <malloc>
    1e2c:	cmp	r0, #0
    1e30:	str	r0, [r9, #40]	; 0x28
    1e34:	beq	1f9c <read_VXR+0x614>
    1e38:	ldr	r0, [r8, #52]	; 0x34
    1e3c:	mov	r1, #8
    1e40:	adds	r2, r7, #16
    1e44:	str	r1, [sp]
    1e48:	mov	r1, #0
    1e4c:	adc	r3, r6, #0
    1e50:	str	r1, [sp, #4]
    1e54:	sub	r1, fp, #64	; 0x40
    1e58:	str	r1, [sp, #8]
    1e5c:	bl	a5c <read_bytes>
    1e60:	mvn	r9, #0
    1e64:	cmp	r0, #0
    1e68:	blt	21c8 <read_VXR+0x840>
    1e6c:	ldrb	r1, [fp, #-64]	; 0xffffffc0
    1e70:	ldrb	r2, [fp, #-63]	; 0xffffffc1
    1e74:	ldrb	r3, [fp, #-62]	; 0xffffffc2
    1e78:	ldrb	ip, [fp, #-57]	; 0xffffffc7
    1e7c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
    1e80:	strb	r1, [fp, #-57]	; 0xffffffc7
    1e84:	ldrb	r1, [fp, #-58]	; 0xffffffc6
    1e88:	strb	r2, [fp, #-58]	; 0xffffffc6
    1e8c:	ldrb	r2, [fp, #-59]	; 0xffffffc5
    1e90:	strb	r3, [fp, #-59]	; 0xffffffc5
    1e94:	ldrb	r3, [fp, #-60]	; 0xffffffc4
    1e98:	strb	r0, [fp, #-60]	; 0xffffffc4
    1e9c:	strb	ip, [fp, #-64]	; 0xffffffc0
    1ea0:	strb	r1, [fp, #-63]	; 0xffffffc1
    1ea4:	adds	r1, r7, #24
    1ea8:	strb	r2, [fp, #-62]	; 0xffffffc2
    1eac:	adc	r2, r6, #0
    1eb0:	strb	r3, [fp, #-61]	; 0xffffffc3
    1eb4:	ldr	r6, [fp, #-64]	; 0xffffffc0
    1eb8:	ldr	r7, [fp, #-60]	; 0xffffffc4
    1ebc:	rsbs	r0, r6, #19
    1ec0:	rscs	r0, r7, #0
    1ec4:	blt	1ee8 <read_VXR+0x560>
    1ec8:	movw	r0, #65236	; 0xfed4
    1ecc:	movw	r1, #0
    1ed0:	movt	r0, #65535	; 0xffff
    1ed4:	movt	r1, #0
    1ed8:	bl	0 <coda_set_error>
    1edc:	b	21c8 <read_VXR+0x840>
    1ee0:	.word	0x00000000
    1ee4:	.word	0x00000001
    1ee8:	mov	r0, r6
    1eec:	str	r2, [sp, #12]
    1ef0:	str	r1, [sp, #16]
    1ef4:	bl	0 <malloc>
    1ef8:	cmp	r0, #0
    1efc:	beq	1fb0 <read_VXR+0x628>
    1f00:	mov	r1, r0
    1f04:	ldr	r0, [r8, #52]	; 0x34
    1f08:	stm	sp, {r6, r7}
    1f0c:	ldr	r2, [sp, #16]
    1f10:	ldr	r3, [sp, #12]
    1f14:	str	r1, [sp, #8]
    1f18:	mov	r7, r1
    1f1c:	bl	a5c <read_bytes>
    1f20:	cmn	r0, #1
    1f24:	ble	1fdc <read_VXR+0x654>
    1f28:	movw	r2, #0
    1f2c:	mov	r0, #0
    1f30:	add	r9, sp, #80	; 0x50
    1f34:	mov	r1, #31
    1f38:	mov	r3, #56	; 0x38
    1f3c:	str	r7, [sp, #16]
    1f40:	str	r0, [sp, #84]	; 0x54
    1f44:	str	r0, [sp, #80]	; 0x50
    1f48:	str	r0, [sp, #112]	; 0x70
    1f4c:	str	r0, [sp, #116]	; 0x74
    1f50:	str	r0, [sp, #120]	; 0x78
    1f54:	str	r0, [sp, #104]	; 0x68
    1f58:	mov	r0, r9
    1f5c:	movt	r2, #0
    1f60:	bl	0 <coda_inflateInit2_>
    1f64:	cmp	r0, #0
    1f68:	beq	1fe4 <read_VXR+0x65c>
    1f6c:	movw	r1, #0
    1f70:	mvn	r0, #21
    1f74:	movt	r1, #0
    1f78:	bl	0 <coda_set_error>
    1f7c:	ldr	r1, [sp, #104]	; 0x68
    1f80:	mvn	r9, #0
    1f84:	cmp	r1, #0
    1f88:	beq	21c0 <read_VXR+0x838>
    1f8c:	movw	r0, #0
    1f90:	movt	r0, #0
    1f94:	bl	0 <coda_add_error_message>
    1f98:	b	21c0 <read_VXR+0x838>
    1f9c:	ldr	r2, [sp, #16]
    1fa0:	movw	r1, #0
    1fa4:	movw	r0, #629	; 0x275
    1fa8:	mvn	r9, #0
    1fac:	b	1fc0 <read_VXR+0x638>
    1fb0:	movw	r1, #0
    1fb4:	mov	r0, #652	; 0x28c
    1fb8:	mvn	r9, #0
    1fbc:	mov	r2, r6
    1fc0:	str	r0, [sp]
    1fc4:	mvn	r0, #0
    1fc8:	movt	r1, #0
    1fcc:	movw	r3, #0
    1fd0:	movt	r3, #0
    1fd4:	bl	0 <coda_set_error>
    1fd8:	b	21c8 <read_VXR+0x840>
    1fdc:	mov	r0, r7
    1fe0:	b	21c4 <read_VXR+0x83c>
    1fe4:	ldr	r0, [sp, #16]
    1fe8:	ldr	r2, [sp, #36]	; 0x24
    1fec:	str	r6, [sp, #84]	; 0x54
    1ff0:	mov	r6, r4
    1ff4:	str	r0, [sp, #80]	; 0x50
    1ff8:	ldr	r0, [r2, #24]
    1ffc:	ldr	r1, [r2, #28]
    2000:	ldr	r7, [r2, #20]
    2004:	ldr	r2, [r2, #40]	; 0x28
    2008:	mul	r0, r1, r0
    200c:	cmp	r7, r4
    2010:	mla	r1, r0, r5, r2
    2014:	suble	r6, r7, #1
    2018:	str	r1, [sp, #92]	; 0x5c
    201c:	rsb	r1, r5, #1
    2020:	add	r1, r1, r6
    2024:	mul	r0, r0, r1
    2028:	mov	r1, #4
    202c:	str	r0, [sp, #96]	; 0x60
    2030:	mov	r0, r9
    2034:	bl	0 <coda_inflate>
    2038:	cmn	r0, #2
    203c:	beq	2260 <read_VXR+0x8d8>
    2040:	cmp	r7, r4
    2044:	mov	r1, #0
    2048:	mvn	r9, #0
    204c:	movwle	r1, #1
    2050:	cmn	r0, #1
    2054:	bgt	2090 <read_VXR+0x708>
    2058:	add	r2, r0, #5
    205c:	clz	r2, r2
    2060:	lsr	r2, r2, #5
    2064:	ands	r1, r2, r1
    2068:	bne	2090 <read_VXR+0x708>
    206c:	cmn	r0, #4
    2070:	add	r4, sp, #80	; 0x50
    2074:	beq	2180 <read_VXR+0x7f8>
    2078:	cmn	r0, #3
    207c:	bne	2190 <read_VXR+0x808>
    2080:	movw	r1, #0
    2084:	mvn	r0, #21
    2088:	movt	r1, #0
    208c:	b	219c <read_VXR+0x814>
    2090:	ldr	r0, [sp, #16]
    2094:	bl	0 <free>
    2098:	add	r0, sp, #80	; 0x50
    209c:	bl	0 <coda_inflateEnd>
    20a0:	cmp	r0, #0
    20a4:	beq	20d4 <read_VXR+0x74c>
    20a8:	movw	r1, #0
    20ac:	mvn	r0, #21
    20b0:	movt	r1, #0
    20b4:	bl	0 <coda_set_error>
    20b8:	ldr	r1, [sp, #104]	; 0x68
    20bc:	cmp	r1, #0
    20c0:	beq	21c8 <read_VXR+0x840>
    20c4:	movw	r0, #0
    20c8:	movt	r0, #0
    20cc:	bl	0 <coda_add_error_message>
    20d0:	b	21c8 <read_VXR+0x840>
    20d4:	cmp	r5, r6
    20d8:	bgt	1dd8 <read_VXR+0x450>
    20dc:	ldr	r2, [sp, #36]	; 0x24
    20e0:	cmp	r6, r5
    20e4:	mov	r0, r5
    20e8:	movgt	r0, r6
    20ec:	add	r0, r0, #1
    20f0:	sub	r3, r0, r5
    20f4:	ldr	r0, [r2, #24]
    20f8:	ldr	r1, [r2, #28]
    20fc:	ldr	ip, [r2, #36]	; 0x24
    2100:	cmp	r3, #1
    2104:	bls	214c <read_VXR+0x7c4>
    2108:	vdup.32	d18, r5
    210c:	bic	r2, r3, #1
    2110:	add	r4, ip, r5, lsl #3
    2114:	vdup.32	d16, r1
    2118:	vdup.32	d17, r0
    211c:	add	r5, r5, r2
    2120:	vadd.i32	d18, d18, d8
    2124:	mov	r7, r2
    2128:	vmul.i32	d19, d17, d18
    212c:	vadd.i32	d18, d18, d9
    2130:	subs	r7, r7, #2
    2134:	vmul.i32	d19, d19, d16
    2138:	vmovl.s32	q10, d19
    213c:	vst1.64	{d20-d21}, [r4]!
    2140:	bne	2128 <read_VXR+0x7a0>
    2144:	cmp	r3, r2
    2148:	beq	1dd8 <read_VXR+0x450>
    214c:	mul	r3, r0, r1
    2150:	mul	r0, r5, r0
    2154:	add	r2, ip, r5, lsl #3
    2158:	mul	r0, r0, r1
    215c:	sub	r1, r5, #1
    2160:	asr	r5, r0, #31
    2164:	add	r1, r1, #1
    2168:	stm	r2, {r0, r5}
    216c:	add	r0, r0, r3
    2170:	add	r2, r2, #8
    2174:	cmp	r1, r6
    2178:	blt	2160 <read_VXR+0x7d8>
    217c:	b	1dd8 <read_VXR+0x450>
    2180:	mvn	r0, #0
    2184:	mov	r1, #0
    2188:	bl	0 <coda_set_error>
    218c:	b	21b8 <read_VXR+0x830>
    2190:	movw	r1, #0
    2194:	mvn	r0, #21
    2198:	movt	r1, #0
    219c:	bl	0 <coda_set_error>
    21a0:	ldr	r1, [sp, #104]	; 0x68
    21a4:	cmp	r1, #0
    21a8:	beq	21b8 <read_VXR+0x830>
    21ac:	movw	r0, #0
    21b0:	movt	r0, #0
    21b4:	bl	0 <coda_add_error_message>
    21b8:	mov	r0, r4
    21bc:	bl	0 <coda_inflateEnd>
    21c0:	ldr	r0, [sp, #16]
    21c4:	bl	0 <free>
    21c8:	ldr	r5, [sp, #24]
    21cc:	ldr	r6, [sp, #20]
    21d0:	cmp	r9, #0
    21d4:	mov	r7, #0
    21d8:	mov	r4, #4
    21dc:	bne	2258 <read_VXR+0x8d0>
    21e0:	ldr	r0, [sp, #28]
    21e4:	add	sl, sl, #1
    21e8:	cmp	sl, r0
    21ec:	blt	1b58 <read_VXR+0x1d0>
    21f0:	ldr	r2, [sp, #64]	; 0x40
    21f4:	ldr	r3, [sp, #68]	; 0x44
    21f8:	ldr	r1, [sp, #36]	; 0x24
    21fc:	mov	r0, r8
    2200:	bl	1988 <read_VXR>
    2204:	mov	r4, r0
    2208:	cmp	r0, #0
    220c:	mvnne	r4, #0
    2210:	b	2230 <read_VXR+0x8a8>
    2214:	mov	r4, #0
    2218:	b	2230 <read_VXR+0x8a8>
    221c:	movw	r0, #65236	; 0xfed4
    2220:	movw	r1, #0
    2224:	movt	r0, #65535	; 0xffff
    2228:	movt	r1, #0
    222c:	bl	0 <coda_set_error>
    2230:	mov	r0, r4
    2234:	sub	sp, fp, #48	; 0x30
    2238:	vpop	{d8-d9}
    223c:	add	sp, sp, #4
    2240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2244:	movw	r0, #65236	; 0xfed4
    2248:	movw	r1, #0
    224c:	movt	r0, #65535	; 0xffff
    2250:	movt	r1, #0
    2254:	bl	0 <coda_set_error>
    2258:	mvn	r4, #0
    225c:	b	2230 <read_VXR+0x8a8>
    2260:	movw	r0, #0
    2264:	movw	r1, #0
    2268:	movw	r3, #0
    226c:	movw	r2, #687	; 0x2af
    2270:	movt	r0, #0
    2274:	movt	r1, #0
    2278:	movt	r3, #0
    227c:	bl	0 <__assert_fail>

00002280 <read_AEDR>:
    2280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2284:	add	fp, sp, #28
    2288:	sub	sp, sp, #68	; 0x44
    228c:	mov	r9, r0
    2290:	orrs	r0, r2, r3
    2294:	beq	24c0 <read_AEDR+0x240>
    2298:	ldr	r0, [r9, #52]	; 0x34
    229c:	mov	r6, r2
    22a0:	mov	r2, #0
    22a4:	mov	r7, r3
    22a8:	mov	r3, #4
    22ac:	sub	r1, fp, #36	; 0x24
    22b0:	str	r2, [sp, #4]
    22b4:	adds	r2, r6, #8
    22b8:	str	r3, [sp]
    22bc:	str	r1, [sp, #8]
    22c0:	adc	r3, r7, #0
    22c4:	bl	a5c <read_bytes>
    22c8:	mvn	sl, #0
    22cc:	cmp	r0, #0
    22d0:	blt	24e0 <read_AEDR+0x260>
    22d4:	ldrb	r0, [fp, #-36]	; 0xffffffdc
    22d8:	ldrb	r1, [fp, #-35]	; 0xffffffdd
    22dc:	ldrb	r2, [fp, #-34]	; 0xffffffde
    22e0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
    22e4:	strb	r0, [fp, #-33]	; 0xffffffdf
    22e8:	strb	r3, [fp, #-36]	; 0xffffffdc
    22ec:	strb	r2, [fp, #-35]	; 0xffffffdd
    22f0:	strb	r1, [fp, #-34]	; 0xffffffde
    22f4:	ldr	r8, [fp, #-36]	; 0xffffffdc
    22f8:	cmp	r8, #5
    22fc:	cmpne	r8, #9
    2300:	bne	24c8 <read_AEDR+0x248>
    2304:	ldr	r0, [r9, #52]	; 0x34
    2308:	mov	r4, #0
    230c:	mov	r2, #8
    2310:	add	r1, sp, #48	; 0x30
    2314:	stm	sp, {r2, r4}
    2318:	adds	r2, r6, #12
    231c:	str	r1, [sp, #8]
    2320:	adc	r3, r7, #0
    2324:	bl	a5c <read_bytes>
    2328:	cmp	r0, #0
    232c:	blt	24e0 <read_AEDR+0x260>
    2330:	ldr	r0, [r9, #52]	; 0x34
    2334:	adds	r2, r6, #20
    2338:	add	r1, sp, #44	; 0x2c
    233c:	mov	r5, #4
    2340:	str	r4, [sp, #4]
    2344:	adc	r3, r7, #0
    2348:	str	r5, [sp]
    234c:	str	r1, [sp, #8]
    2350:	bl	a5c <read_bytes>
    2354:	cmp	r0, #0
    2358:	blt	24e0 <read_AEDR+0x260>
    235c:	ldr	r0, [r9, #52]	; 0x34
    2360:	adds	r2, r6, #24
    2364:	add	r1, sp, #40	; 0x28
    2368:	mov	r4, #0
    236c:	str	r5, [sp]
    2370:	adc	r3, r7, #0
    2374:	str	r4, [sp, #4]
    2378:	str	r1, [sp, #8]
    237c:	bl	a5c <read_bytes>
    2380:	cmp	r0, #0
    2384:	blt	24e0 <read_AEDR+0x260>
    2388:	ldr	r0, [r9, #52]	; 0x34
    238c:	adds	r2, r6, #28
    2390:	add	r1, sp, #36	; 0x24
    2394:	mov	r5, #4
    2398:	str	r4, [sp, #4]
    239c:	adc	r3, r7, #0
    23a0:	str	r5, [sp]
    23a4:	str	r1, [sp, #8]
    23a8:	bl	a5c <read_bytes>
    23ac:	cmp	r0, #0
    23b0:	blt	24e0 <read_AEDR+0x260>
    23b4:	ldr	r0, [r9, #52]	; 0x34
    23b8:	mov	r2, #0
    23bc:	add	r1, sp, #32
    23c0:	str	r5, [sp]
    23c4:	str	r2, [sp, #4]
    23c8:	adds	r2, r6, #32
    23cc:	str	r1, [sp, #8]
    23d0:	adc	r3, r7, #0
    23d4:	bl	a5c <read_bytes>
    23d8:	cmp	r0, #0
    23dc:	blt	24e0 <read_AEDR+0x260>
    23e0:	ldrb	r0, [sp, #55]	; 0x37
    23e4:	ldrb	r1, [sp, #48]	; 0x30
    23e8:	ldrb	r2, [sp, #49]	; 0x31
    23ec:	ldrb	r3, [sp, #50]	; 0x32
    23f0:	ldrb	r5, [sp, #51]	; 0x33
    23f4:	strb	r1, [sp, #55]	; 0x37
    23f8:	strb	r0, [sp, #48]	; 0x30
    23fc:	ldrb	r1, [sp, #47]	; 0x2f
    2400:	ldrb	r0, [sp, #54]	; 0x36
    2404:	strb	r0, [sp, #49]	; 0x31
    2408:	strb	r2, [sp, #54]	; 0x36
    240c:	ldrb	r0, [sp, #53]	; 0x35
    2410:	strb	r0, [sp, #50]	; 0x32
    2414:	strb	r3, [sp, #53]	; 0x35
    2418:	ldrb	r0, [sp, #52]	; 0x34
    241c:	strb	r5, [sp, #52]	; 0x34
    2420:	strb	r0, [sp, #51]	; 0x33
    2424:	ldrb	r0, [sp, #44]	; 0x2c
    2428:	strb	r0, [sp, #47]	; 0x2f
    242c:	strb	r1, [sp, #44]	; 0x2c
    2430:	ldrb	r0, [sp, #45]	; 0x2d
    2434:	ldrb	r1, [sp, #46]	; 0x2e
    2438:	strb	r0, [sp, #46]	; 0x2e
    243c:	strb	r1, [sp, #45]	; 0x2d
    2440:	ldrb	r0, [sp, #40]	; 0x28
    2444:	ldrb	r1, [sp, #43]	; 0x2b
    2448:	strb	r0, [sp, #43]	; 0x2b
    244c:	strb	r1, [sp, #40]	; 0x28
    2450:	ldrb	r0, [sp, #41]	; 0x29
    2454:	ldrb	r1, [sp, #42]	; 0x2a
    2458:	strb	r0, [sp, #42]	; 0x2a
    245c:	strb	r1, [sp, #41]	; 0x29
    2460:	ldrb	r0, [sp, #36]	; 0x24
    2464:	ldrb	r1, [sp, #39]	; 0x27
    2468:	ldr	r5, [sp, #40]	; 0x28
    246c:	strb	r0, [sp, #39]	; 0x27
    2470:	strb	r1, [sp, #36]	; 0x24
    2474:	ldrb	r0, [sp, #37]	; 0x25
    2478:	ldrb	r1, [sp, #38]	; 0x26
    247c:	cmp	r5, #32
    2480:	strb	r0, [sp, #38]	; 0x26
    2484:	strb	r1, [sp, #37]	; 0x25
    2488:	ldrb	r0, [sp, #32]
    248c:	ldrb	r1, [sp, #35]	; 0x23
    2490:	strb	r0, [sp, #35]	; 0x23
    2494:	strb	r1, [sp, #32]
    2498:	ldrb	r0, [sp, #33]	; 0x21
    249c:	ldrb	r1, [sp, #34]	; 0x22
    24a0:	strb	r0, [sp, #34]	; 0x22
    24a4:	strb	r1, [sp, #33]	; 0x21
    24a8:	bne	24ec <read_AEDR+0x26c>
    24ac:	movw	r1, #0
    24b0:	mvn	r0, #199	; 0xc7
    24b4:	movt	r1, #0
    24b8:	bl	0 <coda_set_error>
    24bc:	b	24e0 <read_AEDR+0x260>
    24c0:	mov	sl, #0
    24c4:	b	24e0 <read_AEDR+0x260>
    24c8:	movw	r0, #65236	; 0xfed4
    24cc:	movw	r1, #0
    24d0:	mov	r2, r8
    24d4:	movt	r0, #65535	; 0xffff
    24d8:	movt	r1, #0
    24dc:	bl	0 <coda_set_error>
    24e0:	mov	r0, sl
    24e4:	sub	sp, fp, #28
    24e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    24ec:	adds	r2, r6, #56	; 0x38
    24f0:	sub	r0, r5, #1
    24f4:	adc	r3, r7, #0
    24f8:	cmp	r0, #51	; 0x33
    24fc:	bhi	27b8 <read_AEDR+0x538>
    2500:	ldr	r1, [sp, #32]
    2504:	mov	r7, #1
    2508:	mov	r4, #0
    250c:	mov	r6, #2
    2510:	str	r1, [sp, #28]
    2514:	add	r1, pc, #8
    2518:	str	r2, [sp, #20]
    251c:	str	r3, [sp, #16]
    2520:	ldr	pc, [r1, r0, lsl #2]
    2524:	.word	0x00002684
    2528:	.word	0x00002648
    252c:	.word	0x000027b8
    2530:	.word	0x00002670
    2534:	.word	0x000027b8
    2538:	.word	0x000027b8
    253c:	.word	0x000027b8
    2540:	.word	0x00002614
    2544:	.word	0x000027b8
    2548:	.word	0x000027b8
    254c:	.word	0x00002654
    2550:	.word	0x00002660
    2554:	.word	0x000027b8
    2558:	.word	0x0000267c
    255c:	.word	0x000027b8
    2560:	.word	0x000027b8
    2564:	.word	0x000027b8
    2568:	.word	0x000027b8
    256c:	.word	0x000027b8
    2570:	.word	0x000027b8
    2574:	.word	0x00002604
    2578:	.word	0x000025f4
    257c:	.word	0x000027b8
    2580:	.word	0x000027b8
    2584:	.word	0x000027b8
    2588:	.word	0x000027b8
    258c:	.word	0x000027b8
    2590:	.word	0x000027b8
    2594:	.word	0x000027b8
    2598:	.word	0x000027b8
    259c:	.word	0x000025f4
    25a0:	.word	0x000027b8
    25a4:	.word	0x00002614
    25a8:	.word	0x000027b8
    25ac:	.word	0x000027b8
    25b0:	.word	0x000027b8
    25b4:	.word	0x000027b8
    25b8:	.word	0x000027b8
    25bc:	.word	0x000027b8
    25c0:	.word	0x000027b8
    25c4:	.word	0x00002684
    25c8:	.word	0x000027b8
    25cc:	.word	0x000027b8
    25d0:	.word	0x00002604
    25d4:	.word	0x000025f4
    25d8:	.word	0x000027b8
    25dc:	.word	0x000027b8
    25e0:	.word	0x000027b8
    25e4:	.word	0x000027b8
    25e8:	.word	0x000027b8
    25ec:	.word	0x00002620
    25f0:	.word	0x00002620
    25f4:	mov	r7, #8
    25f8:	mov	r4, #9
    25fc:	mov	r6, #3
    2600:	b	2684 <read_AEDR+0x404>
    2604:	mov	r7, #4
    2608:	mov	r4, #8
    260c:	mov	r6, #3
    2610:	b	2684 <read_AEDR+0x404>
    2614:	mov	r7, #8
    2618:	mov	r4, #6
    261c:	b	2684 <read_AEDR+0x404>
    2620:	mov	r0, #5
    2624:	bl	0 <coda_type_text_new>
    2628:	mov	r7, r0
    262c:	ldr	r0, [sp, #28]
    2630:	mov	r6, #4
    2634:	mov	r4, #11
    2638:	str	r0, [sp, #24]
    263c:	cmp	r7, #0
    2640:	bne	26a0 <read_AEDR+0x420>
    2644:	b	24e0 <read_AEDR+0x260>
    2648:	mov	r6, #2
    264c:	mov	r4, #2
    2650:	b	2668 <read_AEDR+0x3e8>
    2654:	mov	r4, #1
    2658:	mov	r7, #1
    265c:	b	2684 <read_AEDR+0x404>
    2660:	mov	r4, #3
    2664:	mov	r6, #2
    2668:	mov	r7, #2
    266c:	b	2684 <read_AEDR+0x404>
    2670:	mov	r4, #4
    2674:	mov	r7, #4
    2678:	b	2684 <read_AEDR+0x404>
    267c:	mov	r7, #4
    2680:	mov	r4, #5
    2684:	mov	r0, #5
    2688:	mov	r1, r6
    268c:	str	r7, [sp, #24]
    2690:	bl	0 <coda_type_number_new>
    2694:	mov	r7, r0
    2698:	cmp	r7, #0
    269c:	beq	24e0 <read_AEDR+0x260>
    26a0:	mov	r0, r7
    26a4:	mov	r1, r4
    26a8:	bl	0 <coda_type_set_read_type>
    26ac:	cmp	r0, #0
    26b0:	beq	26c0 <read_AEDR+0x440>
    26b4:	mov	r0, r7
    26b8:	bl	0 <coda_type_release>
    26bc:	b	24e0 <read_AEDR+0x260>
    26c0:	cmp	r6, #4
    26c4:	bne	2710 <read_AEDR+0x490>
    26c8:	sub	r0, r5, #51	; 0x33
    26cc:	cmp	r0, #2
    26d0:	bcc	2740 <read_AEDR+0x4c0>
    26d4:	ldr	r0, [sp, #28]
    26d8:	cmp	r0, #1
    26dc:	beq	2740 <read_AEDR+0x4c0>
    26e0:	mov	r0, #5
    26e4:	bl	0 <coda_type_array_new>
    26e8:	cmp	r0, #0
    26ec:	beq	26b4 <read_AEDR+0x434>
    26f0:	mov	r1, r7
    26f4:	mov	r6, r0
    26f8:	bl	0 <coda_type_array_set_base_type>
    26fc:	cmp	r0, #0
    2700:	beq	27cc <read_AEDR+0x54c>
    2704:	mov	r0, r6
    2708:	bl	0 <coda_type_release>
    270c:	b	26b4 <read_AEDR+0x434>
    2710:	ldr	r2, [sp, #24]
    2714:	mov	r0, r7
    2718:	asr	r3, r2, #31
    271c:	bl	0 <coda_type_set_byte_size>
    2720:	cmp	r0, #0
    2724:	bne	26b4 <read_AEDR+0x434>
    2728:	mov	r0, r7
    272c:	mov	r1, #1
    2730:	bl	0 <coda_type_number_set_endianness>
    2734:	cmp	r0, #0
    2738:	bne	26b4 <read_AEDR+0x434>
    273c:	b	26c8 <read_AEDR+0x448>
    2740:	ldr	r1, [sp, #24]
    2744:	sub	r0, fp, #32
    2748:	stm	sp, {r1, r7}
    274c:	str	r0, [sp, #8]
    2750:	mov	r0, r9
    2754:	ldr	r2, [sp, #20]
    2758:	ldr	r3, [sp, #16]
    275c:	bl	2960 <read_attribute_sub>
    2760:	mov	r6, r0
    2764:	mov	r0, r7
    2768:	bl	0 <coda_type_release>
    276c:	cmp	r6, #0
    2770:	bne	24e0 <read_AEDR+0x260>
    2774:	ldr	r6, [fp, #12]
    2778:	ldr	r4, [fp, #8]
    277c:	tst	r6, #1
    2780:	beq	27f4 <read_AEDR+0x574>
    2784:	cmp	r8, #5
    2788:	bne	27f4 <read_AEDR+0x574>
    278c:	ldr	r7, [fp, #-32]	; 0xffffffe0
    2790:	ldr	r0, [r9, #20]
    2794:	mov	r1, r4
    2798:	mov	r3, #1
    279c:	mov	r2, r7
    27a0:	bl	0 <coda_mem_type_add_attribute>
    27a4:	cmp	r0, #0
    27a8:	beq	2840 <read_AEDR+0x5c0>
    27ac:	mov	r0, r7
    27b0:	bl	0 <coda_dynamic_type_delete>
    27b4:	b	24e0 <read_AEDR+0x260>
    27b8:	movw	r1, #0
    27bc:	mvn	r0, #99	; 0x63
    27c0:	mov	r2, r5
    27c4:	movt	r1, #0
    27c8:	b	24dc <read_AEDR+0x25c>
    27cc:	mov	r0, r7
    27d0:	bl	0 <coda_type_release>
    27d4:	mov	r0, r6
    27d8:	mov	r1, #0
    27dc:	bl	0 <coda_type_array_add_variable_dimension>
    27e0:	cmp	r0, #0
    27e4:	beq	2880 <read_AEDR+0x600>
    27e8:	mov	r0, r6
    27ec:	bl	0 <coda_type_release>
    27f0:	b	24e0 <read_AEDR+0x260>
    27f4:	ldr	r0, [r9, #20]
    27f8:	ldr	r2, [sp, #36]	; 0x24
    27fc:	ldr	r1, [r0, #16]
    2800:	cmp	r2, #0
    2804:	blt	2864 <read_AEDR+0x5e4>
    2808:	cmp	r2, r1
    280c:	bge	2864 <read_AEDR+0x5e4>
    2810:	ldr	r0, [r0, #20]
    2814:	ldr	r0, [r0, r2, lsl #2]
    2818:	ldr	r1, [r0]
    281c:	cmp	r1, #103	; 0x67
    2820:	bne	2940 <read_AEDR+0x6c0>
    2824:	ldr	r7, [fp, #-32]	; 0xffffffe0
    2828:	mov	r1, r4
    282c:	mov	r3, #1
    2830:	mov	r2, r7
    2834:	bl	0 <coda_cdf_variable_add_attribute>
    2838:	cmp	r0, #0
    283c:	bne	27ac <read_AEDR+0x52c>
    2840:	ldr	r2, [sp, #48]	; 0x30
    2844:	ldr	r3, [sp, #52]	; 0x34
    2848:	mov	r0, r9
    284c:	stm	sp, {r4, r6}
    2850:	bl	2280 <read_AEDR>
    2854:	mov	sl, r0
    2858:	cmp	r0, #0
    285c:	mvnne	sl, #0
    2860:	b	24e0 <read_AEDR+0x260>
    2864:	movw	r0, #65236	; 0xfed4
    2868:	sub	r3, r1, #1
    286c:	movw	r1, #0
    2870:	movt	r0, #65535	; 0xffff
    2874:	movt	r1, #0
    2878:	bl	0 <coda_set_error>
    287c:	b	24e0 <read_AEDR+0x260>
    2880:	mov	r0, r6
    2884:	mov	r1, #0
    2888:	bl	0 <coda_mem_array_new>
    288c:	mov	r4, r0
    2890:	mov	r0, r6
    2894:	bl	0 <coda_type_release>
    2898:	cmp	r4, #0
    289c:	str	r4, [sp, #12]
    28a0:	beq	24e0 <read_AEDR+0x260>
    28a4:	ldr	r0, [sp, #28]
    28a8:	ldr	r1, [sp, #24]
    28ac:	cmp	r0, #1
    28b0:	ldr	r0, [sp, #20]
    28b4:	blt	2774 <read_AEDR+0x4f4>
    28b8:	mov	r6, #0
    28bc:	mov	r5, #0
    28c0:	stm	sp, {r1, r7}
    28c4:	adds	r2, r0, r6
    28c8:	sub	r1, fp, #32
    28cc:	ldr	r0, [sp, #16]
    28d0:	str	r1, [sp, #8]
    28d4:	adc	r3, r0, r6, asr #31
    28d8:	mov	r0, r9
    28dc:	bl	2960 <read_attribute_sub>
    28e0:	cmp	r0, #0
    28e4:	bne	2920 <read_AEDR+0x6a0>
    28e8:	ldr	r4, [fp, #-32]	; 0xffffffe0
    28ec:	ldr	r0, [sp, #12]
    28f0:	mov	r1, r4
    28f4:	bl	0 <coda_mem_array_add_element>
    28f8:	cmp	r0, #0
    28fc:	bne	292c <read_AEDR+0x6ac>
    2900:	ldr	r0, [sp, #28]
    2904:	add	r5, r5, #1
    2908:	ldr	r1, [sp, #24]
    290c:	cmp	r5, r0
    2910:	ldr	r0, [sp, #20]
    2914:	add	r6, r6, r1
    2918:	blt	28c0 <read_AEDR+0x640>
    291c:	b	2774 <read_AEDR+0x4f4>
    2920:	ldr	r0, [sp, #12]
    2924:	bl	0 <coda_dynamic_type_delete>
    2928:	b	24e0 <read_AEDR+0x260>
    292c:	ldr	r0, [sp, #12]
    2930:	bl	0 <coda_dynamic_type_delete>
    2934:	mov	r0, r4
    2938:	bl	0 <coda_dynamic_type_delete>
    293c:	b	24e0 <read_AEDR+0x260>
    2940:	movw	r0, #0
    2944:	movw	r1, #0
    2948:	movw	r3, #0
    294c:	movw	r2, #439	; 0x1b7
    2950:	movt	r0, #0
    2954:	movt	r1, #0
    2958:	movt	r3, #0
    295c:	bl	0 <__assert_fail>

00002960 <read_attribute_sub>:
    2960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2964:	add	fp, sp, #28
    2968:	sub	sp, sp, #28
    296c:	ldr	r8, [fp, #12]
    2970:	mov	r9, r0
    2974:	ldr	r5, [fp, #16]
    2978:	ldr	sl, [fp, #8]
    297c:	mov	r4, r3
    2980:	mov	r7, r2
    2984:	ldr	r0, [r8, #8]
    2988:	cmp	r0, #4
    298c:	bne	29d8 <read_attribute_sub+0x78>
    2990:	add	r6, sl, #1
    2994:	mov	r0, r6
    2998:	bl	0 <malloc>
    299c:	cmp	r0, #0
    29a0:	beq	2a0c <read_attribute_sub+0xac>
    29a4:	mov	r5, r0
    29a8:	ldr	r0, [r9, #52]	; 0x34
    29ac:	asr	r1, sl, #31
    29b0:	mov	r2, r7
    29b4:	mov	r3, r4
    29b8:	str	sl, [sp]
    29bc:	stmib	sp, {r1, r5}
    29c0:	bl	a5c <read_bytes>
    29c4:	cmp	r0, #0
    29c8:	beq	2a98 <read_attribute_sub+0x138>
    29cc:	mov	r0, r5
    29d0:	bl	0 <free>
    29d4:	b	2a04 <read_attribute_sub+0xa4>
    29d8:	ldr	r0, [r9, #52]	; 0x34
    29dc:	asr	r2, sl, #31
    29e0:	add	r1, sp, #16
    29e4:	mov	r3, r4
    29e8:	str	sl, [sp]
    29ec:	str	r2, [sp, #4]
    29f0:	mov	r2, r7
    29f4:	str	r1, [sp, #8]
    29f8:	bl	a5c <read_bytes>
    29fc:	cmp	r0, #0
    2a00:	beq	2a38 <read_attribute_sub+0xd8>
    2a04:	mvn	r4, #0
    2a08:	b	2bec <read_attribute_sub+0x28c>
    2a0c:	movw	r1, #0
    2a10:	movw	r3, #0
    2a14:	mov	r0, #76	; 0x4c
    2a18:	mov	r2, r6
    2a1c:	mvn	r4, #0
    2a20:	str	r0, [sp]
    2a24:	movt	r1, #0
    2a28:	movt	r3, #0
    2a2c:	mvn	r0, #0
    2a30:	bl	0 <coda_set_error>
    2a34:	b	2bec <read_attribute_sub+0x28c>
    2a38:	ldr	r0, [r9, #68]	; 0x44
    2a3c:	cmp	r0, #0
    2a40:	beq	2ad0 <read_attribute_sub+0x170>
    2a44:	ldr	r0, [r8, #12]
    2a48:	cmp	r0, #9
    2a4c:	bhi	2c60 <read_attribute_sub+0x300>
    2a50:	add	r1, pc, #0
    2a54:	ldr	pc, [r1, r0, lsl #2]
    2a58:	.word	0x00002a80
    2a5c:	.word	0x00002b48
    2a60:	.word	0x00002b18
    2a64:	.word	0x00002b78
    2a68:	.word	0x00002b90
    2a6c:	.word	0x00002b60
    2a70:	.word	0x00002ba8
    2a74:	.word	0x00002c60
    2a78:	.word	0x00002b30
    2a7c:	.word	0x00002bc8
    2a80:	ldrsb	r3, [sp, #16]
    2a84:	mov	r0, r8
    2a88:	mov	r1, #0
    2a8c:	mov	r2, r9
    2a90:	bl	0 <coda_mem_int8_new>
    2a94:	b	2bdc <read_attribute_sub+0x27c>
    2a98:	mov	r0, #0
    2a9c:	mov	r1, #0
    2aa0:	mov	r2, r9
    2aa4:	mov	r3, r5
    2aa8:	strb	r0, [r5, sl]
    2aac:	mov	r0, r8
    2ab0:	bl	0 <coda_mem_string_new>
    2ab4:	ldr	r1, [fp, #16]
    2ab8:	str	r0, [r1]
    2abc:	mov	r0, r5
    2ac0:	mov	r4, r1
    2ac4:	bl	0 <free>
    2ac8:	ldr	r0, [r4]
    2acc:	b	2be0 <read_attribute_sub+0x280>
    2ad0:	sub	r0, sl, #1
    2ad4:	cmp	r0, #7
    2ad8:	bhi	2c80 <read_attribute_sub+0x320>
    2adc:	add	r1, pc, #0
    2ae0:	ldr	pc, [r1, r0, lsl #2]
    2ae4:	.word	0x00002a44
    2ae8:	.word	0x00002b04
    2aec:	.word	0x00002c80
    2af0:	.word	0x00002c3c
    2af4:	.word	0x00002c80
    2af8:	.word	0x00002c80
    2afc:	.word	0x00002c80
    2b00:	.word	0x00002bf8
    2b04:	ldrb	r0, [sp, #16]
    2b08:	ldrb	r1, [sp, #17]
    2b0c:	strb	r0, [sp, #17]
    2b10:	strb	r1, [sp, #16]
    2b14:	b	2a44 <read_attribute_sub+0xe4>
    2b18:	ldrsh	r3, [sp, #16]
    2b1c:	mov	r0, r8
    2b20:	mov	r1, #0
    2b24:	mov	r2, r9
    2b28:	bl	0 <coda_mem_int16_new>
    2b2c:	b	2bdc <read_attribute_sub+0x27c>
    2b30:	vldr	s0, [sp, #16]
    2b34:	mov	r0, r8
    2b38:	mov	r1, #0
    2b3c:	mov	r2, r9
    2b40:	bl	0 <coda_mem_float_new>
    2b44:	b	2bdc <read_attribute_sub+0x27c>
    2b48:	ldrb	r3, [sp, #16]
    2b4c:	mov	r0, r8
    2b50:	mov	r1, #0
    2b54:	mov	r2, r9
    2b58:	bl	0 <coda_mem_uint8_new>
    2b5c:	b	2bdc <read_attribute_sub+0x27c>
    2b60:	ldr	r3, [sp, #16]
    2b64:	mov	r0, r8
    2b68:	mov	r1, #0
    2b6c:	mov	r2, r9
    2b70:	bl	0 <coda_mem_uint32_new>
    2b74:	b	2bdc <read_attribute_sub+0x27c>
    2b78:	ldrh	r3, [sp, #16]
    2b7c:	mov	r0, r8
    2b80:	mov	r1, #0
    2b84:	mov	r2, r9
    2b88:	bl	0 <coda_mem_uint16_new>
    2b8c:	b	2bdc <read_attribute_sub+0x27c>
    2b90:	ldr	r3, [sp, #16]
    2b94:	mov	r0, r8
    2b98:	mov	r1, #0
    2b9c:	mov	r2, r9
    2ba0:	bl	0 <coda_mem_int32_new>
    2ba4:	b	2bdc <read_attribute_sub+0x27c>
    2ba8:	ldr	r0, [sp, #16]
    2bac:	ldr	r1, [sp, #20]
    2bb0:	mov	r2, r9
    2bb4:	stm	sp, {r0, r1}
    2bb8:	mov	r0, r8
    2bbc:	mov	r1, #0
    2bc0:	bl	0 <coda_mem_int64_new>
    2bc4:	b	2bdc <read_attribute_sub+0x27c>
    2bc8:	vldr	d0, [sp, #16]
    2bcc:	mov	r0, r8
    2bd0:	mov	r1, #0
    2bd4:	mov	r2, r9
    2bd8:	bl	0 <coda_mem_double_new>
    2bdc:	str	r0, [r5]
    2be0:	mov	r4, #0
    2be4:	cmp	r0, #0
    2be8:	mvneq	r4, #0
    2bec:	mov	r0, r4
    2bf0:	sub	sp, fp, #28
    2bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2bf8:	ldrb	r0, [sp, #23]
    2bfc:	ldrb	r1, [sp, #16]
    2c00:	ldrb	r2, [sp, #17]
    2c04:	ldrb	r3, [sp, #18]
    2c08:	ldrb	r7, [sp, #19]
    2c0c:	strb	r1, [sp, #23]
    2c10:	strb	r0, [sp, #16]
    2c14:	ldrb	r0, [sp, #22]
    2c18:	strb	r0, [sp, #17]
    2c1c:	strb	r2, [sp, #22]
    2c20:	ldrb	r0, [sp, #21]
    2c24:	strb	r0, [sp, #18]
    2c28:	strb	r3, [sp, #21]
    2c2c:	ldrb	r0, [sp, #20]
    2c30:	strb	r7, [sp, #20]
    2c34:	strb	r0, [sp, #19]
    2c38:	b	2a44 <read_attribute_sub+0xe4>
    2c3c:	ldrb	r0, [sp, #16]
    2c40:	ldrb	r1, [sp, #17]
    2c44:	ldrb	r2, [sp, #18]
    2c48:	ldrb	r3, [sp, #19]
    2c4c:	strb	r0, [sp, #19]
    2c50:	strb	r3, [sp, #16]
    2c54:	strb	r2, [sp, #17]
    2c58:	strb	r1, [sp, #18]
    2c5c:	b	2a44 <read_attribute_sub+0xe4>
    2c60:	movw	r0, #0
    2c64:	movw	r1, #0
    2c68:	movw	r3, #0
    2c6c:	mov	r2, #175	; 0xaf
    2c70:	movt	r0, #0
    2c74:	movt	r1, #0
    2c78:	movt	r3, #0
    2c7c:	bl	0 <__assert_fail>
    2c80:	movw	r0, #0
    2c84:	movw	r1, #0
    2c88:	movw	r3, #0
    2c8c:	mov	r2, #129	; 0x81
    2c90:	movt	r0, #0
    2c94:	movt	r1, #0
    2c98:	movt	r3, #0
    2c9c:	bl	0 <__assert_fail>
