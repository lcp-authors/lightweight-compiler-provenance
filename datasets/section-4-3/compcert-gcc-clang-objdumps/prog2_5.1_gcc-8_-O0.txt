
../compcert-repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000109e4 <.init>:
   109e4:	push	{r3, lr}
   109e8:	bl	10ac4 <_start@@Base+0x3c>
   109ec:	pop	{r3, pc}

Disassembly of section .plt:

000109f0 <calloc@plt-0x14>:
   109f0:	push	{lr}		; (str lr, [sp, #-4]!)
   109f4:	ldr	lr, [pc, #4]	; 10a00 <calloc@plt-0x4>
   109f8:	add	lr, pc, lr
   109fc:	ldr	pc, [lr, #8]!
   10a00:	andeq	r2, r1, r0, lsl #12

00010a04 <calloc@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1536]!	; 0x600

00010a10 <printf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a1c <free@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a28 <strcpy@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a40 <malloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a58 <__gmon_start__@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

00010a88 <_start@@Base>:
   10a88:	mov	fp, #0
   10a8c:	mov	lr, #0
   10a90:	pop	{r1}		; (ldr r1, [sp], #4)
   10a94:	mov	r2, sp
   10a98:	push	{r2}		; (str r2, [sp, #-4]!)
   10a9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10aa0:	ldr	ip, [pc, #16]	; 10ab8 <_start@@Base+0x30>
   10aa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa8:	ldr	r0, [pc, #12]	; 10abc <_start@@Base+0x34>
   10aac:	ldr	r3, [pc, #12]	; 10ac0 <_start@@Base+0x38>
   10ab0:	bl	10a4c <__libc_start_main@plt>
   10ab4:	bl	10a7c <abort@plt>
   10ab8:	andeq	r1, r1, r8, lsr #30
   10abc:	andeq	r0, r1, r8, ror fp
   10ac0:	andeq	r1, r1, r8, asr #29
   10ac4:	ldr	r3, [pc, #20]	; 10ae0 <_start@@Base+0x58>
   10ac8:	ldr	r2, [pc, #20]	; 10ae4 <_start@@Base+0x5c>
   10acc:	add	r3, pc, r3
   10ad0:	ldr	r2, [r3, r2]
   10ad4:	cmp	r2, #0
   10ad8:	bxeq	lr
   10adc:	b	10a58 <__gmon_start__@plt>
   10ae0:	andeq	r2, r1, ip, lsr #10
   10ae4:	andeq	r0, r0, r8, lsr r0
   10ae8:	ldr	r0, [pc, #24]	; 10b08 <_start@@Base+0x80>
   10aec:	ldr	r3, [pc, #24]	; 10b0c <_start@@Base+0x84>
   10af0:	cmp	r3, r0
   10af4:	bxeq	lr
   10af8:	ldr	r3, [pc, #16]	; 10b10 <_start@@Base+0x88>
   10afc:	cmp	r3, #0
   10b00:	bxeq	lr
   10b04:	bx	r3
   10b08:	andeq	r3, r2, r4, asr #32
   10b0c:	andeq	r3, r2, r4, asr #32
   10b10:	andeq	r0, r0, r0
   10b14:	ldr	r0, [pc, #36]	; 10b40 <_start@@Base+0xb8>
   10b18:	ldr	r1, [pc, #36]	; 10b44 <_start@@Base+0xbc>
   10b1c:	sub	r1, r1, r0
   10b20:	asr	r1, r1, #2
   10b24:	add	r1, r1, r1, lsr #31
   10b28:	asrs	r1, r1, #1
   10b2c:	bxeq	lr
   10b30:	ldr	r3, [pc, #16]	; 10b48 <_start@@Base+0xc0>
   10b34:	cmp	r3, #0
   10b38:	bxeq	lr
   10b3c:	bx	r3
   10b40:	andeq	r3, r2, r4, asr #32
   10b44:	andeq	r3, r2, r4, asr #32
   10b48:	andeq	r0, r0, r0
   10b4c:	push	{r4, lr}
   10b50:	ldr	r4, [pc, #24]	; 10b70 <_start@@Base+0xe8>
   10b54:	ldrb	r3, [r4]
   10b58:	cmp	r3, #0
   10b5c:	popne	{r4, pc}
   10b60:	bl	10ae8 <_start@@Base+0x60>
   10b64:	mov	r3, #1
   10b68:	strb	r3, [r4]
   10b6c:	pop	{r4, pc}
   10b70:	andeq	r3, r2, r4, asr #32
   10b74:	b	10b14 <_start@@Base+0x8c>

00010b78 <main@@Base>:
   10b78:	str	fp, [sp, #-8]!
   10b7c:	str	lr, [sp, #4]
   10b80:	add	fp, sp, #4
   10b84:	sub	sp, sp, #64	; 0x40
   10b88:	mov	r1, #3
   10b8c:	mov	r0, #4
   10b90:	bl	112b8 <armazem_novo@@Base>
   10b94:	str	r0, [fp, #-12]
   10b98:	movw	r0, #7992	; 0x1f38
   10b9c:	movt	r0, #1
   10ba0:	bl	10a34 <puts@plt>
   10ba4:	vldr	s0, [pc, #948]	; 10f60 <main@@Base+0x3e8>
   10ba8:	movw	r0, #8012	; 0x1f4c
   10bac:	movt	r0, #1
   10bb0:	bl	11638 <contentor_novo@@Base>
   10bb4:	str	r0, [fp, #-16]
   10bb8:	vldr	s0, [pc, #932]	; 10f64 <main@@Base+0x3ec>
   10bbc:	movw	r0, #8020	; 0x1f54
   10bc0:	movt	r0, #1
   10bc4:	bl	11638 <contentor_novo@@Base>
   10bc8:	str	r0, [fp, #-20]	; 0xffffffec
   10bcc:	vldr	s0, [pc, #916]	; 10f68 <main@@Base+0x3f0>
   10bd0:	movw	r0, #8024	; 0x1f58
   10bd4:	movt	r0, #1
   10bd8:	bl	11638 <contentor_novo@@Base>
   10bdc:	str	r0, [fp, #-24]	; 0xffffffe8
   10be0:	vldr	s0, [pc, #900]	; 10f6c <main@@Base+0x3f4>
   10be4:	movw	r0, #8032	; 0x1f60
   10be8:	movt	r0, #1
   10bec:	bl	11638 <contentor_novo@@Base>
   10bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   10bf4:	vldr	s0, [pc, #884]	; 10f70 <main@@Base+0x3f8>
   10bf8:	movw	r0, #8040	; 0x1f68
   10bfc:	movt	r0, #1
   10c00:	bl	11638 <contentor_novo@@Base>
   10c04:	str	r0, [fp, #-32]	; 0xffffffe0
   10c08:	vldr	s0, [pc, #868]	; 10f74 <main@@Base+0x3fc>
   10c0c:	movw	r0, #8048	; 0x1f70
   10c10:	movt	r0, #1
   10c14:	bl	11638 <contentor_novo@@Base>
   10c18:	str	r0, [fp, #-36]	; 0xffffffdc
   10c1c:	vldr	s0, [pc, #852]	; 10f78 <main@@Base+0x400>
   10c20:	movw	r0, #8056	; 0x1f78
   10c24:	movt	r0, #1
   10c28:	bl	11638 <contentor_novo@@Base>
   10c2c:	str	r0, [fp, #-40]	; 0xffffffd8
   10c30:	vldr	s0, [pc, #836]	; 10f7c <main@@Base+0x404>
   10c34:	movw	r0, #8068	; 0x1f84
   10c38:	movt	r0, #1
   10c3c:	bl	11638 <contentor_novo@@Base>
   10c40:	str	r0, [fp, #-44]	; 0xffffffd4
   10c44:	vldr	s0, [pc, #804]	; 10f70 <main@@Base+0x3f8>
   10c48:	movw	r0, #8076	; 0x1f8c
   10c4c:	movt	r0, #1
   10c50:	bl	11638 <contentor_novo@@Base>
   10c54:	str	r0, [fp, #-48]	; 0xffffffd0
   10c58:	vldr	s0, [pc, #800]	; 10f80 <main@@Base+0x408>
   10c5c:	movw	r0, #8088	; 0x1f98
   10c60:	movt	r0, #1
   10c64:	bl	11638 <contentor_novo@@Base>
   10c68:	str	r0, [fp, #-52]	; 0xffffffcc
   10c6c:	vldr	s0, [pc, #784]	; 10f84 <main@@Base+0x40c>
   10c70:	movw	r0, #8096	; 0x1fa0
   10c74:	movt	r0, #1
   10c78:	bl	11638 <contentor_novo@@Base>
   10c7c:	str	r0, [fp, #-56]	; 0xffffffc8
   10c80:	vldr	s0, [pc, #768]	; 10f88 <main@@Base+0x410>
   10c84:	movw	r0, #8108	; 0x1fac
   10c88:	movt	r0, #1
   10c8c:	bl	11638 <contentor_novo@@Base>
   10c90:	str	r0, [fp, #-60]	; 0xffffffc4
   10c94:	vldr	s0, [pc, #752]	; 10f8c <main@@Base+0x414>
   10c98:	movw	r0, #8116	; 0x1fb4
   10c9c:	movt	r0, #1
   10ca0:	bl	11638 <contentor_novo@@Base>
   10ca4:	str	r0, [fp, #-64]	; 0xffffffc0
   10ca8:	movw	r0, #8124	; 0x1fbc
   10cac:	movt	r0, #1
   10cb0:	bl	10a34 <puts@plt>
   10cb4:	ldr	r0, [fp, #-12]
   10cb8:	bl	110dc <imprimeArmazem@@Base>
   10cbc:	movw	r0, #8152	; 0x1fd8
   10cc0:	movt	r0, #1
   10cc4:	bl	10a34 <puts@plt>
   10cc8:	ldr	r1, [fp, #-16]
   10ccc:	ldr	r0, [fp, #-12]
   10cd0:	bl	11418 <armazenar_contentor@@Base>
   10cd4:	mov	r3, r0
   10cd8:	cmp	r3, #0
   10cdc:	beq	10cf8 <main@@Base+0x180>
   10ce0:	ldr	r3, [fp, #-16]
   10ce4:	ldr	r3, [r3]
   10ce8:	mov	r1, r3
   10cec:	movw	r0, #8188	; 0x1ffc
   10cf0:	movt	r0, #1
   10cf4:	bl	10a10 <printf@plt>
   10cf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   10cfc:	ldr	r0, [fp, #-12]
   10d00:	bl	11418 <armazenar_contentor@@Base>
   10d04:	mov	r3, r0
   10d08:	cmp	r3, #0
   10d0c:	beq	10d28 <main@@Base+0x1b0>
   10d10:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d14:	ldr	r3, [r3]
   10d18:	mov	r1, r3
   10d1c:	movw	r0, #8188	; 0x1ffc
   10d20:	movt	r0, #1
   10d24:	bl	10a10 <printf@plt>
   10d28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d2c:	ldr	r0, [fp, #-12]
   10d30:	bl	11418 <armazenar_contentor@@Base>
   10d34:	mov	r3, r0
   10d38:	cmp	r3, #0
   10d3c:	beq	10d58 <main@@Base+0x1e0>
   10d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d44:	ldr	r3, [r3]
   10d48:	mov	r1, r3
   10d4c:	movw	r0, #8188	; 0x1ffc
   10d50:	movt	r0, #1
   10d54:	bl	10a10 <printf@plt>
   10d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10d5c:	ldr	r0, [fp, #-12]
   10d60:	bl	11418 <armazenar_contentor@@Base>
   10d64:	mov	r3, r0
   10d68:	cmp	r3, #0
   10d6c:	beq	10d88 <main@@Base+0x210>
   10d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d74:	ldr	r3, [r3]
   10d78:	mov	r1, r3
   10d7c:	movw	r0, #8188	; 0x1ffc
   10d80:	movt	r0, #1
   10d84:	bl	10a10 <printf@plt>
   10d88:	movw	r0, #8228	; 0x2024
   10d8c:	movt	r0, #1
   10d90:	bl	10a34 <puts@plt>
   10d94:	ldr	r0, [fp, #-12]
   10d98:	bl	110dc <imprimeArmazem@@Base>
   10d9c:	movw	r0, #8256	; 0x2040
   10da0:	movt	r0, #1
   10da4:	bl	10a34 <puts@plt>
   10da8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10dac:	ldr	r0, [fp, #-12]
   10db0:	bl	11418 <armazenar_contentor@@Base>
   10db4:	mov	r3, r0
   10db8:	cmp	r3, #0
   10dbc:	beq	10dd8 <main@@Base+0x260>
   10dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10dc4:	ldr	r3, [r3]
   10dc8:	mov	r1, r3
   10dcc:	movw	r0, #8188	; 0x1ffc
   10dd0:	movt	r0, #1
   10dd4:	bl	10a10 <printf@plt>
   10dd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10ddc:	ldr	r0, [fp, #-12]
   10de0:	bl	11418 <armazenar_contentor@@Base>
   10de4:	mov	r3, r0
   10de8:	cmp	r3, #0
   10dec:	beq	10e08 <main@@Base+0x290>
   10df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10df4:	ldr	r3, [r3]
   10df8:	mov	r1, r3
   10dfc:	movw	r0, #8188	; 0x1ffc
   10e00:	movt	r0, #1
   10e04:	bl	10a10 <printf@plt>
   10e08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10e0c:	ldr	r0, [fp, #-12]
   10e10:	bl	11418 <armazenar_contentor@@Base>
   10e14:	mov	r3, r0
   10e18:	cmp	r3, #0
   10e1c:	beq	10e38 <main@@Base+0x2c0>
   10e20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e24:	ldr	r3, [r3]
   10e28:	mov	r1, r3
   10e2c:	movw	r0, #8188	; 0x1ffc
   10e30:	movt	r0, #1
   10e34:	bl	10a10 <printf@plt>
   10e38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10e3c:	ldr	r0, [fp, #-12]
   10e40:	bl	11418 <armazenar_contentor@@Base>
   10e44:	mov	r3, r0
   10e48:	cmp	r3, #0
   10e4c:	beq	10e68 <main@@Base+0x2f0>
   10e50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10e54:	ldr	r3, [r3]
   10e58:	mov	r1, r3
   10e5c:	movw	r0, #8188	; 0x1ffc
   10e60:	movt	r0, #1
   10e64:	bl	10a10 <printf@plt>
   10e68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10e6c:	ldr	r0, [fp, #-12]
   10e70:	bl	11418 <armazenar_contentor@@Base>
   10e74:	mov	r3, r0
   10e78:	cmp	r3, #0
   10e7c:	beq	10e98 <main@@Base+0x320>
   10e80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10e84:	ldr	r3, [r3]
   10e88:	mov	r1, r3
   10e8c:	movw	r0, #8188	; 0x1ffc
   10e90:	movt	r0, #1
   10e94:	bl	10a10 <printf@plt>
   10e98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10e9c:	ldr	r0, [fp, #-12]
   10ea0:	bl	11418 <armazenar_contentor@@Base>
   10ea4:	mov	r3, r0
   10ea8:	cmp	r3, #0
   10eac:	beq	10ec8 <main@@Base+0x350>
   10eb0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10eb4:	ldr	r3, [r3]
   10eb8:	mov	r1, r3
   10ebc:	movw	r0, #8188	; 0x1ffc
   10ec0:	movt	r0, #1
   10ec4:	bl	10a10 <printf@plt>
   10ec8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10ecc:	ldr	r0, [fp, #-12]
   10ed0:	bl	11418 <armazenar_contentor@@Base>
   10ed4:	mov	r3, r0
   10ed8:	cmp	r3, #0
   10edc:	beq	10ef8 <main@@Base+0x380>
   10ee0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10ee4:	ldr	r3, [r3]
   10ee8:	mov	r1, r3
   10eec:	movw	r0, #8188	; 0x1ffc
   10ef0:	movt	r0, #1
   10ef4:	bl	10a10 <printf@plt>
   10ef8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10efc:	ldr	r0, [fp, #-12]
   10f00:	bl	11418 <armazenar_contentor@@Base>
   10f04:	mov	r3, r0
   10f08:	cmp	r3, #0
   10f0c:	beq	10f28 <main@@Base+0x3b0>
   10f10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10f14:	ldr	r3, [r3]
   10f18:	mov	r1, r3
   10f1c:	movw	r0, #8188	; 0x1ffc
   10f20:	movt	r0, #1
   10f24:	bl	10a10 <printf@plt>
   10f28:	movw	r0, #8292	; 0x2064
   10f2c:	movt	r0, #1
   10f30:	bl	10a34 <puts@plt>
   10f34:	ldr	r0, [fp, #-12]
   10f38:	bl	110dc <imprimeArmazem@@Base>
   10f3c:	ldr	r0, [fp, #-12]
   10f40:	bl	1137c <armazem_cheio@@Base>
   10f44:	mov	r3, r0
   10f48:	cmp	r3, #0
   10f4c:	beq	10f90 <main@@Base+0x418>
   10f50:	movw	r0, #8320	; 0x2080
   10f54:	movt	r0, #1
   10f58:	bl	10a34 <puts@plt>
   10f5c:	b	10f9c <main@@Base+0x424>
   10f60:	cmnmi	r6, #0
   10f64:	cmnmi	sl, #0
   10f68:	strmi	r8, [r4], #-0
   10f6c:	ldrtmi	r8, [r1], #-0
   10f70:			; <UNDEFINED> instruction: 0x43be0000
   10f74:	bicmi	r0, r3, #0
   10f78:	sbcmi	r0, r8, #0
   10f7c:	adcmi	r0, r0, #0
   10f80:	tstmi	r6, #0
   10f84:	orrmi	r0, r7, #0
   10f88:	bicsmi	r0, r7, #0
   10f8c:	movtmi	r0, #32768	; 0x8000
   10f90:	movw	r0, #8336	; 0x2090
   10f94:	movt	r0, #1
   10f98:	bl	10a34 <puts@plt>
   10f9c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10fa0:	ldr	r0, [fp, #-12]
   10fa4:	bl	11418 <armazenar_contentor@@Base>
   10fa8:	mov	r3, r0
   10fac:	cmp	r3, #0
   10fb0:	beq	10fcc <main@@Base+0x454>
   10fb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fb8:	ldr	r3, [r3]
   10fbc:	mov	r1, r3
   10fc0:	movw	r0, #8376	; 0x20b8
   10fc4:	movt	r0, #1
   10fc8:	bl	10a10 <printf@plt>
   10fcc:	movw	r0, #8452	; 0x2104
   10fd0:	movt	r0, #1
   10fd4:	bl	10a34 <puts@plt>
   10fd8:	mov	r3, #0
   10fdc:	str	r3, [fp, #-8]
   10fe0:	b	11010 <main@@Base+0x498>
   10fe4:	ldr	r0, [fp, #-12]
   10fe8:	bl	11518 <expedir_contentor@@Base>
   10fec:	str	r0, [fp, #-68]	; 0xffffffbc
   10ff0:	movw	r0, #8488	; 0x2128
   10ff4:	movt	r0, #1
   10ff8:	bl	10a34 <puts@plt>
   10ffc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11000:	bl	11700 <contentor_imprime@@Base>
   11004:	ldr	r3, [fp, #-8]
   11008:	add	r3, r3, #1
   1100c:	str	r3, [fp, #-8]
   11010:	ldr	r3, [fp, #-8]
   11014:	cmp	r3, #7
   11018:	ble	10fe4 <main@@Base+0x46c>
   1101c:	movw	r0, #8520	; 0x2148
   11020:	movt	r0, #1
   11024:	bl	10a34 <puts@plt>
   11028:	ldr	r0, [fp, #-12]
   1102c:	bl	110dc <imprimeArmazem@@Base>
   11030:	movw	r0, #8548	; 0x2164
   11034:	movt	r0, #1
   11038:	bl	10a34 <puts@plt>
   1103c:	mov	r3, #0
   11040:	str	r3, [fp, #-8]
   11044:	b	11074 <main@@Base+0x4fc>
   11048:	ldr	r0, [fp, #-12]
   1104c:	bl	11518 <expedir_contentor@@Base>
   11050:	str	r0, [fp, #-68]	; 0xffffffbc
   11054:	movw	r0, #8488	; 0x2128
   11058:	movt	r0, #1
   1105c:	bl	10a34 <puts@plt>
   11060:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11064:	bl	11700 <contentor_imprime@@Base>
   11068:	ldr	r3, [fp, #-8]
   1106c:	add	r3, r3, #1
   11070:	str	r3, [fp, #-8]
   11074:	ldr	r3, [fp, #-8]
   11078:	cmp	r3, #3
   1107c:	ble	11048 <main@@Base+0x4d0>
   11080:	movw	r0, #8584	; 0x2188
   11084:	movt	r0, #1
   11088:	bl	10a34 <puts@plt>
   1108c:	ldr	r0, [fp, #-12]
   11090:	bl	110dc <imprimeArmazem@@Base>
   11094:	ldr	r0, [fp, #-12]
   11098:	bl	11320 <armazem_vazio@@Base>
   1109c:	mov	r3, r0
   110a0:	cmp	r3, #0
   110a4:	beq	110b8 <main@@Base+0x540>
   110a8:	movw	r0, #8612	; 0x21a4
   110ac:	movt	r0, #1
   110b0:	bl	10a34 <puts@plt>
   110b4:	b	110c4 <main@@Base+0x54c>
   110b8:	movw	r0, #8628	; 0x21b4
   110bc:	movt	r0, #1
   110c0:	bl	10a34 <puts@plt>
   110c4:	mov	r3, #0
   110c8:	mov	r0, r3
   110cc:	sub	sp, fp, #4
   110d0:	ldr	fp, [sp]
   110d4:	add	sp, sp, #4
   110d8:	pop	{pc}		; (ldr pc, [sp], #4)

000110dc <imprimeArmazem@@Base>:
   110dc:	str	fp, [sp, #-8]!
   110e0:	str	lr, [sp, #4]
   110e4:	add	fp, sp, #4
   110e8:	sub	sp, sp, #32
   110ec:	str	r0, [fp, #-32]	; 0xffffffe0
   110f0:	mov	r3, #0
   110f4:	str	r3, [fp, #-20]	; 0xffffffec
   110f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   110fc:	cmp	r3, #0
   11100:	beq	112a4 <imprimeArmazem@@Base+0x1c8>
   11104:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11108:	ldr	r3, [r3, #8]
   1110c:	cmp	r3, #0
   11110:	beq	112a4 <imprimeArmazem@@Base+0x1c8>
   11114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11118:	ldr	r3, [r3, #8]
   1111c:	ldr	r3, [r3, #4]
   11120:	mov	r1, #4
   11124:	mov	r0, r3
   11128:	bl	10a04 <calloc@plt>
   1112c:	mov	r3, r0
   11130:	str	r3, [fp, #-24]	; 0xffffffe8
   11134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11138:	ldr	r3, [r3, #8]
   1113c:	ldr	r3, [r3, #4]
   11140:	str	r3, [fp, #-28]	; 0xffffffe4
   11144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11148:	ldr	r3, [r3, #8]
   1114c:	ldr	r3, [r3]
   11150:	str	r3, [fp, #-16]
   11154:	mov	r3, #0
   11158:	str	r3, [fp, #-8]
   1115c:	b	11198 <imprimeArmazem@@Base+0xbc>
   11160:	ldr	r3, [fp, #-16]
   11164:	ldr	r2, [r3]
   11168:	ldr	r3, [fp, #-8]
   1116c:	lsl	r3, r3, #2
   11170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11174:	add	r3, r1, r3
   11178:	ldr	r2, [r2, #4]
   1117c:	str	r2, [r3]
   11180:	ldr	r3, [fp, #-16]
   11184:	ldr	r3, [r3, #4]
   11188:	str	r3, [fp, #-16]
   1118c:	ldr	r3, [fp, #-8]
   11190:	add	r3, r3, #1
   11194:	str	r3, [fp, #-8]
   11198:	ldr	r3, [fp, #-16]
   1119c:	cmp	r3, #0
   111a0:	bne	11160 <imprimeArmazem@@Base+0x84>
   111a4:	mov	r0, #10
   111a8:	bl	10a70 <putchar@plt>
   111ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111b0:	ldr	r3, [r3, #4]
   111b4:	str	r3, [fp, #-12]
   111b8:	b	11240 <imprimeArmazem@@Base+0x164>
   111bc:	movw	r0, #8668	; 0x21dc
   111c0:	movt	r0, #1
   111c4:	bl	10a10 <printf@plt>
   111c8:	mov	r3, #0
   111cc:	str	r3, [fp, #-8]
   111d0:	b	1121c <imprimeArmazem@@Base+0x140>
   111d4:	ldr	r3, [fp, #-8]
   111d8:	lsl	r3, r3, #2
   111dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   111e0:	add	r3, r2, r3
   111e4:	ldr	r3, [r3]
   111e8:	ldr	r2, [fp, #-12]
   111ec:	cmp	r2, r3
   111f0:	bgt	11204 <imprimeArmazem@@Base+0x128>
   111f4:	movw	r0, #8672	; 0x21e0
   111f8:	movt	r0, #1
   111fc:	bl	10a10 <printf@plt>
   11200:	b	11210 <imprimeArmazem@@Base+0x134>
   11204:	movw	r0, #8680	; 0x21e8
   11208:	movt	r0, #1
   1120c:	bl	10a10 <printf@plt>
   11210:	ldr	r3, [fp, #-8]
   11214:	add	r3, r3, #1
   11218:	str	r3, [fp, #-8]
   1121c:	ldr	r2, [fp, #-8]
   11220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11224:	cmp	r2, r3
   11228:	blt	111d4 <imprimeArmazem@@Base+0xf8>
   1122c:	mov	r0, #10
   11230:	bl	10a70 <putchar@plt>
   11234:	ldr	r3, [fp, #-12]
   11238:	sub	r3, r3, #1
   1123c:	str	r3, [fp, #-12]
   11240:	ldr	r3, [fp, #-12]
   11244:	cmp	r3, #0
   11248:	bgt	111bc <imprimeArmazem@@Base+0xe0>
   1124c:	movw	r0, #8688	; 0x21f0
   11250:	movt	r0, #1
   11254:	bl	10a10 <printf@plt>
   11258:	mov	r3, #0
   1125c:	str	r3, [fp, #-8]
   11260:	b	1127c <imprimeArmazem@@Base+0x1a0>
   11264:	movw	r0, #8692	; 0x21f4
   11268:	movt	r0, #1
   1126c:	bl	10a10 <printf@plt>
   11270:	ldr	r3, [fp, #-8]
   11274:	add	r3, r3, #1
   11278:	str	r3, [fp, #-8]
   1127c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11280:	ldr	r3, [r3]
   11284:	ldr	r2, [fp, #-8]
   11288:	cmp	r2, r3
   1128c:	blt	11264 <imprimeArmazem@@Base+0x188>
   11290:	movw	r0, #8700	; 0x21fc
   11294:	movt	r0, #1
   11298:	bl	10a34 <puts@plt>
   1129c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112a0:	bl	10a1c <free@plt>
   112a4:	nop	{0}
   112a8:	sub	sp, fp, #4
   112ac:	ldr	fp, [sp]
   112b0:	add	sp, sp, #4
   112b4:	pop	{pc}		; (ldr pc, [sp], #4)

000112b8 <armazem_novo@@Base>:
   112b8:	str	fp, [sp, #-8]!
   112bc:	str	lr, [sp, #4]
   112c0:	add	fp, sp, #4
   112c4:	sub	sp, sp, #16
   112c8:	str	r0, [fp, #-16]
   112cc:	str	r1, [fp, #-20]	; 0xffffffec
   112d0:	mov	r0, #12
   112d4:	bl	10a40 <malloc@plt>
   112d8:	mov	r3, r0
   112dc:	str	r3, [fp, #-8]
   112e0:	ldr	r3, [fp, #-8]
   112e4:	ldr	r2, [fp, #-16]
   112e8:	str	r2, [r3]
   112ec:	ldr	r3, [fp, #-8]
   112f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   112f4:	str	r2, [r3, #4]
   112f8:	bl	117f0 <fila_nova@@Base>
   112fc:	mov	r2, r0
   11300:	ldr	r3, [fp, #-8]
   11304:	str	r2, [r3, #8]
   11308:	ldr	r3, [fp, #-8]
   1130c:	mov	r0, r3
   11310:	sub	sp, fp, #4
   11314:	ldr	fp, [sp]
   11318:	add	sp, sp, #4
   1131c:	pop	{pc}		; (ldr pc, [sp], #4)

00011320 <armazem_vazio@@Base>:
   11320:	str	fp, [sp, #-8]!
   11324:	str	lr, [sp, #4]
   11328:	add	fp, sp, #4
   1132c:	sub	sp, sp, #8
   11330:	str	r0, [fp, #-8]
   11334:	ldr	r3, [fp, #-8]
   11338:	cmp	r3, #0
   1133c:	beq	1135c <armazem_vazio@@Base+0x3c>
   11340:	ldr	r3, [fp, #-8]
   11344:	ldr	r3, [r3, #8]
   11348:	mov	r0, r3
   1134c:	bl	118e4 <fila_tamanho@@Base>
   11350:	mov	r3, r0
   11354:	cmp	r3, #0
   11358:	bne	11364 <armazem_vazio@@Base+0x44>
   1135c:	mov	r3, #1
   11360:	b	11368 <armazem_vazio@@Base+0x48>
   11364:	mov	r3, #0
   11368:	mov	r0, r3
   1136c:	sub	sp, fp, #4
   11370:	ldr	fp, [sp]
   11374:	add	sp, sp, #4
   11378:	pop	{pc}		; (ldr pc, [sp], #4)

0001137c <armazem_cheio@@Base>:
   1137c:	str	fp, [sp, #-8]!
   11380:	str	lr, [sp, #4]
   11384:	add	fp, sp, #4
   11388:	sub	sp, sp, #8
   1138c:	str	r0, [fp, #-8]
   11390:	ldr	r0, [fp, #-8]
   11394:	bl	11320 <armazem_vazio@@Base>
   11398:	mov	r3, r0
   1139c:	cmp	r3, #0
   113a0:	beq	113ac <armazem_cheio@@Base+0x30>
   113a4:	mov	r3, #0
   113a8:	b	11404 <armazem_cheio@@Base+0x88>
   113ac:	ldr	r3, [fp, #-8]
   113b0:	ldr	r3, [r3, #8]
   113b4:	mov	r0, r3
   113b8:	bl	118e4 <fila_tamanho@@Base>
   113bc:	mov	r2, r0
   113c0:	ldr	r3, [fp, #-8]
   113c4:	ldr	r3, [r3]
   113c8:	cmp	r2, r3
   113cc:	bne	11400 <armazem_cheio@@Base+0x84>
   113d0:	ldr	r3, [fp, #-8]
   113d4:	ldr	r3, [r3, #8]
   113d8:	mov	r0, r3
   113dc:	bl	11978 <fila_back@@Base>
   113e0:	mov	r3, r0
   113e4:	ldr	r2, [r3, #4]
   113e8:	ldr	r3, [fp, #-8]
   113ec:	ldr	r3, [r3, #4]
   113f0:	cmp	r2, r3
   113f4:	bne	11400 <armazem_cheio@@Base+0x84>
   113f8:	mov	r3, #1
   113fc:	b	11404 <armazem_cheio@@Base+0x88>
   11400:	mov	r3, #0
   11404:	mov	r0, r3
   11408:	sub	sp, fp, #4
   1140c:	ldr	fp, [sp]
   11410:	add	sp, sp, #4
   11414:	pop	{pc}		; (ldr pc, [sp], #4)

00011418 <armazenar_contentor@@Base>:
   11418:	str	r4, [sp, #-12]!
   1141c:	str	fp, [sp, #4]
   11420:	str	lr, [sp, #8]
   11424:	add	fp, sp, #8
   11428:	sub	sp, sp, #20
   1142c:	str	r0, [fp, #-24]	; 0xffffffe8
   11430:	str	r1, [fp, #-28]	; 0xffffffe4
   11434:	bl	11bfc <pilha_nova@@Base>
   11438:	str	r0, [fp, #-16]
   1143c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11440:	cmp	r3, #0
   11444:	beq	11468 <armazenar_contentor@@Base+0x50>
   11448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1144c:	cmp	r3, #0
   11450:	beq	11468 <armazenar_contentor@@Base+0x50>
   11454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11458:	bl	1137c <armazem_cheio@@Base>
   1145c:	mov	r3, r0
   11460:	cmp	r3, #0
   11464:	beq	11470 <armazenar_contentor@@Base+0x58>
   11468:	mov	r3, #0
   1146c:	b	11500 <armazenar_contentor@@Base+0xe8>
   11470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11474:	bl	11320 <armazem_vazio@@Base>
   11478:	mov	r3, r0
   1147c:	cmp	r3, #0
   11480:	beq	114a0 <armazenar_contentor@@Base+0x88>
   11484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11488:	ldr	r4, [r3, #8]
   1148c:	bl	11bfc <pilha_nova@@Base>
   11490:	mov	r3, r0
   11494:	mov	r1, r3
   11498:	mov	r0, r4
   1149c:	bl	119f0 <fila_push@@Base>
   114a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114a4:	ldr	r3, [r3, #8]
   114a8:	mov	r0, r3
   114ac:	bl	11978 <fila_back@@Base>
   114b0:	mov	r3, r0
   114b4:	ldr	r2, [r3, #4]
   114b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114bc:	ldr	r3, [r3, #4]
   114c0:	cmp	r2, r3
   114c4:	bne	114dc <armazenar_contentor@@Base+0xc4>
   114c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114cc:	ldr	r3, [r3, #8]
   114d0:	ldr	r1, [fp, #-16]
   114d4:	mov	r0, r3
   114d8:	bl	119f0 <fila_push@@Base>
   114dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114e0:	ldr	r3, [r3, #8]
   114e4:	mov	r0, r3
   114e8:	bl	11978 <fila_back@@Base>
   114ec:	mov	r3, r0
   114f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114f4:	mov	r0, r3
   114f8:	bl	11d84 <pilha_push@@Base>
   114fc:	mov	r3, #1
   11500:	mov	r0, r3
   11504:	sub	sp, fp, #8
   11508:	ldr	r4, [sp]
   1150c:	ldr	fp, [sp, #4]
   11510:	add	sp, sp, #8
   11514:	pop	{pc}		; (ldr pc, [sp], #4)

00011518 <expedir_contentor@@Base>:
   11518:	str	r4, [sp, #-12]!
   1151c:	str	fp, [sp, #4]
   11520:	str	lr, [sp, #8]
   11524:	add	fp, sp, #8
   11528:	sub	sp, sp, #20
   1152c:	str	r0, [fp, #-24]	; 0xffffffe8
   11530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11534:	bl	11320 <armazem_vazio@@Base>
   11538:	mov	r3, r0
   1153c:	cmp	r3, #0
   11540:	bne	1156c <expedir_contentor@@Base+0x54>
   11544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11548:	ldr	r3, [r3, #8]
   1154c:	mov	r0, r3
   11550:	bl	11920 <fila_front@@Base>
   11554:	mov	r3, r0
   11558:	mov	r0, r3
   1155c:	bl	11d2c <pilha_top@@Base>
   11560:	mov	r3, r0
   11564:	cmp	r3, #0
   11568:	bne	11574 <expedir_contentor@@Base+0x5c>
   1156c:	mov	r3, #0
   11570:	b	11620 <expedir_contentor@@Base+0x108>
   11574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11578:	ldr	r3, [r3, #8]
   1157c:	mov	r0, r3
   11580:	bl	11920 <fila_front@@Base>
   11584:	mov	r3, r0
   11588:	mov	r0, r3
   1158c:	bl	11d2c <pilha_top@@Base>
   11590:	mov	r3, r0
   11594:	ldr	r4, [r3]
   11598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1159c:	ldr	r3, [r3, #8]
   115a0:	mov	r0, r3
   115a4:	bl	11920 <fila_front@@Base>
   115a8:	mov	r3, r0
   115ac:	mov	r0, r3
   115b0:	bl	11d2c <pilha_top@@Base>
   115b4:	mov	r3, r0
   115b8:	vldr	s15, [r3, #4]
   115bc:	vmov.f32	s0, s15
   115c0:	mov	r0, r4
   115c4:	bl	11638 <contentor_novo@@Base>
   115c8:	str	r0, [fp, #-16]
   115cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115d0:	ldr	r3, [r3, #8]
   115d4:	mov	r0, r3
   115d8:	bl	11920 <fila_front@@Base>
   115dc:	mov	r3, r0
   115e0:	ldr	r3, [r3, #4]
   115e4:	cmp	r3, #1
   115e8:	bgt	11600 <expedir_contentor@@Base+0xe8>
   115ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115f0:	ldr	r3, [r3, #8]
   115f4:	mov	r0, r3
   115f8:	bl	11ac0 <fila_pop@@Base>
   115fc:	b	1161c <expedir_contentor@@Base+0x104>
   11600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11604:	ldr	r3, [r3, #8]
   11608:	mov	r0, r3
   1160c:	bl	11920 <fila_front@@Base>
   11610:	mov	r3, r0
   11614:	mov	r0, r3
   11618:	bl	11e38 <pilha_pop@@Base>
   1161c:	ldr	r3, [fp, #-16]
   11620:	mov	r0, r3
   11624:	sub	sp, fp, #8
   11628:	ldr	r4, [sp]
   1162c:	ldr	fp, [sp, #4]
   11630:	add	sp, sp, #8
   11634:	pop	{pc}		; (ldr pc, [sp], #4)

00011638 <contentor_novo@@Base>:
   11638:	str	fp, [sp, #-8]!
   1163c:	str	lr, [sp, #4]
   11640:	add	fp, sp, #4
   11644:	sub	sp, sp, #16
   11648:	str	r0, [fp, #-16]
   1164c:	vstr	s0, [fp, #-20]	; 0xffffffec
   11650:	mov	r0, #8
   11654:	bl	10a40 <malloc@plt>
   11658:	mov	r3, r0
   1165c:	str	r3, [fp, #-8]
   11660:	ldr	r0, [fp, #-16]
   11664:	bl	10a64 <strlen@plt>
   11668:	mov	r3, r0
   1166c:	add	r3, r3, #1
   11670:	mov	r0, r3
   11674:	bl	10a40 <malloc@plt>
   11678:	mov	r3, r0
   1167c:	mov	r2, r3
   11680:	ldr	r3, [fp, #-8]
   11684:	str	r2, [r3]
   11688:	ldr	r3, [fp, #-8]
   1168c:	ldr	r3, [r3]
   11690:	ldr	r1, [fp, #-16]
   11694:	mov	r0, r3
   11698:	bl	10a28 <strcpy@plt>
   1169c:	ldr	r3, [fp, #-8]
   116a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   116a4:	str	r2, [r3, #4]
   116a8:	ldr	r3, [fp, #-8]
   116ac:	mov	r0, r3
   116b0:	sub	sp, fp, #4
   116b4:	ldr	fp, [sp]
   116b8:	add	sp, sp, #4
   116bc:	pop	{pc}		; (ldr pc, [sp], #4)

000116c0 <contentor_apaga@@Base>:
   116c0:	str	fp, [sp, #-8]!
   116c4:	str	lr, [sp, #4]
   116c8:	add	fp, sp, #4
   116cc:	sub	sp, sp, #8
   116d0:	str	r0, [fp, #-8]
   116d4:	ldr	r3, [fp, #-8]
   116d8:	ldr	r3, [r3]
   116dc:	mov	r0, r3
   116e0:	bl	10a1c <free@plt>
   116e4:	ldr	r0, [fp, #-8]
   116e8:	bl	10a1c <free@plt>
   116ec:	nop	{0}
   116f0:	sub	sp, fp, #4
   116f4:	ldr	fp, [sp]
   116f8:	add	sp, sp, #4
   116fc:	pop	{pc}		; (ldr pc, [sp], #4)

00011700 <contentor_imprime@@Base>:
   11700:	str	fp, [sp, #-8]!
   11704:	str	lr, [sp, #4]
   11708:	add	fp, sp, #4
   1170c:	sub	sp, sp, #8
   11710:	str	r0, [fp, #-8]
   11714:	ldr	r3, [fp, #-8]
   11718:	cmp	r3, #0
   1171c:	bne	11730 <contentor_imprime@@Base+0x30>
   11720:	movw	r0, #8704	; 0x2200
   11724:	movt	r0, #1
   11728:	bl	10a34 <puts@plt>
   1172c:	b	11754 <contentor_imprime@@Base+0x54>
   11730:	ldr	r3, [fp, #-8]
   11734:	ldr	r1, [r3]
   11738:	ldr	r3, [fp, #-8]
   1173c:	vldr	s15, [r3, #4]
   11740:	vcvt.f64.f32	d7, s15
   11744:	vmov	r2, r3, d7
   11748:	movw	r0, #8720	; 0x2210
   1174c:	movt	r0, #1
   11750:	bl	10a10 <printf@plt>
   11754:	nop	{0}
   11758:	sub	sp, fp, #4
   1175c:	ldr	fp, [sp]
   11760:	add	sp, sp, #4
   11764:	pop	{pc}		; (ldr pc, [sp], #4)

00011768 <fila_novo_elemento@@Base>:
   11768:	str	fp, [sp, #-8]!
   1176c:	str	lr, [sp, #4]
   11770:	add	fp, sp, #4
   11774:	sub	sp, sp, #16
   11778:	str	r0, [fp, #-16]
   1177c:	mov	r0, #8
   11780:	bl	10a40 <malloc@plt>
   11784:	mov	r3, r0
   11788:	str	r3, [fp, #-8]
   1178c:	ldr	r3, [fp, #-8]
   11790:	cmp	r3, #0
   11794:	bne	117a0 <fila_novo_elemento@@Base+0x38>
   11798:	mov	r3, #0
   1179c:	b	117dc <fila_novo_elemento@@Base+0x74>
   117a0:	ldr	r3, [fp, #-8]
   117a4:	ldr	r2, [fp, #-16]
   117a8:	str	r2, [r3]
   117ac:	ldr	r3, [fp, #-8]
   117b0:	ldr	r3, [r3]
   117b4:	cmp	r3, #0
   117b8:	bne	117cc <fila_novo_elemento@@Base+0x64>
   117bc:	ldr	r0, [fp, #-8]
   117c0:	bl	10a1c <free@plt>
   117c4:	mov	r3, #0
   117c8:	b	117dc <fila_novo_elemento@@Base+0x74>
   117cc:	ldr	r3, [fp, #-8]
   117d0:	mov	r2, #0
   117d4:	str	r2, [r3, #4]
   117d8:	ldr	r3, [fp, #-8]
   117dc:	mov	r0, r3
   117e0:	sub	sp, fp, #4
   117e4:	ldr	fp, [sp]
   117e8:	add	sp, sp, #4
   117ec:	pop	{pc}		; (ldr pc, [sp], #4)

000117f0 <fila_nova@@Base>:
   117f0:	str	fp, [sp, #-8]!
   117f4:	str	lr, [sp, #4]
   117f8:	add	fp, sp, #4
   117fc:	sub	sp, sp, #8
   11800:	mov	r0, #8
   11804:	bl	10a40 <malloc@plt>
   11808:	mov	r3, r0
   1180c:	str	r3, [fp, #-8]
   11810:	ldr	r3, [fp, #-8]
   11814:	cmp	r3, #0
   11818:	bne	11824 <fila_nova@@Base+0x34>
   1181c:	mov	r3, #0
   11820:	b	11840 <fila_nova@@Base+0x50>
   11824:	ldr	r3, [fp, #-8]
   11828:	mov	r2, #0
   1182c:	str	r2, [r3]
   11830:	ldr	r3, [fp, #-8]
   11834:	mov	r2, #0
   11838:	str	r2, [r3, #4]
   1183c:	ldr	r3, [fp, #-8]
   11840:	mov	r0, r3
   11844:	sub	sp, fp, #4
   11848:	ldr	fp, [sp]
   1184c:	add	sp, sp, #4
   11850:	pop	{pc}		; (ldr pc, [sp], #4)

00011854 <fila_apaga@@Base>:
   11854:	str	fp, [sp, #-8]!
   11858:	str	lr, [sp, #4]
   1185c:	add	fp, sp, #4
   11860:	sub	sp, sp, #16
   11864:	str	r0, [fp, #-16]
   11868:	ldr	r3, [fp, #-16]
   1186c:	cmp	r3, #0
   11870:	beq	118d0 <fila_apaga@@Base+0x7c>
   11874:	b	118b0 <fila_apaga@@Base+0x5c>
   11878:	ldr	r3, [fp, #-16]
   1187c:	ldr	r3, [r3]
   11880:	str	r3, [fp, #-8]
   11884:	ldr	r3, [fp, #-16]
   11888:	ldr	r3, [r3]
   1188c:	ldr	r2, [r3, #4]
   11890:	ldr	r3, [fp, #-16]
   11894:	str	r2, [r3]
   11898:	ldr	r3, [fp, #-8]
   1189c:	ldr	r3, [r3]
   118a0:	mov	r0, r3
   118a4:	bl	11c60 <pilha_apaga@@Base>
   118a8:	ldr	r0, [fp, #-8]
   118ac:	bl	10a1c <free@plt>
   118b0:	ldr	r3, [fp, #-16]
   118b4:	ldr	r3, [r3]
   118b8:	cmp	r3, #0
   118bc:	bne	11878 <fila_apaga@@Base+0x24>
   118c0:	ldr	r0, [fp, #-16]
   118c4:	bl	10a1c <free@plt>
   118c8:	nop	{0}
   118cc:	b	118d4 <fila_apaga@@Base+0x80>
   118d0:	nop	{0}
   118d4:	sub	sp, fp, #4
   118d8:	ldr	fp, [sp]
   118dc:	add	sp, sp, #4
   118e0:	pop	{pc}		; (ldr pc, [sp], #4)

000118e4 <fila_tamanho@@Base>:
   118e4:	push	{fp}		; (str fp, [sp, #-4]!)
   118e8:	add	fp, sp, #0
   118ec:	sub	sp, sp, #12
   118f0:	str	r0, [fp, #-8]
   118f4:	ldr	r3, [fp, #-8]
   118f8:	cmp	r3, #0
   118fc:	bne	11908 <fila_tamanho@@Base+0x24>
   11900:	mvn	r3, #0
   11904:	b	11910 <fila_tamanho@@Base+0x2c>
   11908:	ldr	r3, [fp, #-8]
   1190c:	ldr	r3, [r3, #4]
   11910:	mov	r0, r3
   11914:	add	sp, fp, #0
   11918:	pop	{fp}		; (ldr fp, [sp], #4)
   1191c:	bx	lr

00011920 <fila_front@@Base>:
   11920:	push	{fp}		; (str fp, [sp, #-4]!)
   11924:	add	fp, sp, #0
   11928:	sub	sp, sp, #20
   1192c:	str	r0, [fp, #-16]
   11930:	ldr	r3, [fp, #-16]
   11934:	cmp	r3, #0
   11938:	beq	1194c <fila_front@@Base+0x2c>
   1193c:	ldr	r3, [fp, #-16]
   11940:	ldr	r3, [r3, #4]
   11944:	cmp	r3, #0
   11948:	bne	11954 <fila_front@@Base+0x34>
   1194c:	mov	r3, #0
   11950:	b	11968 <fila_front@@Base+0x48>
   11954:	ldr	r3, [fp, #-16]
   11958:	ldr	r3, [r3]
   1195c:	str	r3, [fp, #-8]
   11960:	ldr	r3, [fp, #-8]
   11964:	ldr	r3, [r3]
   11968:	mov	r0, r3
   1196c:	add	sp, fp, #0
   11970:	pop	{fp}		; (ldr fp, [sp], #4)
   11974:	bx	lr

00011978 <fila_back@@Base>:
   11978:	push	{fp}		; (str fp, [sp, #-4]!)
   1197c:	add	fp, sp, #0
   11980:	sub	sp, sp, #20
   11984:	str	r0, [fp, #-16]
   11988:	ldr	r3, [fp, #-16]
   1198c:	cmp	r3, #0
   11990:	beq	119a4 <fila_back@@Base+0x2c>
   11994:	ldr	r3, [fp, #-16]
   11998:	ldr	r3, [r3, #4]
   1199c:	cmp	r3, #0
   119a0:	bne	119ac <fila_back@@Base+0x34>
   119a4:	mov	r3, #0
   119a8:	b	119e0 <fila_back@@Base+0x68>
   119ac:	ldr	r3, [fp, #-16]
   119b0:	ldr	r3, [r3]
   119b4:	str	r3, [fp, #-8]
   119b8:	b	119c8 <fila_back@@Base+0x50>
   119bc:	ldr	r3, [fp, #-8]
   119c0:	ldr	r3, [r3, #4]
   119c4:	str	r3, [fp, #-8]
   119c8:	ldr	r3, [fp, #-8]
   119cc:	ldr	r3, [r3, #4]
   119d0:	cmp	r3, #0
   119d4:	bne	119bc <fila_back@@Base+0x44>
   119d8:	ldr	r3, [fp, #-8]
   119dc:	ldr	r3, [r3]
   119e0:	mov	r0, r3
   119e4:	add	sp, fp, #0
   119e8:	pop	{fp}		; (ldr fp, [sp], #4)
   119ec:	bx	lr

000119f0 <fila_push@@Base>:
   119f0:	str	fp, [sp, #-8]!
   119f4:	str	lr, [sp, #4]
   119f8:	add	fp, sp, #4
   119fc:	sub	sp, sp, #24
   11a00:	str	r0, [fp, #-24]	; 0xffffffe8
   11a04:	str	r1, [fp, #-28]	; 0xffffffe4
   11a08:	mov	r3, #0
   11a0c:	str	r3, [fp, #-12]
   11a10:	mov	r3, #0
   11a14:	str	r3, [fp, #-16]
   11a18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a1c:	cmp	r3, #0
   11a20:	beq	11aa4 <fila_push@@Base+0xb4>
   11a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a28:	ldr	r3, [r3]
   11a2c:	str	r3, [fp, #-8]
   11a30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a34:	bl	11768 <fila_novo_elemento@@Base>
   11a38:	str	r0, [fp, #-16]
   11a3c:	ldr	r3, [fp, #-16]
   11a40:	cmp	r3, #0
   11a44:	beq	11aac <fila_push@@Base+0xbc>
   11a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a4c:	ldr	r3, [r3, #4]
   11a50:	add	r2, r3, #1
   11a54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a58:	str	r2, [r3, #4]
   11a5c:	ldr	r3, [fp, #-8]
   11a60:	cmp	r3, #0
   11a64:	bne	11a84 <fila_push@@Base+0x94>
   11a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a6c:	ldr	r2, [fp, #-16]
   11a70:	str	r2, [r3]
   11a74:	b	11ab0 <fila_push@@Base+0xc0>
   11a78:	ldr	r3, [fp, #-8]
   11a7c:	ldr	r3, [r3, #4]
   11a80:	str	r3, [fp, #-8]
   11a84:	ldr	r3, [fp, #-8]
   11a88:	ldr	r3, [r3, #4]
   11a8c:	cmp	r3, #0
   11a90:	bne	11a78 <fila_push@@Base+0x88>
   11a94:	ldr	r3, [fp, #-8]
   11a98:	ldr	r2, [fp, #-16]
   11a9c:	str	r2, [r3, #4]
   11aa0:	b	11ab0 <fila_push@@Base+0xc0>
   11aa4:	nop	{0}
   11aa8:	b	11ab0 <fila_push@@Base+0xc0>
   11aac:	nop	{0}
   11ab0:	sub	sp, fp, #4
   11ab4:	ldr	fp, [sp]
   11ab8:	add	sp, sp, #4
   11abc:	pop	{pc}		; (ldr pc, [sp], #4)

00011ac0 <fila_pop@@Base>:
   11ac0:	str	fp, [sp, #-8]!
   11ac4:	str	lr, [sp, #4]
   11ac8:	add	fp, sp, #4
   11acc:	sub	sp, sp, #16
   11ad0:	str	r0, [fp, #-16]
   11ad4:	mov	r3, #0
   11ad8:	str	r3, [fp, #-8]
   11adc:	ldr	r3, [fp, #-16]
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b44 <fila_pop@@Base+0x84>
   11ae8:	ldr	r3, [fp, #-16]
   11aec:	ldr	r3, [r3, #4]
   11af0:	cmp	r3, #0
   11af4:	beq	11b44 <fila_pop@@Base+0x84>
   11af8:	ldr	r3, [fp, #-16]
   11afc:	ldr	r3, [r3]
   11b00:	str	r3, [fp, #-12]
   11b04:	ldr	r3, [fp, #-16]
   11b08:	ldr	r3, [r3, #4]
   11b0c:	sub	r2, r3, #1
   11b10:	ldr	r3, [fp, #-16]
   11b14:	str	r2, [r3, #4]
   11b18:	ldr	r3, [fp, #-12]
   11b1c:	ldr	r2, [r3, #4]
   11b20:	ldr	r3, [fp, #-16]
   11b24:	str	r2, [r3]
   11b28:	ldr	r3, [fp, #-12]
   11b2c:	ldr	r3, [r3]
   11b30:	mov	r0, r3
   11b34:	bl	11c60 <pilha_apaga@@Base>
   11b38:	ldr	r0, [fp, #-12]
   11b3c:	bl	10a1c <free@plt>
   11b40:	b	11b48 <fila_pop@@Base+0x88>
   11b44:	nop	{0}
   11b48:	sub	sp, fp, #4
   11b4c:	ldr	fp, [sp]
   11b50:	add	sp, sp, #4
   11b54:	pop	{pc}		; (ldr pc, [sp], #4)

00011b58 <pilha_novo_elemento@@Base>:
   11b58:	str	fp, [sp, #-8]!
   11b5c:	str	lr, [sp, #4]
   11b60:	add	fp, sp, #4
   11b64:	sub	sp, sp, #16
   11b68:	str	r0, [fp, #-16]
   11b6c:	mov	r0, #8
   11b70:	bl	10a40 <malloc@plt>
   11b74:	mov	r3, r0
   11b78:	str	r3, [fp, #-8]
   11b7c:	ldr	r3, [fp, #-8]
   11b80:	cmp	r3, #0
   11b84:	bne	11b90 <pilha_novo_elemento@@Base+0x38>
   11b88:	mov	r3, #0
   11b8c:	b	11be8 <pilha_novo_elemento@@Base+0x90>
   11b90:	ldr	r3, [fp, #-16]
   11b94:	ldr	r2, [r3]
   11b98:	ldr	r3, [fp, #-16]
   11b9c:	vldr	s15, [r3, #4]
   11ba0:	vmov.f32	s0, s15
   11ba4:	mov	r0, r2
   11ba8:	bl	11638 <contentor_novo@@Base>
   11bac:	mov	r2, r0
   11bb0:	ldr	r3, [fp, #-8]
   11bb4:	str	r2, [r3]
   11bb8:	ldr	r3, [fp, #-8]
   11bbc:	ldr	r3, [r3]
   11bc0:	cmp	r3, #0
   11bc4:	bne	11bd8 <pilha_novo_elemento@@Base+0x80>
   11bc8:	ldr	r0, [fp, #-8]
   11bcc:	bl	10a1c <free@plt>
   11bd0:	mov	r3, #0
   11bd4:	b	11be8 <pilha_novo_elemento@@Base+0x90>
   11bd8:	ldr	r3, [fp, #-8]
   11bdc:	mov	r2, #0
   11be0:	str	r2, [r3, #4]
   11be4:	ldr	r3, [fp, #-8]
   11be8:	mov	r0, r3
   11bec:	sub	sp, fp, #4
   11bf0:	ldr	fp, [sp]
   11bf4:	add	sp, sp, #4
   11bf8:	pop	{pc}		; (ldr pc, [sp], #4)

00011bfc <pilha_nova@@Base>:
   11bfc:	str	fp, [sp, #-8]!
   11c00:	str	lr, [sp, #4]
   11c04:	add	fp, sp, #4
   11c08:	sub	sp, sp, #8
   11c0c:	mov	r0, #8
   11c10:	bl	10a40 <malloc@plt>
   11c14:	mov	r3, r0
   11c18:	str	r3, [fp, #-8]
   11c1c:	ldr	r3, [fp, #-8]
   11c20:	cmp	r3, #0
   11c24:	bne	11c30 <pilha_nova@@Base+0x34>
   11c28:	mov	r3, #0
   11c2c:	b	11c4c <pilha_nova@@Base+0x50>
   11c30:	ldr	r3, [fp, #-8]
   11c34:	mov	r2, #0
   11c38:	str	r2, [r3]
   11c3c:	ldr	r3, [fp, #-8]
   11c40:	mov	r2, #0
   11c44:	str	r2, [r3, #4]
   11c48:	ldr	r3, [fp, #-8]
   11c4c:	mov	r0, r3
   11c50:	sub	sp, fp, #4
   11c54:	ldr	fp, [sp]
   11c58:	add	sp, sp, #4
   11c5c:	pop	{pc}		; (ldr pc, [sp], #4)

00011c60 <pilha_apaga@@Base>:
   11c60:	str	fp, [sp, #-8]!
   11c64:	str	lr, [sp, #4]
   11c68:	add	fp, sp, #4
   11c6c:	sub	sp, sp, #16
   11c70:	str	r0, [fp, #-16]
   11c74:	ldr	r3, [fp, #-16]
   11c78:	cmp	r3, #0
   11c7c:	beq	11cdc <pilha_apaga@@Base+0x7c>
   11c80:	b	11cbc <pilha_apaga@@Base+0x5c>
   11c84:	ldr	r3, [fp, #-16]
   11c88:	ldr	r3, [r3]
   11c8c:	str	r3, [fp, #-8]
   11c90:	ldr	r3, [fp, #-16]
   11c94:	ldr	r3, [r3]
   11c98:	ldr	r2, [r3, #4]
   11c9c:	ldr	r3, [fp, #-16]
   11ca0:	str	r2, [r3]
   11ca4:	ldr	r3, [fp, #-8]
   11ca8:	ldr	r3, [r3]
   11cac:	mov	r0, r3
   11cb0:	bl	116c0 <contentor_apaga@@Base>
   11cb4:	ldr	r0, [fp, #-8]
   11cb8:	bl	10a1c <free@plt>
   11cbc:	ldr	r3, [fp, #-16]
   11cc0:	ldr	r3, [r3]
   11cc4:	cmp	r3, #0
   11cc8:	bne	11c84 <pilha_apaga@@Base+0x24>
   11ccc:	ldr	r0, [fp, #-16]
   11cd0:	bl	10a1c <free@plt>
   11cd4:	nop	{0}
   11cd8:	b	11ce0 <pilha_apaga@@Base+0x80>
   11cdc:	nop	{0}
   11ce0:	sub	sp, fp, #4
   11ce4:	ldr	fp, [sp]
   11ce8:	add	sp, sp, #4
   11cec:	pop	{pc}		; (ldr pc, [sp], #4)

00011cf0 <pilha_tamanho@@Base>:
   11cf0:	push	{fp}		; (str fp, [sp, #-4]!)
   11cf4:	add	fp, sp, #0
   11cf8:	sub	sp, sp, #12
   11cfc:	str	r0, [fp, #-8]
   11d00:	ldr	r3, [fp, #-8]
   11d04:	cmp	r3, #0
   11d08:	bne	11d14 <pilha_tamanho@@Base+0x24>
   11d0c:	mvn	r3, #0
   11d10:	b	11d1c <pilha_tamanho@@Base+0x2c>
   11d14:	ldr	r3, [fp, #-8]
   11d18:	ldr	r3, [r3, #4]
   11d1c:	mov	r0, r3
   11d20:	add	sp, fp, #0
   11d24:	pop	{fp}		; (ldr fp, [sp], #4)
   11d28:	bx	lr

00011d2c <pilha_top@@Base>:
   11d2c:	push	{fp}		; (str fp, [sp, #-4]!)
   11d30:	add	fp, sp, #0
   11d34:	sub	sp, sp, #20
   11d38:	str	r0, [fp, #-16]
   11d3c:	ldr	r3, [fp, #-16]
   11d40:	cmp	r3, #0
   11d44:	beq	11d58 <pilha_top@@Base+0x2c>
   11d48:	ldr	r3, [fp, #-16]
   11d4c:	ldr	r3, [r3, #4]
   11d50:	cmp	r3, #0
   11d54:	bne	11d60 <pilha_top@@Base+0x34>
   11d58:	mov	r3, #0
   11d5c:	b	11d74 <pilha_top@@Base+0x48>
   11d60:	ldr	r3, [fp, #-16]
   11d64:	ldr	r3, [r3]
   11d68:	str	r3, [fp, #-8]
   11d6c:	ldr	r3, [fp, #-8]
   11d70:	ldr	r3, [r3]
   11d74:	mov	r0, r3
   11d78:	add	sp, fp, #0
   11d7c:	pop	{fp}		; (ldr fp, [sp], #4)
   11d80:	bx	lr

00011d84 <pilha_push@@Base>:
   11d84:	str	fp, [sp, #-8]!
   11d88:	str	lr, [sp, #4]
   11d8c:	add	fp, sp, #4
   11d90:	sub	sp, sp, #16
   11d94:	str	r0, [fp, #-16]
   11d98:	str	r1, [fp, #-20]	; 0xffffffec
   11d9c:	mov	r3, #0
   11da0:	str	r3, [fp, #-8]
   11da4:	ldr	r3, [fp, #-16]
   11da8:	cmp	r3, #0
   11dac:	beq	11e1c <pilha_push@@Base+0x98>
   11db0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11db4:	bl	11b58 <pilha_novo_elemento@@Base>
   11db8:	str	r0, [fp, #-8]
   11dbc:	ldr	r3, [fp, #-8]
   11dc0:	cmp	r3, #0
   11dc4:	beq	11e24 <pilha_push@@Base+0xa0>
   11dc8:	ldr	r3, [fp, #-16]
   11dcc:	ldr	r3, [r3, #4]
   11dd0:	add	r2, r3, #1
   11dd4:	ldr	r3, [fp, #-16]
   11dd8:	str	r2, [r3, #4]
   11ddc:	ldr	r3, [fp, #-16]
   11de0:	ldr	r3, [r3]
   11de4:	cmp	r3, #0
   11de8:	bne	11dfc <pilha_push@@Base+0x78>
   11dec:	ldr	r3, [fp, #-16]
   11df0:	ldr	r2, [fp, #-8]
   11df4:	str	r2, [r3]
   11df8:	b	11e28 <pilha_push@@Base+0xa4>
   11dfc:	ldr	r3, [fp, #-16]
   11e00:	ldr	r2, [r3]
   11e04:	ldr	r3, [fp, #-8]
   11e08:	str	r2, [r3, #4]
   11e0c:	ldr	r3, [fp, #-16]
   11e10:	ldr	r2, [fp, #-8]
   11e14:	str	r2, [r3]
   11e18:	b	11e28 <pilha_push@@Base+0xa4>
   11e1c:	nop	{0}
   11e20:	b	11e28 <pilha_push@@Base+0xa4>
   11e24:	nop	{0}
   11e28:	sub	sp, fp, #4
   11e2c:	ldr	fp, [sp]
   11e30:	add	sp, sp, #4
   11e34:	pop	{pc}		; (ldr pc, [sp], #4)

00011e38 <pilha_pop@@Base>:
   11e38:	str	fp, [sp, #-8]!
   11e3c:	str	lr, [sp, #4]
   11e40:	add	fp, sp, #4
   11e44:	sub	sp, sp, #16
   11e48:	str	r0, [fp, #-16]
   11e4c:	ldr	r3, [fp, #-16]
   11e50:	cmp	r3, #0
   11e54:	beq	11eb4 <pilha_pop@@Base+0x7c>
   11e58:	ldr	r3, [fp, #-16]
   11e5c:	ldr	r3, [r3, #4]
   11e60:	cmp	r3, #0
   11e64:	beq	11eb4 <pilha_pop@@Base+0x7c>
   11e68:	ldr	r3, [fp, #-16]
   11e6c:	ldr	r3, [r3]
   11e70:	str	r3, [fp, #-8]
   11e74:	ldr	r3, [fp, #-8]
   11e78:	ldr	r2, [r3, #4]
   11e7c:	ldr	r3, [fp, #-16]
   11e80:	str	r2, [r3]
   11e84:	ldr	r3, [fp, #-16]
   11e88:	ldr	r3, [r3, #4]
   11e8c:	sub	r2, r3, #1
   11e90:	ldr	r3, [fp, #-16]
   11e94:	str	r2, [r3, #4]
   11e98:	ldr	r3, [fp, #-8]
   11e9c:	ldr	r3, [r3]
   11ea0:	mov	r0, r3
   11ea4:	bl	116c0 <contentor_apaga@@Base>
   11ea8:	ldr	r0, [fp, #-8]
   11eac:	bl	10a1c <free@plt>
   11eb0:	b	11eb8 <pilha_pop@@Base+0x80>
   11eb4:	nop	{0}
   11eb8:	sub	sp, fp, #4
   11ebc:	ldr	fp, [sp]
   11ec0:	add	sp, sp, #4
   11ec4:	pop	{pc}		; (ldr pc, [sp], #4)

00011ec8 <__libc_csu_init@@Base>:
   11ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ecc:	mov	r7, r0
   11ed0:	ldr	r6, [pc, #72]	; 11f20 <__libc_csu_init@@Base+0x58>
   11ed4:	ldr	r5, [pc, #72]	; 11f24 <__libc_csu_init@@Base+0x5c>
   11ed8:	add	r6, pc, r6
   11edc:	add	r5, pc, r5
   11ee0:	sub	r6, r6, r5
   11ee4:	mov	r8, r1
   11ee8:	mov	r9, r2
   11eec:	bl	109e4 <calloc@plt-0x20>
   11ef0:	asrs	r6, r6, #2
   11ef4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ef8:	mov	r4, #0
   11efc:	add	r4, r4, #1
   11f00:	ldr	r3, [r5], #4
   11f04:	mov	r2, r9
   11f08:	mov	r1, r8
   11f0c:	mov	r0, r7
   11f10:	blx	r3
   11f14:	cmp	r6, r4
   11f18:	bne	11efc <__libc_csu_init@@Base+0x34>
   11f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f20:	andeq	r1, r1, r4, lsr r0
   11f24:	andeq	r1, r1, ip, lsr #32

00011f28 <__libc_csu_fini@@Base>:
   11f28:	bx	lr

Disassembly of section .fini:

00011f2c <.fini>:
   11f2c:	push	{r3, lr}
   11f30:	pop	{r3, pc}
