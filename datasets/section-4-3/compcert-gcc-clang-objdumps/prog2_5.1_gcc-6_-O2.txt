
../compcert-repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <.init>:
   10a08:	push	{r3, lr}
   10a0c:	bl	10f6c <_start@@Base+0x3c>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <calloc@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <calloc@plt-0x4>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r1, [r1], -ip

00010a28 <calloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <free@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <memcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <abort@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010aac <main@@Base>:
   10aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ab0:	mov	r1, #3
   10ab4:	sub	sp, sp, #28
   10ab8:	mov	r0, #4
   10abc:	bl	1116c <armazem_novo@@Base>
   10ac0:	mov	r7, r0
   10ac4:	ldr	r0, [pc, #1004]	; 10eb8 <main@@Base+0x40c>
   10ac8:	bl	10a58 <puts@plt>
   10acc:	vldr	s0, [pc, #948]	; 10e88 <main@@Base+0x3dc>
   10ad0:	ldr	r0, [pc, #996]	; 10ebc <main@@Base+0x410>
   10ad4:	bl	11358 <contentor_novo@@Base>
   10ad8:	vldr	s0, [pc, #940]	; 10e8c <main@@Base+0x3e0>
   10adc:	mov	fp, r0
   10ae0:	ldr	r0, [pc, #984]	; 10ec0 <main@@Base+0x414>
   10ae4:	bl	11358 <contentor_novo@@Base>
   10ae8:	vldr	s0, [pc, #928]	; 10e90 <main@@Base+0x3e4>
   10aec:	mov	sl, r0
   10af0:	ldr	r0, [pc, #972]	; 10ec4 <main@@Base+0x418>
   10af4:	bl	11358 <contentor_novo@@Base>
   10af8:	vldr	s0, [pc, #916]	; 10e94 <main@@Base+0x3e8>
   10afc:	mov	r4, r0
   10b00:	ldr	r0, [pc, #960]	; 10ec8 <main@@Base+0x41c>
   10b04:	bl	11358 <contentor_novo@@Base>
   10b08:	vldr	s0, [pc, #904]	; 10e98 <main@@Base+0x3ec>
   10b0c:	mov	r9, r0
   10b10:	ldr	r0, [pc, #948]	; 10ecc <main@@Base+0x420>
   10b14:	bl	11358 <contentor_novo@@Base>
   10b18:	vldr	s0, [pc, #892]	; 10e9c <main@@Base+0x3f0>
   10b1c:	mov	r8, r0
   10b20:	ldr	r0, [pc, #936]	; 10ed0 <main@@Base+0x424>
   10b24:	bl	11358 <contentor_novo@@Base>
   10b28:	vldr	s0, [pc, #880]	; 10ea0 <main@@Base+0x3f4>
   10b2c:	str	r0, [sp]
   10b30:	ldr	r0, [pc, #924]	; 10ed4 <main@@Base+0x428>
   10b34:	bl	11358 <contentor_novo@@Base>
   10b38:	vldr	s0, [pc, #868]	; 10ea4 <main@@Base+0x3f8>
   10b3c:	mov	r6, r0
   10b40:	ldr	r0, [pc, #912]	; 10ed8 <main@@Base+0x42c>
   10b44:	bl	11358 <contentor_novo@@Base>
   10b48:	vldr	s0, [pc, #840]	; 10e98 <main@@Base+0x3ec>
   10b4c:	str	r0, [sp, #4]
   10b50:	ldr	r0, [pc, #900]	; 10edc <main@@Base+0x430>
   10b54:	bl	11358 <contentor_novo@@Base>
   10b58:	vldr	s0, [pc, #840]	; 10ea8 <main@@Base+0x3fc>
   10b5c:	str	r0, [sp, #8]
   10b60:	ldr	r0, [pc, #888]	; 10ee0 <main@@Base+0x434>
   10b64:	bl	11358 <contentor_novo@@Base>
   10b68:	vldr	s0, [pc, #828]	; 10eac <main@@Base+0x400>
   10b6c:	str	r0, [sp, #12]
   10b70:	ldr	r0, [pc, #876]	; 10ee4 <main@@Base+0x438>
   10b74:	bl	11358 <contentor_novo@@Base>
   10b78:	vldr	s0, [pc, #816]	; 10eb0 <main@@Base+0x404>
   10b7c:	str	r0, [sp, #16]
   10b80:	ldr	r0, [pc, #864]	; 10ee8 <main@@Base+0x43c>
   10b84:	bl	11358 <contentor_novo@@Base>
   10b88:	vldr	s0, [pc, #804]	; 10eb4 <main@@Base+0x408>
   10b8c:	mov	r5, r0
   10b90:	ldr	r0, [pc, #852]	; 10eec <main@@Base+0x440>
   10b94:	bl	11358 <contentor_novo@@Base>
   10b98:	str	r0, [sp, #20]
   10b9c:	ldr	r0, [pc, #844]	; 10ef0 <main@@Base+0x444>
   10ba0:	bl	10a58 <puts@plt>
   10ba4:	mov	r0, r7
   10ba8:	bl	11058 <imprimeArmazem@@Base>
   10bac:	ldr	r0, [pc, #832]	; 10ef4 <main@@Base+0x448>
   10bb0:	bl	10a58 <puts@plt>
   10bb4:	mov	r1, fp
   10bb8:	mov	r0, r7
   10bbc:	bl	1121c <armazenar_contentor@@Base>
   10bc0:	cmp	r0, #0
   10bc4:	bne	10da4 <main@@Base+0x2f8>
   10bc8:	mov	r1, sl
   10bcc:	mov	r0, r7
   10bd0:	bl	1121c <armazenar_contentor@@Base>
   10bd4:	cmp	r0, #0
   10bd8:	bne	10e78 <main@@Base+0x3cc>
   10bdc:	mov	r1, r4
   10be0:	mov	r0, r7
   10be4:	bl	1121c <armazenar_contentor@@Base>
   10be8:	cmp	r0, #0
   10bec:	bne	10e68 <main@@Base+0x3bc>
   10bf0:	mov	r1, r9
   10bf4:	mov	r0, r7
   10bf8:	bl	1121c <armazenar_contentor@@Base>
   10bfc:	cmp	r0, #0
   10c00:	bne	10e58 <main@@Base+0x3ac>
   10c04:	ldr	r0, [pc, #748]	; 10ef8 <main@@Base+0x44c>
   10c08:	bl	10a58 <puts@plt>
   10c0c:	mov	r0, r7
   10c10:	bl	11058 <imprimeArmazem@@Base>
   10c14:	ldr	r0, [pc, #736]	; 10efc <main@@Base+0x450>
   10c18:	bl	10a58 <puts@plt>
   10c1c:	mov	r1, r8
   10c20:	mov	r0, r7
   10c24:	bl	1121c <armazenar_contentor@@Base>
   10c28:	cmp	r0, #0
   10c2c:	bne	10e48 <main@@Base+0x39c>
   10c30:	ldr	r1, [sp]
   10c34:	mov	r0, r7
   10c38:	bl	1121c <armazenar_contentor@@Base>
   10c3c:	cmp	r0, #0
   10c40:	bne	10e34 <main@@Base+0x388>
   10c44:	mov	r1, r6
   10c48:	mov	r0, r7
   10c4c:	bl	1121c <armazenar_contentor@@Base>
   10c50:	cmp	r0, #0
   10c54:	bne	10e24 <main@@Base+0x378>
   10c58:	ldr	r1, [sp, #4]
   10c5c:	mov	r0, r7
   10c60:	bl	1121c <armazenar_contentor@@Base>
   10c64:	cmp	r0, #0
   10c68:	bne	10e10 <main@@Base+0x364>
   10c6c:	ldr	r1, [sp, #8]
   10c70:	mov	r0, r7
   10c74:	bl	1121c <armazenar_contentor@@Base>
   10c78:	cmp	r0, #0
   10c7c:	bne	10dfc <main@@Base+0x350>
   10c80:	ldr	r1, [sp, #12]
   10c84:	mov	r0, r7
   10c88:	bl	1121c <armazenar_contentor@@Base>
   10c8c:	cmp	r0, #0
   10c90:	bne	10de8 <main@@Base+0x33c>
   10c94:	ldr	r1, [sp, #16]
   10c98:	mov	r0, r7
   10c9c:	bl	1121c <armazenar_contentor@@Base>
   10ca0:	cmp	r0, #0
   10ca4:	bne	10dd4 <main@@Base+0x328>
   10ca8:	mov	r1, r5
   10cac:	mov	r0, r7
   10cb0:	bl	1121c <armazenar_contentor@@Base>
   10cb4:	cmp	r0, #0
   10cb8:	bne	10dc4 <main@@Base+0x318>
   10cbc:	ldr	r0, [pc, #572]	; 10f00 <main@@Base+0x454>
   10cc0:	bl	10a58 <puts@plt>
   10cc4:	mov	r0, r7
   10cc8:	bl	11058 <imprimeArmazem@@Base>
   10ccc:	mov	r0, r7
   10cd0:	bl	111c4 <armazem_cheio@@Base>
   10cd4:	cmp	r0, #0
   10cd8:	ldrne	r0, [pc, #548]	; 10f04 <main@@Base+0x458>
   10cdc:	ldreq	r0, [pc, #548]	; 10f08 <main@@Base+0x45c>
   10ce0:	bl	10a58 <puts@plt>
   10ce4:	ldr	r1, [sp, #20]
   10ce8:	mov	r0, r7
   10cec:	bl	1121c <armazenar_contentor@@Base>
   10cf0:	cmp	r0, #0
   10cf4:	bne	10db4 <main@@Base+0x308>
   10cf8:	ldr	r0, [pc, #524]	; 10f0c <main@@Base+0x460>
   10cfc:	bl	10a58 <puts@plt>
   10d00:	ldr	r6, [pc, #520]	; 10f10 <main@@Base+0x464>
   10d04:	mov	r4, #8
   10d08:	mov	r0, r7
   10d0c:	bl	112bc <expedir_contentor@@Base>
   10d10:	mov	r5, r0
   10d14:	mov	r0, r6
   10d18:	bl	10a58 <puts@plt>
   10d1c:	mov	r0, r5
   10d20:	bl	113c4 <contentor_imprime@@Base>
   10d24:	subs	r4, r4, #1
   10d28:	bne	10d08 <main@@Base+0x25c>
   10d2c:	ldr	r0, [pc, #480]	; 10f14 <main@@Base+0x468>
   10d30:	bl	10a58 <puts@plt>
   10d34:	mov	r0, r7
   10d38:	bl	11058 <imprimeArmazem@@Base>
   10d3c:	ldr	r0, [pc, #468]	; 10f18 <main@@Base+0x46c>
   10d40:	bl	10a58 <puts@plt>
   10d44:	ldr	r6, [pc, #452]	; 10f10 <main@@Base+0x464>
   10d48:	mov	r4, #4
   10d4c:	mov	r0, r7
   10d50:	bl	112bc <expedir_contentor@@Base>
   10d54:	mov	r5, r0
   10d58:	mov	r0, r6
   10d5c:	bl	10a58 <puts@plt>
   10d60:	mov	r0, r5
   10d64:	bl	113c4 <contentor_imprime@@Base>
   10d68:	subs	r4, r4, #1
   10d6c:	bne	10d4c <main@@Base+0x2a0>
   10d70:	ldr	r0, [pc, #420]	; 10f1c <main@@Base+0x470>
   10d74:	bl	10a58 <puts@plt>
   10d78:	mov	r0, r7
   10d7c:	bl	11058 <imprimeArmazem@@Base>
   10d80:	mov	r0, r7
   10d84:	bl	1119c <armazem_vazio@@Base>
   10d88:	cmp	r0, #0
   10d8c:	ldrne	r0, [pc, #396]	; 10f20 <main@@Base+0x474>
   10d90:	ldreq	r0, [pc, #396]	; 10f24 <main@@Base+0x478>
   10d94:	bl	10a58 <puts@plt>
   10d98:	mov	r0, #0
   10d9c:	add	sp, sp, #28
   10da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10da4:	ldr	r1, [fp]
   10da8:	ldr	r0, [pc, #376]	; 10f28 <main@@Base+0x47c>
   10dac:	bl	10a34 <printf@plt>
   10db0:	b	10bc8 <main@@Base+0x11c>
   10db4:	ldr	r1, [r4]
   10db8:	ldr	r0, [pc, #364]	; 10f2c <main@@Base+0x480>
   10dbc:	bl	10a34 <printf@plt>
   10dc0:	b	10cf8 <main@@Base+0x24c>
   10dc4:	ldr	r1, [r5]
   10dc8:	ldr	r0, [pc, #344]	; 10f28 <main@@Base+0x47c>
   10dcc:	bl	10a34 <printf@plt>
   10dd0:	b	10cbc <main@@Base+0x210>
   10dd4:	ldr	r3, [sp, #16]
   10dd8:	ldr	r0, [pc, #328]	; 10f28 <main@@Base+0x47c>
   10ddc:	ldr	r1, [r3]
   10de0:	bl	10a34 <printf@plt>
   10de4:	b	10ca8 <main@@Base+0x1fc>
   10de8:	ldr	r3, [sp, #12]
   10dec:	ldr	r0, [pc, #308]	; 10f28 <main@@Base+0x47c>
   10df0:	ldr	r1, [r3]
   10df4:	bl	10a34 <printf@plt>
   10df8:	b	10c94 <main@@Base+0x1e8>
   10dfc:	ldr	r3, [sp, #8]
   10e00:	ldr	r0, [pc, #288]	; 10f28 <main@@Base+0x47c>
   10e04:	ldr	r1, [r3]
   10e08:	bl	10a34 <printf@plt>
   10e0c:	b	10c80 <main@@Base+0x1d4>
   10e10:	ldr	r3, [sp, #4]
   10e14:	ldr	r0, [pc, #268]	; 10f28 <main@@Base+0x47c>
   10e18:	ldr	r1, [r3]
   10e1c:	bl	10a34 <printf@plt>
   10e20:	b	10c6c <main@@Base+0x1c0>
   10e24:	ldr	r1, [r6]
   10e28:	ldr	r0, [pc, #248]	; 10f28 <main@@Base+0x47c>
   10e2c:	bl	10a34 <printf@plt>
   10e30:	b	10c58 <main@@Base+0x1ac>
   10e34:	ldr	r3, [sp]
   10e38:	ldr	r0, [pc, #232]	; 10f28 <main@@Base+0x47c>
   10e3c:	ldr	r1, [r3]
   10e40:	bl	10a34 <printf@plt>
   10e44:	b	10c44 <main@@Base+0x198>
   10e48:	ldr	r1, [r8]
   10e4c:	ldr	r0, [pc, #212]	; 10f28 <main@@Base+0x47c>
   10e50:	bl	10a34 <printf@plt>
   10e54:	b	10c30 <main@@Base+0x184>
   10e58:	ldr	r1, [r9]
   10e5c:	ldr	r0, [pc, #196]	; 10f28 <main@@Base+0x47c>
   10e60:	bl	10a34 <printf@plt>
   10e64:	b	10c04 <main@@Base+0x158>
   10e68:	ldr	r1, [r4]
   10e6c:	ldr	r0, [pc, #180]	; 10f28 <main@@Base+0x47c>
   10e70:	bl	10a34 <printf@plt>
   10e74:	b	10bf0 <main@@Base+0x144>
   10e78:	ldr	r1, [sl]
   10e7c:	ldr	r0, [pc, #164]	; 10f28 <main@@Base+0x47c>
   10e80:	bl	10a34 <printf@plt>
   10e84:	b	10bdc <main@@Base+0x130>
   10e88:	cmnmi	r6, #0
   10e8c:	cmnmi	sl, #0
   10e90:	strmi	r8, [r4], #-0
   10e94:	ldrtmi	r8, [r1], #-0
   10e98:			; <UNDEFINED> instruction: 0x43be0000
   10e9c:	bicmi	r0, r3, #0
   10ea0:	sbcmi	r0, r8, #0
   10ea4:	adcmi	r0, r0, #0
   10ea8:	tstmi	r6, #0
   10eac:	orrmi	r0, r7, #0
   10eb0:	bicsmi	r0, r7, #0
   10eb4:	movtmi	r0, #32768	; 0x8000
   10eb8:	andeq	r1, r1, r8, ror r7
   10ebc:	andeq	r1, r1, ip, lsl #15
   10ec0:	muleq	r1, r4, r7
   10ec4:	muleq	r1, r8, r7
   10ec8:	andeq	r1, r1, r0, lsr #15
   10ecc:	andeq	r1, r1, r8, lsr #15
   10ed0:			; <UNDEFINED> instruction: 0x000117b0
   10ed4:			; <UNDEFINED> instruction: 0x000117b8
   10ed8:	andeq	r1, r1, r4, asr #15
   10edc:	andeq	r1, r1, ip, asr #15
   10ee0:	ldrdeq	r1, [r1], -r8
   10ee4:	andeq	r1, r1, r0, ror #15
   10ee8:	andeq	r1, r1, ip, ror #15
   10eec:	strdeq	r1, [r1], -r4
   10ef0:	strdeq	r1, [r1], -ip
   10ef4:	andeq	r1, r1, r8, lsl r8
   10ef8:	andeq	r1, r1, r4, ror #16
   10efc:	andeq	r1, r1, r0, lsl #17
   10f00:	andeq	r1, r1, r4, lsr #17
   10f04:	andeq	r1, r1, r0, asr #17
   10f08:	ldrdeq	r1, [r1], -r0
   10f0c:	andeq	r1, r1, r4, asr #18
   10f10:	andeq	r1, r1, r8, ror #18
   10f14:	andeq	r1, r1, r8, lsl #19
   10f18:	andeq	r1, r1, r4, lsr #19
   10f1c:	andeq	r1, r1, r8, asr #19
   10f20:	andeq	r1, r1, r4, ror #19
   10f24:	strdeq	r1, [r1], -r4
   10f28:	andeq	r1, r1, ip, lsr r8
   10f2c:	strdeq	r1, [r1], -r8

00010f30 <_start@@Base>:
   10f30:	mov	fp, #0
   10f34:	mov	lr, #0
   10f38:	pop	{r1}		; (ldr r1, [sp], #4)
   10f3c:	mov	r2, sp
   10f40:	push	{r2}		; (str r2, [sp, #-4]!)
   10f44:	push	{r0}		; (str r0, [sp, #-4]!)
   10f48:	ldr	ip, [pc, #16]	; 10f60 <_start@@Base+0x30>
   10f4c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f50:	ldr	r0, [pc, #12]	; 10f64 <_start@@Base+0x34>
   10f54:	ldr	r3, [pc, #12]	; 10f68 <_start@@Base+0x38>
   10f58:	bl	10a70 <__libc_start_main@plt>
   10f5c:	bl	10aa0 <abort@plt>
   10f60:	andeq	r1, r1, r8, asr #14
   10f64:	andeq	r0, r1, ip, lsr #21
   10f68:	andeq	r1, r1, r8, ror #13
   10f6c:	ldr	r3, [pc, #20]	; 10f88 <_start@@Base+0x58>
   10f70:	ldr	r2, [pc, #20]	; 10f8c <_start@@Base+0x5c>
   10f74:	add	r3, pc, r3
   10f78:	ldr	r2, [r3, r2]
   10f7c:	cmp	r2, #0
   10f80:	bxeq	lr
   10f84:	b	10a7c <__gmon_start__@plt>
   10f88:	andeq	r1, r1, r4, lsl #1
   10f8c:	andeq	r0, r0, r8, lsr r0
   10f90:	ldr	r3, [pc, #28]	; 10fb4 <_start@@Base+0x84>
   10f94:	ldr	r0, [pc, #28]	; 10fb8 <_start@@Base+0x88>
   10f98:	sub	r3, r3, r0
   10f9c:	cmp	r3, #6
   10fa0:	bxls	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <_start@@Base+0x8c>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r2, r2, r7, asr #32
   10fb8:	andeq	r2, r2, r4, asr #32
   10fbc:	andeq	r0, r0, r0
   10fc0:	ldr	r1, [pc, #36]	; 10fec <_start@@Base+0xbc>
   10fc4:	ldr	r0, [pc, #36]	; 10ff0 <_start@@Base+0xc0>
   10fc8:	sub	r1, r1, r0
   10fcc:	asr	r1, r1, #2
   10fd0:	add	r1, r1, r1, lsr #31
   10fd4:	asrs	r1, r1, #1
   10fd8:	bxeq	lr
   10fdc:	ldr	r3, [pc, #16]	; 10ff4 <_start@@Base+0xc4>
   10fe0:	cmp	r3, #0
   10fe4:	bxeq	lr
   10fe8:	bx	r3
   10fec:	andeq	r2, r2, r4, asr #32
   10ff0:	andeq	r2, r2, r4, asr #32
   10ff4:	andeq	r0, r0, r0
   10ff8:	push	{r4, lr}
   10ffc:	ldr	r4, [pc, #24]	; 1101c <_start@@Base+0xec>
   11000:	ldrb	r3, [r4]
   11004:	cmp	r3, #0
   11008:	popne	{r4, pc}
   1100c:	bl	10f90 <_start@@Base+0x60>
   11010:	mov	r3, #1
   11014:	strb	r3, [r4]
   11018:	pop	{r4, pc}
   1101c:	andeq	r2, r2, r4, asr #32
   11020:	ldr	r0, [pc, #40]	; 11050 <_start@@Base+0x120>
   11024:	ldr	r3, [r0]
   11028:	cmp	r3, #0
   1102c:	bne	11034 <_start@@Base+0x104>
   11030:	b	10fc0 <_start@@Base+0x90>
   11034:	ldr	r3, [pc, #24]	; 11054 <_start@@Base+0x124>
   11038:	cmp	r3, #0
   1103c:	beq	11030 <_start@@Base+0x100>
   11040:	push	{r4, lr}
   11044:	blx	r3
   11048:	pop	{r4, lr}
   1104c:	b	10fc0 <_start@@Base+0x90>
   11050:	andeq	r1, r2, r4, lsl pc
   11054:	andeq	r0, r0, r0

00011058 <imprimeArmazem@@Base>:
   11058:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1105c:	subs	r8, r0, #0
   11060:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11064:	ldr	r4, [r8, #8]
   11068:	cmp	r4, #0
   1106c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11070:	ldr	r5, [r4, #4]
   11074:	mov	r1, #4
   11078:	mov	r0, r5
   1107c:	bl	10a28 <calloc@plt>
   11080:	ldr	r3, [r4]
   11084:	cmp	r3, #0
   11088:	mov	r9, r0
   1108c:	subne	r2, r0, #4
   11090:	beq	110a8 <imprimeArmazem@@Base+0x50>
   11094:	ldm	r3, {r1, r3}
   11098:	ldr	r1, [r1, #4]
   1109c:	cmp	r3, #0
   110a0:	str	r1, [r2, #4]!
   110a4:	bne	11094 <imprimeArmazem@@Base+0x3c>
   110a8:	mov	r0, #10
   110ac:	bl	10a94 <putchar@plt>
   110b0:	ldr	r4, [r8, #4]
   110b4:	cmp	r4, #0
   110b8:	ble	1110c <imprimeArmazem@@Base+0xb4>
   110bc:	ldr	r6, [pc, #144]	; 11154 <imprimeArmazem@@Base+0xfc>
   110c0:	ldr	r7, [pc, #144]	; 11158 <imprimeArmazem@@Base+0x100>
   110c4:	ldr	r0, [pc, #144]	; 1115c <imprimeArmazem@@Base+0x104>
   110c8:	bl	10a34 <printf@plt>
   110cc:	cmp	r5, #0
   110d0:	subgt	fp, r9, #4
   110d4:	movgt	sl, #0
   110d8:	ble	110fc <imprimeArmazem@@Base+0xa4>
   110dc:	ldr	r1, [fp, #4]!
   110e0:	mov	r0, r6
   110e4:	cmp	r1, r4
   110e8:	movge	r0, r7
   110ec:	add	sl, sl, #1
   110f0:	bl	10a34 <printf@plt>
   110f4:	cmp	r5, sl
   110f8:	bne	110dc <imprimeArmazem@@Base+0x84>
   110fc:	mov	r0, #10
   11100:	bl	10a94 <putchar@plt>
   11104:	subs	r4, r4, #1
   11108:	bne	110c4 <imprimeArmazem@@Base+0x6c>
   1110c:	ldr	r0, [pc, #76]	; 11160 <imprimeArmazem@@Base+0x108>
   11110:	bl	10a34 <printf@plt>
   11114:	ldr	r3, [r8]
   11118:	cmp	r3, #0
   1111c:	movgt	r4, #0
   11120:	ldrgt	r5, [pc, #60]	; 11164 <imprimeArmazem@@Base+0x10c>
   11124:	ble	11140 <imprimeArmazem@@Base+0xe8>
   11128:	mov	r0, r5
   1112c:	bl	10a34 <printf@plt>
   11130:	ldr	r3, [r8]
   11134:	add	r4, r4, #1
   11138:	cmp	r3, r4
   1113c:	bgt	11128 <imprimeArmazem@@Base+0xd0>
   11140:	ldr	r0, [pc, #32]	; 11168 <imprimeArmazem@@Base+0x110>
   11144:	bl	10a58 <puts@plt>
   11148:	mov	r0, r9
   1114c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11150:	b	10a40 <free@plt>
   11154:	andeq	r1, r1, r8, ror #14
   11158:	andeq	r1, r1, r0, ror #14
   1115c:	andeq	r1, r1, ip, asr r7
   11160:	andeq	r1, r1, r8, asr r7
   11164:	andeq	r1, r1, r0, ror r7
   11168:	andeq	r1, r1, r0, ror #16

0001116c <armazem_novo@@Base>:
   1116c:	push	{r4, r5, r6, lr}
   11170:	mov	r6, r0
   11174:	mov	r0, #12
   11178:	mov	r5, r1
   1117c:	bl	10a64 <malloc@plt>
   11180:	str	r6, [r0]
   11184:	str	r5, [r0, #4]
   11188:	mov	r4, r0
   1118c:	bl	11434 <fila_nova@@Base>
   11190:	str	r0, [r4, #8]
   11194:	mov	r0, r4
   11198:	pop	{r4, r5, r6, pc}

0001119c <armazem_vazio@@Base>:
   1119c:	cmp	r0, #0
   111a0:	beq	111bc <armazem_vazio@@Base+0x20>
   111a4:	push	{r4, lr}
   111a8:	ldr	r0, [r0, #8]
   111ac:	bl	11494 <fila_tamanho@@Base>
   111b0:	clz	r0, r0
   111b4:	lsr	r0, r0, #5
   111b8:	pop	{r4, pc}
   111bc:	mov	r0, #1
   111c0:	bx	lr

000111c4 <armazem_cheio@@Base>:
   111c4:	push	{r4, lr}
   111c8:	subs	r4, r0, #0
   111cc:	beq	111e0 <armazem_cheio@@Base+0x1c>
   111d0:	ldr	r0, [r4, #8]
   111d4:	bl	11494 <fila_tamanho@@Base>
   111d8:	cmp	r0, #0
   111dc:	bne	111e8 <armazem_cheio@@Base+0x24>
   111e0:	mov	r0, #0
   111e4:	pop	{r4, pc}
   111e8:	ldr	r0, [r4, #8]
   111ec:	bl	11494 <fila_tamanho@@Base>
   111f0:	ldr	r3, [r4]
   111f4:	cmp	r0, r3
   111f8:	bne	111e0 <armazem_cheio@@Base+0x1c>
   111fc:	ldr	r0, [r4, #8]
   11200:	bl	114c4 <fila_back@@Base>
   11204:	ldr	r3, [r4, #4]
   11208:	ldr	r0, [r0, #4]
   1120c:	sub	r0, r0, r3
   11210:	clz	r0, r0
   11214:	lsr	r0, r0, #5
   11218:	pop	{r4, pc}

0001121c <armazenar_contentor@@Base>:
   1121c:	push	{r4, r5, r6, r7, r8, lr}
   11220:	mov	r4, r0
   11224:	mov	r5, r1
   11228:	bl	115e8 <pilha_nova@@Base>
   1122c:	cmp	r5, #0
   11230:	cmpne	r4, #0
   11234:	bne	11240 <armazenar_contentor@@Base+0x24>
   11238:	mov	r0, #0
   1123c:	pop	{r4, r5, r6, r7, r8, pc}
   11240:	mov	r6, r0
   11244:	mov	r0, r4
   11248:	bl	111c4 <armazem_cheio@@Base>
   1124c:	cmp	r0, #0
   11250:	bne	11238 <armazenar_contentor@@Base+0x1c>
   11254:	ldr	r0, [r4, #8]
   11258:	bl	11494 <fila_tamanho@@Base>
   1125c:	cmp	r0, #0
   11260:	beq	11294 <armazenar_contentor@@Base+0x78>
   11264:	ldr	r0, [r4, #8]
   11268:	bl	114c4 <fila_back@@Base>
   1126c:	ldr	r3, [r4, #4]
   11270:	ldr	r2, [r0, #4]
   11274:	cmp	r2, r3
   11278:	beq	112ac <armazenar_contentor@@Base+0x90>
   1127c:	ldr	r0, [r4, #8]
   11280:	bl	114c4 <fila_back@@Base>
   11284:	mov	r1, r5
   11288:	bl	11678 <pilha_push@@Base>
   1128c:	mov	r0, #1
   11290:	pop	{r4, r5, r6, r7, r8, pc}
   11294:	ldr	r7, [r4, #8]
   11298:	bl	115e8 <pilha_nova@@Base>
   1129c:	mov	r1, r0
   112a0:	mov	r0, r7
   112a4:	bl	11500 <fila_push@@Base>
   112a8:	b	11264 <armazenar_contentor@@Base+0x48>
   112ac:	mov	r1, r6
   112b0:	ldr	r0, [r4, #8]
   112b4:	bl	11500 <fila_push@@Base>
   112b8:	b	1127c <armazenar_contentor@@Base+0x60>

000112bc <expedir_contentor@@Base>:
   112bc:	push	{r4, r5, r6, lr}
   112c0:	subs	r4, r0, #0
   112c4:	beq	11340 <expedir_contentor@@Base+0x84>
   112c8:	ldr	r0, [r4, #8]
   112cc:	bl	11494 <fila_tamanho@@Base>
   112d0:	cmp	r0, #0
   112d4:	beq	11340 <expedir_contentor@@Base+0x84>
   112d8:	ldr	r0, [r4, #8]
   112dc:	bl	114a4 <fila_front@@Base>
   112e0:	bl	11658 <pilha_top@@Base>
   112e4:	cmp	r0, #0
   112e8:	beq	11340 <expedir_contentor@@Base+0x84>
   112ec:	ldr	r0, [r4, #8]
   112f0:	bl	114a4 <fila_front@@Base>
   112f4:	bl	11658 <pilha_top@@Base>
   112f8:	ldr	r5, [r0]
   112fc:	ldr	r0, [r4, #8]
   11300:	bl	114a4 <fila_front@@Base>
   11304:	bl	11658 <pilha_top@@Base>
   11308:	vldr	s0, [r0, #4]
   1130c:	mov	r0, r5
   11310:	bl	11358 <contentor_novo@@Base>
   11314:	mov	r5, r0
   11318:	ldr	r0, [r4, #8]
   1131c:	bl	114a4 <fila_front@@Base>
   11320:	ldr	r3, [r0, #4]
   11324:	ldr	r0, [r4, #8]
   11328:	cmp	r3, #1
   1132c:	ble	1134c <expedir_contentor@@Base+0x90>
   11330:	bl	114a4 <fila_front@@Base>
   11334:	bl	116b0 <pilha_pop@@Base>
   11338:	mov	r0, r5
   1133c:	pop	{r4, r5, r6, pc}
   11340:	mov	r5, #0
   11344:	mov	r0, r5
   11348:	pop	{r4, r5, r6, pc}
   1134c:	bl	11558 <fila_pop@@Base>
   11350:	mov	r0, r5
   11354:	pop	{r4, r5, r6, pc}

00011358 <contentor_novo@@Base>:
   11358:	push	{r4, r5, r6, lr}
   1135c:	mov	r5, r0
   11360:	vpush	{d8}
   11364:	mov	r0, #8
   11368:	vmov.f32	s16, s0
   1136c:	bl	10a64 <malloc@plt>
   11370:	mov	r4, r0
   11374:	mov	r0, r5
   11378:	bl	10a88 <strlen@plt>
   1137c:	add	r6, r0, #1
   11380:	mov	r0, r6
   11384:	bl	10a64 <malloc@plt>
   11388:	mov	r2, r6
   1138c:	mov	r1, r5
   11390:	str	r0, [r4]
   11394:	bl	10a4c <memcpy@plt>
   11398:	vstr	s16, [r4, #4]
   1139c:	vpop	{d8}
   113a0:	mov	r0, r4
   113a4:	pop	{r4, r5, r6, pc}

000113a8 <contentor_apaga@@Base>:
   113a8:	push	{r4, lr}
   113ac:	mov	r4, r0
   113b0:	ldr	r0, [r0]
   113b4:	bl	10a40 <free@plt>
   113b8:	mov	r0, r4
   113bc:	pop	{r4, lr}
   113c0:	b	10a40 <free@plt>

000113c4 <contentor_imprime@@Base>:
   113c4:	cmp	r0, #0
   113c8:	beq	113e4 <contentor_imprime@@Base+0x20>
   113cc:	vldr	s15, [r0, #4]
   113d0:	ldr	r1, [r0]
   113d4:	ldr	r0, [pc, #16]	; 113ec <contentor_imprime@@Base+0x28>
   113d8:	vcvt.f64.f32	d7, s15
   113dc:	vmov	r2, r3, d7
   113e0:	b	10a34 <printf@plt>
   113e4:	ldr	r0, [pc, #4]	; 113f0 <contentor_imprime@@Base+0x2c>
   113e8:	b	10a58 <puts@plt>
   113ec:	andeq	r1, r1, ip, lsr #20
   113f0:	andeq	r1, r1, ip, lsl sl

000113f4 <fila_novo_elemento@@Base>:
   113f4:	push	{r4, lr}
   113f8:	mov	r4, r0
   113fc:	mov	r0, #8
   11400:	bl	10a64 <malloc@plt>
   11404:	subs	r3, r0, #0
   11408:	beq	11420 <fila_novo_elemento@@Base+0x2c>
   1140c:	cmp	r4, #0
   11410:	movne	r2, #0
   11414:	str	r4, [r3]
   11418:	strne	r2, [r3, #4]
   1141c:	beq	11428 <fila_novo_elemento@@Base+0x34>
   11420:	mov	r0, r3
   11424:	pop	{r4, pc}
   11428:	bl	10a40 <free@plt>
   1142c:	mov	r3, r4
   11430:	b	11420 <fila_novo_elemento@@Base+0x2c>

00011434 <fila_nova@@Base>:
   11434:	push	{r4, lr}
   11438:	mov	r0, #8
   1143c:	bl	10a64 <malloc@plt>
   11440:	cmp	r0, #0
   11444:	movne	r3, #0
   11448:	strne	r3, [r0]
   1144c:	strne	r3, [r0, #4]
   11450:	pop	{r4, pc}

00011454 <fila_apaga@@Base>:
   11454:	push	{r4, r5, r6, lr}
   11458:	subs	r5, r0, #0
   1145c:	bne	11478 <fila_apaga@@Base+0x24>
   11460:	b	11490 <fila_apaga@@Base+0x3c>
   11464:	ldm	r4, {r0, r3}
   11468:	str	r3, [r5]
   1146c:	bl	11608 <pilha_apaga@@Base>
   11470:	mov	r0, r4
   11474:	bl	10a40 <free@plt>
   11478:	ldr	r4, [r5]
   1147c:	cmp	r4, #0
   11480:	bne	11464 <fila_apaga@@Base+0x10>
   11484:	mov	r0, r5
   11488:	pop	{r4, r5, r6, lr}
   1148c:	b	10a40 <free@plt>
   11490:	pop	{r4, r5, r6, pc}

00011494 <fila_tamanho@@Base>:
   11494:	cmp	r0, #0
   11498:	ldrne	r0, [r0, #4]
   1149c:	mvneq	r0, #0
   114a0:	bx	lr

000114a4 <fila_front@@Base>:
   114a4:	cmp	r0, #0
   114a8:	bxeq	lr
   114ac:	ldr	r3, [r0, #4]
   114b0:	cmp	r3, #0
   114b4:	ldrne	r3, [r0]
   114b8:	ldrne	r0, [r3]
   114bc:	moveq	r0, r3
   114c0:	bx	lr

000114c4 <fila_back@@Base>:
   114c4:	cmp	r0, #0
   114c8:	bxeq	lr
   114cc:	ldr	r3, [r0, #4]
   114d0:	cmp	r3, #0
   114d4:	beq	114f8 <fila_back@@Base+0x34>
   114d8:	ldr	r2, [r0]
   114dc:	b	114e4 <fila_back@@Base+0x20>
   114e0:	mov	r2, r3
   114e4:	ldr	r3, [r2, #4]
   114e8:	cmp	r3, #0
   114ec:	bne	114e0 <fila_back@@Base+0x1c>
   114f0:	ldr	r0, [r2]
   114f4:	bx	lr
   114f8:	mov	r0, r3
   114fc:	bx	lr

00011500 <fila_push@@Base>:
   11500:	push	{r4, r5, r6, lr}
   11504:	subs	r5, r0, #0
   11508:	popeq	{r4, r5, r6, pc}
   1150c:	mov	r0, r1
   11510:	ldr	r4, [r5]
   11514:	bl	113f4 <fila_novo_elemento@@Base>
   11518:	cmp	r0, #0
   1151c:	popeq	{r4, r5, r6, pc}
   11520:	ldr	r3, [r5, #4]
   11524:	cmp	r4, #0
   11528:	add	r3, r3, #1
   1152c:	str	r3, [r5, #4]
   11530:	bne	1153c <fila_push@@Base+0x3c>
   11534:	b	11550 <fila_push@@Base+0x50>
   11538:	mov	r4, r3
   1153c:	ldr	r3, [r4, #4]
   11540:	cmp	r3, #0
   11544:	bne	11538 <fila_push@@Base+0x38>
   11548:	str	r0, [r4, #4]
   1154c:	pop	{r4, r5, r6, pc}
   11550:	str	r0, [r5]
   11554:	pop	{r4, r5, r6, pc}

00011558 <fila_pop@@Base>:
   11558:	subs	r3, r0, #0
   1155c:	bxeq	lr
   11560:	ldr	r2, [r3, #4]
   11564:	cmp	r2, #0
   11568:	bxeq	lr
   1156c:	push	{r4, lr}
   11570:	sub	r2, r2, #1
   11574:	ldr	r4, [r3]
   11578:	str	r2, [r3, #4]
   1157c:	ldm	r4, {r0, r2}
   11580:	str	r2, [r3]
   11584:	bl	11608 <pilha_apaga@@Base>
   11588:	mov	r0, r4
   1158c:	pop	{r4, lr}
   11590:	b	10a40 <free@plt>

00011594 <pilha_novo_elemento@@Base>:
   11594:	push	{r4, r5, r6, lr}
   11598:	mov	r5, r0
   1159c:	mov	r0, #8
   115a0:	bl	10a64 <malloc@plt>
   115a4:	subs	r4, r0, #0
   115a8:	beq	115d0 <pilha_novo_elemento@@Base+0x3c>
   115ac:	vldr	s0, [r5, #4]
   115b0:	ldr	r0, [r5]
   115b4:	bl	11358 <contentor_novo@@Base>
   115b8:	cmp	r0, #0
   115bc:	movne	r3, #0
   115c0:	mov	r5, r0
   115c4:	str	r0, [r4]
   115c8:	strne	r3, [r4, #4]
   115cc:	beq	115d8 <pilha_novo_elemento@@Base+0x44>
   115d0:	mov	r0, r4
   115d4:	pop	{r4, r5, r6, pc}
   115d8:	mov	r0, r4
   115dc:	bl	10a40 <free@plt>
   115e0:	mov	r4, r5
   115e4:	b	115d0 <pilha_novo_elemento@@Base+0x3c>

000115e8 <pilha_nova@@Base>:
   115e8:	push	{r4, lr}
   115ec:	mov	r0, #8
   115f0:	bl	10a64 <malloc@plt>
   115f4:	cmp	r0, #0
   115f8:	movne	r3, #0
   115fc:	strne	r3, [r0]
   11600:	strne	r3, [r0, #4]
   11604:	pop	{r4, pc}

00011608 <pilha_apaga@@Base>:
   11608:	push	{r4, r5, r6, lr}
   1160c:	subs	r5, r0, #0
   11610:	bne	1162c <pilha_apaga@@Base+0x24>
   11614:	b	11644 <pilha_apaga@@Base+0x3c>
   11618:	ldm	r4, {r0, r3}
   1161c:	str	r3, [r5]
   11620:	bl	113a8 <contentor_apaga@@Base>
   11624:	mov	r0, r4
   11628:	bl	10a40 <free@plt>
   1162c:	ldr	r4, [r5]
   11630:	cmp	r4, #0
   11634:	bne	11618 <pilha_apaga@@Base+0x10>
   11638:	mov	r0, r5
   1163c:	pop	{r4, r5, r6, lr}
   11640:	b	10a40 <free@plt>
   11644:	pop	{r4, r5, r6, pc}

00011648 <pilha_tamanho@@Base>:
   11648:	cmp	r0, #0
   1164c:	ldrne	r0, [r0, #4]
   11650:	mvneq	r0, #0
   11654:	bx	lr

00011658 <pilha_top@@Base>:
   11658:	cmp	r0, #0
   1165c:	bxeq	lr
   11660:	ldr	r3, [r0, #4]
   11664:	cmp	r3, #0
   11668:	ldrne	r3, [r0]
   1166c:	ldrne	r0, [r3]
   11670:	moveq	r0, r3
   11674:	bx	lr

00011678 <pilha_push@@Base>:
   11678:	push	{r4, lr}
   1167c:	subs	r4, r0, #0
   11680:	popeq	{r4, pc}
   11684:	mov	r0, r1
   11688:	bl	11594 <pilha_novo_elemento@@Base>
   1168c:	cmp	r0, #0
   11690:	popeq	{r4, pc}
   11694:	ldm	r4, {r2, r3}
   11698:	add	r3, r3, #1
   1169c:	cmp	r2, #0
   116a0:	str	r3, [r4, #4]
   116a4:	strne	r2, [r0, #4]
   116a8:	str	r0, [r4]
   116ac:	pop	{r4, pc}

000116b0 <pilha_pop@@Base>:
   116b0:	subs	r3, r0, #0
   116b4:	bxeq	lr
   116b8:	ldr	r2, [r3, #4]
   116bc:	cmp	r2, #0
   116c0:	bxeq	lr
   116c4:	push	{r4, lr}
   116c8:	sub	r2, r2, #1
   116cc:	ldr	r4, [r3]
   116d0:	ldm	r4, {r0, r1}
   116d4:	stm	r3, {r1, r2}
   116d8:	bl	113a8 <contentor_apaga@@Base>
   116dc:	mov	r0, r4
   116e0:	pop	{r4, lr}
   116e4:	b	10a40 <free@plt>

000116e8 <__libc_csu_init@@Base>:
   116e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   116ec:	mov	r7, r0
   116f0:	ldr	r6, [pc, #72]	; 11740 <__libc_csu_init@@Base+0x58>
   116f4:	ldr	r5, [pc, #72]	; 11744 <__libc_csu_init@@Base+0x5c>
   116f8:	add	r6, pc, r6
   116fc:	add	r5, pc, r5
   11700:	sub	r6, r6, r5
   11704:	mov	r8, r1
   11708:	mov	r9, r2
   1170c:	bl	10a08 <calloc@plt-0x20>
   11710:	asrs	r6, r6, #2
   11714:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11718:	mov	r4, #0
   1171c:	add	r4, r4, #1
   11720:	ldr	r3, [r5], #4
   11724:	mov	r2, r9
   11728:	mov	r1, r8
   1172c:	mov	r0, r7
   11730:	blx	r3
   11734:	cmp	r6, r4
   11738:	bne	1171c <__libc_csu_init@@Base+0x34>
   1173c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11740:	andeq	r0, r1, r0, lsl r8
   11744:	andeq	r0, r1, r8, lsl #16

00011748 <__libc_csu_fini@@Base>:
   11748:	bx	lr

Disassembly of section .fini:

0001174c <.fini>:
   1174c:	push	{r3, lr}
   11750:	pop	{r3, pc}
