
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-xml-parser.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <is_whitespace>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-16]
      10:	str	r1, [fp, #-20]	; 0xffffffec
      14:	ldr	r3, [fp, #-16]
      18:	cmp	r3, #0
      1c:	bne	34 <is_whitespace+0x34>
      20:	ldr	r3, [pc, #172]	; d4 <is_whitespace+0xd4>
      24:	mov	r2, #53	; 0x35
      28:	ldr	r1, [pc, #168]	; d8 <is_whitespace+0xd8>
      2c:	ldr	r0, [pc, #168]	; dc <is_whitespace+0xdc>
      30:	bl	0 <__assert_fail>
      34:	mov	r3, #0
      38:	str	r3, [fp, #-8]
      3c:	b	b4 <is_whitespace+0xb4>
      40:	ldr	r3, [fp, #-8]
      44:	ldr	r2, [fp, #-16]
      48:	add	r3, r2, r3
      4c:	ldrb	r3, [r3]
      50:	cmp	r3, #32
      54:	beq	a8 <is_whitespace+0xa8>
      58:	ldr	r3, [fp, #-8]
      5c:	ldr	r2, [fp, #-16]
      60:	add	r3, r2, r3
      64:	ldrb	r3, [r3]
      68:	cmp	r3, #9
      6c:	beq	a8 <is_whitespace+0xa8>
      70:	ldr	r3, [fp, #-8]
      74:	ldr	r2, [fp, #-16]
      78:	add	r3, r2, r3
      7c:	ldrb	r3, [r3]
      80:	cmp	r3, #10
      84:	beq	a8 <is_whitespace+0xa8>
      88:	ldr	r3, [fp, #-8]
      8c:	ldr	r2, [fp, #-16]
      90:	add	r3, r2, r3
      94:	ldrb	r3, [r3]
      98:	cmp	r3, #13
      9c:	beq	a8 <is_whitespace+0xa8>
      a0:	mov	r3, #0
      a4:	b	c8 <is_whitespace+0xc8>
      a8:	ldr	r3, [fp, #-8]
      ac:	add	r3, r3, #1
      b0:	str	r3, [fp, #-8]
      b4:	ldr	r2, [fp, #-8]
      b8:	ldr	r3, [fp, #-20]	; 0xffffffec
      bc:	cmp	r2, r3
      c0:	blt	40 <is_whitespace+0x40>
      c4:	mov	r3, #1
      c8:	mov	r0, r3
      cc:	sub	sp, fp, #4
      d0:	pop	{fp, pc}
      d4:	.word	0x000004f4
      d8:	.word	0x00000000
      dc:	.word	0x00000050

000000e0 <convert_to_text>:
      e0:	push	{fp, lr}
      e4:	add	fp, sp, #4
      e8:	sub	sp, sp, #16
      ec:	str	r0, [fp, #-16]
      f0:	ldr	r3, [fp, #-16]
      f4:	ldr	r3, [r3]
      f8:	ldr	r3, [r3, #8]
      fc:	cmp	r3, #0
     100:	bne	118 <convert_to_text+0x38>
     104:	ldr	r3, [fp, #-16]
     108:	ldr	r3, [r3]
     10c:	ldr	r3, [r3]
     110:	cmp	r3, #2
     114:	beq	12c <convert_to_text+0x4c>
     118:	ldr	r3, [pc, #148]	; 1b4 <convert_to_text+0xd4>
     11c:	mov	r2, #70	; 0x46
     120:	ldr	r1, [pc, #144]	; 1b8 <convert_to_text+0xd8>
     124:	ldr	r0, [pc, #144]	; 1bc <convert_to_text+0xdc>
     128:	bl	0 <__assert_fail>
     12c:	mov	r0, #2
     130:	bl	0 <coda_type_text_new>
     134:	str	r0, [fp, #-8]
     138:	ldr	r3, [fp, #-8]
     13c:	cmp	r3, #0
     140:	bne	14c <convert_to_text+0x6c>
     144:	mvn	r3, #0
     148:	b	1a8 <convert_to_text+0xc8>
     14c:	ldr	r3, [fp, #-16]
     150:	ldr	r3, [r3]
     154:	ldr	r3, [r3, #36]	; 0x24
     158:	cmp	r3, #0
     15c:	beq	188 <convert_to_text+0xa8>
     160:	ldr	r3, [fp, #-16]
     164:	ldr	r3, [r3]
     168:	ldr	r2, [r3, #36]	; 0x24
     16c:	ldr	r3, [fp, #-8]
     170:	str	r2, [r3, #36]	; 0x24
     174:	ldr	r3, [fp, #-8]
     178:	ldr	r3, [r3, #36]	; 0x24
     17c:	ldr	r2, [r3, #4]
     180:	add	r2, r2, #1
     184:	str	r2, [r3, #4]
     188:	ldr	r3, [fp, #-16]
     18c:	ldr	r3, [r3]
     190:	mov	r0, r3
     194:	bl	0 <coda_type_release>
     198:	ldr	r3, [fp, #-16]
     19c:	ldr	r2, [fp, #-8]
     1a0:	str	r2, [r3]
     1a4:	mov	r3, #0
     1a8:	mov	r0, r3
     1ac:	sub	sp, fp, #4
     1b0:	pop	{fp, pc}
     1b4:	.word	0x00000504
     1b8:	.word	0x00000000
     1bc:	.word	0x0000005c

000001c0 <attribute_record_new>:
     1c0:	push	{r4, fp, lr}
     1c4:	add	fp, sp, #8
     1c8:	sub	sp, sp, #68	; 0x44
     1cc:	str	r0, [fp, #-56]	; 0xffffffc8
     1d0:	str	r1, [fp, #-60]	; 0xffffffc4
     1d4:	str	r2, [fp, #-64]	; 0xffffffc0
     1d8:	str	r3, [fp, #-68]	; 0xffffffbc
     1dc:	ldr	r3, [fp, #4]
     1e0:	str	r3, [fp, #-20]	; 0xffffffec
     1e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     1e8:	cmp	r3, #0
     1ec:	bne	204 <attribute_record_new+0x44>
     1f0:	ldr	r3, [pc, #1504]	; 7d8 <attribute_record_new+0x618>
     1f4:	mov	r2, #97	; 0x61
     1f8:	ldr	r1, [pc, #1500]	; 7dc <attribute_record_new+0x61c>
     1fc:	ldr	r0, [pc, #1500]	; 7e0 <attribute_record_new+0x620>
     200:	bl	0 <__assert_fail>
     204:	mov	r1, #0
     208:	ldr	r0, [fp, #-56]	; 0xffffffc8
     20c:	bl	0 <coda_mem_record_new>
     210:	str	r0, [fp, #-36]	; 0xffffffdc
     214:	ldr	r0, [fp, #-64]	; 0xffffffc0
     218:	bl	0 <coda_element_name_from_xml_name>
     21c:	mov	r2, r0
     220:	ldr	r3, [fp, #-64]	; 0xffffffc0
     224:	cmp	r2, r3
     228:	beq	46c <attribute_record_new+0x2ac>
     22c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     230:	ldr	r3, [r3, #44]	; 0x2c
     234:	ldr	r1, [pc, #1448]	; 7e4 <attribute_record_new+0x624>
     238:	mov	r0, r3
     23c:	bl	0 <coda_hashtable_get_index_from_name>
     240:	str	r0, [fp, #-24]	; 0xffffffe8
     244:	ldr	r3, [fp, #4]
     248:	cmp	r3, #0
     24c:	beq	3b4 <attribute_record_new+0x1f4>
     250:	ldr	r3, [fp, #-24]	; 0xffffffe8
     254:	cmp	r3, #0
     258:	bge	2cc <attribute_record_new+0x10c>
     25c:	mov	r0, #2
     260:	bl	0 <coda_type_text_new>
     264:	str	r0, [fp, #-40]	; 0xffffffd8
     268:	ldr	r3, [fp, #-40]	; 0xffffffd8
     26c:	cmp	r3, #0
     270:	bne	284 <attribute_record_new+0xc4>
     274:	ldr	r0, [fp, #-36]	; 0xffffffdc
     278:	bl	0 <coda_dynamic_type_delete>
     27c:	mov	r3, #0
     280:	b	7cc <attribute_record_new+0x60c>
     284:	ldr	r0, [fp, #-64]	; 0xffffffc0
     288:	bl	0 <coda_element_name_from_xml_name>
     28c:	mov	r3, r0
     290:	mov	r2, r3
     294:	ldr	r3, [fp, #-64]	; 0xffffffc0
     298:	sub	r3, r2, r3
     29c:	sub	r2, r3, #1
     2a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
     2a4:	str	r3, [sp]
     2a8:	mov	r3, r2
     2ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
     2b0:	mov	r1, #0
     2b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     2b8:	bl	0 <coda_mem_data_new>
     2bc:	str	r0, [fp, #-16]
     2c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     2c4:	bl	0 <coda_type_release>
     2c8:	b	360 <attribute_record_new+0x1a0>
     2cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
     2d0:	ldr	r2, [r3, #20]
     2d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     2d8:	lsl	r3, r3, #2
     2dc:	add	r3, r2, r3
     2e0:	ldr	r3, [r3]
     2e4:	cmp	r3, #0
     2e8:	beq	300 <attribute_record_new+0x140>
     2ec:	ldr	r3, [pc, #1252]	; 7d8 <attribute_record_new+0x618>
     2f0:	mov	r2, #123	; 0x7b
     2f4:	ldr	r1, [pc, #1248]	; 7dc <attribute_record_new+0x61c>
     2f8:	ldr	r0, [pc, #1256]	; 7e8 <attribute_record_new+0x628>
     2fc:	bl	0 <__assert_fail>
     300:	ldr	r3, [fp, #-56]	; 0xffffffc8
     304:	ldr	r2, [r3, #52]	; 0x34
     308:	ldr	r3, [fp, #-24]	; 0xffffffe8
     30c:	lsl	r3, r3, #2
     310:	add	r3, r2, r3
     314:	ldr	r3, [r3]
     318:	ldr	r4, [r3, #8]
     31c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     320:	bl	0 <coda_element_name_from_xml_name>
     324:	mov	r3, r0
     328:	mov	r2, r3
     32c:	ldr	r3, [fp, #-64]	; 0xffffffc0
     330:	sub	r3, r2, r3
     334:	sub	r2, r3, #1
     338:	ldr	r3, [fp, #-64]	; 0xffffffc0
     33c:	str	r3, [sp]
     340:	mov	r3, r2
     344:	ldr	r2, [fp, #-60]	; 0xffffffc4
     348:	mov	r1, #0
     34c:	mov	r0, r4
     350:	bl	0 <coda_mem_data_new>
     354:	str	r0, [fp, #-16]
     358:	mov	r3, #0
     35c:	str	r3, [fp, #-20]	; 0xffffffec
     360:	ldr	r3, [fp, #-16]
     364:	cmp	r3, #0
     368:	bne	37c <attribute_record_new+0x1bc>
     36c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     370:	bl	0 <coda_dynamic_type_delete>
     374:	mov	r3, #0
     378:	b	7cc <attribute_record_new+0x60c>
     37c:	ldr	r3, [fp, #-20]	; 0xffffffec
     380:	ldr	r2, [fp, #-16]
     384:	ldr	r1, [pc, #1112]	; 7e4 <attribute_record_new+0x624>
     388:	ldr	r0, [fp, #-36]	; 0xffffffdc
     38c:	bl	0 <coda_mem_record_add_field>
     390:	mov	r3, r0
     394:	cmp	r3, #0
     398:	beq	46c <attribute_record_new+0x2ac>
     39c:	ldr	r0, [fp, #-16]
     3a0:	bl	0 <coda_dynamic_type_delete>
     3a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
     3a8:	bl	0 <coda_dynamic_type_delete>
     3ac:	mov	r3, #0
     3b0:	b	7cc <attribute_record_new+0x60c>
     3b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3b8:	cmp	r3, #0
     3bc:	blt	46c <attribute_record_new+0x2ac>
     3c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     3c4:	ldr	r2, [r3, #52]	; 0x34
     3c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3cc:	lsl	r3, r3, #2
     3d0:	add	r3, r2, r3
     3d4:	ldr	r3, [r3]
     3d8:	ldr	r4, [r3, #8]
     3dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
     3e0:	bl	0 <coda_element_name_from_xml_name>
     3e4:	mov	r3, r0
     3e8:	mov	r2, r3
     3ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
     3f0:	sub	r3, r2, r3
     3f4:	sub	r2, r3, #1
     3f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
     3fc:	str	r3, [sp]
     400:	mov	r3, r2
     404:	ldr	r2, [fp, #-60]	; 0xffffffc4
     408:	mov	r1, #0
     40c:	mov	r0, r4
     410:	bl	0 <coda_mem_data_new>
     414:	str	r0, [fp, #-16]
     418:	ldr	r3, [fp, #-16]
     41c:	cmp	r3, #0
     420:	bne	434 <attribute_record_new+0x274>
     424:	ldr	r0, [fp, #-36]	; 0xffffffdc
     428:	bl	0 <coda_dynamic_type_delete>
     42c:	mov	r3, #0
     430:	b	7cc <attribute_record_new+0x60c>
     434:	ldr	r3, [fp, #-20]	; 0xffffffec
     438:	ldr	r2, [fp, #-16]
     43c:	ldr	r1, [pc, #928]	; 7e4 <attribute_record_new+0x624>
     440:	ldr	r0, [fp, #-36]	; 0xffffffdc
     444:	bl	0 <coda_mem_record_add_field>
     448:	mov	r3, r0
     44c:	cmp	r3, #0
     450:	beq	46c <attribute_record_new+0x2ac>
     454:	ldr	r0, [fp, #-16]
     458:	bl	0 <coda_dynamic_type_delete>
     45c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     460:	bl	0 <coda_dynamic_type_delete>
     464:	mov	r3, #0
     468:	b	7cc <attribute_record_new+0x60c>
     46c:	mov	r3, #0
     470:	str	r3, [fp, #-28]	; 0xffffffe4
     474:	b	6d0 <attribute_record_new+0x510>
     478:	ldr	r3, [fp, #-28]	; 0xffffffe4
     47c:	lsl	r3, r3, #3
     480:	mov	r2, r3
     484:	ldr	r3, [fp, #-68]	; 0xffffffbc
     488:	add	r3, r3, r2
     48c:	ldr	r3, [r3]
     490:	str	r3, [fp, #-32]	; 0xffffffe0
     494:	ldr	r3, [fp, #4]
     498:	str	r3, [fp, #-20]	; 0xffffffec
     49c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4a0:	ldr	r3, [r3, #44]	; 0x2c
     4a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
     4a8:	mov	r0, r3
     4ac:	bl	0 <coda_hashtable_get_index_from_name>
     4b0:	str	r0, [fp, #-24]	; 0xffffffe8
     4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4b8:	cmp	r3, #0
     4bc:	bge	4fc <attribute_record_new+0x33c>
     4c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4c4:	ldr	r4, [r3, #44]	; 0x2c
     4c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     4cc:	bl	0 <coda_element_name_from_xml_name>
     4d0:	mov	r3, r0
     4d4:	mov	r1, r3
     4d8:	mov	r0, r4
     4dc:	bl	0 <coda_hashtable_get_index_from_name>
     4e0:	str	r0, [fp, #-24]	; 0xffffffe8
     4e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4e8:	cmp	r3, #0
     4ec:	blt	4fc <attribute_record_new+0x33c>
     4f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     4f4:	bl	0 <coda_element_name_from_xml_name>
     4f8:	str	r0, [fp, #-32]	; 0xffffffe0
     4fc:	ldr	r3, [fp, #4]
     500:	cmp	r3, #0
     504:	beq	5e4 <attribute_record_new+0x424>
     508:	ldr	r3, [fp, #-24]	; 0xffffffe8
     50c:	cmp	r3, #0
     510:	bge	574 <attribute_record_new+0x3b4>
     514:	mov	r0, #2
     518:	bl	0 <coda_type_text_new>
     51c:	str	r0, [fp, #-44]	; 0xffffffd4
     520:	ldr	r3, [fp, #-44]	; 0xffffffd4
     524:	cmp	r3, #0
     528:	bne	53c <attribute_record_new+0x37c>
     52c:	ldr	r0, [fp, #-36]	; 0xffffffdc
     530:	bl	0 <coda_dynamic_type_delete>
     534:	mov	r3, #0
     538:	b	7cc <attribute_record_new+0x60c>
     53c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     540:	lsl	r3, r3, #3
     544:	add	r3, r3, #4
     548:	ldr	r2, [fp, #-68]	; 0xffffffbc
     54c:	add	r3, r2, r3
     550:	ldr	r3, [r3]
     554:	ldr	r2, [fp, #-60]	; 0xffffffc4
     558:	mov	r1, #0
     55c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     560:	bl	0 <coda_mem_string_new>
     564:	str	r0, [fp, #-16]
     568:	ldr	r0, [fp, #-44]	; 0xffffffd4
     56c:	bl	0 <coda_type_release>
     570:	b	66c <attribute_record_new+0x4ac>
     574:	ldr	r3, [fp, #-36]	; 0xffffffdc
     578:	ldr	r2, [r3, #20]
     57c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     580:	lsl	r3, r3, #2
     584:	add	r3, r2, r3
     588:	ldr	r3, [r3]
     58c:	cmp	r3, #0
     590:	bne	6c0 <attribute_record_new+0x500>
     594:	ldr	r3, [fp, #-56]	; 0xffffffc8
     598:	ldr	r2, [r3, #52]	; 0x34
     59c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5a0:	lsl	r3, r3, #2
     5a4:	add	r3, r2, r3
     5a8:	ldr	r3, [r3]
     5ac:	ldr	r0, [r3, #8]
     5b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     5b4:	lsl	r3, r3, #3
     5b8:	add	r3, r3, #4
     5bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
     5c0:	add	r3, r2, r3
     5c4:	ldr	r3, [r3]
     5c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
     5cc:	mov	r1, #0
     5d0:	bl	0 <coda_mem_string_new>
     5d4:	str	r0, [fp, #-16]
     5d8:	mov	r3, #0
     5dc:	str	r3, [fp, #-20]	; 0xffffffec
     5e0:	b	66c <attribute_record_new+0x4ac>
     5e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5e8:	cmn	r3, #1
     5ec:	bne	628 <attribute_record_new+0x468>
     5f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     5f4:	lsl	r3, r3, #3
     5f8:	mov	r2, r3
     5fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     600:	add	r3, r3, r2
     604:	ldr	r3, [r3]
     608:	mov	r2, r3
     60c:	ldr	r1, [pc, #472]	; 7ec <attribute_record_new+0x62c>
     610:	ldr	r0, [pc, #472]	; 7f0 <attribute_record_new+0x630>
     614:	bl	0 <coda_set_error>
     618:	ldr	r0, [fp, #-36]	; 0xffffffdc
     61c:	bl	0 <coda_dynamic_type_delete>
     620:	mov	r3, #0
     624:	b	7cc <attribute_record_new+0x60c>
     628:	ldr	r3, [fp, #-56]	; 0xffffffc8
     62c:	ldr	r2, [r3, #52]	; 0x34
     630:	ldr	r3, [fp, #-24]	; 0xffffffe8
     634:	lsl	r3, r3, #2
     638:	add	r3, r2, r3
     63c:	ldr	r3, [r3]
     640:	ldr	r0, [r3, #8]
     644:	ldr	r3, [fp, #-28]	; 0xffffffe4
     648:	lsl	r3, r3, #3
     64c:	add	r3, r3, #4
     650:	ldr	r2, [fp, #-68]	; 0xffffffbc
     654:	add	r3, r2, r3
     658:	ldr	r3, [r3]
     65c:	ldr	r2, [fp, #-60]	; 0xffffffc4
     660:	mov	r1, #0
     664:	bl	0 <coda_mem_string_new>
     668:	str	r0, [fp, #-16]
     66c:	ldr	r3, [fp, #-16]
     670:	cmp	r3, #0
     674:	bne	688 <attribute_record_new+0x4c8>
     678:	ldr	r0, [fp, #-36]	; 0xffffffdc
     67c:	bl	0 <coda_dynamic_type_delete>
     680:	mov	r3, #0
     684:	b	7cc <attribute_record_new+0x60c>
     688:	ldr	r3, [fp, #-20]	; 0xffffffec
     68c:	ldr	r2, [fp, #-16]
     690:	ldr	r1, [fp, #-32]	; 0xffffffe0
     694:	ldr	r0, [fp, #-36]	; 0xffffffdc
     698:	bl	0 <coda_mem_record_add_field>
     69c:	mov	r3, r0
     6a0:	cmp	r3, #0
     6a4:	beq	6c4 <attribute_record_new+0x504>
     6a8:	ldr	r0, [fp, #-16]
     6ac:	bl	0 <coda_dynamic_type_delete>
     6b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
     6b4:	bl	0 <coda_dynamic_type_delete>
     6b8:	mov	r3, #0
     6bc:	b	7cc <attribute_record_new+0x60c>
     6c0:	nop			; (mov r0, r0)
     6c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6c8:	add	r3, r3, #1
     6cc:	str	r3, [fp, #-28]	; 0xffffffe4
     6d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     6d4:	lsl	r3, r3, #3
     6d8:	mov	r2, r3
     6dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
     6e0:	add	r3, r3, r2
     6e4:	ldr	r3, [r3]
     6e8:	cmp	r3, #0
     6ec:	bne	478 <attribute_record_new+0x2b8>
     6f0:	mov	r3, #0
     6f4:	str	r3, [fp, #-28]	; 0xffffffe4
     6f8:	b	7b4 <attribute_record_new+0x5f4>
     6fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     700:	ldr	r2, [r3, #52]	; 0x34
     704:	ldr	r3, [fp, #-28]	; 0xffffffe4
     708:	lsl	r3, r3, #2
     70c:	add	r3, r2, r3
     710:	ldr	r3, [r3]
     714:	ldrb	r3, [r3, #16]
     718:	cmp	r3, #0
     71c:	bne	7a8 <attribute_record_new+0x5e8>
     720:	ldr	r3, [fp, #-36]	; 0xffffffdc
     724:	ldr	r2, [r3, #20]
     728:	ldr	r3, [fp, #-28]	; 0xffffffe4
     72c:	lsl	r3, r3, #2
     730:	add	r3, r2, r3
     734:	ldr	r3, [r3]
     738:	cmp	r3, #0
     73c:	bne	7a8 <attribute_record_new+0x5e8>
     740:	ldr	r3, [fp, #4]
     744:	cmp	r3, #0
     748:	beq	770 <attribute_record_new+0x5b0>
     74c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     750:	ldr	r2, [r3, #52]	; 0x34
     754:	ldr	r3, [fp, #-28]	; 0xffffffe4
     758:	lsl	r3, r3, #2
     75c:	add	r3, r2, r3
     760:	ldr	r3, [r3]
     764:	mov	r2, #1
     768:	strb	r2, [r3, #16]
     76c:	b	7a8 <attribute_record_new+0x5e8>
     770:	sub	r3, fp, #48	; 0x30
     774:	mov	r2, r3
     778:	ldr	r1, [fp, #-28]	; 0xffffffe4
     77c:	ldr	r0, [fp, #-56]	; 0xffffffc8
     780:	bl	0 <coda_type_get_record_field_real_name>
     784:	ldr	r3, [fp, #-48]	; 0xffffffd0
     788:	mov	r2, r3
     78c:	ldr	r1, [pc, #96]	; 7f4 <attribute_record_new+0x634>
     790:	ldr	r0, [pc, #88]	; 7f0 <attribute_record_new+0x630>
     794:	bl	0 <coda_set_error>
     798:	ldr	r0, [fp, #-36]	; 0xffffffdc
     79c:	bl	0 <coda_dynamic_type_delete>
     7a0:	mov	r3, #0
     7a4:	b	7cc <attribute_record_new+0x60c>
     7a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7ac:	add	r3, r3, #1
     7b0:	str	r3, [fp, #-28]	; 0xffffffe4
     7b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7b8:	ldr	r2, [r3, #48]	; 0x30
     7bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     7c0:	cmp	r2, r3
     7c4:	bgt	6fc <attribute_record_new+0x53c>
     7c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
     7cc:	mov	r0, r3
     7d0:	sub	sp, fp, #8
     7d4:	pop	{r4, fp, pc}
     7d8:	.word	0x00000514
     7dc:	.word	0x00000000
     7e0:	.word	0x000000b8
     7e4:	.word	0x000000cc
     7e8:	.word	0x000000d4
     7ec:	.word	0x00000104
     7f0:	.word	0xfffffed4
     7f4:	.word	0x00000128

000007f8 <parser_info_cleanup>:
     7f8:	push	{fp, lr}
     7fc:	add	fp, sp, #4
     800:	sub	sp, sp, #16
     804:	str	r0, [fp, #-16]
     808:	ldr	r3, [fp, #-16]
     80c:	ldr	r3, [r3]
     810:	cmp	r3, #0
     814:	beq	828 <parser_info_cleanup+0x30>
     818:	ldr	r3, [fp, #-16]
     81c:	ldr	r3, [r3]
     820:	mov	r0, r3
     824:	bl	0 <coda_XML_ParserFree>
     828:	mov	r3, #0
     82c:	str	r3, [fp, #-8]
     830:	b	870 <parser_info_cleanup+0x78>
     834:	ldr	r3, [fp, #-16]
     838:	ldr	r2, [fp, #-8]
     83c:	add	r2, r2, #36	; 0x24
     840:	ldr	r3, [r3, r2, lsl #2]
     844:	cmp	r3, #0
     848:	beq	864 <parser_info_cleanup+0x6c>
     84c:	ldr	r3, [fp, #-16]
     850:	ldr	r2, [fp, #-8]
     854:	add	r2, r2, #36	; 0x24
     858:	ldr	r3, [r3, r2, lsl #2]
     85c:	mov	r0, r3
     860:	bl	0 <coda_dynamic_type_delete>
     864:	ldr	r3, [fp, #-8]
     868:	add	r3, r3, #1
     86c:	str	r3, [fp, #-8]
     870:	ldr	r3, [fp, #-16]
     874:	ldr	r2, [r3, #12]
     878:	ldr	r3, [fp, #-8]
     87c:	cmp	r2, r3
     880:	bge	834 <parser_info_cleanup+0x3c>
     884:	ldr	r3, [fp, #-16]
     888:	ldr	r3, [r3, #528]	; 0x210
     88c:	cmp	r3, #0
     890:	beq	8a4 <parser_info_cleanup+0xac>
     894:	ldr	r3, [fp, #-16]
     898:	ldr	r3, [r3, #528]	; 0x210
     89c:	mov	r0, r3
     8a0:	bl	0 <coda_dynamic_type_delete>
     8a4:	ldr	r3, [fp, #-16]
     8a8:	ldr	r3, [r3, #544]	; 0x220
     8ac:	cmp	r3, #0
     8b0:	beq	8c4 <parser_info_cleanup+0xcc>
     8b4:	ldr	r3, [fp, #-16]
     8b8:	ldr	r3, [r3, #544]	; 0x220
     8bc:	mov	r0, r3
     8c0:	bl	0 <free>
     8c4:	nop			; (mov r0, r0)
     8c8:	sub	sp, fp, #4
     8cc:	pop	{fp, pc}

000008d0 <parser_info_init>:
     8d0:	push	{fp}		; (str fp, [sp, #-4]!)
     8d4:	add	fp, sp, #0
     8d8:	sub	sp, sp, #12
     8dc:	str	r0, [fp, #-8]
     8e0:	ldr	r3, [fp, #-8]
     8e4:	mov	r2, #0
     8e8:	str	r2, [r3]
     8ec:	ldr	r3, [fp, #-8]
     8f0:	mov	r2, #0
     8f4:	str	r2, [r3, #4]
     8f8:	ldr	r3, [fp, #-8]
     8fc:	mov	r2, #0
     900:	str	r2, [r3, #8]
     904:	ldr	r3, [fp, #-8]
     908:	mvn	r2, #0
     90c:	str	r2, [r3, #12]
     910:	ldr	r3, [fp, #-8]
     914:	mov	r2, #0
     918:	str	r2, [r3, #528]	; 0x210
     91c:	ldr	r3, [fp, #-8]
     920:	mov	r2, #0
     924:	str	r2, [r3, #532]	; 0x214
     928:	ldr	r3, [fp, #-8]
     92c:	mov	r2, #0
     930:	str	r2, [r3, #536]	; 0x218
     934:	ldr	r3, [fp, #-8]
     938:	mov	r2, #0
     93c:	str	r2, [r3, #540]	; 0x21c
     940:	ldr	r3, [fp, #-8]
     944:	mov	r2, #0
     948:	str	r2, [r3, #544]	; 0x220
     94c:	nop			; (mov r0, r0)
     950:	add	sp, fp, #0
     954:	pop	{fp}		; (ldr fp, [sp], #4)
     958:	bx	lr

0000095c <abort_parser>:
     95c:	push	{fp, lr}
     960:	add	fp, sp, #4
     964:	sub	sp, sp, #8
     968:	str	r0, [fp, #-8]
     96c:	ldr	r3, [fp, #-8]
     970:	ldr	r3, [r3]
     974:	mov	r1, #0
     978:	mov	r0, r3
     97c:	bl	0 <coda_XML_StopParser>
     980:	ldr	r3, [fp, #-8]
     984:	mov	r2, #1
     988:	str	r2, [r3, #4]
     98c:	nop			; (mov r0, r0)
     990:	sub	sp, fp, #4
     994:	pop	{fp, pc}

00000998 <not_standalone_handler>:
     998:	push	{fp}		; (str fp, [sp, #-4]!)
     99c:	add	fp, sp, #0
     9a0:	sub	sp, sp, #12
     9a4:	str	r0, [fp, #-8]
     9a8:	mov	r3, #0
     9ac:	mov	r0, r3
     9b0:	add	sp, fp, #0
     9b4:	pop	{fp}		; (ldr fp, [sp], #4)
     9b8:	bx	lr

000009bc <start_element_handler>:
     9bc:	push	{r4, fp, lr}
     9c0:	add	fp, sp, #8
     9c4:	sub	sp, sp, #60	; 0x3c
     9c8:	str	r0, [fp, #-48]	; 0xffffffd0
     9cc:	str	r1, [fp, #-52]	; 0xffffffcc
     9d0:	str	r2, [fp, #-56]	; 0xffffffc8
     9d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
     9d8:	str	r3, [fp, #-28]	; 0xffffffe4
     9dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9e0:	ldr	r2, [r3, #12]
     9e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9e8:	add	r2, r2, #36	; 0x24
     9ec:	ldr	r3, [r3, r2, lsl #2]
     9f0:	cmp	r3, #0
     9f4:	beq	a74 <start_element_handler+0xb8>
     9f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     9fc:	ldr	r2, [r3, #12]
     a00:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a04:	add	r2, r2, #36	; 0x24
     a08:	ldr	r3, [r3, r2, lsl #2]
     a0c:	ldr	r3, [r3, #4]
     a10:	ldr	r3, [r3]
     a14:	cmp	r3, #2
     a18:	beq	aa4 <start_element_handler+0xe8>
     a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a20:	ldr	r2, [r3, #12]
     a24:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a28:	add	r2, r2, #100	; 0x64
     a2c:	ldr	r4, [r3, r2, lsl #2]
     a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a34:	ldr	r2, [r3, #12]
     a38:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a3c:	add	r2, r2, #36	; 0x24
     a40:	ldr	r3, [r3, r2, lsl #2]
     a44:	ldr	r3, [r3, #4]
     a48:	ldr	r3, [r3]
     a4c:	mov	r0, r3
     a50:	bl	0 <coda_type_get_format_name>
     a54:	mov	r3, r0
     a58:	mov	r2, r4
     a5c:	ldr	r1, [pc, #2240]	; 1324 <start_element_handler+0x968>
     a60:	ldr	r0, [pc, #2240]	; 1328 <start_element_handler+0x96c>
     a64:	bl	0 <coda_set_error>
     a68:	ldr	r0, [fp, #-28]	; 0xffffffe4
     a6c:	bl	95c <abort_parser>
     a70:	b	131c <start_element_handler+0x960>
     a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a78:	ldr	r2, [r3, #12]
     a7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a80:	add	r2, r2, #100	; 0x64
     a84:	ldr	r3, [r3, r2, lsl #2]
     a88:	mov	r2, r3
     a8c:	ldr	r1, [pc, #2200]	; 132c <start_element_handler+0x970>
     a90:	ldr	r0, [pc, #2192]	; 1328 <start_element_handler+0x96c>
     a94:	bl	0 <coda_set_error>
     a98:	ldr	r0, [fp, #-28]	; 0xffffffe4
     a9c:	bl	95c <abort_parser>
     aa0:	b	131c <start_element_handler+0x960>
     aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     aa8:	mov	r2, #0
     aac:	str	r2, [r3, #536]	; 0x218
     ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ab4:	ldr	r3, [r3, #12]
     ab8:	add	r2, r3, #1
     abc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ac0:	str	r2, [r3, #12]
     ac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ac8:	ldr	r3, [r3, #12]
     acc:	cmp	r3, #31
     ad0:	ble	af0 <start_element_handler+0x134>
     ad4:	mov	r2, #32
     ad8:	ldr	r1, [pc, #2128]	; 1330 <start_element_handler+0x974>
     adc:	ldr	r0, [pc, #2116]	; 1328 <start_element_handler+0x96c>
     ae0:	bl	0 <coda_set_error>
     ae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ae8:	bl	95c <abort_parser>
     aec:	b	131c <start_element_handler+0x960>
     af0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     af4:	ldr	r2, [r3, #12]
     af8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     afc:	add	r2, r2, #36	; 0x24
     b00:	mov	r1, #0
     b04:	str	r1, [r3, r2, lsl #2]
     b08:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b0c:	ldr	r3, [r3, #12]
     b10:	sub	r2, r3, #1
     b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b18:	add	r2, r2, #36	; 0x24
     b1c:	ldr	r3, [r3, r2, lsl #2]
     b20:	str	r3, [fp, #-44]	; 0xffffffd4
     b24:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b28:	ldr	r3, [r3, #4]
     b2c:	ldr	r3, [r3, #44]	; 0x2c
     b30:	ldr	r1, [fp, #-52]	; 0xffffffcc
     b34:	mov	r0, r3
     b38:	bl	0 <coda_hashtable_get_index_from_name>
     b3c:	str	r0, [fp, #-20]	; 0xffffffec
     b40:	ldr	r3, [fp, #-20]	; 0xffffffec
     b44:	cmp	r3, #0
     b48:	bge	b74 <start_element_handler+0x1b8>
     b4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     b50:	ldr	r3, [r3, #4]
     b54:	ldr	r4, [r3, #44]	; 0x2c
     b58:	ldr	r0, [fp, #-52]	; 0xffffffcc
     b5c:	bl	0 <coda_element_name_from_xml_name>
     b60:	mov	r3, r0
     b64:	mov	r1, r3
     b68:	mov	r0, r4
     b6c:	bl	0 <coda_hashtable_get_index_from_name>
     b70:	str	r0, [fp, #-20]	; 0xffffffec
     b74:	ldr	r3, [fp, #-20]	; 0xffffffec
     b78:	cmp	r3, #0
     b7c:	bge	cf0 <start_element_handler+0x334>
     b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
     b84:	ldr	r3, [r3, #532]	; 0x214
     b88:	cmp	r3, #0
     b8c:	beq	c98 <start_element_handler+0x2dc>
     b90:	mov	r0, #2
     b94:	bl	0 <coda_type_record_new>
     b98:	str	r0, [fp, #-16]
     b9c:	ldr	r3, [fp, #-16]
     ba0:	cmp	r3, #0
     ba4:	bne	bb4 <start_element_handler+0x1f8>
     ba8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     bac:	bl	95c <abort_parser>
     bb0:	b	131c <start_element_handler+0x960>
     bb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     bb8:	ldr	r3, [r3, #4]
     bbc:	ldr	r2, [fp, #-16]
     bc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
     bc4:	mov	r0, r3
     bc8:	bl	0 <coda_type_record_create_field>
     bcc:	mov	r3, r0
     bd0:	cmp	r3, #0
     bd4:	beq	bec <start_element_handler+0x230>
     bd8:	ldr	r0, [fp, #-16]
     bdc:	bl	0 <coda_type_release>
     be0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     be4:	bl	95c <abort_parser>
     be8:	b	131c <start_element_handler+0x960>
     bec:	ldr	r0, [fp, #-16]
     bf0:	bl	0 <coda_type_release>
     bf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
     bf8:	ldr	r2, [r3, #4]
     bfc:	sub	r3, fp, #44	; 0x2c
     c00:	mov	r1, r2
     c04:	mov	r0, r3
     c08:	bl	0 <coda_mem_type_update>
     c0c:	mov	r3, r0
     c10:	cmp	r3, #0
     c14:	beq	c24 <start_element_handler+0x268>
     c18:	ldr	r0, [fp, #-28]	; 0xffffffe4
     c1c:	bl	95c <abort_parser>
     c20:	b	131c <start_element_handler+0x960>
     c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c28:	ldr	r3, [r3, #12]
     c2c:	sub	r2, r3, #1
     c30:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c34:	add	r2, r2, #36	; 0x24
     c38:	ldr	r2, [r3, r2, lsl #2]
     c3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c40:	cmp	r2, r3
     c44:	beq	c5c <start_element_handler+0x2a0>
     c48:	ldr	r3, [pc, #1764]	; 1334 <start_element_handler+0x978>
     c4c:	ldr	r2, [pc, #1764]	; 1338 <start_element_handler+0x97c>
     c50:	ldr	r1, [pc, #1764]	; 133c <start_element_handler+0x980>
     c54:	ldr	r0, [pc, #1764]	; 1340 <start_element_handler+0x984>
     c58:	bl	0 <__assert_fail>
     c5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     c60:	ldr	r3, [r3, #4]
     c64:	ldr	r3, [r3, #44]	; 0x2c
     c68:	ldr	r1, [fp, #-52]	; 0xffffffcc
     c6c:	mov	r0, r3
     c70:	bl	0 <coda_hashtable_get_index_from_name>
     c74:	str	r0, [fp, #-20]	; 0xffffffec
     c78:	ldr	r3, [fp, #-20]	; 0xffffffec
     c7c:	cmp	r3, #0
     c80:	bge	cf0 <start_element_handler+0x334>
     c84:	ldr	r3, [pc, #1704]	; 1334 <start_element_handler+0x978>
     c88:	mov	r2, #396	; 0x18c
     c8c:	ldr	r1, [pc, #1704]	; 133c <start_element_handler+0x980>
     c90:	ldr	r0, [pc, #1708]	; 1344 <start_element_handler+0x988>
     c94:	bl	0 <__assert_fail>
     c98:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c9c:	ldr	r3, [r3, #12]
     ca0:	cmp	r3, #1
     ca4:	bne	cbc <start_element_handler+0x300>
     ca8:	ldr	r2, [fp, #-52]	; 0xffffffcc
     cac:	ldr	r1, [pc, #1684]	; 1348 <start_element_handler+0x98c>
     cb0:	ldr	r0, [pc, #1648]	; 1328 <start_element_handler+0x96c>
     cb4:	bl	0 <coda_set_error>
     cb8:	b	ce4 <start_element_handler+0x328>
     cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     cc0:	ldr	r3, [r3, #12]
     cc4:	sub	r2, r3, #1
     cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ccc:	add	r2, r2, #100	; 0x64
     cd0:	ldr	r3, [r3, r2, lsl #2]
     cd4:	ldr	r2, [fp, #-52]	; 0xffffffcc
     cd8:	ldr	r1, [pc, #1644]	; 134c <start_element_handler+0x990>
     cdc:	ldr	r0, [pc, #1604]	; 1328 <start_element_handler+0x96c>
     ce0:	bl	0 <coda_set_error>
     ce4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ce8:	bl	95c <abort_parser>
     cec:	b	131c <start_element_handler+0x960>
     cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     cf4:	ldr	r2, [r3, #12]
     cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     cfc:	add	r2, r2, #68	; 0x44
     d00:	ldr	r1, [fp, #-20]	; 0xffffffec
     d04:	str	r1, [r3, r2, lsl #2]
     d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d0c:	ldr	r2, [r3, #12]
     d10:	ldr	r3, [fp, #-44]	; 0xffffffd4
     d14:	ldr	r3, [r3, #4]
     d18:	ldr	r1, [r3, #52]	; 0x34
     d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
     d20:	lsl	r3, r3, #2
     d24:	add	r3, r1, r3
     d28:	ldr	r3, [r3]
     d2c:	add	r1, r3, #8
     d30:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d34:	add	r2, r2, #4
     d38:	str	r1, [r3, r2, lsl #2]
     d3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     d40:	ldr	r0, [r3, #4]
     d44:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d48:	ldr	r3, [r3, #12]
     d4c:	add	r3, r3, #100	; 0x64
     d50:	lsl	r3, r3, #2
     d54:	ldr	r2, [fp, #-28]	; 0xffffffe4
     d58:	add	r3, r2, r3
     d5c:	mov	r2, r3
     d60:	ldr	r1, [fp, #-20]	; 0xffffffec
     d64:	bl	0 <coda_type_get_record_field_real_name>
     d68:	mov	r3, r0
     d6c:	cmp	r3, #0
     d70:	beq	d80 <start_element_handler+0x3c4>
     d74:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d78:	bl	95c <abort_parser>
     d7c:	b	131c <start_element_handler+0x960>
     d80:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d84:	ldr	r2, [r3, #12]
     d88:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d8c:	add	r2, r2, #4
     d90:	ldr	r3, [r3, r2, lsl #2]
     d94:	ldr	r3, [r3]
     d98:	str	r3, [fp, #-16]
     d9c:	ldr	r3, [fp, #-16]
     da0:	ldr	r3, [r3, #8]
     da4:	cmp	r3, #1
     da8:	bne	e6c <start_element_handler+0x4b0>
     dac:	ldr	r3, [fp, #-16]
     db0:	ldr	r3, [r3]
     db4:	cmp	r3, #2
     db8:	bne	1024 <start_element_handler+0x668>
     dbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
     dc0:	ldr	r2, [r3, #20]
     dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     dc8:	lsl	r3, r3, #2
     dcc:	add	r3, r2, r3
     dd0:	ldr	r3, [r3]
     dd4:	cmp	r3, #0
     dd8:	bne	e30 <start_element_handler+0x474>
     ddc:	ldr	r3, [fp, #-44]	; 0xffffffd4
     de0:	ldr	r2, [r3, #20]
     de4:	ldr	r3, [fp, #-20]	; 0xffffffec
     de8:	lsl	r3, r3, #2
     dec:	add	r4, r2, r3
     df0:	mov	r1, #0
     df4:	ldr	r0, [fp, #-16]
     df8:	bl	0 <coda_mem_array_new>
     dfc:	mov	r3, r0
     e00:	str	r3, [r4]
     e04:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e08:	ldr	r2, [r3, #20]
     e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
     e10:	lsl	r3, r3, #2
     e14:	add	r3, r2, r3
     e18:	ldr	r3, [r3]
     e1c:	cmp	r3, #0
     e20:	bne	e30 <start_element_handler+0x474>
     e24:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e28:	bl	95c <abort_parser>
     e2c:	b	131c <start_element_handler+0x960>
     e30:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e34:	ldr	r2, [r3, #12]
     e38:	ldr	r3, [fp, #-16]
     e3c:	add	r1, r3, #40	; 0x28
     e40:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e44:	add	r2, r2, #4
     e48:	str	r1, [r3, r2, lsl #2]
     e4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e50:	ldr	r2, [r3, #12]
     e54:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e58:	add	r2, r2, #4
     e5c:	ldr	r3, [r3, r2, lsl #2]
     e60:	ldr	r3, [r3]
     e64:	str	r3, [fp, #-16]
     e68:	b	1024 <start_element_handler+0x668>
     e6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     e70:	ldr	r2, [r3, #20]
     e74:	ldr	r3, [fp, #-20]	; 0xffffffec
     e78:	lsl	r3, r3, #2
     e7c:	add	r3, r2, r3
     e80:	ldr	r3, [r3]
     e84:	cmp	r3, #0
     e88:	beq	1024 <start_element_handler+0x668>
     e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     e90:	ldr	r3, [r3, #532]	; 0x214
     e94:	cmp	r3, #0
     e98:	beq	ff0 <start_element_handler+0x634>
     e9c:	mov	r0, #2
     ea0:	bl	0 <coda_type_array_new>
     ea4:	str	r0, [fp, #-32]	; 0xffffffe0
     ea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     eac:	cmp	r3, #0
     eb0:	bne	ec0 <start_element_handler+0x504>
     eb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     eb8:	bl	95c <abort_parser>
     ebc:	b	131c <start_element_handler+0x960>
     ec0:	ldr	r1, [fp, #-16]
     ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ec8:	bl	0 <coda_type_array_set_base_type>
     ecc:	mov	r3, r0
     ed0:	cmp	r3, #0
     ed4:	beq	eec <start_element_handler+0x530>
     ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     edc:	bl	0 <coda_type_release>
     ee0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ee4:	bl	95c <abort_parser>
     ee8:	b	131c <start_element_handler+0x960>
     eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ef0:	ldr	r2, [r3, #12]
     ef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ef8:	add	r2, r2, #4
     efc:	ldr	r3, [r3, r2, lsl #2]
     f00:	ldr	r2, [fp, #-32]	; 0xffffffe0
     f04:	str	r2, [r3]
     f08:	ldr	r0, [fp, #-16]
     f0c:	bl	0 <coda_type_release>
     f10:	mov	r1, #0
     f14:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f18:	bl	0 <coda_type_array_add_variable_dimension>
     f1c:	mov	r3, r0
     f20:	cmp	r3, #0
     f24:	beq	f34 <start_element_handler+0x578>
     f28:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f2c:	bl	95c <abort_parser>
     f30:	b	131c <start_element_handler+0x960>
     f34:	mov	r1, #0
     f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f3c:	bl	0 <coda_mem_array_new>
     f40:	str	r0, [fp, #-36]	; 0xffffffdc
     f44:	ldr	r3, [fp, #-36]	; 0xffffffdc
     f48:	cmp	r3, #0
     f4c:	bne	f5c <start_element_handler+0x5a0>
     f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f54:	bl	95c <abort_parser>
     f58:	b	131c <start_element_handler+0x960>
     f5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
     f60:	ldr	r2, [r3, #20]
     f64:	ldr	r3, [fp, #-20]	; 0xffffffec
     f68:	lsl	r3, r3, #2
     f6c:	add	r3, r2, r3
     f70:	ldr	r3, [r3]
     f74:	mov	r1, r3
     f78:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f7c:	bl	0 <coda_mem_array_add_element>
     f80:	mov	r3, r0
     f84:	cmp	r3, #0
     f88:	beq	f98 <start_element_handler+0x5dc>
     f8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f90:	bl	95c <abort_parser>
     f94:	b	131c <start_element_handler+0x960>
     f98:	ldr	r3, [fp, #-44]	; 0xffffffd4
     f9c:	ldr	r2, [r3, #20]
     fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
     fa4:	lsl	r3, r3, #2
     fa8:	add	r3, r2, r3
     fac:	ldr	r2, [fp, #-36]	; 0xffffffdc
     fb0:	str	r2, [r3]
     fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fb8:	ldr	r2, [r3, #12]
     fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fc0:	add	r1, r3, #40	; 0x28
     fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fc8:	add	r2, r2, #4
     fcc:	str	r1, [r3, r2, lsl #2]
     fd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fd4:	ldr	r2, [r3, #12]
     fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fdc:	add	r2, r2, #4
     fe0:	ldr	r3, [r3, r2, lsl #2]
     fe4:	ldr	r3, [r3]
     fe8:	str	r3, [fp, #-16]
     fec:	b	1024 <start_element_handler+0x668>
     ff0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ff4:	ldr	r3, [r3, #12]
     ff8:	sub	r2, r3, #1
     ffc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1000:	add	r2, r2, #100	; 0x64
    1004:	ldr	r3, [r3, r2, lsl #2]
    1008:	ldr	r2, [fp, #-52]	; 0xffffffcc
    100c:	ldr	r1, [pc, #828]	; 1350 <start_element_handler+0x994>
    1010:	ldr	r0, [pc, #784]	; 1328 <start_element_handler+0x96c>
    1014:	bl	0 <coda_set_error>
    1018:	ldr	r0, [fp, #-28]	; 0xffffffe4
    101c:	bl	95c <abort_parser>
    1020:	b	131c <start_element_handler+0x960>
    1024:	ldr	r3, [fp, #-16]
    1028:	ldr	r3, [r3, #36]	; 0x24
    102c:	cmp	r3, #0
    1030:	bne	112c <start_element_handler+0x770>
    1034:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1038:	mov	r2, #0
    103c:	str	r2, [r3, #528]	; 0x210
    1040:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1044:	ldr	r3, [r3, #532]	; 0x214
    1048:	cmp	r3, #0
    104c:	beq	10f8 <start_element_handler+0x73c>
    1050:	ldr	r3, [fp, #-56]	; 0xffffffc8
    1054:	ldr	r3, [r3]
    1058:	cmp	r3, #0
    105c:	bne	1078 <start_element_handler+0x6bc>
    1060:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1064:	bl	0 <coda_element_name_from_xml_name>
    1068:	mov	r2, r0
    106c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1070:	cmp	r2, r3
    1074:	beq	117c <start_element_handler+0x7c0>
    1078:	mov	r0, #2
    107c:	bl	0 <coda_type_record_new>
    1080:	mov	r2, r0
    1084:	ldr	r3, [fp, #-16]
    1088:	str	r2, [r3, #36]	; 0x24
    108c:	ldr	r3, [fp, #-16]
    1090:	ldr	r3, [r3, #36]	; 0x24
    1094:	cmp	r3, #0
    1098:	bne	10a8 <start_element_handler+0x6ec>
    109c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10a0:	bl	95c <abort_parser>
    10a4:	b	131c <start_element_handler+0x960>
    10a8:	ldr	r3, [fp, #-16]
    10ac:	ldr	r0, [r3, #36]	; 0x24
    10b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10b4:	ldr	r1, [r3, #8]
    10b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10bc:	ldr	r3, [r3, #532]	; 0x214
    10c0:	str	r3, [sp]
    10c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
    10cc:	bl	1c0 <attribute_record_new>
    10d0:	mov	r2, r0
    10d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10d8:	str	r2, [r3, #528]	; 0x210
    10dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    10e0:	ldr	r3, [r3, #528]	; 0x210
    10e4:	cmp	r3, #0
    10e8:	bne	117c <start_element_handler+0x7c0>
    10ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10f0:	bl	95c <abort_parser>
    10f4:	b	131c <start_element_handler+0x960>
    10f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    10fc:	ldr	r3, [r3]
    1100:	cmp	r3, #0
    1104:	beq	117c <start_element_handler+0x7c0>
    1108:	ldr	r3, [fp, #-56]	; 0xffffffc8
    110c:	ldr	r3, [r3]
    1110:	mov	r2, r3
    1114:	ldr	r1, [pc, #568]	; 1354 <start_element_handler+0x998>
    1118:	ldr	r0, [pc, #520]	; 1328 <start_element_handler+0x96c>
    111c:	bl	0 <coda_set_error>
    1120:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1124:	bl	95c <abort_parser>
    1128:	b	131c <start_element_handler+0x960>
    112c:	ldr	r3, [fp, #-16]
    1130:	ldr	r0, [r3, #36]	; 0x24
    1134:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1138:	ldr	r1, [r3, #8]
    113c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1140:	ldr	r3, [r3, #532]	; 0x214
    1144:	str	r3, [sp]
    1148:	ldr	r3, [fp, #-56]	; 0xffffffc8
    114c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    1150:	bl	1c0 <attribute_record_new>
    1154:	mov	r2, r0
    1158:	ldr	r3, [fp, #-28]	; 0xffffffe4
    115c:	str	r2, [r3, #528]	; 0x210
    1160:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1164:	ldr	r3, [r3, #528]	; 0x210
    1168:	cmp	r3, #0
    116c:	bne	117c <start_element_handler+0x7c0>
    1170:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1174:	bl	95c <abort_parser>
    1178:	b	131c <start_element_handler+0x960>
    117c:	ldr	r3, [fp, #-16]
    1180:	ldr	r3, [r3]
    1184:	cmp	r3, #2
    1188:	bne	131c <start_element_handler+0x960>
    118c:	ldr	r3, [fp, #-16]
    1190:	ldr	r3, [r3, #8]
    1194:	cmp	r3, #0
    1198:	bne	131c <start_element_handler+0x960>
    119c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11a0:	ldr	r4, [r3, #12]
    11a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11a8:	ldr	r3, [r3, #528]	; 0x210
    11ac:	mov	r1, r3
    11b0:	ldr	r0, [fp, #-16]
    11b4:	bl	0 <coda_mem_record_new>
    11b8:	mov	r1, r0
    11bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11c0:	add	r2, r4, #36	; 0x24
    11c4:	str	r1, [r3, r2, lsl #2]
    11c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11cc:	ldr	r2, [r3, #12]
    11d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    11d4:	add	r2, r2, #36	; 0x24
    11d8:	ldr	r3, [r3, r2, lsl #2]
    11dc:	cmp	r3, #0
    11e0:	bne	11f0 <start_element_handler+0x834>
    11e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11e8:	bl	95c <abort_parser>
    11ec:	b	131c <start_element_handler+0x960>
    11f0:	mov	r3, #0
    11f4:	str	r3, [fp, #-24]	; 0xffffffe8
    11f8:	b	12ec <start_element_handler+0x930>
    11fc:	ldr	r3, [fp, #-16]
    1200:	ldr	r2, [r3, #52]	; 0x34
    1204:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1208:	lsl	r3, r3, #2
    120c:	add	r3, r2, r3
    1210:	ldr	r3, [r3]
    1214:	ldr	r3, [r3, #8]
    1218:	ldr	r3, [r3, #8]
    121c:	cmp	r3, #1
    1220:	bne	12e0 <start_element_handler+0x924>
    1224:	ldr	r3, [fp, #-16]
    1228:	ldr	r2, [r3, #52]	; 0x34
    122c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1230:	lsl	r3, r3, #2
    1234:	add	r3, r2, r3
    1238:	ldr	r3, [r3]
    123c:	ldr	r3, [r3, #8]
    1240:	ldr	r3, [r3]
    1244:	cmp	r3, #2
    1248:	bne	12e0 <start_element_handler+0x924>
    124c:	ldr	r3, [fp, #-16]
    1250:	ldr	r2, [r3, #52]	; 0x34
    1254:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1258:	lsl	r3, r3, #2
    125c:	add	r3, r2, r3
    1260:	ldr	r3, [r3]
    1264:	ldr	r3, [r3, #8]
    1268:	str	r3, [fp, #-40]	; 0xffffffd8
    126c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1270:	ldr	r2, [r3, #12]
    1274:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1278:	add	r2, r2, #36	; 0x24
    127c:	ldr	r3, [r3, r2, lsl #2]
    1280:	ldr	r2, [r3, #20]
    1284:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1288:	lsl	r3, r3, #2
    128c:	add	r4, r2, r3
    1290:	mov	r1, #0
    1294:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1298:	bl	0 <coda_mem_array_new>
    129c:	mov	r3, r0
    12a0:	str	r3, [r4]
    12a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12a8:	ldr	r2, [r3, #12]
    12ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12b0:	add	r2, r2, #36	; 0x24
    12b4:	ldr	r3, [r3, r2, lsl #2]
    12b8:	ldr	r2, [r3, #20]
    12bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12c0:	lsl	r3, r3, #2
    12c4:	add	r3, r2, r3
    12c8:	ldr	r3, [r3]
    12cc:	cmp	r3, #0
    12d0:	bne	12e0 <start_element_handler+0x924>
    12d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12d8:	bl	95c <abort_parser>
    12dc:	b	131c <start_element_handler+0x960>
    12e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12e4:	add	r3, r3, #1
    12e8:	str	r3, [fp, #-24]	; 0xffffffe8
    12ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12f0:	ldr	r2, [r3, #12]
    12f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12f8:	add	r2, r2, #36	; 0x24
    12fc:	ldr	r3, [r3, r2, lsl #2]
    1300:	ldr	r2, [r3, #16]
    1304:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1308:	cmp	r2, r3
    130c:	bgt	11fc <start_element_handler+0x840>
    1310:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1314:	mov	r2, #0
    1318:	str	r2, [r3, #528]	; 0x210
    131c:	sub	sp, fp, #8
    1320:	pop	{r4, fp, pc}
    1324:	.word	0x00000150
    1328:	.word	0xfffffed4
    132c:	.word	0x0000017c
    1330:	.word	0x000001ac
    1334:	.word	0x0000052c
    1338:	.word	0x0000018a
    133c:	.word	0x00000000
    1340:	.word	0x000001e8
    1344:	.word	0x00000210
    1348:	.word	0x0000021c
    134c:	.word	0x0000024c
    1350:	.word	0x00000280
    1354:	.word	0x00000104

00001358 <end_element_handler>:
    1358:	push	{fp, lr}
    135c:	add	fp, sp, #4
    1360:	sub	sp, sp, #48	; 0x30
    1364:	str	r0, [fp, #-40]	; 0xffffffd8
    1368:	str	r1, [fp, #-44]	; 0xffffffd4
    136c:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1370:	str	r3, [fp, #-16]
    1374:	ldr	r3, [fp, #-16]
    1378:	ldr	r3, [r3, #4]
    137c:	cmp	r3, #0
    1380:	bne	18d4 <end_element_handler+0x57c>
    1384:	ldr	r3, [fp, #-16]
    1388:	ldr	r2, [r3, #12]
    138c:	ldr	r3, [fp, #-16]
    1390:	add	r2, r2, #36	; 0x24
    1394:	ldr	r3, [r3, r2, lsl #2]
    1398:	cmp	r3, #0
    139c:	beq	14f4 <end_element_handler+0x19c>
    13a0:	ldr	r3, [fp, #-16]
    13a4:	ldr	r3, [r3, #536]	; 0x218
    13a8:	cmp	r3, #0
    13ac:	ble	14f4 <end_element_handler+0x19c>
    13b0:	ldr	r3, [fp, #-16]
    13b4:	ldr	r2, [r3, #544]	; 0x220
    13b8:	ldr	r3, [fp, #-16]
    13bc:	ldr	r3, [r3, #536]	; 0x218
    13c0:	mov	r1, r3
    13c4:	mov	r0, r2
    13c8:	bl	0 <is_whitespace>
    13cc:	mov	r3, r0
    13d0:	cmp	r3, #0
    13d4:	bne	14f4 <end_element_handler+0x19c>
    13d8:	ldr	r3, [fp, #-16]
    13dc:	ldr	r3, [r3, #532]	; 0x214
    13e0:	cmp	r3, #0
    13e4:	bne	13fc <end_element_handler+0xa4>
    13e8:	ldr	r3, [pc, #1264]	; 18e0 <end_element_handler+0x588>
    13ec:	ldr	r2, [pc, #1264]	; 18e4 <end_element_handler+0x58c>
    13f0:	ldr	r1, [pc, #1264]	; 18e8 <end_element_handler+0x590>
    13f4:	ldr	r0, [pc, #1264]	; 18ec <end_element_handler+0x594>
    13f8:	bl	0 <__assert_fail>
    13fc:	ldr	r3, [fp, #-16]
    1400:	ldr	r2, [r3, #12]
    1404:	ldr	r3, [fp, #-16]
    1408:	add	r2, r2, #36	; 0x24
    140c:	ldr	r3, [r3, r2, lsl #2]
    1410:	ldr	r3, [r3, #4]
    1414:	ldr	r3, [r3, #48]	; 0x30
    1418:	cmp	r3, #0
    141c:	ble	1450 <end_element_handler+0xf8>
    1420:	ldr	r3, [fp, #-16]
    1424:	ldr	r2, [r3, #12]
    1428:	ldr	r3, [fp, #-16]
    142c:	add	r2, r2, #100	; 0x64
    1430:	ldr	r3, [r3, r2, lsl #2]
    1434:	mov	r2, r3
    1438:	ldr	r1, [pc, #1200]	; 18f0 <end_element_handler+0x598>
    143c:	ldr	r0, [pc, #1200]	; 18f4 <end_element_handler+0x59c>
    1440:	bl	0 <coda_set_error>
    1444:	ldr	r0, [fp, #-16]
    1448:	bl	95c <abort_parser>
    144c:	b	18d8 <end_element_handler+0x580>
    1450:	ldr	r3, [fp, #-16]
    1454:	ldr	r2, [r3, #12]
    1458:	ldr	r3, [fp, #-16]
    145c:	add	r2, r2, #36	; 0x24
    1460:	ldr	r3, [r3, r2, lsl #2]
    1464:	ldr	r2, [r3, #12]
    1468:	ldr	r3, [fp, #-16]
    146c:	str	r2, [r3, #528]	; 0x210
    1470:	ldr	r3, [fp, #-16]
    1474:	ldr	r2, [r3, #12]
    1478:	ldr	r3, [fp, #-16]
    147c:	add	r2, r2, #36	; 0x24
    1480:	ldr	r3, [r3, r2, lsl #2]
    1484:	mov	r2, #0
    1488:	str	r2, [r3, #12]
    148c:	ldr	r3, [fp, #-16]
    1490:	ldr	r2, [r3, #12]
    1494:	ldr	r3, [fp, #-16]
    1498:	add	r2, r2, #4
    149c:	ldr	r3, [r3, r2, lsl #2]
    14a0:	mov	r0, r3
    14a4:	bl	e0 <convert_to_text>
    14a8:	mov	r3, r0
    14ac:	cmp	r3, #0
    14b0:	beq	14c0 <end_element_handler+0x168>
    14b4:	ldr	r0, [fp, #-16]
    14b8:	bl	95c <abort_parser>
    14bc:	b	18d8 <end_element_handler+0x580>
    14c0:	ldr	r3, [fp, #-16]
    14c4:	ldr	r2, [r3, #12]
    14c8:	ldr	r3, [fp, #-16]
    14cc:	add	r2, r2, #36	; 0x24
    14d0:	ldr	r3, [r3, r2, lsl #2]
    14d4:	mov	r0, r3
    14d8:	bl	0 <coda_dynamic_type_delete>
    14dc:	ldr	r3, [fp, #-16]
    14e0:	ldr	r2, [r3, #12]
    14e4:	ldr	r3, [fp, #-16]
    14e8:	add	r2, r2, #36	; 0x24
    14ec:	mov	r1, #0
    14f0:	str	r1, [r3, r2, lsl #2]
    14f4:	ldr	r3, [fp, #-16]
    14f8:	ldr	r2, [r3, #12]
    14fc:	ldr	r3, [fp, #-16]
    1500:	add	r2, r2, #36	; 0x24
    1504:	ldr	r3, [r3, r2, lsl #2]
    1508:	cmp	r3, #0
    150c:	bne	1644 <end_element_handler+0x2ec>
    1510:	ldr	r3, [fp, #-16]
    1514:	ldr	r2, [r3, #12]
    1518:	ldr	r3, [fp, #-16]
    151c:	add	r2, r2, #4
    1520:	ldr	r3, [r3, r2, lsl #2]
    1524:	ldr	r3, [r3]
    1528:	str	r3, [fp, #-20]	; 0xffffffec
    152c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1530:	ldr	r3, [r3, #8]
    1534:	cmp	r3, #6
    1538:	bne	15e8 <end_element_handler+0x290>
    153c:	ldr	r3, [fp, #-16]
    1540:	ldr	r3, [r3, #532]	; 0x214
    1544:	cmp	r3, #0
    1548:	beq	1560 <end_element_handler+0x208>
    154c:	ldr	r3, [pc, #908]	; 18e0 <end_element_handler+0x588>
    1550:	ldr	r2, [pc, #928]	; 18f8 <end_element_handler+0x5a0>
    1554:	ldr	r1, [pc, #908]	; 18e8 <end_element_handler+0x590>
    1558:	ldr	r0, [pc, #924]	; 18fc <end_element_handler+0x5a4>
    155c:	bl	0 <__assert_fail>
    1560:	ldr	r3, [fp, #-20]	; 0xffffffec
    1564:	ldr	r0, [r3, #44]	; 0x2c
    1568:	ldr	r3, [fp, #-16]
    156c:	ldr	r2, [r3, #8]
    1570:	ldr	r3, [fp, #-16]
    1574:	ldr	r1, [r3, #536]	; 0x218
    1578:	ldr	r3, [fp, #-16]
    157c:	ldr	r3, [r3, #544]	; 0x220
    1580:	str	r3, [sp]
    1584:	mov	r3, r1
    1588:	mov	r1, #0
    158c:	bl	0 <coda_mem_data_new>
    1590:	str	r0, [fp, #-24]	; 0xffffffe8
    1594:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1598:	cmp	r3, #0
    159c:	bne	15ac <end_element_handler+0x254>
    15a0:	ldr	r0, [fp, #-16]
    15a4:	bl	95c <abort_parser>
    15a8:	b	18d8 <end_element_handler+0x580>
    15ac:	ldr	r3, [fp, #-16]
    15b0:	ldr	r3, [r3, #528]	; 0x210
    15b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15b8:	mov	r1, r3
    15bc:	ldr	r0, [fp, #-20]	; 0xffffffec
    15c0:	bl	0 <coda_mem_time_new>
    15c4:	str	r0, [fp, #-8]
    15c8:	ldr	r3, [fp, #-8]
    15cc:	cmp	r3, #0
    15d0:	bne	1634 <end_element_handler+0x2dc>
    15d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    15d8:	bl	0 <coda_dynamic_type_delete>
    15dc:	ldr	r0, [fp, #-16]
    15e0:	bl	95c <abort_parser>
    15e4:	b	18d8 <end_element_handler+0x580>
    15e8:	ldr	r3, [fp, #-16]
    15ec:	ldr	r1, [r3, #528]	; 0x210
    15f0:	ldr	r3, [fp, #-16]
    15f4:	ldr	r2, [r3, #8]
    15f8:	ldr	r3, [fp, #-16]
    15fc:	ldr	r0, [r3, #536]	; 0x218
    1600:	ldr	r3, [fp, #-16]
    1604:	ldr	r3, [r3, #544]	; 0x220
    1608:	str	r3, [sp]
    160c:	mov	r3, r0
    1610:	ldr	r0, [fp, #-20]	; 0xffffffec
    1614:	bl	0 <coda_mem_data_new>
    1618:	str	r0, [fp, #-8]
    161c:	ldr	r3, [fp, #-8]
    1620:	cmp	r3, #0
    1624:	bne	1634 <end_element_handler+0x2dc>
    1628:	ldr	r0, [fp, #-16]
    162c:	bl	95c <abort_parser>
    1630:	b	18d8 <end_element_handler+0x580>
    1634:	ldr	r3, [fp, #-16]
    1638:	mov	r2, #0
    163c:	str	r2, [r3, #528]	; 0x210
    1640:	b	1774 <end_element_handler+0x41c>
    1644:	ldr	r3, [fp, #-16]
    1648:	ldr	r3, [r3, #532]	; 0x214
    164c:	cmp	r3, #0
    1650:	bne	1744 <end_element_handler+0x3ec>
    1654:	ldr	r3, [fp, #-16]
    1658:	ldr	r2, [r3, #12]
    165c:	ldr	r3, [fp, #-16]
    1660:	add	r2, r2, #36	; 0x24
    1664:	ldr	r3, [r3, r2, lsl #2]
    1668:	mov	r0, r3
    166c:	bl	0 <coda_mem_record_validate>
    1670:	mov	r3, r0
    1674:	cmp	r3, #0
    1678:	beq	1688 <end_element_handler+0x330>
    167c:	ldr	r0, [fp, #-16]
    1680:	bl	95c <abort_parser>
    1684:	b	18d8 <end_element_handler+0x580>
    1688:	mov	r3, #0
    168c:	str	r3, [fp, #-12]
    1690:	b	1720 <end_element_handler+0x3c8>
    1694:	ldr	r3, [fp, #-16]
    1698:	ldr	r2, [r3, #12]
    169c:	ldr	r3, [fp, #-16]
    16a0:	add	r2, r2, #36	; 0x24
    16a4:	ldr	r3, [r3, r2, lsl #2]
    16a8:	ldr	r2, [r3, #20]
    16ac:	ldr	r3, [fp, #-12]
    16b0:	lsl	r3, r3, #2
    16b4:	add	r3, r2, r3
    16b8:	ldr	r3, [r3]
    16bc:	str	r3, [fp, #-28]	; 0xffffffe4
    16c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16c4:	cmp	r3, #0
    16c8:	beq	1714 <end_element_handler+0x3bc>
    16cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16d0:	ldr	r3, [r3, #4]
    16d4:	ldr	r3, [r3, #8]
    16d8:	cmp	r3, #1
    16dc:	bne	1714 <end_element_handler+0x3bc>
    16e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    16e4:	ldr	r3, [r3, #4]
    16e8:	ldr	r3, [r3]
    16ec:	cmp	r3, #2
    16f0:	bne	1714 <end_element_handler+0x3bc>
    16f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    16f8:	bl	0 <coda_mem_array_validate>
    16fc:	mov	r3, r0
    1700:	cmp	r3, #0
    1704:	beq	1714 <end_element_handler+0x3bc>
    1708:	ldr	r0, [fp, #-16]
    170c:	bl	95c <abort_parser>
    1710:	b	18d8 <end_element_handler+0x580>
    1714:	ldr	r3, [fp, #-12]
    1718:	add	r3, r3, #1
    171c:	str	r3, [fp, #-12]
    1720:	ldr	r3, [fp, #-16]
    1724:	ldr	r2, [r3, #12]
    1728:	ldr	r3, [fp, #-16]
    172c:	add	r2, r2, #36	; 0x24
    1730:	ldr	r3, [r3, r2, lsl #2]
    1734:	ldr	r2, [r3, #16]
    1738:	ldr	r3, [fp, #-12]
    173c:	cmp	r2, r3
    1740:	bgt	1694 <end_element_handler+0x33c>
    1744:	ldr	r3, [fp, #-16]
    1748:	ldr	r2, [r3, #12]
    174c:	ldr	r3, [fp, #-16]
    1750:	add	r2, r2, #36	; 0x24
    1754:	ldr	r3, [r3, r2, lsl #2]
    1758:	str	r3, [fp, #-8]
    175c:	ldr	r3, [fp, #-16]
    1760:	ldr	r2, [r3, #12]
    1764:	ldr	r3, [fp, #-16]
    1768:	add	r2, r2, #36	; 0x24
    176c:	mov	r1, #0
    1770:	str	r1, [r3, r2, lsl #2]
    1774:	ldr	r3, [fp, #-16]
    1778:	ldr	r3, [r3, #528]	; 0x210
    177c:	cmp	r3, #0
    1780:	beq	1798 <end_element_handler+0x440>
    1784:	ldr	r3, [pc, #340]	; 18e0 <end_element_handler+0x588>
    1788:	ldr	r2, [pc, #368]	; 1900 <end_element_handler+0x5a8>
    178c:	ldr	r1, [pc, #340]	; 18e8 <end_element_handler+0x590>
    1790:	ldr	r0, [pc, #364]	; 1904 <end_element_handler+0x5ac>
    1794:	bl	0 <__assert_fail>
    1798:	ldr	r3, [fp, #-16]
    179c:	ldr	r3, [r3, #12]
    17a0:	sub	r2, r3, #1
    17a4:	ldr	r3, [fp, #-16]
    17a8:	add	r2, r2, #36	; 0x24
    17ac:	ldr	r3, [r3, r2, lsl #2]
    17b0:	str	r3, [fp, #-32]	; 0xffffffe0
    17b4:	ldr	r3, [fp, #-16]
    17b8:	ldr	r2, [r3, #12]
    17bc:	ldr	r3, [fp, #-16]
    17c0:	add	r2, r2, #68	; 0x44
    17c4:	ldr	r3, [r3, r2, lsl #2]
    17c8:	str	r3, [fp, #-36]	; 0xffffffdc
    17cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17d0:	ldr	r2, [r3, #20]
    17d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    17d8:	lsl	r3, r3, #2
    17dc:	add	r3, r2, r3
    17e0:	ldr	r3, [r3]
    17e4:	cmp	r3, #0
    17e8:	beq	1894 <end_element_handler+0x53c>
    17ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
    17f0:	ldr	r2, [r3, #20]
    17f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    17f8:	lsl	r3, r3, #2
    17fc:	add	r3, r2, r3
    1800:	ldr	r3, [r3]
    1804:	ldr	r3, [r3, #4]
    1808:	ldr	r3, [r3, #8]
    180c:	cmp	r3, #1
    1810:	bne	183c <end_element_handler+0x4e4>
    1814:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1818:	ldr	r2, [r3, #20]
    181c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1820:	lsl	r3, r3, #2
    1824:	add	r3, r2, r3
    1828:	ldr	r3, [r3]
    182c:	ldr	r3, [r3, #4]
    1830:	ldr	r3, [r3]
    1834:	cmp	r3, #2
    1838:	beq	1850 <end_element_handler+0x4f8>
    183c:	ldr	r3, [pc, #156]	; 18e0 <end_element_handler+0x588>
    1840:	ldr	r2, [pc, #192]	; 1908 <end_element_handler+0x5b0>
    1844:	ldr	r1, [pc, #156]	; 18e8 <end_element_handler+0x590>
    1848:	ldr	r0, [pc, #188]	; 190c <end_element_handler+0x5b4>
    184c:	bl	0 <__assert_fail>
    1850:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1854:	ldr	r2, [r3, #20]
    1858:	ldr	r3, [fp, #-36]	; 0xffffffdc
    185c:	lsl	r3, r3, #2
    1860:	add	r3, r2, r3
    1864:	ldr	r3, [r3]
    1868:	ldr	r1, [fp, #-8]
    186c:	mov	r0, r3
    1870:	bl	0 <coda_mem_array_add_element>
    1874:	mov	r3, r0
    1878:	cmp	r3, #0
    187c:	beq	18b0 <end_element_handler+0x558>
    1880:	ldr	r0, [fp, #-8]
    1884:	bl	0 <coda_dynamic_type_delete>
    1888:	ldr	r0, [fp, #-16]
    188c:	bl	95c <abort_parser>
    1890:	b	18d8 <end_element_handler+0x580>
    1894:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1898:	ldr	r2, [r3, #20]
    189c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    18a0:	lsl	r3, r3, #2
    18a4:	add	r3, r2, r3
    18a8:	ldr	r2, [fp, #-8]
    18ac:	str	r2, [r3]
    18b0:	ldr	r3, [fp, #-16]
    18b4:	ldr	r3, [r3, #12]
    18b8:	sub	r2, r3, #1
    18bc:	ldr	r3, [fp, #-16]
    18c0:	str	r2, [r3, #12]
    18c4:	ldr	r3, [fp, #-16]
    18c8:	mov	r2, #0
    18cc:	str	r2, [r3, #536]	; 0x218
    18d0:	b	18d8 <end_element_handler+0x580>
    18d4:	nop			; (mov r0, r0)
    18d8:	sub	sp, fp, #4
    18dc:	pop	{fp, pc}
    18e0:	.word	0x00000544
    18e4:	.word	0x0000024e
    18e8:	.word	0x00000000
    18ec:	.word	0x000002c4
    18f0:	.word	0x0000017c
    18f4:	.word	0xfffffed4
    18f8:	.word	0x0000026b
    18fc:	.word	0x000002dc
    1900:	.word	0x000002ad
    1904:	.word	0x000002f8
    1908:	.word	0x000002b5
    190c:	.word	0x00000314

00001910 <character_data_handler>:
    1910:	push	{fp, lr}
    1914:	add	fp, sp, #4
    1918:	sub	sp, sp, #32
    191c:	str	r0, [fp, #-16]
    1920:	str	r1, [fp, #-20]	; 0xffffffec
    1924:	str	r2, [fp, #-24]	; 0xffffffe8
    1928:	ldr	r3, [fp, #-16]
    192c:	str	r3, [fp, #-8]
    1930:	ldr	r3, [fp, #-8]
    1934:	ldr	r3, [r3, #532]	; 0x214
    1938:	cmp	r3, #0
    193c:	bne	19a4 <character_data_handler+0x94>
    1940:	ldr	r3, [fp, #-8]
    1944:	ldr	r2, [r3, #12]
    1948:	ldr	r3, [fp, #-8]
    194c:	add	r2, r2, #36	; 0x24
    1950:	ldr	r3, [r3, r2, lsl #2]
    1954:	cmp	r3, #0
    1958:	beq	19a4 <character_data_handler+0x94>
    195c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1960:	ldr	r0, [fp, #-20]	; 0xffffffec
    1964:	bl	0 <is_whitespace>
    1968:	mov	r3, r0
    196c:	cmp	r3, #0
    1970:	bne	19a4 <character_data_handler+0x94>
    1974:	ldr	r3, [fp, #-8]
    1978:	ldr	r2, [r3, #12]
    197c:	ldr	r3, [fp, #-8]
    1980:	add	r2, r2, #100	; 0x64
    1984:	ldr	r3, [r3, r2, lsl #2]
    1988:	mov	r2, r3
    198c:	ldr	r1, [pc, #252]	; 1a90 <character_data_handler+0x180>
    1990:	ldr	r0, [pc, #252]	; 1a94 <character_data_handler+0x184>
    1994:	bl	0 <coda_set_error>
    1998:	ldr	r0, [fp, #-8]
    199c:	bl	95c <abort_parser>
    19a0:	b	1a88 <character_data_handler+0x178>
    19a4:	ldr	r3, [fp, #-8]
    19a8:	ldr	r2, [r3, #536]	; 0x218
    19ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
    19b0:	add	r2, r2, r3
    19b4:	ldr	r3, [fp, #-8]
    19b8:	ldr	r3, [r3, #540]	; 0x21c
    19bc:	cmp	r2, r3
    19c0:	ble	1a4c <character_data_handler+0x13c>
    19c4:	ldr	r3, [fp, #-8]
    19c8:	ldr	r0, [r3, #544]	; 0x220
    19cc:	ldr	r3, [fp, #-8]
    19d0:	ldr	r2, [r3, #536]	; 0x218
    19d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    19d8:	add	r3, r2, r3
    19dc:	mov	r1, r3
    19e0:	bl	0 <realloc>
    19e4:	str	r0, [fp, #-12]
    19e8:	ldr	r3, [fp, #-12]
    19ec:	cmp	r3, #0
    19f0:	bne	1a28 <character_data_handler+0x118>
    19f4:	ldr	r3, [fp, #-8]
    19f8:	ldr	r2, [r3, #536]	; 0x218
    19fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a00:	add	r2, r2, r3
    1a04:	ldr	r3, [pc, #140]	; 1a98 <character_data_handler+0x188>
    1a08:	str	r3, [sp]
    1a0c:	ldr	r3, [pc, #136]	; 1a9c <character_data_handler+0x18c>
    1a10:	ldr	r1, [pc, #136]	; 1aa0 <character_data_handler+0x190>
    1a14:	mvn	r0, #0
    1a18:	bl	0 <coda_set_error>
    1a1c:	ldr	r0, [fp, #-8]
    1a20:	bl	95c <abort_parser>
    1a24:	b	1a88 <character_data_handler+0x178>
    1a28:	ldr	r3, [fp, #-8]
    1a2c:	ldr	r2, [fp, #-12]
    1a30:	str	r2, [r3, #544]	; 0x220
    1a34:	ldr	r3, [fp, #-8]
    1a38:	ldr	r2, [r3, #536]	; 0x218
    1a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a40:	add	r2, r2, r3
    1a44:	ldr	r3, [fp, #-8]
    1a48:	str	r2, [r3, #540]	; 0x21c
    1a4c:	ldr	r3, [fp, #-8]
    1a50:	ldr	r3, [r3, #544]	; 0x220
    1a54:	ldr	r2, [fp, #-8]
    1a58:	ldr	r2, [r2, #536]	; 0x218
    1a5c:	add	r3, r3, r2
    1a60:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a64:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a68:	mov	r0, r3
    1a6c:	bl	0 <memcpy>
    1a70:	ldr	r3, [fp, #-8]
    1a74:	ldr	r2, [r3, #536]	; 0x218
    1a78:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1a7c:	add	r2, r2, r3
    1a80:	ldr	r3, [fp, #-8]
    1a84:	str	r2, [r3, #536]	; 0x218
    1a88:	sub	sp, fp, #4
    1a8c:	pop	{fp, pc}
    1a90:	.word	0x000003a0
    1a94:	.word	0xfffffed4
    1a98:	.word	0x000002db
    1a9c:	.word	0x00000000
    1aa0:	.word	0x000003dc

00001aa4 <coda_xml_parse>:
    1aa4:	push	{r4, r5, r6, r7, fp, lr}
    1aa8:	add	fp, sp, #20
    1aac:	sub	sp, sp, #8768	; 0x2240
    1ab0:	sub	sp, sp, #56	; 0x38
    1ab4:	sub	r3, fp, #8192	; 0x2000
    1ab8:	sub	r3, r3, #20
    1abc:	str	r0, [r3, #-628]	; 0xfffffd8c
    1ac0:	sub	r3, fp, #8704	; 0x2200
    1ac4:	sub	r3, r3, #20
    1ac8:	sub	r3, r3, #60	; 0x3c
    1acc:	mov	r0, r3
    1ad0:	bl	8d0 <parser_info_init>
    1ad4:	mov	r1, #32
    1ad8:	mov	r0, #0
    1adc:	bl	0 <coda_XML_ParserCreateNS>
    1ae0:	mov	r2, r0
    1ae4:	sub	r3, fp, #8192	; 0x2000
    1ae8:	sub	r3, r3, #20
    1aec:	str	r2, [r3, #-572]	; 0xfffffdc4
    1af0:	sub	r3, fp, #8192	; 0x2000
    1af4:	sub	r3, r3, #20
    1af8:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1afc:	cmp	r3, #0
    1b00:	bne	1b18 <coda_xml_parse+0x74>
    1b04:	ldr	r1, [pc, #1788]	; 2208 <coda_xml_parse+0x764>
    1b08:	mvn	r0, #13
    1b0c:	bl	0 <coda_set_error>
    1b10:	mvn	r3, #0
    1b14:	b	21fc <coda_xml_parse+0x758>
    1b18:	sub	r3, fp, #8192	; 0x2000
    1b1c:	sub	r3, r3, #20
    1b20:	mov	r2, r3
    1b24:	sub	r3, fp, #8192	; 0x2000
    1b28:	sub	r3, r3, #20
    1b2c:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1b30:	str	r3, [r2, #-564]	; 0xfffffdcc
    1b34:	sub	r3, fp, #8192	; 0x2000
    1b38:	sub	r3, r3, #20
    1b3c:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1b40:	ldr	r3, [r3, #24]
    1b44:	cmp	r3, #0
    1b48:	beq	1b68 <coda_xml_parse+0xc4>
    1b4c:	sub	r3, fp, #8192	; 0x2000
    1b50:	sub	r3, r3, #20
    1b54:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1b58:	ldr	r3, [r3, #24]
    1b5c:	ldr	r3, [r3, #28]
    1b60:	cmp	r3, #0
    1b64:	bne	1b70 <coda_xml_parse+0xcc>
    1b68:	mov	r3, #1
    1b6c:	b	1b74 <coda_xml_parse+0xd0>
    1b70:	mov	r3, #0
    1b74:	sub	r2, fp, #8192	; 0x2000
    1b78:	sub	r2, r2, #20
    1b7c:	str	r3, [r2, #-40]	; 0xffffffd8
    1b80:	sub	r3, fp, #8192	; 0x2000
    1b84:	sub	r3, r3, #20
    1b88:	ldr	r3, [r3, #-40]	; 0xffffffd8
    1b8c:	cmp	r3, #0
    1b90:	beq	1bf0 <coda_xml_parse+0x14c>
    1b94:	mov	r0, #2
    1b98:	bl	0 <coda_type_record_new>
    1b9c:	str	r0, [fp, #-40]	; 0xffffffd8
    1ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1ba4:	cmp	r3, #0
    1ba8:	bne	1bc8 <coda_xml_parse+0x124>
    1bac:	sub	r3, fp, #8192	; 0x2000
    1bb0:	sub	r3, r3, #20
    1bb4:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1bb8:	mov	r0, r3
    1bbc:	bl	0 <coda_XML_ParserFree>
    1bc0:	mvn	r3, #0
    1bc4:	b	21fc <coda_xml_parse+0x758>
    1bc8:	mov	r1, #0
    1bcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1bd0:	bl	0 <coda_mem_record_new>
    1bd4:	mov	r2, r0
    1bd8:	sub	r3, fp, #8192	; 0x2000
    1bdc:	sub	r3, r3, #20
    1be0:	str	r2, [r3, #-428]	; 0xfffffe54
    1be4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1be8:	bl	0 <coda_type_release>
    1bec:	b	1c54 <coda_xml_parse+0x1b0>
    1bf0:	sub	r3, fp, #8192	; 0x2000
    1bf4:	sub	r3, r3, #20
    1bf8:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1bfc:	ldr	r3, [r3, #24]
    1c00:	ldr	r3, [r3, #28]
    1c04:	ldr	r3, [r3, #8]
    1c08:	cmp	r3, #0
    1c0c:	beq	1c24 <coda_xml_parse+0x180>
    1c10:	ldr	r3, [pc, #1524]	; 220c <coda_xml_parse+0x768>
    1c14:	ldr	r2, [pc, #1524]	; 2210 <coda_xml_parse+0x76c>
    1c18:	ldr	r1, [pc, #1524]	; 2214 <coda_xml_parse+0x770>
    1c1c:	ldr	r0, [pc, #1524]	; 2218 <coda_xml_parse+0x774>
    1c20:	bl	0 <__assert_fail>
    1c24:	sub	r3, fp, #8192	; 0x2000
    1c28:	sub	r3, r3, #20
    1c2c:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1c30:	ldr	r3, [r3, #24]
    1c34:	ldr	r3, [r3, #28]
    1c38:	mov	r1, #0
    1c3c:	mov	r0, r3
    1c40:	bl	0 <coda_mem_record_new>
    1c44:	mov	r2, r0
    1c48:	sub	r3, fp, #8192	; 0x2000
    1c4c:	sub	r3, r3, #20
    1c50:	str	r2, [r3, #-428]	; 0xfffffe54
    1c54:	sub	r3, fp, #8192	; 0x2000
    1c58:	sub	r3, r3, #20
    1c5c:	ldr	r3, [r3, #-428]	; 0xfffffe54
    1c60:	cmp	r3, #0
    1c64:	bne	1c84 <coda_xml_parse+0x1e0>
    1c68:	sub	r3, fp, #8704	; 0x2200
    1c6c:	sub	r3, r3, #20
    1c70:	sub	r3, r3, #60	; 0x3c
    1c74:	mov	r0, r3
    1c78:	bl	7f8 <parser_info_cleanup>
    1c7c:	mvn	r3, #0
    1c80:	b	21fc <coda_xml_parse+0x758>
    1c84:	sub	r3, fp, #8192	; 0x2000
    1c88:	sub	r3, r3, #20
    1c8c:	ldr	r3, [r3, #-428]	; 0xfffffe54
    1c90:	add	r3, r3, #4
    1c94:	sub	r2, fp, #8192	; 0x2000
    1c98:	sub	r2, r2, #20
    1c9c:	str	r3, [r2, #-556]	; 0xfffffdd4
    1ca0:	sub	r3, fp, #8192	; 0x2000
    1ca4:	sub	r3, r3, #20
    1ca8:	mov	r2, r3
    1cac:	mvn	r3, #0
    1cb0:	str	r3, [r2, #-300]	; 0xfffffed4
    1cb4:	sub	r3, fp, #8192	; 0x2000
    1cb8:	sub	r3, r3, #20
    1cbc:	mov	r2, r3
    1cc0:	mov	r3, #0
    1cc4:	str	r3, [r2, #-172]	; 0xffffff54
    1cc8:	sub	r3, fp, #8192	; 0x2000
    1ccc:	sub	r3, r3, #20
    1cd0:	mov	r2, r3
    1cd4:	mov	r3, #0
    1cd8:	str	r3, [r2, #-560]	; 0xfffffdd0
    1cdc:	sub	r3, fp, #8192	; 0x2000
    1ce0:	sub	r3, r3, #20
    1ce4:	ldr	r2, [r3, #-572]	; 0xfffffdc4
    1ce8:	sub	r3, fp, #8704	; 0x2200
    1cec:	sub	r3, r3, #20
    1cf0:	sub	r3, r3, #60	; 0x3c
    1cf4:	mov	r1, r3
    1cf8:	mov	r0, r2
    1cfc:	bl	0 <coda_XML_SetUserData>
    1d00:	sub	r3, fp, #8192	; 0x2000
    1d04:	sub	r3, r3, #20
    1d08:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1d0c:	mov	r1, #2
    1d10:	mov	r0, r3
    1d14:	bl	0 <coda_XML_SetParamEntityParsing>
    1d18:	sub	r3, fp, #8192	; 0x2000
    1d1c:	sub	r3, r3, #20
    1d20:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1d24:	ldr	r2, [pc, #1264]	; 221c <coda_xml_parse+0x778>
    1d28:	ldr	r1, [pc, #1264]	; 2220 <coda_xml_parse+0x77c>
    1d2c:	mov	r0, r3
    1d30:	bl	0 <coda_XML_SetElementHandler>
    1d34:	sub	r3, fp, #8192	; 0x2000
    1d38:	sub	r3, r3, #20
    1d3c:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1d40:	ldr	r1, [pc, #1244]	; 2224 <coda_xml_parse+0x780>
    1d44:	mov	r0, r3
    1d48:	bl	0 <coda_XML_SetCharacterDataHandler>
    1d4c:	sub	r3, fp, #8192	; 0x2000
    1d50:	sub	r3, r3, #20
    1d54:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    1d58:	ldr	r1, [pc, #1224]	; 2228 <coda_xml_parse+0x784>
    1d5c:	mov	r0, r3
    1d60:	bl	0 <coda_XML_SetNotStandaloneHandler>
    1d64:	sub	r3, fp, #8192	; 0x2000
    1d68:	sub	r3, r3, #20
    1d6c:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1d70:	ldr	r3, [r3, #52]	; 0x34
    1d74:	ldrd	r2, [r3, #8]
    1d78:	asr	r1, r3, #31
    1d7c:	mov	r0, r1
    1d80:	asr	r1, r0, #31
    1d84:	ldr	r6, [pc, #1184]	; 222c <coda_xml_parse+0x788>
    1d88:	mov	r7, #0
    1d8c:	and	r0, r0, r6
    1d90:	and	r1, r1, r7
    1d94:	adds	r2, r2, r0
    1d98:	adc	r3, r3, r1
    1d9c:	lsr	r4, r2, #13
    1da0:	orr	r4, r4, r3, lsl #19
    1da4:	asr	r5, r3, #13
    1da8:	mov	r2, r4
    1dac:	mov	r3, r5
    1db0:	mov	r3, r2
    1db4:	str	r3, [fp, #-24]	; 0xffffffe8
    1db8:	sub	r3, fp, #8192	; 0x2000
    1dbc:	sub	r3, r3, #20
    1dc0:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1dc4:	ldr	r3, [r3, #52]	; 0x34
    1dc8:	ldrd	r2, [r3, #8]
    1dcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1dd0:	lsl	r1, r1, #13
    1dd4:	mov	r0, r1
    1dd8:	asr	r1, r0, #31
    1ddc:	cmp	r0, r2
    1de0:	sbcs	r3, r1, r3
    1de4:	bge	1df4 <coda_xml_parse+0x350>
    1de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1dec:	add	r3, r3, #1
    1df0:	str	r3, [fp, #-24]	; 0xffffffe8
    1df4:	mov	r3, #0
    1df8:	str	r3, [fp, #-28]	; 0xffffffe4
    1dfc:	b	2114 <coda_xml_parse+0x670>
    1e00:	sub	r3, fp, #8192	; 0x2000
    1e04:	sub	r3, r3, #20
    1e08:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1e0c:	ldr	r3, [r3, #52]	; 0x34
    1e10:	ldr	r3, [r3, #52]	; 0x34
    1e14:	cmp	r3, #0
    1e18:	beq	1e8c <coda_xml_parse+0x3e8>
    1e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e20:	sub	r2, r3, #1
    1e24:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1e28:	cmp	r2, r3
    1e2c:	ble	1e3c <coda_xml_parse+0x398>
    1e30:	mov	r3, #8192	; 0x2000
    1e34:	str	r3, [fp, #-36]	; 0xffffffdc
    1e38:	b	1e64 <coda_xml_parse+0x3c0>
    1e3c:	sub	r3, fp, #8192	; 0x2000
    1e40:	sub	r3, r3, #20
    1e44:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1e48:	ldr	r3, [r3, #52]	; 0x34
    1e4c:	ldrd	r2, [r3, #8]
    1e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1e54:	sub	r3, r3, #1
    1e58:	lsl	r3, r3, #13
    1e5c:	sub	r3, r2, r3
    1e60:	str	r3, [fp, #-36]	; 0xffffffdc
    1e64:	sub	r3, fp, #8192	; 0x2000
    1e68:	sub	r3, r3, #20
    1e6c:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1e70:	ldr	r3, [r3, #52]	; 0x34
    1e74:	ldr	r3, [r3, #48]	; 0x30
    1e78:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1e7c:	lsl	r2, r2, #13
    1e80:	add	r3, r3, r2
    1e84:	str	r3, [fp, #-32]	; 0xffffffe0
    1e88:	b	1fc0 <coda_xml_parse+0x51c>
    1e8c:	sub	r3, fp, #8192	; 0x2000
    1e90:	sub	r3, r3, #20
    1e94:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1e98:	ldr	r3, [r3, #52]	; 0x34
    1e9c:	ldr	r0, [r3, #56]	; 0x38
    1ea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ea4:	lsl	r3, r3, #13
    1ea8:	mov	r2, #0
    1eac:	mov	r1, r3
    1eb0:	bl	0 <lseek>
    1eb4:	mov	r3, r0
    1eb8:	cmp	r3, #0
    1ebc:	bge	1f30 <coda_xml_parse+0x48c>
    1ec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ec4:	lsl	r3, r3, #13
    1ec8:	mov	r0, r3
    1ecc:	asr	r1, r0, #31
    1ed0:	sub	r3, fp, #8768	; 0x2240
    1ed4:	sub	r3, r3, #20
    1ed8:	sub	r3, r3, #20
    1edc:	mov	r2, r3
    1ee0:	bl	0 <coda_str64>
    1ee4:	bl	0 <__errno_location>
    1ee8:	mov	r3, r0
    1eec:	ldr	r3, [r3]
    1ef0:	mov	r0, r3
    1ef4:	bl	0 <strerror>
    1ef8:	mov	r3, r0
    1efc:	sub	r2, fp, #8768	; 0x2240
    1f00:	sub	r2, r2, #20
    1f04:	sub	r2, r2, #20
    1f08:	ldr	r1, [pc, #800]	; 2230 <coda_xml_parse+0x78c>
    1f0c:	mvn	r0, #21
    1f10:	bl	0 <coda_set_error>
    1f14:	sub	r3, fp, #8704	; 0x2200
    1f18:	sub	r3, r3, #20
    1f1c:	sub	r3, r3, #60	; 0x3c
    1f20:	mov	r0, r3
    1f24:	bl	7f8 <parser_info_cleanup>
    1f28:	mvn	r3, #0
    1f2c:	b	21fc <coda_xml_parse+0x758>
    1f30:	sub	r3, fp, #8192	; 0x2000
    1f34:	sub	r3, r3, #20
    1f38:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    1f3c:	ldr	r3, [r3, #52]	; 0x34
    1f40:	ldr	r0, [r3, #56]	; 0x38
    1f44:	sub	r3, fp, #8192	; 0x2000
    1f48:	sub	r3, r3, #20
    1f4c:	sub	r3, r3, #24
    1f50:	mov	r2, #8192	; 0x2000
    1f54:	mov	r1, r3
    1f58:	bl	0 <read>
    1f5c:	str	r0, [fp, #-36]	; 0xffffffdc
    1f60:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1f64:	cmp	r3, #0
    1f68:	bge	1fb0 <coda_xml_parse+0x50c>
    1f6c:	bl	0 <__errno_location>
    1f70:	mov	r3, r0
    1f74:	ldr	r3, [r3]
    1f78:	mov	r0, r3
    1f7c:	bl	0 <strerror>
    1f80:	mov	r3, r0
    1f84:	mov	r2, r3
    1f88:	ldr	r1, [pc, #676]	; 2234 <coda_xml_parse+0x790>
    1f8c:	mvn	r0, #21
    1f90:	bl	0 <coda_set_error>
    1f94:	sub	r3, fp, #8704	; 0x2200
    1f98:	sub	r3, r3, #20
    1f9c:	sub	r3, r3, #60	; 0x3c
    1fa0:	mov	r0, r3
    1fa4:	bl	7f8 <parser_info_cleanup>
    1fa8:	mvn	r3, #0
    1fac:	b	21fc <coda_xml_parse+0x758>
    1fb0:	sub	r3, fp, #8192	; 0x2000
    1fb4:	sub	r3, r3, #20
    1fb8:	sub	r3, r3, #24
    1fbc:	str	r3, [fp, #-32]	; 0xffffffe0
    1fc0:	ldr	r3, [pc, #624]	; 2238 <coda_xml_parse+0x794>
    1fc4:	ldr	r3, [pc, r3]
    1fc8:	bl	0 <__aeabi_read_tp>
    1fcc:	mov	r1, r0
    1fd0:	mov	r2, #0
    1fd4:	str	r2, [r1, r3]
    1fd8:	sub	r3, fp, #8192	; 0x2000
    1fdc:	sub	r3, r3, #20
    1fe0:	ldr	r0, [r3, #-572]	; 0xfffffdc4
    1fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1fe8:	sub	r2, r3, #1
    1fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1ff0:	cmp	r2, r3
    1ff4:	moveq	r3, #1
    1ff8:	movne	r3, #0
    1ffc:	uxtb	r3, r3
    2000:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2004:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2008:	bl	0 <coda_XML_Parse>
    200c:	mov	r3, r0
    2010:	str	r3, [fp, #-44]	; 0xffffffd4
    2014:	ldr	r3, [fp, #-44]	; 0xffffffd4
    2018:	cmp	r3, #0
    201c:	beq	203c <coda_xml_parse+0x598>
    2020:	ldr	r3, [pc, #532]	; 223c <coda_xml_parse+0x798>
    2024:	ldr	r3, [pc, r3]
    2028:	bl	0 <__aeabi_read_tp>
    202c:	mov	r2, r0
    2030:	ldr	r3, [r2, r3]
    2034:	cmp	r3, #0
    2038:	beq	2108 <coda_xml_parse+0x664>
    203c:	ldr	r3, [pc, #508]	; 2240 <coda_xml_parse+0x79c>
    2040:	ldr	r3, [pc, r3]
    2044:	bl	0 <__aeabi_read_tp>
    2048:	mov	r2, r0
    204c:	ldr	r3, [r2, r3]
    2050:	cmp	r3, #0
    2054:	bne	208c <coda_xml_parse+0x5e8>
    2058:	sub	r3, fp, #8192	; 0x2000
    205c:	sub	r3, r3, #20
    2060:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    2064:	mov	r0, r3
    2068:	bl	0 <coda_XML_GetErrorCode>
    206c:	mov	r3, r0
    2070:	mov	r0, r3
    2074:	bl	0 <coda_XML_ErrorString>
    2078:	mov	r3, r0
    207c:	mov	r2, r3
    2080:	ldr	r1, [pc, #444]	; 2244 <coda_xml_parse+0x7a0>
    2084:	mvn	r0, #13
    2088:	bl	0 <coda_set_error>
    208c:	sub	r3, fp, #8192	; 0x2000
    2090:	sub	r3, r3, #20
    2094:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    2098:	mov	r0, r3
    209c:	bl	0 <coda_XML_GetCurrentByteIndex>
    20a0:	sub	r3, fp, #8768	; 0x2240
    20a4:	sub	r3, r3, #20
    20a8:	sub	r3, r3, #44	; 0x2c
    20ac:	mov	r2, r3
    20b0:	bl	0 <coda_str64>
    20b4:	sub	r3, fp, #8192	; 0x2000
    20b8:	sub	r3, r3, #20
    20bc:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    20c0:	mov	r0, r3
    20c4:	bl	0 <coda_XML_GetCurrentLineNumber>
    20c8:	mov	r2, r0
    20cc:	mov	r3, r1
    20d0:	mov	r1, r2
    20d4:	sub	r3, fp, #8768	; 0x2240
    20d8:	sub	r3, r3, #20
    20dc:	sub	r3, r3, #44	; 0x2c
    20e0:	mov	r2, r3
    20e4:	ldr	r0, [pc, #348]	; 2248 <coda_xml_parse+0x7a4>
    20e8:	bl	0 <coda_add_error_message>
    20ec:	sub	r3, fp, #8704	; 0x2200
    20f0:	sub	r3, r3, #20
    20f4:	sub	r3, r3, #60	; 0x3c
    20f8:	mov	r0, r3
    20fc:	bl	7f8 <parser_info_cleanup>
    2100:	mvn	r3, #0
    2104:	b	21fc <coda_xml_parse+0x758>
    2108:	ldr	r3, [fp, #-28]	; 0xffffffe4
    210c:	add	r3, r3, #1
    2110:	str	r3, [fp, #-28]	; 0xffffffe4
    2114:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2118:	ldr	r3, [fp, #-24]	; 0xffffffe8
    211c:	cmp	r2, r3
    2120:	blt	1e00 <coda_xml_parse+0x35c>
    2124:	sub	r3, fp, #8192	; 0x2000
    2128:	sub	r3, r3, #20
    212c:	ldr	r3, [r3, #-572]	; 0xfffffdc4
    2130:	mov	r0, r3
    2134:	bl	0 <coda_XML_ParserFree>
    2138:	sub	r3, fp, #8192	; 0x2000
    213c:	sub	r3, r3, #20
    2140:	mov	r2, r3
    2144:	mov	r3, #0
    2148:	str	r3, [r2, #-572]	; 0xfffffdc4
    214c:	sub	r3, fp, #8192	; 0x2000
    2150:	sub	r3, r3, #20
    2154:	ldr	r3, [r3, #-40]	; 0xffffffd8
    2158:	cmp	r3, #0
    215c:	beq	21b4 <coda_xml_parse+0x710>
    2160:	sub	r3, fp, #8192	; 0x2000
    2164:	sub	r3, r3, #20
    2168:	ldr	r3, [r3, #-428]	; 0xfffffe54
    216c:	ldr	r2, [r3, #4]
    2170:	sub	r3, fp, #8704	; 0x2200
    2174:	sub	r3, r3, #20
    2178:	sub	r3, r3, #60	; 0x3c
    217c:	add	r3, r3, #144	; 0x90
    2180:	mov	r1, r2
    2184:	mov	r0, r3
    2188:	bl	0 <coda_mem_type_update>
    218c:	mov	r3, r0
    2190:	cmp	r3, #0
    2194:	beq	21b4 <coda_xml_parse+0x710>
    2198:	sub	r3, fp, #8704	; 0x2200
    219c:	sub	r3, r3, #20
    21a0:	sub	r3, r3, #60	; 0x3c
    21a4:	mov	r0, r3
    21a8:	bl	7f8 <parser_info_cleanup>
    21ac:	mvn	r3, #0
    21b0:	b	21fc <coda_xml_parse+0x758>
    21b4:	sub	r3, fp, #8192	; 0x2000
    21b8:	sub	r3, r3, #20
    21bc:	ldr	r2, [r3, #-428]	; 0xfffffe54
    21c0:	sub	r3, fp, #8192	; 0x2000
    21c4:	sub	r3, r3, #20
    21c8:	ldr	r3, [r3, #-628]	; 0xfffffd8c
    21cc:	str	r2, [r3, #20]
    21d0:	sub	r3, fp, #8192	; 0x2000
    21d4:	sub	r3, r3, #20
    21d8:	mov	r2, r3
    21dc:	mvn	r3, #0
    21e0:	str	r3, [r2, #-560]	; 0xfffffdd0
    21e4:	sub	r3, fp, #8704	; 0x2200
    21e8:	sub	r3, r3, #20
    21ec:	sub	r3, r3, #60	; 0x3c
    21f0:	mov	r0, r3
    21f4:	bl	7f8 <parser_info_cleanup>
    21f8:	mov	r3, #0
    21fc:	mov	r0, r3
    2200:	sub	sp, fp, #20
    2204:	pop	{r4, r5, r6, r7, fp, pc}
    2208:	.word	0x00000414
    220c:	.word	0x00000558
    2210:	.word	0x00000306
    2214:	.word	0x00000000
    2218:	.word	0x00000430
	...
    222c:	.word	0x00001fff
    2230:	.word	0x00000478
    2234:	.word	0x000004a0
    2238:	.word	0x0000026c
    223c:	.word	0x00000210
    2240:	.word	0x000001f8
    2244:	.word	0x000004c0
    2248:	.word	0x000004d4
