
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-grib.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #96	; 0x60
       c:	str	r0, [fp, #-80]	; 0xffffffb0
      10:	strd	r2, [fp, #-92]	; 0xffffffa4
      14:	ldr	r3, [fp, #-80]	; 0xffffffb0
      18:	ldr	r3, [r3, #48]	; 0x30
      1c:	cmp	r3, #0
      20:	beq	fc <read_bytes+0xfc>
      24:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      28:	ldrd	r2, [fp, #4]
      2c:	adds	r2, r2, r0
      30:	adc	r3, r3, r1
      34:	ldr	r1, [fp, #-80]	; 0xffffffb0
      38:	ldrd	r0, [r1, #40]	; 0x28
      3c:	cmp	r3, r1
      40:	cmpeq	r2, r0
      44:	bls	d8 <read_bytes+0xd8>
      48:	ldr	r3, [fp, #-80]	; 0xffffffb0
      4c:	ldr	r3, [r3, #16]
      50:	cmp	r3, #0
      54:	beq	68 <read_bytes+0x68>
      58:	ldr	r3, [fp, #-80]	; 0xffffffb0
      5c:	ldr	r3, [r3, #16]
      60:	cmp	r3, #1
      64:	bne	7c <read_bytes+0x7c>
      68:	ldr	r1, [pc, #348]	; 1cc <read_bytes+0x1cc>
      6c:	mvn	r0, #300	; 0x12c
      70:	bl	0 <coda_set_error>
      74:	mvn	r3, #0
      78:	b	1c0 <read_bytes+0x1c0>
      7c:	sub	r3, fp, #28
      80:	mov	r2, r3
      84:	ldrd	r0, [fp, #4]
      88:	bl	0 <coda_str64>
      8c:	sub	r3, fp, #52	; 0x34
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #-92]	; 0xffffffa4
      98:	bl	0 <coda_str64>
      9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
      a0:	ldrd	r0, [r3, #40]	; 0x28
      a4:	sub	r3, fp, #76	; 0x4c
      a8:	mov	r2, r3
      ac:	bl	0 <coda_str64>
      b0:	sub	r1, fp, #52	; 0x34
      b4:	sub	r2, fp, #28
      b8:	sub	r3, fp, #76	; 0x4c
      bc:	str	r3, [sp]
      c0:	mov	r3, r1
      c4:	ldr	r1, [pc, #260]	; 1d0 <read_bytes+0x1d0>
      c8:	mvn	r0, #300	; 0x12c
      cc:	bl	0 <coda_set_error>
      d0:	mvn	r3, #0
      d4:	b	1c0 <read_bytes+0x1c0>
      d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
      dc:	ldr	r2, [r3, #48]	; 0x30
      e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
      e4:	add	r3, r2, r3
      e8:	ldr	r2, [fp, #4]
      ec:	mov	r1, r3
      f0:	ldr	r0, [fp, #12]
      f4:	bl	0 <memcpy>
      f8:	b	1bc <read_bytes+0x1bc>
      fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
     100:	ldr	r3, [r3, #16]
     104:	cmp	r3, #0
     108:	beq	130 <read_bytes+0x130>
     10c:	ldr	r3, [fp, #-80]	; 0xffffffb0
     110:	ldr	r3, [r3, #16]
     114:	cmp	r3, #1
     118:	beq	130 <read_bytes+0x130>
     11c:	ldr	r3, [pc, #176]	; 1d4 <read_bytes+0x1d4>
     120:	mov	r2, #83	; 0x53
     124:	ldr	r1, [pc, #172]	; 1d8 <read_bytes+0x1d8>
     128:	ldr	r0, [pc, #172]	; 1dc <read_bytes+0x1dc>
     12c:	bl	0 <__assert_fail>
     130:	ldrd	r0, [fp, #-92]	; 0xffffffa4
     134:	ldrd	r2, [fp, #4]
     138:	adds	r2, r2, r0
     13c:	adc	r3, r3, r1
     140:	ldr	r1, [fp, #-80]	; 0xffffffb0
     144:	ldrd	r0, [r1, #8]
     148:	cmp	r3, r1
     14c:	cmpeq	r2, r0
     150:	bls	168 <read_bytes+0x168>
     154:	ldr	r1, [pc, #112]	; 1cc <read_bytes+0x1cc>
     158:	mvn	r0, #300	; 0x12c
     15c:	bl	0 <coda_set_error>
     160:	mvn	r3, #0
     164:	b	1c0 <read_bytes+0x1c0>
     168:	ldr	r3, [fp, #-80]	; 0xffffffb0
     16c:	ldr	r0, [r3, #56]	; 0x38
     170:	ldr	r2, [fp, #4]
     174:	ldr	r3, [fp, #-92]	; 0xffffffa4
     178:	ldr	r1, [fp, #12]
     17c:	bl	0 <pread>
     180:	mov	r3, r0
     184:	cmp	r3, #0
     188:	bge	1bc <read_bytes+0x1bc>
     18c:	bl	0 <__errno_location>
     190:	mov	r3, r0
     194:	ldr	r3, [r3]
     198:	mov	r0, r3
     19c:	bl	0 <strerror>
     1a0:	mov	r3, r0
     1a4:	mov	r2, r3
     1a8:	ldr	r1, [pc, #48]	; 1e0 <read_bytes+0x1e0>
     1ac:	mvn	r0, #21
     1b0:	bl	0 <coda_set_error>
     1b4:	mvn	r3, #0
     1b8:	b	1c0 <read_bytes+0x1c0>
     1bc:	mov	r3, #0
     1c0:	mov	r0, r3
     1c4:	sub	sp, fp, #4
     1c8:	pop	{fp, pc}
     1cc:	.word	0x00000000
     1d0:	.word	0x0000002c
     1d4:	.word	0x00001b98
     1d8:	.word	0x00000068
     1dc:	.word	0x000000b8
     1e0:	.word	0x00000108

000001e4 <read_bytes_in_bounds>:
     1e4:	push	{fp, lr}
     1e8:	add	fp, sp, #4
     1ec:	sub	sp, sp, #16
     1f0:	str	r0, [fp, #-8]
     1f4:	strd	r2, [fp, #-20]	; 0xffffffec
     1f8:	ldr	r3, [fp, #-8]
     1fc:	ldr	r3, [r3, #48]	; 0x30
     200:	cmp	r3, #0
     204:	beq	22c <read_bytes_in_bounds+0x48>
     208:	ldr	r3, [fp, #-8]
     20c:	ldr	r2, [r3, #48]	; 0x30
     210:	ldr	r3, [fp, #-20]	; 0xffffffec
     214:	add	r3, r2, r3
     218:	ldr	r2, [fp, #4]
     21c:	mov	r1, r3
     220:	ldr	r0, [fp, #12]
     224:	bl	0 <memcpy>
     228:	b	2b4 <read_bytes_in_bounds+0xd0>
     22c:	ldr	r3, [fp, #-8]
     230:	ldr	r3, [r3, #16]
     234:	cmp	r3, #0
     238:	beq	260 <read_bytes_in_bounds+0x7c>
     23c:	ldr	r3, [fp, #-8]
     240:	ldr	r3, [r3, #16]
     244:	cmp	r3, #1
     248:	beq	260 <read_bytes_in_bounds+0x7c>
     24c:	ldr	r3, [pc, #112]	; 2c4 <read_bytes_in_bounds+0xe0>
     250:	mov	r2, #62	; 0x3e
     254:	ldr	r1, [pc, #108]	; 2c8 <read_bytes_in_bounds+0xe4>
     258:	ldr	r0, [pc, #108]	; 2cc <read_bytes_in_bounds+0xe8>
     25c:	bl	0 <__assert_fail>
     260:	ldr	r3, [fp, #-8]
     264:	ldr	r0, [r3, #56]	; 0x38
     268:	ldr	r2, [fp, #4]
     26c:	ldr	r3, [fp, #-20]	; 0xffffffec
     270:	ldr	r1, [fp, #12]
     274:	bl	0 <pread>
     278:	mov	r3, r0
     27c:	cmp	r3, #0
     280:	bge	2b4 <read_bytes_in_bounds+0xd0>
     284:	bl	0 <__errno_location>
     288:	mov	r3, r0
     28c:	ldr	r3, [r3]
     290:	mov	r0, r3
     294:	bl	0 <strerror>
     298:	mov	r3, r0
     29c:	mov	r2, r3
     2a0:	ldr	r1, [pc, #40]	; 2d0 <read_bytes_in_bounds+0xec>
     2a4:	mvn	r0, #21
     2a8:	bl	0 <coda_set_error>
     2ac:	mvn	r3, #0
     2b0:	b	2b8 <read_bytes_in_bounds+0xd4>
     2b4:	mov	r3, #0
     2b8:	mov	r0, r3
     2bc:	sub	sp, fp, #4
     2c0:	pop	{fp, pc}
     2c4:	.word	0x00001ba4
     2c8:	.word	0x00000128
     2cc:	.word	0x000000b8
     2d0:	.word	0x00000108

000002d4 <swap4>:
     2d4:	push	{fp}		; (str fp, [sp, #-4]!)
     2d8:	add	fp, sp, #0
     2dc:	sub	sp, sp, #20
     2e0:	str	r0, [fp, #-16]
     2e4:	ldr	r3, [fp, #-16]
     2e8:	str	r3, [fp, #-8]
     2ec:	ldr	r3, [fp, #-8]
     2f0:	ldrb	r2, [r3]
     2f4:	ldr	r3, [fp, #-8]
     2f8:	add	r3, r3, #3
     2fc:	ldrb	r3, [r3]
     300:	eor	r3, r3, r2
     304:	uxtb	r2, r3
     308:	ldr	r3, [fp, #-8]
     30c:	strb	r2, [r3]
     310:	ldr	r3, [fp, #-8]
     314:	add	r3, r3, #3
     318:	ldr	r2, [fp, #-8]
     31c:	ldrb	r1, [r2]
     320:	ldr	r2, [fp, #-8]
     324:	add	r2, r2, #3
     328:	ldrb	r2, [r2]
     32c:	eor	r2, r2, r1
     330:	uxtb	r2, r2
     334:	strb	r2, [r3]
     338:	ldr	r3, [fp, #-8]
     33c:	ldrb	r2, [r3]
     340:	ldr	r3, [fp, #-8]
     344:	add	r3, r3, #3
     348:	ldrb	r3, [r3]
     34c:	eor	r3, r3, r2
     350:	uxtb	r2, r3
     354:	ldr	r3, [fp, #-8]
     358:	strb	r2, [r3]
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #1
     364:	ldr	r2, [fp, #-8]
     368:	add	r2, r2, #1
     36c:	ldrb	r1, [r2]
     370:	ldr	r2, [fp, #-8]
     374:	add	r2, r2, #2
     378:	ldrb	r2, [r2]
     37c:	eor	r2, r2, r1
     380:	uxtb	r2, r2
     384:	strb	r2, [r3]
     388:	ldr	r3, [fp, #-8]
     38c:	add	r3, r3, #2
     390:	ldr	r2, [fp, #-8]
     394:	add	r2, r2, #1
     398:	ldrb	r1, [r2]
     39c:	ldr	r2, [fp, #-8]
     3a0:	add	r2, r2, #2
     3a4:	ldrb	r2, [r2]
     3a8:	eor	r2, r2, r1
     3ac:	uxtb	r2, r2
     3b0:	strb	r2, [r3]
     3b4:	ldr	r3, [fp, #-8]
     3b8:	add	r3, r3, #1
     3bc:	ldr	r2, [fp, #-8]
     3c0:	add	r2, r2, #1
     3c4:	ldrb	r1, [r2]
     3c8:	ldr	r2, [fp, #-8]
     3cc:	add	r2, r2, #2
     3d0:	ldrb	r2, [r2]
     3d4:	eor	r2, r2, r1
     3d8:	uxtb	r2, r2
     3dc:	strb	r2, [r3]
     3e0:	nop			; (mov r0, r0)
     3e4:	add	sp, fp, #0
     3e8:	pop	{fp}		; (ldr fp, [sp], #4)
     3ec:	bx	lr

000003f0 <swap8>:
     3f0:	push	{fp}		; (str fp, [sp, #-4]!)
     3f4:	add	fp, sp, #0
     3f8:	sub	sp, sp, #20
     3fc:	str	r0, [fp, #-16]
     400:	ldr	r3, [fp, #-16]
     404:	str	r3, [fp, #-8]
     408:	ldr	r3, [fp, #-8]
     40c:	ldrb	r2, [r3]
     410:	ldr	r3, [fp, #-8]
     414:	add	r3, r3, #7
     418:	ldrb	r3, [r3]
     41c:	eor	r3, r3, r2
     420:	uxtb	r2, r3
     424:	ldr	r3, [fp, #-8]
     428:	strb	r2, [r3]
     42c:	ldr	r3, [fp, #-8]
     430:	add	r3, r3, #7
     434:	ldr	r2, [fp, #-8]
     438:	ldrb	r1, [r2]
     43c:	ldr	r2, [fp, #-8]
     440:	add	r2, r2, #7
     444:	ldrb	r2, [r2]
     448:	eor	r2, r2, r1
     44c:	uxtb	r2, r2
     450:	strb	r2, [r3]
     454:	ldr	r3, [fp, #-8]
     458:	ldrb	r2, [r3]
     45c:	ldr	r3, [fp, #-8]
     460:	add	r3, r3, #7
     464:	ldrb	r3, [r3]
     468:	eor	r3, r3, r2
     46c:	uxtb	r2, r3
     470:	ldr	r3, [fp, #-8]
     474:	strb	r2, [r3]
     478:	ldr	r3, [fp, #-8]
     47c:	add	r3, r3, #1
     480:	ldr	r2, [fp, #-8]
     484:	add	r2, r2, #1
     488:	ldrb	r1, [r2]
     48c:	ldr	r2, [fp, #-8]
     490:	add	r2, r2, #6
     494:	ldrb	r2, [r2]
     498:	eor	r2, r2, r1
     49c:	uxtb	r2, r2
     4a0:	strb	r2, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #6
     4ac:	ldr	r2, [fp, #-8]
     4b0:	add	r2, r2, #1
     4b4:	ldrb	r1, [r2]
     4b8:	ldr	r2, [fp, #-8]
     4bc:	add	r2, r2, #6
     4c0:	ldrb	r2, [r2]
     4c4:	eor	r2, r2, r1
     4c8:	uxtb	r2, r2
     4cc:	strb	r2, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #1
     4d8:	ldr	r2, [fp, #-8]
     4dc:	add	r2, r2, #1
     4e0:	ldrb	r1, [r2]
     4e4:	ldr	r2, [fp, #-8]
     4e8:	add	r2, r2, #6
     4ec:	ldrb	r2, [r2]
     4f0:	eor	r2, r2, r1
     4f4:	uxtb	r2, r2
     4f8:	strb	r2, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #2
     504:	ldr	r2, [fp, #-8]
     508:	add	r2, r2, #2
     50c:	ldrb	r1, [r2]
     510:	ldr	r2, [fp, #-8]
     514:	add	r2, r2, #5
     518:	ldrb	r2, [r2]
     51c:	eor	r2, r2, r1
     520:	uxtb	r2, r2
     524:	strb	r2, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #5
     530:	ldr	r2, [fp, #-8]
     534:	add	r2, r2, #2
     538:	ldrb	r1, [r2]
     53c:	ldr	r2, [fp, #-8]
     540:	add	r2, r2, #5
     544:	ldrb	r2, [r2]
     548:	eor	r2, r2, r1
     54c:	uxtb	r2, r2
     550:	strb	r2, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #2
     55c:	ldr	r2, [fp, #-8]
     560:	add	r2, r2, #2
     564:	ldrb	r1, [r2]
     568:	ldr	r2, [fp, #-8]
     56c:	add	r2, r2, #5
     570:	ldrb	r2, [r2]
     574:	eor	r2, r2, r1
     578:	uxtb	r2, r2
     57c:	strb	r2, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #3
     588:	ldr	r2, [fp, #-8]
     58c:	add	r2, r2, #3
     590:	ldrb	r1, [r2]
     594:	ldr	r2, [fp, #-8]
     598:	add	r2, r2, #4
     59c:	ldrb	r2, [r2]
     5a0:	eor	r2, r2, r1
     5a4:	uxtb	r2, r2
     5a8:	strb	r2, [r3]
     5ac:	ldr	r3, [fp, #-8]
     5b0:	add	r3, r3, #4
     5b4:	ldr	r2, [fp, #-8]
     5b8:	add	r2, r2, #3
     5bc:	ldrb	r1, [r2]
     5c0:	ldr	r2, [fp, #-8]
     5c4:	add	r2, r2, #4
     5c8:	ldrb	r2, [r2]
     5cc:	eor	r2, r2, r1
     5d0:	uxtb	r2, r2
     5d4:	strb	r2, [r3]
     5d8:	ldr	r3, [fp, #-8]
     5dc:	add	r3, r3, #3
     5e0:	ldr	r2, [fp, #-8]
     5e4:	add	r2, r2, #3
     5e8:	ldrb	r1, [r2]
     5ec:	ldr	r2, [fp, #-8]
     5f0:	add	r2, r2, #4
     5f4:	ldrb	r2, [r2]
     5f8:	eor	r2, r2, r1
     5fc:	uxtb	r2, r2
     600:	strb	r2, [r3]
     604:	nop			; (mov r0, r0)
     608:	add	sp, fp, #0
     60c:	pop	{fp}		; (ldr fp, [sp], #4)
     610:	bx	lr

00000614 <grib_init>:
     614:	push	{r4, fp, lr}
     618:	add	fp, sp, #8
     61c:	sub	sp, sp, #28
     620:	bl	0 <__aeabi_read_tp>
     624:	mov	r2, r0
     628:	ldr	r3, [pc, #208]	; 700 <grib_init+0xec>
     62c:	ldr	r3, [r2, r3]
     630:	cmp	r3, #0
     634:	beq	640 <grib_init+0x2c>
     638:	mov	r3, #0
     63c:	b	8e24 <grib_init+0x8810>
     640:	mov	r3, #1
     644:	str	r3, [fp, #-20]	; 0xffffffec
     648:	mov	r0, #572	; 0x23c
     64c:	bl	0 <malloc>
     650:	mov	r3, r0
     654:	mov	r1, r3
     658:	bl	0 <__aeabi_read_tp>
     65c:	mov	r2, r0
     660:	ldr	r3, [pc, #152]	; 700 <grib_init+0xec>
     664:	str	r1, [r2, r3]
     668:	bl	0 <__aeabi_read_tp>
     66c:	mov	r2, r0
     670:	ldr	r3, [pc, #136]	; 700 <grib_init+0xec>
     674:	ldr	r3, [r2, r3]
     678:	cmp	r3, #0
     67c:	bne	6a4 <grib_init+0x90>
     680:	mov	r3, #227	; 0xe3
     684:	str	r3, [sp]
     688:	ldr	r3, [pc, #32]	; 6b0 <grib_init+0x9c>
     68c:	mov	r2, #572	; 0x23c
     690:	ldr	r1, [pc, #28]	; 6b4 <grib_init+0xa0>
     694:	mvn	r0, #0
     698:	bl	0 <coda_set_error>
     69c:	mvn	r3, #0
     6a0:	b	8e24 <grib_init+0x8810>
     6a4:	mov	r3, #0
     6a8:	str	r3, [fp, #-16]
     6ac:	b	734 <grib_init+0x120>
     6b0:	.word	0x00000180
     6b4:	.word	0x000001c8
     6b8:	.word	0x00000200
     6bc:	.word	0x00000290
     6c0:	.word	0x000002a4
     6c4:	.word	0x000002c0
     6c8:	.word	0x000002e0
     6cc:	.word	0x000002f4
     6d0:	.word	0x00000318
     6d4:	.word	0x0000033c
     6d8:	.word	0x0000036c
     6dc:	.word	0x0000037c
     6e0:	.word	0x00000384
     6e4:	.word	0x00000394
     6e8:	.word	0x000003a4
     6ec:	.word	0x000003b0
     6f0:	.word	0x000003c0
     6f4:	.word	0x000003d4
     6f8:	.word	0x000003e8
     6fc:	.word	0x00000410
     700:	.word	0x00000000
     704:	bl	0 <__aeabi_read_tp>
     708:	mov	r2, r0
     70c:	ldr	r3, [pc, #-20]	; 700 <grib_init+0xec>
     710:	ldr	r2, [r2, r3]
     714:	ldr	r3, [fp, #-16]
     718:	lsl	r3, r3, #2
     71c:	add	r3, r2, r3
     720:	mov	r2, #0
     724:	str	r2, [r3]
     728:	ldr	r3, [fp, #-16]
     72c:	add	r3, r3, #1
     730:	str	r3, [fp, #-16]
     734:	ldr	r3, [fp, #-16]
     738:	cmp	r3, #142	; 0x8e
     73c:	ble	704 <grib_init+0xf0>
     740:	bl	0 <__aeabi_read_tp>
     744:	mov	r2, r0
     748:	ldr	r3, [pc, #-80]	; 700 <grib_init+0xec>
     74c:	ldr	r4, [r2, r3]
     750:	mov	r1, #2
     754:	mov	r0, #7
     758:	bl	0 <coda_type_number_new>
     75c:	mov	r3, r0
     760:	str	r3, [r4]
     764:	bl	0 <__aeabi_read_tp>
     768:	mov	r2, r0
     76c:	ldr	r3, [pc, #-116]	; 700 <grib_init+0xec>
     770:	ldr	r3, [r2, r3]
     774:	ldr	r3, [r3]
     778:	ldr	r1, [fp, #-20]	; 0xffffffec
     77c:	mov	r0, r3
     780:	bl	0 <coda_type_number_set_endianness>
     784:	bl	0 <__aeabi_read_tp>
     788:	mov	r2, r0
     78c:	ldr	r3, [pc, #-148]	; 700 <grib_init+0xec>
     790:	ldr	r3, [r2, r3]
     794:	ldr	r3, [r3]
     798:	mov	r1, #4
     79c:	mov	r0, r3
     7a0:	bl	0 <coda_type_set_read_type>
     7a4:	bl	0 <__aeabi_read_tp>
     7a8:	mov	r2, r0
     7ac:	ldr	r3, [pc, #-180]	; 700 <grib_init+0xec>
     7b0:	ldr	r3, [r2, r3]
     7b4:	ldr	r1, [r3]
     7b8:	mov	r2, #32
     7bc:	mov	r3, #0
     7c0:	mov	r0, r1
     7c4:	bl	0 <coda_type_set_bit_size>
     7c8:	bl	0 <__aeabi_read_tp>
     7cc:	mov	r2, r0
     7d0:	ldr	r3, [pc, #-216]	; 700 <grib_init+0xec>
     7d4:	ldr	r3, [r2, r3]
     7d8:	add	r4, r3, #4
     7dc:	mov	r1, #2
     7e0:	mov	r0, #7
     7e4:	bl	0 <coda_type_number_new>
     7e8:	mov	r3, r0
     7ec:	str	r3, [r4]
     7f0:	bl	0 <__aeabi_read_tp>
     7f4:	mov	r2, r0
     7f8:	ldr	r3, [pc, #-256]	; 700 <grib_init+0xec>
     7fc:	ldr	r3, [r2, r3]
     800:	add	r3, r3, #4
     804:	ldr	r3, [r3]
     808:	ldr	r1, [fp, #-20]	; 0xffffffec
     80c:	mov	r0, r3
     810:	bl	0 <coda_type_number_set_endianness>
     814:	bl	0 <__aeabi_read_tp>
     818:	mov	r2, r0
     81c:	ldr	r3, [pc, #-292]	; 700 <grib_init+0xec>
     820:	ldr	r3, [r2, r3]
     824:	add	r3, r3, #4
     828:	ldr	r3, [r3]
     82c:	mov	r1, #5
     830:	mov	r0, r3
     834:	bl	0 <coda_type_set_read_type>
     838:	bl	0 <__aeabi_read_tp>
     83c:	mov	r2, r0
     840:	ldr	r3, [pc, #-328]	; 700 <grib_init+0xec>
     844:	ldr	r3, [r2, r3]
     848:	add	r3, r3, #4
     84c:	ldr	r1, [r3]
     850:	mov	r2, #32
     854:	mov	r3, #0
     858:	mov	r0, r1
     85c:	bl	0 <coda_type_set_bit_size>
     860:	bl	0 <__aeabi_read_tp>
     864:	mov	r2, r0
     868:	ldr	r3, [pc, #-368]	; 700 <grib_init+0xec>
     86c:	ldr	r3, [r2, r3]
     870:	add	r4, r3, #8
     874:	mov	r1, #2
     878:	mov	r0, #7
     87c:	bl	0 <coda_type_number_new>
     880:	mov	r3, r0
     884:	str	r3, [r4]
     888:	bl	0 <__aeabi_read_tp>
     88c:	mov	r2, r0
     890:	ldr	r3, [pc, #-408]	; 700 <grib_init+0xec>
     894:	ldr	r3, [r2, r3]
     898:	add	r3, r3, #8
     89c:	ldr	r3, [r3]
     8a0:	ldr	r1, [fp, #-20]	; 0xffffffec
     8a4:	mov	r0, r3
     8a8:	bl	0 <coda_type_number_set_endianness>
     8ac:	bl	0 <__aeabi_read_tp>
     8b0:	mov	r2, r0
     8b4:	ldr	r3, [pc, #-444]	; 700 <grib_init+0xec>
     8b8:	ldr	r3, [r2, r3]
     8bc:	add	r3, r3, #8
     8c0:	ldr	r3, [r3]
     8c4:	mov	r1, #1
     8c8:	mov	r0, r3
     8cc:	bl	0 <coda_type_set_read_type>
     8d0:	bl	0 <__aeabi_read_tp>
     8d4:	mov	r2, r0
     8d8:	ldr	r3, [pc, #-480]	; 700 <grib_init+0xec>
     8dc:	ldr	r3, [r2, r3]
     8e0:	add	r3, r3, #8
     8e4:	ldr	r1, [r3]
     8e8:	mov	r2, #8
     8ec:	mov	r3, #0
     8f0:	mov	r0, r1
     8f4:	bl	0 <coda_type_set_bit_size>
     8f8:	bl	0 <__aeabi_read_tp>
     8fc:	mov	r2, r0
     900:	ldr	r3, [pc, #-520]	; 700 <grib_init+0xec>
     904:	ldr	r3, [r2, r3]
     908:	add	r3, r3, #8
     90c:	ldr	r3, [r3]
     910:	ldr	r1, [pc, #-608]	; 6b8 <grib_init+0xa4>
     914:	mov	r0, r3
     918:	bl	0 <coda_type_set_description>
     91c:	bl	0 <__aeabi_read_tp>
     920:	mov	r2, r0
     924:	ldr	r3, [pc, #-556]	; 700 <grib_init+0xec>
     928:	ldr	r3, [r2, r3]
     92c:	add	r4, r3, #12
     930:	mov	r1, #2
     934:	mov	r0, #7
     938:	bl	0 <coda_type_number_new>
     93c:	mov	r3, r0
     940:	str	r3, [r4]
     944:	bl	0 <__aeabi_read_tp>
     948:	mov	r2, r0
     94c:	ldr	r3, [pc, #-596]	; 700 <grib_init+0xec>
     950:	ldr	r3, [r2, r3]
     954:	add	r3, r3, #12
     958:	ldr	r3, [r3]
     95c:	ldr	r1, [fp, #-20]	; 0xffffffec
     960:	mov	r0, r3
     964:	bl	0 <coda_type_number_set_endianness>
     968:	bl	0 <__aeabi_read_tp>
     96c:	mov	r2, r0
     970:	ldr	r3, [pc, #-632]	; 700 <grib_init+0xec>
     974:	ldr	r3, [r2, r3]
     978:	add	r3, r3, #12
     97c:	ldr	r3, [r3]
     980:	mov	r1, #1
     984:	mov	r0, r3
     988:	bl	0 <coda_type_set_read_type>
     98c:	bl	0 <__aeabi_read_tp>
     990:	mov	r2, r0
     994:	ldr	r3, [pc, #-668]	; 700 <grib_init+0xec>
     998:	ldr	r3, [r2, r3]
     99c:	add	r3, r3, #12
     9a0:	ldr	r1, [r3]
     9a4:	mov	r2, #8
     9a8:	mov	r3, #0
     9ac:	mov	r0, r1
     9b0:	bl	0 <coda_type_set_bit_size>
     9b4:	bl	0 <__aeabi_read_tp>
     9b8:	mov	r2, r0
     9bc:	ldr	r3, [pc, #-708]	; 700 <grib_init+0xec>
     9c0:	ldr	r3, [r2, r3]
     9c4:	add	r3, r3, #12
     9c8:	ldr	r3, [r3]
     9cc:	ldr	r1, [pc, #-792]	; 6bc <grib_init+0xa8>
     9d0:	mov	r0, r3
     9d4:	bl	0 <coda_type_set_description>
     9d8:	bl	0 <__aeabi_read_tp>
     9dc:	mov	r2, r0
     9e0:	ldr	r3, [pc, #-744]	; 700 <grib_init+0xec>
     9e4:	ldr	r3, [r2, r3]
     9e8:	add	r4, r3, #16
     9ec:	mov	r1, #2
     9f0:	mov	r0, #7
     9f4:	bl	0 <coda_type_number_new>
     9f8:	mov	r3, r0
     9fc:	str	r3, [r4]
     a00:	bl	0 <__aeabi_read_tp>
     a04:	mov	r2, r0
     a08:	ldr	r3, [pc, #-784]	; 700 <grib_init+0xec>
     a0c:	ldr	r3, [r2, r3]
     a10:	add	r3, r3, #16
     a14:	ldr	r3, [r3]
     a18:	ldr	r1, [fp, #-20]	; 0xffffffec
     a1c:	mov	r0, r3
     a20:	bl	0 <coda_type_number_set_endianness>
     a24:	bl	0 <__aeabi_read_tp>
     a28:	mov	r2, r0
     a2c:	ldr	r3, [pc, #-820]	; 700 <grib_init+0xec>
     a30:	ldr	r3, [r2, r3]
     a34:	add	r3, r3, #16
     a38:	ldr	r3, [r3]
     a3c:	mov	r1, #1
     a40:	mov	r0, r3
     a44:	bl	0 <coda_type_set_read_type>
     a48:	bl	0 <__aeabi_read_tp>
     a4c:	mov	r2, r0
     a50:	ldr	r3, [pc, #-856]	; 700 <grib_init+0xec>
     a54:	ldr	r3, [r2, r3]
     a58:	add	r3, r3, #16
     a5c:	ldr	r1, [r3]
     a60:	mov	r2, #8
     a64:	mov	r3, #0
     a68:	mov	r0, r1
     a6c:	bl	0 <coda_type_set_bit_size>
     a70:	bl	0 <__aeabi_read_tp>
     a74:	mov	r2, r0
     a78:	ldr	r3, [pc, #-896]	; 700 <grib_init+0xec>
     a7c:	ldr	r3, [r2, r3]
     a80:	add	r3, r3, #16
     a84:	ldr	r3, [r3]
     a88:	ldr	r1, [pc, #-976]	; 6c0 <grib_init+0xac>
     a8c:	mov	r0, r3
     a90:	bl	0 <coda_type_set_description>
     a94:	bl	0 <__aeabi_read_tp>
     a98:	mov	r2, r0
     a9c:	ldr	r3, [pc, #-932]	; 700 <grib_init+0xec>
     aa0:	ldr	r3, [r2, r3]
     aa4:	add	r4, r3, #20
     aa8:	mov	r1, #2
     aac:	mov	r0, #7
     ab0:	bl	0 <coda_type_number_new>
     ab4:	mov	r3, r0
     ab8:	str	r3, [r4]
     abc:	bl	0 <__aeabi_read_tp>
     ac0:	mov	r2, r0
     ac4:	ldr	r3, [pc, #-972]	; 700 <grib_init+0xec>
     ac8:	ldr	r3, [r2, r3]
     acc:	add	r3, r3, #20
     ad0:	ldr	r3, [r3]
     ad4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ad8:	mov	r0, r3
     adc:	bl	0 <coda_type_number_set_endianness>
     ae0:	bl	0 <__aeabi_read_tp>
     ae4:	mov	r2, r0
     ae8:	ldr	r3, [pc, #-1008]	; 700 <grib_init+0xec>
     aec:	ldr	r3, [r2, r3]
     af0:	add	r3, r3, #20
     af4:	ldr	r3, [r3]
     af8:	mov	r1, #1
     afc:	mov	r0, r3
     b00:	bl	0 <coda_type_set_read_type>
     b04:	bl	0 <__aeabi_read_tp>
     b08:	mov	r2, r0
     b0c:	ldr	r3, [pc, #-1044]	; 700 <grib_init+0xec>
     b10:	ldr	r3, [r2, r3]
     b14:	add	r3, r3, #20
     b18:	ldr	r1, [r3]
     b1c:	mov	r2, #8
     b20:	mov	r3, #0
     b24:	mov	r0, r1
     b28:	bl	0 <coda_type_set_bit_size>
     b2c:	bl	0 <__aeabi_read_tp>
     b30:	mov	r2, r0
     b34:	ldr	r3, [pc, #-1084]	; 700 <grib_init+0xec>
     b38:	ldr	r3, [r2, r3]
     b3c:	add	r3, r3, #20
     b40:	ldr	r3, [r3]
     b44:	ldr	r1, [pc, #-1160]	; 6c4 <grib_init+0xb0>
     b48:	mov	r0, r3
     b4c:	bl	0 <coda_type_set_description>
     b50:	bl	0 <__aeabi_read_tp>
     b54:	mov	r2, r0
     b58:	ldr	r3, [pc, #-1120]	; 700 <grib_init+0xec>
     b5c:	ldr	r3, [r2, r3]
     b60:	add	r4, r3, #24
     b64:	mov	r1, #2
     b68:	mov	r0, #7
     b6c:	bl	0 <coda_type_number_new>
     b70:	mov	r3, r0
     b74:	str	r3, [r4]
     b78:	bl	0 <__aeabi_read_tp>
     b7c:	mov	r2, r0
     b80:	ldr	r3, [pc, #-1160]	; 700 <grib_init+0xec>
     b84:	ldr	r3, [r2, r3]
     b88:	add	r3, r3, #24
     b8c:	ldr	r3, [r3]
     b90:	ldr	r1, [fp, #-20]	; 0xffffffec
     b94:	mov	r0, r3
     b98:	bl	0 <coda_type_number_set_endianness>
     b9c:	bl	0 <__aeabi_read_tp>
     ba0:	mov	r2, r0
     ba4:	ldr	r3, [pc, #-1196]	; 700 <grib_init+0xec>
     ba8:	ldr	r3, [r2, r3]
     bac:	add	r3, r3, #24
     bb0:	ldr	r3, [r3]
     bb4:	mov	r1, #1
     bb8:	mov	r0, r3
     bbc:	bl	0 <coda_type_set_read_type>
     bc0:	bl	0 <__aeabi_read_tp>
     bc4:	mov	r2, r0
     bc8:	ldr	r3, [pc, #-1232]	; 700 <grib_init+0xec>
     bcc:	ldr	r3, [r2, r3]
     bd0:	add	r3, r3, #24
     bd4:	ldr	r1, [r3]
     bd8:	mov	r2, #8
     bdc:	mov	r3, #0
     be0:	mov	r0, r1
     be4:	bl	0 <coda_type_set_bit_size>
     be8:	bl	0 <__aeabi_read_tp>
     bec:	mov	r2, r0
     bf0:	ldr	r3, [pc, #-1272]	; 700 <grib_init+0xec>
     bf4:	ldr	r3, [r2, r3]
     bf8:	add	r3, r3, #24
     bfc:	ldr	r3, [r3]
     c00:	ldr	r1, [pc, #-1344]	; 6c8 <grib_init+0xb4>
     c04:	mov	r0, r3
     c08:	bl	0 <coda_type_set_description>
     c0c:	bl	0 <__aeabi_read_tp>
     c10:	mov	r2, r0
     c14:	ldr	r3, [pc, #-1308]	; 700 <grib_init+0xec>
     c18:	ldr	r3, [r2, r3]
     c1c:	add	r4, r3, #28
     c20:	mov	r1, #2
     c24:	mov	r0, #7
     c28:	bl	0 <coda_type_number_new>
     c2c:	mov	r3, r0
     c30:	str	r3, [r4]
     c34:	bl	0 <__aeabi_read_tp>
     c38:	mov	r2, r0
     c3c:	ldr	r3, [pc, #-1348]	; 700 <grib_init+0xec>
     c40:	ldr	r3, [r2, r3]
     c44:	add	r3, r3, #28
     c48:	ldr	r3, [r3]
     c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
     c50:	mov	r0, r3
     c54:	bl	0 <coda_type_number_set_endianness>
     c58:	bl	0 <__aeabi_read_tp>
     c5c:	mov	r2, r0
     c60:	ldr	r3, [pc, #-1384]	; 700 <grib_init+0xec>
     c64:	ldr	r3, [r2, r3]
     c68:	add	r3, r3, #28
     c6c:	ldr	r3, [r3]
     c70:	mov	r1, #1
     c74:	mov	r0, r3
     c78:	bl	0 <coda_type_set_read_type>
     c7c:	bl	0 <__aeabi_read_tp>
     c80:	mov	r2, r0
     c84:	ldr	r3, [pc, #-1420]	; 700 <grib_init+0xec>
     c88:	ldr	r3, [r2, r3]
     c8c:	add	r3, r3, #28
     c90:	ldr	r1, [r3]
     c94:	mov	r2, #8
     c98:	mov	r3, #0
     c9c:	mov	r0, r1
     ca0:	bl	0 <coda_type_set_bit_size>
     ca4:	bl	0 <__aeabi_read_tp>
     ca8:	mov	r2, r0
     cac:	ldr	r3, [pc, #-1460]	; 700 <grib_init+0xec>
     cb0:	ldr	r3, [r2, r3]
     cb4:	add	r3, r3, #28
     cb8:	ldr	r3, [r3]
     cbc:	ldr	r1, [pc, #-1528]	; 6cc <grib_init+0xb8>
     cc0:	mov	r0, r3
     cc4:	bl	0 <coda_type_set_description>
     cc8:	bl	0 <__aeabi_read_tp>
     ccc:	mov	r2, r0
     cd0:	ldr	r3, [pc, #-1496]	; 700 <grib_init+0xec>
     cd4:	ldr	r3, [r2, r3]
     cd8:	add	r4, r3, #32
     cdc:	mov	r1, #2
     ce0:	mov	r0, #7
     ce4:	bl	0 <coda_type_number_new>
     ce8:	mov	r3, r0
     cec:	str	r3, [r4]
     cf0:	bl	0 <__aeabi_read_tp>
     cf4:	mov	r2, r0
     cf8:	ldr	r3, [pc, #-1536]	; 700 <grib_init+0xec>
     cfc:	ldr	r3, [r2, r3]
     d00:	add	r3, r3, #32
     d04:	ldr	r3, [r3]
     d08:	ldr	r1, [fp, #-20]	; 0xffffffec
     d0c:	mov	r0, r3
     d10:	bl	0 <coda_type_number_set_endianness>
     d14:	bl	0 <__aeabi_read_tp>
     d18:	mov	r2, r0
     d1c:	ldr	r3, [pc, #-1572]	; 700 <grib_init+0xec>
     d20:	ldr	r3, [r2, r3]
     d24:	add	r3, r3, #32
     d28:	ldr	r3, [r3]
     d2c:	mov	r1, #1
     d30:	mov	r0, r3
     d34:	bl	0 <coda_type_set_read_type>
     d38:	bl	0 <__aeabi_read_tp>
     d3c:	mov	r2, r0
     d40:	ldr	r3, [pc, #-1608]	; 700 <grib_init+0xec>
     d44:	ldr	r3, [r2, r3]
     d48:	add	r3, r3, #32
     d4c:	ldr	r1, [r3]
     d50:	mov	r2, #8
     d54:	mov	r3, #0
     d58:	mov	r0, r1
     d5c:	bl	0 <coda_type_set_bit_size>
     d60:	bl	0 <__aeabi_read_tp>
     d64:	mov	r2, r0
     d68:	ldr	r3, [pc, #-1648]	; 700 <grib_init+0xec>
     d6c:	ldr	r3, [r2, r3]
     d70:	add	r3, r3, #32
     d74:	ldr	r3, [r3]
     d78:	ldr	r1, [pc, #-1712]	; 6d0 <grib_init+0xbc>
     d7c:	mov	r0, r3
     d80:	bl	0 <coda_type_set_description>
     d84:	bl	0 <__aeabi_read_tp>
     d88:	mov	r2, r0
     d8c:	ldr	r3, [pc, #-1684]	; 700 <grib_init+0xec>
     d90:	ldr	r3, [r2, r3]
     d94:	add	r4, r3, #36	; 0x24
     d98:	mov	r1, #2
     d9c:	mov	r0, #7
     da0:	bl	0 <coda_type_number_new>
     da4:	mov	r3, r0
     da8:	str	r3, [r4]
     dac:	bl	0 <__aeabi_read_tp>
     db0:	mov	r2, r0
     db4:	ldr	r3, [pc, #-1724]	; 700 <grib_init+0xec>
     db8:	ldr	r3, [r2, r3]
     dbc:	add	r3, r3, #36	; 0x24
     dc0:	ldr	r3, [r3]
     dc4:	ldr	r1, [fp, #-20]	; 0xffffffec
     dc8:	mov	r0, r3
     dcc:	bl	0 <coda_type_number_set_endianness>
     dd0:	bl	0 <__aeabi_read_tp>
     dd4:	mov	r2, r0
     dd8:	ldr	r3, [pc, #-1760]	; 700 <grib_init+0xec>
     ddc:	ldr	r3, [r2, r3]
     de0:	add	r3, r3, #36	; 0x24
     de4:	ldr	r3, [r3]
     de8:	mov	r1, #3
     dec:	mov	r0, r3
     df0:	bl	0 <coda_type_set_read_type>
     df4:	bl	0 <__aeabi_read_tp>
     df8:	mov	r2, r0
     dfc:	ldr	r3, [pc, #-1796]	; 700 <grib_init+0xec>
     e00:	ldr	r3, [r2, r3]
     e04:	add	r3, r3, #36	; 0x24
     e08:	ldr	r1, [r3]
     e0c:	mov	r2, #16
     e10:	mov	r3, #0
     e14:	mov	r0, r1
     e18:	bl	0 <coda_type_set_bit_size>
     e1c:	bl	0 <__aeabi_read_tp>
     e20:	mov	r2, r0
     e24:	ldr	r3, [pc, #-1836]	; 700 <grib_init+0xec>
     e28:	ldr	r3, [r2, r3]
     e2c:	add	r3, r3, #36	; 0x24
     e30:	ldr	r3, [r3]
     e34:	ldr	r1, [pc, #-1896]	; 6d4 <grib_init+0xc0>
     e38:	mov	r0, r3
     e3c:	bl	0 <coda_type_set_description>
     e40:	bl	0 <__aeabi_read_tp>
     e44:	mov	r2, r0
     e48:	ldr	r3, [pc, #-1872]	; 700 <grib_init+0xec>
     e4c:	ldr	r3, [r2, r3]
     e50:	add	r4, r3, #40	; 0x28
     e54:	mov	r1, #2
     e58:	mov	r0, #7
     e5c:	bl	0 <coda_type_number_new>
     e60:	mov	r3, r0
     e64:	str	r3, [r4]
     e68:	bl	0 <__aeabi_read_tp>
     e6c:	mov	r2, r0
     e70:	ldr	r3, [pc, #-1912]	; 700 <grib_init+0xec>
     e74:	ldr	r3, [r2, r3]
     e78:	add	r3, r3, #40	; 0x28
     e7c:	ldr	r3, [r3]
     e80:	ldr	r1, [fp, #-20]	; 0xffffffec
     e84:	mov	r0, r3
     e88:	bl	0 <coda_type_number_set_endianness>
     e8c:	bl	0 <__aeabi_read_tp>
     e90:	mov	r2, r0
     e94:	ldr	r3, [pc, #-1948]	; 700 <grib_init+0xec>
     e98:	ldr	r3, [r2, r3]
     e9c:	add	r3, r3, #40	; 0x28
     ea0:	ldr	r3, [r3]
     ea4:	mov	r1, #1
     ea8:	mov	r0, r3
     eac:	bl	0 <coda_type_set_read_type>
     eb0:	bl	0 <__aeabi_read_tp>
     eb4:	mov	r2, r0
     eb8:	ldr	r3, [pc, #-1984]	; 700 <grib_init+0xec>
     ebc:	ldr	r3, [r2, r3]
     ec0:	add	r3, r3, #40	; 0x28
     ec4:	ldr	r1, [r3]
     ec8:	mov	r2, #8
     ecc:	mov	r3, #0
     ed0:	mov	r0, r1
     ed4:	bl	0 <coda_type_set_bit_size>
     ed8:	bl	0 <__aeabi_read_tp>
     edc:	mov	r2, r0
     ee0:	ldr	r3, [pc, #-2024]	; 700 <grib_init+0xec>
     ee4:	ldr	r3, [r2, r3]
     ee8:	add	r3, r3, #40	; 0x28
     eec:	ldr	r3, [r3]
     ef0:	ldr	r1, [pc, #-2080]	; 6d8 <grib_init+0xc4>
     ef4:	mov	r0, r3
     ef8:	bl	0 <coda_type_set_description>
     efc:	bl	0 <__aeabi_read_tp>
     f00:	mov	r2, r0
     f04:	ldr	r3, [pc, #-2060]	; 700 <grib_init+0xec>
     f08:	ldr	r3, [r2, r3]
     f0c:	add	r4, r3, #44	; 0x2c
     f10:	mov	r1, #2
     f14:	mov	r0, #7
     f18:	bl	0 <coda_type_number_new>
     f1c:	mov	r3, r0
     f20:	str	r3, [r4]
     f24:	bl	0 <__aeabi_read_tp>
     f28:	mov	r2, r0
     f2c:	ldr	r3, [pc, #-2100]	; 700 <grib_init+0xec>
     f30:	ldr	r3, [r2, r3]
     f34:	add	r3, r3, #44	; 0x2c
     f38:	ldr	r3, [r3]
     f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f40:	mov	r0, r3
     f44:	bl	0 <coda_type_number_set_endianness>
     f48:	bl	0 <__aeabi_read_tp>
     f4c:	mov	r2, r0
     f50:	ldr	r3, [pc, #-2136]	; 700 <grib_init+0xec>
     f54:	ldr	r3, [r2, r3]
     f58:	add	r3, r3, #44	; 0x2c
     f5c:	ldr	r3, [r3]
     f60:	mov	r1, #3
     f64:	mov	r0, r3
     f68:	bl	0 <coda_type_set_read_type>
     f6c:	bl	0 <__aeabi_read_tp>
     f70:	mov	r2, r0
     f74:	ldr	r3, [pc, #-2172]	; 700 <grib_init+0xec>
     f78:	ldr	r3, [r2, r3]
     f7c:	add	r3, r3, #44	; 0x2c
     f80:	ldr	r1, [r3]
     f84:	mov	r2, #16
     f88:	mov	r3, #0
     f8c:	mov	r0, r1
     f90:	bl	0 <coda_type_set_bit_size>
     f94:	bl	0 <__aeabi_read_tp>
     f98:	mov	r2, r0
     f9c:	ldr	r3, [pc, #-2212]	; 700 <grib_init+0xec>
     fa0:	ldr	r3, [r2, r3]
     fa4:	add	r3, r3, #44	; 0x2c
     fa8:	ldr	r3, [r3]
     fac:	ldr	r1, [pc, #-2264]	; 6dc <grib_init+0xc8>
     fb0:	mov	r0, r3
     fb4:	bl	0 <coda_type_set_description>
     fb8:	bl	0 <__aeabi_read_tp>
     fbc:	mov	r2, r0
     fc0:	ldr	r3, [pc, #-2248]	; 700 <grib_init+0xec>
     fc4:	ldr	r3, [r2, r3]
     fc8:	add	r4, r3, #48	; 0x30
     fcc:	mov	r1, #2
     fd0:	mov	r0, #7
     fd4:	bl	0 <coda_type_number_new>
     fd8:	mov	r3, r0
     fdc:	str	r3, [r4]
     fe0:	bl	0 <__aeabi_read_tp>
     fe4:	mov	r2, r0
     fe8:	ldr	r3, [pc, #-2288]	; 700 <grib_init+0xec>
     fec:	ldr	r3, [r2, r3]
     ff0:	add	r3, r3, #48	; 0x30
     ff4:	ldr	r3, [r3]
     ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
     ffc:	mov	r0, r3
    1000:	bl	0 <coda_type_number_set_endianness>
    1004:	bl	0 <__aeabi_read_tp>
    1008:	mov	r2, r0
    100c:	ldr	r3, [pc, #-2324]	; 700 <grib_init+0xec>
    1010:	ldr	r3, [r2, r3]
    1014:	add	r3, r3, #48	; 0x30
    1018:	ldr	r3, [r3]
    101c:	mov	r1, #1
    1020:	mov	r0, r3
    1024:	bl	0 <coda_type_set_read_type>
    1028:	bl	0 <__aeabi_read_tp>
    102c:	mov	r2, r0
    1030:	ldr	r3, [pc, #-2360]	; 700 <grib_init+0xec>
    1034:	ldr	r3, [r2, r3]
    1038:	add	r3, r3, #48	; 0x30
    103c:	ldr	r1, [r3]
    1040:	mov	r2, #8
    1044:	mov	r3, #0
    1048:	mov	r0, r1
    104c:	bl	0 <coda_type_set_bit_size>
    1050:	bl	0 <__aeabi_read_tp>
    1054:	mov	r2, r0
    1058:	ldr	r3, [pc, #-2400]	; 700 <grib_init+0xec>
    105c:	ldr	r3, [r2, r3]
    1060:	add	r3, r3, #48	; 0x30
    1064:	ldr	r3, [r3]
    1068:	ldr	r1, [pc, #-2448]	; 6e0 <grib_init+0xcc>
    106c:	mov	r0, r3
    1070:	bl	0 <coda_type_set_description>
    1074:	bl	0 <__aeabi_read_tp>
    1078:	mov	r2, r0
    107c:	ldr	r3, [pc, #-2436]	; 700 <grib_init+0xec>
    1080:	ldr	r3, [r2, r3]
    1084:	add	r4, r3, #52	; 0x34
    1088:	mov	r1, #2
    108c:	mov	r0, #7
    1090:	bl	0 <coda_type_number_new>
    1094:	mov	r3, r0
    1098:	str	r3, [r4]
    109c:	bl	0 <__aeabi_read_tp>
    10a0:	mov	r2, r0
    10a4:	ldr	r3, [pc, #-2476]	; 700 <grib_init+0xec>
    10a8:	ldr	r3, [r2, r3]
    10ac:	add	r3, r3, #52	; 0x34
    10b0:	ldr	r3, [r3]
    10b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    10b8:	mov	r0, r3
    10bc:	bl	0 <coda_type_number_set_endianness>
    10c0:	bl	0 <__aeabi_read_tp>
    10c4:	mov	r2, r0
    10c8:	ldr	r3, [pc, #-2512]	; 700 <grib_init+0xec>
    10cc:	ldr	r3, [r2, r3]
    10d0:	add	r3, r3, #52	; 0x34
    10d4:	ldr	r3, [r3]
    10d8:	mov	r1, #1
    10dc:	mov	r0, r3
    10e0:	bl	0 <coda_type_set_read_type>
    10e4:	bl	0 <__aeabi_read_tp>
    10e8:	mov	r2, r0
    10ec:	ldr	r3, [pc, #-2548]	; 700 <grib_init+0xec>
    10f0:	ldr	r3, [r2, r3]
    10f4:	add	r3, r3, #52	; 0x34
    10f8:	ldr	r1, [r3]
    10fc:	mov	r2, #8
    1100:	mov	r3, #0
    1104:	mov	r0, r1
    1108:	bl	0 <coda_type_set_bit_size>
    110c:	bl	0 <__aeabi_read_tp>
    1110:	mov	r2, r0
    1114:	ldr	r3, [pc, #-2588]	; 700 <grib_init+0xec>
    1118:	ldr	r3, [r2, r3]
    111c:	add	r3, r3, #52	; 0x34
    1120:	ldr	r3, [r3]
    1124:	ldr	r1, [pc, #-2632]	; 6e4 <grib_init+0xd0>
    1128:	mov	r0, r3
    112c:	bl	0 <coda_type_set_description>
    1130:	bl	0 <__aeabi_read_tp>
    1134:	mov	r2, r0
    1138:	ldr	r3, [pc, #-2624]	; 700 <grib_init+0xec>
    113c:	ldr	r3, [r2, r3]
    1140:	add	r4, r3, #56	; 0x38
    1144:	mov	r1, #2
    1148:	mov	r0, #7
    114c:	bl	0 <coda_type_number_new>
    1150:	mov	r3, r0
    1154:	str	r3, [r4]
    1158:	bl	0 <__aeabi_read_tp>
    115c:	mov	r2, r0
    1160:	ldr	r3, [pc, #-2664]	; 700 <grib_init+0xec>
    1164:	ldr	r3, [r2, r3]
    1168:	add	r3, r3, #56	; 0x38
    116c:	ldr	r3, [r3]
    1170:	ldr	r1, [fp, #-20]	; 0xffffffec
    1174:	mov	r0, r3
    1178:	bl	0 <coda_type_number_set_endianness>
    117c:	bl	0 <__aeabi_read_tp>
    1180:	mov	r2, r0
    1184:	ldr	r3, [pc, #-2700]	; 700 <grib_init+0xec>
    1188:	ldr	r3, [r2, r3]
    118c:	add	r3, r3, #56	; 0x38
    1190:	ldr	r3, [r3]
    1194:	mov	r1, #1
    1198:	mov	r0, r3
    119c:	bl	0 <coda_type_set_read_type>
    11a0:	bl	0 <__aeabi_read_tp>
    11a4:	mov	r2, r0
    11a8:	ldr	r3, [pc, #-2736]	; 700 <grib_init+0xec>
    11ac:	ldr	r3, [r2, r3]
    11b0:	add	r3, r3, #56	; 0x38
    11b4:	ldr	r1, [r3]
    11b8:	mov	r2, #8
    11bc:	mov	r3, #0
    11c0:	mov	r0, r1
    11c4:	bl	0 <coda_type_set_bit_size>
    11c8:	bl	0 <__aeabi_read_tp>
    11cc:	mov	r2, r0
    11d0:	ldr	r3, [pc, #-2776]	; 700 <grib_init+0xec>
    11d4:	ldr	r3, [r2, r3]
    11d8:	add	r3, r3, #56	; 0x38
    11dc:	ldr	r3, [r3]
    11e0:	ldr	r1, [pc, #-2816]	; 6e8 <grib_init+0xd4>
    11e4:	mov	r0, r3
    11e8:	bl	0 <coda_type_set_description>
    11ec:	bl	0 <__aeabi_read_tp>
    11f0:	mov	r2, r0
    11f4:	ldr	r3, [pc, #-2812]	; 700 <grib_init+0xec>
    11f8:	ldr	r3, [r2, r3]
    11fc:	add	r4, r3, #60	; 0x3c
    1200:	mov	r1, #2
    1204:	mov	r0, #7
    1208:	bl	0 <coda_type_number_new>
    120c:	mov	r3, r0
    1210:	str	r3, [r4]
    1214:	bl	0 <__aeabi_read_tp>
    1218:	mov	r2, r0
    121c:	ldr	r3, [pc, #-2852]	; 700 <grib_init+0xec>
    1220:	ldr	r3, [r2, r3]
    1224:	add	r3, r3, #60	; 0x3c
    1228:	ldr	r3, [r3]
    122c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1230:	mov	r0, r3
    1234:	bl	0 <coda_type_number_set_endianness>
    1238:	bl	0 <__aeabi_read_tp>
    123c:	mov	r2, r0
    1240:	ldr	r3, [pc, #-2888]	; 700 <grib_init+0xec>
    1244:	ldr	r3, [r2, r3]
    1248:	add	r3, r3, #60	; 0x3c
    124c:	ldr	r3, [r3]
    1250:	mov	r1, #1
    1254:	mov	r0, r3
    1258:	bl	0 <coda_type_set_read_type>
    125c:	bl	0 <__aeabi_read_tp>
    1260:	mov	r2, r0
    1264:	ldr	r3, [pc, #-2924]	; 700 <grib_init+0xec>
    1268:	ldr	r3, [r2, r3]
    126c:	add	r3, r3, #60	; 0x3c
    1270:	ldr	r1, [r3]
    1274:	mov	r2, #8
    1278:	mov	r3, #0
    127c:	mov	r0, r1
    1280:	bl	0 <coda_type_set_bit_size>
    1284:	bl	0 <__aeabi_read_tp>
    1288:	mov	r2, r0
    128c:	ldr	r3, [pc, #-2964]	; 700 <grib_init+0xec>
    1290:	ldr	r3, [r2, r3]
    1294:	add	r3, r3, #60	; 0x3c
    1298:	ldr	r3, [r3]
    129c:	ldr	r1, [pc, #-3000]	; 6ec <grib_init+0xd8>
    12a0:	mov	r0, r3
    12a4:	bl	0 <coda_type_set_description>
    12a8:	bl	0 <__aeabi_read_tp>
    12ac:	mov	r2, r0
    12b0:	ldr	r3, [pc, #-3000]	; 700 <grib_init+0xec>
    12b4:	ldr	r3, [r2, r3]
    12b8:	add	r4, r3, #64	; 0x40
    12bc:	mov	r1, #2
    12c0:	mov	r0, #7
    12c4:	bl	0 <coda_type_number_new>
    12c8:	mov	r3, r0
    12cc:	str	r3, [r4]
    12d0:	bl	0 <__aeabi_read_tp>
    12d4:	mov	r2, r0
    12d8:	ldr	r3, [pc, #-3040]	; 700 <grib_init+0xec>
    12dc:	ldr	r3, [r2, r3]
    12e0:	add	r3, r3, #64	; 0x40
    12e4:	ldr	r3, [r3]
    12e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    12ec:	mov	r0, r3
    12f0:	bl	0 <coda_type_number_set_endianness>
    12f4:	bl	0 <__aeabi_read_tp>
    12f8:	mov	r2, r0
    12fc:	ldr	r3, [pc, #-3076]	; 700 <grib_init+0xec>
    1300:	ldr	r3, [r2, r3]
    1304:	add	r3, r3, #64	; 0x40
    1308:	ldr	r3, [r3]
    130c:	mov	r1, #1
    1310:	mov	r0, r3
    1314:	bl	0 <coda_type_set_read_type>
    1318:	bl	0 <__aeabi_read_tp>
    131c:	mov	r2, r0
    1320:	ldr	r3, [pc, #-3112]	; 700 <grib_init+0xec>
    1324:	ldr	r3, [r2, r3]
    1328:	add	r3, r3, #64	; 0x40
    132c:	ldr	r1, [r3]
    1330:	mov	r2, #8
    1334:	mov	r3, #0
    1338:	mov	r0, r1
    133c:	bl	0 <coda_type_set_bit_size>
    1340:	bl	0 <__aeabi_read_tp>
    1344:	mov	r2, r0
    1348:	ldr	r3, [pc, #-3152]	; 700 <grib_init+0xec>
    134c:	ldr	r3, [r2, r3]
    1350:	add	r3, r3, #64	; 0x40
    1354:	ldr	r3, [r3]
    1358:	ldr	r1, [pc, #-3184]	; 6f0 <grib_init+0xdc>
    135c:	mov	r0, r3
    1360:	bl	0 <coda_type_set_description>
    1364:	bl	0 <__aeabi_read_tp>
    1368:	mov	r2, r0
    136c:	ldr	r3, [pc, #-3188]	; 700 <grib_init+0xec>
    1370:	ldr	r3, [r2, r3]
    1374:	add	r4, r3, #68	; 0x44
    1378:	mov	r1, #2
    137c:	mov	r0, #7
    1380:	bl	0 <coda_type_number_new>
    1384:	mov	r3, r0
    1388:	str	r3, [r4]
    138c:	bl	0 <__aeabi_read_tp>
    1390:	mov	r2, r0
    1394:	ldr	r3, [pc, #-3228]	; 700 <grib_init+0xec>
    1398:	ldr	r3, [r2, r3]
    139c:	add	r3, r3, #68	; 0x44
    13a0:	ldr	r3, [r3]
    13a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    13a8:	mov	r0, r3
    13ac:	bl	0 <coda_type_number_set_endianness>
    13b0:	bl	0 <__aeabi_read_tp>
    13b4:	mov	r2, r0
    13b8:	ldr	r3, [pc, #-3264]	; 700 <grib_init+0xec>
    13bc:	ldr	r3, [r2, r3]
    13c0:	add	r3, r3, #68	; 0x44
    13c4:	ldr	r3, [r3]
    13c8:	mov	r1, #1
    13cc:	mov	r0, r3
    13d0:	bl	0 <coda_type_set_read_type>
    13d4:	bl	0 <__aeabi_read_tp>
    13d8:	mov	r2, r0
    13dc:	ldr	r3, [pc, #-3300]	; 700 <grib_init+0xec>
    13e0:	ldr	r3, [r2, r3]
    13e4:	add	r3, r3, #68	; 0x44
    13e8:	ldr	r1, [r3]
    13ec:	mov	r2, #8
    13f0:	mov	r3, #0
    13f4:	mov	r0, r1
    13f8:	bl	0 <coda_type_set_bit_size>
    13fc:	bl	0 <__aeabi_read_tp>
    1400:	mov	r2, r0
    1404:	ldr	r3, [pc, #-3340]	; 700 <grib_init+0xec>
    1408:	ldr	r3, [r2, r3]
    140c:	add	r3, r3, #68	; 0x44
    1410:	ldr	r3, [r3]
    1414:	ldr	r1, [pc, #-3368]	; 6f4 <grib_init+0xe0>
    1418:	mov	r0, r3
    141c:	bl	0 <coda_type_set_description>
    1420:	bl	0 <__aeabi_read_tp>
    1424:	mov	r2, r0
    1428:	ldr	r3, [pc, #-3376]	; 700 <grib_init+0xec>
    142c:	ldr	r3, [r2, r3]
    1430:	add	r4, r3, #72	; 0x48
    1434:	mov	r1, #2
    1438:	mov	r0, #7
    143c:	bl	0 <coda_type_number_new>
    1440:	mov	r3, r0
    1444:	str	r3, [r4]
    1448:	bl	0 <__aeabi_read_tp>
    144c:	mov	r2, r0
    1450:	ldr	r3, [pc, #-3416]	; 700 <grib_init+0xec>
    1454:	ldr	r3, [r2, r3]
    1458:	add	r3, r3, #72	; 0x48
    145c:	ldr	r3, [r3]
    1460:	ldr	r1, [fp, #-20]	; 0xffffffec
    1464:	mov	r0, r3
    1468:	bl	0 <coda_type_number_set_endianness>
    146c:	bl	0 <__aeabi_read_tp>
    1470:	mov	r2, r0
    1474:	ldr	r3, [pc, #-3452]	; 700 <grib_init+0xec>
    1478:	ldr	r3, [r2, r3]
    147c:	add	r3, r3, #72	; 0x48
    1480:	ldr	r3, [r3]
    1484:	mov	r1, #1
    1488:	mov	r0, r3
    148c:	bl	0 <coda_type_set_read_type>
    1490:	bl	0 <__aeabi_read_tp>
    1494:	mov	r2, r0
    1498:	ldr	r3, [pc, #-3488]	; 700 <grib_init+0xec>
    149c:	ldr	r3, [r2, r3]
    14a0:	add	r3, r3, #72	; 0x48
    14a4:	ldr	r1, [r3]
    14a8:	mov	r2, #8
    14ac:	mov	r3, #0
    14b0:	mov	r0, r1
    14b4:	bl	0 <coda_type_set_bit_size>
    14b8:	bl	0 <__aeabi_read_tp>
    14bc:	mov	r2, r0
    14c0:	ldr	r3, [pc, #-3528]	; 700 <grib_init+0xec>
    14c4:	ldr	r3, [r2, r3]
    14c8:	add	r3, r3, #72	; 0x48
    14cc:	ldr	r3, [r3]
    14d0:	ldr	r1, [pc, #-3552]	; 6f8 <grib_init+0xe4>
    14d4:	mov	r0, r3
    14d8:	bl	0 <coda_type_set_description>
    14dc:	bl	0 <__aeabi_read_tp>
    14e0:	mov	r2, r0
    14e4:	ldr	r3, [pc, #-3564]	; 700 <grib_init+0xec>
    14e8:	ldr	r3, [r2, r3]
    14ec:	add	r4, r3, #76	; 0x4c
    14f0:	mov	r1, #2
    14f4:	mov	r0, #7
    14f8:	bl	0 <coda_type_number_new>
    14fc:	mov	r3, r0
    1500:	str	r3, [r4]
    1504:	bl	0 <__aeabi_read_tp>
    1508:	mov	r2, r0
    150c:	ldr	r3, [pc, #-3604]	; 700 <grib_init+0xec>
    1510:	ldr	r3, [r2, r3]
    1514:	add	r3, r3, #76	; 0x4c
    1518:	ldr	r3, [r3]
    151c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1520:	mov	r0, r3
    1524:	bl	0 <coda_type_number_set_endianness>
    1528:	bl	0 <__aeabi_read_tp>
    152c:	mov	r2, r0
    1530:	ldr	r3, [pc, #-3640]	; 700 <grib_init+0xec>
    1534:	ldr	r3, [r2, r3]
    1538:	add	r3, r3, #76	; 0x4c
    153c:	ldr	r3, [r3]
    1540:	mov	r1, #1
    1544:	mov	r0, r3
    1548:	bl	0 <coda_type_set_read_type>
    154c:	bl	0 <__aeabi_read_tp>
    1550:	mov	r2, r0
    1554:	ldr	r3, [pc, #-3676]	; 700 <grib_init+0xec>
    1558:	ldr	r3, [r2, r3]
    155c:	add	r3, r3, #76	; 0x4c
    1560:	ldr	r1, [r3]
    1564:	mov	r2, #8
    1568:	mov	r3, #0
    156c:	mov	r0, r1
    1570:	bl	0 <coda_type_set_bit_size>
    1574:	bl	0 <__aeabi_read_tp>
    1578:	mov	r2, r0
    157c:	ldr	r3, [pc, #-3716]	; 700 <grib_init+0xec>
    1580:	ldr	r3, [r2, r3]
    1584:	add	r3, r3, #76	; 0x4c
    1588:	ldr	r3, [r3]
    158c:	ldr	r1, [pc, #-3740]	; 6f8 <grib_init+0xe4>
    1590:	mov	r0, r3
    1594:	bl	0 <coda_type_set_description>
    1598:	bl	0 <__aeabi_read_tp>
    159c:	mov	r2, r0
    15a0:	ldr	r3, [pc, #-3752]	; 700 <grib_init+0xec>
    15a4:	ldr	r3, [r2, r3]
    15a8:	add	r4, r3, #80	; 0x50
    15ac:	mov	r1, #2
    15b0:	mov	r0, #7
    15b4:	bl	0 <coda_type_number_new>
    15b8:	mov	r3, r0
    15bc:	str	r3, [r4]
    15c0:	bl	0 <__aeabi_read_tp>
    15c4:	mov	r2, r0
    15c8:	ldr	r3, [pc, #-3792]	; 700 <grib_init+0xec>
    15cc:	ldr	r3, [r2, r3]
    15d0:	add	r3, r3, #80	; 0x50
    15d4:	ldr	r3, [r3]
    15d8:	ldr	r1, [fp, #-20]	; 0xffffffec
    15dc:	mov	r0, r3
    15e0:	bl	0 <coda_type_number_set_endianness>
    15e4:	bl	0 <__aeabi_read_tp>
    15e8:	mov	r2, r0
    15ec:	ldr	r3, [pc, #-3828]	; 700 <grib_init+0xec>
    15f0:	ldr	r3, [r2, r3]
    15f4:	add	r3, r3, #80	; 0x50
    15f8:	ldr	r3, [r3]
    15fc:	mov	r1, #1
    1600:	mov	r0, r3
    1604:	bl	0 <coda_type_set_read_type>
    1608:	bl	0 <__aeabi_read_tp>
    160c:	mov	r2, r0
    1610:	ldr	r3, [pc, #-3864]	; 700 <grib_init+0xec>
    1614:	ldr	r3, [r2, r3]
    1618:	add	r3, r3, #80	; 0x50
    161c:	ldr	r1, [r3]
    1620:	mov	r2, #8
    1624:	mov	r3, #0
    1628:	mov	r0, r1
    162c:	bl	0 <coda_type_set_bit_size>
    1630:	bl	0 <__aeabi_read_tp>
    1634:	mov	r2, r0
    1638:	ldr	r3, [pc, #-3904]	; 700 <grib_init+0xec>
    163c:	ldr	r3, [r2, r3]
    1640:	add	r3, r3, #80	; 0x50
    1644:	ldr	r3, [r3]
    1648:	ldr	r1, [pc, #-3924]	; 6fc <grib_init+0xe8>
    164c:	mov	r0, r3
    1650:	bl	0 <coda_type_set_description>
    1654:	bl	0 <__aeabi_read_tp>
    1658:	mov	r2, r0
    165c:	ldr	r3, [pc, #-3940]	; 700 <grib_init+0xec>
    1660:	ldr	r3, [r2, r3]
    1664:	add	r4, r3, #84	; 0x54
    1668:	mov	r1, #2
    166c:	mov	r0, #7
    1670:	bl	0 <coda_type_number_new>
    1674:	mov	r3, r0
    1678:	str	r3, [r4]
    167c:	bl	0 <__aeabi_read_tp>
    1680:	mov	r2, r0
    1684:	ldr	r3, [pc, #-3980]	; 700 <grib_init+0xec>
    1688:	ldr	r3, [r2, r3]
    168c:	add	r3, r3, #84	; 0x54
    1690:	ldr	r3, [r3]
    1694:	ldr	r1, [fp, #-20]	; 0xffffffec
    1698:	mov	r0, r3
    169c:	bl	0 <coda_type_number_set_endianness>
    16a0:	bl	0 <__aeabi_read_tp>
    16a4:	mov	r2, r0
    16a8:	ldr	r3, [pc, #-4016]	; 700 <grib_init+0xec>
    16ac:	ldr	r3, [r2, r3]
    16b0:	add	r3, r3, #84	; 0x54
    16b4:	ldr	r3, [r3]
    16b8:	mov	r1, #3
    16bc:	mov	r0, r3
    16c0:	bl	0 <coda_type_set_read_type>
    16c4:	bl	0 <__aeabi_read_tp>
    16c8:	mov	r2, r0
    16cc:	ldr	r3, [pc, #-4052]	; 700 <grib_init+0xec>
    16d0:	ldr	r3, [r2, r3]
    16d4:	add	r3, r3, #84	; 0x54
    16d8:	ldr	r1, [r3]
    16dc:	mov	r2, #16
    16e0:	mov	r3, #0
    16e4:	mov	r0, r1
    16e8:	bl	0 <coda_type_set_bit_size>
    16ec:	bl	0 <__aeabi_read_tp>
    16f0:	mov	r2, r0
    16f4:	ldr	r3, [pc, #-4092]	; 700 <grib_init+0xec>
    16f8:	ldr	r3, [r2, r3]
    16fc:	add	r3, r3, #84	; 0x54
    1700:	ldr	r3, [r3]
    1704:	ldr	r1, [pc, #4088]	; 2704 <grib_init+0x20f0>
    1708:	mov	r0, r3
    170c:	bl	0 <coda_type_set_description>
    1710:	bl	0 <__aeabi_read_tp>
    1714:	mov	r2, r0
    1718:	ldr	r3, [pc, #4072]	; 2708 <grib_init+0x20f4>
    171c:	ldr	r3, [r2, r3]
    1720:	add	r4, r3, #88	; 0x58
    1724:	mov	r1, #2
    1728:	mov	r0, #7
    172c:	bl	0 <coda_type_number_new>
    1730:	mov	r3, r0
    1734:	str	r3, [r4]
    1738:	bl	0 <__aeabi_read_tp>
    173c:	mov	r2, r0
    1740:	ldr	r3, [pc, #4032]	; 2708 <grib_init+0x20f4>
    1744:	ldr	r3, [r2, r3]
    1748:	add	r3, r3, #88	; 0x58
    174c:	ldr	r3, [r3]
    1750:	ldr	r1, [fp, #-20]	; 0xffffffec
    1754:	mov	r0, r3
    1758:	bl	0 <coda_type_number_set_endianness>
    175c:	bl	0 <__aeabi_read_tp>
    1760:	mov	r2, r0
    1764:	ldr	r3, [pc, #3996]	; 2708 <grib_init+0x20f4>
    1768:	ldr	r3, [r2, r3]
    176c:	add	r3, r3, #88	; 0x58
    1770:	ldr	r3, [r3]
    1774:	mov	r1, #1
    1778:	mov	r0, r3
    177c:	bl	0 <coda_type_set_read_type>
    1780:	bl	0 <__aeabi_read_tp>
    1784:	mov	r2, r0
    1788:	ldr	r3, [pc, #3960]	; 2708 <grib_init+0x20f4>
    178c:	ldr	r3, [r2, r3]
    1790:	add	r3, r3, #88	; 0x58
    1794:	ldr	r1, [r3]
    1798:	mov	r2, #8
    179c:	mov	r3, #0
    17a0:	mov	r0, r1
    17a4:	bl	0 <coda_type_set_bit_size>
    17a8:	bl	0 <__aeabi_read_tp>
    17ac:	mov	r2, r0
    17b0:	ldr	r3, [pc, #3920]	; 2708 <grib_init+0x20f4>
    17b4:	ldr	r3, [r2, r3]
    17b8:	add	r3, r3, #88	; 0x58
    17bc:	ldr	r3, [r3]
    17c0:	ldr	r1, [pc, #3908]	; 270c <grib_init+0x20f8>
    17c4:	mov	r0, r3
    17c8:	bl	0 <coda_type_set_description>
    17cc:	bl	0 <__aeabi_read_tp>
    17d0:	mov	r2, r0
    17d4:	ldr	r3, [pc, #3884]	; 2708 <grib_init+0x20f4>
    17d8:	ldr	r3, [r2, r3]
    17dc:	add	r4, r3, #92	; 0x5c
    17e0:	mov	r1, #2
    17e4:	mov	r0, #7
    17e8:	bl	0 <coda_type_number_new>
    17ec:	mov	r3, r0
    17f0:	str	r3, [r4]
    17f4:	bl	0 <__aeabi_read_tp>
    17f8:	mov	r2, r0
    17fc:	ldr	r3, [pc, #3844]	; 2708 <grib_init+0x20f4>
    1800:	ldr	r3, [r2, r3]
    1804:	add	r3, r3, #92	; 0x5c
    1808:	ldr	r3, [r3]
    180c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1810:	mov	r0, r3
    1814:	bl	0 <coda_type_number_set_endianness>
    1818:	bl	0 <__aeabi_read_tp>
    181c:	mov	r2, r0
    1820:	ldr	r3, [pc, #3808]	; 2708 <grib_init+0x20f4>
    1824:	ldr	r3, [r2, r3]
    1828:	add	r3, r3, #92	; 0x5c
    182c:	ldr	r3, [r3]
    1830:	mov	r1, #1
    1834:	mov	r0, r3
    1838:	bl	0 <coda_type_set_read_type>
    183c:	bl	0 <__aeabi_read_tp>
    1840:	mov	r2, r0
    1844:	ldr	r3, [pc, #3772]	; 2708 <grib_init+0x20f4>
    1848:	ldr	r3, [r2, r3]
    184c:	add	r3, r3, #92	; 0x5c
    1850:	ldr	r1, [r3]
    1854:	mov	r2, #8
    1858:	mov	r3, #0
    185c:	mov	r0, r1
    1860:	bl	0 <coda_type_set_bit_size>
    1864:	bl	0 <__aeabi_read_tp>
    1868:	mov	r2, r0
    186c:	ldr	r3, [pc, #3732]	; 2708 <grib_init+0x20f4>
    1870:	ldr	r3, [r2, r3]
    1874:	add	r3, r3, #92	; 0x5c
    1878:	ldr	r3, [r3]
    187c:	ldr	r1, [pc, #3724]	; 2710 <grib_init+0x20fc>
    1880:	mov	r0, r3
    1884:	bl	0 <coda_type_set_description>
    1888:	bl	0 <__aeabi_read_tp>
    188c:	mov	r2, r0
    1890:	ldr	r3, [pc, #3696]	; 2708 <grib_init+0x20f4>
    1894:	ldr	r3, [r2, r3]
    1898:	add	r4, r3, #96	; 0x60
    189c:	mov	r1, #2
    18a0:	mov	r0, #7
    18a4:	bl	0 <coda_type_number_new>
    18a8:	mov	r3, r0
    18ac:	str	r3, [r4]
    18b0:	bl	0 <__aeabi_read_tp>
    18b4:	mov	r2, r0
    18b8:	ldr	r3, [pc, #3656]	; 2708 <grib_init+0x20f4>
    18bc:	ldr	r3, [r2, r3]
    18c0:	add	r3, r3, #96	; 0x60
    18c4:	ldr	r3, [r3]
    18c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    18cc:	mov	r0, r3
    18d0:	bl	0 <coda_type_number_set_endianness>
    18d4:	bl	0 <__aeabi_read_tp>
    18d8:	mov	r2, r0
    18dc:	ldr	r3, [pc, #3620]	; 2708 <grib_init+0x20f4>
    18e0:	ldr	r3, [r2, r3]
    18e4:	add	r3, r3, #96	; 0x60
    18e8:	ldr	r3, [r3]
    18ec:	mov	r1, #1
    18f0:	mov	r0, r3
    18f4:	bl	0 <coda_type_set_read_type>
    18f8:	bl	0 <__aeabi_read_tp>
    18fc:	mov	r2, r0
    1900:	ldr	r3, [pc, #3584]	; 2708 <grib_init+0x20f4>
    1904:	ldr	r3, [r2, r3]
    1908:	add	r3, r3, #96	; 0x60
    190c:	ldr	r1, [r3]
    1910:	mov	r2, #8
    1914:	mov	r3, #0
    1918:	mov	r0, r1
    191c:	bl	0 <coda_type_set_bit_size>
    1920:	bl	0 <__aeabi_read_tp>
    1924:	mov	r2, r0
    1928:	ldr	r3, [pc, #3544]	; 2708 <grib_init+0x20f4>
    192c:	ldr	r3, [r2, r3]
    1930:	add	r3, r3, #96	; 0x60
    1934:	ldr	r3, [r3]
    1938:	ldr	r1, [pc, #3540]	; 2714 <grib_init+0x2100>
    193c:	mov	r0, r3
    1940:	bl	0 <coda_type_set_description>
    1944:	bl	0 <__aeabi_read_tp>
    1948:	mov	r2, r0
    194c:	ldr	r3, [pc, #3508]	; 2708 <grib_init+0x20f4>
    1950:	ldr	r3, [r2, r3]
    1954:	add	r4, r3, #100	; 0x64
    1958:	mov	r1, #2
    195c:	mov	r0, #7
    1960:	bl	0 <coda_type_number_new>
    1964:	mov	r3, r0
    1968:	str	r3, [r4]
    196c:	bl	0 <__aeabi_read_tp>
    1970:	mov	r2, r0
    1974:	ldr	r3, [pc, #3468]	; 2708 <grib_init+0x20f4>
    1978:	ldr	r3, [r2, r3]
    197c:	add	r3, r3, #100	; 0x64
    1980:	ldr	r3, [r3]
    1984:	ldr	r1, [fp, #-20]	; 0xffffffec
    1988:	mov	r0, r3
    198c:	bl	0 <coda_type_number_set_endianness>
    1990:	bl	0 <__aeabi_read_tp>
    1994:	mov	r2, r0
    1998:	ldr	r3, [pc, #3432]	; 2708 <grib_init+0x20f4>
    199c:	ldr	r3, [r2, r3]
    19a0:	add	r3, r3, #100	; 0x64
    19a4:	ldr	r3, [r3]
    19a8:	mov	r1, #2
    19ac:	mov	r0, r3
    19b0:	bl	0 <coda_type_set_read_type>
    19b4:	bl	0 <__aeabi_read_tp>
    19b8:	mov	r2, r0
    19bc:	ldr	r3, [pc, #3396]	; 2708 <grib_init+0x20f4>
    19c0:	ldr	r3, [r2, r3]
    19c4:	add	r3, r3, #100	; 0x64
    19c8:	ldr	r1, [r3]
    19cc:	mov	r2, #16
    19d0:	mov	r3, #0
    19d4:	mov	r0, r1
    19d8:	bl	0 <coda_type_set_bit_size>
    19dc:	bl	0 <__aeabi_read_tp>
    19e0:	mov	r2, r0
    19e4:	ldr	r3, [pc, #3356]	; 2708 <grib_init+0x20f4>
    19e8:	ldr	r3, [r2, r3]
    19ec:	add	r3, r3, #100	; 0x64
    19f0:	ldr	r3, [r3]
    19f4:	ldr	r1, [pc, #3356]	; 2718 <grib_init+0x2104>
    19f8:	mov	r0, r3
    19fc:	bl	0 <coda_type_set_description>
    1a00:	bl	0 <__aeabi_read_tp>
    1a04:	mov	r2, r0
    1a08:	ldr	r3, [pc, #3320]	; 2708 <grib_init+0x20f4>
    1a0c:	ldr	r3, [r2, r3]
    1a10:	add	r4, r3, #104	; 0x68
    1a14:	mov	r1, #2
    1a18:	mov	r0, #7
    1a1c:	bl	0 <coda_type_number_new>
    1a20:	mov	r3, r0
    1a24:	str	r3, [r4]
    1a28:	bl	0 <__aeabi_read_tp>
    1a2c:	mov	r2, r0
    1a30:	ldr	r3, [pc, #3280]	; 2708 <grib_init+0x20f4>
    1a34:	ldr	r3, [r2, r3]
    1a38:	add	r3, r3, #104	; 0x68
    1a3c:	ldr	r3, [r3]
    1a40:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a44:	mov	r0, r3
    1a48:	bl	0 <coda_type_number_set_endianness>
    1a4c:	bl	0 <__aeabi_read_tp>
    1a50:	mov	r2, r0
    1a54:	ldr	r3, [pc, #3244]	; 2708 <grib_init+0x20f4>
    1a58:	ldr	r3, [r2, r3]
    1a5c:	add	r3, r3, #104	; 0x68
    1a60:	ldr	r3, [r3]
    1a64:	mov	r1, #1
    1a68:	mov	r0, r3
    1a6c:	bl	0 <coda_type_set_read_type>
    1a70:	bl	0 <__aeabi_read_tp>
    1a74:	mov	r2, r0
    1a78:	ldr	r3, [pc, #3208]	; 2708 <grib_init+0x20f4>
    1a7c:	ldr	r3, [r2, r3]
    1a80:	add	r3, r3, #104	; 0x68
    1a84:	ldr	r1, [r3]
    1a88:	mov	r2, #8
    1a8c:	mov	r3, #0
    1a90:	mov	r0, r1
    1a94:	bl	0 <coda_type_set_bit_size>
    1a98:	bl	0 <__aeabi_read_tp>
    1a9c:	mov	r2, r0
    1aa0:	ldr	r3, [pc, #3168]	; 2708 <grib_init+0x20f4>
    1aa4:	ldr	r3, [r2, r3]
    1aa8:	add	r3, r3, #104	; 0x68
    1aac:	ldr	r3, [r3]
    1ab0:	ldr	r1, [pc, #3172]	; 271c <grib_init+0x2108>
    1ab4:	mov	r0, r3
    1ab8:	bl	0 <coda_type_set_description>
    1abc:	bl	0 <__aeabi_read_tp>
    1ac0:	mov	r2, r0
    1ac4:	ldr	r3, [pc, #3132]	; 2708 <grib_init+0x20f4>
    1ac8:	ldr	r3, [r2, r3]
    1acc:	add	r4, r3, #108	; 0x6c
    1ad0:	mov	r1, #2
    1ad4:	mov	r0, #7
    1ad8:	bl	0 <coda_type_number_new>
    1adc:	mov	r3, r0
    1ae0:	str	r3, [r4]
    1ae4:	bl	0 <__aeabi_read_tp>
    1ae8:	mov	r2, r0
    1aec:	ldr	r3, [pc, #3092]	; 2708 <grib_init+0x20f4>
    1af0:	ldr	r3, [r2, r3]
    1af4:	add	r3, r3, #108	; 0x6c
    1af8:	ldr	r3, [r3]
    1afc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b00:	mov	r0, r3
    1b04:	bl	0 <coda_type_number_set_endianness>
    1b08:	bl	0 <__aeabi_read_tp>
    1b0c:	mov	r2, r0
    1b10:	ldr	r3, [pc, #3056]	; 2708 <grib_init+0x20f4>
    1b14:	ldr	r3, [r2, r3]
    1b18:	add	r3, r3, #108	; 0x6c
    1b1c:	ldr	r3, [r3]
    1b20:	mov	r1, #1
    1b24:	mov	r0, r3
    1b28:	bl	0 <coda_type_set_read_type>
    1b2c:	bl	0 <__aeabi_read_tp>
    1b30:	mov	r2, r0
    1b34:	ldr	r3, [pc, #3020]	; 2708 <grib_init+0x20f4>
    1b38:	ldr	r3, [r2, r3]
    1b3c:	add	r3, r3, #108	; 0x6c
    1b40:	ldr	r1, [r3]
    1b44:	mov	r2, #8
    1b48:	mov	r3, #0
    1b4c:	mov	r0, r1
    1b50:	bl	0 <coda_type_set_bit_size>
    1b54:	bl	0 <__aeabi_read_tp>
    1b58:	mov	r2, r0
    1b5c:	ldr	r3, [pc, #2980]	; 2708 <grib_init+0x20f4>
    1b60:	ldr	r3, [r2, r3]
    1b64:	add	r3, r3, #108	; 0x6c
    1b68:	ldr	r3, [r3]
    1b6c:	ldr	r1, [pc, #2988]	; 2720 <grib_init+0x210c>
    1b70:	mov	r0, r3
    1b74:	bl	0 <coda_type_set_description>
    1b78:	bl	0 <__aeabi_read_tp>
    1b7c:	mov	r2, r0
    1b80:	ldr	r3, [pc, #2944]	; 2708 <grib_init+0x20f4>
    1b84:	ldr	r3, [r2, r3]
    1b88:	add	r4, r3, #112	; 0x70
    1b8c:	mov	r1, #2
    1b90:	mov	r0, #7
    1b94:	bl	0 <coda_type_number_new>
    1b98:	mov	r3, r0
    1b9c:	str	r3, [r4]
    1ba0:	bl	0 <__aeabi_read_tp>
    1ba4:	mov	r2, r0
    1ba8:	ldr	r3, [pc, #2904]	; 2708 <grib_init+0x20f4>
    1bac:	ldr	r3, [r2, r3]
    1bb0:	add	r3, r3, #112	; 0x70
    1bb4:	ldr	r3, [r3]
    1bb8:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bbc:	mov	r0, r3
    1bc0:	bl	0 <coda_type_number_set_endianness>
    1bc4:	bl	0 <__aeabi_read_tp>
    1bc8:	mov	r2, r0
    1bcc:	ldr	r3, [pc, #2868]	; 2708 <grib_init+0x20f4>
    1bd0:	ldr	r3, [r2, r3]
    1bd4:	add	r3, r3, #112	; 0x70
    1bd8:	ldr	r3, [r3]
    1bdc:	mov	r1, #1
    1be0:	mov	r0, r3
    1be4:	bl	0 <coda_type_set_read_type>
    1be8:	bl	0 <__aeabi_read_tp>
    1bec:	mov	r2, r0
    1bf0:	ldr	r3, [pc, #2832]	; 2708 <grib_init+0x20f4>
    1bf4:	ldr	r3, [r2, r3]
    1bf8:	add	r3, r3, #112	; 0x70
    1bfc:	ldr	r1, [r3]
    1c00:	mov	r2, #8
    1c04:	mov	r3, #0
    1c08:	mov	r0, r1
    1c0c:	bl	0 <coda_type_set_bit_size>
    1c10:	bl	0 <__aeabi_read_tp>
    1c14:	mov	r2, r0
    1c18:	ldr	r3, [pc, #2792]	; 2708 <grib_init+0x20f4>
    1c1c:	ldr	r3, [r2, r3]
    1c20:	add	r3, r3, #112	; 0x70
    1c24:	ldr	r3, [r3]
    1c28:	ldr	r1, [pc, #2804]	; 2724 <grib_init+0x2110>
    1c2c:	mov	r0, r3
    1c30:	bl	0 <coda_type_set_description>
    1c34:	bl	0 <__aeabi_read_tp>
    1c38:	mov	r2, r0
    1c3c:	ldr	r3, [pc, #2756]	; 2708 <grib_init+0x20f4>
    1c40:	ldr	r3, [r2, r3]
    1c44:	add	r4, r3, #116	; 0x74
    1c48:	mov	r1, #2
    1c4c:	mov	r0, #7
    1c50:	bl	0 <coda_type_number_new>
    1c54:	mov	r3, r0
    1c58:	str	r3, [r4]
    1c5c:	bl	0 <__aeabi_read_tp>
    1c60:	mov	r2, r0
    1c64:	ldr	r3, [pc, #2716]	; 2708 <grib_init+0x20f4>
    1c68:	ldr	r3, [r2, r3]
    1c6c:	add	r3, r3, #116	; 0x74
    1c70:	ldr	r3, [r3]
    1c74:	ldr	r1, [fp, #-20]	; 0xffffffec
    1c78:	mov	r0, r3
    1c7c:	bl	0 <coda_type_number_set_endianness>
    1c80:	bl	0 <__aeabi_read_tp>
    1c84:	mov	r2, r0
    1c88:	ldr	r3, [pc, #2680]	; 2708 <grib_init+0x20f4>
    1c8c:	ldr	r3, [r2, r3]
    1c90:	add	r3, r3, #116	; 0x74
    1c94:	ldr	r3, [r3]
    1c98:	mov	r1, #1
    1c9c:	mov	r0, r3
    1ca0:	bl	0 <coda_type_set_read_type>
    1ca4:	bl	0 <__aeabi_read_tp>
    1ca8:	mov	r2, r0
    1cac:	ldr	r3, [pc, #2644]	; 2708 <grib_init+0x20f4>
    1cb0:	ldr	r3, [r2, r3]
    1cb4:	add	r3, r3, #116	; 0x74
    1cb8:	ldr	r1, [r3]
    1cbc:	mov	r2, #8
    1cc0:	mov	r3, #0
    1cc4:	mov	r0, r1
    1cc8:	bl	0 <coda_type_set_bit_size>
    1ccc:	bl	0 <__aeabi_read_tp>
    1cd0:	mov	r2, r0
    1cd4:	ldr	r3, [pc, #2604]	; 2708 <grib_init+0x20f4>
    1cd8:	ldr	r3, [r2, r3]
    1cdc:	add	r3, r3, #116	; 0x74
    1ce0:	ldr	r3, [r3]
    1ce4:	ldr	r1, [pc, #2620]	; 2728 <grib_init+0x2114>
    1ce8:	mov	r0, r3
    1cec:	bl	0 <coda_type_set_description>
    1cf0:	bl	0 <__aeabi_read_tp>
    1cf4:	mov	r2, r0
    1cf8:	ldr	r3, [pc, #2568]	; 2708 <grib_init+0x20f4>
    1cfc:	ldr	r3, [r2, r3]
    1d00:	add	r4, r3, #120	; 0x78
    1d04:	mov	r1, #2
    1d08:	mov	r0, #7
    1d0c:	bl	0 <coda_type_number_new>
    1d10:	mov	r3, r0
    1d14:	str	r3, [r4]
    1d18:	bl	0 <__aeabi_read_tp>
    1d1c:	mov	r2, r0
    1d20:	ldr	r3, [pc, #2528]	; 2708 <grib_init+0x20f4>
    1d24:	ldr	r3, [r2, r3]
    1d28:	add	r3, r3, #120	; 0x78
    1d2c:	ldr	r3, [r3]
    1d30:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d34:	mov	r0, r3
    1d38:	bl	0 <coda_type_number_set_endianness>
    1d3c:	bl	0 <__aeabi_read_tp>
    1d40:	mov	r2, r0
    1d44:	ldr	r3, [pc, #2492]	; 2708 <grib_init+0x20f4>
    1d48:	ldr	r3, [r2, r3]
    1d4c:	add	r3, r3, #120	; 0x78
    1d50:	ldr	r3, [r3]
    1d54:	mov	r1, #1
    1d58:	mov	r0, r3
    1d5c:	bl	0 <coda_type_set_read_type>
    1d60:	bl	0 <__aeabi_read_tp>
    1d64:	mov	r2, r0
    1d68:	ldr	r3, [pc, #2456]	; 2708 <grib_init+0x20f4>
    1d6c:	ldr	r3, [r2, r3]
    1d70:	add	r3, r3, #120	; 0x78
    1d74:	ldr	r1, [r3]
    1d78:	mov	r2, #8
    1d7c:	mov	r3, #0
    1d80:	mov	r0, r1
    1d84:	bl	0 <coda_type_set_bit_size>
    1d88:	bl	0 <__aeabi_read_tp>
    1d8c:	mov	r2, r0
    1d90:	ldr	r3, [pc, #2416]	; 2708 <grib_init+0x20f4>
    1d94:	ldr	r3, [r2, r3]
    1d98:	add	r3, r3, #120	; 0x78
    1d9c:	ldr	r3, [r3]
    1da0:	ldr	r1, [pc, #2436]	; 272c <grib_init+0x2118>
    1da4:	mov	r0, r3
    1da8:	bl	0 <coda_type_set_description>
    1dac:	bl	0 <__aeabi_read_tp>
    1db0:	mov	r2, r0
    1db4:	ldr	r3, [pc, #2380]	; 2708 <grib_init+0x20f4>
    1db8:	ldr	r3, [r2, r3]
    1dbc:	add	r4, r3, #124	; 0x7c
    1dc0:	mov	r1, #2
    1dc4:	mov	r0, #7
    1dc8:	bl	0 <coda_type_number_new>
    1dcc:	mov	r3, r0
    1dd0:	str	r3, [r4]
    1dd4:	bl	0 <__aeabi_read_tp>
    1dd8:	mov	r2, r0
    1ddc:	ldr	r3, [pc, #2340]	; 2708 <grib_init+0x20f4>
    1de0:	ldr	r3, [r2, r3]
    1de4:	add	r3, r3, #124	; 0x7c
    1de8:	ldr	r3, [r3]
    1dec:	ldr	r1, [fp, #-20]	; 0xffffffec
    1df0:	mov	r0, r3
    1df4:	bl	0 <coda_type_number_set_endianness>
    1df8:	bl	0 <__aeabi_read_tp>
    1dfc:	mov	r2, r0
    1e00:	ldr	r3, [pc, #2304]	; 2708 <grib_init+0x20f4>
    1e04:	ldr	r3, [r2, r3]
    1e08:	add	r3, r3, #124	; 0x7c
    1e0c:	ldr	r3, [r3]
    1e10:	mov	r1, #1
    1e14:	mov	r0, r3
    1e18:	bl	0 <coda_type_set_read_type>
    1e1c:	bl	0 <__aeabi_read_tp>
    1e20:	mov	r2, r0
    1e24:	ldr	r3, [pc, #2268]	; 2708 <grib_init+0x20f4>
    1e28:	ldr	r3, [r2, r3]
    1e2c:	add	r3, r3, #124	; 0x7c
    1e30:	ldr	r1, [r3]
    1e34:	mov	r2, #8
    1e38:	mov	r3, #0
    1e3c:	mov	r0, r1
    1e40:	bl	0 <coda_type_set_bit_size>
    1e44:	bl	0 <__aeabi_read_tp>
    1e48:	mov	r2, r0
    1e4c:	ldr	r3, [pc, #2228]	; 2708 <grib_init+0x20f4>
    1e50:	ldr	r3, [r2, r3]
    1e54:	add	r3, r3, #124	; 0x7c
    1e58:	ldr	r3, [r3]
    1e5c:	ldr	r1, [pc, #2252]	; 2730 <grib_init+0x211c>
    1e60:	mov	r0, r3
    1e64:	bl	0 <coda_type_set_description>
    1e68:	bl	0 <__aeabi_read_tp>
    1e6c:	mov	r2, r0
    1e70:	ldr	r3, [pc, #2192]	; 2708 <grib_init+0x20f4>
    1e74:	ldr	r3, [r2, r3]
    1e78:	add	r4, r3, #128	; 0x80
    1e7c:	mov	r0, #7
    1e80:	bl	0 <coda_type_raw_new>
    1e84:	mov	r3, r0
    1e88:	str	r3, [r4]
    1e8c:	bl	0 <__aeabi_read_tp>
    1e90:	mov	r2, r0
    1e94:	ldr	r3, [pc, #2156]	; 2708 <grib_init+0x20f4>
    1e98:	ldr	r3, [r2, r3]
    1e9c:	add	r3, r3, #128	; 0x80
    1ea0:	ldr	r3, [r3]
    1ea4:	ldr	r1, [pc, #2184]	; 2734 <grib_init+0x2120>
    1ea8:	mov	r0, r3
    1eac:	bl	0 <coda_type_set_description>
    1eb0:	bl	0 <__aeabi_read_tp>
    1eb4:	mov	r2, r0
    1eb8:	ldr	r3, [pc, #2120]	; 2708 <grib_init+0x20f4>
    1ebc:	ldr	r3, [r2, r3]
    1ec0:	add	r4, r3, #132	; 0x84
    1ec4:	mov	r1, #2
    1ec8:	mov	r0, #7
    1ecc:	bl	0 <coda_type_number_new>
    1ed0:	mov	r3, r0
    1ed4:	str	r3, [r4]
    1ed8:	bl	0 <__aeabi_read_tp>
    1edc:	mov	r2, r0
    1ee0:	ldr	r3, [pc, #2080]	; 2708 <grib_init+0x20f4>
    1ee4:	ldr	r3, [r2, r3]
    1ee8:	add	r3, r3, #132	; 0x84
    1eec:	ldr	r3, [r3]
    1ef0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1ef4:	mov	r0, r3
    1ef8:	bl	0 <coda_type_number_set_endianness>
    1efc:	bl	0 <__aeabi_read_tp>
    1f00:	mov	r2, r0
    1f04:	ldr	r3, [pc, #2044]	; 2708 <grib_init+0x20f4>
    1f08:	ldr	r3, [r2, r3]
    1f0c:	add	r3, r3, #132	; 0x84
    1f10:	ldr	r3, [r3]
    1f14:	mov	r1, #1
    1f18:	mov	r0, r3
    1f1c:	bl	0 <coda_type_set_read_type>
    1f20:	bl	0 <__aeabi_read_tp>
    1f24:	mov	r2, r0
    1f28:	ldr	r3, [pc, #2008]	; 2708 <grib_init+0x20f4>
    1f2c:	ldr	r3, [r2, r3]
    1f30:	add	r3, r3, #132	; 0x84
    1f34:	ldr	r1, [r3]
    1f38:	mov	r2, #8
    1f3c:	mov	r3, #0
    1f40:	mov	r0, r1
    1f44:	bl	0 <coda_type_set_bit_size>
    1f48:	bl	0 <__aeabi_read_tp>
    1f4c:	mov	r2, r0
    1f50:	ldr	r3, [pc, #1968]	; 2708 <grib_init+0x20f4>
    1f54:	ldr	r3, [r2, r3]
    1f58:	add	r3, r3, #132	; 0x84
    1f5c:	ldr	r3, [r3]
    1f60:	ldr	r1, [pc, #2000]	; 2738 <grib_init+0x2124>
    1f64:	mov	r0, r3
    1f68:	bl	0 <coda_type_set_description>
    1f6c:	bl	0 <__aeabi_read_tp>
    1f70:	mov	r2, r0
    1f74:	ldr	r3, [pc, #1932]	; 2708 <grib_init+0x20f4>
    1f78:	ldr	r3, [r2, r3]
    1f7c:	add	r4, r3, #136	; 0x88
    1f80:	mov	r1, #2
    1f84:	mov	r0, #7
    1f88:	bl	0 <coda_type_number_new>
    1f8c:	mov	r3, r0
    1f90:	str	r3, [r4]
    1f94:	bl	0 <__aeabi_read_tp>
    1f98:	mov	r2, r0
    1f9c:	ldr	r3, [pc, #1892]	; 2708 <grib_init+0x20f4>
    1fa0:	ldr	r3, [r2, r3]
    1fa4:	add	r3, r3, #136	; 0x88
    1fa8:	ldr	r3, [r3]
    1fac:	ldr	r1, [fp, #-20]	; 0xffffffec
    1fb0:	mov	r0, r3
    1fb4:	bl	0 <coda_type_number_set_endianness>
    1fb8:	bl	0 <__aeabi_read_tp>
    1fbc:	mov	r2, r0
    1fc0:	ldr	r3, [pc, #1856]	; 2708 <grib_init+0x20f4>
    1fc4:	ldr	r3, [r2, r3]
    1fc8:	add	r3, r3, #136	; 0x88
    1fcc:	ldr	r3, [r3]
    1fd0:	mov	r1, #1
    1fd4:	mov	r0, r3
    1fd8:	bl	0 <coda_type_set_read_type>
    1fdc:	bl	0 <__aeabi_read_tp>
    1fe0:	mov	r2, r0
    1fe4:	ldr	r3, [pc, #1820]	; 2708 <grib_init+0x20f4>
    1fe8:	ldr	r3, [r2, r3]
    1fec:	add	r3, r3, #136	; 0x88
    1ff0:	ldr	r1, [r3]
    1ff4:	mov	r2, #8
    1ff8:	mov	r3, #0
    1ffc:	mov	r0, r1
    2000:	bl	0 <coda_type_set_bit_size>
    2004:	bl	0 <__aeabi_read_tp>
    2008:	mov	r2, r0
    200c:	ldr	r3, [pc, #1780]	; 2708 <grib_init+0x20f4>
    2010:	ldr	r3, [r2, r3]
    2014:	add	r3, r3, #136	; 0x88
    2018:	ldr	r3, [r3]
    201c:	ldr	r1, [pc, #1816]	; 273c <grib_init+0x2128>
    2020:	mov	r0, r3
    2024:	bl	0 <coda_type_set_description>
    2028:	bl	0 <__aeabi_read_tp>
    202c:	mov	r2, r0
    2030:	ldr	r3, [pc, #1744]	; 2708 <grib_init+0x20f4>
    2034:	ldr	r3, [r2, r3]
    2038:	add	r4, r3, #140	; 0x8c
    203c:	mov	r1, #2
    2040:	mov	r0, #7
    2044:	bl	0 <coda_type_number_new>
    2048:	mov	r3, r0
    204c:	str	r3, [r4]
    2050:	bl	0 <__aeabi_read_tp>
    2054:	mov	r2, r0
    2058:	ldr	r3, [pc, #1704]	; 2708 <grib_init+0x20f4>
    205c:	ldr	r3, [r2, r3]
    2060:	add	r3, r3, #140	; 0x8c
    2064:	ldr	r3, [r3]
    2068:	ldr	r1, [fp, #-20]	; 0xffffffec
    206c:	mov	r0, r3
    2070:	bl	0 <coda_type_number_set_endianness>
    2074:	bl	0 <__aeabi_read_tp>
    2078:	mov	r2, r0
    207c:	ldr	r3, [pc, #1668]	; 2708 <grib_init+0x20f4>
    2080:	ldr	r3, [r2, r3]
    2084:	add	r3, r3, #140	; 0x8c
    2088:	ldr	r3, [r3]
    208c:	mov	r1, #1
    2090:	mov	r0, r3
    2094:	bl	0 <coda_type_set_read_type>
    2098:	bl	0 <__aeabi_read_tp>
    209c:	mov	r2, r0
    20a0:	ldr	r3, [pc, #1632]	; 2708 <grib_init+0x20f4>
    20a4:	ldr	r3, [r2, r3]
    20a8:	add	r3, r3, #140	; 0x8c
    20ac:	ldr	r1, [r3]
    20b0:	mov	r2, #8
    20b4:	mov	r3, #0
    20b8:	mov	r0, r1
    20bc:	bl	0 <coda_type_set_bit_size>
    20c0:	bl	0 <__aeabi_read_tp>
    20c4:	mov	r2, r0
    20c8:	ldr	r3, [pc, #1592]	; 2708 <grib_init+0x20f4>
    20cc:	ldr	r3, [r2, r3]
    20d0:	add	r4, r3, #144	; 0x90
    20d4:	mov	r1, #2
    20d8:	mov	r0, #7
    20dc:	bl	0 <coda_type_number_new>
    20e0:	mov	r3, r0
    20e4:	str	r3, [r4]
    20e8:	bl	0 <__aeabi_read_tp>
    20ec:	mov	r2, r0
    20f0:	ldr	r3, [pc, #1552]	; 2708 <grib_init+0x20f4>
    20f4:	ldr	r3, [r2, r3]
    20f8:	add	r3, r3, #144	; 0x90
    20fc:	ldr	r3, [r3]
    2100:	ldr	r1, [fp, #-20]	; 0xffffffec
    2104:	mov	r0, r3
    2108:	bl	0 <coda_type_number_set_endianness>
    210c:	bl	0 <__aeabi_read_tp>
    2110:	mov	r2, r0
    2114:	ldr	r3, [pc, #1516]	; 2708 <grib_init+0x20f4>
    2118:	ldr	r3, [r2, r3]
    211c:	add	r3, r3, #144	; 0x90
    2120:	ldr	r3, [r3]
    2124:	mov	r1, #1
    2128:	mov	r0, r3
    212c:	bl	0 <coda_type_set_read_type>
    2130:	bl	0 <__aeabi_read_tp>
    2134:	mov	r2, r0
    2138:	ldr	r3, [pc, #1480]	; 2708 <grib_init+0x20f4>
    213c:	ldr	r3, [r2, r3]
    2140:	add	r3, r3, #144	; 0x90
    2144:	ldr	r1, [r3]
    2148:	mov	r2, #8
    214c:	mov	r3, #0
    2150:	mov	r0, r1
    2154:	bl	0 <coda_type_set_bit_size>
    2158:	bl	0 <__aeabi_read_tp>
    215c:	mov	r2, r0
    2160:	ldr	r3, [pc, #1440]	; 2708 <grib_init+0x20f4>
    2164:	ldr	r3, [r2, r3]
    2168:	add	r4, r3, #148	; 0x94
    216c:	mov	r1, #2
    2170:	mov	r0, #7
    2174:	bl	0 <coda_type_number_new>
    2178:	mov	r3, r0
    217c:	str	r3, [r4]
    2180:	bl	0 <__aeabi_read_tp>
    2184:	mov	r2, r0
    2188:	ldr	r3, [pc, #1400]	; 2708 <grib_init+0x20f4>
    218c:	ldr	r3, [r2, r3]
    2190:	add	r3, r3, #148	; 0x94
    2194:	ldr	r3, [r3]
    2198:	ldr	r1, [fp, #-20]	; 0xffffffec
    219c:	mov	r0, r3
    21a0:	bl	0 <coda_type_number_set_endianness>
    21a4:	bl	0 <__aeabi_read_tp>
    21a8:	mov	r2, r0
    21ac:	ldr	r3, [pc, #1364]	; 2708 <grib_init+0x20f4>
    21b0:	ldr	r3, [r2, r3]
    21b4:	add	r3, r3, #148	; 0x94
    21b8:	ldr	r3, [r3]
    21bc:	mov	r1, #5
    21c0:	mov	r0, r3
    21c4:	bl	0 <coda_type_set_read_type>
    21c8:	bl	0 <__aeabi_read_tp>
    21cc:	mov	r2, r0
    21d0:	ldr	r3, [pc, #1328]	; 2708 <grib_init+0x20f4>
    21d4:	ldr	r3, [r2, r3]
    21d8:	add	r3, r3, #148	; 0x94
    21dc:	ldr	r1, [r3]
    21e0:	mov	r2, #32
    21e4:	mov	r3, #0
    21e8:	mov	r0, r1
    21ec:	bl	0 <coda_type_set_bit_size>
    21f0:	bl	0 <__aeabi_read_tp>
    21f4:	mov	r2, r0
    21f8:	ldr	r3, [pc, #1288]	; 2708 <grib_init+0x20f4>
    21fc:	ldr	r3, [r2, r3]
    2200:	add	r4, r3, #152	; 0x98
    2204:	mov	r1, #2
    2208:	mov	r0, #7
    220c:	bl	0 <coda_type_number_new>
    2210:	mov	r3, r0
    2214:	str	r3, [r4]
    2218:	bl	0 <__aeabi_read_tp>
    221c:	mov	r2, r0
    2220:	ldr	r3, [pc, #1248]	; 2708 <grib_init+0x20f4>
    2224:	ldr	r3, [r2, r3]
    2228:	add	r3, r3, #152	; 0x98
    222c:	ldr	r3, [r3]
    2230:	ldr	r1, [fp, #-20]	; 0xffffffec
    2234:	mov	r0, r3
    2238:	bl	0 <coda_type_number_set_endianness>
    223c:	bl	0 <__aeabi_read_tp>
    2240:	mov	r2, r0
    2244:	ldr	r3, [pc, #1212]	; 2708 <grib_init+0x20f4>
    2248:	ldr	r3, [r2, r3]
    224c:	add	r3, r3, #152	; 0x98
    2250:	ldr	r3, [r3]
    2254:	mov	r1, #1
    2258:	mov	r0, r3
    225c:	bl	0 <coda_type_set_read_type>
    2260:	bl	0 <__aeabi_read_tp>
    2264:	mov	r2, r0
    2268:	ldr	r3, [pc, #1176]	; 2708 <grib_init+0x20f4>
    226c:	ldr	r3, [r2, r3]
    2270:	add	r3, r3, #152	; 0x98
    2274:	ldr	r1, [r3]
    2278:	mov	r2, #8
    227c:	mov	r3, #0
    2280:	mov	r0, r1
    2284:	bl	0 <coda_type_set_bit_size>
    2288:	bl	0 <__aeabi_read_tp>
    228c:	mov	r2, r0
    2290:	ldr	r3, [pc, #1136]	; 2708 <grib_init+0x20f4>
    2294:	ldr	r3, [r2, r3]
    2298:	add	r4, r3, #156	; 0x9c
    229c:	mov	r1, #2
    22a0:	mov	r0, #7
    22a4:	bl	0 <coda_type_number_new>
    22a8:	mov	r3, r0
    22ac:	str	r3, [r4]
    22b0:	bl	0 <__aeabi_read_tp>
    22b4:	mov	r2, r0
    22b8:	ldr	r3, [pc, #1096]	; 2708 <grib_init+0x20f4>
    22bc:	ldr	r3, [r2, r3]
    22c0:	add	r3, r3, #156	; 0x9c
    22c4:	ldr	r3, [r3]
    22c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    22cc:	mov	r0, r3
    22d0:	bl	0 <coda_type_number_set_endianness>
    22d4:	bl	0 <__aeabi_read_tp>
    22d8:	mov	r2, r0
    22dc:	ldr	r3, [pc, #1060]	; 2708 <grib_init+0x20f4>
    22e0:	ldr	r3, [r2, r3]
    22e4:	add	r3, r3, #156	; 0x9c
    22e8:	ldr	r3, [r3]
    22ec:	mov	r1, #5
    22f0:	mov	r0, r3
    22f4:	bl	0 <coda_type_set_read_type>
    22f8:	bl	0 <__aeabi_read_tp>
    22fc:	mov	r2, r0
    2300:	ldr	r3, [pc, #1024]	; 2708 <grib_init+0x20f4>
    2304:	ldr	r3, [r2, r3]
    2308:	add	r3, r3, #156	; 0x9c
    230c:	ldr	r1, [r3]
    2310:	mov	r2, #32
    2314:	mov	r3, #0
    2318:	mov	r0, r1
    231c:	bl	0 <coda_type_set_bit_size>
    2320:	bl	0 <__aeabi_read_tp>
    2324:	mov	r2, r0
    2328:	ldr	r3, [pc, #984]	; 2708 <grib_init+0x20f4>
    232c:	ldr	r3, [r2, r3]
    2330:	add	r4, r3, #160	; 0xa0
    2334:	mov	r1, #2
    2338:	mov	r0, #7
    233c:	bl	0 <coda_type_number_new>
    2340:	mov	r3, r0
    2344:	str	r3, [r4]
    2348:	bl	0 <__aeabi_read_tp>
    234c:	mov	r2, r0
    2350:	ldr	r3, [pc, #944]	; 2708 <grib_init+0x20f4>
    2354:	ldr	r3, [r2, r3]
    2358:	add	r3, r3, #160	; 0xa0
    235c:	ldr	r3, [r3]
    2360:	ldr	r1, [fp, #-20]	; 0xffffffec
    2364:	mov	r0, r3
    2368:	bl	0 <coda_type_number_set_endianness>
    236c:	bl	0 <__aeabi_read_tp>
    2370:	mov	r2, r0
    2374:	ldr	r3, [pc, #908]	; 2708 <grib_init+0x20f4>
    2378:	ldr	r3, [r2, r3]
    237c:	add	r3, r3, #160	; 0xa0
    2380:	ldr	r3, [r3]
    2384:	mov	r1, #1
    2388:	mov	r0, r3
    238c:	bl	0 <coda_type_set_read_type>
    2390:	bl	0 <__aeabi_read_tp>
    2394:	mov	r2, r0
    2398:	ldr	r3, [pc, #872]	; 2708 <grib_init+0x20f4>
    239c:	ldr	r3, [r2, r3]
    23a0:	add	r3, r3, #160	; 0xa0
    23a4:	ldr	r1, [r3]
    23a8:	mov	r2, #8
    23ac:	mov	r3, #0
    23b0:	mov	r0, r1
    23b4:	bl	0 <coda_type_set_bit_size>
    23b8:	bl	0 <__aeabi_read_tp>
    23bc:	mov	r2, r0
    23c0:	ldr	r3, [pc, #832]	; 2708 <grib_init+0x20f4>
    23c4:	ldr	r3, [r2, r3]
    23c8:	add	r4, r3, #164	; 0xa4
    23cc:	mov	r1, #2
    23d0:	mov	r0, #7
    23d4:	bl	0 <coda_type_number_new>
    23d8:	mov	r3, r0
    23dc:	str	r3, [r4]
    23e0:	bl	0 <__aeabi_read_tp>
    23e4:	mov	r2, r0
    23e8:	ldr	r3, [pc, #792]	; 2708 <grib_init+0x20f4>
    23ec:	ldr	r3, [r2, r3]
    23f0:	add	r3, r3, #164	; 0xa4
    23f4:	ldr	r3, [r3]
    23f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    23fc:	mov	r0, r3
    2400:	bl	0 <coda_type_number_set_endianness>
    2404:	bl	0 <__aeabi_read_tp>
    2408:	mov	r2, r0
    240c:	ldr	r3, [pc, #756]	; 2708 <grib_init+0x20f4>
    2410:	ldr	r3, [r2, r3]
    2414:	add	r3, r3, #164	; 0xa4
    2418:	ldr	r3, [r3]
    241c:	mov	r1, #5
    2420:	mov	r0, r3
    2424:	bl	0 <coda_type_set_read_type>
    2428:	bl	0 <__aeabi_read_tp>
    242c:	mov	r2, r0
    2430:	ldr	r3, [pc, #720]	; 2708 <grib_init+0x20f4>
    2434:	ldr	r3, [r2, r3]
    2438:	add	r3, r3, #164	; 0xa4
    243c:	ldr	r1, [r3]
    2440:	mov	r2, #32
    2444:	mov	r3, #0
    2448:	mov	r0, r1
    244c:	bl	0 <coda_type_set_bit_size>
    2450:	bl	0 <__aeabi_read_tp>
    2454:	mov	r2, r0
    2458:	ldr	r3, [pc, #680]	; 2708 <grib_init+0x20f4>
    245c:	ldr	r3, [r2, r3]
    2460:	add	r4, r3, #168	; 0xa8
    2464:	mov	r1, #2
    2468:	mov	r0, #7
    246c:	bl	0 <coda_type_number_new>
    2470:	mov	r3, r0
    2474:	str	r3, [r4]
    2478:	bl	0 <__aeabi_read_tp>
    247c:	mov	r2, r0
    2480:	ldr	r3, [pc, #640]	; 2708 <grib_init+0x20f4>
    2484:	ldr	r3, [r2, r3]
    2488:	add	r3, r3, #168	; 0xa8
    248c:	ldr	r3, [r3]
    2490:	ldr	r1, [fp, #-20]	; 0xffffffec
    2494:	mov	r0, r3
    2498:	bl	0 <coda_type_number_set_endianness>
    249c:	bl	0 <__aeabi_read_tp>
    24a0:	mov	r2, r0
    24a4:	ldr	r3, [pc, #604]	; 2708 <grib_init+0x20f4>
    24a8:	ldr	r3, [r2, r3]
    24ac:	add	r3, r3, #168	; 0xa8
    24b0:	ldr	r3, [r3]
    24b4:	mov	r1, #3
    24b8:	mov	r0, r3
    24bc:	bl	0 <coda_type_set_read_type>
    24c0:	bl	0 <__aeabi_read_tp>
    24c4:	mov	r2, r0
    24c8:	ldr	r3, [pc, #568]	; 2708 <grib_init+0x20f4>
    24cc:	ldr	r3, [r2, r3]
    24d0:	add	r3, r3, #168	; 0xa8
    24d4:	ldr	r1, [r3]
    24d8:	mov	r2, #16
    24dc:	mov	r3, #0
    24e0:	mov	r0, r1
    24e4:	bl	0 <coda_type_set_bit_size>
    24e8:	bl	0 <__aeabi_read_tp>
    24ec:	mov	r2, r0
    24f0:	ldr	r3, [pc, #528]	; 2708 <grib_init+0x20f4>
    24f4:	ldr	r3, [r2, r3]
    24f8:	add	r3, r3, #168	; 0xa8
    24fc:	ldr	r3, [r3]
    2500:	ldr	r1, [pc, #568]	; 2740 <grib_init+0x212c>
    2504:	mov	r0, r3
    2508:	bl	0 <coda_type_set_description>
    250c:	bl	0 <__aeabi_read_tp>
    2510:	mov	r2, r0
    2514:	ldr	r3, [pc, #492]	; 2708 <grib_init+0x20f4>
    2518:	ldr	r3, [r2, r3]
    251c:	add	r4, r3, #172	; 0xac
    2520:	mov	r1, #2
    2524:	mov	r0, #7
    2528:	bl	0 <coda_type_number_new>
    252c:	mov	r3, r0
    2530:	str	r3, [r4]
    2534:	bl	0 <__aeabi_read_tp>
    2538:	mov	r2, r0
    253c:	ldr	r3, [pc, #452]	; 2708 <grib_init+0x20f4>
    2540:	ldr	r3, [r2, r3]
    2544:	add	r3, r3, #172	; 0xac
    2548:	ldr	r3, [r3]
    254c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2550:	mov	r0, r3
    2554:	bl	0 <coda_type_number_set_endianness>
    2558:	bl	0 <__aeabi_read_tp>
    255c:	mov	r2, r0
    2560:	ldr	r3, [pc, #416]	; 2708 <grib_init+0x20f4>
    2564:	ldr	r3, [r2, r3]
    2568:	add	r3, r3, #172	; 0xac
    256c:	ldr	r3, [r3]
    2570:	mov	r1, #3
    2574:	mov	r0, r3
    2578:	bl	0 <coda_type_set_read_type>
    257c:	bl	0 <__aeabi_read_tp>
    2580:	mov	r2, r0
    2584:	ldr	r3, [pc, #380]	; 2708 <grib_init+0x20f4>
    2588:	ldr	r3, [r2, r3]
    258c:	add	r3, r3, #172	; 0xac
    2590:	ldr	r1, [r3]
    2594:	mov	r2, #16
    2598:	mov	r3, #0
    259c:	mov	r0, r1
    25a0:	bl	0 <coda_type_set_bit_size>
    25a4:	bl	0 <__aeabi_read_tp>
    25a8:	mov	r2, r0
    25ac:	ldr	r3, [pc, #340]	; 2708 <grib_init+0x20f4>
    25b0:	ldr	r3, [r2, r3]
    25b4:	add	r3, r3, #172	; 0xac
    25b8:	ldr	r3, [r3]
    25bc:	ldr	r1, [pc, #384]	; 2744 <grib_init+0x2130>
    25c0:	mov	r0, r3
    25c4:	bl	0 <coda_type_set_description>
    25c8:	bl	0 <__aeabi_read_tp>
    25cc:	mov	r2, r0
    25d0:	ldr	r3, [pc, #304]	; 2708 <grib_init+0x20f4>
    25d4:	ldr	r3, [r2, r3]
    25d8:	add	r4, r3, #176	; 0xb0
    25dc:	mov	r1, #2
    25e0:	mov	r0, #7
    25e4:	bl	0 <coda_type_number_new>
    25e8:	mov	r3, r0
    25ec:	str	r3, [r4]
    25f0:	bl	0 <__aeabi_read_tp>
    25f4:	mov	r2, r0
    25f8:	ldr	r3, [pc, #264]	; 2708 <grib_init+0x20f4>
    25fc:	ldr	r3, [r2, r3]
    2600:	add	r3, r3, #176	; 0xb0
    2604:	ldr	r3, [r3]
    2608:	ldr	r1, [fp, #-20]	; 0xffffffec
    260c:	mov	r0, r3
    2610:	bl	0 <coda_type_number_set_endianness>
    2614:	bl	0 <__aeabi_read_tp>
    2618:	mov	r2, r0
    261c:	ldr	r3, [pc, #228]	; 2708 <grib_init+0x20f4>
    2620:	ldr	r3, [r2, r3]
    2624:	add	r3, r3, #176	; 0xb0
    2628:	ldr	r3, [r3]
    262c:	mov	r1, #5
    2630:	mov	r0, r3
    2634:	bl	0 <coda_type_set_read_type>
    2638:	bl	0 <__aeabi_read_tp>
    263c:	mov	r2, r0
    2640:	ldr	r3, [pc, #192]	; 2708 <grib_init+0x20f4>
    2644:	ldr	r3, [r2, r3]
    2648:	add	r3, r3, #176	; 0xb0
    264c:	ldr	r1, [r3]
    2650:	mov	r2, #32
    2654:	mov	r3, #0
    2658:	mov	r0, r1
    265c:	bl	0 <coda_type_set_bit_size>
    2660:	bl	0 <__aeabi_read_tp>
    2664:	mov	r2, r0
    2668:	ldr	r3, [pc, #152]	; 2708 <grib_init+0x20f4>
    266c:	ldr	r3, [r2, r3]
    2670:	add	r4, r3, #180	; 0xb4
    2674:	mov	r1, #2
    2678:	mov	r0, #7
    267c:	bl	0 <coda_type_number_new>
    2680:	mov	r3, r0
    2684:	str	r3, [r4]
    2688:	bl	0 <__aeabi_read_tp>
    268c:	mov	r2, r0
    2690:	ldr	r3, [pc, #112]	; 2708 <grib_init+0x20f4>
    2694:	ldr	r3, [r2, r3]
    2698:	add	r3, r3, #180	; 0xb4
    269c:	ldr	r3, [r3]
    26a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    26a4:	mov	r0, r3
    26a8:	bl	0 <coda_type_number_set_endianness>
    26ac:	bl	0 <__aeabi_read_tp>
    26b0:	mov	r2, r0
    26b4:	ldr	r3, [pc, #76]	; 2708 <grib_init+0x20f4>
    26b8:	ldr	r3, [r2, r3]
    26bc:	add	r3, r3, #180	; 0xb4
    26c0:	ldr	r3, [r3]
    26c4:	mov	r1, #5
    26c8:	mov	r0, r3
    26cc:	bl	0 <coda_type_set_read_type>
    26d0:	bl	0 <__aeabi_read_tp>
    26d4:	mov	r2, r0
    26d8:	ldr	r3, [pc, #40]	; 2708 <grib_init+0x20f4>
    26dc:	ldr	r3, [r2, r3]
    26e0:	add	r3, r3, #180	; 0xb4
    26e4:	ldr	r1, [r3]
    26e8:	mov	r2, #32
    26ec:	mov	r3, #0
    26f0:	mov	r0, r1
    26f4:	bl	0 <coda_type_set_bit_size>
    26f8:	bl	0 <__aeabi_read_tp>
    26fc:	mov	r2, r0
    2700:	b	27a8 <grib_init+0x2194>
    2704:	.word	0x00000428
    2708:	.word	0x00000000
    270c:	.word	0x0000049c
    2710:	.word	0x000004cc
    2714:	.word	0x0000050c
    2718:	.word	0x0000055c
    271c:	.word	0x00000578
    2720:	.word	0x00000594
    2724:	.word	0x000005b8
    2728:	.word	0x000005dc
    272c:	.word	0x000005fc
    2730:	.word	0x00000638
    2734:	.word	0x00000664
    2738:	.word	0x00000688
    273c:	.word	0x000006b8
    2740:	.word	0x000006d4
    2744:	.word	0x000006fc
    2748:	.word	0x00000728
    274c:	.word	0x00000798
    2750:	.word	0x00000808
    2754:	.word	0x00000828
    2758:	.word	0x00000884
    275c:	.word	0x000008e4
    2760:	.word	0x00000958
    2764:	.word	0x000009c8
    2768:	.word	0x00000a2c
    276c:	.word	0x00000a40
    2770:	.word	0x00000a68
    2774:	.word	0x00000ab0
    2778:	.word	0x00000acc
    277c:	.word	0x00000ae4
    2780:	.word	0x00000b04
    2784:	.word	0x00000b38
    2788:	.word	0x00000b58
    278c:	.word	0x00000bd0
    2790:	.word	0x00000bf4
    2794:	.word	0x00000c0c
    2798:	.word	0x00000c10
    279c:	.word	0x00000c14
    27a0:	.word	0x00000000
    27a4:	.word	0x00000c30
    27a8:	ldr	r3, [pc, #-16]	; 27a0 <grib_init+0x218c>
    27ac:	ldr	r3, [r2, r3]
    27b0:	add	r4, r3, #184	; 0xb8
    27b4:	mov	r1, #2
    27b8:	mov	r0, #7
    27bc:	bl	0 <coda_type_number_new>
    27c0:	mov	r3, r0
    27c4:	str	r3, [r4]
    27c8:	bl	0 <__aeabi_read_tp>
    27cc:	mov	r2, r0
    27d0:	ldr	r3, [pc, #-56]	; 27a0 <grib_init+0x218c>
    27d4:	ldr	r3, [r2, r3]
    27d8:	add	r3, r3, #184	; 0xb8
    27dc:	ldr	r3, [r3]
    27e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    27e4:	mov	r0, r3
    27e8:	bl	0 <coda_type_number_set_endianness>
    27ec:	bl	0 <__aeabi_read_tp>
    27f0:	mov	r2, r0
    27f4:	ldr	r3, [pc, #-92]	; 27a0 <grib_init+0x218c>
    27f8:	ldr	r3, [r2, r3]
    27fc:	add	r3, r3, #184	; 0xb8
    2800:	ldr	r3, [r3]
    2804:	mov	r1, #4
    2808:	mov	r0, r3
    280c:	bl	0 <coda_type_set_read_type>
    2810:	bl	0 <__aeabi_read_tp>
    2814:	mov	r2, r0
    2818:	ldr	r3, [pc, #-128]	; 27a0 <grib_init+0x218c>
    281c:	ldr	r3, [r2, r3]
    2820:	add	r3, r3, #184	; 0xb8
    2824:	ldr	r1, [r3]
    2828:	mov	r2, #32
    282c:	mov	r3, #0
    2830:	mov	r0, r1
    2834:	bl	0 <coda_type_set_bit_size>
    2838:	bl	0 <__aeabi_read_tp>
    283c:	mov	r2, r0
    2840:	ldr	r3, [pc, #-168]	; 27a0 <grib_init+0x218c>
    2844:	ldr	r3, [r2, r3]
    2848:	add	r3, r3, #184	; 0xb8
    284c:	ldr	r3, [r3]
    2850:	ldr	r1, [pc, #-272]	; 2748 <grib_init+0x2134>
    2854:	mov	r0, r3
    2858:	bl	0 <coda_type_set_description>
    285c:	bl	0 <__aeabi_read_tp>
    2860:	mov	r2, r0
    2864:	ldr	r3, [pc, #-204]	; 27a0 <grib_init+0x218c>
    2868:	ldr	r3, [r2, r3]
    286c:	add	r4, r3, #188	; 0xbc
    2870:	mov	r1, #2
    2874:	mov	r0, #7
    2878:	bl	0 <coda_type_number_new>
    287c:	mov	r3, r0
    2880:	str	r3, [r4]
    2884:	bl	0 <__aeabi_read_tp>
    2888:	mov	r2, r0
    288c:	ldr	r3, [pc, #-244]	; 27a0 <grib_init+0x218c>
    2890:	ldr	r3, [r2, r3]
    2894:	add	r3, r3, #188	; 0xbc
    2898:	ldr	r3, [r3]
    289c:	ldr	r1, [fp, #-20]	; 0xffffffec
    28a0:	mov	r0, r3
    28a4:	bl	0 <coda_type_number_set_endianness>
    28a8:	bl	0 <__aeabi_read_tp>
    28ac:	mov	r2, r0
    28b0:	ldr	r3, [pc, #-280]	; 27a0 <grib_init+0x218c>
    28b4:	ldr	r3, [r2, r3]
    28b8:	add	r3, r3, #188	; 0xbc
    28bc:	ldr	r3, [r3]
    28c0:	mov	r1, #4
    28c4:	mov	r0, r3
    28c8:	bl	0 <coda_type_set_read_type>
    28cc:	bl	0 <__aeabi_read_tp>
    28d0:	mov	r2, r0
    28d4:	ldr	r3, [pc, #-316]	; 27a0 <grib_init+0x218c>
    28d8:	ldr	r3, [r2, r3]
    28dc:	add	r3, r3, #188	; 0xbc
    28e0:	ldr	r1, [r3]
    28e4:	mov	r2, #32
    28e8:	mov	r3, #0
    28ec:	mov	r0, r1
    28f0:	bl	0 <coda_type_set_bit_size>
    28f4:	bl	0 <__aeabi_read_tp>
    28f8:	mov	r2, r0
    28fc:	ldr	r3, [pc, #-356]	; 27a0 <grib_init+0x218c>
    2900:	ldr	r3, [r2, r3]
    2904:	add	r3, r3, #188	; 0xbc
    2908:	ldr	r3, [r3]
    290c:	ldr	r1, [pc, #-456]	; 274c <grib_init+0x2138>
    2910:	mov	r0, r3
    2914:	bl	0 <coda_type_set_description>
    2918:	bl	0 <__aeabi_read_tp>
    291c:	mov	r2, r0
    2920:	ldr	r3, [pc, #-392]	; 27a0 <grib_init+0x218c>
    2924:	ldr	r3, [r2, r3]
    2928:	add	r4, r3, #192	; 0xc0
    292c:	mov	r1, #2
    2930:	mov	r0, #7
    2934:	bl	0 <coda_type_number_new>
    2938:	mov	r3, r0
    293c:	str	r3, [r4]
    2940:	bl	0 <__aeabi_read_tp>
    2944:	mov	r2, r0
    2948:	ldr	r3, [pc, #-432]	; 27a0 <grib_init+0x218c>
    294c:	ldr	r3, [r2, r3]
    2950:	add	r3, r3, #192	; 0xc0
    2954:	ldr	r3, [r3]
    2958:	ldr	r1, [fp, #-20]	; 0xffffffec
    295c:	mov	r0, r3
    2960:	bl	0 <coda_type_number_set_endianness>
    2964:	bl	0 <__aeabi_read_tp>
    2968:	mov	r2, r0
    296c:	ldr	r3, [pc, #-468]	; 27a0 <grib_init+0x218c>
    2970:	ldr	r3, [r2, r3]
    2974:	add	r3, r3, #192	; 0xc0
    2978:	ldr	r3, [r3]
    297c:	mov	r1, #1
    2980:	mov	r0, r3
    2984:	bl	0 <coda_type_set_read_type>
    2988:	bl	0 <__aeabi_read_tp>
    298c:	mov	r2, r0
    2990:	ldr	r3, [pc, #-504]	; 27a0 <grib_init+0x218c>
    2994:	ldr	r3, [r2, r3]
    2998:	add	r3, r3, #192	; 0xc0
    299c:	ldr	r1, [r3]
    29a0:	mov	r2, #8
    29a4:	mov	r3, #0
    29a8:	mov	r0, r1
    29ac:	bl	0 <coda_type_set_bit_size>
    29b0:	bl	0 <__aeabi_read_tp>
    29b4:	mov	r2, r0
    29b8:	ldr	r3, [pc, #-544]	; 27a0 <grib_init+0x218c>
    29bc:	ldr	r3, [r2, r3]
    29c0:	add	r3, r3, #192	; 0xc0
    29c4:	ldr	r3, [r3]
    29c8:	ldr	r1, [pc, #-640]	; 2750 <grib_init+0x213c>
    29cc:	mov	r0, r3
    29d0:	bl	0 <coda_type_set_description>
    29d4:	bl	0 <__aeabi_read_tp>
    29d8:	mov	r2, r0
    29dc:	ldr	r3, [pc, #-580]	; 27a0 <grib_init+0x218c>
    29e0:	ldr	r3, [r2, r3]
    29e4:	add	r4, r3, #196	; 0xc4
    29e8:	mov	r1, #2
    29ec:	mov	r0, #7
    29f0:	bl	0 <coda_type_number_new>
    29f4:	mov	r3, r0
    29f8:	str	r3, [r4]
    29fc:	bl	0 <__aeabi_read_tp>
    2a00:	mov	r2, r0
    2a04:	ldr	r3, [pc, #-620]	; 27a0 <grib_init+0x218c>
    2a08:	ldr	r3, [r2, r3]
    2a0c:	add	r3, r3, #196	; 0xc4
    2a10:	ldr	r3, [r3]
    2a14:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a18:	mov	r0, r3
    2a1c:	bl	0 <coda_type_number_set_endianness>
    2a20:	bl	0 <__aeabi_read_tp>
    2a24:	mov	r2, r0
    2a28:	ldr	r3, [pc, #-656]	; 27a0 <grib_init+0x218c>
    2a2c:	ldr	r3, [r2, r3]
    2a30:	add	r3, r3, #196	; 0xc4
    2a34:	ldr	r3, [r3]
    2a38:	mov	r1, #4
    2a3c:	mov	r0, r3
    2a40:	bl	0 <coda_type_set_read_type>
    2a44:	bl	0 <__aeabi_read_tp>
    2a48:	mov	r2, r0
    2a4c:	ldr	r3, [pc, #-692]	; 27a0 <grib_init+0x218c>
    2a50:	ldr	r3, [r2, r3]
    2a54:	add	r3, r3, #196	; 0xc4
    2a58:	ldr	r1, [r3]
    2a5c:	mov	r2, #32
    2a60:	mov	r3, #0
    2a64:	mov	r0, r1
    2a68:	bl	0 <coda_type_set_bit_size>
    2a6c:	bl	0 <__aeabi_read_tp>
    2a70:	mov	r2, r0
    2a74:	ldr	r3, [pc, #-732]	; 27a0 <grib_init+0x218c>
    2a78:	ldr	r3, [r2, r3]
    2a7c:	add	r3, r3, #196	; 0xc4
    2a80:	ldr	r3, [r3]
    2a84:	ldr	r1, [pc, #-824]	; 2754 <grib_init+0x2140>
    2a88:	mov	r0, r3
    2a8c:	bl	0 <coda_type_set_description>
    2a90:	bl	0 <__aeabi_read_tp>
    2a94:	mov	r2, r0
    2a98:	ldr	r3, [pc, #-768]	; 27a0 <grib_init+0x218c>
    2a9c:	ldr	r3, [r2, r3]
    2aa0:	add	r4, r3, #200	; 0xc8
    2aa4:	mov	r1, #2
    2aa8:	mov	r0, #7
    2aac:	bl	0 <coda_type_number_new>
    2ab0:	mov	r3, r0
    2ab4:	str	r3, [r4]
    2ab8:	bl	0 <__aeabi_read_tp>
    2abc:	mov	r2, r0
    2ac0:	ldr	r3, [pc, #-808]	; 27a0 <grib_init+0x218c>
    2ac4:	ldr	r3, [r2, r3]
    2ac8:	add	r3, r3, #200	; 0xc8
    2acc:	ldr	r3, [r3]
    2ad0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2ad4:	mov	r0, r3
    2ad8:	bl	0 <coda_type_number_set_endianness>
    2adc:	bl	0 <__aeabi_read_tp>
    2ae0:	mov	r2, r0
    2ae4:	ldr	r3, [pc, #-844]	; 27a0 <grib_init+0x218c>
    2ae8:	ldr	r3, [r2, r3]
    2aec:	add	r3, r3, #200	; 0xc8
    2af0:	ldr	r3, [r3]
    2af4:	mov	r1, #4
    2af8:	mov	r0, r3
    2afc:	bl	0 <coda_type_set_read_type>
    2b00:	bl	0 <__aeabi_read_tp>
    2b04:	mov	r2, r0
    2b08:	ldr	r3, [pc, #-880]	; 27a0 <grib_init+0x218c>
    2b0c:	ldr	r3, [r2, r3]
    2b10:	add	r3, r3, #200	; 0xc8
    2b14:	ldr	r1, [r3]
    2b18:	mov	r2, #32
    2b1c:	mov	r3, #0
    2b20:	mov	r0, r1
    2b24:	bl	0 <coda_type_set_bit_size>
    2b28:	bl	0 <__aeabi_read_tp>
    2b2c:	mov	r2, r0
    2b30:	ldr	r3, [pc, #-920]	; 27a0 <grib_init+0x218c>
    2b34:	ldr	r3, [r2, r3]
    2b38:	add	r3, r3, #200	; 0xc8
    2b3c:	ldr	r3, [r3]
    2b40:	ldr	r1, [pc, #-1008]	; 2758 <grib_init+0x2144>
    2b44:	mov	r0, r3
    2b48:	bl	0 <coda_type_set_description>
    2b4c:	bl	0 <__aeabi_read_tp>
    2b50:	mov	r2, r0
    2b54:	ldr	r3, [pc, #-956]	; 27a0 <grib_init+0x218c>
    2b58:	ldr	r3, [r2, r3]
    2b5c:	add	r4, r3, #204	; 0xcc
    2b60:	mov	r1, #2
    2b64:	mov	r0, #7
    2b68:	bl	0 <coda_type_number_new>
    2b6c:	mov	r3, r0
    2b70:	str	r3, [r4]
    2b74:	bl	0 <__aeabi_read_tp>
    2b78:	mov	r2, r0
    2b7c:	ldr	r3, [pc, #-996]	; 27a0 <grib_init+0x218c>
    2b80:	ldr	r3, [r2, r3]
    2b84:	add	r3, r3, #204	; 0xcc
    2b88:	ldr	r3, [r3]
    2b8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b90:	mov	r0, r3
    2b94:	bl	0 <coda_type_number_set_endianness>
    2b98:	bl	0 <__aeabi_read_tp>
    2b9c:	mov	r2, r0
    2ba0:	ldr	r3, [pc, #-1032]	; 27a0 <grib_init+0x218c>
    2ba4:	ldr	r3, [r2, r3]
    2ba8:	add	r3, r3, #204	; 0xcc
    2bac:	ldr	r3, [r3]
    2bb0:	mov	r1, #3
    2bb4:	mov	r0, r3
    2bb8:	bl	0 <coda_type_set_read_type>
    2bbc:	bl	0 <__aeabi_read_tp>
    2bc0:	mov	r2, r0
    2bc4:	ldr	r3, [pc, #-1068]	; 27a0 <grib_init+0x218c>
    2bc8:	ldr	r3, [r2, r3]
    2bcc:	add	r3, r3, #204	; 0xcc
    2bd0:	ldr	r1, [r3]
    2bd4:	mov	r2, #16
    2bd8:	mov	r3, #0
    2bdc:	mov	r0, r1
    2be0:	bl	0 <coda_type_set_bit_size>
    2be4:	bl	0 <__aeabi_read_tp>
    2be8:	mov	r2, r0
    2bec:	ldr	r3, [pc, #-1108]	; 27a0 <grib_init+0x218c>
    2bf0:	ldr	r3, [r2, r3]
    2bf4:	add	r3, r3, #204	; 0xcc
    2bf8:	ldr	r3, [r3]
    2bfc:	ldr	r1, [pc, #-1192]	; 275c <grib_init+0x2148>
    2c00:	mov	r0, r3
    2c04:	bl	0 <coda_type_set_description>
    2c08:	bl	0 <__aeabi_read_tp>
    2c0c:	mov	r2, r0
    2c10:	ldr	r3, [pc, #-1144]	; 27a0 <grib_init+0x218c>
    2c14:	ldr	r3, [r2, r3]
    2c18:	add	r4, r3, #208	; 0xd0
    2c1c:	mov	r1, #2
    2c20:	mov	r0, #7
    2c24:	bl	0 <coda_type_number_new>
    2c28:	mov	r3, r0
    2c2c:	str	r3, [r4]
    2c30:	bl	0 <__aeabi_read_tp>
    2c34:	mov	r2, r0
    2c38:	ldr	r3, [pc, #-1184]	; 27a0 <grib_init+0x218c>
    2c3c:	ldr	r3, [r2, r3]
    2c40:	add	r3, r3, #208	; 0xd0
    2c44:	ldr	r3, [r3]
    2c48:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c4c:	mov	r0, r3
    2c50:	bl	0 <coda_type_number_set_endianness>
    2c54:	bl	0 <__aeabi_read_tp>
    2c58:	mov	r2, r0
    2c5c:	ldr	r3, [pc, #-1220]	; 27a0 <grib_init+0x218c>
    2c60:	ldr	r3, [r2, r3]
    2c64:	add	r3, r3, #208	; 0xd0
    2c68:	ldr	r3, [r3]
    2c6c:	mov	r1, #3
    2c70:	mov	r0, r3
    2c74:	bl	0 <coda_type_set_read_type>
    2c78:	bl	0 <__aeabi_read_tp>
    2c7c:	mov	r2, r0
    2c80:	ldr	r3, [pc, #-1256]	; 27a0 <grib_init+0x218c>
    2c84:	ldr	r3, [r2, r3]
    2c88:	add	r3, r3, #208	; 0xd0
    2c8c:	ldr	r1, [r3]
    2c90:	mov	r2, #16
    2c94:	mov	r3, #0
    2c98:	mov	r0, r1
    2c9c:	bl	0 <coda_type_set_bit_size>
    2ca0:	bl	0 <__aeabi_read_tp>
    2ca4:	mov	r2, r0
    2ca8:	ldr	r3, [pc, #-1296]	; 27a0 <grib_init+0x218c>
    2cac:	ldr	r3, [r2, r3]
    2cb0:	add	r3, r3, #208	; 0xd0
    2cb4:	ldr	r3, [r3]
    2cb8:	ldr	r1, [pc, #-1376]	; 2760 <grib_init+0x214c>
    2cbc:	mov	r0, r3
    2cc0:	bl	0 <coda_type_set_description>
    2cc4:	bl	0 <__aeabi_read_tp>
    2cc8:	mov	r2, r0
    2ccc:	ldr	r3, [pc, #-1332]	; 27a0 <grib_init+0x218c>
    2cd0:	ldr	r3, [r2, r3]
    2cd4:	add	r4, r3, #212	; 0xd4
    2cd8:	mov	r1, #2
    2cdc:	mov	r0, #7
    2ce0:	bl	0 <coda_type_number_new>
    2ce4:	mov	r3, r0
    2ce8:	str	r3, [r4]
    2cec:	bl	0 <__aeabi_read_tp>
    2cf0:	mov	r2, r0
    2cf4:	ldr	r3, [pc, #-1372]	; 27a0 <grib_init+0x218c>
    2cf8:	ldr	r3, [r2, r3]
    2cfc:	add	r3, r3, #212	; 0xd4
    2d00:	ldr	r3, [r3]
    2d04:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d08:	mov	r0, r3
    2d0c:	bl	0 <coda_type_number_set_endianness>
    2d10:	bl	0 <__aeabi_read_tp>
    2d14:	mov	r2, r0
    2d18:	ldr	r3, [pc, #-1408]	; 27a0 <grib_init+0x218c>
    2d1c:	ldr	r3, [r2, r3]
    2d20:	add	r3, r3, #212	; 0xd4
    2d24:	ldr	r3, [r3]
    2d28:	mov	r1, #3
    2d2c:	mov	r0, r3
    2d30:	bl	0 <coda_type_set_read_type>
    2d34:	bl	0 <__aeabi_read_tp>
    2d38:	mov	r2, r0
    2d3c:	ldr	r3, [pc, #-1444]	; 27a0 <grib_init+0x218c>
    2d40:	ldr	r3, [r2, r3]
    2d44:	add	r3, r3, #212	; 0xd4
    2d48:	ldr	r1, [r3]
    2d4c:	mov	r2, #16
    2d50:	mov	r3, #0
    2d54:	mov	r0, r1
    2d58:	bl	0 <coda_type_set_bit_size>
    2d5c:	bl	0 <__aeabi_read_tp>
    2d60:	mov	r2, r0
    2d64:	ldr	r3, [pc, #-1484]	; 27a0 <grib_init+0x218c>
    2d68:	ldr	r3, [r2, r3]
    2d6c:	add	r3, r3, #212	; 0xd4
    2d70:	ldr	r3, [r3]
    2d74:	ldr	r1, [pc, #-1560]	; 2764 <grib_init+0x2150>
    2d78:	mov	r0, r3
    2d7c:	bl	0 <coda_type_set_description>
    2d80:	bl	0 <__aeabi_read_tp>
    2d84:	mov	r2, r0
    2d88:	ldr	r3, [pc, #-1520]	; 27a0 <grib_init+0x218c>
    2d8c:	ldr	r3, [r2, r3]
    2d90:	add	r4, r3, #216	; 0xd8
    2d94:	mov	r1, #2
    2d98:	mov	r0, #7
    2d9c:	bl	0 <coda_type_number_new>
    2da0:	mov	r3, r0
    2da4:	str	r3, [r4]
    2da8:	bl	0 <__aeabi_read_tp>
    2dac:	mov	r2, r0
    2db0:	ldr	r3, [pc, #-1560]	; 27a0 <grib_init+0x218c>
    2db4:	ldr	r3, [r2, r3]
    2db8:	add	r3, r3, #216	; 0xd8
    2dbc:	ldr	r3, [r3]
    2dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2dc4:	mov	r0, r3
    2dc8:	bl	0 <coda_type_number_set_endianness>
    2dcc:	bl	0 <__aeabi_read_tp>
    2dd0:	mov	r2, r0
    2dd4:	ldr	r3, [pc, #-1596]	; 27a0 <grib_init+0x218c>
    2dd8:	ldr	r3, [r2, r3]
    2ddc:	add	r3, r3, #216	; 0xd8
    2de0:	ldr	r3, [r3]
    2de4:	mov	r1, #1
    2de8:	mov	r0, r3
    2dec:	bl	0 <coda_type_set_read_type>
    2df0:	bl	0 <__aeabi_read_tp>
    2df4:	mov	r2, r0
    2df8:	ldr	r3, [pc, #-1632]	; 27a0 <grib_init+0x218c>
    2dfc:	ldr	r3, [r2, r3]
    2e00:	add	r3, r3, #216	; 0xd8
    2e04:	ldr	r1, [r3]
    2e08:	mov	r2, #8
    2e0c:	mov	r3, #0
    2e10:	mov	r0, r1
    2e14:	bl	0 <coda_type_set_bit_size>
    2e18:	bl	0 <__aeabi_read_tp>
    2e1c:	mov	r2, r0
    2e20:	ldr	r3, [pc, #-1672]	; 27a0 <grib_init+0x218c>
    2e24:	ldr	r3, [r2, r3]
    2e28:	add	r3, r3, #216	; 0xd8
    2e2c:	ldr	r3, [r3]
    2e30:	ldr	r1, [pc, #-1744]	; 2768 <grib_init+0x2154>
    2e34:	mov	r0, r3
    2e38:	bl	0 <coda_type_set_description>
    2e3c:	bl	0 <__aeabi_read_tp>
    2e40:	mov	r2, r0
    2e44:	ldr	r3, [pc, #-1708]	; 27a0 <grib_init+0x218c>
    2e48:	ldr	r3, [r2, r3]
    2e4c:	add	r4, r3, #220	; 0xdc
    2e50:	mov	r1, #3
    2e54:	mov	r0, #7
    2e58:	bl	0 <coda_type_number_new>
    2e5c:	mov	r3, r0
    2e60:	str	r3, [r4]
    2e64:	bl	0 <__aeabi_read_tp>
    2e68:	mov	r2, r0
    2e6c:	ldr	r3, [pc, #-1748]	; 27a0 <grib_init+0x218c>
    2e70:	ldr	r3, [r2, r3]
    2e74:	add	r3, r3, #220	; 0xdc
    2e78:	ldr	r3, [r3]
    2e7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e80:	mov	r0, r3
    2e84:	bl	0 <coda_type_number_set_endianness>
    2e88:	bl	0 <__aeabi_read_tp>
    2e8c:	mov	r2, r0
    2e90:	ldr	r3, [pc, #-1784]	; 27a0 <grib_init+0x218c>
    2e94:	ldr	r3, [r2, r3]
    2e98:	add	r3, r3, #220	; 0xdc
    2e9c:	ldr	r3, [r3]
    2ea0:	mov	r1, #8
    2ea4:	mov	r0, r3
    2ea8:	bl	0 <coda_type_set_read_type>
    2eac:	bl	0 <__aeabi_read_tp>
    2eb0:	mov	r2, r0
    2eb4:	ldr	r3, [pc, #-1820]	; 27a0 <grib_init+0x218c>
    2eb8:	ldr	r3, [r2, r3]
    2ebc:	add	r3, r3, #220	; 0xdc
    2ec0:	ldr	r1, [r3]
    2ec4:	mov	r2, #32
    2ec8:	mov	r3, #0
    2ecc:	mov	r0, r1
    2ed0:	bl	0 <coda_type_set_bit_size>
    2ed4:	bl	0 <__aeabi_read_tp>
    2ed8:	mov	r2, r0
    2edc:	ldr	r3, [pc, #-1860]	; 27a0 <grib_init+0x218c>
    2ee0:	ldr	r3, [r2, r3]
    2ee4:	add	r4, r3, #224	; 0xe0
    2ee8:	mov	r0, #7
    2eec:	bl	0 <coda_type_array_new>
    2ef0:	mov	r3, r0
    2ef4:	str	r3, [r4]
    2ef8:	bl	0 <__aeabi_read_tp>
    2efc:	mov	r2, r0
    2f00:	ldr	r3, [pc, #-1896]	; 27a0 <grib_init+0x218c>
    2f04:	ldr	r3, [r2, r3]
    2f08:	add	r3, r3, #224	; 0xe0
    2f0c:	ldr	r3, [r3]
    2f10:	ldr	r1, [pc, #-1964]	; 276c <grib_init+0x2158>
    2f14:	mov	r0, r3
    2f18:	bl	0 <coda_type_set_description>
    2f1c:	bl	0 <__aeabi_read_tp>
    2f20:	mov	r2, r0
    2f24:	ldr	r3, [pc, #-1932]	; 27a0 <grib_init+0x218c>
    2f28:	ldr	r3, [r2, r3]
    2f2c:	add	r3, r3, #224	; 0xe0
    2f30:	ldr	r2, [r3]
    2f34:	bl	0 <__aeabi_read_tp>
    2f38:	mov	r1, r0
    2f3c:	ldr	r3, [pc, #-1956]	; 27a0 <grib_init+0x218c>
    2f40:	ldr	r3, [r1, r3]
    2f44:	add	r3, r3, #220	; 0xdc
    2f48:	ldr	r3, [r3]
    2f4c:	mov	r1, r3
    2f50:	mov	r0, r2
    2f54:	bl	0 <coda_type_array_set_base_type>
    2f58:	bl	0 <__aeabi_read_tp>
    2f5c:	mov	r2, r0
    2f60:	ldr	r3, [pc, #-1992]	; 27a0 <grib_init+0x218c>
    2f64:	ldr	r3, [r2, r3]
    2f68:	add	r3, r3, #224	; 0xe0
    2f6c:	ldr	r3, [r3]
    2f70:	mov	r1, #0
    2f74:	mov	r0, r3
    2f78:	bl	0 <coda_type_array_add_variable_dimension>
    2f7c:	bl	0 <__aeabi_read_tp>
    2f80:	mov	r2, r0
    2f84:	ldr	r3, [pc, #-2028]	; 27a0 <grib_init+0x218c>
    2f88:	ldr	r3, [r2, r3]
    2f8c:	add	r4, r3, #228	; 0xe4
    2f90:	mov	r1, #2
    2f94:	mov	r0, #7
    2f98:	bl	0 <coda_type_number_new>
    2f9c:	mov	r3, r0
    2fa0:	str	r3, [r4]
    2fa4:	bl	0 <__aeabi_read_tp>
    2fa8:	mov	r2, r0
    2fac:	ldr	r3, [pc, #-2068]	; 27a0 <grib_init+0x218c>
    2fb0:	ldr	r3, [r2, r3]
    2fb4:	add	r3, r3, #228	; 0xe4
    2fb8:	ldr	r3, [r3]
    2fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fc0:	mov	r0, r3
    2fc4:	bl	0 <coda_type_number_set_endianness>
    2fc8:	bl	0 <__aeabi_read_tp>
    2fcc:	mov	r2, r0
    2fd0:	ldr	r3, [pc, #-2104]	; 27a0 <grib_init+0x218c>
    2fd4:	ldr	r3, [r2, r3]
    2fd8:	add	r3, r3, #228	; 0xe4
    2fdc:	ldr	r3, [r3]
    2fe0:	mov	r1, #3
    2fe4:	mov	r0, r3
    2fe8:	bl	0 <coda_type_set_read_type>
    2fec:	bl	0 <__aeabi_read_tp>
    2ff0:	mov	r2, r0
    2ff4:	ldr	r3, [pc, #-2140]	; 27a0 <grib_init+0x218c>
    2ff8:	ldr	r3, [r2, r3]
    2ffc:	add	r3, r3, #228	; 0xe4
    3000:	ldr	r1, [r3]
    3004:	mov	r2, #16
    3008:	mov	r3, #0
    300c:	mov	r0, r1
    3010:	bl	0 <coda_type_set_bit_size>
    3014:	bl	0 <__aeabi_read_tp>
    3018:	mov	r2, r0
    301c:	ldr	r3, [pc, #-2180]	; 27a0 <grib_init+0x218c>
    3020:	ldr	r3, [r2, r3]
    3024:	add	r4, r3, #232	; 0xe8
    3028:	mov	r0, #7
    302c:	bl	0 <coda_type_array_new>
    3030:	mov	r3, r0
    3034:	str	r3, [r4]
    3038:	bl	0 <__aeabi_read_tp>
    303c:	mov	r2, r0
    3040:	ldr	r3, [pc, #-2216]	; 27a0 <grib_init+0x218c>
    3044:	ldr	r3, [r2, r3]
    3048:	add	r3, r3, #232	; 0xe8
    304c:	ldr	r3, [r3]
    3050:	ldr	r1, [pc, #-2280]	; 2770 <grib_init+0x215c>
    3054:	mov	r0, r3
    3058:	bl	0 <coda_type_set_description>
    305c:	bl	0 <__aeabi_read_tp>
    3060:	mov	r2, r0
    3064:	ldr	r3, [pc, #-2252]	; 27a0 <grib_init+0x218c>
    3068:	ldr	r3, [r2, r3]
    306c:	add	r3, r3, #232	; 0xe8
    3070:	ldr	r2, [r3]
    3074:	bl	0 <__aeabi_read_tp>
    3078:	mov	r1, r0
    307c:	ldr	r3, [pc, #-2276]	; 27a0 <grib_init+0x218c>
    3080:	ldr	r3, [r1, r3]
    3084:	add	r3, r3, #228	; 0xe4
    3088:	ldr	r3, [r3]
    308c:	mov	r1, r3
    3090:	mov	r0, r2
    3094:	bl	0 <coda_type_array_set_base_type>
    3098:	bl	0 <__aeabi_read_tp>
    309c:	mov	r2, r0
    30a0:	ldr	r3, [pc, #-2312]	; 27a0 <grib_init+0x218c>
    30a4:	ldr	r3, [r2, r3]
    30a8:	add	r3, r3, #232	; 0xe8
    30ac:	ldr	r3, [r3]
    30b0:	mov	r1, #0
    30b4:	mov	r0, r3
    30b8:	bl	0 <coda_type_array_add_variable_dimension>
    30bc:	bl	0 <__aeabi_read_tp>
    30c0:	mov	r2, r0
    30c4:	ldr	r3, [pc, #-2348]	; 27a0 <grib_init+0x218c>
    30c8:	ldr	r3, [r2, r3]
    30cc:	add	r4, r3, #236	; 0xec
    30d0:	mov	r1, #2
    30d4:	mov	r0, #7
    30d8:	bl	0 <coda_type_number_new>
    30dc:	mov	r3, r0
    30e0:	str	r3, [r4]
    30e4:	bl	0 <__aeabi_read_tp>
    30e8:	mov	r2, r0
    30ec:	ldr	r3, [pc, #-2388]	; 27a0 <grib_init+0x218c>
    30f0:	ldr	r3, [r2, r3]
    30f4:	add	r3, r3, #236	; 0xec
    30f8:	ldr	r3, [r3]
    30fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    3100:	mov	r0, r3
    3104:	bl	0 <coda_type_number_set_endianness>
    3108:	bl	0 <__aeabi_read_tp>
    310c:	mov	r2, r0
    3110:	ldr	r3, [pc, #-2424]	; 27a0 <grib_init+0x218c>
    3114:	ldr	r3, [r2, r3]
    3118:	add	r3, r3, #236	; 0xec
    311c:	ldr	r3, [r3]
    3120:	mov	r1, #1
    3124:	mov	r0, r3
    3128:	bl	0 <coda_type_set_read_type>
    312c:	bl	0 <__aeabi_read_tp>
    3130:	mov	r2, r0
    3134:	ldr	r3, [pc, #-2460]	; 27a0 <grib_init+0x218c>
    3138:	ldr	r3, [r2, r3]
    313c:	add	r3, r3, #236	; 0xec
    3140:	ldr	r1, [r3]
    3144:	mov	r2, #8
    3148:	mov	r3, #0
    314c:	mov	r0, r1
    3150:	bl	0 <coda_type_set_bit_size>
    3154:	bl	0 <__aeabi_read_tp>
    3158:	mov	r2, r0
    315c:	ldr	r3, [pc, #-2500]	; 27a0 <grib_init+0x218c>
    3160:	ldr	r3, [r2, r3]
    3164:	add	r3, r3, #236	; 0xec
    3168:	ldr	r3, [r3]
    316c:	ldr	r1, [pc, #-2560]	; 2774 <grib_init+0x2160>
    3170:	mov	r0, r3
    3174:	bl	0 <coda_type_set_description>
    3178:	bl	0 <__aeabi_read_tp>
    317c:	mov	r2, r0
    3180:	ldr	r3, [pc, #-2536]	; 27a0 <grib_init+0x218c>
    3184:	ldr	r3, [r2, r3]
    3188:	add	r4, r3, #240	; 0xf0
    318c:	mov	r1, #2
    3190:	mov	r0, #7
    3194:	bl	0 <coda_type_number_new>
    3198:	mov	r3, r0
    319c:	str	r3, [r4]
    31a0:	bl	0 <__aeabi_read_tp>
    31a4:	mov	r2, r0
    31a8:	ldr	r3, [pc, #-2576]	; 27a0 <grib_init+0x218c>
    31ac:	ldr	r3, [r2, r3]
    31b0:	add	r3, r3, #240	; 0xf0
    31b4:	ldr	r3, [r3]
    31b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    31bc:	mov	r0, r3
    31c0:	bl	0 <coda_type_number_set_endianness>
    31c4:	bl	0 <__aeabi_read_tp>
    31c8:	mov	r2, r0
    31cc:	ldr	r3, [pc, #-2612]	; 27a0 <grib_init+0x218c>
    31d0:	ldr	r3, [r2, r3]
    31d4:	add	r3, r3, #240	; 0xf0
    31d8:	ldr	r3, [r3]
    31dc:	mov	r1, #5
    31e0:	mov	r0, r3
    31e4:	bl	0 <coda_type_set_read_type>
    31e8:	bl	0 <__aeabi_read_tp>
    31ec:	mov	r2, r0
    31f0:	ldr	r3, [pc, #-2648]	; 27a0 <grib_init+0x218c>
    31f4:	ldr	r3, [r2, r3]
    31f8:	add	r3, r3, #240	; 0xf0
    31fc:	ldr	r1, [r3]
    3200:	mov	r2, #32
    3204:	mov	r3, #0
    3208:	mov	r0, r1
    320c:	bl	0 <coda_type_set_bit_size>
    3210:	bl	0 <__aeabi_read_tp>
    3214:	mov	r2, r0
    3218:	ldr	r3, [pc, #-2688]	; 27a0 <grib_init+0x218c>
    321c:	ldr	r3, [r2, r3]
    3220:	add	r3, r3, #240	; 0xf0
    3224:	ldr	r3, [r3]
    3228:	ldr	r1, [pc, #-2744]	; 2778 <grib_init+0x2164>
    322c:	mov	r0, r3
    3230:	bl	0 <coda_type_set_description>
    3234:	bl	0 <__aeabi_read_tp>
    3238:	mov	r2, r0
    323c:	ldr	r3, [pc, #-2724]	; 27a0 <grib_init+0x218c>
    3240:	ldr	r3, [r2, r3]
    3244:	add	r4, r3, #244	; 0xf4
    3248:	mov	r1, #2
    324c:	mov	r0, #7
    3250:	bl	0 <coda_type_number_new>
    3254:	mov	r3, r0
    3258:	str	r3, [r4]
    325c:	bl	0 <__aeabi_read_tp>
    3260:	mov	r2, r0
    3264:	ldr	r3, [pc, #-2764]	; 27a0 <grib_init+0x218c>
    3268:	ldr	r3, [r2, r3]
    326c:	add	r3, r3, #244	; 0xf4
    3270:	ldr	r3, [r3]
    3274:	ldr	r1, [fp, #-20]	; 0xffffffec
    3278:	mov	r0, r3
    327c:	bl	0 <coda_type_number_set_endianness>
    3280:	bl	0 <__aeabi_read_tp>
    3284:	mov	r2, r0
    3288:	ldr	r3, [pc, #-2800]	; 27a0 <grib_init+0x218c>
    328c:	ldr	r3, [r2, r3]
    3290:	add	r3, r3, #244	; 0xf4
    3294:	ldr	r3, [r3]
    3298:	mov	r1, #3
    329c:	mov	r0, r3
    32a0:	bl	0 <coda_type_set_read_type>
    32a4:	bl	0 <__aeabi_read_tp>
    32a8:	mov	r2, r0
    32ac:	ldr	r3, [pc, #-2836]	; 27a0 <grib_init+0x218c>
    32b0:	ldr	r3, [r2, r3]
    32b4:	add	r3, r3, #244	; 0xf4
    32b8:	ldr	r1, [r3]
    32bc:	mov	r2, #16
    32c0:	mov	r3, #0
    32c4:	mov	r0, r1
    32c8:	bl	0 <coda_type_set_bit_size>
    32cc:	bl	0 <__aeabi_read_tp>
    32d0:	mov	r2, r0
    32d4:	ldr	r3, [pc, #-2876]	; 27a0 <grib_init+0x218c>
    32d8:	ldr	r3, [r2, r3]
    32dc:	add	r3, r3, #244	; 0xf4
    32e0:	ldr	r3, [r3]
    32e4:	ldr	r1, [pc, #-2928]	; 277c <grib_init+0x2168>
    32e8:	mov	r0, r3
    32ec:	bl	0 <coda_type_set_description>
    32f0:	bl	0 <__aeabi_read_tp>
    32f4:	mov	r2, r0
    32f8:	ldr	r3, [pc, #-2912]	; 27a0 <grib_init+0x218c>
    32fc:	ldr	r3, [r2, r3]
    3300:	add	r4, r3, #248	; 0xf8
    3304:	mov	r1, #2
    3308:	mov	r0, #7
    330c:	bl	0 <coda_type_number_new>
    3310:	mov	r3, r0
    3314:	str	r3, [r4]
    3318:	bl	0 <__aeabi_read_tp>
    331c:	mov	r2, r0
    3320:	ldr	r3, [pc, #-2952]	; 27a0 <grib_init+0x218c>
    3324:	ldr	r3, [r2, r3]
    3328:	add	r3, r3, #248	; 0xf8
    332c:	ldr	r3, [r3]
    3330:	ldr	r1, [fp, #-20]	; 0xffffffec
    3334:	mov	r0, r3
    3338:	bl	0 <coda_type_number_set_endianness>
    333c:	bl	0 <__aeabi_read_tp>
    3340:	mov	r2, r0
    3344:	ldr	r3, [pc, #-2988]	; 27a0 <grib_init+0x218c>
    3348:	ldr	r3, [r2, r3]
    334c:	add	r3, r3, #248	; 0xf8
    3350:	ldr	r3, [r3]
    3354:	mov	r1, #1
    3358:	mov	r0, r3
    335c:	bl	0 <coda_type_set_read_type>
    3360:	bl	0 <__aeabi_read_tp>
    3364:	mov	r2, r0
    3368:	ldr	r3, [pc, #-3024]	; 27a0 <grib_init+0x218c>
    336c:	ldr	r3, [r2, r3]
    3370:	add	r3, r3, #248	; 0xf8
    3374:	ldr	r1, [r3]
    3378:	mov	r2, #8
    337c:	mov	r3, #0
    3380:	mov	r0, r1
    3384:	bl	0 <coda_type_set_bit_size>
    3388:	bl	0 <__aeabi_read_tp>
    338c:	mov	r2, r0
    3390:	ldr	r3, [pc, #-3064]	; 27a0 <grib_init+0x218c>
    3394:	ldr	r3, [r2, r3]
    3398:	add	r3, r3, #248	; 0xf8
    339c:	ldr	r3, [r3]
    33a0:	ldr	r1, [pc, #-3112]	; 2780 <grib_init+0x216c>
    33a4:	mov	r0, r3
    33a8:	bl	0 <coda_type_set_description>
    33ac:	bl	0 <__aeabi_read_tp>
    33b0:	mov	r2, r0
    33b4:	ldr	r3, [pc, #-3100]	; 27a0 <grib_init+0x218c>
    33b8:	ldr	r3, [r2, r3]
    33bc:	add	r4, r3, #252	; 0xfc
    33c0:	mov	r1, #2
    33c4:	mov	r0, #7
    33c8:	bl	0 <coda_type_number_new>
    33cc:	mov	r3, r0
    33d0:	str	r3, [r4]
    33d4:	bl	0 <__aeabi_read_tp>
    33d8:	mov	r2, r0
    33dc:	ldr	r3, [pc, #-3140]	; 27a0 <grib_init+0x218c>
    33e0:	ldr	r3, [r2, r3]
    33e4:	add	r3, r3, #252	; 0xfc
    33e8:	ldr	r3, [r3]
    33ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    33f0:	mov	r0, r3
    33f4:	bl	0 <coda_type_number_set_endianness>
    33f8:	bl	0 <__aeabi_read_tp>
    33fc:	mov	r2, r0
    3400:	ldr	r3, [pc, #-3176]	; 27a0 <grib_init+0x218c>
    3404:	ldr	r3, [r2, r3]
    3408:	add	r3, r3, #252	; 0xfc
    340c:	ldr	r3, [r3]
    3410:	mov	r1, #2
    3414:	mov	r0, r3
    3418:	bl	0 <coda_type_set_read_type>
    341c:	bl	0 <__aeabi_read_tp>
    3420:	mov	r2, r0
    3424:	ldr	r3, [pc, #-3212]	; 27a0 <grib_init+0x218c>
    3428:	ldr	r3, [r2, r3]
    342c:	add	r3, r3, #252	; 0xfc
    3430:	ldr	r1, [r3]
    3434:	mov	r2, #16
    3438:	mov	r3, #0
    343c:	mov	r0, r1
    3440:	bl	0 <coda_type_set_bit_size>
    3444:	bl	0 <__aeabi_read_tp>
    3448:	mov	r2, r0
    344c:	ldr	r3, [pc, #-3252]	; 27a0 <grib_init+0x218c>
    3450:	ldr	r3, [r2, r3]
    3454:	add	r3, r3, #252	; 0xfc
    3458:	ldr	r3, [r3]
    345c:	ldr	r1, [pc, #-3296]	; 2784 <grib_init+0x2170>
    3460:	mov	r0, r3
    3464:	bl	0 <coda_type_set_description>
    3468:	bl	0 <__aeabi_read_tp>
    346c:	mov	r2, r0
    3470:	ldr	r3, [pc, #-3288]	; 27a0 <grib_init+0x218c>
    3474:	ldr	r3, [r2, r3]
    3478:	add	r4, r3, #256	; 0x100
    347c:	mov	r1, #3
    3480:	mov	r0, #7
    3484:	bl	0 <coda_type_number_new>
    3488:	mov	r3, r0
    348c:	str	r3, [r4]
    3490:	bl	0 <__aeabi_read_tp>
    3494:	mov	r2, r0
    3498:	ldr	r3, [pc, #-3328]	; 27a0 <grib_init+0x218c>
    349c:	ldr	r3, [r2, r3]
    34a0:	add	r3, r3, #256	; 0x100
    34a4:	ldr	r3, [r3]
    34a8:	ldr	r1, [fp, #-20]	; 0xffffffec
    34ac:	mov	r0, r3
    34b0:	bl	0 <coda_type_number_set_endianness>
    34b4:	bl	0 <__aeabi_read_tp>
    34b8:	mov	r2, r0
    34bc:	ldr	r3, [pc, #-3364]	; 27a0 <grib_init+0x218c>
    34c0:	ldr	r3, [r2, r3]
    34c4:	add	r3, r3, #256	; 0x100
    34c8:	ldr	r3, [r3]
    34cc:	mov	r1, #8
    34d0:	mov	r0, r3
    34d4:	bl	0 <coda_type_set_read_type>
    34d8:	bl	0 <__aeabi_read_tp>
    34dc:	mov	r2, r0
    34e0:	ldr	r3, [pc, #-3400]	; 27a0 <grib_init+0x218c>
    34e4:	ldr	r3, [r2, r3]
    34e8:	add	r3, r3, #256	; 0x100
    34ec:	ldr	r1, [r3]
    34f0:	mov	r2, #32
    34f4:	mov	r3, #0
    34f8:	mov	r0, r1
    34fc:	bl	0 <coda_type_set_bit_size>
    3500:	bl	0 <__aeabi_read_tp>
    3504:	mov	r2, r0
    3508:	ldr	r3, [pc, #-3440]	; 27a0 <grib_init+0x218c>
    350c:	ldr	r3, [r2, r3]
    3510:	add	r3, r3, #256	; 0x100
    3514:	ldr	r3, [r3]
    3518:	ldr	r1, [pc, #-3480]	; 2788 <grib_init+0x2174>
    351c:	mov	r0, r3
    3520:	bl	0 <coda_type_set_description>
    3524:	bl	0 <__aeabi_read_tp>
    3528:	mov	r2, r0
    352c:	ldr	r3, [pc, #-3476]	; 27a0 <grib_init+0x218c>
    3530:	ldr	r3, [r2, r3]
    3534:	add	r4, r3, #260	; 0x104
    3538:	mov	r0, #7
    353c:	bl	0 <coda_type_array_new>
    3540:	mov	r3, r0
    3544:	str	r3, [r4]
    3548:	mov	r1, #3
    354c:	mov	r0, #7
    3550:	bl	0 <coda_type_number_new>
    3554:	str	r0, [fp, #-24]	; 0xffffffe8
    3558:	ldr	r1, [fp, #-20]	; 0xffffffec
    355c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3560:	bl	0 <coda_type_number_set_endianness>
    3564:	mov	r1, #8
    3568:	ldr	r0, [fp, #-24]	; 0xffffffe8
    356c:	bl	0 <coda_type_set_read_type>
    3570:	mov	r2, #32
    3574:	mov	r3, #0
    3578:	ldr	r0, [fp, #-24]	; 0xffffffe8
    357c:	bl	0 <coda_type_set_bit_size>
    3580:	bl	0 <__aeabi_read_tp>
    3584:	mov	r2, r0
    3588:	ldr	r3, [pc, #-3568]	; 27a0 <grib_init+0x218c>
    358c:	ldr	r3, [r2, r3]
    3590:	add	r3, r3, #260	; 0x104
    3594:	ldr	r3, [r3]
    3598:	ldr	r1, [fp, #-24]	; 0xffffffe8
    359c:	mov	r0, r3
    35a0:	bl	0 <coda_type_array_set_base_type>
    35a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    35a8:	bl	0 <coda_type_release>
    35ac:	bl	0 <__aeabi_read_tp>
    35b0:	mov	r2, r0
    35b4:	ldr	r3, [pc, #-3612]	; 27a0 <grib_init+0x218c>
    35b8:	ldr	r3, [r2, r3]
    35bc:	add	r3, r3, #260	; 0x104
    35c0:	ldr	r3, [r3]
    35c4:	mov	r1, #0
    35c8:	mov	r0, r3
    35cc:	bl	0 <coda_type_array_add_variable_dimension>
    35d0:	bl	0 <__aeabi_read_tp>
    35d4:	mov	r2, r0
    35d8:	ldr	r3, [pc, #-3648]	; 27a0 <grib_init+0x218c>
    35dc:	ldr	r3, [r2, r3]
    35e0:	add	r4, r3, #264	; 0x108
    35e4:	mov	r0, #7
    35e8:	bl	0 <coda_type_record_new>
    35ec:	mov	r3, r0
    35f0:	str	r3, [r4]
    35f4:	ldr	r0, [pc, #-3696]	; 278c <grib_init+0x2178>
    35f8:	bl	0 <coda_type_record_field_new>
    35fc:	str	r0, [fp, #-28]	; 0xffffffe4
    3600:	bl	0 <__aeabi_read_tp>
    3604:	mov	r2, r0
    3608:	ldr	r3, [pc, #-3696]	; 27a0 <grib_init+0x218c>
    360c:	ldr	r3, [r2, r3]
    3610:	add	r3, r3, #132	; 0x84
    3614:	ldr	r3, [r3]
    3618:	mov	r1, r3
    361c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3620:	bl	0 <coda_type_record_field_set_type>
    3624:	bl	0 <__aeabi_read_tp>
    3628:	mov	r2, r0
    362c:	ldr	r3, [pc, #-3732]	; 27a0 <grib_init+0x218c>
    3630:	ldr	r3, [r2, r3]
    3634:	add	r3, r3, #264	; 0x108
    3638:	ldr	r3, [r3]
    363c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3640:	mov	r0, r3
    3644:	bl	0 <coda_type_record_add_field>
    3648:	ldr	r0, [pc, #-3776]	; 2790 <grib_init+0x217c>
    364c:	bl	0 <coda_type_record_field_new>
    3650:	str	r0, [fp, #-28]	; 0xffffffe4
    3654:	bl	0 <__aeabi_read_tp>
    3658:	mov	r2, r0
    365c:	ldr	r3, [pc, #-3780]	; 27a0 <grib_init+0x218c>
    3660:	ldr	r3, [r2, r3]
    3664:	add	r3, r3, #136	; 0x88
    3668:	ldr	r3, [r3]
    366c:	mov	r1, r3
    3670:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3674:	bl	0 <coda_type_record_field_set_type>
    3678:	bl	0 <__aeabi_read_tp>
    367c:	mov	r2, r0
    3680:	ldr	r3, [pc, #-3816]	; 27a0 <grib_init+0x218c>
    3684:	ldr	r3, [r2, r3]
    3688:	add	r3, r3, #264	; 0x108
    368c:	ldr	r3, [r3]
    3690:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3694:	mov	r0, r3
    3698:	bl	0 <coda_type_record_add_field>
    369c:	ldr	r0, [pc, #-3856]	; 2794 <grib_init+0x2180>
    36a0:	bl	0 <coda_type_record_field_new>
    36a4:	str	r0, [fp, #-28]	; 0xffffffe4
    36a8:	bl	0 <__aeabi_read_tp>
    36ac:	mov	r2, r0
    36b0:	ldr	r3, [pc, #-3864]	; 27a0 <grib_init+0x218c>
    36b4:	ldr	r3, [r2, r3]
    36b8:	add	r3, r3, #168	; 0xa8
    36bc:	ldr	r3, [r3]
    36c0:	mov	r1, r3
    36c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    36c8:	bl	0 <coda_type_record_field_set_type>
    36cc:	bl	0 <__aeabi_read_tp>
    36d0:	mov	r2, r0
    36d4:	ldr	r3, [pc, #-3900]	; 27a0 <grib_init+0x218c>
    36d8:	ldr	r3, [r2, r3]
    36dc:	add	r3, r3, #264	; 0x108
    36e0:	ldr	r3, [r3]
    36e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    36e8:	mov	r0, r3
    36ec:	bl	0 <coda_type_record_add_field>
    36f0:	ldr	r0, [pc, #-3936]	; 2798 <grib_init+0x2184>
    36f4:	bl	0 <coda_type_record_field_new>
    36f8:	str	r0, [fp, #-28]	; 0xffffffe4
    36fc:	bl	0 <__aeabi_read_tp>
    3700:	mov	r2, r0
    3704:	ldr	r3, [pc, #-3948]	; 27a0 <grib_init+0x218c>
    3708:	ldr	r3, [r2, r3]
    370c:	add	r3, r3, #172	; 0xac
    3710:	ldr	r3, [r3]
    3714:	mov	r1, r3
    3718:	ldr	r0, [fp, #-28]	; 0xffffffe4
    371c:	bl	0 <coda_type_record_field_set_type>
    3720:	bl	0 <__aeabi_read_tp>
    3724:	mov	r2, r0
    3728:	ldr	r3, [pc, #-3984]	; 27a0 <grib_init+0x218c>
    372c:	ldr	r3, [r2, r3]
    3730:	add	r3, r3, #264	; 0x108
    3734:	ldr	r3, [r3]
    3738:	ldr	r1, [fp, #-28]	; 0xffffffe4
    373c:	mov	r0, r3
    3740:	bl	0 <coda_type_record_add_field>
    3744:	ldr	r0, [pc, #-4016]	; 279c <grib_init+0x2188>
    3748:	bl	0 <coda_type_record_field_new>
    374c:	str	r0, [fp, #-28]	; 0xffffffe4
    3750:	bl	0 <__aeabi_read_tp>
    3754:	mov	r2, r0
    3758:	ldr	r3, [pc, #-4032]	; 27a0 <grib_init+0x218c>
    375c:	ldr	r3, [r2, r3]
    3760:	add	r3, r3, #184	; 0xb8
    3764:	ldr	r3, [r3]
    3768:	mov	r1, r3
    376c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3770:	bl	0 <coda_type_record_field_set_type>
    3774:	bl	0 <__aeabi_read_tp>
    3778:	mov	r2, r0
    377c:	ldr	r3, [pc, #-4068]	; 27a0 <grib_init+0x218c>
    3780:	ldr	r3, [r2, r3]
    3784:	add	r3, r3, #264	; 0x108
    3788:	ldr	r3, [r3]
    378c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3790:	mov	r0, r3
    3794:	bl	0 <coda_type_record_add_field>
    3798:	ldr	r0, [pc, #-4092]	; 27a4 <grib_init+0x2190>
    379c:	bl	0 <coda_type_record_field_new>
    37a0:	str	r0, [fp, #-28]	; 0xffffffe4
    37a4:	bl	0 <__aeabi_read_tp>
    37a8:	mov	r2, r0
    37ac:	ldr	r3, [pc, #4088]	; 47ac <grib_init+0x4198>
    37b0:	ldr	r3, [r2, r3]
    37b4:	add	r3, r3, #188	; 0xbc
    37b8:	ldr	r3, [r3]
    37bc:	mov	r1, r3
    37c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37c4:	bl	0 <coda_type_record_field_set_type>
    37c8:	bl	0 <__aeabi_read_tp>
    37cc:	mov	r2, r0
    37d0:	ldr	r3, [pc, #4052]	; 47ac <grib_init+0x4198>
    37d4:	ldr	r3, [r2, r3]
    37d8:	add	r3, r3, #264	; 0x108
    37dc:	ldr	r3, [r3]
    37e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    37e4:	mov	r0, r3
    37e8:	bl	0 <coda_type_record_add_field>
    37ec:	ldr	r0, [pc, #4028]	; 47b0 <grib_init+0x419c>
    37f0:	bl	0 <coda_type_record_field_new>
    37f4:	str	r0, [fp, #-28]	; 0xffffffe4
    37f8:	bl	0 <__aeabi_read_tp>
    37fc:	mov	r2, r0
    3800:	ldr	r3, [pc, #4004]	; 47ac <grib_init+0x4198>
    3804:	ldr	r3, [r2, r3]
    3808:	add	r3, r3, #192	; 0xc0
    380c:	ldr	r3, [r3]
    3810:	mov	r1, r3
    3814:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3818:	bl	0 <coda_type_record_field_set_type>
    381c:	bl	0 <__aeabi_read_tp>
    3820:	mov	r2, r0
    3824:	ldr	r3, [pc, #3968]	; 47ac <grib_init+0x4198>
    3828:	ldr	r3, [r2, r3]
    382c:	add	r3, r3, #264	; 0x108
    3830:	ldr	r3, [r3]
    3834:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3838:	mov	r0, r3
    383c:	bl	0 <coda_type_record_add_field>
    3840:	ldr	r0, [pc, #3948]	; 47b4 <grib_init+0x41a0>
    3844:	bl	0 <coda_type_record_field_new>
    3848:	str	r0, [fp, #-28]	; 0xffffffe4
    384c:	bl	0 <__aeabi_read_tp>
    3850:	mov	r2, r0
    3854:	ldr	r3, [pc, #3920]	; 47ac <grib_init+0x4198>
    3858:	ldr	r3, [r2, r3]
    385c:	add	r3, r3, #196	; 0xc4
    3860:	ldr	r3, [r3]
    3864:	mov	r1, r3
    3868:	ldr	r0, [fp, #-28]	; 0xffffffe4
    386c:	bl	0 <coda_type_record_field_set_type>
    3870:	bl	0 <__aeabi_read_tp>
    3874:	mov	r2, r0
    3878:	ldr	r3, [pc, #3884]	; 47ac <grib_init+0x4198>
    387c:	ldr	r3, [r2, r3]
    3880:	add	r3, r3, #264	; 0x108
    3884:	ldr	r3, [r3]
    3888:	ldr	r1, [fp, #-28]	; 0xffffffe4
    388c:	mov	r0, r3
    3890:	bl	0 <coda_type_record_add_field>
    3894:	ldr	r0, [pc, #3868]	; 47b8 <grib_init+0x41a4>
    3898:	bl	0 <coda_type_record_field_new>
    389c:	str	r0, [fp, #-28]	; 0xffffffe4
    38a0:	bl	0 <__aeabi_read_tp>
    38a4:	mov	r2, r0
    38a8:	ldr	r3, [pc, #3836]	; 47ac <grib_init+0x4198>
    38ac:	ldr	r3, [r2, r3]
    38b0:	add	r3, r3, #200	; 0xc8
    38b4:	ldr	r3, [r3]
    38b8:	mov	r1, r3
    38bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38c0:	bl	0 <coda_type_record_field_set_type>
    38c4:	bl	0 <__aeabi_read_tp>
    38c8:	mov	r2, r0
    38cc:	ldr	r3, [pc, #3800]	; 47ac <grib_init+0x4198>
    38d0:	ldr	r3, [r2, r3]
    38d4:	add	r3, r3, #264	; 0x108
    38d8:	ldr	r3, [r3]
    38dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    38e0:	mov	r0, r3
    38e4:	bl	0 <coda_type_record_add_field>
    38e8:	ldr	r0, [pc, #3788]	; 47bc <grib_init+0x41a8>
    38ec:	bl	0 <coda_type_record_field_new>
    38f0:	str	r0, [fp, #-28]	; 0xffffffe4
    38f4:	bl	0 <__aeabi_read_tp>
    38f8:	mov	r2, r0
    38fc:	ldr	r3, [pc, #3752]	; 47ac <grib_init+0x4198>
    3900:	ldr	r3, [r2, r3]
    3904:	add	r3, r3, #204	; 0xcc
    3908:	ldr	r3, [r3]
    390c:	mov	r1, r3
    3910:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3914:	bl	0 <coda_type_record_field_set_type>
    3918:	bl	0 <__aeabi_read_tp>
    391c:	mov	r2, r0
    3920:	ldr	r3, [pc, #3716]	; 47ac <grib_init+0x4198>
    3924:	ldr	r3, [r2, r3]
    3928:	add	r3, r3, #264	; 0x108
    392c:	ldr	r3, [r3]
    3930:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3934:	mov	r0, r3
    3938:	bl	0 <coda_type_record_add_field>
    393c:	ldr	r0, [pc, #3708]	; 47c0 <grib_init+0x41ac>
    3940:	bl	0 <coda_type_record_field_new>
    3944:	str	r0, [fp, #-28]	; 0xffffffe4
    3948:	bl	0 <__aeabi_read_tp>
    394c:	mov	r2, r0
    3950:	ldr	r3, [pc, #3668]	; 47ac <grib_init+0x4198>
    3954:	ldr	r3, [r2, r3]
    3958:	add	r3, r3, #208	; 0xd0
    395c:	ldr	r3, [r3]
    3960:	mov	r1, r3
    3964:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3968:	bl	0 <coda_type_record_field_set_type>
    396c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3970:	bl	0 <coda_type_record_field_set_optional>
    3974:	bl	0 <__aeabi_read_tp>
    3978:	mov	r2, r0
    397c:	ldr	r3, [pc, #3624]	; 47ac <grib_init+0x4198>
    3980:	ldr	r3, [r2, r3]
    3984:	add	r3, r3, #264	; 0x108
    3988:	ldr	r3, [r3]
    398c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3990:	mov	r0, r3
    3994:	bl	0 <coda_type_record_add_field>
    3998:	ldr	r0, [pc, #3620]	; 47c4 <grib_init+0x41b0>
    399c:	bl	0 <coda_type_record_field_new>
    39a0:	str	r0, [fp, #-28]	; 0xffffffe4
    39a4:	bl	0 <__aeabi_read_tp>
    39a8:	mov	r2, r0
    39ac:	ldr	r3, [pc, #3576]	; 47ac <grib_init+0x4198>
    39b0:	ldr	r3, [r2, r3]
    39b4:	add	r3, r3, #212	; 0xd4
    39b8:	ldr	r3, [r3]
    39bc:	mov	r1, r3
    39c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    39c4:	bl	0 <coda_type_record_field_set_type>
    39c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    39cc:	bl	0 <coda_type_record_field_set_optional>
    39d0:	bl	0 <__aeabi_read_tp>
    39d4:	mov	r2, r0
    39d8:	ldr	r3, [pc, #3532]	; 47ac <grib_init+0x4198>
    39dc:	ldr	r3, [r2, r3]
    39e0:	add	r3, r3, #264	; 0x108
    39e4:	ldr	r3, [r3]
    39e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    39ec:	mov	r0, r3
    39f0:	bl	0 <coda_type_record_add_field>
    39f4:	ldr	r0, [pc, #3532]	; 47c8 <grib_init+0x41b4>
    39f8:	bl	0 <coda_type_record_field_new>
    39fc:	str	r0, [fp, #-28]	; 0xffffffe4
    3a00:	bl	0 <__aeabi_read_tp>
    3a04:	mov	r2, r0
    3a08:	ldr	r3, [pc, #3484]	; 47ac <grib_init+0x4198>
    3a0c:	ldr	r3, [r2, r3]
    3a10:	add	r3, r3, #216	; 0xd8
    3a14:	ldr	r3, [r3]
    3a18:	mov	r1, r3
    3a1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3a20:	bl	0 <coda_type_record_field_set_type>
    3a24:	bl	0 <__aeabi_read_tp>
    3a28:	mov	r2, r0
    3a2c:	ldr	r3, [pc, #3448]	; 47ac <grib_init+0x4198>
    3a30:	ldr	r3, [r2, r3]
    3a34:	add	r3, r3, #264	; 0x108
    3a38:	ldr	r3, [r3]
    3a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3a40:	mov	r0, r3
    3a44:	bl	0 <coda_type_record_add_field>
    3a48:	ldr	r0, [pc, #3452]	; 47cc <grib_init+0x41b8>
    3a4c:	bl	0 <coda_type_record_field_new>
    3a50:	str	r0, [fp, #-28]	; 0xffffffe4
    3a54:	bl	0 <__aeabi_read_tp>
    3a58:	mov	r2, r0
    3a5c:	ldr	r3, [pc, #3400]	; 47ac <grib_init+0x4198>
    3a60:	ldr	r3, [r2, r3]
    3a64:	add	r3, r3, #224	; 0xe0
    3a68:	ldr	r3, [r3]
    3a6c:	mov	r1, r3
    3a70:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3a74:	bl	0 <coda_type_record_field_set_type>
    3a78:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3a7c:	bl	0 <coda_type_record_field_set_optional>
    3a80:	bl	0 <__aeabi_read_tp>
    3a84:	mov	r2, r0
    3a88:	ldr	r3, [pc, #3356]	; 47ac <grib_init+0x4198>
    3a8c:	ldr	r3, [r2, r3]
    3a90:	add	r3, r3, #264	; 0x108
    3a94:	ldr	r3, [r3]
    3a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3a9c:	mov	r0, r3
    3aa0:	bl	0 <coda_type_record_add_field>
    3aa4:	ldr	r0, [pc, #3364]	; 47d0 <grib_init+0x41bc>
    3aa8:	bl	0 <coda_type_record_field_new>
    3aac:	str	r0, [fp, #-28]	; 0xffffffe4
    3ab0:	bl	0 <__aeabi_read_tp>
    3ab4:	mov	r2, r0
    3ab8:	ldr	r3, [pc, #3308]	; 47ac <grib_init+0x4198>
    3abc:	ldr	r3, [r2, r3]
    3ac0:	add	r3, r3, #232	; 0xe8
    3ac4:	ldr	r3, [r3]
    3ac8:	mov	r1, r3
    3acc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3ad0:	bl	0 <coda_type_record_field_set_type>
    3ad4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3ad8:	bl	0 <coda_type_record_field_set_optional>
    3adc:	bl	0 <__aeabi_read_tp>
    3ae0:	mov	r2, r0
    3ae4:	ldr	r3, [pc, #3264]	; 47ac <grib_init+0x4198>
    3ae8:	ldr	r3, [r2, r3]
    3aec:	add	r3, r3, #264	; 0x108
    3af0:	ldr	r3, [r3]
    3af4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3af8:	mov	r0, r3
    3afc:	bl	0 <coda_type_record_add_field>
    3b00:	bl	0 <__aeabi_read_tp>
    3b04:	mov	r2, r0
    3b08:	ldr	r3, [pc, #3228]	; 47ac <grib_init+0x4198>
    3b0c:	ldr	r3, [r2, r3]
    3b10:	add	r4, r3, #268	; 0x10c
    3b14:	mov	r0, #7
    3b18:	bl	0 <coda_type_record_new>
    3b1c:	mov	r3, r0
    3b20:	str	r3, [r4]
    3b24:	ldr	r0, [pc, #3240]	; 47d4 <grib_init+0x41c0>
    3b28:	bl	0 <coda_type_record_field_new>
    3b2c:	str	r0, [fp, #-28]	; 0xffffffe4
    3b30:	bl	0 <__aeabi_read_tp>
    3b34:	mov	r2, r0
    3b38:	ldr	r3, [pc, #3180]	; 47ac <grib_init+0x4198>
    3b3c:	ldr	r3, [r2, r3]
    3b40:	add	r3, r3, #248	; 0xf8
    3b44:	ldr	r3, [r3]
    3b48:	mov	r1, r3
    3b4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3b50:	bl	0 <coda_type_record_field_set_type>
    3b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3b58:	bl	0 <coda_type_record_field_set_hidden>
    3b5c:	bl	0 <__aeabi_read_tp>
    3b60:	mov	r2, r0
    3b64:	ldr	r3, [pc, #3136]	; 47ac <grib_init+0x4198>
    3b68:	ldr	r3, [r2, r3]
    3b6c:	add	r3, r3, #268	; 0x10c
    3b70:	ldr	r3, [r3]
    3b74:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3b78:	mov	r0, r3
    3b7c:	bl	0 <coda_type_record_add_field>
    3b80:	ldr	r0, [pc, #3152]	; 47d8 <grib_init+0x41c4>
    3b84:	bl	0 <coda_type_record_field_new>
    3b88:	str	r0, [fp, #-28]	; 0xffffffe4
    3b8c:	bl	0 <__aeabi_read_tp>
    3b90:	mov	r2, r0
    3b94:	ldr	r3, [pc, #3088]	; 47ac <grib_init+0x4198>
    3b98:	ldr	r3, [r2, r3]
    3b9c:	add	r3, r3, #252	; 0xfc
    3ba0:	ldr	r3, [r3]
    3ba4:	mov	r1, r3
    3ba8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3bac:	bl	0 <coda_type_record_field_set_type>
    3bb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3bb4:	bl	0 <coda_type_record_field_set_hidden>
    3bb8:	bl	0 <__aeabi_read_tp>
    3bbc:	mov	r2, r0
    3bc0:	ldr	r3, [pc, #3044]	; 47ac <grib_init+0x4198>
    3bc4:	ldr	r3, [r2, r3]
    3bc8:	add	r3, r3, #268	; 0x10c
    3bcc:	ldr	r3, [r3]
    3bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3bd4:	mov	r0, r3
    3bd8:	bl	0 <coda_type_record_add_field>
    3bdc:	ldr	r0, [pc, #3064]	; 47dc <grib_init+0x41c8>
    3be0:	bl	0 <coda_type_record_field_new>
    3be4:	str	r0, [fp, #-28]	; 0xffffffe4
    3be8:	bl	0 <__aeabi_read_tp>
    3bec:	mov	r2, r0
    3bf0:	ldr	r3, [pc, #2996]	; 47ac <grib_init+0x4198>
    3bf4:	ldr	r3, [r2, r3]
    3bf8:	add	r3, r3, #256	; 0x100
    3bfc:	ldr	r3, [r3]
    3c00:	mov	r1, r3
    3c04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3c08:	bl	0 <coda_type_record_field_set_type>
    3c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3c10:	bl	0 <coda_type_record_field_set_hidden>
    3c14:	bl	0 <__aeabi_read_tp>
    3c18:	mov	r2, r0
    3c1c:	ldr	r3, [pc, #2952]	; 47ac <grib_init+0x4198>
    3c20:	ldr	r3, [r2, r3]
    3c24:	add	r3, r3, #268	; 0x10c
    3c28:	ldr	r3, [r3]
    3c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3c30:	mov	r0, r3
    3c34:	bl	0 <coda_type_record_add_field>
    3c38:	ldr	r0, [pc, #2976]	; 47e0 <grib_init+0x41cc>
    3c3c:	bl	0 <coda_type_record_field_new>
    3c40:	str	r0, [fp, #-28]	; 0xffffffe4
    3c44:	bl	0 <__aeabi_read_tp>
    3c48:	mov	r2, r0
    3c4c:	ldr	r3, [pc, #2904]	; 47ac <grib_init+0x4198>
    3c50:	ldr	r3, [r2, r3]
    3c54:	add	r3, r3, #260	; 0x104
    3c58:	ldr	r3, [r3]
    3c5c:	mov	r1, r3
    3c60:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3c64:	bl	0 <coda_type_record_field_set_type>
    3c68:	bl	0 <__aeabi_read_tp>
    3c6c:	mov	r2, r0
    3c70:	ldr	r3, [pc, #2868]	; 47ac <grib_init+0x4198>
    3c74:	ldr	r3, [r2, r3]
    3c78:	add	r3, r3, #268	; 0x10c
    3c7c:	ldr	r3, [r3]
    3c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3c84:	mov	r0, r3
    3c88:	bl	0 <coda_type_record_add_field>
    3c8c:	bl	0 <__aeabi_read_tp>
    3c90:	mov	r2, r0
    3c94:	ldr	r3, [pc, #2832]	; 47ac <grib_init+0x4198>
    3c98:	ldr	r3, [r2, r3]
    3c9c:	add	r4, r3, #272	; 0x110
    3ca0:	mov	r0, #7
    3ca4:	bl	0 <coda_type_record_new>
    3ca8:	mov	r3, r0
    3cac:	str	r3, [r4]
    3cb0:	ldr	r0, [pc, #2860]	; 47e4 <grib_init+0x41d0>
    3cb4:	bl	0 <coda_type_record_field_new>
    3cb8:	str	r0, [fp, #-28]	; 0xffffffe4
    3cbc:	bl	0 <__aeabi_read_tp>
    3cc0:	mov	r2, r0
    3cc4:	ldr	r3, [pc, #2784]	; 47ac <grib_init+0x4198>
    3cc8:	ldr	r3, [r2, r3]
    3ccc:	add	r3, r3, #12
    3cd0:	ldr	r3, [r3]
    3cd4:	mov	r1, r3
    3cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3cdc:	bl	0 <coda_type_record_field_set_type>
    3ce0:	bl	0 <__aeabi_read_tp>
    3ce4:	mov	r2, r0
    3ce8:	ldr	r3, [pc, #2748]	; 47ac <grib_init+0x4198>
    3cec:	ldr	r3, [r2, r3]
    3cf0:	add	r3, r3, #272	; 0x110
    3cf4:	ldr	r3, [r3]
    3cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3cfc:	mov	r0, r3
    3d00:	bl	0 <coda_type_record_add_field>
    3d04:	ldr	r0, [pc, #2780]	; 47e8 <grib_init+0x41d4>
    3d08:	bl	0 <coda_type_record_field_new>
    3d0c:	str	r0, [fp, #-28]	; 0xffffffe4
    3d10:	bl	0 <__aeabi_read_tp>
    3d14:	mov	r2, r0
    3d18:	ldr	r3, [pc, #2700]	; 47ac <grib_init+0x4198>
    3d1c:	ldr	r3, [r2, r3]
    3d20:	add	r3, r3, #8
    3d24:	ldr	r3, [r3]
    3d28:	mov	r1, r3
    3d2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3d30:	bl	0 <coda_type_record_field_set_type>
    3d34:	bl	0 <__aeabi_read_tp>
    3d38:	mov	r2, r0
    3d3c:	ldr	r3, [pc, #2664]	; 47ac <grib_init+0x4198>
    3d40:	ldr	r3, [r2, r3]
    3d44:	add	r3, r3, #272	; 0x110
    3d48:	ldr	r3, [r3]
    3d4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3d50:	mov	r0, r3
    3d54:	bl	0 <coda_type_record_add_field>
    3d58:	ldr	r0, [pc, #2700]	; 47ec <grib_init+0x41d8>
    3d5c:	bl	0 <coda_type_record_field_new>
    3d60:	str	r0, [fp, #-28]	; 0xffffffe4
    3d64:	bl	0 <__aeabi_read_tp>
    3d68:	mov	r2, r0
    3d6c:	ldr	r3, [pc, #2616]	; 47ac <grib_init+0x4198>
    3d70:	ldr	r3, [r2, r3]
    3d74:	add	r3, r3, #16
    3d78:	ldr	r3, [r3]
    3d7c:	mov	r1, r3
    3d80:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3d84:	bl	0 <coda_type_record_field_set_type>
    3d88:	bl	0 <__aeabi_read_tp>
    3d8c:	mov	r2, r0
    3d90:	ldr	r3, [pc, #2580]	; 47ac <grib_init+0x4198>
    3d94:	ldr	r3, [r2, r3]
    3d98:	add	r3, r3, #272	; 0x110
    3d9c:	ldr	r3, [r3]
    3da0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3da4:	mov	r0, r3
    3da8:	bl	0 <coda_type_record_add_field>
    3dac:	ldr	r0, [pc, #2620]	; 47f0 <grib_init+0x41dc>
    3db0:	bl	0 <coda_type_record_field_new>
    3db4:	str	r0, [fp, #-28]	; 0xffffffe4
    3db8:	bl	0 <__aeabi_read_tp>
    3dbc:	mov	r2, r0
    3dc0:	ldr	r3, [pc, #2532]	; 47ac <grib_init+0x4198>
    3dc4:	ldr	r3, [r2, r3]
    3dc8:	add	r3, r3, #20
    3dcc:	ldr	r3, [r3]
    3dd0:	mov	r1, r3
    3dd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3dd8:	bl	0 <coda_type_record_field_set_type>
    3ddc:	bl	0 <__aeabi_read_tp>
    3de0:	mov	r2, r0
    3de4:	ldr	r3, [pc, #2496]	; 47ac <grib_init+0x4198>
    3de8:	ldr	r3, [r2, r3]
    3dec:	add	r3, r3, #272	; 0x110
    3df0:	ldr	r3, [r3]
    3df4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3df8:	mov	r0, r3
    3dfc:	bl	0 <coda_type_record_add_field>
    3e00:	ldr	r0, [pc, #2540]	; 47f4 <grib_init+0x41e0>
    3e04:	bl	0 <coda_type_record_field_new>
    3e08:	str	r0, [fp, #-28]	; 0xffffffe4
    3e0c:	bl	0 <__aeabi_read_tp>
    3e10:	mov	r2, r0
    3e14:	ldr	r3, [pc, #2448]	; 47ac <grib_init+0x4198>
    3e18:	ldr	r3, [r2, r3]
    3e1c:	add	r3, r3, #24
    3e20:	ldr	r3, [r3]
    3e24:	mov	r1, r3
    3e28:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e2c:	bl	0 <coda_type_record_field_set_type>
    3e30:	bl	0 <__aeabi_read_tp>
    3e34:	mov	r2, r0
    3e38:	ldr	r3, [pc, #2412]	; 47ac <grib_init+0x4198>
    3e3c:	ldr	r3, [r2, r3]
    3e40:	add	r3, r3, #272	; 0x110
    3e44:	ldr	r3, [r3]
    3e48:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3e4c:	mov	r0, r3
    3e50:	bl	0 <coda_type_record_add_field>
    3e54:	ldr	r0, [pc, #2460]	; 47f8 <grib_init+0x41e4>
    3e58:	bl	0 <coda_type_record_field_new>
    3e5c:	str	r0, [fp, #-28]	; 0xffffffe4
    3e60:	bl	0 <__aeabi_read_tp>
    3e64:	mov	r2, r0
    3e68:	ldr	r3, [pc, #2364]	; 47ac <grib_init+0x4198>
    3e6c:	ldr	r3, [r2, r3]
    3e70:	add	r3, r3, #28
    3e74:	ldr	r3, [r3]
    3e78:	mov	r1, r3
    3e7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e80:	bl	0 <coda_type_record_field_set_type>
    3e84:	bl	0 <__aeabi_read_tp>
    3e88:	mov	r2, r0
    3e8c:	ldr	r3, [pc, #2328]	; 47ac <grib_init+0x4198>
    3e90:	ldr	r3, [r2, r3]
    3e94:	add	r3, r3, #272	; 0x110
    3e98:	ldr	r3, [r3]
    3e9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3ea0:	mov	r0, r3
    3ea4:	bl	0 <coda_type_record_add_field>
    3ea8:	ldr	r0, [pc, #2380]	; 47fc <grib_init+0x41e8>
    3eac:	bl	0 <coda_type_record_field_new>
    3eb0:	str	r0, [fp, #-28]	; 0xffffffe4
    3eb4:	bl	0 <__aeabi_read_tp>
    3eb8:	mov	r2, r0
    3ebc:	ldr	r3, [pc, #2280]	; 47ac <grib_init+0x4198>
    3ec0:	ldr	r3, [r2, r3]
    3ec4:	add	r3, r3, #32
    3ec8:	ldr	r3, [r3]
    3ecc:	mov	r1, r3
    3ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3ed4:	bl	0 <coda_type_record_field_set_type>
    3ed8:	bl	0 <__aeabi_read_tp>
    3edc:	mov	r2, r0
    3ee0:	ldr	r3, [pc, #2244]	; 47ac <grib_init+0x4198>
    3ee4:	ldr	r3, [r2, r3]
    3ee8:	add	r3, r3, #272	; 0x110
    3eec:	ldr	r3, [r3]
    3ef0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3ef4:	mov	r0, r3
    3ef8:	bl	0 <coda_type_record_add_field>
    3efc:	ldr	r0, [pc, #2300]	; 4800 <grib_init+0x41ec>
    3f00:	bl	0 <coda_type_record_field_new>
    3f04:	str	r0, [fp, #-28]	; 0xffffffe4
    3f08:	bl	0 <__aeabi_read_tp>
    3f0c:	mov	r2, r0
    3f10:	ldr	r3, [pc, #2196]	; 47ac <grib_init+0x4198>
    3f14:	ldr	r3, [r2, r3]
    3f18:	add	r3, r3, #36	; 0x24
    3f1c:	ldr	r3, [r3]
    3f20:	mov	r1, r3
    3f24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3f28:	bl	0 <coda_type_record_field_set_type>
    3f2c:	bl	0 <__aeabi_read_tp>
    3f30:	mov	r2, r0
    3f34:	ldr	r3, [pc, #2160]	; 47ac <grib_init+0x4198>
    3f38:	ldr	r3, [r2, r3]
    3f3c:	add	r3, r3, #272	; 0x110
    3f40:	ldr	r3, [r3]
    3f44:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3f48:	mov	r0, r3
    3f4c:	bl	0 <coda_type_record_add_field>
    3f50:	ldr	r0, [pc, #2220]	; 4804 <grib_init+0x41f0>
    3f54:	bl	0 <coda_type_record_field_new>
    3f58:	str	r0, [fp, #-28]	; 0xffffffe4
    3f5c:	bl	0 <__aeabi_read_tp>
    3f60:	mov	r2, r0
    3f64:	ldr	r3, [pc, #2112]	; 47ac <grib_init+0x4198>
    3f68:	ldr	r3, [r2, r3]
    3f6c:	add	r3, r3, #40	; 0x28
    3f70:	ldr	r3, [r3]
    3f74:	mov	r1, r3
    3f78:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3f7c:	bl	0 <coda_type_record_field_set_type>
    3f80:	bl	0 <__aeabi_read_tp>
    3f84:	mov	r2, r0
    3f88:	ldr	r3, [pc, #2076]	; 47ac <grib_init+0x4198>
    3f8c:	ldr	r3, [r2, r3]
    3f90:	add	r3, r3, #272	; 0x110
    3f94:	ldr	r3, [r3]
    3f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3f9c:	mov	r0, r3
    3fa0:	bl	0 <coda_type_record_add_field>
    3fa4:	ldr	r0, [pc, #2140]	; 4808 <grib_init+0x41f4>
    3fa8:	bl	0 <coda_type_record_field_new>
    3fac:	str	r0, [fp, #-28]	; 0xffffffe4
    3fb0:	bl	0 <__aeabi_read_tp>
    3fb4:	mov	r2, r0
    3fb8:	ldr	r3, [pc, #2028]	; 47ac <grib_init+0x4198>
    3fbc:	ldr	r3, [r2, r3]
    3fc0:	add	r3, r3, #48	; 0x30
    3fc4:	ldr	r3, [r3]
    3fc8:	mov	r1, r3
    3fcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3fd0:	bl	0 <coda_type_record_field_set_type>
    3fd4:	bl	0 <__aeabi_read_tp>
    3fd8:	mov	r2, r0
    3fdc:	ldr	r3, [pc, #1992]	; 47ac <grib_init+0x4198>
    3fe0:	ldr	r3, [r2, r3]
    3fe4:	add	r3, r3, #272	; 0x110
    3fe8:	ldr	r3, [r3]
    3fec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3ff0:	mov	r0, r3
    3ff4:	bl	0 <coda_type_record_add_field>
    3ff8:	ldr	r0, [pc, #2060]	; 480c <grib_init+0x41f8>
    3ffc:	bl	0 <coda_type_record_field_new>
    4000:	str	r0, [fp, #-28]	; 0xffffffe4
    4004:	bl	0 <__aeabi_read_tp>
    4008:	mov	r2, r0
    400c:	ldr	r3, [pc, #1944]	; 47ac <grib_init+0x4198>
    4010:	ldr	r3, [r2, r3]
    4014:	add	r3, r3, #52	; 0x34
    4018:	ldr	r3, [r3]
    401c:	mov	r1, r3
    4020:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4024:	bl	0 <coda_type_record_field_set_type>
    4028:	bl	0 <__aeabi_read_tp>
    402c:	mov	r2, r0
    4030:	ldr	r3, [pc, #1908]	; 47ac <grib_init+0x4198>
    4034:	ldr	r3, [r2, r3]
    4038:	add	r3, r3, #272	; 0x110
    403c:	ldr	r3, [r3]
    4040:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4044:	mov	r0, r3
    4048:	bl	0 <coda_type_record_add_field>
    404c:	ldr	r0, [pc, #1980]	; 4810 <grib_init+0x41fc>
    4050:	bl	0 <coda_type_record_field_new>
    4054:	str	r0, [fp, #-28]	; 0xffffffe4
    4058:	bl	0 <__aeabi_read_tp>
    405c:	mov	r2, r0
    4060:	ldr	r3, [pc, #1860]	; 47ac <grib_init+0x4198>
    4064:	ldr	r3, [r2, r3]
    4068:	add	r3, r3, #56	; 0x38
    406c:	ldr	r3, [r3]
    4070:	mov	r1, r3
    4074:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4078:	bl	0 <coda_type_record_field_set_type>
    407c:	bl	0 <__aeabi_read_tp>
    4080:	mov	r2, r0
    4084:	ldr	r3, [pc, #1824]	; 47ac <grib_init+0x4198>
    4088:	ldr	r3, [r2, r3]
    408c:	add	r3, r3, #272	; 0x110
    4090:	ldr	r3, [r3]
    4094:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4098:	mov	r0, r3
    409c:	bl	0 <coda_type_record_add_field>
    40a0:	ldr	r0, [pc, #1900]	; 4814 <grib_init+0x4200>
    40a4:	bl	0 <coda_type_record_field_new>
    40a8:	str	r0, [fp, #-28]	; 0xffffffe4
    40ac:	bl	0 <__aeabi_read_tp>
    40b0:	mov	r2, r0
    40b4:	ldr	r3, [pc, #1776]	; 47ac <grib_init+0x4198>
    40b8:	ldr	r3, [r2, r3]
    40bc:	add	r3, r3, #60	; 0x3c
    40c0:	ldr	r3, [r3]
    40c4:	mov	r1, r3
    40c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    40cc:	bl	0 <coda_type_record_field_set_type>
    40d0:	bl	0 <__aeabi_read_tp>
    40d4:	mov	r2, r0
    40d8:	ldr	r3, [pc, #1740]	; 47ac <grib_init+0x4198>
    40dc:	ldr	r3, [r2, r3]
    40e0:	add	r3, r3, #272	; 0x110
    40e4:	ldr	r3, [r3]
    40e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    40ec:	mov	r0, r3
    40f0:	bl	0 <coda_type_record_add_field>
    40f4:	ldr	r0, [pc, #1820]	; 4818 <grib_init+0x4204>
    40f8:	bl	0 <coda_type_record_field_new>
    40fc:	str	r0, [fp, #-28]	; 0xffffffe4
    4100:	bl	0 <__aeabi_read_tp>
    4104:	mov	r2, r0
    4108:	ldr	r3, [pc, #1692]	; 47ac <grib_init+0x4198>
    410c:	ldr	r3, [r2, r3]
    4110:	add	r3, r3, #68	; 0x44
    4114:	ldr	r3, [r3]
    4118:	mov	r1, r3
    411c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4120:	bl	0 <coda_type_record_field_set_type>
    4124:	bl	0 <__aeabi_read_tp>
    4128:	mov	r2, r0
    412c:	ldr	r3, [pc, #1656]	; 47ac <grib_init+0x4198>
    4130:	ldr	r3, [r2, r3]
    4134:	add	r3, r3, #272	; 0x110
    4138:	ldr	r3, [r3]
    413c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4140:	mov	r0, r3
    4144:	bl	0 <coda_type_record_add_field>
    4148:	ldr	r0, [pc, #1740]	; 481c <grib_init+0x4208>
    414c:	bl	0 <coda_type_record_field_new>
    4150:	str	r0, [fp, #-28]	; 0xffffffe4
    4154:	bl	0 <__aeabi_read_tp>
    4158:	mov	r2, r0
    415c:	ldr	r3, [pc, #1608]	; 47ac <grib_init+0x4198>
    4160:	ldr	r3, [r2, r3]
    4164:	add	r3, r3, #72	; 0x48
    4168:	ldr	r3, [r3]
    416c:	mov	r1, r3
    4170:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4174:	bl	0 <coda_type_record_field_set_type>
    4178:	bl	0 <__aeabi_read_tp>
    417c:	mov	r2, r0
    4180:	ldr	r3, [pc, #1572]	; 47ac <grib_init+0x4198>
    4184:	ldr	r3, [r2, r3]
    4188:	add	r3, r3, #272	; 0x110
    418c:	ldr	r3, [r3]
    4190:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4194:	mov	r0, r3
    4198:	bl	0 <coda_type_record_add_field>
    419c:	ldr	r0, [pc, #1660]	; 4820 <grib_init+0x420c>
    41a0:	bl	0 <coda_type_record_field_new>
    41a4:	str	r0, [fp, #-28]	; 0xffffffe4
    41a8:	bl	0 <__aeabi_read_tp>
    41ac:	mov	r2, r0
    41b0:	ldr	r3, [pc, #1524]	; 47ac <grib_init+0x4198>
    41b4:	ldr	r3, [r2, r3]
    41b8:	add	r3, r3, #76	; 0x4c
    41bc:	ldr	r3, [r3]
    41c0:	mov	r1, r3
    41c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    41c8:	bl	0 <coda_type_record_field_set_type>
    41cc:	bl	0 <__aeabi_read_tp>
    41d0:	mov	r2, r0
    41d4:	ldr	r3, [pc, #1488]	; 47ac <grib_init+0x4198>
    41d8:	ldr	r3, [r2, r3]
    41dc:	add	r3, r3, #272	; 0x110
    41e0:	ldr	r3, [r3]
    41e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    41e8:	mov	r0, r3
    41ec:	bl	0 <coda_type_record_add_field>
    41f0:	ldr	r0, [pc, #1580]	; 4824 <grib_init+0x4210>
    41f4:	bl	0 <coda_type_record_field_new>
    41f8:	str	r0, [fp, #-28]	; 0xffffffe4
    41fc:	bl	0 <__aeabi_read_tp>
    4200:	mov	r2, r0
    4204:	ldr	r3, [pc, #1440]	; 47ac <grib_init+0x4198>
    4208:	ldr	r3, [r2, r3]
    420c:	add	r3, r3, #80	; 0x50
    4210:	ldr	r3, [r3]
    4214:	mov	r1, r3
    4218:	ldr	r0, [fp, #-28]	; 0xffffffe4
    421c:	bl	0 <coda_type_record_field_set_type>
    4220:	bl	0 <__aeabi_read_tp>
    4224:	mov	r2, r0
    4228:	ldr	r3, [pc, #1404]	; 47ac <grib_init+0x4198>
    422c:	ldr	r3, [r2, r3]
    4230:	add	r3, r3, #272	; 0x110
    4234:	ldr	r3, [r3]
    4238:	ldr	r1, [fp, #-28]	; 0xffffffe4
    423c:	mov	r0, r3
    4240:	bl	0 <coda_type_record_add_field>
    4244:	ldr	r0, [pc, #1500]	; 4828 <grib_init+0x4214>
    4248:	bl	0 <coda_type_record_field_new>
    424c:	str	r0, [fp, #-28]	; 0xffffffe4
    4250:	bl	0 <__aeabi_read_tp>
    4254:	mov	r2, r0
    4258:	ldr	r3, [pc, #1356]	; 47ac <grib_init+0x4198>
    425c:	ldr	r3, [r2, r3]
    4260:	add	r3, r3, #84	; 0x54
    4264:	ldr	r3, [r3]
    4268:	mov	r1, r3
    426c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4270:	bl	0 <coda_type_record_field_set_type>
    4274:	bl	0 <__aeabi_read_tp>
    4278:	mov	r2, r0
    427c:	ldr	r3, [pc, #1320]	; 47ac <grib_init+0x4198>
    4280:	ldr	r3, [r2, r3]
    4284:	add	r3, r3, #272	; 0x110
    4288:	ldr	r3, [r3]
    428c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4290:	mov	r0, r3
    4294:	bl	0 <coda_type_record_add_field>
    4298:	ldr	r0, [pc, #1420]	; 482c <grib_init+0x4218>
    429c:	bl	0 <coda_type_record_field_new>
    42a0:	str	r0, [fp, #-28]	; 0xffffffe4
    42a4:	bl	0 <__aeabi_read_tp>
    42a8:	mov	r2, r0
    42ac:	ldr	r3, [pc, #1272]	; 47ac <grib_init+0x4198>
    42b0:	ldr	r3, [r2, r3]
    42b4:	add	r3, r3, #88	; 0x58
    42b8:	ldr	r3, [r3]
    42bc:	mov	r1, r3
    42c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    42c4:	bl	0 <coda_type_record_field_set_type>
    42c8:	bl	0 <__aeabi_read_tp>
    42cc:	mov	r2, r0
    42d0:	ldr	r3, [pc, #1236]	; 47ac <grib_init+0x4198>
    42d4:	ldr	r3, [r2, r3]
    42d8:	add	r3, r3, #272	; 0x110
    42dc:	ldr	r3, [r3]
    42e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    42e4:	mov	r0, r3
    42e8:	bl	0 <coda_type_record_add_field>
    42ec:	ldr	r0, [pc, #1340]	; 4830 <grib_init+0x421c>
    42f0:	bl	0 <coda_type_record_field_new>
    42f4:	str	r0, [fp, #-28]	; 0xffffffe4
    42f8:	bl	0 <__aeabi_read_tp>
    42fc:	mov	r2, r0
    4300:	ldr	r3, [pc, #1188]	; 47ac <grib_init+0x4198>
    4304:	ldr	r3, [r2, r3]
    4308:	add	r3, r3, #92	; 0x5c
    430c:	ldr	r3, [r3]
    4310:	mov	r1, r3
    4314:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4318:	bl	0 <coda_type_record_field_set_type>
    431c:	bl	0 <__aeabi_read_tp>
    4320:	mov	r2, r0
    4324:	ldr	r3, [pc, #1152]	; 47ac <grib_init+0x4198>
    4328:	ldr	r3, [r2, r3]
    432c:	add	r3, r3, #272	; 0x110
    4330:	ldr	r3, [r3]
    4334:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4338:	mov	r0, r3
    433c:	bl	0 <coda_type_record_add_field>
    4340:	ldr	r0, [pc, #1260]	; 4834 <grib_init+0x4220>
    4344:	bl	0 <coda_type_record_field_new>
    4348:	str	r0, [fp, #-28]	; 0xffffffe4
    434c:	bl	0 <__aeabi_read_tp>
    4350:	mov	r2, r0
    4354:	ldr	r3, [pc, #1104]	; 47ac <grib_init+0x4198>
    4358:	ldr	r3, [r2, r3]
    435c:	add	r3, r3, #96	; 0x60
    4360:	ldr	r3, [r3]
    4364:	mov	r1, r3
    4368:	ldr	r0, [fp, #-28]	; 0xffffffe4
    436c:	bl	0 <coda_type_record_field_set_type>
    4370:	bl	0 <__aeabi_read_tp>
    4374:	mov	r2, r0
    4378:	ldr	r3, [pc, #1068]	; 47ac <grib_init+0x4198>
    437c:	ldr	r3, [r2, r3]
    4380:	add	r3, r3, #272	; 0x110
    4384:	ldr	r3, [r3]
    4388:	ldr	r1, [fp, #-28]	; 0xffffffe4
    438c:	mov	r0, r3
    4390:	bl	0 <coda_type_record_add_field>
    4394:	ldr	r0, [pc, #1180]	; 4838 <grib_init+0x4224>
    4398:	bl	0 <coda_type_record_field_new>
    439c:	str	r0, [fp, #-28]	; 0xffffffe4
    43a0:	bl	0 <__aeabi_read_tp>
    43a4:	mov	r2, r0
    43a8:	ldr	r3, [pc, #1020]	; 47ac <grib_init+0x4198>
    43ac:	ldr	r3, [r2, r3]
    43b0:	add	r3, r3, #100	; 0x64
    43b4:	ldr	r3, [r3]
    43b8:	mov	r1, r3
    43bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    43c0:	bl	0 <coda_type_record_field_set_type>
    43c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    43c8:	bl	0 <coda_type_record_field_set_hidden>
    43cc:	bl	0 <__aeabi_read_tp>
    43d0:	mov	r2, r0
    43d4:	ldr	r3, [pc, #976]	; 47ac <grib_init+0x4198>
    43d8:	ldr	r3, [r2, r3]
    43dc:	add	r3, r3, #272	; 0x110
    43e0:	ldr	r3, [r3]
    43e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    43e8:	mov	r0, r3
    43ec:	bl	0 <coda_type_record_add_field>
    43f0:	ldr	r0, [pc, #1092]	; 483c <grib_init+0x4228>
    43f4:	bl	0 <coda_type_record_field_new>
    43f8:	str	r0, [fp, #-28]	; 0xffffffe4
    43fc:	bl	0 <__aeabi_read_tp>
    4400:	mov	r2, r0
    4404:	ldr	r3, [pc, #928]	; 47ac <grib_init+0x4198>
    4408:	ldr	r3, [r2, r3]
    440c:	add	r3, r3, #128	; 0x80
    4410:	ldr	r3, [r3]
    4414:	mov	r1, r3
    4418:	ldr	r0, [fp, #-28]	; 0xffffffe4
    441c:	bl	0 <coda_type_record_field_set_type>
    4420:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4424:	bl	0 <coda_type_record_field_set_optional>
    4428:	bl	0 <__aeabi_read_tp>
    442c:	mov	r2, r0
    4430:	ldr	r3, [pc, #884]	; 47ac <grib_init+0x4198>
    4434:	ldr	r3, [r2, r3]
    4438:	add	r3, r3, #272	; 0x110
    443c:	ldr	r3, [r3]
    4440:	ldr	r1, [fp, #-28]	; 0xffffffe4
    4444:	mov	r0, r3
    4448:	bl	0 <coda_type_record_add_field>
    444c:	ldr	r0, [pc, #1004]	; 4840 <grib_init+0x422c>
    4450:	bl	0 <coda_type_record_field_new>
    4454:	str	r0, [fp, #-28]	; 0xffffffe4
    4458:	bl	0 <__aeabi_read_tp>
    445c:	mov	r2, r0
    4460:	ldr	r3, [pc, #836]	; 47ac <grib_init+0x4198>
    4464:	ldr	r3, [r2, r3]
    4468:	add	r3, r3, #264	; 0x108
    446c:	ldr	r3, [r3]
    4470:	mov	r1, r3
    4474:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4478:	bl	0 <coda_type_record_field_set_type>
    447c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    4480:	bl	0 <coda_type_record_field_set_optional>
    4484:	bl	0 <__aeabi_read_tp>
    4488:	mov	r2, r0
    448c:	ldr	r3, [pc, #792]	; 47ac <grib_init+0x4198>
    4490:	ldr	r3, [r2, r3]
    4494:	add	r3, r3, #272	; 0x110
    4498:	ldr	r3, [r3]
    449c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    44a0:	mov	r0, r3
    44a4:	bl	0 <coda_type_record_add_field>
    44a8:	ldr	r0, [pc, #916]	; 4844 <grib_init+0x4230>
    44ac:	bl	0 <coda_type_record_field_new>
    44b0:	str	r0, [fp, #-28]	; 0xffffffe4
    44b4:	bl	0 <__aeabi_read_tp>
    44b8:	mov	r2, r0
    44bc:	ldr	r3, [pc, #744]	; 47ac <grib_init+0x4198>
    44c0:	ldr	r3, [r2, r3]
    44c4:	add	r3, r3, #268	; 0x10c
    44c8:	ldr	r3, [r3]
    44cc:	mov	r1, r3
    44d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    44d4:	bl	0 <coda_type_record_field_set_type>
    44d8:	bl	0 <__aeabi_read_tp>
    44dc:	mov	r2, r0
    44e0:	ldr	r3, [pc, #708]	; 47ac <grib_init+0x4198>
    44e4:	ldr	r3, [r2, r3]
    44e8:	add	r3, r3, #272	; 0x110
    44ec:	ldr	r3, [r3]
    44f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    44f4:	mov	r0, r3
    44f8:	bl	0 <coda_type_record_add_field>
    44fc:	bl	0 <__aeabi_read_tp>
    4500:	mov	r2, r0
    4504:	ldr	r3, [pc, #672]	; 47ac <grib_init+0x4198>
    4508:	ldr	r3, [r2, r3]
    450c:	add	r4, r3, #276	; 0x114
    4510:	mov	r1, #2
    4514:	mov	r0, #7
    4518:	bl	0 <coda_type_number_new>
    451c:	mov	r3, r0
    4520:	str	r3, [r4]
    4524:	bl	0 <__aeabi_read_tp>
    4528:	mov	r2, r0
    452c:	ldr	r3, [pc, #632]	; 47ac <grib_init+0x4198>
    4530:	ldr	r3, [r2, r3]
    4534:	add	r3, r3, #276	; 0x114
    4538:	ldr	r3, [r3]
    453c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4540:	mov	r0, r3
    4544:	bl	0 <coda_type_number_set_endianness>
    4548:	bl	0 <__aeabi_read_tp>
    454c:	mov	r2, r0
    4550:	ldr	r3, [pc, #596]	; 47ac <grib_init+0x4198>
    4554:	ldr	r3, [r2, r3]
    4558:	add	r3, r3, #276	; 0x114
    455c:	ldr	r3, [r3]
    4560:	mov	r1, #4
    4564:	mov	r0, r3
    4568:	bl	0 <coda_type_set_read_type>
    456c:	bl	0 <__aeabi_read_tp>
    4570:	mov	r2, r0
    4574:	ldr	r3, [pc, #560]	; 47ac <grib_init+0x4198>
    4578:	ldr	r3, [r2, r3]
    457c:	add	r3, r3, #276	; 0x114
    4580:	ldr	r1, [r3]
    4584:	mov	r2, #32
    4588:	mov	r3, #0
    458c:	mov	r0, r1
    4590:	bl	0 <coda_type_set_bit_size>
    4594:	bl	0 <__aeabi_read_tp>
    4598:	mov	r2, r0
    459c:	ldr	r3, [pc, #520]	; 47ac <grib_init+0x4198>
    45a0:	ldr	r3, [r2, r3]
    45a4:	add	r4, r3, #280	; 0x118
    45a8:	mov	r1, #2
    45ac:	mov	r0, #7
    45b0:	bl	0 <coda_type_number_new>
    45b4:	mov	r3, r0
    45b8:	str	r3, [r4]
    45bc:	bl	0 <__aeabi_read_tp>
    45c0:	mov	r2, r0
    45c4:	ldr	r3, [pc, #480]	; 47ac <grib_init+0x4198>
    45c8:	ldr	r3, [r2, r3]
    45cc:	add	r3, r3, #280	; 0x118
    45d0:	ldr	r3, [r3]
    45d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    45d8:	mov	r0, r3
    45dc:	bl	0 <coda_type_number_set_endianness>
    45e0:	bl	0 <__aeabi_read_tp>
    45e4:	mov	r2, r0
    45e8:	ldr	r3, [pc, #444]	; 47ac <grib_init+0x4198>
    45ec:	ldr	r3, [r2, r3]
    45f0:	add	r3, r3, #280	; 0x118
    45f4:	ldr	r3, [r3]
    45f8:	mov	r1, #5
    45fc:	mov	r0, r3
    4600:	bl	0 <coda_type_set_read_type>
    4604:	bl	0 <__aeabi_read_tp>
    4608:	mov	r2, r0
    460c:	ldr	r3, [pc, #408]	; 47ac <grib_init+0x4198>
    4610:	ldr	r3, [r2, r3]
    4614:	add	r3, r3, #280	; 0x118
    4618:	ldr	r1, [r3]
    461c:	mov	r2, #32
    4620:	mov	r3, #0
    4624:	mov	r0, r1
    4628:	bl	0 <coda_type_set_bit_size>
    462c:	bl	0 <__aeabi_read_tp>
    4630:	mov	r2, r0
    4634:	ldr	r3, [pc, #368]	; 47ac <grib_init+0x4198>
    4638:	ldr	r3, [r2, r3]
    463c:	add	r4, r3, #284	; 0x11c
    4640:	mov	r1, #2
    4644:	mov	r0, #7
    4648:	bl	0 <coda_type_number_new>
    464c:	mov	r3, r0
    4650:	str	r3, [r4]
    4654:	bl	0 <__aeabi_read_tp>
    4658:	mov	r2, r0
    465c:	ldr	r3, [pc, #328]	; 47ac <grib_init+0x4198>
    4660:	ldr	r3, [r2, r3]
    4664:	add	r3, r3, #284	; 0x11c
    4668:	ldr	r3, [r3]
    466c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4670:	mov	r0, r3
    4674:	bl	0 <coda_type_number_set_endianness>
    4678:	bl	0 <__aeabi_read_tp>
    467c:	mov	r2, r0
    4680:	ldr	r3, [pc, #292]	; 47ac <grib_init+0x4198>
    4684:	ldr	r3, [r2, r3]
    4688:	add	r3, r3, #284	; 0x11c
    468c:	ldr	r3, [r3]
    4690:	mov	r1, #1
    4694:	mov	r0, r3
    4698:	bl	0 <coda_type_set_read_type>
    469c:	bl	0 <__aeabi_read_tp>
    46a0:	mov	r2, r0
    46a4:	ldr	r3, [pc, #256]	; 47ac <grib_init+0x4198>
    46a8:	ldr	r3, [r2, r3]
    46ac:	add	r3, r3, #284	; 0x11c
    46b0:	ldr	r1, [r3]
    46b4:	mov	r2, #8
    46b8:	mov	r3, #0
    46bc:	mov	r0, r1
    46c0:	bl	0 <coda_type_set_bit_size>
    46c4:	bl	0 <__aeabi_read_tp>
    46c8:	mov	r2, r0
    46cc:	ldr	r3, [pc, #216]	; 47ac <grib_init+0x4198>
    46d0:	ldr	r3, [r2, r3]
    46d4:	add	r3, r3, #284	; 0x11c
    46d8:	ldr	r3, [r3]
    46dc:	ldr	r1, [pc, #356]	; 4848 <grib_init+0x4234>
    46e0:	mov	r0, r3
    46e4:	bl	0 <coda_type_set_description>
    46e8:	bl	0 <__aeabi_read_tp>
    46ec:	mov	r2, r0
    46f0:	ldr	r3, [pc, #180]	; 47ac <grib_init+0x4198>
    46f4:	ldr	r3, [r2, r3]
    46f8:	add	r4, r3, #288	; 0x120
    46fc:	mov	r1, #2
    4700:	mov	r0, #7
    4704:	bl	0 <coda_type_number_new>
    4708:	mov	r3, r0
    470c:	str	r3, [r4]
    4710:	bl	0 <__aeabi_read_tp>
    4714:	mov	r2, r0
    4718:	ldr	r3, [pc, #140]	; 47ac <grib_init+0x4198>
    471c:	ldr	r3, [r2, r3]
    4720:	add	r3, r3, #288	; 0x120
    4724:	ldr	r3, [r3]
    4728:	ldr	r1, [fp, #-20]	; 0xffffffec
    472c:	mov	r0, r3
    4730:	bl	0 <coda_type_number_set_endianness>
    4734:	bl	0 <__aeabi_read_tp>
    4738:	mov	r2, r0
    473c:	ldr	r3, [pc, #104]	; 47ac <grib_init+0x4198>
    4740:	ldr	r3, [r2, r3]
    4744:	add	r3, r3, #288	; 0x120
    4748:	ldr	r3, [r3]
    474c:	mov	r1, #3
    4750:	mov	r0, r3
    4754:	bl	0 <coda_type_set_read_type>
    4758:	bl	0 <__aeabi_read_tp>
    475c:	mov	r2, r0
    4760:	ldr	r3, [pc, #68]	; 47ac <grib_init+0x4198>
    4764:	ldr	r3, [r2, r3]
    4768:	add	r3, r3, #288	; 0x120
    476c:	ldr	r1, [r3]
    4770:	mov	r2, #16
    4774:	mov	r3, #0
    4778:	mov	r0, r1
    477c:	bl	0 <coda_type_set_bit_size>
    4780:	bl	0 <__aeabi_read_tp>
    4784:	mov	r2, r0
    4788:	ldr	r3, [pc, #28]	; 47ac <grib_init+0x4198>
    478c:	ldr	r3, [r2, r3]
    4790:	add	r3, r3, #288	; 0x120
    4794:	ldr	r3, [r3]
    4798:	ldr	r1, [pc, #172]	; 484c <grib_init+0x4238>
    479c:	mov	r0, r3
    47a0:	bl	0 <coda_type_set_description>
    47a4:	bl	0 <__aeabi_read_tp>
    47a8:	b	4898 <grib_init+0x4284>
    47ac:	.word	0x00000000
    47b0:	.word	0x00000c4c
    47b4:	.word	0x00000c68
    47b8:	.word	0x00000c80
    47bc:	.word	0x00000c9c
    47c0:	.word	0x00000cb0
    47c4:	.word	0x00000cc4
    47c8:	.word	0x00000cc8
    47cc:	.word	0x00000cd8
    47d0:	.word	0x00000cec
    47d4:	.word	0x00000cfc
    47d8:	.word	0x00000d0c
    47dc:	.word	0x00000d20
    47e0:	.word	0x00000d30
    47e4:	.word	0x00000d38
    47e8:	.word	0x00000d48
    47ec:	.word	0x00000d58
    47f0:	.word	0x00000d60
    47f4:	.word	0x00000d7c
    47f8:	.word	0x00000d8c
    47fc:	.word	0x00000da4
    4800:	.word	0x00000dbc
    4804:	.word	0x00000dc4
    4808:	.word	0x00000dd4
    480c:	.word	0x00000ddc
    4810:	.word	0x00000de0
    4814:	.word	0x00000de8
    4818:	.word	0x00000df0
    481c:	.word	0x00000e00
    4820:	.word	0x00000e04
    4824:	.word	0x00000e08
    4828:	.word	0x00000e1c
    482c:	.word	0x00000e34
    4830:	.word	0x00000e60
    4834:	.word	0x00000e80
    4838:	.word	0x00000e8c
    483c:	.word	0x00000ea0
    4840:	.word	0x00000ea8
    4844:	.word	0x00000eb0
    4848:	.word	0x00000290
    484c:	.word	0x00000eb8
    4850:	.word	0x0000037c
    4854:	.word	0x00000384
    4858:	.word	0x00000394
    485c:	.word	0x000003a4
    4860:	.word	0x000003b0
    4864:	.word	0x000003c0
    4868:	.word	0x00000ee8
    486c:	.word	0x0000055c
    4870:	.word	0x00000578
    4874:	.word	0x00000594
    4878:	.word	0x000005b8
    487c:	.word	0x000005dc
    4880:	.word	0x000005fc
    4884:	.word	0x00000638
    4888:	.word	0x00000664
    488c:	.word	0x00000688
    4890:	.word	0x000006b8
    4894:	.word	0x00000000
    4898:	mov	r2, r0
    489c:	ldr	r3, [pc, #-16]	; 4894 <grib_init+0x4280>
    48a0:	ldr	r3, [r2, r3]
    48a4:	add	r4, r3, #292	; 0x124
    48a8:	mov	r1, #2
    48ac:	mov	r0, #7
    48b0:	bl	0 <coda_type_number_new>
    48b4:	mov	r3, r0
    48b8:	str	r3, [r4]
    48bc:	bl	0 <__aeabi_read_tp>
    48c0:	mov	r2, r0
    48c4:	ldr	r3, [pc, #-56]	; 4894 <grib_init+0x4280>
    48c8:	ldr	r3, [r2, r3]
    48cc:	add	r3, r3, #292	; 0x124
    48d0:	ldr	r3, [r3]
    48d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    48d8:	mov	r0, r3
    48dc:	bl	0 <coda_type_number_set_endianness>
    48e0:	bl	0 <__aeabi_read_tp>
    48e4:	mov	r2, r0
    48e8:	ldr	r3, [pc, #-92]	; 4894 <grib_init+0x4280>
    48ec:	ldr	r3, [r2, r3]
    48f0:	add	r3, r3, #292	; 0x124
    48f4:	ldr	r3, [r3]
    48f8:	mov	r1, #3
    48fc:	mov	r0, r3
    4900:	bl	0 <coda_type_set_read_type>
    4904:	bl	0 <__aeabi_read_tp>
    4908:	mov	r2, r0
    490c:	ldr	r3, [pc, #-128]	; 4894 <grib_init+0x4280>
    4910:	ldr	r3, [r2, r3]
    4914:	add	r3, r3, #292	; 0x124
    4918:	ldr	r1, [r3]
    491c:	mov	r2, #16
    4920:	mov	r3, #0
    4924:	mov	r0, r1
    4928:	bl	0 <coda_type_set_bit_size>
    492c:	bl	0 <__aeabi_read_tp>
    4930:	mov	r2, r0
    4934:	ldr	r3, [pc, #-168]	; 4894 <grib_init+0x4280>
    4938:	ldr	r3, [r2, r3]
    493c:	add	r3, r3, #292	; 0x124
    4940:	ldr	r3, [r3]
    4944:	ldr	r1, [pc, #-252]	; 4850 <grib_init+0x423c>
    4948:	mov	r0, r3
    494c:	bl	0 <coda_type_set_description>
    4950:	bl	0 <__aeabi_read_tp>
    4954:	mov	r2, r0
    4958:	ldr	r3, [pc, #-204]	; 4894 <grib_init+0x4280>
    495c:	ldr	r3, [r2, r3]
    4960:	add	r4, r3, #296	; 0x128
    4964:	mov	r1, #2
    4968:	mov	r0, #7
    496c:	bl	0 <coda_type_number_new>
    4970:	mov	r3, r0
    4974:	str	r3, [r4]
    4978:	bl	0 <__aeabi_read_tp>
    497c:	mov	r2, r0
    4980:	ldr	r3, [pc, #-244]	; 4894 <grib_init+0x4280>
    4984:	ldr	r3, [r2, r3]
    4988:	add	r3, r3, #296	; 0x128
    498c:	ldr	r3, [r3]
    4990:	ldr	r1, [fp, #-20]	; 0xffffffec
    4994:	mov	r0, r3
    4998:	bl	0 <coda_type_number_set_endianness>
    499c:	bl	0 <__aeabi_read_tp>
    49a0:	mov	r2, r0
    49a4:	ldr	r3, [pc, #-280]	; 4894 <grib_init+0x4280>
    49a8:	ldr	r3, [r2, r3]
    49ac:	add	r3, r3, #296	; 0x128
    49b0:	ldr	r3, [r3]
    49b4:	mov	r1, #1
    49b8:	mov	r0, r3
    49bc:	bl	0 <coda_type_set_read_type>
    49c0:	bl	0 <__aeabi_read_tp>
    49c4:	mov	r2, r0
    49c8:	ldr	r3, [pc, #-316]	; 4894 <grib_init+0x4280>
    49cc:	ldr	r3, [r2, r3]
    49d0:	add	r3, r3, #296	; 0x128
    49d4:	ldr	r1, [r3]
    49d8:	mov	r2, #8
    49dc:	mov	r3, #0
    49e0:	mov	r0, r1
    49e4:	bl	0 <coda_type_set_bit_size>
    49e8:	bl	0 <__aeabi_read_tp>
    49ec:	mov	r2, r0
    49f0:	ldr	r3, [pc, #-356]	; 4894 <grib_init+0x4280>
    49f4:	ldr	r3, [r2, r3]
    49f8:	add	r3, r3, #296	; 0x128
    49fc:	ldr	r3, [r3]
    4a00:	ldr	r1, [pc, #-436]	; 4854 <grib_init+0x4240>
    4a04:	mov	r0, r3
    4a08:	bl	0 <coda_type_set_description>
    4a0c:	bl	0 <__aeabi_read_tp>
    4a10:	mov	r2, r0
    4a14:	ldr	r3, [pc, #-392]	; 4894 <grib_init+0x4280>
    4a18:	ldr	r3, [r2, r3]
    4a1c:	add	r4, r3, #300	; 0x12c
    4a20:	mov	r1, #2
    4a24:	mov	r0, #7
    4a28:	bl	0 <coda_type_number_new>
    4a2c:	mov	r3, r0
    4a30:	str	r3, [r4]
    4a34:	bl	0 <__aeabi_read_tp>
    4a38:	mov	r2, r0
    4a3c:	ldr	r3, [pc, #-432]	; 4894 <grib_init+0x4280>
    4a40:	ldr	r3, [r2, r3]
    4a44:	add	r3, r3, #300	; 0x12c
    4a48:	ldr	r3, [r3]
    4a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a50:	mov	r0, r3
    4a54:	bl	0 <coda_type_number_set_endianness>
    4a58:	bl	0 <__aeabi_read_tp>
    4a5c:	mov	r2, r0
    4a60:	ldr	r3, [pc, #-468]	; 4894 <grib_init+0x4280>
    4a64:	ldr	r3, [r2, r3]
    4a68:	add	r3, r3, #300	; 0x12c
    4a6c:	ldr	r3, [r3]
    4a70:	mov	r1, #1
    4a74:	mov	r0, r3
    4a78:	bl	0 <coda_type_set_read_type>
    4a7c:	bl	0 <__aeabi_read_tp>
    4a80:	mov	r2, r0
    4a84:	ldr	r3, [pc, #-504]	; 4894 <grib_init+0x4280>
    4a88:	ldr	r3, [r2, r3]
    4a8c:	add	r3, r3, #300	; 0x12c
    4a90:	ldr	r1, [r3]
    4a94:	mov	r2, #8
    4a98:	mov	r3, #0
    4a9c:	mov	r0, r1
    4aa0:	bl	0 <coda_type_set_bit_size>
    4aa4:	bl	0 <__aeabi_read_tp>
    4aa8:	mov	r2, r0
    4aac:	ldr	r3, [pc, #-544]	; 4894 <grib_init+0x4280>
    4ab0:	ldr	r3, [r2, r3]
    4ab4:	add	r3, r3, #300	; 0x12c
    4ab8:	ldr	r3, [r3]
    4abc:	ldr	r1, [pc, #-620]	; 4858 <grib_init+0x4244>
    4ac0:	mov	r0, r3
    4ac4:	bl	0 <coda_type_set_description>
    4ac8:	bl	0 <__aeabi_read_tp>
    4acc:	mov	r2, r0
    4ad0:	ldr	r3, [pc, #-580]	; 4894 <grib_init+0x4280>
    4ad4:	ldr	r3, [r2, r3]
    4ad8:	add	r4, r3, #304	; 0x130
    4adc:	mov	r1, #2
    4ae0:	mov	r0, #7
    4ae4:	bl	0 <coda_type_number_new>
    4ae8:	mov	r3, r0
    4aec:	str	r3, [r4]
    4af0:	bl	0 <__aeabi_read_tp>
    4af4:	mov	r2, r0
    4af8:	ldr	r3, [pc, #-620]	; 4894 <grib_init+0x4280>
    4afc:	ldr	r3, [r2, r3]
    4b00:	add	r3, r3, #304	; 0x130
    4b04:	ldr	r3, [r3]
    4b08:	ldr	r1, [fp, #-20]	; 0xffffffec
    4b0c:	mov	r0, r3
    4b10:	bl	0 <coda_type_number_set_endianness>
    4b14:	bl	0 <__aeabi_read_tp>
    4b18:	mov	r2, r0
    4b1c:	ldr	r3, [pc, #-656]	; 4894 <grib_init+0x4280>
    4b20:	ldr	r3, [r2, r3]
    4b24:	add	r3, r3, #304	; 0x130
    4b28:	ldr	r3, [r3]
    4b2c:	mov	r1, #1
    4b30:	mov	r0, r3
    4b34:	bl	0 <coda_type_set_read_type>
    4b38:	bl	0 <__aeabi_read_tp>
    4b3c:	mov	r2, r0
    4b40:	ldr	r3, [pc, #-692]	; 4894 <grib_init+0x4280>
    4b44:	ldr	r3, [r2, r3]
    4b48:	add	r3, r3, #304	; 0x130
    4b4c:	ldr	r1, [r3]
    4b50:	mov	r2, #8
    4b54:	mov	r3, #0
    4b58:	mov	r0, r1
    4b5c:	bl	0 <coda_type_set_bit_size>
    4b60:	bl	0 <__aeabi_read_tp>
    4b64:	mov	r2, r0
    4b68:	ldr	r3, [pc, #-732]	; 4894 <grib_init+0x4280>
    4b6c:	ldr	r3, [r2, r3]
    4b70:	add	r3, r3, #304	; 0x130
    4b74:	ldr	r3, [r3]
    4b78:	ldr	r1, [pc, #-804]	; 485c <grib_init+0x4248>
    4b7c:	mov	r0, r3
    4b80:	bl	0 <coda_type_set_description>
    4b84:	bl	0 <__aeabi_read_tp>
    4b88:	mov	r2, r0
    4b8c:	ldr	r3, [pc, #-768]	; 4894 <grib_init+0x4280>
    4b90:	ldr	r3, [r2, r3]
    4b94:	add	r4, r3, #308	; 0x134
    4b98:	mov	r1, #2
    4b9c:	mov	r0, #7
    4ba0:	bl	0 <coda_type_number_new>
    4ba4:	mov	r3, r0
    4ba8:	str	r3, [r4]
    4bac:	bl	0 <__aeabi_read_tp>
    4bb0:	mov	r2, r0
    4bb4:	ldr	r3, [pc, #-808]	; 4894 <grib_init+0x4280>
    4bb8:	ldr	r3, [r2, r3]
    4bbc:	add	r3, r3, #308	; 0x134
    4bc0:	ldr	r3, [r3]
    4bc4:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bc8:	mov	r0, r3
    4bcc:	bl	0 <coda_type_number_set_endianness>
    4bd0:	bl	0 <__aeabi_read_tp>
    4bd4:	mov	r2, r0
    4bd8:	ldr	r3, [pc, #-844]	; 4894 <grib_init+0x4280>
    4bdc:	ldr	r3, [r2, r3]
    4be0:	add	r3, r3, #308	; 0x134
    4be4:	ldr	r3, [r3]
    4be8:	mov	r1, #1
    4bec:	mov	r0, r3
    4bf0:	bl	0 <coda_type_set_read_type>
    4bf4:	bl	0 <__aeabi_read_tp>
    4bf8:	mov	r2, r0
    4bfc:	ldr	r3, [pc, #-880]	; 4894 <grib_init+0x4280>
    4c00:	ldr	r3, [r2, r3]
    4c04:	add	r3, r3, #308	; 0x134
    4c08:	ldr	r1, [r3]
    4c0c:	mov	r2, #8
    4c10:	mov	r3, #0
    4c14:	mov	r0, r1
    4c18:	bl	0 <coda_type_set_bit_size>
    4c1c:	bl	0 <__aeabi_read_tp>
    4c20:	mov	r2, r0
    4c24:	ldr	r3, [pc, #-920]	; 4894 <grib_init+0x4280>
    4c28:	ldr	r3, [r2, r3]
    4c2c:	add	r3, r3, #308	; 0x134
    4c30:	ldr	r3, [r3]
    4c34:	ldr	r1, [pc, #-988]	; 4860 <grib_init+0x424c>
    4c38:	mov	r0, r3
    4c3c:	bl	0 <coda_type_set_description>
    4c40:	bl	0 <__aeabi_read_tp>
    4c44:	mov	r2, r0
    4c48:	ldr	r3, [pc, #-956]	; 4894 <grib_init+0x4280>
    4c4c:	ldr	r3, [r2, r3]
    4c50:	add	r4, r3, #312	; 0x138
    4c54:	mov	r1, #2
    4c58:	mov	r0, #7
    4c5c:	bl	0 <coda_type_number_new>
    4c60:	mov	r3, r0
    4c64:	str	r3, [r4]
    4c68:	bl	0 <__aeabi_read_tp>
    4c6c:	mov	r2, r0
    4c70:	ldr	r3, [pc, #-996]	; 4894 <grib_init+0x4280>
    4c74:	ldr	r3, [r2, r3]
    4c78:	add	r3, r3, #312	; 0x138
    4c7c:	ldr	r3, [r3]
    4c80:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c84:	mov	r0, r3
    4c88:	bl	0 <coda_type_number_set_endianness>
    4c8c:	bl	0 <__aeabi_read_tp>
    4c90:	mov	r2, r0
    4c94:	ldr	r3, [pc, #-1032]	; 4894 <grib_init+0x4280>
    4c98:	ldr	r3, [r2, r3]
    4c9c:	add	r3, r3, #312	; 0x138
    4ca0:	ldr	r3, [r3]
    4ca4:	mov	r1, #1
    4ca8:	mov	r0, r3
    4cac:	bl	0 <coda_type_set_read_type>
    4cb0:	bl	0 <__aeabi_read_tp>
    4cb4:	mov	r2, r0
    4cb8:	ldr	r3, [pc, #-1068]	; 4894 <grib_init+0x4280>
    4cbc:	ldr	r3, [r2, r3]
    4cc0:	add	r3, r3, #312	; 0x138
    4cc4:	ldr	r1, [r3]
    4cc8:	mov	r2, #8
    4ccc:	mov	r3, #0
    4cd0:	mov	r0, r1
    4cd4:	bl	0 <coda_type_set_bit_size>
    4cd8:	bl	0 <__aeabi_read_tp>
    4cdc:	mov	r2, r0
    4ce0:	ldr	r3, [pc, #-1108]	; 4894 <grib_init+0x4280>
    4ce4:	ldr	r3, [r2, r3]
    4ce8:	add	r3, r3, #312	; 0x138
    4cec:	ldr	r3, [r3]
    4cf0:	ldr	r1, [pc, #-1172]	; 4864 <grib_init+0x4250>
    4cf4:	mov	r0, r3
    4cf8:	bl	0 <coda_type_set_description>
    4cfc:	bl	0 <__aeabi_read_tp>
    4d00:	mov	r2, r0
    4d04:	ldr	r3, [pc, #-1144]	; 4894 <grib_init+0x4280>
    4d08:	ldr	r3, [r2, r3]
    4d0c:	add	r4, r3, #316	; 0x13c
    4d10:	mov	r1, #2
    4d14:	mov	r0, #7
    4d18:	bl	0 <coda_type_number_new>
    4d1c:	mov	r3, r0
    4d20:	str	r3, [r4]
    4d24:	bl	0 <__aeabi_read_tp>
    4d28:	mov	r2, r0
    4d2c:	ldr	r3, [pc, #-1184]	; 4894 <grib_init+0x4280>
    4d30:	ldr	r3, [r2, r3]
    4d34:	add	r3, r3, #316	; 0x13c
    4d38:	ldr	r3, [r3]
    4d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4d40:	mov	r0, r3
    4d44:	bl	0 <coda_type_number_set_endianness>
    4d48:	bl	0 <__aeabi_read_tp>
    4d4c:	mov	r2, r0
    4d50:	ldr	r3, [pc, #-1220]	; 4894 <grib_init+0x4280>
    4d54:	ldr	r3, [r2, r3]
    4d58:	add	r3, r3, #316	; 0x13c
    4d5c:	ldr	r3, [r3]
    4d60:	mov	r1, #3
    4d64:	mov	r0, r3
    4d68:	bl	0 <coda_type_set_read_type>
    4d6c:	bl	0 <__aeabi_read_tp>
    4d70:	mov	r2, r0
    4d74:	ldr	r3, [pc, #-1256]	; 4894 <grib_init+0x4280>
    4d78:	ldr	r3, [r2, r3]
    4d7c:	add	r3, r3, #316	; 0x13c
    4d80:	ldr	r1, [r3]
    4d84:	mov	r2, #16
    4d88:	mov	r3, #0
    4d8c:	mov	r0, r1
    4d90:	bl	0 <coda_type_set_bit_size>
    4d94:	bl	0 <__aeabi_read_tp>
    4d98:	mov	r2, r0
    4d9c:	ldr	r3, [pc, #-1296]	; 4894 <grib_init+0x4280>
    4da0:	ldr	r3, [r2, r3]
    4da4:	add	r3, r3, #316	; 0x13c
    4da8:	ldr	r3, [r3]
    4dac:	ldr	r1, [pc, #-1356]	; 4868 <grib_init+0x4254>
    4db0:	mov	r0, r3
    4db4:	bl	0 <coda_type_set_description>
    4db8:	bl	0 <__aeabi_read_tp>
    4dbc:	mov	r2, r0
    4dc0:	ldr	r3, [pc, #-1332]	; 4894 <grib_init+0x4280>
    4dc4:	ldr	r3, [r2, r3]
    4dc8:	add	r4, r3, #320	; 0x140
    4dcc:	mov	r1, #2
    4dd0:	mov	r0, #7
    4dd4:	bl	0 <coda_type_number_new>
    4dd8:	mov	r3, r0
    4ddc:	str	r3, [r4]
    4de0:	bl	0 <__aeabi_read_tp>
    4de4:	mov	r2, r0
    4de8:	ldr	r3, [pc, #-1372]	; 4894 <grib_init+0x4280>
    4dec:	ldr	r3, [r2, r3]
    4df0:	add	r3, r3, #320	; 0x140
    4df4:	ldr	r3, [r3]
    4df8:	ldr	r1, [fp, #-20]	; 0xffffffec
    4dfc:	mov	r0, r3
    4e00:	bl	0 <coda_type_number_set_endianness>
    4e04:	bl	0 <__aeabi_read_tp>
    4e08:	mov	r2, r0
    4e0c:	ldr	r3, [pc, #-1408]	; 4894 <grib_init+0x4280>
    4e10:	ldr	r3, [r2, r3]
    4e14:	add	r3, r3, #320	; 0x140
    4e18:	ldr	r3, [r3]
    4e1c:	mov	r1, #2
    4e20:	mov	r0, r3
    4e24:	bl	0 <coda_type_set_read_type>
    4e28:	bl	0 <__aeabi_read_tp>
    4e2c:	mov	r2, r0
    4e30:	ldr	r3, [pc, #-1444]	; 4894 <grib_init+0x4280>
    4e34:	ldr	r3, [r2, r3]
    4e38:	add	r3, r3, #320	; 0x140
    4e3c:	ldr	r1, [r3]
    4e40:	mov	r2, #16
    4e44:	mov	r3, #0
    4e48:	mov	r0, r1
    4e4c:	bl	0 <coda_type_set_bit_size>
    4e50:	bl	0 <__aeabi_read_tp>
    4e54:	mov	r2, r0
    4e58:	ldr	r3, [pc, #-1484]	; 4894 <grib_init+0x4280>
    4e5c:	ldr	r3, [r2, r3]
    4e60:	add	r3, r3, #320	; 0x140
    4e64:	ldr	r3, [r3]
    4e68:	ldr	r1, [pc, #-1540]	; 486c <grib_init+0x4258>
    4e6c:	mov	r0, r3
    4e70:	bl	0 <coda_type_set_description>
    4e74:	bl	0 <__aeabi_read_tp>
    4e78:	mov	r2, r0
    4e7c:	ldr	r3, [pc, #-1520]	; 4894 <grib_init+0x4280>
    4e80:	ldr	r3, [r2, r3]
    4e84:	add	r4, r3, #324	; 0x144
    4e88:	mov	r1, #2
    4e8c:	mov	r0, #7
    4e90:	bl	0 <coda_type_number_new>
    4e94:	mov	r3, r0
    4e98:	str	r3, [r4]
    4e9c:	bl	0 <__aeabi_read_tp>
    4ea0:	mov	r2, r0
    4ea4:	ldr	r3, [pc, #-1560]	; 4894 <grib_init+0x4280>
    4ea8:	ldr	r3, [r2, r3]
    4eac:	add	r3, r3, #324	; 0x144
    4eb0:	ldr	r3, [r3]
    4eb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    4eb8:	mov	r0, r3
    4ebc:	bl	0 <coda_type_number_set_endianness>
    4ec0:	bl	0 <__aeabi_read_tp>
    4ec4:	mov	r2, r0
    4ec8:	ldr	r3, [pc, #-1596]	; 4894 <grib_init+0x4280>
    4ecc:	ldr	r3, [r2, r3]
    4ed0:	add	r3, r3, #324	; 0x144
    4ed4:	ldr	r3, [r3]
    4ed8:	mov	r1, #1
    4edc:	mov	r0, r3
    4ee0:	bl	0 <coda_type_set_read_type>
    4ee4:	bl	0 <__aeabi_read_tp>
    4ee8:	mov	r2, r0
    4eec:	ldr	r3, [pc, #-1632]	; 4894 <grib_init+0x4280>
    4ef0:	ldr	r3, [r2, r3]
    4ef4:	add	r3, r3, #324	; 0x144
    4ef8:	ldr	r1, [r3]
    4efc:	mov	r2, #8
    4f00:	mov	r3, #0
    4f04:	mov	r0, r1
    4f08:	bl	0 <coda_type_set_bit_size>
    4f0c:	bl	0 <__aeabi_read_tp>
    4f10:	mov	r2, r0
    4f14:	ldr	r3, [pc, #-1672]	; 4894 <grib_init+0x4280>
    4f18:	ldr	r3, [r2, r3]
    4f1c:	add	r3, r3, #324	; 0x144
    4f20:	ldr	r3, [r3]
    4f24:	ldr	r1, [pc, #-1724]	; 4870 <grib_init+0x425c>
    4f28:	mov	r0, r3
    4f2c:	bl	0 <coda_type_set_description>
    4f30:	bl	0 <__aeabi_read_tp>
    4f34:	mov	r2, r0
    4f38:	ldr	r3, [pc, #-1708]	; 4894 <grib_init+0x4280>
    4f3c:	ldr	r3, [r2, r3]
    4f40:	add	r4, r3, #328	; 0x148
    4f44:	mov	r1, #2
    4f48:	mov	r0, #7
    4f4c:	bl	0 <coda_type_number_new>
    4f50:	mov	r3, r0
    4f54:	str	r3, [r4]
    4f58:	bl	0 <__aeabi_read_tp>
    4f5c:	mov	r2, r0
    4f60:	ldr	r3, [pc, #-1748]	; 4894 <grib_init+0x4280>
    4f64:	ldr	r3, [r2, r3]
    4f68:	add	r3, r3, #328	; 0x148
    4f6c:	ldr	r3, [r3]
    4f70:	ldr	r1, [fp, #-20]	; 0xffffffec
    4f74:	mov	r0, r3
    4f78:	bl	0 <coda_type_number_set_endianness>
    4f7c:	bl	0 <__aeabi_read_tp>
    4f80:	mov	r2, r0
    4f84:	ldr	r3, [pc, #-1784]	; 4894 <grib_init+0x4280>
    4f88:	ldr	r3, [r2, r3]
    4f8c:	add	r3, r3, #328	; 0x148
    4f90:	ldr	r3, [r3]
    4f94:	mov	r1, #1
    4f98:	mov	r0, r3
    4f9c:	bl	0 <coda_type_set_read_type>
    4fa0:	bl	0 <__aeabi_read_tp>
    4fa4:	mov	r2, r0
    4fa8:	ldr	r3, [pc, #-1820]	; 4894 <grib_init+0x4280>
    4fac:	ldr	r3, [r2, r3]
    4fb0:	add	r3, r3, #328	; 0x148
    4fb4:	ldr	r1, [r3]
    4fb8:	mov	r2, #8
    4fbc:	mov	r3, #0
    4fc0:	mov	r0, r1
    4fc4:	bl	0 <coda_type_set_bit_size>
    4fc8:	bl	0 <__aeabi_read_tp>
    4fcc:	mov	r2, r0
    4fd0:	ldr	r3, [pc, #-1860]	; 4894 <grib_init+0x4280>
    4fd4:	ldr	r3, [r2, r3]
    4fd8:	add	r3, r3, #328	; 0x148
    4fdc:	ldr	r3, [r3]
    4fe0:	ldr	r1, [pc, #-1908]	; 4874 <grib_init+0x4260>
    4fe4:	mov	r0, r3
    4fe8:	bl	0 <coda_type_set_description>
    4fec:	bl	0 <__aeabi_read_tp>
    4ff0:	mov	r2, r0
    4ff4:	ldr	r3, [pc, #-1896]	; 4894 <grib_init+0x4280>
    4ff8:	ldr	r3, [r2, r3]
    4ffc:	add	r4, r3, #332	; 0x14c
    5000:	mov	r1, #2
    5004:	mov	r0, #7
    5008:	bl	0 <coda_type_number_new>
    500c:	mov	r3, r0
    5010:	str	r3, [r4]
    5014:	bl	0 <__aeabi_read_tp>
    5018:	mov	r2, r0
    501c:	ldr	r3, [pc, #-1936]	; 4894 <grib_init+0x4280>
    5020:	ldr	r3, [r2, r3]
    5024:	add	r3, r3, #332	; 0x14c
    5028:	ldr	r3, [r3]
    502c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5030:	mov	r0, r3
    5034:	bl	0 <coda_type_number_set_endianness>
    5038:	bl	0 <__aeabi_read_tp>
    503c:	mov	r2, r0
    5040:	ldr	r3, [pc, #-1972]	; 4894 <grib_init+0x4280>
    5044:	ldr	r3, [r2, r3]
    5048:	add	r3, r3, #332	; 0x14c
    504c:	ldr	r3, [r3]
    5050:	mov	r1, #1
    5054:	mov	r0, r3
    5058:	bl	0 <coda_type_set_read_type>
    505c:	bl	0 <__aeabi_read_tp>
    5060:	mov	r2, r0
    5064:	ldr	r3, [pc, #-2008]	; 4894 <grib_init+0x4280>
    5068:	ldr	r3, [r2, r3]
    506c:	add	r3, r3, #332	; 0x14c
    5070:	ldr	r1, [r3]
    5074:	mov	r2, #8
    5078:	mov	r3, #0
    507c:	mov	r0, r1
    5080:	bl	0 <coda_type_set_bit_size>
    5084:	bl	0 <__aeabi_read_tp>
    5088:	mov	r2, r0
    508c:	ldr	r3, [pc, #-2048]	; 4894 <grib_init+0x4280>
    5090:	ldr	r3, [r2, r3]
    5094:	add	r3, r3, #332	; 0x14c
    5098:	ldr	r3, [r3]
    509c:	ldr	r1, [pc, #-2092]	; 4878 <grib_init+0x4264>
    50a0:	mov	r0, r3
    50a4:	bl	0 <coda_type_set_description>
    50a8:	bl	0 <__aeabi_read_tp>
    50ac:	mov	r2, r0
    50b0:	ldr	r3, [pc, #-2084]	; 4894 <grib_init+0x4280>
    50b4:	ldr	r3, [r2, r3]
    50b8:	add	r4, r3, #336	; 0x150
    50bc:	mov	r1, #2
    50c0:	mov	r0, #7
    50c4:	bl	0 <coda_type_number_new>
    50c8:	mov	r3, r0
    50cc:	str	r3, [r4]
    50d0:	bl	0 <__aeabi_read_tp>
    50d4:	mov	r2, r0
    50d8:	ldr	r3, [pc, #-2124]	; 4894 <grib_init+0x4280>
    50dc:	ldr	r3, [r2, r3]
    50e0:	add	r3, r3, #336	; 0x150
    50e4:	ldr	r3, [r3]
    50e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    50ec:	mov	r0, r3
    50f0:	bl	0 <coda_type_number_set_endianness>
    50f4:	bl	0 <__aeabi_read_tp>
    50f8:	mov	r2, r0
    50fc:	ldr	r3, [pc, #-2160]	; 4894 <grib_init+0x4280>
    5100:	ldr	r3, [r2, r3]
    5104:	add	r3, r3, #336	; 0x150
    5108:	ldr	r3, [r3]
    510c:	mov	r1, #1
    5110:	mov	r0, r3
    5114:	bl	0 <coda_type_set_read_type>
    5118:	bl	0 <__aeabi_read_tp>
    511c:	mov	r2, r0
    5120:	ldr	r3, [pc, #-2196]	; 4894 <grib_init+0x4280>
    5124:	ldr	r3, [r2, r3]
    5128:	add	r3, r3, #336	; 0x150
    512c:	ldr	r1, [r3]
    5130:	mov	r2, #8
    5134:	mov	r3, #0
    5138:	mov	r0, r1
    513c:	bl	0 <coda_type_set_bit_size>
    5140:	bl	0 <__aeabi_read_tp>
    5144:	mov	r2, r0
    5148:	ldr	r3, [pc, #-2236]	; 4894 <grib_init+0x4280>
    514c:	ldr	r3, [r2, r3]
    5150:	add	r3, r3, #336	; 0x150
    5154:	ldr	r3, [r3]
    5158:	ldr	r1, [pc, #-2276]	; 487c <grib_init+0x4268>
    515c:	mov	r0, r3
    5160:	bl	0 <coda_type_set_description>
    5164:	bl	0 <__aeabi_read_tp>
    5168:	mov	r2, r0
    516c:	ldr	r3, [pc, #-2272]	; 4894 <grib_init+0x4280>
    5170:	ldr	r3, [r2, r3]
    5174:	add	r4, r3, #340	; 0x154
    5178:	mov	r1, #2
    517c:	mov	r0, #7
    5180:	bl	0 <coda_type_number_new>
    5184:	mov	r3, r0
    5188:	str	r3, [r4]
    518c:	bl	0 <__aeabi_read_tp>
    5190:	mov	r2, r0
    5194:	ldr	r3, [pc, #-2312]	; 4894 <grib_init+0x4280>
    5198:	ldr	r3, [r2, r3]
    519c:	add	r3, r3, #340	; 0x154
    51a0:	ldr	r3, [r3]
    51a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    51a8:	mov	r0, r3
    51ac:	bl	0 <coda_type_number_set_endianness>
    51b0:	bl	0 <__aeabi_read_tp>
    51b4:	mov	r2, r0
    51b8:	ldr	r3, [pc, #-2348]	; 4894 <grib_init+0x4280>
    51bc:	ldr	r3, [r2, r3]
    51c0:	add	r3, r3, #340	; 0x154
    51c4:	ldr	r3, [r3]
    51c8:	mov	r1, #1
    51cc:	mov	r0, r3
    51d0:	bl	0 <coda_type_set_read_type>
    51d4:	bl	0 <__aeabi_read_tp>
    51d8:	mov	r2, r0
    51dc:	ldr	r3, [pc, #-2384]	; 4894 <grib_init+0x4280>
    51e0:	ldr	r3, [r2, r3]
    51e4:	add	r3, r3, #340	; 0x154
    51e8:	ldr	r1, [r3]
    51ec:	mov	r2, #8
    51f0:	mov	r3, #0
    51f4:	mov	r0, r1
    51f8:	bl	0 <coda_type_set_bit_size>
    51fc:	bl	0 <__aeabi_read_tp>
    5200:	mov	r2, r0
    5204:	ldr	r3, [pc, #-2424]	; 4894 <grib_init+0x4280>
    5208:	ldr	r3, [r2, r3]
    520c:	add	r3, r3, #340	; 0x154
    5210:	ldr	r3, [r3]
    5214:	ldr	r1, [pc, #-2460]	; 4880 <grib_init+0x426c>
    5218:	mov	r0, r3
    521c:	bl	0 <coda_type_set_description>
    5220:	bl	0 <__aeabi_read_tp>
    5224:	mov	r2, r0
    5228:	ldr	r3, [pc, #-2460]	; 4894 <grib_init+0x4280>
    522c:	ldr	r3, [r2, r3]
    5230:	add	r4, r3, #344	; 0x158
    5234:	mov	r1, #2
    5238:	mov	r0, #7
    523c:	bl	0 <coda_type_number_new>
    5240:	mov	r3, r0
    5244:	str	r3, [r4]
    5248:	bl	0 <__aeabi_read_tp>
    524c:	mov	r2, r0
    5250:	ldr	r3, [pc, #-2500]	; 4894 <grib_init+0x4280>
    5254:	ldr	r3, [r2, r3]
    5258:	add	r3, r3, #344	; 0x158
    525c:	ldr	r3, [r3]
    5260:	ldr	r1, [fp, #-20]	; 0xffffffec
    5264:	mov	r0, r3
    5268:	bl	0 <coda_type_number_set_endianness>
    526c:	bl	0 <__aeabi_read_tp>
    5270:	mov	r2, r0
    5274:	ldr	r3, [pc, #-2536]	; 4894 <grib_init+0x4280>
    5278:	ldr	r3, [r2, r3]
    527c:	add	r3, r3, #344	; 0x158
    5280:	ldr	r3, [r3]
    5284:	mov	r1, #1
    5288:	mov	r0, r3
    528c:	bl	0 <coda_type_set_read_type>
    5290:	bl	0 <__aeabi_read_tp>
    5294:	mov	r2, r0
    5298:	ldr	r3, [pc, #-2572]	; 4894 <grib_init+0x4280>
    529c:	ldr	r3, [r2, r3]
    52a0:	add	r3, r3, #344	; 0x158
    52a4:	ldr	r1, [r3]
    52a8:	mov	r2, #8
    52ac:	mov	r3, #0
    52b0:	mov	r0, r1
    52b4:	bl	0 <coda_type_set_bit_size>
    52b8:	bl	0 <__aeabi_read_tp>
    52bc:	mov	r2, r0
    52c0:	ldr	r3, [pc, #-2612]	; 4894 <grib_init+0x4280>
    52c4:	ldr	r3, [r2, r3]
    52c8:	add	r3, r3, #344	; 0x158
    52cc:	ldr	r3, [r3]
    52d0:	ldr	r1, [pc, #-2644]	; 4884 <grib_init+0x4270>
    52d4:	mov	r0, r3
    52d8:	bl	0 <coda_type_set_description>
    52dc:	bl	0 <__aeabi_read_tp>
    52e0:	mov	r2, r0
    52e4:	ldr	r3, [pc, #-2648]	; 4894 <grib_init+0x4280>
    52e8:	ldr	r3, [r2, r3]
    52ec:	add	r4, r3, #348	; 0x15c
    52f0:	mov	r0, #7
    52f4:	bl	0 <coda_type_raw_new>
    52f8:	mov	r3, r0
    52fc:	str	r3, [r4]
    5300:	bl	0 <__aeabi_read_tp>
    5304:	mov	r2, r0
    5308:	ldr	r3, [pc, #-2684]	; 4894 <grib_init+0x4280>
    530c:	ldr	r3, [r2, r3]
    5310:	add	r3, r3, #348	; 0x15c
    5314:	ldr	r3, [r3]
    5318:	ldr	r1, [pc, #-2712]	; 4888 <grib_init+0x4274>
    531c:	mov	r0, r3
    5320:	bl	0 <coda_type_set_description>
    5324:	bl	0 <__aeabi_read_tp>
    5328:	mov	r2, r0
    532c:	ldr	r3, [pc, #-2720]	; 4894 <grib_init+0x4280>
    5330:	ldr	r3, [r2, r3]
    5334:	add	r4, r3, #352	; 0x160
    5338:	mov	r1, #2
    533c:	mov	r0, #7
    5340:	bl	0 <coda_type_number_new>
    5344:	mov	r3, r0
    5348:	str	r3, [r4]
    534c:	bl	0 <__aeabi_read_tp>
    5350:	mov	r2, r0
    5354:	ldr	r3, [pc, #-2760]	; 4894 <grib_init+0x4280>
    5358:	ldr	r3, [r2, r3]
    535c:	add	r3, r3, #352	; 0x160
    5360:	ldr	r3, [r3]
    5364:	ldr	r1, [fp, #-20]	; 0xffffffec
    5368:	mov	r0, r3
    536c:	bl	0 <coda_type_number_set_endianness>
    5370:	bl	0 <__aeabi_read_tp>
    5374:	mov	r2, r0
    5378:	ldr	r3, [pc, #-2796]	; 4894 <grib_init+0x4280>
    537c:	ldr	r3, [r2, r3]
    5380:	add	r3, r3, #352	; 0x160
    5384:	ldr	r3, [r3]
    5388:	mov	r1, #1
    538c:	mov	r0, r3
    5390:	bl	0 <coda_type_set_read_type>
    5394:	bl	0 <__aeabi_read_tp>
    5398:	mov	r2, r0
    539c:	ldr	r3, [pc, #-2832]	; 4894 <grib_init+0x4280>
    53a0:	ldr	r3, [r2, r3]
    53a4:	add	r3, r3, #352	; 0x160
    53a8:	ldr	r1, [r3]
    53ac:	mov	r2, #8
    53b0:	mov	r3, #0
    53b4:	mov	r0, r1
    53b8:	bl	0 <coda_type_set_bit_size>
    53bc:	bl	0 <__aeabi_read_tp>
    53c0:	mov	r2, r0
    53c4:	ldr	r3, [pc, #-2872]	; 4894 <grib_init+0x4280>
    53c8:	ldr	r3, [r2, r3]
    53cc:	add	r3, r3, #352	; 0x160
    53d0:	ldr	r3, [r3]
    53d4:	ldr	r1, [pc, #-2896]	; 488c <grib_init+0x4278>
    53d8:	mov	r0, r3
    53dc:	bl	0 <coda_type_set_description>
    53e0:	bl	0 <__aeabi_read_tp>
    53e4:	mov	r2, r0
    53e8:	ldr	r3, [pc, #-2908]	; 4894 <grib_init+0x4280>
    53ec:	ldr	r3, [r2, r3]
    53f0:	add	r4, r3, #356	; 0x164
    53f4:	mov	r1, #2
    53f8:	mov	r0, #7
    53fc:	bl	0 <coda_type_number_new>
    5400:	mov	r3, r0
    5404:	str	r3, [r4]
    5408:	bl	0 <__aeabi_read_tp>
    540c:	mov	r2, r0
    5410:	ldr	r3, [pc, #-2948]	; 4894 <grib_init+0x4280>
    5414:	ldr	r3, [r2, r3]
    5418:	add	r3, r3, #356	; 0x164
    541c:	ldr	r3, [r3]
    5420:	ldr	r1, [fp, #-20]	; 0xffffffec
    5424:	mov	r0, r3
    5428:	bl	0 <coda_type_number_set_endianness>
    542c:	bl	0 <__aeabi_read_tp>
    5430:	mov	r2, r0
    5434:	ldr	r3, [pc, #-2984]	; 4894 <grib_init+0x4280>
    5438:	ldr	r3, [r2, r3]
    543c:	add	r3, r3, #356	; 0x164
    5440:	ldr	r3, [r3]
    5444:	mov	r1, #1
    5448:	mov	r0, r3
    544c:	bl	0 <coda_type_set_read_type>
    5450:	bl	0 <__aeabi_read_tp>
    5454:	mov	r2, r0
    5458:	ldr	r3, [pc, #-3020]	; 4894 <grib_init+0x4280>
    545c:	ldr	r3, [r2, r3]
    5460:	add	r3, r3, #356	; 0x164
    5464:	ldr	r1, [r3]
    5468:	mov	r2, #8
    546c:	mov	r3, #0
    5470:	mov	r0, r1
    5474:	bl	0 <coda_type_set_bit_size>
    5478:	bl	0 <__aeabi_read_tp>
    547c:	mov	r2, r0
    5480:	ldr	r3, [pc, #-3060]	; 4894 <grib_init+0x4280>
    5484:	ldr	r3, [r2, r3]
    5488:	add	r3, r3, #356	; 0x164
    548c:	ldr	r3, [r3]
    5490:	ldr	r1, [pc, #-3080]	; 4890 <grib_init+0x427c>
    5494:	mov	r0, r3
    5498:	bl	0 <coda_type_set_description>
    549c:	bl	0 <__aeabi_read_tp>
    54a0:	mov	r2, r0
    54a4:	ldr	r3, [pc, #-3096]	; 4894 <grib_init+0x4280>
    54a8:	ldr	r3, [r2, r3]
    54ac:	add	r4, r3, #360	; 0x168
    54b0:	mov	r1, #2
    54b4:	mov	r0, #7
    54b8:	bl	0 <coda_type_number_new>
    54bc:	mov	r3, r0
    54c0:	str	r3, [r4]
    54c4:	bl	0 <__aeabi_read_tp>
    54c8:	mov	r2, r0
    54cc:	ldr	r3, [pc, #-3136]	; 4894 <grib_init+0x4280>
    54d0:	ldr	r3, [r2, r3]
    54d4:	add	r3, r3, #360	; 0x168
    54d8:	ldr	r3, [r3]
    54dc:	ldr	r1, [fp, #-20]	; 0xffffffec
    54e0:	mov	r0, r3
    54e4:	bl	0 <coda_type_number_set_endianness>
    54e8:	bl	0 <__aeabi_read_tp>
    54ec:	mov	r2, r0
    54f0:	ldr	r3, [pc, #-3172]	; 4894 <grib_init+0x4280>
    54f4:	ldr	r3, [r2, r3]
    54f8:	add	r3, r3, #360	; 0x168
    54fc:	ldr	r3, [r3]
    5500:	mov	r1, #1
    5504:	mov	r0, r3
    5508:	bl	0 <coda_type_set_read_type>
    550c:	bl	0 <__aeabi_read_tp>
    5510:	mov	r2, r0
    5514:	ldr	r3, [pc, #-3208]	; 4894 <grib_init+0x4280>
    5518:	ldr	r3, [r2, r3]
    551c:	add	r3, r3, #360	; 0x168
    5520:	ldr	r1, [r3]
    5524:	mov	r2, #8
    5528:	mov	r3, #0
    552c:	mov	r0, r1
    5530:	bl	0 <coda_type_set_bit_size>
    5534:	bl	0 <__aeabi_read_tp>
    5538:	mov	r2, r0
    553c:	ldr	r3, [pc, #-3248]	; 4894 <grib_init+0x4280>
    5540:	ldr	r3, [r2, r3]
    5544:	add	r4, r3, #364	; 0x16c
    5548:	mov	r1, #2
    554c:	mov	r0, #7
    5550:	bl	0 <coda_type_number_new>
    5554:	mov	r3, r0
    5558:	str	r3, [r4]
    555c:	bl	0 <__aeabi_read_tp>
    5560:	mov	r2, r0
    5564:	ldr	r3, [pc, #-3288]	; 4894 <grib_init+0x4280>
    5568:	ldr	r3, [r2, r3]
    556c:	add	r3, r3, #364	; 0x16c
    5570:	ldr	r3, [r3]
    5574:	ldr	r1, [fp, #-20]	; 0xffffffec
    5578:	mov	r0, r3
    557c:	bl	0 <coda_type_number_set_endianness>
    5580:	bl	0 <__aeabi_read_tp>
    5584:	mov	r2, r0
    5588:	ldr	r3, [pc, #-3324]	; 4894 <grib_init+0x4280>
    558c:	ldr	r3, [r2, r3]
    5590:	add	r3, r3, #364	; 0x16c
    5594:	ldr	r3, [r3]
    5598:	mov	r1, #1
    559c:	mov	r0, r3
    55a0:	bl	0 <coda_type_set_read_type>
    55a4:	bl	0 <__aeabi_read_tp>
    55a8:	mov	r2, r0
    55ac:	ldr	r3, [pc, #-3360]	; 4894 <grib_init+0x4280>
    55b0:	ldr	r3, [r2, r3]
    55b4:	add	r3, r3, #364	; 0x16c
    55b8:	ldr	r1, [r3]
    55bc:	mov	r2, #8
    55c0:	mov	r3, #0
    55c4:	mov	r0, r1
    55c8:	bl	0 <coda_type_set_bit_size>
    55cc:	bl	0 <__aeabi_read_tp>
    55d0:	mov	r2, r0
    55d4:	ldr	r3, [pc, #-3400]	; 4894 <grib_init+0x4280>
    55d8:	ldr	r3, [r2, r3]
    55dc:	add	r4, r3, #368	; 0x170
    55e0:	mov	r1, #2
    55e4:	mov	r0, #7
    55e8:	bl	0 <coda_type_number_new>
    55ec:	mov	r3, r0
    55f0:	str	r3, [r4]
    55f4:	bl	0 <__aeabi_read_tp>
    55f8:	mov	r2, r0
    55fc:	ldr	r3, [pc, #-3440]	; 4894 <grib_init+0x4280>
    5600:	ldr	r3, [r2, r3]
    5604:	add	r3, r3, #368	; 0x170
    5608:	ldr	r3, [r3]
    560c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5610:	mov	r0, r3
    5614:	bl	0 <coda_type_number_set_endianness>
    5618:	bl	0 <__aeabi_read_tp>
    561c:	mov	r2, r0
    5620:	ldr	r3, [pc, #-3476]	; 4894 <grib_init+0x4280>
    5624:	ldr	r3, [r2, r3]
    5628:	add	r3, r3, #368	; 0x170
    562c:	ldr	r3, [r3]
    5630:	mov	r1, #5
    5634:	mov	r0, r3
    5638:	bl	0 <coda_type_set_read_type>
    563c:	bl	0 <__aeabi_read_tp>
    5640:	mov	r2, r0
    5644:	ldr	r3, [pc, #-3512]	; 4894 <grib_init+0x4280>
    5648:	ldr	r3, [r2, r3]
    564c:	add	r3, r3, #368	; 0x170
    5650:	ldr	r1, [r3]
    5654:	mov	r2, #32
    5658:	mov	r3, #0
    565c:	mov	r0, r1
    5660:	bl	0 <coda_type_set_bit_size>
    5664:	bl	0 <__aeabi_read_tp>
    5668:	mov	r2, r0
    566c:	ldr	r3, [pc, #-3552]	; 4894 <grib_init+0x4280>
    5670:	ldr	r3, [r2, r3]
    5674:	add	r4, r3, #372	; 0x174
    5678:	mov	r1, #2
    567c:	mov	r0, #7
    5680:	bl	0 <coda_type_number_new>
    5684:	mov	r3, r0
    5688:	str	r3, [r4]
    568c:	bl	0 <__aeabi_read_tp>
    5690:	mov	r2, r0
    5694:	ldr	r3, [pc, #-3592]	; 4894 <grib_init+0x4280>
    5698:	ldr	r3, [r2, r3]
    569c:	add	r3, r3, #372	; 0x174
    56a0:	ldr	r3, [r3]
    56a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    56a8:	mov	r0, r3
    56ac:	bl	0 <coda_type_number_set_endianness>
    56b0:	bl	0 <__aeabi_read_tp>
    56b4:	mov	r2, r0
    56b8:	ldr	r3, [pc, #-3628]	; 4894 <grib_init+0x4280>
    56bc:	ldr	r3, [r2, r3]
    56c0:	add	r3, r3, #372	; 0x174
    56c4:	ldr	r3, [r3]
    56c8:	mov	r1, #1
    56cc:	mov	r0, r3
    56d0:	bl	0 <coda_type_set_read_type>
    56d4:	bl	0 <__aeabi_read_tp>
    56d8:	mov	r2, r0
    56dc:	ldr	r3, [pc, #-3664]	; 4894 <grib_init+0x4280>
    56e0:	ldr	r3, [r2, r3]
    56e4:	add	r3, r3, #372	; 0x174
    56e8:	ldr	r1, [r3]
    56ec:	mov	r2, #8
    56f0:	mov	r3, #0
    56f4:	mov	r0, r1
    56f8:	bl	0 <coda_type_set_bit_size>
    56fc:	bl	0 <__aeabi_read_tp>
    5700:	mov	r2, r0
    5704:	ldr	r3, [pc, #-3704]	; 4894 <grib_init+0x4280>
    5708:	ldr	r3, [r2, r3]
    570c:	add	r4, r3, #376	; 0x178
    5710:	mov	r1, #2
    5714:	mov	r0, #7
    5718:	bl	0 <coda_type_number_new>
    571c:	mov	r3, r0
    5720:	str	r3, [r4]
    5724:	bl	0 <__aeabi_read_tp>
    5728:	mov	r2, r0
    572c:	ldr	r3, [pc, #-3744]	; 4894 <grib_init+0x4280>
    5730:	ldr	r3, [r2, r3]
    5734:	add	r3, r3, #376	; 0x178
    5738:	ldr	r3, [r3]
    573c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5740:	mov	r0, r3
    5744:	bl	0 <coda_type_number_set_endianness>
    5748:	bl	0 <__aeabi_read_tp>
    574c:	mov	r2, r0
    5750:	ldr	r3, [pc, #-3780]	; 4894 <grib_init+0x4280>
    5754:	ldr	r3, [r2, r3]
    5758:	add	r3, r3, #376	; 0x178
    575c:	ldr	r3, [r3]
    5760:	mov	r1, #5
    5764:	mov	r0, r3
    5768:	bl	0 <coda_type_set_read_type>
    576c:	bl	0 <__aeabi_read_tp>
    5770:	mov	r2, r0
    5774:	ldr	r3, [pc, #-3816]	; 4894 <grib_init+0x4280>
    5778:	ldr	r3, [r2, r3]
    577c:	add	r3, r3, #376	; 0x178
    5780:	ldr	r1, [r3]
    5784:	mov	r2, #32
    5788:	mov	r3, #0
    578c:	mov	r0, r1
    5790:	bl	0 <coda_type_set_bit_size>
    5794:	bl	0 <__aeabi_read_tp>
    5798:	mov	r2, r0
    579c:	ldr	r3, [pc, #-3856]	; 4894 <grib_init+0x4280>
    57a0:	ldr	r3, [r2, r3]
    57a4:	add	r4, r3, #380	; 0x17c
    57a8:	mov	r1, #2
    57ac:	mov	r0, #7
    57b0:	bl	0 <coda_type_number_new>
    57b4:	mov	r3, r0
    57b8:	str	r3, [r4]
    57bc:	bl	0 <__aeabi_read_tp>
    57c0:	mov	r2, r0
    57c4:	ldr	r3, [pc, #-3896]	; 4894 <grib_init+0x4280>
    57c8:	ldr	r3, [r2, r3]
    57cc:	add	r3, r3, #380	; 0x17c
    57d0:	ldr	r3, [r3]
    57d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    57d8:	mov	r0, r3
    57dc:	bl	0 <coda_type_number_set_endianness>
    57e0:	bl	0 <__aeabi_read_tp>
    57e4:	mov	r2, r0
    57e8:	ldr	r3, [pc, #-3932]	; 4894 <grib_init+0x4280>
    57ec:	ldr	r3, [r2, r3]
    57f0:	add	r3, r3, #380	; 0x17c
    57f4:	ldr	r3, [r3]
    57f8:	mov	r1, #1
    57fc:	mov	r0, r3
    5800:	bl	0 <coda_type_set_read_type>
    5804:	bl	0 <__aeabi_read_tp>
    5808:	mov	r2, r0
    580c:	ldr	r3, [pc, #-3968]	; 4894 <grib_init+0x4280>
    5810:	ldr	r3, [r2, r3]
    5814:	add	r3, r3, #380	; 0x17c
    5818:	ldr	r1, [r3]
    581c:	mov	r2, #8
    5820:	mov	r3, #0
    5824:	mov	r0, r1
    5828:	bl	0 <coda_type_set_bit_size>
    582c:	bl	0 <__aeabi_read_tp>
    5830:	mov	r2, r0
    5834:	ldr	r3, [pc, #-4008]	; 4894 <grib_init+0x4280>
    5838:	ldr	r3, [r2, r3]
    583c:	add	r4, r3, #384	; 0x180
    5840:	mov	r1, #2
    5844:	mov	r0, #7
    5848:	bl	0 <coda_type_number_new>
    584c:	mov	r3, r0
    5850:	str	r3, [r4]
    5854:	bl	0 <__aeabi_read_tp>
    5858:	mov	r2, r0
    585c:	ldr	r3, [pc, #-4048]	; 4894 <grib_init+0x4280>
    5860:	ldr	r3, [r2, r3]
    5864:	add	r3, r3, #384	; 0x180
    5868:	ldr	r3, [r3]
    586c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5870:	mov	r0, r3
    5874:	bl	0 <coda_type_number_set_endianness>
    5878:	bl	0 <__aeabi_read_tp>
    587c:	mov	r2, r0
    5880:	ldr	r3, [pc, #-4084]	; 4894 <grib_init+0x4280>
    5884:	ldr	r3, [r2, r3]
    5888:	add	r3, r3, #384	; 0x180
    588c:	ldr	r3, [r3]
    5890:	mov	r1, #5
    5894:	mov	r0, r3
    5898:	bl	0 <coda_type_set_read_type>
    589c:	bl	0 <__aeabi_read_tp>
    58a0:	mov	r2, r0
    58a4:	ldr	r3, [pc, #4084]	; 68a0 <grib_init+0x628c>
    58a8:	ldr	r3, [r2, r3]
    58ac:	add	r3, r3, #384	; 0x180
    58b0:	ldr	r1, [r3]
    58b4:	mov	r2, #32
    58b8:	mov	r3, #0
    58bc:	mov	r0, r1
    58c0:	bl	0 <coda_type_set_bit_size>
    58c4:	bl	0 <__aeabi_read_tp>
    58c8:	mov	r2, r0
    58cc:	ldr	r3, [pc, #4044]	; 68a0 <grib_init+0x628c>
    58d0:	ldr	r3, [r2, r3]
    58d4:	add	r4, r3, #388	; 0x184
    58d8:	mov	r1, #2
    58dc:	mov	r0, #7
    58e0:	bl	0 <coda_type_number_new>
    58e4:	mov	r3, r0
    58e8:	str	r3, [r4]
    58ec:	bl	0 <__aeabi_read_tp>
    58f0:	mov	r2, r0
    58f4:	ldr	r3, [pc, #4004]	; 68a0 <grib_init+0x628c>
    58f8:	ldr	r3, [r2, r3]
    58fc:	add	r3, r3, #388	; 0x184
    5900:	ldr	r3, [r3]
    5904:	ldr	r1, [fp, #-20]	; 0xffffffec
    5908:	mov	r0, r3
    590c:	bl	0 <coda_type_number_set_endianness>
    5910:	bl	0 <__aeabi_read_tp>
    5914:	mov	r2, r0
    5918:	ldr	r3, [pc, #3968]	; 68a0 <grib_init+0x628c>
    591c:	ldr	r3, [r2, r3]
    5920:	add	r3, r3, #388	; 0x184
    5924:	ldr	r3, [r3]
    5928:	mov	r1, #5
    592c:	mov	r0, r3
    5930:	bl	0 <coda_type_set_read_type>
    5934:	bl	0 <__aeabi_read_tp>
    5938:	mov	r2, r0
    593c:	ldr	r3, [pc, #3932]	; 68a0 <grib_init+0x628c>
    5940:	ldr	r3, [r2, r3]
    5944:	add	r3, r3, #388	; 0x184
    5948:	ldr	r1, [r3]
    594c:	mov	r2, #32
    5950:	mov	r3, #0
    5954:	mov	r0, r1
    5958:	bl	0 <coda_type_set_bit_size>
    595c:	bl	0 <__aeabi_read_tp>
    5960:	mov	r2, r0
    5964:	ldr	r3, [pc, #3892]	; 68a0 <grib_init+0x628c>
    5968:	ldr	r3, [r2, r3]
    596c:	add	r3, r3, #388	; 0x184
    5970:	ldr	r3, [r3]
    5974:	ldr	r1, [pc, #3880]	; 68a4 <grib_init+0x6290>
    5978:	mov	r0, r3
    597c:	bl	0 <coda_type_set_description>
    5980:	bl	0 <__aeabi_read_tp>
    5984:	mov	r2, r0
    5988:	ldr	r3, [pc, #3856]	; 68a0 <grib_init+0x628c>
    598c:	ldr	r3, [r2, r3]
    5990:	add	r4, r3, #392	; 0x188
    5994:	mov	r1, #2
    5998:	mov	r0, #7
    599c:	bl	0 <coda_type_number_new>
    59a0:	mov	r3, r0
    59a4:	str	r3, [r4]
    59a8:	bl	0 <__aeabi_read_tp>
    59ac:	mov	r2, r0
    59b0:	ldr	r3, [pc, #3816]	; 68a0 <grib_init+0x628c>
    59b4:	ldr	r3, [r2, r3]
    59b8:	add	r3, r3, #392	; 0x188
    59bc:	ldr	r3, [r3]
    59c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    59c4:	mov	r0, r3
    59c8:	bl	0 <coda_type_number_set_endianness>
    59cc:	bl	0 <__aeabi_read_tp>
    59d0:	mov	r2, r0
    59d4:	ldr	r3, [pc, #3780]	; 68a0 <grib_init+0x628c>
    59d8:	ldr	r3, [r2, r3]
    59dc:	add	r3, r3, #392	; 0x188
    59e0:	ldr	r3, [r3]
    59e4:	mov	r1, #5
    59e8:	mov	r0, r3
    59ec:	bl	0 <coda_type_set_read_type>
    59f0:	bl	0 <__aeabi_read_tp>
    59f4:	mov	r2, r0
    59f8:	ldr	r3, [pc, #3744]	; 68a0 <grib_init+0x628c>
    59fc:	ldr	r3, [r2, r3]
    5a00:	add	r3, r3, #392	; 0x188
    5a04:	ldr	r1, [r3]
    5a08:	mov	r2, #32
    5a0c:	mov	r3, #0
    5a10:	mov	r0, r1
    5a14:	bl	0 <coda_type_set_bit_size>
    5a18:	bl	0 <__aeabi_read_tp>
    5a1c:	mov	r2, r0
    5a20:	ldr	r3, [pc, #3704]	; 68a0 <grib_init+0x628c>
    5a24:	ldr	r3, [r2, r3]
    5a28:	add	r3, r3, #392	; 0x188
    5a2c:	ldr	r3, [r3]
    5a30:	ldr	r1, [pc, #3696]	; 68a8 <grib_init+0x6294>
    5a34:	mov	r0, r3
    5a38:	bl	0 <coda_type_set_description>
    5a3c:	bl	0 <__aeabi_read_tp>
    5a40:	mov	r2, r0
    5a44:	ldr	r3, [pc, #3668]	; 68a0 <grib_init+0x628c>
    5a48:	ldr	r3, [r2, r3]
    5a4c:	add	r4, r3, #396	; 0x18c
    5a50:	mov	r1, #2
    5a54:	mov	r0, #7
    5a58:	bl	0 <coda_type_number_new>
    5a5c:	mov	r3, r0
    5a60:	str	r3, [r4]
    5a64:	bl	0 <__aeabi_read_tp>
    5a68:	mov	r2, r0
    5a6c:	ldr	r3, [pc, #3628]	; 68a0 <grib_init+0x628c>
    5a70:	ldr	r3, [r2, r3]
    5a74:	add	r3, r3, #396	; 0x18c
    5a78:	ldr	r3, [r3]
    5a7c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5a80:	mov	r0, r3
    5a84:	bl	0 <coda_type_number_set_endianness>
    5a88:	bl	0 <__aeabi_read_tp>
    5a8c:	mov	r2, r0
    5a90:	ldr	r3, [pc, #3592]	; 68a0 <grib_init+0x628c>
    5a94:	ldr	r3, [r2, r3]
    5a98:	add	r3, r3, #396	; 0x18c
    5a9c:	ldr	r3, [r3]
    5aa0:	mov	r1, #5
    5aa4:	mov	r0, r3
    5aa8:	bl	0 <coda_type_set_read_type>
    5aac:	bl	0 <__aeabi_read_tp>
    5ab0:	mov	r2, r0
    5ab4:	ldr	r3, [pc, #3556]	; 68a0 <grib_init+0x628c>
    5ab8:	ldr	r3, [r2, r3]
    5abc:	add	r3, r3, #396	; 0x18c
    5ac0:	ldr	r1, [r3]
    5ac4:	mov	r2, #32
    5ac8:	mov	r3, #0
    5acc:	mov	r0, r1
    5ad0:	bl	0 <coda_type_set_bit_size>
    5ad4:	bl	0 <__aeabi_read_tp>
    5ad8:	mov	r2, r0
    5adc:	ldr	r3, [pc, #3516]	; 68a0 <grib_init+0x628c>
    5ae0:	ldr	r3, [r2, r3]
    5ae4:	add	r4, r3, #400	; 0x190
    5ae8:	mov	r1, #2
    5aec:	mov	r0, #7
    5af0:	bl	0 <coda_type_number_new>
    5af4:	mov	r3, r0
    5af8:	str	r3, [r4]
    5afc:	bl	0 <__aeabi_read_tp>
    5b00:	mov	r2, r0
    5b04:	ldr	r3, [pc, #3476]	; 68a0 <grib_init+0x628c>
    5b08:	ldr	r3, [r2, r3]
    5b0c:	add	r3, r3, #400	; 0x190
    5b10:	ldr	r3, [r3]
    5b14:	ldr	r1, [fp, #-20]	; 0xffffffec
    5b18:	mov	r0, r3
    5b1c:	bl	0 <coda_type_number_set_endianness>
    5b20:	bl	0 <__aeabi_read_tp>
    5b24:	mov	r2, r0
    5b28:	ldr	r3, [pc, #3440]	; 68a0 <grib_init+0x628c>
    5b2c:	ldr	r3, [r2, r3]
    5b30:	add	r3, r3, #400	; 0x190
    5b34:	ldr	r3, [r3]
    5b38:	mov	r1, #5
    5b3c:	mov	r0, r3
    5b40:	bl	0 <coda_type_set_read_type>
    5b44:	bl	0 <__aeabi_read_tp>
    5b48:	mov	r2, r0
    5b4c:	ldr	r3, [pc, #3404]	; 68a0 <grib_init+0x628c>
    5b50:	ldr	r3, [r2, r3]
    5b54:	add	r3, r3, #400	; 0x190
    5b58:	ldr	r1, [r3]
    5b5c:	mov	r2, #32
    5b60:	mov	r3, #0
    5b64:	mov	r0, r1
    5b68:	bl	0 <coda_type_set_bit_size>
    5b6c:	bl	0 <__aeabi_read_tp>
    5b70:	mov	r2, r0
    5b74:	ldr	r3, [pc, #3364]	; 68a0 <grib_init+0x628c>
    5b78:	ldr	r3, [r2, r3]
    5b7c:	add	r4, r3, #404	; 0x194
    5b80:	mov	r1, #2
    5b84:	mov	r0, #7
    5b88:	bl	0 <coda_type_number_new>
    5b8c:	mov	r3, r0
    5b90:	str	r3, [r4]
    5b94:	bl	0 <__aeabi_read_tp>
    5b98:	mov	r2, r0
    5b9c:	ldr	r3, [pc, #3324]	; 68a0 <grib_init+0x628c>
    5ba0:	ldr	r3, [r2, r3]
    5ba4:	add	r3, r3, #404	; 0x194
    5ba8:	ldr	r3, [r3]
    5bac:	ldr	r1, [fp, #-20]	; 0xffffffec
    5bb0:	mov	r0, r3
    5bb4:	bl	0 <coda_type_number_set_endianness>
    5bb8:	bl	0 <__aeabi_read_tp>
    5bbc:	mov	r2, r0
    5bc0:	ldr	r3, [pc, #3288]	; 68a0 <grib_init+0x628c>
    5bc4:	ldr	r3, [r2, r3]
    5bc8:	add	r3, r3, #404	; 0x194
    5bcc:	ldr	r3, [r3]
    5bd0:	mov	r1, #4
    5bd4:	mov	r0, r3
    5bd8:	bl	0 <coda_type_set_read_type>
    5bdc:	bl	0 <__aeabi_read_tp>
    5be0:	mov	r2, r0
    5be4:	ldr	r3, [pc, #3252]	; 68a0 <grib_init+0x628c>
    5be8:	ldr	r3, [r2, r3]
    5bec:	add	r3, r3, #404	; 0x194
    5bf0:	ldr	r1, [r3]
    5bf4:	mov	r2, #32
    5bf8:	mov	r3, #0
    5bfc:	mov	r0, r1
    5c00:	bl	0 <coda_type_set_bit_size>
    5c04:	bl	0 <__aeabi_read_tp>
    5c08:	mov	r2, r0
    5c0c:	ldr	r3, [pc, #3212]	; 68a0 <grib_init+0x628c>
    5c10:	ldr	r3, [r2, r3]
    5c14:	add	r3, r3, #404	; 0x194
    5c18:	ldr	r3, [r3]
    5c1c:	ldr	r1, [pc, #3208]	; 68ac <grib_init+0x6298>
    5c20:	mov	r0, r3
    5c24:	bl	0 <coda_type_set_description>
    5c28:	bl	0 <__aeabi_read_tp>
    5c2c:	mov	r2, r0
    5c30:	ldr	r3, [pc, #3176]	; 68a0 <grib_init+0x628c>
    5c34:	ldr	r3, [r2, r3]
    5c38:	add	r4, r3, #408	; 0x198
    5c3c:	mov	r1, #2
    5c40:	mov	r0, #7
    5c44:	bl	0 <coda_type_number_new>
    5c48:	mov	r3, r0
    5c4c:	str	r3, [r4]
    5c50:	bl	0 <__aeabi_read_tp>
    5c54:	mov	r2, r0
    5c58:	ldr	r3, [pc, #3136]	; 68a0 <grib_init+0x628c>
    5c5c:	ldr	r3, [r2, r3]
    5c60:	add	r3, r3, #408	; 0x198
    5c64:	ldr	r3, [r3]
    5c68:	ldr	r1, [fp, #-20]	; 0xffffffec
    5c6c:	mov	r0, r3
    5c70:	bl	0 <coda_type_number_set_endianness>
    5c74:	bl	0 <__aeabi_read_tp>
    5c78:	mov	r2, r0
    5c7c:	ldr	r3, [pc, #3100]	; 68a0 <grib_init+0x628c>
    5c80:	ldr	r3, [r2, r3]
    5c84:	add	r3, r3, #408	; 0x198
    5c88:	ldr	r3, [r3]
    5c8c:	mov	r1, #4
    5c90:	mov	r0, r3
    5c94:	bl	0 <coda_type_set_read_type>
    5c98:	bl	0 <__aeabi_read_tp>
    5c9c:	mov	r2, r0
    5ca0:	ldr	r3, [pc, #3064]	; 68a0 <grib_init+0x628c>
    5ca4:	ldr	r3, [r2, r3]
    5ca8:	add	r3, r3, #408	; 0x198
    5cac:	ldr	r1, [r3]
    5cb0:	mov	r2, #32
    5cb4:	mov	r3, #0
    5cb8:	mov	r0, r1
    5cbc:	bl	0 <coda_type_set_bit_size>
    5cc0:	bl	0 <__aeabi_read_tp>
    5cc4:	mov	r2, r0
    5cc8:	ldr	r3, [pc, #3024]	; 68a0 <grib_init+0x628c>
    5ccc:	ldr	r3, [r2, r3]
    5cd0:	add	r3, r3, #408	; 0x198
    5cd4:	ldr	r3, [r3]
    5cd8:	ldr	r1, [pc, #3024]	; 68b0 <grib_init+0x629c>
    5cdc:	mov	r0, r3
    5ce0:	bl	0 <coda_type_set_description>
    5ce4:	bl	0 <__aeabi_read_tp>
    5ce8:	mov	r2, r0
    5cec:	ldr	r3, [pc, #2988]	; 68a0 <grib_init+0x628c>
    5cf0:	ldr	r3, [r2, r3]
    5cf4:	add	r4, r3, #412	; 0x19c
    5cf8:	mov	r1, #2
    5cfc:	mov	r0, #7
    5d00:	bl	0 <coda_type_number_new>
    5d04:	mov	r3, r0
    5d08:	str	r3, [r4]
    5d0c:	bl	0 <__aeabi_read_tp>
    5d10:	mov	r2, r0
    5d14:	ldr	r3, [pc, #2948]	; 68a0 <grib_init+0x628c>
    5d18:	ldr	r3, [r2, r3]
    5d1c:	add	r3, r3, #412	; 0x19c
    5d20:	ldr	r3, [r3]
    5d24:	ldr	r1, [fp, #-20]	; 0xffffffec
    5d28:	mov	r0, r3
    5d2c:	bl	0 <coda_type_number_set_endianness>
    5d30:	bl	0 <__aeabi_read_tp>
    5d34:	mov	r2, r0
    5d38:	ldr	r3, [pc, #2912]	; 68a0 <grib_init+0x628c>
    5d3c:	ldr	r3, [r2, r3]
    5d40:	add	r3, r3, #412	; 0x19c
    5d44:	ldr	r3, [r3]
    5d48:	mov	r1, #1
    5d4c:	mov	r0, r3
    5d50:	bl	0 <coda_type_set_read_type>
    5d54:	bl	0 <__aeabi_read_tp>
    5d58:	mov	r2, r0
    5d5c:	ldr	r3, [pc, #2876]	; 68a0 <grib_init+0x628c>
    5d60:	ldr	r3, [r2, r3]
    5d64:	add	r3, r3, #412	; 0x19c
    5d68:	ldr	r1, [r3]
    5d6c:	mov	r2, #8
    5d70:	mov	r3, #0
    5d74:	mov	r0, r1
    5d78:	bl	0 <coda_type_set_bit_size>
    5d7c:	bl	0 <__aeabi_read_tp>
    5d80:	mov	r2, r0
    5d84:	ldr	r3, [pc, #2836]	; 68a0 <grib_init+0x628c>
    5d88:	ldr	r3, [r2, r3]
    5d8c:	add	r3, r3, #412	; 0x19c
    5d90:	ldr	r3, [r3]
    5d94:	ldr	r1, [pc, #2840]	; 68b4 <grib_init+0x62a0>
    5d98:	mov	r0, r3
    5d9c:	bl	0 <coda_type_set_description>
    5da0:	bl	0 <__aeabi_read_tp>
    5da4:	mov	r2, r0
    5da8:	ldr	r3, [pc, #2800]	; 68a0 <grib_init+0x628c>
    5dac:	ldr	r3, [r2, r3]
    5db0:	add	r4, r3, #416	; 0x1a0
    5db4:	mov	r1, #2
    5db8:	mov	r0, #7
    5dbc:	bl	0 <coda_type_number_new>
    5dc0:	mov	r3, r0
    5dc4:	str	r3, [r4]
    5dc8:	bl	0 <__aeabi_read_tp>
    5dcc:	mov	r2, r0
    5dd0:	ldr	r3, [pc, #2760]	; 68a0 <grib_init+0x628c>
    5dd4:	ldr	r3, [r2, r3]
    5dd8:	add	r3, r3, #416	; 0x1a0
    5ddc:	ldr	r3, [r3]
    5de0:	ldr	r1, [fp, #-20]	; 0xffffffec
    5de4:	mov	r0, r3
    5de8:	bl	0 <coda_type_number_set_endianness>
    5dec:	bl	0 <__aeabi_read_tp>
    5df0:	mov	r2, r0
    5df4:	ldr	r3, [pc, #2724]	; 68a0 <grib_init+0x628c>
    5df8:	ldr	r3, [r2, r3]
    5dfc:	add	r3, r3, #416	; 0x1a0
    5e00:	ldr	r3, [r3]
    5e04:	mov	r1, #4
    5e08:	mov	r0, r3
    5e0c:	bl	0 <coda_type_set_read_type>
    5e10:	bl	0 <__aeabi_read_tp>
    5e14:	mov	r2, r0
    5e18:	ldr	r3, [pc, #2688]	; 68a0 <grib_init+0x628c>
    5e1c:	ldr	r3, [r2, r3]
    5e20:	add	r3, r3, #416	; 0x1a0
    5e24:	ldr	r1, [r3]
    5e28:	mov	r2, #32
    5e2c:	mov	r3, #0
    5e30:	mov	r0, r1
    5e34:	bl	0 <coda_type_set_bit_size>
    5e38:	bl	0 <__aeabi_read_tp>
    5e3c:	mov	r2, r0
    5e40:	ldr	r3, [pc, #2648]	; 68a0 <grib_init+0x628c>
    5e44:	ldr	r3, [r2, r3]
    5e48:	add	r3, r3, #416	; 0x1a0
    5e4c:	ldr	r3, [r3]
    5e50:	ldr	r1, [pc, #2656]	; 68b8 <grib_init+0x62a4>
    5e54:	mov	r0, r3
    5e58:	bl	0 <coda_type_set_description>
    5e5c:	bl	0 <__aeabi_read_tp>
    5e60:	mov	r2, r0
    5e64:	ldr	r3, [pc, #2612]	; 68a0 <grib_init+0x628c>
    5e68:	ldr	r3, [r2, r3]
    5e6c:	add	r4, r3, #420	; 0x1a4
    5e70:	mov	r1, #2
    5e74:	mov	r0, #7
    5e78:	bl	0 <coda_type_number_new>
    5e7c:	mov	r3, r0
    5e80:	str	r3, [r4]
    5e84:	bl	0 <__aeabi_read_tp>
    5e88:	mov	r2, r0
    5e8c:	ldr	r3, [pc, #2572]	; 68a0 <grib_init+0x628c>
    5e90:	ldr	r3, [r2, r3]
    5e94:	add	r3, r3, #420	; 0x1a4
    5e98:	ldr	r3, [r3]
    5e9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5ea0:	mov	r0, r3
    5ea4:	bl	0 <coda_type_number_set_endianness>
    5ea8:	bl	0 <__aeabi_read_tp>
    5eac:	mov	r2, r0
    5eb0:	ldr	r3, [pc, #2536]	; 68a0 <grib_init+0x628c>
    5eb4:	ldr	r3, [r2, r3]
    5eb8:	add	r3, r3, #420	; 0x1a4
    5ebc:	ldr	r3, [r3]
    5ec0:	mov	r1, #4
    5ec4:	mov	r0, r3
    5ec8:	bl	0 <coda_type_set_read_type>
    5ecc:	bl	0 <__aeabi_read_tp>
    5ed0:	mov	r2, r0
    5ed4:	ldr	r3, [pc, #2500]	; 68a0 <grib_init+0x628c>
    5ed8:	ldr	r3, [r2, r3]
    5edc:	add	r3, r3, #420	; 0x1a4
    5ee0:	ldr	r1, [r3]
    5ee4:	mov	r2, #32
    5ee8:	mov	r3, #0
    5eec:	mov	r0, r1
    5ef0:	bl	0 <coda_type_set_bit_size>
    5ef4:	bl	0 <__aeabi_read_tp>
    5ef8:	mov	r2, r0
    5efc:	ldr	r3, [pc, #2460]	; 68a0 <grib_init+0x628c>
    5f00:	ldr	r3, [r2, r3]
    5f04:	add	r3, r3, #420	; 0x1a4
    5f08:	ldr	r3, [r3]
    5f0c:	ldr	r1, [pc, #2472]	; 68bc <grib_init+0x62a8>
    5f10:	mov	r0, r3
    5f14:	bl	0 <coda_type_set_description>
    5f18:	bl	0 <__aeabi_read_tp>
    5f1c:	mov	r2, r0
    5f20:	ldr	r3, [pc, #2424]	; 68a0 <grib_init+0x628c>
    5f24:	ldr	r3, [r2, r3]
    5f28:	add	r4, r3, #424	; 0x1a8
    5f2c:	mov	r1, #2
    5f30:	mov	r0, #7
    5f34:	bl	0 <coda_type_number_new>
    5f38:	mov	r3, r0
    5f3c:	str	r3, [r4]
    5f40:	bl	0 <__aeabi_read_tp>
    5f44:	mov	r2, r0
    5f48:	ldr	r3, [pc, #2384]	; 68a0 <grib_init+0x628c>
    5f4c:	ldr	r3, [r2, r3]
    5f50:	add	r3, r3, #424	; 0x1a8
    5f54:	ldr	r3, [r3]
    5f58:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f5c:	mov	r0, r3
    5f60:	bl	0 <coda_type_number_set_endianness>
    5f64:	bl	0 <__aeabi_read_tp>
    5f68:	mov	r2, r0
    5f6c:	ldr	r3, [pc, #2348]	; 68a0 <grib_init+0x628c>
    5f70:	ldr	r3, [r2, r3]
    5f74:	add	r3, r3, #424	; 0x1a8
    5f78:	ldr	r3, [r3]
    5f7c:	mov	r1, #5
    5f80:	mov	r0, r3
    5f84:	bl	0 <coda_type_set_read_type>
    5f88:	bl	0 <__aeabi_read_tp>
    5f8c:	mov	r2, r0
    5f90:	ldr	r3, [pc, #2312]	; 68a0 <grib_init+0x628c>
    5f94:	ldr	r3, [r2, r3]
    5f98:	add	r3, r3, #424	; 0x1a8
    5f9c:	ldr	r1, [r3]
    5fa0:	mov	r2, #32
    5fa4:	mov	r3, #0
    5fa8:	mov	r0, r1
    5fac:	bl	0 <coda_type_set_bit_size>
    5fb0:	bl	0 <__aeabi_read_tp>
    5fb4:	mov	r2, r0
    5fb8:	ldr	r3, [pc, #2272]	; 68a0 <grib_init+0x628c>
    5fbc:	ldr	r3, [r2, r3]
    5fc0:	add	r3, r3, #424	; 0x1a8
    5fc4:	ldr	r3, [r3]
    5fc8:	ldr	r1, [pc, #2288]	; 68c0 <grib_init+0x62ac>
    5fcc:	mov	r0, r3
    5fd0:	bl	0 <coda_type_set_description>
    5fd4:	bl	0 <__aeabi_read_tp>
    5fd8:	mov	r2, r0
    5fdc:	ldr	r3, [pc, #2236]	; 68a0 <grib_init+0x628c>
    5fe0:	ldr	r3, [r2, r3]
    5fe4:	add	r4, r3, #428	; 0x1ac
    5fe8:	mov	r1, #2
    5fec:	mov	r0, #7
    5ff0:	bl	0 <coda_type_number_new>
    5ff4:	mov	r3, r0
    5ff8:	str	r3, [r4]
    5ffc:	bl	0 <__aeabi_read_tp>
    6000:	mov	r2, r0
    6004:	ldr	r3, [pc, #2196]	; 68a0 <grib_init+0x628c>
    6008:	ldr	r3, [r2, r3]
    600c:	add	r3, r3, #428	; 0x1ac
    6010:	ldr	r3, [r3]
    6014:	ldr	r1, [fp, #-20]	; 0xffffffec
    6018:	mov	r0, r3
    601c:	bl	0 <coda_type_number_set_endianness>
    6020:	bl	0 <__aeabi_read_tp>
    6024:	mov	r2, r0
    6028:	ldr	r3, [pc, #2160]	; 68a0 <grib_init+0x628c>
    602c:	ldr	r3, [r2, r3]
    6030:	add	r3, r3, #428	; 0x1ac
    6034:	ldr	r3, [r3]
    6038:	mov	r1, #5
    603c:	mov	r0, r3
    6040:	bl	0 <coda_type_set_read_type>
    6044:	bl	0 <__aeabi_read_tp>
    6048:	mov	r2, r0
    604c:	ldr	r3, [pc, #2124]	; 68a0 <grib_init+0x628c>
    6050:	ldr	r3, [r2, r3]
    6054:	add	r3, r3, #428	; 0x1ac
    6058:	ldr	r1, [r3]
    605c:	mov	r2, #32
    6060:	mov	r3, #0
    6064:	mov	r0, r1
    6068:	bl	0 <coda_type_set_bit_size>
    606c:	bl	0 <__aeabi_read_tp>
    6070:	mov	r2, r0
    6074:	ldr	r3, [pc, #2084]	; 68a0 <grib_init+0x628c>
    6078:	ldr	r3, [r2, r3]
    607c:	add	r3, r3, #428	; 0x1ac
    6080:	ldr	r3, [r3]
    6084:	ldr	r1, [pc, #2104]	; 68c4 <grib_init+0x62b0>
    6088:	mov	r0, r3
    608c:	bl	0 <coda_type_set_description>
    6090:	bl	0 <__aeabi_read_tp>
    6094:	mov	r2, r0
    6098:	ldr	r3, [pc, #2048]	; 68a0 <grib_init+0x628c>
    609c:	ldr	r3, [r2, r3]
    60a0:	add	r4, r3, #432	; 0x1b0
    60a4:	mov	r1, #2
    60a8:	mov	r0, #7
    60ac:	bl	0 <coda_type_number_new>
    60b0:	mov	r3, r0
    60b4:	str	r3, [r4]
    60b8:	bl	0 <__aeabi_read_tp>
    60bc:	mov	r2, r0
    60c0:	ldr	r3, [pc, #2008]	; 68a0 <grib_init+0x628c>
    60c4:	ldr	r3, [r2, r3]
    60c8:	add	r3, r3, #432	; 0x1b0
    60cc:	ldr	r3, [r3]
    60d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    60d4:	mov	r0, r3
    60d8:	bl	0 <coda_type_number_set_endianness>
    60dc:	bl	0 <__aeabi_read_tp>
    60e0:	mov	r2, r0
    60e4:	ldr	r3, [pc, #1972]	; 68a0 <grib_init+0x628c>
    60e8:	ldr	r3, [r2, r3]
    60ec:	add	r3, r3, #432	; 0x1b0
    60f0:	ldr	r3, [r3]
    60f4:	mov	r1, #5
    60f8:	mov	r0, r3
    60fc:	bl	0 <coda_type_set_read_type>
    6100:	bl	0 <__aeabi_read_tp>
    6104:	mov	r2, r0
    6108:	ldr	r3, [pc, #1936]	; 68a0 <grib_init+0x628c>
    610c:	ldr	r3, [r2, r3]
    6110:	add	r3, r3, #432	; 0x1b0
    6114:	ldr	r1, [r3]
    6118:	mov	r2, #32
    611c:	mov	r3, #0
    6120:	mov	r0, r1
    6124:	bl	0 <coda_type_set_bit_size>
    6128:	bl	0 <__aeabi_read_tp>
    612c:	mov	r2, r0
    6130:	ldr	r3, [pc, #1896]	; 68a0 <grib_init+0x628c>
    6134:	ldr	r3, [r2, r3]
    6138:	add	r3, r3, #432	; 0x1b0
    613c:	ldr	r3, [r3]
    6140:	ldr	r1, [pc, #1920]	; 68c8 <grib_init+0x62b4>
    6144:	mov	r0, r3
    6148:	bl	0 <coda_type_set_description>
    614c:	bl	0 <__aeabi_read_tp>
    6150:	mov	r2, r0
    6154:	ldr	r3, [pc, #1860]	; 68a0 <grib_init+0x628c>
    6158:	ldr	r3, [r2, r3]
    615c:	add	r4, r3, #436	; 0x1b4
    6160:	mov	r1, #2
    6164:	mov	r0, #7
    6168:	bl	0 <coda_type_number_new>
    616c:	mov	r3, r0
    6170:	str	r3, [r4]
    6174:	bl	0 <__aeabi_read_tp>
    6178:	mov	r2, r0
    617c:	ldr	r3, [pc, #1820]	; 68a0 <grib_init+0x628c>
    6180:	ldr	r3, [r2, r3]
    6184:	add	r3, r3, #436	; 0x1b4
    6188:	ldr	r3, [r3]
    618c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6190:	mov	r0, r3
    6194:	bl	0 <coda_type_number_set_endianness>
    6198:	bl	0 <__aeabi_read_tp>
    619c:	mov	r2, r0
    61a0:	ldr	r3, [pc, #1784]	; 68a0 <grib_init+0x628c>
    61a4:	ldr	r3, [r2, r3]
    61a8:	add	r3, r3, #436	; 0x1b4
    61ac:	ldr	r3, [r3]
    61b0:	mov	r1, #1
    61b4:	mov	r0, r3
    61b8:	bl	0 <coda_type_set_read_type>
    61bc:	bl	0 <__aeabi_read_tp>
    61c0:	mov	r2, r0
    61c4:	ldr	r3, [pc, #1748]	; 68a0 <grib_init+0x628c>
    61c8:	ldr	r3, [r2, r3]
    61cc:	add	r3, r3, #436	; 0x1b4
    61d0:	ldr	r1, [r3]
    61d4:	mov	r2, #8
    61d8:	mov	r3, #0
    61dc:	mov	r0, r1
    61e0:	bl	0 <coda_type_set_bit_size>
    61e4:	bl	0 <__aeabi_read_tp>
    61e8:	mov	r2, r0
    61ec:	ldr	r3, [pc, #1708]	; 68a0 <grib_init+0x628c>
    61f0:	ldr	r3, [r2, r3]
    61f4:	add	r3, r3, #436	; 0x1b4
    61f8:	ldr	r3, [r3]
    61fc:	ldr	r1, [pc, #1736]	; 68cc <grib_init+0x62b8>
    6200:	mov	r0, r3
    6204:	bl	0 <coda_type_set_description>
    6208:	bl	0 <__aeabi_read_tp>
    620c:	mov	r2, r0
    6210:	ldr	r3, [pc, #1672]	; 68a0 <grib_init+0x628c>
    6214:	ldr	r3, [r2, r3]
    6218:	add	r4, r3, #440	; 0x1b8
    621c:	mov	r1, #2
    6220:	mov	r0, #7
    6224:	bl	0 <coda_type_number_new>
    6228:	mov	r3, r0
    622c:	str	r3, [r4]
    6230:	bl	0 <__aeabi_read_tp>
    6234:	mov	r2, r0
    6238:	ldr	r3, [pc, #1632]	; 68a0 <grib_init+0x628c>
    623c:	ldr	r3, [r2, r3]
    6240:	add	r3, r3, #440	; 0x1b8
    6244:	ldr	r3, [r3]
    6248:	ldr	r1, [fp, #-20]	; 0xffffffec
    624c:	mov	r0, r3
    6250:	bl	0 <coda_type_number_set_endianness>
    6254:	bl	0 <__aeabi_read_tp>
    6258:	mov	r2, r0
    625c:	ldr	r3, [pc, #1596]	; 68a0 <grib_init+0x628c>
    6260:	ldr	r3, [r2, r3]
    6264:	add	r3, r3, #440	; 0x1b8
    6268:	ldr	r3, [r3]
    626c:	mov	r1, #5
    6270:	mov	r0, r3
    6274:	bl	0 <coda_type_set_read_type>
    6278:	bl	0 <__aeabi_read_tp>
    627c:	mov	r2, r0
    6280:	ldr	r3, [pc, #1560]	; 68a0 <grib_init+0x628c>
    6284:	ldr	r3, [r2, r3]
    6288:	add	r3, r3, #440	; 0x1b8
    628c:	ldr	r1, [r3]
    6290:	mov	r2, #32
    6294:	mov	r3, #0
    6298:	mov	r0, r1
    629c:	bl	0 <coda_type_set_bit_size>
    62a0:	bl	0 <__aeabi_read_tp>
    62a4:	mov	r2, r0
    62a8:	ldr	r3, [pc, #1520]	; 68a0 <grib_init+0x628c>
    62ac:	ldr	r3, [r2, r3]
    62b0:	add	r4, r3, #444	; 0x1bc
    62b4:	mov	r0, #7
    62b8:	bl	0 <coda_type_array_new>
    62bc:	mov	r3, r0
    62c0:	str	r3, [r4]
    62c4:	bl	0 <__aeabi_read_tp>
    62c8:	mov	r2, r0
    62cc:	ldr	r3, [pc, #1484]	; 68a0 <grib_init+0x628c>
    62d0:	ldr	r3, [r2, r3]
    62d4:	add	r3, r3, #444	; 0x1bc
    62d8:	ldr	r3, [r3]
    62dc:	ldr	r1, [pc, #1516]	; 68d0 <grib_init+0x62bc>
    62e0:	mov	r0, r3
    62e4:	bl	0 <coda_type_set_description>
    62e8:	bl	0 <__aeabi_read_tp>
    62ec:	mov	r2, r0
    62f0:	ldr	r3, [pc, #1448]	; 68a0 <grib_init+0x628c>
    62f4:	ldr	r3, [r2, r3]
    62f8:	add	r3, r3, #444	; 0x1bc
    62fc:	ldr	r2, [r3]
    6300:	bl	0 <__aeabi_read_tp>
    6304:	mov	r1, r0
    6308:	ldr	r3, [pc, #1424]	; 68a0 <grib_init+0x628c>
    630c:	ldr	r3, [r1, r3]
    6310:	add	r3, r3, #440	; 0x1b8
    6314:	ldr	r3, [r3]
    6318:	mov	r1, r3
    631c:	mov	r0, r2
    6320:	bl	0 <coda_type_array_set_base_type>
    6324:	bl	0 <__aeabi_read_tp>
    6328:	mov	r2, r0
    632c:	ldr	r3, [pc, #1388]	; 68a0 <grib_init+0x628c>
    6330:	ldr	r3, [r2, r3]
    6334:	add	r3, r3, #444	; 0x1bc
    6338:	ldr	r3, [r3]
    633c:	mov	r1, #0
    6340:	mov	r0, r3
    6344:	bl	0 <coda_type_array_add_variable_dimension>
    6348:	bl	0 <__aeabi_read_tp>
    634c:	mov	r2, r0
    6350:	ldr	r3, [pc, #1352]	; 68a0 <grib_init+0x628c>
    6354:	ldr	r3, [r2, r3]
    6358:	add	r4, r3, #448	; 0x1c0
    635c:	mov	r1, #2
    6360:	mov	r0, #7
    6364:	bl	0 <coda_type_number_new>
    6368:	mov	r3, r0
    636c:	str	r3, [r4]
    6370:	bl	0 <__aeabi_read_tp>
    6374:	mov	r2, r0
    6378:	ldr	r3, [pc, #1312]	; 68a0 <grib_init+0x628c>
    637c:	ldr	r3, [r2, r3]
    6380:	add	r3, r3, #448	; 0x1c0
    6384:	ldr	r3, [r3]
    6388:	ldr	r1, [fp, #-20]	; 0xffffffec
    638c:	mov	r0, r3
    6390:	bl	0 <coda_type_number_set_endianness>
    6394:	bl	0 <__aeabi_read_tp>
    6398:	mov	r2, r0
    639c:	ldr	r3, [pc, #1276]	; 68a0 <grib_init+0x628c>
    63a0:	ldr	r3, [r2, r3]
    63a4:	add	r3, r3, #448	; 0x1c0
    63a8:	ldr	r3, [r3]
    63ac:	mov	r1, #1
    63b0:	mov	r0, r3
    63b4:	bl	0 <coda_type_set_read_type>
    63b8:	bl	0 <__aeabi_read_tp>
    63bc:	mov	r2, r0
    63c0:	ldr	r3, [pc, #1240]	; 68a0 <grib_init+0x628c>
    63c4:	ldr	r3, [r2, r3]
    63c8:	add	r3, r3, #448	; 0x1c0
    63cc:	ldr	r1, [r3]
    63d0:	mov	r2, #8
    63d4:	mov	r3, #0
    63d8:	mov	r0, r1
    63dc:	bl	0 <coda_type_set_bit_size>
    63e0:	bl	0 <__aeabi_read_tp>
    63e4:	mov	r2, r0
    63e8:	ldr	r3, [pc, #1200]	; 68a0 <grib_init+0x628c>
    63ec:	ldr	r3, [r2, r3]
    63f0:	add	r3, r3, #448	; 0x1c0
    63f4:	ldr	r3, [r3]
    63f8:	ldr	r1, [pc, #1236]	; 68d4 <grib_init+0x62c0>
    63fc:	mov	r0, r3
    6400:	bl	0 <coda_type_set_description>
    6404:	bl	0 <__aeabi_read_tp>
    6408:	mov	r2, r0
    640c:	ldr	r3, [pc, #1164]	; 68a0 <grib_init+0x628c>
    6410:	ldr	r3, [r2, r3]
    6414:	add	r4, r3, #452	; 0x1c4
    6418:	mov	r1, #2
    641c:	mov	r0, #7
    6420:	bl	0 <coda_type_number_new>
    6424:	mov	r3, r0
    6428:	str	r3, [r4]
    642c:	bl	0 <__aeabi_read_tp>
    6430:	mov	r2, r0
    6434:	ldr	r3, [pc, #1124]	; 68a0 <grib_init+0x628c>
    6438:	ldr	r3, [r2, r3]
    643c:	add	r3, r3, #452	; 0x1c4
    6440:	ldr	r3, [r3]
    6444:	ldr	r1, [fp, #-20]	; 0xffffffec
    6448:	mov	r0, r3
    644c:	bl	0 <coda_type_number_set_endianness>
    6450:	bl	0 <__aeabi_read_tp>
    6454:	mov	r2, r0
    6458:	ldr	r3, [pc, #1088]	; 68a0 <grib_init+0x628c>
    645c:	ldr	r3, [r2, r3]
    6460:	add	r3, r3, #452	; 0x1c4
    6464:	ldr	r3, [r3]
    6468:	mov	r1, #5
    646c:	mov	r0, r3
    6470:	bl	0 <coda_type_set_read_type>
    6474:	bl	0 <__aeabi_read_tp>
    6478:	mov	r2, r0
    647c:	ldr	r3, [pc, #1052]	; 68a0 <grib_init+0x628c>
    6480:	ldr	r3, [r2, r3]
    6484:	add	r3, r3, #452	; 0x1c4
    6488:	ldr	r1, [r3]
    648c:	mov	r2, #32
    6490:	mov	r3, #0
    6494:	mov	r0, r1
    6498:	bl	0 <coda_type_set_bit_size>
    649c:	bl	0 <__aeabi_read_tp>
    64a0:	mov	r2, r0
    64a4:	ldr	r3, [pc, #1012]	; 68a0 <grib_init+0x628c>
    64a8:	ldr	r3, [r2, r3]
    64ac:	add	r3, r3, #452	; 0x1c4
    64b0:	ldr	r3, [r3]
    64b4:	ldr	r1, [pc, #1052]	; 68d8 <grib_init+0x62c4>
    64b8:	mov	r0, r3
    64bc:	bl	0 <coda_type_set_description>
    64c0:	bl	0 <__aeabi_read_tp>
    64c4:	mov	r2, r0
    64c8:	ldr	r3, [pc, #976]	; 68a0 <grib_init+0x628c>
    64cc:	ldr	r3, [r2, r3]
    64d0:	add	r4, r3, #456	; 0x1c8
    64d4:	mov	r1, #2
    64d8:	mov	r0, #7
    64dc:	bl	0 <coda_type_number_new>
    64e0:	mov	r3, r0
    64e4:	str	r3, [r4]
    64e8:	bl	0 <__aeabi_read_tp>
    64ec:	mov	r2, r0
    64f0:	ldr	r3, [pc, #936]	; 68a0 <grib_init+0x628c>
    64f4:	ldr	r3, [r2, r3]
    64f8:	add	r3, r3, #456	; 0x1c8
    64fc:	ldr	r3, [r3]
    6500:	ldr	r1, [fp, #-20]	; 0xffffffec
    6504:	mov	r0, r3
    6508:	bl	0 <coda_type_number_set_endianness>
    650c:	bl	0 <__aeabi_read_tp>
    6510:	mov	r2, r0
    6514:	ldr	r3, [pc, #900]	; 68a0 <grib_init+0x628c>
    6518:	ldr	r3, [r2, r3]
    651c:	add	r3, r3, #456	; 0x1c8
    6520:	ldr	r3, [r3]
    6524:	mov	r1, #1
    6528:	mov	r0, r3
    652c:	bl	0 <coda_type_set_read_type>
    6530:	bl	0 <__aeabi_read_tp>
    6534:	mov	r2, r0
    6538:	ldr	r3, [pc, #864]	; 68a0 <grib_init+0x628c>
    653c:	ldr	r3, [r2, r3]
    6540:	add	r3, r3, #456	; 0x1c8
    6544:	ldr	r1, [r3]
    6548:	mov	r2, #8
    654c:	mov	r3, #0
    6550:	mov	r0, r1
    6554:	bl	0 <coda_type_set_bit_size>
    6558:	bl	0 <__aeabi_read_tp>
    655c:	mov	r2, r0
    6560:	ldr	r3, [pc, #824]	; 68a0 <grib_init+0x628c>
    6564:	ldr	r3, [r2, r3]
    6568:	add	r3, r3, #456	; 0x1c8
    656c:	ldr	r3, [r3]
    6570:	ldr	r1, [pc, #868]	; 68dc <grib_init+0x62c8>
    6574:	mov	r0, r3
    6578:	bl	0 <coda_type_set_description>
    657c:	bl	0 <__aeabi_read_tp>
    6580:	mov	r2, r0
    6584:	ldr	r3, [pc, #788]	; 68a0 <grib_init+0x628c>
    6588:	ldr	r3, [r2, r3]
    658c:	add	r4, r3, #460	; 0x1cc
    6590:	mov	r1, #2
    6594:	mov	r0, #7
    6598:	bl	0 <coda_type_number_new>
    659c:	mov	r3, r0
    65a0:	str	r3, [r4]
    65a4:	bl	0 <__aeabi_read_tp>
    65a8:	mov	r2, r0
    65ac:	ldr	r3, [pc, #748]	; 68a0 <grib_init+0x628c>
    65b0:	ldr	r3, [r2, r3]
    65b4:	add	r3, r3, #460	; 0x1cc
    65b8:	ldr	r3, [r3]
    65bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    65c0:	mov	r0, r3
    65c4:	bl	0 <coda_type_number_set_endianness>
    65c8:	bl	0 <__aeabi_read_tp>
    65cc:	mov	r2, r0
    65d0:	ldr	r3, [pc, #712]	; 68a0 <grib_init+0x628c>
    65d4:	ldr	r3, [r2, r3]
    65d8:	add	r3, r3, #460	; 0x1cc
    65dc:	ldr	r3, [r3]
    65e0:	mov	r1, #1
    65e4:	mov	r0, r3
    65e8:	bl	0 <coda_type_set_read_type>
    65ec:	bl	0 <__aeabi_read_tp>
    65f0:	mov	r2, r0
    65f4:	ldr	r3, [pc, #676]	; 68a0 <grib_init+0x628c>
    65f8:	ldr	r3, [r2, r3]
    65fc:	add	r3, r3, #460	; 0x1cc
    6600:	ldr	r1, [r3]
    6604:	mov	r2, #8
    6608:	mov	r3, #0
    660c:	mov	r0, r1
    6610:	bl	0 <coda_type_set_bit_size>
    6614:	bl	0 <__aeabi_read_tp>
    6618:	mov	r2, r0
    661c:	ldr	r3, [pc, #636]	; 68a0 <grib_init+0x628c>
    6620:	ldr	r3, [r2, r3]
    6624:	add	r3, r3, #460	; 0x1cc
    6628:	ldr	r3, [r3]
    662c:	ldr	r1, [pc, #684]	; 68e0 <grib_init+0x62cc>
    6630:	mov	r0, r3
    6634:	bl	0 <coda_type_set_description>
    6638:	bl	0 <__aeabi_read_tp>
    663c:	mov	r2, r0
    6640:	ldr	r3, [pc, #600]	; 68a0 <grib_init+0x628c>
    6644:	ldr	r3, [r2, r3]
    6648:	add	r4, r3, #464	; 0x1d0
    664c:	mov	r1, #2
    6650:	mov	r0, #7
    6654:	bl	0 <coda_type_number_new>
    6658:	mov	r3, r0
    665c:	str	r3, [r4]
    6660:	bl	0 <__aeabi_read_tp>
    6664:	mov	r2, r0
    6668:	ldr	r3, [pc, #560]	; 68a0 <grib_init+0x628c>
    666c:	ldr	r3, [r2, r3]
    6670:	add	r3, r3, #464	; 0x1d0
    6674:	ldr	r3, [r3]
    6678:	ldr	r1, [fp, #-20]	; 0xffffffec
    667c:	mov	r0, r3
    6680:	bl	0 <coda_type_number_set_endianness>
    6684:	bl	0 <__aeabi_read_tp>
    6688:	mov	r2, r0
    668c:	ldr	r3, [pc, #524]	; 68a0 <grib_init+0x628c>
    6690:	ldr	r3, [r2, r3]
    6694:	add	r3, r3, #464	; 0x1d0
    6698:	ldr	r3, [r3]
    669c:	mov	r1, #1
    66a0:	mov	r0, r3
    66a4:	bl	0 <coda_type_set_read_type>
    66a8:	bl	0 <__aeabi_read_tp>
    66ac:	mov	r2, r0
    66b0:	ldr	r3, [pc, #488]	; 68a0 <grib_init+0x628c>
    66b4:	ldr	r3, [r2, r3]
    66b8:	add	r3, r3, #464	; 0x1d0
    66bc:	ldr	r1, [r3]
    66c0:	mov	r2, #8
    66c4:	mov	r3, #0
    66c8:	mov	r0, r1
    66cc:	bl	0 <coda_type_set_bit_size>
    66d0:	bl	0 <__aeabi_read_tp>
    66d4:	mov	r2, r0
    66d8:	ldr	r3, [pc, #448]	; 68a0 <grib_init+0x628c>
    66dc:	ldr	r3, [r2, r3]
    66e0:	add	r3, r3, #464	; 0x1d0
    66e4:	ldr	r3, [r3]
    66e8:	ldr	r1, [pc, #500]	; 68e4 <grib_init+0x62d0>
    66ec:	mov	r0, r3
    66f0:	bl	0 <coda_type_set_description>
    66f4:	bl	0 <__aeabi_read_tp>
    66f8:	mov	r2, r0
    66fc:	ldr	r3, [pc, #412]	; 68a0 <grib_init+0x628c>
    6700:	ldr	r3, [r2, r3]
    6704:	add	r4, r3, #468	; 0x1d4
    6708:	mov	r1, #2
    670c:	mov	r0, #7
    6710:	bl	0 <coda_type_number_new>
    6714:	mov	r3, r0
    6718:	str	r3, [r4]
    671c:	bl	0 <__aeabi_read_tp>
    6720:	mov	r2, r0
    6724:	ldr	r3, [pc, #372]	; 68a0 <grib_init+0x628c>
    6728:	ldr	r3, [r2, r3]
    672c:	add	r3, r3, #468	; 0x1d4
    6730:	ldr	r3, [r3]
    6734:	ldr	r1, [fp, #-20]	; 0xffffffec
    6738:	mov	r0, r3
    673c:	bl	0 <coda_type_number_set_endianness>
    6740:	bl	0 <__aeabi_read_tp>
    6744:	mov	r2, r0
    6748:	ldr	r3, [pc, #336]	; 68a0 <grib_init+0x628c>
    674c:	ldr	r3, [r2, r3]
    6750:	add	r3, r3, #468	; 0x1d4
    6754:	ldr	r3, [r3]
    6758:	mov	r1, #1
    675c:	mov	r0, r3
    6760:	bl	0 <coda_type_set_read_type>
    6764:	bl	0 <__aeabi_read_tp>
    6768:	mov	r2, r0
    676c:	ldr	r3, [pc, #300]	; 68a0 <grib_init+0x628c>
    6770:	ldr	r3, [r2, r3]
    6774:	add	r3, r3, #468	; 0x1d4
    6778:	ldr	r1, [r3]
    677c:	mov	r2, #8
    6780:	mov	r3, #0
    6784:	mov	r0, r1
    6788:	bl	0 <coda_type_set_bit_size>
    678c:	bl	0 <__aeabi_read_tp>
    6790:	mov	r2, r0
    6794:	ldr	r3, [pc, #260]	; 68a0 <grib_init+0x628c>
    6798:	ldr	r3, [r2, r3]
    679c:	add	r3, r3, #468	; 0x1d4
    67a0:	ldr	r3, [r3]
    67a4:	ldr	r1, [pc, #316]	; 68e8 <grib_init+0x62d4>
    67a8:	mov	r0, r3
    67ac:	bl	0 <coda_type_set_description>
    67b0:	bl	0 <__aeabi_read_tp>
    67b4:	mov	r2, r0
    67b8:	ldr	r3, [pc, #224]	; 68a0 <grib_init+0x628c>
    67bc:	ldr	r3, [r2, r3]
    67c0:	add	r4, r3, #472	; 0x1d8
    67c4:	mov	r1, #2
    67c8:	mov	r0, #7
    67cc:	bl	0 <coda_type_number_new>
    67d0:	mov	r3, r0
    67d4:	str	r3, [r4]
    67d8:	bl	0 <__aeabi_read_tp>
    67dc:	mov	r2, r0
    67e0:	ldr	r3, [pc, #184]	; 68a0 <grib_init+0x628c>
    67e4:	ldr	r3, [r2, r3]
    67e8:	add	r3, r3, #472	; 0x1d8
    67ec:	ldr	r3, [r3]
    67f0:	ldr	r1, [fp, #-20]	; 0xffffffec
    67f4:	mov	r0, r3
    67f8:	bl	0 <coda_type_number_set_endianness>
    67fc:	bl	0 <__aeabi_read_tp>
    6800:	mov	r2, r0
    6804:	ldr	r3, [pc, #148]	; 68a0 <grib_init+0x628c>
    6808:	ldr	r3, [r2, r3]
    680c:	add	r3, r3, #472	; 0x1d8
    6810:	ldr	r3, [r3]
    6814:	mov	r1, #1
    6818:	mov	r0, r3
    681c:	bl	0 <coda_type_set_read_type>
    6820:	bl	0 <__aeabi_read_tp>
    6824:	mov	r2, r0
    6828:	ldr	r3, [pc, #112]	; 68a0 <grib_init+0x628c>
    682c:	ldr	r3, [r2, r3]
    6830:	add	r3, r3, #472	; 0x1d8
    6834:	ldr	r1, [r3]
    6838:	mov	r2, #8
    683c:	mov	r3, #0
    6840:	mov	r0, r1
    6844:	bl	0 <coda_type_set_bit_size>
    6848:	bl	0 <__aeabi_read_tp>
    684c:	mov	r2, r0
    6850:	ldr	r3, [pc, #72]	; 68a0 <grib_init+0x628c>
    6854:	ldr	r3, [r2, r3]
    6858:	add	r3, r3, #472	; 0x1d8
    685c:	ldr	r3, [r3]
    6860:	ldr	r1, [pc, #132]	; 68ec <grib_init+0x62d8>
    6864:	mov	r0, r3
    6868:	bl	0 <coda_type_set_description>
    686c:	bl	0 <__aeabi_read_tp>
    6870:	mov	r2, r0
    6874:	ldr	r3, [pc, #36]	; 68a0 <grib_init+0x628c>
    6878:	ldr	r3, [r2, r3]
    687c:	add	r4, r3, #476	; 0x1dc
    6880:	mov	r1, #2
    6884:	mov	r0, #7
    6888:	bl	0 <coda_type_number_new>
    688c:	mov	r3, r0
    6890:	str	r3, [r4]
    6894:	bl	0 <__aeabi_read_tp>
    6898:	mov	r2, r0
    689c:	b	6964 <grib_init+0x6350>
    68a0:	.word	0x00000000
    68a4:	.word	0x000006d4
    68a8:	.word	0x000006fc
    68ac:	.word	0x00000728
    68b0:	.word	0x00000798
    68b4:	.word	0x00000808
    68b8:	.word	0x00000828
    68bc:	.word	0x00000884
    68c0:	.word	0x000008e4
    68c4:	.word	0x00000958
    68c8:	.word	0x000009c8
    68cc:	.word	0x00000a2c
    68d0:	.word	0x00000a68
    68d4:	.word	0x00000ab0
    68d8:	.word	0x00000acc
    68dc:	.word	0x00000f4c
    68e0:	.word	0x00000f88
    68e4:	.word	0x00000f9c
    68e8:	.word	0x00000fb0
    68ec:	.word	0x00000fcc
    68f0:	.word	0x00000ff8
    68f4:	.word	0x0000102c
    68f8:	.word	0x00001068
    68fc:	.word	0x000010a4
    6900:	.word	0x000010c4
    6904:	.word	0x00001104
    6908:	.word	0x00001120
    690c:	.word	0x00001134
    6910:	.word	0x00001154
    6914:	.word	0x00000a40
    6918:	.word	0x00000ae4
    691c:	.word	0x00000b04
    6920:	.word	0x00000b38
    6924:	.word	0x00000b58
    6928:	.word	0x0000116c
    692c:	.word	0x00001180
    6930:	.word	0x00001198
    6934:	.word	0x000011ac
    6938:	.word	0x000011cc
    693c:	.word	0x000011ec
    6940:	.word	0x000011fc
    6944:	.word	0x00001220
    6948:	.word	0x00001244
    694c:	.word	0x00001260
    6950:	.word	0x0000127c
    6954:	.word	0x00001298
    6958:	.word	0x00000c0c
    695c:	.word	0x00000c10
    6960:	.word	0x00000000
    6964:	ldr	r3, [pc, #-12]	; 6960 <grib_init+0x634c>
    6968:	ldr	r3, [r2, r3]
    696c:	add	r3, r3, #476	; 0x1dc
    6970:	ldr	r3, [r3]
    6974:	ldr	r1, [fp, #-20]	; 0xffffffec
    6978:	mov	r0, r3
    697c:	bl	0 <coda_type_number_set_endianness>
    6980:	bl	0 <__aeabi_read_tp>
    6984:	mov	r2, r0
    6988:	ldr	r3, [pc, #-48]	; 6960 <grib_init+0x634c>
    698c:	ldr	r3, [r2, r3]
    6990:	add	r3, r3, #476	; 0x1dc
    6994:	ldr	r3, [r3]
    6998:	mov	r1, #1
    699c:	mov	r0, r3
    69a0:	bl	0 <coda_type_set_read_type>
    69a4:	bl	0 <__aeabi_read_tp>
    69a8:	mov	r2, r0
    69ac:	ldr	r3, [pc, #-84]	; 6960 <grib_init+0x634c>
    69b0:	ldr	r3, [r2, r3]
    69b4:	add	r3, r3, #476	; 0x1dc
    69b8:	ldr	r1, [r3]
    69bc:	mov	r2, #8
    69c0:	mov	r3, #0
    69c4:	mov	r0, r1
    69c8:	bl	0 <coda_type_set_bit_size>
    69cc:	bl	0 <__aeabi_read_tp>
    69d0:	mov	r2, r0
    69d4:	ldr	r3, [pc, #-124]	; 6960 <grib_init+0x634c>
    69d8:	ldr	r3, [r2, r3]
    69dc:	add	r3, r3, #476	; 0x1dc
    69e0:	ldr	r3, [r3]
    69e4:	ldr	r1, [pc, #-252]	; 68f0 <grib_init+0x62dc>
    69e8:	mov	r0, r3
    69ec:	bl	0 <coda_type_set_description>
    69f0:	bl	0 <__aeabi_read_tp>
    69f4:	mov	r2, r0
    69f8:	ldr	r3, [pc, #-160]	; 6960 <grib_init+0x634c>
    69fc:	ldr	r3, [r2, r3]
    6a00:	add	r4, r3, #480	; 0x1e0
    6a04:	mov	r1, #2
    6a08:	mov	r0, #7
    6a0c:	bl	0 <coda_type_number_new>
    6a10:	mov	r3, r0
    6a14:	str	r3, [r4]
    6a18:	bl	0 <__aeabi_read_tp>
    6a1c:	mov	r2, r0
    6a20:	ldr	r3, [pc, #-200]	; 6960 <grib_init+0x634c>
    6a24:	ldr	r3, [r2, r3]
    6a28:	add	r3, r3, #480	; 0x1e0
    6a2c:	ldr	r3, [r3]
    6a30:	ldr	r1, [fp, #-20]	; 0xffffffec
    6a34:	mov	r0, r3
    6a38:	bl	0 <coda_type_number_set_endianness>
    6a3c:	bl	0 <__aeabi_read_tp>
    6a40:	mov	r2, r0
    6a44:	ldr	r3, [pc, #-236]	; 6960 <grib_init+0x634c>
    6a48:	ldr	r3, [r2, r3]
    6a4c:	add	r3, r3, #480	; 0x1e0
    6a50:	ldr	r3, [r3]
    6a54:	mov	r1, #3
    6a58:	mov	r0, r3
    6a5c:	bl	0 <coda_type_set_read_type>
    6a60:	bl	0 <__aeabi_read_tp>
    6a64:	mov	r2, r0
    6a68:	ldr	r3, [pc, #-272]	; 6960 <grib_init+0x634c>
    6a6c:	ldr	r3, [r2, r3]
    6a70:	add	r3, r3, #480	; 0x1e0
    6a74:	ldr	r1, [r3]
    6a78:	mov	r2, #16
    6a7c:	mov	r3, #0
    6a80:	mov	r0, r1
    6a84:	bl	0 <coda_type_set_bit_size>
    6a88:	bl	0 <__aeabi_read_tp>
    6a8c:	mov	r2, r0
    6a90:	ldr	r3, [pc, #-312]	; 6960 <grib_init+0x634c>
    6a94:	ldr	r3, [r2, r3]
    6a98:	add	r3, r3, #480	; 0x1e0
    6a9c:	ldr	r3, [r3]
    6aa0:	ldr	r1, [pc, #-436]	; 68f4 <grib_init+0x62e0>
    6aa4:	mov	r0, r3
    6aa8:	bl	0 <coda_type_set_description>
    6aac:	bl	0 <__aeabi_read_tp>
    6ab0:	mov	r2, r0
    6ab4:	ldr	r3, [pc, #-348]	; 6960 <grib_init+0x634c>
    6ab8:	ldr	r3, [r2, r3]
    6abc:	add	r4, r3, #484	; 0x1e4
    6ac0:	mov	r1, #2
    6ac4:	mov	r0, #7
    6ac8:	bl	0 <coda_type_number_new>
    6acc:	mov	r3, r0
    6ad0:	str	r3, [r4]
    6ad4:	bl	0 <__aeabi_read_tp>
    6ad8:	mov	r2, r0
    6adc:	ldr	r3, [pc, #-388]	; 6960 <grib_init+0x634c>
    6ae0:	ldr	r3, [r2, r3]
    6ae4:	add	r3, r3, #484	; 0x1e4
    6ae8:	ldr	r3, [r3]
    6aec:	ldr	r1, [fp, #-20]	; 0xffffffec
    6af0:	mov	r0, r3
    6af4:	bl	0 <coda_type_number_set_endianness>
    6af8:	bl	0 <__aeabi_read_tp>
    6afc:	mov	r2, r0
    6b00:	ldr	r3, [pc, #-424]	; 6960 <grib_init+0x634c>
    6b04:	ldr	r3, [r2, r3]
    6b08:	add	r3, r3, #484	; 0x1e4
    6b0c:	ldr	r3, [r3]
    6b10:	mov	r1, #1
    6b14:	mov	r0, r3
    6b18:	bl	0 <coda_type_set_read_type>
    6b1c:	bl	0 <__aeabi_read_tp>
    6b20:	mov	r2, r0
    6b24:	ldr	r3, [pc, #-460]	; 6960 <grib_init+0x634c>
    6b28:	ldr	r3, [r2, r3]
    6b2c:	add	r3, r3, #484	; 0x1e4
    6b30:	ldr	r1, [r3]
    6b34:	mov	r2, #8
    6b38:	mov	r3, #0
    6b3c:	mov	r0, r1
    6b40:	bl	0 <coda_type_set_bit_size>
    6b44:	bl	0 <__aeabi_read_tp>
    6b48:	mov	r2, r0
    6b4c:	ldr	r3, [pc, #-500]	; 6960 <grib_init+0x634c>
    6b50:	ldr	r3, [r2, r3]
    6b54:	add	r3, r3, #484	; 0x1e4
    6b58:	ldr	r3, [r3]
    6b5c:	ldr	r1, [pc, #-620]	; 68f8 <grib_init+0x62e4>
    6b60:	mov	r0, r3
    6b64:	bl	0 <coda_type_set_description>
    6b68:	bl	0 <__aeabi_read_tp>
    6b6c:	mov	r2, r0
    6b70:	ldr	r3, [pc, #-536]	; 6960 <grib_init+0x634c>
    6b74:	ldr	r3, [r2, r3]
    6b78:	add	r4, r3, #488	; 0x1e8
    6b7c:	mov	r1, #2
    6b80:	mov	r0, #7
    6b84:	bl	0 <coda_type_number_new>
    6b88:	mov	r3, r0
    6b8c:	str	r3, [r4]
    6b90:	bl	0 <__aeabi_read_tp>
    6b94:	mov	r2, r0
    6b98:	ldr	r3, [pc, #-576]	; 6960 <grib_init+0x634c>
    6b9c:	ldr	r3, [r2, r3]
    6ba0:	add	r3, r3, #488	; 0x1e8
    6ba4:	ldr	r3, [r3]
    6ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
    6bac:	mov	r0, r3
    6bb0:	bl	0 <coda_type_number_set_endianness>
    6bb4:	bl	0 <__aeabi_read_tp>
    6bb8:	mov	r2, r0
    6bbc:	ldr	r3, [pc, #-612]	; 6960 <grib_init+0x634c>
    6bc0:	ldr	r3, [r2, r3]
    6bc4:	add	r3, r3, #488	; 0x1e8
    6bc8:	ldr	r3, [r3]
    6bcc:	mov	r1, #1
    6bd0:	mov	r0, r3
    6bd4:	bl	0 <coda_type_set_read_type>
    6bd8:	bl	0 <__aeabi_read_tp>
    6bdc:	mov	r2, r0
    6be0:	ldr	r3, [pc, #-648]	; 6960 <grib_init+0x634c>
    6be4:	ldr	r3, [r2, r3]
    6be8:	add	r3, r3, #488	; 0x1e8
    6bec:	ldr	r1, [r3]
    6bf0:	mov	r2, #8
    6bf4:	mov	r3, #0
    6bf8:	mov	r0, r1
    6bfc:	bl	0 <coda_type_set_bit_size>
    6c00:	bl	0 <__aeabi_read_tp>
    6c04:	mov	r2, r0
    6c08:	ldr	r3, [pc, #-688]	; 6960 <grib_init+0x634c>
    6c0c:	ldr	r3, [r2, r3]
    6c10:	add	r3, r3, #488	; 0x1e8
    6c14:	ldr	r3, [r3]
    6c18:	ldr	r1, [pc, #-804]	; 68fc <grib_init+0x62e8>
    6c1c:	mov	r0, r3
    6c20:	bl	0 <coda_type_set_description>
    6c24:	bl	0 <__aeabi_read_tp>
    6c28:	mov	r2, r0
    6c2c:	ldr	r3, [pc, #-724]	; 6960 <grib_init+0x634c>
    6c30:	ldr	r3, [r2, r3]
    6c34:	add	r4, r3, #492	; 0x1ec
    6c38:	mov	r1, #2
    6c3c:	mov	r0, #7
    6c40:	bl	0 <coda_type_number_new>
    6c44:	mov	r3, r0
    6c48:	str	r3, [r4]
    6c4c:	bl	0 <__aeabi_read_tp>
    6c50:	mov	r2, r0
    6c54:	ldr	r3, [pc, #-764]	; 6960 <grib_init+0x634c>
    6c58:	ldr	r3, [r2, r3]
    6c5c:	add	r3, r3, #492	; 0x1ec
    6c60:	ldr	r3, [r3]
    6c64:	ldr	r1, [fp, #-20]	; 0xffffffec
    6c68:	mov	r0, r3
    6c6c:	bl	0 <coda_type_number_set_endianness>
    6c70:	bl	0 <__aeabi_read_tp>
    6c74:	mov	r2, r0
    6c78:	ldr	r3, [pc, #-800]	; 6960 <grib_init+0x634c>
    6c7c:	ldr	r3, [r2, r3]
    6c80:	add	r3, r3, #492	; 0x1ec
    6c84:	ldr	r3, [r3]
    6c88:	mov	r1, #5
    6c8c:	mov	r0, r3
    6c90:	bl	0 <coda_type_set_read_type>
    6c94:	bl	0 <__aeabi_read_tp>
    6c98:	mov	r2, r0
    6c9c:	ldr	r3, [pc, #-836]	; 6960 <grib_init+0x634c>
    6ca0:	ldr	r3, [r2, r3]
    6ca4:	add	r3, r3, #492	; 0x1ec
    6ca8:	ldr	r1, [r3]
    6cac:	mov	r2, #32
    6cb0:	mov	r3, #0
    6cb4:	mov	r0, r1
    6cb8:	bl	0 <coda_type_set_bit_size>
    6cbc:	bl	0 <__aeabi_read_tp>
    6cc0:	mov	r2, r0
    6cc4:	ldr	r3, [pc, #-876]	; 6960 <grib_init+0x634c>
    6cc8:	ldr	r3, [r2, r3]
    6ccc:	add	r3, r3, #492	; 0x1ec
    6cd0:	ldr	r3, [r3]
    6cd4:	ldr	r1, [pc, #-988]	; 6900 <grib_init+0x62ec>
    6cd8:	mov	r0, r3
    6cdc:	bl	0 <coda_type_set_description>
    6ce0:	bl	0 <__aeabi_read_tp>
    6ce4:	mov	r2, r0
    6ce8:	ldr	r3, [pc, #-912]	; 6960 <grib_init+0x634c>
    6cec:	ldr	r3, [r2, r3]
    6cf0:	add	r4, r3, #496	; 0x1f0
    6cf4:	mov	r1, #2
    6cf8:	mov	r0, #7
    6cfc:	bl	0 <coda_type_number_new>
    6d00:	mov	r3, r0
    6d04:	str	r3, [r4]
    6d08:	bl	0 <__aeabi_read_tp>
    6d0c:	mov	r2, r0
    6d10:	ldr	r3, [pc, #-952]	; 6960 <grib_init+0x634c>
    6d14:	ldr	r3, [r2, r3]
    6d18:	add	r3, r3, #496	; 0x1f0
    6d1c:	ldr	r3, [r3]
    6d20:	ldr	r1, [fp, #-20]	; 0xffffffec
    6d24:	mov	r0, r3
    6d28:	bl	0 <coda_type_number_set_endianness>
    6d2c:	bl	0 <__aeabi_read_tp>
    6d30:	mov	r2, r0
    6d34:	ldr	r3, [pc, #-988]	; 6960 <grib_init+0x634c>
    6d38:	ldr	r3, [r2, r3]
    6d3c:	add	r3, r3, #496	; 0x1f0
    6d40:	ldr	r3, [r3]
    6d44:	mov	r1, #1
    6d48:	mov	r0, r3
    6d4c:	bl	0 <coda_type_set_read_type>
    6d50:	bl	0 <__aeabi_read_tp>
    6d54:	mov	r2, r0
    6d58:	ldr	r3, [pc, #-1024]	; 6960 <grib_init+0x634c>
    6d5c:	ldr	r3, [r2, r3]
    6d60:	add	r3, r3, #496	; 0x1f0
    6d64:	ldr	r1, [r3]
    6d68:	mov	r2, #8
    6d6c:	mov	r3, #0
    6d70:	mov	r0, r1
    6d74:	bl	0 <coda_type_set_bit_size>
    6d78:	bl	0 <__aeabi_read_tp>
    6d7c:	mov	r2, r0
    6d80:	ldr	r3, [pc, #-1064]	; 6960 <grib_init+0x634c>
    6d84:	ldr	r3, [r2, r3]
    6d88:	add	r3, r3, #496	; 0x1f0
    6d8c:	ldr	r3, [r3]
    6d90:	ldr	r1, [pc, #-1172]	; 6904 <grib_init+0x62f0>
    6d94:	mov	r0, r3
    6d98:	bl	0 <coda_type_set_description>
    6d9c:	bl	0 <__aeabi_read_tp>
    6da0:	mov	r2, r0
    6da4:	ldr	r3, [pc, #-1100]	; 6960 <grib_init+0x634c>
    6da8:	ldr	r3, [r2, r3]
    6dac:	add	r4, r3, #500	; 0x1f4
    6db0:	mov	r1, #3
    6db4:	mov	r0, #7
    6db8:	bl	0 <coda_type_number_new>
    6dbc:	mov	r3, r0
    6dc0:	str	r3, [r4]
    6dc4:	bl	0 <__aeabi_read_tp>
    6dc8:	mov	r2, r0
    6dcc:	ldr	r3, [pc, #-1140]	; 6960 <grib_init+0x634c>
    6dd0:	ldr	r3, [r2, r3]
    6dd4:	add	r3, r3, #500	; 0x1f4
    6dd8:	ldr	r3, [r3]
    6ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
    6de0:	mov	r0, r3
    6de4:	bl	0 <coda_type_number_set_endianness>
    6de8:	bl	0 <__aeabi_read_tp>
    6dec:	mov	r2, r0
    6df0:	ldr	r3, [pc, #-1176]	; 6960 <grib_init+0x634c>
    6df4:	ldr	r3, [r2, r3]
    6df8:	add	r3, r3, #500	; 0x1f4
    6dfc:	ldr	r3, [r3]
    6e00:	mov	r1, #9
    6e04:	mov	r0, r3
    6e08:	bl	0 <coda_type_set_read_type>
    6e0c:	bl	0 <__aeabi_read_tp>
    6e10:	mov	r2, r0
    6e14:	ldr	r3, [pc, #-1212]	; 6960 <grib_init+0x634c>
    6e18:	ldr	r3, [r2, r3]
    6e1c:	add	r3, r3, #500	; 0x1f4
    6e20:	ldr	r1, [r3]
    6e24:	mov	r2, #64	; 0x40
    6e28:	mov	r3, #0
    6e2c:	mov	r0, r1
    6e30:	bl	0 <coda_type_set_bit_size>
    6e34:	bl	0 <__aeabi_read_tp>
    6e38:	mov	r2, r0
    6e3c:	ldr	r3, [pc, #-1252]	; 6960 <grib_init+0x634c>
    6e40:	ldr	r3, [r2, r3]
    6e44:	add	r3, r3, #500	; 0x1f4
    6e48:	ldr	r3, [r3]
    6e4c:	ldr	r1, [pc, #-1356]	; 6908 <grib_init+0x62f4>
    6e50:	mov	r0, r3
    6e54:	bl	0 <coda_type_set_description>
    6e58:	bl	0 <__aeabi_read_tp>
    6e5c:	mov	r2, r0
    6e60:	ldr	r3, [pc, #-1288]	; 6960 <grib_init+0x634c>
    6e64:	ldr	r3, [r2, r3]
    6e68:	add	r4, r3, #504	; 0x1f8
    6e6c:	mov	r1, #2
    6e70:	mov	r0, #7
    6e74:	bl	0 <coda_type_number_new>
    6e78:	mov	r3, r0
    6e7c:	str	r3, [r4]
    6e80:	bl	0 <__aeabi_read_tp>
    6e84:	mov	r2, r0
    6e88:	ldr	r3, [pc, #-1328]	; 6960 <grib_init+0x634c>
    6e8c:	ldr	r3, [r2, r3]
    6e90:	add	r3, r3, #504	; 0x1f8
    6e94:	ldr	r3, [r3]
    6e98:	ldr	r1, [fp, #-20]	; 0xffffffec
    6e9c:	mov	r0, r3
    6ea0:	bl	0 <coda_type_number_set_endianness>
    6ea4:	bl	0 <__aeabi_read_tp>
    6ea8:	mov	r2, r0
    6eac:	ldr	r3, [pc, #-1364]	; 6960 <grib_init+0x634c>
    6eb0:	ldr	r3, [r2, r3]
    6eb4:	add	r3, r3, #504	; 0x1f8
    6eb8:	ldr	r3, [r3]
    6ebc:	mov	r1, #1
    6ec0:	mov	r0, r3
    6ec4:	bl	0 <coda_type_set_read_type>
    6ec8:	bl	0 <__aeabi_read_tp>
    6ecc:	mov	r2, r0
    6ed0:	ldr	r3, [pc, #-1400]	; 6960 <grib_init+0x634c>
    6ed4:	ldr	r3, [r2, r3]
    6ed8:	add	r3, r3, #504	; 0x1f8
    6edc:	ldr	r1, [r3]
    6ee0:	mov	r2, #8
    6ee4:	mov	r3, #0
    6ee8:	mov	r0, r1
    6eec:	bl	0 <coda_type_set_bit_size>
    6ef0:	bl	0 <__aeabi_read_tp>
    6ef4:	mov	r2, r0
    6ef8:	ldr	r3, [pc, #-1440]	; 6960 <grib_init+0x634c>
    6efc:	ldr	r3, [r2, r3]
    6f00:	add	r3, r3, #504	; 0x1f8
    6f04:	ldr	r3, [r3]
    6f08:	ldr	r1, [pc, #-1540]	; 690c <grib_init+0x62f8>
    6f0c:	mov	r0, r3
    6f10:	bl	0 <coda_type_set_description>
    6f14:	bl	0 <__aeabi_read_tp>
    6f18:	mov	r2, r0
    6f1c:	ldr	r3, [pc, #-1476]	; 6960 <grib_init+0x634c>
    6f20:	ldr	r3, [r2, r3]
    6f24:	add	r4, r3, #508	; 0x1fc
    6f28:	mov	r1, #3
    6f2c:	mov	r0, #7
    6f30:	bl	0 <coda_type_number_new>
    6f34:	mov	r3, r0
    6f38:	str	r3, [r4]
    6f3c:	bl	0 <__aeabi_read_tp>
    6f40:	mov	r2, r0
    6f44:	ldr	r3, [pc, #-1516]	; 6960 <grib_init+0x634c>
    6f48:	ldr	r3, [r2, r3]
    6f4c:	add	r3, r3, #508	; 0x1fc
    6f50:	ldr	r3, [r3]
    6f54:	ldr	r1, [fp, #-20]	; 0xffffffec
    6f58:	mov	r0, r3
    6f5c:	bl	0 <coda_type_number_set_endianness>
    6f60:	bl	0 <__aeabi_read_tp>
    6f64:	mov	r2, r0
    6f68:	ldr	r3, [pc, #-1552]	; 6960 <grib_init+0x634c>
    6f6c:	ldr	r3, [r2, r3]
    6f70:	add	r3, r3, #508	; 0x1fc
    6f74:	ldr	r3, [r3]
    6f78:	mov	r1, #9
    6f7c:	mov	r0, r3
    6f80:	bl	0 <coda_type_set_read_type>
    6f84:	bl	0 <__aeabi_read_tp>
    6f88:	mov	r2, r0
    6f8c:	ldr	r3, [pc, #-1588]	; 6960 <grib_init+0x634c>
    6f90:	ldr	r3, [r2, r3]
    6f94:	add	r3, r3, #508	; 0x1fc
    6f98:	ldr	r1, [r3]
    6f9c:	mov	r2, #64	; 0x40
    6fa0:	mov	r3, #0
    6fa4:	mov	r0, r1
    6fa8:	bl	0 <coda_type_set_bit_size>
    6fac:	bl	0 <__aeabi_read_tp>
    6fb0:	mov	r2, r0
    6fb4:	ldr	r3, [pc, #-1628]	; 6960 <grib_init+0x634c>
    6fb8:	ldr	r3, [r2, r3]
    6fbc:	add	r3, r3, #508	; 0x1fc
    6fc0:	ldr	r3, [r3]
    6fc4:	ldr	r1, [pc, #-1724]	; 6910 <grib_init+0x62fc>
    6fc8:	mov	r0, r3
    6fcc:	bl	0 <coda_type_set_description>
    6fd0:	bl	0 <__aeabi_read_tp>
    6fd4:	mov	r2, r0
    6fd8:	ldr	r3, [pc, #-1664]	; 6960 <grib_init+0x634c>
    6fdc:	ldr	r3, [r2, r3]
    6fe0:	add	r4, r3, #512	; 0x200
    6fe4:	mov	r1, #3
    6fe8:	mov	r0, #7
    6fec:	bl	0 <coda_type_number_new>
    6ff0:	mov	r3, r0
    6ff4:	str	r3, [r4]
    6ff8:	bl	0 <__aeabi_read_tp>
    6ffc:	mov	r2, r0
    7000:	ldr	r3, [pc, #-1704]	; 6960 <grib_init+0x634c>
    7004:	ldr	r3, [r2, r3]
    7008:	add	r3, r3, #512	; 0x200
    700c:	ldr	r3, [r3]
    7010:	ldr	r1, [fp, #-20]	; 0xffffffec
    7014:	mov	r0, r3
    7018:	bl	0 <coda_type_number_set_endianness>
    701c:	bl	0 <__aeabi_read_tp>
    7020:	mov	r2, r0
    7024:	ldr	r3, [pc, #-1740]	; 6960 <grib_init+0x634c>
    7028:	ldr	r3, [r2, r3]
    702c:	add	r3, r3, #512	; 0x200
    7030:	ldr	r3, [r3]
    7034:	mov	r1, #8
    7038:	mov	r0, r3
    703c:	bl	0 <coda_type_set_read_type>
    7040:	bl	0 <__aeabi_read_tp>
    7044:	mov	r2, r0
    7048:	ldr	r3, [pc, #-1776]	; 6960 <grib_init+0x634c>
    704c:	ldr	r3, [r2, r3]
    7050:	add	r3, r3, #512	; 0x200
    7054:	ldr	r1, [r3]
    7058:	mov	r2, #32
    705c:	mov	r3, #0
    7060:	mov	r0, r1
    7064:	bl	0 <coda_type_set_bit_size>
    7068:	bl	0 <__aeabi_read_tp>
    706c:	mov	r2, r0
    7070:	ldr	r3, [pc, #-1816]	; 6960 <grib_init+0x634c>
    7074:	ldr	r3, [r2, r3]
    7078:	add	r4, r3, #516	; 0x204
    707c:	mov	r0, #7
    7080:	bl	0 <coda_type_array_new>
    7084:	mov	r3, r0
    7088:	str	r3, [r4]
    708c:	bl	0 <__aeabi_read_tp>
    7090:	mov	r2, r0
    7094:	ldr	r3, [pc, #-1852]	; 6960 <grib_init+0x634c>
    7098:	ldr	r3, [r2, r3]
    709c:	add	r3, r3, #516	; 0x204
    70a0:	ldr	r3, [r3]
    70a4:	ldr	r1, [pc, #-1944]	; 6914 <grib_init+0x6300>
    70a8:	mov	r0, r3
    70ac:	bl	0 <coda_type_set_description>
    70b0:	bl	0 <__aeabi_read_tp>
    70b4:	mov	r2, r0
    70b8:	ldr	r3, [pc, #-1888]	; 6960 <grib_init+0x634c>
    70bc:	ldr	r3, [r2, r3]
    70c0:	add	r3, r3, #516	; 0x204
    70c4:	ldr	r2, [r3]
    70c8:	bl	0 <__aeabi_read_tp>
    70cc:	mov	r1, r0
    70d0:	ldr	r3, [pc, #-1912]	; 6960 <grib_init+0x634c>
    70d4:	ldr	r3, [r1, r3]
    70d8:	add	r3, r3, #512	; 0x200
    70dc:	ldr	r3, [r3]
    70e0:	mov	r1, r3
    70e4:	mov	r0, r2
    70e8:	bl	0 <coda_type_array_set_base_type>
    70ec:	bl	0 <__aeabi_read_tp>
    70f0:	mov	r2, r0
    70f4:	ldr	r3, [pc, #-1948]	; 6960 <grib_init+0x634c>
    70f8:	ldr	r3, [r2, r3]
    70fc:	add	r3, r3, #516	; 0x204
    7100:	ldr	r3, [r3]
    7104:	mov	r1, #0
    7108:	mov	r0, r3
    710c:	bl	0 <coda_type_array_add_variable_dimension>
    7110:	bl	0 <__aeabi_read_tp>
    7114:	mov	r2, r0
    7118:	ldr	r3, [pc, #-1984]	; 6960 <grib_init+0x634c>
    711c:	ldr	r3, [r2, r3]
    7120:	add	r4, r3, #520	; 0x208
    7124:	mov	r1, #2
    7128:	mov	r0, #7
    712c:	bl	0 <coda_type_number_new>
    7130:	mov	r3, r0
    7134:	str	r3, [r4]
    7138:	bl	0 <__aeabi_read_tp>
    713c:	mov	r2, r0
    7140:	ldr	r3, [pc, #-2024]	; 6960 <grib_init+0x634c>
    7144:	ldr	r3, [r2, r3]
    7148:	add	r3, r3, #520	; 0x208
    714c:	ldr	r3, [r3]
    7150:	ldr	r1, [fp, #-20]	; 0xffffffec
    7154:	mov	r0, r3
    7158:	bl	0 <coda_type_number_set_endianness>
    715c:	bl	0 <__aeabi_read_tp>
    7160:	mov	r2, r0
    7164:	ldr	r3, [pc, #-2060]	; 6960 <grib_init+0x634c>
    7168:	ldr	r3, [r2, r3]
    716c:	add	r3, r3, #520	; 0x208
    7170:	ldr	r3, [r3]
    7174:	mov	r1, #3
    7178:	mov	r0, r3
    717c:	bl	0 <coda_type_set_read_type>
    7180:	bl	0 <__aeabi_read_tp>
    7184:	mov	r2, r0
    7188:	ldr	r3, [pc, #-2096]	; 6960 <grib_init+0x634c>
    718c:	ldr	r3, [r2, r3]
    7190:	add	r3, r3, #520	; 0x208
    7194:	ldr	r1, [r3]
    7198:	mov	r2, #16
    719c:	mov	r3, #0
    71a0:	mov	r0, r1
    71a4:	bl	0 <coda_type_set_bit_size>
    71a8:	bl	0 <__aeabi_read_tp>
    71ac:	mov	r2, r0
    71b0:	ldr	r3, [pc, #-2136]	; 6960 <grib_init+0x634c>
    71b4:	ldr	r3, [r2, r3]
    71b8:	add	r3, r3, #520	; 0x208
    71bc:	ldr	r3, [r3]
    71c0:	ldr	r1, [pc, #-2224]	; 6918 <grib_init+0x6304>
    71c4:	mov	r0, r3
    71c8:	bl	0 <coda_type_set_description>
    71cc:	bl	0 <__aeabi_read_tp>
    71d0:	mov	r2, r0
    71d4:	ldr	r3, [pc, #-2172]	; 6960 <grib_init+0x634c>
    71d8:	ldr	r3, [r2, r3]
    71dc:	add	r4, r3, #524	; 0x20c
    71e0:	mov	r1, #2
    71e4:	mov	r0, #7
    71e8:	bl	0 <coda_type_number_new>
    71ec:	mov	r3, r0
    71f0:	str	r3, [r4]
    71f4:	bl	0 <__aeabi_read_tp>
    71f8:	mov	r2, r0
    71fc:	ldr	r3, [pc, #-2212]	; 6960 <grib_init+0x634c>
    7200:	ldr	r3, [r2, r3]
    7204:	add	r3, r3, #524	; 0x20c
    7208:	ldr	r3, [r3]
    720c:	ldr	r1, [fp, #-20]	; 0xffffffec
    7210:	mov	r0, r3
    7214:	bl	0 <coda_type_number_set_endianness>
    7218:	bl	0 <__aeabi_read_tp>
    721c:	mov	r2, r0
    7220:	ldr	r3, [pc, #-2248]	; 6960 <grib_init+0x634c>
    7224:	ldr	r3, [r2, r3]
    7228:	add	r3, r3, #524	; 0x20c
    722c:	ldr	r3, [r3]
    7230:	mov	r1, #1
    7234:	mov	r0, r3
    7238:	bl	0 <coda_type_set_read_type>
    723c:	bl	0 <__aeabi_read_tp>
    7240:	mov	r2, r0
    7244:	ldr	r3, [pc, #-2284]	; 6960 <grib_init+0x634c>
    7248:	ldr	r3, [r2, r3]
    724c:	add	r3, r3, #524	; 0x20c
    7250:	ldr	r1, [r3]
    7254:	mov	r2, #8
    7258:	mov	r3, #0
    725c:	mov	r0, r1
    7260:	bl	0 <coda_type_set_bit_size>
    7264:	bl	0 <__aeabi_read_tp>
    7268:	mov	r2, r0
    726c:	ldr	r3, [pc, #-2324]	; 6960 <grib_init+0x634c>
    7270:	ldr	r3, [r2, r3]
    7274:	add	r3, r3, #524	; 0x20c
    7278:	ldr	r3, [r3]
    727c:	ldr	r1, [pc, #-2408]	; 691c <grib_init+0x6308>
    7280:	mov	r0, r3
    7284:	bl	0 <coda_type_set_description>
    7288:	bl	0 <__aeabi_read_tp>
    728c:	mov	r2, r0
    7290:	ldr	r3, [pc, #-2360]	; 6960 <grib_init+0x634c>
    7294:	ldr	r3, [r2, r3]
    7298:	add	r4, r3, #528	; 0x210
    729c:	mov	r1, #2
    72a0:	mov	r0, #7
    72a4:	bl	0 <coda_type_number_new>
    72a8:	mov	r3, r0
    72ac:	str	r3, [r4]
    72b0:	bl	0 <__aeabi_read_tp>
    72b4:	mov	r2, r0
    72b8:	ldr	r3, [pc, #-2400]	; 6960 <grib_init+0x634c>
    72bc:	ldr	r3, [r2, r3]
    72c0:	add	r3, r3, #528	; 0x210
    72c4:	ldr	r3, [r3]
    72c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    72cc:	mov	r0, r3
    72d0:	bl	0 <coda_type_number_set_endianness>
    72d4:	bl	0 <__aeabi_read_tp>
    72d8:	mov	r2, r0
    72dc:	ldr	r3, [pc, #-2436]	; 6960 <grib_init+0x634c>
    72e0:	ldr	r3, [r2, r3]
    72e4:	add	r3, r3, #528	; 0x210
    72e8:	ldr	r3, [r3]
    72ec:	mov	r1, #2
    72f0:	mov	r0, r3
    72f4:	bl	0 <coda_type_set_read_type>
    72f8:	bl	0 <__aeabi_read_tp>
    72fc:	mov	r2, r0
    7300:	ldr	r3, [pc, #-2472]	; 6960 <grib_init+0x634c>
    7304:	ldr	r3, [r2, r3]
    7308:	add	r3, r3, #528	; 0x210
    730c:	ldr	r1, [r3]
    7310:	mov	r2, #16
    7314:	mov	r3, #0
    7318:	mov	r0, r1
    731c:	bl	0 <coda_type_set_bit_size>
    7320:	bl	0 <__aeabi_read_tp>
    7324:	mov	r2, r0
    7328:	ldr	r3, [pc, #-2512]	; 6960 <grib_init+0x634c>
    732c:	ldr	r3, [r2, r3]
    7330:	add	r3, r3, #528	; 0x210
    7334:	ldr	r3, [r3]
    7338:	ldr	r1, [pc, #-2592]	; 6920 <grib_init+0x630c>
    733c:	mov	r0, r3
    7340:	bl	0 <coda_type_set_description>
    7344:	bl	0 <__aeabi_read_tp>
    7348:	mov	r2, r0
    734c:	ldr	r3, [pc, #-2548]	; 6960 <grib_init+0x634c>
    7350:	ldr	r3, [r2, r3]
    7354:	add	r4, r3, #532	; 0x214
    7358:	mov	r1, #3
    735c:	mov	r0, #7
    7360:	bl	0 <coda_type_number_new>
    7364:	mov	r3, r0
    7368:	str	r3, [r4]
    736c:	bl	0 <__aeabi_read_tp>
    7370:	mov	r2, r0
    7374:	ldr	r3, [pc, #-2588]	; 6960 <grib_init+0x634c>
    7378:	ldr	r3, [r2, r3]
    737c:	add	r3, r3, #532	; 0x214
    7380:	ldr	r3, [r3]
    7384:	ldr	r1, [fp, #-20]	; 0xffffffec
    7388:	mov	r0, r3
    738c:	bl	0 <coda_type_number_set_endianness>
    7390:	bl	0 <__aeabi_read_tp>
    7394:	mov	r2, r0
    7398:	ldr	r3, [pc, #-2624]	; 6960 <grib_init+0x634c>
    739c:	ldr	r3, [r2, r3]
    73a0:	add	r3, r3, #532	; 0x214
    73a4:	ldr	r3, [r3]
    73a8:	mov	r1, #8
    73ac:	mov	r0, r3
    73b0:	bl	0 <coda_type_set_read_type>
    73b4:	bl	0 <__aeabi_read_tp>
    73b8:	mov	r2, r0
    73bc:	ldr	r3, [pc, #-2660]	; 6960 <grib_init+0x634c>
    73c0:	ldr	r3, [r2, r3]
    73c4:	add	r3, r3, #532	; 0x214
    73c8:	ldr	r1, [r3]
    73cc:	mov	r2, #32
    73d0:	mov	r3, #0
    73d4:	mov	r0, r1
    73d8:	bl	0 <coda_type_set_bit_size>
    73dc:	bl	0 <__aeabi_read_tp>
    73e0:	mov	r2, r0
    73e4:	ldr	r3, [pc, #-2700]	; 6960 <grib_init+0x634c>
    73e8:	ldr	r3, [r2, r3]
    73ec:	add	r3, r3, #532	; 0x214
    73f0:	ldr	r3, [r3]
    73f4:	ldr	r1, [pc, #-2776]	; 6924 <grib_init+0x6310>
    73f8:	mov	r0, r3
    73fc:	bl	0 <coda_type_set_description>
    7400:	bl	0 <__aeabi_read_tp>
    7404:	mov	r2, r0
    7408:	ldr	r3, [pc, #-2736]	; 6960 <grib_init+0x634c>
    740c:	ldr	r3, [r2, r3]
    7410:	add	r4, r3, #536	; 0x218
    7414:	mov	r0, #7
    7418:	bl	0 <coda_type_array_new>
    741c:	mov	r3, r0
    7420:	str	r3, [r4]
    7424:	mov	r1, #3
    7428:	mov	r0, #7
    742c:	bl	0 <coda_type_number_new>
    7430:	str	r0, [fp, #-24]	; 0xffffffe8
    7434:	ldr	r1, [fp, #-20]	; 0xffffffec
    7438:	ldr	r0, [fp, #-24]	; 0xffffffe8
    743c:	bl	0 <coda_type_number_set_endianness>
    7440:	mov	r1, #8
    7444:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7448:	bl	0 <coda_type_set_read_type>
    744c:	mov	r2, #32
    7450:	mov	r3, #0
    7454:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7458:	bl	0 <coda_type_set_bit_size>
    745c:	bl	0 <__aeabi_read_tp>
    7460:	mov	r2, r0
    7464:	ldr	r3, [pc, #-2828]	; 6960 <grib_init+0x634c>
    7468:	ldr	r3, [r2, r3]
    746c:	add	r3, r3, #536	; 0x218
    7470:	ldr	r3, [r3]
    7474:	ldr	r1, [fp, #-24]	; 0xffffffe8
    7478:	mov	r0, r3
    747c:	bl	0 <coda_type_array_set_base_type>
    7480:	ldr	r0, [fp, #-24]	; 0xffffffe8
    7484:	bl	0 <coda_type_release>
    7488:	bl	0 <__aeabi_read_tp>
    748c:	mov	r2, r0
    7490:	ldr	r3, [pc, #-2872]	; 6960 <grib_init+0x634c>
    7494:	ldr	r3, [r2, r3]
    7498:	add	r3, r3, #536	; 0x218
    749c:	ldr	r3, [r3]
    74a0:	mov	r1, #0
    74a4:	mov	r0, r3
    74a8:	bl	0 <coda_type_array_add_variable_dimension>
    74ac:	bl	0 <__aeabi_read_tp>
    74b0:	mov	r2, r0
    74b4:	ldr	r3, [pc, #-2908]	; 6960 <grib_init+0x634c>
    74b8:	ldr	r3, [r2, r3]
    74bc:	add	r4, r3, #540	; 0x21c
    74c0:	mov	r0, #7
    74c4:	bl	0 <coda_type_record_new>
    74c8:	mov	r3, r0
    74cc:	str	r3, [r4]
    74d0:	ldr	r0, [pc, #-2992]	; 6928 <grib_init+0x6314>
    74d4:	bl	0 <coda_type_record_field_new>
    74d8:	str	r0, [fp, #-28]	; 0xffffffe4
    74dc:	bl	0 <__aeabi_read_tp>
    74e0:	mov	r2, r0
    74e4:	ldr	r3, [pc, #-2956]	; 6960 <grib_init+0x634c>
    74e8:	ldr	r3, [r2, r3]
    74ec:	add	r3, r3, #276	; 0x114
    74f0:	ldr	r3, [r3]
    74f4:	mov	r1, r3
    74f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    74fc:	bl	0 <coda_type_record_field_set_type>
    7500:	bl	0 <__aeabi_read_tp>
    7504:	mov	r2, r0
    7508:	ldr	r3, [pc, #-2992]	; 6960 <grib_init+0x634c>
    750c:	ldr	r3, [r2, r3]
    7510:	add	r3, r3, #540	; 0x21c
    7514:	ldr	r3, [r3]
    7518:	ldr	r1, [fp, #-28]	; 0xffffffe4
    751c:	mov	r0, r3
    7520:	bl	0 <coda_type_record_add_field>
    7524:	ldr	r0, [pc, #-3072]	; 692c <grib_init+0x6318>
    7528:	bl	0 <coda_type_record_field_new>
    752c:	str	r0, [fp, #-28]	; 0xffffffe4
    7530:	bl	0 <__aeabi_read_tp>
    7534:	mov	r2, r0
    7538:	ldr	r3, [pc, #-3040]	; 6960 <grib_init+0x634c>
    753c:	ldr	r3, [r2, r3]
    7540:	add	r3, r3, #448	; 0x1c0
    7544:	ldr	r3, [r3]
    7548:	mov	r1, r3
    754c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7550:	bl	0 <coda_type_record_field_set_type>
    7554:	bl	0 <__aeabi_read_tp>
    7558:	mov	r2, r0
    755c:	ldr	r3, [pc, #-3076]	; 6960 <grib_init+0x634c>
    7560:	ldr	r3, [r2, r3]
    7564:	add	r3, r3, #540	; 0x21c
    7568:	ldr	r3, [r3]
    756c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7570:	mov	r0, r3
    7574:	bl	0 <coda_type_record_add_field>
    7578:	ldr	r0, [pc, #-3152]	; 6930 <grib_init+0x631c>
    757c:	bl	0 <coda_type_record_field_new>
    7580:	str	r0, [fp, #-28]	; 0xffffffe4
    7584:	bl	0 <__aeabi_read_tp>
    7588:	mov	r2, r0
    758c:	ldr	r3, [pc, #-3124]	; 6960 <grib_init+0x634c>
    7590:	ldr	r3, [r2, r3]
    7594:	add	r3, r3, #452	; 0x1c4
    7598:	ldr	r3, [r3]
    759c:	mov	r1, r3
    75a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    75a4:	bl	0 <coda_type_record_field_set_type>
    75a8:	bl	0 <__aeabi_read_tp>
    75ac:	mov	r2, r0
    75b0:	ldr	r3, [pc, #-3160]	; 6960 <grib_init+0x634c>
    75b4:	ldr	r3, [r2, r3]
    75b8:	add	r3, r3, #540	; 0x21c
    75bc:	ldr	r3, [r3]
    75c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    75c4:	mov	r0, r3
    75c8:	bl	0 <coda_type_record_add_field>
    75cc:	ldr	r0, [pc, #-3232]	; 6934 <grib_init+0x6320>
    75d0:	bl	0 <coda_type_record_field_new>
    75d4:	str	r0, [fp, #-28]	; 0xffffffe4
    75d8:	bl	0 <__aeabi_read_tp>
    75dc:	mov	r2, r0
    75e0:	ldr	r3, [pc, #-3208]	; 6960 <grib_init+0x634c>
    75e4:	ldr	r3, [r2, r3]
    75e8:	add	r3, r3, #456	; 0x1c8
    75ec:	ldr	r3, [r3]
    75f0:	mov	r1, r3
    75f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    75f8:	bl	0 <coda_type_record_field_set_type>
    75fc:	bl	0 <__aeabi_read_tp>
    7600:	mov	r2, r0
    7604:	ldr	r3, [pc, #-3244]	; 6960 <grib_init+0x634c>
    7608:	ldr	r3, [r2, r3]
    760c:	add	r3, r3, #540	; 0x21c
    7610:	ldr	r3, [r3]
    7614:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7618:	mov	r0, r3
    761c:	bl	0 <coda_type_record_add_field>
    7620:	ldr	r0, [pc, #-3312]	; 6938 <grib_init+0x6324>
    7624:	bl	0 <coda_type_record_field_new>
    7628:	str	r0, [fp, #-28]	; 0xffffffe4
    762c:	bl	0 <__aeabi_read_tp>
    7630:	mov	r2, r0
    7634:	ldr	r3, [pc, #-3292]	; 6960 <grib_init+0x634c>
    7638:	ldr	r3, [r2, r3]
    763c:	add	r3, r3, #520	; 0x208
    7640:	ldr	r3, [r3]
    7644:	mov	r1, r3
    7648:	ldr	r0, [fp, #-28]	; 0xffffffe4
    764c:	bl	0 <coda_type_record_field_set_type>
    7650:	bl	0 <__aeabi_read_tp>
    7654:	mov	r2, r0
    7658:	ldr	r3, [pc, #-3328]	; 6960 <grib_init+0x634c>
    765c:	ldr	r3, [r2, r3]
    7660:	add	r3, r3, #540	; 0x21c
    7664:	ldr	r3, [r3]
    7668:	ldr	r1, [fp, #-28]	; 0xffffffe4
    766c:	mov	r0, r3
    7670:	bl	0 <coda_type_record_add_field>
    7674:	ldr	r0, [pc, #-3392]	; 693c <grib_init+0x6328>
    7678:	bl	0 <coda_type_record_field_new>
    767c:	str	r0, [fp, #-28]	; 0xffffffe4
    7680:	bl	0 <__aeabi_read_tp>
    7684:	mov	r2, r0
    7688:	ldr	r3, [pc, #-3376]	; 6960 <grib_init+0x634c>
    768c:	ldr	r3, [r2, r3]
    7690:	add	r3, r3, #360	; 0x168
    7694:	ldr	r3, [r3]
    7698:	mov	r1, r3
    769c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    76a0:	bl	0 <coda_type_record_field_set_type>
    76a4:	bl	0 <__aeabi_read_tp>
    76a8:	mov	r2, r0
    76ac:	ldr	r3, [pc, #-3412]	; 6960 <grib_init+0x634c>
    76b0:	ldr	r3, [r2, r3]
    76b4:	add	r3, r3, #540	; 0x21c
    76b8:	ldr	r3, [r3]
    76bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    76c0:	mov	r0, r3
    76c4:	bl	0 <coda_type_record_add_field>
    76c8:	ldr	r0, [pc, #-3472]	; 6940 <grib_init+0x632c>
    76cc:	bl	0 <coda_type_record_field_new>
    76d0:	str	r0, [fp, #-28]	; 0xffffffe4
    76d4:	bl	0 <__aeabi_read_tp>
    76d8:	mov	r2, r0
    76dc:	ldr	r3, [pc, #-3460]	; 6960 <grib_init+0x634c>
    76e0:	ldr	r3, [r2, r3]
    76e4:	add	r3, r3, #364	; 0x16c
    76e8:	ldr	r3, [r3]
    76ec:	mov	r1, r3
    76f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    76f4:	bl	0 <coda_type_record_field_set_type>
    76f8:	bl	0 <__aeabi_read_tp>
    76fc:	mov	r2, r0
    7700:	ldr	r3, [pc, #-3496]	; 6960 <grib_init+0x634c>
    7704:	ldr	r3, [r2, r3]
    7708:	add	r3, r3, #540	; 0x21c
    770c:	ldr	r3, [r3]
    7710:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7714:	mov	r0, r3
    7718:	bl	0 <coda_type_record_add_field>
    771c:	ldr	r0, [pc, #-3552]	; 6944 <grib_init+0x6330>
    7720:	bl	0 <coda_type_record_field_new>
    7724:	str	r0, [fp, #-28]	; 0xffffffe4
    7728:	bl	0 <__aeabi_read_tp>
    772c:	mov	r2, r0
    7730:	ldr	r3, [pc, #-3544]	; 6960 <grib_init+0x634c>
    7734:	ldr	r3, [r2, r3]
    7738:	add	r3, r3, #368	; 0x170
    773c:	ldr	r3, [r3]
    7740:	mov	r1, r3
    7744:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7748:	bl	0 <coda_type_record_field_set_type>
    774c:	bl	0 <__aeabi_read_tp>
    7750:	mov	r2, r0
    7754:	ldr	r3, [pc, #-3580]	; 6960 <grib_init+0x634c>
    7758:	ldr	r3, [r2, r3]
    775c:	add	r3, r3, #540	; 0x21c
    7760:	ldr	r3, [r3]
    7764:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7768:	mov	r0, r3
    776c:	bl	0 <coda_type_record_add_field>
    7770:	ldr	r0, [pc, #-3632]	; 6948 <grib_init+0x6334>
    7774:	bl	0 <coda_type_record_field_new>
    7778:	str	r0, [fp, #-28]	; 0xffffffe4
    777c:	bl	0 <__aeabi_read_tp>
    7780:	mov	r2, r0
    7784:	ldr	r3, [pc, #-3628]	; 6960 <grib_init+0x634c>
    7788:	ldr	r3, [r2, r3]
    778c:	add	r3, r3, #372	; 0x174
    7790:	ldr	r3, [r3]
    7794:	mov	r1, r3
    7798:	ldr	r0, [fp, #-28]	; 0xffffffe4
    779c:	bl	0 <coda_type_record_field_set_type>
    77a0:	bl	0 <__aeabi_read_tp>
    77a4:	mov	r2, r0
    77a8:	ldr	r3, [pc, #-3664]	; 6960 <grib_init+0x634c>
    77ac:	ldr	r3, [r2, r3]
    77b0:	add	r3, r3, #540	; 0x21c
    77b4:	ldr	r3, [r3]
    77b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    77bc:	mov	r0, r3
    77c0:	bl	0 <coda_type_record_add_field>
    77c4:	ldr	r0, [pc, #-3712]	; 694c <grib_init+0x6338>
    77c8:	bl	0 <coda_type_record_field_new>
    77cc:	str	r0, [fp, #-28]	; 0xffffffe4
    77d0:	bl	0 <__aeabi_read_tp>
    77d4:	mov	r2, r0
    77d8:	ldr	r3, [pc, #-3712]	; 6960 <grib_init+0x634c>
    77dc:	ldr	r3, [r2, r3]
    77e0:	add	r3, r3, #376	; 0x178
    77e4:	ldr	r3, [r3]
    77e8:	mov	r1, r3
    77ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    77f0:	bl	0 <coda_type_record_field_set_type>
    77f4:	bl	0 <__aeabi_read_tp>
    77f8:	mov	r2, r0
    77fc:	ldr	r3, [pc, #-3748]	; 6960 <grib_init+0x634c>
    7800:	ldr	r3, [r2, r3]
    7804:	add	r3, r3, #540	; 0x21c
    7808:	ldr	r3, [r3]
    780c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7810:	mov	r0, r3
    7814:	bl	0 <coda_type_record_add_field>
    7818:	ldr	r0, [pc, #-3792]	; 6950 <grib_init+0x633c>
    781c:	bl	0 <coda_type_record_field_new>
    7820:	str	r0, [fp, #-28]	; 0xffffffe4
    7824:	bl	0 <__aeabi_read_tp>
    7828:	mov	r2, r0
    782c:	ldr	r3, [pc, #-3796]	; 6960 <grib_init+0x634c>
    7830:	ldr	r3, [r2, r3]
    7834:	add	r3, r3, #380	; 0x17c
    7838:	ldr	r3, [r3]
    783c:	mov	r1, r3
    7840:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7844:	bl	0 <coda_type_record_field_set_type>
    7848:	bl	0 <__aeabi_read_tp>
    784c:	mov	r2, r0
    7850:	ldr	r3, [pc, #-3832]	; 6960 <grib_init+0x634c>
    7854:	ldr	r3, [r2, r3]
    7858:	add	r3, r3, #540	; 0x21c
    785c:	ldr	r3, [r3]
    7860:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7864:	mov	r0, r3
    7868:	bl	0 <coda_type_record_add_field>
    786c:	ldr	r0, [pc, #-3872]	; 6954 <grib_init+0x6340>
    7870:	bl	0 <coda_type_record_field_new>
    7874:	str	r0, [fp, #-28]	; 0xffffffe4
    7878:	bl	0 <__aeabi_read_tp>
    787c:	mov	r2, r0
    7880:	ldr	r3, [pc, #-3880]	; 6960 <grib_init+0x634c>
    7884:	ldr	r3, [r2, r3]
    7888:	add	r3, r3, #384	; 0x180
    788c:	ldr	r3, [r3]
    7890:	mov	r1, r3
    7894:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7898:	bl	0 <coda_type_record_field_set_type>
    789c:	bl	0 <__aeabi_read_tp>
    78a0:	mov	r2, r0
    78a4:	ldr	r3, [pc, #-3916]	; 6960 <grib_init+0x634c>
    78a8:	ldr	r3, [r2, r3]
    78ac:	add	r3, r3, #540	; 0x21c
    78b0:	ldr	r3, [r3]
    78b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    78b8:	mov	r0, r3
    78bc:	bl	0 <coda_type_record_add_field>
    78c0:	ldr	r0, [pc, #-3952]	; 6958 <grib_init+0x6344>
    78c4:	bl	0 <coda_type_record_field_new>
    78c8:	str	r0, [fp, #-28]	; 0xffffffe4
    78cc:	bl	0 <__aeabi_read_tp>
    78d0:	mov	r2, r0
    78d4:	ldr	r3, [pc, #-3964]	; 6960 <grib_init+0x634c>
    78d8:	ldr	r3, [r2, r3]
    78dc:	add	r3, r3, #388	; 0x184
    78e0:	ldr	r3, [r3]
    78e4:	mov	r1, r3
    78e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    78ec:	bl	0 <coda_type_record_field_set_type>
    78f0:	bl	0 <__aeabi_read_tp>
    78f4:	mov	r2, r0
    78f8:	ldr	r3, [pc, #-4000]	; 6960 <grib_init+0x634c>
    78fc:	ldr	r3, [r2, r3]
    7900:	add	r3, r3, #540	; 0x21c
    7904:	ldr	r3, [r3]
    7908:	ldr	r1, [fp, #-28]	; 0xffffffe4
    790c:	mov	r0, r3
    7910:	bl	0 <coda_type_record_add_field>
    7914:	ldr	r0, [pc, #-4032]	; 695c <grib_init+0x6348>
    7918:	bl	0 <coda_type_record_field_new>
    791c:	str	r0, [fp, #-28]	; 0xffffffe4
    7920:	bl	0 <__aeabi_read_tp>
    7924:	mov	r2, r0
    7928:	ldr	r3, [pc, #-4048]	; 6960 <grib_init+0x634c>
    792c:	ldr	r3, [r2, r3]
    7930:	add	r3, r3, #392	; 0x188
    7934:	ldr	r3, [r3]
    7938:	mov	r1, r3
    793c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7940:	bl	0 <coda_type_record_field_set_type>
    7944:	bl	0 <__aeabi_read_tp>
    7948:	mov	r2, r0
    794c:	ldr	r3, [pc, #-4084]	; 6960 <grib_init+0x634c>
    7950:	ldr	r3, [r2, r3]
    7954:	add	r3, r3, #540	; 0x21c
    7958:	ldr	r3, [r3]
    795c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7960:	mov	r0, r3
    7964:	bl	0 <coda_type_record_add_field>
    7968:	ldr	r0, [pc, #4088]	; 8968 <grib_init+0x8354>
    796c:	bl	0 <coda_type_record_field_new>
    7970:	str	r0, [fp, #-28]	; 0xffffffe4
    7974:	bl	0 <__aeabi_read_tp>
    7978:	mov	r2, r0
    797c:	ldr	r3, [pc, #4072]	; 896c <grib_init+0x8358>
    7980:	ldr	r3, [r2, r3]
    7984:	add	r3, r3, #396	; 0x18c
    7988:	ldr	r3, [r3]
    798c:	mov	r1, r3
    7990:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7994:	bl	0 <coda_type_record_field_set_type>
    7998:	bl	0 <__aeabi_read_tp>
    799c:	mov	r2, r0
    79a0:	ldr	r3, [pc, #4036]	; 896c <grib_init+0x8358>
    79a4:	ldr	r3, [r2, r3]
    79a8:	add	r3, r3, #540	; 0x21c
    79ac:	ldr	r3, [r3]
    79b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    79b4:	mov	r0, r3
    79b8:	bl	0 <coda_type_record_add_field>
    79bc:	ldr	r0, [pc, #4012]	; 8970 <grib_init+0x835c>
    79c0:	bl	0 <coda_type_record_field_new>
    79c4:	str	r0, [fp, #-28]	; 0xffffffe4
    79c8:	bl	0 <__aeabi_read_tp>
    79cc:	mov	r2, r0
    79d0:	ldr	r3, [pc, #3988]	; 896c <grib_init+0x8358>
    79d4:	ldr	r3, [r2, r3]
    79d8:	add	r3, r3, #400	; 0x190
    79dc:	ldr	r3, [r3]
    79e0:	mov	r1, r3
    79e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    79e8:	bl	0 <coda_type_record_field_set_type>
    79ec:	bl	0 <__aeabi_read_tp>
    79f0:	mov	r2, r0
    79f4:	ldr	r3, [pc, #3952]	; 896c <grib_init+0x8358>
    79f8:	ldr	r3, [r2, r3]
    79fc:	add	r3, r3, #540	; 0x21c
    7a00:	ldr	r3, [r3]
    7a04:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7a08:	mov	r0, r3
    7a0c:	bl	0 <coda_type_record_add_field>
    7a10:	ldr	r0, [pc, #3932]	; 8974 <grib_init+0x8360>
    7a14:	bl	0 <coda_type_record_field_new>
    7a18:	str	r0, [fp, #-28]	; 0xffffffe4
    7a1c:	bl	0 <__aeabi_read_tp>
    7a20:	mov	r2, r0
    7a24:	ldr	r3, [pc, #3904]	; 896c <grib_init+0x8358>
    7a28:	ldr	r3, [r2, r3]
    7a2c:	add	r3, r3, #404	; 0x194
    7a30:	ldr	r3, [r3]
    7a34:	mov	r1, r3
    7a38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7a3c:	bl	0 <coda_type_record_field_set_type>
    7a40:	bl	0 <__aeabi_read_tp>
    7a44:	mov	r2, r0
    7a48:	ldr	r3, [pc, #3868]	; 896c <grib_init+0x8358>
    7a4c:	ldr	r3, [r2, r3]
    7a50:	add	r3, r3, #540	; 0x21c
    7a54:	ldr	r3, [r3]
    7a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7a5c:	mov	r0, r3
    7a60:	bl	0 <coda_type_record_add_field>
    7a64:	ldr	r0, [pc, #3852]	; 8978 <grib_init+0x8364>
    7a68:	bl	0 <coda_type_record_field_new>
    7a6c:	str	r0, [fp, #-28]	; 0xffffffe4
    7a70:	bl	0 <__aeabi_read_tp>
    7a74:	mov	r2, r0
    7a78:	ldr	r3, [pc, #3820]	; 896c <grib_init+0x8358>
    7a7c:	ldr	r3, [r2, r3]
    7a80:	add	r3, r3, #408	; 0x198
    7a84:	ldr	r3, [r3]
    7a88:	mov	r1, r3
    7a8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7a90:	bl	0 <coda_type_record_field_set_type>
    7a94:	bl	0 <__aeabi_read_tp>
    7a98:	mov	r2, r0
    7a9c:	ldr	r3, [pc, #3784]	; 896c <grib_init+0x8358>
    7aa0:	ldr	r3, [r2, r3]
    7aa4:	add	r3, r3, #540	; 0x21c
    7aa8:	ldr	r3, [r3]
    7aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7ab0:	mov	r0, r3
    7ab4:	bl	0 <coda_type_record_add_field>
    7ab8:	ldr	r0, [pc, #3772]	; 897c <grib_init+0x8368>
    7abc:	bl	0 <coda_type_record_field_new>
    7ac0:	str	r0, [fp, #-28]	; 0xffffffe4
    7ac4:	bl	0 <__aeabi_read_tp>
    7ac8:	mov	r2, r0
    7acc:	ldr	r3, [pc, #3736]	; 896c <grib_init+0x8358>
    7ad0:	ldr	r3, [r2, r3]
    7ad4:	add	r3, r3, #412	; 0x19c
    7ad8:	ldr	r3, [r3]
    7adc:	mov	r1, r3
    7ae0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ae4:	bl	0 <coda_type_record_field_set_type>
    7ae8:	bl	0 <__aeabi_read_tp>
    7aec:	mov	r2, r0
    7af0:	ldr	r3, [pc, #3700]	; 896c <grib_init+0x8358>
    7af4:	ldr	r3, [r2, r3]
    7af8:	add	r3, r3, #540	; 0x21c
    7afc:	ldr	r3, [r3]
    7b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7b04:	mov	r0, r3
    7b08:	bl	0 <coda_type_record_add_field>
    7b0c:	ldr	r0, [pc, #3692]	; 8980 <grib_init+0x836c>
    7b10:	bl	0 <coda_type_record_field_new>
    7b14:	str	r0, [fp, #-28]	; 0xffffffe4
    7b18:	bl	0 <__aeabi_read_tp>
    7b1c:	mov	r2, r0
    7b20:	ldr	r3, [pc, #3652]	; 896c <grib_init+0x8358>
    7b24:	ldr	r3, [r2, r3]
    7b28:	add	r3, r3, #416	; 0x1a0
    7b2c:	ldr	r3, [r3]
    7b30:	mov	r1, r3
    7b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7b38:	bl	0 <coda_type_record_field_set_type>
    7b3c:	bl	0 <__aeabi_read_tp>
    7b40:	mov	r2, r0
    7b44:	ldr	r3, [pc, #3616]	; 896c <grib_init+0x8358>
    7b48:	ldr	r3, [r2, r3]
    7b4c:	add	r3, r3, #540	; 0x21c
    7b50:	ldr	r3, [r3]
    7b54:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7b58:	mov	r0, r3
    7b5c:	bl	0 <coda_type_record_add_field>
    7b60:	ldr	r0, [pc, #3612]	; 8984 <grib_init+0x8370>
    7b64:	bl	0 <coda_type_record_field_new>
    7b68:	str	r0, [fp, #-28]	; 0xffffffe4
    7b6c:	bl	0 <__aeabi_read_tp>
    7b70:	mov	r2, r0
    7b74:	ldr	r3, [pc, #3568]	; 896c <grib_init+0x8358>
    7b78:	ldr	r3, [r2, r3]
    7b7c:	add	r3, r3, #420	; 0x1a4
    7b80:	ldr	r3, [r3]
    7b84:	mov	r1, r3
    7b88:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7b8c:	bl	0 <coda_type_record_field_set_type>
    7b90:	bl	0 <__aeabi_read_tp>
    7b94:	mov	r2, r0
    7b98:	ldr	r3, [pc, #3532]	; 896c <grib_init+0x8358>
    7b9c:	ldr	r3, [r2, r3]
    7ba0:	add	r3, r3, #540	; 0x21c
    7ba4:	ldr	r3, [r3]
    7ba8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7bac:	mov	r0, r3
    7bb0:	bl	0 <coda_type_record_add_field>
    7bb4:	ldr	r0, [pc, #3532]	; 8988 <grib_init+0x8374>
    7bb8:	bl	0 <coda_type_record_field_new>
    7bbc:	str	r0, [fp, #-28]	; 0xffffffe4
    7bc0:	bl	0 <__aeabi_read_tp>
    7bc4:	mov	r2, r0
    7bc8:	ldr	r3, [pc, #3484]	; 896c <grib_init+0x8358>
    7bcc:	ldr	r3, [r2, r3]
    7bd0:	add	r3, r3, #424	; 0x1a8
    7bd4:	ldr	r3, [r3]
    7bd8:	mov	r1, r3
    7bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7be0:	bl	0 <coda_type_record_field_set_type>
    7be4:	bl	0 <__aeabi_read_tp>
    7be8:	mov	r2, r0
    7bec:	ldr	r3, [pc, #3448]	; 896c <grib_init+0x8358>
    7bf0:	ldr	r3, [r2, r3]
    7bf4:	add	r3, r3, #540	; 0x21c
    7bf8:	ldr	r3, [r3]
    7bfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7c00:	mov	r0, r3
    7c04:	bl	0 <coda_type_record_add_field>
    7c08:	ldr	r0, [pc, #3452]	; 898c <grib_init+0x8378>
    7c0c:	bl	0 <coda_type_record_field_new>
    7c10:	str	r0, [fp, #-28]	; 0xffffffe4
    7c14:	bl	0 <__aeabi_read_tp>
    7c18:	mov	r2, r0
    7c1c:	ldr	r3, [pc, #3400]	; 896c <grib_init+0x8358>
    7c20:	ldr	r3, [r2, r3]
    7c24:	add	r3, r3, #428	; 0x1ac
    7c28:	ldr	r3, [r3]
    7c2c:	mov	r1, r3
    7c30:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7c34:	bl	0 <coda_type_record_field_set_type>
    7c38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7c3c:	bl	0 <coda_type_record_field_set_optional>
    7c40:	bl	0 <__aeabi_read_tp>
    7c44:	mov	r2, r0
    7c48:	ldr	r3, [pc, #3356]	; 896c <grib_init+0x8358>
    7c4c:	ldr	r3, [r2, r3]
    7c50:	add	r3, r3, #540	; 0x21c
    7c54:	ldr	r3, [r3]
    7c58:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7c5c:	mov	r0, r3
    7c60:	bl	0 <coda_type_record_add_field>
    7c64:	ldr	r0, [pc, #3364]	; 8990 <grib_init+0x837c>
    7c68:	bl	0 <coda_type_record_field_new>
    7c6c:	str	r0, [fp, #-28]	; 0xffffffe4
    7c70:	bl	0 <__aeabi_read_tp>
    7c74:	mov	r2, r0
    7c78:	ldr	r3, [pc, #3308]	; 896c <grib_init+0x8358>
    7c7c:	ldr	r3, [r2, r3]
    7c80:	add	r3, r3, #432	; 0x1b0
    7c84:	ldr	r3, [r3]
    7c88:	mov	r1, r3
    7c8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7c90:	bl	0 <coda_type_record_field_set_type>
    7c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7c98:	bl	0 <coda_type_record_field_set_optional>
    7c9c:	bl	0 <__aeabi_read_tp>
    7ca0:	mov	r2, r0
    7ca4:	ldr	r3, [pc, #3264]	; 896c <grib_init+0x8358>
    7ca8:	ldr	r3, [r2, r3]
    7cac:	add	r3, r3, #540	; 0x21c
    7cb0:	ldr	r3, [r3]
    7cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7cb8:	mov	r0, r3
    7cbc:	bl	0 <coda_type_record_add_field>
    7cc0:	ldr	r0, [pc, #3276]	; 8994 <grib_init+0x8380>
    7cc4:	bl	0 <coda_type_record_field_new>
    7cc8:	str	r0, [fp, #-28]	; 0xffffffe4
    7ccc:	bl	0 <__aeabi_read_tp>
    7cd0:	mov	r2, r0
    7cd4:	ldr	r3, [pc, #3216]	; 896c <grib_init+0x8358>
    7cd8:	ldr	r3, [r2, r3]
    7cdc:	add	r3, r3, #436	; 0x1b4
    7ce0:	ldr	r3, [r3]
    7ce4:	mov	r1, r3
    7ce8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7cec:	bl	0 <coda_type_record_field_set_type>
    7cf0:	bl	0 <__aeabi_read_tp>
    7cf4:	mov	r2, r0
    7cf8:	ldr	r3, [pc, #3180]	; 896c <grib_init+0x8358>
    7cfc:	ldr	r3, [r2, r3]
    7d00:	add	r3, r3, #540	; 0x21c
    7d04:	ldr	r3, [r3]
    7d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7d0c:	mov	r0, r3
    7d10:	bl	0 <coda_type_record_add_field>
    7d14:	ldr	r0, [pc, #3196]	; 8998 <grib_init+0x8384>
    7d18:	bl	0 <coda_type_record_field_new>
    7d1c:	str	r0, [fp, #-28]	; 0xffffffe4
    7d20:	bl	0 <__aeabi_read_tp>
    7d24:	mov	r2, r0
    7d28:	ldr	r3, [pc, #3132]	; 896c <grib_init+0x8358>
    7d2c:	ldr	r3, [r2, r3]
    7d30:	add	r3, r3, #444	; 0x1bc
    7d34:	ldr	r3, [r3]
    7d38:	mov	r1, r3
    7d3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7d40:	bl	0 <coda_type_record_field_set_type>
    7d44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7d48:	bl	0 <coda_type_record_field_set_optional>
    7d4c:	bl	0 <__aeabi_read_tp>
    7d50:	mov	r2, r0
    7d54:	ldr	r3, [pc, #3088]	; 896c <grib_init+0x8358>
    7d58:	ldr	r3, [r2, r3]
    7d5c:	add	r3, r3, #540	; 0x21c
    7d60:	ldr	r3, [r3]
    7d64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7d68:	mov	r0, r3
    7d6c:	bl	0 <coda_type_record_add_field>
    7d70:	bl	0 <__aeabi_read_tp>
    7d74:	mov	r2, r0
    7d78:	ldr	r3, [pc, #3052]	; 896c <grib_init+0x8358>
    7d7c:	ldr	r3, [r2, r3]
    7d80:	add	r4, r3, #544	; 0x220
    7d84:	mov	r0, #7
    7d88:	bl	0 <coda_type_record_new>
    7d8c:	mov	r3, r0
    7d90:	str	r3, [r4]
    7d94:	ldr	r0, [pc, #3072]	; 899c <grib_init+0x8388>
    7d98:	bl	0 <coda_type_record_field_new>
    7d9c:	str	r0, [fp, #-28]	; 0xffffffe4
    7da0:	bl	0 <__aeabi_read_tp>
    7da4:	mov	r2, r0
    7da8:	ldr	r3, [pc, #3004]	; 896c <grib_init+0x8358>
    7dac:	ldr	r3, [r2, r3]
    7db0:	add	r3, r3, #280	; 0x118
    7db4:	ldr	r3, [r3]
    7db8:	mov	r1, r3
    7dbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7dc0:	bl	0 <coda_type_record_field_set_type>
    7dc4:	bl	0 <__aeabi_read_tp>
    7dc8:	mov	r2, r0
    7dcc:	ldr	r3, [pc, #2968]	; 896c <grib_init+0x8358>
    7dd0:	ldr	r3, [r2, r3]
    7dd4:	add	r3, r3, #544	; 0x220
    7dd8:	ldr	r3, [r3]
    7ddc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7de0:	mov	r0, r3
    7de4:	bl	0 <coda_type_record_add_field>
    7de8:	ldr	r0, [pc, #2992]	; 89a0 <grib_init+0x838c>
    7dec:	bl	0 <coda_type_record_field_new>
    7df0:	str	r0, [fp, #-28]	; 0xffffffe4
    7df4:	bl	0 <__aeabi_read_tp>
    7df8:	mov	r2, r0
    7dfc:	ldr	r3, [pc, #2920]	; 896c <grib_init+0x8358>
    7e00:	ldr	r3, [r2, r3]
    7e04:	add	r3, r3, #460	; 0x1cc
    7e08:	ldr	r3, [r3]
    7e0c:	mov	r1, r3
    7e10:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7e14:	bl	0 <coda_type_record_field_set_type>
    7e18:	bl	0 <__aeabi_read_tp>
    7e1c:	mov	r2, r0
    7e20:	ldr	r3, [pc, #2884]	; 896c <grib_init+0x8358>
    7e24:	ldr	r3, [r2, r3]
    7e28:	add	r3, r3, #544	; 0x220
    7e2c:	ldr	r3, [r3]
    7e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7e34:	mov	r0, r3
    7e38:	bl	0 <coda_type_record_add_field>
    7e3c:	ldr	r0, [pc, #2912]	; 89a4 <grib_init+0x8390>
    7e40:	bl	0 <coda_type_record_field_new>
    7e44:	str	r0, [fp, #-28]	; 0xffffffe4
    7e48:	bl	0 <__aeabi_read_tp>
    7e4c:	mov	r2, r0
    7e50:	ldr	r3, [pc, #2836]	; 896c <grib_init+0x8358>
    7e54:	ldr	r3, [r2, r3]
    7e58:	add	r3, r3, #464	; 0x1d0
    7e5c:	ldr	r3, [r3]
    7e60:	mov	r1, r3
    7e64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7e68:	bl	0 <coda_type_record_field_set_type>
    7e6c:	bl	0 <__aeabi_read_tp>
    7e70:	mov	r2, r0
    7e74:	ldr	r3, [pc, #2800]	; 896c <grib_init+0x8358>
    7e78:	ldr	r3, [r2, r3]
    7e7c:	add	r3, r3, #544	; 0x220
    7e80:	ldr	r3, [r3]
    7e84:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7e88:	mov	r0, r3
    7e8c:	bl	0 <coda_type_record_add_field>
    7e90:	ldr	r0, [pc, #2832]	; 89a8 <grib_init+0x8394>
    7e94:	bl	0 <coda_type_record_field_new>
    7e98:	str	r0, [fp, #-28]	; 0xffffffe4
    7e9c:	bl	0 <__aeabi_read_tp>
    7ea0:	mov	r2, r0
    7ea4:	ldr	r3, [pc, #2752]	; 896c <grib_init+0x8358>
    7ea8:	ldr	r3, [r2, r3]
    7eac:	add	r3, r3, #468	; 0x1d4
    7eb0:	ldr	r3, [r3]
    7eb4:	mov	r1, r3
    7eb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ebc:	bl	0 <coda_type_record_field_set_type>
    7ec0:	bl	0 <__aeabi_read_tp>
    7ec4:	mov	r2, r0
    7ec8:	ldr	r3, [pc, #2716]	; 896c <grib_init+0x8358>
    7ecc:	ldr	r3, [r2, r3]
    7ed0:	add	r3, r3, #544	; 0x220
    7ed4:	ldr	r3, [r3]
    7ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7edc:	mov	r0, r3
    7ee0:	bl	0 <coda_type_record_add_field>
    7ee4:	ldr	r0, [pc, #2752]	; 89ac <grib_init+0x8398>
    7ee8:	bl	0 <coda_type_record_field_new>
    7eec:	str	r0, [fp, #-28]	; 0xffffffe4
    7ef0:	bl	0 <__aeabi_read_tp>
    7ef4:	mov	r2, r0
    7ef8:	ldr	r3, [pc, #2668]	; 896c <grib_init+0x8358>
    7efc:	ldr	r3, [r2, r3]
    7f00:	add	r3, r3, #472	; 0x1d8
    7f04:	ldr	r3, [r3]
    7f08:	mov	r1, r3
    7f0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7f10:	bl	0 <coda_type_record_field_set_type>
    7f14:	bl	0 <__aeabi_read_tp>
    7f18:	mov	r2, r0
    7f1c:	ldr	r3, [pc, #2632]	; 896c <grib_init+0x8358>
    7f20:	ldr	r3, [r2, r3]
    7f24:	add	r3, r3, #544	; 0x220
    7f28:	ldr	r3, [r3]
    7f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7f30:	mov	r0, r3
    7f34:	bl	0 <coda_type_record_add_field>
    7f38:	ldr	r0, [pc, #2672]	; 89b0 <grib_init+0x839c>
    7f3c:	bl	0 <coda_type_record_field_new>
    7f40:	str	r0, [fp, #-28]	; 0xffffffe4
    7f44:	bl	0 <__aeabi_read_tp>
    7f48:	mov	r2, r0
    7f4c:	ldr	r3, [pc, #2584]	; 896c <grib_init+0x8358>
    7f50:	ldr	r3, [r2, r3]
    7f54:	add	r3, r3, #476	; 0x1dc
    7f58:	ldr	r3, [r3]
    7f5c:	mov	r1, r3
    7f60:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7f64:	bl	0 <coda_type_record_field_set_type>
    7f68:	bl	0 <__aeabi_read_tp>
    7f6c:	mov	r2, r0
    7f70:	ldr	r3, [pc, #2548]	; 896c <grib_init+0x8358>
    7f74:	ldr	r3, [r2, r3]
    7f78:	add	r3, r3, #544	; 0x220
    7f7c:	ldr	r3, [r3]
    7f80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7f84:	mov	r0, r3
    7f88:	bl	0 <coda_type_record_add_field>
    7f8c:	ldr	r0, [pc, #2592]	; 89b4 <grib_init+0x83a0>
    7f90:	bl	0 <coda_type_record_field_new>
    7f94:	str	r0, [fp, #-28]	; 0xffffffe4
    7f98:	bl	0 <__aeabi_read_tp>
    7f9c:	mov	r2, r0
    7fa0:	ldr	r3, [pc, #2500]	; 896c <grib_init+0x8358>
    7fa4:	ldr	r3, [r2, r3]
    7fa8:	add	r3, r3, #480	; 0x1e0
    7fac:	ldr	r3, [r3]
    7fb0:	mov	r1, r3
    7fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7fb8:	bl	0 <coda_type_record_field_set_type>
    7fbc:	bl	0 <__aeabi_read_tp>
    7fc0:	mov	r2, r0
    7fc4:	ldr	r3, [pc, #2464]	; 896c <grib_init+0x8358>
    7fc8:	ldr	r3, [r2, r3]
    7fcc:	add	r3, r3, #544	; 0x220
    7fd0:	ldr	r3, [r3]
    7fd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7fd8:	mov	r0, r3
    7fdc:	bl	0 <coda_type_record_add_field>
    7fe0:	ldr	r0, [pc, #2512]	; 89b8 <grib_init+0x83a4>
    7fe4:	bl	0 <coda_type_record_field_new>
    7fe8:	str	r0, [fp, #-28]	; 0xffffffe4
    7fec:	bl	0 <__aeabi_read_tp>
    7ff0:	mov	r2, r0
    7ff4:	ldr	r3, [pc, #2416]	; 896c <grib_init+0x8358>
    7ff8:	ldr	r3, [r2, r3]
    7ffc:	add	r3, r3, #484	; 0x1e4
    8000:	ldr	r3, [r3]
    8004:	mov	r1, r3
    8008:	ldr	r0, [fp, #-28]	; 0xffffffe4
    800c:	bl	0 <coda_type_record_field_set_type>
    8010:	bl	0 <__aeabi_read_tp>
    8014:	mov	r2, r0
    8018:	ldr	r3, [pc, #2380]	; 896c <grib_init+0x8358>
    801c:	ldr	r3, [r2, r3]
    8020:	add	r3, r3, #544	; 0x220
    8024:	ldr	r3, [r3]
    8028:	ldr	r1, [fp, #-28]	; 0xffffffe4
    802c:	mov	r0, r3
    8030:	bl	0 <coda_type_record_add_field>
    8034:	ldr	r0, [pc, #2432]	; 89bc <grib_init+0x83a8>
    8038:	bl	0 <coda_type_record_field_new>
    803c:	str	r0, [fp, #-28]	; 0xffffffe4
    8040:	bl	0 <__aeabi_read_tp>
    8044:	mov	r2, r0
    8048:	ldr	r3, [pc, #2332]	; 896c <grib_init+0x8358>
    804c:	ldr	r3, [r2, r3]
    8050:	add	r3, r3, #488	; 0x1e8
    8054:	ldr	r3, [r3]
    8058:	mov	r1, r3
    805c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8060:	bl	0 <coda_type_record_field_set_type>
    8064:	bl	0 <__aeabi_read_tp>
    8068:	mov	r2, r0
    806c:	ldr	r3, [pc, #2296]	; 896c <grib_init+0x8358>
    8070:	ldr	r3, [r2, r3]
    8074:	add	r3, r3, #544	; 0x220
    8078:	ldr	r3, [r3]
    807c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8080:	mov	r0, r3
    8084:	bl	0 <coda_type_record_add_field>
    8088:	ldr	r0, [pc, #2352]	; 89c0 <grib_init+0x83ac>
    808c:	bl	0 <coda_type_record_field_new>
    8090:	str	r0, [fp, #-28]	; 0xffffffe4
    8094:	bl	0 <__aeabi_read_tp>
    8098:	mov	r2, r0
    809c:	ldr	r3, [pc, #2248]	; 896c <grib_init+0x8358>
    80a0:	ldr	r3, [r2, r3]
    80a4:	add	r3, r3, #492	; 0x1ec
    80a8:	ldr	r3, [r3]
    80ac:	mov	r1, r3
    80b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    80b4:	bl	0 <coda_type_record_field_set_type>
    80b8:	bl	0 <__aeabi_read_tp>
    80bc:	mov	r2, r0
    80c0:	ldr	r3, [pc, #2212]	; 896c <grib_init+0x8358>
    80c4:	ldr	r3, [r2, r3]
    80c8:	add	r3, r3, #544	; 0x220
    80cc:	ldr	r3, [r3]
    80d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    80d4:	mov	r0, r3
    80d8:	bl	0 <coda_type_record_add_field>
    80dc:	ldr	r0, [pc, #2272]	; 89c4 <grib_init+0x83b0>
    80e0:	bl	0 <coda_type_record_field_new>
    80e4:	str	r0, [fp, #-28]	; 0xffffffe4
    80e8:	bl	0 <__aeabi_read_tp>
    80ec:	mov	r2, r0
    80f0:	ldr	r3, [pc, #2164]	; 896c <grib_init+0x8358>
    80f4:	ldr	r3, [r2, r3]
    80f8:	add	r3, r3, #496	; 0x1f0
    80fc:	ldr	r3, [r3]
    8100:	mov	r1, r3
    8104:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8108:	bl	0 <coda_type_record_field_set_type>
    810c:	bl	0 <__aeabi_read_tp>
    8110:	mov	r2, r0
    8114:	ldr	r3, [pc, #2128]	; 896c <grib_init+0x8358>
    8118:	ldr	r3, [r2, r3]
    811c:	add	r3, r3, #544	; 0x220
    8120:	ldr	r3, [r3]
    8124:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8128:	mov	r0, r3
    812c:	bl	0 <coda_type_record_add_field>
    8130:	ldr	r0, [pc, #2192]	; 89c8 <grib_init+0x83b4>
    8134:	bl	0 <coda_type_record_field_new>
    8138:	str	r0, [fp, #-28]	; 0xffffffe4
    813c:	bl	0 <__aeabi_read_tp>
    8140:	mov	r2, r0
    8144:	ldr	r3, [pc, #2080]	; 896c <grib_init+0x8358>
    8148:	ldr	r3, [r2, r3]
    814c:	add	r3, r3, #500	; 0x1f4
    8150:	ldr	r3, [r3]
    8154:	mov	r1, r3
    8158:	ldr	r0, [fp, #-28]	; 0xffffffe4
    815c:	bl	0 <coda_type_record_field_set_type>
    8160:	bl	0 <__aeabi_read_tp>
    8164:	mov	r2, r0
    8168:	ldr	r3, [pc, #2044]	; 896c <grib_init+0x8358>
    816c:	ldr	r3, [r2, r3]
    8170:	add	r3, r3, #544	; 0x220
    8174:	ldr	r3, [r3]
    8178:	ldr	r1, [fp, #-28]	; 0xffffffe4
    817c:	mov	r0, r3
    8180:	bl	0 <coda_type_record_add_field>
    8184:	ldr	r0, [pc, #2112]	; 89cc <grib_init+0x83b8>
    8188:	bl	0 <coda_type_record_field_new>
    818c:	str	r0, [fp, #-28]	; 0xffffffe4
    8190:	bl	0 <__aeabi_read_tp>
    8194:	mov	r2, r0
    8198:	ldr	r3, [pc, #1996]	; 896c <grib_init+0x8358>
    819c:	ldr	r3, [r2, r3]
    81a0:	add	r3, r3, #504	; 0x1f8
    81a4:	ldr	r3, [r3]
    81a8:	mov	r1, r3
    81ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    81b0:	bl	0 <coda_type_record_field_set_type>
    81b4:	bl	0 <__aeabi_read_tp>
    81b8:	mov	r2, r0
    81bc:	ldr	r3, [pc, #1960]	; 896c <grib_init+0x8358>
    81c0:	ldr	r3, [r2, r3]
    81c4:	add	r3, r3, #544	; 0x220
    81c8:	ldr	r3, [r3]
    81cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    81d0:	mov	r0, r3
    81d4:	bl	0 <coda_type_record_add_field>
    81d8:	ldr	r0, [pc, #2032]	; 89d0 <grib_init+0x83bc>
    81dc:	bl	0 <coda_type_record_field_new>
    81e0:	str	r0, [fp, #-28]	; 0xffffffe4
    81e4:	bl	0 <__aeabi_read_tp>
    81e8:	mov	r2, r0
    81ec:	ldr	r3, [pc, #1912]	; 896c <grib_init+0x8358>
    81f0:	ldr	r3, [r2, r3]
    81f4:	add	r3, r3, #508	; 0x1fc
    81f8:	ldr	r3, [r3]
    81fc:	mov	r1, r3
    8200:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8204:	bl	0 <coda_type_record_field_set_type>
    8208:	bl	0 <__aeabi_read_tp>
    820c:	mov	r2, r0
    8210:	ldr	r3, [pc, #1876]	; 896c <grib_init+0x8358>
    8214:	ldr	r3, [r2, r3]
    8218:	add	r3, r3, #544	; 0x220
    821c:	ldr	r3, [r3]
    8220:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8224:	mov	r0, r3
    8228:	bl	0 <coda_type_record_add_field>
    822c:	ldr	r0, [pc, #1952]	; 89d4 <grib_init+0x83c0>
    8230:	bl	0 <coda_type_record_field_new>
    8234:	str	r0, [fp, #-28]	; 0xffffffe4
    8238:	bl	0 <__aeabi_read_tp>
    823c:	mov	r2, r0
    8240:	ldr	r3, [pc, #1828]	; 896c <grib_init+0x8358>
    8244:	ldr	r3, [r2, r3]
    8248:	add	r3, r3, #516	; 0x204
    824c:	ldr	r3, [r3]
    8250:	mov	r1, r3
    8254:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8258:	bl	0 <coda_type_record_field_set_type>
    825c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8260:	bl	0 <coda_type_record_field_set_optional>
    8264:	bl	0 <__aeabi_read_tp>
    8268:	mov	r2, r0
    826c:	ldr	r3, [pc, #1784]	; 896c <grib_init+0x8358>
    8270:	ldr	r3, [r2, r3]
    8274:	add	r3, r3, #544	; 0x220
    8278:	ldr	r3, [r3]
    827c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8280:	mov	r0, r3
    8284:	bl	0 <coda_type_record_add_field>
    8288:	ldr	r0, [pc, #1864]	; 89d8 <grib_init+0x83c4>
    828c:	bl	0 <coda_type_record_field_new>
    8290:	str	r0, [fp, #-28]	; 0xffffffe4
    8294:	bl	0 <__aeabi_read_tp>
    8298:	mov	r2, r0
    829c:	ldr	r3, [pc, #1736]	; 896c <grib_init+0x8358>
    82a0:	ldr	r3, [r2, r3]
    82a4:	add	r3, r3, #524	; 0x20c
    82a8:	ldr	r3, [r3]
    82ac:	mov	r1, r3
    82b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    82b4:	bl	0 <coda_type_record_field_set_type>
    82b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    82bc:	bl	0 <coda_type_record_field_set_hidden>
    82c0:	bl	0 <__aeabi_read_tp>
    82c4:	mov	r2, r0
    82c8:	ldr	r3, [pc, #1692]	; 896c <grib_init+0x8358>
    82cc:	ldr	r3, [r2, r3]
    82d0:	add	r3, r3, #544	; 0x220
    82d4:	ldr	r3, [r3]
    82d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    82dc:	mov	r0, r3
    82e0:	bl	0 <coda_type_record_add_field>
    82e4:	ldr	r0, [pc, #1776]	; 89dc <grib_init+0x83c8>
    82e8:	bl	0 <coda_type_record_field_new>
    82ec:	str	r0, [fp, #-28]	; 0xffffffe4
    82f0:	bl	0 <__aeabi_read_tp>
    82f4:	mov	r2, r0
    82f8:	ldr	r3, [pc, #1644]	; 896c <grib_init+0x8358>
    82fc:	ldr	r3, [r2, r3]
    8300:	add	r3, r3, #320	; 0x140
    8304:	ldr	r3, [r3]
    8308:	mov	r1, r3
    830c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8310:	bl	0 <coda_type_record_field_set_type>
    8314:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8318:	bl	0 <coda_type_record_field_set_hidden>
    831c:	bl	0 <__aeabi_read_tp>
    8320:	mov	r2, r0
    8324:	ldr	r3, [pc, #1600]	; 896c <grib_init+0x8358>
    8328:	ldr	r3, [r2, r3]
    832c:	add	r3, r3, #544	; 0x220
    8330:	ldr	r3, [r3]
    8334:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8338:	mov	r0, r3
    833c:	bl	0 <coda_type_record_add_field>
    8340:	ldr	r0, [pc, #1688]	; 89e0 <grib_init+0x83cc>
    8344:	bl	0 <coda_type_record_field_new>
    8348:	str	r0, [fp, #-28]	; 0xffffffe4
    834c:	bl	0 <__aeabi_read_tp>
    8350:	mov	r2, r0
    8354:	ldr	r3, [pc, #1552]	; 896c <grib_init+0x8358>
    8358:	ldr	r3, [r2, r3]
    835c:	add	r3, r3, #528	; 0x210
    8360:	ldr	r3, [r3]
    8364:	mov	r1, r3
    8368:	ldr	r0, [fp, #-28]	; 0xffffffe4
    836c:	bl	0 <coda_type_record_field_set_type>
    8370:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8374:	bl	0 <coda_type_record_field_set_hidden>
    8378:	bl	0 <__aeabi_read_tp>
    837c:	mov	r2, r0
    8380:	ldr	r3, [pc, #1508]	; 896c <grib_init+0x8358>
    8384:	ldr	r3, [r2, r3]
    8388:	add	r3, r3, #544	; 0x220
    838c:	ldr	r3, [r3]
    8390:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8394:	mov	r0, r3
    8398:	bl	0 <coda_type_record_add_field>
    839c:	ldr	r0, [pc, #1600]	; 89e4 <grib_init+0x83d0>
    83a0:	bl	0 <coda_type_record_field_new>
    83a4:	str	r0, [fp, #-28]	; 0xffffffe4
    83a8:	bl	0 <__aeabi_read_tp>
    83ac:	mov	r2, r0
    83b0:	ldr	r3, [pc, #1460]	; 896c <grib_init+0x8358>
    83b4:	ldr	r3, [r2, r3]
    83b8:	add	r3, r3, #532	; 0x214
    83bc:	ldr	r3, [r3]
    83c0:	mov	r1, r3
    83c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    83c8:	bl	0 <coda_type_record_field_set_type>
    83cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    83d0:	bl	0 <coda_type_record_field_set_hidden>
    83d4:	bl	0 <__aeabi_read_tp>
    83d8:	mov	r2, r0
    83dc:	ldr	r3, [pc, #1416]	; 896c <grib_init+0x8358>
    83e0:	ldr	r3, [r2, r3]
    83e4:	add	r3, r3, #544	; 0x220
    83e8:	ldr	r3, [r3]
    83ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    83f0:	mov	r0, r3
    83f4:	bl	0 <coda_type_record_add_field>
    83f8:	ldr	r0, [pc, #1512]	; 89e8 <grib_init+0x83d4>
    83fc:	bl	0 <coda_type_record_field_new>
    8400:	str	r0, [fp, #-28]	; 0xffffffe4
    8404:	bl	0 <__aeabi_read_tp>
    8408:	mov	r2, r0
    840c:	ldr	r3, [pc, #1368]	; 896c <grib_init+0x8358>
    8410:	ldr	r3, [r2, r3]
    8414:	add	r3, r3, #536	; 0x218
    8418:	ldr	r3, [r3]
    841c:	mov	r1, r3
    8420:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8424:	bl	0 <coda_type_record_field_set_type>
    8428:	bl	0 <__aeabi_read_tp>
    842c:	mov	r2, r0
    8430:	ldr	r3, [pc, #1332]	; 896c <grib_init+0x8358>
    8434:	ldr	r3, [r2, r3]
    8438:	add	r3, r3, #544	; 0x220
    843c:	ldr	r3, [r3]
    8440:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8444:	mov	r0, r3
    8448:	bl	0 <coda_type_record_add_field>
    844c:	bl	0 <__aeabi_read_tp>
    8450:	mov	r2, r0
    8454:	ldr	r3, [pc, #1296]	; 896c <grib_init+0x8358>
    8458:	ldr	r3, [r2, r3]
    845c:	add	r4, r3, #548	; 0x224
    8460:	mov	r0, #7
    8464:	bl	0 <coda_type_array_new>
    8468:	mov	r3, r0
    846c:	str	r3, [r4]
    8470:	bl	0 <__aeabi_read_tp>
    8474:	mov	r2, r0
    8478:	ldr	r3, [pc, #1260]	; 896c <grib_init+0x8358>
    847c:	ldr	r3, [r2, r3]
    8480:	add	r3, r3, #548	; 0x224
    8484:	ldr	r2, [r3]
    8488:	bl	0 <__aeabi_read_tp>
    848c:	mov	r1, r0
    8490:	ldr	r3, [pc, #1236]	; 896c <grib_init+0x8358>
    8494:	ldr	r3, [r1, r3]
    8498:	add	r3, r3, #348	; 0x15c
    849c:	ldr	r3, [r3]
    84a0:	mov	r1, r3
    84a4:	mov	r0, r2
    84a8:	bl	0 <coda_type_array_set_base_type>
    84ac:	bl	0 <__aeabi_read_tp>
    84b0:	mov	r2, r0
    84b4:	ldr	r3, [pc, #1200]	; 896c <grib_init+0x8358>
    84b8:	ldr	r3, [r2, r3]
    84bc:	add	r3, r3, #548	; 0x224
    84c0:	ldr	r3, [r3]
    84c4:	mov	r1, #0
    84c8:	mov	r0, r3
    84cc:	bl	0 <coda_type_array_add_variable_dimension>
    84d0:	bl	0 <__aeabi_read_tp>
    84d4:	mov	r2, r0
    84d8:	ldr	r3, [pc, #1164]	; 896c <grib_init+0x8358>
    84dc:	ldr	r3, [r2, r3]
    84e0:	add	r4, r3, #552	; 0x228
    84e4:	mov	r0, #7
    84e8:	bl	0 <coda_type_array_new>
    84ec:	mov	r3, r0
    84f0:	str	r3, [r4]
    84f4:	bl	0 <__aeabi_read_tp>
    84f8:	mov	r2, r0
    84fc:	ldr	r3, [pc, #1128]	; 896c <grib_init+0x8358>
    8500:	ldr	r3, [r2, r3]
    8504:	add	r3, r3, #552	; 0x228
    8508:	ldr	r2, [r3]
    850c:	bl	0 <__aeabi_read_tp>
    8510:	mov	r1, r0
    8514:	ldr	r3, [pc, #1104]	; 896c <grib_init+0x8358>
    8518:	ldr	r3, [r1, r3]
    851c:	add	r3, r3, #540	; 0x21c
    8520:	ldr	r3, [r3]
    8524:	mov	r1, r3
    8528:	mov	r0, r2
    852c:	bl	0 <coda_type_array_set_base_type>
    8530:	bl	0 <__aeabi_read_tp>
    8534:	mov	r2, r0
    8538:	ldr	r3, [pc, #1068]	; 896c <grib_init+0x8358>
    853c:	ldr	r3, [r2, r3]
    8540:	add	r3, r3, #552	; 0x228
    8544:	ldr	r3, [r3]
    8548:	mov	r1, #0
    854c:	mov	r0, r3
    8550:	bl	0 <coda_type_array_add_variable_dimension>
    8554:	bl	0 <__aeabi_read_tp>
    8558:	mov	r2, r0
    855c:	ldr	r3, [pc, #1032]	; 896c <grib_init+0x8358>
    8560:	ldr	r3, [r2, r3]
    8564:	add	r4, r3, #556	; 0x22c
    8568:	mov	r0, #7
    856c:	bl	0 <coda_type_array_new>
    8570:	mov	r3, r0
    8574:	str	r3, [r4]
    8578:	bl	0 <__aeabi_read_tp>
    857c:	mov	r2, r0
    8580:	ldr	r3, [pc, #996]	; 896c <grib_init+0x8358>
    8584:	ldr	r3, [r2, r3]
    8588:	add	r3, r3, #556	; 0x22c
    858c:	ldr	r2, [r3]
    8590:	bl	0 <__aeabi_read_tp>
    8594:	mov	r1, r0
    8598:	ldr	r3, [pc, #972]	; 896c <grib_init+0x8358>
    859c:	ldr	r3, [r1, r3]
    85a0:	add	r3, r3, #544	; 0x220
    85a4:	ldr	r3, [r3]
    85a8:	mov	r1, r3
    85ac:	mov	r0, r2
    85b0:	bl	0 <coda_type_array_set_base_type>
    85b4:	bl	0 <__aeabi_read_tp>
    85b8:	mov	r2, r0
    85bc:	ldr	r3, [pc, #936]	; 896c <grib_init+0x8358>
    85c0:	ldr	r3, [r2, r3]
    85c4:	add	r3, r3, #556	; 0x22c
    85c8:	ldr	r3, [r3]
    85cc:	mov	r1, #0
    85d0:	mov	r0, r3
    85d4:	bl	0 <coda_type_array_add_variable_dimension>
    85d8:	bl	0 <__aeabi_read_tp>
    85dc:	mov	r2, r0
    85e0:	ldr	r3, [pc, #900]	; 896c <grib_init+0x8358>
    85e4:	ldr	r3, [r2, r3]
    85e8:	add	r4, r3, #560	; 0x230
    85ec:	mov	r0, #7
    85f0:	bl	0 <coda_type_record_new>
    85f4:	mov	r3, r0
    85f8:	str	r3, [r4]
    85fc:	ldr	r0, [pc, #1000]	; 89ec <grib_init+0x83d8>
    8600:	bl	0 <coda_type_record_field_new>
    8604:	str	r0, [fp, #-28]	; 0xffffffe4
    8608:	bl	0 <__aeabi_read_tp>
    860c:	mov	r2, r0
    8610:	ldr	r3, [pc, #852]	; 896c <grib_init+0x8358>
    8614:	ldr	r3, [r2, r3]
    8618:	add	r3, r3, #284	; 0x11c
    861c:	ldr	r3, [r3]
    8620:	mov	r1, r3
    8624:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8628:	bl	0 <coda_type_record_field_set_type>
    862c:	bl	0 <__aeabi_read_tp>
    8630:	mov	r2, r0
    8634:	ldr	r3, [pc, #816]	; 896c <grib_init+0x8358>
    8638:	ldr	r3, [r2, r3]
    863c:	add	r3, r3, #560	; 0x230
    8640:	ldr	r3, [r3]
    8644:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8648:	mov	r0, r3
    864c:	bl	0 <coda_type_record_add_field>
    8650:	ldr	r0, [pc, #920]	; 89f0 <grib_init+0x83dc>
    8654:	bl	0 <coda_type_record_field_new>
    8658:	str	r0, [fp, #-28]	; 0xffffffe4
    865c:	bl	0 <__aeabi_read_tp>
    8660:	mov	r2, r0
    8664:	ldr	r3, [pc, #768]	; 896c <grib_init+0x8358>
    8668:	ldr	r3, [r2, r3]
    866c:	add	r3, r3, #324	; 0x144
    8670:	ldr	r3, [r3]
    8674:	mov	r1, r3
    8678:	ldr	r0, [fp, #-28]	; 0xffffffe4
    867c:	bl	0 <coda_type_record_field_set_type>
    8680:	bl	0 <__aeabi_read_tp>
    8684:	mov	r2, r0
    8688:	ldr	r3, [pc, #732]	; 896c <grib_init+0x8358>
    868c:	ldr	r3, [r2, r3]
    8690:	add	r3, r3, #560	; 0x230
    8694:	ldr	r3, [r3]
    8698:	ldr	r1, [fp, #-28]	; 0xffffffe4
    869c:	mov	r0, r3
    86a0:	bl	0 <coda_type_record_add_field>
    86a4:	ldr	r0, [pc, #840]	; 89f4 <grib_init+0x83e0>
    86a8:	bl	0 <coda_type_record_field_new>
    86ac:	str	r0, [fp, #-28]	; 0xffffffe4
    86b0:	bl	0 <__aeabi_read_tp>
    86b4:	mov	r2, r0
    86b8:	ldr	r3, [pc, #684]	; 896c <grib_init+0x8358>
    86bc:	ldr	r3, [r2, r3]
    86c0:	add	r3, r3, #288	; 0x120
    86c4:	ldr	r3, [r3]
    86c8:	mov	r1, r3
    86cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    86d0:	bl	0 <coda_type_record_field_set_type>
    86d4:	bl	0 <__aeabi_read_tp>
    86d8:	mov	r2, r0
    86dc:	ldr	r3, [pc, #648]	; 896c <grib_init+0x8358>
    86e0:	ldr	r3, [r2, r3]
    86e4:	add	r3, r3, #560	; 0x230
    86e8:	ldr	r3, [r3]
    86ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    86f0:	mov	r0, r3
    86f4:	bl	0 <coda_type_record_add_field>
    86f8:	ldr	r0, [pc, #760]	; 89f8 <grib_init+0x83e4>
    86fc:	bl	0 <coda_type_record_field_new>
    8700:	str	r0, [fp, #-28]	; 0xffffffe4
    8704:	bl	0 <__aeabi_read_tp>
    8708:	mov	r2, r0
    870c:	ldr	r3, [pc, #600]	; 896c <grib_init+0x8358>
    8710:	ldr	r3, [r2, r3]
    8714:	add	r3, r3, #316	; 0x13c
    8718:	ldr	r3, [r3]
    871c:	mov	r1, r3
    8720:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8724:	bl	0 <coda_type_record_field_set_type>
    8728:	bl	0 <__aeabi_read_tp>
    872c:	mov	r2, r0
    8730:	ldr	r3, [pc, #564]	; 896c <grib_init+0x8358>
    8734:	ldr	r3, [r2, r3]
    8738:	add	r3, r3, #560	; 0x230
    873c:	ldr	r3, [r3]
    8740:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8744:	mov	r0, r3
    8748:	bl	0 <coda_type_record_add_field>
    874c:	ldr	r0, [pc, #680]	; 89fc <grib_init+0x83e8>
    8750:	bl	0 <coda_type_record_field_new>
    8754:	str	r0, [fp, #-28]	; 0xffffffe4
    8758:	bl	0 <__aeabi_read_tp>
    875c:	mov	r2, r0
    8760:	ldr	r3, [pc, #516]	; 896c <grib_init+0x8358>
    8764:	ldr	r3, [r2, r3]
    8768:	add	r3, r3, #328	; 0x148
    876c:	ldr	r3, [r3]
    8770:	mov	r1, r3
    8774:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8778:	bl	0 <coda_type_record_field_set_type>
    877c:	bl	0 <__aeabi_read_tp>
    8780:	mov	r2, r0
    8784:	ldr	r3, [pc, #480]	; 896c <grib_init+0x8358>
    8788:	ldr	r3, [r2, r3]
    878c:	add	r3, r3, #560	; 0x230
    8790:	ldr	r3, [r3]
    8794:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8798:	mov	r0, r3
    879c:	bl	0 <coda_type_record_add_field>
    87a0:	ldr	r0, [pc, #600]	; 8a00 <grib_init+0x83ec>
    87a4:	bl	0 <coda_type_record_field_new>
    87a8:	str	r0, [fp, #-28]	; 0xffffffe4
    87ac:	bl	0 <__aeabi_read_tp>
    87b0:	mov	r2, r0
    87b4:	ldr	r3, [pc, #432]	; 896c <grib_init+0x8358>
    87b8:	ldr	r3, [r2, r3]
    87bc:	add	r3, r3, #332	; 0x14c
    87c0:	ldr	r3, [r3]
    87c4:	mov	r1, r3
    87c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    87cc:	bl	0 <coda_type_record_field_set_type>
    87d0:	bl	0 <__aeabi_read_tp>
    87d4:	mov	r2, r0
    87d8:	ldr	r3, [pc, #396]	; 896c <grib_init+0x8358>
    87dc:	ldr	r3, [r2, r3]
    87e0:	add	r3, r3, #560	; 0x230
    87e4:	ldr	r3, [r3]
    87e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    87ec:	mov	r0, r3
    87f0:	bl	0 <coda_type_record_add_field>
    87f4:	ldr	r0, [pc, #520]	; 8a04 <grib_init+0x83f0>
    87f8:	bl	0 <coda_type_record_field_new>
    87fc:	str	r0, [fp, #-28]	; 0xffffffe4
    8800:	bl	0 <__aeabi_read_tp>
    8804:	mov	r2, r0
    8808:	ldr	r3, [pc, #348]	; 896c <grib_init+0x8358>
    880c:	ldr	r3, [r2, r3]
    8810:	add	r3, r3, #336	; 0x150
    8814:	ldr	r3, [r3]
    8818:	mov	r1, r3
    881c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8820:	bl	0 <coda_type_record_field_set_type>
    8824:	bl	0 <__aeabi_read_tp>
    8828:	mov	r2, r0
    882c:	ldr	r3, [pc, #312]	; 896c <grib_init+0x8358>
    8830:	ldr	r3, [r2, r3]
    8834:	add	r3, r3, #560	; 0x230
    8838:	ldr	r3, [r3]
    883c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8840:	mov	r0, r3
    8844:	bl	0 <coda_type_record_add_field>
    8848:	ldr	r0, [pc, #440]	; 8a08 <grib_init+0x83f4>
    884c:	bl	0 <coda_type_record_field_new>
    8850:	str	r0, [fp, #-28]	; 0xffffffe4
    8854:	bl	0 <__aeabi_read_tp>
    8858:	mov	r2, r0
    885c:	ldr	r3, [pc, #264]	; 896c <grib_init+0x8358>
    8860:	ldr	r3, [r2, r3]
    8864:	add	r3, r3, #292	; 0x124
    8868:	ldr	r3, [r3]
    886c:	mov	r1, r3
    8870:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8874:	bl	0 <coda_type_record_field_set_type>
    8878:	bl	0 <__aeabi_read_tp>
    887c:	mov	r2, r0
    8880:	ldr	r3, [pc, #228]	; 896c <grib_init+0x8358>
    8884:	ldr	r3, [r2, r3]
    8888:	add	r3, r3, #560	; 0x230
    888c:	ldr	r3, [r3]
    8890:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8894:	mov	r0, r3
    8898:	bl	0 <coda_type_record_add_field>
    889c:	ldr	r0, [pc, #360]	; 8a0c <grib_init+0x83f8>
    88a0:	bl	0 <coda_type_record_field_new>
    88a4:	str	r0, [fp, #-28]	; 0xffffffe4
    88a8:	bl	0 <__aeabi_read_tp>
    88ac:	mov	r2, r0
    88b0:	ldr	r3, [pc, #180]	; 896c <grib_init+0x8358>
    88b4:	ldr	r3, [r2, r3]
    88b8:	add	r3, r3, #296	; 0x128
    88bc:	ldr	r3, [r3]
    88c0:	mov	r1, r3
    88c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    88c8:	bl	0 <coda_type_record_field_set_type>
    88cc:	bl	0 <__aeabi_read_tp>
    88d0:	mov	r2, r0
    88d4:	ldr	r3, [pc, #144]	; 896c <grib_init+0x8358>
    88d8:	ldr	r3, [r2, r3]
    88dc:	add	r3, r3, #560	; 0x230
    88e0:	ldr	r3, [r3]
    88e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    88e8:	mov	r0, r3
    88ec:	bl	0 <coda_type_record_add_field>
    88f0:	ldr	r0, [pc, #280]	; 8a10 <grib_init+0x83fc>
    88f4:	bl	0 <coda_type_record_field_new>
    88f8:	str	r0, [fp, #-28]	; 0xffffffe4
    88fc:	bl	0 <__aeabi_read_tp>
    8900:	mov	r2, r0
    8904:	ldr	r3, [pc, #96]	; 896c <grib_init+0x8358>
    8908:	ldr	r3, [r2, r3]
    890c:	add	r3, r3, #300	; 0x12c
    8910:	ldr	r3, [r3]
    8914:	mov	r1, r3
    8918:	ldr	r0, [fp, #-28]	; 0xffffffe4
    891c:	bl	0 <coda_type_record_field_set_type>
    8920:	bl	0 <__aeabi_read_tp>
    8924:	mov	r2, r0
    8928:	ldr	r3, [pc, #60]	; 896c <grib_init+0x8358>
    892c:	ldr	r3, [r2, r3]
    8930:	add	r3, r3, #560	; 0x230
    8934:	ldr	r3, [r3]
    8938:	ldr	r1, [fp, #-28]	; 0xffffffe4
    893c:	mov	r0, r3
    8940:	bl	0 <coda_type_record_add_field>
    8944:	ldr	r0, [pc, #200]	; 8a14 <grib_init+0x8400>
    8948:	bl	0 <coda_type_record_field_new>
    894c:	str	r0, [fp, #-28]	; 0xffffffe4
    8950:	bl	0 <__aeabi_read_tp>
    8954:	mov	r2, r0
    8958:	ldr	r3, [pc, #12]	; 896c <grib_init+0x8358>
    895c:	ldr	r3, [r2, r3]
    8960:	add	r3, r3, #304	; 0x130
    8964:	b	8a40 <grib_init+0x842c>
    8968:	.word	0x000012b4
    896c:	.word	0x00000000
    8970:	.word	0x000012dc
    8974:	.word	0x00000c14
    8978:	.word	0x00000c30
    897c:	.word	0x00000c4c
    8980:	.word	0x00000c68
    8984:	.word	0x00000c80
    8988:	.word	0x00000c9c
    898c:	.word	0x00000cb0
    8990:	.word	0x00000cc4
    8994:	.word	0x00000cc8
    8998:	.word	0x00000cec
    899c:	.word	0x000012f8
    89a0:	.word	0x00001308
    89a4:	.word	0x0000131c
    89a8:	.word	0x0000132c
    89ac:	.word	0x00001344
    89b0:	.word	0x00000d60
    89b4:	.word	0x00001358
    89b8:	.word	0x00001370
    89bc:	.word	0x00001388
    89c0:	.word	0x000013a4
    89c4:	.word	0x000013b4
    89c8:	.word	0x000013cc
    89cc:	.word	0x000013e0
    89d0:	.word	0x000013fc
    89d4:	.word	0x00000cd8
    89d8:	.word	0x00000cfc
    89dc:	.word	0x00000e8c
    89e0:	.word	0x00000d0c
    89e4:	.word	0x00000d20
    89e8:	.word	0x00000d30
    89ec:	.word	0x00000d38
    89f0:	.word	0x00001410
    89f4:	.word	0x00000d58
    89f8:	.word	0x00000e80
    89fc:	.word	0x0000141c
    8a00:	.word	0x00001430
    8a04:	.word	0x00001444
    8a08:	.word	0x00001460
    8a0c:	.word	0x00000dd4
    8a10:	.word	0x00000ddc
    8a14:	.word	0x00000de0
    8a18:	.word	0x00000de8
    8a1c:	.word	0x00001468
    8a20:	.word	0x00001470
    8a24:	.word	0x00001490
    8a28:	.word	0x00000ea0
    8a2c:	.word	0x00000ea8
    8a30:	.word	0x00000eb0
    8a34:	.word	0x000014a4
    8a38:	.word	0x000014ac
    8a3c:	.word	0x00000000
    8a40:	ldr	r3, [r3]
    8a44:	mov	r1, r3
    8a48:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8a4c:	bl	0 <coda_type_record_field_set_type>
    8a50:	bl	0 <__aeabi_read_tp>
    8a54:	mov	r2, r0
    8a58:	ldr	r3, [pc, #-36]	; 8a3c <grib_init+0x8428>
    8a5c:	ldr	r3, [r2, r3]
    8a60:	add	r3, r3, #560	; 0x230
    8a64:	ldr	r3, [r3]
    8a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8a6c:	mov	r0, r3
    8a70:	bl	0 <coda_type_record_add_field>
    8a74:	ldr	r0, [pc, #-100]	; 8a18 <grib_init+0x8404>
    8a78:	bl	0 <coda_type_record_field_new>
    8a7c:	str	r0, [fp, #-28]	; 0xffffffe4
    8a80:	bl	0 <__aeabi_read_tp>
    8a84:	mov	r2, r0
    8a88:	ldr	r3, [pc, #-84]	; 8a3c <grib_init+0x8428>
    8a8c:	ldr	r3, [r2, r3]
    8a90:	add	r3, r3, #308	; 0x134
    8a94:	ldr	r3, [r3]
    8a98:	mov	r1, r3
    8a9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8aa0:	bl	0 <coda_type_record_field_set_type>
    8aa4:	bl	0 <__aeabi_read_tp>
    8aa8:	mov	r2, r0
    8aac:	ldr	r3, [pc, #-120]	; 8a3c <grib_init+0x8428>
    8ab0:	ldr	r3, [r2, r3]
    8ab4:	add	r3, r3, #560	; 0x230
    8ab8:	ldr	r3, [r3]
    8abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8ac0:	mov	r0, r3
    8ac4:	bl	0 <coda_type_record_add_field>
    8ac8:	ldr	r0, [pc, #-180]	; 8a1c <grib_init+0x8408>
    8acc:	bl	0 <coda_type_record_field_new>
    8ad0:	str	r0, [fp, #-28]	; 0xffffffe4
    8ad4:	bl	0 <__aeabi_read_tp>
    8ad8:	mov	r2, r0
    8adc:	ldr	r3, [pc, #-168]	; 8a3c <grib_init+0x8428>
    8ae0:	ldr	r3, [r2, r3]
    8ae4:	add	r3, r3, #312	; 0x138
    8ae8:	ldr	r3, [r3]
    8aec:	mov	r1, r3
    8af0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8af4:	bl	0 <coda_type_record_field_set_type>
    8af8:	bl	0 <__aeabi_read_tp>
    8afc:	mov	r2, r0
    8b00:	ldr	r3, [pc, #-204]	; 8a3c <grib_init+0x8428>
    8b04:	ldr	r3, [r2, r3]
    8b08:	add	r3, r3, #560	; 0x230
    8b0c:	ldr	r3, [r3]
    8b10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8b14:	mov	r0, r3
    8b18:	bl	0 <coda_type_record_add_field>
    8b1c:	ldr	r0, [pc, #-260]	; 8a20 <grib_init+0x840c>
    8b20:	bl	0 <coda_type_record_field_new>
    8b24:	str	r0, [fp, #-28]	; 0xffffffe4
    8b28:	bl	0 <__aeabi_read_tp>
    8b2c:	mov	r2, r0
    8b30:	ldr	r3, [pc, #-252]	; 8a3c <grib_init+0x8428>
    8b34:	ldr	r3, [r2, r3]
    8b38:	add	r3, r3, #340	; 0x154
    8b3c:	ldr	r3, [r3]
    8b40:	mov	r1, r3
    8b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8b48:	bl	0 <coda_type_record_field_set_type>
    8b4c:	bl	0 <__aeabi_read_tp>
    8b50:	mov	r2, r0
    8b54:	ldr	r3, [pc, #-288]	; 8a3c <grib_init+0x8428>
    8b58:	ldr	r3, [r2, r3]
    8b5c:	add	r3, r3, #560	; 0x230
    8b60:	ldr	r3, [r3]
    8b64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8b68:	mov	r0, r3
    8b6c:	bl	0 <coda_type_record_add_field>
    8b70:	ldr	r0, [pc, #-340]	; 8a24 <grib_init+0x8410>
    8b74:	bl	0 <coda_type_record_field_new>
    8b78:	str	r0, [fp, #-28]	; 0xffffffe4
    8b7c:	bl	0 <__aeabi_read_tp>
    8b80:	mov	r2, r0
    8b84:	ldr	r3, [pc, #-336]	; 8a3c <grib_init+0x8428>
    8b88:	ldr	r3, [r2, r3]
    8b8c:	add	r3, r3, #344	; 0x158
    8b90:	ldr	r3, [r3]
    8b94:	mov	r1, r3
    8b98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8b9c:	bl	0 <coda_type_record_field_set_type>
    8ba0:	bl	0 <__aeabi_read_tp>
    8ba4:	mov	r2, r0
    8ba8:	ldr	r3, [pc, #-372]	; 8a3c <grib_init+0x8428>
    8bac:	ldr	r3, [r2, r3]
    8bb0:	add	r3, r3, #560	; 0x230
    8bb4:	ldr	r3, [r3]
    8bb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8bbc:	mov	r0, r3
    8bc0:	bl	0 <coda_type_record_add_field>
    8bc4:	ldr	r0, [pc, #-420]	; 8a28 <grib_init+0x8414>
    8bc8:	bl	0 <coda_type_record_field_new>
    8bcc:	str	r0, [fp, #-28]	; 0xffffffe4
    8bd0:	bl	0 <__aeabi_read_tp>
    8bd4:	mov	r2, r0
    8bd8:	ldr	r3, [pc, #-420]	; 8a3c <grib_init+0x8428>
    8bdc:	ldr	r3, [r2, r3]
    8be0:	add	r3, r3, #548	; 0x224
    8be4:	ldr	r3, [r3]
    8be8:	mov	r1, r3
    8bec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8bf0:	bl	0 <coda_type_record_field_set_type>
    8bf4:	bl	0 <__aeabi_read_tp>
    8bf8:	mov	r2, r0
    8bfc:	ldr	r3, [pc, #-456]	; 8a3c <grib_init+0x8428>
    8c00:	ldr	r3, [r2, r3]
    8c04:	add	r3, r3, #560	; 0x230
    8c08:	ldr	r3, [r3]
    8c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8c10:	mov	r0, r3
    8c14:	bl	0 <coda_type_record_add_field>
    8c18:	ldr	r0, [pc, #-500]	; 8a2c <grib_init+0x8418>
    8c1c:	bl	0 <coda_type_record_field_new>
    8c20:	str	r0, [fp, #-28]	; 0xffffffe4
    8c24:	bl	0 <__aeabi_read_tp>
    8c28:	mov	r2, r0
    8c2c:	ldr	r3, [pc, #-504]	; 8a3c <grib_init+0x8428>
    8c30:	ldr	r3, [r2, r3]
    8c34:	add	r3, r3, #552	; 0x228
    8c38:	ldr	r3, [r3]
    8c3c:	mov	r1, r3
    8c40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8c44:	bl	0 <coda_type_record_field_set_type>
    8c48:	bl	0 <__aeabi_read_tp>
    8c4c:	mov	r2, r0
    8c50:	ldr	r3, [pc, #-540]	; 8a3c <grib_init+0x8428>
    8c54:	ldr	r3, [r2, r3]
    8c58:	add	r3, r3, #560	; 0x230
    8c5c:	ldr	r3, [r3]
    8c60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8c64:	mov	r0, r3
    8c68:	bl	0 <coda_type_record_add_field>
    8c6c:	ldr	r0, [pc, #-580]	; 8a30 <grib_init+0x841c>
    8c70:	bl	0 <coda_type_record_field_new>
    8c74:	str	r0, [fp, #-28]	; 0xffffffe4
    8c78:	bl	0 <__aeabi_read_tp>
    8c7c:	mov	r2, r0
    8c80:	ldr	r3, [pc, #-588]	; 8a3c <grib_init+0x8428>
    8c84:	ldr	r3, [r2, r3]
    8c88:	add	r3, r3, #556	; 0x22c
    8c8c:	ldr	r3, [r3]
    8c90:	mov	r1, r3
    8c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8c98:	bl	0 <coda_type_record_field_set_type>
    8c9c:	bl	0 <__aeabi_read_tp>
    8ca0:	mov	r2, r0
    8ca4:	ldr	r3, [pc, #-624]	; 8a3c <grib_init+0x8428>
    8ca8:	ldr	r3, [r2, r3]
    8cac:	add	r3, r3, #560	; 0x230
    8cb0:	ldr	r3, [r3]
    8cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8cb8:	mov	r0, r3
    8cbc:	bl	0 <coda_type_record_add_field>
    8cc0:	bl	0 <__aeabi_read_tp>
    8cc4:	mov	r2, r0
    8cc8:	ldr	r3, [pc, #-660]	; 8a3c <grib_init+0x8428>
    8ccc:	ldr	r3, [r2, r3]
    8cd0:	add	r4, r3, #564	; 0x234
    8cd4:	mov	r0, #7
    8cd8:	bl	0 <coda_type_union_new>
    8cdc:	mov	r3, r0
    8ce0:	str	r3, [r4]
    8ce4:	ldr	r0, [pc, #-696]	; 8a34 <grib_init+0x8420>
    8ce8:	bl	0 <coda_type_record_field_new>
    8cec:	str	r0, [fp, #-28]	; 0xffffffe4
    8cf0:	bl	0 <__aeabi_read_tp>
    8cf4:	mov	r2, r0
    8cf8:	ldr	r3, [pc, #-708]	; 8a3c <grib_init+0x8428>
    8cfc:	ldr	r3, [r2, r3]
    8d00:	add	r3, r3, #272	; 0x110
    8d04:	ldr	r3, [r3]
    8d08:	mov	r1, r3
    8d0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d10:	bl	0 <coda_type_record_field_set_type>
    8d14:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d18:	bl	0 <coda_type_record_field_set_optional>
    8d1c:	bl	0 <__aeabi_read_tp>
    8d20:	mov	r2, r0
    8d24:	ldr	r3, [pc, #-752]	; 8a3c <grib_init+0x8428>
    8d28:	ldr	r3, [r2, r3]
    8d2c:	add	r3, r3, #564	; 0x234
    8d30:	ldr	r3, [r3]
    8d34:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8d38:	mov	r0, r3
    8d3c:	bl	0 <coda_type_record_add_field>
    8d40:	ldr	r0, [pc, #-784]	; 8a38 <grib_init+0x8424>
    8d44:	bl	0 <coda_type_record_field_new>
    8d48:	str	r0, [fp, #-28]	; 0xffffffe4
    8d4c:	bl	0 <__aeabi_read_tp>
    8d50:	mov	r2, r0
    8d54:	ldr	r3, [pc, #-800]	; 8a3c <grib_init+0x8428>
    8d58:	ldr	r3, [r2, r3]
    8d5c:	add	r3, r3, #560	; 0x230
    8d60:	ldr	r3, [r3]
    8d64:	mov	r1, r3
    8d68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d6c:	bl	0 <coda_type_record_field_set_type>
    8d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
    8d74:	bl	0 <coda_type_record_field_set_optional>
    8d78:	bl	0 <__aeabi_read_tp>
    8d7c:	mov	r2, r0
    8d80:	ldr	r3, [pc, #-844]	; 8a3c <grib_init+0x8428>
    8d84:	ldr	r3, [r2, r3]
    8d88:	add	r3, r3, #564	; 0x234
    8d8c:	ldr	r3, [r3]
    8d90:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8d94:	mov	r0, r3
    8d98:	bl	0 <coda_type_record_add_field>
    8d9c:	bl	0 <__aeabi_read_tp>
    8da0:	mov	r2, r0
    8da4:	ldr	r3, [pc, #-880]	; 8a3c <grib_init+0x8428>
    8da8:	ldr	r3, [r2, r3]
    8dac:	add	r4, r3, #568	; 0x238
    8db0:	mov	r0, #7
    8db4:	bl	0 <coda_type_array_new>
    8db8:	mov	r3, r0
    8dbc:	str	r3, [r4]
    8dc0:	bl	0 <__aeabi_read_tp>
    8dc4:	mov	r2, r0
    8dc8:	ldr	r3, [pc, #-916]	; 8a3c <grib_init+0x8428>
    8dcc:	ldr	r3, [r2, r3]
    8dd0:	add	r3, r3, #568	; 0x238
    8dd4:	ldr	r2, [r3]
    8dd8:	bl	0 <__aeabi_read_tp>
    8ddc:	mov	r1, r0
    8de0:	ldr	r3, [pc, #-940]	; 8a3c <grib_init+0x8428>
    8de4:	ldr	r3, [r1, r3]
    8de8:	add	r3, r3, #564	; 0x234
    8dec:	ldr	r3, [r3]
    8df0:	mov	r1, r3
    8df4:	mov	r0, r2
    8df8:	bl	0 <coda_type_array_set_base_type>
    8dfc:	bl	0 <__aeabi_read_tp>
    8e00:	mov	r2, r0
    8e04:	ldr	r3, [pc, #-976]	; 8a3c <grib_init+0x8428>
    8e08:	ldr	r3, [r2, r3]
    8e0c:	add	r3, r3, #568	; 0x238
    8e10:	ldr	r3, [r3]
    8e14:	mov	r1, #0
    8e18:	mov	r0, r3
    8e1c:	bl	0 <coda_type_array_add_variable_dimension>
    8e20:	mov	r3, #0
    8e24:	mov	r0, r3
    8e28:	sub	sp, fp, #8
    8e2c:	pop	{r4, fp, pc}

00008e30 <coda_grib_done>:
    8e30:	push	{fp, lr}
    8e34:	add	fp, sp, #4
    8e38:	sub	sp, sp, #8
    8e3c:	bl	0 <__aeabi_read_tp>
    8e40:	mov	r2, r0
    8e44:	ldr	r3, [pc, #220]	; 8f28 <coda_grib_done+0xf8>
    8e48:	ldr	r3, [r2, r3]
    8e4c:	cmp	r3, #0
    8e50:	beq	8f1c <coda_grib_done+0xec>
    8e54:	mov	r3, #0
    8e58:	str	r3, [fp, #-8]
    8e5c:	b	8ee0 <coda_grib_done+0xb0>
    8e60:	bl	0 <__aeabi_read_tp>
    8e64:	mov	r2, r0
    8e68:	ldr	r3, [pc, #184]	; 8f28 <coda_grib_done+0xf8>
    8e6c:	ldr	r2, [r2, r3]
    8e70:	ldr	r3, [fp, #-8]
    8e74:	lsl	r3, r3, #2
    8e78:	add	r3, r2, r3
    8e7c:	ldr	r3, [r3]
    8e80:	cmp	r3, #0
    8e84:	beq	8ed4 <coda_grib_done+0xa4>
    8e88:	bl	0 <__aeabi_read_tp>
    8e8c:	mov	r2, r0
    8e90:	ldr	r3, [pc, #144]	; 8f28 <coda_grib_done+0xf8>
    8e94:	ldr	r2, [r2, r3]
    8e98:	ldr	r3, [fp, #-8]
    8e9c:	lsl	r3, r3, #2
    8ea0:	add	r3, r2, r3
    8ea4:	ldr	r3, [r3]
    8ea8:	mov	r0, r3
    8eac:	bl	0 <coda_type_release>
    8eb0:	bl	0 <__aeabi_read_tp>
    8eb4:	mov	r2, r0
    8eb8:	ldr	r3, [pc, #104]	; 8f28 <coda_grib_done+0xf8>
    8ebc:	ldr	r2, [r2, r3]
    8ec0:	ldr	r3, [fp, #-8]
    8ec4:	lsl	r3, r3, #2
    8ec8:	add	r3, r2, r3
    8ecc:	mov	r2, #0
    8ed0:	str	r2, [r3]
    8ed4:	ldr	r3, [fp, #-8]
    8ed8:	add	r3, r3, #1
    8edc:	str	r3, [fp, #-8]
    8ee0:	ldr	r3, [fp, #-8]
    8ee4:	cmp	r3, #142	; 0x8e
    8ee8:	ble	8e60 <coda_grib_done+0x30>
    8eec:	bl	0 <__aeabi_read_tp>
    8ef0:	mov	r2, r0
    8ef4:	ldr	r3, [pc, #44]	; 8f28 <coda_grib_done+0xf8>
    8ef8:	ldr	r3, [r2, r3]
    8efc:	mov	r0, r3
    8f00:	bl	0 <free>
    8f04:	bl	0 <__aeabi_read_tp>
    8f08:	mov	r1, r0
    8f0c:	ldr	r3, [pc, #20]	; 8f28 <coda_grib_done+0xf8>
    8f10:	mov	r2, #0
    8f14:	str	r2, [r1, r3]
    8f18:	b	8f20 <coda_grib_done+0xf0>
    8f1c:	nop			; (mov r0, r0)
    8f20:	sub	sp, fp, #4
    8f24:	pop	{fp, pc}
    8f28:	.word	0x00000000

00008f2c <ibmfloat_to_iee754>:
    8f2c:	push	{fp, lr}
    8f30:	add	fp, sp, #4
    8f34:	sub	sp, sp, #24
    8f38:	str	r0, [fp, #-24]	; 0xffffffe8
    8f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8f40:	ldrb	r3, [r3]
    8f44:	sxtb	r3, r3
    8f48:	uxtb	r3, r3
    8f4c:	lsr	r3, r3, #7
    8f50:	uxtb	r3, r3
    8f54:	str	r3, [fp, #-16]
    8f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8f5c:	ldrb	r3, [r3]
    8f60:	and	r3, r3, #127	; 0x7f
    8f64:	str	r3, [fp, #-8]
    8f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    8f6c:	add	r3, r3, #1
    8f70:	ldrb	r3, [r3]
    8f74:	lsl	r3, r3, #8
    8f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8f7c:	add	r2, r2, #2
    8f80:	ldrb	r2, [r2]
    8f84:	add	r3, r3, r2
    8f88:	lsl	r3, r3, #8
    8f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8f90:	add	r2, r2, #3
    8f94:	ldrb	r2, [r2]
    8f98:	add	r3, r3, r2
    8f9c:	str	r3, [fp, #-12]
    8fa0:	ldr	r3, [fp, #-12]
    8fa4:	cmp	r3, #0
    8fa8:	bne	8fb4 <ibmfloat_to_iee754+0x88>
    8fac:	vldr	s15, [pc, #208]	; 9084 <ibmfloat_to_iee754+0x158>
    8fb0:	b	9078 <ibmfloat_to_iee754+0x14c>
    8fb4:	ldr	r3, [fp, #-8]
    8fb8:	lsl	r3, r3, #2
    8fbc:	sub	r3, r3, #130	; 0x82
    8fc0:	str	r3, [fp, #-8]
    8fc4:	b	8fe0 <ibmfloat_to_iee754+0xb4>
    8fc8:	ldr	r3, [fp, #-12]
    8fcc:	lsl	r3, r3, #1
    8fd0:	str	r3, [fp, #-12]
    8fd4:	ldr	r3, [fp, #-8]
    8fd8:	sub	r3, r3, #1
    8fdc:	str	r3, [fp, #-8]
    8fe0:	ldr	r3, [fp, #-12]
    8fe4:	cmp	r3, #8388608	; 0x800000
    8fe8:	bcc	8fc8 <ibmfloat_to_iee754+0x9c>
    8fec:	ldr	r3, [fp, #-8]
    8ff0:	cmp	r3, #254	; 0xfe
    8ff4:	ble	9008 <ibmfloat_to_iee754+0xdc>
    8ff8:	bl	0 <coda_PlusInf>
    8ffc:	vmov.f64	d7, d0
    9000:	vcvt.f32.f64	s15, d7
    9004:	b	9078 <ibmfloat_to_iee754+0x14c>
    9008:	ldr	r3, [fp, #-8]
    900c:	cmp	r3, #0
    9010:	bgt	9048 <ibmfloat_to_iee754+0x11c>
    9014:	ldr	r3, [fp, #-8]
    9018:	cmn	r3, #24
    901c:	bge	902c <ibmfloat_to_iee754+0x100>
    9020:	mov	r3, #0
    9024:	str	r3, [fp, #-12]
    9028:	b	9040 <ibmfloat_to_iee754+0x114>
    902c:	ldr	r3, [fp, #-8]
    9030:	rsb	r3, r3, #0
    9034:	ldr	r2, [fp, #-12]
    9038:	lsr	r3, r2, r3
    903c:	str	r3, [fp, #-12]
    9040:	mov	r3, #0
    9044:	str	r3, [fp, #-8]
    9048:	ldr	r3, [fp, #-16]
    904c:	lsl	r2, r3, #31
    9050:	ldr	r3, [fp, #-8]
    9054:	lsl	r3, r3, #23
    9058:	orr	r3, r2, r3
    905c:	mov	r2, r3
    9060:	ldr	r3, [fp, #-12]
    9064:	bic	r3, r3, #-16777216	; 0xff000000
    9068:	bic	r3, r3, #8388608	; 0x800000
    906c:	orr	r3, r2, r3
    9070:	str	r3, [fp, #-20]	; 0xffffffec
    9074:	vldr	s15, [fp, #-20]	; 0xffffffec
    9078:	vmov.f32	s0, s15
    907c:	sub	sp, fp, #4
    9080:	pop	{fp, pc}
    9084:	.word	0x00000000

00009088 <read_grib1_message>:
    9088:	push	{fp, lr}
    908c:	add	fp, sp, #4
    9090:	sub	sp, sp, #184	; 0xb8
    9094:	str	r0, [fp, #-160]	; 0xffffff60
    9098:	str	r1, [fp, #-164]	; 0xffffff5c
    909c:	strd	r2, [fp, #-172]	; 0xffffff54
    90a0:	ldr	r3, [fp, #-160]	; 0xffffff60
    90a4:	str	r3, [fp, #-24]	; 0xffffffe8
    90a8:	mov	r3, #0
    90ac:	str	r3, [fp, #-8]
    90b0:	mov	r3, #0
    90b4:	str	r3, [fp, #-12]
    90b8:	ldr	r3, [fp, #-160]	; 0xffffff60
    90bc:	ldr	r1, [r3, #52]	; 0x34
    90c0:	sub	r3, fp, #132	; 0x84
    90c4:	str	r3, [sp, #8]
    90c8:	mov	r2, #28
    90cc:	mov	r3, #0
    90d0:	strd	r2, [sp]
    90d4:	ldrd	r2, [fp, #-172]	; 0xffffff54
    90d8:	mov	r0, r1
    90dc:	bl	0 <read_bytes>
    90e0:	mov	r3, r0
    90e4:	cmp	r3, #0
    90e8:	bge	90f4 <read_grib1_message+0x6c>
    90ec:	mvn	r3, #0
    90f0:	b	aec0 <read_grib1_message+0x1e38>
    90f4:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    90f8:	lsl	r3, r3, #8
    90fc:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    9100:	add	r3, r3, r2
    9104:	lsl	r3, r3, #8
    9108:	ldrb	r2, [fp, #-130]	; 0xffffff7e
    910c:	add	r3, r3, r2
    9110:	str	r3, [fp, #-28]	; 0xffffffe4
    9114:	bl	0 <__aeabi_read_tp>
    9118:	mov	r2, r0
    911c:	ldr	r3, [pc, #3940]	; a088 <read_grib1_message+0x1000>
    9120:	ldr	r3, [r2, r3]
    9124:	ldr	r3, [r3, #8]
    9128:	str	r3, [fp, #-32]	; 0xffffffe0
    912c:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    9130:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9134:	mov	r1, #0
    9138:	ldr	r0, [fp, #-32]	; 0xffffffe0
    913c:	bl	0 <coda_mem_uint8_new>
    9140:	str	r0, [fp, #-36]	; 0xffffffdc
    9144:	mov	r3, #0
    9148:	ldr	r2, [fp, #-36]	; 0xffffffdc
    914c:	ldr	r1, [pc, #3896]	; a08c <read_grib1_message+0x1004>
    9150:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9154:	bl	0 <coda_mem_record_add_field>
    9158:	bl	0 <__aeabi_read_tp>
    915c:	mov	r2, r0
    9160:	ldr	r3, [pc, #3872]	; a088 <read_grib1_message+0x1000>
    9164:	ldr	r3, [r2, r3]
    9168:	ldr	r3, [r3, #16]
    916c:	str	r3, [fp, #-32]	; 0xffffffe0
    9170:	ldrb	r3, [fp, #-128]	; 0xffffff80
    9174:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9178:	mov	r1, #0
    917c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9180:	bl	0 <coda_mem_uint8_new>
    9184:	str	r0, [fp, #-36]	; 0xffffffdc
    9188:	mov	r3, #0
    918c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9190:	ldr	r1, [pc, #3832]	; a090 <read_grib1_message+0x1008>
    9194:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9198:	bl	0 <coda_mem_record_add_field>
    919c:	bl	0 <__aeabi_read_tp>
    91a0:	mov	r2, r0
    91a4:	ldr	r3, [pc, #3804]	; a088 <read_grib1_message+0x1000>
    91a8:	ldr	r3, [r2, r3]
    91ac:	ldr	r3, [r3, #20]
    91b0:	str	r3, [fp, #-32]	; 0xffffffe0
    91b4:	ldrb	r3, [fp, #-127]	; 0xffffff81
    91b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    91bc:	mov	r1, #0
    91c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    91c4:	bl	0 <coda_mem_uint8_new>
    91c8:	str	r0, [fp, #-36]	; 0xffffffdc
    91cc:	mov	r3, #0
    91d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    91d4:	ldr	r1, [pc, #3768]	; a094 <read_grib1_message+0x100c>
    91d8:	ldr	r0, [fp, #-164]	; 0xffffff5c
    91dc:	bl	0 <coda_mem_record_add_field>
    91e0:	ldrb	r3, [fp, #-126]	; 0xffffff82
    91e4:	strb	r3, [fp, #-37]	; 0xffffffdb
    91e8:	bl	0 <__aeabi_read_tp>
    91ec:	mov	r2, r0
    91f0:	ldr	r3, [pc, #3728]	; a088 <read_grib1_message+0x1000>
    91f4:	ldr	r3, [r2, r3]
    91f8:	ldr	r3, [r3, #24]
    91fc:	str	r3, [fp, #-32]	; 0xffffffe0
    9200:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    9204:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9208:	mov	r1, #0
    920c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9210:	bl	0 <coda_mem_uint8_new>
    9214:	str	r0, [fp, #-36]	; 0xffffffdc
    9218:	mov	r3, #0
    921c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9220:	ldr	r1, [pc, #3696]	; a098 <read_grib1_message+0x1010>
    9224:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9228:	bl	0 <coda_mem_record_add_field>
    922c:	ldrb	r3, [fp, #-125]	; 0xffffff83
    9230:	sxtb	r3, r3
    9234:	uxtb	r3, r3
    9238:	lsr	r3, r3, #7
    923c:	uxtb	r3, r3
    9240:	str	r3, [fp, #-44]	; 0xffffffd4
    9244:	ldrb	r3, [fp, #-125]	; 0xffffff83
    9248:	and	r3, r3, #64	; 0x40
    924c:	cmp	r3, #0
    9250:	movne	r3, #1
    9254:	moveq	r3, #0
    9258:	uxtb	r3, r3
    925c:	str	r3, [fp, #-48]	; 0xffffffd0
    9260:	bl	0 <__aeabi_read_tp>
    9264:	mov	r2, r0
    9268:	ldr	r3, [pc, #3608]	; a088 <read_grib1_message+0x1000>
    926c:	ldr	r3, [r2, r3]
    9270:	ldr	r3, [r3, #28]
    9274:	str	r3, [fp, #-32]	; 0xffffffe0
    9278:	ldrb	r3, [fp, #-124]	; 0xffffff84
    927c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9280:	mov	r1, #0
    9284:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9288:	bl	0 <coda_mem_uint8_new>
    928c:	str	r0, [fp, #-36]	; 0xffffffdc
    9290:	mov	r3, #0
    9294:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9298:	ldr	r1, [pc, #3580]	; a09c <read_grib1_message+0x1014>
    929c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    92a0:	bl	0 <coda_mem_record_add_field>
    92a4:	bl	0 <__aeabi_read_tp>
    92a8:	mov	r2, r0
    92ac:	ldr	r3, [pc, #3540]	; a088 <read_grib1_message+0x1000>
    92b0:	ldr	r3, [r2, r3]
    92b4:	ldr	r3, [r3, #32]
    92b8:	str	r3, [fp, #-32]	; 0xffffffe0
    92bc:	ldrb	r3, [fp, #-123]	; 0xffffff85
    92c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    92c4:	mov	r1, #0
    92c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    92cc:	bl	0 <coda_mem_uint8_new>
    92d0:	str	r0, [fp, #-36]	; 0xffffffdc
    92d4:	mov	r3, #0
    92d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    92dc:	ldr	r1, [pc, #3516]	; a0a0 <read_grib1_message+0x1018>
    92e0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    92e4:	bl	0 <coda_mem_record_add_field>
    92e8:	bl	0 <__aeabi_read_tp>
    92ec:	mov	r2, r0
    92f0:	ldr	r3, [pc, #3472]	; a088 <read_grib1_message+0x1000>
    92f4:	ldr	r3, [r2, r3]
    92f8:	ldr	r3, [r3, #36]	; 0x24
    92fc:	str	r3, [fp, #-32]	; 0xffffffe0
    9300:	ldrb	r3, [fp, #-122]	; 0xffffff86
    9304:	uxth	r3, r3
    9308:	lsl	r3, r3, #8
    930c:	uxth	r2, r3
    9310:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9314:	uxth	r3, r3
    9318:	add	r3, r2, r3
    931c:	uxth	r3, r3
    9320:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9324:	mov	r1, #0
    9328:	ldr	r0, [fp, #-32]	; 0xffffffe0
    932c:	bl	0 <coda_mem_uint16_new>
    9330:	str	r0, [fp, #-36]	; 0xffffffdc
    9334:	mov	r3, #0
    9338:	ldr	r2, [fp, #-36]	; 0xffffffdc
    933c:	ldr	r1, [pc, #3424]	; a0a4 <read_grib1_message+0x101c>
    9340:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9344:	bl	0 <coda_mem_record_add_field>
    9348:	bl	0 <__aeabi_read_tp>
    934c:	mov	r2, r0
    9350:	ldr	r3, [pc, #3376]	; a088 <read_grib1_message+0x1000>
    9354:	ldr	r3, [r2, r3]
    9358:	ldr	r3, [r3, #40]	; 0x28
    935c:	str	r3, [fp, #-32]	; 0xffffffe0
    9360:	ldrb	r3, [fp, #-120]	; 0xffffff88
    9364:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9368:	mov	r1, #0
    936c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9370:	bl	0 <coda_mem_uint8_new>
    9374:	str	r0, [fp, #-36]	; 0xffffffdc
    9378:	mov	r3, #0
    937c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9380:	ldr	r1, [pc, #3360]	; a0a8 <read_grib1_message+0x1020>
    9384:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9388:	bl	0 <coda_mem_record_add_field>
    938c:	bl	0 <__aeabi_read_tp>
    9390:	mov	r2, r0
    9394:	ldr	r3, [pc, #3308]	; a088 <read_grib1_message+0x1000>
    9398:	ldr	r3, [r2, r3]
    939c:	ldr	r3, [r3, #48]	; 0x30
    93a0:	str	r3, [fp, #-32]	; 0xffffffe0
    93a4:	ldrb	r3, [fp, #-119]	; 0xffffff89
    93a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    93ac:	mov	r1, #0
    93b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    93b4:	bl	0 <coda_mem_uint8_new>
    93b8:	str	r0, [fp, #-36]	; 0xffffffdc
    93bc:	mov	r3, #0
    93c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    93c4:	ldr	r1, [pc, #3296]	; a0ac <read_grib1_message+0x1024>
    93c8:	ldr	r0, [fp, #-164]	; 0xffffff5c
    93cc:	bl	0 <coda_mem_record_add_field>
    93d0:	bl	0 <__aeabi_read_tp>
    93d4:	mov	r2, r0
    93d8:	ldr	r3, [pc, #3240]	; a088 <read_grib1_message+0x1000>
    93dc:	ldr	r3, [r2, r3]
    93e0:	ldr	r3, [r3, #52]	; 0x34
    93e4:	str	r3, [fp, #-32]	; 0xffffffe0
    93e8:	ldrb	r3, [fp, #-118]	; 0xffffff8a
    93ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    93f0:	mov	r1, #0
    93f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    93f8:	bl	0 <coda_mem_uint8_new>
    93fc:	str	r0, [fp, #-36]	; 0xffffffdc
    9400:	mov	r3, #0
    9404:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9408:	ldr	r1, [pc, #3232]	; a0b0 <read_grib1_message+0x1028>
    940c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9410:	bl	0 <coda_mem_record_add_field>
    9414:	bl	0 <__aeabi_read_tp>
    9418:	mov	r2, r0
    941c:	ldr	r3, [pc, #3172]	; a088 <read_grib1_message+0x1000>
    9420:	ldr	r3, [r2, r3]
    9424:	ldr	r3, [r3, #56]	; 0x38
    9428:	str	r3, [fp, #-32]	; 0xffffffe0
    942c:	ldrb	r3, [fp, #-117]	; 0xffffff8b
    9430:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9434:	mov	r1, #0
    9438:	ldr	r0, [fp, #-32]	; 0xffffffe0
    943c:	bl	0 <coda_mem_uint8_new>
    9440:	str	r0, [fp, #-36]	; 0xffffffdc
    9444:	mov	r3, #0
    9448:	ldr	r2, [fp, #-36]	; 0xffffffdc
    944c:	ldr	r1, [pc, #3168]	; a0b4 <read_grib1_message+0x102c>
    9450:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9454:	bl	0 <coda_mem_record_add_field>
    9458:	bl	0 <__aeabi_read_tp>
    945c:	mov	r2, r0
    9460:	ldr	r3, [pc, #3104]	; a088 <read_grib1_message+0x1000>
    9464:	ldr	r3, [r2, r3]
    9468:	ldr	r3, [r3, #60]	; 0x3c
    946c:	str	r3, [fp, #-32]	; 0xffffffe0
    9470:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    9474:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9478:	mov	r1, #0
    947c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9480:	bl	0 <coda_mem_uint8_new>
    9484:	str	r0, [fp, #-36]	; 0xffffffdc
    9488:	mov	r3, #0
    948c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9490:	ldr	r1, [pc, #3104]	; a0b8 <read_grib1_message+0x1030>
    9494:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9498:	bl	0 <coda_mem_record_add_field>
    949c:	bl	0 <__aeabi_read_tp>
    94a0:	mov	r2, r0
    94a4:	ldr	r3, [pc, #3036]	; a088 <read_grib1_message+0x1000>
    94a8:	ldr	r3, [r2, r3]
    94ac:	ldr	r3, [r3, #68]	; 0x44
    94b0:	str	r3, [fp, #-32]	; 0xffffffe0
    94b4:	ldrb	r3, [fp, #-115]	; 0xffffff8d
    94b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    94bc:	mov	r1, #0
    94c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    94c4:	bl	0 <coda_mem_uint8_new>
    94c8:	str	r0, [fp, #-36]	; 0xffffffdc
    94cc:	mov	r3, #0
    94d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    94d4:	ldr	r1, [pc, #3040]	; a0bc <read_grib1_message+0x1034>
    94d8:	ldr	r0, [fp, #-164]	; 0xffffff5c
    94dc:	bl	0 <coda_mem_record_add_field>
    94e0:	bl	0 <__aeabi_read_tp>
    94e4:	mov	r2, r0
    94e8:	ldr	r3, [pc, #2968]	; a088 <read_grib1_message+0x1000>
    94ec:	ldr	r3, [r2, r3]
    94f0:	ldr	r3, [r3, #72]	; 0x48
    94f4:	str	r3, [fp, #-32]	; 0xffffffe0
    94f8:	ldrb	r3, [fp, #-114]	; 0xffffff8e
    94fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9500:	mov	r1, #0
    9504:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9508:	bl	0 <coda_mem_uint8_new>
    950c:	str	r0, [fp, #-36]	; 0xffffffdc
    9510:	mov	r3, #0
    9514:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9518:	ldr	r1, [pc, #2976]	; a0c0 <read_grib1_message+0x1038>
    951c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9520:	bl	0 <coda_mem_record_add_field>
    9524:	bl	0 <__aeabi_read_tp>
    9528:	mov	r2, r0
    952c:	ldr	r3, [pc, #2900]	; a088 <read_grib1_message+0x1000>
    9530:	ldr	r3, [r2, r3]
    9534:	ldr	r3, [r3, #76]	; 0x4c
    9538:	str	r3, [fp, #-32]	; 0xffffffe0
    953c:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    9540:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9544:	mov	r1, #0
    9548:	ldr	r0, [fp, #-32]	; 0xffffffe0
    954c:	bl	0 <coda_mem_uint8_new>
    9550:	str	r0, [fp, #-36]	; 0xffffffdc
    9554:	mov	r3, #0
    9558:	ldr	r2, [fp, #-36]	; 0xffffffdc
    955c:	ldr	r1, [pc, #2912]	; a0c4 <read_grib1_message+0x103c>
    9560:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9564:	bl	0 <coda_mem_record_add_field>
    9568:	bl	0 <__aeabi_read_tp>
    956c:	mov	r2, r0
    9570:	ldr	r3, [pc, #2832]	; a088 <read_grib1_message+0x1000>
    9574:	ldr	r3, [r2, r3]
    9578:	ldr	r3, [r3, #80]	; 0x50
    957c:	str	r3, [fp, #-32]	; 0xffffffe0
    9580:	ldrb	r3, [fp, #-112]	; 0xffffff90
    9584:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9588:	mov	r1, #0
    958c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9590:	bl	0 <coda_mem_uint8_new>
    9594:	str	r0, [fp, #-36]	; 0xffffffdc
    9598:	mov	r3, #0
    959c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    95a0:	ldr	r1, [pc, #2848]	; a0c8 <read_grib1_message+0x1040>
    95a4:	ldr	r0, [fp, #-164]	; 0xffffff5c
    95a8:	bl	0 <coda_mem_record_add_field>
    95ac:	bl	0 <__aeabi_read_tp>
    95b0:	mov	r2, r0
    95b4:	ldr	r3, [pc, #2764]	; a088 <read_grib1_message+0x1000>
    95b8:	ldr	r3, [r2, r3]
    95bc:	ldr	r3, [r3, #84]	; 0x54
    95c0:	str	r3, [fp, #-32]	; 0xffffffe0
    95c4:	ldrb	r3, [fp, #-111]	; 0xffffff91
    95c8:	uxth	r3, r3
    95cc:	lsl	r3, r3, #8
    95d0:	uxth	r2, r3
    95d4:	ldrb	r3, [fp, #-110]	; 0xffffff92
    95d8:	uxth	r3, r3
    95dc:	add	r3, r2, r3
    95e0:	uxth	r3, r3
    95e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    95e8:	mov	r1, #0
    95ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    95f0:	bl	0 <coda_mem_uint16_new>
    95f4:	str	r0, [fp, #-36]	; 0xffffffdc
    95f8:	mov	r3, #0
    95fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9600:	ldr	r1, [pc, #2756]	; a0cc <read_grib1_message+0x1044>
    9604:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9608:	bl	0 <coda_mem_record_add_field>
    960c:	bl	0 <__aeabi_read_tp>
    9610:	mov	r2, r0
    9614:	ldr	r3, [pc, #2668]	; a088 <read_grib1_message+0x1000>
    9618:	ldr	r3, [r2, r3]
    961c:	ldr	r3, [r3, #88]	; 0x58
    9620:	str	r3, [fp, #-32]	; 0xffffffe0
    9624:	ldrb	r3, [fp, #-109]	; 0xffffff93
    9628:	ldr	r2, [fp, #-24]	; 0xffffffe8
    962c:	mov	r1, #0
    9630:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9634:	bl	0 <coda_mem_uint8_new>
    9638:	str	r0, [fp, #-36]	; 0xffffffdc
    963c:	mov	r3, #0
    9640:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9644:	ldr	r1, [pc, #2692]	; a0d0 <read_grib1_message+0x1048>
    9648:	ldr	r0, [fp, #-164]	; 0xffffff5c
    964c:	bl	0 <coda_mem_record_add_field>
    9650:	bl	0 <__aeabi_read_tp>
    9654:	mov	r2, r0
    9658:	ldr	r3, [pc, #2600]	; a088 <read_grib1_message+0x1000>
    965c:	ldr	r3, [r2, r3]
    9660:	ldr	r3, [r3, #92]	; 0x5c
    9664:	str	r3, [fp, #-32]	; 0xffffffe0
    9668:	ldrb	r3, [fp, #-108]	; 0xffffff94
    966c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9670:	mov	r1, #0
    9674:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9678:	bl	0 <coda_mem_uint8_new>
    967c:	str	r0, [fp, #-36]	; 0xffffffdc
    9680:	mov	r3, #0
    9684:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9688:	ldr	r1, [pc, #2628]	; a0d4 <read_grib1_message+0x104c>
    968c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9690:	bl	0 <coda_mem_record_add_field>
    9694:	bl	0 <__aeabi_read_tp>
    9698:	mov	r2, r0
    969c:	ldr	r3, [pc, #2532]	; a088 <read_grib1_message+0x1000>
    96a0:	ldr	r3, [r2, r3]
    96a4:	ldr	r3, [r3, #96]	; 0x60
    96a8:	str	r3, [fp, #-32]	; 0xffffffe0
    96ac:	ldrb	r3, [fp, #-107]	; 0xffffff95
    96b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    96b4:	mov	r1, #0
    96b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    96bc:	bl	0 <coda_mem_uint8_new>
    96c0:	str	r0, [fp, #-36]	; 0xffffffdc
    96c4:	mov	r3, #0
    96c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    96cc:	ldr	r1, [pc, #2564]	; a0d8 <read_grib1_message+0x1050>
    96d0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    96d4:	bl	0 <coda_mem_record_add_field>
    96d8:	ldrb	r3, [fp, #-106]	; 0xffffff96
    96dc:	sxtb	r3, r3
    96e0:	cmp	r3, #0
    96e4:	bge	96f0 <read_grib1_message+0x668>
    96e8:	ldr	r2, [pc, #2792]	; a1d8 <read_grib1_message+0x1150>
    96ec:	b	96f4 <read_grib1_message+0x66c>
    96f0:	mov	r2, #1
    96f4:	ldrb	r3, [fp, #-106]	; 0xffffff96
    96f8:	and	r3, r3, #127	; 0x7f
    96fc:	lsl	r3, r3, #8
    9700:	ldrb	r1, [fp, #-105]	; 0xffffff97
    9704:	add	r3, r3, r1
    9708:	uxth	r3, r3
    970c:	smulbb	r3, r2, r3
    9710:	uxth	r3, r3
    9714:	strh	r3, [fp, #-50]	; 0xffffffce
    9718:	bl	0 <__aeabi_read_tp>
    971c:	mov	r2, r0
    9720:	ldr	r3, [pc, #2400]	; a088 <read_grib1_message+0x1000>
    9724:	ldr	r3, [r2, r3]
    9728:	ldr	r3, [r3, #100]	; 0x64
    972c:	str	r3, [fp, #-32]	; 0xffffffe0
    9730:	ldrsh	r3, [fp, #-50]	; 0xffffffce
    9734:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9738:	mov	r1, #0
    973c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9740:	bl	0 <coda_mem_int16_new>
    9744:	str	r0, [fp, #-36]	; 0xffffffdc
    9748:	mov	r3, #0
    974c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9750:	ldr	r1, [pc, #2436]	; a0dc <read_grib1_message+0x1054>
    9754:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9758:	bl	0 <coda_mem_record_add_field>
    975c:	ldrd	r2, [fp, #-172]	; 0xffffff54
    9760:	adds	r2, r2, #28
    9764:	adc	r3, r3, #0
    9768:	strd	r2, [fp, #-172]	; 0xffffff54
    976c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9770:	cmp	r3, #28
    9774:	ble	98a4 <read_grib1_message+0x81c>
    9778:	ldr	r3, [fp, #-28]	; 0xffffffe4
    977c:	cmp	r3, #40	; 0x28
    9780:	ble	9884 <read_grib1_message+0x7fc>
    9784:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9788:	sub	r3, r3, #40	; 0x28
    978c:	mov	r0, r3
    9790:	bl	0 <malloc>
    9794:	mov	r3, r0
    9798:	str	r3, [fp, #-56]	; 0xffffffc8
    979c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    97a0:	cmp	r3, #0
    97a4:	bne	97d0 <read_grib1_message+0x748>
    97a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    97ac:	sub	r2, r3, #40	; 0x28
    97b0:	ldr	r3, [pc, #2344]	; a0e0 <read_grib1_message+0x1058>
    97b4:	str	r3, [sp]
    97b8:	ldr	r3, [pc, #2564]	; a1c4 <read_grib1_message+0x113c>
    97bc:	ldr	r1, [pc, #2564]	; a1c8 <read_grib1_message+0x1140>
    97c0:	mvn	r0, #0
    97c4:	bl	0 <coda_set_error>
    97c8:	mvn	r3, #0
    97cc:	b	aec0 <read_grib1_message+0x1e38>
    97d0:	ldr	r3, [fp, #-160]	; 0xffffff60
    97d4:	ldr	lr, [r3, #52]	; 0x34
    97d8:	ldrd	r2, [fp, #-172]	; 0xffffff54
    97dc:	adds	r0, r2, #12
    97e0:	adc	r1, r3, #0
    97e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    97e8:	sub	r3, r3, #40	; 0x28
    97ec:	mov	r2, r3
    97f0:	asr	r3, r2, #31
    97f4:	ldr	ip, [fp, #-56]	; 0xffffffc8
    97f8:	str	ip, [sp, #8]
    97fc:	strd	r2, [sp]
    9800:	mov	r2, r0
    9804:	mov	r3, r1
    9808:	mov	r0, lr
    980c:	bl	0 <read_bytes>
    9810:	mov	r3, r0
    9814:	cmp	r3, #0
    9818:	bge	982c <read_grib1_message+0x7a4>
    981c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9820:	bl	0 <free>
    9824:	mvn	r3, #0
    9828:	b	aec0 <read_grib1_message+0x1e38>
    982c:	bl	0 <__aeabi_read_tp>
    9830:	mov	r2, r0
    9834:	ldr	r3, [pc, #2124]	; a088 <read_grib1_message+0x1000>
    9838:	ldr	r3, [r2, r3]
    983c:	add	r3, r3, #128	; 0x80
    9840:	ldr	r0, [r3]
    9844:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9848:	sub	r2, r3, #40	; 0x28
    984c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    9850:	str	r3, [sp]
    9854:	mov	r3, r2
    9858:	ldr	r2, [fp, #-24]	; 0xffffffe8
    985c:	mov	r1, #0
    9860:	bl	0 <coda_mem_raw_new>
    9864:	str	r0, [fp, #-36]	; 0xffffffdc
    9868:	ldr	r0, [fp, #-56]	; 0xffffffc8
    986c:	bl	0 <free>
    9870:	mov	r3, #0
    9874:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9878:	ldr	r1, [pc, #2148]	; a0e4 <read_grib1_message+0x105c>
    987c:	ldr	r0, [fp, #-164]	; 0xffffff5c
    9880:	bl	0 <coda_mem_record_add_field>
    9884:	ldr	r3, [fp, #-28]	; 0xffffffe4
    9888:	sub	r3, r3, #28
    988c:	mov	r2, r3
    9890:	asr	r3, r2, #31
    9894:	ldrd	r0, [fp, #-172]	; 0xffffff54
    9898:	adds	r2, r2, r0
    989c:	adc	r3, r3, r1
    98a0:	strd	r2, [fp, #-172]	; 0xffffff54
    98a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    98a8:	cmp	r3, #0
    98ac:	beq	a57c <read_grib1_message+0x14f4>
    98b0:	ldr	r3, [fp, #-160]	; 0xffffff60
    98b4:	ldr	r1, [r3, #52]	; 0x34
    98b8:	sub	r3, fp, #132	; 0x84
    98bc:	str	r3, [sp, #8]
    98c0:	mov	r2, #6
    98c4:	mov	r3, #0
    98c8:	strd	r2, [sp]
    98cc:	ldrd	r2, [fp, #-172]	; 0xffffff54
    98d0:	mov	r0, r1
    98d4:	bl	0 <read_bytes>
    98d8:	mov	r3, r0
    98dc:	cmp	r3, #0
    98e0:	bge	98ec <read_grib1_message+0x864>
    98e4:	mvn	r3, #0
    98e8:	b	aec0 <read_grib1_message+0x1e38>
    98ec:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    98f0:	lsl	r3, r3, #8
    98f4:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    98f8:	add	r3, r3, r2
    98fc:	lsl	r3, r3, #8
    9900:	ldrb	r2, [fp, #-130]	; 0xffffff7e
    9904:	add	r3, r3, r2
    9908:	str	r3, [fp, #-28]	; 0xffffffe4
    990c:	ldrd	r2, [fp, #-172]	; 0xffffff54
    9910:	adds	r2, r2, #6
    9914:	adc	r3, r3, #0
    9918:	strd	r2, [fp, #-172]	; 0xffffff54
    991c:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9920:	cmp	r3, #0
    9924:	beq	997c <read_grib1_message+0x8f4>
    9928:	ldrb	r3, [fp, #-127]	; 0xffffff81
    992c:	cmp	r3, #4
    9930:	beq	997c <read_grib1_message+0x8f4>
    9934:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9938:	cmp	r3, #10
    993c:	beq	997c <read_grib1_message+0x8f4>
    9940:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9944:	cmp	r3, #14
    9948:	beq	997c <read_grib1_message+0x8f4>
    994c:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9950:	cmp	r3, #20
    9954:	beq	997c <read_grib1_message+0x8f4>
    9958:	ldrb	r3, [fp, #-127]	; 0xffffff81
    995c:	cmp	r3, #24
    9960:	beq	997c <read_grib1_message+0x8f4>
    9964:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9968:	cmp	r3, #30
    996c:	beq	997c <read_grib1_message+0x8f4>
    9970:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9974:	cmp	r3, #34	; 0x22
    9978:	bne	a560 <read_grib1_message+0x14d8>
    997c:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9980:	cmp	r3, #4
    9984:	beq	99ac <read_grib1_message+0x924>
    9988:	ldrb	r3, [fp, #-127]	; 0xffffff81
    998c:	cmp	r3, #14
    9990:	beq	99ac <read_grib1_message+0x924>
    9994:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9998:	cmp	r3, #24
    999c:	beq	99ac <read_grib1_message+0x924>
    99a0:	ldrb	r3, [fp, #-127]	; 0xffffff81
    99a4:	cmp	r3, #34	; 0x22
    99a8:	bne	99b4 <read_grib1_message+0x92c>
    99ac:	mov	r3, #1
    99b0:	b	99b8 <read_grib1_message+0x930>
    99b4:	mov	r3, #0
    99b8:	str	r3, [fp, #-60]	; 0xffffffc4
    99bc:	bl	0 <__aeabi_read_tp>
    99c0:	mov	r2, r0
    99c4:	ldr	r3, [pc, #1724]	; a088 <read_grib1_message+0x1000>
    99c8:	ldr	r3, [r2, r3]
    99cc:	add	r3, r3, #264	; 0x108
    99d0:	ldr	r3, [r3]
    99d4:	mov	r1, #0
    99d8:	mov	r0, r3
    99dc:	bl	0 <coda_mem_record_new>
    99e0:	str	r0, [fp, #-64]	; 0xffffffc0
    99e4:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    99e8:	strb	r3, [fp, #-65]	; 0xffffffbf
    99ec:	bl	0 <__aeabi_read_tp>
    99f0:	mov	r2, r0
    99f4:	ldr	r3, [pc, #1676]	; a088 <read_grib1_message+0x1000>
    99f8:	ldr	r3, [r2, r3]
    99fc:	ldr	r3, [r3, #132]	; 0x84
    9a00:	str	r3, [fp, #-32]	; 0xffffffe0
    9a04:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    9a08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9a0c:	mov	r1, #0
    9a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9a14:	bl	0 <coda_mem_uint8_new>
    9a18:	str	r0, [fp, #-36]	; 0xffffffdc
    9a1c:	mov	r3, #0
    9a20:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9a24:	ldr	r1, [pc, #1724]	; a0e8 <read_grib1_message+0x1060>
    9a28:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9a2c:	bl	0 <coda_mem_record_add_field>
    9a30:	ldrb	r3, [fp, #-128]	; 0xffffff80
    9a34:	strb	r3, [fp, #-66]	; 0xffffffbe
    9a38:	bl	0 <__aeabi_read_tp>
    9a3c:	mov	r2, r0
    9a40:	ldr	r3, [pc, #1600]	; a088 <read_grib1_message+0x1000>
    9a44:	ldr	r3, [r2, r3]
    9a48:	ldr	r3, [r3, #136]	; 0x88
    9a4c:	str	r3, [fp, #-32]	; 0xffffffe0
    9a50:	ldrb	r3, [fp, #-127]	; 0xffffff81
    9a54:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9a58:	mov	r1, #0
    9a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9a60:	bl	0 <coda_mem_uint8_new>
    9a64:	str	r0, [fp, #-36]	; 0xffffffdc
    9a68:	mov	r3, #0
    9a6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9a70:	ldr	r1, [pc, #1652]	; a0ec <read_grib1_message+0x1064>
    9a74:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9a78:	bl	0 <coda_mem_record_add_field>
    9a7c:	ldr	r3, [fp, #-160]	; 0xffffff60
    9a80:	ldr	r1, [r3, #52]	; 0x34
    9a84:	sub	r3, fp, #132	; 0x84
    9a88:	str	r3, [sp, #8]
    9a8c:	mov	r2, #26
    9a90:	mov	r3, #0
    9a94:	strd	r2, [sp]
    9a98:	ldrd	r2, [fp, #-172]	; 0xffffff54
    9a9c:	mov	r0, r1
    9aa0:	bl	0 <read_bytes>
    9aa4:	mov	r3, r0
    9aa8:	cmp	r3, #0
    9aac:	bge	9ac0 <read_grib1_message+0xa38>
    9ab0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9ab4:	bl	0 <coda_grib_type_delete>
    9ab8:	mvn	r3, #0
    9abc:	b	aec0 <read_grib1_message+0x1e38>
    9ac0:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    9ac4:	lsl	r3, r3, #8
    9ac8:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    9acc:	add	r3, r3, r2
    9ad0:	str	r3, [fp, #-72]	; 0xffffffb8
    9ad4:	ldrb	r3, [fp, #-130]	; 0xffffff7e
    9ad8:	lsl	r3, r3, #8
    9adc:	ldrb	r2, [fp, #-129]	; 0xffffff7f
    9ae0:	add	r3, r3, r2
    9ae4:	str	r3, [fp, #-76]	; 0xffffffb4
    9ae8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9aec:	ldr	r2, [pc, #1764]	; a1d8 <read_grib1_message+0x1150>
    9af0:	cmp	r3, r2
    9af4:	bne	9b1c <read_grib1_message+0xa94>
    9af8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    9afc:	ldr	r2, [pc, #1748]	; a1d8 <read_grib1_message+0x1150>
    9b00:	cmp	r3, r2
    9b04:	bne	9b1c <read_grib1_message+0xa94>
    9b08:	ldr	r1, [pc, #1504]	; a0f0 <read_grib1_message+0x1068>
    9b0c:	ldr	r0, [pc, #1740]	; a1e0 <read_grib1_message+0x1158>
    9b10:	bl	0 <coda_set_error>
    9b14:	mvn	r3, #0
    9b18:	b	aec0 <read_grib1_message+0x1e38>
    9b1c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9b20:	ldr	r2, [pc, #1712]	; a1d8 <read_grib1_message+0x1150>
    9b24:	cmp	r3, r2
    9b28:	beq	9b4c <read_grib1_message+0xac4>
    9b2c:	ldr	r3, [fp, #-76]	; 0xffffffb4
    9b30:	ldr	r2, [pc, #1696]	; a1d8 <read_grib1_message+0x1150>
    9b34:	cmp	r3, r2
    9b38:	beq	9b4c <read_grib1_message+0xac4>
    9b3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9b40:	ldr	r2, [fp, #-76]	; 0xffffffb4
    9b44:	mul	r3, r2, r3
    9b48:	str	r3, [fp, #-12]
    9b4c:	bl	0 <__aeabi_read_tp>
    9b50:	mov	r2, r0
    9b54:	ldr	r3, [pc, #1324]	; a088 <read_grib1_message+0x1000>
    9b58:	ldr	r3, [r2, r3]
    9b5c:	ldr	r3, [r3, #168]	; 0xa8
    9b60:	str	r3, [fp, #-32]	; 0xffffffe0
    9b64:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9b68:	uxth	r3, r3
    9b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9b70:	mov	r1, #0
    9b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9b78:	bl	0 <coda_mem_uint16_new>
    9b7c:	str	r0, [fp, #-36]	; 0xffffffdc
    9b80:	mov	r3, #0
    9b84:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9b88:	ldr	r1, [pc, #1380]	; a0f4 <read_grib1_message+0x106c>
    9b8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9b90:	bl	0 <coda_mem_record_add_field>
    9b94:	bl	0 <__aeabi_read_tp>
    9b98:	mov	r2, r0
    9b9c:	ldr	r3, [pc, #1252]	; a088 <read_grib1_message+0x1000>
    9ba0:	ldr	r3, [r2, r3]
    9ba4:	ldr	r3, [r3, #172]	; 0xac
    9ba8:	str	r3, [fp, #-32]	; 0xffffffe0
    9bac:	ldr	r3, [fp, #-76]	; 0xffffffb4
    9bb0:	uxth	r3, r3
    9bb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9bb8:	mov	r1, #0
    9bbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9bc0:	bl	0 <coda_mem_uint16_new>
    9bc4:	str	r0, [fp, #-36]	; 0xffffffdc
    9bc8:	mov	r3, #0
    9bcc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9bd0:	ldr	r1, [pc, #1312]	; a0f8 <read_grib1_message+0x1070>
    9bd4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9bd8:	bl	0 <coda_mem_record_add_field>
    9bdc:	ldrb	r3, [fp, #-128]	; 0xffffff80
    9be0:	sxtb	r3, r3
    9be4:	cmp	r3, #0
    9be8:	bge	9bf4 <read_grib1_message+0xb6c>
    9bec:	mvn	r3, #0
    9bf0:	b	9bf8 <read_grib1_message+0xb70>
    9bf4:	mov	r3, #1
    9bf8:	ldrb	r2, [fp, #-128]	; 0xffffff80
    9bfc:	and	r2, r2, #127	; 0x7f
    9c00:	lsl	r2, r2, #8
    9c04:	ldrb	r1, [fp, #-127]	; 0xffffff81
    9c08:	add	r2, r2, r1
    9c0c:	lsl	r2, r2, #8
    9c10:	ldrb	r1, [fp, #-126]	; 0xffffff82
    9c14:	add	r2, r2, r1
    9c18:	mul	r3, r2, r3
    9c1c:	str	r3, [fp, #-80]	; 0xffffffb0
    9c20:	bl	0 <__aeabi_read_tp>
    9c24:	mov	r2, r0
    9c28:	ldr	r3, [pc, #1112]	; a088 <read_grib1_message+0x1000>
    9c2c:	ldr	r3, [r2, r3]
    9c30:	ldr	r3, [r3, #184]	; 0xb8
    9c34:	str	r3, [fp, #-32]	; 0xffffffe0
    9c38:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9c40:	mov	r1, #0
    9c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9c48:	bl	0 <coda_mem_int32_new>
    9c4c:	str	r0, [fp, #-36]	; 0xffffffdc
    9c50:	mov	r3, #0
    9c54:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9c58:	ldr	r1, [pc, #1180]	; a0fc <read_grib1_message+0x1074>
    9c5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9c60:	bl	0 <coda_mem_record_add_field>
    9c64:	ldrb	r3, [fp, #-125]	; 0xffffff83
    9c68:	sxtb	r3, r3
    9c6c:	cmp	r3, #0
    9c70:	bge	9c7c <read_grib1_message+0xbf4>
    9c74:	mvn	r3, #0
    9c78:	b	9c80 <read_grib1_message+0xbf8>
    9c7c:	mov	r3, #1
    9c80:	ldrb	r2, [fp, #-125]	; 0xffffff83
    9c84:	and	r2, r2, #127	; 0x7f
    9c88:	lsl	r2, r2, #8
    9c8c:	ldrb	r1, [fp, #-124]	; 0xffffff84
    9c90:	add	r2, r2, r1
    9c94:	lsl	r2, r2, #8
    9c98:	ldrb	r1, [fp, #-123]	; 0xffffff85
    9c9c:	add	r2, r2, r1
    9ca0:	mul	r3, r2, r3
    9ca4:	str	r3, [fp, #-80]	; 0xffffffb0
    9ca8:	bl	0 <__aeabi_read_tp>
    9cac:	mov	r2, r0
    9cb0:	ldr	r3, [pc, #976]	; a088 <read_grib1_message+0x1000>
    9cb4:	ldr	r3, [r2, r3]
    9cb8:	ldr	r3, [r3, #188]	; 0xbc
    9cbc:	str	r3, [fp, #-32]	; 0xffffffe0
    9cc0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9cc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9cc8:	mov	r1, #0
    9ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9cd0:	bl	0 <coda_mem_int32_new>
    9cd4:	str	r0, [fp, #-36]	; 0xffffffdc
    9cd8:	mov	r3, #0
    9cdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9ce0:	ldr	r1, [pc, #1048]	; a100 <read_grib1_message+0x1078>
    9ce4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9ce8:	bl	0 <coda_mem_record_add_field>
    9cec:	bl	0 <__aeabi_read_tp>
    9cf0:	mov	r2, r0
    9cf4:	ldr	r3, [pc, #908]	; a088 <read_grib1_message+0x1000>
    9cf8:	ldr	r3, [r2, r3]
    9cfc:	ldr	r3, [r3, #192]	; 0xc0
    9d00:	str	r3, [fp, #-32]	; 0xffffffe0
    9d04:	ldrb	r3, [fp, #-122]	; 0xffffff86
    9d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d0c:	mov	r1, #0
    9d10:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d14:	bl	0 <coda_mem_uint8_new>
    9d18:	str	r0, [fp, #-36]	; 0xffffffdc
    9d1c:	mov	r3, #0
    9d20:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9d24:	ldr	r1, [pc, #984]	; a104 <read_grib1_message+0x107c>
    9d28:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9d2c:	bl	0 <coda_mem_record_add_field>
    9d30:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9d34:	sxtb	r3, r3
    9d38:	cmp	r3, #0
    9d3c:	bge	9d48 <read_grib1_message+0xcc0>
    9d40:	mvn	r3, #0
    9d44:	b	9d4c <read_grib1_message+0xcc4>
    9d48:	mov	r3, #1
    9d4c:	ldrb	r2, [fp, #-121]	; 0xffffff87
    9d50:	and	r2, r2, #127	; 0x7f
    9d54:	lsl	r2, r2, #8
    9d58:	ldrb	r1, [fp, #-120]	; 0xffffff88
    9d5c:	add	r2, r2, r1
    9d60:	lsl	r2, r2, #8
    9d64:	ldrb	r1, [fp, #-119]	; 0xffffff89
    9d68:	add	r2, r2, r1
    9d6c:	mul	r3, r2, r3
    9d70:	str	r3, [fp, #-80]	; 0xffffffb0
    9d74:	bl	0 <__aeabi_read_tp>
    9d78:	mov	r2, r0
    9d7c:	ldr	r3, [pc, #772]	; a088 <read_grib1_message+0x1000>
    9d80:	ldr	r3, [r2, r3]
    9d84:	ldr	r3, [r3, #196]	; 0xc4
    9d88:	str	r3, [fp, #-32]	; 0xffffffe0
    9d8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9d90:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9d94:	mov	r1, #0
    9d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d9c:	bl	0 <coda_mem_int32_new>
    9da0:	str	r0, [fp, #-36]	; 0xffffffdc
    9da4:	mov	r3, #0
    9da8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9dac:	ldr	r1, [pc, #852]	; a108 <read_grib1_message+0x1080>
    9db0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9db4:	bl	0 <coda_mem_record_add_field>
    9db8:	ldrb	r3, [fp, #-118]	; 0xffffff8a
    9dbc:	sxtb	r3, r3
    9dc0:	cmp	r3, #0
    9dc4:	bge	9dd0 <read_grib1_message+0xd48>
    9dc8:	mvn	r3, #0
    9dcc:	b	9dd4 <read_grib1_message+0xd4c>
    9dd0:	mov	r3, #1
    9dd4:	ldrb	r2, [fp, #-118]	; 0xffffff8a
    9dd8:	and	r2, r2, #127	; 0x7f
    9ddc:	lsl	r2, r2, #8
    9de0:	ldrb	r1, [fp, #-117]	; 0xffffff8b
    9de4:	add	r2, r2, r1
    9de8:	lsl	r2, r2, #8
    9dec:	ldrb	r1, [fp, #-116]	; 0xffffff8c
    9df0:	add	r2, r2, r1
    9df4:	mul	r3, r2, r3
    9df8:	str	r3, [fp, #-80]	; 0xffffffb0
    9dfc:	bl	0 <__aeabi_read_tp>
    9e00:	mov	r2, r0
    9e04:	ldr	r3, [pc, #636]	; a088 <read_grib1_message+0x1000>
    9e08:	ldr	r3, [r2, r3]
    9e0c:	ldr	r3, [r3, #200]	; 0xc8
    9e10:	str	r3, [fp, #-32]	; 0xffffffe0
    9e14:	ldr	r3, [fp, #-80]	; 0xffffffb0
    9e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9e1c:	mov	r1, #0
    9e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e24:	bl	0 <coda_mem_int32_new>
    9e28:	str	r0, [fp, #-36]	; 0xffffffdc
    9e2c:	mov	r3, #0
    9e30:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9e34:	ldr	r1, [pc, #720]	; a10c <read_grib1_message+0x1084>
    9e38:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9e3c:	bl	0 <coda_mem_record_add_field>
    9e40:	bl	0 <__aeabi_read_tp>
    9e44:	mov	r2, r0
    9e48:	ldr	r3, [pc, #568]	; a088 <read_grib1_message+0x1000>
    9e4c:	ldr	r3, [r2, r3]
    9e50:	ldr	r3, [r3, #204]	; 0xcc
    9e54:	str	r3, [fp, #-32]	; 0xffffffe0
    9e58:	ldrb	r3, [fp, #-115]	; 0xffffff8d
    9e5c:	uxth	r3, r3
    9e60:	lsl	r3, r3, #8
    9e64:	uxth	r2, r3
    9e68:	ldrb	r3, [fp, #-114]	; 0xffffff8e
    9e6c:	uxth	r3, r3
    9e70:	add	r3, r2, r3
    9e74:	uxth	r3, r3
    9e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9e7c:	mov	r1, #0
    9e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e84:	bl	0 <coda_mem_uint16_new>
    9e88:	str	r0, [fp, #-36]	; 0xffffffdc
    9e8c:	mov	r3, #0
    9e90:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9e94:	ldr	r1, [pc, #628]	; a110 <read_grib1_message+0x1088>
    9e98:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9e9c:	bl	0 <coda_mem_record_add_field>
    9ea0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    9ea4:	cmp	r3, #0
    9ea8:	beq	9f10 <read_grib1_message+0xe88>
    9eac:	bl	0 <__aeabi_read_tp>
    9eb0:	mov	r2, r0
    9eb4:	ldr	r3, [pc, #460]	; a088 <read_grib1_message+0x1000>
    9eb8:	ldr	r3, [r2, r3]
    9ebc:	ldr	r3, [r3, #212]	; 0xd4
    9ec0:	str	r3, [fp, #-32]	; 0xffffffe0
    9ec4:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    9ec8:	uxth	r3, r3
    9ecc:	lsl	r3, r3, #8
    9ed0:	uxth	r2, r3
    9ed4:	ldrb	r3, [fp, #-112]	; 0xffffff90
    9ed8:	uxth	r3, r3
    9edc:	add	r3, r2, r3
    9ee0:	uxth	r3, r3
    9ee4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9ee8:	mov	r1, #0
    9eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9ef0:	bl	0 <coda_mem_uint16_new>
    9ef4:	str	r0, [fp, #-36]	; 0xffffffdc
    9ef8:	mov	r3, #0
    9efc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9f00:	ldr	r1, [pc, #524]	; a114 <read_grib1_message+0x108c>
    9f04:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9f08:	bl	0 <coda_mem_record_add_field>
    9f0c:	b	9f70 <read_grib1_message+0xee8>
    9f10:	bl	0 <__aeabi_read_tp>
    9f14:	mov	r2, r0
    9f18:	ldr	r3, [pc, #360]	; a088 <read_grib1_message+0x1000>
    9f1c:	ldr	r3, [r2, r3]
    9f20:	ldr	r3, [r3, #208]	; 0xd0
    9f24:	str	r3, [fp, #-32]	; 0xffffffe0
    9f28:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    9f2c:	uxth	r3, r3
    9f30:	lsl	r3, r3, #8
    9f34:	uxth	r2, r3
    9f38:	ldrb	r3, [fp, #-112]	; 0xffffff90
    9f3c:	uxth	r3, r3
    9f40:	add	r3, r2, r3
    9f44:	uxth	r3, r3
    9f48:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9f4c:	mov	r1, #0
    9f50:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9f54:	bl	0 <coda_mem_uint16_new>
    9f58:	str	r0, [fp, #-36]	; 0xffffffdc
    9f5c:	mov	r3, #0
    9f60:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9f64:	ldr	r1, [pc, #428]	; a118 <read_grib1_message+0x1090>
    9f68:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9f6c:	bl	0 <coda_mem_record_add_field>
    9f70:	bl	0 <__aeabi_read_tp>
    9f74:	mov	r2, r0
    9f78:	ldr	r3, [pc, #264]	; a088 <read_grib1_message+0x1000>
    9f7c:	ldr	r3, [r2, r3]
    9f80:	ldr	r3, [r3, #216]	; 0xd8
    9f84:	str	r3, [fp, #-32]	; 0xffffffe0
    9f88:	ldrb	r3, [fp, #-111]	; 0xffffff91
    9f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    9f90:	mov	r1, #0
    9f94:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9f98:	bl	0 <coda_mem_uint8_new>
    9f9c:	str	r0, [fp, #-36]	; 0xffffffdc
    9fa0:	mov	r3, #0
    9fa4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9fa8:	ldr	r1, [pc, #364]	; a11c <read_grib1_message+0x1094>
    9fac:	ldr	r0, [fp, #-64]	; 0xffffffc0
    9fb0:	bl	0 <coda_mem_record_add_field>
    9fb4:	ldrd	r2, [fp, #-172]	; 0xffffff54
    9fb8:	adds	r2, r2, #26
    9fbc:	adc	r3, r3, #0
    9fc0:	strd	r2, [fp, #-172]	; 0xffffff54
    9fc4:	ldrb	r3, [fp, #-66]	; 0xffffffbe
    9fc8:	cmp	r3, #255	; 0xff
    9fcc:	beq	a4e0 <read_grib1_message+0x1458>
    9fd0:	ldrb	r3, [fp, #-66]	; 0xffffffbe
    9fd4:	sub	r3, r3, #1
    9fd8:	strb	r3, [fp, #-66]	; 0xffffffbe
    9fdc:	ldrb	r3, [fp, #-66]	; 0xffffffbe
    9fe0:	sub	r3, r3, #32
    9fe4:	mov	r2, r3
    9fe8:	asr	r3, r2, #31
    9fec:	ldrd	r0, [fp, #-172]	; 0xffffff54
    9ff0:	adds	r2, r2, r0
    9ff4:	adc	r3, r3, r1
    9ff8:	strd	r2, [fp, #-172]	; 0xffffff54
    9ffc:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    a000:	cmp	r3, #0
    a004:	beq	a290 <read_grib1_message+0x1208>
    a008:	bl	0 <__aeabi_read_tp>
    a00c:	mov	r2, r0
    a010:	ldr	r3, [pc, #112]	; a088 <read_grib1_message+0x1000>
    a014:	ldr	r3, [r2, r3]
    a018:	ldr	r3, [r3, #224]	; 0xe0
    a01c:	str	r3, [fp, #-32]	; 0xffffffe0
    a020:	mov	r1, #0
    a024:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a028:	bl	0 <coda_mem_array_new>
    a02c:	str	r0, [fp, #-84]	; 0xffffffac
    a030:	mov	r3, #0
    a034:	str	r3, [fp, #-16]
    a038:	b	a26c <read_grib1_message+0x11e4>
    a03c:	ldr	r3, [fp, #-160]	; 0xffffff60
    a040:	ldr	r1, [r3, #52]	; 0x34
    a044:	sub	r3, fp, #132	; 0x84
    a048:	str	r3, [sp, #8]
    a04c:	mov	r2, #4
    a050:	mov	r3, #0
    a054:	strd	r2, [sp]
    a058:	ldrd	r2, [fp, #-172]	; 0xffffff54
    a05c:	mov	r0, r1
    a060:	bl	0 <read_bytes>
    a064:	mov	r3, r0
    a068:	cmp	r3, #0
    a06c:	bge	a204 <read_grib1_message+0x117c>
    a070:	ldr	r0, [fp, #-84]	; 0xffffffac
    a074:	bl	0 <coda_dynamic_type_delete>
    a078:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a07c:	bl	0 <coda_dynamic_type_delete>
    a080:	mvn	r3, #0
    a084:	b	aec0 <read_grib1_message+0x1e38>
    a088:	.word	0x00000000
    a08c:	.word	0x00000d48
    a090:	.word	0x00000d58
    a094:	.word	0x00000d60
    a098:	.word	0x00000d7c
    a09c:	.word	0x00000d8c
    a0a0:	.word	0x00000da4
    a0a4:	.word	0x00000dbc
    a0a8:	.word	0x00000dc4
    a0ac:	.word	0x00000dd4
    a0b0:	.word	0x00000ddc
    a0b4:	.word	0x00000de0
    a0b8:	.word	0x00000de8
    a0bc:	.word	0x00000df0
    a0c0:	.word	0x00000e00
    a0c4:	.word	0x00000e04
    a0c8:	.word	0x00000e08
    a0cc:	.word	0x00000e1c
    a0d0:	.word	0x00000e34
    a0d4:	.word	0x00000e60
    a0d8:	.word	0x00000e80
    a0dc:	.word	0x00000e8c
    a0e0:	.word	0x0000067e
    a0e4:	.word	0x00000ea0
    a0e8:	.word	0x00000bd0
    a0ec:	.word	0x00000bf4
    a0f0:	.word	0x000014b4
    a0f4:	.word	0x00000c0c
    a0f8:	.word	0x00000c10
    a0fc:	.word	0x00000c14
    a100:	.word	0x00000c30
    a104:	.word	0x00000c4c
    a108:	.word	0x00000c68
    a10c:	.word	0x00000c80
    a110:	.word	0x00000c9c
    a114:	.word	0x00000cc4
    a118:	.word	0x00000cb0
    a11c:	.word	0x00000cc8
    a120:	.word	0x00000cd8
    a124:	.word	0x00001500
    a128:	.word	0x0000155c
    a12c:	.word	0x00000cec
    a130:	.word	0x0000159c
    a134:	.word	0x00000ea8
    a138:	.word	0x000015fc
    a13c:	.word	0x0000068f
    a140:	.word	0x00002910
    a144:	.word	0x0000fe88
    a148:	.word	0x0003f750
    a14c:	.word	0x00000951
    a150:	.word	0x000013f0
    a154:	.word	0x00000535
    a158:	.word	0x00000511
    a15c:	.word	0x00001081
    a160:	.word	0x000014f5
    a164:	.word	0x00002086
    a168:	.word	0x0000174f
    a16c:	.word	0x00001821
    a170:	.word	0x00003021
    a174:	.word	0x00007e90
    a178:	.word	0x0000139e
    a17c:	.word	0x00003266
    a180:	.word	0x000064cb
    a184:	.word	0x00013d3d
    a188:	.word	0x00027a79
    a18c:	.word	0x0000bf14
    a190:	.word	0x00017e27
    a194:	.word	0x0000a29e
    a198:	.word	0x0001453b
    a19c:	.word	0x0000282b
    a1a0:	.word	0x00000e38
    a1a4:	.word	0x00003f2a
    a1a8:	.word	0x00001ae9
    a1ac:	.word	0x00004b69
    a1b0:	.word	0x00002b20
    a1b4:	.word	0x00001630
    a1b8:	.word	0x00001654
    a1bc:	.word	0x0000168c
    a1c0:	.word	0x0000080f
    a1c4:	.word	0x00000180
    a1c8:	.word	0x000001c8
    a1cc:	.word	0x00001700
    a1d0:	.word	0x00001734
    a1d4:	.word	0x00001764
    a1d8:	.word	0x0000ffff
    a1dc:	.word	0x00001798
    a1e0:	.word	0xfffffed4
    a1e4:	.word	0x00000cfc
    a1e8:	.word	0x00000d0c
    a1ec:	.word	0x00000d20
    a1f0:	.word	0x00000000
    a1f4:	.word	0x00000d30
    a1f8:	.word	0x00000eb0
    a1fc:	.word	0x000017bc
    a200:	.word	0x000017c4
    a204:	bl	0 <__aeabi_read_tp>
    a208:	mov	r2, r0
    a20c:	ldr	r3, [pc, #-36]	; a1f0 <read_grib1_message+0x1168>
    a210:	ldr	r3, [r2, r3]
    a214:	ldr	r3, [r3, #220]	; 0xdc
    a218:	str	r3, [fp, #-32]	; 0xffffffe0
    a21c:	sub	r3, fp, #132	; 0x84
    a220:	mov	r0, r3
    a224:	bl	8f2c <ibmfloat_to_iee754>
    a228:	vmov.f32	s15, s0
    a22c:	vmov.f32	s0, s15
    a230:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a234:	mov	r1, #0
    a238:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a23c:	bl	0 <coda_mem_float_new>
    a240:	str	r0, [fp, #-36]	; 0xffffffdc
    a244:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a248:	ldr	r0, [fp, #-84]	; 0xffffffac
    a24c:	bl	0 <coda_mem_array_add_element>
    a250:	ldrd	r2, [fp, #-172]	; 0xffffff54
    a254:	adds	r2, r2, #4
    a258:	adc	r3, r3, #0
    a25c:	strd	r2, [fp, #-172]	; 0xffffff54
    a260:	ldr	r3, [fp, #-16]
    a264:	add	r3, r3, #1
    a268:	str	r3, [fp, #-16]
    a26c:	ldrb	r2, [fp, #-65]	; 0xffffffbf
    a270:	ldr	r3, [fp, #-16]
    a274:	cmp	r2, r3
    a278:	bgt	a03c <read_grib1_message+0xfb4>
    a27c:	mov	r3, #0
    a280:	ldr	r2, [fp, #-84]	; 0xffffffac
    a284:	ldr	r1, [pc, #-364]	; a120 <read_grib1_message+0x1098>
    a288:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a28c:	bl	0 <coda_mem_record_add_field>
    a290:	ldrb	r2, [fp, #-66]	; 0xffffffbe
    a294:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    a298:	lsl	r3, r3, #2
    a29c:	add	r2, r2, r3
    a2a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a2a4:	cmp	r2, r3
    a2a8:	bge	a4a4 <read_grib1_message+0x141c>
    a2ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
    a2b0:	ldr	r2, [pc, #-224]	; a1d8 <read_grib1_message+0x1150>
    a2b4:	cmp	r3, r2
    a2b8:	bne	a2c8 <read_grib1_message+0x1240>
    a2bc:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a2c0:	str	r3, [fp, #-20]	; 0xffffffec
    a2c4:	b	a300 <read_grib1_message+0x1278>
    a2c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a2cc:	ldr	r2, [pc, #-252]	; a1d8 <read_grib1_message+0x1150>
    a2d0:	cmp	r3, r2
    a2d4:	bne	a2e4 <read_grib1_message+0x125c>
    a2d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
    a2dc:	str	r3, [fp, #-20]	; 0xffffffec
    a2e0:	b	a300 <read_grib1_message+0x1278>
    a2e4:	ldr	r1, [pc, #-456]	; a124 <read_grib1_message+0x109c>
    a2e8:	ldr	r0, [pc, #-272]	; a1e0 <read_grib1_message+0x1158>
    a2ec:	bl	0 <coda_set_error>
    a2f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a2f4:	bl	0 <coda_dynamic_type_delete>
    a2f8:	mvn	r3, #0
    a2fc:	b	aec0 <read_grib1_message+0x1e38>
    a300:	ldrb	r2, [fp, #-66]	; 0xffffffbe
    a304:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    a308:	lsl	r3, r3, #2
    a30c:	add	r3, r2, r3
    a310:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a314:	sub	r2, r2, r3
    a318:	ldr	r3, [fp, #-20]	; 0xffffffec
    a31c:	lsl	r3, r3, #1
    a320:	cmp	r2, r3
    a324:	beq	a364 <read_grib1_message+0x12dc>
    a328:	ldrb	r2, [fp, #-66]	; 0xffffffbe
    a32c:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    a330:	lsl	r3, r3, #2
    a334:	add	r3, r2, r3
    a338:	ldr	r2, [fp, #-28]	; 0xffffffe4
    a33c:	sub	r2, r2, r3
    a340:	ldr	r3, [fp, #-20]	; 0xffffffec
    a344:	lsl	r3, r3, #1
    a348:	ldr	r1, [pc, #-552]	; a128 <read_grib1_message+0x10a0>
    a34c:	ldr	r0, [pc, #-372]	; a1e0 <read_grib1_message+0x1158>
    a350:	bl	0 <coda_set_error>
    a354:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a358:	bl	0 <coda_dynamic_type_delete>
    a35c:	mvn	r3, #0
    a360:	b	aec0 <read_grib1_message+0x1e38>
    a364:	bl	0 <__aeabi_read_tp>
    a368:	mov	r2, r0
    a36c:	ldr	r3, [pc, #-388]	; a1f0 <read_grib1_message+0x1168>
    a370:	ldr	r3, [r2, r3]
    a374:	ldr	r3, [r3, #232]	; 0xe8
    a378:	str	r3, [fp, #-32]	; 0xffffffe0
    a37c:	mov	r1, #0
    a380:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a384:	bl	0 <coda_mem_array_new>
    a388:	str	r0, [fp, #-88]	; 0xffffffa8
    a38c:	mov	r3, #0
    a390:	str	r3, [fp, #-12]
    a394:	mov	r3, #0
    a398:	str	r3, [fp, #-16]
    a39c:	b	a47c <read_grib1_message+0x13f4>
    a3a0:	ldr	r3, [fp, #-160]	; 0xffffff60
    a3a4:	ldr	r1, [r3, #52]	; 0x34
    a3a8:	sub	r3, fp, #132	; 0x84
    a3ac:	str	r3, [sp, #8]
    a3b0:	mov	r2, #2
    a3b4:	mov	r3, #0
    a3b8:	strd	r2, [sp]
    a3bc:	ldrd	r2, [fp, #-172]	; 0xffffff54
    a3c0:	mov	r0, r1
    a3c4:	bl	0 <read_bytes>
    a3c8:	mov	r3, r0
    a3cc:	cmp	r3, #0
    a3d0:	bge	a3ec <read_grib1_message+0x1364>
    a3d4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    a3d8:	bl	0 <coda_dynamic_type_delete>
    a3dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a3e0:	bl	0 <coda_dynamic_type_delete>
    a3e4:	mvn	r3, #0
    a3e8:	b	aec0 <read_grib1_message+0x1e38>
    a3ec:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    a3f0:	lsl	r3, r3, #8
    a3f4:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    a3f8:	add	r3, r3, r2
    a3fc:	ldr	r2, [fp, #-12]
    a400:	add	r3, r2, r3
    a404:	str	r3, [fp, #-12]
    a408:	bl	0 <__aeabi_read_tp>
    a40c:	mov	r2, r0
    a410:	ldr	r3, [pc, #-552]	; a1f0 <read_grib1_message+0x1168>
    a414:	ldr	r3, [r2, r3]
    a418:	ldr	r3, [r3, #228]	; 0xe4
    a41c:	str	r3, [fp, #-32]	; 0xffffffe0
    a420:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    a424:	uxth	r3, r3
    a428:	lsl	r3, r3, #8
    a42c:	uxth	r2, r3
    a430:	ldrb	r3, [fp, #-131]	; 0xffffff7d
    a434:	uxth	r3, r3
    a438:	add	r3, r2, r3
    a43c:	uxth	r3, r3
    a440:	ldr	r2, [fp, #-24]	; 0xffffffe8
    a444:	mov	r1, #0
    a448:	ldr	r0, [fp, #-32]	; 0xffffffe0
    a44c:	bl	0 <coda_mem_uint16_new>
    a450:	str	r0, [fp, #-36]	; 0xffffffdc
    a454:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a458:	ldr	r0, [fp, #-88]	; 0xffffffa8
    a45c:	bl	0 <coda_mem_array_add_element>
    a460:	ldrd	r2, [fp, #-172]	; 0xffffff54
    a464:	adds	r2, r2, #2
    a468:	adc	r3, r3, #0
    a46c:	strd	r2, [fp, #-172]	; 0xffffff54
    a470:	ldr	r3, [fp, #-16]
    a474:	add	r3, r3, #1
    a478:	str	r3, [fp, #-16]
    a47c:	ldr	r2, [fp, #-16]
    a480:	ldr	r3, [fp, #-20]	; 0xffffffec
    a484:	cmp	r2, r3
    a488:	blt	a3a0 <read_grib1_message+0x1318>
    a48c:	mov	r3, #0
    a490:	ldr	r2, [fp, #-88]	; 0xffffffa8
    a494:	ldr	r1, [pc, #-880]	; a12c <read_grib1_message+0x10a4>
    a498:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a49c:	bl	0 <coda_mem_record_add_field>
    a4a0:	b	a548 <read_grib1_message+0x14c0>
    a4a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
    a4a8:	ldr	r2, [pc, #-728]	; a1d8 <read_grib1_message+0x1150>
    a4ac:	cmp	r3, r2
    a4b0:	beq	a4c4 <read_grib1_message+0x143c>
    a4b4:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a4b8:	ldr	r2, [pc, #-744]	; a1d8 <read_grib1_message+0x1150>
    a4bc:	cmp	r3, r2
    a4c0:	bne	a548 <read_grib1_message+0x14c0>
    a4c4:	ldr	r1, [pc, #-924]	; a130 <read_grib1_message+0x10a8>
    a4c8:	ldr	r0, [pc, #-752]	; a1e0 <read_grib1_message+0x1158>
    a4cc:	bl	0 <coda_set_error>
    a4d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a4d4:	bl	0 <coda_dynamic_type_delete>
    a4d8:	mvn	r3, #0
    a4dc:	b	aec0 <read_grib1_message+0x1e38>
    a4e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
    a4e4:	ldr	r2, [pc, #-788]	; a1d8 <read_grib1_message+0x1150>
    a4e8:	cmp	r3, r2
    a4ec:	beq	a500 <read_grib1_message+0x1478>
    a4f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
    a4f4:	ldr	r2, [pc, #-804]	; a1d8 <read_grib1_message+0x1150>
    a4f8:	cmp	r3, r2
    a4fc:	bne	a51c <read_grib1_message+0x1494>
    a500:	ldr	r1, [pc, #-984]	; a130 <read_grib1_message+0x10a8>
    a504:	ldr	r0, [pc, #-812]	; a1e0 <read_grib1_message+0x1158>
    a508:	bl	0 <coda_set_error>
    a50c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    a510:	bl	0 <coda_dynamic_type_delete>
    a514:	mvn	r3, #0
    a518:	b	aec0 <read_grib1_message+0x1e38>
    a51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a520:	cmp	r3, #32
    a524:	ble	a548 <read_grib1_message+0x14c0>
    a528:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a52c:	sub	r3, r3, #32
    a530:	mov	r2, r3
    a534:	asr	r3, r2, #31
    a538:	ldrd	r0, [fp, #-172]	; 0xffffff54
    a53c:	adds	r2, r2, r0
    a540:	adc	r3, r3, r1
    a544:	strd	r2, [fp, #-172]	; 0xffffff54
    a548:	mov	r3, #0
    a54c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    a550:	ldr	r1, [pc, #-1060]	; a134 <read_grib1_message+0x10ac>
    a554:	ldr	r0, [fp, #-164]	; 0xffffff5c
    a558:	bl	0 <coda_mem_record_add_field>
    a55c:	b	a8e4 <read_grib1_message+0x185c>
    a560:	ldrb	r3, [fp, #-127]	; 0xffffff81
    a564:	mov	r2, r3
    a568:	ldr	r1, [pc, #-1080]	; a138 <read_grib1_message+0x10b0>
    a56c:	ldr	r0, [pc, #-916]	; a1e0 <read_grib1_message+0x1158>
    a570:	bl	0 <coda_set_error>
    a574:	mvn	r3, #0
    a578:	b	aec0 <read_grib1_message+0x1e38>
    a57c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    a580:	sub	r3, r3, #1
    a584:	cmp	r3, #106	; 0x6a
    a588:	ldrls	pc, [pc, r3, lsl #2]
    a58c:	b	a8c8 <read_grib1_message+0x1840>
    a590:	.word	0x0000a73c
    a594:	.word	0x0000a748
    a598:	.word	0x0000a754
    a59c:	.word	0x0000a760
    a5a0:	.word	0x0000a76c
    a5a4:	.word	0x0000a76c
    a5a8:	.word	0x0000a8c8
    a5ac:	.word	0x0000a778
    a5b0:	.word	0x0000a8c8
    a5b4:	.word	0x0000a8c8
    a5b8:	.word	0x0000a8c8
    a5bc:	.word	0x0000a8c8
    a5c0:	.word	0x0000a8c8
    a5c4:	.word	0x0000a8c8
    a5c8:	.word	0x0000a8c8
    a5cc:	.word	0x0000a8c8
    a5d0:	.word	0x0000a8c8
    a5d4:	.word	0x0000a8c8
    a5d8:	.word	0x0000a8c8
    a5dc:	.word	0x0000a8c8
    a5e0:	.word	0x0000a784
    a5e4:	.word	0x0000a784
    a5e8:	.word	0x0000a784
    a5ec:	.word	0x0000a784
    a5f0:	.word	0x0000a790
    a5f4:	.word	0x0000a790
    a5f8:	.word	0x0000a79c
    a5fc:	.word	0x0000a79c
    a600:	.word	0x0000a7a8
    a604:	.word	0x0000a7a8
    a608:	.word	0x0000a8c8
    a60c:	.word	0x0000a8c8
    a610:	.word	0x0000a7b4
    a614:	.word	0x0000a7b4
    a618:	.word	0x0000a8c8
    a61c:	.word	0x0000a8c8
    a620:	.word	0x0000a8c8
    a624:	.word	0x0000a8c8
    a628:	.word	0x0000a8c8
    a62c:	.word	0x0000a8c8
    a630:	.word	0x0000a8c8
    a634:	.word	0x0000a8c8
    a638:	.word	0x0000a8c8
    a63c:	.word	0x0000a8c8
    a640:	.word	0x0000a8c8
    a644:	.word	0x0000a8c8
    a648:	.word	0x0000a8c8
    a64c:	.word	0x0000a8c8
    a650:	.word	0x0000a8c8
    a654:	.word	0x0000a7c0
    a658:	.word	0x0000a8c8
    a65c:	.word	0x0000a8c8
    a660:	.word	0x0000a7cc
    a664:	.word	0x0000a8c8
    a668:	.word	0x0000a7d8
    a66c:	.word	0x0000a7d8
    a670:	.word	0x0000a8c8
    a674:	.word	0x0000a8c8
    a678:	.word	0x0000a8c8
    a67c:	.word	0x0000a8c8
    a680:	.word	0x0000a7e4
    a684:	.word	0x0000a7e4
    a688:	.word	0x0000a7e4
    a68c:	.word	0x0000a7e4
    a690:	.word	0x0000a8c8
    a694:	.word	0x0000a8c8
    a698:	.word	0x0000a8c8
    a69c:	.word	0x0000a8c8
    a6a0:	.word	0x0000a8c8
    a6a4:	.word	0x0000a8c8
    a6a8:	.word	0x0000a8c8
    a6ac:	.word	0x0000a8c8
    a6b0:	.word	0x0000a8c8
    a6b4:	.word	0x0000a8c8
    a6b8:	.word	0x0000a7f0
    a6bc:	.word	0x0000a7f0
    a6c0:	.word	0x0000a7f0
    a6c4:	.word	0x0000a8c8
    a6c8:	.word	0x0000a8c8
    a6cc:	.word	0x0000a8c8
    a6d0:	.word	0x0000a8c8
    a6d4:	.word	0x0000a8c8
    a6d8:	.word	0x0000a8c8
    a6dc:	.word	0x0000a8c8
    a6e0:	.word	0x0000a7fc
    a6e4:	.word	0x0000a7fc
    a6e8:	.word	0x0000a808
    a6ec:	.word	0x0000a8c8
    a6f0:	.word	0x0000a8c8
    a6f4:	.word	0x0000a814
    a6f8:	.word	0x0000a820
    a6fc:	.word	0x0000a82c
    a700:	.word	0x0000a838
    a704:	.word	0x0000a844
    a708:	.word	0x0000a850
    a70c:	.word	0x0000a85c
    a710:	.word	0x0000a868
    a714:	.word	0x0000a8c8
    a718:	.word	0x0000a8c8
    a71c:	.word	0x0000a874
    a720:	.word	0x0000a880
    a724:	.word	0x0000a8c8
    a728:	.word	0x0000a88c
    a72c:	.word	0x0000a898
    a730:	.word	0x0000a8a4
    a734:	.word	0x0000a8b0
    a738:	.word	0x0000a8bc
    a73c:	ldr	r3, [pc, #-1544]	; a13c <read_grib1_message+0x10b4>
    a740:	str	r3, [fp, #-12]
    a744:	b	a8e4 <read_grib1_message+0x185c>
    a748:	ldr	r3, [pc, #-1552]	; a140 <read_grib1_message+0x10b8>
    a74c:	str	r3, [fp, #-12]
    a750:	b	a8e4 <read_grib1_message+0x185c>
    a754:	ldr	r3, [pc, #-1560]	; a144 <read_grib1_message+0x10bc>
    a758:	str	r3, [fp, #-12]
    a75c:	b	a8e4 <read_grib1_message+0x185c>
    a760:	ldr	r3, [pc, #-1568]	; a148 <read_grib1_message+0x10c0>
    a764:	str	r3, [fp, #-12]
    a768:	b	a8e4 <read_grib1_message+0x185c>
    a76c:	ldr	r3, [pc, #-1576]	; a14c <read_grib1_message+0x10c4>
    a770:	str	r3, [fp, #-12]
    a774:	b	a8e4 <read_grib1_message+0x185c>
    a778:	ldr	r3, [pc, #-1584]	; a150 <read_grib1_message+0x10c8>
    a77c:	str	r3, [fp, #-12]
    a780:	b	a8e4 <read_grib1_message+0x185c>
    a784:	ldr	r3, [pc, #-1592]	; a154 <read_grib1_message+0x10cc>
    a788:	str	r3, [fp, #-12]
    a78c:	b	a8e4 <read_grib1_message+0x185c>
    a790:	ldr	r3, [pc, #-1600]	; a158 <read_grib1_message+0x10d0>
    a794:	str	r3, [fp, #-12]
    a798:	b	a8e4 <read_grib1_message+0x185c>
    a79c:	ldr	r3, [pc, #-1608]	; a15c <read_grib1_message+0x10d4>
    a7a0:	str	r3, [fp, #-12]
    a7a4:	b	a8e4 <read_grib1_message+0x185c>
    a7a8:	ldr	r3, [pc, #-1616]	; a160 <read_grib1_message+0x10d8>
    a7ac:	str	r3, [fp, #-12]
    a7b0:	b	a8e4 <read_grib1_message+0x185c>
    a7b4:	ldr	r3, [pc, #-1624]	; a164 <read_grib1_message+0x10dc>
    a7b8:	str	r3, [fp, #-12]
    a7bc:	b	a8e4 <read_grib1_message+0x185c>
    a7c0:	mov	r3, #964	; 0x3c4
    a7c4:	str	r3, [fp, #-12]
    a7c8:	b	a8e4 <read_grib1_message+0x185c>
    a7cc:	ldr	r3, [pc, #-1644]	; a168 <read_grib1_message+0x10e0>
    a7d0:	str	r3, [fp, #-12]
    a7d4:	b	a8e4 <read_grib1_message+0x185c>
    a7d8:	ldr	r3, [pc, #-1652]	; a16c <read_grib1_message+0x10e4>
    a7dc:	str	r3, [fp, #-12]
    a7e0:	b	a8e4 <read_grib1_message+0x185c>
    a7e4:	mov	r3, #4096	; 0x1000
    a7e8:	str	r3, [fp, #-12]
    a7ec:	b	a8e4 <read_grib1_message+0x185c>
    a7f0:	ldr	r3, [pc, #-1672]	; a170 <read_grib1_message+0x10e8>
    a7f4:	str	r3, [fp, #-12]
    a7f8:	b	a8e4 <read_grib1_message+0x185c>
    a7fc:	ldr	r3, [pc, #-1680]	; a174 <read_grib1_message+0x10ec>
    a800:	str	r3, [fp, #-12]
    a804:	b	a8e4 <read_grib1_message+0x185c>
    a808:	ldr	r3, [pc, #-1688]	; a178 <read_grib1_message+0x10f0>
    a80c:	str	r3, [fp, #-12]
    a810:	b	a8e4 <read_grib1_message+0x185c>
    a814:	ldr	r3, [pc, #-1696]	; a17c <read_grib1_message+0x10f4>
    a818:	str	r3, [fp, #-12]
    a81c:	b	a8e4 <read_grib1_message+0x185c>
    a820:	ldr	r3, [pc, #-1704]	; a180 <read_grib1_message+0x10f8>
    a824:	str	r3, [fp, #-12]
    a828:	b	a8e4 <read_grib1_message+0x185c>
    a82c:	ldr	r3, [pc, #-1712]	; a184 <read_grib1_message+0x10fc>
    a830:	str	r3, [fp, #-12]
    a834:	b	a8e4 <read_grib1_message+0x185c>
    a838:	ldr	r3, [pc, #-1720]	; a188 <read_grib1_message+0x1100>
    a83c:	str	r3, [fp, #-12]
    a840:	b	a8e4 <read_grib1_message+0x185c>
    a844:	ldr	r3, [pc, #-1728]	; a18c <read_grib1_message+0x1104>
    a848:	str	r3, [fp, #-12]
    a84c:	b	a8e4 <read_grib1_message+0x185c>
    a850:	ldr	r3, [pc, #-1736]	; a190 <read_grib1_message+0x1108>
    a854:	str	r3, [fp, #-12]
    a858:	b	a8e4 <read_grib1_message+0x185c>
    a85c:	ldr	r3, [pc, #-1744]	; a194 <read_grib1_message+0x110c>
    a860:	str	r3, [fp, #-12]
    a864:	b	a8e4 <read_grib1_message+0x185c>
    a868:	ldr	r3, [pc, #-1752]	; a198 <read_grib1_message+0x1110>
    a86c:	str	r3, [fp, #-12]
    a870:	b	a8e4 <read_grib1_message+0x185c>
    a874:	ldr	r3, [pc, #-1748]	; a1a8 <read_grib1_message+0x1120>
    a878:	str	r3, [fp, #-12]
    a87c:	b	a8e4 <read_grib1_message+0x185c>
    a880:	ldr	r3, [pc, #-1772]	; a19c <read_grib1_message+0x1114>
    a884:	str	r3, [fp, #-12]
    a888:	b	a8e4 <read_grib1_message+0x185c>
    a88c:	ldr	r3, [pc, #-1780]	; a1a0 <read_grib1_message+0x1118>
    a890:	str	r3, [fp, #-12]
    a894:	b	a8e4 <read_grib1_message+0x185c>
    a898:	ldr	r3, [pc, #-1788]	; a1a4 <read_grib1_message+0x111c>
    a89c:	str	r3, [fp, #-12]
    a8a0:	b	a8e4 <read_grib1_message+0x185c>
    a8a4:	ldr	r3, [pc, #-1796]	; a1a8 <read_grib1_message+0x1120>
    a8a8:	str	r3, [fp, #-12]
    a8ac:	b	a8e4 <read_grib1_message+0x185c>
    a8b0:	ldr	r3, [pc, #-1804]	; a1ac <read_grib1_message+0x1124>
    a8b4:	str	r3, [fp, #-12]
    a8b8:	b	a8e4 <read_grib1_message+0x185c>
    a8bc:	ldr	r3, [pc, #-1812]	; a1b0 <read_grib1_message+0x1128>
    a8c0:	str	r3, [fp, #-12]
    a8c4:	b	a8e4 <read_grib1_message+0x185c>
    a8c8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
    a8cc:	mov	r2, r3
    a8d0:	ldr	r1, [pc, #-1828]	; a1b4 <read_grib1_message+0x112c>
    a8d4:	ldr	r0, [pc, #-1788]	; a1e0 <read_grib1_message+0x1158>
    a8d8:	bl	0 <coda_set_error>
    a8dc:	mvn	r3, #0
    a8e0:	b	aec0 <read_grib1_message+0x1e38>
    a8e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
    a8e8:	cmp	r3, #0
    a8ec:	beq	aac8 <read_grib1_message+0x1a40>
    a8f0:	ldr	r3, [fp, #-160]	; 0xffffff60
    a8f4:	ldr	r1, [r3, #52]	; 0x34
    a8f8:	sub	r3, fp, #132	; 0x84
    a8fc:	str	r3, [sp, #8]
    a900:	mov	r2, #6
    a904:	mov	r3, #0
    a908:	strd	r2, [sp]
    a90c:	ldrd	r2, [fp, #-172]	; 0xffffff54
    a910:	mov	r0, r1
    a914:	bl	0 <read_bytes>
    a918:	mov	r3, r0
    a91c:	cmp	r3, #0
    a920:	bge	a92c <read_grib1_message+0x18a4>
    a924:	mvn	r3, #0
    a928:	b	aec0 <read_grib1_message+0x1e38>
    a92c:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    a930:	lsl	r3, r3, #8
    a934:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    a938:	add	r3, r3, r2
    a93c:	lsl	r3, r3, #8
    a940:	ldrb	r2, [fp, #-130]	; 0xffffff7e
    a944:	add	r3, r3, r2
    a948:	str	r3, [fp, #-28]	; 0xffffffe4
    a94c:	ldrb	r3, [fp, #-128]	; 0xffffff80
    a950:	lsl	r3, r3, #8
    a954:	ldrb	r2, [fp, #-127]	; 0xffffff81
    a958:	add	r3, r3, r2
    a95c:	cmp	r3, #0
    a960:	beq	a978 <read_grib1_message+0x18f0>
    a964:	ldr	r1, [pc, #-1972]	; a1b8 <read_grib1_message+0x1130>
    a968:	ldr	r0, [pc, #-1936]	; a1e0 <read_grib1_message+0x1158>
    a96c:	bl	0 <coda_set_error>
    a970:	mvn	r3, #0
    a974:	b	aec0 <read_grib1_message+0x1e38>
    a978:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a97c:	sub	r2, r3, #6
    a980:	ldr	r3, [fp, #-12]
    a984:	asr	r3, r3, #3
    a988:	ldr	r1, [fp, #-12]
    a98c:	uxtb	r1, r1
    a990:	and	r1, r1, #7
    a994:	cmp	r1, #0
    a998:	movne	r1, #1
    a99c:	moveq	r1, #0
    a9a0:	uxtb	r1, r1
    a9a4:	add	r3, r3, r1
    a9a8:	cmp	r2, r3
    a9ac:	bge	aa04 <read_grib1_message+0x197c>
    a9b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    a9b4:	sub	r1, r3, #6
    a9b8:	ldr	r3, [fp, #-12]
    a9bc:	asr	r3, r3, #3
    a9c0:	ldr	r2, [fp, #-12]
    a9c4:	uxtb	r2, r2
    a9c8:	and	r2, r2, #7
    a9cc:	cmp	r2, #0
    a9d0:	movne	r2, #1
    a9d4:	moveq	r2, #0
    a9d8:	uxtb	r2, r2
    a9dc:	add	r2, r3, r2
    a9e0:	ldr	r3, [fp, #-12]
    a9e4:	str	r3, [sp]
    a9e8:	mov	r3, r2
    a9ec:	mov	r2, r1
    a9f0:	ldr	r1, [pc, #-2108]	; a1bc <read_grib1_message+0x1134>
    a9f4:	ldr	r0, [pc, #-2076]	; a1e0 <read_grib1_message+0x1158>
    a9f8:	bl	0 <coda_set_error>
    a9fc:	mvn	r3, #0
    aa00:	b	aec0 <read_grib1_message+0x1e38>
    aa04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa08:	sub	r3, r3, #6
    aa0c:	mov	r0, r3
    aa10:	bl	0 <malloc>
    aa14:	mov	r3, r0
    aa18:	str	r3, [fp, #-8]
    aa1c:	ldr	r3, [fp, #-8]
    aa20:	cmp	r3, #0
    aa24:	bne	aa50 <read_grib1_message+0x19c8>
    aa28:	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa2c:	sub	r2, r3, #6
    aa30:	ldr	r3, [pc, #-2168]	; a1c0 <read_grib1_message+0x1138>
    aa34:	str	r3, [sp]
    aa38:	ldr	r3, [pc, #-2172]	; a1c4 <read_grib1_message+0x113c>
    aa3c:	ldr	r1, [pc, #-2172]	; a1c8 <read_grib1_message+0x1140>
    aa40:	mvn	r0, #0
    aa44:	bl	0 <coda_set_error>
    aa48:	mvn	r3, #0
    aa4c:	b	aec0 <read_grib1_message+0x1e38>
    aa50:	ldr	r3, [fp, #-160]	; 0xffffff60
    aa54:	ldr	lr, [r3, #52]	; 0x34
    aa58:	ldrd	r2, [fp, #-172]	; 0xffffff54
    aa5c:	adds	r0, r2, #6
    aa60:	adc	r1, r3, #0
    aa64:	ldr	r3, [fp, #-28]	; 0xffffffe4
    aa68:	sub	r3, r3, #6
    aa6c:	mov	r2, r3
    aa70:	asr	r3, r2, #31
    aa74:	ldr	ip, [fp, #-8]
    aa78:	str	ip, [sp, #8]
    aa7c:	strd	r2, [sp]
    aa80:	mov	r2, r0
    aa84:	mov	r3, r1
    aa88:	mov	r0, lr
    aa8c:	bl	0 <read_bytes>
    aa90:	mov	r3, r0
    aa94:	cmp	r3, #0
    aa98:	bge	aaac <read_grib1_message+0x1a24>
    aa9c:	ldr	r0, [fp, #-8]
    aaa0:	bl	0 <free>
    aaa4:	mvn	r3, #0
    aaa8:	b	aec0 <read_grib1_message+0x1e38>
    aaac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    aab0:	mov	r2, r3
    aab4:	asr	r3, r2, #31
    aab8:	ldrd	r0, [fp, #-172]	; 0xffffff54
    aabc:	adds	r2, r2, r0
    aac0:	adc	r3, r3, r1
    aac4:	strd	r2, [fp, #-172]	; 0xffffff54
    aac8:	ldr	r3, [fp, #-160]	; 0xffffff60
    aacc:	ldr	r1, [r3, #52]	; 0x34
    aad0:	sub	r3, fp, #132	; 0x84
    aad4:	str	r3, [sp, #8]
    aad8:	mov	r2, #11
    aadc:	mov	r3, #0
    aae0:	strd	r2, [sp]
    aae4:	ldrd	r2, [fp, #-172]	; 0xffffff54
    aae8:	mov	r0, r1
    aaec:	bl	0 <read_bytes>
    aaf0:	mov	r3, r0
    aaf4:	cmp	r3, #0
    aaf8:	bge	ab18 <read_grib1_message+0x1a90>
    aafc:	ldr	r3, [fp, #-8]
    ab00:	cmp	r3, #0
    ab04:	beq	ab10 <read_grib1_message+0x1a88>
    ab08:	ldr	r0, [fp, #-8]
    ab0c:	bl	0 <free>
    ab10:	mvn	r3, #0
    ab14:	b	aec0 <read_grib1_message+0x1e38>
    ab18:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    ab1c:	lsl	r3, r3, #8
    ab20:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    ab24:	add	r3, r3, r2
    ab28:	lsl	r3, r3, #8
    ab2c:	ldrb	r2, [fp, #-130]	; 0xffffff7e
    ab30:	add	r3, r3, r2
    ab34:	str	r3, [fp, #-28]	; 0xffffffe4
    ab38:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    ab3c:	sxtb	r3, r3
    ab40:	cmp	r3, #0
    ab44:	bge	ab70 <read_grib1_message+0x1ae8>
    ab48:	ldr	r3, [fp, #-8]
    ab4c:	cmp	r3, #0
    ab50:	beq	ab5c <read_grib1_message+0x1ad4>
    ab54:	ldr	r0, [fp, #-8]
    ab58:	bl	0 <free>
    ab5c:	ldr	r1, [pc, #-2456]	; a1cc <read_grib1_message+0x1144>
    ab60:	ldr	r0, [pc, #-2440]	; a1e0 <read_grib1_message+0x1158>
    ab64:	bl	0 <coda_set_error>
    ab68:	mvn	r3, #0
    ab6c:	b	aec0 <read_grib1_message+0x1e38>
    ab70:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    ab74:	and	r3, r3, #64	; 0x40
    ab78:	cmp	r3, #0
    ab7c:	beq	aba8 <read_grib1_message+0x1b20>
    ab80:	ldr	r3, [fp, #-8]
    ab84:	cmp	r3, #0
    ab88:	beq	ab94 <read_grib1_message+0x1b0c>
    ab8c:	ldr	r0, [fp, #-8]
    ab90:	bl	0 <free>
    ab94:	ldr	r1, [pc, #-2508]	; a1d0 <read_grib1_message+0x1148>
    ab98:	ldr	r0, [pc, #-2496]	; a1e0 <read_grib1_message+0x1158>
    ab9c:	bl	0 <coda_set_error>
    aba0:	mvn	r3, #0
    aba4:	b	aec0 <read_grib1_message+0x1e38>
    aba8:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    abac:	and	r3, r3, #16
    abb0:	cmp	r3, #0
    abb4:	beq	abe0 <read_grib1_message+0x1b58>
    abb8:	ldr	r3, [fp, #-8]
    abbc:	cmp	r3, #0
    abc0:	beq	abcc <read_grib1_message+0x1b44>
    abc4:	ldr	r0, [fp, #-8]
    abc8:	bl	0 <free>
    abcc:	ldr	r1, [pc, #-2560]	; a1d4 <read_grib1_message+0x114c>
    abd0:	ldr	r0, [pc, #-2552]	; a1e0 <read_grib1_message+0x1158>
    abd4:	bl	0 <coda_set_error>
    abd8:	mvn	r3, #0
    abdc:	b	aec0 <read_grib1_message+0x1e38>
    abe0:	ldrb	r3, [fp, #-128]	; 0xffffff80
    abe4:	sxtb	r3, r3
    abe8:	cmp	r3, #0
    abec:	bge	abf8 <read_grib1_message+0x1b70>
    abf0:	ldr	r2, [pc, #-2592]	; a1d8 <read_grib1_message+0x1150>
    abf4:	b	abfc <read_grib1_message+0x1b74>
    abf8:	mov	r2, #1
    abfc:	ldrb	r3, [fp, #-128]	; 0xffffff80
    ac00:	and	r3, r3, #127	; 0x7f
    ac04:	lsl	r3, r3, #8
    ac08:	ldrb	r1, [fp, #-127]	; 0xffffff81
    ac0c:	add	r3, r3, r1
    ac10:	uxth	r3, r3
    ac14:	smulbb	r3, r2, r3
    ac18:	uxth	r3, r3
    ac1c:	strh	r3, [fp, #-90]	; 0xffffffa6
    ac20:	sub	r3, fp, #132	; 0x84
    ac24:	add	r3, r3, #6
    ac28:	mov	r0, r3
    ac2c:	bl	8f2c <ibmfloat_to_iee754>
    ac30:	vstr	s0, [fp, #-96]	; 0xffffffa0
    ac34:	ldrb	r3, [fp, #-122]	; 0xffffff86
    ac38:	strb	r3, [fp, #-97]	; 0xffffff9f
    ac3c:	ldrb	r3, [fp, #-97]	; 0xffffff9f
    ac40:	cmp	r3, #63	; 0x3f
    ac44:	bls	ac78 <read_grib1_message+0x1bf0>
    ac48:	ldr	r3, [fp, #-8]
    ac4c:	cmp	r3, #0
    ac50:	beq	ac5c <read_grib1_message+0x1bd4>
    ac54:	ldr	r0, [fp, #-8]
    ac58:	bl	0 <free>
    ac5c:	ldrb	r3, [fp, #-97]	; 0xffffff9f
    ac60:	mov	r2, r3
    ac64:	ldr	r1, [pc, #-2704]	; a1dc <read_grib1_message+0x1154>
    ac68:	ldr	r0, [pc, #-2704]	; a1e0 <read_grib1_message+0x1158>
    ac6c:	bl	0 <coda_set_error>
    ac70:	mvn	r3, #0
    ac74:	b	aec0 <read_grib1_message+0x1e38>
    ac78:	bl	0 <__aeabi_read_tp>
    ac7c:	mov	r2, r0
    ac80:	ldr	r3, [pc, #-2712]	; a1f0 <read_grib1_message+0x1168>
    ac84:	ldr	r3, [r2, r3]
    ac88:	add	r3, r3, #268	; 0x10c
    ac8c:	ldr	r3, [r3]
    ac90:	mov	r1, #0
    ac94:	mov	r0, r3
    ac98:	bl	0 <coda_mem_record_new>
    ac9c:	str	r0, [fp, #-104]	; 0xffffff98
    aca0:	bl	0 <__aeabi_read_tp>
    aca4:	mov	r2, r0
    aca8:	ldr	r3, [pc, #-2752]	; a1f0 <read_grib1_message+0x1168>
    acac:	ldr	r3, [r2, r3]
    acb0:	ldr	r3, [r3, #248]	; 0xf8
    acb4:	str	r3, [fp, #-32]	; 0xffffffe0
    acb8:	ldrb	r3, [fp, #-97]	; 0xffffff9f
    acbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    acc0:	mov	r1, #0
    acc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    acc8:	bl	0 <coda_mem_uint8_new>
    accc:	str	r0, [fp, #-36]	; 0xffffffdc
    acd0:	mov	r3, #0
    acd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
    acd8:	ldr	r1, [pc, #-2812]	; a1e4 <read_grib1_message+0x115c>
    acdc:	ldr	r0, [fp, #-104]	; 0xffffff98
    ace0:	bl	0 <coda_mem_record_add_field>
    ace4:	bl	0 <__aeabi_read_tp>
    ace8:	mov	r2, r0
    acec:	ldr	r3, [pc, #-2820]	; a1f0 <read_grib1_message+0x1168>
    acf0:	ldr	r3, [r2, r3]
    acf4:	ldr	r3, [r3, #252]	; 0xfc
    acf8:	str	r3, [fp, #-32]	; 0xffffffe0
    acfc:	ldrsh	r3, [fp, #-90]	; 0xffffffa6
    ad00:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ad04:	mov	r1, #0
    ad08:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ad0c:	bl	0 <coda_mem_int16_new>
    ad10:	str	r0, [fp, #-36]	; 0xffffffdc
    ad14:	mov	r3, #0
    ad18:	ldr	r2, [fp, #-36]	; 0xffffffdc
    ad1c:	ldr	r1, [pc, #-2876]	; a1e8 <read_grib1_message+0x1160>
    ad20:	ldr	r0, [fp, #-104]	; 0xffffff98
    ad24:	bl	0 <coda_mem_record_add_field>
    ad28:	bl	0 <__aeabi_read_tp>
    ad2c:	mov	r2, r0
    ad30:	ldr	r3, [pc, #-2888]	; a1f0 <read_grib1_message+0x1168>
    ad34:	ldr	r3, [r2, r3]
    ad38:	ldr	r3, [r3, #256]	; 0x100
    ad3c:	str	r3, [fp, #-32]	; 0xffffffe0
    ad40:	vldr	s0, [fp, #-96]	; 0xffffffa0
    ad44:	ldr	r2, [fp, #-24]	; 0xffffffe8
    ad48:	mov	r1, #0
    ad4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ad50:	bl	0 <coda_mem_float_new>
    ad54:	str	r0, [fp, #-36]	; 0xffffffdc
    ad58:	mov	r3, #0
    ad5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    ad60:	ldr	r1, [pc, #-2940]	; a1ec <read_grib1_message+0x1164>
    ad64:	ldr	r0, [fp, #-104]	; 0xffffff98
    ad68:	bl	0 <coda_mem_record_add_field>
    ad6c:	ldrd	r2, [fp, #-172]	; 0xffffff54
    ad70:	adds	r2, r2, #11
    ad74:	adc	r3, r3, #0
    ad78:	strd	r2, [fp, #-172]	; 0xffffff54
    ad7c:	bl	0 <__aeabi_read_tp>
    ad80:	mov	r2, r0
    ad84:	ldr	r3, [pc, #-2972]	; a1f0 <read_grib1_message+0x1168>
    ad88:	ldr	r3, [r2, r3]
    ad8c:	add	r3, r3, #260	; 0x104
    ad90:	ldr	r0, [r3]
    ad94:	ldrb	r3, [fp, #-97]	; 0xffffff9f
    ad98:	ldr	r2, [fp, #-8]
    ad9c:	str	r2, [sp, #12]
    ada0:	ldrsh	r2, [fp, #-90]	; 0xffffffa6
    ada4:	str	r2, [sp, #8]
    ada8:	ldrsh	r2, [fp, #-50]	; 0xffffffce
    adac:	str	r2, [sp, #4]
    adb0:	str	r3, [sp]
    adb4:	vldr	s0, [fp, #-96]	; 0xffffffa0
    adb8:	ldrd	r2, [fp, #-172]	; 0xffffff54
    adbc:	ldr	r1, [fp, #-12]
    adc0:	bl	0 <coda_grib_value_array_simple_packing_new>
    adc4:	str	r0, [fp, #-36]	; 0xffffffdc
    adc8:	ldr	r3, [fp, #-8]
    adcc:	cmp	r3, #0
    add0:	beq	addc <read_grib1_message+0x1d54>
    add4:	ldr	r0, [fp, #-8]
    add8:	bl	0 <free>
    addc:	mov	r3, #0
    ade0:	ldr	r2, [fp, #-36]	; 0xffffffdc
    ade4:	ldr	r1, [pc, #-3064]	; a1f4 <read_grib1_message+0x116c>
    ade8:	ldr	r0, [fp, #-104]	; 0xffffff98
    adec:	bl	0 <coda_mem_record_add_field>
    adf0:	mov	r3, #0
    adf4:	ldr	r2, [fp, #-104]	; 0xffffff98
    adf8:	ldr	r1, [pc, #-3080]	; a1f8 <read_grib1_message+0x1170>
    adfc:	ldr	r0, [fp, #-164]	; 0xffffff5c
    ae00:	bl	0 <coda_mem_record_add_field>
    ae04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ae08:	sub	r3, r3, #11
    ae0c:	mov	r2, r3
    ae10:	asr	r3, r2, #31
    ae14:	ldrd	r0, [fp, #-172]	; 0xffffff54
    ae18:	adds	r2, r2, r0
    ae1c:	adc	r3, r3, r1
    ae20:	strd	r2, [fp, #-172]	; 0xffffff54
    ae24:	ldr	r3, [fp, #-160]	; 0xffffff60
    ae28:	ldr	r1, [r3, #52]	; 0x34
    ae2c:	sub	r3, fp, #132	; 0x84
    ae30:	str	r3, [sp, #8]
    ae34:	mov	r2, #4
    ae38:	mov	r3, #0
    ae3c:	strd	r2, [sp]
    ae40:	ldrd	r2, [fp, #-172]	; 0xffffff54
    ae44:	mov	r0, r1
    ae48:	bl	0 <read_bytes>
    ae4c:	mov	r3, r0
    ae50:	cmp	r3, #0
    ae54:	bge	ae60 <read_grib1_message+0x1dd8>
    ae58:	mvn	r3, #0
    ae5c:	b	aec0 <read_grib1_message+0x1e38>
    ae60:	sub	r3, fp, #132	; 0x84
    ae64:	mov	r2, #4
    ae68:	ldr	r1, [pc, #-3188]	; a1fc <read_grib1_message+0x1174>
    ae6c:	mov	r0, r3
    ae70:	bl	0 <memcmp>
    ae74:	mov	r3, r0
    ae78:	cmp	r3, #0
    ae7c:	beq	aeac <read_grib1_message+0x1e24>
    ae80:	sub	r3, fp, #156	; 0x9c
    ae84:	mov	r2, r3
    ae88:	ldrd	r0, [fp, #-172]	; 0xffffff54
    ae8c:	bl	0 <coda_str64>
    ae90:	sub	r3, fp, #156	; 0x9c
    ae94:	mov	r2, r3
    ae98:	ldr	r1, [pc, #-3232]	; a200 <read_grib1_message+0x1178>
    ae9c:	mvn	r0, #21
    aea0:	bl	0 <coda_set_error>
    aea4:	mvn	r3, #0
    aea8:	b	aec0 <read_grib1_message+0x1e38>
    aeac:	ldrd	r2, [fp, #-172]	; 0xffffff54
    aeb0:	adds	r2, r2, #4
    aeb4:	adc	r3, r3, #0
    aeb8:	strd	r2, [fp, #-172]	; 0xffffff54
    aebc:	mov	r3, #0
    aec0:	mov	r0, r3
    aec4:	sub	sp, fp, #4
    aec8:	pop	{fp, pc}

0000aecc <read_grib2_message>:
    aecc:	push	{fp, lr}
    aed0:	add	fp, sp, #4
    aed4:	sub	sp, sp, #376	; 0x178
    aed8:	str	r0, [fp, #-352]	; 0xfffffea0
    aedc:	str	r1, [fp, #-356]	; 0xfffffe9c
    aee0:	sub	r1, fp, #356	; 0x164
    aee4:	strd	r2, [r1, #-8]
    aee8:	ldr	r3, [fp, #-352]	; 0xfffffea0
    aeec:	str	r3, [fp, #-140]	; 0xffffff74
    aef0:	mov	r3, #0
    aef4:	str	r3, [fp, #-8]
    aef8:	mvn	r2, #0
    aefc:	mvn	r3, #0
    af00:	strd	r2, [fp, #-20]	; 0xffffffec
    af04:	mov	r2, #0
    af08:	mov	r3, #0
    af0c:	strd	r2, [fp, #-28]	; 0xffffffe4
    af10:	mvn	r3, #0
    af14:	str	r3, [fp, #-32]	; 0xffffffe0
    af18:	mvn	r3, #0
    af1c:	str	r3, [fp, #-36]	; 0xffffffdc
    af20:	mov	r3, #0
    af24:	strh	r3, [fp, #-38]	; 0xffffffda
    af28:	mvn	r2, #0
    af2c:	mvn	r3, #0
    af30:	strd	r2, [fp, #-52]	; 0xffffffcc
    af34:	mov	r3, #0
    af38:	strb	r3, [fp, #-53]	; 0xffffffcb
    af3c:	mov	r3, #0
    af40:	strb	r3, [fp, #-54]	; 0xffffffca
    af44:	mov	r3, #0
    af48:	strb	r3, [fp, #-55]	; 0xffffffc9
    af4c:	mov	r3, #0
    af50:	strb	r3, [fp, #-56]	; 0xffffffc8
    af54:	mov	r3, #0
    af58:	strb	r3, [fp, #-57]	; 0xffffffc7
    af5c:	mov	r3, #0
    af60:	strh	r3, [fp, #-60]	; 0xffffffc4
    af64:	mov	r3, #0
    af68:	strb	r3, [fp, #-61]	; 0xffffffc3
    af6c:	mov	r3, #0
    af70:	strb	r3, [fp, #-62]	; 0xffffffc2
    af74:	mov	r3, #0
    af78:	str	r3, [fp, #-68]	; 0xffffffbc
    af7c:	mov	r3, #0
    af80:	strb	r3, [fp, #-69]	; 0xffffffbb
    af84:	mov	r2, #0
    af88:	mov	r3, #0
    af8c:	strd	r2, [fp, #-84]	; 0xffffffac
    af90:	mov	r3, #0
    af94:	strb	r3, [fp, #-85]	; 0xffffffab
    af98:	mov	r2, #0
    af9c:	mov	r3, #0
    afa0:	strd	r2, [fp, #-100]	; 0xffffff9c
    afa4:	mov	r3, #0
    afa8:	strh	r3, [fp, #-102]	; 0xffffff9a
    afac:	mov	r3, #0
    afb0:	strh	r3, [fp, #-104]	; 0xffffff98
    afb4:	mov	r3, #0
    afb8:	str	r3, [fp, #-208]	; 0xffffff30
    afbc:	mov	r3, #0
    afc0:	strb	r3, [fp, #-105]	; 0xffffff97
    afc4:	mov	r3, #0
    afc8:	str	r3, [fp, #-112]	; 0xffffff90
    afcc:	ldr	r3, [fp, #-352]	; 0xfffffea0
    afd0:	ldr	r1, [r3, #52]	; 0x34
    afd4:	sub	r3, fp, #356	; 0x164
    afd8:	mov	r0, r3
    afdc:	sub	r3, fp, #272	; 0x110
    afe0:	str	r3, [sp, #8]
    afe4:	mov	r2, #21
    afe8:	mov	r3, #0
    afec:	strd	r2, [sp]
    aff0:	ldrd	r2, [r0, #-8]
    aff4:	mov	r0, r1
    aff8:	bl	0 <read_bytes>
    affc:	mov	r3, r0
    b000:	cmp	r3, #0
    b004:	bge	b010 <read_grib2_message+0x144>
    b008:	mvn	r3, #0
    b00c:	b	d7e8 <read_grib2_message+0x291c>
    b010:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b014:	lsl	r3, r3, #8
    b018:	ldrb	r2, [fp, #-271]	; 0xfffffef1
    b01c:	add	r3, r3, r2
    b020:	lsl	r3, r3, #8
    b024:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    b028:	add	r3, r3, r2
    b02c:	lsl	r3, r3, #8
    b030:	ldrb	r2, [fp, #-269]	; 0xfffffef3
    b034:	add	r3, r3, r2
    b038:	str	r3, [fp, #-144]	; 0xffffff70
    b03c:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    b040:	cmp	r3, #1
    b044:	beq	b078 <read_grib2_message+0x1ac>
    b048:	sub	r2, fp, #296	; 0x128
    b04c:	sub	r3, fp, #356	; 0x164
    b050:	ldrd	r0, [r3, #-8]
    b054:	bl	0 <coda_str64>
    b058:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    b05c:	sub	r2, r3, #48	; 0x30
    b060:	sub	r3, fp, #296	; 0x128
    b064:	ldr	r1, [pc, #3928]	; bfc4 <read_grib2_message+0x10f8>
    b068:	ldr	r0, [pc, #3928]	; bfc8 <read_grib2_message+0x10fc>
    b06c:	bl	0 <coda_set_error>
    b070:	mvn	r3, #0
    b074:	b	d7e8 <read_grib2_message+0x291c>
    b078:	mov	r3, #1
    b07c:	strb	r3, [fp, #-113]	; 0xffffff8f
    b080:	bl	0 <__aeabi_read_tp>
    b084:	mov	r2, r0
    b088:	ldr	r3, [pc, #3900]	; bfcc <read_grib2_message+0x1100>
    b08c:	ldr	r3, [r2, r3]
    b090:	ldr	r3, [r3, #288]	; 0x120
    b094:	str	r3, [fp, #-148]	; 0xffffff6c
    b098:	ldrb	r3, [fp, #-267]	; 0xfffffef5
    b09c:	uxth	r3, r3
    b0a0:	lsl	r3, r3, #8
    b0a4:	uxth	r2, r3
    b0a8:	ldrb	r3, [fp, #-266]	; 0xfffffef6
    b0ac:	uxth	r3, r3
    b0b0:	add	r3, r2, r3
    b0b4:	uxth	r3, r3
    b0b8:	ldr	r2, [fp, #-140]	; 0xffffff74
    b0bc:	mov	r1, #0
    b0c0:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b0c4:	bl	0 <coda_mem_uint16_new>
    b0c8:	str	r0, [fp, #-152]	; 0xffffff68
    b0cc:	mov	r3, #0
    b0d0:	ldr	r2, [fp, #-152]	; 0xffffff68
    b0d4:	ldr	r1, [pc, #3828]	; bfd0 <read_grib2_message+0x1104>
    b0d8:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b0dc:	bl	0 <coda_mem_record_add_field>
    b0e0:	bl	0 <__aeabi_read_tp>
    b0e4:	mov	r2, r0
    b0e8:	ldr	r3, [pc, #3804]	; bfcc <read_grib2_message+0x1100>
    b0ec:	ldr	r3, [r2, r3]
    b0f0:	ldr	r3, [r3, #316]	; 0x13c
    b0f4:	str	r3, [fp, #-148]	; 0xffffff6c
    b0f8:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    b0fc:	uxth	r3, r3
    b100:	lsl	r3, r3, #8
    b104:	uxth	r2, r3
    b108:	ldrb	r3, [fp, #-264]	; 0xfffffef8
    b10c:	uxth	r3, r3
    b110:	add	r3, r2, r3
    b114:	uxth	r3, r3
    b118:	ldr	r2, [fp, #-140]	; 0xffffff74
    b11c:	mov	r1, #0
    b120:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b124:	bl	0 <coda_mem_uint16_new>
    b128:	str	r0, [fp, #-152]	; 0xffffff68
    b12c:	mov	r3, #0
    b130:	ldr	r2, [fp, #-152]	; 0xffffff68
    b134:	ldr	r1, [pc, #3736]	; bfd4 <read_grib2_message+0x1108>
    b138:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b13c:	bl	0 <coda_mem_record_add_field>
    b140:	bl	0 <__aeabi_read_tp>
    b144:	mov	r2, r0
    b148:	ldr	r3, [pc, #3708]	; bfcc <read_grib2_message+0x1100>
    b14c:	ldr	r3, [r2, r3]
    b150:	ldr	r3, [r3, #328]	; 0x148
    b154:	str	r3, [fp, #-148]	; 0xffffff6c
    b158:	ldrb	r3, [fp, #-263]	; 0xfffffef9
    b15c:	ldr	r2, [fp, #-140]	; 0xffffff74
    b160:	mov	r1, #0
    b164:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b168:	bl	0 <coda_mem_uint8_new>
    b16c:	str	r0, [fp, #-152]	; 0xffffff68
    b170:	mov	r3, #0
    b174:	ldr	r2, [fp, #-152]	; 0xffffff68
    b178:	ldr	r1, [pc, #3672]	; bfd8 <read_grib2_message+0x110c>
    b17c:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b180:	bl	0 <coda_mem_record_add_field>
    b184:	bl	0 <__aeabi_read_tp>
    b188:	mov	r2, r0
    b18c:	ldr	r3, [pc, #3640]	; bfcc <read_grib2_message+0x1100>
    b190:	ldr	r3, [r2, r3]
    b194:	ldr	r3, [r3, #332]	; 0x14c
    b198:	str	r3, [fp, #-148]	; 0xffffff6c
    b19c:	ldrb	r3, [fp, #-262]	; 0xfffffefa
    b1a0:	ldr	r2, [fp, #-140]	; 0xffffff74
    b1a4:	mov	r1, #0
    b1a8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b1ac:	bl	0 <coda_mem_uint8_new>
    b1b0:	str	r0, [fp, #-152]	; 0xffffff68
    b1b4:	mov	r3, #0
    b1b8:	ldr	r2, [fp, #-152]	; 0xffffff68
    b1bc:	ldr	r1, [pc, #3608]	; bfdc <read_grib2_message+0x1110>
    b1c0:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b1c4:	bl	0 <coda_mem_record_add_field>
    b1c8:	bl	0 <__aeabi_read_tp>
    b1cc:	mov	r2, r0
    b1d0:	ldr	r3, [pc, #3572]	; bfcc <read_grib2_message+0x1100>
    b1d4:	ldr	r3, [r2, r3]
    b1d8:	ldr	r3, [r3, #336]	; 0x150
    b1dc:	str	r3, [fp, #-148]	; 0xffffff6c
    b1e0:	ldrb	r3, [fp, #-261]	; 0xfffffefb
    b1e4:	ldr	r2, [fp, #-140]	; 0xffffff74
    b1e8:	mov	r1, #0
    b1ec:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b1f0:	bl	0 <coda_mem_uint8_new>
    b1f4:	str	r0, [fp, #-152]	; 0xffffff68
    b1f8:	mov	r3, #0
    b1fc:	ldr	r2, [fp, #-152]	; 0xffffff68
    b200:	ldr	r1, [pc, #3544]	; bfe0 <read_grib2_message+0x1114>
    b204:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b208:	bl	0 <coda_mem_record_add_field>
    b20c:	bl	0 <__aeabi_read_tp>
    b210:	mov	r2, r0
    b214:	ldr	r3, [pc, #3504]	; bfcc <read_grib2_message+0x1100>
    b218:	ldr	r3, [r2, r3]
    b21c:	ldr	r3, [r3, #292]	; 0x124
    b220:	str	r3, [fp, #-148]	; 0xffffff6c
    b224:	ldrb	r3, [fp, #-260]	; 0xfffffefc
    b228:	uxth	r3, r3
    b22c:	lsl	r3, r3, #8
    b230:	uxth	r2, r3
    b234:	ldrb	r3, [fp, #-259]	; 0xfffffefd
    b238:	uxth	r3, r3
    b23c:	add	r3, r2, r3
    b240:	uxth	r3, r3
    b244:	ldr	r2, [fp, #-140]	; 0xffffff74
    b248:	mov	r1, #0
    b24c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b250:	bl	0 <coda_mem_uint16_new>
    b254:	str	r0, [fp, #-152]	; 0xffffff68
    b258:	mov	r3, #0
    b25c:	ldr	r2, [fp, #-152]	; 0xffffff68
    b260:	ldr	r1, [pc, #3452]	; bfe4 <read_grib2_message+0x1118>
    b264:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b268:	bl	0 <coda_mem_record_add_field>
    b26c:	bl	0 <__aeabi_read_tp>
    b270:	mov	r2, r0
    b274:	ldr	r3, [pc, #3408]	; bfcc <read_grib2_message+0x1100>
    b278:	ldr	r3, [r2, r3]
    b27c:	ldr	r3, [r3, #296]	; 0x128
    b280:	str	r3, [fp, #-148]	; 0xffffff6c
    b284:	ldrb	r3, [fp, #-258]	; 0xfffffefe
    b288:	ldr	r2, [fp, #-140]	; 0xffffff74
    b28c:	mov	r1, #0
    b290:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b294:	bl	0 <coda_mem_uint8_new>
    b298:	str	r0, [fp, #-152]	; 0xffffff68
    b29c:	mov	r3, #0
    b2a0:	ldr	r2, [fp, #-152]	; 0xffffff68
    b2a4:	ldr	r1, [pc, #3388]	; bfe8 <read_grib2_message+0x111c>
    b2a8:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b2ac:	bl	0 <coda_mem_record_add_field>
    b2b0:	bl	0 <__aeabi_read_tp>
    b2b4:	mov	r2, r0
    b2b8:	ldr	r3, [pc, #3340]	; bfcc <read_grib2_message+0x1100>
    b2bc:	ldr	r3, [r2, r3]
    b2c0:	ldr	r3, [r3, #300]	; 0x12c
    b2c4:	str	r3, [fp, #-148]	; 0xffffff6c
    b2c8:	ldrb	r3, [fp, #-257]	; 0xfffffeff
    b2cc:	ldr	r2, [fp, #-140]	; 0xffffff74
    b2d0:	mov	r1, #0
    b2d4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b2d8:	bl	0 <coda_mem_uint8_new>
    b2dc:	str	r0, [fp, #-152]	; 0xffffff68
    b2e0:	mov	r3, #0
    b2e4:	ldr	r2, [fp, #-152]	; 0xffffff68
    b2e8:	ldr	r1, [pc, #3324]	; bfec <read_grib2_message+0x1120>
    b2ec:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b2f0:	bl	0 <coda_mem_record_add_field>
    b2f4:	bl	0 <__aeabi_read_tp>
    b2f8:	mov	r2, r0
    b2fc:	ldr	r3, [pc, #3272]	; bfcc <read_grib2_message+0x1100>
    b300:	ldr	r3, [r2, r3]
    b304:	ldr	r3, [r3, #304]	; 0x130
    b308:	str	r3, [fp, #-148]	; 0xffffff6c
    b30c:	ldrb	r3, [fp, #-256]	; 0xffffff00
    b310:	ldr	r2, [fp, #-140]	; 0xffffff74
    b314:	mov	r1, #0
    b318:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b31c:	bl	0 <coda_mem_uint8_new>
    b320:	str	r0, [fp, #-152]	; 0xffffff68
    b324:	mov	r3, #0
    b328:	ldr	r2, [fp, #-152]	; 0xffffff68
    b32c:	ldr	r1, [pc, #3260]	; bff0 <read_grib2_message+0x1124>
    b330:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b334:	bl	0 <coda_mem_record_add_field>
    b338:	bl	0 <__aeabi_read_tp>
    b33c:	mov	r2, r0
    b340:	ldr	r3, [pc, #3204]	; bfcc <read_grib2_message+0x1100>
    b344:	ldr	r3, [r2, r3]
    b348:	ldr	r3, [r3, #308]	; 0x134
    b34c:	str	r3, [fp, #-148]	; 0xffffff6c
    b350:	ldrb	r3, [fp, #-255]	; 0xffffff01
    b354:	ldr	r2, [fp, #-140]	; 0xffffff74
    b358:	mov	r1, #0
    b35c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b360:	bl	0 <coda_mem_uint8_new>
    b364:	str	r0, [fp, #-152]	; 0xffffff68
    b368:	mov	r3, #0
    b36c:	ldr	r2, [fp, #-152]	; 0xffffff68
    b370:	ldr	r1, [pc, #3196]	; bff4 <read_grib2_message+0x1128>
    b374:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b378:	bl	0 <coda_mem_record_add_field>
    b37c:	bl	0 <__aeabi_read_tp>
    b380:	mov	r2, r0
    b384:	ldr	r3, [pc, #3136]	; bfcc <read_grib2_message+0x1100>
    b388:	ldr	r3, [r2, r3]
    b38c:	ldr	r3, [r3, #312]	; 0x138
    b390:	str	r3, [fp, #-148]	; 0xffffff6c
    b394:	ldrb	r3, [fp, #-254]	; 0xffffff02
    b398:	ldr	r2, [fp, #-140]	; 0xffffff74
    b39c:	mov	r1, #0
    b3a0:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b3a4:	bl	0 <coda_mem_uint8_new>
    b3a8:	str	r0, [fp, #-152]	; 0xffffff68
    b3ac:	mov	r3, #0
    b3b0:	ldr	r2, [fp, #-152]	; 0xffffff68
    b3b4:	ldr	r1, [pc, #3132]	; bff8 <read_grib2_message+0x112c>
    b3b8:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b3bc:	bl	0 <coda_mem_record_add_field>
    b3c0:	bl	0 <__aeabi_read_tp>
    b3c4:	mov	r2, r0
    b3c8:	ldr	r3, [pc, #3068]	; bfcc <read_grib2_message+0x1100>
    b3cc:	ldr	r3, [r2, r3]
    b3d0:	ldr	r3, [r3, #340]	; 0x154
    b3d4:	str	r3, [fp, #-148]	; 0xffffff6c
    b3d8:	ldrb	r3, [fp, #-253]	; 0xffffff03
    b3dc:	ldr	r2, [fp, #-140]	; 0xffffff74
    b3e0:	mov	r1, #0
    b3e4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b3e8:	bl	0 <coda_mem_uint8_new>
    b3ec:	str	r0, [fp, #-152]	; 0xffffff68
    b3f0:	mov	r3, #0
    b3f4:	ldr	r2, [fp, #-152]	; 0xffffff68
    b3f8:	ldr	r1, [pc, #3068]	; bffc <read_grib2_message+0x1130>
    b3fc:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b400:	bl	0 <coda_mem_record_add_field>
    b404:	bl	0 <__aeabi_read_tp>
    b408:	mov	r2, r0
    b40c:	ldr	r3, [pc, #3000]	; bfcc <read_grib2_message+0x1100>
    b410:	ldr	r3, [r2, r3]
    b414:	ldr	r3, [r3, #344]	; 0x158
    b418:	str	r3, [fp, #-148]	; 0xffffff6c
    b41c:	ldrb	r3, [fp, #-252]	; 0xffffff04
    b420:	ldr	r2, [fp, #-140]	; 0xffffff74
    b424:	mov	r1, #0
    b428:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b42c:	bl	0 <coda_mem_uint8_new>
    b430:	str	r0, [fp, #-152]	; 0xffffff68
    b434:	mov	r3, #0
    b438:	ldr	r2, [fp, #-152]	; 0xffffff68
    b43c:	ldr	r1, [pc, #3004]	; c000 <read_grib2_message+0x1134>
    b440:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b444:	bl	0 <coda_mem_record_add_field>
    b448:	bl	0 <__aeabi_read_tp>
    b44c:	mov	r2, r0
    b450:	ldr	r3, [pc, #2932]	; bfcc <read_grib2_message+0x1100>
    b454:	ldr	r3, [r2, r3]
    b458:	add	r3, r3, #548	; 0x224
    b45c:	ldr	r3, [r3]
    b460:	mov	r1, #0
    b464:	mov	r0, r3
    b468:	bl	0 <coda_mem_array_new>
    b46c:	str	r0, [fp, #-156]	; 0xffffff64
    b470:	mov	r3, #0
    b474:	ldr	r2, [fp, #-156]	; 0xffffff64
    b478:	ldr	r1, [pc, #2948]	; c004 <read_grib2_message+0x1138>
    b47c:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b480:	bl	0 <coda_mem_record_add_field>
    b484:	bl	0 <__aeabi_read_tp>
    b488:	mov	r2, r0
    b48c:	ldr	r3, [pc, #2872]	; bfcc <read_grib2_message+0x1100>
    b490:	ldr	r3, [r2, r3]
    b494:	add	r3, r3, #552	; 0x228
    b498:	ldr	r3, [r3]
    b49c:	mov	r1, #0
    b4a0:	mov	r0, r3
    b4a4:	bl	0 <coda_mem_array_new>
    b4a8:	str	r0, [fp, #-160]	; 0xffffff60
    b4ac:	mov	r3, #0
    b4b0:	ldr	r2, [fp, #-160]	; 0xffffff60
    b4b4:	ldr	r1, [pc, #2892]	; c008 <read_grib2_message+0x113c>
    b4b8:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b4bc:	bl	0 <coda_mem_record_add_field>
    b4c0:	bl	0 <__aeabi_read_tp>
    b4c4:	mov	r2, r0
    b4c8:	ldr	r3, [pc, #2812]	; bfcc <read_grib2_message+0x1100>
    b4cc:	ldr	r3, [r2, r3]
    b4d0:	add	r3, r3, #556	; 0x22c
    b4d4:	ldr	r3, [r3]
    b4d8:	mov	r1, #0
    b4dc:	mov	r0, r3
    b4e0:	bl	0 <coda_mem_array_new>
    b4e4:	str	r0, [fp, #-164]	; 0xffffff5c
    b4e8:	mov	r3, #0
    b4ec:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b4f0:	ldr	r1, [pc, #2836]	; c00c <read_grib2_message+0x1140>
    b4f4:	ldr	r0, [fp, #-356]	; 0xfffffe9c
    b4f8:	bl	0 <coda_mem_record_add_field>
    b4fc:	sub	r3, fp, #356	; 0x164
    b500:	mov	r1, r3
    b504:	sub	r3, fp, #356	; 0x164
    b508:	ldrd	r2, [r3, #-8]
    b50c:	adds	r2, r2, #21
    b510:	adc	r3, r3, #0
    b514:	strd	r2, [r1, #-8]
    b518:	ldr	r3, [fp, #-144]	; 0xffffff70
    b51c:	cmp	r3, #21
    b520:	bls	b550 <read_grib2_message+0x684>
    b524:	ldr	r3, [fp, #-144]	; 0xffffff70
    b528:	sub	r3, r3, #21
    b52c:	mov	r0, r3
    b530:	mov	r1, #0
    b534:	sub	r3, fp, #356	; 0x164
    b538:	mov	ip, r3
    b53c:	sub	r3, fp, #356	; 0x164
    b540:	ldrd	r2, [r3, #-8]
    b544:	adds	r2, r2, r0
    b548:	adc	r3, r3, r1
    b54c:	strd	r2, [ip, #-8]
    b550:	ldr	r3, [fp, #-352]	; 0xfffffea0
    b554:	ldr	r1, [r3, #52]	; 0x34
    b558:	sub	r3, fp, #356	; 0x164
    b55c:	mov	r0, r3
    b560:	sub	r3, fp, #272	; 0x110
    b564:	str	r3, [sp, #8]
    b568:	mov	r2, #4
    b56c:	mov	r3, #0
    b570:	strd	r2, [sp]
    b574:	ldrd	r2, [r0, #-8]
    b578:	mov	r0, r1
    b57c:	bl	0 <read_bytes>
    b580:	mov	r3, r0
    b584:	cmp	r3, #0
    b588:	bge	b594 <read_grib2_message+0x6c8>
    b58c:	mvn	r3, #0
    b590:	b	d7e8 <read_grib2_message+0x291c>
    b594:	sub	r3, fp, #356	; 0x164
    b598:	mov	r1, r3
    b59c:	sub	r3, fp, #356	; 0x164
    b5a0:	ldrd	r2, [r3, #-8]
    b5a4:	adds	r2, r2, #4
    b5a8:	adc	r3, r3, #0
    b5ac:	strd	r2, [r1, #-8]
    b5b0:	b	d78c <read_grib2_message+0x28c0>
    b5b4:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b5b8:	lsl	r3, r3, #8
    b5bc:	ldrb	r2, [fp, #-271]	; 0xfffffef1
    b5c0:	add	r3, r3, r2
    b5c4:	lsl	r3, r3, #8
    b5c8:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    b5cc:	add	r3, r3, r2
    b5d0:	lsl	r3, r3, #8
    b5d4:	ldrb	r2, [fp, #-269]	; 0xfffffef3
    b5d8:	add	r3, r3, r2
    b5dc:	str	r3, [fp, #-144]	; 0xffffff70
    b5e0:	ldr	r3, [fp, #-352]	; 0xfffffea0
    b5e4:	ldr	r1, [r3, #52]	; 0x34
    b5e8:	sub	r3, fp, #356	; 0x164
    b5ec:	mov	r0, r3
    b5f0:	sub	r3, fp, #272	; 0x110
    b5f4:	str	r3, [sp, #8]
    b5f8:	mov	r2, #1
    b5fc:	mov	r3, #0
    b600:	strd	r2, [sp]
    b604:	ldrd	r2, [r0, #-8]
    b608:	mov	r0, r1
    b60c:	bl	0 <read_bytes>
    b610:	mov	r3, r0
    b614:	cmp	r3, #0
    b618:	bge	b624 <read_grib2_message+0x758>
    b61c:	mvn	r3, #0
    b620:	b	d7e8 <read_grib2_message+0x291c>
    b624:	sub	r3, fp, #356	; 0x164
    b628:	mov	r1, r3
    b62c:	sub	r3, fp, #356	; 0x164
    b630:	ldrd	r2, [r3, #-8]
    b634:	adds	r2, r2, #1
    b638:	adc	r3, r3, #0
    b63c:	strd	r2, [r1, #-8]
    b640:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b644:	cmp	r3, #2
    b648:	bne	b7c4 <read_grib2_message+0x8f8>
    b64c:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b650:	cmp	r3, #1
    b654:	beq	b684 <read_grib2_message+0x7b8>
    b658:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b65c:	cmp	r3, #7
    b660:	beq	b684 <read_grib2_message+0x7b8>
    b664:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b668:	sub	r2, r3, #48	; 0x30
    b66c:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b670:	ldr	r1, [pc, #2596]	; c09c <read_grib2_message+0x11d0>
    b674:	ldr	r0, [pc, #2380]	; bfc8 <read_grib2_message+0x10fc>
    b678:	bl	0 <coda_set_error>
    b67c:	mvn	r3, #0
    b680:	b	d7e8 <read_grib2_message+0x291c>
    b684:	ldr	r3, [fp, #-144]	; 0xffffff70
    b688:	cmp	r3, #5
    b68c:	bls	b7b8 <read_grib2_message+0x8ec>
    b690:	ldr	r3, [fp, #-144]	; 0xffffff70
    b694:	sub	r3, r3, #5
    b698:	mov	r0, r3
    b69c:	bl	0 <malloc>
    b6a0:	mov	r3, r0
    b6a4:	str	r3, [fp, #-168]	; 0xffffff58
    b6a8:	ldr	r3, [fp, #-168]	; 0xffffff58
    b6ac:	cmp	r3, #0
    b6b0:	bne	b6e0 <read_grib2_message+0x814>
    b6b4:	ldr	r3, [fp, #-144]	; 0xffffff70
    b6b8:	sub	r3, r3, #5
    b6bc:	mov	r2, r3
    b6c0:	ldr	r3, [pc, #2376]	; c010 <read_grib2_message+0x1144>
    b6c4:	str	r3, [sp]
    b6c8:	ldr	r3, [pc, #2372]	; c014 <read_grib2_message+0x1148>
    b6cc:	ldr	r1, [pc, #2372]	; c018 <read_grib2_message+0x114c>
    b6d0:	mvn	r0, #0
    b6d4:	bl	0 <coda_set_error>
    b6d8:	mvn	r3, #0
    b6dc:	b	d7e8 <read_grib2_message+0x291c>
    b6e0:	ldr	r3, [fp, #-352]	; 0xfffffea0
    b6e4:	ldr	r0, [r3, #52]	; 0x34
    b6e8:	ldr	r3, [fp, #-144]	; 0xffffff70
    b6ec:	sub	r3, r3, #5
    b6f0:	mov	r2, r3
    b6f4:	mov	r3, #0
    b6f8:	sub	r1, fp, #356	; 0x164
    b6fc:	mov	ip, r1
    b700:	ldr	r1, [fp, #-168]	; 0xffffff58
    b704:	str	r1, [sp, #8]
    b708:	strd	r2, [sp]
    b70c:	ldrd	r2, [ip, #-8]
    b710:	bl	0 <read_bytes>
    b714:	mov	r3, r0
    b718:	cmp	r3, #0
    b71c:	bge	b730 <read_grib2_message+0x864>
    b720:	ldr	r0, [fp, #-168]	; 0xffffff58
    b724:	bl	0 <free>
    b728:	mvn	r3, #0
    b72c:	b	d7e8 <read_grib2_message+0x291c>
    b730:	bl	0 <__aeabi_read_tp>
    b734:	mov	r2, r0
    b738:	ldr	r3, [pc, #2188]	; bfcc <read_grib2_message+0x1100>
    b73c:	ldr	r3, [r2, r3]
    b740:	ldr	r3, [r3, #348]	; 0x15c
    b744:	str	r3, [fp, #-148]	; 0xffffff6c
    b748:	ldr	r3, [fp, #-144]	; 0xffffff70
    b74c:	sub	r3, r3, #5
    b750:	mov	r2, r3
    b754:	ldr	r3, [fp, #-168]	; 0xffffff58
    b758:	str	r3, [sp]
    b75c:	mov	r3, r2
    b760:	ldr	r2, [fp, #-140]	; 0xffffff74
    b764:	mov	r1, #0
    b768:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b76c:	bl	0 <coda_mem_raw_new>
    b770:	str	r0, [fp, #-152]	; 0xffffff68
    b774:	ldr	r1, [fp, #-152]	; 0xffffff68
    b778:	ldr	r0, [fp, #-156]	; 0xffffff64
    b77c:	bl	0 <coda_mem_array_add_element>
    b780:	ldr	r3, [fp, #-144]	; 0xffffff70
    b784:	sub	r3, r3, #5
    b788:	mov	r0, r3
    b78c:	mov	r1, #0
    b790:	sub	r3, fp, #356	; 0x164
    b794:	mov	ip, r3
    b798:	sub	r3, fp, #356	; 0x164
    b79c:	ldrd	r2, [r3, #-8]
    b7a0:	adds	r2, r2, r0
    b7a4:	adc	r3, r3, r1
    b7a8:	strd	r2, [ip, #-8]
    b7ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b7b0:	add	r3, r3, #1
    b7b4:	str	r3, [fp, #-32]	; 0xffffffe0
    b7b8:	mov	r3, #2
    b7bc:	strb	r3, [fp, #-113]	; 0xffffff8f
    b7c0:	b	d72c <read_grib2_message+0x2860>
    b7c4:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b7c8:	cmp	r3, #3
    b7cc:	bne	c718 <read_grib2_message+0x184c>
    b7d0:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b7d4:	cmp	r3, #1
    b7d8:	beq	b814 <read_grib2_message+0x948>
    b7dc:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b7e0:	cmp	r3, #2
    b7e4:	beq	b814 <read_grib2_message+0x948>
    b7e8:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b7ec:	cmp	r3, #7
    b7f0:	beq	b814 <read_grib2_message+0x948>
    b7f4:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b7f8:	sub	r2, r3, #48	; 0x30
    b7fc:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    b800:	ldr	r1, [pc, #2196]	; c09c <read_grib2_message+0x11d0>
    b804:	ldr	r0, [pc, #1980]	; bfc8 <read_grib2_message+0x10fc>
    b808:	bl	0 <coda_set_error>
    b80c:	mvn	r3, #0
    b810:	b	d7e8 <read_grib2_message+0x291c>
    b814:	ldr	r3, [fp, #-352]	; 0xfffffea0
    b818:	ldr	r1, [r3, #52]	; 0x34
    b81c:	sub	r3, fp, #356	; 0x164
    b820:	mov	r0, r3
    b824:	sub	r3, fp, #272	; 0x110
    b828:	str	r3, [sp, #8]
    b82c:	mov	r2, #9
    b830:	mov	r3, #0
    b834:	strd	r2, [sp]
    b838:	ldrd	r2, [r0, #-8]
    b83c:	mov	r0, r1
    b840:	bl	0 <read_bytes>
    b844:	mov	r3, r0
    b848:	cmp	r3, #0
    b84c:	bge	b858 <read_grib2_message+0x98c>
    b850:	mvn	r3, #0
    b854:	b	d7e8 <read_grib2_message+0x291c>
    b858:	bl	0 <__aeabi_read_tp>
    b85c:	mov	r2, r0
    b860:	ldr	r3, [pc, #1892]	; bfcc <read_grib2_message+0x1100>
    b864:	ldr	r3, [r2, r3]
    b868:	add	r3, r3, #540	; 0x21c
    b86c:	ldr	r3, [r3]
    b870:	mov	r1, #0
    b874:	mov	r0, r3
    b878:	bl	0 <coda_mem_record_new>
    b87c:	str	r0, [fp, #-172]	; 0xffffff54
    b880:	bl	0 <__aeabi_read_tp>
    b884:	mov	r2, r0
    b888:	ldr	r3, [pc, #1852]	; bfcc <read_grib2_message+0x1100>
    b88c:	ldr	r3, [r2, r3]
    b890:	ldr	r3, [r3, #276]	; 0x114
    b894:	str	r3, [fp, #-148]	; 0xffffff6c
    b898:	ldr	r3, [fp, #-32]	; 0xffffffe0
    b89c:	ldr	r2, [fp, #-140]	; 0xffffff74
    b8a0:	mov	r1, #0
    b8a4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b8a8:	bl	0 <coda_mem_int32_new>
    b8ac:	str	r0, [fp, #-152]	; 0xffffff68
    b8b0:	mov	r3, #0
    b8b4:	ldr	r2, [fp, #-152]	; 0xffffff68
    b8b8:	ldr	r1, [pc, #1884]	; c01c <read_grib2_message+0x1150>
    b8bc:	ldr	r0, [fp, #-172]	; 0xffffff54
    b8c0:	bl	0 <coda_mem_record_add_field>
    b8c4:	bl	0 <__aeabi_read_tp>
    b8c8:	mov	r2, r0
    b8cc:	ldr	r3, [pc, #1784]	; bfcc <read_grib2_message+0x1100>
    b8d0:	ldr	r3, [r2, r3]
    b8d4:	ldr	r3, [r3, #448]	; 0x1c0
    b8d8:	str	r3, [fp, #-148]	; 0xffffff6c
    b8dc:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b8e0:	ldr	r2, [fp, #-140]	; 0xffffff74
    b8e4:	mov	r1, #0
    b8e8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b8ec:	bl	0 <coda_mem_uint8_new>
    b8f0:	str	r0, [fp, #-152]	; 0xffffff68
    b8f4:	mov	r3, #0
    b8f8:	ldr	r2, [fp, #-152]	; 0xffffff68
    b8fc:	ldr	r1, [pc, #1820]	; c020 <read_grib2_message+0x1154>
    b900:	ldr	r0, [fp, #-172]	; 0xffffff54
    b904:	bl	0 <coda_mem_record_add_field>
    b908:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    b90c:	lsl	r3, r3, #8
    b910:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    b914:	add	r3, r3, r2
    b918:	lsl	r3, r3, #8
    b91c:	ldrb	r2, [fp, #-269]	; 0xfffffef3
    b920:	add	r3, r3, r2
    b924:	lsl	r3, r3, #8
    b928:	ldrb	r2, [fp, #-268]	; 0xfffffef4
    b92c:	add	r3, r3, r2
    b930:	str	r3, [fp, #-176]	; 0xffffff50
    b934:	bl	0 <__aeabi_read_tp>
    b938:	mov	r2, r0
    b93c:	ldr	r3, [pc, #1672]	; bfcc <read_grib2_message+0x1100>
    b940:	ldr	r3, [r2, r3]
    b944:	ldr	r3, [r3, #452]	; 0x1c4
    b948:	str	r3, [fp, #-148]	; 0xffffff6c
    b94c:	ldr	r3, [fp, #-176]	; 0xffffff50
    b950:	ldr	r2, [fp, #-140]	; 0xffffff74
    b954:	mov	r1, #0
    b958:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b95c:	bl	0 <coda_mem_uint32_new>
    b960:	str	r0, [fp, #-152]	; 0xffffff68
    b964:	mov	r3, #0
    b968:	ldr	r2, [fp, #-152]	; 0xffffff68
    b96c:	ldr	r1, [pc, #1712]	; c024 <read_grib2_message+0x1158>
    b970:	ldr	r0, [fp, #-172]	; 0xffffff54
    b974:	bl	0 <coda_mem_record_add_field>
    b978:	ldrb	r3, [fp, #-267]	; 0xfffffef5
    b97c:	strb	r3, [fp, #-177]	; 0xffffff4f
    b980:	ldrb	r3, [fp, #-266]	; 0xfffffef6
    b984:	strb	r3, [fp, #-178]	; 0xffffff4e
    b988:	bl	0 <__aeabi_read_tp>
    b98c:	mov	r2, r0
    b990:	ldr	r3, [pc, #1588]	; bfcc <read_grib2_message+0x1100>
    b994:	ldr	r3, [r2, r3]
    b998:	ldr	r3, [r3, #456]	; 0x1c8
    b99c:	str	r3, [fp, #-148]	; 0xffffff6c
    b9a0:	ldrb	r3, [fp, #-178]	; 0xffffff4e
    b9a4:	ldr	r2, [fp, #-140]	; 0xffffff74
    b9a8:	mov	r1, #0
    b9ac:	ldr	r0, [fp, #-148]	; 0xffffff6c
    b9b0:	bl	0 <coda_mem_uint8_new>
    b9b4:	str	r0, [fp, #-152]	; 0xffffff68
    b9b8:	mov	r3, #0
    b9bc:	ldr	r2, [fp, #-152]	; 0xffffff68
    b9c0:	ldr	r1, [pc, #1632]	; c028 <read_grib2_message+0x115c>
    b9c4:	ldr	r0, [fp, #-172]	; 0xffffff54
    b9c8:	bl	0 <coda_mem_record_add_field>
    b9cc:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    b9d0:	uxth	r3, r3
    b9d4:	lsl	r3, r3, #8
    b9d8:	uxth	r2, r3
    b9dc:	ldrb	r3, [fp, #-264]	; 0xfffffef8
    b9e0:	uxth	r3, r3
    b9e4:	add	r3, r2, r3
    b9e8:	strh	r3, [fp, #-180]	; 0xffffff4c
    b9ec:	bl	0 <__aeabi_read_tp>
    b9f0:	mov	r2, r0
    b9f4:	ldr	r3, [pc, #1488]	; bfcc <read_grib2_message+0x1100>
    b9f8:	ldr	r3, [r2, r3]
    b9fc:	ldr	r3, [r3, #520]	; 0x208
    ba00:	str	r3, [fp, #-148]	; 0xffffff6c
    ba04:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    ba08:	ldr	r2, [fp, #-140]	; 0xffffff74
    ba0c:	mov	r1, #0
    ba10:	ldr	r0, [fp, #-148]	; 0xffffff6c
    ba14:	bl	0 <coda_mem_uint16_new>
    ba18:	str	r0, [fp, #-152]	; 0xffffff68
    ba1c:	mov	r3, #0
    ba20:	ldr	r2, [fp, #-152]	; 0xffffff68
    ba24:	ldr	r1, [pc, #1536]	; c02c <read_grib2_message+0x1160>
    ba28:	ldr	r0, [fp, #-172]	; 0xffffff54
    ba2c:	bl	0 <coda_mem_record_add_field>
    ba30:	sub	r3, fp, #356	; 0x164
    ba34:	mov	r1, r3
    ba38:	sub	r3, fp, #356	; 0x164
    ba3c:	ldrd	r2, [r3, #-8]
    ba40:	adds	r2, r2, #9
    ba44:	adc	r3, r3, #0
    ba48:	strd	r2, [r1, #-8]
    ba4c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    ba50:	cmp	r3, #0
    ba54:	bne	c6c8 <read_grib2_message+0x17fc>
    ba58:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    ba5c:	cmp	r3, #3
    ba60:	bls	ba7c <read_grib2_message+0xbb0>
    ba64:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    ba68:	cmp	r3, #39	; 0x27
    ba6c:	bls	c6c8 <read_grib2_message+0x17fc>
    ba70:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    ba74:	cmp	r3, #43	; 0x2b
    ba78:	bhi	c6c8 <read_grib2_message+0x17fc>
    ba7c:	ldr	r3, [fp, #-352]	; 0xfffffea0
    ba80:	ldr	r1, [r3, #52]	; 0x34
    ba84:	sub	r3, fp, #356	; 0x164
    ba88:	mov	r0, r3
    ba8c:	sub	r3, fp, #272	; 0x110
    ba90:	str	r3, [sp, #8]
    ba94:	mov	r2, #58	; 0x3a
    ba98:	mov	r3, #0
    ba9c:	strd	r2, [sp]
    baa0:	ldrd	r2, [r0, #-8]
    baa4:	mov	r0, r1
    baa8:	bl	0 <read_bytes>
    baac:	mov	r3, r0
    bab0:	cmp	r3, #0
    bab4:	bge	bac8 <read_grib2_message+0xbfc>
    bab8:	ldr	r0, [fp, #-172]	; 0xffffff54
    babc:	bl	0 <coda_dynamic_type_delete>
    bac0:	mvn	r3, #0
    bac4:	b	d7e8 <read_grib2_message+0x291c>
    bac8:	bl	0 <__aeabi_read_tp>
    bacc:	mov	r2, r0
    bad0:	ldr	r3, [pc, #1268]	; bfcc <read_grib2_message+0x1100>
    bad4:	ldr	r3, [r2, r3]
    bad8:	ldr	r3, [r3, #360]	; 0x168
    badc:	str	r3, [fp, #-148]	; 0xffffff6c
    bae0:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    bae4:	ldr	r2, [fp, #-140]	; 0xffffff74
    bae8:	mov	r1, #0
    baec:	ldr	r0, [fp, #-148]	; 0xffffff6c
    baf0:	bl	0 <coda_mem_uint8_new>
    baf4:	str	r0, [fp, #-152]	; 0xffffff68
    baf8:	mov	r3, #0
    bafc:	ldr	r2, [fp, #-152]	; 0xffffff68
    bb00:	ldr	r1, [pc, #1320]	; c030 <read_grib2_message+0x1164>
    bb04:	ldr	r0, [fp, #-172]	; 0xffffff54
    bb08:	bl	0 <coda_mem_record_add_field>
    bb0c:	bl	0 <__aeabi_read_tp>
    bb10:	mov	r2, r0
    bb14:	ldr	r3, [pc, #1200]	; bfcc <read_grib2_message+0x1100>
    bb18:	ldr	r3, [r2, r3]
    bb1c:	ldr	r3, [r3, #364]	; 0x16c
    bb20:	str	r3, [fp, #-148]	; 0xffffff6c
    bb24:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    bb28:	ldr	r2, [fp, #-140]	; 0xffffff74
    bb2c:	mov	r1, #0
    bb30:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bb34:	bl	0 <coda_mem_uint8_new>
    bb38:	str	r0, [fp, #-152]	; 0xffffff68
    bb3c:	mov	r3, #0
    bb40:	ldr	r2, [fp, #-152]	; 0xffffff68
    bb44:	ldr	r1, [pc, #1256]	; c034 <read_grib2_message+0x1168>
    bb48:	ldr	r0, [fp, #-172]	; 0xffffff54
    bb4c:	bl	0 <coda_mem_record_add_field>
    bb50:	ldrb	r3, [fp, #-270]	; 0xfffffef2
    bb54:	lsl	r3, r3, #8
    bb58:	ldrb	r2, [fp, #-269]	; 0xfffffef3
    bb5c:	add	r3, r3, r2
    bb60:	lsl	r3, r3, #8
    bb64:	ldrb	r2, [fp, #-268]	; 0xfffffef4
    bb68:	add	r3, r3, r2
    bb6c:	lsl	r3, r3, #8
    bb70:	ldrb	r2, [fp, #-267]	; 0xfffffef5
    bb74:	add	r3, r3, r2
    bb78:	str	r3, [fp, #-184]	; 0xffffff48
    bb7c:	bl	0 <__aeabi_read_tp>
    bb80:	mov	r2, r0
    bb84:	ldr	r3, [pc, #1088]	; bfcc <read_grib2_message+0x1100>
    bb88:	ldr	r3, [r2, r3]
    bb8c:	ldr	r3, [r3, #368]	; 0x170
    bb90:	str	r3, [fp, #-148]	; 0xffffff6c
    bb94:	ldr	r3, [fp, #-184]	; 0xffffff48
    bb98:	ldr	r2, [fp, #-140]	; 0xffffff74
    bb9c:	mov	r1, #0
    bba0:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bba4:	bl	0 <coda_mem_uint32_new>
    bba8:	str	r0, [fp, #-152]	; 0xffffff68
    bbac:	mov	r3, #0
    bbb0:	ldr	r2, [fp, #-152]	; 0xffffff68
    bbb4:	ldr	r1, [pc, #1148]	; c038 <read_grib2_message+0x116c>
    bbb8:	ldr	r0, [fp, #-172]	; 0xffffff54
    bbbc:	bl	0 <coda_mem_record_add_field>
    bbc0:	bl	0 <__aeabi_read_tp>
    bbc4:	mov	r2, r0
    bbc8:	ldr	r3, [pc, #1020]	; bfcc <read_grib2_message+0x1100>
    bbcc:	ldr	r3, [r2, r3]
    bbd0:	ldr	r3, [r3, #372]	; 0x174
    bbd4:	str	r3, [fp, #-148]	; 0xffffff6c
    bbd8:	ldrb	r3, [fp, #-266]	; 0xfffffef6
    bbdc:	ldr	r2, [fp, #-140]	; 0xffffff74
    bbe0:	mov	r1, #0
    bbe4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bbe8:	bl	0 <coda_mem_uint8_new>
    bbec:	str	r0, [fp, #-152]	; 0xffffff68
    bbf0:	mov	r3, #0
    bbf4:	ldr	r2, [fp, #-152]	; 0xffffff68
    bbf8:	ldr	r1, [pc, #1084]	; c03c <read_grib2_message+0x1170>
    bbfc:	ldr	r0, [fp, #-172]	; 0xffffff54
    bc00:	bl	0 <coda_mem_record_add_field>
    bc04:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    bc08:	lsl	r3, r3, #8
    bc0c:	ldrb	r2, [fp, #-264]	; 0xfffffef8
    bc10:	add	r3, r3, r2
    bc14:	lsl	r3, r3, #8
    bc18:	ldrb	r2, [fp, #-263]	; 0xfffffef9
    bc1c:	add	r3, r3, r2
    bc20:	lsl	r3, r3, #8
    bc24:	ldrb	r2, [fp, #-262]	; 0xfffffefa
    bc28:	add	r3, r3, r2
    bc2c:	str	r3, [fp, #-184]	; 0xffffff48
    bc30:	bl	0 <__aeabi_read_tp>
    bc34:	mov	r2, r0
    bc38:	ldr	r3, [pc, #908]	; bfcc <read_grib2_message+0x1100>
    bc3c:	ldr	r3, [r2, r3]
    bc40:	ldr	r3, [r3, #376]	; 0x178
    bc44:	str	r3, [fp, #-148]	; 0xffffff6c
    bc48:	ldr	r3, [fp, #-184]	; 0xffffff48
    bc4c:	ldr	r2, [fp, #-140]	; 0xffffff74
    bc50:	mov	r1, #0
    bc54:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bc58:	bl	0 <coda_mem_uint32_new>
    bc5c:	str	r0, [fp, #-152]	; 0xffffff68
    bc60:	mov	r3, #0
    bc64:	ldr	r2, [fp, #-152]	; 0xffffff68
    bc68:	ldr	r1, [pc, #976]	; c040 <read_grib2_message+0x1174>
    bc6c:	ldr	r0, [fp, #-172]	; 0xffffff54
    bc70:	bl	0 <coda_mem_record_add_field>
    bc74:	bl	0 <__aeabi_read_tp>
    bc78:	mov	r2, r0
    bc7c:	ldr	r3, [pc, #840]	; bfcc <read_grib2_message+0x1100>
    bc80:	ldr	r3, [r2, r3]
    bc84:	ldr	r3, [r3, #380]	; 0x17c
    bc88:	str	r3, [fp, #-148]	; 0xffffff6c
    bc8c:	ldrb	r3, [fp, #-261]	; 0xfffffefb
    bc90:	ldr	r2, [fp, #-140]	; 0xffffff74
    bc94:	mov	r1, #0
    bc98:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bc9c:	bl	0 <coda_mem_uint8_new>
    bca0:	str	r0, [fp, #-152]	; 0xffffff68
    bca4:	mov	r3, #0
    bca8:	ldr	r2, [fp, #-152]	; 0xffffff68
    bcac:	ldr	r1, [pc, #912]	; c044 <read_grib2_message+0x1178>
    bcb0:	ldr	r0, [fp, #-172]	; 0xffffff54
    bcb4:	bl	0 <coda_mem_record_add_field>
    bcb8:	ldrb	r3, [fp, #-260]	; 0xfffffefc
    bcbc:	lsl	r3, r3, #8
    bcc0:	ldrb	r2, [fp, #-259]	; 0xfffffefd
    bcc4:	add	r3, r3, r2
    bcc8:	lsl	r3, r3, #8
    bccc:	ldrb	r2, [fp, #-258]	; 0xfffffefe
    bcd0:	add	r3, r3, r2
    bcd4:	lsl	r3, r3, #8
    bcd8:	ldrb	r2, [fp, #-257]	; 0xfffffeff
    bcdc:	add	r3, r3, r2
    bce0:	str	r3, [fp, #-184]	; 0xffffff48
    bce4:	bl	0 <__aeabi_read_tp>
    bce8:	mov	r2, r0
    bcec:	ldr	r3, [pc, #728]	; bfcc <read_grib2_message+0x1100>
    bcf0:	ldr	r3, [r2, r3]
    bcf4:	ldr	r3, [r3, #384]	; 0x180
    bcf8:	str	r3, [fp, #-148]	; 0xffffff6c
    bcfc:	ldr	r3, [fp, #-184]	; 0xffffff48
    bd00:	ldr	r2, [fp, #-140]	; 0xffffff74
    bd04:	mov	r1, #0
    bd08:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bd0c:	bl	0 <coda_mem_uint32_new>
    bd10:	str	r0, [fp, #-152]	; 0xffffff68
    bd14:	mov	r3, #0
    bd18:	ldr	r2, [fp, #-152]	; 0xffffff68
    bd1c:	ldr	r1, [pc, #804]	; c048 <read_grib2_message+0x117c>
    bd20:	ldr	r0, [fp, #-172]	; 0xffffff54
    bd24:	bl	0 <coda_mem_record_add_field>
    bd28:	ldrb	r3, [fp, #-256]	; 0xffffff00
    bd2c:	lsl	r3, r3, #8
    bd30:	ldrb	r2, [fp, #-255]	; 0xffffff01
    bd34:	add	r3, r3, r2
    bd38:	lsl	r3, r3, #8
    bd3c:	ldrb	r2, [fp, #-254]	; 0xffffff02
    bd40:	add	r3, r3, r2
    bd44:	lsl	r3, r3, #8
    bd48:	ldrb	r2, [fp, #-253]	; 0xffffff03
    bd4c:	add	r3, r3, r2
    bd50:	str	r3, [fp, #-188]	; 0xffffff44
    bd54:	bl	0 <__aeabi_read_tp>
    bd58:	mov	r2, r0
    bd5c:	ldr	r3, [pc, #616]	; bfcc <read_grib2_message+0x1100>
    bd60:	ldr	r3, [r2, r3]
    bd64:	ldr	r3, [r3, #388]	; 0x184
    bd68:	str	r3, [fp, #-148]	; 0xffffff6c
    bd6c:	ldr	r3, [fp, #-188]	; 0xffffff44
    bd70:	ldr	r2, [fp, #-140]	; 0xffffff74
    bd74:	mov	r1, #0
    bd78:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bd7c:	bl	0 <coda_mem_uint32_new>
    bd80:	str	r0, [fp, #-152]	; 0xffffff68
    bd84:	mov	r3, #0
    bd88:	ldr	r2, [fp, #-152]	; 0xffffff68
    bd8c:	ldr	r1, [pc, #696]	; c04c <read_grib2_message+0x1180>
    bd90:	ldr	r0, [fp, #-172]	; 0xffffff54
    bd94:	bl	0 <coda_mem_record_add_field>
    bd98:	ldrb	r3, [fp, #-252]	; 0xffffff04
    bd9c:	lsl	r3, r3, #8
    bda0:	ldrb	r2, [fp, #-251]	; 0xffffff05
    bda4:	add	r3, r3, r2
    bda8:	lsl	r3, r3, #8
    bdac:	ldrb	r2, [fp, #-250]	; 0xffffff06
    bdb0:	add	r3, r3, r2
    bdb4:	lsl	r3, r3, #8
    bdb8:	ldrb	r2, [fp, #-249]	; 0xffffff07
    bdbc:	add	r3, r3, r2
    bdc0:	str	r3, [fp, #-192]	; 0xffffff40
    bdc4:	bl	0 <__aeabi_read_tp>
    bdc8:	mov	r2, r0
    bdcc:	ldr	r3, [pc, #504]	; bfcc <read_grib2_message+0x1100>
    bdd0:	ldr	r3, [r2, r3]
    bdd4:	ldr	r3, [r3, #392]	; 0x188
    bdd8:	str	r3, [fp, #-148]	; 0xffffff6c
    bddc:	ldr	r3, [fp, #-192]	; 0xffffff40
    bde0:	ldr	r2, [fp, #-140]	; 0xffffff74
    bde4:	mov	r1, #0
    bde8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bdec:	bl	0 <coda_mem_uint32_new>
    bdf0:	str	r0, [fp, #-152]	; 0xffffff68
    bdf4:	mov	r3, #0
    bdf8:	ldr	r2, [fp, #-152]	; 0xffffff68
    bdfc:	ldr	r1, [pc, #588]	; c050 <read_grib2_message+0x1184>
    be00:	ldr	r0, [fp, #-172]	; 0xffffff54
    be04:	bl	0 <coda_mem_record_add_field>
    be08:	ldrb	r3, [fp, #-248]	; 0xffffff08
    be0c:	lsl	r3, r3, #8
    be10:	ldrb	r2, [fp, #-247]	; 0xffffff09
    be14:	add	r3, r3, r2
    be18:	lsl	r3, r3, #8
    be1c:	ldrb	r2, [fp, #-246]	; 0xffffff0a
    be20:	add	r3, r3, r2
    be24:	lsl	r3, r3, #8
    be28:	ldrb	r2, [fp, #-245]	; 0xffffff0b
    be2c:	add	r3, r3, r2
    be30:	str	r3, [fp, #-184]	; 0xffffff48
    be34:	bl	0 <__aeabi_read_tp>
    be38:	mov	r2, r0
    be3c:	ldr	r3, [pc, #392]	; bfcc <read_grib2_message+0x1100>
    be40:	ldr	r3, [r2, r3]
    be44:	ldr	r3, [r3, #396]	; 0x18c
    be48:	str	r3, [fp, #-148]	; 0xffffff6c
    be4c:	ldr	r3, [fp, #-184]	; 0xffffff48
    be50:	ldr	r2, [fp, #-140]	; 0xffffff74
    be54:	mov	r1, #0
    be58:	ldr	r0, [fp, #-148]	; 0xffffff6c
    be5c:	bl	0 <coda_mem_uint32_new>
    be60:	str	r0, [fp, #-152]	; 0xffffff68
    be64:	mov	r3, #0
    be68:	ldr	r2, [fp, #-152]	; 0xffffff68
    be6c:	ldr	r1, [pc, #480]	; c054 <read_grib2_message+0x1188>
    be70:	ldr	r0, [fp, #-172]	; 0xffffff54
    be74:	bl	0 <coda_mem_record_add_field>
    be78:	ldrb	r3, [fp, #-244]	; 0xffffff0c
    be7c:	lsl	r3, r3, #8
    be80:	ldrb	r2, [fp, #-243]	; 0xffffff0d
    be84:	add	r3, r3, r2
    be88:	lsl	r3, r3, #8
    be8c:	ldrb	r2, [fp, #-242]	; 0xffffff0e
    be90:	add	r3, r3, r2
    be94:	lsl	r3, r3, #8
    be98:	ldrb	r2, [fp, #-241]	; 0xffffff0f
    be9c:	add	r3, r3, r2
    bea0:	str	r3, [fp, #-184]	; 0xffffff48
    bea4:	bl	0 <__aeabi_read_tp>
    bea8:	mov	r2, r0
    beac:	ldr	r3, [pc, #280]	; bfcc <read_grib2_message+0x1100>
    beb0:	ldr	r3, [r2, r3]
    beb4:	ldr	r3, [r3, #400]	; 0x190
    beb8:	str	r3, [fp, #-148]	; 0xffffff6c
    bebc:	ldr	r3, [fp, #-184]	; 0xffffff48
    bec0:	ldr	r2, [fp, #-140]	; 0xffffff74
    bec4:	mov	r1, #0
    bec8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    becc:	bl	0 <coda_mem_uint32_new>
    bed0:	str	r0, [fp, #-152]	; 0xffffff68
    bed4:	mov	r3, #0
    bed8:	ldr	r2, [fp, #-152]	; 0xffffff68
    bedc:	ldr	r1, [pc, #372]	; c058 <read_grib2_message+0x118c>
    bee0:	ldr	r0, [fp, #-172]	; 0xffffff54
    bee4:	bl	0 <coda_mem_record_add_field>
    bee8:	ldrb	r3, [fp, #-240]	; 0xffffff10
    beec:	lsl	r3, r3, #8
    bef0:	ldrb	r2, [fp, #-239]	; 0xffffff11
    bef4:	add	r3, r3, r2
    bef8:	lsl	r3, r3, #8
    befc:	ldrb	r2, [fp, #-238]	; 0xffffff12
    bf00:	add	r3, r3, r2
    bf04:	lsl	r3, r3, #8
    bf08:	ldrb	r2, [fp, #-237]	; 0xffffff13
    bf0c:	add	r3, r3, r2
    bf10:	str	r3, [fp, #-184]	; 0xffffff48
    bf14:	ldrb	r3, [fp, #-240]	; 0xffffff10
    bf18:	sxtb	r3, r3
    bf1c:	cmp	r3, #0
    bf20:	bge	bf30 <read_grib2_message+0x1064>
    bf24:	ldr	r3, [fp, #-184]	; 0xffffff48
    bf28:	rsb	r3, r3, #-2147483648	; 0x80000000
    bf2c:	b	bf34 <read_grib2_message+0x1068>
    bf30:	ldr	r3, [fp, #-184]	; 0xffffff48
    bf34:	str	r3, [fp, #-184]	; 0xffffff48
    bf38:	bl	0 <__aeabi_read_tp>
    bf3c:	mov	r2, r0
    bf40:	ldr	r3, [pc, #132]	; bfcc <read_grib2_message+0x1100>
    bf44:	ldr	r3, [r2, r3]
    bf48:	ldr	r3, [r3, #404]	; 0x194
    bf4c:	str	r3, [fp, #-148]	; 0xffffff6c
    bf50:	ldr	r3, [fp, #-184]	; 0xffffff48
    bf54:	ldr	r2, [fp, #-140]	; 0xffffff74
    bf58:	mov	r1, #0
    bf5c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    bf60:	bl	0 <coda_mem_int32_new>
    bf64:	str	r0, [fp, #-152]	; 0xffffff68
    bf68:	mov	r3, #0
    bf6c:	ldr	r2, [fp, #-152]	; 0xffffff68
    bf70:	ldr	r1, [pc, #228]	; c05c <read_grib2_message+0x1190>
    bf74:	ldr	r0, [fp, #-172]	; 0xffffff54
    bf78:	bl	0 <coda_mem_record_add_field>
    bf7c:	ldrb	r3, [fp, #-236]	; 0xffffff14
    bf80:	lsl	r3, r3, #8
    bf84:	ldrb	r2, [fp, #-235]	; 0xffffff15
    bf88:	add	r3, r3, r2
    bf8c:	lsl	r3, r3, #8
    bf90:	ldrb	r2, [fp, #-234]	; 0xffffff16
    bf94:	add	r3, r3, r2
    bf98:	lsl	r3, r3, #8
    bf9c:	ldrb	r2, [fp, #-233]	; 0xffffff17
    bfa0:	add	r3, r3, r2
    bfa4:	str	r3, [fp, #-184]	; 0xffffff48
    bfa8:	ldrb	r3, [fp, #-236]	; 0xffffff14
    bfac:	sxtb	r3, r3
    bfb0:	cmp	r3, #0
    bfb4:	bge	c0a4 <read_grib2_message+0x11d8>
    bfb8:	ldr	r3, [fp, #-184]	; 0xffffff48
    bfbc:	rsb	r3, r3, #-2147483648	; 0x80000000
    bfc0:	b	c0a8 <read_grib2_message+0x11dc>
    bfc4:	.word	0x000017fc
    bfc8:	.word	0xfffffed4
    bfcc:	.word	0x00000000
    bfd0:	.word	0x00000d58
    bfd4:	.word	0x00000e80
    bfd8:	.word	0x0000141c
    bfdc:	.word	0x00001430
    bfe0:	.word	0x00001444
    bfe4:	.word	0x00001460
    bfe8:	.word	0x00000dd4
    bfec:	.word	0x00000ddc
    bff0:	.word	0x00000de0
    bff4:	.word	0x00000de8
    bff8:	.word	0x00001468
    bffc:	.word	0x00001470
    c000:	.word	0x00001490
    c004:	.word	0x00000ea0
    c008:	.word	0x00000ea8
    c00c:	.word	0x00000eb0
    c010:	.word	0x0000091c
    c014:	.word	0x00000180
    c018:	.word	0x000001c8
    c01c:	.word	0x0000116c
    c020:	.word	0x00001180
    c024:	.word	0x00001198
    c028:	.word	0x000011ac
    c02c:	.word	0x000011cc
    c030:	.word	0x000011ec
    c034:	.word	0x000011fc
    c038:	.word	0x00001220
    c03c:	.word	0x00001244
    c040:	.word	0x00001260
    c044:	.word	0x0000127c
    c048:	.word	0x00001298
    c04c:	.word	0x00000c0c
    c050:	.word	0x00000c10
    c054:	.word	0x000012b4
    c058:	.word	0x000012dc
    c05c:	.word	0x00000c14
    c060:	.word	0x00000c30
    c064:	.word	0x00000c4c
    c068:	.word	0x00000c68
    c06c:	.word	0x00000c80
    c070:	.word	0x00000c9c
    c074:	.word	0x00000cc4
    c078:	.word	0x00000cb0
    c07c:	.word	0x00000cc8
    c080:	.word	0x00001868
    c084:	.word	0x000018c8
    c088:	.word	0x0000190c
    c08c:	.word	0x00000000
    c090:	.word	0x00000cec
    c094:	.word	0x00001954
    c098:	.word	0x000019bc
    c09c:	.word	0x00001840
    c0a0:	.word	0xfffffed4
    c0a4:	ldr	r3, [fp, #-184]	; 0xffffff48
    c0a8:	str	r3, [fp, #-184]	; 0xffffff48
    c0ac:	bl	0 <__aeabi_read_tp>
    c0b0:	mov	r2, r0
    c0b4:	ldr	r3, [pc, #-48]	; c08c <read_grib2_message+0x11c0>
    c0b8:	ldr	r3, [r2, r3]
    c0bc:	ldr	r3, [r3, #408]	; 0x198
    c0c0:	str	r3, [fp, #-148]	; 0xffffff6c
    c0c4:	ldr	r3, [fp, #-184]	; 0xffffff48
    c0c8:	ldr	r2, [fp, #-140]	; 0xffffff74
    c0cc:	mov	r1, #0
    c0d0:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c0d4:	bl	0 <coda_mem_int32_new>
    c0d8:	str	r0, [fp, #-152]	; 0xffffff68
    c0dc:	mov	r3, #0
    c0e0:	ldr	r2, [fp, #-152]	; 0xffffff68
    c0e4:	ldr	r1, [pc, #-140]	; c060 <read_grib2_message+0x1194>
    c0e8:	ldr	r0, [fp, #-172]	; 0xffffff54
    c0ec:	bl	0 <coda_mem_record_add_field>
    c0f0:	bl	0 <__aeabi_read_tp>
    c0f4:	mov	r2, r0
    c0f8:	ldr	r3, [pc, #-116]	; c08c <read_grib2_message+0x11c0>
    c0fc:	ldr	r3, [r2, r3]
    c100:	ldr	r3, [r3, #412]	; 0x19c
    c104:	str	r3, [fp, #-148]	; 0xffffff6c
    c108:	ldrb	r3, [fp, #-232]	; 0xffffff18
    c10c:	ldr	r2, [fp, #-140]	; 0xffffff74
    c110:	mov	r1, #0
    c114:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c118:	bl	0 <coda_mem_uint8_new>
    c11c:	str	r0, [fp, #-152]	; 0xffffff68
    c120:	mov	r3, #0
    c124:	ldr	r2, [fp, #-152]	; 0xffffff68
    c128:	ldr	r1, [pc, #-204]	; c064 <read_grib2_message+0x1198>
    c12c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c130:	bl	0 <coda_mem_record_add_field>
    c134:	ldrb	r3, [fp, #-231]	; 0xffffff19
    c138:	lsl	r3, r3, #8
    c13c:	ldrb	r2, [fp, #-230]	; 0xffffff1a
    c140:	add	r3, r3, r2
    c144:	lsl	r3, r3, #8
    c148:	ldrb	r2, [fp, #-229]	; 0xffffff1b
    c14c:	add	r3, r3, r2
    c150:	lsl	r3, r3, #8
    c154:	ldrb	r2, [fp, #-228]	; 0xffffff1c
    c158:	add	r3, r3, r2
    c15c:	str	r3, [fp, #-184]	; 0xffffff48
    c160:	ldrb	r3, [fp, #-231]	; 0xffffff19
    c164:	sxtb	r3, r3
    c168:	cmp	r3, #0
    c16c:	bge	c17c <read_grib2_message+0x12b0>
    c170:	ldr	r3, [fp, #-184]	; 0xffffff48
    c174:	rsb	r3, r3, #-2147483648	; 0x80000000
    c178:	b	c180 <read_grib2_message+0x12b4>
    c17c:	ldr	r3, [fp, #-184]	; 0xffffff48
    c180:	str	r3, [fp, #-184]	; 0xffffff48
    c184:	bl	0 <__aeabi_read_tp>
    c188:	mov	r2, r0
    c18c:	ldr	r3, [pc, #-264]	; c08c <read_grib2_message+0x11c0>
    c190:	ldr	r3, [r2, r3]
    c194:	ldr	r3, [r3, #416]	; 0x1a0
    c198:	str	r3, [fp, #-148]	; 0xffffff6c
    c19c:	ldr	r3, [fp, #-184]	; 0xffffff48
    c1a0:	ldr	r2, [fp, #-140]	; 0xffffff74
    c1a4:	mov	r1, #0
    c1a8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c1ac:	bl	0 <coda_mem_int32_new>
    c1b0:	str	r0, [fp, #-152]	; 0xffffff68
    c1b4:	mov	r3, #0
    c1b8:	ldr	r2, [fp, #-152]	; 0xffffff68
    c1bc:	ldr	r1, [pc, #-348]	; c068 <read_grib2_message+0x119c>
    c1c0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c1c4:	bl	0 <coda_mem_record_add_field>
    c1c8:	ldrb	r3, [fp, #-227]	; 0xffffff1d
    c1cc:	lsl	r3, r3, #8
    c1d0:	ldrb	r2, [fp, #-226]	; 0xffffff1e
    c1d4:	add	r3, r3, r2
    c1d8:	lsl	r3, r3, #8
    c1dc:	ldrb	r2, [fp, #-225]	; 0xffffff1f
    c1e0:	add	r3, r3, r2
    c1e4:	lsl	r3, r3, #8
    c1e8:	ldrb	r2, [fp, #-224]	; 0xffffff20
    c1ec:	add	r3, r3, r2
    c1f0:	str	r3, [fp, #-184]	; 0xffffff48
    c1f4:	ldrb	r3, [fp, #-227]	; 0xffffff1d
    c1f8:	sxtb	r3, r3
    c1fc:	cmp	r3, #0
    c200:	bge	c210 <read_grib2_message+0x1344>
    c204:	ldr	r3, [fp, #-184]	; 0xffffff48
    c208:	rsb	r3, r3, #-2147483648	; 0x80000000
    c20c:	b	c214 <read_grib2_message+0x1348>
    c210:	ldr	r3, [fp, #-184]	; 0xffffff48
    c214:	str	r3, [fp, #-184]	; 0xffffff48
    c218:	bl	0 <__aeabi_read_tp>
    c21c:	mov	r2, r0
    c220:	ldr	r3, [pc, #-412]	; c08c <read_grib2_message+0x11c0>
    c224:	ldr	r3, [r2, r3]
    c228:	ldr	r3, [r3, #420]	; 0x1a4
    c22c:	str	r3, [fp, #-148]	; 0xffffff6c
    c230:	ldr	r3, [fp, #-184]	; 0xffffff48
    c234:	ldr	r2, [fp, #-140]	; 0xffffff74
    c238:	mov	r1, #0
    c23c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c240:	bl	0 <coda_mem_int32_new>
    c244:	str	r0, [fp, #-152]	; 0xffffff68
    c248:	mov	r3, #0
    c24c:	ldr	r2, [fp, #-152]	; 0xffffff68
    c250:	ldr	r1, [pc, #-492]	; c06c <read_grib2_message+0x11a0>
    c254:	ldr	r0, [fp, #-172]	; 0xffffff54
    c258:	bl	0 <coda_mem_record_add_field>
    c25c:	ldrb	r3, [fp, #-223]	; 0xffffff21
    c260:	lsl	r3, r3, #8
    c264:	ldrb	r2, [fp, #-222]	; 0xffffff22
    c268:	add	r3, r3, r2
    c26c:	lsl	r3, r3, #8
    c270:	ldrb	r2, [fp, #-221]	; 0xffffff23
    c274:	add	r3, r3, r2
    c278:	lsl	r3, r3, #8
    c27c:	ldrb	r2, [fp, #-220]	; 0xffffff24
    c280:	add	r3, r3, r2
    c284:	str	r3, [fp, #-184]	; 0xffffff48
    c288:	bl	0 <__aeabi_read_tp>
    c28c:	mov	r2, r0
    c290:	ldr	r3, [pc, #-524]	; c08c <read_grib2_message+0x11c0>
    c294:	ldr	r3, [r2, r3]
    c298:	ldr	r3, [r3, #424]	; 0x1a8
    c29c:	str	r3, [fp, #-148]	; 0xffffff6c
    c2a0:	ldr	r3, [fp, #-184]	; 0xffffff48
    c2a4:	ldr	r2, [fp, #-140]	; 0xffffff74
    c2a8:	mov	r1, #0
    c2ac:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c2b0:	bl	0 <coda_mem_uint32_new>
    c2b4:	str	r0, [fp, #-152]	; 0xffffff68
    c2b8:	mov	r3, #0
    c2bc:	ldr	r2, [fp, #-152]	; 0xffffff68
    c2c0:	ldr	r1, [pc, #-600]	; c070 <read_grib2_message+0x11a4>
    c2c4:	ldr	r0, [fp, #-172]	; 0xffffff54
    c2c8:	bl	0 <coda_mem_record_add_field>
    c2cc:	ldrb	r3, [fp, #-219]	; 0xffffff25
    c2d0:	lsl	r3, r3, #8
    c2d4:	ldrb	r2, [fp, #-218]	; 0xffffff26
    c2d8:	add	r3, r3, r2
    c2dc:	lsl	r3, r3, #8
    c2e0:	ldrb	r2, [fp, #-217]	; 0xffffff27
    c2e4:	add	r3, r3, r2
    c2e8:	lsl	r3, r3, #8
    c2ec:	ldrb	r2, [fp, #-216]	; 0xffffff28
    c2f0:	add	r3, r3, r2
    c2f4:	str	r3, [fp, #-184]	; 0xffffff48
    c2f8:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    c2fc:	cmp	r3, #39	; 0x27
    c300:	bls	c358 <read_grib2_message+0x148c>
    c304:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    c308:	cmp	r3, #43	; 0x2b
    c30c:	bhi	c358 <read_grib2_message+0x148c>
    c310:	bl	0 <__aeabi_read_tp>
    c314:	mov	r2, r0
    c318:	ldr	r3, [pc, #-660]	; c08c <read_grib2_message+0x11c0>
    c31c:	ldr	r3, [r2, r3]
    c320:	ldr	r3, [r3, #432]	; 0x1b0
    c324:	str	r3, [fp, #-148]	; 0xffffff6c
    c328:	ldr	r3, [fp, #-184]	; 0xffffff48
    c32c:	ldr	r2, [fp, #-140]	; 0xffffff74
    c330:	mov	r1, #0
    c334:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c338:	bl	0 <coda_mem_uint32_new>
    c33c:	str	r0, [fp, #-152]	; 0xffffff68
    c340:	mov	r3, #0
    c344:	ldr	r2, [fp, #-152]	; 0xffffff68
    c348:	ldr	r1, [pc, #-732]	; c074 <read_grib2_message+0x11a8>
    c34c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c350:	bl	0 <coda_mem_record_add_field>
    c354:	b	c39c <read_grib2_message+0x14d0>
    c358:	bl	0 <__aeabi_read_tp>
    c35c:	mov	r2, r0
    c360:	ldr	r3, [pc, #-732]	; c08c <read_grib2_message+0x11c0>
    c364:	ldr	r3, [r2, r3]
    c368:	ldr	r3, [r3, #428]	; 0x1ac
    c36c:	str	r3, [fp, #-148]	; 0xffffff6c
    c370:	ldr	r3, [fp, #-184]	; 0xffffff48
    c374:	ldr	r2, [fp, #-140]	; 0xffffff74
    c378:	mov	r1, #0
    c37c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c380:	bl	0 <coda_mem_uint32_new>
    c384:	str	r0, [fp, #-152]	; 0xffffff68
    c388:	mov	r3, #0
    c38c:	ldr	r2, [fp, #-152]	; 0xffffff68
    c390:	ldr	r1, [pc, #-800]	; c078 <read_grib2_message+0x11ac>
    c394:	ldr	r0, [fp, #-172]	; 0xffffff54
    c398:	bl	0 <coda_mem_record_add_field>
    c39c:	bl	0 <__aeabi_read_tp>
    c3a0:	mov	r2, r0
    c3a4:	ldr	r3, [pc, #-800]	; c08c <read_grib2_message+0x11c0>
    c3a8:	ldr	r3, [r2, r3]
    c3ac:	ldr	r3, [r3, #436]	; 0x1b4
    c3b0:	str	r3, [fp, #-148]	; 0xffffff6c
    c3b4:	ldrb	r3, [fp, #-215]	; 0xffffff29
    c3b8:	ldr	r2, [fp, #-140]	; 0xffffff74
    c3bc:	mov	r1, #0
    c3c0:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c3c4:	bl	0 <coda_mem_uint8_new>
    c3c8:	str	r0, [fp, #-152]	; 0xffffff68
    c3cc:	mov	r3, #0
    c3d0:	ldr	r2, [fp, #-152]	; 0xffffff68
    c3d4:	ldr	r1, [pc, #-864]	; c07c <read_grib2_message+0x11b0>
    c3d8:	ldr	r0, [fp, #-172]	; 0xffffff54
    c3dc:	bl	0 <coda_mem_record_add_field>
    c3e0:	sub	r3, fp, #356	; 0x164
    c3e4:	mov	r1, r3
    c3e8:	sub	r3, fp, #356	; 0x164
    c3ec:	ldrd	r2, [r3, #-8]
    c3f0:	adds	r2, r2, #58	; 0x3a
    c3f4:	adc	r3, r3, #0
    c3f8:	strd	r2, [r1, #-8]
    c3fc:	ldrb	r3, [fp, #-178]	; 0xffffff4e
    c400:	cmp	r3, #0
    c404:	beq	c658 <read_grib2_message+0x178c>
    c408:	ldr	r3, [fp, #-188]	; 0xffffff44
    c40c:	cmn	r3, #1
    c410:	bne	c420 <read_grib2_message+0x1554>
    c414:	ldr	r3, [fp, #-192]	; 0xffffff40
    c418:	str	r3, [fp, #-120]	; 0xffffff88
    c41c:	b	c44c <read_grib2_message+0x1580>
    c420:	ldr	r3, [fp, #-192]	; 0xffffff40
    c424:	cmn	r3, #1
    c428:	bne	c438 <read_grib2_message+0x156c>
    c42c:	ldr	r3, [fp, #-188]	; 0xffffff44
    c430:	str	r3, [fp, #-120]	; 0xffffff88
    c434:	b	c44c <read_grib2_message+0x1580>
    c438:	ldr	r1, [pc, #-960]	; c080 <read_grib2_message+0x11b4>
    c43c:	ldr	r0, [pc, #-932]	; c0a0 <read_grib2_message+0x11d4>
    c440:	bl	0 <coda_set_error>
    c444:	mvn	r3, #0
    c448:	b	d7e8 <read_grib2_message+0x291c>
    c44c:	ldr	r3, [fp, #-144]	; 0xffffff70
    c450:	sub	r3, r3, #72	; 0x48
    c454:	ldrb	r2, [fp, #-177]	; 0xffffff4f
    c458:	ldr	r1, [fp, #-120]	; 0xffffff88
    c45c:	mul	r2, r1, r2
    c460:	cmp	r3, r2
    c464:	beq	c4a0 <read_grib2_message+0x15d4>
    c468:	ldr	r3, [fp, #-144]	; 0xffffff70
    c46c:	sub	r3, r3, #72	; 0x48
    c470:	mov	r1, r3
    c474:	ldrb	r3, [fp, #-177]	; 0xffffff4f
    c478:	ldr	r2, [fp, #-120]	; 0xffffff88
    c47c:	mul	r3, r2, r3
    c480:	mov	r2, r1
    c484:	ldr	r1, [pc, #-1032]	; c084 <read_grib2_message+0x11b8>
    c488:	ldr	r0, [pc, #-1008]	; c0a0 <read_grib2_message+0x11d4>
    c48c:	bl	0 <coda_set_error>
    c490:	ldr	r0, [fp, #-172]	; 0xffffff54
    c494:	bl	0 <coda_dynamic_type_delete>
    c498:	mvn	r3, #0
    c49c:	b	d7e8 <read_grib2_message+0x291c>
    c4a0:	bl	0 <__aeabi_read_tp>
    c4a4:	mov	r2, r0
    c4a8:	ldr	r3, [pc, #-1060]	; c08c <read_grib2_message+0x11c0>
    c4ac:	ldr	r3, [r2, r3]
    c4b0:	ldr	r3, [r3, #444]	; 0x1bc
    c4b4:	str	r3, [fp, #-148]	; 0xffffff6c
    c4b8:	mov	r1, #0
    c4bc:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c4c0:	bl	0 <coda_mem_array_new>
    c4c4:	str	r0, [fp, #-196]	; 0xffffff3c
    c4c8:	mov	r3, #0
    c4cc:	str	r3, [fp, #-124]	; 0xffffff84
    c4d0:	b	c630 <read_grib2_message+0x1764>
    c4d4:	ldr	r3, [fp, #-352]	; 0xfffffea0
    c4d8:	ldr	r1, [r3, #52]	; 0x34
    c4dc:	sub	r3, fp, #356	; 0x164
    c4e0:	mov	r0, r3
    c4e4:	sub	r3, fp, #272	; 0x110
    c4e8:	str	r3, [sp, #8]
    c4ec:	mov	r2, #2
    c4f0:	mov	r3, #0
    c4f4:	strd	r2, [sp]
    c4f8:	ldrd	r2, [r0, #-8]
    c4fc:	mov	r0, r1
    c500:	bl	0 <read_bytes>
    c504:	mov	r3, r0
    c508:	cmp	r3, #0
    c50c:	bge	c528 <read_grib2_message+0x165c>
    c510:	ldr	r0, [fp, #-196]	; 0xffffff3c
    c514:	bl	0 <coda_dynamic_type_delete>
    c518:	ldr	r0, [fp, #-172]	; 0xffffff54
    c51c:	bl	0 <coda_dynamic_type_delete>
    c520:	mvn	r3, #0
    c524:	b	d7e8 <read_grib2_message+0x291c>
    c528:	ldrb	r3, [fp, #-177]	; 0xffffff4f
    c52c:	cmp	r3, #2
    c530:	beq	c550 <read_grib2_message+0x1684>
    c534:	cmp	r3, #4
    c538:	beq	c568 <read_grib2_message+0x169c>
    c53c:	cmp	r3, #1
    c540:	bne	c598 <read_grib2_message+0x16cc>
    c544:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c548:	str	r3, [fp, #-128]	; 0xffffff80
    c54c:	b	c5c4 <read_grib2_message+0x16f8>
    c550:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c554:	lsl	r3, r3, #8
    c558:	ldrb	r2, [fp, #-271]	; 0xfffffef1
    c55c:	add	r3, r3, r2
    c560:	str	r3, [fp, #-128]	; 0xffffff80
    c564:	b	c5c4 <read_grib2_message+0x16f8>
    c568:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c56c:	lsl	r3, r3, #8
    c570:	ldrb	r2, [fp, #-271]	; 0xfffffef1
    c574:	add	r3, r3, r2
    c578:	lsl	r3, r3, #8
    c57c:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    c580:	add	r3, r3, r2
    c584:	lsl	r3, r3, #8
    c588:	ldrb	r2, [fp, #-269]	; 0xfffffef3
    c58c:	add	r3, r3, r2
    c590:	str	r3, [fp, #-128]	; 0xffffff80
    c594:	b	c5c4 <read_grib2_message+0x16f8>
    c598:	ldrb	r3, [fp, #-177]	; 0xffffff4f
    c59c:	mov	r2, r3
    c5a0:	ldr	r1, [pc, #-1312]	; c088 <read_grib2_message+0x11bc>
    c5a4:	ldr	r0, [pc, #-1292]	; c0a0 <read_grib2_message+0x11d4>
    c5a8:	bl	0 <coda_set_error>
    c5ac:	ldr	r0, [fp, #-196]	; 0xffffff3c
    c5b0:	bl	0 <coda_dynamic_type_delete>
    c5b4:	ldr	r0, [fp, #-172]	; 0xffffff54
    c5b8:	bl	0 <coda_dynamic_type_delete>
    c5bc:	mvn	r3, #0
    c5c0:	b	d7e8 <read_grib2_message+0x291c>
    c5c4:	bl	0 <__aeabi_read_tp>
    c5c8:	mov	r2, r0
    c5cc:	ldr	r3, [pc, #-1352]	; c08c <read_grib2_message+0x11c0>
    c5d0:	ldr	r3, [r2, r3]
    c5d4:	ldr	r3, [r3, #440]	; 0x1b8
    c5d8:	str	r3, [fp, #-148]	; 0xffffff6c
    c5dc:	ldr	r3, [fp, #-128]	; 0xffffff80
    c5e0:	ldr	r2, [fp, #-140]	; 0xffffff74
    c5e4:	mov	r1, #0
    c5e8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    c5ec:	bl	0 <coda_mem_uint32_new>
    c5f0:	str	r0, [fp, #-152]	; 0xffffff68
    c5f4:	ldr	r1, [fp, #-152]	; 0xffffff68
    c5f8:	ldr	r0, [fp, #-196]	; 0xffffff3c
    c5fc:	bl	0 <coda_mem_array_add_element>
    c600:	ldrb	r0, [fp, #-177]	; 0xffffff4f
    c604:	mov	r1, #0
    c608:	sub	r3, fp, #356	; 0x164
    c60c:	mov	ip, r3
    c610:	sub	r3, fp, #356	; 0x164
    c614:	ldrd	r2, [r3, #-8]
    c618:	adds	r2, r2, r0
    c61c:	adc	r3, r3, r1
    c620:	strd	r2, [ip, #-8]
    c624:	ldr	r3, [fp, #-124]	; 0xffffff84
    c628:	add	r3, r3, #1
    c62c:	str	r3, [fp, #-124]	; 0xffffff84
    c630:	ldr	r2, [fp, #-124]	; 0xffffff84
    c634:	ldr	r3, [fp, #-120]	; 0xffffff88
    c638:	cmp	r2, r3
    c63c:	blt	c4d4 <read_grib2_message+0x1608>
    c640:	mov	r3, #0
    c644:	ldr	r2, [fp, #-196]	; 0xffffff3c
    c648:	ldr	r1, [pc, #-1472]	; c090 <read_grib2_message+0x11c4>
    c64c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c650:	bl	0 <coda_mem_record_add_field>
    c654:	b	c6f0 <read_grib2_message+0x1824>
    c658:	ldr	r3, [fp, #-188]	; 0xffffff44
    c65c:	cmn	r3, #1
    c660:	beq	c670 <read_grib2_message+0x17a4>
    c664:	ldr	r3, [fp, #-192]	; 0xffffff40
    c668:	cmn	r3, #1
    c66c:	bne	c68c <read_grib2_message+0x17c0>
    c670:	ldr	r1, [pc, #-1508]	; c094 <read_grib2_message+0x11c8>
    c674:	ldr	r0, [pc, #-1500]	; c0a0 <read_grib2_message+0x11d4>
    c678:	bl	0 <coda_set_error>
    c67c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c680:	bl	0 <coda_dynamic_type_delete>
    c684:	mvn	r3, #0
    c688:	b	d7e8 <read_grib2_message+0x291c>
    c68c:	ldr	r3, [fp, #-144]	; 0xffffff70
    c690:	cmp	r3, #72	; 0x48
    c694:	bls	c6f0 <read_grib2_message+0x1824>
    c698:	ldr	r3, [fp, #-144]	; 0xffffff70
    c69c:	sub	r3, r3, #72	; 0x48
    c6a0:	mov	r0, r3
    c6a4:	mov	r1, #0
    c6a8:	sub	r3, fp, #356	; 0x164
    c6ac:	mov	ip, r3
    c6b0:	sub	r3, fp, #356	; 0x164
    c6b4:	ldrd	r2, [r3, #-8]
    c6b8:	adds	r2, r2, r0
    c6bc:	adc	r3, r3, r1
    c6c0:	strd	r2, [ip, #-8]
    c6c4:	b	c6f0 <read_grib2_message+0x1824>
    c6c8:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c6cc:	mov	r2, r3
    c6d0:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    c6d4:	ldr	r1, [pc, #-1604]	; c098 <read_grib2_message+0x11cc>
    c6d8:	ldr	r0, [pc, #-1600]	; c0a0 <read_grib2_message+0x11d4>
    c6dc:	bl	0 <coda_set_error>
    c6e0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c6e4:	bl	0 <coda_dynamic_type_delete>
    c6e8:	mvn	r3, #0
    c6ec:	b	d7e8 <read_grib2_message+0x291c>
    c6f0:	nop			; (mov r0, r0)
    c6f4:	ldr	r1, [fp, #-172]	; 0xffffff54
    c6f8:	ldr	r0, [fp, #-160]	; 0xffffff60
    c6fc:	bl	0 <coda_mem_array_add_element>
    c700:	ldr	r3, [fp, #-36]	; 0xffffffdc
    c704:	add	r3, r3, #1
    c708:	str	r3, [fp, #-36]	; 0xffffffdc
    c70c:	mov	r3, #3
    c710:	strb	r3, [fp, #-113]	; 0xffffff8f
    c714:	b	d72c <read_grib2_message+0x2860>
    c718:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c71c:	cmp	r3, #4
    c720:	bne	cb20 <read_grib2_message+0x1c54>
    c724:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    c728:	cmp	r3, #3
    c72c:	beq	c75c <read_grib2_message+0x1890>
    c730:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    c734:	cmp	r3, #7
    c738:	beq	c75c <read_grib2_message+0x1890>
    c73c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c740:	sub	r2, r3, #48	; 0x30
    c744:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    c748:	ldr	r1, [pc, #-1716]	; c09c <read_grib2_message+0x11d0>
    c74c:	ldr	r0, [pc, #-1716]	; c0a0 <read_grib2_message+0x11d4>
    c750:	bl	0 <coda_set_error>
    c754:	mvn	r3, #0
    c758:	b	d7e8 <read_grib2_message+0x291c>
    c75c:	ldr	r3, [fp, #-352]	; 0xfffffea0
    c760:	ldr	r1, [r3, #52]	; 0x34
    c764:	sub	r3, fp, #356	; 0x164
    c768:	mov	r0, r3
    c76c:	sub	r3, fp, #272	; 0x110
    c770:	str	r3, [sp, #8]
    c774:	mov	r2, #4
    c778:	mov	r3, #0
    c77c:	strd	r2, [sp]
    c780:	ldrd	r2, [r0, #-8]
    c784:	mov	r0, r1
    c788:	bl	0 <read_bytes>
    c78c:	mov	r3, r0
    c790:	cmp	r3, #0
    c794:	bge	c7a0 <read_grib2_message+0x18d4>
    c798:	mvn	r3, #0
    c79c:	b	d7e8 <read_grib2_message+0x291c>
    c7a0:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c7a4:	uxth	r3, r3
    c7a8:	lsl	r3, r3, #8
    c7ac:	uxth	r2, r3
    c7b0:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    c7b4:	uxth	r3, r3
    c7b8:	add	r3, r2, r3
    c7bc:	strh	r3, [fp, #-38]	; 0xffffffda
    c7c0:	ldrb	r3, [fp, #-270]	; 0xfffffef2
    c7c4:	uxth	r3, r3
    c7c8:	lsl	r3, r3, #8
    c7cc:	uxth	r2, r3
    c7d0:	ldrb	r3, [fp, #-269]	; 0xfffffef3
    c7d4:	uxth	r3, r3
    c7d8:	add	r3, r2, r3
    c7dc:	strh	r3, [fp, #-198]	; 0xffffff3a
    c7e0:	sub	r3, fp, #356	; 0x164
    c7e4:	mov	r1, r3
    c7e8:	sub	r3, fp, #356	; 0x164
    c7ec:	ldrd	r2, [r3, #-8]
    c7f0:	adds	r2, r2, #4
    c7f4:	adc	r3, r3, #0
    c7f8:	strd	r2, [r1, #-8]
    c7fc:	ldrh	r3, [fp, #-198]	; 0xffffff3a
    c800:	cmp	r3, #6
    c804:	bls	c82c <read_grib2_message+0x1960>
    c808:	ldrh	r3, [fp, #-198]	; 0xffffff3a
    c80c:	cmp	r3, #15
    c810:	beq	c82c <read_grib2_message+0x1960>
    c814:	ldrh	r3, [fp, #-198]	; 0xffffff3a
    c818:	cmp	r3, #40	; 0x28
    c81c:	beq	c82c <read_grib2_message+0x1960>
    c820:	ldrh	r3, [fp, #-198]	; 0xffffff3a
    c824:	cmp	r3, #51	; 0x33
    c828:	bne	cacc <read_grib2_message+0x1c00>
    c82c:	ldr	r3, [fp, #-352]	; 0xfffffea0
    c830:	ldr	r1, [r3, #52]	; 0x34
    c834:	sub	r3, fp, #356	; 0x164
    c838:	mov	r0, r3
    c83c:	sub	r3, fp, #272	; 0x110
    c840:	str	r3, [sp, #8]
    c844:	mov	r2, #25
    c848:	mov	r3, #0
    c84c:	strd	r2, [sp]
    c850:	ldrd	r2, [r0, #-8]
    c854:	mov	r0, r1
    c858:	bl	0 <read_bytes>
    c85c:	mov	r3, r0
    c860:	cmp	r3, #0
    c864:	bge	c870 <read_grib2_message+0x19a4>
    c868:	mvn	r3, #0
    c86c:	b	d7e8 <read_grib2_message+0x291c>
    c870:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    c874:	strb	r3, [fp, #-53]	; 0xffffffcb
    c878:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    c87c:	strb	r3, [fp, #-54]	; 0xffffffca
    c880:	ldrb	r3, [fp, #-270]	; 0xfffffef2
    c884:	strb	r3, [fp, #-55]	; 0xffffffc9
    c888:	ldrb	r3, [fp, #-269]	; 0xfffffef3
    c88c:	strb	r3, [fp, #-56]	; 0xffffffc8
    c890:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    c894:	strb	r3, [fp, #-57]	; 0xffffffc7
    c898:	ldrb	r3, [fp, #-267]	; 0xfffffef5
    c89c:	uxth	r3, r3
    c8a0:	lsl	r3, r3, #8
    c8a4:	uxth	r2, r3
    c8a8:	ldrb	r3, [fp, #-266]	; 0xfffffef6
    c8ac:	uxth	r3, r3
    c8b0:	add	r3, r2, r3
    c8b4:	strh	r3, [fp, #-60]	; 0xffffffc4
    c8b8:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    c8bc:	strb	r3, [fp, #-61]	; 0xffffffc3
    c8c0:	ldrb	r3, [fp, #-264]	; 0xfffffef8
    c8c4:	strb	r3, [fp, #-62]	; 0xffffffc2
    c8c8:	ldrb	r3, [fp, #-263]	; 0xfffffef9
    c8cc:	lsl	r3, r3, #8
    c8d0:	ldrb	r2, [fp, #-262]	; 0xfffffefa
    c8d4:	add	r3, r3, r2
    c8d8:	lsl	r3, r3, #8
    c8dc:	ldrb	r2, [fp, #-261]	; 0xfffffefb
    c8e0:	add	r3, r3, r2
    c8e4:	lsl	r3, r3, #8
    c8e8:	ldrb	r2, [fp, #-260]	; 0xfffffefc
    c8ec:	add	r3, r3, r2
    c8f0:	str	r3, [fp, #-68]	; 0xffffffbc
    c8f4:	ldrb	r3, [fp, #-259]	; 0xfffffefd
    c8f8:	strb	r3, [fp, #-69]	; 0xffffffbb
    c8fc:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    c900:	cmp	r3, #255	; 0xff
    c904:	beq	c9b0 <read_grib2_message+0x1ae4>
    c908:	ldrb	r3, [fp, #-258]	; 0xfffffefe
    c90c:	strb	r3, [fp, #-129]	; 0xffffff7f
    c910:	ldrb	r3, [fp, #-257]	; 0xfffffeff
    c914:	lsl	r3, r3, #8
    c918:	ldrb	r2, [fp, #-256]	; 0xffffff00
    c91c:	add	r3, r3, r2
    c920:	lsl	r3, r3, #8
    c924:	ldrb	r2, [fp, #-255]	; 0xffffff01
    c928:	add	r3, r3, r2
    c92c:	lsl	r3, r3, #8
    c930:	ldrb	r2, [fp, #-254]	; 0xffffff02
    c934:	add	r3, r3, r2
    c938:	vmov	s15, r3
    c93c:	vcvt.f64.s32	d7, s15
    c940:	vstr	d7, [fp, #-84]	; 0xffffffac
    c944:	b	c96c <read_grib2_message+0x1aa0>
    c948:	vldr	d7, [fp, #-84]	; 0xffffffac
    c94c:	vldr	d6, [pc, #900]	; ccd8 <read_grib2_message+0x1e0c>
    c950:	vmul.f64	d7, d7, d6
    c954:	vstr	d7, [fp, #-84]	; 0xffffffac
    c958:	ldrsb	r3, [fp, #-129]	; 0xffffff7f
    c95c:	uxtb	r3, r3
    c960:	add	r3, r3, #1
    c964:	uxtb	r3, r3
    c968:	strb	r3, [fp, #-129]	; 0xffffff7f
    c96c:	ldrsb	r3, [fp, #-129]	; 0xffffff7f
    c970:	cmp	r3, #0
    c974:	blt	c948 <read_grib2_message+0x1a7c>
    c978:	b	c9a0 <read_grib2_message+0x1ad4>
    c97c:	vldr	d6, [fp, #-84]	; 0xffffffac
    c980:	vldr	d5, [pc, #848]	; ccd8 <read_grib2_message+0x1e0c>
    c984:	vdiv.f64	d7, d6, d5
    c988:	vstr	d7, [fp, #-84]	; 0xffffffac
    c98c:	ldrsb	r3, [fp, #-129]	; 0xffffff7f
    c990:	uxtb	r3, r3
    c994:	sub	r3, r3, #1
    c998:	uxtb	r3, r3
    c99c:	strb	r3, [fp, #-129]	; 0xffffff7f
    c9a0:	ldrsb	r3, [fp, #-129]	; 0xffffff7f
    c9a4:	cmp	r3, #0
    c9a8:	bgt	c97c <read_grib2_message+0x1ab0>
    c9ac:	b	c9b8 <read_grib2_message+0x1aec>
    c9b0:	bl	0 <coda_NaN>
    c9b4:	vstr	d0, [fp, #-84]	; 0xffffffac
    c9b8:	ldrb	r3, [fp, #-253]	; 0xffffff03
    c9bc:	strb	r3, [fp, #-85]	; 0xffffffab
    c9c0:	ldrb	r3, [fp, #-85]	; 0xffffffab
    c9c4:	cmp	r3, #255	; 0xff
    c9c8:	beq	ca74 <read_grib2_message+0x1ba8>
    c9cc:	ldrb	r3, [fp, #-252]	; 0xffffff04
    c9d0:	strb	r3, [fp, #-130]	; 0xffffff7e
    c9d4:	ldrb	r3, [fp, #-251]	; 0xffffff05
    c9d8:	lsl	r3, r3, #8
    c9dc:	ldrb	r2, [fp, #-250]	; 0xffffff06
    c9e0:	add	r3, r3, r2
    c9e4:	lsl	r3, r3, #8
    c9e8:	ldrb	r2, [fp, #-249]	; 0xffffff07
    c9ec:	add	r3, r3, r2
    c9f0:	lsl	r3, r3, #8
    c9f4:	ldrb	r2, [fp, #-248]	; 0xffffff08
    c9f8:	add	r3, r3, r2
    c9fc:	vmov	s15, r3
    ca00:	vcvt.f64.s32	d7, s15
    ca04:	vstr	d7, [fp, #-100]	; 0xffffff9c
    ca08:	b	ca30 <read_grib2_message+0x1b64>
    ca0c:	vldr	d7, [fp, #-100]	; 0xffffff9c
    ca10:	vldr	d6, [pc, #704]	; ccd8 <read_grib2_message+0x1e0c>
    ca14:	vmul.f64	d7, d7, d6
    ca18:	vstr	d7, [fp, #-100]	; 0xffffff9c
    ca1c:	ldrsb	r3, [fp, #-130]	; 0xffffff7e
    ca20:	uxtb	r3, r3
    ca24:	add	r3, r3, #1
    ca28:	uxtb	r3, r3
    ca2c:	strb	r3, [fp, #-130]	; 0xffffff7e
    ca30:	ldrsb	r3, [fp, #-130]	; 0xffffff7e
    ca34:	cmp	r3, #0
    ca38:	blt	ca0c <read_grib2_message+0x1b40>
    ca3c:	b	ca64 <read_grib2_message+0x1b98>
    ca40:	vldr	d6, [fp, #-100]	; 0xffffff9c
    ca44:	vldr	d5, [pc, #652]	; ccd8 <read_grib2_message+0x1e0c>
    ca48:	vdiv.f64	d7, d6, d5
    ca4c:	vstr	d7, [fp, #-100]	; 0xffffff9c
    ca50:	ldrsb	r3, [fp, #-130]	; 0xffffff7e
    ca54:	uxtb	r3, r3
    ca58:	sub	r3, r3, #1
    ca5c:	uxtb	r3, r3
    ca60:	strb	r3, [fp, #-130]	; 0xffffff7e
    ca64:	ldrsb	r3, [fp, #-130]	; 0xffffff7e
    ca68:	cmp	r3, #0
    ca6c:	bgt	ca40 <read_grib2_message+0x1b74>
    ca70:	b	ca7c <read_grib2_message+0x1bb0>
    ca74:	bl	0 <coda_NaN>
    ca78:	vstr	d0, [fp, #-100]	; 0xffffff9c
    ca7c:	sub	r3, fp, #356	; 0x164
    ca80:	mov	r1, r3
    ca84:	sub	r3, fp, #356	; 0x164
    ca88:	ldrd	r2, [r3, #-8]
    ca8c:	adds	r2, r2, #25
    ca90:	adc	r3, r3, #0
    ca94:	strd	r2, [r1, #-8]
    ca98:	ldrh	r3, [fp, #-38]	; 0xffffffda
    ca9c:	cmp	r3, #0
    caa0:	beq	cab0 <read_grib2_message+0x1be4>
    caa4:	sub	r3, fp, #356	; 0x164
    caa8:	ldrd	r2, [r3, #-8]
    caac:	b	cab8 <read_grib2_message+0x1bec>
    cab0:	mvn	r2, #0
    cab4:	mvn	r3, #0
    cab8:	strd	r2, [fp, #-52]	; 0xffffffcc
    cabc:	ldr	r3, [fp, #-144]	; 0xffffff70
    cac0:	cmp	r3, #34	; 0x22
    cac4:	bhi	cae8 <read_grib2_message+0x1c1c>
    cac8:	b	cb14 <read_grib2_message+0x1c48>
    cacc:	ldrh	r3, [fp, #-198]	; 0xffffff3a
    cad0:	mov	r2, r3
    cad4:	ldr	r1, [pc, #516]	; cce0 <read_grib2_message+0x1e14>
    cad8:	ldr	r0, [pc, #648]	; cd68 <read_grib2_message+0x1e9c>
    cadc:	bl	0 <coda_set_error>
    cae0:	mvn	r3, #0
    cae4:	b	d7e8 <read_grib2_message+0x291c>
    cae8:	ldr	r3, [fp, #-144]	; 0xffffff70
    caec:	sub	r3, r3, #34	; 0x22
    caf0:	mov	r0, r3
    caf4:	mov	r1, #0
    caf8:	sub	r3, fp, #356	; 0x164
    cafc:	mov	ip, r3
    cb00:	sub	r3, fp, #356	; 0x164
    cb04:	ldrd	r2, [r3, #-8]
    cb08:	adds	r2, r2, r0
    cb0c:	adc	r3, r3, r1
    cb10:	strd	r2, [ip, #-8]
    cb14:	mov	r3, #4
    cb18:	strb	r3, [fp, #-113]	; 0xffffff8f
    cb1c:	b	d72c <read_grib2_message+0x2860>
    cb20:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cb24:	cmp	r3, #5
    cb28:	bne	ce84 <read_grib2_message+0x1fb8>
    cb2c:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    cb30:	cmp	r3, #4
    cb34:	beq	cb58 <read_grib2_message+0x1c8c>
    cb38:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cb3c:	sub	r2, r3, #48	; 0x30
    cb40:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    cb44:	ldr	r1, [pc, #428]	; ccf8 <read_grib2_message+0x1e2c>
    cb48:	ldr	r0, [pc, #536]	; cd68 <read_grib2_message+0x1e9c>
    cb4c:	bl	0 <coda_set_error>
    cb50:	mvn	r3, #0
    cb54:	b	d7e8 <read_grib2_message+0x291c>
    cb58:	ldr	r3, [fp, #-352]	; 0xfffffea0
    cb5c:	ldr	r1, [r3, #52]	; 0x34
    cb60:	sub	r3, fp, #356	; 0x164
    cb64:	mov	r0, r3
    cb68:	sub	r3, fp, #272	; 0x110
    cb6c:	str	r3, [sp, #8]
    cb70:	mov	r2, #6
    cb74:	mov	r3, #0
    cb78:	strd	r2, [sp]
    cb7c:	ldrd	r2, [r0, #-8]
    cb80:	mov	r0, r1
    cb84:	bl	0 <read_bytes>
    cb88:	mov	r3, r0
    cb8c:	cmp	r3, #0
    cb90:	bge	cb9c <read_grib2_message+0x1cd0>
    cb94:	mvn	r3, #0
    cb98:	b	d7e8 <read_grib2_message+0x291c>
    cb9c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cba0:	lsl	r3, r3, #8
    cba4:	ldrb	r2, [fp, #-271]	; 0xfffffef1
    cba8:	add	r3, r3, r2
    cbac:	lsl	r3, r3, #8
    cbb0:	ldrb	r2, [fp, #-270]	; 0xfffffef2
    cbb4:	add	r3, r3, r2
    cbb8:	lsl	r3, r3, #8
    cbbc:	ldrb	r2, [fp, #-269]	; 0xfffffef3
    cbc0:	add	r3, r3, r2
    cbc4:	str	r3, [fp, #-112]	; 0xffffff90
    cbc8:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    cbcc:	uxth	r3, r3
    cbd0:	lsl	r3, r3, #8
    cbd4:	uxth	r2, r3
    cbd8:	ldrb	r3, [fp, #-267]	; 0xfffffef5
    cbdc:	uxth	r3, r3
    cbe0:	add	r3, r2, r3
    cbe4:	strh	r3, [fp, #-200]	; 0xffffff38
    cbe8:	sub	r3, fp, #356	; 0x164
    cbec:	mov	r1, r3
    cbf0:	sub	r3, fp, #356	; 0x164
    cbf4:	ldrd	r2, [r3, #-8]
    cbf8:	adds	r2, r2, #6
    cbfc:	adc	r3, r3, #0
    cc00:	strd	r2, [r1, #-8]
    cc04:	ldrh	r3, [fp, #-200]	; 0xffffff38
    cc08:	cmp	r3, #0
    cc0c:	beq	cc1c <read_grib2_message+0x1d50>
    cc10:	ldrh	r3, [fp, #-200]	; 0xffffff38
    cc14:	cmp	r3, #1
    cc18:	bne	ce30 <read_grib2_message+0x1f64>
    cc1c:	ldr	r3, [fp, #-352]	; 0xfffffea0
    cc20:	ldr	r1, [r3, #52]	; 0x34
    cc24:	sub	r3, fp, #356	; 0x164
    cc28:	mov	r0, r3
    cc2c:	sub	r3, fp, #208	; 0xd0
    cc30:	str	r3, [sp, #8]
    cc34:	mov	r2, #4
    cc38:	mov	r3, #0
    cc3c:	strd	r2, [sp]
    cc40:	ldrd	r2, [r0, #-8]
    cc44:	mov	r0, r1
    cc48:	bl	0 <read_bytes>
    cc4c:	mov	r3, r0
    cc50:	cmp	r3, #0
    cc54:	bge	cc60 <read_grib2_message+0x1d94>
    cc58:	mvn	r3, #0
    cc5c:	b	d7e8 <read_grib2_message+0x291c>
    cc60:	sub	r3, fp, #208	; 0xd0
    cc64:	mov	r0, r3
    cc68:	bl	2d4 <swap4>
    cc6c:	ldr	r3, [fp, #-352]	; 0xfffffea0
    cc70:	ldr	ip, [r3, #52]	; 0x34
    cc74:	sub	r3, fp, #356	; 0x164
    cc78:	ldrd	r2, [r3, #-8]
    cc7c:	adds	r0, r2, #4
    cc80:	adc	r1, r3, #0
    cc84:	sub	r3, fp, #272	; 0x110
    cc88:	str	r3, [sp, #8]
    cc8c:	mov	r2, #5
    cc90:	mov	r3, #0
    cc94:	strd	r2, [sp]
    cc98:	mov	r2, r0
    cc9c:	mov	r3, r1
    cca0:	mov	r0, ip
    cca4:	bl	0 <read_bytes>
    cca8:	mov	r3, r0
    ccac:	cmp	r3, #0
    ccb0:	bge	ccbc <read_grib2_message+0x1df0>
    ccb4:	mvn	r3, #0
    ccb8:	b	d7e8 <read_grib2_message+0x291c>
    ccbc:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    ccc0:	sxtb	r3, r3
    ccc4:	cmp	r3, #0
    ccc8:	bge	cd6c <read_grib2_message+0x1ea0>
    cccc:	ldr	r2, [pc, #16]	; cce4 <read_grib2_message+0x1e18>
    ccd0:	b	cd70 <read_grib2_message+0x1ea4>
    ccd4:	nop			; (mov r0, r0)
    ccd8:	.word	0x00000000
    ccdc:	.word	0x40240000
    cce0:	.word	0x000019e8
    cce4:	.word	0x0000ffff
    cce8:	.word	0x00001a18
    ccec:	.word	0x00001a34
    ccf0:	.word	0x00001a64
    ccf4:	.word	0x00001a88
    ccf8:	.word	0x00001840
    ccfc:	.word	0x000012f8
    cd00:	.word	0x00001308
    cd04:	.word	0x0000131c
    cd08:	.word	0x0000132c
    cd0c:	.word	0x00001344
    cd10:	.word	0x00000d60
    cd14:	.word	0x00001358
    cd18:	.word	0x00001370
    cd1c:	.word	0x00001388
    cd20:	.word	0x000013a4
    cd24:	.word	0x000013b4
    cd28:	.word	0x000013cc
    cd2c:	.word	0x000013e0
    cd30:	.word	0x000013fc
    cd34:	.word	0x00000cd8
    cd38:	.word	0x00000cfc
    cd3c:	.word	0x00000e8c
    cd40:	.word	0x00000d0c
    cd44:	.word	0x00000d20
    cd48:	.word	0x00000b7c
    cd4c:	.word	0x00000180
    cd50:	.word	0x000001c8
    cd54:	.word	0x00000000
    cd58:	.word	0x00000d30
    cd5c:	.word	0x00001aac
    cd60:	.word	0x000017bc
    cd64:	.word	0x00001ad8
    cd68:	.word	0xfffffed4
    cd6c:	mov	r2, #1
    cd70:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cd74:	and	r3, r3, #127	; 0x7f
    cd78:	lsl	r3, r3, #8
    cd7c:	ldrb	r1, [fp, #-271]	; 0xfffffef1
    cd80:	add	r3, r3, r1
    cd84:	uxth	r3, r3
    cd88:	smulbb	r3, r2, r3
    cd8c:	uxth	r3, r3
    cd90:	strh	r3, [fp, #-104]	; 0xffffff98
    cd94:	ldrb	r3, [fp, #-270]	; 0xfffffef2
    cd98:	sxtb	r3, r3
    cd9c:	cmp	r3, #0
    cda0:	bge	cdac <read_grib2_message+0x1ee0>
    cda4:	ldr	r2, [pc, #-200]	; cce4 <read_grib2_message+0x1e18>
    cda8:	b	cdb0 <read_grib2_message+0x1ee4>
    cdac:	mov	r2, #1
    cdb0:	ldrb	r3, [fp, #-270]	; 0xfffffef2
    cdb4:	and	r3, r3, #127	; 0x7f
    cdb8:	lsl	r3, r3, #8
    cdbc:	ldrb	r1, [fp, #-269]	; 0xfffffef3
    cdc0:	add	r3, r3, r1
    cdc4:	uxth	r3, r3
    cdc8:	smulbb	r3, r2, r3
    cdcc:	uxth	r3, r3
    cdd0:	strh	r3, [fp, #-102]	; 0xffffff9a
    cdd4:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    cdd8:	strb	r3, [fp, #-105]	; 0xffffff97
    cddc:	ldrb	r3, [fp, #-105]	; 0xffffff97
    cde0:	cmp	r3, #63	; 0x3f
    cde4:	bls	ce04 <read_grib2_message+0x1f38>
    cde8:	ldrb	r3, [fp, #-105]	; 0xffffff97
    cdec:	mov	r2, r3
    cdf0:	ldr	r1, [pc, #-272]	; cce8 <read_grib2_message+0x1e1c>
    cdf4:	ldr	r0, [pc, #-148]	; cd68 <read_grib2_message+0x1e9c>
    cdf8:	bl	0 <coda_set_error>
    cdfc:	mvn	r3, #0
    ce00:	b	d7e8 <read_grib2_message+0x291c>
    ce04:	sub	r3, fp, #356	; 0x164
    ce08:	mov	r1, r3
    ce0c:	sub	r3, fp, #356	; 0x164
    ce10:	ldrd	r2, [r3, #-8]
    ce14:	adds	r2, r2, #9
    ce18:	adc	r3, r3, #0
    ce1c:	strd	r2, [r1, #-8]
    ce20:	ldr	r3, [fp, #-144]	; 0xffffff70
    ce24:	cmp	r3, #20
    ce28:	bhi	ce4c <read_grib2_message+0x1f80>
    ce2c:	b	ce78 <read_grib2_message+0x1fac>
    ce30:	ldrh	r3, [fp, #-200]	; 0xffffff38
    ce34:	mov	r2, r3
    ce38:	ldr	r1, [pc, #-340]	; ccec <read_grib2_message+0x1e20>
    ce3c:	ldr	r0, [pc, #-220]	; cd68 <read_grib2_message+0x1e9c>
    ce40:	bl	0 <coda_set_error>
    ce44:	mvn	r3, #0
    ce48:	b	d7e8 <read_grib2_message+0x291c>
    ce4c:	ldr	r3, [fp, #-144]	; 0xffffff70
    ce50:	sub	r3, r3, #20
    ce54:	mov	r0, r3
    ce58:	mov	r1, #0
    ce5c:	sub	r3, fp, #356	; 0x164
    ce60:	mov	ip, r3
    ce64:	sub	r3, fp, #356	; 0x164
    ce68:	ldrd	r2, [r3, #-8]
    ce6c:	adds	r2, r2, r0
    ce70:	adc	r3, r3, r1
    ce74:	strd	r2, [ip, #-8]
    ce78:	mov	r3, #5
    ce7c:	strb	r3, [fp, #-113]	; 0xffffff8f
    ce80:	b	d72c <read_grib2_message+0x2860>
    ce84:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    ce88:	cmp	r3, #6
    ce8c:	bne	d00c <read_grib2_message+0x2140>
    ce90:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    ce94:	cmp	r3, #5
    ce98:	beq	cebc <read_grib2_message+0x1ff0>
    ce9c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cea0:	sub	r2, r3, #48	; 0x30
    cea4:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    cea8:	ldr	r1, [pc, #-440]	; ccf8 <read_grib2_message+0x1e2c>
    ceac:	ldr	r0, [pc, #-332]	; cd68 <read_grib2_message+0x1e9c>
    ceb0:	bl	0 <coda_set_error>
    ceb4:	mvn	r3, #0
    ceb8:	b	d7e8 <read_grib2_message+0x291c>
    cebc:	ldr	r3, [fp, #-352]	; 0xfffffea0
    cec0:	ldr	r1, [r3, #52]	; 0x34
    cec4:	sub	r3, fp, #356	; 0x164
    cec8:	mov	r0, r3
    cecc:	sub	r3, fp, #272	; 0x110
    ced0:	str	r3, [sp, #8]
    ced4:	mov	r2, #1
    ced8:	mov	r3, #0
    cedc:	strd	r2, [sp]
    cee0:	ldrd	r2, [r0, #-8]
    cee4:	mov	r0, r1
    cee8:	bl	0 <read_bytes>
    ceec:	mov	r3, r0
    cef0:	cmp	r3, #0
    cef4:	bge	cf00 <read_grib2_message+0x2034>
    cef8:	mvn	r3, #0
    cefc:	b	d7e8 <read_grib2_message+0x291c>
    cf00:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cf04:	cmp	r3, #0
    cf08:	bne	cf40 <read_grib2_message+0x2074>
    cf0c:	mov	r3, #1
    cf10:	str	r3, [fp, #-8]
    cf14:	sub	r3, fp, #356	; 0x164
    cf18:	ldrd	r2, [r3, #-8]
    cf1c:	adds	r2, r2, #1
    cf20:	adc	r3, r3, #0
    cf24:	strd	r2, [fp, #-20]	; 0xffffffec
    cf28:	ldr	r3, [fp, #-144]	; 0xffffff70
    cf2c:	sub	r3, r3, #6
    cf30:	mov	r2, r3
    cf34:	mov	r3, #0
    cf38:	strd	r2, [fp, #-28]	; 0xffffffe4
    cf3c:	b	cfac <read_grib2_message+0x20e0>
    cf40:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cf44:	cmp	r3, #254	; 0xfe
    cf48:	bne	cf80 <read_grib2_message+0x20b4>
    cf4c:	mov	r3, #1
    cf50:	str	r3, [fp, #-8]
    cf54:	ldrd	r2, [fp, #-20]	; 0xffffffec
    cf58:	mvn	r0, #0
    cf5c:	mvn	r1, #0
    cf60:	cmp	r3, r1
    cf64:	cmpeq	r2, r0
    cf68:	bne	cfac <read_grib2_message+0x20e0>
    cf6c:	ldr	r1, [pc, #-644]	; ccf0 <read_grib2_message+0x1e24>
    cf70:	ldr	r0, [pc, #-528]	; cd68 <read_grib2_message+0x1e9c>
    cf74:	bl	0 <coda_set_error>
    cf78:	mvn	r3, #0
    cf7c:	b	d7e8 <read_grib2_message+0x291c>
    cf80:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    cf84:	cmp	r3, #255	; 0xff
    cf88:	bne	cf98 <read_grib2_message+0x20cc>
    cf8c:	mov	r3, #0
    cf90:	str	r3, [fp, #-8]
    cf94:	b	cfac <read_grib2_message+0x20e0>
    cf98:	ldr	r1, [pc, #-684]	; ccf4 <read_grib2_message+0x1e28>
    cf9c:	ldr	r0, [pc, #-572]	; cd68 <read_grib2_message+0x1e9c>
    cfa0:	bl	0 <coda_set_error>
    cfa4:	mvn	r3, #0
    cfa8:	b	d7e8 <read_grib2_message+0x291c>
    cfac:	sub	r3, fp, #356	; 0x164
    cfb0:	mov	r1, r3
    cfb4:	sub	r3, fp, #356	; 0x164
    cfb8:	ldrd	r2, [r3, #-8]
    cfbc:	adds	r2, r2, #1
    cfc0:	adc	r3, r3, #0
    cfc4:	strd	r2, [r1, #-8]
    cfc8:	ldr	r3, [fp, #-144]	; 0xffffff70
    cfcc:	cmp	r3, #6
    cfd0:	bls	d000 <read_grib2_message+0x2134>
    cfd4:	ldr	r3, [fp, #-144]	; 0xffffff70
    cfd8:	sub	r3, r3, #6
    cfdc:	mov	r0, r3
    cfe0:	mov	r1, #0
    cfe4:	sub	r3, fp, #356	; 0x164
    cfe8:	mov	ip, r3
    cfec:	sub	r3, fp, #356	; 0x164
    cff0:	ldrd	r2, [r3, #-8]
    cff4:	adds	r2, r2, r0
    cff8:	adc	r3, r3, r1
    cffc:	strd	r2, [ip, #-8]
    d000:	mov	r3, #6
    d004:	strb	r3, [fp, #-113]	; 0xffffff8f
    d008:	b	d72c <read_grib2_message+0x2860>
    d00c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    d010:	cmp	r3, #7
    d014:	bne	d6fc <read_grib2_message+0x2830>
    d018:	mov	r3, #0
    d01c:	str	r3, [fp, #-136]	; 0xffffff78
    d020:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    d024:	cmp	r3, #5
    d028:	beq	d058 <read_grib2_message+0x218c>
    d02c:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    d030:	cmp	r3, #6
    d034:	beq	d058 <read_grib2_message+0x218c>
    d038:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    d03c:	sub	r2, r3, #48	; 0x30
    d040:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    d044:	ldr	r1, [pc, #-852]	; ccf8 <read_grib2_message+0x1e2c>
    d048:	ldr	r0, [pc, #-744]	; cd68 <read_grib2_message+0x1e9c>
    d04c:	bl	0 <coda_set_error>
    d050:	mvn	r3, #0
    d054:	b	d7e8 <read_grib2_message+0x291c>
    d058:	bl	0 <__aeabi_read_tp>
    d05c:	mov	r2, r0
    d060:	ldr	r3, [pc, #-788]	; cd54 <read_grib2_message+0x1e88>
    d064:	ldr	r3, [r2, r3]
    d068:	add	r3, r3, #544	; 0x220
    d06c:	ldr	r3, [r3]
    d070:	mov	r1, #0
    d074:	mov	r0, r3
    d078:	bl	0 <coda_mem_record_new>
    d07c:	str	r0, [fp, #-204]	; 0xffffff34
    d080:	bl	0 <__aeabi_read_tp>
    d084:	mov	r2, r0
    d088:	ldr	r3, [pc, #-828]	; cd54 <read_grib2_message+0x1e88>
    d08c:	ldr	r3, [r2, r3]
    d090:	ldr	r3, [r3, #280]	; 0x118
    d094:	str	r3, [fp, #-148]	; 0xffffff6c
    d098:	ldr	r3, [fp, #-36]	; 0xffffffdc
    d09c:	ldr	r2, [fp, #-140]	; 0xffffff74
    d0a0:	mov	r1, #0
    d0a4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d0a8:	bl	0 <coda_mem_uint32_new>
    d0ac:	str	r0, [fp, #-152]	; 0xffffff68
    d0b0:	mov	r3, #0
    d0b4:	ldr	r2, [fp, #-152]	; 0xffffff68
    d0b8:	ldr	r1, [pc, #-964]	; ccfc <read_grib2_message+0x1e30>
    d0bc:	ldr	r0, [fp, #-204]	; 0xffffff34
    d0c0:	bl	0 <coda_mem_record_add_field>
    d0c4:	bl	0 <__aeabi_read_tp>
    d0c8:	mov	r2, r0
    d0cc:	ldr	r3, [pc, #-896]	; cd54 <read_grib2_message+0x1e88>
    d0d0:	ldr	r3, [r2, r3]
    d0d4:	ldr	r3, [r3, #460]	; 0x1cc
    d0d8:	str	r3, [fp, #-148]	; 0xffffff6c
    d0dc:	ldrb	r3, [fp, #-53]	; 0xffffffcb
    d0e0:	ldr	r2, [fp, #-140]	; 0xffffff74
    d0e4:	mov	r1, #0
    d0e8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d0ec:	bl	0 <coda_mem_uint8_new>
    d0f0:	str	r0, [fp, #-152]	; 0xffffff68
    d0f4:	mov	r3, #0
    d0f8:	ldr	r2, [fp, #-152]	; 0xffffff68
    d0fc:	ldr	r1, [pc, #-1028]	; cd00 <read_grib2_message+0x1e34>
    d100:	ldr	r0, [fp, #-204]	; 0xffffff34
    d104:	bl	0 <coda_mem_record_add_field>
    d108:	bl	0 <__aeabi_read_tp>
    d10c:	mov	r2, r0
    d110:	ldr	r3, [pc, #-964]	; cd54 <read_grib2_message+0x1e88>
    d114:	ldr	r3, [r2, r3]
    d118:	ldr	r3, [r3, #464]	; 0x1d0
    d11c:	str	r3, [fp, #-148]	; 0xffffff6c
    d120:	ldrb	r3, [fp, #-54]	; 0xffffffca
    d124:	ldr	r2, [fp, #-140]	; 0xffffff74
    d128:	mov	r1, #0
    d12c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d130:	bl	0 <coda_mem_uint8_new>
    d134:	str	r0, [fp, #-152]	; 0xffffff68
    d138:	mov	r3, #0
    d13c:	ldr	r2, [fp, #-152]	; 0xffffff68
    d140:	ldr	r1, [pc, #-1092]	; cd04 <read_grib2_message+0x1e38>
    d144:	ldr	r0, [fp, #-204]	; 0xffffff34
    d148:	bl	0 <coda_mem_record_add_field>
    d14c:	bl	0 <__aeabi_read_tp>
    d150:	mov	r2, r0
    d154:	ldr	r3, [pc, #-1032]	; cd54 <read_grib2_message+0x1e88>
    d158:	ldr	r3, [r2, r3]
    d15c:	ldr	r3, [r3, #468]	; 0x1d4
    d160:	str	r3, [fp, #-148]	; 0xffffff6c
    d164:	ldrb	r3, [fp, #-55]	; 0xffffffc9
    d168:	ldr	r2, [fp, #-140]	; 0xffffff74
    d16c:	mov	r1, #0
    d170:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d174:	bl	0 <coda_mem_uint8_new>
    d178:	str	r0, [fp, #-152]	; 0xffffff68
    d17c:	mov	r3, #0
    d180:	ldr	r2, [fp, #-152]	; 0xffffff68
    d184:	ldr	r1, [pc, #-1156]	; cd08 <read_grib2_message+0x1e3c>
    d188:	ldr	r0, [fp, #-204]	; 0xffffff34
    d18c:	bl	0 <coda_mem_record_add_field>
    d190:	bl	0 <__aeabi_read_tp>
    d194:	mov	r2, r0
    d198:	ldr	r3, [pc, #-1100]	; cd54 <read_grib2_message+0x1e88>
    d19c:	ldr	r3, [r2, r3]
    d1a0:	ldr	r3, [r3, #472]	; 0x1d8
    d1a4:	str	r3, [fp, #-148]	; 0xffffff6c
    d1a8:	ldrb	r3, [fp, #-56]	; 0xffffffc8
    d1ac:	ldr	r2, [fp, #-140]	; 0xffffff74
    d1b0:	mov	r1, #0
    d1b4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d1b8:	bl	0 <coda_mem_uint8_new>
    d1bc:	str	r0, [fp, #-152]	; 0xffffff68
    d1c0:	mov	r3, #0
    d1c4:	ldr	r2, [fp, #-152]	; 0xffffff68
    d1c8:	ldr	r1, [pc, #-1220]	; cd0c <read_grib2_message+0x1e40>
    d1cc:	ldr	r0, [fp, #-204]	; 0xffffff34
    d1d0:	bl	0 <coda_mem_record_add_field>
    d1d4:	bl	0 <__aeabi_read_tp>
    d1d8:	mov	r2, r0
    d1dc:	ldr	r3, [pc, #-1168]	; cd54 <read_grib2_message+0x1e88>
    d1e0:	ldr	r3, [r2, r3]
    d1e4:	ldr	r3, [r3, #476]	; 0x1dc
    d1e8:	str	r3, [fp, #-148]	; 0xffffff6c
    d1ec:	ldrb	r3, [fp, #-57]	; 0xffffffc7
    d1f0:	ldr	r2, [fp, #-140]	; 0xffffff74
    d1f4:	mov	r1, #0
    d1f8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d1fc:	bl	0 <coda_mem_uint8_new>
    d200:	str	r0, [fp, #-152]	; 0xffffff68
    d204:	mov	r3, #0
    d208:	ldr	r2, [fp, #-152]	; 0xffffff68
    d20c:	ldr	r1, [pc, #-1284]	; cd10 <read_grib2_message+0x1e44>
    d210:	ldr	r0, [fp, #-204]	; 0xffffff34
    d214:	bl	0 <coda_mem_record_add_field>
    d218:	bl	0 <__aeabi_read_tp>
    d21c:	mov	r2, r0
    d220:	ldr	r3, [pc, #-1236]	; cd54 <read_grib2_message+0x1e88>
    d224:	ldr	r3, [r2, r3]
    d228:	ldr	r3, [r3, #480]	; 0x1e0
    d22c:	str	r3, [fp, #-148]	; 0xffffff6c
    d230:	ldrh	r3, [fp, #-60]	; 0xffffffc4
    d234:	ldr	r2, [fp, #-140]	; 0xffffff74
    d238:	mov	r1, #0
    d23c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d240:	bl	0 <coda_mem_uint16_new>
    d244:	str	r0, [fp, #-152]	; 0xffffff68
    d248:	mov	r3, #0
    d24c:	ldr	r2, [fp, #-152]	; 0xffffff68
    d250:	ldr	r1, [pc, #-1348]	; cd14 <read_grib2_message+0x1e48>
    d254:	ldr	r0, [fp, #-204]	; 0xffffff34
    d258:	bl	0 <coda_mem_record_add_field>
    d25c:	bl	0 <__aeabi_read_tp>
    d260:	mov	r2, r0
    d264:	ldr	r3, [pc, #-1304]	; cd54 <read_grib2_message+0x1e88>
    d268:	ldr	r3, [r2, r3]
    d26c:	ldr	r3, [r3, #484]	; 0x1e4
    d270:	str	r3, [fp, #-148]	; 0xffffff6c
    d274:	ldrb	r3, [fp, #-61]	; 0xffffffc3
    d278:	ldr	r2, [fp, #-140]	; 0xffffff74
    d27c:	mov	r1, #0
    d280:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d284:	bl	0 <coda_mem_uint8_new>
    d288:	str	r0, [fp, #-152]	; 0xffffff68
    d28c:	mov	r3, #0
    d290:	ldr	r2, [fp, #-152]	; 0xffffff68
    d294:	ldr	r1, [pc, #-1412]	; cd18 <read_grib2_message+0x1e4c>
    d298:	ldr	r0, [fp, #-204]	; 0xffffff34
    d29c:	bl	0 <coda_mem_record_add_field>
    d2a0:	bl	0 <__aeabi_read_tp>
    d2a4:	mov	r2, r0
    d2a8:	ldr	r3, [pc, #-1372]	; cd54 <read_grib2_message+0x1e88>
    d2ac:	ldr	r3, [r2, r3]
    d2b0:	ldr	r3, [r3, #488]	; 0x1e8
    d2b4:	str	r3, [fp, #-148]	; 0xffffff6c
    d2b8:	ldrb	r3, [fp, #-62]	; 0xffffffc2
    d2bc:	ldr	r2, [fp, #-140]	; 0xffffff74
    d2c0:	mov	r1, #0
    d2c4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d2c8:	bl	0 <coda_mem_uint8_new>
    d2cc:	str	r0, [fp, #-152]	; 0xffffff68
    d2d0:	mov	r3, #0
    d2d4:	ldr	r2, [fp, #-152]	; 0xffffff68
    d2d8:	ldr	r1, [pc, #-1476]	; cd1c <read_grib2_message+0x1e50>
    d2dc:	ldr	r0, [fp, #-204]	; 0xffffff34
    d2e0:	bl	0 <coda_mem_record_add_field>
    d2e4:	bl	0 <__aeabi_read_tp>
    d2e8:	mov	r2, r0
    d2ec:	ldr	r3, [pc, #-1440]	; cd54 <read_grib2_message+0x1e88>
    d2f0:	ldr	r3, [r2, r3]
    d2f4:	ldr	r3, [r3, #492]	; 0x1ec
    d2f8:	str	r3, [fp, #-148]	; 0xffffff6c
    d2fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
    d300:	ldr	r2, [fp, #-140]	; 0xffffff74
    d304:	mov	r1, #0
    d308:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d30c:	bl	0 <coda_mem_uint32_new>
    d310:	str	r0, [fp, #-152]	; 0xffffff68
    d314:	mov	r3, #0
    d318:	ldr	r2, [fp, #-152]	; 0xffffff68
    d31c:	ldr	r1, [pc, #-1540]	; cd20 <read_grib2_message+0x1e54>
    d320:	ldr	r0, [fp, #-204]	; 0xffffff34
    d324:	bl	0 <coda_mem_record_add_field>
    d328:	bl	0 <__aeabi_read_tp>
    d32c:	mov	r2, r0
    d330:	ldr	r3, [pc, #-1508]	; cd54 <read_grib2_message+0x1e88>
    d334:	ldr	r3, [r2, r3]
    d338:	ldr	r3, [r3, #496]	; 0x1f0
    d33c:	str	r3, [fp, #-148]	; 0xffffff6c
    d340:	ldrb	r3, [fp, #-69]	; 0xffffffbb
    d344:	ldr	r2, [fp, #-140]	; 0xffffff74
    d348:	mov	r1, #0
    d34c:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d350:	bl	0 <coda_mem_uint8_new>
    d354:	str	r0, [fp, #-152]	; 0xffffff68
    d358:	mov	r3, #0
    d35c:	ldr	r2, [fp, #-152]	; 0xffffff68
    d360:	ldr	r1, [pc, #-1604]	; cd24 <read_grib2_message+0x1e58>
    d364:	ldr	r0, [fp, #-204]	; 0xffffff34
    d368:	bl	0 <coda_mem_record_add_field>
    d36c:	bl	0 <__aeabi_read_tp>
    d370:	mov	r2, r0
    d374:	ldr	r3, [pc, #-1576]	; cd54 <read_grib2_message+0x1e88>
    d378:	ldr	r3, [r2, r3]
    d37c:	ldr	r3, [r3, #500]	; 0x1f4
    d380:	str	r3, [fp, #-148]	; 0xffffff6c
    d384:	vldr	d0, [fp, #-84]	; 0xffffffac
    d388:	ldr	r2, [fp, #-140]	; 0xffffff74
    d38c:	mov	r1, #0
    d390:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d394:	bl	0 <coda_mem_double_new>
    d398:	str	r0, [fp, #-152]	; 0xffffff68
    d39c:	mov	r3, #0
    d3a0:	ldr	r2, [fp, #-152]	; 0xffffff68
    d3a4:	ldr	r1, [pc, #-1668]	; cd28 <read_grib2_message+0x1e5c>
    d3a8:	ldr	r0, [fp, #-204]	; 0xffffff34
    d3ac:	bl	0 <coda_mem_record_add_field>
    d3b0:	bl	0 <__aeabi_read_tp>
    d3b4:	mov	r2, r0
    d3b8:	ldr	r3, [pc, #-1644]	; cd54 <read_grib2_message+0x1e88>
    d3bc:	ldr	r3, [r2, r3]
    d3c0:	ldr	r3, [r3, #504]	; 0x1f8
    d3c4:	str	r3, [fp, #-148]	; 0xffffff6c
    d3c8:	ldrb	r3, [fp, #-85]	; 0xffffffab
    d3cc:	ldr	r2, [fp, #-140]	; 0xffffff74
    d3d0:	mov	r1, #0
    d3d4:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d3d8:	bl	0 <coda_mem_uint8_new>
    d3dc:	str	r0, [fp, #-152]	; 0xffffff68
    d3e0:	mov	r3, #0
    d3e4:	ldr	r2, [fp, #-152]	; 0xffffff68
    d3e8:	ldr	r1, [pc, #-1732]	; cd2c <read_grib2_message+0x1e60>
    d3ec:	ldr	r0, [fp, #-204]	; 0xffffff34
    d3f0:	bl	0 <coda_mem_record_add_field>
    d3f4:	bl	0 <__aeabi_read_tp>
    d3f8:	mov	r2, r0
    d3fc:	ldr	r3, [pc, #-1712]	; cd54 <read_grib2_message+0x1e88>
    d400:	ldr	r3, [r2, r3]
    d404:	ldr	r3, [r3, #508]	; 0x1fc
    d408:	str	r3, [fp, #-148]	; 0xffffff6c
    d40c:	vldr	d0, [fp, #-100]	; 0xffffff9c
    d410:	ldr	r2, [fp, #-140]	; 0xffffff74
    d414:	mov	r1, #0
    d418:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d41c:	bl	0 <coda_mem_double_new>
    d420:	str	r0, [fp, #-152]	; 0xffffff68
    d424:	mov	r3, #0
    d428:	ldr	r2, [fp, #-152]	; 0xffffff68
    d42c:	ldr	r1, [pc, #-1796]	; cd30 <read_grib2_message+0x1e64>
    d430:	ldr	r0, [fp, #-204]	; 0xffffff34
    d434:	bl	0 <coda_mem_record_add_field>
    d438:	ldrh	r3, [fp, #-38]	; 0xffffffda
    d43c:	cmp	r3, #0
    d440:	beq	d484 <read_grib2_message+0x25b8>
    d444:	bl	0 <__aeabi_read_tp>
    d448:	mov	r2, r0
    d44c:	ldr	r3, [pc, #-1792]	; cd54 <read_grib2_message+0x1e88>
    d450:	ldr	r3, [r2, r3]
    d454:	ldr	r3, [r3, #516]	; 0x204
    d458:	str	r3, [fp, #-148]	; 0xffffff6c
    d45c:	ldrh	r1, [fp, #-38]	; 0xffffffda
    d460:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    d464:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d468:	bl	0 <coda_grib_value_array_new>
    d46c:	str	r0, [fp, #-152]	; 0xffffff68
    d470:	mov	r3, #0
    d474:	ldr	r2, [fp, #-152]	; 0xffffff68
    d478:	ldr	r1, [pc, #-1868]	; cd34 <read_grib2_message+0x1e68>
    d47c:	ldr	r0, [fp, #-204]	; 0xffffff34
    d480:	bl	0 <coda_mem_record_add_field>
    d484:	bl	0 <__aeabi_read_tp>
    d488:	mov	r2, r0
    d48c:	ldr	r3, [pc, #-1856]	; cd54 <read_grib2_message+0x1e88>
    d490:	ldr	r3, [r2, r3]
    d494:	ldr	r3, [r3, #524]	; 0x20c
    d498:	str	r3, [fp, #-148]	; 0xffffff6c
    d49c:	ldrb	r3, [fp, #-105]	; 0xffffff97
    d4a0:	ldr	r2, [fp, #-140]	; 0xffffff74
    d4a4:	mov	r1, #0
    d4a8:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d4ac:	bl	0 <coda_mem_uint8_new>
    d4b0:	str	r0, [fp, #-152]	; 0xffffff68
    d4b4:	mov	r3, #0
    d4b8:	ldr	r2, [fp, #-152]	; 0xffffff68
    d4bc:	ldr	r1, [pc, #-1932]	; cd38 <read_grib2_message+0x1e6c>
    d4c0:	ldr	r0, [fp, #-204]	; 0xffffff34
    d4c4:	bl	0 <coda_mem_record_add_field>
    d4c8:	bl	0 <__aeabi_read_tp>
    d4cc:	mov	r2, r0
    d4d0:	ldr	r3, [pc, #-1924]	; cd54 <read_grib2_message+0x1e88>
    d4d4:	ldr	r3, [r2, r3]
    d4d8:	ldr	r3, [r3, #320]	; 0x140
    d4dc:	str	r3, [fp, #-148]	; 0xffffff6c
    d4e0:	ldrsh	r3, [fp, #-102]	; 0xffffff9a
    d4e4:	ldr	r2, [fp, #-140]	; 0xffffff74
    d4e8:	mov	r1, #0
    d4ec:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d4f0:	bl	0 <coda_mem_int16_new>
    d4f4:	str	r0, [fp, #-152]	; 0xffffff68
    d4f8:	mov	r3, #0
    d4fc:	ldr	r2, [fp, #-152]	; 0xffffff68
    d500:	ldr	r1, [pc, #-1996]	; cd3c <read_grib2_message+0x1e70>
    d504:	ldr	r0, [fp, #-204]	; 0xffffff34
    d508:	bl	0 <coda_mem_record_add_field>
    d50c:	bl	0 <__aeabi_read_tp>
    d510:	mov	r2, r0
    d514:	ldr	r3, [pc, #-1992]	; cd54 <read_grib2_message+0x1e88>
    d518:	ldr	r3, [r2, r3]
    d51c:	ldr	r3, [r3, #528]	; 0x210
    d520:	str	r3, [fp, #-148]	; 0xffffff6c
    d524:	ldrsh	r3, [fp, #-104]	; 0xffffff98
    d528:	ldr	r2, [fp, #-140]	; 0xffffff74
    d52c:	mov	r1, #0
    d530:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d534:	bl	0 <coda_mem_int16_new>
    d538:	str	r0, [fp, #-152]	; 0xffffff68
    d53c:	mov	r3, #0
    d540:	ldr	r2, [fp, #-152]	; 0xffffff68
    d544:	ldr	r1, [pc, #-2060]	; cd40 <read_grib2_message+0x1e74>
    d548:	ldr	r0, [fp, #-204]	; 0xffffff34
    d54c:	bl	0 <coda_mem_record_add_field>
    d550:	bl	0 <__aeabi_read_tp>
    d554:	mov	r2, r0
    d558:	ldr	r3, [pc, #-2060]	; cd54 <read_grib2_message+0x1e88>
    d55c:	ldr	r3, [r2, r3]
    d560:	ldr	r3, [r3, #532]	; 0x214
    d564:	str	r3, [fp, #-148]	; 0xffffff6c
    d568:	vldr	s15, [fp, #-208]	; 0xffffff30
    d56c:	vmov.f32	s0, s15
    d570:	ldr	r2, [fp, #-140]	; 0xffffff74
    d574:	mov	r1, #0
    d578:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d57c:	bl	0 <coda_mem_float_new>
    d580:	str	r0, [fp, #-152]	; 0xffffff68
    d584:	mov	r3, #0
    d588:	ldr	r2, [fp, #-152]	; 0xffffff68
    d58c:	ldr	r1, [pc, #-2128]	; cd44 <read_grib2_message+0x1e78>
    d590:	ldr	r0, [fp, #-204]	; 0xffffff34
    d594:	bl	0 <coda_mem_record_add_field>
    d598:	ldr	r3, [fp, #-8]
    d59c:	cmp	r3, #0
    d5a0:	beq	d628 <read_grib2_message+0x275c>
    d5a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d5a8:	mov	r0, r3
    d5ac:	bl	0 <malloc>
    d5b0:	mov	r3, r0
    d5b4:	str	r3, [fp, #-136]	; 0xffffff78
    d5b8:	ldr	r3, [fp, #-136]	; 0xffffff78
    d5bc:	cmp	r3, #0
    d5c0:	bne	d5e8 <read_grib2_message+0x271c>
    d5c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    d5c8:	ldr	r3, [pc, #-2184]	; cd48 <read_grib2_message+0x1e7c>
    d5cc:	str	r3, [sp]
    d5d0:	ldr	r3, [pc, #-2188]	; cd4c <read_grib2_message+0x1e80>
    d5d4:	ldr	r1, [pc, #-2188]	; cd50 <read_grib2_message+0x1e84>
    d5d8:	mvn	r0, #0
    d5dc:	bl	0 <coda_set_error>
    d5e0:	mvn	r3, #0
    d5e4:	b	d7e8 <read_grib2_message+0x291c>
    d5e8:	ldr	r3, [fp, #-352]	; 0xfffffea0
    d5ec:	ldr	r1, [r3, #52]	; 0x34
    d5f0:	ldr	r3, [fp, #-136]	; 0xffffff78
    d5f4:	str	r3, [sp, #8]
    d5f8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
    d5fc:	strd	r2, [sp]
    d600:	ldrd	r2, [fp, #-20]	; 0xffffffec
    d604:	mov	r0, r1
    d608:	bl	0 <read_bytes>
    d60c:	mov	r3, r0
    d610:	cmp	r3, #0
    d614:	bge	d628 <read_grib2_message+0x275c>
    d618:	ldr	r0, [fp, #-136]	; 0xffffff78
    d61c:	bl	0 <free>
    d620:	mvn	r3, #0
    d624:	b	d7e8 <read_grib2_message+0x291c>
    d628:	bl	0 <__aeabi_read_tp>
    d62c:	mov	r2, r0
    d630:	ldr	r3, [pc, #-2276]	; cd54 <read_grib2_message+0x1e88>
    d634:	ldr	r3, [r2, r3]
    d638:	ldr	r3, [r3, #536]	; 0x218
    d63c:	str	r3, [fp, #-148]	; 0xffffff6c
    d640:	ldr	r1, [fp, #-112]	; 0xffffff90
    d644:	ldrb	r3, [fp, #-105]	; 0xffffff97
    d648:	vldr	s15, [fp, #-208]	; 0xffffff30
    d64c:	sub	r2, fp, #356	; 0x164
    d650:	mov	r0, r2
    d654:	ldr	r2, [fp, #-136]	; 0xffffff78
    d658:	str	r2, [sp, #12]
    d65c:	ldrsh	r2, [fp, #-104]	; 0xffffff98
    d660:	str	r2, [sp, #8]
    d664:	ldrsh	r2, [fp, #-102]	; 0xffffff9a
    d668:	str	r2, [sp, #4]
    d66c:	str	r3, [sp]
    d670:	vmov.f32	s0, s15
    d674:	ldrd	r2, [r0, #-8]
    d678:	ldr	r0, [fp, #-148]	; 0xffffff6c
    d67c:	bl	0 <coda_grib_value_array_simple_packing_new>
    d680:	str	r0, [fp, #-152]	; 0xffffff68
    d684:	ldr	r3, [fp, #-136]	; 0xffffff78
    d688:	cmp	r3, #0
    d68c:	beq	d698 <read_grib2_message+0x27cc>
    d690:	ldr	r0, [fp, #-136]	; 0xffffff78
    d694:	bl	0 <free>
    d698:	mov	r3, #0
    d69c:	ldr	r2, [fp, #-152]	; 0xffffff68
    d6a0:	ldr	r1, [pc, #-2384]	; cd58 <read_grib2_message+0x1e8c>
    d6a4:	ldr	r0, [fp, #-204]	; 0xffffff34
    d6a8:	bl	0 <coda_mem_record_add_field>
    d6ac:	ldr	r1, [fp, #-204]	; 0xffffff34
    d6b0:	ldr	r0, [fp, #-164]	; 0xffffff5c
    d6b4:	bl	0 <coda_mem_array_add_element>
    d6b8:	ldr	r3, [fp, #-144]	; 0xffffff70
    d6bc:	cmp	r3, #5
    d6c0:	bls	d6f0 <read_grib2_message+0x2824>
    d6c4:	ldr	r3, [fp, #-144]	; 0xffffff70
    d6c8:	sub	r3, r3, #5
    d6cc:	mov	r0, r3
    d6d0:	mov	r1, #0
    d6d4:	sub	r3, fp, #356	; 0x164
    d6d8:	mov	ip, r3
    d6dc:	sub	r3, fp, #356	; 0x164
    d6e0:	ldrd	r2, [r3, #-8]
    d6e4:	adds	r2, r2, r0
    d6e8:	adc	r3, r3, r1
    d6ec:	strd	r2, [ip, #-8]
    d6f0:	mov	r3, #7
    d6f4:	strb	r3, [fp, #-113]	; 0xffffff8f
    d6f8:	b	d72c <read_grib2_message+0x2860>
    d6fc:	sub	r2, fp, #320	; 0x140
    d700:	sub	r3, fp, #356	; 0x164
    d704:	ldrd	r0, [r3, #-8]
    d708:	bl	0 <coda_str64>
    d70c:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    d710:	sub	r2, r3, #48	; 0x30
    d714:	sub	r3, fp, #320	; 0x140
    d718:	ldr	r1, [pc, #-2500]	; cd5c <read_grib2_message+0x1e90>
    d71c:	ldr	r0, [pc, #-2492]	; cd68 <read_grib2_message+0x1e9c>
    d720:	bl	0 <coda_set_error>
    d724:	mvn	r3, #0
    d728:	b	d7e8 <read_grib2_message+0x291c>
    d72c:	ldr	r3, [fp, #-352]	; 0xfffffea0
    d730:	ldr	r1, [r3, #52]	; 0x34
    d734:	sub	r3, fp, #356	; 0x164
    d738:	mov	r0, r3
    d73c:	sub	r3, fp, #272	; 0x110
    d740:	str	r3, [sp, #8]
    d744:	mov	r2, #4
    d748:	mov	r3, #0
    d74c:	strd	r2, [sp]
    d750:	ldrd	r2, [r0, #-8]
    d754:	mov	r0, r1
    d758:	bl	0 <read_bytes>
    d75c:	mov	r3, r0
    d760:	cmp	r3, #0
    d764:	bge	d770 <read_grib2_message+0x28a4>
    d768:	mvn	r3, #0
    d76c:	b	d7e8 <read_grib2_message+0x291c>
    d770:	sub	r3, fp, #356	; 0x164
    d774:	mov	r1, r3
    d778:	sub	r3, fp, #356	; 0x164
    d77c:	ldrd	r2, [r3, #-8]
    d780:	adds	r2, r2, #4
    d784:	adc	r3, r3, #0
    d788:	strd	r2, [r1, #-8]
    d78c:	sub	r3, fp, #272	; 0x110
    d790:	mov	r2, #4
    d794:	ldr	r1, [pc, #-2620]	; cd60 <read_grib2_message+0x1e94>
    d798:	mov	r0, r3
    d79c:	bl	0 <memcmp>
    d7a0:	mov	r3, r0
    d7a4:	cmp	r3, #0
    d7a8:	bne	b5b4 <read_grib2_message+0x6e8>
    d7ac:	ldrb	r3, [fp, #-113]	; 0xffffff8f
    d7b0:	cmp	r3, #7
    d7b4:	beq	d7e4 <read_grib2_message+0x2918>
    d7b8:	sub	r2, fp, #344	; 0x158
    d7bc:	sub	r3, fp, #356	; 0x164
    d7c0:	ldrd	r0, [r3, #-8]
    d7c4:	bl	0 <coda_str64>
    d7c8:	sub	r3, fp, #344	; 0x158
    d7cc:	mov	r2, r3
    d7d0:	ldr	r1, [pc, #-2676]	; cd64 <read_grib2_message+0x1e98>
    d7d4:	ldr	r0, [pc, #-2676]	; cd68 <read_grib2_message+0x1e9c>
    d7d8:	bl	0 <coda_set_error>
    d7dc:	mvn	r3, #0
    d7e0:	b	d7e8 <read_grib2_message+0x291c>
    d7e4:	mov	r3, #0
    d7e8:	mov	r0, r3
    d7ec:	sub	sp, fp, #4
    d7f0:	pop	{fp, pc}

0000d7f4 <coda_grib_reopen>:
    d7f4:	push	{fp, lr}
    d7f8:	add	fp, sp, #4
    d7fc:	sub	sp, sp, #96	; 0x60
    d800:	str	r0, [fp, #-80]	; 0xffffffb0
    d804:	mov	r2, #0
    d808:	mov	r3, #0
    d80c:	strd	r2, [fp, #-20]	; 0xffffffec
    d810:	bl	614 <grib_init>
    d814:	mov	r3, r0
    d818:	cmp	r3, #0
    d81c:	beq	d838 <coda_grib_reopen+0x44>
    d820:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d824:	ldr	r3, [r3]
    d828:	mov	r0, r3
    d82c:	bl	0 <coda_close>
    d830:	mvn	r3, #0
    d834:	b	de30 <coda_grib_reopen+0x63c>
    d838:	mov	r0, #56	; 0x38
    d83c:	bl	0 <malloc>
    d840:	mov	r3, r0
    d844:	str	r3, [fp, #-28]	; 0xffffffe4
    d848:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d84c:	cmp	r3, #0
    d850:	bne	d888 <coda_grib_reopen+0x94>
    d854:	ldr	r3, [pc, #1504]	; de3c <coda_grib_reopen+0x648>
    d858:	str	r3, [sp]
    d85c:	ldr	r3, [pc, #1500]	; de40 <coda_grib_reopen+0x64c>
    d860:	mov	r2, #56	; 0x38
    d864:	ldr	r1, [pc, #1496]	; de44 <coda_grib_reopen+0x650>
    d868:	mvn	r0, #0
    d86c:	bl	0 <coda_set_error>
    d870:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d874:	ldr	r3, [r3]
    d878:	mov	r0, r3
    d87c:	bl	0 <coda_close>
    d880:	mvn	r3, #0
    d884:	b	de30 <coda_grib_reopen+0x63c>
    d888:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d88c:	mov	r2, #0
    d890:	str	r2, [r3]
    d894:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d898:	ldr	r3, [r3]
    d89c:	ldrd	r2, [r3, #8]
    d8a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d8a4:	strd	r2, [r1, #8]
    d8a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8ac:	mov	r2, #7
    d8b0:	str	r2, [r3, #16]
    d8b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8b8:	mov	r2, #0
    d8bc:	str	r2, [r3, #20]
    d8c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8c4:	mov	r2, #0
    d8c8:	str	r2, [r3, #24]
    d8cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8d0:	mov	r2, #0
    d8d4:	str	r2, [r3, #28]
    d8d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8dc:	mov	r2, #0
    d8e0:	str	r2, [r3, #32]
    d8e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    d8e8:	mov	r2, #0
    d8ec:	mov	r3, #0
    d8f0:	strd	r2, [r1, #40]	; 0x28
    d8f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d8f8:	mov	r2, #0
    d8fc:	str	r2, [r3, #48]	; 0x30
    d900:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d904:	ldr	r2, [r3]
    d908:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d90c:	str	r2, [r3, #52]	; 0x34
    d910:	ldr	r3, [fp, #-80]	; 0xffffffb0
    d914:	ldr	r3, [r3]
    d918:	ldr	r3, [r3]
    d91c:	mov	r0, r3
    d920:	bl	0 <strdup>
    d924:	mov	r3, r0
    d928:	mov	r2, r3
    d92c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d930:	str	r2, [r3]
    d934:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d938:	ldr	r3, [r3]
    d93c:	cmp	r3, #0
    d940:	bne	d968 <coda_grib_reopen+0x174>
    d944:	ldr	r3, [pc, #1276]	; de48 <coda_grib_reopen+0x654>
    d948:	ldr	r2, [pc, #1264]	; de40 <coda_grib_reopen+0x64c>
    d94c:	ldr	r1, [pc, #1272]	; de4c <coda_grib_reopen+0x658>
    d950:	mvn	r0, #0
    d954:	bl	0 <coda_set_error>
    d958:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d95c:	bl	de68 <coda_grib_close>
    d960:	mvn	r3, #0
    d964:	b	de30 <coda_grib_reopen+0x63c>
    d968:	bl	0 <__aeabi_read_tp>
    d96c:	mov	r2, r0
    d970:	ldr	r3, [pc, #1240]	; de50 <coda_grib_reopen+0x65c>
    d974:	ldr	r3, [r2, r3]
    d978:	add	r3, r3, #568	; 0x238
    d97c:	ldr	r3, [r3]
    d980:	mov	r1, #0
    d984:	mov	r0, r3
    d988:	bl	0 <coda_mem_array_new>
    d98c:	mov	r2, r0
    d990:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d994:	str	r2, [r3, #20]
    d998:	mov	r3, #0
    d99c:	str	r3, [fp, #-8]
    d9a0:	b	ddf8 <coda_grib_reopen+0x604>
    d9a4:	mov	r3, #0
    d9a8:	strb	r3, [fp, #-68]	; 0xffffffbc
    d9ac:	b	da04 <coda_grib_reopen+0x210>
    d9b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    d9b4:	ldr	r1, [r3, #52]	; 0x34
    d9b8:	sub	r3, fp, #68	; 0x44
    d9bc:	str	r3, [sp, #8]
    d9c0:	mov	r2, #1
    d9c4:	mov	r3, #0
    d9c8:	strd	r2, [sp]
    d9cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
    d9d0:	mov	r0, r1
    d9d4:	bl	1e4 <read_bytes_in_bounds>
    d9d8:	mov	r3, r0
    d9dc:	cmp	r3, #0
    d9e0:	bge	d9f4 <coda_grib_reopen+0x200>
    d9e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    d9e8:	bl	de68 <coda_grib_close>
    d9ec:	mvn	r3, #0
    d9f0:	b	de30 <coda_grib_reopen+0x63c>
    d9f4:	ldrd	r2, [fp, #-20]	; 0xffffffec
    d9f8:	adds	r2, r2, #1
    d9fc:	adc	r3, r3, #0
    da00:	strd	r2, [fp, #-20]	; 0xffffffec
    da04:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da08:	ldrd	r2, [r3, #8]
    da0c:	subs	r2, r2, #1
    da10:	sbc	r3, r3, #0
    da14:	ldrd	r0, [fp, #-20]	; 0xffffffec
    da18:	cmp	r0, r2
    da1c:	sbcs	r3, r1, r3
    da20:	bge	da30 <coda_grib_reopen+0x23c>
    da24:	ldrb	r3, [fp, #-68]	; 0xffffffbc
    da28:	cmp	r3, #71	; 0x47
    da2c:	bne	d9b0 <coda_grib_reopen+0x1bc>
    da30:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da34:	ldrd	r2, [r3, #8]
    da38:	subs	r2, r2, #1
    da3c:	sbc	r3, r3, #0
    da40:	ldrd	r0, [fp, #-20]	; 0xffffffec
    da44:	cmp	r0, r2
    da48:	sbcs	r3, r1, r3
    da4c:	bge	de1c <coda_grib_reopen+0x628>
    da50:	ldrd	r2, [fp, #-20]	; 0xffffffec
    da54:	subs	r2, r2, #1
    da58:	sbc	r3, r3, #0
    da5c:	strd	r2, [fp, #-20]	; 0xffffffec
    da60:	ldr	r3, [fp, #-28]	; 0xffffffe4
    da64:	ldr	r1, [r3, #52]	; 0x34
    da68:	sub	r3, fp, #68	; 0x44
    da6c:	str	r3, [sp, #8]
    da70:	mov	r2, #8
    da74:	mov	r3, #0
    da78:	strd	r2, [sp]
    da7c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    da80:	mov	r0, r1
    da84:	bl	0 <read_bytes>
    da88:	mov	r3, r0
    da8c:	cmp	r3, #0
    da90:	bge	daa4 <coda_grib_reopen+0x2b0>
    da94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    da98:	bl	de68 <coda_grib_close>
    da9c:	mvn	r3, #0
    daa0:	b	de30 <coda_grib_reopen+0x63c>
    daa4:	ldrb	r3, [fp, #-68]	; 0xffffffbc
    daa8:	cmp	r3, #71	; 0x47
    daac:	bne	dad4 <coda_grib_reopen+0x2e0>
    dab0:	ldrb	r3, [fp, #-67]	; 0xffffffbd
    dab4:	cmp	r3, #82	; 0x52
    dab8:	bne	dad4 <coda_grib_reopen+0x2e0>
    dabc:	ldrb	r3, [fp, #-66]	; 0xffffffbe
    dac0:	cmp	r3, #73	; 0x49
    dac4:	bne	dad4 <coda_grib_reopen+0x2e0>
    dac8:	ldrb	r3, [fp, #-65]	; 0xffffffbf
    dacc:	cmp	r3, #66	; 0x42
    dad0:	beq	daf4 <coda_grib_reopen+0x300>
    dad4:	ldr	r2, [fp, #-8]
    dad8:	ldr	r1, [pc, #884]	; de54 <coda_grib_reopen+0x660>
    dadc:	ldr	r0, [pc, #884]	; de58 <coda_grib_reopen+0x664>
    dae0:	bl	0 <coda_set_error>
    dae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dae8:	bl	de68 <coda_grib_close>
    daec:	mvn	r3, #0
    daf0:	b	de30 <coda_grib_reopen+0x63c>
    daf4:	ldrb	r3, [fp, #-61]	; 0xffffffc3
    daf8:	str	r3, [fp, #-32]	; 0xffffffe0
    dafc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    db00:	cmp	r3, #1
    db04:	beq	db38 <coda_grib_reopen+0x344>
    db08:	ldr	r3, [fp, #-32]	; 0xffffffe0
    db0c:	cmp	r3, #2
    db10:	beq	db38 <coda_grib_reopen+0x344>
    db14:	ldr	r3, [fp, #-8]
    db18:	ldr	r2, [fp, #-32]	; 0xffffffe0
    db1c:	ldr	r1, [pc, #824]	; de5c <coda_grib_reopen+0x668>
    db20:	mvn	r0, #199	; 0xc7
    db24:	bl	0 <coda_set_error>
    db28:	ldr	r0, [fp, #-28]	; 0xffffffe4
    db2c:	bl	de68 <coda_grib_close>
    db30:	mvn	r3, #0
    db34:	b	de30 <coda_grib_reopen+0x63c>
    db38:	bl	0 <__aeabi_read_tp>
    db3c:	mov	r2, r0
    db40:	ldr	r3, [pc, #776]	; de50 <coda_grib_reopen+0x65c>
    db44:	ldr	r3, [r2, r3]
    db48:	add	r3, r3, #564	; 0x234
    db4c:	ldr	r3, [r3]
    db50:	mov	r1, #0
    db54:	mov	r0, r3
    db58:	bl	0 <coda_mem_record_new>
    db5c:	str	r0, [fp, #-36]	; 0xffffffdc
    db60:	ldr	r3, [fp, #-32]	; 0xffffffe0
    db64:	cmp	r3, #1
    db68:	bne	dc48 <coda_grib_reopen+0x454>
    db6c:	ldrb	r3, [fp, #-64]	; 0xffffffc0
    db70:	lsl	r3, r3, #8
    db74:	ldrb	r2, [fp, #-63]	; 0xffffffc1
    db78:	add	r3, r3, r2
    db7c:	lsl	r3, r3, #8
    db80:	ldrb	r2, [fp, #-62]	; 0xffffffc2
    db84:	add	r3, r3, r2
    db88:	mov	r2, r3
    db8c:	asr	r3, r2, #31
    db90:	strd	r2, [fp, #-76]	; 0xffffffb4
    db94:	bl	0 <__aeabi_read_tp>
    db98:	mov	r2, r0
    db9c:	ldr	r3, [pc, #684]	; de50 <coda_grib_reopen+0x65c>
    dba0:	ldr	r3, [r2, r3]
    dba4:	add	r3, r3, #272	; 0x110
    dba8:	ldr	r3, [r3]
    dbac:	mov	r1, #0
    dbb0:	mov	r0, r3
    dbb4:	bl	0 <coda_mem_record_new>
    dbb8:	str	r0, [fp, #-24]	; 0xffffffe8
    dbbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dbc0:	ldr	r3, [r3, #20]
    dbc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dbc8:	str	r2, [r3]
    dbcc:	bl	0 <__aeabi_read_tp>
    dbd0:	mov	r2, r0
    dbd4:	ldr	r3, [pc, #628]	; de50 <coda_grib_reopen+0x65c>
    dbd8:	ldr	r3, [r2, r3]
    dbdc:	add	r3, r3, #12
    dbe0:	ldr	r0, [r3]
    dbe4:	mov	r3, #1
    dbe8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    dbec:	mov	r1, #0
    dbf0:	bl	0 <coda_mem_uint8_new>
    dbf4:	str	r0, [fp, #-40]	; 0xffffffd8
    dbf8:	mov	r3, #0
    dbfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dc00:	ldr	r1, [pc, #600]	; de60 <coda_grib_reopen+0x66c>
    dc04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dc08:	bl	0 <coda_mem_record_add_field>
    dc0c:	ldrd	r2, [fp, #-20]	; 0xffffffec
    dc10:	adds	r2, r2, #8
    dc14:	adc	r3, r3, #0
    dc18:	ldr	r1, [fp, #-24]	; 0xffffffe8
    dc1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dc20:	bl	9088 <read_grib1_message>
    dc24:	mov	r3, r0
    dc28:	cmp	r3, #0
    dc2c:	beq	dda0 <coda_grib_reopen+0x5ac>
    dc30:	ldr	r0, [fp, #-36]	; 0xffffffdc
    dc34:	bl	0 <coda_dynamic_type_delete>
    dc38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dc3c:	bl	de68 <coda_grib_close>
    dc40:	mvn	r3, #0
    dc44:	b	de30 <coda_grib_reopen+0x63c>
    dc48:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dc4c:	ldr	ip, [r3, #52]	; 0x34
    dc50:	ldrd	r2, [fp, #-20]	; 0xffffffec
    dc54:	adds	r0, r2, #8
    dc58:	adc	r1, r3, #0
    dc5c:	sub	r3, fp, #76	; 0x4c
    dc60:	str	r3, [sp, #8]
    dc64:	mov	r2, #8
    dc68:	mov	r3, #0
    dc6c:	strd	r2, [sp]
    dc70:	mov	r2, r0
    dc74:	mov	r3, r1
    dc78:	mov	r0, ip
    dc7c:	bl	0 <read_bytes>
    dc80:	mov	r3, r0
    dc84:	cmp	r3, #0
    dc88:	bge	dc9c <coda_grib_reopen+0x4a8>
    dc8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dc90:	bl	de68 <coda_grib_close>
    dc94:	mvn	r3, #0
    dc98:	b	de30 <coda_grib_reopen+0x63c>
    dc9c:	sub	r3, fp, #76	; 0x4c
    dca0:	mov	r0, r3
    dca4:	bl	3f0 <swap8>
    dca8:	bl	0 <__aeabi_read_tp>
    dcac:	mov	r2, r0
    dcb0:	ldr	r3, [pc, #408]	; de50 <coda_grib_reopen+0x65c>
    dcb4:	ldr	r3, [r2, r3]
    dcb8:	add	r3, r3, #560	; 0x230
    dcbc:	ldr	r3, [r3]
    dcc0:	mov	r1, #0
    dcc4:	mov	r0, r3
    dcc8:	bl	0 <coda_mem_record_new>
    dccc:	str	r0, [fp, #-24]	; 0xffffffe8
    dcd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    dcd4:	ldr	r3, [r3, #20]
    dcd8:	add	r3, r3, #4
    dcdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    dce0:	str	r2, [r3]
    dce4:	bl	0 <__aeabi_read_tp>
    dce8:	mov	r2, r0
    dcec:	ldr	r3, [pc, #348]	; de50 <coda_grib_reopen+0x65c>
    dcf0:	ldr	r3, [r2, r3]
    dcf4:	add	r3, r3, #284	; 0x11c
    dcf8:	ldr	r0, [r3]
    dcfc:	mov	r3, #2
    dd00:	ldr	r2, [fp, #-28]	; 0xffffffe4
    dd04:	mov	r1, #0
    dd08:	bl	0 <coda_mem_uint8_new>
    dd0c:	str	r0, [fp, #-40]	; 0xffffffd8
    dd10:	mov	r3, #0
    dd14:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dd18:	ldr	r1, [pc, #320]	; de60 <coda_grib_reopen+0x66c>
    dd1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dd20:	bl	0 <coda_mem_record_add_field>
    dd24:	bl	0 <__aeabi_read_tp>
    dd28:	mov	r2, r0
    dd2c:	ldr	r3, [pc, #284]	; de50 <coda_grib_reopen+0x65c>
    dd30:	ldr	r3, [r2, r3]
    dd34:	add	r3, r3, #324	; 0x144
    dd38:	ldr	r0, [r3]
    dd3c:	ldrb	r3, [fp, #-62]	; 0xffffffc2
    dd40:	ldr	r2, [fp, #-28]	; 0xffffffe4
    dd44:	mov	r1, #0
    dd48:	bl	0 <coda_mem_uint8_new>
    dd4c:	str	r0, [fp, #-40]	; 0xffffffd8
    dd50:	mov	r3, #0
    dd54:	ldr	r2, [fp, #-40]	; 0xffffffd8
    dd58:	ldr	r1, [pc, #260]	; de64 <coda_grib_reopen+0x670>
    dd5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    dd60:	bl	0 <coda_mem_record_add_field>
    dd64:	ldrd	r2, [fp, #-20]	; 0xffffffec
    dd68:	adds	r2, r2, #16
    dd6c:	adc	r3, r3, #0
    dd70:	ldr	r1, [fp, #-24]	; 0xffffffe8
    dd74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dd78:	bl	aecc <read_grib2_message>
    dd7c:	mov	r3, r0
    dd80:	cmp	r3, #0
    dd84:	beq	dda0 <coda_grib_reopen+0x5ac>
    dd88:	ldr	r0, [fp, #-36]	; 0xffffffdc
    dd8c:	bl	0 <coda_dynamic_type_delete>
    dd90:	ldr	r0, [fp, #-28]	; 0xffffffe4
    dd94:	bl	de68 <coda_grib_close>
    dd98:	mvn	r3, #0
    dd9c:	b	de30 <coda_grib_reopen+0x63c>
    dda0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    dda4:	ldr	r3, [r3, #20]
    dda8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    ddac:	mov	r0, r3
    ddb0:	bl	0 <coda_mem_array_add_element>
    ddb4:	mov	r3, r0
    ddb8:	cmp	r3, #0
    ddbc:	beq	ddd8 <coda_grib_reopen+0x5e4>
    ddc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    ddc4:	bl	0 <coda_dynamic_type_delete>
    ddc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    ddcc:	bl	de68 <coda_grib_close>
    ddd0:	mvn	r3, #0
    ddd4:	b	de30 <coda_grib_reopen+0x63c>
    ddd8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    dddc:	ldrd	r0, [fp, #-20]	; 0xffffffec
    dde0:	adds	r2, r2, r0
    dde4:	adc	r3, r3, r1
    dde8:	strd	r2, [fp, #-20]	; 0xffffffec
    ddec:	ldr	r3, [fp, #-8]
    ddf0:	add	r3, r3, #1
    ddf4:	str	r3, [fp, #-8]
    ddf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    ddfc:	ldrd	r2, [r3, #8]
    de00:	subs	r2, r2, #1
    de04:	sbc	r3, r3, #0
    de08:	ldrd	r0, [fp, #-20]	; 0xffffffec
    de0c:	cmp	r0, r2
    de10:	sbcs	r3, r1, r3
    de14:	blt	d9a4 <coda_grib_reopen+0x1b0>
    de18:	b	de20 <coda_grib_reopen+0x62c>
    de1c:	nop			; (mov r0, r0)
    de20:	ldr	r3, [fp, #-80]	; 0xffffffb0
    de24:	ldr	r2, [fp, #-28]	; 0xffffffe4
    de28:	str	r2, [r3]
    de2c:	mov	r3, #0
    de30:	mov	r0, r3
    de34:	sub	sp, fp, #4
    de38:	pop	{fp, pc}
    de3c:	.word	0x00000bcb
    de40:	.word	0x00000180
    de44:	.word	0x000001c8
    de48:	.word	0x00000bdf
    de4c:	.word	0x00001b00
    de50:	.word	0x00000000
    de54:	.word	0x00001b3c
    de58:	.word	0xfffffed4
    de5c:	.word	0x00001b60
    de60:	.word	0x00000d38
    de64:	.word	0x00001410

0000de68 <coda_grib_close>:
    de68:	push	{fp, lr}
    de6c:	add	fp, sp, #4
    de70:	sub	sp, sp, #16
    de74:	str	r0, [fp, #-16]
    de78:	ldr	r3, [fp, #-16]
    de7c:	str	r3, [fp, #-8]
    de80:	ldr	r3, [fp, #-8]
    de84:	ldr	r3, [r3]
    de88:	cmp	r3, #0
    de8c:	beq	dea0 <coda_grib_close+0x38>
    de90:	ldr	r3, [fp, #-8]
    de94:	ldr	r3, [r3]
    de98:	mov	r0, r3
    de9c:	bl	0 <free>
    dea0:	ldr	r3, [fp, #-8]
    dea4:	ldr	r3, [r3, #20]
    dea8:	cmp	r3, #0
    deac:	beq	dec0 <coda_grib_close+0x58>
    deb0:	ldr	r3, [fp, #-8]
    deb4:	ldr	r3, [r3, #20]
    deb8:	mov	r0, r3
    debc:	bl	0 <coda_dynamic_type_delete>
    dec0:	ldr	r3, [fp, #-8]
    dec4:	ldr	r3, [r3, #48]	; 0x30
    dec8:	cmp	r3, #0
    decc:	beq	dee0 <coda_grib_close+0x78>
    ded0:	ldr	r3, [fp, #-8]
    ded4:	ldr	r3, [r3, #48]	; 0x30
    ded8:	mov	r0, r3
    dedc:	bl	0 <free>
    dee0:	ldr	r3, [fp, #-8]
    dee4:	ldr	r3, [r3, #52]	; 0x34
    dee8:	cmp	r3, #0
    deec:	beq	df00 <coda_grib_close+0x98>
    def0:	ldr	r3, [fp, #-8]
    def4:	ldr	r3, [r3, #52]	; 0x34
    def8:	mov	r0, r3
    defc:	bl	0 <coda_bin_close>
    df00:	ldr	r0, [fp, #-8]
    df04:	bl	0 <free>
    df08:	mov	r3, #0
    df0c:	mov	r0, r3
    df10:	sub	sp, fp, #4
    df14:	pop	{fp, pc}
