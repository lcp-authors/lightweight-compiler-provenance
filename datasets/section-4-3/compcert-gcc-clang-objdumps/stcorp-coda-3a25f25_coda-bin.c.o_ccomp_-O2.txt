
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-bin.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_bin_product_open>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #32
   8:	str	ip, [sp, #8]
   c:	str	lr, [sp, #12]
  10:	str	r4, [sp, #16]
  14:	str	r5, [sp, #20]
  18:	str	r6, [sp, #24]
  1c:	mov	r5, r0
  20:	mov	r1, #0
  24:	str	r1, [r5, #52]	; 0x34
  28:	mvn	r0, #0
  2c:	str	r0, [r5, #56]	; 0x38
  30:	ldr	r3, [pc, #368]	; 1a8 <coda_bin_product_open+0x1a8>
  34:	ldr	r0, [r3]
  38:	cmp	r0, #0
  3c:	beq	14c <coda_bin_product_open+0x14c>
  40:	ldr	r3, [r5, #8]
  44:	ldr	r0, [r5, #12]
  48:	cmp	r0, #0
  4c:	bne	60 <coda_bin_product_open+0x60>
  50:	cmp	r3, #0
  54:	movhi	r3, #1
  58:	movls	r3, #0
  5c:	b	6c <coda_bin_product_open+0x6c>
  60:	cmp	r0, #0
  64:	movgt	r3, #1
  68:	movle	r3, #0
  6c:	cmp	r3, #0
  70:	beq	14c <coda_bin_product_open+0x14c>
  74:	mov	r2, #1
  78:	str	r2, [r5, #52]	; 0x34
  7c:	ldr	r0, [r5]
  80:	mov	r1, #0
  84:	bl	0 <open>
  88:	mov	r4, r0
  8c:	cmp	r4, #0
  90:	bge	c4 <coda_bin_product_open+0xc4>
  94:	bl	0 <__errno_location>
  98:	ldr	r0, [r0]
  9c:	bl	0 <strerror>
  a0:	mvn	r3, #20
  a4:	ldr	r1, [pc, #260]	; 1b0 <coda_bin_product_open+0x1b0>
  a8:	ldr	r2, [r5]
  ac:	mov	ip, r0
  b0:	mov	r0, r3
  b4:	mov	r3, ip
  b8:	bl	0 <coda_set_error>
  bc:	mvn	r0, #0
  c0:	b	190 <coda_bin_product_open+0x190>
  c4:	mov	r0, #0
  c8:	ldr	r1, [r5, #8]
  cc:	mov	r2, #1
  d0:	mov	r3, #1
  d4:	mov	r6, #0
  d8:	str	r6, [sp, #4]
  dc:	str	r4, [sp]
  e0:	bl	0 <mmap>
  e4:	str	r0, [r5, #48]	; 0x30
  e8:	cmn	r0, #1
  ec:	bne	130 <coda_bin_product_open+0x130>
  f0:	bl	0 <__errno_location>
  f4:	ldr	r0, [r0]
  f8:	bl	0 <strerror>
  fc:	mvn	r3, #20
 100:	ldr	r1, [pc, #164]	; 1ac <coda_bin_product_open+0x1ac>
 104:	ldr	r2, [r5]
 108:	mov	ip, r0
 10c:	mov	r0, r3
 110:	mov	r3, ip
 114:	bl	0 <coda_set_error>
 118:	mov	ip, #0
 11c:	str	ip, [r5, #48]	; 0x30
 120:	mov	r0, r4
 124:	bl	0 <close>
 128:	mvn	r0, #0
 12c:	b	190 <coda_bin_product_open+0x190>
 130:	mov	r0, r4
 134:	bl	0 <close>
 138:	ldr	r0, [r5, #8]
 13c:	ldr	ip, [r5, #12]
 140:	str	r0, [r5, #40]	; 0x28
 144:	str	ip, [r5, #44]	; 0x2c
 148:	b	18c <coda_bin_product_open+0x18c>
 14c:	mov	r1, #0
 150:	ldr	r0, [r5]
 154:	bl	0 <open>
 158:	str	r0, [r5, #56]	; 0x38
 15c:	cmp	r0, #0
 160:	bge	18c <coda_bin_product_open+0x18c>
 164:	bl	0 <__errno_location>
 168:	ldr	r0, [r0]
 16c:	bl	0 <strerror>
 170:	mov	r3, r0
 174:	mvn	r0, #20
 178:	ldr	r1, [pc, #48]	; 1b0 <coda_bin_product_open+0x1b0>
 17c:	ldr	r2, [r5]
 180:	bl	0 <coda_set_error>
 184:	mvn	r0, #0
 188:	b	190 <coda_bin_product_open+0x190>
 18c:	mov	r0, #0
 190:	ldr	r4, [sp, #16]
 194:	ldr	r5, [sp, #20]
 198:	ldr	r6, [sp, #24]
 19c:	ldr	lr, [sp, #12]
 1a0:	add	sp, sp, #32
 1a4:	bx	lr
 1a8:	.word	0x00000000
 1ac:	.word	0x000000b2
 1b0:	.word	0x0000003e

000001b4 <coda_bin_product_close>:
 1b4:	mov	ip, sp
 1b8:	sub	sp, sp, #16
 1bc:	str	ip, [sp]
 1c0:	str	lr, [sp, #4]
 1c4:	str	r4, [sp, #8]
 1c8:	mov	r4, r0
 1cc:	ldr	r0, [r4, #52]	; 0x34
 1d0:	cmp	r0, #0
 1d4:	beq	200 <coda_bin_product_close+0x4c>
 1d8:	ldr	r0, [r4, #48]	; 0x30
 1dc:	cmp	r0, #0
 1e0:	beq	1f4 <coda_bin_product_close+0x40>
 1e4:	ldr	r1, [r4, #8]
 1e8:	bl	0 <munmap>
 1ec:	mov	r2, #0
 1f0:	str	r2, [r4, #48]	; 0x30
 1f4:	mov	r3, #0
 1f8:	str	r3, [r4, #52]	; 0x34
 1fc:	b	218 <coda_bin_product_close+0x64>
 200:	ldr	r0, [r4, #56]	; 0x38
 204:	cmp	r0, #0
 208:	blt	218 <coda_bin_product_close+0x64>
 20c:	bl	0 <close>
 210:	mvn	ip, #0
 214:	str	ip, [r4, #56]	; 0x38
 218:	mov	r0, #0
 21c:	ldr	r4, [sp, #8]
 220:	ldr	lr, [sp, #4]
 224:	add	sp, sp, #16
 228:	bx	lr

0000022c <coda_bin_open>:
 22c:	mov	ip, sp
 230:	sub	sp, sp, #40	; 0x28
 234:	str	ip, [sp, #4]
 238:	str	lr, [sp, #8]
 23c:	str	r4, [sp, #16]
 240:	str	r5, [sp, #20]
 244:	str	r6, [sp, #24]
 248:	str	r7, [sp, #28]
 24c:	str	r8, [sp, #32]
 250:	ldr	r5, [ip]
 254:	mov	r7, r3
 258:	mov	r8, r2
 25c:	mov	r6, r0
 260:	mov	r0, #64	; 0x40
 264:	bl	0 <malloc>
 268:	mov	r4, r0
 26c:	cmp	r4, #0
 270:	bne	298 <coda_bin_open+0x6c>
 274:	mvn	r0, #0
 278:	ldr	r1, [pc, #284]	; 39c <coda_bin_open+0x170>
 27c:	mov	r2, #64	; 0x40
 280:	ldr	r3, [pc, #272]	; 398 <coda_bin_open+0x16c>
 284:	mov	r4, #241	; 0xf1
 288:	str	r4, [sp]
 28c:	bl	0 <coda_set_error>
 290:	mvn	r0, #0
 294:	b	378 <coda_bin_open+0x14c>
 298:	mov	r2, #0
 29c:	str	r2, [r4]
 2a0:	str	r8, [r4, #8]
 2a4:	str	r7, [r4, #12]
 2a8:	mov	r3, #1
 2ac:	str	r3, [r4, #16]
 2b0:	mov	r2, #0
 2b4:	str	r2, [r4, #20]
 2b8:	mov	r3, #0
 2bc:	str	r3, [r4, #24]
 2c0:	mov	r0, #0
 2c4:	str	r0, [r4, #28]
 2c8:	mov	r3, #0
 2cc:	str	r3, [r4, #32]
 2d0:	mov	r1, #0
 2d4:	mov	r0, #0
 2d8:	str	r0, [r4, #40]	; 0x28
 2dc:	str	r1, [r4, #44]	; 0x2c
 2e0:	mov	ip, #0
 2e4:	str	ip, [r4, #48]	; 0x30
 2e8:	mov	ip, #0
 2ec:	str	ip, [r4, #52]	; 0x34
 2f0:	mvn	r0, #0
 2f4:	str	r0, [r4, #56]	; 0x38
 2f8:	bl	0 <coda_type_raw_file_singleton>
 2fc:	str	r0, [r4, #20]
 300:	cmp	r0, #0
 304:	bne	318 <coda_bin_open+0xec>
 308:	mov	r0, r4
 30c:	bl	458 <coda_bin_close>
 310:	mvn	r0, #0
 314:	b	378 <coda_bin_open+0x14c>
 318:	mov	r0, r6
 31c:	bl	0 <strdup>
 320:	str	r0, [r4]
 324:	cmp	r0, #0
 328:	bne	350 <coda_bin_open+0x124>
 32c:	mvn	r0, #0
 330:	ldr	r1, [pc, #104]	; 3a0 <coda_bin_open+0x174>
 334:	ldr	r2, [pc, #92]	; 398 <coda_bin_open+0x16c>
 338:	mov	r3, #268	; 0x10c
 33c:	bl	0 <coda_set_error>
 340:	mov	r0, r4
 344:	bl	458 <coda_bin_close>
 348:	mvn	r0, #0
 34c:	b	378 <coda_bin_open+0x14c>
 350:	mov	r0, r4
 354:	bl	0 <coda_bin_product_open>
 358:	cmp	r0, #0
 35c:	beq	370 <coda_bin_open+0x144>
 360:	mov	r0, r4
 364:	bl	458 <coda_bin_close>
 368:	mvn	r0, #0
 36c:	b	378 <coda_bin_open+0x14c>
 370:	str	r4, [r5]
 374:	mov	r0, #0
 378:	ldr	r4, [sp, #16]
 37c:	ldr	r5, [sp, #20]
 380:	ldr	r6, [sp, #24]
 384:	ldr	r7, [sp, #28]
 388:	ldr	r8, [sp, #32]
 38c:	ldr	lr, [sp, #8]
 390:	add	sp, sp, #40	; 0x28
 394:	bx	lr
 398:	.word	0x0000005a
 39c:	.word	0x00000102
 3a0:	.word	0x00000137

000003a4 <coda_bin_reopen_with_definition>:
 3a4:	mov	ip, sp
 3a8:	sub	sp, sp, #16
 3ac:	str	ip, [sp]
 3b0:	str	lr, [sp, #4]
 3b4:	str	r4, [sp, #8]
 3b8:	str	r5, [sp, #12]
 3bc:	mov	r5, r1
 3c0:	ldr	r4, [r0]
 3c4:	cmp	r5, #0
 3c8:	bne	3e0 <coda_bin_reopen_with_definition+0x3c>
 3cc:	ldr	r0, [pc, #128]	; 454 <coda_bin_reopen_with_definition+0xb0>
 3d0:	ldr	r1, [pc, #116]	; 44c <coda_bin_reopen_with_definition+0xa8>
 3d4:	mov	r2, #288	; 0x120
 3d8:	ldr	r3, [pc, #112]	; 450 <coda_bin_reopen_with_definition+0xac>
 3dc:	bl	0 <__assert_fail>
 3e0:	ldr	r2, [r4, #16]
 3e4:	cmp	r2, #1
 3e8:	beq	400 <coda_bin_reopen_with_definition+0x5c>
 3ec:	ldr	r0, [pc, #84]	; 448 <coda_bin_reopen_with_definition+0xa4>
 3f0:	ldr	r1, [pc, #84]	; 44c <coda_bin_reopen_with_definition+0xa8>
 3f4:	movw	r2, #289	; 0x121
 3f8:	ldr	r3, [pc, #80]	; 450 <coda_bin_reopen_with_definition+0xac>
 3fc:	bl	0 <__assert_fail>
 400:	ldr	ip, [r5]
 404:	cmp	ip, #1
 408:	beq	420 <coda_bin_reopen_with_definition+0x7c>
 40c:	ldr	r0, [pc, #48]	; 444 <coda_bin_reopen_with_definition+0xa0>
 410:	ldr	r1, [pc, #52]	; 44c <coda_bin_reopen_with_definition+0xa8>
 414:	movw	r2, #290	; 0x122
 418:	ldr	r3, [pc, #48]	; 450 <coda_bin_reopen_with_definition+0xac>
 41c:	bl	0 <__assert_fail>
 420:	ldr	r0, [r5, #28]
 424:	str	r0, [r4, #20]
 428:	str	r5, [r4, #24]
 42c:	mov	r0, #0
 430:	ldr	r4, [sp, #8]
 434:	ldr	r5, [sp, #12]
 438:	ldr	lr, [sp, #4]
 43c:	add	sp, sp, #16
 440:	bx	lr
 444:	.word	0x000000d9
 448:	.word	0x00000000
 44c:	.word	0x0000005a
 450:	.word	0x00000173
 454:	.word	0x0000002b

00000458 <coda_bin_close>:
 458:	mov	ip, sp
 45c:	sub	sp, sp, #16
 460:	str	ip, [sp]
 464:	str	lr, [sp, #4]
 468:	str	r4, [sp, #8]
 46c:	mov	r4, r0
 470:	mov	r0, r4
 474:	bl	1b4 <coda_bin_product_close>
 478:	cmp	r0, #0
 47c:	beq	488 <coda_bin_close+0x30>
 480:	mvn	r0, #0
 484:	b	4a4 <coda_bin_close+0x4c>
 488:	ldr	r0, [r4]
 48c:	cmp	r0, #0
 490:	beq	498 <coda_bin_close+0x40>
 494:	bl	0 <free>
 498:	mov	r0, r4
 49c:	bl	0 <free>
 4a0:	mov	r0, #0
 4a4:	ldr	r4, [sp, #8]
 4a8:	ldr	lr, [sp, #4]
 4ac:	add	sp, sp, #16
 4b0:	bx	lr
