
../compcert-repos/rootname/CMakeFiles/rootname.dir/src/power.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <init_bat>:
   0:	movw	r1, #0
   4:	movt	r1, #0
   8:	strd	r4, [sp, #-16]!
   c:	mov	r4, r0
  10:	movw	r0, #0
  14:	movt	r0, #0
  18:	str	r6, [sp, #8]
  1c:	str	lr, [sp, #12]
  20:	bl	0 <fopen>
  24:	subs	r5, r0, #0
  28:	beq	b0 <init_bat+0xb0>
  2c:	mov	r3, #1
  30:	mov	r0, r5
  34:	strb	r3, [r4, #24]
  38:	bl	0 <read_int>
  3c:	strd	r0, [r4, #16]
  40:	movw	r1, #0
  44:	movt	r1, #0
  48:	movw	r0, #0
  4c:	movt	r0, #0
  50:	bl	0 <fopen>
  54:	movw	r1, #0
  58:	movt	r1, #0
  5c:	str	r0, [r4]
  60:	movw	r0, #0
  64:	movt	r0, #0
  68:	bl	0 <fopen>
  6c:	cmp	r0, #0
  70:	str	r0, [r4, #4]
  74:	beq	108 <init_bat+0x108>
  78:	movw	r1, #0
  7c:	movt	r1, #0
  80:	movw	r0, #0
  84:	movt	r0, #0
  88:	bl	0 <fopen>
  8c:	cmp	r0, #0
  90:	str	r0, [r4, #8]
  94:	beq	ec <init_bat+0xec>
  98:	mov	r0, r5
  9c:	ldrd	r4, [sp]
  a0:	ldr	r6, [sp, #8]
  a4:	ldr	lr, [sp, #12]
  a8:	add	sp, sp, #16
  ac:	b	0 <fclose>
  b0:	movw	r1, #0
  b4:	movt	r1, #0
  b8:	movw	r0, #0
  bc:	movt	r0, #0
  c0:	bl	0 <fopen>
  c4:	subs	r5, r0, #0
  c8:	bne	2c <init_bat+0x2c>
  cc:	ldr	r6, [sp, #8]
  d0:	str	r5, [r4]
  d4:	str	r5, [r4, #4]
  d8:	str	r5, [r4, #8]
  dc:	strb	r5, [r4, #24]
  e0:	ldrd	r4, [sp]
  e4:	add	sp, sp, #12
  e8:	pop	{pc}		; (ldr pc, [sp], #4)
  ec:	movw	r1, #0
  f0:	movt	r1, #0
  f4:	movw	r0, #0
  f8:	movt	r0, #0
  fc:	bl	0 <fopen>
 100:	str	r0, [r4, #8]
 104:	b	98 <init_bat+0x98>
 108:	movw	r1, #0
 10c:	movt	r1, #0
 110:	movw	r0, #0
 114:	movt	r0, #0
 118:	bl	0 <fopen>
 11c:	str	r0, [r4, #4]
 120:	b	78 <init_bat+0x78>

00000124 <close_bat>:
 124:	str	r4, [sp, #-8]!
 128:	mov	r4, r0
 12c:	ldr	r0, [r0]
 130:	str	lr, [sp, #4]
 134:	cmp	r0, #0
 138:	beq	140 <close_bat+0x1c>
 13c:	bl	0 <fclose>
 140:	ldr	r0, [r4, #4]
 144:	cmp	r0, #0
 148:	beq	150 <close_bat+0x2c>
 14c:	bl	0 <fclose>
 150:	ldr	r0, [r4, #8]
 154:	cmp	r0, #0
 158:	beq	16c <close_bat+0x48>
 15c:	ldr	r4, [sp]
 160:	ldr	lr, [sp, #4]
 164:	add	sp, sp, #8
 168:	b	0 <fclose>
 16c:	ldr	r4, [sp]
 170:	add	sp, sp, #4
 174:	pop	{pc}		; (ldr pc, [sp], #4)

00000178 <bat>:
 178:	strd	r4, [sp, #-36]!	; 0xffffffdc
 17c:	strd	r6, [sp, #8]
 180:	strd	r8, [sp, #16]
 184:	strd	sl, [sp, #24]
 188:	mov	sl, r0
 18c:	mov	fp, r2
 190:	str	lr, [sp, #32]
 194:	sub	sp, sp, #20
 198:	ldr	r0, [r0]
 19c:	str	r1, [sp, #12]
 1a0:	bl	0 <read_int>
 1a4:	mov	r8, r0
 1a8:	ldr	r0, [sl, #4]
 1ac:	mov	r9, r1
 1b0:	bl	0 <read_int>
 1b4:	mov	r4, r0
 1b8:	ldr	r0, [sl, #8]
 1bc:	mov	r5, r1
 1c0:	bl	0 <read_int>
 1c4:	adds	ip, r4, r4
 1c8:	mov	r7, r1
 1cc:	ldrd	r2, [sl, #16]
 1d0:	adc	r1, r5, r5
 1d4:	adds	ip, ip, r4
 1d8:	adc	r1, r1, r5
 1dc:	mov	r6, r0
 1e0:	lsl	r0, ip, #5
 1e4:	lsl	lr, r1, #5
 1e8:	adds	r0, ip, r0
 1ec:	orr	lr, lr, ip, lsr #27
 1f0:	adc	r1, r1, lr
 1f4:	adds	r0, r0, r4
 1f8:	adc	r1, r1, r5
 1fc:	bl	0 <__aeabi_uldivmod>
 200:	orrs	r3, r8, r9
 204:	mov	sl, r0
 208:	bne	2d4 <bat+0x15c>
 20c:	orrs	r3, r6, r7
 210:	bne	248 <bat+0xd0>
 214:	mov	r3, r0
 218:	ldr	r0, [sp, #12]
 21c:	movw	r2, #0
 220:	movt	r2, #0
 224:	mov	r1, fp
 228:	add	sp, sp, #20
 22c:	ldrd	r4, [sp]
 230:	ldrd	r6, [sp, #8]
 234:	ldrd	r8, [sp, #16]
 238:	ldrd	sl, [sp, #24]
 23c:	ldr	lr, [sp, #32]
 240:	add	sp, sp, #36	; 0x24
 244:	b	0 <snprintf>
 248:	lsl	r1, r5, #4
 24c:	mov	r2, r6
 250:	mov	r3, r7
 254:	lsl	r0, r4, #4
 258:	orr	r1, r1, r4, lsr #28
 25c:	subs	r0, r0, r4
 260:	sbc	r1, r1, r5
 264:	lsl	ip, r0, #2
 268:	lsl	r1, r1, #2
 26c:	orr	r1, r1, r0, lsr #30
 270:	mov	r0, ip
 274:	bl	0 <__aeabi_uldivmod>
 278:	mov	r2, #60	; 0x3c
 27c:	mov	r3, #0
 280:	bl	0 <__aeabi_uldivmod>
 284:	mov	r3, r7
 288:	mov	r0, r4
 28c:	str	r2, [sp, #4]
 290:	mov	r1, r5
 294:	mov	r2, r6
 298:	bl	0 <__aeabi_uldivmod>
 29c:	mov	r3, sl
 2a0:	mov	r1, fp
 2a4:	str	r0, [sp]
 2a8:	movw	r2, #0
 2ac:	movt	r2, #0
 2b0:	ldr	r0, [sp, #12]
 2b4:	bl	0 <snprintf>
 2b8:	add	sp, sp, #20
 2bc:	ldrd	r4, [sp]
 2c0:	ldrd	r6, [sp, #8]
 2c4:	ldrd	r8, [sp, #16]
 2c8:	ldrd	sl, [sp, #24]
 2cc:	add	sp, sp, #32
 2d0:	pop	{pc}		; (ldr pc, [sp], #4)
 2d4:	mov	r3, r0
 2d8:	movw	r2, #0
 2dc:	movt	r2, #0
 2e0:	mov	r1, fp
 2e4:	ldr	r0, [sp, #12]
 2e8:	b	228 <bat+0xb0>
