
../compcert-repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10d68 <_start@@Base+0x3c>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <strcmp@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <strcmp@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <strcmp@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <printf@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fopen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <free@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <fgets@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <strcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <puts@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <malloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <__libc_start_main@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <__gmon_start__@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <strlen@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <putchar@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fclose@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <strtok@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

Disassembly of section .text:

00010d2c <_start@@Base>:
   10d2c:	mov	fp, #0
   10d30:	mov	lr, #0
   10d34:	pop	{r1}		; (ldr r1, [sp], #4)
   10d38:	mov	r2, sp
   10d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d40:	push	{r0}		; (str r0, [sp, #-4]!)
   10d44:	ldr	ip, [pc, #16]	; 10d5c <_start@@Base+0x30>
   10d48:	push	{ip}		; (str ip, [sp, #-4]!)
   10d4c:	ldr	r0, [pc, #12]	; 10d60 <_start@@Base+0x34>
   10d50:	ldr	r3, [pc, #12]	; 10d64 <_start@@Base+0x38>
   10d54:	bl	10cd8 <__libc_start_main@plt>
   10d58:	bl	10d20 <abort@plt>
   10d5c:	strdeq	r2, [r1], -r0
   10d60:	andeq	r0, r1, r4, asr lr
   10d64:	muleq	r1, r0, r6
   10d68:	ldr	r3, [pc, #20]	; 10d84 <_start@@Base+0x58>
   10d6c:	ldr	r2, [pc, #20]	; 10d88 <_start@@Base+0x5c>
   10d70:	add	r3, pc, r3
   10d74:	ldr	r2, [r3, r2]
   10d78:	cmp	r2, #0
   10d7c:	bxeq	lr
   10d80:	b	10ce4 <__gmon_start__@plt>
   10d84:	andeq	r2, r1, r8, lsl #5
   10d88:	andeq	r0, r0, ip, asr #32
   10d8c:	ldr	r3, [pc, #28]	; 10db0 <_start@@Base+0x84>
   10d90:	ldr	r0, [pc, #28]	; 10db4 <_start@@Base+0x88>
   10d94:	sub	r3, r3, r0
   10d98:	cmp	r3, #6
   10d9c:	bxls	lr
   10da0:	ldr	r3, [pc, #16]	; 10db8 <_start@@Base+0x8c>
   10da4:	cmp	r3, #0
   10da8:	bxeq	lr
   10dac:	bx	r3
   10db0:	andeq	r3, r2, fp, asr r0
   10db4:	andeq	r3, r2, r8, asr r0
   10db8:	andeq	r0, r0, r0
   10dbc:	ldr	r1, [pc, #36]	; 10de8 <_start@@Base+0xbc>
   10dc0:	ldr	r0, [pc, #36]	; 10dec <_start@@Base+0xc0>
   10dc4:	sub	r1, r1, r0
   10dc8:	asr	r1, r1, #2
   10dcc:	add	r1, r1, r1, lsr #31
   10dd0:	asrs	r1, r1, #1
   10dd4:	bxeq	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <_start@@Base+0xc4>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r3, r2, r8, asr r0
   10dec:	andeq	r3, r2, r8, asr r0
   10df0:	andeq	r0, r0, r0
   10df4:	push	{r4, lr}
   10df8:	ldr	r4, [pc, #24]	; 10e18 <_start@@Base+0xec>
   10dfc:	ldrb	r3, [r4]
   10e00:	cmp	r3, #0
   10e04:	popne	{r4, pc}
   10e08:	bl	10d8c <_start@@Base+0x60>
   10e0c:	mov	r3, #1
   10e10:	strb	r3, [r4]
   10e14:	pop	{r4, pc}
   10e18:	andeq	r3, r2, r8, asr r0
   10e1c:	ldr	r0, [pc, #40]	; 10e4c <_start@@Base+0x120>
   10e20:	ldr	r3, [r0]
   10e24:	cmp	r3, #0
   10e28:	bne	10e30 <_start@@Base+0x104>
   10e2c:	b	10dbc <_start@@Base+0x90>
   10e30:	ldr	r3, [pc, #24]	; 10e50 <_start@@Base+0x124>
   10e34:	cmp	r3, #0
   10e38:	beq	10e2c <_start@@Base+0x100>
   10e3c:	push	{r4, lr}
   10e40:	blx	r3
   10e44:	pop	{r4, lr}
   10e48:	b	10dbc <_start@@Base+0x90>
   10e4c:	andeq	r2, r2, r4, lsl pc
   10e50:	andeq	r0, r0, r0

00010e54 <main@@Base>:
   10e54:	push	{fp, lr}
   10e58:	add	fp, sp, #4
   10e5c:	sub	sp, sp, #160	; 0xa0
   10e60:	ldr	r0, [pc, #532]	; 1107c <main@@Base+0x228>
   10e64:	bl	10cc0 <puts@plt>
   10e68:	ldr	r3, [pc, #528]	; 11080 <main@@Base+0x22c>
   10e6c:	sub	ip, fp, #64	; 0x40
   10e70:	mov	lr, r3
   10e74:	ldm	lr!, {r0, r1, r2, r3}
   10e78:	stmia	ip!, {r0, r1, r2, r3}
   10e7c:	ldm	lr!, {r0, r1, r2, r3}
   10e80:	stmia	ip!, {r0, r1, r2, r3}
   10e84:	ldm	lr, {r0, r1}
   10e88:	stm	ip, {r0, r1}
   10e8c:	bl	11dcc <bst_nova@@Base>
   10e90:	str	r0, [fp, #-12]
   10e94:	mov	r3, #0
   10e98:	str	r3, [fp, #-8]
   10e9c:	b	10ecc <main@@Base+0x78>
   10ea0:	ldr	r3, [fp, #-8]
   10ea4:	lsl	r3, r3, #2
   10ea8:	sub	r2, fp, #4
   10eac:	add	r3, r2, r3
   10eb0:	ldr	r3, [r3, #-60]	; 0xffffffc4
   10eb4:	mov	r1, r3
   10eb8:	ldr	r0, [fp, #-12]
   10ebc:	bl	11ed4 <bst_insere@@Base>
   10ec0:	ldr	r3, [fp, #-8]
   10ec4:	add	r3, r3, #1
   10ec8:	str	r3, [fp, #-8]
   10ecc:	ldr	r3, [fp, #-8]
   10ed0:	cmp	r3, #9
   10ed4:	ble	10ea0 <main@@Base+0x4c>
   10ed8:	ldr	r3, [fp, #-12]
   10edc:	ldr	r3, [r3]
   10ee0:	mov	r0, r3
   10ee4:	bl	12554 <bst_altura@@Base>
   10ee8:	mov	r3, r0
   10eec:	mov	r1, r3
   10ef0:	ldr	r0, [pc, #396]	; 11084 <main@@Base+0x230>
   10ef4:	bl	10c78 <printf@plt>
   10ef8:	ldr	r0, [fp, #-12]
   10efc:	bl	1202c <bst_imprime@@Base>
   10f00:	ldr	r0, [pc, #384]	; 11088 <main@@Base+0x234>
   10f04:	bl	10cc0 <puts@plt>
   10f08:	bl	110a8 <avl_nova@@Base>
   10f0c:	str	r0, [fp, #-16]
   10f10:	ldr	r1, [pc, #372]	; 1108c <main@@Base+0x238>
   10f14:	ldr	r0, [pc, #372]	; 11090 <main@@Base+0x23c>
   10f18:	bl	10c84 <fopen@plt>
   10f1c:	str	r0, [fp, #-20]	; 0xffffffec
   10f20:	b	10f9c <main@@Base+0x148>
   10f24:	sub	r3, fp, #164	; 0xa4
   10f28:	ldr	r1, [pc, #356]	; 11094 <main@@Base+0x240>
   10f2c:	mov	r0, r3
   10f30:	bl	10d14 <strtok@plt>
   10f34:	mov	r2, r0
   10f38:	sub	r3, fp, #164	; 0xa4
   10f3c:	mov	r1, r2
   10f40:	mov	r0, r3
   10f44:	bl	10cb4 <strcpy@plt>
   10f48:	ldr	r1, [pc, #324]	; 11094 <main@@Base+0x240>
   10f4c:	mov	r0, #0
   10f50:	bl	10d14 <strtok@plt>
   10f54:	mov	r2, r0
   10f58:	sub	r3, fp, #164	; 0xa4
   10f5c:	mov	r1, r2
   10f60:	mov	r0, r3
   10f64:	bl	10cb4 <strcpy@plt>
   10f68:	sub	r3, fp, #164	; 0xa4
   10f6c:	mov	r0, r3
   10f70:	bl	10cf0 <strlen@plt>
   10f74:	mov	r3, r0
   10f78:	sub	r3, r3, #1
   10f7c:	sub	r2, fp, #4
   10f80:	add	r3, r2, r3
   10f84:	mov	r2, #0
   10f88:	strb	r2, [r3, #-160]	; 0xffffff60
   10f8c:	sub	r3, fp, #164	; 0xa4
   10f90:	mov	r1, r3
   10f94:	ldr	r0, [fp, #-16]
   10f98:	bl	111c0 <avl_insere@@Base>
   10f9c:	sub	r3, fp, #164	; 0xa4
   10fa0:	ldr	r2, [fp, #-20]	; 0xffffffec
   10fa4:	mov	r1, #100	; 0x64
   10fa8:	mov	r0, r3
   10fac:	bl	10c9c <fgets@plt>
   10fb0:	mov	r3, r0
   10fb4:	cmp	r3, #0
   10fb8:	bne	10f24 <main@@Base+0xd0>
   10fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fc0:	bl	10d08 <fclose@plt>
   10fc4:	ldr	r1, [pc, #204]	; 11098 <main@@Base+0x244>
   10fc8:	ldr	r0, [fp, #-16]
   10fcc:	bl	11168 <avl_pesquisa@@Base>
   10fd0:	str	r0, [fp, #-24]	; 0xffffffe8
   10fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fd8:	cmp	r3, #0
   10fdc:	beq	10ffc <main@@Base+0x1a8>
   10fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fe4:	ldr	r1, [r3]
   10fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fec:	ldr	r3, [r3, #16]
   10ff0:	mov	r2, r3
   10ff4:	ldr	r0, [pc, #160]	; 1109c <main@@Base+0x248>
   10ff8:	bl	10c78 <printf@plt>
   10ffc:	ldr	r1, [pc, #156]	; 110a0 <main@@Base+0x24c>
   11000:	ldr	r0, [fp, #-16]
   11004:	bl	11168 <avl_pesquisa@@Base>
   11008:	str	r0, [fp, #-24]	; 0xffffffe8
   1100c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11010:	cmp	r3, #0
   11014:	beq	11034 <main@@Base+0x1e0>
   11018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1101c:	ldr	r1, [r3]
   11020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11024:	ldr	r3, [r3, #16]
   11028:	mov	r2, r3
   1102c:	ldr	r0, [pc, #104]	; 1109c <main@@Base+0x248>
   11030:	bl	10c78 <printf@plt>
   11034:	ldr	r1, [pc, #104]	; 110a4 <main@@Base+0x250>
   11038:	ldr	r0, [fp, #-16]
   1103c:	bl	11168 <avl_pesquisa@@Base>
   11040:	str	r0, [fp, #-24]	; 0xffffffe8
   11044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11048:	cmp	r3, #0
   1104c:	beq	1106c <main@@Base+0x218>
   11050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11054:	ldr	r1, [r3]
   11058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1105c:	ldr	r3, [r3, #16]
   11060:	mov	r2, r3
   11064:	ldr	r0, [pc, #48]	; 1109c <main@@Base+0x248>
   11068:	bl	10c78 <printf@plt>
   1106c:	mov	r3, #0
   11070:	mov	r0, r3
   11074:	sub	sp, fp, #4
   11078:	pop	{fp, pc}
   1107c:	andeq	r2, r1, r0, lsl #14
   11080:	andeq	r2, r1, r0, lsl #15
   11084:	andeq	r2, r1, r4, lsl #14
   11088:	andeq	r2, r1, r8, lsl r7
   1108c:	andeq	r2, r1, ip, lsl r7
   11090:	andeq	r2, r1, r0, lsr #14
   11094:	andeq	r2, r1, ip, lsr #14
   11098:	andeq	r2, r1, r0, lsr r7
   1109c:	andeq	r2, r1, ip, lsr r7
   110a0:	andeq	r2, r1, r8, asr #14
   110a4:	andeq	r2, r1, r0, asr r7

000110a8 <avl_nova@@Base>:
   110a8:	push	{fp, lr}
   110ac:	add	fp, sp, #4
   110b0:	sub	sp, sp, #8
   110b4:	mov	r0, #4
   110b8:	bl	10ccc <malloc@plt>
   110bc:	mov	r3, r0
   110c0:	str	r3, [fp, #-8]
   110c4:	ldr	r3, [fp, #-8]
   110c8:	cmp	r3, #0
   110cc:	bne	110d8 <avl_nova@@Base+0x30>
   110d0:	mov	r3, #0
   110d4:	b	110e8 <avl_nova@@Base+0x40>
   110d8:	ldr	r3, [fp, #-8]
   110dc:	mov	r2, #0
   110e0:	str	r2, [r3]
   110e4:	ldr	r3, [fp, #-8]
   110e8:	mov	r0, r3
   110ec:	sub	sp, fp, #4
   110f0:	pop	{fp, pc}

000110f4 <avl_apaga@@Base>:
   110f4:	push	{fp, lr}
   110f8:	add	fp, sp, #4
   110fc:	sub	sp, sp, #8
   11100:	str	r0, [fp, #-8]
   11104:	ldr	r3, [fp, #-8]
   11108:	cmp	r3, #0
   1110c:	beq	1115c <avl_apaga@@Base+0x68>
   11110:	b	11140 <avl_apaga@@Base+0x4c>
   11114:	ldr	r3, [fp, #-8]
   11118:	ldr	r2, [r3]
   1111c:	ldr	r3, [fp, #-8]
   11120:	ldr	r3, [r3]
   11124:	ldr	r3, [r3]
   11128:	mov	r1, r3
   1112c:	mov	r0, r2
   11130:	bl	119dc <avl_remove_impl@@Base>
   11134:	mov	r2, r0
   11138:	ldr	r3, [fp, #-8]
   1113c:	str	r2, [r3]
   11140:	ldr	r3, [fp, #-8]
   11144:	ldr	r3, [r3]
   11148:	cmp	r3, #0
   1114c:	bne	11114 <avl_apaga@@Base+0x20>
   11150:	ldr	r0, [fp, #-8]
   11154:	bl	10c90 <free@plt>
   11158:	b	11160 <avl_apaga@@Base+0x6c>
   1115c:	nop			; (mov r0, r0)
   11160:	sub	sp, fp, #4
   11164:	pop	{fp, pc}

00011168 <avl_pesquisa@@Base>:
   11168:	push	{fp, lr}
   1116c:	add	fp, sp, #4
   11170:	sub	sp, sp, #8
   11174:	str	r0, [fp, #-8]
   11178:	str	r1, [fp, #-12]
   1117c:	ldr	r3, [fp, #-8]
   11180:	cmp	r3, #0
   11184:	beq	11194 <avl_pesquisa@@Base+0x2c>
   11188:	ldr	r3, [fp, #-12]
   1118c:	cmp	r3, #0
   11190:	bne	1119c <avl_pesquisa@@Base+0x34>
   11194:	mov	r3, #0
   11198:	b	111b4 <avl_pesquisa@@Base+0x4c>
   1119c:	ldr	r3, [fp, #-8]
   111a0:	ldr	r3, [r3]
   111a4:	ldr	r1, [fp, #-12]
   111a8:	mov	r0, r3
   111ac:	bl	11678 <avl_pesquisa_impl@@Base>
   111b0:	mov	r3, r0
   111b4:	mov	r0, r3
   111b8:	sub	sp, fp, #4
   111bc:	pop	{fp, pc}

000111c0 <avl_insere@@Base>:
   111c0:	push	{fp, lr}
   111c4:	add	fp, sp, #4
   111c8:	sub	sp, sp, #8
   111cc:	str	r0, [fp, #-8]
   111d0:	str	r1, [fp, #-12]
   111d4:	ldr	r3, [fp, #-8]
   111d8:	cmp	r3, #0
   111dc:	beq	111ec <avl_insere@@Base+0x2c>
   111e0:	ldr	r3, [fp, #-12]
   111e4:	cmp	r3, #0
   111e8:	bne	111f4 <avl_insere@@Base+0x34>
   111ec:	mvn	r3, #0
   111f0:	b	11218 <avl_insere@@Base+0x58>
   111f4:	ldr	r3, [fp, #-8]
   111f8:	ldr	r3, [r3]
   111fc:	ldr	r1, [fp, #-12]
   11200:	mov	r0, r3
   11204:	bl	11728 <avl_insere_impl@@Base>
   11208:	mov	r2, r0
   1120c:	ldr	r3, [fp, #-8]
   11210:	str	r2, [r3]
   11214:	mov	r3, #0
   11218:	mov	r0, r3
   1121c:	sub	sp, fp, #4
   11220:	pop	{fp, pc}

00011224 <avl_remove@@Base>:
   11224:	push	{fp, lr}
   11228:	add	fp, sp, #4
   1122c:	sub	sp, sp, #8
   11230:	str	r0, [fp, #-8]
   11234:	str	r1, [fp, #-12]
   11238:	ldr	r3, [fp, #-8]
   1123c:	cmp	r3, #0
   11240:	beq	11250 <avl_remove@@Base+0x2c>
   11244:	ldr	r3, [fp, #-12]
   11248:	cmp	r3, #0
   1124c:	bne	11258 <avl_remove@@Base+0x34>
   11250:	mvn	r3, #0
   11254:	b	1127c <avl_remove@@Base+0x58>
   11258:	ldr	r3, [fp, #-8]
   1125c:	ldr	r3, [r3]
   11260:	ldr	r1, [fp, #-12]
   11264:	mov	r0, r3
   11268:	bl	119dc <avl_remove_impl@@Base>
   1126c:	mov	r2, r0
   11270:	ldr	r3, [fp, #-8]
   11274:	str	r2, [r3]
   11278:	mov	r3, #0
   1127c:	mov	r0, r3
   11280:	sub	sp, fp, #4
   11284:	pop	{fp, pc}

00011288 <avl_min@@Base>:
   11288:	push	{fp, lr}
   1128c:	add	fp, sp, #4
   11290:	sub	sp, sp, #8
   11294:	str	r0, [fp, #-8]
   11298:	ldr	r3, [fp, #-8]
   1129c:	cmp	r3, #0
   112a0:	bne	112ac <avl_min@@Base+0x24>
   112a4:	mov	r3, #0
   112a8:	b	112c4 <avl_min@@Base+0x3c>
   112ac:	ldr	r3, [fp, #-8]
   112b0:	ldr	r3, [r3]
   112b4:	mov	r0, r3
   112b8:	bl	11944 <avl_no_valormin@@Base>
   112bc:	mov	r3, r0
   112c0:	ldr	r3, [r3]
   112c4:	mov	r0, r3
   112c8:	sub	sp, fp, #4
   112cc:	pop	{fp, pc}

000112d0 <avl_max@@Base>:
   112d0:	push	{fp, lr}
   112d4:	add	fp, sp, #4
   112d8:	sub	sp, sp, #8
   112dc:	str	r0, [fp, #-8]
   112e0:	ldr	r3, [fp, #-8]
   112e4:	cmp	r3, #0
   112e8:	bne	112f4 <avl_max@@Base+0x24>
   112ec:	mov	r3, #0
   112f0:	b	1130c <avl_max@@Base+0x3c>
   112f4:	ldr	r3, [fp, #-8]
   112f8:	ldr	r3, [r3]
   112fc:	mov	r0, r3
   11300:	bl	11990 <avl_no_valormax@@Base>
   11304:	mov	r3, r0
   11308:	ldr	r3, [r3]
   1130c:	mov	r0, r3
   11310:	sub	sp, fp, #4
   11314:	pop	{fp, pc}

00011318 <avl_imprime@@Base>:
   11318:	push	{fp, lr}
   1131c:	add	fp, sp, #4
   11320:	sub	sp, sp, #8
   11324:	str	r0, [fp, #-8]
   11328:	ldr	r3, [fp, #-8]
   1132c:	cmp	r3, #0
   11330:	beq	11350 <avl_imprime@@Base+0x38>
   11334:	ldr	r3, [fp, #-8]
   11338:	ldr	r3, [r3]
   1133c:	mov	r0, r3
   11340:	bl	11d60 <avl_preordem_impl@@Base>
   11344:	mov	r0, #10
   11348:	bl	10cfc <putchar@plt>
   1134c:	b	11354 <avl_imprime@@Base+0x3c>
   11350:	nop			; (mov r0, r0)
   11354:	sub	sp, fp, #4
   11358:	pop	{fp, pc}

0001135c <avl_altura@@Base>:
   1135c:	push	{fp}		; (str fp, [sp, #-4]!)
   11360:	add	fp, sp, #0
   11364:	sub	sp, sp, #12
   11368:	str	r0, [fp, #-8]
   1136c:	ldr	r3, [fp, #-8]
   11370:	cmp	r3, #0
   11374:	bne	11380 <avl_altura@@Base+0x24>
   11378:	mvn	r3, #0
   1137c:	b	11388 <avl_altura@@Base+0x2c>
   11380:	ldr	r3, [fp, #-8]
   11384:	ldr	r3, [r3, #12]
   11388:	mov	r0, r3
   1138c:	add	sp, fp, #0
   11390:	pop	{fp}		; (ldr fp, [sp], #4)
   11394:	bx	lr

00011398 <max@@Base>:
   11398:	push	{fp}		; (str fp, [sp, #-4]!)
   1139c:	add	fp, sp, #0
   113a0:	sub	sp, sp, #12
   113a4:	str	r0, [fp, #-8]
   113a8:	str	r1, [fp, #-12]
   113ac:	ldr	r2, [fp, #-12]
   113b0:	ldr	r3, [fp, #-8]
   113b4:	cmp	r2, r3
   113b8:	movge	r3, r2
   113bc:	movlt	r3, r3
   113c0:	mov	r0, r3
   113c4:	add	sp, fp, #0
   113c8:	pop	{fp}		; (ldr fp, [sp], #4)
   113cc:	bx	lr

000113d0 <avl_novo_no@@Base>:
   113d0:	push	{fp, lr}
   113d4:	add	fp, sp, #4
   113d8:	sub	sp, sp, #16
   113dc:	str	r0, [fp, #-16]
   113e0:	mov	r0, #20
   113e4:	bl	10ccc <malloc@plt>
   113e8:	mov	r3, r0
   113ec:	str	r3, [fp, #-8]
   113f0:	ldr	r0, [fp, #-16]
   113f4:	bl	10cf0 <strlen@plt>
   113f8:	mov	r3, r0
   113fc:	add	r3, r3, #1
   11400:	mov	r0, r3
   11404:	bl	10ccc <malloc@plt>
   11408:	mov	r3, r0
   1140c:	mov	r2, r3
   11410:	ldr	r3, [fp, #-8]
   11414:	str	r2, [r3]
   11418:	ldr	r3, [fp, #-8]
   1141c:	ldr	r3, [r3]
   11420:	ldr	r1, [fp, #-16]
   11424:	mov	r0, r3
   11428:	bl	10cb4 <strcpy@plt>
   1142c:	ldr	r3, [fp, #-8]
   11430:	mov	r2, #0
   11434:	str	r2, [r3, #4]
   11438:	ldr	r3, [fp, #-8]
   1143c:	mov	r2, #0
   11440:	str	r2, [r3, #8]
   11444:	ldr	r3, [fp, #-8]
   11448:	mov	r2, #0
   1144c:	str	r2, [r3, #12]
   11450:	ldr	r3, [fp, #-8]
   11454:	mov	r2, #1
   11458:	str	r2, [r3, #16]
   1145c:	ldr	r3, [fp, #-8]
   11460:	mov	r0, r3
   11464:	sub	sp, fp, #4
   11468:	pop	{fp, pc}

0001146c <roda_direita@@Base>:
   1146c:	push	{r4, fp, lr}
   11470:	add	fp, sp, #8
   11474:	sub	sp, sp, #20
   11478:	str	r0, [fp, #-24]	; 0xffffffe8
   1147c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11480:	ldr	r3, [r3, #4]
   11484:	str	r3, [fp, #-16]
   11488:	ldr	r3, [fp, #-16]
   1148c:	ldr	r3, [r3, #8]
   11490:	str	r3, [fp, #-20]	; 0xffffffec
   11494:	ldr	r3, [fp, #-16]
   11498:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1149c:	str	r2, [r3, #8]
   114a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   114a8:	str	r2, [r3, #4]
   114ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b0:	ldr	r3, [r3, #4]
   114b4:	mov	r0, r3
   114b8:	bl	1135c <avl_altura@@Base>
   114bc:	mov	r4, r0
   114c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114c4:	ldr	r3, [r3, #8]
   114c8:	mov	r0, r3
   114cc:	bl	1135c <avl_altura@@Base>
   114d0:	mov	r3, r0
   114d4:	mov	r1, r3
   114d8:	mov	r0, r4
   114dc:	bl	11398 <max@@Base>
   114e0:	mov	r3, r0
   114e4:	add	r2, r3, #1
   114e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114ec:	str	r2, [r3, #12]
   114f0:	ldr	r3, [fp, #-16]
   114f4:	ldr	r3, [r3, #4]
   114f8:	mov	r0, r3
   114fc:	bl	1135c <avl_altura@@Base>
   11500:	mov	r4, r0
   11504:	ldr	r3, [fp, #-16]
   11508:	ldr	r3, [r3, #8]
   1150c:	mov	r0, r3
   11510:	bl	1135c <avl_altura@@Base>
   11514:	mov	r3, r0
   11518:	mov	r1, r3
   1151c:	mov	r0, r4
   11520:	bl	11398 <max@@Base>
   11524:	mov	r3, r0
   11528:	add	r2, r3, #1
   1152c:	ldr	r3, [fp, #-16]
   11530:	str	r2, [r3, #12]
   11534:	ldr	r3, [fp, #-16]
   11538:	mov	r0, r3
   1153c:	sub	sp, fp, #8
   11540:	pop	{r4, fp, pc}

00011544 <roda_esquerda@@Base>:
   11544:	push	{r4, fp, lr}
   11548:	add	fp, sp, #8
   1154c:	sub	sp, sp, #20
   11550:	str	r0, [fp, #-24]	; 0xffffffe8
   11554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11558:	ldr	r3, [r3, #8]
   1155c:	str	r3, [fp, #-16]
   11560:	ldr	r3, [fp, #-16]
   11564:	ldr	r3, [r3, #4]
   11568:	str	r3, [fp, #-20]	; 0xffffffec
   1156c:	ldr	r3, [fp, #-16]
   11570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11574:	str	r2, [r3, #4]
   11578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1157c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11580:	str	r2, [r3, #8]
   11584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11588:	ldr	r3, [r3, #4]
   1158c:	mov	r0, r3
   11590:	bl	1135c <avl_altura@@Base>
   11594:	mov	r4, r0
   11598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1159c:	ldr	r3, [r3, #8]
   115a0:	mov	r0, r3
   115a4:	bl	1135c <avl_altura@@Base>
   115a8:	mov	r3, r0
   115ac:	mov	r1, r3
   115b0:	mov	r0, r4
   115b4:	bl	11398 <max@@Base>
   115b8:	mov	r3, r0
   115bc:	add	r2, r3, #1
   115c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115c4:	str	r2, [r3, #12]
   115c8:	ldr	r3, [fp, #-16]
   115cc:	ldr	r3, [r3, #4]
   115d0:	mov	r0, r3
   115d4:	bl	1135c <avl_altura@@Base>
   115d8:	mov	r4, r0
   115dc:	ldr	r3, [fp, #-16]
   115e0:	ldr	r3, [r3, #8]
   115e4:	mov	r0, r3
   115e8:	bl	1135c <avl_altura@@Base>
   115ec:	mov	r3, r0
   115f0:	mov	r1, r3
   115f4:	mov	r0, r4
   115f8:	bl	11398 <max@@Base>
   115fc:	mov	r3, r0
   11600:	add	r2, r3, #1
   11604:	ldr	r3, [fp, #-16]
   11608:	str	r2, [r3, #12]
   1160c:	ldr	r3, [fp, #-16]
   11610:	mov	r0, r3
   11614:	sub	sp, fp, #8
   11618:	pop	{r4, fp, pc}

0001161c <calc_balanceamento@@Base>:
   1161c:	push	{r4, fp, lr}
   11620:	add	fp, sp, #8
   11624:	sub	sp, sp, #12
   11628:	str	r0, [fp, #-16]
   1162c:	ldr	r3, [fp, #-16]
   11630:	cmp	r3, #0
   11634:	bne	11640 <calc_balanceamento@@Base+0x24>
   11638:	mov	r3, #0
   1163c:	b	1166c <calc_balanceamento@@Base+0x50>
   11640:	ldr	r3, [fp, #-16]
   11644:	ldr	r3, [r3, #8]
   11648:	mov	r0, r3
   1164c:	bl	1135c <avl_altura@@Base>
   11650:	mov	r4, r0
   11654:	ldr	r3, [fp, #-16]
   11658:	ldr	r3, [r3, #4]
   1165c:	mov	r0, r3
   11660:	bl	1135c <avl_altura@@Base>
   11664:	mov	r3, r0
   11668:	sub	r3, r4, r3
   1166c:	mov	r0, r3
   11670:	sub	sp, fp, #8
   11674:	pop	{r4, fp, pc}

00011678 <avl_pesquisa_impl@@Base>:
   11678:	push	{fp, lr}
   1167c:	add	fp, sp, #4
   11680:	sub	sp, sp, #8
   11684:	str	r0, [fp, #-8]
   11688:	str	r1, [fp, #-12]
   1168c:	ldr	r3, [fp, #-8]
   11690:	cmp	r3, #0
   11694:	bne	116a0 <avl_pesquisa_impl@@Base+0x28>
   11698:	mov	r3, #0
   1169c:	b	1171c <avl_pesquisa_impl@@Base+0xa4>
   116a0:	ldr	r3, [fp, #-8]
   116a4:	ldr	r3, [r3]
   116a8:	mov	r1, r3
   116ac:	ldr	r0, [fp, #-12]
   116b0:	bl	10c6c <strcmp@plt>
   116b4:	mov	r3, r0
   116b8:	cmp	r3, #0
   116bc:	bge	116dc <avl_pesquisa_impl@@Base+0x64>
   116c0:	ldr	r3, [fp, #-8]
   116c4:	ldr	r3, [r3, #4]
   116c8:	ldr	r1, [fp, #-12]
   116cc:	mov	r0, r3
   116d0:	bl	11678 <avl_pesquisa_impl@@Base>
   116d4:	mov	r3, r0
   116d8:	b	1171c <avl_pesquisa_impl@@Base+0xa4>
   116dc:	ldr	r3, [fp, #-8]
   116e0:	ldr	r3, [r3]
   116e4:	mov	r1, r3
   116e8:	ldr	r0, [fp, #-12]
   116ec:	bl	10c6c <strcmp@plt>
   116f0:	mov	r3, r0
   116f4:	cmp	r3, #0
   116f8:	ble	11718 <avl_pesquisa_impl@@Base+0xa0>
   116fc:	ldr	r3, [fp, #-8]
   11700:	ldr	r3, [r3, #8]
   11704:	ldr	r1, [fp, #-12]
   11708:	mov	r0, r3
   1170c:	bl	11678 <avl_pesquisa_impl@@Base>
   11710:	mov	r3, r0
   11714:	b	1171c <avl_pesquisa_impl@@Base+0xa4>
   11718:	ldr	r3, [fp, #-8]
   1171c:	mov	r0, r3
   11720:	sub	sp, fp, #4
   11724:	pop	{fp, pc}

00011728 <avl_insere_impl@@Base>:
   11728:	push	{r4, fp, lr}
   1172c:	add	fp, sp, #8
   11730:	sub	sp, sp, #20
   11734:	str	r0, [fp, #-24]	; 0xffffffe8
   11738:	str	r1, [fp, #-28]	; 0xffffffe4
   1173c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11740:	cmp	r3, #0
   11744:	bne	11758 <avl_insere_impl@@Base+0x30>
   11748:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1174c:	bl	113d0 <avl_novo_no@@Base>
   11750:	mov	r3, r0
   11754:	b	11938 <avl_insere_impl@@Base+0x210>
   11758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1175c:	ldr	r3, [r3]
   11760:	mov	r1, r3
   11764:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11768:	bl	10c6c <strcmp@plt>
   1176c:	mov	r3, r0
   11770:	cmp	r3, #0
   11774:	bge	1179c <avl_insere_impl@@Base+0x74>
   11778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1177c:	ldr	r3, [r3, #4]
   11780:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11784:	mov	r0, r3
   11788:	bl	11728 <avl_insere_impl@@Base>
   1178c:	mov	r2, r0
   11790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11794:	str	r2, [r3, #4]
   11798:	b	1181c <avl_insere_impl@@Base+0xf4>
   1179c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117a0:	ldr	r3, [r3]
   117a4:	mov	r1, r3
   117a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117ac:	bl	10c6c <strcmp@plt>
   117b0:	mov	r3, r0
   117b4:	cmp	r3, #0
   117b8:	ble	117e0 <avl_insere_impl@@Base+0xb8>
   117bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117c0:	ldr	r3, [r3, #8]
   117c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   117c8:	mov	r0, r3
   117cc:	bl	11728 <avl_insere_impl@@Base>
   117d0:	mov	r2, r0
   117d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117d8:	str	r2, [r3, #8]
   117dc:	b	1181c <avl_insere_impl@@Base+0xf4>
   117e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117e4:	ldr	r3, [r3]
   117e8:	mov	r1, r3
   117ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117f0:	bl	10c6c <strcmp@plt>
   117f4:	mov	r3, r0
   117f8:	cmp	r3, #0
   117fc:	bne	1181c <avl_insere_impl@@Base+0xf4>
   11800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11804:	ldr	r3, [r3, #16]
   11808:	add	r2, r3, #1
   1180c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11810:	str	r2, [r3, #16]
   11814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11818:	b	11938 <avl_insere_impl@@Base+0x210>
   1181c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11820:	ldr	r3, [r3, #4]
   11824:	mov	r0, r3
   11828:	bl	1135c <avl_altura@@Base>
   1182c:	mov	r4, r0
   11830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11834:	ldr	r3, [r3, #8]
   11838:	mov	r0, r3
   1183c:	bl	1135c <avl_altura@@Base>
   11840:	mov	r3, r0
   11844:	mov	r1, r3
   11848:	mov	r0, r4
   1184c:	bl	11398 <max@@Base>
   11850:	mov	r3, r0
   11854:	add	r2, r3, #1
   11858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1185c:	str	r2, [r3, #12]
   11860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11864:	bl	1161c <calc_balanceamento@@Base>
   11868:	str	r0, [fp, #-16]
   1186c:	ldr	r3, [fp, #-16]
   11870:	cmp	r3, #1
   11874:	ble	118d0 <avl_insere_impl@@Base+0x1a8>
   11878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1187c:	ldr	r3, [r3, #8]
   11880:	mov	r0, r3
   11884:	bl	1161c <calc_balanceamento@@Base>
   11888:	mov	r3, r0
   1188c:	cmp	r3, #0
   11890:	bge	118c0 <avl_insere_impl@@Base+0x198>
   11894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11898:	ldr	r3, [r3, #8]
   1189c:	mov	r0, r3
   118a0:	bl	1146c <roda_direita@@Base>
   118a4:	mov	r2, r0
   118a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118ac:	str	r2, [r3, #8]
   118b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118b4:	bl	11544 <roda_esquerda@@Base>
   118b8:	mov	r3, r0
   118bc:	b	11938 <avl_insere_impl@@Base+0x210>
   118c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118c4:	bl	11544 <roda_esquerda@@Base>
   118c8:	mov	r3, r0
   118cc:	b	11938 <avl_insere_impl@@Base+0x210>
   118d0:	ldr	r3, [fp, #-16]
   118d4:	cmn	r3, #1
   118d8:	bge	11934 <avl_insere_impl@@Base+0x20c>
   118dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118e0:	ldr	r3, [r3, #4]
   118e4:	mov	r0, r3
   118e8:	bl	1161c <calc_balanceamento@@Base>
   118ec:	mov	r3, r0
   118f0:	cmp	r3, #0
   118f4:	ble	11924 <avl_insere_impl@@Base+0x1fc>
   118f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118fc:	ldr	r3, [r3, #4]
   11900:	mov	r0, r3
   11904:	bl	11544 <roda_esquerda@@Base>
   11908:	mov	r2, r0
   1190c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11910:	str	r2, [r3, #4]
   11914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11918:	bl	1146c <roda_direita@@Base>
   1191c:	mov	r3, r0
   11920:	b	11938 <avl_insere_impl@@Base+0x210>
   11924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11928:	bl	1146c <roda_direita@@Base>
   1192c:	mov	r3, r0
   11930:	b	11938 <avl_insere_impl@@Base+0x210>
   11934:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11938:	mov	r0, r3
   1193c:	sub	sp, fp, #8
   11940:	pop	{r4, fp, pc}

00011944 <avl_no_valormin@@Base>:
   11944:	push	{fp}		; (str fp, [sp, #-4]!)
   11948:	add	fp, sp, #0
   1194c:	sub	sp, sp, #20
   11950:	str	r0, [fp, #-16]
   11954:	ldr	r3, [fp, #-16]
   11958:	str	r3, [fp, #-8]
   1195c:	b	1196c <avl_no_valormin@@Base+0x28>
   11960:	ldr	r3, [fp, #-8]
   11964:	ldr	r3, [r3, #4]
   11968:	str	r3, [fp, #-8]
   1196c:	ldr	r3, [fp, #-8]
   11970:	ldr	r3, [r3, #4]
   11974:	cmp	r3, #0
   11978:	bne	11960 <avl_no_valormin@@Base+0x1c>
   1197c:	ldr	r3, [fp, #-8]
   11980:	mov	r0, r3
   11984:	add	sp, fp, #0
   11988:	pop	{fp}		; (ldr fp, [sp], #4)
   1198c:	bx	lr

00011990 <avl_no_valormax@@Base>:
   11990:	push	{fp}		; (str fp, [sp, #-4]!)
   11994:	add	fp, sp, #0
   11998:	sub	sp, sp, #20
   1199c:	str	r0, [fp, #-16]
   119a0:	ldr	r3, [fp, #-16]
   119a4:	str	r3, [fp, #-8]
   119a8:	b	119b8 <avl_no_valormax@@Base+0x28>
   119ac:	ldr	r3, [fp, #-8]
   119b0:	ldr	r3, [r3, #8]
   119b4:	str	r3, [fp, #-8]
   119b8:	ldr	r3, [fp, #-8]
   119bc:	ldr	r3, [r3, #8]
   119c0:	cmp	r3, #0
   119c4:	bne	119ac <avl_no_valormax@@Base+0x1c>
   119c8:	ldr	r3, [fp, #-8]
   119cc:	mov	r0, r3
   119d0:	add	sp, fp, #0
   119d4:	pop	{fp}		; (ldr fp, [sp], #4)
   119d8:	bx	lr

000119dc <avl_remove_impl@@Base>:
   119dc:	push	{r4, fp, lr}
   119e0:	add	fp, sp, #8
   119e4:	sub	sp, sp, #28
   119e8:	str	r0, [fp, #-32]	; 0xffffffe0
   119ec:	str	r1, [fp, #-36]	; 0xffffffdc
   119f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119f4:	cmp	r3, #0
   119f8:	bne	11a04 <avl_remove_impl@@Base+0x28>
   119fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a00:	b	11d54 <avl_remove_impl@@Base+0x378>
   11a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a08:	ldr	r3, [r3]
   11a0c:	mov	r1, r3
   11a10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a14:	bl	10c6c <strcmp@plt>
   11a18:	mov	r3, r0
   11a1c:	cmp	r3, #0
   11a20:	bge	11a48 <avl_remove_impl@@Base+0x6c>
   11a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a28:	ldr	r3, [r3, #4]
   11a2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11a30:	mov	r0, r3
   11a34:	bl	119dc <avl_remove_impl@@Base>
   11a38:	mov	r2, r0
   11a3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a40:	str	r2, [r3, #4]
   11a44:	b	11c24 <avl_remove_impl@@Base+0x248>
   11a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a4c:	ldr	r3, [r3]
   11a50:	mov	r1, r3
   11a54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a58:	bl	10c6c <strcmp@plt>
   11a5c:	mov	r3, r0
   11a60:	cmp	r3, #0
   11a64:	ble	11a8c <avl_remove_impl@@Base+0xb0>
   11a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a6c:	ldr	r3, [r3, #8]
   11a70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11a74:	mov	r0, r3
   11a78:	bl	119dc <avl_remove_impl@@Base>
   11a7c:	mov	r2, r0
   11a80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a84:	str	r2, [r3, #8]
   11a88:	b	11c24 <avl_remove_impl@@Base+0x248>
   11a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a90:	ldr	r3, [r3, #4]
   11a94:	cmp	r3, #0
   11a98:	beq	11aac <avl_remove_impl@@Base+0xd0>
   11a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11aa0:	ldr	r3, [r3, #8]
   11aa4:	cmp	r3, #0
   11aa8:	bne	11b94 <avl_remove_impl@@Base+0x1b8>
   11aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ab0:	ldr	r3, [r3, #4]
   11ab4:	cmp	r3, #0
   11ab8:	beq	11ac8 <avl_remove_impl@@Base+0xec>
   11abc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ac0:	ldr	r3, [r3, #4]
   11ac4:	b	11ad0 <avl_remove_impl@@Base+0xf4>
   11ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11acc:	ldr	r3, [r3, #8]
   11ad0:	str	r3, [fp, #-16]
   11ad4:	ldr	r3, [fp, #-16]
   11ad8:	cmp	r3, #0
   11adc:	bne	11af4 <avl_remove_impl@@Base+0x118>
   11ae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ae4:	str	r3, [fp, #-16]
   11ae8:	mov	r3, #0
   11aec:	str	r3, [fp, #-32]	; 0xffffffe0
   11af0:	b	11b78 <avl_remove_impl@@Base+0x19c>
   11af4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11af8:	ldr	r4, [r3]
   11afc:	ldr	r3, [fp, #-16]
   11b00:	ldr	r3, [r3]
   11b04:	mov	r0, r3
   11b08:	bl	10cf0 <strlen@plt>
   11b0c:	mov	r3, r0
   11b10:	add	r3, r3, #1
   11b14:	mov	r1, r3
   11b18:	mov	r0, r4
   11b1c:	bl	10ca8 <realloc@plt>
   11b20:	mov	r2, r0
   11b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b28:	str	r2, [r3]
   11b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b30:	ldr	r2, [r3]
   11b34:	ldr	r3, [fp, #-16]
   11b38:	ldr	r3, [r3]
   11b3c:	mov	r1, r3
   11b40:	mov	r0, r2
   11b44:	bl	10cb4 <strcpy@plt>
   11b48:	ldr	r3, [fp, #-16]
   11b4c:	ldr	r2, [r3, #4]
   11b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b54:	str	r2, [r3, #4]
   11b58:	ldr	r3, [fp, #-16]
   11b5c:	ldr	r2, [r3, #8]
   11b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b64:	str	r2, [r3, #8]
   11b68:	ldr	r3, [fp, #-16]
   11b6c:	ldr	r2, [r3, #12]
   11b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b74:	str	r2, [r3, #12]
   11b78:	ldr	r3, [fp, #-16]
   11b7c:	ldr	r3, [r3]
   11b80:	mov	r0, r3
   11b84:	bl	10c90 <free@plt>
   11b88:	ldr	r0, [fp, #-16]
   11b8c:	bl	10c90 <free@plt>
   11b90:	b	11c24 <avl_remove_impl@@Base+0x248>
   11b94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b98:	ldr	r3, [r3, #8]
   11b9c:	mov	r0, r3
   11ba0:	bl	11944 <avl_no_valormin@@Base>
   11ba4:	str	r0, [fp, #-20]	; 0xffffffec
   11ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bac:	ldr	r4, [r3]
   11bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11bb4:	ldr	r3, [r3]
   11bb8:	mov	r0, r3
   11bbc:	bl	10cf0 <strlen@plt>
   11bc0:	mov	r3, r0
   11bc4:	add	r3, r3, #1
   11bc8:	mov	r1, r3
   11bcc:	mov	r0, r4
   11bd0:	bl	10ca8 <realloc@plt>
   11bd4:	mov	r2, r0
   11bd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bdc:	str	r2, [r3]
   11be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11be4:	ldr	r2, [r3]
   11be8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11bec:	ldr	r3, [r3]
   11bf0:	mov	r1, r3
   11bf4:	mov	r0, r2
   11bf8:	bl	10cb4 <strcpy@plt>
   11bfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c00:	ldr	r2, [r3, #8]
   11c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c08:	ldr	r3, [r3]
   11c0c:	mov	r1, r3
   11c10:	mov	r0, r2
   11c14:	bl	119dc <avl_remove_impl@@Base>
   11c18:	mov	r2, r0
   11c1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c20:	str	r2, [r3, #8]
   11c24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c28:	cmp	r3, #0
   11c2c:	bne	11c38 <avl_remove_impl@@Base+0x25c>
   11c30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c34:	b	11d54 <avl_remove_impl@@Base+0x378>
   11c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c3c:	ldr	r3, [r3, #4]
   11c40:	mov	r0, r3
   11c44:	bl	1135c <avl_altura@@Base>
   11c48:	mov	r4, r0
   11c4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c50:	ldr	r3, [r3, #8]
   11c54:	mov	r0, r3
   11c58:	bl	1135c <avl_altura@@Base>
   11c5c:	mov	r3, r0
   11c60:	mov	r1, r3
   11c64:	mov	r0, r4
   11c68:	bl	11398 <max@@Base>
   11c6c:	mov	r3, r0
   11c70:	add	r2, r3, #1
   11c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c78:	str	r2, [r3, #12]
   11c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c80:	bl	1161c <calc_balanceamento@@Base>
   11c84:	str	r0, [fp, #-24]	; 0xffffffe8
   11c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c8c:	cmp	r3, #1
   11c90:	ble	11cec <avl_remove_impl@@Base+0x310>
   11c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c98:	ldr	r3, [r3, #8]
   11c9c:	mov	r0, r3
   11ca0:	bl	1161c <calc_balanceamento@@Base>
   11ca4:	mov	r3, r0
   11ca8:	cmp	r3, #0
   11cac:	bge	11cdc <avl_remove_impl@@Base+0x300>
   11cb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cb4:	ldr	r3, [r3, #8]
   11cb8:	mov	r0, r3
   11cbc:	bl	1146c <roda_direita@@Base>
   11cc0:	mov	r2, r0
   11cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cc8:	str	r2, [r3, #8]
   11ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11cd0:	bl	11544 <roda_esquerda@@Base>
   11cd4:	mov	r3, r0
   11cd8:	b	11d54 <avl_remove_impl@@Base+0x378>
   11cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ce0:	bl	11544 <roda_esquerda@@Base>
   11ce4:	mov	r3, r0
   11ce8:	b	11d54 <avl_remove_impl@@Base+0x378>
   11cec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cf0:	cmn	r3, #1
   11cf4:	bge	11d50 <avl_remove_impl@@Base+0x374>
   11cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cfc:	ldr	r3, [r3, #4]
   11d00:	mov	r0, r3
   11d04:	bl	1161c <calc_balanceamento@@Base>
   11d08:	mov	r3, r0
   11d0c:	cmp	r3, #0
   11d10:	ble	11d40 <avl_remove_impl@@Base+0x364>
   11d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d18:	ldr	r3, [r3, #4]
   11d1c:	mov	r0, r3
   11d20:	bl	11544 <roda_esquerda@@Base>
   11d24:	mov	r2, r0
   11d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d2c:	str	r2, [r3, #4]
   11d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d34:	bl	1146c <roda_direita@@Base>
   11d38:	mov	r3, r0
   11d3c:	b	11d54 <avl_remove_impl@@Base+0x378>
   11d40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d44:	bl	1146c <roda_direita@@Base>
   11d48:	mov	r3, r0
   11d4c:	b	11d54 <avl_remove_impl@@Base+0x378>
   11d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d54:	mov	r0, r3
   11d58:	sub	sp, fp, #8
   11d5c:	pop	{r4, fp, pc}

00011d60 <avl_preordem_impl@@Base>:
   11d60:	push	{fp, lr}
   11d64:	add	fp, sp, #4
   11d68:	sub	sp, sp, #8
   11d6c:	str	r0, [fp, #-8]
   11d70:	ldr	r3, [fp, #-8]
   11d74:	cmp	r3, #0
   11d78:	beq	11dbc <avl_preordem_impl@@Base+0x5c>
   11d7c:	ldr	r3, [fp, #-8]
   11d80:	ldr	r1, [r3]
   11d84:	ldr	r3, [fp, #-8]
   11d88:	ldr	r3, [r3, #16]
   11d8c:	mov	r2, r3
   11d90:	ldr	r0, [pc, #48]	; 11dc8 <avl_preordem_impl@@Base+0x68>
   11d94:	bl	10c78 <printf@plt>
   11d98:	ldr	r3, [fp, #-8]
   11d9c:	ldr	r3, [r3, #4]
   11da0:	mov	r0, r3
   11da4:	bl	11d60 <avl_preordem_impl@@Base>
   11da8:	ldr	r3, [fp, #-8]
   11dac:	ldr	r3, [r3, #8]
   11db0:	mov	r0, r3
   11db4:	bl	11d60 <avl_preordem_impl@@Base>
   11db8:	b	11dc0 <avl_preordem_impl@@Base+0x60>
   11dbc:	nop			; (mov r0, r0)
   11dc0:	sub	sp, fp, #4
   11dc4:	pop	{fp, pc}
   11dc8:	andeq	r2, r1, r8, lsr #15

00011dcc <bst_nova@@Base>:
   11dcc:	push	{fp, lr}
   11dd0:	add	fp, sp, #4
   11dd4:	sub	sp, sp, #8
   11dd8:	mov	r0, #4
   11ddc:	bl	10ccc <malloc@plt>
   11de0:	mov	r3, r0
   11de4:	str	r3, [fp, #-8]
   11de8:	ldr	r3, [fp, #-8]
   11dec:	cmp	r3, #0
   11df0:	bne	11dfc <bst_nova@@Base+0x30>
   11df4:	mov	r3, #0
   11df8:	b	11e0c <bst_nova@@Base+0x40>
   11dfc:	ldr	r3, [fp, #-8]
   11e00:	mov	r2, #0
   11e04:	str	r2, [r3]
   11e08:	ldr	r3, [fp, #-8]
   11e0c:	mov	r0, r3
   11e10:	sub	sp, fp, #4
   11e14:	pop	{fp, pc}

00011e18 <bst_apaga@@Base>:
   11e18:	push	{fp, lr}
   11e1c:	add	fp, sp, #4
   11e20:	sub	sp, sp, #8
   11e24:	str	r0, [fp, #-8]
   11e28:	b	11e58 <bst_apaga@@Base+0x40>
   11e2c:	ldr	r3, [fp, #-8]
   11e30:	ldr	r2, [r3]
   11e34:	ldr	r3, [fp, #-8]
   11e38:	ldr	r3, [r3]
   11e3c:	ldr	r3, [r3]
   11e40:	mov	r1, r3
   11e44:	mov	r0, r2
   11e48:	bl	1230c <bst_remove_impl@@Base>
   11e4c:	mov	r2, r0
   11e50:	ldr	r3, [fp, #-8]
   11e54:	str	r2, [r3]
   11e58:	ldr	r3, [fp, #-8]
   11e5c:	ldr	r3, [r3]
   11e60:	cmp	r3, #0
   11e64:	bne	11e2c <bst_apaga@@Base+0x14>
   11e68:	ldr	r0, [fp, #-8]
   11e6c:	bl	10c90 <free@plt>
   11e70:	nop			; (mov r0, r0)
   11e74:	sub	sp, fp, #4
   11e78:	pop	{fp, pc}

00011e7c <bst_pesquisa@@Base>:
   11e7c:	push	{fp, lr}
   11e80:	add	fp, sp, #4
   11e84:	sub	sp, sp, #8
   11e88:	str	r0, [fp, #-8]
   11e8c:	str	r1, [fp, #-12]
   11e90:	ldr	r3, [fp, #-8]
   11e94:	cmp	r3, #0
   11e98:	beq	11ea8 <bst_pesquisa@@Base+0x2c>
   11e9c:	ldr	r3, [fp, #-12]
   11ea0:	cmp	r3, #0
   11ea4:	bne	11eb0 <bst_pesquisa@@Base+0x34>
   11ea8:	mov	r3, #0
   11eac:	b	11ec8 <bst_pesquisa@@Base+0x4c>
   11eb0:	ldr	r3, [fp, #-8]
   11eb4:	ldr	r3, [r3]
   11eb8:	ldr	r1, [fp, #-12]
   11ebc:	mov	r0, r3
   11ec0:	bl	12198 <bst_pesquisa_impl@@Base>
   11ec4:	mov	r3, r0
   11ec8:	mov	r0, r3
   11ecc:	sub	sp, fp, #4
   11ed0:	pop	{fp, pc}

00011ed4 <bst_insere@@Base>:
   11ed4:	push	{fp, lr}
   11ed8:	add	fp, sp, #4
   11edc:	sub	sp, sp, #8
   11ee0:	str	r0, [fp, #-8]
   11ee4:	str	r1, [fp, #-12]
   11ee8:	ldr	r3, [fp, #-8]
   11eec:	cmp	r3, #0
   11ef0:	beq	11f00 <bst_insere@@Base+0x2c>
   11ef4:	ldr	r3, [fp, #-12]
   11ef8:	cmp	r3, #0
   11efc:	bne	11f08 <bst_insere@@Base+0x34>
   11f00:	mvn	r3, #0
   11f04:	b	11f2c <bst_insere@@Base+0x58>
   11f08:	ldr	r3, [fp, #-8]
   11f0c:	ldr	r3, [r3]
   11f10:	ldr	r1, [fp, #-12]
   11f14:	mov	r0, r3
   11f18:	bl	12248 <bst_insere_impl@@Base>
   11f1c:	mov	r2, r0
   11f20:	ldr	r3, [fp, #-8]
   11f24:	str	r2, [r3]
   11f28:	mov	r3, #0
   11f2c:	mov	r0, r3
   11f30:	sub	sp, fp, #4
   11f34:	pop	{fp, pc}

00011f38 <bst_remove@@Base>:
   11f38:	push	{fp, lr}
   11f3c:	add	fp, sp, #4
   11f40:	sub	sp, sp, #8
   11f44:	str	r0, [fp, #-8]
   11f48:	str	r1, [fp, #-12]
   11f4c:	ldr	r3, [fp, #-8]
   11f50:	cmp	r3, #0
   11f54:	beq	11f64 <bst_remove@@Base+0x2c>
   11f58:	ldr	r3, [fp, #-12]
   11f5c:	cmp	r3, #0
   11f60:	bne	11f6c <bst_remove@@Base+0x34>
   11f64:	mvn	r3, #0
   11f68:	b	11f90 <bst_remove@@Base+0x58>
   11f6c:	ldr	r3, [fp, #-8]
   11f70:	ldr	r3, [r3]
   11f74:	ldr	r1, [fp, #-12]
   11f78:	mov	r0, r3
   11f7c:	bl	1230c <bst_remove_impl@@Base>
   11f80:	mov	r2, r0
   11f84:	ldr	r3, [fp, #-8]
   11f88:	str	r2, [r3]
   11f8c:	mov	r3, #0
   11f90:	mov	r0, r3
   11f94:	sub	sp, fp, #4
   11f98:	pop	{fp, pc}

00011f9c <bst_min@@Base>:
   11f9c:	push	{fp, lr}
   11fa0:	add	fp, sp, #4
   11fa4:	sub	sp, sp, #8
   11fa8:	str	r0, [fp, #-8]
   11fac:	ldr	r3, [fp, #-8]
   11fb0:	cmp	r3, #0
   11fb4:	bne	11fc0 <bst_min@@Base+0x24>
   11fb8:	mov	r3, #0
   11fbc:	b	11fd8 <bst_min@@Base+0x3c>
   11fc0:	ldr	r3, [fp, #-8]
   11fc4:	ldr	r3, [r3]
   11fc8:	mov	r0, r3
   11fcc:	bl	12100 <bst_no_valormin@@Base>
   11fd0:	mov	r3, r0
   11fd4:	ldr	r3, [r3]
   11fd8:	mov	r0, r3
   11fdc:	sub	sp, fp, #4
   11fe0:	pop	{fp, pc}

00011fe4 <bst_max@@Base>:
   11fe4:	push	{fp, lr}
   11fe8:	add	fp, sp, #4
   11fec:	sub	sp, sp, #8
   11ff0:	str	r0, [fp, #-8]
   11ff4:	ldr	r3, [fp, #-8]
   11ff8:	cmp	r3, #0
   11ffc:	bne	12008 <bst_max@@Base+0x24>
   12000:	mov	r3, #0
   12004:	b	12020 <bst_max@@Base+0x3c>
   12008:	ldr	r3, [fp, #-8]
   1200c:	ldr	r3, [r3]
   12010:	mov	r0, r3
   12014:	bl	1214c <bst_no_valormax@@Base>
   12018:	mov	r3, r0
   1201c:	ldr	r3, [r3]
   12020:	mov	r0, r3
   12024:	sub	sp, fp, #4
   12028:	pop	{fp, pc}

0001202c <bst_imprime@@Base>:
   1202c:	push	{fp, lr}
   12030:	add	fp, sp, #4
   12034:	sub	sp, sp, #8
   12038:	str	r0, [fp, #-8]
   1203c:	ldr	r3, [fp, #-8]
   12040:	cmp	r3, #0
   12044:	beq	1206c <bst_imprime@@Base+0x40>
   12048:	ldr	r0, [pc, #40]	; 12078 <bst_imprime@@Base+0x4c>
   1204c:	bl	10c78 <printf@plt>
   12050:	ldr	r3, [fp, #-8]
   12054:	ldr	r3, [r3]
   12058:	mov	r0, r3
   1205c:	bl	12628 <bst_preordem_impl@@Base>
   12060:	mov	r0, #10
   12064:	bl	10cfc <putchar@plt>
   12068:	b	12070 <bst_imprime@@Base+0x44>
   1206c:	nop			; (mov r0, r0)
   12070:	sub	sp, fp, #4
   12074:	pop	{fp, pc}
   12078:			; <UNDEFINED> instruction: 0x000127b0

0001207c <bst_novo_no@@Base>:
   1207c:	push	{fp, lr}
   12080:	add	fp, sp, #4
   12084:	sub	sp, sp, #16
   12088:	str	r0, [fp, #-16]
   1208c:	mov	r0, #12
   12090:	bl	10ccc <malloc@plt>
   12094:	mov	r3, r0
   12098:	str	r3, [fp, #-8]
   1209c:	ldr	r0, [fp, #-16]
   120a0:	bl	10cf0 <strlen@plt>
   120a4:	mov	r3, r0
   120a8:	add	r3, r3, #1
   120ac:	mov	r0, r3
   120b0:	bl	10ccc <malloc@plt>
   120b4:	mov	r3, r0
   120b8:	mov	r2, r3
   120bc:	ldr	r3, [fp, #-8]
   120c0:	str	r2, [r3]
   120c4:	ldr	r3, [fp, #-8]
   120c8:	ldr	r3, [r3]
   120cc:	ldr	r1, [fp, #-16]
   120d0:	mov	r0, r3
   120d4:	bl	10cb4 <strcpy@plt>
   120d8:	ldr	r3, [fp, #-8]
   120dc:	mov	r2, #0
   120e0:	str	r2, [r3, #4]
   120e4:	ldr	r3, [fp, #-8]
   120e8:	mov	r2, #0
   120ec:	str	r2, [r3, #8]
   120f0:	ldr	r3, [fp, #-8]
   120f4:	mov	r0, r3
   120f8:	sub	sp, fp, #4
   120fc:	pop	{fp, pc}

00012100 <bst_no_valormin@@Base>:
   12100:	push	{fp}		; (str fp, [sp, #-4]!)
   12104:	add	fp, sp, #0
   12108:	sub	sp, sp, #20
   1210c:	str	r0, [fp, #-16]
   12110:	ldr	r3, [fp, #-16]
   12114:	str	r3, [fp, #-8]
   12118:	b	12128 <bst_no_valormin@@Base+0x28>
   1211c:	ldr	r3, [fp, #-8]
   12120:	ldr	r3, [r3, #4]
   12124:	str	r3, [fp, #-8]
   12128:	ldr	r3, [fp, #-8]
   1212c:	ldr	r3, [r3, #4]
   12130:	cmp	r3, #0
   12134:	bne	1211c <bst_no_valormin@@Base+0x1c>
   12138:	ldr	r3, [fp, #-8]
   1213c:	mov	r0, r3
   12140:	add	sp, fp, #0
   12144:	pop	{fp}		; (ldr fp, [sp], #4)
   12148:	bx	lr

0001214c <bst_no_valormax@@Base>:
   1214c:	push	{fp}		; (str fp, [sp, #-4]!)
   12150:	add	fp, sp, #0
   12154:	sub	sp, sp, #20
   12158:	str	r0, [fp, #-16]
   1215c:	ldr	r3, [fp, #-16]
   12160:	str	r3, [fp, #-8]
   12164:	b	12174 <bst_no_valormax@@Base+0x28>
   12168:	ldr	r3, [fp, #-8]
   1216c:	ldr	r3, [r3, #8]
   12170:	str	r3, [fp, #-8]
   12174:	ldr	r3, [fp, #-8]
   12178:	ldr	r3, [r3, #8]
   1217c:	cmp	r3, #0
   12180:	bne	12168 <bst_no_valormax@@Base+0x1c>
   12184:	ldr	r3, [fp, #-8]
   12188:	mov	r0, r3
   1218c:	add	sp, fp, #0
   12190:	pop	{fp}		; (ldr fp, [sp], #4)
   12194:	bx	lr

00012198 <bst_pesquisa_impl@@Base>:
   12198:	push	{fp, lr}
   1219c:	add	fp, sp, #4
   121a0:	sub	sp, sp, #8
   121a4:	str	r0, [fp, #-8]
   121a8:	str	r1, [fp, #-12]
   121ac:	ldr	r3, [fp, #-8]
   121b0:	cmp	r3, #0
   121b4:	bne	121c0 <bst_pesquisa_impl@@Base+0x28>
   121b8:	mov	r3, #0
   121bc:	b	1223c <bst_pesquisa_impl@@Base+0xa4>
   121c0:	ldr	r3, [fp, #-8]
   121c4:	ldr	r3, [r3]
   121c8:	mov	r1, r3
   121cc:	ldr	r0, [fp, #-12]
   121d0:	bl	10c6c <strcmp@plt>
   121d4:	mov	r3, r0
   121d8:	cmp	r3, #0
   121dc:	bge	121fc <bst_pesquisa_impl@@Base+0x64>
   121e0:	ldr	r3, [fp, #-8]
   121e4:	ldr	r3, [r3, #4]
   121e8:	ldr	r1, [fp, #-12]
   121ec:	mov	r0, r3
   121f0:	bl	12198 <bst_pesquisa_impl@@Base>
   121f4:	mov	r3, r0
   121f8:	b	1223c <bst_pesquisa_impl@@Base+0xa4>
   121fc:	ldr	r3, [fp, #-8]
   12200:	ldr	r3, [r3]
   12204:	mov	r1, r3
   12208:	ldr	r0, [fp, #-12]
   1220c:	bl	10c6c <strcmp@plt>
   12210:	mov	r3, r0
   12214:	cmp	r3, #0
   12218:	ble	12238 <bst_pesquisa_impl@@Base+0xa0>
   1221c:	ldr	r3, [fp, #-8]
   12220:	ldr	r3, [r3, #8]
   12224:	ldr	r1, [fp, #-12]
   12228:	mov	r0, r3
   1222c:	bl	12198 <bst_pesquisa_impl@@Base>
   12230:	mov	r3, r0
   12234:	b	1223c <bst_pesquisa_impl@@Base+0xa4>
   12238:	ldr	r3, [fp, #-8]
   1223c:	mov	r0, r3
   12240:	sub	sp, fp, #4
   12244:	pop	{fp, pc}

00012248 <bst_insere_impl@@Base>:
   12248:	push	{fp, lr}
   1224c:	add	fp, sp, #4
   12250:	sub	sp, sp, #8
   12254:	str	r0, [fp, #-8]
   12258:	str	r1, [fp, #-12]
   1225c:	ldr	r3, [fp, #-8]
   12260:	cmp	r3, #0
   12264:	bne	12278 <bst_insere_impl@@Base+0x30>
   12268:	ldr	r0, [fp, #-12]
   1226c:	bl	1207c <bst_novo_no@@Base>
   12270:	mov	r3, r0
   12274:	b	12300 <bst_insere_impl@@Base+0xb8>
   12278:	ldr	r3, [fp, #-8]
   1227c:	ldr	r3, [r3]
   12280:	mov	r1, r3
   12284:	ldr	r0, [fp, #-12]
   12288:	bl	10c6c <strcmp@plt>
   1228c:	mov	r3, r0
   12290:	cmp	r3, #0
   12294:	bge	122bc <bst_insere_impl@@Base+0x74>
   12298:	ldr	r3, [fp, #-8]
   1229c:	ldr	r3, [r3, #4]
   122a0:	ldr	r1, [fp, #-12]
   122a4:	mov	r0, r3
   122a8:	bl	12248 <bst_insere_impl@@Base>
   122ac:	mov	r2, r0
   122b0:	ldr	r3, [fp, #-8]
   122b4:	str	r2, [r3, #4]
   122b8:	b	122fc <bst_insere_impl@@Base+0xb4>
   122bc:	ldr	r3, [fp, #-8]
   122c0:	ldr	r3, [r3]
   122c4:	mov	r1, r3
   122c8:	ldr	r0, [fp, #-12]
   122cc:	bl	10c6c <strcmp@plt>
   122d0:	mov	r3, r0
   122d4:	cmp	r3, #0
   122d8:	ble	122fc <bst_insere_impl@@Base+0xb4>
   122dc:	ldr	r3, [fp, #-8]
   122e0:	ldr	r3, [r3, #8]
   122e4:	ldr	r1, [fp, #-12]
   122e8:	mov	r0, r3
   122ec:	bl	12248 <bst_insere_impl@@Base>
   122f0:	mov	r2, r0
   122f4:	ldr	r3, [fp, #-8]
   122f8:	str	r2, [r3, #8]
   122fc:	ldr	r3, [fp, #-8]
   12300:	mov	r0, r3
   12304:	sub	sp, fp, #4
   12308:	pop	{fp, pc}

0001230c <bst_remove_impl@@Base>:
   1230c:	push	{r4, fp, lr}
   12310:	add	fp, sp, #8
   12314:	sub	sp, sp, #20
   12318:	str	r0, [fp, #-24]	; 0xffffffe8
   1231c:	str	r1, [fp, #-28]	; 0xffffffe4
   12320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12324:	cmp	r3, #0
   12328:	bne	12334 <bst_remove_impl@@Base+0x28>
   1232c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12330:	b	12548 <bst_remove_impl@@Base+0x23c>
   12334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12338:	ldr	r3, [r3]
   1233c:	mov	r1, r3
   12340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12344:	bl	10c6c <strcmp@plt>
   12348:	mov	r3, r0
   1234c:	cmp	r3, #0
   12350:	bge	12378 <bst_remove_impl@@Base+0x6c>
   12354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12358:	ldr	r3, [r3, #4]
   1235c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12360:	mov	r0, r3
   12364:	bl	1230c <bst_remove_impl@@Base>
   12368:	mov	r2, r0
   1236c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12370:	str	r2, [r3, #4]
   12374:	b	12544 <bst_remove_impl@@Base+0x238>
   12378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1237c:	ldr	r3, [r3]
   12380:	mov	r1, r3
   12384:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12388:	bl	10c6c <strcmp@plt>
   1238c:	mov	r3, r0
   12390:	cmp	r3, #0
   12394:	ble	123bc <bst_remove_impl@@Base+0xb0>
   12398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1239c:	ldr	r3, [r3, #8]
   123a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   123a4:	mov	r0, r3
   123a8:	bl	1230c <bst_remove_impl@@Base>
   123ac:	mov	r2, r0
   123b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123b4:	str	r2, [r3, #8]
   123b8:	b	12544 <bst_remove_impl@@Base+0x238>
   123bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123c0:	ldr	r3, [r3, #4]
   123c4:	cmp	r3, #0
   123c8:	beq	123dc <bst_remove_impl@@Base+0xd0>
   123cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123d0:	ldr	r3, [r3, #8]
   123d4:	cmp	r3, #0
   123d8:	bne	124b4 <bst_remove_impl@@Base+0x1a8>
   123dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123e0:	ldr	r3, [r3, #4]
   123e4:	cmp	r3, #0
   123e8:	beq	123f8 <bst_remove_impl@@Base+0xec>
   123ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123f0:	ldr	r3, [r3, #4]
   123f4:	b	12400 <bst_remove_impl@@Base+0xf4>
   123f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123fc:	ldr	r3, [r3, #8]
   12400:	str	r3, [fp, #-16]
   12404:	ldr	r3, [fp, #-16]
   12408:	cmp	r3, #0
   1240c:	bne	12424 <bst_remove_impl@@Base+0x118>
   12410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12414:	str	r3, [fp, #-16]
   12418:	mov	r3, #0
   1241c:	str	r3, [fp, #-24]	; 0xffffffe8
   12420:	b	12498 <bst_remove_impl@@Base+0x18c>
   12424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12428:	ldr	r4, [r3]
   1242c:	ldr	r3, [fp, #-16]
   12430:	ldr	r3, [r3]
   12434:	mov	r0, r3
   12438:	bl	10cf0 <strlen@plt>
   1243c:	mov	r3, r0
   12440:	add	r3, r3, #1
   12444:	mov	r1, r3
   12448:	mov	r0, r4
   1244c:	bl	10ca8 <realloc@plt>
   12450:	mov	r2, r0
   12454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12458:	str	r2, [r3]
   1245c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12460:	ldr	r2, [r3]
   12464:	ldr	r3, [fp, #-16]
   12468:	ldr	r3, [r3]
   1246c:	mov	r1, r3
   12470:	mov	r0, r2
   12474:	bl	10cb4 <strcpy@plt>
   12478:	ldr	r3, [fp, #-16]
   1247c:	ldr	r2, [r3, #4]
   12480:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12484:	str	r2, [r3, #4]
   12488:	ldr	r3, [fp, #-16]
   1248c:	ldr	r2, [r3, #8]
   12490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12494:	str	r2, [r3, #8]
   12498:	ldr	r3, [fp, #-16]
   1249c:	ldr	r3, [r3]
   124a0:	mov	r0, r3
   124a4:	bl	10c90 <free@plt>
   124a8:	ldr	r0, [fp, #-16]
   124ac:	bl	10c90 <free@plt>
   124b0:	b	12544 <bst_remove_impl@@Base+0x238>
   124b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124b8:	ldr	r3, [r3, #8]
   124bc:	mov	r0, r3
   124c0:	bl	12100 <bst_no_valormin@@Base>
   124c4:	str	r0, [fp, #-20]	; 0xffffffec
   124c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124cc:	ldr	r4, [r3]
   124d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   124d4:	ldr	r3, [r3]
   124d8:	mov	r0, r3
   124dc:	bl	10cf0 <strlen@plt>
   124e0:	mov	r3, r0
   124e4:	add	r3, r3, #1
   124e8:	mov	r1, r3
   124ec:	mov	r0, r4
   124f0:	bl	10ca8 <realloc@plt>
   124f4:	mov	r2, r0
   124f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124fc:	str	r2, [r3]
   12500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12504:	ldr	r2, [r3]
   12508:	ldr	r3, [fp, #-20]	; 0xffffffec
   1250c:	ldr	r3, [r3]
   12510:	mov	r1, r3
   12514:	mov	r0, r2
   12518:	bl	10cb4 <strcpy@plt>
   1251c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12520:	ldr	r2, [r3, #8]
   12524:	ldr	r3, [fp, #-20]	; 0xffffffec
   12528:	ldr	r3, [r3]
   1252c:	mov	r1, r3
   12530:	mov	r0, r2
   12534:	bl	1230c <bst_remove_impl@@Base>
   12538:	mov	r2, r0
   1253c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12540:	str	r2, [r3, #8]
   12544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12548:	mov	r0, r3
   1254c:	sub	sp, fp, #8
   12550:	pop	{r4, fp, pc}

00012554 <bst_altura@@Base>:
   12554:	push	{fp, lr}
   12558:	add	fp, sp, #4
   1255c:	sub	sp, sp, #16
   12560:	str	r0, [fp, #-16]
   12564:	mov	r3, #0
   12568:	str	r3, [fp, #-8]
   1256c:	mov	r3, #0
   12570:	str	r3, [fp, #-12]
   12574:	ldr	r3, [fp, #-16]
   12578:	cmp	r3, #0
   1257c:	bne	12588 <bst_altura@@Base+0x34>
   12580:	mvn	r3, #0
   12584:	b	1261c <bst_altura@@Base+0xc8>
   12588:	ldr	r3, [fp, #-16]
   1258c:	ldr	r3, [r3, #8]
   12590:	cmp	r3, #0
   12594:	bne	125b0 <bst_altura@@Base+0x5c>
   12598:	ldr	r3, [fp, #-16]
   1259c:	ldr	r3, [r3, #4]
   125a0:	cmp	r3, #0
   125a4:	bne	125b0 <bst_altura@@Base+0x5c>
   125a8:	mov	r3, #0
   125ac:	b	1261c <bst_altura@@Base+0xc8>
   125b0:	ldr	r3, [fp, #-16]
   125b4:	ldr	r3, [r3, #4]
   125b8:	mov	r0, r3
   125bc:	bl	12554 <bst_altura@@Base>
   125c0:	str	r0, [fp, #-8]
   125c4:	ldr	r3, [fp, #-16]
   125c8:	ldr	r3, [r3, #8]
   125cc:	mov	r0, r3
   125d0:	bl	12554 <bst_altura@@Base>
   125d4:	str	r0, [fp, #-12]
   125d8:	ldr	r2, [fp, #-8]
   125dc:	ldr	r3, [fp, #-12]
   125e0:	cmp	r2, r3
   125e4:	ble	12604 <bst_altura@@Base+0xb0>
   125e8:	ldr	r3, [fp, #-16]
   125ec:	ldr	r3, [r3, #4]
   125f0:	mov	r0, r3
   125f4:	bl	12554 <bst_altura@@Base>
   125f8:	mov	r3, r0
   125fc:	add	r3, r3, #1
   12600:	b	1261c <bst_altura@@Base+0xc8>
   12604:	ldr	r3, [fp, #-16]
   12608:	ldr	r3, [r3, #8]
   1260c:	mov	r0, r3
   12610:	bl	12554 <bst_altura@@Base>
   12614:	mov	r3, r0
   12618:	add	r3, r3, #1
   1261c:	mov	r0, r3
   12620:	sub	sp, fp, #4
   12624:	pop	{fp, pc}

00012628 <bst_preordem_impl@@Base>:
   12628:	push	{fp, lr}
   1262c:	add	fp, sp, #4
   12630:	sub	sp, sp, #8
   12634:	str	r0, [fp, #-8]
   12638:	ldr	r3, [fp, #-8]
   1263c:	cmp	r3, #0
   12640:	beq	12680 <bst_preordem_impl@@Base+0x58>
   12644:	ldr	r3, [fp, #-8]
   12648:	ldr	r3, [r3]
   1264c:	mov	r1, r3
   12650:	ldr	r0, [pc, #52]	; 1268c <bst_preordem_impl@@Base+0x64>
   12654:	bl	10c78 <printf@plt>
   12658:	ldr	r3, [fp, #-8]
   1265c:	ldr	r3, [r3, #4]
   12660:	mov	r0, r3
   12664:	bl	12628 <bst_preordem_impl@@Base>
   12668:	ldr	r3, [fp, #-8]
   1266c:	ldr	r3, [r3, #8]
   12670:	mov	r0, r3
   12674:	bl	12628 <bst_preordem_impl@@Base>
   12678:	nop			; (mov r0, r0)
   1267c:	b	12684 <bst_preordem_impl@@Base+0x5c>
   12680:	nop			; (mov r0, r0)
   12684:	sub	sp, fp, #4
   12688:	pop	{fp, pc}
   1268c:			; <UNDEFINED> instruction: 0x000127bc

00012690 <__libc_csu_init@@Base>:
   12690:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12694:	mov	r7, r0
   12698:	ldr	r6, [pc, #72]	; 126e8 <__libc_csu_init@@Base+0x58>
   1269c:	ldr	r5, [pc, #72]	; 126ec <__libc_csu_init@@Base+0x5c>
   126a0:	add	r6, pc, r6
   126a4:	add	r5, pc, r5
   126a8:	sub	r6, r6, r5
   126ac:	mov	r8, r1
   126b0:	mov	r9, r2
   126b4:	bl	10c4c <strcmp@plt-0x20>
   126b8:	asrs	r6, r6, #2
   126bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   126c0:	mov	r4, #0
   126c4:	add	r4, r4, #1
   126c8:	ldr	r3, [r5], #4
   126cc:	mov	r2, r9
   126d0:	mov	r1, r8
   126d4:	mov	r0, r7
   126d8:	blx	r3
   126dc:	cmp	r6, r4
   126e0:	bne	126c4 <__libc_csu_init@@Base+0x34>
   126e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126e8:	andeq	r0, r1, r8, ror #16
   126ec:	andeq	r0, r1, r0, ror #16

000126f0 <__libc_csu_fini@@Base>:
   126f0:	bx	lr

Disassembly of section .fini:

000126f4 <.fini>:
   126f4:	push	{r3, lr}
   126f8:	pop	{r3, pc}
