
../compcert-repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010d48 <.init>:
   10d48:	push	{r3, lr}
   10d4c:	bl	10ffc <_start@@Base+0x3c>
   10d50:	pop	{r3, pc}

Disassembly of section .plt:

00010d54 <calloc@plt-0x14>:
   10d54:	push	{lr}		; (str lr, [sp, #-4]!)
   10d58:	ldr	lr, [pc, #4]	; 10d64 <calloc@plt-0x4>
   10d5c:	add	lr, pc, lr
   10d60:	ldr	pc, [lr, #8]!
   10d64:	muleq	r1, ip, r2

00010d68 <calloc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #668]!	; 0x29c

00010d74 <raise@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #660]!	; 0x294

00010d80 <strcmp@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #652]!	; 0x28c

00010d8c <printf@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #644]!	; 0x284

00010d98 <__isoc99_fscanf@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #636]!	; 0x27c

00010da4 <fopen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #628]!	; 0x274

00010db0 <free@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #620]!	; 0x26c

00010dbc <memcpy@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #612]!	; 0x264

00010dc8 <realloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #604]!	; 0x25c

00010dd4 <strcpy@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #596]!	; 0x254

00010de0 <puts@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #588]!	; 0x24c

00010dec <malloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #580]!	; 0x244

00010df8 <__libc_start_main@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #572]!	; 0x23c

00010e04 <__gmon_start__@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #564]!	; 0x234

00010e10 <strlen@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #556]!	; 0x22c

00010e1c <setvbuf@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #548]!	; 0x224

00010e28 <putchar@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #540]!	; 0x21c

00010e34 <fclose@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #532]!	; 0x214

00010e40 <abort@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #524]!	; 0x20c

Disassembly of section .text:

00010e4c <main@@Base>:
   10e4c:	ldr	r2, [pc, #308]	; 10f88 <main@@Base+0x13c>
   10e50:	mov	r3, #0
   10e54:	push	{r4, r5, r6, r7, r8, lr}
   10e58:	mov	r1, r3
   10e5c:	sub	sp, sp, #504	; 0x1f8
   10e60:	ldr	r0, [r2]
   10e64:	mov	r2, #2
   10e68:	bl	10e1c <setvbuf@plt>
   10e6c:	ldr	r1, [pc, #280]	; 10f8c <main@@Base+0x140>
   10e70:	ldr	r0, [pc, #280]	; 10f90 <main@@Base+0x144>
   10e74:	bl	10da4 <fopen@plt>
   10e78:	ldr	r1, [pc, #268]	; 10f8c <main@@Base+0x140>
   10e7c:	ldr	r7, [pc, #272]	; 10f94 <main@@Base+0x148>
   10e80:	mov	r6, r0
   10e84:	ldr	r0, [pc, #268]	; 10f98 <main@@Base+0x14c>
   10e88:	bl	10da4 <fopen@plt>
   10e8c:	mov	r5, r0
   10e90:	ldr	r0, [pc, #260]	; 10f9c <main@@Base+0x150>
   10e94:	bl	10de0 <puts@plt>
   10e98:	bl	111a8 <avl_nova@@Base>
   10e9c:	mov	r4, r0
   10ea0:	b	10ea8 <main@@Base+0x5c>
   10ea4:	bl	115ac <avl_insere@@Base>
   10ea8:	mov	r1, r7
   10eac:	add	r2, sp, #4
   10eb0:	mov	r0, r6
   10eb4:	bl	10d98 <__isoc99_fscanf@plt>
   10eb8:	add	r1, sp, #4
   10ebc:	cmp	r0, #1
   10ec0:	mov	r0, r4
   10ec4:	beq	10ea4 <main@@Base+0x58>
   10ec8:	ldr	r0, [pc, #208]	; 10fa0 <main@@Base+0x154>
   10ecc:	bl	10d8c <printf@plt>
   10ed0:	mov	r0, r4
   10ed4:	bl	11948 <avl_imprime@@Base>
   10ed8:	ldr	r0, [pc, #196]	; 10fa4 <main@@Base+0x158>
   10edc:	bl	10d8c <printf@plt>
   10ee0:	ldr	r1, [pc, #192]	; 10fa8 <main@@Base+0x15c>
   10ee4:	mov	r0, r4
   10ee8:	bl	110e8 <avl_max_subarvore@@Base>
   10eec:	mov	r0, r4
   10ef0:	bl	118a0 <avl_apaga@@Base>
   10ef4:	ldr	r0, [pc, #176]	; 10fac <main@@Base+0x160>
   10ef8:	bl	10de0 <puts@plt>
   10efc:	ldr	r1, [pc, #172]	; 10fb0 <main@@Base+0x164>
   10f00:	ldr	r0, [pc, #172]	; 10fb4 <main@@Base+0x168>
   10f04:	bl	11968 <tabela_nova@@Base>
   10f08:	ldr	r8, [pc, #132]	; 10f94 <main@@Base+0x148>
   10f0c:	ldr	r7, [pc, #164]	; 10fb8 <main@@Base+0x16c>
   10f10:	mov	r4, r0
   10f14:	b	10f1c <main@@Base+0xd0>
   10f18:	bl	11a38 <tabela_adiciona@@Base>
   10f1c:	add	r2, sp, #4
   10f20:	mov	r1, r8
   10f24:	mov	r0, r5
   10f28:	bl	10d98 <__isoc99_fscanf@plt>
   10f2c:	mov	r2, r7
   10f30:	add	r1, sp, #4
   10f34:	cmp	r0, #1
   10f38:	mov	r0, r4
   10f3c:	beq	10f18 <main@@Base+0xcc>
   10f40:	bl	11e94 <mostraTabela@@Base>
   10f44:	ldr	r1, [pc, #112]	; 10fbc <main@@Base+0x170>
   10f48:	mov	r0, r4
   10f4c:	bl	11130 <tabela_copia@@Base>
   10f50:	subs	r7, r0, #0
   10f54:	beq	10f5c <main@@Base+0x110>
   10f58:	bl	11e94 <mostraTabela@@Base>
   10f5c:	mov	r0, r4
   10f60:	bl	119d8 <tabela_apaga@@Base>
   10f64:	mov	r0, r7
   10f68:	bl	119d8 <tabela_apaga@@Base>
   10f6c:	mov	r0, r6
   10f70:	bl	10e34 <fclose@plt>
   10f74:	mov	r0, r5
   10f78:	bl	10e34 <fclose@plt>
   10f7c:	mov	r0, #0
   10f80:	add	sp, sp, #504	; 0x1f8
   10f84:	pop	{r4, r5, r6, r7, r8, pc}
   10f88:	andeq	r3, r2, r4, rrx
   10f8c:	andeq	r2, r1, r4, lsl r2
   10f90:	andeq	r2, r1, r8, lsl r2
   10f94:	andeq	r2, r1, r0, lsl r2
   10f98:	andeq	r2, r1, r4, lsr #4
   10f9c:	andeq	r2, r1, r0, lsr r2
   10fa0:	andeq	r2, r1, r4, asr #4
   10fa4:	andeq	r2, r1, r8, asr r2
   10fa8:	andeq	r2, r1, r0, ror r2
   10fac:	andeq	r2, r1, r4, ror r2
   10fb0:	andeq	r1, r1, r8, asr lr
   10fb4:	andeq	r0, r0, r9, asr r2
   10fb8:	andeq	r2, r1, r0, asr #4
   10fbc:	andeq	r0, r0, fp, ror #4

00010fc0 <_start@@Base>:
   10fc0:	mov	fp, #0
   10fc4:	mov	lr, #0
   10fc8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fcc:	mov	r2, sp
   10fd0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fd8:	ldr	ip, [pc, #16]	; 10ff0 <_start@@Base+0x30>
   10fdc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe0:	ldr	r0, [pc, #12]	; 10ff4 <_start@@Base+0x34>
   10fe4:	ldr	r3, [pc, #12]	; 10ff8 <_start@@Base+0x38>
   10fe8:	bl	10df8 <__libc_start_main@plt>
   10fec:	bl	10e40 <abort@plt>
   10ff0:	andeq	r2, r1, r0, lsl #4
   10ff4:	andeq	r0, r1, ip, asr #28
   10ff8:	andeq	r2, r1, r0, lsr #3
   10ffc:	ldr	r3, [pc, #20]	; 11018 <_start@@Base+0x58>
   11000:	ldr	r2, [pc, #20]	; 1101c <_start@@Base+0x5c>
   11004:	add	r3, pc, r3
   11008:	ldr	r2, [r3, r2]
   1100c:	cmp	r2, #0
   11010:	bxeq	lr
   11014:	b	10e04 <__gmon_start__@plt>
   11018:	strdeq	r1, [r1], -r4
   1101c:	andeq	r0, r0, r8, asr r0
   11020:	ldr	r3, [pc, #28]	; 11044 <_start@@Base+0x84>
   11024:	ldr	r0, [pc, #28]	; 11048 <_start@@Base+0x88>
   11028:	sub	r3, r3, r0
   1102c:	cmp	r3, #6
   11030:	bxls	lr
   11034:	ldr	r3, [pc, #16]	; 1104c <_start@@Base+0x8c>
   11038:	cmp	r3, #0
   1103c:	bxeq	lr
   11040:	bx	r3
   11044:	andeq	r3, r2, r7, rrx
   11048:	andeq	r3, r2, r4, rrx
   1104c:	andeq	r0, r0, r0
   11050:	ldr	r1, [pc, #36]	; 1107c <_start@@Base+0xbc>
   11054:	ldr	r0, [pc, #36]	; 11080 <_start@@Base+0xc0>
   11058:	sub	r1, r1, r0
   1105c:	asr	r1, r1, #2
   11060:	add	r1, r1, r1, lsr #31
   11064:	asrs	r1, r1, #1
   11068:	bxeq	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <_start@@Base+0xc4>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r3, r2, r4, rrx
   11080:	andeq	r3, r2, r4, rrx
   11084:	andeq	r0, r0, r0
   11088:	push	{r4, lr}
   1108c:	ldr	r4, [pc, #24]	; 110ac <_start@@Base+0xec>
   11090:	ldrb	r3, [r4]
   11094:	cmp	r3, #0
   11098:	popne	{r4, pc}
   1109c:	bl	11020 <_start@@Base+0x60>
   110a0:	mov	r3, #1
   110a4:	strb	r3, [r4]
   110a8:	pop	{r4, pc}
   110ac:	andeq	r3, r2, r8, rrx
   110b0:	ldr	r0, [pc, #40]	; 110e0 <_start@@Base+0x120>
   110b4:	ldr	r3, [r0]
   110b8:	cmp	r3, #0
   110bc:	bne	110c4 <_start@@Base+0x104>
   110c0:	b	11050 <_start@@Base+0x90>
   110c4:	ldr	r3, [pc, #24]	; 110e4 <_start@@Base+0x124>
   110c8:	cmp	r3, #0
   110cc:	beq	110c0 <_start@@Base+0x100>
   110d0:	push	{r4, lr}
   110d4:	blx	r3
   110d8:	pop	{r4, lr}
   110dc:	b	11050 <_start@@Base+0x90>
   110e0:	andeq	r2, r2, r4, lsl pc
   110e4:	andeq	r0, r0, r0

000110e8 <avl_max_subarvore@@Base>:
   110e8:	push	{r4, r5, r6, lr}
   110ec:	mov	r5, r0
   110f0:	mov	r6, r1
   110f4:	bl	111a8 <avl_nova@@Base>
   110f8:	mov	r1, r6
   110fc:	mov	r4, r0
   11100:	mov	r0, r5
   11104:	bl	113d0 <avl_pesquisa@@Base>
   11108:	str	r0, [r4]
   1110c:	mov	r0, r4
   11110:	bl	111ec <avl_max@@Base>
   11114:	mov	r1, r0
   11118:	ldr	r0, [pc, #12]	; 1112c <avl_max_subarvore@@Base+0x44>
   1111c:	bl	10d8c <printf@plt>
   11120:	mov	r0, r4
   11124:	pop	{r4, r5, r6, lr}
   11128:	b	10db0 <free@plt>
   1112c:	andeq	r2, r1, r0, lsl r2

00011130 <tabela_copia@@Base>:
   11130:	push	{r4, r5, r6, r7, lr}
   11134:	mov	r4, r0
   11138:	sub	sp, sp, #12
   1113c:	mov	r0, r1
   11140:	ldr	r1, [r4]
   11144:	bl	11968 <tabela_nova@@Base>
   11148:	add	r1, sp, #4
   1114c:	mov	r6, r0
   11150:	mov	r0, r4
   11154:	bl	11d28 <tabela_elementos@@Base>
   11158:	ldr	r3, [sp, #4]
   1115c:	cmp	r3, #0
   11160:	mov	r7, r0
   11164:	ble	11194 <tabela_copia@@Base+0x64>
   11168:	mov	r4, r0
   1116c:	mov	r5, #0
   11170:	add	r2, r4, #50	; 0x32
   11174:	mov	r1, r4
   11178:	mov	r0, r6
   1117c:	bl	11a38 <tabela_adiciona@@Base>
   11180:	ldr	r3, [sp, #4]
   11184:	add	r5, r5, #1
   11188:	cmp	r3, r5
   1118c:	add	r4, r4, #150	; 0x96
   11190:	bgt	11170 <tabela_copia@@Base+0x40>
   11194:	mov	r0, r7
   11198:	bl	10db0 <free@plt>
   1119c:	mov	r0, r6
   111a0:	add	sp, sp, #12
   111a4:	pop	{r4, r5, r6, r7, pc}

000111a8 <avl_nova@@Base>:
   111a8:	push	{r4, lr}
   111ac:	mov	r0, #4
   111b0:	bl	10dec <malloc@plt>
   111b4:	cmp	r0, #0
   111b8:	movne	r3, #0
   111bc:	strne	r3, [r0]
   111c0:	pop	{r4, pc}

000111c4 <avl_min@@Base>:
   111c4:	cmp	r0, #0
   111c8:	bxeq	lr
   111cc:	ldr	r2, [r0]
   111d0:	b	111d8 <avl_min@@Base+0x14>
   111d4:	mov	r2, r3
   111d8:	ldr	r3, [r2, #4]
   111dc:	cmp	r3, #0
   111e0:	bne	111d4 <avl_min@@Base+0x10>
   111e4:	ldr	r0, [r2]
   111e8:	bx	lr

000111ec <avl_max@@Base>:
   111ec:	cmp	r0, #0
   111f0:	bxeq	lr
   111f4:	ldr	r2, [r0]
   111f8:	b	11200 <avl_max@@Base+0x14>
   111fc:	mov	r2, r3
   11200:	ldr	r3, [r2, #8]
   11204:	cmp	r3, #0
   11208:	bne	111fc <avl_max@@Base+0x10>
   1120c:	ldr	r0, [r2]
   11210:	bx	lr

00011214 <avl_altura@@Base>:
   11214:	cmp	r0, #0
   11218:	ldrne	r0, [r0, #12]
   1121c:	mvneq	r0, #0
   11220:	bx	lr

00011224 <max@@Base>:
   11224:	cmp	r1, r0
   11228:	movge	r0, r1
   1122c:	bx	lr

00011230 <avl_novo_no@@Base>:
   11230:	push	{r4, r5, r6, lr}
   11234:	mov	r5, r0
   11238:	mov	r0, #16
   1123c:	bl	10dec <malloc@plt>
   11240:	mov	r4, r0
   11244:	mov	r0, r5
   11248:	bl	10e10 <strlen@plt>
   1124c:	add	r6, r0, #1
   11250:	mov	r0, r6
   11254:	bl	10dec <malloc@plt>
   11258:	mov	r2, r6
   1125c:	mov	r1, r5
   11260:	str	r0, [r4]
   11264:	bl	10dbc <memcpy@plt>
   11268:	mov	r3, #0
   1126c:	str	r3, [r4, #4]
   11270:	str	r3, [r4, #8]
   11274:	str	r3, [r4, #12]
   11278:	mov	r0, r4
   1127c:	pop	{r4, r5, r6, pc}

00011280 <roda_direita@@Base>:
   11280:	ldr	r2, [r0, #4]
   11284:	ldr	r3, [r2, #8]
   11288:	str	r0, [r2, #8]
   1128c:	cmp	r3, #0
   11290:	ldr	r1, [r0, #8]
   11294:	str	r3, [r0, #4]
   11298:	ldrne	r3, [r3, #12]
   1129c:	mvneq	r3, #0
   112a0:	cmp	r1, #0
   112a4:	mvneq	r1, #0
   112a8:	ldrne	r1, [r1, #12]
   112ac:	ldr	ip, [r2, #4]
   112b0:	cmp	r3, r1
   112b4:	movlt	r3, r1
   112b8:	cmp	ip, #0
   112bc:	add	r3, r3, #1
   112c0:	str	r3, [r0, #12]
   112c4:	ldrne	r1, [ip, #12]
   112c8:	beq	112e4 <roda_direita@@Base+0x64>
   112cc:	cmp	r3, r1
   112d0:	movlt	r3, r1
   112d4:	add	r3, r3, #1
   112d8:	str	r3, [r2, #12]
   112dc:	mov	r0, r2
   112e0:	bx	lr
   112e4:	mvn	r1, #0
   112e8:	b	112cc <roda_direita@@Base+0x4c>

000112ec <roda_esquerda@@Base>:
   112ec:	ldr	r2, [r0, #8]
   112f0:	ldr	r1, [r2, #4]
   112f4:	str	r0, [r2, #4]
   112f8:	ldr	r3, [r0, #4]
   112fc:	str	r1, [r0, #8]
   11300:	cmp	r3, #0
   11304:	mvneq	r3, #0
   11308:	ldrne	r3, [r3, #12]
   1130c:	cmp	r1, #0
   11310:	beq	11350 <roda_esquerda@@Base+0x64>
   11314:	ldr	r1, [r1, #12]
   11318:	cmp	r3, r1
   1131c:	movlt	r3, r1
   11320:	add	r3, r3, #1
   11324:	str	r3, [r0, #12]
   11328:	ldr	r1, [r2, #8]
   1132c:	mov	r0, r2
   11330:	cmp	r1, #0
   11334:	mvneq	r1, #0
   11338:	ldrne	r1, [r1, #12]
   1133c:	cmp	r3, r1
   11340:	movlt	r3, r1
   11344:	add	r3, r3, #1
   11348:	str	r3, [r2, #12]
   1134c:	bx	lr
   11350:	orr	r3, r3, r3, asr #31
   11354:	add	r3, r3, #1
   11358:	str	r3, [r0, #12]
   1135c:	b	11328 <roda_esquerda@@Base+0x3c>

00011360 <calc_balanceamento@@Base>:
   11360:	cmp	r0, #0
   11364:	bxeq	lr
   11368:	ldr	r3, [r0, #8]
   1136c:	ldr	r2, [r0, #4]
   11370:	cmp	r3, #0
   11374:	mvneq	r3, #0
   11378:	ldrne	r3, [r3, #12]
   1137c:	cmp	r2, #0
   11380:	mvneq	r0, #0
   11384:	ldrne	r0, [r2, #12]
   11388:	sub	r0, r3, r0
   1138c:	bx	lr

00011390 <avl_pesquisa_impl@@Base>:
   11390:	push	{r4, r5, r6, lr}
   11394:	subs	r4, r0, #0
   11398:	beq	113c8 <avl_pesquisa_impl@@Base+0x38>
   1139c:	mov	r5, r1
   113a0:	ldr	r1, [r4]
   113a4:	mov	r0, r5
   113a8:	bl	10d80 <strcmp@plt>
   113ac:	cmp	r0, #0
   113b0:	ldrlt	r4, [r4, #4]
   113b4:	blt	113c0 <avl_pesquisa_impl@@Base+0x30>
   113b8:	beq	113c8 <avl_pesquisa_impl@@Base+0x38>
   113bc:	ldr	r4, [r4, #8]
   113c0:	cmp	r4, #0
   113c4:	bne	113a0 <avl_pesquisa_impl@@Base+0x10>
   113c8:	mov	r0, r4
   113cc:	pop	{r4, r5, r6, pc}

000113d0 <avl_pesquisa@@Base>:
   113d0:	cmp	r1, #0
   113d4:	cmpne	r0, #0
   113d8:	beq	113e4 <avl_pesquisa@@Base+0x14>
   113dc:	ldr	r0, [r0]
   113e0:	b	11390 <avl_pesquisa_impl@@Base>
   113e4:	mov	r0, #0
   113e8:	bx	lr

000113ec <avl_insere_impl@@Base>:
   113ec:	push	{r4, r5, r6, lr}
   113f0:	subs	r4, r0, #0
   113f4:	beq	115a0 <avl_insere_impl@@Base+0x1b4>
   113f8:	mov	r5, r1
   113fc:	mov	r0, r5
   11400:	ldr	r1, [r4]
   11404:	bl	10d80 <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	blt	1155c <avl_insere_impl@@Base+0x170>
   11410:	beq	114a8 <avl_insere_impl@@Base+0xbc>
   11414:	mov	r1, r5
   11418:	ldr	r0, [r4, #8]
   1141c:	bl	113ec <avl_insere_impl@@Base>
   11420:	ldr	r1, [r4, #4]
   11424:	str	r0, [r4, #8]
   11428:	cmp	r1, #0
   1142c:	beq	114cc <avl_insere_impl@@Base+0xe0>
   11430:	cmp	r0, #0
   11434:	ldr	r3, [r1, #12]
   11438:	beq	114b0 <avl_insere_impl@@Base+0xc4>
   1143c:	ldr	r2, [r0, #12]
   11440:	cmp	r3, r2
   11444:	movlt	r3, r2
   11448:	add	r3, r3, #1
   1144c:	str	r3, [r4, #12]
   11450:	ldr	r3, [r0, #12]
   11454:	ldr	r2, [r1, #12]
   11458:	sub	r3, r3, r2
   1145c:	cmp	r3, #1
   11460:	ble	114f4 <avl_insere_impl@@Base+0x108>
   11464:	cmp	r0, #0
   11468:	beq	11498 <avl_insere_impl@@Base+0xac>
   1146c:	ldmib	r0, {r2, r3}
   11470:	cmp	r3, #0
   11474:	beq	11578 <avl_insere_impl@@Base+0x18c>
   11478:	cmp	r2, #0
   1147c:	ldr	r3, [r3, #12]
   11480:	mvneq	r2, #0
   11484:	beq	1148c <avl_insere_impl@@Base+0xa0>
   11488:	ldr	r2, [r2, #12]
   1148c:	sub	r3, r3, r2
   11490:	cmp	r3, #0
   11494:	blt	11548 <avl_insere_impl@@Base+0x15c>
   11498:	mov	r0, r4
   1149c:	pop	{r4, r5, r6, lr}
   114a0:	b	112ec <roda_esquerda@@Base>
   114a4:	str	r0, [r4, #12]
   114a8:	mov	r0, r4
   114ac:	pop	{r4, r5, r6, pc}
   114b0:	mvn	r2, #0
   114b4:	cmp	r3, r2
   114b8:	movlt	r3, r2
   114bc:	add	r3, r3, #1
   114c0:	str	r3, [r4, #12]
   114c4:	mov	r3, r2
   114c8:	b	11454 <avl_insere_impl@@Base+0x68>
   114cc:	cmp	r0, #0
   114d0:	beq	114a4 <avl_insere_impl@@Base+0xb8>
   114d4:	ldr	r3, [r0, #12]
   114d8:	orr	r3, r3, r3, asr #31
   114dc:	add	r3, r3, #1
   114e0:	str	r3, [r4, #12]
   114e4:	ldr	r3, [r0, #12]
   114e8:	add	r3, r3, #1
   114ec:	cmp	r3, #1
   114f0:	bgt	1146c <avl_insere_impl@@Base+0x80>
   114f4:	cmn	r3, #1
   114f8:	bge	114a8 <avl_insere_impl@@Base+0xbc>
   114fc:	cmp	r1, #0
   11500:	beq	11594 <avl_insere_impl@@Base+0x1a8>
   11504:	ldmib	r1, {r2, r3}
   11508:	cmp	r3, #0
   1150c:	beq	11588 <avl_insere_impl@@Base+0x19c>
   11510:	cmp	r2, #0
   11514:	ldr	r3, [r3, #12]
   11518:	mvneq	r2, #0
   1151c:	beq	11524 <avl_insere_impl@@Base+0x138>
   11520:	ldr	r2, [r2, #12]
   11524:	sub	r3, r3, r2
   11528:	cmp	r3, #0
   1152c:	ble	11594 <avl_insere_impl@@Base+0x1a8>
   11530:	mov	r0, r1
   11534:	bl	112ec <roda_esquerda@@Base>
   11538:	str	r0, [r4, #4]
   1153c:	mov	r0, r4
   11540:	pop	{r4, r5, r6, lr}
   11544:	b	11280 <roda_direita@@Base>
   11548:	bl	11280 <roda_direita@@Base>
   1154c:	str	r0, [r4, #8]
   11550:	mov	r0, r4
   11554:	pop	{r4, r5, r6, lr}
   11558:	b	112ec <roda_esquerda@@Base>
   1155c:	mov	r1, r5
   11560:	ldr	r0, [r4, #4]
   11564:	bl	113ec <avl_insere_impl@@Base>
   11568:	mov	r1, r0
   1156c:	str	r0, [r4, #4]
   11570:	ldr	r0, [r4, #8]
   11574:	b	11428 <avl_insere_impl@@Base+0x3c>
   11578:	cmp	r2, #0
   1157c:	mvnne	r3, #0
   11580:	bne	11488 <avl_insere_impl@@Base+0x9c>
   11584:	b	11498 <avl_insere_impl@@Base+0xac>
   11588:	cmp	r2, #0
   1158c:	mvnne	r3, #0
   11590:	bne	11520 <avl_insere_impl@@Base+0x134>
   11594:	mov	r0, r4
   11598:	pop	{r4, r5, r6, lr}
   1159c:	b	11280 <roda_direita@@Base>
   115a0:	mov	r0, r1
   115a4:	pop	{r4, r5, r6, lr}
   115a8:	b	11230 <avl_novo_no@@Base>

000115ac <avl_insere@@Base>:
   115ac:	cmp	r1, #0
   115b0:	cmpne	r0, #0
   115b4:	push	{r4, r5, r6, lr}
   115b8:	moveq	r5, #1
   115bc:	movne	r5, #0
   115c0:	beq	115dc <avl_insere@@Base+0x30>
   115c4:	mov	r4, r0
   115c8:	ldr	r0, [r0]
   115cc:	bl	113ec <avl_insere_impl@@Base>
   115d0:	str	r0, [r4]
   115d4:	mov	r0, r5
   115d8:	pop	{r4, r5, r6, pc}
   115dc:	mvn	r5, #0
   115e0:	b	115d4 <avl_insere@@Base+0x28>

000115e4 <avl_no_valormin@@Base>:
   115e4:	b	115ec <avl_no_valormin@@Base+0x8>
   115e8:	mov	r0, r3
   115ec:	ldr	r3, [r0, #4]
   115f0:	cmp	r3, #0
   115f4:	bne	115e8 <avl_no_valormin@@Base+0x4>
   115f8:	bx	lr

000115fc <avl_no_valormax@@Base>:
   115fc:	b	11604 <avl_no_valormax@@Base+0x8>
   11600:	mov	r0, r3
   11604:	ldr	r3, [r0, #8]
   11608:	cmp	r3, #0
   1160c:	bne	11600 <avl_no_valormax@@Base+0x4>
   11610:	bx	lr

00011614 <avl_remove_impl@@Base>:
   11614:	push	{r4, r5, r6, r7, r8, lr}
   11618:	subs	r4, r0, #0
   1161c:	beq	11768 <avl_remove_impl@@Base+0x154>
   11620:	ldr	r7, [r4]
   11624:	mov	r0, r1
   11628:	mov	r5, r1
   1162c:	mov	r1, r7
   11630:	bl	10d80 <strcmp@plt>
   11634:	cmp	r0, #0
   11638:	blt	117d4 <avl_remove_impl@@Base+0x1c0>
   1163c:	beq	116d0 <avl_remove_impl@@Base+0xbc>
   11640:	mov	r1, r5
   11644:	ldr	r0, [r4, #8]
   11648:	bl	11614 <avl_remove_impl@@Base>
   1164c:	ldr	r1, [r4, #4]
   11650:	str	r0, [r4, #8]
   11654:	cmp	r1, #0
   11658:	beq	11738 <avl_remove_impl@@Base+0x124>
   1165c:	cmp	r0, #0
   11660:	ldr	r3, [r1, #12]
   11664:	beq	117f0 <avl_remove_impl@@Base+0x1dc>
   11668:	ldr	r2, [r0, #12]
   1166c:	cmp	r3, r2
   11670:	movlt	r3, r2
   11674:	add	r3, r3, #1
   11678:	str	r3, [r4, #12]
   1167c:	ldr	r3, [r0, #12]
   11680:	ldr	r2, [r1, #12]
   11684:	sub	r3, r3, r2
   11688:	cmp	r3, #1
   1168c:	ble	11760 <avl_remove_impl@@Base+0x14c>
   11690:	cmp	r0, #0
   11694:	beq	116c4 <avl_remove_impl@@Base+0xb0>
   11698:	ldmib	r0, {r2, r3}
   1169c:	cmp	r3, #0
   116a0:	beq	1180c <avl_remove_impl@@Base+0x1f8>
   116a4:	cmp	r2, #0
   116a8:	ldr	r3, [r3, #12]
   116ac:	mvneq	r2, #0
   116b0:	beq	116b8 <avl_remove_impl@@Base+0xa4>
   116b4:	ldr	r2, [r2, #12]
   116b8:	sub	r3, r3, r2
   116bc:	cmp	r3, #0
   116c0:	blt	117c0 <avl_remove_impl@@Base+0x1ac>
   116c4:	mov	r0, r4
   116c8:	pop	{r4, r5, r6, r7, r8, lr}
   116cc:	b	112ec <roda_esquerda@@Base>
   116d0:	ldr	r6, [r4, #4]
   116d4:	cmp	r6, #0
   116d8:	beq	11880 <avl_remove_impl@@Base+0x26c>
   116dc:	ldr	r5, [r4, #8]
   116e0:	cmp	r5, #0
   116e4:	bne	116f0 <avl_remove_impl@@Base+0xdc>
   116e8:	b	1181c <avl_remove_impl@@Base+0x208>
   116ec:	mov	r5, r3
   116f0:	ldr	r3, [r5, #4]
   116f4:	cmp	r3, #0
   116f8:	bne	116ec <avl_remove_impl@@Base+0xd8>
   116fc:	ldr	r0, [r5]
   11700:	bl	10e10 <strlen@plt>
   11704:	add	r1, r0, #1
   11708:	mov	r0, r7
   1170c:	bl	10dc8 <realloc@plt>
   11710:	str	r0, [r4]
   11714:	ldr	r1, [r5]
   11718:	bl	10dd4 <strcpy@plt>
   1171c:	ldr	r1, [r5]
   11720:	ldr	r0, [r4, #8]
   11724:	bl	11614 <avl_remove_impl@@Base>
   11728:	ldr	r1, [r4, #4]
   1172c:	cmp	r1, #0
   11730:	str	r0, [r4, #8]
   11734:	bne	1165c <avl_remove_impl@@Base+0x48>
   11738:	cmp	r0, #0
   1173c:	beq	11878 <avl_remove_impl@@Base+0x264>
   11740:	ldr	r3, [r0, #12]
   11744:	orr	r3, r3, r3, asr #31
   11748:	add	r3, r3, #1
   1174c:	str	r3, [r4, #12]
   11750:	ldr	r3, [r0, #12]
   11754:	add	r3, r3, #1
   11758:	cmp	r3, #1
   1175c:	bgt	11698 <avl_remove_impl@@Base+0x84>
   11760:	cmn	r3, #1
   11764:	blt	11774 <avl_remove_impl@@Base+0x160>
   11768:	mov	r6, r4
   1176c:	mov	r0, r6
   11770:	pop	{r4, r5, r6, r7, r8, pc}
   11774:	cmp	r1, #0
   11778:	beq	1186c <avl_remove_impl@@Base+0x258>
   1177c:	ldmib	r1, {r2, r3}
   11780:	cmp	r3, #0
   11784:	beq	11860 <avl_remove_impl@@Base+0x24c>
   11788:	cmp	r2, #0
   1178c:	ldr	r3, [r3, #12]
   11790:	mvneq	r2, #0
   11794:	beq	1179c <avl_remove_impl@@Base+0x188>
   11798:	ldr	r2, [r2, #12]
   1179c:	sub	r3, r3, r2
   117a0:	cmp	r3, #0
   117a4:	ble	1186c <avl_remove_impl@@Base+0x258>
   117a8:	mov	r0, r1
   117ac:	bl	112ec <roda_esquerda@@Base>
   117b0:	str	r0, [r4, #4]
   117b4:	mov	r0, r4
   117b8:	pop	{r4, r5, r6, r7, r8, lr}
   117bc:	b	11280 <roda_direita@@Base>
   117c0:	bl	11280 <roda_direita@@Base>
   117c4:	str	r0, [r4, #8]
   117c8:	mov	r0, r4
   117cc:	pop	{r4, r5, r6, r7, r8, lr}
   117d0:	b	112ec <roda_esquerda@@Base>
   117d4:	mov	r1, r5
   117d8:	ldr	r0, [r4, #4]
   117dc:	bl	11614 <avl_remove_impl@@Base>
   117e0:	mov	r1, r0
   117e4:	str	r0, [r4, #4]
   117e8:	ldr	r0, [r4, #8]
   117ec:	b	11654 <avl_remove_impl@@Base+0x40>
   117f0:	mvn	r2, #0
   117f4:	cmp	r3, r2
   117f8:	movlt	r3, r2
   117fc:	add	r3, r3, #1
   11800:	str	r3, [r4, #12]
   11804:	mov	r3, r2
   11808:	b	11680 <avl_remove_impl@@Base+0x6c>
   1180c:	cmp	r2, #0
   11810:	mvnne	r3, #0
   11814:	bne	116b4 <avl_remove_impl@@Base+0xa0>
   11818:	b	116c4 <avl_remove_impl@@Base+0xb0>
   1181c:	ldr	r0, [r6]
   11820:	bl	10e10 <strlen@plt>
   11824:	add	r1, r0, #1
   11828:	mov	r0, r7
   1182c:	bl	10dc8 <realloc@plt>
   11830:	str	r0, [r4]
   11834:	ldr	r1, [r6]
   11838:	bl	10dd4 <strcpy@plt>
   1183c:	ldmib	r6, {r1, r2, r3}
   11840:	ldr	r0, [r6]
   11844:	stmib	r4, {r1, r2, r3}
   11848:	bl	10db0 <free@plt>
   1184c:	mov	r0, r6
   11850:	bl	10db0 <free@plt>
   11854:	ldr	r1, [r4, #4]
   11858:	ldr	r0, [r4, #8]
   1185c:	b	11654 <avl_remove_impl@@Base+0x40>
   11860:	cmp	r2, #0
   11864:	mvnne	r3, #0
   11868:	bne	11798 <avl_remove_impl@@Base+0x184>
   1186c:	mov	r0, r4
   11870:	pop	{r4, r5, r6, r7, r8, lr}
   11874:	b	11280 <roda_direita@@Base>
   11878:	str	r0, [r4, #12]
   1187c:	b	11768 <avl_remove_impl@@Base+0x154>
   11880:	ldr	r6, [r4, #8]
   11884:	cmp	r6, #0
   11888:	bne	1181c <avl_remove_impl@@Base+0x208>
   1188c:	mov	r0, r7
   11890:	bl	10db0 <free@plt>
   11894:	mov	r0, r4
   11898:	bl	10db0 <free@plt>
   1189c:	b	1176c <avl_remove_impl@@Base+0x158>

000118a0 <avl_apaga@@Base>:
   118a0:	push	{r4, lr}
   118a4:	subs	r4, r0, #0
   118a8:	popeq	{r4, pc}
   118ac:	ldr	r0, [r4]
   118b0:	cmp	r0, #0
   118b4:	beq	118cc <avl_apaga@@Base+0x2c>
   118b8:	ldr	r1, [r0]
   118bc:	bl	11614 <avl_remove_impl@@Base>
   118c0:	cmp	r0, #0
   118c4:	str	r0, [r4]
   118c8:	bne	118b8 <avl_apaga@@Base+0x18>
   118cc:	mov	r0, r4
   118d0:	pop	{r4, lr}
   118d4:	b	10db0 <free@plt>

000118d8 <avl_remove@@Base>:
   118d8:	cmp	r1, #0
   118dc:	cmpne	r0, #0
   118e0:	push	{r4, r5, r6, lr}
   118e4:	moveq	r5, #1
   118e8:	movne	r5, #0
   118ec:	beq	11908 <avl_remove@@Base+0x30>
   118f0:	mov	r4, r0
   118f4:	ldr	r0, [r0]
   118f8:	bl	11614 <avl_remove_impl@@Base>
   118fc:	str	r0, [r4]
   11900:	mov	r0, r5
   11904:	pop	{r4, r5, r6, pc}
   11908:	mvn	r5, #0
   1190c:	b	11900 <avl_remove@@Base+0x28>

00011910 <avl_preordem_impl@@Base>:
   11910:	push	{r4, r5, r6, lr}
   11914:	subs	r4, r0, #0
   11918:	popeq	{r4, r5, r6, pc}
   1191c:	ldr	r5, [pc, #32]	; 11944 <avl_preordem_impl@@Base+0x34>
   11920:	ldr	r1, [r4]
   11924:	mov	r0, r5
   11928:	bl	10d8c <printf@plt>
   1192c:	ldr	r0, [r4, #4]
   11930:	bl	11910 <avl_preordem_impl@@Base>
   11934:	ldr	r4, [r4, #8]
   11938:	cmp	r4, #0
   1193c:	bne	11920 <avl_preordem_impl@@Base+0x10>
   11940:	pop	{r4, r5, r6, pc}
   11944:	andeq	r2, r1, r8, lsl #5

00011948 <avl_imprime@@Base>:
   11948:	cmp	r0, #0
   1194c:	bxeq	lr
   11950:	push	{r4, lr}
   11954:	ldr	r0, [r0]
   11958:	bl	11910 <avl_preordem_impl@@Base>
   1195c:	mov	r0, #10
   11960:	pop	{r4, lr}
   11964:	b	10e28 <putchar@plt>

00011968 <tabela_nova@@Base>:
   11968:	cmp	r1, #0
   1196c:	cmpne	r0, #0
   11970:	push	{r4, r5, r6, r7, r8, lr}
   11974:	ble	119bc <tabela_nova@@Base+0x54>
   11978:	mov	r5, r0
   1197c:	mov	r0, #12
   11980:	mov	r6, r1
   11984:	bl	10dec <malloc@plt>
   11988:	subs	r4, r0, #0
   1198c:	beq	119bc <tabela_nova@@Base+0x54>
   11990:	mov	r1, #4
   11994:	mov	r0, r5
   11998:	bl	10d68 <calloc@plt>
   1199c:	cmp	r0, #0
   119a0:	mov	r7, r0
   119a4:	str	r0, [r4, #4]
   119a8:	strne	r5, [r4, #8]
   119ac:	strne	r6, [r4]
   119b0:	beq	119c8 <tabela_nova@@Base+0x60>
   119b4:	mov	r0, r4
   119b8:	pop	{r4, r5, r6, r7, r8, pc}
   119bc:	mov	r4, #0
   119c0:	mov	r0, r4
   119c4:	pop	{r4, r5, r6, r7, r8, pc}
   119c8:	mov	r0, r4
   119cc:	bl	10db0 <free@plt>
   119d0:	mov	r4, r7
   119d4:	b	119b4 <tabela_nova@@Base+0x4c>

000119d8 <tabela_apaga@@Base>:
   119d8:	push	{r4, r5, r6, r7, r8, lr}
   119dc:	subs	r7, r0, #0
   119e0:	popeq	{r4, r5, r6, r7, r8, pc}
   119e4:	ldmib	r7, {r0, r3}
   119e8:	cmp	r3, #0
   119ec:	ble	11a28 <tabela_apaga@@Base+0x50>
   119f0:	mov	r6, #0
   119f4:	ldr	r4, [r0, r6, lsl #2]
   119f8:	cmp	r4, #0
   119fc:	beq	11a1c <tabela_apaga@@Base+0x44>
   11a00:	ldm	r4, {r0, r5}
   11a04:	bl	10db0 <free@plt>
   11a08:	mov	r0, r4
   11a0c:	bl	10db0 <free@plt>
   11a10:	subs	r4, r5, #0
   11a14:	bne	11a00 <tabela_apaga@@Base+0x28>
   11a18:	ldmib	r7, {r0, r3}
   11a1c:	add	r6, r6, #1
   11a20:	cmp	r3, r6
   11a24:	bgt	119f4 <tabela_apaga@@Base+0x1c>
   11a28:	bl	10db0 <free@plt>
   11a2c:	mov	r0, r7
   11a30:	pop	{r4, r5, r6, r7, r8, lr}
   11a34:	b	10db0 <free@plt>

00011a38 <tabela_adiciona@@Base>:
   11a38:	cmp	r2, #0
   11a3c:	cmpne	r1, #0
   11a40:	moveq	r3, #1
   11a44:	movne	r3, #0
   11a48:	cmp	r0, #0
   11a4c:	orreq	r3, r3, #1
   11a50:	cmp	r3, #0
   11a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a58:	bne	11b1c <tabela_adiciona@@Base+0xe4>
   11a5c:	mov	r6, r1
   11a60:	mov	r4, r0
   11a64:	ldr	r3, [r0]
   11a68:	ldr	r1, [r0, #8]
   11a6c:	mov	r0, r6
   11a70:	mov	r8, r2
   11a74:	blx	r3
   11a78:	ldr	sl, [r4, #4]
   11a7c:	ldr	r4, [sl, r0, lsl #2]
   11a80:	mov	r9, r0
   11a84:	cmp	r4, #0
   11a88:	bne	11a9c <tabela_adiciona@@Base+0x64>
   11a8c:	b	11ac8 <tabela_adiciona@@Base+0x90>
   11a90:	ldr	r4, [r4, #4]
   11a94:	cmp	r4, #0
   11a98:	beq	11ac8 <tabela_adiciona@@Base+0x90>
   11a9c:	ldr	r5, [r4]
   11aa0:	mov	r1, r6
   11aa4:	mov	r0, r5
   11aa8:	bl	10d80 <strcmp@plt>
   11aac:	subs	r7, r0, #0
   11ab0:	bne	11a90 <tabela_adiciona@@Base+0x58>
   11ab4:	mov	r1, r8
   11ab8:	add	r0, r5, #50	; 0x32
   11abc:	bl	10dd4 <strcpy@plt>
   11ac0:	mov	r0, r7
   11ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac8:	mov	r0, #8
   11acc:	bl	10dec <malloc@plt>
   11ad0:	subs	r4, r0, #0
   11ad4:	beq	11b1c <tabela_adiciona@@Base+0xe4>
   11ad8:	mov	r0, #150	; 0x96
   11adc:	bl	10dec <malloc@plt>
   11ae0:	cmp	r0, #0
   11ae4:	mov	r5, r0
   11ae8:	str	r0, [r4]
   11aec:	beq	11b1c <tabela_adiciona@@Base+0xe4>
   11af0:	mov	r1, r6
   11af4:	bl	10dd4 <strcpy@plt>
   11af8:	mov	r1, r8
   11afc:	add	r0, r5, #50	; 0x32
   11b00:	bl	10dd4 <strcpy@plt>
   11b04:	ldr	r3, [sl, r9, lsl #2]
   11b08:	mov	r7, #0
   11b0c:	str	r3, [r4, #4]
   11b10:	mov	r0, r7
   11b14:	str	r4, [sl, r9, lsl #2]
   11b18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b1c:	mvn	r7, #1
   11b20:	b	11ac0 <tabela_adiciona@@Base+0x88>

00011b24 <tabela_remove@@Base>:
   11b24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b28:	subs	r4, r0, #0
   11b2c:	beq	11bb8 <tabela_remove@@Base+0x94>
   11b30:	mov	r6, r1
   11b34:	ldr	r3, [r4]
   11b38:	ldr	r1, [r4, #8]
   11b3c:	mov	r0, r6
   11b40:	blx	r3
   11b44:	ldr	sl, [r4, #4]
   11b48:	ldr	r4, [sl, r0, lsl #2]
   11b4c:	mov	r9, r0
   11b50:	cmp	r4, #0
   11b54:	beq	11bac <tabela_remove@@Base+0x88>
   11b58:	mov	r8, #0
   11b5c:	b	11b6c <tabela_remove@@Base+0x48>
   11b60:	mov	r8, r4
   11b64:	subs	r4, r3, #0
   11b68:	beq	11bac <tabela_remove@@Base+0x88>
   11b6c:	ldr	r5, [r4]
   11b70:	mov	r1, r6
   11b74:	mov	r0, r5
   11b78:	bl	10d80 <strcmp@plt>
   11b7c:	ldr	r3, [r4, #4]
   11b80:	subs	r7, r0, #0
   11b84:	bne	11b60 <tabela_remove@@Base+0x3c>
   11b88:	cmp	r8, #0
   11b8c:	strne	r3, [r8, #4]
   11b90:	streq	r3, [sl, r9, lsl #2]
   11b94:	mov	r0, r5
   11b98:	bl	10db0 <free@plt>
   11b9c:	mov	r0, r4
   11ba0:	bl	10db0 <free@plt>
   11ba4:	mov	r0, r7
   11ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bac:	mvn	r7, #2
   11bb0:	mov	r0, r7
   11bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb8:	mvn	r7, #1
   11bbc:	b	11bb0 <tabela_remove@@Base+0x8c>

00011bc0 <tabela_valor@@Base>:
   11bc0:	push	{r4, r5, r6, lr}
   11bc4:	subs	r4, r0, #0
   11bc8:	beq	11c20 <tabela_valor@@Base+0x60>
   11bcc:	mov	r6, r1
   11bd0:	ldr	r3, [r4]
   11bd4:	ldr	r1, [r4, #8]
   11bd8:	mov	r0, r6
   11bdc:	blx	r3
   11be0:	ldr	r3, [r4, #4]
   11be4:	ldr	r4, [r3, r0, lsl #2]
   11be8:	cmp	r4, #0
   11bec:	bne	11c00 <tabela_valor@@Base+0x40>
   11bf0:	b	11c20 <tabela_valor@@Base+0x60>
   11bf4:	ldr	r4, [r4, #4]
   11bf8:	cmp	r4, #0
   11bfc:	beq	11c20 <tabela_valor@@Base+0x60>
   11c00:	ldr	r5, [r4]
   11c04:	mov	r1, r6
   11c08:	mov	r0, r5
   11c0c:	bl	10d80 <strcmp@plt>
   11c10:	cmp	r0, #0
   11c14:	bne	11bf4 <tabela_valor@@Base+0x34>
   11c18:	add	r0, r5, #50	; 0x32
   11c1c:	pop	{r4, r5, r6, pc}
   11c20:	mov	r0, #0
   11c24:	pop	{r4, r5, r6, pc}

00011c28 <tabela_existe@@Base>:
   11c28:	cmp	r0, #0
   11c2c:	cmpne	r1, #0
   11c30:	beq	11c4c <tabela_existe@@Base+0x24>
   11c34:	push	{r4, lr}
   11c38:	bl	11bc0 <tabela_valor@@Base>
   11c3c:	cmp	r0, #0
   11c40:	mvneq	r0, #2
   11c44:	movne	r0, #1
   11c48:	pop	{r4, pc}
   11c4c:	mvn	r0, #1
   11c50:	bx	lr

00011c54 <tabela_esvazia@@Base>:
   11c54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c58:	subs	r8, r0, #0
   11c5c:	beq	11cc8 <tabela_esvazia@@Base+0x74>
   11c60:	ldr	r1, [r8, #8]
   11c64:	cmp	r1, #0
   11c68:	ble	11cc0 <tabela_esvazia@@Base+0x6c>
   11c6c:	mov	r6, #0
   11c70:	ldr	r3, [r8, #4]
   11c74:	mov	r9, r6
   11c78:	ldr	r4, [r3, r6, lsl #2]
   11c7c:	lsl	r7, r6, #2
   11c80:	cmp	r4, #0
   11c84:	add	r2, r3, r7
   11c88:	beq	11cb0 <tabela_esvazia@@Base+0x5c>
   11c8c:	ldm	r4, {r0, r5}
   11c90:	bl	10db0 <free@plt>
   11c94:	mov	r0, r4
   11c98:	bl	10db0 <free@plt>
   11c9c:	subs	r4, r5, #0
   11ca0:	bne	11c8c <tabela_esvazia@@Base+0x38>
   11ca4:	ldr	r3, [r8, #4]
   11ca8:	ldr	r1, [r8, #8]
   11cac:	add	r2, r3, r7
   11cb0:	add	r6, r6, #1
   11cb4:	cmp	r1, r6
   11cb8:	str	r9, [r2]
   11cbc:	bgt	11c78 <tabela_esvazia@@Base+0x24>
   11cc0:	mov	r0, #0
   11cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cc8:	mvn	r0, #1
   11ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011cd0 <tabela_numelementos@@Base>:
   11cd0:	cmp	r0, #0
   11cd4:	beq	11d20 <tabela_numelementos@@Base+0x50>
   11cd8:	ldr	r1, [r0, #8]
   11cdc:	cmp	r1, #0
   11ce0:	ble	11d18 <tabela_numelementos@@Base+0x48>
   11ce4:	ldr	r2, [r0, #4]
   11ce8:	mov	r0, #0
   11cec:	add	r1, r2, r1, lsl #2
   11cf0:	ldr	r3, [r2], #4
   11cf4:	cmp	r3, #0
   11cf8:	beq	11d0c <tabela_numelementos@@Base+0x3c>
   11cfc:	ldr	r3, [r3, #4]
   11d00:	add	r0, r0, #1
   11d04:	cmp	r3, #0
   11d08:	bne	11cfc <tabela_numelementos@@Base+0x2c>
   11d0c:	cmp	r2, r1
   11d10:	bne	11cf0 <tabela_numelementos@@Base+0x20>
   11d14:	bx	lr
   11d18:	mov	r0, #0
   11d1c:	bx	lr
   11d20:	mvn	r0, #1
   11d24:	bx	lr

00011d28 <tabela_elementos@@Base>:
   11d28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d2c:	subs	r4, r0, #0
   11d30:	beq	11df0 <tabela_elementos@@Base+0xc8>
   11d34:	ldr	ip, [r4, #8]
   11d38:	cmp	ip, #0
   11d3c:	ble	11e04 <tabela_elementos@@Base+0xdc>
   11d40:	ldr	r8, [r4, #4]
   11d44:	mov	r0, #0
   11d48:	add	ip, r8, ip, lsl #2
   11d4c:	mov	r7, r8
   11d50:	mov	r2, r8
   11d54:	ldr	r3, [r2], #4
   11d58:	cmp	r3, #0
   11d5c:	beq	11d70 <tabela_elementos@@Base+0x48>
   11d60:	ldr	r3, [r3, #4]
   11d64:	add	r0, r0, #1
   11d68:	cmp	r3, #0
   11d6c:	bne	11d60 <tabela_elementos@@Base+0x38>
   11d70:	cmp	r2, ip
   11d74:	bne	11d54 <tabela_elementos@@Base+0x2c>
   11d78:	cmp	r0, #0
   11d7c:	str	r0, [r1]
   11d80:	beq	11e14 <tabela_elementos@@Base+0xec>
   11d84:	mov	r6, #150	; 0x96
   11d88:	mul	r0, r6, r0
   11d8c:	bl	10dec <malloc@plt>
   11d90:	subs	r9, r0, #0
   11d94:	beq	11e14 <tabela_elementos@@Base+0xec>
   11d98:	ldr	r3, [r4, #8]
   11d9c:	cmp	r3, #0
   11da0:	ble	11de8 <tabela_elementos@@Base+0xc0>
   11da4:	add	r8, r8, r3, lsl #2
   11da8:	mov	r5, #0
   11dac:	ldr	r4, [r7], #4
   11db0:	cmp	r4, #0
   11db4:	beq	11de0 <tabela_elementos@@Base+0xb8>
   11db8:	mla	r3, r6, r5, r9
   11dbc:	ldr	r1, [r4]
   11dc0:	mov	r0, r3
   11dc4:	mov	r2, r6
   11dc8:	bl	10dbc <memcpy@plt>
   11dcc:	ldr	r4, [r4, #4]
   11dd0:	add	r5, r5, #1
   11dd4:	cmp	r4, #0
   11dd8:	add	r3, r0, #150	; 0x96
   11ddc:	bne	11dbc <tabela_elementos@@Base+0x94>
   11de0:	cmp	r8, r7
   11de4:	bne	11dac <tabela_elementos@@Base+0x84>
   11de8:	mov	r0, r9
   11dec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11df0:	mvn	r3, #1
   11df4:	mov	r9, r4
   11df8:	str	r3, [r1]
   11dfc:	mov	r0, r9
   11e00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e04:	mov	r3, #0
   11e08:	mov	r9, r3
   11e0c:	str	r3, [r1]
   11e10:	b	11de8 <tabela_elementos@@Base+0xc0>
   11e14:	mov	r9, #0
   11e18:	b	11de8 <tabela_elementos@@Base+0xc0>

00011e1c <hash_krm@@Base>:
   11e1c:	push	{r4, lr}
   11e20:	ldrb	r3, [r0]
   11e24:	cmp	r3, #0
   11e28:	beq	11e50 <hash_krm@@Base+0x34>
   11e2c:	mov	r2, r0
   11e30:	mov	r0, #7
   11e34:	add	r0, r0, r3
   11e38:	ldrb	r3, [r2, #1]!
   11e3c:	cmp	r3, #0
   11e40:	bne	11e34 <hash_krm@@Base+0x18>
   11e44:	bl	12170 <mostraTabela@@Base+0x2dc>
   11e48:	mov	r0, r1
   11e4c:	pop	{r4, pc}
   11e50:	mov	r0, #7
   11e54:	b	11e44 <hash_krm@@Base+0x28>

00011e58 <hash_djbm@@Base>:
   11e58:	push	{r4, lr}
   11e5c:	ldrb	r2, [r0]
   11e60:	ldr	r3, [pc, #40]	; 11e90 <hash_djbm@@Base+0x38>
   11e64:	cmp	r2, #0
   11e68:	beq	11e80 <hash_djbm@@Base+0x28>
   11e6c:	rsb	r3, r3, r3, lsl #5
   11e70:	eor	r3, r3, r2
   11e74:	ldrb	r2, [r0, #1]!
   11e78:	cmp	r2, #0
   11e7c:	bne	11e6c <hash_djbm@@Base+0x14>
   11e80:	mov	r0, r3
   11e84:	bl	12170 <mostraTabela@@Base+0x2dc>
   11e88:	mov	r0, r1
   11e8c:	pop	{r4, pc}
   11e90:	andeq	r1, r0, r3, ror #9

00011e94 <mostraTabela@@Base>:
   11e94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e98:	subs	r7, r0, #0
   11e9c:	mvneq	r1, #1
   11ea0:	beq	11ee0 <mostraTabela@@Base+0x4c>
   11ea4:	ldr	r0, [r7, #8]
   11ea8:	cmp	r0, #0
   11eac:	ble	11f70 <mostraTabela@@Base+0xdc>
   11eb0:	ldr	r2, [r7, #4]
   11eb4:	mov	r1, #0
   11eb8:	add	r0, r2, r0, lsl #2
   11ebc:	ldr	r3, [r2], #4
   11ec0:	cmp	r3, #0
   11ec4:	beq	11ed8 <mostraTabela@@Base+0x44>
   11ec8:	ldr	r3, [r3, #4]
   11ecc:	add	r1, r1, #1
   11ed0:	cmp	r3, #0
   11ed4:	bne	11ec8 <mostraTabela@@Base+0x34>
   11ed8:	cmp	r0, r2
   11edc:	bne	11ebc <mostraTabela@@Base+0x28>
   11ee0:	ldr	r0, [pc, #144]	; 11f78 <mostraTabela@@Base+0xe4>
   11ee4:	bl	10d8c <printf@plt>
   11ee8:	ldr	r2, [r7, #8]
   11eec:	cmp	r2, #0
   11ef0:	ble	11f64 <mostraTabela@@Base+0xd0>
   11ef4:	ldr	r9, [pc, #128]	; 11f7c <mostraTabela@@Base+0xe8>
   11ef8:	ldr	r5, [pc, #128]	; 11f80 <mostraTabela@@Base+0xec>
   11efc:	mov	r6, #0
   11f00:	mov	r8, #10
   11f04:	ldr	r3, [r7, #4]
   11f08:	ldr	r3, [r3, r6, lsl #2]
   11f0c:	cmp	r3, #0
   11f10:	beq	11f58 <mostraTabela@@Base+0xc4>
   11f14:	mov	r1, r6
   11f18:	mov	r0, r9
   11f1c:	bl	10d8c <printf@plt>
   11f20:	ldr	r3, [r7, #4]
   11f24:	ldr	r4, [r3, r6, lsl #2]
   11f28:	cmp	r4, #0
   11f2c:	beq	11f4c <mostraTabela@@Base+0xb8>
   11f30:	ldr	r1, [r4]
   11f34:	mov	r0, r5
   11f38:	add	r2, r1, #50	; 0x32
   11f3c:	bl	10d8c <printf@plt>
   11f40:	ldr	r4, [r4, #4]
   11f44:	cmp	r4, #0
   11f48:	bne	11f30 <mostraTabela@@Base+0x9c>
   11f4c:	mov	r0, r8
   11f50:	bl	10e28 <putchar@plt>
   11f54:	ldr	r2, [r7, #8]
   11f58:	add	r6, r6, #1
   11f5c:	cmp	r2, r6
   11f60:	bgt	11f04 <mostraTabela@@Base+0x70>
   11f64:	mov	r0, #10
   11f68:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f6c:	b	10e28 <putchar@plt>
   11f70:	mov	r1, #0
   11f74:	b	11ee0 <mostraTabela@@Base+0x4c>
   11f78:	andeq	r2, r1, ip, lsl #5
   11f7c:			; <UNDEFINED> instruction: 0x000122b0
   11f80:			; <UNDEFINED> instruction: 0x000122b8
   11f84:	subs	r2, r1, #1
   11f88:	bxeq	lr
   11f8c:	bcc	12164 <mostraTabela@@Base+0x2d0>
   11f90:	cmp	r0, r1
   11f94:	bls	12148 <mostraTabela@@Base+0x2b4>
   11f98:	tst	r1, r2
   11f9c:	beq	12154 <mostraTabela@@Base+0x2c0>
   11fa0:	clz	r3, r0
   11fa4:	clz	r2, r1
   11fa8:	sub	r3, r2, r3
   11fac:	rsbs	r3, r3, #31
   11fb0:	addne	r3, r3, r3, lsl #1
   11fb4:	mov	r2, #0
   11fb8:	addne	pc, pc, r3, lsl #2
   11fbc:	nop			; (mov r0, r0)
   11fc0:	cmp	r0, r1, lsl #31
   11fc4:	adc	r2, r2, r2
   11fc8:	subcs	r0, r0, r1, lsl #31
   11fcc:	cmp	r0, r1, lsl #30
   11fd0:	adc	r2, r2, r2
   11fd4:	subcs	r0, r0, r1, lsl #30
   11fd8:	cmp	r0, r1, lsl #29
   11fdc:	adc	r2, r2, r2
   11fe0:	subcs	r0, r0, r1, lsl #29
   11fe4:	cmp	r0, r1, lsl #28
   11fe8:	adc	r2, r2, r2
   11fec:	subcs	r0, r0, r1, lsl #28
   11ff0:	cmp	r0, r1, lsl #27
   11ff4:	adc	r2, r2, r2
   11ff8:	subcs	r0, r0, r1, lsl #27
   11ffc:	cmp	r0, r1, lsl #26
   12000:	adc	r2, r2, r2
   12004:	subcs	r0, r0, r1, lsl #26
   12008:	cmp	r0, r1, lsl #25
   1200c:	adc	r2, r2, r2
   12010:	subcs	r0, r0, r1, lsl #25
   12014:	cmp	r0, r1, lsl #24
   12018:	adc	r2, r2, r2
   1201c:	subcs	r0, r0, r1, lsl #24
   12020:	cmp	r0, r1, lsl #23
   12024:	adc	r2, r2, r2
   12028:	subcs	r0, r0, r1, lsl #23
   1202c:	cmp	r0, r1, lsl #22
   12030:	adc	r2, r2, r2
   12034:	subcs	r0, r0, r1, lsl #22
   12038:	cmp	r0, r1, lsl #21
   1203c:	adc	r2, r2, r2
   12040:	subcs	r0, r0, r1, lsl #21
   12044:	cmp	r0, r1, lsl #20
   12048:	adc	r2, r2, r2
   1204c:	subcs	r0, r0, r1, lsl #20
   12050:	cmp	r0, r1, lsl #19
   12054:	adc	r2, r2, r2
   12058:	subcs	r0, r0, r1, lsl #19
   1205c:	cmp	r0, r1, lsl #18
   12060:	adc	r2, r2, r2
   12064:	subcs	r0, r0, r1, lsl #18
   12068:	cmp	r0, r1, lsl #17
   1206c:	adc	r2, r2, r2
   12070:	subcs	r0, r0, r1, lsl #17
   12074:	cmp	r0, r1, lsl #16
   12078:	adc	r2, r2, r2
   1207c:	subcs	r0, r0, r1, lsl #16
   12080:	cmp	r0, r1, lsl #15
   12084:	adc	r2, r2, r2
   12088:	subcs	r0, r0, r1, lsl #15
   1208c:	cmp	r0, r1, lsl #14
   12090:	adc	r2, r2, r2
   12094:	subcs	r0, r0, r1, lsl #14
   12098:	cmp	r0, r1, lsl #13
   1209c:	adc	r2, r2, r2
   120a0:	subcs	r0, r0, r1, lsl #13
   120a4:	cmp	r0, r1, lsl #12
   120a8:	adc	r2, r2, r2
   120ac:	subcs	r0, r0, r1, lsl #12
   120b0:	cmp	r0, r1, lsl #11
   120b4:	adc	r2, r2, r2
   120b8:	subcs	r0, r0, r1, lsl #11
   120bc:	cmp	r0, r1, lsl #10
   120c0:	adc	r2, r2, r2
   120c4:	subcs	r0, r0, r1, lsl #10
   120c8:	cmp	r0, r1, lsl #9
   120cc:	adc	r2, r2, r2
   120d0:	subcs	r0, r0, r1, lsl #9
   120d4:	cmp	r0, r1, lsl #8
   120d8:	adc	r2, r2, r2
   120dc:	subcs	r0, r0, r1, lsl #8
   120e0:	cmp	r0, r1, lsl #7
   120e4:	adc	r2, r2, r2
   120e8:	subcs	r0, r0, r1, lsl #7
   120ec:	cmp	r0, r1, lsl #6
   120f0:	adc	r2, r2, r2
   120f4:	subcs	r0, r0, r1, lsl #6
   120f8:	cmp	r0, r1, lsl #5
   120fc:	adc	r2, r2, r2
   12100:	subcs	r0, r0, r1, lsl #5
   12104:	cmp	r0, r1, lsl #4
   12108:	adc	r2, r2, r2
   1210c:	subcs	r0, r0, r1, lsl #4
   12110:	cmp	r0, r1, lsl #3
   12114:	adc	r2, r2, r2
   12118:	subcs	r0, r0, r1, lsl #3
   1211c:	cmp	r0, r1, lsl #2
   12120:	adc	r2, r2, r2
   12124:	subcs	r0, r0, r1, lsl #2
   12128:	cmp	r0, r1, lsl #1
   1212c:	adc	r2, r2, r2
   12130:	subcs	r0, r0, r1, lsl #1
   12134:	cmp	r0, r1
   12138:	adc	r2, r2, r2
   1213c:	subcs	r0, r0, r1
   12140:	mov	r0, r2
   12144:	bx	lr
   12148:	moveq	r0, #1
   1214c:	movne	r0, #0
   12150:	bx	lr
   12154:	clz	r2, r1
   12158:	rsb	r2, r2, #31
   1215c:	lsr	r0, r0, r2
   12160:	bx	lr
   12164:	cmp	r0, #0
   12168:	mvnne	r0, #0
   1216c:	b	12190 <mostraTabela@@Base+0x2fc>
   12170:	cmp	r1, #0
   12174:	beq	12164 <mostraTabela@@Base+0x2d0>
   12178:	push	{r0, r1, lr}
   1217c:	bl	11f84 <mostraTabela@@Base+0xf0>
   12180:	pop	{r1, r2, lr}
   12184:	mul	r3, r2, r0
   12188:	sub	r1, r1, r3
   1218c:	bx	lr
   12190:	push	{r1, lr}
   12194:	mov	r0, #8
   12198:	bl	10d74 <raise@plt>
   1219c:	pop	{r1, pc}

000121a0 <__libc_csu_init@@Base>:
   121a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121a4:	mov	r7, r0
   121a8:	ldr	r6, [pc, #72]	; 121f8 <__libc_csu_init@@Base+0x58>
   121ac:	ldr	r5, [pc, #72]	; 121fc <__libc_csu_init@@Base+0x5c>
   121b0:	add	r6, pc, r6
   121b4:	add	r5, pc, r5
   121b8:	sub	r6, r6, r5
   121bc:	mov	r8, r1
   121c0:	mov	r9, r2
   121c4:	bl	10d48 <calloc@plt-0x20>
   121c8:	asrs	r6, r6, #2
   121cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121d0:	mov	r4, #0
   121d4:	add	r4, r4, #1
   121d8:	ldr	r3, [r5], #4
   121dc:	mov	r2, r9
   121e0:	mov	r1, r8
   121e4:	mov	r0, r7
   121e8:	blx	r3
   121ec:	cmp	r6, r4
   121f0:	bne	121d4 <__libc_csu_init@@Base+0x34>
   121f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121f8:	andeq	r0, r1, r8, asr sp
   121fc:	andeq	r0, r1, r0, asr sp

00012200 <__libc_csu_fini@@Base>:
   12200:	bx	lr

Disassembly of section .fini:

00012204 <.fini>:
   12204:	push	{r3, lr}
   12208:	pop	{r3, pc}
