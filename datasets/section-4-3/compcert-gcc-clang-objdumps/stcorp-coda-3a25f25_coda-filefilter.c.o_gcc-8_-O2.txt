
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <append_string_to_name_buffer>:
   0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4:	strd	r6, [sp, #8]
   8:	subs	r7, r1, #0
   c:	strd	r8, [sp, #16]
  10:	str	sl, [sp, #24]
  14:	str	lr, [sp, #28]
  18:	beq	bc <append_string_to_name_buffer+0xbc>
  1c:	mov	r4, r0
  20:	mov	r0, r7
  24:	bl	0 <strlen>
  28:	mov	r6, r0
  2c:	ldm	r4, {r0, r5}
  30:	add	r2, r0, r6
  34:	cmp	r2, r5
  38:	blt	b4 <append_string_to_name_buffer+0xb4>
  3c:	ble	58 <append_string_to_name_buffer+0x58>
  40:	mvn	r3, r5
  44:	add	r5, r5, #1024	; 0x400
  48:	add	r3, r3, r2
  4c:	bic	r3, r3, #1020	; 0x3fc
  50:	bic	r3, r3, #3
  54:	add	r5, r3, r5
  58:	mov	r0, r5
  5c:	bl	0 <malloc>
  60:	subs	r8, r0, #0
  64:	beq	dc <append_string_to_name_buffer+0xdc>
  68:	ldr	r9, [r4, #8]
  6c:	mov	r1, r9
  70:	bl	0 <strcpy>
  74:	mov	r0, r9
  78:	bl	0 <free>
  7c:	ldr	r0, [r4]
  80:	stmib	r4, {r5, r8}
  84:	mov	r1, r7
  88:	add	r0, r8, r0
  8c:	bl	0 <strcpy>
  90:	ldr	r0, [r4]
  94:	ldrd	r8, [sp, #16]
  98:	ldr	sl, [sp, #24]
  9c:	add	r0, r0, r6
  a0:	ldrd	r6, [sp, #8]
  a4:	str	r0, [r4]
  a8:	ldrd	r4, [sp]
  ac:	add	sp, sp, #28
  b0:	pop	{pc}		; (ldr pc, [sp], #4)
  b4:	ldr	r8, [r4, #8]
  b8:	b	84 <append_string_to_name_buffer+0x84>
  bc:	movw	r3, #0
  c0:	movt	r3, #0
  c4:	movw	r1, #0
  c8:	movt	r1, #0
  cc:	movw	r0, #0
  d0:	movt	r0, #0
  d4:	mov	r2, #85	; 0x55
  d8:	bl	0 <__assert_fail>
  dc:	movw	r3, #0
  e0:	movt	r3, #0
  e4:	movw	r1, #0
  e8:	movt	r1, #0
  ec:	movw	r0, #0
  f0:	movt	r0, #0
  f4:	mov	r2, #100	; 0x64
  f8:	bl	0 <__assert_fail>

000000fc <coda_match_filepath>:
  fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
 100:	mov	r5, r2
 104:	mov	r4, r0
 108:	strd	r6, [sp, #8]
 10c:	mov	r0, #3
 110:	mov	r7, r3
 114:	strd	r8, [sp, #16]
 118:	mov	r8, r1
 11c:	strd	sl, [sp, #24]
 120:	str	lr, [sp, #32]
 124:	sub	sp, sp, #636	; 0x27c
 128:	add	r2, sp, #24
 12c:	ldr	r1, [r5, #8]
 130:	bl	0 <__xstat>
 134:	subs	r6, r0, #0
 138:	beq	190 <coda_match_filepath+0x94>
 13c:	bl	0 <__errno_location>
 140:	ldr	r0, [r0]
 144:	ldr	r4, [r5, #8]
 148:	cmp	r0, #20
 14c:	cmpne	r0, #2
 150:	bne	1cc <coda_match_filepath+0xd0>
 154:	mov	r0, r4
 158:	movw	r2, #0
 15c:	movt	r2, #0
 160:	mov	r1, #0
 164:	ldr	r3, [sp, #672]	; 0x2a0
 168:	blx	r7
 16c:	mov	r6, r0
 170:	mov	r0, r6
 174:	add	sp, sp, #636	; 0x27c
 178:	ldrd	r4, [sp]
 17c:	ldrd	r6, [sp, #8]
 180:	ldrd	r8, [sp, #16]
 184:	ldrd	sl, [sp, #24]
 188:	add	sp, sp, #32
 18c:	pop	{pc}		; (ldr pc, [sp], #4)
 190:	ldr	r3, [sp, #40]	; 0x28
 194:	ands	r9, r3, #16384	; 0x4000
 198:	bne	1ec <coda_match_filepath+0xf0>
 19c:	tst	r3, #32768	; 0x8000
 1a0:	bne	2ac <coda_match_filepath+0x1b0>
 1a4:	cmp	r4, #0
 1a8:	bne	170 <coda_match_filepath+0x74>
 1ac:	mov	r1, r6
 1b0:	movw	r2, #0
 1b4:	movt	r2, #0
 1b8:	ldr	r0, [r5, #8]
 1bc:	ldr	r3, [sp, #672]	; 0x2a0
 1c0:	blx	r7
 1c4:	mov	r6, r0
 1c8:	b	170 <coda_match_filepath+0x74>
 1cc:	bl	0 <strerror>
 1d0:	mov	r2, r0
 1d4:	mov	r1, #0
 1d8:	ldr	r3, [sp, #672]	; 0x2a0
 1dc:	mov	r0, r4
 1e0:	blx	r7
 1e4:	mov	r6, r0
 1e8:	b	170 <coda_match_filepath+0x74>
 1ec:	ldr	r0, [r5, #8]
 1f0:	bl	0 <opendir>
 1f4:	subs	fp, r0, #0
 1f8:	beq	3d4 <coda_match_filepath+0x2d8>
 1fc:	ldr	r3, [r5]
 200:	movw	sl, #0
 204:	movt	sl, #0
 208:	movw	r9, #0
 20c:	movt	r9, #0
 210:	str	r3, [sp, #12]
 214:	movw	r3, #0
 218:	movt	r3, #0
 21c:	str	r3, [sp, #8]
 220:	mov	r0, fp
 224:	bl	0 <readdir>
 228:	cmp	r0, #0
 22c:	mov	r1, sl
 230:	add	r4, r0, #11
 234:	beq	300 <coda_match_filepath+0x204>
 238:	mov	r0, r4
 23c:	bl	0 <strcmp>
 240:	cmp	r0, #0
 244:	mov	r1, r9
 248:	mov	r0, r4
 24c:	beq	220 <coda_match_filepath+0x124>
 250:	bl	0 <strcmp>
 254:	cmp	r0, #0
 258:	mov	r0, r5
 25c:	ldr	r1, [sp, #8]
 260:	beq	220 <coda_match_filepath+0x124>
 264:	bl	0 <append_string_to_name_buffer>
 268:	mov	r1, r4
 26c:	mov	r0, r5
 270:	bl	0 <append_string_to_name_buffer>
 274:	ldr	r1, [sp, #672]	; 0x2a0
 278:	mov	r3, r7
 27c:	mov	r2, r5
 280:	mov	r0, #1
 284:	str	r1, [sp]
 288:	mov	r1, r8
 28c:	bl	fc <coda_match_filepath>
 290:	cmp	r0, #0
 294:	bne	3c0 <coda_match_filepath+0x2c4>
 298:	ldr	r3, [r5, #8]
 29c:	ldr	r2, [sp, #12]
 2a0:	str	r2, [r5]
 2a4:	strb	r0, [r3, r2]
 2a8:	b	220 <coda_match_filepath+0x124>
 2ac:	add	r1, sp, #16
 2b0:	ldr	r0, [r5, #8]
 2b4:	bl	0 <coda_open>
 2b8:	cmp	r0, #0
 2bc:	beq	30c <coda_match_filepath+0x210>
 2c0:	ldr	r3, [pc, #388]	; 44c <coda_match_filepath+0x350>
 2c4:	mrc	15, 0, r4, cr13, cr0, {3}
 2c8:	ldr	r3, [pc, r3]
 2cc:	ldr	r0, [r4, r3]
 2d0:	cmn	r0, #21
 2d4:	beq	388 <coda_match_filepath+0x28c>
 2d8:	cmn	r0, #200	; 0xc8
 2dc:	ldr	r4, [r5, #8]
 2e0:	bne	368 <coda_match_filepath+0x26c>
 2e4:	mov	r0, r4
 2e8:	mov	r2, #0
 2ec:	ldr	r3, [sp, #672]	; 0x2a0
 2f0:	mov	r1, #3
 2f4:	blx	r7
 2f8:	mov	r6, r0
 2fc:	b	170 <coda_match_filepath+0x74>
 300:	mov	r0, fp
 304:	bl	0 <closedir>
 308:	b	170 <coda_match_filepath+0x74>
 30c:	add	r0, sp, #112	; 0x70
 310:	ldr	r1, [sp, #16]
 314:	bl	0 <coda_cursor_set_product>
 318:	subs	r4, r0, #0
 31c:	bne	3f4 <coda_match_filepath+0x2f8>
 320:	add	r1, sp, #112	; 0x70
 324:	mov	r0, r8
 328:	add	r2, sp, #20
 32c:	bl	0 <coda_expression_eval_bool>
 330:	subs	r6, r0, #0
 334:	bne	418 <coda_match_filepath+0x31c>
 338:	ldr	r0, [sp, #16]
 33c:	bl	0 <coda_close>
 340:	ldr	r1, [sp, #20]
 344:	mov	r2, r6
 348:	ldr	r0, [r5, #8]
 34c:	ldr	r3, [sp, #672]	; 0x2a0
 350:	cmp	r1, #0
 354:	movne	r1, #4
 358:	moveq	r1, #5
 35c:	blx	r7
 360:	mov	r6, r0
 364:	b	170 <coda_match_filepath+0x74>
 368:	bl	0 <coda_errno_to_string>
 36c:	mov	r2, r0
 370:	mov	r1, #1
 374:	ldr	r3, [sp, #672]	; 0x2a0
 378:	mov	r0, r4
 37c:	blx	r7
 380:	mov	r6, r0
 384:	b	170 <coda_match_filepath+0x74>
 388:	mov	r0, r9
 38c:	bl	0 <coda_set_option_use_mmap>
 390:	add	r1, sp, #16
 394:	ldr	r0, [r5, #8]
 398:	bl	0 <coda_open>
 39c:	mov	r6, r0
 3a0:	mov	r0, #1
 3a4:	bl	0 <coda_set_option_use_mmap>
 3a8:	cmp	r6, #0
 3ac:	beq	30c <coda_match_filepath+0x210>
 3b0:	ldr	r3, [pc, #152]	; 450 <coda_match_filepath+0x354>
 3b4:	ldr	r3, [pc, r3]
 3b8:	ldr	r0, [r4, r3]
 3bc:	b	2d8 <coda_match_filepath+0x1dc>
 3c0:	mov	r3, r0
 3c4:	mov	r0, fp
 3c8:	mov	r6, r3
 3cc:	bl	0 <closedir>
 3d0:	b	170 <coda_match_filepath+0x74>
 3d4:	movw	r2, #0
 3d8:	movt	r2, #0
 3dc:	ldr	r0, [r5, #8]
 3e0:	mov	r1, #2
 3e4:	ldr	r3, [sp, #672]	; 0x2a0
 3e8:	blx	r7
 3ec:	mov	r6, r0
 3f0:	b	170 <coda_match_filepath+0x74>
 3f4:	ldr	r0, [sp, #16]
 3f8:	bl	0 <coda_close>
 3fc:	ldr	r3, [pc, #80]	; 454 <coda_match_filepath+0x358>
 400:	mrc	15, 0, r2, cr13, cr0, {3}
 404:	ldr	r4, [r5, #8]
 408:	ldr	r3, [pc, r3]
 40c:	ldr	r0, [r2, r3]
 410:	bl	0 <coda_errno_to_string>
 414:	b	1d0 <coda_match_filepath+0xd4>
 418:	ldr	r3, [pc, #56]	; 458 <coda_match_filepath+0x35c>
 41c:	mrc	15, 0, r2, cr13, cr0, {3}
 420:	ldr	r5, [r5, #8]
 424:	ldr	r3, [pc, r3]
 428:	ldr	r0, [r2, r3]
 42c:	bl	0 <coda_errno_to_string>
 430:	mov	r2, r0
 434:	mov	r1, r4
 438:	ldr	r3, [sp, #672]	; 0x2a0
 43c:	mov	r0, r5
 440:	blx	r7
 444:	mov	r6, r0
 448:	b	170 <coda_match_filepath+0x74>
 44c:	.word	0x0000017c
 450:	.word	0x00000094
 454:	.word	0x00000044
 458:	.word	0x0000002c

0000045c <coda_match_filefilter>:
 45c:	clz	ip, r3
 460:	cmp	r2, #0
 464:	strd	r4, [sp, #-28]!	; 0xffffffe4
 468:	lsr	ip, ip, #5
 46c:	moveq	ip, #1
 470:	strd	r6, [sp, #8]
 474:	strd	r8, [sp, #16]
 478:	subs	r9, r1, #0
 47c:	orrle	ip, ip, #1
 480:	str	lr, [sp, #24]
 484:	sub	sp, sp, #36	; 0x24
 488:	cmp	ip, #0
 48c:	ldr	r8, [sp, #64]	; 0x40
 490:	bne	5c0 <coda_match_filefilter+0x164>
 494:	cmp	r0, #0
 498:	mov	r7, r3
 49c:	mov	r6, r2
 4a0:	beq	5ac <coda_match_filefilter+0x150>
 4a4:	ldrb	r2, [r0]
 4a8:	movw	r3, #0
 4ac:	movt	r3, #0
 4b0:	cmp	r2, #0
 4b4:	moveq	r0, r3
 4b8:	add	r1, sp, #16
 4bc:	bl	0 <coda_expression_from_string>
 4c0:	cmp	r0, #0
 4c4:	bne	5b8 <coda_match_filefilter+0x15c>
 4c8:	add	r1, sp, #12
 4cc:	ldr	r0, [sp, #16]
 4d0:	bl	0 <coda_expression_get_type>
 4d4:	subs	r5, r0, #0
 4d8:	bne	604 <coda_match_filefilter+0x1a8>
 4dc:	ldr	r3, [sp, #12]
 4e0:	cmp	r3, #0
 4e4:	bne	5e4 <coda_match_filefilter+0x188>
 4e8:	mov	r2, #1024	; 0x400
 4ec:	str	r3, [sp, #20]
 4f0:	mov	r0, r2
 4f4:	str	r2, [sp, #24]
 4f8:	bl	0 <malloc>
 4fc:	cmp	r0, #0
 500:	str	r0, [sp, #28]
 504:	subne	r6, r6, #4
 508:	beq	614 <coda_match_filefilter+0x1b8>
 50c:	add	r0, sp, #20
 510:	ldr	r1, [r6, #4]!
 514:	bl	0 <append_string_to_name_buffer>
 518:	mov	r3, r7
 51c:	add	r2, sp, #20
 520:	str	r8, [sp]
 524:	mov	r0, #0
 528:	ldr	r1, [sp, #16]
 52c:	bl	fc <coda_match_filepath>
 530:	subs	r4, r0, #0
 534:	bne	588 <coda_match_filefilter+0x12c>
 538:	ldr	r3, [sp, #28]
 53c:	add	r5, r5, #1
 540:	cmp	r9, r5
 544:	str	r4, [sp, #20]
 548:	strb	r4, [r3]
 54c:	bgt	50c <coda_match_filefilter+0xb0>
 550:	ldr	r0, [sp, #28]
 554:	str	r4, [sp, #20]
 558:	str	r4, [sp, #24]
 55c:	bl	0 <free>
 560:	ldr	r0, [sp, #16]
 564:	str	r4, [sp, #28]
 568:	bl	0 <coda_expression_delete>
 56c:	mov	r0, r4
 570:	add	sp, sp, #36	; 0x24
 574:	ldrd	r4, [sp]
 578:	ldrd	r6, [sp, #8]
 57c:	ldrd	r8, [sp, #16]
 580:	add	sp, sp, #24
 584:	pop	{pc}		; (ldr pc, [sp], #4)
 588:	mov	r5, #0
 58c:	ldr	r0, [sp, #28]
 590:	str	r5, [sp, #20]
 594:	str	r5, [sp, #24]
 598:	bl	0 <free>
 59c:	ldr	r0, [sp, #16]
 5a0:	str	r5, [sp, #28]
 5a4:	bl	0 <coda_expression_delete>
 5a8:	b	56c <coda_match_filefilter+0x110>
 5ac:	movw	r0, #0
 5b0:	movt	r0, #0
 5b4:	b	4b8 <coda_match_filefilter+0x5c>
 5b8:	mvn	r4, #0
 5bc:	b	56c <coda_match_filefilter+0x110>
 5c0:	movw	r2, #0
 5c4:	movt	r2, #0
 5c8:	movw	r1, #0
 5cc:	movt	r1, #0
 5d0:	movw	r3, #386	; 0x182
 5d4:	mvn	r0, #99	; 0x63
 5d8:	bl	0 <coda_set_error>
 5dc:	mvn	r4, #0
 5e0:	b	56c <coda_match_filefilter+0x110>
 5e4:	mvn	r0, #400	; 0x190
 5e8:	movw	r1, #0
 5ec:	movt	r1, #0
 5f0:	mvn	r4, #0
 5f4:	bl	0 <coda_set_error>
 5f8:	ldr	r0, [sp, #16]
 5fc:	bl	0 <coda_expression_delete>
 600:	b	56c <coda_match_filefilter+0x110>
 604:	ldr	r0, [sp, #16]
 608:	mvn	r4, #0
 60c:	bl	0 <coda_expression_delete>
 610:	b	56c <coda_match_filefilter+0x110>
 614:	movw	r1, #0
 618:	movt	r1, #0
 61c:	ldr	r3, [pc, #12]	; 630 <coda_match_filefilter+0x1d4>
 620:	movw	r0, #0
 624:	movt	r0, #0
 628:	mov	r2, #67	; 0x43
 62c:	bl	0 <__assert_fail>
 630:	.word	0x00000020
