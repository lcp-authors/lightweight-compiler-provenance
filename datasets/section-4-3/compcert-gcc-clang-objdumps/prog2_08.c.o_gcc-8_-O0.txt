
../compcert-repos/prog2/CMakeFiles/0.8.dir/Aula00_Conceitos_base/08.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <lerpontuacoes>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-16]
  14:	str	r1, [fp, #-20]	; 0xffffffec
  18:	sub	r3, fp, #12
  1c:	mov	r1, r3
  20:	movw	r0, #0
  24:	movt	r0, #0
  28:	bl	0 <__isoc99_scanf>
  2c:	mov	r3, #0
  30:	str	r3, [fp, #-8]
  34:	b	78 <lerpontuacoes+0x78>
  38:	ldr	r3, [fp, #-8]
  3c:	mov	r2, #50	; 0x32
  40:	mul	r3, r2, r3
  44:	ldr	r2, [fp, #-16]
  48:	add	r1, r2, r3
  4c:	ldr	r3, [fp, #-8]
  50:	lsl	r3, r3, #2
  54:	ldr	r2, [fp, #-20]	; 0xffffffec
  58:	add	r3, r2, r3
  5c:	mov	r2, r3
  60:	movw	r0, #0
  64:	movt	r0, #0
  68:	bl	0 <__isoc99_scanf>
  6c:	ldr	r3, [fp, #-8]
  70:	add	r3, r3, #1
  74:	str	r3, [fp, #-8]
  78:	ldr	r3, [fp, #-12]
  7c:	ldr	r2, [fp, #-8]
  80:	cmp	r2, r3
  84:	blt	38 <lerpontuacoes+0x38>
  88:	ldr	r3, [fp, #-12]
  8c:	mov	r0, r3
  90:	sub	sp, fp, #4
  94:	ldr	fp, [sp]
  98:	add	sp, sp, #4
  9c:	pop	{pc}		; (ldr pc, [sp], #4)

000000a0 <primeiroUltimo>:
  a0:	str	fp, [sp, #-8]!
  a4:	str	lr, [sp, #4]
  a8:	add	fp, sp, #4
  ac:	sub	sp, sp, #32
  b0:	str	r0, [fp, #-24]	; 0xffffffe8
  b4:	str	r1, [fp, #-28]	; 0xffffffe4
  b8:	str	r2, [fp, #-32]	; 0xffffffe0
  bc:	str	r3, [fp, #-36]	; 0xffffffdc
  c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
  c4:	ldr	r3, [r3]
  c8:	str	r3, [fp, #-12]
  cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
  d0:	ldr	r3, [r3]
  d4:	str	r3, [fp, #-16]
  d8:	mov	r3, #1
  dc:	str	r3, [fp, #-8]
  e0:	b	1a0 <primeiroUltimo+0x100>
  e4:	ldr	r3, [fp, #-8]
  e8:	lsl	r3, r3, #2
  ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
  f0:	add	r3, r2, r3
  f4:	ldr	r3, [r3]
  f8:	ldr	r2, [fp, #-12]
  fc:	cmp	r2, r3
 100:	bge	13c <primeiroUltimo+0x9c>
 104:	ldr	r3, [fp, #-8]
 108:	lsl	r3, r3, #2
 10c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 110:	add	r3, r2, r3
 114:	ldr	r3, [r3]
 118:	str	r3, [fp, #-12]
 11c:	ldr	r3, [fp, #-8]
 120:	mov	r2, #50	; 0x32
 124:	mul	r3, r2, r3
 128:	ldr	r2, [fp, #-24]	; 0xffffffe8
 12c:	add	r3, r2, r3
 130:	mov	r1, r3
 134:	ldr	r0, [fp, #-36]	; 0xffffffdc
 138:	bl	0 <strcpy>
 13c:	ldr	r3, [fp, #-8]
 140:	lsl	r3, r3, #2
 144:	ldr	r2, [fp, #-28]	; 0xffffffe4
 148:	add	r3, r2, r3
 14c:	ldr	r3, [r3]
 150:	ldr	r2, [fp, #-16]
 154:	cmp	r2, r3
 158:	ble	194 <primeiroUltimo+0xf4>
 15c:	ldr	r3, [fp, #-8]
 160:	lsl	r3, r3, #2
 164:	ldr	r2, [fp, #-28]	; 0xffffffe4
 168:	add	r3, r2, r3
 16c:	ldr	r3, [r3]
 170:	str	r3, [fp, #-16]
 174:	ldr	r3, [fp, #-8]
 178:	mov	r2, #50	; 0x32
 17c:	mul	r3, r2, r3
 180:	ldr	r2, [fp, #-24]	; 0xffffffe8
 184:	add	r3, r2, r3
 188:	mov	r1, r3
 18c:	ldr	r0, [fp, #4]
 190:	bl	0 <strcpy>
 194:	ldr	r3, [fp, #-8]
 198:	add	r3, r3, #1
 19c:	str	r3, [fp, #-8]
 1a0:	ldr	r2, [fp, #-8]
 1a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 1a8:	cmp	r2, r3
 1ac:	blt	e4 <primeiroUltimo+0x44>
 1b0:	nop	{0}
 1b4:	sub	sp, fp, #4
 1b8:	ldr	fp, [sp]
 1bc:	add	sp, sp, #4
 1c0:	pop	{pc}		; (ldr pc, [sp], #4)

000001c4 <main>:
 1c4:	str	fp, [sp, #-8]!
 1c8:	str	lr, [sp, #4]
 1cc:	add	fp, sp, #4
 1d0:	sub	sp, sp, #1200	; 0x4b0
 1d4:	sub	r3, fp, #88	; 0x58
 1d8:	mov	r2, #80	; 0x50
 1dc:	mov	r1, #0
 1e0:	mov	r0, r3
 1e4:	bl	0 <memset>
 1e8:	sub	r3, fp, #1072	; 0x430
 1ec:	sub	r3, r3, #4
 1f0:	sub	r3, r3, #12
 1f4:	mov	r2, #1000	; 0x3e8
 1f8:	mov	r1, #0
 1fc:	mov	r0, r3
 200:	bl	0 <memset>
 204:	sub	r3, fp, #1136	; 0x470
 208:	sub	r3, r3, #4
 20c:	mov	r2, #50	; 0x32
 210:	mov	r1, #0
 214:	mov	r0, r3
 218:	bl	0 <memset>
 21c:	sub	r3, fp, #1184	; 0x4a0
 220:	sub	r3, r3, #4
 224:	sub	r3, r3, #4
 228:	mov	r2, #50	; 0x32
 22c:	mov	r1, #0
 230:	mov	r0, r3
 234:	bl	0 <memset>
 238:	sub	r2, fp, #88	; 0x58
 23c:	sub	r3, fp, #1072	; 0x430
 240:	sub	r3, r3, #4
 244:	sub	r3, r3, #12
 248:	mov	r1, r2
 24c:	mov	r0, r3
 250:	bl	0 <lerpontuacoes>
 254:	str	r0, [fp, #-8]
 258:	sub	r2, fp, #1136	; 0x470
 25c:	sub	r2, r2, #4
 260:	sub	r1, fp, #88	; 0x58
 264:	sub	r0, fp, #1072	; 0x430
 268:	sub	r0, r0, #4
 26c:	sub	r0, r0, #12
 270:	sub	r3, fp, #1184	; 0x4a0
 274:	sub	r3, r3, #4
 278:	sub	r3, r3, #4
 27c:	str	r3, [sp]
 280:	mov	r3, r2
 284:	ldr	r2, [fp, #-8]
 288:	bl	a0 <primeiroUltimo>
 28c:	ldr	r1, [fp, #-8]
 290:	movw	r0, #0
 294:	movt	r0, #0
 298:	bl	0 <printf>
 29c:	sub	r3, fp, #1136	; 0x470
 2a0:	sub	r3, r3, #4
 2a4:	mov	r1, r3
 2a8:	movw	r0, #0
 2ac:	movt	r0, #0
 2b0:	bl	0 <printf>
 2b4:	sub	r3, fp, #1184	; 0x4a0
 2b8:	sub	r3, r3, #4
 2bc:	sub	r3, r3, #4
 2c0:	mov	r1, r3
 2c4:	movw	r0, #0
 2c8:	movt	r0, #0
 2cc:	bl	0 <printf>
 2d0:	mov	r3, #0
 2d4:	mov	r0, r3
 2d8:	sub	sp, fp, #4
 2dc:	ldr	fp, [sp]
 2e0:	add	sp, sp, #4
 2e4:	pop	{pc}		; (ldr pc, [sp], #4)
