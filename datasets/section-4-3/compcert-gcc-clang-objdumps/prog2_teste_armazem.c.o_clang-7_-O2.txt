
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/teste_armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #4
   c:	vpush	{d8}
  10:	sub	sp, sp, #40	; 0x28
  14:	mov	r0, #4
  18:	mov	r1, #3
  1c:	bl	0 <armazem_novo>
  20:	mov	r4, r0
  24:	movw	r0, #0
  28:	movt	r0, #0
  2c:	bl	0 <puts>
  30:	vldr	s0, [pc, #840]	; 380 <main+0x380>
  34:	movw	r0, #0
  38:	movt	r0, #0
  3c:	bl	0 <contentor_novo>
  40:	vldr	s0, [pc, #828]	; 384 <main+0x384>
  44:	mov	r8, r0
  48:	movw	r0, #0
  4c:	movt	r0, #0
  50:	bl	0 <contentor_novo>
  54:	vldr	s0, [pc, #812]	; 388 <main+0x388>
  58:	mov	sl, r0
  5c:	movw	r0, #0
  60:	movt	r0, #0
  64:	bl	0 <contentor_novo>
  68:	vldr	s0, [pc, #796]	; 38c <main+0x38c>
  6c:	str	r0, [sp, #24]
  70:	movw	r0, #0
  74:	movt	r0, #0
  78:	bl	0 <contentor_novo>
  7c:	vldr	s16, [pc, #780]	; 390 <main+0x390>
  80:	mov	r5, r0
  84:	movw	r0, #0
  88:	movt	r0, #0
  8c:	vmov.f32	s0, s16
  90:	bl	0 <contentor_novo>
  94:	vldr	s0, [pc, #760]	; 394 <main+0x394>
  98:	str	r0, [sp, #8]
  9c:	movw	r0, #0
  a0:	movt	r0, #0
  a4:	bl	0 <contentor_novo>
  a8:	vldr	s0, [pc, #744]	; 398 <main+0x398>
  ac:	str	r0, [sp, #16]
  b0:	movw	r0, #0
  b4:	movt	r0, #0
  b8:	bl	0 <contentor_novo>
  bc:	vldr	s0, [pc, #728]	; 39c <main+0x39c>
  c0:	str	r0, [sp, #20]
  c4:	movw	r0, #0
  c8:	movt	r0, #0
  cc:	bl	0 <contentor_novo>
  d0:	str	r0, [sp, #12]
  d4:	movw	r0, #0
  d8:	vmov.f32	s0, s16
  dc:	movt	r0, #0
  e0:	bl	0 <contentor_novo>
  e4:	vldr	s0, [pc, #692]	; 3a0 <main+0x3a0>
  e8:	mov	r9, r0
  ec:	movw	r0, #0
  f0:	movt	r0, #0
  f4:	bl	0 <contentor_novo>
  f8:	vldr	s0, [pc, #676]	; 3a4 <main+0x3a4>
  fc:	mov	r7, r0
 100:	movw	r0, #0
 104:	movt	r0, #0
 108:	bl	0 <contentor_novo>
 10c:	vldr	s0, [pc, #660]	; 3a8 <main+0x3a8>
 110:	str	r0, [sp, #28]
 114:	movw	r0, #0
 118:	movt	r0, #0
 11c:	bl	0 <contentor_novo>
 120:	vldr	s0, [pc, #644]	; 3ac <main+0x3ac>
 124:	str	r0, [sp, #32]
 128:	movw	r0, #0
 12c:	movt	r0, #0
 130:	bl	0 <contentor_novo>
 134:	str	r0, [sp, #36]	; 0x24
 138:	movw	r0, #0
 13c:	movt	r0, #0
 140:	bl	0 <puts>
 144:	mov	r0, r4
 148:	bl	5b4 <imprimeArmazem>
 14c:	movw	r0, #0
 150:	movt	r0, #0
 154:	bl	0 <puts>
 158:	mov	r0, r4
 15c:	mov	r1, r8
 160:	bl	0 <armazenar_contentor>
 164:	cmp	r0, #0
 168:	beq	17c <main+0x17c>
 16c:	ldr	r1, [r8]
 170:	movw	r0, #0
 174:	movt	r0, #0
 178:	bl	0 <printf>
 17c:	mov	r0, r4
 180:	mov	r1, sl
 184:	bl	0 <armazenar_contentor>
 188:	cmp	r0, #0
 18c:	beq	1a0 <main+0x1a0>
 190:	ldr	r1, [sl]
 194:	movw	r0, #0
 198:	movt	r0, #0
 19c:	bl	0 <printf>
 1a0:	ldr	r8, [sp, #24]
 1a4:	mov	r0, r4
 1a8:	mov	r1, r8
 1ac:	bl	0 <armazenar_contentor>
 1b0:	cmp	r0, #0
 1b4:	str	r7, [sp, #4]
 1b8:	beq	1cc <main+0x1cc>
 1bc:	ldr	r1, [r8]
 1c0:	movw	r0, #0
 1c4:	movt	r0, #0
 1c8:	bl	0 <printf>
 1cc:	mov	r0, r4
 1d0:	mov	r1, r5
 1d4:	bl	0 <armazenar_contentor>
 1d8:	ldr	r7, [sp, #12]
 1dc:	cmp	r0, #0
 1e0:	beq	1f4 <main+0x1f4>
 1e4:	ldr	r1, [r5]
 1e8:	movw	r0, #0
 1ec:	movt	r0, #0
 1f0:	bl	0 <printf>
 1f4:	movw	r0, #0
 1f8:	movt	r0, #0
 1fc:	bl	0 <puts>
 200:	mov	r0, r4
 204:	bl	5b4 <imprimeArmazem>
 208:	movw	r0, #0
 20c:	movt	r0, #0
 210:	bl	0 <puts>
 214:	ldr	r5, [sp, #8]
 218:	mov	r0, r4
 21c:	mov	r1, r5
 220:	bl	0 <armazenar_contentor>
 224:	ldr	r6, [sp, #20]
 228:	cmp	r0, #0
 22c:	beq	240 <main+0x240>
 230:	ldr	r1, [r5]
 234:	movw	r0, #0
 238:	movt	r0, #0
 23c:	bl	0 <printf>
 240:	ldr	sl, [sp, #16]
 244:	mov	r0, r4
 248:	mov	r1, sl
 24c:	bl	0 <armazenar_contentor>
 250:	ldr	r5, [sp, #32]
 254:	cmp	r0, #0
 258:	beq	26c <main+0x26c>
 25c:	ldr	r1, [sl]
 260:	movw	r0, #0
 264:	movt	r0, #0
 268:	bl	0 <printf>
 26c:	mov	r0, r4
 270:	mov	r1, r6
 274:	bl	0 <armazenar_contentor>
 278:	cmp	r0, #0
 27c:	mov	r0, r6
 280:	ldr	r6, [sp, #28]
 284:	beq	298 <main+0x298>
 288:	ldr	r1, [r0]
 28c:	movw	r0, #0
 290:	movt	r0, #0
 294:	bl	0 <printf>
 298:	mov	r0, r4
 29c:	mov	r1, r7
 2a0:	bl	0 <armazenar_contentor>
 2a4:	cmp	r0, #0
 2a8:	beq	2bc <main+0x2bc>
 2ac:	ldr	r1, [r7]
 2b0:	movw	r0, #0
 2b4:	movt	r0, #0
 2b8:	bl	0 <printf>
 2bc:	mov	r0, r4
 2c0:	mov	r1, r9
 2c4:	bl	0 <armazenar_contentor>
 2c8:	cmp	r0, #0
 2cc:	beq	2e0 <main+0x2e0>
 2d0:	ldr	r1, [r9]
 2d4:	movw	r0, #0
 2d8:	movt	r0, #0
 2dc:	bl	0 <printf>
 2e0:	ldr	r7, [sp, #4]
 2e4:	mov	r0, r4
 2e8:	mov	r1, r7
 2ec:	bl	0 <armazenar_contentor>
 2f0:	cmp	r0, #0
 2f4:	beq	308 <main+0x308>
 2f8:	ldr	r1, [r7]
 2fc:	movw	r0, #0
 300:	movt	r0, #0
 304:	bl	0 <printf>
 308:	mov	r0, r4
 30c:	mov	r1, r6
 310:	bl	0 <armazenar_contentor>
 314:	cmp	r0, #0
 318:	beq	32c <main+0x32c>
 31c:	ldr	r1, [r6]
 320:	movw	r0, #0
 324:	movt	r0, #0
 328:	bl	0 <printf>
 32c:	mov	r0, r4
 330:	mov	r1, r5
 334:	bl	0 <armazenar_contentor>
 338:	cmp	r0, #0
 33c:	beq	350 <main+0x350>
 340:	ldr	r1, [r5]
 344:	movw	r0, #0
 348:	movt	r0, #0
 34c:	bl	0 <printf>
 350:	movw	r0, #0
 354:	movt	r0, #0
 358:	bl	0 <puts>
 35c:	mov	r0, r4
 360:	bl	5b4 <imprimeArmazem>
 364:	mov	r0, r4
 368:	bl	0 <armazem_cheio>
 36c:	cmp	r0, #0
 370:	beq	3b0 <main+0x3b0>
 374:	movw	r0, #0
 378:	movt	r0, #0
 37c:	b	3b8 <main+0x3b8>
 380:	.word	0x43660000
 384:	.word	0x437a0000
 388:	.word	0x44048000
 38c:	.word	0x44318000
 390:	.word	0x43be0000
 394:	.word	0x43c30000
 398:	.word	0x42c80000
 39c:	.word	0x42a00000
 3a0:	.word	0x43160000
 3a4:	.word	0x43870000
 3a8:	.word	0x43d70000
 3ac:	.word	0x43480000
 3b0:	movw	r0, #0
 3b4:	movt	r0, #0
 3b8:	bl	0 <puts>
 3bc:	ldr	r1, [sp, #36]	; 0x24
 3c0:	mov	r0, r4
 3c4:	bl	0 <armazenar_contentor>
 3c8:	cmp	r0, #0
 3cc:	beq	3e0 <main+0x3e0>
 3d0:	ldr	r1, [r8]
 3d4:	movw	r0, #0
 3d8:	movt	r0, #0
 3dc:	bl	0 <printf>
 3e0:	movw	r0, #0
 3e4:	movt	r0, #0
 3e8:	bl	0 <puts>
 3ec:	mov	r0, r4
 3f0:	bl	0 <expedir_contentor>
 3f4:	movw	r5, #0
 3f8:	mov	r6, r0
 3fc:	movt	r5, #0
 400:	mov	r0, r5
 404:	bl	0 <puts>
 408:	mov	r0, r6
 40c:	bl	0 <contentor_imprime>
 410:	mov	r0, r4
 414:	bl	0 <expedir_contentor>
 418:	mov	r6, r0
 41c:	mov	r0, r5
 420:	bl	0 <puts>
 424:	mov	r0, r6
 428:	bl	0 <contentor_imprime>
 42c:	mov	r0, r4
 430:	bl	0 <expedir_contentor>
 434:	mov	r6, r0
 438:	mov	r0, r5
 43c:	bl	0 <puts>
 440:	mov	r0, r6
 444:	bl	0 <contentor_imprime>
 448:	mov	r0, r4
 44c:	bl	0 <expedir_contentor>
 450:	mov	r6, r0
 454:	mov	r0, r5
 458:	bl	0 <puts>
 45c:	mov	r0, r6
 460:	bl	0 <contentor_imprime>
 464:	mov	r0, r4
 468:	bl	0 <expedir_contentor>
 46c:	mov	r6, r0
 470:	mov	r0, r5
 474:	bl	0 <puts>
 478:	mov	r0, r6
 47c:	bl	0 <contentor_imprime>
 480:	mov	r0, r4
 484:	bl	0 <expedir_contentor>
 488:	mov	r6, r0
 48c:	mov	r0, r5
 490:	bl	0 <puts>
 494:	mov	r0, r6
 498:	bl	0 <contentor_imprime>
 49c:	mov	r0, r4
 4a0:	bl	0 <expedir_contentor>
 4a4:	mov	r6, r0
 4a8:	mov	r0, r5
 4ac:	bl	0 <puts>
 4b0:	mov	r0, r6
 4b4:	bl	0 <contentor_imprime>
 4b8:	mov	r0, r4
 4bc:	bl	0 <expedir_contentor>
 4c0:	mov	r6, r0
 4c4:	mov	r0, r5
 4c8:	bl	0 <puts>
 4cc:	mov	r0, r6
 4d0:	bl	0 <contentor_imprime>
 4d4:	movw	r0, #0
 4d8:	movt	r0, #0
 4dc:	bl	0 <puts>
 4e0:	mov	r0, r4
 4e4:	bl	5b4 <imprimeArmazem>
 4e8:	movw	r0, #0
 4ec:	movt	r0, #0
 4f0:	bl	0 <puts>
 4f4:	mov	r0, r4
 4f8:	bl	0 <expedir_contentor>
 4fc:	mov	r6, r0
 500:	mov	r0, r5
 504:	bl	0 <puts>
 508:	mov	r0, r6
 50c:	bl	0 <contentor_imprime>
 510:	mov	r0, r4
 514:	bl	0 <expedir_contentor>
 518:	mov	r6, r0
 51c:	mov	r0, r5
 520:	bl	0 <puts>
 524:	mov	r0, r6
 528:	bl	0 <contentor_imprime>
 52c:	mov	r0, r4
 530:	bl	0 <expedir_contentor>
 534:	mov	r6, r0
 538:	mov	r0, r5
 53c:	bl	0 <puts>
 540:	mov	r0, r6
 544:	bl	0 <contentor_imprime>
 548:	mov	r0, r4
 54c:	bl	0 <expedir_contentor>
 550:	mov	r6, r0
 554:	mov	r0, r5
 558:	bl	0 <puts>
 55c:	mov	r0, r6
 560:	bl	0 <contentor_imprime>
 564:	movw	r0, #0
 568:	movt	r0, #0
 56c:	bl	0 <puts>
 570:	mov	r0, r4
 574:	bl	5b4 <imprimeArmazem>
 578:	mov	r0, r4
 57c:	bl	0 <armazem_vazio>
 580:	cmp	r0, #0
 584:	beq	594 <main+0x594>
 588:	movw	r0, #0
 58c:	movt	r0, #0
 590:	b	59c <main+0x59c>
 594:	movw	r0, #0
 598:	movt	r0, #0
 59c:	bl	0 <puts>
 5a0:	mov	r0, #0
 5a4:	sub	sp, fp, #40	; 0x28
 5a8:	vpop	{d8}
 5ac:	add	sp, sp, #4
 5b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000005b4 <imprimeArmazem>:
 5b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 5b8:	add	fp, sp, #28
 5bc:	sub	sp, sp, #4
 5c0:	cmp	r0, #0
 5c4:	beq	6dc <imprimeArmazem+0x128>
 5c8:	ldr	r4, [r0, #8]
 5cc:	mov	sl, r0
 5d0:	cmp	r4, #0
 5d4:	beq	6dc <imprimeArmazem+0x128>
 5d8:	ldr	r8, [r4, #4]
 5dc:	mov	r1, #4
 5e0:	mov	r0, r8
 5e4:	bl	0 <calloc>
 5e8:	str	r0, [sp]
 5ec:	ldr	r0, [r4]
 5f0:	cmp	r0, #0
 5f4:	beq	614 <imprimeArmazem+0x60>
 5f8:	ldr	r1, [sp]
 5fc:	ldr	r2, [r0]
 600:	ldr	r2, [r2, #4]
 604:	str	r2, [r1], #4
 608:	ldr	r0, [r0, #4]
 60c:	cmp	r0, #0
 610:	bne	5fc <imprimeArmazem+0x48>
 614:	mov	r0, #10
 618:	bl	0 <putchar>
 61c:	ldr	r4, [sl, #4]
 620:	cmp	r4, #1
 624:	blt	684 <imprimeArmazem+0xd0>
 628:	movw	r5, #0
 62c:	movw	r7, #0
 630:	movt	r5, #0
 634:	movt	r7, #0
 638:	movw	r0, #0
 63c:	movt	r0, #0
 640:	bl	0 <printf>
 644:	cmp	r8, #1
 648:	blt	674 <imprimeArmazem+0xc0>
 64c:	ldr	r9, [sp]
 650:	mov	r6, r8
 654:	ldr	r0, [r9]
 658:	cmp	r0, r4
 65c:	movlt	r0, r5
 660:	movge	r0, r7
 664:	bl	0 <printf>
 668:	subs	r6, r6, #1
 66c:	add	r9, r9, #4
 670:	bne	654 <imprimeArmazem+0xa0>
 674:	mov	r0, #10
 678:	bl	0 <putchar>
 67c:	subs	r4, r4, #1
 680:	bgt	638 <imprimeArmazem+0x84>
 684:	movw	r0, #0
 688:	movt	r0, #0
 68c:	bl	0 <printf>
 690:	ldr	r0, [sl]
 694:	cmp	r0, #1
 698:	blt	6c0 <imprimeArmazem+0x10c>
 69c:	movw	r5, #0
 6a0:	mov	r4, #0
 6a4:	movt	r5, #0
 6a8:	mov	r0, r5
 6ac:	bl	0 <printf>
 6b0:	ldr	r0, [sl]
 6b4:	add	r4, r4, #1
 6b8:	cmp	r4, r0
 6bc:	blt	6a8 <imprimeArmazem+0xf4>
 6c0:	movw	r0, #0
 6c4:	movt	r0, #0
 6c8:	bl	0 <puts>
 6cc:	ldr	r0, [sp]
 6d0:	sub	sp, fp, #28
 6d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6d8:	b	0 <free>
 6dc:	sub	sp, fp, #28
 6e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
