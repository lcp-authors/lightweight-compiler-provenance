
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cdf-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_cdf_type_delete>:
   0:	push	{r4, sl, fp, lr}
   4:	add	fp, sp, #8
   8:	cmp	r0, #0
   c:	beq	a4 <coda_cdf_type_delete+0xa4>
  10:	mov	r4, r0
  14:	ldr	r0, [r0]
  18:	cmp	r0, #103	; 0x67
  1c:	bne	bc <coda_cdf_type_delete+0xbc>
  20:	ldr	r0, [r4, #8]
  24:	cmp	r0, #2
  28:	beq	48 <coda_cdf_type_delete+0x48>
  2c:	cmp	r0, #1
  30:	bne	88 <coda_cdf_type_delete+0x88>
  34:	ldr	r0, [r4, #12]
  38:	cmp	r0, #0
  3c:	beq	88 <coda_cdf_type_delete+0x88>
  40:	bl	0 <coda_dynamic_type_delete>
  44:	b	88 <coda_cdf_type_delete+0x88>
  48:	ldr	r0, [r4, #12]
  4c:	cmp	r0, #0
  50:	beq	58 <coda_cdf_type_delete+0x58>
  54:	bl	0 <coda_dynamic_type_delete>
  58:	ldr	r0, [r4, #16]
  5c:	cmp	r0, #0
  60:	beq	68 <coda_cdf_type_delete+0x68>
  64:	bl	0 <coda_dynamic_type_delete>
  68:	ldr	r0, [r4, #36]	; 0x24
  6c:	cmp	r0, #0
  70:	beq	78 <coda_cdf_type_delete+0x78>
  74:	bl	0 <free>
  78:	ldr	r0, [r4, #40]	; 0x28
  7c:	cmp	r0, #0
  80:	beq	88 <coda_cdf_type_delete+0x88>
  84:	bl	0 <free>
  88:	ldr	r0, [r4, #4]
  8c:	cmp	r0, #0
  90:	beq	98 <coda_cdf_type_delete+0x98>
  94:	bl	0 <coda_type_release>
  98:	mov	r0, r4
  9c:	pop	{r4, sl, fp, lr}
  a0:	b	0 <free>
  a4:	movw	r0, #0
  a8:	movw	r1, #0
  ac:	movw	r3, #0
  b0:	mov	r2, #39	; 0x27
  b4:	movt	r0, #0
  b8:	b	d0 <coda_cdf_type_delete+0xd0>
  bc:	movw	r0, #0
  c0:	movw	r1, #0
  c4:	movw	r3, #0
  c8:	mov	r2, #40	; 0x28
  cc:	movt	r0, #0
  d0:	movt	r1, #0
  d4:	movt	r3, #0
  d8:	bl	0 <__assert_fail>

000000dc <coda_cdf_variable_new>:
  dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  e0:	add	fp, sp, #28
  e4:	sub	sp, sp, #12
  e8:	mov	r7, r3
  ec:	mov	r6, r2
  f0:	mov	sl, r1
  f4:	mov	r5, r0
  f8:	cmp	r1, #0
  fc:	beq	108 <coda_cdf_variable_new+0x2c>
 100:	cmp	r6, #0
 104:	beq	484 <coda_cdf_variable_new+0x3a8>
 108:	mov	r0, #44	; 0x2c
 10c:	bl	0 <malloc>
 110:	cmp	r0, #0
 114:	beq	1b0 <coda_cdf_variable_new+0xd4>
 118:	mov	r4, r0
 11c:	ldr	r0, [fp, #24]
 120:	ldr	ip, [fp, #12]
 124:	mov	r9, #0
 128:	cmp	r6, #0
 12c:	mvn	r3, #0
 130:	mov	r1, #2
 134:	mov	r2, #103	; 0x67
 138:	str	r0, [r4, #32]
 13c:	mov	r0, #1
 140:	str	r9, [r4, #36]	; 0x24
 144:	str	r9, [r4, #40]	; 0x28
 148:	stm	r4, {r2, r9}
 14c:	str	r1, [r4, #8]
 150:	str	r9, [r4, #12]
 154:	str	r9, [r4, #16]
 158:	str	r0, [r4, #20]
 15c:	str	r0, [r4, #24]
 160:	str	r3, [r4, #28]
 164:	bne	194 <coda_cdf_variable_new+0xb8>
 168:	cmp	r7, #1
 16c:	blt	190 <coda_cdf_variable_new+0xb4>
 170:	mov	r0, ip
 174:	mov	r1, r7
 178:	ldr	r2, [r0]
 17c:	cmp	r2, #0
 180:	bne	194 <coda_cdf_variable_new+0xb8>
 184:	add	r0, r0, #4
 188:	subs	r1, r1, #1
 18c:	bne	178 <coda_cdf_variable_new+0x9c>
 190:	mov	r9, #1
 194:	cmp	r5, #33	; 0x21
 198:	str	r7, [sp, #4]
 19c:	beq	1dc <coda_cdf_variable_new+0x100>
 1a0:	cmp	r5, #31
 1a4:	bne	1e8 <coda_cdf_variable_new+0x10c>
 1a8:	mov	r7, #45	; 0x2d
 1ac:	b	1e0 <coda_cdf_variable_new+0x104>
 1b0:	movw	r1, #0
 1b4:	movw	r3, #0
 1b8:	movw	r0, #274	; 0x112
 1bc:	mov	r2, #44	; 0x2c
 1c0:	movt	r1, #0
 1c4:	movt	r3, #0
 1c8:	str	r0, [sp]
 1cc:	mvn	r0, #0
 1d0:	bl	0 <coda_set_error>
 1d4:	mov	r5, #0
 1d8:	b	318 <coda_cdf_variable_new+0x23c>
 1dc:	mov	r7, #8
 1e0:	str	r5, [sp, #8]
 1e4:	b	1f4 <coda_cdf_variable_new+0x118>
 1e8:	mvn	r0, #0
 1ec:	mov	r7, r5
 1f0:	str	r0, [sp, #8]
 1f4:	ldr	r8, [fp, #20]
 1f8:	cmp	r9, #0
 1fc:	beq	228 <coda_cdf_variable_new+0x14c>
 200:	mov	r0, r4
 204:	mov	r1, r7
 208:	mov	r2, r8
 20c:	bl	4a4 <basic_type_init>
 210:	cmp	r0, #0
 214:	beq	274 <coda_cdf_variable_new+0x198>
 218:	mov	r0, r4
 21c:	bl	0 <coda_cdf_type_delete>
 220:	mov	r5, #0
 224:	b	318 <coda_cdf_variable_new+0x23c>
 228:	mov	r0, #12
 22c:	bl	0 <malloc>
 230:	cmp	r0, #0
 234:	beq	2e4 <coda_cdf_variable_new+0x208>
 238:	mov	r5, r0
 23c:	mov	r1, #103	; 0x67
 240:	mov	r0, #0
 244:	mov	r2, r8
 248:	str	r1, [r5]
 24c:	str	r0, [r5, #4]
 250:	str	r0, [r5, #8]
 254:	mov	r0, r5
 258:	mov	r1, r7
 25c:	bl	4a4 <basic_type_init>
 260:	cmp	r0, #0
 264:	beq	34c <coda_cdf_variable_new+0x270>
 268:	mov	r0, r5
 26c:	bl	0 <coda_cdf_type_delete>
 270:	b	308 <coda_cdf_variable_new+0x22c>
 274:	ldr	r0, [r4, #4]
 278:	ldrd	r0, [r0, #24]
 27c:	asr	r2, r1, #31
 280:	adds	r0, r0, r2, lsr #29
 284:	adc	r1, r1, #0
 288:	lsr	r0, r0, #3
 28c:	orr	r0, r0, r1, lsl #29
 290:	str	r0, [r4, #28]
 294:	ldr	r7, [r4, #20]
 298:	lsl	r5, r7, #3
 29c:	mov	r0, r5
 2a0:	bl	0 <malloc>
 2a4:	cmp	r0, #0
 2a8:	str	r0, [r4, #36]	; 0x24
 2ac:	beq	324 <coda_cdf_variable_new+0x248>
 2b0:	ldr	r6, [fp, #28]
 2b4:	cmp	r7, #1
 2b8:	blt	2c8 <coda_cdf_variable_new+0x1ec>
 2bc:	mov	r1, #255	; 0xff
 2c0:	mov	r2, r5
 2c4:	bl	0 <memset>
 2c8:	ldr	r0, [sp, #8]
 2cc:	cmp	r9, #0
 2d0:	str	r4, [r6]
 2d4:	cmnne	r0, #1
 2d8:	bne	458 <coda_cdf_variable_new+0x37c>
 2dc:	mov	r5, r4
 2e0:	b	318 <coda_cdf_variable_new+0x23c>
 2e4:	movw	r1, #0
 2e8:	movw	r3, #0
 2ec:	mov	r0, #191	; 0xbf
 2f0:	mov	r2, #12
 2f4:	movt	r1, #0
 2f8:	movt	r3, #0
 2fc:	str	r0, [sp]
 300:	mvn	r0, #0
 304:	bl	0 <coda_set_error>
 308:	mov	r5, #0
 30c:	mov	r0, r4
 310:	str	r5, [r4, #16]
 314:	bl	0 <coda_cdf_type_delete>
 318:	mov	r0, r5
 31c:	sub	sp, fp, #28
 320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 324:	movw	r1, #0
 328:	movw	r3, #0
 32c:	mov	r0, #392	; 0x188
 330:	mov	r2, r5
 334:	movt	r1, #0
 338:	movt	r3, #0
 33c:	str	r0, [sp]
 340:	mvn	r0, #0
 344:	bl	0 <coda_set_error>
 348:	b	218 <coda_cdf_variable_new+0x13c>
 34c:	ldr	r0, [sp, #8]
 350:	ldr	r7, [sp, #4]
 354:	str	r5, [r4, #16]
 358:	cmn	r0, #1
 35c:	beq	374 <coda_cdf_variable_new+0x298>
 360:	mov	r1, r5
 364:	bl	6a8 <time_type_new>
 368:	cmp	r0, #0
 36c:	beq	218 <coda_cdf_variable_new+0x13c>
 370:	str	r0, [r4, #16]
 374:	mov	r0, #5
 378:	bl	0 <coda_type_array_new>
 37c:	cmp	r0, #0
 380:	str	r0, [r4, #4]
 384:	beq	218 <coda_cdf_variable_new+0x13c>
 388:	ldr	r1, [r4, #16]
 38c:	ldr	r1, [r1, #4]
 390:	bl	0 <coda_type_array_set_base_type>
 394:	cmp	r0, #0
 398:	bne	218 <coda_cdf_variable_new+0x13c>
 39c:	cmp	r6, #0
 3a0:	beq	3c0 <coda_cdf_variable_new+0x2e4>
 3a4:	ldr	r0, [r4, #4]
 3a8:	add	r5, sl, #1
 3ac:	mov	r1, r5
 3b0:	bl	0 <coda_type_array_add_fixed_dimension>
 3b4:	cmp	r0, #0
 3b8:	bne	218 <coda_cdf_variable_new+0x13c>
 3bc:	str	r5, [r4, #20]
 3c0:	ldr	r0, [r4, #16]
 3c4:	ldr	r0, [r0, #4]
 3c8:	ldrd	r0, [r0, #24]
 3cc:	asr	r2, r1, #31
 3d0:	adds	r0, r0, r2, lsr #29
 3d4:	adc	r1, r1, #0
 3d8:	cmp	r7, #1
 3dc:	lsr	r0, r0, #3
 3e0:	orr	r0, r0, r1, lsl #29
 3e4:	ldr	r1, [fp, #12]
 3e8:	str	r0, [r4, #28]
 3ec:	blt	470 <coda_cdf_variable_new+0x394>
 3f0:	ldr	r8, [fp, #16]
 3f4:	ldr	sl, [fp, #8]
 3f8:	sub	r7, r7, #1
 3fc:	mov	r5, #0
 400:	b	428 <coda_cdf_variable_new+0x34c>
 404:	ldr	r0, [sl, r6, lsl #2]
 408:	ldr	r1, [r4, #24]
 40c:	mul	r0, r1, r0
 410:	ldr	r1, [fp, #12]
 414:	str	r0, [r4, #24]
 418:	sub	r7, r7, #1
 41c:	add	r5, r5, #1
 420:	cmn	r7, #1
 424:	beq	470 <coda_cdf_variable_new+0x394>
 428:	cmp	r8, #0
 42c:	mov	r6, r7
 430:	moveq	r6, r5
 434:	ldr	r0, [r1, r6, lsl #2]
 438:	cmp	r0, #0
 43c:	beq	418 <coda_cdf_variable_new+0x33c>
 440:	ldr	r1, [sl, r6, lsl #2]
 444:	ldr	r0, [r4, #4]
 448:	bl	0 <coda_type_array_add_fixed_dimension>
 44c:	cmp	r0, #0
 450:	beq	404 <coda_cdf_variable_new+0x328>
 454:	b	218 <coda_cdf_variable_new+0x13c>
 458:	mov	r1, r4
 45c:	bl	6a8 <time_type_new>
 460:	cmp	r0, #0
 464:	beq	218 <coda_cdf_variable_new+0x13c>
 468:	mov	r5, r0
 46c:	b	318 <coda_cdf_variable_new+0x23c>
 470:	ldr	r0, [r4, #4]
 474:	bl	0 <coda_type_array_validate>
 478:	cmp	r0, #0
 47c:	bne	218 <coda_cdf_variable_new+0x13c>
 480:	b	294 <coda_cdf_variable_new+0x1b8>
 484:	movw	r0, #0
 488:	movw	r1, #0
 48c:	movw	r3, #0
 490:	mov	r2, #268	; 0x10c
 494:	movt	r0, #0
 498:	movt	r1, #0
 49c:	movt	r3, #0
 4a0:	bl	0 <__assert_fail>

000004a4 <basic_type_init>:
 4a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 4a8:	add	fp, sp, #24
 4ac:	mov	r4, r0
 4b0:	sub	r0, r1, #1
 4b4:	mov	r7, r2
 4b8:	mov	r2, r1
 4bc:	cmp	r0, #51	; 0x33
 4c0:	bhi	5fc <basic_type_init+0x158>
 4c4:	add	r3, pc, #16
 4c8:	mov	r8, #0
 4cc:	mov	r5, #1
 4d0:	mov	r1, #2
 4d4:	mov	r6, #0
 4d8:	ldr	pc, [r3, r0, lsl #2]
 4dc:	.word	0x00000654
 4e0:	.word	0x000005f0
 4e4:	.word	0x000005fc
 4e8:	.word	0x00000618
 4ec:	.word	0x000005fc
 4f0:	.word	0x000005fc
 4f4:	.word	0x000005fc
 4f8:	.word	0x00000624
 4fc:	.word	0x000005fc
 500:	.word	0x000005fc
 504:	.word	0x00000630
 508:	.word	0x0000063c
 50c:	.word	0x000005fc
 510:	.word	0x0000064c
 514:	.word	0x000005fc
 518:	.word	0x000005fc
 51c:	.word	0x000005fc
 520:	.word	0x000005fc
 524:	.word	0x000005fc
 528:	.word	0x000005fc
 52c:	.word	0x000005ac
 530:	.word	0x000005bc
 534:	.word	0x000005fc
 538:	.word	0x000005fc
 53c:	.word	0x000005fc
 540:	.word	0x000005fc
 544:	.word	0x000005fc
 548:	.word	0x000005fc
 54c:	.word	0x000005fc
 550:	.word	0x000005fc
 554:	.word	0x000005fc
 558:	.word	0x000005fc
 55c:	.word	0x000005fc
 560:	.word	0x000005fc
 564:	.word	0x000005fc
 568:	.word	0x000005fc
 56c:	.word	0x000005fc
 570:	.word	0x000005fc
 574:	.word	0x000005fc
 578:	.word	0x000005fc
 57c:	.word	0x00000654
 580:	.word	0x000005fc
 584:	.word	0x000005fc
 588:	.word	0x000005ac
 58c:	.word	0x000005bc
 590:	.word	0x000005fc
 594:	.word	0x000005fc
 598:	.word	0x000005fc
 59c:	.word	0x000005fc
 5a0:	.word	0x000005fc
 5a4:	.word	0x000005cc
 5a8:	.word	0x000005cc
 5ac:	mov	r5, #4
 5b0:	mov	r6, #8
 5b4:	mov	r1, #3
 5b8:	b	654 <basic_type_init+0x1b0>
 5bc:	mov	r5, #8
 5c0:	mov	r6, #9
 5c4:	mov	r1, #3
 5c8:	b	654 <basic_type_init+0x1b0>
 5cc:	mov	r0, #5
 5d0:	bl	0 <coda_type_text_new>
 5d4:	cmp	r7, #1
 5d8:	mov	r6, #11
 5dc:	asr	r8, r7, #31
 5e0:	mov	r5, r7
 5e4:	str	r0, [r4, #4]
 5e8:	movweq	r6, #10
 5ec:	b	660 <basic_type_init+0x1bc>
 5f0:	mov	r1, #2
 5f4:	mov	r6, #2
 5f8:	b	644 <basic_type_init+0x1a0>
 5fc:	movw	r1, #0
 600:	mvn	r0, #99	; 0x63
 604:	movt	r1, #0
 608:	bl	0 <coda_set_error>
 60c:	mvn	r7, #0
 610:	mov	r0, r7
 614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 618:	mov	r6, #4
 61c:	mov	r5, #4
 620:	b	654 <basic_type_init+0x1b0>
 624:	mov	r5, #8
 628:	mov	r6, #6
 62c:	b	654 <basic_type_init+0x1b0>
 630:	mov	r6, #1
 634:	mov	r5, #1
 638:	b	654 <basic_type_init+0x1b0>
 63c:	mov	r1, #2
 640:	mov	r6, #3
 644:	mov	r5, #2
 648:	b	654 <basic_type_init+0x1b0>
 64c:	mov	r5, #4
 650:	mov	r6, #5
 654:	mov	r0, #5
 658:	bl	0 <coda_type_number_new>
 65c:	str	r0, [r4, #4]
 660:	mvn	r7, #0
 664:	cmp	r0, #0
 668:	beq	67c <basic_type_init+0x1d8>
 66c:	mov	r1, r6
 670:	bl	0 <coda_type_set_read_type>
 674:	cmp	r0, #0
 678:	beq	684 <basic_type_init+0x1e0>
 67c:	mov	r0, r7
 680:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 684:	ldr	r0, [r4, #4]
 688:	mov	r2, r5
 68c:	mov	r3, r8
 690:	bl	0 <coda_type_set_byte_size>
 694:	cmp	r0, #0
 698:	mov	r7, r0
 69c:	mvnne	r7, #0
 6a0:	mov	r0, r7
 6a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000006a8 <time_type_new>:
 6a8:	push	{r4, r5, r6, r7, fp, lr}
 6ac:	add	fp, sp, #16
 6b0:	sub	sp, sp, #8
 6b4:	mov	r7, r0
 6b8:	cmp	r0, #31
 6bc:	mov	r5, r1
 6c0:	cmpne	r7, #33	; 0x21
 6c4:	bne	79c <time_type_new+0xf4>
 6c8:	mov	r0, #20
 6cc:	bl	0 <malloc>
 6d0:	cmp	r0, #0
 6d4:	beq	728 <time_type_new+0x80>
 6d8:	mov	r6, r0
 6dc:	mov	r1, #103	; 0x67
 6e0:	mov	r4, #0
 6e4:	mov	r0, #1
 6e8:	cmp	r7, #31
 6ec:	stm	r6, {r1, r4}
 6f0:	add	r1, r6, #8
 6f4:	stm	r1, {r0, r4, r7}
 6f8:	movw	r1, #0
 6fc:	movw	r0, #0
 700:	movt	r1, #0
 704:	movt	r0, #0
 708:	moveq	r0, r1
 70c:	add	r1, sp, #4
 710:	bl	0 <coda_expression_from_string>
 714:	cmp	r0, #0
 718:	beq	75c <time_type_new+0xb4>
 71c:	mov	r0, r6
 720:	bl	0 <coda_cdf_type_delete>
 724:	b	750 <time_type_new+0xa8>
 728:	movw	r1, #0
 72c:	movw	r3, #0
 730:	mov	r0, #217	; 0xd9
 734:	mov	r2, #20
 738:	movt	r1, #0
 73c:	movt	r3, #0
 740:	str	r0, [sp]
 744:	mvn	r0, #0
 748:	bl	0 <coda_set_error>
 74c:	mov	r4, #0
 750:	mov	r0, r4
 754:	sub	sp, fp, #16
 758:	pop	{r4, r5, r6, r7, fp, pc}
 75c:	ldr	r1, [sp, #4]
 760:	mov	r0, #5
 764:	bl	0 <coda_type_time_new>
 768:	cmp	r0, #0
 76c:	str	r0, [r6, #4]
 770:	beq	790 <time_type_new+0xe8>
 774:	ldr	r1, [r5, #4]
 778:	bl	0 <coda_type_time_set_base_type>
 77c:	cmp	r0, #0
 780:	bne	71c <time_type_new+0x74>
 784:	mov	r4, r6
 788:	str	r5, [r6, #12]
 78c:	b	750 <time_type_new+0xa8>
 790:	ldr	r0, [sp, #4]
 794:	bl	0 <coda_expression_delete>
 798:	b	71c <time_type_new+0x74>
 79c:	movw	r0, #0
 7a0:	movw	r1, #0
 7a4:	movw	r3, #0
 7a8:	mov	r2, #211	; 0xd3
 7ac:	movt	r0, #0
 7b0:	movt	r1, #0
 7b4:	movt	r3, #0
 7b8:	bl	0 <__assert_fail>

000007bc <coda_cdf_variable_add_attribute>:
 7bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 7c0:	add	fp, sp, #24
 7c4:	sub	sp, sp, #8
 7c8:	cmp	r0, #0
 7cc:	beq	83c <coda_cdf_variable_add_attribute+0x80>
 7d0:	mov	r5, r1
 7d4:	cmp	r1, #0
 7d8:	beq	858 <coda_cdf_variable_add_attribute+0x9c>
 7dc:	mov	r9, r2
 7e0:	cmp	r2, #0
 7e4:	beq	874 <coda_cdf_variable_add_attribute+0xb8>
 7e8:	ldr	r6, [r0, #12]
 7ec:	mov	r7, r3
 7f0:	mov	r4, r0
 7f4:	cmp	r6, #0
 7f8:	beq	890 <coda_cdf_variable_add_attribute+0xd4>
 7fc:	ldr	r0, [r6]
 800:	cmp	r0, #100	; 0x64
 804:	bne	9ac <coda_cdf_variable_add_attribute+0x1f0>
 808:	ldr	r0, [r4, #4]
 80c:	ldr	r1, [r6, #4]
 810:	ldr	r0, [r0, #36]	; 0x24
 814:	cmp	r0, r1
 818:	beq	8dc <coda_cdf_variable_add_attribute+0x120>
 81c:	movw	r0, #0
 820:	movw	r1, #0
 824:	movw	r3, #0
 828:	movw	r2, #473	; 0x1d9
 82c:	movt	r0, #0
 830:	movt	r1, #0
 834:	movt	r3, #0
 838:	bl	0 <__assert_fail>
 83c:	movw	r1, #0
 840:	movw	r2, #0
 844:	mvn	r0, #99	; 0x63
 848:	movw	r3, #427	; 0x1ab
 84c:	movt	r1, #0
 850:	movt	r2, #0
 854:	b	a5c <coda_cdf_variable_add_attribute+0x2a0>
 858:	movw	r1, #0
 85c:	movw	r2, #0
 860:	mvn	r0, #99	; 0x63
 864:	mov	r3, #432	; 0x1b0
 868:	movt	r1, #0
 86c:	movt	r2, #0
 870:	b	a5c <coda_cdf_variable_add_attribute+0x2a0>
 874:	movw	r1, #0
 878:	movw	r2, #0
 87c:	mvn	r0, #99	; 0x63
 880:	movw	r3, #437	; 0x1b5
 884:	movt	r1, #0
 888:	movt	r2, #0
 88c:	b	a5c <coda_cdf_variable_add_attribute+0x2a0>
 890:	cmp	r7, #0
 894:	beq	9f4 <coda_cdf_variable_add_attribute+0x238>
 898:	ldr	r1, [r4, #4]
 89c:	ldr	r0, [r1, #36]	; 0x24
 8a0:	cmp	r0, #0
 8a4:	bne	8c0 <coda_cdf_variable_add_attribute+0x104>
 8a8:	ldr	r0, [r1]
 8ac:	bl	0 <coda_type_record_new>
 8b0:	ldr	r1, [r4, #4]
 8b4:	cmp	r0, #0
 8b8:	str	r0, [r1, #36]	; 0x24
 8bc:	beq	a60 <coda_cdf_variable_add_attribute+0x2a4>
 8c0:	mov	r1, #0
 8c4:	bl	0 <coda_mem_record_new>
 8c8:	cmp	r0, #0
 8cc:	str	r0, [r4, #12]
 8d0:	beq	a60 <coda_cdf_variable_add_attribute+0x2a4>
 8d4:	mov	r6, r0
 8d8:	ldr	r0, [r0, #4]
 8dc:	ldr	r0, [r0, #44]	; 0x2c
 8e0:	mov	r1, r5
 8e4:	bl	0 <coda_hashtable_get_index_from_name>
 8e8:	mov	r8, r0
 8ec:	cmp	r7, #0
 8f0:	beq	9c8 <coda_cdf_variable_add_attribute+0x20c>
 8f4:	cmp	r8, #0
 8f8:	bmi	918 <coda_cdf_variable_add_attribute+0x15c>
 8fc:	ldr	r0, [r6, #16]
 900:	cmp	r8, r0
 904:	bge	944 <coda_cdf_variable_add_attribute+0x188>
 908:	ldr	r1, [r6, #20]
 90c:	ldr	r1, [r1, r8, lsl #2]
 910:	cmp	r1, #0
 914:	beq	944 <coda_cdf_variable_add_attribute+0x188>
 918:	ldr	r2, [r9, #4]
 91c:	ldr	r0, [r6, #4]
 920:	mov	r1, r5
 924:	bl	0 <coda_type_record_create_field>
 928:	mvn	r4, #0
 92c:	cmp	r0, #0
 930:	bne	a64 <coda_cdf_variable_add_attribute+0x2a8>
 934:	ldr	r1, [r6, #4]
 938:	ldr	r0, [r6, #16]
 93c:	ldr	r1, [r1, #48]	; 0x30
 940:	sub	r8, r1, #1
 944:	ldr	r1, [r6, #4]
 948:	ldr	r1, [r1, #48]	; 0x30
 94c:	cmp	r0, r1
 950:	bge	a70 <coda_cdf_variable_add_attribute+0x2b4>
 954:	ldr	r0, [r6, #20]
 958:	lsl	r1, r1, #2
 95c:	bl	0 <realloc>
 960:	cmp	r0, #0
 964:	beq	a80 <coda_cdf_variable_add_attribute+0x2c4>
 968:	str	r0, [r6, #20]
 96c:	ldr	r1, [r6, #4]
 970:	ldr	r3, [r6, #16]
 974:	ldr	r2, [r1, #48]	; 0x30
 978:	cmp	r3, r2
 97c:	bge	a18 <coda_cdf_variable_add_attribute+0x25c>
 980:	mov	r1, #0
 984:	str	r1, [r0, r3, lsl #2]
 988:	add	r0, r3, #1
 98c:	ldr	r2, [r6, #4]
 990:	ldr	r2, [r2, #48]	; 0x30
 994:	cmp	r0, r2
 998:	bge	a18 <coda_cdf_variable_add_attribute+0x25c>
 99c:	ldr	r2, [r6, #20]
 9a0:	str	r1, [r2, r0, lsl #2]
 9a4:	add	r0, r0, #1
 9a8:	b	98c <coda_cdf_variable_add_attribute+0x1d0>
 9ac:	movw	r1, #0
 9b0:	movw	r2, #0
 9b4:	mvn	r0, #99	; 0x63
 9b8:	movw	r3, #470	; 0x1d6
 9bc:	movt	r1, #0
 9c0:	movt	r2, #0
 9c4:	b	a5c <coda_cdf_variable_add_attribute+0x2a0>
 9c8:	cmn	r8, #1
 9cc:	ble	9fc <coda_cdf_variable_add_attribute+0x240>
 9d0:	ldr	r0, [r6, #20]
 9d4:	ldr	r0, [r0, r8, lsl #2]
 9d8:	cmp	r0, #0
 9dc:	beq	a20 <coda_cdf_variable_add_attribute+0x264>
 9e0:	movw	r1, #0
 9e4:	movw	r0, #522	; 0x20a
 9e8:	movt	r1, #0
 9ec:	str	r0, [sp]
 9f0:	b	a4c <coda_cdf_variable_add_attribute+0x290>
 9f4:	movw	r0, #462	; 0x1ce
 9f8:	b	a00 <coda_cdf_variable_add_attribute+0x244>
 9fc:	mov	r0, #516	; 0x204
 a00:	movw	r1, #0
 a04:	movw	r3, #0
 a08:	str	r0, [sp]
 a0c:	mvn	r0, #101	; 0x65
 a10:	movt	r1, #0
 a14:	b	a54 <coda_cdf_variable_add_attribute+0x298>
 a18:	str	r2, [r6, #16]
 a1c:	b	a70 <coda_cdf_variable_add_attribute+0x2b4>
 a20:	ldr	r0, [r6, #4]
 a24:	ldr	r1, [r9, #4]
 a28:	ldr	r0, [r0, #52]	; 0x34
 a2c:	ldr	r0, [r0, r8, lsl #2]
 a30:	ldr	r0, [r0, #8]
 a34:	cmp	r0, r1
 a38:	beq	a70 <coda_cdf_variable_add_attribute+0x2b4>
 a3c:	movw	r1, #0
 a40:	mov	r0, #528	; 0x210
 a44:	str	r0, [sp]
 a48:	movt	r1, #0
 a4c:	movw	r3, #0
 a50:	mvn	r0, #99	; 0x63
 a54:	movt	r3, #0
 a58:	mov	r2, r5
 a5c:	bl	0 <coda_set_error>
 a60:	mvn	r4, #0
 a64:	mov	r0, r4
 a68:	sub	sp, fp, #24
 a6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 a70:	ldr	r0, [r6, #20]
 a74:	mov	r4, #0
 a78:	str	r9, [r0, r8, lsl #2]
 a7c:	b	a64 <coda_cdf_variable_add_attribute+0x2a8>
 a80:	ldr	r0, [r6, #4]
 a84:	movw	r1, #499	; 0x1f3
 a88:	movw	r3, #0
 a8c:	mvn	r4, #0
 a90:	movt	r3, #0
 a94:	ldr	r0, [r0, #48]	; 0x30
 a98:	str	r1, [sp]
 a9c:	movw	r1, #0
 aa0:	movt	r1, #0
 aa4:	lsl	r2, r0, #2
 aa8:	mvn	r0, #0
 aac:	bl	0 <coda_set_error>
 ab0:	b	a64 <coda_cdf_variable_add_attribute+0x2a8>
