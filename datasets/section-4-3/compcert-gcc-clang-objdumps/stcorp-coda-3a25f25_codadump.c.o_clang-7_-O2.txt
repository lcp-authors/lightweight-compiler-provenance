
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <handle_coda_error>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	movw	r5, #0
       c:	movt	r5, #0
      10:	ldr	r4, [r5]
      14:	bl	0 <coda_get_errno>
      18:	ldr	r0, [r0]
      1c:	bl	0 <coda_errno_to_string>
      20:	movw	r1, #0
      24:	mov	r2, r0
      28:	mov	r0, r4
      2c:	movt	r1, #0
      30:	bl	0 <fprintf>
      34:	ldr	r0, [r5]
      38:	bl	0 <fflush>
      3c:	mov	r0, #1
      40:	bl	0 <exit>

00000044 <main>:
      44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
      48:	add	fp, sp, #28
      4c:	sub	sp, sp, #20
      50:	cmp	r0, #1
      54:	beq	11e0 <main+0x119c>
      58:	ldr	r6, [r1, #4]
      5c:	mov	r9, r1
      60:	movw	r1, #0
      64:	mov	sl, r0
      68:	movt	r1, #0
      6c:	mov	r0, r6
      70:	bl	0 <strcmp>
      74:	cmp	r0, #0
      78:	beq	11e0 <main+0x119c>
      7c:	movw	r1, #0
      80:	mov	r0, r6
      84:	movt	r1, #0
      88:	bl	0 <strcmp>
      8c:	cmp	r0, #0
      90:	beq	11e0 <main+0x119c>
      94:	movw	r1, #0
      98:	mov	r0, r6
      9c:	movt	r1, #0
      a0:	bl	0 <strcmp>
      a4:	cmp	r0, #0
      a8:	beq	11ec <main+0x11a8>
      ac:	movw	r1, #0
      b0:	mov	r0, r6
      b4:	movt	r1, #0
      b8:	bl	0 <strcmp>
      bc:	cmp	r0, #0
      c0:	beq	11ec <main+0x11a8>
      c4:	cmp	sl, #3
      c8:	blt	e4 <main+0xa0>
      cc:	movw	r1, #0
      d0:	mov	r0, r6
      d4:	movt	r1, #0
      d8:	bl	0 <strcmp>
      dc:	cmp	r0, #0
      e0:	beq	8e0 <main+0x89c>
      e4:	ldr	r0, [r9]
      e8:	movw	r2, #0
      ec:	mov	r1, #0
      f0:	movt	r2, #0
      f4:	bl	0 <coda_set_definition_path_conditional>
      f8:	mov	r7, #1
      fc:	cmp	r0, #0
     100:	bne	11f8 <main+0x11b4>
     104:	ldr	r6, [r9, r7, lsl #2]
     108:	movw	r1, #0
     10c:	movt	r1, #0
     110:	mov	r0, r6
     114:	bl	0 <strcmp>
     118:	cmp	r0, #0
     11c:	beq	220 <main+0x1dc>
     120:	movw	r1, #0
     124:	mov	r0, r6
     128:	movt	r1, #0
     12c:	bl	0 <strcmp>
     130:	cmp	r0, #0
     134:	beq	808 <main+0x7c4>
     138:	movw	r1, #0
     13c:	mov	r0, r6
     140:	movt	r1, #0
     144:	bl	0 <strcmp>
     148:	cmp	r0, #0
     14c:	beq	8f0 <main+0x8ac>
     150:	movw	r1, #0
     154:	mov	r0, r6
     158:	movt	r1, #0
     15c:	bl	0 <strcmp>
     160:	cmp	r0, #0
     164:	beq	b90 <main+0xb4c>
     168:	movw	r1, #0
     16c:	mov	r0, r6
     170:	movt	r1, #0
     174:	bl	0 <strcmp>
     178:	cmp	r0, #0
     17c:	bne	111c <main+0x10d8>
     180:	movw	r0, #0
     184:	mov	r6, #0
     188:	mov	r1, #5
     18c:	movt	r0, #0
     190:	str	r6, [r0]
     194:	movw	r0, #0
     198:	movt	r0, #0
     19c:	str	r1, [r0]
     1a0:	movw	r0, #0
     1a4:	movw	r1, #0
     1a8:	movt	r0, #0
     1ac:	movt	r1, #0
     1b0:	str	r6, [r0]
     1b4:	movw	r0, #0
     1b8:	movt	r0, #0
     1bc:	str	r6, [r0]
     1c0:	movw	r0, #0
     1c4:	movt	r0, #0
     1c8:	ldr	r0, [r0]
     1cc:	str	r0, [r1]
     1d0:	add	r0, r7, #1
     1d4:	sub	r4, sl, r0
     1d8:	cmp	r4, #1
     1dc:	blt	111c <main+0x10d8>
     1e0:	add	r7, r9, r0, lsl #2
     1e4:	sub	r0, r4, #1
     1e8:	movw	r9, #0
     1ec:	movw	r8, #0
     1f0:	str	r0, [sp, #12]
     1f4:	mov	r0, #1
     1f8:	movt	r9, #0
     1fc:	movt	r8, #0
     200:	str	r0, [sp, #16]
     204:	mov	r0, #0
     208:	str	r0, [sp, #8]
     20c:	mov	r0, #0
     210:	str	r0, [sp, #4]
     214:	mov	r0, #0
     218:	str	r0, [sp]
     21c:	b	324 <main+0x2e0>
     220:	movw	r0, #0
     224:	mov	r8, #0
     228:	mov	r5, #1
     22c:	movw	r1, #0
     230:	movw	r6, #0
     234:	movt	r0, #0
     238:	movt	r1, #0
     23c:	movt	r6, #0
     240:	str	r8, [r0]
     244:	movw	r0, #0
     248:	str	r8, [r1]
     24c:	str	r8, [r1, #664]	; 0x298
     250:	str	r8, [r6]
     254:	movt	r0, #0
     258:	str	r5, [r0]
     25c:	movw	r0, #0
     260:	movt	r0, #0
     264:	str	r8, [r0]
     268:	movw	r0, #0
     26c:	movt	r0, #0
     270:	str	r8, [r0]
     274:	movw	r0, #0
     278:	movt	r0, #0
     27c:	str	r8, [r0]
     280:	movw	r0, #0
     284:	movt	r0, #0
     288:	str	r8, [r0]
     28c:	add	r0, r7, #1
     290:	sub	r7, sl, r0
     294:	cmp	r7, #1
     298:	blt	111c <main+0x10d8>
     29c:	add	r9, r9, r0, lsl #2
     2a0:	sub	r0, r7, #1
     2a4:	movw	r4, #0
     2a8:	str	r0, [sp, #8]
     2ac:	mov	r0, #1
     2b0:	movt	r4, #0
     2b4:	str	r0, [sp, #16]
     2b8:	mov	r0, #1
     2bc:	str	r0, [sp, #12]
     2c0:	b	5c8 <main+0x584>
     2c4:	movw	r1, #0
     2c8:	movt	r1, #0
     2cc:	str	r0, [r1]
     2d0:	b	4cc <main+0x488>
     2d4:	movw	r1, #0
     2d8:	movt	r1, #0
     2dc:	str	r0, [r1]
     2e0:	b	4cc <main+0x488>
     2e4:	mov	r1, #0
     2e8:	mov	r2, #10
     2ec:	bl	0 <strtol>
     2f0:	movw	r1, #0
     2f4:	movt	r1, #0
     2f8:	str	r0, [r1]
     2fc:	b	4cc <main+0x488>
     300:	mov	r6, r2
     304:	mov	r1, #0
     308:	mov	r2, #10
     30c:	bl	0 <strtol>
     310:	str	r0, [sp, #8]
     314:	str	r4, [sp]
     318:	mov	r0, r6
     31c:	str	r6, [sp, #4]
     320:	b	4a4 <main+0x460>
     324:	ldr	sl, [r7, r6, lsl #2]
     328:	mov	r1, r9
     32c:	mov	r0, sl
     330:	bl	0 <strcmp>
     334:	cmp	r0, #0
     338:	beq	4c0 <main+0x47c>
     33c:	mov	r0, sl
     340:	mov	r1, r8
     344:	bl	0 <strcmp>
     348:	cmp	r0, #0
     34c:	beq	4c0 <main+0x47c>
     350:	movw	r1, #0
     354:	mov	r0, sl
     358:	movt	r1, #0
     35c:	bl	0 <strcmp>
     360:	cmp	r0, #0
     364:	beq	380 <main+0x33c>
     368:	movw	r1, #0
     36c:	mov	r0, sl
     370:	movt	r1, #0
     374:	bl	0 <strcmp>
     378:	cmp	r0, #0
     37c:	bne	39c <main+0x358>
     380:	add	r5, r6, #1
     384:	cmp	r5, r4
     388:	bge	39c <main+0x358>
     38c:	ldr	r0, [r7, r5, lsl #2]
     390:	ldrb	r1, [r0]
     394:	cmp	r1, #45	; 0x2d
     398:	bne	2c4 <main+0x280>
     39c:	movw	r1, #0
     3a0:	mov	r0, sl
     3a4:	movt	r1, #0
     3a8:	bl	0 <strcmp>
     3ac:	cmp	r0, #0
     3b0:	beq	3cc <main+0x388>
     3b4:	movw	r1, #0
     3b8:	mov	r0, sl
     3bc:	movt	r1, #0
     3c0:	bl	0 <strcmp>
     3c4:	cmp	r0, #0
     3c8:	bne	3e8 <main+0x3a4>
     3cc:	add	r5, r6, #1
     3d0:	cmp	r5, r4
     3d4:	bge	3e8 <main+0x3a4>
     3d8:	ldr	r0, [r7, r5, lsl #2]
     3dc:	ldrb	r1, [r0]
     3e0:	cmp	r1, #45	; 0x2d
     3e4:	bne	2d4 <main+0x290>
     3e8:	movw	r1, #0
     3ec:	mov	r0, sl
     3f0:	movt	r1, #0
     3f4:	bl	0 <strcmp>
     3f8:	cmp	r0, #0
     3fc:	bne	41c <main+0x3d8>
     400:	add	r5, r6, #1
     404:	cmp	r5, r4
     408:	bge	41c <main+0x3d8>
     40c:	ldr	r0, [r7, r5, lsl #2]
     410:	ldrb	r1, [r0]
     414:	cmp	r1, #45	; 0x2d
     418:	bne	2e4 <main+0x2a0>
     41c:	mov	r9, r7
     420:	ldr	r7, [sp, #12]
     424:	movw	r1, #0
     428:	mov	r0, sl
     42c:	mov	r8, r4
     430:	movt	r1, #0
     434:	bl	0 <strcmp>
     438:	cmp	r0, #0
     43c:	bne	480 <main+0x43c>
     440:	add	r5, r6, #3
     444:	cmp	r5, r8
     448:	bge	480 <main+0x43c>
     44c:	add	r0, r9, r6, lsl #2
     450:	ldr	r4, [r0, #4]
     454:	ldrb	r1, [r4]
     458:	cmp	r1, #45	; 0x2d
     45c:	beq	480 <main+0x43c>
     460:	ldr	r2, [r0, #8]
     464:	ldrb	r0, [r2]
     468:	cmp	r0, #45	; 0x2d
     46c:	beq	480 <main+0x43c>
     470:	ldr	r0, [r9, r5, lsl #2]
     474:	ldrb	r1, [r0]
     478:	cmp	r1, #45	; 0x2d
     47c:	bne	300 <main+0x2bc>
     480:	cmp	r6, r7
     484:	bne	111c <main+0x10d8>
     488:	ldrb	r0, [sl]
     48c:	cmp	r0, #45	; 0x2d
     490:	beq	111c <main+0x10d8>
     494:	movw	r0, #0
     498:	mov	r5, r7
     49c:	movt	r0, #0
     4a0:	str	sl, [r0]
     4a4:	mov	r7, r9
     4a8:	movw	r9, #0
     4ac:	mov	r4, r8
     4b0:	movw	r8, #0
     4b4:	movt	r9, #0
     4b8:	movt	r8, #0
     4bc:	b	4cc <main+0x488>
     4c0:	mov	r0, #0
     4c4:	mov	r5, r6
     4c8:	str	r0, [sp, #16]
     4cc:	add	r6, r5, #1
     4d0:	cmp	r6, r4
     4d4:	blt	324 <main+0x2e0>
     4d8:	movw	r0, #0
     4dc:	movt	r0, #0
     4e0:	ldr	r0, [r0]
     4e4:	cmp	r0, #0
     4e8:	ldrbne	r0, [r0]
     4ec:	cmpne	r0, #0
     4f0:	beq	111c <main+0x10d8>
     4f4:	bl	0 <coda_init>
     4f8:	cmp	r0, #0
     4fc:	bne	11f8 <main+0x11b4>
     500:	mov	r0, #0
     504:	bl	0 <coda_set_option_perform_conversions>
     508:	ldr	r0, [sp, #16]
     50c:	bl	0 <coda_set_option_use_fast_size_expressions>
     510:	movw	r0, #0
     514:	movw	r4, #0
     518:	movt	r0, #0
     51c:	movt	r4, #0
     520:	ldr	r0, [r0]
     524:	cmp	r0, #0
     528:	beq	544 <main+0x500>
     52c:	movw	r1, #0
     530:	movt	r1, #0
     534:	bl	0 <fopen>
     538:	cmp	r0, #0
     53c:	str	r0, [r4]
     540:	beq	1258 <main+0x1214>
     544:	ldm	sp, {r0, r1, r2}
     548:	bl	0 <print_debug_data>
     54c:	movw	r0, #0
     550:	movt	r0, #0
     554:	ldr	r0, [r0]
     558:	cmp	r0, #0
     55c:	beq	11d0 <main+0x118c>
     560:	ldr	r0, [r4]
     564:	b	e3c <main+0xdf8>
     568:	bl	0 <codadump_filter_create>
     56c:	movw	r1, #0
     570:	mov	r8, r6
     574:	mov	r6, r4
     578:	movw	r4, #0
     57c:	cmp	r0, #0
     580:	mov	r5, #1
     584:	movt	r1, #0
     588:	movt	r4, #0
     58c:	str	r0, [r1, #664]	; 0x298
     590:	bne	7a4 <main+0x760>
     594:	b	122c <main+0x11e8>
     598:	movw	r0, #0
     59c:	movt	r0, #0
     5a0:	str	r5, [r0]
     5a4:	b	7a4 <main+0x760>
     5a8:	movw	r0, #0
     5ac:	str	r5, [r6]
     5b0:	movt	r0, #0
     5b4:	str	r5, [r0]
     5b8:	b	7a4 <main+0x760>
     5bc:	mov	r0, #0
     5c0:	str	r0, [sp, #12]
     5c4:	b	7a4 <main+0x760>
     5c8:	ldr	sl, [r9, r8, lsl #2]
     5cc:	mov	r1, r4
     5d0:	mov	r0, sl
     5d4:	bl	0 <strcmp>
     5d8:	cmp	r0, #0
     5dc:	beq	75c <main+0x718>
     5e0:	movw	r1, #0
     5e4:	mov	r0, sl
     5e8:	movt	r1, #0
     5ec:	bl	0 <strcmp>
     5f0:	cmp	r0, #0
     5f4:	beq	75c <main+0x718>
     5f8:	movw	r1, #0
     5fc:	mov	r0, sl
     600:	movt	r1, #0
     604:	bl	0 <strcmp>
     608:	cmp	r0, #0
     60c:	beq	764 <main+0x720>
     610:	movw	r1, #0
     614:	mov	r0, sl
     618:	movt	r1, #0
     61c:	bl	0 <strcmp>
     620:	cmp	r0, #0
     624:	beq	764 <main+0x720>
     628:	movw	r1, #0
     62c:	mov	r0, sl
     630:	mov	r4, r6
     634:	movt	r1, #0
     638:	bl	0 <strcmp>
     63c:	cmp	r0, #0
     640:	beq	65c <main+0x618>
     644:	movw	r1, #0
     648:	mov	r0, sl
     64c:	movt	r1, #0
     650:	bl	0 <strcmp>
     654:	cmp	r0, #0
     658:	bne	678 <main+0x634>
     65c:	add	r6, r8, #1
     660:	cmp	r6, r7
     664:	bge	678 <main+0x634>
     668:	ldr	r0, [r9, r6, lsl #2]
     66c:	ldrb	r1, [r0]
     670:	cmp	r1, #45	; 0x2d
     674:	bne	568 <main+0x524>
     678:	movw	r1, #0
     67c:	mov	r0, sl
     680:	movt	r1, #0
     684:	bl	0 <strcmp>
     688:	cmp	r0, #0
     68c:	beq	770 <main+0x72c>
     690:	movw	r1, #0
     694:	mov	r0, sl
     698:	movt	r1, #0
     69c:	bl	0 <strcmp>
     6a0:	cmp	r0, #0
     6a4:	beq	770 <main+0x72c>
     6a8:	movw	r1, #0
     6ac:	mov	r0, sl
     6b0:	movt	r1, #0
     6b4:	bl	0 <strcmp>
     6b8:	cmp	r0, #0
     6bc:	mov	r6, r4
     6c0:	beq	78c <main+0x748>
     6c4:	movw	r1, #0
     6c8:	mov	r0, sl
     6cc:	movt	r1, #0
     6d0:	bl	0 <strcmp>
     6d4:	cmp	r0, #0
     6d8:	beq	78c <main+0x748>
     6dc:	movw	r1, #0
     6e0:	mov	r0, sl
     6e4:	movt	r1, #0
     6e8:	bl	0 <strcmp>
     6ec:	movw	r4, #0
     6f0:	cmp	r0, #0
     6f4:	mov	r5, #1
     6f8:	movt	r4, #0
     6fc:	beq	598 <main+0x554>
     700:	movw	r1, #0
     704:	mov	r0, sl
     708:	movt	r1, #0
     70c:	bl	0 <strcmp>
     710:	cmp	r0, #0
     714:	beq	5a8 <main+0x564>
     718:	movw	r1, #0
     71c:	mov	r0, sl
     720:	movt	r1, #0
     724:	bl	0 <strcmp>
     728:	cmp	r0, #0
     72c:	beq	5bc <main+0x578>
     730:	ldr	r0, [sp, #8]
     734:	cmp	r8, r0
     738:	bne	111c <main+0x10d8>
     73c:	ldrb	r0, [sl]
     740:	cmp	r0, #45	; 0x2d
     744:	beq	111c <main+0x10d8>
     748:	ldr	r8, [sp, #8]
     74c:	movw	r0, #0
     750:	movt	r0, #0
     754:	str	sl, [r0]
     758:	b	7a4 <main+0x760>
     75c:	str	r5, [r6]
     760:	b	7a4 <main+0x760>
     764:	mov	r0, #0
     768:	str	r0, [sp, #16]
     76c:	b	7a4 <main+0x760>
     770:	movw	r1, #0
     774:	mov	r0, #1
     778:	mov	r6, r4
     77c:	mov	r5, #1
     780:	movt	r1, #0
     784:	str	r0, [r1]
     788:	b	79c <main+0x758>
     78c:	movw	r0, #0
     790:	mov	r5, #1
     794:	movt	r0, #0
     798:	str	r5, [r0]
     79c:	movw	r4, #0
     7a0:	movt	r4, #0
     7a4:	add	r8, r8, #1
     7a8:	cmp	r8, r7
     7ac:	blt	5c8 <main+0x584>
     7b0:	movw	r0, #0
     7b4:	movt	r0, #0
     7b8:	ldr	r0, [r0]
     7bc:	cmp	r0, #0
     7c0:	ldrbne	r0, [r0]
     7c4:	cmpne	r0, #0
     7c8:	beq	111c <main+0x10d8>
     7cc:	bl	0 <coda_init>
     7d0:	cmp	r0, #0
     7d4:	bne	11f8 <main+0x11b4>
     7d8:	ldr	r0, [sp, #12]
     7dc:	clz	r0, r0
     7e0:	lsr	r0, r0, #5
     7e4:	bl	0 <coda_set_option_bypass_special_types>
     7e8:	mov	r0, #0
     7ec:	bl	0 <coda_set_option_perform_boundary_checks>
     7f0:	ldr	r0, [sp, #16]
     7f4:	bl	0 <coda_set_option_perform_conversions>
     7f8:	bl	0 <traverse_info_init>
     7fc:	bl	0 <dim_info_init>
     800:	bl	0 <traverse_product>
     804:	b	11c8 <main+0x1184>
     808:	movw	r0, #0
     80c:	mov	r2, #1
     810:	movw	r1, #0
     814:	mov	r6, #0
     818:	movt	r0, #0
     81c:	movt	r1, #0
     820:	str	r2, [r0]
     824:	movw	r0, #0
     828:	str	r6, [r1]
     82c:	str	r6, [r1, #664]	; 0x298
     830:	movw	r1, #0
     834:	movt	r0, #0
     838:	movt	r1, #0
     83c:	str	r6, [r0]
     840:	movw	r0, #0
     844:	movt	r0, #0
     848:	str	r0, [r1]
     84c:	movw	r0, #0
     850:	movw	r1, #0
     854:	movt	r0, #0
     858:	movt	r1, #0
     85c:	str	r2, [r0]
     860:	movw	r0, #0
     864:	movt	r0, #0
     868:	str	r2, [r0]
     86c:	movw	r0, #0
     870:	movt	r0, #0
     874:	str	r6, [r0]
     878:	movw	r0, #0
     87c:	movt	r0, #0
     880:	str	r6, [r0]
     884:	movw	r0, #0
     888:	movt	r0, #0
     88c:	str	r6, [r0]
     890:	movw	r0, #0
     894:	movt	r0, #0
     898:	str	r6, [r0]
     89c:	movw	r0, #0
     8a0:	movt	r0, #0
     8a4:	ldr	r0, [r0]
     8a8:	str	r0, [r1]
     8ac:	add	r0, r7, #1
     8b0:	sub	r8, sl, r0
     8b4:	cmp	r8, #1
     8b8:	blt	111c <main+0x10d8>
     8bc:	movw	r5, #0
     8c0:	add	sl, r9, r0, lsl #2
     8c4:	sub	r0, r8, #1
     8c8:	mov	r4, #1
     8cc:	str	r0, [sp, #12]
     8d0:	movt	r5, #0
     8d4:	mov	r0, #1
     8d8:	str	r0, [sp, #16]
     8dc:	b	e74 <main+0xe30>
     8e0:	ldr	r0, [r9, #8]
     8e4:	bl	0 <coda_set_definition_path>
     8e8:	mov	r7, #3
     8ec:	b	104 <main+0xc0>
     8f0:	movw	r0, #0
     8f4:	mov	r2, #0
     8f8:	mov	r1, #3
     8fc:	movt	r0, #0
     900:	str	r2, [r0]
     904:	movw	r0, #0
     908:	movt	r0, #0
     90c:	str	r1, [r0]
     910:	movw	r0, #0
     914:	movw	r1, #0
     918:	movt	r0, #0
     91c:	movt	r1, #0
     920:	str	r2, [r0]
     924:	movw	r0, #0
     928:	movt	r0, #0
     92c:	str	r2, [r0]
     930:	movw	r0, #0
     934:	movt	r0, #0
     938:	ldr	r0, [r0]
     93c:	str	r0, [r1]
     940:	add	r0, r7, #1
     944:	sub	r8, sl, r0
     948:	cmp	r8, #1
     94c:	blt	111c <main+0x10d8>
     950:	add	r9, r9, r0, lsl #2
     954:	sub	r0, r8, #1
     958:	movw	r6, #0
     95c:	movw	r7, #0
     960:	mov	r1, #0
     964:	mov	r5, #0
     968:	mov	r4, #0
     96c:	str	r0, [sp, #12]
     970:	mov	r0, #1
     974:	movt	r6, #0
     978:	movt	r7, #0
     97c:	str	r1, [sp, #8]
     980:	str	r0, [sp, #16]
     984:	mov	r0, #1
     988:	str	r0, [sp, #4]
     98c:	b	9bc <main+0x978>
     990:	mov	r0, #0
     994:	str	r0, [sp, #4]
     998:	b	b08 <main+0xac4>
     99c:	movw	r2, #0
     9a0:	movt	r2, #0
     9a4:	str	r1, [r2]
     9a8:	b	b0c <main+0xac8>
     9ac:	movw	r2, #0
     9b0:	movt	r2, #0
     9b4:	str	r1, [r2]
     9b8:	b	b0c <main+0xac8>
     9bc:	ldr	sl, [r9, r5, lsl #2]
     9c0:	mov	r1, r6
     9c4:	mov	r0, sl
     9c8:	bl	0 <strcmp>
     9cc:	cmp	r0, #0
     9d0:	beq	af8 <main+0xab4>
     9d4:	mov	r0, sl
     9d8:	mov	r1, r7
     9dc:	bl	0 <strcmp>
     9e0:	cmp	r0, #0
     9e4:	beq	af8 <main+0xab4>
     9e8:	movw	r1, #0
     9ec:	mov	r0, sl
     9f0:	movt	r1, #0
     9f4:	bl	0 <strcmp>
     9f8:	cmp	r0, #0
     9fc:	beq	b00 <main+0xabc>
     a00:	movw	r1, #0
     a04:	mov	r0, sl
     a08:	movt	r1, #0
     a0c:	bl	0 <strcmp>
     a10:	cmp	r0, #0
     a14:	beq	b00 <main+0xabc>
     a18:	movw	r1, #0
     a1c:	mov	r0, sl
     a20:	movt	r1, #0
     a24:	bl	0 <strcmp>
     a28:	cmp	r0, #0
     a2c:	beq	a48 <main+0xa04>
     a30:	movw	r1, #0
     a34:	mov	r0, sl
     a38:	movt	r1, #0
     a3c:	bl	0 <strcmp>
     a40:	cmp	r0, #0
     a44:	bne	a64 <main+0xa20>
     a48:	add	r0, r5, #1
     a4c:	cmp	r0, r8
     a50:	bge	a64 <main+0xa20>
     a54:	ldr	r1, [r9, r0, lsl #2]
     a58:	ldrb	r2, [r1]
     a5c:	cmp	r2, #45	; 0x2d
     a60:	bne	99c <main+0x958>
     a64:	movw	r1, #0
     a68:	mov	r0, sl
     a6c:	movt	r1, #0
     a70:	bl	0 <strcmp>
     a74:	cmp	r0, #0
     a78:	beq	a94 <main+0xa50>
     a7c:	movw	r1, #0
     a80:	mov	r0, sl
     a84:	movt	r1, #0
     a88:	bl	0 <strcmp>
     a8c:	cmp	r0, #0
     a90:	bne	ab0 <main+0xa6c>
     a94:	add	r0, r5, #1
     a98:	cmp	r0, r8
     a9c:	bge	ab0 <main+0xa6c>
     aa0:	ldr	r1, [r9, r0, lsl #2]
     aa4:	ldrb	r2, [r1]
     aa8:	cmp	r2, #45	; 0x2d
     aac:	bne	9ac <main+0x968>
     ab0:	movw	r1, #0
     ab4:	mov	r0, sl
     ab8:	movt	r1, #0
     abc:	bl	0 <strcmp>
     ac0:	cmp	r0, #0
     ac4:	beq	990 <main+0x94c>
     ac8:	ldr	r0, [sp, #12]
     acc:	cmp	r5, r0
     ad0:	bne	111c <main+0x10d8>
     ad4:	ldrb	r0, [sl]
     ad8:	cmp	r0, #45	; 0x2d
     adc:	beq	111c <main+0x10d8>
     ae0:	movw	r0, #0
     ae4:	str	sl, [sp, #8]
     ae8:	movt	r0, #0
     aec:	str	sl, [r0]
     af0:	ldr	r0, [sp, #12]
     af4:	b	b0c <main+0xac8>
     af8:	mov	r4, #1
     afc:	b	b08 <main+0xac4>
     b00:	mov	r0, #0
     b04:	str	r0, [sp, #16]
     b08:	mov	r0, r5
     b0c:	add	r5, r0, #1
     b10:	cmp	r5, r8
     b14:	blt	9bc <main+0x978>
     b18:	ldr	r0, [sp, #8]
     b1c:	cmp	r0, #0
     b20:	ldrbne	r0, [r0]
     b24:	cmpne	r0, #0
     b28:	beq	111c <main+0x10d8>
     b2c:	bl	0 <coda_init>
     b30:	cmp	r0, #0
     b34:	bne	11f8 <main+0x11b4>
     b38:	ldr	r0, [sp, #4]
     b3c:	clz	r0, r0
     b40:	lsr	r0, r0, #5
     b44:	bl	0 <coda_set_option_bypass_special_types>
     b48:	ldr	r0, [sp, #16]
     b4c:	bl	0 <coda_set_option_perform_conversions>
     b50:	movw	r5, #0
     b54:	movw	r6, #0
     b58:	movt	r5, #0
     b5c:	movt	r6, #0
     b60:	ldr	r0, [r5]
     b64:	cmp	r0, #0
     b68:	beq	b84 <main+0xb40>
     b6c:	movw	r1, #0
     b70:	movt	r1, #0
     b74:	bl	0 <fopen>
     b78:	cmp	r0, #0
     b7c:	str	r0, [r6]
     b80:	beq	1248 <main+0x1204>
     b84:	mov	r0, r4
     b88:	bl	0 <print_json_data>
     b8c:	b	e2c <main+0xde8>
     b90:	movw	r0, #0
     b94:	mov	r2, #0
     b98:	mov	r1, #4
     b9c:	movt	r0, #0
     ba0:	str	r2, [r0]
     ba4:	movw	r0, #0
     ba8:	movt	r0, #0
     bac:	str	r1, [r0]
     bb0:	movw	r0, #0
     bb4:	movw	r1, #0
     bb8:	movt	r0, #0
     bbc:	movt	r1, #0
     bc0:	str	r2, [r0]
     bc4:	movw	r0, #0
     bc8:	movt	r0, #0
     bcc:	str	r2, [r0]
     bd0:	movw	r0, #0
     bd4:	movt	r0, #0
     bd8:	ldr	r0, [r0]
     bdc:	str	r0, [r1]
     be0:	add	r0, r7, #1
     be4:	sub	r8, sl, r0
     be8:	cmp	r8, #1
     bec:	blt	111c <main+0x10d8>
     bf0:	add	r9, r9, r0, lsl #2
     bf4:	sub	r0, r8, #1
     bf8:	movw	r6, #0
     bfc:	movw	r7, #0
     c00:	mov	r1, #0
     c04:	mov	r5, #0
     c08:	mov	r4, #0
     c0c:	str	r0, [sp, #12]
     c10:	mov	r0, #1
     c14:	movt	r6, #0
     c18:	movt	r7, #0
     c1c:	str	r1, [sp, #8]
     c20:	str	r0, [sp, #16]
     c24:	mov	r0, #1
     c28:	str	r0, [sp, #4]
     c2c:	b	c5c <main+0xc18>
     c30:	mov	r0, #0
     c34:	str	r0, [sp, #4]
     c38:	b	da8 <main+0xd64>
     c3c:	movw	r2, #0
     c40:	movt	r2, #0
     c44:	str	r1, [r2]
     c48:	b	dac <main+0xd68>
     c4c:	movw	r2, #0
     c50:	movt	r2, #0
     c54:	str	r1, [r2]
     c58:	b	dac <main+0xd68>
     c5c:	ldr	sl, [r9, r5, lsl #2]
     c60:	mov	r1, r6
     c64:	mov	r0, sl
     c68:	bl	0 <strcmp>
     c6c:	cmp	r0, #0
     c70:	beq	d98 <main+0xd54>
     c74:	mov	r0, sl
     c78:	mov	r1, r7
     c7c:	bl	0 <strcmp>
     c80:	cmp	r0, #0
     c84:	beq	d98 <main+0xd54>
     c88:	movw	r1, #0
     c8c:	mov	r0, sl
     c90:	movt	r1, #0
     c94:	bl	0 <strcmp>
     c98:	cmp	r0, #0
     c9c:	beq	da0 <main+0xd5c>
     ca0:	movw	r1, #0
     ca4:	mov	r0, sl
     ca8:	movt	r1, #0
     cac:	bl	0 <strcmp>
     cb0:	cmp	r0, #0
     cb4:	beq	da0 <main+0xd5c>
     cb8:	movw	r1, #0
     cbc:	mov	r0, sl
     cc0:	movt	r1, #0
     cc4:	bl	0 <strcmp>
     cc8:	cmp	r0, #0
     ccc:	beq	ce8 <main+0xca4>
     cd0:	movw	r1, #0
     cd4:	mov	r0, sl
     cd8:	movt	r1, #0
     cdc:	bl	0 <strcmp>
     ce0:	cmp	r0, #0
     ce4:	bne	d04 <main+0xcc0>
     ce8:	add	r0, r5, #1
     cec:	cmp	r0, r8
     cf0:	bge	d04 <main+0xcc0>
     cf4:	ldr	r1, [r9, r0, lsl #2]
     cf8:	ldrb	r2, [r1]
     cfc:	cmp	r2, #45	; 0x2d
     d00:	bne	c3c <main+0xbf8>
     d04:	movw	r1, #0
     d08:	mov	r0, sl
     d0c:	movt	r1, #0
     d10:	bl	0 <strcmp>
     d14:	cmp	r0, #0
     d18:	beq	d34 <main+0xcf0>
     d1c:	movw	r1, #0
     d20:	mov	r0, sl
     d24:	movt	r1, #0
     d28:	bl	0 <strcmp>
     d2c:	cmp	r0, #0
     d30:	bne	d50 <main+0xd0c>
     d34:	add	r0, r5, #1
     d38:	cmp	r0, r8
     d3c:	bge	d50 <main+0xd0c>
     d40:	ldr	r1, [r9, r0, lsl #2]
     d44:	ldrb	r2, [r1]
     d48:	cmp	r2, #45	; 0x2d
     d4c:	bne	c4c <main+0xc08>
     d50:	movw	r1, #0
     d54:	mov	r0, sl
     d58:	movt	r1, #0
     d5c:	bl	0 <strcmp>
     d60:	cmp	r0, #0
     d64:	beq	c30 <main+0xbec>
     d68:	ldr	r0, [sp, #12]
     d6c:	cmp	r5, r0
     d70:	bne	111c <main+0x10d8>
     d74:	ldrb	r0, [sl]
     d78:	cmp	r0, #45	; 0x2d
     d7c:	beq	111c <main+0x10d8>
     d80:	movw	r0, #0
     d84:	str	sl, [sp, #8]
     d88:	movt	r0, #0
     d8c:	str	sl, [r0]
     d90:	ldr	r0, [sp, #12]
     d94:	b	dac <main+0xd68>
     d98:	mov	r4, #1
     d9c:	b	da8 <main+0xd64>
     da0:	mov	r0, #0
     da4:	str	r0, [sp, #16]
     da8:	mov	r0, r5
     dac:	add	r5, r0, #1
     db0:	cmp	r5, r8
     db4:	blt	c5c <main+0xc18>
     db8:	ldr	r0, [sp, #8]
     dbc:	cmp	r0, #0
     dc0:	ldrbne	r0, [r0]
     dc4:	cmpne	r0, #0
     dc8:	beq	111c <main+0x10d8>
     dcc:	bl	0 <coda_init>
     dd0:	cmp	r0, #0
     dd4:	bne	11f8 <main+0x11b4>
     dd8:	ldr	r0, [sp, #4]
     ddc:	clz	r0, r0
     de0:	lsr	r0, r0, #5
     de4:	bl	0 <coda_set_option_bypass_special_types>
     de8:	ldr	r0, [sp, #16]
     dec:	bl	0 <coda_set_option_perform_conversions>
     df0:	movw	r5, #0
     df4:	movw	r6, #0
     df8:	movt	r5, #0
     dfc:	movt	r6, #0
     e00:	ldr	r0, [r5]
     e04:	cmp	r0, #0
     e08:	beq	e24 <main+0xde0>
     e0c:	movw	r1, #0
     e10:	movt	r1, #0
     e14:	bl	0 <fopen>
     e18:	cmp	r0, #0
     e1c:	str	r0, [r6]
     e20:	beq	1248 <main+0x1204>
     e24:	mov	r0, r4
     e28:	bl	0 <print_yaml_data>
     e2c:	ldr	r0, [r5]
     e30:	cmp	r0, #0
     e34:	beq	11d0 <main+0x118c>
     e38:	ldr	r0, [r6]
     e3c:	bl	0 <fclose>
     e40:	b	11d0 <main+0x118c>
     e44:	movw	r1, #0
     e48:	movt	r1, #0
     e4c:	str	r0, [r1]
     e50:	b	10f4 <main+0x10b0>
     e54:	movw	r1, #0
     e58:	movt	r1, #0
     e5c:	str	r0, [r1]
     e60:	b	10f4 <main+0x10b0>
     e64:	mov	r0, #0
     e68:	mov	r7, r6
     e6c:	str	r0, [sp, #16]
     e70:	b	10f4 <main+0x10b0>
     e74:	ldr	r9, [sl, r6, lsl #2]
     e78:	mov	r1, r5
     e7c:	mov	r0, r9
     e80:	bl	0 <strcmp>
     e84:	cmp	r0, #0
     e88:	beq	108c <main+0x1048>
     e8c:	movw	r1, #0
     e90:	mov	r0, r9
     e94:	movt	r1, #0
     e98:	bl	0 <strcmp>
     e9c:	cmp	r0, #0
     ea0:	beq	108c <main+0x1048>
     ea4:	movw	r1, #0
     ea8:	mov	r0, r9
     eac:	movt	r1, #0
     eb0:	bl	0 <strcmp>
     eb4:	cmp	r0, #0
     eb8:	beq	ed4 <main+0xe90>
     ebc:	movw	r1, #0
     ec0:	mov	r0, r9
     ec4:	movt	r1, #0
     ec8:	bl	0 <strcmp>
     ecc:	cmp	r0, #0
     ed0:	bne	ef0 <main+0xeac>
     ed4:	add	r7, r6, #1
     ed8:	cmp	r7, r8
     edc:	bge	ef0 <main+0xeac>
     ee0:	ldr	r0, [sl, r7, lsl #2]
     ee4:	ldrb	r1, [r0]
     ee8:	cmp	r1, #45	; 0x2d
     eec:	bne	10b4 <main+0x1070>
     ef0:	movw	r1, #0
     ef4:	mov	r0, r9
     ef8:	movt	r1, #0
     efc:	bl	0 <strcmp>
     f00:	cmp	r0, #0
     f04:	beq	1094 <main+0x1050>
     f08:	movw	r1, #0
     f0c:	mov	r0, r9
     f10:	movt	r1, #0
     f14:	bl	0 <strcmp>
     f18:	cmp	r0, #0
     f1c:	beq	1094 <main+0x1050>
     f20:	movw	r1, #0
     f24:	mov	r0, r9
     f28:	movt	r1, #0
     f2c:	bl	0 <strcmp>
     f30:	cmp	r0, #0
     f34:	beq	10a4 <main+0x1060>
     f38:	movw	r1, #0
     f3c:	mov	r0, r9
     f40:	movt	r1, #0
     f44:	bl	0 <strcmp>
     f48:	cmp	r0, #0
     f4c:	beq	10a4 <main+0x1060>
     f50:	movw	r1, #0
     f54:	mov	r0, r9
     f58:	movt	r1, #0
     f5c:	bl	0 <strcmp>
     f60:	cmp	r0, #0
     f64:	beq	f80 <main+0xf3c>
     f68:	movw	r1, #0
     f6c:	mov	r0, r9
     f70:	movt	r1, #0
     f74:	bl	0 <strcmp>
     f78:	cmp	r0, #0
     f7c:	bne	f9c <main+0xf58>
     f80:	add	r7, r6, #1
     f84:	cmp	r7, r8
     f88:	bge	f9c <main+0xf58>
     f8c:	ldr	r0, [sl, r7, lsl #2]
     f90:	ldrb	r1, [r0]
     f94:	cmp	r1, #45	; 0x2d
     f98:	bne	e44 <main+0xe00>
     f9c:	movw	r1, #0
     fa0:	mov	r0, r9
     fa4:	movt	r1, #0
     fa8:	bl	0 <strcmp>
     fac:	cmp	r0, #0
     fb0:	beq	10d0 <main+0x108c>
     fb4:	movw	r1, #0
     fb8:	mov	r0, r9
     fbc:	movt	r1, #0
     fc0:	bl	0 <strcmp>
     fc4:	cmp	r0, #0
     fc8:	beq	10d0 <main+0x108c>
     fcc:	movw	r1, #0
     fd0:	mov	r0, r9
     fd4:	movt	r1, #0
     fd8:	bl	0 <strcmp>
     fdc:	cmp	r0, #0
     fe0:	beq	ffc <main+0xfb8>
     fe4:	movw	r1, #0
     fe8:	mov	r0, r9
     fec:	movt	r1, #0
     ff0:	bl	0 <strcmp>
     ff4:	cmp	r0, #0
     ff8:	bne	1018 <main+0xfd4>
     ffc:	add	r7, r6, #1
    1000:	cmp	r7, r8
    1004:	bge	1018 <main+0xfd4>
    1008:	ldr	r0, [sl, r7, lsl #2]
    100c:	ldrb	r1, [r0]
    1010:	cmp	r1, #45	; 0x2d
    1014:	bne	e54 <main+0xe10>
    1018:	movw	r1, #0
    101c:	mov	r0, r9
    1020:	movt	r1, #0
    1024:	bl	0 <strcmp>
    1028:	cmp	r0, #0
    102c:	beq	10e0 <main+0x109c>
    1030:	movw	r1, #0
    1034:	mov	r0, r9
    1038:	movt	r1, #0
    103c:	bl	0 <strcmp>
    1040:	cmp	r0, #0
    1044:	beq	10e0 <main+0x109c>
    1048:	movw	r1, #0
    104c:	mov	r0, r9
    1050:	movt	r1, #0
    1054:	bl	0 <strcmp>
    1058:	cmp	r0, #0
    105c:	beq	e64 <main+0xe20>
    1060:	ldr	r0, [sp, #12]
    1064:	cmp	r6, r0
    1068:	bne	111c <main+0x10d8>
    106c:	ldrb	r0, [r9]
    1070:	cmp	r0, #45	; 0x2d
    1074:	beq	111c <main+0x10d8>
    1078:	ldr	r7, [sp, #12]
    107c:	movw	r0, #0
    1080:	movt	r0, #0
    1084:	str	r9, [r0]
    1088:	b	10f4 <main+0x10b0>
    108c:	mov	r4, #0
    1090:	b	10f0 <main+0x10ac>
    1094:	movw	r1, #0
    1098:	mov	r0, #1
    109c:	movt	r1, #0
    10a0:	b	10ec <main+0x10a8>
    10a4:	movw	r1, #0
    10a8:	mov	r0, #1
    10ac:	movt	r1, #0
    10b0:	b	10ec <main+0x10a8>
    10b4:	bl	0 <codadump_filter_create>
    10b8:	movw	r1, #0
    10bc:	cmp	r0, #0
    10c0:	movt	r1, #0
    10c4:	str	r0, [r1, #664]	; 0x298
    10c8:	bne	10f4 <main+0x10b0>
    10cc:	b	122c <main+0x11e8>
    10d0:	movw	r1, #0
    10d4:	mov	r0, #1
    10d8:	movt	r1, #0
    10dc:	b	10ec <main+0x10a8>
    10e0:	movw	r1, #0
    10e4:	mov	r0, #1
    10e8:	movt	r1, #0
    10ec:	str	r0, [r1]
    10f0:	mov	r7, r6
    10f4:	add	r6, r7, #1
    10f8:	cmp	r6, r8
    10fc:	blt	e74 <main+0xe30>
    1100:	movw	r0, #0
    1104:	movt	r0, #0
    1108:	ldr	r0, [r0]
    110c:	cmp	r0, #0
    1110:	ldrbne	r0, [r0]
    1114:	cmpne	r0, #0
    1118:	bne	1148 <main+0x1104>
    111c:	movw	r0, #0
    1120:	mov	r1, #25
    1124:	movt	r0, #0
    1128:	ldr	r3, [r0]
    112c:	movw	r0, #0
    1130:	movt	r0, #0
    1134:	mov	r2, #1
    1138:	bl	0 <fwrite>
    113c:	bl	127c <print_help>
    1140:	mov	r0, #1
    1144:	bl	0 <exit>
    1148:	bl	0 <coda_init>
    114c:	cmp	r0, #0
    1150:	bne	11f8 <main+0x11b4>
    1154:	ldr	r0, [sp, #16]
    1158:	clz	r0, r0
    115c:	lsr	r0, r0, #5
    1160:	bl	0 <coda_set_option_bypass_special_types>
    1164:	mov	r0, #0
    1168:	bl	0 <coda_set_option_perform_boundary_checks>
    116c:	mov	r0, r4
    1170:	bl	0 <coda_set_option_perform_conversions>
    1174:	bl	0 <traverse_info_init>
    1178:	bl	0 <dim_info_init>
    117c:	movw	r4, #0
    1180:	movw	r5, #0
    1184:	movt	r4, #0
    1188:	movt	r5, #0
    118c:	ldr	r0, [r4]
    1190:	cmp	r0, #0
    1194:	beq	11b0 <main+0x116c>
    1198:	movw	r1, #0
    119c:	movt	r1, #0
    11a0:	bl	0 <fopen>
    11a4:	cmp	r0, #0
    11a8:	str	r0, [r5]
    11ac:	beq	1250 <main+0x120c>
    11b0:	bl	0 <traverse_product>
    11b4:	ldr	r0, [r4]
    11b8:	cmp	r0, #0
    11bc:	beq	11c8 <main+0x1184>
    11c0:	ldr	r0, [r5]
    11c4:	bl	0 <fclose>
    11c8:	bl	0 <dim_info_done>
    11cc:	bl	0 <traverse_info_done>
    11d0:	bl	0 <coda_done>
    11d4:	mov	r0, #0
    11d8:	sub	sp, fp, #28
    11dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11e0:	bl	127c <print_help>
    11e4:	mov	r0, #0
    11e8:	bl	0 <exit>
    11ec:	bl	17e0 <print_version>
    11f0:	mov	r0, #0
    11f4:	bl	0 <exit>
    11f8:	movw	r0, #0
    11fc:	movt	r0, #0
    1200:	ldr	r4, [r0]
    1204:	bl	0 <coda_get_errno>
    1208:	ldr	r0, [r0]
    120c:	bl	0 <coda_errno_to_string>
    1210:	movw	r1, #0
    1214:	mov	r2, r0
    1218:	mov	r0, r4
    121c:	movt	r1, #0
    1220:	bl	0 <fprintf>
    1224:	mov	r0, #1
    1228:	bl	0 <exit>
    122c:	movw	r0, #0
    1230:	mov	r1, #40	; 0x28
    1234:	movt	r0, #0
    1238:	ldr	r3, [r0]
    123c:	movw	r0, #0
    1240:	movt	r0, #0
    1244:	b	1134 <main+0x10f0>
    1248:	ldr	r2, [r5]
    124c:	b	1264 <main+0x1220>
    1250:	ldr	r2, [r4]
    1254:	b	1264 <main+0x1220>
    1258:	movw	r0, #0
    125c:	movt	r0, #0
    1260:	ldr	r2, [r0]
    1264:	movw	r0, #0
    1268:	movw	r1, #0
    126c:	movt	r0, #0
    1270:	movt	r1, #0
    1274:	ldr	r0, [r0]
    1278:	b	1220 <main+0x11dc>

0000127c <print_help>:
    127c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1280:	add	fp, sp, #28
    1284:	sub	sp, sp, #4
    1288:	movw	r0, #0
    128c:	movt	r0, #0
    1290:	bl	0 <puts>
    1294:	movw	r0, #0
    1298:	movt	r0, #0
    129c:	bl	0 <puts>
    12a0:	movw	r0, #0
    12a4:	movt	r0, #0
    12a8:	bl	0 <puts>
    12ac:	movw	r8, #0
    12b0:	movt	r8, #0
    12b4:	mov	r0, r8
    12b8:	bl	0 <puts>
    12bc:	movw	r0, #0
    12c0:	movt	r0, #0
    12c4:	bl	0 <puts>
    12c8:	movw	r0, #0
    12cc:	movt	r0, #0
    12d0:	bl	0 <puts>
    12d4:	movw	r5, #0
    12d8:	movt	r5, #0
    12dc:	mov	r0, r5
    12e0:	bl	0 <puts>
    12e4:	movw	r6, #0
    12e8:	movt	r6, #0
    12ec:	mov	r0, r6
    12f0:	bl	0 <puts>
    12f4:	movw	r7, #0
    12f8:	movt	r7, #0
    12fc:	mov	r0, r7
    1300:	bl	0 <puts>
    1304:	movw	r4, #0
    1308:	movt	r4, #0
    130c:	mov	r0, r4
    1310:	bl	0 <puts>
    1314:	movw	r0, #0
    1318:	movt	r0, #0
    131c:	bl	0 <puts>
    1320:	movw	r0, #0
    1324:	movt	r0, #0
    1328:	bl	0 <puts>
    132c:	movw	r0, #0
    1330:	movt	r0, #0
    1334:	bl	0 <puts>
    1338:	movw	r0, #0
    133c:	movt	r0, #0
    1340:	bl	0 <puts>
    1344:	movw	r0, #0
    1348:	movt	r0, #0
    134c:	bl	0 <puts>
    1350:	movw	r0, #0
    1354:	movt	r0, #0
    1358:	bl	0 <puts>
    135c:	movw	r0, #0
    1360:	movt	r0, #0
    1364:	bl	0 <puts>
    1368:	movw	r0, #0
    136c:	movt	r0, #0
    1370:	bl	0 <puts>
    1374:	movw	r0, #0
    1378:	movt	r0, #0
    137c:	bl	0 <puts>
    1380:	movw	sl, #0
    1384:	movt	sl, #0
    1388:	mov	r0, sl
    138c:	bl	0 <puts>
    1390:	movw	r0, #0
    1394:	movt	r0, #0
    1398:	bl	0 <puts>
    139c:	movw	r0, #0
    13a0:	movt	r0, #0
    13a4:	bl	0 <puts>
    13a8:	movw	r0, #0
    13ac:	movt	r0, #0
    13b0:	bl	0 <puts>
    13b4:	mov	r0, #10
    13b8:	bl	0 <putchar>
    13bc:	movw	r0, #0
    13c0:	movt	r0, #0
    13c4:	bl	0 <puts>
    13c8:	movw	r0, #0
    13cc:	movt	r0, #0
    13d0:	bl	0 <puts>
    13d4:	mov	r0, r8
    13d8:	bl	0 <puts>
    13dc:	mov	r0, r5
    13e0:	bl	0 <puts>
    13e4:	mov	r0, r6
    13e8:	bl	0 <puts>
    13ec:	mov	r0, r7
    13f0:	bl	0 <puts>
    13f4:	mov	r0, r4
    13f8:	bl	0 <puts>
    13fc:	movw	r0, #0
    1400:	movt	r0, #0
    1404:	bl	0 <puts>
    1408:	movw	r0, #0
    140c:	movt	r0, #0
    1410:	bl	0 <puts>
    1414:	movw	r0, #0
    1418:	movt	r0, #0
    141c:	bl	0 <puts>
    1420:	movw	r0, #0
    1424:	movt	r0, #0
    1428:	bl	0 <puts>
    142c:	movw	r6, #0
    1430:	movt	r6, #0
    1434:	mov	r0, r6
    1438:	bl	0 <puts>
    143c:	movw	r0, #0
    1440:	movt	r0, #0
    1444:	bl	0 <puts>
    1448:	movw	r0, #0
    144c:	movt	r0, #0
    1450:	bl	0 <puts>
    1454:	movw	r0, #0
    1458:	movt	r0, #0
    145c:	bl	0 <puts>
    1460:	movw	r0, #0
    1464:	movt	r0, #0
    1468:	bl	0 <puts>
    146c:	movw	r0, #0
    1470:	movt	r0, #0
    1474:	bl	0 <puts>
    1478:	movw	r0, #0
    147c:	movt	r0, #0
    1480:	bl	0 <puts>
    1484:	movw	r0, #0
    1488:	movt	r0, #0
    148c:	bl	0 <puts>
    1490:	mov	r0, sl
    1494:	bl	0 <puts>
    1498:	movw	r0, #0
    149c:	movt	r0, #0
    14a0:	mov	r9, r0
    14a4:	bl	0 <puts>
    14a8:	movw	r0, #0
    14ac:	movt	r0, #0
    14b0:	mov	r8, r0
    14b4:	bl	0 <puts>
    14b8:	movw	r0, #0
    14bc:	movt	r0, #0
    14c0:	mov	r7, r0
    14c4:	bl	0 <puts>
    14c8:	mov	r0, #10
    14cc:	bl	0 <putchar>
    14d0:	movw	r0, #0
    14d4:	movt	r0, #0
    14d8:	bl	0 <puts>
    14dc:	movw	r0, #0
    14e0:	movt	r0, #0
    14e4:	bl	0 <puts>
    14e8:	movw	r0, #0
    14ec:	movt	r0, #0
    14f0:	bl	0 <puts>
    14f4:	movw	r4, #0
    14f8:	movt	r4, #0
    14fc:	mov	r0, r4
    1500:	bl	0 <puts>
    1504:	movw	r5, #0
    1508:	movt	r5, #0
    150c:	mov	r0, r5
    1510:	bl	0 <puts>
    1514:	movw	r0, #0
    1518:	movt	r0, #0
    151c:	bl	0 <puts>
    1520:	movw	r0, #0
    1524:	movt	r0, #0
    1528:	bl	0 <puts>
    152c:	movw	r0, #0
    1530:	movt	r0, #0
    1534:	bl	0 <puts>
    1538:	mov	r0, r6
    153c:	bl	0 <puts>
    1540:	movw	r0, #0
    1544:	movt	r0, #0
    1548:	bl	0 <puts>
    154c:	movw	r0, #0
    1550:	movt	r0, #0
    1554:	bl	0 <puts>
    1558:	movw	r0, #0
    155c:	movt	r0, #0
    1560:	bl	0 <puts>
    1564:	movw	r6, #0
    1568:	movt	r6, #0
    156c:	mov	r0, r6
    1570:	bl	0 <puts>
    1574:	mov	r0, sl
    1578:	bl	0 <puts>
    157c:	mov	r0, r9
    1580:	bl	0 <puts>
    1584:	mov	r0, r8
    1588:	bl	0 <puts>
    158c:	mov	r0, r7
    1590:	bl	0 <puts>
    1594:	mov	r0, #10
    1598:	bl	0 <putchar>
    159c:	movw	r0, #0
    15a0:	movt	r0, #0
    15a4:	bl	0 <puts>
    15a8:	movw	r0, #0
    15ac:	movt	r0, #0
    15b0:	bl	0 <puts>
    15b4:	movw	r0, #0
    15b8:	movt	r0, #0
    15bc:	bl	0 <puts>
    15c0:	mov	r0, r4
    15c4:	bl	0 <puts>
    15c8:	mov	r0, r5
    15cc:	bl	0 <puts>
    15d0:	movw	r0, #0
    15d4:	movt	r0, #0
    15d8:	bl	0 <puts>
    15dc:	movw	r0, #0
    15e0:	movt	r0, #0
    15e4:	bl	0 <puts>
    15e8:	movw	r0, #0
    15ec:	movt	r0, #0
    15f0:	bl	0 <puts>
    15f4:	movw	r0, #0
    15f8:	movt	r0, #0
    15fc:	bl	0 <puts>
    1600:	movw	r0, #0
    1604:	movt	r0, #0
    1608:	bl	0 <puts>
    160c:	movw	r0, #0
    1610:	movt	r0, #0
    1614:	bl	0 <puts>
    1618:	movw	r0, #0
    161c:	movt	r0, #0
    1620:	bl	0 <puts>
    1624:	movw	r0, #0
    1628:	movt	r0, #0
    162c:	bl	0 <puts>
    1630:	mov	r0, r6
    1634:	bl	0 <puts>
    1638:	mov	r0, sl
    163c:	bl	0 <puts>
    1640:	mov	r0, r9
    1644:	bl	0 <puts>
    1648:	mov	r0, r8
    164c:	bl	0 <puts>
    1650:	mov	r0, r7
    1654:	bl	0 <puts>
    1658:	mov	r0, #10
    165c:	bl	0 <putchar>
    1660:	movw	r0, #0
    1664:	movt	r0, #0
    1668:	bl	0 <puts>
    166c:	movw	r0, #0
    1670:	movt	r0, #0
    1674:	bl	0 <puts>
    1678:	movw	r0, #0
    167c:	movt	r0, #0
    1680:	bl	0 <puts>
    1684:	movw	r0, #0
    1688:	movt	r0, #0
    168c:	bl	0 <puts>
    1690:	movw	r0, #0
    1694:	movt	r0, #0
    1698:	bl	0 <puts>
    169c:	movw	r0, #0
    16a0:	movt	r0, #0
    16a4:	bl	0 <puts>
    16a8:	movw	r0, #0
    16ac:	movt	r0, #0
    16b0:	bl	0 <puts>
    16b4:	movw	r0, #0
    16b8:	movt	r0, #0
    16bc:	bl	0 <puts>
    16c0:	movw	r0, #0
    16c4:	movt	r0, #0
    16c8:	bl	0 <puts>
    16cc:	movw	r0, #0
    16d0:	movt	r0, #0
    16d4:	bl	0 <puts>
    16d8:	movw	r0, #0
    16dc:	movt	r0, #0
    16e0:	bl	0 <puts>
    16e4:	mov	r0, r6
    16e8:	bl	0 <puts>
    16ec:	movw	r0, #0
    16f0:	movt	r0, #0
    16f4:	bl	0 <puts>
    16f8:	movw	r0, #0
    16fc:	movt	r0, #0
    1700:	bl	0 <puts>
    1704:	movw	r0, #0
    1708:	movt	r0, #0
    170c:	bl	0 <puts>
    1710:	movw	r0, #0
    1714:	movt	r0, #0
    1718:	bl	0 <puts>
    171c:	movw	r0, #0
    1720:	movt	r0, #0
    1724:	bl	0 <puts>
    1728:	movw	r0, #0
    172c:	movt	r0, #0
    1730:	bl	0 <puts>
    1734:	mov	r0, #10
    1738:	bl	0 <putchar>
    173c:	movw	r0, #0
    1740:	movt	r0, #0
    1744:	bl	0 <puts>
    1748:	movw	r0, #0
    174c:	movt	r0, #0
    1750:	bl	0 <puts>
    1754:	mov	r0, #10
    1758:	bl	0 <putchar>
    175c:	movw	r0, #0
    1760:	movt	r0, #0
    1764:	bl	0 <puts>
    1768:	movw	r0, #0
    176c:	movt	r0, #0
    1770:	bl	0 <puts>
    1774:	mov	r0, #10
    1778:	bl	0 <putchar>
    177c:	movw	r0, #0
    1780:	movt	r0, #0
    1784:	bl	0 <puts>
    1788:	movw	r0, #0
    178c:	movt	r0, #0
    1790:	bl	0 <puts>
    1794:	movw	r0, #0
    1798:	movt	r0, #0
    179c:	bl	0 <puts>
    17a0:	movw	r0, #0
    17a4:	movt	r0, #0
    17a8:	bl	0 <puts>
    17ac:	movw	r0, #0
    17b0:	movt	r0, #0
    17b4:	bl	0 <puts>
    17b8:	movw	r0, #0
    17bc:	movt	r0, #0
    17c0:	bl	0 <puts>
    17c4:	movw	r0, #0
    17c8:	movt	r0, #0
    17cc:	bl	0 <puts>
    17d0:	mov	r0, #10
    17d4:	sub	sp, fp, #28
    17d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17dc:	b	0 <putchar>

000017e0 <print_version>:
    17e0:	push	{fp, lr}
    17e4:	mov	fp, sp
    17e8:	bl	0 <coda_get_libcoda_version>
    17ec:	mov	r1, r0
    17f0:	movw	r0, #0
    17f4:	movt	r0, #0
    17f8:	bl	0 <printf>
    17fc:	movw	r0, #0
    1800:	movt	r0, #0
    1804:	bl	0 <puts>
    1808:	mov	r0, #10
    180c:	pop	{fp, lr}
    1810:	b	0 <putchar>
