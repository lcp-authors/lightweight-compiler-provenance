
../repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-detect.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <indent>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	ldr	r0, [pc, #80]	; 6c <indent+0x6c>
  18:	ldr	r0, [r0]
  1c:	cmp	r0, #0
  20:	bge	38 <indent+0x38>
  24:	ldr	r0, [pc, #68]	; 70 <indent+0x70>
  28:	ldr	r1, [pc, #72]	; 78 <indent+0x78>
  2c:	mov	r2, #52	; 0x34
  30:	ldr	r3, [pc, #48]	; 68 <indent+0x68>
  34:	bl	0 <__assert_fail>
  38:	ldr	r0, [pc, #44]	; 6c <indent+0x6c>
  3c:	ldr	r4, [r0]
  40:	cmp	r4, #0
  44:	beq	58 <indent+0x58>
  48:	ldr	r0, [pc, #36]	; 74 <indent+0x74>
  4c:	bl	0 <printf>
  50:	sub	r4, r4, #1
  54:	b	40 <indent+0x40>
  58:	ldr	r4, [sp, #8]
  5c:	ldr	lr, [sp, #4]
  60:	add	sp, sp, #16
  64:	bx	lr
  68:	.word	0x000000a6
  6c:	.word	0x00000000
  70:	.word	0x00000090
  74:	.word	0x00000070
  78:	.word	0x00000000

0000007c <generate_detection_tree_sub>:
  7c:	mov	ip, sp
  80:	sub	sp, sp, #24
  84:	str	ip, [sp]
  88:	str	lr, [sp, #4]
  8c:	str	r4, [sp, #8]
  90:	str	r5, [sp, #12]
  94:	str	r6, [sp, #16]
  98:	mov	r4, r1
  9c:	mov	r5, r0
  a0:	cmp	r5, #0
  a4:	beq	1c0 <generate_detection_tree_sub+0x144>
  a8:	ldr	r1, [r5]
  ac:	cmp	r1, #0
  b0:	bne	c8 <generate_detection_tree_sub+0x4c>
  b4:	ldr	r2, [r5, #4]
  b8:	cmp	r2, #0
  bc:	movne	r3, #1
  c0:	moveq	r3, #0
  c4:	b	cc <generate_detection_tree_sub+0x50>
  c8:	mov	r3, #1
  cc:	cmp	r3, #0
  d0:	beq	170 <generate_detection_tree_sub+0xf4>
  d4:	ldr	r0, [r5]
  d8:	cmp	r0, #0
  dc:	bne	f8 <generate_detection_tree_sub+0x7c>
  e0:	add	r4, r4, #1
  e4:	bl	0 <indent>
  e8:	ldr	r0, [r5, #4]
  ec:	ldr	r1, [pc, #244]	; 1e8 <generate_detection_tree_sub+0x16c>
  f0:	bl	0 <coda_expression_print>
  f4:	b	108 <generate_detection_tree_sub+0x8c>
  f8:	bl	0 <indent>
  fc:	ldr	r0, [pc, #236]	; 1f0 <generate_detection_tree_sub+0x174>
 100:	ldr	r1, [r5]
 104:	bl	0 <printf>
 108:	ldr	r1, [r5, #8]
 10c:	cmp	r1, #0
 110:	beq	168 <generate_detection_tree_sub+0xec>
 114:	ldr	r2, [r5, #8]
 118:	ldr	r3, [r2, #8]
 11c:	ldr	r0, [pc, #184]	; 1dc <generate_detection_tree_sub+0x160>
 120:	ldr	r2, [r3, #44]	; 0x2c
 124:	ldr	r1, [r2, #20]
 128:	ldr	r1, [r1]
 12c:	ldr	ip, [r3, #44]	; 0x2c
 130:	ldr	r2, [ip]
 134:	ldr	r3, [r3, #4]
 138:	bl	0 <printf>
 13c:	ldr	r2, [r5, #12]
 140:	cmp	r2, #0
 144:	ble	15c <generate_detection_tree_sub+0xe0>
 148:	ldr	r0, [pc, #156]	; 1ec <generate_detection_tree_sub+0x170>
 14c:	ldr	r2, [r5, #12]
 150:	mov	r1, r4
 154:	bl	0 <printf>
 158:	b	168 <generate_detection_tree_sub+0xec>
 15c:	ldr	r0, [pc, #124]	; 1e0 <generate_detection_tree_sub+0x164>
 160:	mov	r1, r4
 164:	bl	0 <printf>
 168:	ldr	r0, [pc, #104]	; 1d8 <generate_detection_tree_sub+0x15c>
 16c:	bl	0 <printf>
 170:	mov	r6, #0
 174:	ldr	r3, [r5, #12]
 178:	cmp	r6, r3
 17c:	bge	1c0 <generate_detection_tree_sub+0x144>
 180:	ldr	r2, [pc, #92]	; 1e4 <generate_detection_tree_sub+0x168>
 184:	ldr	ip, [pc, #88]	; 1e4 <generate_detection_tree_sub+0x168>
 188:	ldr	r1, [ip]
 18c:	add	r3, r1, #1
 190:	str	r3, [r2]
 194:	ldr	r3, [r5, #16]
 198:	ldr	r0, [r3, r6, lsl #2]
 19c:	add	r1, r4, r6
 1a0:	bl	7c <generate_detection_tree_sub>
 1a4:	ldr	r1, [pc, #56]	; 1e4 <generate_detection_tree_sub+0x168>
 1a8:	ldr	r3, [pc, #52]	; 1e4 <generate_detection_tree_sub+0x168>
 1ac:	ldr	r0, [r3]
 1b0:	sub	r0, r0, #1
 1b4:	str	r0, [r1]
 1b8:	add	r6, r6, #1
 1bc:	b	174 <generate_detection_tree_sub+0xf8>
 1c0:	ldr	r4, [sp, #8]
 1c4:	ldr	r5, [sp, #12]
 1c8:	ldr	r6, [sp, #16]
 1cc:	ldr	lr, [sp, #4]
 1d0:	add	sp, sp, #24
 1d4:	bx	lr
 1d8:	.word	0x00000073
 1dc:	.word	0x00000062
 1e0:	.word	0x00000075
	...
 1ec:	.word	0x00000081
 1f0:	.word	0x0000009c

000001f4 <generate_detection_tree>:
 1f4:	mov	ip, sp
 1f8:	sub	sp, sp, #8
 1fc:	str	ip, [sp]
 200:	str	lr, [sp, #4]
 204:	bl	0 <coda_data_dictionary_get_detection_tree>
 208:	mov	r1, #0
 20c:	bl	7c <generate_detection_tree_sub>
 210:	ldr	lr, [sp, #4]
 214:	add	sp, sp, #8
 218:	bx	lr
