
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #112	; 0x70
       8:	str	ip, [sp, #4]
       c:	str	lr, [sp, #8]
      10:	str	r4, [sp, #16]
      14:	str	r5, [sp, #20]
      18:	str	r6, [sp, #24]
      1c:	str	r7, [sp, #28]
      20:	str	r8, [sp, #32]
      24:	str	r9, [sp, #36]	; 0x24
      28:	ldr	r7, [ip, #8]
      2c:	ldr	r9, [ip, #4]
      30:	ldr	r4, [ip]
      34:	mov	r8, r3
      38:	mov	r6, r2
      3c:	mov	r5, r0
      40:	ldr	ip, [r5, #48]	; 0x30
      44:	cmp	ip, #0
      48:	bne	f8 <read_bytes+0xf8>
      4c:	ldr	r0, [r5, #16]
      50:	cmp	r0, #0
      54:	beq	74 <read_bytes+0x74>
      58:	cmp	r0, #1
      5c:	beq	74 <read_bytes+0x74>
      60:	ldr	r0, [pc, #376]	; 1e0 <read_bytes+0x1e0>
      64:	ldr	r1, [pc, #384]	; 1ec <read_bytes+0x1ec>
      68:	mov	r2, #83	; 0x53
      6c:	ldr	r3, [pc, #372]	; 1e8 <read_bytes+0x1e8>
      70:	bl	0 <__assert_fail>
      74:	adds	r0, r6, r4
      78:	adc	r1, r8, r9
      7c:	ldr	r2, [r5, #8]
      80:	ldr	ip, [r5, #12]
      84:	cmp	r1, ip
      88:	bne	98 <read_bytes+0x98>
      8c:	cmp	r0, r2
      90:	bhi	a0 <read_bytes+0xa0>
      94:	b	b4 <read_bytes+0xb4>
      98:	cmp	r1, ip
      9c:	bls	b4 <read_bytes+0xb4>
      a0:	mvn	r0, #300	; 0x12c
      a4:	ldr	r1, [pc, #304]	; 1dc <read_bytes+0x1dc>
      a8:	bl	0 <coda_set_error>
      ac:	mvn	r0, #0
      b0:	b	1b8 <read_bytes+0x1b8>
      b4:	ldr	r0, [r5, #56]	; 0x38
      b8:	mov	r2, r4
      bc:	mov	r3, r6
      c0:	mov	r1, r7
      c4:	bl	0 <pread>
      c8:	cmp	r0, #0
      cc:	bge	1b4 <read_bytes+0x1b4>
      d0:	bl	0 <__errno_location>
      d4:	ldr	r0, [r0]
      d8:	bl	0 <strerror>
      dc:	mvn	r3, #21
      e0:	ldr	r1, [pc, #252]	; 1e4 <read_bytes+0x1e4>
      e4:	mov	r2, r0
      e8:	mov	r0, r3
      ec:	bl	0 <coda_set_error>
      f0:	mvn	r0, #0
      f4:	b	1b8 <read_bytes+0x1b8>
      f8:	adds	ip, r6, r4
      fc:	adc	r1, r8, r9
     100:	ldr	r2, [r5, #40]	; 0x28
     104:	ldr	r3, [r5, #44]	; 0x2c
     108:	cmp	r1, r3
     10c:	bne	11c <read_bytes+0x11c>
     110:	cmp	ip, r2
     114:	bhi	124 <read_bytes+0x124>
     118:	b	1a0 <read_bytes+0x1a0>
     11c:	cmp	r1, r3
     120:	bls	1a0 <read_bytes+0x1a0>
     124:	ldr	r3, [r5, #16]
     128:	cmp	r3, #0
     12c:	beq	18c <read_bytes+0x18c>
     130:	cmp	r3, #1
     134:	beq	18c <read_bytes+0x18c>
     138:	add	r2, sp, #64	; 0x40
     13c:	mov	r1, r9
     140:	mov	r0, r4
     144:	bl	0 <coda_str64>
     148:	add	r2, sp, #88	; 0x58
     14c:	mov	r1, r8
     150:	mov	r0, r6
     154:	bl	0 <coda_str64>
     158:	ldr	r0, [r5, #40]	; 0x28
     15c:	ldr	r1, [r5, #44]	; 0x2c
     160:	add	r2, sp, #40	; 0x28
     164:	bl	0 <coda_str64>
     168:	mvn	r0, #300	; 0x12c
     16c:	ldr	r1, [pc, #124]	; 1f0 <read_bytes+0x1f0>
     170:	add	r2, sp, #64	; 0x40
     174:	add	r3, sp, #88	; 0x58
     178:	add	ip, sp, #40	; 0x28
     17c:	str	ip, [sp]
     180:	bl	0 <coda_set_error>
     184:	mvn	r0, #0
     188:	b	1b8 <read_bytes+0x1b8>
     18c:	mvn	r0, #300	; 0x12c
     190:	ldr	r1, [pc, #68]	; 1dc <read_bytes+0x1dc>
     194:	bl	0 <coda_set_error>
     198:	mvn	r0, #0
     19c:	b	1b8 <read_bytes+0x1b8>
     1a0:	ldr	r0, [r5, #48]	; 0x30
     1a4:	add	r1, r0, r6
     1a8:	mov	r2, r4
     1ac:	mov	r0, r7
     1b0:	bl	0 <memcpy>
     1b4:	mov	r0, #0
     1b8:	ldr	r4, [sp, #16]
     1bc:	ldr	r5, [sp, #20]
     1c0:	ldr	r6, [sp, #24]
     1c4:	ldr	r7, [sp, #28]
     1c8:	ldr	r8, [sp, #32]
     1cc:	ldr	r9, [sp, #36]	; 0x24
     1d0:	ldr	lr, [sp, #8]
     1d4:	add	sp, sp, #112	; 0x70
     1d8:	bx	lr
     1dc:	.word	0x00000324
     1e0:	.word	0x00000384
     1e4:	.word	0x00000131
     1e8:	.word	0x00000474
     1ec:	.word	0x0000014f
     1f0:	.word	0x000001ae

000001f4 <swap2>:
     1f4:	mov	ip, sp
     1f8:	sub	sp, sp, #8
     1fc:	str	ip, [sp]
     200:	str	lr, [sp, #4]
     204:	ldrb	ip, [r0]
     208:	ldrb	r1, [r0, #1]
     20c:	eor	r1, ip, r1
     210:	strb	r1, [r0]
     214:	ldrb	r2, [r0, #1]
     218:	eor	r1, r1, r2
     21c:	strb	r1, [r0, #1]
     220:	ldrb	r3, [r0]
     224:	eor	r2, r3, r1
     228:	strb	r2, [r0]
     22c:	ldr	lr, [sp, #4]
     230:	add	sp, sp, #8
     234:	bx	lr

00000238 <swap4>:
     238:	mov	ip, sp
     23c:	sub	sp, sp, #8
     240:	str	ip, [sp]
     244:	str	lr, [sp, #4]
     248:	ldrb	r2, [r0]
     24c:	ldrb	r1, [r0, #3]
     250:	eor	r2, r2, r1
     254:	strb	r2, [r0]
     258:	ldrb	r3, [r0, #3]
     25c:	eor	r1, r2, r3
     260:	strb	r1, [r0, #3]
     264:	ldrb	r2, [r0]
     268:	eor	r3, r2, r1
     26c:	strb	r3, [r0]
     270:	ldrb	r3, [r0, #1]
     274:	ldrb	ip, [r0, #2]
     278:	eor	ip, r3, ip
     27c:	strb	ip, [r0, #1]
     280:	ldrb	r1, [r0, #2]
     284:	eor	r1, ip, r1
     288:	strb	r1, [r0, #2]
     28c:	ldrb	r3, [r0, #1]
     290:	eor	r1, r3, r1
     294:	strb	r1, [r0, #1]
     298:	ldr	lr, [sp, #4]
     29c:	add	sp, sp, #8
     2a0:	bx	lr

000002a4 <swap8>:
     2a4:	mov	ip, sp
     2a8:	sub	sp, sp, #8
     2ac:	str	ip, [sp]
     2b0:	str	lr, [sp, #4]
     2b4:	ldrb	r1, [r0]
     2b8:	ldrb	r2, [r0, #7]
     2bc:	eor	r2, r1, r2
     2c0:	strb	r2, [r0]
     2c4:	ldrb	r3, [r0, #7]
     2c8:	eor	r1, r2, r3
     2cc:	strb	r1, [r0, #7]
     2d0:	ldrb	r3, [r0]
     2d4:	eor	r1, r3, r1
     2d8:	strb	r1, [r0]
     2dc:	ldrb	r1, [r0, #1]
     2e0:	ldrb	r2, [r0, #6]
     2e4:	eor	ip, r1, r2
     2e8:	strb	ip, [r0, #1]
     2ec:	ldrb	r1, [r0, #6]
     2f0:	eor	r2, ip, r1
     2f4:	strb	r2, [r0, #6]
     2f8:	ldrb	r1, [r0, #1]
     2fc:	eor	r3, r1, r2
     300:	strb	r3, [r0, #1]
     304:	ldrb	r3, [r0, #2]
     308:	ldrb	r1, [r0, #5]
     30c:	eor	ip, r3, r1
     310:	strb	ip, [r0, #2]
     314:	ldrb	r1, [r0, #5]
     318:	eor	r3, ip, r1
     31c:	strb	r3, [r0, #5]
     320:	ldrb	r2, [r0, #2]
     324:	eor	r1, r2, r3
     328:	strb	r1, [r0, #2]
     32c:	ldrb	r1, [r0, #3]
     330:	ldrb	r2, [r0, #4]
     334:	eor	r1, r1, r2
     338:	strb	r1, [r0, #3]
     33c:	ldrb	ip, [r0, #4]
     340:	eor	r1, r1, ip
     344:	strb	r1, [r0, #4]
     348:	ldrb	r2, [r0, #3]
     34c:	eor	r1, r2, r1
     350:	strb	r1, [r0, #3]
     354:	ldr	lr, [sp, #4]
     358:	add	sp, sp, #8
     35c:	bx	lr

00000360 <read_length_value>:
     360:	mov	ip, sp
     364:	sub	sp, sp, #48	; 0x30
     368:	str	ip, [sp, #12]
     36c:	str	lr, [sp, #16]
     370:	str	r4, [sp, #24]
     374:	str	r5, [sp, #28]
     378:	str	r6, [sp, #32]
     37c:	mov	r5, r2
     380:	mov	r4, r1
     384:	ldr	r1, [r0, #56]	; 0x38
     388:	cmp	r1, #5
     38c:	beq	404 <read_length_value+0xa4>
     390:	ldr	r0, [r0, #52]	; 0x34
     394:	ldr	r2, [r4]
     398:	ldr	r3, [r4, #4]
     39c:	mov	r1, #0
     3a0:	mov	ip, #4
     3a4:	add	r6, sp, #40	; 0x28
     3a8:	str	r6, [sp, #8]
     3ac:	str	r1, [sp, #4]
     3b0:	str	ip, [sp]
     3b4:	bl	0 <read_bytes>
     3b8:	cmp	r0, #0
     3bc:	bge	3c8 <read_length_value+0x68>
     3c0:	mvn	r0, #0
     3c4:	b	464 <read_length_value+0x104>
     3c8:	add	r0, sp, #40	; 0x28
     3cc:	bl	238 <swap4>
     3d0:	ldr	ip, [sp, #40]	; 0x28
     3d4:	asr	r0, ip, #31
     3d8:	str	ip, [r5]
     3dc:	str	r0, [r5, #4]
     3e0:	ldr	ip, [r4]
     3e4:	ldr	r2, [r4, #4]
     3e8:	mov	r1, #0
     3ec:	mov	r0, #4
     3f0:	adds	r3, ip, r0
     3f4:	adc	r0, r2, r1
     3f8:	str	r3, [r4]
     3fc:	str	r0, [r4, #4]
     400:	b	460 <read_length_value+0x100>
     404:	ldr	r0, [r0, #52]	; 0x34
     408:	ldr	r2, [r4]
     40c:	ldr	r3, [r4, #4]
     410:	mov	r1, #0
     414:	mov	ip, #8
     418:	str	r5, [sp, #8]
     41c:	str	r1, [sp, #4]
     420:	str	ip, [sp]
     424:	bl	0 <read_bytes>
     428:	cmp	r0, #0
     42c:	bge	438 <read_length_value+0xd8>
     430:	mvn	r0, #0
     434:	b	464 <read_length_value+0x104>
     438:	mov	r0, r5
     43c:	bl	2a4 <swap8>
     440:	ldr	ip, [r4]
     444:	ldr	r3, [r4, #4]
     448:	mov	r2, #0
     44c:	mov	r1, #8
     450:	adds	ip, ip, r1
     454:	adc	r3, r3, r2
     458:	str	ip, [r4]
     45c:	str	r3, [r4, #4]
     460:	mov	r0, #0
     464:	ldr	r4, [sp, #24]
     468:	ldr	r5, [sp, #28]
     46c:	ldr	r6, [sp, #32]
     470:	ldr	lr, [sp, #16]
     474:	add	sp, sp, #48	; 0x30
     478:	bx	lr

0000047c <read_att_array>:
     47c:	mov	ip, sp
     480:	sub	sp, sp, #120	; 0x78
     484:	str	ip, [sp, #16]
     488:	str	lr, [sp, #20]
     48c:	str	r4, [sp, #28]
     490:	str	r5, [sp, #32]
     494:	str	r6, [sp, #36]	; 0x24
     498:	str	r7, [sp, #40]	; 0x28
     49c:	str	r8, [sp, #44]	; 0x2c
     4a0:	str	r9, [sp, #48]	; 0x30
     4a4:	str	sl, [sp, #52]	; 0x34
     4a8:	str	fp, [sp, #56]	; 0x38
     4ac:	mov	r9, r3
     4b0:	mov	r8, r2
     4b4:	mov	r7, r1
     4b8:	mov	r6, r0
     4bc:	ldr	r0, [r6, #52]	; 0x34
     4c0:	ldr	r2, [r7]
     4c4:	ldr	r3, [r7, #4]
     4c8:	mov	r1, #0
     4cc:	mov	ip, #4
     4d0:	add	r5, sp, #68	; 0x44
     4d4:	str	r5, [sp, #8]
     4d8:	str	r1, [sp, #4]
     4dc:	str	ip, [sp]
     4e0:	bl	0 <read_bytes>
     4e4:	cmp	r0, #0
     4e8:	bge	4f4 <read_att_array+0x78>
     4ec:	mvn	r0, #0
     4f0:	b	d74 <read_att_array+0x8f8>
     4f4:	add	r0, sp, #68	; 0x44
     4f8:	bl	238 <swap4>
     4fc:	ldr	r0, [r7]
     500:	ldr	r3, [r7, #4]
     504:	mov	r2, #0
     508:	mov	r1, #4
     50c:	adds	r1, r0, r1
     510:	adc	r2, r3, r2
     514:	str	r1, [r7]
     518:	str	r2, [r7, #4]
     51c:	add	r2, sp, #80	; 0x50
     520:	mov	r1, r7
     524:	mov	r0, r6
     528:	bl	360 <read_length_value>
     52c:	cmp	r0, #0
     530:	beq	53c <read_att_array+0xc0>
     534:	mvn	r0, #0
     538:	b	d74 <read_att_array+0x8f8>
     53c:	ldr	ip, [sp, #68]	; 0x44
     540:	cmp	ip, #0
     544:	bne	584 <read_att_array+0x108>
     548:	mov	r3, #0
     54c:	str	r3, [r8]
     550:	ldr	r3, [sp, #80]	; 0x50
     554:	ldr	ip, [sp, #84]	; 0x54
     558:	orr	r0, ip, r3
     55c:	cmp	r0, #0
     560:	beq	57c <read_att_array+0x100>
     564:	movw	r0, #65236	; 0xfed4
     568:	movt	r0, #65535	; 0xffff
     56c:	ldr	r1, [pc, #2120]	; dbc <read_att_array+0x940>
     570:	bl	0 <coda_set_error>
     574:	mvn	r0, #0
     578:	b	d74 <read_att_array+0x8f8>
     57c:	mov	r0, #0
     580:	b	d74 <read_att_array+0x8f8>
     584:	cmp	ip, #12
     588:	beq	5a4 <read_att_array+0x128>
     58c:	movw	r0, #65236	; 0xfed4
     590:	movt	r0, #65535	; 0xffff
     594:	ldr	r1, [pc, #2076]	; db8 <read_att_array+0x93c>
     598:	bl	0 <coda_set_error>
     59c:	mvn	r0, #0
     5a0:	b	d74 <read_att_array+0x8f8>
     5a4:	mov	r0, #6
     5a8:	bl	0 <coda_type_record_new>
     5ac:	mov	r4, r0
     5b0:	cmp	r4, #0
     5b4:	bne	5c0 <read_att_array+0x144>
     5b8:	mvn	r0, #0
     5bc:	b	d74 <read_att_array+0x8f8>
     5c0:	mov	r1, #0
     5c4:	mov	r0, r4
     5c8:	bl	0 <coda_mem_record_new>
     5cc:	str	r0, [r8]
     5d0:	mov	r0, r4
     5d4:	bl	0 <coda_type_release>
     5d8:	ldr	r3, [r8]
     5dc:	cmp	r3, #0
     5e0:	bne	5ec <read_att_array+0x170>
     5e4:	mvn	r0, #0
     5e8:	b	d74 <read_att_array+0x8f8>
     5ec:	mov	r1, #0
     5f0:	str	r1, [sp, #24]
     5f4:	ldr	r0, [sp, #24]
     5f8:	asr	r1, r0, #31
     5fc:	ldr	ip, [sp, #80]	; 0x50
     600:	ldr	r2, [sp, #84]	; 0x54
     604:	cmp	r1, r2
     608:	bne	618 <read_att_array+0x19c>
     60c:	cmp	r0, ip
     610:	bcc	620 <read_att_array+0x1a4>
     614:	b	d70 <read_att_array+0x8f4>
     618:	cmp	r1, r2
     61c:	bge	d70 <read_att_array+0x8f4>
     620:	add	r2, sp, #88	; 0x58
     624:	mov	r1, r7
     628:	mov	r0, r6
     62c:	bl	360 <read_length_value>
     630:	cmp	r0, #0
     634:	beq	640 <read_att_array+0x1c4>
     638:	mvn	r0, #0
     63c:	b	d74 <read_att_array+0x8f8>
     640:	ldr	r0, [sp, #88]	; 0x58
     644:	ldr	r1, [sp, #92]	; 0x5c
     648:	mov	ip, #0
     64c:	mov	r3, #1
     650:	adds	r0, r0, r3
     654:	adc	ip, r1, ip
     658:	bl	0 <malloc>
     65c:	mov	r4, r0
     660:	cmp	r4, #0
     664:	bne	6a8 <read_att_array+0x22c>
     668:	ldr	r0, [r8]
     66c:	bl	0 <coda_dynamic_type_delete>
     670:	mvn	r0, #0
     674:	ldr	r1, [pc, #1828]	; da0 <read_att_array+0x924>
     678:	ldr	r4, [sp, #88]	; 0x58
     67c:	ldr	ip, [sp, #92]	; 0x5c
     680:	mov	r3, #0
     684:	mov	r2, #1
     688:	adds	r2, r4, r2
     68c:	adc	ip, ip, r3
     690:	ldr	r3, [pc, #1836]	; dc4 <read_att_array+0x948>
     694:	mov	r4, #230	; 0xe6
     698:	str	r4, [sp]
     69c:	bl	0 <coda_set_error>
     6a0:	mvn	r0, #0
     6a4:	b	d74 <read_att_array+0x8f8>
     6a8:	ldr	ip, [sp, #88]	; 0x58
     6ac:	mov	r3, #0
     6b0:	strb	r3, [r4, ip]
     6b4:	ldr	r0, [r6, #52]	; 0x34
     6b8:	ldr	r2, [r7]
     6bc:	ldr	r3, [r7, #4]
     6c0:	ldr	r5, [sp, #88]	; 0x58
     6c4:	ldr	r1, [sp, #92]	; 0x5c
     6c8:	str	r4, [sp, #8]
     6cc:	str	r1, [sp, #4]
     6d0:	str	r5, [sp]
     6d4:	bl	0 <read_bytes>
     6d8:	cmp	r0, #0
     6dc:	bge	6f8 <read_att_array+0x27c>
     6e0:	mov	r0, r4
     6e4:	bl	0 <free>
     6e8:	ldr	r0, [r8]
     6ec:	bl	0 <coda_dynamic_type_delete>
     6f0:	mvn	r0, #0
     6f4:	b	d74 <read_att_array+0x8f8>
     6f8:	ldr	ip, [r7]
     6fc:	ldr	r0, [r7, #4]
     700:	ldr	r3, [sp, #88]	; 0x58
     704:	ldr	r1, [sp, #92]	; 0x5c
     708:	adds	ip, ip, r3
     70c:	adc	r0, r0, r1
     710:	str	ip, [r7]
     714:	str	r0, [r7, #4]
     718:	mov	r2, #0
     71c:	and	r1, r3, #3
     720:	mov	r5, r1
     724:	mov	r3, r2
     728:	orr	r3, r3, r5
     72c:	cmp	r3, #0
     730:	beq	754 <read_att_array+0x2d8>
     734:	mov	r5, #0
     738:	mov	r3, #4
     73c:	subs	r3, r3, r1
     740:	sbc	r2, r5, r2
     744:	adds	r1, ip, r3
     748:	adc	ip, r0, r2
     74c:	str	r1, [r7]
     750:	str	ip, [r7, #4]
     754:	ldr	r0, [r6, #52]	; 0x34
     758:	ldr	r2, [r7]
     75c:	ldr	r3, [r7, #4]
     760:	mov	r5, #0
     764:	mov	ip, #4
     768:	add	sl, sp, #72	; 0x48
     76c:	str	sl, [sp, #8]
     770:	str	r5, [sp, #4]
     774:	str	ip, [sp]
     778:	bl	0 <read_bytes>
     77c:	cmp	r0, #0
     780:	bge	79c <read_att_array+0x320>
     784:	mov	r0, r4
     788:	bl	0 <free>
     78c:	ldr	r0, [r8]
     790:	bl	0 <coda_dynamic_type_delete>
     794:	mvn	r0, #0
     798:	b	d74 <read_att_array+0x8f8>
     79c:	add	r0, sp, #72	; 0x48
     7a0:	bl	238 <swap4>
     7a4:	ldr	r2, [r7]
     7a8:	ldr	r3, [r7, #4]
     7ac:	mov	r1, #0
     7b0:	mov	r0, #4
     7b4:	adds	ip, r2, r0
     7b8:	adc	r0, r3, r1
     7bc:	str	ip, [r7]
     7c0:	str	r0, [r7, #4]
     7c4:	add	r2, sp, #96	; 0x60
     7c8:	mov	r1, r7
     7cc:	mov	r0, r6
     7d0:	bl	360 <read_length_value>
     7d4:	cmp	r0, #0
     7d8:	beq	7e4 <read_att_array+0x368>
     7dc:	mvn	r0, #0
     7e0:	b	d74 <read_att_array+0x8f8>
     7e4:	ldr	r5, [sp, #96]	; 0x60
     7e8:	ldr	r2, [sp, #72]	; 0x48
     7ec:	cmp	r2, #4
     7f0:	bcs	814 <read_att_array+0x398>
     7f4:	cmp	r2, #1
     7f8:	beq	864 <read_att_array+0x3e8>
     7fc:	cmp	r2, #2
     800:	beq	864 <read_att_array+0x3e8>
     804:	cmp	r2, #3
     808:	bne	834 <read_att_array+0x3b8>
     80c:	lsl	r5, r5, #1
     810:	b	864 <read_att_array+0x3e8>
     814:	cmp	r2, #4
     818:	beq	860 <read_att_array+0x3e4>
     81c:	cmp	r2, #5
     820:	beq	860 <read_att_array+0x3e4>
     824:	cmp	r2, #6
     828:	bne	834 <read_att_array+0x3b8>
     82c:	lsl	r5, r5, #3
     830:	b	864 <read_att_array+0x3e8>
     834:	mov	r0, r4
     838:	bl	0 <free>
     83c:	ldr	r0, [r8]
     840:	bl	0 <coda_dynamic_type_delete>
     844:	movw	r0, #65236	; 0xfed4
     848:	movt	r0, #65535	; 0xffff
     84c:	ldr	r1, [pc, #1360]	; da4 <read_att_array+0x928>
     850:	ldr	r2, [sp, #72]	; 0x48
     854:	bl	0 <coda_set_error>
     858:	mvn	r0, #0
     85c:	b	d74 <read_att_array+0x8f8>
     860:	lsl	r5, r5, #2
     864:	cmp	r9, #0
     868:	beq	bac <read_att_array+0x730>
     86c:	ldr	r3, [sp, #96]	; 0x60
     870:	ldr	r0, [sp, #100]	; 0x64
     874:	eor	r3, r3, #1
     878:	orr	r2, r0, r3
     87c:	cmp	r2, #0
     880:	bne	9ac <read_att_array+0x530>
     884:	ldr	r1, [pc, #1308]	; da8 <read_att_array+0x92c>
     888:	mov	r0, r4
     88c:	bl	0 <strcmp>
     890:	cmp	r0, #0
     894:	beq	8ac <read_att_array+0x430>
     898:	ldr	r1, [pc, #1296]	; db0 <read_att_array+0x934>
     89c:	mov	r0, r4
     8a0:	bl	0 <strcmp>
     8a4:	cmp	r0, #0
     8a8:	bne	9ac <read_att_array+0x530>
     8ac:	ldr	ip, [sp, #72]	; 0x48
     8b0:	cmp	ip, #5
     8b4:	beq	934 <read_att_array+0x4b8>
     8b8:	cmp	ip, #6
     8bc:	bne	9ac <read_att_array+0x530>
     8c0:	ldr	r0, [r6, #52]	; 0x34
     8c4:	ldr	r2, [r7]
     8c8:	ldr	r3, [r7, #4]
     8cc:	mov	fp, #0
     8d0:	mov	sl, #8
     8d4:	add	r1, sp, #104	; 0x68
     8d8:	str	r1, [sp, #8]
     8dc:	str	fp, [sp, #4]
     8e0:	str	sl, [sp]
     8e4:	bl	0 <read_bytes>
     8e8:	cmp	r0, #0
     8ec:	bge	908 <read_att_array+0x48c>
     8f0:	mov	r0, r4
     8f4:	bl	0 <free>
     8f8:	ldr	r0, [r8]
     8fc:	bl	0 <coda_dynamic_type_delete>
     900:	mvn	r0, #0
     904:	b	d74 <read_att_array+0x8f8>
     908:	add	r0, sp, #104	; 0x68
     90c:	bl	2a4 <swap8>
     910:	ldrb	r2, [r4]
     914:	cmp	r2, #115	; 0x73
     918:	beq	928 <read_att_array+0x4ac>
     91c:	vldr	d2, [sp, #104]	; 0x68
     920:	vstr	d2, [r9, #16]
     924:	b	9ac <read_att_array+0x530>
     928:	vldr	d3, [sp, #104]	; 0x68
     92c:	vstr	d3, [r9]
     930:	b	9ac <read_att_array+0x530>
     934:	ldr	r0, [r6, #52]	; 0x34
     938:	ldr	r2, [r7]
     93c:	ldr	r3, [r7, #4]
     940:	mov	fp, #0
     944:	mov	sl, #4
     948:	add	r1, sp, #76	; 0x4c
     94c:	str	r1, [sp, #8]
     950:	str	fp, [sp, #4]
     954:	str	sl, [sp]
     958:	bl	0 <read_bytes>
     95c:	cmp	r0, #0
     960:	bge	97c <read_att_array+0x500>
     964:	mov	r0, r4
     968:	bl	0 <free>
     96c:	ldr	r0, [r8]
     970:	bl	0 <coda_dynamic_type_delete>
     974:	mvn	r0, #0
     978:	b	d74 <read_att_array+0x8f8>
     97c:	add	r0, sp, #76	; 0x4c
     980:	bl	238 <swap4>
     984:	ldrb	ip, [r4]
     988:	cmp	ip, #115	; 0x73
     98c:	beq	9a0 <read_att_array+0x524>
     990:	vldr	s14, [sp, #76]	; 0x4c
     994:	vcvt.f64.f32	d0, s14
     998:	vstr	d0, [r9, #16]
     99c:	b	9ac <read_att_array+0x530>
     9a0:	vldr	s6, [sp, #76]	; 0x4c
     9a4:	vcvt.f64.f32	d7, s6
     9a8:	vstr	d7, [r9]
     9ac:	ldr	r2, [sp, #96]	; 0x60
     9b0:	ldr	r1, [sp, #100]	; 0x64
     9b4:	eor	r0, r2, #1
     9b8:	orr	r3, r1, r0
     9bc:	cmp	r3, #0
     9c0:	bne	bac <read_att_array+0x730>
     9c4:	ldr	r1, [sp, #72]	; 0x48
     9c8:	cmp	r1, #2
     9cc:	beq	bac <read_att_array+0x730>
     9d0:	ldr	r1, [pc, #1008]	; dc8 <read_att_array+0x94c>
     9d4:	mov	r0, r4
     9d8:	bl	0 <strcmp>
     9dc:	cmp	r0, #0
     9e0:	beq	a08 <read_att_array+0x58c>
     9e4:	ldr	r1, [pc, #968]	; db4 <read_att_array+0x938>
     9e8:	mov	r0, r4
     9ec:	bl	0 <strcmp>
     9f0:	cmp	r0, #0
     9f4:	bne	bac <read_att_array+0x730>
     9f8:	vldr	d0, [r9, #24]
     9fc:	bl	0 <coda_isNaN>
     a00:	cmp	r0, #0
     a04:	beq	bac <read_att_array+0x730>
     a08:	ldr	r0, [r6, #52]	; 0x34
     a0c:	ldr	r2, [r7]
     a10:	ldr	r3, [r7, #4]
     a14:	mov	fp, r5
     a18:	asr	r1, fp, #31
     a1c:	add	sl, sp, #112	; 0x70
     a20:	str	sl, [sp, #8]
     a24:	str	r1, [sp, #4]
     a28:	str	fp, [sp]
     a2c:	bl	0 <read_bytes>
     a30:	cmp	r0, #0
     a34:	bge	a50 <read_att_array+0x5d4>
     a38:	mov	r0, r4
     a3c:	bl	0 <free>
     a40:	ldr	r0, [r8]
     a44:	bl	0 <coda_dynamic_type_delete>
     a48:	mvn	r0, #0
     a4c:	b	d74 <read_att_array+0x8f8>
     a50:	ldr	ip, [sp, #72]	; 0x48
     a54:	sub	r0, ip, #1
     a58:	cmp	r0, #11
     a5c:	bcs	b90 <read_att_array+0x714>
     a60:	add	pc, pc, r0, lsl #2
     a64:	nop	{0}
     a68:	b	a94 <read_att_array+0x618>
     a6c:	b	b90 <read_att_array+0x714>
     a70:	b	aa8 <read_att_array+0x62c>
     a74:	b	ac4 <read_att_array+0x648>
     a78:	b	ae0 <read_att_array+0x664>
     a7c:	b	af8 <read_att_array+0x67c>
     a80:	b	b0c <read_att_array+0x690>
     a84:	b	b20 <read_att_array+0x6a4>
     a88:	b	b3c <read_att_array+0x6c0>
     a8c:	b	b58 <read_att_array+0x6dc>
     a90:	b	b74 <read_att_array+0x6f8>
     a94:	ldrsb	r1, [sp, #112]	; 0x70
     a98:	vmov	s8, r1
     a9c:	vcvt.f64.s32	d4, s8
     aa0:	vstr	d4, [r9, #24]
     aa4:	b	bac <read_att_array+0x730>
     aa8:	add	r0, sp, #112	; 0x70
     aac:	bl	1f4 <swap2>
     ab0:	ldrsh	r3, [sp, #112]	; 0x70
     ab4:	vmov	s0, r3
     ab8:	vcvt.f64.s32	d0, s0
     abc:	vstr	d0, [r9, #24]
     ac0:	b	bac <read_att_array+0x730>
     ac4:	add	r0, sp, #112	; 0x70
     ac8:	bl	238 <swap4>
     acc:	ldr	r2, [sp, #112]	; 0x70
     ad0:	vmov	s14, r2
     ad4:	vcvt.f64.s32	d7, s14
     ad8:	vstr	d7, [r9, #24]
     adc:	b	bac <read_att_array+0x730>
     ae0:	add	r0, sp, #112	; 0x70
     ae4:	bl	238 <swap4>
     ae8:	vldr	s2, [sp, #112]	; 0x70
     aec:	vcvt.f64.f32	d3, s2
     af0:	vstr	d3, [r9, #24]
     af4:	b	bac <read_att_array+0x730>
     af8:	add	r0, sp, #112	; 0x70
     afc:	bl	2a4 <swap8>
     b00:	vldr	d5, [sp, #112]	; 0x70
     b04:	vstr	d5, [r9, #24]
     b08:	b	bac <read_att_array+0x730>
     b0c:	ldrb	r2, [sp, #112]	; 0x70
     b10:	vmov	s2, r2
     b14:	vcvt.f64.u32	d1, s2
     b18:	vstr	d1, [r9, #24]
     b1c:	b	bac <read_att_array+0x730>
     b20:	add	r0, sp, #112	; 0x70
     b24:	bl	1f4 <swap2>
     b28:	ldrh	r3, [sp, #112]	; 0x70
     b2c:	vmov	s0, r3
     b30:	vcvt.f64.u32	d0, s0
     b34:	vstr	d0, [r9, #24]
     b38:	b	bac <read_att_array+0x730>
     b3c:	add	r0, sp, #112	; 0x70
     b40:	bl	238 <swap4>
     b44:	ldr	r3, [sp, #112]	; 0x70
     b48:	vmov	s8, r3
     b4c:	vcvt.f64.u32	d4, s8
     b50:	vstr	d4, [r9, #24]
     b54:	b	bac <read_att_array+0x730>
     b58:	add	r0, sp, #112	; 0x70
     b5c:	bl	2a4 <swap8>
     b60:	ldr	r0, [sp, #112]	; 0x70
     b64:	ldr	r1, [sp, #116]	; 0x74
     b68:	bl	0 <__compcert_i64_stod>
     b6c:	vstr	d0, [r9, #24]
     b70:	b	bac <read_att_array+0x730>
     b74:	add	r0, sp, #112	; 0x70
     b78:	bl	2a4 <swap8>
     b7c:	ldr	r0, [sp, #112]	; 0x70
     b80:	ldr	r1, [sp, #116]	; 0x74
     b84:	bl	0 <__compcert_i64_utod>
     b88:	vstr	d0, [r9, #24]
     b8c:	b	bac <read_att_array+0x730>
     b90:	ldr	r0, [pc, #552]	; dc0 <read_att_array+0x944>
     b94:	ldr	r1, [pc, #552]	; dc4 <read_att_array+0x948>
     b98:	movw	r2, #417	; 0x1a1
     b9c:	ldr	r3, [pc, #520]	; dac <read_att_array+0x930>
     ba0:	bl	0 <__assert_fail>
     ba4:	mov	r0, #1
     ba8:	bl	0 <exit>
     bac:	ldr	r3, [sp, #72]	; 0x48
     bb0:	cmp	r3, #2
     bb4:	beq	be8 <read_att_array+0x76c>
     bb8:	mov	r0, r3
     bbc:	ldr	r2, [r7]
     bc0:	ldr	r3, [r7, #4]
     bc4:	mov	fp, #0
     bc8:	mov	ip, #0
     bcc:	mov	sl, #1
     bd0:	str	ip, [sp, #12]
     bd4:	str	sl, [sp, #8]
     bd8:	str	fp, [sp]
     bdc:	bl	0 <coda_netcdf_basic_type_new>
     be0:	mov	sl, r0
     be4:	b	c14 <read_att_array+0x798>
     be8:	mov	r0, r3
     bec:	ldr	r2, [r7]
     bf0:	ldr	r3, [r7, #4]
     bf4:	mov	fp, #0
     bf8:	ldr	ip, [sp, #96]	; 0x60
     bfc:	ldr	sl, [sp, #100]	; 0x64
     c00:	str	sl, [sp, #12]
     c04:	str	ip, [sp, #8]
     c08:	str	fp, [sp]
     c0c:	bl	0 <coda_netcdf_basic_type_new>
     c10:	mov	sl, r0
     c14:	cmp	sl, #0
     c18:	bne	c34 <read_att_array+0x7b8>
     c1c:	mov	r0, r4
     c20:	bl	0 <free>
     c24:	ldr	r0, [r8]
     c28:	bl	0 <coda_dynamic_type_delete>
     c2c:	mvn	r0, #0
     c30:	b	d74 <read_att_array+0x8f8>
     c34:	ldr	ip, [r7]
     c38:	ldr	r3, [r7, #4]
     c3c:	asr	r2, r5, #31
     c40:	mov	r1, r5
     c44:	adds	lr, ip, r1
     c48:	adc	r3, r3, r2
     c4c:	mov	r2, lr
     c50:	str	r2, [r7]
     c54:	str	r3, [r7, #4]
     c58:	and	ip, r5, #3
     c5c:	cmp	ip, #0
     c60:	beq	c7c <read_att_array+0x800>
     c64:	rsb	ip, ip, #4
     c68:	asr	r0, ip, #31
     c6c:	adds	r1, r2, ip
     c70:	adc	r0, r3, r0
     c74:	str	r1, [r7]
     c78:	str	r0, [r7, #4]
     c7c:	ldr	r1, [sp, #72]	; 0x48
     c80:	cmp	r1, #2
     c84:	beq	d1c <read_att_array+0x8a0>
     c88:	ldr	r1, [sp, #96]	; 0x60
     c8c:	ldr	r2, [sp, #100]	; 0x64
     c90:	eor	r0, r1, #1
     c94:	orr	r3, r2, r0
     c98:	cmp	r3, #0
     c9c:	beq	d1c <read_att_array+0x8a0>
     ca0:	str	r1, [sp, #64]	; 0x40
     ca4:	mov	r0, #1
     ca8:	add	r1, sp, #64	; 0x40
     cac:	mov	r2, sl
     cb0:	bl	0 <coda_netcdf_array_new>
     cb4:	mov	r5, r0
     cb8:	cmp	r5, #0
     cbc:	bne	ce0 <read_att_array+0x864>
     cc0:	mov	r0, sl
     cc4:	bl	0 <coda_dynamic_type_delete>
     cc8:	mov	r0, r4
     ccc:	bl	0 <free>
     cd0:	ldr	r0, [r8]
     cd4:	bl	0 <coda_dynamic_type_delete>
     cd8:	mvn	r0, #0
     cdc:	b	d74 <read_att_array+0x8f8>
     ce0:	ldr	r0, [r8]
     ce4:	mov	r3, #1
     ce8:	mov	r2, r5
     cec:	mov	r1, r4
     cf0:	bl	0 <coda_mem_record_add_field>
     cf4:	cmp	r0, #0
     cf8:	beq	d58 <read_att_array+0x8dc>
     cfc:	mov	r0, r5
     d00:	bl	0 <coda_dynamic_type_delete>
     d04:	mov	r0, r4
     d08:	bl	0 <free>
     d0c:	ldr	r0, [r8]
     d10:	bl	0 <coda_dynamic_type_delete>
     d14:	mvn	r0, #0
     d18:	b	d74 <read_att_array+0x8f8>
     d1c:	ldr	r0, [r8]
     d20:	mov	r3, #1
     d24:	mov	r2, sl
     d28:	mov	r1, r4
     d2c:	bl	0 <coda_mem_record_add_field>
     d30:	cmp	r0, #0
     d34:	beq	d58 <read_att_array+0x8dc>
     d38:	mov	r0, sl
     d3c:	bl	0 <coda_dynamic_type_delete>
     d40:	mov	r0, r4
     d44:	bl	0 <free>
     d48:	ldr	r0, [r8]
     d4c:	bl	0 <coda_dynamic_type_delete>
     d50:	mvn	r0, #0
     d54:	b	d74 <read_att_array+0x8f8>
     d58:	mov	r0, r4
     d5c:	bl	0 <free>
     d60:	ldr	r0, [sp, #24]
     d64:	add	r2, r0, #1
     d68:	str	r2, [sp, #24]
     d6c:	b	5f4 <read_att_array+0x178>
     d70:	mov	r0, #0
     d74:	ldr	r4, [sp, #28]
     d78:	ldr	r5, [sp, #32]
     d7c:	ldr	r6, [sp, #36]	; 0x24
     d80:	ldr	r7, [sp, #40]	; 0x28
     d84:	ldr	r8, [sp, #44]	; 0x2c
     d88:	ldr	r9, [sp, #48]	; 0x30
     d8c:	ldr	sl, [sp, #52]	; 0x34
     d90:	ldr	fp, [sp, #56]	; 0x38
     d94:	ldr	lr, [sp, #20]
     d98:	add	sp, sp, #120	; 0x78
     d9c:	bx	lr
     da0:	.word	0x000002ef
     da4:	.word	0x0000021d
     da8:	.word	0x0000024c
     dac:	.word	0x0000047f
     db0:	.word	0x000003d2
     db4:	.word	0x00000126
     db8:	.word	0x000000ed
     dbc:	.word	0x000002aa
     dc0:	.word	0x000002ed
     dc4:	.word	0x00000419
     dc8:	.word	0x00000259

00000dcc <coda_netcdf_reopen>:
     dcc:	mov	ip, sp
     dd0:	sub	sp, sp, #232	; 0xe8
     dd4:	str	ip, [sp, #16]
     dd8:	str	lr, [sp, #20]
     ddc:	str	r4, [sp, #60]	; 0x3c
     de0:	str	r5, [sp, #64]	; 0x40
     de4:	str	r6, [sp, #68]	; 0x44
     de8:	str	r7, [sp, #72]	; 0x48
     dec:	str	r8, [sp, #76]	; 0x4c
     df0:	str	r9, [sp, #80]	; 0x50
     df4:	str	sl, [sp, #84]	; 0x54
     df8:	str	fp, [sp, #88]	; 0x58
     dfc:	str	r0, [sp, #32]
     e00:	mov	r1, #0
     e04:	str	r1, [sp, #100]	; 0x64
     e08:	mov	r0, #0
     e0c:	mov	ip, #0
     e10:	str	ip, [sp, #112]	; 0x70
     e14:	str	r0, [sp, #116]	; 0x74
     e18:	mvn	r3, #0
     e1c:	str	r3, [sp, #96]	; 0x60
     e20:	mov	r0, #64	; 0x40
     e24:	bl	0 <malloc>
     e28:	mov	r4, r0
     e2c:	cmp	r4, #0
     e30:	bne	e64 <coda_netcdf_reopen+0x98>
     e34:	mvn	r0, #0
     e38:	ldr	r1, [pc, #3252]	; 1af4 <coda_netcdf_reopen+0xd28>
     e3c:	mov	r2, #64	; 0x40
     e40:	ldr	r3, [pc, #3264]	; 1b08 <coda_netcdf_reopen+0xd3c>
     e44:	movw	r4, #801	; 0x321
     e48:	str	r4, [sp]
     e4c:	bl	0 <coda_set_error>
     e50:	ldr	r3, [sp, #32]
     e54:	ldr	r0, [r3]
     e58:	bl	0 <coda_close>
     e5c:	mvn	r0, #0
     e60:	b	1d90 <coda_netcdf_reopen+0xfc4>
     e64:	mov	r2, #0
     e68:	str	r2, [r4]
     e6c:	ldr	r3, [sp, #32]
     e70:	ldr	r3, [r3]
     e74:	ldr	ip, [r3, #8]
     e78:	ldr	r1, [r3, #12]
     e7c:	str	ip, [r4, #8]
     e80:	str	r1, [r4, #12]
     e84:	mov	r1, #6
     e88:	str	r1, [r4, #16]
     e8c:	mov	ip, #0
     e90:	str	ip, [r4, #20]
     e94:	mov	r0, #0
     e98:	str	r0, [r4, #24]
     e9c:	mov	r1, #0
     ea0:	str	r1, [r4, #28]
     ea4:	mov	ip, #0
     ea8:	str	ip, [r4, #32]
     eac:	mov	r3, #0
     eb0:	mov	r2, #0
     eb4:	str	r2, [r4, #40]	; 0x28
     eb8:	str	r3, [r4, #44]	; 0x2c
     ebc:	mov	r0, #0
     ec0:	str	r0, [r4, #48]	; 0x30
     ec4:	ldr	ip, [sp, #32]
     ec8:	ldr	ip, [ip]
     ecc:	str	ip, [r4, #52]	; 0x34
     ed0:	mov	r2, #1
     ed4:	str	r2, [r4, #56]	; 0x38
     ed8:	mov	r0, #0
     edc:	str	r0, [r4, #60]	; 0x3c
     ee0:	ldr	r0, [sp, #32]
     ee4:	ldr	r0, [r0]
     ee8:	ldr	r0, [r0]
     eec:	bl	0 <strdup>
     ef0:	str	r0, [r4]
     ef4:	cmp	r0, #0
     ef8:	bne	f20 <coda_netcdf_reopen+0x154>
     efc:	mvn	r0, #0
     f00:	ldr	r1, [pc, #3064]	; 1b00 <coda_netcdf_reopen+0xd34>
     f04:	ldr	r2, [pc, #3068]	; 1b08 <coda_netcdf_reopen+0xd3c>
     f08:	movw	r3, #823	; 0x337
     f0c:	bl	0 <coda_set_error>
     f10:	mov	r0, r4
     f14:	bl	1dbc <coda_netcdf_close>
     f18:	mvn	r0, #0
     f1c:	b	1d90 <coda_netcdf_reopen+0xfc4>
     f20:	mov	r0, #6
     f24:	bl	0 <coda_type_record_new>
     f28:	mov	r5, r0
     f2c:	cmp	r5, #0
     f30:	bne	f44 <coda_netcdf_reopen+0x178>
     f34:	mov	r0, r4
     f38:	bl	1dbc <coda_netcdf_close>
     f3c:	mvn	r0, #0
     f40:	b	1d90 <coda_netcdf_reopen+0xfc4>
     f44:	mov	r1, #0
     f48:	mov	r0, r5
     f4c:	bl	0 <coda_mem_record_new>
     f50:	mov	r8, r0
     f54:	mov	r0, r5
     f58:	bl	0 <coda_type_release>
     f5c:	cmp	r8, #0
     f60:	bne	f74 <coda_netcdf_reopen+0x1a8>
     f64:	mov	r0, r4
     f68:	bl	1dbc <coda_netcdf_close>
     f6c:	mvn	r0, #0
     f70:	b	1d90 <coda_netcdf_reopen+0xfc4>
     f74:	str	r8, [r4, #20]
     f78:	ldr	r0, [r4, #52]	; 0x34
     f7c:	ldr	r2, [sp, #112]	; 0x70
     f80:	ldr	r3, [sp, #116]	; 0x74
     f84:	mov	r1, #0
     f88:	mov	ip, #4
     f8c:	add	r5, sp, #108	; 0x6c
     f90:	str	r5, [sp, #8]
     f94:	str	r1, [sp, #4]
     f98:	str	ip, [sp]
     f9c:	bl	0 <read_bytes>
     fa0:	cmp	r0, #0
     fa4:	bge	fd4 <coda_netcdf_reopen+0x208>
     fa8:	bl	0 <__errno_location>
     fac:	ldr	r0, [r0]
     fb0:	bl	0 <strerror>
     fb4:	mov	r2, r0
     fb8:	mvn	r0, #21
     fbc:	ldr	r1, [pc, #2900]	; 1b18 <coda_netcdf_reopen+0xd4c>
     fc0:	bl	0 <coda_set_error>
     fc4:	mov	r0, r4
     fc8:	bl	1dbc <coda_netcdf_close>
     fcc:	mvn	r0, #0
     fd0:	b	1d90 <coda_netcdf_reopen+0xfc4>
     fd4:	ldrb	r2, [sp, #108]	; 0x6c
     fd8:	cmp	r2, #67	; 0x43
     fdc:	bne	ff8 <coda_netcdf_reopen+0x22c>
     fe0:	ldrb	r1, [sp, #109]	; 0x6d
     fe4:	cmp	r1, #68	; 0x44
     fe8:	bne	ff8 <coda_netcdf_reopen+0x22c>
     fec:	ldrb	r3, [sp, #110]	; 0x6e
     ff0:	cmp	r3, #70	; 0x46
     ff4:	beq	100c <coda_netcdf_reopen+0x240>
     ff8:	ldr	r0, [pc, #2808]	; 1af8 <coda_netcdf_reopen+0xd2c>
     ffc:	ldr	r1, [pc, #2820]	; 1b08 <coda_netcdf_reopen+0xd3c>
    1000:	movw	r2, #851	; 0x353
    1004:	ldr	r3, [pc, #2820]	; 1b10 <coda_netcdf_reopen+0xd44>
    1008:	bl	0 <__assert_fail>
    100c:	ldrb	r2, [sp, #111]	; 0x6f
    1010:	str	r2, [r4, #56]	; 0x38
    1014:	cmp	r2, #1
    1018:	beq	1048 <coda_netcdf_reopen+0x27c>
    101c:	cmp	r2, #2
    1020:	beq	1048 <coda_netcdf_reopen+0x27c>
    1024:	cmp	r2, #5
    1028:	beq	1048 <coda_netcdf_reopen+0x27c>
    102c:	mvn	r0, #199	; 0xc7
    1030:	ldr	r1, [pc, #2788]	; 1b1c <coda_netcdf_reopen+0xd50>
    1034:	bl	0 <coda_set_error>
    1038:	mov	r0, r4
    103c:	bl	1dbc <coda_netcdf_close>
    1040:	mvn	r0, #0
    1044:	b	1d90 <coda_netcdf_reopen+0xfc4>
    1048:	ldr	r2, [sp, #112]	; 0x70
    104c:	ldr	r1, [sp, #116]	; 0x74
    1050:	mov	r0, #0
    1054:	mov	ip, #4
    1058:	adds	r3, r2, ip
    105c:	adc	r2, r1, r0
    1060:	str	r3, [sp, #112]	; 0x70
    1064:	str	r2, [sp, #116]	; 0x74
    1068:	add	r1, sp, #112	; 0x70
    106c:	add	r2, sp, #120	; 0x78
    1070:	mov	r0, r4
    1074:	bl	360 <read_length_value>
    1078:	cmp	r0, #0
    107c:	beq	10b4 <coda_netcdf_reopen+0x2e8>
    1080:	bl	0 <__errno_location>
    1084:	ldr	r0, [r0]
    1088:	bl	0 <strerror>
    108c:	mvn	r2, #21
    1090:	ldr	r1, [pc, #2688]	; 1b18 <coda_netcdf_reopen+0xd4c>
    1094:	mov	r3, r0
    1098:	mov	r0, r2
    109c:	mov	r2, r3
    10a0:	bl	0 <coda_set_error>
    10a4:	mov	r0, r4
    10a8:	bl	1dbc <coda_netcdf_close>
    10ac:	mvn	r0, #0
    10b0:	b	1d90 <coda_netcdf_reopen+0xfc4>
    10b4:	ldr	r5, [sp, #120]	; 0x78
    10b8:	ldr	r6, [sp, #124]	; 0x7c
    10bc:	add	fp, sp, #128	; 0x80
    10c0:	add	r7, sp, #112	; 0x70
    10c4:	ldr	r0, [r4, #52]	; 0x34
    10c8:	ldr	r2, [sp, #112]	; 0x70
    10cc:	ldr	r3, [sp, #116]	; 0x74
    10d0:	mov	sl, #0
    10d4:	mov	ip, #4
    10d8:	add	r9, sp, #136	; 0x88
    10dc:	str	r9, [sp, #8]
    10e0:	str	sl, [sp, #4]
    10e4:	str	ip, [sp]
    10e8:	bl	0 <read_bytes>
    10ec:	cmp	r0, #0
    10f0:	bge	10fc <coda_netcdf_reopen+0x330>
    10f4:	mvn	r1, #0
    10f8:	b	1318 <coda_netcdf_reopen+0x54c>
    10fc:	add	r0, sp, #136	; 0x88
    1100:	bl	238 <swap4>
    1104:	ldr	ip, [sp, #112]	; 0x70
    1108:	ldr	r0, [sp, #116]	; 0x74
    110c:	mov	r1, #0
    1110:	mov	r3, #4
    1114:	adds	lr, ip, r3
    1118:	adc	r0, r0, r1
    111c:	mov	r1, lr
    1120:	str	r1, [sp, #112]	; 0x70
    1124:	str	r0, [sp, #116]	; 0x74
    1128:	mov	r2, fp
    112c:	mov	r1, r7
    1130:	mov	r0, r4
    1134:	bl	360 <read_length_value>
    1138:	cmp	r0, #0
    113c:	beq	1148 <coda_netcdf_reopen+0x37c>
    1140:	mvn	r1, #0
    1144:	b	1318 <coda_netcdf_reopen+0x54c>
    1148:	ldr	r3, [sp, #136]	; 0x88
    114c:	cmp	r3, #0
    1150:	bne	1188 <coda_netcdf_reopen+0x3bc>
    1154:	ldr	r0, [sp, #128]	; 0x80
    1158:	ldr	r2, [sp, #132]	; 0x84
    115c:	orr	r0, r2, r0
    1160:	cmp	r0, #0
    1164:	beq	1180 <coda_netcdf_reopen+0x3b4>
    1168:	movw	r0, #65236	; 0xfed4
    116c:	movt	r0, #65535	; 0xffff
    1170:	ldr	r1, [pc, #2452]	; 1b0c <coda_netcdf_reopen+0xd40>
    1174:	bl	0 <coda_set_error>
    1178:	mvn	r1, #0
    117c:	b	1318 <coda_netcdf_reopen+0x54c>
    1180:	mov	r1, #0
    1184:	b	1318 <coda_netcdf_reopen+0x54c>
    1188:	cmp	r3, #10
    118c:	beq	11a8 <coda_netcdf_reopen+0x3dc>
    1190:	movw	r0, #65236	; 0xfed4
    1194:	movt	r0, #65535	; 0xffff
    1198:	ldr	r1, [pc, #2396]	; 1afc <coda_netcdf_reopen+0xd30>
    119c:	bl	0 <coda_set_error>
    11a0:	mvn	r1, #0
    11a4:	b	1318 <coda_netcdf_reopen+0x54c>
    11a8:	ldr	r2, [sp, #128]	; 0x80
    11ac:	lsl	r0, r2, #3
    11b0:	bl	0 <malloc>
    11b4:	str	r0, [sp, #100]	; 0x64
    11b8:	cmp	r0, #0
    11bc:	bne	11f8 <coda_netcdf_reopen+0x42c>
    11c0:	mvn	r0, #0
    11c4:	ldr	r1, [pc, #2344]	; 1af4 <coda_netcdf_reopen+0xd28>
    11c8:	ldr	r2, [sp, #128]	; 0x80
    11cc:	ldr	ip, [sp, #132]	; 0x84
    11d0:	lsl	r3, ip, #3
    11d4:	orr	r3, r3, r2, lsr #29
    11d8:	lsl	r2, r2, #3
    11dc:	ldr	ip, [pc, #2340]	; 1b08 <coda_netcdf_reopen+0xd3c>
    11e0:	mov	r6, #124	; 0x7c
    11e4:	str	r6, [sp, #4]
    11e8:	str	ip, [sp]
    11ec:	bl	0 <coda_set_error>
    11f0:	mvn	r1, #0
    11f4:	b	1318 <coda_netcdf_reopen+0x54c>
    11f8:	mov	r9, #0
    11fc:	mov	ip, r9
    1200:	asr	r2, ip, #31
    1204:	ldr	r1, [sp, #128]	; 0x80
    1208:	ldr	r3, [sp, #132]	; 0x84
    120c:	cmp	r2, r3
    1210:	bne	1220 <coda_netcdf_reopen+0x454>
    1214:	cmp	ip, r1
    1218:	bcc	1228 <coda_netcdf_reopen+0x45c>
    121c:	b	1314 <coda_netcdf_reopen+0x548>
    1220:	cmp	r2, r3
    1224:	bge	1314 <coda_netcdf_reopen+0x548>
    1228:	add	r2, sp, #144	; 0x90
    122c:	mov	r1, r7
    1230:	mov	r0, r4
    1234:	bl	360 <read_length_value>
    1238:	cmp	r0, #0
    123c:	beq	1250 <coda_netcdf_reopen+0x484>
    1240:	ldr	r0, [sp, #100]	; 0x64
    1244:	bl	0 <free>
    1248:	mvn	r1, #0
    124c:	b	1318 <coda_netcdf_reopen+0x54c>
    1250:	ldr	r3, [sp, #112]	; 0x70
    1254:	ldr	r1, [sp, #116]	; 0x74
    1258:	ldr	r2, [sp, #144]	; 0x90
    125c:	ldr	ip, [sp, #148]	; 0x94
    1260:	adds	lr, r3, r2
    1264:	adc	r0, r1, ip
    1268:	mov	ip, lr
    126c:	str	ip, [sp, #112]	; 0x70
    1270:	str	r0, [sp, #116]	; 0x74
    1274:	mov	r1, #0
    1278:	and	r3, r2, #3
    127c:	mov	r2, r1
    1280:	mov	sl, r3
    1284:	orr	r2, r2, sl
    1288:	cmp	r2, #0
    128c:	beq	12b8 <coda_netcdf_reopen+0x4ec>
    1290:	mov	r2, #0
    1294:	mov	sl, #4
    1298:	subs	lr, sl, r3
    129c:	sbc	r3, r2, r1
    12a0:	mov	r1, lr
    12a4:	adds	lr, ip, r1
    12a8:	adc	ip, r0, r3
    12ac:	mov	r0, lr
    12b0:	str	r0, [sp, #112]	; 0x70
    12b4:	str	ip, [sp, #116]	; 0x74
    12b8:	ldr	r3, [sp, #100]	; 0x64
    12bc:	add	r2, r3, r9, lsl #3
    12c0:	mov	r1, r7
    12c4:	mov	r0, r4
    12c8:	bl	360 <read_length_value>
    12cc:	cmp	r0, #0
    12d0:	beq	12e4 <coda_netcdf_reopen+0x518>
    12d4:	ldr	r0, [sp, #100]	; 0x64
    12d8:	bl	0 <free>
    12dc:	mvn	r1, #0
    12e0:	b	1318 <coda_netcdf_reopen+0x54c>
    12e4:	ldr	ip, [sp, #100]	; 0x64
    12e8:	add	r3, ip, r9, lsl #3
    12ec:	ldr	ip, [r3]
    12f0:	ldr	r0, [r3, #4]
    12f4:	orr	r1, r0, ip
    12f8:	cmp	r1, #0
    12fc:	bne	130c <coda_netcdf_reopen+0x540>
    1300:	str	r5, [r3]
    1304:	str	r6, [r3, #4]
    1308:	str	r9, [sp, #96]	; 0x60
    130c:	add	r9, r9, #1
    1310:	b	11fc <coda_netcdf_reopen+0x430>
    1314:	mov	r1, #0
    1318:	cmp	r1, #0
    131c:	beq	1330 <coda_netcdf_reopen+0x564>
    1320:	mov	r0, r4
    1324:	bl	1dbc <coda_netcdf_close>
    1328:	mvn	r0, #0
    132c:	b	1d90 <coda_netcdf_reopen+0xfc4>
    1330:	add	r1, sp, #112	; 0x70
    1334:	add	r2, sp, #104	; 0x68
    1338:	mov	r3, #0
    133c:	mov	r0, r4
    1340:	bl	47c <read_att_array>
    1344:	cmp	r0, #0
    1348:	beq	136c <coda_netcdf_reopen+0x5a0>
    134c:	ldr	r0, [sp, #100]	; 0x64
    1350:	cmp	r0, #0
    1354:	beq	135c <coda_netcdf_reopen+0x590>
    1358:	bl	0 <free>
    135c:	mov	r0, r4
    1360:	bl	1dbc <coda_netcdf_close>
    1364:	mvn	r0, #0
    1368:	b	1d90 <coda_netcdf_reopen+0xfc4>
    136c:	ldr	r1, [sp, #104]	; 0x68
    1370:	cmp	r1, #0
    1374:	beq	13ac <coda_netcdf_reopen+0x5e0>
    1378:	mov	r2, #1
    137c:	mov	r0, r8
    1380:	bl	0 <coda_mem_type_set_attributes>
    1384:	cmp	r0, #0
    1388:	beq	13ac <coda_netcdf_reopen+0x5e0>
    138c:	ldr	r0, [sp, #100]	; 0x64
    1390:	cmp	r0, #0
    1394:	beq	139c <coda_netcdf_reopen+0x5d0>
    1398:	bl	0 <free>
    139c:	mov	r0, r4
    13a0:	bl	1dbc <coda_netcdf_close>
    13a4:	mvn	r0, #0
    13a8:	b	1d90 <coda_netcdf_reopen+0xfc4>
    13ac:	ldr	r2, [sp, #128]	; 0x80
    13b0:	ldr	r0, [sp, #132]	; 0x84
    13b4:	ldr	r3, [sp, #100]	; 0x64
    13b8:	ldr	r1, [sp, #96]	; 0x60
    13bc:	str	r8, [sp, #52]	; 0x34
    13c0:	str	r1, [sp, #56]	; 0x38
    13c4:	str	r3, [sp, #36]	; 0x24
    13c8:	str	r0, [sp, #48]	; 0x30
    13cc:	str	r2, [sp, #44]	; 0x2c
    13d0:	add	r0, sp, #112	; 0x70
    13d4:	str	r0, [sp, #24]
    13d8:	ldr	r0, [r4, #52]	; 0x34
    13dc:	ldr	r2, [sp, #112]	; 0x70
    13e0:	ldr	r3, [sp, #116]	; 0x74
    13e4:	mov	r1, #0
    13e8:	mov	r5, #4
    13ec:	add	r6, sp, #140	; 0x8c
    13f0:	str	r6, [sp, #8]
    13f4:	str	r1, [sp, #4]
    13f8:	str	r5, [sp]
    13fc:	bl	0 <read_bytes>
    1400:	cmp	r0, #0
    1404:	bge	1434 <coda_netcdf_reopen+0x668>
    1408:	bl	0 <__errno_location>
    140c:	ldr	r0, [r0]
    1410:	bl	0 <strerror>
    1414:	mvn	r2, #21
    1418:	ldr	r1, [pc, #1784]	; 1b18 <coda_netcdf_reopen+0xd4c>
    141c:	mov	r3, r0
    1420:	mov	r0, r2
    1424:	mov	r2, r3
    1428:	bl	0 <coda_set_error>
    142c:	mvn	r2, #0
    1430:	b	1d4c <coda_netcdf_reopen+0xf80>
    1434:	add	r0, sp, #140	; 0x8c
    1438:	bl	238 <swap4>
    143c:	ldr	r0, [sp, #112]	; 0x70
    1440:	ldr	r1, [sp, #116]	; 0x74
    1444:	mov	ip, #0
    1448:	mov	r2, #4
    144c:	adds	r0, r0, r2
    1450:	adc	ip, r1, ip
    1454:	str	r0, [sp, #112]	; 0x70
    1458:	str	ip, [sp, #116]	; 0x74
    145c:	add	r2, sp, #168	; 0xa8
    1460:	ldr	r1, [sp, #24]
    1464:	mov	r0, r4
    1468:	bl	360 <read_length_value>
    146c:	cmp	r0, #0
    1470:	beq	147c <coda_netcdf_reopen+0x6b0>
    1474:	mvn	r2, #0
    1478:	b	1d4c <coda_netcdf_reopen+0xf80>
    147c:	ldr	r3, [sp, #140]	; 0x8c
    1480:	cmp	r3, #0
    1484:	bne	14bc <coda_netcdf_reopen+0x6f0>
    1488:	ldr	ip, [sp, #168]	; 0xa8
    148c:	ldr	r1, [sp, #172]	; 0xac
    1490:	orr	r2, r1, ip
    1494:	cmp	r2, #0
    1498:	beq	14b4 <coda_netcdf_reopen+0x6e8>
    149c:	movw	r0, #65236	; 0xfed4
    14a0:	movt	r0, #65535	; 0xffff
    14a4:	ldr	r1, [pc, #1640]	; 1b14 <coda_netcdf_reopen+0xd48>
    14a8:	bl	0 <coda_set_error>
    14ac:	mvn	r2, #0
    14b0:	b	1d4c <coda_netcdf_reopen+0xf80>
    14b4:	mov	r2, #0
    14b8:	b	1d4c <coda_netcdf_reopen+0xf80>
    14bc:	cmp	r3, #11
    14c0:	beq	14dc <coda_netcdf_reopen+0x710>
    14c4:	movw	r0, #65236	; 0xfed4
    14c8:	movt	r0, #65535	; 0xffff
    14cc:	ldr	r1, [pc, #1612]	; 1b20 <coda_netcdf_reopen+0xd54>
    14d0:	bl	0 <coda_set_error>
    14d4:	mvn	r2, #0
    14d8:	b	1d4c <coda_netcdf_reopen+0xf80>
    14dc:	mov	r1, #0
    14e0:	str	r1, [sp, #40]	; 0x28
    14e4:	ldr	ip, [sp, #40]	; 0x28
    14e8:	asr	r1, ip, #31
    14ec:	ldr	r2, [sp, #168]	; 0xa8
    14f0:	ldr	r3, [sp, #172]	; 0xac
    14f4:	cmp	r1, r3
    14f8:	bne	1508 <coda_netcdf_reopen+0x73c>
    14fc:	cmp	ip, r2
    1500:	bcc	1510 <coda_netcdf_reopen+0x744>
    1504:	b	1d48 <coda_netcdf_reopen+0xf7c>
    1508:	cmp	r1, r3
    150c:	bge	1d48 <coda_netcdf_reopen+0xf7c>
    1510:	mov	r0, #0
    1514:	str	r0, [sp, #144]	; 0x90
    1518:	mov	r5, #0
    151c:	mov	r2, #0
    1520:	str	r2, [sp, #28]
    1524:	mov	r7, #0
    1528:	add	r2, sp, #184	; 0xb8
    152c:	ldr	r1, [sp, #24]
    1530:	mov	r0, r4
    1534:	bl	360 <read_length_value>
    1538:	cmp	r0, #0
    153c:	beq	1548 <coda_netcdf_reopen+0x77c>
    1540:	mvn	r2, #0
    1544:	b	1d4c <coda_netcdf_reopen+0xf80>
    1548:	ldr	r1, [sp, #184]	; 0xb8
    154c:	ldr	r2, [sp, #188]	; 0xbc
    1550:	mov	r0, #0
    1554:	mov	r3, #1
    1558:	adds	lr, r1, r3
    155c:	adc	ip, r2, r0
    1560:	mov	r0, lr
    1564:	bl	0 <malloc>
    1568:	mov	r6, r0
    156c:	cmp	r6, #0
    1570:	bne	15ac <coda_netcdf_reopen+0x7e0>
    1574:	mvn	r0, #0
    1578:	ldr	r1, [pc, #1396]	; 1af4 <coda_netcdf_reopen+0xd28>
    157c:	ldr	ip, [sp, #184]	; 0xb8
    1580:	ldr	r5, [sp, #188]	; 0xbc
    1584:	mov	r3, #0
    1588:	mov	r2, #1
    158c:	adds	r2, ip, r2
    1590:	adc	r3, r5, r3
    1594:	ldr	r3, [pc, #1388]	; 1b08 <coda_netcdf_reopen+0xd3c>
    1598:	movw	r5, #546	; 0x222
    159c:	str	r5, [sp]
    15a0:	bl	0 <coda_set_error>
    15a4:	mvn	r2, #0
    15a8:	b	1d4c <coda_netcdf_reopen+0xf80>
    15ac:	ldr	r3, [sp, #184]	; 0xb8
    15b0:	mov	r1, #0
    15b4:	strb	r1, [r6, r3]
    15b8:	ldr	r0, [r4, #52]	; 0x34
    15bc:	ldr	r2, [sp, #112]	; 0x70
    15c0:	ldr	r3, [sp, #116]	; 0x74
    15c4:	ldr	ip, [sp, #184]	; 0xb8
    15c8:	ldr	r8, [sp, #188]	; 0xbc
    15cc:	str	r6, [sp, #8]
    15d0:	str	r8, [sp, #4]
    15d4:	str	ip, [sp]
    15d8:	bl	0 <read_bytes>
    15dc:	cmp	r0, #0
    15e0:	bge	15f4 <coda_netcdf_reopen+0x828>
    15e4:	mov	r0, r6
    15e8:	bl	0 <free>
    15ec:	mvn	r2, #0
    15f0:	b	1d4c <coda_netcdf_reopen+0xf80>
    15f4:	ldr	r1, [sp, #112]	; 0x70
    15f8:	ldr	r2, [sp, #116]	; 0x74
    15fc:	ldr	r0, [sp, #184]	; 0xb8
    1600:	ldr	ip, [sp, #188]	; 0xbc
    1604:	adds	lr, r1, r0
    1608:	adc	r3, r2, ip
    160c:	mov	r2, lr
    1610:	str	r2, [sp, #112]	; 0x70
    1614:	str	r3, [sp, #116]	; 0x74
    1618:	mov	r1, #0
    161c:	and	r0, r0, #3
    1620:	mov	ip, r1
    1624:	mov	r8, r0
    1628:	orr	ip, ip, r8
    162c:	cmp	ip, #0
    1630:	beq	1658 <coda_netcdf_reopen+0x88c>
    1634:	mov	ip, #0
    1638:	mov	r8, #4
    163c:	subs	lr, r8, r0
    1640:	sbc	ip, ip, r1
    1644:	mov	r1, lr
    1648:	adds	r2, r2, r1
    164c:	adc	r3, r3, ip
    1650:	str	r2, [sp, #112]	; 0x70
    1654:	str	r3, [sp, #116]	; 0x74
    1658:	add	r2, sp, #192	; 0xc0
    165c:	ldr	r1, [sp, #24]
    1660:	mov	r0, r4
    1664:	bl	360 <read_length_value>
    1668:	cmp	r0, #0
    166c:	beq	1678 <coda_netcdf_reopen+0x8ac>
    1670:	mvn	r2, #0
    1674:	b	1d4c <coda_netcdf_reopen+0xf80>
    1678:	mov	r8, #0
    167c:	mov	r9, #0
    1680:	mov	r3, r9
    1684:	asr	r2, r3, #31
    1688:	ldr	ip, [sp, #192]	; 0xc0
    168c:	ldr	r0, [sp, #196]	; 0xc4
    1690:	cmp	r2, r0
    1694:	bne	16a4 <coda_netcdf_reopen+0x8d8>
    1698:	cmp	r3, ip
    169c:	bcc	16ac <coda_netcdf_reopen+0x8e0>
    16a0:	b	1800 <coda_netcdf_reopen+0xa34>
    16a4:	cmp	r2, r0
    16a8:	bge	1800 <coda_netcdf_reopen+0xa34>
    16ac:	add	r2, sp, #160	; 0xa0
    16b0:	ldr	r1, [sp, #24]
    16b4:	mov	r0, r4
    16b8:	bl	360 <read_length_value>
    16bc:	cmp	r0, #0
    16c0:	beq	16cc <coda_netcdf_reopen+0x900>
    16c4:	mvn	r2, #0
    16c8:	b	1d4c <coda_netcdf_reopen+0xf80>
    16cc:	ldr	ip, [sp, #160]	; 0xa0
    16d0:	ldr	r0, [sp, #164]	; 0xa4
    16d4:	cmp	r0, #0
    16d8:	blt	17dc <coda_netcdf_reopen+0xa10>
    16dc:	ldr	r1, [sp, #48]	; 0x30
    16e0:	cmp	r0, r1
    16e4:	bne	16fc <coda_netcdf_reopen+0x930>
    16e8:	ldr	r0, [sp, #44]	; 0x2c
    16ec:	cmp	ip, r0
    16f0:	movcs	ip, #1
    16f4:	movcc	ip, #0
    16f8:	b	1708 <coda_netcdf_reopen+0x93c>
    16fc:	cmp	r0, r1
    1700:	movgt	ip, #1
    1704:	movle	ip, #0
    1708:	cmp	ip, #0
    170c:	bne	17dc <coda_netcdf_reopen+0xa10>
    1710:	mov	sl, r9
    1714:	asr	ip, sl, #31
    1718:	ldr	r2, [sp, #192]	; 0xc0
    171c:	ldr	r3, [sp, #196]	; 0xc4
    1720:	mov	r1, #0
    1724:	mov	r0, #1
    1728:	subs	r0, r2, r0
    172c:	sbc	r1, r3, r1
    1730:	eor	r3, ip, r1
    1734:	eor	ip, sl, r0
    1738:	orr	ip, r3, ip
    173c:	cmp	ip, #0
    1740:	beq	178c <coda_netcdf_reopen+0x9c0>
    1744:	cmp	r9, #8
    1748:	blt	176c <coda_netcdf_reopen+0x9a0>
    174c:	ldr	r2, [sp, #228]	; 0xe4
    1750:	ldr	r1, [sp, #160]	; 0xa0
    1754:	ldr	r3, [sp, #36]	; 0x24
    1758:	add	r3, r3, r1, lsl #3
    175c:	ldr	r3, [r3]
    1760:	mul	r1, r2, r3
    1764:	str	r1, [sp, #228]	; 0xe4
    1768:	b	17a4 <coda_netcdf_reopen+0x9d8>
    176c:	add	ip, sp, #200	; 0xc8
    1770:	ldr	r3, [sp, #160]	; 0xa0
    1774:	ldr	r0, [sp, #36]	; 0x24
    1778:	add	r0, r0, r3, lsl #3
    177c:	ldr	r1, [r0]
    1780:	str	r1, [ip, r9, lsl #2]
    1784:	add	r8, r8, #1
    1788:	b	17a4 <coda_netcdf_reopen+0x9d8>
    178c:	ldr	ip, [sp, #160]	; 0xa0
    1790:	ldr	r0, [sp, #36]	; 0x24
    1794:	add	r0, r0, ip, lsl #3
    1798:	ldr	r5, [r0]
    179c:	mov	r2, #1
    17a0:	str	r2, [sp, #28]
    17a4:	cmp	r9, #0
    17a8:	bne	17d4 <coda_netcdf_reopen+0xa08>
    17ac:	ldr	r1, [sp, #160]	; 0xa0
    17b0:	ldr	r2, [sp, #164]	; 0xa4
    17b4:	ldr	ip, [sp, #56]	; 0x38
    17b8:	asr	r0, ip, #31
    17bc:	eor	r2, r2, r0
    17c0:	eor	r3, r1, ip
    17c4:	orr	r1, r2, r3
    17c8:	cmp	r1, #0
    17cc:	moveq	r7, #1
    17d0:	movne	r7, #0
    17d4:	add	r9, r9, #1
    17d8:	b	1680 <coda_netcdf_reopen+0x8b4>
    17dc:	mov	r0, r6
    17e0:	bl	0 <free>
    17e4:	movw	r0, #65236	; 0xfed4
    17e8:	movt	r0, #65535	; 0xffff
    17ec:	ldr	r1, [pc, #784]	; 1b04 <coda_netcdf_reopen+0xd38>
    17f0:	mov	r2, r6
    17f4:	bl	0 <coda_set_error>
    17f8:	mvn	r2, #0
    17fc:	b	1d4c <coda_netcdf_reopen+0xf80>
    1800:	bl	0 <coda_NaN>
    1804:	vmov.f64	d1, #112	; 0x3f800000  1.0
    1808:	vldr	d2, [pc, #788]	; 1b24 <coda_netcdf_reopen+0xd58>
    180c:	vmov.f64	d3, d0
    1810:	vmov.f64	d0, d1
    1814:	bl	0 <coda_conversion_new>
    1818:	mov	r9, r0
    181c:	cmp	r9, #0
    1820:	bne	1834 <coda_netcdf_reopen+0xa68>
    1824:	mov	r0, r6
    1828:	bl	0 <free>
    182c:	mvn	r2, #0
    1830:	b	1d4c <coda_netcdf_reopen+0xf80>
    1834:	add	r2, sp, #144	; 0x90
    1838:	mov	r3, r9
    183c:	ldr	r1, [sp, #24]
    1840:	mov	r0, r4
    1844:	bl	47c <read_att_array>
    1848:	cmp	r0, #0
    184c:	beq	1868 <coda_netcdf_reopen+0xa9c>
    1850:	mov	r0, r9
    1854:	bl	0 <coda_conversion_delete>
    1858:	mov	r0, r6
    185c:	bl	0 <free>
    1860:	mvn	r2, #0
    1864:	b	1d4c <coda_netcdf_reopen+0xf80>
    1868:	ldr	r0, [r4, #52]	; 0x34
    186c:	ldr	r2, [sp, #112]	; 0x70
    1870:	ldr	r3, [sp, #116]	; 0x74
    1874:	mov	fp, #0
    1878:	mov	sl, #4
    187c:	add	r1, sp, #148	; 0x94
    1880:	str	r1, [sp, #8]
    1884:	str	fp, [sp, #4]
    1888:	str	sl, [sp]
    188c:	bl	0 <read_bytes>
    1890:	cmp	r0, #0
    1894:	bge	18b8 <coda_netcdf_reopen+0xaec>
    1898:	ldr	r0, [sp, #144]	; 0x90
    189c:	bl	0 <coda_dynamic_type_delete>
    18a0:	mov	r0, r9
    18a4:	bl	0 <coda_conversion_delete>
    18a8:	mov	r0, r6
    18ac:	bl	0 <free>
    18b0:	mvn	r2, #0
    18b4:	b	1d4c <coda_netcdf_reopen+0xf80>
    18b8:	add	r0, sp, #148	; 0x94
    18bc:	bl	238 <swap4>
    18c0:	ldr	r1, [sp, #112]	; 0x70
    18c4:	ldr	r2, [sp, #116]	; 0x74
    18c8:	mov	r3, #0
    18cc:	mov	ip, #4
    18d0:	adds	lr, r1, ip
    18d4:	adc	r3, r2, r3
    18d8:	mov	r2, lr
    18dc:	str	r2, [sp, #112]	; 0x70
    18e0:	str	r3, [sp, #116]	; 0x74
    18e4:	vldr	d0, [r9]
    18e8:	vmov.f64	d1, #112	; 0x3f800000  1.0
    18ec:	vcmp.f64	d0, d1
    18f0:	vmrs	APSR_nzcv, fpscr
    18f4:	bne	1938 <coda_netcdf_reopen+0xb6c>
    18f8:	vldr	d6, [r9, #16]
    18fc:	vcmp.f64	d6, #0.0
    1900:	vmrs	APSR_nzcv, fpscr
    1904:	bne	1938 <coda_netcdf_reopen+0xb6c>
    1908:	ldr	r3, [sp, #148]	; 0x94
    190c:	cmp	r3, #5
    1910:	beq	191c <coda_netcdf_reopen+0xb50>
    1914:	cmp	r3, #6
    1918:	bne	192c <coda_netcdf_reopen+0xb60>
    191c:	vldr	d0, [r9, #24]
    1920:	bl	0 <coda_isNaN>
    1924:	cmp	r0, #0
    1928:	beq	1938 <coda_netcdf_reopen+0xb6c>
    192c:	mov	r0, r9
    1930:	bl	0 <coda_conversion_delete>
    1934:	mov	r9, #0
    1938:	add	r2, sp, #152	; 0x98
    193c:	ldr	r1, [sp, #24]
    1940:	mov	r0, r4
    1944:	bl	360 <read_length_value>
    1948:	cmp	r0, #0
    194c:	beq	1970 <coda_netcdf_reopen+0xba4>
    1950:	ldr	r0, [sp, #144]	; 0x90
    1954:	bl	0 <coda_dynamic_type_delete>
    1958:	mov	r0, r9
    195c:	bl	0 <coda_conversion_delete>
    1960:	mov	r0, r6
    1964:	bl	0 <free>
    1968:	mvn	r2, #0
    196c:	b	1d4c <coda_netcdf_reopen+0xf80>
    1970:	cmp	r7, #0
    1974:	beq	1988 <coda_netcdf_reopen+0xbbc>
    1978:	ldr	r1, [r4, #60]	; 0x3c
    197c:	ldr	r0, [sp, #152]	; 0x98
    1980:	add	r2, r1, r0
    1984:	str	r2, [r4, #60]	; 0x3c
    1988:	ldr	r1, [r4, #56]	; 0x38
    198c:	cmp	r1, #1
    1990:	bne	1a20 <coda_netcdf_reopen+0xc54>
    1994:	ldr	r0, [r4, #52]	; 0x34
    1998:	ldr	r2, [sp, #112]	; 0x70
    199c:	ldr	r3, [sp, #116]	; 0x74
    19a0:	mov	fp, #0
    19a4:	mov	ip, #4
    19a8:	add	sl, sp, #136	; 0x88
    19ac:	str	sl, [sp, #8]
    19b0:	str	fp, [sp, #4]
    19b4:	str	ip, [sp]
    19b8:	bl	0 <read_bytes>
    19bc:	cmp	r0, #0
    19c0:	bge	19e4 <coda_netcdf_reopen+0xc18>
    19c4:	ldr	r0, [sp, #144]	; 0x90
    19c8:	bl	0 <coda_dynamic_type_delete>
    19cc:	mov	r0, r9
    19d0:	bl	0 <coda_conversion_delete>
    19d4:	mov	r0, r6
    19d8:	bl	0 <free>
    19dc:	mvn	r2, #0
    19e0:	b	1d4c <coda_netcdf_reopen+0xf80>
    19e4:	add	r0, sp, #136	; 0x88
    19e8:	bl	238 <swap4>
    19ec:	ldr	r1, [sp, #136]	; 0x88
    19f0:	asr	r0, r1, #31
    19f4:	str	r1, [sp, #176]	; 0xb0
    19f8:	str	r0, [sp, #180]	; 0xb4
    19fc:	ldr	r0, [sp, #112]	; 0x70
    1a00:	ldr	r1, [sp, #116]	; 0x74
    1a04:	mov	r2, #0
    1a08:	mov	r3, #4
    1a0c:	adds	r3, r0, r3
    1a10:	adc	ip, r1, r2
    1a14:	str	r3, [sp, #112]	; 0x70
    1a18:	str	ip, [sp, #116]	; 0x74
    1a1c:	b	1a9c <coda_netcdf_reopen+0xcd0>
    1a20:	ldr	r0, [r4, #52]	; 0x34
    1a24:	ldr	r2, [sp, #112]	; 0x70
    1a28:	ldr	r3, [sp, #116]	; 0x74
    1a2c:	mov	r1, #0
    1a30:	mov	sl, #8
    1a34:	add	fp, sp, #176	; 0xb0
    1a38:	str	fp, [sp, #8]
    1a3c:	str	r1, [sp, #4]
    1a40:	str	sl, [sp]
    1a44:	bl	0 <read_bytes>
    1a48:	cmp	r0, #0
    1a4c:	bge	1a70 <coda_netcdf_reopen+0xca4>
    1a50:	ldr	r0, [sp, #144]	; 0x90
    1a54:	bl	0 <coda_dynamic_type_delete>
    1a58:	mov	r0, r9
    1a5c:	bl	0 <coda_conversion_delete>
    1a60:	mov	r0, r6
    1a64:	bl	0 <free>
    1a68:	mvn	r2, #0
    1a6c:	b	1d4c <coda_netcdf_reopen+0xf80>
    1a70:	add	r0, sp, #176	; 0xb0
    1a74:	bl	2a4 <swap8>
    1a78:	ldr	ip, [sp, #112]	; 0x70
    1a7c:	ldr	r0, [sp, #116]	; 0x74
    1a80:	mov	r3, #0
    1a84:	mov	r2, #8
    1a88:	adds	lr, ip, r2
    1a8c:	adc	ip, r0, r3
    1a90:	mov	r3, lr
    1a94:	str	r3, [sp, #112]	; 0x70
    1a98:	str	ip, [sp, #116]	; 0x74
    1a9c:	ldr	r3, [sp, #28]
    1aa0:	cmp	r3, #0
    1aa4:	beq	1b7c <coda_netcdf_reopen+0xdb0>
    1aa8:	ldr	r0, [sp, #148]	; 0x94
    1aac:	cmp	r0, #2
    1ab0:	bne	1b2c <coda_netcdf_reopen+0xd60>
    1ab4:	mov	ip, #0
    1ab8:	cmp	r8, #0
    1abc:	moveq	r2, r7
    1ac0:	movne	r2, ip
    1ac4:	eor	r3, r2, #1
    1ac8:	cmp	r3, #0
    1acc:	beq	1b2c <coda_netcdf_reopen+0xd60>
    1ad0:	ldr	r2, [sp, #176]	; 0xb0
    1ad4:	ldr	r3, [sp, #180]	; 0xb4
    1ad8:	asr	ip, r5, #31
    1adc:	str	ip, [sp, #12]
    1ae0:	str	r5, [sp, #8]
    1ae4:	str	r7, [sp]
    1ae8:	bl	0 <coda_netcdf_basic_type_new>
    1aec:	mov	r7, r0
    1af0:	b	1ba8 <coda_netcdf_reopen+0xddc>
    1af4:	.word	0x000002ef
    1af8:	.word	0x0000034e
    1afc:	.word	0x00000071
    1b00:	.word	0x000003dd
    1b04:	.word	0x000001e9
    1b08:	.word	0x00000419
    1b0c:	.word	0x000000aa
    1b10:	.word	0x0000048e
    1b14:	.word	0x00000267
    1b18:	.word	0x00000131
    1b1c:	.word	0x00000000
    1b20:	.word	0x00000039
	...
    1b2c:	ldr	r0, [sp, #148]	; 0x94
    1b30:	ldr	r2, [sp, #176]	; 0xb0
    1b34:	ldr	r3, [sp, #180]	; 0xb4
    1b38:	mov	sl, #0
    1b3c:	mov	r1, #1
    1b40:	str	sl, [sp, #12]
    1b44:	str	r1, [sp, #8]
    1b48:	str	r7, [sp]
    1b4c:	bl	0 <coda_netcdf_basic_type_new>
    1b50:	mov	r7, r0
    1b54:	cmp	r8, #8
    1b58:	blt	1b6c <coda_netcdf_reopen+0xda0>
    1b5c:	ldr	r0, [sp, #228]	; 0xe4
    1b60:	mul	r3, r0, r5
    1b64:	str	r3, [sp, #228]	; 0xe4
    1b68:	b	1ba8 <coda_netcdf_reopen+0xddc>
    1b6c:	add	ip, sp, #200	; 0xc8
    1b70:	str	r5, [ip, r8, lsl #2]
    1b74:	add	r8, r8, #1
    1b78:	b	1ba8 <coda_netcdf_reopen+0xddc>
    1b7c:	ldr	r0, [sp, #148]	; 0x94
    1b80:	ldr	r2, [sp, #176]	; 0xb0
    1b84:	ldr	r3, [sp, #180]	; 0xb4
    1b88:	mov	r7, #0
    1b8c:	mov	r1, #0
    1b90:	mov	r5, #1
    1b94:	str	r1, [sp, #12]
    1b98:	str	r5, [sp, #8]
    1b9c:	str	r7, [sp]
    1ba0:	bl	0 <coda_netcdf_basic_type_new>
    1ba4:	mov	r7, r0
    1ba8:	cmp	r7, #0
    1bac:	bne	1bd0 <coda_netcdf_reopen+0xe04>
    1bb0:	ldr	r0, [sp, #144]	; 0x90
    1bb4:	bl	0 <coda_dynamic_type_delete>
    1bb8:	mov	r0, r9
    1bbc:	bl	0 <coda_conversion_delete>
    1bc0:	mov	r0, r6
    1bc4:	bl	0 <free>
    1bc8:	mvn	r2, #0
    1bcc:	b	1d4c <coda_netcdf_reopen+0xf80>
    1bd0:	cmp	r9, #0
    1bd4:	beq	1c0c <coda_netcdf_reopen+0xe40>
    1bd8:	mov	r1, r9
    1bdc:	mov	r0, r7
    1be0:	bl	0 <coda_netcdf_basic_type_set_conversion>
    1be4:	cmp	r0, #0
    1be8:	beq	1c0c <coda_netcdf_reopen+0xe40>
    1bec:	ldr	r0, [sp, #144]	; 0x90
    1bf0:	bl	0 <coda_dynamic_type_delete>
    1bf4:	mov	r0, r9
    1bf8:	bl	0 <coda_conversion_delete>
    1bfc:	mov	r0, r6
    1c00:	bl	0 <free>
    1c04:	mvn	r2, #0
    1c08:	b	1d4c <coda_netcdf_reopen+0xf80>
    1c0c:	cmp	r8, #0
    1c10:	beq	1cc0 <coda_netcdf_reopen+0xef4>
    1c14:	add	r1, sp, #200	; 0xc8
    1c18:	mov	r2, r7
    1c1c:	mov	r0, r8
    1c20:	bl	0 <coda_netcdf_array_new>
    1c24:	mov	r5, r0
    1c28:	cmp	r5, #0
    1c2c:	bne	1c50 <coda_netcdf_reopen+0xe84>
    1c30:	mov	r0, r7
    1c34:	bl	0 <coda_dynamic_type_delete>
    1c38:	ldr	r0, [sp, #144]	; 0x90
    1c3c:	bl	0 <coda_dynamic_type_delete>
    1c40:	mov	r0, r6
    1c44:	bl	0 <free>
    1c48:	mvn	r2, #0
    1c4c:	b	1d4c <coda_netcdf_reopen+0xf80>
    1c50:	ldr	r1, [sp, #144]	; 0x90
    1c54:	cmp	r1, #0
    1c58:	beq	1c8c <coda_netcdf_reopen+0xec0>
    1c5c:	mov	r0, r5
    1c60:	bl	0 <coda_netcdf_array_set_attributes>
    1c64:	cmp	r0, #0
    1c68:	beq	1c8c <coda_netcdf_reopen+0xec0>
    1c6c:	mov	r0, r5
    1c70:	bl	0 <coda_dynamic_type_delete>
    1c74:	ldr	r0, [sp, #144]	; 0x90
    1c78:	bl	0 <coda_dynamic_type_delete>
    1c7c:	mov	r0, r6
    1c80:	bl	0 <free>
    1c84:	mvn	r2, #0
    1c88:	b	1d4c <coda_netcdf_reopen+0xf80>
    1c8c:	mov	r3, #1
    1c90:	mov	r2, r5
    1c94:	mov	r1, r6
    1c98:	ldr	r0, [sp, #52]	; 0x34
    1c9c:	bl	0 <coda_mem_record_add_field>
    1ca0:	cmp	r0, #0
    1ca4:	beq	1d30 <coda_netcdf_reopen+0xf64>
    1ca8:	mov	r0, r5
    1cac:	bl	0 <coda_dynamic_type_delete>
    1cb0:	mov	r0, r6
    1cb4:	bl	0 <free>
    1cb8:	mvn	r2, #0
    1cbc:	b	1d4c <coda_netcdf_reopen+0xf80>
    1cc0:	ldr	r1, [sp, #144]	; 0x90
    1cc4:	cmp	r1, #0
    1cc8:	beq	1cfc <coda_netcdf_reopen+0xf30>
    1ccc:	mov	r0, r7
    1cd0:	bl	0 <coda_netcdf_basic_type_set_attributes>
    1cd4:	cmp	r0, #0
    1cd8:	beq	1cfc <coda_netcdf_reopen+0xf30>
    1cdc:	mov	r0, r7
    1ce0:	bl	0 <coda_dynamic_type_delete>
    1ce4:	ldr	r0, [sp, #144]	; 0x90
    1ce8:	bl	0 <coda_dynamic_type_delete>
    1cec:	mov	r0, r6
    1cf0:	bl	0 <free>
    1cf4:	mvn	r2, #0
    1cf8:	b	1d4c <coda_netcdf_reopen+0xf80>
    1cfc:	mov	r3, #1
    1d00:	mov	r2, r7
    1d04:	mov	r1, r6
    1d08:	ldr	r0, [sp, #52]	; 0x34
    1d0c:	bl	0 <coda_mem_record_add_field>
    1d10:	cmp	r0, #0
    1d14:	beq	1d30 <coda_netcdf_reopen+0xf64>
    1d18:	mov	r0, r7
    1d1c:	bl	0 <coda_dynamic_type_delete>
    1d20:	mov	r0, r6
    1d24:	bl	0 <free>
    1d28:	mvn	r2, #0
    1d2c:	b	1d4c <coda_netcdf_reopen+0xf80>
    1d30:	mov	r0, r6
    1d34:	bl	0 <free>
    1d38:	ldr	r1, [sp, #40]	; 0x28
    1d3c:	add	r2, r1, #1
    1d40:	str	r2, [sp, #40]	; 0x28
    1d44:	b	14e4 <coda_netcdf_reopen+0x718>
    1d48:	mov	r2, #0
    1d4c:	cmp	r2, #0
    1d50:	beq	1d74 <coda_netcdf_reopen+0xfa8>
    1d54:	ldr	r0, [sp, #100]	; 0x64
    1d58:	cmp	r0, #0
    1d5c:	beq	1d64 <coda_netcdf_reopen+0xf98>
    1d60:	bl	0 <free>
    1d64:	mov	r0, r4
    1d68:	bl	1dbc <coda_netcdf_close>
    1d6c:	mvn	r0, #0
    1d70:	b	1d90 <coda_netcdf_reopen+0xfc4>
    1d74:	ldr	r0, [sp, #100]	; 0x64
    1d78:	cmp	r0, #0
    1d7c:	beq	1d84 <coda_netcdf_reopen+0xfb8>
    1d80:	bl	0 <free>
    1d84:	ldr	ip, [sp, #32]
    1d88:	str	r4, [ip]
    1d8c:	mov	r0, #0
    1d90:	ldr	r4, [sp, #60]	; 0x3c
    1d94:	ldr	r5, [sp, #64]	; 0x40
    1d98:	ldr	r6, [sp, #68]	; 0x44
    1d9c:	ldr	r7, [sp, #72]	; 0x48
    1da0:	ldr	r8, [sp, #76]	; 0x4c
    1da4:	ldr	r9, [sp, #80]	; 0x50
    1da8:	ldr	sl, [sp, #84]	; 0x54
    1dac:	ldr	fp, [sp, #88]	; 0x58
    1db0:	ldr	lr, [sp, #20]
    1db4:	add	sp, sp, #232	; 0xe8
    1db8:	bx	lr

00001dbc <coda_netcdf_close>:
    1dbc:	mov	ip, sp
    1dc0:	sub	sp, sp, #16
    1dc4:	str	ip, [sp]
    1dc8:	str	lr, [sp, #4]
    1dcc:	str	r4, [sp, #8]
    1dd0:	mov	r4, r0
    1dd4:	ldr	r0, [r4]
    1dd8:	cmp	r0, #0
    1ddc:	beq	1de4 <coda_netcdf_close+0x28>
    1de0:	bl	0 <free>
    1de4:	ldr	r0, [r4, #20]
    1de8:	cmp	r0, #0
    1dec:	beq	1df4 <coda_netcdf_close+0x38>
    1df0:	bl	0 <coda_dynamic_type_delete>
    1df4:	ldr	r0, [r4, #48]	; 0x30
    1df8:	cmp	r0, #0
    1dfc:	beq	1e04 <coda_netcdf_close+0x48>
    1e00:	bl	0 <free>
    1e04:	ldr	r0, [r4, #52]	; 0x34
    1e08:	cmp	r0, #0
    1e0c:	beq	1e14 <coda_netcdf_close+0x58>
    1e10:	bl	0 <coda_bin_close>
    1e14:	mov	r0, r4
    1e18:	bl	0 <free>
    1e1c:	mov	r0, #0
    1e20:	ldr	r4, [sp, #8]
    1e24:	ldr	lr, [sp, #4]
    1e28:	add	sp, sp, #16
    1e2c:	bx	lr
