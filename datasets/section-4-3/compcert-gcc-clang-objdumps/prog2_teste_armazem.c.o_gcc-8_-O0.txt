
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/teste_armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #64	; 0x40
  10:	mov	r1, #3
  14:	mov	r0, #4
  18:	bl	0 <armazem_novo>
  1c:	str	r0, [fp, #-12]
  20:	movw	r0, #0
  24:	movt	r0, #0
  28:	bl	0 <puts>
  2c:	vldr	s0, [pc, #948]	; 3e8 <main+0x3e8>
  30:	movw	r0, #0
  34:	movt	r0, #0
  38:	bl	0 <contentor_novo>
  3c:	str	r0, [fp, #-16]
  40:	vldr	s0, [pc, #932]	; 3ec <main+0x3ec>
  44:	movw	r0, #0
  48:	movt	r0, #0
  4c:	bl	0 <contentor_novo>
  50:	str	r0, [fp, #-20]	; 0xffffffec
  54:	vldr	s0, [pc, #916]	; 3f0 <main+0x3f0>
  58:	movw	r0, #0
  5c:	movt	r0, #0
  60:	bl	0 <contentor_novo>
  64:	str	r0, [fp, #-24]	; 0xffffffe8
  68:	vldr	s0, [pc, #900]	; 3f4 <main+0x3f4>
  6c:	movw	r0, #0
  70:	movt	r0, #0
  74:	bl	0 <contentor_novo>
  78:	str	r0, [fp, #-28]	; 0xffffffe4
  7c:	vldr	s0, [pc, #884]	; 3f8 <main+0x3f8>
  80:	movw	r0, #0
  84:	movt	r0, #0
  88:	bl	0 <contentor_novo>
  8c:	str	r0, [fp, #-32]	; 0xffffffe0
  90:	vldr	s0, [pc, #868]	; 3fc <main+0x3fc>
  94:	movw	r0, #0
  98:	movt	r0, #0
  9c:	bl	0 <contentor_novo>
  a0:	str	r0, [fp, #-36]	; 0xffffffdc
  a4:	vldr	s0, [pc, #852]	; 400 <main+0x400>
  a8:	movw	r0, #0
  ac:	movt	r0, #0
  b0:	bl	0 <contentor_novo>
  b4:	str	r0, [fp, #-40]	; 0xffffffd8
  b8:	vldr	s0, [pc, #836]	; 404 <main+0x404>
  bc:	movw	r0, #0
  c0:	movt	r0, #0
  c4:	bl	0 <contentor_novo>
  c8:	str	r0, [fp, #-44]	; 0xffffffd4
  cc:	vldr	s0, [pc, #804]	; 3f8 <main+0x3f8>
  d0:	movw	r0, #0
  d4:	movt	r0, #0
  d8:	bl	0 <contentor_novo>
  dc:	str	r0, [fp, #-48]	; 0xffffffd0
  e0:	vldr	s0, [pc, #800]	; 408 <main+0x408>
  e4:	movw	r0, #0
  e8:	movt	r0, #0
  ec:	bl	0 <contentor_novo>
  f0:	str	r0, [fp, #-52]	; 0xffffffcc
  f4:	vldr	s0, [pc, #784]	; 40c <main+0x40c>
  f8:	movw	r0, #0
  fc:	movt	r0, #0
 100:	bl	0 <contentor_novo>
 104:	str	r0, [fp, #-56]	; 0xffffffc8
 108:	vldr	s0, [pc, #768]	; 410 <main+0x410>
 10c:	movw	r0, #0
 110:	movt	r0, #0
 114:	bl	0 <contentor_novo>
 118:	str	r0, [fp, #-60]	; 0xffffffc4
 11c:	vldr	s0, [pc, #752]	; 414 <main+0x414>
 120:	movw	r0, #0
 124:	movt	r0, #0
 128:	bl	0 <contentor_novo>
 12c:	str	r0, [fp, #-64]	; 0xffffffc0
 130:	movw	r0, #0
 134:	movt	r0, #0
 138:	bl	0 <puts>
 13c:	ldr	r0, [fp, #-12]
 140:	bl	564 <imprimeArmazem>
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	bl	0 <puts>
 150:	ldr	r1, [fp, #-16]
 154:	ldr	r0, [fp, #-12]
 158:	bl	0 <armazenar_contentor>
 15c:	mov	r3, r0
 160:	cmp	r3, #0
 164:	beq	180 <main+0x180>
 168:	ldr	r3, [fp, #-16]
 16c:	ldr	r3, [r3]
 170:	mov	r1, r3
 174:	movw	r0, #0
 178:	movt	r0, #0
 17c:	bl	0 <printf>
 180:	ldr	r1, [fp, #-20]	; 0xffffffec
 184:	ldr	r0, [fp, #-12]
 188:	bl	0 <armazenar_contentor>
 18c:	mov	r3, r0
 190:	cmp	r3, #0
 194:	beq	1b0 <main+0x1b0>
 198:	ldr	r3, [fp, #-20]	; 0xffffffec
 19c:	ldr	r3, [r3]
 1a0:	mov	r1, r3
 1a4:	movw	r0, #0
 1a8:	movt	r0, #0
 1ac:	bl	0 <printf>
 1b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 1b4:	ldr	r0, [fp, #-12]
 1b8:	bl	0 <armazenar_contentor>
 1bc:	mov	r3, r0
 1c0:	cmp	r3, #0
 1c4:	beq	1e0 <main+0x1e0>
 1c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1cc:	ldr	r3, [r3]
 1d0:	mov	r1, r3
 1d4:	movw	r0, #0
 1d8:	movt	r0, #0
 1dc:	bl	0 <printf>
 1e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
 1e4:	ldr	r0, [fp, #-12]
 1e8:	bl	0 <armazenar_contentor>
 1ec:	mov	r3, r0
 1f0:	cmp	r3, #0
 1f4:	beq	210 <main+0x210>
 1f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 1fc:	ldr	r3, [r3]
 200:	mov	r1, r3
 204:	movw	r0, #0
 208:	movt	r0, #0
 20c:	bl	0 <printf>
 210:	movw	r0, #0
 214:	movt	r0, #0
 218:	bl	0 <puts>
 21c:	ldr	r0, [fp, #-12]
 220:	bl	564 <imprimeArmazem>
 224:	movw	r0, #0
 228:	movt	r0, #0
 22c:	bl	0 <puts>
 230:	ldr	r1, [fp, #-32]	; 0xffffffe0
 234:	ldr	r0, [fp, #-12]
 238:	bl	0 <armazenar_contentor>
 23c:	mov	r3, r0
 240:	cmp	r3, #0
 244:	beq	260 <main+0x260>
 248:	ldr	r3, [fp, #-32]	; 0xffffffe0
 24c:	ldr	r3, [r3]
 250:	mov	r1, r3
 254:	movw	r0, #0
 258:	movt	r0, #0
 25c:	bl	0 <printf>
 260:	ldr	r1, [fp, #-36]	; 0xffffffdc
 264:	ldr	r0, [fp, #-12]
 268:	bl	0 <armazenar_contentor>
 26c:	mov	r3, r0
 270:	cmp	r3, #0
 274:	beq	290 <main+0x290>
 278:	ldr	r3, [fp, #-36]	; 0xffffffdc
 27c:	ldr	r3, [r3]
 280:	mov	r1, r3
 284:	movw	r0, #0
 288:	movt	r0, #0
 28c:	bl	0 <printf>
 290:	ldr	r1, [fp, #-40]	; 0xffffffd8
 294:	ldr	r0, [fp, #-12]
 298:	bl	0 <armazenar_contentor>
 29c:	mov	r3, r0
 2a0:	cmp	r3, #0
 2a4:	beq	2c0 <main+0x2c0>
 2a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 2ac:	ldr	r3, [r3]
 2b0:	mov	r1, r3
 2b4:	movw	r0, #0
 2b8:	movt	r0, #0
 2bc:	bl	0 <printf>
 2c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
 2c4:	ldr	r0, [fp, #-12]
 2c8:	bl	0 <armazenar_contentor>
 2cc:	mov	r3, r0
 2d0:	cmp	r3, #0
 2d4:	beq	2f0 <main+0x2f0>
 2d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
 2dc:	ldr	r3, [r3]
 2e0:	mov	r1, r3
 2e4:	movw	r0, #0
 2e8:	movt	r0, #0
 2ec:	bl	0 <printf>
 2f0:	ldr	r1, [fp, #-48]	; 0xffffffd0
 2f4:	ldr	r0, [fp, #-12]
 2f8:	bl	0 <armazenar_contentor>
 2fc:	mov	r3, r0
 300:	cmp	r3, #0
 304:	beq	320 <main+0x320>
 308:	ldr	r3, [fp, #-48]	; 0xffffffd0
 30c:	ldr	r3, [r3]
 310:	mov	r1, r3
 314:	movw	r0, #0
 318:	movt	r0, #0
 31c:	bl	0 <printf>
 320:	ldr	r1, [fp, #-52]	; 0xffffffcc
 324:	ldr	r0, [fp, #-12]
 328:	bl	0 <armazenar_contentor>
 32c:	mov	r3, r0
 330:	cmp	r3, #0
 334:	beq	350 <main+0x350>
 338:	ldr	r3, [fp, #-52]	; 0xffffffcc
 33c:	ldr	r3, [r3]
 340:	mov	r1, r3
 344:	movw	r0, #0
 348:	movt	r0, #0
 34c:	bl	0 <printf>
 350:	ldr	r1, [fp, #-56]	; 0xffffffc8
 354:	ldr	r0, [fp, #-12]
 358:	bl	0 <armazenar_contentor>
 35c:	mov	r3, r0
 360:	cmp	r3, #0
 364:	beq	380 <main+0x380>
 368:	ldr	r3, [fp, #-56]	; 0xffffffc8
 36c:	ldr	r3, [r3]
 370:	mov	r1, r3
 374:	movw	r0, #0
 378:	movt	r0, #0
 37c:	bl	0 <printf>
 380:	ldr	r1, [fp, #-60]	; 0xffffffc4
 384:	ldr	r0, [fp, #-12]
 388:	bl	0 <armazenar_contentor>
 38c:	mov	r3, r0
 390:	cmp	r3, #0
 394:	beq	3b0 <main+0x3b0>
 398:	ldr	r3, [fp, #-60]	; 0xffffffc4
 39c:	ldr	r3, [r3]
 3a0:	mov	r1, r3
 3a4:	movw	r0, #0
 3a8:	movt	r0, #0
 3ac:	bl	0 <printf>
 3b0:	movw	r0, #0
 3b4:	movt	r0, #0
 3b8:	bl	0 <puts>
 3bc:	ldr	r0, [fp, #-12]
 3c0:	bl	564 <imprimeArmazem>
 3c4:	ldr	r0, [fp, #-12]
 3c8:	bl	0 <armazem_cheio>
 3cc:	mov	r3, r0
 3d0:	cmp	r3, #0
 3d4:	beq	418 <main+0x418>
 3d8:	movw	r0, #0
 3dc:	movt	r0, #0
 3e0:	bl	0 <puts>
 3e4:	b	424 <main+0x424>
 3e8:	.word	0x43660000
 3ec:	.word	0x437a0000
 3f0:	.word	0x44048000
 3f4:	.word	0x44318000
 3f8:	.word	0x43be0000
 3fc:	.word	0x43c30000
 400:	.word	0x42c80000
 404:	.word	0x42a00000
 408:	.word	0x43160000
 40c:	.word	0x43870000
 410:	.word	0x43d70000
 414:	.word	0x43480000
 418:	movw	r0, #0
 41c:	movt	r0, #0
 420:	bl	0 <puts>
 424:	ldr	r1, [fp, #-64]	; 0xffffffc0
 428:	ldr	r0, [fp, #-12]
 42c:	bl	0 <armazenar_contentor>
 430:	mov	r3, r0
 434:	cmp	r3, #0
 438:	beq	454 <main+0x454>
 43c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 440:	ldr	r3, [r3]
 444:	mov	r1, r3
 448:	movw	r0, #0
 44c:	movt	r0, #0
 450:	bl	0 <printf>
 454:	movw	r0, #0
 458:	movt	r0, #0
 45c:	bl	0 <puts>
 460:	mov	r3, #0
 464:	str	r3, [fp, #-8]
 468:	b	498 <main+0x498>
 46c:	ldr	r0, [fp, #-12]
 470:	bl	0 <expedir_contentor>
 474:	str	r0, [fp, #-68]	; 0xffffffbc
 478:	movw	r0, #0
 47c:	movt	r0, #0
 480:	bl	0 <puts>
 484:	ldr	r0, [fp, #-68]	; 0xffffffbc
 488:	bl	0 <contentor_imprime>
 48c:	ldr	r3, [fp, #-8]
 490:	add	r3, r3, #1
 494:	str	r3, [fp, #-8]
 498:	ldr	r3, [fp, #-8]
 49c:	cmp	r3, #7
 4a0:	ble	46c <main+0x46c>
 4a4:	movw	r0, #0
 4a8:	movt	r0, #0
 4ac:	bl	0 <puts>
 4b0:	ldr	r0, [fp, #-12]
 4b4:	bl	564 <imprimeArmazem>
 4b8:	movw	r0, #0
 4bc:	movt	r0, #0
 4c0:	bl	0 <puts>
 4c4:	mov	r3, #0
 4c8:	str	r3, [fp, #-8]
 4cc:	b	4fc <main+0x4fc>
 4d0:	ldr	r0, [fp, #-12]
 4d4:	bl	0 <expedir_contentor>
 4d8:	str	r0, [fp, #-68]	; 0xffffffbc
 4dc:	movw	r0, #0
 4e0:	movt	r0, #0
 4e4:	bl	0 <puts>
 4e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
 4ec:	bl	0 <contentor_imprime>
 4f0:	ldr	r3, [fp, #-8]
 4f4:	add	r3, r3, #1
 4f8:	str	r3, [fp, #-8]
 4fc:	ldr	r3, [fp, #-8]
 500:	cmp	r3, #3
 504:	ble	4d0 <main+0x4d0>
 508:	movw	r0, #0
 50c:	movt	r0, #0
 510:	bl	0 <puts>
 514:	ldr	r0, [fp, #-12]
 518:	bl	564 <imprimeArmazem>
 51c:	ldr	r0, [fp, #-12]
 520:	bl	0 <armazem_vazio>
 524:	mov	r3, r0
 528:	cmp	r3, #0
 52c:	beq	540 <main+0x540>
 530:	movw	r0, #0
 534:	movt	r0, #0
 538:	bl	0 <puts>
 53c:	b	54c <main+0x54c>
 540:	movw	r0, #0
 544:	movt	r0, #0
 548:	bl	0 <puts>
 54c:	mov	r3, #0
 550:	mov	r0, r3
 554:	sub	sp, fp, #4
 558:	ldr	fp, [sp]
 55c:	add	sp, sp, #4
 560:	pop	{pc}		; (ldr pc, [sp], #4)

00000564 <imprimeArmazem>:
 564:	str	fp, [sp, #-8]!
 568:	str	lr, [sp, #4]
 56c:	add	fp, sp, #4
 570:	sub	sp, sp, #32
 574:	str	r0, [fp, #-32]	; 0xffffffe0
 578:	mov	r3, #0
 57c:	str	r3, [fp, #-20]	; 0xffffffec
 580:	ldr	r3, [fp, #-32]	; 0xffffffe0
 584:	cmp	r3, #0
 588:	beq	72c <imprimeArmazem+0x1c8>
 58c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 590:	ldr	r3, [r3, #8]
 594:	cmp	r3, #0
 598:	beq	72c <imprimeArmazem+0x1c8>
 59c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 5a0:	ldr	r3, [r3, #8]
 5a4:	ldr	r3, [r3, #4]
 5a8:	mov	r1, #4
 5ac:	mov	r0, r3
 5b0:	bl	0 <calloc>
 5b4:	mov	r3, r0
 5b8:	str	r3, [fp, #-24]	; 0xffffffe8
 5bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 5c0:	ldr	r3, [r3, #8]
 5c4:	ldr	r3, [r3, #4]
 5c8:	str	r3, [fp, #-28]	; 0xffffffe4
 5cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 5d0:	ldr	r3, [r3, #8]
 5d4:	ldr	r3, [r3]
 5d8:	str	r3, [fp, #-16]
 5dc:	mov	r3, #0
 5e0:	str	r3, [fp, #-8]
 5e4:	b	620 <imprimeArmazem+0xbc>
 5e8:	ldr	r3, [fp, #-16]
 5ec:	ldr	r2, [r3]
 5f0:	ldr	r3, [fp, #-8]
 5f4:	lsl	r3, r3, #2
 5f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
 5fc:	add	r3, r1, r3
 600:	ldr	r2, [r2, #4]
 604:	str	r2, [r3]
 608:	ldr	r3, [fp, #-16]
 60c:	ldr	r3, [r3, #4]
 610:	str	r3, [fp, #-16]
 614:	ldr	r3, [fp, #-8]
 618:	add	r3, r3, #1
 61c:	str	r3, [fp, #-8]
 620:	ldr	r3, [fp, #-16]
 624:	cmp	r3, #0
 628:	bne	5e8 <imprimeArmazem+0x84>
 62c:	mov	r0, #10
 630:	bl	0 <putchar>
 634:	ldr	r3, [fp, #-32]	; 0xffffffe0
 638:	ldr	r3, [r3, #4]
 63c:	str	r3, [fp, #-12]
 640:	b	6c8 <imprimeArmazem+0x164>
 644:	movw	r0, #0
 648:	movt	r0, #0
 64c:	bl	0 <printf>
 650:	mov	r3, #0
 654:	str	r3, [fp, #-8]
 658:	b	6a4 <imprimeArmazem+0x140>
 65c:	ldr	r3, [fp, #-8]
 660:	lsl	r3, r3, #2
 664:	ldr	r2, [fp, #-24]	; 0xffffffe8
 668:	add	r3, r2, r3
 66c:	ldr	r3, [r3]
 670:	ldr	r2, [fp, #-12]
 674:	cmp	r2, r3
 678:	bgt	68c <imprimeArmazem+0x128>
 67c:	movw	r0, #0
 680:	movt	r0, #0
 684:	bl	0 <printf>
 688:	b	698 <imprimeArmazem+0x134>
 68c:	movw	r0, #0
 690:	movt	r0, #0
 694:	bl	0 <printf>
 698:	ldr	r3, [fp, #-8]
 69c:	add	r3, r3, #1
 6a0:	str	r3, [fp, #-8]
 6a4:	ldr	r2, [fp, #-8]
 6a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
 6ac:	cmp	r2, r3
 6b0:	blt	65c <imprimeArmazem+0xf8>
 6b4:	mov	r0, #10
 6b8:	bl	0 <putchar>
 6bc:	ldr	r3, [fp, #-12]
 6c0:	sub	r3, r3, #1
 6c4:	str	r3, [fp, #-12]
 6c8:	ldr	r3, [fp, #-12]
 6cc:	cmp	r3, #0
 6d0:	bgt	644 <imprimeArmazem+0xe0>
 6d4:	movw	r0, #0
 6d8:	movt	r0, #0
 6dc:	bl	0 <printf>
 6e0:	mov	r3, #0
 6e4:	str	r3, [fp, #-8]
 6e8:	b	704 <imprimeArmazem+0x1a0>
 6ec:	movw	r0, #0
 6f0:	movt	r0, #0
 6f4:	bl	0 <printf>
 6f8:	ldr	r3, [fp, #-8]
 6fc:	add	r3, r3, #1
 700:	str	r3, [fp, #-8]
 704:	ldr	r3, [fp, #-32]	; 0xffffffe0
 708:	ldr	r3, [r3]
 70c:	ldr	r2, [fp, #-8]
 710:	cmp	r2, r3
 714:	blt	6ec <imprimeArmazem+0x188>
 718:	movw	r0, #0
 71c:	movt	r0, #0
 720:	bl	0 <puts>
 724:	ldr	r0, [fp, #-24]	; 0xffffffe8
 728:	bl	0 <free>
 72c:	nop	{0}
 730:	sub	sp, fp, #4
 734:	ldr	fp, [sp]
 738:	add	sp, sp, #4
 73c:	pop	{pc}		; (ldr pc, [sp], #4)
