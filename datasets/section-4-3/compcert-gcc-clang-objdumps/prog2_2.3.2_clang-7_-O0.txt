
../compcert-repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010ab0 <.init>:
   10ab0:	push	{r3, lr}
   10ab4:	bl	10bd8 <_start@@Base+0x3c>
   10ab8:	pop	{r3, pc}

Disassembly of section .plt:

00010abc <calloc@plt-0x14>:
   10abc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac0:	ldr	lr, [pc, #4]	; 10acc <calloc@plt-0x4>
   10ac4:	add	lr, pc, lr
   10ac8:	ldr	pc, [lr, #8]!
   10acc:	andeq	r1, r1, r4, lsr r5

00010ad0 <calloc@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1332]!	; 0x534

00010adc <strcmp@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1324]!	; 0x52c

00010ae8 <printf@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1316]!	; 0x524

00010af4 <free@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1308]!	; 0x51c

00010b00 <fgets@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1300]!	; 0x514

00010b0c <time@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1292]!	; 0x50c

00010b18 <realloc@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1284]!	; 0x504

00010b24 <strcat@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b30 <strcpy@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b3c <malloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b48 <__libc_start_main@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b54 <__gmon_start__@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b60 <strlen@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b6c <srand@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b78 <rand@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b84 <__isoc99_scanf@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b90 <abort@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1204]!	; 0x4b4

Disassembly of section .text:

00010b9c <_start@@Base>:
   10b9c:	mov	fp, #0
   10ba0:	mov	lr, #0
   10ba4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba8:	mov	r2, sp
   10bac:	push	{r2}		; (str r2, [sp, #-4]!)
   10bb0:	push	{r0}		; (str r0, [sp, #-4]!)
   10bb4:	ldr	ip, [pc, #16]	; 10bcc <_start@@Base+0x30>
   10bb8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bbc:	ldr	r0, [pc, #12]	; 10bd0 <_start@@Base+0x34>
   10bc0:	ldr	r3, [pc, #12]	; 10bd4 <_start@@Base+0x38>
   10bc4:	bl	10b48 <__libc_start_main@plt>
   10bc8:	bl	10b90 <abort@plt>
   10bcc:	andeq	r1, r1, r4, lsl #17
   10bd0:	andeq	r0, r1, r4, lsl #26
   10bd4:	andeq	r1, r1, r4, lsr #16
   10bd8:	ldr	r3, [pc, #20]	; 10bf4 <_start@@Base+0x58>
   10bdc:	ldr	r2, [pc, #20]	; 10bf8 <_start@@Base+0x5c>
   10be0:	add	r3, pc, r3
   10be4:	ldr	r2, [r3, r2]
   10be8:	cmp	r2, #0
   10bec:	bxeq	lr
   10bf0:	b	10b54 <__gmon_start__@plt>
   10bf4:	andeq	r1, r1, r8, lsl r4
   10bf8:	andeq	r0, r0, r0, asr r0
   10bfc:	ldr	r0, [pc, #24]	; 10c1c <_start@@Base+0x80>
   10c00:	ldr	r3, [pc, #24]	; 10c20 <_start@@Base+0x84>
   10c04:	cmp	r3, r0
   10c08:	bxeq	lr
   10c0c:	ldr	r3, [pc, #16]	; 10c24 <_start@@Base+0x88>
   10c10:	cmp	r3, #0
   10c14:	bxeq	lr
   10c18:	bx	r3
   10c1c:	andeq	r2, r2, ip, asr r0
   10c20:	andeq	r2, r2, ip, asr r0
   10c24:	andeq	r0, r0, r0
   10c28:	ldr	r0, [pc, #36]	; 10c54 <_start@@Base+0xb8>
   10c2c:	ldr	r1, [pc, #36]	; 10c58 <_start@@Base+0xbc>
   10c30:	sub	r1, r1, r0
   10c34:	asr	r1, r1, #2
   10c38:	add	r1, r1, r1, lsr #31
   10c3c:	asrs	r1, r1, #1
   10c40:	bxeq	lr
   10c44:	ldr	r3, [pc, #16]	; 10c5c <_start@@Base+0xc0>
   10c48:	cmp	r3, #0
   10c4c:	bxeq	lr
   10c50:	bx	r3
   10c54:	andeq	r2, r2, ip, asr r0
   10c58:	andeq	r2, r2, ip, asr r0
   10c5c:	andeq	r0, r0, r0
   10c60:	push	{r4, lr}
   10c64:	ldr	r4, [pc, #24]	; 10c84 <_start@@Base+0xe8>
   10c68:	ldrb	r3, [r4]
   10c6c:	cmp	r3, #0
   10c70:	popne	{r4, pc}
   10c74:	bl	10bfc <_start@@Base+0x60>
   10c78:	mov	r3, #1
   10c7c:	strb	r3, [r4]
   10c80:	pop	{r4, pc}
   10c84:	andeq	r2, r2, r4, rrx
   10c88:	b	10c28 <_start@@Base+0x8c>

00010c8c <imprime@@Base>:
   10c8c:	push	{fp, lr}
   10c90:	mov	fp, sp
   10c94:	sub	sp, sp, #24
   10c98:	str	r0, [fp, #-4]
   10c9c:	movw	r0, #0
   10ca0:	str	r0, [fp, #-8]
   10ca4:	ldr	r0, [fp, #-8]
   10ca8:	cmp	r0, #5
   10cac:	bge	10cfc <imprime@@Base+0x70>
   10cb0:	ldr	r0, [fp, #-8]
   10cb4:	add	r1, r0, #1
   10cb8:	ldr	r0, [fp, #-4]
   10cbc:	ldr	r2, [fp, #-8]
   10cc0:	str	r1, [sp, #12]
   10cc4:	mov	r1, r2
   10cc8:	bl	110cc <vetor_elemento@@Base>
   10ccc:	movw	r1, #6292	; 0x1894
   10cd0:	movt	r1, #1
   10cd4:	str	r0, [sp, #8]
   10cd8:	mov	r0, r1
   10cdc:	ldr	r1, [sp, #12]
   10ce0:	ldr	r2, [sp, #8]
   10ce4:	bl	10ae8 <printf@plt>
   10ce8:	str	r0, [sp, #4]
   10cec:	ldr	r0, [fp, #-8]
   10cf0:	add	r0, r0, #1
   10cf4:	str	r0, [fp, #-8]
   10cf8:	b	10ca4 <imprime@@Base+0x18>
   10cfc:	mov	sp, fp
   10d00:	pop	{fp, pc}

00010d04 <main@@Base>:
   10d04:	push	{fp, lr}
   10d08:	mov	fp, sp
   10d0c:	sub	sp, sp, #160	; 0xa0
   10d10:	movw	r0, #3720	; 0xe88
   10d14:	movt	r0, #1
   10d18:	movw	r1, #0
   10d1c:	str	r1, [fp, #-4]
   10d20:	blx	r0
   10d24:	str	r0, [sp, #48]	; 0x30
   10d28:	movw	r0, #0
   10d2c:	str	r0, [fp, #-8]
   10d30:	ldr	r0, [fp, #-8]
   10d34:	cmp	r0, #5
   10d38:	bge	10db8 <main@@Base+0xb4>
   10d3c:	ldr	r0, [fp, #-8]
   10d40:	add	r1, r0, #1
   10d44:	movw	r0, #6321	; 0x18b1
   10d48:	movt	r0, #1
   10d4c:	bl	10ae8 <printf@plt>
   10d50:	add	r1, sp, #52	; 0x34
   10d54:	movw	lr, #8288	; 0x2060
   10d58:	movt	lr, #2
   10d5c:	ldr	r2, [lr]
   10d60:	str	r0, [sp, #44]	; 0x2c
   10d64:	mov	r0, r1
   10d68:	movw	r1, #100	; 0x64
   10d6c:	bl	10b00 <fgets@plt>
   10d70:	add	r1, sp, #52	; 0x34
   10d74:	str	r0, [sp, #40]	; 0x28
   10d78:	mov	r0, r1
   10d7c:	str	r1, [sp, #36]	; 0x24
   10d80:	bl	10b60 <strlen@plt>
   10d84:	sub	r0, r0, #1
   10d88:	ldr	r1, [sp, #36]	; 0x24
   10d8c:	add	r0, r1, r0
   10d90:	movw	r2, #0
   10d94:	strb	r2, [r0]
   10d98:	ldr	r0, [sp, #48]	; 0x30
   10d9c:	ldr	r2, [fp, #-8]
   10da0:	bl	11138 <vetor_insere@@Base>
   10da4:	str	r0, [sp, #32]
   10da8:	ldr	r0, [fp, #-8]
   10dac:	add	r0, r0, #1
   10db0:	str	r0, [fp, #-8]
   10db4:	b	10d30 <main@@Base+0x2c>
   10db8:	ldr	r0, [sp, #48]	; 0x30
   10dbc:	bl	10c8c <imprime@@Base>
   10dc0:	movw	r0, #6340	; 0x18c4
   10dc4:	movt	r0, #1
   10dc8:	bl	10ae8 <printf@plt>
   10dcc:	add	r1, sp, #52	; 0x34
   10dd0:	movw	lr, #6372	; 0x18e4
   10dd4:	movt	lr, #1
   10dd8:	str	r0, [sp, #28]
   10ddc:	mov	r0, lr
   10de0:	bl	10b84 <__isoc99_scanf@plt>
   10de4:	add	r1, sp, #52	; 0x34
   10de8:	ldr	lr, [sp, #48]	; 0x30
   10dec:	ldr	r2, [sp, #48]	; 0x30
   10df0:	str	r0, [sp, #24]
   10df4:	mov	r0, r2
   10df8:	str	lr, [sp, #20]
   10dfc:	bl	113d4 <vetor_pesquisa@@Base>
   10e00:	ldr	r1, [sp, #20]
   10e04:	str	r0, [sp, #16]
   10e08:	mov	r0, r1
   10e0c:	ldr	r1, [sp, #16]
   10e10:	bl	112f8 <vetor_remove@@Base>
   10e14:	cmp	r0, #0
   10e18:	beq	10e30 <main@@Base+0x12c>
   10e1c:	movw	r0, #6375	; 0x18e7
   10e20:	movt	r0, #1
   10e24:	bl	10ae8 <printf@plt>
   10e28:	str	r0, [sp, #12]
   10e2c:	b	10e38 <main@@Base+0x134>
   10e30:	ldr	r0, [sp, #48]	; 0x30
   10e34:	bl	10c8c <imprime@@Base>
   10e38:	ldr	r0, [sp, #48]	; 0x30
   10e3c:	bl	11478 <vetor_ordena@@Base>
   10e40:	cmp	r0, #0
   10e44:	beq	10e58 <main@@Base+0x154>
   10e48:	movw	r0, #6398	; 0x18fe
   10e4c:	movt	r0, #1
   10e50:	bl	10ae8 <printf@plt>
   10e54:	str	r0, [sp, #8]
   10e58:	movw	r0, #6432	; 0x1920
   10e5c:	movt	r0, #1
   10e60:	bl	10ae8 <printf@plt>
   10e64:	ldr	lr, [sp, #48]	; 0x30
   10e68:	str	r0, [sp, #4]
   10e6c:	mov	r0, lr
   10e70:	bl	10c8c <imprime@@Base>
   10e74:	ldr	r0, [sp, #48]	; 0x30
   10e78:	bl	10eec <vetor_apaga@@Base>
   10e7c:	movw	r0, #0
   10e80:	mov	sp, fp
   10e84:	pop	{fp, pc}

00010e88 <vetor_novo@@Base>:
   10e88:	push	{fp, lr}
   10e8c:	mov	fp, sp
   10e90:	sub	sp, sp, #8
   10e94:	movw	r0, #12
   10e98:	bl	10b3c <malloc@plt>
   10e9c:	str	r0, [sp]
   10ea0:	ldr	r0, [sp]
   10ea4:	movw	lr, #0
   10ea8:	cmp	r0, lr
   10eac:	bne	10ebc <vetor_novo@@Base+0x34>
   10eb0:	movw	r0, #0
   10eb4:	str	r0, [sp, #4]
   10eb8:	b	10ee0 <vetor_novo@@Base+0x58>
   10ebc:	ldr	r0, [sp]
   10ec0:	movw	r1, #0
   10ec4:	str	r1, [r0]
   10ec8:	ldr	r0, [sp]
   10ecc:	str	r1, [r0, #4]
   10ed0:	ldr	r0, [sp]
   10ed4:	str	r1, [r0, #8]
   10ed8:	ldr	r0, [sp]
   10edc:	str	r0, [sp, #4]
   10ee0:	ldr	r0, [sp, #4]
   10ee4:	mov	sp, fp
   10ee8:	pop	{fp, pc}

00010eec <vetor_apaga@@Base>:
   10eec:	push	{fp, lr}
   10ef0:	mov	fp, sp
   10ef4:	sub	sp, sp, #8
   10ef8:	str	r0, [sp, #4]
   10efc:	ldr	r0, [sp, #4]
   10f00:	movw	r1, #0
   10f04:	cmp	r0, r1
   10f08:	bne	10f10 <vetor_apaga@@Base+0x24>
   10f0c:	b	10f68 <vetor_apaga@@Base+0x7c>
   10f10:	movw	r0, #0
   10f14:	str	r0, [sp]
   10f18:	ldr	r0, [sp]
   10f1c:	ldr	r1, [sp, #4]
   10f20:	ldr	r1, [r1]
   10f24:	cmp	r0, r1
   10f28:	bge	10f54 <vetor_apaga@@Base+0x68>
   10f2c:	ldr	r0, [sp, #4]
   10f30:	ldr	r0, [r0, #8]
   10f34:	ldr	r1, [sp]
   10f38:	add	r0, r0, r1, lsl #2
   10f3c:	ldr	r0, [r0]
   10f40:	bl	10af4 <free@plt>
   10f44:	ldr	r0, [sp]
   10f48:	add	r0, r0, #1
   10f4c:	str	r0, [sp]
   10f50:	b	10f18 <vetor_apaga@@Base+0x2c>
   10f54:	ldr	r0, [sp, #4]
   10f58:	ldr	r0, [r0, #8]
   10f5c:	bl	10af4 <free@plt>
   10f60:	ldr	r0, [sp, #4]
   10f64:	bl	10af4 <free@plt>
   10f68:	mov	sp, fp
   10f6c:	pop	{fp, pc}

00010f70 <vetor_atribui@@Base>:
   10f70:	push	{fp, lr}
   10f74:	mov	fp, sp
   10f78:	sub	sp, sp, #32
   10f7c:	str	r0, [fp, #-8]
   10f80:	str	r1, [fp, #-12]
   10f84:	str	r2, [sp, #16]
   10f88:	ldr	r0, [fp, #-8]
   10f8c:	movw	r1, #0
   10f90:	cmp	r0, r1
   10f94:	beq	10fb8 <vetor_atribui@@Base+0x48>
   10f98:	ldr	r0, [fp, #-12]
   10f9c:	cmp	r0, #0
   10fa0:	blt	10fb8 <vetor_atribui@@Base+0x48>
   10fa4:	ldr	r0, [fp, #-12]
   10fa8:	ldr	r1, [fp, #-8]
   10fac:	ldr	r1, [r1]
   10fb0:	cmp	r0, r1
   10fb4:	blt	10fc4 <vetor_atribui@@Base+0x54>
   10fb8:	mvn	r0, #0
   10fbc:	str	r0, [fp, #-4]
   10fc0:	b	11084 <vetor_atribui@@Base+0x114>
   10fc4:	ldr	r0, [sp, #16]
   10fc8:	bl	10b60 <strlen@plt>
   10fcc:	str	r0, [sp, #12]
   10fd0:	ldr	r0, [sp, #12]
   10fd4:	ldr	lr, [fp, #-8]
   10fd8:	ldr	lr, [lr, #8]
   10fdc:	ldr	r1, [fp, #-12]
   10fe0:	add	r1, lr, r1, lsl #2
   10fe4:	ldr	r1, [r1]
   10fe8:	str	r0, [sp, #8]
   10fec:	mov	r0, r1
   10ff0:	bl	10b60 <strlen@plt>
   10ff4:	ldr	r1, [sp, #8]
   10ff8:	cmp	r1, r0
   10ffc:	bls	1105c <vetor_atribui@@Base+0xec>
   11000:	ldr	r0, [fp, #-8]
   11004:	ldr	r0, [r0, #8]
   11008:	ldr	r1, [fp, #-12]
   1100c:	ldr	r0, [r0, r1, lsl #2]
   11010:	ldr	r1, [sp, #12]
   11014:	add	r1, r1, #1
   11018:	bl	10b18 <realloc@plt>
   1101c:	ldr	r1, [fp, #-8]
   11020:	ldr	r1, [r1, #8]
   11024:	ldr	lr, [fp, #-12]
   11028:	str	r0, [r1, lr, lsl #2]
   1102c:	ldr	r0, [fp, #-8]
   11030:	ldr	r0, [r0, #8]
   11034:	ldr	r1, [fp, #-12]
   11038:	add	r0, r0, r1, lsl #2
   1103c:	ldr	r0, [r0]
   11040:	movw	r1, #0
   11044:	cmp	r0, r1
   11048:	bne	11058 <vetor_atribui@@Base+0xe8>
   1104c:	mvn	r0, #0
   11050:	str	r0, [fp, #-4]
   11054:	b	11084 <vetor_atribui@@Base+0x114>
   11058:	b	1105c <vetor_atribui@@Base+0xec>
   1105c:	ldr	r0, [fp, #-8]
   11060:	ldr	r0, [r0, #8]
   11064:	ldr	r1, [fp, #-12]
   11068:	add	r0, r0, r1, lsl #2
   1106c:	ldr	r0, [r0]
   11070:	ldr	r1, [sp, #16]
   11074:	bl	10b30 <strcpy@plt>
   11078:	ldr	r1, [fp, #-12]
   1107c:	str	r1, [fp, #-4]
   11080:	str	r0, [sp, #4]
   11084:	ldr	r0, [fp, #-4]
   11088:	mov	sp, fp
   1108c:	pop	{fp, pc}

00011090 <vetor_tamanho@@Base>:
   11090:	sub	sp, sp, #8
   11094:	str	r0, [sp]
   11098:	ldr	r0, [sp]
   1109c:	movw	r1, #0
   110a0:	cmp	r0, r1
   110a4:	bne	110b4 <vetor_tamanho@@Base+0x24>
   110a8:	mvn	r0, #0
   110ac:	str	r0, [sp, #4]
   110b0:	b	110c0 <vetor_tamanho@@Base+0x30>
   110b4:	ldr	r0, [sp]
   110b8:	ldr	r0, [r0]
   110bc:	str	r0, [sp, #4]
   110c0:	ldr	r0, [sp, #4]
   110c4:	add	sp, sp, #8
   110c8:	bx	lr

000110cc <vetor_elemento@@Base>:
   110cc:	sub	sp, sp, #12
   110d0:	str	r0, [sp, #4]
   110d4:	str	r1, [sp]
   110d8:	ldr	r0, [sp, #4]
   110dc:	movw	r1, #0
   110e0:	cmp	r0, r1
   110e4:	beq	11108 <vetor_elemento@@Base+0x3c>
   110e8:	ldr	r0, [sp]
   110ec:	cmp	r0, #0
   110f0:	blt	11108 <vetor_elemento@@Base+0x3c>
   110f4:	ldr	r0, [sp]
   110f8:	ldr	r1, [sp, #4]
   110fc:	ldr	r1, [r1]
   11100:	cmp	r0, r1
   11104:	blt	11114 <vetor_elemento@@Base+0x48>
   11108:	movw	r0, #0
   1110c:	str	r0, [sp, #8]
   11110:	b	1112c <vetor_elemento@@Base+0x60>
   11114:	ldr	r0, [sp, #4]
   11118:	ldr	r0, [r0, #8]
   1111c:	ldr	r1, [sp]
   11120:	add	r0, r0, r1, lsl #2
   11124:	ldr	r0, [r0]
   11128:	str	r0, [sp, #8]
   1112c:	ldr	r0, [sp, #8]
   11130:	add	sp, sp, #12
   11134:	bx	lr

00011138 <vetor_insere@@Base>:
   11138:	push	{fp, lr}
   1113c:	mov	fp, sp
   11140:	sub	sp, sp, #24
   11144:	str	r0, [fp, #-8]
   11148:	str	r1, [sp, #12]
   1114c:	str	r2, [sp, #8]
   11150:	ldr	r0, [fp, #-8]
   11154:	movw	r1, #0
   11158:	cmp	r0, r1
   1115c:	beq	11180 <vetor_insere@@Base+0x48>
   11160:	ldr	r0, [sp, #8]
   11164:	cmp	r0, #0
   11168:	blt	11180 <vetor_insere@@Base+0x48>
   1116c:	ldr	r0, [sp, #8]
   11170:	ldr	r1, [fp, #-8]
   11174:	ldr	r1, [r1]
   11178:	cmp	r0, r1
   1117c:	ble	1118c <vetor_insere@@Base+0x54>
   11180:	mvn	r0, #0
   11184:	str	r0, [fp, #-4]
   11188:	b	112ec <vetor_insere@@Base+0x1b4>
   1118c:	ldr	r0, [fp, #-8]
   11190:	ldr	r0, [r0]
   11194:	ldr	r1, [fp, #-8]
   11198:	ldr	r1, [r1, #4]
   1119c:	cmp	r0, r1
   111a0:	bne	11214 <vetor_insere@@Base+0xdc>
   111a4:	ldr	r0, [fp, #-8]
   111a8:	ldr	r0, [r0, #4]
   111ac:	cmp	r0, #0
   111b0:	bne	111c4 <vetor_insere@@Base+0x8c>
   111b4:	ldr	r0, [fp, #-8]
   111b8:	movw	r1, #1
   111bc:	str	r1, [r0, #4]
   111c0:	b	111d4 <vetor_insere@@Base+0x9c>
   111c4:	ldr	r0, [fp, #-8]
   111c8:	ldr	r1, [r0, #4]
   111cc:	lsl	r1, r1, #1
   111d0:	str	r1, [r0, #4]
   111d4:	ldr	r0, [fp, #-8]
   111d8:	ldr	r1, [r0, #4]
   111dc:	ldr	r0, [r0, #8]
   111e0:	lsl	r1, r1, #2
   111e4:	bl	10b18 <realloc@plt>
   111e8:	ldr	r1, [fp, #-8]
   111ec:	str	r0, [r1, #8]
   111f0:	ldr	r0, [fp, #-8]
   111f4:	ldr	r0, [r0, #8]
   111f8:	movw	r1, #0
   111fc:	cmp	r0, r1
   11200:	bne	11210 <vetor_insere@@Base+0xd8>
   11204:	mvn	r0, #0
   11208:	str	r0, [fp, #-4]
   1120c:	b	112ec <vetor_insere@@Base+0x1b4>
   11210:	b	11214 <vetor_insere@@Base+0xdc>
   11214:	ldr	r0, [fp, #-8]
   11218:	ldr	r0, [r0]
   1121c:	sub	r0, r0, #1
   11220:	str	r0, [sp, #4]
   11224:	ldr	r0, [sp, #4]
   11228:	ldr	r1, [sp, #8]
   1122c:	cmp	r0, r1
   11230:	blt	11264 <vetor_insere@@Base+0x12c>
   11234:	ldr	r0, [fp, #-8]
   11238:	ldr	r0, [r0, #8]
   1123c:	ldr	r1, [sp, #4]
   11240:	add	r0, r0, r1, lsl #2
   11244:	add	r1, r0, #4
   11248:	ldr	r0, [r0]
   1124c:	str	r0, [r1]
   11250:	ldr	r0, [sp, #4]
   11254:	mvn	r1, #0
   11258:	add	r0, r0, r1
   1125c:	str	r0, [sp, #4]
   11260:	b	11224 <vetor_insere@@Base+0xec>
   11264:	ldr	r0, [sp, #12]
   11268:	bl	10b60 <strlen@plt>
   1126c:	add	r0, r0, #1
   11270:	mov	r1, #1
   11274:	bl	10ad0 <calloc@plt>
   11278:	ldr	r1, [fp, #-8]
   1127c:	ldr	r1, [r1, #8]
   11280:	ldr	lr, [sp, #8]
   11284:	str	r0, [r1, lr, lsl #2]
   11288:	ldr	r0, [fp, #-8]
   1128c:	ldr	r0, [r0, #8]
   11290:	ldr	r1, [sp, #8]
   11294:	add	r0, r0, r1, lsl #2
   11298:	ldr	r0, [r0]
   1129c:	movw	r1, #0
   112a0:	cmp	r0, r1
   112a4:	bne	112b4 <vetor_insere@@Base+0x17c>
   112a8:	mvn	r0, #0
   112ac:	str	r0, [fp, #-4]
   112b0:	b	112ec <vetor_insere@@Base+0x1b4>
   112b4:	ldr	r0, [fp, #-8]
   112b8:	ldr	r0, [r0, #8]
   112bc:	ldr	r1, [sp, #8]
   112c0:	add	r0, r0, r1, lsl #2
   112c4:	ldr	r0, [r0]
   112c8:	ldr	r1, [sp, #12]
   112cc:	bl	10b30 <strcpy@plt>
   112d0:	ldr	r1, [fp, #-8]
   112d4:	ldr	lr, [r1]
   112d8:	add	lr, lr, #1
   112dc:	str	lr, [r1]
   112e0:	ldr	r1, [sp, #8]
   112e4:	str	r1, [fp, #-4]
   112e8:	str	r0, [sp]
   112ec:	ldr	r0, [fp, #-4]
   112f0:	mov	sp, fp
   112f4:	pop	{fp, pc}

000112f8 <vetor_remove@@Base>:
   112f8:	push	{fp, lr}
   112fc:	mov	fp, sp
   11300:	sub	sp, sp, #16
   11304:	str	r0, [sp, #8]
   11308:	str	r1, [sp, #4]
   1130c:	ldr	r0, [sp, #8]
   11310:	movw	r1, #0
   11314:	cmp	r0, r1
   11318:	beq	1133c <vetor_remove@@Base+0x44>
   1131c:	ldr	r0, [sp, #4]
   11320:	cmp	r0, #0
   11324:	blt	1133c <vetor_remove@@Base+0x44>
   11328:	ldr	r0, [sp, #4]
   1132c:	ldr	r1, [sp, #8]
   11330:	ldr	r1, [r1]
   11334:	cmp	r0, r1
   11338:	blt	11348 <vetor_remove@@Base+0x50>
   1133c:	mvn	r0, #0
   11340:	str	r0, [fp, #-4]
   11344:	b	113c8 <vetor_remove@@Base+0xd0>
   11348:	ldr	r0, [sp, #8]
   1134c:	ldr	r0, [r0, #8]
   11350:	ldr	r1, [sp, #4]
   11354:	add	r0, r0, r1, lsl #2
   11358:	ldr	r0, [r0]
   1135c:	bl	10af4 <free@plt>
   11360:	ldr	r0, [sp, #4]
   11364:	add	r0, r0, #1
   11368:	str	r0, [sp]
   1136c:	ldr	r0, [sp]
   11370:	ldr	r1, [sp, #8]
   11374:	ldr	r1, [r1]
   11378:	cmp	r0, r1
   1137c:	bge	113ac <vetor_remove@@Base+0xb4>
   11380:	ldr	r0, [sp, #8]
   11384:	ldr	r0, [r0, #8]
   11388:	ldr	r1, [sp]
   1138c:	add	r0, r0, r1, lsl #2
   11390:	sub	r1, r0, #4
   11394:	ldr	r0, [r0]
   11398:	str	r0, [r1]
   1139c:	ldr	r0, [sp]
   113a0:	add	r0, r0, #1
   113a4:	str	r0, [sp]
   113a8:	b	1136c <vetor_remove@@Base+0x74>
   113ac:	ldr	r0, [sp, #8]
   113b0:	ldr	r1, [r0]
   113b4:	mvn	r2, #0
   113b8:	add	r1, r1, r2
   113bc:	str	r1, [r0]
   113c0:	movw	r0, #0
   113c4:	str	r0, [fp, #-4]
   113c8:	ldr	r0, [fp, #-4]
   113cc:	mov	sp, fp
   113d0:	pop	{fp, pc}

000113d4 <vetor_pesquisa@@Base>:
   113d4:	push	{fp, lr}
   113d8:	mov	fp, sp
   113dc:	sub	sp, sp, #16
   113e0:	str	r0, [sp, #8]
   113e4:	str	r1, [sp, #4]
   113e8:	ldr	r0, [sp, #8]
   113ec:	movw	r1, #0
   113f0:	cmp	r0, r1
   113f4:	bne	11404 <vetor_pesquisa@@Base+0x30>
   113f8:	mvn	r0, #0
   113fc:	str	r0, [fp, #-4]
   11400:	b	1146c <vetor_pesquisa@@Base+0x98>
   11404:	movw	r0, #0
   11408:	str	r0, [sp]
   1140c:	ldr	r0, [sp]
   11410:	ldr	r1, [sp, #8]
   11414:	ldr	r1, [r1]
   11418:	cmp	r0, r1
   1141c:	bge	11464 <vetor_pesquisa@@Base+0x90>
   11420:	ldr	r0, [sp, #8]
   11424:	ldr	r0, [r0, #8]
   11428:	ldr	r1, [sp]
   1142c:	add	r0, r0, r1, lsl #2
   11430:	ldr	r0, [r0]
   11434:	ldr	r1, [sp, #4]
   11438:	bl	10adc <strcmp@plt>
   1143c:	cmp	r0, #0
   11440:	bne	11450 <vetor_pesquisa@@Base+0x7c>
   11444:	ldr	r0, [sp]
   11448:	str	r0, [fp, #-4]
   1144c:	b	1146c <vetor_pesquisa@@Base+0x98>
   11450:	b	11454 <vetor_pesquisa@@Base+0x80>
   11454:	ldr	r0, [sp]
   11458:	add	r0, r0, #1
   1145c:	str	r0, [sp]
   11460:	b	1140c <vetor_pesquisa@@Base+0x38>
   11464:	mvn	r0, #0
   11468:	str	r0, [fp, #-4]
   1146c:	ldr	r0, [fp, #-4]
   11470:	mov	sp, fp
   11474:	pop	{fp, pc}

00011478 <vetor_ordena@@Base>:
   11478:	push	{fp, lr}
   1147c:	mov	fp, sp
   11480:	sub	sp, sp, #24
   11484:	str	r0, [fp, #-8]
   11488:	ldr	r0, [fp, #-8]
   1148c:	movw	r1, #0
   11490:	cmp	r0, r1
   11494:	bne	114a4 <vetor_ordena@@Base+0x2c>
   11498:	mvn	r0, #0
   1149c:	str	r0, [fp, #-4]
   114a0:	b	11594 <vetor_ordena@@Base+0x11c>
   114a4:	movw	r0, #1
   114a8:	str	r0, [sp, #12]
   114ac:	ldr	r0, [sp, #12]
   114b0:	ldr	r1, [fp, #-8]
   114b4:	ldr	r1, [r1]
   114b8:	cmp	r0, r1
   114bc:	bge	1158c <vetor_ordena@@Base+0x114>
   114c0:	ldr	r0, [fp, #-8]
   114c4:	ldr	r0, [r0, #8]
   114c8:	ldr	r1, [sp, #12]
   114cc:	add	r0, r0, r1, lsl #2
   114d0:	ldr	r0, [r0]
   114d4:	str	r0, [sp, #4]
   114d8:	ldr	r0, [sp, #12]
   114dc:	str	r0, [sp, #8]
   114e0:	ldr	r0, [sp, #8]
   114e4:	cmp	r0, #0
   114e8:	movw	r0, #0
   114ec:	str	r0, [sp]
   114f0:	ble	11524 <vetor_ordena@@Base+0xac>
   114f4:	ldr	r0, [sp, #4]
   114f8:	ldr	r1, [fp, #-8]
   114fc:	ldr	r1, [r1, #8]
   11500:	ldr	r2, [sp, #8]
   11504:	sub	r2, r2, #1
   11508:	add	r1, r1, r2, lsl #2
   1150c:	ldr	r1, [r1]
   11510:	bl	10adc <strcmp@plt>
   11514:	cmp	r0, #0
   11518:	movw	r0, #0
   1151c:	movlt	r0, #1
   11520:	str	r0, [sp]
   11524:	ldr	r0, [sp]
   11528:	tst	r0, #1
   1152c:	beq	11564 <vetor_ordena@@Base+0xec>
   11530:	ldr	r0, [fp, #-8]
   11534:	ldr	r0, [r0, #8]
   11538:	ldr	r1, [sp, #8]
   1153c:	add	r2, r0, r1, lsl #2
   11540:	sub	r1, r1, #1
   11544:	add	r0, r0, r1, lsl #2
   11548:	ldr	r0, [r0]
   1154c:	str	r0, [r2]
   11550:	ldr	r0, [sp, #8]
   11554:	mvn	r1, #0
   11558:	add	r0, r0, r1
   1155c:	str	r0, [sp, #8]
   11560:	b	114e0 <vetor_ordena@@Base+0x68>
   11564:	ldr	r0, [sp, #4]
   11568:	ldr	r1, [fp, #-8]
   1156c:	ldr	r1, [r1, #8]
   11570:	ldr	r2, [sp, #8]
   11574:	add	r1, r1, r2, lsl #2
   11578:	str	r0, [r1]
   1157c:	ldr	r0, [sp, #12]
   11580:	add	r0, r0, #1
   11584:	str	r0, [sp, #12]
   11588:	b	114ac <vetor_ordena@@Base+0x34>
   1158c:	movw	r0, #0
   11590:	str	r0, [fp, #-4]
   11594:	ldr	r0, [fp, #-4]
   11598:	mov	sp, fp
   1159c:	pop	{fp, pc}

000115a0 <vetor_concatena@@Base>:
   115a0:	push	{fp, lr}
   115a4:	mov	fp, sp
   115a8:	sub	sp, sp, #24
   115ac:	str	r0, [fp, #-8]
   115b0:	str	r1, [sp, #12]
   115b4:	ldr	r0, [fp, #-8]
   115b8:	movw	r1, #0
   115bc:	cmp	r0, r1
   115c0:	beq	115d4 <vetor_concatena@@Base+0x34>
   115c4:	ldr	r0, [sp, #12]
   115c8:	movw	r1, #0
   115cc:	cmp	r0, r1
   115d0:	bne	115e0 <vetor_concatena@@Base+0x40>
   115d4:	movw	r0, #0
   115d8:	str	r0, [fp, #-4]
   115dc:	b	11670 <vetor_concatena@@Base+0xd0>
   115e0:	bl	10e88 <vetor_novo@@Base>
   115e4:	str	r0, [sp, #8]
   115e8:	ldr	r0, [fp, #-8]
   115ec:	ldr	r0, [r0]
   115f0:	ldr	lr, [sp, #12]
   115f4:	ldr	lr, [lr]
   115f8:	add	r0, r0, lr, lsl #2
   115fc:	ldr	lr, [sp, #8]
   11600:	str	r0, [lr, #8]
   11604:	ldr	r0, [fp, #-8]
   11608:	ldr	r0, [r0, #4]
   1160c:	ldr	lr, [sp, #12]
   11610:	ldr	lr, [lr, #4]
   11614:	add	r0, r0, lr
   11618:	ldr	lr, [sp, #8]
   1161c:	str	r0, [lr, #4]
   11620:	ldr	r0, [sp, #8]
   11624:	ldr	r0, [r0, #8]
   11628:	ldr	r0, [r0]
   1162c:	ldr	lr, [fp, #-8]
   11630:	ldr	lr, [lr, #8]
   11634:	ldr	r1, [lr]
   11638:	bl	10b30 <strcpy@plt>
   1163c:	ldr	r1, [sp, #8]
   11640:	ldr	r1, [r1, #8]
   11644:	ldr	r1, [r1]
   11648:	ldr	lr, [sp, #12]
   1164c:	ldr	lr, [lr, #8]
   11650:	ldr	lr, [lr]
   11654:	str	r0, [sp, #4]
   11658:	mov	r0, r1
   1165c:	mov	r1, lr
   11660:	bl	10b24 <strcat@plt>
   11664:	ldr	r1, [sp, #8]
   11668:	str	r1, [fp, #-4]
   1166c:	str	r0, [sp]
   11670:	ldr	r0, [fp, #-4]
   11674:	mov	sp, fp
   11678:	pop	{fp, pc}

0001167c <vetor_inverte@@Base>:
   1167c:	push	{fp, lr}
   11680:	mov	fp, sp
   11684:	sub	sp, sp, #24
   11688:	str	r0, [fp, #-4]
   1168c:	ldr	r0, [fp, #-4]
   11690:	bl	11090 <vetor_tamanho@@Base>
   11694:	str	r0, [fp, #-8]
   11698:	ldr	r0, [fp, #-8]
   1169c:	str	r0, [sp, #8]
   116a0:	ldr	r0, [fp, #-8]
   116a4:	cmp	r0, #0
   116a8:	ble	11758 <vetor_inverte@@Base+0xdc>
   116ac:	movw	r0, #0
   116b0:	str	r0, [sp, #12]
   116b4:	ldr	r0, [sp, #12]
   116b8:	ldr	r1, [fp, #-8]
   116bc:	cmp	r0, r1
   116c0:	movw	r0, #0
   116c4:	str	r0, [sp]
   116c8:	bge	116e4 <vetor_inverte@@Base+0x68>
   116cc:	ldr	r0, [sp, #12]
   116d0:	ldr	r1, [sp, #8]
   116d4:	cmp	r0, r1
   116d8:	movw	r0, #0
   116dc:	movlt	r0, #1
   116e0:	str	r0, [sp]
   116e4:	ldr	r0, [sp]
   116e8:	tst	r0, #1
   116ec:	beq	11754 <vetor_inverte@@Base+0xd8>
   116f0:	ldr	r0, [fp, #-4]
   116f4:	ldr	r0, [r0, #8]
   116f8:	ldr	r1, [sp, #12]
   116fc:	ldr	r0, [r0, r1, lsl #2]
   11700:	str	r0, [sp, #4]
   11704:	ldr	r0, [fp, #-4]
   11708:	ldr	r0, [r0, #8]
   1170c:	ldr	r1, [sp, #12]
   11710:	ldr	r2, [sp, #8]
   11714:	ldr	r2, [r0, r2, lsl #2]
   11718:	str	r2, [r0, r1, lsl #2]
   1171c:	ldr	r0, [fp, #-4]
   11720:	ldr	r0, [r0, #8]
   11724:	ldr	r1, [sp, #8]
   11728:	add	r0, r0, r1, lsl #2
   1172c:	ldr	r1, [sp, #4]
   11730:	str	r1, [r0]
   11734:	ldr	r0, [sp, #8]
   11738:	mvn	r1, #0
   1173c:	add	r0, r0, r1
   11740:	str	r0, [sp, #8]
   11744:	ldr	r0, [sp, #12]
   11748:	add	r0, r0, #1
   1174c:	str	r0, [sp, #12]
   11750:	b	116b4 <vetor_inverte@@Base+0x38>
   11754:	b	11758 <vetor_inverte@@Base+0xdc>
   11758:	movw	r0, #0
   1175c:	mov	sp, fp
   11760:	pop	{fp, pc}

00011764 <vetor_baralha@@Base>:
   11764:	push	{fp, lr}
   11768:	mov	fp, sp
   1176c:	sub	sp, sp, #32
   11770:	str	r0, [fp, #-4]
   11774:	ldr	r0, [fp, #-4]
   11778:	ldr	r0, [r0]
   1177c:	str	r0, [fp, #-12]
   11780:	bl	10e88 <vetor_novo@@Base>
   11784:	str	r0, [sp, #8]
   11788:	add	r0, sp, #16
   1178c:	bl	10b0c <time@plt>
   11790:	bl	10b6c <srand@plt>
   11794:	movw	r0, #0
   11798:	str	r0, [fp, #-8]
   1179c:	ldr	r0, [fp, #-8]
   117a0:	ldr	r1, [fp, #-12]
   117a4:	cmp	r0, r1
   117a8:	bge	11818 <vetor_baralha@@Base+0xb4>
   117ac:	bl	10b78 <rand@plt>
   117b0:	ldr	lr, [fp, #-12]
   117b4:	add	lr, lr, #1
   117b8:	sdiv	r1, r0, lr
   117bc:	mls	r0, r1, lr, r0
   117c0:	str	r0, [sp, #4]
   117c4:	ldr	r0, [sp, #8]
   117c8:	ldr	r0, [r0, #8]
   117cc:	ldr	r1, [fp, #-8]
   117d0:	ldr	r0, [r0, r1, lsl #2]
   117d4:	str	r0, [sp, #12]
   117d8:	ldr	r0, [sp, #8]
   117dc:	ldr	r0, [r0, #8]
   117e0:	ldr	r1, [fp, #-8]
   117e4:	ldr	lr, [sp, #4]
   117e8:	ldr	lr, [r0, lr, lsl #2]
   117ec:	str	lr, [r0, r1, lsl #2]
   117f0:	ldr	r0, [sp, #8]
   117f4:	ldr	r0, [r0, #8]
   117f8:	ldr	r1, [sp, #4]
   117fc:	add	r0, r0, r1, lsl #2
   11800:	ldr	r1, [sp, #12]
   11804:	str	r1, [r0]
   11808:	ldr	r0, [fp, #-8]
   1180c:	add	r0, r0, #1
   11810:	str	r0, [fp, #-8]
   11814:	b	1179c <vetor_baralha@@Base+0x38>
   11818:	ldr	r0, [sp, #8]
   1181c:	mov	sp, fp
   11820:	pop	{fp, pc}

00011824 <__libc_csu_init@@Base>:
   11824:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11828:	mov	r7, r0
   1182c:	ldr	r6, [pc, #72]	; 1187c <__libc_csu_init@@Base+0x58>
   11830:	ldr	r5, [pc, #72]	; 11880 <__libc_csu_init@@Base+0x5c>
   11834:	add	r6, pc, r6
   11838:	add	r5, pc, r5
   1183c:	sub	r6, r6, r5
   11840:	mov	r8, r1
   11844:	mov	r9, r2
   11848:	bl	10ab0 <calloc@plt-0x20>
   1184c:	asrs	r6, r6, #2
   11850:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11854:	mov	r4, #0
   11858:	add	r4, r4, #1
   1185c:	ldr	r3, [r5], #4
   11860:	mov	r2, r9
   11864:	mov	r1, r8
   11868:	mov	r0, r7
   1186c:	blx	r3
   11870:	cmp	r6, r4
   11874:	bne	11858 <__libc_csu_init@@Base+0x34>
   11878:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1187c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11880:	andeq	r0, r1, r8, asr #13

00011884 <__libc_csu_fini@@Base>:
   11884:	bx	lr

Disassembly of section .fini:

00011888 <.fini>:
   11888:	push	{r3, lr}
   1188c:	pop	{r3, pc}
