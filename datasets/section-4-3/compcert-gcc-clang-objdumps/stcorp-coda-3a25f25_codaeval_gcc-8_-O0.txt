
../compcert-repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010c84 <.init>:
   10c84:	push	{r3, lr}
   10c88:	bl	10ea8 <_start@@Base+0x3c>
   10c8c:	pop	{r3, pc}

Disassembly of section .plt:

00010c90 <coda_match_filefilter@plt-0x14>:
   10c90:	push	{lr}		; (str lr, [sp, #-4]!)
   10c94:	ldr	lr, [pc, #4]	; 10ca0 <coda_match_filefilter@plt-0x4>
   10c98:	add	lr, pc, lr
   10c9c:	ldr	pc, [lr, #8]!
   10ca0:	andeq	r2, r1, r0, ror #6

00010ca4 <coda_match_filefilter@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #864]!	; 0x360

00010cb0 <coda_expression_eval_integer@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #856]!	; 0x358

00010cbc <strcmp@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #848]!	; 0x350

00010cc8 <printf@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #840]!	; 0x348

00010cd4 <coda_set_error@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #832]!	; 0x340

00010ce0 <coda_open@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #824]!	; 0x338

00010cec <free@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #816]!	; 0x330

00010cf8 <coda_set_definition_path_conditional@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #808]!	; 0x328

00010d04 <coda_set_definition_path@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #800]!	; 0x320

00010d10 <fwrite@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #792]!	; 0x318

00010d1c <coda_expression_eval_bool@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #784]!	; 0x310

00010d28 <coda_cursor_set_product@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #776]!	; 0x308

00010d34 <coda_done@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #768]!	; 0x300

00010d40 <puts@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #760]!	; 0x2f8

00010d4c <__libc_start_main@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #752]!	; 0x2f0

00010d58 <coda_expression_delete@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #744]!	; 0x2e8

00010d64 <__gmon_start__@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d70 <__ctype_b_loc@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #728]!	; 0x2d8

00010d7c <exit@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #720]!	; 0x2d0

00010d88 <strlen@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #712]!	; 0x2c8

00010d94 <fprintf@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #704]!	; 0x2c0

00010da0 <coda_init@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #73728	; 0x12000
   10da8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dac <coda_set_option_perform_conversions@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #73728	; 0x12000
   10db4:	ldr	pc, [ip, #688]!	; 0x2b0

00010db8 <coda_expression_eval_string@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #680]!	; 0x2a8

00010dc4 <putchar@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #672]!	; 0x2a0

00010dd0 <coda_expression_get_type@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #664]!	; 0x298

00010ddc <coda_close@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #656]!	; 0x290

00010de8 <coda_expression_is_constant@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #648]!	; 0x288

00010df4 <coda_expression_eval_float@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #640]!	; 0x280

00010e00 <coda_expression_eval_node@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #632]!	; 0x278

00010e0c <coda_errno_to_string@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #624]!	; 0x270

00010e18 <coda_expression_get_type_name@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #616]!	; 0x268

00010e24 <coda_expression_from_string@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #608]!	; 0x260

00010e30 <coda_get_libcoda_version@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #600]!	; 0x258

00010e3c <coda_get_errno@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #592]!	; 0x250

00010e48 <abort@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #584]!	; 0x248

00010e54 <coda_str64@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #576]!	; 0x240

00010e60 <__assert_fail@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #568]!	; 0x238

Disassembly of section .text:

00010e6c <_start@@Base>:
   10e6c:	mov	fp, #0
   10e70:	mov	lr, #0
   10e74:	pop	{r1}		; (ldr r1, [sp], #4)
   10e78:	mov	r2, sp
   10e7c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e80:	push	{r0}		; (str r0, [sp, #-4]!)
   10e84:	ldr	ip, [pc, #16]	; 10e9c <_start@@Base+0x30>
   10e88:	push	{ip}		; (str ip, [sp, #-4]!)
   10e8c:	ldr	r0, [pc, #12]	; 10ea0 <_start@@Base+0x34>
   10e90:	ldr	r3, [pc, #12]	; 10ea4 <_start@@Base+0x38>
   10e94:	bl	10d4c <__libc_start_main@plt>
   10e98:	bl	10e48 <abort@plt>
   10e9c:	strdeq	r2, [r1], -r8
   10ea0:	andeq	r1, r1, ip, lsl #19
   10ea4:	muleq	r1, r8, r1
   10ea8:	ldr	r3, [pc, #20]	; 10ec4 <_start@@Base+0x58>
   10eac:	ldr	r2, [pc, #20]	; 10ec8 <_start@@Base+0x5c>
   10eb0:	add	r3, pc, r3
   10eb4:	ldr	r2, [r3, r2]
   10eb8:	cmp	r2, #0
   10ebc:	bxeq	lr
   10ec0:	b	10d64 <__gmon_start__@plt>
   10ec4:	andeq	r2, r1, r8, asr #2
   10ec8:	andeq	r0, r0, r4, lsr #1
   10ecc:	ldr	r0, [pc, #24]	; 10eec <_start@@Base+0x80>
   10ed0:	ldr	r3, [pc, #24]	; 10ef0 <_start@@Base+0x84>
   10ed4:	cmp	r3, r0
   10ed8:	bxeq	lr
   10edc:	ldr	r3, [pc, #16]	; 10ef4 <_start@@Base+0x88>
   10ee0:	cmp	r3, #0
   10ee4:	bxeq	lr
   10ee8:	bx	r3
   10eec:	strheq	r3, [r2], -r0
   10ef0:	strheq	r3, [r2], -r0
   10ef4:	andeq	r0, r0, r0
   10ef8:	ldr	r0, [pc, #36]	; 10f24 <_start@@Base+0xb8>
   10efc:	ldr	r1, [pc, #36]	; 10f28 <_start@@Base+0xbc>
   10f00:	sub	r1, r1, r0
   10f04:	asr	r1, r1, #2
   10f08:	add	r1, r1, r1, lsr #31
   10f0c:	asrs	r1, r1, #1
   10f10:	bxeq	lr
   10f14:	ldr	r3, [pc, #16]	; 10f2c <_start@@Base+0xc0>
   10f18:	cmp	r3, #0
   10f1c:	bxeq	lr
   10f20:	bx	r3
   10f24:	strheq	r3, [r2], -r0
   10f28:	strheq	r3, [r2], -r0
   10f2c:	andeq	r0, r0, r0
   10f30:	push	{r4, lr}
   10f34:	ldr	r4, [pc, #24]	; 10f54 <_start@@Base+0xe8>
   10f38:	ldrb	r3, [r4]
   10f3c:	cmp	r3, #0
   10f40:	popne	{r4, pc}
   10f44:	bl	10ecc <_start@@Base+0x60>
   10f48:	mov	r3, #1
   10f4c:	strb	r3, [r4]
   10f50:	pop	{r4, pc}
   10f54:	strheq	r3, [r2], -r4
   10f58:	b	10ef8 <_start@@Base+0x8c>
   10f5c:	str	fp, [sp, #-8]!
   10f60:	str	lr, [sp, #4]
   10f64:	add	fp, sp, #4
   10f68:	sub	sp, sp, #16
   10f6c:	str	r0, [fp, #-16]
   10f70:	str	r1, [fp, #-20]	; 0xffffffec
   10f74:	mov	r3, #0
   10f78:	str	r3, [fp, #-8]
   10f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f80:	cmp	r3, #0
   10f84:	beq	11260 <_start@@Base+0x3f4>
   10f88:	ldr	r3, [fp, #-16]
   10f8c:	cmp	r3, #0
   10f90:	beq	11260 <_start@@Base+0x3f4>
   10f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f98:	cmp	r3, #0
   10f9c:	bge	1124c <_start@@Base+0x3e0>
   10fa0:	ldr	r0, [fp, #-16]
   10fa4:	bl	10d88 <strlen@plt>
   10fa8:	mov	r3, r0
   10fac:	str	r3, [fp, #-20]	; 0xffffffec
   10fb0:	b	1124c <_start@@Base+0x3e0>
   10fb4:	ldr	r3, [fp, #-8]
   10fb8:	ldr	r2, [fp, #-16]
   10fbc:	add	r3, r2, r3
   10fc0:	ldrb	r3, [r3]
   10fc4:	sub	r3, r3, #7
   10fc8:	cmp	r3, #85	; 0x55
   10fcc:	ldrls	pc, [pc, r3, lsl #2]
   10fd0:	b	111cc <_start@@Base+0x360>
   10fd4:	andeq	r1, r1, ip, lsr r1
   10fd8:	andeq	r1, r1, ip, asr #2
   10fdc:	andeq	r1, r1, ip, lsl #3
   10fe0:	andeq	r1, r1, ip, ror #2
   10fe4:	muleq	r1, ip, r1
   10fe8:	andeq	r1, r1, ip, asr r1
   10fec:	andeq	r1, r1, ip, ror r1
   10ff0:	andeq	r1, r1, ip, asr #3
   10ff4:	andeq	r1, r1, ip, asr #3
   10ff8:	andeq	r1, r1, ip, asr #3
   10ffc:	andeq	r1, r1, ip, asr #3
   11000:	andeq	r1, r1, ip, asr #3
   11004:	andeq	r1, r1, ip, asr #3
   11008:	andeq	r1, r1, ip, asr #3
   1100c:	andeq	r1, r1, ip, asr #3
   11010:	andeq	r1, r1, ip, asr #3
   11014:	andeq	r1, r1, ip, asr #3
   11018:	andeq	r1, r1, ip, asr #3
   1101c:	andeq	r1, r1, ip, asr #3
   11020:	andeq	r1, r1, ip, asr #3
   11024:	andeq	r1, r1, ip, lsr #2
   11028:	andeq	r1, r1, ip, asr #3
   1102c:	andeq	r1, r1, ip, asr #3
   11030:	andeq	r1, r1, ip, asr #3
   11034:	andeq	r1, r1, ip, asr #3
   11038:	andeq	r1, r1, ip, asr #3
   1103c:	andeq	r1, r1, ip, asr #3
   11040:			; <UNDEFINED> instruction: 0x000111bc
   11044:	andeq	r1, r1, ip, asr #3
   11048:	andeq	r1, r1, ip, asr #3
   1104c:	andeq	r1, r1, ip, asr #3
   11050:	andeq	r1, r1, ip, asr #3
   11054:	andeq	r1, r1, ip, asr #3
   11058:	andeq	r1, r1, ip, asr #3
   1105c:	andeq	r1, r1, ip, asr #3
   11060:	andeq	r1, r1, ip, asr #3
   11064:	andeq	r1, r1, ip, asr #3
   11068:	andeq	r1, r1, ip, asr #3
   1106c:	andeq	r1, r1, ip, asr #3
   11070:	andeq	r1, r1, ip, asr #3
   11074:	andeq	r1, r1, ip, asr #3
   11078:	andeq	r1, r1, ip, asr #3
   1107c:	andeq	r1, r1, ip, asr #3
   11080:	andeq	r1, r1, ip, asr #3
   11084:	andeq	r1, r1, ip, asr #3
   11088:	andeq	r1, r1, ip, asr #3
   1108c:	andeq	r1, r1, ip, asr #3
   11090:	andeq	r1, r1, ip, asr #3
   11094:	andeq	r1, r1, ip, asr #3
   11098:	andeq	r1, r1, ip, asr #3
   1109c:	andeq	r1, r1, ip, asr #3
   110a0:	andeq	r1, r1, ip, asr #3
   110a4:	andeq	r1, r1, ip, asr #3
   110a8:	andeq	r1, r1, ip, asr #3
   110ac:	andeq	r1, r1, ip, asr #3
   110b0:	andeq	r1, r1, ip, asr #3
   110b4:	andeq	r1, r1, ip, asr #3
   110b8:	andeq	r1, r1, ip, asr #3
   110bc:	andeq	r1, r1, ip, asr #3
   110c0:	andeq	r1, r1, ip, asr #3
   110c4:	andeq	r1, r1, ip, asr #3
   110c8:	andeq	r1, r1, ip, asr #3
   110cc:	andeq	r1, r1, ip, asr #3
   110d0:	andeq	r1, r1, ip, asr #3
   110d4:	andeq	r1, r1, ip, asr #3
   110d8:	andeq	r1, r1, ip, asr #3
   110dc:	andeq	r1, r1, ip, asr #3
   110e0:	andeq	r1, r1, ip, asr #3
   110e4:	andeq	r1, r1, ip, asr #3
   110e8:	andeq	r1, r1, ip, asr #3
   110ec:	andeq	r1, r1, ip, asr #3
   110f0:	andeq	r1, r1, ip, asr #3
   110f4:	andeq	r1, r1, ip, asr #3
   110f8:	andeq	r1, r1, ip, asr #3
   110fc:	andeq	r1, r1, ip, asr #3
   11100:	andeq	r1, r1, ip, asr #3
   11104:	andeq	r1, r1, ip, asr #3
   11108:	andeq	r1, r1, ip, asr #3
   1110c:	andeq	r1, r1, ip, asr #3
   11110:	andeq	r1, r1, ip, asr #3
   11114:	andeq	r1, r1, ip, asr #3
   11118:	andeq	r1, r1, ip, asr #3
   1111c:	andeq	r1, r1, ip, asr #3
   11120:	andeq	r1, r1, ip, asr #3
   11124:	andeq	r1, r1, ip, asr #3
   11128:	andeq	r1, r1, ip, lsr #3
   1112c:	movw	r0, #8712	; 0x2208
   11130:	movt	r0, #1
   11134:	bl	10cc8 <printf@plt>
   11138:	b	11240 <_start@@Base+0x3d4>
   1113c:	movw	r0, #8716	; 0x220c
   11140:	movt	r0, #1
   11144:	bl	10cc8 <printf@plt>
   11148:	b	11240 <_start@@Base+0x3d4>
   1114c:	movw	r0, #8720	; 0x2210
   11150:	movt	r0, #1
   11154:	bl	10cc8 <printf@plt>
   11158:	b	11240 <_start@@Base+0x3d4>
   1115c:	movw	r0, #8724	; 0x2214
   11160:	movt	r0, #1
   11164:	bl	10cc8 <printf@plt>
   11168:	b	11240 <_start@@Base+0x3d4>
   1116c:	movw	r0, #8728	; 0x2218
   11170:	movt	r0, #1
   11174:	bl	10cc8 <printf@plt>
   11178:	b	11240 <_start@@Base+0x3d4>
   1117c:	movw	r0, #8732	; 0x221c
   11180:	movt	r0, #1
   11184:	bl	10cc8 <printf@plt>
   11188:	b	11240 <_start@@Base+0x3d4>
   1118c:	movw	r0, #8736	; 0x2220
   11190:	movt	r0, #1
   11194:	bl	10cc8 <printf@plt>
   11198:	b	11240 <_start@@Base+0x3d4>
   1119c:	movw	r0, #8740	; 0x2224
   111a0:	movt	r0, #1
   111a4:	bl	10cc8 <printf@plt>
   111a8:	b	11240 <_start@@Base+0x3d4>
   111ac:	movw	r0, #8744	; 0x2228
   111b0:	movt	r0, #1
   111b4:	bl	10cc8 <printf@plt>
   111b8:	b	11240 <_start@@Base+0x3d4>
   111bc:	movw	r0, #8748	; 0x222c
   111c0:	movt	r0, #1
   111c4:	bl	10cc8 <printf@plt>
   111c8:	b	11240 <_start@@Base+0x3d4>
   111cc:	bl	10d70 <__ctype_b_loc@plt>
   111d0:	mov	r3, r0
   111d4:	ldr	r2, [r3]
   111d8:	ldr	r3, [fp, #-8]
   111dc:	ldr	r1, [fp, #-16]
   111e0:	add	r3, r1, r3
   111e4:	ldrb	r3, [r3]
   111e8:	lsl	r3, r3, #1
   111ec:	add	r3, r2, r3
   111f0:	ldrh	r3, [r3]
   111f4:	and	r3, r3, #16384	; 0x4000
   111f8:	cmp	r3, #0
   111fc:	bne	11224 <_start@@Base+0x3b8>
   11200:	ldr	r3, [fp, #-8]
   11204:	ldr	r2, [fp, #-16]
   11208:	add	r3, r2, r3
   1120c:	ldrb	r3, [r3]
   11210:	mov	r1, r3
   11214:	movw	r0, #8752	; 0x2230
   11218:	movt	r0, #1
   1121c:	bl	10cc8 <printf@plt>
   11220:	b	1123c <_start@@Base+0x3d0>
   11224:	ldr	r3, [fp, #-8]
   11228:	ldr	r2, [fp, #-16]
   1122c:	add	r3, r2, r3
   11230:	ldrb	r3, [r3]
   11234:	mov	r0, r3
   11238:	bl	10dc4 <putchar@plt>
   1123c:	nop	{0}
   11240:	ldr	r3, [fp, #-8]
   11244:	add	r3, r3, #1
   11248:	str	r3, [fp, #-8]
   1124c:	ldr	r2, [fp, #-8]
   11250:	ldr	r3, [fp, #-20]	; 0xffffffec
   11254:	cmp	r2, r3
   11258:	blt	10fb4 <_start@@Base+0x148>
   1125c:	b	11264 <_start@@Base+0x3f8>
   11260:	nop	{0}
   11264:	sub	sp, fp, #4
   11268:	ldr	fp, [sp]
   1126c:	add	sp, sp, #4
   11270:	pop	{pc}		; (ldr pc, [sp], #4)
   11274:	str	fp, [sp, #-8]!
   11278:	str	lr, [sp, #4]
   1127c:	add	fp, sp, #4
   11280:	bl	10e30 <coda_get_libcoda_version@plt>
   11284:	mov	r3, r0
   11288:	mov	r1, r3
   1128c:	movw	r0, #8760	; 0x2238
   11290:	movt	r0, #1
   11294:	bl	10cc8 <printf@plt>
   11298:	movw	r0, #8776	; 0x2248
   1129c:	movt	r0, #1
   112a0:	bl	10d40 <puts@plt>
   112a4:	mov	r0, #10
   112a8:	bl	10dc4 <putchar@plt>
   112ac:	nop	{0}
   112b0:	sub	sp, fp, #4
   112b4:	ldr	fp, [sp]
   112b8:	add	sp, sp, #4
   112bc:	pop	{pc}		; (ldr pc, [sp], #4)
   112c0:	str	fp, [sp, #-8]!
   112c4:	str	lr, [sp, #4]
   112c8:	add	fp, sp, #4
   112cc:	movw	r0, #8824	; 0x2278
   112d0:	movt	r0, #1
   112d4:	bl	10d40 <puts@plt>
   112d8:	movw	r0, #8832	; 0x2280
   112dc:	movt	r0, #1
   112e0:	bl	10d40 <puts@plt>
   112e4:	movw	r0, #8912	; 0x22d0
   112e8:	movt	r0, #1
   112ec:	bl	10d40 <puts@plt>
   112f0:	movw	r0, #8992	; 0x2320
   112f4:	movt	r0, #1
   112f8:	bl	10d40 <puts@plt>
   112fc:	movw	r0, #9028	; 0x2344
   11300:	movt	r0, #1
   11304:	bl	10d40 <puts@plt>
   11308:	movw	r0, #9104	; 0x2390
   1130c:	movt	r0, #1
   11310:	bl	10d40 <puts@plt>
   11314:	movw	r0, #9180	; 0x23dc
   11318:	movt	r0, #1
   1131c:	bl	10d40 <puts@plt>
   11320:	mov	r0, #10
   11324:	bl	10dc4 <putchar@plt>
   11328:	movw	r0, #9228	; 0x240c
   1132c:	movt	r0, #1
   11330:	bl	10d40 <puts@plt>
   11334:	movw	r0, #9248	; 0x2420
   11338:	movt	r0, #1
   1133c:	bl	10d40 <puts@plt>
   11340:	movw	r0, #9272	; 0x2438
   11344:	movt	r0, #1
   11348:	bl	10d40 <puts@plt>
   1134c:	movw	r0, #9352	; 0x2488
   11350:	movt	r0, #1
   11354:	bl	10d40 <puts@plt>
   11358:	movw	r0, #9432	; 0x24d8
   1135c:	movt	r0, #1
   11360:	bl	10d40 <puts@plt>
   11364:	movw	r0, #9472	; 0x2500
   11368:	movt	r0, #1
   1136c:	bl	10d40 <puts@plt>
   11370:	movw	r0, #9532	; 0x253c
   11374:	movt	r0, #1
   11378:	bl	10d40 <puts@plt>
   1137c:	movw	r0, #9556	; 0x2554
   11380:	movt	r0, #1
   11384:	bl	10d40 <puts@plt>
   11388:	movw	r0, #9632	; 0x25a0
   1138c:	movt	r0, #1
   11390:	bl	10d40 <puts@plt>
   11394:	movw	r0, #9708	; 0x25ec
   11398:	movt	r0, #1
   1139c:	bl	10d40 <puts@plt>
   113a0:	movw	r0, #9740	; 0x260c
   113a4:	movt	r0, #1
   113a8:	bl	10d40 <puts@plt>
   113ac:	movw	r0, #9816	; 0x2658
   113b0:	movt	r0, #1
   113b4:	bl	10d40 <puts@plt>
   113b8:	mov	r0, #10
   113bc:	bl	10dc4 <putchar@plt>
   113c0:	movw	r0, #9864	; 0x2688
   113c4:	movt	r0, #1
   113c8:	bl	10d40 <puts@plt>
   113cc:	movw	r0, #9944	; 0x26d8
   113d0:	movt	r0, #1
   113d4:	bl	10d40 <puts@plt>
   113d8:	mov	r0, #10
   113dc:	bl	10dc4 <putchar@plt>
   113e0:	movw	r0, #9968	; 0x26f0
   113e4:	movt	r0, #1
   113e8:	bl	10d40 <puts@plt>
   113ec:	movw	r0, #9992	; 0x2708
   113f0:	movt	r0, #1
   113f4:	bl	10d40 <puts@plt>
   113f8:	mov	r0, #10
   113fc:	bl	10dc4 <putchar@plt>
   11400:	movw	r0, #10024	; 0x2728
   11404:	movt	r0, #1
   11408:	bl	10d40 <puts@plt>
   1140c:	movw	r0, #10052	; 0x2744
   11410:	movt	r0, #1
   11414:	bl	10d40 <puts@plt>
   11418:	mov	r0, #10
   1141c:	bl	10dc4 <putchar@plt>
   11420:	movw	r0, #10104	; 0x2778
   11424:	movt	r0, #1
   11428:	bl	10d40 <puts@plt>
   1142c:	movw	r0, #10180	; 0x27c4
   11430:	movt	r0, #1
   11434:	bl	10d40 <puts@plt>
   11438:	movw	r0, #10256	; 0x2810
   1143c:	movt	r0, #1
   11440:	bl	10d40 <puts@plt>
   11444:	movw	r0, #10304	; 0x2840
   11448:	movt	r0, #1
   1144c:	bl	10d40 <puts@plt>
   11450:	movw	r0, #10380	; 0x288c
   11454:	movt	r0, #1
   11458:	bl	10d40 <puts@plt>
   1145c:	movw	r0, #10456	; 0x28d8
   11460:	movt	r0, #1
   11464:	bl	10d40 <puts@plt>
   11468:	movw	r0, #10520	; 0x2918
   1146c:	movt	r0, #1
   11470:	bl	10d40 <puts@plt>
   11474:	mov	r0, #10
   11478:	bl	10dc4 <putchar@plt>
   1147c:	nop	{0}
   11480:	sub	sp, fp, #4
   11484:	ldr	fp, [sp]
   11488:	add	sp, sp, #4
   1148c:	pop	{pc}		; (ldr pc, [sp], #4)
   11490:	str	fp, [sp, #-8]!
   11494:	str	lr, [sp, #4]
   11498:	add	fp, sp, #4
   1149c:	sub	sp, sp, #64	; 0x40
   114a0:	str	r0, [fp, #-64]	; 0xffffffc0
   114a4:	movw	r3, #12476	; 0x30bc
   114a8:	movt	r3, #2
   114ac:	ldr	r3, [r3]
   114b0:	cmp	r3, #5
   114b4:	ldrls	pc, [pc, r3, lsl #2]
   114b8:	b	11708 <_start@@Base+0x89c>
   114bc:	ldrdeq	r1, [r1], -r4
   114c0:	andeq	r1, r1, ip, asr r5
   114c4:	ldrdeq	r1, [r1], -r8
   114c8:	andeq	r1, r1, r8, asr #12
   114cc:	andeq	r1, r1, r4, ror #13
   114d0:	andeq	r1, r1, r4, ror #13
   114d4:	movw	r3, #12472	; 0x30b8
   114d8:	movt	r3, #2
   114dc:	ldr	r3, [r3]
   114e0:	sub	r2, fp, #8
   114e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   114e8:	mov	r0, r3
   114ec:	bl	10d1c <coda_expression_eval_bool@plt>
   114f0:	mov	r3, r0
   114f4:	cmp	r3, #0
   114f8:	beq	11530 <_start@@Base+0x6c4>
   114fc:	bl	10e3c <coda_get_errno@plt>
   11500:	mov	r3, r0
   11504:	ldr	r3, [r3]
   11508:	mov	r0, r3
   1150c:	bl	10e0c <coda_errno_to_string@plt>
   11510:	mov	r3, r0
   11514:	mov	r2, r3
   11518:	movw	r1, #10584	; 0x2958
   1151c:	movt	r1, #1
   11520:	mvn	r0, #400	; 0x190
   11524:	bl	10cd4 <coda_set_error@plt>
   11528:	mvn	r3, #0
   1152c:	b	1170c <_start@@Base+0x8a0>
   11530:	ldr	r3, [fp, #-8]
   11534:	cmp	r3, #0
   11538:	beq	11548 <_start@@Base+0x6dc>
   1153c:	movw	r3, #10624	; 0x2980
   11540:	movt	r3, #1
   11544:	b	11550 <_start@@Base+0x6e4>
   11548:	movw	r3, #10632	; 0x2988
   1154c:	movt	r3, #1
   11550:	mov	r0, r3
   11554:	bl	10d40 <puts@plt>
   11558:	b	11708 <_start@@Base+0x89c>
   1155c:	movw	r3, #12472	; 0x30b8
   11560:	movt	r3, #2
   11564:	ldr	r3, [r3]
   11568:	sub	r2, fp, #20
   1156c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11570:	mov	r0, r3
   11574:	bl	10cb0 <coda_expression_eval_integer@plt>
   11578:	mov	r3, r0
   1157c:	cmp	r3, #0
   11580:	beq	115b8 <_start@@Base+0x74c>
   11584:	bl	10e3c <coda_get_errno@plt>
   11588:	mov	r3, r0
   1158c:	ldr	r3, [r3]
   11590:	mov	r0, r3
   11594:	bl	10e0c <coda_errno_to_string@plt>
   11598:	mov	r3, r0
   1159c:	mov	r2, r3
   115a0:	movw	r1, #10640	; 0x2990
   115a4:	movt	r1, #1
   115a8:	mvn	r0, #400	; 0x190
   115ac:	bl	10cd4 <coda_set_error@plt>
   115b0:	mvn	r3, #0
   115b4:	b	1170c <_start@@Base+0x8a0>
   115b8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   115bc:	sub	r3, fp, #44	; 0x2c
   115c0:	mov	r2, r3
   115c4:	bl	10e54 <coda_str64@plt>
   115c8:	sub	r3, fp, #44	; 0x2c
   115cc:	mov	r0, r3
   115d0:	bl	10d40 <puts@plt>
   115d4:	b	11708 <_start@@Base+0x89c>
   115d8:	movw	r3, #12472	; 0x30b8
   115dc:	movt	r3, #2
   115e0:	ldr	r3, [r3]
   115e4:	sub	r2, fp, #52	; 0x34
   115e8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   115ec:	mov	r0, r3
   115f0:	bl	10df4 <coda_expression_eval_float@plt>
   115f4:	mov	r3, r0
   115f8:	cmp	r3, #0
   115fc:	beq	11634 <_start@@Base+0x7c8>
   11600:	bl	10e3c <coda_get_errno@plt>
   11604:	mov	r3, r0
   11608:	ldr	r3, [r3]
   1160c:	mov	r0, r3
   11610:	bl	10e0c <coda_errno_to_string@plt>
   11614:	mov	r3, r0
   11618:	mov	r2, r3
   1161c:	movw	r1, #10680	; 0x29b8
   11620:	movt	r1, #1
   11624:	mvn	r0, #400	; 0x190
   11628:	bl	10cd4 <coda_set_error@plt>
   1162c:	mvn	r3, #0
   11630:	b	1170c <_start@@Base+0x8a0>
   11634:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11638:	movw	r0, #10728	; 0x29e8
   1163c:	movt	r0, #1
   11640:	bl	10cc8 <printf@plt>
   11644:	b	11708 <_start@@Base+0x89c>
   11648:	mov	r3, #0
   1164c:	str	r3, [fp, #-56]	; 0xffffffc8
   11650:	movw	r3, #12472	; 0x30b8
   11654:	movt	r3, #2
   11658:	ldr	r0, [r3]
   1165c:	sub	r3, fp, #60	; 0x3c
   11660:	sub	r2, fp, #56	; 0x38
   11664:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11668:	bl	10db8 <coda_expression_eval_string@plt>
   1166c:	mov	r3, r0
   11670:	cmp	r3, #0
   11674:	beq	116ac <_start@@Base+0x840>
   11678:	bl	10e3c <coda_get_errno@plt>
   1167c:	mov	r3, r0
   11680:	ldr	r3, [r3]
   11684:	mov	r0, r3
   11688:	bl	10e0c <coda_errno_to_string@plt>
   1168c:	mov	r3, r0
   11690:	mov	r2, r3
   11694:	movw	r1, #10736	; 0x29f0
   11698:	movt	r1, #1
   1169c:	mvn	r0, #400	; 0x190
   116a0:	bl	10cd4 <coda_set_error@plt>
   116a4:	mvn	r3, #0
   116a8:	b	1170c <_start@@Base+0x8a0>
   116ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   116b4:	mov	r1, r2
   116b8:	mov	r0, r3
   116bc:	bl	10f5c <_start@@Base+0xf0>
   116c0:	mov	r0, #10
   116c4:	bl	10dc4 <putchar@plt>
   116c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116cc:	cmp	r3, #0
   116d0:	beq	11704 <_start@@Base+0x898>
   116d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   116d8:	mov	r0, r3
   116dc:	bl	10cec <free@plt>
   116e0:	b	11704 <_start@@Base+0x898>
   116e4:	movw	r3, #11480	; 0x2cd8
   116e8:	movt	r3, #1
   116ec:	mov	r2, #230	; 0xe6
   116f0:	movw	r1, #10776	; 0x2a18
   116f4:	movt	r1, #1
   116f8:	movw	r0, #10856	; 0x2a68
   116fc:	movt	r0, #1
   11700:	bl	10e60 <__assert_fail@plt>
   11704:	nop	{0}
   11708:	mov	r3, #0
   1170c:	mov	r0, r3
   11710:	sub	sp, fp, #4
   11714:	ldr	fp, [sp]
   11718:	add	sp, sp, #4
   1171c:	pop	{pc}		; (ldr pc, [sp], #4)
   11720:	str	r4, [sp, #-12]!
   11724:	str	fp, [sp, #4]
   11728:	str	lr, [sp, #8]
   1172c:	add	fp, sp, #8
   11730:	sub	sp, sp, #540	; 0x21c
   11734:	str	r0, [fp, #-544]	; 0xfffffde0
   11738:	mov	r3, #0
   1173c:	str	r3, [fp, #-16]
   11740:	sub	r3, fp, #16
   11744:	mov	r1, r3
   11748:	ldr	r0, [fp, #-544]	; 0xfffffde0
   1174c:	bl	10ce0 <coda_open@plt>
   11750:	mov	r3, r0
   11754:	cmp	r3, #0
   11758:	beq	11764 <_start@@Base+0x8f8>
   1175c:	mov	r3, #1
   11760:	b	11894 <_start@@Base+0xa28>
   11764:	ldr	r2, [fp, #-16]
   11768:	sub	r3, fp, #540	; 0x21c
   1176c:	mov	r1, r2
   11770:	mov	r0, r3
   11774:	bl	10d28 <coda_cursor_set_product@plt>
   11778:	mov	r3, r0
   1177c:	cmp	r3, #0
   11780:	beq	11798 <_start@@Base+0x92c>
   11784:	ldr	r3, [fp, #-16]
   11788:	mov	r0, r3
   1178c:	bl	10ddc <coda_close@plt>
   11790:	mov	r3, #1
   11794:	b	11894 <_start@@Base+0xa28>
   11798:	movw	r3, #12480	; 0x30c0
   1179c:	movt	r3, #2
   117a0:	ldr	r3, [r3]
   117a4:	cmp	r3, #0
   117a8:	beq	11820 <_start@@Base+0x9b4>
   117ac:	movw	r3, #12480	; 0x30c0
   117b0:	movt	r3, #2
   117b4:	ldr	r3, [r3]
   117b8:	sub	r2, fp, #540	; 0x21c
   117bc:	mov	r1, r2
   117c0:	mov	r0, r3
   117c4:	bl	10e00 <coda_expression_eval_node@plt>
   117c8:	mov	r3, r0
   117cc:	cmp	r3, #0
   117d0:	beq	11820 <_start@@Base+0x9b4>
   117d4:	movw	r3, #12464	; 0x30b0
   117d8:	movt	r3, #2
   117dc:	ldr	r4, [r3]
   117e0:	bl	10e3c <coda_get_errno@plt>
   117e4:	mov	r3, r0
   117e8:	ldr	r3, [r3]
   117ec:	mov	r0, r3
   117f0:	bl	10e0c <coda_errno_to_string@plt>
   117f4:	mov	r3, r0
   117f8:	mov	r2, r3
   117fc:	movw	r1, #10860	; 0x2a6c
   11800:	movt	r1, #1
   11804:	mov	r0, r4
   11808:	bl	10d94 <fprintf@plt>
   1180c:	ldr	r3, [fp, #-16]
   11810:	mov	r0, r3
   11814:	bl	10ddc <coda_close@plt>
   11818:	mov	r3, #0
   1181c:	b	11894 <_start@@Base+0xa28>
   11820:	sub	r3, fp, #540	; 0x21c
   11824:	mov	r0, r3
   11828:	bl	11490 <_start@@Base+0x624>
   1182c:	mov	r3, r0
   11830:	cmp	r3, #0
   11834:	beq	11870 <_start@@Base+0xa04>
   11838:	movw	r3, #12464	; 0x30b0
   1183c:	movt	r3, #2
   11840:	ldr	r4, [r3]
   11844:	bl	10e3c <coda_get_errno@plt>
   11848:	mov	r3, r0
   1184c:	ldr	r3, [r3]
   11850:	mov	r0, r3
   11854:	bl	10e0c <coda_errno_to_string@plt>
   11858:	mov	r2, r0
   1185c:	ldr	r3, [fp, #-544]	; 0xfffffde0
   11860:	movw	r1, #10908	; 0x2a9c
   11864:	movt	r1, #1
   11868:	mov	r0, r4
   1186c:	bl	10d94 <fprintf@plt>
   11870:	ldr	r3, [fp, #-16]
   11874:	mov	r0, r3
   11878:	bl	10ddc <coda_close@plt>
   1187c:	mov	r3, r0
   11880:	cmp	r3, #0
   11884:	beq	11890 <_start@@Base+0xa24>
   11888:	mov	r3, #1
   1188c:	b	11894 <_start@@Base+0xa28>
   11890:	mov	r3, #0
   11894:	mov	r0, r3
   11898:	sub	sp, fp, #8
   1189c:	ldr	r4, [sp]
   118a0:	ldr	fp, [sp, #4]
   118a4:	add	sp, sp, #8
   118a8:	pop	{pc}		; (ldr pc, [sp], #4)

000118ac <callback@@Base>:
   118ac:	str	fp, [sp, #-8]!
   118b0:	str	lr, [sp, #4]
   118b4:	add	fp, sp, #4
   118b8:	sub	sp, sp, #16
   118bc:	str	r0, [fp, #-8]
   118c0:	str	r1, [fp, #-12]
   118c4:	str	r2, [fp, #-16]
   118c8:	str	r3, [fp, #-20]	; 0xffffffec
   118cc:	ldr	r3, [fp, #-12]
   118d0:	cmp	r3, #0
   118d4:	bne	118fc <callback@@Base+0x50>
   118d8:	movw	r3, #12464	; 0x30b0
   118dc:	movt	r3, #2
   118e0:	ldr	r0, [r3]
   118e4:	ldr	r3, [fp, #-8]
   118e8:	ldr	r2, [fp, #-16]
   118ec:	movw	r1, #10908	; 0x2a9c
   118f0:	movt	r1, #1
   118f4:	bl	10d94 <fprintf@plt>
   118f8:	b	11958 <callback@@Base+0xac>
   118fc:	ldr	r3, [fp, #-12]
   11900:	cmp	r3, #2
   11904:	bne	1192c <callback@@Base+0x80>
   11908:	movw	r3, #12464	; 0x30b0
   1190c:	movt	r3, #2
   11910:	ldr	r3, [r3]
   11914:	ldr	r2, [fp, #-8]
   11918:	movw	r1, #10928	; 0x2ab0
   1191c:	movt	r1, #1
   11920:	mov	r0, r3
   11924:	bl	10d94 <fprintf@plt>
   11928:	b	11958 <callback@@Base+0xac>
   1192c:	ldr	r3, [fp, #-12]
   11930:	cmp	r3, #1
   11934:	bne	11958 <callback@@Base+0xac>
   11938:	movw	r3, #12464	; 0x30b0
   1193c:	movt	r3, #2
   11940:	ldr	r0, [r3]
   11944:	ldr	r3, [fp, #-16]
   11948:	ldr	r2, [fp, #-8]
   1194c:	movw	r1, #10968	; 0x2ad8
   11950:	movt	r1, #1
   11954:	bl	10d94 <fprintf@plt>
   11958:	ldr	r3, [fp, #-12]
   1195c:	cmp	r3, #4
   11960:	bne	11974 <callback@@Base+0xc8>
   11964:	ldr	r0, [fp, #-8]
   11968:	bl	11720 <_start@@Base+0x8b4>
   1196c:	mov	r3, r0
   11970:	b	11978 <callback@@Base+0xcc>
   11974:	mov	r3, #0
   11978:	mov	r0, r3
   1197c:	sub	sp, fp, #4
   11980:	ldr	fp, [sp]
   11984:	add	sp, sp, #4
   11988:	pop	{pc}		; (ldr pc, [sp], #4)

0001198c <main@@Base>:
   1198c:	str	r4, [sp, #-12]!
   11990:	str	fp, [sp, #4]
   11994:	str	lr, [sp, #8]
   11998:	add	fp, sp, #8
   1199c:	sub	sp, sp, #36	; 0x24
   119a0:	str	r0, [fp, #-32]	; 0xffffffe0
   119a4:	str	r1, [fp, #-36]	; 0xffffffdc
   119a8:	mov	r3, #1
   119ac:	str	r3, [fp, #-16]
   119b0:	mov	r3, #0
   119b4:	str	r3, [fp, #-20]	; 0xffffffec
   119b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   119bc:	cmp	r3, #1
   119c0:	beq	11a14 <main@@Base+0x88>
   119c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119c8:	add	r3, r3, #4
   119cc:	ldr	r3, [r3]
   119d0:	movw	r1, #11004	; 0x2afc
   119d4:	movt	r1, #1
   119d8:	mov	r0, r3
   119dc:	bl	10cbc <strcmp@plt>
   119e0:	mov	r3, r0
   119e4:	cmp	r3, #0
   119e8:	beq	11a14 <main@@Base+0x88>
   119ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119f0:	add	r3, r3, #4
   119f4:	ldr	r3, [r3]
   119f8:	movw	r1, #11008	; 0x2b00
   119fc:	movt	r1, #1
   11a00:	mov	r0, r3
   11a04:	bl	10cbc <strcmp@plt>
   11a08:	mov	r3, r0
   11a0c:	cmp	r3, #0
   11a10:	bne	11a20 <main@@Base+0x94>
   11a14:	bl	112c0 <_start@@Base+0x454>
   11a18:	mov	r0, #0
   11a1c:	bl	10d7c <exit@plt>
   11a20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a24:	add	r3, r3, #4
   11a28:	ldr	r3, [r3]
   11a2c:	movw	r1, #11016	; 0x2b08
   11a30:	movt	r1, #1
   11a34:	mov	r0, r3
   11a38:	bl	10cbc <strcmp@plt>
   11a3c:	mov	r3, r0
   11a40:	cmp	r3, #0
   11a44:	beq	11a70 <main@@Base+0xe4>
   11a48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a4c:	add	r3, r3, #4
   11a50:	ldr	r3, [r3]
   11a54:	movw	r1, #11020	; 0x2b0c
   11a58:	movt	r1, #1
   11a5c:	mov	r0, r3
   11a60:	bl	10cbc <strcmp@plt>
   11a64:	mov	r3, r0
   11a68:	cmp	r3, #0
   11a6c:	bne	11a7c <main@@Base+0xf0>
   11a70:	bl	11274 <_start@@Base+0x408>
   11a74:	mov	r0, #0
   11a78:	bl	10d7c <exit@plt>
   11a7c:	mov	r3, #1
   11a80:	str	r3, [fp, #-24]	; 0xffffffe8
   11a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a88:	add	r3, r3, #1
   11a8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11a90:	cmp	r2, r3
   11a94:	ble	11af8 <main@@Base+0x16c>
   11a98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a9c:	lsl	r3, r3, #2
   11aa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11aa4:	add	r3, r2, r3
   11aa8:	ldr	r3, [r3]
   11aac:	movw	r1, #11032	; 0x2b18
   11ab0:	movt	r1, #1
   11ab4:	mov	r0, r3
   11ab8:	bl	10cbc <strcmp@plt>
   11abc:	mov	r3, r0
   11ac0:	cmp	r3, #0
   11ac4:	bne	11af8 <main@@Base+0x16c>
   11ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11acc:	add	r3, r3, #1
   11ad0:	lsl	r3, r3, #2
   11ad4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ad8:	add	r3, r2, r3
   11adc:	ldr	r3, [r3]
   11ae0:	mov	r0, r3
   11ae4:	bl	10d04 <coda_set_definition_path@plt>
   11ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11aec:	add	r3, r3, #2
   11af0:	str	r3, [fp, #-24]	; 0xffffffe8
   11af4:	b	11b68 <main@@Base+0x1dc>
   11af8:	movw	r3, #11036	; 0x2b1c
   11afc:	movt	r3, #1
   11b00:	str	r3, [fp, #-28]	; 0xffffffe4
   11b04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b08:	ldr	r3, [r3]
   11b0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b10:	mov	r1, #0
   11b14:	mov	r0, r3
   11b18:	bl	10cf8 <coda_set_definition_path_conditional@plt>
   11b1c:	mov	r3, r0
   11b20:	cmp	r3, #0
   11b24:	beq	11d88 <main@@Base+0x3fc>
   11b28:	movw	r3, #12464	; 0x30b0
   11b2c:	movt	r3, #2
   11b30:	ldr	r4, [r3]
   11b34:	bl	10e3c <coda_get_errno@plt>
   11b38:	mov	r3, r0
   11b3c:	ldr	r3, [r3]
   11b40:	mov	r0, r3
   11b44:	bl	10e0c <coda_errno_to_string@plt>
   11b48:	mov	r3, r0
   11b4c:	mov	r2, r3
   11b50:	movw	r1, #11064	; 0x2b38
   11b54:	movt	r1, #1
   11b58:	mov	r0, r4
   11b5c:	bl	10d94 <fprintf@plt>
   11b60:	mov	r0, #1
   11b64:	bl	10d7c <exit@plt>
   11b68:	b	11d88 <main@@Base+0x3fc>
   11b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b70:	lsl	r3, r3, #2
   11b74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b78:	add	r3, r2, r3
   11b7c:	ldr	r3, [r3]
   11b80:	movw	r1, #11076	; 0x2b44
   11b84:	movt	r1, #1
   11b88:	mov	r0, r3
   11b8c:	bl	10cbc <strcmp@plt>
   11b90:	mov	r3, r0
   11b94:	cmp	r3, #0
   11b98:	beq	11bcc <main@@Base+0x240>
   11b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ba0:	lsl	r3, r3, #2
   11ba4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ba8:	add	r3, r2, r3
   11bac:	ldr	r3, [r3]
   11bb0:	movw	r1, #11080	; 0x2b48
   11bb4:	movt	r1, #1
   11bb8:	mov	r0, r3
   11bbc:	bl	10cbc <strcmp@plt>
   11bc0:	mov	r3, r0
   11bc4:	cmp	r3, #0
   11bc8:	bne	11bd8 <main@@Base+0x24c>
   11bcc:	mov	r3, #1
   11bd0:	str	r3, [fp, #-20]	; 0xffffffec
   11bd4:	b	11d7c <main@@Base+0x3f0>
   11bd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bdc:	lsl	r3, r3, #2
   11be0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11be4:	add	r3, r2, r3
   11be8:	ldr	r3, [r3]
   11bec:	movw	r1, #11088	; 0x2b50
   11bf0:	movt	r1, #1
   11bf4:	mov	r0, r3
   11bf8:	bl	10cbc <strcmp@plt>
   11bfc:	mov	r3, r0
   11c00:	cmp	r3, #0
   11c04:	beq	11c38 <main@@Base+0x2ac>
   11c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c0c:	lsl	r3, r3, #2
   11c10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c14:	add	r3, r2, r3
   11c18:	ldr	r3, [r3]
   11c1c:	movw	r1, #11092	; 0x2b54
   11c20:	movt	r1, #1
   11c24:	mov	r0, r3
   11c28:	bl	10cbc <strcmp@plt>
   11c2c:	mov	r3, r0
   11c30:	cmp	r3, #0
   11c34:	bne	11c44 <main@@Base+0x2b8>
   11c38:	mov	r3, #0
   11c3c:	str	r3, [fp, #-16]
   11c40:	b	11d7c <main@@Base+0x3f0>
   11c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c48:	lsl	r3, r3, #2
   11c4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c50:	add	r3, r2, r3
   11c54:	ldr	r3, [r3]
   11c58:	movw	r1, #11116	; 0x2b6c
   11c5c:	movt	r1, #1
   11c60:	mov	r0, r3
   11c64:	bl	10cbc <strcmp@plt>
   11c68:	mov	r3, r0
   11c6c:	cmp	r3, #0
   11c70:	bne	11d30 <main@@Base+0x3a4>
   11c74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c78:	add	r3, r3, #1
   11c7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11c80:	cmp	r2, r3
   11c84:	ble	11d30 <main@@Base+0x3a4>
   11c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c8c:	add	r3, r3, #1
   11c90:	lsl	r3, r3, #2
   11c94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11c98:	add	r3, r2, r3
   11c9c:	ldr	r3, [r3]
   11ca0:	ldrb	r3, [r3]
   11ca4:	cmp	r3, #45	; 0x2d
   11ca8:	beq	11d30 <main@@Base+0x3a4>
   11cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cb0:	add	r3, r3, #1
   11cb4:	lsl	r3, r3, #2
   11cb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11cbc:	add	r3, r2, r3
   11cc0:	ldr	r3, [r3]
   11cc4:	movw	r1, #12480	; 0x30c0
   11cc8:	movt	r1, #2
   11ccc:	mov	r0, r3
   11cd0:	bl	10e24 <coda_expression_from_string@plt>
   11cd4:	mov	r3, r0
   11cd8:	cmp	r3, #0
   11cdc:	beq	11d20 <main@@Base+0x394>
   11ce0:	movw	r3, #12464	; 0x30b0
   11ce4:	movt	r3, #2
   11ce8:	ldr	r4, [r3]
   11cec:	bl	10e3c <coda_get_errno@plt>
   11cf0:	mov	r3, r0
   11cf4:	ldr	r3, [r3]
   11cf8:	mov	r0, r3
   11cfc:	bl	10e0c <coda_errno_to_string@plt>
   11d00:	mov	r3, r0
   11d04:	mov	r2, r3
   11d08:	movw	r1, #11120	; 0x2b70
   11d0c:	movt	r1, #1
   11d10:	mov	r0, r4
   11d14:	bl	10d94 <fprintf@plt>
   11d18:	mov	r0, #1
   11d1c:	bl	10d7c <exit@plt>
   11d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d24:	add	r3, r3, #1
   11d28:	str	r3, [fp, #-24]	; 0xffffffe8
   11d2c:	b	11d7c <main@@Base+0x3f0>
   11d30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d34:	lsl	r3, r3, #2
   11d38:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11d3c:	add	r3, r2, r3
   11d40:	ldr	r3, [r3]
   11d44:	ldrb	r3, [r3]
   11d48:	cmp	r3, #45	; 0x2d
   11d4c:	bne	11d9c <main@@Base+0x410>
   11d50:	movw	r3, #12464	; 0x30b0
   11d54:	movt	r3, #2
   11d58:	ldr	r3, [r3]
   11d5c:	mov	r2, #25
   11d60:	mov	r1, #1
   11d64:	movw	r0, #11160	; 0x2b98
   11d68:	movt	r0, #1
   11d6c:	bl	10d10 <fwrite@plt>
   11d70:	bl	112c0 <_start@@Base+0x454>
   11d74:	mov	r0, #1
   11d78:	bl	10d7c <exit@plt>
   11d7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d80:	add	r3, r3, #1
   11d84:	str	r3, [fp, #-24]	; 0xffffffe8
   11d88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d90:	cmp	r2, r3
   11d94:	blt	11b6c <main@@Base+0x1e0>
   11d98:	b	11da0 <main@@Base+0x414>
   11d9c:	nop	{0}
   11da0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11da4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11da8:	cmp	r2, r3
   11dac:	blt	11ddc <main@@Base+0x450>
   11db0:	movw	r3, #12464	; 0x30b0
   11db4:	movt	r3, #2
   11db8:	ldr	r3, [r3]
   11dbc:	mov	r2, #25
   11dc0:	mov	r1, #1
   11dc4:	movw	r0, #11160	; 0x2b98
   11dc8:	movt	r0, #1
   11dcc:	bl	10d10 <fwrite@plt>
   11dd0:	bl	112c0 <_start@@Base+0x454>
   11dd4:	mov	r0, #1
   11dd8:	bl	10d7c <exit@plt>
   11ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11de0:	lsl	r3, r3, #2
   11de4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11de8:	add	r3, r2, r3
   11dec:	ldr	r3, [r3]
   11df0:	movw	r1, #12472	; 0x30b8
   11df4:	movt	r1, #2
   11df8:	mov	r0, r3
   11dfc:	bl	10e24 <coda_expression_from_string@plt>
   11e00:	mov	r3, r0
   11e04:	cmp	r3, #0
   11e08:	beq	11e4c <main@@Base+0x4c0>
   11e0c:	movw	r3, #12464	; 0x30b0
   11e10:	movt	r3, #2
   11e14:	ldr	r4, [r3]
   11e18:	bl	10e3c <coda_get_errno@plt>
   11e1c:	mov	r3, r0
   11e20:	ldr	r3, [r3]
   11e24:	mov	r0, r3
   11e28:	bl	10e0c <coda_errno_to_string@plt>
   11e2c:	mov	r3, r0
   11e30:	mov	r2, r3
   11e34:	movw	r1, #11188	; 0x2bb4
   11e38:	movt	r1, #1
   11e3c:	mov	r0, r4
   11e40:	bl	10d94 <fprintf@plt>
   11e44:	mov	r0, #1
   11e48:	bl	10d7c <exit@plt>
   11e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e50:	add	r3, r3, #1
   11e54:	str	r3, [fp, #-24]	; 0xffffffe8
   11e58:	movw	r3, #12472	; 0x30b8
   11e5c:	movt	r3, #2
   11e60:	ldr	r3, [r3]
   11e64:	movw	r1, #12476	; 0x30bc
   11e68:	movt	r1, #2
   11e6c:	mov	r0, r3
   11e70:	bl	10dd0 <coda_expression_get_type@plt>
   11e74:	mov	r3, r0
   11e78:	cmp	r3, #0
   11e7c:	beq	11ec0 <main@@Base+0x534>
   11e80:	movw	r3, #12464	; 0x30b0
   11e84:	movt	r3, #2
   11e88:	ldr	r4, [r3]
   11e8c:	bl	10e3c <coda_get_errno@plt>
   11e90:	mov	r3, r0
   11e94:	ldr	r3, [r3]
   11e98:	mov	r0, r3
   11e9c:	bl	10e0c <coda_errno_to_string@plt>
   11ea0:	mov	r3, r0
   11ea4:	mov	r2, r3
   11ea8:	movw	r1, #11064	; 0x2b38
   11eac:	movt	r1, #1
   11eb0:	mov	r0, r4
   11eb4:	bl	10d94 <fprintf@plt>
   11eb8:	mov	r0, #1
   11ebc:	bl	10d7c <exit@plt>
   11ec0:	movw	r3, #12476	; 0x30bc
   11ec4:	movt	r3, #2
   11ec8:	ldr	r3, [r3]
   11ecc:	cmp	r3, #4
   11ed0:	beq	11ee8 <main@@Base+0x55c>
   11ed4:	movw	r3, #12476	; 0x30bc
   11ed8:	movt	r3, #2
   11edc:	ldr	r3, [r3]
   11ee0:	cmp	r3, #5
   11ee4:	bne	11f28 <main@@Base+0x59c>
   11ee8:	movw	r3, #12464	; 0x30b0
   11eec:	movt	r3, #2
   11ef0:	ldr	r4, [r3]
   11ef4:	movw	r3, #12476	; 0x30bc
   11ef8:	movt	r3, #2
   11efc:	ldr	r3, [r3]
   11f00:	mov	r0, r3
   11f04:	bl	10e18 <coda_expression_get_type_name@plt>
   11f08:	mov	r3, r0
   11f0c:	mov	r2, r3
   11f10:	movw	r1, #11220	; 0x2bd4
   11f14:	movt	r1, #1
   11f18:	mov	r0, r4
   11f1c:	bl	10d94 <fprintf@plt>
   11f20:	mov	r0, #1
   11f24:	bl	10d7c <exit@plt>
   11f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f2c:	cmp	r3, #0
   11f30:	beq	11f78 <main@@Base+0x5ec>
   11f34:	movw	r3, #12472	; 0x30b8
   11f38:	movt	r3, #2
   11f3c:	ldr	r3, [r3]
   11f40:	mov	r0, r3
   11f44:	bl	10d58 <coda_expression_delete@plt>
   11f48:	movw	r3, #12480	; 0x30c0
   11f4c:	movt	r3, #2
   11f50:	ldr	r3, [r3]
   11f54:	cmp	r3, #0
   11f58:	beq	11f70 <main@@Base+0x5e4>
   11f5c:	movw	r3, #12480	; 0x30c0
   11f60:	movt	r3, #2
   11f64:	ldr	r3, [r3]
   11f68:	mov	r0, r3
   11f6c:	bl	10d58 <coda_expression_delete@plt>
   11f70:	mov	r3, #0
   11f74:	b	12180 <main@@Base+0x7f4>
   11f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11f80:	cmp	r2, r3
   11f84:	bge	12068 <main@@Base+0x6dc>
   11f88:	bl	10da0 <coda_init@plt>
   11f8c:	mov	r3, r0
   11f90:	cmp	r3, #0
   11f94:	beq	11fd8 <main@@Base+0x64c>
   11f98:	movw	r3, #12464	; 0x30b0
   11f9c:	movt	r3, #2
   11fa0:	ldr	r4, [r3]
   11fa4:	bl	10e3c <coda_get_errno@plt>
   11fa8:	mov	r3, r0
   11fac:	ldr	r3, [r3]
   11fb0:	mov	r0, r3
   11fb4:	bl	10e0c <coda_errno_to_string@plt>
   11fb8:	mov	r3, r0
   11fbc:	mov	r2, r3
   11fc0:	movw	r1, #11064	; 0x2b38
   11fc4:	movt	r1, #1
   11fc8:	mov	r0, r4
   11fcc:	bl	10d94 <fprintf@plt>
   11fd0:	mov	r0, #1
   11fd4:	bl	10d7c <exit@plt>
   11fd8:	ldr	r0, [fp, #-16]
   11fdc:	bl	10dac <coda_set_option_perform_conversions@plt>
   11fe0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fe8:	sub	r1, r2, r3
   11fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ff0:	lsl	r3, r3, #2
   11ff4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ff8:	add	r2, r2, r3
   11ffc:	mov	r3, #0
   12000:	str	r3, [sp]
   12004:	movw	r3, #6316	; 0x18ac
   12008:	movt	r3, #1
   1200c:	mov	r0, #0
   12010:	bl	10ca4 <coda_match_filefilter@plt>
   12014:	mov	r3, r0
   12018:	cmp	r3, #0
   1201c:	beq	12060 <main@@Base+0x6d4>
   12020:	movw	r3, #12464	; 0x30b0
   12024:	movt	r3, #2
   12028:	ldr	r4, [r3]
   1202c:	bl	10e3c <coda_get_errno@plt>
   12030:	mov	r3, r0
   12034:	ldr	r3, [r3]
   12038:	mov	r0, r3
   1203c:	bl	10e0c <coda_errno_to_string@plt>
   12040:	mov	r3, r0
   12044:	mov	r2, r3
   12048:	movw	r1, #11064	; 0x2b38
   1204c:	movt	r1, #1
   12050:	mov	r0, r4
   12054:	bl	10d94 <fprintf@plt>
   12058:	mov	r0, #1
   1205c:	bl	10d7c <exit@plt>
   12060:	bl	10d34 <coda_done@plt>
   12064:	b	12140 <main@@Base+0x7b4>
   12068:	movw	r3, #12480	; 0x30c0
   1206c:	movt	r3, #2
   12070:	ldr	r3, [r3]
   12074:	cmp	r3, #0
   12078:	beq	120a4 <main@@Base+0x718>
   1207c:	movw	r3, #12464	; 0x30b0
   12080:	movt	r3, #2
   12084:	ldr	r3, [r3]
   12088:	mov	r2, #96	; 0x60
   1208c:	mov	r1, #1
   12090:	movw	r0, #11268	; 0x2c04
   12094:	movt	r0, #1
   12098:	bl	10d10 <fwrite@plt>
   1209c:	mov	r0, #1
   120a0:	bl	10d7c <exit@plt>
   120a4:	movw	r3, #12472	; 0x30b8
   120a8:	movt	r3, #2
   120ac:	ldr	r3, [r3]
   120b0:	mov	r0, r3
   120b4:	bl	10de8 <coda_expression_is_constant@plt>
   120b8:	mov	r3, r0
   120bc:	cmp	r3, #0
   120c0:	bne	120ec <main@@Base+0x760>
   120c4:	movw	r3, #12464	; 0x30b0
   120c8:	movt	r3, #2
   120cc:	ldr	r3, [r3]
   120d0:	mov	r2, #111	; 0x6f
   120d4:	mov	r1, #1
   120d8:	movw	r0, #11368	; 0x2c68
   120dc:	movt	r0, #1
   120e0:	bl	10d10 <fwrite@plt>
   120e4:	mov	r0, #1
   120e8:	bl	10d7c <exit@plt>
   120ec:	mov	r0, #0
   120f0:	bl	11490 <_start@@Base+0x624>
   120f4:	mov	r3, r0
   120f8:	cmp	r3, #0
   120fc:	beq	12140 <main@@Base+0x7b4>
   12100:	movw	r3, #12464	; 0x30b0
   12104:	movt	r3, #2
   12108:	ldr	r4, [r3]
   1210c:	bl	10e3c <coda_get_errno@plt>
   12110:	mov	r3, r0
   12114:	ldr	r3, [r3]
   12118:	mov	r0, r3
   1211c:	bl	10e0c <coda_errno_to_string@plt>
   12120:	mov	r3, r0
   12124:	mov	r2, r3
   12128:	movw	r1, #11064	; 0x2b38
   1212c:	movt	r1, #1
   12130:	mov	r0, r4
   12134:	bl	10d94 <fprintf@plt>
   12138:	mov	r0, #1
   1213c:	bl	10d7c <exit@plt>
   12140:	movw	r3, #12472	; 0x30b8
   12144:	movt	r3, #2
   12148:	ldr	r3, [r3]
   1214c:	mov	r0, r3
   12150:	bl	10d58 <coda_expression_delete@plt>
   12154:	movw	r3, #12480	; 0x30c0
   12158:	movt	r3, #2
   1215c:	ldr	r3, [r3]
   12160:	cmp	r3, #0
   12164:	beq	1217c <main@@Base+0x7f0>
   12168:	movw	r3, #12480	; 0x30c0
   1216c:	movt	r3, #2
   12170:	ldr	r3, [r3]
   12174:	mov	r0, r3
   12178:	bl	10d58 <coda_expression_delete@plt>
   1217c:	mov	r3, #0
   12180:	mov	r0, r3
   12184:	sub	sp, fp, #8
   12188:	ldr	r4, [sp]
   1218c:	ldr	fp, [sp, #4]
   12190:	add	sp, sp, #8
   12194:	pop	{pc}		; (ldr pc, [sp], #4)

00012198 <__libc_csu_init@@Base>:
   12198:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1219c:	mov	r7, r0
   121a0:	ldr	r6, [pc, #72]	; 121f0 <__libc_csu_init@@Base+0x58>
   121a4:	ldr	r5, [pc, #72]	; 121f4 <__libc_csu_init@@Base+0x5c>
   121a8:	add	r6, pc, r6
   121ac:	add	r5, pc, r5
   121b0:	sub	r6, r6, r5
   121b4:	mov	r8, r1
   121b8:	mov	r9, r2
   121bc:	bl	10c84 <coda_match_filefilter@plt-0x20>
   121c0:	asrs	r6, r6, #2
   121c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121c8:	mov	r4, #0
   121cc:	add	r4, r4, #1
   121d0:	ldr	r3, [r5], #4
   121d4:	mov	r2, r9
   121d8:	mov	r1, r8
   121dc:	mov	r0, r7
   121e0:	blx	r3
   121e4:	cmp	r6, r4
   121e8:	bne	121cc <__libc_csu_init@@Base+0x34>
   121ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121f0:	andeq	r0, r1, ip, asr #26
   121f4:	andeq	r0, r1, r4, asr #26

000121f8 <__libc_csu_fini@@Base>:
   121f8:	bx	lr

Disassembly of section .fini:

000121fc <.fini>:
   121fc:	push	{r3, lr}
   12200:	pop	{r3, pc}
