
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_g>:
       0:	push	{r1, r2, r3}
       4:	str	fp, [sp, #-8]!
       8:	str	lr, [sp, #4]
       c:	add	fp, sp, #4
      10:	sub	sp, sp, #36	; 0x24
      14:	str	r0, [fp, #-36]	; 0xffffffdc
      18:	mov	r0, #8
      1c:	bl	0 <malloc>
      20:	mov	r3, r0
      24:	str	r3, [fp, #-16]
      28:	add	r3, fp, #8
      2c:	str	r3, [fp, #-32]	; 0xffffffe0
      30:	ldr	r3, [fp, #-36]	; 0xffffffdc
      34:	mov	r1, #8
      38:	mov	r0, r3
      3c:	bl	0 <calloc>
      40:	mov	r3, r0
      44:	mov	r2, r3
      48:	ldr	r3, [fp, #-16]
      4c:	str	r2, [r3, #4]
      50:	mov	r3, #0
      54:	str	r3, [fp, #-12]
      58:	b	10c <_g+0x10c>
      5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
      60:	add	r2, r3, #4
      64:	str	r2, [fp, #-32]	; 0xffffffe0
      68:	ldr	r3, [r3]
      6c:	str	r3, [fp, #-20]	; 0xffffffec
      70:	ldr	r3, [fp, #-32]	; 0xffffffe0
      74:	add	r2, r3, #4
      78:	str	r2, [fp, #-32]	; 0xffffffe0
      7c:	ldr	r3, [r3]
      80:	str	r3, [fp, #-24]	; 0xffffffe8
      84:	mov	r1, #8
      88:	mov	r0, #1
      8c:	bl	0 <calloc>
      90:	mov	r3, r0
      94:	str	r3, [fp, #-28]	; 0xffffffe4
      98:	ldr	r3, [fp, #-28]	; 0xffffffe4
      9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
      a0:	str	r2, [r3]
      a4:	ldr	r3, [fp, #-16]
      a8:	ldr	r2, [r3, #4]
      ac:	ldr	r3, [fp, #-20]	; 0xffffffec
      b0:	lsl	r3, r3, #3
      b4:	add	r3, r2, r3
      b8:	ldr	r2, [r3, #4]
      bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
      c0:	str	r2, [r3, #4]
      c4:	ldr	r3, [fp, #-16]
      c8:	ldr	r2, [r3, #4]
      cc:	ldr	r3, [fp, #-20]	; 0xffffffec
      d0:	lsl	r3, r3, #3
      d4:	add	r3, r2, r3
      d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
      dc:	str	r2, [r3, #4]
      e0:	ldr	r3, [fp, #-16]
      e4:	ldr	r2, [r3, #4]
      e8:	ldr	r3, [fp, #-20]	; 0xffffffec
      ec:	lsl	r3, r3, #3
      f0:	add	r3, r2, r3
      f4:	ldr	r2, [r3]
      f8:	add	r2, r2, #1
      fc:	str	r2, [r3]
     100:	ldr	r3, [fp, #-12]
     104:	add	r3, r3, #2
     108:	str	r3, [fp, #-12]
     10c:	ldr	r2, [fp, #-12]
     110:	ldr	r3, [fp, #4]
     114:	cmp	r2, r3
     118:	blt	5c <_g+0x5c>
     11c:	ldr	r3, [fp, #-16]
     120:	ldr	r2, [fp, #-36]	; 0xffffffdc
     124:	str	r2, [r3]
     128:	ldr	r3, [fp, #-16]
     12c:	mov	r0, r3
     130:	sub	sp, fp, #4
     134:	ldr	fp, [sp]
     138:	ldr	lr, [sp, #4]
     13c:	add	sp, sp, #8
     140:	add	sp, sp, #12
     144:	bx	lr

00000148 <_f>:
     148:	str	fp, [sp, #-8]!
     14c:	str	lr, [sp, #4]
     150:	add	fp, sp, #4
     154:	sub	sp, sp, #16
     158:	str	r0, [fp, #-16]
     15c:	str	r1, [fp, #-20]	; 0xffffffec
     160:	ldr	r3, [fp, #-16]
     164:	cmp	r3, #0
     168:	bne	174 <_f+0x2c>
     16c:	mov	r3, #0
     170:	b	1c8 <_f+0x80>
     174:	mov	r3, #0
     178:	str	r3, [fp, #-8]
     17c:	b	1b0 <_f+0x68>
     180:	ldr	r1, [fp, #-8]
     184:	ldr	r0, [fp, #-16]
     188:	bl	0 <vetor_elemento>
     18c:	mov	r2, r0
     190:	ldr	r3, [fp, #-20]	; 0xffffffec
     194:	cmp	r3, r2
     198:	bne	1a4 <_f+0x5c>
     19c:	mov	r3, #1
     1a0:	b	1c8 <_f+0x80>
     1a4:	ldr	r3, [fp, #-8]
     1a8:	add	r3, r3, #1
     1ac:	str	r3, [fp, #-8]
     1b0:	ldr	r3, [fp, #-16]
     1b4:	ldr	r3, [r3]
     1b8:	ldr	r2, [fp, #-8]
     1bc:	cmp	r2, r3
     1c0:	blt	180 <_f+0x38>
     1c4:	mov	r3, #0
     1c8:	mov	r0, r3
     1cc:	sub	sp, fp, #4
     1d0:	ldr	fp, [sp]
     1d4:	add	sp, sp, #4
     1d8:	pop	{pc}		; (ldr pc, [sp], #4)

000001dc <teste_grafo_novo>:
     1dc:	str	fp, [sp, #-8]!
     1e0:	str	lr, [sp, #4]
     1e4:	add	fp, sp, #4
     1e8:	sub	sp, sp, #8
     1ec:	mov	r3, #0
     1f0:	str	r3, [fp, #-8]
     1f4:	movw	r0, #0
     1f8:	movt	r0, #0
     1fc:	bl	0 <printf>
     200:	mov	r0, #10
     204:	bl	0 <grafo_novo>
     208:	str	r0, [fp, #-12]
     20c:	ldr	r3, [fp, #-12]
     210:	cmp	r3, #0
     214:	bne	25c <teste_grafo_novo+0x80>
     218:	movw	r0, #0
     21c:	movt	r0, #0
     220:	bl	0 <printf>
     224:	ldr	r3, [fp, #-8]
     228:	add	r3, r3, #1
     22c:	str	r3, [fp, #-8]
     230:	ldr	r3, [fp, #-8]
     234:	cmp	r3, #0
     238:	bne	24c <teste_grafo_novo+0x70>
     23c:	movw	r0, #0
     240:	movt	r0, #0
     244:	bl	0 <puts>
     248:	b	254 <teste_grafo_novo+0x78>
     24c:	mov	r0, #10
     250:	bl	0 <putchar>
     254:	ldr	r3, [fp, #-8]
     258:	b	340 <teste_grafo_novo+0x164>
     25c:	ldr	r3, [fp, #-12]
     260:	ldr	r3, [r3]
     264:	cmp	r3, #10
     268:	beq	284 <teste_grafo_novo+0xa8>
     26c:	movw	r0, #0
     270:	movt	r0, #0
     274:	bl	0 <printf>
     278:	ldr	r3, [fp, #-8]
     27c:	add	r3, r3, #1
     280:	str	r3, [fp, #-8]
     284:	ldr	r0, [fp, #-12]
     288:	bl	0 <grafo_apaga>
     28c:	mov	r0, #1
     290:	bl	0 <grafo_novo>
     294:	str	r0, [fp, #-12]
     298:	ldr	r3, [fp, #-12]
     29c:	cmp	r3, #0
     2a0:	bne	2e8 <teste_grafo_novo+0x10c>
     2a4:	movw	r0, #0
     2a8:	movt	r0, #0
     2ac:	bl	0 <printf>
     2b0:	ldr	r3, [fp, #-8]
     2b4:	add	r3, r3, #1
     2b8:	str	r3, [fp, #-8]
     2bc:	ldr	r3, [fp, #-8]
     2c0:	cmp	r3, #0
     2c4:	bne	2d8 <teste_grafo_novo+0xfc>
     2c8:	movw	r0, #0
     2cc:	movt	r0, #0
     2d0:	bl	0 <puts>
     2d4:	b	2e0 <teste_grafo_novo+0x104>
     2d8:	mov	r0, #10
     2dc:	bl	0 <putchar>
     2e0:	ldr	r3, [fp, #-8]
     2e4:	b	340 <teste_grafo_novo+0x164>
     2e8:	ldr	r3, [fp, #-12]
     2ec:	ldr	r3, [r3]
     2f0:	cmp	r3, #1
     2f4:	beq	310 <teste_grafo_novo+0x134>
     2f8:	movw	r0, #0
     2fc:	movt	r0, #0
     300:	bl	0 <printf>
     304:	ldr	r3, [fp, #-8]
     308:	add	r3, r3, #1
     30c:	str	r3, [fp, #-8]
     310:	ldr	r0, [fp, #-12]
     314:	bl	0 <grafo_apaga>
     318:	ldr	r3, [fp, #-8]
     31c:	cmp	r3, #0
     320:	bne	334 <teste_grafo_novo+0x158>
     324:	movw	r0, #0
     328:	movt	r0, #0
     32c:	bl	0 <puts>
     330:	b	33c <teste_grafo_novo+0x160>
     334:	mov	r0, #10
     338:	bl	0 <putchar>
     33c:	ldr	r3, [fp, #-8]
     340:	mov	r0, r3
     344:	sub	sp, fp, #4
     348:	ldr	fp, [sp]
     34c:	add	sp, sp, #4
     350:	pop	{pc}		; (ldr pc, [sp], #4)

00000354 <teste_grafo_aresta>:
     354:	str	fp, [sp, #-8]!
     358:	str	lr, [sp, #4]
     35c:	add	fp, sp, #4
     360:	sub	sp, sp, #88	; 0x58
     364:	mov	r3, #0
     368:	str	r3, [fp, #-8]
     36c:	mov	r3, #1
     370:	str	r3, [sp, #76]	; 0x4c
     374:	mov	r3, #0
     378:	str	r3, [sp, #72]	; 0x48
     37c:	mov	r3, #3
     380:	str	r3, [sp, #68]	; 0x44
     384:	mov	r3, #6
     388:	str	r3, [sp, #64]	; 0x40
     38c:	mov	r3, #6
     390:	str	r3, [sp, #60]	; 0x3c
     394:	mov	r3, #7
     398:	str	r3, [sp, #56]	; 0x38
     39c:	mov	r3, #1
     3a0:	str	r3, [sp, #52]	; 0x34
     3a4:	mov	r3, #1
     3a8:	str	r3, [sp, #48]	; 0x30
     3ac:	mov	r3, #6
     3b0:	str	r3, [sp, #44]	; 0x2c
     3b4:	mov	r3, #4
     3b8:	str	r3, [sp, #40]	; 0x28
     3bc:	mov	r3, #0
     3c0:	str	r3, [sp, #36]	; 0x24
     3c4:	mov	r3, #4
     3c8:	str	r3, [sp, #32]
     3cc:	mov	r3, #4
     3d0:	str	r3, [sp, #28]
     3d4:	mov	r3, #5
     3d8:	str	r3, [sp, #24]
     3dc:	mov	r3, #5
     3e0:	str	r3, [sp, #20]
     3e4:	mov	r3, #7
     3e8:	str	r3, [sp, #16]
     3ec:	mov	r3, #2
     3f0:	str	r3, [sp, #12]
     3f4:	mov	r3, #0
     3f8:	str	r3, [sp, #8]
     3fc:	mov	r3, #2
     400:	str	r3, [sp, #4]
     404:	mov	r3, #7
     408:	str	r3, [sp]
     40c:	mov	r3, #2
     410:	mov	r2, #3
     414:	mov	r1, #22
     418:	mov	r0, #8
     41c:	bl	0 <_g>
     420:	str	r0, [fp, #-12]
     424:	movw	r0, #0
     428:	movt	r0, #0
     42c:	bl	0 <printf>
     430:	mov	r2, #4
     434:	mov	r1, #5
     438:	ldr	r0, [fp, #-12]
     43c:	bl	0 <grafo_aresta>
     440:	mov	r3, r0
     444:	cmp	r3, #1
     448:	beq	464 <teste_grafo_aresta+0x110>
     44c:	movw	r0, #0
     450:	movt	r0, #0
     454:	bl	0 <printf>
     458:	ldr	r3, [fp, #-8]
     45c:	add	r3, r3, #1
     460:	str	r3, [fp, #-8]
     464:	mov	r2, #6
     468:	mov	r1, #7
     46c:	ldr	r0, [fp, #-12]
     470:	bl	0 <grafo_aresta>
     474:	mov	r3, r0
     478:	cmp	r3, #1
     47c:	beq	498 <teste_grafo_aresta+0x144>
     480:	movw	r0, #0
     484:	movt	r0, #0
     488:	bl	0 <printf>
     48c:	ldr	r3, [fp, #-8]
     490:	add	r3, r3, #1
     494:	str	r3, [fp, #-8]
     498:	mov	r2, #1
     49c:	mov	r1, #7
     4a0:	ldr	r0, [fp, #-12]
     4a4:	bl	0 <grafo_aresta>
     4a8:	mov	r3, r0
     4ac:	cmp	r3, #0
     4b0:	beq	4cc <teste_grafo_aresta+0x178>
     4b4:	movw	r0, #0
     4b8:	movt	r0, #0
     4bc:	bl	0 <printf>
     4c0:	ldr	r3, [fp, #-8]
     4c4:	add	r3, r3, #1
     4c8:	str	r3, [fp, #-8]
     4cc:	mov	r2, #7
     4d0:	mov	r1, #2
     4d4:	mov	r0, #0
     4d8:	bl	0 <grafo_aresta>
     4dc:	mov	r3, r0
     4e0:	cmn	r3, #1
     4e4:	beq	500 <teste_grafo_aresta+0x1ac>
     4e8:	movw	r0, #0
     4ec:	movt	r0, #0
     4f0:	bl	0 <printf>
     4f4:	ldr	r3, [fp, #-8]
     4f8:	add	r3, r3, #1
     4fc:	str	r3, [fp, #-8]
     500:	ldr	r0, [fp, #-12]
     504:	bl	0 <grafo_apaga>
     508:	ldr	r3, [fp, #-8]
     50c:	cmp	r3, #0
     510:	bne	524 <teste_grafo_aresta+0x1d0>
     514:	movw	r0, #0
     518:	movt	r0, #0
     51c:	bl	0 <puts>
     520:	b	52c <teste_grafo_aresta+0x1d8>
     524:	mov	r0, #10
     528:	bl	0 <putchar>
     52c:	ldr	r3, [fp, #-8]
     530:	mov	r0, r3
     534:	sub	sp, fp, #4
     538:	ldr	fp, [sp]
     53c:	add	sp, sp, #4
     540:	pop	{pc}		; (ldr pc, [sp], #4)

00000544 <teste_grafo_adiciona>:
     544:	str	fp, [sp, #-8]!
     548:	str	lr, [sp, #4]
     54c:	add	fp, sp, #4
     550:	sub	sp, sp, #16
     554:	mov	r3, #0
     558:	str	r3, [fp, #-8]
     55c:	mov	r3, #2
     560:	str	r3, [sp, #4]
     564:	mov	r3, #7
     568:	str	r3, [sp]
     56c:	mov	r3, #2
     570:	mov	r2, #3
     574:	mov	r1, #4
     578:	mov	r0, #9
     57c:	bl	0 <_g>
     580:	str	r0, [fp, #-12]
     584:	movw	r0, #0
     588:	movt	r0, #0
     58c:	bl	0 <printf>
     590:	mov	r2, #7
     594:	mov	r1, #2
     598:	ldr	r0, [fp, #-12]
     59c:	bl	0 <grafo_adiciona>
     5a0:	mov	r3, r0
     5a4:	cmp	r3, #1
     5a8:	beq	5c4 <teste_grafo_adiciona+0x80>
     5ac:	movw	r0, #0
     5b0:	movt	r0, #0
     5b4:	bl	0 <printf>
     5b8:	ldr	r3, [fp, #-8]
     5bc:	add	r3, r3, #1
     5c0:	str	r3, [fp, #-8]
     5c4:	ldr	r3, [fp, #-12]
     5c8:	ldr	r3, [r3, #4]
     5cc:	add	r3, r3, #16
     5d0:	ldr	r3, [r3, #4]
     5d4:	cmp	r3, #0
     5d8:	beq	5f8 <teste_grafo_adiciona+0xb4>
     5dc:	ldr	r3, [fp, #-12]
     5e0:	ldr	r3, [r3, #4]
     5e4:	add	r3, r3, #16
     5e8:	ldr	r3, [r3, #4]
     5ec:	ldr	r3, [r3]
     5f0:	cmp	r3, #7
     5f4:	beq	610 <teste_grafo_adiciona+0xcc>
     5f8:	movw	r0, #0
     5fc:	movt	r0, #0
     600:	bl	0 <printf>
     604:	ldr	r3, [fp, #-8]
     608:	add	r3, r3, #1
     60c:	str	r3, [fp, #-8]
     610:	mov	r2, #8
     614:	mov	r1, #3
     618:	ldr	r0, [fp, #-12]
     61c:	bl	0 <grafo_adiciona>
     620:	mov	r3, r0
     624:	cmp	r3, #1
     628:	beq	644 <teste_grafo_adiciona+0x100>
     62c:	movw	r0, #0
     630:	movt	r0, #0
     634:	bl	0 <printf>
     638:	ldr	r3, [fp, #-8]
     63c:	add	r3, r3, #1
     640:	str	r3, [fp, #-8]
     644:	ldr	r3, [fp, #-12]
     648:	ldr	r3, [r3, #4]
     64c:	add	r3, r3, #24
     650:	ldr	r3, [r3, #4]
     654:	cmp	r3, #0
     658:	beq	710 <teste_grafo_adiciona+0x1cc>
     65c:	ldr	r3, [fp, #-12]
     660:	ldr	r3, [r3, #4]
     664:	add	r3, r3, #24
     668:	ldr	r3, [r3, #4]
     66c:	ldr	r3, [r3, #4]
     670:	cmp	r3, #0
     674:	beq	710 <teste_grafo_adiciona+0x1cc>
     678:	ldr	r3, [fp, #-12]
     67c:	ldr	r3, [r3, #4]
     680:	add	r3, r3, #24
     684:	ldr	r3, [r3, #4]
     688:	ldr	r3, [r3, #4]
     68c:	ldr	r3, [r3, #4]
     690:	cmp	r3, #0
     694:	bne	710 <teste_grafo_adiciona+0x1cc>
     698:	ldr	r3, [fp, #-12]
     69c:	ldr	r3, [r3, #4]
     6a0:	add	r3, r3, #24
     6a4:	ldr	r3, [r3, #4]
     6a8:	ldr	r3, [r3]
     6ac:	cmp	r3, #2
     6b0:	bne	6d4 <teste_grafo_adiciona+0x190>
     6b4:	ldr	r3, [fp, #-12]
     6b8:	ldr	r3, [r3, #4]
     6bc:	add	r3, r3, #24
     6c0:	ldr	r3, [r3, #4]
     6c4:	ldr	r3, [r3, #4]
     6c8:	ldr	r3, [r3]
     6cc:	cmp	r3, #8
     6d0:	beq	728 <teste_grafo_adiciona+0x1e4>
     6d4:	ldr	r3, [fp, #-12]
     6d8:	ldr	r3, [r3, #4]
     6dc:	add	r3, r3, #24
     6e0:	ldr	r3, [r3, #4]
     6e4:	ldr	r3, [r3]
     6e8:	cmp	r3, #8
     6ec:	bne	710 <teste_grafo_adiciona+0x1cc>
     6f0:	ldr	r3, [fp, #-12]
     6f4:	ldr	r3, [r3, #4]
     6f8:	add	r3, r3, #24
     6fc:	ldr	r3, [r3, #4]
     700:	ldr	r3, [r3, #4]
     704:	ldr	r3, [r3]
     708:	cmp	r3, #2
     70c:	beq	728 <teste_grafo_adiciona+0x1e4>
     710:	movw	r0, #0
     714:	movt	r0, #0
     718:	bl	0 <printf>
     71c:	ldr	r3, [fp, #-8]
     720:	add	r3, r3, #1
     724:	str	r3, [fp, #-8]
     728:	mov	r2, #7
     72c:	mov	r1, #2
     730:	ldr	r0, [fp, #-12]
     734:	bl	0 <grafo_adiciona>
     738:	mov	r3, r0
     73c:	cmp	r3, #0
     740:	beq	75c <teste_grafo_adiciona+0x218>
     744:	movw	r0, #0
     748:	movt	r0, #0
     74c:	bl	0 <printf>
     750:	ldr	r3, [fp, #-8]
     754:	add	r3, r3, #1
     758:	str	r3, [fp, #-8]
     75c:	mov	r2, #7
     760:	mov	r1, #22
     764:	ldr	r0, [fp, #-12]
     768:	bl	0 <grafo_adiciona>
     76c:	mov	r3, r0
     770:	cmn	r3, #1
     774:	beq	790 <teste_grafo_adiciona+0x24c>
     778:	movw	r0, #0
     77c:	movt	r0, #0
     780:	bl	0 <printf>
     784:	ldr	r3, [fp, #-8]
     788:	add	r3, r3, #1
     78c:	str	r3, [fp, #-8]
     790:	mov	r2, #7
     794:	mov	r1, #2
     798:	mov	r0, #0
     79c:	bl	0 <grafo_adiciona>
     7a0:	mov	r3, r0
     7a4:	cmn	r3, #1
     7a8:	beq	7c4 <teste_grafo_adiciona+0x280>
     7ac:	movw	r0, #0
     7b0:	movt	r0, #0
     7b4:	bl	0 <printf>
     7b8:	ldr	r3, [fp, #-8]
     7bc:	add	r3, r3, #1
     7c0:	str	r3, [fp, #-8]
     7c4:	ldr	r0, [fp, #-12]
     7c8:	bl	0 <grafo_apaga>
     7cc:	ldr	r3, [fp, #-8]
     7d0:	cmp	r3, #0
     7d4:	bne	7e8 <teste_grafo_adiciona+0x2a4>
     7d8:	movw	r0, #0
     7dc:	movt	r0, #0
     7e0:	bl	0 <puts>
     7e4:	b	7f0 <teste_grafo_adiciona+0x2ac>
     7e8:	mov	r0, #10
     7ec:	bl	0 <putchar>
     7f0:	ldr	r3, [fp, #-8]
     7f4:	mov	r0, r3
     7f8:	sub	sp, fp, #4
     7fc:	ldr	fp, [sp]
     800:	add	sp, sp, #4
     804:	pop	{pc}		; (ldr pc, [sp], #4)

00000808 <teste_grafo_remove>:
     808:	str	fp, [sp, #-8]!
     80c:	str	lr, [sp, #4]
     810:	add	fp, sp, #4
     814:	sub	sp, sp, #24
     818:	mov	r3, #0
     81c:	str	r3, [fp, #-8]
     820:	mov	r3, #1
     824:	str	r3, [sp, #12]
     828:	mov	r3, #7
     82c:	str	r3, [sp, #8]
     830:	mov	r3, #2
     834:	str	r3, [sp, #4]
     838:	mov	r3, #7
     83c:	str	r3, [sp]
     840:	mov	r3, #2
     844:	mov	r2, #3
     848:	mov	r1, #6
     84c:	mov	r0, #9
     850:	bl	0 <_g>
     854:	str	r0, [fp, #-12]
     858:	movw	r0, #0
     85c:	movt	r0, #0
     860:	bl	0 <printf>
     864:	mov	r2, #1
     868:	mov	r1, #7
     86c:	ldr	r0, [fp, #-12]
     870:	bl	0 <grafo_remove>
     874:	mov	r3, r0
     878:	cmp	r3, #1
     87c:	beq	898 <teste_grafo_remove+0x90>
     880:	movw	r0, #0
     884:	movt	r0, #0
     888:	bl	0 <printf>
     88c:	ldr	r3, [fp, #-8]
     890:	add	r3, r3, #1
     894:	str	r3, [fp, #-8]
     898:	ldr	r3, [fp, #-12]
     89c:	ldr	r3, [r3, #4]
     8a0:	add	r3, r3, #56	; 0x38
     8a4:	ldr	r3, [r3, #4]
     8a8:	cmp	r3, #0
     8ac:	beq	8e8 <teste_grafo_remove+0xe0>
     8b0:	ldr	r3, [fp, #-12]
     8b4:	ldr	r3, [r3, #4]
     8b8:	add	r3, r3, #56	; 0x38
     8bc:	ldr	r3, [r3, #4]
     8c0:	ldr	r3, [r3, #4]
     8c4:	cmp	r3, #0
     8c8:	bne	8e8 <teste_grafo_remove+0xe0>
     8cc:	ldr	r3, [fp, #-12]
     8d0:	ldr	r3, [r3, #4]
     8d4:	add	r3, r3, #56	; 0x38
     8d8:	ldr	r3, [r3, #4]
     8dc:	ldr	r3, [r3]
     8e0:	cmp	r3, #2
     8e4:	beq	900 <teste_grafo_remove+0xf8>
     8e8:	movw	r0, #0
     8ec:	movt	r0, #0
     8f0:	bl	0 <printf>
     8f4:	ldr	r3, [fp, #-8]
     8f8:	add	r3, r3, #1
     8fc:	str	r3, [fp, #-8]
     900:	mov	r2, #2
     904:	mov	r1, #7
     908:	ldr	r0, [fp, #-12]
     90c:	bl	0 <grafo_remove>
     910:	mov	r3, r0
     914:	cmp	r3, #1
     918:	beq	934 <teste_grafo_remove+0x12c>
     91c:	movw	r0, #0
     920:	movt	r0, #0
     924:	bl	0 <printf>
     928:	ldr	r3, [fp, #-8]
     92c:	add	r3, r3, #1
     930:	str	r3, [fp, #-8]
     934:	ldr	r3, [fp, #-12]
     938:	ldr	r3, [r3, #4]
     93c:	add	r3, r3, #56	; 0x38
     940:	ldr	r3, [r3, #4]
     944:	cmp	r3, #0
     948:	beq	964 <teste_grafo_remove+0x15c>
     94c:	movw	r0, #0
     950:	movt	r0, #0
     954:	bl	0 <printf>
     958:	ldr	r3, [fp, #-8]
     95c:	add	r3, r3, #1
     960:	str	r3, [fp, #-8]
     964:	mov	r2, #0
     968:	mov	r1, #4
     96c:	ldr	r0, [fp, #-12]
     970:	bl	0 <grafo_remove>
     974:	mov	r3, r0
     978:	cmp	r3, #0
     97c:	beq	998 <teste_grafo_remove+0x190>
     980:	movw	r0, #0
     984:	movt	r0, #0
     988:	bl	0 <printf>
     98c:	ldr	r3, [fp, #-8]
     990:	add	r3, r3, #1
     994:	str	r3, [fp, #-8]
     998:	mov	r2, #22
     99c:	mov	r1, #7
     9a0:	ldr	r0, [fp, #-12]
     9a4:	bl	0 <grafo_remove>
     9a8:	mov	r3, r0
     9ac:	cmn	r3, #1
     9b0:	beq	9cc <teste_grafo_remove+0x1c4>
     9b4:	movw	r0, #0
     9b8:	movt	r0, #0
     9bc:	bl	0 <printf>
     9c0:	ldr	r3, [fp, #-8]
     9c4:	add	r3, r3, #1
     9c8:	str	r3, [fp, #-8]
     9cc:	ldr	r0, [fp, #-12]
     9d0:	bl	0 <grafo_apaga>
     9d4:	ldr	r3, [fp, #-8]
     9d8:	cmp	r3, #0
     9dc:	bne	9f0 <teste_grafo_remove+0x1e8>
     9e0:	movw	r0, #0
     9e4:	movt	r0, #0
     9e8:	bl	0 <puts>
     9ec:	b	9f8 <teste_grafo_remove+0x1f0>
     9f0:	mov	r0, #10
     9f4:	bl	0 <putchar>
     9f8:	ldr	r3, [fp, #-8]
     9fc:	mov	r0, r3
     a00:	sub	sp, fp, #4
     a04:	ldr	fp, [sp]
     a08:	add	sp, sp, #4
     a0c:	pop	{pc}		; (ldr pc, [sp], #4)

00000a10 <teste_v_sucessores>:
     a10:	str	fp, [sp, #-8]!
     a14:	str	lr, [sp, #4]
     a18:	add	fp, sp, #4
     a1c:	sub	sp, sp, #96	; 0x60
     a20:	mov	r3, #0
     a24:	str	r3, [fp, #-8]
     a28:	mov	r3, #1
     a2c:	str	r3, [sp, #76]	; 0x4c
     a30:	mov	r3, #0
     a34:	str	r3, [sp, #72]	; 0x48
     a38:	mov	r3, #3
     a3c:	str	r3, [sp, #68]	; 0x44
     a40:	mov	r3, #6
     a44:	str	r3, [sp, #64]	; 0x40
     a48:	mov	r3, #6
     a4c:	str	r3, [sp, #60]	; 0x3c
     a50:	mov	r3, #7
     a54:	str	r3, [sp, #56]	; 0x38
     a58:	mov	r3, #1
     a5c:	str	r3, [sp, #52]	; 0x34
     a60:	mov	r3, #1
     a64:	str	r3, [sp, #48]	; 0x30
     a68:	mov	r3, #6
     a6c:	str	r3, [sp, #44]	; 0x2c
     a70:	mov	r3, #4
     a74:	str	r3, [sp, #40]	; 0x28
     a78:	mov	r3, #0
     a7c:	str	r3, [sp, #36]	; 0x24
     a80:	mov	r3, #4
     a84:	str	r3, [sp, #32]
     a88:	mov	r3, #4
     a8c:	str	r3, [sp, #28]
     a90:	mov	r3, #5
     a94:	str	r3, [sp, #24]
     a98:	mov	r3, #5
     a9c:	str	r3, [sp, #20]
     aa0:	mov	r3, #7
     aa4:	str	r3, [sp, #16]
     aa8:	mov	r3, #2
     aac:	str	r3, [sp, #12]
     ab0:	mov	r3, #0
     ab4:	str	r3, [sp, #8]
     ab8:	mov	r3, #2
     abc:	str	r3, [sp, #4]
     ac0:	mov	r3, #7
     ac4:	str	r3, [sp]
     ac8:	mov	r3, #2
     acc:	mov	r2, #3
     ad0:	mov	r1, #22
     ad4:	mov	r0, #8
     ad8:	bl	0 <_g>
     adc:	str	r0, [fp, #-12]
     ae0:	movw	r0, #0
     ae4:	movt	r0, #0
     ae8:	bl	0 <printf>
     aec:	mov	r1, #7
     af0:	ldr	r0, [fp, #-12]
     af4:	bl	0 <v_sucessores>
     af8:	str	r0, [fp, #-16]
     afc:	ldr	r3, [fp, #-16]
     b00:	cmp	r3, #0
     b04:	bne	b20 <teste_v_sucessores+0x110>
     b08:	movw	r0, #0
     b0c:	movt	r0, #0
     b10:	bl	0 <printf>
     b14:	ldr	r3, [fp, #-8]
     b18:	add	r3, r3, #1
     b1c:	str	r3, [fp, #-8]
     b20:	ldr	r3, [fp, #-16]
     b24:	cmp	r3, #0
     b28:	bne	b58 <teste_v_sucessores+0x148>
     b2c:	ldr	r3, [fp, #-8]
     b30:	cmp	r3, #0
     b34:	bne	b48 <teste_v_sucessores+0x138>
     b38:	movw	r0, #0
     b3c:	movt	r0, #0
     b40:	bl	0 <puts>
     b44:	b	b50 <teste_v_sucessores+0x140>
     b48:	mov	r0, #10
     b4c:	bl	0 <putchar>
     b50:	ldr	r3, [fp, #-8]
     b54:	b	cb4 <teste_v_sucessores+0x2a4>
     b58:	ldr	r3, [fp, #-16]
     b5c:	ldr	r3, [r3]
     b60:	cmp	r3, #3
     b64:	beq	b80 <teste_v_sucessores+0x170>
     b68:	movw	r0, #0
     b6c:	movt	r0, #0
     b70:	bl	0 <printf>
     b74:	ldr	r3, [fp, #-8]
     b78:	add	r3, r3, #1
     b7c:	str	r3, [fp, #-8]
     b80:	mov	r1, #2
     b84:	ldr	r0, [fp, #-16]
     b88:	bl	148 <_f>
     b8c:	mov	r3, r0
     b90:	cmp	r3, #0
     b94:	beq	bc8 <teste_v_sucessores+0x1b8>
     b98:	mov	r1, #5
     b9c:	ldr	r0, [fp, #-16]
     ba0:	bl	148 <_f>
     ba4:	mov	r3, r0
     ba8:	cmp	r3, #0
     bac:	beq	bc8 <teste_v_sucessores+0x1b8>
     bb0:	mov	r1, #6
     bb4:	ldr	r0, [fp, #-16]
     bb8:	bl	148 <_f>
     bbc:	mov	r3, r0
     bc0:	cmp	r3, #0
     bc4:	bne	be0 <teste_v_sucessores+0x1d0>
     bc8:	movw	r0, #0
     bcc:	movt	r0, #0
     bd0:	bl	0 <printf>
     bd4:	ldr	r3, [fp, #-8]
     bd8:	add	r3, r3, #1
     bdc:	str	r3, [fp, #-8]
     be0:	ldr	r0, [fp, #-16]
     be4:	bl	0 <vetor_apaga>
     be8:	mov	r1, #2
     bec:	ldr	r0, [fp, #-12]
     bf0:	bl	0 <v_sucessores>
     bf4:	str	r0, [fp, #-16]
     bf8:	ldr	r3, [fp, #-16]
     bfc:	cmp	r3, #0
     c00:	bne	c1c <teste_v_sucessores+0x20c>
     c04:	movw	r0, #0
     c08:	movt	r0, #0
     c0c:	bl	0 <printf>
     c10:	ldr	r3, [fp, #-8]
     c14:	add	r3, r3, #1
     c18:	str	r3, [fp, #-8]
     c1c:	ldr	r3, [fp, #-16]
     c20:	cmp	r3, #0
     c24:	bne	c54 <teste_v_sucessores+0x244>
     c28:	ldr	r3, [fp, #-8]
     c2c:	cmp	r3, #0
     c30:	bne	c44 <teste_v_sucessores+0x234>
     c34:	movw	r0, #0
     c38:	movt	r0, #0
     c3c:	bl	0 <puts>
     c40:	b	c4c <teste_v_sucessores+0x23c>
     c44:	mov	r0, #10
     c48:	bl	0 <putchar>
     c4c:	ldr	r3, [fp, #-8]
     c50:	b	cb4 <teste_v_sucessores+0x2a4>
     c54:	ldr	r3, [fp, #-16]
     c58:	ldr	r3, [r3]
     c5c:	cmp	r3, #0
     c60:	beq	c7c <teste_v_sucessores+0x26c>
     c64:	movw	r0, #0
     c68:	movt	r0, #0
     c6c:	bl	0 <printf>
     c70:	ldr	r3, [fp, #-8]
     c74:	add	r3, r3, #1
     c78:	str	r3, [fp, #-8]
     c7c:	ldr	r0, [fp, #-16]
     c80:	bl	0 <vetor_apaga>
     c84:	ldr	r0, [fp, #-12]
     c88:	bl	0 <grafo_apaga>
     c8c:	ldr	r3, [fp, #-8]
     c90:	cmp	r3, #0
     c94:	bne	ca8 <teste_v_sucessores+0x298>
     c98:	movw	r0, #0
     c9c:	movt	r0, #0
     ca0:	bl	0 <puts>
     ca4:	b	cb0 <teste_v_sucessores+0x2a0>
     ca8:	mov	r0, #10
     cac:	bl	0 <putchar>
     cb0:	ldr	r3, [fp, #-8]
     cb4:	mov	r0, r3
     cb8:	sub	sp, fp, #4
     cbc:	ldr	fp, [sp]
     cc0:	add	sp, sp, #4
     cc4:	pop	{pc}		; (ldr pc, [sp], #4)

00000cc8 <teste_v_antecessores>:
     cc8:	str	fp, [sp, #-8]!
     ccc:	str	lr, [sp, #4]
     cd0:	add	fp, sp, #4
     cd4:	sub	sp, sp, #96	; 0x60
     cd8:	mov	r3, #0
     cdc:	str	r3, [fp, #-8]
     ce0:	mov	r3, #1
     ce4:	str	r3, [sp, #76]	; 0x4c
     ce8:	mov	r3, #0
     cec:	str	r3, [sp, #72]	; 0x48
     cf0:	mov	r3, #3
     cf4:	str	r3, [sp, #68]	; 0x44
     cf8:	mov	r3, #6
     cfc:	str	r3, [sp, #64]	; 0x40
     d00:	mov	r3, #6
     d04:	str	r3, [sp, #60]	; 0x3c
     d08:	mov	r3, #7
     d0c:	str	r3, [sp, #56]	; 0x38
     d10:	mov	r3, #1
     d14:	str	r3, [sp, #52]	; 0x34
     d18:	mov	r3, #1
     d1c:	str	r3, [sp, #48]	; 0x30
     d20:	mov	r3, #6
     d24:	str	r3, [sp, #44]	; 0x2c
     d28:	mov	r3, #4
     d2c:	str	r3, [sp, #40]	; 0x28
     d30:	mov	r3, #0
     d34:	str	r3, [sp, #36]	; 0x24
     d38:	mov	r3, #4
     d3c:	str	r3, [sp, #32]
     d40:	mov	r3, #4
     d44:	str	r3, [sp, #28]
     d48:	mov	r3, #5
     d4c:	str	r3, [sp, #24]
     d50:	mov	r3, #5
     d54:	str	r3, [sp, #20]
     d58:	mov	r3, #7
     d5c:	str	r3, [sp, #16]
     d60:	mov	r3, #2
     d64:	str	r3, [sp, #12]
     d68:	mov	r3, #0
     d6c:	str	r3, [sp, #8]
     d70:	mov	r3, #2
     d74:	str	r3, [sp, #4]
     d78:	mov	r3, #7
     d7c:	str	r3, [sp]
     d80:	mov	r3, #2
     d84:	mov	r2, #3
     d88:	mov	r1, #22
     d8c:	mov	r0, #8
     d90:	bl	0 <_g>
     d94:	str	r0, [fp, #-12]
     d98:	movw	r0, #0
     d9c:	movt	r0, #0
     da0:	bl	0 <printf>
     da4:	mov	r1, #2
     da8:	ldr	r0, [fp, #-12]
     dac:	bl	0 <v_antecessores>
     db0:	str	r0, [fp, #-16]
     db4:	ldr	r3, [fp, #-16]
     db8:	cmp	r3, #0
     dbc:	bne	dd8 <teste_v_antecessores+0x110>
     dc0:	movw	r0, #0
     dc4:	movt	r0, #0
     dc8:	bl	0 <printf>
     dcc:	ldr	r3, [fp, #-8]
     dd0:	add	r3, r3, #1
     dd4:	str	r3, [fp, #-8]
     dd8:	ldr	r3, [fp, #-16]
     ddc:	cmp	r3, #0
     de0:	bne	e10 <teste_v_antecessores+0x148>
     de4:	ldr	r3, [fp, #-8]
     de8:	cmp	r3, #0
     dec:	bne	e00 <teste_v_antecessores+0x138>
     df0:	movw	r0, #0
     df4:	movt	r0, #0
     df8:	bl	0 <puts>
     dfc:	b	e08 <teste_v_antecessores+0x140>
     e00:	mov	r0, #10
     e04:	bl	0 <putchar>
     e08:	ldr	r3, [fp, #-8]
     e0c:	b	f6c <teste_v_antecessores+0x2a4>
     e10:	ldr	r3, [fp, #-16]
     e14:	ldr	r3, [r3]
     e18:	cmp	r3, #3
     e1c:	beq	e38 <teste_v_antecessores+0x170>
     e20:	movw	r0, #0
     e24:	movt	r0, #0
     e28:	bl	0 <printf>
     e2c:	ldr	r3, [fp, #-8]
     e30:	add	r3, r3, #1
     e34:	str	r3, [fp, #-8]
     e38:	mov	r1, #0
     e3c:	ldr	r0, [fp, #-16]
     e40:	bl	148 <_f>
     e44:	mov	r3, r0
     e48:	cmp	r3, #0
     e4c:	beq	e80 <teste_v_antecessores+0x1b8>
     e50:	mov	r1, #3
     e54:	ldr	r0, [fp, #-16]
     e58:	bl	148 <_f>
     e5c:	mov	r3, r0
     e60:	cmp	r3, #0
     e64:	beq	e80 <teste_v_antecessores+0x1b8>
     e68:	mov	r1, #7
     e6c:	ldr	r0, [fp, #-16]
     e70:	bl	148 <_f>
     e74:	mov	r3, r0
     e78:	cmp	r3, #0
     e7c:	bne	e98 <teste_v_antecessores+0x1d0>
     e80:	movw	r0, #0
     e84:	movt	r0, #0
     e88:	bl	0 <printf>
     e8c:	ldr	r3, [fp, #-8]
     e90:	add	r3, r3, #1
     e94:	str	r3, [fp, #-8]
     e98:	ldr	r0, [fp, #-16]
     e9c:	bl	0 <vetor_apaga>
     ea0:	mov	r1, #7
     ea4:	ldr	r0, [fp, #-12]
     ea8:	bl	0 <v_antecessores>
     eac:	str	r0, [fp, #-16]
     eb0:	ldr	r3, [fp, #-16]
     eb4:	cmp	r3, #0
     eb8:	bne	ed4 <teste_v_antecessores+0x20c>
     ebc:	movw	r0, #0
     ec0:	movt	r0, #0
     ec4:	bl	0 <printf>
     ec8:	ldr	r3, [fp, #-8]
     ecc:	add	r3, r3, #1
     ed0:	str	r3, [fp, #-8]
     ed4:	ldr	r3, [fp, #-16]
     ed8:	cmp	r3, #0
     edc:	bne	f0c <teste_v_antecessores+0x244>
     ee0:	ldr	r3, [fp, #-8]
     ee4:	cmp	r3, #0
     ee8:	bne	efc <teste_v_antecessores+0x234>
     eec:	movw	r0, #0
     ef0:	movt	r0, #0
     ef4:	bl	0 <puts>
     ef8:	b	f04 <teste_v_antecessores+0x23c>
     efc:	mov	r0, #10
     f00:	bl	0 <putchar>
     f04:	ldr	r3, [fp, #-8]
     f08:	b	f6c <teste_v_antecessores+0x2a4>
     f0c:	ldr	r3, [fp, #-16]
     f10:	ldr	r3, [r3]
     f14:	cmp	r3, #0
     f18:	beq	f34 <teste_v_antecessores+0x26c>
     f1c:	movw	r0, #0
     f20:	movt	r0, #0
     f24:	bl	0 <printf>
     f28:	ldr	r3, [fp, #-8]
     f2c:	add	r3, r3, #1
     f30:	str	r3, [fp, #-8]
     f34:	ldr	r0, [fp, #-16]
     f38:	bl	0 <vetor_apaga>
     f3c:	ldr	r0, [fp, #-12]
     f40:	bl	0 <grafo_apaga>
     f44:	ldr	r3, [fp, #-8]
     f48:	cmp	r3, #0
     f4c:	bne	f60 <teste_v_antecessores+0x298>
     f50:	movw	r0, #0
     f54:	movt	r0, #0
     f58:	bl	0 <puts>
     f5c:	b	f68 <teste_v_antecessores+0x2a0>
     f60:	mov	r0, #10
     f64:	bl	0 <putchar>
     f68:	ldr	r3, [fp, #-8]
     f6c:	mov	r0, r3
     f70:	sub	sp, fp, #4
     f74:	ldr	fp, [sp]
     f78:	add	sp, sp, #4
     f7c:	pop	{pc}		; (ldr pc, [sp], #4)

00000f80 <teste_v_grau>:
     f80:	str	fp, [sp, #-8]!
     f84:	str	lr, [sp, #4]
     f88:	add	fp, sp, #4
     f8c:	sub	sp, sp, #88	; 0x58
     f90:	mov	r3, #0
     f94:	str	r3, [fp, #-8]
     f98:	mov	r3, #1
     f9c:	str	r3, [sp, #76]	; 0x4c
     fa0:	mov	r3, #0
     fa4:	str	r3, [sp, #72]	; 0x48
     fa8:	mov	r3, #3
     fac:	str	r3, [sp, #68]	; 0x44
     fb0:	mov	r3, #6
     fb4:	str	r3, [sp, #64]	; 0x40
     fb8:	mov	r3, #6
     fbc:	str	r3, [sp, #60]	; 0x3c
     fc0:	mov	r3, #7
     fc4:	str	r3, [sp, #56]	; 0x38
     fc8:	mov	r3, #1
     fcc:	str	r3, [sp, #52]	; 0x34
     fd0:	mov	r3, #1
     fd4:	str	r3, [sp, #48]	; 0x30
     fd8:	mov	r3, #6
     fdc:	str	r3, [sp, #44]	; 0x2c
     fe0:	mov	r3, #4
     fe4:	str	r3, [sp, #40]	; 0x28
     fe8:	mov	r3, #0
     fec:	str	r3, [sp, #36]	; 0x24
     ff0:	mov	r3, #4
     ff4:	str	r3, [sp, #32]
     ff8:	mov	r3, #4
     ffc:	str	r3, [sp, #28]
    1000:	mov	r3, #5
    1004:	str	r3, [sp, #24]
    1008:	mov	r3, #5
    100c:	str	r3, [sp, #20]
    1010:	mov	r3, #7
    1014:	str	r3, [sp, #16]
    1018:	mov	r3, #2
    101c:	str	r3, [sp, #12]
    1020:	mov	r3, #0
    1024:	str	r3, [sp, #8]
    1028:	mov	r3, #2
    102c:	str	r3, [sp, #4]
    1030:	mov	r3, #7
    1034:	str	r3, [sp]
    1038:	mov	r3, #2
    103c:	mov	r2, #3
    1040:	mov	r1, #22
    1044:	mov	r0, #8
    1048:	bl	0 <_g>
    104c:	str	r0, [fp, #-12]
    1050:	movw	r0, #0
    1054:	movt	r0, #0
    1058:	bl	0 <printf>
    105c:	mvn	r1, #3
    1060:	ldr	r0, [fp, #-12]
    1064:	bl	0 <v_grau>
    1068:	mov	r3, r0
    106c:	cmn	r3, #1
    1070:	beq	108c <teste_v_grau+0x10c>
    1074:	movw	r0, #0
    1078:	movt	r0, #0
    107c:	bl	0 <printf>
    1080:	ldr	r3, [fp, #-8]
    1084:	add	r3, r3, #1
    1088:	str	r3, [fp, #-8]
    108c:	mov	r1, #7
    1090:	ldr	r0, [fp, #-12]
    1094:	bl	0 <v_grau>
    1098:	mov	r3, r0
    109c:	cmp	r3, #3
    10a0:	beq	10bc <teste_v_grau+0x13c>
    10a4:	movw	r0, #0
    10a8:	movt	r0, #0
    10ac:	bl	0 <printf>
    10b0:	ldr	r3, [fp, #-8]
    10b4:	add	r3, r3, #1
    10b8:	str	r3, [fp, #-8]
    10bc:	mov	r1, #5
    10c0:	ldr	r0, [fp, #-12]
    10c4:	bl	0 <v_grau>
    10c8:	mov	r3, r0
    10cc:	cmp	r3, #2
    10d0:	beq	10ec <teste_v_grau+0x16c>
    10d4:	movw	r0, #0
    10d8:	movt	r0, #0
    10dc:	bl	0 <printf>
    10e0:	ldr	r3, [fp, #-8]
    10e4:	add	r3, r3, #1
    10e8:	str	r3, [fp, #-8]
    10ec:	ldr	r0, [fp, #-12]
    10f0:	bl	0 <grafo_apaga>
    10f4:	ldr	r3, [fp, #-8]
    10f8:	cmp	r3, #0
    10fc:	bne	1110 <teste_v_grau+0x190>
    1100:	movw	r0, #0
    1104:	movt	r0, #0
    1108:	bl	0 <puts>
    110c:	b	1118 <teste_v_grau+0x198>
    1110:	mov	r0, #10
    1114:	bl	0 <putchar>
    1118:	ldr	r3, [fp, #-8]
    111c:	mov	r0, r3
    1120:	sub	sp, fp, #4
    1124:	ldr	fp, [sp]
    1128:	add	sp, sp, #4
    112c:	pop	{pc}		; (ldr pc, [sp], #4)

00001130 <teste_v_celebridade>:
    1130:	str	fp, [sp, #-8]!
    1134:	str	lr, [sp, #4]
    1138:	add	fp, sp, #4
    113c:	sub	sp, sp, #120	; 0x78
    1140:	mov	r3, #0
    1144:	str	r3, [fp, #-8]
    1148:	mov	r3, #2
    114c:	str	r3, [sp, #108]	; 0x6c
    1150:	mov	r3, #5
    1154:	str	r3, [sp, #104]	; 0x68
    1158:	mov	r3, #2
    115c:	str	r3, [sp, #100]	; 0x64
    1160:	mov	r3, #4
    1164:	str	r3, [sp, #96]	; 0x60
    1168:	mov	r3, #2
    116c:	str	r3, [sp, #92]	; 0x5c
    1170:	mov	r3, #6
    1174:	str	r3, [sp, #88]	; 0x58
    1178:	mov	r3, #2
    117c:	str	r3, [sp, #84]	; 0x54
    1180:	mov	r3, #1
    1184:	str	r3, [sp, #80]	; 0x50
    1188:	mov	r3, #1
    118c:	str	r3, [sp, #76]	; 0x4c
    1190:	mov	r3, #0
    1194:	str	r3, [sp, #72]	; 0x48
    1198:	mov	r3, #3
    119c:	str	r3, [sp, #68]	; 0x44
    11a0:	mov	r3, #6
    11a4:	str	r3, [sp, #64]	; 0x40
    11a8:	mov	r3, #6
    11ac:	str	r3, [sp, #60]	; 0x3c
    11b0:	mov	r3, #7
    11b4:	str	r3, [sp, #56]	; 0x38
    11b8:	mov	r3, #1
    11bc:	str	r3, [sp, #52]	; 0x34
    11c0:	mov	r3, #1
    11c4:	str	r3, [sp, #48]	; 0x30
    11c8:	mov	r3, #6
    11cc:	str	r3, [sp, #44]	; 0x2c
    11d0:	mov	r3, #4
    11d4:	str	r3, [sp, #40]	; 0x28
    11d8:	mov	r3, #0
    11dc:	str	r3, [sp, #36]	; 0x24
    11e0:	mov	r3, #4
    11e4:	str	r3, [sp, #32]
    11e8:	mov	r3, #4
    11ec:	str	r3, [sp, #28]
    11f0:	mov	r3, #5
    11f4:	str	r3, [sp, #24]
    11f8:	mov	r3, #5
    11fc:	str	r3, [sp, #20]
    1200:	mov	r3, #7
    1204:	str	r3, [sp, #16]
    1208:	mov	r3, #2
    120c:	str	r3, [sp, #12]
    1210:	mov	r3, #0
    1214:	str	r3, [sp, #8]
    1218:	mov	r3, #2
    121c:	str	r3, [sp, #4]
    1220:	mov	r3, #7
    1224:	str	r3, [sp]
    1228:	mov	r3, #2
    122c:	mov	r2, #3
    1230:	mov	r1, #30
    1234:	mov	r0, #8
    1238:	bl	0 <_g>
    123c:	str	r0, [fp, #-12]
    1240:	movw	r0, #0
    1244:	movt	r0, #0
    1248:	bl	0 <printf>
    124c:	mov	r1, #7
    1250:	ldr	r0, [fp, #-12]
    1254:	bl	0 <v_celebridade>
    1258:	mov	r3, r0
    125c:	cmp	r3, #0
    1260:	beq	127c <teste_v_celebridade+0x14c>
    1264:	movw	r0, #0
    1268:	movt	r0, #0
    126c:	bl	0 <printf>
    1270:	ldr	r3, [fp, #-8]
    1274:	add	r3, r3, #1
    1278:	str	r3, [fp, #-8]
    127c:	mov	r1, #2
    1280:	ldr	r0, [fp, #-12]
    1284:	bl	0 <v_celebridade>
    1288:	mov	r3, r0
    128c:	cmp	r3, #1
    1290:	beq	12ac <teste_v_celebridade+0x17c>
    1294:	movw	r0, #0
    1298:	movt	r0, #0
    129c:	bl	0 <printf>
    12a0:	ldr	r3, [fp, #-8]
    12a4:	add	r3, r3, #1
    12a8:	str	r3, [fp, #-8]
    12ac:	ldr	r0, [fp, #-12]
    12b0:	bl	0 <grafo_apaga>
    12b4:	ldr	r3, [fp, #-8]
    12b8:	cmp	r3, #0
    12bc:	bne	12d0 <teste_v_celebridade+0x1a0>
    12c0:	movw	r0, #0
    12c4:	movt	r0, #0
    12c8:	bl	0 <puts>
    12cc:	b	12d8 <teste_v_celebridade+0x1a8>
    12d0:	mov	r0, #10
    12d4:	bl	0 <putchar>
    12d8:	ldr	r3, [fp, #-8]
    12dc:	mov	r0, r3
    12e0:	sub	sp, fp, #4
    12e4:	ldr	fp, [sp]
    12e8:	add	sp, sp, #4
    12ec:	pop	{pc}		; (ldr pc, [sp], #4)

000012f0 <main>:
    12f0:	str	fp, [sp, #-8]!
    12f4:	str	lr, [sp, #4]
    12f8:	add	fp, sp, #4
    12fc:	sub	sp, sp, #8
    1300:	movw	r3, #0
    1304:	movt	r3, #0
    1308:	ldr	r0, [r3]
    130c:	mov	r3, #0
    1310:	mov	r2, #2
    1314:	mov	r1, #0
    1318:	bl	0 <setvbuf>
    131c:	movw	r3, #0
    1320:	movt	r3, #0
    1324:	ldr	r0, [r3]
    1328:	mov	r3, #0
    132c:	mov	r2, #2
    1330:	mov	r1, #0
    1334:	bl	0 <setvbuf>
    1338:	mov	r3, #0
    133c:	str	r3, [fp, #-8]
    1340:	bl	1dc <teste_grafo_novo>
    1344:	mov	r2, r0
    1348:	ldr	r3, [fp, #-8]
    134c:	add	r3, r3, r2
    1350:	str	r3, [fp, #-8]
    1354:	bl	354 <teste_grafo_aresta>
    1358:	mov	r2, r0
    135c:	ldr	r3, [fp, #-8]
    1360:	add	r3, r3, r2
    1364:	str	r3, [fp, #-8]
    1368:	bl	544 <teste_grafo_adiciona>
    136c:	mov	r2, r0
    1370:	ldr	r3, [fp, #-8]
    1374:	add	r3, r3, r2
    1378:	str	r3, [fp, #-8]
    137c:	bl	808 <teste_grafo_remove>
    1380:	mov	r2, r0
    1384:	ldr	r3, [fp, #-8]
    1388:	add	r3, r3, r2
    138c:	str	r3, [fp, #-8]
    1390:	bl	a10 <teste_v_sucessores>
    1394:	mov	r2, r0
    1398:	ldr	r3, [fp, #-8]
    139c:	add	r3, r3, r2
    13a0:	str	r3, [fp, #-8]
    13a4:	bl	cc8 <teste_v_antecessores>
    13a8:	mov	r2, r0
    13ac:	ldr	r3, [fp, #-8]
    13b0:	add	r3, r3, r2
    13b4:	str	r3, [fp, #-8]
    13b8:	bl	f80 <teste_v_grau>
    13bc:	mov	r2, r0
    13c0:	ldr	r3, [fp, #-8]
    13c4:	add	r3, r3, r2
    13c8:	str	r3, [fp, #-8]
    13cc:	bl	1130 <teste_v_celebridade>
    13d0:	mov	r2, r0
    13d4:	ldr	r3, [fp, #-8]
    13d8:	add	r3, r3, r2
    13dc:	str	r3, [fp, #-8]
    13e0:	ldr	r3, [fp, #-8]
    13e4:	cmp	r3, #0
    13e8:	bne	13fc <main+0x10c>
    13ec:	movw	r0, #0
    13f0:	movt	r0, #0
    13f4:	bl	0 <puts>
    13f8:	b	140c <main+0x11c>
    13fc:	ldr	r1, [fp, #-8]
    1400:	movw	r0, #0
    1404:	movt	r0, #0
    1408:	bl	0 <printf>
    140c:	mov	r3, #0
    1410:	mov	r0, r3
    1414:	sub	sp, fp, #4
    1418:	ldr	fp, [sp]
    141c:	add	sp, sp, #4
    1420:	pop	{pc}		; (ldr pc, [sp], #4)
