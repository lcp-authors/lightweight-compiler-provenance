
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/pcre/pcre_byte_order.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <swap_uint32>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	and	r1, r0, #65280	; 0xff00
  14:	lsl	ip, r1, #8
  18:	and	r1, r0, #255	; 0xff
  1c:	orr	r3, ip, r1, lsl #24
  20:	and	r1, r0, #16711680	; 0xff0000
  24:	orr	r2, r3, r1, lsr #8
  28:	orr	r0, r2, r0, lsr #24
  2c:	ldr	lr, [sp, #4]
  30:	add	sp, sp, #8
  34:	bx	lr

00000038 <swap_uint16>:
  38:	mov	ip, sp
  3c:	sub	sp, sp, #8
  40:	str	ip, [sp]
  44:	str	lr, [sp, #4]
  48:	lsl	r1, r0, #8
  4c:	orr	r0, r1, r0, asr #8
  50:	bic	r0, r0, #16711680	; 0xff0000
  54:	bic	r0, r0, #-16777216	; 0xff000000
  58:	ldr	lr, [sp, #4]
  5c:	add	sp, sp, #8
  60:	bx	lr

00000064 <coda_pcre_pattern_to_host_byte_order>:
  64:	mov	ip, sp
  68:	sub	sp, sp, #24
  6c:	str	ip, [sp]
  70:	str	lr, [sp, #4]
  74:	str	r4, [sp, #8]
  78:	str	r5, [sp, #12]
  7c:	str	r6, [sp, #16]
  80:	mov	r6, r2
  84:	mov	r5, r1
  88:	mov	r4, r0
  8c:	cmp	r4, #0
  90:	bne	9c <coda_pcre_pattern_to_host_byte_order+0x38>
  94:	mvn	r0, #1
  98:	b	2ac <coda_pcre_pattern_to_host_byte_order+0x248>
  9c:	ldr	r2, [r4]
  a0:	movw	lr, #21061	; 0x5245
  a4:	movt	lr, #20547	; 0x5043
  a8:	cmp	r2, lr
  ac:	bne	d4 <coda_pcre_pattern_to_host_byte_order+0x70>
  b0:	ldr	r0, [r4, #12]
  b4:	and	r2, r0, #1
  b8:	cmp	r2, #0
  bc:	bne	c8 <coda_pcre_pattern_to_host_byte_order+0x64>
  c0:	mvn	r0, #27
  c4:	b	2ac <coda_pcre_pattern_to_host_byte_order+0x248>
  c8:	str	r6, [r4, #48]	; 0x30
  cc:	mov	r0, #0
  d0:	b	2ac <coda_pcre_pattern_to_host_byte_order+0x248>
  d4:	ldr	r3, [r4]
  d8:	movw	lr, #17232	; 0x4350
  dc:	movt	lr, #17746	; 0x4552
  e0:	cmp	r3, lr
  e4:	beq	f0 <coda_pcre_pattern_to_host_byte_order+0x8c>
  e8:	mvn	r0, #3
  ec:	b	2ac <coda_pcre_pattern_to_host_byte_order+0x248>
  f0:	ldr	r0, [r4, #12]
  f4:	bl	0 <swap_uint32>
  f8:	and	r3, r0, #1
  fc:	cmp	r3, #0
 100:	bne	10c <coda_pcre_pattern_to_host_byte_order+0xa8>
 104:	mvn	r0, #27
 108:	b	2ac <coda_pcre_pattern_to_host_byte_order+0x248>
 10c:	movw	r2, #21061	; 0x5245
 110:	movt	r2, #20547	; 0x5043
 114:	str	r2, [r4]
 118:	ldr	r0, [r4, #4]
 11c:	bl	0 <swap_uint32>
 120:	str	r0, [r4, #4]
 124:	ldr	r0, [r4, #8]
 128:	bl	0 <swap_uint32>
 12c:	str	r0, [r4, #8]
 130:	ldr	r0, [r4, #12]
 134:	bl	0 <swap_uint32>
 138:	str	r0, [r4, #12]
 13c:	ldr	r0, [r4, #16]
 140:	bl	0 <swap_uint32>
 144:	str	r0, [r4, #16]
 148:	ldr	r0, [r4, #20]
 14c:	bl	0 <swap_uint32>
 150:	str	r0, [r4, #20]
 154:	ldrh	r1, [r4, #24]
 158:	bic	r0, r1, #16711680	; 0xff0000
 15c:	bic	r0, r0, #-16777216	; 0xff000000
 160:	bl	38 <swap_uint16>
 164:	bic	ip, r0, #16711680	; 0xff0000
 168:	bic	ip, ip, #-16777216	; 0xff000000
 16c:	strh	ip, [r4, #24]
 170:	ldrh	r3, [r4, #26]
 174:	bic	r0, r3, #16711680	; 0xff0000
 178:	bic	r0, r0, #-16777216	; 0xff000000
 17c:	bl	38 <swap_uint16>
 180:	bic	r0, r0, #16711680	; 0xff0000
 184:	bic	r0, r0, #-16777216	; 0xff000000
 188:	strh	r0, [r4, #26]
 18c:	ldrh	ip, [r4, #28]
 190:	bic	r0, ip, #16711680	; 0xff0000
 194:	bic	r0, r0, #-16777216	; 0xff000000
 198:	bl	38 <swap_uint16>
 19c:	bic	r2, r0, #16711680	; 0xff0000
 1a0:	bic	r2, r2, #-16777216	; 0xff000000
 1a4:	strh	r2, [r4, #28]
 1a8:	ldrh	r0, [r4, #30]
 1ac:	bic	r0, r0, #16711680	; 0xff0000
 1b0:	bic	r0, r0, #-16777216	; 0xff000000
 1b4:	bl	38 <swap_uint16>
 1b8:	bic	r1, r0, #16711680	; 0xff0000
 1bc:	bic	r1, r1, #-16777216	; 0xff000000
 1c0:	strh	r1, [r4, #30]
 1c4:	ldrh	r0, [r4, #32]
 1c8:	bic	r0, r0, #16711680	; 0xff0000
 1cc:	bic	r0, r0, #-16777216	; 0xff000000
 1d0:	bl	38 <swap_uint16>
 1d4:	bic	r3, r0, #16711680	; 0xff0000
 1d8:	bic	r3, r3, #-16777216	; 0xff000000
 1dc:	strh	r3, [r4, #32]
 1e0:	ldrh	r2, [r4, #34]	; 0x22
 1e4:	bic	r0, r2, #16711680	; 0xff0000
 1e8:	bic	r0, r0, #-16777216	; 0xff000000
 1ec:	bl	38 <swap_uint16>
 1f0:	bic	r1, r0, #16711680	; 0xff0000
 1f4:	bic	r1, r1, #-16777216	; 0xff000000
 1f8:	strh	r1, [r4, #34]	; 0x22
 1fc:	ldrh	ip, [r4, #36]	; 0x24
 200:	bic	r0, ip, #16711680	; 0xff0000
 204:	bic	r0, r0, #-16777216	; 0xff000000
 208:	bl	38 <swap_uint16>
 20c:	bic	r0, r0, #16711680	; 0xff0000
 210:	bic	r0, r0, #-16777216	; 0xff000000
 214:	strh	r0, [r4, #36]	; 0x24
 218:	ldrh	r2, [r4, #38]	; 0x26
 21c:	bic	r0, r2, #16711680	; 0xff0000
 220:	bic	r0, r0, #-16777216	; 0xff000000
 224:	bl	38 <swap_uint16>
 228:	bic	ip, r0, #16711680	; 0xff0000
 22c:	bic	ip, ip, #-16777216	; 0xff000000
 230:	strh	ip, [r4, #38]	; 0x26
 234:	ldrh	r1, [r4, #40]	; 0x28
 238:	bic	r0, r1, #16711680	; 0xff0000
 23c:	bic	r0, r0, #-16777216	; 0xff000000
 240:	bl	38 <swap_uint16>
 244:	bic	r3, r0, #16711680	; 0xff0000
 248:	bic	r3, r3, #-16777216	; 0xff000000
 24c:	strh	r3, [r4, #40]	; 0x28
 250:	str	r6, [r4, #48]	; 0x30
 254:	cmp	r5, #0
 258:	beq	274 <coda_pcre_pattern_to_host_byte_order+0x210>
 25c:	ldr	r1, [r5]
 260:	and	r0, r1, #1
 264:	cmp	r0, #0
 268:	movne	ip, #1
 26c:	moveq	ip, #0
 270:	b	278 <coda_pcre_pattern_to_host_byte_order+0x214>
 274:	mov	ip, #0
 278:	cmp	ip, #0
 27c:	beq	2a8 <coda_pcre_pattern_to_host_byte_order+0x244>
 280:	ldr	r4, [r5, #4]
 284:	ldr	r0, [r4]
 288:	bl	0 <swap_uint32>
 28c:	str	r0, [r4]
 290:	ldr	r0, [r4, #4]
 294:	bl	0 <swap_uint32>
 298:	str	r0, [r4, #4]
 29c:	ldr	r0, [r4, #40]	; 0x28
 2a0:	bl	0 <swap_uint32>
 2a4:	str	r0, [r4, #40]	; 0x28
 2a8:	mov	r0, #0
 2ac:	ldr	r4, [sp, #8]
 2b0:	ldr	r5, [sp, #12]
 2b4:	ldr	r6, [sp, #16]
 2b8:	ldr	lr, [sp, #4]
 2bc:	add	sp, sp, #24
 2c0:	bx	lr
