
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/vetor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <vetor_novo>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	mov	r0, #12
  10:	bl	0 <malloc>
  14:	mov	r3, r0
  18:	str	r3, [fp, #-8]
  1c:	ldr	r3, [fp, #-8]
  20:	cmp	r3, #0
  24:	bne	30 <vetor_novo+0x30>
  28:	mov	r3, #0
  2c:	b	58 <vetor_novo+0x58>
  30:	ldr	r3, [fp, #-8]
  34:	mov	r2, #0
  38:	str	r2, [r3]
  3c:	ldr	r3, [fp, #-8]
  40:	mov	r2, #0
  44:	str	r2, [r3, #4]
  48:	ldr	r3, [fp, #-8]
  4c:	mov	r2, #0
  50:	str	r2, [r3, #8]
  54:	ldr	r3, [fp, #-8]
  58:	mov	r0, r3
  5c:	sub	sp, fp, #4
  60:	pop	{fp, pc}

00000064 <vetor_apaga>:
  64:	push	{fp, lr}
  68:	add	fp, sp, #4
  6c:	sub	sp, sp, #8
  70:	str	r0, [fp, #-8]
  74:	ldr	r3, [fp, #-8]
  78:	cmp	r3, #0
  7c:	beq	9c <vetor_apaga+0x38>
  80:	ldr	r3, [fp, #-8]
  84:	ldr	r3, [r3, #8]
  88:	mov	r0, r3
  8c:	bl	0 <free>
  90:	ldr	r0, [fp, #-8]
  94:	bl	0 <free>
  98:	b	a0 <vetor_apaga+0x3c>
  9c:	nop			; (mov r0, r0)
  a0:	sub	sp, fp, #4
  a4:	pop	{fp, pc}

000000a8 <vetor_atribui>:
  a8:	push	{fp}		; (str fp, [sp, #-4]!)
  ac:	add	fp, sp, #0
  b0:	sub	sp, sp, #20
  b4:	str	r0, [fp, #-8]
  b8:	str	r1, [fp, #-12]
  bc:	str	r2, [fp, #-16]
  c0:	ldr	r3, [fp, #-8]
  c4:	cmp	r3, #0
  c8:	beq	ec <vetor_atribui+0x44>
  cc:	ldr	r3, [fp, #-12]
  d0:	cmp	r3, #0
  d4:	blt	ec <vetor_atribui+0x44>
  d8:	ldr	r3, [fp, #-8]
  dc:	ldr	r2, [r3]
  e0:	ldr	r3, [fp, #-12]
  e4:	cmp	r2, r3
  e8:	bgt	f4 <vetor_atribui+0x4c>
  ec:	mvn	r3, #0
  f0:	b	114 <vetor_atribui+0x6c>
  f4:	ldr	r3, [fp, #-8]
  f8:	ldr	r2, [r3, #8]
  fc:	ldr	r3, [fp, #-12]
 100:	lsl	r3, r3, #2
 104:	add	r3, r2, r3
 108:	ldr	r2, [fp, #-16]
 10c:	str	r2, [r3]
 110:	ldr	r3, [fp, #-12]
 114:	mov	r0, r3
 118:	add	sp, fp, #0
 11c:	pop	{fp}		; (ldr fp, [sp], #4)
 120:	bx	lr

00000124 <vetor_tamanho>:
 124:	push	{fp}		; (str fp, [sp, #-4]!)
 128:	add	fp, sp, #0
 12c:	sub	sp, sp, #12
 130:	str	r0, [fp, #-8]
 134:	ldr	r3, [fp, #-8]
 138:	cmp	r3, #0
 13c:	bne	148 <vetor_tamanho+0x24>
 140:	mvn	r3, #0
 144:	b	150 <vetor_tamanho+0x2c>
 148:	ldr	r3, [fp, #-8]
 14c:	ldr	r3, [r3]
 150:	mov	r0, r3
 154:	add	sp, fp, #0
 158:	pop	{fp}		; (ldr fp, [sp], #4)
 15c:	bx	lr

00000160 <vetor_elemento>:
 160:	push	{fp}		; (str fp, [sp, #-4]!)
 164:	add	fp, sp, #0
 168:	sub	sp, sp, #12
 16c:	str	r0, [fp, #-8]
 170:	str	r1, [fp, #-12]
 174:	ldr	r3, [fp, #-8]
 178:	cmp	r3, #0
 17c:	beq	1a0 <vetor_elemento+0x40>
 180:	ldr	r3, [fp, #-12]
 184:	cmp	r3, #0
 188:	blt	1a0 <vetor_elemento+0x40>
 18c:	ldr	r3, [fp, #-8]
 190:	ldr	r2, [r3]
 194:	ldr	r3, [fp, #-12]
 198:	cmp	r2, r3
 19c:	bgt	1a8 <vetor_elemento+0x48>
 1a0:	mov	r3, #-2147483648	; 0x80000000
 1a4:	b	1c0 <vetor_elemento+0x60>
 1a8:	ldr	r3, [fp, #-8]
 1ac:	ldr	r2, [r3, #8]
 1b0:	ldr	r3, [fp, #-12]
 1b4:	lsl	r3, r3, #2
 1b8:	add	r3, r2, r3
 1bc:	ldr	r3, [r3]
 1c0:	mov	r0, r3
 1c4:	add	sp, fp, #0
 1c8:	pop	{fp}		; (ldr fp, [sp], #4)
 1cc:	bx	lr

000001d0 <vetor_insere>:
 1d0:	push	{fp, lr}
 1d4:	add	fp, sp, #4
 1d8:	sub	sp, sp, #24
 1dc:	str	r0, [fp, #-16]
 1e0:	str	r1, [fp, #-20]	; 0xffffffec
 1e4:	str	r2, [fp, #-24]	; 0xffffffe8
 1e8:	ldr	r3, [fp, #-16]
 1ec:	cmp	r3, #0
 1f0:	beq	214 <vetor_insere+0x44>
 1f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1f8:	cmn	r3, #1
 1fc:	blt	214 <vetor_insere+0x44>
 200:	ldr	r3, [fp, #-16]
 204:	ldr	r2, [r3]
 208:	ldr	r3, [fp, #-24]	; 0xffffffe8
 20c:	cmp	r2, r3
 210:	bge	21c <vetor_insere+0x4c>
 214:	mvn	r3, #0
 218:	b	35c <vetor_insere+0x18c>
 21c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 220:	cmn	r3, #1
 224:	bne	234 <vetor_insere+0x64>
 228:	ldr	r3, [fp, #-16]
 22c:	ldr	r3, [r3]
 230:	str	r3, [fp, #-24]	; 0xffffffe8
 234:	ldr	r3, [fp, #-16]
 238:	ldr	r2, [r3]
 23c:	ldr	r3, [fp, #-16]
 240:	ldr	r3, [r3, #4]
 244:	cmp	r2, r3
 248:	bne	2c4 <vetor_insere+0xf4>
 24c:	ldr	r3, [fp, #-16]
 250:	ldr	r3, [r3, #4]
 254:	cmp	r3, #0
 258:	bne	26c <vetor_insere+0x9c>
 25c:	ldr	r3, [fp, #-16]
 260:	mov	r2, #1
 264:	str	r2, [r3, #4]
 268:	b	280 <vetor_insere+0xb0>
 26c:	ldr	r3, [fp, #-16]
 270:	ldr	r3, [r3, #4]
 274:	lsl	r2, r3, #1
 278:	ldr	r3, [fp, #-16]
 27c:	str	r2, [r3, #4]
 280:	ldr	r3, [fp, #-16]
 284:	ldr	r2, [r3, #8]
 288:	ldr	r3, [fp, #-16]
 28c:	ldr	r3, [r3, #4]
 290:	lsl	r3, r3, #2
 294:	mov	r1, r3
 298:	mov	r0, r2
 29c:	bl	0 <realloc>
 2a0:	mov	r2, r0
 2a4:	ldr	r3, [fp, #-16]
 2a8:	str	r2, [r3, #8]
 2ac:	ldr	r3, [fp, #-16]
 2b0:	ldr	r3, [r3, #8]
 2b4:	cmp	r3, #0
 2b8:	bne	2c4 <vetor_insere+0xf4>
 2bc:	mvn	r3, #0
 2c0:	b	35c <vetor_insere+0x18c>
 2c4:	ldr	r3, [fp, #-16]
 2c8:	ldr	r3, [r3]
 2cc:	sub	r3, r3, #1
 2d0:	str	r3, [fp, #-8]
 2d4:	b	318 <vetor_insere+0x148>
 2d8:	ldr	r3, [fp, #-16]
 2dc:	ldr	r2, [r3, #8]
 2e0:	ldr	r3, [fp, #-8]
 2e4:	add	r3, r3, #1
 2e8:	lsl	r3, r3, #2
 2ec:	add	r3, r2, r3
 2f0:	ldr	r2, [fp, #-16]
 2f4:	ldr	r1, [r2, #8]
 2f8:	ldr	r2, [fp, #-8]
 2fc:	lsl	r2, r2, #2
 300:	add	r2, r1, r2
 304:	ldr	r2, [r2]
 308:	str	r2, [r3]
 30c:	ldr	r3, [fp, #-8]
 310:	sub	r3, r3, #1
 314:	str	r3, [fp, #-8]
 318:	ldr	r2, [fp, #-8]
 31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 320:	cmp	r2, r3
 324:	bge	2d8 <vetor_insere+0x108>
 328:	ldr	r3, [fp, #-16]
 32c:	ldr	r2, [r3, #8]
 330:	ldr	r3, [fp, #-24]	; 0xffffffe8
 334:	lsl	r3, r3, #2
 338:	add	r3, r2, r3
 33c:	ldr	r2, [fp, #-20]	; 0xffffffec
 340:	str	r2, [r3]
 344:	ldr	r3, [fp, #-16]
 348:	ldr	r3, [r3]
 34c:	add	r2, r3, #1
 350:	ldr	r3, [fp, #-16]
 354:	str	r2, [r3]
 358:	ldr	r3, [fp, #-24]	; 0xffffffe8
 35c:	mov	r0, r3
 360:	sub	sp, fp, #4
 364:	pop	{fp, pc}

00000368 <vetor_remove>:
 368:	push	{fp}		; (str fp, [sp, #-4]!)
 36c:	add	fp, sp, #0
 370:	sub	sp, sp, #20
 374:	str	r0, [fp, #-16]
 378:	str	r1, [fp, #-20]	; 0xffffffec
 37c:	ldr	r3, [fp, #-16]
 380:	cmp	r3, #0
 384:	beq	3a8 <vetor_remove+0x40>
 388:	ldr	r3, [fp, #-20]	; 0xffffffec
 38c:	cmp	r3, #0
 390:	blt	3a8 <vetor_remove+0x40>
 394:	ldr	r3, [fp, #-16]
 398:	ldr	r2, [r3]
 39c:	ldr	r3, [fp, #-20]	; 0xffffffec
 3a0:	cmp	r2, r3
 3a4:	bgt	3b0 <vetor_remove+0x48>
 3a8:	mvn	r3, #0
 3ac:	b	42c <vetor_remove+0xc4>
 3b0:	ldr	r3, [fp, #-20]	; 0xffffffec
 3b4:	add	r3, r3, #1
 3b8:	str	r3, [fp, #-8]
 3bc:	b	400 <vetor_remove+0x98>
 3c0:	ldr	r3, [fp, #-16]
 3c4:	ldr	r2, [r3, #8]
 3c8:	ldr	r3, [fp, #-8]
 3cc:	sub	r3, r3, #-1073741823	; 0xc0000001
 3d0:	lsl	r3, r3, #2
 3d4:	add	r3, r2, r3
 3d8:	ldr	r2, [fp, #-16]
 3dc:	ldr	r1, [r2, #8]
 3e0:	ldr	r2, [fp, #-8]
 3e4:	lsl	r2, r2, #2
 3e8:	add	r2, r1, r2
 3ec:	ldr	r2, [r2]
 3f0:	str	r2, [r3]
 3f4:	ldr	r3, [fp, #-8]
 3f8:	add	r3, r3, #1
 3fc:	str	r3, [fp, #-8]
 400:	ldr	r3, [fp, #-16]
 404:	ldr	r2, [r3]
 408:	ldr	r3, [fp, #-8]
 40c:	cmp	r2, r3
 410:	bgt	3c0 <vetor_remove+0x58>
 414:	ldr	r3, [fp, #-16]
 418:	ldr	r3, [r3]
 41c:	sub	r2, r3, #1
 420:	ldr	r3, [fp, #-16]
 424:	str	r2, [r3]
 428:	mov	r3, #0
 42c:	mov	r0, r3
 430:	add	sp, fp, #0
 434:	pop	{fp}		; (ldr fp, [sp], #4)
 438:	bx	lr

0000043c <vetor_pesquisa>:
 43c:	push	{fp}		; (str fp, [sp, #-4]!)
 440:	add	fp, sp, #0
 444:	sub	sp, sp, #20
 448:	str	r0, [fp, #-16]
 44c:	str	r1, [fp, #-20]	; 0xffffffec
 450:	ldr	r3, [fp, #-16]
 454:	cmp	r3, #0
 458:	bne	464 <vetor_pesquisa+0x28>
 45c:	mvn	r3, #0
 460:	b	4c0 <vetor_pesquisa+0x84>
 464:	mov	r3, #0
 468:	str	r3, [fp, #-8]
 46c:	b	4a8 <vetor_pesquisa+0x6c>
 470:	ldr	r3, [fp, #-16]
 474:	ldr	r2, [r3, #8]
 478:	ldr	r3, [fp, #-8]
 47c:	lsl	r3, r3, #2
 480:	add	r3, r2, r3
 484:	ldr	r2, [r3]
 488:	ldr	r3, [fp, #-20]	; 0xffffffec
 48c:	cmp	r2, r3
 490:	bne	49c <vetor_pesquisa+0x60>
 494:	ldr	r3, [fp, #-8]
 498:	b	4c0 <vetor_pesquisa+0x84>
 49c:	ldr	r3, [fp, #-8]
 4a0:	add	r3, r3, #1
 4a4:	str	r3, [fp, #-8]
 4a8:	ldr	r3, [fp, #-16]
 4ac:	ldr	r2, [r3]
 4b0:	ldr	r3, [fp, #-8]
 4b4:	cmp	r2, r3
 4b8:	bgt	470 <vetor_pesquisa+0x34>
 4bc:	mvn	r3, #0
 4c0:	mov	r0, r3
 4c4:	add	sp, fp, #0
 4c8:	pop	{fp}		; (ldr fp, [sp], #4)
 4cc:	bx	lr

000004d0 <vetor_ordena>:
 4d0:	push	{fp}		; (str fp, [sp, #-4]!)
 4d4:	add	fp, sp, #0
 4d8:	sub	sp, sp, #28
 4dc:	str	r0, [fp, #-24]	; 0xffffffe8
 4e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 4e4:	cmp	r3, #0
 4e8:	bne	4f4 <vetor_ordena+0x24>
 4ec:	mvn	r3, #0
 4f0:	b	5dc <vetor_ordena+0x10c>
 4f4:	mov	r3, #1
 4f8:	str	r3, [fp, #-8]
 4fc:	b	5c4 <vetor_ordena+0xf4>
 500:	ldr	r3, [fp, #-24]	; 0xffffffe8
 504:	ldr	r2, [r3, #8]
 508:	ldr	r3, [fp, #-8]
 50c:	lsl	r3, r3, #2
 510:	add	r3, r2, r3
 514:	ldr	r3, [r3]
 518:	str	r3, [fp, #-16]
 51c:	ldr	r3, [fp, #-8]
 520:	str	r3, [fp, #-12]
 524:	b	568 <vetor_ordena+0x98>
 528:	ldr	r3, [fp, #-24]	; 0xffffffe8
 52c:	ldr	r2, [r3, #8]
 530:	ldr	r3, [fp, #-12]
 534:	lsl	r3, r3, #2
 538:	add	r3, r2, r3
 53c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 540:	ldr	r1, [r2, #8]
 544:	ldr	r2, [fp, #-12]
 548:	sub	r2, r2, #-1073741823	; 0xc0000001
 54c:	lsl	r2, r2, #2
 550:	add	r2, r1, r2
 554:	ldr	r2, [r2]
 558:	str	r2, [r3]
 55c:	ldr	r3, [fp, #-12]
 560:	sub	r3, r3, #1
 564:	str	r3, [fp, #-12]
 568:	ldr	r3, [fp, #-12]
 56c:	cmp	r3, #0
 570:	ble	59c <vetor_ordena+0xcc>
 574:	ldr	r3, [fp, #-24]	; 0xffffffe8
 578:	ldr	r2, [r3, #8]
 57c:	ldr	r3, [fp, #-12]
 580:	sub	r3, r3, #-1073741823	; 0xc0000001
 584:	lsl	r3, r3, #2
 588:	add	r3, r2, r3
 58c:	ldr	r2, [r3]
 590:	ldr	r3, [fp, #-16]
 594:	cmp	r2, r3
 598:	bgt	528 <vetor_ordena+0x58>
 59c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5a0:	ldr	r2, [r3, #8]
 5a4:	ldr	r3, [fp, #-12]
 5a8:	lsl	r3, r3, #2
 5ac:	add	r3, r2, r3
 5b0:	ldr	r2, [fp, #-16]
 5b4:	str	r2, [r3]
 5b8:	ldr	r3, [fp, #-8]
 5bc:	add	r3, r3, #1
 5c0:	str	r3, [fp, #-8]
 5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5c8:	ldr	r2, [r3]
 5cc:	ldr	r3, [fp, #-8]
 5d0:	cmp	r2, r3
 5d4:	bgt	500 <vetor_ordena+0x30>
 5d8:	mov	r3, #0
 5dc:	mov	r0, r3
 5e0:	add	sp, fp, #0
 5e4:	pop	{fp}		; (ldr fp, [sp], #4)
 5e8:	bx	lr
