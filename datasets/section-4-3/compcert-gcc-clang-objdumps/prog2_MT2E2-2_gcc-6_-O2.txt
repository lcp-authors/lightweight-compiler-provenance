
../compcert-repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c50 <.init>:
   10c50:	push	{r3, lr}
   10c54:	bl	10fbc <_start@@Base+0x3c>
   10c58:	pop	{r3, pc}

Disassembly of section .plt:

00010c5c <calloc@plt-0x14>:
   10c5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c60:	ldr	lr, [pc, #4]	; 10c6c <calloc@plt-0x4>
   10c64:	add	lr, pc, lr
   10c68:	ldr	pc, [lr, #8]!
   10c6c:	muleq	r1, r4, r3

00010c70 <calloc@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #916]!	; 0x394

00010c7c <raise@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #908]!	; 0x38c

00010c88 <strcmp@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #900]!	; 0x384

00010c94 <strtol@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #892]!	; 0x37c

00010ca0 <printf@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #884]!	; 0x374

00010cac <__isoc99_fscanf@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #876]!	; 0x36c

00010cb8 <fopen@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #868]!	; 0x364

00010cc4 <free@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #860]!	; 0x35c

00010cd0 <memcpy@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #852]!	; 0x354

00010cdc <realloc@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #844]!	; 0x34c

00010ce8 <strcpy@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #836]!	; 0x344

00010cf4 <puts@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #828]!	; 0x33c

00010d00 <malloc@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #820]!	; 0x334

00010d0c <__libc_start_main@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #73728	; 0x12000
   10d14:	ldr	pc, [ip, #812]!	; 0x32c

00010d18 <__gmon_start__@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #73728	; 0x12000
   10d20:	ldr	pc, [ip, #804]!	; 0x324

00010d24 <strlen@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #73728	; 0x12000
   10d2c:	ldr	pc, [ip, #796]!	; 0x31c

00010d30 <putchar@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #73728	; 0x12000
   10d38:	ldr	pc, [ip, #788]!	; 0x314

00010d3c <fclose@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #73728	; 0x12000
   10d44:	ldr	pc, [ip, #780]!	; 0x30c

00010d48 <sprintf@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #73728	; 0x12000
   10d50:	ldr	pc, [ip, #772]!	; 0x304

00010d54 <abort@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #73728	; 0x12000
   10d5c:	ldr	pc, [ip, #764]!	; 0x2fc

Disassembly of section .text:

00010d60 <main@@Base>:
   10d60:	push	{r4, r5, r6, r7, r8, lr}
   10d64:	sub	sp, sp, #32
   10d68:	ldr	r0, [pc, #492]	; 10f5c <main@@Base+0x1fc>
   10d6c:	bl	10cf4 <puts@plt>
   10d70:	mov	r1, #1
   10d74:	mov	r0, #8
   10d78:	bl	112c0 <grafo_novo@@Base>
   10d7c:	mov	r2, #3
   10d80:	mov	r1, #1
   10d84:	mov	r4, #0
   10d88:	ldr	r7, [pc, #464]	; 10f60 <main@@Base+0x200>
   10d8c:	mov	r6, r0
   10d90:	bl	11398 <grafo_adiciona@@Base>
   10d94:	mov	r0, r6
   10d98:	mov	r2, #3
   10d9c:	mov	r1, #2
   10da0:	bl	11398 <grafo_adiciona@@Base>
   10da4:	mov	r0, r6
   10da8:	mov	r2, #4
   10dac:	mov	r1, #2
   10db0:	bl	11398 <grafo_adiciona@@Base>
   10db4:	mov	r0, r6
   10db8:	mov	r2, #5
   10dbc:	mov	r1, #2
   10dc0:	bl	11398 <grafo_adiciona@@Base>
   10dc4:	mov	r0, r6
   10dc8:	mov	r2, #2
   10dcc:	mov	r1, #3
   10dd0:	bl	11398 <grafo_adiciona@@Base>
   10dd4:	mov	r0, r6
   10dd8:	mov	r2, #4
   10ddc:	mov	r1, #3
   10de0:	bl	11398 <grafo_adiciona@@Base>
   10de4:	mov	r0, r6
   10de8:	mov	r2, #6
   10dec:	mov	r1, #4
   10df0:	bl	11398 <grafo_adiciona@@Base>
   10df4:	mov	r0, r6
   10df8:	mov	r2, #7
   10dfc:	mov	r1, #4
   10e00:	bl	11398 <grafo_adiciona@@Base>
   10e04:	mov	r0, r6
   10e08:	mov	r2, #4
   10e0c:	mov	r1, #5
   10e10:	bl	11398 <grafo_adiciona@@Base>
   10e14:	mov	r0, r6
   10e18:	mov	r2, #6
   10e1c:	mov	r1, #5
   10e20:	bl	11398 <grafo_adiciona@@Base>
   10e24:	mov	r0, r6
   10e28:	mov	r2, #7
   10e2c:	mov	r1, #5
   10e30:	bl	11398 <grafo_adiciona@@Base>
   10e34:	mov	r0, r6
   10e38:	mov	r2, #7
   10e3c:	mov	r1, #6
   10e40:	bl	11398 <grafo_adiciona@@Base>
   10e44:	mov	r3, #5
   10e48:	mov	r2, #7
   10e4c:	mov	r1, #1
   10e50:	mov	r0, r6
   10e54:	bl	11174 <descobre_caminho@@Base>
   10e58:	mov	r5, r0
   10e5c:	ldr	r0, [pc, #256]	; 10f64 <main@@Base+0x204>
   10e60:	bl	10ca0 <printf@plt>
   10e64:	b	10e78 <main@@Base+0x118>
   10e68:	bl	11f40 <lista_elemento@@Base>
   10e6c:	mov	r1, r0
   10e70:	mov	r0, r7
   10e74:	bl	10ca0 <printf@plt>
   10e78:	mov	r0, r5
   10e7c:	bl	11f30 <lista_tamanho@@Base>
   10e80:	mov	r1, r4
   10e84:	cmp	r4, r0
   10e88:	mov	r0, r5
   10e8c:	add	r4, r4, #1
   10e90:	blt	10e68 <main@@Base+0x108>
   10e94:	ldr	r0, [pc, #204]	; 10f68 <main@@Base+0x208>
   10e98:	bl	10cf4 <puts@plt>
   10e9c:	mov	r0, r6
   10ea0:	bl	11318 <grafo_apaga@@Base>
   10ea4:	mov	r0, r5
   10ea8:	bl	11ef0 <lista_apaga@@Base>
   10eac:	ldr	r0, [pc, #184]	; 10f6c <main@@Base+0x20c>
   10eb0:	bl	10cf4 <puts@plt>
   10eb4:	ldr	r1, [pc, #180]	; 10f70 <main@@Base+0x210>
   10eb8:	ldr	r0, [pc, #180]	; 10f74 <main@@Base+0x214>
   10ebc:	bl	10cb8 <fopen@plt>
   10ec0:	ldr	r8, [pc, #176]	; 10f78 <main@@Base+0x218>
   10ec4:	mvn	r4, #0
   10ec8:	mov	r6, r0
   10ecc:	bl	11ed0 <lista_nova@@Base>
   10ed0:	mov	r5, r0
   10ed4:	bl	11ed0 <lista_nova@@Base>
   10ed8:	mov	r7, r0
   10edc:	b	10ef4 <main@@Base+0x194>
   10ee0:	bl	12014 <lista_insere@@Base>
   10ee4:	mov	r2, r4
   10ee8:	mov	r1, sp
   10eec:	mov	r0, r7
   10ef0:	bl	12014 <lista_insere@@Base>
   10ef4:	add	r2, sp, #8
   10ef8:	mov	r1, r8
   10efc:	mov	r3, sp
   10f00:	mov	r0, r6
   10f04:	bl	10cac <__isoc99_fscanf@plt>
   10f08:	mov	r2, r4
   10f0c:	add	r1, sp, #8
   10f10:	cmp	r0, #2
   10f14:	mov	r0, r5
   10f18:	beq	10ee0 <main@@Base+0x180>
   10f1c:	mov	r2, #4
   10f20:	mov	r1, r7
   10f24:	bl	110a8 <_start@@Base+0x128>
   10f28:	cmp	r0, #0
   10f2c:	bne	10f38 <main@@Base+0x1d8>
   10f30:	ldr	r0, [pc, #68]	; 10f7c <main@@Base+0x21c>
   10f34:	bl	10cf4 <puts@plt>
   10f38:	mov	r0, r5
   10f3c:	bl	11ef0 <lista_apaga@@Base>
   10f40:	mov	r0, r7
   10f44:	bl	11ef0 <lista_apaga@@Base>
   10f48:	mov	r0, r6
   10f4c:	bl	10d3c <fclose@plt>
   10f50:	mov	r0, #0
   10f54:	add	sp, sp, #32
   10f58:	pop	{r4, r5, r6, r7, r8, pc}
   10f5c:	andeq	r2, r1, ip, asr #13
   10f60:	andeq	r2, r1, r0, lsr #14
   10f64:	andeq	r2, r1, r0, ror #13
   10f68:	andeq	r2, r1, r4, lsr #14
   10f6c:	andeq	r2, r1, r8, lsr #14
   10f70:	andeq	r2, r1, ip, lsr r7
   10f74:	andeq	r2, r1, r0, asr #14
   10f78:	andeq	r2, r1, ip, asr #14
   10f7c:	andeq	r2, r1, r4, asr r7

00010f80 <_start@@Base>:
   10f80:	mov	fp, #0
   10f84:	mov	lr, #0
   10f88:	pop	{r1}		; (ldr r1, [sp], #4)
   10f8c:	mov	r2, sp
   10f90:	push	{r2}		; (str r2, [sp, #-4]!)
   10f94:	push	{r0}		; (str r0, [sp, #-4]!)
   10f98:	ldr	ip, [pc, #16]	; 10fb0 <_start@@Base+0x30>
   10f9c:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa0:	ldr	r0, [pc, #12]	; 10fb4 <_start@@Base+0x34>
   10fa4:	ldr	r3, [pc, #12]	; 10fb8 <_start@@Base+0x38>
   10fa8:	bl	10d0c <__libc_start_main@plt>
   10fac:	bl	10d54 <abort@plt>
   10fb0:			; <UNDEFINED> instruction: 0x000126b0
   10fb4:	andeq	r0, r1, r0, ror #26
   10fb8:	andeq	r2, r1, r0, asr r6
   10fbc:	ldr	r3, [pc, #20]	; 10fd8 <_start@@Base+0x58>
   10fc0:	ldr	r2, [pc, #20]	; 10fdc <_start@@Base+0x5c>
   10fc4:	add	r3, pc, r3
   10fc8:	ldr	r2, [r3, r2]
   10fcc:	cmp	r2, #0
   10fd0:	bxeq	lr
   10fd4:	b	10d18 <__gmon_start__@plt>
   10fd8:	andeq	r2, r1, r4, lsr r0
   10fdc:	andeq	r0, r0, ip, asr r0
   10fe0:	ldr	r3, [pc, #28]	; 11004 <_start@@Base+0x84>
   10fe4:	ldr	r0, [pc, #28]	; 11008 <_start@@Base+0x88>
   10fe8:	sub	r3, r3, r0
   10fec:	cmp	r3, #6
   10ff0:	bxls	lr
   10ff4:	ldr	r3, [pc, #16]	; 1100c <_start@@Base+0x8c>
   10ff8:	cmp	r3, #0
   10ffc:	bxeq	lr
   11000:	bx	r3
   11004:	andeq	r3, r2, fp, rrx
   11008:	andeq	r3, r2, r8, rrx
   1100c:	andeq	r0, r0, r0
   11010:	ldr	r1, [pc, #36]	; 1103c <_start@@Base+0xbc>
   11014:	ldr	r0, [pc, #36]	; 11040 <_start@@Base+0xc0>
   11018:	sub	r1, r1, r0
   1101c:	asr	r1, r1, #2
   11020:	add	r1, r1, r1, lsr #31
   11024:	asrs	r1, r1, #1
   11028:	bxeq	lr
   1102c:	ldr	r3, [pc, #16]	; 11044 <_start@@Base+0xc4>
   11030:	cmp	r3, #0
   11034:	bxeq	lr
   11038:	bx	r3
   1103c:	andeq	r3, r2, r8, rrx
   11040:	andeq	r3, r2, r8, rrx
   11044:	andeq	r0, r0, r0
   11048:	push	{r4, lr}
   1104c:	ldr	r4, [pc, #24]	; 1106c <_start@@Base+0xec>
   11050:	ldrb	r3, [r4]
   11054:	cmp	r3, #0
   11058:	popne	{r4, pc}
   1105c:	bl	10fe0 <_start@@Base+0x60>
   11060:	mov	r3, #1
   11064:	strb	r3, [r4]
   11068:	pop	{r4, pc}
   1106c:	andeq	r3, r2, r8, rrx
   11070:	ldr	r0, [pc, #40]	; 110a0 <_start@@Base+0x120>
   11074:	ldr	r3, [r0]
   11078:	cmp	r3, #0
   1107c:	bne	11084 <_start@@Base+0x104>
   11080:	b	11010 <_start@@Base+0x90>
   11084:	ldr	r3, [pc, #24]	; 110a4 <_start@@Base+0x124>
   11088:	cmp	r3, #0
   1108c:	beq	11080 <_start@@Base+0x100>
   11090:	push	{r4, lr}
   11094:	blx	r3
   11098:	pop	{r4, lr}
   1109c:	b	11010 <_start@@Base+0x90>
   110a0:	andeq	r2, r2, r4, lsl pc
   110a4:	andeq	r0, r0, r0
   110a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110ac:	mov	r6, r0
   110b0:	sub	sp, sp, #24
   110b4:	mov	r0, r2
   110b8:	mov	r5, r2
   110bc:	mov	r8, r1
   110c0:	bl	11a6c <heap_nova@@Base>
   110c4:	cmp	r5, #0
   110c8:	mov	r7, r0
   110cc:	ble	1115c <_start@@Base+0x1dc>
   110d0:	mov	r4, #0
   110d4:	mov	sl, r4
   110d8:	mov	r9, #10
   110dc:	mov	r1, r4
   110e0:	mov	r0, r6
   110e4:	bl	11f40 <lista_elemento@@Base>
   110e8:	mov	r1, r0
   110ec:	add	r0, sp, #4
   110f0:	bl	10ce8 <strcpy@plt>
   110f4:	mov	r1, r4
   110f8:	mov	r0, r8
   110fc:	bl	11f40 <lista_elemento@@Base>
   11100:	mov	r2, r9
   11104:	mov	r1, sl
   11108:	bl	10c94 <strtol@plt>
   1110c:	add	r4, r4, #1
   11110:	add	r1, sp, #4
   11114:	mov	r2, r0
   11118:	mov	r0, r7
   1111c:	bl	11b98 <heap_insere@@Base>
   11120:	cmp	r5, r4
   11124:	bne	110dc <_start@@Base+0x15c>
   11128:	mov	r6, #0
   1112c:	ldr	r8, [pc, #60]	; 11170 <_start@@Base+0x1f0>
   11130:	mov	r5, r6
   11134:	ldr	r3, [r7, #8]
   11138:	add	r5, r5, #1
   1113c:	mov	r1, r5
   11140:	ldr	r3, [r3, r6]
   11144:	mov	r0, r8
   11148:	add	r6, r6, #4
   1114c:	ldr	r2, [r3, #4]
   11150:	bl	10ca0 <printf@plt>
   11154:	cmp	r4, r5
   11158:	bne	11134 <_start@@Base+0x1b4>
   1115c:	mov	r0, r7
   11160:	bl	11ac4 <heap_apaga@@Base>
   11164:	mov	r0, #1
   11168:	add	sp, sp, #24
   1116c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11170:	andeq	r2, r1, r0, asr #13

00011174 <descobre_caminho@@Base>:
   11174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11178:	sub	sp, sp, #20
   1117c:	mov	sl, r3
   11180:	mov	r9, r0
   11184:	mov	r4, r1
   11188:	str	r2, [sp, #4]
   1118c:	bl	11ed0 <lista_nova@@Base>
   11190:	add	r3, sp, #12
   11194:	mov	r1, r4
   11198:	mov	r2, sl
   1119c:	mov	r6, r0
   111a0:	mov	r0, r9
   111a4:	bl	11878 <grafo_bfs@@Base>
   111a8:	ldr	r3, [sp, #12]
   111ac:	cmp	r3, #0
   111b0:	str	r0, [sp]
   111b4:	ble	11200 <descobre_caminho@@Base+0x8c>
   111b8:	ldr	r3, [sp]
   111bc:	ldr	r8, [pc, #192]	; 11284 <descobre_caminho@@Base+0x110>
   111c0:	sub	fp, r3, #4
   111c4:	mov	r5, #0
   111c8:	add	r4, sp, #8
   111cc:	mvn	r7, #0
   111d0:	ldr	r2, [fp, #4]!
   111d4:	mov	r1, r8
   111d8:	mov	r0, r4
   111dc:	bl	10d48 <sprintf@plt>
   111e0:	mov	r2, r7
   111e4:	mov	r1, r4
   111e8:	mov	r0, r6
   111ec:	bl	12014 <lista_insere@@Base>
   111f0:	ldr	r3, [sp, #12]
   111f4:	add	r5, r5, #1
   111f8:	cmp	r3, r5
   111fc:	bgt	111d0 <descobre_caminho@@Base+0x5c>
   11200:	add	r3, sp, #12
   11204:	mov	r1, sl
   11208:	ldr	r2, [sp, #4]
   1120c:	mov	r0, r9
   11210:	bl	11878 <grafo_bfs@@Base>
   11214:	ldr	r3, [sp, #12]
   11218:	cmp	r3, #1
   1121c:	mov	sl, r0
   11220:	ble	11268 <descobre_caminho@@Base+0xf4>
   11224:	ldr	r9, [pc, #88]	; 11284 <descobre_caminho@@Base+0x110>
   11228:	mov	r7, r0
   1122c:	mov	r5, #1
   11230:	add	r4, sp, #8
   11234:	mvn	r8, #0
   11238:	ldr	r2, [r7, #4]!
   1123c:	mov	r1, r9
   11240:	mov	r0, r4
   11244:	bl	10d48 <sprintf@plt>
   11248:	mov	r2, r8
   1124c:	mov	r1, r4
   11250:	mov	r0, r6
   11254:	bl	12014 <lista_insere@@Base>
   11258:	ldr	r3, [sp, #12]
   1125c:	add	r5, r5, #1
   11260:	cmp	r3, r5
   11264:	bgt	11238 <descobre_caminho@@Base+0xc4>
   11268:	mov	r0, sl
   1126c:	bl	10cc4 <free@plt>
   11270:	ldr	r0, [sp]
   11274:	bl	10cc4 <free@plt>
   11278:	mov	r0, r6
   1127c:	add	sp, sp, #20
   11280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11284:	andeq	r2, r1, r8, asr #13

00011288 <simula_acontecimentos@@Base>:
   11288:	cmp	r2, #20
   1128c:	ble	11298 <simula_acontecimentos@@Base+0x10>
   11290:	mov	r0, #0
   11294:	bx	lr
   11298:	b	110a8 <_start@@Base+0x128>

0001129c <cria_no@@Base>:
   1129c:	push	{r4, lr}
   112a0:	mov	r4, r0
   112a4:	mov	r0, #8
   112a8:	bl	10d00 <malloc@plt>
   112ac:	cmp	r0, #0
   112b0:	movne	r3, #0
   112b4:	strne	r4, [r0]
   112b8:	strne	r3, [r0, #4]
   112bc:	pop	{r4, pc}

000112c0 <grafo_novo@@Base>:
   112c0:	push	{r4, r5, r6, lr}
   112c4:	mov	r5, r0
   112c8:	mov	r0, #12
   112cc:	mov	r6, r1
   112d0:	bl	10d00 <malloc@plt>
   112d4:	subs	r4, r0, #0
   112d8:	beq	11300 <grafo_novo@@Base+0x40>
   112dc:	str	r5, [r4, #4]
   112e0:	mov	r0, r5
   112e4:	str	r6, [r4]
   112e8:	mov	r1, #8
   112ec:	bl	10c70 <calloc@plt>
   112f0:	cmp	r0, #0
   112f4:	mov	r5, r0
   112f8:	str	r0, [r4, #8]
   112fc:	beq	11308 <grafo_novo@@Base+0x48>
   11300:	mov	r0, r4
   11304:	pop	{r4, r5, r6, pc}
   11308:	mov	r0, r4
   1130c:	bl	10cc4 <free@plt>
   11310:	mov	r4, r5
   11314:	b	11300 <grafo_novo@@Base+0x40>

00011318 <grafo_apaga@@Base>:
   11318:	push	{r4, r5, r6, lr}
   1131c:	subs	r5, r0, #0
   11320:	popeq	{r4, r5, r6, pc}
   11324:	ldr	r2, [r5, #8]
   11328:	cmp	r2, #0
   1132c:	beq	1138c <grafo_apaga@@Base+0x74>
   11330:	ldr	r1, [r5, #4]
   11334:	cmp	r1, #0
   11338:	movgt	r6, #0
   1133c:	ble	11384 <grafo_apaga@@Base+0x6c>
   11340:	lsl	r4, r6, #3
   11344:	add	r3, r2, r4
   11348:	ldr	r0, [r3, #4]
   1134c:	cmp	r0, #0
   11350:	beq	11378 <grafo_apaga@@Base+0x60>
   11354:	ldr	r2, [r0, #4]
   11358:	str	r2, [r3, #4]
   1135c:	bl	10cc4 <free@plt>
   11360:	ldr	r2, [r5, #8]
   11364:	add	r3, r2, r4
   11368:	ldr	r0, [r3, #4]
   1136c:	cmp	r0, #0
   11370:	bne	11354 <grafo_apaga@@Base+0x3c>
   11374:	ldr	r1, [r5, #4]
   11378:	add	r6, r6, #1
   1137c:	cmp	r1, r6
   11380:	bgt	11340 <grafo_apaga@@Base+0x28>
   11384:	mov	r0, r2
   11388:	bl	10cc4 <free@plt>
   1138c:	mov	r0, r5
   11390:	pop	{r4, r5, r6, lr}
   11394:	b	10cc4 <free@plt>

00011398 <grafo_adiciona@@Base>:
   11398:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1139c:	subs	r6, r0, #0
   113a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113a4:	ldr	r8, [r6, #8]
   113a8:	add	r9, r8, r1, lsl #3
   113ac:	ldr	r5, [r9, #4]
   113b0:	cmp	r5, #0
   113b4:	beq	113e4 <grafo_adiciona@@Base+0x4c>
   113b8:	ldr	r3, [r5]
   113bc:	cmp	r2, r3
   113c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113c4:	mov	r3, r5
   113c8:	b	113d8 <grafo_adiciona@@Base+0x40>
   113cc:	ldr	ip, [r3]
   113d0:	cmp	r2, ip
   113d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113d8:	ldr	r3, [r3, #4]
   113dc:	cmp	r3, #0
   113e0:	bne	113cc <grafo_adiciona@@Base+0x34>
   113e4:	mov	r0, #8
   113e8:	mov	r4, r2
   113ec:	mov	r7, r1
   113f0:	bl	10d00 <malloc@plt>
   113f4:	cmp	r0, #0
   113f8:	beq	11450 <grafo_adiciona@@Base+0xb8>
   113fc:	ldr	r2, [r6]
   11400:	ldr	r3, [r8, r7, lsl #3]
   11404:	cmp	r2, #0
   11408:	add	r3, r3, #1
   1140c:	stm	r0, {r4, r5}
   11410:	str	r0, [r9, #4]
   11414:	str	r3, [r8, r7, lsl #3]
   11418:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1141c:	mov	r0, #8
   11420:	bl	10d00 <malloc@plt>
   11424:	add	r2, r8, r4, lsl #3
   11428:	cmp	r0, #0
   1142c:	beq	11458 <grafo_adiciona@@Base+0xc0>
   11430:	ldr	r3, [r8, r4, lsl #3]
   11434:	ldr	r1, [r2, #4]
   11438:	add	r3, r3, #1
   1143c:	str	r7, [r0]
   11440:	str	r1, [r0, #4]
   11444:	str	r0, [r2, #4]
   11448:	str	r3, [r8, r4, lsl #3]
   1144c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11450:	str	r5, [r0, #4]
   11454:	udf	#0
   11458:	ldr	r3, [r2, #4]
   1145c:	str	r3, [r0, #4]
   11460:	udf	#0

00011464 <grafo_remove@@Base>:
   11464:	push	{r4, r5, r6, lr}
   11468:	subs	r6, r0, #0
   1146c:	popeq	{r4, r5, r6, pc}
   11470:	ldr	r3, [r6, #8]
   11474:	add	r3, r3, r1, lsl #3
   11478:	ldr	ip, [r3, #4]
   1147c:	cmp	ip, #0
   11480:	popeq	{r4, r5, r6, pc}
   11484:	mov	r4, r2
   11488:	ldr	r2, [ip]
   1148c:	mov	r5, r1
   11490:	cmp	r2, r4
   11494:	beq	11560 <grafo_remove@@Base+0xfc>
   11498:	ldr	r3, [ip, #4]
   1149c:	cmp	r3, #0
   114a0:	beq	114d0 <grafo_remove@@Base+0x6c>
   114a4:	ldr	r2, [r3]
   114a8:	cmp	r4, r2
   114ac:	bne	114c4 <grafo_remove@@Base+0x60>
   114b0:	b	11530 <grafo_remove@@Base+0xcc>
   114b4:	ldr	ip, [r0]
   114b8:	cmp	r4, ip
   114bc:	beq	11538 <grafo_remove@@Base+0xd4>
   114c0:	mov	r3, r0
   114c4:	ldr	r0, [r3, #4]
   114c8:	cmp	r0, #0
   114cc:	bne	114b4 <grafo_remove@@Base+0x50>
   114d0:	ldr	r3, [r6]
   114d4:	cmp	r3, #0
   114d8:	popne	{r4, r5, r6, pc}
   114dc:	ldr	r3, [r6, #8]
   114e0:	add	r4, r3, r4, lsl #3
   114e4:	ldr	r2, [r4, #4]
   114e8:	ldr	r3, [r2]
   114ec:	cmp	r5, r3
   114f0:	ldr	r3, [r2, #4]
   114f4:	beq	11574 <grafo_remove@@Base+0x110>
   114f8:	cmp	r3, #0
   114fc:	popeq	{r4, r5, r6, pc}
   11500:	ldr	r1, [r3]
   11504:	cmp	r5, r1
   11508:	bne	11520 <grafo_remove@@Base+0xbc>
   1150c:	b	11548 <grafo_remove@@Base+0xe4>
   11510:	ldr	r2, [r0]
   11514:	cmp	r5, r2
   11518:	beq	11550 <grafo_remove@@Base+0xec>
   1151c:	mov	r3, r0
   11520:	ldr	r0, [r3, #4]
   11524:	cmp	r0, #0
   11528:	bne	11510 <grafo_remove@@Base+0xac>
   1152c:	pop	{r4, r5, r6, pc}
   11530:	mov	r0, r3
   11534:	mov	r3, ip
   11538:	ldr	r2, [r0, #4]
   1153c:	str	r2, [r3, #4]
   11540:	bl	10cc4 <free@plt>
   11544:	b	114d0 <grafo_remove@@Base+0x6c>
   11548:	mov	r0, r3
   1154c:	mov	r3, r2
   11550:	ldr	r2, [r0, #4]
   11554:	pop	{r4, r5, r6, lr}
   11558:	str	r2, [r3, #4]
   1155c:	b	10cc4 <free@plt>
   11560:	ldr	r2, [ip, #4]
   11564:	mov	r0, ip
   11568:	str	r2, [r3, #4]
   1156c:	bl	10cc4 <free@plt>
   11570:	b	114d0 <grafo_remove@@Base+0x6c>
   11574:	str	r3, [r4, #4]
   11578:	mov	r0, r2
   1157c:	pop	{r4, r5, r6, lr}
   11580:	b	10cc4 <free@plt>

00011584 <grafo_existe@@Base>:
   11584:	cmp	r0, #0
   11588:	bxeq	lr
   1158c:	ldr	r3, [r0, #8]
   11590:	add	r1, r3, r1, lsl #3
   11594:	ldr	r0, [r1, #4]
   11598:	cmp	r0, #0
   1159c:	bxeq	lr
   115a0:	ldr	r3, [r0]
   115a4:	cmp	r2, r3
   115a8:	bne	115bc <grafo_existe@@Base+0x38>
   115ac:	b	115cc <grafo_existe@@Base+0x48>
   115b0:	ldr	r3, [r0]
   115b4:	cmp	r3, r2
   115b8:	beq	115cc <grafo_existe@@Base+0x48>
   115bc:	ldr	r0, [r0, #4]
   115c0:	cmp	r0, #0
   115c4:	bne	115b0 <grafo_existe@@Base+0x2c>
   115c8:	bx	lr
   115cc:	mov	r0, #1
   115d0:	bx	lr

000115d4 <grafo_imprime@@Base>:
   115d4:	ldr	r3, [r0, #4]
   115d8:	cmp	r3, #0
   115dc:	bxle	lr
   115e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115e4:	mov	r7, r0
   115e8:	ldr	r9, [pc, #120]	; 11668 <grafo_imprime@@Base+0x94>
   115ec:	ldr	sl, [pc, #120]	; 1166c <grafo_imprime@@Base+0x98>
   115f0:	ldr	r5, [pc, #120]	; 11670 <grafo_imprime@@Base+0x9c>
   115f4:	mov	r6, #0
   115f8:	mov	r8, #10
   115fc:	ldr	r3, [r7, #8]
   11600:	mov	r1, r6
   11604:	add	r3, r3, r6, lsl #3
   11608:	mov	r0, r9
   1160c:	ldr	r4, [r3, #4]
   11610:	bl	10ca0 <printf@plt>
   11614:	cmp	r4, #0
   11618:	beq	1164c <grafo_imprime@@Base+0x78>
   1161c:	ldr	r1, [r4]
   11620:	mov	r0, sl
   11624:	bl	10ca0 <printf@plt>
   11628:	ldr	r4, [r4, #4]
   1162c:	cmp	r4, #0
   11630:	beq	1164c <grafo_imprime@@Base+0x78>
   11634:	ldr	r1, [r4]
   11638:	mov	r0, r5
   1163c:	bl	10ca0 <printf@plt>
   11640:	ldr	r4, [r4, #4]
   11644:	cmp	r4, #0
   11648:	bne	11634 <grafo_imprime@@Base+0x60>
   1164c:	mov	r0, r8
   11650:	bl	10d30 <putchar@plt>
   11654:	ldr	r3, [r7, #4]
   11658:	add	r6, r6, #1
   1165c:	cmp	r3, r6
   11660:	bgt	115fc <grafo_imprime@@Base+0x28>
   11664:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11668:	andeq	r2, r1, r0, ror r7
   1166c:	andeq	r2, r1, r8, asr #13
   11670:	andeq	r2, r1, r8, ror r7

00011674 <dfs_helper@@Base>:
   11674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11678:	sub	sp, sp, #12
   1167c:	ldr	r8, [sp, #48]	; 0x30
   11680:	ldr	fp, [r8, r1, lsl #2]
   11684:	cmp	fp, #0
   11688:	movne	fp, #0
   1168c:	bne	11714 <dfs_helper@@Base+0xa0>
   11690:	cmp	r1, r2
   11694:	str	r3, [r8, r1, lsl #2]
   11698:	moveq	fp, r3
   1169c:	beq	11714 <dfs_helper@@Base+0xa0>
   116a0:	mov	sl, r1
   116a4:	ldr	r1, [r0, #4]
   116a8:	mov	r9, r2
   116ac:	cmp	r1, #0
   116b0:	mov	r5, r0
   116b4:	addgt	r7, r3, #1
   116b8:	lslgt	r6, sl, #3
   116bc:	movgt	r4, fp
   116c0:	ble	1170c <dfs_helper@@Base+0x98>
   116c4:	ldr	r3, [r5, #8]
   116c8:	add	r3, r3, r6
   116cc:	ldr	r3, [r3, #4]
   116d0:	cmp	r3, #0
   116d4:	beq	11700 <dfs_helper@@Base+0x8c>
   116d8:	ldr	r2, [r3]
   116dc:	cmp	r4, r2
   116e0:	bne	116f4 <dfs_helper@@Base+0x80>
   116e4:	b	11720 <dfs_helper@@Base+0xac>
   116e8:	ldr	r2, [r3]
   116ec:	cmp	r2, r4
   116f0:	beq	11720 <dfs_helper@@Base+0xac>
   116f4:	ldr	r3, [r3, #4]
   116f8:	cmp	r3, #0
   116fc:	bne	116e8 <dfs_helper@@Base+0x74>
   11700:	add	r4, r4, #1
   11704:	cmp	r1, r4
   11708:	bgt	116c4 <dfs_helper@@Base+0x50>
   1170c:	mov	r3, #0
   11710:	str	r3, [r8, sl, lsl #2]
   11714:	mov	r0, fp
   11718:	add	sp, sp, #12
   1171c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11720:	str	r8, [sp]
   11724:	mov	r3, r7
   11728:	mov	r2, r9
   1172c:	mov	r1, r4
   11730:	mov	r0, r5
   11734:	bl	11674 <dfs_helper@@Base>
   11738:	cmp	r0, #0
   1173c:	bne	11754 <dfs_helper@@Base+0xe0>
   11740:	ldr	r1, [r5, #4]
   11744:	add	r4, r4, #1
   11748:	cmp	r1, r4
   1174c:	bgt	116c4 <dfs_helper@@Base+0x50>
   11750:	b	1170c <dfs_helper@@Base+0x98>
   11754:	mov	fp, r0
   11758:	mov	r0, fp
   1175c:	add	sp, sp, #12
   11760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011764 <grafo_dfs@@Base>:
   11764:	push	{r4, r5, r6, r7, r8, lr}
   11768:	subs	r4, r0, #0
   1176c:	sub	sp, sp, #8
   11770:	beq	11870 <grafo_dfs@@Base+0x10c>
   11774:	mov	r7, r1
   11778:	ldr	r0, [r4, #4]
   1177c:	mov	r1, #4
   11780:	mov	r6, r3
   11784:	mov	r8, r2
   11788:	bl	10c70 <calloc@plt>
   1178c:	mov	r1, r7
   11790:	mov	r2, r8
   11794:	mov	r3, #1
   11798:	str	r0, [sp]
   1179c:	mov	r5, r0
   117a0:	mov	r0, r4
   117a4:	bl	11674 <dfs_helper@@Base>
   117a8:	subs	r7, r0, #0
   117ac:	beq	11854 <grafo_dfs@@Base+0xf0>
   117b0:	mov	r1, #4
   117b4:	bl	10c70 <calloc@plt>
   117b8:	cmp	r7, #0
   117bc:	mov	r8, r0
   117c0:	ble	11820 <grafo_dfs@@Base+0xbc>
   117c4:	ldr	lr, [r4, #4]
   117c8:	mov	ip, #1
   117cc:	mov	r4, r0
   117d0:	cmp	lr, #0
   117d4:	movle	r3, ip
   117d8:	ble	11810 <grafo_dfs@@Base+0xac>
   117dc:	ldr	r2, [r5]
   117e0:	mov	r3, ip
   117e4:	cmp	r2, ip
   117e8:	movne	r1, r5
   117ec:	movne	r2, #0
   117f0:	bne	11804 <grafo_dfs@@Base+0xa0>
   117f4:	b	11838 <grafo_dfs@@Base+0xd4>
   117f8:	ldr	r0, [r1, #4]!
   117fc:	cmp	r0, ip
   11800:	beq	1183c <grafo_dfs@@Base+0xd8>
   11804:	add	r2, r2, #1
   11808:	cmp	r2, lr
   1180c:	bne	117f8 <grafo_dfs@@Base+0x94>
   11810:	cmp	r3, r7
   11814:	add	ip, ip, #1
   11818:	add	r4, r4, #4
   1181c:	blt	117d0 <grafo_dfs@@Base+0x6c>
   11820:	str	r7, [r6]
   11824:	mov	r0, r5
   11828:	bl	10cc4 <free@plt>
   1182c:	mov	r0, r8
   11830:	add	sp, sp, #8
   11834:	pop	{r4, r5, r6, r7, r8, pc}
   11838:	mov	r2, #0
   1183c:	cmp	r3, r7
   11840:	str	r2, [r4]
   11844:	add	ip, ip, #1
   11848:	add	r4, r4, #4
   1184c:	blt	117d0 <grafo_dfs@@Base+0x6c>
   11850:	b	11820 <grafo_dfs@@Base+0xbc>
   11854:	mov	r0, r5
   11858:	bl	10cc4 <free@plt>
   1185c:	mov	r8, r7
   11860:	mov	r0, r8
   11864:	str	r7, [r6]
   11868:	add	sp, sp, #8
   1186c:	pop	{r4, r5, r6, r7, r8, pc}
   11870:	mov	r8, r4
   11874:	b	1182c <grafo_dfs@@Base+0xc8>

00011878 <grafo_bfs@@Base>:
   11878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1187c:	sub	sp, sp, #28
   11880:	cmp	r0, #0
   11884:	str	r0, [sp, #4]
   11888:	str	r2, [sp, #16]
   1188c:	str	r3, [sp, #20]
   11890:	beq	11a58 <grafo_bfs@@Base+0x1e0>
   11894:	ldr	r7, [r0, #4]
   11898:	mov	r4, r1
   1189c:	mov	r0, r7
   118a0:	mov	r1, #4
   118a4:	bl	10c70 <calloc@plt>
   118a8:	mov	r1, #4
   118ac:	mov	r9, r0
   118b0:	mov	r0, r7
   118b4:	bl	10c70 <calloc@plt>
   118b8:	cmp	r7, #0
   118bc:	movgt	r3, r9
   118c0:	addgt	r1, r9, r7, lsl #2
   118c4:	mvngt	r2, #0
   118c8:	mov	sl, r0
   118cc:	ble	118dc <grafo_bfs@@Base+0x64>
   118d0:	str	r2, [r3], #4
   118d4:	cmp	r1, r3
   118d8:	bne	118d0 <grafo_bfs@@Base+0x58>
   118dc:	mov	r3, #1
   118e0:	str	r4, [r9, r4, lsl #2]
   118e4:	str	r9, [sp, #8]
   118e8:	mov	fp, #0
   118ec:	mov	r9, r3
   118f0:	str	r4, [sl]
   118f4:	add	r0, fp, #1
   118f8:	mov	r1, r7
   118fc:	bl	12620 <lista_inverte@@Base+0x284>
   11900:	cmp	r7, #0
   11904:	ldr	r8, [sl, fp, lsl #2]
   11908:	mov	fp, r1
   1190c:	ble	1196c <grafo_bfs@@Base+0xf4>
   11910:	ldr	r3, [sp, #4]
   11914:	ldr	r6, [sp, #8]
   11918:	mov	r4, #0
   1191c:	ldr	r1, [r3, #8]
   11920:	add	r1, r1, r8, lsl #3
   11924:	ldr	r5, [r1, #4]
   11928:	cmp	r5, #0
   1192c:	beq	1195c <grafo_bfs@@Base+0xe4>
   11930:	ldr	r3, [r5]
   11934:	cmp	r4, r3
   11938:	beq	11a08 <grafo_bfs@@Base+0x190>
   1193c:	mov	r3, r5
   11940:	b	11950 <grafo_bfs@@Base+0xd8>
   11944:	ldr	r2, [r3]
   11948:	cmp	r2, r4
   1194c:	beq	11a08 <grafo_bfs@@Base+0x190>
   11950:	ldr	r3, [r3, #4]
   11954:	cmp	r3, #0
   11958:	bne	11944 <grafo_bfs@@Base+0xcc>
   1195c:	add	r4, r4, #1
   11960:	cmp	r7, r4
   11964:	add	r6, r6, #4
   11968:	bne	11928 <grafo_bfs@@Base+0xb0>
   1196c:	cmp	fp, r9
   11970:	bne	118f4 <grafo_bfs@@Base+0x7c>
   11974:	ldr	r9, [sp, #8]
   11978:	ldr	r3, [sp, #16]
   1197c:	ldr	r5, [r9, r3, lsl #2]
   11980:	cmp	r5, #0
   11984:	movlt	r6, #0
   11988:	blt	119e4 <grafo_bfs@@Base+0x16c>
   1198c:	cmp	r3, r5
   11990:	beq	11a40 <grafo_bfs@@Base+0x1c8>
   11994:	mov	r3, r5
   11998:	mov	r6, #1
   1199c:	ldr	r2, [r9, r3, lsl #2]
   119a0:	add	r6, r6, #1
   119a4:	cmp	r2, r3
   119a8:	mov	r3, r2
   119ac:	bne	1199c <grafo_bfs@@Base+0x124>
   119b0:	lsl	r4, r6, #2
   119b4:	mov	r0, r4
   119b8:	bl	10d00 <malloc@plt>
   119bc:	str	r0, [sp, #12]
   119c0:	ldr	r1, [sp, #12]
   119c4:	ldr	r2, [sp, #16]
   119c8:	add	r3, r1, r4
   119cc:	b	119d8 <grafo_bfs@@Base+0x160>
   119d0:	mov	r2, r5
   119d4:	ldr	r5, [r9, r5, lsl #2]
   119d8:	str	r2, [r3, #-4]!
   119dc:	cmp	r3, r1
   119e0:	bne	119d0 <grafo_bfs@@Base+0x158>
   119e4:	mov	r0, sl
   119e8:	bl	10cc4 <free@plt>
   119ec:	mov	r0, r9
   119f0:	bl	10cc4 <free@plt>
   119f4:	ldr	r3, [sp, #20]
   119f8:	ldr	r0, [sp, #12]
   119fc:	str	r6, [r3]
   11a00:	add	sp, sp, #28
   11a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a08:	ldr	r3, [r6]
   11a0c:	cmn	r3, #1
   11a10:	bne	1195c <grafo_bfs@@Base+0xe4>
   11a14:	add	r0, r9, #1
   11a18:	str	r8, [r6]
   11a1c:	mov	r1, r7
   11a20:	str	r4, [sl, r9, lsl #2]
   11a24:	bl	12620 <lista_inverte@@Base+0x284>
   11a28:	add	r4, r4, #1
   11a2c:	cmp	r7, r4
   11a30:	add	r6, r6, #4
   11a34:	mov	r9, r1
   11a38:	bne	11928 <grafo_bfs@@Base+0xb0>
   11a3c:	b	1196c <grafo_bfs@@Base+0xf4>
   11a40:	mov	r0, #4
   11a44:	bl	10d00 <malloc@plt>
   11a48:	mov	r6, #1
   11a4c:	mov	r4, #4
   11a50:	str	r0, [sp, #12]
   11a54:	b	119c0 <grafo_bfs@@Base+0x148>
   11a58:	ldr	r3, [sp, #4]
   11a5c:	str	r3, [sp, #12]
   11a60:	ldr	r0, [sp, #12]
   11a64:	add	sp, sp, #28
   11a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011a6c <heap_nova@@Base>:
   11a6c:	push	{r4, r5, r6, lr}
   11a70:	mov	r5, r0
   11a74:	mov	r0, #12
   11a78:	bl	10d00 <malloc@plt>
   11a7c:	subs	r4, r0, #0
   11a80:	beq	11aac <heap_nova@@Base+0x40>
   11a84:	mov	r3, #0
   11a88:	str	r5, [r4, #4]
   11a8c:	mov	r0, r5
   11a90:	str	r3, [r4]
   11a94:	mov	r1, #4
   11a98:	bl	10c70 <calloc@plt>
   11a9c:	cmp	r0, #0
   11aa0:	mov	r5, r0
   11aa4:	str	r0, [r4, #8]
   11aa8:	beq	11ab4 <heap_nova@@Base+0x48>
   11aac:	mov	r0, r4
   11ab0:	pop	{r4, r5, r6, pc}
   11ab4:	mov	r0, r4
   11ab8:	bl	10cc4 <free@plt>
   11abc:	mov	r4, r5
   11ac0:	b	11aac <heap_nova@@Base+0x40>

00011ac4 <heap_apaga@@Base>:
   11ac4:	push	{r4, r5, r6, lr}
   11ac8:	subs	r5, r0, #0
   11acc:	popeq	{r4, r5, r6, pc}
   11ad0:	ldr	r3, [r5]
   11ad4:	cmp	r3, #0
   11ad8:	ldrle	r0, [r5, #8]
   11adc:	ble	11b1c <heap_apaga@@Base+0x58>
   11ae0:	mov	r4, #0
   11ae4:	ldr	r0, [r5, #8]
   11ae8:	mov	r6, r4
   11aec:	ldr	r3, [r0, r4, lsl #2]
   11af0:	ldr	r0, [r3, #4]
   11af4:	bl	10cc4 <free@plt>
   11af8:	ldr	r3, [r5, #8]
   11afc:	ldr	r0, [r3, r4, lsl #2]
   11b00:	bl	10cc4 <free@plt>
   11b04:	ldr	r0, [r5, #8]
   11b08:	ldr	r3, [r5]
   11b0c:	str	r6, [r0, r4, lsl #2]
   11b10:	add	r4, r4, #1
   11b14:	cmp	r3, r4
   11b18:	bgt	11aec <heap_apaga@@Base+0x28>
   11b1c:	bl	10cc4 <free@plt>
   11b20:	mov	r0, r5
   11b24:	pop	{r4, r5, r6, lr}
   11b28:	b	10cc4 <free@plt>

00011b2c <elemento_cria@@Base>:
   11b2c:	push	{r4, r5, r6, r7, r8, lr}
   11b30:	mov	r8, r0
   11b34:	mov	r0, #8
   11b38:	mov	r5, r1
   11b3c:	bl	10d00 <malloc@plt>
   11b40:	subs	r4, r0, #0
   11b44:	beq	11b80 <elemento_cria@@Base+0x54>
   11b48:	mov	r0, r5
   11b4c:	bl	10d24 <strlen@plt>
   11b50:	mov	r1, #1
   11b54:	add	r7, r0, r1
   11b58:	mov	r0, r7
   11b5c:	bl	10c70 <calloc@plt>
   11b60:	cmp	r0, #0
   11b64:	mov	r6, r0
   11b68:	str	r0, [r4, #4]
   11b6c:	beq	11b88 <elemento_cria@@Base+0x5c>
   11b70:	mov	r2, r7
   11b74:	mov	r1, r5
   11b78:	bl	10cd0 <memcpy@plt>
   11b7c:	str	r8, [r4]
   11b80:	mov	r0, r4
   11b84:	pop	{r4, r5, r6, r7, r8, pc}
   11b88:	mov	r0, r4
   11b8c:	bl	10cc4 <free@plt>
   11b90:	mov	r4, r6
   11b94:	b	11b80 <elemento_cria@@Base+0x54>

00011b98 <heap_insere@@Base>:
   11b98:	ldr	ip, [r0]
   11b9c:	ldr	r3, [r0, #4]
   11ba0:	cmp	ip, r3
   11ba4:	blt	11bb0 <heap_insere@@Base+0x18>
   11ba8:	mov	r0, #0
   11bac:	bx	lr
   11bb0:	push	{r4, r5, r6, lr}
   11bb4:	mov	r5, r0
   11bb8:	mov	r0, r2
   11bbc:	bl	11b2c <elemento_cria@@Base>
   11bc0:	subs	ip, r0, #0
   11bc4:	beq	11c5c <heap_insere@@Base+0xc4>
   11bc8:	ldr	r3, [r5]
   11bcc:	ldr	r1, [r5, #8]
   11bd0:	add	r2, r3, #1
   11bd4:	cmp	r3, #0
   11bd8:	str	ip, [r1, r3, lsl #2]
   11bdc:	add	r4, r1, r3, lsl #2
   11be0:	str	r2, [r5]
   11be4:	beq	11c54 <heap_insere@@Base+0xbc>
   11be8:	sub	r3, r3, #1
   11bec:	add	r3, r3, r3, lsr #31
   11bf0:	asr	r3, r3, #1
   11bf4:	ldr	lr, [r1, r3, lsl #2]
   11bf8:	lsl	r0, r3, #2
   11bfc:	cmp	lr, #0
   11c00:	add	r5, r1, r0
   11c04:	beq	11c54 <heap_insere@@Base+0xbc>
   11c08:	ldr	r6, [ip]
   11c0c:	ldr	r2, [lr]
   11c10:	cmp	r6, r2
   11c14:	bge	11c54 <heap_insere@@Base+0xbc>
   11c18:	sub	r2, r3, #1
   11c1c:	cmp	r3, #0
   11c20:	add	r2, r2, r2, lsr #31
   11c24:	str	ip, [r5]
   11c28:	asr	r3, r2, #1
   11c2c:	str	lr, [r4]
   11c30:	add	r4, r1, r0
   11c34:	beq	11c54 <heap_insere@@Base+0xbc>
   11c38:	ldr	ip, [r1, r0]
   11c3c:	ldr	lr, [r1, r3, lsl #2]
   11c40:	lsl	r0, r3, #2
   11c44:	cmp	lr, #0
   11c48:	cmpne	ip, #0
   11c4c:	add	r5, r1, r0
   11c50:	bne	11c08 <heap_insere@@Base+0x70>
   11c54:	mov	r0, #1
   11c58:	pop	{r4, r5, r6, pc}
   11c5c:	mov	r0, #0
   11c60:	pop	{r4, r5, r6, pc}

00011c64 <heap_remove@@Base>:
   11c64:	push	{r4, r5, r6, r7, r8, lr}
   11c68:	subs	r6, r0, #0
   11c6c:	beq	11d54 <heap_remove@@Base+0xf0>
   11c70:	ldr	r3, [r6]
   11c74:	cmp	r3, #0
   11c78:	ble	11d54 <heap_remove@@Base+0xf0>
   11c7c:	ldr	r3, [r6, #8]
   11c80:	ldr	r3, [r3]
   11c84:	mov	r0, r3
   11c88:	ldr	r4, [r3, #4]
   11c8c:	bl	10cc4 <free@plt>
   11c90:	ldr	r5, [r6]
   11c94:	ldr	r1, [r6, #8]
   11c98:	sub	r5, r5, #1
   11c9c:	mov	r3, #0
   11ca0:	ldr	r2, [r1, r5, lsl #2]
   11ca4:	cmp	r5, #1
   11ca8:	str	r5, [r6]
   11cac:	str	r2, [r1]
   11cb0:	str	r3, [r1, r5, lsl #2]
   11cb4:	ble	11d4c <heap_remove@@Base+0xe8>
   11cb8:	mov	r0, #1
   11cbc:	b	11ce0 <heap_remove@@Base+0x7c>
   11cc0:	ldr	r8, [ip]
   11cc4:	ldr	r7, [lr]
   11cc8:	cmp	r8, r7
   11ccc:	bge	11d4c <heap_remove@@Base+0xe8>
   11cd0:	cmp	r5, r0
   11cd4:	str	lr, [r1, r6]
   11cd8:	str	ip, [r1, r2]
   11cdc:	ble	11d4c <heap_remove@@Base+0xe8>
   11ce0:	add	ip, r3, #1
   11ce4:	mov	r2, r3
   11ce8:	lsl	lr, ip, #1
   11cec:	cmp	r5, lr
   11cf0:	add	r6, r1, ip, lsl #3
   11cf4:	ble	11d24 <heap_remove@@Base+0xc0>
   11cf8:	ldr	r7, [r1, ip, lsl #3]
   11cfc:	ldr	ip, [r6, #-4]
   11d00:	mov	r2, r3
   11d04:	cmp	r7, #0
   11d08:	cmpne	ip, #0
   11d0c:	beq	11d24 <heap_remove@@Base+0xc0>
   11d10:	ldr	r6, [r7]
   11d14:	ldr	ip, [ip]
   11d18:	cmp	r6, ip
   11d1c:	movlt	r3, lr
   11d20:	blt	11d28 <heap_remove@@Base+0xc4>
   11d24:	mov	r3, r0
   11d28:	ldr	lr, [r1, r2, lsl #2]
   11d2c:	ldr	ip, [r1, r3, lsl #2]
   11d30:	lsl	r0, r3, #1
   11d34:	cmp	lr, #0
   11d38:	cmpne	ip, #0
   11d3c:	add	r0, r0, #1
   11d40:	lsl	r2, r2, #2
   11d44:	lsl	r6, r3, #2
   11d48:	bne	11cc0 <heap_remove@@Base+0x5c>
   11d4c:	mov	r0, r4
   11d50:	pop	{r4, r5, r6, r7, r8, pc}
   11d54:	mov	r4, #0
   11d58:	mov	r0, r4
   11d5c:	pop	{r4, r5, r6, r7, r8, pc}

00011d60 <mostraHeap@@Base>:
   11d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d64:	mov	r8, r0
   11d68:	ldr	r6, [pc, #196]	; 11e34 <mostraHeap@@Base+0xd4>
   11d6c:	ldr	r9, [pc, #196]	; 11e38 <mostraHeap@@Base+0xd8>
   11d70:	mov	r7, r1
   11d74:	ldr	r3, [r8]
   11d78:	cmp	r3, r7
   11d7c:	bgt	11d8c <mostraHeap@@Base+0x2c>
   11d80:	mov	r0, #10
   11d84:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d88:	b	10d30 <putchar@plt>
   11d8c:	cmp	r7, #0
   11d90:	ble	11df8 <mostraHeap@@Base+0x98>
   11d94:	mov	r4, r7
   11d98:	mov	r5, #0
   11d9c:	sub	r4, r4, #1
   11da0:	add	r5, r5, #1
   11da4:	asrs	r4, r4, #1
   11da8:	bne	11d9c <mostraHeap@@Base+0x3c>
   11dac:	lsl	r1, r7, #1
   11db0:	add	r1, r1, #1
   11db4:	mov	r0, r8
   11db8:	bl	11d60 <mostraHeap@@Base>
   11dbc:	add	r5, r5, r5, lsl #1
   11dc0:	add	r4, r4, #1
   11dc4:	mov	r0, r6
   11dc8:	bl	10ca0 <printf@plt>
   11dcc:	cmp	r4, r5
   11dd0:	bne	11dc0 <mostraHeap@@Base+0x60>
   11dd4:	ldr	r3, [r8, #8]
   11dd8:	mov	r0, r9
   11ddc:	ldr	r3, [r3, r7, lsl #2]
   11de0:	add	r7, r7, #1
   11de4:	ldr	r2, [r3]
   11de8:	ldr	r1, [r3, #4]
   11dec:	bl	10ca0 <printf@plt>
   11df0:	lsl	r7, r7, #1
   11df4:	b	11d74 <mostraHeap@@Base+0x14>
   11df8:	lsl	r1, r7, #1
   11dfc:	mov	r0, r8
   11e00:	add	r1, r1, #1
   11e04:	bl	11d60 <mostraHeap@@Base>
   11e08:	ldr	r3, [r8, #8]
   11e0c:	ldr	r0, [pc, #36]	; 11e38 <mostraHeap@@Base+0xd8>
   11e10:	ldr	r3, [r3, r7, lsl #2]
   11e14:	ldr	r1, [r3, #4]
   11e18:	ldr	r2, [r3]
   11e1c:	bl	10ca0 <printf@plt>
   11e20:	add	r1, r7, #1
   11e24:	mov	r0, r8
   11e28:	lsl	r1, r1, #1
   11e2c:	bl	11d60 <mostraHeap@@Base>
   11e30:	b	11d80 <mostraHeap@@Base+0x20>
   11e34:	andeq	r2, r1, r0, lsl #15
   11e38:	andeq	r2, r1, r8, lsl #15

00011e3c <menor_que@@Base>:
   11e3c:	cmp	r1, #0
   11e40:	cmpne	r0, #0
   11e44:	beq	11e60 <menor_que@@Base+0x24>
   11e48:	ldr	r0, [r0]
   11e4c:	ldr	r3, [r1]
   11e50:	cmp	r0, r3
   11e54:	movge	r0, #0
   11e58:	movlt	r0, #1
   11e5c:	bx	lr
   11e60:	mov	r0, #0
   11e64:	bx	lr

00011e68 <novo_str@@Base>:
   11e68:	push	{r4, r5, r6, r7, r8, lr}
   11e6c:	mov	r5, r0
   11e70:	mov	r0, #8
   11e74:	bl	10d00 <malloc@plt>
   11e78:	subs	r4, r0, #0
   11e7c:	beq	11eb8 <novo_str@@Base+0x50>
   11e80:	mov	r0, r5
   11e84:	bl	10d24 <strlen@plt>
   11e88:	add	r7, r0, #1
   11e8c:	mov	r0, r7
   11e90:	bl	10d00 <malloc@plt>
   11e94:	cmp	r0, #0
   11e98:	mov	r6, r0
   11e9c:	str	r0, [r4]
   11ea0:	beq	11ec0 <novo_str@@Base+0x58>
   11ea4:	mov	r2, r7
   11ea8:	mov	r1, r5
   11eac:	bl	10cd0 <memcpy@plt>
   11eb0:	mov	r3, #0
   11eb4:	str	r3, [r4, #4]
   11eb8:	mov	r0, r4
   11ebc:	pop	{r4, r5, r6, r7, r8, pc}
   11ec0:	mov	r0, r4
   11ec4:	bl	10cc4 <free@plt>
   11ec8:	mov	r4, r6
   11ecc:	b	11eb8 <novo_str@@Base+0x50>

00011ed0 <lista_nova@@Base>:
   11ed0:	push	{r4, lr}
   11ed4:	mov	r0, #8
   11ed8:	bl	10d00 <malloc@plt>
   11edc:	cmp	r0, #0
   11ee0:	movne	r3, #0
   11ee4:	strne	r3, [r0]
   11ee8:	strne	r3, [r0, #4]
   11eec:	pop	{r4, pc}

00011ef0 <lista_apaga@@Base>:
   11ef0:	push	{r4, r5, r6, lr}
   11ef4:	subs	r5, r0, #0
   11ef8:	bne	11f14 <lista_apaga@@Base+0x24>
   11efc:	b	11f2c <lista_apaga@@Base+0x3c>
   11f00:	ldm	r4, {r0, r3}
   11f04:	str	r3, [r5]
   11f08:	bl	10cc4 <free@plt>
   11f0c:	mov	r0, r4
   11f10:	bl	10cc4 <free@plt>
   11f14:	ldr	r4, [r5]
   11f18:	cmp	r4, #0
   11f1c:	bne	11f00 <lista_apaga@@Base+0x10>
   11f20:	mov	r0, r5
   11f24:	pop	{r4, r5, r6, lr}
   11f28:	b	10cc4 <free@plt>
   11f2c:	pop	{r4, r5, r6, pc}

00011f30 <lista_tamanho@@Base>:
   11f30:	cmp	r0, #0
   11f34:	ldrne	r0, [r0, #4]
   11f38:	mvneq	r0, #0
   11f3c:	bx	lr

00011f40 <lista_elemento@@Base>:
   11f40:	lsr	r3, r1, #31
   11f44:	cmp	r0, #0
   11f48:	orreq	r3, r3, #1
   11f4c:	cmp	r3, #0
   11f50:	bne	11f88 <lista_elemento@@Base+0x48>
   11f54:	ldr	r2, [r0]
   11f58:	cmp	r2, #0
   11f5c:	cmpne	r1, #0
   11f60:	ble	11f78 <lista_elemento@@Base+0x38>
   11f64:	ldr	r2, [r2, #4]
   11f68:	add	r3, r3, #1
   11f6c:	cmp	r2, #0
   11f70:	cmpne	r1, r3
   11f74:	bgt	11f64 <lista_elemento@@Base+0x24>
   11f78:	cmp	r2, #0
   11f7c:	beq	11f88 <lista_elemento@@Base+0x48>
   11f80:	ldr	r0, [r2]
   11f84:	bx	lr
   11f88:	mov	r0, #0
   11f8c:	bx	lr

00011f90 <lista_atribui@@Base>:
   11f90:	lsr	r3, r1, #31
   11f94:	cmp	r0, #0
   11f98:	orreq	r3, r3, #1
   11f9c:	cmp	r3, #0
   11fa0:	bne	12004 <lista_atribui@@Base+0x74>
   11fa4:	push	{r4, r5, r6, lr}
   11fa8:	ldr	r4, [r0]
   11fac:	cmp	r4, #0
   11fb0:	cmpne	r1, #0
   11fb4:	ble	11fcc <lista_atribui@@Base+0x3c>
   11fb8:	ldr	r4, [r4, #4]
   11fbc:	add	r3, r3, #1
   11fc0:	cmp	r4, #0
   11fc4:	cmpne	r1, r3
   11fc8:	bgt	11fb8 <lista_atribui@@Base+0x28>
   11fcc:	cmp	r4, #0
   11fd0:	beq	1200c <lista_atribui@@Base+0x7c>
   11fd4:	mov	r0, r2
   11fd8:	mov	r6, r2
   11fdc:	mov	r5, r1
   11fe0:	bl	10d24 <strlen@plt>
   11fe4:	add	r1, r0, #1
   11fe8:	ldr	r0, [r4]
   11fec:	bl	10cdc <realloc@plt>
   11ff0:	mov	r1, r6
   11ff4:	str	r0, [r4]
   11ff8:	bl	10ce8 <strcpy@plt>
   11ffc:	mov	r0, r5
   12000:	pop	{r4, r5, r6, pc}
   12004:	mvn	r0, #0
   12008:	bx	lr
   1200c:	mvn	r0, #0
   12010:	pop	{r4, r5, r6, pc}

00012014 <lista_insere@@Base>:
   12014:	cmn	r2, #1
   12018:	movge	r3, #0
   1201c:	movlt	r3, #1
   12020:	push	{r4, r5, r6, r7, r8, lr}
   12024:	cmp	r0, #0
   12028:	movne	r5, r3
   1202c:	orreq	r5, r3, #1
   12030:	cmp	r5, #0
   12034:	bne	12120 <lista_insere@@Base+0x10c>
   12038:	cmp	r2, #0
   1203c:	mov	r7, r0
   12040:	mov	r6, r2
   12044:	mov	r0, r1
   12048:	beq	120f4 <lista_insere@@Base+0xe0>
   1204c:	ldr	r3, [r7, #4]
   12050:	cmp	r2, r3
   12054:	bge	12120 <lista_insere@@Base+0x10c>
   12058:	ldr	r4, [r7]
   1205c:	bl	11e68 <novo_str@@Base>
   12060:	subs	r1, r0, #0
   12064:	beq	12120 <lista_insere@@Base+0x10c>
   12068:	ldr	r0, [r7, #4]
   1206c:	cmn	r6, #1
   12070:	add	r3, r0, #1
   12074:	str	r3, [r7, #4]
   12078:	beq	120c4 <lista_insere@@Base+0xb0>
   1207c:	cmp	r6, #1
   12080:	beq	120b0 <lista_insere@@Base+0x9c>
   12084:	cmp	r4, #0
   12088:	beq	120e8 <lista_insere@@Base+0xd4>
   1208c:	mov	r3, r5
   12090:	sub	r2, r6, #1
   12094:	b	120a0 <lista_insere@@Base+0x8c>
   12098:	cmp	r4, #0
   1209c:	beq	120e8 <lista_insere@@Base+0xd4>
   120a0:	add	r3, r3, #1
   120a4:	cmp	r3, r2
   120a8:	ldr	r4, [r4, #4]
   120ac:	bne	12098 <lista_insere@@Base+0x84>
   120b0:	ldr	r3, [r4, #4]
   120b4:	mov	r0, r6
   120b8:	str	r3, [r1, #4]
   120bc:	str	r1, [r4, #4]
   120c0:	pop	{r4, r5, r6, r7, r8, pc}
   120c4:	cmp	r4, #0
   120c8:	bne	120d4 <lista_insere@@Base+0xc0>
   120cc:	b	12128 <lista_insere@@Base+0x114>
   120d0:	mov	r4, r3
   120d4:	ldr	r3, [r4, #4]
   120d8:	cmp	r3, #0
   120dc:	bne	120d0 <lista_insere@@Base+0xbc>
   120e0:	str	r1, [r4, #4]
   120e4:	pop	{r4, r5, r6, r7, r8, pc}
   120e8:	mov	r3, #0
   120ec:	ldr	r3, [r3, #4]
   120f0:	udf	#0
   120f4:	ldr	r4, [r7]
   120f8:	bl	11e68 <novo_str@@Base>
   120fc:	subs	r2, r0, #0
   12100:	beq	12120 <lista_insere@@Base+0x10c>
   12104:	ldr	r3, [r7, #4]
   12108:	mov	r0, r6
   1210c:	add	r3, r3, #1
   12110:	str	r3, [r7, #4]
   12114:	str	r4, [r2, #4]
   12118:	str	r2, [r7]
   1211c:	pop	{r4, r5, r6, r7, r8, pc}
   12120:	mvn	r0, #0
   12124:	pop	{r4, r5, r6, r7, r8, pc}
   12128:	str	r1, [r7]
   1212c:	pop	{r4, r5, r6, r7, r8, pc}

00012130 <lista_remove@@Base>:
   12130:	lsr	r3, r1, #31
   12134:	cmp	r0, #0
   12138:	orreq	r3, r3, #1
   1213c:	cmp	r3, #0
   12140:	bne	121ec <lista_remove@@Base+0xbc>
   12144:	ldr	ip, [r0, #4]
   12148:	cmp	r1, ip
   1214c:	bge	121ec <lista_remove@@Base+0xbc>
   12150:	sub	ip, ip, #1
   12154:	cmp	r1, #0
   12158:	push	{r4, r5, r6, lr}
   1215c:	mov	r2, r0
   12160:	mov	r5, r1
   12164:	str	ip, [r0, #4]
   12168:	ldr	r6, [r0]
   1216c:	beq	121d0 <lista_remove@@Base+0xa0>
   12170:	ldrle	r2, [r6, #4]
   12174:	movle	r4, r6
   12178:	ble	121b4 <lista_remove@@Base+0x84>
   1217c:	ldr	r4, [r6, #4]
   12180:	cmp	r4, #0
   12184:	moveq	r2, r4
   12188:	moveq	r4, r6
   1218c:	bne	121a4 <lista_remove@@Base+0x74>
   12190:	b	121b4 <lista_remove@@Base+0x84>
   12194:	cmp	r2, #0
   12198:	beq	121b4 <lista_remove@@Base+0x84>
   1219c:	mov	r6, r4
   121a0:	mov	r4, r2
   121a4:	add	r3, r3, #1
   121a8:	cmp	r5, r3
   121ac:	ldr	r2, [r4, #4]
   121b0:	bne	12194 <lista_remove@@Base+0x64>
   121b4:	str	r2, [r6, #4]
   121b8:	ldr	r0, [r4]
   121bc:	bl	10cc4 <free@plt>
   121c0:	mov	r0, r4
   121c4:	bl	10cc4 <free@plt>
   121c8:	mov	r0, #0
   121cc:	pop	{r4, r5, r6, pc}
   121d0:	ldm	r6, {r0, r3}
   121d4:	str	r3, [r2]
   121d8:	bl	10cc4 <free@plt>
   121dc:	mov	r0, r6
   121e0:	bl	10cc4 <free@plt>
   121e4:	mov	r0, r5
   121e8:	pop	{r4, r5, r6, pc}
   121ec:	mvn	r0, #0
   121f0:	bx	lr

000121f4 <lista_pesquisa@@Base>:
   121f4:	cmp	r0, #0
   121f8:	push	{r4, r5, r6, r7, r8, lr}
   121fc:	beq	12264 <lista_pesquisa@@Base+0x70>
   12200:	ldr	r4, [r0]
   12204:	cmp	r4, #0
   12208:	beq	12264 <lista_pesquisa@@Base+0x70>
   1220c:	mov	r7, r2
   12210:	mov	r6, r1
   12214:	mvn	r8, #0
   12218:	mov	r5, #0
   1221c:	mov	r1, r6
   12220:	ldr	r0, [r4]
   12224:	bl	10c88 <strcmp@plt>
   12228:	cmp	r0, #0
   1222c:	bne	12240 <lista_pesquisa@@Base+0x4c>
   12230:	cmp	r7, #0
   12234:	beq	12258 <lista_pesquisa@@Base+0x64>
   12238:	cmn	r7, #1
   1223c:	moveq	r8, r5
   12240:	ldr	r4, [r4, #4]
   12244:	add	r5, r5, #1
   12248:	cmp	r4, #0
   1224c:	bne	1221c <lista_pesquisa@@Base+0x28>
   12250:	mov	r0, r8
   12254:	pop	{r4, r5, r6, r7, r8, pc}
   12258:	mov	r8, r5
   1225c:	mov	r0, r8
   12260:	pop	{r4, r5, r6, r7, r8, pc}
   12264:	mvn	r8, #0
   12268:	b	12250 <lista_pesquisa@@Base+0x5c>

0001226c <lista_ordena@@Base>:
   1226c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12270:	subs	sl, r0, #0
   12274:	beq	1230c <lista_ordena@@Base+0xa0>
   12278:	ldr	r8, [sl]
   1227c:	ldr	r7, [r8, #4]
   12280:	cmp	r7, #0
   12284:	beq	122fc <lista_ordena@@Base+0x90>
   12288:	ldr	r5, [r7]
   1228c:	ldr	r0, [r8]
   12290:	mov	r1, r5
   12294:	bl	10c88 <strcmp@plt>
   12298:	cmp	r0, #0
   1229c:	ble	12304 <lista_ordena@@Base+0x98>
   122a0:	ldr	r3, [r7, #4]
   122a4:	ldr	r9, [sl]
   122a8:	str	r3, [r8, #4]
   122ac:	ldr	r3, [r7, #4]
   122b0:	cmp	r3, r8
   122b4:	beq	1227c <lista_ordena@@Base+0x10>
   122b8:	mov	r6, r9
   122bc:	mov	r4, r9
   122c0:	b	122cc <lista_ordena@@Base+0x60>
   122c4:	mov	r6, r4
   122c8:	ldr	r4, [r4, #4]
   122cc:	mov	r1, r5
   122d0:	ldr	r0, [r4]
   122d4:	bl	10c88 <strcmp@plt>
   122d8:	cmp	r0, #0
   122dc:	ble	122c4 <lista_ordena@@Base+0x58>
   122e0:	cmp	r9, r4
   122e4:	str	r4, [r7, #4]
   122e8:	streq	r7, [sl]
   122ec:	strne	r7, [r6, #4]
   122f0:	ldr	r7, [r8, #4]
   122f4:	cmp	r7, #0
   122f8:	bne	12288 <lista_ordena@@Base+0x1c>
   122fc:	mov	r0, #0
   12300:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12304:	ldr	r8, [r8, #4]
   12308:	b	1227c <lista_ordena@@Base+0x10>
   1230c:	mvn	r0, #0
   12310:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012314 <lista_compara@@Base>:
   12314:	cmp	r1, #0
   12318:	cmpne	r0, #0
   1231c:	moveq	r3, #1
   12320:	movne	r3, #0
   12324:	beq	12394 <lista_compara@@Base+0x80>
   12328:	ldr	ip, [r0, #4]
   1232c:	ldr	r2, [r1, #4]
   12330:	cmp	ip, r2
   12334:	beq	12340 <lista_compara@@Base+0x2c>
   12338:	mov	r0, r3
   1233c:	bx	lr
   12340:	push	{r4, r5, r6, lr}
   12344:	ldr	r4, [r0]
   12348:	ldr	r5, [r1]
   1234c:	cmp	r4, #0
   12350:	bne	12368 <lista_compara@@Base+0x54>
   12354:	b	12384 <lista_compara@@Base+0x70>
   12358:	ldr	r4, [r4, #4]
   1235c:	ldr	r5, [r5, #4]
   12360:	cmp	r4, #0
   12364:	beq	12384 <lista_compara@@Base+0x70>
   12368:	ldr	r1, [r5]
   1236c:	ldr	r0, [r4]
   12370:	bl	10c88 <strcmp@plt>
   12374:	cmp	r0, #0
   12378:	beq	12358 <lista_compara@@Base+0x44>
   1237c:	mov	r0, #0
   12380:	pop	{r4, r5, r6, pc}
   12384:	cmp	r5, #0
   12388:	mvnne	r0, #0
   1238c:	moveq	r0, #1
   12390:	pop	{r4, r5, r6, pc}
   12394:	mvn	r0, #0
   12398:	bx	lr

0001239c <lista_inverte@@Base>:
   1239c:	push	{r4, r5, r6, lr}
   123a0:	subs	r4, r0, #0
   123a4:	beq	123f4 <lista_inverte@@Base+0x58>
   123a8:	mov	r0, #8
   123ac:	bl	10d00 <malloc@plt>
   123b0:	subs	r6, r0, #0
   123b4:	beq	123f4 <lista_inverte@@Base+0x58>
   123b8:	ldr	r4, [r4]
   123bc:	mov	r5, #0
   123c0:	cmp	r4, r5
   123c4:	str	r5, [r6]
   123c8:	str	r5, [r6, #4]
   123cc:	beq	123ec <lista_inverte@@Base+0x50>
   123d0:	ldr	r1, [r4]
   123d4:	mov	r2, r5
   123d8:	mov	r0, r6
   123dc:	bl	12014 <lista_insere@@Base>
   123e0:	ldr	r4, [r4, #4]
   123e4:	cmp	r4, #0
   123e8:	bne	123d0 <lista_inverte@@Base+0x34>
   123ec:	mov	r0, r6
   123f0:	pop	{r4, r5, r6, pc}
   123f4:	mov	r6, #0
   123f8:	mov	r0, r6
   123fc:	pop	{r4, r5, r6, pc}
   12400:	cmp	r1, #0
   12404:	beq	12610 <lista_inverte@@Base+0x274>
   12408:	eor	ip, r0, r1
   1240c:	rsbmi	r1, r1, #0
   12410:	subs	r2, r1, #1
   12414:	beq	125dc <lista_inverte@@Base+0x240>
   12418:	movs	r3, r0
   1241c:	rsbmi	r3, r0, #0
   12420:	cmp	r3, r1
   12424:	bls	125e8 <lista_inverte@@Base+0x24c>
   12428:	tst	r1, r2
   1242c:	beq	125f8 <lista_inverte@@Base+0x25c>
   12430:	clz	r2, r3
   12434:	clz	r0, r1
   12438:	sub	r2, r0, r2
   1243c:	rsbs	r2, r2, #31
   12440:	addne	r2, r2, r2, lsl #1
   12444:	mov	r0, #0
   12448:	addne	pc, pc, r2, lsl #2
   1244c:	nop			; (mov r0, r0)
   12450:	cmp	r3, r1, lsl #31
   12454:	adc	r0, r0, r0
   12458:	subcs	r3, r3, r1, lsl #31
   1245c:	cmp	r3, r1, lsl #30
   12460:	adc	r0, r0, r0
   12464:	subcs	r3, r3, r1, lsl #30
   12468:	cmp	r3, r1, lsl #29
   1246c:	adc	r0, r0, r0
   12470:	subcs	r3, r3, r1, lsl #29
   12474:	cmp	r3, r1, lsl #28
   12478:	adc	r0, r0, r0
   1247c:	subcs	r3, r3, r1, lsl #28
   12480:	cmp	r3, r1, lsl #27
   12484:	adc	r0, r0, r0
   12488:	subcs	r3, r3, r1, lsl #27
   1248c:	cmp	r3, r1, lsl #26
   12490:	adc	r0, r0, r0
   12494:	subcs	r3, r3, r1, lsl #26
   12498:	cmp	r3, r1, lsl #25
   1249c:	adc	r0, r0, r0
   124a0:	subcs	r3, r3, r1, lsl #25
   124a4:	cmp	r3, r1, lsl #24
   124a8:	adc	r0, r0, r0
   124ac:	subcs	r3, r3, r1, lsl #24
   124b0:	cmp	r3, r1, lsl #23
   124b4:	adc	r0, r0, r0
   124b8:	subcs	r3, r3, r1, lsl #23
   124bc:	cmp	r3, r1, lsl #22
   124c0:	adc	r0, r0, r0
   124c4:	subcs	r3, r3, r1, lsl #22
   124c8:	cmp	r3, r1, lsl #21
   124cc:	adc	r0, r0, r0
   124d0:	subcs	r3, r3, r1, lsl #21
   124d4:	cmp	r3, r1, lsl #20
   124d8:	adc	r0, r0, r0
   124dc:	subcs	r3, r3, r1, lsl #20
   124e0:	cmp	r3, r1, lsl #19
   124e4:	adc	r0, r0, r0
   124e8:	subcs	r3, r3, r1, lsl #19
   124ec:	cmp	r3, r1, lsl #18
   124f0:	adc	r0, r0, r0
   124f4:	subcs	r3, r3, r1, lsl #18
   124f8:	cmp	r3, r1, lsl #17
   124fc:	adc	r0, r0, r0
   12500:	subcs	r3, r3, r1, lsl #17
   12504:	cmp	r3, r1, lsl #16
   12508:	adc	r0, r0, r0
   1250c:	subcs	r3, r3, r1, lsl #16
   12510:	cmp	r3, r1, lsl #15
   12514:	adc	r0, r0, r0
   12518:	subcs	r3, r3, r1, lsl #15
   1251c:	cmp	r3, r1, lsl #14
   12520:	adc	r0, r0, r0
   12524:	subcs	r3, r3, r1, lsl #14
   12528:	cmp	r3, r1, lsl #13
   1252c:	adc	r0, r0, r0
   12530:	subcs	r3, r3, r1, lsl #13
   12534:	cmp	r3, r1, lsl #12
   12538:	adc	r0, r0, r0
   1253c:	subcs	r3, r3, r1, lsl #12
   12540:	cmp	r3, r1, lsl #11
   12544:	adc	r0, r0, r0
   12548:	subcs	r3, r3, r1, lsl #11
   1254c:	cmp	r3, r1, lsl #10
   12550:	adc	r0, r0, r0
   12554:	subcs	r3, r3, r1, lsl #10
   12558:	cmp	r3, r1, lsl #9
   1255c:	adc	r0, r0, r0
   12560:	subcs	r3, r3, r1, lsl #9
   12564:	cmp	r3, r1, lsl #8
   12568:	adc	r0, r0, r0
   1256c:	subcs	r3, r3, r1, lsl #8
   12570:	cmp	r3, r1, lsl #7
   12574:	adc	r0, r0, r0
   12578:	subcs	r3, r3, r1, lsl #7
   1257c:	cmp	r3, r1, lsl #6
   12580:	adc	r0, r0, r0
   12584:	subcs	r3, r3, r1, lsl #6
   12588:	cmp	r3, r1, lsl #5
   1258c:	adc	r0, r0, r0
   12590:	subcs	r3, r3, r1, lsl #5
   12594:	cmp	r3, r1, lsl #4
   12598:	adc	r0, r0, r0
   1259c:	subcs	r3, r3, r1, lsl #4
   125a0:	cmp	r3, r1, lsl #3
   125a4:	adc	r0, r0, r0
   125a8:	subcs	r3, r3, r1, lsl #3
   125ac:	cmp	r3, r1, lsl #2
   125b0:	adc	r0, r0, r0
   125b4:	subcs	r3, r3, r1, lsl #2
   125b8:	cmp	r3, r1, lsl #1
   125bc:	adc	r0, r0, r0
   125c0:	subcs	r3, r3, r1, lsl #1
   125c4:	cmp	r3, r1
   125c8:	adc	r0, r0, r0
   125cc:	subcs	r3, r3, r1
   125d0:	cmp	ip, #0
   125d4:	rsbmi	r0, r0, #0
   125d8:	bx	lr
   125dc:	teq	ip, r0
   125e0:	rsbmi	r0, r0, #0
   125e4:	bx	lr
   125e8:	movcc	r0, #0
   125ec:	asreq	r0, ip, #31
   125f0:	orreq	r0, r0, #1
   125f4:	bx	lr
   125f8:	clz	r2, r1
   125fc:	rsb	r2, r2, #31
   12600:	cmp	ip, #0
   12604:	lsr	r0, r3, r2
   12608:	rsbmi	r0, r0, #0
   1260c:	bx	lr
   12610:	cmp	r0, #0
   12614:	mvngt	r0, #-2147483648	; 0x80000000
   12618:	movlt	r0, #-2147483648	; 0x80000000
   1261c:	b	12640 <lista_inverte@@Base+0x2a4>
   12620:	cmp	r1, #0
   12624:	beq	12610 <lista_inverte@@Base+0x274>
   12628:	push	{r0, r1, lr}
   1262c:	bl	12408 <lista_inverte@@Base+0x6c>
   12630:	pop	{r1, r2, lr}
   12634:	mul	r3, r2, r0
   12638:	sub	r1, r1, r3
   1263c:	bx	lr
   12640:	push	{r1, lr}
   12644:	mov	r0, #8
   12648:	bl	10c7c <raise@plt>
   1264c:	pop	{r1, pc}

00012650 <__libc_csu_init@@Base>:
   12650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12654:	mov	r7, r0
   12658:	ldr	r6, [pc, #72]	; 126a8 <__libc_csu_init@@Base+0x58>
   1265c:	ldr	r5, [pc, #72]	; 126ac <__libc_csu_init@@Base+0x5c>
   12660:	add	r6, pc, r6
   12664:	add	r5, pc, r5
   12668:	sub	r6, r6, r5
   1266c:	mov	r8, r1
   12670:	mov	r9, r2
   12674:	bl	10c50 <calloc@plt-0x20>
   12678:	asrs	r6, r6, #2
   1267c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12680:	mov	r4, #0
   12684:	add	r4, r4, #1
   12688:	ldr	r3, [r5], #4
   1268c:	mov	r2, r9
   12690:	mov	r1, r8
   12694:	mov	r0, r7
   12698:	blx	r3
   1269c:	cmp	r6, r4
   126a0:	bne	12684 <__libc_csu_init@@Base+0x34>
   126a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126a8:	andeq	r0, r1, r8, lsr #17
   126ac:	andeq	r0, r1, r0, lsr #17

000126b0 <__libc_csu_fini@@Base>:
   126b0:	bx	lr

Disassembly of section .fini:

000126b4 <.fini>:
   126b4:	push	{r3, lr}
   126b8:	pop	{r3, pc}
