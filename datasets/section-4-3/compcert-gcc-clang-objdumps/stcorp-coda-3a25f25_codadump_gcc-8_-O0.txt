
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

0001217c <.init>:
   1217c:	push	{r3, lr}
   12180:	bl	12688 <_start@@Base+0x3c>
   12184:	pop	{r3, pc}

Disassembly of section .plt:

00012188 <coda_cursor_get_byte_size@plt-0x14>:
   12188:	push	{lr}		; (str lr, [sp, #-4]!)
   1218c:	ldr	lr, [pc, #4]	; 12198 <coda_cursor_get_byte_size@plt-0x4>
   12190:	add	lr, pc, lr
   12194:	ldr	pc, [lr, #8]!
   12198:	andeq	sp, r1, r8, ror #28

0001219c <coda_cursor_get_byte_size@plt>:
   1219c:	add	ip, pc, #0, 12
   121a0:	add	ip, ip, #118784	; 0x1d000
   121a4:	ldr	pc, [ip, #3688]!	; 0xe68

000121a8 <coda_type_get_special_type_name@plt>:
   121a8:	add	ip, pc, #0, 12
   121ac:	add	ip, ip, #118784	; 0x1d000
   121b0:	ldr	pc, [ip, #3680]!	; 0xe60

000121b4 <coda_set_option_use_fast_size_expressions@plt>:
   121b4:	add	ip, pc, #0, 12
   121b8:	add	ip, ip, #118784	; 0x1d000
   121bc:	ldr	pc, [ip, #3672]!	; 0xe58

000121c0 <raise@plt>:
   121c0:	add	ip, pc, #0, 12
   121c4:	add	ip, ip, #118784	; 0x1d000
   121c8:	ldr	pc, [ip, #3664]!	; 0xe50

000121cc <coda_get_option_bypass_special_types@plt>:
   121cc:	add	ip, pc, #0, 12
   121d0:	add	ip, ip, #118784	; 0x1d000
   121d4:	ldr	pc, [ip, #3656]!	; 0xe48

000121d8 <coda_set_option_perform_boundary_checks@plt>:
   121d8:	add	ip, pc, #0, 12
   121dc:	add	ip, ip, #118784	; 0x1d000
   121e0:	ldr	pc, [ip, #3648]!	; 0xe40

000121e4 <strcmp@plt>:
   121e4:	add	ip, pc, #0, 12
   121e8:	add	ip, ip, #118784	; 0x1d000
   121ec:	ldr	pc, [ip, #3640]!	; 0xe38

000121f0 <coda_type_get_record_field_hidden_status@plt>:
   121f0:	add	ip, pc, #0, 12
   121f4:	add	ip, ip, #118784	; 0x1d000
   121f8:	ldr	pc, [ip, #3632]!	; 0xe30

000121fc <printf@plt>:
   121fc:	add	ip, pc, #0, 12
   12200:	add	ip, ip, #118784	; 0x1d000
   12204:	ldr	pc, [ip, #3624]!	; 0xe28

00012208 <coda_cursor_get_record_field_available_status@plt>:
   12208:	add	ip, pc, #0, 12
   1220c:	add	ip, ip, #118784	; 0x1d000
   12210:	ldr	pc, [ip, #3616]!	; 0xe20

00012214 <fopen@plt>:
   12214:	add	ip, pc, #0, 12
   12218:	add	ip, ip, #118784	; 0x1d000
   1221c:	ldr	pc, [ip, #3608]!	; 0xe18

00012220 <coda_set_error@plt>:
   12220:	add	ip, pc, #0, 12
   12224:	add	ip, ip, #118784	; 0x1d000
   12228:	ldr	pc, [ip, #3600]!	; 0xe10

0001222c <coda_open@plt>:
   1222c:	add	ip, pc, #0, 12
   12230:	add	ip, ip, #118784	; 0x1d000
   12234:	ldr	pc, [ip, #3592]!	; 0xe08

00012238 <fflush@plt>:
   12238:	add	ip, pc, #0, 12
   1223c:	add	ip, ip, #118784	; 0x1d000
   12240:	ldr	pc, [ip, #3584]!	; 0xe00

00012244 <coda_time_double_to_string@plt>:
   12244:	add	ip, pc, #0, 12
   12248:	add	ip, ip, #118784	; 0x1d000
   1224c:	ldr	pc, [ip, #3576]!	; 0xdf8

00012250 <coda_cursor_get_num_elements@plt>:
   12250:	add	ip, pc, #0, 12
   12254:	add	ip, ip, #118784	; 0x1d000
   12258:	ldr	pc, [ip, #3568]!	; 0xdf0

0001225c <coda_str64u@plt>:
   1225c:	add	ip, pc, #0, 12
   12260:	add	ip, ip, #118784	; 0x1d000
   12264:	ldr	pc, [ip, #3560]!	; 0xde8

00012268 <free@plt>:
   12268:	add	ip, pc, #0, 12
   1226c:	add	ip, ip, #118784	; 0x1d000
   12270:	ldr	pc, [ip, #3552]!	; 0xde0

00012274 <coda_set_option_use_mmap@plt>:
   12274:	add	ip, pc, #0, 12
   12278:	add	ip, ip, #118784	; 0x1d000
   1227c:	ldr	pc, [ip, #3544]!	; 0xdd8

00012280 <coda_set_definition_path_conditional@plt>:
   12280:	add	ip, pc, #0, 12
   12284:	add	ip, ip, #118784	; 0x1d000
   12288:	ldr	pc, [ip, #3536]!	; 0xdd0

0001228c <coda_cursor_read_uint32@plt>:
   1228c:	add	ip, pc, #0, 12
   12290:	add	ip, ip, #118784	; 0x1d000
   12294:	ldr	pc, [ip, #3528]!	; 0xdc8

00012298 <coda_set_option_bypass_special_types@plt>:
   12298:	add	ip, pc, #0, 12
   1229c:	add	ip, ip, #118784	; 0x1d000
   122a0:	ldr	pc, [ip, #3520]!	; 0xdc0

000122a4 <coda_type_get_record_field_type@plt>:
   122a4:	add	ip, pc, #0, 12
   122a8:	add	ip, ip, #118784	; 0x1d000
   122ac:	ldr	pc, [ip, #3512]!	; 0xdb8

000122b0 <coda_cursor_get_type@plt>:
   122b0:	add	ip, pc, #0, 12
   122b4:	add	ip, ip, #118784	; 0x1d000
   122b8:	ldr	pc, [ip, #3504]!	; 0xdb0

000122bc <memcpy@plt>:
   122bc:	add	ip, pc, #0, 12
   122c0:	add	ip, ip, #118784	; 0x1d000
   122c4:	ldr	pc, [ip, #3496]!	; 0xda8

000122c8 <coda_isInf@plt>:
   122c8:	add	ip, pc, #0, 12
   122cc:	add	ip, ip, #118784	; 0x1d000
   122d0:	ldr	pc, [ip, #3488]!	; 0xda0

000122d4 <coda_type_get_bit_size@plt>:
   122d4:	add	ip, pc, #0, 12
   122d8:	add	ip, ip, #118784	; 0x1d000
   122dc:	ldr	pc, [ip, #3480]!	; 0xd98

000122e0 <coda_type_get_record_field_available_status@plt>:
   122e0:	add	ip, pc, #0, 12
   122e4:	add	ip, ip, #118784	; 0x1d000
   122e8:	ldr	pc, [ip, #3472]!	; 0xd90

000122ec <coda_cursor_has_attributes@plt>:
   122ec:	add	ip, pc, #0, 12
   122f0:	add	ip, ip, #118784	; 0x1d000
   122f4:	ldr	pc, [ip, #3464]!	; 0xd88

000122f8 <coda_cursor_get_type_class@plt>:
   122f8:	add	ip, pc, #0, 12
   122fc:	add	ip, ip, #118784	; 0x1d000
   12300:	ldr	pc, [ip, #3456]!	; 0xd80

00012304 <coda_set_definition_path@plt>:
   12304:	add	ip, pc, #0, 12
   12308:	add	ip, ip, #118784	; 0x1d000
   1230c:	ldr	pc, [ip, #3448]!	; 0xd78

00012310 <coda_get_product_format@plt>:
   12310:	add	ip, pc, #0, 12
   12314:	add	ip, ip, #118784	; 0x1d000
   12318:	ldr	pc, [ip, #3440]!	; 0xd70

0001231c <coda_type_get_unit@plt>:
   1231c:	add	ip, pc, #0, 12
   12320:	add	ip, ip, #118784	; 0x1d000
   12324:	ldr	pc, [ip, #3432]!	; 0xd68

00012328 <coda_type_get_description@plt>:
   12328:	add	ip, pc, #0, 12
   1232c:	add	ip, ip, #118784	; 0x1d000
   12330:	ldr	pc, [ip, #3424]!	; 0xd60

00012334 <coda_cursor_get_special_type@plt>:
   12334:	add	ip, pc, #0, 12
   12338:	add	ip, ip, #118784	; 0x1d000
   1233c:	ldr	pc, [ip, #3416]!	; 0xd58

00012340 <coda_cursor_goto_first_array_element@plt>:
   12340:	add	ip, pc, #0, 12
   12344:	add	ip, ip, #118784	; 0x1d000
   12348:	ldr	pc, [ip, #3408]!	; 0xd50

0001234c <fwrite@plt>:
   1234c:	add	ip, pc, #0, 12
   12350:	add	ip, ip, #118784	; 0x1d000
   12354:	ldr	pc, [ip, #3400]!	; 0xd48

00012358 <coda_cursor_set_product@plt>:
   12358:	add	ip, pc, #0, 12
   1235c:	add	ip, ip, #118784	; 0x1d000
   12360:	ldr	pc, [ip, #3392]!	; 0xd40

00012364 <coda_cursor_goto_first_record_field@plt>:
   12364:	add	ip, pc, #0, 12
   12368:	add	ip, ip, #118784	; 0x1d000
   1236c:	ldr	pc, [ip, #3384]!	; 0xd38

00012370 <coda_cursor_goto_record_field_by_index@plt>:
   12370:	add	ip, pc, #0, 12
   12374:	add	ip, ip, #118784	; 0x1d000
   12378:	ldr	pc, [ip, #3376]!	; 0xd30

0001237c <coda_done@plt>:
   1237c:	add	ip, pc, #0, 12
   12380:	add	ip, ip, #118784	; 0x1d000
   12384:	ldr	pc, [ip, #3368]!	; 0xd28

00012388 <puts@plt>:
   12388:	add	ip, pc, #0, 12
   1238c:	add	ip, ip, #118784	; 0x1d000
   12390:	ldr	pc, [ip, #3360]!	; 0xd20

00012394 <coda_cursor_get_read_type@plt>:
   12394:	add	ip, pc, #0, 12
   12398:	add	ip, ip, #118784	; 0x1d000
   1239c:	ldr	pc, [ip, #3352]!	; 0xd18

000123a0 <malloc@plt>:
   123a0:	add	ip, pc, #0, 12
   123a4:	add	ip, ip, #118784	; 0x1d000
   123a8:	ldr	pc, [ip, #3344]!	; 0xd10

000123ac <__libc_start_main@plt>:
   123ac:	add	ip, pc, #0, 12
   123b0:	add	ip, ip, #118784	; 0x1d000
   123b4:	ldr	pc, [ip, #3336]!	; 0xd08

000123b8 <__gmon_start__@plt>:
   123b8:	add	ip, pc, #0, 12
   123bc:	add	ip, ip, #118784	; 0x1d000
   123c0:	ldr	pc, [ip, #3328]!	; 0xd00

000123c4 <coda_cursor_read_string@plt>:
   123c4:	add	ip, pc, #0, 12
   123c8:	add	ip, ip, #118784	; 0x1d000
   123cc:	ldr	pc, [ip, #3320]!	; 0xcf8

000123d0 <coda_cursor_goto_parent@plt>:
   123d0:	add	ip, pc, #0, 12
   123d4:	add	ip, ip, #118784	; 0x1d000
   123d8:	ldr	pc, [ip, #3312]!	; 0xcf0

000123dc <coda_type_get_num_record_fields@plt>:
   123dc:	add	ip, pc, #0, 12
   123e0:	add	ip, ip, #118784	; 0x1d000
   123e4:	ldr	pc, [ip, #3304]!	; 0xce8

000123e8 <exit@plt>:
   123e8:	add	ip, pc, #0, 12
   123ec:	add	ip, ip, #118784	; 0x1d000
   123f0:	ldr	pc, [ip, #3296]!	; 0xce0

000123f4 <coda_type_get_read_type@plt>:
   123f4:	add	ip, pc, #0, 12
   123f8:	add	ip, ip, #118784	; 0x1d000
   123fc:	ldr	pc, [ip, #3288]!	; 0xcd8

00012400 <coda_cursor_get_string_length@plt>:
   12400:	add	ip, pc, #0, 12
   12404:	add	ip, ip, #118784	; 0x1d000
   12408:	ldr	pc, [ip, #3280]!	; 0xcd0

0001240c <coda_cursor_read_uint64@plt>:
   1240c:	add	ip, pc, #0, 12
   12410:	add	ip, ip, #118784	; 0x1d000
   12414:	ldr	pc, [ip, #3272]!	; 0xcc8

00012418 <coda_cursor_read_double@plt>:
   12418:	add	ip, pc, #0, 12
   1241c:	add	ip, ip, #118784	; 0x1d000
   12420:	ldr	pc, [ip, #3264]!	; 0xcc0

00012424 <coda_isNaN@plt>:
   12424:	add	ip, pc, #0, 12
   12428:	add	ip, ip, #118784	; 0x1d000
   1242c:	ldr	pc, [ip, #3256]!	; 0xcb8

00012430 <fprintf@plt>:
   12430:	add	ip, pc, #0, 12
   12434:	add	ip, ip, #118784	; 0x1d000
   12438:	ldr	pc, [ip, #3248]!	; 0xcb0

0001243c <coda_cursor_goto_next_array_element@plt>:
   1243c:	add	ip, pc, #0, 12
   12440:	add	ip, ip, #118784	; 0x1d000
   12444:	ldr	pc, [ip, #3240]!	; 0xca8

00012448 <coda_open_as@plt>:
   12448:	add	ip, pc, #0, 12
   1244c:	add	ip, ip, #118784	; 0x1d000
   12450:	ldr	pc, [ip, #3232]!	; 0xca0

00012454 <coda_init@plt>:
   12454:	add	ip, pc, #0, 12
   12458:	add	ip, ip, #118784	; 0x1d000
   1245c:	ldr	pc, [ip, #3224]!	; 0xc98

00012460 <coda_set_option_perform_conversions@plt>:
   12460:	add	ip, pc, #0, 12
   12464:	add	ip, ip, #118784	; 0x1d000
   12468:	ldr	pc, [ip, #3216]!	; 0xc90

0001246c <coda_cursor_goto_attributes@plt>:
   1246c:	add	ip, pc, #0, 12
   12470:	add	ip, ip, #118784	; 0x1d000
   12474:	ldr	pc, [ip, #3208]!	; 0xc88

00012478 <coda_cursor_read_char@plt>:
   12478:	add	ip, pc, #0, 12
   1247c:	add	ip, ip, #118784	; 0x1d000
   12480:	ldr	pc, [ip, #3200]!	; 0xc80

00012484 <memset@plt>:
   12484:	add	ip, pc, #0, 12
   12488:	add	ip, ip, #118784	; 0x1d000
   1248c:	ldr	pc, [ip, #3192]!	; 0xc78

00012490 <putchar@plt>:
   12490:	add	ip, pc, #0, 12
   12494:	add	ip, ip, #118784	; 0x1d000
   12498:	ldr	pc, [ip, #3184]!	; 0xc70

0001249c <strncpy@plt>:
   1249c:	add	ip, pc, #0, 12
   124a0:	add	ip, ip, #118784	; 0x1d000
   124a4:	ldr	pc, [ip, #3176]!	; 0xc68

000124a8 <coda_type_get_special_type@plt>:
   124a8:	add	ip, pc, #0, 12
   124ac:	add	ip, ip, #118784	; 0x1d000
   124b0:	ldr	pc, [ip, #3168]!	; 0xc60

000124b4 <coda_type_get_record_union_status@plt>:
   124b4:	add	ip, pc, #0, 12
   124b8:	add	ip, ip, #118784	; 0x1d000
   124bc:	ldr	pc, [ip, #3160]!	; 0xc58

000124c0 <coda_cursor_read_complex_double_split@plt>:
   124c0:	add	ip, pc, #0, 12
   124c4:	add	ip, ip, #118784	; 0x1d000
   124c8:	ldr	pc, [ip, #3152]!	; 0xc50

000124cc <coda_type_get_array_base_type@plt>:
   124cc:	add	ip, pc, #0, 12
   124d0:	add	ip, ip, #118784	; 0x1d000
   124d4:	ldr	pc, [ip, #3144]!	; 0xc48

000124d8 <fclose@plt>:
   124d8:	add	ip, pc, #0, 12
   124dc:	add	ip, ip, #118784	; 0x1d000
   124e0:	ldr	pc, [ip, #3136]!	; 0xc40

000124e4 <coda_type_get_string_length@plt>:
   124e4:	add	ip, pc, #0, 12
   124e8:	add	ip, ip, #118784	; 0x1d000
   124ec:	ldr	pc, [ip, #3128]!	; 0xc38

000124f0 <coda_type_get_native_type_name@plt>:
   124f0:	add	ip, pc, #0, 12
   124f4:	add	ip, ip, #118784	; 0x1d000
   124f8:	ldr	pc, [ip, #3120]!	; 0xc30

000124fc <coda_cursor_get_array_dim@plt>:
   124fc:	add	ip, pc, #0, 12
   12500:	add	ip, ip, #118784	; 0x1d000
   12504:	ldr	pc, [ip, #3112]!	; 0xc28

00012508 <coda_cursor_has_ascii_content@plt>:
   12508:	add	ip, pc, #0, 12
   1250c:	add	ip, ip, #118784	; 0x1d000
   12510:	ldr	pc, [ip, #3104]!	; 0xc20

00012514 <coda_close@plt>:
   12514:	add	ip, pc, #0, 12
   12518:	add	ip, ip, #118784	; 0x1d000
   1251c:	ldr	pc, [ip, #3096]!	; 0xc18

00012520 <coda_cursor_read_int64@plt>:
   12520:	add	ip, pc, #0, 12
   12524:	add	ip, ip, #118784	; 0x1d000
   12528:	ldr	pc, [ip, #3088]!	; 0xc10

0001252c <vfprintf@plt>:
   1252c:	add	ip, pc, #0, 12
   12530:	add	ip, ip, #118784	; 0x1d000
   12534:	ldr	pc, [ip, #3080]!	; 0xc08

00012538 <coda_cursor_goto@plt>:
   12538:	add	ip, pc, #0, 12
   1253c:	add	ip, ip, #118784	; 0x1d000
   12540:	ldr	pc, [ip, #3072]!	; 0xc00

00012544 <coda_type_get_record_field_index_from_name@plt>:
   12544:	add	ip, pc, #0, 12
   12548:	add	ip, ip, #118784	; 0x1d000
   1254c:	ldr	pc, [ip, #3064]!	; 0xbf8

00012550 <coda_cursor_read_complex_double_pair@plt>:
   12550:	add	ip, pc, #0, 12
   12554:	add	ip, ip, #118784	; 0x1d000
   12558:	ldr	pc, [ip, #3056]!	; 0xbf0

0001255c <coda_cursor_goto_next_record_field@plt>:
   1255c:	add	ip, pc, #0, 12
   12560:	add	ip, ip, #118784	; 0x1d000
   12564:	ldr	pc, [ip, #3048]!	; 0xbe8

00012568 <fputc@plt>:
   12568:	add	ip, pc, #0, 12
   1256c:	add	ip, ip, #118784	; 0x1d000
   12570:	ldr	pc, [ip, #3040]!	; 0xbe0

00012574 <coda_type_get_array_dim@plt>:
   12574:	add	ip, pc, #0, 12
   12578:	add	ip, ip, #118784	; 0x1d000
   1257c:	ldr	pc, [ip, #3032]!	; 0xbd8

00012580 <coda_cursor_get_bit_size@plt>:
   12580:	add	ip, pc, #0, 12
   12584:	add	ip, ip, #118784	; 0x1d000
   12588:	ldr	pc, [ip, #3024]!	; 0xbd0

0001258c <atoi@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #118784	; 0x1d000
   12594:	ldr	pc, [ip, #3016]!	; 0xbc8

00012598 <coda_errno_to_string@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #118784	; 0x1d000
   125a0:	ldr	pc, [ip, #3008]!	; 0xbc0

000125a4 <coda_cursor_use_base_type_of_special_type@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #118784	; 0x1d000
   125ac:	ldr	pc, [ip, #3000]!	; 0xbb8

000125b0 <coda_cursor_get_available_union_field_index@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #118784	; 0x1d000
   125b8:	ldr	pc, [ip, #2992]!	; 0xbb0

000125bc <coda_cursor_read_int32@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #118784	; 0x1d000
   125c4:	ldr	pc, [ip, #2984]!	; 0xba8

000125c8 <coda_cursor_get_file_bit_offset@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #118784	; 0x1d000
   125d0:	ldr	pc, [ip, #2976]!	; 0xba0

000125d4 <coda_get_libcoda_version@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #118784	; 0x1d000
   125dc:	ldr	pc, [ip, #2968]!	; 0xb98

000125e0 <coda_get_errno@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #118784	; 0x1d000
   125e8:	ldr	pc, [ip, #2960]!	; 0xb90

000125ec <coda_type_get_special_base_type@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #118784	; 0x1d000
   125f4:	ldr	pc, [ip, #2952]!	; 0xb88

000125f8 <coda_type_get_record_field_name@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #118784	; 0x1d000
   12600:	ldr	pc, [ip, #2944]!	; 0xb80

00012604 <fputs@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #118784	; 0x1d000
   1260c:	ldr	pc, [ip, #2936]!	; 0xb78

00012610 <abort@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #118784	; 0x1d000
   12618:	ldr	pc, [ip, #2928]!	; 0xb70

0001261c <coda_cursor_read_bits@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #118784	; 0x1d000
   12624:	ldr	pc, [ip, #2920]!	; 0xb68

00012628 <coda_str64@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #118784	; 0x1d000
   12630:	ldr	pc, [ip, #2912]!	; 0xb60

00012634 <__assert_fail@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #118784	; 0x1d000
   1263c:	ldr	pc, [ip, #2904]!	; 0xb58

00012640 <coda_type_get_class@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #118784	; 0x1d000
   12648:	ldr	pc, [ip, #2896]!	; 0xb50

Disassembly of section .text:

0001264c <_start@@Base>:
   1264c:	mov	fp, #0
   12650:	mov	lr, #0
   12654:	pop	{r1}		; (ldr r1, [sp], #4)
   12658:	mov	r2, sp
   1265c:	push	{r2}		; (str r2, [sp, #-4]!)
   12660:	push	{r0}		; (str r0, [sp, #-4]!)
   12664:	ldr	ip, [pc, #16]	; 1267c <_start@@Base+0x30>
   12668:	push	{ip}		; (str ip, [sp, #-4]!)
   1266c:	ldr	r0, [pc, #12]	; 12680 <_start@@Base+0x34>
   12670:	ldr	r3, [pc, #12]	; 12684 <_start@@Base+0x38>
   12674:	bl	123ac <__libc_start_main@plt>
   12678:	bl	12610 <abort@plt>
   1267c:	andeq	sp, r1, r4, asr #11
   12680:	andeq	ip, r1, r0, lsl #30
   12684:	andeq	sp, r1, r4, ror #10
   12688:	ldr	r3, [pc, #20]	; 126a4 <_start@@Base+0x58>
   1268c:	ldr	r2, [pc, #20]	; 126a8 <_start@@Base+0x5c>
   12690:	add	r3, pc, r3
   12694:	ldr	r2, [r3, r2]
   12698:	cmp	r2, #0
   1269c:	bxeq	lr
   126a0:	b	123b8 <__gmon_start__@plt>
   126a4:	andeq	sp, r1, r8, ror #18
   126a8:	muleq	r0, ip, r1
   126ac:	ldr	r0, [pc, #24]	; 126cc <_start@@Base+0x80>
   126b0:	ldr	r3, [pc, #24]	; 126d0 <_start@@Base+0x84>
   126b4:	cmp	r3, r0
   126b8:	bxeq	lr
   126bc:	ldr	r3, [pc, #16]	; 126d4 <_start@@Base+0x88>
   126c0:	cmp	r3, #0
   126c4:	bxeq	lr
   126c8:	bx	r3
   126cc:			; <UNDEFINED> instruction: 0x000301b4
   126d0:			; <UNDEFINED> instruction: 0x000301b4
   126d4:	andeq	r0, r0, r0
   126d8:	ldr	r0, [pc, #36]	; 12704 <_start@@Base+0xb8>
   126dc:	ldr	r1, [pc, #36]	; 12708 <_start@@Base+0xbc>
   126e0:	sub	r1, r1, r0
   126e4:	asr	r1, r1, #2
   126e8:	add	r1, r1, r1, lsr #31
   126ec:	asrs	r1, r1, #1
   126f0:	bxeq	lr
   126f4:	ldr	r3, [pc, #16]	; 1270c <_start@@Base+0xc0>
   126f8:	cmp	r3, #0
   126fc:	bxeq	lr
   12700:	bx	r3
   12704:			; <UNDEFINED> instruction: 0x000301b4
   12708:			; <UNDEFINED> instruction: 0x000301b4
   1270c:	andeq	r0, r0, r0
   12710:	push	{r4, lr}
   12714:	ldr	r4, [pc, #24]	; 12734 <_start@@Base+0xe8>
   12718:	ldrb	r3, [r4]
   1271c:	cmp	r3, #0
   12720:	popne	{r4, pc}
   12724:	bl	126ac <_start@@Base+0x60>
   12728:	mov	r3, #1
   1272c:	strb	r3, [r4]
   12730:	pop	{r4, pc}
   12734:	andeq	r0, r3, r0, asr #3
   12738:	b	126d8 <_start@@Base+0x8c>
   1273c:	str	fp, [sp, #-8]!
   12740:	str	lr, [sp, #4]
   12744:	add	fp, sp, #4
   12748:	sub	sp, sp, #24
   1274c:	str	r0, [fp, #-24]	; 0xffffffe8
   12750:	mov	r3, #0
   12754:	str	r3, [fp, #-8]
   12758:	mov	r3, #0
   1275c:	str	r3, [fp, #-12]
   12760:	b	12850 <_start@@Base+0x204>
   12764:	movw	r3, #496	; 0x1f0
   12768:	movt	r3, #3
   1276c:	ldr	r2, [fp, #-12]
   12770:	add	r2, r2, #2
   12774:	ldr	r3, [r3, r2, lsl #2]
   12778:	sub	r2, fp, #20
   1277c:	mov	r1, r2
   12780:	mov	r0, r3
   12784:	bl	12640 <coda_type_get_class@plt>
   12788:	mov	r3, r0
   1278c:	cmp	r3, #0
   12790:	beq	12798 <_start@@Base+0x14c>
   12794:	bl	1aeb8 <handle_coda_error@@Base>
   12798:	ldr	r3, [fp, #-20]	; 0xffffffec
   1279c:	cmp	r3, #1
   127a0:	bne	12844 <_start@@Base+0x1f8>
   127a4:	mov	r3, #0
   127a8:	str	r3, [fp, #-16]
   127ac:	b	12804 <_start@@Base+0x1b8>
   127b0:	movw	r2, #496	; 0x1f0
   127b4:	movt	r2, #3
   127b8:	ldr	r1, [fp, #-8]
   127bc:	mov	r3, r1
   127c0:	lsl	r3, r3, #2
   127c4:	add	r3, r3, r1
   127c8:	lsl	r3, r3, #2
   127cc:	ldr	r1, [fp, #-16]
   127d0:	add	r3, r3, r1
   127d4:	add	r3, r3, #212	; 0xd4
   127d8:	ldr	r2, [r2, r3, lsl #2]
   127dc:	movw	r3, #4252	; 0x109c
   127e0:	movt	r3, #3
   127e4:	ldr	r3, [r3]
   127e8:	movw	r1, #54740	; 0xd5d4
   127ec:	movt	r1, #1
   127f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127f4:	bl	12430 <fprintf@plt>
   127f8:	ldr	r3, [fp, #-16]
   127fc:	add	r3, r3, #1
   12800:	str	r3, [fp, #-16]
   12804:	movw	r2, #496	; 0x1f0
   12808:	movt	r2, #3
   1280c:	ldr	r1, [fp, #-8]
   12810:	mov	r3, r1
   12814:	lsl	r3, r3, #2
   12818:	add	r3, r3, r1
   1281c:	lsl	r3, r3, #4
   12820:	add	r3, r2, r3
   12824:	add	r3, r3, #804	; 0x324
   12828:	ldr	r3, [r3]
   1282c:	ldr	r2, [fp, #-16]
   12830:	cmp	r2, r3
   12834:	blt	127b0 <_start@@Base+0x164>
   12838:	ldr	r3, [fp, #-8]
   1283c:	add	r3, r3, #1
   12840:	str	r3, [fp, #-8]
   12844:	ldr	r3, [fp, #-12]
   12848:	add	r3, r3, #1
   1284c:	str	r3, [fp, #-12]
   12850:	movw	r3, #496	; 0x1f0
   12854:	movt	r3, #3
   12858:	ldr	r3, [r3, #136]	; 0x88
   1285c:	ldr	r2, [fp, #-12]
   12860:	cmp	r2, r3
   12864:	blt	12764 <_start@@Base+0x118>
   12868:	nop	{0}
   1286c:	sub	sp, fp, #4
   12870:	ldr	fp, [sp]
   12874:	add	sp, sp, #4
   12878:	pop	{pc}		; (ldr pc, [sp], #4)
   1287c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12880:	strd	r6, [sp, #8]
   12884:	strd	r8, [sp, #16]
   12888:	str	fp, [sp, #24]
   1288c:	str	lr, [sp, #28]
   12890:	add	fp, sp, #28
   12894:	sub	sp, sp, #216	; 0xd8
   12898:	str	r0, [fp, #-224]	; 0xffffff20
   1289c:	str	r1, [fp, #-228]	; 0xffffff1c
   128a0:	movw	r3, #4264	; 0x10a8
   128a4:	movt	r3, #3
   128a8:	ldr	r3, [r3]
   128ac:	cmp	r3, #0
   128b0:	beq	128bc <_start@@Base+0x270>
   128b4:	ldr	r0, [fp, #-224]	; 0xffffff20
   128b8:	bl	1273c <_start@@Base+0xf0>
   128bc:	movw	r3, #496	; 0x1f0
   128c0:	movt	r3, #3
   128c4:	ldr	r2, [fp, #-228]	; 0xffffff1c
   128c8:	add	r2, r2, #2
   128cc:	ldr	r3, [r3, r2, lsl #2]
   128d0:	sub	r2, fp, #56	; 0x38
   128d4:	mov	r1, r2
   128d8:	mov	r0, r3
   128dc:	bl	12640 <coda_type_get_class@plt>
   128e0:	mov	r3, r0
   128e4:	cmp	r3, #0
   128e8:	beq	128f0 <_start@@Base+0x2a4>
   128ec:	bl	1aeb8 <handle_coda_error@@Base>
   128f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   128f4:	cmp	r3, #6
   128f8:	ldrls	pc, [pc, r3, lsl #2]
   128fc:	b	13124 <_start@@Base+0xad8>
   12900:	strdeq	r3, [r1], -r8
   12904:	strdeq	r3, [r1], -r8
   12908:	andeq	r2, r1, ip, lsl r9
   1290c:	andeq	r2, r1, ip, lsl r9
   12910:	andeq	r2, r1, ip, lsl r9
   12914:	andeq	r2, r1, ip, lsl r9
   12918:	andeq	r2, r1, r0, lsl pc
   1291c:	movw	r3, #496	; 0x1f0
   12920:	movt	r3, #3
   12924:	ldr	r2, [fp, #-228]	; 0xffffff1c
   12928:	add	r2, r2, #2
   1292c:	ldr	r3, [r3, r2, lsl #2]
   12930:	sub	r2, fp, #60	; 0x3c
   12934:	mov	r1, r2
   12938:	mov	r0, r3
   1293c:	bl	123f4 <coda_type_get_read_type@plt>
   12940:	mov	r3, r0
   12944:	cmp	r3, #0
   12948:	beq	12950 <_start@@Base+0x304>
   1294c:	bl	1aeb8 <handle_coda_error@@Base>
   12950:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12954:	add	r3, r3, #1
   12958:	cmp	r3, #13
   1295c:	ldrls	pc, [pc, r3, lsl #2]
   12960:	b	13118 <_start@@Base+0xacc>
   12964:	andeq	r2, r1, ip, ror #29
   12968:	muleq	r1, r0, sp
   1296c:	andeq	r2, r1, ip, asr #27
   12970:	muleq	r1, r0, sp
   12974:	andeq	r2, r1, ip, asr #27
   12978:	muleq	r1, r0, sp
   1297c:	andeq	r2, r1, ip, asr #27
   12980:	andeq	r2, r1, r8, lsl #28
   12984:	andeq	r2, r1, ip, asr #28
   12988:	muleq	r1, r0, lr
   1298c:	muleq	r1, r0, lr
   12990:	muleq	r1, ip, r9
   12994:	andeq	r2, r1, r0, lsl #20
   12998:	ldrdeq	r2, [r1], -ip
   1299c:	sub	r3, fp, #61	; 0x3d
   129a0:	mov	r1, r3
   129a4:	ldr	r0, [pc, #1956]	; 13150 <_start@@Base+0xb04>
   129a8:	bl	12478 <coda_cursor_read_char@plt>
   129ac:	mov	r3, r0
   129b0:	cmp	r3, #0
   129b4:	beq	129bc <_start@@Base+0x370>
   129b8:	bl	1aeb8 <handle_coda_error@@Base>
   129bc:	movw	r3, #4652	; 0x122c
   129c0:	movt	r3, #3
   129c4:	ldr	r3, [r3]
   129c8:	cmp	r3, #0
   129cc:	beq	129ec <_start@@Base+0x3a0>
   129d0:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   129d4:	mov	r2, r3
   129d8:	movw	r1, #54748	; 0xd5dc
   129dc:	movt	r1, #1
   129e0:	ldr	r0, [fp, #-224]	; 0xffffff20
   129e4:	bl	12430 <fprintf@plt>
   129e8:	b	12f0c <_start@@Base+0x8c0>
   129ec:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   129f0:	ldr	r1, [fp, #-224]	; 0xffffff20
   129f4:	mov	r0, r3
   129f8:	bl	12568 <fputc@plt>
   129fc:	b	12f0c <_start@@Base+0x8c0>
   12a00:	sub	r3, fp, #68	; 0x44
   12a04:	mov	r1, r3
   12a08:	ldr	r0, [pc, #1856]	; 13150 <_start@@Base+0xb04>
   12a0c:	bl	12400 <coda_cursor_get_string_length@plt>
   12a10:	mov	r3, r0
   12a14:	cmp	r3, #0
   12a18:	beq	12a20 <_start@@Base+0x3d4>
   12a1c:	bl	1aeb8 <handle_coda_error@@Base>
   12a20:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12a24:	add	r3, r3, #1
   12a28:	mov	r0, r3
   12a2c:	bl	123a0 <malloc@plt>
   12a30:	mov	r3, r0
   12a34:	str	r3, [fp, #-36]	; 0xffffffdc
   12a38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12a3c:	cmp	r3, #0
   12a40:	bne	12a70 <_start@@Base+0x424>
   12a44:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12a48:	add	r2, r3, #1
   12a4c:	mov	r3, #126	; 0x7e
   12a50:	str	r3, [sp]
   12a54:	movw	r3, #54756	; 0xd5e4
   12a58:	movt	r3, #1
   12a5c:	movw	r1, #54840	; 0xd638
   12a60:	movt	r1, #1
   12a64:	mvn	r0, #0
   12a68:	bl	12220 <coda_set_error@plt>
   12a6c:	bl	1aeb8 <handle_coda_error@@Base>
   12a70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12a74:	add	r3, r3, #1
   12a78:	mov	r2, r3
   12a7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12a80:	ldr	r0, [pc, #1736]	; 13150 <_start@@Base+0xb04>
   12a84:	bl	123c4 <coda_cursor_read_string@plt>
   12a88:	mov	r3, r0
   12a8c:	cmp	r3, #0
   12a90:	beq	12a98 <_start@@Base+0x44c>
   12a94:	bl	1aeb8 <handle_coda_error@@Base>
   12a98:	movw	r3, #4652	; 0x122c
   12a9c:	movt	r3, #3
   12aa0:	ldr	r3, [r3]
   12aa4:	cmp	r3, #0
   12aa8:	beq	12ac4 <_start@@Base+0x478>
   12aac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12ab0:	movw	r1, #54896	; 0xd670
   12ab4:	movt	r1, #1
   12ab8:	ldr	r0, [fp, #-224]	; 0xffffff20
   12abc:	bl	12430 <fprintf@plt>
   12ac0:	b	12ad0 <_start@@Base+0x484>
   12ac4:	ldr	r1, [fp, #-224]	; 0xffffff20
   12ac8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12acc:	bl	12604 <fputs@plt>
   12ad0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12ad4:	bl	12268 <free@plt>
   12ad8:	b	12f0c <_start@@Base+0x8c0>
   12adc:	sub	r3, fp, #76	; 0x4c
   12ae0:	mov	r1, r3
   12ae4:	ldr	r0, [pc, #1636]	; 13150 <_start@@Base+0xb04>
   12ae8:	bl	12580 <coda_cursor_get_bit_size@plt>
   12aec:	mov	r3, r0
   12af0:	cmp	r3, #0
   12af4:	beq	12afc <_start@@Base+0x4b0>
   12af8:	bl	1aeb8 <handle_coda_error@@Base>
   12afc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   12b00:	mov	r2, #0
   12b04:	mov	r3, #0
   12b08:	lsr	r2, r0, #3
   12b0c:	orr	r2, r2, r1, lsl #29
   12b10:	asr	r3, r1, #3
   12b14:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   12b18:	mov	r8, #7
   12b1c:	mov	r9, #0
   12b20:	and	r6, r0, r8
   12b24:	and	r7, r1, r9
   12b28:	orrs	r1, r6, r7
   12b2c:	beq	12b3c <_start@@Base+0x4f0>
   12b30:	mov	r0, #1
   12b34:	mov	r1, #0
   12b38:	b	12b44 <_start@@Base+0x4f8>
   12b3c:	mov	r0, #0
   12b40:	mov	r1, #0
   12b44:	adds	r4, r0, r2
   12b48:	adc	r5, r1, r3
   12b4c:	strd	r4, [fp, #-44]	; 0xffffffd4
   12b50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12b54:	mov	r0, r3
   12b58:	bl	123a0 <malloc@plt>
   12b5c:	mov	r3, r0
   12b60:	str	r3, [fp, #-48]	; 0xffffffd0
   12b64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b68:	cmp	r3, #0
   12b6c:	bne	12b98 <_start@@Base+0x54c>
   12b70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12b74:	mov	r3, #163	; 0xa3
   12b78:	str	r3, [sp]
   12b7c:	movw	r3, #54756	; 0xd5e4
   12b80:	movt	r3, #1
   12b84:	movw	r1, #54840	; 0xd638
   12b88:	movt	r1, #1
   12b8c:	mvn	r0, #0
   12b90:	bl	12220 <coda_set_error@plt>
   12b94:	bl	1aeb8 <handle_coda_error@@Base>
   12b98:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   12b9c:	strd	r2, [sp]
   12ba0:	mov	r2, #0
   12ba4:	mov	r3, #0
   12ba8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12bac:	ldr	r0, [pc, #1436]	; 13150 <_start@@Base+0xb04>
   12bb0:	bl	1261c <coda_cursor_read_bits@plt>
   12bb4:	mov	r3, r0
   12bb8:	cmp	r3, #0
   12bbc:	beq	12bc4 <_start@@Base+0x578>
   12bc0:	bl	1aeb8 <handle_coda_error@@Base>
   12bc4:	mov	r3, #0
   12bc8:	str	r3, [fp, #-32]	; 0xffffffe0
   12bcc:	b	12d68 <_start@@Base+0x71c>
   12bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12bd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12bd8:	add	r3, r2, r3
   12bdc:	ldrb	r3, [r3]
   12be0:	strb	r3, [fp, #-49]	; 0xffffffcf
   12be4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12be8:	cmp	r3, #10
   12bec:	beq	12c8c <_start@@Base+0x640>
   12bf0:	cmp	r3, #10
   12bf4:	bgt	12c14 <_start@@Base+0x5c8>
   12bf8:	cmp	r3, #8
   12bfc:	beq	12c54 <_start@@Base+0x608>
   12c00:	cmp	r3, #8
   12c04:	bgt	12c70 <_start@@Base+0x624>
   12c08:	cmp	r3, #7
   12c0c:	beq	12c38 <_start@@Base+0x5ec>
   12c10:	b	12d18 <_start@@Base+0x6cc>
   12c14:	cmp	r3, #12
   12c18:	beq	12cc4 <_start@@Base+0x678>
   12c1c:	cmp	r3, #12
   12c20:	blt	12ca8 <_start@@Base+0x65c>
   12c24:	cmp	r3, #13
   12c28:	beq	12ce0 <_start@@Base+0x694>
   12c2c:	cmp	r3, #92	; 0x5c
   12c30:	beq	12cfc <_start@@Base+0x6b0>
   12c34:	b	12d18 <_start@@Base+0x6cc>
   12c38:	ldr	r3, [fp, #-224]	; 0xffffff20
   12c3c:	mov	r2, #2
   12c40:	mov	r1, #1
   12c44:	movw	r0, #54904	; 0xd678
   12c48:	movt	r0, #1
   12c4c:	bl	1234c <fwrite@plt>
   12c50:	b	12d5c <_start@@Base+0x710>
   12c54:	ldr	r3, [fp, #-224]	; 0xffffff20
   12c58:	mov	r2, #2
   12c5c:	mov	r1, #1
   12c60:	movw	r0, #54908	; 0xd67c
   12c64:	movt	r0, #1
   12c68:	bl	1234c <fwrite@plt>
   12c6c:	b	12d5c <_start@@Base+0x710>
   12c70:	ldr	r3, [fp, #-224]	; 0xffffff20
   12c74:	mov	r2, #2
   12c78:	mov	r1, #1
   12c7c:	movw	r0, #54912	; 0xd680
   12c80:	movt	r0, #1
   12c84:	bl	1234c <fwrite@plt>
   12c88:	b	12d5c <_start@@Base+0x710>
   12c8c:	ldr	r3, [fp, #-224]	; 0xffffff20
   12c90:	mov	r2, #2
   12c94:	mov	r1, #1
   12c98:	movw	r0, #54916	; 0xd684
   12c9c:	movt	r0, #1
   12ca0:	bl	1234c <fwrite@plt>
   12ca4:	b	12d5c <_start@@Base+0x710>
   12ca8:	ldr	r3, [fp, #-224]	; 0xffffff20
   12cac:	mov	r2, #2
   12cb0:	mov	r1, #1
   12cb4:	movw	r0, #54920	; 0xd688
   12cb8:	movt	r0, #1
   12cbc:	bl	1234c <fwrite@plt>
   12cc0:	b	12d5c <_start@@Base+0x710>
   12cc4:	ldr	r3, [fp, #-224]	; 0xffffff20
   12cc8:	mov	r2, #2
   12ccc:	mov	r1, #1
   12cd0:	movw	r0, #54924	; 0xd68c
   12cd4:	movt	r0, #1
   12cd8:	bl	1234c <fwrite@plt>
   12cdc:	b	12d5c <_start@@Base+0x710>
   12ce0:	ldr	r3, [fp, #-224]	; 0xffffff20
   12ce4:	mov	r2, #2
   12ce8:	mov	r1, #1
   12cec:	movw	r0, #54928	; 0xd690
   12cf0:	movt	r0, #1
   12cf4:	bl	1234c <fwrite@plt>
   12cf8:	b	12d5c <_start@@Base+0x710>
   12cfc:	ldr	r3, [fp, #-224]	; 0xffffff20
   12d00:	mov	r2, #2
   12d04:	mov	r1, #1
   12d08:	movw	r0, #54932	; 0xd694
   12d0c:	movt	r0, #1
   12d10:	bl	1234c <fwrite@plt>
   12d14:	b	12d5c <_start@@Base+0x710>
   12d18:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d1c:	cmp	r3, #31
   12d20:	bls	12d44 <_start@@Base+0x6f8>
   12d24:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d28:	cmp	r3, #126	; 0x7e
   12d2c:	bhi	12d44 <_start@@Base+0x6f8>
   12d30:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d34:	ldr	r1, [fp, #-224]	; 0xffffff20
   12d38:	mov	r0, r3
   12d3c:	bl	12568 <fputc@plt>
   12d40:	b	12d5c <_start@@Base+0x710>
   12d44:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12d48:	mov	r2, r3
   12d4c:	movw	r1, #54936	; 0xd698
   12d50:	movt	r1, #1
   12d54:	ldr	r0, [fp, #-224]	; 0xffffff20
   12d58:	bl	12430 <fprintf@plt>
   12d5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d60:	add	r3, r3, #1
   12d64:	str	r3, [fp, #-32]	; 0xffffffe0
   12d68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12d6c:	mov	r0, r3
   12d70:	asr	r1, r0, #31
   12d74:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12d78:	cmp	r0, r2
   12d7c:	sbcs	r3, r1, r3
   12d80:	blt	12bd0 <_start@@Base+0x584>
   12d84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12d88:	bl	12268 <free@plt>
   12d8c:	b	12f0c <_start@@Base+0x8c0>
   12d90:	sub	r3, fp, #80	; 0x50
   12d94:	mov	r1, r3
   12d98:	ldr	r0, [pc, #944]	; 13150 <_start@@Base+0xb04>
   12d9c:	bl	125bc <coda_cursor_read_int32@plt>
   12da0:	mov	r3, r0
   12da4:	cmp	r3, #0
   12da8:	beq	12db0 <_start@@Base+0x764>
   12dac:	bl	1aeb8 <handle_coda_error@@Base>
   12db0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12db4:	mov	r2, r3
   12db8:	movw	r1, #54944	; 0xd6a0
   12dbc:	movt	r1, #1
   12dc0:	ldr	r0, [fp, #-224]	; 0xffffff20
   12dc4:	bl	12430 <fprintf@plt>
   12dc8:	b	12f0c <_start@@Base+0x8c0>
   12dcc:	sub	r3, fp, #84	; 0x54
   12dd0:	mov	r1, r3
   12dd4:	ldr	r0, [pc, #884]	; 13150 <_start@@Base+0xb04>
   12dd8:	bl	1228c <coda_cursor_read_uint32@plt>
   12ddc:	mov	r3, r0
   12de0:	cmp	r3, #0
   12de4:	beq	12dec <_start@@Base+0x7a0>
   12de8:	bl	1aeb8 <handle_coda_error@@Base>
   12dec:	ldr	r3, [fp, #-84]	; 0xffffffac
   12df0:	mov	r2, r3
   12df4:	movw	r1, #54948	; 0xd6a4
   12df8:	movt	r1, #1
   12dfc:	ldr	r0, [fp, #-224]	; 0xffffff20
   12e00:	bl	12430 <fprintf@plt>
   12e04:	b	12f0c <_start@@Base+0x8c0>
   12e08:	sub	r3, fp, #92	; 0x5c
   12e0c:	mov	r1, r3
   12e10:	ldr	r0, [pc, #824]	; 13150 <_start@@Base+0xb04>
   12e14:	bl	12520 <coda_cursor_read_int64@plt>
   12e18:	mov	r3, r0
   12e1c:	cmp	r3, #0
   12e20:	beq	12e28 <_start@@Base+0x7dc>
   12e24:	bl	1aeb8 <handle_coda_error@@Base>
   12e28:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   12e2c:	sub	r3, fp, #116	; 0x74
   12e30:	mov	r2, r3
   12e34:	bl	12628 <coda_str64@plt>
   12e38:	sub	r3, fp, #116	; 0x74
   12e3c:	ldr	r1, [fp, #-224]	; 0xffffff20
   12e40:	mov	r0, r3
   12e44:	bl	12604 <fputs@plt>
   12e48:	b	12f0c <_start@@Base+0x8c0>
   12e4c:	sub	r3, fp, #124	; 0x7c
   12e50:	mov	r1, r3
   12e54:	ldr	r0, [pc, #756]	; 13150 <_start@@Base+0xb04>
   12e58:	bl	1240c <coda_cursor_read_uint64@plt>
   12e5c:	mov	r3, r0
   12e60:	cmp	r3, #0
   12e64:	beq	12e6c <_start@@Base+0x820>
   12e68:	bl	1aeb8 <handle_coda_error@@Base>
   12e6c:	ldrd	r0, [fp, #-124]	; 0xffffff84
   12e70:	sub	r3, fp, #148	; 0x94
   12e74:	mov	r2, r3
   12e78:	bl	1225c <coda_str64u@plt>
   12e7c:	sub	r3, fp, #148	; 0x94
   12e80:	ldr	r1, [fp, #-224]	; 0xffffff20
   12e84:	mov	r0, r3
   12e88:	bl	12604 <fputs@plt>
   12e8c:	b	12f0c <_start@@Base+0x8c0>
   12e90:	sub	r3, fp, #156	; 0x9c
   12e94:	mov	r1, r3
   12e98:	ldr	r0, [pc, #688]	; 13150 <_start@@Base+0xb04>
   12e9c:	bl	12418 <coda_cursor_read_double@plt>
   12ea0:	mov	r3, r0
   12ea4:	cmp	r3, #0
   12ea8:	beq	12eb0 <_start@@Base+0x864>
   12eac:	bl	1aeb8 <handle_coda_error@@Base>
   12eb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12eb4:	cmp	r3, #8
   12eb8:	bne	12ed4 <_start@@Base+0x888>
   12ebc:	ldrd	r2, [fp, #-156]	; 0xffffff64
   12ec0:	movw	r1, #54952	; 0xd6a8
   12ec4:	movt	r1, #1
   12ec8:	ldr	r0, [fp, #-224]	; 0xffffff20
   12ecc:	bl	12430 <fprintf@plt>
   12ed0:	b	12f0c <_start@@Base+0x8c0>
   12ed4:	ldrd	r2, [fp, #-156]	; 0xffffff64
   12ed8:	movw	r1, #54960	; 0xd6b0
   12edc:	movt	r1, #1
   12ee0:	ldr	r0, [fp, #-224]	; 0xffffff20
   12ee4:	bl	12430 <fprintf@plt>
   12ee8:	b	12f0c <_start@@Base+0x8c0>
   12eec:	movw	r3, #55036	; 0xd6fc
   12ef0:	movt	r3, #1
   12ef4:	movw	r2, #294	; 0x126
   12ef8:	movw	r1, #54756	; 0xd5e4
   12efc:	movt	r1, #1
   12f00:	movw	r0, #54968	; 0xd6b8
   12f04:	movt	r0, #1
   12f08:	bl	12634 <__assert_fail@plt>
   12f0c:	b	13118 <_start@@Base+0xacc>
   12f10:	movw	r3, #496	; 0x1f0
   12f14:	movt	r3, #3
   12f18:	ldr	r2, [fp, #-228]	; 0xffffff1c
   12f1c:	add	r2, r2, #2
   12f20:	ldr	r3, [r3, r2, lsl #2]
   12f24:	sub	r2, fp, #160	; 0xa0
   12f28:	mov	r1, r2
   12f2c:	mov	r0, r3
   12f30:	bl	124a8 <coda_type_get_special_type@plt>
   12f34:	mov	r3, r0
   12f38:	cmp	r3, #0
   12f3c:	beq	12f44 <_start@@Base+0x8f8>
   12f40:	bl	1aeb8 <handle_coda_error@@Base>
   12f44:	ldr	r3, [fp, #-160]	; 0xffffff60
   12f48:	cmp	r3, #3
   12f4c:	ldrls	pc, [pc, r3, lsl #2]
   12f50:	b	13120 <_start@@Base+0xad4>
   12f54:	strdeq	r3, [r1], -r0
   12f58:	andeq	r2, r1, r4, ror #30
   12f5c:	andeq	r2, r1, r4, ror #30
   12f60:	muleq	r1, r8, r0
   12f64:	sub	r3, fp, #172	; 0xac
   12f68:	mov	r1, r3
   12f6c:	ldr	r0, [pc, #476]	; 13150 <_start@@Base+0xb04>
   12f70:	bl	12418 <coda_cursor_read_double@plt>
   12f74:	mov	r3, r0
   12f78:	cmp	r3, #0
   12f7c:	beq	12f84 <_start@@Base+0x938>
   12f80:	bl	1aeb8 <handle_coda_error@@Base>
   12f84:	ldr	r3, [fp, #-160]	; 0xffffff60
   12f88:	cmp	r3, #2
   12f8c:	bne	1307c <_start@@Base+0xa30>
   12f90:	movw	r3, #484	; 0x1e4
   12f94:	movt	r3, #3
   12f98:	ldr	r3, [r3]
   12f9c:	cmp	r3, #0
   12fa0:	beq	1307c <_start@@Base+0xa30>
   12fa4:	vldr	d7, [fp, #-172]	; 0xffffff54
   12fa8:	vmov.f64	d0, d7
   12fac:	bl	12424 <coda_isNaN@plt>
   12fb0:	mov	r3, r0
   12fb4:	cmp	r3, #0
   12fb8:	bne	12fd4 <_start@@Base+0x988>
   12fbc:	vldr	d7, [fp, #-172]	; 0xffffff54
   12fc0:	vmov.f64	d0, d7
   12fc4:	bl	122c8 <coda_isInf@plt>
   12fc8:	mov	r3, r0
   12fcc:	cmp	r3, #0
   12fd0:	beq	1300c <_start@@Base+0x9c0>
   12fd4:	movw	r2, #54972	; 0xd6bc
   12fd8:	movt	r2, #1
   12fdc:	sub	r3, fp, #200	; 0xc8
   12fe0:	ldrd	r0, [r2]
   12fe4:	strd	r0, [r3]
   12fe8:	ldrd	r0, [r2, #8]
   12fec:	strd	r0, [r3, #8]
   12ff0:	ldrd	r0, [r2, #16]
   12ff4:	strd	r0, [r3, #16]
   12ff8:	ldrh	r1, [r2, #24]
   12ffc:	strh	r1, [r3, #24]
   13000:	ldrb	r2, [r2, #26]
   13004:	strb	r2, [r3, #26]
   13008:	b	13038 <_start@@Base+0x9ec>
   1300c:	vldr	d7, [fp, #-172]	; 0xffffff54
   13010:	sub	r3, fp, #200	; 0xc8
   13014:	mov	r1, r3
   13018:	movw	r0, #55000	; 0xd6d8
   1301c:	movt	r0, #1
   13020:	vmov.f64	d0, d7
   13024:	bl	12244 <coda_time_double_to_string@plt>
   13028:	mov	r3, r0
   1302c:	cmp	r3, #0
   13030:	beq	13038 <_start@@Base+0x9ec>
   13034:	bl	1aeb8 <handle_coda_error@@Base>
   13038:	movw	r3, #4652	; 0x122c
   1303c:	movt	r3, #3
   13040:	ldr	r3, [r3]
   13044:	cmp	r3, #0
   13048:	beq	13068 <_start@@Base+0xa1c>
   1304c:	sub	r3, fp, #200	; 0xc8
   13050:	mov	r2, r3
   13054:	movw	r1, #54896	; 0xd670
   13058:	movt	r1, #1
   1305c:	ldr	r0, [fp, #-224]	; 0xffffff20
   13060:	bl	12430 <fprintf@plt>
   13064:	b	13094 <_start@@Base+0xa48>
   13068:	sub	r3, fp, #200	; 0xc8
   1306c:	ldr	r1, [fp, #-224]	; 0xffffff20
   13070:	mov	r0, r3
   13074:	bl	12604 <fputs@plt>
   13078:	b	13094 <_start@@Base+0xa48>
   1307c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13080:	movw	r1, #54960	; 0xd6b0
   13084:	movt	r1, #1
   13088:	ldr	r0, [fp, #-224]	; 0xffffff20
   1308c:	bl	12430 <fprintf@plt>
   13090:	b	130f4 <_start@@Base+0xaa8>
   13094:	b	130f4 <_start@@Base+0xaa8>
   13098:	sub	r3, fp, #220	; 0xdc
   1309c:	mov	r1, r3
   130a0:	ldr	r0, [pc, #168]	; 13150 <_start@@Base+0xb04>
   130a4:	bl	12550 <coda_cursor_read_complex_double_pair@plt>
   130a8:	mov	r3, r0
   130ac:	cmp	r3, #0
   130b0:	beq	130b8 <_start@@Base+0xa6c>
   130b4:	bl	1aeb8 <handle_coda_error@@Base>
   130b8:	ldrd	r0, [fp, #-220]	; 0xffffff24
   130bc:	movw	r3, #4252	; 0x109c
   130c0:	movt	r3, #3
   130c4:	ldr	ip, [r3]
   130c8:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   130cc:	strd	r2, [sp, #8]
   130d0:	str	ip, [sp]
   130d4:	mov	r2, r0
   130d8:	mov	r3, r1
   130dc:	movw	r1, #55028	; 0xd6f4
   130e0:	movt	r1, #1
   130e4:	ldr	r0, [fp, #-224]	; 0xffffff20
   130e8:	bl	12430 <fprintf@plt>
   130ec:	b	130f4 <_start@@Base+0xaa8>
   130f0:	nop	{0}
   130f4:	b	13120 <_start@@Base+0xad4>
   130f8:	movw	r3, #55036	; 0xd6fc
   130fc:	movt	r3, #1
   13100:	mov	r2, #368	; 0x170
   13104:	movw	r1, #54756	; 0xd5e4
   13108:	movt	r1, #1
   1310c:	movw	r0, #54968	; 0xd6b8
   13110:	movt	r0, #1
   13114:	bl	12634 <__assert_fail@plt>
   13118:	nop	{0}
   1311c:	b	13124 <_start@@Base+0xad8>
   13120:	nop	{0}
   13124:	ldr	r1, [fp, #-224]	; 0xffffff20
   13128:	mov	r0, #10
   1312c:	bl	12568 <fputc@plt>
   13130:	nop	{0}
   13134:	sub	sp, fp, #28
   13138:	ldrd	r4, [sp]
   1313c:	ldrd	r6, [sp, #8]
   13140:	ldrd	r8, [sp, #16]
   13144:	ldr	fp, [sp, #24]
   13148:	add	sp, sp, #28
   1314c:	pop	{pc}		; (ldr pc, [sp], #4)
   13150:	andeq	r0, r3, r0, lsl #5
   13154:	str	fp, [sp, #-8]!
   13158:	str	lr, [sp, #4]
   1315c:	add	fp, sp, #4
   13160:	sub	sp, sp, #80	; 0x50
   13164:	str	r0, [fp, #-72]	; 0xffffffb8
   13168:	str	r1, [fp, #-76]	; 0xffffffb4
   1316c:	str	r2, [fp, #-80]	; 0xffffffb0
   13170:	str	r3, [fp, #-84]	; 0xffffffac
   13174:	movw	r3, #496	; 0x1f0
   13178:	movt	r3, #3
   1317c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13180:	add	r2, r2, #2
   13184:	ldr	r3, [r3, r2, lsl #2]
   13188:	sub	r2, fp, #32
   1318c:	mov	r1, r2
   13190:	mov	r0, r3
   13194:	bl	12640 <coda_type_get_class@plt>
   13198:	mov	r3, r0
   1319c:	cmp	r3, #0
   131a0:	beq	131a8 <_start@@Base+0xb5c>
   131a4:	bl	1aeb8 <handle_coda_error@@Base>
   131a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   131ac:	cmp	r3, #0
   131b0:	beq	13574 <_start@@Base+0xf28>
   131b4:	cmp	r3, #1
   131b8:	bne	1361c <_start@@Base+0xfd0>
   131bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   131c0:	mov	r3, r2
   131c4:	lsl	r3, r3, #2
   131c8:	add	r3, r3, r2
   131cc:	lsl	r3, r3, #4
   131d0:	add	r2, r3, #800	; 0x320
   131d4:	movw	r3, #496	; 0x1f0
   131d8:	movt	r3, #3
   131dc:	add	r3, r2, r3
   131e0:	str	r3, [fp, #-20]	; 0xffffffec
   131e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131e8:	ldr	r3, [r3]
   131ec:	str	r3, [fp, #-24]	; 0xffffffe8
   131f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   131f4:	cmp	r3, #0
   131f8:	bne	13208 <_start@@Base+0xbbc>
   131fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13200:	mov	r2, #0
   13204:	str	r2, [r3, #44]	; 0x2c
   13208:	movw	r3, #4280	; 0x10b8
   1320c:	movt	r3, #3
   13210:	ldr	r2, [r3, #104]	; 0x68
   13214:	ldr	r3, [fp, #-20]	; 0xffffffec
   13218:	ldr	r1, [r3, #4]
   1321c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13220:	add	r3, r1, r3
   13224:	cmp	r2, r3
   13228:	movge	r3, #1
   1322c:	movlt	r3, #0
   13230:	uxtb	r3, r3
   13234:	str	r3, [fp, #-28]	; 0xffffffe4
   13238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1323c:	cmp	r3, #0
   13240:	beq	132a0 <_start@@Base+0xc54>
   13244:	movw	r3, #496	; 0x1f0
   13248:	movt	r3, #3
   1324c:	ldr	r3, [r3, #3360]	; 0xd20
   13250:	sub	r3, r3, #1
   13254:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13258:	cmp	r2, r3
   1325c:	bge	132a0 <_start@@Base+0xc54>
   13260:	ldr	r3, [fp, #-20]	; 0xffffffec
   13264:	ldr	r3, [r3, #44]	; 0x2c
   13268:	ldr	r2, [fp, #-20]	; 0xffffffec
   1326c:	ldr	r2, [r2, #40]	; 0x28
   13270:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13274:	add	r1, r1, #1
   13278:	mul	r0, r2, r3
   1327c:	movw	r2, #496	; 0x1f0
   13280:	movt	r2, #3
   13284:	mov	r3, r1
   13288:	lsl	r3, r3, #2
   1328c:	add	r3, r3, r1
   13290:	lsl	r3, r3, #4
   13294:	add	r3, r2, r3
   13298:	add	r3, r3, #844	; 0x34c
   1329c:	str	r0, [r3]
   132a0:	mov	r3, #1
   132a4:	str	r3, [fp, #-8]
   132a8:	mov	r3, #0
   132ac:	str	r3, [fp, #-12]
   132b0:	b	1339c <_start@@Base+0xd50>
   132b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   132b8:	ldr	r3, [fp, #-12]
   132bc:	add	r2, r2, r3
   132c0:	movw	r3, #4280	; 0x10b8
   132c4:	movt	r3, #3
   132c8:	add	r2, r2, #18
   132cc:	ldr	r3, [r3, r2, lsl #2]
   132d0:	cmp	r3, #0
   132d4:	beq	13328 <_start@@Base+0xcdc>
   132d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   132dc:	ldr	r3, [fp, #-12]
   132e0:	add	r3, r2, r3
   132e4:	movw	r2, #4280	; 0x10b8
   132e8:	movt	r2, #3
   132ec:	add	r3, r3, #26
   132f0:	lsl	r3, r3, #2
   132f4:	add	r3, r2, r3
   132f8:	ldr	r2, [r3, #4]
   132fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13300:	ldr	r3, [r3, #44]	; 0x2c
   13304:	lsl	r3, r3, #2
   13308:	add	r3, r2, r3
   1330c:	ldr	r2, [r3]
   13310:	ldr	r3, [fp, #-12]
   13314:	lsl	r3, r3, #2
   13318:	sub	r1, fp, #4
   1331c:	add	r3, r1, r3
   13320:	str	r2, [r3, #-64]	; 0xffffffc0
   13324:	b	1335c <_start@@Base+0xd10>
   13328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1332c:	ldr	r3, [fp, #-12]
   13330:	add	r3, r2, r3
   13334:	movw	r2, #4280	; 0x10b8
   13338:	movt	r2, #3
   1333c:	lsl	r3, r3, #2
   13340:	add	r3, r2, r3
   13344:	ldr	r2, [r3, #4]
   13348:	ldr	r3, [fp, #-12]
   1334c:	lsl	r3, r3, #2
   13350:	sub	r1, fp, #4
   13354:	add	r3, r1, r3
   13358:	str	r2, [r3, #-64]	; 0xffffffc0
   1335c:	ldr	r3, [fp, #-12]
   13360:	lsl	r3, r3, #2
   13364:	sub	r2, fp, #4
   13368:	add	r3, r2, r3
   1336c:	ldr	r2, [r3, #-64]	; 0xffffffc0
   13370:	ldr	r3, [fp, #-8]
   13374:	mul	r3, r2, r3
   13378:	str	r3, [fp, #-8]
   1337c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13380:	ldr	r2, [fp, #-12]
   13384:	add	r2, r2, #12
   13388:	mov	r1, #0
   1338c:	str	r1, [r3, r2, lsl #2]
   13390:	ldr	r3, [fp, #-12]
   13394:	add	r3, r3, #1
   13398:	str	r3, [fp, #-12]
   1339c:	ldr	r3, [fp, #-20]	; 0xffffffec
   133a0:	ldr	r3, [r3, #4]
   133a4:	ldr	r2, [fp, #-12]
   133a8:	cmp	r2, r3
   133ac:	blt	132b4 <_start@@Base+0xc68>
   133b0:	ldr	r3, [fp, #-8]
   133b4:	cmp	r3, #0
   133b8:	beq	13634 <_start@@Base+0xfe8>
   133bc:	ldr	r0, [pc, #640]	; 13644 <_start@@Base+0xff8>
   133c0:	bl	12340 <coda_cursor_goto_first_array_element@plt>
   133c4:	mov	r3, r0
   133c8:	cmp	r3, #0
   133cc:	beq	133d4 <_start@@Base+0xd88>
   133d0:	bl	1aeb8 <handle_coda_error@@Base>
   133d4:	mov	r3, #0
   133d8:	str	r3, [fp, #-12]
   133dc:	b	13558 <_start@@Base+0xf0c>
   133e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   133e4:	add	r1, r3, #1
   133e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   133ec:	add	r2, r3, #1
   133f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   133f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   133f8:	bl	13154 <_start@@Base+0xb08>
   133fc:	ldr	r3, [fp, #-8]
   13400:	sub	r3, r3, #1
   13404:	ldr	r2, [fp, #-12]
   13408:	cmp	r2, r3
   1340c:	bge	1354c <_start@@Base+0xf00>
   13410:	ldr	r0, [pc, #556]	; 13644 <_start@@Base+0xff8>
   13414:	bl	1243c <coda_cursor_goto_next_array_element@plt>
   13418:	mov	r3, r0
   1341c:	cmp	r3, #0
   13420:	beq	13428 <_start@@Base+0xddc>
   13424:	bl	1aeb8 <handle_coda_error@@Base>
   13428:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1342c:	cmp	r3, #0
   13430:	beq	134a4 <_start@@Base+0xe58>
   13434:	movw	r3, #496	; 0x1f0
   13438:	movt	r3, #3
   1343c:	ldr	r3, [r3, #3360]	; 0xd20
   13440:	sub	r3, r3, #1
   13444:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13448:	cmp	r2, r3
   1344c:	bge	134a4 <_start@@Base+0xe58>
   13450:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13454:	add	r1, r3, #1
   13458:	movw	r2, #496	; 0x1f0
   1345c:	movt	r2, #3
   13460:	mov	r3, r1
   13464:	lsl	r3, r3, #2
   13468:	add	r3, r3, r1
   1346c:	lsl	r3, r3, #4
   13470:	add	r3, r2, r3
   13474:	add	r3, r3, #844	; 0x34c
   13478:	ldr	r3, [r3]
   1347c:	add	r0, r3, #1
   13480:	movw	r2, #496	; 0x1f0
   13484:	movt	r2, #3
   13488:	mov	r3, r1
   1348c:	lsl	r3, r3, #2
   13490:	add	r3, r3, r1
   13494:	lsl	r3, r3, #4
   13498:	add	r3, r2, r3
   1349c:	add	r3, r3, #844	; 0x34c
   134a0:	str	r0, [r3]
   134a4:	movw	r3, #4264	; 0x10a8
   134a8:	movt	r3, #3
   134ac:	ldr	r3, [r3]
   134b0:	cmp	r3, #0
   134b4:	beq	1354c <_start@@Base+0xf00>
   134b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   134bc:	ldr	r3, [r3, #4]
   134c0:	sub	r3, r3, #1
   134c4:	str	r3, [fp, #-16]
   134c8:	b	13538 <_start@@Base+0xeec>
   134cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   134d0:	ldr	r2, [fp, #-16]
   134d4:	add	r2, r2, #12
   134d8:	ldr	r3, [r3, r2, lsl #2]
   134dc:	add	r1, r3, #1
   134e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134e4:	ldr	r2, [fp, #-16]
   134e8:	add	r2, r2, #12
   134ec:	str	r1, [r3, r2, lsl #2]
   134f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134f4:	ldr	r2, [fp, #-16]
   134f8:	add	r2, r2, #12
   134fc:	ldr	r2, [r3, r2, lsl #2]
   13500:	ldr	r3, [fp, #-16]
   13504:	lsl	r3, r3, #2
   13508:	sub	r1, fp, #4
   1350c:	add	r3, r1, r3
   13510:	ldr	r3, [r3, #-64]	; 0xffffffc0
   13514:	cmp	r2, r3
   13518:	bne	13548 <_start@@Base+0xefc>
   1351c:	ldr	r3, [fp, #-16]
   13520:	sub	r2, r3, #1
   13524:	str	r2, [fp, #-16]
   13528:	ldr	r2, [fp, #-20]	; 0xffffffec
   1352c:	add	r3, r3, #12
   13530:	mov	r1, #0
   13534:	str	r1, [r2, r3, lsl #2]
   13538:	ldr	r3, [fp, #-16]
   1353c:	cmp	r3, #0
   13540:	bge	134cc <_start@@Base+0xe80>
   13544:	b	1354c <_start@@Base+0xf00>
   13548:	nop	{0}
   1354c:	ldr	r3, [fp, #-12]
   13550:	add	r3, r3, #1
   13554:	str	r3, [fp, #-12]
   13558:	ldr	r2, [fp, #-12]
   1355c:	ldr	r3, [fp, #-8]
   13560:	cmp	r2, r3
   13564:	blt	133e0 <_start@@Base+0xd94>
   13568:	ldr	r0, [pc, #212]	; 13644 <_start@@Base+0xff8>
   1356c:	bl	123d0 <coda_cursor_goto_parent@plt>
   13570:	b	13634 <_start@@Base+0xfe8>
   13574:	movw	r2, #496	; 0x1f0
   13578:	movt	r2, #3
   1357c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13580:	add	r3, r3, #872	; 0x368
   13584:	lsl	r3, r3, #2
   13588:	add	r3, r2, r3
   1358c:	ldr	r3, [r3, #4]
   13590:	sub	r2, fp, #36	; 0x24
   13594:	mov	r1, r3
   13598:	ldr	r0, [pc, #164]	; 13644 <_start@@Base+0xff8>
   1359c:	bl	12208 <coda_cursor_get_record_field_available_status@plt>
   135a0:	mov	r3, r0
   135a4:	cmp	r3, #0
   135a8:	beq	135b0 <_start@@Base+0xf64>
   135ac:	bl	1aeb8 <handle_coda_error@@Base>
   135b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   135b4:	cmp	r3, #0
   135b8:	beq	13630 <_start@@Base+0xfe4>
   135bc:	movw	r2, #496	; 0x1f0
   135c0:	movt	r2, #3
   135c4:	ldr	r3, [fp, #-84]	; 0xffffffac
   135c8:	add	r3, r3, #872	; 0x368
   135cc:	lsl	r3, r3, #2
   135d0:	add	r3, r2, r3
   135d4:	ldr	r3, [r3, #4]
   135d8:	mov	r1, r3
   135dc:	ldr	r0, [pc, #96]	; 13644 <_start@@Base+0xff8>
   135e0:	bl	12370 <coda_cursor_goto_record_field_by_index@plt>
   135e4:	mov	r3, r0
   135e8:	cmp	r3, #0
   135ec:	beq	135f4 <_start@@Base+0xfa8>
   135f0:	bl	1aeb8 <handle_coda_error@@Base>
   135f4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   135f8:	add	r1, r3, #1
   135fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   13600:	add	r3, r3, #1
   13604:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13608:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1360c:	bl	13154 <_start@@Base+0xb08>
   13610:	ldr	r0, [pc, #44]	; 13644 <_start@@Base+0xff8>
   13614:	bl	123d0 <coda_cursor_goto_parent@plt>
   13618:	b	13630 <_start@@Base+0xfe4>
   1361c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13620:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13624:	bl	1287c <_start@@Base+0x230>
   13628:	nop	{0}
   1362c:	b	13634 <_start@@Base+0xfe8>
   13630:	nop	{0}
   13634:	sub	sp, fp, #4
   13638:	ldr	fp, [sp]
   1363c:	add	sp, sp, #4
   13640:	pop	{pc}		; (ldr pc, [sp], #4)
   13644:	andeq	r0, r3, r0, lsl #5

00013648 <export_data_element_to_ascii@@Base>:
   13648:	str	fp, [sp, #-8]!
   1364c:	str	lr, [sp, #4]
   13650:	add	fp, sp, #4
   13654:	movw	r3, #424	; 0x1a8
   13658:	movt	r3, #3
   1365c:	ldr	r3, [r3]
   13660:	cmp	r3, #0
   13664:	beq	1367c <export_data_element_to_ascii@@Base+0x34>
   13668:	movw	r3, #424	; 0x1a8
   1366c:	movt	r3, #3
   13670:	mov	r2, #0
   13674:	str	r2, [r3]
   13678:	b	13694 <export_data_element_to_ascii@@Base+0x4c>
   1367c:	movw	r3, #4248	; 0x1098
   13680:	movt	r3, #3
   13684:	ldr	r3, [r3]
   13688:	mov	r1, r3
   1368c:	mov	r0, #10
   13690:	bl	12568 <fputc@plt>
   13694:	movw	r3, #4648	; 0x1228
   13698:	movt	r3, #3
   1369c:	ldr	r3, [r3]
   136a0:	cmp	r3, #0
   136a4:	beq	136dc <export_data_element_to_ascii@@Base+0x94>
   136a8:	movw	r3, #4248	; 0x1098
   136ac:	movt	r3, #3
   136b0:	ldr	r3, [r3]
   136b4:	mov	r2, #0
   136b8:	mov	r1, #2
   136bc:	mov	r0, r3
   136c0:	bl	18728 <print_full_field_name@@Base>
   136c4:	movw	r3, #4248	; 0x1098
   136c8:	movt	r3, #3
   136cc:	ldr	r3, [r3]
   136d0:	mov	r1, r3
   136d4:	mov	r0, #10
   136d8:	bl	12568 <fputc@plt>
   136dc:	movw	r3, #4280	; 0x10b8
   136e0:	movt	r3, #3
   136e4:	ldr	r3, [r3]
   136e8:	cmp	r3, #0
   136ec:	ble	13720 <export_data_element_to_ascii@@Base+0xd8>
   136f0:	movw	r3, #4280	; 0x10b8
   136f4:	movt	r3, #3
   136f8:	ldr	r3, [r3]
   136fc:	sub	r2, r3, #1
   13700:	movw	r3, #4280	; 0x10b8
   13704:	movt	r3, #3
   13708:	add	r2, r2, #38	; 0x26
   1370c:	lsl	r2, r2, #3
   13710:	add	r3, r3, r2
   13714:	ldrd	r2, [r3]
   13718:	orrs	r3, r2, r3
   1371c:	beq	13740 <export_data_element_to_ascii@@Base+0xf8>
   13720:	movw	r3, #4248	; 0x1098
   13724:	movt	r3, #3
   13728:	ldr	r0, [r3]
   1372c:	mov	r3, #0
   13730:	mov	r2, #0
   13734:	mov	r1, #0
   13738:	bl	13154 <_start@@Base+0xb08>
   1373c:	b	13744 <export_data_element_to_ascii@@Base+0xfc>
   13740:	nop	{0}
   13744:	sub	sp, fp, #4
   13748:	ldr	fp, [sp]
   1374c:	add	sp, sp, #4
   13750:	pop	{pc}		; (ldr pc, [sp], #4)
   13754:	str	fp, [sp, #-8]!
   13758:	str	lr, [sp, #4]
   1375c:	add	fp, sp, #4
   13760:	sub	sp, sp, #8
   13764:	movw	r3, #452	; 0x1c4
   13768:	movt	r3, #3
   1376c:	ldr	r3, [r3]
   13770:	cmp	r3, #0
   13774:	bge	13798 <export_data_element_to_ascii@@Base+0x150>
   13778:	movw	r3, #55504	; 0xd8d0
   1377c:	movt	r3, #1
   13780:	mov	r2, #44	; 0x2c
   13784:	movw	r1, #55056	; 0xd710
   13788:	movt	r1, #1
   1378c:	movw	r0, #55140	; 0xd764
   13790:	movt	r0, #1
   13794:	bl	12634 <__assert_fail@plt>
   13798:	movw	r3, #452	; 0x1c4
   1379c:	movt	r3, #3
   137a0:	ldr	r3, [r3]
   137a4:	str	r3, [fp, #-8]
   137a8:	b	137d8 <export_data_element_to_ascii@@Base+0x190>
   137ac:	movw	r3, #4248	; 0x1098
   137b0:	movt	r3, #3
   137b4:	ldr	r3, [r3]
   137b8:	mov	r2, #2
   137bc:	mov	r1, #1
   137c0:	movw	r0, #55152	; 0xd770
   137c4:	movt	r0, #1
   137c8:	bl	1234c <fwrite@plt>
   137cc:	ldr	r3, [fp, #-8]
   137d0:	sub	r3, r3, #1
   137d4:	str	r3, [fp, #-8]
   137d8:	ldr	r3, [fp, #-8]
   137dc:	cmp	r3, #0
   137e0:	bgt	137ac <export_data_element_to_ascii@@Base+0x164>
   137e4:	nop	{0}
   137e8:	sub	sp, fp, #4
   137ec:	ldr	fp, [sp]
   137f0:	add	sp, sp, #4
   137f4:	pop	{pc}		; (ldr pc, [sp], #4)
   137f8:	push	{r0, r1, r2, r3}
   137fc:	str	fp, [sp, #-8]!
   13800:	str	lr, [sp, #4]
   13804:	add	fp, sp, #4
   13808:	sub	sp, sp, #8
   1380c:	add	r3, fp, #8
   13810:	str	r3, [fp, #-12]
   13814:	movw	r3, #4248	; 0x1098
   13818:	movt	r3, #3
   1381c:	ldr	r3, [r3]
   13820:	ldr	r2, [fp, #-12]
   13824:	ldr	r1, [fp, #4]
   13828:	mov	r0, r3
   1382c:	bl	1252c <vfprintf@plt>
   13830:	str	r0, [fp, #-8]
   13834:	ldr	r3, [fp, #-8]
   13838:	mov	r0, r3
   1383c:	sub	sp, fp, #4
   13840:	ldr	fp, [sp]
   13844:	ldr	lr, [sp, #4]
   13848:	add	sp, sp, #8
   1384c:	add	sp, sp, #16
   13850:	bx	lr
   13854:	push	{r0, r1, r2, r3}
   13858:	str	fp, [sp, #-8]!
   1385c:	str	lr, [sp, #4]
   13860:	add	fp, sp, #4
   13864:	sub	sp, sp, #8
   13868:	bl	13754 <export_data_element_to_ascii@@Base+0x10c>
   1386c:	add	r3, fp, #8
   13870:	str	r3, [fp, #-12]
   13874:	movw	r3, #4248	; 0x1098
   13878:	movt	r3, #3
   1387c:	ldr	r3, [r3]
   13880:	ldr	r2, [fp, #-12]
   13884:	ldr	r1, [fp, #4]
   13888:	mov	r0, r3
   1388c:	bl	1252c <vfprintf@plt>
   13890:	str	r0, [fp, #-8]
   13894:	ldr	r3, [fp, #-8]
   13898:	mov	r0, r3
   1389c:	sub	sp, fp, #4
   138a0:	ldr	fp, [sp]
   138a4:	ldr	lr, [sp, #4]
   138a8:	add	sp, sp, #8
   138ac:	add	sp, sp, #16
   138b0:	bx	lr
   138b4:	str	fp, [sp, #-8]!
   138b8:	str	lr, [sp, #4]
   138bc:	add	fp, sp, #4
   138c0:	sub	sp, sp, #16
   138c4:	str	r0, [fp, #-16]
   138c8:	str	r1, [fp, #-20]	; 0xffffffec
   138cc:	mov	r3, #0
   138d0:	str	r3, [fp, #-8]
   138d4:	b	13a10 <export_data_element_to_ascii@@Base+0x3c8>
   138d8:	ldr	r3, [fp, #-8]
   138dc:	ldr	r2, [fp, #-16]
   138e0:	add	r3, r2, r3
   138e4:	ldrb	r3, [r3]
   138e8:	strb	r3, [fp, #-9]
   138ec:	ldrb	r3, [fp, #-9]
   138f0:	cmp	r3, #10
   138f4:	beq	13970 <export_data_element_to_ascii@@Base+0x328>
   138f8:	cmp	r3, #10
   138fc:	bgt	1391c <export_data_element_to_ascii@@Base+0x2d4>
   13900:	cmp	r3, #8
   13904:	beq	13950 <export_data_element_to_ascii@@Base+0x308>
   13908:	cmp	r3, #8
   1390c:	bgt	13960 <export_data_element_to_ascii@@Base+0x318>
   13910:	cmp	r3, #7
   13914:	beq	13940 <export_data_element_to_ascii@@Base+0x2f8>
   13918:	b	139c0 <export_data_element_to_ascii@@Base+0x378>
   1391c:	cmp	r3, #12
   13920:	beq	13990 <export_data_element_to_ascii@@Base+0x348>
   13924:	cmp	r3, #12
   13928:	blt	13980 <export_data_element_to_ascii@@Base+0x338>
   1392c:	cmp	r3, #13
   13930:	beq	139a0 <export_data_element_to_ascii@@Base+0x358>
   13934:	cmp	r3, #92	; 0x5c
   13938:	beq	139b0 <export_data_element_to_ascii@@Base+0x368>
   1393c:	b	139c0 <export_data_element_to_ascii@@Base+0x378>
   13940:	movw	r0, #55156	; 0xd774
   13944:	movt	r0, #1
   13948:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1394c:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   13950:	movw	r0, #55160	; 0xd778
   13954:	movt	r0, #1
   13958:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1395c:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   13960:	movw	r0, #55164	; 0xd77c
   13964:	movt	r0, #1
   13968:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1396c:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   13970:	movw	r0, #55168	; 0xd780
   13974:	movt	r0, #1
   13978:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1397c:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   13980:	movw	r0, #55172	; 0xd784
   13984:	movt	r0, #1
   13988:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1398c:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   13990:	movw	r0, #55176	; 0xd788
   13994:	movt	r0, #1
   13998:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1399c:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   139a0:	movw	r0, #55180	; 0xd78c
   139a4:	movt	r0, #1
   139a8:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   139ac:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   139b0:	movw	r0, #55184	; 0xd790
   139b4:	movt	r0, #1
   139b8:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   139bc:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   139c0:	ldrb	r3, [fp, #-9]
   139c4:	cmp	r3, #31
   139c8:	bls	139f0 <export_data_element_to_ascii@@Base+0x3a8>
   139cc:	ldrb	r3, [fp, #-9]
   139d0:	cmp	r3, #126	; 0x7e
   139d4:	bhi	139f0 <export_data_element_to_ascii@@Base+0x3a8>
   139d8:	ldrb	r3, [fp, #-9]
   139dc:	mov	r1, r3
   139e0:	movw	r0, #55188	; 0xd794
   139e4:	movt	r0, #1
   139e8:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   139ec:	b	13a04 <export_data_element_to_ascii@@Base+0x3bc>
   139f0:	ldrb	r3, [fp, #-9]
   139f4:	mov	r1, r3
   139f8:	movw	r0, #55192	; 0xd798
   139fc:	movt	r0, #1
   13a00:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13a04:	ldr	r3, [fp, #-8]
   13a08:	add	r3, r3, #1
   13a0c:	str	r3, [fp, #-8]
   13a10:	ldr	r2, [fp, #-8]
   13a14:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a18:	cmp	r2, r3
   13a1c:	blt	138d8 <export_data_element_to_ascii@@Base+0x290>
   13a20:	nop	{0}
   13a24:	sub	sp, fp, #4
   13a28:	ldr	fp, [sp]
   13a2c:	add	sp, sp, #4
   13a30:	pop	{pc}		; (ldr pc, [sp], #4)
   13a34:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13a38:	strd	r6, [sp, #8]
   13a3c:	strd	r8, [sp, #16]
   13a40:	str	fp, [sp, #24]
   13a44:	str	lr, [sp, #28]
   13a48:	add	fp, sp, #28
   13a4c:	sub	sp, sp, #960	; 0x3c0
   13a50:	str	r0, [fp, #-952]	; 0xfffffc48
   13a54:	str	r1, [fp, #-956]	; 0xfffffc44
   13a58:	sub	r3, fp, #64	; 0x40
   13a5c:	mov	r1, r3
   13a60:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13a64:	bl	122ec <coda_cursor_has_attributes@plt>
   13a68:	mov	r3, r0
   13a6c:	cmp	r3, #0
   13a70:	beq	13a78 <export_data_element_to_ascii@@Base+0x430>
   13a74:	bl	1aeb8 <handle_coda_error@@Base>
   13a78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13a7c:	cmp	r3, #0
   13a80:	beq	13af4 <export_data_element_to_ascii@@Base+0x4ac>
   13a84:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13a88:	bl	1246c <coda_cursor_goto_attributes@plt>
   13a8c:	mov	r3, r0
   13a90:	cmp	r3, #0
   13a94:	beq	13a9c <export_data_element_to_ascii@@Base+0x454>
   13a98:	bl	1aeb8 <handle_coda_error@@Base>
   13a9c:	movw	r0, #55200	; 0xd7a0
   13aa0:	movt	r0, #1
   13aa4:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   13aa8:	movw	r3, #452	; 0x1c4
   13aac:	movt	r3, #3
   13ab0:	ldr	r3, [r3]
   13ab4:	add	r2, r3, #1
   13ab8:	movw	r3, #452	; 0x1c4
   13abc:	movt	r3, #3
   13ac0:	str	r2, [r3]
   13ac4:	ldr	r1, [fp, #-956]	; 0xfffffc44
   13ac8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13acc:	bl	13a34 <export_data_element_to_ascii@@Base+0x3ec>
   13ad0:	movw	r3, #452	; 0x1c4
   13ad4:	movt	r3, #3
   13ad8:	ldr	r3, [r3]
   13adc:	sub	r2, r3, #1
   13ae0:	movw	r3, #452	; 0x1c4
   13ae4:	movt	r3, #3
   13ae8:	str	r2, [r3]
   13aec:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13af0:	bl	123d0 <coda_cursor_goto_parent@plt>
   13af4:	sub	r3, fp, #60	; 0x3c
   13af8:	mov	r1, r3
   13afc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13b00:	bl	122f8 <coda_cursor_get_type_class@plt>
   13b04:	mov	r3, r0
   13b08:	cmp	r3, #0
   13b0c:	beq	13b14 <export_data_element_to_ascii@@Base+0x4cc>
   13b10:	bl	1aeb8 <handle_coda_error@@Base>
   13b14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b18:	cmp	r3, #6
   13b1c:	ldrls	pc, [pc, r3, lsl #2]
   13b20:	b	149f0 <export_data_element_to_ascii@@Base+0x13a8>
   13b24:	andeq	r3, r1, r0, asr #22
   13b28:	andeq	r3, r1, r0, lsr #31
   13b2c:	andeq	r4, r1, r8, lsr #6
   13b30:	andeq	r4, r1, r8, lsr #6
   13b34:	andeq	r4, r1, r8, lsr #6
   13b38:	andeq	r4, r1, r8, lsr #6
   13b3c:	ldrdeq	r4, [r1], -r0
   13b40:	sub	r3, fp, #68	; 0x44
   13b44:	mov	r1, r3
   13b48:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13b4c:	bl	12250 <coda_cursor_get_num_elements@plt>
   13b50:	mov	r3, r0
   13b54:	cmp	r3, #0
   13b58:	beq	13b60 <export_data_element_to_ascii@@Base+0x518>
   13b5c:	bl	1aeb8 <handle_coda_error@@Base>
   13b60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13b64:	cmp	r3, #0
   13b68:	ble	149d4 <export_data_element_to_ascii@@Base+0x138c>
   13b6c:	sub	r3, fp, #72	; 0x48
   13b70:	mov	r1, r3
   13b74:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13b78:	bl	122b0 <coda_cursor_get_type@plt>
   13b7c:	mov	r3, r0
   13b80:	cmp	r3, #0
   13b84:	beq	13b8c <export_data_element_to_ascii@@Base+0x544>
   13b88:	bl	1aeb8 <handle_coda_error@@Base>
   13b8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13b90:	sub	r2, fp, #76	; 0x4c
   13b94:	mov	r1, r2
   13b98:	mov	r0, r3
   13b9c:	bl	124b4 <coda_type_get_record_union_status@plt>
   13ba0:	mov	r3, r0
   13ba4:	cmp	r3, #0
   13ba8:	beq	13bb0 <export_data_element_to_ascii@@Base+0x568>
   13bac:	bl	1aeb8 <handle_coda_error@@Base>
   13bb0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13bb4:	cmp	r3, #0
   13bb8:	beq	13d98 <export_data_element_to_ascii@@Base+0x750>
   13bbc:	sub	r3, fp, #80	; 0x50
   13bc0:	mov	r1, r3
   13bc4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13bc8:	bl	125b0 <coda_cursor_get_available_union_field_index@plt>
   13bcc:	mov	r3, r0
   13bd0:	cmp	r3, #0
   13bd4:	beq	13bdc <export_data_element_to_ascii@@Base+0x594>
   13bd8:	bl	1aeb8 <handle_coda_error@@Base>
   13bdc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13be0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13be4:	sub	r2, fp, #84	; 0x54
   13be8:	mov	r0, r3
   13bec:	bl	125f8 <coda_type_get_record_field_name@plt>
   13bf0:	mov	r3, r0
   13bf4:	cmp	r3, #0
   13bf8:	beq	13c00 <export_data_element_to_ascii@@Base+0x5b8>
   13bfc:	bl	1aeb8 <handle_coda_error@@Base>
   13c00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13c04:	mov	r1, r3
   13c08:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c0c:	bl	12370 <coda_cursor_goto_record_field_by_index@plt>
   13c10:	mov	r3, r0
   13c14:	cmp	r3, #0
   13c18:	beq	13c20 <export_data_element_to_ascii@@Base+0x5d8>
   13c1c:	bl	1aeb8 <handle_coda_error@@Base>
   13c20:	ldr	r3, [fp, #-84]	; 0xffffffac
   13c24:	mov	r1, r3
   13c28:	movw	r0, #55216	; 0xd7b0
   13c2c:	movt	r0, #1
   13c30:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   13c34:	movw	r3, #428	; 0x1ac
   13c38:	movt	r3, #3
   13c3c:	ldr	r3, [r3]
   13c40:	cmp	r3, #0
   13c44:	beq	13cf8 <export_data_element_to_ascii@@Base+0x6b0>
   13c48:	sub	r3, fp, #92	; 0x5c
   13c4c:	mov	r1, r3
   13c50:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c54:	bl	125c8 <coda_cursor_get_file_bit_offset@plt>
   13c58:	mov	r3, r0
   13c5c:	cmp	r3, #0
   13c60:	beq	13c68 <export_data_element_to_ascii@@Base+0x620>
   13c64:	bl	1aeb8 <handle_coda_error@@Base>
   13c68:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13c6c:	cmp	r2, #0
   13c70:	sbcs	r3, r3, #0
   13c74:	blt	13cf8 <export_data_element_to_ascii@@Base+0x6b0>
   13c78:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13c7c:	mov	r0, #0
   13c80:	mov	r1, #0
   13c84:	lsr	r0, r2, #3
   13c88:	orr	r0, r0, r3, lsl #29
   13c8c:	asr	r1, r3, #3
   13c90:	sub	r3, fp, #116	; 0x74
   13c94:	mov	r2, r3
   13c98:	bl	12628 <coda_str64@plt>
   13c9c:	sub	r3, fp, #116	; 0x74
   13ca0:	mov	r1, r3
   13ca4:	movw	r0, #55224	; 0xd7b8
   13ca8:	movt	r0, #1
   13cac:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13cb0:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13cb4:	mov	r0, #7
   13cb8:	mov	r1, #0
   13cbc:	and	ip, r2, r0
   13cc0:	str	ip, [fp, #-964]	; 0xfffffc3c
   13cc4:	and	r3, r3, r1
   13cc8:	str	r3, [fp, #-960]	; 0xfffffc40
   13ccc:	sub	r3, fp, #964	; 0x3c4
   13cd0:	ldrd	r2, [r3]
   13cd4:	orrs	r3, r2, r3
   13cd8:	beq	13cf8 <export_data_element_to_ascii@@Base+0x6b0>
   13cdc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ce0:	mov	r3, r2
   13ce4:	and	r3, r3, #7
   13ce8:	mov	r1, r3
   13cec:	movw	r0, #55228	; 0xd7bc
   13cf0:	movt	r0, #1
   13cf4:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13cf8:	movw	r0, #55232	; 0xd7c0
   13cfc:	movt	r0, #1
   13d00:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13d04:	movw	r3, #452	; 0x1c4
   13d08:	movt	r3, #3
   13d0c:	ldr	r3, [r3]
   13d10:	add	r2, r3, #1
   13d14:	movw	r3, #452	; 0x1c4
   13d18:	movt	r3, #3
   13d1c:	str	r2, [r3]
   13d20:	movw	r3, #432	; 0x1b0
   13d24:	movt	r3, #3
   13d28:	ldr	r3, [r3]
   13d2c:	cmp	r3, #0
   13d30:	blt	13d4c <export_data_element_to_ascii@@Base+0x704>
   13d34:	movw	r3, #432	; 0x1b0
   13d38:	movt	r3, #3
   13d3c:	ldr	r3, [r3]
   13d40:	ldr	r2, [fp, #-956]	; 0xfffffc44
   13d44:	cmp	r2, r3
   13d48:	bge	13d64 <export_data_element_to_ascii@@Base+0x71c>
   13d4c:	ldr	r3, [fp, #-956]	; 0xfffffc44
   13d50:	add	r3, r3, #1
   13d54:	mov	r1, r3
   13d58:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d5c:	bl	13a34 <export_data_element_to_ascii@@Base+0x3ec>
   13d60:	b	13d70 <export_data_element_to_ascii@@Base+0x728>
   13d64:	movw	r0, #55236	; 0xd7c4
   13d68:	movt	r0, #1
   13d6c:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   13d70:	movw	r3, #452	; 0x1c4
   13d74:	movt	r3, #3
   13d78:	ldr	r3, [r3]
   13d7c:	sub	r2, r3, #1
   13d80:	movw	r3, #452	; 0x1c4
   13d84:	movt	r3, #3
   13d88:	str	r2, [r3]
   13d8c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d90:	bl	123d0 <coda_cursor_goto_parent@plt>
   13d94:	b	149d4 <export_data_element_to_ascii@@Base+0x138c>
   13d98:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d9c:	bl	12364 <coda_cursor_goto_first_record_field@plt>
   13da0:	mov	r3, r0
   13da4:	cmp	r3, #0
   13da8:	beq	13db0 <export_data_element_to_ascii@@Base+0x768>
   13dac:	bl	1aeb8 <handle_coda_error@@Base>
   13db0:	mov	r3, #0
   13db4:	str	r3, [fp, #-80]	; 0xffffffb0
   13db8:	b	13f84 <export_data_element_to_ascii@@Base+0x93c>
   13dbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13dc0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13dc4:	sub	r2, fp, #120	; 0x78
   13dc8:	mov	r0, r3
   13dcc:	bl	125f8 <coda_type_get_record_field_name@plt>
   13dd0:	mov	r3, r0
   13dd4:	cmp	r3, #0
   13dd8:	beq	13de0 <export_data_element_to_ascii@@Base+0x798>
   13ddc:	bl	1aeb8 <handle_coda_error@@Base>
   13de0:	ldr	r3, [fp, #-120]	; 0xffffff88
   13de4:	mov	r1, r3
   13de8:	movw	r0, #55216	; 0xd7b0
   13dec:	movt	r0, #1
   13df0:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   13df4:	movw	r3, #428	; 0x1ac
   13df8:	movt	r3, #3
   13dfc:	ldr	r3, [r3]
   13e00:	cmp	r3, #0
   13e04:	beq	13eb8 <export_data_element_to_ascii@@Base+0x870>
   13e08:	sub	r3, fp, #132	; 0x84
   13e0c:	mov	r1, r3
   13e10:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e14:	bl	125c8 <coda_cursor_get_file_bit_offset@plt>
   13e18:	mov	r3, r0
   13e1c:	cmp	r3, #0
   13e20:	beq	13e28 <export_data_element_to_ascii@@Base+0x7e0>
   13e24:	bl	1aeb8 <handle_coda_error@@Base>
   13e28:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13e2c:	cmp	r2, #0
   13e30:	sbcs	r3, r3, #0
   13e34:	blt	13eb8 <export_data_element_to_ascii@@Base+0x870>
   13e38:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13e3c:	mov	r0, #0
   13e40:	mov	r1, #0
   13e44:	lsr	r0, r2, #3
   13e48:	orr	r0, r0, r3, lsl #29
   13e4c:	asr	r1, r3, #3
   13e50:	sub	r3, fp, #156	; 0x9c
   13e54:	mov	r2, r3
   13e58:	bl	12628 <coda_str64@plt>
   13e5c:	sub	r3, fp, #156	; 0x9c
   13e60:	mov	r1, r3
   13e64:	movw	r0, #55224	; 0xd7b8
   13e68:	movt	r0, #1
   13e6c:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13e70:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13e74:	mov	r0, #7
   13e78:	mov	r1, #0
   13e7c:	and	ip, r2, r0
   13e80:	str	ip, [fp, #-972]	; 0xfffffc34
   13e84:	and	r3, r3, r1
   13e88:	str	r3, [fp, #-968]	; 0xfffffc38
   13e8c:	sub	r3, fp, #972	; 0x3cc
   13e90:	ldrd	r2, [r3]
   13e94:	orrs	r3, r2, r3
   13e98:	beq	13eb8 <export_data_element_to_ascii@@Base+0x870>
   13e9c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   13ea0:	mov	r3, r2
   13ea4:	and	r3, r3, #7
   13ea8:	mov	r1, r3
   13eac:	movw	r0, #55228	; 0xd7bc
   13eb0:	movt	r0, #1
   13eb4:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13eb8:	movw	r0, #55232	; 0xd7c0
   13ebc:	movt	r0, #1
   13ec0:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   13ec4:	movw	r3, #452	; 0x1c4
   13ec8:	movt	r3, #3
   13ecc:	ldr	r3, [r3]
   13ed0:	add	r2, r3, #1
   13ed4:	movw	r3, #452	; 0x1c4
   13ed8:	movt	r3, #3
   13edc:	str	r2, [r3]
   13ee0:	movw	r3, #432	; 0x1b0
   13ee4:	movt	r3, #3
   13ee8:	ldr	r3, [r3]
   13eec:	cmp	r3, #0
   13ef0:	blt	13f0c <export_data_element_to_ascii@@Base+0x8c4>
   13ef4:	movw	r3, #432	; 0x1b0
   13ef8:	movt	r3, #3
   13efc:	ldr	r3, [r3]
   13f00:	ldr	r2, [fp, #-956]	; 0xfffffc44
   13f04:	cmp	r2, r3
   13f08:	bge	13f24 <export_data_element_to_ascii@@Base+0x8dc>
   13f0c:	ldr	r3, [fp, #-956]	; 0xfffffc44
   13f10:	add	r3, r3, #1
   13f14:	mov	r1, r3
   13f18:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13f1c:	bl	13a34 <export_data_element_to_ascii@@Base+0x3ec>
   13f20:	b	13f30 <export_data_element_to_ascii@@Base+0x8e8>
   13f24:	movw	r0, #55236	; 0xd7c4
   13f28:	movt	r0, #1
   13f2c:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   13f30:	movw	r3, #452	; 0x1c4
   13f34:	movt	r3, #3
   13f38:	ldr	r3, [r3]
   13f3c:	sub	r2, r3, #1
   13f40:	movw	r3, #452	; 0x1c4
   13f44:	movt	r3, #3
   13f48:	str	r2, [r3]
   13f4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13f50:	sub	r2, r3, #1
   13f54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f58:	cmp	r2, r3
   13f5c:	ble	13f78 <export_data_element_to_ascii@@Base+0x930>
   13f60:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13f64:	bl	1255c <coda_cursor_goto_next_record_field@plt>
   13f68:	mov	r3, r0
   13f6c:	cmp	r3, #0
   13f70:	beq	13f78 <export_data_element_to_ascii@@Base+0x930>
   13f74:	bl	1aeb8 <handle_coda_error@@Base>
   13f78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f7c:	add	r3, r3, #1
   13f80:	str	r3, [fp, #-80]	; 0xffffffb0
   13f84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13f88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13f8c:	cmp	r2, r3
   13f90:	blt	13dbc <export_data_element_to_ascii@@Base+0x774>
   13f94:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13f98:	bl	123d0 <coda_cursor_goto_parent@plt>
   13f9c:	b	149d4 <export_data_element_to_ascii@@Base+0x138c>
   13fa0:	sub	r2, fp, #948	; 0x3b4
   13fa4:	sub	r3, fp, #160	; 0xa0
   13fa8:	mov	r1, r3
   13fac:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13fb0:	bl	124fc <coda_cursor_get_array_dim@plt>
   13fb4:	mov	r3, r0
   13fb8:	cmp	r3, #0
   13fbc:	beq	13fc4 <export_data_element_to_ascii@@Base+0x97c>
   13fc0:	bl	1aeb8 <handle_coda_error@@Base>
   13fc4:	ldr	r3, [fp, #-160]	; 0xffffff60
   13fc8:	cmp	r3, #0
   13fcc:	blt	149dc <export_data_element_to_ascii@@Base+0x1394>
   13fd0:	mov	r3, #1
   13fd4:	str	r3, [fp, #-32]	; 0xffffffe0
   13fd8:	mov	r3, #0
   13fdc:	str	r3, [fp, #-36]	; 0xffffffdc
   13fe0:	b	14028 <export_data_element_to_ascii@@Base+0x9e0>
   13fe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fe8:	lsl	r3, r3, #2
   13fec:	sub	r2, fp, #28
   13ff0:	add	r3, r2, r3
   13ff4:	ldr	r2, [r3, #-920]	; 0xfffffc68
   13ff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13ffc:	mul	r3, r2, r3
   14000:	str	r3, [fp, #-32]	; 0xffffffe0
   14004:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14008:	lsl	r3, r3, #2
   1400c:	sub	r2, fp, #28
   14010:	add	r3, r2, r3
   14014:	mov	r2, #0
   14018:	str	r2, [r3, #-888]	; 0xfffffc88
   1401c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14020:	add	r3, r3, #1
   14024:	str	r3, [fp, #-36]	; 0xffffffdc
   14028:	ldr	r3, [fp, #-160]	; 0xffffff60
   1402c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14030:	cmp	r2, r3
   14034:	blt	13fe4 <export_data_element_to_ascii@@Base+0x99c>
   14038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1403c:	cmp	r3, #0
   14040:	ble	149dc <export_data_element_to_ascii@@Base+0x1394>
   14044:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14048:	bl	12340 <coda_cursor_goto_first_array_element@plt>
   1404c:	mov	r3, r0
   14050:	cmp	r3, #0
   14054:	beq	1405c <export_data_element_to_ascii@@Base+0xa14>
   14058:	bl	1aeb8 <handle_coda_error@@Base>
   1405c:	mov	r3, #0
   14060:	str	r3, [fp, #-36]	; 0xffffffdc
   14064:	b	1430c <export_data_element_to_ascii@@Base+0xcc4>
   14068:	movw	r0, #55244	; 0xd7cc
   1406c:	movt	r0, #1
   14070:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   14074:	mov	r3, #0
   14078:	str	r3, [fp, #-40]	; 0xffffffd8
   1407c:	b	140d0 <export_data_element_to_ascii@@Base+0xa88>
   14080:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14084:	lsl	r3, r3, #2
   14088:	sub	r2, fp, #28
   1408c:	add	r3, r2, r3
   14090:	ldr	r3, [r3, #-888]	; 0xfffffc88
   14094:	mov	r1, r3
   14098:	movw	r0, #55248	; 0xd7d0
   1409c:	movt	r0, #1
   140a0:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   140a4:	ldr	r3, [fp, #-160]	; 0xffffff60
   140a8:	sub	r3, r3, #1
   140ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   140b0:	cmp	r2, r3
   140b4:	bge	140c4 <export_data_element_to_ascii@@Base+0xa7c>
   140b8:	movw	r0, #55252	; 0xd7d4
   140bc:	movt	r0, #1
   140c0:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   140c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   140c8:	add	r3, r3, #1
   140cc:	str	r3, [fp, #-40]	; 0xffffffd8
   140d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   140d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   140d8:	cmp	r2, r3
   140dc:	blt	14080 <export_data_element_to_ascii@@Base+0xa38>
   140e0:	movw	r0, #55256	; 0xd7d8
   140e4:	movt	r0, #1
   140e8:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   140ec:	movw	r3, #428	; 0x1ac
   140f0:	movt	r3, #3
   140f4:	ldr	r3, [r3]
   140f8:	cmp	r3, #0
   140fc:	beq	141a0 <export_data_element_to_ascii@@Base+0xb58>
   14100:	sub	r3, fp, #172	; 0xac
   14104:	mov	r1, r3
   14108:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1410c:	bl	125c8 <coda_cursor_get_file_bit_offset@plt>
   14110:	mov	r3, r0
   14114:	cmp	r3, #0
   14118:	beq	14120 <export_data_element_to_ascii@@Base+0xad8>
   1411c:	bl	1aeb8 <handle_coda_error@@Base>
   14120:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14124:	cmp	r2, #0
   14128:	sbcs	r3, r3, #0
   1412c:	blt	141a0 <export_data_element_to_ascii@@Base+0xb58>
   14130:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14134:	mov	r0, #0
   14138:	mov	r1, #0
   1413c:	lsr	r0, r2, #3
   14140:	orr	r0, r0, r3, lsl #29
   14144:	asr	r1, r3, #3
   14148:	sub	r3, fp, #196	; 0xc4
   1414c:	mov	r2, r3
   14150:	bl	12628 <coda_str64@plt>
   14154:	sub	r3, fp, #196	; 0xc4
   14158:	mov	r1, r3
   1415c:	movw	r0, #55224	; 0xd7b8
   14160:	movt	r0, #1
   14164:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   14168:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1416c:	mov	r0, #7
   14170:	mov	r1, #0
   14174:	and	r4, r2, r0
   14178:	and	r5, r3, r1
   1417c:	orrs	r3, r4, r5
   14180:	beq	141a0 <export_data_element_to_ascii@@Base+0xb58>
   14184:	ldrd	r2, [fp, #-172]	; 0xffffff54
   14188:	mov	r3, r2
   1418c:	and	r3, r3, #7
   14190:	mov	r1, r3
   14194:	movw	r0, #55228	; 0xd7bc
   14198:	movt	r0, #1
   1419c:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   141a0:	movw	r0, #55232	; 0xd7c0
   141a4:	movt	r0, #1
   141a8:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   141ac:	movw	r3, #452	; 0x1c4
   141b0:	movt	r3, #3
   141b4:	ldr	r3, [r3]
   141b8:	add	r2, r3, #1
   141bc:	movw	r3, #452	; 0x1c4
   141c0:	movt	r3, #3
   141c4:	str	r2, [r3]
   141c8:	movw	r3, #432	; 0x1b0
   141cc:	movt	r3, #3
   141d0:	ldr	r3, [r3]
   141d4:	cmp	r3, #0
   141d8:	blt	141f4 <export_data_element_to_ascii@@Base+0xbac>
   141dc:	movw	r3, #432	; 0x1b0
   141e0:	movt	r3, #3
   141e4:	ldr	r3, [r3]
   141e8:	ldr	r2, [fp, #-956]	; 0xfffffc44
   141ec:	cmp	r2, r3
   141f0:	bge	1420c <export_data_element_to_ascii@@Base+0xbc4>
   141f4:	ldr	r3, [fp, #-956]	; 0xfffffc44
   141f8:	add	r3, r3, #1
   141fc:	mov	r1, r3
   14200:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14204:	bl	13a34 <export_data_element_to_ascii@@Base+0x3ec>
   14208:	b	14218 <export_data_element_to_ascii@@Base+0xbd0>
   1420c:	movw	r0, #55236	; 0xd7c4
   14210:	movt	r0, #1
   14214:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   14218:	movw	r3, #452	; 0x1c4
   1421c:	movt	r3, #3
   14220:	ldr	r3, [r3]
   14224:	sub	r2, r3, #1
   14228:	movw	r3, #452	; 0x1c4
   1422c:	movt	r3, #3
   14230:	str	r2, [r3]
   14234:	ldr	r3, [fp, #-160]	; 0xffffff60
   14238:	sub	r3, r3, #1
   1423c:	str	r3, [fp, #-40]	; 0xffffffd8
   14240:	b	142c0 <export_data_element_to_ascii@@Base+0xc78>
   14244:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14248:	lsl	r3, r3, #2
   1424c:	sub	r2, fp, #28
   14250:	add	r3, r2, r3
   14254:	ldr	r3, [r3, #-888]	; 0xfffffc88
   14258:	add	r2, r3, #1
   1425c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14260:	lsl	r3, r3, #2
   14264:	sub	r1, fp, #28
   14268:	add	r3, r1, r3
   1426c:	str	r2, [r3, #-888]	; 0xfffffc88
   14270:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14274:	lsl	r3, r3, #2
   14278:	sub	r2, fp, #28
   1427c:	add	r3, r2, r3
   14280:	ldr	r2, [r3, #-888]	; 0xfffffc88
   14284:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14288:	lsl	r3, r3, #2
   1428c:	sub	r1, fp, #28
   14290:	add	r3, r1, r3
   14294:	ldr	r3, [r3, #-920]	; 0xfffffc68
   14298:	cmp	r2, r3
   1429c:	bne	142d0 <export_data_element_to_ascii@@Base+0xc88>
   142a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142a4:	sub	r2, r3, #1
   142a8:	str	r2, [fp, #-40]	; 0xffffffd8
   142ac:	lsl	r3, r3, #2
   142b0:	sub	r2, fp, #28
   142b4:	add	r3, r2, r3
   142b8:	mov	r2, #0
   142bc:	str	r2, [r3, #-888]	; 0xfffffc88
   142c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142c4:	cmp	r3, #0
   142c8:	bge	14244 <export_data_element_to_ascii@@Base+0xbfc>
   142cc:	b	142d4 <export_data_element_to_ascii@@Base+0xc8c>
   142d0:	nop	{0}
   142d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142d8:	sub	r3, r3, #1
   142dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   142e0:	cmp	r2, r3
   142e4:	bge	14300 <export_data_element_to_ascii@@Base+0xcb8>
   142e8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   142ec:	bl	1243c <coda_cursor_goto_next_array_element@plt>
   142f0:	mov	r3, r0
   142f4:	cmp	r3, #0
   142f8:	beq	14300 <export_data_element_to_ascii@@Base+0xcb8>
   142fc:	bl	1aeb8 <handle_coda_error@@Base>
   14300:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14304:	add	r3, r3, #1
   14308:	str	r3, [fp, #-36]	; 0xffffffdc
   1430c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14310:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14314:	cmp	r2, r3
   14318:	blt	14068 <export_data_element_to_ascii@@Base+0xa20>
   1431c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14320:	bl	123d0 <coda_cursor_goto_parent@plt>
   14324:	b	149dc <export_data_element_to_ascii@@Base+0x1394>
   14328:	sub	r3, fp, #204	; 0xcc
   1432c:	mov	r1, r3
   14330:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14334:	bl	12508 <coda_cursor_has_ascii_content@plt>
   14338:	mov	r3, r0
   1433c:	cmp	r3, #0
   14340:	beq	14348 <export_data_element_to_ascii@@Base+0xd00>
   14344:	bl	1aeb8 <handle_coda_error@@Base>
   14348:	ldr	r3, [fp, #-204]	; 0xffffff34
   1434c:	cmp	r3, #0
   14350:	beq	14424 <export_data_element_to_ascii@@Base+0xddc>
   14354:	sub	r3, fp, #208	; 0xd0
   14358:	mov	r1, r3
   1435c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14360:	bl	12400 <coda_cursor_get_string_length@plt>
   14364:	mov	r3, r0
   14368:	cmp	r3, #0
   1436c:	beq	14374 <export_data_element_to_ascii@@Base+0xd2c>
   14370:	bl	1aeb8 <handle_coda_error@@Base>
   14374:	ldr	r3, [fp, #-208]	; 0xffffff30
   14378:	add	r3, r3, #1
   1437c:	mov	r0, r3
   14380:	bl	123a0 <malloc@plt>
   14384:	mov	r3, r0
   14388:	str	r3, [fp, #-44]	; 0xffffffd4
   1438c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14390:	cmp	r3, #0
   14394:	bne	143c4 <export_data_element_to_ascii@@Base+0xd7c>
   14398:	ldr	r3, [fp, #-208]	; 0xffffff30
   1439c:	add	r2, r3, #1
   143a0:	movw	r3, #410	; 0x19a
   143a4:	str	r3, [sp]
   143a8:	movw	r3, #55056	; 0xd710
   143ac:	movt	r3, #1
   143b0:	movw	r1, #55260	; 0xd7dc
   143b4:	movt	r1, #1
   143b8:	mvn	r0, #0
   143bc:	bl	12220 <coda_set_error@plt>
   143c0:	bl	1aeb8 <handle_coda_error@@Base>
   143c4:	ldr	r3, [fp, #-208]	; 0xffffff30
   143c8:	add	r3, r3, #1
   143cc:	mov	r2, r3
   143d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143d4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   143d8:	bl	123c4 <coda_cursor_read_string@plt>
   143dc:	mov	r3, r0
   143e0:	cmp	r3, #0
   143e4:	beq	143ec <export_data_element_to_ascii@@Base+0xda4>
   143e8:	bl	1aeb8 <handle_coda_error@@Base>
   143ec:	movw	r0, #55316	; 0xd814
   143f0:	movt	r0, #1
   143f4:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   143f8:	ldr	r3, [fp, #-208]	; 0xffffff30
   143fc:	mov	r1, r3
   14400:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14404:	bl	138b4 <export_data_element_to_ascii@@Base+0x26c>
   14408:	ldr	r3, [fp, #-208]	; 0xffffff30
   1440c:	mov	r1, r3
   14410:	movw	r0, #55320	; 0xd818
   14414:	movt	r0, #1
   14418:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1441c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14420:	bl	12268 <free@plt>
   14424:	sub	r3, fp, #200	; 0xc8
   14428:	mov	r1, r3
   1442c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14430:	bl	12394 <coda_cursor_get_read_type@plt>
   14434:	mov	r3, r0
   14438:	cmp	r3, #0
   1443c:	beq	14444 <export_data_element_to_ascii@@Base+0xdfc>
   14440:	bl	1aeb8 <handle_coda_error@@Base>
   14444:	ldr	r3, [fp, #-200]	; 0xffffff38
   14448:	add	r3, r3, #1
   1444c:	cmp	r3, #13
   14450:	ldrls	pc, [pc, r3, lsl #2]
   14454:	b	149e4 <export_data_element_to_ascii@@Base+0x139c>
   14458:	muleq	r1, ip, r7
   1445c:	andeq	r4, r1, r8, lsr r6
   14460:	andeq	r4, r1, r0, ror r6
   14464:	andeq	r4, r1, r8, lsr r6
   14468:	andeq	r4, r1, r0, ror r6
   1446c:	andeq	r4, r1, r8, lsr r6
   14470:	andeq	r4, r1, r0, ror r6
   14474:	andeq	r4, r1, r8, lsr #13
   14478:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1447c:	andeq	r4, r1, r0, asr #14
   14480:	andeq	r4, r1, r0, asr #14
   14484:	muleq	r1, ip, r7
   14488:	muleq	r1, ip, r7
   1448c:	muleq	r1, r0, r4
   14490:	sub	r3, fp, #220	; 0xdc
   14494:	mov	r1, r3
   14498:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1449c:	bl	12580 <coda_cursor_get_bit_size@plt>
   144a0:	mov	r3, r0
   144a4:	cmp	r3, #0
   144a8:	beq	144b0 <export_data_element_to_ascii@@Base+0xe68>
   144ac:	bl	1aeb8 <handle_coda_error@@Base>
   144b0:	ldrd	r0, [fp, #-220]	; 0xffffff24
   144b4:	mov	r2, #0
   144b8:	mov	r3, #0
   144bc:	lsr	r2, r0, #3
   144c0:	orr	r2, r2, r1, lsl #29
   144c4:	asr	r3, r1, #3
   144c8:	ldrd	r0, [fp, #-220]	; 0xffffff24
   144cc:	mov	r4, #7
   144d0:	mov	r5, #0
   144d4:	and	ip, r0, r4
   144d8:	str	ip, [fp, #-980]	; 0xfffffc2c
   144dc:	and	r1, r1, r5
   144e0:	str	r1, [fp, #-976]	; 0xfffffc30
   144e4:	sub	r1, fp, #980	; 0x3d4
   144e8:	ldrd	r0, [r1]
   144ec:	orrs	r1, r0, r1
   144f0:	beq	14500 <export_data_element_to_ascii@@Base+0xeb8>
   144f4:	mov	r0, #1
   144f8:	mov	r1, #0
   144fc:	b	14508 <export_data_element_to_ascii@@Base+0xec0>
   14500:	mov	r0, #0
   14504:	mov	r1, #0
   14508:	adds	r8, r0, r2
   1450c:	adc	r9, r1, r3
   14510:	strd	r8, [fp, #-52]	; 0xffffffcc
   14514:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14518:	mov	r0, r3
   1451c:	bl	123a0 <malloc@plt>
   14520:	mov	r3, r0
   14524:	str	r3, [fp, #-56]	; 0xffffffc8
   14528:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1452c:	cmp	r3, #0
   14530:	bne	1455c <export_data_element_to_ascii@@Base+0xf14>
   14534:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14538:	movw	r3, #447	; 0x1bf
   1453c:	str	r3, [sp]
   14540:	movw	r3, #55056	; 0xd710
   14544:	movt	r3, #1
   14548:	movw	r1, #55260	; 0xd7dc
   1454c:	movt	r1, #1
   14550:	mvn	r0, #0
   14554:	bl	12220 <coda_set_error@plt>
   14558:	bl	1aeb8 <handle_coda_error@@Base>
   1455c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14560:	strd	r2, [sp]
   14564:	mov	r2, #0
   14568:	mov	r3, #0
   1456c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14570:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14574:	bl	1261c <coda_cursor_read_bits@plt>
   14578:	mov	r3, r0
   1457c:	cmp	r3, #0
   14580:	beq	14588 <export_data_element_to_ascii@@Base+0xf40>
   14584:	bl	1aeb8 <handle_coda_error@@Base>
   14588:	movw	r0, #55316	; 0xd814
   1458c:	movt	r0, #1
   14590:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   14594:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14598:	mov	r1, r3
   1459c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   145a0:	bl	138b4 <export_data_element_to_ascii@@Base+0x26c>
   145a4:	movw	r0, #55336	; 0xd828
   145a8:	movt	r0, #1
   145ac:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   145b0:	ldrd	r2, [fp, #-220]	; 0xffffff24
   145b4:	mov	r0, #0
   145b8:	mov	r1, #0
   145bc:	lsr	r0, r2, #3
   145c0:	orr	r0, r0, r3, lsl #29
   145c4:	asr	r1, r3, #3
   145c8:	sub	r3, fp, #244	; 0xf4
   145cc:	mov	r2, r3
   145d0:	bl	12628 <coda_str64@plt>
   145d4:	sub	r3, fp, #244	; 0xf4
   145d8:	mov	r1, r3
   145dc:	movw	r0, #55348	; 0xd834
   145e0:	movt	r0, #1
   145e4:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   145e8:	ldrd	r2, [fp, #-220]	; 0xffffff24
   145ec:	mov	r0, #7
   145f0:	mov	r1, #0
   145f4:	and	r6, r2, r0
   145f8:	and	r7, r3, r1
   145fc:	orrs	r3, r6, r7
   14600:	beq	14620 <export_data_element_to_ascii@@Base+0xfd8>
   14604:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14608:	mov	r3, r2
   1460c:	and	r3, r3, #7
   14610:	mov	r1, r3
   14614:	movw	r0, #55228	; 0xd7bc
   14618:	movt	r0, #1
   1461c:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   14620:	movw	r0, #55352	; 0xd838
   14624:	movt	r0, #1
   14628:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1462c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14630:	bl	12268 <free@plt>
   14634:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   14638:	sub	r3, fp, #248	; 0xf8
   1463c:	mov	r1, r3
   14640:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14644:	bl	125bc <coda_cursor_read_int32@plt>
   14648:	mov	r3, r0
   1464c:	cmp	r3, #0
   14650:	beq	14658 <export_data_element_to_ascii@@Base+0x1010>
   14654:	bl	1aeb8 <handle_coda_error@@Base>
   14658:	ldr	r3, [fp, #-248]	; 0xffffff08
   1465c:	mov	r1, r3
   14660:	movw	r0, #55356	; 0xd83c
   14664:	movt	r0, #1
   14668:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   1466c:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   14670:	sub	r3, fp, #252	; 0xfc
   14674:	mov	r1, r3
   14678:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1467c:	bl	1228c <coda_cursor_read_uint32@plt>
   14680:	mov	r3, r0
   14684:	cmp	r3, #0
   14688:	beq	14690 <export_data_element_to_ascii@@Base+0x1048>
   1468c:	bl	1aeb8 <handle_coda_error@@Base>
   14690:	ldr	r3, [fp, #-252]	; 0xffffff04
   14694:	mov	r1, r3
   14698:	movw	r0, #55364	; 0xd844
   1469c:	movt	r0, #1
   146a0:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   146a4:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   146a8:	sub	r3, fp, #260	; 0x104
   146ac:	mov	r1, r3
   146b0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   146b4:	bl	12520 <coda_cursor_read_int64@plt>
   146b8:	mov	r3, r0
   146bc:	cmp	r3, #0
   146c0:	beq	146c8 <export_data_element_to_ascii@@Base+0x1080>
   146c4:	bl	1aeb8 <handle_coda_error@@Base>
   146c8:	sub	r3, fp, #260	; 0x104
   146cc:	ldrd	r0, [r3]
   146d0:	sub	r3, fp, #284	; 0x11c
   146d4:	mov	r2, r3
   146d8:	bl	12628 <coda_str64@plt>
   146dc:	sub	r3, fp, #284	; 0x11c
   146e0:	mov	r1, r3
   146e4:	movw	r0, #55372	; 0xd84c
   146e8:	movt	r0, #1
   146ec:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   146f0:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   146f4:	sub	r3, fp, #292	; 0x124
   146f8:	mov	r1, r3
   146fc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14700:	bl	1240c <coda_cursor_read_uint64@plt>
   14704:	mov	r3, r0
   14708:	cmp	r3, #0
   1470c:	beq	14714 <export_data_element_to_ascii@@Base+0x10cc>
   14710:	bl	1aeb8 <handle_coda_error@@Base>
   14714:	sub	r3, fp, #284	; 0x11c
   14718:	ldrd	r0, [r3, #-8]
   1471c:	sub	r3, fp, #316	; 0x13c
   14720:	mov	r2, r3
   14724:	bl	1225c <coda_str64u@plt>
   14728:	sub	r3, fp, #316	; 0x13c
   1472c:	mov	r1, r3
   14730:	movw	r0, #55372	; 0xd84c
   14734:	movt	r0, #1
   14738:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   1473c:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   14740:	sub	r3, fp, #324	; 0x144
   14744:	mov	r1, r3
   14748:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1474c:	bl	12418 <coda_cursor_read_double@plt>
   14750:	mov	r3, r0
   14754:	cmp	r3, #0
   14758:	beq	14760 <export_data_element_to_ascii@@Base+0x1118>
   1475c:	bl	1aeb8 <handle_coda_error@@Base>
   14760:	ldr	r3, [fp, #-200]	; 0xffffff38
   14764:	cmp	r3, #8
   14768:	bne	14784 <export_data_element_to_ascii@@Base+0x113c>
   1476c:	sub	r3, fp, #324	; 0x144
   14770:	ldrd	r2, [r3]
   14774:	movw	r0, #55376	; 0xd850
   14778:	movt	r0, #1
   1477c:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   14780:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   14784:	sub	r3, fp, #324	; 0x144
   14788:	ldrd	r2, [r3]
   1478c:	movw	r0, #55384	; 0xd858
   14790:	movt	r0, #1
   14794:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   14798:	b	147cc <export_data_element_to_ascii@@Base+0x1184>
   1479c:	ldr	r3, [fp, #-204]	; 0xffffff34
   147a0:	cmp	r3, #0
   147a4:	bne	147c8 <export_data_element_to_ascii@@Base+0x1180>
   147a8:	movw	r3, #55512	; 0xd8d8
   147ac:	movt	r3, #1
   147b0:	mov	r2, #548	; 0x224
   147b4:	movw	r1, #55056	; 0xd710
   147b8:	movt	r1, #1
   147bc:	movw	r0, #55392	; 0xd860
   147c0:	movt	r0, #1
   147c4:	bl	12634 <__assert_fail@plt>
   147c8:	nop	{0}
   147cc:	b	149e4 <export_data_element_to_ascii@@Base+0x139c>
   147d0:	sub	r3, fp, #328	; 0x148
   147d4:	mov	r1, r3
   147d8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   147dc:	bl	12334 <coda_cursor_get_special_type@plt>
   147e0:	mov	r3, r0
   147e4:	cmp	r3, #0
   147e8:	beq	147f0 <export_data_element_to_ascii@@Base+0x11a8>
   147ec:	bl	1aeb8 <handle_coda_error@@Base>
   147f0:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   147f4:	cmp	r3, #0
   147f8:	beq	14840 <export_data_element_to_ascii@@Base+0x11f8>
   147fc:	ldr	r2, [fp, #-952]	; 0xfffffc48
   14800:	sub	r3, fp, #916	; 0x394
   14804:	mov	r1, r2
   14808:	mov	r2, #520	; 0x208
   1480c:	mov	r0, r3
   14810:	bl	122bc <memcpy@plt>
   14814:	sub	r3, fp, #916	; 0x394
   14818:	mov	r0, r3
   1481c:	bl	125a4 <coda_cursor_use_base_type_of_special_type@plt>
   14820:	mov	r3, r0
   14824:	cmp	r3, #0
   14828:	beq	14830 <export_data_element_to_ascii@@Base+0x11e8>
   1482c:	bl	1aeb8 <handle_coda_error@@Base>
   14830:	sub	r3, fp, #916	; 0x394
   14834:	ldr	r1, [fp, #-956]	; 0xfffffc44
   14838:	mov	r0, r3
   1483c:	bl	13a34 <export_data_element_to_ascii@@Base+0x3ec>
   14840:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14844:	mov	r0, r3
   14848:	bl	121a8 <coda_type_get_special_type_name@plt>
   1484c:	mov	r3, r0
   14850:	mov	r1, r3
   14854:	movw	r0, #55412	; 0xd874
   14858:	movt	r0, #1
   1485c:	bl	13854 <export_data_element_to_ascii@@Base+0x20c>
   14860:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14864:	cmp	r3, #3
   14868:	ldrls	pc, [pc, r3, lsl #2]
   1486c:	b	149ec <export_data_element_to_ascii@@Base+0x13a4>
   14870:	andeq	r4, r1, r0, lsl #17
   14874:	muleq	r1, r0, r8
   14878:	andeq	r4, r1, r8, asr #17
   1487c:	andeq	r4, r1, r0, lsl #19
   14880:	movw	r0, #55232	; 0xd7c0
   14884:	movt	r0, #1
   14888:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1488c:	b	149d0 <export_data_element_to_ascii@@Base+0x1388>
   14890:	sub	r3, fp, #340	; 0x154
   14894:	mov	r1, r3
   14898:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1489c:	bl	12418 <coda_cursor_read_double@plt>
   148a0:	mov	r3, r0
   148a4:	cmp	r3, #0
   148a8:	beq	148b0 <export_data_element_to_ascii@@Base+0x1268>
   148ac:	bl	1aeb8 <handle_coda_error@@Base>
   148b0:	sub	r3, fp, #340	; 0x154
   148b4:	ldrd	r2, [r3]
   148b8:	movw	r0, #55384	; 0xd858
   148bc:	movt	r0, #1
   148c0:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   148c4:	b	149d0 <export_data_element_to_ascii@@Base+0x1388>
   148c8:	sub	r3, fp, #348	; 0x15c
   148cc:	mov	r1, r3
   148d0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   148d4:	bl	12418 <coda_cursor_read_double@plt>
   148d8:	mov	r3, r0
   148dc:	cmp	r3, #0
   148e0:	beq	148e8 <export_data_element_to_ascii@@Base+0x12a0>
   148e4:	bl	1aeb8 <handle_coda_error@@Base>
   148e8:	vldr	d7, [fp, #-348]	; 0xfffffea4
   148ec:	vmov.f64	d0, d7
   148f0:	bl	12424 <coda_isNaN@plt>
   148f4:	mov	r3, r0
   148f8:	cmp	r3, #0
   148fc:	bne	14918 <export_data_element_to_ascii@@Base+0x12d0>
   14900:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14904:	vmov.f64	d0, d7
   14908:	bl	122c8 <coda_isInf@plt>
   1490c:	mov	r3, r0
   14910:	cmp	r3, #0
   14914:	beq	14930 <export_data_element_to_ascii@@Base+0x12e8>
   14918:	sub	r3, fp, #348	; 0x15c
   1491c:	ldrd	r2, [r3]
   14920:	movw	r0, #55420	; 0xd87c
   14924:	movt	r0, #1
   14928:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1492c:	b	149d0 <export_data_element_to_ascii@@Base+0x1388>
   14930:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14934:	sub	r3, fp, #376	; 0x178
   14938:	mov	r1, r3
   1493c:	movw	r0, #55428	; 0xd884
   14940:	movt	r0, #1
   14944:	vmov.f64	d0, d7
   14948:	bl	12244 <coda_time_double_to_string@plt>
   1494c:	mov	r3, r0
   14950:	cmp	r3, #0
   14954:	beq	14968 <export_data_element_to_ascii@@Base+0x1320>
   14958:	movw	r0, #55456	; 0xd8a0
   1495c:	movt	r0, #1
   14960:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   14964:	b	149d0 <export_data_element_to_ascii@@Base+0x1388>
   14968:	sub	r3, fp, #376	; 0x178
   1496c:	mov	r1, r3
   14970:	movw	r0, #55484	; 0xd8bc
   14974:	movt	r0, #1
   14978:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   1497c:	b	149d0 <export_data_element_to_ascii@@Base+0x1388>
   14980:	sub	r2, fp, #396	; 0x18c
   14984:	sub	r3, fp, #388	; 0x184
   14988:	mov	r1, r3
   1498c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14990:	bl	124c0 <coda_cursor_read_complex_double_split@plt>
   14994:	mov	r3, r0
   14998:	cmp	r3, #0
   1499c:	beq	149a4 <export_data_element_to_ascii@@Base+0x135c>
   149a0:	bl	1aeb8 <handle_coda_error@@Base>
   149a4:	sub	r1, fp, #388	; 0x184
   149a8:	ldrd	r0, [r1]
   149ac:	sub	r3, fp, #396	; 0x18c
   149b0:	ldrd	r2, [r3]
   149b4:	strd	r2, [sp]
   149b8:	mov	r2, r0
   149bc:	mov	r3, r1
   149c0:	movw	r0, #55492	; 0xd8c4
   149c4:	movt	r0, #1
   149c8:	bl	137f8 <export_data_element_to_ascii@@Base+0x1b0>
   149cc:	nop	{0}
   149d0:	b	149ec <export_data_element_to_ascii@@Base+0x13a4>
   149d4:	nop	{0}
   149d8:	b	149f0 <export_data_element_to_ascii@@Base+0x13a8>
   149dc:	nop	{0}
   149e0:	b	149f0 <export_data_element_to_ascii@@Base+0x13a8>
   149e4:	nop	{0}
   149e8:	b	149f0 <export_data_element_to_ascii@@Base+0x13a8>
   149ec:	nop	{0}
   149f0:	nop	{0}
   149f4:	sub	sp, fp, #28
   149f8:	ldrd	r4, [sp]
   149fc:	ldrd	r6, [sp, #8]
   14a00:	ldrd	r8, [sp, #16]
   14a04:	ldr	fp, [sp, #24]
   14a08:	add	sp, sp, #28
   14a0c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a10 <print_debug_data@@Base>:
   14a10:	str	fp, [sp, #-8]!
   14a14:	str	lr, [sp, #4]
   14a18:	add	fp, sp, #4
   14a1c:	sub	sp, sp, #560	; 0x230
   14a20:	str	r0, [fp, #-544]	; 0xfffffde0
   14a24:	str	r1, [fp, #-548]	; 0xfffffddc
   14a28:	str	r2, [fp, #-552]	; 0xfffffdd8
   14a2c:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14a30:	cmp	r3, #0
   14a34:	bne	14a5c <print_debug_data@@Base+0x4c>
   14a38:	movw	r3, #496	; 0x1f0
   14a3c:	movt	r3, #3
   14a40:	ldr	r3, [r3]
   14a44:	sub	r2, fp, #12
   14a48:	mov	r1, r2
   14a4c:	mov	r0, r3
   14a50:	bl	1222c <coda_open@plt>
   14a54:	str	r0, [fp, #-8]
   14a58:	b	14a84 <print_debug_data@@Base+0x74>
   14a5c:	movw	r3, #496	; 0x1f0
   14a60:	movt	r3, #3
   14a64:	ldr	r0, [r3]
   14a68:	sub	r3, fp, #12
   14a6c:	str	r3, [sp]
   14a70:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14a74:	ldr	r2, [fp, #-548]	; 0xfffffddc
   14a78:	ldr	r1, [fp, #-544]	; 0xfffffde0
   14a7c:	bl	12448 <coda_open_as@plt>
   14a80:	str	r0, [fp, #-8]
   14a84:	ldr	r3, [fp, #-8]
   14a88:	cmp	r3, #0
   14a8c:	beq	14b0c <print_debug_data@@Base+0xfc>
   14a90:	bl	125e0 <coda_get_errno@plt>
   14a94:	mov	r3, r0
   14a98:	ldr	r3, [r3]
   14a9c:	cmn	r3, #21
   14aa0:	bne	14b0c <print_debug_data@@Base+0xfc>
   14aa4:	mov	r0, #0
   14aa8:	bl	12274 <coda_set_option_use_mmap@plt>
   14aac:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14ab0:	cmp	r3, #0
   14ab4:	bne	14adc <print_debug_data@@Base+0xcc>
   14ab8:	movw	r3, #496	; 0x1f0
   14abc:	movt	r3, #3
   14ac0:	ldr	r3, [r3]
   14ac4:	sub	r2, fp, #12
   14ac8:	mov	r1, r2
   14acc:	mov	r0, r3
   14ad0:	bl	1222c <coda_open@plt>
   14ad4:	str	r0, [fp, #-8]
   14ad8:	b	14b04 <print_debug_data@@Base+0xf4>
   14adc:	movw	r3, #496	; 0x1f0
   14ae0:	movt	r3, #3
   14ae4:	ldr	r0, [r3]
   14ae8:	sub	r3, fp, #12
   14aec:	str	r3, [sp]
   14af0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14af4:	ldr	r2, [fp, #-548]	; 0xfffffddc
   14af8:	ldr	r1, [fp, #-544]	; 0xfffffde0
   14afc:	bl	12448 <coda_open_as@plt>
   14b00:	str	r0, [fp, #-8]
   14b04:	mov	r0, #1
   14b08:	bl	12274 <coda_set_option_use_mmap@plt>
   14b0c:	ldr	r3, [fp, #-8]
   14b10:	cmp	r3, #0
   14b14:	beq	14b1c <print_debug_data@@Base+0x10c>
   14b18:	bl	1aeb8 <handle_coda_error@@Base>
   14b1c:	ldr	r3, [fp, #-12]
   14b20:	sub	r2, fp, #536	; 0x218
   14b24:	mov	r1, r2
   14b28:	mov	r0, r3
   14b2c:	bl	12310 <coda_get_product_format@plt>
   14b30:	mov	r3, r0
   14b34:	cmp	r3, #0
   14b38:	beq	14b40 <print_debug_data@@Base+0x130>
   14b3c:	bl	1aeb8 <handle_coda_error@@Base>
   14b40:	ldr	r3, [fp, #-536]	; 0xfffffde8
   14b44:	cmp	r3, #0
   14b48:	beq	14b64 <print_debug_data@@Base+0x154>
   14b4c:	ldr	r3, [fp, #-536]	; 0xfffffde8
   14b50:	cmp	r3, #1
   14b54:	beq	14b64 <print_debug_data@@Base+0x154>
   14b58:	ldr	r3, [fp, #-536]	; 0xfffffde8
   14b5c:	cmp	r3, #2
   14b60:	bne	14b6c <print_debug_data@@Base+0x15c>
   14b64:	mov	r2, #1
   14b68:	b	14b70 <print_debug_data@@Base+0x160>
   14b6c:	mov	r2, #0
   14b70:	movw	r3, #428	; 0x1ac
   14b74:	movt	r3, #3
   14b78:	str	r2, [r3]
   14b7c:	ldr	r2, [fp, #-12]
   14b80:	sub	r3, fp, #532	; 0x214
   14b84:	mov	r1, r2
   14b88:	mov	r0, r3
   14b8c:	bl	12358 <coda_cursor_set_product@plt>
   14b90:	mov	r3, r0
   14b94:	cmp	r3, #0
   14b98:	beq	14ba0 <print_debug_data@@Base+0x190>
   14b9c:	bl	1aeb8 <handle_coda_error@@Base>
   14ba0:	movw	r3, #4272	; 0x10b0
   14ba4:	movt	r3, #3
   14ba8:	ldr	r3, [r3]
   14bac:	cmp	r3, #0
   14bb0:	beq	14be4 <print_debug_data@@Base+0x1d4>
   14bb4:	movw	r3, #4272	; 0x10b0
   14bb8:	movt	r3, #3
   14bbc:	ldr	r2, [r3]
   14bc0:	sub	r3, fp, #532	; 0x214
   14bc4:	mov	r1, r2
   14bc8:	mov	r0, r3
   14bcc:	bl	12538 <coda_cursor_goto@plt>
   14bd0:	str	r0, [fp, #-8]
   14bd4:	ldr	r3, [fp, #-8]
   14bd8:	cmp	r3, #0
   14bdc:	beq	14be4 <print_debug_data@@Base+0x1d4>
   14be0:	bl	1aeb8 <handle_coda_error@@Base>
   14be4:	mov	r0, #0
   14be8:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   14bec:	sub	r3, fp, #532	; 0x214
   14bf0:	mov	r1, #0
   14bf4:	mov	r0, r3
   14bf8:	bl	13a34 <export_data_element_to_ascii@@Base+0x3ec>
   14bfc:	ldr	r3, [fp, #-12]
   14c00:	mov	r0, r3
   14c04:	bl	12514 <coda_close@plt>
   14c08:	nop	{0}
   14c0c:	sub	sp, fp, #4
   14c10:	ldr	fp, [sp]
   14c14:	add	sp, sp, #4
   14c18:	pop	{pc}		; (ldr pc, [sp], #4)

00014c1c <dim_info_init@@Base>:
   14c1c:	push	{fp}		; (str fp, [sp, #-4]!)
   14c20:	add	fp, sp, #0
   14c24:	movw	r3, #4280	; 0x10b8
   14c28:	movt	r3, #3
   14c2c:	mov	r2, #0
   14c30:	str	r2, [r3]
   14c34:	movw	r3, #4280	; 0x10b8
   14c38:	movt	r3, #3
   14c3c:	mov	r2, #0
   14c40:	str	r2, [r3, #68]	; 0x44
   14c44:	movw	r3, #4280	; 0x10b8
   14c48:	movt	r3, #3
   14c4c:	mvn	r2, #0
   14c50:	str	r2, [r3, #104]	; 0x68
   14c54:	nop	{0}
   14c58:	add	sp, fp, #0
   14c5c:	pop	{fp}		; (ldr fp, [sp], #4)
   14c60:	bx	lr

00014c64 <dim_info_done@@Base>:
   14c64:	push	{fp}		; (str fp, [sp, #-4]!)
   14c68:	add	fp, sp, #0
   14c6c:	nop	{0}
   14c70:	add	sp, fp, #0
   14c74:	pop	{fp}		; (ldr fp, [sp], #4)
   14c78:	bx	lr

00014c7c <print_all_distinct_dims@@Base>:
   14c7c:	str	fp, [sp, #-8]!
   14c80:	str	lr, [sp, #4]
   14c84:	add	fp, sp, #4
   14c88:	sub	sp, sp, #24
   14c8c:	str	r0, [fp, #-16]
   14c90:	movw	r3, #4280	; 0x10b8
   14c94:	movt	r3, #3
   14c98:	ldr	r3, [r3]
   14c9c:	ldr	r2, [fp, #-16]
   14ca0:	cmp	r2, r3
   14ca4:	blt	14cc8 <print_all_distinct_dims@@Base+0x4c>
   14ca8:	movw	r3, #55932	; 0xda7c
   14cac:	movt	r3, #1
   14cb0:	mov	r2, #50	; 0x32
   14cb4:	movw	r1, #55524	; 0xd8e4
   14cb8:	movt	r1, #1
   14cbc:	movw	r0, #55608	; 0xd938
   14cc0:	movt	r0, #1
   14cc4:	bl	12634 <__assert_fail@plt>
   14cc8:	movw	r3, #4280	; 0x10b8
   14ccc:	movt	r3, #3
   14cd0:	ldr	r2, [fp, #-16]
   14cd4:	add	r2, r2, #18
   14cd8:	ldr	r3, [r3, r2, lsl #2]
   14cdc:	cmp	r3, #0
   14ce0:	beq	15020 <print_all_distinct_dims@@Base+0x3a4>
   14ce4:	movw	r2, #4280	; 0x10b8
   14ce8:	movt	r2, #3
   14cec:	ldr	r3, [fp, #-16]
   14cf0:	lsl	r3, r3, #2
   14cf4:	add	r3, r2, r3
   14cf8:	ldr	r3, [r3, #4]
   14cfc:	add	r3, r3, #1
   14d00:	lsl	r3, r3, #2
   14d04:	mov	r0, r3
   14d08:	bl	123a0 <malloc@plt>
   14d0c:	mov	r3, r0
   14d10:	str	r3, [fp, #-12]
   14d14:	ldr	r3, [fp, #-12]
   14d18:	cmp	r3, #0
   14d1c:	bne	14d64 <print_all_distinct_dims@@Base+0xe8>
   14d20:	movw	r2, #4280	; 0x10b8
   14d24:	movt	r2, #3
   14d28:	ldr	r3, [fp, #-16]
   14d2c:	lsl	r3, r3, #2
   14d30:	add	r3, r2, r3
   14d34:	ldr	r3, [r3, #4]
   14d38:	add	r3, r3, #1
   14d3c:	lsl	r2, r3, #2
   14d40:	mov	r3, #61	; 0x3d
   14d44:	str	r3, [sp]
   14d48:	movw	r3, #55524	; 0xd8e4
   14d4c:	movt	r3, #1
   14d50:	movw	r1, #55636	; 0xd954
   14d54:	movt	r1, #1
   14d58:	mvn	r0, #0
   14d5c:	bl	12220 <coda_set_error@plt>
   14d60:	bl	1aeb8 <handle_coda_error@@Base>
   14d64:	movw	r2, #4280	; 0x10b8
   14d68:	movt	r2, #3
   14d6c:	ldr	r3, [fp, #-16]
   14d70:	lsl	r3, r3, #2
   14d74:	add	r3, r2, r3
   14d78:	ldr	r3, [r3, #4]
   14d7c:	add	r3, r3, #1
   14d80:	lsl	r3, r3, #2
   14d84:	mov	r2, r3
   14d88:	mov	r1, #0
   14d8c:	ldr	r0, [fp, #-12]
   14d90:	bl	12484 <memset@plt>
   14d94:	mov	r3, #0
   14d98:	str	r3, [fp, #-8]
   14d9c:	b	14e24 <print_all_distinct_dims@@Base+0x1a8>
   14da0:	movw	r2, #4280	; 0x10b8
   14da4:	movt	r2, #3
   14da8:	ldr	r3, [fp, #-16]
   14dac:	add	r3, r3, #26
   14db0:	lsl	r3, r3, #2
   14db4:	add	r3, r2, r3
   14db8:	ldr	r2, [r3, #4]
   14dbc:	ldr	r3, [fp, #-8]
   14dc0:	lsl	r3, r3, #2
   14dc4:	add	r3, r2, r3
   14dc8:	ldr	r3, [r3]
   14dcc:	cmp	r3, #0
   14dd0:	blt	14e18 <print_all_distinct_dims@@Base+0x19c>
   14dd4:	movw	r2, #4280	; 0x10b8
   14dd8:	movt	r2, #3
   14ddc:	ldr	r3, [fp, #-16]
   14de0:	add	r3, r3, #26
   14de4:	lsl	r3, r3, #2
   14de8:	add	r3, r2, r3
   14dec:	ldr	r2, [r3, #4]
   14df0:	ldr	r3, [fp, #-8]
   14df4:	lsl	r3, r3, #2
   14df8:	add	r3, r2, r3
   14dfc:	ldr	r3, [r3]
   14e00:	lsl	r3, r3, #2
   14e04:	ldr	r2, [fp, #-12]
   14e08:	add	r3, r2, r3
   14e0c:	ldr	r2, [r3]
   14e10:	add	r2, r2, #1
   14e14:	str	r2, [r3]
   14e18:	ldr	r3, [fp, #-8]
   14e1c:	add	r3, r3, #1
   14e20:	str	r3, [fp, #-8]
   14e24:	ldr	r3, [fp, #-8]
   14e28:	mov	r0, r3
   14e2c:	asr	r1, r0, #31
   14e30:	movw	r2, #4280	; 0x10b8
   14e34:	movt	r2, #3
   14e38:	ldr	r3, [fp, #-16]
   14e3c:	add	r3, r3, #34	; 0x22
   14e40:	lsl	r3, r3, #2
   14e44:	add	r3, r2, r3
   14e48:	ldr	r3, [r3, #4]
   14e4c:	sub	r2, r3, #1
   14e50:	movw	r3, #4280	; 0x10b8
   14e54:	movt	r3, #3
   14e58:	add	r2, r2, #30
   14e5c:	lsl	r2, r2, #3
   14e60:	add	r3, r3, r2
   14e64:	ldrd	r2, [r3]
   14e68:	cmp	r0, r2
   14e6c:	sbcs	r3, r1, r3
   14e70:	blt	14da0 <print_all_distinct_dims@@Base+0x124>
   14e74:	ldr	r3, [fp, #-16]
   14e78:	add	r3, r3, #1
   14e7c:	mov	r1, r3
   14e80:	movw	r0, #55692	; 0xd98c
   14e84:	movt	r0, #1
   14e88:	bl	121fc <printf@plt>
   14e8c:	movw	r2, #4280	; 0x10b8
   14e90:	movt	r2, #3
   14e94:	ldr	r3, [fp, #-16]
   14e98:	add	r3, r3, #8
   14e9c:	lsl	r3, r3, #2
   14ea0:	add	r3, r2, r3
   14ea4:	ldr	r3, [r3, #4]
   14ea8:	str	r3, [fp, #-8]
   14eac:	b	14ee8 <print_all_distinct_dims@@Base+0x26c>
   14eb0:	ldr	r3, [fp, #-8]
   14eb4:	lsl	r3, r3, #2
   14eb8:	ldr	r2, [fp, #-12]
   14ebc:	add	r3, r2, r3
   14ec0:	ldr	r3, [r3]
   14ec4:	cmp	r3, #0
   14ec8:	ble	14edc <print_all_distinct_dims@@Base+0x260>
   14ecc:	ldr	r1, [fp, #-8]
   14ed0:	movw	r0, #55704	; 0xd998
   14ed4:	movt	r0, #1
   14ed8:	bl	121fc <printf@plt>
   14edc:	ldr	r3, [fp, #-8]
   14ee0:	add	r3, r3, #1
   14ee4:	str	r3, [fp, #-8]
   14ee8:	movw	r2, #4280	; 0x10b8
   14eec:	movt	r2, #3
   14ef0:	ldr	r3, [fp, #-16]
   14ef4:	lsl	r3, r3, #2
   14ef8:	add	r3, r2, r3
   14efc:	ldr	r3, [r3, #4]
   14f00:	ldr	r2, [fp, #-8]
   14f04:	cmp	r2, r3
   14f08:	blt	14eb0 <print_all_distinct_dims@@Base+0x234>
   14f0c:	movw	r2, #4280	; 0x10b8
   14f10:	movt	r2, #3
   14f14:	ldr	r3, [fp, #-16]
   14f18:	lsl	r3, r3, #2
   14f1c:	add	r3, r2, r3
   14f20:	ldr	r3, [r3, #4]
   14f24:	mov	r1, r3
   14f28:	movw	r0, #55708	; 0xd99c
   14f2c:	movt	r0, #1
   14f30:	bl	121fc <printf@plt>
   14f34:	movw	r0, #55712	; 0xd9a0
   14f38:	movt	r0, #1
   14f3c:	bl	121fc <printf@plt>
   14f40:	movw	r2, #4280	; 0x10b8
   14f44:	movt	r2, #3
   14f48:	ldr	r3, [fp, #-16]
   14f4c:	add	r3, r3, #8
   14f50:	lsl	r3, r3, #2
   14f54:	add	r3, r2, r3
   14f58:	ldr	r3, [r3, #4]
   14f5c:	str	r3, [fp, #-8]
   14f60:	b	14fb0 <print_all_distinct_dims@@Base+0x334>
   14f64:	ldr	r3, [fp, #-8]
   14f68:	lsl	r3, r3, #2
   14f6c:	ldr	r2, [fp, #-12]
   14f70:	add	r3, r2, r3
   14f74:	ldr	r3, [r3]
   14f78:	cmp	r3, #0
   14f7c:	ble	14fa4 <print_all_distinct_dims@@Base+0x328>
   14f80:	ldr	r3, [fp, #-8]
   14f84:	lsl	r3, r3, #2
   14f88:	ldr	r2, [fp, #-12]
   14f8c:	add	r3, r2, r3
   14f90:	ldr	r3, [r3]
   14f94:	mov	r1, r3
   14f98:	movw	r0, #55704	; 0xd998
   14f9c:	movt	r0, #1
   14fa0:	bl	121fc <printf@plt>
   14fa4:	ldr	r3, [fp, #-8]
   14fa8:	add	r3, r3, #1
   14fac:	str	r3, [fp, #-8]
   14fb0:	movw	r2, #4280	; 0x10b8
   14fb4:	movt	r2, #3
   14fb8:	ldr	r3, [fp, #-16]
   14fbc:	lsl	r3, r3, #2
   14fc0:	add	r3, r2, r3
   14fc4:	ldr	r3, [r3, #4]
   14fc8:	ldr	r2, [fp, #-8]
   14fcc:	cmp	r2, r3
   14fd0:	blt	14f64 <print_all_distinct_dims@@Base+0x2e8>
   14fd4:	movw	r2, #4280	; 0x10b8
   14fd8:	movt	r2, #3
   14fdc:	ldr	r3, [fp, #-16]
   14fe0:	lsl	r3, r3, #2
   14fe4:	add	r3, r2, r3
   14fe8:	ldr	r3, [r3, #4]
   14fec:	lsl	r3, r3, #2
   14ff0:	ldr	r2, [fp, #-12]
   14ff4:	add	r3, r2, r3
   14ff8:	ldr	r3, [r3]
   14ffc:	mov	r1, r3
   15000:	movw	r0, #55708	; 0xd99c
   15004:	movt	r0, #1
   15008:	bl	121fc <printf@plt>
   1500c:	mov	r0, #10
   15010:	bl	12490 <putchar@plt>
   15014:	ldr	r0, [fp, #-12]
   15018:	bl	12268 <free@plt>
   1501c:	b	15024 <print_all_distinct_dims@@Base+0x3a8>
   15020:	nop	{0}
   15024:	sub	sp, fp, #4
   15028:	ldr	fp, [sp]
   1502c:	add	sp, sp, #4
   15030:	pop	{pc}		; (ldr pc, [sp], #4)
   15034:	str	fp, [sp, #-8]!
   15038:	str	lr, [sp, #4]
   1503c:	add	fp, sp, #4
   15040:	sub	sp, sp, #120	; 0x78
   15044:	str	r0, [fp, #-112]	; 0xffffff90
   15048:	str	r1, [fp, #-116]	; 0xffffff8c
   1504c:	str	r2, [fp, #-120]	; 0xffffff88
   15050:	sub	r3, fp, #52	; 0x34
   15054:	mov	r1, r3
   15058:	ldr	r0, [pc, #2348]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   1505c:	bl	122f8 <coda_cursor_get_type_class@plt>
   15060:	mov	r3, r0
   15064:	cmp	r3, #0
   15068:	beq	15070 <print_all_distinct_dims@@Base+0x3f4>
   1506c:	bl	1aeb8 <handle_coda_error@@Base>
   15070:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15074:	cmp	r3, #5
   15078:	ldrls	pc, [pc, r3, lsl #2]
   1507c:	b	1594c <print_all_distinct_dims@@Base+0xcd0>
   15080:	andeq	r5, r1, r8, asr r5
   15084:	muleq	r1, r8, r0
   15088:	andeq	r5, r1, ip, asr #18
   1508c:	andeq	r5, r1, ip, asr #18
   15090:	andeq	r5, r1, r4, lsr r7
   15094:	andeq	r5, r1, r4, lsr r7
   15098:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1509c:	mov	r3, r2
   150a0:	lsl	r3, r3, #2
   150a4:	add	r3, r3, r2
   150a8:	lsl	r3, r3, #4
   150ac:	add	r2, r3, #800	; 0x320
   150b0:	movw	r3, #496	; 0x1f0
   150b4:	movt	r3, #3
   150b8:	add	r3, r2, r3
   150bc:	str	r3, [fp, #-28]	; 0xffffffe4
   150c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150c4:	ldr	r3, [r3]
   150c8:	str	r3, [fp, #-32]	; 0xffffffe0
   150cc:	movw	r3, #496	; 0x1f0
   150d0:	movt	r3, #3
   150d4:	ldr	r3, [r3, #3360]	; 0xd20
   150d8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   150dc:	cmp	r2, r3
   150e0:	bne	15350 <print_all_distinct_dims@@Base+0x6d4>
   150e4:	sub	r2, fp, #104	; 0x68
   150e8:	sub	r3, fp, #56	; 0x38
   150ec:	mov	r1, r3
   150f0:	ldr	r0, [pc, #2196]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   150f4:	bl	124fc <coda_cursor_get_array_dim@plt>
   150f8:	mov	r3, r0
   150fc:	cmp	r3, #0
   15100:	beq	15108 <print_all_distinct_dims@@Base+0x48c>
   15104:	bl	1aeb8 <handle_coda_error@@Base>
   15108:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1510c:	ldr	r2, [r3, #4]
   15110:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15114:	cmp	r2, r3
   15118:	beq	1513c <print_all_distinct_dims@@Base+0x4c0>
   1511c:	movw	r3, #55956	; 0xda94
   15120:	movt	r3, #1
   15124:	mov	r2, #125	; 0x7d
   15128:	movw	r1, #55524	; 0xd8e4
   1512c:	movt	r1, #1
   15130:	movw	r0, #55720	; 0xd9a8
   15134:	movt	r0, #1
   15138:	bl	12634 <__assert_fail@plt>
   1513c:	mov	r3, #0
   15140:	str	r3, [fp, #-8]
   15144:	b	15338 <print_all_distinct_dims@@Base+0x6bc>
   15148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1514c:	ldr	r2, [fp, #-8]
   15150:	add	r2, r2, #2
   15154:	ldr	r3, [r3, r2, lsl #2]
   15158:	cmn	r3, #1
   1515c:	bne	1532c <print_all_distinct_dims@@Base+0x6b0>
   15160:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15164:	ldr	r3, [fp, #-8]
   15168:	add	r3, r2, r3
   1516c:	movw	r2, #4280	; 0x10b8
   15170:	movt	r2, #3
   15174:	add	r3, r3, #26
   15178:	lsl	r3, r3, #2
   1517c:	add	r3, r2, r3
   15180:	ldr	r2, [r3, #4]
   15184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15188:	ldr	r3, [r3, #44]	; 0x2c
   1518c:	lsl	r3, r3, #2
   15190:	add	r2, r2, r3
   15194:	ldr	r3, [fp, #-8]
   15198:	lsl	r3, r3, #2
   1519c:	sub	r1, fp, #4
   151a0:	add	r3, r1, r3
   151a4:	ldr	r3, [r3, #-100]	; 0xffffff9c
   151a8:	str	r3, [r2]
   151ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151b0:	ldr	r3, [fp, #-8]
   151b4:	add	r3, r2, r3
   151b8:	movw	r2, #4280	; 0x10b8
   151bc:	movt	r2, #3
   151c0:	lsl	r3, r3, #2
   151c4:	add	r3, r2, r3
   151c8:	ldr	r3, [r3, #4]
   151cc:	cmn	r3, #1
   151d0:	bne	15244 <print_all_distinct_dims@@Base+0x5c8>
   151d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151d8:	ldr	r3, [fp, #-8]
   151dc:	add	r0, r2, r3
   151e0:	ldr	r3, [fp, #-8]
   151e4:	lsl	r3, r3, #2
   151e8:	sub	r2, fp, #4
   151ec:	add	r3, r2, r3
   151f0:	ldr	r1, [r3, #-100]	; 0xffffff9c
   151f4:	movw	r2, #4280	; 0x10b8
   151f8:	movt	r2, #3
   151fc:	lsl	r3, r0, #2
   15200:	add	r3, r2, r3
   15204:	str	r1, [r3, #4]
   15208:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1520c:	ldr	r3, [fp, #-8]
   15210:	add	r0, r2, r3
   15214:	ldr	r3, [fp, #-8]
   15218:	lsl	r3, r3, #2
   1521c:	sub	r2, fp, #4
   15220:	add	r3, r2, r3
   15224:	ldr	r1, [r3, #-100]	; 0xffffff9c
   15228:	movw	r2, #4280	; 0x10b8
   1522c:	movt	r2, #3
   15230:	add	r3, r0, #8
   15234:	lsl	r3, r3, #2
   15238:	add	r3, r2, r3
   1523c:	str	r1, [r3, #4]
   15240:	b	1532c <print_all_distinct_dims@@Base+0x6b0>
   15244:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15248:	ldr	r3, [fp, #-8]
   1524c:	add	r3, r2, r3
   15250:	movw	r2, #4280	; 0x10b8
   15254:	movt	r2, #3
   15258:	lsl	r3, r3, #2
   1525c:	add	r3, r2, r3
   15260:	ldr	r2, [r3, #4]
   15264:	ldr	r3, [fp, #-8]
   15268:	lsl	r3, r3, #2
   1526c:	sub	r1, fp, #4
   15270:	add	r3, r1, r3
   15274:	ldr	r3, [r3, #-100]	; 0xffffff9c
   15278:	cmp	r2, r3
   1527c:	bge	152b4 <print_all_distinct_dims@@Base+0x638>
   15280:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15284:	ldr	r3, [fp, #-8]
   15288:	add	r0, r2, r3
   1528c:	ldr	r3, [fp, #-8]
   15290:	lsl	r3, r3, #2
   15294:	sub	r2, fp, #4
   15298:	add	r3, r2, r3
   1529c:	ldr	r1, [r3, #-100]	; 0xffffff9c
   152a0:	movw	r2, #4280	; 0x10b8
   152a4:	movt	r2, #3
   152a8:	lsl	r3, r0, #2
   152ac:	add	r3, r2, r3
   152b0:	str	r1, [r3, #4]
   152b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   152b8:	ldr	r3, [fp, #-8]
   152bc:	add	r3, r2, r3
   152c0:	movw	r2, #4280	; 0x10b8
   152c4:	movt	r2, #3
   152c8:	add	r3, r3, #8
   152cc:	lsl	r3, r3, #2
   152d0:	add	r3, r2, r3
   152d4:	ldr	r2, [r3, #4]
   152d8:	ldr	r3, [fp, #-8]
   152dc:	lsl	r3, r3, #2
   152e0:	sub	r1, fp, #4
   152e4:	add	r3, r1, r3
   152e8:	ldr	r3, [r3, #-100]	; 0xffffff9c
   152ec:	cmp	r2, r3
   152f0:	ble	1532c <print_all_distinct_dims@@Base+0x6b0>
   152f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   152f8:	ldr	r3, [fp, #-8]
   152fc:	add	r0, r2, r3
   15300:	ldr	r3, [fp, #-8]
   15304:	lsl	r3, r3, #2
   15308:	sub	r2, fp, #4
   1530c:	add	r3, r2, r3
   15310:	ldr	r1, [r3, #-100]	; 0xffffff9c
   15314:	movw	r2, #4280	; 0x10b8
   15318:	movt	r2, #3
   1531c:	add	r3, r0, #8
   15320:	lsl	r3, r3, #2
   15324:	add	r3, r2, r3
   15328:	str	r1, [r3, #4]
   1532c:	ldr	r3, [fp, #-8]
   15330:	add	r3, r3, #1
   15334:	str	r3, [fp, #-8]
   15338:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1533c:	ldr	r3, [r3, #4]
   15340:	ldr	r2, [fp, #-8]
   15344:	cmp	r2, r3
   15348:	blt	15148 <print_all_distinct_dims@@Base+0x4cc>
   1534c:	b	1596c <print_all_distinct_dims@@Base+0xcf0>
   15350:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15354:	cmp	r3, #0
   15358:	bne	15368 <print_all_distinct_dims@@Base+0x6ec>
   1535c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15360:	mov	r2, #0
   15364:	str	r2, [r3, #44]	; 0x2c
   15368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1536c:	ldr	r3, [r3, #44]	; 0x2c
   15370:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15374:	ldr	r2, [r2, #40]	; 0x28
   15378:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1537c:	add	r1, r1, #1
   15380:	mul	r0, r2, r3
   15384:	movw	r2, #496	; 0x1f0
   15388:	movt	r2, #3
   1538c:	mov	r3, r1
   15390:	lsl	r3, r3, #2
   15394:	add	r3, r3, r1
   15398:	lsl	r3, r3, #4
   1539c:	add	r3, r2, r3
   153a0:	add	r3, r3, #844	; 0x34c
   153a4:	str	r0, [r3]
   153a8:	mov	r3, #1
   153ac:	str	r3, [fp, #-12]
   153b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153b4:	str	r3, [fp, #-16]
   153b8:	b	15448 <print_all_distinct_dims@@Base+0x7cc>
   153bc:	movw	r3, #4280	; 0x10b8
   153c0:	movt	r3, #3
   153c4:	ldr	r2, [fp, #-16]
   153c8:	add	r2, r2, #18
   153cc:	ldr	r3, [r3, r2, lsl #2]
   153d0:	cmp	r3, #0
   153d4:	beq	15418 <print_all_distinct_dims@@Base+0x79c>
   153d8:	movw	r2, #4280	; 0x10b8
   153dc:	movt	r2, #3
   153e0:	ldr	r3, [fp, #-16]
   153e4:	add	r3, r3, #26
   153e8:	lsl	r3, r3, #2
   153ec:	add	r3, r2, r3
   153f0:	ldr	r2, [r3, #4]
   153f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153f8:	ldr	r3, [r3, #44]	; 0x2c
   153fc:	lsl	r3, r3, #2
   15400:	add	r3, r2, r3
   15404:	ldr	r2, [r3]
   15408:	ldr	r3, [fp, #-12]
   1540c:	mul	r3, r2, r3
   15410:	str	r3, [fp, #-12]
   15414:	b	1543c <print_all_distinct_dims@@Base+0x7c0>
   15418:	movw	r2, #4280	; 0x10b8
   1541c:	movt	r2, #3
   15420:	ldr	r3, [fp, #-16]
   15424:	lsl	r3, r3, #2
   15428:	add	r3, r2, r3
   1542c:	ldr	r2, [r3, #4]
   15430:	ldr	r3, [fp, #-12]
   15434:	mul	r3, r2, r3
   15438:	str	r3, [fp, #-12]
   1543c:	ldr	r3, [fp, #-16]
   15440:	add	r3, r3, #1
   15444:	str	r3, [fp, #-16]
   15448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1544c:	ldr	r2, [r3, #4]
   15450:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15454:	add	r3, r2, r3
   15458:	ldr	r2, [fp, #-16]
   1545c:	cmp	r2, r3
   15460:	blt	153bc <print_all_distinct_dims@@Base+0x740>
   15464:	ldr	r3, [fp, #-12]
   15468:	cmp	r3, #0
   1546c:	ble	1596c <print_all_distinct_dims@@Base+0xcf0>
   15470:	ldr	r0, [pc, #1300]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   15474:	bl	12340 <coda_cursor_goto_first_array_element@plt>
   15478:	mov	r3, r0
   1547c:	cmp	r3, #0
   15480:	beq	15488 <print_all_distinct_dims@@Base+0x80c>
   15484:	bl	1aeb8 <handle_coda_error@@Base>
   15488:	mov	r3, #0
   1548c:	str	r3, [fp, #-20]	; 0xffffffec
   15490:	b	1553c <print_all_distinct_dims@@Base+0x8c0>
   15494:	ldr	r3, [fp, #-112]	; 0xffffff90
   15498:	add	r0, r3, #1
   1549c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   154a0:	add	r3, r3, #1
   154a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   154a8:	mov	r1, r3
   154ac:	bl	15034 <print_all_distinct_dims@@Base+0x3b8>
   154b0:	ldr	r3, [fp, #-12]
   154b4:	sub	r3, r3, #1
   154b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   154bc:	cmp	r2, r3
   154c0:	bge	15530 <print_all_distinct_dims@@Base+0x8b4>
   154c4:	ldr	r0, [pc, #1216]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   154c8:	bl	1243c <coda_cursor_goto_next_array_element@plt>
   154cc:	mov	r3, r0
   154d0:	cmp	r3, #0
   154d4:	beq	154dc <print_all_distinct_dims@@Base+0x860>
   154d8:	bl	1aeb8 <handle_coda_error@@Base>
   154dc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   154e0:	add	r1, r3, #1
   154e4:	movw	r2, #496	; 0x1f0
   154e8:	movt	r2, #3
   154ec:	mov	r3, r1
   154f0:	lsl	r3, r3, #2
   154f4:	add	r3, r3, r1
   154f8:	lsl	r3, r3, #4
   154fc:	add	r3, r2, r3
   15500:	add	r3, r3, #844	; 0x34c
   15504:	ldr	r3, [r3]
   15508:	add	r0, r3, #1
   1550c:	movw	r2, #496	; 0x1f0
   15510:	movt	r2, #3
   15514:	mov	r3, r1
   15518:	lsl	r3, r3, #2
   1551c:	add	r3, r3, r1
   15520:	lsl	r3, r3, #4
   15524:	add	r3, r2, r3
   15528:	add	r3, r3, #844	; 0x34c
   1552c:	str	r0, [r3]
   15530:	ldr	r3, [fp, #-20]	; 0xffffffec
   15534:	add	r3, r3, #1
   15538:	str	r3, [fp, #-20]	; 0xffffffec
   1553c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15540:	ldr	r3, [fp, #-12]
   15544:	cmp	r2, r3
   15548:	blt	15494 <print_all_distinct_dims@@Base+0x818>
   1554c:	ldr	r0, [pc, #1080]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   15550:	bl	123d0 <coda_cursor_goto_parent@plt>
   15554:	b	1596c <print_all_distinct_dims@@Base+0xcf0>
   15558:	movw	r2, #496	; 0x1f0
   1555c:	movt	r2, #3
   15560:	ldr	r3, [fp, #-120]	; 0xffffff88
   15564:	add	r3, r3, #872	; 0x368
   15568:	lsl	r3, r3, #2
   1556c:	add	r3, r2, r3
   15570:	ldr	r3, [r3, #4]
   15574:	sub	r2, fp, #60	; 0x3c
   15578:	mov	r1, r3
   1557c:	ldr	r0, [pc, #1032]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   15580:	bl	12208 <coda_cursor_get_record_field_available_status@plt>
   15584:	mov	r3, r0
   15588:	cmp	r3, #0
   1558c:	beq	15594 <print_all_distinct_dims@@Base+0x918>
   15590:	bl	1aeb8 <handle_coda_error@@Base>
   15594:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15598:	cmp	r3, #0
   1559c:	beq	15600 <print_all_distinct_dims@@Base+0x984>
   155a0:	movw	r2, #496	; 0x1f0
   155a4:	movt	r2, #3
   155a8:	ldr	r3, [fp, #-120]	; 0xffffff88
   155ac:	add	r3, r3, #872	; 0x368
   155b0:	lsl	r3, r3, #2
   155b4:	add	r3, r2, r3
   155b8:	ldr	r3, [r3, #4]
   155bc:	mov	r1, r3
   155c0:	ldr	r0, [pc, #964]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   155c4:	bl	12370 <coda_cursor_goto_record_field_by_index@plt>
   155c8:	mov	r3, r0
   155cc:	cmp	r3, #0
   155d0:	beq	155d8 <print_all_distinct_dims@@Base+0x95c>
   155d4:	bl	1aeb8 <handle_coda_error@@Base>
   155d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   155dc:	add	r0, r3, #1
   155e0:	ldr	r3, [fp, #-120]	; 0xffffff88
   155e4:	add	r3, r3, #1
   155e8:	mov	r2, r3
   155ec:	ldr	r1, [fp, #-116]	; 0xffffff8c
   155f0:	bl	15034 <print_all_distinct_dims@@Base+0x3b8>
   155f4:	ldr	r0, [pc, #912]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   155f8:	bl	123d0 <coda_cursor_goto_parent@plt>
   155fc:	b	15978 <print_all_distinct_dims@@Base+0xcfc>
   15600:	movw	r3, #496	; 0x1f0
   15604:	movt	r3, #3
   15608:	ldr	r2, [r3, #3360]	; 0xd20
   1560c:	mov	r3, r2
   15610:	lsl	r3, r3, #2
   15614:	add	r3, r3, r2
   15618:	lsl	r3, r3, #4
   1561c:	add	r2, r3, #800	; 0x320
   15620:	movw	r3, #496	; 0x1f0
   15624:	movt	r3, #3
   15628:	add	r3, r2, r3
   1562c:	str	r3, [fp, #-36]	; 0xffffffdc
   15630:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15634:	ldr	r3, [r3]
   15638:	str	r3, [fp, #-40]	; 0xffffffd8
   1563c:	mov	r3, #0
   15640:	str	r3, [fp, #-24]	; 0xffffffe8
   15644:	b	1571c <print_all_distinct_dims@@Base+0xaa0>
   15648:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1564c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15650:	add	r2, r2, #2
   15654:	ldr	r3, [r3, r2, lsl #2]
   15658:	cmn	r3, #1
   1565c:	bne	15710 <print_all_distinct_dims@@Base+0xa94>
   15660:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15668:	add	r3, r2, r3
   1566c:	movw	r2, #4280	; 0x10b8
   15670:	movt	r2, #3
   15674:	add	r3, r3, #26
   15678:	lsl	r3, r3, #2
   1567c:	add	r3, r2, r3
   15680:	ldr	r2, [r3, #4]
   15684:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15688:	ldr	r3, [r3, #44]	; 0x2c
   1568c:	lsl	r3, r3, #2
   15690:	add	r3, r2, r3
   15694:	mov	r2, #0
   15698:	str	r2, [r3]
   1569c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156a4:	add	r3, r2, r3
   156a8:	movw	r2, #4280	; 0x10b8
   156ac:	movt	r2, #3
   156b0:	lsl	r3, r3, #2
   156b4:	add	r3, r2, r3
   156b8:	ldr	r3, [r3, #4]
   156bc:	cmn	r3, #1
   156c0:	bne	156e8 <print_all_distinct_dims@@Base+0xa6c>
   156c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156cc:	add	r3, r2, r3
   156d0:	movw	r2, #4280	; 0x10b8
   156d4:	movt	r2, #3
   156d8:	lsl	r3, r3, #2
   156dc:	add	r3, r2, r3
   156e0:	mov	r2, #0
   156e4:	str	r2, [r3, #4]
   156e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156f0:	add	r3, r2, r3
   156f4:	movw	r2, #4280	; 0x10b8
   156f8:	movt	r2, #3
   156fc:	add	r3, r3, #8
   15700:	lsl	r3, r3, #2
   15704:	add	r3, r2, r3
   15708:	mov	r2, #0
   1570c:	str	r2, [r3, #4]
   15710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15714:	add	r3, r3, #1
   15718:	str	r3, [fp, #-24]	; 0xffffffe8
   1571c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15720:	ldr	r3, [r3, #4]
   15724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15728:	cmp	r2, r3
   1572c:	blt	15648 <print_all_distinct_dims@@Base+0x9cc>
   15730:	b	15978 <print_all_distinct_dims@@Base+0xcfc>
   15734:	movw	r3, #496	; 0x1f0
   15738:	movt	r3, #3
   1573c:	ldr	r3, [r3, #3360]	; 0xd20
   15740:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15744:	cmp	r2, r3
   15748:	beq	1576c <print_all_distinct_dims@@Base+0xaf0>
   1574c:	movw	r3, #55956	; 0xda94
   15750:	movt	r3, #1
   15754:	mov	r2, #252	; 0xfc
   15758:	movw	r1, #55524	; 0xd8e4
   1575c:	movt	r1, #1
   15760:	movw	r0, #55756	; 0xd9cc
   15764:	movt	r0, #1
   15768:	bl	12634 <__assert_fail@plt>
   1576c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15770:	cmp	r3, #4
   15774:	bne	157ac <print_all_distinct_dims@@Base+0xb30>
   15778:	sub	r3, fp, #72	; 0x48
   1577c:	mov	r1, r3
   15780:	ldr	r0, [pc, #516]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   15784:	bl	12400 <coda_cursor_get_string_length@plt>
   15788:	mov	r3, r0
   1578c:	cmp	r3, #0
   15790:	beq	15798 <print_all_distinct_dims@@Base+0xb1c>
   15794:	bl	1aeb8 <handle_coda_error@@Base>
   15798:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1579c:	mov	r2, r3
   157a0:	asr	r3, r2, #31
   157a4:	strd	r2, [fp, #-68]	; 0xffffffbc
   157a8:	b	157cc <print_all_distinct_dims@@Base+0xb50>
   157ac:	sub	r3, fp, #68	; 0x44
   157b0:	mov	r1, r3
   157b4:	ldr	r0, [pc, #464]	; 1598c <print_all_distinct_dims@@Base+0xd10>
   157b8:	bl	1219c <coda_cursor_get_byte_size@plt>
   157bc:	mov	r3, r0
   157c0:	cmp	r3, #0
   157c4:	beq	157cc <print_all_distinct_dims@@Base+0xb50>
   157c8:	bl	1aeb8 <handle_coda_error@@Base>
   157cc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   157d0:	mov	r3, r2
   157d4:	lsl	r3, r3, #2
   157d8:	add	r3, r3, r2
   157dc:	lsl	r3, r3, #4
   157e0:	add	r2, r3, #800	; 0x320
   157e4:	movw	r3, #496	; 0x1f0
   157e8:	movt	r3, #3
   157ec:	add	r3, r2, r3
   157f0:	str	r3, [fp, #-44]	; 0xffffffd4
   157f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   157f8:	ldr	r3, [r3]
   157fc:	str	r3, [fp, #-48]	; 0xffffffd0
   15800:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   15804:	movw	r2, #4280	; 0x10b8
   15808:	movt	r2, #3
   1580c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15810:	add	r3, r3, #26
   15814:	lsl	r3, r3, #2
   15818:	add	r3, r2, r3
   1581c:	ldr	r2, [r3, #4]
   15820:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15824:	ldr	r3, [r3, #44]	; 0x2c
   15828:	lsl	r3, r3, #2
   1582c:	add	r3, r2, r3
   15830:	mov	r2, r0
   15834:	str	r2, [r3]
   15838:	movw	r2, #4280	; 0x10b8
   1583c:	movt	r2, #3
   15840:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15844:	lsl	r3, r3, #2
   15848:	add	r3, r2, r3
   1584c:	ldr	r3, [r3, #4]
   15850:	cmn	r3, #1
   15854:	bne	158a0 <print_all_distinct_dims@@Base+0xc24>
   15858:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1585c:	mov	r1, r2
   15860:	movw	r2, #4280	; 0x10b8
   15864:	movt	r2, #3
   15868:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1586c:	lsl	r3, r3, #2
   15870:	add	r3, r2, r3
   15874:	str	r1, [r3, #4]
   15878:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1587c:	mov	r1, r2
   15880:	movw	r2, #4280	; 0x10b8
   15884:	movt	r2, #3
   15888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1588c:	add	r3, r3, #8
   15890:	lsl	r3, r3, #2
   15894:	add	r3, r2, r3
   15898:	str	r1, [r3, #4]
   1589c:	b	15974 <print_all_distinct_dims@@Base+0xcf8>
   158a0:	movw	r2, #4280	; 0x10b8
   158a4:	movt	r2, #3
   158a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   158ac:	lsl	r3, r3, #2
   158b0:	add	r3, r2, r3
   158b4:	ldr	r3, [r3, #4]
   158b8:	mov	r0, r3
   158bc:	asr	r1, r0, #31
   158c0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   158c4:	cmp	r0, r2
   158c8:	sbcs	r3, r1, r3
   158cc:	bge	158f0 <print_all_distinct_dims@@Base+0xc74>
   158d0:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   158d4:	mov	r1, r2
   158d8:	movw	r2, #4280	; 0x10b8
   158dc:	movt	r2, #3
   158e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   158e4:	lsl	r3, r3, #2
   158e8:	add	r3, r2, r3
   158ec:	str	r1, [r3, #4]
   158f0:	movw	r2, #4280	; 0x10b8
   158f4:	movt	r2, #3
   158f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   158fc:	add	r3, r3, #8
   15900:	lsl	r3, r3, #2
   15904:	add	r3, r2, r3
   15908:	ldr	r3, [r3, #4]
   1590c:	mov	r2, r3
   15910:	asr	r3, r2, #31
   15914:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   15918:	cmp	r0, r2
   1591c:	sbcs	r3, r1, r3
   15920:	bge	15974 <print_all_distinct_dims@@Base+0xcf8>
   15924:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   15928:	mov	r1, r2
   1592c:	movw	r2, #4280	; 0x10b8
   15930:	movt	r2, #3
   15934:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15938:	add	r3, r3, #8
   1593c:	lsl	r3, r3, #2
   15940:	add	r3, r2, r3
   15944:	str	r1, [r3, #4]
   15948:	b	15974 <print_all_distinct_dims@@Base+0xcf8>
   1594c:	movw	r3, #55956	; 0xda94
   15950:	movt	r3, #1
   15954:	movw	r2, #294	; 0x126
   15958:	movw	r1, #55524	; 0xd8e4
   1595c:	movt	r1, #1
   15960:	movw	r0, #55796	; 0xd9f4
   15964:	movt	r0, #1
   15968:	bl	12634 <__assert_fail@plt>
   1596c:	nop	{0}
   15970:	b	15978 <print_all_distinct_dims@@Base+0xcfc>
   15974:	nop	{0}
   15978:	nop	{0}
   1597c:	sub	sp, fp, #4
   15980:	ldr	fp, [sp]
   15984:	add	sp, sp, #4
   15988:	pop	{pc}		; (ldr pc, [sp], #4)
   1598c:	andeq	r0, r3, r0, lsl #5

00015990 <dim_enter_array@@Base>:
   15990:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15994:	strd	r6, [sp, #8]
   15998:	str	fp, [sp, #16]
   1599c:	str	lr, [sp, #20]
   159a0:	add	fp, sp, #20
   159a4:	sub	sp, sp, #112	; 0x70
   159a8:	movw	r3, #496	; 0x1f0
   159ac:	movt	r3, #3
   159b0:	ldr	r2, [r3, #3360]	; 0xd20
   159b4:	mov	r3, r2
   159b8:	lsl	r3, r3, #2
   159bc:	add	r3, r3, r2
   159c0:	lsl	r3, r3, #4
   159c4:	add	r2, r3, #800	; 0x320
   159c8:	movw	r3, #496	; 0x1f0
   159cc:	movt	r3, #3
   159d0:	add	r3, r2, r3
   159d4:	str	r3, [fp, #-64]	; 0xffffffc0
   159d8:	movw	r3, #496	; 0x1f0
   159dc:	movt	r3, #3
   159e0:	ldr	r2, [r3, #136]	; 0x88
   159e4:	movw	r3, #496	; 0x1f0
   159e8:	movt	r3, #3
   159ec:	add	r2, r2, #2
   159f0:	ldr	r3, [r3, r2, lsl #2]
   159f4:	sub	r2, fp, #72	; 0x48
   159f8:	mov	r1, r2
   159fc:	mov	r0, r3
   15a00:	bl	12640 <coda_type_get_class@plt>
   15a04:	mov	r3, r0
   15a08:	cmp	r3, #0
   15a0c:	beq	15a14 <dim_enter_array@@Base+0x84>
   15a10:	bl	1aeb8 <handle_coda_error@@Base>
   15a14:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15a18:	sub	r3, r3, #1
   15a1c:	cmp	r3, #5
   15a20:	ldrls	pc, [pc, r3, lsl #2]
   15a24:	b	15c78 <dim_enter_array@@Base+0x2e8>
   15a28:	andeq	r5, r1, r0, asr #20
   15a2c:	andeq	r5, r1, r8, ror ip
   15a30:	andeq	r5, r1, r8, ror ip
   15a34:	andeq	r5, r1, r0, ror #22
   15a38:			; <UNDEFINED> instruction: 0x00015bb8
   15a3c:	ldrdeq	r5, [r1], -r8
   15a40:	movw	r3, #496	; 0x1f0
   15a44:	movt	r3, #3
   15a48:	ldr	r2, [r3, #136]	; 0x88
   15a4c:	movw	r3, #496	; 0x1f0
   15a50:	movt	r3, #3
   15a54:	add	r2, r2, #2
   15a58:	ldr	r3, [r3, r2, lsl #2]
   15a5c:	sub	r2, fp, #124	; 0x7c
   15a60:	sub	r1, fp, #76	; 0x4c
   15a64:	mov	r0, r3
   15a68:	bl	12574 <coda_type_get_array_dim@plt>
   15a6c:	mov	r3, r0
   15a70:	cmp	r3, #0
   15a74:	beq	15a7c <dim_enter_array@@Base+0xec>
   15a78:	bl	1aeb8 <handle_coda_error@@Base>
   15a7c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15a80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15a84:	str	r2, [r3, #4]
   15a88:	mov	r3, #0
   15a8c:	str	r3, [fp, #-48]	; 0xffffffd0
   15a90:	b	15ac4 <dim_enter_array@@Base+0x134>
   15a94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15a98:	lsl	r3, r3, #2
   15a9c:	sub	r2, fp, #20
   15aa0:	add	r3, r2, r3
   15aa4:	ldr	r1, [r3, #-104]	; 0xffffff98
   15aa8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15aac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ab0:	add	r2, r2, #2
   15ab4:	str	r1, [r3, r2, lsl #2]
   15ab8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15abc:	add	r3, r3, #1
   15ac0:	str	r3, [fp, #-48]	; 0xffffffd0
   15ac4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15ac8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15acc:	cmp	r2, r3
   15ad0:	blt	15a94 <dim_enter_array@@Base+0x104>
   15ad4:	b	15c98 <dim_enter_array@@Base+0x308>
   15ad8:	movw	r3, #496	; 0x1f0
   15adc:	movt	r3, #3
   15ae0:	ldr	r2, [r3, #136]	; 0x88
   15ae4:	movw	r3, #496	; 0x1f0
   15ae8:	movt	r3, #3
   15aec:	add	r2, r2, #2
   15af0:	ldr	r3, [r3, r2, lsl #2]
   15af4:	sub	r2, fp, #80	; 0x50
   15af8:	mov	r1, r2
   15afc:	mov	r0, r3
   15b00:	bl	124a8 <coda_type_get_special_type@plt>
   15b04:	mov	r3, r0
   15b08:	cmp	r3, #0
   15b0c:	beq	15b14 <dim_enter_array@@Base+0x184>
   15b10:	bl	1aeb8 <handle_coda_error@@Base>
   15b14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15b18:	cmp	r3, #3
   15b1c:	bne	15b40 <dim_enter_array@@Base+0x1b0>
   15b20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15b24:	mov	r2, #1
   15b28:	str	r2, [r3, #4]
   15b2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15b30:	mov	r2, #2
   15b34:	str	r2, [r3, #8]
   15b38:	nop	{0}
   15b3c:	b	15c98 <dim_enter_array@@Base+0x308>
   15b40:	movw	r3, #55980	; 0xdaac
   15b44:	movt	r3, #1
   15b48:	movw	r2, #349	; 0x15d
   15b4c:	movw	r1, #55524	; 0xd8e4
   15b50:	movt	r1, #1
   15b54:	movw	r0, #55796	; 0xd9f4
   15b58:	movt	r0, #1
   15b5c:	bl	12634 <__assert_fail@plt>
   15b60:	movw	r3, #496	; 0x1f0
   15b64:	movt	r3, #3
   15b68:	ldr	r2, [r3, #136]	; 0x88
   15b6c:	movw	r3, #496	; 0x1f0
   15b70:	movt	r3, #3
   15b74:	add	r2, r2, #2
   15b78:	ldr	r3, [r3, r2, lsl #2]
   15b7c:	sub	r2, fp, #84	; 0x54
   15b80:	mov	r1, r2
   15b84:	mov	r0, r3
   15b88:	bl	124e4 <coda_type_get_string_length@plt>
   15b8c:	mov	r3, r0
   15b90:	cmp	r3, #0
   15b94:	beq	15b9c <dim_enter_array@@Base+0x20c>
   15b98:	bl	1aeb8 <handle_coda_error@@Base>
   15b9c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ba0:	mov	r2, #1
   15ba4:	str	r2, [r3, #4]
   15ba8:	ldr	r2, [fp, #-84]	; 0xffffffac
   15bac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15bb0:	str	r2, [r3, #8]
   15bb4:	b	15c98 <dim_enter_array@@Base+0x308>
   15bb8:	movw	r3, #496	; 0x1f0
   15bbc:	movt	r3, #3
   15bc0:	ldr	r2, [r3, #136]	; 0x88
   15bc4:	movw	r3, #496	; 0x1f0
   15bc8:	movt	r3, #3
   15bcc:	add	r2, r2, #2
   15bd0:	ldr	r3, [r3, r2, lsl #2]
   15bd4:	sub	r2, fp, #92	; 0x5c
   15bd8:	mov	r1, r2
   15bdc:	mov	r0, r3
   15be0:	bl	122d4 <coda_type_get_bit_size@plt>
   15be4:	mov	r3, r0
   15be8:	cmp	r3, #0
   15bec:	beq	15bf4 <dim_enter_array@@Base+0x264>
   15bf0:	bl	1aeb8 <handle_coda_error@@Base>
   15bf4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15bf8:	mov	r2, #1
   15bfc:	str	r2, [r3, #4]
   15c00:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   15c04:	cmp	r2, #0
   15c08:	sbcs	r3, r3, #0
   15c0c:	blt	15c68 <dim_enter_array@@Base+0x2d8>
   15c10:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   15c14:	mov	r2, #0
   15c18:	mov	r3, #0
   15c1c:	lsr	r2, r0, #3
   15c20:	orr	r2, r2, r1, lsl #29
   15c24:	asr	r3, r1, #3
   15c28:	mov	ip, r2
   15c2c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   15c30:	mov	r0, #7
   15c34:	mov	r1, #0
   15c38:	and	r6, r2, r0
   15c3c:	and	r7, r3, r1
   15c40:	orrs	r3, r6, r7
   15c44:	beq	15c50 <dim_enter_array@@Base+0x2c0>
   15c48:	mov	r3, #1
   15c4c:	b	15c54 <dim_enter_array@@Base+0x2c4>
   15c50:	mov	r3, #0
   15c54:	add	r3, r3, ip
   15c58:	mov	r2, r3
   15c5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15c60:	str	r2, [r3, #8]
   15c64:	b	15c98 <dim_enter_array@@Base+0x308>
   15c68:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15c6c:	mvn	r2, #0
   15c70:	str	r2, [r3, #8]
   15c74:	b	15c98 <dim_enter_array@@Base+0x308>
   15c78:	movw	r3, #55980	; 0xdaac
   15c7c:	movt	r3, #1
   15c80:	movw	r2, #386	; 0x182
   15c84:	movw	r1, #55524	; 0xd8e4
   15c88:	movt	r1, #1
   15c8c:	movw	r0, #55796	; 0xd9f4
   15c90:	movt	r0, #1
   15c94:	bl	12634 <__assert_fail@plt>
   15c98:	movw	r3, #492	; 0x1ec
   15c9c:	movt	r3, #3
   15ca0:	ldr	r3, [r3]
   15ca4:	cmp	r3, #0
   15ca8:	bne	15cd4 <dim_enter_array@@Base+0x344>
   15cac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15cb0:	mvn	r2, #0
   15cb4:	str	r2, [r3]
   15cb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15cbc:	mov	r2, #0
   15cc0:	str	r2, [r3, #40]	; 0x28
   15cc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15cc8:	mov	r2, #0
   15ccc:	str	r2, [r3, #44]	; 0x2c
   15cd0:	b	168d8 <dim_enter_array@@Base+0xf48>
   15cd4:	movw	r3, #4280	; 0x10b8
   15cd8:	movt	r3, #3
   15cdc:	ldr	r3, [r3]
   15ce0:	str	r3, [fp, #-68]	; 0xffffffbc
   15ce4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ce8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15cec:	str	r2, [r3]
   15cf0:	movw	r3, #4280	; 0x10b8
   15cf4:	movt	r3, #3
   15cf8:	ldr	r2, [r3]
   15cfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15d00:	ldr	r3, [r3, #4]
   15d04:	add	r3, r2, r3
   15d08:	cmp	r3, #8
   15d0c:	ble	15d30 <dim_enter_array@@Base+0x3a0>
   15d10:	movw	r3, #55980	; 0xdaac
   15d14:	movt	r3, #1
   15d18:	movw	r2, #402	; 0x192
   15d1c:	movw	r1, #55524	; 0xd8e4
   15d20:	movt	r1, #1
   15d24:	movw	r0, #55800	; 0xd9f8
   15d28:	movt	r0, #1
   15d2c:	bl	12634 <__assert_fail@plt>
   15d30:	movw	r3, #4280	; 0x10b8
   15d34:	movt	r3, #3
   15d38:	ldr	r2, [r3]
   15d3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15d40:	ldr	r3, [r3, #4]
   15d44:	add	r2, r2, r3
   15d48:	movw	r3, #4280	; 0x10b8
   15d4c:	movt	r3, #3
   15d50:	str	r2, [r3]
   15d54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15d58:	cmp	r3, #0
   15d5c:	ble	15dac <dim_enter_array@@Base+0x41c>
   15d60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15d64:	sub	r2, r3, #1
   15d68:	movw	r3, #4280	; 0x10b8
   15d6c:	movt	r3, #3
   15d70:	add	r2, r2, #30
   15d74:	lsl	r2, r2, #3
   15d78:	add	r3, r3, r2
   15d7c:	ldrd	r2, [r3]
   15d80:	strd	r2, [fp, #-28]	; 0xffffffe4
   15d84:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15d88:	sub	r2, r3, #1
   15d8c:	movw	r3, #4280	; 0x10b8
   15d90:	movt	r3, #3
   15d94:	add	r2, r2, #38	; 0x26
   15d98:	lsl	r2, r2, #3
   15d9c:	add	r3, r3, r2
   15da0:	ldrd	r2, [r3]
   15da4:	strd	r2, [fp, #-36]	; 0xffffffdc
   15da8:	b	15dc4 <dim_enter_array@@Base+0x434>
   15dac:	mov	r2, #1
   15db0:	mov	r3, #0
   15db4:	strd	r2, [fp, #-28]	; 0xffffffe4
   15db8:	mov	r2, #1
   15dbc:	mov	r3, #0
   15dc0:	strd	r2, [fp, #-36]	; 0xffffffdc
   15dc4:	mov	r3, #0
   15dc8:	str	r3, [fp, #-40]	; 0xffffffd8
   15dcc:	mov	r3, #0
   15dd0:	str	r3, [fp, #-44]	; 0xffffffd4
   15dd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   15dd8:	cmp	r2, #1
   15ddc:	sbcs	r3, r3, #0
   15de0:	blt	15e84 <dim_enter_array@@Base+0x4f4>
   15de4:	mov	r3, #0
   15de8:	str	r3, [fp, #-48]	; 0xffffffd0
   15dec:	b	15e6c <dim_enter_array@@Base+0x4dc>
   15df0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15df4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15df8:	add	r3, r2, r3
   15dfc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15e00:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e04:	add	r1, r1, #2
   15e08:	ldr	r1, [r2, r1, lsl #2]
   15e0c:	movw	r2, #4280	; 0x10b8
   15e10:	movt	r2, #3
   15e14:	lsl	r3, r3, #2
   15e18:	add	r3, r2, r3
   15e1c:	str	r1, [r3, #4]
   15e20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15e24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e28:	add	r2, r2, r3
   15e2c:	movw	r3, #4280	; 0x10b8
   15e30:	movt	r3, #3
   15e34:	add	r2, r2, #18
   15e38:	mov	r1, #0
   15e3c:	str	r1, [r3, r2, lsl #2]
   15e40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e44:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e48:	add	r2, r2, #2
   15e4c:	ldr	r3, [r3, r2, lsl #2]
   15e50:	cmn	r3, #1
   15e54:	bne	15e60 <dim_enter_array@@Base+0x4d0>
   15e58:	mov	r3, #1
   15e5c:	str	r3, [fp, #-40]	; 0xffffffd8
   15e60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e64:	add	r3, r3, #1
   15e68:	str	r3, [fp, #-48]	; 0xffffffd0
   15e6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e70:	ldr	r3, [r3, #4]
   15e74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e78:	cmp	r2, r3
   15e7c:	blt	15df0 <dim_enter_array@@Base+0x460>
   15e80:	b	15ef4 <dim_enter_array@@Base+0x564>
   15e84:	mov	r3, #0
   15e88:	str	r3, [fp, #-48]	; 0xffffffd0
   15e8c:	b	15ee0 <dim_enter_array@@Base+0x550>
   15e90:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15e94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15e98:	add	r3, r2, r3
   15e9c:	movw	r2, #4280	; 0x10b8
   15ea0:	movt	r2, #3
   15ea4:	lsl	r3, r3, #2
   15ea8:	add	r3, r2, r3
   15eac:	mov	r2, #0
   15eb0:	str	r2, [r3, #4]
   15eb4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15eb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ebc:	add	r2, r2, r3
   15ec0:	movw	r3, #4280	; 0x10b8
   15ec4:	movt	r3, #3
   15ec8:	add	r2, r2, #18
   15ecc:	mov	r1, #0
   15ed0:	str	r1, [r3, r2, lsl #2]
   15ed4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ed8:	add	r3, r3, #1
   15edc:	str	r3, [fp, #-48]	; 0xffffffd0
   15ee0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ee4:	ldr	r3, [r3, #4]
   15ee8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15eec:	cmp	r2, r3
   15ef0:	blt	15e90 <dim_enter_array@@Base+0x500>
   15ef4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ef8:	cmp	r3, #0
   15efc:	beq	16234 <dim_enter_array@@Base+0x8a4>
   15f00:	mov	r3, #0
   15f04:	str	r3, [fp, #-48]	; 0xffffffd0
   15f08:	b	160ac <dim_enter_array@@Base+0x71c>
   15f0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15f10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f14:	add	r2, r2, #2
   15f18:	ldr	r3, [r3, r2, lsl #2]
   15f1c:	cmn	r3, #1
   15f20:	bne	16050 <dim_enter_array@@Base+0x6c0>
   15f24:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15f28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f2c:	add	r3, r2, r3
   15f30:	movw	r2, #4280	; 0x10b8
   15f34:	movt	r2, #3
   15f38:	add	r3, r3, #34	; 0x22
   15f3c:	lsl	r3, r3, #2
   15f40:	add	r3, r2, r3
   15f44:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15f48:	str	r2, [r3, #4]
   15f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f50:	lsl	r1, r3, #2
   15f54:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15f58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f5c:	add	r6, r2, r3
   15f60:	mov	r0, r1
   15f64:	bl	123a0 <malloc@plt>
   15f68:	mov	r3, r0
   15f6c:	mov	r1, r3
   15f70:	movw	r2, #4280	; 0x10b8
   15f74:	movt	r2, #3
   15f78:	add	r3, r6, #26
   15f7c:	lsl	r3, r3, #2
   15f80:	add	r3, r2, r3
   15f84:	str	r1, [r3, #4]
   15f88:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15f8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f90:	add	r3, r2, r3
   15f94:	movw	r2, #4280	; 0x10b8
   15f98:	movt	r2, #3
   15f9c:	add	r3, r3, #26
   15fa0:	lsl	r3, r3, #2
   15fa4:	add	r3, r2, r3
   15fa8:	ldr	r3, [r3, #4]
   15fac:	cmp	r3, #0
   15fb0:	bne	15fe0 <dim_enter_array@@Base+0x650>
   15fb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15fb8:	lsl	r2, r3, #2
   15fbc:	mov	r3, #456	; 0x1c8
   15fc0:	str	r3, [sp]
   15fc4:	movw	r3, #55524	; 0xd8e4
   15fc8:	movt	r3, #1
   15fcc:	movw	r1, #55636	; 0xd954
   15fd0:	movt	r1, #1
   15fd4:	mvn	r0, #0
   15fd8:	bl	12220 <coda_set_error@plt>
   15fdc:	bl	1aeb8 <handle_coda_error@@Base>
   15fe0:	mov	r3, #0
   15fe4:	str	r3, [fp, #-52]	; 0xffffffcc
   15fe8:	b	16030 <dim_enter_array@@Base+0x6a0>
   15fec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15ff0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ff4:	add	r3, r2, r3
   15ff8:	movw	r2, #4280	; 0x10b8
   15ffc:	movt	r2, #3
   16000:	add	r3, r3, #26
   16004:	lsl	r3, r3, #2
   16008:	add	r3, r2, r3
   1600c:	ldr	r2, [r3, #4]
   16010:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16014:	lsl	r3, r3, #2
   16018:	add	r3, r2, r3
   1601c:	mvn	r2, #0
   16020:	str	r2, [r3]
   16024:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16028:	add	r3, r3, #1
   1602c:	str	r3, [fp, #-52]	; 0xffffffcc
   16030:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16034:	mov	r0, r3
   16038:	asr	r1, r0, #31
   1603c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16040:	cmp	r0, r2
   16044:	sbcs	r3, r1, r3
   16048:	blt	15fec <dim_enter_array@@Base+0x65c>
   1604c:	b	160a0 <dim_enter_array@@Base+0x710>
   16050:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16054:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16058:	add	r3, r2, r3
   1605c:	movw	r2, #4280	; 0x10b8
   16060:	movt	r2, #3
   16064:	add	r3, r3, #34	; 0x22
   16068:	lsl	r3, r3, #2
   1606c:	add	r3, r2, r3
   16070:	mov	r2, #0
   16074:	str	r2, [r3, #4]
   16078:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1607c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16080:	add	r3, r2, r3
   16084:	movw	r2, #4280	; 0x10b8
   16088:	movt	r2, #3
   1608c:	add	r3, r3, #26
   16090:	lsl	r3, r3, #2
   16094:	add	r3, r2, r3
   16098:	mov	r2, #0
   1609c:	str	r2, [r3, #4]
   160a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   160a4:	add	r3, r3, #1
   160a8:	str	r3, [fp, #-48]	; 0xffffffd0
   160ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160b0:	ldr	r3, [r3, #4]
   160b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   160b8:	cmp	r2, r3
   160bc:	blt	15f0c <dim_enter_array@@Base+0x57c>
   160c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160c4:	mov	r2, #0
   160c8:	str	r2, [r3, #44]	; 0x2c
   160cc:	mov	r2, #0
   160d0:	mov	r1, #0
   160d4:	mov	r0, #0
   160d8:	bl	15034 <print_all_distinct_dims@@Base+0x3b8>
   160dc:	mov	r3, #0
   160e0:	str	r3, [fp, #-48]	; 0xffffffd0
   160e4:	b	16220 <dim_enter_array@@Base+0x890>
   160e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   160f0:	add	r2, r2, #2
   160f4:	ldr	r3, [r3, r2, lsl #2]
   160f8:	cmn	r3, #1
   160fc:	bne	16214 <dim_enter_array@@Base+0x884>
   16100:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16104:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16108:	add	r3, r2, r3
   1610c:	movw	r2, #4280	; 0x10b8
   16110:	movt	r2, #3
   16114:	lsl	r3, r3, #2
   16118:	add	r3, r2, r3
   1611c:	ldr	r1, [r3, #4]
   16120:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16124:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16128:	add	r3, r2, r3
   1612c:	movw	r2, #4280	; 0x10b8
   16130:	movt	r2, #3
   16134:	add	r3, r3, #8
   16138:	lsl	r3, r3, #2
   1613c:	add	r3, r2, r3
   16140:	ldr	r3, [r3, #4]
   16144:	cmp	r1, r3
   16148:	beq	16178 <dim_enter_array@@Base+0x7e8>
   1614c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16150:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16154:	add	r2, r2, r3
   16158:	movw	r3, #4280	; 0x10b8
   1615c:	movt	r3, #3
   16160:	add	r2, r2, #18
   16164:	mov	r1, #1
   16168:	str	r1, [r3, r2, lsl #2]
   1616c:	mov	r3, #1
   16170:	str	r3, [fp, #-44]	; 0xffffffd4
   16174:	b	16214 <dim_enter_array@@Base+0x884>
   16178:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1617c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16180:	add	r2, r2, r3
   16184:	movw	r3, #4280	; 0x10b8
   16188:	movt	r3, #3
   1618c:	add	r2, r2, #18
   16190:	mov	r1, #0
   16194:	str	r1, [r3, r2, lsl #2]
   16198:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1619c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161a0:	add	r3, r2, r3
   161a4:	movw	r2, #4280	; 0x10b8
   161a8:	movt	r2, #3
   161ac:	add	r3, r3, #26
   161b0:	lsl	r3, r3, #2
   161b4:	add	r3, r2, r3
   161b8:	ldr	r3, [r3, #4]
   161bc:	mov	r0, r3
   161c0:	bl	12268 <free@plt>
   161c4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   161c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161cc:	add	r3, r2, r3
   161d0:	movw	r2, #4280	; 0x10b8
   161d4:	movt	r2, #3
   161d8:	add	r3, r3, #26
   161dc:	lsl	r3, r3, #2
   161e0:	add	r3, r2, r3
   161e4:	mov	r2, #0
   161e8:	str	r2, [r3, #4]
   161ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   161f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   161f4:	add	r3, r2, r3
   161f8:	movw	r2, #4280	; 0x10b8
   161fc:	movt	r2, #3
   16200:	add	r3, r3, #34	; 0x22
   16204:	lsl	r3, r3, #2
   16208:	add	r3, r2, r3
   1620c:	mov	r2, #0
   16210:	str	r2, [r3, #4]
   16214:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16218:	add	r3, r3, #1
   1621c:	str	r3, [fp, #-48]	; 0xffffffd0
   16220:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16224:	ldr	r3, [r3, #4]
   16228:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1622c:	cmp	r2, r3
   16230:	blt	160e8 <dim_enter_array@@Base+0x758>
   16234:	movw	r3, #4280	; 0x10b8
   16238:	movt	r3, #3
   1623c:	mov	r2, #0
   16240:	str	r2, [r3, #68]	; 0x44
   16244:	movw	r3, #4280	; 0x10b8
   16248:	movt	r3, #3
   1624c:	mvn	r2, #0
   16250:	str	r2, [r3, #104]	; 0x68
   16254:	mov	r3, #0
   16258:	str	r3, [fp, #-48]	; 0xffffffd0
   1625c:	b	162a8 <dim_enter_array@@Base+0x918>
   16260:	movw	r3, #4280	; 0x10b8
   16264:	movt	r3, #3
   16268:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1626c:	add	r2, r2, #18
   16270:	ldr	r3, [r3, r2, lsl #2]
   16274:	cmp	r3, #0
   16278:	beq	1629c <dim_enter_array@@Base+0x90c>
   1627c:	movw	r3, #4280	; 0x10b8
   16280:	movt	r3, #3
   16284:	mov	r2, #1
   16288:	str	r2, [r3, #68]	; 0x44
   1628c:	movw	r3, #4280	; 0x10b8
   16290:	movt	r3, #3
   16294:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16298:	str	r2, [r3, #104]	; 0x68
   1629c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162a0:	add	r3, r3, #1
   162a4:	str	r3, [fp, #-48]	; 0xffffffd0
   162a8:	movw	r3, #4280	; 0x10b8
   162ac:	movt	r3, #3
   162b0:	ldr	r3, [r3]
   162b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   162b8:	cmp	r2, r3
   162bc:	blt	16260 <dim_enter_array@@Base+0x8d0>
   162c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   162c4:	mov	r2, #1
   162c8:	str	r2, [r3, #40]	; 0x28
   162cc:	mov	r3, #0
   162d0:	str	r3, [fp, #-48]	; 0xffffffd0
   162d4:	b	16414 <dim_enter_array@@Base+0xa84>
   162d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   162dc:	ldr	r1, [r3, #40]	; 0x28
   162e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   162e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162e8:	add	r3, r2, r3
   162ec:	movw	r2, #4280	; 0x10b8
   162f0:	movt	r2, #3
   162f4:	lsl	r3, r3, #2
   162f8:	add	r3, r2, r3
   162fc:	ldr	r3, [r3, #4]
   16300:	mul	r2, r3, r1
   16304:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16308:	str	r2, [r3, #40]	; 0x28
   1630c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16310:	cmp	r3, #0
   16314:	bne	1637c <dim_enter_array@@Base+0x9ec>
   16318:	movw	r2, #4280	; 0x10b8
   1631c:	movt	r2, #3
   16320:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16324:	lsl	r3, r3, #2
   16328:	add	r3, r2, r3
   1632c:	ldr	r3, [r3, #4]
   16330:	mov	r2, r3
   16334:	asr	r3, r2, #31
   16338:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1633c:	mul	r0, r3, r1
   16340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16344:	mul	r1, r2, r1
   16348:	add	r1, r0, r1
   1634c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16350:	umull	r2, r3, r0, r2
   16354:	add	r1, r1, r3
   16358:	mov	r3, r1
   1635c:	movw	r1, #4280	; 0x10b8
   16360:	movt	r1, #3
   16364:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16368:	add	r0, r0, #30
   1636c:	lsl	r0, r0, #3
   16370:	add	r1, r1, r0
   16374:	strd	r2, [r1]
   16378:	b	16408 <dim_enter_array@@Base+0xa78>
   1637c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16380:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16384:	add	r3, r2, r3
   16388:	sub	r2, r3, #1
   1638c:	movw	r3, #4280	; 0x10b8
   16390:	movt	r3, #3
   16394:	add	r2, r2, #30
   16398:	lsl	r2, r2, #3
   1639c:	add	r3, r3, r2
   163a0:	ldrd	r0, [r3]
   163a4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   163a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   163ac:	add	r3, r2, r3
   163b0:	movw	r2, #4280	; 0x10b8
   163b4:	movt	r2, #3
   163b8:	lsl	r3, r3, #2
   163bc:	add	r3, r2, r3
   163c0:	ldr	r3, [r3, #4]
   163c4:	mov	r2, r3
   163c8:	asr	r3, r2, #31
   163cc:	ldr	lr, [fp, #-68]	; 0xffffffbc
   163d0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   163d4:	add	ip, lr, ip
   163d8:	mul	r6, r2, r1
   163dc:	mul	lr, r0, r3
   163e0:	add	lr, r6, lr
   163e4:	umull	r2, r3, r0, r2
   163e8:	add	r1, lr, r3
   163ec:	mov	r3, r1
   163f0:	movw	r1, #4280	; 0x10b8
   163f4:	movt	r1, #3
   163f8:	add	r0, ip, #30
   163fc:	lsl	r0, r0, #3
   16400:	add	r1, r1, r0
   16404:	strd	r2, [r1]
   16408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1640c:	add	r3, r3, #1
   16410:	str	r3, [fp, #-48]	; 0xffffffd0
   16414:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16418:	ldr	r3, [r3, #4]
   1641c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16420:	cmp	r2, r3
   16424:	blt	162d8 <dim_enter_array@@Base+0x948>
   16428:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1642c:	cmp	r3, #0
   16430:	beq	165e8 <dim_enter_array@@Base+0xc58>
   16434:	mov	r3, #0
   16438:	str	r3, [fp, #-48]	; 0xffffffd0
   1643c:	b	16478 <dim_enter_array@@Base+0xae8>
   16440:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16444:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16448:	add	r2, r2, r3
   1644c:	movw	r3, #4280	; 0x10b8
   16450:	movt	r3, #3
   16454:	add	r2, r2, #38	; 0x26
   16458:	lsl	r2, r2, #3
   1645c:	add	r1, r3, r2
   16460:	mov	r2, #0
   16464:	mov	r3, #0
   16468:	strd	r2, [r1]
   1646c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16470:	add	r3, r3, #1
   16474:	str	r3, [fp, #-48]	; 0xffffffd0
   16478:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1647c:	ldr	r3, [r3, #4]
   16480:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16484:	cmp	r2, r3
   16488:	blt	16440 <dim_enter_array@@Base+0xab0>
   1648c:	mov	r3, #0
   16490:	str	r3, [fp, #-56]	; 0xffffffc8
   16494:	b	165c8 <dim_enter_array@@Base+0xc38>
   16498:	mov	r3, #1
   1649c:	str	r3, [fp, #-60]	; 0xffffffc4
   164a0:	mov	r3, #0
   164a4:	str	r3, [fp, #-48]	; 0xffffffd0
   164a8:	b	165a8 <dim_enter_array@@Base+0xc18>
   164ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   164b4:	add	r2, r2, r3
   164b8:	movw	r3, #4280	; 0x10b8
   164bc:	movt	r3, #3
   164c0:	add	r2, r2, #18
   164c4:	ldr	r3, [r3, r2, lsl #2]
   164c8:	cmp	r3, #0
   164cc:	beq	16514 <dim_enter_array@@Base+0xb84>
   164d0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   164d8:	add	r3, r2, r3
   164dc:	movw	r2, #4280	; 0x10b8
   164e0:	movt	r2, #3
   164e4:	add	r3, r3, #26
   164e8:	lsl	r3, r3, #2
   164ec:	add	r3, r2, r3
   164f0:	ldr	r2, [r3, #4]
   164f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   164f8:	lsl	r3, r3, #2
   164fc:	add	r3, r2, r3
   16500:	ldr	r2, [r3]
   16504:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16508:	mul	r3, r2, r3
   1650c:	str	r3, [fp, #-60]	; 0xffffffc4
   16510:	b	16540 <dim_enter_array@@Base+0xbb0>
   16514:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16518:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1651c:	add	r3, r2, r3
   16520:	movw	r2, #4280	; 0x10b8
   16524:	movt	r2, #3
   16528:	lsl	r3, r3, #2
   1652c:	add	r3, r2, r3
   16530:	ldr	r2, [r3, #4]
   16534:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16538:	mul	r3, r2, r3
   1653c:	str	r3, [fp, #-60]	; 0xffffffc4
   16540:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16544:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16548:	add	r2, r2, r3
   1654c:	movw	r3, #4280	; 0x10b8
   16550:	movt	r3, #3
   16554:	add	r2, r2, #38	; 0x26
   16558:	lsl	r2, r2, #3
   1655c:	add	r3, r3, r2
   16560:	ldrd	r0, [r3]
   16564:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16568:	mov	r2, r3
   1656c:	asr	r3, r2, #31
   16570:	ldr	lr, [fp, #-68]	; 0xffffffbc
   16574:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16578:	add	ip, lr, ip
   1657c:	adds	r4, r0, r2
   16580:	adc	r5, r1, r3
   16584:	movw	r3, #4280	; 0x10b8
   16588:	movt	r3, #3
   1658c:	add	r2, ip, #38	; 0x26
   16590:	lsl	r2, r2, #3
   16594:	add	r3, r3, r2
   16598:	strd	r4, [r3]
   1659c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   165a0:	add	r3, r3, #1
   165a4:	str	r3, [fp, #-48]	; 0xffffffd0
   165a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   165ac:	ldr	r3, [r3, #4]
   165b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   165b4:	cmp	r2, r3
   165b8:	blt	164ac <dim_enter_array@@Base+0xb1c>
   165bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165c0:	add	r3, r3, #1
   165c4:	str	r3, [fp, #-56]	; 0xffffffc8
   165c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165cc:	mov	r0, r3
   165d0:	asr	r1, r0, #31
   165d4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   165d8:	cmp	r0, r2
   165dc:	sbcs	r3, r1, r3
   165e0:	blt	16498 <dim_enter_array@@Base+0xb08>
   165e4:	b	16700 <dim_enter_array@@Base+0xd70>
   165e8:	movw	r2, #4280	; 0x10b8
   165ec:	movt	r2, #3
   165f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   165f4:	lsl	r3, r3, #2
   165f8:	add	r3, r2, r3
   165fc:	ldr	r3, [r3, #4]
   16600:	mov	r2, r3
   16604:	asr	r3, r2, #31
   16608:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1660c:	mul	r0, r3, r1
   16610:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16614:	mul	r1, r2, r1
   16618:	add	r1, r0, r1
   1661c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16620:	umull	r2, r3, r0, r2
   16624:	add	r1, r1, r3
   16628:	mov	r3, r1
   1662c:	movw	r1, #4280	; 0x10b8
   16630:	movt	r1, #3
   16634:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16638:	add	r0, r0, #38	; 0x26
   1663c:	lsl	r0, r0, #3
   16640:	add	r1, r1, r0
   16644:	strd	r2, [r1]
   16648:	mov	r3, #1
   1664c:	str	r3, [fp, #-48]	; 0xffffffd0
   16650:	b	166ec <dim_enter_array@@Base+0xd5c>
   16654:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16658:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1665c:	add	r3, r2, r3
   16660:	sub	r2, r3, #1
   16664:	movw	r3, #4280	; 0x10b8
   16668:	movt	r3, #3
   1666c:	add	r2, r2, #38	; 0x26
   16670:	lsl	r2, r2, #3
   16674:	add	r3, r3, r2
   16678:	ldrd	r0, [r3]
   1667c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16680:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16684:	add	r3, r2, r3
   16688:	movw	r2, #4280	; 0x10b8
   1668c:	movt	r2, #3
   16690:	lsl	r3, r3, #2
   16694:	add	r3, r2, r3
   16698:	ldr	r3, [r3, #4]
   1669c:	mov	r2, r3
   166a0:	asr	r3, r2, #31
   166a4:	ldr	lr, [fp, #-68]	; 0xffffffbc
   166a8:	ldr	ip, [fp, #-48]	; 0xffffffd0
   166ac:	add	ip, lr, ip
   166b0:	mul	r4, r2, r1
   166b4:	mul	lr, r0, r3
   166b8:	add	lr, r4, lr
   166bc:	umull	r2, r3, r0, r2
   166c0:	add	r1, lr, r3
   166c4:	mov	r3, r1
   166c8:	movw	r1, #4280	; 0x10b8
   166cc:	movt	r1, #3
   166d0:	add	r0, ip, #38	; 0x26
   166d4:	lsl	r0, r0, #3
   166d8:	add	r1, r1, r0
   166dc:	strd	r2, [r1]
   166e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   166e4:	add	r3, r3, #1
   166e8:	str	r3, [fp, #-48]	; 0xffffffd0
   166ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   166f0:	ldr	r3, [r3, #4]
   166f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   166f8:	cmp	r2, r3
   166fc:	blt	16654 <dim_enter_array@@Base+0xcc4>
   16700:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16704:	ldr	r2, [r3, #4]
   16708:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1670c:	add	r3, r2, r3
   16710:	sub	r2, r3, #1
   16714:	movw	r3, #4280	; 0x10b8
   16718:	movt	r3, #3
   1671c:	add	r2, r2, #38	; 0x26
   16720:	lsl	r2, r2, #3
   16724:	add	r3, r3, r2
   16728:	ldrd	r2, [r3]
   1672c:	cmp	r2, #1
   16730:	sbcs	r3, r3, #0
   16734:	blt	168d8 <dim_enter_array@@Base+0xf48>
   16738:	movw	r3, #4280	; 0x10b8
   1673c:	movt	r3, #3
   16740:	ldr	r3, [r3]
   16744:	sub	r3, r3, #1
   16748:	movw	r2, #4280	; 0x10b8
   1674c:	movt	r2, #3
   16750:	lsl	r3, r3, #2
   16754:	add	r3, r2, r3
   16758:	ldr	r1, [r3, #4]
   1675c:	movw	r3, #4280	; 0x10b8
   16760:	movt	r3, #3
   16764:	ldr	r3, [r3]
   16768:	sub	r2, r3, #1
   1676c:	mov	r0, r1
   16770:	asr	r1, r0, #31
   16774:	movw	r3, #4280	; 0x10b8
   16778:	movt	r3, #3
   1677c:	add	r2, r2, #22
   16780:	lsl	r2, r2, #3
   16784:	add	r3, r3, r2
   16788:	strd	r0, [r3]
   1678c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16790:	ldr	r3, [r3, #4]
   16794:	sub	r3, r3, #2
   16798:	str	r3, [fp, #-48]	; 0xffffffd0
   1679c:	b	16838 <dim_enter_array@@Base+0xea8>
   167a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   167a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   167a8:	add	r3, r2, r3
   167ac:	movw	r2, #4280	; 0x10b8
   167b0:	movt	r2, #3
   167b4:	lsl	r3, r3, #2
   167b8:	add	r3, r2, r3
   167bc:	ldr	r3, [r3, #4]
   167c0:	mov	r0, r3
   167c4:	asr	r1, r0, #31
   167c8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   167cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   167d0:	add	r3, r2, r3
   167d4:	add	r2, r3, #1
   167d8:	movw	r3, #4280	; 0x10b8
   167dc:	movt	r3, #3
   167e0:	add	r2, r2, #22
   167e4:	lsl	r2, r2, #3
   167e8:	add	r3, r3, r2
   167ec:	ldrd	r2, [r3]
   167f0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   167f4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   167f8:	add	ip, lr, ip
   167fc:	mul	r4, r2, r1
   16800:	mul	lr, r0, r3
   16804:	add	lr, r4, lr
   16808:	umull	r2, r3, r0, r2
   1680c:	add	r1, lr, r3
   16810:	mov	r3, r1
   16814:	movw	r1, #4280	; 0x10b8
   16818:	movt	r1, #3
   1681c:	add	r0, ip, #22
   16820:	lsl	r0, r0, #3
   16824:	add	r1, r1, r0
   16828:	strd	r2, [r1]
   1682c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16830:	sub	r3, r3, #1
   16834:	str	r3, [fp, #-48]	; 0xffffffd0
   16838:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1683c:	cmp	r3, #0
   16840:	bge	167a0 <dim_enter_array@@Base+0xe10>
   16844:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16848:	sub	r3, r3, #1
   1684c:	str	r3, [fp, #-48]	; 0xffffffd0
   16850:	b	168cc <dim_enter_array@@Base+0xf3c>
   16854:	movw	r3, #4280	; 0x10b8
   16858:	movt	r3, #3
   1685c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16860:	add	r2, r2, #22
   16864:	lsl	r2, r2, #3
   16868:	add	r3, r3, r2
   1686c:	ldrd	r0, [r3]
   16870:	movw	r3, #4280	; 0x10b8
   16874:	movt	r3, #3
   16878:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1687c:	add	r2, r2, #22
   16880:	lsl	r2, r2, #3
   16884:	add	r3, r3, r2
   16888:	ldrd	r2, [r3]
   1688c:	mul	lr, r2, r1
   16890:	mul	ip, r0, r3
   16894:	add	ip, lr, ip
   16898:	umull	r2, r3, r0, r2
   1689c:	add	r1, ip, r3
   168a0:	mov	r3, r1
   168a4:	movw	r1, #4280	; 0x10b8
   168a8:	movt	r1, #3
   168ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   168b0:	add	r0, r0, #22
   168b4:	lsl	r0, r0, #3
   168b8:	add	r1, r1, r0
   168bc:	strd	r2, [r1]
   168c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   168c4:	sub	r3, r3, #1
   168c8:	str	r3, [fp, #-48]	; 0xffffffd0
   168cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   168d0:	cmp	r3, #0
   168d4:	bge	16854 <dim_enter_array@@Base+0xec4>
   168d8:	sub	sp, fp, #20
   168dc:	ldrd	r4, [sp]
   168e0:	ldrd	r6, [sp, #8]
   168e4:	ldr	fp, [sp, #16]
   168e8:	add	sp, sp, #20
   168ec:	pop	{pc}		; (ldr pc, [sp], #4)

000168f0 <dim_leave_array@@Base>:
   168f0:	str	fp, [sp, #-8]!
   168f4:	str	lr, [sp, #4]
   168f8:	add	fp, sp, #4
   168fc:	sub	sp, sp, #16
   16900:	movw	r3, #496	; 0x1f0
   16904:	movt	r3, #3
   16908:	ldr	r3, [r3, #3360]	; 0xd20
   1690c:	cmp	r3, #0
   16910:	bge	16934 <dim_leave_array@@Base+0x44>
   16914:	movw	r3, #55996	; 0xdabc
   16918:	movt	r3, #1
   1691c:	movw	r2, #579	; 0x243
   16920:	movw	r1, #55524	; 0xd8e4
   16924:	movt	r1, #1
   16928:	movw	r0, #55860	; 0xda34
   1692c:	movt	r0, #1
   16930:	bl	12634 <__assert_fail@plt>
   16934:	movw	r3, #496	; 0x1f0
   16938:	movt	r3, #3
   1693c:	ldr	r2, [r3, #3360]	; 0xd20
   16940:	mov	r3, r2
   16944:	lsl	r3, r3, #2
   16948:	add	r3, r3, r2
   1694c:	lsl	r3, r3, #4
   16950:	add	r2, r3, #800	; 0x320
   16954:	movw	r3, #496	; 0x1f0
   16958:	movt	r3, #3
   1695c:	add	r3, r2, r3
   16960:	str	r3, [fp, #-12]
   16964:	ldr	r3, [fp, #-12]
   16968:	ldr	r3, [r3]
   1696c:	str	r3, [fp, #-16]
   16970:	movw	r3, #4280	; 0x10b8
   16974:	movt	r3, #3
   16978:	ldr	r2, [r3]
   1697c:	ldr	r3, [fp, #-12]
   16980:	ldr	r3, [r3, #4]
   16984:	sub	r2, r2, r3
   16988:	movw	r3, #4280	; 0x10b8
   1698c:	movt	r3, #3
   16990:	str	r2, [r3]
   16994:	mov	r3, #0
   16998:	str	r3, [fp, #-8]
   1699c:	b	169fc <dim_leave_array@@Base+0x10c>
   169a0:	ldr	r2, [fp, #-16]
   169a4:	ldr	r3, [fp, #-8]
   169a8:	add	r2, r2, r3
   169ac:	movw	r3, #4280	; 0x10b8
   169b0:	movt	r3, #3
   169b4:	add	r2, r2, #18
   169b8:	ldr	r3, [r3, r2, lsl #2]
   169bc:	cmp	r3, #0
   169c0:	beq	169f0 <dim_leave_array@@Base+0x100>
   169c4:	ldr	r2, [fp, #-16]
   169c8:	ldr	r3, [fp, #-8]
   169cc:	add	r3, r2, r3
   169d0:	movw	r2, #4280	; 0x10b8
   169d4:	movt	r2, #3
   169d8:	add	r3, r3, #26
   169dc:	lsl	r3, r3, #2
   169e0:	add	r3, r2, r3
   169e4:	ldr	r3, [r3, #4]
   169e8:	mov	r0, r3
   169ec:	bl	12268 <free@plt>
   169f0:	ldr	r3, [fp, #-8]
   169f4:	add	r3, r3, #1
   169f8:	str	r3, [fp, #-8]
   169fc:	ldr	r3, [fp, #-12]
   16a00:	ldr	r3, [r3, #4]
   16a04:	ldr	r2, [fp, #-8]
   16a08:	cmp	r2, r3
   16a0c:	blt	169a0 <dim_leave_array@@Base+0xb0>
   16a10:	movw	r3, #4280	; 0x10b8
   16a14:	movt	r3, #3
   16a18:	mov	r2, #0
   16a1c:	str	r2, [r3, #68]	; 0x44
   16a20:	movw	r3, #4280	; 0x10b8
   16a24:	movt	r3, #3
   16a28:	mvn	r2, #0
   16a2c:	str	r2, [r3, #104]	; 0x68
   16a30:	mov	r3, #0
   16a34:	str	r3, [fp, #-8]
   16a38:	b	16a84 <dim_leave_array@@Base+0x194>
   16a3c:	movw	r3, #4280	; 0x10b8
   16a40:	movt	r3, #3
   16a44:	ldr	r2, [fp, #-8]
   16a48:	add	r2, r2, #18
   16a4c:	ldr	r3, [r3, r2, lsl #2]
   16a50:	cmp	r3, #0
   16a54:	beq	16a78 <dim_leave_array@@Base+0x188>
   16a58:	movw	r3, #4280	; 0x10b8
   16a5c:	movt	r3, #3
   16a60:	mov	r2, #1
   16a64:	str	r2, [r3, #68]	; 0x44
   16a68:	movw	r3, #4280	; 0x10b8
   16a6c:	movt	r3, #3
   16a70:	ldr	r2, [fp, #-8]
   16a74:	str	r2, [r3, #104]	; 0x68
   16a78:	ldr	r3, [fp, #-8]
   16a7c:	add	r3, r3, #1
   16a80:	str	r3, [fp, #-8]
   16a84:	movw	r3, #4280	; 0x10b8
   16a88:	movt	r3, #3
   16a8c:	ldr	r3, [r3]
   16a90:	ldr	r2, [fp, #-8]
   16a94:	cmp	r2, r3
   16a98:	blt	16a3c <dim_leave_array@@Base+0x14c>
   16a9c:	ldr	r3, [fp, #-12]
   16aa0:	ldr	r2, [r3, #4]
   16aa4:	ldr	r3, [fp, #-16]
   16aa8:	add	r3, r2, r3
   16aac:	sub	r2, r3, #1
   16ab0:	movw	r3, #4280	; 0x10b8
   16ab4:	movt	r3, #3
   16ab8:	add	r2, r2, #38	; 0x26
   16abc:	lsl	r2, r2, #3
   16ac0:	add	r3, r3, r2
   16ac4:	ldrd	r2, [r3]
   16ac8:	cmp	r2, #1
   16acc:	sbcs	r3, r3, #0
   16ad0:	blt	16b64 <dim_leave_array@@Base+0x274>
   16ad4:	ldr	r3, [fp, #-16]
   16ad8:	sub	r3, r3, #1
   16adc:	str	r3, [fp, #-8]
   16ae0:	b	16b58 <dim_leave_array@@Base+0x268>
   16ae4:	movw	r3, #4280	; 0x10b8
   16ae8:	movt	r3, #3
   16aec:	ldr	r2, [fp, #-8]
   16af0:	add	r2, r2, #22
   16af4:	lsl	r2, r2, #3
   16af8:	add	r3, r3, r2
   16afc:	ldrd	r0, [r3]
   16b00:	movw	r3, #4280	; 0x10b8
   16b04:	movt	r3, #3
   16b08:	ldr	r2, [fp, #-16]
   16b0c:	add	r2, r2, #22
   16b10:	lsl	r2, r2, #3
   16b14:	add	r3, r3, r2
   16b18:	ldrd	r2, [r3]
   16b1c:	bl	1d358 <main@@Base+0x458>
   16b20:	mov	r2, r0
   16b24:	mov	r3, r1
   16b28:	mov	r0, r2
   16b2c:	mov	r1, r3
   16b30:	movw	r3, #4280	; 0x10b8
   16b34:	movt	r3, #3
   16b38:	ldr	r2, [fp, #-8]
   16b3c:	add	r2, r2, #22
   16b40:	lsl	r2, r2, #3
   16b44:	add	r3, r3, r2
   16b48:	strd	r0, [r3]
   16b4c:	ldr	r3, [fp, #-8]
   16b50:	sub	r3, r3, #1
   16b54:	str	r3, [fp, #-8]
   16b58:	ldr	r3, [fp, #-8]
   16b5c:	cmp	r3, #0
   16b60:	bge	16ae4 <dim_leave_array@@Base+0x1f4>
   16b64:	nop	{0}
   16b68:	sub	sp, fp, #4
   16b6c:	ldr	fp, [sp]
   16b70:	add	sp, sp, #4
   16b74:	pop	{pc}		; (ldr pc, [sp], #4)
   16b78:	str	fp, [sp, #-8]!
   16b7c:	str	lr, [sp, #4]
   16b80:	add	fp, sp, #4
   16b84:	sub	sp, sp, #48	; 0x30
   16b88:	str	r0, [fp, #-40]	; 0xffffffd8
   16b8c:	str	r1, [fp, #-44]	; 0xffffffd4
   16b90:	str	r2, [fp, #-48]	; 0xffffffd0
   16b94:	sub	r3, fp, #28
   16b98:	mov	r1, r3
   16b9c:	ldr	r0, [pc, #1012]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16ba0:	bl	122f8 <coda_cursor_get_type_class@plt>
   16ba4:	mov	r3, r0
   16ba8:	cmp	r3, #0
   16bac:	beq	16bb4 <dim_leave_array@@Base+0x2c4>
   16bb0:	bl	1aeb8 <handle_coda_error@@Base>
   16bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16bb8:	cmp	r3, #0
   16bbc:	beq	16e78 <dim_leave_array@@Base+0x588>
   16bc0:	cmp	r3, #1
   16bc4:	bne	16f5c <dim_leave_array@@Base+0x66c>
   16bc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16bcc:	mov	r3, r2
   16bd0:	lsl	r3, r3, #2
   16bd4:	add	r3, r3, r2
   16bd8:	lsl	r3, r3, #4
   16bdc:	add	r2, r3, #800	; 0x320
   16be0:	movw	r3, #496	; 0x1f0
   16be4:	movt	r3, #3
   16be8:	add	r3, r2, r3
   16bec:	str	r3, [fp, #-20]	; 0xffffffec
   16bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16bf4:	ldr	r3, [r3]
   16bf8:	str	r3, [fp, #-24]	; 0xffffffe8
   16bfc:	movw	r3, #496	; 0x1f0
   16c00:	movt	r3, #3
   16c04:	ldr	r3, [r3, #3360]	; 0xd20
   16c08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16c0c:	cmp	r2, r3
   16c10:	blt	16c34 <dim_leave_array@@Base+0x344>
   16c14:	movw	r3, #56012	; 0xdacc
   16c18:	movt	r3, #1
   16c1c:	movw	r2, #638	; 0x27e
   16c20:	movw	r1, #55524	; 0xd8e4
   16c24:	movt	r1, #1
   16c28:	movw	r0, #55892	; 0xda54
   16c2c:	movt	r0, #1
   16c30:	bl	12634 <__assert_fail@plt>
   16c34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c38:	cmp	r3, #0
   16c3c:	bne	16c4c <dim_leave_array@@Base+0x35c>
   16c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c44:	mov	r2, #0
   16c48:	str	r2, [r3, #44]	; 0x2c
   16c4c:	movw	r3, #496	; 0x1f0
   16c50:	movt	r3, #3
   16c54:	ldr	r3, [r3, #3360]	; 0xd20
   16c58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16c5c:	cmp	r2, r3
   16c60:	bge	16ca4 <dim_leave_array@@Base+0x3b4>
   16c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c68:	ldr	r3, [r3, #44]	; 0x2c
   16c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16c70:	ldr	r2, [r2, #40]	; 0x28
   16c74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c78:	add	r1, r1, #1
   16c7c:	mul	r0, r2, r3
   16c80:	movw	r2, #496	; 0x1f0
   16c84:	movt	r2, #3
   16c88:	mov	r3, r1
   16c8c:	lsl	r3, r3, #2
   16c90:	add	r3, r3, r1
   16c94:	lsl	r3, r3, #4
   16c98:	add	r3, r2, r3
   16c9c:	add	r3, r3, #844	; 0x34c
   16ca0:	str	r0, [r3]
   16ca4:	mov	r3, #1
   16ca8:	str	r3, [fp, #-8]
   16cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16cb0:	str	r3, [fp, #-12]
   16cb4:	b	16d44 <dim_leave_array@@Base+0x454>
   16cb8:	movw	r3, #4280	; 0x10b8
   16cbc:	movt	r3, #3
   16cc0:	ldr	r2, [fp, #-12]
   16cc4:	add	r2, r2, #18
   16cc8:	ldr	r3, [r3, r2, lsl #2]
   16ccc:	cmp	r3, #0
   16cd0:	beq	16d14 <dim_leave_array@@Base+0x424>
   16cd4:	movw	r2, #4280	; 0x10b8
   16cd8:	movt	r2, #3
   16cdc:	ldr	r3, [fp, #-12]
   16ce0:	add	r3, r3, #26
   16ce4:	lsl	r3, r3, #2
   16ce8:	add	r3, r2, r3
   16cec:	ldr	r2, [r3, #4]
   16cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cf4:	ldr	r3, [r3, #44]	; 0x2c
   16cf8:	lsl	r3, r3, #2
   16cfc:	add	r3, r2, r3
   16d00:	ldr	r2, [r3]
   16d04:	ldr	r3, [fp, #-8]
   16d08:	mul	r3, r2, r3
   16d0c:	str	r3, [fp, #-8]
   16d10:	b	16d38 <dim_leave_array@@Base+0x448>
   16d14:	movw	r2, #4280	; 0x10b8
   16d18:	movt	r2, #3
   16d1c:	ldr	r3, [fp, #-12]
   16d20:	lsl	r3, r3, #2
   16d24:	add	r3, r2, r3
   16d28:	ldr	r2, [r3, #4]
   16d2c:	ldr	r3, [fp, #-8]
   16d30:	mul	r3, r2, r3
   16d34:	str	r3, [fp, #-8]
   16d38:	ldr	r3, [fp, #-12]
   16d3c:	add	r3, r3, #1
   16d40:	str	r3, [fp, #-12]
   16d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d48:	ldr	r2, [r3, #4]
   16d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d50:	add	r3, r2, r3
   16d54:	ldr	r2, [fp, #-12]
   16d58:	cmp	r2, r3
   16d5c:	blt	16cb8 <dim_leave_array@@Base+0x3c8>
   16d60:	ldr	r3, [fp, #-8]
   16d64:	cmp	r3, #0
   16d68:	ble	16e70 <dim_leave_array@@Base+0x580>
   16d6c:	ldr	r0, [pc, #548]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16d70:	bl	12340 <coda_cursor_goto_first_array_element@plt>
   16d74:	mov	r3, r0
   16d78:	cmp	r3, #0
   16d7c:	beq	16d84 <dim_leave_array@@Base+0x494>
   16d80:	bl	1aeb8 <handle_coda_error@@Base>
   16d84:	mov	r3, #0
   16d88:	str	r3, [fp, #-16]
   16d8c:	b	16e54 <dim_leave_array@@Base+0x564>
   16d90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16d94:	add	r0, r3, #1
   16d98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d9c:	add	r3, r3, #1
   16da0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16da4:	mov	r1, r3
   16da8:	bl	16b78 <dim_leave_array@@Base+0x288>
   16dac:	mov	r3, r0
   16db0:	cmp	r3, #0
   16db4:	beq	16dc8 <dim_leave_array@@Base+0x4d8>
   16db8:	ldr	r0, [pc, #472]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16dbc:	bl	123d0 <coda_cursor_goto_parent@plt>
   16dc0:	mov	r3, #1
   16dc4:	b	16f84 <dim_leave_array@@Base+0x694>
   16dc8:	ldr	r3, [fp, #-8]
   16dcc:	sub	r3, r3, #1
   16dd0:	ldr	r2, [fp, #-16]
   16dd4:	cmp	r2, r3
   16dd8:	bge	16e48 <dim_leave_array@@Base+0x558>
   16ddc:	ldr	r0, [pc, #436]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16de0:	bl	1243c <coda_cursor_goto_next_array_element@plt>
   16de4:	mov	r3, r0
   16de8:	cmp	r3, #0
   16dec:	beq	16df4 <dim_leave_array@@Base+0x504>
   16df0:	bl	1aeb8 <handle_coda_error@@Base>
   16df4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16df8:	add	r1, r3, #1
   16dfc:	movw	r2, #496	; 0x1f0
   16e00:	movt	r2, #3
   16e04:	mov	r3, r1
   16e08:	lsl	r3, r3, #2
   16e0c:	add	r3, r3, r1
   16e10:	lsl	r3, r3, #4
   16e14:	add	r3, r2, r3
   16e18:	add	r3, r3, #844	; 0x34c
   16e1c:	ldr	r3, [r3]
   16e20:	add	r0, r3, #1
   16e24:	movw	r2, #496	; 0x1f0
   16e28:	movt	r2, #3
   16e2c:	mov	r3, r1
   16e30:	lsl	r3, r3, #2
   16e34:	add	r3, r3, r1
   16e38:	lsl	r3, r3, #4
   16e3c:	add	r3, r2, r3
   16e40:	add	r3, r3, #844	; 0x34c
   16e44:	str	r0, [r3]
   16e48:	ldr	r3, [fp, #-16]
   16e4c:	add	r3, r3, #1
   16e50:	str	r3, [fp, #-16]
   16e54:	ldr	r2, [fp, #-16]
   16e58:	ldr	r3, [fp, #-8]
   16e5c:	cmp	r2, r3
   16e60:	blt	16d90 <dim_leave_array@@Base+0x4a0>
   16e64:	ldr	r0, [pc, #300]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16e68:	bl	123d0 <coda_cursor_goto_parent@plt>
   16e6c:	b	16f80 <dim_leave_array@@Base+0x690>
   16e70:	nop	{0}
   16e74:	b	16f80 <dim_leave_array@@Base+0x690>
   16e78:	movw	r2, #496	; 0x1f0
   16e7c:	movt	r2, #3
   16e80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e84:	add	r3, r3, #872	; 0x368
   16e88:	lsl	r3, r3, #2
   16e8c:	add	r3, r2, r3
   16e90:	ldr	r3, [r3, #4]
   16e94:	sub	r2, fp, #32
   16e98:	mov	r1, r3
   16e9c:	ldr	r0, [pc, #244]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16ea0:	bl	12208 <coda_cursor_get_record_field_available_status@plt>
   16ea4:	mov	r3, r0
   16ea8:	cmp	r3, #0
   16eac:	beq	16eb4 <dim_leave_array@@Base+0x5c4>
   16eb0:	bl	1aeb8 <handle_coda_error@@Base>
   16eb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16eb8:	cmp	r3, #0
   16ebc:	beq	16f7c <dim_leave_array@@Base+0x68c>
   16ec0:	movw	r3, #496	; 0x1f0
   16ec4:	movt	r3, #3
   16ec8:	ldr	r3, [r3, #3748]	; 0xea4
   16ecc:	sub	r3, r3, #1
   16ed0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16ed4:	cmp	r2, r3
   16ed8:	bne	16ee4 <dim_leave_array@@Base+0x5f4>
   16edc:	mov	r3, #1
   16ee0:	b	16f84 <dim_leave_array@@Base+0x694>
   16ee4:	movw	r2, #496	; 0x1f0
   16ee8:	movt	r2, #3
   16eec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ef0:	add	r3, r3, #872	; 0x368
   16ef4:	lsl	r3, r3, #2
   16ef8:	add	r3, r2, r3
   16efc:	ldr	r3, [r3, #4]
   16f00:	mov	r1, r3
   16f04:	ldr	r0, [pc, #140]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16f08:	bl	12370 <coda_cursor_goto_record_field_by_index@plt>
   16f0c:	mov	r3, r0
   16f10:	cmp	r3, #0
   16f14:	beq	16f1c <dim_leave_array@@Base+0x62c>
   16f18:	bl	1aeb8 <handle_coda_error@@Base>
   16f1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16f20:	add	r0, r3, #1
   16f24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16f28:	add	r3, r3, #1
   16f2c:	mov	r2, r3
   16f30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16f34:	bl	16b78 <dim_leave_array@@Base+0x288>
   16f38:	mov	r3, r0
   16f3c:	str	r3, [fp, #-32]	; 0xffffffe0
   16f40:	ldr	r0, [pc, #80]	; 16f98 <dim_leave_array@@Base+0x6a8>
   16f44:	bl	123d0 <coda_cursor_goto_parent@plt>
   16f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16f4c:	cmp	r3, #0
   16f50:	beq	16f7c <dim_leave_array@@Base+0x68c>
   16f54:	mov	r3, #1
   16f58:	b	16f84 <dim_leave_array@@Base+0x694>
   16f5c:	movw	r3, #56012	; 0xdacc
   16f60:	movt	r3, #1
   16f64:	movw	r2, #729	; 0x2d9
   16f68:	movw	r1, #55524	; 0xd8e4
   16f6c:	movt	r1, #1
   16f70:	movw	r0, #55796	; 0xd9f4
   16f74:	movt	r0, #1
   16f78:	bl	12634 <__assert_fail@plt>
   16f7c:	nop	{0}
   16f80:	mov	r3, #0
   16f84:	mov	r0, r3
   16f88:	sub	sp, fp, #4
   16f8c:	ldr	fp, [sp]
   16f90:	add	sp, sp, #4
   16f94:	pop	{pc}		; (ldr pc, [sp], #4)
   16f98:	andeq	r0, r3, r0, lsl #5

00016f9c <dim_record_field_available@@Base>:
   16f9c:	str	fp, [sp, #-8]!
   16fa0:	str	lr, [sp, #4]
   16fa4:	add	fp, sp, #4
   16fa8:	mov	r2, #0
   16fac:	mov	r1, #0
   16fb0:	mov	r0, #0
   16fb4:	bl	16b78 <dim_leave_array@@Base+0x288>
   16fb8:	mov	r3, r0
   16fbc:	mov	r0, r3
   16fc0:	sub	sp, fp, #4
   16fc4:	ldr	fp, [sp]
   16fc8:	add	sp, sp, #4
   16fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd0:	str	r4, [sp, #-12]!
   16fd4:	str	fp, [sp, #4]
   16fd8:	str	lr, [sp, #8]
   16fdc:	add	fp, sp, #8
   16fe0:	sub	sp, sp, #36	; 0x24
   16fe4:	str	r0, [fp, #-24]	; 0xffffffe8
   16fe8:	str	r1, [fp, #-28]	; 0xffffffe4
   16fec:	str	r2, [fp, #-32]	; 0xffffffe0
   16ff0:	mov	r3, #0
   16ff4:	str	r3, [fp, #-16]
   16ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ffc:	cmp	r3, #0
   17000:	bne	17024 <dim_record_field_available@@Base+0x88>
   17004:	movw	r3, #56296	; 0xdbe8
   17008:	movt	r3, #1
   1700c:	mov	r2, #44	; 0x2c
   17010:	movw	r1, #56048	; 0xdaf0
   17014:	movt	r1, #1
   17018:	movw	r0, #56136	; 0xdb48
   1701c:	movt	r0, #1
   17020:	bl	12634 <__assert_fail@plt>
   17024:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17028:	cmp	r3, #0
   1702c:	bne	17050 <dim_record_field_available@@Base+0xb4>
   17030:	movw	r3, #56296	; 0xdbe8
   17034:	movt	r3, #1
   17038:	mov	r2, #45	; 0x2d
   1703c:	movw	r1, #56048	; 0xdaf0
   17040:	movt	r1, #1
   17044:	movw	r0, #56156	; 0xdb5c
   17048:	movt	r0, #1
   1704c:	bl	12634 <__assert_fail@plt>
   17050:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17054:	cmp	r3, #0
   17058:	bne	17088 <dim_record_field_available@@Base+0xec>
   1705c:	movw	r3, #56296	; 0xdbe8
   17060:	movt	r3, #1
   17064:	mov	r2, #46	; 0x2e
   17068:	movw	r1, #56048	; 0xdaf0
   1706c:	movt	r1, #1
   17070:	movw	r0, #56172	; 0xdb6c
   17074:	movt	r0, #1
   17078:	bl	12634 <__assert_fail@plt>
   1707c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17080:	add	r3, r3, #1
   17084:	str	r3, [fp, #-24]	; 0xffffffe8
   17088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1708c:	ldrb	r3, [r3]
   17090:	cmp	r3, #32
   17094:	beq	1707c <dim_record_field_available@@Base+0xe0>
   17098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1709c:	ldrb	r3, [r3]
   170a0:	cmp	r3, #9
   170a4:	beq	1707c <dim_record_field_available@@Base+0xe0>
   170a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170ac:	ldrb	r3, [r3]
   170b0:	cmp	r3, #10
   170b4:	beq	1707c <dim_record_field_available@@Base+0xe0>
   170b8:	b	170c8 <dim_record_field_available@@Base+0x12c>
   170bc:	ldr	r3, [fp, #-16]
   170c0:	add	r3, r3, #1
   170c4:	str	r3, [fp, #-16]
   170c8:	ldr	r3, [fp, #-16]
   170cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170d0:	add	r3, r2, r3
   170d4:	ldrb	r3, [r3]
   170d8:	cmp	r3, #0
   170dc:	beq	17128 <dim_record_field_available@@Base+0x18c>
   170e0:	ldr	r3, [fp, #-16]
   170e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170e8:	add	r3, r2, r3
   170ec:	ldrb	r3, [r3]
   170f0:	cmp	r3, #46	; 0x2e
   170f4:	beq	17128 <dim_record_field_available@@Base+0x18c>
   170f8:	ldr	r3, [fp, #-16]
   170fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17100:	add	r3, r2, r3
   17104:	ldrb	r3, [r3]
   17108:	cmp	r3, #59	; 0x3b
   1710c:	beq	17128 <dim_record_field_available@@Base+0x18c>
   17110:	ldr	r3, [fp, #-16]
   17114:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17118:	add	r3, r2, r3
   1711c:	ldrb	r3, [r3]
   17120:	cmp	r3, #44	; 0x2c
   17124:	bne	170bc <dim_record_field_available@@Base+0x120>
   17128:	ldr	r3, [fp, #-16]
   1712c:	cmp	r3, #0
   17130:	ble	17388 <dim_record_field_available@@Base+0x3ec>
   17134:	ldr	r3, [fp, #-16]
   17138:	str	r3, [fp, #-20]	; 0xffffffec
   1713c:	mov	r0, #12
   17140:	bl	123a0 <malloc@plt>
   17144:	mov	r3, r0
   17148:	mov	r2, r3
   1714c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17150:	str	r2, [r3]
   17154:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17158:	ldr	r3, [r3]
   1715c:	cmp	r3, #0
   17160:	bne	1718c <dim_record_field_available@@Base+0x1f0>
   17164:	mov	r3, #69	; 0x45
   17168:	str	r3, [sp]
   1716c:	movw	r3, #56048	; 0xdaf0
   17170:	movt	r3, #1
   17174:	mov	r2, #12
   17178:	movw	r1, #56188	; 0xdb7c
   1717c:	movt	r1, #1
   17180:	mvn	r0, #0
   17184:	bl	12220 <coda_set_error@plt>
   17188:	bl	1aeb8 <handle_coda_error@@Base>
   1718c:	ldr	r3, [fp, #-16]
   17190:	add	r3, r3, #1
   17194:	mov	r2, r3
   17198:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1719c:	ldr	r4, [r3]
   171a0:	mov	r0, r2
   171a4:	bl	123a0 <malloc@plt>
   171a8:	mov	r3, r0
   171ac:	str	r3, [r4]
   171b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   171b4:	ldr	r3, [r3]
   171b8:	ldr	r3, [r3]
   171bc:	cmp	r3, #0
   171c0:	bne	171f0 <dim_record_field_available@@Base+0x254>
   171c4:	ldr	r3, [fp, #-16]
   171c8:	add	r2, r3, #1
   171cc:	mov	r3, #76	; 0x4c
   171d0:	str	r3, [sp]
   171d4:	movw	r3, #56048	; 0xdaf0
   171d8:	movt	r3, #1
   171dc:	movw	r1, #56244	; 0xdbb4
   171e0:	movt	r1, #1
   171e4:	mvn	r0, #0
   171e8:	bl	12220 <coda_set_error@plt>
   171ec:	bl	1aeb8 <handle_coda_error@@Base>
   171f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   171f4:	ldr	r3, [r3]
   171f8:	ldr	r3, [r3]
   171fc:	ldr	r2, [fp, #-16]
   17200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17204:	mov	r0, r3
   17208:	bl	1249c <strncpy@plt>
   1720c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17210:	ldr	r3, [r3]
   17214:	mov	r2, #0
   17218:	str	r2, [r3, #4]
   1721c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17220:	ldr	r3, [r3]
   17224:	mov	r2, #0
   17228:	str	r2, [r3, #8]
   1722c:	b	1723c <dim_record_field_available@@Base+0x2a0>
   17230:	ldr	r3, [fp, #-16]
   17234:	sub	r3, r3, #1
   17238:	str	r3, [fp, #-16]
   1723c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17240:	ldr	r3, [r3]
   17244:	ldr	r2, [r3]
   17248:	ldr	r3, [fp, #-16]
   1724c:	sub	r3, r3, #1
   17250:	add	r3, r2, r3
   17254:	ldrb	r3, [r3]
   17258:	cmp	r3, #32
   1725c:	beq	17230 <dim_record_field_available@@Base+0x294>
   17260:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17264:	ldr	r3, [r3]
   17268:	ldr	r2, [r3]
   1726c:	ldr	r3, [fp, #-16]
   17270:	sub	r3, r3, #1
   17274:	add	r3, r2, r3
   17278:	ldrb	r3, [r3]
   1727c:	cmp	r3, #9
   17280:	beq	17230 <dim_record_field_available@@Base+0x294>
   17284:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17288:	ldr	r3, [r3]
   1728c:	ldr	r2, [r3]
   17290:	ldr	r3, [fp, #-16]
   17294:	sub	r3, r3, #1
   17298:	add	r3, r2, r3
   1729c:	ldrb	r3, [r3]
   172a0:	cmp	r3, #10
   172a4:	beq	17230 <dim_record_field_available@@Base+0x294>
   172a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172ac:	ldr	r3, [r3]
   172b0:	ldr	r2, [r3]
   172b4:	ldr	r3, [fp, #-16]
   172b8:	add	r3, r2, r3
   172bc:	mov	r2, #0
   172c0:	strb	r2, [r3]
   172c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   172c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172cc:	add	r3, r2, r3
   172d0:	ldrb	r3, [r3]
   172d4:	cmp	r3, #46	; 0x2e
   172d8:	bne	17324 <dim_record_field_available@@Base+0x388>
   172dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   172e0:	add	r3, r3, #1
   172e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172e8:	add	r0, r2, r3
   172ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   172f0:	ldr	r3, [r3]
   172f4:	add	r3, r3, #4
   172f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   172fc:	mov	r1, r3
   17300:	bl	16fd0 <dim_record_field_available@@Base+0x34>
   17304:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17308:	ldr	r3, [r3]
   1730c:	ldr	r3, [r3, #4]
   17310:	cmp	r3, #0
   17314:	bne	17394 <dim_record_field_available@@Base+0x3f8>
   17318:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1731c:	bl	17604 <codadump_filter_remove@@Base>
   17320:	b	17394 <dim_record_field_available@@Base+0x3f8>
   17324:	ldr	r3, [fp, #-20]	; 0xffffffec
   17328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1732c:	add	r3, r2, r3
   17330:	ldrb	r3, [r3]
   17334:	cmp	r3, #59	; 0x3b
   17338:	beq	17354 <dim_record_field_available@@Base+0x3b8>
   1733c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17340:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17344:	add	r3, r2, r3
   17348:	ldrb	r3, [r3]
   1734c:	cmp	r3, #44	; 0x2c
   17350:	bne	17370 <dim_record_field_available@@Base+0x3d4>
   17354:	ldr	r3, [fp, #-20]	; 0xffffffec
   17358:	add	r3, r3, #1
   1735c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17360:	add	r2, r2, r3
   17364:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17368:	str	r2, [r3]
   1736c:	b	17394 <dim_record_field_available@@Base+0x3f8>
   17370:	ldr	r3, [fp, #-20]	; 0xffffffec
   17374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17378:	add	r2, r2, r3
   1737c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17380:	str	r2, [r3]
   17384:	b	17394 <dim_record_field_available@@Base+0x3f8>
   17388:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1738c:	mov	r2, #0
   17390:	str	r2, [r3]
   17394:	nop	{0}
   17398:	sub	sp, fp, #8
   1739c:	ldr	r4, [sp]
   173a0:	ldr	fp, [sp, #4]
   173a4:	add	sp, sp, #8
   173a8:	pop	{pc}		; (ldr pc, [sp], #4)
   173ac:	str	fp, [sp, #-8]!
   173b0:	str	lr, [sp, #4]
   173b4:	add	fp, sp, #4
   173b8:	sub	sp, sp, #8
   173bc:	str	r0, [fp, #-8]
   173c0:	str	r1, [fp, #-12]
   173c4:	ldr	r3, [fp, #-8]
   173c8:	cmp	r3, #0
   173cc:	bne	173f0 <dim_record_field_available@@Base+0x454>
   173d0:	movw	r3, #56312	; 0xdbf8
   173d4:	movt	r3, #1
   173d8:	mov	r2, #117	; 0x75
   173dc:	movw	r1, #56048	; 0xdaf0
   173e0:	movt	r1, #1
   173e4:	movw	r0, #56156	; 0xdb5c
   173e8:	movt	r0, #1
   173ec:	bl	12634 <__assert_fail@plt>
   173f0:	ldr	r3, [fp, #-12]
   173f4:	cmp	r3, #0
   173f8:	beq	17508 <dim_record_field_available@@Base+0x56c>
   173fc:	ldr	r3, [fp, #-8]
   17400:	ldr	r3, [r3]
   17404:	cmp	r3, #0
   17408:	bne	1741c <dim_record_field_available@@Base+0x480>
   1740c:	ldr	r2, [fp, #-12]
   17410:	ldr	r3, [fp, #-8]
   17414:	str	r2, [r3]
   17418:	b	1750c <dim_record_field_available@@Base+0x570>
   1741c:	ldr	r3, [fp, #-8]
   17420:	ldr	r3, [r3]
   17424:	ldr	r2, [r3]
   17428:	ldr	r3, [fp, #-12]
   1742c:	ldr	r3, [r3]
   17430:	mov	r1, r3
   17434:	mov	r0, r2
   17438:	bl	121e4 <strcmp@plt>
   1743c:	mov	r3, r0
   17440:	cmp	r3, #0
   17444:	bne	174c0 <dim_record_field_available@@Base+0x524>
   17448:	ldr	r3, [fp, #-8]
   1744c:	ldr	r3, [r3]
   17450:	ldr	r3, [r3, #4]
   17454:	cmp	r3, #0
   17458:	beq	174b0 <dim_record_field_available@@Base+0x514>
   1745c:	ldr	r3, [fp, #-12]
   17460:	ldr	r3, [r3, #4]
   17464:	cmp	r3, #0
   17468:	beq	1749c <dim_record_field_available@@Base+0x500>
   1746c:	ldr	r3, [fp, #-8]
   17470:	ldr	r3, [r3]
   17474:	add	r2, r3, #4
   17478:	ldr	r3, [fp, #-12]
   1747c:	ldr	r3, [r3, #4]
   17480:	mov	r1, r3
   17484:	mov	r0, r2
   17488:	bl	173ac <dim_record_field_available@@Base+0x410>
   1748c:	ldr	r3, [fp, #-12]
   17490:	mov	r2, #0
   17494:	str	r2, [r3, #4]
   17498:	b	174b0 <dim_record_field_available@@Base+0x514>
   1749c:	ldr	r3, [fp, #-8]
   174a0:	ldr	r3, [r3]
   174a4:	add	r3, r3, #4
   174a8:	mov	r0, r3
   174ac:	bl	17604 <codadump_filter_remove@@Base>
   174b0:	sub	r3, fp, #12
   174b4:	mov	r0, r3
   174b8:	bl	17604 <codadump_filter_remove@@Base>
   174bc:	b	1750c <dim_record_field_available@@Base+0x570>
   174c0:	ldr	r3, [fp, #-8]
   174c4:	ldr	r3, [r3]
   174c8:	ldr	r3, [r3, #8]
   174cc:	cmp	r3, #0
   174d0:	beq	174f4 <dim_record_field_available@@Base+0x558>
   174d4:	ldr	r3, [fp, #-8]
   174d8:	ldr	r3, [r3]
   174dc:	add	r3, r3, #8
   174e0:	ldr	r2, [fp, #-12]
   174e4:	mov	r1, r2
   174e8:	mov	r0, r3
   174ec:	bl	173ac <dim_record_field_available@@Base+0x410>
   174f0:	b	1750c <dim_record_field_available@@Base+0x570>
   174f4:	ldr	r3, [fp, #-8]
   174f8:	ldr	r3, [r3]
   174fc:	ldr	r2, [fp, #-12]
   17500:	str	r2, [r3, #8]
   17504:	b	1750c <dim_record_field_available@@Base+0x570>
   17508:	nop	{0}
   1750c:	sub	sp, fp, #4
   17510:	ldr	fp, [sp]
   17514:	add	sp, sp, #4
   17518:	pop	{pc}		; (ldr pc, [sp], #4)
   1751c:	str	fp, [sp, #-8]!
   17520:	str	lr, [sp, #4]
   17524:	add	fp, sp, #4
   17528:	sub	sp, sp, #16
   1752c:	str	r0, [fp, #-16]
   17530:	str	r1, [fp, #-20]	; 0xffffffec
   17534:	mov	r3, #0
   17538:	str	r3, [fp, #-8]
   1753c:	ldr	r3, [fp, #-16]
   17540:	str	r3, [fp, #-12]
   17544:	ldr	r3, [fp, #-16]
   17548:	cmp	r3, #0
   1754c:	beq	175ac <dim_record_field_available@@Base+0x610>
   17550:	b	17598 <dim_record_field_available@@Base+0x5fc>
   17554:	ldr	r3, [fp, #-12]
   17558:	sub	r2, fp, #12
   1755c:	sub	r1, fp, #8
   17560:	mov	r0, r3
   17564:	bl	16fd0 <dim_record_field_available@@Base+0x34>
   17568:	ldr	r3, [fp, #-8]
   1756c:	cmp	r3, #0
   17570:	bne	17580 <dim_record_field_available@@Base+0x5e4>
   17574:	ldr	r0, [fp, #-20]	; 0xffffffec
   17578:	bl	17604 <codadump_filter_remove@@Base>
   1757c:	b	175b0 <dim_record_field_available@@Base+0x614>
   17580:	ldr	r3, [fp, #-8]
   17584:	mov	r1, r3
   17588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1758c:	bl	173ac <dim_record_field_available@@Base+0x410>
   17590:	mov	r3, #0
   17594:	str	r3, [fp, #-8]
   17598:	ldr	r3, [fp, #-12]
   1759c:	ldrb	r3, [r3]
   175a0:	cmp	r3, #0
   175a4:	bne	17554 <dim_record_field_available@@Base+0x5b8>
   175a8:	b	175b0 <dim_record_field_available@@Base+0x614>
   175ac:	nop	{0}
   175b0:	sub	sp, fp, #4
   175b4:	ldr	fp, [sp]
   175b8:	add	sp, sp, #4
   175bc:	pop	{pc}		; (ldr pc, [sp], #4)

000175c0 <codadump_filter_create@@Base>:
   175c0:	str	fp, [sp, #-8]!
   175c4:	str	lr, [sp, #4]
   175c8:	add	fp, sp, #4
   175cc:	sub	sp, sp, #16
   175d0:	str	r0, [fp, #-16]
   175d4:	mov	r3, #0
   175d8:	str	r3, [fp, #-8]
   175dc:	sub	r3, fp, #8
   175e0:	mov	r1, r3
   175e4:	ldr	r0, [fp, #-16]
   175e8:	bl	1751c <dim_record_field_available@@Base+0x580>
   175ec:	ldr	r3, [fp, #-8]
   175f0:	mov	r0, r3
   175f4:	sub	sp, fp, #4
   175f8:	ldr	fp, [sp]
   175fc:	add	sp, sp, #4
   17600:	pop	{pc}		; (ldr pc, [sp], #4)

00017604 <codadump_filter_remove@@Base>:
   17604:	str	fp, [sp, #-8]!
   17608:	str	lr, [sp, #4]
   1760c:	add	fp, sp, #4
   17610:	sub	sp, sp, #8
   17614:	str	r0, [fp, #-8]
   17618:	ldr	r3, [fp, #-8]
   1761c:	cmp	r3, #0
   17620:	bne	17644 <codadump_filter_remove@@Base+0x40>
   17624:	movw	r3, #56324	; 0xdc04
   17628:	movt	r3, #1
   1762c:	mov	r2, #192	; 0xc0
   17630:	movw	r1, #56048	; 0xdaf0
   17634:	movt	r1, #1
   17638:	movw	r0, #56156	; 0xdb5c
   1763c:	movt	r0, #1
   17640:	bl	12634 <__assert_fail@plt>
   17644:	ldr	r3, [fp, #-8]
   17648:	ldr	r3, [r3]
   1764c:	cmp	r3, #0
   17650:	beq	176f8 <codadump_filter_remove@@Base+0xf4>
   17654:	ldr	r3, [fp, #-8]
   17658:	ldr	r3, [r3]
   1765c:	ldr	r3, [r3, #8]
   17660:	cmp	r3, #0
   17664:	beq	1767c <codadump_filter_remove@@Base+0x78>
   17668:	ldr	r3, [fp, #-8]
   1766c:	ldr	r3, [r3]
   17670:	add	r3, r3, #8
   17674:	mov	r0, r3
   17678:	bl	17604 <codadump_filter_remove@@Base>
   1767c:	ldr	r3, [fp, #-8]
   17680:	ldr	r3, [r3]
   17684:	ldr	r3, [r3, #4]
   17688:	cmp	r3, #0
   1768c:	beq	176a4 <codadump_filter_remove@@Base+0xa0>
   17690:	ldr	r3, [fp, #-8]
   17694:	ldr	r3, [r3]
   17698:	add	r3, r3, #4
   1769c:	mov	r0, r3
   176a0:	bl	17604 <codadump_filter_remove@@Base>
   176a4:	ldr	r3, [fp, #-8]
   176a8:	ldr	r3, [r3]
   176ac:	ldr	r3, [r3]
   176b0:	cmp	r3, #0
   176b4:	beq	176dc <codadump_filter_remove@@Base+0xd8>
   176b8:	ldr	r3, [fp, #-8]
   176bc:	ldr	r3, [r3]
   176c0:	ldr	r3, [r3]
   176c4:	mov	r0, r3
   176c8:	bl	12268 <free@plt>
   176cc:	ldr	r3, [fp, #-8]
   176d0:	ldr	r3, [r3]
   176d4:	mov	r2, #0
   176d8:	str	r2, [r3]
   176dc:	ldr	r3, [fp, #-8]
   176e0:	ldr	r3, [r3]
   176e4:	mov	r0, r3
   176e8:	bl	12268 <free@plt>
   176ec:	ldr	r3, [fp, #-8]
   176f0:	mov	r2, #0
   176f4:	str	r2, [r3]
   176f8:	nop	{0}
   176fc:	sub	sp, fp, #4
   17700:	ldr	fp, [sp]
   17704:	add	sp, sp, #4
   17708:	pop	{pc}		; (ldr pc, [sp], #4)

0001770c <codadump_filter_get_fieldname@@Base>:
   1770c:	str	fp, [sp, #-8]!
   17710:	str	lr, [sp, #4]
   17714:	add	fp, sp, #4
   17718:	sub	sp, sp, #8
   1771c:	str	r0, [fp, #-8]
   17720:	ldr	r3, [fp, #-8]
   17724:	cmp	r3, #0
   17728:	bne	1774c <codadump_filter_get_fieldname@@Base+0x40>
   1772c:	movw	r3, #56348	; 0xdc1c
   17730:	movt	r3, #1
   17734:	mov	r2, #216	; 0xd8
   17738:	movw	r1, #56048	; 0xdaf0
   1773c:	movt	r1, #1
   17740:	movw	r0, #56156	; 0xdb5c
   17744:	movt	r0, #1
   17748:	bl	12634 <__assert_fail@plt>
   1774c:	ldr	r3, [fp, #-8]
   17750:	ldr	r3, [r3]
   17754:	mov	r0, r3
   17758:	sub	sp, fp, #4
   1775c:	ldr	fp, [sp]
   17760:	add	sp, sp, #4
   17764:	pop	{pc}		; (ldr pc, [sp], #4)

00017768 <codadump_filter_get_subfilter@@Base>:
   17768:	str	fp, [sp, #-8]!
   1776c:	str	lr, [sp, #4]
   17770:	add	fp, sp, #4
   17774:	sub	sp, sp, #8
   17778:	str	r0, [fp, #-8]
   1777c:	ldr	r3, [fp, #-8]
   17780:	cmp	r3, #0
   17784:	bne	177a8 <codadump_filter_get_subfilter@@Base+0x40>
   17788:	movw	r3, #56380	; 0xdc3c
   1778c:	movt	r3, #1
   17790:	mov	r2, #223	; 0xdf
   17794:	movw	r1, #56048	; 0xdaf0
   17798:	movt	r1, #1
   1779c:	movw	r0, #56156	; 0xdb5c
   177a0:	movt	r0, #1
   177a4:	bl	12634 <__assert_fail@plt>
   177a8:	ldr	r3, [fp, #-8]
   177ac:	ldr	r3, [r3, #4]
   177b0:	mov	r0, r3
   177b4:	sub	sp, fp, #4
   177b8:	ldr	fp, [sp]
   177bc:	add	sp, sp, #4
   177c0:	pop	{pc}		; (ldr pc, [sp], #4)

000177c4 <codadump_filter_get_next_filter@@Base>:
   177c4:	str	fp, [sp, #-8]!
   177c8:	str	lr, [sp, #4]
   177cc:	add	fp, sp, #4
   177d0:	sub	sp, sp, #8
   177d4:	str	r0, [fp, #-8]
   177d8:	ldr	r3, [fp, #-8]
   177dc:	cmp	r3, #0
   177e0:	bne	17804 <codadump_filter_get_next_filter@@Base+0x40>
   177e4:	movw	r3, #56412	; 0xdc5c
   177e8:	movt	r3, #1
   177ec:	mov	r2, #230	; 0xe6
   177f0:	movw	r1, #56048	; 0xdaf0
   177f4:	movt	r1, #1
   177f8:	movw	r0, #56156	; 0xdb5c
   177fc:	movt	r0, #1
   17800:	bl	12634 <__assert_fail@plt>
   17804:	ldr	r3, [fp, #-8]
   17808:	ldr	r3, [r3, #8]
   1780c:	mov	r0, r3
   17810:	sub	sp, fp, #4
   17814:	ldr	fp, [sp]
   17818:	add	sp, sp, #4
   1781c:	pop	{pc}		; (ldr pc, [sp], #4)
   17820:	push	{r0, r1, r2, r3}
   17824:	str	fp, [sp, #-8]!
   17828:	str	lr, [sp, #4]
   1782c:	add	fp, sp, #4
   17830:	sub	sp, sp, #8
   17834:	add	r3, fp, #8
   17838:	str	r3, [fp, #-12]
   1783c:	movw	r3, #4248	; 0x1098
   17840:	movt	r3, #3
   17844:	ldr	r3, [r3]
   17848:	ldr	r2, [fp, #-12]
   1784c:	ldr	r1, [fp, #4]
   17850:	mov	r0, r3
   17854:	bl	1252c <vfprintf@plt>
   17858:	str	r0, [fp, #-8]
   1785c:	ldr	r3, [fp, #-8]
   17860:	mov	r0, r3
   17864:	sub	sp, fp, #4
   17868:	ldr	fp, [sp]
   1786c:	ldr	lr, [sp, #4]
   17870:	add	sp, sp, #8
   17874:	add	sp, sp, #16
   17878:	bx	lr
   1787c:	str	fp, [sp, #-8]!
   17880:	str	lr, [sp, #4]
   17884:	add	fp, sp, #4
   17888:	sub	sp, sp, #16
   1788c:	str	r0, [fp, #-16]
   17890:	str	r1, [fp, #-20]	; 0xffffffec
   17894:	mov	r3, #0
   17898:	str	r3, [fp, #-8]
   1789c:	b	179c0 <codadump_filter_get_next_filter@@Base+0x1fc>
   178a0:	ldr	r3, [fp, #-8]
   178a4:	ldr	r2, [fp, #-16]
   178a8:	add	r3, r2, r3
   178ac:	ldrb	r3, [r3]
   178b0:	strb	r3, [fp, #-9]
   178b4:	ldrb	r3, [fp, #-9]
   178b8:	cmp	r3, #12
   178bc:	beq	17910 <codadump_filter_get_next_filter@@Base+0x14c>
   178c0:	cmp	r3, #12
   178c4:	bgt	178e4 <codadump_filter_get_next_filter@@Base+0x120>
   178c8:	cmp	r3, #9
   178cc:	beq	17940 <codadump_filter_get_next_filter@@Base+0x17c>
   178d0:	cmp	r3, #10
   178d4:	beq	17920 <codadump_filter_get_next_filter@@Base+0x15c>
   178d8:	cmp	r3, #8
   178dc:	beq	17900 <codadump_filter_get_next_filter@@Base+0x13c>
   178e0:	b	17970 <codadump_filter_get_next_filter@@Base+0x1ac>
   178e4:	cmp	r3, #34	; 0x22
   178e8:	beq	17950 <codadump_filter_get_next_filter@@Base+0x18c>
   178ec:	cmp	r3, #92	; 0x5c
   178f0:	beq	17960 <codadump_filter_get_next_filter@@Base+0x19c>
   178f4:	cmp	r3, #13
   178f8:	beq	17930 <codadump_filter_get_next_filter@@Base+0x16c>
   178fc:	b	17970 <codadump_filter_get_next_filter@@Base+0x1ac>
   17900:	movw	r0, #56444	; 0xdc7c
   17904:	movt	r0, #1
   17908:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1790c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17910:	movw	r0, #56448	; 0xdc80
   17914:	movt	r0, #1
   17918:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1791c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17920:	movw	r0, #56452	; 0xdc84
   17924:	movt	r0, #1
   17928:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1792c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17930:	movw	r0, #56456	; 0xdc88
   17934:	movt	r0, #1
   17938:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1793c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17940:	movw	r0, #56460	; 0xdc8c
   17944:	movt	r0, #1
   17948:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1794c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17950:	movw	r0, #56464	; 0xdc90
   17954:	movt	r0, #1
   17958:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1795c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17960:	movw	r0, #56468	; 0xdc94
   17964:	movt	r0, #1
   17968:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1796c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   17970:	ldrb	r3, [fp, #-9]
   17974:	cmp	r3, #31
   17978:	bls	179a0 <codadump_filter_get_next_filter@@Base+0x1dc>
   1797c:	ldrb	r3, [fp, #-9]
   17980:	cmp	r3, #126	; 0x7e
   17984:	bhi	179a0 <codadump_filter_get_next_filter@@Base+0x1dc>
   17988:	ldrb	r3, [fp, #-9]
   1798c:	mov	r1, r3
   17990:	movw	r0, #56472	; 0xdc98
   17994:	movt	r0, #1
   17998:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   1799c:	b	179b4 <codadump_filter_get_next_filter@@Base+0x1f0>
   179a0:	ldrb	r3, [fp, #-9]
   179a4:	mov	r1, r3
   179a8:	movw	r0, #56476	; 0xdc9c
   179ac:	movt	r0, #1
   179b0:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   179b4:	ldr	r3, [fp, #-8]
   179b8:	add	r3, r3, #1
   179bc:	str	r3, [fp, #-8]
   179c0:	ldr	r2, [fp, #-8]
   179c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   179c8:	cmp	r2, r3
   179cc:	blt	178a0 <codadump_filter_get_next_filter@@Base+0xdc>
   179d0:	nop	{0}
   179d4:	sub	sp, fp, #4
   179d8:	ldr	fp, [sp]
   179dc:	add	sp, sp, #4
   179e0:	pop	{pc}		; (ldr pc, [sp], #4)
   179e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   179e8:	strd	r6, [sp, #8]
   179ec:	strd	r8, [sp, #16]
   179f0:	str	fp, [sp, #24]
   179f4:	str	lr, [sp, #28]
   179f8:	add	fp, sp, #28
   179fc:	sub	sp, sp, #288	; 0x120
   17a00:	str	r0, [fp, #-304]	; 0xfffffed0
   17a04:	mov	r3, #0
   17a08:	str	r3, [fp, #-64]	; 0xffffffc0
   17a0c:	movw	r3, #456	; 0x1c8
   17a10:	movt	r3, #3
   17a14:	ldr	r3, [r3]
   17a18:	cmp	r3, #0
   17a1c:	beq	17a8c <codadump_filter_get_next_filter@@Base+0x2c8>
   17a20:	sub	r3, fp, #64	; 0x40
   17a24:	mov	r1, r3
   17a28:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17a2c:	bl	122ec <coda_cursor_has_attributes@plt>
   17a30:	mov	r3, r0
   17a34:	cmp	r3, #0
   17a38:	beq	17a40 <codadump_filter_get_next_filter@@Base+0x27c>
   17a3c:	bl	1aeb8 <handle_coda_error@@Base>
   17a40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17a44:	cmp	r3, #0
   17a48:	beq	17a8c <codadump_filter_get_next_filter@@Base+0x2c8>
   17a4c:	movw	r0, #56484	; 0xdca4
   17a50:	movt	r0, #1
   17a54:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17a58:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17a5c:	bl	1246c <coda_cursor_goto_attributes@plt>
   17a60:	mov	r3, r0
   17a64:	cmp	r3, #0
   17a68:	beq	17a70 <codadump_filter_get_next_filter@@Base+0x2ac>
   17a6c:	bl	1aeb8 <handle_coda_error@@Base>
   17a70:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17a74:	bl	179e4 <codadump_filter_get_next_filter@@Base+0x220>
   17a78:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17a7c:	bl	123d0 <coda_cursor_goto_parent@plt>
   17a80:	movw	r0, #56496	; 0xdcb0
   17a84:	movt	r0, #1
   17a88:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17a8c:	sub	r3, fp, #60	; 0x3c
   17a90:	mov	r1, r3
   17a94:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17a98:	bl	122f8 <coda_cursor_get_type_class@plt>
   17a9c:	mov	r3, r0
   17aa0:	cmp	r3, #0
   17aa4:	beq	17aac <codadump_filter_get_next_filter@@Base+0x2e8>
   17aa8:	bl	1aeb8 <handle_coda_error@@Base>
   17aac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ab0:	cmp	r3, #6
   17ab4:	ldrls	pc, [pc, r3, lsl #2]
   17ab8:	b	183e4 <codadump_filter_get_next_filter@@Base+0xc20>
   17abc:	ldrdeq	r7, [r1], -r8
   17ac0:	andeq	r7, r1, ip, lsl #26
   17ac4:	andeq	r7, r1, ip, lsr lr
   17ac8:	andeq	r7, r1, ip, lsr lr
   17acc:	andeq	r7, r1, ip, lsr lr
   17ad0:	andeq	r7, r1, ip, lsr lr
   17ad4:	andeq	r8, r1, ip, asr #4
   17ad8:	movw	r0, #56508	; 0xdcbc
   17adc:	movt	r0, #1
   17ae0:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17ae4:	sub	r3, fp, #68	; 0x44
   17ae8:	mov	r1, r3
   17aec:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17af0:	bl	12250 <coda_cursor_get_num_elements@plt>
   17af4:	mov	r3, r0
   17af8:	cmp	r3, #0
   17afc:	beq	17b04 <codadump_filter_get_next_filter@@Base+0x340>
   17b00:	bl	1aeb8 <handle_coda_error@@Base>
   17b04:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17b08:	cmp	r3, #0
   17b0c:	ble	17cfc <codadump_filter_get_next_filter@@Base+0x538>
   17b10:	sub	r3, fp, #72	; 0x48
   17b14:	mov	r1, r3
   17b18:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17b1c:	bl	122b0 <coda_cursor_get_type@plt>
   17b20:	mov	r3, r0
   17b24:	cmp	r3, #0
   17b28:	beq	17b30 <codadump_filter_get_next_filter@@Base+0x36c>
   17b2c:	bl	1aeb8 <handle_coda_error@@Base>
   17b30:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17b34:	sub	r2, fp, #76	; 0x4c
   17b38:	mov	r1, r2
   17b3c:	mov	r0, r3
   17b40:	bl	124b4 <coda_type_get_record_union_status@plt>
   17b44:	mov	r3, r0
   17b48:	cmp	r3, #0
   17b4c:	beq	17b54 <codadump_filter_get_next_filter@@Base+0x390>
   17b50:	bl	1aeb8 <handle_coda_error@@Base>
   17b54:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17b58:	cmp	r3, #0
   17b5c:	beq	17bec <codadump_filter_get_next_filter@@Base+0x428>
   17b60:	sub	r3, fp, #80	; 0x50
   17b64:	mov	r1, r3
   17b68:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17b6c:	bl	125b0 <coda_cursor_get_available_union_field_index@plt>
   17b70:	mov	r3, r0
   17b74:	cmp	r3, #0
   17b78:	beq	17b80 <codadump_filter_get_next_filter@@Base+0x3bc>
   17b7c:	bl	1aeb8 <handle_coda_error@@Base>
   17b80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17b84:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17b88:	sub	r2, fp, #84	; 0x54
   17b8c:	mov	r0, r3
   17b90:	bl	125f8 <coda_type_get_record_field_name@plt>
   17b94:	mov	r3, r0
   17b98:	cmp	r3, #0
   17b9c:	beq	17ba4 <codadump_filter_get_next_filter@@Base+0x3e0>
   17ba0:	bl	1aeb8 <handle_coda_error@@Base>
   17ba4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17ba8:	mov	r1, r3
   17bac:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17bb0:	bl	12370 <coda_cursor_goto_record_field_by_index@plt>
   17bb4:	mov	r3, r0
   17bb8:	cmp	r3, #0
   17bbc:	beq	17bc4 <codadump_filter_get_next_filter@@Base+0x400>
   17bc0:	bl	1aeb8 <handle_coda_error@@Base>
   17bc4:	ldr	r3, [fp, #-84]	; 0xffffffac
   17bc8:	mov	r1, r3
   17bcc:	movw	r0, #56512	; 0xdcc0
   17bd0:	movt	r0, #1
   17bd4:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17bd8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17bdc:	bl	179e4 <codadump_filter_get_next_filter@@Base+0x220>
   17be0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17be4:	bl	123d0 <coda_cursor_goto_parent@plt>
   17be8:	b	17cfc <codadump_filter_get_next_filter@@Base+0x538>
   17bec:	mov	r3, #1
   17bf0:	str	r3, [fp, #-32]	; 0xffffffe0
   17bf4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17bf8:	bl	12364 <coda_cursor_goto_first_record_field@plt>
   17bfc:	mov	r3, r0
   17c00:	cmp	r3, #0
   17c04:	beq	17c0c <codadump_filter_get_next_filter@@Base+0x448>
   17c08:	bl	1aeb8 <handle_coda_error@@Base>
   17c0c:	mov	r3, #0
   17c10:	str	r3, [fp, #-80]	; 0xffffffb0
   17c14:	b	17ce4 <codadump_filter_get_next_filter@@Base+0x520>
   17c18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17c1c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17c20:	sub	r2, fp, #92	; 0x5c
   17c24:	mov	r0, r3
   17c28:	bl	121f0 <coda_type_get_record_field_hidden_status@plt>
   17c2c:	mov	r3, r0
   17c30:	cmp	r3, #0
   17c34:	beq	17c3c <codadump_filter_get_next_filter@@Base+0x478>
   17c38:	bl	1aeb8 <handle_coda_error@@Base>
   17c3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17c40:	cmp	r3, #0
   17c44:	bne	17cac <codadump_filter_get_next_filter@@Base+0x4e8>
   17c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17c4c:	cmp	r3, #0
   17c50:	bne	17c64 <codadump_filter_get_next_filter@@Base+0x4a0>
   17c54:	movw	r0, #56520	; 0xdcc8
   17c58:	movt	r0, #1
   17c5c:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17c60:	b	17c6c <codadump_filter_get_next_filter@@Base+0x4a8>
   17c64:	mov	r3, #0
   17c68:	str	r3, [fp, #-32]	; 0xffffffe0
   17c6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17c70:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17c74:	sub	r2, fp, #88	; 0x58
   17c78:	mov	r0, r3
   17c7c:	bl	125f8 <coda_type_get_record_field_name@plt>
   17c80:	mov	r3, r0
   17c84:	cmp	r3, #0
   17c88:	beq	17c90 <codadump_filter_get_next_filter@@Base+0x4cc>
   17c8c:	bl	1aeb8 <handle_coda_error@@Base>
   17c90:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17c94:	mov	r1, r3
   17c98:	movw	r0, #56512	; 0xdcc0
   17c9c:	movt	r0, #1
   17ca0:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17ca4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17ca8:	bl	179e4 <codadump_filter_get_next_filter@@Base+0x220>
   17cac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17cb0:	sub	r2, r3, #1
   17cb4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17cb8:	cmp	r2, r3
   17cbc:	ble	17cd8 <codadump_filter_get_next_filter@@Base+0x514>
   17cc0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17cc4:	bl	1255c <coda_cursor_goto_next_record_field@plt>
   17cc8:	mov	r3, r0
   17ccc:	cmp	r3, #0
   17cd0:	beq	17cd8 <codadump_filter_get_next_filter@@Base+0x514>
   17cd4:	bl	1aeb8 <handle_coda_error@@Base>
   17cd8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17cdc:	add	r3, r3, #1
   17ce0:	str	r3, [fp, #-80]	; 0xffffffb0
   17ce4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17ce8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17cec:	cmp	r2, r3
   17cf0:	blt	17c18 <codadump_filter_get_next_filter@@Base+0x454>
   17cf4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17cf8:	bl	123d0 <coda_cursor_goto_parent@plt>
   17cfc:	movw	r0, #56524	; 0xdccc
   17d00:	movt	r0, #1
   17d04:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17d08:	b	183e4 <codadump_filter_get_next_filter@@Base+0xc20>
   17d0c:	movw	r0, #56528	; 0xdcd0
   17d10:	movt	r0, #1
   17d14:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17d18:	sub	r2, fp, #300	; 0x12c
   17d1c:	sub	r3, fp, #96	; 0x60
   17d20:	mov	r1, r3
   17d24:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17d28:	bl	124fc <coda_cursor_get_array_dim@plt>
   17d2c:	mov	r3, r0
   17d30:	cmp	r3, #0
   17d34:	beq	17d3c <codadump_filter_get_next_filter@@Base+0x578>
   17d38:	bl	1aeb8 <handle_coda_error@@Base>
   17d3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d40:	cmp	r3, #0
   17d44:	blt	17e2c <codadump_filter_get_next_filter@@Base+0x668>
   17d48:	mov	r3, #1
   17d4c:	str	r3, [fp, #-36]	; 0xffffffdc
   17d50:	mov	r3, #0
   17d54:	str	r3, [fp, #-40]	; 0xffffffd8
   17d58:	b	17d88 <codadump_filter_get_next_filter@@Base+0x5c4>
   17d5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d60:	lsl	r3, r3, #2
   17d64:	sub	r2, fp, #28
   17d68:	add	r3, r2, r3
   17d6c:	ldr	r2, [r3, #-272]	; 0xfffffef0
   17d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d74:	mul	r3, r2, r3
   17d78:	str	r3, [fp, #-36]	; 0xffffffdc
   17d7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d80:	add	r3, r3, #1
   17d84:	str	r3, [fp, #-40]	; 0xffffffd8
   17d88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17d90:	cmp	r2, r3
   17d94:	blt	17d5c <codadump_filter_get_next_filter@@Base+0x598>
   17d98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d9c:	cmp	r3, #0
   17da0:	ble	17e2c <codadump_filter_get_next_filter@@Base+0x668>
   17da4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17da8:	bl	12340 <coda_cursor_goto_first_array_element@plt>
   17dac:	mov	r3, r0
   17db0:	cmp	r3, #0
   17db4:	beq	17dbc <codadump_filter_get_next_filter@@Base+0x5f8>
   17db8:	bl	1aeb8 <handle_coda_error@@Base>
   17dbc:	mov	r3, #0
   17dc0:	str	r3, [fp, #-40]	; 0xffffffd8
   17dc4:	b	17e14 <codadump_filter_get_next_filter@@Base+0x650>
   17dc8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17dcc:	bl	179e4 <codadump_filter_get_next_filter@@Base+0x220>
   17dd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17dd4:	sub	r3, r3, #1
   17dd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17ddc:	cmp	r2, r3
   17de0:	bge	17e08 <codadump_filter_get_next_filter@@Base+0x644>
   17de4:	movw	r0, #56520	; 0xdcc8
   17de8:	movt	r0, #1
   17dec:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17df0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17df4:	bl	1243c <coda_cursor_goto_next_array_element@plt>
   17df8:	mov	r3, r0
   17dfc:	cmp	r3, #0
   17e00:	beq	17e08 <codadump_filter_get_next_filter@@Base+0x644>
   17e04:	bl	1aeb8 <handle_coda_error@@Base>
   17e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e0c:	add	r3, r3, #1
   17e10:	str	r3, [fp, #-40]	; 0xffffffd8
   17e14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e1c:	cmp	r2, r3
   17e20:	blt	17dc8 <codadump_filter_get_next_filter@@Base+0x604>
   17e24:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17e28:	bl	123d0 <coda_cursor_goto_parent@plt>
   17e2c:	movw	r0, #56532	; 0xdcd4
   17e30:	movt	r0, #1
   17e34:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17e38:	b	183e4 <codadump_filter_get_next_filter@@Base+0xc20>
   17e3c:	sub	r3, fp, #100	; 0x64
   17e40:	mov	r1, r3
   17e44:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17e48:	bl	12394 <coda_cursor_get_read_type@plt>
   17e4c:	mov	r3, r0
   17e50:	cmp	r3, #0
   17e54:	beq	17e5c <codadump_filter_get_next_filter@@Base+0x698>
   17e58:	bl	1aeb8 <handle_coda_error@@Base>
   17e5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17e60:	add	r3, r3, #1
   17e64:	cmp	r3, #13
   17e68:	ldrls	pc, [pc, r3, lsl #2]
   17e6c:	b	183d8 <codadump_filter_get_next_filter@@Base+0xc14>
   17e70:	andeq	r8, r1, r8, lsr r2
   17e74:	andeq	r8, r1, r4, ror #1
   17e78:	andeq	r8, r1, ip, lsl r1
   17e7c:	andeq	r8, r1, r4, ror #1
   17e80:	andeq	r8, r1, ip, lsl r1
   17e84:	andeq	r8, r1, r4, ror #1
   17e88:	andeq	r8, r1, ip, lsl r1
   17e8c:	andeq	r8, r1, r4, asr r1
   17e90:	muleq	r1, ip, r1
   17e94:	andeq	r8, r1, r4, ror #3
   17e98:	andeq	r8, r1, r4, ror #3
   17e9c:	andeq	r7, r1, r8, lsr #29
   17ea0:	strdeq	r7, [r1], -r4
   17ea4:	andeq	r7, r1, r8, asr #31
   17ea8:	sub	r3, fp, #101	; 0x65
   17eac:	mov	r1, r3
   17eb0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17eb4:	bl	12478 <coda_cursor_read_char@plt>
   17eb8:	mov	r3, r0
   17ebc:	cmp	r3, #0
   17ec0:	beq	17ec8 <codadump_filter_get_next_filter@@Base+0x704>
   17ec4:	bl	1aeb8 <handle_coda_error@@Base>
   17ec8:	movw	r0, #56536	; 0xdcd8
   17ecc:	movt	r0, #1
   17ed0:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17ed4:	sub	r3, fp, #101	; 0x65
   17ed8:	mov	r1, #1
   17edc:	mov	r0, r3
   17ee0:	bl	1787c <codadump_filter_get_next_filter@@Base+0xb8>
   17ee4:	movw	r0, #56536	; 0xdcd8
   17ee8:	movt	r0, #1
   17eec:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17ef0:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   17ef4:	sub	r3, fp, #108	; 0x6c
   17ef8:	mov	r1, r3
   17efc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17f00:	bl	12400 <coda_cursor_get_string_length@plt>
   17f04:	mov	r3, r0
   17f08:	cmp	r3, #0
   17f0c:	beq	17f14 <codadump_filter_get_next_filter@@Base+0x750>
   17f10:	bl	1aeb8 <handle_coda_error@@Base>
   17f14:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f18:	add	r3, r3, #1
   17f1c:	mov	r0, r3
   17f20:	bl	123a0 <malloc@plt>
   17f24:	mov	r3, r0
   17f28:	str	r3, [fp, #-44]	; 0xffffffd4
   17f2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17f30:	cmp	r3, #0
   17f34:	bne	17f64 <codadump_filter_get_next_filter@@Base+0x7a0>
   17f38:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f3c:	add	r2, r3, #1
   17f40:	movw	r3, #303	; 0x12f
   17f44:	str	r3, [sp]
   17f48:	movw	r3, #56540	; 0xdcdc
   17f4c:	movt	r3, #1
   17f50:	movw	r1, #56624	; 0xdd30
   17f54:	movt	r1, #1
   17f58:	mvn	r0, #0
   17f5c:	bl	12220 <coda_set_error@plt>
   17f60:	bl	1aeb8 <handle_coda_error@@Base>
   17f64:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f68:	add	r3, r3, #1
   17f6c:	mov	r2, r3
   17f70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f74:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17f78:	bl	123c4 <coda_cursor_read_string@plt>
   17f7c:	mov	r3, r0
   17f80:	cmp	r3, #0
   17f84:	beq	17f8c <codadump_filter_get_next_filter@@Base+0x7c8>
   17f88:	bl	1aeb8 <handle_coda_error@@Base>
   17f8c:	movw	r0, #56536	; 0xdcd8
   17f90:	movt	r0, #1
   17f94:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17f98:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f9c:	mov	r1, r3
   17fa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17fa4:	bl	1787c <codadump_filter_get_next_filter@@Base+0xb8>
   17fa8:	ldr	r3, [fp, #-108]	; 0xffffff94
   17fac:	mov	r1, r3
   17fb0:	movw	r0, #56536	; 0xdcd8
   17fb4:	movt	r0, #1
   17fb8:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   17fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17fc0:	bl	12268 <free@plt>
   17fc4:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   17fc8:	sub	r3, fp, #116	; 0x74
   17fcc:	mov	r1, r3
   17fd0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   17fd4:	bl	12580 <coda_cursor_get_bit_size@plt>
   17fd8:	mov	r3, r0
   17fdc:	cmp	r3, #0
   17fe0:	beq	17fe8 <codadump_filter_get_next_filter@@Base+0x824>
   17fe4:	bl	1aeb8 <handle_coda_error@@Base>
   17fe8:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   17fec:	mov	r2, #0
   17ff0:	mov	r3, #0
   17ff4:	lsr	r2, r0, #3
   17ff8:	orr	r2, r2, r1, lsl #29
   17ffc:	asr	r3, r1, #3
   18000:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   18004:	mov	r8, #7
   18008:	mov	r9, #0
   1800c:	and	r6, r0, r8
   18010:	and	r7, r1, r9
   18014:	orrs	r1, r6, r7
   18018:	beq	18028 <codadump_filter_get_next_filter@@Base+0x864>
   1801c:	mov	r0, #1
   18020:	mov	r1, #0
   18024:	b	18030 <codadump_filter_get_next_filter@@Base+0x86c>
   18028:	mov	r0, #0
   1802c:	mov	r1, #0
   18030:	adds	r4, r0, r2
   18034:	adc	r5, r1, r3
   18038:	strd	r4, [fp, #-52]	; 0xffffffcc
   1803c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18040:	mov	r0, r3
   18044:	bl	123a0 <malloc@plt>
   18048:	mov	r3, r0
   1804c:	str	r3, [fp, #-56]	; 0xffffffc8
   18050:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18054:	cmp	r3, #0
   18058:	bne	18084 <codadump_filter_get_next_filter@@Base+0x8c0>
   1805c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18060:	movw	r3, #334	; 0x14e
   18064:	str	r3, [sp]
   18068:	movw	r3, #56540	; 0xdcdc
   1806c:	movt	r3, #1
   18070:	movw	r1, #56624	; 0xdd30
   18074:	movt	r1, #1
   18078:	mvn	r0, #0
   1807c:	bl	12220 <coda_set_error@plt>
   18080:	bl	1aeb8 <handle_coda_error@@Base>
   18084:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   18088:	strd	r2, [sp]
   1808c:	mov	r2, #0
   18090:	mov	r3, #0
   18094:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18098:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1809c:	bl	1261c <coda_cursor_read_bits@plt>
   180a0:	mov	r3, r0
   180a4:	cmp	r3, #0
   180a8:	beq	180b0 <codadump_filter_get_next_filter@@Base+0x8ec>
   180ac:	bl	1aeb8 <handle_coda_error@@Base>
   180b0:	movw	r0, #56536	; 0xdcd8
   180b4:	movt	r0, #1
   180b8:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   180bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   180c0:	mov	r1, r3
   180c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   180c8:	bl	1787c <codadump_filter_get_next_filter@@Base+0xb8>
   180cc:	movw	r0, #56536	; 0xdcd8
   180d0:	movt	r0, #1
   180d4:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   180d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   180dc:	bl	12268 <free@plt>
   180e0:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   180e4:	sub	r3, fp, #120	; 0x78
   180e8:	mov	r1, r3
   180ec:	ldr	r0, [fp, #-304]	; 0xfffffed0
   180f0:	bl	125bc <coda_cursor_read_int32@plt>
   180f4:	mov	r3, r0
   180f8:	cmp	r3, #0
   180fc:	beq	18104 <codadump_filter_get_next_filter@@Base+0x940>
   18100:	bl	1aeb8 <handle_coda_error@@Base>
   18104:	ldr	r3, [fp, #-120]	; 0xffffff88
   18108:	mov	r1, r3
   1810c:	movw	r0, #56680	; 0xdd68
   18110:	movt	r0, #1
   18114:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18118:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   1811c:	sub	r3, fp, #124	; 0x7c
   18120:	mov	r1, r3
   18124:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18128:	bl	1228c <coda_cursor_read_uint32@plt>
   1812c:	mov	r3, r0
   18130:	cmp	r3, #0
   18134:	beq	1813c <codadump_filter_get_next_filter@@Base+0x978>
   18138:	bl	1aeb8 <handle_coda_error@@Base>
   1813c:	ldr	r3, [fp, #-124]	; 0xffffff84
   18140:	mov	r1, r3
   18144:	movw	r0, #56684	; 0xdd6c
   18148:	movt	r0, #1
   1814c:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18150:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   18154:	sub	r3, fp, #132	; 0x84
   18158:	mov	r1, r3
   1815c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18160:	bl	12520 <coda_cursor_read_int64@plt>
   18164:	mov	r3, r0
   18168:	cmp	r3, #0
   1816c:	beq	18174 <codadump_filter_get_next_filter@@Base+0x9b0>
   18170:	bl	1aeb8 <handle_coda_error@@Base>
   18174:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   18178:	sub	r3, fp, #156	; 0x9c
   1817c:	mov	r2, r3
   18180:	bl	12628 <coda_str64@plt>
   18184:	sub	r3, fp, #156	; 0x9c
   18188:	mov	r1, r3
   1818c:	movw	r0, #56688	; 0xdd70
   18190:	movt	r0, #1
   18194:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18198:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   1819c:	sub	r3, fp, #164	; 0xa4
   181a0:	mov	r1, r3
   181a4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   181a8:	bl	1240c <coda_cursor_read_uint64@plt>
   181ac:	mov	r3, r0
   181b0:	cmp	r3, #0
   181b4:	beq	181bc <codadump_filter_get_next_filter@@Base+0x9f8>
   181b8:	bl	1aeb8 <handle_coda_error@@Base>
   181bc:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   181c0:	sub	r3, fp, #188	; 0xbc
   181c4:	mov	r2, r3
   181c8:	bl	1225c <coda_str64u@plt>
   181cc:	sub	r3, fp, #188	; 0xbc
   181d0:	mov	r1, r3
   181d4:	movw	r0, #56688	; 0xdd70
   181d8:	movt	r0, #1
   181dc:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   181e0:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   181e4:	sub	r3, fp, #196	; 0xc4
   181e8:	mov	r1, r3
   181ec:	ldr	r0, [fp, #-304]	; 0xfffffed0
   181f0:	bl	12418 <coda_cursor_read_double@plt>
   181f4:	mov	r3, r0
   181f8:	cmp	r3, #0
   181fc:	beq	18204 <codadump_filter_get_next_filter@@Base+0xa40>
   18200:	bl	1aeb8 <handle_coda_error@@Base>
   18204:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18208:	cmp	r3, #8
   1820c:	bne	18224 <codadump_filter_get_next_filter@@Base+0xa60>
   18210:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   18214:	movw	r0, #56692	; 0xdd74
   18218:	movt	r0, #1
   1821c:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18220:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   18224:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   18228:	movw	r0, #56700	; 0xdd7c
   1822c:	movt	r0, #1
   18230:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18234:	b	18248 <codadump_filter_get_next_filter@@Base+0xa84>
   18238:	movw	r0, #56708	; 0xdd84
   1823c:	movt	r0, #1
   18240:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18244:	nop	{0}
   18248:	b	183d8 <codadump_filter_get_next_filter@@Base+0xc14>
   1824c:	sub	r3, fp, #200	; 0xc8
   18250:	mov	r1, r3
   18254:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18258:	bl	12334 <coda_cursor_get_special_type@plt>
   1825c:	mov	r3, r0
   18260:	cmp	r3, #0
   18264:	beq	1826c <codadump_filter_get_next_filter@@Base+0xaa8>
   18268:	bl	1aeb8 <handle_coda_error@@Base>
   1826c:	ldr	r3, [fp, #-200]	; 0xffffff38
   18270:	cmp	r3, #3
   18274:	ldrls	pc, [pc, r3, lsl #2]
   18278:	b	183e0 <codadump_filter_get_next_filter@@Base+0xc1c>
   1827c:	andeq	r8, r1, ip, lsl #5
   18280:	muleq	r1, ip, r2
   18284:	ldrdeq	r8, [r1], -r0
   18288:	andeq	r8, r1, r4, lsl #7
   1828c:	movw	r0, #56708	; 0xdd84
   18290:	movt	r0, #1
   18294:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18298:	b	183d4 <codadump_filter_get_next_filter@@Base+0xc10>
   1829c:	sub	r3, fp, #212	; 0xd4
   182a0:	mov	r1, r3
   182a4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   182a8:	bl	12418 <coda_cursor_read_double@plt>
   182ac:	mov	r3, r0
   182b0:	cmp	r3, #0
   182b4:	beq	182bc <codadump_filter_get_next_filter@@Base+0xaf8>
   182b8:	bl	1aeb8 <handle_coda_error@@Base>
   182bc:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   182c0:	movw	r0, #56700	; 0xdd7c
   182c4:	movt	r0, #1
   182c8:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   182cc:	b	183d4 <codadump_filter_get_next_filter@@Base+0xc10>
   182d0:	sub	r3, fp, #220	; 0xdc
   182d4:	mov	r1, r3
   182d8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   182dc:	bl	12418 <coda_cursor_read_double@plt>
   182e0:	mov	r3, r0
   182e4:	cmp	r3, #0
   182e8:	beq	182f0 <codadump_filter_get_next_filter@@Base+0xb2c>
   182ec:	bl	1aeb8 <handle_coda_error@@Base>
   182f0:	vldr	d7, [fp, #-220]	; 0xffffff24
   182f4:	vmov.f64	d0, d7
   182f8:	bl	12424 <coda_isNaN@plt>
   182fc:	mov	r3, r0
   18300:	cmp	r3, #0
   18304:	bne	18320 <codadump_filter_get_next_filter@@Base+0xb5c>
   18308:	vldr	d7, [fp, #-220]	; 0xffffff24
   1830c:	vmov.f64	d0, d7
   18310:	bl	122c8 <coda_isInf@plt>
   18314:	mov	r3, r0
   18318:	cmp	r3, #0
   1831c:	beq	18334 <codadump_filter_get_next_filter@@Base+0xb70>
   18320:	ldrd	r2, [fp, #-220]	; 0xffffff24
   18324:	movw	r0, #56700	; 0xdd7c
   18328:	movt	r0, #1
   1832c:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18330:	b	183d4 <codadump_filter_get_next_filter@@Base+0xc10>
   18334:	vldr	d7, [fp, #-220]	; 0xffffff24
   18338:	sub	r3, fp, #248	; 0xf8
   1833c:	mov	r1, r3
   18340:	movw	r0, #56716	; 0xdd8c
   18344:	movt	r0, #1
   18348:	vmov.f64	d0, d7
   1834c:	bl	12244 <coda_time_double_to_string@plt>
   18350:	mov	r3, r0
   18354:	cmp	r3, #0
   18358:	beq	1836c <codadump_filter_get_next_filter@@Base+0xba8>
   1835c:	movw	r0, #56748	; 0xddac
   18360:	movt	r0, #1
   18364:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18368:	b	183d4 <codadump_filter_get_next_filter@@Base+0xc10>
   1836c:	sub	r3, fp, #248	; 0xf8
   18370:	mov	r1, r3
   18374:	movw	r0, #56776	; 0xddc8
   18378:	movt	r0, #1
   1837c:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18380:	b	183d4 <codadump_filter_get_next_filter@@Base+0xc10>
   18384:	sub	r2, fp, #268	; 0x10c
   18388:	sub	r3, fp, #260	; 0x104
   1838c:	mov	r1, r3
   18390:	ldr	r0, [fp, #-304]	; 0xfffffed0
   18394:	bl	124c0 <coda_cursor_read_complex_double_split@plt>
   18398:	mov	r3, r0
   1839c:	cmp	r3, #0
   183a0:	beq	183a8 <codadump_filter_get_next_filter@@Base+0xbe4>
   183a4:	bl	1aeb8 <handle_coda_error@@Base>
   183a8:	sub	r1, fp, #260	; 0x104
   183ac:	ldrd	r0, [r1]
   183b0:	sub	r3, fp, #268	; 0x10c
   183b4:	ldrd	r2, [r3]
   183b8:	strd	r2, [sp]
   183bc:	mov	r2, r0
   183c0:	mov	r3, r1
   183c4:	movw	r0, #56784	; 0xddd0
   183c8:	movt	r0, #1
   183cc:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   183d0:	nop	{0}
   183d4:	b	183e0 <codadump_filter_get_next_filter@@Base+0xc1c>
   183d8:	nop	{0}
   183dc:	b	183e4 <codadump_filter_get_next_filter@@Base+0xc20>
   183e0:	nop	{0}
   183e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   183e8:	cmp	r3, #0
   183ec:	beq	183fc <codadump_filter_get_next_filter@@Base+0xc38>
   183f0:	movw	r0, #56524	; 0xdccc
   183f4:	movt	r0, #1
   183f8:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   183fc:	nop	{0}
   18400:	sub	sp, fp, #28
   18404:	ldrd	r4, [sp]
   18408:	ldrd	r6, [sp, #8]
   1840c:	ldrd	r8, [sp, #16]
   18410:	ldr	fp, [sp, #24]
   18414:	add	sp, sp, #28
   18418:	pop	{pc}		; (ldr pc, [sp], #4)

0001841c <print_json_data@@Base>:
   1841c:	str	fp, [sp, #-8]!
   18420:	str	lr, [sp, #4]
   18424:	add	fp, sp, #4
   18428:	sub	sp, sp, #536	; 0x218
   1842c:	str	r0, [fp, #-536]	; 0xfffffde8
   18430:	movw	r3, #456	; 0x1c8
   18434:	movt	r3, #3
   18438:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1843c:	str	r2, [r3]
   18440:	movw	r3, #496	; 0x1f0
   18444:	movt	r3, #3
   18448:	ldr	r3, [r3]
   1844c:	sub	r2, fp, #12
   18450:	mov	r1, r2
   18454:	mov	r0, r3
   18458:	bl	1222c <coda_open@plt>
   1845c:	str	r0, [fp, #-8]
   18460:	ldr	r3, [fp, #-8]
   18464:	cmp	r3, #0
   18468:	beq	184b0 <print_json_data@@Base+0x94>
   1846c:	bl	125e0 <coda_get_errno@plt>
   18470:	mov	r3, r0
   18474:	ldr	r3, [r3]
   18478:	cmn	r3, #21
   1847c:	bne	184b0 <print_json_data@@Base+0x94>
   18480:	mov	r0, #0
   18484:	bl	12274 <coda_set_option_use_mmap@plt>
   18488:	movw	r3, #496	; 0x1f0
   1848c:	movt	r3, #3
   18490:	ldr	r3, [r3]
   18494:	sub	r2, fp, #12
   18498:	mov	r1, r2
   1849c:	mov	r0, r3
   184a0:	bl	1222c <coda_open@plt>
   184a4:	str	r0, [fp, #-8]
   184a8:	mov	r0, #1
   184ac:	bl	12274 <coda_set_option_use_mmap@plt>
   184b0:	ldr	r3, [fp, #-8]
   184b4:	cmp	r3, #0
   184b8:	beq	184c0 <print_json_data@@Base+0xa4>
   184bc:	bl	1aeb8 <handle_coda_error@@Base>
   184c0:	ldr	r2, [fp, #-12]
   184c4:	sub	r3, fp, #532	; 0x214
   184c8:	mov	r1, r2
   184cc:	mov	r0, r3
   184d0:	bl	12358 <coda_cursor_set_product@plt>
   184d4:	mov	r3, r0
   184d8:	cmp	r3, #0
   184dc:	beq	184e4 <print_json_data@@Base+0xc8>
   184e0:	bl	1aeb8 <handle_coda_error@@Base>
   184e4:	movw	r3, #4272	; 0x10b0
   184e8:	movt	r3, #3
   184ec:	ldr	r3, [r3]
   184f0:	cmp	r3, #0
   184f4:	beq	18528 <print_json_data@@Base+0x10c>
   184f8:	movw	r3, #4272	; 0x10b0
   184fc:	movt	r3, #3
   18500:	ldr	r2, [r3]
   18504:	sub	r3, fp, #532	; 0x214
   18508:	mov	r1, r2
   1850c:	mov	r0, r3
   18510:	bl	12538 <coda_cursor_goto@plt>
   18514:	str	r0, [fp, #-8]
   18518:	ldr	r3, [fp, #-8]
   1851c:	cmp	r3, #0
   18520:	beq	18528 <print_json_data@@Base+0x10c>
   18524:	bl	1aeb8 <handle_coda_error@@Base>
   18528:	mov	r0, #0
   1852c:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   18530:	sub	r3, fp, #532	; 0x214
   18534:	mov	r0, r3
   18538:	bl	179e4 <codadump_filter_get_next_filter@@Base+0x220>
   1853c:	movw	r0, #56796	; 0xdddc
   18540:	movt	r0, #1
   18544:	bl	17820 <codadump_filter_get_next_filter@@Base+0x5c>
   18548:	ldr	r3, [fp, #-12]
   1854c:	mov	r0, r3
   18550:	bl	12514 <coda_close@plt>
   18554:	nop	{0}
   18558:	sub	sp, fp, #4
   1855c:	ldr	fp, [sp]
   18560:	add	sp, sp, #4
   18564:	pop	{pc}		; (ldr pc, [sp], #4)
   18568:	str	fp, [sp, #-8]!
   1856c:	str	lr, [sp, #4]
   18570:	add	fp, sp, #4
   18574:	sub	sp, sp, #16
   18578:	str	r0, [fp, #-16]
   1857c:	str	r1, [fp, #-20]	; 0xffffffec
   18580:	ldr	r2, [fp, #-20]	; 0xffffffec
   18584:	mov	r3, r2
   18588:	lsl	r3, r3, #2
   1858c:	add	r3, r3, r2
   18590:	lsl	r3, r3, #4
   18594:	add	r2, r3, #800	; 0x320
   18598:	movw	r3, #496	; 0x1f0
   1859c:	movt	r3, #3
   185a0:	add	r3, r2, r3
   185a4:	str	r3, [fp, #-12]
   185a8:	mov	r3, #0
   185ac:	str	r3, [fp, #-8]
   185b0:	b	18700 <print_json_data@@Base+0x2e4>
   185b4:	ldr	r3, [fp, #-8]
   185b8:	cmp	r3, #0
   185bc:	ble	185cc <print_json_data@@Base+0x1b0>
   185c0:	ldr	r1, [fp, #-16]
   185c4:	mov	r0, #44	; 0x2c
   185c8:	bl	12568 <fputc@plt>
   185cc:	movw	r3, #492	; 0x1ec
   185d0:	movt	r3, #3
   185d4:	ldr	r3, [r3]
   185d8:	cmp	r3, #0
   185dc:	beq	186a8 <print_json_data@@Base+0x28c>
   185e0:	ldr	r3, [fp, #-12]
   185e4:	ldr	r2, [r3]
   185e8:	ldr	r3, [fp, #-8]
   185ec:	add	r2, r2, r3
   185f0:	movw	r3, #4280	; 0x10b8
   185f4:	movt	r3, #3
   185f8:	add	r2, r2, #18
   185fc:	ldr	r3, [r3, r2, lsl #2]
   18600:	cmp	r3, #0
   18604:	beq	1866c <print_json_data@@Base+0x250>
   18608:	ldr	r3, [fp, #-12]
   1860c:	ldr	r2, [r3]
   18610:	ldr	r3, [fp, #-8]
   18614:	add	r3, r2, r3
   18618:	movw	r2, #4280	; 0x10b8
   1861c:	movt	r2, #3
   18620:	add	r3, r3, #8
   18624:	lsl	r3, r3, #2
   18628:	add	r3, r2, r3
   1862c:	ldr	r1, [r3, #4]
   18630:	ldr	r3, [fp, #-12]
   18634:	ldr	r2, [r3]
   18638:	ldr	r3, [fp, #-8]
   1863c:	add	r3, r2, r3
   18640:	movw	r2, #4280	; 0x10b8
   18644:	movt	r2, #3
   18648:	lsl	r3, r3, #2
   1864c:	add	r3, r2, r3
   18650:	ldr	r3, [r3, #4]
   18654:	mov	r2, r1
   18658:	movw	r1, #56800	; 0xdde0
   1865c:	movt	r1, #1
   18660:	ldr	r0, [fp, #-16]
   18664:	bl	12430 <fprintf@plt>
   18668:	b	186f4 <print_json_data@@Base+0x2d8>
   1866c:	ldr	r3, [fp, #-12]
   18670:	ldr	r2, [r3]
   18674:	ldr	r3, [fp, #-8]
   18678:	add	r3, r2, r3
   1867c:	movw	r2, #4280	; 0x10b8
   18680:	movt	r2, #3
   18684:	lsl	r3, r3, #2
   18688:	add	r3, r2, r3
   1868c:	ldr	r3, [r3, #4]
   18690:	mov	r2, r3
   18694:	movw	r1, #56808	; 0xdde8
   18698:	movt	r1, #1
   1869c:	ldr	r0, [fp, #-16]
   186a0:	bl	12430 <fprintf@plt>
   186a4:	b	186f4 <print_json_data@@Base+0x2d8>
   186a8:	ldr	r3, [fp, #-12]
   186ac:	ldr	r2, [fp, #-8]
   186b0:	add	r2, r2, #2
   186b4:	ldr	r3, [r3, r2, lsl #2]
   186b8:	cmn	r3, #1
   186bc:	bne	186d0 <print_json_data@@Base+0x2b4>
   186c0:	ldr	r1, [fp, #-16]
   186c4:	mov	r0, #63	; 0x3f
   186c8:	bl	12568 <fputc@plt>
   186cc:	b	186f4 <print_json_data@@Base+0x2d8>
   186d0:	ldr	r3, [fp, #-12]
   186d4:	ldr	r2, [fp, #-8]
   186d8:	add	r2, r2, #2
   186dc:	ldr	r3, [r3, r2, lsl #2]
   186e0:	mov	r2, r3
   186e4:	movw	r1, #56808	; 0xdde8
   186e8:	movt	r1, #1
   186ec:	ldr	r0, [fp, #-16]
   186f0:	bl	12430 <fprintf@plt>
   186f4:	ldr	r3, [fp, #-8]
   186f8:	add	r3, r3, #1
   186fc:	str	r3, [fp, #-8]
   18700:	ldr	r3, [fp, #-12]
   18704:	ldr	r3, [r3, #4]
   18708:	ldr	r2, [fp, #-8]
   1870c:	cmp	r2, r3
   18710:	blt	185b4 <print_json_data@@Base+0x198>
   18714:	nop	{0}
   18718:	sub	sp, fp, #4
   1871c:	ldr	fp, [sp]
   18720:	add	sp, sp, #4
   18724:	pop	{pc}		; (ldr pc, [sp], #4)

00018728 <print_full_field_name@@Base>:
   18728:	str	fp, [sp, #-8]!
   1872c:	str	lr, [sp, #4]
   18730:	add	fp, sp, #4
   18734:	sub	sp, sp, #40	; 0x28
   18738:	str	r0, [fp, #-32]	; 0xffffffe0
   1873c:	str	r1, [fp, #-36]	; 0xffffffdc
   18740:	str	r2, [fp, #-40]	; 0xffffffd8
   18744:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18748:	cmp	r3, #1
   1874c:	bne	188e4 <print_full_field_name@@Base+0x1bc>
   18750:	mov	r3, #0
   18754:	str	r3, [fp, #-12]
   18758:	mov	r3, #0
   1875c:	str	r3, [fp, #-16]
   18760:	mov	r3, #0
   18764:	str	r3, [fp, #-8]
   18768:	b	18880 <print_full_field_name@@Base+0x158>
   1876c:	movw	r3, #496	; 0x1f0
   18770:	movt	r3, #3
   18774:	ldr	r2, [fp, #-8]
   18778:	add	r2, r2, #2
   1877c:	ldr	r3, [r3, r2, lsl #2]
   18780:	sub	r2, fp, #24
   18784:	mov	r1, r2
   18788:	mov	r0, r3
   1878c:	bl	12640 <coda_type_get_class@plt>
   18790:	mov	r3, r0
   18794:	cmp	r3, #0
   18798:	beq	187a0 <print_full_field_name@@Base+0x78>
   1879c:	bl	1aeb8 <handle_coda_error@@Base>
   187a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187a4:	cmp	r3, #0
   187a8:	beq	187b8 <print_full_field_name@@Base+0x90>
   187ac:	cmp	r3, #1
   187b0:	beq	187f8 <print_full_field_name@@Base+0xd0>
   187b4:	b	18874 <print_full_field_name@@Base+0x14c>
   187b8:	movw	r2, #496	; 0x1f0
   187bc:	movt	r2, #3
   187c0:	ldr	r3, [fp, #-12]
   187c4:	add	r3, r3, #904	; 0x388
   187c8:	lsl	r3, r3, #2
   187cc:	add	r3, r2, r3
   187d0:	ldr	r3, [r3, #4]
   187d4:	mov	r2, r3
   187d8:	movw	r1, #56812	; 0xddec
   187dc:	movt	r1, #1
   187e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187e4:	bl	12430 <fprintf@plt>
   187e8:	ldr	r3, [fp, #-12]
   187ec:	add	r3, r3, #1
   187f0:	str	r3, [fp, #-12]
   187f4:	b	18874 <print_full_field_name@@Base+0x14c>
   187f8:	ldr	r3, [fp, #-8]
   187fc:	cmp	r3, #0
   18800:	bne	18810 <print_full_field_name@@Base+0xe8>
   18804:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18808:	mov	r0, #47	; 0x2f
   1880c:	bl	12568 <fputc@plt>
   18810:	movw	r2, #496	; 0x1f0
   18814:	movt	r2, #3
   18818:	ldr	r1, [fp, #-16]
   1881c:	mov	r3, r1
   18820:	lsl	r3, r3, #2
   18824:	add	r3, r3, r1
   18828:	lsl	r3, r3, #4
   1882c:	add	r3, r2, r3
   18830:	add	r3, r3, #804	; 0x324
   18834:	ldr	r3, [r3]
   18838:	cmp	r3, #0
   1883c:	ble	18864 <print_full_field_name@@Base+0x13c>
   18840:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18844:	mov	r0, #91	; 0x5b
   18848:	bl	12568 <fputc@plt>
   1884c:	ldr	r1, [fp, #-16]
   18850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18854:	bl	18568 <print_json_data@@Base+0x14c>
   18858:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1885c:	mov	r0, #93	; 0x5d
   18860:	bl	12568 <fputc@plt>
   18864:	ldr	r3, [fp, #-16]
   18868:	add	r3, r3, #1
   1886c:	str	r3, [fp, #-16]
   18870:	nop	{0}
   18874:	ldr	r3, [fp, #-8]
   18878:	add	r3, r3, #1
   1887c:	str	r3, [fp, #-8]
   18880:	movw	r3, #496	; 0x1f0
   18884:	movt	r3, #3
   18888:	ldr	r3, [r3, #136]	; 0x88
   1888c:	ldr	r2, [fp, #-8]
   18890:	cmp	r2, r3
   18894:	blt	1876c <print_full_field_name@@Base+0x44>
   18898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1889c:	cmp	r3, #0
   188a0:	beq	18b24 <print_full_field_name@@Base+0x3fc>
   188a4:	movw	r3, #496	; 0x1f0
   188a8:	movt	r3, #3
   188ac:	ldr	r3, [r3, #3360]	; 0xd20
   188b0:	ldr	r2, [fp, #-16]
   188b4:	cmp	r2, r3
   188b8:	bge	18b24 <print_full_field_name@@Base+0x3fc>
   188bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   188c0:	mov	r0, #91	; 0x5b
   188c4:	bl	12568 <fputc@plt>
   188c8:	ldr	r1, [fp, #-16]
   188cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188d0:	bl	18568 <print_json_data@@Base+0x14c>
   188d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   188d8:	mov	r0, #93	; 0x5d
   188dc:	bl	12568 <fputc@plt>
   188e0:	b	18b24 <print_full_field_name@@Base+0x3fc>
   188e4:	mov	r3, #0
   188e8:	str	r3, [fp, #-8]
   188ec:	b	1893c <print_full_field_name@@Base+0x214>
   188f0:	ldr	r3, [fp, #-8]
   188f4:	cmp	r3, #0
   188f8:	ble	18908 <print_full_field_name@@Base+0x1e0>
   188fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18900:	mov	r0, #46	; 0x2e
   18904:	bl	12568 <fputc@plt>
   18908:	movw	r2, #496	; 0x1f0
   1890c:	movt	r2, #3
   18910:	ldr	r3, [fp, #-8]
   18914:	add	r3, r3, #904	; 0x388
   18918:	lsl	r3, r3, #2
   1891c:	add	r3, r2, r3
   18920:	ldr	r3, [r3, #4]
   18924:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18928:	mov	r0, r3
   1892c:	bl	12604 <fputs@plt>
   18930:	ldr	r3, [fp, #-8]
   18934:	add	r3, r3, #1
   18938:	str	r3, [fp, #-8]
   1893c:	movw	r3, #496	; 0x1f0
   18940:	movt	r3, #3
   18944:	ldr	r3, [r3, #3748]	; 0xea4
   18948:	ldr	r2, [fp, #-8]
   1894c:	cmp	r2, r3
   18950:	blt	188f0 <print_full_field_name@@Base+0x1c8>
   18954:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18958:	cmp	r3, #2
   1895c:	bne	18b24 <print_full_field_name@@Base+0x3fc>
   18960:	mov	r3, #0
   18964:	str	r3, [fp, #-20]	; 0xffffffec
   18968:	mov	r3, #0
   1896c:	str	r3, [fp, #-8]
   18970:	b	18a60 <print_full_field_name@@Base+0x338>
   18974:	movw	r3, #496	; 0x1f0
   18978:	movt	r3, #3
   1897c:	ldr	r2, [fp, #-8]
   18980:	add	r2, r2, #2
   18984:	ldr	r3, [r3, r2, lsl #2]
   18988:	sub	r2, fp, #28
   1898c:	mov	r1, r2
   18990:	mov	r0, r3
   18994:	bl	12640 <coda_type_get_class@plt>
   18998:	mov	r3, r0
   1899c:	cmp	r3, #0
   189a0:	beq	189a8 <print_full_field_name@@Base+0x280>
   189a4:	bl	1aeb8 <handle_coda_error@@Base>
   189a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   189ac:	cmp	r3, #1
   189b0:	bne	18a54 <print_full_field_name@@Base+0x32c>
   189b4:	movw	r2, #496	; 0x1f0
   189b8:	movt	r2, #3
   189bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   189c0:	mov	r3, r1
   189c4:	lsl	r3, r3, #2
   189c8:	add	r3, r3, r1
   189cc:	lsl	r3, r3, #4
   189d0:	add	r3, r2, r3
   189d4:	add	r3, r3, #804	; 0x324
   189d8:	ldr	r3, [r3]
   189dc:	cmp	r3, #0
   189e0:	ble	18a54 <print_full_field_name@@Base+0x32c>
   189e4:	movw	r2, #496	; 0x1f0
   189e8:	movt	r2, #3
   189ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   189f0:	mov	r3, r1
   189f4:	lsl	r3, r3, #2
   189f8:	add	r3, r3, r1
   189fc:	lsl	r3, r3, #4
   18a00:	add	r3, r2, r3
   18a04:	add	r3, r3, #800	; 0x320
   18a08:	ldr	r3, [r3]
   18a0c:	cmp	r3, #0
   18a10:	bne	18a30 <print_full_field_name@@Base+0x308>
   18a14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a18:	mov	r2, #2
   18a1c:	mov	r1, #1
   18a20:	movw	r0, #56816	; 0xddf0
   18a24:	movt	r0, #1
   18a28:	bl	1234c <fwrite@plt>
   18a2c:	b	18a3c <print_full_field_name@@Base+0x314>
   18a30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18a34:	mov	r0, #44	; 0x2c
   18a38:	bl	12568 <fputc@plt>
   18a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a44:	bl	18568 <print_json_data@@Base+0x14c>
   18a48:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a4c:	add	r3, r3, #1
   18a50:	str	r3, [fp, #-20]	; 0xffffffec
   18a54:	ldr	r3, [fp, #-8]
   18a58:	add	r3, r3, #1
   18a5c:	str	r3, [fp, #-8]
   18a60:	movw	r3, #496	; 0x1f0
   18a64:	movt	r3, #3
   18a68:	ldr	r3, [r3, #136]	; 0x88
   18a6c:	ldr	r2, [fp, #-8]
   18a70:	cmp	r2, r3
   18a74:	blt	18974 <print_full_field_name@@Base+0x24c>
   18a78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a7c:	cmp	r3, #0
   18a80:	beq	18b0c <print_full_field_name@@Base+0x3e4>
   18a84:	movw	r3, #496	; 0x1f0
   18a88:	movt	r3, #3
   18a8c:	ldr	r3, [r3, #3360]	; 0xd20
   18a90:	ldr	r2, [fp, #-20]	; 0xffffffec
   18a94:	cmp	r2, r3
   18a98:	bge	18b0c <print_full_field_name@@Base+0x3e4>
   18a9c:	movw	r2, #496	; 0x1f0
   18aa0:	movt	r2, #3
   18aa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18aa8:	mov	r3, r1
   18aac:	lsl	r3, r3, #2
   18ab0:	add	r3, r3, r1
   18ab4:	lsl	r3, r3, #4
   18ab8:	add	r3, r2, r3
   18abc:	add	r3, r3, #800	; 0x320
   18ac0:	ldr	r3, [r3]
   18ac4:	cmp	r3, #0
   18ac8:	bne	18ae8 <print_full_field_name@@Base+0x3c0>
   18acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ad0:	mov	r2, #2
   18ad4:	mov	r1, #1
   18ad8:	movw	r0, #56816	; 0xddf0
   18adc:	movt	r0, #1
   18ae0:	bl	1234c <fwrite@plt>
   18ae4:	b	18af4 <print_full_field_name@@Base+0x3cc>
   18ae8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18aec:	mov	r0, #44	; 0x2c
   18af0:	bl	12568 <fputc@plt>
   18af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18af8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18afc:	bl	18568 <print_json_data@@Base+0x14c>
   18b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b04:	add	r3, r3, #1
   18b08:	str	r3, [fp, #-20]	; 0xffffffec
   18b0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b10:	cmp	r3, #0
   18b14:	ble	18b24 <print_full_field_name@@Base+0x3fc>
   18b18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18b1c:	mov	r0, #93	; 0x5d
   18b20:	bl	12568 <fputc@plt>
   18b24:	nop	{0}
   18b28:	sub	sp, fp, #4
   18b2c:	ldr	fp, [sp]
   18b30:	add	sp, sp, #4
   18b34:	pop	{pc}		; (ldr pc, [sp], #4)

00018b38 <traverse_info_init@@Base>:
   18b38:	push	{fp}		; (str fp, [sp, #-4]!)
   18b3c:	add	fp, sp, #0
   18b40:	movw	r3, #496	; 0x1f0
   18b44:	movt	r3, #3
   18b48:	mov	r2, #0
   18b4c:	str	r2, [r3, #4]
   18b50:	movw	r3, #496	; 0x1f0
   18b54:	movt	r3, #3
   18b58:	mov	r2, #0
   18b5c:	str	r2, [r3, #136]	; 0x88
   18b60:	movw	r3, #496	; 0x1f0
   18b64:	movt	r3, #3
   18b68:	mov	r2, #0
   18b6c:	str	r2, [r3, #3360]	; 0xd20
   18b70:	movw	r3, #496	; 0x1f0
   18b74:	movt	r3, #3
   18b78:	mov	r2, #0
   18b7c:	str	r2, [r3, #3748]	; 0xea4
   18b80:	nop	{0}
   18b84:	add	sp, fp, #0
   18b88:	pop	{fp}		; (ldr fp, [sp], #4)
   18b8c:	bx	lr

00018b90 <traverse_info_done@@Base>:
   18b90:	str	fp, [sp, #-8]!
   18b94:	str	lr, [sp, #4]
   18b98:	add	fp, sp, #4
   18b9c:	movw	r3, #496	; 0x1f0
   18ba0:	movt	r3, #3
   18ba4:	ldr	r3, [r3, #4]
   18ba8:	cmp	r3, #0
   18bac:	beq	18bc4 <traverse_info_done@@Base+0x34>
   18bb0:	movw	r3, #496	; 0x1f0
   18bb4:	movt	r3, #3
   18bb8:	ldr	r3, [r3, #4]
   18bbc:	mov	r0, r3
   18bc0:	bl	12514 <coda_close@plt>
   18bc4:	movw	r3, #496	; 0x1f0
   18bc8:	movt	r3, #3
   18bcc:	ldr	r3, [r3, #664]	; 0x298
   18bd0:	cmp	r3, #0
   18bd4:	beq	18be0 <traverse_info_done@@Base+0x50>
   18bd8:	ldr	r0, [pc, #20]	; 18bf4 <traverse_info_done@@Base+0x64>
   18bdc:	bl	17604 <codadump_filter_remove@@Base>
   18be0:	nop	{0}
   18be4:	sub	sp, fp, #4
   18be8:	ldr	fp, [sp]
   18bec:	add	sp, sp, #4
   18bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   18bf4:	andeq	r0, r3, r8, lsl #9
   18bf8:	str	fp, [sp, #-8]!
   18bfc:	str	lr, [sp, #4]
   18c00:	add	fp, sp, #4
   18c04:	sub	sp, sp, #24
   18c08:	movw	r3, #4268	; 0x10ac
   18c0c:	movt	r3, #3
   18c10:	ldr	r3, [r3]
   18c14:	cmp	r3, #0
   18c18:	bne	18f2c <traverse_info_done@@Base+0x39c>
   18c1c:	movw	r3, #444	; 0x1bc
   18c20:	movt	r3, #3
   18c24:	ldr	r3, [r3]
   18c28:	mov	r2, #0
   18c2c:	mov	r1, #1
   18c30:	mov	r0, r3
   18c34:	bl	18728 <print_full_field_name@@Base>
   18c38:	movw	r3, #4256	; 0x10a0
   18c3c:	movt	r3, #3
   18c40:	ldr	r3, [r3]
   18c44:	cmp	r3, #0
   18c48:	beq	18dd4 <traverse_info_done@@Base+0x244>
   18c4c:	movw	r3, #496	; 0x1f0
   18c50:	movt	r3, #3
   18c54:	ldr	r2, [r3, #136]	; 0x88
   18c58:	movw	r3, #496	; 0x1f0
   18c5c:	movt	r3, #3
   18c60:	add	r2, r2, #2
   18c64:	ldr	r3, [r3, r2, lsl #2]
   18c68:	sub	r2, fp, #12
   18c6c:	mov	r1, r2
   18c70:	mov	r0, r3
   18c74:	bl	12640 <coda_type_get_class@plt>
   18c78:	mov	r3, r0
   18c7c:	cmp	r3, #0
   18c80:	beq	18c88 <traverse_info_done@@Base+0xf8>
   18c84:	bl	1aeb8 <handle_coda_error@@Base>
   18c88:	ldr	r3, [fp, #-12]
   18c8c:	cmp	r3, #6
   18c90:	bne	18cf4 <traverse_info_done@@Base+0x164>
   18c94:	movw	r3, #496	; 0x1f0
   18c98:	movt	r3, #3
   18c9c:	ldr	r2, [r3, #136]	; 0x88
   18ca0:	movw	r3, #496	; 0x1f0
   18ca4:	movt	r3, #3
   18ca8:	add	r2, r2, #2
   18cac:	ldr	r3, [r3, r2, lsl #2]
   18cb0:	sub	r2, fp, #16
   18cb4:	mov	r1, r2
   18cb8:	mov	r0, r3
   18cbc:	bl	124a8 <coda_type_get_special_type@plt>
   18cc0:	mov	r3, r0
   18cc4:	cmp	r3, #0
   18cc8:	beq	18cd0 <traverse_info_done@@Base+0x140>
   18ccc:	bl	1aeb8 <handle_coda_error@@Base>
   18cd0:	ldr	r3, [fp, #-16]
   18cd4:	mov	r0, r3
   18cd8:	bl	121a8 <coda_type_get_special_type_name@plt>
   18cdc:	mov	r3, r0
   18ce0:	mov	r1, r3
   18ce4:	movw	r0, #56820	; 0xddf4
   18ce8:	movt	r0, #1
   18cec:	bl	121fc <printf@plt>
   18cf0:	b	18dd4 <traverse_info_done@@Base+0x244>
   18cf4:	movw	r3, #496	; 0x1f0
   18cf8:	movt	r3, #3
   18cfc:	ldr	r2, [r3, #136]	; 0x88
   18d00:	movw	r3, #496	; 0x1f0
   18d04:	movt	r3, #3
   18d08:	add	r2, r2, #2
   18d0c:	ldr	r3, [r3, r2, lsl #2]
   18d10:	sub	r2, fp, #20
   18d14:	mov	r1, r2
   18d18:	mov	r0, r3
   18d1c:	bl	123f4 <coda_type_get_read_type@plt>
   18d20:	mov	r3, r0
   18d24:	cmp	r3, #0
   18d28:	beq	18d30 <traverse_info_done@@Base+0x1a0>
   18d2c:	bl	1aeb8 <handle_coda_error@@Base>
   18d30:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d34:	mov	r0, r3
   18d38:	bl	124f0 <coda_type_get_native_type_name@plt>
   18d3c:	mov	r3, r0
   18d40:	mov	r1, r3
   18d44:	movw	r0, #56820	; 0xddf4
   18d48:	movt	r0, #1
   18d4c:	bl	121fc <printf@plt>
   18d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d54:	cmp	r3, #11
   18d58:	beq	18d68 <traverse_info_done@@Base+0x1d8>
   18d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d60:	cmp	r3, #12
   18d64:	bne	18dd4 <traverse_info_done@@Base+0x244>
   18d68:	mov	r0, #40	; 0x28
   18d6c:	bl	12490 <putchar@plt>
   18d70:	movw	r3, #496	; 0x1f0
   18d74:	movt	r3, #3
   18d78:	ldr	r3, [r3, #3360]	; 0xd20
   18d7c:	cmp	r3, #0
   18d80:	bgt	18da4 <traverse_info_done@@Base+0x214>
   18d84:	movw	r3, #57028	; 0xdec4
   18d88:	movt	r3, #1
   18d8c:	mov	r2, #238	; 0xee
   18d90:	movw	r1, #56824	; 0xddf8
   18d94:	movt	r1, #1
   18d98:	movw	r0, #56912	; 0xde50
   18d9c:	movt	r0, #1
   18da0:	bl	12634 <__assert_fail@plt>
   18da4:	movw	r3, #444	; 0x1bc
   18da8:	movt	r3, #3
   18dac:	ldr	r2, [r3]
   18db0:	movw	r3, #496	; 0x1f0
   18db4:	movt	r3, #3
   18db8:	ldr	r3, [r3, #3360]	; 0xd20
   18dbc:	sub	r3, r3, #1
   18dc0:	mov	r1, r3
   18dc4:	mov	r0, r2
   18dc8:	bl	18568 <print_json_data@@Base+0x14c>
   18dcc:	mov	r0, #41	; 0x29
   18dd0:	bl	12490 <putchar@plt>
   18dd4:	movw	r3, #488	; 0x1e8
   18dd8:	movt	r3, #3
   18ddc:	ldr	r3, [r3]
   18de0:	cmp	r3, #0
   18de4:	beq	18e54 <traverse_info_done@@Base+0x2c4>
   18de8:	movw	r3, #496	; 0x1f0
   18dec:	movt	r3, #3
   18df0:	ldr	r2, [r3, #136]	; 0x88
   18df4:	movw	r3, #496	; 0x1f0
   18df8:	movt	r3, #3
   18dfc:	add	r2, r2, #2
   18e00:	ldr	r3, [r3, r2, lsl #2]
   18e04:	sub	r2, fp, #24
   18e08:	mov	r1, r2
   18e0c:	mov	r0, r3
   18e10:	bl	1231c <coda_type_get_unit@plt>
   18e14:	mov	r3, r0
   18e18:	cmp	r3, #0
   18e1c:	beq	18e24 <traverse_info_done@@Base+0x294>
   18e20:	bl	1aeb8 <handle_coda_error@@Base>
   18e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e28:	cmp	r3, #0
   18e2c:	beq	18e54 <traverse_info_done@@Base+0x2c4>
   18e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e34:	ldrb	r3, [r3]
   18e38:	cmp	r3, #0
   18e3c:	beq	18e54 <traverse_info_done@@Base+0x2c4>
   18e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e44:	mov	r1, r3
   18e48:	movw	r0, #56944	; 0xde70
   18e4c:	movt	r0, #1
   18e50:	bl	121fc <printf@plt>
   18e54:	movw	r3, #4260	; 0x10a4
   18e58:	movt	r3, #3
   18e5c:	ldr	r3, [r3]
   18e60:	cmp	r3, #0
   18e64:	beq	18ed4 <traverse_info_done@@Base+0x344>
   18e68:	movw	r3, #496	; 0x1f0
   18e6c:	movt	r3, #3
   18e70:	ldr	r2, [r3, #136]	; 0x88
   18e74:	movw	r3, #496	; 0x1f0
   18e78:	movt	r3, #3
   18e7c:	add	r2, r2, #2
   18e80:	ldr	r3, [r3, r2, lsl #2]
   18e84:	sub	r2, fp, #28
   18e88:	mov	r1, r2
   18e8c:	mov	r0, r3
   18e90:	bl	12328 <coda_type_get_description@plt>
   18e94:	mov	r3, r0
   18e98:	cmp	r3, #0
   18e9c:	beq	18ea4 <traverse_info_done@@Base+0x314>
   18ea0:	bl	1aeb8 <handle_coda_error@@Base>
   18ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ea8:	cmp	r3, #0
   18eac:	beq	18ed4 <traverse_info_done@@Base+0x344>
   18eb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18eb4:	ldrb	r3, [r3]
   18eb8:	cmp	r3, #0
   18ebc:	beq	18ed4 <traverse_info_done@@Base+0x344>
   18ec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ec4:	mov	r1, r3
   18ec8:	movw	r0, #56952	; 0xde78
   18ecc:	movt	r0, #1
   18ed0:	bl	121fc <printf@plt>
   18ed4:	mov	r0, #10
   18ed8:	bl	12490 <putchar@plt>
   18edc:	movw	r3, #476	; 0x1dc
   18ee0:	movt	r3, #3
   18ee4:	ldr	r3, [r3]
   18ee8:	cmp	r3, #0
   18eec:	beq	18f44 <traverse_info_done@@Base+0x3b4>
   18ef0:	mov	r3, #0
   18ef4:	str	r3, [fp, #-8]
   18ef8:	b	18f10 <traverse_info_done@@Base+0x380>
   18efc:	ldr	r0, [fp, #-8]
   18f00:	bl	14c7c <print_all_distinct_dims@@Base>
   18f04:	ldr	r3, [fp, #-8]
   18f08:	add	r3, r3, #1
   18f0c:	str	r3, [fp, #-8]
   18f10:	movw	r3, #4280	; 0x10b8
   18f14:	movt	r3, #3
   18f18:	ldr	r3, [r3]
   18f1c:	ldr	r2, [fp, #-8]
   18f20:	cmp	r2, r3
   18f24:	blt	18efc <traverse_info_done@@Base+0x36c>
   18f28:	b	18f44 <traverse_info_done@@Base+0x3b4>
   18f2c:	movw	r3, #4268	; 0x10ac
   18f30:	movt	r3, #3
   18f34:	ldr	r3, [r3]
   18f38:	cmp	r3, #1
   18f3c:	bne	18f44 <traverse_info_done@@Base+0x3b4>
   18f40:	bl	13648 <export_data_element_to_ascii@@Base>
   18f44:	nop	{0}
   18f48:	sub	sp, fp, #4
   18f4c:	ldr	fp, [sp]
   18f50:	add	sp, sp, #4
   18f54:	pop	{pc}		; (ldr pc, [sp], #4)
   18f58:	str	fp, [sp, #-8]!
   18f5c:	str	lr, [sp, #4]
   18f60:	add	fp, sp, #4
   18f64:	sub	sp, sp, #16
   18f68:	str	r0, [fp, #-16]
   18f6c:	str	r1, [fp, #-20]	; 0xffffffec
   18f70:	movw	r3, #496	; 0x1f0
   18f74:	movt	r3, #3
   18f78:	ldr	r3, [r3, #3748]	; 0xea4
   18f7c:	sub	r3, r3, #1
   18f80:	movw	r2, #496	; 0x1f0
   18f84:	movt	r2, #3
   18f88:	add	r3, r3, #872	; 0x368
   18f8c:	lsl	r3, r3, #2
   18f90:	add	r3, r2, r3
   18f94:	ldr	r2, [fp, #-16]
   18f98:	str	r2, [r3, #4]
   18f9c:	movw	r3, #496	; 0x1f0
   18fa0:	movt	r3, #3
   18fa4:	ldr	r3, [r3, #136]	; 0x88
   18fa8:	sub	r2, r3, #1
   18fac:	movw	r3, #496	; 0x1f0
   18fb0:	movt	r3, #3
   18fb4:	add	r2, r2, #2
   18fb8:	ldr	r3, [r3, r2, lsl #2]
   18fbc:	sub	r2, fp, #8
   18fc0:	ldr	r1, [fp, #-16]
   18fc4:	mov	r0, r3
   18fc8:	bl	121f0 <coda_type_get_record_field_hidden_status@plt>
   18fcc:	mov	r3, r0
   18fd0:	cmp	r3, #0
   18fd4:	beq	18fdc <traverse_info_done@@Base+0x44c>
   18fd8:	bl	1aeb8 <handle_coda_error@@Base>
   18fdc:	ldr	r3, [fp, #-8]
   18fe0:	cmp	r3, #0
   18fe4:	beq	18ff4 <traverse_info_done@@Base+0x464>
   18fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fec:	cmp	r3, #0
   18ff0:	beq	19158 <traverse_info_done@@Base+0x5c8>
   18ff4:	movw	r3, #492	; 0x1ec
   18ff8:	movt	r3, #3
   18ffc:	ldr	r3, [r3]
   19000:	cmp	r3, #0
   19004:	beq	19090 <traverse_info_done@@Base+0x500>
   19008:	movw	r3, #496	; 0x1f0
   1900c:	movt	r3, #3
   19010:	ldr	r3, [r3, #136]	; 0x88
   19014:	sub	r2, r3, #1
   19018:	movw	r3, #496	; 0x1f0
   1901c:	movt	r3, #3
   19020:	add	r2, r2, #2
   19024:	ldr	r3, [r3, r2, lsl #2]
   19028:	sub	r2, fp, #12
   1902c:	ldr	r1, [fp, #-16]
   19030:	mov	r0, r3
   19034:	bl	122e0 <coda_type_get_record_field_available_status@plt>
   19038:	mov	r3, r0
   1903c:	cmp	r3, #0
   19040:	beq	19048 <traverse_info_done@@Base+0x4b8>
   19044:	bl	1aeb8 <handle_coda_error@@Base>
   19048:	ldr	r3, [fp, #-12]
   1904c:	cmn	r3, #1
   19050:	bne	19064 <traverse_info_done@@Base+0x4d4>
   19054:	bl	16f9c <dim_record_field_available@@Base>
   19058:	mov	r3, r0
   1905c:	cmp	r3, #0
   19060:	beq	19160 <traverse_info_done@@Base+0x5d0>
   19064:	movw	r3, #496	; 0x1f0
   19068:	movt	r3, #3
   1906c:	ldr	r3, [r3, #136]	; 0x88
   19070:	sub	r3, r3, #1
   19074:	ldr	r1, [fp, #-12]
   19078:	movw	r2, #496	; 0x1f0
   1907c:	movt	r2, #3
   19080:	add	r3, r3, #840	; 0x348
   19084:	lsl	r3, r3, #2
   19088:	add	r3, r2, r3
   1908c:	str	r1, [r3, #4]
   19090:	movw	r3, #496	; 0x1f0
   19094:	movt	r3, #3
   19098:	ldr	r3, [r3, #136]	; 0x88
   1909c:	sub	r2, r3, #1
   190a0:	movw	r3, #496	; 0x1f0
   190a4:	movt	r3, #3
   190a8:	add	r2, r2, #2
   190ac:	ldr	r0, [r3, r2, lsl #2]
   190b0:	movw	r3, #496	; 0x1f0
   190b4:	movt	r3, #3
   190b8:	ldr	r3, [r3, #3748]	; 0xea4
   190bc:	sub	r3, r3, #1
   190c0:	add	r3, r3, #904	; 0x388
   190c4:	lsl	r2, r3, #2
   190c8:	movw	r3, #496	; 0x1f0
   190cc:	movt	r3, #3
   190d0:	add	r3, r2, r3
   190d4:	add	r3, r3, #4
   190d8:	mov	r2, r3
   190dc:	ldr	r1, [fp, #-16]
   190e0:	bl	125f8 <coda_type_get_record_field_name@plt>
   190e4:	mov	r3, r0
   190e8:	cmp	r3, #0
   190ec:	beq	190f4 <traverse_info_done@@Base+0x564>
   190f0:	bl	1aeb8 <handle_coda_error@@Base>
   190f4:	movw	r3, #496	; 0x1f0
   190f8:	movt	r3, #3
   190fc:	ldr	r3, [r3, #136]	; 0x88
   19100:	sub	r2, r3, #1
   19104:	movw	r3, #496	; 0x1f0
   19108:	movt	r3, #3
   1910c:	add	r2, r2, #2
   19110:	ldr	r0, [r3, r2, lsl #2]
   19114:	movw	r3, #496	; 0x1f0
   19118:	movt	r3, #3
   1911c:	ldr	r3, [r3, #136]	; 0x88
   19120:	add	r3, r3, #2
   19124:	lsl	r2, r3, #2
   19128:	movw	r3, #496	; 0x1f0
   1912c:	movt	r3, #3
   19130:	add	r3, r2, r3
   19134:	mov	r2, r3
   19138:	ldr	r1, [fp, #-16]
   1913c:	bl	122a4 <coda_type_get_record_field_type@plt>
   19140:	mov	r3, r0
   19144:	cmp	r3, #0
   19148:	beq	19150 <traverse_info_done@@Base+0x5c0>
   1914c:	bl	1aeb8 <handle_coda_error@@Base>
   19150:	bl	19174 <traverse_info_done@@Base+0x5e4>
   19154:	b	19164 <traverse_info_done@@Base+0x5d4>
   19158:	nop	{0}
   1915c:	b	19164 <traverse_info_done@@Base+0x5d4>
   19160:	nop	{0}
   19164:	sub	sp, fp, #4
   19168:	ldr	fp, [sp]
   1916c:	add	sp, sp, #4
   19170:	pop	{pc}		; (ldr pc, [sp], #4)
   19174:	str	r4, [sp, #-12]!
   19178:	str	fp, [sp, #4]
   1917c:	str	lr, [sp, #8]
   19180:	add	fp, sp, #8
   19184:	sub	sp, sp, #36	; 0x24
   19188:	movw	r3, #496	; 0x1f0
   1918c:	movt	r3, #3
   19190:	ldr	r2, [r3, #136]	; 0x88
   19194:	movw	r3, #496	; 0x1f0
   19198:	movt	r3, #3
   1919c:	add	r2, r2, #2
   191a0:	ldr	r3, [r3, r2, lsl #2]
   191a4:	sub	r2, fp, #24
   191a8:	mov	r1, r2
   191ac:	mov	r0, r3
   191b0:	bl	12640 <coda_type_get_class@plt>
   191b4:	mov	r3, r0
   191b8:	cmp	r3, #0
   191bc:	beq	191c4 <traverse_info_done@@Base+0x634>
   191c0:	bl	1aeb8 <handle_coda_error@@Base>
   191c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r3, #6
   191cc:	ldrls	pc, [pc, r3, lsl #2]
   191d0:	b	197e0 <traverse_info_done@@Base+0xc50>
   191d4:	strdeq	r9, [r1], -r0
   191d8:	andeq	r9, r1, r0, lsr #10
   191dc:	andeq	r9, r1, ip, lsl #12
   191e0:	andeq	r9, r1, ip, lsl #12
   191e4:	andeq	r9, r1, ip, lsl #12
   191e8:	andeq	r9, r1, ip, lsl #12
   191ec:	andeq	r9, r1, ip, lsr #13
   191f0:	movw	r3, #496	; 0x1f0
   191f4:	movt	r3, #3
   191f8:	ldr	r3, [r3, #136]	; 0x88
   191fc:	cmp	r3, #30
   19200:	bgt	197cc <traverse_info_done@@Base+0xc3c>
   19204:	movw	r3, #496	; 0x1f0
   19208:	movt	r3, #3
   1920c:	ldr	r3, [r3, #3748]	; 0xea4
   19210:	add	r2, r3, #1
   19214:	movw	r3, #496	; 0x1f0
   19218:	movt	r3, #3
   1921c:	str	r2, [r3, #3748]	; 0xea4
   19220:	movw	r3, #496	; 0x1f0
   19224:	movt	r3, #3
   19228:	ldr	r2, [r3, #136]	; 0x88
   1922c:	movw	r3, #496	; 0x1f0
   19230:	movt	r3, #3
   19234:	add	r2, r2, #2
   19238:	ldr	r3, [r3, r2, lsl #2]
   1923c:	sub	r2, fp, #28
   19240:	mov	r1, r2
   19244:	mov	r0, r3
   19248:	bl	123dc <coda_type_get_num_record_fields@plt>
   1924c:	mov	r3, r0
   19250:	cmp	r3, #0
   19254:	beq	1925c <traverse_info_done@@Base+0x6cc>
   19258:	bl	1aeb8 <handle_coda_error@@Base>
   1925c:	movw	r3, #496	; 0x1f0
   19260:	movt	r3, #3
   19264:	ldr	r3, [r3, #136]	; 0x88
   19268:	add	r2, r3, #1
   1926c:	movw	r3, #496	; 0x1f0
   19270:	movt	r3, #3
   19274:	str	r2, [r3, #136]	; 0x88
   19278:	movw	r3, #496	; 0x1f0
   1927c:	movt	r3, #3
   19280:	ldr	r2, [r3, #796]	; 0x31c
   19284:	movw	r3, #496	; 0x1f0
   19288:	movt	r3, #3
   1928c:	add	r2, r2, #166	; 0xa6
   19290:	ldr	r3, [r3, r2, lsl #2]
   19294:	cmp	r3, #0
   19298:	beq	194ac <traverse_info_done@@Base+0x91c>
   1929c:	movw	r3, #496	; 0x1f0
   192a0:	movt	r3, #3
   192a4:	ldr	r2, [r3, #796]	; 0x31c
   192a8:	movw	r3, #496	; 0x1f0
   192ac:	movt	r3, #3
   192b0:	add	r2, r2, #166	; 0xa6
   192b4:	ldr	r3, [r3, r2, lsl #2]
   192b8:	str	r3, [fp, #-16]
   192bc:	b	19464 <traverse_info_done@@Base+0x8d4>
   192c0:	movw	r3, #496	; 0x1f0
   192c4:	movt	r3, #3
   192c8:	ldr	r2, [r3, #796]	; 0x31c
   192cc:	movw	r3, #496	; 0x1f0
   192d0:	movt	r3, #3
   192d4:	add	r2, r2, #166	; 0xa6
   192d8:	ldr	r3, [r3, r2, lsl #2]
   192dc:	mov	r0, r3
   192e0:	bl	1770c <codadump_filter_get_fieldname@@Base>
   192e4:	str	r0, [fp, #-20]	; 0xffffffec
   192e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   192ec:	cmp	r3, #0
   192f0:	bne	19314 <traverse_info_done@@Base+0x784>
   192f4:	movw	r3, #57048	; 0xded8
   192f8:	movt	r3, #1
   192fc:	movw	r2, #393	; 0x189
   19300:	movw	r1, #56824	; 0xddf8
   19304:	movt	r1, #1
   19308:	movw	r0, #56960	; 0xde80
   1930c:	movt	r0, #1
   19310:	bl	12634 <__assert_fail@plt>
   19314:	movw	r3, #496	; 0x1f0
   19318:	movt	r3, #3
   1931c:	ldr	r3, [r3, #136]	; 0x88
   19320:	sub	r2, r3, #1
   19324:	movw	r3, #496	; 0x1f0
   19328:	movt	r3, #3
   1932c:	add	r2, r2, #2
   19330:	ldr	r3, [r3, r2, lsl #2]
   19334:	sub	r2, fp, #32
   19338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1933c:	mov	r0, r3
   19340:	bl	12544 <coda_type_get_record_field_index_from_name@plt>
   19344:	mov	r3, r0
   19348:	cmp	r3, #0
   1934c:	beq	19390 <traverse_info_done@@Base+0x800>
   19350:	bl	125e0 <coda_get_errno@plt>
   19354:	mov	r3, r0
   19358:	ldr	r3, [r3]
   1935c:	cmn	r3, #102	; 0x66
   19360:	bne	1938c <traverse_info_done@@Base+0x7fc>
   19364:	movw	r3, #440	; 0x1b8
   19368:	movt	r3, #3
   1936c:	ldr	r3, [r3]
   19370:	ldr	r2, [fp, #-20]	; 0xffffffec
   19374:	movw	r1, #56976	; 0xde90
   19378:	movt	r1, #1
   1937c:	mov	r0, r3
   19380:	bl	12430 <fprintf@plt>
   19384:	mov	r0, #1
   19388:	bl	123e8 <exit@plt>
   1938c:	bl	1aeb8 <handle_coda_error@@Base>
   19390:	movw	r3, #496	; 0x1f0
   19394:	movt	r3, #3
   19398:	ldr	r2, [r3, #796]	; 0x31c
   1939c:	movw	r3, #496	; 0x1f0
   193a0:	movt	r3, #3
   193a4:	add	r2, r2, #166	; 0xa6
   193a8:	ldr	r2, [r3, r2, lsl #2]
   193ac:	movw	r3, #496	; 0x1f0
   193b0:	movt	r3, #3
   193b4:	ldr	r3, [r3, #796]	; 0x31c
   193b8:	add	r4, r3, #1
   193bc:	mov	r0, r2
   193c0:	bl	17768 <codadump_filter_get_subfilter@@Base>
   193c4:	mov	r1, r0
   193c8:	movw	r3, #496	; 0x1f0
   193cc:	movt	r3, #3
   193d0:	add	r2, r4, #166	; 0xa6
   193d4:	str	r1, [r3, r2, lsl #2]
   193d8:	movw	r3, #496	; 0x1f0
   193dc:	movt	r3, #3
   193e0:	ldr	r3, [r3, #796]	; 0x31c
   193e4:	add	r2, r3, #1
   193e8:	movw	r3, #496	; 0x1f0
   193ec:	movt	r3, #3
   193f0:	str	r2, [r3, #796]	; 0x31c
   193f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193f8:	mov	r1, #1
   193fc:	mov	r0, r3
   19400:	bl	18f58 <traverse_info_done@@Base+0x3c8>
   19404:	movw	r3, #496	; 0x1f0
   19408:	movt	r3, #3
   1940c:	ldr	r3, [r3, #796]	; 0x31c
   19410:	sub	r2, r3, #1
   19414:	movw	r3, #496	; 0x1f0
   19418:	movt	r3, #3
   1941c:	str	r2, [r3, #796]	; 0x31c
   19420:	movw	r3, #496	; 0x1f0
   19424:	movt	r3, #3
   19428:	ldr	r2, [r3, #796]	; 0x31c
   1942c:	movw	r3, #496	; 0x1f0
   19430:	movt	r3, #3
   19434:	add	r2, r2, #166	; 0xa6
   19438:	ldr	r2, [r3, r2, lsl #2]
   1943c:	movw	r3, #496	; 0x1f0
   19440:	movt	r3, #3
   19444:	ldr	r4, [r3, #796]	; 0x31c
   19448:	mov	r0, r2
   1944c:	bl	177c4 <codadump_filter_get_next_filter@@Base>
   19450:	mov	r1, r0
   19454:	movw	r3, #496	; 0x1f0
   19458:	movt	r3, #3
   1945c:	add	r2, r4, #166	; 0xa6
   19460:	str	r1, [r3, r2, lsl #2]
   19464:	movw	r3, #496	; 0x1f0
   19468:	movt	r3, #3
   1946c:	ldr	r2, [r3, #796]	; 0x31c
   19470:	movw	r3, #496	; 0x1f0
   19474:	movt	r3, #3
   19478:	add	r2, r2, #166	; 0xa6
   1947c:	ldr	r3, [r3, r2, lsl #2]
   19480:	cmp	r3, #0
   19484:	bne	192c0 <traverse_info_done@@Base+0x730>
   19488:	movw	r3, #496	; 0x1f0
   1948c:	movt	r3, #3
   19490:	ldr	r2, [r3, #796]	; 0x31c
   19494:	movw	r3, #496	; 0x1f0
   19498:	movt	r3, #3
   1949c:	add	r2, r2, #166	; 0xa6
   194a0:	ldr	r1, [fp, #-16]
   194a4:	str	r1, [r3, r2, lsl #2]
   194a8:	b	194e4 <traverse_info_done@@Base+0x954>
   194ac:	mov	r3, #0
   194b0:	str	r3, [fp, #-32]	; 0xffffffe0
   194b4:	b	194d4 <traverse_info_done@@Base+0x944>
   194b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194bc:	mov	r1, #0
   194c0:	mov	r0, r3
   194c4:	bl	18f58 <traverse_info_done@@Base+0x3c8>
   194c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194cc:	add	r3, r3, #1
   194d0:	str	r3, [fp, #-32]	; 0xffffffe0
   194d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   194d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194dc:	cmp	r2, r3
   194e0:	blt	194b8 <traverse_info_done@@Base+0x928>
   194e4:	movw	r3, #496	; 0x1f0
   194e8:	movt	r3, #3
   194ec:	ldr	r3, [r3, #136]	; 0x88
   194f0:	sub	r2, r3, #1
   194f4:	movw	r3, #496	; 0x1f0
   194f8:	movt	r3, #3
   194fc:	str	r2, [r3, #136]	; 0x88
   19500:	movw	r3, #496	; 0x1f0
   19504:	movt	r3, #3
   19508:	ldr	r3, [r3, #3748]	; 0xea4
   1950c:	sub	r2, r3, #1
   19510:	movw	r3, #496	; 0x1f0
   19514:	movt	r3, #3
   19518:	str	r2, [r3, #3748]	; 0xea4
   1951c:	b	197e0 <traverse_info_done@@Base+0xc50>
   19520:	movw	r3, #496	; 0x1f0
   19524:	movt	r3, #3
   19528:	ldr	r3, [r3, #136]	; 0x88
   1952c:	cmp	r3, #30
   19530:	bgt	197d4 <traverse_info_done@@Base+0xc44>
   19534:	bl	15990 <dim_enter_array@@Base>
   19538:	movw	r3, #496	; 0x1f0
   1953c:	movt	r3, #3
   19540:	ldr	r3, [r3, #3360]	; 0xd20
   19544:	add	r2, r3, #1
   19548:	movw	r3, #496	; 0x1f0
   1954c:	movt	r3, #3
   19550:	str	r2, [r3, #3360]	; 0xd20
   19554:	movw	r3, #496	; 0x1f0
   19558:	movt	r3, #3
   1955c:	ldr	r3, [r3, #136]	; 0x88
   19560:	add	r2, r3, #1
   19564:	movw	r3, #496	; 0x1f0
   19568:	movt	r3, #3
   1956c:	str	r2, [r3, #136]	; 0x88
   19570:	movw	r3, #496	; 0x1f0
   19574:	movt	r3, #3
   19578:	ldr	r3, [r3, #136]	; 0x88
   1957c:	sub	r2, r3, #1
   19580:	movw	r3, #496	; 0x1f0
   19584:	movt	r3, #3
   19588:	add	r2, r2, #2
   1958c:	ldr	r0, [r3, r2, lsl #2]
   19590:	movw	r3, #496	; 0x1f0
   19594:	movt	r3, #3
   19598:	ldr	r3, [r3, #136]	; 0x88
   1959c:	add	r3, r3, #2
   195a0:	lsl	r2, r3, #2
   195a4:	movw	r3, #496	; 0x1f0
   195a8:	movt	r3, #3
   195ac:	add	r3, r2, r3
   195b0:	mov	r1, r3
   195b4:	bl	124cc <coda_type_get_array_base_type@plt>
   195b8:	mov	r3, r0
   195bc:	cmp	r3, #0
   195c0:	beq	195c8 <traverse_info_done@@Base+0xa38>
   195c4:	bl	1aeb8 <handle_coda_error@@Base>
   195c8:	bl	19174 <traverse_info_done@@Base+0x5e4>
   195cc:	movw	r3, #496	; 0x1f0
   195d0:	movt	r3, #3
   195d4:	ldr	r3, [r3, #136]	; 0x88
   195d8:	sub	r2, r3, #1
   195dc:	movw	r3, #496	; 0x1f0
   195e0:	movt	r3, #3
   195e4:	str	r2, [r3, #136]	; 0x88
   195e8:	movw	r3, #496	; 0x1f0
   195ec:	movt	r3, #3
   195f0:	ldr	r3, [r3, #3360]	; 0xd20
   195f4:	sub	r2, r3, #1
   195f8:	movw	r3, #496	; 0x1f0
   195fc:	movt	r3, #3
   19600:	str	r2, [r3, #3360]	; 0xd20
   19604:	bl	168f0 <dim_leave_array@@Base>
   19608:	b	197e0 <traverse_info_done@@Base+0xc50>
   1960c:	movw	r3, #496	; 0x1f0
   19610:	movt	r3, #3
   19614:	ldr	r2, [r3, #136]	; 0x88
   19618:	movw	r3, #496	; 0x1f0
   1961c:	movt	r3, #3
   19620:	add	r2, r2, #2
   19624:	ldr	r3, [r3, r2, lsl #2]
   19628:	sub	r2, fp, #36	; 0x24
   1962c:	mov	r1, r2
   19630:	mov	r0, r3
   19634:	bl	123f4 <coda_type_get_read_type@plt>
   19638:	mov	r3, r0
   1963c:	cmp	r3, #0
   19640:	beq	19648 <traverse_info_done@@Base+0xab8>
   19644:	bl	1aeb8 <handle_coda_error@@Base>
   19648:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1964c:	sub	r3, r3, #11
   19650:	cmp	r3, #1
   19654:	bhi	196a0 <traverse_info_done@@Base+0xb10>
   19658:	bl	15990 <dim_enter_array@@Base>
   1965c:	movw	r3, #496	; 0x1f0
   19660:	movt	r3, #3
   19664:	ldr	r3, [r3, #3360]	; 0xd20
   19668:	add	r2, r3, #1
   1966c:	movw	r3, #496	; 0x1f0
   19670:	movt	r3, #3
   19674:	str	r2, [r3, #3360]	; 0xd20
   19678:	bl	18bf8 <traverse_info_done@@Base+0x68>
   1967c:	movw	r3, #496	; 0x1f0
   19680:	movt	r3, #3
   19684:	ldr	r3, [r3, #3360]	; 0xd20
   19688:	sub	r2, r3, #1
   1968c:	movw	r3, #496	; 0x1f0
   19690:	movt	r3, #3
   19694:	str	r2, [r3, #3360]	; 0xd20
   19698:	bl	168f0 <dim_leave_array@@Base>
   1969c:	b	196a8 <traverse_info_done@@Base+0xb18>
   196a0:	bl	18bf8 <traverse_info_done@@Base+0x68>
   196a4:	nop	{0}
   196a8:	b	197e0 <traverse_info_done@@Base+0xc50>
   196ac:	bl	121cc <coda_get_option_bypass_special_types@plt>
   196b0:	mov	r3, r0
   196b4:	cmp	r3, #0
   196b8:	beq	19718 <traverse_info_done@@Base+0xb88>
   196bc:	movw	r3, #496	; 0x1f0
   196c0:	movt	r3, #3
   196c4:	ldr	r2, [r3, #136]	; 0x88
   196c8:	movw	r3, #496	; 0x1f0
   196cc:	movt	r3, #3
   196d0:	add	r2, r2, #2
   196d4:	ldr	r0, [r3, r2, lsl #2]
   196d8:	movw	r3, #496	; 0x1f0
   196dc:	movt	r3, #3
   196e0:	ldr	r3, [r3, #136]	; 0x88
   196e4:	add	r3, r3, #2
   196e8:	lsl	r2, r3, #2
   196ec:	movw	r3, #496	; 0x1f0
   196f0:	movt	r3, #3
   196f4:	add	r3, r2, r3
   196f8:	mov	r1, r3
   196fc:	bl	125ec <coda_type_get_special_base_type@plt>
   19700:	mov	r3, r0
   19704:	cmp	r3, #0
   19708:	beq	19710 <traverse_info_done@@Base+0xb80>
   1970c:	bl	1aeb8 <handle_coda_error@@Base>
   19710:	bl	19174 <traverse_info_done@@Base+0x5e4>
   19714:	b	197e0 <traverse_info_done@@Base+0xc50>
   19718:	movw	r3, #496	; 0x1f0
   1971c:	movt	r3, #3
   19720:	ldr	r2, [r3, #136]	; 0x88
   19724:	movw	r3, #496	; 0x1f0
   19728:	movt	r3, #3
   1972c:	add	r2, r2, #2
   19730:	ldr	r3, [r3, r2, lsl #2]
   19734:	sub	r2, fp, #40	; 0x28
   19738:	mov	r1, r2
   1973c:	mov	r0, r3
   19740:	bl	124a8 <coda_type_get_special_type@plt>
   19744:	mov	r3, r0
   19748:	cmp	r3, #0
   1974c:	beq	19754 <traverse_info_done@@Base+0xbc4>
   19750:	bl	1aeb8 <handle_coda_error@@Base>
   19754:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19758:	cmp	r3, #3
   1975c:	ldrls	pc, [pc, r3, lsl #2]
   19760:	b	197dc <traverse_info_done@@Base+0xc4c>
   19764:	ldrdeq	r9, [r1], -ip
   19768:	andeq	r9, r1, r4, ror r7
   1976c:	andeq	r9, r1, r4, ror r7
   19770:	andeq	r9, r1, ip, ror r7
   19774:	bl	18bf8 <traverse_info_done@@Base+0x68>
   19778:	b	197c4 <traverse_info_done@@Base+0xc34>
   1977c:	bl	15990 <dim_enter_array@@Base>
   19780:	movw	r3, #496	; 0x1f0
   19784:	movt	r3, #3
   19788:	ldr	r3, [r3, #3360]	; 0xd20
   1978c:	add	r2, r3, #1
   19790:	movw	r3, #496	; 0x1f0
   19794:	movt	r3, #3
   19798:	str	r2, [r3, #3360]	; 0xd20
   1979c:	bl	18bf8 <traverse_info_done@@Base+0x68>
   197a0:	movw	r3, #496	; 0x1f0
   197a4:	movt	r3, #3
   197a8:	ldr	r3, [r3, #3360]	; 0xd20
   197ac:	sub	r2, r3, #1
   197b0:	movw	r3, #496	; 0x1f0
   197b4:	movt	r3, #3
   197b8:	str	r2, [r3, #3360]	; 0xd20
   197bc:	bl	168f0 <dim_leave_array@@Base>
   197c0:	nop	{0}
   197c4:	nop	{0}
   197c8:	b	197dc <traverse_info_done@@Base+0xc4c>
   197cc:	nop	{0}
   197d0:	b	197e0 <traverse_info_done@@Base+0xc50>
   197d4:	nop	{0}
   197d8:	b	197e0 <traverse_info_done@@Base+0xc50>
   197dc:	nop	{0}
   197e0:	sub	sp, fp, #8
   197e4:	ldr	r4, [sp]
   197e8:	ldr	fp, [sp, #4]
   197ec:	add	sp, sp, #8
   197f0:	pop	{pc}		; (ldr pc, [sp], #4)

000197f4 <traverse_product@@Base>:
   197f4:	str	fp, [sp, #-8]!
   197f8:	str	lr, [sp, #4]
   197fc:	add	fp, sp, #4
   19800:	sub	sp, sp, #8
   19804:	movw	r3, #496	; 0x1f0
   19808:	movt	r3, #3
   1980c:	ldr	r3, [r3]
   19810:	ldr	r1, [pc, #260]	; 1991c <traverse_product@@Base+0x128>
   19814:	mov	r0, r3
   19818:	bl	1222c <coda_open@plt>
   1981c:	str	r0, [fp, #-8]
   19820:	ldr	r3, [fp, #-8]
   19824:	cmp	r3, #0
   19828:	beq	1986c <traverse_product@@Base+0x78>
   1982c:	bl	125e0 <coda_get_errno@plt>
   19830:	mov	r3, r0
   19834:	ldr	r3, [r3]
   19838:	cmn	r3, #21
   1983c:	bne	1986c <traverse_product@@Base+0x78>
   19840:	mov	r0, #0
   19844:	bl	12274 <coda_set_option_use_mmap@plt>
   19848:	movw	r3, #496	; 0x1f0
   1984c:	movt	r3, #3
   19850:	ldr	r3, [r3]
   19854:	ldr	r1, [pc, #192]	; 1991c <traverse_product@@Base+0x128>
   19858:	mov	r0, r3
   1985c:	bl	1222c <coda_open@plt>
   19860:	str	r0, [fp, #-8]
   19864:	mov	r0, #1
   19868:	bl	12274 <coda_set_option_use_mmap@plt>
   1986c:	ldr	r3, [fp, #-8]
   19870:	cmp	r3, #0
   19874:	beq	1987c <traverse_product@@Base+0x88>
   19878:	bl	1aeb8 <handle_coda_error@@Base>
   1987c:	movw	r3, #496	; 0x1f0
   19880:	movt	r3, #3
   19884:	ldr	r3, [r3, #4]
   19888:	mov	r1, r3
   1988c:	ldr	r0, [pc, #140]	; 19920 <traverse_product@@Base+0x12c>
   19890:	bl	12358 <coda_cursor_set_product@plt>
   19894:	mov	r3, r0
   19898:	cmp	r3, #0
   1989c:	beq	198a4 <traverse_product@@Base+0xb0>
   198a0:	bl	1aeb8 <handle_coda_error@@Base>
   198a4:	movw	r3, #496	; 0x1f0
   198a8:	movt	r3, #3
   198ac:	ldr	r3, [r3, #136]	; 0x88
   198b0:	add	r3, r3, #2
   198b4:	lsl	r2, r3, #2
   198b8:	movw	r3, #496	; 0x1f0
   198bc:	movt	r3, #3
   198c0:	add	r3, r2, r3
   198c4:	mov	r1, r3
   198c8:	ldr	r0, [pc, #80]	; 19920 <traverse_product@@Base+0x12c>
   198cc:	bl	122b0 <coda_cursor_get_type@plt>
   198d0:	mov	r3, r0
   198d4:	cmp	r3, #0
   198d8:	beq	198e0 <traverse_product@@Base+0xec>
   198dc:	bl	1aeb8 <handle_coda_error@@Base>
   198e0:	bl	19174 <traverse_info_done@@Base+0x5e4>
   198e4:	movw	r3, #496	; 0x1f0
   198e8:	movt	r3, #3
   198ec:	ldr	r3, [r3, #4]
   198f0:	mov	r0, r3
   198f4:	bl	12514 <coda_close@plt>
   198f8:	movw	r3, #496	; 0x1f0
   198fc:	movt	r3, #3
   19900:	mov	r2, #0
   19904:	str	r2, [r3, #4]
   19908:	nop	{0}
   1990c:	sub	sp, fp, #4
   19910:	ldr	fp, [sp]
   19914:	add	sp, sp, #4
   19918:	pop	{pc}		; (ldr pc, [sp], #4)
   1991c:	strdeq	r0, [r3], -r4
   19920:	andeq	r0, r3, r0, lsl #5
   19924:	str	fp, [sp, #-8]!
   19928:	str	lr, [sp, #4]
   1992c:	add	fp, sp, #4
   19930:	sub	sp, sp, #8
   19934:	movw	r3, #460	; 0x1cc
   19938:	movt	r3, #3
   1993c:	ldr	r3, [r3]
   19940:	cmp	r3, #0
   19944:	bge	19968 <traverse_product@@Base+0x174>
   19948:	movw	r3, #57424	; 0xe050
   1994c:	movt	r3, #1
   19950:	mov	r2, #44	; 0x2c
   19954:	movw	r1, #57064	; 0xdee8
   19958:	movt	r1, #1
   1995c:	movw	r0, #57148	; 0xdf3c
   19960:	movt	r0, #1
   19964:	bl	12634 <__assert_fail@plt>
   19968:	movw	r3, #460	; 0x1cc
   1996c:	movt	r3, #3
   19970:	ldr	r3, [r3]
   19974:	str	r3, [fp, #-8]
   19978:	b	199a8 <traverse_product@@Base+0x1b4>
   1997c:	movw	r3, #4248	; 0x1098
   19980:	movt	r3, #3
   19984:	ldr	r3, [r3]
   19988:	mov	r2, #2
   1998c:	mov	r1, #1
   19990:	movw	r0, #57160	; 0xdf48
   19994:	movt	r0, #1
   19998:	bl	1234c <fwrite@plt>
   1999c:	ldr	r3, [fp, #-8]
   199a0:	sub	r3, r3, #1
   199a4:	str	r3, [fp, #-8]
   199a8:	ldr	r3, [fp, #-8]
   199ac:	cmp	r3, #0
   199b0:	bgt	1997c <traverse_product@@Base+0x188>
   199b4:	nop	{0}
   199b8:	sub	sp, fp, #4
   199bc:	ldr	fp, [sp]
   199c0:	add	sp, sp, #4
   199c4:	pop	{pc}		; (ldr pc, [sp], #4)
   199c8:	push	{r0, r1, r2, r3}
   199cc:	str	fp, [sp, #-8]!
   199d0:	str	lr, [sp, #4]
   199d4:	add	fp, sp, #4
   199d8:	sub	sp, sp, #8
   199dc:	add	r3, fp, #8
   199e0:	str	r3, [fp, #-12]
   199e4:	movw	r3, #4248	; 0x1098
   199e8:	movt	r3, #3
   199ec:	ldr	r3, [r3]
   199f0:	ldr	r2, [fp, #-12]
   199f4:	ldr	r1, [fp, #4]
   199f8:	mov	r0, r3
   199fc:	bl	1252c <vfprintf@plt>
   19a00:	str	r0, [fp, #-8]
   19a04:	ldr	r3, [fp, #-8]
   19a08:	mov	r0, r3
   19a0c:	sub	sp, fp, #4
   19a10:	ldr	fp, [sp]
   19a14:	ldr	lr, [sp, #4]
   19a18:	add	sp, sp, #8
   19a1c:	add	sp, sp, #16
   19a20:	bx	lr
   19a24:	push	{r0, r1, r2, r3}
   19a28:	str	fp, [sp, #-8]!
   19a2c:	str	lr, [sp, #4]
   19a30:	add	fp, sp, #4
   19a34:	sub	sp, sp, #8
   19a38:	bl	19924 <traverse_product@@Base+0x130>
   19a3c:	add	r3, fp, #8
   19a40:	str	r3, [fp, #-12]
   19a44:	movw	r3, #4248	; 0x1098
   19a48:	movt	r3, #3
   19a4c:	ldr	r3, [r3]
   19a50:	ldr	r2, [fp, #-12]
   19a54:	ldr	r1, [fp, #4]
   19a58:	mov	r0, r3
   19a5c:	bl	1252c <vfprintf@plt>
   19a60:	str	r0, [fp, #-8]
   19a64:	ldr	r3, [fp, #-8]
   19a68:	mov	r0, r3
   19a6c:	sub	sp, fp, #4
   19a70:	ldr	fp, [sp]
   19a74:	ldr	lr, [sp, #4]
   19a78:	add	sp, sp, #8
   19a7c:	add	sp, sp, #16
   19a80:	bx	lr
   19a84:	str	fp, [sp, #-8]!
   19a88:	str	lr, [sp, #4]
   19a8c:	add	fp, sp, #4
   19a90:	sub	sp, sp, #16
   19a94:	str	r0, [fp, #-16]
   19a98:	str	r1, [fp, #-20]	; 0xffffffec
   19a9c:	mov	r3, #0
   19aa0:	str	r3, [fp, #-8]
   19aa4:	b	19bc8 <traverse_product@@Base+0x3d4>
   19aa8:	ldr	r3, [fp, #-8]
   19aac:	ldr	r2, [fp, #-16]
   19ab0:	add	r3, r2, r3
   19ab4:	ldrb	r3, [r3]
   19ab8:	strb	r3, [fp, #-9]
   19abc:	ldrb	r3, [fp, #-9]
   19ac0:	cmp	r3, #12
   19ac4:	beq	19b18 <traverse_product@@Base+0x324>
   19ac8:	cmp	r3, #12
   19acc:	bgt	19aec <traverse_product@@Base+0x2f8>
   19ad0:	cmp	r3, #9
   19ad4:	beq	19b48 <traverse_product@@Base+0x354>
   19ad8:	cmp	r3, #10
   19adc:	beq	19b28 <traverse_product@@Base+0x334>
   19ae0:	cmp	r3, #8
   19ae4:	beq	19b08 <traverse_product@@Base+0x314>
   19ae8:	b	19b78 <traverse_product@@Base+0x384>
   19aec:	cmp	r3, #34	; 0x22
   19af0:	beq	19b58 <traverse_product@@Base+0x364>
   19af4:	cmp	r3, #92	; 0x5c
   19af8:	beq	19b68 <traverse_product@@Base+0x374>
   19afc:	cmp	r3, #13
   19b00:	beq	19b38 <traverse_product@@Base+0x344>
   19b04:	b	19b78 <traverse_product@@Base+0x384>
   19b08:	movw	r0, #57164	; 0xdf4c
   19b0c:	movt	r0, #1
   19b10:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b14:	b	19bbc <traverse_product@@Base+0x3c8>
   19b18:	movw	r0, #57168	; 0xdf50
   19b1c:	movt	r0, #1
   19b20:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b24:	b	19bbc <traverse_product@@Base+0x3c8>
   19b28:	movw	r0, #57172	; 0xdf54
   19b2c:	movt	r0, #1
   19b30:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b34:	b	19bbc <traverse_product@@Base+0x3c8>
   19b38:	movw	r0, #57176	; 0xdf58
   19b3c:	movt	r0, #1
   19b40:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b44:	b	19bbc <traverse_product@@Base+0x3c8>
   19b48:	movw	r0, #57180	; 0xdf5c
   19b4c:	movt	r0, #1
   19b50:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b54:	b	19bbc <traverse_product@@Base+0x3c8>
   19b58:	movw	r0, #57184	; 0xdf60
   19b5c:	movt	r0, #1
   19b60:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b64:	b	19bbc <traverse_product@@Base+0x3c8>
   19b68:	movw	r0, #57188	; 0xdf64
   19b6c:	movt	r0, #1
   19b70:	bl	199c8 <traverse_product@@Base+0x1d4>
   19b74:	b	19bbc <traverse_product@@Base+0x3c8>
   19b78:	ldrb	r3, [fp, #-9]
   19b7c:	cmp	r3, #31
   19b80:	bls	19ba8 <traverse_product@@Base+0x3b4>
   19b84:	ldrb	r3, [fp, #-9]
   19b88:	cmp	r3, #126	; 0x7e
   19b8c:	bhi	19ba8 <traverse_product@@Base+0x3b4>
   19b90:	ldrb	r3, [fp, #-9]
   19b94:	mov	r1, r3
   19b98:	movw	r0, #57192	; 0xdf68
   19b9c:	movt	r0, #1
   19ba0:	bl	199c8 <traverse_product@@Base+0x1d4>
   19ba4:	b	19bbc <traverse_product@@Base+0x3c8>
   19ba8:	ldrb	r3, [fp, #-9]
   19bac:	mov	r1, r3
   19bb0:	movw	r0, #57196	; 0xdf6c
   19bb4:	movt	r0, #1
   19bb8:	bl	199c8 <traverse_product@@Base+0x1d4>
   19bbc:	ldr	r3, [fp, #-8]
   19bc0:	add	r3, r3, #1
   19bc4:	str	r3, [fp, #-8]
   19bc8:	ldr	r2, [fp, #-8]
   19bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19bd0:	cmp	r2, r3
   19bd4:	blt	19aa8 <traverse_product@@Base+0x2b4>
   19bd8:	nop	{0}
   19bdc:	sub	sp, fp, #4
   19be0:	ldr	fp, [sp]
   19be4:	add	sp, sp, #4
   19be8:	pop	{pc}		; (ldr pc, [sp], #4)
   19bec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19bf0:	strd	r6, [sp, #8]
   19bf4:	strd	r8, [sp, #16]
   19bf8:	str	fp, [sp, #24]
   19bfc:	str	lr, [sp, #28]
   19c00:	add	fp, sp, #28
   19c04:	sub	sp, sp, #288	; 0x120
   19c08:	str	r0, [fp, #-304]	; 0xfffffed0
   19c0c:	str	r1, [fp, #-308]	; 0xfffffecc
   19c10:	mov	r3, #0
   19c14:	str	r3, [fp, #-64]	; 0xffffffc0
   19c18:	movw	r3, #464	; 0x1d0
   19c1c:	movt	r3, #3
   19c20:	ldr	r3, [r3]
   19c24:	cmp	r3, #0
   19c28:	beq	19d0c <traverse_product@@Base+0x518>
   19c2c:	sub	r3, fp, #64	; 0x40
   19c30:	mov	r1, r3
   19c34:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19c38:	bl	122ec <coda_cursor_has_attributes@plt>
   19c3c:	mov	r3, r0
   19c40:	cmp	r3, #0
   19c44:	beq	19c4c <traverse_product@@Base+0x458>
   19c48:	bl	1aeb8 <handle_coda_error@@Base>
   19c4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19c50:	cmp	r3, #0
   19c54:	beq	19d0c <traverse_product@@Base+0x518>
   19c58:	ldr	r3, [fp, #-308]	; 0xfffffecc
   19c5c:	cmp	r3, #0
   19c60:	beq	19c74 <traverse_product@@Base+0x480>
   19c64:	movw	r0, #57204	; 0xdf74
   19c68:	movt	r0, #1
   19c6c:	bl	199c8 <traverse_product@@Base+0x1d4>
   19c70:	bl	19924 <traverse_product@@Base+0x130>
   19c74:	movw	r0, #57208	; 0xdf78
   19c78:	movt	r0, #1
   19c7c:	bl	199c8 <traverse_product@@Base+0x1d4>
   19c80:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19c84:	bl	1246c <coda_cursor_goto_attributes@plt>
   19c88:	mov	r3, r0
   19c8c:	cmp	r3, #0
   19c90:	beq	19c98 <traverse_product@@Base+0x4a4>
   19c94:	bl	1aeb8 <handle_coda_error@@Base>
   19c98:	movw	r3, #460	; 0x1cc
   19c9c:	movt	r3, #3
   19ca0:	ldr	r3, [r3]
   19ca4:	add	r2, r3, #1
   19ca8:	movw	r3, #460	; 0x1cc
   19cac:	movt	r3, #3
   19cb0:	str	r2, [r3]
   19cb4:	mov	r1, #1
   19cb8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19cbc:	bl	19bec <traverse_product@@Base+0x3f8>
   19cc0:	movw	r3, #460	; 0x1cc
   19cc4:	movt	r3, #3
   19cc8:	ldr	r3, [r3]
   19ccc:	sub	r2, r3, #1
   19cd0:	movw	r3, #460	; 0x1cc
   19cd4:	movt	r3, #3
   19cd8:	str	r2, [r3]
   19cdc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19ce0:	bl	123d0 <coda_cursor_goto_parent@plt>
   19ce4:	movw	r0, #57216	; 0xdf80
   19ce8:	movt	r0, #1
   19cec:	bl	19a24 <traverse_product@@Base+0x230>
   19cf0:	movw	r3, #460	; 0x1cc
   19cf4:	movt	r3, #3
   19cf8:	ldr	r3, [r3]
   19cfc:	add	r2, r3, #1
   19d00:	movw	r3, #460	; 0x1cc
   19d04:	movt	r3, #3
   19d08:	str	r2, [r3]
   19d0c:	sub	r3, fp, #60	; 0x3c
   19d10:	mov	r1, r3
   19d14:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19d18:	bl	122f8 <coda_cursor_get_type_class@plt>
   19d1c:	mov	r3, r0
   19d20:	cmp	r3, #0
   19d24:	beq	19d2c <traverse_product@@Base+0x538>
   19d28:	bl	1aeb8 <handle_coda_error@@Base>
   19d2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d30:	cmp	r3, #6
   19d34:	ldrls	pc, [pc, r3, lsl #2]
   19d38:	b	1a758 <traverse_product@@Base+0xf64>
   19d3c:	andeq	r9, r1, r8, asr sp
   19d40:	andeq	sl, r1, r0, lsr r0
   19d44:			; <UNDEFINED> instruction: 0x0001a1b0
   19d48:			; <UNDEFINED> instruction: 0x0001a1b0
   19d4c:			; <UNDEFINED> instruction: 0x0001a1b0
   19d50:			; <UNDEFINED> instruction: 0x0001a1b0
   19d54:	andeq	sl, r1, r0, asr #11
   19d58:	sub	r3, fp, #68	; 0x44
   19d5c:	mov	r1, r3
   19d60:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19d64:	bl	12250 <coda_cursor_get_num_elements@plt>
   19d68:	mov	r3, r0
   19d6c:	cmp	r3, #0
   19d70:	beq	19d78 <traverse_product@@Base+0x584>
   19d74:	bl	1aeb8 <handle_coda_error@@Base>
   19d78:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19d7c:	cmp	r3, #0
   19d80:	ble	1a020 <traverse_product@@Base+0x82c>
   19d84:	ldr	r3, [fp, #-308]	; 0xfffffecc
   19d88:	cmp	r3, #0
   19d8c:	beq	19d9c <traverse_product@@Base+0x5a8>
   19d90:	movw	r0, #57204	; 0xdf74
   19d94:	movt	r0, #1
   19d98:	bl	199c8 <traverse_product@@Base+0x1d4>
   19d9c:	sub	r3, fp, #72	; 0x48
   19da0:	mov	r1, r3
   19da4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19da8:	bl	122b0 <coda_cursor_get_type@plt>
   19dac:	mov	r3, r0
   19db0:	cmp	r3, #0
   19db4:	beq	19dbc <traverse_product@@Base+0x5c8>
   19db8:	bl	1aeb8 <handle_coda_error@@Base>
   19dbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19dc0:	sub	r2, fp, #76	; 0x4c
   19dc4:	mov	r1, r2
   19dc8:	mov	r0, r3
   19dcc:	bl	124b4 <coda_type_get_record_union_status@plt>
   19dd0:	mov	r3, r0
   19dd4:	cmp	r3, #0
   19dd8:	beq	19de0 <traverse_product@@Base+0x5ec>
   19ddc:	bl	1aeb8 <handle_coda_error@@Base>
   19de0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19de4:	cmp	r3, #0
   19de8:	beq	19ec4 <traverse_product@@Base+0x6d0>
   19dec:	sub	r3, fp, #80	; 0x50
   19df0:	mov	r1, r3
   19df4:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19df8:	bl	125b0 <coda_cursor_get_available_union_field_index@plt>
   19dfc:	mov	r3, r0
   19e00:	cmp	r3, #0
   19e04:	beq	19e0c <traverse_product@@Base+0x618>
   19e08:	bl	1aeb8 <handle_coda_error@@Base>
   19e0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19e10:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19e14:	sub	r2, fp, #84	; 0x54
   19e18:	mov	r0, r3
   19e1c:	bl	125f8 <coda_type_get_record_field_name@plt>
   19e20:	mov	r3, r0
   19e24:	cmp	r3, #0
   19e28:	beq	19e30 <traverse_product@@Base+0x63c>
   19e2c:	bl	1aeb8 <handle_coda_error@@Base>
   19e30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19e34:	mov	r1, r3
   19e38:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19e3c:	bl	12370 <coda_cursor_goto_record_field_by_index@plt>
   19e40:	mov	r3, r0
   19e44:	cmp	r3, #0
   19e48:	beq	19e50 <traverse_product@@Base+0x65c>
   19e4c:	bl	1aeb8 <handle_coda_error@@Base>
   19e50:	ldr	r3, [fp, #-308]	; 0xfffffecc
   19e54:	cmp	r3, #0
   19e58:	beq	19e60 <traverse_product@@Base+0x66c>
   19e5c:	bl	19924 <traverse_product@@Base+0x130>
   19e60:	ldr	r3, [fp, #-84]	; 0xffffffac
   19e64:	mov	r1, r3
   19e68:	movw	r0, #57224	; 0xdf88
   19e6c:	movt	r0, #1
   19e70:	bl	199c8 <traverse_product@@Base+0x1d4>
   19e74:	movw	r3, #460	; 0x1cc
   19e78:	movt	r3, #3
   19e7c:	ldr	r3, [r3]
   19e80:	add	r2, r3, #1
   19e84:	movw	r3, #460	; 0x1cc
   19e88:	movt	r3, #3
   19e8c:	str	r2, [r3]
   19e90:	mov	r1, #1
   19e94:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19e98:	bl	19bec <traverse_product@@Base+0x3f8>
   19e9c:	movw	r3, #460	; 0x1cc
   19ea0:	movt	r3, #3
   19ea4:	ldr	r3, [r3]
   19ea8:	sub	r2, r3, #1
   19eac:	movw	r3, #460	; 0x1cc
   19eb0:	movt	r3, #3
   19eb4:	str	r2, [r3]
   19eb8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19ebc:	bl	123d0 <coda_cursor_goto_parent@plt>
   19ec0:	b	1a758 <traverse_product@@Base+0xf64>
   19ec4:	mov	r3, #1
   19ec8:	str	r3, [fp, #-32]	; 0xffffffe0
   19ecc:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19ed0:	bl	12364 <coda_cursor_goto_first_record_field@plt>
   19ed4:	mov	r3, r0
   19ed8:	cmp	r3, #0
   19edc:	beq	19ee4 <traverse_product@@Base+0x6f0>
   19ee0:	bl	1aeb8 <handle_coda_error@@Base>
   19ee4:	mov	r3, #0
   19ee8:	str	r3, [fp, #-80]	; 0xffffffb0
   19eec:	b	1a004 <traverse_product@@Base+0x810>
   19ef0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19ef4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19ef8:	sub	r2, fp, #92	; 0x5c
   19efc:	mov	r0, r3
   19f00:	bl	121f0 <coda_type_get_record_field_hidden_status@plt>
   19f04:	mov	r3, r0
   19f08:	cmp	r3, #0
   19f0c:	beq	19f14 <traverse_product@@Base+0x720>
   19f10:	bl	1aeb8 <handle_coda_error@@Base>
   19f14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   19f18:	cmp	r3, #0
   19f1c:	bne	19fcc <traverse_product@@Base+0x7d8>
   19f20:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19f24:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19f28:	sub	r2, fp, #88	; 0x58
   19f2c:	mov	r0, r3
   19f30:	bl	125f8 <coda_type_get_record_field_name@plt>
   19f34:	mov	r3, r0
   19f38:	cmp	r3, #0
   19f3c:	beq	19f44 <traverse_product@@Base+0x750>
   19f40:	bl	1aeb8 <handle_coda_error@@Base>
   19f44:	ldr	r3, [fp, #-308]	; 0xfffffecc
   19f48:	cmp	r3, #0
   19f4c:	bne	19f5c <traverse_product@@Base+0x768>
   19f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f54:	cmp	r3, #0
   19f58:	bne	19f60 <traverse_product@@Base+0x76c>
   19f5c:	bl	19924 <traverse_product@@Base+0x130>
   19f60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f64:	cmp	r3, #0
   19f68:	beq	19f74 <traverse_product@@Base+0x780>
   19f6c:	mov	r3, #0
   19f70:	str	r3, [fp, #-32]	; 0xffffffe0
   19f74:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19f78:	mov	r1, r3
   19f7c:	movw	r0, #57224	; 0xdf88
   19f80:	movt	r0, #1
   19f84:	bl	199c8 <traverse_product@@Base+0x1d4>
   19f88:	movw	r3, #460	; 0x1cc
   19f8c:	movt	r3, #3
   19f90:	ldr	r3, [r3]
   19f94:	add	r2, r3, #1
   19f98:	movw	r3, #460	; 0x1cc
   19f9c:	movt	r3, #3
   19fa0:	str	r2, [r3]
   19fa4:	mov	r1, #1
   19fa8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19fac:	bl	19bec <traverse_product@@Base+0x3f8>
   19fb0:	movw	r3, #460	; 0x1cc
   19fb4:	movt	r3, #3
   19fb8:	ldr	r3, [r3]
   19fbc:	sub	r2, r3, #1
   19fc0:	movw	r3, #460	; 0x1cc
   19fc4:	movt	r3, #3
   19fc8:	str	r2, [r3]
   19fcc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   19fd0:	sub	r2, r3, #1
   19fd4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19fd8:	cmp	r2, r3
   19fdc:	ble	19ff8 <traverse_product@@Base+0x804>
   19fe0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   19fe4:	bl	1255c <coda_cursor_goto_next_record_field@plt>
   19fe8:	mov	r3, r0
   19fec:	cmp	r3, #0
   19ff0:	beq	19ff8 <traverse_product@@Base+0x804>
   19ff4:	bl	1aeb8 <handle_coda_error@@Base>
   19ff8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19ffc:	add	r3, r3, #1
   1a000:	str	r3, [fp, #-80]	; 0xffffffb0
   1a004:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a008:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a00c:	cmp	r2, r3
   1a010:	blt	19ef0 <traverse_product@@Base+0x6fc>
   1a014:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a018:	bl	123d0 <coda_cursor_goto_parent@plt>
   1a01c:	b	1a758 <traverse_product@@Base+0xf64>
   1a020:	movw	r0, #57232	; 0xdf90
   1a024:	movt	r0, #1
   1a028:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a02c:	b	1a758 <traverse_product@@Base+0xf64>
   1a030:	sub	r2, fp, #300	; 0x12c
   1a034:	sub	r3, fp, #96	; 0x60
   1a038:	mov	r1, r3
   1a03c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a040:	bl	124fc <coda_cursor_get_array_dim@plt>
   1a044:	mov	r3, r0
   1a048:	cmp	r3, #0
   1a04c:	beq	1a054 <traverse_product@@Base+0x860>
   1a050:	bl	1aeb8 <handle_coda_error@@Base>
   1a054:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a058:	cmp	r3, #0
   1a05c:	blt	1a1a0 <traverse_product@@Base+0x9ac>
   1a060:	mov	r3, #1
   1a064:	str	r3, [fp, #-36]	; 0xffffffdc
   1a068:	mov	r3, #0
   1a06c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a070:	b	1a0a0 <traverse_product@@Base+0x8ac>
   1a074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a078:	lsl	r3, r3, #2
   1a07c:	sub	r2, fp, #28
   1a080:	add	r3, r2, r3
   1a084:	ldr	r2, [r3, #-272]	; 0xfffffef0
   1a088:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a08c:	mul	r3, r2, r3
   1a090:	str	r3, [fp, #-36]	; 0xffffffdc
   1a094:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a098:	add	r3, r3, #1
   1a09c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a0a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a0a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a0a8:	cmp	r2, r3
   1a0ac:	blt	1a074 <traverse_product@@Base+0x880>
   1a0b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0b4:	cmp	r3, #0
   1a0b8:	ble	1a190 <traverse_product@@Base+0x99c>
   1a0bc:	movw	r0, #57204	; 0xdf74
   1a0c0:	movt	r0, #1
   1a0c4:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a0c8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a0cc:	bl	12340 <coda_cursor_goto_first_array_element@plt>
   1a0d0:	mov	r3, r0
   1a0d4:	cmp	r3, #0
   1a0d8:	beq	1a0e0 <traverse_product@@Base+0x8ec>
   1a0dc:	bl	1aeb8 <handle_coda_error@@Base>
   1a0e0:	mov	r3, #0
   1a0e4:	str	r3, [fp, #-40]	; 0xffffffd8
   1a0e8:	b	1a174 <traverse_product@@Base+0x980>
   1a0ec:	movw	r0, #57236	; 0xdf94
   1a0f0:	movt	r0, #1
   1a0f4:	bl	19a24 <traverse_product@@Base+0x230>
   1a0f8:	movw	r3, #460	; 0x1cc
   1a0fc:	movt	r3, #3
   1a100:	ldr	r3, [r3]
   1a104:	add	r2, r3, #1
   1a108:	movw	r3, #460	; 0x1cc
   1a10c:	movt	r3, #3
   1a110:	str	r2, [r3]
   1a114:	mov	r1, #0
   1a118:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a11c:	bl	19bec <traverse_product@@Base+0x3f8>
   1a120:	movw	r3, #460	; 0x1cc
   1a124:	movt	r3, #3
   1a128:	ldr	r3, [r3]
   1a12c:	sub	r2, r3, #1
   1a130:	movw	r3, #460	; 0x1cc
   1a134:	movt	r3, #3
   1a138:	str	r2, [r3]
   1a13c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a140:	sub	r3, r3, #1
   1a144:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a148:	cmp	r2, r3
   1a14c:	bge	1a168 <traverse_product@@Base+0x974>
   1a150:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a154:	bl	1243c <coda_cursor_goto_next_array_element@plt>
   1a158:	mov	r3, r0
   1a15c:	cmp	r3, #0
   1a160:	beq	1a168 <traverse_product@@Base+0x974>
   1a164:	bl	1aeb8 <handle_coda_error@@Base>
   1a168:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a16c:	add	r3, r3, #1
   1a170:	str	r3, [fp, #-40]	; 0xffffffd8
   1a174:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a178:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a17c:	cmp	r2, r3
   1a180:	blt	1a0ec <traverse_product@@Base+0x8f8>
   1a184:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a188:	bl	123d0 <coda_cursor_goto_parent@plt>
   1a18c:	b	1a758 <traverse_product@@Base+0xf64>
   1a190:	movw	r0, #57240	; 0xdf98
   1a194:	movt	r0, #1
   1a198:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a19c:	b	1a758 <traverse_product@@Base+0xf64>
   1a1a0:	movw	r0, #57240	; 0xdf98
   1a1a4:	movt	r0, #1
   1a1a8:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a1ac:	b	1a758 <traverse_product@@Base+0xf64>
   1a1b0:	sub	r3, fp, #100	; 0x64
   1a1b4:	mov	r1, r3
   1a1b8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a1bc:	bl	12394 <coda_cursor_get_read_type@plt>
   1a1c0:	mov	r3, r0
   1a1c4:	cmp	r3, #0
   1a1c8:	beq	1a1d0 <traverse_product@@Base+0x9dc>
   1a1cc:	bl	1aeb8 <handle_coda_error@@Base>
   1a1d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a1d4:	add	r3, r3, #1
   1a1d8:	cmp	r3, #13
   1a1dc:	ldrls	pc, [pc, r3, lsl #2]
   1a1e0:	b	1a74c <traverse_product@@Base+0xf58>
   1a1e4:	andeq	sl, r1, ip, lsr #11
   1a1e8:	andeq	sl, r1, r8, asr r4
   1a1ec:	muleq	r1, r0, r4
   1a1f0:	andeq	sl, r1, r8, asr r4
   1a1f4:	muleq	r1, r0, r4
   1a1f8:	andeq	sl, r1, r8, asr r4
   1a1fc:	muleq	r1, r0, r4
   1a200:	andeq	sl, r1, r8, asr #9
   1a204:	andeq	sl, r1, r0, lsl r5
   1a208:	andeq	sl, r1, r8, asr r5
   1a20c:	andeq	sl, r1, r8, asr r5
   1a210:	andeq	sl, r1, ip, lsl r2
   1a214:	andeq	sl, r1, r8, ror #4
   1a218:	andeq	sl, r1, ip, lsr r3
   1a21c:	sub	r3, fp, #101	; 0x65
   1a220:	mov	r1, r3
   1a224:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a228:	bl	12478 <coda_cursor_read_char@plt>
   1a22c:	mov	r3, r0
   1a230:	cmp	r3, #0
   1a234:	beq	1a23c <traverse_product@@Base+0xa48>
   1a238:	bl	1aeb8 <handle_coda_error@@Base>
   1a23c:	movw	r0, #57244	; 0xdf9c
   1a240:	movt	r0, #1
   1a244:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a248:	sub	r3, fp, #101	; 0x65
   1a24c:	mov	r1, #1
   1a250:	mov	r0, r3
   1a254:	bl	19a84 <traverse_product@@Base+0x290>
   1a258:	movw	r0, #57248	; 0xdfa0
   1a25c:	movt	r0, #1
   1a260:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a264:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a268:	sub	r3, fp, #108	; 0x6c
   1a26c:	mov	r1, r3
   1a270:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a274:	bl	12400 <coda_cursor_get_string_length@plt>
   1a278:	mov	r3, r0
   1a27c:	cmp	r3, #0
   1a280:	beq	1a288 <traverse_product@@Base+0xa94>
   1a284:	bl	1aeb8 <handle_coda_error@@Base>
   1a288:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a28c:	add	r3, r3, #1
   1a290:	mov	r0, r3
   1a294:	bl	123a0 <malloc@plt>
   1a298:	mov	r3, r0
   1a29c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a2a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a2a4:	cmp	r3, #0
   1a2a8:	bne	1a2d8 <traverse_product@@Base+0xae4>
   1a2ac:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2b0:	add	r2, r3, #1
   1a2b4:	movw	r3, #361	; 0x169
   1a2b8:	str	r3, [sp]
   1a2bc:	movw	r3, #57064	; 0xdee8
   1a2c0:	movt	r3, #1
   1a2c4:	movw	r1, #57252	; 0xdfa4
   1a2c8:	movt	r1, #1
   1a2cc:	mvn	r0, #0
   1a2d0:	bl	12220 <coda_set_error@plt>
   1a2d4:	bl	1aeb8 <handle_coda_error@@Base>
   1a2d8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2dc:	add	r3, r3, #1
   1a2e0:	mov	r2, r3
   1a2e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2e8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a2ec:	bl	123c4 <coda_cursor_read_string@plt>
   1a2f0:	mov	r3, r0
   1a2f4:	cmp	r3, #0
   1a2f8:	beq	1a300 <traverse_product@@Base+0xb0c>
   1a2fc:	bl	1aeb8 <handle_coda_error@@Base>
   1a300:	movw	r0, #57244	; 0xdf9c
   1a304:	movt	r0, #1
   1a308:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a30c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a310:	mov	r1, r3
   1a314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a318:	bl	19a84 <traverse_product@@Base+0x290>
   1a31c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a320:	mov	r1, r3
   1a324:	movw	r0, #57248	; 0xdfa0
   1a328:	movt	r0, #1
   1a32c:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a334:	bl	12268 <free@plt>
   1a338:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a33c:	sub	r3, fp, #116	; 0x74
   1a340:	mov	r1, r3
   1a344:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a348:	bl	12580 <coda_cursor_get_bit_size@plt>
   1a34c:	mov	r3, r0
   1a350:	cmp	r3, #0
   1a354:	beq	1a35c <traverse_product@@Base+0xb68>
   1a358:	bl	1aeb8 <handle_coda_error@@Base>
   1a35c:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1a360:	mov	r2, #0
   1a364:	mov	r3, #0
   1a368:	lsr	r2, r0, #3
   1a36c:	orr	r2, r2, r1, lsl #29
   1a370:	asr	r3, r1, #3
   1a374:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1a378:	mov	r8, #7
   1a37c:	mov	r9, #0
   1a380:	and	r6, r0, r8
   1a384:	and	r7, r1, r9
   1a388:	orrs	r1, r6, r7
   1a38c:	beq	1a39c <traverse_product@@Base+0xba8>
   1a390:	mov	r0, #1
   1a394:	mov	r1, #0
   1a398:	b	1a3a4 <traverse_product@@Base+0xbb0>
   1a39c:	mov	r0, #0
   1a3a0:	mov	r1, #0
   1a3a4:	adds	r4, r0, r2
   1a3a8:	adc	r5, r1, r3
   1a3ac:	strd	r4, [fp, #-52]	; 0xffffffcc
   1a3b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a3b4:	mov	r0, r3
   1a3b8:	bl	123a0 <malloc@plt>
   1a3bc:	mov	r3, r0
   1a3c0:	str	r3, [fp, #-56]	; 0xffffffc8
   1a3c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a3c8:	cmp	r3, #0
   1a3cc:	bne	1a3f8 <traverse_product@@Base+0xc04>
   1a3d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a3d4:	mov	r3, #392	; 0x188
   1a3d8:	str	r3, [sp]
   1a3dc:	movw	r3, #57064	; 0xdee8
   1a3e0:	movt	r3, #1
   1a3e4:	movw	r1, #57252	; 0xdfa4
   1a3e8:	movt	r1, #1
   1a3ec:	mvn	r0, #0
   1a3f0:	bl	12220 <coda_set_error@plt>
   1a3f4:	bl	1aeb8 <handle_coda_error@@Base>
   1a3f8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   1a3fc:	strd	r2, [sp]
   1a400:	mov	r2, #0
   1a404:	mov	r3, #0
   1a408:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a40c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a410:	bl	1261c <coda_cursor_read_bits@plt>
   1a414:	mov	r3, r0
   1a418:	cmp	r3, #0
   1a41c:	beq	1a424 <traverse_product@@Base+0xc30>
   1a420:	bl	1aeb8 <handle_coda_error@@Base>
   1a424:	movw	r0, #57244	; 0xdf9c
   1a428:	movt	r0, #1
   1a42c:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a430:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a434:	mov	r1, r3
   1a438:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a43c:	bl	19a84 <traverse_product@@Base+0x290>
   1a440:	movw	r0, #57248	; 0xdfa0
   1a444:	movt	r0, #1
   1a448:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a44c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a450:	bl	12268 <free@plt>
   1a454:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a458:	sub	r3, fp, #120	; 0x78
   1a45c:	mov	r1, r3
   1a460:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a464:	bl	125bc <coda_cursor_read_int32@plt>
   1a468:	mov	r3, r0
   1a46c:	cmp	r3, #0
   1a470:	beq	1a478 <traverse_product@@Base+0xc84>
   1a474:	bl	1aeb8 <handle_coda_error@@Base>
   1a478:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a47c:	mov	r1, r3
   1a480:	movw	r0, #57308	; 0xdfdc
   1a484:	movt	r0, #1
   1a488:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a48c:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a490:	sub	r3, fp, #124	; 0x7c
   1a494:	mov	r1, r3
   1a498:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a49c:	bl	1228c <coda_cursor_read_uint32@plt>
   1a4a0:	mov	r3, r0
   1a4a4:	cmp	r3, #0
   1a4a8:	beq	1a4b0 <traverse_product@@Base+0xcbc>
   1a4ac:	bl	1aeb8 <handle_coda_error@@Base>
   1a4b0:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a4b4:	mov	r1, r3
   1a4b8:	movw	r0, #57316	; 0xdfe4
   1a4bc:	movt	r0, #1
   1a4c0:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a4c4:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a4c8:	sub	r3, fp, #132	; 0x84
   1a4cc:	mov	r1, r3
   1a4d0:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a4d4:	bl	12520 <coda_cursor_read_int64@plt>
   1a4d8:	mov	r3, r0
   1a4dc:	cmp	r3, #0
   1a4e0:	beq	1a4e8 <traverse_product@@Base+0xcf4>
   1a4e4:	bl	1aeb8 <handle_coda_error@@Base>
   1a4e8:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   1a4ec:	sub	r3, fp, #156	; 0x9c
   1a4f0:	mov	r2, r3
   1a4f4:	bl	12628 <coda_str64@plt>
   1a4f8:	sub	r3, fp, #156	; 0x9c
   1a4fc:	mov	r1, r3
   1a500:	movw	r0, #57324	; 0xdfec
   1a504:	movt	r0, #1
   1a508:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a50c:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a510:	sub	r3, fp, #164	; 0xa4
   1a514:	mov	r1, r3
   1a518:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a51c:	bl	1240c <coda_cursor_read_uint64@plt>
   1a520:	mov	r3, r0
   1a524:	cmp	r3, #0
   1a528:	beq	1a530 <traverse_product@@Base+0xd3c>
   1a52c:	bl	1aeb8 <handle_coda_error@@Base>
   1a530:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   1a534:	sub	r3, fp, #188	; 0xbc
   1a538:	mov	r2, r3
   1a53c:	bl	1225c <coda_str64u@plt>
   1a540:	sub	r3, fp, #188	; 0xbc
   1a544:	mov	r1, r3
   1a548:	movw	r0, #57324	; 0xdfec
   1a54c:	movt	r0, #1
   1a550:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a554:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a558:	sub	r3, fp, #196	; 0xc4
   1a55c:	mov	r1, r3
   1a560:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a564:	bl	12418 <coda_cursor_read_double@plt>
   1a568:	mov	r3, r0
   1a56c:	cmp	r3, #0
   1a570:	beq	1a578 <traverse_product@@Base+0xd84>
   1a574:	bl	1aeb8 <handle_coda_error@@Base>
   1a578:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a57c:	cmp	r3, #8
   1a580:	bne	1a598 <traverse_product@@Base+0xda4>
   1a584:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1a588:	movw	r0, #57328	; 0xdff0
   1a58c:	movt	r0, #1
   1a590:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a594:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a598:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1a59c:	movw	r0, #57336	; 0xdff8
   1a5a0:	movt	r0, #1
   1a5a4:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a5a8:	b	1a5bc <traverse_product@@Base+0xdc8>
   1a5ac:	movw	r0, #57344	; 0xe000
   1a5b0:	movt	r0, #1
   1a5b4:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a5b8:	nop	{0}
   1a5bc:	b	1a74c <traverse_product@@Base+0xf58>
   1a5c0:	sub	r3, fp, #200	; 0xc8
   1a5c4:	mov	r1, r3
   1a5c8:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a5cc:	bl	12334 <coda_cursor_get_special_type@plt>
   1a5d0:	mov	r3, r0
   1a5d4:	cmp	r3, #0
   1a5d8:	beq	1a5e0 <traverse_product@@Base+0xdec>
   1a5dc:	bl	1aeb8 <handle_coda_error@@Base>
   1a5e0:	ldr	r3, [fp, #-200]	; 0xffffff38
   1a5e4:	cmp	r3, #3
   1a5e8:	ldrls	pc, [pc, r3, lsl #2]
   1a5ec:	b	1a754 <traverse_product@@Base+0xf60>
   1a5f0:	andeq	sl, r1, r0, lsl #12
   1a5f4:	andeq	sl, r1, r0, lsl r6
   1a5f8:	andeq	sl, r1, r4, asr #12
   1a5fc:	strdeq	sl, [r1], -r8
   1a600:	movw	r0, #57344	; 0xe000
   1a604:	movt	r0, #1
   1a608:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a60c:	b	1a748 <traverse_product@@Base+0xf54>
   1a610:	sub	r3, fp, #212	; 0xd4
   1a614:	mov	r1, r3
   1a618:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a61c:	bl	12418 <coda_cursor_read_double@plt>
   1a620:	mov	r3, r0
   1a624:	cmp	r3, #0
   1a628:	beq	1a630 <traverse_product@@Base+0xe3c>
   1a62c:	bl	1aeb8 <handle_coda_error@@Base>
   1a630:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   1a634:	movw	r0, #57336	; 0xdff8
   1a638:	movt	r0, #1
   1a63c:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a640:	b	1a748 <traverse_product@@Base+0xf54>
   1a644:	sub	r3, fp, #220	; 0xdc
   1a648:	mov	r1, r3
   1a64c:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a650:	bl	12418 <coda_cursor_read_double@plt>
   1a654:	mov	r3, r0
   1a658:	cmp	r3, #0
   1a65c:	beq	1a664 <traverse_product@@Base+0xe70>
   1a660:	bl	1aeb8 <handle_coda_error@@Base>
   1a664:	vldr	d7, [fp, #-220]	; 0xffffff24
   1a668:	vmov.f64	d0, d7
   1a66c:	bl	12424 <coda_isNaN@plt>
   1a670:	mov	r3, r0
   1a674:	cmp	r3, #0
   1a678:	bne	1a694 <traverse_product@@Base+0xea0>
   1a67c:	vldr	d7, [fp, #-220]	; 0xffffff24
   1a680:	vmov.f64	d0, d7
   1a684:	bl	122c8 <coda_isInf@plt>
   1a688:	mov	r3, r0
   1a68c:	cmp	r3, #0
   1a690:	beq	1a6a8 <traverse_product@@Base+0xeb4>
   1a694:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1a698:	movw	r0, #57336	; 0xdff8
   1a69c:	movt	r0, #1
   1a6a0:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a6a4:	b	1a748 <traverse_product@@Base+0xf54>
   1a6a8:	vldr	d7, [fp, #-220]	; 0xffffff24
   1a6ac:	sub	r3, fp, #248	; 0xf8
   1a6b0:	mov	r1, r3
   1a6b4:	movw	r0, #57352	; 0xe008
   1a6b8:	movt	r0, #1
   1a6bc:	vmov.f64	d0, d7
   1a6c0:	bl	12244 <coda_time_double_to_string@plt>
   1a6c4:	mov	r3, r0
   1a6c8:	cmp	r3, #0
   1a6cc:	beq	1a6e0 <traverse_product@@Base+0xeec>
   1a6d0:	movw	r0, #57384	; 0xe028
   1a6d4:	movt	r0, #1
   1a6d8:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a6dc:	b	1a748 <traverse_product@@Base+0xf54>
   1a6e0:	sub	r3, fp, #248	; 0xf8
   1a6e4:	mov	r1, r3
   1a6e8:	movw	r0, #57324	; 0xdfec
   1a6ec:	movt	r0, #1
   1a6f0:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a6f4:	b	1a748 <traverse_product@@Base+0xf54>
   1a6f8:	sub	r2, fp, #268	; 0x10c
   1a6fc:	sub	r3, fp, #260	; 0x104
   1a700:	mov	r1, r3
   1a704:	ldr	r0, [fp, #-304]	; 0xfffffed0
   1a708:	bl	124c0 <coda_cursor_read_complex_double_split@plt>
   1a70c:	mov	r3, r0
   1a710:	cmp	r3, #0
   1a714:	beq	1a71c <traverse_product@@Base+0xf28>
   1a718:	bl	1aeb8 <handle_coda_error@@Base>
   1a71c:	sub	r1, fp, #260	; 0x104
   1a720:	ldrd	r0, [r1]
   1a724:	sub	r3, fp, #268	; 0x10c
   1a728:	ldrd	r2, [r3]
   1a72c:	strd	r2, [sp]
   1a730:	mov	r2, r0
   1a734:	mov	r3, r1
   1a738:	movw	r0, #57412	; 0xe044
   1a73c:	movt	r0, #1
   1a740:	bl	199c8 <traverse_product@@Base+0x1d4>
   1a744:	nop	{0}
   1a748:	b	1a754 <traverse_product@@Base+0xf60>
   1a74c:	nop	{0}
   1a750:	b	1a758 <traverse_product@@Base+0xf64>
   1a754:	nop	{0}
   1a758:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a75c:	cmp	r3, #0
   1a760:	beq	1a780 <traverse_product@@Base+0xf8c>
   1a764:	movw	r3, #460	; 0x1cc
   1a768:	movt	r3, #3
   1a76c:	ldr	r3, [r3]
   1a770:	sub	r2, r3, #1
   1a774:	movw	r3, #460	; 0x1cc
   1a778:	movt	r3, #3
   1a77c:	str	r2, [r3]
   1a780:	nop	{0}
   1a784:	sub	sp, fp, #28
   1a788:	ldrd	r4, [sp]
   1a78c:	ldrd	r6, [sp, #8]
   1a790:	ldrd	r8, [sp, #16]
   1a794:	ldr	fp, [sp, #24]
   1a798:	add	sp, sp, #28
   1a79c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a7a0 <print_yaml_data@@Base>:
   1a7a0:	str	fp, [sp, #-8]!
   1a7a4:	str	lr, [sp, #4]
   1a7a8:	add	fp, sp, #4
   1a7ac:	sub	sp, sp, #536	; 0x218
   1a7b0:	str	r0, [fp, #-536]	; 0xfffffde8
   1a7b4:	movw	r3, #464	; 0x1d0
   1a7b8:	movt	r3, #3
   1a7bc:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1a7c0:	str	r2, [r3]
   1a7c4:	movw	r3, #496	; 0x1f0
   1a7c8:	movt	r3, #3
   1a7cc:	ldr	r3, [r3]
   1a7d0:	sub	r2, fp, #12
   1a7d4:	mov	r1, r2
   1a7d8:	mov	r0, r3
   1a7dc:	bl	1222c <coda_open@plt>
   1a7e0:	str	r0, [fp, #-8]
   1a7e4:	ldr	r3, [fp, #-8]
   1a7e8:	cmp	r3, #0
   1a7ec:	beq	1a834 <print_yaml_data@@Base+0x94>
   1a7f0:	bl	125e0 <coda_get_errno@plt>
   1a7f4:	mov	r3, r0
   1a7f8:	ldr	r3, [r3]
   1a7fc:	cmn	r3, #21
   1a800:	bne	1a834 <print_yaml_data@@Base+0x94>
   1a804:	mov	r0, #0
   1a808:	bl	12274 <coda_set_option_use_mmap@plt>
   1a80c:	movw	r3, #496	; 0x1f0
   1a810:	movt	r3, #3
   1a814:	ldr	r3, [r3]
   1a818:	sub	r2, fp, #12
   1a81c:	mov	r1, r2
   1a820:	mov	r0, r3
   1a824:	bl	1222c <coda_open@plt>
   1a828:	str	r0, [fp, #-8]
   1a82c:	mov	r0, #1
   1a830:	bl	12274 <coda_set_option_use_mmap@plt>
   1a834:	ldr	r3, [fp, #-8]
   1a838:	cmp	r3, #0
   1a83c:	beq	1a844 <print_yaml_data@@Base+0xa4>
   1a840:	bl	1aeb8 <handle_coda_error@@Base>
   1a844:	ldr	r2, [fp, #-12]
   1a848:	sub	r3, fp, #532	; 0x214
   1a84c:	mov	r1, r2
   1a850:	mov	r0, r3
   1a854:	bl	12358 <coda_cursor_set_product@plt>
   1a858:	mov	r3, r0
   1a85c:	cmp	r3, #0
   1a860:	beq	1a868 <print_yaml_data@@Base+0xc8>
   1a864:	bl	1aeb8 <handle_coda_error@@Base>
   1a868:	movw	r3, #4272	; 0x10b0
   1a86c:	movt	r3, #3
   1a870:	ldr	r3, [r3]
   1a874:	cmp	r3, #0
   1a878:	beq	1a8ac <print_yaml_data@@Base+0x10c>
   1a87c:	movw	r3, #4272	; 0x10b0
   1a880:	movt	r3, #3
   1a884:	ldr	r2, [r3]
   1a888:	sub	r3, fp, #532	; 0x214
   1a88c:	mov	r1, r2
   1a890:	mov	r0, r3
   1a894:	bl	12538 <coda_cursor_goto@plt>
   1a898:	str	r0, [fp, #-8]
   1a89c:	ldr	r3, [fp, #-8]
   1a8a0:	cmp	r3, #0
   1a8a4:	beq	1a8ac <print_yaml_data@@Base+0x10c>
   1a8a8:	bl	1aeb8 <handle_coda_error@@Base>
   1a8ac:	mov	r0, #0
   1a8b0:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   1a8b4:	sub	r3, fp, #532	; 0x214
   1a8b8:	mov	r1, #0
   1a8bc:	mov	r0, r3
   1a8c0:	bl	19bec <traverse_product@@Base+0x3f8>
   1a8c4:	ldr	r3, [fp, #-12]
   1a8c8:	mov	r0, r3
   1a8cc:	bl	12514 <coda_close@plt>
   1a8d0:	nop	{0}
   1a8d4:	sub	sp, fp, #4
   1a8d8:	ldr	fp, [sp]
   1a8dc:	add	sp, sp, #4
   1a8e0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8e4:	str	fp, [sp, #-8]!
   1a8e8:	str	lr, [sp, #4]
   1a8ec:	add	fp, sp, #4
   1a8f0:	bl	125d4 <coda_get_libcoda_version@plt>
   1a8f4:	mov	r3, r0
   1a8f8:	mov	r1, r3
   1a8fc:	movw	r0, #57432	; 0xe058
   1a900:	movt	r0, #1
   1a904:	bl	121fc <printf@plt>
   1a908:	movw	r0, #57456	; 0xe070
   1a90c:	movt	r0, #1
   1a910:	bl	12388 <puts@plt>
   1a914:	mov	r0, #10
   1a918:	bl	12490 <putchar@plt>
   1a91c:	nop	{0}
   1a920:	sub	sp, fp, #4
   1a924:	ldr	fp, [sp]
   1a928:	add	sp, sp, #4
   1a92c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a930:	str	fp, [sp, #-8]!
   1a934:	str	lr, [sp, #4]
   1a938:	add	fp, sp, #4
   1a93c:	movw	r0, #57504	; 0xe0a0
   1a940:	movt	r0, #1
   1a944:	bl	12388 <puts@plt>
   1a948:	movw	r0, #57512	; 0xe0a8
   1a94c:	movt	r0, #1
   1a950:	bl	12388 <puts@plt>
   1a954:	movw	r0, #57584	; 0xe0f0
   1a958:	movt	r0, #1
   1a95c:	bl	12388 <puts@plt>
   1a960:	movw	r0, #57628	; 0xe11c
   1a964:	movt	r0, #1
   1a968:	bl	12388 <puts@plt>
   1a96c:	movw	r0, #57652	; 0xe134
   1a970:	movt	r0, #1
   1a974:	bl	12388 <puts@plt>
   1a978:	movw	r0, #57680	; 0xe150
   1a97c:	movt	r0, #1
   1a980:	bl	12388 <puts@plt>
   1a984:	movw	r0, #57736	; 0xe188
   1a988:	movt	r0, #1
   1a98c:	bl	12388 <puts@plt>
   1a990:	movw	r0, #57776	; 0xe1b0
   1a994:	movt	r0, #1
   1a998:	bl	12388 <puts@plt>
   1a99c:	movw	r0, #57836	; 0xe1ec
   1a9a0:	movt	r0, #1
   1a9a4:	bl	12388 <puts@plt>
   1a9a8:	movw	r0, #57884	; 0xe21c
   1a9ac:	movt	r0, #1
   1a9b0:	bl	12388 <puts@plt>
   1a9b4:	movw	r0, #57956	; 0xe264
   1a9b8:	movt	r0, #1
   1a9bc:	bl	12388 <puts@plt>
   1a9c0:	movw	r0, #57980	; 0xe27c
   1a9c4:	movt	r0, #1
   1a9c8:	bl	12388 <puts@plt>
   1a9cc:	movw	r0, #58024	; 0xe2a8
   1a9d0:	movt	r0, #1
   1a9d4:	bl	12388 <puts@plt>
   1a9d8:	movw	r0, #58048	; 0xe2c0
   1a9dc:	movt	r0, #1
   1a9e0:	bl	12388 <puts@plt>
   1a9e4:	movw	r0, #58092	; 0xe2ec
   1a9e8:	movt	r0, #1
   1a9ec:	bl	12388 <puts@plt>
   1a9f0:	movw	r0, #58120	; 0xe308
   1a9f4:	movt	r0, #1
   1a9f8:	bl	12388 <puts@plt>
   1a9fc:	movw	r0, #58172	; 0xe33c
   1aa00:	movt	r0, #1
   1aa04:	bl	12388 <puts@plt>
   1aa08:	movw	r0, #58200	; 0xe358
   1aa0c:	movt	r0, #1
   1aa10:	bl	12388 <puts@plt>
   1aa14:	movw	r0, #58272	; 0xe3a0
   1aa18:	movt	r0, #1
   1aa1c:	bl	12388 <puts@plt>
   1aa20:	movw	r0, #58316	; 0xe3cc
   1aa24:	movt	r0, #1
   1aa28:	bl	12388 <puts@plt>
   1aa2c:	movw	r0, #58348	; 0xe3ec
   1aa30:	movt	r0, #1
   1aa34:	bl	12388 <puts@plt>
   1aa38:	movw	r0, #58428	; 0xe43c
   1aa3c:	movt	r0, #1
   1aa40:	bl	12388 <puts@plt>
   1aa44:	movw	r0, #58508	; 0xe48c
   1aa48:	movt	r0, #1
   1aa4c:	bl	12388 <puts@plt>
   1aa50:	mov	r0, #10
   1aa54:	bl	12490 <putchar@plt>
   1aa58:	movw	r0, #58540	; 0xe4ac
   1aa5c:	movt	r0, #1
   1aa60:	bl	12388 <puts@plt>
   1aa64:	movw	r0, #58612	; 0xe4f4
   1aa68:	movt	r0, #1
   1aa6c:	bl	12388 <puts@plt>
   1aa70:	movw	r0, #57628	; 0xe11c
   1aa74:	movt	r0, #1
   1aa78:	bl	12388 <puts@plt>
   1aa7c:	movw	r0, #57736	; 0xe188
   1aa80:	movt	r0, #1
   1aa84:	bl	12388 <puts@plt>
   1aa88:	movw	r0, #57776	; 0xe1b0
   1aa8c:	movt	r0, #1
   1aa90:	bl	12388 <puts@plt>
   1aa94:	movw	r0, #57836	; 0xe1ec
   1aa98:	movt	r0, #1
   1aa9c:	bl	12388 <puts@plt>
   1aaa0:	movw	r0, #57884	; 0xe21c
   1aaa4:	movt	r0, #1
   1aaa8:	bl	12388 <puts@plt>
   1aaac:	movw	r0, #58672	; 0xe530
   1aab0:	movt	r0, #1
   1aab4:	bl	12388 <puts@plt>
   1aab8:	movw	r0, #58696	; 0xe548
   1aabc:	movt	r0, #1
   1aac0:	bl	12388 <puts@plt>
   1aac4:	movw	r0, #58764	; 0xe58c
   1aac8:	movt	r0, #1
   1aacc:	bl	12388 <puts@plt>
   1aad0:	movw	r0, #58788	; 0xe5a4
   1aad4:	movt	r0, #1
   1aad8:	bl	12388 <puts@plt>
   1aadc:	movw	r0, #58864	; 0xe5f0
   1aae0:	movt	r0, #1
   1aae4:	bl	12388 <puts@plt>
   1aae8:	movw	r0, #58900	; 0xe614
   1aaec:	movt	r0, #1
   1aaf0:	bl	12388 <puts@plt>
   1aaf4:	movw	r0, #58952	; 0xe648
   1aaf8:	movt	r0, #1
   1aafc:	bl	12388 <puts@plt>
   1ab00:	movw	r0, #58984	; 0xe668
   1ab04:	movt	r0, #1
   1ab08:	bl	12388 <puts@plt>
   1ab0c:	movw	r0, #59060	; 0xe6b4
   1ab10:	movt	r0, #1
   1ab14:	bl	12388 <puts@plt>
   1ab18:	movw	r0, #59116	; 0xe6ec
   1ab1c:	movt	r0, #1
   1ab20:	bl	12388 <puts@plt>
   1ab24:	movw	r0, #59192	; 0xe738
   1ab28:	movt	r0, #1
   1ab2c:	bl	12388 <puts@plt>
   1ab30:	movw	r0, #59228	; 0xe75c
   1ab34:	movt	r0, #1
   1ab38:	bl	12388 <puts@plt>
   1ab3c:	movw	r0, #58316	; 0xe3cc
   1ab40:	movt	r0, #1
   1ab44:	bl	12388 <puts@plt>
   1ab48:	movw	r0, #58348	; 0xe3ec
   1ab4c:	movt	r0, #1
   1ab50:	bl	12388 <puts@plt>
   1ab54:	movw	r0, #58428	; 0xe43c
   1ab58:	movt	r0, #1
   1ab5c:	bl	12388 <puts@plt>
   1ab60:	movw	r0, #58508	; 0xe48c
   1ab64:	movt	r0, #1
   1ab68:	bl	12388 <puts@plt>
   1ab6c:	mov	r0, #10
   1ab70:	bl	12490 <putchar@plt>
   1ab74:	movw	r0, #59308	; 0xe7ac
   1ab78:	movt	r0, #1
   1ab7c:	bl	12388 <puts@plt>
   1ab80:	movw	r0, #59380	; 0xe7f4
   1ab84:	movt	r0, #1
   1ab88:	bl	12388 <puts@plt>
   1ab8c:	movw	r0, #59440	; 0xe830
   1ab90:	movt	r0, #1
   1ab94:	bl	12388 <puts@plt>
   1ab98:	movw	r0, #59464	; 0xe848
   1ab9c:	movt	r0, #1
   1aba0:	bl	12388 <puts@plt>
   1aba4:	movw	r0, #59496	; 0xe868
   1aba8:	movt	r0, #1
   1abac:	bl	12388 <puts@plt>
   1abb0:	movw	r0, #59568	; 0xe8b0
   1abb4:	movt	r0, #1
   1abb8:	bl	12388 <puts@plt>
   1abbc:	movw	r0, #57736	; 0xe188
   1abc0:	movt	r0, #1
   1abc4:	bl	12388 <puts@plt>
   1abc8:	movw	r0, #57776	; 0xe1b0
   1abcc:	movt	r0, #1
   1abd0:	bl	12388 <puts@plt>
   1abd4:	movw	r0, #58864	; 0xe5f0
   1abd8:	movt	r0, #1
   1abdc:	bl	12388 <puts@plt>
   1abe0:	movw	r0, #58900	; 0xe614
   1abe4:	movt	r0, #1
   1abe8:	bl	12388 <puts@plt>
   1abec:	movw	r0, #59644	; 0xe8fc
   1abf0:	movt	r0, #1
   1abf4:	bl	12388 <puts@plt>
   1abf8:	movw	r0, #59676	; 0xe91c
   1abfc:	movt	r0, #1
   1ac00:	bl	12388 <puts@plt>
   1ac04:	movw	r0, #59748	; 0xe964
   1ac08:	movt	r0, #1
   1ac0c:	bl	12388 <puts@plt>
   1ac10:	movw	r0, #58316	; 0xe3cc
   1ac14:	movt	r0, #1
   1ac18:	bl	12388 <puts@plt>
   1ac1c:	movw	r0, #58348	; 0xe3ec
   1ac20:	movt	r0, #1
   1ac24:	bl	12388 <puts@plt>
   1ac28:	movw	r0, #58428	; 0xe43c
   1ac2c:	movt	r0, #1
   1ac30:	bl	12388 <puts@plt>
   1ac34:	movw	r0, #58508	; 0xe48c
   1ac38:	movt	r0, #1
   1ac3c:	bl	12388 <puts@plt>
   1ac40:	mov	r0, #10
   1ac44:	bl	12490 <putchar@plt>
   1ac48:	movw	r0, #59828	; 0xe9b4
   1ac4c:	movt	r0, #1
   1ac50:	bl	12388 <puts@plt>
   1ac54:	movw	r0, #59900	; 0xe9fc
   1ac58:	movt	r0, #1
   1ac5c:	bl	12388 <puts@plt>
   1ac60:	movw	r0, #59960	; 0xea38
   1ac64:	movt	r0, #1
   1ac68:	bl	12388 <puts@plt>
   1ac6c:	movw	r0, #59464	; 0xe848
   1ac70:	movt	r0, #1
   1ac74:	bl	12388 <puts@plt>
   1ac78:	movw	r0, #59496	; 0xe868
   1ac7c:	movt	r0, #1
   1ac80:	bl	12388 <puts@plt>
   1ac84:	movw	r0, #59984	; 0xea50
   1ac88:	movt	r0, #1
   1ac8c:	bl	12388 <puts@plt>
   1ac90:	movw	r0, #60060	; 0xea9c
   1ac94:	movt	r0, #1
   1ac98:	bl	12388 <puts@plt>
   1ac9c:	movw	r0, #57736	; 0xe188
   1aca0:	movt	r0, #1
   1aca4:	bl	12388 <puts@plt>
   1aca8:	movw	r0, #57776	; 0xe1b0
   1acac:	movt	r0, #1
   1acb0:	bl	12388 <puts@plt>
   1acb4:	movw	r0, #58864	; 0xe5f0
   1acb8:	movt	r0, #1
   1acbc:	bl	12388 <puts@plt>
   1acc0:	movw	r0, #58900	; 0xe614
   1acc4:	movt	r0, #1
   1acc8:	bl	12388 <puts@plt>
   1accc:	movw	r0, #59644	; 0xe8fc
   1acd0:	movt	r0, #1
   1acd4:	bl	12388 <puts@plt>
   1acd8:	movw	r0, #59676	; 0xe91c
   1acdc:	movt	r0, #1
   1ace0:	bl	12388 <puts@plt>
   1ace4:	movw	r0, #59748	; 0xe964
   1ace8:	movt	r0, #1
   1acec:	bl	12388 <puts@plt>
   1acf0:	movw	r0, #58316	; 0xe3cc
   1acf4:	movt	r0, #1
   1acf8:	bl	12388 <puts@plt>
   1acfc:	movw	r0, #58348	; 0xe3ec
   1ad00:	movt	r0, #1
   1ad04:	bl	12388 <puts@plt>
   1ad08:	movw	r0, #58428	; 0xe43c
   1ad0c:	movt	r0, #1
   1ad10:	bl	12388 <puts@plt>
   1ad14:	movw	r0, #58508	; 0xe48c
   1ad18:	movt	r0, #1
   1ad1c:	bl	12388 <puts@plt>
   1ad20:	mov	r0, #10
   1ad24:	bl	12490 <putchar@plt>
   1ad28:	movw	r0, #60092	; 0xeabc
   1ad2c:	movt	r0, #1
   1ad30:	bl	12388 <puts@plt>
   1ad34:	movw	r0, #60164	; 0xeb04
   1ad38:	movt	r0, #1
   1ad3c:	bl	12388 <puts@plt>
   1ad40:	movw	r0, #60240	; 0xeb50
   1ad44:	movt	r0, #1
   1ad48:	bl	12388 <puts@plt>
   1ad4c:	movw	r0, #60316	; 0xeb9c
   1ad50:	movt	r0, #1
   1ad54:	bl	12388 <puts@plt>
   1ad58:	movw	r0, #60364	; 0xebcc
   1ad5c:	movt	r0, #1
   1ad60:	bl	12388 <puts@plt>
   1ad64:	movw	r0, #60388	; 0xebe4
   1ad68:	movt	r0, #1
   1ad6c:	bl	12388 <puts@plt>
   1ad70:	movw	r0, #60436	; 0xec14
   1ad74:	movt	r0, #1
   1ad78:	bl	12388 <puts@plt>
   1ad7c:	movw	r0, #58864	; 0xe5f0
   1ad80:	movt	r0, #1
   1ad84:	bl	12388 <puts@plt>
   1ad88:	movw	r0, #58900	; 0xe614
   1ad8c:	movt	r0, #1
   1ad90:	bl	12388 <puts@plt>
   1ad94:	movw	r0, #59644	; 0xe8fc
   1ad98:	movt	r0, #1
   1ad9c:	bl	12388 <puts@plt>
   1ada0:	movw	r0, #59676	; 0xe91c
   1ada4:	movt	r0, #1
   1ada8:	bl	12388 <puts@plt>
   1adac:	movw	r0, #59748	; 0xe964
   1adb0:	movt	r0, #1
   1adb4:	bl	12388 <puts@plt>
   1adb8:	movw	r0, #60492	; 0xec4c
   1adbc:	movt	r0, #1
   1adc0:	bl	12388 <puts@plt>
   1adc4:	movw	r0, #60524	; 0xec6c
   1adc8:	movt	r0, #1
   1adcc:	bl	12388 <puts@plt>
   1add0:	movw	r0, #60604	; 0xecbc
   1add4:	movt	r0, #1
   1add8:	bl	12388 <puts@plt>
   1addc:	movw	r0, #60680	; 0xed08
   1ade0:	movt	r0, #1
   1ade4:	bl	12388 <puts@plt>
   1ade8:	movw	r0, #60744	; 0xed48
   1adec:	movt	r0, #1
   1adf0:	bl	12388 <puts@plt>
   1adf4:	movw	r0, #60824	; 0xed98
   1adf8:	movt	r0, #1
   1adfc:	bl	12388 <puts@plt>
   1ae00:	mov	r0, #10
   1ae04:	bl	12490 <putchar@plt>
   1ae08:	movw	r0, #60880	; 0xedd0
   1ae0c:	movt	r0, #1
   1ae10:	bl	12388 <puts@plt>
   1ae14:	movw	r0, #60904	; 0xede8
   1ae18:	movt	r0, #1
   1ae1c:	bl	12388 <puts@plt>
   1ae20:	mov	r0, #10
   1ae24:	bl	12490 <putchar@plt>
   1ae28:	movw	r0, #60936	; 0xee08
   1ae2c:	movt	r0, #1
   1ae30:	bl	12388 <puts@plt>
   1ae34:	movw	r0, #60964	; 0xee24
   1ae38:	movt	r0, #1
   1ae3c:	bl	12388 <puts@plt>
   1ae40:	mov	r0, #10
   1ae44:	bl	12490 <putchar@plt>
   1ae48:	movw	r0, #61016	; 0xee58
   1ae4c:	movt	r0, #1
   1ae50:	bl	12388 <puts@plt>
   1ae54:	movw	r0, #61096	; 0xeea8
   1ae58:	movt	r0, #1
   1ae5c:	bl	12388 <puts@plt>
   1ae60:	movw	r0, #61172	; 0xeef4
   1ae64:	movt	r0, #1
   1ae68:	bl	12388 <puts@plt>
   1ae6c:	movw	r0, #61216	; 0xef20
   1ae70:	movt	r0, #1
   1ae74:	bl	12388 <puts@plt>
   1ae78:	movw	r0, #61292	; 0xef6c
   1ae7c:	movt	r0, #1
   1ae80:	bl	12388 <puts@plt>
   1ae84:	movw	r0, #61364	; 0xefb4
   1ae88:	movt	r0, #1
   1ae8c:	bl	12388 <puts@plt>
   1ae90:	movw	r0, #61428	; 0xeff4
   1ae94:	movt	r0, #1
   1ae98:	bl	12388 <puts@plt>
   1ae9c:	mov	r0, #10
   1aea0:	bl	12490 <putchar@plt>
   1aea4:	nop	{0}
   1aea8:	sub	sp, fp, #4
   1aeac:	ldr	fp, [sp]
   1aeb0:	add	sp, sp, #4
   1aeb4:	pop	{pc}		; (ldr pc, [sp], #4)

0001aeb8 <handle_coda_error@@Base>:
   1aeb8:	strd	r4, [sp, #-16]!
   1aebc:	str	fp, [sp, #8]
   1aec0:	str	lr, [sp, #12]
   1aec4:	add	fp, sp, #12
   1aec8:	movw	r3, #440	; 0x1b8
   1aecc:	movt	r3, #3
   1aed0:	ldr	r4, [r3]
   1aed4:	bl	125e0 <coda_get_errno@plt>
   1aed8:	mov	r3, r0
   1aedc:	ldr	r3, [r3]
   1aee0:	mov	r0, r3
   1aee4:	bl	12598 <coda_errno_to_string@plt>
   1aee8:	mov	r3, r0
   1aeec:	mov	r2, r3
   1aef0:	movw	r1, #61492	; 0xf034
   1aef4:	movt	r1, #1
   1aef8:	mov	r0, r4
   1aefc:	bl	12430 <fprintf@plt>
   1af00:	movw	r3, #440	; 0x1b8
   1af04:	movt	r3, #3
   1af08:	ldr	r3, [r3]
   1af0c:	mov	r0, r3
   1af10:	bl	12238 <fflush@plt>
   1af14:	mov	r0, #1
   1af18:	bl	123e8 <exit@plt>
   1af1c:	str	r4, [sp, #-12]!
   1af20:	str	fp, [sp, #4]
   1af24:	str	lr, [sp, #8]
   1af28:	add	fp, sp, #8
   1af2c:	sub	sp, sp, #28
   1af30:	str	r0, [fp, #-32]	; 0xffffffe0
   1af34:	str	r1, [fp, #-36]	; 0xffffffdc
   1af38:	movw	r3, #496	; 0x1f0
   1af3c:	movt	r3, #3
   1af40:	mov	r2, #0
   1af44:	str	r2, [r3]
   1af48:	movw	r3, #496	; 0x1f0
   1af4c:	movt	r3, #3
   1af50:	mov	r2, #0
   1af54:	str	r2, [r3, #664]	; 0x298
   1af58:	movw	r3, #472	; 0x1d8
   1af5c:	movt	r3, #3
   1af60:	mov	r2, #1
   1af64:	str	r2, [r3]
   1af68:	movw	r3, #492	; 0x1ec
   1af6c:	movt	r3, #3
   1af70:	mov	r2, #0
   1af74:	str	r2, [r3]
   1af78:	mov	r3, #1
   1af7c:	str	r3, [fp, #-16]
   1af80:	mov	r3, #1
   1af84:	str	r3, [fp, #-20]	; 0xffffffec
   1af88:	movw	r3, #476	; 0x1dc
   1af8c:	movt	r3, #3
   1af90:	mov	r2, #0
   1af94:	str	r2, [r3]
   1af98:	movw	r3, #4256	; 0x10a0
   1af9c:	movt	r3, #3
   1afa0:	mov	r2, #0
   1afa4:	str	r2, [r3]
   1afa8:	movw	r3, #488	; 0x1e8
   1afac:	movt	r3, #3
   1afb0:	mov	r2, #0
   1afb4:	str	r2, [r3]
   1afb8:	movw	r3, #4260	; 0x10a4
   1afbc:	movt	r3, #3
   1afc0:	mov	r2, #0
   1afc4:	str	r2, [r3]
   1afc8:	mov	r3, #0
   1afcc:	str	r3, [fp, #-24]	; 0xffffffe8
   1afd0:	b	1b418 <handle_coda_error@@Base+0x560>
   1afd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1afd8:	lsl	r3, r3, #2
   1afdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1afe0:	add	r3, r2, r3
   1afe4:	ldr	r3, [r3]
   1afe8:	movw	r1, #61504	; 0xf040
   1afec:	movt	r1, #1
   1aff0:	mov	r0, r3
   1aff4:	bl	121e4 <strcmp@plt>
   1aff8:	mov	r3, r0
   1affc:	cmp	r3, #0
   1b000:	beq	1b034 <handle_coda_error@@Base+0x17c>
   1b004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b008:	lsl	r3, r3, #2
   1b00c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b010:	add	r3, r2, r3
   1b014:	ldr	r3, [r3]
   1b018:	movw	r1, #61508	; 0xf044
   1b01c:	movt	r1, #1
   1b020:	mov	r0, r3
   1b024:	bl	121e4 <strcmp@plt>
   1b028:	mov	r3, r0
   1b02c:	cmp	r3, #0
   1b030:	bne	1b048 <handle_coda_error@@Base+0x190>
   1b034:	movw	r3, #492	; 0x1ec
   1b038:	movt	r3, #3
   1b03c:	mov	r2, #1
   1b040:	str	r2, [r3]
   1b044:	b	1b40c <handle_coda_error@@Base+0x554>
   1b048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b04c:	lsl	r3, r3, #2
   1b050:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b054:	add	r3, r2, r3
   1b058:	ldr	r3, [r3]
   1b05c:	movw	r1, #61520	; 0xf050
   1b060:	movt	r1, #1
   1b064:	mov	r0, r3
   1b068:	bl	121e4 <strcmp@plt>
   1b06c:	mov	r3, r0
   1b070:	cmp	r3, #0
   1b074:	beq	1b0a8 <handle_coda_error@@Base+0x1f0>
   1b078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b07c:	lsl	r3, r3, #2
   1b080:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b084:	add	r3, r2, r3
   1b088:	ldr	r3, [r3]
   1b08c:	movw	r1, #61524	; 0xf054
   1b090:	movt	r1, #1
   1b094:	mov	r0, r3
   1b098:	bl	121e4 <strcmp@plt>
   1b09c:	mov	r3, r0
   1b0a0:	cmp	r3, #0
   1b0a4:	bne	1b0b4 <handle_coda_error@@Base+0x1fc>
   1b0a8:	mov	r3, #0
   1b0ac:	str	r3, [fp, #-20]	; 0xffffffec
   1b0b0:	b	1b40c <handle_coda_error@@Base+0x554>
   1b0b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0b8:	lsl	r3, r3, #2
   1b0bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b0c0:	add	r3, r2, r3
   1b0c4:	ldr	r3, [r3]
   1b0c8:	movw	r1, #61548	; 0xf06c
   1b0cc:	movt	r1, #1
   1b0d0:	mov	r0, r3
   1b0d4:	bl	121e4 <strcmp@plt>
   1b0d8:	mov	r3, r0
   1b0dc:	cmp	r3, #0
   1b0e0:	beq	1b114 <handle_coda_error@@Base+0x25c>
   1b0e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0e8:	lsl	r3, r3, #2
   1b0ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b0f0:	add	r3, r2, r3
   1b0f4:	ldr	r3, [r3]
   1b0f8:	movw	r1, #61552	; 0xf070
   1b0fc:	movt	r1, #1
   1b100:	mov	r0, r3
   1b104:	bl	121e4 <strcmp@plt>
   1b108:	mov	r3, r0
   1b10c:	cmp	r3, #0
   1b110:	bne	1b1cc <handle_coda_error@@Base+0x314>
   1b114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b118:	add	r3, r3, #1
   1b11c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b120:	cmp	r2, r3
   1b124:	ble	1b1cc <handle_coda_error@@Base+0x314>
   1b128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b12c:	add	r3, r3, #1
   1b130:	lsl	r3, r3, #2
   1b134:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b138:	add	r3, r2, r3
   1b13c:	ldr	r3, [r3]
   1b140:	ldrb	r3, [r3]
   1b144:	cmp	r3, #45	; 0x2d
   1b148:	beq	1b1cc <handle_coda_error@@Base+0x314>
   1b14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b150:	add	r3, r3, #1
   1b154:	lsl	r3, r3, #2
   1b158:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b15c:	add	r3, r2, r3
   1b160:	ldr	r3, [r3]
   1b164:	mov	r0, r3
   1b168:	bl	175c0 <codadump_filter_create@@Base>
   1b16c:	mov	r2, r0
   1b170:	movw	r3, #496	; 0x1f0
   1b174:	movt	r3, #3
   1b178:	str	r2, [r3, #664]	; 0x298
   1b17c:	movw	r3, #496	; 0x1f0
   1b180:	movt	r3, #3
   1b184:	ldr	r3, [r3, #664]	; 0x298
   1b188:	cmp	r3, #0
   1b18c:	bne	1b1bc <handle_coda_error@@Base+0x304>
   1b190:	movw	r3, #440	; 0x1b8
   1b194:	movt	r3, #3
   1b198:	ldr	r3, [r3]
   1b19c:	mov	r2, #40	; 0x28
   1b1a0:	mov	r1, #1
   1b1a4:	movw	r0, #61564	; 0xf07c
   1b1a8:	movt	r0, #1
   1b1ac:	bl	1234c <fwrite@plt>
   1b1b0:	bl	1a930 <print_yaml_data@@Base+0x190>
   1b1b4:	mov	r0, #1
   1b1b8:	bl	123e8 <exit@plt>
   1b1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1c0:	add	r3, r3, #1
   1b1c4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b1c8:	b	1b40c <handle_coda_error@@Base+0x554>
   1b1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1d0:	lsl	r3, r3, #2
   1b1d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b1d8:	add	r3, r2, r3
   1b1dc:	ldr	r3, [r3]
   1b1e0:	movw	r1, #61608	; 0xf0a8
   1b1e4:	movt	r1, #1
   1b1e8:	mov	r0, r3
   1b1ec:	bl	121e4 <strcmp@plt>
   1b1f0:	mov	r3, r0
   1b1f4:	cmp	r3, #0
   1b1f8:	beq	1b22c <handle_coda_error@@Base+0x374>
   1b1fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b200:	lsl	r3, r3, #2
   1b204:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b208:	add	r3, r2, r3
   1b20c:	ldr	r3, [r3]
   1b210:	movw	r1, #61612	; 0xf0ac
   1b214:	movt	r1, #1
   1b218:	mov	r0, r3
   1b21c:	bl	121e4 <strcmp@plt>
   1b220:	mov	r3, r0
   1b224:	cmp	r3, #0
   1b228:	bne	1b240 <handle_coda_error@@Base+0x388>
   1b22c:	movw	r3, #4256	; 0x10a0
   1b230:	movt	r3, #3
   1b234:	mov	r2, #1
   1b238:	str	r2, [r3]
   1b23c:	b	1b40c <handle_coda_error@@Base+0x554>
   1b240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b244:	lsl	r3, r3, #2
   1b248:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b24c:	add	r3, r2, r3
   1b250:	ldr	r3, [r3]
   1b254:	movw	r1, #61620	; 0xf0b4
   1b258:	movt	r1, #1
   1b25c:	mov	r0, r3
   1b260:	bl	121e4 <strcmp@plt>
   1b264:	mov	r3, r0
   1b268:	cmp	r3, #0
   1b26c:	beq	1b2a0 <handle_coda_error@@Base+0x3e8>
   1b270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b274:	lsl	r3, r3, #2
   1b278:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b27c:	add	r3, r2, r3
   1b280:	ldr	r3, [r3]
   1b284:	movw	r1, #61624	; 0xf0b8
   1b288:	movt	r1, #1
   1b28c:	mov	r0, r3
   1b290:	bl	121e4 <strcmp@plt>
   1b294:	mov	r3, r0
   1b298:	cmp	r3, #0
   1b29c:	bne	1b2b4 <handle_coda_error@@Base+0x3fc>
   1b2a0:	movw	r3, #488	; 0x1e8
   1b2a4:	movt	r3, #3
   1b2a8:	mov	r2, #1
   1b2ac:	str	r2, [r3]
   1b2b0:	b	1b40c <handle_coda_error@@Base+0x554>
   1b2b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2b8:	lsl	r3, r3, #2
   1b2bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b2c0:	add	r3, r2, r3
   1b2c4:	ldr	r3, [r3]
   1b2c8:	movw	r1, #61632	; 0xf0c0
   1b2cc:	movt	r1, #1
   1b2d0:	mov	r0, r3
   1b2d4:	bl	121e4 <strcmp@plt>
   1b2d8:	mov	r3, r0
   1b2dc:	cmp	r3, #0
   1b2e0:	bne	1b2f8 <handle_coda_error@@Base+0x440>
   1b2e4:	movw	r3, #4260	; 0x10a4
   1b2e8:	movt	r3, #3
   1b2ec:	mov	r2, #1
   1b2f0:	str	r2, [r3]
   1b2f4:	b	1b40c <handle_coda_error@@Base+0x554>
   1b2f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2fc:	lsl	r3, r3, #2
   1b300:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b304:	add	r3, r2, r3
   1b308:	ldr	r3, [r3]
   1b30c:	movw	r1, #61648	; 0xf0d0
   1b310:	movt	r1, #1
   1b314:	mov	r0, r3
   1b318:	bl	121e4 <strcmp@plt>
   1b31c:	mov	r3, r0
   1b320:	cmp	r3, #0
   1b324:	bne	1b34c <handle_coda_error@@Base+0x494>
   1b328:	movw	r3, #492	; 0x1ec
   1b32c:	movt	r3, #3
   1b330:	mov	r2, #1
   1b334:	str	r2, [r3]
   1b338:	movw	r3, #476	; 0x1dc
   1b33c:	movt	r3, #3
   1b340:	mov	r2, #1
   1b344:	str	r2, [r3]
   1b348:	b	1b40c <handle_coda_error@@Base+0x554>
   1b34c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b350:	lsl	r3, r3, #2
   1b354:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b358:	add	r3, r2, r3
   1b35c:	ldr	r3, [r3]
   1b360:	movw	r1, #61664	; 0xf0e0
   1b364:	movt	r1, #1
   1b368:	mov	r0, r3
   1b36c:	bl	121e4 <strcmp@plt>
   1b370:	mov	r3, r0
   1b374:	cmp	r3, #0
   1b378:	bne	1b388 <handle_coda_error@@Base+0x4d0>
   1b37c:	mov	r3, #0
   1b380:	str	r3, [fp, #-16]
   1b384:	b	1b40c <handle_coda_error@@Base+0x554>
   1b388:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b38c:	sub	r3, r3, #1
   1b390:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b394:	cmp	r2, r3
   1b398:	bne	1b3e0 <handle_coda_error@@Base+0x528>
   1b39c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b3a0:	lsl	r3, r3, #2
   1b3a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b3a8:	add	r3, r2, r3
   1b3ac:	ldr	r3, [r3]
   1b3b0:	ldrb	r3, [r3]
   1b3b4:	cmp	r3, #45	; 0x2d
   1b3b8:	beq	1b3e0 <handle_coda_error@@Base+0x528>
   1b3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b3c0:	lsl	r3, r3, #2
   1b3c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b3c8:	add	r3, r2, r3
   1b3cc:	ldr	r2, [r3]
   1b3d0:	movw	r3, #496	; 0x1f0
   1b3d4:	movt	r3, #3
   1b3d8:	str	r2, [r3]
   1b3dc:	b	1b40c <handle_coda_error@@Base+0x554>
   1b3e0:	movw	r3, #440	; 0x1b8
   1b3e4:	movt	r3, #3
   1b3e8:	ldr	r3, [r3]
   1b3ec:	mov	r2, #25
   1b3f0:	mov	r1, #1
   1b3f4:	movw	r0, #61684	; 0xf0f4
   1b3f8:	movt	r0, #1
   1b3fc:	bl	1234c <fwrite@plt>
   1b400:	bl	1a930 <print_yaml_data@@Base+0x190>
   1b404:	mov	r0, #1
   1b408:	bl	123e8 <exit@plt>
   1b40c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b410:	add	r3, r3, #1
   1b414:	str	r3, [fp, #-24]	; 0xffffffe8
   1b418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b41c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b420:	cmp	r2, r3
   1b424:	blt	1afd4 <handle_coda_error@@Base+0x11c>
   1b428:	movw	r3, #496	; 0x1f0
   1b42c:	movt	r3, #3
   1b430:	ldr	r3, [r3]
   1b434:	cmp	r3, #0
   1b438:	beq	1b454 <handle_coda_error@@Base+0x59c>
   1b43c:	movw	r3, #496	; 0x1f0
   1b440:	movt	r3, #3
   1b444:	ldr	r3, [r3]
   1b448:	ldrb	r3, [r3]
   1b44c:	cmp	r3, #0
   1b450:	bne	1b480 <handle_coda_error@@Base+0x5c8>
   1b454:	movw	r3, #440	; 0x1b8
   1b458:	movt	r3, #3
   1b45c:	ldr	r3, [r3]
   1b460:	mov	r2, #25
   1b464:	mov	r1, #1
   1b468:	movw	r0, #61684	; 0xf0f4
   1b46c:	movt	r0, #1
   1b470:	bl	1234c <fwrite@plt>
   1b474:	bl	1a930 <print_yaml_data@@Base+0x190>
   1b478:	mov	r0, #1
   1b47c:	bl	123e8 <exit@plt>
   1b480:	bl	12454 <coda_init@plt>
   1b484:	mov	r3, r0
   1b488:	cmp	r3, #0
   1b48c:	beq	1b4d0 <handle_coda_error@@Base+0x618>
   1b490:	movw	r3, #440	; 0x1b8
   1b494:	movt	r3, #3
   1b498:	ldr	r4, [r3]
   1b49c:	bl	125e0 <coda_get_errno@plt>
   1b4a0:	mov	r3, r0
   1b4a4:	ldr	r3, [r3]
   1b4a8:	mov	r0, r3
   1b4ac:	bl	12598 <coda_errno_to_string@plt>
   1b4b0:	mov	r3, r0
   1b4b4:	mov	r2, r3
   1b4b8:	movw	r1, #61492	; 0xf034
   1b4bc:	movt	r1, #1
   1b4c0:	mov	r0, r4
   1b4c4:	bl	12430 <fprintf@plt>
   1b4c8:	mov	r0, #1
   1b4cc:	bl	123e8 <exit@plt>
   1b4d0:	ldr	r3, [fp, #-16]
   1b4d4:	cmp	r3, #0
   1b4d8:	moveq	r3, #1
   1b4dc:	movne	r3, #0
   1b4e0:	uxtb	r3, r3
   1b4e4:	mov	r0, r3
   1b4e8:	bl	12298 <coda_set_option_bypass_special_types@plt>
   1b4ec:	mov	r0, #0
   1b4f0:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   1b4f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b4f8:	bl	12460 <coda_set_option_perform_conversions@plt>
   1b4fc:	bl	18b38 <traverse_info_init@@Base>
   1b500:	bl	14c1c <dim_info_init@@Base>
   1b504:	bl	197f4 <traverse_product@@Base>
   1b508:	bl	14c64 <dim_info_done@@Base>
   1b50c:	bl	18b90 <traverse_info_done@@Base>
   1b510:	bl	1237c <coda_done@plt>
   1b514:	nop	{0}
   1b518:	sub	sp, fp, #8
   1b51c:	ldr	r4, [sp]
   1b520:	ldr	fp, [sp, #4]
   1b524:	add	sp, sp, #8
   1b528:	pop	{pc}		; (ldr pc, [sp], #4)
   1b52c:	str	r4, [sp, #-12]!
   1b530:	str	fp, [sp, #4]
   1b534:	str	lr, [sp, #8]
   1b538:	add	fp, sp, #8
   1b53c:	sub	sp, sp, #28
   1b540:	str	r0, [fp, #-32]	; 0xffffffe0
   1b544:	str	r1, [fp, #-36]	; 0xffffffdc
   1b548:	movw	r3, #496	; 0x1f0
   1b54c:	movt	r3, #3
   1b550:	mov	r2, #0
   1b554:	str	r2, [r3]
   1b558:	movw	r3, #496	; 0x1f0
   1b55c:	movt	r3, #3
   1b560:	mov	r2, #0
   1b564:	str	r2, [r3, #664]	; 0x298
   1b568:	movw	r3, #480	; 0x1e0
   1b56c:	movt	r3, #3
   1b570:	mov	r2, #0
   1b574:	str	r2, [r3]
   1b578:	movw	r3, #4252	; 0x109c
   1b57c:	movt	r3, #3
   1b580:	movw	r2, #61712	; 0xf110
   1b584:	movt	r2, #1
   1b588:	str	r2, [r3]
   1b58c:	movw	r3, #444	; 0x1bc
   1b590:	movt	r3, #3
   1b594:	ldr	r2, [r3]
   1b598:	movw	r3, #4248	; 0x1098
   1b59c:	movt	r3, #3
   1b5a0:	str	r2, [r3]
   1b5a4:	movw	r3, #472	; 0x1d8
   1b5a8:	movt	r3, #3
   1b5ac:	mov	r2, #1
   1b5b0:	str	r2, [r3]
   1b5b4:	movw	r3, #492	; 0x1ec
   1b5b8:	movt	r3, #3
   1b5bc:	mov	r2, #1
   1b5c0:	str	r2, [r3]
   1b5c4:	mov	r3, #1
   1b5c8:	str	r3, [fp, #-16]
   1b5cc:	mov	r3, #1
   1b5d0:	str	r3, [fp, #-20]	; 0xffffffec
   1b5d4:	movw	r3, #4264	; 0x10a8
   1b5d8:	movt	r3, #3
   1b5dc:	mov	r2, #0
   1b5e0:	str	r2, [r3]
   1b5e4:	movw	r3, #4648	; 0x1228
   1b5e8:	movt	r3, #3
   1b5ec:	mov	r2, #0
   1b5f0:	str	r2, [r3]
   1b5f4:	movw	r3, #4652	; 0x122c
   1b5f8:	movt	r3, #3
   1b5fc:	mov	r2, #0
   1b600:	str	r2, [r3]
   1b604:	movw	r3, #484	; 0x1e4
   1b608:	movt	r3, #3
   1b60c:	mov	r2, #0
   1b610:	str	r2, [r3]
   1b614:	mov	r3, #0
   1b618:	str	r3, [fp, #-24]	; 0xffffffe8
   1b61c:	b	1bbd8 <handle_coda_error@@Base+0xd20>
   1b620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b624:	lsl	r3, r3, #2
   1b628:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b62c:	add	r3, r2, r3
   1b630:	ldr	r3, [r3]
   1b634:	movw	r1, #61520	; 0xf050
   1b638:	movt	r1, #1
   1b63c:	mov	r0, r3
   1b640:	bl	121e4 <strcmp@plt>
   1b644:	mov	r3, r0
   1b648:	cmp	r3, #0
   1b64c:	beq	1b680 <handle_coda_error@@Base+0x7c8>
   1b650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b654:	lsl	r3, r3, #2
   1b658:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b65c:	add	r3, r2, r3
   1b660:	ldr	r3, [r3]
   1b664:	movw	r1, #61524	; 0xf054
   1b668:	movt	r1, #1
   1b66c:	mov	r0, r3
   1b670:	bl	121e4 <strcmp@plt>
   1b674:	mov	r3, r0
   1b678:	cmp	r3, #0
   1b67c:	bne	1b68c <handle_coda_error@@Base+0x7d4>
   1b680:	mov	r3, #0
   1b684:	str	r3, [fp, #-20]	; 0xffffffec
   1b688:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1b68c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b690:	lsl	r3, r3, #2
   1b694:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b698:	add	r3, r2, r3
   1b69c:	ldr	r3, [r3]
   1b6a0:	movw	r1, #61548	; 0xf06c
   1b6a4:	movt	r1, #1
   1b6a8:	mov	r0, r3
   1b6ac:	bl	121e4 <strcmp@plt>
   1b6b0:	mov	r3, r0
   1b6b4:	cmp	r3, #0
   1b6b8:	beq	1b6ec <handle_coda_error@@Base+0x834>
   1b6bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b6c0:	lsl	r3, r3, #2
   1b6c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b6c8:	add	r3, r2, r3
   1b6cc:	ldr	r3, [r3]
   1b6d0:	movw	r1, #61552	; 0xf070
   1b6d4:	movt	r1, #1
   1b6d8:	mov	r0, r3
   1b6dc:	bl	121e4 <strcmp@plt>
   1b6e0:	mov	r3, r0
   1b6e4:	cmp	r3, #0
   1b6e8:	bne	1b7a4 <handle_coda_error@@Base+0x8ec>
   1b6ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b6f0:	add	r3, r3, #1
   1b6f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b6f8:	cmp	r2, r3
   1b6fc:	ble	1b7a4 <handle_coda_error@@Base+0x8ec>
   1b700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b704:	add	r3, r3, #1
   1b708:	lsl	r3, r3, #2
   1b70c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b710:	add	r3, r2, r3
   1b714:	ldr	r3, [r3]
   1b718:	ldrb	r3, [r3]
   1b71c:	cmp	r3, #45	; 0x2d
   1b720:	beq	1b7a4 <handle_coda_error@@Base+0x8ec>
   1b724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b728:	add	r3, r3, #1
   1b72c:	lsl	r3, r3, #2
   1b730:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b734:	add	r3, r2, r3
   1b738:	ldr	r3, [r3]
   1b73c:	mov	r0, r3
   1b740:	bl	175c0 <codadump_filter_create@@Base>
   1b744:	mov	r2, r0
   1b748:	movw	r3, #496	; 0x1f0
   1b74c:	movt	r3, #3
   1b750:	str	r2, [r3, #664]	; 0x298
   1b754:	movw	r3, #496	; 0x1f0
   1b758:	movt	r3, #3
   1b75c:	ldr	r3, [r3, #664]	; 0x298
   1b760:	cmp	r3, #0
   1b764:	bne	1b794 <handle_coda_error@@Base+0x8dc>
   1b768:	movw	r3, #440	; 0x1b8
   1b76c:	movt	r3, #3
   1b770:	ldr	r3, [r3]
   1b774:	mov	r2, #40	; 0x28
   1b778:	mov	r1, #1
   1b77c:	movw	r0, #61564	; 0xf07c
   1b780:	movt	r0, #1
   1b784:	bl	1234c <fwrite@plt>
   1b788:	bl	1a930 <print_yaml_data@@Base+0x190>
   1b78c:	mov	r0, #1
   1b790:	bl	123e8 <exit@plt>
   1b794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b798:	add	r3, r3, #1
   1b79c:	str	r3, [fp, #-24]	; 0xffffffe8
   1b7a0:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1b7a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7a8:	lsl	r3, r3, #2
   1b7ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b7b0:	add	r3, r2, r3
   1b7b4:	ldr	r3, [r3]
   1b7b8:	movw	r1, #61716	; 0xf114
   1b7bc:	movt	r1, #1
   1b7c0:	mov	r0, r3
   1b7c4:	bl	121e4 <strcmp@plt>
   1b7c8:	mov	r3, r0
   1b7cc:	cmp	r3, #0
   1b7d0:	beq	1b804 <handle_coda_error@@Base+0x94c>
   1b7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7d8:	lsl	r3, r3, #2
   1b7dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b7e0:	add	r3, r2, r3
   1b7e4:	ldr	r3, [r3]
   1b7e8:	movw	r1, #61720	; 0xf118
   1b7ec:	movt	r1, #1
   1b7f0:	mov	r0, r3
   1b7f4:	bl	121e4 <strcmp@plt>
   1b7f8:	mov	r3, r0
   1b7fc:	cmp	r3, #0
   1b800:	bne	1b818 <handle_coda_error@@Base+0x960>
   1b804:	movw	r3, #4264	; 0x10a8
   1b808:	movt	r3, #3
   1b80c:	mov	r2, #1
   1b810:	str	r2, [r3]
   1b814:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1b818:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b81c:	lsl	r3, r3, #2
   1b820:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b824:	add	r3, r2, r3
   1b828:	ldr	r3, [r3]
   1b82c:	movw	r1, #61728	; 0xf120
   1b830:	movt	r1, #1
   1b834:	mov	r0, r3
   1b838:	bl	121e4 <strcmp@plt>
   1b83c:	mov	r3, r0
   1b840:	cmp	r3, #0
   1b844:	beq	1b878 <handle_coda_error@@Base+0x9c0>
   1b848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b84c:	lsl	r3, r3, #2
   1b850:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b854:	add	r3, r2, r3
   1b858:	ldr	r3, [r3]
   1b85c:	movw	r1, #61732	; 0xf124
   1b860:	movt	r1, #1
   1b864:	mov	r0, r3
   1b868:	bl	121e4 <strcmp@plt>
   1b86c:	mov	r3, r0
   1b870:	cmp	r3, #0
   1b874:	bne	1b88c <handle_coda_error@@Base+0x9d4>
   1b878:	movw	r3, #4648	; 0x1228
   1b87c:	movt	r3, #3
   1b880:	mov	r2, #1
   1b884:	str	r2, [r3]
   1b888:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1b88c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b890:	lsl	r3, r3, #2
   1b894:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b898:	add	r3, r2, r3
   1b89c:	ldr	r3, [r3]
   1b8a0:	movw	r1, #61740	; 0xf12c
   1b8a4:	movt	r1, #1
   1b8a8:	mov	r0, r3
   1b8ac:	bl	121e4 <strcmp@plt>
   1b8b0:	mov	r3, r0
   1b8b4:	cmp	r3, #0
   1b8b8:	beq	1b8ec <handle_coda_error@@Base+0xa34>
   1b8bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8c0:	lsl	r3, r3, #2
   1b8c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b8c8:	add	r3, r2, r3
   1b8cc:	ldr	r3, [r3]
   1b8d0:	movw	r1, #61744	; 0xf130
   1b8d4:	movt	r1, #1
   1b8d8:	mov	r0, r3
   1b8dc:	bl	121e4 <strcmp@plt>
   1b8e0:	mov	r3, r0
   1b8e4:	cmp	r3, #0
   1b8e8:	bne	1b958 <handle_coda_error@@Base+0xaa0>
   1b8ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8f0:	add	r3, r3, #1
   1b8f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b8f8:	cmp	r2, r3
   1b8fc:	ble	1b958 <handle_coda_error@@Base+0xaa0>
   1b900:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b904:	add	r3, r3, #1
   1b908:	lsl	r3, r3, #2
   1b90c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b910:	add	r3, r2, r3
   1b914:	ldr	r3, [r3]
   1b918:	ldrb	r3, [r3]
   1b91c:	cmp	r3, #45	; 0x2d
   1b920:	beq	1b958 <handle_coda_error@@Base+0xaa0>
   1b924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b928:	add	r3, r3, #1
   1b92c:	lsl	r3, r3, #2
   1b930:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b934:	add	r3, r2, r3
   1b938:	ldr	r2, [r3]
   1b93c:	movw	r3, #480	; 0x1e0
   1b940:	movt	r3, #3
   1b944:	str	r2, [r3]
   1b948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b94c:	add	r3, r3, #1
   1b950:	str	r3, [fp, #-24]	; 0xffffffe8
   1b954:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1b958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b95c:	lsl	r3, r3, #2
   1b960:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b964:	add	r3, r2, r3
   1b968:	ldr	r3, [r3]
   1b96c:	movw	r1, #61756	; 0xf13c
   1b970:	movt	r1, #1
   1b974:	mov	r0, r3
   1b978:	bl	121e4 <strcmp@plt>
   1b97c:	mov	r3, r0
   1b980:	cmp	r3, #0
   1b984:	beq	1b9b8 <handle_coda_error@@Base+0xb00>
   1b988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b98c:	lsl	r3, r3, #2
   1b990:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b994:	add	r3, r2, r3
   1b998:	ldr	r3, [r3]
   1b99c:	movw	r1, #61760	; 0xf140
   1b9a0:	movt	r1, #1
   1b9a4:	mov	r0, r3
   1b9a8:	bl	121e4 <strcmp@plt>
   1b9ac:	mov	r3, r0
   1b9b0:	cmp	r3, #0
   1b9b4:	bne	1b9cc <handle_coda_error@@Base+0xb14>
   1b9b8:	movw	r3, #4652	; 0x122c
   1b9bc:	movt	r3, #3
   1b9c0:	mov	r2, #1
   1b9c4:	str	r2, [r3]
   1b9c8:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1b9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b9d0:	lsl	r3, r3, #2
   1b9d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b9d8:	add	r3, r2, r3
   1b9dc:	ldr	r3, [r3]
   1b9e0:	movw	r1, #61776	; 0xf150
   1b9e4:	movt	r1, #1
   1b9e8:	mov	r0, r3
   1b9ec:	bl	121e4 <strcmp@plt>
   1b9f0:	mov	r3, r0
   1b9f4:	cmp	r3, #0
   1b9f8:	beq	1ba2c <handle_coda_error@@Base+0xb74>
   1b9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba00:	lsl	r3, r3, #2
   1ba04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba08:	add	r3, r2, r3
   1ba0c:	ldr	r3, [r3]
   1ba10:	movw	r1, #61780	; 0xf154
   1ba14:	movt	r1, #1
   1ba18:	mov	r0, r3
   1ba1c:	bl	121e4 <strcmp@plt>
   1ba20:	mov	r3, r0
   1ba24:	cmp	r3, #0
   1ba28:	bne	1ba98 <handle_coda_error@@Base+0xbe0>
   1ba2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba30:	add	r3, r3, #1
   1ba34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ba38:	cmp	r2, r3
   1ba3c:	ble	1ba98 <handle_coda_error@@Base+0xbe0>
   1ba40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba44:	add	r3, r3, #1
   1ba48:	lsl	r3, r3, #2
   1ba4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba50:	add	r3, r2, r3
   1ba54:	ldr	r3, [r3]
   1ba58:	ldrb	r3, [r3]
   1ba5c:	cmp	r3, #45	; 0x2d
   1ba60:	beq	1ba98 <handle_coda_error@@Base+0xbe0>
   1ba64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba68:	add	r3, r3, #1
   1ba6c:	lsl	r3, r3, #2
   1ba70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba74:	add	r3, r2, r3
   1ba78:	ldr	r2, [r3]
   1ba7c:	movw	r3, #4252	; 0x109c
   1ba80:	movt	r3, #3
   1ba84:	str	r2, [r3]
   1ba88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba8c:	add	r3, r3, #1
   1ba90:	str	r3, [fp, #-24]	; 0xffffffe8
   1ba94:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1ba98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba9c:	lsl	r3, r3, #2
   1baa0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1baa4:	add	r3, r2, r3
   1baa8:	ldr	r3, [r3]
   1baac:	movw	r1, #61608	; 0xf0a8
   1bab0:	movt	r1, #1
   1bab4:	mov	r0, r3
   1bab8:	bl	121e4 <strcmp@plt>
   1babc:	mov	r3, r0
   1bac0:	cmp	r3, #0
   1bac4:	beq	1baf8 <handle_coda_error@@Base+0xc40>
   1bac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bacc:	lsl	r3, r3, #2
   1bad0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bad4:	add	r3, r2, r3
   1bad8:	ldr	r3, [r3]
   1badc:	movw	r1, #61800	; 0xf168
   1bae0:	movt	r1, #1
   1bae4:	mov	r0, r3
   1bae8:	bl	121e4 <strcmp@plt>
   1baec:	mov	r3, r0
   1baf0:	cmp	r3, #0
   1baf4:	bne	1bb0c <handle_coda_error@@Base+0xc54>
   1baf8:	movw	r3, #484	; 0x1e4
   1bafc:	movt	r3, #3
   1bb00:	mov	r2, #1
   1bb04:	str	r2, [r3]
   1bb08:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1bb0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb10:	lsl	r3, r3, #2
   1bb14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb18:	add	r3, r2, r3
   1bb1c:	ldr	r3, [r3]
   1bb20:	movw	r1, #61664	; 0xf0e0
   1bb24:	movt	r1, #1
   1bb28:	mov	r0, r3
   1bb2c:	bl	121e4 <strcmp@plt>
   1bb30:	mov	r3, r0
   1bb34:	cmp	r3, #0
   1bb38:	bne	1bb48 <handle_coda_error@@Base+0xc90>
   1bb3c:	mov	r3, #0
   1bb40:	str	r3, [fp, #-16]
   1bb44:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1bb48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb4c:	sub	r3, r3, #1
   1bb50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bb54:	cmp	r2, r3
   1bb58:	bne	1bba0 <handle_coda_error@@Base+0xce8>
   1bb5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb60:	lsl	r3, r3, #2
   1bb64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb68:	add	r3, r2, r3
   1bb6c:	ldr	r3, [r3]
   1bb70:	ldrb	r3, [r3]
   1bb74:	cmp	r3, #45	; 0x2d
   1bb78:	beq	1bba0 <handle_coda_error@@Base+0xce8>
   1bb7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb80:	lsl	r3, r3, #2
   1bb84:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bb88:	add	r3, r2, r3
   1bb8c:	ldr	r2, [r3]
   1bb90:	movw	r3, #496	; 0x1f0
   1bb94:	movt	r3, #3
   1bb98:	str	r2, [r3]
   1bb9c:	b	1bbcc <handle_coda_error@@Base+0xd14>
   1bba0:	movw	r3, #440	; 0x1b8
   1bba4:	movt	r3, #3
   1bba8:	ldr	r3, [r3]
   1bbac:	mov	r2, #25
   1bbb0:	mov	r1, #1
   1bbb4:	movw	r0, #61684	; 0xf0f4
   1bbb8:	movt	r0, #1
   1bbbc:	bl	1234c <fwrite@plt>
   1bbc0:	bl	1a930 <print_yaml_data@@Base+0x190>
   1bbc4:	mov	r0, #1
   1bbc8:	bl	123e8 <exit@plt>
   1bbcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bbd0:	add	r3, r3, #1
   1bbd4:	str	r3, [fp, #-24]	; 0xffffffe8
   1bbd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bbdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bbe0:	cmp	r2, r3
   1bbe4:	blt	1b620 <handle_coda_error@@Base+0x768>
   1bbe8:	movw	r3, #496	; 0x1f0
   1bbec:	movt	r3, #3
   1bbf0:	ldr	r3, [r3]
   1bbf4:	cmp	r3, #0
   1bbf8:	beq	1bc14 <handle_coda_error@@Base+0xd5c>
   1bbfc:	movw	r3, #496	; 0x1f0
   1bc00:	movt	r3, #3
   1bc04:	ldr	r3, [r3]
   1bc08:	ldrb	r3, [r3]
   1bc0c:	cmp	r3, #0
   1bc10:	bne	1bc40 <handle_coda_error@@Base+0xd88>
   1bc14:	movw	r3, #440	; 0x1b8
   1bc18:	movt	r3, #3
   1bc1c:	ldr	r3, [r3]
   1bc20:	mov	r2, #25
   1bc24:	mov	r1, #1
   1bc28:	movw	r0, #61684	; 0xf0f4
   1bc2c:	movt	r0, #1
   1bc30:	bl	1234c <fwrite@plt>
   1bc34:	bl	1a930 <print_yaml_data@@Base+0x190>
   1bc38:	mov	r0, #1
   1bc3c:	bl	123e8 <exit@plt>
   1bc40:	bl	12454 <coda_init@plt>
   1bc44:	mov	r3, r0
   1bc48:	cmp	r3, #0
   1bc4c:	beq	1bc90 <handle_coda_error@@Base+0xdd8>
   1bc50:	movw	r3, #440	; 0x1b8
   1bc54:	movt	r3, #3
   1bc58:	ldr	r4, [r3]
   1bc5c:	bl	125e0 <coda_get_errno@plt>
   1bc60:	mov	r3, r0
   1bc64:	ldr	r3, [r3]
   1bc68:	mov	r0, r3
   1bc6c:	bl	12598 <coda_errno_to_string@plt>
   1bc70:	mov	r3, r0
   1bc74:	mov	r2, r3
   1bc78:	movw	r1, #61492	; 0xf034
   1bc7c:	movt	r1, #1
   1bc80:	mov	r0, r4
   1bc84:	bl	12430 <fprintf@plt>
   1bc88:	mov	r0, #1
   1bc8c:	bl	123e8 <exit@plt>
   1bc90:	ldr	r3, [fp, #-16]
   1bc94:	cmp	r3, #0
   1bc98:	moveq	r3, #1
   1bc9c:	movne	r3, #0
   1bca0:	uxtb	r3, r3
   1bca4:	mov	r0, r3
   1bca8:	bl	12298 <coda_set_option_bypass_special_types@plt>
   1bcac:	mov	r0, #0
   1bcb0:	bl	121d8 <coda_set_option_perform_boundary_checks@plt>
   1bcb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bcb8:	bl	12460 <coda_set_option_perform_conversions@plt>
   1bcbc:	bl	18b38 <traverse_info_init@@Base>
   1bcc0:	bl	14c1c <dim_info_init@@Base>
   1bcc4:	movw	r3, #480	; 0x1e0
   1bcc8:	movt	r3, #3
   1bccc:	ldr	r3, [r3]
   1bcd0:	cmp	r3, #0
   1bcd4:	beq	1bd48 <handle_coda_error@@Base+0xe90>
   1bcd8:	movw	r3, #480	; 0x1e0
   1bcdc:	movt	r3, #3
   1bce0:	ldr	r3, [r3]
   1bce4:	movw	r1, #61820	; 0xf17c
   1bce8:	movt	r1, #1
   1bcec:	mov	r0, r3
   1bcf0:	bl	12214 <fopen@plt>
   1bcf4:	mov	r2, r0
   1bcf8:	movw	r3, #4248	; 0x1098
   1bcfc:	movt	r3, #3
   1bd00:	str	r2, [r3]
   1bd04:	movw	r3, #4248	; 0x1098
   1bd08:	movt	r3, #3
   1bd0c:	ldr	r3, [r3]
   1bd10:	cmp	r3, #0
   1bd14:	bne	1bd48 <handle_coda_error@@Base+0xe90>
   1bd18:	movw	r3, #440	; 0x1b8
   1bd1c:	movt	r3, #3
   1bd20:	ldr	r0, [r3]
   1bd24:	movw	r3, #480	; 0x1e0
   1bd28:	movt	r3, #3
   1bd2c:	ldr	r3, [r3]
   1bd30:	mov	r2, r3
   1bd34:	movw	r1, #61824	; 0xf180
   1bd38:	movt	r1, #1
   1bd3c:	bl	12430 <fprintf@plt>
   1bd40:	mov	r0, #1
   1bd44:	bl	123e8 <exit@plt>
   1bd48:	bl	197f4 <traverse_product@@Base>
   1bd4c:	movw	r3, #480	; 0x1e0
   1bd50:	movt	r3, #3
   1bd54:	ldr	r3, [r3]
   1bd58:	cmp	r3, #0
   1bd5c:	beq	1bd74 <handle_coda_error@@Base+0xebc>
   1bd60:	movw	r3, #4248	; 0x1098
   1bd64:	movt	r3, #3
   1bd68:	ldr	r3, [r3]
   1bd6c:	mov	r0, r3
   1bd70:	bl	124d8 <fclose@plt>
   1bd74:	bl	14c64 <dim_info_done@@Base>
   1bd78:	bl	18b90 <traverse_info_done@@Base>
   1bd7c:	bl	1237c <coda_done@plt>
   1bd80:	nop	{0}
   1bd84:	sub	sp, fp, #8
   1bd88:	ldr	r4, [sp]
   1bd8c:	ldr	fp, [sp, #4]
   1bd90:	add	sp, sp, #8
   1bd94:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd98:	str	r4, [sp, #-12]!
   1bd9c:	str	fp, [sp, #4]
   1bda0:	str	lr, [sp, #8]
   1bda4:	add	fp, sp, #8
   1bda8:	sub	sp, sp, #28
   1bdac:	str	r0, [fp, #-32]	; 0xffffffe0
   1bdb0:	str	r1, [fp, #-36]	; 0xffffffdc
   1bdb4:	movw	r3, #496	; 0x1f0
   1bdb8:	movt	r3, #3
   1bdbc:	mov	r2, #0
   1bdc0:	str	r2, [r3]
   1bdc4:	movw	r3, #480	; 0x1e0
   1bdc8:	movt	r3, #3
   1bdcc:	mov	r2, #0
   1bdd0:	str	r2, [r3]
   1bdd4:	movw	r3, #4272	; 0x10b0
   1bdd8:	movt	r3, #3
   1bddc:	mov	r2, #0
   1bde0:	str	r2, [r3]
   1bde4:	movw	r3, #444	; 0x1bc
   1bde8:	movt	r3, #3
   1bdec:	ldr	r2, [r3]
   1bdf0:	movw	r3, #4248	; 0x1098
   1bdf4:	movt	r3, #3
   1bdf8:	str	r2, [r3]
   1bdfc:	mov	r3, #1
   1be00:	str	r3, [fp, #-16]
   1be04:	mov	r3, #1
   1be08:	str	r3, [fp, #-20]	; 0xffffffec
   1be0c:	mov	r3, #0
   1be10:	str	r3, [fp, #-24]	; 0xffffffe8
   1be14:	mov	r3, #0
   1be18:	str	r3, [fp, #-28]	; 0xffffffe4
   1be1c:	b	1c15c <handle_coda_error@@Base+0x12a4>
   1be20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1be24:	lsl	r3, r3, #2
   1be28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be2c:	add	r3, r2, r3
   1be30:	ldr	r3, [r3]
   1be34:	movw	r1, #61868	; 0xf1ac
   1be38:	movt	r1, #1
   1be3c:	mov	r0, r3
   1be40:	bl	121e4 <strcmp@plt>
   1be44:	mov	r3, r0
   1be48:	cmp	r3, #0
   1be4c:	beq	1be80 <handle_coda_error@@Base+0xfc8>
   1be50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1be54:	lsl	r3, r3, #2
   1be58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be5c:	add	r3, r2, r3
   1be60:	ldr	r3, [r3]
   1be64:	movw	r1, #61872	; 0xf1b0
   1be68:	movt	r1, #1
   1be6c:	mov	r0, r3
   1be70:	bl	121e4 <strcmp@plt>
   1be74:	mov	r3, r0
   1be78:	cmp	r3, #0
   1be7c:	bne	1be8c <handle_coda_error@@Base+0xfd4>
   1be80:	mov	r3, #1
   1be84:	str	r3, [fp, #-24]	; 0xffffffe8
   1be88:	b	1c150 <handle_coda_error@@Base+0x1298>
   1be8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1be90:	lsl	r3, r3, #2
   1be94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be98:	add	r3, r2, r3
   1be9c:	ldr	r3, [r3]
   1bea0:	movw	r1, #61520	; 0xf050
   1bea4:	movt	r1, #1
   1bea8:	mov	r0, r3
   1beac:	bl	121e4 <strcmp@plt>
   1beb0:	mov	r3, r0
   1beb4:	cmp	r3, #0
   1beb8:	beq	1beec <handle_coda_error@@Base+0x1034>
   1bebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bec0:	lsl	r3, r3, #2
   1bec4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bec8:	add	r3, r2, r3
   1becc:	ldr	r3, [r3]
   1bed0:	movw	r1, #61524	; 0xf054
   1bed4:	movt	r1, #1
   1bed8:	mov	r0, r3
   1bedc:	bl	121e4 <strcmp@plt>
   1bee0:	mov	r3, r0
   1bee4:	cmp	r3, #0
   1bee8:	bne	1bef8 <handle_coda_error@@Base+0x1040>
   1beec:	mov	r3, #0
   1bef0:	str	r3, [fp, #-20]	; 0xffffffec
   1bef4:	b	1c150 <handle_coda_error@@Base+0x1298>
   1bef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1befc:	lsl	r3, r3, #2
   1bf00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf04:	add	r3, r2, r3
   1bf08:	ldr	r3, [r3]
   1bf0c:	movw	r1, #61740	; 0xf12c
   1bf10:	movt	r1, #1
   1bf14:	mov	r0, r3
   1bf18:	bl	121e4 <strcmp@plt>
   1bf1c:	mov	r3, r0
   1bf20:	cmp	r3, #0
   1bf24:	beq	1bf58 <handle_coda_error@@Base+0x10a0>
   1bf28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf2c:	lsl	r3, r3, #2
   1bf30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf34:	add	r3, r2, r3
   1bf38:	ldr	r3, [r3]
   1bf3c:	movw	r1, #61744	; 0xf130
   1bf40:	movt	r1, #1
   1bf44:	mov	r0, r3
   1bf48:	bl	121e4 <strcmp@plt>
   1bf4c:	mov	r3, r0
   1bf50:	cmp	r3, #0
   1bf54:	bne	1bfc4 <handle_coda_error@@Base+0x110c>
   1bf58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf5c:	add	r3, r3, #1
   1bf60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bf64:	cmp	r2, r3
   1bf68:	ble	1bfc4 <handle_coda_error@@Base+0x110c>
   1bf6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf70:	add	r3, r3, #1
   1bf74:	lsl	r3, r3, #2
   1bf78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf7c:	add	r3, r2, r3
   1bf80:	ldr	r3, [r3]
   1bf84:	ldrb	r3, [r3]
   1bf88:	cmp	r3, #45	; 0x2d
   1bf8c:	beq	1bfc4 <handle_coda_error@@Base+0x110c>
   1bf90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf94:	add	r3, r3, #1
   1bf98:	lsl	r3, r3, #2
   1bf9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bfa0:	add	r3, r2, r3
   1bfa4:	ldr	r2, [r3]
   1bfa8:	movw	r3, #480	; 0x1e0
   1bfac:	movt	r3, #3
   1bfb0:	str	r2, [r3]
   1bfb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bfb8:	add	r3, r3, #1
   1bfbc:	str	r3, [fp, #-28]	; 0xffffffe4
   1bfc0:	b	1c150 <handle_coda_error@@Base+0x1298>
   1bfc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bfc8:	lsl	r3, r3, #2
   1bfcc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bfd0:	add	r3, r2, r3
   1bfd4:	ldr	r3, [r3]
   1bfd8:	movw	r1, #61888	; 0xf1c0
   1bfdc:	movt	r1, #1
   1bfe0:	mov	r0, r3
   1bfe4:	bl	121e4 <strcmp@plt>
   1bfe8:	mov	r3, r0
   1bfec:	cmp	r3, #0
   1bff0:	beq	1c024 <handle_coda_error@@Base+0x116c>
   1bff4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bff8:	lsl	r3, r3, #2
   1bffc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c000:	add	r3, r2, r3
   1c004:	ldr	r3, [r3]
   1c008:	movw	r1, #61892	; 0xf1c4
   1c00c:	movt	r1, #1
   1c010:	mov	r0, r3
   1c014:	bl	121e4 <strcmp@plt>
   1c018:	mov	r3, r0
   1c01c:	cmp	r3, #0
   1c020:	bne	1c090 <handle_coda_error@@Base+0x11d8>
   1c024:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c028:	add	r3, r3, #1
   1c02c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c030:	cmp	r2, r3
   1c034:	ble	1c090 <handle_coda_error@@Base+0x11d8>
   1c038:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c03c:	add	r3, r3, #1
   1c040:	lsl	r3, r3, #2
   1c044:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c048:	add	r3, r2, r3
   1c04c:	ldr	r3, [r3]
   1c050:	ldrb	r3, [r3]
   1c054:	cmp	r3, #45	; 0x2d
   1c058:	beq	1c090 <handle_coda_error@@Base+0x11d8>
   1c05c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c060:	add	r3, r3, #1
   1c064:	lsl	r3, r3, #2
   1c068:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c06c:	add	r3, r2, r3
   1c070:	ldr	r2, [r3]
   1c074:	movw	r3, #4272	; 0x10b0
   1c078:	movt	r3, #3
   1c07c:	str	r2, [r3]
   1c080:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c084:	add	r3, r3, #1
   1c088:	str	r3, [fp, #-28]	; 0xffffffe4
   1c08c:	b	1c150 <handle_coda_error@@Base+0x1298>
   1c090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c094:	lsl	r3, r3, #2
   1c098:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c09c:	add	r3, r2, r3
   1c0a0:	ldr	r3, [r3]
   1c0a4:	movw	r1, #61664	; 0xf0e0
   1c0a8:	movt	r1, #1
   1c0ac:	mov	r0, r3
   1c0b0:	bl	121e4 <strcmp@plt>
   1c0b4:	mov	r3, r0
   1c0b8:	cmp	r3, #0
   1c0bc:	bne	1c0cc <handle_coda_error@@Base+0x1214>
   1c0c0:	mov	r3, #0
   1c0c4:	str	r3, [fp, #-16]
   1c0c8:	b	1c150 <handle_coda_error@@Base+0x1298>
   1c0cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0d0:	sub	r3, r3, #1
   1c0d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c0d8:	cmp	r2, r3
   1c0dc:	bne	1c124 <handle_coda_error@@Base+0x126c>
   1c0e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0e4:	lsl	r3, r3, #2
   1c0e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c0ec:	add	r3, r2, r3
   1c0f0:	ldr	r3, [r3]
   1c0f4:	ldrb	r3, [r3]
   1c0f8:	cmp	r3, #45	; 0x2d
   1c0fc:	beq	1c124 <handle_coda_error@@Base+0x126c>
   1c100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c104:	lsl	r3, r3, #2
   1c108:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c10c:	add	r3, r2, r3
   1c110:	ldr	r2, [r3]
   1c114:	movw	r3, #496	; 0x1f0
   1c118:	movt	r3, #3
   1c11c:	str	r2, [r3]
   1c120:	b	1c150 <handle_coda_error@@Base+0x1298>
   1c124:	movw	r3, #440	; 0x1b8
   1c128:	movt	r3, #3
   1c12c:	ldr	r3, [r3]
   1c130:	mov	r2, #25
   1c134:	mov	r1, #1
   1c138:	movw	r0, #61684	; 0xf0f4
   1c13c:	movt	r0, #1
   1c140:	bl	1234c <fwrite@plt>
   1c144:	bl	1a930 <print_yaml_data@@Base+0x190>
   1c148:	mov	r0, #1
   1c14c:	bl	123e8 <exit@plt>
   1c150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c154:	add	r3, r3, #1
   1c158:	str	r3, [fp, #-28]	; 0xffffffe4
   1c15c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c164:	cmp	r2, r3
   1c168:	blt	1be20 <handle_coda_error@@Base+0xf68>
   1c16c:	movw	r3, #496	; 0x1f0
   1c170:	movt	r3, #3
   1c174:	ldr	r3, [r3]
   1c178:	cmp	r3, #0
   1c17c:	beq	1c198 <handle_coda_error@@Base+0x12e0>
   1c180:	movw	r3, #496	; 0x1f0
   1c184:	movt	r3, #3
   1c188:	ldr	r3, [r3]
   1c18c:	ldrb	r3, [r3]
   1c190:	cmp	r3, #0
   1c194:	bne	1c1c4 <handle_coda_error@@Base+0x130c>
   1c198:	movw	r3, #440	; 0x1b8
   1c19c:	movt	r3, #3
   1c1a0:	ldr	r3, [r3]
   1c1a4:	mov	r2, #25
   1c1a8:	mov	r1, #1
   1c1ac:	movw	r0, #61684	; 0xf0f4
   1c1b0:	movt	r0, #1
   1c1b4:	bl	1234c <fwrite@plt>
   1c1b8:	bl	1a930 <print_yaml_data@@Base+0x190>
   1c1bc:	mov	r0, #1
   1c1c0:	bl	123e8 <exit@plt>
   1c1c4:	bl	12454 <coda_init@plt>
   1c1c8:	mov	r3, r0
   1c1cc:	cmp	r3, #0
   1c1d0:	beq	1c214 <handle_coda_error@@Base+0x135c>
   1c1d4:	movw	r3, #440	; 0x1b8
   1c1d8:	movt	r3, #3
   1c1dc:	ldr	r4, [r3]
   1c1e0:	bl	125e0 <coda_get_errno@plt>
   1c1e4:	mov	r3, r0
   1c1e8:	ldr	r3, [r3]
   1c1ec:	mov	r0, r3
   1c1f0:	bl	12598 <coda_errno_to_string@plt>
   1c1f4:	mov	r3, r0
   1c1f8:	mov	r2, r3
   1c1fc:	movw	r1, #61492	; 0xf034
   1c200:	movt	r1, #1
   1c204:	mov	r0, r4
   1c208:	bl	12430 <fprintf@plt>
   1c20c:	mov	r0, #1
   1c210:	bl	123e8 <exit@plt>
   1c214:	ldr	r3, [fp, #-16]
   1c218:	cmp	r3, #0
   1c21c:	moveq	r3, #1
   1c220:	movne	r3, #0
   1c224:	uxtb	r3, r3
   1c228:	mov	r0, r3
   1c22c:	bl	12298 <coda_set_option_bypass_special_types@plt>
   1c230:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c234:	bl	12460 <coda_set_option_perform_conversions@plt>
   1c238:	movw	r3, #480	; 0x1e0
   1c23c:	movt	r3, #3
   1c240:	ldr	r3, [r3]
   1c244:	cmp	r3, #0
   1c248:	beq	1c2bc <handle_coda_error@@Base+0x1404>
   1c24c:	movw	r3, #480	; 0x1e0
   1c250:	movt	r3, #3
   1c254:	ldr	r3, [r3]
   1c258:	movw	r1, #61820	; 0xf17c
   1c25c:	movt	r1, #1
   1c260:	mov	r0, r3
   1c264:	bl	12214 <fopen@plt>
   1c268:	mov	r2, r0
   1c26c:	movw	r3, #4248	; 0x1098
   1c270:	movt	r3, #3
   1c274:	str	r2, [r3]
   1c278:	movw	r3, #4248	; 0x1098
   1c27c:	movt	r3, #3
   1c280:	ldr	r3, [r3]
   1c284:	cmp	r3, #0
   1c288:	bne	1c2bc <handle_coda_error@@Base+0x1404>
   1c28c:	movw	r3, #440	; 0x1b8
   1c290:	movt	r3, #3
   1c294:	ldr	r0, [r3]
   1c298:	movw	r3, #480	; 0x1e0
   1c29c:	movt	r3, #3
   1c2a0:	ldr	r3, [r3]
   1c2a4:	mov	r2, r3
   1c2a8:	movw	r1, #61824	; 0xf180
   1c2ac:	movt	r1, #1
   1c2b0:	bl	12430 <fprintf@plt>
   1c2b4:	mov	r0, #1
   1c2b8:	bl	123e8 <exit@plt>
   1c2bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2c0:	bl	1841c <print_json_data@@Base>
   1c2c4:	movw	r3, #480	; 0x1e0
   1c2c8:	movt	r3, #3
   1c2cc:	ldr	r3, [r3]
   1c2d0:	cmp	r3, #0
   1c2d4:	beq	1c2ec <handle_coda_error@@Base+0x1434>
   1c2d8:	movw	r3, #4248	; 0x1098
   1c2dc:	movt	r3, #3
   1c2e0:	ldr	r3, [r3]
   1c2e4:	mov	r0, r3
   1c2e8:	bl	124d8 <fclose@plt>
   1c2ec:	bl	1237c <coda_done@plt>
   1c2f0:	nop	{0}
   1c2f4:	sub	sp, fp, #8
   1c2f8:	ldr	r4, [sp]
   1c2fc:	ldr	fp, [sp, #4]
   1c300:	add	sp, sp, #8
   1c304:	pop	{pc}		; (ldr pc, [sp], #4)
   1c308:	str	r4, [sp, #-12]!
   1c30c:	str	fp, [sp, #4]
   1c310:	str	lr, [sp, #8]
   1c314:	add	fp, sp, #8
   1c318:	sub	sp, sp, #28
   1c31c:	str	r0, [fp, #-32]	; 0xffffffe0
   1c320:	str	r1, [fp, #-36]	; 0xffffffdc
   1c324:	movw	r3, #496	; 0x1f0
   1c328:	movt	r3, #3
   1c32c:	mov	r2, #0
   1c330:	str	r2, [r3]
   1c334:	movw	r3, #480	; 0x1e0
   1c338:	movt	r3, #3
   1c33c:	mov	r2, #0
   1c340:	str	r2, [r3]
   1c344:	movw	r3, #4272	; 0x10b0
   1c348:	movt	r3, #3
   1c34c:	mov	r2, #0
   1c350:	str	r2, [r3]
   1c354:	movw	r3, #444	; 0x1bc
   1c358:	movt	r3, #3
   1c35c:	ldr	r2, [r3]
   1c360:	movw	r3, #4248	; 0x1098
   1c364:	movt	r3, #3
   1c368:	str	r2, [r3]
   1c36c:	mov	r3, #1
   1c370:	str	r3, [fp, #-16]
   1c374:	mov	r3, #1
   1c378:	str	r3, [fp, #-20]	; 0xffffffec
   1c37c:	mov	r3, #0
   1c380:	str	r3, [fp, #-24]	; 0xffffffe8
   1c384:	mov	r3, #0
   1c388:	str	r3, [fp, #-28]	; 0xffffffe4
   1c38c:	b	1c6cc <handle_coda_error@@Base+0x1814>
   1c390:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c394:	lsl	r3, r3, #2
   1c398:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c39c:	add	r3, r2, r3
   1c3a0:	ldr	r3, [r3]
   1c3a4:	movw	r1, #61868	; 0xf1ac
   1c3a8:	movt	r1, #1
   1c3ac:	mov	r0, r3
   1c3b0:	bl	121e4 <strcmp@plt>
   1c3b4:	mov	r3, r0
   1c3b8:	cmp	r3, #0
   1c3bc:	beq	1c3f0 <handle_coda_error@@Base+0x1538>
   1c3c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3c4:	lsl	r3, r3, #2
   1c3c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c3cc:	add	r3, r2, r3
   1c3d0:	ldr	r3, [r3]
   1c3d4:	movw	r1, #61872	; 0xf1b0
   1c3d8:	movt	r1, #1
   1c3dc:	mov	r0, r3
   1c3e0:	bl	121e4 <strcmp@plt>
   1c3e4:	mov	r3, r0
   1c3e8:	cmp	r3, #0
   1c3ec:	bne	1c3fc <handle_coda_error@@Base+0x1544>
   1c3f0:	mov	r3, #1
   1c3f4:	str	r3, [fp, #-24]	; 0xffffffe8
   1c3f8:	b	1c6c0 <handle_coda_error@@Base+0x1808>
   1c3fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c400:	lsl	r3, r3, #2
   1c404:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c408:	add	r3, r2, r3
   1c40c:	ldr	r3, [r3]
   1c410:	movw	r1, #61520	; 0xf050
   1c414:	movt	r1, #1
   1c418:	mov	r0, r3
   1c41c:	bl	121e4 <strcmp@plt>
   1c420:	mov	r3, r0
   1c424:	cmp	r3, #0
   1c428:	beq	1c45c <handle_coda_error@@Base+0x15a4>
   1c42c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c430:	lsl	r3, r3, #2
   1c434:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c438:	add	r3, r2, r3
   1c43c:	ldr	r3, [r3]
   1c440:	movw	r1, #61524	; 0xf054
   1c444:	movt	r1, #1
   1c448:	mov	r0, r3
   1c44c:	bl	121e4 <strcmp@plt>
   1c450:	mov	r3, r0
   1c454:	cmp	r3, #0
   1c458:	bne	1c468 <handle_coda_error@@Base+0x15b0>
   1c45c:	mov	r3, #0
   1c460:	str	r3, [fp, #-20]	; 0xffffffec
   1c464:	b	1c6c0 <handle_coda_error@@Base+0x1808>
   1c468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c46c:	lsl	r3, r3, #2
   1c470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c474:	add	r3, r2, r3
   1c478:	ldr	r3, [r3]
   1c47c:	movw	r1, #61740	; 0xf12c
   1c480:	movt	r1, #1
   1c484:	mov	r0, r3
   1c488:	bl	121e4 <strcmp@plt>
   1c48c:	mov	r3, r0
   1c490:	cmp	r3, #0
   1c494:	beq	1c4c8 <handle_coda_error@@Base+0x1610>
   1c498:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c49c:	lsl	r3, r3, #2
   1c4a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c4a4:	add	r3, r2, r3
   1c4a8:	ldr	r3, [r3]
   1c4ac:	movw	r1, #61744	; 0xf130
   1c4b0:	movt	r1, #1
   1c4b4:	mov	r0, r3
   1c4b8:	bl	121e4 <strcmp@plt>
   1c4bc:	mov	r3, r0
   1c4c0:	cmp	r3, #0
   1c4c4:	bne	1c534 <handle_coda_error@@Base+0x167c>
   1c4c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c4cc:	add	r3, r3, #1
   1c4d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c4d4:	cmp	r2, r3
   1c4d8:	ble	1c534 <handle_coda_error@@Base+0x167c>
   1c4dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c4e0:	add	r3, r3, #1
   1c4e4:	lsl	r3, r3, #2
   1c4e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c4ec:	add	r3, r2, r3
   1c4f0:	ldr	r3, [r3]
   1c4f4:	ldrb	r3, [r3]
   1c4f8:	cmp	r3, #45	; 0x2d
   1c4fc:	beq	1c534 <handle_coda_error@@Base+0x167c>
   1c500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c504:	add	r3, r3, #1
   1c508:	lsl	r3, r3, #2
   1c50c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c510:	add	r3, r2, r3
   1c514:	ldr	r2, [r3]
   1c518:	movw	r3, #480	; 0x1e0
   1c51c:	movt	r3, #3
   1c520:	str	r2, [r3]
   1c524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c528:	add	r3, r3, #1
   1c52c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c530:	b	1c6c0 <handle_coda_error@@Base+0x1808>
   1c534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c538:	lsl	r3, r3, #2
   1c53c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c540:	add	r3, r2, r3
   1c544:	ldr	r3, [r3]
   1c548:	movw	r1, #61888	; 0xf1c0
   1c54c:	movt	r1, #1
   1c550:	mov	r0, r3
   1c554:	bl	121e4 <strcmp@plt>
   1c558:	mov	r3, r0
   1c55c:	cmp	r3, #0
   1c560:	beq	1c594 <handle_coda_error@@Base+0x16dc>
   1c564:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c568:	lsl	r3, r3, #2
   1c56c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c570:	add	r3, r2, r3
   1c574:	ldr	r3, [r3]
   1c578:	movw	r1, #61892	; 0xf1c4
   1c57c:	movt	r1, #1
   1c580:	mov	r0, r3
   1c584:	bl	121e4 <strcmp@plt>
   1c588:	mov	r3, r0
   1c58c:	cmp	r3, #0
   1c590:	bne	1c600 <handle_coda_error@@Base+0x1748>
   1c594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c598:	add	r3, r3, #1
   1c59c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c5a0:	cmp	r2, r3
   1c5a4:	ble	1c600 <handle_coda_error@@Base+0x1748>
   1c5a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5ac:	add	r3, r3, #1
   1c5b0:	lsl	r3, r3, #2
   1c5b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c5b8:	add	r3, r2, r3
   1c5bc:	ldr	r3, [r3]
   1c5c0:	ldrb	r3, [r3]
   1c5c4:	cmp	r3, #45	; 0x2d
   1c5c8:	beq	1c600 <handle_coda_error@@Base+0x1748>
   1c5cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5d0:	add	r3, r3, #1
   1c5d4:	lsl	r3, r3, #2
   1c5d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c5dc:	add	r3, r2, r3
   1c5e0:	ldr	r2, [r3]
   1c5e4:	movw	r3, #4272	; 0x10b0
   1c5e8:	movt	r3, #3
   1c5ec:	str	r2, [r3]
   1c5f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5f4:	add	r3, r3, #1
   1c5f8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c5fc:	b	1c6c0 <handle_coda_error@@Base+0x1808>
   1c600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c604:	lsl	r3, r3, #2
   1c608:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c60c:	add	r3, r2, r3
   1c610:	ldr	r3, [r3]
   1c614:	movw	r1, #61664	; 0xf0e0
   1c618:	movt	r1, #1
   1c61c:	mov	r0, r3
   1c620:	bl	121e4 <strcmp@plt>
   1c624:	mov	r3, r0
   1c628:	cmp	r3, #0
   1c62c:	bne	1c63c <handle_coda_error@@Base+0x1784>
   1c630:	mov	r3, #0
   1c634:	str	r3, [fp, #-16]
   1c638:	b	1c6c0 <handle_coda_error@@Base+0x1808>
   1c63c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c640:	sub	r3, r3, #1
   1c644:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c648:	cmp	r2, r3
   1c64c:	bne	1c694 <handle_coda_error@@Base+0x17dc>
   1c650:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c654:	lsl	r3, r3, #2
   1c658:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c65c:	add	r3, r2, r3
   1c660:	ldr	r3, [r3]
   1c664:	ldrb	r3, [r3]
   1c668:	cmp	r3, #45	; 0x2d
   1c66c:	beq	1c694 <handle_coda_error@@Base+0x17dc>
   1c670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c674:	lsl	r3, r3, #2
   1c678:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c67c:	add	r3, r2, r3
   1c680:	ldr	r2, [r3]
   1c684:	movw	r3, #496	; 0x1f0
   1c688:	movt	r3, #3
   1c68c:	str	r2, [r3]
   1c690:	b	1c6c0 <handle_coda_error@@Base+0x1808>
   1c694:	movw	r3, #440	; 0x1b8
   1c698:	movt	r3, #3
   1c69c:	ldr	r3, [r3]
   1c6a0:	mov	r2, #25
   1c6a4:	mov	r1, #1
   1c6a8:	movw	r0, #61684	; 0xf0f4
   1c6ac:	movt	r0, #1
   1c6b0:	bl	1234c <fwrite@plt>
   1c6b4:	bl	1a930 <print_yaml_data@@Base+0x190>
   1c6b8:	mov	r0, #1
   1c6bc:	bl	123e8 <exit@plt>
   1c6c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c6c4:	add	r3, r3, #1
   1c6c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c6cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c6d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c6d4:	cmp	r2, r3
   1c6d8:	blt	1c390 <handle_coda_error@@Base+0x14d8>
   1c6dc:	movw	r3, #496	; 0x1f0
   1c6e0:	movt	r3, #3
   1c6e4:	ldr	r3, [r3]
   1c6e8:	cmp	r3, #0
   1c6ec:	beq	1c708 <handle_coda_error@@Base+0x1850>
   1c6f0:	movw	r3, #496	; 0x1f0
   1c6f4:	movt	r3, #3
   1c6f8:	ldr	r3, [r3]
   1c6fc:	ldrb	r3, [r3]
   1c700:	cmp	r3, #0
   1c704:	bne	1c734 <handle_coda_error@@Base+0x187c>
   1c708:	movw	r3, #440	; 0x1b8
   1c70c:	movt	r3, #3
   1c710:	ldr	r3, [r3]
   1c714:	mov	r2, #25
   1c718:	mov	r1, #1
   1c71c:	movw	r0, #61684	; 0xf0f4
   1c720:	movt	r0, #1
   1c724:	bl	1234c <fwrite@plt>
   1c728:	bl	1a930 <print_yaml_data@@Base+0x190>
   1c72c:	mov	r0, #1
   1c730:	bl	123e8 <exit@plt>
   1c734:	bl	12454 <coda_init@plt>
   1c738:	mov	r3, r0
   1c73c:	cmp	r3, #0
   1c740:	beq	1c784 <handle_coda_error@@Base+0x18cc>
   1c744:	movw	r3, #440	; 0x1b8
   1c748:	movt	r3, #3
   1c74c:	ldr	r4, [r3]
   1c750:	bl	125e0 <coda_get_errno@plt>
   1c754:	mov	r3, r0
   1c758:	ldr	r3, [r3]
   1c75c:	mov	r0, r3
   1c760:	bl	12598 <coda_errno_to_string@plt>
   1c764:	mov	r3, r0
   1c768:	mov	r2, r3
   1c76c:	movw	r1, #61492	; 0xf034
   1c770:	movt	r1, #1
   1c774:	mov	r0, r4
   1c778:	bl	12430 <fprintf@plt>
   1c77c:	mov	r0, #1
   1c780:	bl	123e8 <exit@plt>
   1c784:	ldr	r3, [fp, #-16]
   1c788:	cmp	r3, #0
   1c78c:	moveq	r3, #1
   1c790:	movne	r3, #0
   1c794:	uxtb	r3, r3
   1c798:	mov	r0, r3
   1c79c:	bl	12298 <coda_set_option_bypass_special_types@plt>
   1c7a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7a4:	bl	12460 <coda_set_option_perform_conversions@plt>
   1c7a8:	movw	r3, #480	; 0x1e0
   1c7ac:	movt	r3, #3
   1c7b0:	ldr	r3, [r3]
   1c7b4:	cmp	r3, #0
   1c7b8:	beq	1c82c <handle_coda_error@@Base+0x1974>
   1c7bc:	movw	r3, #480	; 0x1e0
   1c7c0:	movt	r3, #3
   1c7c4:	ldr	r3, [r3]
   1c7c8:	movw	r1, #61820	; 0xf17c
   1c7cc:	movt	r1, #1
   1c7d0:	mov	r0, r3
   1c7d4:	bl	12214 <fopen@plt>
   1c7d8:	mov	r2, r0
   1c7dc:	movw	r3, #4248	; 0x1098
   1c7e0:	movt	r3, #3
   1c7e4:	str	r2, [r3]
   1c7e8:	movw	r3, #4248	; 0x1098
   1c7ec:	movt	r3, #3
   1c7f0:	ldr	r3, [r3]
   1c7f4:	cmp	r3, #0
   1c7f8:	bne	1c82c <handle_coda_error@@Base+0x1974>
   1c7fc:	movw	r3, #440	; 0x1b8
   1c800:	movt	r3, #3
   1c804:	ldr	r0, [r3]
   1c808:	movw	r3, #480	; 0x1e0
   1c80c:	movt	r3, #3
   1c810:	ldr	r3, [r3]
   1c814:	mov	r2, r3
   1c818:	movw	r1, #61824	; 0xf180
   1c81c:	movt	r1, #1
   1c820:	bl	12430 <fprintf@plt>
   1c824:	mov	r0, #1
   1c828:	bl	123e8 <exit@plt>
   1c82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c830:	bl	1a7a0 <print_yaml_data@@Base>
   1c834:	movw	r3, #480	; 0x1e0
   1c838:	movt	r3, #3
   1c83c:	ldr	r3, [r3]
   1c840:	cmp	r3, #0
   1c844:	beq	1c85c <handle_coda_error@@Base+0x19a4>
   1c848:	movw	r3, #4248	; 0x1098
   1c84c:	movt	r3, #3
   1c850:	ldr	r3, [r3]
   1c854:	mov	r0, r3
   1c858:	bl	124d8 <fclose@plt>
   1c85c:	bl	1237c <coda_done@plt>
   1c860:	nop	{0}
   1c864:	sub	sp, fp, #8
   1c868:	ldr	r4, [sp]
   1c86c:	ldr	fp, [sp, #4]
   1c870:	add	sp, sp, #8
   1c874:	pop	{pc}		; (ldr pc, [sp], #4)
   1c878:	str	r4, [sp, #-12]!
   1c87c:	str	fp, [sp, #4]
   1c880:	str	lr, [sp, #8]
   1c884:	add	fp, sp, #8
   1c888:	sub	sp, sp, #36	; 0x24
   1c88c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c890:	str	r1, [fp, #-44]	; 0xffffffd4
   1c894:	mov	r3, #0
   1c898:	str	r3, [fp, #-16]
   1c89c:	mov	r3, #0
   1c8a0:	str	r3, [fp, #-20]	; 0xffffffec
   1c8a4:	mov	r3, #0
   1c8a8:	str	r3, [fp, #-24]	; 0xffffffe8
   1c8ac:	movw	r3, #496	; 0x1f0
   1c8b0:	movt	r3, #3
   1c8b4:	mov	r2, #0
   1c8b8:	str	r2, [r3]
   1c8bc:	movw	r3, #480	; 0x1e0
   1c8c0:	movt	r3, #3
   1c8c4:	mov	r2, #0
   1c8c8:	str	r2, [r3]
   1c8cc:	movw	r3, #4272	; 0x10b0
   1c8d0:	movt	r3, #3
   1c8d4:	mov	r2, #0
   1c8d8:	str	r2, [r3]
   1c8dc:	movw	r3, #444	; 0x1bc
   1c8e0:	movt	r3, #3
   1c8e4:	ldr	r2, [r3]
   1c8e8:	movw	r3, #4248	; 0x1098
   1c8ec:	movt	r3, #3
   1c8f0:	str	r2, [r3]
   1c8f4:	mov	r3, #1
   1c8f8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c8fc:	mov	r3, #0
   1c900:	str	r3, [fp, #-32]	; 0xffffffe0
   1c904:	b	1cd60 <handle_coda_error@@Base+0x1ea8>
   1c908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c90c:	lsl	r3, r3, #2
   1c910:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c914:	add	r3, r2, r3
   1c918:	ldr	r3, [r3]
   1c91c:	movw	r1, #61520	; 0xf050
   1c920:	movt	r1, #1
   1c924:	mov	r0, r3
   1c928:	bl	121e4 <strcmp@plt>
   1c92c:	mov	r3, r0
   1c930:	cmp	r3, #0
   1c934:	beq	1c968 <handle_coda_error@@Base+0x1ab0>
   1c938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c93c:	lsl	r3, r3, #2
   1c940:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c944:	add	r3, r2, r3
   1c948:	ldr	r3, [r3]
   1c94c:	movw	r1, #61900	; 0xf1cc
   1c950:	movt	r1, #1
   1c954:	mov	r0, r3
   1c958:	bl	121e4 <strcmp@plt>
   1c95c:	mov	r3, r0
   1c960:	cmp	r3, #0
   1c964:	bne	1c974 <handle_coda_error@@Base+0x1abc>
   1c968:	mov	r3, #0
   1c96c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c970:	b	1cd54 <handle_coda_error@@Base+0x1e9c>
   1c974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c978:	lsl	r3, r3, #2
   1c97c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c980:	add	r3, r2, r3
   1c984:	ldr	r3, [r3]
   1c988:	movw	r1, #61740	; 0xf12c
   1c98c:	movt	r1, #1
   1c990:	mov	r0, r3
   1c994:	bl	121e4 <strcmp@plt>
   1c998:	mov	r3, r0
   1c99c:	cmp	r3, #0
   1c9a0:	beq	1c9d4 <handle_coda_error@@Base+0x1b1c>
   1c9a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9a8:	lsl	r3, r3, #2
   1c9ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c9b0:	add	r3, r2, r3
   1c9b4:	ldr	r3, [r3]
   1c9b8:	movw	r1, #61744	; 0xf130
   1c9bc:	movt	r1, #1
   1c9c0:	mov	r0, r3
   1c9c4:	bl	121e4 <strcmp@plt>
   1c9c8:	mov	r3, r0
   1c9cc:	cmp	r3, #0
   1c9d0:	bne	1ca40 <handle_coda_error@@Base+0x1b88>
   1c9d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9d8:	add	r3, r3, #1
   1c9dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c9e0:	cmp	r2, r3
   1c9e4:	ble	1ca40 <handle_coda_error@@Base+0x1b88>
   1c9e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9ec:	add	r3, r3, #1
   1c9f0:	lsl	r3, r3, #2
   1c9f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1c9f8:	add	r3, r2, r3
   1c9fc:	ldr	r3, [r3]
   1ca00:	ldrb	r3, [r3]
   1ca04:	cmp	r3, #45	; 0x2d
   1ca08:	beq	1ca40 <handle_coda_error@@Base+0x1b88>
   1ca0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca10:	add	r3, r3, #1
   1ca14:	lsl	r3, r3, #2
   1ca18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ca1c:	add	r3, r2, r3
   1ca20:	ldr	r2, [r3]
   1ca24:	movw	r3, #480	; 0x1e0
   1ca28:	movt	r3, #3
   1ca2c:	str	r2, [r3]
   1ca30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca34:	add	r3, r3, #1
   1ca38:	str	r3, [fp, #-32]	; 0xffffffe0
   1ca3c:	b	1cd54 <handle_coda_error@@Base+0x1e9c>
   1ca40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca44:	lsl	r3, r3, #2
   1ca48:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ca4c:	add	r3, r2, r3
   1ca50:	ldr	r3, [r3]
   1ca54:	movw	r1, #61888	; 0xf1c0
   1ca58:	movt	r1, #1
   1ca5c:	mov	r0, r3
   1ca60:	bl	121e4 <strcmp@plt>
   1ca64:	mov	r3, r0
   1ca68:	cmp	r3, #0
   1ca6c:	beq	1caa0 <handle_coda_error@@Base+0x1be8>
   1ca70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca74:	lsl	r3, r3, #2
   1ca78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ca7c:	add	r3, r2, r3
   1ca80:	ldr	r3, [r3]
   1ca84:	movw	r1, #61892	; 0xf1c4
   1ca88:	movt	r1, #1
   1ca8c:	mov	r0, r3
   1ca90:	bl	121e4 <strcmp@plt>
   1ca94:	mov	r3, r0
   1ca98:	cmp	r3, #0
   1ca9c:	bne	1cb0c <handle_coda_error@@Base+0x1c54>
   1caa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1caa4:	add	r3, r3, #1
   1caa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1caac:	cmp	r2, r3
   1cab0:	ble	1cb0c <handle_coda_error@@Base+0x1c54>
   1cab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cab8:	add	r3, r3, #1
   1cabc:	lsl	r3, r3, #2
   1cac0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cac4:	add	r3, r2, r3
   1cac8:	ldr	r3, [r3]
   1cacc:	ldrb	r3, [r3]
   1cad0:	cmp	r3, #45	; 0x2d
   1cad4:	beq	1cb0c <handle_coda_error@@Base+0x1c54>
   1cad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cadc:	add	r3, r3, #1
   1cae0:	lsl	r3, r3, #2
   1cae4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cae8:	add	r3, r2, r3
   1caec:	ldr	r2, [r3]
   1caf0:	movw	r3, #4272	; 0x10b0
   1caf4:	movt	r3, #3
   1caf8:	str	r2, [r3]
   1cafc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb00:	add	r3, r3, #1
   1cb04:	str	r3, [fp, #-32]	; 0xffffffe0
   1cb08:	b	1cd54 <handle_coda_error@@Base+0x1e9c>
   1cb0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb10:	lsl	r3, r3, #2
   1cb14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cb18:	add	r3, r2, r3
   1cb1c:	ldr	r3, [r3]
   1cb20:	movw	r1, #61932	; 0xf1ec
   1cb24:	movt	r1, #1
   1cb28:	mov	r0, r3
   1cb2c:	bl	121e4 <strcmp@plt>
   1cb30:	mov	r3, r0
   1cb34:	cmp	r3, #0
   1cb38:	bne	1cbb4 <handle_coda_error@@Base+0x1cfc>
   1cb3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb40:	add	r3, r3, #1
   1cb44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb48:	cmp	r2, r3
   1cb4c:	ble	1cbb4 <handle_coda_error@@Base+0x1cfc>
   1cb50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb54:	add	r3, r3, #1
   1cb58:	lsl	r3, r3, #2
   1cb5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cb60:	add	r3, r2, r3
   1cb64:	ldr	r3, [r3]
   1cb68:	ldrb	r3, [r3]
   1cb6c:	cmp	r3, #45	; 0x2d
   1cb70:	beq	1cbb4 <handle_coda_error@@Base+0x1cfc>
   1cb74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb78:	add	r3, r3, #1
   1cb7c:	lsl	r3, r3, #2
   1cb80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cb84:	add	r3, r2, r3
   1cb88:	ldr	r3, [r3]
   1cb8c:	mov	r0, r3
   1cb90:	bl	1258c <atoi@plt>
   1cb94:	mov	r2, r0
   1cb98:	movw	r3, #432	; 0x1b0
   1cb9c:	movt	r3, #3
   1cba0:	str	r2, [r3]
   1cba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cba8:	add	r3, r3, #1
   1cbac:	str	r3, [fp, #-32]	; 0xffffffe0
   1cbb0:	b	1cd54 <handle_coda_error@@Base+0x1e9c>
   1cbb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbb8:	lsl	r3, r3, #2
   1cbbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cbc0:	add	r3, r2, r3
   1cbc4:	ldr	r3, [r3]
   1cbc8:	movw	r1, #61944	; 0xf1f8
   1cbcc:	movt	r1, #1
   1cbd0:	mov	r0, r3
   1cbd4:	bl	121e4 <strcmp@plt>
   1cbd8:	mov	r3, r0
   1cbdc:	cmp	r3, #0
   1cbe0:	bne	1ccd0 <handle_coda_error@@Base+0x1e18>
   1cbe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbe8:	add	r3, r3, #3
   1cbec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cbf0:	cmp	r2, r3
   1cbf4:	ble	1ccd0 <handle_coda_error@@Base+0x1e18>
   1cbf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbfc:	add	r3, r3, #1
   1cc00:	lsl	r3, r3, #2
   1cc04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cc08:	add	r3, r2, r3
   1cc0c:	ldr	r3, [r3]
   1cc10:	ldrb	r3, [r3]
   1cc14:	cmp	r3, #45	; 0x2d
   1cc18:	beq	1ccd0 <handle_coda_error@@Base+0x1e18>
   1cc1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc20:	add	r3, r3, #2
   1cc24:	lsl	r3, r3, #2
   1cc28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cc2c:	add	r3, r2, r3
   1cc30:	ldr	r3, [r3]
   1cc34:	ldrb	r3, [r3]
   1cc38:	cmp	r3, #45	; 0x2d
   1cc3c:	beq	1ccd0 <handle_coda_error@@Base+0x1e18>
   1cc40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc44:	add	r3, r3, #3
   1cc48:	lsl	r3, r3, #2
   1cc4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cc50:	add	r3, r2, r3
   1cc54:	ldr	r3, [r3]
   1cc58:	ldrb	r3, [r3]
   1cc5c:	cmp	r3, #45	; 0x2d
   1cc60:	beq	1ccd0 <handle_coda_error@@Base+0x1e18>
   1cc64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc68:	add	r3, r3, #1
   1cc6c:	lsl	r3, r3, #2
   1cc70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cc74:	add	r3, r2, r3
   1cc78:	ldr	r3, [r3]
   1cc7c:	str	r3, [fp, #-16]
   1cc80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc84:	add	r3, r3, #2
   1cc88:	lsl	r3, r3, #2
   1cc8c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cc90:	add	r3, r2, r3
   1cc94:	ldr	r3, [r3]
   1cc98:	str	r3, [fp, #-20]	; 0xffffffec
   1cc9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cca0:	add	r3, r3, #3
   1cca4:	lsl	r3, r3, #2
   1cca8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ccac:	add	r3, r2, r3
   1ccb0:	ldr	r3, [r3]
   1ccb4:	mov	r0, r3
   1ccb8:	bl	1258c <atoi@plt>
   1ccbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1ccc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccc4:	add	r3, r3, #3
   1ccc8:	str	r3, [fp, #-32]	; 0xffffffe0
   1cccc:	b	1cd54 <handle_coda_error@@Base+0x1e9c>
   1ccd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ccd4:	sub	r3, r3, #1
   1ccd8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ccdc:	cmp	r2, r3
   1cce0:	bne	1cd28 <handle_coda_error@@Base+0x1e70>
   1cce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cce8:	lsl	r3, r3, #2
   1ccec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ccf0:	add	r3, r2, r3
   1ccf4:	ldr	r3, [r3]
   1ccf8:	ldrb	r3, [r3]
   1ccfc:	cmp	r3, #45	; 0x2d
   1cd00:	beq	1cd28 <handle_coda_error@@Base+0x1e70>
   1cd04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cd08:	lsl	r3, r3, #2
   1cd0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cd10:	add	r3, r2, r3
   1cd14:	ldr	r2, [r3]
   1cd18:	movw	r3, #496	; 0x1f0
   1cd1c:	movt	r3, #3
   1cd20:	str	r2, [r3]
   1cd24:	b	1cd54 <handle_coda_error@@Base+0x1e9c>
   1cd28:	movw	r3, #440	; 0x1b8
   1cd2c:	movt	r3, #3
   1cd30:	ldr	r3, [r3]
   1cd34:	mov	r2, #25
   1cd38:	mov	r1, #1
   1cd3c:	movw	r0, #61684	; 0xf0f4
   1cd40:	movt	r0, #1
   1cd44:	bl	1234c <fwrite@plt>
   1cd48:	bl	1a930 <print_yaml_data@@Base+0x190>
   1cd4c:	mov	r0, #1
   1cd50:	bl	123e8 <exit@plt>
   1cd54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cd58:	add	r3, r3, #1
   1cd5c:	str	r3, [fp, #-32]	; 0xffffffe0
   1cd60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cd64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cd68:	cmp	r2, r3
   1cd6c:	blt	1c908 <handle_coda_error@@Base+0x1a50>
   1cd70:	movw	r3, #496	; 0x1f0
   1cd74:	movt	r3, #3
   1cd78:	ldr	r3, [r3]
   1cd7c:	cmp	r3, #0
   1cd80:	beq	1cd9c <handle_coda_error@@Base+0x1ee4>
   1cd84:	movw	r3, #496	; 0x1f0
   1cd88:	movt	r3, #3
   1cd8c:	ldr	r3, [r3]
   1cd90:	ldrb	r3, [r3]
   1cd94:	cmp	r3, #0
   1cd98:	bne	1cdc8 <handle_coda_error@@Base+0x1f10>
   1cd9c:	movw	r3, #440	; 0x1b8
   1cda0:	movt	r3, #3
   1cda4:	ldr	r3, [r3]
   1cda8:	mov	r2, #25
   1cdac:	mov	r1, #1
   1cdb0:	movw	r0, #61684	; 0xf0f4
   1cdb4:	movt	r0, #1
   1cdb8:	bl	1234c <fwrite@plt>
   1cdbc:	bl	1a930 <print_yaml_data@@Base+0x190>
   1cdc0:	mov	r0, #1
   1cdc4:	bl	123e8 <exit@plt>
   1cdc8:	bl	12454 <coda_init@plt>
   1cdcc:	mov	r3, r0
   1cdd0:	cmp	r3, #0
   1cdd4:	beq	1ce18 <handle_coda_error@@Base+0x1f60>
   1cdd8:	movw	r3, #440	; 0x1b8
   1cddc:	movt	r3, #3
   1cde0:	ldr	r4, [r3]
   1cde4:	bl	125e0 <coda_get_errno@plt>
   1cde8:	mov	r3, r0
   1cdec:	ldr	r3, [r3]
   1cdf0:	mov	r0, r3
   1cdf4:	bl	12598 <coda_errno_to_string@plt>
   1cdf8:	mov	r3, r0
   1cdfc:	mov	r2, r3
   1ce00:	movw	r1, #61492	; 0xf034
   1ce04:	movt	r1, #1
   1ce08:	mov	r0, r4
   1ce0c:	bl	12430 <fprintf@plt>
   1ce10:	mov	r0, #1
   1ce14:	bl	123e8 <exit@plt>
   1ce18:	mov	r0, #0
   1ce1c:	bl	12460 <coda_set_option_perform_conversions@plt>
   1ce20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce24:	bl	121b4 <coda_set_option_use_fast_size_expressions@plt>
   1ce28:	movw	r3, #480	; 0x1e0
   1ce2c:	movt	r3, #3
   1ce30:	ldr	r3, [r3]
   1ce34:	cmp	r3, #0
   1ce38:	beq	1ceac <handle_coda_error@@Base+0x1ff4>
   1ce3c:	movw	r3, #480	; 0x1e0
   1ce40:	movt	r3, #3
   1ce44:	ldr	r3, [r3]
   1ce48:	movw	r1, #61820	; 0xf17c
   1ce4c:	movt	r1, #1
   1ce50:	mov	r0, r3
   1ce54:	bl	12214 <fopen@plt>
   1ce58:	mov	r2, r0
   1ce5c:	movw	r3, #4248	; 0x1098
   1ce60:	movt	r3, #3
   1ce64:	str	r2, [r3]
   1ce68:	movw	r3, #4248	; 0x1098
   1ce6c:	movt	r3, #3
   1ce70:	ldr	r3, [r3]
   1ce74:	cmp	r3, #0
   1ce78:	bne	1ceac <handle_coda_error@@Base+0x1ff4>
   1ce7c:	movw	r3, #440	; 0x1b8
   1ce80:	movt	r3, #3
   1ce84:	ldr	r0, [r3]
   1ce88:	movw	r3, #480	; 0x1e0
   1ce8c:	movt	r3, #3
   1ce90:	ldr	r3, [r3]
   1ce94:	mov	r2, r3
   1ce98:	movw	r1, #61824	; 0xf180
   1ce9c:	movt	r1, #1
   1cea0:	bl	12430 <fprintf@plt>
   1cea4:	mov	r0, #1
   1cea8:	bl	123e8 <exit@plt>
   1ceac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ceb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ceb4:	ldr	r0, [fp, #-16]
   1ceb8:	bl	14a10 <print_debug_data@@Base>
   1cebc:	movw	r3, #480	; 0x1e0
   1cec0:	movt	r3, #3
   1cec4:	ldr	r3, [r3]
   1cec8:	cmp	r3, #0
   1cecc:	beq	1cee4 <handle_coda_error@@Base+0x202c>
   1ced0:	movw	r3, #4248	; 0x1098
   1ced4:	movt	r3, #3
   1ced8:	ldr	r3, [r3]
   1cedc:	mov	r0, r3
   1cee0:	bl	124d8 <fclose@plt>
   1cee4:	bl	1237c <coda_done@plt>
   1cee8:	nop	{0}
   1ceec:	sub	sp, fp, #8
   1cef0:	ldr	r4, [sp]
   1cef4:	ldr	fp, [sp, #4]
   1cef8:	add	sp, sp, #8
   1cefc:	pop	{pc}		; (ldr pc, [sp], #4)

0001cf00 <main@@Base>:
   1cf00:	str	r4, [sp, #-12]!
   1cf04:	str	fp, [sp, #4]
   1cf08:	str	lr, [sp, #8]
   1cf0c:	add	fp, sp, #8
   1cf10:	sub	sp, sp, #20
   1cf14:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf18:	str	r1, [fp, #-28]	; 0xffffffe4
   1cf1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf20:	cmp	r3, #1
   1cf24:	beq	1cf78 <main@@Base+0x78>
   1cf28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf2c:	add	r3, r3, #4
   1cf30:	ldr	r3, [r3]
   1cf34:	movw	r1, #61956	; 0xf204
   1cf38:	movt	r1, #1
   1cf3c:	mov	r0, r3
   1cf40:	bl	121e4 <strcmp@plt>
   1cf44:	mov	r3, r0
   1cf48:	cmp	r3, #0
   1cf4c:	beq	1cf78 <main@@Base+0x78>
   1cf50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf54:	add	r3, r3, #4
   1cf58:	ldr	r3, [r3]
   1cf5c:	movw	r1, #61960	; 0xf208
   1cf60:	movt	r1, #1
   1cf64:	mov	r0, r3
   1cf68:	bl	121e4 <strcmp@plt>
   1cf6c:	mov	r3, r0
   1cf70:	cmp	r3, #0
   1cf74:	bne	1cf84 <main@@Base+0x84>
   1cf78:	bl	1a930 <print_yaml_data@@Base+0x190>
   1cf7c:	mov	r0, #0
   1cf80:	bl	123e8 <exit@plt>
   1cf84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf88:	add	r3, r3, #4
   1cf8c:	ldr	r3, [r3]
   1cf90:	movw	r1, #61968	; 0xf210
   1cf94:	movt	r1, #1
   1cf98:	mov	r0, r3
   1cf9c:	bl	121e4 <strcmp@plt>
   1cfa0:	mov	r3, r0
   1cfa4:	cmp	r3, #0
   1cfa8:	beq	1cfd4 <main@@Base+0xd4>
   1cfac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cfb0:	add	r3, r3, #4
   1cfb4:	ldr	r3, [r3]
   1cfb8:	movw	r1, #61972	; 0xf214
   1cfbc:	movt	r1, #1
   1cfc0:	mov	r0, r3
   1cfc4:	bl	121e4 <strcmp@plt>
   1cfc8:	mov	r3, r0
   1cfcc:	cmp	r3, #0
   1cfd0:	bne	1cfe0 <main@@Base+0xe0>
   1cfd4:	bl	1a8e4 <print_yaml_data@@Base+0x144>
   1cfd8:	mov	r0, #0
   1cfdc:	bl	123e8 <exit@plt>
   1cfe0:	mov	r3, #1
   1cfe4:	str	r3, [fp, #-16]
   1cfe8:	ldr	r3, [fp, #-16]
   1cfec:	add	r3, r3, #1
   1cff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cff4:	cmp	r2, r3
   1cff8:	ble	1d05c <main@@Base+0x15c>
   1cffc:	ldr	r3, [fp, #-16]
   1d000:	lsl	r3, r3, #2
   1d004:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d008:	add	r3, r2, r3
   1d00c:	ldr	r3, [r3]
   1d010:	movw	r1, #61984	; 0xf220
   1d014:	movt	r1, #1
   1d018:	mov	r0, r3
   1d01c:	bl	121e4 <strcmp@plt>
   1d020:	mov	r3, r0
   1d024:	cmp	r3, #0
   1d028:	bne	1d05c <main@@Base+0x15c>
   1d02c:	ldr	r3, [fp, #-16]
   1d030:	add	r3, r3, #1
   1d034:	lsl	r3, r3, #2
   1d038:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d03c:	add	r3, r2, r3
   1d040:	ldr	r3, [r3]
   1d044:	mov	r0, r3
   1d048:	bl	12304 <coda_set_definition_path@plt>
   1d04c:	ldr	r3, [fp, #-16]
   1d050:	add	r3, r3, #2
   1d054:	str	r3, [fp, #-16]
   1d058:	b	1d0cc <main@@Base+0x1cc>
   1d05c:	movw	r3, #61988	; 0xf224
   1d060:	movt	r3, #1
   1d064:	str	r3, [fp, #-20]	; 0xffffffec
   1d068:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d06c:	ldr	r3, [r3]
   1d070:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d074:	mov	r1, #0
   1d078:	mov	r0, r3
   1d07c:	bl	12280 <coda_set_definition_path_conditional@plt>
   1d080:	mov	r3, r0
   1d084:	cmp	r3, #0
   1d088:	beq	1d0cc <main@@Base+0x1cc>
   1d08c:	movw	r3, #440	; 0x1b8
   1d090:	movt	r3, #3
   1d094:	ldr	r4, [r3]
   1d098:	bl	125e0 <coda_get_errno@plt>
   1d09c:	mov	r3, r0
   1d0a0:	ldr	r3, [r3]
   1d0a4:	mov	r0, r3
   1d0a8:	bl	12598 <coda_errno_to_string@plt>
   1d0ac:	mov	r3, r0
   1d0b0:	mov	r2, r3
   1d0b4:	movw	r1, #61492	; 0xf034
   1d0b8:	movt	r1, #1
   1d0bc:	mov	r0, r4
   1d0c0:	bl	12430 <fprintf@plt>
   1d0c4:	mov	r0, #1
   1d0c8:	bl	123e8 <exit@plt>
   1d0cc:	ldr	r3, [fp, #-16]
   1d0d0:	lsl	r3, r3, #2
   1d0d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d0d8:	add	r3, r2, r3
   1d0dc:	ldr	r3, [r3]
   1d0e0:	movw	r1, #62016	; 0xf240
   1d0e4:	movt	r1, #1
   1d0e8:	mov	r0, r3
   1d0ec:	bl	121e4 <strcmp@plt>
   1d0f0:	mov	r3, r0
   1d0f4:	cmp	r3, #0
   1d0f8:	bne	1d140 <main@@Base+0x240>
   1d0fc:	movw	r3, #4268	; 0x10ac
   1d100:	movt	r3, #3
   1d104:	mov	r2, #0
   1d108:	str	r2, [r3]
   1d10c:	ldr	r3, [fp, #-16]
   1d110:	add	r3, r3, #1
   1d114:	str	r3, [fp, #-16]
   1d118:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d11c:	ldr	r3, [fp, #-16]
   1d120:	sub	r0, r2, r3
   1d124:	ldr	r3, [fp, #-16]
   1d128:	lsl	r3, r3, #2
   1d12c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d130:	add	r3, r2, r3
   1d134:	mov	r1, r3
   1d138:	bl	1af1c <handle_coda_error@@Base+0x64>
   1d13c:	b	1d33c <main@@Base+0x43c>
   1d140:	ldr	r3, [fp, #-16]
   1d144:	lsl	r3, r3, #2
   1d148:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d14c:	add	r3, r2, r3
   1d150:	ldr	r3, [r3]
   1d154:	movw	r1, #62024	; 0xf248
   1d158:	movt	r1, #1
   1d15c:	mov	r0, r3
   1d160:	bl	121e4 <strcmp@plt>
   1d164:	mov	r3, r0
   1d168:	cmp	r3, #0
   1d16c:	bne	1d1b4 <main@@Base+0x2b4>
   1d170:	movw	r3, #4268	; 0x10ac
   1d174:	movt	r3, #3
   1d178:	mov	r2, #1
   1d17c:	str	r2, [r3]
   1d180:	ldr	r3, [fp, #-16]
   1d184:	add	r3, r3, #1
   1d188:	str	r3, [fp, #-16]
   1d18c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d190:	ldr	r3, [fp, #-16]
   1d194:	sub	r0, r2, r3
   1d198:	ldr	r3, [fp, #-16]
   1d19c:	lsl	r3, r3, #2
   1d1a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d1a4:	add	r3, r2, r3
   1d1a8:	mov	r1, r3
   1d1ac:	bl	1b52c <handle_coda_error@@Base+0x674>
   1d1b0:	b	1d33c <main@@Base+0x43c>
   1d1b4:	ldr	r3, [fp, #-16]
   1d1b8:	lsl	r3, r3, #2
   1d1bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d1c0:	add	r3, r2, r3
   1d1c4:	ldr	r3, [r3]
   1d1c8:	movw	r1, #62032	; 0xf250
   1d1cc:	movt	r1, #1
   1d1d0:	mov	r0, r3
   1d1d4:	bl	121e4 <strcmp@plt>
   1d1d8:	mov	r3, r0
   1d1dc:	cmp	r3, #0
   1d1e0:	bne	1d228 <main@@Base+0x328>
   1d1e4:	movw	r3, #4268	; 0x10ac
   1d1e8:	movt	r3, #3
   1d1ec:	mov	r2, #3
   1d1f0:	str	r2, [r3]
   1d1f4:	ldr	r3, [fp, #-16]
   1d1f8:	add	r3, r3, #1
   1d1fc:	str	r3, [fp, #-16]
   1d200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d204:	ldr	r3, [fp, #-16]
   1d208:	sub	r0, r2, r3
   1d20c:	ldr	r3, [fp, #-16]
   1d210:	lsl	r3, r3, #2
   1d214:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d218:	add	r3, r2, r3
   1d21c:	mov	r1, r3
   1d220:	bl	1bd98 <handle_coda_error@@Base+0xee0>
   1d224:	b	1d33c <main@@Base+0x43c>
   1d228:	ldr	r3, [fp, #-16]
   1d22c:	lsl	r3, r3, #2
   1d230:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d234:	add	r3, r2, r3
   1d238:	ldr	r3, [r3]
   1d23c:	movw	r1, #62040	; 0xf258
   1d240:	movt	r1, #1
   1d244:	mov	r0, r3
   1d248:	bl	121e4 <strcmp@plt>
   1d24c:	mov	r3, r0
   1d250:	cmp	r3, #0
   1d254:	bne	1d29c <main@@Base+0x39c>
   1d258:	movw	r3, #4268	; 0x10ac
   1d25c:	movt	r3, #3
   1d260:	mov	r2, #4
   1d264:	str	r2, [r3]
   1d268:	ldr	r3, [fp, #-16]
   1d26c:	add	r3, r3, #1
   1d270:	str	r3, [fp, #-16]
   1d274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d278:	ldr	r3, [fp, #-16]
   1d27c:	sub	r0, r2, r3
   1d280:	ldr	r3, [fp, #-16]
   1d284:	lsl	r3, r3, #2
   1d288:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d28c:	add	r3, r2, r3
   1d290:	mov	r1, r3
   1d294:	bl	1c308 <handle_coda_error@@Base+0x1450>
   1d298:	b	1d33c <main@@Base+0x43c>
   1d29c:	ldr	r3, [fp, #-16]
   1d2a0:	lsl	r3, r3, #2
   1d2a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d2a8:	add	r3, r2, r3
   1d2ac:	ldr	r3, [r3]
   1d2b0:	movw	r1, #62048	; 0xf260
   1d2b4:	movt	r1, #1
   1d2b8:	mov	r0, r3
   1d2bc:	bl	121e4 <strcmp@plt>
   1d2c0:	mov	r3, r0
   1d2c4:	cmp	r3, #0
   1d2c8:	bne	1d310 <main@@Base+0x410>
   1d2cc:	movw	r3, #4268	; 0x10ac
   1d2d0:	movt	r3, #3
   1d2d4:	mov	r2, #5
   1d2d8:	str	r2, [r3]
   1d2dc:	ldr	r3, [fp, #-16]
   1d2e0:	add	r3, r3, #1
   1d2e4:	str	r3, [fp, #-16]
   1d2e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2ec:	ldr	r3, [fp, #-16]
   1d2f0:	sub	r0, r2, r3
   1d2f4:	ldr	r3, [fp, #-16]
   1d2f8:	lsl	r3, r3, #2
   1d2fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d300:	add	r3, r2, r3
   1d304:	mov	r1, r3
   1d308:	bl	1c878 <handle_coda_error@@Base+0x19c0>
   1d30c:	b	1d33c <main@@Base+0x43c>
   1d310:	movw	r3, #440	; 0x1b8
   1d314:	movt	r3, #3
   1d318:	ldr	r3, [r3]
   1d31c:	mov	r2, #25
   1d320:	mov	r1, #1
   1d324:	movw	r0, #61684	; 0xf0f4
   1d328:	movt	r0, #1
   1d32c:	bl	1234c <fwrite@plt>
   1d330:	bl	1a930 <print_yaml_data@@Base+0x190>
   1d334:	mov	r0, #1
   1d338:	bl	123e8 <exit@plt>
   1d33c:	mov	r3, #0
   1d340:	mov	r0, r3
   1d344:	sub	sp, fp, #8
   1d348:	ldr	r4, [sp]
   1d34c:	ldr	fp, [sp, #4]
   1d350:	add	sp, sp, #8
   1d354:	pop	{pc}		; (ldr pc, [sp], #4)
   1d358:	cmp	r3, #0
   1d35c:	cmpeq	r2, #0
   1d360:	bne	1d384 <main@@Base+0x484>
   1d364:	cmp	r1, #0
   1d368:	movlt	r1, #-2147483648	; 0x80000000
   1d36c:	movlt	r0, #0
   1d370:	blt	1d380 <main@@Base+0x480>
   1d374:	cmpeq	r0, #0
   1d378:	mvnne	r1, #-2147483648	; 0x80000000
   1d37c:	mvnne	r0, #0
   1d380:	b	1d42c <main@@Base+0x52c>
   1d384:	sub	sp, sp, #8
   1d388:	push	{sp, lr}
   1d38c:	cmp	r1, #0
   1d390:	blt	1d3b0 <main@@Base+0x4b0>
   1d394:	cmp	r3, #0
   1d398:	blt	1d3e4 <main@@Base+0x4e4>
   1d39c:	bl	1d43c <main@@Base+0x53c>
   1d3a0:	ldr	lr, [sp, #4]
   1d3a4:	add	sp, sp, #8
   1d3a8:	pop	{r2, r3}
   1d3ac:	bx	lr
   1d3b0:	rsbs	r0, r0, #0
   1d3b4:	sbc	r1, r1, r1, lsl #1
   1d3b8:	cmp	r3, #0
   1d3bc:	blt	1d408 <main@@Base+0x508>
   1d3c0:	bl	1d43c <main@@Base+0x53c>
   1d3c4:	ldr	lr, [sp, #4]
   1d3c8:	add	sp, sp, #8
   1d3cc:	pop	{r2, r3}
   1d3d0:	rsbs	r0, r0, #0
   1d3d4:	sbc	r1, r1, r1, lsl #1
   1d3d8:	rsbs	r2, r2, #0
   1d3dc:	sbc	r3, r3, r3, lsl #1
   1d3e0:	bx	lr
   1d3e4:	rsbs	r2, r2, #0
   1d3e8:	sbc	r3, r3, r3, lsl #1
   1d3ec:	bl	1d43c <main@@Base+0x53c>
   1d3f0:	ldr	lr, [sp, #4]
   1d3f4:	add	sp, sp, #8
   1d3f8:	pop	{r2, r3}
   1d3fc:	rsbs	r0, r0, #0
   1d400:	sbc	r1, r1, r1, lsl #1
   1d404:	bx	lr
   1d408:	rsbs	r2, r2, #0
   1d40c:	sbc	r3, r3, r3, lsl #1
   1d410:	bl	1d43c <main@@Base+0x53c>
   1d414:	ldr	lr, [sp, #4]
   1d418:	add	sp, sp, #8
   1d41c:	pop	{r2, r3}
   1d420:	rsbs	r2, r2, #0
   1d424:	sbc	r3, r3, r3, lsl #1
   1d428:	bx	lr
   1d42c:	push	{r1, lr}
   1d430:	mov	r0, #8
   1d434:	bl	121c0 <raise@plt>
   1d438:	pop	{r1, pc}
   1d43c:	cmp	r1, r3
   1d440:	cmpeq	r0, r2
   1d444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d448:	mov	r4, r0
   1d44c:	movcc	r0, #0
   1d450:	mov	r5, r1
   1d454:	ldr	lr, [sp, #36]	; 0x24
   1d458:	movcc	r1, r0
   1d45c:	bcc	1d558 <main@@Base+0x658>
   1d460:	cmp	r3, #0
   1d464:	clzeq	ip, r2
   1d468:	clzne	ip, r3
   1d46c:	addeq	ip, ip, #32
   1d470:	cmp	r5, #0
   1d474:	clzeq	r1, r4
   1d478:	addeq	r1, r1, #32
   1d47c:	clzne	r1, r5
   1d480:	sub	ip, ip, r1
   1d484:	sub	sl, ip, #32
   1d488:	lsl	r9, r3, ip
   1d48c:	rsb	fp, ip, #32
   1d490:	orr	r9, r9, r2, lsl sl
   1d494:	orr	r9, r9, r2, lsr fp
   1d498:	lsl	r8, r2, ip
   1d49c:	cmp	r5, r9
   1d4a0:	cmpeq	r4, r8
   1d4a4:	movcc	r0, #0
   1d4a8:	movcc	r1, r0
   1d4ac:	bcc	1d4c8 <main@@Base+0x5c8>
   1d4b0:	mov	r0, #1
   1d4b4:	subs	r4, r4, r8
   1d4b8:	lsl	r1, r0, sl
   1d4bc:	orr	r1, r1, r0, lsr fp
   1d4c0:	lsl	r0, r0, ip
   1d4c4:	sbc	r5, r5, r9
   1d4c8:	cmp	ip, #0
   1d4cc:	beq	1d558 <main@@Base+0x658>
   1d4d0:	lsr	r6, r8, #1
   1d4d4:	orr	r6, r6, r9, lsl #31
   1d4d8:	lsr	r7, r9, #1
   1d4dc:	mov	r2, ip
   1d4e0:	b	1d504 <main@@Base+0x604>
   1d4e4:	subs	r3, r4, r6
   1d4e8:	sbc	r8, r5, r7
   1d4ec:	adds	r3, r3, r3
   1d4f0:	adc	r8, r8, r8
   1d4f4:	adds	r4, r3, #1
   1d4f8:	adc	r5, r8, #0
   1d4fc:	subs	r2, r2, #1
   1d500:	beq	1d520 <main@@Base+0x620>
   1d504:	cmp	r5, r7
   1d508:	cmpeq	r4, r6
   1d50c:	bcs	1d4e4 <main@@Base+0x5e4>
   1d510:	adds	r4, r4, r4
   1d514:	adc	r5, r5, r5
   1d518:	subs	r2, r2, #1
   1d51c:	bne	1d504 <main@@Base+0x604>
   1d520:	lsr	r3, r4, ip
   1d524:	orr	r3, r3, r5, lsl fp
   1d528:	lsr	r2, r5, ip
   1d52c:	orr	r3, r3, r5, lsr sl
   1d530:	adds	r0, r0, r4
   1d534:	mov	r4, r3
   1d538:	lsl	r3, r2, ip
   1d53c:	orr	r3, r3, r4, lsl sl
   1d540:	lsl	ip, r4, ip
   1d544:	orr	r3, r3, r4, lsr fp
   1d548:	adc	r1, r1, r5
   1d54c:	subs	r0, r0, ip
   1d550:	mov	r5, r2
   1d554:	sbc	r1, r1, r3
   1d558:	cmp	lr, #0
   1d55c:	strdne	r4, [lr]
   1d560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d564 <__libc_csu_init@@Base>:
   1d564:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d568:	mov	r7, r0
   1d56c:	ldr	r6, [pc, #72]	; 1d5bc <__libc_csu_init@@Base+0x58>
   1d570:	ldr	r5, [pc, #72]	; 1d5c0 <__libc_csu_init@@Base+0x5c>
   1d574:	add	r6, pc, r6
   1d578:	add	r5, pc, r5
   1d57c:	sub	r6, r6, r5
   1d580:	mov	r8, r1
   1d584:	mov	r9, r2
   1d588:	bl	1217c <coda_cursor_get_byte_size@plt-0x20>
   1d58c:	asrs	r6, r6, #2
   1d590:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d594:	mov	r4, #0
   1d598:	add	r4, r4, #1
   1d59c:	ldr	r3, [r5], #4
   1d5a0:	mov	r2, r9
   1d5a4:	mov	r1, r8
   1d5a8:	mov	r0, r7
   1d5ac:	blx	r3
   1d5b0:	cmp	r6, r4
   1d5b4:	bne	1d598 <__libc_csu_init@@Base+0x34>
   1d5b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d5bc:	andeq	r2, r1, r0, lsl #19
   1d5c0:	andeq	r2, r1, r8, ror r9

0001d5c4 <__libc_csu_fini@@Base>:
   1d5c4:	bx	lr

Disassembly of section .fini:

0001d5c8 <.fini>:
   1d5c8:	push	{r3, lr}
   1d5cc:	pop	{r3, pc}
