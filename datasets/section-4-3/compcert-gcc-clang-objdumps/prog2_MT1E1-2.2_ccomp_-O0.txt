
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

00010464 <.init>:
   10464:	push	{r3, lr}
   10468:	bl	10550 <abort@plt+0x3c>
   1046c:	pop	{r3, pc}

Disassembly of section .plt:

00010470 <strcmp@plt-0x14>:
   10470:	push	{lr}		; (str lr, [sp, #-4]!)
   10474:	ldr	lr, [pc, #4]	; 10480 <strcmp@plt-0x4>
   10478:	add	lr, pc, lr
   1047c:	ldr	pc, [lr, #8]!
   10480:	andeq	r0, r1, r0, lsl #23

00010484 <strcmp@plt>:
   10484:	add	ip, pc, #0, 12
   10488:	add	ip, ip, #16, 20	; 0x10000
   1048c:	ldr	pc, [ip, #2944]!	; 0xb80

00010490 <fopen@plt>:
   10490:	add	ip, pc, #0, 12
   10494:	add	ip, ip, #16, 20	; 0x10000
   10498:	ldr	pc, [ip, #2936]!	; 0xb78

0001049c <free@plt>:
   1049c:	add	ip, pc, #0, 12
   104a0:	add	ip, ip, #16, 20	; 0x10000
   104a4:	ldr	pc, [ip, #2928]!	; 0xb70

000104a8 <realloc@plt>:
   104a8:	add	ip, pc, #0, 12
   104ac:	add	ip, ip, #16, 20	; 0x10000
   104b0:	ldr	pc, [ip, #2920]!	; 0xb68

000104b4 <strcpy@plt>:
   104b4:	add	ip, pc, #0, 12
   104b8:	add	ip, ip, #16, 20	; 0x10000
   104bc:	ldr	pc, [ip, #2912]!	; 0xb60

000104c0 <malloc@plt>:
   104c0:	add	ip, pc, #0, 12
   104c4:	add	ip, ip, #16, 20	; 0x10000
   104c8:	ldr	pc, [ip, #2904]!	; 0xb58

000104cc <__libc_start_main@plt>:
   104cc:	add	ip, pc, #0, 12
   104d0:	add	ip, ip, #16, 20	; 0x10000
   104d4:	ldr	pc, [ip, #2896]!	; 0xb50

000104d8 <__gmon_start__@plt>:
   104d8:	add	ip, pc, #0, 12
   104dc:	add	ip, ip, #16, 20	; 0x10000
   104e0:	ldr	pc, [ip, #2888]!	; 0xb48

000104e4 <strlen@plt>:
   104e4:	add	ip, pc, #0, 12
   104e8:	add	ip, ip, #16, 20	; 0x10000
   104ec:	ldr	pc, [ip, #2880]!	; 0xb40

000104f0 <fprintf@plt>:
   104f0:	add	ip, pc, #0, 12
   104f4:	add	ip, ip, #16, 20	; 0x10000
   104f8:	ldr	pc, [ip, #2872]!	; 0xb38

000104fc <fscanf@plt>:
   104fc:	add	ip, pc, #0, 12
   10500:	add	ip, ip, #16, 20	; 0x10000
   10504:	ldr	pc, [ip, #2864]!	; 0xb30

00010508 <fclose@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #16, 20	; 0x10000
   10510:	ldr	pc, [ip, #2856]!	; 0xb28

00010514 <abort@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #16, 20	; 0x10000
   1051c:	ldr	pc, [ip, #2848]!	; 0xb20

Disassembly of section .text:

00010520 <.text>:
   10520:	bleq	4c664 <stderr@@GLIBC_2.4+0x2b614>
   10524:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10528:	strbtmi	fp, [sl], -r2, lsl #24
   1052c:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10530:			; <UNDEFINED> instruction: 0xc010f8df
   10534:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10538:	blmi	12254c <stderr@@GLIBC_2.4+0x1014fc>
   1053c:	svc	0x00c6f7ff
   10540:	svc	0x00e8f7ff
   10544:	andeq	r0, r1, r1, asr r9
   10548:	andeq	r0, r1, r0, lsr r8
   1054c:	andeq	r0, r1, r1, lsl r9
   10550:	ldr	r3, [pc, #20]	; 1056c <abort@plt+0x58>
   10554:	ldr	r2, [pc, #20]	; 10570 <abort@plt+0x5c>
   10558:	add	r3, pc, r3
   1055c:	ldr	r2, [r3, r2]
   10560:	cmp	r2, #0
   10564:	bxeq	lr
   10568:	b	104d8 <__gmon_start__@plt>
   1056c:	andeq	r0, r1, r0, lsr #21
   10570:	andeq	r0, r0, r0, asr #32
   10574:	subeq	pc, ip, r1, asr #4
   10578:	andeq	pc, r2, r0, asr #5
   1057c:	movteq	pc, #49729	; 0xc241	; <UNPREDICTABLE>
   10580:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10584:	andle	r4, r5, r3, lsl #5
   10588:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   1058c:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10590:	ldrmi	fp, [r8, -r3, lsl #2]
   10594:	svclt	0x00004770
   10598:	subeq	pc, ip, r1, asr #4
   1059c:	andeq	pc, r2, r0, asr #5
   105a0:	cmpeq	ip, r1, asr #4	; <UNPREDICTABLE>
   105a4:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   105a8:	svceq	0x00d91a0b
   105ac:			; <UNDEFINED> instruction: 0x01a3eb01
   105b0:	andle	r1, r5, r9, asr #32
   105b4:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   105b8:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   105bc:	ldrmi	fp, [r8, -r3, lsl #2]
   105c0:	svclt	0x00004770
   105c4:	vqrshl.s8	d27, d0, d1
   105c8:	vmov.i32	q8, #262144	; 0x00040000
   105cc:	stmdavc	r3!, {r1, sl}
   105d0:			; <UNDEFINED> instruction: 0xf7ffb91b
   105d4:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   105d8:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   105dc:	svclt	0x0000e7dc
   105e0:	mov	ip, sp
   105e4:	sub	sp, sp, #72	; 0x48
   105e8:	str	ip, [sp]
   105ec:	str	lr, [sp, #4]
   105f0:	str	r4, [sp, #8]
   105f4:	str	r5, [sp, #12]
   105f8:	str	r6, [sp, #16]
   105fc:	str	r7, [sp, #20]
   10600:	str	r8, [sp, #24]
   10604:	mov	r7, r1
   10608:	mov	r4, r0
   1060c:	mov	r0, #20
   10610:	bl	104c0 <malloc@plt>
   10614:	mov	r6, r0
   10618:	cmp	r6, #0
   1061c:	bne	10628 <abort@plt+0x114>
   10620:	mov	r0, #0
   10624:	b	1080c <abort@plt+0x2f8>
   10628:	mov	r3, #0
   1062c:	str	r3, [r7]
   10630:	ldr	r1, [pc, #500]	; 1082c <abort@plt+0x318>
   10634:	add	r2, sp, #32
   10638:	mov	r0, r4
   1063c:	bl	104fc <fscanf@plt>
   10640:	cmp	r0, #1
   10644:	bne	1072c <abort@plt+0x218>
   10648:	add	r0, sp, #32
   1064c:	bl	104e4 <strlen@plt>
   10650:	add	r1, sp, #32
   10654:	mov	r3, #0
   10658:	strb	r3, [r1, r0]
   1065c:	mov	r8, #0
   10660:	mov	r5, #0
   10664:	ldr	r2, [r7]
   10668:	cmp	r5, r2
   1066c:	bge	106c0 <abort@plt+0x1ac>
   10670:	add	r0, sp, #32
   10674:	lsl	r2, r5, #4
   10678:	add	r1, r2, r5, lsl #2
   1067c:	add	r1, r6, r1
   10680:	bl	10484 <strcmp@plt>
   10684:	cmp	r0, #0
   10688:	bne	106b8 <abort@plt+0x1a4>
   1068c:	lsl	r3, r5, #4
   10690:	add	r2, r3, r5, lsl #2
   10694:	add	r0, r6, r2
   10698:	lsl	ip, r5, #4
   1069c:	add	r1, ip, r5, lsl #2
   106a0:	add	r1, r6, r1
   106a4:	ldr	r2, [r1, #16]
   106a8:	add	r1, r2, #1
   106ac:	str	r1, [r0, #16]
   106b0:	mov	r8, #1
   106b4:	b	106c0 <abort@plt+0x1ac>
   106b8:	add	r5, r5, #1
   106bc:	b	10664 <abort@plt+0x150>
   106c0:	cmp	r8, #0
   106c4:	bne	10630 <abort@plt+0x11c>
   106c8:	ldr	r1, [r7]
   106cc:	lsl	ip, r1, #4
   106d0:	add	r3, ip, r1, lsl #2
   106d4:	add	r1, r3, #20
   106d8:	mov	r0, r6
   106dc:	bl	104a8 <realloc@plt>
   106e0:	mov	r6, r0
   106e4:	cmp	r6, #0
   106e8:	bne	106f4 <abort@plt+0x1e0>
   106ec:	mov	r0, #0
   106f0:	b	1080c <abort@plt+0x2f8>
   106f4:	lsl	r3, r5, #4
   106f8:	add	r2, r3, r5, lsl #2
   106fc:	add	r0, r6, r2
   10700:	add	r1, sp, #32
   10704:	bl	104b4 <strcpy@plt>
   10708:	lsl	ip, r5, #4
   1070c:	add	r2, ip, r5, lsl #2
   10710:	add	ip, r6, r2
   10714:	mov	r2, #1
   10718:	str	r2, [ip, #16]
   1071c:	ldr	r2, [r7]
   10720:	add	ip, r2, #1
   10724:	str	ip, [r7]
   10728:	b	10630 <abort@plt+0x11c>
   1072c:	mov	r0, #1
   10730:	ldr	ip, [r7]
   10734:	cmp	r0, ip
   10738:	bge	10808 <abort@plt+0x2f4>
   1073c:	lsl	ip, r0, #4
   10740:	add	r1, ip, r0, lsl #2
   10744:	add	r1, r6, r1
   10748:	vldr	d7, [r1]
   1074c:	vstr	d7, [sp, #48]	; 0x30
   10750:	vldr	d7, [r1, #8]
   10754:	vstr	d7, [sp, #56]	; 0x38
   10758:	ldr	lr, [r1, #16]
   1075c:	str	lr, [sp, #64]	; 0x40
   10760:	mov	r1, r0
   10764:	cmp	r1, #0
   10768:	ble	10794 <abort@plt+0x280>
   1076c:	ldr	ip, [sp, #64]	; 0x40
   10770:	lsl	r3, r1, #4
   10774:	add	r2, r3, r1, lsl #2
   10778:	add	r3, r6, r2
   1077c:	sub	lr, r3, #4096	; 0x1000
   10780:	ldr	r2, [lr, #4092]	; 0xffc
   10784:	cmp	ip, r2
   10788:	movgt	r2, #1
   1078c:	movle	r2, #0
   10790:	b	10798 <abort@plt+0x284>
   10794:	mov	r2, #0
   10798:	cmp	r2, #0
   1079c:	beq	107dc <abort@plt+0x2c8>
   107a0:	lsl	r2, r1, #4
   107a4:	add	r2, r2, r1, lsl #2
   107a8:	add	r2, r6, r2
   107ac:	lsl	r3, r1, #4
   107b0:	add	r3, r3, r1, lsl #2
   107b4:	add	r3, r6, r3
   107b8:	sub	r3, r3, #20
   107bc:	vldr	d7, [r3]
   107c0:	vstr	d7, [r2]
   107c4:	vldr	d7, [r3, #8]
   107c8:	vstr	d7, [r2, #8]
   107cc:	ldr	lr, [r3, #16]
   107d0:	str	lr, [r2, #16]
   107d4:	sub	r1, r1, #1
   107d8:	b	10764 <abort@plt+0x250>
   107dc:	lsl	r2, r1, #4
   107e0:	add	r1, r2, r1, lsl #2
   107e4:	add	ip, r6, r1
   107e8:	vldr	d7, [sp, #48]	; 0x30
   107ec:	vstr	d7, [ip]
   107f0:	vldr	d7, [sp, #56]	; 0x38
   107f4:	vstr	d7, [ip, #8]
   107f8:	ldr	lr, [sp, #64]	; 0x40
   107fc:	str	lr, [ip, #16]
   10800:	add	r0, r0, #1
   10804:	b	10730 <abort@plt+0x21c>
   10808:	mov	r0, r6
   1080c:	ldr	r4, [sp, #8]
   10810:	ldr	r5, [sp, #12]
   10814:	ldr	r6, [sp, #16]
   10818:	ldr	r7, [sp, #20]
   1081c:	ldr	r8, [sp, #24]
   10820:	ldr	lr, [sp, #4]
   10824:	add	sp, sp, #72	; 0x48
   10828:	bx	lr
   1082c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10830:	mov	ip, sp
   10834:	sub	sp, sp, #32
   10838:	str	ip, [sp]
   1083c:	str	lr, [sp, #4]
   10840:	str	r4, [sp, #8]
   10844:	str	r5, [sp, #12]
   10848:	str	r6, [sp, #16]
   1084c:	ldr	r0, [pc, #184]	; 1090c <abort@plt+0x3f8>
   10850:	ldr	r1, [pc, #172]	; 10904 <abort@plt+0x3f0>
   10854:	bl	10490 <fopen@plt>
   10858:	mov	r6, r0
   1085c:	mov	r0, #0
   10860:	str	r0, [sp, #24]
   10864:	add	r1, sp, #24
   10868:	mov	r0, r6
   1086c:	bl	105e0 <abort@plt+0xcc>
   10870:	mov	r5, r0
   10874:	ldr	r1, [pc, #132]	; 10900 <abort@plt+0x3ec>
   10878:	ldr	r0, [r1]
   1087c:	ldr	r1, [pc, #132]	; 10908 <abort@plt+0x3f4>
   10880:	bl	104f0 <fprintf@plt>
   10884:	cmp	r5, #0
   10888:	beq	108d0 <abort@plt+0x3bc>
   1088c:	mov	r4, #0
   10890:	ldr	r1, [sp, #24]
   10894:	cmp	r4, r1
   10898:	bge	108d0 <abort@plt+0x3bc>
   1089c:	ldr	r0, [pc, #92]	; 10900 <abort@plt+0x3ec>
   108a0:	ldr	r0, [r0]
   108a4:	ldr	r1, [pc, #80]	; 108fc <abort@plt+0x3e8>
   108a8:	lsl	ip, r4, #4
   108ac:	add	r2, ip, r4, lsl #2
   108b0:	add	r2, r5, r2
   108b4:	lsl	ip, r4, #4
   108b8:	add	r3, ip, r4, lsl #2
   108bc:	add	r3, r5, r3
   108c0:	ldr	r3, [r3, #16]
   108c4:	bl	104f0 <fprintf@plt>
   108c8:	add	r4, r4, #1
   108cc:	b	10890 <abort@plt+0x37c>
   108d0:	mov	r0, r5
   108d4:	bl	1049c <free@plt>
   108d8:	mov	r0, r6
   108dc:	bl	10508 <fclose@plt>
   108e0:	mov	r0, #0
   108e4:	ldr	r4, [sp, #8]
   108e8:	ldr	r5, [sp, #12]
   108ec:	ldr	r6, [sp, #16]
   108f0:	ldr	lr, [sp, #4]
   108f4:	add	sp, sp, #32
   108f8:	bx	lr
   108fc:	strdeq	r0, [r1], -r5
   10900:	andeq	r1, r2, r0, asr r0
   10904:	strdeq	r0, [r1], -r3
   10908:	strdeq	r0, [r1], -lr
   1090c:	andeq	r0, r1, fp, lsl #20
   10910:	mvnsmi	lr, #737280	; 0xb4000
   10914:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   10918:	strmi	r4, [r8], ip, lsl #26
   1091c:			; <UNDEFINED> instruction: 0x4691447e
   10920:			; <UNDEFINED> instruction: 0xf7ff447d
   10924:	blne	1dcbfac <stderr@@GLIBC_2.4+0x1daaf5c>
   10928:	strhle	r1, [sl], -r6
   1092c:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10930:	svccc	0x0004f855
   10934:	strbmi	r4, [r1], -sl, asr #12
   10938:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   1093c:	adcmi	r4, r6, #152, 14	; 0x2600000
   10940:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10944:	svclt	0x000083f8
   10948:	strdeq	r0, [r1], -r4
   1094c:	andeq	r0, r1, ip, ror #11
   10950:	svclt	0x00004770

Disassembly of section .fini:

00010954 <.fini>:
   10954:	push	{r3, lr}
   10958:	pop	{r3, pc}
