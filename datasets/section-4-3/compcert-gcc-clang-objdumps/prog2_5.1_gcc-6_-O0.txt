
../compcert-repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <.init>:
   10a08:	push	{r3, lr}
   10a0c:	bl	10ae8 <_start@@Base+0x3c>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <calloc@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <calloc@plt-0x4>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r2, [r1], -ip

00010a28 <calloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <free@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <strcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <abort@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010aac <_start@@Base>:
   10aac:	mov	fp, #0
   10ab0:	mov	lr, #0
   10ab4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ab8:	mov	r2, sp
   10abc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ac4:	ldr	ip, [pc, #16]	; 10adc <_start@@Base+0x30>
   10ac8:	push	{ip}		; (str ip, [sp, #-4]!)
   10acc:	ldr	r0, [pc, #12]	; 10ae0 <_start@@Base+0x34>
   10ad0:	ldr	r3, [pc, #12]	; 10ae4 <_start@@Base+0x38>
   10ad4:	bl	10a70 <__libc_start_main@plt>
   10ad8:	bl	10aa0 <abort@plt>
   10adc:	andeq	r1, r1, r4, asr lr
   10ae0:	ldrdeq	r0, [r1], -r4
   10ae4:	strdeq	r1, [r1], -r4
   10ae8:	ldr	r3, [pc, #20]	; 10b04 <_start@@Base+0x58>
   10aec:	ldr	r2, [pc, #20]	; 10b08 <_start@@Base+0x5c>
   10af0:	add	r3, pc, r3
   10af4:	ldr	r2, [r3, r2]
   10af8:	cmp	r2, #0
   10afc:	bxeq	lr
   10b00:	b	10a7c <__gmon_start__@plt>
   10b04:	andeq	r2, r1, r8, lsl #10
   10b08:	andeq	r0, r0, r8, lsr r0
   10b0c:	ldr	r3, [pc, #28]	; 10b30 <_start@@Base+0x84>
   10b10:	ldr	r0, [pc, #28]	; 10b34 <_start@@Base+0x88>
   10b14:	sub	r3, r3, r0
   10b18:	cmp	r3, #6
   10b1c:	bxls	lr
   10b20:	ldr	r3, [pc, #16]	; 10b38 <_start@@Base+0x8c>
   10b24:	cmp	r3, #0
   10b28:	bxeq	lr
   10b2c:	bx	r3
   10b30:	andeq	r3, r2, r7, asr #32
   10b34:	andeq	r3, r2, r4, asr #32
   10b38:	andeq	r0, r0, r0
   10b3c:	ldr	r1, [pc, #36]	; 10b68 <_start@@Base+0xbc>
   10b40:	ldr	r0, [pc, #36]	; 10b6c <_start@@Base+0xc0>
   10b44:	sub	r1, r1, r0
   10b48:	asr	r1, r1, #2
   10b4c:	add	r1, r1, r1, lsr #31
   10b50:	asrs	r1, r1, #1
   10b54:	bxeq	lr
   10b58:	ldr	r3, [pc, #16]	; 10b70 <_start@@Base+0xc4>
   10b5c:	cmp	r3, #0
   10b60:	bxeq	lr
   10b64:	bx	r3
   10b68:	andeq	r3, r2, r4, asr #32
   10b6c:	andeq	r3, r2, r4, asr #32
   10b70:	andeq	r0, r0, r0
   10b74:	push	{r4, lr}
   10b78:	ldr	r4, [pc, #24]	; 10b98 <_start@@Base+0xec>
   10b7c:	ldrb	r3, [r4]
   10b80:	cmp	r3, #0
   10b84:	popne	{r4, pc}
   10b88:	bl	10b0c <_start@@Base+0x60>
   10b8c:	mov	r3, #1
   10b90:	strb	r3, [r4]
   10b94:	pop	{r4, pc}
   10b98:	andeq	r3, r2, r4, asr #32
   10b9c:	ldr	r0, [pc, #40]	; 10bcc <_start@@Base+0x120>
   10ba0:	ldr	r3, [r0]
   10ba4:	cmp	r3, #0
   10ba8:	bne	10bb0 <_start@@Base+0x104>
   10bac:	b	10b3c <_start@@Base+0x90>
   10bb0:	ldr	r3, [pc, #24]	; 10bd0 <_start@@Base+0x124>
   10bb4:	cmp	r3, #0
   10bb8:	beq	10bac <_start@@Base+0x100>
   10bbc:	push	{r4, lr}
   10bc0:	blx	r3
   10bc4:	pop	{r4, lr}
   10bc8:	b	10b3c <_start@@Base+0x90>
   10bcc:	andeq	r2, r2, r4, lsl pc
   10bd0:	andeq	r0, r0, r0

00010bd4 <main@@Base>:
   10bd4:	push	{fp, lr}
   10bd8:	add	fp, sp, #4
   10bdc:	sub	sp, sp, #64	; 0x40
   10be0:	mov	r1, #3
   10be4:	mov	r0, #4
   10be8:	bl	112cc <armazem_novo@@Base>
   10bec:	str	r0, [fp, #-12]
   10bf0:	ldr	r0, [pc, #1040]	; 11008 <main@@Base+0x434>
   10bf4:	bl	10a58 <puts@plt>
   10bf8:	vldr	s0, [pc, #984]	; 10fd8 <main@@Base+0x404>
   10bfc:	ldr	r0, [pc, #1032]	; 1100c <main@@Base+0x438>
   10c00:	bl	11600 <contentor_novo@@Base>
   10c04:	str	r0, [fp, #-16]
   10c08:	vldr	s0, [pc, #972]	; 10fdc <main@@Base+0x408>
   10c0c:	ldr	r0, [pc, #1020]	; 11010 <main@@Base+0x43c>
   10c10:	bl	11600 <contentor_novo@@Base>
   10c14:	str	r0, [fp, #-20]	; 0xffffffec
   10c18:	vldr	s0, [pc, #960]	; 10fe0 <main@@Base+0x40c>
   10c1c:	ldr	r0, [pc, #1008]	; 11014 <main@@Base+0x440>
   10c20:	bl	11600 <contentor_novo@@Base>
   10c24:	str	r0, [fp, #-24]	; 0xffffffe8
   10c28:	vldr	s0, [pc, #948]	; 10fe4 <main@@Base+0x410>
   10c2c:	ldr	r0, [pc, #996]	; 11018 <main@@Base+0x444>
   10c30:	bl	11600 <contentor_novo@@Base>
   10c34:	str	r0, [fp, #-28]	; 0xffffffe4
   10c38:	vldr	s0, [pc, #936]	; 10fe8 <main@@Base+0x414>
   10c3c:	ldr	r0, [pc, #984]	; 1101c <main@@Base+0x448>
   10c40:	bl	11600 <contentor_novo@@Base>
   10c44:	str	r0, [fp, #-32]	; 0xffffffe0
   10c48:	vldr	s0, [pc, #924]	; 10fec <main@@Base+0x418>
   10c4c:	ldr	r0, [pc, #972]	; 11020 <main@@Base+0x44c>
   10c50:	bl	11600 <contentor_novo@@Base>
   10c54:	str	r0, [fp, #-36]	; 0xffffffdc
   10c58:	vldr	s0, [pc, #912]	; 10ff0 <main@@Base+0x41c>
   10c5c:	ldr	r0, [pc, #960]	; 11024 <main@@Base+0x450>
   10c60:	bl	11600 <contentor_novo@@Base>
   10c64:	str	r0, [fp, #-40]	; 0xffffffd8
   10c68:	vldr	s0, [pc, #900]	; 10ff4 <main@@Base+0x420>
   10c6c:	ldr	r0, [pc, #948]	; 11028 <main@@Base+0x454>
   10c70:	bl	11600 <contentor_novo@@Base>
   10c74:	str	r0, [fp, #-44]	; 0xffffffd4
   10c78:	vldr	s0, [pc, #872]	; 10fe8 <main@@Base+0x414>
   10c7c:	ldr	r0, [pc, #936]	; 1102c <main@@Base+0x458>
   10c80:	bl	11600 <contentor_novo@@Base>
   10c84:	str	r0, [fp, #-48]	; 0xffffffd0
   10c88:	vldr	s0, [pc, #872]	; 10ff8 <main@@Base+0x424>
   10c8c:	ldr	r0, [pc, #924]	; 11030 <main@@Base+0x45c>
   10c90:	bl	11600 <contentor_novo@@Base>
   10c94:	str	r0, [fp, #-52]	; 0xffffffcc
   10c98:	vldr	s0, [pc, #860]	; 10ffc <main@@Base+0x428>
   10c9c:	ldr	r0, [pc, #912]	; 11034 <main@@Base+0x460>
   10ca0:	bl	11600 <contentor_novo@@Base>
   10ca4:	str	r0, [fp, #-56]	; 0xffffffc8
   10ca8:	vldr	s0, [pc, #848]	; 11000 <main@@Base+0x42c>
   10cac:	ldr	r0, [pc, #900]	; 11038 <main@@Base+0x464>
   10cb0:	bl	11600 <contentor_novo@@Base>
   10cb4:	str	r0, [fp, #-60]	; 0xffffffc4
   10cb8:	vldr	s0, [pc, #836]	; 11004 <main@@Base+0x430>
   10cbc:	ldr	r0, [pc, #888]	; 1103c <main@@Base+0x468>
   10cc0:	bl	11600 <contentor_novo@@Base>
   10cc4:	str	r0, [fp, #-64]	; 0xffffffc0
   10cc8:	ldr	r0, [pc, #880]	; 11040 <main@@Base+0x46c>
   10ccc:	bl	10a58 <puts@plt>
   10cd0:	ldr	r0, [fp, #-12]
   10cd4:	bl	110fc <imprimeArmazem@@Base>
   10cd8:	ldr	r0, [pc, #868]	; 11044 <main@@Base+0x470>
   10cdc:	bl	10a58 <puts@plt>
   10ce0:	ldr	r1, [fp, #-16]
   10ce4:	ldr	r0, [fp, #-12]
   10ce8:	bl	11408 <armazenar_contentor@@Base>
   10cec:	mov	r3, r0
   10cf0:	cmp	r3, #0
   10cf4:	beq	10d0c <main@@Base+0x138>
   10cf8:	ldr	r3, [fp, #-16]
   10cfc:	ldr	r3, [r3]
   10d00:	mov	r1, r3
   10d04:	ldr	r0, [pc, #828]	; 11048 <main@@Base+0x474>
   10d08:	bl	10a34 <printf@plt>
   10d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10d10:	ldr	r0, [fp, #-12]
   10d14:	bl	11408 <armazenar_contentor@@Base>
   10d18:	mov	r3, r0
   10d1c:	cmp	r3, #0
   10d20:	beq	10d38 <main@@Base+0x164>
   10d24:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d28:	ldr	r3, [r3]
   10d2c:	mov	r1, r3
   10d30:	ldr	r0, [pc, #784]	; 11048 <main@@Base+0x474>
   10d34:	bl	10a34 <printf@plt>
   10d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d3c:	ldr	r0, [fp, #-12]
   10d40:	bl	11408 <armazenar_contentor@@Base>
   10d44:	mov	r3, r0
   10d48:	cmp	r3, #0
   10d4c:	beq	10d64 <main@@Base+0x190>
   10d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d54:	ldr	r3, [r3]
   10d58:	mov	r1, r3
   10d5c:	ldr	r0, [pc, #740]	; 11048 <main@@Base+0x474>
   10d60:	bl	10a34 <printf@plt>
   10d64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10d68:	ldr	r0, [fp, #-12]
   10d6c:	bl	11408 <armazenar_contentor@@Base>
   10d70:	mov	r3, r0
   10d74:	cmp	r3, #0
   10d78:	beq	10d90 <main@@Base+0x1bc>
   10d7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d80:	ldr	r3, [r3]
   10d84:	mov	r1, r3
   10d88:	ldr	r0, [pc, #696]	; 11048 <main@@Base+0x474>
   10d8c:	bl	10a34 <printf@plt>
   10d90:	ldr	r0, [pc, #692]	; 1104c <main@@Base+0x478>
   10d94:	bl	10a58 <puts@plt>
   10d98:	ldr	r0, [fp, #-12]
   10d9c:	bl	110fc <imprimeArmazem@@Base>
   10da0:	ldr	r0, [pc, #680]	; 11050 <main@@Base+0x47c>
   10da4:	bl	10a58 <puts@plt>
   10da8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10dac:	ldr	r0, [fp, #-12]
   10db0:	bl	11408 <armazenar_contentor@@Base>
   10db4:	mov	r3, r0
   10db8:	cmp	r3, #0
   10dbc:	beq	10dd4 <main@@Base+0x200>
   10dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10dc4:	ldr	r3, [r3]
   10dc8:	mov	r1, r3
   10dcc:	ldr	r0, [pc, #628]	; 11048 <main@@Base+0x474>
   10dd0:	bl	10a34 <printf@plt>
   10dd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10dd8:	ldr	r0, [fp, #-12]
   10ddc:	bl	11408 <armazenar_contentor@@Base>
   10de0:	mov	r3, r0
   10de4:	cmp	r3, #0
   10de8:	beq	10e00 <main@@Base+0x22c>
   10dec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10df0:	ldr	r3, [r3]
   10df4:	mov	r1, r3
   10df8:	ldr	r0, [pc, #584]	; 11048 <main@@Base+0x474>
   10dfc:	bl	10a34 <printf@plt>
   10e00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10e04:	ldr	r0, [fp, #-12]
   10e08:	bl	11408 <armazenar_contentor@@Base>
   10e0c:	mov	r3, r0
   10e10:	cmp	r3, #0
   10e14:	beq	10e2c <main@@Base+0x258>
   10e18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e1c:	ldr	r3, [r3]
   10e20:	mov	r1, r3
   10e24:	ldr	r0, [pc, #540]	; 11048 <main@@Base+0x474>
   10e28:	bl	10a34 <printf@plt>
   10e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10e30:	ldr	r0, [fp, #-12]
   10e34:	bl	11408 <armazenar_contentor@@Base>
   10e38:	mov	r3, r0
   10e3c:	cmp	r3, #0
   10e40:	beq	10e58 <main@@Base+0x284>
   10e44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10e48:	ldr	r3, [r3]
   10e4c:	mov	r1, r3
   10e50:	ldr	r0, [pc, #496]	; 11048 <main@@Base+0x474>
   10e54:	bl	10a34 <printf@plt>
   10e58:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10e5c:	ldr	r0, [fp, #-12]
   10e60:	bl	11408 <armazenar_contentor@@Base>
   10e64:	mov	r3, r0
   10e68:	cmp	r3, #0
   10e6c:	beq	10e84 <main@@Base+0x2b0>
   10e70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10e74:	ldr	r3, [r3]
   10e78:	mov	r1, r3
   10e7c:	ldr	r0, [pc, #452]	; 11048 <main@@Base+0x474>
   10e80:	bl	10a34 <printf@plt>
   10e84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10e88:	ldr	r0, [fp, #-12]
   10e8c:	bl	11408 <armazenar_contentor@@Base>
   10e90:	mov	r3, r0
   10e94:	cmp	r3, #0
   10e98:	beq	10eb0 <main@@Base+0x2dc>
   10e9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10ea0:	ldr	r3, [r3]
   10ea4:	mov	r1, r3
   10ea8:	ldr	r0, [pc, #408]	; 11048 <main@@Base+0x474>
   10eac:	bl	10a34 <printf@plt>
   10eb0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10eb4:	ldr	r0, [fp, #-12]
   10eb8:	bl	11408 <armazenar_contentor@@Base>
   10ebc:	mov	r3, r0
   10ec0:	cmp	r3, #0
   10ec4:	beq	10edc <main@@Base+0x308>
   10ec8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10ecc:	ldr	r3, [r3]
   10ed0:	mov	r1, r3
   10ed4:	ldr	r0, [pc, #364]	; 11048 <main@@Base+0x474>
   10ed8:	bl	10a34 <printf@plt>
   10edc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10ee0:	ldr	r0, [fp, #-12]
   10ee4:	bl	11408 <armazenar_contentor@@Base>
   10ee8:	mov	r3, r0
   10eec:	cmp	r3, #0
   10ef0:	beq	10f08 <main@@Base+0x334>
   10ef4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10ef8:	ldr	r3, [r3]
   10efc:	mov	r1, r3
   10f00:	ldr	r0, [pc, #320]	; 11048 <main@@Base+0x474>
   10f04:	bl	10a34 <printf@plt>
   10f08:	ldr	r0, [pc, #324]	; 11054 <main@@Base+0x480>
   10f0c:	bl	10a58 <puts@plt>
   10f10:	ldr	r0, [fp, #-12]
   10f14:	bl	110fc <imprimeArmazem@@Base>
   10f18:	ldr	r0, [fp, #-12]
   10f1c:	bl	11378 <armazem_cheio@@Base>
   10f20:	mov	r3, r0
   10f24:	cmp	r3, #0
   10f28:	beq	10f38 <main@@Base+0x364>
   10f2c:	ldr	r0, [pc, #292]	; 11058 <main@@Base+0x484>
   10f30:	bl	10a58 <puts@plt>
   10f34:	b	10f40 <main@@Base+0x36c>
   10f38:	ldr	r0, [pc, #284]	; 1105c <main@@Base+0x488>
   10f3c:	bl	10a58 <puts@plt>
   10f40:	ldr	r1, [fp, #-64]	; 0xffffffc0
   10f44:	ldr	r0, [fp, #-12]
   10f48:	bl	11408 <armazenar_contentor@@Base>
   10f4c:	mov	r3, r0
   10f50:	cmp	r3, #0
   10f54:	beq	10f6c <main@@Base+0x398>
   10f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f5c:	ldr	r3, [r3]
   10f60:	mov	r1, r3
   10f64:	ldr	r0, [pc, #244]	; 11060 <main@@Base+0x48c>
   10f68:	bl	10a34 <printf@plt>
   10f6c:	ldr	r0, [pc, #240]	; 11064 <main@@Base+0x490>
   10f70:	bl	10a58 <puts@plt>
   10f74:	mov	r3, #0
   10f78:	str	r3, [fp, #-8]
   10f7c:	b	10fa8 <main@@Base+0x3d4>
   10f80:	ldr	r0, [fp, #-12]
   10f84:	bl	114f4 <expedir_contentor@@Base>
   10f88:	str	r0, [fp, #-68]	; 0xffffffbc
   10f8c:	ldr	r0, [pc, #220]	; 11070 <main@@Base+0x49c>
   10f90:	bl	10a58 <puts@plt>
   10f94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   10f98:	bl	116b0 <contentor_imprime@@Base>
   10f9c:	ldr	r3, [fp, #-8]
   10fa0:	add	r3, r3, #1
   10fa4:	str	r3, [fp, #-8]
   10fa8:	ldr	r3, [fp, #-8]
   10fac:	cmp	r3, #7
   10fb0:	ble	10f80 <main@@Base+0x3ac>
   10fb4:	ldr	r0, [pc, #172]	; 11068 <main@@Base+0x494>
   10fb8:	bl	10a58 <puts@plt>
   10fbc:	ldr	r0, [fp, #-12]
   10fc0:	bl	110fc <imprimeArmazem@@Base>
   10fc4:	ldr	r0, [pc, #160]	; 1106c <main@@Base+0x498>
   10fc8:	bl	10a58 <puts@plt>
   10fcc:	mov	r3, #0
   10fd0:	str	r3, [fp, #-8]
   10fd4:	b	110a8 <main@@Base+0x4d4>
   10fd8:	cmnmi	r6, #0
   10fdc:	cmnmi	sl, #0
   10fe0:	strmi	r8, [r4], #-0
   10fe4:	ldrtmi	r8, [r1], #-0
   10fe8:			; <UNDEFINED> instruction: 0x43be0000
   10fec:	bicmi	r0, r3, #0
   10ff0:	sbcmi	r0, r8, #0
   10ff4:	adcmi	r0, r0, #0
   10ff8:	tstmi	r6, #0
   10ffc:	orrmi	r0, r7, #0
   11000:	bicsmi	r0, r7, #0
   11004:	movtmi	r0, #32768	; 0x8000
   11008:	andeq	r1, r1, r4, ror #28
   1100c:	andeq	r1, r1, r8, ror lr
   11010:	andeq	r1, r1, r0, lsl #29
   11014:	andeq	r1, r1, r4, lsl #29
   11018:	andeq	r1, r1, ip, lsl #29
   1101c:	muleq	r1, r4, lr
   11020:	muleq	r1, ip, lr
   11024:	andeq	r1, r1, r4, lsr #29
   11028:			; <UNDEFINED> instruction: 0x00011eb0
   1102c:			; <UNDEFINED> instruction: 0x00011eb8
   11030:	andeq	r1, r1, r4, asr #29
   11034:	andeq	r1, r1, ip, asr #29
   11038:	ldrdeq	r1, [r1], -r8
   1103c:	andeq	r1, r1, r0, ror #29
   11040:	andeq	r1, r1, r8, ror #29
   11044:	andeq	r1, r1, r4, lsl #30
   11048:	andeq	r1, r1, r8, lsr #30
   1104c:	andeq	r1, r1, r0, asr pc
   11050:	andeq	r1, r1, ip, ror #30
   11054:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11058:	andeq	r1, r1, ip, lsr #31
   1105c:			; <UNDEFINED> instruction: 0x00011fbc
   11060:	andeq	r1, r1, r4, ror #31
   11064:	andeq	r2, r1, r0, lsr r0
   11068:	andeq	r2, r1, r4, ror r0
   1106c:	muleq	r1, r0, r0
   11070:	andeq	r2, r1, r4, asr r0
   11074:	strheq	r2, [r1], -r4
   11078:	ldrdeq	r2, [r1], -r0
   1107c:	andeq	r2, r1, r0, ror #1
   11080:	ldr	r0, [fp, #-12]
   11084:	bl	114f4 <expedir_contentor@@Base>
   11088:	str	r0, [fp, #-68]	; 0xffffffbc
   1108c:	ldr	r0, [pc, #-36]	; 11070 <main@@Base+0x49c>
   11090:	bl	10a58 <puts@plt>
   11094:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11098:	bl	116b0 <contentor_imprime@@Base>
   1109c:	ldr	r3, [fp, #-8]
   110a0:	add	r3, r3, #1
   110a4:	str	r3, [fp, #-8]
   110a8:	ldr	r3, [fp, #-8]
   110ac:	cmp	r3, #3
   110b0:	ble	11080 <main@@Base+0x4ac>
   110b4:	ldr	r0, [pc, #-72]	; 11074 <main@@Base+0x4a0>
   110b8:	bl	10a58 <puts@plt>
   110bc:	ldr	r0, [fp, #-12]
   110c0:	bl	110fc <imprimeArmazem@@Base>
   110c4:	ldr	r0, [fp, #-12]
   110c8:	bl	11328 <armazem_vazio@@Base>
   110cc:	mov	r3, r0
   110d0:	cmp	r3, #0
   110d4:	beq	110e4 <main@@Base+0x510>
   110d8:	ldr	r0, [pc, #-104]	; 11078 <main@@Base+0x4a4>
   110dc:	bl	10a58 <puts@plt>
   110e0:	b	110ec <main@@Base+0x518>
   110e4:	ldr	r0, [pc, #-112]	; 1107c <main@@Base+0x4a8>
   110e8:	bl	10a58 <puts@plt>
   110ec:	mov	r3, #0
   110f0:	mov	r0, r3
   110f4:	sub	sp, fp, #4
   110f8:	pop	{fp, pc}

000110fc <imprimeArmazem@@Base>:
   110fc:	push	{fp, lr}
   11100:	add	fp, sp, #4
   11104:	sub	sp, sp, #32
   11108:	str	r0, [fp, #-32]	; 0xffffffe0
   1110c:	mov	r3, #0
   11110:	str	r3, [fp, #-20]	; 0xffffffec
   11114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11118:	cmp	r3, #0
   1111c:	beq	112a8 <imprimeArmazem@@Base+0x1ac>
   11120:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11124:	ldr	r3, [r3, #8]
   11128:	cmp	r3, #0
   1112c:	beq	112a8 <imprimeArmazem@@Base+0x1ac>
   11130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11134:	ldr	r3, [r3, #8]
   11138:	ldr	r3, [r3, #4]
   1113c:	mov	r1, #4
   11140:	mov	r0, r3
   11144:	bl	10a28 <calloc@plt>
   11148:	mov	r3, r0
   1114c:	str	r3, [fp, #-24]	; 0xffffffe8
   11150:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11154:	ldr	r3, [r3, #8]
   11158:	ldr	r3, [r3, #4]
   1115c:	str	r3, [fp, #-28]	; 0xffffffe4
   11160:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11164:	ldr	r3, [r3, #8]
   11168:	ldr	r3, [r3]
   1116c:	str	r3, [fp, #-16]
   11170:	mov	r3, #0
   11174:	str	r3, [fp, #-8]
   11178:	b	111b4 <imprimeArmazem@@Base+0xb8>
   1117c:	ldr	r3, [fp, #-8]
   11180:	lsl	r3, r3, #2
   11184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11188:	add	r3, r2, r3
   1118c:	ldr	r2, [fp, #-16]
   11190:	ldr	r2, [r2]
   11194:	ldr	r2, [r2, #4]
   11198:	str	r2, [r3]
   1119c:	ldr	r3, [fp, #-16]
   111a0:	ldr	r3, [r3, #4]
   111a4:	str	r3, [fp, #-16]
   111a8:	ldr	r3, [fp, #-8]
   111ac:	add	r3, r3, #1
   111b0:	str	r3, [fp, #-8]
   111b4:	ldr	r3, [fp, #-16]
   111b8:	cmp	r3, #0
   111bc:	bne	1117c <imprimeArmazem@@Base+0x80>
   111c0:	mov	r0, #10
   111c4:	bl	10a94 <putchar@plt>
   111c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111cc:	ldr	r3, [r3, #4]
   111d0:	str	r3, [fp, #-12]
   111d4:	b	11250 <imprimeArmazem@@Base+0x154>
   111d8:	ldr	r0, [pc, #212]	; 112b4 <imprimeArmazem@@Base+0x1b8>
   111dc:	bl	10a34 <printf@plt>
   111e0:	mov	r3, #0
   111e4:	str	r3, [fp, #-8]
   111e8:	b	1122c <imprimeArmazem@@Base+0x130>
   111ec:	ldr	r3, [fp, #-8]
   111f0:	lsl	r3, r3, #2
   111f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   111f8:	add	r3, r2, r3
   111fc:	ldr	r2, [r3]
   11200:	ldr	r3, [fp, #-12]
   11204:	cmp	r2, r3
   11208:	blt	11218 <imprimeArmazem@@Base+0x11c>
   1120c:	ldr	r0, [pc, #164]	; 112b8 <imprimeArmazem@@Base+0x1bc>
   11210:	bl	10a34 <printf@plt>
   11214:	b	11220 <imprimeArmazem@@Base+0x124>
   11218:	ldr	r0, [pc, #156]	; 112bc <imprimeArmazem@@Base+0x1c0>
   1121c:	bl	10a34 <printf@plt>
   11220:	ldr	r3, [fp, #-8]
   11224:	add	r3, r3, #1
   11228:	str	r3, [fp, #-8]
   1122c:	ldr	r2, [fp, #-8]
   11230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11234:	cmp	r2, r3
   11238:	blt	111ec <imprimeArmazem@@Base+0xf0>
   1123c:	mov	r0, #10
   11240:	bl	10a94 <putchar@plt>
   11244:	ldr	r3, [fp, #-12]
   11248:	sub	r3, r3, #1
   1124c:	str	r3, [fp, #-12]
   11250:	ldr	r3, [fp, #-12]
   11254:	cmp	r3, #0
   11258:	bgt	111d8 <imprimeArmazem@@Base+0xdc>
   1125c:	ldr	r0, [pc, #92]	; 112c0 <imprimeArmazem@@Base+0x1c4>
   11260:	bl	10a34 <printf@plt>
   11264:	mov	r3, #0
   11268:	str	r3, [fp, #-8]
   1126c:	b	11284 <imprimeArmazem@@Base+0x188>
   11270:	ldr	r0, [pc, #76]	; 112c4 <imprimeArmazem@@Base+0x1c8>
   11274:	bl	10a34 <printf@plt>
   11278:	ldr	r3, [fp, #-8]
   1127c:	add	r3, r3, #1
   11280:	str	r3, [fp, #-8]
   11284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11288:	ldr	r2, [r3]
   1128c:	ldr	r3, [fp, #-8]
   11290:	cmp	r2, r3
   11294:	bgt	11270 <imprimeArmazem@@Base+0x174>
   11298:	ldr	r0, [pc, #40]	; 112c8 <imprimeArmazem@@Base+0x1cc>
   1129c:	bl	10a58 <puts@plt>
   112a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112a4:	bl	10a40 <free@plt>
   112a8:	nop			; (mov r0, r0)
   112ac:	sub	sp, fp, #4
   112b0:	pop	{fp, pc}
   112b4:	andeq	r2, r1, r8, lsl #2
   112b8:	andeq	r2, r1, ip, lsl #2
   112bc:	andeq	r2, r1, r4, lsl r1
   112c0:	andeq	r2, r1, ip, lsl r1
   112c4:	andeq	r2, r1, r0, lsr #2
   112c8:	andeq	r2, r1, r8, lsr #2

000112cc <armazem_novo@@Base>:
   112cc:	push	{fp, lr}
   112d0:	add	fp, sp, #4
   112d4:	sub	sp, sp, #16
   112d8:	str	r0, [fp, #-16]
   112dc:	str	r1, [fp, #-20]	; 0xffffffec
   112e0:	mov	r0, #12
   112e4:	bl	10a64 <malloc@plt>
   112e8:	mov	r3, r0
   112ec:	str	r3, [fp, #-8]
   112f0:	ldr	r3, [fp, #-8]
   112f4:	ldr	r2, [fp, #-16]
   112f8:	str	r2, [r3]
   112fc:	ldr	r3, [fp, #-8]
   11300:	ldr	r2, [fp, #-20]	; 0xffffffec
   11304:	str	r2, [r3, #4]
   11308:	bl	11788 <fila_nova@@Base>
   1130c:	mov	r2, r0
   11310:	ldr	r3, [fp, #-8]
   11314:	str	r2, [r3, #8]
   11318:	ldr	r3, [fp, #-8]
   1131c:	mov	r0, r3
   11320:	sub	sp, fp, #4
   11324:	pop	{fp, pc}

00011328 <armazem_vazio@@Base>:
   11328:	push	{fp, lr}
   1132c:	add	fp, sp, #4
   11330:	sub	sp, sp, #8
   11334:	str	r0, [fp, #-8]
   11338:	ldr	r3, [fp, #-8]
   1133c:	cmp	r3, #0
   11340:	beq	11360 <armazem_vazio@@Base+0x38>
   11344:	ldr	r3, [fp, #-8]
   11348:	ldr	r3, [r3, #8]
   1134c:	mov	r0, r3
   11350:	bl	11864 <fila_tamanho@@Base>
   11354:	mov	r3, r0
   11358:	cmp	r3, #0
   1135c:	bne	11368 <armazem_vazio@@Base+0x40>
   11360:	mov	r3, #1
   11364:	b	1136c <armazem_vazio@@Base+0x44>
   11368:	mov	r3, #0
   1136c:	mov	r0, r3
   11370:	sub	sp, fp, #4
   11374:	pop	{fp, pc}

00011378 <armazem_cheio@@Base>:
   11378:	push	{fp, lr}
   1137c:	add	fp, sp, #4
   11380:	sub	sp, sp, #8
   11384:	str	r0, [fp, #-8]
   11388:	ldr	r0, [fp, #-8]
   1138c:	bl	11328 <armazem_vazio@@Base>
   11390:	mov	r3, r0
   11394:	cmp	r3, #0
   11398:	beq	113a4 <armazem_cheio@@Base+0x2c>
   1139c:	mov	r3, #0
   113a0:	b	113fc <armazem_cheio@@Base+0x84>
   113a4:	ldr	r3, [fp, #-8]
   113a8:	ldr	r3, [r3, #8]
   113ac:	mov	r0, r3
   113b0:	bl	11864 <fila_tamanho@@Base>
   113b4:	mov	r2, r0
   113b8:	ldr	r3, [fp, #-8]
   113bc:	ldr	r3, [r3]
   113c0:	cmp	r2, r3
   113c4:	bne	113f8 <armazem_cheio@@Base+0x80>
   113c8:	ldr	r3, [fp, #-8]
   113cc:	ldr	r3, [r3, #8]
   113d0:	mov	r0, r3
   113d4:	bl	118f8 <fila_back@@Base>
   113d8:	mov	r3, r0
   113dc:	ldr	r2, [r3, #4]
   113e0:	ldr	r3, [fp, #-8]
   113e4:	ldr	r3, [r3, #4]
   113e8:	cmp	r2, r3
   113ec:	bne	113f8 <armazem_cheio@@Base+0x80>
   113f0:	mov	r3, #1
   113f4:	b	113fc <armazem_cheio@@Base+0x84>
   113f8:	mov	r3, #0
   113fc:	mov	r0, r3
   11400:	sub	sp, fp, #4
   11404:	pop	{fp, pc}

00011408 <armazenar_contentor@@Base>:
   11408:	push	{r4, fp, lr}
   1140c:	add	fp, sp, #8
   11410:	sub	sp, sp, #20
   11414:	str	r0, [fp, #-24]	; 0xffffffe8
   11418:	str	r1, [fp, #-28]	; 0xffffffe4
   1141c:	bl	11b58 <pilha_nova@@Base>
   11420:	str	r0, [fp, #-16]
   11424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11428:	cmp	r3, #0
   1142c:	beq	11450 <armazenar_contentor@@Base+0x48>
   11430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11434:	cmp	r3, #0
   11438:	beq	11450 <armazenar_contentor@@Base+0x48>
   1143c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11440:	bl	11378 <armazem_cheio@@Base>
   11444:	mov	r3, r0
   11448:	cmp	r3, #0
   1144c:	beq	11458 <armazenar_contentor@@Base+0x50>
   11450:	mov	r3, #0
   11454:	b	114e8 <armazenar_contentor@@Base+0xe0>
   11458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1145c:	bl	11328 <armazem_vazio@@Base>
   11460:	mov	r3, r0
   11464:	cmp	r3, #0
   11468:	beq	11488 <armazenar_contentor@@Base+0x80>
   1146c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11470:	ldr	r4, [r3, #8]
   11474:	bl	11b58 <pilha_nova@@Base>
   11478:	mov	r3, r0
   1147c:	mov	r1, r3
   11480:	mov	r0, r4
   11484:	bl	11970 <fila_push@@Base>
   11488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1148c:	ldr	r3, [r3, #8]
   11490:	mov	r0, r3
   11494:	bl	118f8 <fila_back@@Base>
   11498:	mov	r3, r0
   1149c:	ldr	r2, [r3, #4]
   114a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114a4:	ldr	r3, [r3, #4]
   114a8:	cmp	r2, r3
   114ac:	bne	114c4 <armazenar_contentor@@Base+0xbc>
   114b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b4:	ldr	r3, [r3, #8]
   114b8:	ldr	r1, [fp, #-16]
   114bc:	mov	r0, r3
   114c0:	bl	11970 <fila_push@@Base>
   114c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114c8:	ldr	r3, [r3, #8]
   114cc:	mov	r0, r3
   114d0:	bl	118f8 <fila_back@@Base>
   114d4:	mov	r3, r0
   114d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114dc:	mov	r0, r3
   114e0:	bl	11cc8 <pilha_push@@Base>
   114e4:	mov	r3, #1
   114e8:	mov	r0, r3
   114ec:	sub	sp, fp, #8
   114f0:	pop	{r4, fp, pc}

000114f4 <expedir_contentor@@Base>:
   114f4:	push	{r4, fp, lr}
   114f8:	add	fp, sp, #8
   114fc:	sub	sp, sp, #20
   11500:	str	r0, [fp, #-24]	; 0xffffffe8
   11504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11508:	bl	11328 <armazem_vazio@@Base>
   1150c:	mov	r3, r0
   11510:	cmp	r3, #0
   11514:	bne	11540 <expedir_contentor@@Base+0x4c>
   11518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1151c:	ldr	r3, [r3, #8]
   11520:	mov	r0, r3
   11524:	bl	118a0 <fila_front@@Base>
   11528:	mov	r3, r0
   1152c:	mov	r0, r3
   11530:	bl	11c70 <pilha_top@@Base>
   11534:	mov	r3, r0
   11538:	cmp	r3, #0
   1153c:	bne	11548 <expedir_contentor@@Base+0x54>
   11540:	mov	r3, #0
   11544:	b	115f4 <expedir_contentor@@Base+0x100>
   11548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1154c:	ldr	r3, [r3, #8]
   11550:	mov	r0, r3
   11554:	bl	118a0 <fila_front@@Base>
   11558:	mov	r3, r0
   1155c:	mov	r0, r3
   11560:	bl	11c70 <pilha_top@@Base>
   11564:	mov	r3, r0
   11568:	ldr	r4, [r3]
   1156c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11570:	ldr	r3, [r3, #8]
   11574:	mov	r0, r3
   11578:	bl	118a0 <fila_front@@Base>
   1157c:	mov	r3, r0
   11580:	mov	r0, r3
   11584:	bl	11c70 <pilha_top@@Base>
   11588:	mov	r3, r0
   1158c:	vldr	s15, [r3, #4]
   11590:	vmov.f32	s0, s15
   11594:	mov	r0, r4
   11598:	bl	11600 <contentor_novo@@Base>
   1159c:	str	r0, [fp, #-16]
   115a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115a4:	ldr	r3, [r3, #8]
   115a8:	mov	r0, r3
   115ac:	bl	118a0 <fila_front@@Base>
   115b0:	mov	r3, r0
   115b4:	ldr	r3, [r3, #4]
   115b8:	cmp	r3, #1
   115bc:	bgt	115d4 <expedir_contentor@@Base+0xe0>
   115c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115c4:	ldr	r3, [r3, #8]
   115c8:	mov	r0, r3
   115cc:	bl	11a34 <fila_pop@@Base>
   115d0:	b	115f0 <expedir_contentor@@Base+0xfc>
   115d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115d8:	ldr	r3, [r3, #8]
   115dc:	mov	r0, r3
   115e0:	bl	118a0 <fila_front@@Base>
   115e4:	mov	r3, r0
   115e8:	mov	r0, r3
   115ec:	bl	11d70 <pilha_pop@@Base>
   115f0:	ldr	r3, [fp, #-16]
   115f4:	mov	r0, r3
   115f8:	sub	sp, fp, #8
   115fc:	pop	{r4, fp, pc}

00011600 <contentor_novo@@Base>:
   11600:	push	{fp, lr}
   11604:	add	fp, sp, #4
   11608:	sub	sp, sp, #16
   1160c:	str	r0, [fp, #-16]
   11610:	vstr	s0, [fp, #-20]	; 0xffffffec
   11614:	mov	r0, #8
   11618:	bl	10a64 <malloc@plt>
   1161c:	mov	r3, r0
   11620:	str	r3, [fp, #-8]
   11624:	ldr	r0, [fp, #-16]
   11628:	bl	10a88 <strlen@plt>
   1162c:	mov	r3, r0
   11630:	add	r3, r3, #1
   11634:	mov	r0, r3
   11638:	bl	10a64 <malloc@plt>
   1163c:	mov	r3, r0
   11640:	mov	r2, r3
   11644:	ldr	r3, [fp, #-8]
   11648:	str	r2, [r3]
   1164c:	ldr	r3, [fp, #-8]
   11650:	ldr	r3, [r3]
   11654:	ldr	r1, [fp, #-16]
   11658:	mov	r0, r3
   1165c:	bl	10a4c <strcpy@plt>
   11660:	ldr	r3, [fp, #-8]
   11664:	ldr	r2, [fp, #-20]	; 0xffffffec
   11668:	str	r2, [r3, #4]
   1166c:	ldr	r3, [fp, #-8]
   11670:	mov	r0, r3
   11674:	sub	sp, fp, #4
   11678:	pop	{fp, pc}

0001167c <contentor_apaga@@Base>:
   1167c:	push	{fp, lr}
   11680:	add	fp, sp, #4
   11684:	sub	sp, sp, #8
   11688:	str	r0, [fp, #-8]
   1168c:	ldr	r3, [fp, #-8]
   11690:	ldr	r3, [r3]
   11694:	mov	r0, r3
   11698:	bl	10a40 <free@plt>
   1169c:	ldr	r0, [fp, #-8]
   116a0:	bl	10a40 <free@plt>
   116a4:	nop			; (mov r0, r0)
   116a8:	sub	sp, fp, #4
   116ac:	pop	{fp, pc}

000116b0 <contentor_imprime@@Base>:
   116b0:	push	{fp, lr}
   116b4:	add	fp, sp, #4
   116b8:	sub	sp, sp, #8
   116bc:	str	r0, [fp, #-8]
   116c0:	ldr	r3, [fp, #-8]
   116c4:	cmp	r3, #0
   116c8:	bne	116d8 <contentor_imprime@@Base+0x28>
   116cc:	ldr	r0, [pc, #48]	; 11704 <contentor_imprime@@Base+0x54>
   116d0:	bl	10a58 <puts@plt>
   116d4:	b	116f8 <contentor_imprime@@Base+0x48>
   116d8:	ldr	r3, [fp, #-8]
   116dc:	ldr	r1, [r3]
   116e0:	ldr	r3, [fp, #-8]
   116e4:	vldr	s15, [r3, #4]
   116e8:	vcvt.f64.f32	d7, s15
   116ec:	vmov	r2, r3, d7
   116f0:	ldr	r0, [pc, #16]	; 11708 <contentor_imprime@@Base+0x58>
   116f4:	bl	10a34 <printf@plt>
   116f8:	nop			; (mov r0, r0)
   116fc:	sub	sp, fp, #4
   11700:	pop	{fp, pc}
   11704:	andeq	r2, r1, ip, lsr #2
   11708:	andeq	r2, r1, ip, lsr r1

0001170c <fila_novo_elemento@@Base>:
   1170c:	push	{fp, lr}
   11710:	add	fp, sp, #4
   11714:	sub	sp, sp, #16
   11718:	str	r0, [fp, #-16]
   1171c:	mov	r0, #8
   11720:	bl	10a64 <malloc@plt>
   11724:	mov	r3, r0
   11728:	str	r3, [fp, #-8]
   1172c:	ldr	r3, [fp, #-8]
   11730:	cmp	r3, #0
   11734:	bne	11740 <fila_novo_elemento@@Base+0x34>
   11738:	mov	r3, #0
   1173c:	b	1177c <fila_novo_elemento@@Base+0x70>
   11740:	ldr	r3, [fp, #-8]
   11744:	ldr	r2, [fp, #-16]
   11748:	str	r2, [r3]
   1174c:	ldr	r3, [fp, #-8]
   11750:	ldr	r3, [r3]
   11754:	cmp	r3, #0
   11758:	bne	1176c <fila_novo_elemento@@Base+0x60>
   1175c:	ldr	r0, [fp, #-8]
   11760:	bl	10a40 <free@plt>
   11764:	mov	r3, #0
   11768:	b	1177c <fila_novo_elemento@@Base+0x70>
   1176c:	ldr	r3, [fp, #-8]
   11770:	mov	r2, #0
   11774:	str	r2, [r3, #4]
   11778:	ldr	r3, [fp, #-8]
   1177c:	mov	r0, r3
   11780:	sub	sp, fp, #4
   11784:	pop	{fp, pc}

00011788 <fila_nova@@Base>:
   11788:	push	{fp, lr}
   1178c:	add	fp, sp, #4
   11790:	sub	sp, sp, #8
   11794:	mov	r0, #8
   11798:	bl	10a64 <malloc@plt>
   1179c:	mov	r3, r0
   117a0:	str	r3, [fp, #-8]
   117a4:	ldr	r3, [fp, #-8]
   117a8:	cmp	r3, #0
   117ac:	bne	117b8 <fila_nova@@Base+0x30>
   117b0:	mov	r3, #0
   117b4:	b	117d4 <fila_nova@@Base+0x4c>
   117b8:	ldr	r3, [fp, #-8]
   117bc:	mov	r2, #0
   117c0:	str	r2, [r3]
   117c4:	ldr	r3, [fp, #-8]
   117c8:	mov	r2, #0
   117cc:	str	r2, [r3, #4]
   117d0:	ldr	r3, [fp, #-8]
   117d4:	mov	r0, r3
   117d8:	sub	sp, fp, #4
   117dc:	pop	{fp, pc}

000117e0 <fila_apaga@@Base>:
   117e0:	push	{fp, lr}
   117e4:	add	fp, sp, #4
   117e8:	sub	sp, sp, #16
   117ec:	str	r0, [fp, #-16]
   117f0:	ldr	r3, [fp, #-16]
   117f4:	cmp	r3, #0
   117f8:	beq	11858 <fila_apaga@@Base+0x78>
   117fc:	b	11838 <fila_apaga@@Base+0x58>
   11800:	ldr	r3, [fp, #-16]
   11804:	ldr	r3, [r3]
   11808:	str	r3, [fp, #-8]
   1180c:	ldr	r3, [fp, #-16]
   11810:	ldr	r3, [r3]
   11814:	ldr	r2, [r3, #4]
   11818:	ldr	r3, [fp, #-16]
   1181c:	str	r2, [r3]
   11820:	ldr	r3, [fp, #-8]
   11824:	ldr	r3, [r3]
   11828:	mov	r0, r3
   1182c:	bl	11bb0 <pilha_apaga@@Base>
   11830:	ldr	r0, [fp, #-8]
   11834:	bl	10a40 <free@plt>
   11838:	ldr	r3, [fp, #-16]
   1183c:	ldr	r3, [r3]
   11840:	cmp	r3, #0
   11844:	bne	11800 <fila_apaga@@Base+0x20>
   11848:	ldr	r0, [fp, #-16]
   1184c:	bl	10a40 <free@plt>
   11850:	nop			; (mov r0, r0)
   11854:	b	1185c <fila_apaga@@Base+0x7c>
   11858:	nop			; (mov r0, r0)
   1185c:	sub	sp, fp, #4
   11860:	pop	{fp, pc}

00011864 <fila_tamanho@@Base>:
   11864:	push	{fp}		; (str fp, [sp, #-4]!)
   11868:	add	fp, sp, #0
   1186c:	sub	sp, sp, #12
   11870:	str	r0, [fp, #-8]
   11874:	ldr	r3, [fp, #-8]
   11878:	cmp	r3, #0
   1187c:	bne	11888 <fila_tamanho@@Base+0x24>
   11880:	mvn	r3, #0
   11884:	b	11890 <fila_tamanho@@Base+0x2c>
   11888:	ldr	r3, [fp, #-8]
   1188c:	ldr	r3, [r3, #4]
   11890:	mov	r0, r3
   11894:	add	sp, fp, #0
   11898:	pop	{fp}		; (ldr fp, [sp], #4)
   1189c:	bx	lr

000118a0 <fila_front@@Base>:
   118a0:	push	{fp}		; (str fp, [sp, #-4]!)
   118a4:	add	fp, sp, #0
   118a8:	sub	sp, sp, #20
   118ac:	str	r0, [fp, #-16]
   118b0:	ldr	r3, [fp, #-16]
   118b4:	cmp	r3, #0
   118b8:	beq	118cc <fila_front@@Base+0x2c>
   118bc:	ldr	r3, [fp, #-16]
   118c0:	ldr	r3, [r3, #4]
   118c4:	cmp	r3, #0
   118c8:	bne	118d4 <fila_front@@Base+0x34>
   118cc:	mov	r3, #0
   118d0:	b	118e8 <fila_front@@Base+0x48>
   118d4:	ldr	r3, [fp, #-16]
   118d8:	ldr	r3, [r3]
   118dc:	str	r3, [fp, #-8]
   118e0:	ldr	r3, [fp, #-8]
   118e4:	ldr	r3, [r3]
   118e8:	mov	r0, r3
   118ec:	add	sp, fp, #0
   118f0:	pop	{fp}		; (ldr fp, [sp], #4)
   118f4:	bx	lr

000118f8 <fila_back@@Base>:
   118f8:	push	{fp}		; (str fp, [sp, #-4]!)
   118fc:	add	fp, sp, #0
   11900:	sub	sp, sp, #20
   11904:	str	r0, [fp, #-16]
   11908:	ldr	r3, [fp, #-16]
   1190c:	cmp	r3, #0
   11910:	beq	11924 <fila_back@@Base+0x2c>
   11914:	ldr	r3, [fp, #-16]
   11918:	ldr	r3, [r3, #4]
   1191c:	cmp	r3, #0
   11920:	bne	1192c <fila_back@@Base+0x34>
   11924:	mov	r3, #0
   11928:	b	11960 <fila_back@@Base+0x68>
   1192c:	ldr	r3, [fp, #-16]
   11930:	ldr	r3, [r3]
   11934:	str	r3, [fp, #-8]
   11938:	b	11948 <fila_back@@Base+0x50>
   1193c:	ldr	r3, [fp, #-8]
   11940:	ldr	r3, [r3, #4]
   11944:	str	r3, [fp, #-8]
   11948:	ldr	r3, [fp, #-8]
   1194c:	ldr	r3, [r3, #4]
   11950:	cmp	r3, #0
   11954:	bne	1193c <fila_back@@Base+0x44>
   11958:	ldr	r3, [fp, #-8]
   1195c:	ldr	r3, [r3]
   11960:	mov	r0, r3
   11964:	add	sp, fp, #0
   11968:	pop	{fp}		; (ldr fp, [sp], #4)
   1196c:	bx	lr

00011970 <fila_push@@Base>:
   11970:	push	{fp, lr}
   11974:	add	fp, sp, #4
   11978:	sub	sp, sp, #24
   1197c:	str	r0, [fp, #-24]	; 0xffffffe8
   11980:	str	r1, [fp, #-28]	; 0xffffffe4
   11984:	mov	r3, #0
   11988:	str	r3, [fp, #-12]
   1198c:	mov	r3, #0
   11990:	str	r3, [fp, #-16]
   11994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11998:	cmp	r3, #0
   1199c:	beq	11a20 <fila_push@@Base+0xb0>
   119a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119a4:	ldr	r3, [r3]
   119a8:	str	r3, [fp, #-8]
   119ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119b0:	bl	1170c <fila_novo_elemento@@Base>
   119b4:	str	r0, [fp, #-16]
   119b8:	ldr	r3, [fp, #-16]
   119bc:	cmp	r3, #0
   119c0:	beq	11a28 <fila_push@@Base+0xb8>
   119c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119c8:	ldr	r3, [r3, #4]
   119cc:	add	r2, r3, #1
   119d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119d4:	str	r2, [r3, #4]
   119d8:	ldr	r3, [fp, #-8]
   119dc:	cmp	r3, #0
   119e0:	bne	11a00 <fila_push@@Base+0x90>
   119e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119e8:	ldr	r2, [fp, #-16]
   119ec:	str	r2, [r3]
   119f0:	b	11a2c <fila_push@@Base+0xbc>
   119f4:	ldr	r3, [fp, #-8]
   119f8:	ldr	r3, [r3, #4]
   119fc:	str	r3, [fp, #-8]
   11a00:	ldr	r3, [fp, #-8]
   11a04:	ldr	r3, [r3, #4]
   11a08:	cmp	r3, #0
   11a0c:	bne	119f4 <fila_push@@Base+0x84>
   11a10:	ldr	r3, [fp, #-8]
   11a14:	ldr	r2, [fp, #-16]
   11a18:	str	r2, [r3, #4]
   11a1c:	b	11a2c <fila_push@@Base+0xbc>
   11a20:	nop			; (mov r0, r0)
   11a24:	b	11a2c <fila_push@@Base+0xbc>
   11a28:	nop			; (mov r0, r0)
   11a2c:	sub	sp, fp, #4
   11a30:	pop	{fp, pc}

00011a34 <fila_pop@@Base>:
   11a34:	push	{fp, lr}
   11a38:	add	fp, sp, #4
   11a3c:	sub	sp, sp, #16
   11a40:	str	r0, [fp, #-16]
   11a44:	mov	r3, #0
   11a48:	str	r3, [fp, #-8]
   11a4c:	ldr	r3, [fp, #-16]
   11a50:	cmp	r3, #0
   11a54:	beq	11ab4 <fila_pop@@Base+0x80>
   11a58:	ldr	r3, [fp, #-16]
   11a5c:	ldr	r3, [r3, #4]
   11a60:	cmp	r3, #0
   11a64:	beq	11ab4 <fila_pop@@Base+0x80>
   11a68:	ldr	r3, [fp, #-16]
   11a6c:	ldr	r3, [r3]
   11a70:	str	r3, [fp, #-12]
   11a74:	ldr	r3, [fp, #-16]
   11a78:	ldr	r3, [r3, #4]
   11a7c:	sub	r2, r3, #1
   11a80:	ldr	r3, [fp, #-16]
   11a84:	str	r2, [r3, #4]
   11a88:	ldr	r3, [fp, #-12]
   11a8c:	ldr	r2, [r3, #4]
   11a90:	ldr	r3, [fp, #-16]
   11a94:	str	r2, [r3]
   11a98:	ldr	r3, [fp, #-12]
   11a9c:	ldr	r3, [r3]
   11aa0:	mov	r0, r3
   11aa4:	bl	11bb0 <pilha_apaga@@Base>
   11aa8:	ldr	r0, [fp, #-12]
   11aac:	bl	10a40 <free@plt>
   11ab0:	b	11ab8 <fila_pop@@Base+0x84>
   11ab4:	nop			; (mov r0, r0)
   11ab8:	sub	sp, fp, #4
   11abc:	pop	{fp, pc}

00011ac0 <pilha_novo_elemento@@Base>:
   11ac0:	push	{fp, lr}
   11ac4:	add	fp, sp, #4
   11ac8:	sub	sp, sp, #16
   11acc:	str	r0, [fp, #-16]
   11ad0:	mov	r0, #8
   11ad4:	bl	10a64 <malloc@plt>
   11ad8:	mov	r3, r0
   11adc:	str	r3, [fp, #-8]
   11ae0:	ldr	r3, [fp, #-8]
   11ae4:	cmp	r3, #0
   11ae8:	bne	11af4 <pilha_novo_elemento@@Base+0x34>
   11aec:	mov	r3, #0
   11af0:	b	11b4c <pilha_novo_elemento@@Base+0x8c>
   11af4:	ldr	r3, [fp, #-16]
   11af8:	ldr	r2, [r3]
   11afc:	ldr	r3, [fp, #-16]
   11b00:	vldr	s15, [r3, #4]
   11b04:	vmov.f32	s0, s15
   11b08:	mov	r0, r2
   11b0c:	bl	11600 <contentor_novo@@Base>
   11b10:	mov	r2, r0
   11b14:	ldr	r3, [fp, #-8]
   11b18:	str	r2, [r3]
   11b1c:	ldr	r3, [fp, #-8]
   11b20:	ldr	r3, [r3]
   11b24:	cmp	r3, #0
   11b28:	bne	11b3c <pilha_novo_elemento@@Base+0x7c>
   11b2c:	ldr	r0, [fp, #-8]
   11b30:	bl	10a40 <free@plt>
   11b34:	mov	r3, #0
   11b38:	b	11b4c <pilha_novo_elemento@@Base+0x8c>
   11b3c:	ldr	r3, [fp, #-8]
   11b40:	mov	r2, #0
   11b44:	str	r2, [r3, #4]
   11b48:	ldr	r3, [fp, #-8]
   11b4c:	mov	r0, r3
   11b50:	sub	sp, fp, #4
   11b54:	pop	{fp, pc}

00011b58 <pilha_nova@@Base>:
   11b58:	push	{fp, lr}
   11b5c:	add	fp, sp, #4
   11b60:	sub	sp, sp, #8
   11b64:	mov	r0, #8
   11b68:	bl	10a64 <malloc@plt>
   11b6c:	mov	r3, r0
   11b70:	str	r3, [fp, #-8]
   11b74:	ldr	r3, [fp, #-8]
   11b78:	cmp	r3, #0
   11b7c:	bne	11b88 <pilha_nova@@Base+0x30>
   11b80:	mov	r3, #0
   11b84:	b	11ba4 <pilha_nova@@Base+0x4c>
   11b88:	ldr	r3, [fp, #-8]
   11b8c:	mov	r2, #0
   11b90:	str	r2, [r3]
   11b94:	ldr	r3, [fp, #-8]
   11b98:	mov	r2, #0
   11b9c:	str	r2, [r3, #4]
   11ba0:	ldr	r3, [fp, #-8]
   11ba4:	mov	r0, r3
   11ba8:	sub	sp, fp, #4
   11bac:	pop	{fp, pc}

00011bb0 <pilha_apaga@@Base>:
   11bb0:	push	{fp, lr}
   11bb4:	add	fp, sp, #4
   11bb8:	sub	sp, sp, #16
   11bbc:	str	r0, [fp, #-16]
   11bc0:	ldr	r3, [fp, #-16]
   11bc4:	cmp	r3, #0
   11bc8:	beq	11c28 <pilha_apaga@@Base+0x78>
   11bcc:	b	11c08 <pilha_apaga@@Base+0x58>
   11bd0:	ldr	r3, [fp, #-16]
   11bd4:	ldr	r3, [r3]
   11bd8:	str	r3, [fp, #-8]
   11bdc:	ldr	r3, [fp, #-16]
   11be0:	ldr	r3, [r3]
   11be4:	ldr	r2, [r3, #4]
   11be8:	ldr	r3, [fp, #-16]
   11bec:	str	r2, [r3]
   11bf0:	ldr	r3, [fp, #-8]
   11bf4:	ldr	r3, [r3]
   11bf8:	mov	r0, r3
   11bfc:	bl	1167c <contentor_apaga@@Base>
   11c00:	ldr	r0, [fp, #-8]
   11c04:	bl	10a40 <free@plt>
   11c08:	ldr	r3, [fp, #-16]
   11c0c:	ldr	r3, [r3]
   11c10:	cmp	r3, #0
   11c14:	bne	11bd0 <pilha_apaga@@Base+0x20>
   11c18:	ldr	r0, [fp, #-16]
   11c1c:	bl	10a40 <free@plt>
   11c20:	nop			; (mov r0, r0)
   11c24:	b	11c2c <pilha_apaga@@Base+0x7c>
   11c28:	nop			; (mov r0, r0)
   11c2c:	sub	sp, fp, #4
   11c30:	pop	{fp, pc}

00011c34 <pilha_tamanho@@Base>:
   11c34:	push	{fp}		; (str fp, [sp, #-4]!)
   11c38:	add	fp, sp, #0
   11c3c:	sub	sp, sp, #12
   11c40:	str	r0, [fp, #-8]
   11c44:	ldr	r3, [fp, #-8]
   11c48:	cmp	r3, #0
   11c4c:	bne	11c58 <pilha_tamanho@@Base+0x24>
   11c50:	mvn	r3, #0
   11c54:	b	11c60 <pilha_tamanho@@Base+0x2c>
   11c58:	ldr	r3, [fp, #-8]
   11c5c:	ldr	r3, [r3, #4]
   11c60:	mov	r0, r3
   11c64:	add	sp, fp, #0
   11c68:	pop	{fp}		; (ldr fp, [sp], #4)
   11c6c:	bx	lr

00011c70 <pilha_top@@Base>:
   11c70:	push	{fp}		; (str fp, [sp, #-4]!)
   11c74:	add	fp, sp, #0
   11c78:	sub	sp, sp, #20
   11c7c:	str	r0, [fp, #-16]
   11c80:	ldr	r3, [fp, #-16]
   11c84:	cmp	r3, #0
   11c88:	beq	11c9c <pilha_top@@Base+0x2c>
   11c8c:	ldr	r3, [fp, #-16]
   11c90:	ldr	r3, [r3, #4]
   11c94:	cmp	r3, #0
   11c98:	bne	11ca4 <pilha_top@@Base+0x34>
   11c9c:	mov	r3, #0
   11ca0:	b	11cb8 <pilha_top@@Base+0x48>
   11ca4:	ldr	r3, [fp, #-16]
   11ca8:	ldr	r3, [r3]
   11cac:	str	r3, [fp, #-8]
   11cb0:	ldr	r3, [fp, #-8]
   11cb4:	ldr	r3, [r3]
   11cb8:	mov	r0, r3
   11cbc:	add	sp, fp, #0
   11cc0:	pop	{fp}		; (ldr fp, [sp], #4)
   11cc4:	bx	lr

00011cc8 <pilha_push@@Base>:
   11cc8:	push	{fp, lr}
   11ccc:	add	fp, sp, #4
   11cd0:	sub	sp, sp, #16
   11cd4:	str	r0, [fp, #-16]
   11cd8:	str	r1, [fp, #-20]	; 0xffffffec
   11cdc:	mov	r3, #0
   11ce0:	str	r3, [fp, #-8]
   11ce4:	ldr	r3, [fp, #-16]
   11ce8:	cmp	r3, #0
   11cec:	beq	11d5c <pilha_push@@Base+0x94>
   11cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11cf4:	bl	11ac0 <pilha_novo_elemento@@Base>
   11cf8:	str	r0, [fp, #-8]
   11cfc:	ldr	r3, [fp, #-8]
   11d00:	cmp	r3, #0
   11d04:	beq	11d64 <pilha_push@@Base+0x9c>
   11d08:	ldr	r3, [fp, #-16]
   11d0c:	ldr	r3, [r3, #4]
   11d10:	add	r2, r3, #1
   11d14:	ldr	r3, [fp, #-16]
   11d18:	str	r2, [r3, #4]
   11d1c:	ldr	r3, [fp, #-16]
   11d20:	ldr	r3, [r3]
   11d24:	cmp	r3, #0
   11d28:	bne	11d3c <pilha_push@@Base+0x74>
   11d2c:	ldr	r3, [fp, #-16]
   11d30:	ldr	r2, [fp, #-8]
   11d34:	str	r2, [r3]
   11d38:	b	11d68 <pilha_push@@Base+0xa0>
   11d3c:	ldr	r3, [fp, #-16]
   11d40:	ldr	r2, [r3]
   11d44:	ldr	r3, [fp, #-8]
   11d48:	str	r2, [r3, #4]
   11d4c:	ldr	r3, [fp, #-16]
   11d50:	ldr	r2, [fp, #-8]
   11d54:	str	r2, [r3]
   11d58:	b	11d68 <pilha_push@@Base+0xa0>
   11d5c:	nop			; (mov r0, r0)
   11d60:	b	11d68 <pilha_push@@Base+0xa0>
   11d64:	nop			; (mov r0, r0)
   11d68:	sub	sp, fp, #4
   11d6c:	pop	{fp, pc}

00011d70 <pilha_pop@@Base>:
   11d70:	push	{fp, lr}
   11d74:	add	fp, sp, #4
   11d78:	sub	sp, sp, #16
   11d7c:	str	r0, [fp, #-16]
   11d80:	ldr	r3, [fp, #-16]
   11d84:	cmp	r3, #0
   11d88:	beq	11de8 <pilha_pop@@Base+0x78>
   11d8c:	ldr	r3, [fp, #-16]
   11d90:	ldr	r3, [r3, #4]
   11d94:	cmp	r3, #0
   11d98:	beq	11de8 <pilha_pop@@Base+0x78>
   11d9c:	ldr	r3, [fp, #-16]
   11da0:	ldr	r3, [r3]
   11da4:	str	r3, [fp, #-8]
   11da8:	ldr	r3, [fp, #-8]
   11dac:	ldr	r2, [r3, #4]
   11db0:	ldr	r3, [fp, #-16]
   11db4:	str	r2, [r3]
   11db8:	ldr	r3, [fp, #-16]
   11dbc:	ldr	r3, [r3, #4]
   11dc0:	sub	r2, r3, #1
   11dc4:	ldr	r3, [fp, #-16]
   11dc8:	str	r2, [r3, #4]
   11dcc:	ldr	r3, [fp, #-8]
   11dd0:	ldr	r3, [r3]
   11dd4:	mov	r0, r3
   11dd8:	bl	1167c <contentor_apaga@@Base>
   11ddc:	ldr	r0, [fp, #-8]
   11de0:	bl	10a40 <free@plt>
   11de4:	b	11dec <pilha_pop@@Base+0x7c>
   11de8:	nop			; (mov r0, r0)
   11dec:	sub	sp, fp, #4
   11df0:	pop	{fp, pc}

00011df4 <__libc_csu_init@@Base>:
   11df4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11df8:	mov	r7, r0
   11dfc:	ldr	r6, [pc, #72]	; 11e4c <__libc_csu_init@@Base+0x58>
   11e00:	ldr	r5, [pc, #72]	; 11e50 <__libc_csu_init@@Base+0x5c>
   11e04:	add	r6, pc, r6
   11e08:	add	r5, pc, r5
   11e0c:	sub	r6, r6, r5
   11e10:	mov	r8, r1
   11e14:	mov	r9, r2
   11e18:	bl	10a08 <calloc@plt-0x20>
   11e1c:	asrs	r6, r6, #2
   11e20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e24:	mov	r4, #0
   11e28:	add	r4, r4, #1
   11e2c:	ldr	r3, [r5], #4
   11e30:	mov	r2, r9
   11e34:	mov	r1, r8
   11e38:	mov	r0, r7
   11e3c:	blx	r3
   11e40:	cmp	r6, r4
   11e44:	bne	11e28 <__libc_csu_init@@Base+0x34>
   11e48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e4c:	andeq	r1, r1, r4, lsl #2
   11e50:	strdeq	r1, [r1], -ip

00011e54 <__libc_csu_fini@@Base>:
   11e54:	bx	lr

Disassembly of section .fini:

00011e58 <.fini>:
   11e58:	push	{r3, lr}
   11e5c:	pop	{r3, pc}
