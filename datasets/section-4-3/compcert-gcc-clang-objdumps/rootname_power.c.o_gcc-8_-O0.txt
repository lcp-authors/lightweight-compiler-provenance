
../compcert-repos/rootname/CMakeFiles/rootname.dir/src/power.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <init_bat>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #16
  10:	str	r0, [fp, #-16]
  14:	movw	r1, #0
  18:	movt	r1, #0
  1c:	movw	r0, #0
  20:	movt	r0, #0
  24:	bl	0 <fopen>
  28:	str	r0, [fp, #-8]
  2c:	ldr	r3, [fp, #-8]
  30:	cmp	r3, #0
  34:	bne	50 <init_bat+0x50>
  38:	movw	r1, #0
  3c:	movt	r1, #0
  40:	movw	r0, #0
  44:	movt	r0, #0
  48:	bl	0 <fopen>
  4c:	str	r0, [fp, #-8]
  50:	ldr	r3, [fp, #-8]
  54:	cmp	r3, #0
  58:	bne	90 <init_bat+0x90>
  5c:	ldr	r3, [fp, #-16]
  60:	mov	r2, #0
  64:	strb	r2, [r3, #24]
  68:	ldr	r3, [fp, #-16]
  6c:	mov	r2, #0
  70:	str	r2, [r3]
  74:	ldr	r3, [fp, #-16]
  78:	mov	r2, #0
  7c:	str	r2, [r3, #4]
  80:	ldr	r3, [fp, #-16]
  84:	mov	r2, #0
  88:	str	r2, [r3, #8]
  8c:	b	17c <init_bat+0x17c>
  90:	ldr	r3, [fp, #-16]
  94:	mov	r2, #1
  98:	strb	r2, [r3, #24]
  9c:	ldr	r0, [fp, #-8]
  a0:	bl	0 <read_int>
  a4:	mov	r2, r0
  a8:	mov	r3, r1
  ac:	ldr	r1, [fp, #-16]
  b0:	strd	r2, [r1, #16]
  b4:	movw	r1, #0
  b8:	movt	r1, #0
  bc:	movw	r0, #0
  c0:	movt	r0, #0
  c4:	bl	0 <fopen>
  c8:	mov	r2, r0
  cc:	ldr	r3, [fp, #-16]
  d0:	str	r2, [r3]
  d4:	movw	r1, #0
  d8:	movt	r1, #0
  dc:	movw	r0, #0
  e0:	movt	r0, #0
  e4:	bl	0 <fopen>
  e8:	mov	r2, r0
  ec:	ldr	r3, [fp, #-16]
  f0:	str	r2, [r3, #4]
  f4:	ldr	r3, [fp, #-16]
  f8:	ldr	r3, [r3, #4]
  fc:	cmp	r3, #0
 100:	bne	124 <init_bat+0x124>
 104:	movw	r1, #0
 108:	movt	r1, #0
 10c:	movw	r0, #0
 110:	movt	r0, #0
 114:	bl	0 <fopen>
 118:	mov	r2, r0
 11c:	ldr	r3, [fp, #-16]
 120:	str	r2, [r3, #4]
 124:	movw	r1, #0
 128:	movt	r1, #0
 12c:	movw	r0, #0
 130:	movt	r0, #0
 134:	bl	0 <fopen>
 138:	mov	r2, r0
 13c:	ldr	r3, [fp, #-16]
 140:	str	r2, [r3, #8]
 144:	ldr	r3, [fp, #-16]
 148:	ldr	r3, [r3, #8]
 14c:	cmp	r3, #0
 150:	bne	174 <init_bat+0x174>
 154:	movw	r1, #0
 158:	movt	r1, #0
 15c:	movw	r0, #0
 160:	movt	r0, #0
 164:	bl	0 <fopen>
 168:	mov	r2, r0
 16c:	ldr	r3, [fp, #-16]
 170:	str	r2, [r3, #8]
 174:	ldr	r0, [fp, #-8]
 178:	bl	0 <fclose>
 17c:	sub	sp, fp, #4
 180:	ldr	fp, [sp]
 184:	add	sp, sp, #4
 188:	pop	{pc}		; (ldr pc, [sp], #4)

0000018c <close_bat>:
 18c:	str	fp, [sp, #-8]!
 190:	str	lr, [sp, #4]
 194:	add	fp, sp, #4
 198:	sub	sp, sp, #8
 19c:	str	r0, [fp, #-8]
 1a0:	ldr	r3, [fp, #-8]
 1a4:	ldr	r3, [r3]
 1a8:	cmp	r3, #0
 1ac:	beq	1c0 <close_bat+0x34>
 1b0:	ldr	r3, [fp, #-8]
 1b4:	ldr	r3, [r3]
 1b8:	mov	r0, r3
 1bc:	bl	0 <fclose>
 1c0:	ldr	r3, [fp, #-8]
 1c4:	ldr	r3, [r3, #4]
 1c8:	cmp	r3, #0
 1cc:	beq	1e0 <close_bat+0x54>
 1d0:	ldr	r3, [fp, #-8]
 1d4:	ldr	r3, [r3, #4]
 1d8:	mov	r0, r3
 1dc:	bl	0 <fclose>
 1e0:	ldr	r3, [fp, #-8]
 1e4:	ldr	r3, [r3, #8]
 1e8:	cmp	r3, #0
 1ec:	beq	200 <close_bat+0x74>
 1f0:	ldr	r3, [fp, #-8]
 1f4:	ldr	r3, [r3, #8]
 1f8:	mov	r0, r3
 1fc:	bl	0 <fclose>
 200:	nop	{0}
 204:	sub	sp, fp, #4
 208:	ldr	fp, [sp]
 20c:	add	sp, sp, #4
 210:	pop	{pc}		; (ldr pc, [sp], #4)

00000214 <bat>:
 214:	strd	r4, [sp, #-32]!	; 0xffffffe0
 218:	strd	r6, [sp, #8]
 21c:	strd	r8, [sp, #16]
 220:	str	fp, [sp, #24]
 224:	str	lr, [sp, #28]
 228:	add	fp, sp, #28
 22c:	sub	sp, sp, #64	; 0x40
 230:	str	r0, [fp, #-72]	; 0xffffffb8
 234:	str	r1, [fp, #-76]	; 0xffffffb4
 238:	str	r2, [fp, #-80]	; 0xffffffb0
 23c:	ldr	r3, [fp, #-72]	; 0xffffffb8
 240:	ldr	r3, [r3]
 244:	mov	r0, r3
 248:	bl	0 <read_int>
 24c:	mov	r2, r0
 250:	mov	r3, r1
 254:	orr	r3, r2, r3
 258:	cmp	r3, #0
 25c:	movne	r3, #1
 260:	moveq	r3, #0
 264:	strb	r3, [fp, #-29]	; 0xffffffe3
 268:	ldr	r3, [fp, #-72]	; 0xffffffb8
 26c:	ldr	r3, [r3, #4]
 270:	mov	r0, r3
 274:	bl	0 <read_int>
 278:	strd	r0, [fp, #-44]	; 0xffffffd4
 27c:	ldr	r3, [fp, #-72]	; 0xffffffb8
 280:	ldr	r3, [r3, #8]
 284:	mov	r0, r3
 288:	bl	0 <read_int>
 28c:	strd	r0, [fp, #-52]	; 0xffffffcc
 290:	ldrd	r4, [fp, #-44]	; 0xffffffd4
 294:	mov	r2, r4
 298:	mov	r3, r5
 29c:	adds	r8, r2, r2
 2a0:	adc	r9, r3, r3
 2a4:	mov	r2, r8
 2a8:	mov	r3, r9
 2ac:	adds	r2, r2, r4
 2b0:	adc	r3, r3, r5
 2b4:	mov	r0, #0
 2b8:	mov	r1, #0
 2bc:	lsl	r1, r3, #5
 2c0:	orr	r1, r1, r2, lsr #27
 2c4:	lsl	r0, r2, #5
 2c8:	adds	r2, r2, r0
 2cc:	adc	r3, r3, r1
 2d0:	adds	r6, r2, r4
 2d4:	adc	r7, r3, r5
 2d8:	ldr	r3, [fp, #-72]	; 0xffffffb8
 2dc:	ldrd	r2, [r3, #16]
 2e0:	mov	r0, r6
 2e4:	mov	r1, r7
 2e8:	bl	0 <__aeabi_uldivmod>
 2ec:	mov	r2, r0
 2f0:	mov	r3, r1
 2f4:	mov	r3, r2
 2f8:	str	r3, [fp, #-56]	; 0xffffffc8
 2fc:	ldrb	r3, [fp, #-29]	; 0xffffffe3
 300:	cmp	r3, #0
 304:	beq	328 <bat+0x114>
 308:	ldr	r3, [fp, #-56]	; 0xffffffc8
 30c:	movw	r2, #0
 310:	movt	r2, #0
 314:	ldr	r1, [fp, #-80]	; 0xffffffb0
 318:	ldr	r0, [fp, #-76]	; 0xffffffb4
 31c:	bl	0 <snprintf>
 320:	mov	r3, r0
 324:	b	41c <bat+0x208>
 328:	ldrd	r2, [fp, #-52]	; 0xffffffcc
 32c:	orrs	r3, r2, r3
 330:	beq	400 <bat+0x1ec>
 334:	ldrd	r2, [fp, #-52]	; 0xffffffcc
 338:	ldrd	r0, [fp, #-44]	; 0xffffffd4
 33c:	bl	0 <__aeabi_uldivmod>
 340:	mov	r2, r0
 344:	mov	r3, r1
 348:	mov	r3, r2
 34c:	str	r3, [fp, #-60]	; 0xffffffc4
 350:	ldrd	r4, [fp, #-44]	; 0xffffffd4
 354:	mov	r2, r4
 358:	mov	r3, r5
 35c:	mov	r0, #0
 360:	mov	r1, #0
 364:	lsl	r1, r3, #4
 368:	orr	r1, r1, r2, lsr #28
 36c:	lsl	r0, r2, #4
 370:	mov	r2, r0
 374:	mov	r3, r1
 378:	subs	r2, r2, r4
 37c:	sbc	r3, r3, r5
 380:	mov	r0, #0
 384:	mov	r1, #0
 388:	lsl	r1, r3, #2
 38c:	orr	r1, r1, r2, lsr #30
 390:	lsl	r0, r2, #2
 394:	mov	r2, r0
 398:	mov	r3, r1
 39c:	mov	r0, r2
 3a0:	mov	r1, r3
 3a4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
 3a8:	bl	0 <__aeabi_uldivmod>
 3ac:	mov	r2, r0
 3b0:	mov	r3, r1
 3b4:	mov	r0, r2
 3b8:	mov	r1, r3
 3bc:	mov	r2, #60	; 0x3c
 3c0:	mov	r3, #0
 3c4:	bl	0 <__aeabi_uldivmod>
 3c8:	mov	r3, r2
 3cc:	str	r3, [fp, #-64]	; 0xffffffc0
 3d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
 3d4:	str	r3, [sp, #4]
 3d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
 3dc:	str	r3, [sp]
 3e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
 3e4:	movw	r2, #0
 3e8:	movt	r2, #0
 3ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
 3f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
 3f4:	bl	0 <snprintf>
 3f8:	mov	r3, r0
 3fc:	b	41c <bat+0x208>
 400:	ldr	r3, [fp, #-56]	; 0xffffffc8
 404:	movw	r2, #0
 408:	movt	r2, #0
 40c:	ldr	r1, [fp, #-80]	; 0xffffffb0
 410:	ldr	r0, [fp, #-76]	; 0xffffffb4
 414:	bl	0 <snprintf>
 418:	mov	r3, r0
 41c:	mov	r0, r3
 420:	sub	sp, fp, #28
 424:	ldrd	r4, [sp]
 428:	ldrd	r6, [sp, #8]
 42c:	ldrd	r8, [sp, #16]
 430:	ldr	fp, [sp, #24]
 434:	add	sp, sp, #28
 438:	pop	{pc}		; (ldr pc, [sp], #4)
