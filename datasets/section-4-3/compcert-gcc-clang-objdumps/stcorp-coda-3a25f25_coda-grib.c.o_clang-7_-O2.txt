
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-grib.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_grib_done>:
       0:	push	{r4, r5, r6, sl, fp, lr}
       4:	add	fp, sp, #16
       8:	ldr	r4, [pc, #84]	; 64 <coda_grib_done+0x64>
       c:	bl	0 <__aeabi_read_tp>
      10:	ldr	r0, [r0, r4]
      14:	cmp	r0, #0
      18:	popeq	{r4, r5, r6, sl, fp, pc}
      1c:	mov	r5, #0
      20:	mov	r6, #0
      24:	ldr	r1, [r0, r6, lsl #2]
      28:	cmp	r1, #0
      2c:	beq	44 <coda_grib_done+0x44>
      30:	mov	r0, r1
      34:	bl	0 <coda_type_release>
      38:	bl	0 <__aeabi_read_tp>
      3c:	ldr	r0, [r0, r4]
      40:	str	r5, [r0, r6, lsl #2]
      44:	add	r6, r6, #1
      48:	cmp	r6, #143	; 0x8f
      4c:	bne	24 <coda_grib_done+0x24>
      50:	bl	0 <free>
      54:	mov	r1, #0
      58:	bl	0 <__aeabi_read_tp>
      5c:	str	r1, [r0, r4]
      60:	pop	{r4, r5, r6, sl, fp, pc}
      64:	.word	0x00000000

00000068 <coda_grib_reopen>:
      68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
      6c:	add	fp, sp, #28
      70:	sub	sp, sp, #4
      74:	vpush	{d8-d12}
      78:	sub	sp, sp, #328	; 0x148
      7c:	mov	r5, r0
      80:	bl	3704 <grib_init>
      84:	cmp	r0, #0
      88:	beq	98 <coda_grib_reopen+0x30>
      8c:	ldr	r0, [r5]
      90:	bl	0 <coda_close>
      94:	b	3148 <coda_grib_reopen+0x30e0>
      98:	mov	r0, #56	; 0x38
      9c:	bl	0 <malloc>
      a0:	cmp	r0, #0
      a4:	beq	30b0 <coda_grib_reopen+0x3048>
      a8:	mov	r9, r0
      ac:	mov	r0, #0
      b0:	vmov.i32	q8, #0	; 0x00000000
      b4:	mov	r7, #7
      b8:	str	r0, [r9]
      bc:	add	r4, r9, #20
      c0:	ldr	r1, [r5]
      c4:	ldrd	r2, [r1, #8]
      c8:	vst1.32	{d16-d17}, [r4]
      cc:	str	r0, [r9, #40]	; 0x28
      d0:	str	r0, [r9, #44]	; 0x2c
      d4:	str	r0, [r9, #48]	; 0x30
      d8:	add	r0, r9, #8
      dc:	str	r1, [r9, #52]	; 0x34
      e0:	stm	r0, {r2, r3, r7}
      e4:	ldr	r0, [r1]
      e8:	bl	0 <strdup>
      ec:	add	sl, r9, #52	; 0x34
      f0:	cmp	r0, #0
      f4:	str	r0, [r9]
      f8:	beq	30e4 <coda_grib_reopen+0x307c>
      fc:	ldr	r1, [pc, #3624]	; f2c <coda_grib_reopen+0xec4>
     100:	str	r5, [sp, #176]	; 0xb0
     104:	add	r5, r9, #8
     108:	bl	0 <__aeabi_read_tp>
     10c:	ldr	r0, [r0, r1]
     110:	mov	r1, #0
     114:	ldr	r0, [r0, #568]	; 0x238
     118:	bl	0 <coda_mem_array_new>
     11c:	str	r0, [r4]
     120:	str	r4, [sp, #180]	; 0xb4
     124:	str	r5, [sp, #188]	; 0xbc
     128:	ldrd	r0, [r5]
     12c:	subs	r0, r0, #2
     130:	sbcs	r0, r1, #0
     134:	blt	30a0 <coda_grib_reopen+0x3038>
     138:	ldr	r0, [sp, #188]	; 0xbc
     13c:	vldr	s22, [pc, #88]	; 19c <coda_grib_reopen+0x134>
     140:	vmov.f64	d12, #36	; 0x41200000  10.0
     144:	mov	r2, #0
     148:	mov	r1, #0
     14c:	mov	r7, #0
     150:	ldm	r0, {r0, ip}
     154:	str	r7, [sp, #156]	; 0x9c
     158:	str	sl, [sp, #184]	; 0xb8
     15c:	mov	r7, #0
     160:	strb	r7, [fp, #-193]	; 0xffffff3f
     164:	subs	r7, r0, #1
     168:	sbc	r6, ip, #0
     16c:	subs	r7, r2, r7
     170:	sbcs	r7, r1, r6
     174:	bge	30a0 <coda_grib_reopen+0x3038>
     178:	mov	r8, r2
     17c:	ldr	r2, [sl]
     180:	mov	r3, r1
     184:	ldr	r1, [r2, #48]	; 0x30
     188:	cmp	r1, #0
     18c:	beq	1a0 <coda_grib_reopen+0x138>
     190:	ldrb	r7, [r1, r8]
     194:	strb	r7, [fp, #-193]	; 0xffffff3f
     198:	b	1dc <coda_grib_reopen+0x174>
     19c:	.word	0x00000000
     1a0:	ldr	r0, [r2, #16]
     1a4:	cmp	r0, #2
     1a8:	bcs	36e0 <coda_grib_reopen+0x3678>
     1ac:	ldr	r0, [r2, #56]	; 0x38
     1b0:	mov	r4, r3
     1b4:	sub	r1, fp, #193	; 0xc1
     1b8:	mov	r2, #1
     1bc:	mov	r3, r8
     1c0:	bl	0 <pread>
     1c4:	cmp	r0, #0
     1c8:	blt	317c <coda_grib_reopen+0x3114>
     1cc:	ldr	r0, [sp, #188]	; 0xbc
     1d0:	mov	r3, r4
     1d4:	ldm	r0, {r0, ip}
     1d8:	ldrb	r7, [fp, #-193]	; 0xffffff3f
     1dc:	subs	r6, r0, #1
     1e0:	sbc	r5, ip, #0
     1e4:	adds	r2, r8, #1
     1e8:	adc	r1, r3, #0
     1ec:	subs	r4, r2, r6
     1f0:	sbcs	r4, r1, r5
     1f4:	bge	200 <coda_grib_reopen+0x198>
     1f8:	cmp	r7, #71	; 0x47
     1fc:	bne	178 <coda_grib_reopen+0x110>
     200:	subs	r0, r2, r6
     204:	sbcs	r0, r1, r5
     208:	bge	30a0 <coda_grib_reopen+0x3038>
     20c:	ldr	r0, [sl]
     210:	mov	r1, #8
     214:	mov	r7, #0
     218:	mov	r2, r8
     21c:	str	r3, [sp, #172]	; 0xac
     220:	str	r1, [sp]
     224:	sub	r1, fp, #193	; 0xc1
     228:	str	r7, [sp, #4]
     22c:	str	r1, [sp, #8]
     230:	bl	76fc <read_bytes>
     234:	cmn	r0, #1
     238:	ble	31fc <coda_grib_reopen+0x3194>
     23c:	ldrb	r0, [fp, #-193]	; 0xffffff3f
     240:	cmp	r0, #71	; 0x47
     244:	bne	3160 <coda_grib_reopen+0x30f8>
     248:	ldrb	r0, [fp, #-192]	; 0xffffff40
     24c:	cmp	r0, #82	; 0x52
     250:	ldrbeq	r0, [fp, #-191]	; 0xffffff41
     254:	cmpeq	r0, #73	; 0x49
     258:	bne	3160 <coda_grib_reopen+0x30f8>
     25c:	ldrb	r0, [fp, #-190]	; 0xffffff42
     260:	cmp	r0, #66	; 0x42
     264:	bne	3160 <coda_grib_reopen+0x30f8>
     268:	ldrb	r5, [fp, #-186]	; 0xffffff46
     26c:	sub	r0, r5, #1
     270:	uxtb	r0, r0
     274:	cmp	r0, #2
     278:	bcs	3220 <coda_grib_reopen+0x31b8>
     27c:	bl	0 <__aeabi_read_tp>
     280:	ldr	r4, [pc, #3236]	; f2c <coda_grib_reopen+0xec4>
     284:	mov	r1, #0
     288:	ldr	r0, [r0, r4]
     28c:	ldr	r0, [r0, #564]	; 0x234
     290:	bl	0 <coda_mem_record_new>
     294:	cmp	r5, #1
     298:	str	r0, [sp, #160]	; 0xa0
     29c:	bne	860 <coda_grib_reopen+0x7f8>
     2a0:	mov	r6, r0
     2a4:	ldrb	r0, [fp, #-189]	; 0xffffff43
     2a8:	ldrb	r1, [fp, #-188]	; 0xffffff44
     2ac:	ldrb	r2, [fp, #-187]	; 0xffffff45
     2b0:	str	r7, [sp, #196]	; 0xc4
     2b4:	orr	r0, r1, r0, lsl #8
     2b8:	orr	r0, r2, r0, lsl #8
     2bc:	str	r0, [sp, #192]	; 0xc0
     2c0:	bl	0 <__aeabi_read_tp>
     2c4:	mov	r5, r0
     2c8:	ldr	r0, [r0, r4]
     2cc:	mov	r1, #0
     2d0:	ldr	r0, [r0, #272]	; 0x110
     2d4:	bl	0 <coda_mem_record_new>
     2d8:	mov	r7, r0
     2dc:	ldr	r0, [r6, #20]
     2e0:	mov	r1, #0
     2e4:	mov	r2, r9
     2e8:	mov	r3, #1
     2ec:	str	r7, [r0]
     2f0:	ldr	r0, [r5, r4]
     2f4:	ldr	r0, [r0, #12]
     2f8:	bl	0 <coda_mem_uint8_new>
     2fc:	movw	r1, #0
     300:	mov	r2, r0
     304:	mov	r0, r7
     308:	mov	r3, #0
     30c:	str	r7, [sp, #164]	; 0xa4
     310:	movt	r1, #0
     314:	bl	0 <coda_mem_record_add_field>
     318:	mov	r1, #28
     31c:	ldr	r0, [r9, #52]	; 0x34
     320:	adds	r2, r8, #8
     324:	str	r1, [sp]
     328:	mov	r1, #0
     32c:	str	r1, [sp, #4]
     330:	sub	r1, fp, #144	; 0x90
     334:	str	r1, [sp, #8]
     338:	ldr	r1, [sp, #172]	; 0xac
     33c:	adc	r3, r1, #0
     340:	bl	76fc <read_bytes>
     344:	cmp	r0, #0
     348:	blt	31f4 <coda_grib_reopen+0x318c>
     34c:	bl	0 <__aeabi_read_tp>
     350:	ldr	r4, [pc, #3028]	; f2c <coda_grib_reopen+0xec4>
     354:	ldrb	r1, [fp, #-144]	; 0xffffff70
     358:	mov	r5, r0
     35c:	ldrb	r3, [fp, #-141]	; 0xffffff73
     360:	ldrb	r7, [fp, #-142]	; 0xffffff72
     364:	mov	r2, r9
     368:	ldr	r0, [r0, r4]
     36c:	str	r1, [sp, #168]	; 0xa8
     370:	ldrb	r1, [fp, #-143]	; 0xffffff71
     374:	ldr	r0, [r0, #8]
     378:	str	r1, [sp, #152]	; 0x98
     37c:	mov	r1, #0
     380:	bl	0 <coda_mem_uint8_new>
     384:	ldr	r6, [sp, #164]	; 0xa4
     388:	movw	r1, #0
     38c:	mov	r2, r0
     390:	mov	r3, #0
     394:	movt	r1, #0
     398:	mov	r0, r6
     39c:	bl	0 <coda_mem_record_add_field>
     3a0:	ldr	r0, [r5, r4]
     3a4:	ldrb	r3, [fp, #-140]	; 0xffffff74
     3a8:	mov	r1, #0
     3ac:	mov	r2, r9
     3b0:	ldr	r0, [r0, #16]
     3b4:	bl	0 <coda_mem_uint8_new>
     3b8:	movw	r1, #0
     3bc:	mov	r2, r0
     3c0:	mov	r0, r6
     3c4:	mov	r3, #0
     3c8:	movt	r1, #0
     3cc:	bl	0 <coda_mem_record_add_field>
     3d0:	ldr	r0, [r5, r4]
     3d4:	ldrb	r3, [fp, #-139]	; 0xffffff75
     3d8:	mov	r1, #0
     3dc:	mov	r2, r9
     3e0:	ldr	r0, [r0, #20]
     3e4:	bl	0 <coda_mem_uint8_new>
     3e8:	movw	r1, #0
     3ec:	mov	r2, r0
     3f0:	mov	r0, r6
     3f4:	mov	r3, #0
     3f8:	movt	r1, #0
     3fc:	bl	0 <coda_mem_record_add_field>
     400:	ldr	r0, [r5, r4]
     404:	ldrb	r3, [fp, #-138]	; 0xffffff76
     408:	mov	r1, #0
     40c:	mov	r2, r9
     410:	ldr	r0, [r0, #24]
     414:	str	r3, [sp, #140]	; 0x8c
     418:	bl	0 <coda_mem_uint8_new>
     41c:	movw	r1, #0
     420:	mov	r2, r0
     424:	mov	r0, r6
     428:	mov	r3, #0
     42c:	movt	r1, #0
     430:	bl	0 <coda_mem_record_add_field>
     434:	ldr	r0, [r5, r4]
     438:	ldrb	r1, [fp, #-137]	; 0xffffff77
     43c:	ldrb	r3, [fp, #-136]	; 0xffffff78
     440:	mov	r2, r9
     444:	ldr	r0, [r0, #28]
     448:	str	r1, [sp, #148]	; 0x94
     44c:	mov	r1, #0
     450:	bl	0 <coda_mem_uint8_new>
     454:	movw	r1, #0
     458:	mov	r2, r0
     45c:	mov	r0, r6
     460:	mov	r3, #0
     464:	movt	r1, #0
     468:	bl	0 <coda_mem_record_add_field>
     46c:	ldr	r0, [r5, r4]
     470:	ldrb	r3, [fp, #-135]	; 0xffffff79
     474:	mov	r1, #0
     478:	mov	r2, r9
     47c:	ldr	r0, [r0, #32]
     480:	bl	0 <coda_mem_uint8_new>
     484:	movw	r1, #0
     488:	mov	r2, r0
     48c:	mov	r0, r6
     490:	mov	r3, #0
     494:	movt	r1, #0
     498:	bl	0 <coda_mem_record_add_field>
     49c:	ldr	r0, [r5, r4]
     4a0:	ldrh	r1, [fp, #-134]	; 0xffffff7a
     4a4:	mov	r2, r9
     4a8:	ldr	r0, [r0, #36]	; 0x24
     4ac:	rev16	r3, r1
     4b0:	mov	r1, #0
     4b4:	bl	0 <coda_mem_uint16_new>
     4b8:	movw	r1, #0
     4bc:	mov	r2, r0
     4c0:	mov	r0, r6
     4c4:	mov	r3, #0
     4c8:	movt	r1, #0
     4cc:	bl	0 <coda_mem_record_add_field>
     4d0:	ldr	r0, [r5, r4]
     4d4:	ldrb	r3, [fp, #-132]	; 0xffffff7c
     4d8:	mov	r1, #0
     4dc:	mov	r2, r9
     4e0:	ldr	r0, [r0, #40]	; 0x28
     4e4:	bl	0 <coda_mem_uint8_new>
     4e8:	movw	r1, #0
     4ec:	mov	r2, r0
     4f0:	mov	r0, r6
     4f4:	mov	r3, #0
     4f8:	movt	r1, #0
     4fc:	bl	0 <coda_mem_record_add_field>
     500:	ldr	r0, [r5, r4]
     504:	ldrb	r3, [fp, #-131]	; 0xffffff7d
     508:	mov	r1, #0
     50c:	mov	r2, r9
     510:	ldr	r0, [r0, #48]	; 0x30
     514:	bl	0 <coda_mem_uint8_new>
     518:	movw	r1, #0
     51c:	mov	r2, r0
     520:	mov	r0, r6
     524:	mov	r3, #0
     528:	movt	r1, #0
     52c:	bl	0 <coda_mem_record_add_field>
     530:	ldr	r0, [r5, r4]
     534:	ldrb	r3, [fp, #-130]	; 0xffffff7e
     538:	mov	r1, #0
     53c:	mov	r2, r9
     540:	ldr	r0, [r0, #52]	; 0x34
     544:	bl	0 <coda_mem_uint8_new>
     548:	movw	r1, #0
     54c:	mov	r2, r0
     550:	mov	r0, r6
     554:	mov	r3, #0
     558:	movt	r1, #0
     55c:	bl	0 <coda_mem_record_add_field>
     560:	ldr	r0, [r5, r4]
     564:	ldrb	r3, [fp, #-129]	; 0xffffff7f
     568:	mov	r1, #0
     56c:	mov	r2, r9
     570:	ldr	r0, [r0, #56]	; 0x38
     574:	bl	0 <coda_mem_uint8_new>
     578:	movw	r1, #0
     57c:	mov	r2, r0
     580:	mov	r0, r6
     584:	mov	r3, #0
     588:	movt	r1, #0
     58c:	bl	0 <coda_mem_record_add_field>
     590:	ldr	r0, [r5, r4]
     594:	ldrb	r3, [fp, #-128]	; 0xffffff80
     598:	mov	r1, #0
     59c:	mov	r2, r9
     5a0:	ldr	r0, [r0, #60]	; 0x3c
     5a4:	bl	0 <coda_mem_uint8_new>
     5a8:	movw	r1, #0
     5ac:	mov	r2, r0
     5b0:	mov	r0, r6
     5b4:	mov	r3, #0
     5b8:	movt	r1, #0
     5bc:	bl	0 <coda_mem_record_add_field>
     5c0:	ldr	r0, [r5, r4]
     5c4:	ldrb	r3, [fp, #-127]	; 0xffffff81
     5c8:	mov	r1, #0
     5cc:	mov	r2, r9
     5d0:	ldr	r0, [r0, #68]	; 0x44
     5d4:	bl	0 <coda_mem_uint8_new>
     5d8:	movw	r1, #0
     5dc:	mov	r2, r0
     5e0:	mov	r0, r6
     5e4:	mov	r3, #0
     5e8:	movt	r1, #0
     5ec:	bl	0 <coda_mem_record_add_field>
     5f0:	ldr	r0, [r5, r4]
     5f4:	ldrb	r3, [fp, #-126]	; 0xffffff82
     5f8:	mov	r1, #0
     5fc:	mov	r2, r9
     600:	ldr	r0, [r0, #72]	; 0x48
     604:	bl	0 <coda_mem_uint8_new>
     608:	movw	r1, #0
     60c:	mov	r2, r0
     610:	mov	r0, r6
     614:	mov	r3, #0
     618:	movt	r1, #0
     61c:	bl	0 <coda_mem_record_add_field>
     620:	ldr	r0, [r5, r4]
     624:	ldrb	r3, [fp, #-125]	; 0xffffff83
     628:	mov	r1, #0
     62c:	mov	r2, r9
     630:	ldr	r0, [r0, #76]	; 0x4c
     634:	bl	0 <coda_mem_uint8_new>
     638:	movw	r1, #0
     63c:	mov	r2, r0
     640:	mov	r0, r6
     644:	mov	r3, #0
     648:	movt	r1, #0
     64c:	bl	0 <coda_mem_record_add_field>
     650:	ldr	r0, [r5, r4]
     654:	ldrb	r3, [fp, #-124]	; 0xffffff84
     658:	mov	r1, #0
     65c:	mov	r2, r9
     660:	ldr	r0, [r0, #80]	; 0x50
     664:	bl	0 <coda_mem_uint8_new>
     668:	movw	r1, #0
     66c:	mov	r2, r0
     670:	mov	r0, r6
     674:	mov	r3, #0
     678:	movt	r1, #0
     67c:	bl	0 <coda_mem_record_add_field>
     680:	ldr	r0, [r5, r4]
     684:	ldrh	r1, [fp, #-123]	; 0xffffff85
     688:	mov	r2, r9
     68c:	ldr	r0, [r0, #84]	; 0x54
     690:	rev16	r3, r1
     694:	mov	r1, #0
     698:	bl	0 <coda_mem_uint16_new>
     69c:	movw	r1, #0
     6a0:	mov	r2, r0
     6a4:	mov	r0, r6
     6a8:	mov	r3, #0
     6ac:	movt	r1, #0
     6b0:	bl	0 <coda_mem_record_add_field>
     6b4:	ldr	r0, [r5, r4]
     6b8:	ldrb	r3, [fp, #-121]	; 0xffffff87
     6bc:	mov	r1, #0
     6c0:	mov	r2, r9
     6c4:	ldr	r0, [r0, #88]	; 0x58
     6c8:	bl	0 <coda_mem_uint8_new>
     6cc:	movw	r1, #0
     6d0:	mov	r2, r0
     6d4:	mov	r0, r6
     6d8:	mov	r3, #0
     6dc:	movt	r1, #0
     6e0:	bl	0 <coda_mem_record_add_field>
     6e4:	ldr	r0, [r5, r4]
     6e8:	ldrb	r3, [fp, #-120]	; 0xffffff88
     6ec:	mov	r1, #0
     6f0:	mov	r2, r9
     6f4:	ldr	r0, [r0, #92]	; 0x5c
     6f8:	bl	0 <coda_mem_uint8_new>
     6fc:	movw	r1, #0
     700:	mov	r2, r0
     704:	mov	r0, r6
     708:	mov	r3, #0
     70c:	movt	r1, #0
     710:	bl	0 <coda_mem_record_add_field>
     714:	ldr	r0, [r5, r4]
     718:	ldrb	r3, [fp, #-119]	; 0xffffff89
     71c:	mov	r1, #0
     720:	mov	r2, r9
     724:	ldr	r0, [r0, #96]	; 0x60
     728:	bl	0 <coda_mem_uint8_new>
     72c:	movw	r1, #0
     730:	mov	r2, r0
     734:	mov	r0, r6
     738:	mov	r3, #0
     73c:	movt	r1, #0
     740:	bl	0 <coda_mem_record_add_field>
     744:	ldr	r0, [r5, r4]
     748:	ldrb	r1, [fp, #-118]	; 0xffffff8a
     74c:	ldrb	r2, [fp, #-117]	; 0xffffff8b
     750:	mvn	r3, #0
     754:	tst	r1, #128	; 0x80
     758:	ldr	r0, [r0, #100]	; 0x64
     75c:	bfi	r2, r1, #8, #7
     760:	movweq	r3, #1
     764:	mul	r1, r3, r2
     768:	mov	r2, r9
     76c:	sxth	r3, r1
     770:	mov	r1, #0
     774:	str	r3, [sp, #136]	; 0x88
     778:	bl	0 <coda_mem_int16_new>
     77c:	movw	r1, #0
     780:	mov	r2, r0
     784:	mov	r0, r6
     788:	mov	r3, #0
     78c:	movt	r1, #0
     790:	bl	0 <coda_mem_record_add_field>
     794:	ldr	r0, [sp, #172]	; 0xac
     798:	adds	r4, r8, #36	; 0x24
     79c:	ldr	r1, [sp, #152]	; 0x98
     7a0:	adc	sl, r0, #0
     7a4:	ldr	r0, [sp, #168]	; 0xa8
     7a8:	orr	r0, r1, r0, lsl #8
     7ac:	orr	r6, r7, r0, lsl #8
     7b0:	cmp	r6, #29
     7b4:	bcc	21a4 <coda_grib_reopen+0x213c>
     7b8:	cmp	r6, #41	; 0x29
     7bc:	bcc	84c <coda_grib_reopen+0x7e4>
     7c0:	sub	r5, r6, #40	; 0x28
     7c4:	mov	r0, r5
     7c8:	bl	0 <malloc>
     7cc:	cmp	r0, #0
     7d0:	beq	35a8 <coda_grib_reopen+0x3540>
     7d4:	mov	r7, r0
     7d8:	ldr	r0, [sp, #184]	; 0xb8
     7dc:	asr	r1, r5, #31
     7e0:	str	r5, [sp]
     7e4:	adds	r2, r8, #48	; 0x30
     7e8:	ldr	r0, [r0]
     7ec:	stmib	sp, {r1, r7}
     7f0:	ldr	r1, [sp, #172]	; 0xac
     7f4:	adc	r3, r1, #0
     7f8:	bl	76fc <read_bytes>
     7fc:	cmn	r0, #1
     800:	ble	35d0 <coda_grib_reopen+0x3568>
     804:	bl	0 <__aeabi_read_tp>
     808:	ldr	r1, [pc, #1820]	; f2c <coda_grib_reopen+0xec4>
     80c:	mov	r2, r9
     810:	mov	r3, r5
     814:	ldr	r0, [r0, r1]
     818:	mov	r1, #0
     81c:	ldr	r0, [r0, #128]	; 0x80
     820:	str	r7, [sp]
     824:	bl	0 <coda_mem_raw_new>
     828:	mov	r5, r0
     82c:	mov	r0, r7
     830:	bl	0 <free>
     834:	ldr	r0, [sp, #164]	; 0xa4
     838:	movw	r1, #0
     83c:	mov	r2, r5
     840:	mov	r3, #0
     844:	movt	r1, #0
     848:	bl	0 <coda_mem_record_add_field>
     84c:	sub	r0, r6, #28
     850:	mov	r7, sl
     854:	adds	r4, r4, r0
     858:	adc	r7, sl, r0, asr #31
     85c:	b	21a8 <coda_grib_reopen+0x2140>
     860:	mov	r1, #8
     864:	ldr	r0, [sl]
     868:	adds	r2, r8, #8
     86c:	stm	sp, {r1, r7}
     870:	add	r1, sp, #192	; 0xc0
     874:	ldr	r6, [sp, #172]	; 0xac
     878:	str	r1, [sp, #8]
     87c:	adc	r3, r6, #0
     880:	bl	76fc <read_bytes>
     884:	cmn	r0, #1
     888:	ble	31fc <coda_grib_reopen+0x3194>
     88c:	ldrb	r0, [sp, #199]	; 0xc7
     890:	ldrb	r1, [sp, #192]	; 0xc0
     894:	ldrb	r2, [sp, #193]	; 0xc1
     898:	ldrb	r3, [sp, #194]	; 0xc2
     89c:	ldrb	r7, [sp, #195]	; 0xc3
     8a0:	mov	sl, #0
     8a4:	strb	r1, [sp, #199]	; 0xc7
     8a8:	strb	r0, [sp, #192]	; 0xc0
     8ac:	ldrb	r0, [sp, #198]	; 0xc6
     8b0:	strb	r0, [sp, #193]	; 0xc1
     8b4:	strb	r2, [sp, #198]	; 0xc6
     8b8:	ldrb	r0, [sp, #197]	; 0xc5
     8bc:	strb	r0, [sp, #194]	; 0xc2
     8c0:	strb	r3, [sp, #197]	; 0xc5
     8c4:	ldrb	r0, [sp, #196]	; 0xc4
     8c8:	strb	r7, [sp, #196]	; 0xc4
     8cc:	strb	r0, [sp, #195]	; 0xc3
     8d0:	bl	0 <__aeabi_read_tp>
     8d4:	mov	r5, r0
     8d8:	ldr	r0, [r0, r4]
     8dc:	mov	r1, #0
     8e0:	ldr	r0, [r0, #560]	; 0x230
     8e4:	bl	0 <coda_mem_record_new>
     8e8:	mov	r7, r0
     8ec:	ldr	r0, [sp, #160]	; 0xa0
     8f0:	mov	r1, #0
     8f4:	mov	r2, r9
     8f8:	mov	r3, #2
     8fc:	ldr	r0, [r0, #20]
     900:	str	r7, [r0, #4]
     904:	ldr	r0, [r5, r4]
     908:	ldr	r0, [r0, #284]	; 0x11c
     90c:	bl	0 <coda_mem_uint8_new>
     910:	movw	r1, #0
     914:	mov	r2, r0
     918:	mov	r0, r7
     91c:	mov	r3, #0
     920:	movt	r1, #0
     924:	bl	0 <coda_mem_record_add_field>
     928:	ldr	r0, [r5, r4]
     92c:	ldrb	r3, [fp, #-187]	; 0xffffff45
     930:	mov	r1, #0
     934:	mov	r2, r9
     938:	ldr	r0, [r0, #324]	; 0x144
     93c:	bl	0 <coda_mem_uint8_new>
     940:	movw	r1, #0
     944:	mov	r2, r0
     948:	mov	r0, r7
     94c:	mov	r3, #0
     950:	str	r7, [sp, #164]	; 0xa4
     954:	movt	r1, #0
     958:	bl	0 <coda_mem_record_add_field>
     95c:	ldr	r0, [r9, #52]	; 0x34
     960:	adds	r5, r8, #16
     964:	mov	r1, #21
     968:	str	sl, [fp, #-80]	; 0xffffffb0
     96c:	adc	r6, r6, #0
     970:	stm	sp, {r1, sl}
     974:	sub	r1, fp, #144	; 0x90
     978:	mov	r2, r5
     97c:	mov	r3, r6
     980:	str	r1, [sp, #8]
     984:	bl	76fc <read_bytes>
     988:	cmp	r0, #0
     98c:	blt	3658 <coda_grib_reopen+0x35f0>
     990:	ldrb	r0, [fp, #-140]	; 0xffffff74
     994:	cmp	r0, #1
     998:	bne	3284 <coda_grib_reopen+0x321c>
     99c:	ldr	r0, [fp, #-144]	; 0xffffff70
     9a0:	rev	sl, r0
     9a4:	bl	0 <__aeabi_read_tp>
     9a8:	ldr	r4, [pc, #1404]	; f2c <coda_grib_reopen+0xec4>
     9ac:	mov	r5, r0
     9b0:	ldrh	r1, [fp, #-139]	; 0xffffff75
     9b4:	mov	r2, r9
     9b8:	ldr	r0, [r0, r4]
     9bc:	rev16	r3, r1
     9c0:	mov	r1, #0
     9c4:	ldr	r0, [r0, #288]	; 0x120
     9c8:	bl	0 <coda_mem_uint16_new>
     9cc:	ldr	r6, [sp, #164]	; 0xa4
     9d0:	movw	r1, #0
     9d4:	mov	r2, r0
     9d8:	mov	r3, #0
     9dc:	movt	r1, #0
     9e0:	mov	r0, r6
     9e4:	bl	0 <coda_mem_record_add_field>
     9e8:	ldr	r0, [r5, r4]
     9ec:	ldrh	r1, [fp, #-137]	; 0xffffff77
     9f0:	mov	r2, r9
     9f4:	ldr	r0, [r0, #316]	; 0x13c
     9f8:	rev16	r3, r1
     9fc:	mov	r1, #0
     a00:	bl	0 <coda_mem_uint16_new>
     a04:	movw	r1, #0
     a08:	mov	r2, r0
     a0c:	mov	r0, r6
     a10:	mov	r3, #0
     a14:	movt	r1, #0
     a18:	bl	0 <coda_mem_record_add_field>
     a1c:	ldr	r0, [r5, r4]
     a20:	ldrb	r3, [fp, #-135]	; 0xffffff79
     a24:	mov	r1, #0
     a28:	mov	r2, r9
     a2c:	ldr	r0, [r0, #328]	; 0x148
     a30:	bl	0 <coda_mem_uint8_new>
     a34:	movw	r1, #0
     a38:	mov	r2, r0
     a3c:	mov	r0, r6
     a40:	mov	r3, #0
     a44:	movt	r1, #0
     a48:	bl	0 <coda_mem_record_add_field>
     a4c:	ldr	r0, [r5, r4]
     a50:	ldrb	r3, [fp, #-134]	; 0xffffff7a
     a54:	mov	r1, #0
     a58:	mov	r2, r9
     a5c:	ldr	r0, [r0, #332]	; 0x14c
     a60:	bl	0 <coda_mem_uint8_new>
     a64:	movw	r1, #0
     a68:	mov	r2, r0
     a6c:	mov	r0, r6
     a70:	mov	r3, #0
     a74:	movt	r1, #0
     a78:	bl	0 <coda_mem_record_add_field>
     a7c:	ldr	r0, [r5, r4]
     a80:	ldrb	r3, [fp, #-133]	; 0xffffff7b
     a84:	mov	r1, #0
     a88:	mov	r2, r9
     a8c:	ldr	r0, [r0, #336]	; 0x150
     a90:	bl	0 <coda_mem_uint8_new>
     a94:	movw	r1, #0
     a98:	mov	r2, r0
     a9c:	mov	r0, r6
     aa0:	mov	r3, #0
     aa4:	movt	r1, #0
     aa8:	bl	0 <coda_mem_record_add_field>
     aac:	ldr	r0, [r5, r4]
     ab0:	ldrh	r1, [fp, #-132]	; 0xffffff7c
     ab4:	mov	r2, r9
     ab8:	ldr	r0, [r0, #292]	; 0x124
     abc:	rev16	r3, r1
     ac0:	mov	r1, #0
     ac4:	bl	0 <coda_mem_uint16_new>
     ac8:	movw	r1, #0
     acc:	mov	r2, r0
     ad0:	mov	r0, r6
     ad4:	mov	r3, #0
     ad8:	movt	r1, #0
     adc:	bl	0 <coda_mem_record_add_field>
     ae0:	ldr	r0, [r5, r4]
     ae4:	ldrb	r3, [fp, #-130]	; 0xffffff7e
     ae8:	mov	r1, #0
     aec:	mov	r2, r9
     af0:	ldr	r0, [r0, #296]	; 0x128
     af4:	bl	0 <coda_mem_uint8_new>
     af8:	movw	r1, #0
     afc:	mov	r2, r0
     b00:	mov	r0, r6
     b04:	mov	r3, #0
     b08:	movt	r1, #0
     b0c:	bl	0 <coda_mem_record_add_field>
     b10:	ldr	r0, [r5, r4]
     b14:	ldrb	r3, [fp, #-129]	; 0xffffff7f
     b18:	mov	r1, #0
     b1c:	mov	r2, r9
     b20:	ldr	r0, [r0, #300]	; 0x12c
     b24:	bl	0 <coda_mem_uint8_new>
     b28:	movw	r1, #0
     b2c:	mov	r2, r0
     b30:	mov	r0, r6
     b34:	mov	r3, #0
     b38:	movt	r1, #0
     b3c:	bl	0 <coda_mem_record_add_field>
     b40:	ldr	r0, [r5, r4]
     b44:	ldrb	r3, [fp, #-128]	; 0xffffff80
     b48:	mov	r1, #0
     b4c:	mov	r2, r9
     b50:	ldr	r0, [r0, #304]	; 0x130
     b54:	bl	0 <coda_mem_uint8_new>
     b58:	movw	r1, #0
     b5c:	mov	r2, r0
     b60:	mov	r0, r6
     b64:	mov	r3, #0
     b68:	movt	r1, #0
     b6c:	bl	0 <coda_mem_record_add_field>
     b70:	ldr	r0, [r5, r4]
     b74:	ldrb	r3, [fp, #-127]	; 0xffffff81
     b78:	mov	r1, #0
     b7c:	mov	r2, r9
     b80:	ldr	r0, [r0, #308]	; 0x134
     b84:	bl	0 <coda_mem_uint8_new>
     b88:	movw	r1, #0
     b8c:	mov	r2, r0
     b90:	mov	r0, r6
     b94:	mov	r3, #0
     b98:	movt	r1, #0
     b9c:	bl	0 <coda_mem_record_add_field>
     ba0:	ldr	r0, [r5, r4]
     ba4:	ldrb	r3, [fp, #-126]	; 0xffffff82
     ba8:	mov	r1, #0
     bac:	mov	r2, r9
     bb0:	ldr	r0, [r0, #312]	; 0x138
     bb4:	bl	0 <coda_mem_uint8_new>
     bb8:	movw	r1, #0
     bbc:	mov	r2, r0
     bc0:	mov	r0, r6
     bc4:	mov	r3, #0
     bc8:	movt	r1, #0
     bcc:	bl	0 <coda_mem_record_add_field>
     bd0:	ldr	r0, [r5, r4]
     bd4:	ldrb	r3, [fp, #-125]	; 0xffffff83
     bd8:	mov	r1, #0
     bdc:	mov	r2, r9
     be0:	ldr	r0, [r0, #340]	; 0x154
     be4:	bl	0 <coda_mem_uint8_new>
     be8:	movw	r1, #0
     bec:	mov	r2, r0
     bf0:	mov	r0, r6
     bf4:	mov	r3, #0
     bf8:	movt	r1, #0
     bfc:	bl	0 <coda_mem_record_add_field>
     c00:	ldr	r0, [r5, r4]
     c04:	ldrb	r3, [fp, #-124]	; 0xffffff84
     c08:	mov	r1, #0
     c0c:	mov	r2, r9
     c10:	ldr	r0, [r0, #344]	; 0x158
     c14:	bl	0 <coda_mem_uint8_new>
     c18:	movw	r1, #0
     c1c:	mov	r2, r0
     c20:	mov	r0, r6
     c24:	mov	r3, #0
     c28:	movt	r1, #0
     c2c:	bl	0 <coda_mem_record_add_field>
     c30:	ldr	r0, [r5, r4]
     c34:	mov	r1, #0
     c38:	ldr	r0, [r0, #548]	; 0x224
     c3c:	bl	0 <coda_mem_array_new>
     c40:	movw	r1, #0
     c44:	mov	r2, r0
     c48:	mov	r0, r6
     c4c:	mov	r3, #0
     c50:	movt	r1, #0
     c54:	str	r2, [sp, #32]
     c58:	bl	0 <coda_mem_record_add_field>
     c5c:	ldr	r0, [r5, r4]
     c60:	mov	r1, #0
     c64:	ldr	r0, [r0, #552]	; 0x228
     c68:	bl	0 <coda_mem_array_new>
     c6c:	movw	r1, #0
     c70:	mov	r2, r0
     c74:	mov	r0, r6
     c78:	mov	r3, #0
     c7c:	movt	r1, #0
     c80:	str	r2, [sp, #36]	; 0x24
     c84:	bl	0 <coda_mem_record_add_field>
     c88:	ldr	r0, [r5, r4]
     c8c:	mov	r1, #0
     c90:	ldr	r0, [r0, #556]	; 0x22c
     c94:	bl	0 <coda_mem_array_new>
     c98:	movw	r1, #0
     c9c:	mov	r2, r0
     ca0:	mov	r0, r6
     ca4:	mov	r3, #0
     ca8:	movt	r1, #0
     cac:	str	r2, [sp, #44]	; 0x2c
     cb0:	bl	0 <coda_mem_record_add_field>
     cb4:	ldr	r0, [sp, #172]	; 0xac
     cb8:	adds	r6, r8, #37	; 0x25
     cbc:	adc	r3, r0, #0
     cc0:	cmp	sl, #22
     cc4:	bcc	cd4 <coda_grib_reopen+0xc6c>
     cc8:	sub	r0, sl, #21
     ccc:	adds	r6, r6, r0
     cd0:	adc	r3, r3, #0
     cd4:	ldr	r0, [sp, #184]	; 0xb8
     cd8:	mov	r1, #4
     cdc:	mov	r2, r6
     ce0:	mov	sl, r3
     ce4:	str	r1, [sp]
     ce8:	mov	r1, #0
     cec:	str	r1, [sp, #4]
     cf0:	sub	r1, fp, #144	; 0x90
     cf4:	str	r1, [sp, #8]
     cf8:	ldr	r0, [r0]
     cfc:	bl	76fc <read_bytes>
     d00:	cmp	r0, #0
     d04:	blt	3658 <coda_grib_reopen+0x35f0>
     d08:	mov	r0, #0
     d0c:	vmov.i32	d8, #0	; 0x00000000
     d10:	vmov.i32	d9, #0	; 0x00000000
     d14:	str	r0, [sp, #140]	; 0x8c
     d18:	mov	r0, #1
     d1c:	str	r0, [sp, #168]	; 0xa8
     d20:	mov	r0, #0
     d24:	str	r0, [sp, #132]	; 0x84
     d28:	mov	r0, #0
     d2c:	str	r0, [sp, #116]	; 0x74
     d30:	mov	r0, #0
     d34:	str	r0, [sp, #136]	; 0x88
     d38:	mov	r0, #0
     d3c:	str	r0, [sp, #100]	; 0x64
     d40:	mov	r0, #0
     d44:	str	r0, [sp, #128]	; 0x80
     d48:	mov	r0, #0
     d4c:	str	r0, [sp, #124]	; 0x7c
     d50:	mov	r0, #0
     d54:	str	r0, [sp, #96]	; 0x60
     d58:	mov	r0, #0
     d5c:	str	r0, [sp, #120]	; 0x78
     d60:	mov	r0, #0
     d64:	str	r0, [sp, #108]	; 0x6c
     d68:	mov	r0, #0
     d6c:	str	r0, [sp, #84]	; 0x54
     d70:	mov	r0, #0
     d74:	str	r0, [sp, #80]	; 0x50
     d78:	mov	r0, #0
     d7c:	str	r0, [sp, #92]	; 0x5c
     d80:	mov	r0, #0
     d84:	str	r0, [sp, #76]	; 0x4c
     d88:	mov	r0, #0
     d8c:	str	r0, [sp, #112]	; 0x70
     d90:	mvn	r0, #0
     d94:	str	r0, [sp, #72]	; 0x48
     d98:	mvn	r0, #0
     d9c:	str	r0, [sp, #68]	; 0x44
     da0:	mov	r0, #0
     da4:	str	r0, [sp, #104]	; 0x68
     da8:	mvn	r0, #0
     dac:	str	r0, [sp, #148]	; 0x94
     db0:	mvn	r0, #0
     db4:	str	r0, [sp, #88]	; 0x58
     db8:	mov	r0, #0
     dbc:	str	r0, [sp, #64]	; 0x40
     dc0:	mov	r0, #0
     dc4:	str	r0, [sp, #40]	; 0x28
     dc8:	mvn	r0, #0
     dcc:	str	r0, [sp, #60]	; 0x3c
     dd0:	mvn	r0, #0
     dd4:	str	r0, [sp, #56]	; 0x38
     dd8:	mov	r0, #0
     ddc:	str	r0, [sp, #144]	; 0x90
     de0:	mov	r0, sl
     de4:	movw	r1, #14135	; 0x3737
     de8:	adds	r2, r6, #4
     dec:	ldr	r0, [fp, #-144]	; 0xffffff70
     df0:	movt	r1, #14135	; 0x3737
     df4:	adc	r3, sl, #0
     df8:	cmp	r0, r1
     dfc:	beq	2b2c <coda_grib_reopen+0x2ac4>
     e00:	ldr	r0, [sp, #184]	; 0xb8
     e04:	mov	r1, #1
     e08:	ldr	r5, [fp, #-144]	; 0xffffff70
     e0c:	str	r1, [sp]
     e10:	mov	r1, #0
     e14:	str	r1, [sp, #4]
     e18:	sub	r1, fp, #144	; 0x90
     e1c:	str	r1, [sp, #8]
     e20:	ldr	r0, [r0]
     e24:	bl	76fc <read_bytes>
     e28:	cmp	r0, #0
     e2c:	blt	3658 <coda_grib_reopen+0x35f0>
     e30:	ldrb	r0, [fp, #-144]	; 0xffffff70
     e34:	adds	r2, r6, #5
     e38:	mov	r7, r6
     e3c:	adc	r6, sl, #0
     e40:	sub	r0, r0, #2
     e44:	cmp	r0, #5
     e48:	bhi	31a0 <coda_grib_reopen+0x3138>
     e4c:	add	r1, pc, #4
     e50:	rev	r4, r5
     e54:	ldr	pc, [r1, r0, lsl #2]
     e58:	.word	0x00000e70
     e5c:	.word	0x00000f30
     e60:	.word	0x00001550
     e64:	.word	0x000016a4
     e68:	.word	0x00001818
     e6c:	.word	0x000018a8
     e70:	ldr	r0, [sp, #168]	; 0xa8
     e74:	uxtb	r3, r0
     e78:	cmp	r3, #1
     e7c:	cmpne	r3, #7
     e80:	bne	341c <coda_grib_reopen+0x33b4>
     e84:	cmp	r4, #6
     e88:	bcc	1dcc <coda_grib_reopen+0x1d64>
     e8c:	sub	r4, r4, #5
     e90:	mov	sl, r2
     e94:	mov	r5, r6
     e98:	mov	r0, r4
     e9c:	bl	0 <malloc>
     ea0:	cmp	r0, #0
     ea4:	beq	3580 <coda_grib_reopen+0x3518>
     ea8:	mov	r7, r0
     eac:	ldr	r0, [sp, #184]	; 0xb8
     eb0:	mov	r1, #0
     eb4:	mov	r2, sl
     eb8:	mov	r3, r5
     ebc:	str	r4, [sp, #168]	; 0xa8
     ec0:	str	r4, [sp]
     ec4:	mov	r4, r5
     ec8:	ldr	r0, [r0]
     ecc:	stmib	sp, {r1, r7}
     ed0:	bl	76fc <read_bytes>
     ed4:	cmn	r0, #1
     ed8:	ble	3390 <coda_grib_reopen+0x3328>
     edc:	bl	0 <__aeabi_read_tp>
     ee0:	ldr	r1, [pc, #68]	; f2c <coda_grib_reopen+0xec4>
     ee4:	ldr	r5, [sp, #168]	; 0xa8
     ee8:	mov	r2, r9
     eec:	ldr	r0, [r0, r1]
     ef0:	mov	r1, #0
     ef4:	mov	r3, r5
     ef8:	ldr	r0, [r0, #348]	; 0x15c
     efc:	str	r7, [sp]
     f00:	bl	0 <coda_mem_raw_new>
     f04:	mov	r1, r0
     f08:	ldr	r0, [sp, #32]
     f0c:	bl	0 <coda_mem_array_add_element>
     f10:	ldr	r0, [sp, #88]	; 0x58
     f14:	adds	r6, sl, r5
     f18:	adc	r7, r4, #0
     f1c:	add	r0, r0, #1
     f20:	str	r0, [sp, #88]	; 0x58
     f24:	mov	r0, #2
     f28:	b	2158 <coda_grib_reopen+0x20f0>
     f2c:	.word	0x00000000
     f30:	ldr	r0, [sp, #168]	; 0xa8
     f34:	uxtb	r3, r0
     f38:	cmp	r3, #7
     f3c:	bhi	33ac <coda_grib_reopen+0x3344>
     f40:	mov	r0, #1
     f44:	mov	r1, #134	; 0x86
     f48:	tst	r1, r0, lsl r3
     f4c:	beq	33ac <coda_grib_reopen+0x3344>
     f50:	ldr	r0, [sp, #184]	; 0xb8
     f54:	mov	r1, #9
     f58:	mov	r3, r6
     f5c:	str	r1, [sp]
     f60:	mov	r1, #0
     f64:	str	r1, [sp, #4]
     f68:	sub	r1, fp, #144	; 0x90
     f6c:	str	r1, [sp, #8]
     f70:	ldr	r0, [r0]
     f74:	bl	76fc <read_bytes>
     f78:	cmp	r0, #0
     f7c:	blt	3658 <coda_grib_reopen+0x35f0>
     f80:	mov	r6, r7
     f84:	str	r4, [sp, #152]	; 0x98
     f88:	bl	0 <__aeabi_read_tp>
     f8c:	ldr	r4, [pc, #-104]	; f2c <coda_grib_reopen+0xec4>
     f90:	mov	r7, r0
     f94:	mov	r1, #0
     f98:	ldr	r0, [r0, r4]
     f9c:	mov	r5, r4
     fa0:	ldr	r0, [r0, #540]	; 0x21c
     fa4:	bl	0 <coda_mem_record_new>
     fa8:	mov	r4, r0
     fac:	ldr	r0, [r7, r5]
     fb0:	ldr	r3, [sp, #88]	; 0x58
     fb4:	mov	r1, #0
     fb8:	mov	r2, r9
     fbc:	ldr	r0, [r0, #276]	; 0x114
     fc0:	bl	0 <coda_mem_int32_new>
     fc4:	movw	r1, #0
     fc8:	mov	r2, r0
     fcc:	mov	r0, r4
     fd0:	mov	r3, #0
     fd4:	movt	r1, #0
     fd8:	bl	0 <coda_mem_record_add_field>
     fdc:	ldr	r0, [r7, r5]
     fe0:	ldrb	r5, [fp, #-144]	; 0xffffff70
     fe4:	mov	r1, #0
     fe8:	mov	r2, r9
     fec:	ldr	r0, [r0, #448]	; 0x1c0
     ff0:	mov	r3, r5
     ff4:	bl	0 <coda_mem_uint8_new>
     ff8:	movw	r1, #0
     ffc:	mov	r2, r0
    1000:	mov	r0, r4
    1004:	mov	r3, #0
    1008:	movt	r1, #0
    100c:	bl	0 <coda_mem_record_add_field>
    1010:	ldr	r0, [pc, #-236]	; f2c <coda_grib_reopen+0xec4>
    1014:	ldr	r1, [fp, #-143]	; 0xffffff71
    1018:	mov	r2, r9
    101c:	ldr	r0, [r7, r0]
    1020:	rev	r3, r1
    1024:	mov	r1, #0
    1028:	ldr	r0, [r0, #452]	; 0x1c4
    102c:	bl	0 <coda_mem_uint32_new>
    1030:	movw	r1, #0
    1034:	mov	r2, r0
    1038:	mov	r0, r4
    103c:	mov	r3, #0
    1040:	movt	r1, #0
    1044:	bl	0 <coda_mem_record_add_field>
    1048:	ldr	r0, [pc, #-292]	; f2c <coda_grib_reopen+0xec4>
    104c:	ldrb	r1, [fp, #-139]	; 0xffffff75
    1050:	ldrb	r3, [fp, #-138]	; 0xffffff76
    1054:	mov	r2, r9
    1058:	ldr	r0, [r7, r0]
    105c:	str	r1, [sp, #168]	; 0xa8
    1060:	mov	r1, #0
    1064:	str	r3, [sp, #48]	; 0x30
    1068:	ldr	r0, [r0, #456]	; 0x1c8
    106c:	bl	0 <coda_mem_uint8_new>
    1070:	movw	r1, #0
    1074:	mov	r2, r0
    1078:	mov	r0, r4
    107c:	mov	r3, #0
    1080:	movt	r1, #0
    1084:	bl	0 <coda_mem_record_add_field>
    1088:	ldr	r0, [pc, #-356]	; f2c <coda_grib_reopen+0xec4>
    108c:	ldrh	r1, [fp, #-137]	; 0xffffff77
    1090:	mov	r2, r9
    1094:	ldr	r0, [r7, r0]
    1098:	rev16	r7, r1
    109c:	mov	r1, #0
    10a0:	mov	r3, r7
    10a4:	ldr	r0, [r0, #520]	; 0x208
    10a8:	bl	0 <coda_mem_uint16_new>
    10ac:	movw	r1, #0
    10b0:	mov	r2, r0
    10b4:	mov	r0, r4
    10b8:	mov	r3, #0
    10bc:	str	r4, [sp, #52]	; 0x34
    10c0:	mov	r4, r7
    10c4:	movt	r1, #0
    10c8:	bl	0 <coda_mem_record_add_field>
    10cc:	adds	r2, r6, #14
    10d0:	adc	r3, sl, #0
    10d4:	cmp	r5, #0
    10d8:	bne	325c <coda_grib_reopen+0x31f4>
    10dc:	mov	r7, sl
    10e0:	cmp	r4, #4
    10e4:	bcc	10f8 <coda_grib_reopen+0x1090>
    10e8:	movw	r0, #65532	; 0xfffc
    10ec:	and	r0, r4, r0
    10f0:	cmp	r0, #40	; 0x28
    10f4:	bne	325c <coda_grib_reopen+0x31f4>
    10f8:	ldr	r0, [sp, #184]	; 0xb8
    10fc:	mov	r1, #58	; 0x3a
    1100:	str	r1, [sp]
    1104:	mov	r1, #0
    1108:	str	r1, [sp, #4]
    110c:	sub	r1, fp, #144	; 0x90
    1110:	str	r1, [sp, #8]
    1114:	ldr	r0, [r0]
    1118:	bl	76fc <read_bytes>
    111c:	cmn	r0, #1
    1120:	ble	3278 <coda_grib_reopen+0x3210>
    1124:	bl	0 <__aeabi_read_tp>
    1128:	str	r4, [sp, #28]
    112c:	ldr	r4, [pc, #-520]	; f2c <coda_grib_reopen+0xec4>
    1130:	mov	r5, r0
    1134:	ldrb	r3, [fp, #-144]	; 0xffffff70
    1138:	mov	r1, #0
    113c:	mov	r2, r9
    1140:	ldr	r0, [r0, r4]
    1144:	mov	sl, r4
    1148:	ldr	r0, [r0, #360]	; 0x168
    114c:	bl	0 <coda_mem_uint8_new>
    1150:	ldr	r4, [sp, #52]	; 0x34
    1154:	movw	r1, #0
    1158:	mov	r2, r0
    115c:	mov	r3, #0
    1160:	movt	r1, #0
    1164:	mov	r0, r4
    1168:	bl	0 <coda_mem_record_add_field>
    116c:	ldr	r0, [r5, sl]
    1170:	ldrb	r3, [fp, #-143]	; 0xffffff71
    1174:	mov	r1, #0
    1178:	mov	r2, r9
    117c:	ldr	r0, [r0, #364]	; 0x16c
    1180:	bl	0 <coda_mem_uint8_new>
    1184:	movw	r1, #0
    1188:	mov	r2, r0
    118c:	mov	r0, r4
    1190:	mov	r3, #0
    1194:	movt	r1, #0
    1198:	bl	0 <coda_mem_record_add_field>
    119c:	ldr	r0, [r5, sl]
    11a0:	ldr	r1, [fp, #-142]	; 0xffffff72
    11a4:	mov	r2, r9
    11a8:	ldr	r0, [r0, #368]	; 0x170
    11ac:	rev	r3, r1
    11b0:	mov	r1, #0
    11b4:	bl	0 <coda_mem_uint32_new>
    11b8:	movw	r1, #0
    11bc:	mov	r2, r0
    11c0:	mov	r0, r4
    11c4:	mov	r3, #0
    11c8:	movt	r1, #0
    11cc:	bl	0 <coda_mem_record_add_field>
    11d0:	ldr	r0, [r5, sl]
    11d4:	ldrb	r3, [fp, #-138]	; 0xffffff76
    11d8:	mov	r1, #0
    11dc:	mov	r2, r9
    11e0:	ldr	r0, [r0, #372]	; 0x174
    11e4:	bl	0 <coda_mem_uint8_new>
    11e8:	movw	r1, #0
    11ec:	mov	r2, r0
    11f0:	mov	r0, r4
    11f4:	mov	r3, #0
    11f8:	movt	r1, #0
    11fc:	bl	0 <coda_mem_record_add_field>
    1200:	ldr	r0, [r5, sl]
    1204:	ldr	r1, [fp, #-137]	; 0xffffff77
    1208:	mov	r2, r9
    120c:	ldr	r0, [r0, #376]	; 0x178
    1210:	rev	r3, r1
    1214:	mov	r1, #0
    1218:	bl	0 <coda_mem_uint32_new>
    121c:	movw	r1, #0
    1220:	mov	r2, r0
    1224:	mov	r0, r4
    1228:	mov	r3, #0
    122c:	movt	r1, #0
    1230:	bl	0 <coda_mem_record_add_field>
    1234:	ldr	r0, [r5, sl]
    1238:	ldrb	r3, [fp, #-133]	; 0xffffff7b
    123c:	mov	r1, #0
    1240:	mov	r2, r9
    1244:	ldr	r0, [r0, #380]	; 0x17c
    1248:	bl	0 <coda_mem_uint8_new>
    124c:	movw	r1, #0
    1250:	mov	r2, r0
    1254:	mov	r0, r4
    1258:	mov	r3, #0
    125c:	movt	r1, #0
    1260:	bl	0 <coda_mem_record_add_field>
    1264:	ldr	r0, [r5, sl]
    1268:	ldr	r1, [fp, #-132]	; 0xffffff7c
    126c:	mov	r2, r9
    1270:	ldr	r0, [r0, #384]	; 0x180
    1274:	rev	r3, r1
    1278:	mov	r1, #0
    127c:	bl	0 <coda_mem_uint32_new>
    1280:	movw	r1, #0
    1284:	mov	r2, r0
    1288:	mov	r0, r4
    128c:	mov	r3, #0
    1290:	movt	r1, #0
    1294:	bl	0 <coda_mem_record_add_field>
    1298:	ldr	r0, [r5, sl]
    129c:	ldr	r1, [fp, #-128]	; 0xffffff80
    12a0:	mov	r2, r9
    12a4:	ldr	r0, [r0, #388]	; 0x184
    12a8:	rev	r3, r1
    12ac:	mov	r1, #0
    12b0:	str	r3, [sp, #24]
    12b4:	bl	0 <coda_mem_uint32_new>
    12b8:	movw	r1, #0
    12bc:	mov	r2, r0
    12c0:	mov	r0, r4
    12c4:	mov	r3, #0
    12c8:	movt	r1, #0
    12cc:	bl	0 <coda_mem_record_add_field>
    12d0:	ldr	r0, [r5, sl]
    12d4:	ldr	r1, [fp, #-124]	; 0xffffff84
    12d8:	mov	r2, r9
    12dc:	ldr	r0, [r0, #392]	; 0x188
    12e0:	rev	r3, r1
    12e4:	mov	r1, #0
    12e8:	str	r3, [sp, #20]
    12ec:	bl	0 <coda_mem_uint32_new>
    12f0:	movw	r1, #0
    12f4:	mov	r2, r0
    12f8:	mov	r0, r4
    12fc:	mov	r3, #0
    1300:	movt	r1, #0
    1304:	bl	0 <coda_mem_record_add_field>
    1308:	ldr	r0, [r5, sl]
    130c:	ldr	r1, [fp, #-120]	; 0xffffff88
    1310:	mov	r2, r9
    1314:	ldr	r0, [r0, #396]	; 0x18c
    1318:	rev	r3, r1
    131c:	mov	r1, #0
    1320:	bl	0 <coda_mem_uint32_new>
    1324:	movw	r1, #0
    1328:	mov	r2, r0
    132c:	mov	r0, r4
    1330:	mov	r3, #0
    1334:	movt	r1, #0
    1338:	bl	0 <coda_mem_record_add_field>
    133c:	ldr	r0, [r5, sl]
    1340:	ldr	r1, [fp, #-116]	; 0xffffff8c
    1344:	mov	r2, r9
    1348:	ldr	r0, [r0, #400]	; 0x190
    134c:	rev	r3, r1
    1350:	mov	r1, #0
    1354:	bl	0 <coda_mem_uint32_new>
    1358:	movw	r1, #0
    135c:	mov	r2, r0
    1360:	mov	r0, r4
    1364:	mov	r3, #0
    1368:	movt	r1, #0
    136c:	bl	0 <coda_mem_record_add_field>
    1370:	ldrb	r0, [fp, #-112]	; 0xffffff90
    1374:	ldrb	r1, [fp, #-111]	; 0xffffff91
    1378:	ldrb	r2, [fp, #-110]	; 0xffffff92
    137c:	ldrb	r3, [fp, #-109]	; 0xffffff93
    1380:	orr	r1, r1, r0, lsl #8
    1384:	tst	r0, #128	; 0x80
    1388:	ldr	r0, [r5, sl]
    138c:	orr	r1, r2, r1, lsl #8
    1390:	mov	r2, r9
    1394:	orr	r3, r3, r1, lsl #8
    1398:	mov	r1, #0
    139c:	rsbne	r3, r3, #-2147483648	; 0x80000000
    13a0:	ldr	r0, [r0, #404]	; 0x194
    13a4:	bl	0 <coda_mem_int32_new>
    13a8:	movw	r1, #0
    13ac:	mov	r2, r0
    13b0:	mov	r0, r4
    13b4:	mov	r3, #0
    13b8:	movt	r1, #0
    13bc:	bl	0 <coda_mem_record_add_field>
    13c0:	ldrb	r0, [fp, #-108]	; 0xffffff94
    13c4:	ldrb	r1, [fp, #-107]	; 0xffffff95
    13c8:	ldrb	r2, [fp, #-106]	; 0xffffff96
    13cc:	ldrb	r3, [fp, #-105]	; 0xffffff97
    13d0:	orr	r1, r1, r0, lsl #8
    13d4:	tst	r0, #128	; 0x80
    13d8:	ldr	r0, [r5, sl]
    13dc:	orr	r1, r2, r1, lsl #8
    13e0:	mov	r2, r9
    13e4:	orr	r3, r3, r1, lsl #8
    13e8:	mov	r1, #0
    13ec:	rsbne	r3, r3, #-2147483648	; 0x80000000
    13f0:	ldr	r0, [r0, #408]	; 0x198
    13f4:	bl	0 <coda_mem_int32_new>
    13f8:	movw	r1, #0
    13fc:	mov	r2, r0
    1400:	mov	r0, r4
    1404:	mov	r3, #0
    1408:	movt	r1, #0
    140c:	bl	0 <coda_mem_record_add_field>
    1410:	ldr	r0, [r5, sl]
    1414:	ldrb	r3, [fp, #-104]	; 0xffffff98
    1418:	mov	r1, #0
    141c:	mov	r2, r9
    1420:	ldr	r0, [r0, #412]	; 0x19c
    1424:	bl	0 <coda_mem_uint8_new>
    1428:	movw	r1, #0
    142c:	mov	r2, r0
    1430:	mov	r0, r4
    1434:	mov	r3, #0
    1438:	movt	r1, #0
    143c:	bl	0 <coda_mem_record_add_field>
    1440:	ldrb	r0, [fp, #-103]	; 0xffffff99
    1444:	ldrb	r1, [fp, #-102]	; 0xffffff9a
    1448:	ldrb	r2, [fp, #-101]	; 0xffffff9b
    144c:	ldrb	r3, [fp, #-100]	; 0xffffff9c
    1450:	orr	r1, r1, r0, lsl #8
    1454:	tst	r0, #128	; 0x80
    1458:	ldr	r0, [r5, sl]
    145c:	orr	r1, r2, r1, lsl #8
    1460:	mov	r2, r9
    1464:	orr	r3, r3, r1, lsl #8
    1468:	mov	r1, #0
    146c:	rsbne	r3, r3, #-2147483648	; 0x80000000
    1470:	ldr	r0, [r0, #416]	; 0x1a0
    1474:	bl	0 <coda_mem_int32_new>
    1478:	movw	r1, #0
    147c:	mov	r2, r0
    1480:	mov	r0, r4
    1484:	mov	r3, #0
    1488:	movt	r1, #0
    148c:	bl	0 <coda_mem_record_add_field>
    1490:	ldrb	r0, [fp, #-99]	; 0xffffff9d
    1494:	ldrb	r1, [fp, #-98]	; 0xffffff9e
    1498:	ldrb	r2, [fp, #-97]	; 0xffffff9f
    149c:	ldrb	r3, [fp, #-96]	; 0xffffffa0
    14a0:	orr	r1, r1, r0, lsl #8
    14a4:	tst	r0, #128	; 0x80
    14a8:	ldr	r0, [r5, sl]
    14ac:	orr	r1, r2, r1, lsl #8
    14b0:	mov	r2, r9
    14b4:	orr	r3, r3, r1, lsl #8
    14b8:	mov	r1, #0
    14bc:	rsbne	r3, r3, #-2147483648	; 0x80000000
    14c0:	ldr	r0, [r0, #420]	; 0x1a4
    14c4:	bl	0 <coda_mem_int32_new>
    14c8:	movw	r1, #0
    14cc:	mov	r2, r0
    14d0:	mov	r0, r4
    14d4:	mov	r3, #0
    14d8:	movt	r1, #0
    14dc:	bl	0 <coda_mem_record_add_field>
    14e0:	ldr	r0, [r5, sl]
    14e4:	ldr	r1, [fp, #-95]	; 0xffffffa1
    14e8:	mov	r2, r9
    14ec:	ldr	r0, [r0, #424]	; 0x1a8
    14f0:	rev	r3, r1
    14f4:	mov	r1, #0
    14f8:	bl	0 <coda_mem_uint32_new>
    14fc:	movw	r1, #0
    1500:	mov	r2, r0
    1504:	mov	r0, r4
    1508:	mov	r3, #0
    150c:	movt	r1, #0
    1510:	bl	0 <coda_mem_record_add_field>
    1514:	ldr	r1, [fp, #-91]	; 0xffffffa5
    1518:	ldr	r0, [r5, sl]
    151c:	rev	r3, r1
    1520:	ldr	r1, [sp, #28]
    1524:	cmp	r1, #40	; 0x28
    1528:	bcc	1df4 <coda_grib_reopen+0x1d8c>
    152c:	ldr	r0, [r0, #432]	; 0x1b0
    1530:	mov	r1, #0
    1534:	mov	r2, r9
    1538:	bl	0 <coda_mem_uint32_new>
    153c:	movw	r1, #0
    1540:	mov	r2, r0
    1544:	mov	r0, r4
    1548:	movt	r1, #0
    154c:	b	1e14 <coda_grib_reopen+0x1dac>
    1550:	ldr	r1, [sp, #168]	; 0xa8
    1554:	orr	r0, r1, #4
    1558:	uxtb	r0, r0
    155c:	cmp	r0, #7
    1560:	bne	33bc <coda_grib_reopen+0x3354>
    1564:	ldr	r0, [sp, #184]	; 0xb8
    1568:	mov	r1, #4
    156c:	mov	r3, r6
    1570:	str	r1, [sp]
    1574:	mov	r1, #0
    1578:	str	r1, [sp, #4]
    157c:	sub	r1, fp, #144	; 0x90
    1580:	str	r1, [sp, #8]
    1584:	ldr	r0, [r0]
    1588:	bl	76fc <read_bytes>
    158c:	cmp	r0, #0
    1590:	blt	3658 <coda_grib_reopen+0x35f0>
    1594:	ldrb	r0, [fp, #-142]	; 0xffffff72
    1598:	ldrb	r1, [fp, #-141]	; 0xffffff73
    159c:	ldrh	r5, [fp, #-144]	; 0xffffff70
    15a0:	mov	r6, r7
    15a4:	orr	r2, r1, r0, lsl #8
    15a8:	cmp	r2, #7
    15ac:	bcc	15bc <coda_grib_reopen+0x1554>
    15b0:	cmp	r2, #15
    15b4:	cmpne	r2, #51	; 0x33
    15b8:	bne	2198 <coda_grib_reopen+0x2130>
    15bc:	ldr	r0, [sp, #184]	; 0xb8
    15c0:	mov	r1, #25
    15c4:	adds	r2, r6, #9
    15c8:	str	r1, [sp]
    15cc:	mov	r1, #0
    15d0:	adc	r3, sl, #0
    15d4:	str	r1, [sp, #4]
    15d8:	sub	r1, fp, #144	; 0x90
    15dc:	str	r1, [sp, #8]
    15e0:	ldr	r0, [r0]
    15e4:	bl	76fc <read_bytes>
    15e8:	cmp	r0, #0
    15ec:	blt	3658 <coda_grib_reopen+0x35f0>
    15f0:	ldrb	r0, [fp, #-136]	; 0xffffff78
    15f4:	ldrb	r1, [fp, #-131]	; 0xffffff7d
    15f8:	ldr	r2, [fp, #-135]	; 0xffffff79
    15fc:	ldrh	r3, [fp, #-139]	; 0xffffff75
    1600:	str	r4, [sp, #152]	; 0x98
    1604:	str	r0, [sp, #124]	; 0x7c
    1608:	ldrb	r0, [fp, #-137]	; 0xffffff77
    160c:	cmp	r1, #255	; 0xff
    1610:	str	r1, [sp, #120]	; 0x78
    1614:	str	r0, [sp, #128]	; 0x80
    1618:	ldrb	r0, [fp, #-140]	; 0xffffff74
    161c:	str	r0, [sp, #136]	; 0x88
    1620:	ldrb	r0, [fp, #-144]	; 0xffffff70
    1624:	str	r0, [sp, #112]	; 0x70
    1628:	ldrb	r0, [fp, #-143]	; 0xffffff71
    162c:	str	r0, [sp, #140]	; 0x8c
    1630:	ldrb	r0, [fp, #-142]	; 0xffffff72
    1634:	str	r0, [sp, #132]	; 0x84
    1638:	ldrb	r0, [fp, #-141]	; 0xffffff73
    163c:	str	r0, [sp, #116]	; 0x74
    1640:	beq	1ea0 <coda_grib_reopen+0x1e38>
    1644:	ldr	r0, [fp, #-129]	; 0xffffff7f
    1648:	mov	r7, sl
    164c:	rev	r1, r0
    1650:	ldrsb	r0, [fp, #-130]	; 0xffffff7e
    1654:	vmov	s0, r1
    1658:	vcvt.f64.s32	d8, s0
    165c:	cmn	r0, #1
    1660:	ble	1688 <coda_grib_reopen+0x1620>
    1664:	cmp	r0, #0
    1668:	beq	1ebc <coda_grib_reopen+0x1e54>
    166c:	sub	r1, r0, #1
    1670:	sxtb	r0, r0
    1674:	vdiv.f64	d8, d8, d12
    1678:	cmp	r0, #1
    167c:	mov	r0, r1
    1680:	bgt	166c <coda_grib_reopen+0x1604>
    1684:	b	1ebc <coda_grib_reopen+0x1e54>
    1688:	add	r1, r0, #1
    168c:	sxtb	r0, r0
    1690:	vmul.f64	d8, d8, d12
    1694:	cmn	r0, #1
    1698:	mov	r0, r1
    169c:	blt	1688 <coda_grib_reopen+0x1620>
    16a0:	b	1ebc <coda_grib_reopen+0x1e54>
    16a4:	ldr	r0, [sp, #168]	; 0xa8
    16a8:	uxtb	r3, r0
    16ac:	cmp	r3, #4
    16b0:	bne	33d0 <coda_grib_reopen+0x3368>
    16b4:	ldr	r0, [sp, #184]	; 0xb8
    16b8:	mov	r1, #6
    16bc:	mov	r3, r6
    16c0:	str	r1, [sp]
    16c4:	mov	r1, #0
    16c8:	str	r1, [sp, #4]
    16cc:	sub	r1, fp, #144	; 0x90
    16d0:	str	r1, [sp, #8]
    16d4:	ldr	r0, [r0]
    16d8:	bl	76fc <read_bytes>
    16dc:	cmp	r0, #0
    16e0:	blt	3658 <coda_grib_reopen+0x35f0>
    16e4:	ldrb	r0, [fp, #-140]	; 0xffffff74
    16e8:	ldrb	r1, [fp, #-139]	; 0xffffff75
    16ec:	orr	r2, r1, r0, lsl #8
    16f0:	cmp	r2, #1
    16f4:	bhi	3438 <coda_grib_reopen+0x33d0>
    16f8:	ldr	r0, [sp, #184]	; 0xb8
    16fc:	mov	r1, #4
    1700:	ldr	r5, [fp, #-144]	; 0xffffff70
    1704:	adds	r2, r7, #11
    1708:	str	r1, [sp]
    170c:	mov	r1, #0
    1710:	adc	r3, sl, #0
    1714:	str	r1, [sp, #4]
    1718:	sub	r1, fp, #80	; 0x50
    171c:	str	r1, [sp, #8]
    1720:	ldr	r0, [r0]
    1724:	bl	76fc <read_bytes>
    1728:	cmp	r0, #0
    172c:	blt	3658 <coda_grib_reopen+0x35f0>
    1730:	ldrb	r0, [fp, #-80]	; 0xffffffb0
    1734:	ldrb	r1, [fp, #-79]	; 0xffffffb1
    1738:	ldrb	r2, [fp, #-78]	; 0xffffffb2
    173c:	ldrb	r3, [fp, #-77]	; 0xffffffb3
    1740:	strb	r0, [fp, #-77]	; 0xffffffb3
    1744:	ldr	r0, [sp, #184]	; 0xb8
    1748:	strb	r3, [fp, #-80]	; 0xffffffb0
    174c:	strb	r2, [fp, #-79]	; 0xffffffb1
    1750:	strb	r1, [fp, #-78]	; 0xffffffb2
    1754:	mov	r1, #5
    1758:	adds	r2, r7, #15
    175c:	str	r1, [sp]
    1760:	mov	r1, #0
    1764:	adc	r3, sl, #0
    1768:	str	r1, [sp, #4]
    176c:	sub	r1, fp, #144	; 0x90
    1770:	str	r1, [sp, #8]
    1774:	ldr	r0, [r0]
    1778:	bl	76fc <read_bytes>
    177c:	cmp	r0, #0
    1780:	blt	3658 <coda_grib_reopen+0x35f0>
    1784:	mov	r0, r7
    1788:	ldrb	r1, [fp, #-142]	; 0xffffff72
    178c:	mov	ip, r4
    1790:	ldrb	r4, [fp, #-140]	; 0xffffff74
    1794:	mvn	r2, #0
    1798:	mvn	r3, #0
    179c:	ldrb	r0, [fp, #-144]	; 0xffffff70
    17a0:	tst	r1, #128	; 0x80
    17a4:	str	r4, [sp, #92]	; 0x5c
    17a8:	movweq	r2, #1
    17ac:	tst	r0, #128	; 0x80
    17b0:	movweq	r3, #1
    17b4:	cmp	r4, #64	; 0x40
    17b8:	bcs	349c <coda_grib_reopen+0x3434>
    17bc:	ldrb	r4, [fp, #-141]	; 0xffffff73
    17c0:	rev	r5, r5
    17c4:	mov	r6, r7
    17c8:	str	r5, [sp, #76]	; 0x4c
    17cc:	ldrb	r5, [fp, #-143]	; 0xffffff71
    17d0:	bfi	r4, r1, #8, #7
    17d4:	mul	r1, r2, r4
    17d8:	bfi	r5, r0, #8, #7
    17dc:	str	r1, [sp, #84]	; 0x54
    17e0:	mov	r1, r7
    17e4:	mul	r0, r3, r5
    17e8:	adds	r1, r6, #20
    17ec:	str	r0, [sp, #80]	; 0x50
    17f0:	adc	sl, sl, #0
    17f4:	cmp	ip, #20
    17f8:	bls	1e8c <coda_grib_reopen+0x1e24>
    17fc:	mov	r0, #5
    1800:	mov	r6, ip
    1804:	str	r0, [sp, #168]	; 0xa8
    1808:	sub	r0, ip, #20
    180c:	adds	r1, r1, r0
    1810:	adc	sl, sl, #0
    1814:	b	1e94 <coda_grib_reopen+0x1e2c>
    1818:	ldr	r0, [sp, #168]	; 0xa8
    181c:	uxtb	r3, r0
    1820:	cmp	r3, #5
    1824:	bne	339c <coda_grib_reopen+0x3334>
    1828:	ldr	r0, [sp, #184]	; 0xb8
    182c:	mov	r1, #1
    1830:	mov	r3, r6
    1834:	str	r1, [sp]
    1838:	mov	r1, #0
    183c:	str	r1, [sp, #4]
    1840:	sub	r1, fp, #144	; 0x90
    1844:	str	r1, [sp, #8]
    1848:	ldr	r0, [r0]
    184c:	bl	76fc <read_bytes>
    1850:	cmp	r0, #0
    1854:	blt	3658 <coda_grib_reopen+0x35f0>
    1858:	ldrb	r0, [fp, #-144]	; 0xffffff70
    185c:	mov	r6, r7
    1860:	cmp	r0, #255	; 0xff
    1864:	beq	1fd0 <coda_grib_reopen+0x1f68>
    1868:	cmp	r0, #254	; 0xfe
    186c:	mov	r7, sl
    1870:	beq	1fe0 <coda_grib_reopen+0x1f78>
    1874:	cmp	r0, #0
    1878:	bne	344c <coda_grib_reopen+0x33e4>
    187c:	adds	r0, r6, #6
    1880:	str	r0, [sp, #60]	; 0x3c
    1884:	adc	r0, r7, #0
    1888:	str	r0, [sp, #56]	; 0x38
    188c:	sub	r0, r4, #6
    1890:	str	r0, [sp, #64]	; 0x40
    1894:	mov	r0, #0
    1898:	str	r0, [sp, #40]	; 0x28
    189c:	mov	r0, #1
    18a0:	str	r0, [sp, #144]	; 0x90
    18a4:	b	2004 <coda_grib_reopen+0x1f9c>
    18a8:	ldr	r1, [sp, #168]	; 0xa8
    18ac:	sub	r0, r1, #5
    18b0:	uxtb	r0, r0
    18b4:	cmp	r0, #2
    18b8:	bcs	33e0 <coda_grib_reopen+0x3378>
    18bc:	str	r2, [sp, #48]	; 0x30
    18c0:	str	r6, [sp, #52]	; 0x34
    18c4:	str	r4, [sp, #152]	; 0x98
    18c8:	bl	0 <__aeabi_read_tp>
    18cc:	ldr	r4, [pc, #-2472]	; f2c <coda_grib_reopen+0xec4>
    18d0:	mov	r7, r0
    18d4:	mov	r1, #0
    18d8:	ldr	r0, [r0, r4]
    18dc:	ldr	r0, [r0, #544]	; 0x220
    18e0:	bl	0 <coda_mem_record_new>
    18e4:	mov	r6, r0
    18e8:	ldr	r0, [r7, r4]
    18ec:	ldr	r3, [sp, #148]	; 0x94
    18f0:	mov	r1, #0
    18f4:	mov	r2, r9
    18f8:	ldr	r0, [r0, #280]	; 0x118
    18fc:	bl	0 <coda_mem_uint32_new>
    1900:	movw	r1, #0
    1904:	mov	r2, r0
    1908:	mov	r0, r6
    190c:	mov	r3, #0
    1910:	movt	r1, #0
    1914:	bl	0 <coda_mem_record_add_field>
    1918:	ldr	r0, [r7, r4]
    191c:	ldr	r1, [sp, #112]	; 0x70
    1920:	mov	r2, r9
    1924:	ldr	r0, [r0, #460]	; 0x1cc
    1928:	uxtb	r3, r1
    192c:	mov	r1, #0
    1930:	bl	0 <coda_mem_uint8_new>
    1934:	movw	r1, #0
    1938:	mov	r2, r0
    193c:	mov	r0, r6
    1940:	mov	r3, #0
    1944:	movt	r1, #0
    1948:	bl	0 <coda_mem_record_add_field>
    194c:	ldr	r0, [r7, r4]
    1950:	ldr	r1, [sp, #140]	; 0x8c
    1954:	mov	r2, r9
    1958:	ldr	r0, [r0, #464]	; 0x1d0
    195c:	uxtb	r3, r1
    1960:	mov	r1, #0
    1964:	bl	0 <coda_mem_uint8_new>
    1968:	movw	r1, #0
    196c:	mov	r2, r0
    1970:	mov	r0, r6
    1974:	mov	r3, #0
    1978:	movt	r1, #0
    197c:	bl	0 <coda_mem_record_add_field>
    1980:	ldr	r0, [r7, r4]
    1984:	ldr	r1, [sp, #132]	; 0x84
    1988:	mov	r2, r9
    198c:	ldr	r0, [r0, #468]	; 0x1d4
    1990:	uxtb	r3, r1
    1994:	mov	r1, #0
    1998:	bl	0 <coda_mem_uint8_new>
    199c:	movw	r1, #0
    19a0:	mov	r2, r0
    19a4:	mov	r0, r6
    19a8:	mov	r3, #0
    19ac:	movt	r1, #0
    19b0:	bl	0 <coda_mem_record_add_field>
    19b4:	ldr	r0, [r7, r4]
    19b8:	ldr	r1, [sp, #116]	; 0x74
    19bc:	mov	r2, r9
    19c0:	ldr	r0, [r0, #472]	; 0x1d8
    19c4:	uxtb	r3, r1
    19c8:	mov	r1, #0
    19cc:	bl	0 <coda_mem_uint8_new>
    19d0:	movw	r1, #0
    19d4:	mov	r2, r0
    19d8:	mov	r0, r6
    19dc:	mov	r3, #0
    19e0:	movt	r1, #0
    19e4:	bl	0 <coda_mem_record_add_field>
    19e8:	ldr	r0, [r7, r4]
    19ec:	ldr	r1, [sp, #136]	; 0x88
    19f0:	mov	r2, r9
    19f4:	ldr	r0, [r0, #476]	; 0x1dc
    19f8:	uxtb	r3, r1
    19fc:	mov	r1, #0
    1a00:	bl	0 <coda_mem_uint8_new>
    1a04:	movw	r1, #0
    1a08:	mov	r2, r0
    1a0c:	mov	r0, r6
    1a10:	mov	r3, #0
    1a14:	movt	r1, #0
    1a18:	bl	0 <coda_mem_record_add_field>
    1a1c:	ldr	r0, [r7, r4]
    1a20:	ldr	r1, [sp, #100]	; 0x64
    1a24:	mov	r2, r9
    1a28:	ldr	r0, [r0, #480]	; 0x1e0
    1a2c:	uxth	r3, r1
    1a30:	mov	r1, #0
    1a34:	bl	0 <coda_mem_uint16_new>
    1a38:	movw	r1, #0
    1a3c:	mov	r2, r0
    1a40:	mov	r0, r6
    1a44:	mov	r3, #0
    1a48:	movt	r1, #0
    1a4c:	bl	0 <coda_mem_record_add_field>
    1a50:	ldr	r0, [r7, r4]
    1a54:	ldr	r1, [sp, #128]	; 0x80
    1a58:	mov	r2, r9
    1a5c:	ldr	r0, [r0, #484]	; 0x1e4
    1a60:	uxtb	r3, r1
    1a64:	mov	r1, #0
    1a68:	bl	0 <coda_mem_uint8_new>
    1a6c:	movw	r1, #0
    1a70:	mov	r2, r0
    1a74:	mov	r0, r6
    1a78:	mov	r3, #0
    1a7c:	movt	r1, #0
    1a80:	bl	0 <coda_mem_record_add_field>
    1a84:	ldr	r0, [r7, r4]
    1a88:	ldr	r1, [sp, #124]	; 0x7c
    1a8c:	mov	r2, r9
    1a90:	ldr	r0, [r0, #488]	; 0x1e8
    1a94:	uxtb	r3, r1
    1a98:	mov	r1, #0
    1a9c:	bl	0 <coda_mem_uint8_new>
    1aa0:	movw	r1, #0
    1aa4:	mov	r2, r0
    1aa8:	mov	r0, r6
    1aac:	mov	r3, #0
    1ab0:	movt	r1, #0
    1ab4:	bl	0 <coda_mem_record_add_field>
    1ab8:	ldr	r0, [r7, r4]
    1abc:	ldr	r3, [sp, #96]	; 0x60
    1ac0:	mov	r1, #0
    1ac4:	mov	r2, r9
    1ac8:	ldr	r0, [r0, #492]	; 0x1ec
    1acc:	bl	0 <coda_mem_uint32_new>
    1ad0:	movw	r1, #0
    1ad4:	mov	r2, r0
    1ad8:	mov	r0, r6
    1adc:	mov	r3, #0
    1ae0:	movt	r1, #0
    1ae4:	bl	0 <coda_mem_record_add_field>
    1ae8:	ldr	r0, [r7, r4]
    1aec:	ldr	r1, [sp, #120]	; 0x78
    1af0:	mov	r2, r9
    1af4:	ldr	r0, [r0, #496]	; 0x1f0
    1af8:	uxtb	r3, r1
    1afc:	mov	r1, #0
    1b00:	bl	0 <coda_mem_uint8_new>
    1b04:	movw	r1, #0
    1b08:	mov	r2, r0
    1b0c:	mov	r0, r6
    1b10:	mov	r3, #0
    1b14:	movt	r1, #0
    1b18:	bl	0 <coda_mem_record_add_field>
    1b1c:	ldr	r0, [r7, r4]
    1b20:	mov	r1, #0
    1b24:	mov	r2, r9
    1b28:	vorr	d0, d8, d8
    1b2c:	ldr	r0, [r0, #500]	; 0x1f4
    1b30:	bl	0 <coda_mem_double_new>
    1b34:	movw	r1, #0
    1b38:	mov	r2, r0
    1b3c:	mov	r0, r6
    1b40:	mov	r3, #0
    1b44:	movt	r1, #0
    1b48:	bl	0 <coda_mem_record_add_field>
    1b4c:	ldr	r0, [r7, r4]
    1b50:	ldr	r1, [sp, #108]	; 0x6c
    1b54:	mov	r2, r9
    1b58:	ldr	r0, [r0, #504]	; 0x1f8
    1b5c:	uxtb	r3, r1
    1b60:	mov	r1, #0
    1b64:	bl	0 <coda_mem_uint8_new>
    1b68:	movw	r1, #0
    1b6c:	mov	r2, r0
    1b70:	mov	r0, r6
    1b74:	mov	r3, #0
    1b78:	movt	r1, #0
    1b7c:	bl	0 <coda_mem_record_add_field>
    1b80:	ldr	r0, [r7, r4]
    1b84:	mov	r1, #0
    1b88:	mov	r2, r9
    1b8c:	vorr	d0, d9, d9
    1b90:	ldr	r0, [r0, #508]	; 0x1fc
    1b94:	bl	0 <coda_mem_double_new>
    1b98:	movw	r1, #0
    1b9c:	mov	r2, r0
    1ba0:	mov	r0, r6
    1ba4:	mov	r3, #0
    1ba8:	movt	r1, #0
    1bac:	bl	0 <coda_mem_record_add_field>
    1bb0:	ldr	r1, [sp, #104]	; 0x68
    1bb4:	movw	r0, #65535	; 0xffff
    1bb8:	tst	r1, r0
    1bbc:	beq	1bf4 <coda_grib_reopen+0x1b8c>
    1bc0:	bl	0 <__aeabi_read_tp>
    1bc4:	ldr	r0, [r0, r4]
    1bc8:	ldr	r2, [sp, #72]	; 0x48
    1bcc:	ldr	r3, [sp, #68]	; 0x44
    1bd0:	uxth	r1, r1
    1bd4:	ldr	r0, [r0, #516]	; 0x204
    1bd8:	bl	0 <coda_grib_value_array_new>
    1bdc:	movw	r1, #0
    1be0:	mov	r2, r0
    1be4:	mov	r0, r6
    1be8:	mov	r3, #0
    1bec:	movt	r1, #0
    1bf0:	bl	0 <coda_mem_record_add_field>
    1bf4:	bl	0 <__aeabi_read_tp>
    1bf8:	mov	sl, r0
    1bfc:	ldr	r0, [r0, r4]
    1c00:	ldr	r1, [sp, #92]	; 0x5c
    1c04:	mov	r2, r9
    1c08:	mov	r7, #0
    1c0c:	ldr	r0, [r0, #524]	; 0x20c
    1c10:	uxtb	r3, r1
    1c14:	mov	r1, #0
    1c18:	str	r3, [sp, #168]	; 0xa8
    1c1c:	bl	0 <coda_mem_uint8_new>
    1c20:	movw	r1, #0
    1c24:	mov	r2, r0
    1c28:	mov	r0, r6
    1c2c:	mov	r3, #0
    1c30:	movt	r1, #0
    1c34:	bl	0 <coda_mem_record_add_field>
    1c38:	ldr	r0, [sl, r4]
    1c3c:	ldr	r1, [sp, #84]	; 0x54
    1c40:	mov	r2, r9
    1c44:	ldr	r0, [r0, #320]	; 0x140
    1c48:	sxth	r3, r1
    1c4c:	mov	r1, #0
    1c50:	str	r3, [sp, #28]
    1c54:	bl	0 <coda_mem_int16_new>
    1c58:	movw	r1, #0
    1c5c:	mov	r2, r0
    1c60:	mov	r0, r6
    1c64:	mov	r3, #0
    1c68:	movt	r1, #0
    1c6c:	bl	0 <coda_mem_record_add_field>
    1c70:	ldr	r0, [sl, r4]
    1c74:	ldr	r1, [sp, #80]	; 0x50
    1c78:	mov	r2, r9
    1c7c:	ldr	r0, [r0, #528]	; 0x210
    1c80:	sxth	r3, r1
    1c84:	mov	r1, #0
    1c88:	str	r3, [sp, #24]
    1c8c:	bl	0 <coda_mem_int16_new>
    1c90:	movw	r1, #0
    1c94:	mov	r2, r0
    1c98:	mov	r0, r6
    1c9c:	mov	r3, #0
    1ca0:	movt	r1, #0
    1ca4:	bl	0 <coda_mem_record_add_field>
    1ca8:	ldr	r0, [sl, r4]
    1cac:	vldr	s20, [fp, #-80]	; 0xffffffb0
    1cb0:	mov	r1, #0
    1cb4:	mov	r2, r9
    1cb8:	ldr	r0, [r0, #532]	; 0x214
    1cbc:	vmov.f32	s0, s20
    1cc0:	bl	0 <coda_mem_float_new>
    1cc4:	movw	r1, #0
    1cc8:	mov	r2, r0
    1ccc:	mov	r0, r6
    1cd0:	mov	r3, #0
    1cd4:	movt	r1, #0
    1cd8:	bl	0 <coda_mem_record_add_field>
    1cdc:	ldr	r0, [sp, #144]	; 0x90
    1ce0:	ldr	r4, [sp, #184]	; 0xb8
    1ce4:	ldr	r5, [sp, #64]	; 0x40
    1ce8:	cmp	r0, #0
    1cec:	beq	1d28 <coda_grib_reopen+0x1cc0>
    1cf0:	mov	r0, r5
    1cf4:	bl	0 <malloc>
    1cf8:	cmp	r0, #0
    1cfc:	beq	3520 <coda_grib_reopen+0x34b8>
    1d00:	ldr	r1, [sp, #40]	; 0x28
    1d04:	mov	r7, r0
    1d08:	ldr	r0, [r4]
    1d0c:	str	r5, [sp]
    1d10:	stmib	sp, {r1, r7}
    1d14:	ldr	r2, [sp, #60]	; 0x3c
    1d18:	ldr	r3, [sp, #56]	; 0x38
    1d1c:	bl	76fc <read_bytes>
    1d20:	cmn	r0, #1
    1d24:	ble	3390 <coda_grib_reopen+0x3328>
    1d28:	bl	0 <__aeabi_read_tp>
    1d2c:	ldr	r1, [pc, #-3592]	; f2c <coda_grib_reopen+0xec4>
    1d30:	ldr	r2, [sp, #48]	; 0x30
    1d34:	ldr	r3, [sp, #52]	; 0x34
    1d38:	vmov.f32	s0, s20
    1d3c:	ldr	r0, [r0, r1]
    1d40:	ldr	r1, [sp, #168]	; 0xa8
    1d44:	ldr	r0, [r0, #536]	; 0x218
    1d48:	str	r1, [sp]
    1d4c:	ldr	r1, [sp, #28]
    1d50:	str	r7, [sp, #12]
    1d54:	str	r1, [sp, #4]
    1d58:	ldr	r1, [sp, #24]
    1d5c:	str	r1, [sp, #8]
    1d60:	ldr	r1, [sp, #76]	; 0x4c
    1d64:	bl	0 <coda_grib_value_array_simple_packing_new>
    1d68:	mov	r5, r0
    1d6c:	cmp	r7, #0
    1d70:	beq	1d7c <coda_grib_reopen+0x1d14>
    1d74:	mov	r0, r7
    1d78:	bl	0 <free>
    1d7c:	movw	r1, #0
    1d80:	mov	r0, r6
    1d84:	mov	r2, r5
    1d88:	mov	r3, #0
    1d8c:	movt	r1, #0
    1d90:	bl	0 <coda_mem_record_add_field>
    1d94:	ldr	r0, [sp, #44]	; 0x2c
    1d98:	mov	r1, r6
    1d9c:	bl	0 <coda_mem_array_add_element>
    1da0:	ldr	r0, [sp, #152]	; 0x98
    1da4:	cmp	r0, #6
    1da8:	bcc	1de4 <coda_grib_reopen+0x1d7c>
    1dac:	mov	r1, #7
    1db0:	sub	r0, r0, #5
    1db4:	str	r1, [sp, #168]	; 0xa8
    1db8:	ldr	r1, [sp, #48]	; 0x30
    1dbc:	adds	r6, r1, r0
    1dc0:	ldr	r0, [sp, #52]	; 0x34
    1dc4:	adc	r7, r0, #0
    1dc8:	b	215c <coda_grib_reopen+0x20f4>
    1dcc:	mov	r0, #2
    1dd0:	mov	r7, r6
    1dd4:	mov	r6, r2
    1dd8:	str	r0, [sp, #168]	; 0xa8
    1ddc:	mov	r0, r2
    1de0:	b	215c <coda_grib_reopen+0x20f4>
    1de4:	ldr	r6, [sp, #48]	; 0x30
    1de8:	ldr	r7, [sp, #52]	; 0x34
    1dec:	mov	r0, #7
    1df0:	b	2158 <coda_grib_reopen+0x20f0>
    1df4:	ldr	r0, [r0, #428]	; 0x1ac
    1df8:	mov	r1, #0
    1dfc:	mov	r2, r9
    1e00:	bl	0 <coda_mem_uint32_new>
    1e04:	movw	r1, #0
    1e08:	mov	r2, r0
    1e0c:	mov	r0, r4
    1e10:	movt	r1, #0
    1e14:	mov	r3, #0
    1e18:	bl	0 <coda_mem_record_add_field>
    1e1c:	ldr	sl, [sp, #152]	; 0x98
    1e20:	ldr	r5, [sp, #48]	; 0x30
    1e24:	bl	0 <__aeabi_read_tp>
    1e28:	ldr	r1, [pc, #-3844]	; f2c <coda_grib_reopen+0xec4>
    1e2c:	ldrb	r3, [fp, #-87]	; 0xffffffa9
    1e30:	mov	r2, r9
    1e34:	ldr	r0, [r0, r1]
    1e38:	mov	r1, #0
    1e3c:	ldr	r0, [r0, #436]	; 0x1b4
    1e40:	bl	0 <coda_mem_uint8_new>
    1e44:	movw	r1, #0
    1e48:	mov	r2, r0
    1e4c:	mov	r0, r4
    1e50:	mov	r3, #0
    1e54:	movt	r1, #0
    1e58:	bl	0 <coda_mem_record_add_field>
    1e5c:	adds	r6, r6, #72	; 0x48
    1e60:	adc	r7, r7, #0
    1e64:	cmp	r5, #0
    1e68:	beq	1fa4 <coda_grib_reopen+0x1f3c>
    1e6c:	ldr	r5, [sp, #24]
    1e70:	cmn	r5, #1
    1e74:	beq	202c <coda_grib_reopen+0x1fc4>
    1e78:	ldr	r0, [sp, #20]
    1e7c:	cmn	r0, #1
    1e80:	ldr	r0, [sp, #168]	; 0xa8
    1e84:	beq	2034 <coda_grib_reopen+0x1fcc>
    1e88:	b	35dc <coda_grib_reopen+0x3574>
    1e8c:	mov	r0, #5
    1e90:	str	r0, [sp, #168]	; 0xa8
    1e94:	mov	r6, r1
    1e98:	mov	r7, sl
    1e9c:	b	215c <coda_grib_reopen+0x20f4>
    1ea0:	mov	r4, r2
    1ea4:	mov	r7, r3
    1ea8:	bl	0 <coda_NaN>
    1eac:	mov	r3, r7
    1eb0:	mov	r2, r4
    1eb4:	vmov.f64	d8, d0
    1eb8:	mov	r7, sl
    1ebc:	ldrb	r0, [fp, #-125]	; 0xffffff83
    1ec0:	rev16	r4, r5
    1ec4:	cmp	r0, #255	; 0xff
    1ec8:	str	r0, [sp, #108]	; 0x6c
    1ecc:	beq	1f2c <coda_grib_reopen+0x1ec4>
    1ed0:	ldr	r0, [fp, #-123]	; 0xffffff85
    1ed4:	rev	r1, r0
    1ed8:	ldrsb	r0, [fp, #-124]	; 0xffffff84
    1edc:	vmov	s0, r1
    1ee0:	vcvt.f64.s32	d9, s0
    1ee4:	cmn	r0, #1
    1ee8:	ble	1f10 <coda_grib_reopen+0x1ea8>
    1eec:	cmp	r0, #0
    1ef0:	beq	1f44 <coda_grib_reopen+0x1edc>
    1ef4:	sub	r1, r0, #1
    1ef8:	sxtb	r0, r0
    1efc:	vdiv.f64	d9, d9, d12
    1f00:	cmp	r0, #1
    1f04:	mov	r0, r1
    1f08:	bgt	1ef4 <coda_grib_reopen+0x1e8c>
    1f0c:	b	1f44 <coda_grib_reopen+0x1edc>
    1f10:	add	r1, r0, #1
    1f14:	sxtb	r0, r0
    1f18:	vmul.f64	d9, d9, d12
    1f1c:	cmn	r0, #1
    1f20:	mov	r0, r1
    1f24:	blt	1f10 <coda_grib_reopen+0x1ea8>
    1f28:	b	1f44 <coda_grib_reopen+0x1edc>
    1f2c:	mov	sl, r2
    1f30:	mov	r5, r3
    1f34:	bl	0 <coda_NaN>
    1f38:	mov	r3, r5
    1f3c:	mov	r2, sl
    1f40:	vmov.f64	d9, d0
    1f44:	rev	r0, r2
    1f48:	adds	r6, r6, #34	; 0x22
    1f4c:	str	r4, [sp, #104]	; 0x68
    1f50:	str	r0, [sp, #96]	; 0x60
    1f54:	rev16	r0, r3
    1f58:	adc	r7, r7, #0
    1f5c:	cmp	r4, #0
    1f60:	mov	r1, r6
    1f64:	str	r0, [sp, #100]	; 0x64
    1f68:	mvn	r0, #0
    1f6c:	moveq	r1, r0
    1f70:	str	r1, [sp, #72]	; 0x48
    1f74:	mov	r1, r7
    1f78:	moveq	r1, r0
    1f7c:	ldr	r0, [sp, #152]	; 0x98
    1f80:	str	r1, [sp, #68]	; 0x44
    1f84:	cmp	r0, #34	; 0x22
    1f88:	bls	1f9c <coda_grib_reopen+0x1f34>
    1f8c:	mov	r1, #4
    1f90:	sub	r0, r0, #34	; 0x22
    1f94:	str	r1, [sp, #168]	; 0xa8
    1f98:	b	2020 <coda_grib_reopen+0x1fb8>
    1f9c:	mov	r0, #4
    1fa0:	b	2158 <coda_grib_reopen+0x20f0>
    1fa4:	ldr	r0, [sp, #24]
    1fa8:	cmn	r0, #1
    1fac:	ldrne	r0, [sp, #20]
    1fb0:	cmnne	r0, #1
    1fb4:	beq	35f4 <coda_grib_reopen+0x358c>
    1fb8:	cmp	sl, #73	; 0x49
    1fbc:	bcc	213c <coda_grib_reopen+0x20d4>
    1fc0:	sub	r0, sl, #72	; 0x48
    1fc4:	adds	r6, r6, r0
    1fc8:	adc	r7, r7, #0
    1fcc:	b	213c <coda_grib_reopen+0x20d4>
    1fd0:	mov	r0, #0
    1fd4:	mov	r7, sl
    1fd8:	str	r0, [sp, #144]	; 0x90
    1fdc:	b	2004 <coda_grib_reopen+0x1f9c>
    1fe0:	ldr	r0, [sp, #60]	; 0x3c
    1fe4:	ldr	r2, [sp, #56]	; 0x38
    1fe8:	mvn	r1, #0
    1fec:	eor	r0, r0, r1
    1ff0:	eor	r1, r2, r1
    1ff4:	orrs	r0, r0, r1
    1ff8:	mov	r0, #1
    1ffc:	str	r0, [sp, #144]	; 0x90
    2000:	beq	3614 <coda_grib_reopen+0x35ac>
    2004:	adds	r6, r6, #6
    2008:	mov	r0, #6
    200c:	adc	r7, r7, #0
    2010:	cmp	r4, #7
    2014:	bcc	2158 <coda_grib_reopen+0x20f0>
    2018:	str	r0, [sp, #168]	; 0xa8
    201c:	sub	r0, r4, #6
    2020:	adds	r6, r6, r0
    2024:	adc	r7, r7, #0
    2028:	b	215c <coda_grib_reopen+0x20f4>
    202c:	ldr	r5, [sp, #20]
    2030:	ldr	r0, [sp, #168]	; 0xa8
    2034:	mul	r3, r5, r0
    2038:	sub	r2, sl, #72	; 0x48
    203c:	cmp	r2, r3
    2040:	bne	3568 <coda_grib_reopen+0x3500>
    2044:	bl	0 <__aeabi_read_tp>
    2048:	ldr	r1, [pc, #3588]	; 2e54 <coda_grib_reopen+0x2dec>
    204c:	ldr	r0, [r0, r1]
    2050:	mov	r1, #0
    2054:	ldr	r0, [r0, #444]	; 0x1bc
    2058:	bl	0 <coda_mem_array_new>
    205c:	mov	sl, r0
    2060:	cmp	r5, #1
    2064:	blt	2120 <coda_grib_reopen+0x20b8>
    2068:	mov	r4, r5
    206c:	mov	r5, #0
    2070:	ldr	r0, [sp, #184]	; 0xb8
    2074:	mov	r1, #2
    2078:	mov	r2, r6
    207c:	mov	r3, r7
    2080:	str	r1, [sp]
    2084:	mov	r1, #0
    2088:	str	r1, [sp, #4]
    208c:	sub	r1, fp, #144	; 0x90
    2090:	str	r1, [sp, #8]
    2094:	ldr	r0, [r0]
    2098:	bl	76fc <read_bytes>
    209c:	cmn	r0, #1
    20a0:	ble	3250 <coda_grib_reopen+0x31e8>
    20a4:	ldr	r2, [sp, #168]	; 0xa8
    20a8:	cmp	r2, #4
    20ac:	beq	20c8 <coda_grib_reopen+0x2060>
    20b0:	cmp	r2, #2
    20b4:	beq	20d4 <coda_grib_reopen+0x206c>
    20b8:	cmp	r2, #1
    20bc:	bne	323c <coda_grib_reopen+0x31d4>
    20c0:	ldrb	r3, [fp, #-144]	; 0xffffff70
    20c4:	b	20e0 <coda_grib_reopen+0x2078>
    20c8:	ldr	r0, [fp, #-144]	; 0xffffff70
    20cc:	rev	r3, r0
    20d0:	b	20e0 <coda_grib_reopen+0x2078>
    20d4:	ldrb	r0, [fp, #-144]	; 0xffffff70
    20d8:	ldrb	r1, [fp, #-143]	; 0xffffff71
    20dc:	orr	r3, r1, r0, lsl #8
    20e0:	bl	0 <__aeabi_read_tp>
    20e4:	ldr	r1, [pc, #3432]	; 2e54 <coda_grib_reopen+0x2dec>
    20e8:	mov	r2, r9
    20ec:	ldr	r0, [r0, r1]
    20f0:	mov	r1, #0
    20f4:	ldr	r0, [r0, #440]	; 0x1b8
    20f8:	bl	0 <coda_mem_uint32_new>
    20fc:	mov	r1, r0
    2100:	mov	r0, sl
    2104:	bl	0 <coda_mem_array_add_element>
    2108:	ldr	r0, [sp, #168]	; 0xa8
    210c:	add	r5, r5, #1
    2110:	adds	r6, r6, r0
    2114:	adc	r7, r7, #0
    2118:	cmp	r5, r4
    211c:	blt	2070 <coda_grib_reopen+0x2008>
    2120:	ldr	r4, [sp, #52]	; 0x34
    2124:	movw	r1, #0
    2128:	mov	r2, sl
    212c:	mov	r3, #0
    2130:	movt	r1, #0
    2134:	mov	r0, r4
    2138:	bl	0 <coda_mem_record_add_field>
    213c:	ldr	r0, [sp, #36]	; 0x24
    2140:	mov	r1, r4
    2144:	bl	0 <coda_mem_array_add_element>
    2148:	ldr	r0, [sp, #148]	; 0x94
    214c:	add	r0, r0, #1
    2150:	str	r0, [sp, #148]	; 0x94
    2154:	mov	r0, #3
    2158:	str	r0, [sp, #168]	; 0xa8
    215c:	ldr	r0, [sp, #184]	; 0xb8
    2160:	mov	r1, #4
    2164:	mov	r2, r6
    2168:	mov	r3, r7
    216c:	mov	sl, r7
    2170:	str	r1, [sp]
    2174:	mov	r1, #0
    2178:	str	r1, [sp, #4]
    217c:	sub	r1, fp, #144	; 0x90
    2180:	str	r1, [sp, #8]
    2184:	ldr	r0, [r0]
    2188:	bl	76fc <read_bytes>
    218c:	cmp	r0, #0
    2190:	bge	de0 <coda_grib_reopen+0xd78>
    2194:	b	3658 <coda_grib_reopen+0x35f0>
    2198:	cmp	r2, #40	; 0x28
    219c:	beq	15bc <coda_grib_reopen+0x1554>
    21a0:	b	34d8 <coda_grib_reopen+0x3470>
    21a4:	mov	r7, sl
    21a8:	ldr	r0, [sp, #148]	; 0x94
    21ac:	mov	r5, #0
    21b0:	ands	r0, r0, #128	; 0x80
    21b4:	bne	238c <coda_grib_reopen+0x2324>
    21b8:	ldr	r0, [sp, #140]	; 0x8c
    21bc:	sub	r0, r0, #1
    21c0:	cmp	r0, #106	; 0x6a
    21c4:	bhi	3464 <coda_grib_reopen+0x33fc>
    21c8:	movw	r1, #1679	; 0x68f
    21cc:	str	r1, [sp, #144]	; 0x90
    21d0:	add	r1, pc, #0
    21d4:	ldr	pc, [r1, r0, lsl #2]
    21d8:	.word	0x00002ca4
    21dc:	.word	0x00002bf0
    21e0:	.word	0x00002bf8
    21e4:	.word	0x00002c00
    21e8:	.word	0x00002bb0
    21ec:	.word	0x00002bb0
    21f0:	.word	0x00003464
    21f4:	.word	0x00002c0c
    21f8:	.word	0x00003464
    21fc:	.word	0x00003464
    2200:	.word	0x00003464
    2204:	.word	0x00003464
    2208:	.word	0x00003464
    220c:	.word	0x00003464
    2210:	.word	0x00003464
    2214:	.word	0x00003464
    2218:	.word	0x00003464
    221c:	.word	0x00003464
    2220:	.word	0x00003464
    2224:	.word	0x00003464
    2228:	.word	0x00002384
    222c:	.word	0x00002384
    2230:	.word	0x00002384
    2234:	.word	0x00002384
    2238:	.word	0x00002bb8
    223c:	.word	0x00002bb8
    2240:	.word	0x00002bc0
    2244:	.word	0x00002bc0
    2248:	.word	0x00002bc8
    224c:	.word	0x00002bc8
    2250:	.word	0x00003464
    2254:	.word	0x00003464
    2258:	.word	0x00002bd0
    225c:	.word	0x00002bd0
    2260:	.word	0x00003464
    2264:	.word	0x00003464
    2268:	.word	0x00003464
    226c:	.word	0x00003464
    2270:	.word	0x00003464
    2274:	.word	0x00003464
    2278:	.word	0x00003464
    227c:	.word	0x00003464
    2280:	.word	0x00003464
    2284:	.word	0x00003464
    2288:	.word	0x00003464
    228c:	.word	0x00003464
    2290:	.word	0x00003464
    2294:	.word	0x00003464
    2298:	.word	0x00003464
    229c:	.word	0x00002c14
    22a0:	.word	0x00003464
    22a4:	.word	0x00003464
    22a8:	.word	0x00002c1c
    22ac:	.word	0x00003464
    22b0:	.word	0x00002bd8
    22b4:	.word	0x00002bd8
    22b8:	.word	0x00003464
    22bc:	.word	0x00003464
    22c0:	.word	0x00003464
    22c4:	.word	0x00003464
    22c8:	.word	0x00002b54
    22cc:	.word	0x00002b54
    22d0:	.word	0x00002b54
    22d4:	.word	0x00002b54
    22d8:	.word	0x00003464
    22dc:	.word	0x00003464
    22e0:	.word	0x00003464
    22e4:	.word	0x00003464
    22e8:	.word	0x00003464
    22ec:	.word	0x00003464
    22f0:	.word	0x00003464
    22f4:	.word	0x00003464
    22f8:	.word	0x00003464
    22fc:	.word	0x00003464
    2300:	.word	0x00002ba8
    2304:	.word	0x00002ba8
    2308:	.word	0x00002ba8
    230c:	.word	0x00003464
    2310:	.word	0x00003464
    2314:	.word	0x00003464
    2318:	.word	0x00003464
    231c:	.word	0x00003464
    2320:	.word	0x00003464
    2324:	.word	0x00003464
    2328:	.word	0x00002be0
    232c:	.word	0x00002be0
    2330:	.word	0x00002c24
    2334:	.word	0x00003464
    2338:	.word	0x00003464
    233c:	.word	0x00002c2c
    2340:	.word	0x00002c34
    2344:	.word	0x00002c3c
    2348:	.word	0x00002c48
    234c:	.word	0x00002c54
    2350:	.word	0x00002c5c
    2354:	.word	0x00002c68
    2358:	.word	0x00002c70
    235c:	.word	0x00003464
    2360:	.word	0x00003464
    2364:	.word	0x00002be8
    2368:	.word	0x00002c7c
    236c:	.word	0x00003464
    2370:	.word	0x00002c84
    2374:	.word	0x00002c8c
    2378:	.word	0x00002be8
    237c:	.word	0x00002c94
    2380:	.word	0x00002c9c
    2384:	movw	r0, #1333	; 0x535
    2388:	b	2ca0 <coda_grib_reopen+0x2c38>
    238c:	ldr	sl, [sp, #184]	; 0xb8
    2390:	mov	r1, #6
    2394:	mov	r2, r4
    2398:	mov	r3, r7
    239c:	ldr	r0, [sl]
    23a0:	stm	sp, {r1, r5}
    23a4:	sub	r1, fp, #144	; 0x90
    23a8:	str	r1, [sp, #8]
    23ac:	bl	76fc <read_bytes>
    23b0:	cmp	r0, #0
    23b4:	blt	31f4 <coda_grib_reopen+0x318c>
    23b8:	ldrb	r6, [fp, #-139]	; 0xffffff75
    23bc:	adds	r3, r4, #6
    23c0:	str	r7, [sp, #140]	; 0x8c
    23c4:	adc	r7, r7, #0
    23c8:	lsr	r0, r6, #1
    23cc:	orr	r0, r0, r6, lsl #7
    23d0:	uxtb	r0, r0
    23d4:	cmp	r0, #17
    23d8:	bhi	3480 <coda_grib_reopen+0x3418>
    23dc:	movw	r2, #38053	; 0x94a5
    23e0:	mov	r1, #1
    23e4:	movt	r2, #2
    23e8:	tst	r2, r1, lsl r0
    23ec:	beq	3480 <coda_grib_reopen+0x3418>
    23f0:	ldrb	r0, [fp, #-144]	; 0xffffff70
    23f4:	mov	r1, #0
    23f8:	str	r3, [sp, #144]	; 0x90
    23fc:	str	r4, [sp, #152]	; 0x98
    2400:	str	r0, [sp, #132]	; 0x84
    2404:	ldrb	r0, [fp, #-143]	; 0xffffff71
    2408:	str	r0, [sp, #116]	; 0x74
    240c:	ldrb	r0, [fp, #-142]	; 0xffffff72
    2410:	str	r0, [sp, #124]	; 0x7c
    2414:	sub	r0, r6, #4
    2418:	uxtb	r0, r0
    241c:	cmp	r0, #30
    2420:	movwls	r2, #1025	; 0x401
    2424:	movls	r1, #1
    2428:	movtls	r2, #16400	; 0x4010
    242c:	andls	r1, r1, r2, lsr r0
    2430:	str	r1, [sp, #120]	; 0x78
    2434:	bl	0 <__aeabi_read_tp>
    2438:	mov	r5, r0
    243c:	ldr	r0, [pc, #2576]	; 2e54 <coda_grib_reopen+0x2dec>
    2440:	mov	r1, #0
    2444:	mov	r4, r0
    2448:	ldr	r0, [r5, r0]
    244c:	ldr	r0, [r0, #264]	; 0x108
    2450:	bl	0 <coda_mem_record_new>
    2454:	mov	sl, r0
    2458:	ldr	r0, [r5, r4]
    245c:	ldrb	r3, [fp, #-141]	; 0xffffff73
    2460:	mov	r1, #0
    2464:	mov	r2, r9
    2468:	ldr	r0, [r0, #132]	; 0x84
    246c:	str	r3, [sp, #168]	; 0xa8
    2470:	bl	0 <coda_mem_uint8_new>
    2474:	movw	r1, #0
    2478:	mov	r2, r0
    247c:	mov	r0, sl
    2480:	mov	r3, #0
    2484:	movt	r1, #0
    2488:	bl	0 <coda_mem_record_add_field>
    248c:	ldr	r0, [r5, r4]
    2490:	ldrb	r4, [fp, #-140]	; 0xffffff74
    2494:	mov	r1, #0
    2498:	mov	r2, r9
    249c:	mov	r3, r6
    24a0:	mov	r5, sl
    24a4:	ldr	r0, [r0, #136]	; 0x88
    24a8:	bl	0 <coda_mem_uint8_new>
    24ac:	movw	r1, #0
    24b0:	mov	r2, r0
    24b4:	mov	r0, sl
    24b8:	mov	r3, #0
    24bc:	movt	r1, #0
    24c0:	bl	0 <coda_mem_record_add_field>
    24c4:	ldr	r0, [r9, #52]	; 0x34
    24c8:	ldr	r2, [sp, #144]	; 0x90
    24cc:	mov	r1, #26
    24d0:	mov	r3, r7
    24d4:	str	r1, [sp]
    24d8:	mov	r1, #0
    24dc:	str	r1, [sp, #4]
    24e0:	sub	r1, fp, #144	; 0x90
    24e4:	str	r1, [sp, #8]
    24e8:	bl	76fc <read_bytes>
    24ec:	cmn	r0, #1
    24f0:	ble	34b4 <coda_grib_reopen+0x344c>
    24f4:	ldrb	r0, [fp, #-144]	; 0xffffff70
    24f8:	ldrb	r1, [fp, #-143]	; 0xffffff71
    24fc:	ldrb	r2, [fp, #-142]	; 0xffffff72
    2500:	ldrb	r3, [fp, #-141]	; 0xffffff73
    2504:	str	r4, [sp, #112]	; 0x70
    2508:	orr	r1, r1, r0, lsl #8
    250c:	movw	r0, #65535	; 0xffff
    2510:	orr	sl, r3, r2, lsl #8
    2514:	cmp	r1, r0
    2518:	str	r1, [sp, #128]	; 0x80
    251c:	cmpeq	sl, r0
    2520:	beq	34c0 <coda_grib_reopen+0x3458>
    2524:	ldr	r0, [sp, #132]	; 0x84
    2528:	ldr	r1, [sp, #116]	; 0x74
    252c:	orr	r0, r1, r0, lsl #8
    2530:	str	r0, [sp, #116]	; 0x74
    2534:	bl	0 <__aeabi_read_tp>
    2538:	ldr	r4, [pc, #2324]	; 2e54 <coda_grib_reopen+0x2dec>
    253c:	mov	r6, r0
    2540:	ldr	r7, [sp, #128]	; 0x80
    2544:	mov	r1, #0
    2548:	mov	r2, r9
    254c:	ldr	r0, [r0, r4]
    2550:	mov	r3, r7
    2554:	ldr	r0, [r0, #168]	; 0xa8
    2558:	bl	0 <coda_mem_uint16_new>
    255c:	movw	r1, #0
    2560:	mov	r2, r0
    2564:	mov	r0, r5
    2568:	mov	r3, #0
    256c:	movt	r1, #0
    2570:	bl	0 <coda_mem_record_add_field>
    2574:	ldr	r0, [r6, r4]
    2578:	mov	r1, #0
    257c:	mov	r2, r9
    2580:	mov	r3, sl
    2584:	ldr	r0, [r0, #172]	; 0xac
    2588:	bl	0 <coda_mem_uint16_new>
    258c:	movw	r1, #0
    2590:	mov	r2, r0
    2594:	mov	r0, r5
    2598:	mov	r3, #0
    259c:	movt	r1, #0
    25a0:	bl	0 <coda_mem_record_add_field>
    25a4:	ldrb	r0, [fp, #-140]	; 0xffffff74
    25a8:	ldrb	r1, [fp, #-139]	; 0xffffff75
    25ac:	ldrb	r2, [fp, #-138]	; 0xffffff76
    25b0:	mvn	r3, #0
    25b4:	tst	r0, #128	; 0x80
    25b8:	bfi	r1, r0, #8, #7
    25bc:	orr	r0, r2, r1, lsl #8
    25c0:	movweq	r3, #1
    25c4:	mov	r1, #0
    25c8:	mov	r2, r9
    25cc:	mul	r3, r0, r3
    25d0:	ldr	r0, [r6, r4]
    25d4:	ldr	r0, [r0, #184]	; 0xb8
    25d8:	bl	0 <coda_mem_int32_new>
    25dc:	movw	r1, #0
    25e0:	mov	r2, r0
    25e4:	mov	r0, r5
    25e8:	mov	r3, #0
    25ec:	movt	r1, #0
    25f0:	bl	0 <coda_mem_record_add_field>
    25f4:	ldrb	r0, [fp, #-137]	; 0xffffff77
    25f8:	ldrb	r1, [fp, #-136]	; 0xffffff78
    25fc:	ldrb	r2, [fp, #-135]	; 0xffffff79
    2600:	mvn	r3, #0
    2604:	tst	r0, #128	; 0x80
    2608:	bfi	r1, r0, #8, #7
    260c:	orr	r0, r2, r1, lsl #8
    2610:	movweq	r3, #1
    2614:	mov	r1, #0
    2618:	mov	r2, r9
    261c:	mul	r3, r0, r3
    2620:	ldr	r0, [r6, r4]
    2624:	ldr	r0, [r0, #188]	; 0xbc
    2628:	bl	0 <coda_mem_int32_new>
    262c:	movw	r1, #0
    2630:	mov	r2, r0
    2634:	mov	r0, r5
    2638:	mov	r3, #0
    263c:	movt	r1, #0
    2640:	bl	0 <coda_mem_record_add_field>
    2644:	ldr	r0, [r6, r4]
    2648:	ldrb	r3, [fp, #-134]	; 0xffffff7a
    264c:	mov	r1, #0
    2650:	mov	r2, r9
    2654:	ldr	r0, [r0, #192]	; 0xc0
    2658:	bl	0 <coda_mem_uint8_new>
    265c:	movw	r1, #0
    2660:	mov	r2, r0
    2664:	mov	r0, r5
    2668:	mov	r3, #0
    266c:	movt	r1, #0
    2670:	bl	0 <coda_mem_record_add_field>
    2674:	ldrb	r0, [fp, #-133]	; 0xffffff7b
    2678:	ldrb	r1, [fp, #-132]	; 0xffffff7c
    267c:	ldrb	r2, [fp, #-131]	; 0xffffff7d
    2680:	mvn	r3, #0
    2684:	tst	r0, #128	; 0x80
    2688:	bfi	r1, r0, #8, #7
    268c:	orr	r0, r2, r1, lsl #8
    2690:	movweq	r3, #1
    2694:	mov	r1, #0
    2698:	mov	r2, r9
    269c:	mul	r3, r0, r3
    26a0:	ldr	r0, [r6, r4]
    26a4:	ldr	r0, [r0, #196]	; 0xc4
    26a8:	bl	0 <coda_mem_int32_new>
    26ac:	movw	r1, #0
    26b0:	mov	r2, r0
    26b4:	mov	r0, r5
    26b8:	mov	r3, #0
    26bc:	movt	r1, #0
    26c0:	bl	0 <coda_mem_record_add_field>
    26c4:	ldrb	r0, [fp, #-130]	; 0xffffff7e
    26c8:	ldrb	r1, [fp, #-129]	; 0xffffff7f
    26cc:	ldrb	r2, [fp, #-128]	; 0xffffff80
    26d0:	mvn	r3, #0
    26d4:	tst	r0, #128	; 0x80
    26d8:	bfi	r1, r0, #8, #7
    26dc:	orr	r0, r2, r1, lsl #8
    26e0:	movweq	r3, #1
    26e4:	mov	r1, #0
    26e8:	mov	r2, r9
    26ec:	mul	r3, r0, r3
    26f0:	ldr	r0, [r6, r4]
    26f4:	ldr	r0, [r0, #200]	; 0xc8
    26f8:	bl	0 <coda_mem_int32_new>
    26fc:	movw	r1, #0
    2700:	mov	r2, r0
    2704:	mov	r0, r5
    2708:	mov	r3, #0
    270c:	movt	r1, #0
    2710:	bl	0 <coda_mem_record_add_field>
    2714:	ldr	r0, [r6, r4]
    2718:	ldrh	r1, [fp, #-127]	; 0xffffff81
    271c:	mov	r2, r9
    2720:	ldr	r0, [r0, #204]	; 0xcc
    2724:	rev16	r3, r1
    2728:	mov	r1, #0
    272c:	bl	0 <coda_mem_uint16_new>
    2730:	movw	r1, #0
    2734:	mov	r2, r0
    2738:	mov	r0, r5
    273c:	mov	r3, #0
    2740:	movt	r1, #0
    2744:	bl	0 <coda_mem_record_add_field>
    2748:	movw	r0, #65535	; 0xffff
    274c:	ldr	r2, [sp, #120]	; 0x78
    2750:	str	sl, [sp, #132]	; 0x84
    2754:	subs	r1, sl, r0
    2758:	str	r1, [sp, #108]	; 0x6c
    275c:	mulne	r1, sl, r7
    2760:	subs	r3, r7, r0
    2764:	ldr	r0, [r6, r4]
    2768:	moveq	r1, r3
    276c:	str	r3, [sp, #104]	; 0x68
    2770:	cmp	r2, #0
    2774:	str	r1, [sp, #144]	; 0x90
    2778:	beq	27a8 <coda_grib_reopen+0x2740>
    277c:	ldrh	r1, [fp, #-125]	; 0xffffff83
    2780:	ldr	r0, [r0, #212]	; 0xd4
    2784:	mov	r2, r9
    2788:	rev16	r3, r1
    278c:	mov	r1, #0
    2790:	bl	0 <coda_mem_uint16_new>
    2794:	movw	r1, #0
    2798:	mov	r2, r0
    279c:	mov	r0, r5
    27a0:	movt	r1, #0
    27a4:	b	27d0 <coda_grib_reopen+0x2768>
    27a8:	ldrh	r1, [fp, #-125]	; 0xffffff83
    27ac:	ldr	r0, [r0, #208]	; 0xd0
    27b0:	mov	r2, r9
    27b4:	rev16	r3, r1
    27b8:	mov	r1, #0
    27bc:	bl	0 <coda_mem_uint16_new>
    27c0:	movw	r1, #0
    27c4:	mov	r2, r0
    27c8:	mov	r0, r5
    27cc:	movt	r1, #0
    27d0:	mov	r3, #0
    27d4:	bl	0 <coda_mem_record_add_field>
    27d8:	ldr	r0, [sp, #124]	; 0x7c
    27dc:	ldr	r1, [sp, #116]	; 0x74
    27e0:	ldr	r6, [sp, #112]	; 0x70
    27e4:	orr	r0, r0, r1, lsl #8
    27e8:	str	r0, [sp, #120]	; 0x78
    27ec:	bl	0 <__aeabi_read_tp>
    27f0:	ldr	r0, [r0, r4]
    27f4:	ldrb	r3, [fp, #-123]	; 0xffffff85
    27f8:	mov	r1, #0
    27fc:	mov	r2, r9
    2800:	ldr	r0, [r0, #216]	; 0xd8
    2804:	bl	0 <coda_mem_uint8_new>
    2808:	movw	r1, #0
    280c:	mov	r2, r0
    2810:	mov	r0, r5
    2814:	mov	r3, #0
    2818:	str	r5, [sp, #124]	; 0x7c
    281c:	movt	r1, #0
    2820:	bl	0 <coda_mem_record_add_field>
    2824:	ldr	r1, [sp, #152]	; 0x98
    2828:	ldr	r7, [sp, #140]	; 0x8c
    282c:	mov	r5, #0
    2830:	adds	r1, r1, #32
    2834:	adc	r7, r7, #0
    2838:	cmp	r6, #255	; 0xff
    283c:	beq	2af4 <coda_grib_reopen+0x2a8c>
    2840:	sub	r2, r6, #1
    2844:	mvn	r0, #31
    2848:	uxtab	r0, r0, r2
    284c:	adds	r1, r1, r0
    2850:	adc	r7, r7, r0, asr #31
    2854:	ldr	r0, [sp, #168]	; 0xa8
    2858:	str	r1, [sp, #152]	; 0x98
    285c:	cmp	r0, #0
    2860:	beq	29cc <coda_grib_reopen+0x2964>
    2864:	str	r2, [sp, #140]	; 0x8c
    2868:	bl	0 <__aeabi_read_tp>
    286c:	ldr	r0, [r0, r4]
    2870:	mov	r1, #0
    2874:	mov	r5, #0
    2878:	ldr	r0, [r0, #224]	; 0xe0
    287c:	bl	0 <coda_mem_array_new>
    2880:	ldr	r4, [sp, #152]	; 0x98
    2884:	mov	r6, r0
    2888:	ldr	r0, [sp, #184]	; 0xb8
    288c:	mov	r1, #4
    2890:	mov	r2, r4
    2894:	mov	r3, r7
    2898:	str	r1, [sp]
    289c:	mov	r1, #0
    28a0:	str	r1, [sp, #4]
    28a4:	sub	r1, fp, #144	; 0x90
    28a8:	str	r1, [sp, #8]
    28ac:	ldr	r0, [r0]
    28b0:	bl	76fc <read_bytes>
    28b4:	cmp	r0, #0
    28b8:	blt	31c8 <coda_grib_reopen+0x3160>
    28bc:	ldrb	r0, [fp, #-143]	; 0xffffff71
    28c0:	ldrb	r1, [fp, #-142]	; 0xffffff72
    28c4:	ldrb	r3, [fp, #-141]	; 0xffffff73
    28c8:	ldrb	r2, [fp, #-144]	; 0xffffff70
    28cc:	mov	sl, r7
    28d0:	orr	r0, r1, r0, lsl #8
    28d4:	orr	r1, r3, r0, lsl #8
    28d8:	bl	0 <__aeabi_read_tp>
    28dc:	ldr	r3, [pc, #3612]	; 3700 <coda_grib_reopen+0x3698>
    28e0:	cmp	r1, #0
    28e4:	vmov.f32	s0, s22
    28e8:	ldr	r0, [r0, r3]
    28ec:	ldr	r7, [r0, #220]	; 0xdc
    28f0:	beq	296c <coda_grib_reopen+0x2904>
    28f4:	mov	r0, #508	; 0x1fc
    28f8:	mov	r3, #0
    28fc:	and	r0, r0, r2, lsl #2
    2900:	cmp	r3, r1, lsr #23
    2904:	sub	r0, r0, #130	; 0x82
    2908:	bne	291c <coda_grib_reopen+0x28b4>
    290c:	lsl	r1, r1, #1
    2910:	sub	r0, r0, #1
    2914:	cmp	r1, #8388608	; 0x800000
    2918:	bcc	290c <coda_grib_reopen+0x28a4>
    291c:	cmp	r0, #255	; 0xff
    2920:	blt	2930 <coda_grib_reopen+0x28c8>
    2924:	bl	0 <coda_PlusInf>
    2928:	vcvt.f32.f64	s0, d0
    292c:	b	296c <coda_grib_reopen+0x2904>
    2930:	lsr	r2, r2, #7
    2934:	cmp	r0, #0
    2938:	bgt	2950 <coda_grib_reopen+0x28e8>
    293c:	rsb	r3, r0, #0
    2940:	cmn	r0, #24
    2944:	mov	r0, #0
    2948:	lsr	r1, r1, r3
    294c:	movwlt	r1, #0
    2950:	movw	r3, #65535	; 0xffff
    2954:	lsl	r0, r0, #23
    2958:	movt	r3, #127	; 0x7f
    295c:	orr	r0, r0, r2, lsl #31
    2960:	and	r1, r1, r3
    2964:	orr	r0, r0, r1
    2968:	vmov	s0, r0
    296c:	mov	r0, r7
    2970:	mov	r1, #0
    2974:	mov	r2, r9
    2978:	bl	0 <coda_mem_float_new>
    297c:	mov	r1, r0
    2980:	mov	r0, r6
    2984:	bl	0 <coda_mem_array_add_element>
    2988:	ldr	r0, [sp, #168]	; 0xa8
    298c:	adds	r4, r4, #4
    2990:	mov	r7, sl
    2994:	add	r5, r5, #1
    2998:	adc	r7, sl, #0
    299c:	cmp	r5, r0
    29a0:	bcc	2888 <coda_grib_reopen+0x2820>
    29a4:	ldr	r0, [sp, #124]	; 0x7c
    29a8:	movw	r1, #0
    29ac:	mov	r2, r6
    29b0:	mov	r3, #0
    29b4:	str	r4, [sp, #152]	; 0x98
    29b8:	movt	r1, #0
    29bc:	bl	0 <coda_mem_record_add_field>
    29c0:	ldr	r4, [pc, #3384]	; 3700 <coda_grib_reopen+0x3698>
    29c4:	ldr	r2, [sp, #140]	; 0x8c
    29c8:	mov	r5, #0
    29cc:	ldr	r1, [sp, #108]	; 0x6c
    29d0:	uxtb	r0, r2
    29d4:	ldr	r2, [sp, #104]	; 0x68
    29d8:	ldr	r3, [sp, #120]	; 0x78
    29dc:	clz	r1, r1
    29e0:	clz	r2, r2
    29e4:	lsr	r1, r1, #5
    29e8:	lsr	r2, r2, #5
    29ec:	orr	r1, r2, r1
    29f0:	ldr	r2, [sp, #168]	; 0xa8
    29f4:	add	r0, r0, r2, lsl #2
    29f8:	cmp	r3, r0
    29fc:	bls	2b44 <coda_grib_reopen+0x2adc>
    2a00:	ldr	r5, [sp, #128]	; 0x80
    2a04:	ldr	r6, [sp, #132]	; 0x84
    2a08:	movw	r2, #65535	; 0xffff
    2a0c:	cmp	r5, r2
    2a10:	movne	r6, r5
    2a14:	cmp	r1, #0
    2a18:	beq	36a8 <coda_grib_reopen+0x3640>
    2a1c:	ldr	sl, [sp, #184]	; 0xb8
    2a20:	sub	r2, r3, r0
    2a24:	cmp	r2, r6, lsl #1
    2a28:	bne	36bc <coda_grib_reopen+0x3654>
    2a2c:	str	r9, [sp, #168]	; 0xa8
    2a30:	mov	r9, r7
    2a34:	bl	0 <__aeabi_read_tp>
    2a38:	ldr	r0, [r0, r4]
    2a3c:	mov	r1, #0
    2a40:	mov	r5, #0
    2a44:	ldr	r0, [r0, #232]	; 0xe8
    2a48:	bl	0 <coda_mem_array_new>
    2a4c:	cmp	r6, #0
    2a50:	str	r0, [sp, #140]	; 0x8c
    2a54:	beq	2b5c <coda_grib_reopen+0x2af4>
    2a58:	ldr	r4, [sp, #152]	; 0x98
    2a5c:	str	r6, [sp, #132]	; 0x84
    2a60:	mov	r7, #0
    2a64:	mov	r5, #0
    2a68:	mov	r6, r9
    2a6c:	ldr	r0, [sl]
    2a70:	mov	r1, #2
    2a74:	mov	r2, r4
    2a78:	mov	r3, r6
    2a7c:	str	r1, [sp]
    2a80:	mov	r1, #0
    2a84:	str	r1, [sp, #4]
    2a88:	sub	r1, fp, #144	; 0x90
    2a8c:	str	r1, [sp, #8]
    2a90:	bl	76fc <read_bytes>
    2a94:	cmn	r0, #1
    2a98:	ble	32bc <coda_grib_reopen+0x3254>
    2a9c:	bl	0 <__aeabi_read_tp>
    2aa0:	ldr	r1, [pc, #3160]	; 3700 <coda_grib_reopen+0x3698>
    2aa4:	ldrb	r2, [fp, #-143]	; 0xffffff71
    2aa8:	ldr	r0, [r0, r1]
    2aac:	ldrb	r1, [fp, #-144]	; 0xffffff70
    2ab0:	orr	r9, r2, r1, lsl #8
    2ab4:	ldr	r0, [r0, #228]	; 0xe4
    2ab8:	ldr	r2, [sp, #168]	; 0xa8
    2abc:	mov	r1, #0
    2ac0:	mov	r3, r9
    2ac4:	bl	0 <coda_mem_uint16_new>
    2ac8:	mov	r1, r0
    2acc:	ldr	r0, [sp, #140]	; 0x8c
    2ad0:	bl	0 <coda_mem_array_add_element>
    2ad4:	ldr	r0, [sp, #132]	; 0x84
    2ad8:	adds	r4, r4, #2
    2adc:	add	r7, r7, #1
    2ae0:	add	r5, r9, r5
    2ae4:	adc	r6, r6, #0
    2ae8:	cmp	r7, r0
    2aec:	bcc	2a6c <coda_grib_reopen+0x2a04>
    2af0:	b	2b64 <coda_grib_reopen+0x2afc>
    2af4:	mov	r4, r1
    2af8:	ldr	r1, [sp, #128]	; 0x80
    2afc:	movw	r0, #65535	; 0xffff
    2b00:	cmp	r1, r0
    2b04:	ldrne	r1, [sp, #132]	; 0x84
    2b08:	cmpne	r1, r0
    2b0c:	beq	31d4 <coda_grib_reopen+0x316c>
    2b10:	ldr	r0, [sp, #120]	; 0x78
    2b14:	cmp	r0, #33	; 0x21
    2b18:	bcc	2b8c <coda_grib_reopen+0x2b24>
    2b1c:	sub	r0, r0, #32
    2b20:	adds	r4, r4, r0
    2b24:	adc	r7, r7, r0, asr #31
    2b28:	b	2b8c <coda_grib_reopen+0x2b24>
    2b2c:	ldr	r0, [sp, #168]	; 0xa8
    2b30:	uxtb	r0, r0
    2b34:	cmp	r0, #7
    2b38:	bne	362c <coda_grib_reopen+0x35c4>
    2b3c:	ldr	sl, [sp, #184]	; 0xb8
    2b40:	b	304c <coda_grib_reopen+0x2fe4>
    2b44:	ldr	r4, [sp, #152]	; 0x98
    2b48:	cmp	r1, #0
    2b4c:	beq	2b8c <coda_grib_reopen+0x2b24>
    2b50:	b	31d4 <coda_grib_reopen+0x316c>
    2b54:	mov	r0, #4096	; 0x1000
    2b58:	b	2ca0 <coda_grib_reopen+0x2c38>
    2b5c:	ldr	r4, [sp, #152]	; 0x98
    2b60:	mov	r6, r9
    2b64:	ldr	r0, [sp, #124]	; 0x7c
    2b68:	ldr	r2, [sp, #140]	; 0x8c
    2b6c:	movw	r1, #0
    2b70:	mov	r3, #0
    2b74:	str	r5, [sp, #144]	; 0x90
    2b78:	movt	r1, #0
    2b7c:	bl	0 <coda_mem_record_add_field>
    2b80:	ldr	r9, [sp, #168]	; 0xa8
    2b84:	mov	r5, #0
    2b88:	mov	r7, r6
    2b8c:	ldr	r0, [sp, #164]	; 0xa4
    2b90:	ldr	r2, [sp, #124]	; 0x7c
    2b94:	movw	r1, #0
    2b98:	mov	r3, #0
    2b9c:	movt	r1, #0
    2ba0:	bl	0 <coda_mem_record_add_field>
    2ba4:	b	2ca4 <coda_grib_reopen+0x2c3c>
    2ba8:	movw	r0, #12321	; 0x3021
    2bac:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bb0:	movw	r0, #2385	; 0x951
    2bb4:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bb8:	movw	r0, #1297	; 0x511
    2bbc:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bc0:	movw	r0, #4225	; 0x1081
    2bc4:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bc8:	movw	r0, #5365	; 0x14f5
    2bcc:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bd0:	movw	r0, #8326	; 0x2086
    2bd4:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bd8:	movw	r0, #6177	; 0x1821
    2bdc:	b	2ca0 <coda_grib_reopen+0x2c38>
    2be0:	movw	r0, #32400	; 0x7e90
    2be4:	b	2ca0 <coda_grib_reopen+0x2c38>
    2be8:	movw	r0, #6889	; 0x1ae9
    2bec:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bf0:	movw	r0, #10512	; 0x2910
    2bf4:	b	2ca0 <coda_grib_reopen+0x2c38>
    2bf8:	movw	r0, #65160	; 0xfe88
    2bfc:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c00:	movw	r0, #63312	; 0xf750
    2c04:	movt	r0, #3
    2c08:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c0c:	movw	r0, #5104	; 0x13f0
    2c10:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c14:	mov	r0, #964	; 0x3c4
    2c18:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c1c:	movw	r0, #5967	; 0x174f
    2c20:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c24:	movw	r0, #5022	; 0x139e
    2c28:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c2c:	movw	r0, #12902	; 0x3266
    2c30:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c34:	movw	r0, #25803	; 0x64cb
    2c38:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c3c:	movw	r0, #15677	; 0x3d3d
    2c40:	movt	r0, #1
    2c44:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c48:	movw	r0, #31353	; 0x7a79
    2c4c:	movt	r0, #2
    2c50:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c54:	movw	r0, #48916	; 0xbf14
    2c58:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c5c:	movw	r0, #32295	; 0x7e27
    2c60:	movt	r0, #1
    2c64:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c68:	movw	r0, #41630	; 0xa29e
    2c6c:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c70:	movw	r0, #17723	; 0x453b
    2c74:	movt	r0, #1
    2c78:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c7c:	movw	r0, #10283	; 0x282b
    2c80:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c84:	movw	r0, #3640	; 0xe38
    2c88:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c8c:	movw	r0, #16170	; 0x3f2a
    2c90:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c94:	movw	r0, #19305	; 0x4b69
    2c98:	b	2ca0 <coda_grib_reopen+0x2c38>
    2c9c:	movw	r0, #11040	; 0x2b20
    2ca0:	str	r0, [sp, #144]	; 0x90
    2ca4:	ldr	r0, [sp, #148]	; 0x94
    2ca8:	ands	r0, r0, #64	; 0x40
    2cac:	mov	r0, #0
    2cb0:	str	r0, [sp, #168]	; 0xa8
    2cb4:	bne	2cc0 <coda_grib_reopen+0x2c58>
    2cb8:	ldr	sl, [sp, #184]	; 0xb8
    2cbc:	b	2d7c <coda_grib_reopen+0x2d14>
    2cc0:	ldr	sl, [sp, #184]	; 0xb8
    2cc4:	mov	r1, #6
    2cc8:	mov	r2, r4
    2ccc:	mov	r3, r7
    2cd0:	ldr	r0, [sl]
    2cd4:	stm	sp, {r1, r5}
    2cd8:	sub	r1, fp, #144	; 0x90
    2cdc:	str	r1, [sp, #8]
    2ce0:	bl	76fc <read_bytes>
    2ce4:	cmp	r0, #0
    2ce8:	blt	31f4 <coda_grib_reopen+0x318c>
    2cec:	ldrb	r0, [fp, #-140]	; 0xffffff74
    2cf0:	ldrb	r1, [fp, #-139]	; 0xffffff75
    2cf4:	orr	r0, r1, r0, lsl #8
    2cf8:	cmp	r0, #0
    2cfc:	bne	34ec <coda_grib_reopen+0x3484>
    2d00:	ldrb	r0, [fp, #-144]	; 0xffffff70
    2d04:	ldrb	r1, [fp, #-143]	; 0xffffff71
    2d08:	ldrb	r2, [fp, #-142]	; 0xffffff72
    2d0c:	orr	r0, r1, r0, lsl #8
    2d10:	ldr	r1, [sp, #144]	; 0x90
    2d14:	orr	r6, r2, r0, lsl #8
    2d18:	mov	r0, #1
    2d1c:	sub	r5, r6, #6
    2d20:	asr	r3, r1, #3
    2d24:	tst	r1, #7
    2d28:	addne	r3, r0, r1, asr #3
    2d2c:	cmp	r5, r3
    2d30:	blt	3504 <coda_grib_reopen+0x349c>
    2d34:	mov	r0, r5
    2d38:	bl	0 <malloc>
    2d3c:	cmp	r0, #0
    2d40:	beq	3534 <coda_grib_reopen+0x34cc>
    2d44:	mov	r2, r0
    2d48:	ldr	r0, [sl]
    2d4c:	asr	r1, r5, #31
    2d50:	str	r5, [sp]
    2d54:	str	r2, [sp, #168]	; 0xa8
    2d58:	stmib	sp, {r1, r2}
    2d5c:	adds	r2, r4, #6
    2d60:	adc	r3, r7, #0
    2d64:	bl	76fc <read_bytes>
    2d68:	cmn	r0, #1
    2d6c:	ble	355c <coda_grib_reopen+0x34f4>
    2d70:	adds	r4, r4, r6
    2d74:	mov	r5, #0
    2d78:	adc	r7, r7, #0
    2d7c:	ldr	r0, [sl]
    2d80:	mov	r1, #11
    2d84:	mov	r2, r4
    2d88:	mov	r3, r7
    2d8c:	stm	sp, {r1, r5}
    2d90:	sub	r1, fp, #144	; 0x90
    2d94:	str	r1, [sp, #8]
    2d98:	bl	76fc <read_bytes>
    2d9c:	cmn	r0, #1
    2da0:	ble	32d4 <coda_grib_reopen+0x326c>
    2da4:	ldrb	r0, [fp, #-141]	; 0xffffff73
    2da8:	tst	r0, #128	; 0x80
    2dac:	bne	32e8 <coda_grib_reopen+0x3280>
    2db0:	tst	r0, #64	; 0x40
    2db4:	bne	3318 <coda_grib_reopen+0x32b0>
    2db8:	tst	r0, #16
    2dbc:	bne	3340 <coda_grib_reopen+0x32d8>
    2dc0:	ldrb	r0, [fp, #-137]	; 0xffffff77
    2dc4:	ldrb	r1, [fp, #-136]	; 0xffffff78
    2dc8:	ldrb	r6, [fp, #-140]	; 0xffffff74
    2dcc:	ldrb	lr, [fp, #-144]	; 0xffffff70
    2dd0:	ldrb	r2, [fp, #-143]	; 0xffffff71
    2dd4:	ldrb	ip, [fp, #-142]	; 0xffffff72
    2dd8:	ldrb	r5, [fp, #-139]	; 0xffffff75
    2ddc:	mvn	sl, #0
    2de0:	vmov.f32	s16, s22
    2de4:	orr	r0, r1, r0, lsl #8
    2de8:	ldrb	r1, [fp, #-135]	; 0xffffff79
    2dec:	tst	r6, #128	; 0x80
    2df0:	movweq	sl, #1
    2df4:	orr	r0, r1, r0, lsl #8
    2df8:	cmp	r0, #0
    2dfc:	beq	2e90 <coda_grib_reopen+0x2e28>
    2e00:	str	r2, [sp, #152]	; 0x98
    2e04:	ldrb	r2, [fp, #-138]	; 0xffffff76
    2e08:	mov	r1, #508	; 0x1fc
    2e0c:	mov	r3, #0
    2e10:	cmp	r3, r0, lsr #23
    2e14:	and	r1, r1, r2, lsl #2
    2e18:	sub	r1, r1, #130	; 0x82
    2e1c:	bne	2e30 <coda_grib_reopen+0x2dc8>
    2e20:	lsl	r0, r0, #1
    2e24:	sub	r1, r1, #1
    2e28:	cmp	r0, #8388608	; 0x800000
    2e2c:	bcc	2e20 <coda_grib_reopen+0x2db8>
    2e30:	cmp	r1, #255	; 0xff
    2e34:	blt	2e58 <coda_grib_reopen+0x2df0>
    2e38:	str	ip, [sp, #148]	; 0x94
    2e3c:	str	lr, [sp, #140]	; 0x8c
    2e40:	bl	0 <coda_PlusInf>
    2e44:	ldr	lr, [sp, #140]	; 0x8c
    2e48:	ldr	ip, [sp, #148]	; 0x94
    2e4c:	vcvt.f32.f64	s16, d0
    2e50:	b	2e8c <coda_grib_reopen+0x2e24>
    2e54:	.word	0x00000000
    2e58:	lsr	r2, r2, #7
    2e5c:	cmp	r1, #0
    2e60:	bgt	2e78 <coda_grib_reopen+0x2e10>
    2e64:	rsb	r3, r1, #0
    2e68:	cmn	r1, #24
    2e6c:	mov	r1, #0
    2e70:	lsr	r0, r0, r3
    2e74:	movwlt	r0, #0
    2e78:	lsl	r1, r1, #23
    2e7c:	bfc	r0, #23, #9
    2e80:	orr	r1, r1, r2, lsl #31
    2e84:	orr	r0, r1, r0
    2e88:	vmov	s16, r0
    2e8c:	ldr	r2, [sp, #152]	; 0x98
    2e90:	str	r7, [sp, #140]	; 0x8c
    2e94:	ldrb	r7, [fp, #-134]	; 0xffffff7a
    2e98:	cmp	r7, #64	; 0x40
    2e9c:	bcs	3368 <coda_grib_reopen+0x3300>
    2ea0:	orr	r0, r2, lr, lsl #8
    2ea4:	bfi	r5, r6, #8, #7
    2ea8:	orr	r0, ip, r0, lsl #8
    2eac:	mul	sl, sl, r5
    2eb0:	str	r0, [sp, #148]	; 0x94
    2eb4:	bl	0 <__aeabi_read_tp>
    2eb8:	str	r4, [sp, #152]	; 0x98
    2ebc:	ldr	r4, [pc, #2108]	; 3700 <coda_grib_reopen+0x3698>
    2ec0:	mov	r5, r0
    2ec4:	mov	r1, #0
    2ec8:	ldr	r0, [r0, r4]
    2ecc:	ldr	r0, [r0, #268]	; 0x10c
    2ed0:	bl	0 <coda_mem_record_new>
    2ed4:	mov	r6, r0
    2ed8:	ldr	r0, [r5, r4]
    2edc:	mov	r1, #0
    2ee0:	mov	r2, r9
    2ee4:	mov	r3, r7
    2ee8:	ldr	r0, [r0, #248]	; 0xf8
    2eec:	bl	0 <coda_mem_uint8_new>
    2ef0:	movw	r1, #0
    2ef4:	mov	r2, r0
    2ef8:	mov	r0, r6
    2efc:	mov	r3, #0
    2f00:	movt	r1, #0
    2f04:	bl	0 <coda_mem_record_add_field>
    2f08:	ldr	r0, [r5, r4]
    2f0c:	sxth	sl, sl
    2f10:	mov	r1, #0
    2f14:	mov	r2, r9
    2f18:	mov	r3, sl
    2f1c:	ldr	r0, [r0, #252]	; 0xfc
    2f20:	bl	0 <coda_mem_int16_new>
    2f24:	movw	r1, #0
    2f28:	mov	r2, r0
    2f2c:	mov	r0, r6
    2f30:	mov	r3, #0
    2f34:	movt	r1, #0
    2f38:	bl	0 <coda_mem_record_add_field>
    2f3c:	ldr	r0, [r5, r4]
    2f40:	mov	r1, #0
    2f44:	mov	r2, r9
    2f48:	vmov.f32	s0, s16
    2f4c:	ldr	r0, [r0, #256]	; 0x100
    2f50:	bl	0 <coda_mem_float_new>
    2f54:	movw	r1, #0
    2f58:	mov	r2, r0
    2f5c:	mov	r0, r6
    2f60:	mov	r3, #0
    2f64:	movt	r1, #0
    2f68:	bl	0 <coda_mem_record_add_field>
    2f6c:	ldr	r0, [r5, r4]
    2f70:	ldr	r1, [sp, #136]	; 0x88
    2f74:	vmov.f32	s0, s16
    2f78:	ldr	r0, [r0, #260]	; 0x104
    2f7c:	str	r7, [sp]
    2f80:	stmib	sp, {r1, sl}
    2f84:	ldr	r1, [sp, #152]	; 0x98
    2f88:	ldr	r4, [sp, #168]	; 0xa8
    2f8c:	adds	sl, r1, #11
    2f90:	ldr	r1, [sp, #140]	; 0x8c
    2f94:	str	r4, [sp, #12]
    2f98:	mov	r2, sl
    2f9c:	adc	r7, r1, #0
    2fa0:	ldr	r1, [sp, #144]	; 0x90
    2fa4:	mov	r3, r7
    2fa8:	bl	0 <coda_grib_value_array_simple_packing_new>
    2fac:	mov	r5, r0
    2fb0:	cmp	r4, #0
    2fb4:	beq	2fc0 <coda_grib_reopen+0x2f58>
    2fb8:	mov	r0, r4
    2fbc:	bl	0 <free>
    2fc0:	movw	r1, #0
    2fc4:	mov	r0, r6
    2fc8:	mov	r2, r5
    2fcc:	mov	r3, #0
    2fd0:	movt	r1, #0
    2fd4:	bl	0 <coda_mem_record_add_field>
    2fd8:	ldr	r0, [sp, #164]	; 0xa4
    2fdc:	movw	r1, #0
    2fe0:	mov	r2, r6
    2fe4:	mov	r3, #0
    2fe8:	movt	r1, #0
    2fec:	bl	0 <coda_mem_record_add_field>
    2ff0:	mov	r1, #4
    2ff4:	ldr	r2, [sp, #184]	; 0xb8
    2ff8:	str	r1, [sp]
    2ffc:	mov	r1, #0
    3000:	str	r1, [sp, #4]
    3004:	sub	r1, fp, #144	; 0x90
    3008:	str	r1, [sp, #8]
    300c:	ldr	r1, [sp, #148]	; 0x94
    3010:	ldr	r0, [r2]
    3014:	sub	r1, r1, #11
    3018:	adds	r5, sl, r1
    301c:	mov	sl, r2
    3020:	adc	r6, r7, r1, asr #31
    3024:	mov	r2, r5
    3028:	mov	r3, r6
    302c:	bl	76fc <read_bytes>
    3030:	cmp	r0, #0
    3034:	blt	31f4 <coda_grib_reopen+0x318c>
    3038:	ldr	r0, [fp, #-144]	; 0xffffff70
    303c:	movw	r1, #14135	; 0x3737
    3040:	movt	r1, #14135	; 0x3737
    3044:	cmp	r0, r1
    3048:	bne	33f4 <coda_grib_reopen+0x338c>
    304c:	ldr	r0, [sp, #180]	; 0xb4
    3050:	ldr	r1, [sp, #160]	; 0xa0
    3054:	ldr	r0, [r0]
    3058:	bl	0 <coda_mem_array_add_element>
    305c:	cmp	r0, #0
    3060:	bne	3310 <coda_grib_reopen+0x32a8>
    3064:	ldr	r0, [sp, #192]	; 0xc0
    3068:	ldr	r1, [sp, #196]	; 0xc4
    306c:	adds	r2, r0, r8
    3070:	ldr	r0, [sp, #172]	; 0xac
    3074:	adc	r1, r1, r0
    3078:	ldr	r0, [sp, #188]	; 0xbc
    307c:	ldm	r0, {r0, ip}
    3080:	ldr	r5, [sp, #156]	; 0x9c
    3084:	subs	r7, r0, #1
    3088:	add	r5, r5, #1
    308c:	sbc	r6, ip, #0
    3090:	subs	r7, r2, r7
    3094:	str	r5, [sp, #156]	; 0x9c
    3098:	sbcs	r7, r1, r6
    309c:	blt	15c <coda_grib_reopen+0xf4>
    30a0:	ldr	r0, [sp, #176]	; 0xb0
    30a4:	mov	r4, #0
    30a8:	str	r9, [r0]
    30ac:	b	314c <coda_grib_reopen+0x30e4>
    30b0:	movw	r1, #0
    30b4:	movw	r3, #0
    30b8:	movw	r0, #3019	; 0xbcb
    30bc:	mov	r2, #56	; 0x38
    30c0:	mvn	r4, #0
    30c4:	str	r0, [sp]
    30c8:	movt	r1, #0
    30cc:	movt	r3, #0
    30d0:	mvn	r0, #0
    30d4:	bl	0 <coda_set_error>
    30d8:	ldr	r0, [r5]
    30dc:	bl	0 <coda_close>
    30e0:	b	314c <coda_grib_reopen+0x30e4>
    30e4:	movw	r1, #0
    30e8:	movw	r2, #0
    30ec:	mvn	r0, #0
    30f0:	movw	r3, #3039	; 0xbdf
    30f4:	movt	r1, #0
    30f8:	movt	r2, #0
    30fc:	bl	0 <coda_set_error>
    3100:	ldr	r0, [r9]
    3104:	cmp	r0, #0
    3108:	beq	3110 <coda_grib_reopen+0x30a8>
    310c:	bl	0 <free>
    3110:	ldr	r0, [r4]
    3114:	cmp	r0, #0
    3118:	beq	3120 <coda_grib_reopen+0x30b8>
    311c:	bl	0 <coda_dynamic_type_delete>
    3120:	ldr	r0, [r9, #48]	; 0x30
    3124:	cmp	r0, #0
    3128:	beq	3130 <coda_grib_reopen+0x30c8>
    312c:	bl	0 <free>
    3130:	ldr	r0, [sl]
    3134:	cmp	r0, #0
    3138:	beq	3140 <coda_grib_reopen+0x30d8>
    313c:	bl	0 <coda_bin_close>
    3140:	mov	r0, r9
    3144:	bl	0 <free>
    3148:	mvn	r4, #0
    314c:	mov	r0, r4
    3150:	sub	sp, fp, #72	; 0x48
    3154:	vpop	{d8-d12}
    3158:	add	sp, sp, #4
    315c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3160:	ldr	r2, [sp, #156]	; 0x9c
    3164:	movw	r0, #65236	; 0xfed4
    3168:	movw	r1, #0
    316c:	movt	r0, #65535	; 0xffff
    3170:	movt	r1, #0
    3174:	bl	0 <coda_set_error>
    3178:	b	31fc <coda_grib_reopen+0x3194>
    317c:	bl	0 <__errno_location>
    3180:	ldr	r0, [r0]
    3184:	bl	0 <strerror>
    3188:	movw	r1, #0
    318c:	mov	r2, r0
    3190:	mvn	r0, #21
    3194:	movt	r1, #0
    3198:	bl	0 <coda_set_error>
    319c:	b	31fc <coda_grib_reopen+0x3194>
    31a0:	sub	r5, fp, #165	; 0xa5
    31a4:	mov	r0, r2
    31a8:	mov	r1, r6
    31ac:	mov	r2, r5
    31b0:	bl	0 <coda_str64>
    31b4:	ldrb	r0, [fp, #-144]	; 0xffffff70
    31b8:	movw	r1, #0
    31bc:	mov	r3, r5
    31c0:	movt	r1, #0
    31c4:	b	32a8 <coda_grib_reopen+0x3240>
    31c8:	mov	r0, r6
    31cc:	bl	0 <coda_dynamic_type_delete>
    31d0:	b	31e8 <coda_grib_reopen+0x3180>
    31d4:	movw	r0, #65236	; 0xfed4
    31d8:	movw	r1, #0
    31dc:	movt	r0, #65535	; 0xffff
    31e0:	movt	r1, #0
    31e4:	bl	0 <coda_set_error>
    31e8:	ldr	r0, [sp, #124]	; 0x7c
    31ec:	bl	0 <coda_dynamic_type_delete>
    31f0:	ldr	sl, [sp, #184]	; 0xb8
    31f4:	ldr	r0, [sp, #160]	; 0xa0
    31f8:	bl	0 <coda_dynamic_type_delete>
    31fc:	ldr	r0, [r9]
    3200:	cmp	r0, #0
    3204:	beq	320c <coda_grib_reopen+0x31a4>
    3208:	bl	0 <free>
    320c:	ldr	r0, [sp, #180]	; 0xb4
    3210:	ldr	r0, [r0]
    3214:	cmp	r0, #0
    3218:	bne	311c <coda_grib_reopen+0x30b4>
    321c:	b	3120 <coda_grib_reopen+0x30b8>
    3220:	ldr	r3, [sp, #156]	; 0x9c
    3224:	movw	r1, #0
    3228:	mvn	r0, #199	; 0xc7
    322c:	mov	r2, r5
    3230:	movt	r1, #0
    3234:	bl	0 <coda_set_error>
    3238:	b	31fc <coda_grib_reopen+0x3194>
    323c:	movw	r0, #65236	; 0xfed4
    3240:	movw	r1, #0
    3244:	movt	r0, #65535	; 0xffff
    3248:	movt	r1, #0
    324c:	bl	0 <coda_set_error>
    3250:	mov	r0, sl
    3254:	bl	0 <coda_dynamic_type_delete>
    3258:	b	3278 <coda_grib_reopen+0x3210>
    325c:	movw	r0, #65236	; 0xfed4
    3260:	movw	r1, #0
    3264:	mov	r2, r5
    3268:	mov	r3, r4
    326c:	movt	r0, #65535	; 0xffff
    3270:	movt	r1, #0
    3274:	bl	0 <coda_set_error>
    3278:	ldr	r0, [sp, #52]	; 0x34
    327c:	bl	0 <coda_dynamic_type_delete>
    3280:	b	3658 <coda_grib_reopen+0x35f0>
    3284:	sub	r7, fp, #165	; 0xa5
    3288:	mov	r0, r5
    328c:	mov	r1, r6
    3290:	mov	r2, r7
    3294:	bl	0 <coda_str64>
    3298:	ldrb	r0, [fp, #-140]	; 0xffffff74
    329c:	movw	r1, #0
    32a0:	mov	r3, r7
    32a4:	movt	r1, #0
    32a8:	sub	r2, r0, #48	; 0x30
    32ac:	movw	r0, #65236	; 0xfed4
    32b0:	movt	r0, #65535	; 0xffff
    32b4:	bl	0 <coda_set_error>
    32b8:	b	3658 <coda_grib_reopen+0x35f0>
    32bc:	ldr	r0, [sp, #140]	; 0x8c
    32c0:	bl	0 <coda_dynamic_type_delete>
    32c4:	ldr	r0, [sp, #124]	; 0x7c
    32c8:	bl	0 <coda_dynamic_type_delete>
    32cc:	ldr	r9, [sp, #168]	; 0xa8
    32d0:	b	31f4 <coda_grib_reopen+0x318c>
    32d4:	ldr	r0, [sp, #168]	; 0xa8
    32d8:	cmp	r0, #0
    32dc:	beq	31f4 <coda_grib_reopen+0x318c>
    32e0:	bl	0 <free>
    32e4:	b	31f4 <coda_grib_reopen+0x318c>
    32e8:	ldr	r0, [sp, #168]	; 0xa8
    32ec:	cmp	r0, #0
    32f0:	beq	32f8 <coda_grib_reopen+0x3290>
    32f4:	bl	0 <free>
    32f8:	movw	r0, #65236	; 0xfed4
    32fc:	movw	r1, #0
    3300:	movt	r0, #65535	; 0xffff
    3304:	movt	r1, #0
    3308:	bl	0 <coda_set_error>
    330c:	b	31f4 <coda_grib_reopen+0x318c>
    3310:	ldr	r0, [sp, #164]	; 0xa4
    3314:	b	31f8 <coda_grib_reopen+0x3190>
    3318:	ldr	r0, [sp, #168]	; 0xa8
    331c:	cmp	r0, #0
    3320:	beq	3328 <coda_grib_reopen+0x32c0>
    3324:	bl	0 <free>
    3328:	movw	r0, #65236	; 0xfed4
    332c:	movw	r1, #0
    3330:	movt	r0, #65535	; 0xffff
    3334:	movt	r1, #0
    3338:	bl	0 <coda_set_error>
    333c:	b	31f4 <coda_grib_reopen+0x318c>
    3340:	ldr	r0, [sp, #168]	; 0xa8
    3344:	cmp	r0, #0
    3348:	beq	3350 <coda_grib_reopen+0x32e8>
    334c:	bl	0 <free>
    3350:	movw	r0, #65236	; 0xfed4
    3354:	movw	r1, #0
    3358:	movt	r0, #65535	; 0xffff
    335c:	movt	r1, #0
    3360:	bl	0 <coda_set_error>
    3364:	b	31f4 <coda_grib_reopen+0x318c>
    3368:	ldr	r0, [sp, #168]	; 0xa8
    336c:	cmp	r0, #0
    3370:	beq	3378 <coda_grib_reopen+0x3310>
    3374:	bl	0 <free>
    3378:	movw	r0, #65236	; 0xfed4
    337c:	movw	r1, #0
    3380:	mov	r2, r7
    3384:	movt	r0, #65535	; 0xffff
    3388:	movt	r1, #0
    338c:	b	3478 <coda_grib_reopen+0x3410>
    3390:	mov	r0, r7
    3394:	bl	0 <free>
    3398:	b	3658 <coda_grib_reopen+0x35f0>
    339c:	movw	r0, #65236	; 0xfed4
    33a0:	movw	r1, #0
    33a4:	mvn	r2, #41	; 0x29
    33a8:	b	3428 <coda_grib_reopen+0x33c0>
    33ac:	movw	r0, #65236	; 0xfed4
    33b0:	movw	r1, #0
    33b4:	mvn	r2, #44	; 0x2c
    33b8:	b	3428 <coda_grib_reopen+0x33c0>
    33bc:	movw	r0, #65236	; 0xfed4
    33c0:	uxtb	r3, r1
    33c4:	movw	r1, #0
    33c8:	mvn	r2, #43	; 0x2b
    33cc:	b	3428 <coda_grib_reopen+0x33c0>
    33d0:	movw	r0, #65236	; 0xfed4
    33d4:	movw	r1, #0
    33d8:	mvn	r2, #42	; 0x2a
    33dc:	b	3428 <coda_grib_reopen+0x33c0>
    33e0:	movw	r0, #65236	; 0xfed4
    33e4:	uxtb	r3, r1
    33e8:	movw	r1, #0
    33ec:	mvn	r2, #40	; 0x28
    33f0:	b	3428 <coda_grib_reopen+0x33c0>
    33f4:	sub	r7, fp, #165	; 0xa5
    33f8:	mov	r0, r5
    33fc:	mov	r1, r6
    3400:	mov	r2, r7
    3404:	bl	0 <coda_str64>
    3408:	movw	r1, #0
    340c:	mvn	r0, #21
    3410:	mov	r2, r7
    3414:	movt	r1, #0
    3418:	b	3494 <coda_grib_reopen+0x342c>
    341c:	movw	r0, #65236	; 0xfed4
    3420:	movw	r1, #0
    3424:	mvn	r2, #45	; 0x2d
    3428:	movt	r0, #65535	; 0xffff
    342c:	movt	r1, #0
    3430:	bl	0 <coda_set_error>
    3434:	b	3658 <coda_grib_reopen+0x35f0>
    3438:	movw	r0, #65236	; 0xfed4
    343c:	movw	r1, #0
    3440:	movt	r0, #65535	; 0xffff
    3444:	movt	r1, #0
    3448:	b	3654 <coda_grib_reopen+0x35ec>
    344c:	movw	r0, #65236	; 0xfed4
    3450:	movw	r1, #0
    3454:	movt	r0, #65535	; 0xffff
    3458:	movt	r1, #0
    345c:	bl	0 <coda_set_error>
    3460:	b	3658 <coda_grib_reopen+0x35f0>
    3464:	ldr	r2, [sp, #140]	; 0x8c
    3468:	movw	r0, #65236	; 0xfed4
    346c:	movw	r1, #0
    3470:	movt	r0, #65535	; 0xffff
    3474:	movt	r1, #0
    3478:	bl	0 <coda_set_error>
    347c:	b	31f0 <coda_grib_reopen+0x3188>
    3480:	movw	r0, #65236	; 0xfed4
    3484:	movw	r1, #0
    3488:	mov	r2, r6
    348c:	movt	r0, #65535	; 0xffff
    3490:	movt	r1, #0
    3494:	bl	0 <coda_set_error>
    3498:	b	31f4 <coda_grib_reopen+0x318c>
    349c:	ldr	r2, [sp, #92]	; 0x5c
    34a0:	movw	r0, #65236	; 0xfed4
    34a4:	movw	r1, #0
    34a8:	movt	r0, #65535	; 0xffff
    34ac:	movt	r1, #0
    34b0:	b	3654 <coda_grib_reopen+0x35ec>
    34b4:	mov	r0, r5
    34b8:	bl	0 <coda_grib_type_delete>
    34bc:	b	31f0 <coda_grib_reopen+0x3188>
    34c0:	movw	r0, #65236	; 0xfed4
    34c4:	movw	r1, #0
    34c8:	movt	r0, #65535	; 0xffff
    34cc:	movt	r1, #0
    34d0:	bl	0 <coda_set_error>
    34d4:	b	31f0 <coda_grib_reopen+0x3188>
    34d8:	movw	r0, #65236	; 0xfed4
    34dc:	movw	r1, #0
    34e0:	movt	r0, #65535	; 0xffff
    34e4:	movt	r1, #0
    34e8:	b	3654 <coda_grib_reopen+0x35ec>
    34ec:	movw	r0, #65236	; 0xfed4
    34f0:	movw	r1, #0
    34f4:	movt	r0, #65535	; 0xffff
    34f8:	movt	r1, #0
    34fc:	bl	0 <coda_set_error>
    3500:	b	31f4 <coda_grib_reopen+0x318c>
    3504:	ldr	r0, [sp, #144]	; 0x90
    3508:	movw	r1, #0
    350c:	movt	r1, #0
    3510:	str	r0, [sp]
    3514:	movw	r0, #65236	; 0xfed4
    3518:	movt	r0, #65535	; 0xffff
    351c:	b	3550 <coda_grib_reopen+0x34e8>
    3520:	movw	r1, #0
    3524:	movw	r3, #0
    3528:	movw	r0, #2940	; 0xb7c
    352c:	mov	r2, r5
    3530:	b	3590 <coda_grib_reopen+0x3528>
    3534:	movw	r1, #0
    3538:	movw	r3, #0
    353c:	movw	r0, #2063	; 0x80f
    3540:	str	r0, [sp]
    3544:	movt	r1, #0
    3548:	movt	r3, #0
    354c:	mvn	r0, #0
    3550:	mov	r2, r5
    3554:	bl	0 <coda_set_error>
    3558:	b	31f4 <coda_grib_reopen+0x318c>
    355c:	ldr	r0, [sp, #168]	; 0xa8
    3560:	bl	0 <free>
    3564:	b	31f4 <coda_grib_reopen+0x318c>
    3568:	movw	r0, #65236	; 0xfed4
    356c:	movw	r1, #0
    3570:	movt	r0, #65535	; 0xffff
    3574:	movt	r1, #0
    3578:	bl	0 <coda_set_error>
    357c:	b	3608 <coda_grib_reopen+0x35a0>
    3580:	movw	r1, #0
    3584:	movw	r3, #0
    3588:	movw	r0, #2332	; 0x91c
    358c:	mov	r2, r4
    3590:	str	r0, [sp]
    3594:	movt	r1, #0
    3598:	movt	r3, #0
    359c:	mvn	r0, #0
    35a0:	bl	0 <coda_set_error>
    35a4:	b	3658 <coda_grib_reopen+0x35f0>
    35a8:	movw	r1, #0
    35ac:	movw	r3, #0
    35b0:	movw	r0, #1662	; 0x67e
    35b4:	mov	r2, r5
    35b8:	str	r0, [sp]
    35bc:	movt	r1, #0
    35c0:	movt	r3, #0
    35c4:	mvn	r0, #0
    35c8:	bl	0 <coda_set_error>
    35cc:	b	31f0 <coda_grib_reopen+0x3188>
    35d0:	mov	r0, r7
    35d4:	bl	0 <free>
    35d8:	b	31f0 <coda_grib_reopen+0x3188>
    35dc:	movw	r0, #65236	; 0xfed4
    35e0:	movw	r1, #0
    35e4:	movt	r0, #65535	; 0xffff
    35e8:	movt	r1, #0
    35ec:	bl	0 <coda_set_error>
    35f0:	b	3658 <coda_grib_reopen+0x35f0>
    35f4:	movw	r0, #65236	; 0xfed4
    35f8:	movw	r1, #0
    35fc:	movt	r0, #65535	; 0xffff
    3600:	movt	r1, #0
    3604:	bl	0 <coda_set_error>
    3608:	mov	r0, r4
    360c:	bl	0 <coda_dynamic_type_delete>
    3610:	b	3658 <coda_grib_reopen+0x35f0>
    3614:	movw	r0, #65236	; 0xfed4
    3618:	movw	r1, #0
    361c:	movt	r0, #65535	; 0xffff
    3620:	movt	r1, #0
    3624:	bl	0 <coda_set_error>
    3628:	b	3658 <coda_grib_reopen+0x35f0>
    362c:	sub	r5, fp, #165	; 0xa5
    3630:	mov	r0, r2
    3634:	mov	r1, r3
    3638:	mov	r2, r5
    363c:	bl	0 <coda_str64>
    3640:	movw	r0, #65236	; 0xfed4
    3644:	movw	r1, #0
    3648:	mov	r2, r5
    364c:	movt	r0, #65535	; 0xffff
    3650:	movt	r1, #0
    3654:	bl	0 <coda_set_error>
    3658:	ldr	r0, [sp, #160]	; 0xa0
    365c:	bl	0 <coda_dynamic_type_delete>
    3660:	ldr	r0, [r9]
    3664:	cmp	r0, #0
    3668:	beq	3670 <coda_grib_reopen+0x3608>
    366c:	bl	0 <free>
    3670:	ldr	r0, [sp, #180]	; 0xb4
    3674:	ldr	r4, [sp, #184]	; 0xb8
    3678:	ldr	r0, [r0]
    367c:	cmp	r0, #0
    3680:	beq	3688 <coda_grib_reopen+0x3620>
    3684:	bl	0 <coda_dynamic_type_delete>
    3688:	ldr	r0, [r9, #48]	; 0x30
    368c:	cmp	r0, #0
    3690:	beq	3698 <coda_grib_reopen+0x3630>
    3694:	bl	0 <free>
    3698:	ldr	r0, [r4]
    369c:	cmp	r0, #0
    36a0:	bne	313c <coda_grib_reopen+0x30d4>
    36a4:	b	3140 <coda_grib_reopen+0x30d8>
    36a8:	movw	r0, #65236	; 0xfed4
    36ac:	movw	r1, #0
    36b0:	movt	r0, #65535	; 0xffff
    36b4:	movt	r1, #0
    36b8:	b	31e4 <coda_grib_reopen+0x317c>
    36bc:	movw	r0, #65236	; 0xfed4
    36c0:	movw	r1, #0
    36c4:	lsl	r3, r6, #1
    36c8:	movt	r0, #65535	; 0xffff
    36cc:	movt	r1, #0
    36d0:	bl	0 <coda_set_error>
    36d4:	ldr	r0, [sp, #124]	; 0x7c
    36d8:	bl	0 <coda_dynamic_type_delete>
    36dc:	b	31f4 <coda_grib_reopen+0x318c>
    36e0:	movw	r0, #0
    36e4:	movw	r1, #0
    36e8:	movw	r3, #0
    36ec:	mov	r2, #62	; 0x3e
    36f0:	movt	r0, #0
    36f4:	movt	r1, #0
    36f8:	movt	r3, #0
    36fc:	bl	0 <__assert_fail>
    3700:	.word	0x00000000

00003704 <grib_init>:
    3704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3708:	add	fp, sp, #28
    370c:	sub	sp, sp, #4
    3710:	ldr	sl, [pc, #20]	; 372c <grib_init+0x28>
    3714:	bl	0 <__aeabi_read_tp>
    3718:	ldr	r0, [r0, sl]
    371c:	mov	r4, #0
    3720:	cmp	r0, #0
    3724:	bne	7694 <grib_init+0x3f90>
    3728:	b	3730 <grib_init+0x2c>
    372c:	.word	0x00000000
    3730:	mov	r0, #572	; 0x23c
    3734:	bl	0 <malloc>
    3738:	mov	r1, r0
    373c:	bl	0 <__aeabi_read_tp>
    3740:	cmp	r1, #0
    3744:	str	r1, [r0, sl]
    3748:	beq	766c <grib_init+0x3f68>
    374c:	mov	r0, r1
    3750:	mov	r1, #0
    3754:	mov	r2, #572	; 0x23c
    3758:	mov	r4, #0
    375c:	bl	0 <memset>
    3760:	mov	r0, #7
    3764:	mov	r1, #2
    3768:	bl	0 <coda_type_number_new>
    376c:	mov	r1, r0
    3770:	bl	0 <__aeabi_read_tp>
    3774:	mov	r5, r0
    3778:	ldr	r0, [r0, sl]
    377c:	str	r1, [r0]
    3780:	mov	r0, r1
    3784:	mov	r1, #1
    3788:	bl	0 <coda_type_number_set_endianness>
    378c:	ldr	r0, [r5, sl]
    3790:	mov	r1, #4
    3794:	ldr	r0, [r0]
    3798:	bl	0 <coda_type_set_read_type>
    379c:	ldr	r0, [r5, sl]
    37a0:	mov	r2, #32
    37a4:	mov	r3, #0
    37a8:	ldr	r0, [r0]
    37ac:	bl	0 <coda_type_set_bit_size>
    37b0:	mov	r0, #7
    37b4:	mov	r1, #2
    37b8:	bl	0 <coda_type_number_new>
    37bc:	ldr	r1, [r5, sl]
    37c0:	str	r0, [r1, #4]
    37c4:	mov	r1, #1
    37c8:	bl	0 <coda_type_number_set_endianness>
    37cc:	ldr	r0, [r5, sl]
    37d0:	mov	r1, #5
    37d4:	ldr	r0, [r0, #4]
    37d8:	bl	0 <coda_type_set_read_type>
    37dc:	ldr	r0, [r5, sl]
    37e0:	mov	r2, #32
    37e4:	mov	r3, #0
    37e8:	ldr	r0, [r0, #4]
    37ec:	bl	0 <coda_type_set_bit_size>
    37f0:	mov	r0, #7
    37f4:	mov	r1, #2
    37f8:	bl	0 <coda_type_number_new>
    37fc:	ldr	r1, [r5, sl]
    3800:	str	r0, [r1, #8]
    3804:	mov	r1, #1
    3808:	bl	0 <coda_type_number_set_endianness>
    380c:	ldr	r0, [r5, sl]
    3810:	mov	r1, #1
    3814:	ldr	r0, [r0, #8]
    3818:	bl	0 <coda_type_set_read_type>
    381c:	ldr	r0, [r5, sl]
    3820:	mov	r2, #8
    3824:	mov	r3, #0
    3828:	ldr	r0, [r0, #8]
    382c:	bl	0 <coda_type_set_bit_size>
    3830:	ldr	r0, [r5, sl]
    3834:	movw	r1, #0
    3838:	movt	r1, #0
    383c:	ldr	r0, [r0, #8]
    3840:	bl	0 <coda_type_set_description>
    3844:	mov	r0, #7
    3848:	mov	r1, #2
    384c:	bl	0 <coda_type_number_new>
    3850:	ldr	r1, [r5, sl]
    3854:	str	r0, [r1, #12]
    3858:	mov	r1, #1
    385c:	bl	0 <coda_type_number_set_endianness>
    3860:	ldr	r0, [r5, sl]
    3864:	mov	r1, #1
    3868:	ldr	r0, [r0, #12]
    386c:	bl	0 <coda_type_set_read_type>
    3870:	ldr	r0, [r5, sl]
    3874:	mov	r2, #8
    3878:	mov	r3, #0
    387c:	ldr	r0, [r0, #12]
    3880:	bl	0 <coda_type_set_bit_size>
    3884:	ldr	r0, [r5, sl]
    3888:	movw	r1, #0
    388c:	movt	r1, #0
    3890:	ldr	r0, [r0, #12]
    3894:	bl	0 <coda_type_set_description>
    3898:	mov	r0, #7
    389c:	mov	r1, #2
    38a0:	bl	0 <coda_type_number_new>
    38a4:	ldr	r1, [r5, sl]
    38a8:	str	r0, [r1, #16]
    38ac:	mov	r1, #1
    38b0:	bl	0 <coda_type_number_set_endianness>
    38b4:	ldr	r0, [r5, sl]
    38b8:	mov	r1, #1
    38bc:	ldr	r0, [r0, #16]
    38c0:	bl	0 <coda_type_set_read_type>
    38c4:	ldr	r0, [r5, sl]
    38c8:	mov	r2, #8
    38cc:	mov	r3, #0
    38d0:	ldr	r0, [r0, #16]
    38d4:	bl	0 <coda_type_set_bit_size>
    38d8:	ldr	r0, [r5, sl]
    38dc:	movw	r1, #0
    38e0:	movt	r1, #0
    38e4:	ldr	r0, [r0, #16]
    38e8:	bl	0 <coda_type_set_description>
    38ec:	mov	r0, #7
    38f0:	mov	r1, #2
    38f4:	bl	0 <coda_type_number_new>
    38f8:	ldr	r1, [r5, sl]
    38fc:	str	r0, [r1, #20]
    3900:	mov	r1, #1
    3904:	bl	0 <coda_type_number_set_endianness>
    3908:	ldr	r0, [r5, sl]
    390c:	mov	r1, #1
    3910:	ldr	r0, [r0, #20]
    3914:	bl	0 <coda_type_set_read_type>
    3918:	ldr	r0, [r5, sl]
    391c:	mov	r2, #8
    3920:	mov	r3, #0
    3924:	ldr	r0, [r0, #20]
    3928:	bl	0 <coda_type_set_bit_size>
    392c:	ldr	r0, [r5, sl]
    3930:	movw	r1, #0
    3934:	movt	r1, #0
    3938:	ldr	r0, [r0, #20]
    393c:	bl	0 <coda_type_set_description>
    3940:	mov	r0, #7
    3944:	mov	r1, #2
    3948:	bl	0 <coda_type_number_new>
    394c:	ldr	r1, [r5, sl]
    3950:	str	r0, [r1, #24]
    3954:	mov	r1, #1
    3958:	bl	0 <coda_type_number_set_endianness>
    395c:	ldr	r0, [r5, sl]
    3960:	mov	r1, #1
    3964:	ldr	r0, [r0, #24]
    3968:	bl	0 <coda_type_set_read_type>
    396c:	ldr	r0, [r5, sl]
    3970:	mov	r2, #8
    3974:	mov	r3, #0
    3978:	ldr	r0, [r0, #24]
    397c:	bl	0 <coda_type_set_bit_size>
    3980:	ldr	r0, [r5, sl]
    3984:	movw	r1, #0
    3988:	movt	r1, #0
    398c:	ldr	r0, [r0, #24]
    3990:	bl	0 <coda_type_set_description>
    3994:	mov	r0, #7
    3998:	mov	r1, #2
    399c:	bl	0 <coda_type_number_new>
    39a0:	ldr	r1, [r5, sl]
    39a4:	str	r0, [r1, #28]
    39a8:	mov	r1, #1
    39ac:	bl	0 <coda_type_number_set_endianness>
    39b0:	ldr	r0, [r5, sl]
    39b4:	mov	r1, #1
    39b8:	ldr	r0, [r0, #28]
    39bc:	bl	0 <coda_type_set_read_type>
    39c0:	ldr	r0, [r5, sl]
    39c4:	mov	r2, #8
    39c8:	mov	r3, #0
    39cc:	ldr	r0, [r0, #28]
    39d0:	bl	0 <coda_type_set_bit_size>
    39d4:	ldr	r0, [r5, sl]
    39d8:	movw	r1, #0
    39dc:	movt	r1, #0
    39e0:	ldr	r0, [r0, #28]
    39e4:	bl	0 <coda_type_set_description>
    39e8:	mov	r0, #7
    39ec:	mov	r1, #2
    39f0:	bl	0 <coda_type_number_new>
    39f4:	ldr	r1, [r5, sl]
    39f8:	str	r0, [r1, #32]
    39fc:	mov	r1, #1
    3a00:	bl	0 <coda_type_number_set_endianness>
    3a04:	ldr	r0, [r5, sl]
    3a08:	mov	r1, #1
    3a0c:	ldr	r0, [r0, #32]
    3a10:	bl	0 <coda_type_set_read_type>
    3a14:	ldr	r0, [r5, sl]
    3a18:	mov	r2, #8
    3a1c:	mov	r3, #0
    3a20:	ldr	r0, [r0, #32]
    3a24:	bl	0 <coda_type_set_bit_size>
    3a28:	ldr	r0, [r5, sl]
    3a2c:	movw	r1, #0
    3a30:	movt	r1, #0
    3a34:	ldr	r0, [r0, #32]
    3a38:	bl	0 <coda_type_set_description>
    3a3c:	mov	r0, #7
    3a40:	mov	r1, #2
    3a44:	bl	0 <coda_type_number_new>
    3a48:	ldr	r1, [r5, sl]
    3a4c:	str	r0, [r1, #36]	; 0x24
    3a50:	mov	r1, #1
    3a54:	bl	0 <coda_type_number_set_endianness>
    3a58:	ldr	r0, [r5, sl]
    3a5c:	mov	r1, #3
    3a60:	ldr	r0, [r0, #36]	; 0x24
    3a64:	bl	0 <coda_type_set_read_type>
    3a68:	ldr	r0, [r5, sl]
    3a6c:	mov	r2, #16
    3a70:	mov	r3, #0
    3a74:	ldr	r0, [r0, #36]	; 0x24
    3a78:	bl	0 <coda_type_set_bit_size>
    3a7c:	ldr	r0, [r5, sl]
    3a80:	movw	r1, #0
    3a84:	movt	r1, #0
    3a88:	ldr	r0, [r0, #36]	; 0x24
    3a8c:	bl	0 <coda_type_set_description>
    3a90:	mov	r0, #7
    3a94:	mov	r1, #2
    3a98:	bl	0 <coda_type_number_new>
    3a9c:	ldr	r1, [r5, sl]
    3aa0:	str	r0, [r1, #40]	; 0x28
    3aa4:	mov	r1, #1
    3aa8:	bl	0 <coda_type_number_set_endianness>
    3aac:	ldr	r0, [r5, sl]
    3ab0:	mov	r1, #1
    3ab4:	ldr	r0, [r0, #40]	; 0x28
    3ab8:	bl	0 <coda_type_set_read_type>
    3abc:	ldr	r0, [r5, sl]
    3ac0:	mov	r2, #8
    3ac4:	mov	r3, #0
    3ac8:	ldr	r0, [r0, #40]	; 0x28
    3acc:	bl	0 <coda_type_set_bit_size>
    3ad0:	ldr	r0, [r5, sl]
    3ad4:	movw	r1, #0
    3ad8:	movt	r1, #0
    3adc:	ldr	r0, [r0, #40]	; 0x28
    3ae0:	bl	0 <coda_type_set_description>
    3ae4:	mov	r0, #7
    3ae8:	mov	r1, #2
    3aec:	bl	0 <coda_type_number_new>
    3af0:	ldr	r1, [r5, sl]
    3af4:	str	r0, [r1, #44]	; 0x2c
    3af8:	mov	r1, #1
    3afc:	bl	0 <coda_type_number_set_endianness>
    3b00:	ldr	r0, [r5, sl]
    3b04:	mov	r1, #3
    3b08:	ldr	r0, [r0, #44]	; 0x2c
    3b0c:	bl	0 <coda_type_set_read_type>
    3b10:	ldr	r0, [r5, sl]
    3b14:	mov	r2, #16
    3b18:	mov	r3, #0
    3b1c:	ldr	r0, [r0, #44]	; 0x2c
    3b20:	bl	0 <coda_type_set_bit_size>
    3b24:	ldr	r0, [r5, sl]
    3b28:	movw	r1, #0
    3b2c:	movt	r1, #0
    3b30:	ldr	r0, [r0, #44]	; 0x2c
    3b34:	bl	0 <coda_type_set_description>
    3b38:	mov	r0, #7
    3b3c:	mov	r1, #2
    3b40:	bl	0 <coda_type_number_new>
    3b44:	ldr	r1, [r5, sl]
    3b48:	str	r0, [r1, #48]	; 0x30
    3b4c:	mov	r1, #1
    3b50:	bl	0 <coda_type_number_set_endianness>
    3b54:	ldr	r0, [r5, sl]
    3b58:	mov	r1, #1
    3b5c:	ldr	r0, [r0, #48]	; 0x30
    3b60:	bl	0 <coda_type_set_read_type>
    3b64:	ldr	r0, [r5, sl]
    3b68:	mov	r2, #8
    3b6c:	mov	r3, #0
    3b70:	ldr	r0, [r0, #48]	; 0x30
    3b74:	bl	0 <coda_type_set_bit_size>
    3b78:	ldr	r0, [r5, sl]
    3b7c:	movw	r1, #0
    3b80:	movt	r1, #0
    3b84:	ldr	r0, [r0, #48]	; 0x30
    3b88:	bl	0 <coda_type_set_description>
    3b8c:	mov	r0, #7
    3b90:	mov	r1, #2
    3b94:	bl	0 <coda_type_number_new>
    3b98:	ldr	r1, [r5, sl]
    3b9c:	str	r0, [r1, #52]	; 0x34
    3ba0:	mov	r1, #1
    3ba4:	bl	0 <coda_type_number_set_endianness>
    3ba8:	ldr	r0, [r5, sl]
    3bac:	mov	r1, #1
    3bb0:	ldr	r0, [r0, #52]	; 0x34
    3bb4:	bl	0 <coda_type_set_read_type>
    3bb8:	ldr	r0, [r5, sl]
    3bbc:	mov	r2, #8
    3bc0:	mov	r3, #0
    3bc4:	ldr	r0, [r0, #52]	; 0x34
    3bc8:	bl	0 <coda_type_set_bit_size>
    3bcc:	ldr	r0, [r5, sl]
    3bd0:	movw	r1, #0
    3bd4:	movt	r1, #0
    3bd8:	ldr	r0, [r0, #52]	; 0x34
    3bdc:	bl	0 <coda_type_set_description>
    3be0:	mov	r0, #7
    3be4:	mov	r1, #2
    3be8:	bl	0 <coda_type_number_new>
    3bec:	ldr	r1, [r5, sl]
    3bf0:	str	r0, [r1, #56]	; 0x38
    3bf4:	mov	r1, #1
    3bf8:	bl	0 <coda_type_number_set_endianness>
    3bfc:	ldr	r0, [r5, sl]
    3c00:	mov	r1, #1
    3c04:	ldr	r0, [r0, #56]	; 0x38
    3c08:	bl	0 <coda_type_set_read_type>
    3c0c:	ldr	r0, [r5, sl]
    3c10:	mov	r2, #8
    3c14:	mov	r3, #0
    3c18:	ldr	r0, [r0, #56]	; 0x38
    3c1c:	bl	0 <coda_type_set_bit_size>
    3c20:	ldr	r0, [r5, sl]
    3c24:	movw	r1, #0
    3c28:	movt	r1, #0
    3c2c:	ldr	r0, [r0, #56]	; 0x38
    3c30:	bl	0 <coda_type_set_description>
    3c34:	mov	r0, #7
    3c38:	mov	r1, #2
    3c3c:	bl	0 <coda_type_number_new>
    3c40:	ldr	r1, [r5, sl]
    3c44:	str	r0, [r1, #60]	; 0x3c
    3c48:	mov	r1, #1
    3c4c:	bl	0 <coda_type_number_set_endianness>
    3c50:	ldr	r0, [r5, sl]
    3c54:	mov	r1, #1
    3c58:	ldr	r0, [r0, #60]	; 0x3c
    3c5c:	bl	0 <coda_type_set_read_type>
    3c60:	ldr	r0, [r5, sl]
    3c64:	mov	r2, #8
    3c68:	mov	r3, #0
    3c6c:	ldr	r0, [r0, #60]	; 0x3c
    3c70:	bl	0 <coda_type_set_bit_size>
    3c74:	ldr	r0, [r5, sl]
    3c78:	movw	r1, #0
    3c7c:	movt	r1, #0
    3c80:	ldr	r0, [r0, #60]	; 0x3c
    3c84:	bl	0 <coda_type_set_description>
    3c88:	mov	r0, #7
    3c8c:	mov	r1, #2
    3c90:	bl	0 <coda_type_number_new>
    3c94:	ldr	r1, [r5, sl]
    3c98:	str	r0, [r1, #64]	; 0x40
    3c9c:	mov	r1, #1
    3ca0:	bl	0 <coda_type_number_set_endianness>
    3ca4:	ldr	r0, [r5, sl]
    3ca8:	mov	r1, #1
    3cac:	ldr	r0, [r0, #64]	; 0x40
    3cb0:	bl	0 <coda_type_set_read_type>
    3cb4:	ldr	r0, [r5, sl]
    3cb8:	mov	r2, #8
    3cbc:	mov	r3, #0
    3cc0:	ldr	r0, [r0, #64]	; 0x40
    3cc4:	bl	0 <coda_type_set_bit_size>
    3cc8:	ldr	r0, [r5, sl]
    3ccc:	movw	r1, #0
    3cd0:	movt	r1, #0
    3cd4:	ldr	r0, [r0, #64]	; 0x40
    3cd8:	bl	0 <coda_type_set_description>
    3cdc:	mov	r0, #7
    3ce0:	mov	r1, #2
    3ce4:	bl	0 <coda_type_number_new>
    3ce8:	ldr	r1, [r5, sl]
    3cec:	str	r0, [r1, #68]	; 0x44
    3cf0:	mov	r1, #1
    3cf4:	bl	0 <coda_type_number_set_endianness>
    3cf8:	ldr	r0, [r5, sl]
    3cfc:	mov	r1, #1
    3d00:	ldr	r0, [r0, #68]	; 0x44
    3d04:	bl	0 <coda_type_set_read_type>
    3d08:	ldr	r0, [r5, sl]
    3d0c:	mov	r2, #8
    3d10:	mov	r3, #0
    3d14:	ldr	r0, [r0, #68]	; 0x44
    3d18:	bl	0 <coda_type_set_bit_size>
    3d1c:	ldr	r0, [r5, sl]
    3d20:	movw	r1, #0
    3d24:	movt	r1, #0
    3d28:	ldr	r0, [r0, #68]	; 0x44
    3d2c:	bl	0 <coda_type_set_description>
    3d30:	mov	r0, #7
    3d34:	mov	r1, #2
    3d38:	bl	0 <coda_type_number_new>
    3d3c:	ldr	r1, [r5, sl]
    3d40:	str	r0, [r1, #72]	; 0x48
    3d44:	mov	r1, #1
    3d48:	bl	0 <coda_type_number_set_endianness>
    3d4c:	ldr	r0, [r5, sl]
    3d50:	mov	r1, #1
    3d54:	ldr	r0, [r0, #72]	; 0x48
    3d58:	bl	0 <coda_type_set_read_type>
    3d5c:	ldr	r0, [r5, sl]
    3d60:	mov	r2, #8
    3d64:	mov	r3, #0
    3d68:	ldr	r0, [r0, #72]	; 0x48
    3d6c:	bl	0 <coda_type_set_bit_size>
    3d70:	ldr	r0, [r5, sl]
    3d74:	movw	r6, #0
    3d78:	movt	r6, #0
    3d7c:	mov	r1, r6
    3d80:	ldr	r0, [r0, #72]	; 0x48
    3d84:	bl	0 <coda_type_set_description>
    3d88:	mov	r0, #7
    3d8c:	mov	r1, #2
    3d90:	bl	0 <coda_type_number_new>
    3d94:	ldr	r1, [r5, sl]
    3d98:	str	r0, [r1, #76]	; 0x4c
    3d9c:	mov	r1, #1
    3da0:	bl	0 <coda_type_number_set_endianness>
    3da4:	ldr	r0, [r5, sl]
    3da8:	mov	r1, #1
    3dac:	ldr	r0, [r0, #76]	; 0x4c
    3db0:	bl	0 <coda_type_set_read_type>
    3db4:	ldr	r0, [r5, sl]
    3db8:	mov	r2, #8
    3dbc:	mov	r3, #0
    3dc0:	ldr	r0, [r0, #76]	; 0x4c
    3dc4:	bl	0 <coda_type_set_bit_size>
    3dc8:	ldr	r0, [r5, sl]
    3dcc:	mov	r1, r6
    3dd0:	ldr	r0, [r0, #76]	; 0x4c
    3dd4:	bl	0 <coda_type_set_description>
    3dd8:	mov	r0, #7
    3ddc:	mov	r1, #2
    3de0:	bl	0 <coda_type_number_new>
    3de4:	ldr	r1, [r5, sl]
    3de8:	str	r0, [r1, #80]	; 0x50
    3dec:	mov	r1, #1
    3df0:	bl	0 <coda_type_number_set_endianness>
    3df4:	ldr	r0, [r5, sl]
    3df8:	mov	r1, #1
    3dfc:	ldr	r0, [r0, #80]	; 0x50
    3e00:	bl	0 <coda_type_set_read_type>
    3e04:	ldr	r0, [r5, sl]
    3e08:	mov	r2, #8
    3e0c:	mov	r3, #0
    3e10:	ldr	r0, [r0, #80]	; 0x50
    3e14:	bl	0 <coda_type_set_bit_size>
    3e18:	ldr	r0, [r5, sl]
    3e1c:	movw	r1, #0
    3e20:	movt	r1, #0
    3e24:	ldr	r0, [r0, #80]	; 0x50
    3e28:	bl	0 <coda_type_set_description>
    3e2c:	mov	r0, #7
    3e30:	mov	r1, #2
    3e34:	bl	0 <coda_type_number_new>
    3e38:	ldr	r1, [r5, sl]
    3e3c:	str	r0, [r1, #84]	; 0x54
    3e40:	mov	r1, #1
    3e44:	bl	0 <coda_type_number_set_endianness>
    3e48:	ldr	r0, [r5, sl]
    3e4c:	mov	r1, #3
    3e50:	ldr	r0, [r0, #84]	; 0x54
    3e54:	bl	0 <coda_type_set_read_type>
    3e58:	ldr	r0, [r5, sl]
    3e5c:	mov	r2, #16
    3e60:	mov	r3, #0
    3e64:	ldr	r0, [r0, #84]	; 0x54
    3e68:	bl	0 <coda_type_set_bit_size>
    3e6c:	ldr	r0, [r5, sl]
    3e70:	movw	r1, #0
    3e74:	movt	r1, #0
    3e78:	ldr	r0, [r0, #84]	; 0x54
    3e7c:	bl	0 <coda_type_set_description>
    3e80:	mov	r0, #7
    3e84:	mov	r1, #2
    3e88:	bl	0 <coda_type_number_new>
    3e8c:	ldr	r1, [r5, sl]
    3e90:	str	r0, [r1, #88]	; 0x58
    3e94:	mov	r1, #1
    3e98:	bl	0 <coda_type_number_set_endianness>
    3e9c:	ldr	r0, [r5, sl]
    3ea0:	mov	r1, #1
    3ea4:	ldr	r0, [r0, #88]	; 0x58
    3ea8:	bl	0 <coda_type_set_read_type>
    3eac:	ldr	r0, [r5, sl]
    3eb0:	mov	r2, #8
    3eb4:	mov	r3, #0
    3eb8:	ldr	r0, [r0, #88]	; 0x58
    3ebc:	bl	0 <coda_type_set_bit_size>
    3ec0:	ldr	r0, [r5, sl]
    3ec4:	movw	r1, #0
    3ec8:	movt	r1, #0
    3ecc:	ldr	r0, [r0, #88]	; 0x58
    3ed0:	bl	0 <coda_type_set_description>
    3ed4:	mov	r0, #7
    3ed8:	mov	r1, #2
    3edc:	bl	0 <coda_type_number_new>
    3ee0:	ldr	r1, [r5, sl]
    3ee4:	str	r0, [r1, #92]	; 0x5c
    3ee8:	mov	r1, #1
    3eec:	bl	0 <coda_type_number_set_endianness>
    3ef0:	ldr	r0, [r5, sl]
    3ef4:	mov	r1, #1
    3ef8:	ldr	r0, [r0, #92]	; 0x5c
    3efc:	bl	0 <coda_type_set_read_type>
    3f00:	ldr	r0, [r5, sl]
    3f04:	mov	r2, #8
    3f08:	mov	r3, #0
    3f0c:	ldr	r0, [r0, #92]	; 0x5c
    3f10:	bl	0 <coda_type_set_bit_size>
    3f14:	ldr	r0, [r5, sl]
    3f18:	movw	r1, #0
    3f1c:	movt	r1, #0
    3f20:	ldr	r0, [r0, #92]	; 0x5c
    3f24:	bl	0 <coda_type_set_description>
    3f28:	mov	r0, #7
    3f2c:	mov	r1, #2
    3f30:	bl	0 <coda_type_number_new>
    3f34:	ldr	r1, [r5, sl]
    3f38:	str	r0, [r1, #96]	; 0x60
    3f3c:	mov	r1, #1
    3f40:	bl	0 <coda_type_number_set_endianness>
    3f44:	ldr	r0, [r5, sl]
    3f48:	mov	r1, #1
    3f4c:	ldr	r0, [r0, #96]	; 0x60
    3f50:	bl	0 <coda_type_set_read_type>
    3f54:	ldr	r0, [r5, sl]
    3f58:	mov	r2, #8
    3f5c:	mov	r3, #0
    3f60:	ldr	r0, [r0, #96]	; 0x60
    3f64:	bl	0 <coda_type_set_bit_size>
    3f68:	ldr	r0, [r5, sl]
    3f6c:	movw	r1, #0
    3f70:	movt	r1, #0
    3f74:	ldr	r0, [r0, #96]	; 0x60
    3f78:	bl	0 <coda_type_set_description>
    3f7c:	mov	r0, #7
    3f80:	mov	r1, #2
    3f84:	bl	0 <coda_type_number_new>
    3f88:	ldr	r1, [r5, sl]
    3f8c:	str	r0, [r1, #100]	; 0x64
    3f90:	mov	r1, #1
    3f94:	bl	0 <coda_type_number_set_endianness>
    3f98:	ldr	r0, [r5, sl]
    3f9c:	mov	r1, #2
    3fa0:	ldr	r0, [r0, #100]	; 0x64
    3fa4:	bl	0 <coda_type_set_read_type>
    3fa8:	ldr	r0, [r5, sl]
    3fac:	mov	r2, #16
    3fb0:	mov	r3, #0
    3fb4:	ldr	r0, [r0, #100]	; 0x64
    3fb8:	bl	0 <coda_type_set_bit_size>
    3fbc:	ldr	r0, [r5, sl]
    3fc0:	movw	r1, #0
    3fc4:	movt	r1, #0
    3fc8:	ldr	r0, [r0, #100]	; 0x64
    3fcc:	bl	0 <coda_type_set_description>
    3fd0:	mov	r0, #7
    3fd4:	mov	r1, #2
    3fd8:	bl	0 <coda_type_number_new>
    3fdc:	ldr	r1, [r5, sl]
    3fe0:	str	r0, [r1, #104]	; 0x68
    3fe4:	mov	r1, #1
    3fe8:	bl	0 <coda_type_number_set_endianness>
    3fec:	ldr	r0, [r5, sl]
    3ff0:	mov	r1, #1
    3ff4:	ldr	r0, [r0, #104]	; 0x68
    3ff8:	bl	0 <coda_type_set_read_type>
    3ffc:	ldr	r0, [r5, sl]
    4000:	mov	r2, #8
    4004:	mov	r3, #0
    4008:	ldr	r0, [r0, #104]	; 0x68
    400c:	bl	0 <coda_type_set_bit_size>
    4010:	ldr	r0, [r5, sl]
    4014:	movw	r1, #0
    4018:	movt	r1, #0
    401c:	ldr	r0, [r0, #104]	; 0x68
    4020:	bl	0 <coda_type_set_description>
    4024:	mov	r0, #7
    4028:	mov	r1, #2
    402c:	bl	0 <coda_type_number_new>
    4030:	ldr	r1, [r5, sl]
    4034:	str	r0, [r1, #108]	; 0x6c
    4038:	mov	r1, #1
    403c:	bl	0 <coda_type_number_set_endianness>
    4040:	ldr	r0, [r5, sl]
    4044:	mov	r1, #1
    4048:	ldr	r0, [r0, #108]	; 0x6c
    404c:	bl	0 <coda_type_set_read_type>
    4050:	ldr	r0, [r5, sl]
    4054:	mov	r2, #8
    4058:	mov	r3, #0
    405c:	ldr	r0, [r0, #108]	; 0x6c
    4060:	bl	0 <coda_type_set_bit_size>
    4064:	ldr	r0, [r5, sl]
    4068:	movw	r1, #0
    406c:	movt	r1, #0
    4070:	ldr	r0, [r0, #108]	; 0x6c
    4074:	bl	0 <coda_type_set_description>
    4078:	mov	r0, #7
    407c:	mov	r1, #2
    4080:	bl	0 <coda_type_number_new>
    4084:	ldr	r1, [r5, sl]
    4088:	str	r0, [r1, #112]	; 0x70
    408c:	mov	r1, #1
    4090:	bl	0 <coda_type_number_set_endianness>
    4094:	ldr	r0, [r5, sl]
    4098:	mov	r1, #1
    409c:	ldr	r0, [r0, #112]	; 0x70
    40a0:	bl	0 <coda_type_set_read_type>
    40a4:	ldr	r0, [r5, sl]
    40a8:	mov	r2, #8
    40ac:	mov	r3, #0
    40b0:	ldr	r0, [r0, #112]	; 0x70
    40b4:	bl	0 <coda_type_set_bit_size>
    40b8:	ldr	r0, [r5, sl]
    40bc:	movw	r1, #0
    40c0:	movt	r1, #0
    40c4:	ldr	r0, [r0, #112]	; 0x70
    40c8:	bl	0 <coda_type_set_description>
    40cc:	mov	r0, #7
    40d0:	mov	r1, #2
    40d4:	bl	0 <coda_type_number_new>
    40d8:	ldr	r1, [r5, sl]
    40dc:	str	r0, [r1, #116]	; 0x74
    40e0:	mov	r1, #1
    40e4:	bl	0 <coda_type_number_set_endianness>
    40e8:	ldr	r0, [r5, sl]
    40ec:	mov	r1, #1
    40f0:	ldr	r0, [r0, #116]	; 0x74
    40f4:	bl	0 <coda_type_set_read_type>
    40f8:	ldr	r0, [r5, sl]
    40fc:	mov	r2, #8
    4100:	mov	r3, #0
    4104:	ldr	r0, [r0, #116]	; 0x74
    4108:	bl	0 <coda_type_set_bit_size>
    410c:	ldr	r0, [r5, sl]
    4110:	movw	r1, #0
    4114:	movt	r1, #0
    4118:	ldr	r0, [r0, #116]	; 0x74
    411c:	bl	0 <coda_type_set_description>
    4120:	mov	r0, #7
    4124:	mov	r1, #2
    4128:	bl	0 <coda_type_number_new>
    412c:	ldr	r1, [r5, sl]
    4130:	str	r0, [r1, #120]	; 0x78
    4134:	mov	r1, #1
    4138:	bl	0 <coda_type_number_set_endianness>
    413c:	ldr	r0, [r5, sl]
    4140:	mov	r1, #1
    4144:	ldr	r0, [r0, #120]	; 0x78
    4148:	bl	0 <coda_type_set_read_type>
    414c:	ldr	r0, [r5, sl]
    4150:	mov	r2, #8
    4154:	mov	r3, #0
    4158:	ldr	r0, [r0, #120]	; 0x78
    415c:	bl	0 <coda_type_set_bit_size>
    4160:	ldr	r0, [r5, sl]
    4164:	movw	r1, #0
    4168:	movt	r1, #0
    416c:	ldr	r0, [r0, #120]	; 0x78
    4170:	bl	0 <coda_type_set_description>
    4174:	mov	r0, #7
    4178:	mov	r1, #2
    417c:	bl	0 <coda_type_number_new>
    4180:	ldr	r1, [r5, sl]
    4184:	str	r0, [r1, #124]	; 0x7c
    4188:	mov	r1, #1
    418c:	bl	0 <coda_type_number_set_endianness>
    4190:	ldr	r0, [r5, sl]
    4194:	mov	r1, #1
    4198:	ldr	r0, [r0, #124]	; 0x7c
    419c:	bl	0 <coda_type_set_read_type>
    41a0:	ldr	r0, [r5, sl]
    41a4:	mov	r2, #8
    41a8:	mov	r3, #0
    41ac:	ldr	r0, [r0, #124]	; 0x7c
    41b0:	bl	0 <coda_type_set_bit_size>
    41b4:	ldr	r0, [r5, sl]
    41b8:	movw	r1, #0
    41bc:	movt	r1, #0
    41c0:	ldr	r0, [r0, #124]	; 0x7c
    41c4:	bl	0 <coda_type_set_description>
    41c8:	mov	r0, #7
    41cc:	bl	0 <coda_type_raw_new>
    41d0:	ldr	r1, [r5, sl]
    41d4:	str	r0, [r1, #128]	; 0x80
    41d8:	movw	r1, #0
    41dc:	movt	r1, #0
    41e0:	bl	0 <coda_type_set_description>
    41e4:	mov	r0, #7
    41e8:	mov	r1, #2
    41ec:	bl	0 <coda_type_number_new>
    41f0:	ldr	r1, [r5, sl]
    41f4:	str	r0, [r1, #132]	; 0x84
    41f8:	mov	r1, #1
    41fc:	bl	0 <coda_type_number_set_endianness>
    4200:	ldr	r0, [r5, sl]
    4204:	mov	r1, #1
    4208:	ldr	r0, [r0, #132]	; 0x84
    420c:	bl	0 <coda_type_set_read_type>
    4210:	ldr	r0, [r5, sl]
    4214:	mov	r2, #8
    4218:	mov	r3, #0
    421c:	ldr	r0, [r0, #132]	; 0x84
    4220:	bl	0 <coda_type_set_bit_size>
    4224:	ldr	r0, [r5, sl]
    4228:	movw	r1, #0
    422c:	movt	r1, #0
    4230:	ldr	r0, [r0, #132]	; 0x84
    4234:	bl	0 <coda_type_set_description>
    4238:	mov	r0, #7
    423c:	mov	r1, #2
    4240:	bl	0 <coda_type_number_new>
    4244:	ldr	r1, [r5, sl]
    4248:	str	r0, [r1, #136]	; 0x88
    424c:	mov	r1, #1
    4250:	bl	0 <coda_type_number_set_endianness>
    4254:	ldr	r0, [r5, sl]
    4258:	mov	r1, #1
    425c:	ldr	r0, [r0, #136]	; 0x88
    4260:	bl	0 <coda_type_set_read_type>
    4264:	ldr	r0, [r5, sl]
    4268:	mov	r2, #8
    426c:	mov	r3, #0
    4270:	ldr	r0, [r0, #136]	; 0x88
    4274:	bl	0 <coda_type_set_bit_size>
    4278:	ldr	r0, [r5, sl]
    427c:	movw	r1, #0
    4280:	movt	r1, #0
    4284:	ldr	r0, [r0, #136]	; 0x88
    4288:	bl	0 <coda_type_set_description>
    428c:	mov	r0, #7
    4290:	mov	r1, #2
    4294:	bl	0 <coda_type_number_new>
    4298:	ldr	r1, [r5, sl]
    429c:	str	r0, [r1, #140]	; 0x8c
    42a0:	mov	r1, #1
    42a4:	bl	0 <coda_type_number_set_endianness>
    42a8:	ldr	r0, [r5, sl]
    42ac:	mov	r1, #1
    42b0:	ldr	r0, [r0, #140]	; 0x8c
    42b4:	bl	0 <coda_type_set_read_type>
    42b8:	ldr	r0, [r5, sl]
    42bc:	mov	r2, #8
    42c0:	mov	r3, #0
    42c4:	ldr	r0, [r0, #140]	; 0x8c
    42c8:	bl	0 <coda_type_set_bit_size>
    42cc:	mov	r0, #7
    42d0:	mov	r1, #2
    42d4:	bl	0 <coda_type_number_new>
    42d8:	ldr	r1, [r5, sl]
    42dc:	str	r0, [r1, #144]	; 0x90
    42e0:	mov	r1, #1
    42e4:	bl	0 <coda_type_number_set_endianness>
    42e8:	ldr	r0, [r5, sl]
    42ec:	mov	r1, #1
    42f0:	ldr	r0, [r0, #144]	; 0x90
    42f4:	bl	0 <coda_type_set_read_type>
    42f8:	ldr	r0, [r5, sl]
    42fc:	mov	r2, #8
    4300:	mov	r3, #0
    4304:	ldr	r0, [r0, #144]	; 0x90
    4308:	bl	0 <coda_type_set_bit_size>
    430c:	mov	r0, #7
    4310:	mov	r1, #2
    4314:	bl	0 <coda_type_number_new>
    4318:	ldr	r1, [r5, sl]
    431c:	str	r0, [r1, #148]	; 0x94
    4320:	mov	r1, #1
    4324:	bl	0 <coda_type_number_set_endianness>
    4328:	ldr	r0, [r5, sl]
    432c:	mov	r1, #5
    4330:	ldr	r0, [r0, #148]	; 0x94
    4334:	bl	0 <coda_type_set_read_type>
    4338:	ldr	r0, [r5, sl]
    433c:	mov	r2, #32
    4340:	mov	r3, #0
    4344:	ldr	r0, [r0, #148]	; 0x94
    4348:	bl	0 <coda_type_set_bit_size>
    434c:	mov	r0, #7
    4350:	mov	r1, #2
    4354:	bl	0 <coda_type_number_new>
    4358:	ldr	r1, [r5, sl]
    435c:	str	r0, [r1, #152]	; 0x98
    4360:	mov	r1, #1
    4364:	bl	0 <coda_type_number_set_endianness>
    4368:	ldr	r0, [r5, sl]
    436c:	mov	r1, #1
    4370:	ldr	r0, [r0, #152]	; 0x98
    4374:	bl	0 <coda_type_set_read_type>
    4378:	ldr	r0, [r5, sl]
    437c:	mov	r2, #8
    4380:	mov	r3, #0
    4384:	ldr	r0, [r0, #152]	; 0x98
    4388:	bl	0 <coda_type_set_bit_size>
    438c:	mov	r0, #7
    4390:	mov	r1, #2
    4394:	bl	0 <coda_type_number_new>
    4398:	ldr	r1, [r5, sl]
    439c:	str	r0, [r1, #156]	; 0x9c
    43a0:	mov	r1, #1
    43a4:	bl	0 <coda_type_number_set_endianness>
    43a8:	ldr	r0, [r5, sl]
    43ac:	mov	r1, #5
    43b0:	ldr	r0, [r0, #156]	; 0x9c
    43b4:	bl	0 <coda_type_set_read_type>
    43b8:	ldr	r0, [r5, sl]
    43bc:	mov	r2, #32
    43c0:	mov	r3, #0
    43c4:	ldr	r0, [r0, #156]	; 0x9c
    43c8:	bl	0 <coda_type_set_bit_size>
    43cc:	mov	r0, #7
    43d0:	mov	r1, #2
    43d4:	bl	0 <coda_type_number_new>
    43d8:	ldr	r1, [r5, sl]
    43dc:	str	r0, [r1, #160]	; 0xa0
    43e0:	mov	r1, #1
    43e4:	bl	0 <coda_type_number_set_endianness>
    43e8:	ldr	r0, [r5, sl]
    43ec:	mov	r1, #1
    43f0:	ldr	r0, [r0, #160]	; 0xa0
    43f4:	bl	0 <coda_type_set_read_type>
    43f8:	ldr	r0, [r5, sl]
    43fc:	mov	r2, #8
    4400:	mov	r3, #0
    4404:	ldr	r0, [r0, #160]	; 0xa0
    4408:	bl	0 <coda_type_set_bit_size>
    440c:	mov	r0, #7
    4410:	mov	r1, #2
    4414:	bl	0 <coda_type_number_new>
    4418:	ldr	r1, [r5, sl]
    441c:	str	r0, [r1, #164]	; 0xa4
    4420:	mov	r1, #1
    4424:	bl	0 <coda_type_number_set_endianness>
    4428:	ldr	r0, [r5, sl]
    442c:	mov	r1, #5
    4430:	ldr	r0, [r0, #164]	; 0xa4
    4434:	bl	0 <coda_type_set_read_type>
    4438:	ldr	r0, [r5, sl]
    443c:	mov	r2, #32
    4440:	mov	r3, #0
    4444:	ldr	r0, [r0, #164]	; 0xa4
    4448:	bl	0 <coda_type_set_bit_size>
    444c:	mov	r0, #7
    4450:	mov	r1, #2
    4454:	bl	0 <coda_type_number_new>
    4458:	ldr	r1, [r5, sl]
    445c:	str	r0, [r1, #168]	; 0xa8
    4460:	mov	r1, #1
    4464:	bl	0 <coda_type_number_set_endianness>
    4468:	ldr	r0, [r5, sl]
    446c:	mov	r1, #3
    4470:	ldr	r0, [r0, #168]	; 0xa8
    4474:	bl	0 <coda_type_set_read_type>
    4478:	ldr	r0, [r5, sl]
    447c:	mov	r2, #16
    4480:	mov	r3, #0
    4484:	ldr	r0, [r0, #168]	; 0xa8
    4488:	bl	0 <coda_type_set_bit_size>
    448c:	ldr	r0, [r5, sl]
    4490:	movw	r1, #0
    4494:	movt	r1, #0
    4498:	ldr	r0, [r0, #168]	; 0xa8
    449c:	bl	0 <coda_type_set_description>
    44a0:	mov	r0, #7
    44a4:	mov	r1, #2
    44a8:	bl	0 <coda_type_number_new>
    44ac:	ldr	r1, [r5, sl]
    44b0:	str	r0, [r1, #172]	; 0xac
    44b4:	mov	r1, #1
    44b8:	bl	0 <coda_type_number_set_endianness>
    44bc:	ldr	r0, [r5, sl]
    44c0:	mov	r1, #3
    44c4:	ldr	r0, [r0, #172]	; 0xac
    44c8:	bl	0 <coda_type_set_read_type>
    44cc:	ldr	r0, [r5, sl]
    44d0:	mov	r2, #16
    44d4:	mov	r3, #0
    44d8:	ldr	r0, [r0, #172]	; 0xac
    44dc:	bl	0 <coda_type_set_bit_size>
    44e0:	ldr	r0, [r5, sl]
    44e4:	movw	r1, #0
    44e8:	movt	r1, #0
    44ec:	ldr	r0, [r0, #172]	; 0xac
    44f0:	bl	0 <coda_type_set_description>
    44f4:	mov	r0, #7
    44f8:	mov	r1, #2
    44fc:	bl	0 <coda_type_number_new>
    4500:	ldr	r1, [r5, sl]
    4504:	str	r0, [r1, #176]	; 0xb0
    4508:	mov	r1, #1
    450c:	bl	0 <coda_type_number_set_endianness>
    4510:	ldr	r0, [r5, sl]
    4514:	mov	r1, #5
    4518:	ldr	r0, [r0, #176]	; 0xb0
    451c:	bl	0 <coda_type_set_read_type>
    4520:	ldr	r0, [r5, sl]
    4524:	mov	r2, #32
    4528:	mov	r3, #0
    452c:	ldr	r0, [r0, #176]	; 0xb0
    4530:	bl	0 <coda_type_set_bit_size>
    4534:	mov	r0, #7
    4538:	mov	r1, #2
    453c:	bl	0 <coda_type_number_new>
    4540:	ldr	r1, [r5, sl]
    4544:	str	r0, [r1, #180]	; 0xb4
    4548:	mov	r1, #1
    454c:	bl	0 <coda_type_number_set_endianness>
    4550:	ldr	r0, [r5, sl]
    4554:	mov	r1, #5
    4558:	ldr	r0, [r0, #180]	; 0xb4
    455c:	bl	0 <coda_type_set_read_type>
    4560:	ldr	r0, [r5, sl]
    4564:	mov	r2, #32
    4568:	mov	r3, #0
    456c:	ldr	r0, [r0, #180]	; 0xb4
    4570:	bl	0 <coda_type_set_bit_size>
    4574:	mov	r0, #7
    4578:	mov	r1, #2
    457c:	bl	0 <coda_type_number_new>
    4580:	ldr	r1, [r5, sl]
    4584:	str	r0, [r1, #184]	; 0xb8
    4588:	mov	r1, #1
    458c:	bl	0 <coda_type_number_set_endianness>
    4590:	ldr	r0, [r5, sl]
    4594:	mov	r1, #4
    4598:	ldr	r0, [r0, #184]	; 0xb8
    459c:	bl	0 <coda_type_set_read_type>
    45a0:	ldr	r0, [r5, sl]
    45a4:	mov	r2, #32
    45a8:	mov	r3, #0
    45ac:	ldr	r0, [r0, #184]	; 0xb8
    45b0:	bl	0 <coda_type_set_bit_size>
    45b4:	ldr	r0, [r5, sl]
    45b8:	movw	r1, #0
    45bc:	movt	r1, #0
    45c0:	ldr	r0, [r0, #184]	; 0xb8
    45c4:	bl	0 <coda_type_set_description>
    45c8:	mov	r0, #7
    45cc:	mov	r1, #2
    45d0:	bl	0 <coda_type_number_new>
    45d4:	ldr	r1, [r5, sl]
    45d8:	str	r0, [r1, #188]	; 0xbc
    45dc:	mov	r1, #1
    45e0:	bl	0 <coda_type_number_set_endianness>
    45e4:	ldr	r0, [r5, sl]
    45e8:	mov	r1, #4
    45ec:	ldr	r0, [r0, #188]	; 0xbc
    45f0:	bl	0 <coda_type_set_read_type>
    45f4:	ldr	r0, [r5, sl]
    45f8:	mov	r2, #32
    45fc:	mov	r3, #0
    4600:	ldr	r0, [r0, #188]	; 0xbc
    4604:	bl	0 <coda_type_set_bit_size>
    4608:	ldr	r0, [r5, sl]
    460c:	movw	r1, #0
    4610:	movt	r1, #0
    4614:	ldr	r0, [r0, #188]	; 0xbc
    4618:	bl	0 <coda_type_set_description>
    461c:	mov	r0, #7
    4620:	mov	r1, #2
    4624:	bl	0 <coda_type_number_new>
    4628:	ldr	r1, [r5, sl]
    462c:	str	r0, [r1, #192]	; 0xc0
    4630:	mov	r1, #1
    4634:	bl	0 <coda_type_number_set_endianness>
    4638:	ldr	r0, [r5, sl]
    463c:	mov	r1, #1
    4640:	ldr	r0, [r0, #192]	; 0xc0
    4644:	bl	0 <coda_type_set_read_type>
    4648:	ldr	r0, [r5, sl]
    464c:	mov	r2, #8
    4650:	mov	r3, #0
    4654:	ldr	r0, [r0, #192]	; 0xc0
    4658:	bl	0 <coda_type_set_bit_size>
    465c:	ldr	r0, [r5, sl]
    4660:	movw	r1, #0
    4664:	movt	r1, #0
    4668:	ldr	r0, [r0, #192]	; 0xc0
    466c:	bl	0 <coda_type_set_description>
    4670:	mov	r0, #7
    4674:	mov	r1, #2
    4678:	bl	0 <coda_type_number_new>
    467c:	ldr	r1, [r5, sl]
    4680:	str	r0, [r1, #196]	; 0xc4
    4684:	mov	r1, #1
    4688:	bl	0 <coda_type_number_set_endianness>
    468c:	ldr	r0, [r5, sl]
    4690:	mov	r1, #4
    4694:	ldr	r0, [r0, #196]	; 0xc4
    4698:	bl	0 <coda_type_set_read_type>
    469c:	ldr	r0, [r5, sl]
    46a0:	mov	r2, #32
    46a4:	mov	r3, #0
    46a8:	ldr	r0, [r0, #196]	; 0xc4
    46ac:	bl	0 <coda_type_set_bit_size>
    46b0:	ldr	r0, [r5, sl]
    46b4:	movw	r1, #0
    46b8:	movt	r1, #0
    46bc:	ldr	r0, [r0, #196]	; 0xc4
    46c0:	bl	0 <coda_type_set_description>
    46c4:	mov	r0, #7
    46c8:	mov	r1, #2
    46cc:	bl	0 <coda_type_number_new>
    46d0:	ldr	r1, [r5, sl]
    46d4:	str	r0, [r1, #200]	; 0xc8
    46d8:	mov	r1, #1
    46dc:	bl	0 <coda_type_number_set_endianness>
    46e0:	ldr	r0, [r5, sl]
    46e4:	mov	r1, #4
    46e8:	ldr	r0, [r0, #200]	; 0xc8
    46ec:	bl	0 <coda_type_set_read_type>
    46f0:	ldr	r0, [r5, sl]
    46f4:	mov	r2, #32
    46f8:	mov	r3, #0
    46fc:	ldr	r0, [r0, #200]	; 0xc8
    4700:	bl	0 <coda_type_set_bit_size>
    4704:	ldr	r0, [r5, sl]
    4708:	movw	r1, #0
    470c:	movt	r1, #0
    4710:	ldr	r0, [r0, #200]	; 0xc8
    4714:	bl	0 <coda_type_set_description>
    4718:	mov	r0, #7
    471c:	mov	r1, #2
    4720:	bl	0 <coda_type_number_new>
    4724:	ldr	r1, [r5, sl]
    4728:	str	r0, [r1, #204]	; 0xcc
    472c:	mov	r1, #1
    4730:	bl	0 <coda_type_number_set_endianness>
    4734:	ldr	r0, [r5, sl]
    4738:	mov	r1, #3
    473c:	ldr	r0, [r0, #204]	; 0xcc
    4740:	bl	0 <coda_type_set_read_type>
    4744:	ldr	r0, [r5, sl]
    4748:	mov	r2, #16
    474c:	mov	r3, #0
    4750:	ldr	r0, [r0, #204]	; 0xcc
    4754:	bl	0 <coda_type_set_bit_size>
    4758:	ldr	r0, [r5, sl]
    475c:	movw	r1, #0
    4760:	movt	r1, #0
    4764:	ldr	r0, [r0, #204]	; 0xcc
    4768:	bl	0 <coda_type_set_description>
    476c:	mov	r0, #7
    4770:	mov	r1, #2
    4774:	bl	0 <coda_type_number_new>
    4778:	ldr	r1, [r5, sl]
    477c:	str	r0, [r1, #208]	; 0xd0
    4780:	mov	r1, #1
    4784:	bl	0 <coda_type_number_set_endianness>
    4788:	ldr	r0, [r5, sl]
    478c:	mov	r1, #3
    4790:	ldr	r0, [r0, #208]	; 0xd0
    4794:	bl	0 <coda_type_set_read_type>
    4798:	ldr	r0, [r5, sl]
    479c:	mov	r2, #16
    47a0:	mov	r3, #0
    47a4:	ldr	r0, [r0, #208]	; 0xd0
    47a8:	bl	0 <coda_type_set_bit_size>
    47ac:	ldr	r0, [r5, sl]
    47b0:	movw	r1, #0
    47b4:	movt	r1, #0
    47b8:	ldr	r0, [r0, #208]	; 0xd0
    47bc:	bl	0 <coda_type_set_description>
    47c0:	mov	r0, #7
    47c4:	mov	r1, #2
    47c8:	bl	0 <coda_type_number_new>
    47cc:	ldr	r1, [r5, sl]
    47d0:	str	r0, [r1, #212]	; 0xd4
    47d4:	mov	r1, #1
    47d8:	bl	0 <coda_type_number_set_endianness>
    47dc:	ldr	r0, [r5, sl]
    47e0:	mov	r1, #3
    47e4:	ldr	r0, [r0, #212]	; 0xd4
    47e8:	bl	0 <coda_type_set_read_type>
    47ec:	ldr	r0, [r5, sl]
    47f0:	mov	r2, #16
    47f4:	mov	r3, #0
    47f8:	ldr	r0, [r0, #212]	; 0xd4
    47fc:	bl	0 <coda_type_set_bit_size>
    4800:	ldr	r0, [r5, sl]
    4804:	movw	r1, #0
    4808:	movt	r1, #0
    480c:	ldr	r0, [r0, #212]	; 0xd4
    4810:	bl	0 <coda_type_set_description>
    4814:	mov	r0, #7
    4818:	mov	r1, #2
    481c:	bl	0 <coda_type_number_new>
    4820:	ldr	r1, [r5, sl]
    4824:	str	r0, [r1, #216]	; 0xd8
    4828:	mov	r1, #1
    482c:	bl	0 <coda_type_number_set_endianness>
    4830:	ldr	r0, [r5, sl]
    4834:	mov	r1, #1
    4838:	ldr	r0, [r0, #216]	; 0xd8
    483c:	bl	0 <coda_type_set_read_type>
    4840:	ldr	r0, [r5, sl]
    4844:	mov	r2, #8
    4848:	mov	r3, #0
    484c:	ldr	r0, [r0, #216]	; 0xd8
    4850:	bl	0 <coda_type_set_bit_size>
    4854:	ldr	r0, [r5, sl]
    4858:	movw	r1, #0
    485c:	movt	r1, #0
    4860:	ldr	r0, [r0, #216]	; 0xd8
    4864:	bl	0 <coda_type_set_description>
    4868:	mov	r0, #7
    486c:	mov	r1, #3
    4870:	bl	0 <coda_type_number_new>
    4874:	ldr	r1, [r5, sl]
    4878:	str	r0, [r1, #220]	; 0xdc
    487c:	mov	r1, #1
    4880:	bl	0 <coda_type_number_set_endianness>
    4884:	ldr	r0, [r5, sl]
    4888:	mov	r1, #8
    488c:	ldr	r0, [r0, #220]	; 0xdc
    4890:	bl	0 <coda_type_set_read_type>
    4894:	ldr	r0, [r5, sl]
    4898:	mov	r2, #32
    489c:	mov	r3, #0
    48a0:	ldr	r0, [r0, #220]	; 0xdc
    48a4:	bl	0 <coda_type_set_bit_size>
    48a8:	mov	r0, #7
    48ac:	bl	0 <coda_type_array_new>
    48b0:	ldr	r1, [r5, sl]
    48b4:	str	r0, [r1, #224]	; 0xe0
    48b8:	movw	r1, #0
    48bc:	movt	r1, #0
    48c0:	bl	0 <coda_type_set_description>
    48c4:	ldr	r0, [r5, sl]
    48c8:	ldr	r1, [r0, #220]	; 0xdc
    48cc:	ldr	r0, [r0, #224]	; 0xe0
    48d0:	bl	0 <coda_type_array_set_base_type>
    48d4:	ldr	r0, [r5, sl]
    48d8:	mov	r1, #0
    48dc:	ldr	r0, [r0, #224]	; 0xe0
    48e0:	bl	0 <coda_type_array_add_variable_dimension>
    48e4:	mov	r0, #7
    48e8:	mov	r1, #2
    48ec:	bl	0 <coda_type_number_new>
    48f0:	ldr	r1, [r5, sl]
    48f4:	str	r0, [r1, #228]	; 0xe4
    48f8:	mov	r1, #1
    48fc:	bl	0 <coda_type_number_set_endianness>
    4900:	ldr	r0, [r5, sl]
    4904:	mov	r1, #3
    4908:	ldr	r0, [r0, #228]	; 0xe4
    490c:	bl	0 <coda_type_set_read_type>
    4910:	ldr	r0, [r5, sl]
    4914:	mov	r2, #16
    4918:	mov	r3, #0
    491c:	ldr	r0, [r0, #228]	; 0xe4
    4920:	bl	0 <coda_type_set_bit_size>
    4924:	mov	r0, #7
    4928:	bl	0 <coda_type_array_new>
    492c:	ldr	r1, [r5, sl]
    4930:	str	r0, [r1, #232]	; 0xe8
    4934:	movw	r1, #0
    4938:	movt	r1, #0
    493c:	bl	0 <coda_type_set_description>
    4940:	ldr	r0, [r5, sl]
    4944:	ldr	r1, [r0, #228]	; 0xe4
    4948:	ldr	r0, [r0, #232]	; 0xe8
    494c:	bl	0 <coda_type_array_set_base_type>
    4950:	ldr	r0, [r5, sl]
    4954:	mov	r1, #0
    4958:	ldr	r0, [r0, #232]	; 0xe8
    495c:	bl	0 <coda_type_array_add_variable_dimension>
    4960:	mov	r0, #7
    4964:	mov	r1, #2
    4968:	bl	0 <coda_type_number_new>
    496c:	ldr	r1, [r5, sl]
    4970:	str	r0, [r1, #236]	; 0xec
    4974:	mov	r1, #1
    4978:	bl	0 <coda_type_number_set_endianness>
    497c:	ldr	r0, [r5, sl]
    4980:	mov	r1, #1
    4984:	ldr	r0, [r0, #236]	; 0xec
    4988:	bl	0 <coda_type_set_read_type>
    498c:	ldr	r0, [r5, sl]
    4990:	mov	r2, #8
    4994:	mov	r3, #0
    4998:	ldr	r0, [r0, #236]	; 0xec
    499c:	bl	0 <coda_type_set_bit_size>
    49a0:	ldr	r0, [r5, sl]
    49a4:	movw	r9, #0
    49a8:	movt	r9, #0
    49ac:	mov	r1, r9
    49b0:	ldr	r0, [r0, #236]	; 0xec
    49b4:	bl	0 <coda_type_set_description>
    49b8:	mov	r0, #7
    49bc:	mov	r1, #2
    49c0:	bl	0 <coda_type_number_new>
    49c4:	ldr	r1, [r5, sl]
    49c8:	str	r0, [r1, #240]	; 0xf0
    49cc:	mov	r1, #1
    49d0:	bl	0 <coda_type_number_set_endianness>
    49d4:	ldr	r0, [r5, sl]
    49d8:	mov	r1, #5
    49dc:	ldr	r0, [r0, #240]	; 0xf0
    49e0:	bl	0 <coda_type_set_read_type>
    49e4:	ldr	r0, [r5, sl]
    49e8:	mov	r2, #32
    49ec:	mov	r3, #0
    49f0:	ldr	r0, [r0, #240]	; 0xf0
    49f4:	bl	0 <coda_type_set_bit_size>
    49f8:	ldr	r0, [r5, sl]
    49fc:	movw	r6, #0
    4a00:	movt	r6, #0
    4a04:	mov	r1, r6
    4a08:	ldr	r0, [r0, #240]	; 0xf0
    4a0c:	bl	0 <coda_type_set_description>
    4a10:	mov	r0, #7
    4a14:	mov	r1, #2
    4a18:	bl	0 <coda_type_number_new>
    4a1c:	ldr	r1, [r5, sl]
    4a20:	str	r0, [r1, #244]	; 0xf4
    4a24:	mov	r1, #1
    4a28:	bl	0 <coda_type_number_set_endianness>
    4a2c:	ldr	r0, [r5, sl]
    4a30:	mov	r1, #3
    4a34:	ldr	r0, [r0, #244]	; 0xf4
    4a38:	bl	0 <coda_type_set_read_type>
    4a3c:	ldr	r0, [r5, sl]
    4a40:	mov	r2, #16
    4a44:	mov	r3, #0
    4a48:	ldr	r0, [r0, #244]	; 0xf4
    4a4c:	bl	0 <coda_type_set_bit_size>
    4a50:	ldr	r0, [r5, sl]
    4a54:	movw	r1, #0
    4a58:	movt	r1, #0
    4a5c:	ldr	r0, [r0, #244]	; 0xf4
    4a60:	bl	0 <coda_type_set_description>
    4a64:	mov	r0, #7
    4a68:	mov	r1, #2
    4a6c:	bl	0 <coda_type_number_new>
    4a70:	ldr	r1, [r5, sl]
    4a74:	str	r0, [r1, #248]	; 0xf8
    4a78:	mov	r1, #1
    4a7c:	bl	0 <coda_type_number_set_endianness>
    4a80:	ldr	r0, [r5, sl]
    4a84:	mov	r1, #1
    4a88:	ldr	r0, [r0, #248]	; 0xf8
    4a8c:	bl	0 <coda_type_set_read_type>
    4a90:	ldr	r0, [r5, sl]
    4a94:	mov	r2, #8
    4a98:	mov	r3, #0
    4a9c:	ldr	r0, [r0, #248]	; 0xf8
    4aa0:	bl	0 <coda_type_set_bit_size>
    4aa4:	ldr	r0, [r5, sl]
    4aa8:	movw	r1, #0
    4aac:	movt	r1, #0
    4ab0:	ldr	r0, [r0, #248]	; 0xf8
    4ab4:	bl	0 <coda_type_set_description>
    4ab8:	mov	r0, #7
    4abc:	mov	r1, #2
    4ac0:	bl	0 <coda_type_number_new>
    4ac4:	ldr	r1, [r5, sl]
    4ac8:	str	r0, [r1, #252]	; 0xfc
    4acc:	mov	r1, #1
    4ad0:	bl	0 <coda_type_number_set_endianness>
    4ad4:	ldr	r0, [r5, sl]
    4ad8:	mov	r1, #2
    4adc:	ldr	r0, [r0, #252]	; 0xfc
    4ae0:	bl	0 <coda_type_set_read_type>
    4ae4:	ldr	r0, [r5, sl]
    4ae8:	mov	r2, #16
    4aec:	mov	r3, #0
    4af0:	ldr	r0, [r0, #252]	; 0xfc
    4af4:	bl	0 <coda_type_set_bit_size>
    4af8:	ldr	r0, [r5, sl]
    4afc:	movw	r1, #0
    4b00:	movt	r1, #0
    4b04:	ldr	r0, [r0, #252]	; 0xfc
    4b08:	bl	0 <coda_type_set_description>
    4b0c:	mov	r0, #7
    4b10:	mov	r1, #3
    4b14:	bl	0 <coda_type_number_new>
    4b18:	ldr	r1, [r5, sl]
    4b1c:	str	r0, [r1, #256]	; 0x100
    4b20:	mov	r1, #1
    4b24:	bl	0 <coda_type_number_set_endianness>
    4b28:	ldr	r0, [r5, sl]
    4b2c:	mov	r1, #8
    4b30:	ldr	r0, [r0, #256]	; 0x100
    4b34:	bl	0 <coda_type_set_read_type>
    4b38:	ldr	r0, [r5, sl]
    4b3c:	mov	r2, #32
    4b40:	mov	r3, #0
    4b44:	ldr	r0, [r0, #256]	; 0x100
    4b48:	bl	0 <coda_type_set_bit_size>
    4b4c:	ldr	r0, [r5, sl]
    4b50:	movw	r1, #0
    4b54:	movt	r1, #0
    4b58:	ldr	r0, [r0, #256]	; 0x100
    4b5c:	bl	0 <coda_type_set_description>
    4b60:	mov	r0, #7
    4b64:	bl	0 <coda_type_array_new>
    4b68:	ldr	r1, [r5, sl]
    4b6c:	str	r0, [r1, #260]	; 0x104
    4b70:	mov	r0, #7
    4b74:	mov	r1, #3
    4b78:	bl	0 <coda_type_number_new>
    4b7c:	mov	r1, #1
    4b80:	mov	r8, r0
    4b84:	bl	0 <coda_type_number_set_endianness>
    4b88:	mov	r0, r8
    4b8c:	mov	r1, #8
    4b90:	bl	0 <coda_type_set_read_type>
    4b94:	mov	r0, r8
    4b98:	mov	r2, #32
    4b9c:	mov	r3, #0
    4ba0:	bl	0 <coda_type_set_bit_size>
    4ba4:	ldr	r0, [r5, sl]
    4ba8:	mov	r1, r8
    4bac:	ldr	r0, [r0, #260]	; 0x104
    4bb0:	bl	0 <coda_type_array_set_base_type>
    4bb4:	mov	r0, r8
    4bb8:	bl	0 <coda_type_release>
    4bbc:	ldr	r0, [r5, sl]
    4bc0:	mov	r1, #0
    4bc4:	ldr	r0, [r0, #260]	; 0x104
    4bc8:	bl	0 <coda_type_array_add_variable_dimension>
    4bcc:	mov	r0, #7
    4bd0:	bl	0 <coda_type_record_new>
    4bd4:	ldr	r1, [r5, sl]
    4bd8:	str	r0, [r1, #264]	; 0x108
    4bdc:	movw	r0, #0
    4be0:	movt	r0, #0
    4be4:	bl	0 <coda_type_record_field_new>
    4be8:	mov	r7, r0
    4bec:	ldr	r0, [r5, sl]
    4bf0:	ldr	r1, [r0, #132]	; 0x84
    4bf4:	mov	r0, r7
    4bf8:	bl	0 <coda_type_record_field_set_type>
    4bfc:	ldr	r0, [r5, sl]
    4c00:	mov	r1, r7
    4c04:	ldr	r0, [r0, #264]	; 0x108
    4c08:	bl	0 <coda_type_record_add_field>
    4c0c:	movw	r0, #0
    4c10:	movt	r0, #0
    4c14:	bl	0 <coda_type_record_field_new>
    4c18:	mov	r7, r0
    4c1c:	ldr	r0, [r5, sl]
    4c20:	ldr	r1, [r0, #136]	; 0x88
    4c24:	mov	r0, r7
    4c28:	bl	0 <coda_type_record_field_set_type>
    4c2c:	ldr	r0, [r5, sl]
    4c30:	mov	r1, r7
    4c34:	ldr	r0, [r0, #264]	; 0x108
    4c38:	bl	0 <coda_type_record_add_field>
    4c3c:	movw	r0, #0
    4c40:	movt	r0, #0
    4c44:	bl	0 <coda_type_record_field_new>
    4c48:	mov	r7, r0
    4c4c:	ldr	r0, [r5, sl]
    4c50:	ldr	r1, [r0, #168]	; 0xa8
    4c54:	mov	r0, r7
    4c58:	bl	0 <coda_type_record_field_set_type>
    4c5c:	ldr	r0, [r5, sl]
    4c60:	mov	r1, r7
    4c64:	ldr	r0, [r0, #264]	; 0x108
    4c68:	bl	0 <coda_type_record_add_field>
    4c6c:	movw	r0, #0
    4c70:	movt	r0, #0
    4c74:	bl	0 <coda_type_record_field_new>
    4c78:	mov	r7, r0
    4c7c:	ldr	r0, [r5, sl]
    4c80:	ldr	r1, [r0, #172]	; 0xac
    4c84:	mov	r0, r7
    4c88:	bl	0 <coda_type_record_field_set_type>
    4c8c:	ldr	r0, [r5, sl]
    4c90:	mov	r1, r7
    4c94:	ldr	r0, [r0, #264]	; 0x108
    4c98:	bl	0 <coda_type_record_add_field>
    4c9c:	movw	r0, #0
    4ca0:	movt	r0, #0
    4ca4:	bl	0 <coda_type_record_field_new>
    4ca8:	mov	r7, r0
    4cac:	ldr	r0, [r5, sl]
    4cb0:	ldr	r1, [r0, #184]	; 0xb8
    4cb4:	mov	r0, r7
    4cb8:	bl	0 <coda_type_record_field_set_type>
    4cbc:	ldr	r0, [r5, sl]
    4cc0:	mov	r1, r7
    4cc4:	ldr	r0, [r0, #264]	; 0x108
    4cc8:	bl	0 <coda_type_record_add_field>
    4ccc:	movw	r0, #0
    4cd0:	movt	r0, #0
    4cd4:	bl	0 <coda_type_record_field_new>
    4cd8:	mov	r7, r0
    4cdc:	ldr	r0, [r5, sl]
    4ce0:	ldr	r1, [r0, #188]	; 0xbc
    4ce4:	mov	r0, r7
    4ce8:	bl	0 <coda_type_record_field_set_type>
    4cec:	ldr	r0, [r5, sl]
    4cf0:	mov	r1, r7
    4cf4:	ldr	r0, [r0, #264]	; 0x108
    4cf8:	bl	0 <coda_type_record_add_field>
    4cfc:	movw	r0, #0
    4d00:	movt	r0, #0
    4d04:	bl	0 <coda_type_record_field_new>
    4d08:	mov	r7, r0
    4d0c:	ldr	r0, [r5, sl]
    4d10:	ldr	r1, [r0, #192]	; 0xc0
    4d14:	mov	r0, r7
    4d18:	bl	0 <coda_type_record_field_set_type>
    4d1c:	ldr	r0, [r5, sl]
    4d20:	mov	r1, r7
    4d24:	ldr	r0, [r0, #264]	; 0x108
    4d28:	bl	0 <coda_type_record_add_field>
    4d2c:	movw	r0, #0
    4d30:	movt	r0, #0
    4d34:	bl	0 <coda_type_record_field_new>
    4d38:	mov	r7, r0
    4d3c:	ldr	r0, [r5, sl]
    4d40:	ldr	r1, [r0, #196]	; 0xc4
    4d44:	mov	r0, r7
    4d48:	bl	0 <coda_type_record_field_set_type>
    4d4c:	ldr	r0, [r5, sl]
    4d50:	mov	r1, r7
    4d54:	ldr	r0, [r0, #264]	; 0x108
    4d58:	bl	0 <coda_type_record_add_field>
    4d5c:	movw	r0, #0
    4d60:	movt	r0, #0
    4d64:	bl	0 <coda_type_record_field_new>
    4d68:	mov	r7, r0
    4d6c:	ldr	r0, [r5, sl]
    4d70:	ldr	r1, [r0, #200]	; 0xc8
    4d74:	mov	r0, r7
    4d78:	bl	0 <coda_type_record_field_set_type>
    4d7c:	ldr	r0, [r5, sl]
    4d80:	mov	r1, r7
    4d84:	ldr	r0, [r0, #264]	; 0x108
    4d88:	bl	0 <coda_type_record_add_field>
    4d8c:	movw	r0, #0
    4d90:	movt	r0, #0
    4d94:	bl	0 <coda_type_record_field_new>
    4d98:	mov	r7, r0
    4d9c:	ldr	r0, [r5, sl]
    4da0:	ldr	r1, [r0, #204]	; 0xcc
    4da4:	mov	r0, r7
    4da8:	bl	0 <coda_type_record_field_set_type>
    4dac:	ldr	r0, [r5, sl]
    4db0:	mov	r1, r7
    4db4:	ldr	r0, [r0, #264]	; 0x108
    4db8:	bl	0 <coda_type_record_add_field>
    4dbc:	movw	r0, #0
    4dc0:	movt	r0, #0
    4dc4:	bl	0 <coda_type_record_field_new>
    4dc8:	mov	r7, r0
    4dcc:	ldr	r0, [r5, sl]
    4dd0:	ldr	r1, [r0, #208]	; 0xd0
    4dd4:	mov	r0, r7
    4dd8:	bl	0 <coda_type_record_field_set_type>
    4ddc:	mov	r0, r7
    4de0:	bl	0 <coda_type_record_field_set_optional>
    4de4:	ldr	r0, [r5, sl]
    4de8:	mov	r1, r7
    4dec:	ldr	r0, [r0, #264]	; 0x108
    4df0:	bl	0 <coda_type_record_add_field>
    4df4:	movw	r0, #0
    4df8:	movt	r0, #0
    4dfc:	bl	0 <coda_type_record_field_new>
    4e00:	mov	r7, r0
    4e04:	ldr	r0, [r5, sl]
    4e08:	ldr	r1, [r0, #212]	; 0xd4
    4e0c:	mov	r0, r7
    4e10:	bl	0 <coda_type_record_field_set_type>
    4e14:	mov	r0, r7
    4e18:	bl	0 <coda_type_record_field_set_optional>
    4e1c:	ldr	r0, [r5, sl]
    4e20:	mov	r1, r7
    4e24:	ldr	r0, [r0, #264]	; 0x108
    4e28:	bl	0 <coda_type_record_add_field>
    4e2c:	movw	r0, #0
    4e30:	movt	r0, #0
    4e34:	bl	0 <coda_type_record_field_new>
    4e38:	mov	r7, r0
    4e3c:	ldr	r0, [r5, sl]
    4e40:	ldr	r1, [r0, #216]	; 0xd8
    4e44:	mov	r0, r7
    4e48:	bl	0 <coda_type_record_field_set_type>
    4e4c:	ldr	r0, [r5, sl]
    4e50:	mov	r1, r7
    4e54:	ldr	r0, [r0, #264]	; 0x108
    4e58:	bl	0 <coda_type_record_add_field>
    4e5c:	movw	r0, #0
    4e60:	movt	r0, #0
    4e64:	bl	0 <coda_type_record_field_new>
    4e68:	mov	r7, r0
    4e6c:	ldr	r0, [r5, sl]
    4e70:	ldr	r1, [r0, #224]	; 0xe0
    4e74:	mov	r0, r7
    4e78:	bl	0 <coda_type_record_field_set_type>
    4e7c:	mov	r0, r7
    4e80:	bl	0 <coda_type_record_field_set_optional>
    4e84:	ldr	r0, [r5, sl]
    4e88:	mov	r1, r7
    4e8c:	ldr	r0, [r0, #264]	; 0x108
    4e90:	bl	0 <coda_type_record_add_field>
    4e94:	movw	r0, #0
    4e98:	movt	r0, #0
    4e9c:	bl	0 <coda_type_record_field_new>
    4ea0:	mov	r7, r0
    4ea4:	ldr	r0, [r5, sl]
    4ea8:	ldr	r1, [r0, #232]	; 0xe8
    4eac:	mov	r0, r7
    4eb0:	bl	0 <coda_type_record_field_set_type>
    4eb4:	mov	r0, r7
    4eb8:	bl	0 <coda_type_record_field_set_optional>
    4ebc:	ldr	r0, [r5, sl]
    4ec0:	mov	r1, r7
    4ec4:	ldr	r0, [r0, #264]	; 0x108
    4ec8:	bl	0 <coda_type_record_add_field>
    4ecc:	mov	r0, #7
    4ed0:	bl	0 <coda_type_record_new>
    4ed4:	ldr	r1, [r5, sl]
    4ed8:	str	r0, [r1, #268]	; 0x10c
    4edc:	movw	r0, #0
    4ee0:	movt	r0, #0
    4ee4:	bl	0 <coda_type_record_field_new>
    4ee8:	mov	r7, r0
    4eec:	ldr	r0, [r5, sl]
    4ef0:	ldr	r1, [r0, #248]	; 0xf8
    4ef4:	mov	r0, r7
    4ef8:	bl	0 <coda_type_record_field_set_type>
    4efc:	mov	r0, r7
    4f00:	bl	0 <coda_type_record_field_set_hidden>
    4f04:	ldr	r0, [r5, sl]
    4f08:	mov	r1, r7
    4f0c:	ldr	r0, [r0, #268]	; 0x10c
    4f10:	bl	0 <coda_type_record_add_field>
    4f14:	movw	r0, #0
    4f18:	movt	r0, #0
    4f1c:	bl	0 <coda_type_record_field_new>
    4f20:	mov	r7, r0
    4f24:	ldr	r0, [r5, sl]
    4f28:	ldr	r1, [r0, #252]	; 0xfc
    4f2c:	mov	r0, r7
    4f30:	bl	0 <coda_type_record_field_set_type>
    4f34:	mov	r0, r7
    4f38:	bl	0 <coda_type_record_field_set_hidden>
    4f3c:	ldr	r0, [r5, sl]
    4f40:	mov	r1, r7
    4f44:	ldr	r0, [r0, #268]	; 0x10c
    4f48:	bl	0 <coda_type_record_add_field>
    4f4c:	movw	r0, #0
    4f50:	movt	r0, #0
    4f54:	bl	0 <coda_type_record_field_new>
    4f58:	mov	r7, r0
    4f5c:	ldr	r0, [r5, sl]
    4f60:	ldr	r1, [r0, #256]	; 0x100
    4f64:	mov	r0, r7
    4f68:	bl	0 <coda_type_record_field_set_type>
    4f6c:	mov	r0, r7
    4f70:	bl	0 <coda_type_record_field_set_hidden>
    4f74:	ldr	r0, [r5, sl]
    4f78:	mov	r1, r7
    4f7c:	ldr	r0, [r0, #268]	; 0x10c
    4f80:	bl	0 <coda_type_record_add_field>
    4f84:	movw	r0, #0
    4f88:	movt	r0, #0
    4f8c:	bl	0 <coda_type_record_field_new>
    4f90:	mov	r7, r0
    4f94:	ldr	r0, [r5, sl]
    4f98:	ldr	r1, [r0, #260]	; 0x104
    4f9c:	mov	r0, r7
    4fa0:	bl	0 <coda_type_record_field_set_type>
    4fa4:	ldr	r0, [r5, sl]
    4fa8:	mov	r1, r7
    4fac:	ldr	r0, [r0, #268]	; 0x10c
    4fb0:	bl	0 <coda_type_record_add_field>
    4fb4:	mov	r0, #7
    4fb8:	bl	0 <coda_type_record_new>
    4fbc:	ldr	r1, [r5, sl]
    4fc0:	movw	r8, #0
    4fc4:	movt	r8, #0
    4fc8:	str	r0, [r1, #272]	; 0x110
    4fcc:	mov	r0, r8
    4fd0:	bl	0 <coda_type_record_field_new>
    4fd4:	mov	r7, r0
    4fd8:	ldr	r0, [r5, sl]
    4fdc:	ldr	r1, [r0, #12]
    4fe0:	mov	r0, r7
    4fe4:	bl	0 <coda_type_record_field_set_type>
    4fe8:	ldr	r0, [r5, sl]
    4fec:	mov	r1, r7
    4ff0:	ldr	r0, [r0, #272]	; 0x110
    4ff4:	bl	0 <coda_type_record_add_field>
    4ff8:	movw	r0, #0
    4ffc:	movt	r0, #0
    5000:	bl	0 <coda_type_record_field_new>
    5004:	mov	r7, r0
    5008:	ldr	r0, [r5, sl]
    500c:	ldr	r1, [r0, #8]
    5010:	mov	r0, r7
    5014:	bl	0 <coda_type_record_field_set_type>
    5018:	ldr	r0, [r5, sl]
    501c:	mov	r1, r7
    5020:	ldr	r0, [r0, #272]	; 0x110
    5024:	bl	0 <coda_type_record_add_field>
    5028:	movw	r0, #0
    502c:	movt	r0, #0
    5030:	bl	0 <coda_type_record_field_new>
    5034:	mov	r7, r0
    5038:	ldr	r0, [r5, sl]
    503c:	ldr	r1, [r0, #16]
    5040:	mov	r0, r7
    5044:	bl	0 <coda_type_record_field_set_type>
    5048:	ldr	r0, [r5, sl]
    504c:	mov	r1, r7
    5050:	ldr	r0, [r0, #272]	; 0x110
    5054:	bl	0 <coda_type_record_add_field>
    5058:	movw	r0, #0
    505c:	movt	r0, #0
    5060:	bl	0 <coda_type_record_field_new>
    5064:	mov	r7, r0
    5068:	ldr	r0, [r5, sl]
    506c:	ldr	r1, [r0, #20]
    5070:	mov	r0, r7
    5074:	bl	0 <coda_type_record_field_set_type>
    5078:	ldr	r0, [r5, sl]
    507c:	mov	r1, r7
    5080:	ldr	r0, [r0, #272]	; 0x110
    5084:	bl	0 <coda_type_record_add_field>
    5088:	movw	r0, #0
    508c:	movt	r0, #0
    5090:	bl	0 <coda_type_record_field_new>
    5094:	mov	r7, r0
    5098:	ldr	r0, [r5, sl]
    509c:	ldr	r1, [r0, #24]
    50a0:	mov	r0, r7
    50a4:	bl	0 <coda_type_record_field_set_type>
    50a8:	ldr	r0, [r5, sl]
    50ac:	mov	r1, r7
    50b0:	ldr	r0, [r0, #272]	; 0x110
    50b4:	bl	0 <coda_type_record_add_field>
    50b8:	movw	r0, #0
    50bc:	movt	r0, #0
    50c0:	bl	0 <coda_type_record_field_new>
    50c4:	mov	r7, r0
    50c8:	ldr	r0, [r5, sl]
    50cc:	ldr	r1, [r0, #28]
    50d0:	mov	r0, r7
    50d4:	bl	0 <coda_type_record_field_set_type>
    50d8:	ldr	r0, [r5, sl]
    50dc:	mov	r1, r7
    50e0:	ldr	r0, [r0, #272]	; 0x110
    50e4:	bl	0 <coda_type_record_add_field>
    50e8:	movw	r0, #0
    50ec:	movt	r0, #0
    50f0:	bl	0 <coda_type_record_field_new>
    50f4:	mov	r7, r0
    50f8:	ldr	r0, [r5, sl]
    50fc:	ldr	r1, [r0, #32]
    5100:	mov	r0, r7
    5104:	bl	0 <coda_type_record_field_set_type>
    5108:	ldr	r0, [r5, sl]
    510c:	mov	r1, r7
    5110:	ldr	r0, [r0, #272]	; 0x110
    5114:	bl	0 <coda_type_record_add_field>
    5118:	movw	r0, #0
    511c:	movt	r0, #0
    5120:	bl	0 <coda_type_record_field_new>
    5124:	mov	r7, r0
    5128:	ldr	r0, [r5, sl]
    512c:	ldr	r1, [r0, #36]	; 0x24
    5130:	mov	r0, r7
    5134:	bl	0 <coda_type_record_field_set_type>
    5138:	ldr	r0, [r5, sl]
    513c:	mov	r1, r7
    5140:	ldr	r0, [r0, #272]	; 0x110
    5144:	bl	0 <coda_type_record_add_field>
    5148:	movw	r0, #0
    514c:	movt	r0, #0
    5150:	bl	0 <coda_type_record_field_new>
    5154:	mov	r7, r0
    5158:	ldr	r0, [r5, sl]
    515c:	ldr	r1, [r0, #40]	; 0x28
    5160:	mov	r0, r7
    5164:	bl	0 <coda_type_record_field_set_type>
    5168:	ldr	r0, [r5, sl]
    516c:	mov	r1, r7
    5170:	ldr	r0, [r0, #272]	; 0x110
    5174:	bl	0 <coda_type_record_add_field>
    5178:	movw	r0, #0
    517c:	movt	r0, #0
    5180:	bl	0 <coda_type_record_field_new>
    5184:	mov	r7, r0
    5188:	ldr	r0, [r5, sl]
    518c:	ldr	r1, [r0, #48]	; 0x30
    5190:	mov	r0, r7
    5194:	bl	0 <coda_type_record_field_set_type>
    5198:	ldr	r0, [r5, sl]
    519c:	mov	r1, r7
    51a0:	ldr	r0, [r0, #272]	; 0x110
    51a4:	bl	0 <coda_type_record_add_field>
    51a8:	movw	r0, #0
    51ac:	movt	r0, #0
    51b0:	bl	0 <coda_type_record_field_new>
    51b4:	mov	r7, r0
    51b8:	ldr	r0, [r5, sl]
    51bc:	ldr	r1, [r0, #52]	; 0x34
    51c0:	mov	r0, r7
    51c4:	bl	0 <coda_type_record_field_set_type>
    51c8:	ldr	r0, [r5, sl]
    51cc:	mov	r1, r7
    51d0:	ldr	r0, [r0, #272]	; 0x110
    51d4:	bl	0 <coda_type_record_add_field>
    51d8:	movw	r0, #0
    51dc:	movt	r0, #0
    51e0:	bl	0 <coda_type_record_field_new>
    51e4:	mov	r7, r0
    51e8:	ldr	r0, [r5, sl]
    51ec:	ldr	r1, [r0, #56]	; 0x38
    51f0:	mov	r0, r7
    51f4:	bl	0 <coda_type_record_field_set_type>
    51f8:	ldr	r0, [r5, sl]
    51fc:	mov	r1, r7
    5200:	ldr	r0, [r0, #272]	; 0x110
    5204:	bl	0 <coda_type_record_add_field>
    5208:	movw	r0, #0
    520c:	movt	r0, #0
    5210:	bl	0 <coda_type_record_field_new>
    5214:	mov	r7, r0
    5218:	ldr	r0, [r5, sl]
    521c:	ldr	r1, [r0, #60]	; 0x3c
    5220:	mov	r0, r7
    5224:	bl	0 <coda_type_record_field_set_type>
    5228:	ldr	r0, [r5, sl]
    522c:	mov	r1, r7
    5230:	ldr	r0, [r0, #272]	; 0x110
    5234:	bl	0 <coda_type_record_add_field>
    5238:	movw	r0, #0
    523c:	movt	r0, #0
    5240:	bl	0 <coda_type_record_field_new>
    5244:	mov	r7, r0
    5248:	ldr	r0, [r5, sl]
    524c:	ldr	r1, [r0, #68]	; 0x44
    5250:	mov	r0, r7
    5254:	bl	0 <coda_type_record_field_set_type>
    5258:	ldr	r0, [r5, sl]
    525c:	mov	r1, r7
    5260:	ldr	r0, [r0, #272]	; 0x110
    5264:	bl	0 <coda_type_record_add_field>
    5268:	movw	r0, #0
    526c:	movt	r0, #0
    5270:	bl	0 <coda_type_record_field_new>
    5274:	mov	r7, r0
    5278:	ldr	r0, [r5, sl]
    527c:	ldr	r1, [r0, #72]	; 0x48
    5280:	mov	r0, r7
    5284:	bl	0 <coda_type_record_field_set_type>
    5288:	ldr	r0, [r5, sl]
    528c:	mov	r1, r7
    5290:	ldr	r0, [r0, #272]	; 0x110
    5294:	bl	0 <coda_type_record_add_field>
    5298:	movw	r0, #0
    529c:	movt	r0, #0
    52a0:	bl	0 <coda_type_record_field_new>
    52a4:	mov	r7, r0
    52a8:	ldr	r0, [r5, sl]
    52ac:	ldr	r1, [r0, #76]	; 0x4c
    52b0:	mov	r0, r7
    52b4:	bl	0 <coda_type_record_field_set_type>
    52b8:	ldr	r0, [r5, sl]
    52bc:	mov	r1, r7
    52c0:	ldr	r0, [r0, #272]	; 0x110
    52c4:	bl	0 <coda_type_record_add_field>
    52c8:	movw	r0, #0
    52cc:	movt	r0, #0
    52d0:	bl	0 <coda_type_record_field_new>
    52d4:	mov	r7, r0
    52d8:	ldr	r0, [r5, sl]
    52dc:	ldr	r1, [r0, #80]	; 0x50
    52e0:	mov	r0, r7
    52e4:	bl	0 <coda_type_record_field_set_type>
    52e8:	ldr	r0, [r5, sl]
    52ec:	mov	r1, r7
    52f0:	ldr	r0, [r0, #272]	; 0x110
    52f4:	bl	0 <coda_type_record_add_field>
    52f8:	movw	r0, #0
    52fc:	movt	r0, #0
    5300:	bl	0 <coda_type_record_field_new>
    5304:	mov	r7, r0
    5308:	ldr	r0, [r5, sl]
    530c:	ldr	r1, [r0, #84]	; 0x54
    5310:	mov	r0, r7
    5314:	bl	0 <coda_type_record_field_set_type>
    5318:	ldr	r0, [r5, sl]
    531c:	mov	r1, r7
    5320:	ldr	r0, [r0, #272]	; 0x110
    5324:	bl	0 <coda_type_record_add_field>
    5328:	movw	r0, #0
    532c:	movt	r0, #0
    5330:	bl	0 <coda_type_record_field_new>
    5334:	mov	r7, r0
    5338:	ldr	r0, [r5, sl]
    533c:	ldr	r1, [r0, #88]	; 0x58
    5340:	mov	r0, r7
    5344:	bl	0 <coda_type_record_field_set_type>
    5348:	ldr	r0, [r5, sl]
    534c:	mov	r1, r7
    5350:	ldr	r0, [r0, #272]	; 0x110
    5354:	bl	0 <coda_type_record_add_field>
    5358:	movw	r0, #0
    535c:	movt	r0, #0
    5360:	bl	0 <coda_type_record_field_new>
    5364:	mov	r7, r0
    5368:	ldr	r0, [r5, sl]
    536c:	ldr	r1, [r0, #92]	; 0x5c
    5370:	mov	r0, r7
    5374:	bl	0 <coda_type_record_field_set_type>
    5378:	ldr	r0, [r5, sl]
    537c:	mov	r1, r7
    5380:	ldr	r0, [r0, #272]	; 0x110
    5384:	bl	0 <coda_type_record_add_field>
    5388:	movw	r0, #0
    538c:	movt	r0, #0
    5390:	bl	0 <coda_type_record_field_new>
    5394:	mov	r7, r0
    5398:	ldr	r0, [r5, sl]
    539c:	ldr	r1, [r0, #96]	; 0x60
    53a0:	mov	r0, r7
    53a4:	bl	0 <coda_type_record_field_set_type>
    53a8:	ldr	r0, [r5, sl]
    53ac:	mov	r1, r7
    53b0:	ldr	r0, [r0, #272]	; 0x110
    53b4:	bl	0 <coda_type_record_add_field>
    53b8:	movw	r0, #0
    53bc:	movt	r0, #0
    53c0:	bl	0 <coda_type_record_field_new>
    53c4:	mov	r7, r0
    53c8:	ldr	r0, [r5, sl]
    53cc:	ldr	r1, [r0, #100]	; 0x64
    53d0:	mov	r0, r7
    53d4:	bl	0 <coda_type_record_field_set_type>
    53d8:	mov	r0, r7
    53dc:	bl	0 <coda_type_record_field_set_hidden>
    53e0:	ldr	r0, [r5, sl]
    53e4:	mov	r1, r7
    53e8:	ldr	r0, [r0, #272]	; 0x110
    53ec:	bl	0 <coda_type_record_add_field>
    53f0:	movw	r0, #0
    53f4:	movt	r0, #0
    53f8:	bl	0 <coda_type_record_field_new>
    53fc:	mov	r7, r0
    5400:	ldr	r0, [r5, sl]
    5404:	ldr	r1, [r0, #128]	; 0x80
    5408:	mov	r0, r7
    540c:	bl	0 <coda_type_record_field_set_type>
    5410:	mov	r0, r7
    5414:	bl	0 <coda_type_record_field_set_optional>
    5418:	ldr	r0, [r5, sl]
    541c:	mov	r1, r7
    5420:	ldr	r0, [r0, #272]	; 0x110
    5424:	bl	0 <coda_type_record_add_field>
    5428:	movw	r0, #0
    542c:	movt	r0, #0
    5430:	bl	0 <coda_type_record_field_new>
    5434:	mov	r7, r0
    5438:	ldr	r0, [r5, sl]
    543c:	ldr	r1, [r0, #264]	; 0x108
    5440:	mov	r0, r7
    5444:	bl	0 <coda_type_record_field_set_type>
    5448:	mov	r0, r7
    544c:	bl	0 <coda_type_record_field_set_optional>
    5450:	ldr	r0, [r5, sl]
    5454:	mov	r1, r7
    5458:	ldr	r0, [r0, #272]	; 0x110
    545c:	bl	0 <coda_type_record_add_field>
    5460:	movw	r0, #0
    5464:	movt	r0, #0
    5468:	bl	0 <coda_type_record_field_new>
    546c:	mov	r7, r0
    5470:	ldr	r0, [r5, sl]
    5474:	ldr	r1, [r0, #268]	; 0x10c
    5478:	mov	r0, r7
    547c:	bl	0 <coda_type_record_field_set_type>
    5480:	ldr	r0, [r5, sl]
    5484:	mov	r1, r7
    5488:	ldr	r0, [r0, #272]	; 0x110
    548c:	bl	0 <coda_type_record_add_field>
    5490:	mov	r0, #7
    5494:	mov	r1, #2
    5498:	bl	0 <coda_type_number_new>
    549c:	ldr	r1, [r5, sl]
    54a0:	str	r0, [r1, #276]	; 0x114
    54a4:	mov	r1, #1
    54a8:	bl	0 <coda_type_number_set_endianness>
    54ac:	ldr	r0, [r5, sl]
    54b0:	mov	r1, #4
    54b4:	ldr	r0, [r0, #276]	; 0x114
    54b8:	bl	0 <coda_type_set_read_type>
    54bc:	ldr	r0, [r5, sl]
    54c0:	mov	r2, #32
    54c4:	mov	r3, #0
    54c8:	ldr	r0, [r0, #276]	; 0x114
    54cc:	bl	0 <coda_type_set_bit_size>
    54d0:	mov	r0, #7
    54d4:	mov	r1, #2
    54d8:	bl	0 <coda_type_number_new>
    54dc:	ldr	r1, [r5, sl]
    54e0:	str	r0, [r1, #280]	; 0x118
    54e4:	mov	r1, #1
    54e8:	bl	0 <coda_type_number_set_endianness>
    54ec:	ldr	r0, [r5, sl]
    54f0:	mov	r1, #5
    54f4:	ldr	r0, [r0, #280]	; 0x118
    54f8:	bl	0 <coda_type_set_read_type>
    54fc:	ldr	r0, [r5, sl]
    5500:	mov	r2, #32
    5504:	mov	r3, #0
    5508:	ldr	r0, [r0, #280]	; 0x118
    550c:	bl	0 <coda_type_set_bit_size>
    5510:	mov	r0, #7
    5514:	mov	r1, #2
    5518:	bl	0 <coda_type_number_new>
    551c:	ldr	r1, [r5, sl]
    5520:	str	r0, [r1, #284]	; 0x11c
    5524:	mov	r1, #1
    5528:	bl	0 <coda_type_number_set_endianness>
    552c:	ldr	r0, [r5, sl]
    5530:	mov	r1, #1
    5534:	ldr	r0, [r0, #284]	; 0x11c
    5538:	bl	0 <coda_type_set_read_type>
    553c:	ldr	r0, [r5, sl]
    5540:	mov	r2, #8
    5544:	mov	r3, #0
    5548:	ldr	r0, [r0, #284]	; 0x11c
    554c:	bl	0 <coda_type_set_bit_size>
    5550:	ldr	r0, [r5, sl]
    5554:	movw	r1, #0
    5558:	movt	r1, #0
    555c:	ldr	r0, [r0, #284]	; 0x11c
    5560:	bl	0 <coda_type_set_description>
    5564:	mov	r0, #7
    5568:	mov	r1, #2
    556c:	bl	0 <coda_type_number_new>
    5570:	ldr	r1, [r5, sl]
    5574:	str	r0, [r1, #288]	; 0x120
    5578:	mov	r1, #1
    557c:	bl	0 <coda_type_number_set_endianness>
    5580:	ldr	r0, [r5, sl]
    5584:	mov	r1, #3
    5588:	ldr	r0, [r0, #288]	; 0x120
    558c:	bl	0 <coda_type_set_read_type>
    5590:	ldr	r0, [r5, sl]
    5594:	mov	r2, #16
    5598:	mov	r3, #0
    559c:	ldr	r0, [r0, #288]	; 0x120
    55a0:	bl	0 <coda_type_set_bit_size>
    55a4:	ldr	r0, [r5, sl]
    55a8:	movw	r1, #0
    55ac:	movt	r1, #0
    55b0:	ldr	r0, [r0, #288]	; 0x120
    55b4:	bl	0 <coda_type_set_description>
    55b8:	mov	r0, #7
    55bc:	mov	r1, #2
    55c0:	bl	0 <coda_type_number_new>
    55c4:	ldr	r1, [r5, sl]
    55c8:	str	r0, [r1, #292]	; 0x124
    55cc:	mov	r1, #1
    55d0:	bl	0 <coda_type_number_set_endianness>
    55d4:	ldr	r0, [r5, sl]
    55d8:	mov	r1, #3
    55dc:	ldr	r0, [r0, #292]	; 0x124
    55e0:	bl	0 <coda_type_set_read_type>
    55e4:	ldr	r0, [r5, sl]
    55e8:	mov	r2, #16
    55ec:	mov	r3, #0
    55f0:	ldr	r0, [r0, #292]	; 0x124
    55f4:	bl	0 <coda_type_set_bit_size>
    55f8:	ldr	r0, [r5, sl]
    55fc:	movw	r1, #0
    5600:	movt	r1, #0
    5604:	ldr	r0, [r0, #292]	; 0x124
    5608:	bl	0 <coda_type_set_description>
    560c:	mov	r0, #7
    5610:	mov	r1, #2
    5614:	bl	0 <coda_type_number_new>
    5618:	ldr	r1, [r5, sl]
    561c:	str	r0, [r1, #296]	; 0x128
    5620:	mov	r1, #1
    5624:	bl	0 <coda_type_number_set_endianness>
    5628:	ldr	r0, [r5, sl]
    562c:	mov	r1, #1
    5630:	ldr	r0, [r0, #296]	; 0x128
    5634:	bl	0 <coda_type_set_read_type>
    5638:	ldr	r0, [r5, sl]
    563c:	mov	r2, #8
    5640:	mov	r3, #0
    5644:	ldr	r0, [r0, #296]	; 0x128
    5648:	bl	0 <coda_type_set_bit_size>
    564c:	ldr	r0, [r5, sl]
    5650:	movw	r1, #0
    5654:	movt	r1, #0
    5658:	ldr	r0, [r0, #296]	; 0x128
    565c:	bl	0 <coda_type_set_description>
    5660:	mov	r0, #7
    5664:	mov	r1, #2
    5668:	bl	0 <coda_type_number_new>
    566c:	ldr	r1, [r5, sl]
    5670:	str	r0, [r1, #300]	; 0x12c
    5674:	mov	r1, #1
    5678:	bl	0 <coda_type_number_set_endianness>
    567c:	ldr	r0, [r5, sl]
    5680:	mov	r1, #1
    5684:	ldr	r0, [r0, #300]	; 0x12c
    5688:	bl	0 <coda_type_set_read_type>
    568c:	ldr	r0, [r5, sl]
    5690:	mov	r2, #8
    5694:	mov	r3, #0
    5698:	ldr	r0, [r0, #300]	; 0x12c
    569c:	bl	0 <coda_type_set_bit_size>
    56a0:	ldr	r0, [r5, sl]
    56a4:	movw	r1, #0
    56a8:	movt	r1, #0
    56ac:	ldr	r0, [r0, #300]	; 0x12c
    56b0:	bl	0 <coda_type_set_description>
    56b4:	mov	r0, #7
    56b8:	mov	r1, #2
    56bc:	bl	0 <coda_type_number_new>
    56c0:	ldr	r1, [r5, sl]
    56c4:	str	r0, [r1, #304]	; 0x130
    56c8:	mov	r1, #1
    56cc:	bl	0 <coda_type_number_set_endianness>
    56d0:	ldr	r0, [r5, sl]
    56d4:	mov	r1, #1
    56d8:	ldr	r0, [r0, #304]	; 0x130
    56dc:	bl	0 <coda_type_set_read_type>
    56e0:	ldr	r0, [r5, sl]
    56e4:	mov	r2, #8
    56e8:	mov	r3, #0
    56ec:	ldr	r0, [r0, #304]	; 0x130
    56f0:	bl	0 <coda_type_set_bit_size>
    56f4:	ldr	r0, [r5, sl]
    56f8:	movw	r1, #0
    56fc:	movt	r1, #0
    5700:	ldr	r0, [r0, #304]	; 0x130
    5704:	bl	0 <coda_type_set_description>
    5708:	mov	r0, #7
    570c:	mov	r1, #2
    5710:	bl	0 <coda_type_number_new>
    5714:	ldr	r1, [r5, sl]
    5718:	str	r0, [r1, #308]	; 0x134
    571c:	mov	r1, #1
    5720:	bl	0 <coda_type_number_set_endianness>
    5724:	ldr	r0, [r5, sl]
    5728:	mov	r1, #1
    572c:	ldr	r0, [r0, #308]	; 0x134
    5730:	bl	0 <coda_type_set_read_type>
    5734:	ldr	r0, [r5, sl]
    5738:	mov	r2, #8
    573c:	mov	r3, #0
    5740:	ldr	r0, [r0, #308]	; 0x134
    5744:	bl	0 <coda_type_set_bit_size>
    5748:	ldr	r0, [r5, sl]
    574c:	movw	r1, #0
    5750:	movt	r1, #0
    5754:	ldr	r0, [r0, #308]	; 0x134
    5758:	bl	0 <coda_type_set_description>
    575c:	mov	r0, #7
    5760:	mov	r1, #2
    5764:	bl	0 <coda_type_number_new>
    5768:	ldr	r1, [r5, sl]
    576c:	str	r0, [r1, #312]	; 0x138
    5770:	mov	r1, #1
    5774:	bl	0 <coda_type_number_set_endianness>
    5778:	ldr	r0, [r5, sl]
    577c:	mov	r1, #1
    5780:	ldr	r0, [r0, #312]	; 0x138
    5784:	bl	0 <coda_type_set_read_type>
    5788:	ldr	r0, [r5, sl]
    578c:	mov	r2, #8
    5790:	mov	r3, #0
    5794:	ldr	r0, [r0, #312]	; 0x138
    5798:	bl	0 <coda_type_set_bit_size>
    579c:	ldr	r0, [r5, sl]
    57a0:	movw	r1, #0
    57a4:	movt	r1, #0
    57a8:	ldr	r0, [r0, #312]	; 0x138
    57ac:	bl	0 <coda_type_set_description>
    57b0:	mov	r0, #7
    57b4:	mov	r1, #2
    57b8:	bl	0 <coda_type_number_new>
    57bc:	ldr	r1, [r5, sl]
    57c0:	str	r0, [r1, #316]	; 0x13c
    57c4:	mov	r1, #1
    57c8:	bl	0 <coda_type_number_set_endianness>
    57cc:	ldr	r0, [r5, sl]
    57d0:	mov	r1, #3
    57d4:	ldr	r0, [r0, #316]	; 0x13c
    57d8:	bl	0 <coda_type_set_read_type>
    57dc:	ldr	r0, [r5, sl]
    57e0:	mov	r2, #16
    57e4:	mov	r3, #0
    57e8:	ldr	r0, [r0, #316]	; 0x13c
    57ec:	bl	0 <coda_type_set_bit_size>
    57f0:	ldr	r0, [r5, sl]
    57f4:	movw	r1, #0
    57f8:	movt	r1, #0
    57fc:	ldr	r0, [r0, #316]	; 0x13c
    5800:	bl	0 <coda_type_set_description>
    5804:	mov	r0, #7
    5808:	mov	r1, #2
    580c:	bl	0 <coda_type_number_new>
    5810:	ldr	r1, [r5, sl]
    5814:	str	r0, [r1, #320]	; 0x140
    5818:	mov	r1, #1
    581c:	bl	0 <coda_type_number_set_endianness>
    5820:	ldr	r0, [r5, sl]
    5824:	mov	r1, #2
    5828:	ldr	r0, [r0, #320]	; 0x140
    582c:	bl	0 <coda_type_set_read_type>
    5830:	ldr	r0, [r5, sl]
    5834:	mov	r2, #16
    5838:	mov	r3, #0
    583c:	ldr	r0, [r0, #320]	; 0x140
    5840:	bl	0 <coda_type_set_bit_size>
    5844:	ldr	r0, [r5, sl]
    5848:	movw	r1, #0
    584c:	movt	r1, #0
    5850:	ldr	r0, [r0, #320]	; 0x140
    5854:	bl	0 <coda_type_set_description>
    5858:	mov	r0, #7
    585c:	mov	r1, #2
    5860:	bl	0 <coda_type_number_new>
    5864:	ldr	r1, [r5, sl]
    5868:	str	r0, [r1, #324]	; 0x144
    586c:	mov	r1, #1
    5870:	bl	0 <coda_type_number_set_endianness>
    5874:	ldr	r0, [r5, sl]
    5878:	mov	r1, #1
    587c:	ldr	r0, [r0, #324]	; 0x144
    5880:	bl	0 <coda_type_set_read_type>
    5884:	ldr	r0, [r5, sl]
    5888:	mov	r2, #8
    588c:	mov	r3, #0
    5890:	ldr	r0, [r0, #324]	; 0x144
    5894:	bl	0 <coda_type_set_bit_size>
    5898:	ldr	r0, [r5, sl]
    589c:	movw	r1, #0
    58a0:	movt	r1, #0
    58a4:	ldr	r0, [r0, #324]	; 0x144
    58a8:	bl	0 <coda_type_set_description>
    58ac:	mov	r0, #7
    58b0:	mov	r1, #2
    58b4:	bl	0 <coda_type_number_new>
    58b8:	ldr	r1, [r5, sl]
    58bc:	str	r0, [r1, #328]	; 0x148
    58c0:	mov	r1, #1
    58c4:	bl	0 <coda_type_number_set_endianness>
    58c8:	ldr	r0, [r5, sl]
    58cc:	mov	r1, #1
    58d0:	ldr	r0, [r0, #328]	; 0x148
    58d4:	bl	0 <coda_type_set_read_type>
    58d8:	ldr	r0, [r5, sl]
    58dc:	mov	r2, #8
    58e0:	mov	r3, #0
    58e4:	ldr	r0, [r0, #328]	; 0x148
    58e8:	bl	0 <coda_type_set_bit_size>
    58ec:	ldr	r0, [r5, sl]
    58f0:	movw	r1, #0
    58f4:	movt	r1, #0
    58f8:	ldr	r0, [r0, #328]	; 0x148
    58fc:	bl	0 <coda_type_set_description>
    5900:	mov	r0, #7
    5904:	mov	r1, #2
    5908:	bl	0 <coda_type_number_new>
    590c:	ldr	r1, [r5, sl]
    5910:	str	r0, [r1, #332]	; 0x14c
    5914:	mov	r1, #1
    5918:	bl	0 <coda_type_number_set_endianness>
    591c:	ldr	r0, [r5, sl]
    5920:	mov	r1, #1
    5924:	ldr	r0, [r0, #332]	; 0x14c
    5928:	bl	0 <coda_type_set_read_type>
    592c:	ldr	r0, [r5, sl]
    5930:	mov	r2, #8
    5934:	mov	r3, #0
    5938:	ldr	r0, [r0, #332]	; 0x14c
    593c:	bl	0 <coda_type_set_bit_size>
    5940:	ldr	r0, [r5, sl]
    5944:	movw	r1, #0
    5948:	movt	r1, #0
    594c:	ldr	r0, [r0, #332]	; 0x14c
    5950:	bl	0 <coda_type_set_description>
    5954:	mov	r0, #7
    5958:	mov	r1, #2
    595c:	bl	0 <coda_type_number_new>
    5960:	ldr	r1, [r5, sl]
    5964:	str	r0, [r1, #336]	; 0x150
    5968:	mov	r1, #1
    596c:	bl	0 <coda_type_number_set_endianness>
    5970:	ldr	r0, [r5, sl]
    5974:	mov	r1, #1
    5978:	ldr	r0, [r0, #336]	; 0x150
    597c:	bl	0 <coda_type_set_read_type>
    5980:	ldr	r0, [r5, sl]
    5984:	mov	r2, #8
    5988:	mov	r3, #0
    598c:	ldr	r0, [r0, #336]	; 0x150
    5990:	bl	0 <coda_type_set_bit_size>
    5994:	ldr	r0, [r5, sl]
    5998:	movw	r1, #0
    599c:	movt	r1, #0
    59a0:	ldr	r0, [r0, #336]	; 0x150
    59a4:	bl	0 <coda_type_set_description>
    59a8:	mov	r0, #7
    59ac:	mov	r1, #2
    59b0:	bl	0 <coda_type_number_new>
    59b4:	ldr	r1, [r5, sl]
    59b8:	str	r0, [r1, #340]	; 0x154
    59bc:	mov	r1, #1
    59c0:	bl	0 <coda_type_number_set_endianness>
    59c4:	ldr	r0, [r5, sl]
    59c8:	mov	r1, #1
    59cc:	ldr	r0, [r0, #340]	; 0x154
    59d0:	bl	0 <coda_type_set_read_type>
    59d4:	ldr	r0, [r5, sl]
    59d8:	mov	r2, #8
    59dc:	mov	r3, #0
    59e0:	ldr	r0, [r0, #340]	; 0x154
    59e4:	bl	0 <coda_type_set_bit_size>
    59e8:	ldr	r0, [r5, sl]
    59ec:	movw	r1, #0
    59f0:	movt	r1, #0
    59f4:	ldr	r0, [r0, #340]	; 0x154
    59f8:	bl	0 <coda_type_set_description>
    59fc:	mov	r0, #7
    5a00:	mov	r1, #2
    5a04:	bl	0 <coda_type_number_new>
    5a08:	ldr	r1, [r5, sl]
    5a0c:	str	r0, [r1, #344]	; 0x158
    5a10:	mov	r1, #1
    5a14:	bl	0 <coda_type_number_set_endianness>
    5a18:	ldr	r0, [r5, sl]
    5a1c:	mov	r1, #1
    5a20:	ldr	r0, [r0, #344]	; 0x158
    5a24:	bl	0 <coda_type_set_read_type>
    5a28:	ldr	r0, [r5, sl]
    5a2c:	mov	r2, #8
    5a30:	mov	r3, #0
    5a34:	ldr	r0, [r0, #344]	; 0x158
    5a38:	bl	0 <coda_type_set_bit_size>
    5a3c:	ldr	r0, [r5, sl]
    5a40:	movw	r1, #0
    5a44:	movt	r1, #0
    5a48:	ldr	r0, [r0, #344]	; 0x158
    5a4c:	bl	0 <coda_type_set_description>
    5a50:	mov	r0, #7
    5a54:	bl	0 <coda_type_raw_new>
    5a58:	ldr	r1, [r5, sl]
    5a5c:	str	r0, [r1, #348]	; 0x15c
    5a60:	movw	r1, #0
    5a64:	movt	r1, #0
    5a68:	bl	0 <coda_type_set_description>
    5a6c:	mov	r0, #7
    5a70:	mov	r1, #2
    5a74:	bl	0 <coda_type_number_new>
    5a78:	ldr	r1, [r5, sl]
    5a7c:	str	r0, [r1, #352]	; 0x160
    5a80:	mov	r1, #1
    5a84:	bl	0 <coda_type_number_set_endianness>
    5a88:	ldr	r0, [r5, sl]
    5a8c:	mov	r1, #1
    5a90:	ldr	r0, [r0, #352]	; 0x160
    5a94:	bl	0 <coda_type_set_read_type>
    5a98:	ldr	r0, [r5, sl]
    5a9c:	mov	r2, #8
    5aa0:	mov	r3, #0
    5aa4:	ldr	r0, [r0, #352]	; 0x160
    5aa8:	bl	0 <coda_type_set_bit_size>
    5aac:	ldr	r0, [r5, sl]
    5ab0:	movw	r1, #0
    5ab4:	movt	r1, #0
    5ab8:	ldr	r0, [r0, #352]	; 0x160
    5abc:	bl	0 <coda_type_set_description>
    5ac0:	mov	r0, #7
    5ac4:	mov	r1, #2
    5ac8:	bl	0 <coda_type_number_new>
    5acc:	ldr	r1, [r5, sl]
    5ad0:	str	r0, [r1, #356]	; 0x164
    5ad4:	mov	r1, #1
    5ad8:	bl	0 <coda_type_number_set_endianness>
    5adc:	ldr	r0, [r5, sl]
    5ae0:	mov	r1, #1
    5ae4:	ldr	r0, [r0, #356]	; 0x164
    5ae8:	bl	0 <coda_type_set_read_type>
    5aec:	ldr	r0, [r5, sl]
    5af0:	mov	r2, #8
    5af4:	mov	r3, #0
    5af8:	ldr	r0, [r0, #356]	; 0x164
    5afc:	bl	0 <coda_type_set_bit_size>
    5b00:	ldr	r0, [r5, sl]
    5b04:	movw	r1, #0
    5b08:	movt	r1, #0
    5b0c:	ldr	r0, [r0, #356]	; 0x164
    5b10:	bl	0 <coda_type_set_description>
    5b14:	mov	r0, #7
    5b18:	mov	r1, #2
    5b1c:	bl	0 <coda_type_number_new>
    5b20:	ldr	r1, [r5, sl]
    5b24:	str	r0, [r1, #360]	; 0x168
    5b28:	mov	r1, #1
    5b2c:	bl	0 <coda_type_number_set_endianness>
    5b30:	ldr	r0, [r5, sl]
    5b34:	mov	r1, #1
    5b38:	ldr	r0, [r0, #360]	; 0x168
    5b3c:	bl	0 <coda_type_set_read_type>
    5b40:	ldr	r0, [r5, sl]
    5b44:	mov	r2, #8
    5b48:	mov	r3, #0
    5b4c:	ldr	r0, [r0, #360]	; 0x168
    5b50:	bl	0 <coda_type_set_bit_size>
    5b54:	mov	r0, #7
    5b58:	mov	r1, #2
    5b5c:	bl	0 <coda_type_number_new>
    5b60:	ldr	r1, [r5, sl]
    5b64:	str	r0, [r1, #364]	; 0x16c
    5b68:	mov	r1, #1
    5b6c:	bl	0 <coda_type_number_set_endianness>
    5b70:	ldr	r0, [r5, sl]
    5b74:	mov	r1, #1
    5b78:	ldr	r0, [r0, #364]	; 0x16c
    5b7c:	bl	0 <coda_type_set_read_type>
    5b80:	ldr	r0, [r5, sl]
    5b84:	mov	r2, #8
    5b88:	mov	r3, #0
    5b8c:	ldr	r0, [r0, #364]	; 0x16c
    5b90:	bl	0 <coda_type_set_bit_size>
    5b94:	mov	r0, #7
    5b98:	mov	r1, #2
    5b9c:	bl	0 <coda_type_number_new>
    5ba0:	ldr	r1, [r5, sl]
    5ba4:	str	r0, [r1, #368]	; 0x170
    5ba8:	mov	r1, #1
    5bac:	bl	0 <coda_type_number_set_endianness>
    5bb0:	ldr	r0, [r5, sl]
    5bb4:	mov	r1, #5
    5bb8:	ldr	r0, [r0, #368]	; 0x170
    5bbc:	bl	0 <coda_type_set_read_type>
    5bc0:	ldr	r0, [r5, sl]
    5bc4:	mov	r2, #32
    5bc8:	mov	r3, #0
    5bcc:	ldr	r0, [r0, #368]	; 0x170
    5bd0:	bl	0 <coda_type_set_bit_size>
    5bd4:	mov	r0, #7
    5bd8:	mov	r1, #2
    5bdc:	bl	0 <coda_type_number_new>
    5be0:	ldr	r1, [r5, sl]
    5be4:	str	r0, [r1, #372]	; 0x174
    5be8:	mov	r1, #1
    5bec:	bl	0 <coda_type_number_set_endianness>
    5bf0:	ldr	r0, [r5, sl]
    5bf4:	mov	r1, #1
    5bf8:	ldr	r0, [r0, #372]	; 0x174
    5bfc:	bl	0 <coda_type_set_read_type>
    5c00:	ldr	r0, [r5, sl]
    5c04:	mov	r2, #8
    5c08:	mov	r3, #0
    5c0c:	ldr	r0, [r0, #372]	; 0x174
    5c10:	bl	0 <coda_type_set_bit_size>
    5c14:	mov	r0, #7
    5c18:	mov	r1, #2
    5c1c:	bl	0 <coda_type_number_new>
    5c20:	ldr	r1, [r5, sl]
    5c24:	str	r0, [r1, #376]	; 0x178
    5c28:	mov	r1, #1
    5c2c:	bl	0 <coda_type_number_set_endianness>
    5c30:	ldr	r0, [r5, sl]
    5c34:	mov	r1, #5
    5c38:	ldr	r0, [r0, #376]	; 0x178
    5c3c:	bl	0 <coda_type_set_read_type>
    5c40:	ldr	r0, [r5, sl]
    5c44:	mov	r2, #32
    5c48:	mov	r3, #0
    5c4c:	ldr	r0, [r0, #376]	; 0x178
    5c50:	bl	0 <coda_type_set_bit_size>
    5c54:	mov	r0, #7
    5c58:	mov	r1, #2
    5c5c:	bl	0 <coda_type_number_new>
    5c60:	ldr	r1, [r5, sl]
    5c64:	str	r0, [r1, #380]	; 0x17c
    5c68:	mov	r1, #1
    5c6c:	bl	0 <coda_type_number_set_endianness>
    5c70:	ldr	r0, [r5, sl]
    5c74:	mov	r1, #1
    5c78:	ldr	r0, [r0, #380]	; 0x17c
    5c7c:	bl	0 <coda_type_set_read_type>
    5c80:	ldr	r0, [r5, sl]
    5c84:	mov	r2, #8
    5c88:	mov	r3, #0
    5c8c:	ldr	r0, [r0, #380]	; 0x17c
    5c90:	bl	0 <coda_type_set_bit_size>
    5c94:	mov	r0, #7
    5c98:	mov	r1, #2
    5c9c:	bl	0 <coda_type_number_new>
    5ca0:	ldr	r1, [r5, sl]
    5ca4:	str	r0, [r1, #384]	; 0x180
    5ca8:	mov	r1, #1
    5cac:	bl	0 <coda_type_number_set_endianness>
    5cb0:	ldr	r0, [r5, sl]
    5cb4:	mov	r1, #5
    5cb8:	ldr	r0, [r0, #384]	; 0x180
    5cbc:	bl	0 <coda_type_set_read_type>
    5cc0:	ldr	r0, [r5, sl]
    5cc4:	mov	r2, #32
    5cc8:	mov	r3, #0
    5ccc:	ldr	r0, [r0, #384]	; 0x180
    5cd0:	bl	0 <coda_type_set_bit_size>
    5cd4:	mov	r0, #7
    5cd8:	mov	r1, #2
    5cdc:	bl	0 <coda_type_number_new>
    5ce0:	ldr	r1, [r5, sl]
    5ce4:	str	r0, [r1, #388]	; 0x184
    5ce8:	mov	r1, #1
    5cec:	bl	0 <coda_type_number_set_endianness>
    5cf0:	ldr	r0, [r5, sl]
    5cf4:	mov	r1, #5
    5cf8:	ldr	r0, [r0, #388]	; 0x184
    5cfc:	bl	0 <coda_type_set_read_type>
    5d00:	ldr	r0, [r5, sl]
    5d04:	mov	r2, #32
    5d08:	mov	r3, #0
    5d0c:	ldr	r0, [r0, #388]	; 0x184
    5d10:	bl	0 <coda_type_set_bit_size>
    5d14:	ldr	r0, [r5, sl]
    5d18:	movw	r1, #0
    5d1c:	movt	r1, #0
    5d20:	ldr	r0, [r0, #388]	; 0x184
    5d24:	bl	0 <coda_type_set_description>
    5d28:	mov	r0, #7
    5d2c:	mov	r1, #2
    5d30:	bl	0 <coda_type_number_new>
    5d34:	ldr	r1, [r5, sl]
    5d38:	str	r0, [r1, #392]	; 0x188
    5d3c:	mov	r1, #1
    5d40:	bl	0 <coda_type_number_set_endianness>
    5d44:	ldr	r0, [r5, sl]
    5d48:	mov	r1, #5
    5d4c:	ldr	r0, [r0, #392]	; 0x188
    5d50:	bl	0 <coda_type_set_read_type>
    5d54:	ldr	r0, [r5, sl]
    5d58:	mov	r2, #32
    5d5c:	mov	r3, #0
    5d60:	ldr	r0, [r0, #392]	; 0x188
    5d64:	bl	0 <coda_type_set_bit_size>
    5d68:	ldr	r0, [r5, sl]
    5d6c:	movw	r1, #0
    5d70:	movt	r1, #0
    5d74:	ldr	r0, [r0, #392]	; 0x188
    5d78:	bl	0 <coda_type_set_description>
    5d7c:	mov	r0, #7
    5d80:	mov	r1, #2
    5d84:	bl	0 <coda_type_number_new>
    5d88:	ldr	r1, [r5, sl]
    5d8c:	str	r0, [r1, #396]	; 0x18c
    5d90:	mov	r1, #1
    5d94:	bl	0 <coda_type_number_set_endianness>
    5d98:	ldr	r0, [r5, sl]
    5d9c:	mov	r1, #5
    5da0:	ldr	r0, [r0, #396]	; 0x18c
    5da4:	bl	0 <coda_type_set_read_type>
    5da8:	ldr	r0, [r5, sl]
    5dac:	mov	r2, #32
    5db0:	mov	r3, #0
    5db4:	ldr	r0, [r0, #396]	; 0x18c
    5db8:	bl	0 <coda_type_set_bit_size>
    5dbc:	mov	r0, #7
    5dc0:	mov	r1, #2
    5dc4:	bl	0 <coda_type_number_new>
    5dc8:	ldr	r1, [r5, sl]
    5dcc:	str	r0, [r1, #400]	; 0x190
    5dd0:	mov	r1, #1
    5dd4:	bl	0 <coda_type_number_set_endianness>
    5dd8:	ldr	r0, [r5, sl]
    5ddc:	mov	r1, #5
    5de0:	ldr	r0, [r0, #400]	; 0x190
    5de4:	bl	0 <coda_type_set_read_type>
    5de8:	ldr	r0, [r5, sl]
    5dec:	mov	r2, #32
    5df0:	mov	r3, #0
    5df4:	ldr	r0, [r0, #400]	; 0x190
    5df8:	bl	0 <coda_type_set_bit_size>
    5dfc:	mov	r0, #7
    5e00:	mov	r1, #2
    5e04:	bl	0 <coda_type_number_new>
    5e08:	ldr	r1, [r5, sl]
    5e0c:	str	r0, [r1, #404]	; 0x194
    5e10:	mov	r1, #1
    5e14:	bl	0 <coda_type_number_set_endianness>
    5e18:	ldr	r0, [r5, sl]
    5e1c:	mov	r1, #4
    5e20:	ldr	r0, [r0, #404]	; 0x194
    5e24:	bl	0 <coda_type_set_read_type>
    5e28:	ldr	r0, [r5, sl]
    5e2c:	mov	r2, #32
    5e30:	mov	r3, #0
    5e34:	ldr	r0, [r0, #404]	; 0x194
    5e38:	bl	0 <coda_type_set_bit_size>
    5e3c:	ldr	r0, [r5, sl]
    5e40:	movw	r1, #0
    5e44:	movt	r1, #0
    5e48:	ldr	r0, [r0, #404]	; 0x194
    5e4c:	bl	0 <coda_type_set_description>
    5e50:	mov	r0, #7
    5e54:	mov	r1, #2
    5e58:	bl	0 <coda_type_number_new>
    5e5c:	ldr	r1, [r5, sl]
    5e60:	str	r0, [r1, #408]	; 0x198
    5e64:	mov	r1, #1
    5e68:	bl	0 <coda_type_number_set_endianness>
    5e6c:	ldr	r0, [r5, sl]
    5e70:	mov	r1, #4
    5e74:	ldr	r0, [r0, #408]	; 0x198
    5e78:	bl	0 <coda_type_set_read_type>
    5e7c:	ldr	r0, [r5, sl]
    5e80:	mov	r2, #32
    5e84:	mov	r3, #0
    5e88:	ldr	r0, [r0, #408]	; 0x198
    5e8c:	bl	0 <coda_type_set_bit_size>
    5e90:	ldr	r0, [r5, sl]
    5e94:	movw	r1, #0
    5e98:	movt	r1, #0
    5e9c:	ldr	r0, [r0, #408]	; 0x198
    5ea0:	bl	0 <coda_type_set_description>
    5ea4:	mov	r0, #7
    5ea8:	mov	r1, #2
    5eac:	bl	0 <coda_type_number_new>
    5eb0:	ldr	r1, [r5, sl]
    5eb4:	str	r0, [r1, #412]	; 0x19c
    5eb8:	mov	r1, #1
    5ebc:	bl	0 <coda_type_number_set_endianness>
    5ec0:	ldr	r0, [r5, sl]
    5ec4:	mov	r1, #1
    5ec8:	ldr	r0, [r0, #412]	; 0x19c
    5ecc:	bl	0 <coda_type_set_read_type>
    5ed0:	ldr	r0, [r5, sl]
    5ed4:	mov	r2, #8
    5ed8:	mov	r3, #0
    5edc:	ldr	r0, [r0, #412]	; 0x19c
    5ee0:	bl	0 <coda_type_set_bit_size>
    5ee4:	ldr	r0, [r5, sl]
    5ee8:	movw	r1, #0
    5eec:	movt	r1, #0
    5ef0:	ldr	r0, [r0, #412]	; 0x19c
    5ef4:	bl	0 <coda_type_set_description>
    5ef8:	mov	r0, #7
    5efc:	mov	r1, #2
    5f00:	bl	0 <coda_type_number_new>
    5f04:	ldr	r1, [r5, sl]
    5f08:	str	r0, [r1, #416]	; 0x1a0
    5f0c:	mov	r1, #1
    5f10:	bl	0 <coda_type_number_set_endianness>
    5f14:	ldr	r0, [r5, sl]
    5f18:	mov	r1, #4
    5f1c:	ldr	r0, [r0, #416]	; 0x1a0
    5f20:	bl	0 <coda_type_set_read_type>
    5f24:	ldr	r0, [r5, sl]
    5f28:	mov	r2, #32
    5f2c:	mov	r3, #0
    5f30:	ldr	r0, [r0, #416]	; 0x1a0
    5f34:	bl	0 <coda_type_set_bit_size>
    5f38:	ldr	r0, [r5, sl]
    5f3c:	movw	r1, #0
    5f40:	movt	r1, #0
    5f44:	ldr	r0, [r0, #416]	; 0x1a0
    5f48:	bl	0 <coda_type_set_description>
    5f4c:	mov	r0, #7
    5f50:	mov	r1, #2
    5f54:	bl	0 <coda_type_number_new>
    5f58:	ldr	r1, [r5, sl]
    5f5c:	str	r0, [r1, #420]	; 0x1a4
    5f60:	mov	r1, #1
    5f64:	bl	0 <coda_type_number_set_endianness>
    5f68:	ldr	r0, [r5, sl]
    5f6c:	mov	r1, #4
    5f70:	ldr	r0, [r0, #420]	; 0x1a4
    5f74:	bl	0 <coda_type_set_read_type>
    5f78:	ldr	r0, [r5, sl]
    5f7c:	mov	r2, #32
    5f80:	mov	r3, #0
    5f84:	ldr	r0, [r0, #420]	; 0x1a4
    5f88:	bl	0 <coda_type_set_bit_size>
    5f8c:	ldr	r0, [r5, sl]
    5f90:	movw	r1, #0
    5f94:	movt	r1, #0
    5f98:	ldr	r0, [r0, #420]	; 0x1a4
    5f9c:	bl	0 <coda_type_set_description>
    5fa0:	mov	r0, #7
    5fa4:	mov	r1, #2
    5fa8:	bl	0 <coda_type_number_new>
    5fac:	ldr	r1, [r5, sl]
    5fb0:	str	r0, [r1, #424]	; 0x1a8
    5fb4:	mov	r1, #1
    5fb8:	bl	0 <coda_type_number_set_endianness>
    5fbc:	ldr	r0, [r5, sl]
    5fc0:	mov	r1, #5
    5fc4:	ldr	r0, [r0, #424]	; 0x1a8
    5fc8:	bl	0 <coda_type_set_read_type>
    5fcc:	ldr	r0, [r5, sl]
    5fd0:	mov	r2, #32
    5fd4:	mov	r3, #0
    5fd8:	ldr	r0, [r0, #424]	; 0x1a8
    5fdc:	bl	0 <coda_type_set_bit_size>
    5fe0:	ldr	r0, [r5, sl]
    5fe4:	movw	r1, #0
    5fe8:	movt	r1, #0
    5fec:	ldr	r0, [r0, #424]	; 0x1a8
    5ff0:	bl	0 <coda_type_set_description>
    5ff4:	mov	r0, #7
    5ff8:	mov	r1, #2
    5ffc:	bl	0 <coda_type_number_new>
    6000:	ldr	r1, [r5, sl]
    6004:	str	r0, [r1, #428]	; 0x1ac
    6008:	mov	r1, #1
    600c:	bl	0 <coda_type_number_set_endianness>
    6010:	ldr	r0, [r5, sl]
    6014:	mov	r1, #5
    6018:	ldr	r0, [r0, #428]	; 0x1ac
    601c:	bl	0 <coda_type_set_read_type>
    6020:	ldr	r0, [r5, sl]
    6024:	mov	r2, #32
    6028:	mov	r3, #0
    602c:	ldr	r0, [r0, #428]	; 0x1ac
    6030:	bl	0 <coda_type_set_bit_size>
    6034:	ldr	r0, [r5, sl]
    6038:	movw	r1, #0
    603c:	movt	r1, #0
    6040:	ldr	r0, [r0, #428]	; 0x1ac
    6044:	bl	0 <coda_type_set_description>
    6048:	mov	r0, #7
    604c:	mov	r1, #2
    6050:	bl	0 <coda_type_number_new>
    6054:	ldr	r1, [r5, sl]
    6058:	str	r0, [r1, #432]	; 0x1b0
    605c:	mov	r1, #1
    6060:	bl	0 <coda_type_number_set_endianness>
    6064:	ldr	r0, [r5, sl]
    6068:	mov	r1, #5
    606c:	ldr	r0, [r0, #432]	; 0x1b0
    6070:	bl	0 <coda_type_set_read_type>
    6074:	ldr	r0, [r5, sl]
    6078:	mov	r2, #32
    607c:	mov	r3, #0
    6080:	ldr	r0, [r0, #432]	; 0x1b0
    6084:	bl	0 <coda_type_set_bit_size>
    6088:	ldr	r0, [r5, sl]
    608c:	movw	r1, #0
    6090:	movt	r1, #0
    6094:	ldr	r0, [r0, #432]	; 0x1b0
    6098:	bl	0 <coda_type_set_description>
    609c:	mov	r0, #7
    60a0:	mov	r1, #2
    60a4:	bl	0 <coda_type_number_new>
    60a8:	ldr	r1, [r5, sl]
    60ac:	str	r0, [r1, #436]	; 0x1b4
    60b0:	mov	r1, #1
    60b4:	bl	0 <coda_type_number_set_endianness>
    60b8:	ldr	r0, [r5, sl]
    60bc:	mov	r1, #1
    60c0:	ldr	r0, [r0, #436]	; 0x1b4
    60c4:	bl	0 <coda_type_set_read_type>
    60c8:	ldr	r0, [r5, sl]
    60cc:	mov	r2, #8
    60d0:	mov	r3, #0
    60d4:	ldr	r0, [r0, #436]	; 0x1b4
    60d8:	bl	0 <coda_type_set_bit_size>
    60dc:	ldr	r0, [r5, sl]
    60e0:	movw	r1, #0
    60e4:	movt	r1, #0
    60e8:	ldr	r0, [r0, #436]	; 0x1b4
    60ec:	bl	0 <coda_type_set_description>
    60f0:	mov	r0, #7
    60f4:	mov	r1, #2
    60f8:	bl	0 <coda_type_number_new>
    60fc:	ldr	r1, [r5, sl]
    6100:	str	r0, [r1, #440]	; 0x1b8
    6104:	mov	r1, #1
    6108:	bl	0 <coda_type_number_set_endianness>
    610c:	ldr	r0, [r5, sl]
    6110:	mov	r1, #5
    6114:	ldr	r0, [r0, #440]	; 0x1b8
    6118:	bl	0 <coda_type_set_read_type>
    611c:	ldr	r0, [r5, sl]
    6120:	mov	r2, #32
    6124:	mov	r3, #0
    6128:	ldr	r0, [r0, #440]	; 0x1b8
    612c:	bl	0 <coda_type_set_bit_size>
    6130:	mov	r0, #7
    6134:	bl	0 <coda_type_array_new>
    6138:	ldr	r1, [r5, sl]
    613c:	str	r0, [r1, #444]	; 0x1bc
    6140:	movw	r1, #0
    6144:	movt	r1, #0
    6148:	bl	0 <coda_type_set_description>
    614c:	ldr	r0, [r5, sl]
    6150:	ldr	r1, [r0, #440]	; 0x1b8
    6154:	ldr	r0, [r0, #444]	; 0x1bc
    6158:	bl	0 <coda_type_array_set_base_type>
    615c:	ldr	r0, [r5, sl]
    6160:	mov	r1, #0
    6164:	ldr	r0, [r0, #444]	; 0x1bc
    6168:	bl	0 <coda_type_array_add_variable_dimension>
    616c:	mov	r0, #7
    6170:	mov	r1, #2
    6174:	bl	0 <coda_type_number_new>
    6178:	ldr	r1, [r5, sl]
    617c:	str	r0, [r1, #448]	; 0x1c0
    6180:	mov	r1, #1
    6184:	bl	0 <coda_type_number_set_endianness>
    6188:	ldr	r0, [r5, sl]
    618c:	mov	r1, #1
    6190:	ldr	r0, [r0, #448]	; 0x1c0
    6194:	bl	0 <coda_type_set_read_type>
    6198:	ldr	r0, [r5, sl]
    619c:	mov	r2, #8
    61a0:	mov	r3, #0
    61a4:	ldr	r0, [r0, #448]	; 0x1c0
    61a8:	bl	0 <coda_type_set_bit_size>
    61ac:	ldr	r0, [r5, sl]
    61b0:	mov	r1, r9
    61b4:	ldr	r0, [r0, #448]	; 0x1c0
    61b8:	bl	0 <coda_type_set_description>
    61bc:	mov	r0, #7
    61c0:	mov	r1, #2
    61c4:	bl	0 <coda_type_number_new>
    61c8:	ldr	r1, [r5, sl]
    61cc:	str	r0, [r1, #452]	; 0x1c4
    61d0:	mov	r1, #1
    61d4:	bl	0 <coda_type_number_set_endianness>
    61d8:	ldr	r0, [r5, sl]
    61dc:	mov	r1, #5
    61e0:	ldr	r0, [r0, #452]	; 0x1c4
    61e4:	bl	0 <coda_type_set_read_type>
    61e8:	ldr	r0, [r5, sl]
    61ec:	mov	r2, #32
    61f0:	mov	r3, #0
    61f4:	ldr	r0, [r0, #452]	; 0x1c4
    61f8:	bl	0 <coda_type_set_bit_size>
    61fc:	ldr	r0, [r5, sl]
    6200:	mov	r1, r6
    6204:	ldr	r0, [r0, #452]	; 0x1c4
    6208:	bl	0 <coda_type_set_description>
    620c:	mov	r0, #7
    6210:	mov	r1, #2
    6214:	bl	0 <coda_type_number_new>
    6218:	ldr	r1, [r5, sl]
    621c:	str	r0, [r1, #456]	; 0x1c8
    6220:	mov	r1, #1
    6224:	bl	0 <coda_type_number_set_endianness>
    6228:	ldr	r0, [r5, sl]
    622c:	mov	r1, #1
    6230:	ldr	r0, [r0, #456]	; 0x1c8
    6234:	bl	0 <coda_type_set_read_type>
    6238:	ldr	r0, [r5, sl]
    623c:	mov	r2, #8
    6240:	mov	r3, #0
    6244:	ldr	r0, [r0, #456]	; 0x1c8
    6248:	bl	0 <coda_type_set_bit_size>
    624c:	ldr	r0, [r5, sl]
    6250:	movw	r1, #0
    6254:	movt	r1, #0
    6258:	ldr	r0, [r0, #456]	; 0x1c8
    625c:	bl	0 <coda_type_set_description>
    6260:	mov	r0, #7
    6264:	mov	r1, #2
    6268:	bl	0 <coda_type_number_new>
    626c:	ldr	r1, [r5, sl]
    6270:	str	r0, [r1, #460]	; 0x1cc
    6274:	mov	r1, #1
    6278:	bl	0 <coda_type_number_set_endianness>
    627c:	ldr	r0, [r5, sl]
    6280:	mov	r1, #1
    6284:	ldr	r0, [r0, #460]	; 0x1cc
    6288:	bl	0 <coda_type_set_read_type>
    628c:	ldr	r0, [r5, sl]
    6290:	mov	r2, #8
    6294:	mov	r3, #0
    6298:	ldr	r0, [r0, #460]	; 0x1cc
    629c:	bl	0 <coda_type_set_bit_size>
    62a0:	ldr	r0, [r5, sl]
    62a4:	movw	r1, #0
    62a8:	movt	r1, #0
    62ac:	ldr	r0, [r0, #460]	; 0x1cc
    62b0:	bl	0 <coda_type_set_description>
    62b4:	mov	r0, #7
    62b8:	mov	r1, #2
    62bc:	bl	0 <coda_type_number_new>
    62c0:	ldr	r1, [r5, sl]
    62c4:	str	r0, [r1, #464]	; 0x1d0
    62c8:	mov	r1, #1
    62cc:	bl	0 <coda_type_number_set_endianness>
    62d0:	ldr	r0, [r5, sl]
    62d4:	mov	r1, #1
    62d8:	ldr	r0, [r0, #464]	; 0x1d0
    62dc:	bl	0 <coda_type_set_read_type>
    62e0:	ldr	r0, [r5, sl]
    62e4:	mov	r2, #8
    62e8:	mov	r3, #0
    62ec:	ldr	r0, [r0, #464]	; 0x1d0
    62f0:	bl	0 <coda_type_set_bit_size>
    62f4:	ldr	r0, [r5, sl]
    62f8:	movw	r1, #0
    62fc:	movt	r1, #0
    6300:	ldr	r0, [r0, #464]	; 0x1d0
    6304:	bl	0 <coda_type_set_description>
    6308:	mov	r0, #7
    630c:	mov	r1, #2
    6310:	bl	0 <coda_type_number_new>
    6314:	ldr	r1, [r5, sl]
    6318:	str	r0, [r1, #468]	; 0x1d4
    631c:	mov	r1, #1
    6320:	bl	0 <coda_type_number_set_endianness>
    6324:	ldr	r0, [r5, sl]
    6328:	mov	r1, #1
    632c:	ldr	r0, [r0, #468]	; 0x1d4
    6330:	bl	0 <coda_type_set_read_type>
    6334:	ldr	r0, [r5, sl]
    6338:	mov	r2, #8
    633c:	mov	r3, #0
    6340:	ldr	r0, [r0, #468]	; 0x1d4
    6344:	bl	0 <coda_type_set_bit_size>
    6348:	ldr	r0, [r5, sl]
    634c:	movw	r1, #0
    6350:	movt	r1, #0
    6354:	ldr	r0, [r0, #468]	; 0x1d4
    6358:	bl	0 <coda_type_set_description>
    635c:	mov	r0, #7
    6360:	mov	r1, #2
    6364:	bl	0 <coda_type_number_new>
    6368:	ldr	r1, [r5, sl]
    636c:	str	r0, [r1, #472]	; 0x1d8
    6370:	mov	r1, #1
    6374:	bl	0 <coda_type_number_set_endianness>
    6378:	ldr	r0, [r5, sl]
    637c:	mov	r1, #1
    6380:	ldr	r0, [r0, #472]	; 0x1d8
    6384:	bl	0 <coda_type_set_read_type>
    6388:	ldr	r0, [r5, sl]
    638c:	mov	r2, #8
    6390:	mov	r3, #0
    6394:	ldr	r0, [r0, #472]	; 0x1d8
    6398:	bl	0 <coda_type_set_bit_size>
    639c:	ldr	r0, [r5, sl]
    63a0:	movw	r1, #0
    63a4:	movt	r1, #0
    63a8:	ldr	r0, [r0, #472]	; 0x1d8
    63ac:	bl	0 <coda_type_set_description>
    63b0:	mov	r0, #7
    63b4:	mov	r1, #2
    63b8:	bl	0 <coda_type_number_new>
    63bc:	ldr	r1, [r5, sl]
    63c0:	str	r0, [r1, #476]	; 0x1dc
    63c4:	mov	r1, #1
    63c8:	bl	0 <coda_type_number_set_endianness>
    63cc:	ldr	r0, [r5, sl]
    63d0:	mov	r1, #1
    63d4:	ldr	r0, [r0, #476]	; 0x1dc
    63d8:	bl	0 <coda_type_set_read_type>
    63dc:	ldr	r0, [r5, sl]
    63e0:	mov	r2, #8
    63e4:	mov	r3, #0
    63e8:	ldr	r0, [r0, #476]	; 0x1dc
    63ec:	bl	0 <coda_type_set_bit_size>
    63f0:	ldr	r0, [r5, sl]
    63f4:	movw	r1, #0
    63f8:	movt	r1, #0
    63fc:	ldr	r0, [r0, #476]	; 0x1dc
    6400:	bl	0 <coda_type_set_description>
    6404:	mov	r0, #7
    6408:	mov	r1, #2
    640c:	bl	0 <coda_type_number_new>
    6410:	ldr	r1, [r5, sl]
    6414:	str	r0, [r1, #480]	; 0x1e0
    6418:	mov	r1, #1
    641c:	bl	0 <coda_type_number_set_endianness>
    6420:	ldr	r0, [r5, sl]
    6424:	mov	r1, #3
    6428:	ldr	r0, [r0, #480]	; 0x1e0
    642c:	bl	0 <coda_type_set_read_type>
    6430:	ldr	r0, [r5, sl]
    6434:	mov	r2, #16
    6438:	mov	r3, #0
    643c:	ldr	r0, [r0, #480]	; 0x1e0
    6440:	bl	0 <coda_type_set_bit_size>
    6444:	ldr	r0, [r5, sl]
    6448:	movw	r1, #0
    644c:	movt	r1, #0
    6450:	ldr	r0, [r0, #480]	; 0x1e0
    6454:	bl	0 <coda_type_set_description>
    6458:	mov	r0, #7
    645c:	mov	r1, #2
    6460:	bl	0 <coda_type_number_new>
    6464:	ldr	r1, [r5, sl]
    6468:	str	r0, [r1, #484]	; 0x1e4
    646c:	mov	r1, #1
    6470:	bl	0 <coda_type_number_set_endianness>
    6474:	ldr	r0, [r5, sl]
    6478:	mov	r1, #1
    647c:	ldr	r0, [r0, #484]	; 0x1e4
    6480:	bl	0 <coda_type_set_read_type>
    6484:	ldr	r0, [r5, sl]
    6488:	mov	r2, #8
    648c:	mov	r3, #0
    6490:	ldr	r0, [r0, #484]	; 0x1e4
    6494:	bl	0 <coda_type_set_bit_size>
    6498:	ldr	r0, [r5, sl]
    649c:	movw	r1, #0
    64a0:	movt	r1, #0
    64a4:	ldr	r0, [r0, #484]	; 0x1e4
    64a8:	bl	0 <coda_type_set_description>
    64ac:	mov	r0, #7
    64b0:	mov	r1, #2
    64b4:	bl	0 <coda_type_number_new>
    64b8:	ldr	r1, [r5, sl]
    64bc:	str	r0, [r1, #488]	; 0x1e8
    64c0:	mov	r1, #1
    64c4:	bl	0 <coda_type_number_set_endianness>
    64c8:	ldr	r0, [r5, sl]
    64cc:	mov	r1, #1
    64d0:	ldr	r0, [r0, #488]	; 0x1e8
    64d4:	bl	0 <coda_type_set_read_type>
    64d8:	ldr	r0, [r5, sl]
    64dc:	mov	r2, #8
    64e0:	mov	r3, #0
    64e4:	ldr	r0, [r0, #488]	; 0x1e8
    64e8:	bl	0 <coda_type_set_bit_size>
    64ec:	ldr	r0, [r5, sl]
    64f0:	movw	r1, #0
    64f4:	movt	r1, #0
    64f8:	ldr	r0, [r0, #488]	; 0x1e8
    64fc:	bl	0 <coda_type_set_description>
    6500:	mov	r0, #7
    6504:	mov	r1, #2
    6508:	bl	0 <coda_type_number_new>
    650c:	ldr	r1, [r5, sl]
    6510:	str	r0, [r1, #492]	; 0x1ec
    6514:	mov	r1, #1
    6518:	bl	0 <coda_type_number_set_endianness>
    651c:	ldr	r0, [r5, sl]
    6520:	mov	r1, #5
    6524:	ldr	r0, [r0, #492]	; 0x1ec
    6528:	bl	0 <coda_type_set_read_type>
    652c:	ldr	r0, [r5, sl]
    6530:	mov	r2, #32
    6534:	mov	r3, #0
    6538:	ldr	r0, [r0, #492]	; 0x1ec
    653c:	bl	0 <coda_type_set_bit_size>
    6540:	ldr	r0, [r5, sl]
    6544:	movw	r1, #0
    6548:	movt	r1, #0
    654c:	ldr	r0, [r0, #492]	; 0x1ec
    6550:	bl	0 <coda_type_set_description>
    6554:	mov	r0, #7
    6558:	mov	r1, #2
    655c:	bl	0 <coda_type_number_new>
    6560:	ldr	r1, [r5, sl]
    6564:	str	r0, [r1, #496]	; 0x1f0
    6568:	mov	r1, #1
    656c:	bl	0 <coda_type_number_set_endianness>
    6570:	ldr	r0, [r5, sl]
    6574:	mov	r1, #1
    6578:	ldr	r0, [r0, #496]	; 0x1f0
    657c:	bl	0 <coda_type_set_read_type>
    6580:	ldr	r0, [r5, sl]
    6584:	mov	r2, #8
    6588:	mov	r3, #0
    658c:	ldr	r0, [r0, #496]	; 0x1f0
    6590:	bl	0 <coda_type_set_bit_size>
    6594:	ldr	r0, [r5, sl]
    6598:	movw	r1, #0
    659c:	movt	r1, #0
    65a0:	ldr	r0, [r0, #496]	; 0x1f0
    65a4:	bl	0 <coda_type_set_description>
    65a8:	mov	r0, #7
    65ac:	mov	r1, #3
    65b0:	bl	0 <coda_type_number_new>
    65b4:	ldr	r1, [r5, sl]
    65b8:	str	r0, [r1, #500]	; 0x1f4
    65bc:	mov	r1, #1
    65c0:	bl	0 <coda_type_number_set_endianness>
    65c4:	ldr	r0, [r5, sl]
    65c8:	mov	r1, #9
    65cc:	ldr	r0, [r0, #500]	; 0x1f4
    65d0:	bl	0 <coda_type_set_read_type>
    65d4:	ldr	r0, [r5, sl]
    65d8:	mov	r2, #64	; 0x40
    65dc:	mov	r3, #0
    65e0:	ldr	r0, [r0, #500]	; 0x1f4
    65e4:	bl	0 <coda_type_set_bit_size>
    65e8:	ldr	r0, [r5, sl]
    65ec:	movw	r1, #0
    65f0:	movt	r1, #0
    65f4:	ldr	r0, [r0, #500]	; 0x1f4
    65f8:	bl	0 <coda_type_set_description>
    65fc:	mov	r0, #7
    6600:	mov	r1, #2
    6604:	bl	0 <coda_type_number_new>
    6608:	ldr	r1, [r5, sl]
    660c:	str	r0, [r1, #504]	; 0x1f8
    6610:	mov	r1, #1
    6614:	bl	0 <coda_type_number_set_endianness>
    6618:	ldr	r0, [r5, sl]
    661c:	mov	r1, #1
    6620:	ldr	r0, [r0, #504]	; 0x1f8
    6624:	bl	0 <coda_type_set_read_type>
    6628:	ldr	r0, [r5, sl]
    662c:	mov	r2, #8
    6630:	mov	r3, #0
    6634:	ldr	r0, [r0, #504]	; 0x1f8
    6638:	bl	0 <coda_type_set_bit_size>
    663c:	ldr	r0, [r5, sl]
    6640:	movw	r1, #0
    6644:	movt	r1, #0
    6648:	ldr	r0, [r0, #504]	; 0x1f8
    664c:	bl	0 <coda_type_set_description>
    6650:	mov	r0, #7
    6654:	mov	r1, #3
    6658:	bl	0 <coda_type_number_new>
    665c:	ldr	r1, [r5, sl]
    6660:	str	r0, [r1, #508]	; 0x1fc
    6664:	mov	r1, #1
    6668:	bl	0 <coda_type_number_set_endianness>
    666c:	ldr	r0, [r5, sl]
    6670:	mov	r1, #9
    6674:	ldr	r0, [r0, #508]	; 0x1fc
    6678:	bl	0 <coda_type_set_read_type>
    667c:	ldr	r0, [r5, sl]
    6680:	mov	r2, #64	; 0x40
    6684:	mov	r3, #0
    6688:	ldr	r0, [r0, #508]	; 0x1fc
    668c:	bl	0 <coda_type_set_bit_size>
    6690:	ldr	r0, [r5, sl]
    6694:	movw	r1, #0
    6698:	movt	r1, #0
    669c:	ldr	r0, [r0, #508]	; 0x1fc
    66a0:	bl	0 <coda_type_set_description>
    66a4:	mov	r0, #7
    66a8:	mov	r1, #3
    66ac:	bl	0 <coda_type_number_new>
    66b0:	ldr	r1, [r5, sl]
    66b4:	str	r0, [r1, #512]	; 0x200
    66b8:	mov	r1, #1
    66bc:	bl	0 <coda_type_number_set_endianness>
    66c0:	ldr	r0, [r5, sl]
    66c4:	mov	r1, #8
    66c8:	ldr	r0, [r0, #512]	; 0x200
    66cc:	bl	0 <coda_type_set_read_type>
    66d0:	ldr	r0, [r5, sl]
    66d4:	mov	r2, #32
    66d8:	mov	r3, #0
    66dc:	ldr	r0, [r0, #512]	; 0x200
    66e0:	bl	0 <coda_type_set_bit_size>
    66e4:	mov	r0, #7
    66e8:	bl	0 <coda_type_array_new>
    66ec:	ldr	r1, [r5, sl]
    66f0:	str	r0, [r1, #516]	; 0x204
    66f4:	movw	r1, #0
    66f8:	movt	r1, #0
    66fc:	bl	0 <coda_type_set_description>
    6700:	ldr	r0, [r5, sl]
    6704:	ldr	r1, [r0, #512]	; 0x200
    6708:	ldr	r0, [r0, #516]	; 0x204
    670c:	bl	0 <coda_type_array_set_base_type>
    6710:	ldr	r0, [r5, sl]
    6714:	mov	r1, #0
    6718:	ldr	r0, [r0, #516]	; 0x204
    671c:	bl	0 <coda_type_array_add_variable_dimension>
    6720:	mov	r0, #7
    6724:	mov	r1, #2
    6728:	bl	0 <coda_type_number_new>
    672c:	ldr	r1, [r5, sl]
    6730:	str	r0, [r1, #520]	; 0x208
    6734:	mov	r1, #1
    6738:	bl	0 <coda_type_number_set_endianness>
    673c:	ldr	r0, [r5, sl]
    6740:	mov	r1, #3
    6744:	ldr	r0, [r0, #520]	; 0x208
    6748:	bl	0 <coda_type_set_read_type>
    674c:	ldr	r0, [r5, sl]
    6750:	mov	r2, #16
    6754:	mov	r3, #0
    6758:	ldr	r0, [r0, #520]	; 0x208
    675c:	bl	0 <coda_type_set_bit_size>
    6760:	ldr	r0, [r5, sl]
    6764:	movw	r1, #0
    6768:	movt	r1, #0
    676c:	ldr	r0, [r0, #520]	; 0x208
    6770:	bl	0 <coda_type_set_description>
    6774:	mov	r0, #7
    6778:	mov	r1, #2
    677c:	bl	0 <coda_type_number_new>
    6780:	ldr	r1, [r5, sl]
    6784:	str	r0, [r1, #524]	; 0x20c
    6788:	mov	r1, #1
    678c:	bl	0 <coda_type_number_set_endianness>
    6790:	ldr	r0, [r5, sl]
    6794:	mov	r1, #1
    6798:	ldr	r0, [r0, #524]	; 0x20c
    679c:	bl	0 <coda_type_set_read_type>
    67a0:	ldr	r0, [r5, sl]
    67a4:	mov	r2, #8
    67a8:	mov	r3, #0
    67ac:	ldr	r0, [r0, #524]	; 0x20c
    67b0:	bl	0 <coda_type_set_bit_size>
    67b4:	ldr	r0, [r5, sl]
    67b8:	movw	r1, #0
    67bc:	movt	r1, #0
    67c0:	ldr	r0, [r0, #524]	; 0x20c
    67c4:	bl	0 <coda_type_set_description>
    67c8:	mov	r0, #7
    67cc:	mov	r1, #2
    67d0:	bl	0 <coda_type_number_new>
    67d4:	ldr	r1, [r5, sl]
    67d8:	str	r0, [r1, #528]	; 0x210
    67dc:	mov	r1, #1
    67e0:	bl	0 <coda_type_number_set_endianness>
    67e4:	ldr	r0, [r5, sl]
    67e8:	mov	r1, #2
    67ec:	ldr	r0, [r0, #528]	; 0x210
    67f0:	bl	0 <coda_type_set_read_type>
    67f4:	ldr	r0, [r5, sl]
    67f8:	mov	r2, #16
    67fc:	mov	r3, #0
    6800:	ldr	r0, [r0, #528]	; 0x210
    6804:	bl	0 <coda_type_set_bit_size>
    6808:	ldr	r0, [r5, sl]
    680c:	movw	r1, #0
    6810:	movt	r1, #0
    6814:	ldr	r0, [r0, #528]	; 0x210
    6818:	bl	0 <coda_type_set_description>
    681c:	mov	r0, #7
    6820:	mov	r1, #3
    6824:	bl	0 <coda_type_number_new>
    6828:	ldr	r1, [r5, sl]
    682c:	str	r0, [r1, #532]	; 0x214
    6830:	mov	r1, #1
    6834:	bl	0 <coda_type_number_set_endianness>
    6838:	ldr	r0, [r5, sl]
    683c:	mov	r1, #8
    6840:	ldr	r0, [r0, #532]	; 0x214
    6844:	bl	0 <coda_type_set_read_type>
    6848:	ldr	r0, [r5, sl]
    684c:	mov	r2, #32
    6850:	mov	r3, #0
    6854:	ldr	r0, [r0, #532]	; 0x214
    6858:	bl	0 <coda_type_set_bit_size>
    685c:	ldr	r0, [r5, sl]
    6860:	movw	r1, #0
    6864:	movt	r1, #0
    6868:	ldr	r0, [r0, #532]	; 0x214
    686c:	bl	0 <coda_type_set_description>
    6870:	mov	r0, #7
    6874:	bl	0 <coda_type_array_new>
    6878:	ldr	r1, [r5, sl]
    687c:	str	r0, [r1, #536]	; 0x218
    6880:	mov	r0, #7
    6884:	mov	r1, #3
    6888:	bl	0 <coda_type_number_new>
    688c:	mov	r1, #1
    6890:	mov	r6, r0
    6894:	bl	0 <coda_type_number_set_endianness>
    6898:	mov	r0, r6
    689c:	mov	r1, #8
    68a0:	bl	0 <coda_type_set_read_type>
    68a4:	mov	r0, r6
    68a8:	mov	r2, #32
    68ac:	mov	r3, #0
    68b0:	bl	0 <coda_type_set_bit_size>
    68b4:	ldr	r0, [r5, sl]
    68b8:	mov	r1, r6
    68bc:	ldr	r0, [r0, #536]	; 0x218
    68c0:	bl	0 <coda_type_array_set_base_type>
    68c4:	mov	r0, r6
    68c8:	bl	0 <coda_type_release>
    68cc:	ldr	r0, [r5, sl]
    68d0:	mov	r1, #0
    68d4:	ldr	r0, [r0, #536]	; 0x218
    68d8:	bl	0 <coda_type_array_add_variable_dimension>
    68dc:	mov	r0, #7
    68e0:	bl	0 <coda_type_record_new>
    68e4:	ldr	r1, [r5, sl]
    68e8:	str	r0, [r1, #540]	; 0x21c
    68ec:	movw	r0, #0
    68f0:	movt	r0, #0
    68f4:	bl	0 <coda_type_record_field_new>
    68f8:	mov	r6, r0
    68fc:	ldr	r0, [r5, sl]
    6900:	ldr	r1, [r0, #276]	; 0x114
    6904:	mov	r0, r6
    6908:	bl	0 <coda_type_record_field_set_type>
    690c:	ldr	r0, [r5, sl]
    6910:	mov	r1, r6
    6914:	ldr	r0, [r0, #540]	; 0x21c
    6918:	bl	0 <coda_type_record_add_field>
    691c:	movw	r0, #0
    6920:	movt	r0, #0
    6924:	bl	0 <coda_type_record_field_new>
    6928:	mov	r6, r0
    692c:	ldr	r0, [r5, sl]
    6930:	ldr	r1, [r0, #448]	; 0x1c0
    6934:	mov	r0, r6
    6938:	bl	0 <coda_type_record_field_set_type>
    693c:	ldr	r0, [r5, sl]
    6940:	mov	r1, r6
    6944:	ldr	r0, [r0, #540]	; 0x21c
    6948:	bl	0 <coda_type_record_add_field>
    694c:	movw	r0, #0
    6950:	movt	r0, #0
    6954:	bl	0 <coda_type_record_field_new>
    6958:	mov	r6, r0
    695c:	ldr	r0, [r5, sl]
    6960:	ldr	r1, [r0, #452]	; 0x1c4
    6964:	mov	r0, r6
    6968:	bl	0 <coda_type_record_field_set_type>
    696c:	ldr	r0, [r5, sl]
    6970:	mov	r1, r6
    6974:	ldr	r0, [r0, #540]	; 0x21c
    6978:	bl	0 <coda_type_record_add_field>
    697c:	movw	r0, #0
    6980:	movt	r0, #0
    6984:	bl	0 <coda_type_record_field_new>
    6988:	mov	r6, r0
    698c:	ldr	r0, [r5, sl]
    6990:	ldr	r1, [r0, #456]	; 0x1c8
    6994:	mov	r0, r6
    6998:	bl	0 <coda_type_record_field_set_type>
    699c:	ldr	r0, [r5, sl]
    69a0:	mov	r1, r6
    69a4:	ldr	r0, [r0, #540]	; 0x21c
    69a8:	bl	0 <coda_type_record_add_field>
    69ac:	movw	r0, #0
    69b0:	movt	r0, #0
    69b4:	bl	0 <coda_type_record_field_new>
    69b8:	mov	r6, r0
    69bc:	ldr	r0, [r5, sl]
    69c0:	ldr	r1, [r0, #520]	; 0x208
    69c4:	mov	r0, r6
    69c8:	bl	0 <coda_type_record_field_set_type>
    69cc:	ldr	r0, [r5, sl]
    69d0:	mov	r1, r6
    69d4:	ldr	r0, [r0, #540]	; 0x21c
    69d8:	bl	0 <coda_type_record_add_field>
    69dc:	movw	r0, #0
    69e0:	movt	r0, #0
    69e4:	bl	0 <coda_type_record_field_new>
    69e8:	mov	r6, r0
    69ec:	ldr	r0, [r5, sl]
    69f0:	ldr	r1, [r0, #360]	; 0x168
    69f4:	mov	r0, r6
    69f8:	bl	0 <coda_type_record_field_set_type>
    69fc:	ldr	r0, [r5, sl]
    6a00:	mov	r1, r6
    6a04:	ldr	r0, [r0, #540]	; 0x21c
    6a08:	bl	0 <coda_type_record_add_field>
    6a0c:	movw	r0, #0
    6a10:	movt	r0, #0
    6a14:	bl	0 <coda_type_record_field_new>
    6a18:	mov	r6, r0
    6a1c:	ldr	r0, [r5, sl]
    6a20:	ldr	r1, [r0, #364]	; 0x16c
    6a24:	mov	r0, r6
    6a28:	bl	0 <coda_type_record_field_set_type>
    6a2c:	ldr	r0, [r5, sl]
    6a30:	mov	r1, r6
    6a34:	ldr	r0, [r0, #540]	; 0x21c
    6a38:	bl	0 <coda_type_record_add_field>
    6a3c:	movw	r0, #0
    6a40:	movt	r0, #0
    6a44:	bl	0 <coda_type_record_field_new>
    6a48:	mov	r6, r0
    6a4c:	ldr	r0, [r5, sl]
    6a50:	ldr	r1, [r0, #368]	; 0x170
    6a54:	mov	r0, r6
    6a58:	bl	0 <coda_type_record_field_set_type>
    6a5c:	ldr	r0, [r5, sl]
    6a60:	mov	r1, r6
    6a64:	ldr	r0, [r0, #540]	; 0x21c
    6a68:	bl	0 <coda_type_record_add_field>
    6a6c:	movw	r0, #0
    6a70:	movt	r0, #0
    6a74:	bl	0 <coda_type_record_field_new>
    6a78:	mov	r6, r0
    6a7c:	ldr	r0, [r5, sl]
    6a80:	ldr	r1, [r0, #372]	; 0x174
    6a84:	mov	r0, r6
    6a88:	bl	0 <coda_type_record_field_set_type>
    6a8c:	ldr	r0, [r5, sl]
    6a90:	mov	r1, r6
    6a94:	ldr	r0, [r0, #540]	; 0x21c
    6a98:	bl	0 <coda_type_record_add_field>
    6a9c:	movw	r0, #0
    6aa0:	movt	r0, #0
    6aa4:	bl	0 <coda_type_record_field_new>
    6aa8:	mov	r6, r0
    6aac:	ldr	r0, [r5, sl]
    6ab0:	ldr	r1, [r0, #376]	; 0x178
    6ab4:	mov	r0, r6
    6ab8:	bl	0 <coda_type_record_field_set_type>
    6abc:	ldr	r0, [r5, sl]
    6ac0:	mov	r1, r6
    6ac4:	ldr	r0, [r0, #540]	; 0x21c
    6ac8:	bl	0 <coda_type_record_add_field>
    6acc:	movw	r0, #0
    6ad0:	movt	r0, #0
    6ad4:	bl	0 <coda_type_record_field_new>
    6ad8:	mov	r6, r0
    6adc:	ldr	r0, [r5, sl]
    6ae0:	ldr	r1, [r0, #380]	; 0x17c
    6ae4:	mov	r0, r6
    6ae8:	bl	0 <coda_type_record_field_set_type>
    6aec:	ldr	r0, [r5, sl]
    6af0:	mov	r1, r6
    6af4:	ldr	r0, [r0, #540]	; 0x21c
    6af8:	bl	0 <coda_type_record_add_field>
    6afc:	movw	r0, #0
    6b00:	movt	r0, #0
    6b04:	bl	0 <coda_type_record_field_new>
    6b08:	mov	r6, r0
    6b0c:	ldr	r0, [r5, sl]
    6b10:	ldr	r1, [r0, #384]	; 0x180
    6b14:	mov	r0, r6
    6b18:	bl	0 <coda_type_record_field_set_type>
    6b1c:	ldr	r0, [r5, sl]
    6b20:	mov	r1, r6
    6b24:	ldr	r0, [r0, #540]	; 0x21c
    6b28:	bl	0 <coda_type_record_add_field>
    6b2c:	movw	r0, #0
    6b30:	movt	r0, #0
    6b34:	bl	0 <coda_type_record_field_new>
    6b38:	mov	r6, r0
    6b3c:	ldr	r0, [r5, sl]
    6b40:	ldr	r1, [r0, #388]	; 0x184
    6b44:	mov	r0, r6
    6b48:	bl	0 <coda_type_record_field_set_type>
    6b4c:	ldr	r0, [r5, sl]
    6b50:	mov	r1, r6
    6b54:	ldr	r0, [r0, #540]	; 0x21c
    6b58:	bl	0 <coda_type_record_add_field>
    6b5c:	movw	r0, #0
    6b60:	movt	r0, #0
    6b64:	bl	0 <coda_type_record_field_new>
    6b68:	mov	r6, r0
    6b6c:	ldr	r0, [r5, sl]
    6b70:	ldr	r1, [r0, #392]	; 0x188
    6b74:	mov	r0, r6
    6b78:	bl	0 <coda_type_record_field_set_type>
    6b7c:	ldr	r0, [r5, sl]
    6b80:	mov	r1, r6
    6b84:	ldr	r0, [r0, #540]	; 0x21c
    6b88:	bl	0 <coda_type_record_add_field>
    6b8c:	movw	r0, #0
    6b90:	movt	r0, #0
    6b94:	bl	0 <coda_type_record_field_new>
    6b98:	mov	r6, r0
    6b9c:	ldr	r0, [r5, sl]
    6ba0:	ldr	r1, [r0, #396]	; 0x18c
    6ba4:	mov	r0, r6
    6ba8:	bl	0 <coda_type_record_field_set_type>
    6bac:	ldr	r0, [r5, sl]
    6bb0:	mov	r1, r6
    6bb4:	ldr	r0, [r0, #540]	; 0x21c
    6bb8:	bl	0 <coda_type_record_add_field>
    6bbc:	movw	r0, #0
    6bc0:	movt	r0, #0
    6bc4:	bl	0 <coda_type_record_field_new>
    6bc8:	mov	r6, r0
    6bcc:	ldr	r0, [r5, sl]
    6bd0:	ldr	r1, [r0, #400]	; 0x190
    6bd4:	mov	r0, r6
    6bd8:	bl	0 <coda_type_record_field_set_type>
    6bdc:	ldr	r0, [r5, sl]
    6be0:	mov	r1, r6
    6be4:	ldr	r0, [r0, #540]	; 0x21c
    6be8:	bl	0 <coda_type_record_add_field>
    6bec:	movw	r0, #0
    6bf0:	movt	r0, #0
    6bf4:	bl	0 <coda_type_record_field_new>
    6bf8:	mov	r6, r0
    6bfc:	ldr	r0, [r5, sl]
    6c00:	ldr	r1, [r0, #404]	; 0x194
    6c04:	mov	r0, r6
    6c08:	bl	0 <coda_type_record_field_set_type>
    6c0c:	ldr	r0, [r5, sl]
    6c10:	mov	r1, r6
    6c14:	ldr	r0, [r0, #540]	; 0x21c
    6c18:	bl	0 <coda_type_record_add_field>
    6c1c:	movw	r0, #0
    6c20:	movt	r0, #0
    6c24:	bl	0 <coda_type_record_field_new>
    6c28:	mov	r6, r0
    6c2c:	ldr	r0, [r5, sl]
    6c30:	ldr	r1, [r0, #408]	; 0x198
    6c34:	mov	r0, r6
    6c38:	bl	0 <coda_type_record_field_set_type>
    6c3c:	ldr	r0, [r5, sl]
    6c40:	mov	r1, r6
    6c44:	ldr	r0, [r0, #540]	; 0x21c
    6c48:	bl	0 <coda_type_record_add_field>
    6c4c:	movw	r0, #0
    6c50:	movt	r0, #0
    6c54:	bl	0 <coda_type_record_field_new>
    6c58:	mov	r6, r0
    6c5c:	ldr	r0, [r5, sl]
    6c60:	ldr	r1, [r0, #412]	; 0x19c
    6c64:	mov	r0, r6
    6c68:	bl	0 <coda_type_record_field_set_type>
    6c6c:	ldr	r0, [r5, sl]
    6c70:	mov	r1, r6
    6c74:	ldr	r0, [r0, #540]	; 0x21c
    6c78:	bl	0 <coda_type_record_add_field>
    6c7c:	movw	r0, #0
    6c80:	movt	r0, #0
    6c84:	bl	0 <coda_type_record_field_new>
    6c88:	mov	r6, r0
    6c8c:	ldr	r0, [r5, sl]
    6c90:	ldr	r1, [r0, #416]	; 0x1a0
    6c94:	mov	r0, r6
    6c98:	bl	0 <coda_type_record_field_set_type>
    6c9c:	ldr	r0, [r5, sl]
    6ca0:	mov	r1, r6
    6ca4:	ldr	r0, [r0, #540]	; 0x21c
    6ca8:	bl	0 <coda_type_record_add_field>
    6cac:	movw	r0, #0
    6cb0:	movt	r0, #0
    6cb4:	bl	0 <coda_type_record_field_new>
    6cb8:	mov	r6, r0
    6cbc:	ldr	r0, [r5, sl]
    6cc0:	ldr	r1, [r0, #420]	; 0x1a4
    6cc4:	mov	r0, r6
    6cc8:	bl	0 <coda_type_record_field_set_type>
    6ccc:	ldr	r0, [r5, sl]
    6cd0:	mov	r1, r6
    6cd4:	ldr	r0, [r0, #540]	; 0x21c
    6cd8:	bl	0 <coda_type_record_add_field>
    6cdc:	movw	r0, #0
    6ce0:	movt	r0, #0
    6ce4:	bl	0 <coda_type_record_field_new>
    6ce8:	mov	r6, r0
    6cec:	ldr	r0, [r5, sl]
    6cf0:	ldr	r1, [r0, #424]	; 0x1a8
    6cf4:	mov	r0, r6
    6cf8:	bl	0 <coda_type_record_field_set_type>
    6cfc:	ldr	r0, [r5, sl]
    6d00:	mov	r1, r6
    6d04:	ldr	r0, [r0, #540]	; 0x21c
    6d08:	bl	0 <coda_type_record_add_field>
    6d0c:	movw	r0, #0
    6d10:	movt	r0, #0
    6d14:	bl	0 <coda_type_record_field_new>
    6d18:	mov	r6, r0
    6d1c:	ldr	r0, [r5, sl]
    6d20:	ldr	r1, [r0, #428]	; 0x1ac
    6d24:	mov	r0, r6
    6d28:	bl	0 <coda_type_record_field_set_type>
    6d2c:	mov	r0, r6
    6d30:	bl	0 <coda_type_record_field_set_optional>
    6d34:	ldr	r0, [r5, sl]
    6d38:	mov	r1, r6
    6d3c:	ldr	r0, [r0, #540]	; 0x21c
    6d40:	bl	0 <coda_type_record_add_field>
    6d44:	movw	r0, #0
    6d48:	movt	r0, #0
    6d4c:	bl	0 <coda_type_record_field_new>
    6d50:	mov	r6, r0
    6d54:	ldr	r0, [r5, sl]
    6d58:	ldr	r1, [r0, #432]	; 0x1b0
    6d5c:	mov	r0, r6
    6d60:	bl	0 <coda_type_record_field_set_type>
    6d64:	mov	r0, r6
    6d68:	bl	0 <coda_type_record_field_set_optional>
    6d6c:	ldr	r0, [r5, sl]
    6d70:	mov	r1, r6
    6d74:	ldr	r0, [r0, #540]	; 0x21c
    6d78:	bl	0 <coda_type_record_add_field>
    6d7c:	movw	r0, #0
    6d80:	movt	r0, #0
    6d84:	bl	0 <coda_type_record_field_new>
    6d88:	mov	r6, r0
    6d8c:	ldr	r0, [r5, sl]
    6d90:	ldr	r1, [r0, #436]	; 0x1b4
    6d94:	mov	r0, r6
    6d98:	bl	0 <coda_type_record_field_set_type>
    6d9c:	ldr	r0, [r5, sl]
    6da0:	mov	r1, r6
    6da4:	ldr	r0, [r0, #540]	; 0x21c
    6da8:	bl	0 <coda_type_record_add_field>
    6dac:	movw	r0, #0
    6db0:	movt	r0, #0
    6db4:	bl	0 <coda_type_record_field_new>
    6db8:	mov	r6, r0
    6dbc:	ldr	r0, [r5, sl]
    6dc0:	ldr	r1, [r0, #444]	; 0x1bc
    6dc4:	mov	r0, r6
    6dc8:	bl	0 <coda_type_record_field_set_type>
    6dcc:	mov	r0, r6
    6dd0:	bl	0 <coda_type_record_field_set_optional>
    6dd4:	ldr	r0, [r5, sl]
    6dd8:	mov	r1, r6
    6ddc:	ldr	r0, [r0, #540]	; 0x21c
    6de0:	bl	0 <coda_type_record_add_field>
    6de4:	mov	r0, #7
    6de8:	bl	0 <coda_type_record_new>
    6dec:	ldr	r1, [r5, sl]
    6df0:	str	r0, [r1, #544]	; 0x220
    6df4:	movw	r0, #0
    6df8:	movt	r0, #0
    6dfc:	bl	0 <coda_type_record_field_new>
    6e00:	mov	r6, r0
    6e04:	ldr	r0, [r5, sl]
    6e08:	ldr	r1, [r0, #280]	; 0x118
    6e0c:	mov	r0, r6
    6e10:	bl	0 <coda_type_record_field_set_type>
    6e14:	ldr	r0, [r5, sl]
    6e18:	mov	r1, r6
    6e1c:	ldr	r0, [r0, #544]	; 0x220
    6e20:	bl	0 <coda_type_record_add_field>
    6e24:	movw	r0, #0
    6e28:	movt	r0, #0
    6e2c:	bl	0 <coda_type_record_field_new>
    6e30:	mov	r6, r0
    6e34:	ldr	r0, [r5, sl]
    6e38:	ldr	r1, [r0, #460]	; 0x1cc
    6e3c:	mov	r0, r6
    6e40:	bl	0 <coda_type_record_field_set_type>
    6e44:	ldr	r0, [r5, sl]
    6e48:	mov	r1, r6
    6e4c:	ldr	r0, [r0, #544]	; 0x220
    6e50:	bl	0 <coda_type_record_add_field>
    6e54:	movw	r0, #0
    6e58:	movt	r0, #0
    6e5c:	bl	0 <coda_type_record_field_new>
    6e60:	mov	r6, r0
    6e64:	ldr	r0, [r5, sl]
    6e68:	ldr	r1, [r0, #464]	; 0x1d0
    6e6c:	mov	r0, r6
    6e70:	bl	0 <coda_type_record_field_set_type>
    6e74:	ldr	r0, [r5, sl]
    6e78:	mov	r1, r6
    6e7c:	ldr	r0, [r0, #544]	; 0x220
    6e80:	bl	0 <coda_type_record_add_field>
    6e84:	movw	r0, #0
    6e88:	movt	r0, #0
    6e8c:	bl	0 <coda_type_record_field_new>
    6e90:	mov	r6, r0
    6e94:	ldr	r0, [r5, sl]
    6e98:	ldr	r1, [r0, #468]	; 0x1d4
    6e9c:	mov	r0, r6
    6ea0:	bl	0 <coda_type_record_field_set_type>
    6ea4:	ldr	r0, [r5, sl]
    6ea8:	mov	r1, r6
    6eac:	ldr	r0, [r0, #544]	; 0x220
    6eb0:	bl	0 <coda_type_record_add_field>
    6eb4:	movw	r0, #0
    6eb8:	movt	r0, #0
    6ebc:	bl	0 <coda_type_record_field_new>
    6ec0:	mov	r6, r0
    6ec4:	ldr	r0, [r5, sl]
    6ec8:	ldr	r1, [r0, #472]	; 0x1d8
    6ecc:	mov	r0, r6
    6ed0:	bl	0 <coda_type_record_field_set_type>
    6ed4:	ldr	r0, [r5, sl]
    6ed8:	mov	r1, r6
    6edc:	ldr	r0, [r0, #544]	; 0x220
    6ee0:	bl	0 <coda_type_record_add_field>
    6ee4:	movw	r0, #0
    6ee8:	movt	r0, #0
    6eec:	bl	0 <coda_type_record_field_new>
    6ef0:	mov	r6, r0
    6ef4:	ldr	r0, [r5, sl]
    6ef8:	ldr	r1, [r0, #476]	; 0x1dc
    6efc:	mov	r0, r6
    6f00:	bl	0 <coda_type_record_field_set_type>
    6f04:	ldr	r0, [r5, sl]
    6f08:	mov	r1, r6
    6f0c:	ldr	r0, [r0, #544]	; 0x220
    6f10:	bl	0 <coda_type_record_add_field>
    6f14:	movw	r0, #0
    6f18:	movt	r0, #0
    6f1c:	bl	0 <coda_type_record_field_new>
    6f20:	mov	r6, r0
    6f24:	ldr	r0, [r5, sl]
    6f28:	ldr	r1, [r0, #480]	; 0x1e0
    6f2c:	mov	r0, r6
    6f30:	bl	0 <coda_type_record_field_set_type>
    6f34:	ldr	r0, [r5, sl]
    6f38:	mov	r1, r6
    6f3c:	ldr	r0, [r0, #544]	; 0x220
    6f40:	bl	0 <coda_type_record_add_field>
    6f44:	movw	r0, #0
    6f48:	movt	r0, #0
    6f4c:	bl	0 <coda_type_record_field_new>
    6f50:	mov	r6, r0
    6f54:	ldr	r0, [r5, sl]
    6f58:	ldr	r1, [r0, #484]	; 0x1e4
    6f5c:	mov	r0, r6
    6f60:	bl	0 <coda_type_record_field_set_type>
    6f64:	ldr	r0, [r5, sl]
    6f68:	mov	r1, r6
    6f6c:	ldr	r0, [r0, #544]	; 0x220
    6f70:	bl	0 <coda_type_record_add_field>
    6f74:	movw	r0, #0
    6f78:	movt	r0, #0
    6f7c:	bl	0 <coda_type_record_field_new>
    6f80:	mov	r6, r0
    6f84:	ldr	r0, [r5, sl]
    6f88:	ldr	r1, [r0, #488]	; 0x1e8
    6f8c:	mov	r0, r6
    6f90:	bl	0 <coda_type_record_field_set_type>
    6f94:	ldr	r0, [r5, sl]
    6f98:	mov	r1, r6
    6f9c:	ldr	r0, [r0, #544]	; 0x220
    6fa0:	bl	0 <coda_type_record_add_field>
    6fa4:	movw	r0, #0
    6fa8:	movt	r0, #0
    6fac:	bl	0 <coda_type_record_field_new>
    6fb0:	mov	r6, r0
    6fb4:	ldr	r0, [r5, sl]
    6fb8:	ldr	r1, [r0, #492]	; 0x1ec
    6fbc:	mov	r0, r6
    6fc0:	bl	0 <coda_type_record_field_set_type>
    6fc4:	ldr	r0, [r5, sl]
    6fc8:	mov	r1, r6
    6fcc:	ldr	r0, [r0, #544]	; 0x220
    6fd0:	bl	0 <coda_type_record_add_field>
    6fd4:	movw	r0, #0
    6fd8:	movt	r0, #0
    6fdc:	bl	0 <coda_type_record_field_new>
    6fe0:	mov	r6, r0
    6fe4:	ldr	r0, [r5, sl]
    6fe8:	ldr	r1, [r0, #496]	; 0x1f0
    6fec:	mov	r0, r6
    6ff0:	bl	0 <coda_type_record_field_set_type>
    6ff4:	ldr	r0, [r5, sl]
    6ff8:	mov	r1, r6
    6ffc:	ldr	r0, [r0, #544]	; 0x220
    7000:	bl	0 <coda_type_record_add_field>
    7004:	movw	r0, #0
    7008:	movt	r0, #0
    700c:	bl	0 <coda_type_record_field_new>
    7010:	mov	r6, r0
    7014:	ldr	r0, [r5, sl]
    7018:	ldr	r1, [r0, #500]	; 0x1f4
    701c:	mov	r0, r6
    7020:	bl	0 <coda_type_record_field_set_type>
    7024:	ldr	r0, [r5, sl]
    7028:	mov	r1, r6
    702c:	ldr	r0, [r0, #544]	; 0x220
    7030:	bl	0 <coda_type_record_add_field>
    7034:	movw	r0, #0
    7038:	movt	r0, #0
    703c:	bl	0 <coda_type_record_field_new>
    7040:	mov	r6, r0
    7044:	ldr	r0, [r5, sl]
    7048:	ldr	r1, [r0, #504]	; 0x1f8
    704c:	mov	r0, r6
    7050:	bl	0 <coda_type_record_field_set_type>
    7054:	ldr	r0, [r5, sl]
    7058:	mov	r1, r6
    705c:	ldr	r0, [r0, #544]	; 0x220
    7060:	bl	0 <coda_type_record_add_field>
    7064:	movw	r0, #0
    7068:	movt	r0, #0
    706c:	bl	0 <coda_type_record_field_new>
    7070:	mov	r6, r0
    7074:	ldr	r0, [r5, sl]
    7078:	ldr	r1, [r0, #508]	; 0x1fc
    707c:	mov	r0, r6
    7080:	bl	0 <coda_type_record_field_set_type>
    7084:	ldr	r0, [r5, sl]
    7088:	mov	r1, r6
    708c:	ldr	r0, [r0, #544]	; 0x220
    7090:	bl	0 <coda_type_record_add_field>
    7094:	movw	r0, #0
    7098:	movt	r0, #0
    709c:	bl	0 <coda_type_record_field_new>
    70a0:	mov	r6, r0
    70a4:	ldr	r0, [r5, sl]
    70a8:	ldr	r1, [r0, #516]	; 0x204
    70ac:	mov	r0, r6
    70b0:	bl	0 <coda_type_record_field_set_type>
    70b4:	mov	r0, r6
    70b8:	bl	0 <coda_type_record_field_set_optional>
    70bc:	ldr	r0, [r5, sl]
    70c0:	mov	r1, r6
    70c4:	ldr	r0, [r0, #544]	; 0x220
    70c8:	bl	0 <coda_type_record_add_field>
    70cc:	movw	r0, #0
    70d0:	movt	r0, #0
    70d4:	bl	0 <coda_type_record_field_new>
    70d8:	mov	r6, r0
    70dc:	ldr	r0, [r5, sl]
    70e0:	ldr	r1, [r0, #524]	; 0x20c
    70e4:	mov	r0, r6
    70e8:	bl	0 <coda_type_record_field_set_type>
    70ec:	mov	r0, r6
    70f0:	bl	0 <coda_type_record_field_set_hidden>
    70f4:	ldr	r0, [r5, sl]
    70f8:	mov	r1, r6
    70fc:	ldr	r0, [r0, #544]	; 0x220
    7100:	bl	0 <coda_type_record_add_field>
    7104:	movw	r0, #0
    7108:	movt	r0, #0
    710c:	bl	0 <coda_type_record_field_new>
    7110:	mov	r6, r0
    7114:	ldr	r0, [r5, sl]
    7118:	ldr	r1, [r0, #320]	; 0x140
    711c:	mov	r0, r6
    7120:	bl	0 <coda_type_record_field_set_type>
    7124:	mov	r0, r6
    7128:	bl	0 <coda_type_record_field_set_hidden>
    712c:	ldr	r0, [r5, sl]
    7130:	mov	r1, r6
    7134:	ldr	r0, [r0, #544]	; 0x220
    7138:	bl	0 <coda_type_record_add_field>
    713c:	movw	r0, #0
    7140:	movt	r0, #0
    7144:	bl	0 <coda_type_record_field_new>
    7148:	mov	r6, r0
    714c:	ldr	r0, [r5, sl]
    7150:	ldr	r1, [r0, #528]	; 0x210
    7154:	mov	r0, r6
    7158:	bl	0 <coda_type_record_field_set_type>
    715c:	mov	r0, r6
    7160:	bl	0 <coda_type_record_field_set_hidden>
    7164:	ldr	r0, [r5, sl]
    7168:	mov	r1, r6
    716c:	ldr	r0, [r0, #544]	; 0x220
    7170:	bl	0 <coda_type_record_add_field>
    7174:	movw	r0, #0
    7178:	movt	r0, #0
    717c:	bl	0 <coda_type_record_field_new>
    7180:	mov	r6, r0
    7184:	ldr	r0, [r5, sl]
    7188:	ldr	r1, [r0, #532]	; 0x214
    718c:	mov	r0, r6
    7190:	bl	0 <coda_type_record_field_set_type>
    7194:	mov	r0, r6
    7198:	bl	0 <coda_type_record_field_set_hidden>
    719c:	ldr	r0, [r5, sl]
    71a0:	mov	r1, r6
    71a4:	ldr	r0, [r0, #544]	; 0x220
    71a8:	bl	0 <coda_type_record_add_field>
    71ac:	movw	r0, #0
    71b0:	movt	r0, #0
    71b4:	bl	0 <coda_type_record_field_new>
    71b8:	mov	r6, r0
    71bc:	ldr	r0, [r5, sl]
    71c0:	ldr	r1, [r0, #536]	; 0x218
    71c4:	mov	r0, r6
    71c8:	bl	0 <coda_type_record_field_set_type>
    71cc:	ldr	r0, [r5, sl]
    71d0:	mov	r1, r6
    71d4:	ldr	r0, [r0, #544]	; 0x220
    71d8:	bl	0 <coda_type_record_add_field>
    71dc:	mov	r0, #7
    71e0:	bl	0 <coda_type_array_new>
    71e4:	ldr	r1, [r5, sl]
    71e8:	str	r0, [r1, #548]	; 0x224
    71ec:	ldr	r1, [r1, #348]	; 0x15c
    71f0:	bl	0 <coda_type_array_set_base_type>
    71f4:	ldr	r0, [r5, sl]
    71f8:	mov	r1, #0
    71fc:	ldr	r0, [r0, #548]	; 0x224
    7200:	bl	0 <coda_type_array_add_variable_dimension>
    7204:	mov	r0, #7
    7208:	bl	0 <coda_type_array_new>
    720c:	ldr	r1, [r5, sl]
    7210:	str	r0, [r1, #552]	; 0x228
    7214:	ldr	r1, [r1, #540]	; 0x21c
    7218:	bl	0 <coda_type_array_set_base_type>
    721c:	ldr	r0, [r5, sl]
    7220:	mov	r1, #0
    7224:	ldr	r0, [r0, #552]	; 0x228
    7228:	bl	0 <coda_type_array_add_variable_dimension>
    722c:	mov	r0, #7
    7230:	bl	0 <coda_type_array_new>
    7234:	ldr	r1, [r5, sl]
    7238:	str	r0, [r1, #556]	; 0x22c
    723c:	ldr	r1, [r1, #544]	; 0x220
    7240:	bl	0 <coda_type_array_set_base_type>
    7244:	ldr	r0, [r5, sl]
    7248:	mov	r1, #0
    724c:	ldr	r0, [r0, #556]	; 0x22c
    7250:	bl	0 <coda_type_array_add_variable_dimension>
    7254:	mov	r0, #7
    7258:	bl	0 <coda_type_record_new>
    725c:	ldr	r1, [r5, sl]
    7260:	str	r0, [r1, #560]	; 0x230
    7264:	mov	r0, r8
    7268:	bl	0 <coda_type_record_field_new>
    726c:	mov	r6, r0
    7270:	ldr	r0, [r5, sl]
    7274:	ldr	r1, [r0, #284]	; 0x11c
    7278:	mov	r0, r6
    727c:	bl	0 <coda_type_record_field_set_type>
    7280:	ldr	r0, [r5, sl]
    7284:	mov	r1, r6
    7288:	ldr	r0, [r0, #560]	; 0x230
    728c:	bl	0 <coda_type_record_add_field>
    7290:	movw	r0, #0
    7294:	movt	r0, #0
    7298:	bl	0 <coda_type_record_field_new>
    729c:	mov	r6, r0
    72a0:	ldr	r0, [r5, sl]
    72a4:	ldr	r1, [r0, #324]	; 0x144
    72a8:	mov	r0, r6
    72ac:	bl	0 <coda_type_record_field_set_type>
    72b0:	ldr	r0, [r5, sl]
    72b4:	mov	r1, r6
    72b8:	ldr	r0, [r0, #560]	; 0x230
    72bc:	bl	0 <coda_type_record_add_field>
    72c0:	movw	r0, #0
    72c4:	movt	r0, #0
    72c8:	bl	0 <coda_type_record_field_new>
    72cc:	mov	r6, r0
    72d0:	ldr	r0, [r5, sl]
    72d4:	ldr	r1, [r0, #288]	; 0x120
    72d8:	mov	r0, r6
    72dc:	bl	0 <coda_type_record_field_set_type>
    72e0:	ldr	r0, [r5, sl]
    72e4:	mov	r1, r6
    72e8:	ldr	r0, [r0, #560]	; 0x230
    72ec:	bl	0 <coda_type_record_add_field>
    72f0:	movw	r0, #0
    72f4:	movt	r0, #0
    72f8:	bl	0 <coda_type_record_field_new>
    72fc:	mov	r6, r0
    7300:	ldr	r0, [r5, sl]
    7304:	ldr	r1, [r0, #316]	; 0x13c
    7308:	mov	r0, r6
    730c:	bl	0 <coda_type_record_field_set_type>
    7310:	ldr	r0, [r5, sl]
    7314:	mov	r1, r6
    7318:	ldr	r0, [r0, #560]	; 0x230
    731c:	bl	0 <coda_type_record_add_field>
    7320:	movw	r0, #0
    7324:	movt	r0, #0
    7328:	bl	0 <coda_type_record_field_new>
    732c:	mov	r6, r0
    7330:	ldr	r0, [r5, sl]
    7334:	ldr	r1, [r0, #328]	; 0x148
    7338:	mov	r0, r6
    733c:	bl	0 <coda_type_record_field_set_type>
    7340:	ldr	r0, [r5, sl]
    7344:	mov	r1, r6
    7348:	ldr	r0, [r0, #560]	; 0x230
    734c:	bl	0 <coda_type_record_add_field>
    7350:	movw	r0, #0
    7354:	movt	r0, #0
    7358:	bl	0 <coda_type_record_field_new>
    735c:	mov	r6, r0
    7360:	ldr	r0, [r5, sl]
    7364:	ldr	r1, [r0, #332]	; 0x14c
    7368:	mov	r0, r6
    736c:	bl	0 <coda_type_record_field_set_type>
    7370:	ldr	r0, [r5, sl]
    7374:	mov	r1, r6
    7378:	ldr	r0, [r0, #560]	; 0x230
    737c:	bl	0 <coda_type_record_add_field>
    7380:	movw	r0, #0
    7384:	movt	r0, #0
    7388:	bl	0 <coda_type_record_field_new>
    738c:	mov	r6, r0
    7390:	ldr	r0, [r5, sl]
    7394:	ldr	r1, [r0, #336]	; 0x150
    7398:	mov	r0, r6
    739c:	bl	0 <coda_type_record_field_set_type>
    73a0:	ldr	r0, [r5, sl]
    73a4:	mov	r1, r6
    73a8:	ldr	r0, [r0, #560]	; 0x230
    73ac:	bl	0 <coda_type_record_add_field>
    73b0:	movw	r0, #0
    73b4:	movt	r0, #0
    73b8:	bl	0 <coda_type_record_field_new>
    73bc:	mov	r6, r0
    73c0:	ldr	r0, [r5, sl]
    73c4:	ldr	r1, [r0, #292]	; 0x124
    73c8:	mov	r0, r6
    73cc:	bl	0 <coda_type_record_field_set_type>
    73d0:	ldr	r0, [r5, sl]
    73d4:	mov	r1, r6
    73d8:	ldr	r0, [r0, #560]	; 0x230
    73dc:	bl	0 <coda_type_record_add_field>
    73e0:	movw	r0, #0
    73e4:	movt	r0, #0
    73e8:	bl	0 <coda_type_record_field_new>
    73ec:	mov	r6, r0
    73f0:	ldr	r0, [r5, sl]
    73f4:	ldr	r1, [r0, #296]	; 0x128
    73f8:	mov	r0, r6
    73fc:	bl	0 <coda_type_record_field_set_type>
    7400:	ldr	r0, [r5, sl]
    7404:	mov	r1, r6
    7408:	ldr	r0, [r0, #560]	; 0x230
    740c:	bl	0 <coda_type_record_add_field>
    7410:	movw	r0, #0
    7414:	movt	r0, #0
    7418:	bl	0 <coda_type_record_field_new>
    741c:	mov	r6, r0
    7420:	ldr	r0, [r5, sl]
    7424:	ldr	r1, [r0, #300]	; 0x12c
    7428:	mov	r0, r6
    742c:	bl	0 <coda_type_record_field_set_type>
    7430:	ldr	r0, [r5, sl]
    7434:	mov	r1, r6
    7438:	ldr	r0, [r0, #560]	; 0x230
    743c:	bl	0 <coda_type_record_add_field>
    7440:	movw	r0, #0
    7444:	movt	r0, #0
    7448:	bl	0 <coda_type_record_field_new>
    744c:	mov	r6, r0
    7450:	ldr	r0, [r5, sl]
    7454:	ldr	r1, [r0, #304]	; 0x130
    7458:	mov	r0, r6
    745c:	bl	0 <coda_type_record_field_set_type>
    7460:	ldr	r0, [r5, sl]
    7464:	mov	r1, r6
    7468:	ldr	r0, [r0, #560]	; 0x230
    746c:	bl	0 <coda_type_record_add_field>
    7470:	movw	r0, #0
    7474:	movt	r0, #0
    7478:	bl	0 <coda_type_record_field_new>
    747c:	mov	r6, r0
    7480:	ldr	r0, [r5, sl]
    7484:	ldr	r1, [r0, #308]	; 0x134
    7488:	mov	r0, r6
    748c:	bl	0 <coda_type_record_field_set_type>
    7490:	ldr	r0, [r5, sl]
    7494:	mov	r1, r6
    7498:	ldr	r0, [r0, #560]	; 0x230
    749c:	bl	0 <coda_type_record_add_field>
    74a0:	movw	r0, #0
    74a4:	movt	r0, #0
    74a8:	bl	0 <coda_type_record_field_new>
    74ac:	mov	r6, r0
    74b0:	ldr	r0, [r5, sl]
    74b4:	ldr	r1, [r0, #312]	; 0x138
    74b8:	mov	r0, r6
    74bc:	bl	0 <coda_type_record_field_set_type>
    74c0:	ldr	r0, [r5, sl]
    74c4:	mov	r1, r6
    74c8:	ldr	r0, [r0, #560]	; 0x230
    74cc:	bl	0 <coda_type_record_add_field>
    74d0:	movw	r0, #0
    74d4:	movt	r0, #0
    74d8:	bl	0 <coda_type_record_field_new>
    74dc:	mov	r6, r0
    74e0:	ldr	r0, [r5, sl]
    74e4:	ldr	r1, [r0, #340]	; 0x154
    74e8:	mov	r0, r6
    74ec:	bl	0 <coda_type_record_field_set_type>
    74f0:	ldr	r0, [r5, sl]
    74f4:	mov	r1, r6
    74f8:	ldr	r0, [r0, #560]	; 0x230
    74fc:	bl	0 <coda_type_record_add_field>
    7500:	movw	r0, #0
    7504:	movt	r0, #0
    7508:	bl	0 <coda_type_record_field_new>
    750c:	mov	r6, r0
    7510:	ldr	r0, [r5, sl]
    7514:	ldr	r1, [r0, #344]	; 0x158
    7518:	mov	r0, r6
    751c:	bl	0 <coda_type_record_field_set_type>
    7520:	ldr	r0, [r5, sl]
    7524:	mov	r1, r6
    7528:	ldr	r0, [r0, #560]	; 0x230
    752c:	bl	0 <coda_type_record_add_field>
    7530:	movw	r0, #0
    7534:	movt	r0, #0
    7538:	bl	0 <coda_type_record_field_new>
    753c:	mov	r6, r0
    7540:	ldr	r0, [r5, sl]
    7544:	ldr	r1, [r0, #548]	; 0x224
    7548:	mov	r0, r6
    754c:	bl	0 <coda_type_record_field_set_type>
    7550:	ldr	r0, [r5, sl]
    7554:	mov	r1, r6
    7558:	ldr	r0, [r0, #560]	; 0x230
    755c:	bl	0 <coda_type_record_add_field>
    7560:	movw	r0, #0
    7564:	movt	r0, #0
    7568:	bl	0 <coda_type_record_field_new>
    756c:	mov	r6, r0
    7570:	ldr	r0, [r5, sl]
    7574:	ldr	r1, [r0, #552]	; 0x228
    7578:	mov	r0, r6
    757c:	bl	0 <coda_type_record_field_set_type>
    7580:	ldr	r0, [r5, sl]
    7584:	mov	r1, r6
    7588:	ldr	r0, [r0, #560]	; 0x230
    758c:	bl	0 <coda_type_record_add_field>
    7590:	movw	r0, #0
    7594:	movt	r0, #0
    7598:	bl	0 <coda_type_record_field_new>
    759c:	mov	r6, r0
    75a0:	ldr	r0, [r5, sl]
    75a4:	ldr	r1, [r0, #556]	; 0x22c
    75a8:	mov	r0, r6
    75ac:	bl	0 <coda_type_record_field_set_type>
    75b0:	ldr	r0, [r5, sl]
    75b4:	mov	r1, r6
    75b8:	ldr	r0, [r0, #560]	; 0x230
    75bc:	bl	0 <coda_type_record_add_field>
    75c0:	mov	r0, #7
    75c4:	bl	0 <coda_type_union_new>
    75c8:	ldr	r1, [r5, sl]
    75cc:	str	r0, [r1, #564]	; 0x234
    75d0:	movw	r0, #0
    75d4:	movt	r0, #0
    75d8:	bl	0 <coda_type_record_field_new>
    75dc:	mov	r6, r0
    75e0:	ldr	r0, [r5, sl]
    75e4:	ldr	r1, [r0, #272]	; 0x110
    75e8:	mov	r0, r6
    75ec:	bl	0 <coda_type_record_field_set_type>
    75f0:	mov	r0, r6
    75f4:	bl	0 <coda_type_record_field_set_optional>
    75f8:	ldr	r0, [r5, sl]
    75fc:	mov	r1, r6
    7600:	ldr	r0, [r0, #564]	; 0x234
    7604:	bl	0 <coda_type_record_add_field>
    7608:	movw	r0, #0
    760c:	movt	r0, #0
    7610:	bl	0 <coda_type_record_field_new>
    7614:	mov	r6, r0
    7618:	ldr	r0, [r5, sl]
    761c:	ldr	r1, [r0, #560]	; 0x230
    7620:	mov	r0, r6
    7624:	bl	0 <coda_type_record_field_set_type>
    7628:	mov	r0, r6
    762c:	bl	0 <coda_type_record_field_set_optional>
    7630:	ldr	r0, [r5, sl]
    7634:	mov	r1, r6
    7638:	ldr	r0, [r0, #564]	; 0x234
    763c:	bl	0 <coda_type_record_add_field>
    7640:	mov	r0, #7
    7644:	bl	0 <coda_type_array_new>
    7648:	ldr	r1, [r5, sl]
    764c:	str	r0, [r1, #568]	; 0x238
    7650:	ldr	r1, [r1, #564]	; 0x234
    7654:	bl	0 <coda_type_array_set_base_type>
    7658:	ldr	r0, [r5, sl]
    765c:	mov	r1, #0
    7660:	ldr	r0, [r0, #568]	; 0x238
    7664:	bl	0 <coda_type_array_add_variable_dimension>
    7668:	b	7694 <grib_init+0x3f90>
    766c:	movw	r1, #0
    7670:	movw	r3, #0
    7674:	mov	r0, #227	; 0xe3
    7678:	mov	r2, #572	; 0x23c
    767c:	mvn	r4, #0
    7680:	str	r0, [sp]
    7684:	movt	r1, #0
    7688:	movt	r3, #0
    768c:	mvn	r0, #0
    7690:	bl	0 <coda_set_error>
    7694:	mov	r0, r4
    7698:	sub	sp, fp, #28
    769c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000076a0 <coda_grib_close>:
    76a0:	push	{r4, sl, fp, lr}
    76a4:	add	fp, sp, #8
    76a8:	mov	r4, r0
    76ac:	ldr	r0, [r0]
    76b0:	cmp	r0, #0
    76b4:	beq	76bc <coda_grib_close+0x1c>
    76b8:	bl	0 <free>
    76bc:	ldr	r0, [r4, #20]
    76c0:	cmp	r0, #0
    76c4:	beq	76cc <coda_grib_close+0x2c>
    76c8:	bl	0 <coda_dynamic_type_delete>
    76cc:	ldr	r0, [r4, #48]	; 0x30
    76d0:	cmp	r0, #0
    76d4:	beq	76dc <coda_grib_close+0x3c>
    76d8:	bl	0 <free>
    76dc:	ldr	r0, [r4, #52]	; 0x34
    76e0:	cmp	r0, #0
    76e4:	beq	76ec <coda_grib_close+0x4c>
    76e8:	bl	0 <coda_bin_close>
    76ec:	mov	r0, r4
    76f0:	bl	0 <free>
    76f4:	mov	r0, #0
    76f8:	pop	{r4, sl, fp, pc}

000076fc <read_bytes>:
    76fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7700:	add	fp, sp, #28
    7704:	sub	sp, sp, #68	; 0x44
    7708:	ldr	r7, [r0, #48]	; 0x30
    770c:	mov	sl, r2
    7710:	ldr	r1, [fp, #12]
    7714:	ldr	r2, [fp, #8]
    7718:	ldr	ip, [fp, #16]
    771c:	mov	r9, r3
    7720:	cmp	r7, #0
    7724:	beq	77a8 <read_bytes+0xac>
    7728:	mov	r6, r0
    772c:	adds	lr, r2, sl
    7730:	ldr	r4, [r6, #40]!	; 0x28
    7734:	adc	r5, r1, r9
    7738:	ldr	r3, [r6, #4]
    773c:	subs	r4, r4, lr
    7740:	sbcs	r3, r3, r5
    7744:	bcs	77e8 <read_bytes+0xec>
    7748:	ldr	r0, [r0, #16]
    774c:	cmp	r0, #1
    7750:	bls	77cc <read_bytes+0xd0>
    7754:	add	r8, sp, #47	; 0x2f
    7758:	mov	r0, r2
    775c:	mov	r2, r8
    7760:	bl	0 <coda_str64>
    7764:	add	r7, sp, #26
    7768:	mov	r0, sl
    776c:	mov	r1, r9
    7770:	mov	r2, r7
    7774:	bl	0 <coda_str64>
    7778:	ldrd	r0, [r6]
    777c:	add	r4, sp, #5
    7780:	mov	r2, r4
    7784:	bl	0 <coda_str64>
    7788:	movw	r1, #0
    778c:	mvn	r0, #300	; 0x12c
    7790:	mov	r2, r8
    7794:	mov	r3, r7
    7798:	str	r4, [sp]
    779c:	movt	r1, #0
    77a0:	bl	0 <coda_set_error>
    77a4:	b	77dc <read_bytes+0xe0>
    77a8:	ldr	r3, [r0, #16]
    77ac:	cmp	r3, #2
    77b0:	bcs	7844 <read_bytes+0x148>
    77b4:	ldrd	r4, [r0, #8]
    77b8:	adds	r3, r2, sl
    77bc:	adc	r1, r1, r9
    77c0:	subs	r3, r4, r3
    77c4:	sbcs	r1, r5, r1
    77c8:	bcs	7800 <read_bytes+0x104>
    77cc:	movw	r1, #0
    77d0:	mvn	r0, #300	; 0x12c
    77d4:	movt	r1, #0
    77d8:	bl	0 <coda_set_error>
    77dc:	mvn	r0, #0
    77e0:	sub	sp, fp, #28
    77e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    77e8:	add	r1, r7, sl
    77ec:	mov	r0, ip
    77f0:	bl	0 <memcpy>
    77f4:	mov	r0, #0
    77f8:	sub	sp, fp, #28
    77fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7800:	ldr	r0, [r0, #56]	; 0x38
    7804:	mov	r1, ip
    7808:	mov	r3, sl
    780c:	bl	0 <pread>
    7810:	mov	r1, r0
    7814:	mov	r0, #0
    7818:	cmn	r1, #1
    781c:	bgt	77e0 <read_bytes+0xe4>
    7820:	bl	0 <__errno_location>
    7824:	ldr	r0, [r0]
    7828:	bl	0 <strerror>
    782c:	movw	r1, #0
    7830:	mov	r2, r0
    7834:	mvn	r0, #21
    7838:	movt	r1, #0
    783c:	bl	0 <coda_set_error>
    7840:	b	77dc <read_bytes+0xe0>
    7844:	movw	r0, #0
    7848:	movw	r1, #0
    784c:	movw	r3, #0
    7850:	mov	r2, #83	; 0x53
    7854:	movt	r0, #0
    7858:	movt	r1, #0
    785c:	movt	r3, #0
    7860:	bl	0 <__assert_fail>
