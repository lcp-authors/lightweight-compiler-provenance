
../compcert-repos/prog2/CMakeFiles/0.4.dir/Aula00_Conceitos_base/04.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ordenado>:
   0:	cmp	r1, #1
   4:	ldr	r3, [r0]
   8:	ble	40 <ordenado+0x40>
   c:	ldr	ip, [r0, #4]
  10:	cmp	r3, ip
  14:	bgt	48 <ordenado+0x48>
  18:	add	r0, r0, #4
  1c:	mov	r3, #1
  20:	b	34 <ordenado+0x34>
  24:	ldr	r2, [r0, #4]!
  28:	cmp	r2, ip
  2c:	mov	ip, r2
  30:	blt	48 <ordenado+0x48>
  34:	add	r3, r3, #1
  38:	cmp	r1, r3
  3c:	bne	24 <ordenado+0x24>
  40:	mov	r0, #1
  44:	bx	lr
  48:	mov	r0, #0
  4c:	bx	lr

Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, lr}
   4:	sub	sp, sp, #8
   8:	ldr	r0, [pc, #284]	; 12c <main+0x12c>
   c:	bl	0 <printf>
  10:	add	r1, sp, #4
  14:	ldr	r0, [pc, #276]	; 130 <main+0x130>
  18:	bl	0 <__isoc99_scanf>
  1c:	ldr	r0, [sp, #4]
  20:	cmp	r0, #100	; 0x64
  24:	bgt	114 <main+0x114>
  28:	lsl	r0, r0, #2
  2c:	bl	0 <malloc>
  30:	ldr	r3, [sp, #4]
  34:	cmp	r3, #0
  38:	mov	r6, r0
  3c:	ble	bc <main+0xbc>
  40:	ldr	r8, [pc, #236]	; 134 <main+0x134>
  44:	ldr	r7, [pc, #228]	; 130 <main+0x130>
  48:	mov	r5, r0
  4c:	mov	r4, #0
  50:	add	r4, r4, #1
  54:	mov	r1, r4
  58:	mov	r0, r8
  5c:	bl	0 <printf>
  60:	mov	r1, r5
  64:	mov	r0, r7
  68:	bl	0 <__isoc99_scanf>
  6c:	ldr	r2, [sp, #4]
  70:	add	r5, r5, #4
  74:	cmp	r2, r4
  78:	bgt	50 <main+0x50>
  7c:	cmp	r2, #1
  80:	ldr	r3, [r6]
  84:	ble	bc <main+0xbc>
  88:	ldr	r0, [r6, #4]
  8c:	cmp	r3, r0
  90:	addle	ip, r6, #4
  94:	movle	r3, #1
  98:	ble	b0 <main+0xb0>
  9c:	b	108 <main+0x108>
  a0:	ldr	r1, [ip, #4]!
  a4:	cmp	r1, r0
  a8:	blt	108 <main+0x108>
  ac:	mov	r0, r1
  b0:	add	r3, r3, #1
  b4:	cmp	r2, r3
  b8:	bne	a0 <main+0xa0>
  bc:	ldr	r0, [pc, #116]	; 138 <main+0x138>
  c0:	bl	0 <printf>
  c4:	ldr	r5, [sp, #4]
  c8:	sub	r4, r5, #1
  cc:	cmp	r4, #0
  d0:	addgt	r5, r6, r5, lsl #2
  d4:	ldrgt	r7, [pc, #96]	; 13c <main+0x13c>
  d8:	ble	f0 <main+0xf0>
  dc:	ldr	r1, [r5, #-4]!
  e0:	mov	r0, r7
  e4:	bl	0 <printf>
  e8:	subs	r4, r4, #1
  ec:	bne	dc <main+0xdc>
  f0:	ldr	r1, [r6, r4, lsl #2]
  f4:	ldr	r0, [pc, #68]	; 140 <main+0x140>
  f8:	bl	0 <printf>
  fc:	mov	r0, #0
 100:	add	sp, sp, #8
 104:	pop	{r4, r5, r6, r7, r8, pc}
 108:	ldr	r0, [pc, #52]	; 144 <main+0x144>
 10c:	bl	0 <puts>
 110:	b	fc <main+0xfc>
 114:	ldr	r0, [pc, #44]	; 148 <main+0x148>
 118:	bl	0 <printf>
 11c:	mov	r3, #100	; 0x64
 120:	mov	r0, r3
 124:	str	r3, [sp, #4]
 128:	b	28 <main+0x28>
 12c:	.word	0x00000000
 130:	.word	0x00000024
 134:	.word	0x00000058
 138:	.word	0x00000098
 13c:	.word	0x00000070
 140:	.word	0x00000074
 144:	.word	0x0000007c
 148:	.word	0x00000028
