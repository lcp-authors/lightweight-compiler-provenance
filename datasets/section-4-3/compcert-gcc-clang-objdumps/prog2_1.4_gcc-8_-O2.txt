
../compcert-repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010640 <.init>:
   10640:	push	{r3, lr}
   10644:	bl	10ab4 <_start@@Base+0x3c>
   10648:	pop	{r3, pc}

Disassembly of section .plt:

0001064c <printf@plt-0x14>:
   1064c:	push	{lr}		; (str lr, [sp, #-4]!)
   10650:	ldr	lr, [pc, #4]	; 1065c <printf@plt-0x4>
   10654:	add	lr, pc, lr
   10658:	ldr	pc, [lr, #8]!
   1065c:	andeq	r0, r1, r4, lsr #19

00010660 <printf@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #16, 20	; 0x10000
   10668:	ldr	pc, [ip, #2468]!	; 0x9a4

0001066c <fopen@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2460]!	; 0x99c

00010678 <free@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #16, 20	; 0x10000
   10680:	ldr	pc, [ip, #2452]!	; 0x994

00010684 <malloc@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2444]!	; 0x98c

00010690 <__libc_start_main@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2436]!	; 0x984

0001069c <__gmon_start__@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2428]!	; 0x97c

000106a8 <exit@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2420]!	; 0x974

000106b4 <fclose@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2412]!	; 0x96c

000106c0 <fseek@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2404]!	; 0x964

000106cc <abort@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2396]!	; 0x95c

000106d8 <getc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2388]!	; 0x954

Disassembly of section .text:

000106e4 <main@@Base>:
   106e4:	movw	r1, #3132	; 0xc3c
   106e8:	movt	r1, #1
   106ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   106f0:	movw	r0, #3136	; 0xc40
   106f4:	movt	r0, #1
   106f8:	strd	r6, [sp, #8]
   106fc:	strd	r8, [sp, #16]
   10700:	strd	sl, [sp, #24]
   10704:	str	lr, [sp, #32]
   10708:	sub	sp, sp, #12
   1070c:	bl	1066c <fopen@plt>
   10710:	mov	r5, r0
   10714:	bl	106d8 <getc@plt>
   10718:	cmp	r0, #66	; 0x42
   1071c:	bne	10a3c <main@@Base+0x358>
   10720:	mov	r0, r5
   10724:	bl	106d8 <getc@plt>
   10728:	cmp	r0, #77	; 0x4d
   1072c:	bne	10a3c <main@@Base+0x358>
   10730:	mov	r0, r5
   10734:	bl	106d8 <getc@plt>
   10738:	mov	r6, r0
   1073c:	mov	r0, r5
   10740:	bl	106d8 <getc@plt>
   10744:	mov	r7, r0
   10748:	mov	r0, r5
   1074c:	bl	106d8 <getc@plt>
   10750:	lsl	r4, r0, #16
   10754:	mov	r0, r5
   10758:	bl	106d8 <getc@plt>
   1075c:	orr	r4, r4, r7, lsl #8
   10760:	orr	r4, r4, r6
   10764:	orr	r1, r4, r0, lsl #24
   10768:	movw	r0, #3220	; 0xc94
   1076c:	movt	r0, #1
   10770:	bl	10660 <printf@plt>
   10774:	mov	r2, #1
   10778:	mov	r1, #4
   1077c:	mov	r0, r5
   10780:	bl	106c0 <fseek@plt>
   10784:	mov	r0, r5
   10788:	bl	106d8 <getc@plt>
   1078c:	mov	r6, r0
   10790:	mov	r0, r5
   10794:	bl	106d8 <getc@plt>
   10798:	mov	r7, r0
   1079c:	mov	r0, r5
   107a0:	bl	106d8 <getc@plt>
   107a4:	lsl	r4, r0, #16
   107a8:	mov	r0, r5
   107ac:	bl	106d8 <getc@plt>
   107b0:	orr	r4, r4, r7, lsl #8
   107b4:	mov	r2, #1
   107b8:	mov	r1, #4
   107bc:	orr	r4, r4, r6
   107c0:	orr	r4, r4, r0, lsl #24
   107c4:	mov	r0, r5
   107c8:	bl	106c0 <fseek@plt>
   107cc:	mov	r0, r5
   107d0:	bl	106d8 <getc@plt>
   107d4:	mov	r6, r0
   107d8:	mov	r0, r5
   107dc:	bl	106d8 <getc@plt>
   107e0:	mov	r7, r0
   107e4:	mov	r0, r5
   107e8:	bl	106d8 <getc@plt>
   107ec:	lsl	r9, r0, #16
   107f0:	mov	r0, r5
   107f4:	bl	106d8 <getc@plt>
   107f8:	orr	r9, r9, r7, lsl #8
   107fc:	orr	r9, r9, r6
   10800:	orr	r9, r9, r0, lsl #24
   10804:	movw	r0, #3256	; 0xcb8
   10808:	movt	r0, #1
   1080c:	mov	r1, r9
   10810:	bl	10660 <printf@plt>
   10814:	mov	r0, r5
   10818:	bl	106d8 <getc@plt>
   1081c:	mov	r6, r0
   10820:	mov	r0, r5
   10824:	bl	106d8 <getc@plt>
   10828:	mov	r7, r0
   1082c:	mov	r0, r5
   10830:	bl	106d8 <getc@plt>
   10834:	lsl	sl, r0, #16
   10838:	mov	r0, r5
   1083c:	bl	106d8 <getc@plt>
   10840:	orr	sl, sl, r7, lsl #8
   10844:	orr	sl, sl, r6
   10848:	orr	r3, sl, r0, lsl #24
   1084c:	movw	r0, #3280	; 0xcd0
   10850:	movt	r0, #1
   10854:	mov	r1, r3
   10858:	str	r3, [sp, #4]
   1085c:	bl	10660 <printf@plt>
   10860:	mov	r0, r5
   10864:	bl	106d8 <getc@plt>
   10868:	mov	r6, r0
   1086c:	mov	r0, r5
   10870:	bl	106d8 <getc@plt>
   10874:	orr	r0, r6, r0, lsl #8
   10878:	cmp	r0, #1
   1087c:	bne	10a64 <main@@Base+0x380>
   10880:	mov	r0, r5
   10884:	bl	106d8 <getc@plt>
   10888:	mov	r6, r0
   1088c:	mov	r0, r5
   10890:	bl	106d8 <getc@plt>
   10894:	orr	r6, r6, r0, lsl #8
   10898:	movw	r0, #3400	; 0xd48
   1089c:	movt	r0, #1
   108a0:	mov	r1, r6
   108a4:	bl	10660 <printf@plt>
   108a8:	cmp	r6, #24
   108ac:	bne	10a50 <main@@Base+0x36c>
   108b0:	ldr	r6, [sp, #4]
   108b4:	mov	r1, r4
   108b8:	mov	r2, #0
   108bc:	mov	r0, r5
   108c0:	bl	106c0 <fseek@plt>
   108c4:	lsl	r8, r6, #2
   108c8:	mov	r4, r6
   108cc:	sub	r7, r6, #1
   108d0:	mov	r0, r8
   108d4:	bl	10684 <malloc@plt>
   108d8:	cmp	r6, #0
   108dc:	mov	fp, r0
   108e0:	ble	109f0 <main@@Base+0x30c>
   108e4:	lsl	r6, r9, #1
   108e8:	add	r8, r8, r0
   108ec:	mov	sl, r0
   108f0:	add	r4, r6, r9
   108f4:	mov	r0, r4
   108f8:	bl	10684 <malloc@plt>
   108fc:	str	r0, [sl], #4
   10900:	cmp	sl, r8
   10904:	bne	108f4 <main@@Base+0x210>
   10908:	add	r6, r6, r9
   1090c:	mov	sl, r8
   10910:	cmp	r9, #0
   10914:	movgt	r4, #0
   10918:	ble	10960 <main@@Base+0x27c>
   1091c:	mov	r0, r5
   10920:	bl	106d8 <getc@plt>
   10924:	ldr	r3, [sl, #-4]
   10928:	add	r3, r3, r4
   1092c:	strb	r0, [r3, #2]
   10930:	mov	r0, r5
   10934:	bl	106d8 <getc@plt>
   10938:	ldr	r3, [sl, #-4]
   1093c:	add	r3, r3, r4
   10940:	strb	r0, [r3, #1]
   10944:	mov	r0, r5
   10948:	bl	106d8 <getc@plt>
   1094c:	ldr	r3, [sl, #-4]
   10950:	strb	r0, [r3, r4]
   10954:	add	r4, r4, #3
   10958:	cmp	r6, r4
   1095c:	bne	1091c <main@@Base+0x238>
   10960:	sub	r7, r7, #1
   10964:	sub	sl, sl, #4
   10968:	cmn	r7, #1
   1096c:	bne	10910 <main@@Base+0x22c>
   10970:	mov	r0, r5
   10974:	bl	106b4 <fclose@plt>
   10978:	mov	r2, #0
   1097c:	mov	r0, fp
   10980:	mov	r1, r2
   10984:	bl	10b68 <print_pixelinfo@@Base>
   10988:	mov	r2, #0
   1098c:	mov	r1, #532	; 0x214
   10990:	mov	r0, fp
   10994:	bl	10b68 <print_pixelinfo@@Base>
   10998:	movw	r2, #443	; 0x1bb
   1099c:	mov	r1, #408	; 0x198
   109a0:	mov	r0, fp
   109a4:	bl	10b68 <print_pixelinfo@@Base>
   109a8:	ldr	r3, [sp, #4]
   109ac:	cmp	r3, #0
   109b0:	ble	109c8 <main@@Base+0x2e4>
   109b4:	mov	r4, fp
   109b8:	ldr	r0, [r4], #4
   109bc:	bl	10678 <free@plt>
   109c0:	cmp	r8, r4
   109c4:	bne	109b8 <main@@Base+0x2d4>
   109c8:	mov	r0, fp
   109cc:	bl	10678 <free@plt>
   109d0:	mov	r0, #0
   109d4:	add	sp, sp, #12
   109d8:	ldrd	r4, [sp]
   109dc:	ldrd	r6, [sp, #8]
   109e0:	ldrd	r8, [sp, #16]
   109e4:	ldrd	sl, [sp, #24]
   109e8:	add	sp, sp, #32
   109ec:	pop	{pc}		; (ldr pc, [sp], #4)
   109f0:	cmp	r7, #0
   109f4:	addge	r8, r8, r0
   109f8:	lslge	r6, r9, #1
   109fc:	bge	10908 <main@@Base+0x224>
   10a00:	mov	r0, r5
   10a04:	bl	106b4 <fclose@plt>
   10a08:	mov	r2, #0
   10a0c:	mov	r0, fp
   10a10:	mov	r1, r2
   10a14:	bl	10b68 <print_pixelinfo@@Base>
   10a18:	mov	r0, fp
   10a1c:	mov	r2, #0
   10a20:	mov	r1, #532	; 0x214
   10a24:	bl	10b68 <print_pixelinfo@@Base>
   10a28:	movw	r2, #443	; 0x1bb
   10a2c:	mov	r1, #408	; 0x198
   10a30:	mov	r0, fp
   10a34:	bl	10b68 <print_pixelinfo@@Base>
   10a38:	b	109c8 <main@@Base+0x2e4>
   10a3c:	movw	r0, #3160	; 0xc58
   10a40:	movt	r0, #1
   10a44:	bl	10660 <printf@plt>
   10a48:	mov	r0, #1
   10a4c:	bl	106a8 <exit@plt>
   10a50:	movw	r0, #3420	; 0xd5c
   10a54:	movt	r0, #1
   10a58:	bl	10660 <printf@plt>
   10a5c:	mov	r0, #3
   10a60:	bl	106a8 <exit@plt>
   10a64:	movw	r0, #3304	; 0xce8
   10a68:	movt	r0, #1
   10a6c:	bl	10660 <printf@plt>
   10a70:	mov	r0, #2
   10a74:	bl	106a8 <exit@plt>

00010a78 <_start@@Base>:
   10a78:	mov	fp, #0
   10a7c:	mov	lr, #0
   10a80:	pop	{r1}		; (ldr r1, [sp], #4)
   10a84:	mov	r2, sp
   10a88:	push	{r2}		; (str r2, [sp, #-4]!)
   10a8c:	push	{r0}		; (str r0, [sp, #-4]!)
   10a90:	ldr	ip, [pc, #16]	; 10aa8 <_start@@Base+0x30>
   10a94:	push	{ip}		; (str ip, [sp, #-4]!)
   10a98:	ldr	r0, [pc, #12]	; 10aac <_start@@Base+0x34>
   10a9c:	ldr	r3, [pc, #12]	; 10ab0 <_start@@Base+0x38>
   10aa0:	bl	10690 <__libc_start_main@plt>
   10aa4:	bl	106cc <abort@plt>
   10aa8:	andeq	r0, r1, r4, lsl #24
   10aac:	andeq	r0, r1, r4, ror #13
   10ab0:	andeq	r0, r1, r4, lsr #23
   10ab4:	ldr	r3, [pc, #20]	; 10ad0 <_start@@Base+0x58>
   10ab8:	ldr	r2, [pc, #20]	; 10ad4 <_start@@Base+0x5c>
   10abc:	add	r3, pc, r3
   10ac0:	ldr	r2, [r3, r2]
   10ac4:	cmp	r2, #0
   10ac8:	bxeq	lr
   10acc:	b	1069c <__gmon_start__@plt>
   10ad0:	andeq	r0, r1, ip, lsr r5
   10ad4:	andeq	r0, r0, r8, lsr r0
   10ad8:	ldr	r0, [pc, #24]	; 10af8 <_start@@Base+0x80>
   10adc:	ldr	r3, [pc, #24]	; 10afc <_start@@Base+0x84>
   10ae0:	cmp	r3, r0
   10ae4:	bxeq	lr
   10ae8:	ldr	r3, [pc, #16]	; 10b00 <_start@@Base+0x88>
   10aec:	cmp	r3, #0
   10af0:	bxeq	lr
   10af4:	bx	r3
   10af8:	andeq	r1, r2, r4, asr #32
   10afc:	andeq	r1, r2, r4, asr #32
   10b00:	andeq	r0, r0, r0
   10b04:	ldr	r0, [pc, #36]	; 10b30 <_start@@Base+0xb8>
   10b08:	ldr	r1, [pc, #36]	; 10b34 <_start@@Base+0xbc>
   10b0c:	sub	r1, r1, r0
   10b10:	asr	r1, r1, #2
   10b14:	add	r1, r1, r1, lsr #31
   10b18:	asrs	r1, r1, #1
   10b1c:	bxeq	lr
   10b20:	ldr	r3, [pc, #16]	; 10b38 <_start@@Base+0xc0>
   10b24:	cmp	r3, #0
   10b28:	bxeq	lr
   10b2c:	bx	r3
   10b30:	andeq	r1, r2, r4, asr #32
   10b34:	andeq	r1, r2, r4, asr #32
   10b38:	andeq	r0, r0, r0
   10b3c:	push	{r4, lr}
   10b40:	ldr	r4, [pc, #24]	; 10b60 <_start@@Base+0xe8>
   10b44:	ldrb	r3, [r4]
   10b48:	cmp	r3, #0
   10b4c:	popne	{r4, pc}
   10b50:	bl	10ad8 <_start@@Base+0x60>
   10b54:	mov	r3, #1
   10b58:	strb	r3, [r4]
   10b5c:	pop	{r4, pc}
   10b60:	andeq	r1, r2, r4, asr #32
   10b64:	b	10b04 <_start@@Base+0x8c>

00010b68 <print_pixelinfo@@Base>:
   10b68:	push	{lr}		; (str lr, [sp, #-4]!)
   10b6c:	add	r3, r2, r2, lsl #1
   10b70:	sub	sp, sp, #12
   10b74:	ldr	lr, [r0, r1, lsl #2]
   10b78:	movw	r0, #3092	; 0xc14
   10b7c:	movt	r0, #1
   10b80:	add	ip, lr, r3
   10b84:	ldrb	r3, [lr, r3]
   10b88:	ldrb	lr, [ip, #2]
   10b8c:	str	lr, [sp, #4]
   10b90:	ldrb	ip, [ip, #1]
   10b94:	str	ip, [sp]
   10b98:	bl	10660 <printf@plt>
   10b9c:	add	sp, sp, #12
   10ba0:	pop	{pc}		; (ldr pc, [sp], #4)

00010ba4 <__libc_csu_init@@Base>:
   10ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ba8:	mov	r7, r0
   10bac:	ldr	r6, [pc, #72]	; 10bfc <__libc_csu_init@@Base+0x58>
   10bb0:	ldr	r5, [pc, #72]	; 10c00 <__libc_csu_init@@Base+0x5c>
   10bb4:	add	r6, pc, r6
   10bb8:	add	r5, pc, r5
   10bbc:	sub	r6, r6, r5
   10bc0:	mov	r8, r1
   10bc4:	mov	r9, r2
   10bc8:	bl	10640 <printf@plt-0x20>
   10bcc:	asrs	r6, r6, #2
   10bd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd4:	mov	r4, #0
   10bd8:	add	r4, r4, #1
   10bdc:	ldr	r3, [r5], #4
   10be0:	mov	r2, r9
   10be4:	mov	r1, r8
   10be8:	mov	r0, r7
   10bec:	blx	r3
   10bf0:	cmp	r6, r4
   10bf4:	bne	10bd8 <__libc_csu_init@@Base+0x34>
   10bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bfc:	andeq	r0, r1, r8, asr r3
   10c00:	andeq	r0, r1, r0, asr r3

00010c04 <__libc_csu_fini@@Base>:
   10c04:	bx	lr

Disassembly of section .fini:

00010c08 <.fini>:
   10c08:	push	{r3, lr}
   10c0c:	pop	{r3, pc}
