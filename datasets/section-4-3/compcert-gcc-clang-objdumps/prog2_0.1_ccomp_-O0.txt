
../repos/prog2/0.1:     file format elf32-littlearm


Disassembly of section .init:

0001030c <.init>:
   1030c:	push	{r3, lr}
   10310:	bl	10398 <abort@plt+0x3c>
   10314:	pop	{r3, pc}

Disassembly of section .plt:

00010318 <printf@plt-0x14>:
   10318:	push	{lr}		; (str lr, [sp, #-4]!)
   1031c:	ldr	lr, [pc, #4]	; 10328 <printf@plt-0x4>
   10320:	add	lr, pc, lr
   10324:	ldr	pc, [lr, #8]!
   10328:	ldrdeq	r0, [r1], -r8

0001032c <printf@plt>:
   1032c:	add	ip, pc, #0, 12
   10330:	add	ip, ip, #16, 20	; 0x10000
   10334:	ldr	pc, [ip, #3288]!	; 0xcd8

00010338 <__libc_start_main@plt>:
   10338:	add	ip, pc, #0, 12
   1033c:	add	ip, ip, #16, 20	; 0x10000
   10340:	ldr	pc, [ip, #3280]!	; 0xcd0

00010344 <scanf@plt>:
   10344:	add	ip, pc, #0, 12
   10348:	add	ip, ip, #16, 20	; 0x10000
   1034c:	ldr	pc, [ip, #3272]!	; 0xcc8

00010350 <__gmon_start__@plt>:
   10350:	add	ip, pc, #0, 12
   10354:	add	ip, ip, #16, 20	; 0x10000
   10358:	ldr	pc, [ip, #3264]!	; 0xcc0

0001035c <abort@plt>:
   1035c:	add	ip, pc, #0, 12
   10360:	add	ip, ip, #16, 20	; 0x10000
   10364:	ldr	pc, [ip, #3256]!	; 0xcb8

Disassembly of section .text:

00010368 <.text>:
   10368:	bleq	4c4ac <abort@plt+0x3c150>
   1036c:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10370:	strbtmi	fp, [sl], -r2, lsl #24
   10374:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10378:			; <UNDEFINED> instruction: 0xc010f8df
   1037c:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10380:	blmi	122394 <abort@plt+0x112038>
   10384:	svc	0x00d8f7ff
   10388:	svc	0x00e8f7ff
   1038c:	andeq	r0, r1, r9, asr #10
   10390:	andeq	r0, r1, r8, lsr #8
   10394:	andeq	r0, r1, r9, lsl #10
   10398:	ldr	r3, [pc, #20]	; 103b4 <abort@plt+0x58>
   1039c:	ldr	r2, [pc, #20]	; 103b8 <abort@plt+0x5c>
   103a0:	add	r3, pc, r3
   103a4:	ldr	r2, [r3, r2]
   103a8:	cmp	r2, #0
   103ac:	bxeq	lr
   103b0:	b	10350 <__gmon_start__@plt>
   103b4:	andeq	r0, r1, r8, asr ip
   103b8:	andeq	r0, r0, r0, lsr #32
   103bc:	eoreq	pc, ip, r1, asr #4
   103c0:	andeq	pc, r2, r0, asr #5
   103c4:	msreq	CPSR_fs, #268435460	; 0x10000004
   103c8:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   103cc:	andle	r4, r5, r3, lsl #5
   103d0:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   103d4:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   103d8:	ldrmi	fp, [r8, -r3, lsl #2]
   103dc:	svclt	0x00004770
   103e0:	eoreq	pc, ip, r1, asr #4
   103e4:	andeq	pc, r2, r0, asr #5
   103e8:	msreq	R12_fiq, r1
   103ec:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   103f0:	svceq	0x00d91a0b
   103f4:			; <UNDEFINED> instruction: 0x01a3eb01
   103f8:	andle	r1, r5, r9, asr #32
   103fc:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10400:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10404:	ldrmi	fp, [r8, -r3, lsl #2]
   10408:	svclt	0x00004770
   1040c:	vqrshl.s8	d27, d0, d1
   10410:	vaddhn.i16	d16, q0, q14
   10414:	stmdavc	r3!, {r1, sl}
   10418:			; <UNDEFINED> instruction: 0xf7ffb91b
   1041c:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10420:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10424:	svclt	0x0000e7dc
   10428:	mov	ip, sp
   1042c:	sub	sp, sp, #32
   10430:	str	ip, [sp, #8]
   10434:	str	lr, [sp, #12]
   10438:	ldr	r0, [pc, #180]	; 104f4 <abort@plt+0x198>
   1043c:	bl	1032c <printf@plt>
   10440:	ldr	r0, [pc, #176]	; 104f8 <abort@plt+0x19c>
   10444:	add	r1, sp, #28
   10448:	bl	10344 <scanf@plt>
   1044c:	ldr	r0, [pc, #156]	; 104f0 <abort@plt+0x194>
   10450:	bl	1032c <printf@plt>
   10454:	ldr	r0, [pc, #156]	; 104f8 <abort@plt+0x19c>
   10458:	add	r1, sp, #16
   1045c:	bl	10344 <scanf@plt>
   10460:	ldr	r0, [pc, #144]	; 104f8 <abort@plt+0x19c>
   10464:	add	r1, sp, #20
   10468:	bl	10344 <scanf@plt>
   1046c:	ldr	r0, [pc, #140]	; 10500 <abort@plt+0x1a4>
   10470:	bl	1032c <printf@plt>
   10474:	ldr	r0, [pc, #124]	; 104f8 <abort@plt+0x19c>
   10478:	add	r1, sp, #24
   1047c:	bl	10344 <scanf@plt>
   10480:	vldr	s0, [pc, #124]	; 10504 <abort@plt+0x1a8>
   10484:	vstr	s0, [sp, #16]
   10488:	vldr	s0, [sp, #16]
   1048c:	vldr	s4, [sp, #20]
   10490:	vcmp.f32	s0, s4
   10494:	vmrs	APSR_nzcv, fpscr
   10498:	bhi	104e0 <abort@plt+0x184>
   1049c:	ldr	r0, [pc, #88]	; 104fc <abort@plt+0x1a0>
   104a0:	vldr	s12, [sp, #16]
   104a4:	vcvt.f64.f32	d2, s12
   104a8:	vldr	s0, [sp, #28]
   104ac:	vldr	s2, [sp, #16]
   104b0:	vmul.f32	s8, s0, s2
   104b4:	vldr	s6, [sp, #16]
   104b8:	vmul.f32	s14, s8, s6
   104bc:	vcvt.f64.f32	d5, s14
   104c0:	vstr	d5, [sp]
   104c4:	vmov	r2, r3, d2
   104c8:	bl	1032c <printf@plt>
   104cc:	vldr	s4, [sp, #16]
   104d0:	vldr	s6, [sp, #24]
   104d4:	vadd.f32	s0, s4, s6
   104d8:	vstr	s0, [sp, #16]
   104dc:	b	10488 <abort@plt+0x12c>
   104e0:	mov	r0, #0
   104e4:	ldr	lr, [sp, #12]
   104e8:	add	sp, sp, #32
   104ec:	bx	lr
   104f0:	andeq	r0, r1, sl, lsl #12
   104f4:	andeq	r0, r1, sp, lsl r6
   104f8:	andeq	r0, r1, r1, lsr r6
   104fc:	andeq	r0, r1, r8, ror #11
   10500:	strdeq	r0, [r1], -r6
   10504:	andeq	r0, r0, r0
   10508:	mvnsmi	lr, #737280	; 0xb4000
   1050c:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   10510:	strmi	r4, [r8], ip, lsl #26
   10514:			; <UNDEFINED> instruction: 0x4691447e
   10518:			; <UNDEFINED> instruction: 0xf7ff447d
   1051c:	blne	1dcc104 <abort@plt+0x1dbbda8>
   10520:	strhle	r1, [sl], -r6
   10524:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   10528:	svccc	0x0004f855
   1052c:	strbmi	r4, [r1], -sl, asr #12
   10530:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10534:	adcmi	r4, r6, #152, 14	; 0x2600000
   10538:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   1053c:	svclt	0x000083f8
   10540:	strdeq	r0, [r1], -ip
   10544:	strdeq	r0, [r1], -r4
   10548:	svclt	0x00004770

Disassembly of section .fini:

0001054c <.fini>:
   1054c:	push	{r3, lr}
   10550:	pop	{r3, pc}
