
../compcert-repos/prog2/CMakeFiles/8.dir/Aula08_Grafos_T2/grafo-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_g>:
       0:	push	{r1, r2, r3}
       4:	push	{fp, lr}
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #36	; 0x24
      10:	str	r0, [fp, #-36]	; 0xffffffdc
      14:	mov	r0, #8
      18:	bl	0 <malloc>
      1c:	mov	r3, r0
      20:	str	r3, [fp, #-16]
      24:	add	r3, fp, #8
      28:	str	r3, [fp, #-32]	; 0xffffffe0
      2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
      30:	mov	r1, #8
      34:	mov	r0, r3
      38:	bl	0 <calloc>
      3c:	mov	r3, r0
      40:	mov	r2, r3
      44:	ldr	r3, [fp, #-16]
      48:	str	r2, [r3, #4]
      4c:	mov	r3, #0
      50:	str	r3, [fp, #-12]
      54:	b	108 <_g+0x108>
      58:	ldr	r3, [fp, #-32]	; 0xffffffe0
      5c:	add	r2, r3, #4
      60:	str	r2, [fp, #-32]	; 0xffffffe0
      64:	ldr	r3, [r3]
      68:	str	r3, [fp, #-20]	; 0xffffffec
      6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
      70:	add	r2, r3, #4
      74:	str	r2, [fp, #-32]	; 0xffffffe0
      78:	ldr	r3, [r3]
      7c:	str	r3, [fp, #-24]	; 0xffffffe8
      80:	mov	r1, #8
      84:	mov	r0, #1
      88:	bl	0 <calloc>
      8c:	mov	r3, r0
      90:	str	r3, [fp, #-28]	; 0xffffffe4
      94:	ldr	r3, [fp, #-28]	; 0xffffffe4
      98:	ldr	r2, [fp, #-24]	; 0xffffffe8
      9c:	str	r2, [r3]
      a0:	ldr	r3, [fp, #-16]
      a4:	ldr	r2, [r3, #4]
      a8:	ldr	r3, [fp, #-20]	; 0xffffffec
      ac:	lsl	r3, r3, #3
      b0:	add	r3, r2, r3
      b4:	ldr	r2, [r3, #4]
      b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
      bc:	str	r2, [r3, #4]
      c0:	ldr	r3, [fp, #-16]
      c4:	ldr	r2, [r3, #4]
      c8:	ldr	r3, [fp, #-20]	; 0xffffffec
      cc:	lsl	r3, r3, #3
      d0:	add	r3, r2, r3
      d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
      d8:	str	r2, [r3, #4]
      dc:	ldr	r3, [fp, #-16]
      e0:	ldr	r2, [r3, #4]
      e4:	ldr	r3, [fp, #-20]	; 0xffffffec
      e8:	lsl	r3, r3, #3
      ec:	add	r3, r2, r3
      f0:	ldr	r2, [r3]
      f4:	add	r2, r2, #1
      f8:	str	r2, [r3]
      fc:	ldr	r3, [fp, #-12]
     100:	add	r3, r3, #2
     104:	str	r3, [fp, #-12]
     108:	ldr	r2, [fp, #-12]
     10c:	ldr	r3, [fp, #4]
     110:	cmp	r2, r3
     114:	blt	58 <_g+0x58>
     118:	ldr	r3, [fp, #-16]
     11c:	ldr	r2, [fp, #-36]	; 0xffffffdc
     120:	str	r2, [r3]
     124:	ldr	r3, [fp, #-16]
     128:	mov	r0, r3
     12c:	sub	sp, fp, #4
     130:	pop	{fp, lr}
     134:	add	sp, sp, #12
     138:	bx	lr

0000013c <_f>:
     13c:	push	{fp, lr}
     140:	add	fp, sp, #4
     144:	sub	sp, sp, #16
     148:	str	r0, [fp, #-16]
     14c:	str	r1, [fp, #-20]	; 0xffffffec
     150:	ldr	r3, [fp, #-16]
     154:	cmp	r3, #0
     158:	bne	164 <_f+0x28>
     15c:	mov	r3, #0
     160:	b	1b8 <_f+0x7c>
     164:	mov	r3, #0
     168:	str	r3, [fp, #-8]
     16c:	b	1a0 <_f+0x64>
     170:	ldr	r1, [fp, #-8]
     174:	ldr	r0, [fp, #-16]
     178:	bl	0 <vetor_elemento>
     17c:	mov	r2, r0
     180:	ldr	r3, [fp, #-20]	; 0xffffffec
     184:	cmp	r2, r3
     188:	bne	194 <_f+0x58>
     18c:	mov	r3, #1
     190:	b	1b8 <_f+0x7c>
     194:	ldr	r3, [fp, #-8]
     198:	add	r3, r3, #1
     19c:	str	r3, [fp, #-8]
     1a0:	ldr	r3, [fp, #-16]
     1a4:	ldr	r2, [r3]
     1a8:	ldr	r3, [fp, #-8]
     1ac:	cmp	r2, r3
     1b0:	bgt	170 <_f+0x34>
     1b4:	mov	r3, #0
     1b8:	mov	r0, r3
     1bc:	sub	sp, fp, #4
     1c0:	pop	{fp, pc}

000001c4 <teste_grafo_novo>:
     1c4:	push	{fp, lr}
     1c8:	add	fp, sp, #4
     1cc:	sub	sp, sp, #8
     1d0:	mov	r3, #0
     1d4:	str	r3, [fp, #-8]
     1d8:	ldr	r0, [pc, #304]	; 310 <teste_grafo_novo+0x14c>
     1dc:	bl	0 <printf>
     1e0:	mov	r0, #10
     1e4:	bl	0 <grafo_novo>
     1e8:	str	r0, [fp, #-12]
     1ec:	ldr	r3, [fp, #-12]
     1f0:	cmp	r3, #0
     1f4:	bne	234 <teste_grafo_novo+0x70>
     1f8:	ldr	r0, [pc, #276]	; 314 <teste_grafo_novo+0x150>
     1fc:	bl	0 <printf>
     200:	ldr	r3, [fp, #-8]
     204:	add	r3, r3, #1
     208:	str	r3, [fp, #-8]
     20c:	ldr	r3, [fp, #-8]
     210:	cmp	r3, #0
     214:	bne	224 <teste_grafo_novo+0x60>
     218:	ldr	r0, [pc, #248]	; 318 <teste_grafo_novo+0x154>
     21c:	bl	0 <puts>
     220:	b	22c <teste_grafo_novo+0x68>
     224:	mov	r0, #10
     228:	bl	0 <putchar>
     22c:	ldr	r3, [fp, #-8]
     230:	b	304 <teste_grafo_novo+0x140>
     234:	ldr	r3, [fp, #-12]
     238:	ldr	r3, [r3]
     23c:	cmp	r3, #10
     240:	beq	258 <teste_grafo_novo+0x94>
     244:	ldr	r0, [pc, #208]	; 31c <teste_grafo_novo+0x158>
     248:	bl	0 <printf>
     24c:	ldr	r3, [fp, #-8]
     250:	add	r3, r3, #1
     254:	str	r3, [fp, #-8]
     258:	ldr	r0, [fp, #-12]
     25c:	bl	0 <grafo_apaga>
     260:	mov	r0, #1
     264:	bl	0 <grafo_novo>
     268:	str	r0, [fp, #-12]
     26c:	ldr	r3, [fp, #-12]
     270:	cmp	r3, #0
     274:	bne	2b4 <teste_grafo_novo+0xf0>
     278:	ldr	r0, [pc, #148]	; 314 <teste_grafo_novo+0x150>
     27c:	bl	0 <printf>
     280:	ldr	r3, [fp, #-8]
     284:	add	r3, r3, #1
     288:	str	r3, [fp, #-8]
     28c:	ldr	r3, [fp, #-8]
     290:	cmp	r3, #0
     294:	bne	2a4 <teste_grafo_novo+0xe0>
     298:	ldr	r0, [pc, #120]	; 318 <teste_grafo_novo+0x154>
     29c:	bl	0 <puts>
     2a0:	b	2ac <teste_grafo_novo+0xe8>
     2a4:	mov	r0, #10
     2a8:	bl	0 <putchar>
     2ac:	ldr	r3, [fp, #-8]
     2b0:	b	304 <teste_grafo_novo+0x140>
     2b4:	ldr	r3, [fp, #-12]
     2b8:	ldr	r3, [r3]
     2bc:	cmp	r3, #1
     2c0:	beq	2d8 <teste_grafo_novo+0x114>
     2c4:	ldr	r0, [pc, #84]	; 320 <teste_grafo_novo+0x15c>
     2c8:	bl	0 <printf>
     2cc:	ldr	r3, [fp, #-8]
     2d0:	add	r3, r3, #1
     2d4:	str	r3, [fp, #-8]
     2d8:	ldr	r0, [fp, #-12]
     2dc:	bl	0 <grafo_apaga>
     2e0:	ldr	r3, [fp, #-8]
     2e4:	cmp	r3, #0
     2e8:	bne	2f8 <teste_grafo_novo+0x134>
     2ec:	ldr	r0, [pc, #36]	; 318 <teste_grafo_novo+0x154>
     2f0:	bl	0 <puts>
     2f4:	b	300 <teste_grafo_novo+0x13c>
     2f8:	mov	r0, #10
     2fc:	bl	0 <putchar>
     300:	ldr	r3, [fp, #-8]
     304:	mov	r0, r3
     308:	sub	sp, fp, #4
     30c:	pop	{fp, pc}
     310:	.word	0x00000000
     314:	.word	0x00000010
     318:	.word	0x00000028
     31c:	.word	0x0000002c
     320:	.word	0x00000050

00000324 <teste_grafo_aresta>:
     324:	push	{fp, lr}
     328:	add	fp, sp, #4
     32c:	sub	sp, sp, #88	; 0x58
     330:	mov	r3, #0
     334:	str	r3, [fp, #-8]
     338:	mov	r3, #1
     33c:	str	r3, [sp, #76]	; 0x4c
     340:	mov	r3, #0
     344:	str	r3, [sp, #72]	; 0x48
     348:	mov	r3, #3
     34c:	str	r3, [sp, #68]	; 0x44
     350:	mov	r3, #6
     354:	str	r3, [sp, #64]	; 0x40
     358:	mov	r3, #6
     35c:	str	r3, [sp, #60]	; 0x3c
     360:	mov	r3, #7
     364:	str	r3, [sp, #56]	; 0x38
     368:	mov	r3, #1
     36c:	str	r3, [sp, #52]	; 0x34
     370:	mov	r3, #1
     374:	str	r3, [sp, #48]	; 0x30
     378:	mov	r3, #6
     37c:	str	r3, [sp, #44]	; 0x2c
     380:	mov	r3, #4
     384:	str	r3, [sp, #40]	; 0x28
     388:	mov	r3, #0
     38c:	str	r3, [sp, #36]	; 0x24
     390:	mov	r3, #4
     394:	str	r3, [sp, #32]
     398:	mov	r3, #4
     39c:	str	r3, [sp, #28]
     3a0:	mov	r3, #5
     3a4:	str	r3, [sp, #24]
     3a8:	mov	r3, #5
     3ac:	str	r3, [sp, #20]
     3b0:	mov	r3, #7
     3b4:	str	r3, [sp, #16]
     3b8:	mov	r3, #2
     3bc:	str	r3, [sp, #12]
     3c0:	mov	r3, #0
     3c4:	str	r3, [sp, #8]
     3c8:	mov	r3, #2
     3cc:	str	r3, [sp, #4]
     3d0:	mov	r3, #7
     3d4:	str	r3, [sp]
     3d8:	mov	r3, #2
     3dc:	mov	r2, #3
     3e0:	mov	r1, #22
     3e4:	mov	r0, #8
     3e8:	bl	0 <_g>
     3ec:	str	r0, [fp, #-12]
     3f0:	ldr	r0, [pc, #248]	; 4f0 <teste_grafo_aresta+0x1cc>
     3f4:	bl	0 <printf>
     3f8:	mov	r2, #4
     3fc:	mov	r1, #5
     400:	ldr	r0, [fp, #-12]
     404:	bl	0 <grafo_aresta>
     408:	mov	r3, r0
     40c:	cmp	r3, #1
     410:	beq	428 <teste_grafo_aresta+0x104>
     414:	ldr	r0, [pc, #216]	; 4f4 <teste_grafo_aresta+0x1d0>
     418:	bl	0 <printf>
     41c:	ldr	r3, [fp, #-8]
     420:	add	r3, r3, #1
     424:	str	r3, [fp, #-8]
     428:	mov	r2, #6
     42c:	mov	r1, #7
     430:	ldr	r0, [fp, #-12]
     434:	bl	0 <grafo_aresta>
     438:	mov	r3, r0
     43c:	cmp	r3, #1
     440:	beq	458 <teste_grafo_aresta+0x134>
     444:	ldr	r0, [pc, #168]	; 4f4 <teste_grafo_aresta+0x1d0>
     448:	bl	0 <printf>
     44c:	ldr	r3, [fp, #-8]
     450:	add	r3, r3, #1
     454:	str	r3, [fp, #-8]
     458:	mov	r2, #1
     45c:	mov	r1, #7
     460:	ldr	r0, [fp, #-12]
     464:	bl	0 <grafo_aresta>
     468:	mov	r3, r0
     46c:	cmp	r3, #0
     470:	beq	488 <teste_grafo_aresta+0x164>
     474:	ldr	r0, [pc, #124]	; 4f8 <teste_grafo_aresta+0x1d4>
     478:	bl	0 <printf>
     47c:	ldr	r3, [fp, #-8]
     480:	add	r3, r3, #1
     484:	str	r3, [fp, #-8]
     488:	mov	r2, #7
     48c:	mov	r1, #2
     490:	mov	r0, #0
     494:	bl	0 <grafo_aresta>
     498:	mov	r3, r0
     49c:	cmn	r3, #1
     4a0:	beq	4b8 <teste_grafo_aresta+0x194>
     4a4:	ldr	r0, [pc, #80]	; 4fc <teste_grafo_aresta+0x1d8>
     4a8:	bl	0 <printf>
     4ac:	ldr	r3, [fp, #-8]
     4b0:	add	r3, r3, #1
     4b4:	str	r3, [fp, #-8]
     4b8:	ldr	r0, [fp, #-12]
     4bc:	bl	0 <grafo_apaga>
     4c0:	ldr	r3, [fp, #-8]
     4c4:	cmp	r3, #0
     4c8:	bne	4d8 <teste_grafo_aresta+0x1b4>
     4cc:	ldr	r0, [pc, #44]	; 500 <teste_grafo_aresta+0x1dc>
     4d0:	bl	0 <puts>
     4d4:	b	4e0 <teste_grafo_aresta+0x1bc>
     4d8:	mov	r0, #10
     4dc:	bl	0 <putchar>
     4e0:	ldr	r3, [fp, #-8]
     4e4:	mov	r0, r3
     4e8:	sub	sp, fp, #4
     4ec:	pop	{fp, pc}
     4f0:	.word	0x00000074
     4f4:	.word	0x00000088
     4f8:	.word	0x000000c0
     4fc:	.word	0x000000fc
     500:	.word	0x00000028

00000504 <teste_grafo_adiciona>:
     504:	push	{fp, lr}
     508:	add	fp, sp, #4
     50c:	sub	sp, sp, #16
     510:	mov	r3, #0
     514:	str	r3, [fp, #-8]
     518:	mov	r3, #2
     51c:	str	r3, [sp, #4]
     520:	mov	r3, #7
     524:	str	r3, [sp]
     528:	mov	r3, #2
     52c:	mov	r2, #3
     530:	mov	r1, #4
     534:	mov	r0, #9
     538:	bl	0 <_g>
     53c:	str	r0, [fp, #-12]
     540:	ldr	r0, [pc, #592]	; 798 <teste_grafo_adiciona+0x294>
     544:	bl	0 <printf>
     548:	mov	r2, #7
     54c:	mov	r1, #2
     550:	ldr	r0, [fp, #-12]
     554:	bl	0 <grafo_adiciona>
     558:	mov	r3, r0
     55c:	cmp	r3, #1
     560:	beq	578 <teste_grafo_adiciona+0x74>
     564:	ldr	r0, [pc, #560]	; 79c <teste_grafo_adiciona+0x298>
     568:	bl	0 <printf>
     56c:	ldr	r3, [fp, #-8]
     570:	add	r3, r3, #1
     574:	str	r3, [fp, #-8]
     578:	ldr	r3, [fp, #-12]
     57c:	ldr	r3, [r3, #4]
     580:	add	r3, r3, #16
     584:	ldr	r3, [r3, #4]
     588:	cmp	r3, #0
     58c:	beq	5ac <teste_grafo_adiciona+0xa8>
     590:	ldr	r3, [fp, #-12]
     594:	ldr	r3, [r3, #4]
     598:	add	r3, r3, #16
     59c:	ldr	r3, [r3, #4]
     5a0:	ldr	r3, [r3]
     5a4:	cmp	r3, #7
     5a8:	beq	5c0 <teste_grafo_adiciona+0xbc>
     5ac:	ldr	r0, [pc, #492]	; 7a0 <teste_grafo_adiciona+0x29c>
     5b0:	bl	0 <printf>
     5b4:	ldr	r3, [fp, #-8]
     5b8:	add	r3, r3, #1
     5bc:	str	r3, [fp, #-8]
     5c0:	mov	r2, #8
     5c4:	mov	r1, #3
     5c8:	ldr	r0, [fp, #-12]
     5cc:	bl	0 <grafo_adiciona>
     5d0:	mov	r3, r0
     5d4:	cmp	r3, #1
     5d8:	beq	5f0 <teste_grafo_adiciona+0xec>
     5dc:	ldr	r0, [pc, #440]	; 79c <teste_grafo_adiciona+0x298>
     5e0:	bl	0 <printf>
     5e4:	ldr	r3, [fp, #-8]
     5e8:	add	r3, r3, #1
     5ec:	str	r3, [fp, #-8]
     5f0:	ldr	r3, [fp, #-12]
     5f4:	ldr	r3, [r3, #4]
     5f8:	add	r3, r3, #24
     5fc:	ldr	r3, [r3, #4]
     600:	cmp	r3, #0
     604:	beq	6bc <teste_grafo_adiciona+0x1b8>
     608:	ldr	r3, [fp, #-12]
     60c:	ldr	r3, [r3, #4]
     610:	add	r3, r3, #24
     614:	ldr	r3, [r3, #4]
     618:	ldr	r3, [r3, #4]
     61c:	cmp	r3, #0
     620:	beq	6bc <teste_grafo_adiciona+0x1b8>
     624:	ldr	r3, [fp, #-12]
     628:	ldr	r3, [r3, #4]
     62c:	add	r3, r3, #24
     630:	ldr	r3, [r3, #4]
     634:	ldr	r3, [r3, #4]
     638:	ldr	r3, [r3, #4]
     63c:	cmp	r3, #0
     640:	bne	6bc <teste_grafo_adiciona+0x1b8>
     644:	ldr	r3, [fp, #-12]
     648:	ldr	r3, [r3, #4]
     64c:	add	r3, r3, #24
     650:	ldr	r3, [r3, #4]
     654:	ldr	r3, [r3]
     658:	cmp	r3, #2
     65c:	bne	680 <teste_grafo_adiciona+0x17c>
     660:	ldr	r3, [fp, #-12]
     664:	ldr	r3, [r3, #4]
     668:	add	r3, r3, #24
     66c:	ldr	r3, [r3, #4]
     670:	ldr	r3, [r3, #4]
     674:	ldr	r3, [r3]
     678:	cmp	r3, #8
     67c:	beq	6d0 <teste_grafo_adiciona+0x1cc>
     680:	ldr	r3, [fp, #-12]
     684:	ldr	r3, [r3, #4]
     688:	add	r3, r3, #24
     68c:	ldr	r3, [r3, #4]
     690:	ldr	r3, [r3]
     694:	cmp	r3, #8
     698:	bne	6bc <teste_grafo_adiciona+0x1b8>
     69c:	ldr	r3, [fp, #-12]
     6a0:	ldr	r3, [r3, #4]
     6a4:	add	r3, r3, #24
     6a8:	ldr	r3, [r3, #4]
     6ac:	ldr	r3, [r3, #4]
     6b0:	ldr	r3, [r3]
     6b4:	cmp	r3, #2
     6b8:	beq	6d0 <teste_grafo_adiciona+0x1cc>
     6bc:	ldr	r0, [pc, #224]	; 7a4 <teste_grafo_adiciona+0x2a0>
     6c0:	bl	0 <printf>
     6c4:	ldr	r3, [fp, #-8]
     6c8:	add	r3, r3, #1
     6cc:	str	r3, [fp, #-8]
     6d0:	mov	r2, #7
     6d4:	mov	r1, #2
     6d8:	ldr	r0, [fp, #-12]
     6dc:	bl	0 <grafo_adiciona>
     6e0:	mov	r3, r0
     6e4:	cmp	r3, #0
     6e8:	beq	700 <teste_grafo_adiciona+0x1fc>
     6ec:	ldr	r0, [pc, #180]	; 7a8 <teste_grafo_adiciona+0x2a4>
     6f0:	bl	0 <printf>
     6f4:	ldr	r3, [fp, #-8]
     6f8:	add	r3, r3, #1
     6fc:	str	r3, [fp, #-8]
     700:	mov	r2, #7
     704:	mov	r1, #22
     708:	ldr	r0, [fp, #-12]
     70c:	bl	0 <grafo_adiciona>
     710:	mov	r3, r0
     714:	cmn	r3, #1
     718:	beq	730 <teste_grafo_adiciona+0x22c>
     71c:	ldr	r0, [pc, #136]	; 7ac <teste_grafo_adiciona+0x2a8>
     720:	bl	0 <printf>
     724:	ldr	r3, [fp, #-8]
     728:	add	r3, r3, #1
     72c:	str	r3, [fp, #-8]
     730:	mov	r2, #7
     734:	mov	r1, #2
     738:	mov	r0, #0
     73c:	bl	0 <grafo_adiciona>
     740:	mov	r3, r0
     744:	cmn	r3, #1
     748:	beq	760 <teste_grafo_adiciona+0x25c>
     74c:	ldr	r0, [pc, #92]	; 7b0 <teste_grafo_adiciona+0x2ac>
     750:	bl	0 <printf>
     754:	ldr	r3, [fp, #-8]
     758:	add	r3, r3, #1
     75c:	str	r3, [fp, #-8]
     760:	ldr	r0, [fp, #-12]
     764:	bl	0 <grafo_apaga>
     768:	ldr	r3, [fp, #-8]
     76c:	cmp	r3, #0
     770:	bne	780 <teste_grafo_adiciona+0x27c>
     774:	ldr	r0, [pc, #56]	; 7b4 <teste_grafo_adiciona+0x2b0>
     778:	bl	0 <puts>
     77c:	b	788 <teste_grafo_adiciona+0x284>
     780:	mov	r0, #10
     784:	bl	0 <putchar>
     788:	ldr	r3, [fp, #-8]
     78c:	mov	r0, r3
     790:	sub	sp, fp, #4
     794:	pop	{fp, pc}
     798:	.word	0x00000134
     79c:	.word	0x00000148
     7a0:	.word	0x00000184
     7a4:	.word	0x000001b4
     7a8:	.word	0x000001f0
     7ac:	.word	0x00000228
     7b0:	.word	0x00000260
     7b4:	.word	0x00000028

000007b8 <teste_grafo_remove>:
     7b8:	push	{fp, lr}
     7bc:	add	fp, sp, #4
     7c0:	sub	sp, sp, #24
     7c4:	mov	r3, #0
     7c8:	str	r3, [fp, #-8]
     7cc:	mov	r3, #1
     7d0:	str	r3, [sp, #12]
     7d4:	mov	r3, #7
     7d8:	str	r3, [sp, #8]
     7dc:	mov	r3, #2
     7e0:	str	r3, [sp, #4]
     7e4:	mov	r3, #7
     7e8:	str	r3, [sp]
     7ec:	mov	r3, #2
     7f0:	mov	r2, #3
     7f4:	mov	r1, #6
     7f8:	mov	r0, #9
     7fc:	bl	0 <_g>
     800:	str	r0, [fp, #-12]
     804:	ldr	r0, [pc, #392]	; 994 <teste_grafo_remove+0x1dc>
     808:	bl	0 <printf>
     80c:	mov	r2, #1
     810:	mov	r1, #7
     814:	ldr	r0, [fp, #-12]
     818:	bl	0 <grafo_remove>
     81c:	mov	r3, r0
     820:	cmp	r3, #1
     824:	beq	83c <teste_grafo_remove+0x84>
     828:	ldr	r0, [pc, #360]	; 998 <teste_grafo_remove+0x1e0>
     82c:	bl	0 <printf>
     830:	ldr	r3, [fp, #-8]
     834:	add	r3, r3, #1
     838:	str	r3, [fp, #-8]
     83c:	ldr	r3, [fp, #-12]
     840:	ldr	r3, [r3, #4]
     844:	add	r3, r3, #56	; 0x38
     848:	ldr	r3, [r3, #4]
     84c:	cmp	r3, #0
     850:	beq	88c <teste_grafo_remove+0xd4>
     854:	ldr	r3, [fp, #-12]
     858:	ldr	r3, [r3, #4]
     85c:	add	r3, r3, #56	; 0x38
     860:	ldr	r3, [r3, #4]
     864:	ldr	r3, [r3, #4]
     868:	cmp	r3, #0
     86c:	bne	88c <teste_grafo_remove+0xd4>
     870:	ldr	r3, [fp, #-12]
     874:	ldr	r3, [r3, #4]
     878:	add	r3, r3, #56	; 0x38
     87c:	ldr	r3, [r3, #4]
     880:	ldr	r3, [r3]
     884:	cmp	r3, #2
     888:	beq	8a0 <teste_grafo_remove+0xe8>
     88c:	ldr	r0, [pc, #264]	; 99c <teste_grafo_remove+0x1e4>
     890:	bl	0 <printf>
     894:	ldr	r3, [fp, #-8]
     898:	add	r3, r3, #1
     89c:	str	r3, [fp, #-8]
     8a0:	mov	r2, #2
     8a4:	mov	r1, #7
     8a8:	ldr	r0, [fp, #-12]
     8ac:	bl	0 <grafo_remove>
     8b0:	mov	r3, r0
     8b4:	cmp	r3, #1
     8b8:	beq	8d0 <teste_grafo_remove+0x118>
     8bc:	ldr	r0, [pc, #212]	; 998 <teste_grafo_remove+0x1e0>
     8c0:	bl	0 <printf>
     8c4:	ldr	r3, [fp, #-8]
     8c8:	add	r3, r3, #1
     8cc:	str	r3, [fp, #-8]
     8d0:	ldr	r3, [fp, #-12]
     8d4:	ldr	r3, [r3, #4]
     8d8:	add	r3, r3, #56	; 0x38
     8dc:	ldr	r3, [r3, #4]
     8e0:	cmp	r3, #0
     8e4:	beq	8fc <teste_grafo_remove+0x144>
     8e8:	ldr	r0, [pc, #172]	; 99c <teste_grafo_remove+0x1e4>
     8ec:	bl	0 <printf>
     8f0:	ldr	r3, [fp, #-8]
     8f4:	add	r3, r3, #1
     8f8:	str	r3, [fp, #-8]
     8fc:	mov	r2, #0
     900:	mov	r1, #4
     904:	ldr	r0, [fp, #-12]
     908:	bl	0 <grafo_remove>
     90c:	mov	r3, r0
     910:	cmp	r3, #0
     914:	beq	92c <teste_grafo_remove+0x174>
     918:	ldr	r0, [pc, #128]	; 9a0 <teste_grafo_remove+0x1e8>
     91c:	bl	0 <printf>
     920:	ldr	r3, [fp, #-8]
     924:	add	r3, r3, #1
     928:	str	r3, [fp, #-8]
     92c:	mov	r2, #22
     930:	mov	r1, #7
     934:	ldr	r0, [fp, #-12]
     938:	bl	0 <grafo_remove>
     93c:	mov	r3, r0
     940:	cmn	r3, #1
     944:	beq	95c <teste_grafo_remove+0x1a4>
     948:	ldr	r0, [pc, #84]	; 9a4 <teste_grafo_remove+0x1ec>
     94c:	bl	0 <printf>
     950:	ldr	r3, [fp, #-8]
     954:	add	r3, r3, #1
     958:	str	r3, [fp, #-8]
     95c:	ldr	r0, [fp, #-12]
     960:	bl	0 <grafo_apaga>
     964:	ldr	r3, [fp, #-8]
     968:	cmp	r3, #0
     96c:	bne	97c <teste_grafo_remove+0x1c4>
     970:	ldr	r0, [pc, #48]	; 9a8 <teste_grafo_remove+0x1f0>
     974:	bl	0 <puts>
     978:	b	984 <teste_grafo_remove+0x1cc>
     97c:	mov	r0, #10
     980:	bl	0 <putchar>
     984:	ldr	r3, [fp, #-8]
     988:	mov	r0, r3
     98c:	sub	sp, fp, #4
     990:	pop	{fp, pc}
     994:	.word	0x00000298
     998:	.word	0x000002ac
     99c:	.word	0x000002e8
     9a0:	.word	0x00000324
     9a4:	.word	0x00000360
     9a8:	.word	0x00000028

000009ac <teste_v_sucessores>:
     9ac:	push	{fp, lr}
     9b0:	add	fp, sp, #4
     9b4:	sub	sp, sp, #96	; 0x60
     9b8:	mov	r3, #0
     9bc:	str	r3, [fp, #-8]
     9c0:	mov	r3, #1
     9c4:	str	r3, [sp, #76]	; 0x4c
     9c8:	mov	r3, #0
     9cc:	str	r3, [sp, #72]	; 0x48
     9d0:	mov	r3, #3
     9d4:	str	r3, [sp, #68]	; 0x44
     9d8:	mov	r3, #6
     9dc:	str	r3, [sp, #64]	; 0x40
     9e0:	mov	r3, #6
     9e4:	str	r3, [sp, #60]	; 0x3c
     9e8:	mov	r3, #7
     9ec:	str	r3, [sp, #56]	; 0x38
     9f0:	mov	r3, #1
     9f4:	str	r3, [sp, #52]	; 0x34
     9f8:	mov	r3, #1
     9fc:	str	r3, [sp, #48]	; 0x30
     a00:	mov	r3, #6
     a04:	str	r3, [sp, #44]	; 0x2c
     a08:	mov	r3, #4
     a0c:	str	r3, [sp, #40]	; 0x28
     a10:	mov	r3, #0
     a14:	str	r3, [sp, #36]	; 0x24
     a18:	mov	r3, #4
     a1c:	str	r3, [sp, #32]
     a20:	mov	r3, #4
     a24:	str	r3, [sp, #28]
     a28:	mov	r3, #5
     a2c:	str	r3, [sp, #24]
     a30:	mov	r3, #5
     a34:	str	r3, [sp, #20]
     a38:	mov	r3, #7
     a3c:	str	r3, [sp, #16]
     a40:	mov	r3, #2
     a44:	str	r3, [sp, #12]
     a48:	mov	r3, #0
     a4c:	str	r3, [sp, #8]
     a50:	mov	r3, #2
     a54:	str	r3, [sp, #4]
     a58:	mov	r3, #7
     a5c:	str	r3, [sp]
     a60:	mov	r3, #2
     a64:	mov	r2, #3
     a68:	mov	r1, #22
     a6c:	mov	r0, #8
     a70:	bl	0 <_g>
     a74:	str	r0, [fp, #-12]
     a78:	ldr	r0, [pc, #436]	; c34 <teste_v_sucessores+0x288>
     a7c:	bl	0 <printf>
     a80:	mov	r1, #7
     a84:	ldr	r0, [fp, #-12]
     a88:	bl	0 <v_sucessores>
     a8c:	str	r0, [fp, #-16]
     a90:	ldr	r3, [fp, #-16]
     a94:	cmp	r3, #0
     a98:	bne	ab0 <teste_v_sucessores+0x104>
     a9c:	ldr	r0, [pc, #404]	; c38 <teste_v_sucessores+0x28c>
     aa0:	bl	0 <printf>
     aa4:	ldr	r3, [fp, #-8]
     aa8:	add	r3, r3, #1
     aac:	str	r3, [fp, #-8]
     ab0:	ldr	r3, [fp, #-16]
     ab4:	cmp	r3, #0
     ab8:	bne	ae4 <teste_v_sucessores+0x138>
     abc:	ldr	r3, [fp, #-8]
     ac0:	cmp	r3, #0
     ac4:	bne	ad4 <teste_v_sucessores+0x128>
     ac8:	ldr	r0, [pc, #364]	; c3c <teste_v_sucessores+0x290>
     acc:	bl	0 <puts>
     ad0:	b	adc <teste_v_sucessores+0x130>
     ad4:	mov	r0, #10
     ad8:	bl	0 <putchar>
     adc:	ldr	r3, [fp, #-8]
     ae0:	b	c28 <teste_v_sucessores+0x27c>
     ae4:	ldr	r3, [fp, #-16]
     ae8:	ldr	r3, [r3]
     aec:	cmp	r3, #3
     af0:	beq	b08 <teste_v_sucessores+0x15c>
     af4:	ldr	r0, [pc, #324]	; c40 <teste_v_sucessores+0x294>
     af8:	bl	0 <printf>
     afc:	ldr	r3, [fp, #-8]
     b00:	add	r3, r3, #1
     b04:	str	r3, [fp, #-8]
     b08:	mov	r1, #2
     b0c:	ldr	r0, [fp, #-16]
     b10:	bl	13c <_f>
     b14:	mov	r3, r0
     b18:	cmp	r3, #0
     b1c:	beq	b50 <teste_v_sucessores+0x1a4>
     b20:	mov	r1, #5
     b24:	ldr	r0, [fp, #-16]
     b28:	bl	13c <_f>
     b2c:	mov	r3, r0
     b30:	cmp	r3, #0
     b34:	beq	b50 <teste_v_sucessores+0x1a4>
     b38:	mov	r1, #6
     b3c:	ldr	r0, [fp, #-16]
     b40:	bl	13c <_f>
     b44:	mov	r3, r0
     b48:	cmp	r3, #0
     b4c:	bne	b64 <teste_v_sucessores+0x1b8>
     b50:	ldr	r0, [pc, #236]	; c44 <teste_v_sucessores+0x298>
     b54:	bl	0 <printf>
     b58:	ldr	r3, [fp, #-8]
     b5c:	add	r3, r3, #1
     b60:	str	r3, [fp, #-8]
     b64:	ldr	r0, [fp, #-16]
     b68:	bl	0 <vetor_apaga>
     b6c:	mov	r1, #2
     b70:	ldr	r0, [fp, #-12]
     b74:	bl	0 <v_sucessores>
     b78:	str	r0, [fp, #-16]
     b7c:	ldr	r3, [fp, #-16]
     b80:	cmp	r3, #0
     b84:	bne	b9c <teste_v_sucessores+0x1f0>
     b88:	ldr	r0, [pc, #184]	; c48 <teste_v_sucessores+0x29c>
     b8c:	bl	0 <printf>
     b90:	ldr	r3, [fp, #-8]
     b94:	add	r3, r3, #1
     b98:	str	r3, [fp, #-8]
     b9c:	ldr	r3, [fp, #-16]
     ba0:	cmp	r3, #0
     ba4:	bne	bd0 <teste_v_sucessores+0x224>
     ba8:	ldr	r3, [fp, #-8]
     bac:	cmp	r3, #0
     bb0:	bne	bc0 <teste_v_sucessores+0x214>
     bb4:	ldr	r0, [pc, #128]	; c3c <teste_v_sucessores+0x290>
     bb8:	bl	0 <puts>
     bbc:	b	bc8 <teste_v_sucessores+0x21c>
     bc0:	mov	r0, #10
     bc4:	bl	0 <putchar>
     bc8:	ldr	r3, [fp, #-8]
     bcc:	b	c28 <teste_v_sucessores+0x27c>
     bd0:	ldr	r3, [fp, #-16]
     bd4:	ldr	r3, [r3]
     bd8:	cmp	r3, #0
     bdc:	beq	bf4 <teste_v_sucessores+0x248>
     be0:	ldr	r0, [pc, #100]	; c4c <teste_v_sucessores+0x2a0>
     be4:	bl	0 <printf>
     be8:	ldr	r3, [fp, #-8]
     bec:	add	r3, r3, #1
     bf0:	str	r3, [fp, #-8]
     bf4:	ldr	r0, [fp, #-16]
     bf8:	bl	0 <vetor_apaga>
     bfc:	ldr	r0, [fp, #-12]
     c00:	bl	0 <grafo_apaga>
     c04:	ldr	r3, [fp, #-8]
     c08:	cmp	r3, #0
     c0c:	bne	c1c <teste_v_sucessores+0x270>
     c10:	ldr	r0, [pc, #36]	; c3c <teste_v_sucessores+0x290>
     c14:	bl	0 <puts>
     c18:	b	c24 <teste_v_sucessores+0x278>
     c1c:	mov	r0, #10
     c20:	bl	0 <putchar>
     c24:	ldr	r3, [fp, #-8]
     c28:	mov	r0, r3
     c2c:	sub	sp, fp, #4
     c30:	pop	{fp, pc}
     c34:	.word	0x00000398
     c38:	.word	0x000003ac
     c3c:	.word	0x00000028
     c40:	.word	0x000003dc
     c44:	.word	0x00000408
     c48:	.word	0x00000434
     c4c:	.word	0x00000474

00000c50 <teste_v_antecessores>:
     c50:	push	{fp, lr}
     c54:	add	fp, sp, #4
     c58:	sub	sp, sp, #96	; 0x60
     c5c:	mov	r3, #0
     c60:	str	r3, [fp, #-8]
     c64:	mov	r3, #1
     c68:	str	r3, [sp, #76]	; 0x4c
     c6c:	mov	r3, #0
     c70:	str	r3, [sp, #72]	; 0x48
     c74:	mov	r3, #3
     c78:	str	r3, [sp, #68]	; 0x44
     c7c:	mov	r3, #6
     c80:	str	r3, [sp, #64]	; 0x40
     c84:	mov	r3, #6
     c88:	str	r3, [sp, #60]	; 0x3c
     c8c:	mov	r3, #7
     c90:	str	r3, [sp, #56]	; 0x38
     c94:	mov	r3, #1
     c98:	str	r3, [sp, #52]	; 0x34
     c9c:	mov	r3, #1
     ca0:	str	r3, [sp, #48]	; 0x30
     ca4:	mov	r3, #6
     ca8:	str	r3, [sp, #44]	; 0x2c
     cac:	mov	r3, #4
     cb0:	str	r3, [sp, #40]	; 0x28
     cb4:	mov	r3, #0
     cb8:	str	r3, [sp, #36]	; 0x24
     cbc:	mov	r3, #4
     cc0:	str	r3, [sp, #32]
     cc4:	mov	r3, #4
     cc8:	str	r3, [sp, #28]
     ccc:	mov	r3, #5
     cd0:	str	r3, [sp, #24]
     cd4:	mov	r3, #5
     cd8:	str	r3, [sp, #20]
     cdc:	mov	r3, #7
     ce0:	str	r3, [sp, #16]
     ce4:	mov	r3, #2
     ce8:	str	r3, [sp, #12]
     cec:	mov	r3, #0
     cf0:	str	r3, [sp, #8]
     cf4:	mov	r3, #2
     cf8:	str	r3, [sp, #4]
     cfc:	mov	r3, #7
     d00:	str	r3, [sp]
     d04:	mov	r3, #2
     d08:	mov	r2, #3
     d0c:	mov	r1, #22
     d10:	mov	r0, #8
     d14:	bl	0 <_g>
     d18:	str	r0, [fp, #-12]
     d1c:	ldr	r0, [pc, #436]	; ed8 <teste_v_antecessores+0x288>
     d20:	bl	0 <printf>
     d24:	mov	r1, #2
     d28:	ldr	r0, [fp, #-12]
     d2c:	bl	0 <v_antecessores>
     d30:	str	r0, [fp, #-16]
     d34:	ldr	r3, [fp, #-16]
     d38:	cmp	r3, #0
     d3c:	bne	d54 <teste_v_antecessores+0x104>
     d40:	ldr	r0, [pc, #404]	; edc <teste_v_antecessores+0x28c>
     d44:	bl	0 <printf>
     d48:	ldr	r3, [fp, #-8]
     d4c:	add	r3, r3, #1
     d50:	str	r3, [fp, #-8]
     d54:	ldr	r3, [fp, #-16]
     d58:	cmp	r3, #0
     d5c:	bne	d88 <teste_v_antecessores+0x138>
     d60:	ldr	r3, [fp, #-8]
     d64:	cmp	r3, #0
     d68:	bne	d78 <teste_v_antecessores+0x128>
     d6c:	ldr	r0, [pc, #364]	; ee0 <teste_v_antecessores+0x290>
     d70:	bl	0 <puts>
     d74:	b	d80 <teste_v_antecessores+0x130>
     d78:	mov	r0, #10
     d7c:	bl	0 <putchar>
     d80:	ldr	r3, [fp, #-8]
     d84:	b	ecc <teste_v_antecessores+0x27c>
     d88:	ldr	r3, [fp, #-16]
     d8c:	ldr	r3, [r3]
     d90:	cmp	r3, #3
     d94:	beq	dac <teste_v_antecessores+0x15c>
     d98:	ldr	r0, [pc, #324]	; ee4 <teste_v_antecessores+0x294>
     d9c:	bl	0 <printf>
     da0:	ldr	r3, [fp, #-8]
     da4:	add	r3, r3, #1
     da8:	str	r3, [fp, #-8]
     dac:	mov	r1, #0
     db0:	ldr	r0, [fp, #-16]
     db4:	bl	13c <_f>
     db8:	mov	r3, r0
     dbc:	cmp	r3, #0
     dc0:	beq	df4 <teste_v_antecessores+0x1a4>
     dc4:	mov	r1, #3
     dc8:	ldr	r0, [fp, #-16]
     dcc:	bl	13c <_f>
     dd0:	mov	r3, r0
     dd4:	cmp	r3, #0
     dd8:	beq	df4 <teste_v_antecessores+0x1a4>
     ddc:	mov	r1, #7
     de0:	ldr	r0, [fp, #-16]
     de4:	bl	13c <_f>
     de8:	mov	r3, r0
     dec:	cmp	r3, #0
     df0:	bne	e08 <teste_v_antecessores+0x1b8>
     df4:	ldr	r0, [pc, #236]	; ee8 <teste_v_antecessores+0x298>
     df8:	bl	0 <printf>
     dfc:	ldr	r3, [fp, #-8]
     e00:	add	r3, r3, #1
     e04:	str	r3, [fp, #-8]
     e08:	ldr	r0, [fp, #-16]
     e0c:	bl	0 <vetor_apaga>
     e10:	mov	r1, #7
     e14:	ldr	r0, [fp, #-12]
     e18:	bl	0 <v_antecessores>
     e1c:	str	r0, [fp, #-16]
     e20:	ldr	r3, [fp, #-16]
     e24:	cmp	r3, #0
     e28:	bne	e40 <teste_v_antecessores+0x1f0>
     e2c:	ldr	r0, [pc, #184]	; eec <teste_v_antecessores+0x29c>
     e30:	bl	0 <printf>
     e34:	ldr	r3, [fp, #-8]
     e38:	add	r3, r3, #1
     e3c:	str	r3, [fp, #-8]
     e40:	ldr	r3, [fp, #-16]
     e44:	cmp	r3, #0
     e48:	bne	e74 <teste_v_antecessores+0x224>
     e4c:	ldr	r3, [fp, #-8]
     e50:	cmp	r3, #0
     e54:	bne	e64 <teste_v_antecessores+0x214>
     e58:	ldr	r0, [pc, #128]	; ee0 <teste_v_antecessores+0x290>
     e5c:	bl	0 <puts>
     e60:	b	e6c <teste_v_antecessores+0x21c>
     e64:	mov	r0, #10
     e68:	bl	0 <putchar>
     e6c:	ldr	r3, [fp, #-8]
     e70:	b	ecc <teste_v_antecessores+0x27c>
     e74:	ldr	r3, [fp, #-16]
     e78:	ldr	r3, [r3]
     e7c:	cmp	r3, #0
     e80:	beq	e98 <teste_v_antecessores+0x248>
     e84:	ldr	r0, [pc, #100]	; ef0 <teste_v_antecessores+0x2a0>
     e88:	bl	0 <printf>
     e8c:	ldr	r3, [fp, #-8]
     e90:	add	r3, r3, #1
     e94:	str	r3, [fp, #-8]
     e98:	ldr	r0, [fp, #-16]
     e9c:	bl	0 <vetor_apaga>
     ea0:	ldr	r0, [fp, #-12]
     ea4:	bl	0 <grafo_apaga>
     ea8:	ldr	r3, [fp, #-8]
     eac:	cmp	r3, #0
     eb0:	bne	ec0 <teste_v_antecessores+0x270>
     eb4:	ldr	r0, [pc, #36]	; ee0 <teste_v_antecessores+0x290>
     eb8:	bl	0 <puts>
     ebc:	b	ec8 <teste_v_antecessores+0x278>
     ec0:	mov	r0, #10
     ec4:	bl	0 <putchar>
     ec8:	ldr	r3, [fp, #-8]
     ecc:	mov	r0, r3
     ed0:	sub	sp, fp, #4
     ed4:	pop	{fp, pc}
     ed8:	.word	0x000004a4
     edc:	.word	0x000004b8
     ee0:	.word	0x00000028
     ee4:	.word	0x000004e8
     ee8:	.word	0x00000518
     eec:	.word	0x00000548
     ef0:	.word	0x00000588

00000ef4 <teste_v_grau>:
     ef4:	push	{fp, lr}
     ef8:	add	fp, sp, #4
     efc:	sub	sp, sp, #88	; 0x58
     f00:	mov	r3, #0
     f04:	str	r3, [fp, #-8]
     f08:	mov	r3, #1
     f0c:	str	r3, [sp, #76]	; 0x4c
     f10:	mov	r3, #0
     f14:	str	r3, [sp, #72]	; 0x48
     f18:	mov	r3, #3
     f1c:	str	r3, [sp, #68]	; 0x44
     f20:	mov	r3, #6
     f24:	str	r3, [sp, #64]	; 0x40
     f28:	mov	r3, #6
     f2c:	str	r3, [sp, #60]	; 0x3c
     f30:	mov	r3, #7
     f34:	str	r3, [sp, #56]	; 0x38
     f38:	mov	r3, #1
     f3c:	str	r3, [sp, #52]	; 0x34
     f40:	mov	r3, #1
     f44:	str	r3, [sp, #48]	; 0x30
     f48:	mov	r3, #6
     f4c:	str	r3, [sp, #44]	; 0x2c
     f50:	mov	r3, #4
     f54:	str	r3, [sp, #40]	; 0x28
     f58:	mov	r3, #0
     f5c:	str	r3, [sp, #36]	; 0x24
     f60:	mov	r3, #4
     f64:	str	r3, [sp, #32]
     f68:	mov	r3, #4
     f6c:	str	r3, [sp, #28]
     f70:	mov	r3, #5
     f74:	str	r3, [sp, #24]
     f78:	mov	r3, #5
     f7c:	str	r3, [sp, #20]
     f80:	mov	r3, #7
     f84:	str	r3, [sp, #16]
     f88:	mov	r3, #2
     f8c:	str	r3, [sp, #12]
     f90:	mov	r3, #0
     f94:	str	r3, [sp, #8]
     f98:	mov	r3, #2
     f9c:	str	r3, [sp, #4]
     fa0:	mov	r3, #7
     fa4:	str	r3, [sp]
     fa8:	mov	r3, #2
     fac:	mov	r2, #3
     fb0:	mov	r1, #22
     fb4:	mov	r0, #8
     fb8:	bl	0 <_g>
     fbc:	str	r0, [fp, #-12]
     fc0:	ldr	r0, [pc, #188]	; 1084 <teste_v_grau+0x190>
     fc4:	bl	0 <printf>
     fc8:	mvn	r1, #3
     fcc:	ldr	r0, [fp, #-12]
     fd0:	bl	0 <v_grau>
     fd4:	mov	r3, r0
     fd8:	cmn	r3, #1
     fdc:	beq	ff4 <teste_v_grau+0x100>
     fe0:	ldr	r0, [pc, #160]	; 1088 <teste_v_grau+0x194>
     fe4:	bl	0 <printf>
     fe8:	ldr	r3, [fp, #-8]
     fec:	add	r3, r3, #1
     ff0:	str	r3, [fp, #-8]
     ff4:	mov	r1, #7
     ff8:	ldr	r0, [fp, #-12]
     ffc:	bl	0 <v_grau>
    1000:	mov	r3, r0
    1004:	cmp	r3, #3
    1008:	beq	1020 <teste_v_grau+0x12c>
    100c:	ldr	r0, [pc, #120]	; 108c <teste_v_grau+0x198>
    1010:	bl	0 <printf>
    1014:	ldr	r3, [fp, #-8]
    1018:	add	r3, r3, #1
    101c:	str	r3, [fp, #-8]
    1020:	mov	r1, #5
    1024:	ldr	r0, [fp, #-12]
    1028:	bl	0 <v_grau>
    102c:	mov	r3, r0
    1030:	cmp	r3, #2
    1034:	beq	104c <teste_v_grau+0x158>
    1038:	ldr	r0, [pc, #80]	; 1090 <teste_v_grau+0x19c>
    103c:	bl	0 <printf>
    1040:	ldr	r3, [fp, #-8]
    1044:	add	r3, r3, #1
    1048:	str	r3, [fp, #-8]
    104c:	ldr	r0, [fp, #-12]
    1050:	bl	0 <grafo_apaga>
    1054:	ldr	r3, [fp, #-8]
    1058:	cmp	r3, #0
    105c:	bne	106c <teste_v_grau+0x178>
    1060:	ldr	r0, [pc, #44]	; 1094 <teste_v_grau+0x1a0>
    1064:	bl	0 <puts>
    1068:	b	1074 <teste_v_grau+0x180>
    106c:	mov	r0, #10
    1070:	bl	0 <putchar>
    1074:	ldr	r3, [fp, #-8]
    1078:	mov	r0, r3
    107c:	sub	sp, fp, #4
    1080:	pop	{fp, pc}
    1084:	.word	0x000005b8
    1088:	.word	0x000005c4
    108c:	.word	0x000005f4
    1090:	.word	0x00000624
    1094:	.word	0x00000028

00001098 <teste_v_celebridade>:
    1098:	push	{fp, lr}
    109c:	add	fp, sp, #4
    10a0:	sub	sp, sp, #120	; 0x78
    10a4:	mov	r3, #0
    10a8:	str	r3, [fp, #-8]
    10ac:	mov	r3, #2
    10b0:	str	r3, [sp, #108]	; 0x6c
    10b4:	mov	r3, #5
    10b8:	str	r3, [sp, #104]	; 0x68
    10bc:	mov	r3, #2
    10c0:	str	r3, [sp, #100]	; 0x64
    10c4:	mov	r3, #4
    10c8:	str	r3, [sp, #96]	; 0x60
    10cc:	mov	r3, #2
    10d0:	str	r3, [sp, #92]	; 0x5c
    10d4:	mov	r3, #6
    10d8:	str	r3, [sp, #88]	; 0x58
    10dc:	mov	r3, #2
    10e0:	str	r3, [sp, #84]	; 0x54
    10e4:	mov	r3, #1
    10e8:	str	r3, [sp, #80]	; 0x50
    10ec:	mov	r3, #1
    10f0:	str	r3, [sp, #76]	; 0x4c
    10f4:	mov	r3, #0
    10f8:	str	r3, [sp, #72]	; 0x48
    10fc:	mov	r3, #3
    1100:	str	r3, [sp, #68]	; 0x44
    1104:	mov	r3, #6
    1108:	str	r3, [sp, #64]	; 0x40
    110c:	mov	r3, #6
    1110:	str	r3, [sp, #60]	; 0x3c
    1114:	mov	r3, #7
    1118:	str	r3, [sp, #56]	; 0x38
    111c:	mov	r3, #1
    1120:	str	r3, [sp, #52]	; 0x34
    1124:	mov	r3, #1
    1128:	str	r3, [sp, #48]	; 0x30
    112c:	mov	r3, #6
    1130:	str	r3, [sp, #44]	; 0x2c
    1134:	mov	r3, #4
    1138:	str	r3, [sp, #40]	; 0x28
    113c:	mov	r3, #0
    1140:	str	r3, [sp, #36]	; 0x24
    1144:	mov	r3, #4
    1148:	str	r3, [sp, #32]
    114c:	mov	r3, #4
    1150:	str	r3, [sp, #28]
    1154:	mov	r3, #5
    1158:	str	r3, [sp, #24]
    115c:	mov	r3, #5
    1160:	str	r3, [sp, #20]
    1164:	mov	r3, #7
    1168:	str	r3, [sp, #16]
    116c:	mov	r3, #2
    1170:	str	r3, [sp, #12]
    1174:	mov	r3, #0
    1178:	str	r3, [sp, #8]
    117c:	mov	r3, #2
    1180:	str	r3, [sp, #4]
    1184:	mov	r3, #7
    1188:	str	r3, [sp]
    118c:	mov	r3, #2
    1190:	mov	r2, #3
    1194:	mov	r1, #30
    1198:	mov	r0, #8
    119c:	bl	0 <_g>
    11a0:	str	r0, [fp, #-12]
    11a4:	ldr	r0, [pc, #144]	; 123c <teste_v_celebridade+0x1a4>
    11a8:	bl	0 <printf>
    11ac:	mov	r1, #7
    11b0:	ldr	r0, [fp, #-12]
    11b4:	bl	0 <v_celebridade>
    11b8:	mov	r3, r0
    11bc:	cmp	r3, #0
    11c0:	beq	11d8 <teste_v_celebridade+0x140>
    11c4:	ldr	r0, [pc, #116]	; 1240 <teste_v_celebridade+0x1a8>
    11c8:	bl	0 <printf>
    11cc:	ldr	r3, [fp, #-8]
    11d0:	add	r3, r3, #1
    11d4:	str	r3, [fp, #-8]
    11d8:	mov	r1, #2
    11dc:	ldr	r0, [fp, #-12]
    11e0:	bl	0 <v_celebridade>
    11e4:	mov	r3, r0
    11e8:	cmp	r3, #1
    11ec:	beq	1204 <teste_v_celebridade+0x16c>
    11f0:	ldr	r0, [pc, #76]	; 1244 <teste_v_celebridade+0x1ac>
    11f4:	bl	0 <printf>
    11f8:	ldr	r3, [fp, #-8]
    11fc:	add	r3, r3, #1
    1200:	str	r3, [fp, #-8]
    1204:	ldr	r0, [fp, #-12]
    1208:	bl	0 <grafo_apaga>
    120c:	ldr	r3, [fp, #-8]
    1210:	cmp	r3, #0
    1214:	bne	1224 <teste_v_celebridade+0x18c>
    1218:	ldr	r0, [pc, #40]	; 1248 <teste_v_celebridade+0x1b0>
    121c:	bl	0 <puts>
    1220:	b	122c <teste_v_celebridade+0x194>
    1224:	mov	r0, #10
    1228:	bl	0 <putchar>
    122c:	ldr	r3, [fp, #-8]
    1230:	mov	r0, r3
    1234:	sub	sp, fp, #4
    1238:	pop	{fp, pc}
    123c:	.word	0x00000654
    1240:	.word	0x00000668
    1244:	.word	0x000006a0
    1248:	.word	0x00000028

0000124c <main>:
    124c:	push	{fp, lr}
    1250:	add	fp, sp, #4
    1254:	sub	sp, sp, #8
    1258:	ldr	r3, [pc, #260]	; 1364 <main+0x118>
    125c:	ldr	r0, [r3]
    1260:	mov	r3, #0
    1264:	mov	r2, #2
    1268:	mov	r1, #0
    126c:	bl	0 <setvbuf>
    1270:	ldr	r3, [pc, #240]	; 1368 <main+0x11c>
    1274:	ldr	r0, [r3]
    1278:	mov	r3, #0
    127c:	mov	r2, #2
    1280:	mov	r1, #0
    1284:	bl	0 <setvbuf>
    1288:	mov	r3, #0
    128c:	str	r3, [fp, #-8]
    1290:	bl	1c4 <teste_grafo_novo>
    1294:	mov	r2, r0
    1298:	ldr	r3, [fp, #-8]
    129c:	add	r3, r3, r2
    12a0:	str	r3, [fp, #-8]
    12a4:	bl	324 <teste_grafo_aresta>
    12a8:	mov	r2, r0
    12ac:	ldr	r3, [fp, #-8]
    12b0:	add	r3, r3, r2
    12b4:	str	r3, [fp, #-8]
    12b8:	bl	504 <teste_grafo_adiciona>
    12bc:	mov	r2, r0
    12c0:	ldr	r3, [fp, #-8]
    12c4:	add	r3, r3, r2
    12c8:	str	r3, [fp, #-8]
    12cc:	bl	7b8 <teste_grafo_remove>
    12d0:	mov	r2, r0
    12d4:	ldr	r3, [fp, #-8]
    12d8:	add	r3, r3, r2
    12dc:	str	r3, [fp, #-8]
    12e0:	bl	9ac <teste_v_sucessores>
    12e4:	mov	r2, r0
    12e8:	ldr	r3, [fp, #-8]
    12ec:	add	r3, r3, r2
    12f0:	str	r3, [fp, #-8]
    12f4:	bl	c50 <teste_v_antecessores>
    12f8:	mov	r2, r0
    12fc:	ldr	r3, [fp, #-8]
    1300:	add	r3, r3, r2
    1304:	str	r3, [fp, #-8]
    1308:	bl	ef4 <teste_v_grau>
    130c:	mov	r2, r0
    1310:	ldr	r3, [fp, #-8]
    1314:	add	r3, r3, r2
    1318:	str	r3, [fp, #-8]
    131c:	bl	1098 <teste_v_celebridade>
    1320:	mov	r2, r0
    1324:	ldr	r3, [fp, #-8]
    1328:	add	r3, r3, r2
    132c:	str	r3, [fp, #-8]
    1330:	ldr	r3, [fp, #-8]
    1334:	cmp	r3, #0
    1338:	bne	1348 <main+0xfc>
    133c:	ldr	r0, [pc, #40]	; 136c <main+0x120>
    1340:	bl	0 <puts>
    1344:	b	1354 <main+0x108>
    1348:	ldr	r1, [fp, #-8]
    134c:	ldr	r0, [pc, #28]	; 1370 <main+0x124>
    1350:	bl	0 <printf>
    1354:	mov	r3, #0
    1358:	mov	r0, r3
    135c:	sub	sp, fp, #4
    1360:	pop	{fp, pc}
	...
    136c:	.word	0x000006d4
    1370:	.word	0x000006ec
