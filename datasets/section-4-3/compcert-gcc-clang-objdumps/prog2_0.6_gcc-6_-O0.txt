
../compcert-repos/prog2/0.6:     file format elf32-littlearm


Disassembly of section .init:

00010610 <.init>:
   10610:	push	{r3, lr}
   10614:	bl	106d8 <_start@@Base+0x3c>
   10618:	pop	{r3, pc}

Disassembly of section .plt:

0001061c <printf@plt-0x14>:
   1061c:	push	{lr}		; (str lr, [sp, #-4]!)
   10620:	ldr	lr, [pc, #4]	; 1062c <printf@plt-0x4>
   10624:	add	lr, pc, lr
   10628:	ldr	pc, [lr, #8]!
   1062c:	ldrdeq	r0, [r1], -r4

00010630 <printf@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #16, 20	; 0x10000
   10638:	ldr	pc, [ip, #2516]!	; 0x9d4

0001063c <realloc@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #16, 20	; 0x10000
   10644:	ldr	pc, [ip, #2508]!	; 0x9cc

00010648 <strcpy@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #16, 20	; 0x10000
   10650:	ldr	pc, [ip, #2500]!	; 0x9c4

00010654 <malloc@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #16, 20	; 0x10000
   1065c:	ldr	pc, [ip, #2492]!	; 0x9bc

00010660 <__libc_start_main@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #16, 20	; 0x10000
   10668:	ldr	pc, [ip, #2484]!	; 0x9b4

0001066c <__gmon_start__@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2476]!	; 0x9ac

00010678 <strlen@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #16, 20	; 0x10000
   10680:	ldr	pc, [ip, #2468]!	; 0x9a4

00010684 <__isoc99_scanf@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2460]!	; 0x99c

00010690 <abort@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2452]!	; 0x994

Disassembly of section .text:

0001069c <_start@@Base>:
   1069c:	mov	fp, #0
   106a0:	mov	lr, #0
   106a4:	pop	{r1}		; (ldr r1, [sp], #4)
   106a8:	mov	r2, sp
   106ac:	push	{r2}		; (str r2, [sp, #-4]!)
   106b0:	push	{r0}		; (str r0, [sp, #-4]!)
   106b4:	ldr	ip, [pc, #16]	; 106cc <_start@@Base+0x30>
   106b8:	push	{ip}		; (str ip, [sp, #-4]!)
   106bc:	ldr	r0, [pc, #12]	; 106d0 <_start@@Base+0x34>
   106c0:	ldr	r3, [pc, #12]	; 106d4 <_start@@Base+0x38>
   106c4:	bl	10660 <__libc_start_main@plt>
   106c8:	bl	10690 <abort@plt>
   106cc:	andeq	r0, r1, r8, asr #19
   106d0:	andeq	r0, r1, r4, asr #15
   106d4:	andeq	r0, r1, r8, ror #18
   106d8:	ldr	r3, [pc, #20]	; 106f4 <_start@@Base+0x58>
   106dc:	ldr	r2, [pc, #20]	; 106f8 <_start@@Base+0x5c>
   106e0:	add	r3, pc, r3
   106e4:	ldr	r2, [r3, r2]
   106e8:	cmp	r2, #0
   106ec:	bxeq	lr
   106f0:	b	1066c <__gmon_start__@plt>
   106f4:	andeq	r0, r1, r8, lsl r9
   106f8:	andeq	r0, r0, r0, lsr r0
   106fc:	ldr	r3, [pc, #28]	; 10720 <_start@@Base+0x84>
   10700:	ldr	r0, [pc, #28]	; 10724 <_start@@Base+0x88>
   10704:	sub	r3, r3, r0
   10708:	cmp	r3, #6
   1070c:	bxls	lr
   10710:	ldr	r3, [pc, #16]	; 10728 <_start@@Base+0x8c>
   10714:	cmp	r3, #0
   10718:	bxeq	lr
   1071c:	bx	r3
   10720:	andeq	r1, r2, pc, lsr r0
   10724:	andeq	r1, r2, ip, lsr r0
   10728:	andeq	r0, r0, r0
   1072c:	ldr	r1, [pc, #36]	; 10758 <_start@@Base+0xbc>
   10730:	ldr	r0, [pc, #36]	; 1075c <_start@@Base+0xc0>
   10734:	sub	r1, r1, r0
   10738:	asr	r1, r1, #2
   1073c:	add	r1, r1, r1, lsr #31
   10740:	asrs	r1, r1, #1
   10744:	bxeq	lr
   10748:	ldr	r3, [pc, #16]	; 10760 <_start@@Base+0xc4>
   1074c:	cmp	r3, #0
   10750:	bxeq	lr
   10754:	bx	r3
   10758:	andeq	r1, r2, ip, lsr r0
   1075c:	andeq	r1, r2, ip, lsr r0
   10760:	andeq	r0, r0, r0
   10764:	push	{r4, lr}
   10768:	ldr	r4, [pc, #24]	; 10788 <_start@@Base+0xec>
   1076c:	ldrb	r3, [r4]
   10770:	cmp	r3, #0
   10774:	popne	{r4, pc}
   10778:	bl	106fc <_start@@Base+0x60>
   1077c:	mov	r3, #1
   10780:	strb	r3, [r4]
   10784:	pop	{r4, pc}
   10788:	andeq	r1, r2, ip, lsr r0
   1078c:	ldr	r0, [pc, #40]	; 107bc <_start@@Base+0x120>
   10790:	ldr	r3, [r0]
   10794:	cmp	r3, #0
   10798:	bne	107a0 <_start@@Base+0x104>
   1079c:	b	1072c <_start@@Base+0x90>
   107a0:	ldr	r3, [pc, #24]	; 107c0 <_start@@Base+0x124>
   107a4:	cmp	r3, #0
   107a8:	beq	1079c <_start@@Base+0x100>
   107ac:	push	{r4, lr}
   107b0:	blx	r3
   107b4:	pop	{r4, lr}
   107b8:	b	1072c <_start@@Base+0x90>
   107bc:	andeq	r0, r2, r4, lsl pc
   107c0:	andeq	r0, r0, r0

000107c4 <main@@Base>:
   107c4:	push	{r4, fp, lr}
   107c8:	add	fp, sp, #8
   107cc:	sub	sp, sp, #28
   107d0:	mov	r3, #0
   107d4:	str	r3, [fp, #-24]	; 0xffffffe8
   107d8:	mov	r3, #0
   107dc:	str	r3, [fp, #-28]	; 0xffffffe4
   107e0:	mov	r3, #0
   107e4:	str	r3, [fp, #-32]	; 0xffffffe0
   107e8:	ldr	r0, [pc, #356]	; 10954 <main@@Base+0x190>
   107ec:	bl	10630 <printf@plt>
   107f0:	mov	r0, #1
   107f4:	bl	10654 <malloc@plt>
   107f8:	mov	r3, r0
   107fc:	str	r3, [fp, #-16]
   10800:	mov	r0, #1
   10804:	bl	10654 <malloc@plt>
   10808:	mov	r3, r0
   1080c:	str	r3, [fp, #-20]	; 0xffffffec
   10810:	b	108dc <main@@Base+0x118>
   10814:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   10818:	cmp	r3, #32
   1081c:	beq	1082c <main@@Base+0x68>
   10820:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   10824:	cmp	r3, #10
   10828:	bne	10898 <main@@Base+0xd4>
   1082c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10830:	bl	10678 <strlen@plt>
   10834:	mov	r4, r0
   10838:	ldr	r0, [fp, #-16]
   1083c:	bl	10678 <strlen@plt>
   10840:	mov	r3, r0
   10844:	cmp	r4, r3
   10848:	bls	10874 <main@@Base+0xb0>
   1084c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10850:	bl	10678 <strlen@plt>
   10854:	mov	r3, r0
   10858:	mov	r1, r3
   1085c:	ldr	r0, [fp, #-16]
   10860:	bl	1063c <realloc@plt>
   10864:	str	r0, [fp, #-16]
   10868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1086c:	ldr	r0, [fp, #-16]
   10870:	bl	10648 <strcpy@plt>
   10874:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10878:	add	r3, r3, #1
   1087c:	str	r3, [fp, #-24]	; 0xffffffe8
   10880:	mov	r3, #0
   10884:	str	r3, [fp, #-32]	; 0xffffffe0
   10888:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1088c:	cmp	r3, #10
   10890:	beq	108fc <main@@Base+0x138>
   10894:	b	108dc <main@@Base+0x118>
   10898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1089c:	add	r3, r3, #1
   108a0:	mov	r1, r3
   108a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   108a8:	bl	1063c <realloc@plt>
   108ac:	str	r0, [fp, #-20]	; 0xffffffec
   108b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   108b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   108b8:	add	r3, r2, r3
   108bc:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   108c0:	strb	r2, [r3]
   108c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   108c8:	add	r3, r3, #1
   108cc:	str	r3, [fp, #-28]	; 0xffffffe4
   108d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   108d4:	add	r3, r3, #1
   108d8:	str	r3, [fp, #-32]	; 0xffffffe0
   108dc:	sub	r3, fp, #33	; 0x21
   108e0:	mov	r1, r3
   108e4:	ldr	r0, [pc, #108]	; 10958 <main@@Base+0x194>
   108e8:	bl	10684 <__isoc99_scanf@plt>
   108ec:	mov	r3, r0
   108f0:	cmp	r3, #1
   108f4:	beq	10814 <main@@Base+0x50>
   108f8:	b	10900 <main@@Base+0x13c>
   108fc:	nop			; (mov r0, r0)
   10900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10904:	ldr	r0, [pc, #80]	; 1095c <main@@Base+0x198>
   10908:	bl	10630 <printf@plt>
   1090c:	ldr	r1, [fp, #-16]
   10910:	ldr	r0, [pc, #72]	; 10960 <main@@Base+0x19c>
   10914:	bl	10630 <printf@plt>
   10918:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1091c:	vmov	s15, r3
   10920:	vcvt.f32.s32	s13, s15
   10924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10928:	vmov	s15, r3
   1092c:	vcvt.f32.s32	s14, s15
   10930:	vdiv.f32	s15, s13, s14
   10934:	vcvt.f64.f32	d7, s15
   10938:	vmov	r2, r3, d7
   1093c:	ldr	r0, [pc, #32]	; 10964 <main@@Base+0x1a0>
   10940:	bl	10630 <printf@plt>
   10944:	mov	r3, #0
   10948:	mov	r0, r3
   1094c:	sub	sp, fp, #8
   10950:	pop	{r4, fp, pc}
   10954:	ldrdeq	r0, [r1], -r8
   10958:	andeq	r0, r1, r0, ror #19
   1095c:	andeq	r0, r1, r4, ror #19
   10960:	strdeq	r0, [r1], -ip
   10964:	andeq	r0, r1, r0, lsl sl

00010968 <__libc_csu_init@@Base>:
   10968:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1096c:	mov	r7, r0
   10970:	ldr	r6, [pc, #72]	; 109c0 <__libc_csu_init@@Base+0x58>
   10974:	ldr	r5, [pc, #72]	; 109c4 <__libc_csu_init@@Base+0x5c>
   10978:	add	r6, pc, r6
   1097c:	add	r5, pc, r5
   10980:	sub	r6, r6, r5
   10984:	mov	r8, r1
   10988:	mov	r9, r2
   1098c:	bl	10610 <printf@plt-0x20>
   10990:	asrs	r6, r6, #2
   10994:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10998:	mov	r4, #0
   1099c:	add	r4, r4, #1
   109a0:	ldr	r3, [r5], #4
   109a4:	mov	r2, r9
   109a8:	mov	r1, r8
   109ac:	mov	r0, r7
   109b0:	blx	r3
   109b4:	cmp	r6, r4
   109b8:	bne	1099c <__libc_csu_init@@Base+0x34>
   109bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109c0:	muleq	r1, r0, r5
   109c4:	andeq	r0, r1, r8, lsl #11

000109c8 <__libc_csu_fini@@Base>:
   109c8:	bx	lr

Disassembly of section .fini:

000109cc <.fini>:
   109cc:	push	{r3, lr}
   109d0:	pop	{r3, pc}
