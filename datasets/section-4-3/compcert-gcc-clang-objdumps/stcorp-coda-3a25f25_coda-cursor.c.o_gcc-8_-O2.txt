
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_dynamic_type_delete>:
       0:	subs	r3, r0, #0
       4:	beq	30 <coda_dynamic_type_delete+0x30>
       8:	ldr	r3, [r3]
       c:	cmp	r3, #100	; 0x64
      10:	beq	4c <coda_dynamic_type_delete+0x4c>
      14:	bls	34 <coda_dynamic_type_delete+0x34>
      18:	cmp	r3, #104	; 0x68
      1c:	beq	50 <coda_dynamic_type_delete+0x50>
      20:	cmp	r3, #105	; 0x69
      24:	beq	48 <coda_dynamic_type_delete+0x48>
      28:	cmp	r3, #103	; 0x67
      2c:	beq	44 <coda_dynamic_type_delete+0x44>
      30:	bx	lr
      34:	cmp	r3, #1
      38:	bhi	40 <coda_dynamic_type_delete+0x40>
      3c:	b	0 <coda_type_release>
      40:	bx	lr
      44:	b	0 <coda_cdf_type_delete>
      48:	b	0 <coda_grib_type_delete>
      4c:	b	0 <coda_mem_type_delete>
      50:	b	0 <coda_netcdf_type_delete>

00000054 <coda_cursor_compare>:
      54:	ldr	ip, [r0, #4]
      58:	ldr	r2, [r1, #4]
      5c:	cmp	ip, #0
      60:	ble	100 <coda_cursor_compare+0xac>
      64:	cmp	r2, #0
      68:	ble	f8 <coda_cursor_compare+0xa4>
      6c:	mov	r3, #0
      70:	add	r0, r0, #12
      74:	add	r3, r3, #1
      78:	add	r1, r1, #12
      7c:	cmp	ip, r3
      80:	beq	104 <coda_cursor_compare+0xb0>
      84:	cmp	r3, r2
      88:	beq	f8 <coda_cursor_compare+0xa4>
      8c:	str	r4, [sp, #-8]!
      90:	str	lr, [sp, #4]
      94:	b	a0 <coda_cursor_compare+0x4c>
      98:	cmp	r3, r2
      9c:	beq	d8 <coda_cursor_compare+0x84>
      a0:	ldr	r4, [r0, r3, lsl #4]
      a4:	ldr	lr, [r1, r3, lsl #4]
      a8:	cmp	r4, lr
      ac:	bgt	d8 <coda_cursor_compare+0x84>
      b0:	blt	e8 <coda_cursor_compare+0x94>
      b4:	add	r3, r3, #1
      b8:	cmp	ip, r3
      bc:	bne	98 <coda_cursor_compare+0x44>
      c0:	cmp	r2, ip
      c4:	ldr	r4, [sp]
      c8:	add	sp, sp, #4
      cc:	movle	r0, #0
      d0:	mvngt	r0, #0
      d4:	pop	{pc}		; (ldr pc, [sp], #4)
      d8:	ldr	r4, [sp]
      dc:	add	sp, sp, #4
      e0:	mov	r0, #1
      e4:	pop	{pc}		; (ldr pc, [sp], #4)
      e8:	ldr	r4, [sp]
      ec:	add	sp, sp, #4
      f0:	mvn	r0, #0
      f4:	pop	{pc}		; (ldr pc, [sp], #4)
      f8:	mov	r0, #1
      fc:	bx	lr
     100:	mov	ip, #0
     104:	cmp	r2, ip
     108:	movle	r0, #0
     10c:	mvngt	r0, #0
     110:	bx	lr

00000114 <coda_cursor_print_path>:
     114:	ldr	r3, [r0, #4]
     118:	strd	r4, [sp, #-36]!	; 0xffffffdc
     11c:	strd	r6, [sp, #8]
     120:	mov	r7, r1
     124:	strd	r8, [sp, #16]
     128:	strd	sl, [sp, #24]
     12c:	cmp	r3, #1
     130:	str	lr, [sp, #32]
     134:	sub	sp, sp, #20
     138:	ble	27c <coda_cursor_print_path+0x168>
     13c:	movw	r3, #0
     140:	movt	r3, #0
     144:	movw	sl, #0
     148:	movt	sl, #0
     14c:	movw	r9, #0
     150:	movt	r9, #0
     154:	str	r3, [sp, #4]
     158:	mov	r8, r0
     15c:	mov	r5, r0
     160:	mov	r4, #1
     164:	b	1fc <coda_cursor_print_path+0xe8>
     168:	ldr	r6, [r5, #8]
     16c:	add	r1, sp, #8
     170:	ldr	r2, [r6]
     174:	cmp	r2, #99	; 0x63
     178:	ldrhi	r6, [r6, #4]
     17c:	mov	r0, r6
     180:	bl	0 <coda_type_get_class>
     184:	cmp	r0, #0
     188:	bne	274 <coda_cursor_print_path+0x160>
     18c:	ldr	r2, [sp, #8]
     190:	cmp	r2, #0
     194:	bne	24c <coda_cursor_print_path+0x138>
     198:	mov	r1, fp
     19c:	mov	r0, r6
     1a0:	add	r2, sp, #12
     1a4:	bl	0 <coda_type_get_record_field_name>
     1a8:	cmp	r0, #0
     1ac:	bne	274 <coda_cursor_print_path+0x160>
     1b0:	cmp	r4, #1
     1b4:	beq	1c4 <coda_cursor_print_path+0xb0>
     1b8:	ldr	r3, [r5, #12]
     1bc:	cmn	r3, #1
     1c0:	beq	1d4 <coda_cursor_print_path+0xc0>
     1c4:	ldr	r0, [sp, #4]
     1c8:	blx	r7
     1cc:	cmp	r0, #0
     1d0:	blt	274 <coda_cursor_print_path+0x160>
     1d4:	mov	r0, sl
     1d8:	ldr	r1, [sp, #12]
     1dc:	blx	r7
     1e0:	cmp	r0, #0
     1e4:	blt	274 <coda_cursor_print_path+0x160>
     1e8:	ldr	r3, [r8, #4]
     1ec:	add	r4, r4, #1
     1f0:	add	r5, r5, #16
     1f4:	cmp	r3, r4
     1f8:	ble	290 <coda_cursor_print_path+0x17c>
     1fc:	ldr	fp, [r5, #28]
     200:	cmn	fp, #1
     204:	bne	168 <coda_cursor_print_path+0x54>
     208:	cmp	r4, #1
     20c:	movw	r2, #0
     210:	movt	r2, #0
     214:	movw	r0, #0
     218:	movt	r0, #0
     21c:	movne	r0, r2
     220:	blx	r7
     224:	cmp	r0, #0
     228:	bge	1e8 <coda_cursor_print_path+0xd4>
     22c:	mov	r0, fp
     230:	add	sp, sp, #20
     234:	ldrd	r4, [sp]
     238:	ldrd	r6, [sp, #8]
     23c:	ldrd	r8, [sp, #16]
     240:	ldrd	sl, [sp, #24]
     244:	add	sp, sp, #32
     248:	pop	{pc}		; (ldr pc, [sp], #4)
     24c:	cmp	r2, #1
     250:	bne	298 <coda_cursor_print_path+0x184>
     254:	cmp	r4, #1
     258:	movw	r0, #0
     25c:	movt	r0, #0
     260:	mov	r1, fp
     264:	moveq	r0, r9
     268:	blx	r7
     26c:	cmp	r0, #0
     270:	bge	1e8 <coda_cursor_print_path+0xd4>
     274:	mvn	fp, #0
     278:	b	22c <coda_cursor_print_path+0x118>
     27c:	movw	r0, #0
     280:	movt	r0, #0
     284:	blx	r1
     288:	asr	fp, r0, #31
     28c:	b	22c <coda_cursor_print_path+0x118>
     290:	mov	fp, #0
     294:	b	22c <coda_cursor_print_path+0x118>
     298:	movw	r3, #0
     29c:	movt	r3, #0
     2a0:	movw	r1, #0
     2a4:	movt	r1, #0
     2a8:	movw	r0, #0
     2ac:	movt	r0, #0
     2b0:	movw	r2, #305	; 0x131
     2b4:	bl	0 <__assert_fail>

000002b8 <coda_cursor_set_product>:
     2b8:	cmp	r0, #0
     2bc:	str	r4, [sp, #-8]!
     2c0:	str	lr, [sp, #4]
     2c4:	beq	3b0 <coda_cursor_set_product+0xf8>
     2c8:	cmp	r1, #0
     2cc:	beq	3d0 <coda_cursor_set_product+0x118>
     2d0:	ldr	r3, [r1, #16]
     2d4:	cmp	r3, #9
     2d8:	ldrls	pc, [pc, r3, lsl #2]
     2dc:	b	3f0 <coda_cursor_set_product+0x138>
     2e0:	.word	0x00000318
     2e4:	.word	0x00000318
     2e8:	.word	0x00000328
     2ec:	.word	0x00000338
     2f0:	.word	0x00000354
     2f4:	.word	0x00000370
     2f8:	.word	0x00000380
     2fc:	.word	0x00000390
     300:	.word	0x000003a0
     304:	.word	0x00000308
     308:	ldr	r4, [sp]
     30c:	ldr	lr, [sp, #4]
     310:	add	sp, sp, #8
     314:	b	0 <coda_sp3_cursor_set_product>
     318:	ldr	r4, [sp]
     31c:	ldr	lr, [sp, #4]
     320:	add	sp, sp, #8
     324:	b	0 <coda_ascbin_cursor_set_product>
     328:	ldr	r4, [sp]
     32c:	ldr	lr, [sp, #4]
     330:	add	sp, sp, #8
     334:	b	0 <coda_xml_cursor_set_product>
     338:	mov	r1, #0
     33c:	mvn	r0, #10
     340:	bl	0 <coda_set_error>
     344:	ldr	r4, [sp]
     348:	add	sp, sp, #4
     34c:	mvn	r0, #0
     350:	pop	{pc}		; (ldr pc, [sp], #4)
     354:	mvn	r0, #12
     358:	mov	r1, #0
     35c:	bl	0 <coda_set_error>
     360:	ldr	r4, [sp]
     364:	add	sp, sp, #4
     368:	mvn	r0, #0
     36c:	pop	{pc}		; (ldr pc, [sp], #4)
     370:	ldr	r4, [sp]
     374:	ldr	lr, [sp, #4]
     378:	add	sp, sp, #8
     37c:	b	0 <coda_cdf_cursor_set_product>
     380:	ldr	r4, [sp]
     384:	ldr	lr, [sp, #4]
     388:	add	sp, sp, #8
     38c:	b	0 <coda_netcdf_cursor_set_product>
     390:	ldr	r4, [sp]
     394:	ldr	lr, [sp, #4]
     398:	add	sp, sp, #8
     39c:	b	0 <coda_grib_cursor_set_product>
     3a0:	ldr	r4, [sp]
     3a4:	ldr	lr, [sp, #4]
     3a8:	add	sp, sp, #8
     3ac:	b	0 <coda_rinex_cursor_set_product>
     3b0:	movw	r2, #0
     3b4:	movt	r2, #0
     3b8:	movw	r1, #0
     3bc:	movt	r1, #0
     3c0:	movw	r3, #325	; 0x145
     3c4:	mvn	r0, #99	; 0x63
     3c8:	bl	0 <coda_set_error>
     3cc:	b	344 <coda_cursor_set_product+0x8c>
     3d0:	movw	r2, #0
     3d4:	movt	r2, #0
     3d8:	movw	r1, #0
     3dc:	movt	r1, #0
     3e0:	movw	r3, #331	; 0x14b
     3e4:	mvn	r0, #99	; 0x63
     3e8:	bl	0 <coda_set_error>
     3ec:	b	344 <coda_cursor_set_product+0x8c>
     3f0:	movw	r1, #0
     3f4:	movt	r1, #0
     3f8:	ldr	r3, [pc, #12]	; 40c <coda_cursor_set_product+0x154>
     3fc:	movw	r0, #0
     400:	movt	r0, #0
     404:	mov	r2, #368	; 0x170
     408:	bl	0 <__assert_fail>
     40c:	.word	0x00000018

00000410 <coda_cursor_goto_attributes>:
     410:	str	r4, [sp, #-8]!
     414:	subs	r4, r0, #0
     418:	str	lr, [sp, #4]
     41c:	sub	sp, sp, #8
     420:	beq	560 <coda_cursor_goto_attributes+0x150>
     424:	ldr	r2, [r4, #4]
     428:	cmp	r2, #0
     42c:	ble	560 <coda_cursor_goto_attributes+0x150>
     430:	add	r3, r4, r2, lsl #4
     434:	ldr	r3, [r3, #-8]
     438:	cmp	r3, #0
     43c:	beq	560 <coda_cursor_goto_attributes+0x150>
     440:	cmp	r2, #32
     444:	beq	584 <coda_cursor_goto_attributes+0x174>
     448:	ldr	r3, [r3]
     44c:	cmp	r3, #101	; 0x65
     450:	beq	4fc <coda_cursor_goto_attributes+0xec>
     454:	bls	4cc <coda_cursor_goto_attributes+0xbc>
     458:	cmp	r3, #103	; 0x67
     45c:	beq	51c <coda_cursor_goto_attributes+0x10c>
     460:	bcc	52c <coda_cursor_goto_attributes+0x11c>
     464:	cmp	r3, #104	; 0x68
     468:	beq	550 <coda_cursor_goto_attributes+0x140>
     46c:	cmp	r3, #105	; 0x69
     470:	bne	494 <coda_cursor_goto_attributes+0x84>
     474:	mov	r0, r4
     478:	bl	0 <coda_grib_cursor_goto_attributes>
     47c:	cmp	r0, #0
     480:	bne	4e8 <coda_cursor_goto_attributes+0xd8>
     484:	ldr	r3, [r4, #4]
     488:	add	r3, r4, r3, lsl #4
     48c:	ldr	r3, [r3, #-8]
     490:	ldr	r3, [r3]
     494:	cmp	r3, #100	; 0x64
     498:	bne	4b8 <coda_cursor_goto_attributes+0xa8>
     49c:	mov	r0, r4
     4a0:	bl	0 <coda_mem_cursor_update_offset>
     4a4:	mov	r0, #0
     4a8:	add	sp, sp, #8
     4ac:	ldr	r4, [sp]
     4b0:	add	sp, sp, #4
     4b4:	pop	{pc}		; (ldr pc, [sp], #4)
     4b8:	mov	r0, #0
     4bc:	add	sp, sp, #8
     4c0:	ldr	r4, [sp]
     4c4:	add	sp, sp, #4
     4c8:	pop	{pc}		; (ldr pc, [sp], #4)
     4cc:	cmp	r3, #1
     4d0:	bls	540 <coda_cursor_goto_attributes+0x130>
     4d4:	cmp	r3, #100	; 0x64
     4d8:	bne	4b8 <coda_cursor_goto_attributes+0xa8>
     4dc:	bl	0 <coda_mem_cursor_goto_attributes>
     4e0:	cmp	r0, #0
     4e4:	beq	484 <coda_cursor_goto_attributes+0x74>
     4e8:	mvn	r0, #0
     4ec:	add	sp, sp, #8
     4f0:	ldr	r4, [sp]
     4f4:	add	sp, sp, #4
     4f8:	pop	{pc}		; (ldr pc, [sp], #4)
     4fc:	mov	r1, #0
     500:	mvn	r0, #10
     504:	bl	0 <coda_set_error>
     508:	mvn	r0, #0
     50c:	add	sp, sp, #8
     510:	ldr	r4, [sp]
     514:	add	sp, sp, #4
     518:	pop	{pc}		; (ldr pc, [sp], #4)
     51c:	bl	0 <coda_cdf_cursor_goto_attributes>
     520:	cmp	r0, #0
     524:	beq	484 <coda_cursor_goto_attributes+0x74>
     528:	b	4e8 <coda_cursor_goto_attributes+0xd8>
     52c:	mvn	r0, #12
     530:	mov	r1, #0
     534:	bl	0 <coda_set_error>
     538:	mvn	r0, #0
     53c:	b	4ec <coda_cursor_goto_attributes+0xdc>
     540:	bl	0 <coda_ascbin_cursor_goto_attributes>
     544:	cmp	r0, #0
     548:	beq	484 <coda_cursor_goto_attributes+0x74>
     54c:	b	4e8 <coda_cursor_goto_attributes+0xd8>
     550:	bl	0 <coda_netcdf_cursor_goto_attributes>
     554:	cmp	r0, #0
     558:	beq	484 <coda_cursor_goto_attributes+0x74>
     55c:	b	4e8 <coda_cursor_goto_attributes+0xd8>
     560:	mvn	r0, #99	; 0x63
     564:	movw	r2, #0
     568:	movt	r2, #0
     56c:	movw	r1, #0
     570:	movt	r1, #0
     574:	movw	r3, #1244	; 0x4dc
     578:	bl	0 <coda_set_error>
     57c:	mvn	r0, #0
     580:	b	4bc <coda_cursor_goto_attributes+0xac>
     584:	movw	r0, #1251	; 0x4e3
     588:	movw	r3, #0
     58c:	movt	r3, #0
     590:	movw	r1, #0
     594:	movt	r1, #0
     598:	str	r0, [sp]
     59c:	mvn	r0, #99	; 0x63
     5a0:	bl	0 <coda_set_error>
     5a4:	mvn	r0, #0
     5a8:	b	4bc <coda_cursor_goto_attributes+0xac>

000005ac <coda_cursor_goto_parent>:
     5ac:	subs	r2, r0, #0
     5b0:	str	r4, [sp, #-8]!
     5b4:	str	lr, [sp, #4]
     5b8:	beq	5f8 <coda_cursor_goto_parent+0x4c>
     5bc:	ldr	r3, [r2, #4]
     5c0:	cmp	r3, #0
     5c4:	ble	5f8 <coda_cursor_goto_parent+0x4c>
     5c8:	sub	r1, r3, #1
     5cc:	add	r0, r2, r1, lsl #4
     5d0:	ldr	r0, [r0, #8]
     5d4:	cmp	r0, #0
     5d8:	beq	5f8 <coda_cursor_goto_parent+0x4c>
     5dc:	cmp	r3, #1
     5e0:	movne	r0, #0
     5e4:	strne	r1, [r2, #4]
     5e8:	beq	61c <coda_cursor_goto_parent+0x70>
     5ec:	ldr	r4, [sp]
     5f0:	add	sp, sp, #4
     5f4:	pop	{pc}		; (ldr pc, [sp], #4)
     5f8:	mvn	r0, #99	; 0x63
     5fc:	movw	r2, #0
     600:	movt	r2, #0
     604:	movw	r1, #0
     608:	movt	r1, #0
     60c:	movw	r3, #1333	; 0x535
     610:	bl	0 <coda_set_error>
     614:	mvn	r0, #0
     618:	b	5ec <coda_cursor_goto_parent+0x40>
     61c:	mvn	r0, #107	; 0x6b
     620:	mov	r1, #0
     624:	bl	0 <coda_set_error>
     628:	mvn	r0, #0
     62c:	b	5ec <coda_cursor_goto_parent+0x40>

00000630 <coda_cursor_use_base_type_of_special_type>:
     630:	str	r4, [sp, #-8]!
     634:	subs	r4, r0, #0
     638:	str	lr, [sp, #4]
     63c:	beq	784 <coda_cursor_use_base_type_of_special_type+0x154>
     640:	ldr	r3, [r4, #4]
     644:	cmp	r3, #0
     648:	ble	784 <coda_cursor_use_base_type_of_special_type+0x154>
     64c:	add	r3, r4, r3, lsl #4
     650:	ldr	r2, [r3, #-8]
     654:	cmp	r2, #0
     658:	beq	784 <coda_cursor_use_base_type_of_special_type+0x154>
     65c:	ldr	r3, [r2]
     660:	cmp	r3, #99	; 0x63
     664:	ldrhi	r2, [r2, #4]
     668:	ldr	r0, [r2, #8]
     66c:	cmp	r0, #6
     670:	bne	7a8 <coda_cursor_use_base_type_of_special_type+0x178>
     674:	cmp	r3, #102	; 0x66
     678:	bhi	708 <coda_cursor_use_base_type_of_special_type+0xd8>
     67c:	cmp	r3, #101	; 0x65
     680:	bcs	730 <coda_cursor_use_base_type_of_special_type+0x100>
     684:	cmp	r3, #1
     688:	bls	74c <coda_cursor_use_base_type_of_special_type+0x11c>
     68c:	cmp	r3, #100	; 0x64
     690:	bne	6bc <coda_cursor_use_base_type_of_special_type+0x8c>
     694:	mov	r0, r4
     698:	bl	0 <coda_mem_cursor_use_base_type_of_special_type>
     69c:	cmp	r0, #0
     6a0:	bne	720 <coda_cursor_use_base_type_of_special_type+0xf0>
     6a4:	ldr	r3, [r4, #4]
     6a8:	add	r3, r4, r3, lsl #4
     6ac:	ldr	r3, [r3, #-8]
     6b0:	ldr	r3, [r3]
     6b4:	cmp	r3, #100	; 0x64
     6b8:	beq	760 <coda_cursor_use_base_type_of_special_type+0x130>
     6bc:	ldr	r3, [pc, #260]	; 7c8 <coda_cursor_use_base_type_of_special_type+0x198>
     6c0:	mrc	15, 0, r2, cr13, cr0, {3}
     6c4:	ldr	r3, [pc, r3]
     6c8:	ldr	r0, [r2, r3]
     6cc:	cmp	r0, #0
     6d0:	beq	6fc <coda_cursor_use_base_type_of_special_type+0xcc>
     6d4:	ldr	r3, [r4, #4]
     6d8:	add	r3, r4, r3, lsl #4
     6dc:	ldr	r3, [r3, #-8]
     6e0:	ldr	r2, [r3]
     6e4:	cmp	r2, #99	; 0x63
     6e8:	ldrhi	r3, [r3, #4]
     6ec:	ldr	r3, [r3, #8]
     6f0:	cmp	r3, #6
     6f4:	movne	r0, #0
     6f8:	beq	76c <coda_cursor_use_base_type_of_special_type+0x13c>
     6fc:	ldr	r4, [sp]
     700:	add	sp, sp, #4
     704:	pop	{pc}		; (ldr pc, [sp], #4)
     708:	cmp	r3, #103	; 0x67
     70c:	bne	728 <coda_cursor_use_base_type_of_special_type+0xf8>
     710:	mov	r0, r4
     714:	bl	0 <coda_cdf_cursor_use_base_type_of_special_type>
     718:	cmp	r0, #0
     71c:	beq	6a4 <coda_cursor_use_base_type_of_special_type+0x74>
     720:	mvn	r0, #0
     724:	b	6fc <coda_cursor_use_base_type_of_special_type+0xcc>
     728:	cmp	r3, #105	; 0x69
     72c:	bhi	6b4 <coda_cursor_use_base_type_of_special_type+0x84>
     730:	movw	r1, #0
     734:	movt	r1, #0
     738:	ldr	r3, [pc, #140]	; 7cc <coda_cursor_use_base_type_of_special_type+0x19c>
     73c:	movw	r0, #0
     740:	movt	r0, #0
     744:	mov	r2, #1440	; 0x5a0
     748:	bl	0 <__assert_fail>
     74c:	mov	r0, r4
     750:	bl	0 <coda_ascbin_cursor_use_base_type_of_special_type>
     754:	cmp	r0, #0
     758:	beq	6a4 <coda_cursor_use_base_type_of_special_type+0x74>
     75c:	b	720 <coda_cursor_use_base_type_of_special_type+0xf0>
     760:	mov	r0, r4
     764:	bl	0 <coda_mem_cursor_update_offset>
     768:	b	6bc <coda_cursor_use_base_type_of_special_type+0x8c>
     76c:	mov	r0, r4
     770:	bl	630 <coda_cursor_use_base_type_of_special_type>
     774:	adds	r0, r0, #0
     778:	movne	r0, #1
     77c:	rsb	r0, r0, #0
     780:	b	6fc <coda_cursor_use_base_type_of_special_type+0xcc>
     784:	mvn	r0, #99	; 0x63
     788:	movw	r2, #0
     78c:	movt	r2, #0
     790:	movw	r1, #0
     794:	movt	r1, #0
     798:	movw	r3, #1403	; 0x57b
     79c:	bl	0 <coda_set_error>
     7a0:	mvn	r0, #0
     7a4:	b	6fc <coda_cursor_use_base_type_of_special_type+0xcc>
     7a8:	bl	0 <coda_type_get_class_name>
     7ac:	mov	r2, r0
     7b0:	movw	r1, #0
     7b4:	movt	r1, #0
     7b8:	mvn	r0, #104	; 0x68
     7bc:	bl	0 <coda_set_error>
     7c0:	mvn	r0, #0
     7c4:	b	6fc <coda_cursor_use_base_type_of_special_type+0xcc>
     7c8:	.word	0x000000fc
     7cc:	.word	0x00000030

000007d0 <coda_cursor_goto_record_field_by_index>:
     7d0:	str	r4, [sp, #-8]!
     7d4:	subs	r4, r0, #0
     7d8:	str	lr, [sp, #4]
     7dc:	sub	sp, sp, #8
     7e0:	beq	954 <coda_cursor_goto_record_field_by_index+0x184>
     7e4:	ldr	r2, [r4, #4]
     7e8:	cmp	r2, #0
     7ec:	ble	954 <coda_cursor_goto_record_field_by_index+0x184>
     7f0:	add	r3, r4, r2, lsl #4
     7f4:	ldr	r0, [r3, #-8]
     7f8:	cmp	r0, #0
     7fc:	beq	954 <coda_cursor_goto_record_field_by_index+0x184>
     800:	ldr	r3, [r0]
     804:	cmp	r3, #99	; 0x63
     808:	ldrhi	r0, [r0, #4]
     80c:	ldr	r0, [r0, #8]
     810:	cmp	r0, #0
     814:	bne	978 <coda_cursor_goto_record_field_by_index+0x1a8>
     818:	cmp	r2, #32
     81c:	beq	998 <coda_cursor_goto_record_field_by_index+0x1c8>
     820:	cmp	r3, #101	; 0x65
     824:	beq	910 <coda_cursor_goto_record_field_by_index+0x140>
     828:	bhi	8bc <coda_cursor_goto_record_field_by_index+0xec>
     82c:	cmp	r3, #1
     830:	bls	930 <coda_cursor_goto_record_field_by_index+0x160>
     834:	cmp	r3, #100	; 0x64
     838:	bne	86c <coda_cursor_goto_record_field_by_index+0x9c>
     83c:	mov	r0, r4
     840:	bl	0 <coda_mem_cursor_goto_record_field_by_index>
     844:	cmp	r0, #0
     848:	bne	8d0 <coda_cursor_goto_record_field_by_index+0x100>
     84c:	ldr	r3, [r4, #4]
     850:	add	r3, r4, r3, lsl #4
     854:	ldr	r3, [r3, #-8]
     858:	ldr	r3, [r3]
     85c:	cmp	r3, #100	; 0x64
     860:	bne	86c <coda_cursor_goto_record_field_by_index+0x9c>
     864:	mov	r0, r4
     868:	bl	0 <coda_mem_cursor_update_offset>
     86c:	ldr	r3, [pc, #360]	; 9dc <coda_cursor_goto_record_field_by_index+0x20c>
     870:	mrc	15, 0, r2, cr13, cr0, {3}
     874:	ldr	r3, [pc, r3]
     878:	ldr	r0, [r2, r3]
     87c:	cmp	r0, #0
     880:	beq	8ac <coda_cursor_goto_record_field_by_index+0xdc>
     884:	ldr	r3, [r4, #4]
     888:	add	r3, r4, r3, lsl #4
     88c:	ldr	r3, [r3, #-8]
     890:	ldr	r2, [r3]
     894:	cmp	r2, #99	; 0x63
     898:	ldrhi	r3, [r3, #4]
     89c:	ldr	r3, [r3, #8]
     8a0:	cmp	r3, #6
     8a4:	movne	r0, #0
     8a8:	beq	8f8 <coda_cursor_goto_record_field_by_index+0x128>
     8ac:	add	sp, sp, #8
     8b0:	ldr	r4, [sp]
     8b4:	add	sp, sp, #4
     8b8:	pop	{pc}		; (ldr pc, [sp], #4)
     8bc:	cmp	r3, #102	; 0x66
     8c0:	bne	8e4 <coda_cursor_goto_record_field_by_index+0x114>
     8c4:	mov	r1, r0
     8c8:	mvn	r0, #12
     8cc:	bl	0 <coda_set_error>
     8d0:	mvn	r0, #0
     8d4:	add	sp, sp, #8
     8d8:	ldr	r4, [sp]
     8dc:	add	sp, sp, #4
     8e0:	pop	{pc}		; (ldr pc, [sp], #4)
     8e4:	cmp	r3, #105	; 0x69
     8e8:	bls	9c0 <coda_cursor_goto_record_field_by_index+0x1f0>
     8ec:	cmp	r3, #100	; 0x64
     8f0:	beq	864 <coda_cursor_goto_record_field_by_index+0x94>
     8f4:	b	86c <coda_cursor_goto_record_field_by_index+0x9c>
     8f8:	mov	r0, r4
     8fc:	bl	630 <coda_cursor_use_base_type_of_special_type>
     900:	adds	r0, r0, #0
     904:	movne	r0, #1
     908:	rsb	r0, r0, #0
     90c:	b	8ac <coda_cursor_goto_record_field_by_index+0xdc>
     910:	mov	r1, r0
     914:	mvn	r0, #10
     918:	bl	0 <coda_set_error>
     91c:	mvn	r0, #0
     920:	add	sp, sp, #8
     924:	ldr	r4, [sp]
     928:	add	sp, sp, #4
     92c:	pop	{pc}		; (ldr pc, [sp], #4)
     930:	mov	r0, r4
     934:	bl	0 <coda_ascbin_cursor_goto_record_field_by_index>
     938:	cmp	r0, #0
     93c:	bne	8d0 <coda_cursor_goto_record_field_by_index+0x100>
     940:	ldr	r3, [r4, #4]
     944:	add	r3, r4, r3, lsl #4
     948:	ldr	r3, [r3, #-8]
     94c:	ldr	r3, [r3]
     950:	b	85c <coda_cursor_goto_record_field_by_index+0x8c>
     954:	mvn	r0, #99	; 0x63
     958:	movw	r2, #0
     95c:	movt	r2, #0
     960:	movw	r1, #0
     964:	movt	r1, #0
     968:	movw	r3, #569	; 0x239
     96c:	bl	0 <coda_set_error>
     970:	mvn	r0, #0
     974:	b	8ac <coda_cursor_goto_record_field_by_index+0xdc>
     978:	bl	0 <coda_type_get_class_name>
     97c:	mov	r2, r0
     980:	movw	r1, #0
     984:	movt	r1, #0
     988:	mvn	r0, #104	; 0x68
     98c:	bl	0 <coda_set_error>
     990:	mvn	r0, #0
     994:	b	8ac <coda_cursor_goto_record_field_by_index+0xdc>
     998:	mov	r0, #584	; 0x248
     99c:	movw	r3, #0
     9a0:	movt	r3, #0
     9a4:	movw	r1, #0
     9a8:	movt	r1, #0
     9ac:	str	r0, [sp]
     9b0:	mvn	r0, #99	; 0x63
     9b4:	bl	0 <coda_set_error>
     9b8:	mvn	r0, #0
     9bc:	b	8ac <coda_cursor_goto_record_field_by_index+0xdc>
     9c0:	movw	r1, #0
     9c4:	movt	r1, #0
     9c8:	ldr	r3, [pc, #16]	; 9e0 <coda_cursor_goto_record_field_by_index+0x210>
     9cc:	movw	r0, #0
     9d0:	movt	r0, #0
     9d4:	mov	r2, #628	; 0x274
     9d8:	bl	0 <__assert_fail>
     9dc:	.word	0x00000160
     9e0:	.word	0x0000005c

000009e4 <coda_cursor_goto_first_record_field>:
     9e4:	mov	r1, #0
     9e8:	b	7d0 <coda_cursor_goto_record_field_by_index>

000009ec <coda_cursor_goto_next_record_field>:
     9ec:	strd	r4, [sp, #-16]!
     9f0:	subs	r4, r0, #0
     9f4:	str	r6, [sp, #8]
     9f8:	str	lr, [sp, #12]
     9fc:	beq	b60 <coda_cursor_goto_next_record_field+0x174>
     a00:	ldr	r3, [r4, #4]
     a04:	cmp	r3, #1
     a08:	ble	b60 <coda_cursor_goto_next_record_field+0x174>
     a0c:	add	r2, r4, r3, lsl #4
     a10:	ldr	r1, [r2, #-24]	; 0xffffffe8
     a14:	cmp	r1, #0
     a18:	beq	b60 <coda_cursor_goto_next_record_field+0x174>
     a1c:	ldr	r2, [r1]
     a20:	cmp	r2, #99	; 0x63
     a24:	ldrhi	r1, [r1, #4]
     a28:	ldr	r1, [r1, #8]
     a2c:	cmp	r1, #0
     a30:	bne	b84 <coda_cursor_goto_next_record_field+0x198>
     a34:	sub	r3, r3, #1
     a38:	lsl	r3, r3, #4
     a3c:	add	r0, r4, r3
     a40:	ldr	r5, [r0, #12]
     a44:	cmn	r5, #1
     a48:	beq	ba8 <coda_cursor_goto_next_record_field+0x1bc>
     a4c:	cmp	r2, #101	; 0x65
     a50:	beq	b30 <coda_cursor_goto_next_record_field+0x144>
     a54:	bhi	a88 <coda_cursor_goto_next_record_field+0x9c>
     a58:	cmp	r2, #1
     a5c:	bls	b40 <coda_cursor_goto_next_record_field+0x154>
     a60:	cmp	r2, #100	; 0x64
     a64:	bne	ab8 <coda_cursor_goto_next_record_field+0xcc>
     a68:	mov	r0, r4
     a6c:	bl	0 <coda_mem_cursor_goto_next_record_field>
     a70:	cmp	r0, #0
     a74:	bne	a98 <coda_cursor_goto_next_record_field+0xac>
     a78:	ldr	r3, [r4, #4]
     a7c:	sub	r3, r3, #1
     a80:	lsl	r3, r3, #4
     a84:	b	ab8 <coda_cursor_goto_next_record_field+0xcc>
     a88:	cmp	r2, #102	; 0x66
     a8c:	bne	ab0 <coda_cursor_goto_next_record_field+0xc4>
     a90:	mvn	r0, #12
     a94:	bl	0 <coda_set_error>
     a98:	mvn	r5, #0
     a9c:	mov	r0, r5
     aa0:	ldrd	r4, [sp]
     aa4:	ldr	r6, [sp, #8]
     aa8:	add	sp, sp, #12
     aac:	pop	{pc}		; (ldr pc, [sp], #4)
     ab0:	cmp	r2, #105	; 0x69
     ab4:	bls	bbc <coda_cursor_goto_next_record_field+0x1d0>
     ab8:	add	r3, r4, r3
     abc:	ldr	r3, [r3, #8]
     ac0:	ldr	r3, [r3]
     ac4:	cmp	r3, #100	; 0x64
     ac8:	beq	b24 <coda_cursor_goto_next_record_field+0x138>
     acc:	ldr	r3, [pc, #260]	; bd8 <coda_cursor_goto_next_record_field+0x1ec>
     ad0:	mrc	15, 0, r2, cr13, cr0, {3}
     ad4:	ldr	r3, [pc, r3]
     ad8:	ldr	r5, [r2, r3]
     adc:	cmp	r5, #0
     ae0:	beq	a9c <coda_cursor_goto_next_record_field+0xb0>
     ae4:	ldr	r3, [r4, #4]
     ae8:	add	r3, r4, r3, lsl #4
     aec:	ldr	r3, [r3, #-8]
     af0:	ldr	r2, [r3]
     af4:	cmp	r2, #99	; 0x63
     af8:	ldrhi	r3, [r3, #4]
     afc:	ldr	r3, [r3, #8]
     b00:	cmp	r3, #6
     b04:	movne	r5, #0
     b08:	bne	a9c <coda_cursor_goto_next_record_field+0xb0>
     b0c:	mov	r0, r4
     b10:	bl	630 <coda_cursor_use_base_type_of_special_type>
     b14:	adds	r0, r0, #0
     b18:	movne	r0, #1
     b1c:	rsb	r5, r0, #0
     b20:	b	a9c <coda_cursor_goto_next_record_field+0xb0>
     b24:	mov	r0, r4
     b28:	bl	0 <coda_mem_cursor_update_offset>
     b2c:	b	acc <coda_cursor_goto_next_record_field+0xe0>
     b30:	mvn	r0, #10
     b34:	mvn	r5, #0
     b38:	bl	0 <coda_set_error>
     b3c:	b	a9c <coda_cursor_goto_next_record_field+0xb0>
     b40:	mov	r0, r4
     b44:	bl	0 <coda_ascbin_cursor_goto_next_record_field>
     b48:	cmp	r0, #0
     b4c:	bne	a98 <coda_cursor_goto_next_record_field+0xac>
     b50:	ldr	r3, [r4, #4]
     b54:	sub	r3, r3, #1
     b58:	lsl	r3, r3, #4
     b5c:	b	ab8 <coda_cursor_goto_next_record_field+0xcc>
     b60:	movw	r2, #0
     b64:	movt	r2, #0
     b68:	movw	r1, #0
     b6c:	movt	r1, #0
     b70:	movw	r3, #706	; 0x2c2
     b74:	mvn	r0, #99	; 0x63
     b78:	bl	0 <coda_set_error>
     b7c:	mvn	r5, #0
     b80:	b	a9c <coda_cursor_goto_next_record_field+0xb0>
     b84:	mov	r0, r1
     b88:	mvn	r5, #0
     b8c:	bl	0 <coda_type_get_class_name>
     b90:	mov	r2, r0
     b94:	movw	r1, #0
     b98:	movt	r1, #0
     b9c:	mvn	r0, #104	; 0x68
     ba0:	bl	0 <coda_set_error>
     ba4:	b	a9c <coda_cursor_goto_next_record_field+0xb0>
     ba8:	movw	r1, #0
     bac:	movt	r1, #0
     bb0:	mvn	r0, #104	; 0x68
     bb4:	bl	0 <coda_set_error>
     bb8:	b	a9c <coda_cursor_goto_next_record_field+0xb0>
     bbc:	movw	r1, #0
     bc0:	movt	r1, #0
     bc4:	ldr	r3, [pc, #16]	; bdc <coda_cursor_goto_next_record_field+0x1f0>
     bc8:	movw	r0, #0
     bcc:	movt	r0, #0
     bd0:	movw	r2, #766	; 0x2fe
     bd4:	bl	0 <__assert_fail>
     bd8:	.word	0x000000fc
     bdc:	.word	0x00000084

00000be0 <coda_cursor_goto_available_union_field>:
     be0:	str	r4, [sp, #-8]!
     be4:	subs	r4, r0, #0
     be8:	str	lr, [sp, #4]
     bec:	beq	d0c <coda_cursor_goto_available_union_field+0x12c>
     bf0:	ldr	r3, [r4, #4]
     bf4:	cmp	r3, #0
     bf8:	ble	d0c <coda_cursor_goto_available_union_field+0x12c>
     bfc:	add	r3, r4, r3, lsl #4
     c00:	ldr	r2, [r3, #-8]
     c04:	cmp	r2, #0
     c08:	beq	d0c <coda_cursor_goto_available_union_field+0x12c>
     c0c:	ldr	r3, [r2]
     c10:	cmp	r3, #99	; 0x63
     c14:	ldrhi	r2, [r2, #4]
     c18:	ldr	r0, [r2, #8]
     c1c:	cmp	r0, #0
     c20:	bne	d30 <coda_cursor_goto_available_union_field+0x150>
     c24:	cmp	r3, #100	; 0x64
     c28:	beq	cd0 <coda_cursor_goto_available_union_field+0xf0>
     c2c:	bhi	cac <coda_cursor_goto_available_union_field+0xcc>
     c30:	cmp	r3, #1
     c34:	bhi	c58 <coda_cursor_goto_available_union_field+0x78>
     c38:	mov	r0, r4
     c3c:	bl	0 <coda_ascbin_cursor_goto_available_union_field>
     c40:	cmp	r0, #0
     c44:	bne	ce0 <coda_cursor_goto_available_union_field+0x100>
     c48:	ldr	r3, [r4, #4]
     c4c:	add	r3, r4, r3, lsl #4
     c50:	ldr	r3, [r3, #-8]
     c54:	ldr	r3, [r3]
     c58:	cmp	r3, #100	; 0x64
     c5c:	beq	d00 <coda_cursor_goto_available_union_field+0x120>
     c60:	ldr	r3, [pc, #232]	; d50 <coda_cursor_goto_available_union_field+0x170>
     c64:	mrc	15, 0, r2, cr13, cr0, {3}
     c68:	ldr	r3, [pc, r3]
     c6c:	ldr	r0, [r2, r3]
     c70:	cmp	r0, #0
     c74:	beq	ca0 <coda_cursor_goto_available_union_field+0xc0>
     c78:	ldr	r3, [r4, #4]
     c7c:	add	r3, r4, r3, lsl #4
     c80:	ldr	r3, [r3, #-8]
     c84:	ldr	r2, [r3]
     c88:	cmp	r2, #99	; 0x63
     c8c:	ldrhi	r3, [r3, #4]
     c90:	ldr	r3, [r3, #8]
     c94:	cmp	r3, #6
     c98:	movne	r0, #0
     c9c:	beq	ce8 <coda_cursor_goto_available_union_field+0x108>
     ca0:	ldr	r4, [sp]
     ca4:	add	sp, sp, #4
     ca8:	pop	{pc}		; (ldr pc, [sp], #4)
     cac:	cmp	r3, #105	; 0x69
     cb0:	bhi	c58 <coda_cursor_goto_available_union_field+0x78>
     cb4:	movw	r1, #0
     cb8:	movt	r1, #0
     cbc:	ldr	r3, [pc, #144]	; d54 <coda_cursor_goto_available_union_field+0x174>
     cc0:	movw	r0, #0
     cc4:	movt	r0, #0
     cc8:	movw	r2, #835	; 0x343
     ccc:	bl	0 <__assert_fail>
     cd0:	mov	r0, r4
     cd4:	bl	0 <coda_mem_cursor_goto_available_union_field>
     cd8:	cmp	r0, #0
     cdc:	beq	c48 <coda_cursor_goto_available_union_field+0x68>
     ce0:	mvn	r0, #0
     ce4:	b	ca0 <coda_cursor_goto_available_union_field+0xc0>
     ce8:	mov	r0, r4
     cec:	bl	630 <coda_cursor_use_base_type_of_special_type>
     cf0:	adds	r0, r0, #0
     cf4:	movne	r0, #1
     cf8:	rsb	r0, r0, #0
     cfc:	b	ca0 <coda_cursor_goto_available_union_field+0xc0>
     d00:	mov	r0, r4
     d04:	bl	0 <coda_mem_cursor_update_offset>
     d08:	b	c60 <coda_cursor_goto_available_union_field+0x80>
     d0c:	mvn	r0, #99	; 0x63
     d10:	movw	r2, #0
     d14:	movt	r2, #0
     d18:	movw	r1, #0
     d1c:	movt	r1, #0
     d20:	movw	r3, #803	; 0x323
     d24:	bl	0 <coda_set_error>
     d28:	mvn	r0, #0
     d2c:	b	ca0 <coda_cursor_goto_available_union_field+0xc0>
     d30:	bl	0 <coda_type_get_class_name>
     d34:	mov	r2, r0
     d38:	movw	r1, #0
     d3c:	movt	r1, #0
     d40:	mvn	r0, #104	; 0x68
     d44:	bl	0 <coda_set_error>
     d48:	mvn	r0, #0
     d4c:	b	ca0 <coda_cursor_goto_available_union_field+0xc0>
     d50:	.word	0x000000e0
     d54:	.word	0x000000a8

00000d58 <coda_cursor_goto_array_element>:
     d58:	str	r4, [sp, #-8]!
     d5c:	subs	r4, r0, #0
     d60:	str	lr, [sp, #4]
     d64:	sub	sp, sp, #8
     d68:	beq	f0c <coda_cursor_goto_array_element+0x1b4>
     d6c:	ldr	ip, [r4, #4]
     d70:	cmp	ip, #0
     d74:	ble	f0c <coda_cursor_goto_array_element+0x1b4>
     d78:	add	r3, r4, ip, lsl #4
     d7c:	ldr	r0, [r3, #-8]
     d80:	cmp	r0, #0
     d84:	beq	f0c <coda_cursor_goto_array_element+0x1b4>
     d88:	ldr	r3, [r0]
     d8c:	cmp	r3, #99	; 0x63
     d90:	ldrhi	r0, [r0, #4]
     d94:	ldr	r0, [r0, #8]
     d98:	cmp	r0, #1
     d9c:	bne	f30 <coda_cursor_goto_array_element+0x1d8>
     da0:	cmp	ip, #32
     da4:	beq	f50 <coda_cursor_goto_array_element+0x1f8>
     da8:	cmp	r3, #101	; 0x65
     dac:	beq	ed8 <coda_cursor_goto_array_element+0x180>
     db0:	bls	e50 <coda_cursor_goto_array_element+0xf8>
     db4:	cmp	r3, #103	; 0x67
     db8:	beq	ef8 <coda_cursor_goto_array_element+0x1a0>
     dbc:	bcc	eb0 <coda_cursor_goto_array_element+0x158>
     dc0:	cmp	r3, #104	; 0x68
     dc4:	beq	ec4 <coda_cursor_goto_array_element+0x16c>
     dc8:	cmp	r3, #105	; 0x69
     dcc:	bne	df0 <coda_cursor_goto_array_element+0x98>
     dd0:	mov	r0, r4
     dd4:	bl	0 <coda_grib_cursor_goto_array_element>
     dd8:	cmp	r0, #0
     ddc:	bne	e70 <coda_cursor_goto_array_element+0x118>
     de0:	ldr	r3, [r4, #4]
     de4:	add	r3, r4, r3, lsl #4
     de8:	ldr	r3, [r3, #-8]
     dec:	ldr	r3, [r3]
     df0:	cmp	r3, #100	; 0x64
     df4:	bne	e00 <coda_cursor_goto_array_element+0xa8>
     df8:	mov	r0, r4
     dfc:	bl	0 <coda_mem_cursor_update_offset>
     e00:	ldr	r3, [pc, #372]	; f7c <coda_cursor_goto_array_element+0x224>
     e04:	mrc	15, 0, r2, cr13, cr0, {3}
     e08:	ldr	r3, [pc, r3]
     e0c:	ldr	r0, [r2, r3]
     e10:	cmp	r0, #0
     e14:	beq	e40 <coda_cursor_goto_array_element+0xe8>
     e18:	ldr	r3, [r4, #4]
     e1c:	add	r3, r4, r3, lsl #4
     e20:	ldr	r3, [r3, #-8]
     e24:	ldr	r2, [r3]
     e28:	cmp	r2, #99	; 0x63
     e2c:	ldrhi	r3, [r3, #4]
     e30:	ldr	r3, [r3, #8]
     e34:	cmp	r3, #6
     e38:	movne	r0, #0
     e3c:	beq	e84 <coda_cursor_goto_array_element+0x12c>
     e40:	add	sp, sp, #8
     e44:	ldr	r4, [sp]
     e48:	add	sp, sp, #4
     e4c:	pop	{pc}		; (ldr pc, [sp], #4)
     e50:	cmp	r3, #1
     e54:	bls	e9c <coda_cursor_goto_array_element+0x144>
     e58:	cmp	r3, #100	; 0x64
     e5c:	bne	e00 <coda_cursor_goto_array_element+0xa8>
     e60:	mov	r0, r4
     e64:	bl	0 <coda_mem_cursor_goto_array_element>
     e68:	cmp	r0, #0
     e6c:	beq	de0 <coda_cursor_goto_array_element+0x88>
     e70:	mvn	r0, #0
     e74:	add	sp, sp, #8
     e78:	ldr	r4, [sp]
     e7c:	add	sp, sp, #4
     e80:	pop	{pc}		; (ldr pc, [sp], #4)
     e84:	mov	r0, r4
     e88:	bl	630 <coda_cursor_use_base_type_of_special_type>
     e8c:	adds	r0, r0, #0
     e90:	movne	r0, #1
     e94:	rsb	r0, r0, #0
     e98:	b	e40 <coda_cursor_goto_array_element+0xe8>
     e9c:	mov	r0, r4
     ea0:	bl	0 <coda_ascbin_cursor_goto_array_element>
     ea4:	cmp	r0, #0
     ea8:	beq	de0 <coda_cursor_goto_array_element+0x88>
     eac:	b	e70 <coda_cursor_goto_array_element+0x118>
     eb0:	mvn	r0, #12
     eb4:	mov	r1, #0
     eb8:	bl	0 <coda_set_error>
     ebc:	mvn	r0, #0
     ec0:	b	e74 <coda_cursor_goto_array_element+0x11c>
     ec4:	mov	r0, r4
     ec8:	bl	0 <coda_netcdf_cursor_goto_array_element>
     ecc:	cmp	r0, #0
     ed0:	beq	de0 <coda_cursor_goto_array_element+0x88>
     ed4:	b	e70 <coda_cursor_goto_array_element+0x118>
     ed8:	mov	r1, #0
     edc:	mvn	r0, #10
     ee0:	bl	0 <coda_set_error>
     ee4:	mvn	r0, #0
     ee8:	add	sp, sp, #8
     eec:	ldr	r4, [sp]
     ef0:	add	sp, sp, #4
     ef4:	pop	{pc}		; (ldr pc, [sp], #4)
     ef8:	mov	r0, r4
     efc:	bl	0 <coda_cdf_cursor_goto_array_element>
     f00:	cmp	r0, #0
     f04:	beq	de0 <coda_cursor_goto_array_element+0x88>
     f08:	b	e70 <coda_cursor_goto_array_element+0x118>
     f0c:	mvn	r0, #99	; 0x63
     f10:	movw	r2, #0
     f14:	movt	r2, #0
     f18:	movw	r1, #0
     f1c:	movt	r1, #0
     f20:	movw	r3, #890	; 0x37a
     f24:	bl	0 <coda_set_error>
     f28:	mvn	r0, #0
     f2c:	b	e40 <coda_cursor_goto_array_element+0xe8>
     f30:	bl	0 <coda_type_get_class_name>
     f34:	mov	r2, r0
     f38:	movw	r1, #0
     f3c:	movt	r1, #0
     f40:	mvn	r0, #104	; 0x68
     f44:	bl	0 <coda_set_error>
     f48:	mvn	r0, #0
     f4c:	b	e40 <coda_cursor_goto_array_element+0xe8>
     f50:	movw	r0, #905	; 0x389
     f54:	mov	r2, ip
     f58:	movw	r3, #0
     f5c:	movt	r3, #0
     f60:	movw	r1, #0
     f64:	movt	r1, #0
     f68:	str	r0, [sp]
     f6c:	mvn	r0, #99	; 0x63
     f70:	bl	0 <coda_set_error>
     f74:	mvn	r0, #0
     f78:	b	e40 <coda_cursor_goto_array_element+0xe8>
     f7c:	.word	0x0000016c

00000f80 <coda_cursor_goto_array_element_by_index>:
     f80:	str	r4, [sp, #-8]!
     f84:	subs	r4, r0, #0
     f88:	str	lr, [sp, #4]
     f8c:	sub	sp, sp, #8
     f90:	beq	1134 <coda_cursor_goto_array_element_by_index+0x1b4>
     f94:	ldr	r2, [r4, #4]
     f98:	cmp	r2, #0
     f9c:	ble	1134 <coda_cursor_goto_array_element_by_index+0x1b4>
     fa0:	add	r3, r4, r2, lsl #4
     fa4:	ldr	r0, [r3, #-8]
     fa8:	cmp	r0, #0
     fac:	beq	1134 <coda_cursor_goto_array_element_by_index+0x1b4>
     fb0:	ldr	r3, [r0]
     fb4:	cmp	r3, #99	; 0x63
     fb8:	ldrhi	r0, [r0, #4]
     fbc:	ldr	r0, [r0, #8]
     fc0:	cmp	r0, #1
     fc4:	bne	1158 <coda_cursor_goto_array_element_by_index+0x1d8>
     fc8:	cmp	r2, #32
     fcc:	beq	1178 <coda_cursor_goto_array_element_by_index+0x1f8>
     fd0:	cmp	r3, #101	; 0x65
     fd4:	beq	1100 <coda_cursor_goto_array_element_by_index+0x180>
     fd8:	bls	1078 <coda_cursor_goto_array_element_by_index+0xf8>
     fdc:	cmp	r3, #103	; 0x67
     fe0:	beq	1120 <coda_cursor_goto_array_element_by_index+0x1a0>
     fe4:	bcc	10d8 <coda_cursor_goto_array_element_by_index+0x158>
     fe8:	cmp	r3, #104	; 0x68
     fec:	beq	10ec <coda_cursor_goto_array_element_by_index+0x16c>
     ff0:	cmp	r3, #105	; 0x69
     ff4:	bne	1018 <coda_cursor_goto_array_element_by_index+0x98>
     ff8:	mov	r0, r4
     ffc:	bl	0 <coda_grib_cursor_goto_array_element_by_index>
    1000:	cmp	r0, #0
    1004:	bne	1098 <coda_cursor_goto_array_element_by_index+0x118>
    1008:	ldr	r3, [r4, #4]
    100c:	add	r3, r4, r3, lsl #4
    1010:	ldr	r3, [r3, #-8]
    1014:	ldr	r3, [r3]
    1018:	cmp	r3, #100	; 0x64
    101c:	bne	1028 <coda_cursor_goto_array_element_by_index+0xa8>
    1020:	mov	r0, r4
    1024:	bl	0 <coda_mem_cursor_update_offset>
    1028:	ldr	r3, [pc, #368]	; 11a0 <coda_cursor_goto_array_element_by_index+0x220>
    102c:	mrc	15, 0, r2, cr13, cr0, {3}
    1030:	ldr	r3, [pc, r3]
    1034:	ldr	r0, [r2, r3]
    1038:	cmp	r0, #0
    103c:	beq	1068 <coda_cursor_goto_array_element_by_index+0xe8>
    1040:	ldr	r3, [r4, #4]
    1044:	add	r3, r4, r3, lsl #4
    1048:	ldr	r3, [r3, #-8]
    104c:	ldr	r2, [r3]
    1050:	cmp	r2, #99	; 0x63
    1054:	ldrhi	r3, [r3, #4]
    1058:	ldr	r3, [r3, #8]
    105c:	cmp	r3, #6
    1060:	movne	r0, #0
    1064:	beq	10ac <coda_cursor_goto_array_element_by_index+0x12c>
    1068:	add	sp, sp, #8
    106c:	ldr	r4, [sp]
    1070:	add	sp, sp, #4
    1074:	pop	{pc}		; (ldr pc, [sp], #4)
    1078:	cmp	r3, #1
    107c:	bls	10c4 <coda_cursor_goto_array_element_by_index+0x144>
    1080:	cmp	r3, #100	; 0x64
    1084:	bne	1028 <coda_cursor_goto_array_element_by_index+0xa8>
    1088:	mov	r0, r4
    108c:	bl	0 <coda_mem_cursor_goto_array_element_by_index>
    1090:	cmp	r0, #0
    1094:	beq	1008 <coda_cursor_goto_array_element_by_index+0x88>
    1098:	mvn	r0, #0
    109c:	add	sp, sp, #8
    10a0:	ldr	r4, [sp]
    10a4:	add	sp, sp, #4
    10a8:	pop	{pc}		; (ldr pc, [sp], #4)
    10ac:	mov	r0, r4
    10b0:	bl	630 <coda_cursor_use_base_type_of_special_type>
    10b4:	adds	r0, r0, #0
    10b8:	movne	r0, #1
    10bc:	rsb	r0, r0, #0
    10c0:	b	1068 <coda_cursor_goto_array_element_by_index+0xe8>
    10c4:	mov	r0, r4
    10c8:	bl	0 <coda_ascbin_cursor_goto_array_element_by_index>
    10cc:	cmp	r0, #0
    10d0:	beq	1008 <coda_cursor_goto_array_element_by_index+0x88>
    10d4:	b	1098 <coda_cursor_goto_array_element_by_index+0x118>
    10d8:	mvn	r0, #12
    10dc:	mov	r1, #0
    10e0:	bl	0 <coda_set_error>
    10e4:	mvn	r0, #0
    10e8:	b	109c <coda_cursor_goto_array_element_by_index+0x11c>
    10ec:	mov	r0, r4
    10f0:	bl	0 <coda_netcdf_cursor_goto_array_element_by_index>
    10f4:	cmp	r0, #0
    10f8:	beq	1008 <coda_cursor_goto_array_element_by_index+0x88>
    10fc:	b	1098 <coda_cursor_goto_array_element_by_index+0x118>
    1100:	mov	r1, #0
    1104:	mvn	r0, #10
    1108:	bl	0 <coda_set_error>
    110c:	mvn	r0, #0
    1110:	add	sp, sp, #8
    1114:	ldr	r4, [sp]
    1118:	add	sp, sp, #4
    111c:	pop	{pc}		; (ldr pc, [sp], #4)
    1120:	mov	r0, r4
    1124:	bl	0 <coda_cdf_cursor_goto_array_element_by_index>
    1128:	cmp	r0, #0
    112c:	beq	1008 <coda_cursor_goto_array_element_by_index+0x88>
    1130:	b	1098 <coda_cursor_goto_array_element_by_index+0x118>
    1134:	mvn	r0, #99	; 0x63
    1138:	movw	r2, #0
    113c:	movt	r2, #0
    1140:	movw	r1, #0
    1144:	movt	r1, #0
    1148:	mov	r3, #1008	; 0x3f0
    114c:	bl	0 <coda_set_error>
    1150:	mvn	r0, #0
    1154:	b	1068 <coda_cursor_goto_array_element_by_index+0xe8>
    1158:	bl	0 <coda_type_get_class_name>
    115c:	mov	r2, r0
    1160:	movw	r1, #0
    1164:	movt	r1, #0
    1168:	mvn	r0, #104	; 0x68
    116c:	bl	0 <coda_set_error>
    1170:	mvn	r0, #0
    1174:	b	1068 <coda_cursor_goto_array_element_by_index+0xe8>
    1178:	movw	r0, #1023	; 0x3ff
    117c:	movw	r3, #0
    1180:	movt	r3, #0
    1184:	movw	r1, #0
    1188:	movt	r1, #0
    118c:	str	r0, [sp]
    1190:	mvn	r0, #99	; 0x63
    1194:	bl	0 <coda_set_error>
    1198:	mvn	r0, #0
    119c:	b	1068 <coda_cursor_goto_array_element_by_index+0xe8>
    11a0:	.word	0x00000168

000011a4 <coda_cursor_goto_first_array_element>:
    11a4:	mov	r1, #0
    11a8:	b	f80 <coda_cursor_goto_array_element_by_index>

000011ac <coda_cursor_goto_next_array_element>:
    11ac:	strd	r4, [sp, #-16]!
    11b0:	subs	r4, r0, #0
    11b4:	str	r6, [sp, #8]
    11b8:	str	lr, [sp, #12]
    11bc:	beq	1368 <coda_cursor_goto_next_array_element+0x1bc>
    11c0:	ldr	r3, [r4, #4]
    11c4:	cmp	r3, #1
    11c8:	ble	1368 <coda_cursor_goto_next_array_element+0x1bc>
    11cc:	sub	r2, r3, #1
    11d0:	lsl	r2, r2, #4
    11d4:	add	r1, r4, r2
    11d8:	ldr	ip, [r1, #8]
    11dc:	cmp	ip, #0
    11e0:	beq	1368 <coda_cursor_goto_next_array_element+0x1bc>
    11e4:	add	r3, r4, r3, lsl #4
    11e8:	ldr	r1, [r3, #-24]	; 0xffffffe8
    11ec:	ldr	r3, [r1]
    11f0:	cmp	r3, #99	; 0x63
    11f4:	ldrhi	r1, [r1, #4]
    11f8:	ldr	r0, [r1, #8]
    11fc:	cmp	r0, #1
    1200:	bne	138c <coda_cursor_goto_next_array_element+0x1e0>
    1204:	add	r2, r4, r2
    1208:	ldr	r5, [r2, #12]
    120c:	cmn	r5, #1
    1210:	beq	13ac <coda_cursor_goto_next_array_element+0x200>
    1214:	cmp	r3, #101	; 0x65
    1218:	beq	1340 <coda_cursor_goto_next_array_element+0x194>
    121c:	bls	12b8 <coda_cursor_goto_next_array_element+0x10c>
    1220:	cmp	r3, #103	; 0x67
    1224:	beq	1354 <coda_cursor_goto_next_array_element+0x1a8>
    1228:	bcc	1304 <coda_cursor_goto_next_array_element+0x158>
    122c:	cmp	r3, #104	; 0x68
    1230:	beq	1318 <coda_cursor_goto_next_array_element+0x16c>
    1234:	cmp	r3, #105	; 0x69
    1238:	bne	1258 <coda_cursor_goto_next_array_element+0xac>
    123c:	mov	r0, r4
    1240:	bl	0 <coda_grib_cursor_goto_next_array_element>
    1244:	cmp	r0, #0
    1248:	bne	12d8 <coda_cursor_goto_next_array_element+0x12c>
    124c:	ldr	r3, [r4, #4]
    1250:	add	r3, r4, r3, lsl #4
    1254:	ldr	ip, [r3, #-8]
    1258:	ldr	r3, [ip]
    125c:	cmp	r3, #100	; 0x64
    1260:	beq	12f8 <coda_cursor_goto_next_array_element+0x14c>
    1264:	ldr	r3, [pc, #340]	; 13c0 <coda_cursor_goto_next_array_element+0x214>
    1268:	mrc	15, 0, r2, cr13, cr0, {3}
    126c:	ldr	r3, [pc, r3]
    1270:	ldr	r5, [r2, r3]
    1274:	cmp	r5, #0
    1278:	beq	12a4 <coda_cursor_goto_next_array_element+0xf8>
    127c:	ldr	r3, [r4, #4]
    1280:	add	r3, r4, r3, lsl #4
    1284:	ldr	r3, [r3, #-8]
    1288:	ldr	r2, [r3]
    128c:	cmp	r2, #99	; 0x63
    1290:	ldrhi	r3, [r3, #4]
    1294:	ldr	r3, [r3, #8]
    1298:	cmp	r3, #6
    129c:	movne	r5, #0
    12a0:	beq	12e0 <coda_cursor_goto_next_array_element+0x134>
    12a4:	mov	r0, r5
    12a8:	ldrd	r4, [sp]
    12ac:	ldr	r6, [sp, #8]
    12b0:	add	sp, sp, #12
    12b4:	pop	{pc}		; (ldr pc, [sp], #4)
    12b8:	cmp	r3, #1
    12bc:	bls	132c <coda_cursor_goto_next_array_element+0x180>
    12c0:	cmp	r3, #100	; 0x64
    12c4:	bne	1258 <coda_cursor_goto_next_array_element+0xac>
    12c8:	mov	r0, r4
    12cc:	bl	0 <coda_mem_cursor_goto_next_array_element>
    12d0:	cmp	r0, #0
    12d4:	beq	124c <coda_cursor_goto_next_array_element+0xa0>
    12d8:	mvn	r5, #0
    12dc:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    12e0:	mov	r0, r4
    12e4:	bl	630 <coda_cursor_use_base_type_of_special_type>
    12e8:	adds	r0, r0, #0
    12ec:	movne	r0, #1
    12f0:	rsb	r5, r0, #0
    12f4:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    12f8:	mov	r0, r4
    12fc:	bl	0 <coda_mem_cursor_update_offset>
    1300:	b	1264 <coda_cursor_goto_next_array_element+0xb8>
    1304:	mov	r1, #0
    1308:	mvn	r0, #12
    130c:	bl	0 <coda_set_error>
    1310:	mvn	r5, #0
    1314:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    1318:	mov	r0, r4
    131c:	bl	0 <coda_netcdf_cursor_goto_next_array_element>
    1320:	cmp	r0, #0
    1324:	beq	124c <coda_cursor_goto_next_array_element+0xa0>
    1328:	b	12d8 <coda_cursor_goto_next_array_element+0x12c>
    132c:	mov	r0, r4
    1330:	bl	0 <coda_ascbin_cursor_goto_next_array_element>
    1334:	cmp	r0, #0
    1338:	beq	124c <coda_cursor_goto_next_array_element+0xa0>
    133c:	b	12d8 <coda_cursor_goto_next_array_element+0x12c>
    1340:	mov	r1, #0
    1344:	mvn	r0, #10
    1348:	bl	0 <coda_set_error>
    134c:	mvn	r5, #0
    1350:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    1354:	mov	r0, r4
    1358:	bl	0 <coda_cdf_cursor_goto_next_array_element>
    135c:	cmp	r0, #0
    1360:	beq	124c <coda_cursor_goto_next_array_element+0xa0>
    1364:	b	12d8 <coda_cursor_goto_next_array_element+0x12c>
    1368:	movw	r2, #0
    136c:	movt	r2, #0
    1370:	movw	r1, #0
    1374:	movt	r1, #0
    1378:	movw	r3, #1134	; 0x46e
    137c:	mvn	r0, #99	; 0x63
    1380:	bl	0 <coda_set_error>
    1384:	mvn	r5, #0
    1388:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    138c:	bl	0 <coda_type_get_class_name>
    1390:	mov	r2, r0
    1394:	movw	r1, #0
    1398:	movt	r1, #0
    139c:	mvn	r0, #104	; 0x68
    13a0:	mvn	r5, #0
    13a4:	bl	0 <coda_set_error>
    13a8:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    13ac:	movw	r1, #0
    13b0:	movt	r1, #0
    13b4:	mvn	r0, #104	; 0x68
    13b8:	bl	0 <coda_set_error>
    13bc:	b	12a4 <coda_cursor_goto_next_array_element+0xf8>
    13c0:	.word	0x0000014c

000013c4 <coda_cursor_goto_root>:
    13c4:	str	r4, [sp, #-8]!
    13c8:	subs	r4, r0, #0
    13cc:	str	lr, [sp, #4]
    13d0:	beq	1474 <coda_cursor_goto_root+0xb0>
    13d4:	ldr	r3, [r4, #4]
    13d8:	cmp	r3, #0
    13dc:	ble	1474 <coda_cursor_goto_root+0xb0>
    13e0:	add	r3, r4, r3, lsl #4
    13e4:	ldr	r3, [r3, #-8]
    13e8:	cmp	r3, #0
    13ec:	beq	1474 <coda_cursor_goto_root+0xb0>
    13f0:	ldr	r3, [r4, #8]
    13f4:	mov	r2, #1
    13f8:	ldr	r3, [r3]
    13fc:	str	r2, [r4, #4]
    1400:	cmp	r3, #100	; 0x64
    1404:	beq	146c <coda_cursor_goto_root+0xa8>
    1408:	ldr	r3, [pc, #136]	; 1498 <coda_cursor_goto_root+0xd4>
    140c:	mrc	15, 0, r2, cr13, cr0, {3}
    1410:	ldr	r3, [pc, r3]
    1414:	ldr	r0, [r2, r3]
    1418:	cmp	r0, #0
    141c:	beq	1448 <coda_cursor_goto_root+0x84>
    1420:	ldr	r3, [r4, #4]
    1424:	add	r3, r4, r3, lsl #4
    1428:	ldr	r3, [r3, #-8]
    142c:	ldr	r2, [r3]
    1430:	cmp	r2, #99	; 0x63
    1434:	ldrhi	r3, [r3, #4]
    1438:	ldr	r3, [r3, #8]
    143c:	cmp	r3, #6
    1440:	movne	r0, #0
    1444:	beq	1454 <coda_cursor_goto_root+0x90>
    1448:	ldr	r4, [sp]
    144c:	add	sp, sp, #4
    1450:	pop	{pc}		; (ldr pc, [sp], #4)
    1454:	mov	r0, r4
    1458:	bl	630 <coda_cursor_use_base_type_of_special_type>
    145c:	adds	r0, r0, #0
    1460:	movne	r0, #1
    1464:	rsb	r0, r0, #0
    1468:	b	1448 <coda_cursor_goto_root+0x84>
    146c:	bl	0 <coda_mem_cursor_update_offset>
    1470:	b	1408 <coda_cursor_goto_root+0x44>
    1474:	mvn	r0, #99	; 0x63
    1478:	movw	r2, #0
    147c:	movt	r2, #0
    1480:	movw	r1, #0
    1484:	movt	r1, #0
    1488:	movw	r3, #1359	; 0x54f
    148c:	bl	0 <coda_set_error>
    1490:	mvn	r0, #0
    1494:	b	1448 <coda_cursor_goto_root+0x84>
    1498:	.word	0x00000080

0000149c <coda_cursor_has_ascii_content>:
    149c:	subs	r2, r0, #0
    14a0:	str	r4, [sp, #-8]!
    14a4:	str	lr, [sp, #4]
    14a8:	sub	sp, sp, #520	; 0x208
    14ac:	beq	1564 <coda_cursor_has_ascii_content+0xc8>
    14b0:	ldr	r3, [r2, #4]
    14b4:	cmp	r3, #0
    14b8:	ble	1564 <coda_cursor_has_ascii_content+0xc8>
    14bc:	add	r3, r2, r3, lsl #4
    14c0:	ldr	r3, [r3, #-8]
    14c4:	cmp	r3, #0
    14c8:	beq	1564 <coda_cursor_has_ascii_content+0xc8>
    14cc:	cmp	r1, #0
    14d0:	mov	r4, r1
    14d4:	beq	1588 <coda_cursor_has_ascii_content+0xec>
    14d8:	ldr	r0, [r3]
    14dc:	cmp	r0, #0
    14e0:	moveq	r3, #1
    14e4:	streq	r3, [r1]
    14e8:	beq	1520 <coda_cursor_has_ascii_content+0x84>
    14ec:	cmp	r0, #99	; 0x63
    14f0:	ldrhi	r3, [r3, #4]
    14f4:	ldr	r1, [r3, #8]
    14f8:	cmp	r1, #6
    14fc:	beq	1530 <coda_cursor_has_ascii_content+0x94>
    1500:	ldr	r3, [r3]
    1504:	sub	r1, r1, #4
    1508:	mov	r0, #0
    150c:	clz	r1, r1
    1510:	lsr	r1, r1, #5
    1514:	cmp	r3, r0
    1518:	moveq	r1, #1
    151c:	str	r1, [r4]
    1520:	add	sp, sp, #520	; 0x208
    1524:	ldr	r4, [sp]
    1528:	add	sp, sp, #4
    152c:	pop	{pc}		; (ldr pc, [sp], #4)
    1530:	mov	r1, r2
    1534:	mov	r0, sp
    1538:	mov	r2, #520	; 0x208
    153c:	bl	0 <memcpy>
    1540:	mov	r0, sp
    1544:	bl	630 <coda_cursor_use_base_type_of_special_type>
    1548:	cmp	r0, #0
    154c:	mvnne	r0, #0
    1550:	bne	1520 <coda_cursor_has_ascii_content+0x84>
    1554:	mov	r1, r4
    1558:	mov	r0, sp
    155c:	bl	149c <coda_cursor_has_ascii_content>
    1560:	b	1520 <coda_cursor_has_ascii_content+0x84>
    1564:	mvn	r0, #99	; 0x63
    1568:	movw	r2, #0
    156c:	movt	r2, #0
    1570:	movw	r1, #0
    1574:	movt	r1, #0
    1578:	movw	r3, #1477	; 0x5c5
    157c:	bl	0 <coda_set_error>
    1580:	mvn	r0, #0
    1584:	b	1520 <coda_cursor_has_ascii_content+0x84>
    1588:	mvn	r0, #99	; 0x63
    158c:	movw	r2, #0
    1590:	movt	r2, #0
    1594:	movw	r1, #0
    1598:	movt	r1, #0
    159c:	movw	r3, #1482	; 0x5ca
    15a0:	bl	0 <coda_set_error>
    15a4:	mvn	r0, #0
    15a8:	b	1520 <coda_cursor_has_ascii_content+0x84>

000015ac <coda_cursor_has_attributes>:
    15ac:	cmp	r0, #0
    15b0:	str	r4, [sp, #-8]!
    15b4:	str	lr, [sp, #4]
    15b8:	beq	160c <coda_cursor_has_attributes+0x60>
    15bc:	ldr	r3, [r0, #4]
    15c0:	cmp	r3, #0
    15c4:	ble	160c <coda_cursor_has_attributes+0x60>
    15c8:	add	r0, r0, r3, lsl #4
    15cc:	ldr	r3, [r0, #-8]
    15d0:	cmp	r3, #0
    15d4:	beq	160c <coda_cursor_has_attributes+0x60>
    15d8:	cmp	r1, #0
    15dc:	beq	1630 <coda_cursor_has_attributes+0x84>
    15e0:	ldr	r2, [r3]
    15e4:	mov	r0, #0
    15e8:	cmp	r2, #99	; 0x63
    15ec:	ldrhi	r3, [r3, #4]
    15f0:	ldr	r3, [r3, #36]	; 0x24
    15f4:	subs	r3, r3, r0
    15f8:	movne	r3, #1
    15fc:	str	r3, [r1]
    1600:	ldr	r4, [sp]
    1604:	add	sp, sp, #4
    1608:	pop	{pc}		; (ldr pc, [sp], #4)
    160c:	mvn	r0, #99	; 0x63
    1610:	movw	r2, #0
    1614:	movt	r2, #0
    1618:	movw	r1, #0
    161c:	movt	r1, #0
    1620:	movw	r3, #1528	; 0x5f8
    1624:	bl	0 <coda_set_error>
    1628:	mvn	r0, #0
    162c:	b	1600 <coda_cursor_has_attributes+0x54>
    1630:	mvn	r0, #99	; 0x63
    1634:	movw	r2, #0
    1638:	movt	r2, #0
    163c:	movw	r1, #0
    1640:	movt	r1, #0
    1644:	movw	r3, #1533	; 0x5fd
    1648:	bl	0 <coda_set_error>
    164c:	mvn	r0, #0
    1650:	b	1600 <coda_cursor_has_attributes+0x54>

00001654 <coda_cursor_get_string_length>:
    1654:	strd	r4, [sp, #-12]!
    1658:	subs	r4, r0, #0
    165c:	str	lr, [sp, #8]
    1660:	sub	sp, sp, #12
    1664:	beq	17bc <coda_cursor_get_string_length+0x168>
    1668:	ldr	r3, [r4, #4]
    166c:	cmp	r3, #0
    1670:	ble	17bc <coda_cursor_get_string_length+0x168>
    1674:	add	r3, r4, r3, lsl #4
    1678:	ldr	r3, [r3, #-8]
    167c:	cmp	r3, #0
    1680:	beq	17bc <coda_cursor_get_string_length+0x168>
    1684:	cmp	r1, #0
    1688:	mov	r5, r1
    168c:	beq	1800 <coda_cursor_get_string_length+0x1ac>
    1690:	add	r1, sp, #4
    1694:	bl	149c <coda_cursor_has_ascii_content>
    1698:	subs	r1, r0, #0
    169c:	bne	17e0 <coda_cursor_get_string_length+0x18c>
    16a0:	ldr	r3, [sp, #4]
    16a4:	cmp	r3, #0
    16a8:	beq	17e8 <coda_cursor_get_string_length+0x194>
    16ac:	ldr	r3, [r4, #4]
    16b0:	add	r3, r4, r3, lsl #4
    16b4:	ldr	r3, [r3, #-8]
    16b8:	ldr	r3, [r3]
    16bc:	cmp	r3, #101	; 0x65
    16c0:	beq	1784 <coda_cursor_get_string_length+0x130>
    16c4:	bhi	16fc <coda_cursor_get_string_length+0xa8>
    16c8:	cmp	r3, #1
    16cc:	beq	1768 <coda_cursor_get_string_length+0x114>
    16d0:	cmp	r3, #0
    16d4:	beq	172c <coda_cursor_get_string_length+0xd8>
    16d8:	cmp	r3, #100	; 0x64
    16dc:	bne	1824 <coda_cursor_get_string_length+0x1d0>
    16e0:	mov	r1, r5
    16e4:	mov	r0, r4
    16e8:	bl	0 <coda_mem_cursor_get_string_length>
    16ec:	add	sp, sp, #12
    16f0:	ldrd	r4, [sp]
    16f4:	add	sp, sp, #8
    16f8:	pop	{pc}		; (ldr pc, [sp], #4)
    16fc:	cmp	r3, #103	; 0x67
    1700:	beq	17a0 <coda_cursor_get_string_length+0x14c>
    1704:	bcc	1748 <coda_cursor_get_string_length+0xf4>
    1708:	cmp	r3, #104	; 0x68
    170c:	bne	1824 <coda_cursor_get_string_length+0x1d0>
    1710:	mov	r1, r5
    1714:	mov	r0, r4
    1718:	bl	0 <coda_netcdf_cursor_get_string_length>
    171c:	add	sp, sp, #12
    1720:	ldrd	r4, [sp]
    1724:	add	sp, sp, #8
    1728:	pop	{pc}		; (ldr pc, [sp], #4)
    172c:	mov	r1, r5
    1730:	mov	r0, r4
    1734:	bl	0 <coda_ascii_cursor_get_string_length>
    1738:	add	sp, sp, #12
    173c:	ldrd	r4, [sp]
    1740:	add	sp, sp, #8
    1744:	pop	{pc}		; (ldr pc, [sp], #4)
    1748:	mov	r1, #0
    174c:	mvn	r0, #12
    1750:	bl	0 <coda_set_error>
    1754:	mvn	r0, #0
    1758:	add	sp, sp, #12
    175c:	ldrd	r4, [sp]
    1760:	add	sp, sp, #8
    1764:	pop	{pc}		; (ldr pc, [sp], #4)
    1768:	mov	r1, r5
    176c:	mov	r0, r4
    1770:	bl	0 <coda_bin_cursor_get_string_length>
    1774:	add	sp, sp, #12
    1778:	ldrd	r4, [sp]
    177c:	add	sp, sp, #8
    1780:	pop	{pc}		; (ldr pc, [sp], #4)
    1784:	mvn	r0, #10
    1788:	bl	0 <coda_set_error>
    178c:	mvn	r0, #0
    1790:	add	sp, sp, #12
    1794:	ldrd	r4, [sp]
    1798:	add	sp, sp, #8
    179c:	pop	{pc}		; (ldr pc, [sp], #4)
    17a0:	mov	r1, r5
    17a4:	mov	r0, r4
    17a8:	bl	0 <coda_cdf_cursor_get_string_length>
    17ac:	add	sp, sp, #12
    17b0:	ldrd	r4, [sp]
    17b4:	add	sp, sp, #8
    17b8:	pop	{pc}		; (ldr pc, [sp], #4)
    17bc:	mvn	r0, #99	; 0x63
    17c0:	movw	r2, #0
    17c4:	movt	r2, #0
    17c8:	movw	r1, #0
    17cc:	movt	r1, #0
    17d0:	movw	r3, #1559	; 0x617
    17d4:	bl	0 <coda_set_error>
    17d8:	mvn	r0, #0
    17dc:	b	171c <coda_cursor_get_string_length+0xc8>
    17e0:	mvn	r0, #0
    17e4:	b	171c <coda_cursor_get_string_length+0xc8>
    17e8:	mvn	r0, #104	; 0x68
    17ec:	movw	r1, #0
    17f0:	movt	r1, #0
    17f4:	bl	0 <coda_set_error>
    17f8:	mvn	r0, #0
    17fc:	b	171c <coda_cursor_get_string_length+0xc8>
    1800:	mvn	r0, #99	; 0x63
    1804:	movw	r2, #0
    1808:	movt	r2, #0
    180c:	movw	r1, #0
    1810:	movt	r1, #0
    1814:	movw	r3, #1564	; 0x61c
    1818:	bl	0 <coda_set_error>
    181c:	mvn	r0, #0
    1820:	b	171c <coda_cursor_get_string_length+0xc8>
    1824:	movw	r1, #0
    1828:	movt	r1, #0
    182c:	ldr	r3, [pc, #12]	; 1840 <coda_cursor_get_string_length+0x1ec>
    1830:	movw	r0, #0
    1834:	movt	r0, #0
    1838:	movw	r2, #1608	; 0x648
    183c:	bl	0 <__assert_fail>
    1840:	.word	0x000000d0

00001844 <coda_cursor_get_bit_size>:
    1844:	subs	r3, r0, #0
    1848:	beq	18b8 <coda_cursor_get_bit_size+0x74>
    184c:	ldr	r2, [r3, #4]
    1850:	cmp	r2, #0
    1854:	ble	18b8 <coda_cursor_get_bit_size+0x74>
    1858:	add	r3, r3, r2, lsl #4
    185c:	ldr	r3, [r3, #-8]
    1860:	cmp	r3, #0
    1864:	beq	18b8 <coda_cursor_get_bit_size+0x74>
    1868:	ldr	r3, [r3]
    186c:	cmp	r3, #100	; 0x64
    1870:	beq	18b0 <coda_cursor_get_bit_size+0x6c>
    1874:	bhi	188c <coda_cursor_get_bit_size+0x48>
    1878:	cmp	r3, #0
    187c:	beq	18b4 <coda_cursor_get_bit_size+0x70>
    1880:	cmp	r3, #1
    1884:	bne	18a8 <coda_cursor_get_bit_size+0x64>
    1888:	b	0 <coda_bin_cursor_get_bit_size>
    188c:	cmp	r3, #105	; 0x69
    1890:	bhi	18a8 <coda_cursor_get_bit_size+0x64>
    1894:	mvn	r2, #0
    1898:	mvn	r3, #0
    189c:	mov	r0, #0
    18a0:	strd	r2, [r1]
    18a4:	bx	lr
    18a8:	mov	r0, #0
    18ac:	bx	lr
    18b0:	b	0 <coda_mem_cursor_get_bit_size>
    18b4:	b	0 <coda_ascii_cursor_get_bit_size>
    18b8:	mvn	r0, #99	; 0x63
    18bc:	movw	r2, #0
    18c0:	movt	r2, #0
    18c4:	movw	r1, #0
    18c8:	movt	r1, #0
    18cc:	movw	r3, #1630	; 0x65e
    18d0:	str	r4, [sp, #-8]!
    18d4:	str	lr, [sp, #4]
    18d8:	bl	0 <coda_set_error>
    18dc:	ldr	r4, [sp]
    18e0:	add	sp, sp, #4
    18e4:	mvn	r0, #0
    18e8:	pop	{pc}		; (ldr pc, [sp], #4)

000018ec <coda_cursor_get_byte_size>:
    18ec:	subs	r3, r0, #0
    18f0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    18f4:	str	r6, [sp, #8]
    18f8:	strd	r8, [sp, #12]
    18fc:	str	lr, [sp, #20]
    1900:	sub	sp, sp, #8
    1904:	beq	1990 <coda_cursor_get_byte_size+0xa4>
    1908:	ldr	r2, [r3, #4]
    190c:	cmp	r2, #0
    1910:	ble	1990 <coda_cursor_get_byte_size+0xa4>
    1914:	add	r3, r3, r2, lsl #4
    1918:	ldr	r3, [r3, #-8]
    191c:	cmp	r3, #0
    1920:	beq	1990 <coda_cursor_get_byte_size+0xa4>
    1924:	mov	r6, r1
    1928:	mov	r1, sp
    192c:	bl	1844 <coda_cursor_get_bit_size>
    1930:	cmp	r0, #0
    1934:	bne	19b4 <coda_cursor_get_byte_size+0xc8>
    1938:	ldrd	r4, [sp]
    193c:	cmp	r4, #0
    1940:	sbcs	r3, r5, #0
    1944:	mvnlt	r2, #0
    1948:	mvnlt	r3, #0
    194c:	strdlt	r2, [r6]
    1950:	blt	1978 <coda_cursor_get_byte_size+0x8c>
    1954:	lsr	r8, r4, #3
    1958:	and	r1, r4, #7
    195c:	adds	r1, r1, #0
    1960:	asr	r9, r5, #3
    1964:	orr	r8, r8, r5, lsl #29
    1968:	movne	r1, #1
    196c:	adds	r2, r8, r1
    1970:	adc	r3, r9, #0
    1974:	strd	r2, [r6]
    1978:	add	sp, sp, #8
    197c:	ldrd	r4, [sp]
    1980:	ldr	r6, [sp, #8]
    1984:	ldrd	r8, [sp, #12]
    1988:	add	sp, sp, #20
    198c:	pop	{pc}		; (ldr pc, [sp], #4)
    1990:	mvn	r0, #99	; 0x63
    1994:	movw	r2, #0
    1998:	movt	r2, #0
    199c:	movw	r1, #0
    19a0:	movt	r1, #0
    19a4:	movw	r3, #1670	; 0x686
    19a8:	bl	0 <coda_set_error>
    19ac:	mvn	r0, #0
    19b0:	b	1978 <coda_cursor_get_byte_size+0x8c>
    19b4:	mvn	r0, #0
    19b8:	b	1978 <coda_cursor_get_byte_size+0x8c>

000019bc <coda_cursor_get_num_elements>:
    19bc:	subs	r3, r0, #0
    19c0:	str	r4, [sp, #-8]!
    19c4:	str	lr, [sp, #4]
    19c8:	beq	1ac4 <coda_cursor_get_num_elements+0x108>
    19cc:	ldr	r2, [r3, #4]
    19d0:	cmp	r2, #0
    19d4:	ble	1ac4 <coda_cursor_get_num_elements+0x108>
    19d8:	add	r3, r3, r2, lsl #4
    19dc:	ldr	r3, [r3, #-8]
    19e0:	cmp	r3, #0
    19e4:	beq	1ac4 <coda_cursor_get_num_elements+0x108>
    19e8:	ldr	r3, [r3]
    19ec:	cmp	r3, #101	; 0x65
    19f0:	beq	1a6c <coda_cursor_get_num_elements+0xb0>
    19f4:	bls	1a24 <coda_cursor_get_num_elements+0x68>
    19f8:	cmp	r3, #103	; 0x67
    19fc:	beq	1a98 <coda_cursor_get_num_elements+0xdc>
    1a00:	bcc	1aa8 <coda_cursor_get_num_elements+0xec>
    1a04:	cmp	r3, #104	; 0x68
    1a08:	beq	1a5c <coda_cursor_get_num_elements+0xa0>
    1a0c:	cmp	r3, #105	; 0x69
    1a10:	bne	1ae4 <coda_cursor_get_num_elements+0x128>
    1a14:	ldr	r4, [sp]
    1a18:	ldr	lr, [sp, #4]
    1a1c:	add	sp, sp, #8
    1a20:	b	0 <coda_grib_cursor_get_num_elements>
    1a24:	cmp	r3, #1
    1a28:	beq	1a88 <coda_cursor_get_num_elements+0xcc>
    1a2c:	cmp	r3, #0
    1a30:	beq	1a4c <coda_cursor_get_num_elements+0x90>
    1a34:	cmp	r3, #100	; 0x64
    1a38:	bne	1ae4 <coda_cursor_get_num_elements+0x128>
    1a3c:	ldr	r4, [sp]
    1a40:	ldr	lr, [sp, #4]
    1a44:	add	sp, sp, #8
    1a48:	b	0 <coda_mem_cursor_get_num_elements>
    1a4c:	ldr	r4, [sp]
    1a50:	ldr	lr, [sp, #4]
    1a54:	add	sp, sp, #8
    1a58:	b	0 <coda_ascii_cursor_get_num_elements>
    1a5c:	ldr	r4, [sp]
    1a60:	ldr	lr, [sp, #4]
    1a64:	add	sp, sp, #8
    1a68:	b	0 <coda_netcdf_cursor_get_num_elements>
    1a6c:	mov	r1, #0
    1a70:	mvn	r0, #10
    1a74:	bl	0 <coda_set_error>
    1a78:	ldr	r4, [sp]
    1a7c:	add	sp, sp, #4
    1a80:	mvn	r0, #0
    1a84:	pop	{pc}		; (ldr pc, [sp], #4)
    1a88:	ldr	r4, [sp]
    1a8c:	ldr	lr, [sp, #4]
    1a90:	add	sp, sp, #8
    1a94:	b	0 <coda_bin_cursor_get_num_elements>
    1a98:	ldr	r4, [sp]
    1a9c:	ldr	lr, [sp, #4]
    1aa0:	add	sp, sp, #8
    1aa4:	b	0 <coda_cdf_cursor_get_num_elements>
    1aa8:	mvn	r0, #12
    1aac:	mov	r1, #0
    1ab0:	bl	0 <coda_set_error>
    1ab4:	ldr	r4, [sp]
    1ab8:	add	sp, sp, #4
    1abc:	mvn	r0, #0
    1ac0:	pop	{pc}		; (ldr pc, [sp], #4)
    1ac4:	movw	r2, #0
    1ac8:	movt	r2, #0
    1acc:	movw	r1, #0
    1ad0:	movt	r1, #0
    1ad4:	movw	r3, #1704	; 0x6a8
    1ad8:	mvn	r0, #99	; 0x63
    1adc:	bl	0 <coda_set_error>
    1ae0:	b	1a78 <coda_cursor_get_num_elements+0xbc>
    1ae4:	movw	r1, #0
    1ae8:	movt	r1, #0
    1aec:	ldr	r3, [pc, #12]	; 1b00 <coda_cursor_get_num_elements+0x144>
    1af0:	movw	r0, #0
    1af4:	movt	r0, #0
    1af8:	movw	r2, #1738	; 0x6ca
    1afc:	bl	0 <__assert_fail>
    1b00:	.word	0x000000f0

00001b04 <coda_cursor_get_product_file>:
    1b04:	cmp	r0, #0
    1b08:	beq	1b38 <coda_cursor_get_product_file+0x34>
    1b0c:	ldr	r3, [r0, #4]
    1b10:	cmp	r3, #0
    1b14:	ble	1b38 <coda_cursor_get_product_file+0x34>
    1b18:	add	r3, r0, r3, lsl #4
    1b1c:	ldr	r3, [r3, #-8]
    1b20:	cmp	r3, #0
    1b24:	beq	1b38 <coda_cursor_get_product_file+0x34>
    1b28:	ldr	r3, [r0]
    1b2c:	mov	r0, #0
    1b30:	str	r3, [r1]
    1b34:	bx	lr
    1b38:	mvn	r0, #99	; 0x63
    1b3c:	movw	r2, #0
    1b40:	movt	r2, #0
    1b44:	movw	r1, #0
    1b48:	movt	r1, #0
    1b4c:	movw	r3, #1753	; 0x6d9
    1b50:	str	r4, [sp, #-8]!
    1b54:	str	lr, [sp, #4]
    1b58:	bl	0 <coda_set_error>
    1b5c:	ldr	r4, [sp]
    1b60:	add	sp, sp, #4
    1b64:	mvn	r0, #0
    1b68:	pop	{pc}		; (ldr pc, [sp], #4)

00001b6c <coda_cursor_get_depth>:
    1b6c:	cmp	r0, #0
    1b70:	str	r4, [sp, #-8]!
    1b74:	str	lr, [sp, #4]
    1b78:	beq	1bb8 <coda_cursor_get_depth+0x4c>
    1b7c:	ldr	r3, [r0, #4]
    1b80:	cmp	r3, #0
    1b84:	ble	1bb8 <coda_cursor_get_depth+0x4c>
    1b88:	sub	r3, r3, #1
    1b8c:	add	r0, r0, r3, lsl #4
    1b90:	ldr	r2, [r0, #8]
    1b94:	cmp	r2, #0
    1b98:	beq	1bb8 <coda_cursor_get_depth+0x4c>
    1b9c:	cmp	r1, #0
    1ba0:	movne	r0, #0
    1ba4:	strne	r3, [r1]
    1ba8:	beq	1bdc <coda_cursor_get_depth+0x70>
    1bac:	ldr	r4, [sp]
    1bb0:	add	sp, sp, #4
    1bb4:	pop	{pc}		; (ldr pc, [sp], #4)
    1bb8:	mvn	r0, #99	; 0x63
    1bbc:	movw	r2, #0
    1bc0:	movt	r2, #0
    1bc4:	movw	r1, #0
    1bc8:	movt	r1, #0
    1bcc:	movw	r3, #1775	; 0x6ef
    1bd0:	bl	0 <coda_set_error>
    1bd4:	mvn	r0, #0
    1bd8:	b	1bac <coda_cursor_get_depth+0x40>
    1bdc:	mvn	r0, #99	; 0x63
    1be0:	movw	r2, #0
    1be4:	movt	r2, #0
    1be8:	movw	r1, #0
    1bec:	movt	r1, #0
    1bf0:	movw	r3, #1781	; 0x6f5
    1bf4:	bl	0 <coda_set_error>
    1bf8:	mvn	r0, #0
    1bfc:	b	1bac <coda_cursor_get_depth+0x40>

00001c00 <coda_cursor_get_index>:
    1c00:	cmp	r0, #0
    1c04:	str	r4, [sp, #-8]!
    1c08:	str	lr, [sp, #4]
    1c0c:	beq	1c50 <coda_cursor_get_index+0x50>
    1c10:	ldr	r3, [r0, #4]
    1c14:	cmp	r3, #1
    1c18:	ble	1c50 <coda_cursor_get_index+0x50>
    1c1c:	sub	r3, r3, #1
    1c20:	add	r0, r0, r3, lsl #4
    1c24:	ldr	r3, [r0, #8]
    1c28:	cmp	r3, #0
    1c2c:	beq	1c50 <coda_cursor_get_index+0x50>
    1c30:	cmp	r1, #0
    1c34:	beq	1c74 <coda_cursor_get_index+0x74>
    1c38:	ldr	r3, [r0, #12]
    1c3c:	mov	r0, #0
    1c40:	str	r3, [r1]
    1c44:	ldr	r4, [sp]
    1c48:	add	sp, sp, #4
    1c4c:	pop	{pc}		; (ldr pc, [sp], #4)
    1c50:	mvn	r0, #99	; 0x63
    1c54:	movw	r2, #0
    1c58:	movt	r2, #0
    1c5c:	movw	r1, #0
    1c60:	movt	r1, #0
    1c64:	movw	r3, #1805	; 0x70d
    1c68:	bl	0 <coda_set_error>
    1c6c:	mvn	r0, #0
    1c70:	b	1c44 <coda_cursor_get_index+0x44>
    1c74:	mvn	r0, #99	; 0x63
    1c78:	movw	r2, #0
    1c7c:	movt	r2, #0
    1c80:	movw	r1, #0
    1c84:	movt	r1, #0
    1c88:	movw	r3, #1811	; 0x713
    1c8c:	bl	0 <coda_set_error>
    1c90:	mvn	r0, #0
    1c94:	b	1c44 <coda_cursor_get_index+0x44>

00001c98 <coda_cursor_get_file_bit_offset>:
    1c98:	subs	ip, r0, #0
    1c9c:	str	r4, [sp, #-8]!
    1ca0:	str	lr, [sp, #4]
    1ca4:	beq	1d20 <coda_cursor_get_file_bit_offset+0x88>
    1ca8:	ldr	r2, [ip, #4]
    1cac:	cmp	r2, #0
    1cb0:	ble	1d20 <coda_cursor_get_file_bit_offset+0x88>
    1cb4:	add	r3, ip, r2, lsl #4
    1cb8:	ldr	r3, [r3, #-8]
    1cbc:	cmp	r3, #0
    1cc0:	beq	1d20 <coda_cursor_get_file_bit_offset+0x88>
    1cc4:	cmp	r1, #0
    1cc8:	beq	1d44 <coda_cursor_get_file_bit_offset+0xac>
    1ccc:	ldr	r3, [r3]
    1cd0:	cmp	r3, #1
    1cd4:	bls	1d04 <coda_cursor_get_file_bit_offset+0x6c>
    1cd8:	sub	r3, r3, #100	; 0x64
    1cdc:	cmp	r3, #5
    1ce0:	movhi	r0, #0
    1ce4:	bhi	1cf8 <coda_cursor_get_file_bit_offset+0x60>
    1ce8:	mvn	r2, #0
    1cec:	mvn	r3, #0
    1cf0:	mov	r0, #0
    1cf4:	strd	r2, [r1]
    1cf8:	ldr	r4, [sp]
    1cfc:	add	sp, sp, #4
    1d00:	pop	{pc}		; (ldr pc, [sp], #4)
    1d04:	lsl	r2, r2, #4
    1d08:	ldr	r4, [sp]
    1d0c:	add	sp, sp, #4
    1d10:	mov	r0, #0
    1d14:	ldrd	r2, [r2, ip]
    1d18:	strd	r2, [r1]
    1d1c:	pop	{pc}		; (ldr pc, [sp], #4)
    1d20:	mvn	r0, #99	; 0x63
    1d24:	movw	r2, #0
    1d28:	movt	r2, #0
    1d2c:	movw	r1, #0
    1d30:	movt	r1, #0
    1d34:	movw	r3, #1833	; 0x729
    1d38:	bl	0 <coda_set_error>
    1d3c:	mvn	r0, #0
    1d40:	b	1cf8 <coda_cursor_get_file_bit_offset+0x60>
    1d44:	mvn	r0, #99	; 0x63
    1d48:	movw	r2, #0
    1d4c:	movt	r2, #0
    1d50:	movw	r1, #0
    1d54:	movt	r1, #0
    1d58:	movw	r3, #1839	; 0x72f
    1d5c:	bl	0 <coda_set_error>
    1d60:	mvn	r0, #0
    1d64:	b	1cf8 <coda_cursor_get_file_bit_offset+0x60>

00001d68 <coda_cursor_get_file_byte_offset>:
    1d68:	cmp	r0, #0
    1d6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    1d70:	strd	r6, [sp, #8]
    1d74:	str	r8, [sp, #16]
    1d78:	str	lr, [sp, #20]
    1d7c:	beq	1e20 <coda_cursor_get_file_byte_offset+0xb8>
    1d80:	ldr	r2, [r0, #4]
    1d84:	cmp	r2, #0
    1d88:	ble	1e20 <coda_cursor_get_file_byte_offset+0xb8>
    1d8c:	add	r3, r0, r2, lsl #4
    1d90:	ldr	r3, [r3, #-8]
    1d94:	cmp	r3, #0
    1d98:	beq	1e20 <coda_cursor_get_file_byte_offset+0xb8>
    1d9c:	cmp	r1, #0
    1da0:	beq	1e44 <coda_cursor_get_file_byte_offset+0xdc>
    1da4:	ldr	r3, [r3]
    1da8:	cmp	r3, #1
    1dac:	bls	1de4 <coda_cursor_get_file_byte_offset+0x7c>
    1db0:	sub	r3, r3, #100	; 0x64
    1db4:	cmp	r3, #5
    1db8:	movhi	r0, #0
    1dbc:	bhi	1dd0 <coda_cursor_get_file_byte_offset+0x68>
    1dc0:	mvn	r2, #0
    1dc4:	mvn	r3, #0
    1dc8:	mvn	r0, #0
    1dcc:	strd	r2, [r1]
    1dd0:	ldrd	r4, [sp]
    1dd4:	ldrd	r6, [sp, #8]
    1dd8:	ldr	r8, [sp, #16]
    1ddc:	add	sp, sp, #20
    1de0:	pop	{pc}		; (ldr pc, [sp], #4)
    1de4:	lsl	r2, r2, #4
    1de8:	mvn	r5, #0
    1dec:	mvn	r4, #0
    1df0:	ldrd	r6, [r0, r2]
    1df4:	cmp	r7, r5
    1df8:	cmpeq	r6, r4
    1dfc:	moveq	r0, #0
    1e00:	strdeq	r6, [r1]
    1e04:	beq	1dd0 <coda_cursor_get_file_byte_offset+0x68>
    1e08:	lsr	r2, r6, #3
    1e0c:	mov	r0, #0
    1e10:	asr	ip, r7, #3
    1e14:	orr	r2, r2, r7, lsl #29
    1e18:	stm	r1, {r2, ip}
    1e1c:	b	1dd0 <coda_cursor_get_file_byte_offset+0x68>
    1e20:	mvn	r0, #99	; 0x63
    1e24:	movw	r2, #0
    1e28:	movt	r2, #0
    1e2c:	movw	r1, #0
    1e30:	movt	r1, #0
    1e34:	movw	r3, #1875	; 0x753
    1e38:	bl	0 <coda_set_error>
    1e3c:	mvn	r0, #0
    1e40:	b	1dd0 <coda_cursor_get_file_byte_offset+0x68>
    1e44:	mvn	r0, #99	; 0x63
    1e48:	movw	r2, #0
    1e4c:	movt	r2, #0
    1e50:	movw	r1, #0
    1e54:	movt	r1, #0
    1e58:	movw	r3, #1881	; 0x759
    1e5c:	bl	0 <coda_set_error>
    1e60:	mvn	r0, #0
    1e64:	b	1dd0 <coda_cursor_get_file_byte_offset+0x68>

00001e68 <coda_cursor_get_format>:
    1e68:	cmp	r0, #0
    1e6c:	str	r4, [sp, #-8]!
    1e70:	str	lr, [sp, #4]
    1e74:	beq	1ec0 <coda_cursor_get_format+0x58>
    1e78:	ldr	r3, [r0, #4]
    1e7c:	cmp	r3, #0
    1e80:	ble	1ec0 <coda_cursor_get_format+0x58>
    1e84:	add	r0, r0, r3, lsl #4
    1e88:	ldr	r3, [r0, #-8]
    1e8c:	cmp	r3, #0
    1e90:	beq	1ec0 <coda_cursor_get_format+0x58>
    1e94:	cmp	r1, #0
    1e98:	beq	1ee4 <coda_cursor_get_format+0x7c>
    1e9c:	ldr	r2, [r3]
    1ea0:	mov	r0, #0
    1ea4:	cmp	r2, #99	; 0x63
    1ea8:	ldrhi	r3, [r3, #4]
    1eac:	ldrhi	r2, [r3]
    1eb0:	str	r2, [r1]
    1eb4:	ldr	r4, [sp]
    1eb8:	add	sp, sp, #4
    1ebc:	pop	{pc}		; (ldr pc, [sp], #4)
    1ec0:	mvn	r0, #99	; 0x63
    1ec4:	movw	r2, #0
    1ec8:	movt	r2, #0
    1ecc:	movw	r1, #0
    1ed0:	movt	r1, #0
    1ed4:	movw	r3, #1925	; 0x785
    1ed8:	bl	0 <coda_set_error>
    1edc:	mvn	r0, #0
    1ee0:	b	1eb4 <coda_cursor_get_format+0x4c>
    1ee4:	mvn	r0, #99	; 0x63
    1ee8:	movw	r2, #0
    1eec:	movt	r2, #0
    1ef0:	movw	r1, #0
    1ef4:	movt	r1, #0
    1ef8:	movw	r3, #1930	; 0x78a
    1efc:	bl	0 <coda_set_error>
    1f00:	mvn	r0, #0
    1f04:	b	1eb4 <coda_cursor_get_format+0x4c>

00001f08 <coda_cursor_get_type_class>:
    1f08:	cmp	r0, #0
    1f0c:	str	r4, [sp, #-8]!
    1f10:	str	lr, [sp, #4]
    1f14:	beq	1f60 <coda_cursor_get_type_class+0x58>
    1f18:	ldr	r3, [r0, #4]
    1f1c:	cmp	r3, #0
    1f20:	ble	1f60 <coda_cursor_get_type_class+0x58>
    1f24:	add	r0, r0, r3, lsl #4
    1f28:	ldr	r3, [r0, #-8]
    1f2c:	cmp	r3, #0
    1f30:	beq	1f60 <coda_cursor_get_type_class+0x58>
    1f34:	cmp	r1, #0
    1f38:	beq	1f84 <coda_cursor_get_type_class+0x7c>
    1f3c:	ldr	r2, [r3]
    1f40:	mov	r0, #0
    1f44:	cmp	r2, #99	; 0x63
    1f48:	ldrhi	r3, [r3, #4]
    1f4c:	ldr	r3, [r3, #8]
    1f50:	str	r3, [r1]
    1f54:	ldr	r4, [sp]
    1f58:	add	sp, sp, #4
    1f5c:	pop	{pc}		; (ldr pc, [sp], #4)
    1f60:	mvn	r0, #99	; 0x63
    1f64:	movw	r2, #0
    1f68:	movt	r2, #0
    1f6c:	movw	r1, #0
    1f70:	movt	r1, #0
    1f74:	movw	r3, #1954	; 0x7a2
    1f78:	bl	0 <coda_set_error>
    1f7c:	mvn	r0, #0
    1f80:	b	1f54 <coda_cursor_get_type_class+0x4c>
    1f84:	mvn	r0, #99	; 0x63
    1f88:	movw	r2, #0
    1f8c:	movt	r2, #0
    1f90:	movw	r1, #0
    1f94:	movt	r1, #0
    1f98:	movw	r3, #1959	; 0x7a7
    1f9c:	bl	0 <coda_set_error>
    1fa0:	mvn	r0, #0
    1fa4:	b	1f54 <coda_cursor_get_type_class+0x4c>

00001fa8 <coda_cursor_get_read_type>:
    1fa8:	cmp	r0, #0
    1fac:	beq	1fdc <coda_cursor_get_read_type+0x34>
    1fb0:	ldr	r3, [r0, #4]
    1fb4:	cmp	r3, #0
    1fb8:	ble	1fdc <coda_cursor_get_read_type+0x34>
    1fbc:	add	r0, r0, r3, lsl #4
    1fc0:	ldr	r0, [r0, #-8]
    1fc4:	cmp	r0, #0
    1fc8:	beq	1fdc <coda_cursor_get_read_type+0x34>
    1fcc:	ldr	r3, [r0]
    1fd0:	cmp	r3, #99	; 0x63
    1fd4:	ldrhi	r0, [r0, #4]
    1fd8:	b	0 <coda_type_get_read_type>
    1fdc:	mvn	r0, #99	; 0x63
    1fe0:	movw	r2, #0
    1fe4:	movt	r2, #0
    1fe8:	movw	r1, #0
    1fec:	movt	r1, #0
    1ff0:	movw	r3, #1982	; 0x7be
    1ff4:	str	r4, [sp, #-8]!
    1ff8:	str	lr, [sp, #4]
    1ffc:	bl	0 <coda_set_error>
    2000:	ldr	r4, [sp]
    2004:	add	sp, sp, #4
    2008:	mvn	r0, #0
    200c:	pop	{pc}		; (ldr pc, [sp], #4)

00002010 <coda_cursor_get_special_type>:
    2010:	cmp	r0, #0
    2014:	str	r4, [sp, #-8]!
    2018:	str	lr, [sp, #4]
    201c:	beq	2060 <coda_cursor_get_special_type+0x50>
    2020:	ldr	r3, [r0, #4]
    2024:	cmp	r3, #0
    2028:	ble	2060 <coda_cursor_get_special_type+0x50>
    202c:	add	r0, r0, r3, lsl #4
    2030:	ldr	r0, [r0, #-8]
    2034:	cmp	r0, #0
    2038:	beq	2060 <coda_cursor_get_special_type+0x50>
    203c:	cmp	r1, #0
    2040:	beq	208c <coda_cursor_get_special_type+0x7c>
    2044:	ldr	r3, [r0]
    2048:	ldr	r4, [sp]
    204c:	ldr	lr, [sp, #4]
    2050:	add	sp, sp, #8
    2054:	cmp	r3, #99	; 0x63
    2058:	ldrhi	r0, [r0, #4]
    205c:	b	0 <coda_type_get_special_type>
    2060:	movw	r2, #0
    2064:	movt	r2, #0
    2068:	movw	r1, #0
    206c:	movt	r1, #0
    2070:	movw	r3, #2003	; 0x7d3
    2074:	mvn	r0, #99	; 0x63
    2078:	bl	0 <coda_set_error>
    207c:	ldr	r4, [sp]
    2080:	add	sp, sp, #4
    2084:	mvn	r0, #0
    2088:	pop	{pc}		; (ldr pc, [sp], #4)
    208c:	movw	r2, #0
    2090:	movt	r2, #0
    2094:	movw	r1, #0
    2098:	movt	r1, #0
    209c:	movw	r3, #2008	; 0x7d8
    20a0:	mvn	r0, #99	; 0x63
    20a4:	bl	0 <coda_set_error>
    20a8:	b	207c <coda_cursor_get_special_type+0x6c>

000020ac <coda_cursor_get_type>:
    20ac:	cmp	r0, #0
    20b0:	str	r4, [sp, #-8]!
    20b4:	str	lr, [sp, #4]
    20b8:	beq	2100 <coda_cursor_get_type+0x54>
    20bc:	ldr	r3, [r0, #4]
    20c0:	cmp	r3, #0
    20c4:	ble	2100 <coda_cursor_get_type+0x54>
    20c8:	add	r0, r0, r3, lsl #4
    20cc:	ldr	r3, [r0, #-8]
    20d0:	cmp	r3, #0
    20d4:	beq	2100 <coda_cursor_get_type+0x54>
    20d8:	cmp	r1, #0
    20dc:	beq	2124 <coda_cursor_get_type+0x78>
    20e0:	ldr	r2, [r3]
    20e4:	mov	r0, #0
    20e8:	cmp	r2, #99	; 0x63
    20ec:	ldrhi	r3, [r3, #4]
    20f0:	str	r3, [r1]
    20f4:	ldr	r4, [sp]
    20f8:	add	sp, sp, #4
    20fc:	pop	{pc}		; (ldr pc, [sp], #4)
    2100:	mvn	r0, #99	; 0x63
    2104:	movw	r2, #0
    2108:	movt	r2, #0
    210c:	movw	r1, #0
    2110:	movt	r1, #0
    2114:	movw	r3, #2028	; 0x7ec
    2118:	bl	0 <coda_set_error>
    211c:	mvn	r0, #0
    2120:	b	20f4 <coda_cursor_get_type+0x48>
    2124:	mvn	r0, #99	; 0x63
    2128:	movw	r2, #0
    212c:	movt	r2, #0
    2130:	movw	r1, #0
    2134:	movt	r1, #0
    2138:	movw	r3, #2033	; 0x7f1
    213c:	bl	0 <coda_set_error>
    2140:	mvn	r0, #0
    2144:	b	20f4 <coda_cursor_get_type+0x48>

00002148 <coda_cursor_goto>:
    2148:	strd	r4, [sp, #-32]!	; 0xffffffe0
    214c:	mov	r4, #0
    2150:	mov	r5, r1
    2154:	strd	r6, [sp, #8]
    2158:	mov	r6, r0
    215c:	strd	r8, [sp, #16]
    2160:	str	sl, [sp, #24]
    2164:	str	lr, [sp, #28]
    2168:	sub	sp, sp, #16
    216c:	ldrb	sl, [r1]
    2170:	str	r4, [sp, #4]
    2174:	cmp	sl, #47	; 0x2f
    2178:	beq	249c <coda_cursor_goto+0x354>
    217c:	cmp	sl, #0
    2180:	movw	r7, #0
    2184:	movt	r7, #0
    2188:	mov	r2, r4
    218c:	beq	225c <coda_cursor_goto+0x114>
    2190:	cmp	sl, #64	; 0x40
    2194:	beq	2384 <coda_cursor_goto+0x23c>
    2198:	cmp	sl, #91	; 0x5b
    219c:	beq	22b4 <coda_cursor_goto+0x16c>
    21a0:	cmp	sl, #47	; 0x2f
    21a4:	beq	2264 <coda_cursor_goto+0x11c>
    21a8:	cmp	r2, #0
    21ac:	bgt	24ec <coda_cursor_goto+0x3a4>
    21b0:	add	r8, r5, r2
    21b4:	mov	r9, r2
    21b8:	mov	ip, r8
    21bc:	rsb	lr, r5, #1
    21c0:	add	r4, lr, ip
    21c4:	ldrb	r1, [ip, #1]!
    21c8:	cmp	r1, #47	; 0x2f
    21cc:	cmpne	r1, #91	; 0x5b
    21d0:	movne	r3, #1
    21d4:	moveq	r3, #0
    21d8:	tst	r1, #191	; 0xbf
    21dc:	moveq	r3, #0
    21e0:	cmp	r3, #0
    21e4:	bne	21c0 <coda_cursor_goto+0x78>
    21e8:	add	r3, r9, #1
    21ec:	cmp	r3, r4
    21f0:	beq	22a8 <coda_cursor_goto+0x160>
    21f4:	add	r3, r9, #2
    21f8:	cmp	r3, r4
    21fc:	bne	2208 <coda_cursor_goto+0xc0>
    2200:	cmp	sl, #46	; 0x2e
    2204:	beq	2344 <coda_cursor_goto+0x1fc>
    2208:	add	r1, sp, #4
    220c:	mov	r0, r6
    2210:	bl	20ac <coda_cursor_get_type>
    2214:	cmp	r0, #0
    2218:	bne	2364 <coda_cursor_goto+0x21c>
    221c:	sub	r2, r4, r9
    2220:	mov	r1, r8
    2224:	ldr	r0, [sp, #4]
    2228:	add	r3, sp, #8
    222c:	bl	0 <coda_type_get_record_field_index_from_name_n>
    2230:	cmp	r0, #0
    2234:	bne	2364 <coda_cursor_goto+0x21c>
    2238:	mov	r0, r6
    223c:	ldr	r1, [sp, #8]
    2240:	bl	7d0 <coda_cursor_goto_record_field_by_index>
    2244:	cmp	r0, #0
    2248:	bne	2364 <coda_cursor_goto+0x21c>
    224c:	ldrb	sl, [r5, r4]
    2250:	mov	r2, r4
    2254:	cmp	sl, #0
    2258:	bne	2190 <coda_cursor_goto+0x48>
    225c:	mov	r0, sl
    2260:	b	2368 <coda_cursor_goto+0x220>
    2264:	add	r9, r4, #1
    2268:	ldrb	sl, [r5, r9]
    226c:	add	r8, r5, r9
    2270:	mov	r2, r9
    2274:	mov	ip, r8
    2278:	cmp	sl, #47	; 0x2f
    227c:	cmpne	sl, #91	; 0x5b
    2280:	movne	r3, #1
    2284:	moveq	r3, #0
    2288:	tst	sl, #191	; 0xbf
    228c:	moveq	r3, #0
    2290:	cmp	r3, #0
    2294:	moveq	r4, r9
    2298:	bne	21bc <coda_cursor_goto+0x74>
    229c:	add	r3, r9, #1
    22a0:	cmp	r3, r4
    22a4:	bne	21f4 <coda_cursor_goto+0xac>
    22a8:	cmp	sl, #46	; 0x2e
    22ac:	bne	2208 <coda_cursor_goto+0xc0>
    22b0:	b	224c <coda_cursor_goto+0x104>
    22b4:	add	r8, r4, #1
    22b8:	ldrb	r3, [r5, r8]
    22bc:	add	r8, r5, r8
    22c0:	cmp	r3, #0
    22c4:	cmpne	r3, #93	; 0x5d
    22c8:	beq	24cc <coda_cursor_goto+0x384>
    22cc:	add	r3, r4, #2
    22d0:	mvn	r1, r5
    22d4:	add	r3, r5, r3
    22d8:	add	r9, r1, r3
    22dc:	ldrb	r2, [r3], #1
    22e0:	cmp	r2, #0
    22e4:	cmpne	r2, #93	; 0x5d
    22e8:	bne	22d8 <coda_cursor_goto+0x190>
    22ec:	cmp	r2, #0
    22f0:	beq	24d4 <coda_cursor_goto+0x38c>
    22f4:	cmp	r4, r9
    22f8:	beq	2524 <coda_cursor_goto+0x3dc>
    22fc:	add	r2, sp, #8
    2300:	add	r3, sp, #12
    2304:	mov	r1, r7
    2308:	mov	r0, r8
    230c:	bl	0 <__isoc99_sscanf>
    2310:	cmp	r0, #1
    2314:	sub	r2, r9, r4
    2318:	bne	250c <coda_cursor_goto+0x3c4>
    231c:	ldr	r3, [sp, #12]
    2320:	cmp	r3, r2
    2324:	bne	250c <coda_cursor_goto+0x3c4>
    2328:	mov	r0, r6
    232c:	ldr	r1, [sp, #8]
    2330:	bl	f80 <coda_cursor_goto_array_element_by_index>
    2334:	cmp	r0, #0
    2338:	bne	2364 <coda_cursor_goto+0x21c>
    233c:	add	r4, r9, #2
    2340:	b	224c <coda_cursor_goto+0x104>
    2344:	add	r2, r5, r2
    2348:	ldrb	r3, [r2, #1]
    234c:	cmp	r3, #46	; 0x2e
    2350:	bne	2208 <coda_cursor_goto+0xc0>
    2354:	mov	r0, r6
    2358:	bl	5ac <coda_cursor_goto_parent>
    235c:	cmp	r0, #0
    2360:	beq	224c <coda_cursor_goto+0x104>
    2364:	mvn	r0, #0
    2368:	add	sp, sp, #16
    236c:	ldrd	r4, [sp]
    2370:	ldrd	r6, [sp, #8]
    2374:	ldrd	r8, [sp, #16]
    2378:	ldr	sl, [sp, #24]
    237c:	add	sp, sp, #28
    2380:	pop	{pc}		; (ldr pc, [sp], #4)
    2384:	mov	r0, r6
    2388:	bl	410 <coda_cursor_goto_attributes>
    238c:	cmp	r0, #0
    2390:	bne	2364 <coda_cursor_goto+0x21c>
    2394:	add	sl, r4, #1
    2398:	ldrb	r0, [r5, sl]
    239c:	add	r9, r5, sl
    23a0:	cmp	r0, #91	; 0x5b
    23a4:	cmpne	r0, #47	; 0x2f
    23a8:	movne	r3, #1
    23ac:	moveq	r3, #0
    23b0:	tst	r0, #191	; 0xbf
    23b4:	moveq	r3, #0
    23b8:	cmp	r3, #0
    23bc:	beq	2504 <coda_cursor_goto+0x3bc>
    23c0:	mov	r1, r9
    23c4:	rsb	lr, r5, #1
    23c8:	add	r8, lr, r1
    23cc:	ldrb	r2, [r1, #1]!
    23d0:	cmp	r2, #91	; 0x5b
    23d4:	cmpne	r2, #47	; 0x2f
    23d8:	movne	r3, #1
    23dc:	moveq	r3, #0
    23e0:	tst	r2, #191	; 0xbf
    23e4:	moveq	r3, #0
    23e8:	cmp	r3, #0
    23ec:	bne	23c8 <coda_cursor_goto+0x280>
    23f0:	add	r3, r4, #2
    23f4:	cmp	r3, r8
    23f8:	beq	2444 <coda_cursor_goto+0x2fc>
    23fc:	add	r3, r4, #3
    2400:	cmp	r3, r8
    2404:	beq	2418 <coda_cursor_goto+0x2d0>
    2408:	cmp	sl, r8
    240c:	blt	2454 <coda_cursor_goto+0x30c>
    2410:	mov	r4, r8
    2414:	b	224c <coda_cursor_goto+0x104>
    2418:	cmp	r0, #46	; 0x2e
    241c:	bne	2408 <coda_cursor_goto+0x2c0>
    2420:	add	r4, r5, r4
    2424:	ldrb	r3, [r4, #2]
    2428:	cmp	r3, #46	; 0x2e
    242c:	bne	2408 <coda_cursor_goto+0x2c0>
    2430:	mov	r0, r6
    2434:	bl	5ac <coda_cursor_goto_parent>
    2438:	cmp	r0, #0
    243c:	beq	2410 <coda_cursor_goto+0x2c8>
    2440:	b	2364 <coda_cursor_goto+0x21c>
    2444:	cmp	r0, #46	; 0x2e
    2448:	beq	2410 <coda_cursor_goto+0x2c8>
    244c:	cmp	sl, r8
    2450:	bge	2410 <coda_cursor_goto+0x2c8>
    2454:	add	r1, sp, #4
    2458:	mov	r0, r6
    245c:	bl	20ac <coda_cursor_get_type>
    2460:	cmp	r0, #0
    2464:	bne	2364 <coda_cursor_goto+0x21c>
    2468:	sub	r2, r8, sl
    246c:	mov	r1, r9
    2470:	ldr	r0, [sp, #4]
    2474:	add	r3, sp, #8
    2478:	bl	0 <coda_type_get_record_field_index_from_name_n>
    247c:	cmp	r0, #0
    2480:	bne	2364 <coda_cursor_goto+0x21c>
    2484:	mov	r0, r6
    2488:	ldr	r1, [sp, #8]
    248c:	bl	7d0 <coda_cursor_goto_record_field_by_index>
    2490:	cmp	r0, #0
    2494:	beq	2410 <coda_cursor_goto+0x2c8>
    2498:	b	2364 <coda_cursor_goto+0x21c>
    249c:	bl	13c4 <coda_cursor_goto_root>
    24a0:	cmp	r0, r4
    24a4:	bne	2364 <coda_cursor_goto+0x21c>
    24a8:	ldrb	r3, [r5, #1]
    24ac:	cmp	r3, #91	; 0x5b
    24b0:	cmpne	r3, #47	; 0x2f
    24b4:	moveq	r4, #1
    24b8:	movne	r4, #0
    24bc:	tst	r3, #191	; 0xbf
    24c0:	moveq	r4, #1
    24c4:	ldrb	sl, [r5, r4]
    24c8:	b	217c <coda_cursor_goto+0x34>
    24cc:	cmp	r3, #0
    24d0:	bne	2524 <coda_cursor_goto+0x3dc>
    24d4:	mov	r2, r5
    24d8:	movw	r1, #0
    24dc:	movt	r1, #0
    24e0:	mvn	r0, #99	; 0x63
    24e4:	bl	0 <coda_set_error>
    24e8:	b	2364 <coda_cursor_goto+0x21c>
    24ec:	mov	r2, r5
    24f0:	movw	r1, #0
    24f4:	movt	r1, #0
    24f8:	mvn	r0, #99	; 0x63
    24fc:	bl	0 <coda_set_error>
    2500:	b	2364 <coda_cursor_goto+0x21c>
    2504:	mov	r8, sl
    2508:	b	23f0 <coda_cursor_goto+0x2a8>
    250c:	mov	r3, r8
    2510:	movw	r1, #0
    2514:	movt	r1, #0
    2518:	mvn	r0, #99	; 0x63
    251c:	bl	0 <coda_set_error>
    2520:	b	2364 <coda_cursor_goto+0x21c>
    2524:	movw	r1, #0
    2528:	movt	r1, #0
    252c:	mvn	r0, #99	; 0x63
    2530:	bl	0 <coda_set_error>
    2534:	b	2364 <coda_cursor_goto+0x21c>

00002538 <coda_cursor_get_record_field_index_from_name>:
    2538:	cmp	r0, #0
    253c:	beq	2578 <coda_cursor_get_record_field_index_from_name+0x40>
    2540:	ldr	r3, [r0, #4]
    2544:	cmp	r3, #0
    2548:	ble	2578 <coda_cursor_get_record_field_index_from_name+0x40>
    254c:	ldr	ip, [r0]
    2550:	cmp	ip, #0
    2554:	beq	2578 <coda_cursor_get_record_field_index_from_name+0x40>
    2558:	add	r0, r0, r3, lsl #4
    255c:	ldr	r0, [r0, #-8]
    2560:	cmp	r0, #0
    2564:	beq	2578 <coda_cursor_get_record_field_index_from_name+0x40>
    2568:	ldr	r3, [r0]
    256c:	cmp	r3, #99	; 0x63
    2570:	ldrhi	r0, [r0, #4]
    2574:	b	0 <coda_type_get_record_field_index_from_name>
    2578:	mvn	r0, #99	; 0x63
    257c:	movw	r2, #0
    2580:	movt	r2, #0
    2584:	movw	r1, #0
    2588:	movt	r1, #0
    258c:	movw	r3, #2057	; 0x809
    2590:	str	r4, [sp, #-8]!
    2594:	str	lr, [sp, #4]
    2598:	bl	0 <coda_set_error>
    259c:	ldr	r4, [sp]
    25a0:	add	sp, sp, #4
    25a4:	mvn	r0, #0
    25a8:	pop	{pc}		; (ldr pc, [sp], #4)

000025ac <coda_cursor_goto_record_field_by_name>:
    25ac:	str	r4, [sp, #-8]!
    25b0:	mov	r4, r0
    25b4:	str	lr, [sp, #4]
    25b8:	sub	sp, sp, #8
    25bc:	add	r2, sp, #4
    25c0:	bl	2538 <coda_cursor_get_record_field_index_from_name>
    25c4:	cmp	r0, #0
    25c8:	bne	25e8 <coda_cursor_goto_record_field_by_name+0x3c>
    25cc:	mov	r0, r4
    25d0:	ldr	r1, [sp, #4]
    25d4:	bl	7d0 <coda_cursor_goto_record_field_by_index>
    25d8:	add	sp, sp, #8
    25dc:	ldr	r4, [sp]
    25e0:	add	sp, sp, #4
    25e4:	pop	{pc}		; (ldr pc, [sp], #4)
    25e8:	mvn	r0, #0
    25ec:	b	25d8 <coda_cursor_goto_record_field_by_name+0x2c>

000025f0 <coda_cursor_get_record_field_available_status>:
    25f0:	cmp	r0, #0
    25f4:	str	r4, [sp, #-8]!
    25f8:	str	lr, [sp, #4]
    25fc:	beq	26c0 <coda_cursor_get_record_field_available_status+0xd0>
    2600:	ldr	r3, [r0, #4]
    2604:	cmp	r3, #0
    2608:	ble	26c0 <coda_cursor_get_record_field_available_status+0xd0>
    260c:	ldr	ip, [r0]
    2610:	cmp	ip, #0
    2614:	beq	26c0 <coda_cursor_get_record_field_available_status+0xd0>
    2618:	add	r3, r0, r3, lsl #4
    261c:	ldr	ip, [r3, #-8]
    2620:	cmp	ip, #0
    2624:	beq	26c0 <coda_cursor_get_record_field_available_status+0xd0>
    2628:	cmp	r2, #0
    262c:	beq	2708 <coda_cursor_get_record_field_available_status+0x118>
    2630:	ldr	r3, [ip]
    2634:	cmp	r3, #99	; 0x63
    2638:	ldrhi	ip, [ip, #4]
    263c:	ldr	ip, [ip, #8]
    2640:	cmp	ip, #0
    2644:	bne	26e4 <coda_cursor_get_record_field_available_status+0xf4>
    2648:	cmp	r3, #100	; 0x64
    264c:	beq	26b0 <coda_cursor_get_record_field_available_status+0xc0>
    2650:	bls	2674 <coda_cursor_get_record_field_available_status+0x84>
    2654:	cmp	r3, #104	; 0x68
    2658:	movls	r3, #1
    265c:	strls	r3, [r2]
    2660:	bhi	268c <coda_cursor_get_record_field_available_status+0x9c>
    2664:	ldr	r4, [sp]
    2668:	add	sp, sp, #4
    266c:	mov	r0, ip
    2670:	pop	{pc}		; (ldr pc, [sp], #4)
    2674:	cmp	r3, #1
    2678:	bhi	2664 <coda_cursor_get_record_field_available_status+0x74>
    267c:	ldr	r4, [sp]
    2680:	ldr	lr, [sp, #4]
    2684:	add	sp, sp, #8
    2688:	b	0 <coda_ascbin_cursor_get_record_field_available_status>
    268c:	cmp	r3, #105	; 0x69
    2690:	bne	2664 <coda_cursor_get_record_field_available_status+0x74>
    2694:	movw	r1, #0
    2698:	movt	r1, #0
    269c:	ldr	r3, [pc, #136]	; 272c <coda_cursor_get_record_field_available_status+0x13c>
    26a0:	movw	r0, #0
    26a4:	movt	r0, #0
    26a8:	movw	r2, #2117	; 0x845
    26ac:	bl	0 <__assert_fail>
    26b0:	ldr	r4, [sp]
    26b4:	ldr	lr, [sp, #4]
    26b8:	add	sp, sp, #8
    26bc:	b	0 <coda_mem_cursor_get_record_field_available_status>
    26c0:	movw	r2, #0
    26c4:	movt	r2, #0
    26c8:	movw	r1, #0
    26cc:	movt	r1, #0
    26d0:	movw	r3, #2085	; 0x825
    26d4:	mvn	r0, #99	; 0x63
    26d8:	bl	0 <coda_set_error>
    26dc:	mvn	ip, #0
    26e0:	b	2664 <coda_cursor_get_record_field_available_status+0x74>
    26e4:	mov	r0, ip
    26e8:	bl	0 <coda_type_get_class_name>
    26ec:	mov	r2, r0
    26f0:	movw	r1, #0
    26f4:	movt	r1, #0
    26f8:	mvn	r0, #104	; 0x68
    26fc:	bl	0 <coda_set_error>
    2700:	mvn	ip, #0
    2704:	b	2664 <coda_cursor_get_record_field_available_status+0x74>
    2708:	movw	r2, #0
    270c:	movt	r2, #0
    2710:	movw	r1, #0
    2714:	movt	r1, #0
    2718:	movw	r3, #2090	; 0x82a
    271c:	mvn	r0, #99	; 0x63
    2720:	bl	0 <coda_set_error>
    2724:	mvn	ip, #0
    2728:	b	2664 <coda_cursor_get_record_field_available_status+0x74>
    272c:	.word	0x00000110

00002730 <coda_cursor_get_available_union_field_index>:
    2730:	cmp	r0, #0
    2734:	str	r4, [sp, #-8]!
    2738:	str	lr, [sp, #4]
    273c:	beq	27b8 <coda_cursor_get_available_union_field_index+0x88>
    2740:	ldr	r3, [r0, #4]
    2744:	cmp	r3, #0
    2748:	ble	27b8 <coda_cursor_get_available_union_field_index+0x88>
    274c:	ldr	r2, [r0]
    2750:	cmp	r2, #0
    2754:	beq	27b8 <coda_cursor_get_available_union_field_index+0x88>
    2758:	add	r3, r0, r3, lsl #4
    275c:	ldr	r3, [r3, #-8]
    2760:	cmp	r3, #0
    2764:	beq	27b8 <coda_cursor_get_available_union_field_index+0x88>
    2768:	cmp	r1, #0
    276c:	beq	2804 <coda_cursor_get_available_union_field_index+0xd4>
    2770:	ldr	r2, [r3]
    2774:	cmp	r2, #99	; 0x63
    2778:	ldrhi	r3, [r3, #4]
    277c:	ldr	r3, [r3, #8]
    2780:	cmp	r3, #0
    2784:	bne	27e4 <coda_cursor_get_available_union_field_index+0xb4>
    2788:	cmp	r2, #1
    278c:	bls	27a8 <coda_cursor_get_available_union_field_index+0x78>
    2790:	cmp	r2, #100	; 0x64
    2794:	bne	2824 <coda_cursor_get_available_union_field_index+0xf4>
    2798:	ldr	r4, [sp]
    279c:	ldr	lr, [sp, #4]
    27a0:	add	sp, sp, #8
    27a4:	b	0 <coda_mem_cursor_get_available_union_field_index>
    27a8:	ldr	r4, [sp]
    27ac:	ldr	lr, [sp, #4]
    27b0:	add	sp, sp, #8
    27b4:	b	0 <coda_ascbin_cursor_get_available_union_field_index>
    27b8:	movw	r2, #0
    27bc:	movt	r2, #0
    27c0:	movw	r1, #0
    27c4:	movt	r1, #0
    27c8:	movw	r3, #2140	; 0x85c
    27cc:	mvn	r0, #99	; 0x63
    27d0:	bl	0 <coda_set_error>
    27d4:	ldr	r4, [sp]
    27d8:	add	sp, sp, #4
    27dc:	mvn	r0, #0
    27e0:	pop	{pc}		; (ldr pc, [sp], #4)
    27e4:	mov	r0, r3
    27e8:	bl	0 <coda_type_get_class_name>
    27ec:	mov	r2, r0
    27f0:	movw	r1, #0
    27f4:	movt	r1, #0
    27f8:	mvn	r0, #104	; 0x68
    27fc:	bl	0 <coda_set_error>
    2800:	b	27d4 <coda_cursor_get_available_union_field_index+0xa4>
    2804:	movw	r2, #0
    2808:	movt	r2, #0
    280c:	movw	r1, #0
    2810:	movt	r1, #0
    2814:	movw	r3, #2145	; 0x861
    2818:	mvn	r0, #99	; 0x63
    281c:	bl	0 <coda_set_error>
    2820:	b	27d4 <coda_cursor_get_available_union_field_index+0xa4>
    2824:	movw	r1, #0
    2828:	movt	r1, #0
    282c:	ldr	r3, [pc, #12]	; 2840 <coda_cursor_get_available_union_field_index+0x110>
    2830:	movw	r0, #0
    2834:	movt	r0, #0
    2838:	movw	r2, #2172	; 0x87c
    283c:	bl	0 <__assert_fail>
    2840:	.word	0x00000140

00002844 <coda_cursor_get_array_dim>:
    2844:	cmp	r0, #0
    2848:	str	r4, [sp, #-8]!
    284c:	str	lr, [sp, #4]
    2850:	beq	2954 <coda_cursor_get_array_dim+0x110>
    2854:	ldr	r3, [r0, #4]
    2858:	cmp	r3, #0
    285c:	ble	2954 <coda_cursor_get_array_dim+0x110>
    2860:	add	r3, r0, r3, lsl #4
    2864:	ldr	ip, [r3, #-8]
    2868:	cmp	ip, #0
    286c:	beq	2954 <coda_cursor_get_array_dim+0x110>
    2870:	cmp	r2, #0
    2874:	cmpne	r1, #0
    2878:	beq	2994 <coda_cursor_get_array_dim+0x150>
    287c:	ldr	r3, [ip]
    2880:	cmp	r3, #99	; 0x63
    2884:	ldrhi	ip, [ip, #4]
    2888:	ldr	ip, [ip, #8]
    288c:	cmp	ip, #1
    2890:	bne	2974 <coda_cursor_get_array_dim+0x130>
    2894:	cmp	r3, #101	; 0x65
    2898:	beq	2928 <coda_cursor_get_array_dim+0xe4>
    289c:	bls	28cc <coda_cursor_get_array_dim+0x88>
    28a0:	cmp	r3, #103	; 0x67
    28a4:	beq	2944 <coda_cursor_get_array_dim+0x100>
    28a8:	bcc	290c <coda_cursor_get_array_dim+0xc8>
    28ac:	cmp	r3, #104	; 0x68
    28b0:	beq	28fc <coda_cursor_get_array_dim+0xb8>
    28b4:	cmp	r3, #105	; 0x69
    28b8:	bne	29b4 <coda_cursor_get_array_dim+0x170>
    28bc:	ldr	r4, [sp]
    28c0:	ldr	lr, [sp, #4]
    28c4:	add	sp, sp, #8
    28c8:	b	0 <coda_grib_cursor_get_array_dim>
    28cc:	cmp	r3, #1
    28d0:	bls	28ec <coda_cursor_get_array_dim+0xa8>
    28d4:	cmp	r3, #100	; 0x64
    28d8:	bne	29b4 <coda_cursor_get_array_dim+0x170>
    28dc:	ldr	r4, [sp]
    28e0:	ldr	lr, [sp, #4]
    28e4:	add	sp, sp, #8
    28e8:	b	0 <coda_mem_cursor_get_array_dim>
    28ec:	ldr	r4, [sp]
    28f0:	ldr	lr, [sp, #4]
    28f4:	add	sp, sp, #8
    28f8:	b	0 <coda_ascbin_cursor_get_array_dim>
    28fc:	ldr	r4, [sp]
    2900:	ldr	lr, [sp, #4]
    2904:	add	sp, sp, #8
    2908:	b	0 <coda_netcdf_cursor_get_array_dim>
    290c:	mov	r1, #0
    2910:	mvn	r0, #12
    2914:	bl	0 <coda_set_error>
    2918:	ldr	r4, [sp]
    291c:	add	sp, sp, #4
    2920:	mvn	r0, #0
    2924:	pop	{pc}		; (ldr pc, [sp], #4)
    2928:	mvn	r0, #10
    292c:	mov	r1, #0
    2930:	bl	0 <coda_set_error>
    2934:	ldr	r4, [sp]
    2938:	add	sp, sp, #4
    293c:	mvn	r0, #0
    2940:	pop	{pc}		; (ldr pc, [sp], #4)
    2944:	ldr	r4, [sp]
    2948:	ldr	lr, [sp, #4]
    294c:	add	sp, sp, #8
    2950:	b	0 <coda_cdf_cursor_get_array_dim>
    2954:	movw	r2, #0
    2958:	movt	r2, #0
    295c:	movw	r1, #0
    2960:	movt	r1, #0
    2964:	movw	r3, #2197	; 0x895
    2968:	mvn	r0, #99	; 0x63
    296c:	bl	0 <coda_set_error>
    2970:	b	2918 <coda_cursor_get_array_dim+0xd4>
    2974:	mov	r0, ip
    2978:	bl	0 <coda_type_get_class_name>
    297c:	mov	r2, r0
    2980:	movw	r1, #0
    2984:	movt	r1, #0
    2988:	mvn	r0, #104	; 0x68
    298c:	bl	0 <coda_set_error>
    2990:	b	2918 <coda_cursor_get_array_dim+0xd4>
    2994:	movw	r2, #0
    2998:	movt	r2, #0
    299c:	movw	r1, #0
    29a0:	movt	r1, #0
    29a4:	movw	r3, #2202	; 0x89a
    29a8:	mvn	r0, #99	; 0x63
    29ac:	bl	0 <coda_set_error>
    29b0:	b	2918 <coda_cursor_get_array_dim+0xd4>
    29b4:	movw	r1, #0
    29b8:	movt	r1, #0
    29bc:	ldr	r3, [pc, #12]	; 29d0 <coda_cursor_get_array_dim+0x18c>
    29c0:	movw	r0, #0
    29c4:	movt	r0, #0
    29c8:	movw	r2, #2243	; 0x8c3
    29cc:	bl	0 <__assert_fail>
    29d0:	.word	0x0000016c
