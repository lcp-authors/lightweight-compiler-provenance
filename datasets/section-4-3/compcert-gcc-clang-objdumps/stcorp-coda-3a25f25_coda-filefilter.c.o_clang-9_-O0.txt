
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_match_filefilter>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #56	; 0x38
   c:	ldr	ip, [fp, #8]
  10:	str	r0, [fp, #-8]
  14:	str	r1, [fp, #-12]
  18:	str	r2, [fp, #-16]
  1c:	str	r3, [fp, #-20]	; 0xffffffec
  20:	ldr	r0, [fp, #-12]
  24:	cmp	r0, #0
  28:	ble	4c <coda_match_filefilter+0x4c>
  2c:	ldr	r0, [fp, #-16]
  30:	movw	r1, #0
  34:	cmp	r0, r1
  38:	beq	4c <coda_match_filefilter+0x4c>
  3c:	ldr	r0, [fp, #-20]	; 0xffffffec
  40:	movw	r1, #0
  44:	cmp	r0, r1
  48:	bne	74 <coda_match_filefilter+0x74>
  4c:	mvn	r0, #99	; 0x63
  50:	movw	r1, #0
  54:	movt	r1, #0
  58:	movw	r2, #0
  5c:	movt	r2, #0
  60:	movw	r3, #386	; 0x182
  64:	bl	0 <coda_set_error>
  68:	mvn	r0, #0
  6c:	str	r0, [fp, #-4]
  70:	b	1e0 <coda_match_filefilter+0x1e0>
  74:	ldr	r0, [fp, #-8]
  78:	movw	r1, #0
  7c:	cmp	r0, r1
  80:	beq	94 <coda_match_filefilter+0x94>
  84:	ldr	r0, [fp, #-8]
  88:	ldrb	r0, [r0]
  8c:	cmp	r0, #0
  90:	bne	a0 <coda_match_filefilter+0xa0>
  94:	movw	r0, #0
  98:	movt	r0, #0
  9c:	str	r0, [fp, #-8]
  a0:	ldr	r0, [fp, #-8]
  a4:	add	r1, sp, #16
  a8:	bl	0 <coda_expression_from_string>
  ac:	cmp	r0, #0
  b0:	beq	c0 <coda_match_filefilter+0xc0>
  b4:	mvn	r0, #0
  b8:	str	r0, [fp, #-4]
  bc:	b	1e0 <coda_match_filefilter+0x1e0>
  c0:	ldr	r0, [sp, #16]
  c4:	add	r1, sp, #20
  c8:	bl	0 <coda_expression_get_type>
  cc:	cmp	r0, #0
  d0:	beq	e8 <coda_match_filefilter+0xe8>
  d4:	ldr	r0, [sp, #16]
  d8:	bl	0 <coda_expression_delete>
  dc:	mvn	r0, #0
  e0:	str	r0, [fp, #-4]
  e4:	b	1e0 <coda_match_filefilter+0x1e0>
  e8:	ldr	r0, [sp, #20]
  ec:	cmp	r0, #0
  f0:	beq	118 <coda_match_filefilter+0x118>
  f4:	mvn	r0, #400	; 0x190
  f8:	movw	r1, #0
  fc:	movt	r1, #0
 100:	bl	0 <coda_set_error>
 104:	ldr	r0, [sp, #16]
 108:	bl	0 <coda_expression_delete>
 10c:	mvn	r0, #0
 110:	str	r0, [fp, #-4]
 114:	b	1e0 <coda_match_filefilter+0x1e0>
 118:	add	r0, sp, #24
 11c:	bl	1ec <name_buffer_init>
 120:	movw	r0, #0
 124:	str	r0, [sp, #8]
 128:	ldr	r0, [sp, #8]
 12c:	ldr	r1, [fp, #-12]
 130:	cmp	r0, r1
 134:	bge	1c8 <coda_match_filefilter+0x1c8>
 138:	ldr	r0, [fp, #-16]
 13c:	ldr	r1, [sp, #8]
 140:	add	r0, r0, r1, lsl #2
 144:	ldr	r1, [r0]
 148:	add	r0, sp, #24
 14c:	bl	298 <append_string_to_name_buffer>
 150:	ldr	r1, [sp, #16]
 154:	ldr	r3, [fp, #-20]	; 0xffffffec
 158:	ldr	r0, [fp, #8]
 15c:	movw	r2, #0
 160:	str	r0, [sp, #4]
 164:	mov	r0, r2
 168:	add	r2, sp, #24
 16c:	ldr	ip, [sp, #4]
 170:	str	ip, [sp]
 174:	bl	42c <coda_match_filepath>
 178:	str	r0, [sp, #12]
 17c:	ldr	r0, [sp, #12]
 180:	cmp	r0, #0
 184:	beq	1a4 <coda_match_filefilter+0x1a4>
 188:	add	r0, sp, #24
 18c:	bl	5b8 <name_buffer_done>
 190:	ldr	r0, [sp, #16]
 194:	bl	0 <coda_expression_delete>
 198:	ldr	r0, [sp, #12]
 19c:	str	r0, [fp, #-4]
 1a0:	b	1e0 <coda_match_filefilter+0x1e0>
 1a4:	movw	r0, #0
 1a8:	str	r0, [sp, #24]
 1ac:	ldr	r0, [sp, #32]
 1b0:	movw	r1, #0
 1b4:	strb	r1, [r0]
 1b8:	ldr	r0, [sp, #8]
 1bc:	add	r0, r0, #1
 1c0:	str	r0, [sp, #8]
 1c4:	b	128 <coda_match_filefilter+0x128>
 1c8:	add	r0, sp, #24
 1cc:	bl	5b8 <name_buffer_done>
 1d0:	ldr	r0, [sp, #16]
 1d4:	bl	0 <coda_expression_delete>
 1d8:	movw	r0, #0
 1dc:	str	r0, [fp, #-4]
 1e0:	ldr	r0, [fp, #-4]
 1e4:	mov	sp, fp
 1e8:	pop	{fp, pc}

000001ec <name_buffer_init>:
 1ec:	push	{fp, lr}
 1f0:	mov	fp, sp
 1f4:	sub	sp, sp, #8
 1f8:	str	r0, [sp, #4]
 1fc:	ldr	r0, [sp, #4]
 200:	movw	r1, #0
 204:	cmp	r0, r1
 208:	beq	210 <name_buffer_init+0x24>
 20c:	b	230 <name_buffer_init+0x44>
 210:	movw	r0, #0
 214:	movt	r0, #0
 218:	movw	r1, #0
 21c:	movt	r1, #0
 220:	movw	r2, #62	; 0x3e
 224:	movw	r3, #0
 228:	movt	r3, #0
 22c:	bl	0 <__assert_fail>
 230:	ldr	r0, [sp, #4]
 234:	movw	r1, #0
 238:	str	r1, [r0]
 23c:	ldr	r0, [sp, #4]
 240:	movw	r1, #1024	; 0x400
 244:	str	r1, [r0, #4]
 248:	mov	r0, r1
 24c:	bl	0 <malloc>
 250:	ldr	r1, [sp, #4]
 254:	str	r0, [r1, #8]
 258:	ldr	r0, [sp, #4]
 25c:	ldr	r0, [r0, #8]
 260:	movw	r1, #0
 264:	cmp	r0, r1
 268:	beq	270 <name_buffer_init+0x84>
 26c:	b	290 <name_buffer_init+0xa4>
 270:	movw	r0, #0
 274:	movt	r0, #0
 278:	movw	r1, #0
 27c:	movt	r1, #0
 280:	movw	r2, #67	; 0x43
 284:	movw	r3, #0
 288:	movt	r3, #0
 28c:	bl	0 <__assert_fail>
 290:	mov	sp, fp
 294:	pop	{fp, pc}

00000298 <append_string_to_name_buffer>:
 298:	push	{fp, lr}
 29c:	mov	fp, sp
 2a0:	sub	sp, sp, #24
 2a4:	str	r0, [fp, #-4]
 2a8:	str	r1, [fp, #-8]
 2ac:	ldr	r0, [fp, #-4]
 2b0:	movw	r1, #0
 2b4:	cmp	r0, r1
 2b8:	beq	2c0 <append_string_to_name_buffer+0x28>
 2bc:	b	2e0 <append_string_to_name_buffer+0x48>
 2c0:	movw	r0, #0
 2c4:	movt	r0, #0
 2c8:	movw	r1, #0
 2cc:	movt	r1, #0
 2d0:	movw	r2, #84	; 0x54
 2d4:	movw	r3, #0
 2d8:	movt	r3, #0
 2dc:	bl	0 <__assert_fail>
 2e0:	ldr	r0, [fp, #-8]
 2e4:	movw	r1, #0
 2e8:	cmp	r0, r1
 2ec:	beq	2f4 <append_string_to_name_buffer+0x5c>
 2f0:	b	314 <append_string_to_name_buffer+0x7c>
 2f4:	movw	r0, #0
 2f8:	movt	r0, #0
 2fc:	movw	r1, #0
 300:	movt	r1, #0
 304:	movw	r2, #85	; 0x55
 308:	movw	r3, #0
 30c:	movt	r3, #0
 310:	bl	0 <__assert_fail>
 314:	ldr	r0, [fp, #-8]
 318:	bl	0 <strlen>
 31c:	str	r0, [sp, #12]
 320:	ldr	r0, [fp, #-4]
 324:	ldr	r0, [r0]
 328:	ldr	r1, [sp, #12]
 32c:	add	r0, r0, r1
 330:	ldr	r1, [fp, #-4]
 334:	ldr	r1, [r1, #4]
 338:	cmp	r0, r1
 33c:	blt	3f4 <append_string_to_name_buffer+0x15c>
 340:	ldr	r0, [fp, #-4]
 344:	ldr	r0, [r0, #4]
 348:	str	r0, [sp, #4]
 34c:	ldr	r0, [sp, #4]
 350:	ldr	r1, [fp, #-4]
 354:	ldr	r1, [r1]
 358:	ldr	r2, [sp, #12]
 35c:	add	r1, r1, r2
 360:	cmp	r0, r1
 364:	bge	378 <append_string_to_name_buffer+0xe0>
 368:	ldr	r0, [sp, #4]
 36c:	add	r0, r0, #1024	; 0x400
 370:	str	r0, [sp, #4]
 374:	b	34c <append_string_to_name_buffer+0xb4>
 378:	ldr	r0, [sp, #4]
 37c:	bl	0 <malloc>
 380:	str	r0, [sp, #8]
 384:	ldr	r0, [sp, #8]
 388:	movw	r1, #0
 38c:	cmp	r0, r1
 390:	beq	398 <append_string_to_name_buffer+0x100>
 394:	b	3b8 <append_string_to_name_buffer+0x120>
 398:	movw	r0, #0
 39c:	movt	r0, #0
 3a0:	movw	r1, #0
 3a4:	movt	r1, #0
 3a8:	movw	r2, #100	; 0x64
 3ac:	movw	r3, #0
 3b0:	movt	r3, #0
 3b4:	bl	0 <__assert_fail>
 3b8:	ldr	r0, [sp, #8]
 3bc:	ldr	r1, [fp, #-4]
 3c0:	ldr	r1, [r1, #8]
 3c4:	bl	0 <strcpy>
 3c8:	ldr	r1, [fp, #-4]
 3cc:	ldr	r1, [r1, #8]
 3d0:	str	r0, [sp]
 3d4:	mov	r0, r1
 3d8:	bl	0 <free>
 3dc:	ldr	r0, [sp, #8]
 3e0:	ldr	r1, [fp, #-4]
 3e4:	str	r0, [r1, #8]
 3e8:	ldr	r0, [sp, #4]
 3ec:	ldr	r1, [fp, #-4]
 3f0:	str	r0, [r1, #4]
 3f4:	ldr	r0, [fp, #-4]
 3f8:	ldr	r0, [r0, #8]
 3fc:	ldr	r1, [fp, #-4]
 400:	ldr	r1, [r1]
 404:	add	r0, r0, r1
 408:	ldr	r1, [fp, #-8]
 40c:	bl	0 <strcpy>
 410:	ldr	r1, [sp, #12]
 414:	ldr	r2, [fp, #-4]
 418:	ldr	r3, [r2]
 41c:	add	r1, r3, r1
 420:	str	r1, [r2]
 424:	mov	sp, fp
 428:	pop	{fp, pc}

0000042c <coda_match_filepath>:
 42c:	push	{fp, lr}
 430:	mov	fp, sp
 434:	sub	sp, sp, #136	; 0x88
 438:	ldr	ip, [fp, #8]
 43c:	str	r0, [fp, #-8]
 440:	str	r1, [fp, #-12]
 444:	str	r2, [fp, #-16]
 448:	str	r3, [fp, #-20]	; 0xffffffec
 44c:	ldr	r0, [fp, #-16]
 450:	ldr	r0, [r0, #8]
 454:	add	r1, sp, #24
 458:	str	ip, [sp, #20]
 45c:	bl	0 <stat>
 460:	cmp	r0, #0
 464:	beq	504 <coda_match_filepath+0xd8>
 468:	bl	0 <__errno_location>
 46c:	ldr	r0, [r0]
 470:	cmp	r0, #2
 474:	beq	488 <coda_match_filepath+0x5c>
 478:	bl	0 <__errno_location>
 47c:	ldr	r0, [r0]
 480:	cmp	r0, #20
 484:	bne	4bc <coda_match_filepath+0x90>
 488:	ldr	r0, [fp, #-20]	; 0xffffffec
 48c:	ldr	r1, [fp, #-16]
 490:	ldr	r1, [r1, #8]
 494:	ldr	r3, [fp, #8]
 498:	str	r0, [sp, #16]
 49c:	mov	r0, r1
 4a0:	movw	r1, #0
 4a4:	movw	r2, #0
 4a8:	movt	r2, #0
 4ac:	ldr	ip, [sp, #16]
 4b0:	blx	ip
 4b4:	str	r0, [fp, #-4]
 4b8:	b	5ac <coda_match_filepath+0x180>
 4bc:	ldr	r0, [fp, #-20]	; 0xffffffec
 4c0:	ldr	r1, [fp, #-16]
 4c4:	ldr	r1, [r1, #8]
 4c8:	str	r0, [sp, #12]
 4cc:	str	r1, [sp, #8]
 4d0:	bl	0 <__errno_location>
 4d4:	ldr	r0, [r0]
 4d8:	bl	0 <strerror>
 4dc:	ldr	r3, [fp, #8]
 4e0:	ldr	r1, [sp, #8]
 4e4:	str	r0, [sp, #4]
 4e8:	mov	r0, r1
 4ec:	movw	r1, #0
 4f0:	ldr	r2, [sp, #4]
 4f4:	ldr	ip, [sp, #12]
 4f8:	blx	ip
 4fc:	str	r0, [fp, #-4]
 500:	b	5ac <coda_match_filepath+0x180>
 504:	ldr	r0, [sp, #40]	; 0x28
 508:	and	r0, r0, #16384	; 0x4000
 50c:	cmp	r0, #0
 510:	beq	530 <coda_match_filepath+0x104>
 514:	ldr	r0, [fp, #-12]
 518:	ldr	r1, [fp, #-16]
 51c:	ldr	r2, [fp, #-20]	; 0xffffffec
 520:	ldr	r3, [fp, #8]
 524:	bl	630 <coda_match_dir>
 528:	str	r0, [fp, #-4]
 52c:	b	5ac <coda_match_filepath+0x180>
 530:	ldr	r0, [sp, #40]	; 0x28
 534:	and	r0, r0, #32768	; 0x8000
 538:	cmp	r0, #0
 53c:	beq	55c <coda_match_filepath+0x130>
 540:	ldr	r0, [fp, #-12]
 544:	ldr	r1, [fp, #-16]
 548:	ldr	r2, [fp, #-20]	; 0xffffffec
 54c:	ldr	r3, [fp, #8]
 550:	bl	7b0 <coda_match_file>
 554:	str	r0, [fp, #-4]
 558:	b	5ac <coda_match_filepath+0x180>
 55c:	ldr	r0, [fp, #-8]
 560:	cmp	r0, #0
 564:	bne	59c <coda_match_filepath+0x170>
 568:	ldr	r0, [fp, #-20]	; 0xffffffec
 56c:	ldr	r1, [fp, #-16]
 570:	ldr	r1, [r1, #8]
 574:	ldr	r3, [fp, #8]
 578:	str	r0, [sp]
 57c:	mov	r0, r1
 580:	movw	r1, #0
 584:	movw	r2, #0
 588:	movt	r2, #0
 58c:	ldr	ip, [sp]
 590:	blx	ip
 594:	str	r0, [fp, #-4]
 598:	b	5ac <coda_match_filepath+0x180>
 59c:	b	5a0 <coda_match_filepath+0x174>
 5a0:	b	5a4 <coda_match_filepath+0x178>
 5a4:	movw	r0, #0
 5a8:	str	r0, [fp, #-4]
 5ac:	ldr	r0, [fp, #-4]
 5b0:	mov	sp, fp
 5b4:	pop	{fp, pc}

000005b8 <name_buffer_done>:
 5b8:	push	{fp, lr}
 5bc:	mov	fp, sp
 5c0:	sub	sp, sp, #8
 5c4:	str	r0, [sp, #4]
 5c8:	ldr	r0, [sp, #4]
 5cc:	movw	r1, #0
 5d0:	cmp	r0, r1
 5d4:	beq	5dc <name_buffer_done+0x24>
 5d8:	b	5fc <name_buffer_done+0x44>
 5dc:	movw	r0, #0
 5e0:	movt	r0, #0
 5e4:	movw	r1, #0
 5e8:	movt	r1, #0
 5ec:	movw	r2, #72	; 0x48
 5f0:	movw	r3, #0
 5f4:	movt	r3, #0
 5f8:	bl	0 <__assert_fail>
 5fc:	ldr	r0, [sp, #4]
 600:	movw	r1, #0
 604:	str	r1, [r0]
 608:	ldr	r0, [sp, #4]
 60c:	str	r1, [r0, #4]
 610:	ldr	r0, [sp, #4]
 614:	ldr	r0, [r0, #8]
 618:	bl	0 <free>
 61c:	ldr	r0, [sp, #4]
 620:	movw	r1, #0
 624:	str	r1, [r0, #8]
 628:	mov	sp, fp
 62c:	pop	{fp, pc}

00000630 <coda_match_dir>:
 630:	push	{fp, lr}
 634:	mov	fp, sp
 638:	sub	sp, sp, #48	; 0x30
 63c:	str	r0, [fp, #-8]
 640:	str	r1, [fp, #-12]
 644:	str	r2, [fp, #-16]
 648:	str	r3, [fp, #-20]	; 0xffffffec
 64c:	ldr	r0, [fp, #-12]
 650:	ldr	r0, [r0, #8]
 654:	bl	0 <opendir>
 658:	str	r0, [sp, #24]
 65c:	ldr	r0, [sp, #24]
 660:	movw	r1, #0
 664:	cmp	r0, r1
 668:	bne	6a0 <coda_match_dir+0x70>
 66c:	ldr	r0, [fp, #-16]
 670:	ldr	r1, [fp, #-12]
 674:	ldr	r1, [r1, #8]
 678:	ldr	r3, [fp, #-20]	; 0xffffffec
 67c:	str	r0, [sp, #8]
 680:	mov	r0, r1
 684:	movw	r1, #2
 688:	movw	r2, #0
 68c:	movt	r2, #0
 690:	ldr	ip, [sp, #8]
 694:	blx	ip
 698:	str	r0, [fp, #-4]
 69c:	b	7a4 <coda_match_dir+0x174>
 6a0:	ldr	r0, [fp, #-12]
 6a4:	ldr	r0, [r0]
 6a8:	str	r0, [sp, #16]
 6ac:	ldr	r0, [sp, #24]
 6b0:	bl	0 <readdir>
 6b4:	str	r0, [sp, #20]
 6b8:	movw	r1, #0
 6bc:	cmp	r0, r1
 6c0:	beq	794 <coda_match_dir+0x164>
 6c4:	ldr	r0, [sp, #20]
 6c8:	add	r0, r0, #11
 6cc:	movw	r1, #0
 6d0:	movt	r1, #0
 6d4:	bl	0 <strcmp>
 6d8:	cmp	r0, #0
 6dc:	beq	6fc <coda_match_dir+0xcc>
 6e0:	ldr	r0, [sp, #20]
 6e4:	add	r0, r0, #11
 6e8:	movw	r1, #0
 6ec:	movt	r1, #0
 6f0:	bl	0 <strcmp>
 6f4:	cmp	r0, #0
 6f8:	bne	700 <coda_match_dir+0xd0>
 6fc:	b	6ac <coda_match_dir+0x7c>
 700:	ldr	r0, [fp, #-12]
 704:	movw	r1, #0
 708:	movt	r1, #0
 70c:	bl	298 <append_string_to_name_buffer>
 710:	ldr	r0, [fp, #-12]
 714:	ldr	r1, [sp, #20]
 718:	add	r1, r1, #11
 71c:	bl	298 <append_string_to_name_buffer>
 720:	ldr	r1, [fp, #-8]
 724:	ldr	r2, [fp, #-12]
 728:	ldr	r3, [fp, #-16]
 72c:	ldr	r0, [fp, #-20]	; 0xffffffec
 730:	movw	ip, #1
 734:	str	r0, [sp, #4]
 738:	mov	r0, ip
 73c:	ldr	ip, [sp, #4]
 740:	str	ip, [sp]
 744:	bl	42c <coda_match_filepath>
 748:	str	r0, [sp, #12]
 74c:	ldr	r0, [sp, #12]
 750:	cmp	r0, #0
 754:	beq	76c <coda_match_dir+0x13c>
 758:	ldr	r0, [sp, #24]
 75c:	bl	0 <closedir>
 760:	ldr	r1, [sp, #12]
 764:	str	r1, [fp, #-4]
 768:	b	7a4 <coda_match_dir+0x174>
 76c:	ldr	r0, [sp, #16]
 770:	ldr	r1, [fp, #-12]
 774:	str	r0, [r1]
 778:	ldr	r0, [fp, #-12]
 77c:	ldr	r0, [r0, #8]
 780:	ldr	r1, [sp, #16]
 784:	add	r0, r0, r1
 788:	movw	r1, #0
 78c:	strb	r1, [r0]
 790:	b	6ac <coda_match_dir+0x7c>
 794:	ldr	r0, [sp, #24]
 798:	bl	0 <closedir>
 79c:	movw	r1, #0
 7a0:	str	r1, [fp, #-4]
 7a4:	ldr	r0, [fp, #-4]
 7a8:	mov	sp, fp
 7ac:	pop	{fp, pc}

000007b0 <coda_match_file>:
 7b0:	push	{r4, r5, fp, lr}
 7b4:	add	fp, sp, #8
 7b8:	sub	sp, sp, #632	; 0x278
 7bc:	str	r0, [fp, #-16]
 7c0:	str	r1, [fp, #-20]	; 0xffffffec
 7c4:	str	r2, [fp, #-24]	; 0xffffffe8
 7c8:	str	r3, [fp, #-28]	; 0xffffffe4
 7cc:	ldr	r0, [fp, #-20]	; 0xffffffec
 7d0:	ldr	r0, [r0, #8]
 7d4:	sub	r1, fp, #32
 7d8:	bl	0 <coda_open>
 7dc:	str	r0, [sp, #80]	; 0x50
 7e0:	ldr	r0, [sp, #80]	; 0x50
 7e4:	cmp	r0, #0
 7e8:	beq	838 <coda_match_file+0x88>
 7ec:	ldr	r0, [pc, #580]	; a38 <coda_match_file+0x288>
 7f0:	ldr	r0, [pc, r0]
 7f4:	str	r0, [sp, #76]	; 0x4c
 7f8:	bl	0 <__aeabi_read_tp>
 7fc:	ldr	r1, [sp, #76]	; 0x4c
 800:	ldr	r0, [r0, r1]
 804:	cmn	r0, #21
 808:	bne	838 <coda_match_file+0x88>
 80c:	movw	r0, #0
 810:	bl	0 <coda_set_option_use_mmap>
 814:	ldr	r1, [fp, #-20]	; 0xffffffec
 818:	ldr	r1, [r1, #8]
 81c:	str	r0, [sp, #72]	; 0x48
 820:	mov	r0, r1
 824:	sub	r1, fp, #32
 828:	bl	0 <coda_open>
 82c:	str	r0, [sp, #80]	; 0x50
 830:	movw	r0, #1
 834:	bl	0 <coda_set_option_use_mmap>
 838:	ldr	r0, [sp, #80]	; 0x50
 83c:	cmp	r0, #0
 840:	beq	8ec <coda_match_file+0x13c>
 844:	ldr	r0, [pc, #504]	; a44 <coda_match_file+0x294>
 848:	ldr	r0, [pc, r0]
 84c:	str	r0, [sp, #68]	; 0x44
 850:	bl	0 <__aeabi_read_tp>
 854:	ldr	r1, [sp, #68]	; 0x44
 858:	ldr	r0, [r0, r1]
 85c:	cmn	r0, #200	; 0xc8
 860:	bne	894 <coda_match_file+0xe4>
 864:	ldr	r0, [fp, #-24]	; 0xffffffe8
 868:	ldr	r1, [fp, #-20]	; 0xffffffec
 86c:	ldr	r1, [r1, #8]
 870:	ldr	r3, [fp, #-28]	; 0xffffffe4
 874:	str	r0, [sp, #64]	; 0x40
 878:	mov	r0, r1
 87c:	movw	r1, #3
 880:	movw	r2, #0
 884:	ldr	ip, [sp, #64]	; 0x40
 888:	blx	ip
 88c:	str	r0, [fp, #-12]
 890:	b	a2c <coda_match_file+0x27c>
 894:	ldr	r0, [fp, #-24]	; 0xffffffe8
 898:	ldr	r1, [fp, #-20]	; 0xffffffec
 89c:	ldr	r1, [r1, #8]
 8a0:	ldr	r2, [pc, #416]	; a48 <coda_match_file+0x298>
 8a4:	ldr	r2, [pc, r2]
 8a8:	str	r0, [sp, #60]	; 0x3c
 8ac:	str	r1, [sp, #56]	; 0x38
 8b0:	str	r2, [sp, #52]	; 0x34
 8b4:	bl	0 <__aeabi_read_tp>
 8b8:	ldr	r1, [sp, #52]	; 0x34
 8bc:	ldr	r0, [r0, r1]
 8c0:	bl	0 <coda_errno_to_string>
 8c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 8c8:	ldr	r1, [sp, #56]	; 0x38
 8cc:	str	r0, [sp, #48]	; 0x30
 8d0:	mov	r0, r1
 8d4:	movw	r1, #1
 8d8:	ldr	r2, [sp, #48]	; 0x30
 8dc:	ldr	ip, [sp, #60]	; 0x3c
 8e0:	blx	ip
 8e4:	str	r0, [fp, #-12]
 8e8:	b	a2c <coda_match_file+0x27c>
 8ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
 8f0:	add	r0, sp, #88	; 0x58
 8f4:	bl	0 <coda_cursor_set_product>
 8f8:	cmp	r0, #0
 8fc:	beq	964 <coda_match_file+0x1b4>
 900:	ldr	r0, [fp, #-32]	; 0xffffffe0
 904:	bl	0 <coda_close>
 908:	ldr	r1, [fp, #-24]	; 0xffffffe8
 90c:	ldr	r2, [fp, #-20]	; 0xffffffec
 910:	ldr	r2, [r2, #8]
 914:	ldr	r3, [pc, #292]	; a40 <coda_match_file+0x290>
 918:	ldr	r3, [pc, r3]
 91c:	str	r0, [sp, #44]	; 0x2c
 920:	str	r1, [sp, #40]	; 0x28
 924:	str	r2, [sp, #36]	; 0x24
 928:	str	r3, [sp, #32]
 92c:	bl	0 <__aeabi_read_tp>
 930:	ldr	r1, [sp, #32]
 934:	ldr	r0, [r0, r1]
 938:	bl	0 <coda_errno_to_string>
 93c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 940:	ldr	r1, [sp, #36]	; 0x24
 944:	str	r0, [sp, #28]
 948:	mov	r0, r1
 94c:	movw	r1, #0
 950:	ldr	r2, [sp, #28]
 954:	ldr	ip, [sp, #40]	; 0x28
 958:	blx	ip
 95c:	str	r0, [fp, #-12]
 960:	b	a2c <coda_match_file+0x27c>
 964:	ldr	r0, [fp, #-16]
 968:	add	r1, sp, #88	; 0x58
 96c:	add	r2, sp, #84	; 0x54
 970:	bl	0 <coda_expression_eval_bool>
 974:	cmp	r0, #0
 978:	beq	9d4 <coda_match_file+0x224>
 97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 980:	ldr	r1, [fp, #-20]	; 0xffffffec
 984:	ldr	r1, [r1, #8]
 988:	ldr	r2, [pc, #172]	; a3c <coda_match_file+0x28c>
 98c:	ldr	r2, [pc, r2]
 990:	str	r0, [sp, #24]
 994:	str	r1, [sp, #20]
 998:	str	r2, [sp, #16]
 99c:	bl	0 <__aeabi_read_tp>
 9a0:	ldr	r1, [sp, #16]
 9a4:	ldr	r0, [r0, r1]
 9a8:	bl	0 <coda_errno_to_string>
 9ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9b0:	ldr	r1, [sp, #20]
 9b4:	str	r0, [sp, #12]
 9b8:	mov	r0, r1
 9bc:	movw	r1, #0
 9c0:	ldr	r2, [sp, #12]
 9c4:	ldr	ip, [sp, #24]
 9c8:	blx	ip
 9cc:	str	r0, [fp, #-12]
 9d0:	b	a2c <coda_match_file+0x27c>
 9d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
 9d8:	bl	0 <coda_close>
 9dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
 9e0:	ldr	r2, [fp, #-20]	; 0xffffffec
 9e4:	ldr	r2, [r2, #8]
 9e8:	ldr	r3, [sp, #84]	; 0x54
 9ec:	cmp	r3, #0
 9f0:	movw	r3, #0
 9f4:	movne	r3, #1
 9f8:	tst	r3, #1
 9fc:	movw	r3, #4
 a00:	moveq	r3, #5
 a04:	ldr	ip, [fp, #-28]	; 0xffffffe4
 a08:	str	r0, [sp, #8]
 a0c:	mov	r0, r2
 a10:	str	r1, [sp, #4]
 a14:	mov	r1, r3
 a18:	movw	r2, #0
 a1c:	mov	r3, ip
 a20:	ldr	ip, [sp, #4]
 a24:	blx	ip
 a28:	str	r0, [fp, #-12]
 a2c:	ldr	r0, [fp, #-12]
 a30:	sub	sp, fp, #8
 a34:	pop	{r4, r5, fp, pc}
 a38:	.word	0x00000240
 a3c:	.word	0x000000a8
 a40:	.word	0x00000120
 a44:	.word	0x000001f4
 a48:	.word	0x0000019c
