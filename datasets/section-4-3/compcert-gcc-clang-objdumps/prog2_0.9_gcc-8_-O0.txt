
../compcert-repos/prog2/0.9:     file format elf32-littlearm


Disassembly of section .init:

0001063c <.init>:
   1063c:	push	{r3, lr}
   10640:	bl	106f8 <_start@@Base+0x3c>
   10644:	pop	{r3, pc}

Disassembly of section .plt:

00010648 <strcmp@plt-0x14>:
   10648:	push	{lr}		; (str lr, [sp, #-4]!)
   1064c:	ldr	lr, [pc, #4]	; 10658 <strcmp@plt-0x4>
   10650:	add	lr, pc, lr
   10654:	ldr	pc, [lr, #8]!
   10658:	andeq	r0, r1, r8, lsr #19

0001065c <strcmp@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2472]!	; 0x9a8

00010668 <printf@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2464]!	; 0x9a0

00010674 <strcat@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2456]!	; 0x998

00010680 <__libc_start_main@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2448]!	; 0x990

0001068c <__gmon_start__@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2440]!	; 0x988

00010698 <strlen@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2432]!	; 0x980

000106a4 <__isoc99_scanf@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2424]!	; 0x978

000106b0 <abort@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2416]!	; 0x970

Disassembly of section .text:

000106bc <_start@@Base>:
   106bc:	mov	fp, #0
   106c0:	mov	lr, #0
   106c4:	pop	{r1}		; (ldr r1, [sp], #4)
   106c8:	mov	r2, sp
   106cc:	push	{r2}		; (str r2, [sp, #-4]!)
   106d0:	push	{r0}		; (str r0, [sp, #-4]!)
   106d4:	ldr	ip, [pc, #16]	; 106ec <_start@@Base+0x30>
   106d8:	push	{ip}		; (str ip, [sp, #-4]!)
   106dc:	ldr	r0, [pc, #12]	; 106f0 <_start@@Base+0x34>
   106e0:	ldr	r3, [pc, #12]	; 106f4 <_start@@Base+0x38>
   106e4:	bl	10680 <__libc_start_main@plt>
   106e8:	bl	106b0 <abort@plt>
   106ec:	andeq	r0, r1, r8, asr #24
   106f0:	andeq	r0, r1, r4, lsl fp
   106f4:	andeq	r0, r1, r8, ror #23
   106f8:	ldr	r3, [pc, #20]	; 10714 <_start@@Base+0x58>
   106fc:	ldr	r2, [pc, #20]	; 10718 <_start@@Base+0x5c>
   10700:	add	r3, pc, r3
   10704:	ldr	r2, [r3, r2]
   10708:	cmp	r2, #0
   1070c:	bxeq	lr
   10710:	b	1068c <__gmon_start__@plt>
   10714:	strdeq	r0, [r1], -r8
   10718:	andeq	r0, r0, ip, lsr #32
   1071c:	ldr	r0, [pc, #24]	; 1073c <_start@@Base+0x80>
   10720:	ldr	r3, [pc, #24]	; 10740 <_start@@Base+0x84>
   10724:	cmp	r3, r0
   10728:	bxeq	lr
   1072c:	ldr	r3, [pc, #16]	; 10744 <_start@@Base+0x88>
   10730:	cmp	r3, #0
   10734:	bxeq	lr
   10738:	bx	r3
   1073c:	andeq	r1, r2, r8, lsr r0
   10740:	andeq	r1, r2, r8, lsr r0
   10744:	andeq	r0, r0, r0
   10748:	ldr	r0, [pc, #36]	; 10774 <_start@@Base+0xb8>
   1074c:	ldr	r1, [pc, #36]	; 10778 <_start@@Base+0xbc>
   10750:	sub	r1, r1, r0
   10754:	asr	r1, r1, #2
   10758:	add	r1, r1, r1, lsr #31
   1075c:	asrs	r1, r1, #1
   10760:	bxeq	lr
   10764:	ldr	r3, [pc, #16]	; 1077c <_start@@Base+0xc0>
   10768:	cmp	r3, #0
   1076c:	bxeq	lr
   10770:	bx	r3
   10774:	andeq	r1, r2, r8, lsr r0
   10778:	andeq	r1, r2, r8, lsr r0
   1077c:	andeq	r0, r0, r0
   10780:	push	{r4, lr}
   10784:	ldr	r4, [pc, #24]	; 107a4 <_start@@Base+0xe8>
   10788:	ldrb	r3, [r4]
   1078c:	cmp	r3, #0
   10790:	popne	{r4, pc}
   10794:	bl	1071c <_start@@Base+0x60>
   10798:	mov	r3, #1
   1079c:	strb	r3, [r4]
   107a0:	pop	{r4, pc}
   107a4:	andeq	r1, r2, r8, lsr r0
   107a8:	b	10748 <_start@@Base+0x8c>

000107ac <ler_albuns@@Base>:
   107ac:	str	r4, [sp, #-12]!
   107b0:	str	fp, [sp, #4]
   107b4:	str	lr, [sp, #8]
   107b8:	add	fp, sp, #8
   107bc:	sub	sp, sp, #44	; 0x2c
   107c0:	str	r0, [fp, #-40]	; 0xffffffd8
   107c4:	mov	r3, #0
   107c8:	str	r3, [fp, #-16]
   107cc:	sub	r1, fp, #32
   107d0:	mov	r2, #0
   107d4:	mov	r3, #0
   107d8:	strd	r2, [r1]
   107dc:	mov	r0, r2
   107e0:	str	r0, [r1, #8]
   107e4:	str	r2, [r1, #11]
   107e8:	b	10858 <ler_albuns@@Base+0xac>
   107ec:	ldr	r3, [fp, #-16]
   107f0:	mov	r2, #208	; 0xd0
   107f4:	mul	r3, r2, r3
   107f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   107fc:	add	r3, r2, r3
   10800:	mov	r4, r3
   10804:	mov	r0, r4
   10808:	bl	10698 <strlen@plt>
   1080c:	mov	r3, r0
   10810:	add	r2, r4, r3
   10814:	movw	r3, #3160	; 0xc58
   10818:	movt	r3, #1
   1081c:	ldrh	r3, [r3]
   10820:	strh	r3, [r2]
   10824:	ldr	r3, [fp, #-16]
   10828:	mov	r2, #208	; 0xd0
   1082c:	mul	r3, r2, r3
   10830:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10834:	add	r3, r2, r3
   10838:	mov	r2, r3
   1083c:	sub	r3, fp, #32
   10840:	mov	r1, r3
   10844:	mov	r0, r2
   10848:	bl	10674 <strcat@plt>
   1084c:	ldr	r3, [fp, #-16]
   10850:	add	r3, r3, #1
   10854:	str	r3, [fp, #-16]
   10858:	ldr	r3, [fp, #-16]
   1085c:	mov	r2, #208	; 0xd0
   10860:	mul	r3, r2, r3
   10864:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10868:	add	r3, r2, r3
   1086c:	mov	ip, r3
   10870:	ldr	r3, [fp, #-16]
   10874:	mov	r2, #208	; 0xd0
   10878:	mul	r3, r2, r3
   1087c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10880:	add	r3, r2, r3
   10884:	add	r0, r3, #100	; 0x64
   10888:	ldr	r3, [fp, #-16]
   1088c:	mov	r2, #208	; 0xd0
   10890:	mul	r3, r2, r3
   10894:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10898:	add	r3, r2, r3
   1089c:	add	r3, r3, #200	; 0xc8
   108a0:	ldr	r2, [fp, #-16]
   108a4:	mov	r1, #208	; 0xd0
   108a8:	mul	r2, r1, r2
   108ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   108b0:	add	r2, r1, r2
   108b4:	add	r2, r2, #204	; 0xcc
   108b8:	sub	r1, fp, #32
   108bc:	str	r2, [sp, #4]
   108c0:	str	r3, [sp]
   108c4:	mov	r3, r0
   108c8:	mov	r2, r1
   108cc:	mov	r1, ip
   108d0:	movw	r0, #3164	; 0xc5c
   108d4:	movt	r0, #1
   108d8:	bl	106a4 <__isoc99_scanf@plt>
   108dc:	mov	r3, r0
   108e0:	cmp	r3, #5
   108e4:	bne	108f4 <ler_albuns@@Base+0x148>
   108e8:	ldr	r3, [fp, #-16]
   108ec:	cmp	r3, #99	; 0x63
   108f0:	ble	107ec <ler_albuns@@Base+0x40>
   108f4:	ldr	r3, [fp, #-16]
   108f8:	mov	r0, r3
   108fc:	sub	sp, fp, #8
   10900:	ldr	r4, [sp]
   10904:	ldr	fp, [sp, #4]
   10908:	add	sp, sp, #8
   1090c:	pop	{pc}		; (ldr pc, [sp], #4)

00010910 <lista_albuns@@Base>:
   10910:	str	fp, [sp, #-8]!
   10914:	str	lr, [sp, #4]
   10918:	add	fp, sp, #4
   1091c:	sub	sp, sp, #24
   10920:	str	r0, [fp, #-16]
   10924:	str	r1, [fp, #-20]	; 0xffffffec
   10928:	mov	r3, #0
   1092c:	str	r3, [fp, #-8]
   10930:	b	109bc <lista_albuns@@Base+0xac>
   10934:	ldr	r3, [fp, #-8]
   10938:	mov	r2, #208	; 0xd0
   1093c:	mul	r3, r2, r3
   10940:	ldr	r2, [fp, #-16]
   10944:	add	r3, r2, r3
   10948:	mov	ip, r3
   1094c:	ldr	r3, [fp, #-8]
   10950:	mov	r2, #208	; 0xd0
   10954:	mul	r3, r2, r3
   10958:	ldr	r2, [fp, #-16]
   1095c:	add	r3, r2, r3
   10960:	add	r1, r3, #100	; 0x64
   10964:	ldr	r3, [fp, #-8]
   10968:	mov	r2, #208	; 0xd0
   1096c:	mul	r3, r2, r3
   10970:	ldr	r2, [fp, #-16]
   10974:	add	r3, r2, r3
   10978:	ldr	r0, [r3, #200]	; 0xc8
   1097c:	ldr	r3, [fp, #-8]
   10980:	mov	r2, #208	; 0xd0
   10984:	mul	r3, r2, r3
   10988:	ldr	r2, [fp, #-16]
   1098c:	add	r3, r2, r3
   10990:	ldr	r3, [r3, #204]	; 0xcc
   10994:	str	r3, [sp]
   10998:	mov	r3, r0
   1099c:	mov	r2, r1
   109a0:	mov	r1, ip
   109a4:	movw	r0, #3180	; 0xc6c
   109a8:	movt	r0, #1
   109ac:	bl	10668 <printf@plt>
   109b0:	ldr	r3, [fp, #-8]
   109b4:	add	r3, r3, #1
   109b8:	str	r3, [fp, #-8]
   109bc:	ldr	r2, [fp, #-8]
   109c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   109c4:	cmp	r2, r3
   109c8:	blt	10934 <lista_albuns@@Base+0x24>
   109cc:	nop	{0}
   109d0:	sub	sp, fp, #4
   109d4:	ldr	fp, [sp]
   109d8:	add	sp, sp, #4
   109dc:	pop	{pc}		; (ldr pc, [sp], #4)

000109e0 <albuns_artista@@Base>:
   109e0:	str	fp, [sp, #-8]!
   109e4:	str	lr, [sp, #4]
   109e8:	add	fp, sp, #4
   109ec:	sub	sp, sp, #24
   109f0:	str	r0, [fp, #-16]
   109f4:	str	r1, [fp, #-20]	; 0xffffffec
   109f8:	str	r2, [fp, #-24]	; 0xffffffe8
   109fc:	str	r3, [fp, #-28]	; 0xffffffe4
   10a00:	mov	r3, #0
   10a04:	str	r3, [fp, #-12]
   10a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10a0c:	cmp	r3, #0
   10a10:	bne	10a78 <albuns_artista@@Base+0x98>
   10a14:	mov	r3, #0
   10a18:	str	r3, [fp, #-8]
   10a1c:	b	10a64 <albuns_artista@@Base+0x84>
   10a20:	ldr	r3, [fp, #-8]
   10a24:	mov	r2, #208	; 0xd0
   10a28:	mul	r3, r2, r3
   10a2c:	ldr	r2, [fp, #-16]
   10a30:	add	r3, r2, r3
   10a34:	mov	r1, r3
   10a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a3c:	bl	1065c <strcmp@plt>
   10a40:	mov	r3, r0
   10a44:	cmp	r3, #0
   10a48:	bne	10a58 <albuns_artista@@Base+0x78>
   10a4c:	ldr	r3, [fp, #-12]
   10a50:	add	r3, r3, #1
   10a54:	str	r3, [fp, #-12]
   10a58:	ldr	r3, [fp, #-8]
   10a5c:	add	r3, r3, #1
   10a60:	str	r3, [fp, #-8]
   10a64:	ldr	r2, [fp, #-8]
   10a68:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a6c:	cmp	r2, r3
   10a70:	blt	10a20 <albuns_artista@@Base+0x40>
   10a74:	b	10afc <albuns_artista@@Base+0x11c>
   10a78:	mov	r3, #0
   10a7c:	str	r3, [fp, #-8]
   10a80:	b	10aec <albuns_artista@@Base+0x10c>
   10a84:	ldr	r3, [fp, #-8]
   10a88:	mov	r2, #208	; 0xd0
   10a8c:	mul	r3, r2, r3
   10a90:	ldr	r2, [fp, #-16]
   10a94:	add	r3, r2, r3
   10a98:	mov	r1, r3
   10a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10aa0:	bl	1065c <strcmp@plt>
   10aa4:	mov	r3, r0
   10aa8:	cmp	r3, #0
   10aac:	bne	10ae0 <albuns_artista@@Base+0x100>
   10ab0:	ldr	r3, [fp, #-8]
   10ab4:	mov	r2, #208	; 0xd0
   10ab8:	mul	r3, r2, r3
   10abc:	ldr	r2, [fp, #-16]
   10ac0:	add	r3, r2, r3
   10ac4:	ldr	r3, [r3, #204]	; 0xcc
   10ac8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10acc:	cmp	r2, r3
   10ad0:	bne	10ae0 <albuns_artista@@Base+0x100>
   10ad4:	ldr	r3, [fp, #-12]
   10ad8:	add	r3, r3, #1
   10adc:	str	r3, [fp, #-12]
   10ae0:	ldr	r3, [fp, #-8]
   10ae4:	add	r3, r3, #1
   10ae8:	str	r3, [fp, #-8]
   10aec:	ldr	r2, [fp, #-8]
   10af0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10af4:	cmp	r2, r3
   10af8:	blt	10a84 <albuns_artista@@Base+0xa4>
   10afc:	ldr	r3, [fp, #-12]
   10b00:	mov	r0, r3
   10b04:	sub	sp, fp, #4
   10b08:	ldr	fp, [sp]
   10b0c:	add	sp, sp, #4
   10b10:	pop	{pc}		; (ldr pc, [sp], #4)

00010b14 <main@@Base>:
   10b14:	str	fp, [sp, #-8]!
   10b18:	str	lr, [sp, #4]
   10b1c:	add	fp, sp, #4
   10b20:	sub	sp, sp, #20736	; 0x5100
   10b24:	sub	sp, sp, #72	; 0x48
   10b28:	sub	r3, fp, #20736	; 0x5100
   10b2c:	sub	r3, r3, #4
   10b30:	sub	r3, r3, #68	; 0x44
   10b34:	mov	r0, r3
   10b38:	bl	107ac <ler_albuns@@Base>
   10b3c:	str	r0, [fp, #-8]
   10b40:	sub	r3, fp, #20736	; 0x5100
   10b44:	sub	r3, r3, #4
   10b48:	sub	r3, r3, #68	; 0x44
   10b4c:	ldr	r1, [fp, #-8]
   10b50:	mov	r0, r3
   10b54:	bl	10910 <lista_albuns@@Base>
   10b58:	ldr	r1, [fp, #-8]
   10b5c:	movw	r0, #3196	; 0xc7c
   10b60:	movt	r0, #1
   10b64:	bl	10668 <printf@plt>
   10b68:	sub	r0, fp, #20736	; 0x5100
   10b6c:	sub	r0, r0, #4
   10b70:	sub	r0, r0, #68	; 0x44
   10b74:	mov	r3, #1
   10b78:	movw	r2, #3228	; 0xc9c
   10b7c:	movt	r2, #1
   10b80:	ldr	r1, [fp, #-8]
   10b84:	bl	109e0 <albuns_artista@@Base>
   10b88:	mov	r3, r0
   10b8c:	mov	r1, r3
   10b90:	movw	r0, #3244	; 0xcac
   10b94:	movt	r0, #1
   10b98:	bl	10668 <printf@plt>
   10b9c:	sub	r0, fp, #20736	; 0x5100
   10ba0:	sub	r0, r0, #4
   10ba4:	sub	r0, r0, #68	; 0x44
   10ba8:	mov	r3, #0
   10bac:	movw	r2, #3228	; 0xc9c
   10bb0:	movt	r2, #1
   10bb4:	ldr	r1, [fp, #-8]
   10bb8:	bl	109e0 <albuns_artista@@Base>
   10bbc:	mov	r3, r0
   10bc0:	mov	r1, r3
   10bc4:	movw	r0, #3300	; 0xce4
   10bc8:	movt	r0, #1
   10bcc:	bl	10668 <printf@plt>
   10bd0:	mov	r3, #0
   10bd4:	mov	r0, r3
   10bd8:	sub	sp, fp, #4
   10bdc:	ldr	fp, [sp]
   10be0:	add	sp, sp, #4
   10be4:	pop	{pc}		; (ldr pc, [sp], #4)

00010be8 <__libc_csu_init@@Base>:
   10be8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bec:	mov	r7, r0
   10bf0:	ldr	r6, [pc, #72]	; 10c40 <__libc_csu_init@@Base+0x58>
   10bf4:	ldr	r5, [pc, #72]	; 10c44 <__libc_csu_init@@Base+0x5c>
   10bf8:	add	r6, pc, r6
   10bfc:	add	r5, pc, r5
   10c00:	sub	r6, r6, r5
   10c04:	mov	r8, r1
   10c08:	mov	r9, r2
   10c0c:	bl	1063c <strcmp@plt-0x20>
   10c10:	asrs	r6, r6, #2
   10c14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c18:	mov	r4, #0
   10c1c:	add	r4, r4, #1
   10c20:	ldr	r3, [r5], #4
   10c24:	mov	r2, r9
   10c28:	mov	r1, r8
   10c2c:	mov	r0, r7
   10c30:	blx	r3
   10c34:	cmp	r6, r4
   10c38:	bne	10c1c <__libc_csu_init@@Base+0x34>
   10c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c40:	andeq	r0, r1, r4, lsl r3
   10c44:	andeq	r0, r1, ip, lsl #6

00010c48 <__libc_csu_fini@@Base>:
   10c48:	bx	lr

Disassembly of section .fini:

00010c4c <.fini>:
   10c4c:	push	{r3, lr}
   10c50:	pop	{r3, pc}
