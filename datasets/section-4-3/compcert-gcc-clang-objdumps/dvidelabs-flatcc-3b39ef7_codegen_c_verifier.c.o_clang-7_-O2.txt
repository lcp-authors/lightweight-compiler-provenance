
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_verifier.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_gen_c_verifier>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #500	; 0x1f4
   c:	mov	r4, r0
  10:	mov	r8, r0
  14:	ldr	r1, [r4, #208]	; 0xd0
  18:	ldr	r0, [r8, #204]!	; 0xcc
  1c:	ldr	r2, [r1, #164]	; 0xa4
  20:	movw	r1, #0
  24:	movt	r1, #0
  28:	mov	r3, r2
  2c:	bl	0 <fprintf>
  30:	ldr	r3, [r8]
  34:	movw	r0, #0
  38:	mov	r1, #81	; 0x51
  3c:	mov	r2, #1
  40:	movt	r0, #0
  44:	bl	0 <fwrite>
  48:	ldr	r1, [r4, #208]	; 0xd0
  4c:	ldr	r0, [r8]
  50:	ldr	r2, [r1, #164]	; 0xa4
  54:	movw	r1, #0
  58:	movt	r1, #0
  5c:	bl	0 <fprintf>
  60:	ldr	r1, [r4, #208]	; 0xd0
  64:	ldr	r0, [r8]
  68:	ldr	r2, [r1, #160]	; 0xa0
  6c:	movw	r1, #0
  70:	movt	r1, #0
  74:	bl	0 <fprintf>
  78:	ldr	r3, [r8]
  7c:	movw	r0, #0
  80:	mov	r1, #7
  84:	mov	r2, #1
  88:	movt	r0, #0
  8c:	bl	0 <fwrite>
  90:	ldr	r3, [r8]
  94:	movw	r0, #0
  98:	mov	r1, #36	; 0x24
  9c:	mov	r2, #1
  a0:	movt	r0, #0
  a4:	bl	0 <fwrite>
  a8:	movw	r1, #0
  ac:	movw	r2, #0
  b0:	mov	r0, r4
  b4:	movt	r1, #0
  b8:	movt	r2, #0
  bc:	bl	0 <__flatcc_fb_gen_c_includes>
  c0:	ldr	r0, [r4, #212]	; 0xd4
  c4:	str	r4, [sp, #44]	; 0x2c
  c8:	ldr	r0, [r0, #140]	; 0x8c
  cc:	cmp	r0, #0
  d0:	beq	ec <__flatcc_fb_gen_c_verifier+0xec>
  d4:	ldr	r3, [r8]
  d8:	movw	r0, #0
  dc:	mov	r1, #36	; 0x24
  e0:	mov	r2, #1
  e4:	movt	r0, #0
  e8:	bl	0 <fwrite>
  ec:	ldr	r4, [sp, #44]	; 0x2c
  f0:	mov	r0, #10
  f4:	ldr	r1, [r4, #204]	; 0xcc
  f8:	bl	0 <fputc>
  fc:	sub	r0, fp, #256	; 0x100
 100:	mov	r1, #0
 104:	mov	r2, #220	; 0xdc
 108:	bl	0 <memset>
 10c:	ldr	r0, [r4, #208]	; 0xd0
 110:	ldr	r4, [r0, #40]	; 0x28
 114:	cmp	r4, #0
 118:	beq	160 <__flatcc_fb_gen_c_verifier+0x160>
 11c:	movw	r6, #0
 120:	sub	r5, fp, #256	; 0x100
 124:	movt	r6, #0
 128:	ldrh	r0, [r4, #8]
 12c:	cmp	r0, #0
 130:	bne	154 <__flatcc_fb_gen_c_verifier+0x154>
 134:	ldr	r0, [r4, #12]
 138:	mov	r1, r4
 13c:	mov	r2, r5
 140:	bl	0 <__flatcc_fb_scoped_symbol_name>
 144:	ldr	r0, [r8]
 148:	mov	r1, r6
 14c:	mov	r2, r5
 150:	bl	0 <fprintf>
 154:	ldr	r4, [r4]
 158:	cmp	r4, #0
 15c:	bne	128 <__flatcc_fb_gen_c_verifier+0x128>
 160:	ldr	r4, [sp, #44]	; 0x2c
 164:	mov	r0, #10
 168:	ldr	r1, [r4, #204]	; 0xcc
 16c:	bl	0 <fputc>
 170:	ldr	r0, [r4, #208]	; 0xd0
 174:	ldr	r6, [r0, #40]	; 0x28
 178:	cmp	r6, #0
 17c:	beq	870 <__flatcc_fb_gen_c_verifier+0x870>
 180:	movw	r9, #0
 184:	add	r4, sp, #48	; 0x30
 188:	movt	r9, #0
 18c:	ldrh	r0, [r6, #8]
 190:	cmp	r0, #4
 194:	bne	2d8 <__flatcc_fb_gen_c_verifier+0x2d8>
 198:	sub	r5, fp, #256	; 0x100
 19c:	mov	r1, #0
 1a0:	mov	r2, #220	; 0xdc
 1a4:	mov	r0, r5
 1a8:	bl	0 <memset>
 1ac:	mov	r0, r4
 1b0:	mov	r1, #0
 1b4:	mov	r2, #220	; 0xdc
 1b8:	bl	0 <memset>
 1bc:	ldr	r0, [r6, #12]
 1c0:	mov	r1, r6
 1c4:	mov	r2, r5
 1c8:	bl	0 <__flatcc_fb_scoped_symbol_name>
 1cc:	ldr	r0, [r8]
 1d0:	movw	r1, #0
 1d4:	mov	r2, r5
 1d8:	movt	r1, #0
 1dc:	bl	0 <fprintf>
 1e0:	ldr	r7, [r6, #20]
 1e4:	cmp	r7, #0
 1e8:	beq	2c0 <__flatcc_fb_gen_c_verifier+0x2c0>
 1ec:	ldrh	r0, [r7, #24]
 1f0:	cmp	r0, #0
 1f4:	beq	2b4 <__flatcc_fb_gen_c_verifier+0x2b4>
 1f8:	ldr	r1, [r7, #4]
 1fc:	cmp	r0, #10
 200:	ldm	r1, {r5, sl}
 204:	beq	258 <__flatcc_fb_gen_c_verifier+0x258>
 208:	cmp	r0, #14
 20c:	bne	8c4 <__flatcc_fb_gen_c_verifier+0x8c4>
 210:	ldr	r1, [r7, #16]
 214:	mov	r2, r4
 218:	ldr	r0, [r1, #12]
 21c:	bl	0 <__flatcc_fb_scoped_symbol_name>
 220:	ldr	r1, [r7, #16]
 224:	ldrh	r0, [r1, #8]
 228:	cmp	r0, #1
 22c:	beq	280 <__flatcc_fb_gen_c_verifier+0x280>
 230:	cmp	r0, #0
 234:	bne	914 <__flatcc_fb_gen_c_verifier+0x914>
 238:	ldr	r2, [r7, #48]	; 0x30
 23c:	ldr	r0, [r8]
 240:	movw	r1, #0
 244:	str	sl, [sp]
 248:	str	r5, [sp, #4]
 24c:	mov	r3, r4
 250:	movt	r1, #0
 254:	b	26c <__flatcc_fb_gen_c_verifier+0x26c>
 258:	ldr	r2, [r7, #48]	; 0x30
 25c:	ldr	r0, [r8]
 260:	mov	r1, r9
 264:	mov	r3, sl
 268:	str	r5, [sp]
 26c:	bl	0 <fprintf>
 270:	ldr	r7, [r7]
 274:	cmp	r7, #0
 278:	bne	1ec <__flatcc_fb_gen_c_verifier+0x1ec>
 27c:	b	2c0 <__flatcc_fb_gen_c_verifier+0x2c0>
 280:	ldr	r2, [r7, #48]	; 0x30
 284:	ldr	r0, [r8]
 288:	ldr	r3, [r1, #112]	; 0x70
 28c:	ldr	r4, [r1, #116]	; 0x74
 290:	ldrh	r1, [r1, #104]	; 0x68
 294:	stm	sp, {r3, r4}
 298:	str	r1, [sp, #8]
 29c:	movw	r1, #0
 2a0:	add	r4, sp, #48	; 0x30
 2a4:	str	sl, [sp, #12]
 2a8:	str	r5, [sp, #16]
 2ac:	movt	r1, #0
 2b0:	bl	0 <fprintf>
 2b4:	ldr	r7, [r7]
 2b8:	cmp	r7, #0
 2bc:	bne	1ec <__flatcc_fb_gen_c_verifier+0x1ec>
 2c0:	ldr	r3, [r8]
 2c4:	movw	r0, #0
 2c8:	mov	r1, #47	; 0x2f
 2cc:	mov	r2, #1
 2d0:	movt	r0, #0
 2d4:	bl	0 <fwrite>
 2d8:	ldr	r6, [r6]
 2dc:	cmp	r6, #0
 2e0:	bne	18c <__flatcc_fb_gen_c_verifier+0x18c>
 2e4:	ldr	r0, [sp, #44]	; 0x2c
 2e8:	ldr	r0, [r0, #208]	; 0xd0
 2ec:	ldr	r4, [r0, #40]	; 0x28
 2f0:	cmp	r4, #0
 2f4:	beq	870 <__flatcc_fb_gen_c_verifier+0x870>
 2f8:	ldr	r6, [sp, #44]	; 0x2c
 2fc:	movw	r9, #0
 300:	movw	sl, #0
 304:	movw	r5, #0
 308:	sub	r7, fp, #256	; 0x100
 30c:	movt	r9, #0
 310:	movt	sl, #0
 314:	movt	r5, #0
 318:	ldrh	r0, [r4, #8]
 31c:	cmp	r0, #1
 320:	bne	3d4 <__flatcc_fb_gen_c_verifier+0x3d4>
 324:	mov	r0, r7
 328:	mov	r1, #0
 32c:	mov	r2, #220	; 0xdc
 330:	bl	0 <memset>
 334:	ldr	r0, [r4, #12]
 338:	mov	r1, r4
 33c:	mov	r2, r7
 340:	bl	0 <__flatcc_fb_scoped_symbol_name>
 344:	ldrd	r2, [r4, #112]	; 0x70
 348:	ldrh	r1, [r4, #104]	; 0x68
 34c:	ldr	r0, [r6, #204]	; 0xcc
 350:	stm	sp, {r2, r3}
 354:	str	r1, [sp, #8]
 358:	movw	r1, #0
 35c:	mov	r2, r7
 360:	mov	r3, r7
 364:	movt	r1, #0
 368:	bl	0 <fprintf>
 36c:	ldrd	r2, [r4, #112]	; 0x70
 370:	ldrh	r1, [r4, #104]	; 0x68
 374:	ldr	r0, [r6, #204]	; 0xcc
 378:	stm	sp, {r2, r3}
 37c:	str	r1, [sp, #8]
 380:	mov	r1, r9
 384:	mov	r2, r7
 388:	mov	r3, r7
 38c:	bl	0 <fprintf>
 390:	ldrd	r2, [r4, #112]	; 0x70
 394:	ldrh	r1, [r4, #104]	; 0x68
 398:	ldr	r0, [r6, #204]	; 0xcc
 39c:	stm	sp, {r2, r3}
 3a0:	str	r1, [sp, #8]
 3a4:	mov	r1, sl
 3a8:	mov	r2, r7
 3ac:	mov	r3, r6
 3b0:	bl	0 <fprintf>
 3b4:	ldrd	r2, [r4, #112]	; 0x70
 3b8:	ldrh	r1, [r4, #104]	; 0x68
 3bc:	ldr	r0, [r6, #204]	; 0xcc
 3c0:	stm	sp, {r2, r3}
 3c4:	str	r1, [sp, #8]
 3c8:	mov	r1, r5
 3cc:	mov	r2, r7
 3d0:	bl	0 <fprintf>
 3d4:	ldr	r4, [r4]
 3d8:	cmp	r4, #0
 3dc:	bne	318 <__flatcc_fb_gen_c_verifier+0x318>
 3e0:	ldr	r0, [sp, #44]	; 0x2c
 3e4:	ldr	r0, [r0, #208]	; 0xd0
 3e8:	ldr	sl, [r0, #40]	; 0x28
 3ec:	cmp	sl, #0
 3f0:	beq	870 <__flatcc_fb_gen_c_verifier+0x870>
 3f4:	movw	r6, #0
 3f8:	movt	r6, #0
 3fc:	ldrh	r0, [sl, #8]
 400:	cmp	r0, #0
 404:	bne	864 <__flatcc_fb_gen_c_verifier+0x864>
 408:	mov	r0, r7
 40c:	mov	r1, #0
 410:	mov	r2, #220	; 0xdc
 414:	bl	0 <memset>
 418:	add	r4, sp, #48	; 0x30
 41c:	mov	r1, #0
 420:	mov	r2, #220	; 0xdc
 424:	mov	r0, r4
 428:	bl	0 <memset>
 42c:	ldr	r0, [sl, #12]
 430:	mov	r1, sl
 434:	mov	r2, r7
 438:	bl	0 <__flatcc_fb_scoped_symbol_name>
 43c:	ldr	r0, [r8]
 440:	movw	r1, #0
 444:	mov	r2, r7
 448:	movt	r1, #0
 44c:	bl	0 <fprintf>
 450:	ldr	r5, [sl, #20]
 454:	cmp	r5, #0
 458:	beq	7c4 <__flatcc_fb_gen_c_verifier+0x7c4>
 45c:	mov	r0, #1
 460:	ldrb	r1, [r5, #72]	; 0x48
 464:	tst	r1, #4
 468:	bne	798 <__flatcc_fb_gen_c_verifier+0x798>
 46c:	ldr	r3, [r8]
 470:	cmp	r0, #0
 474:	beq	488 <__flatcc_fb_gen_c_verifier+0x488>
 478:	movw	r0, #0
 47c:	mov	r1, #28
 480:	movt	r0, #0
 484:	b	494 <__flatcc_fb_gen_c_verifier+0x494>
 488:	movw	r0, #0
 48c:	mov	r1, #30
 490:	movt	r0, #0
 494:	mov	r2, #1
 498:	bl	0 <fwrite>
 49c:	ldrh	r0, [r5, #72]	; 0x48
 4a0:	ubfx	r9, r0, #8, #1
 4a4:	ldrh	r0, [r5, #24]
 4a8:	sub	r0, r0, #7
 4ac:	cmp	r0, #8
 4b0:	bhi	77c <__flatcc_fb_gen_c_verifier+0x77c>
 4b4:	add	r1, pc, #0
 4b8:	ldr	pc, [r1, r0, lsl #2]
 4bc:	.word	0x000004e0
 4c0:	.word	0x00000644
 4c4:	.word	0x00000548
 4c8:	.word	0x000005f0
 4cc:	.word	0x0000077c
 4d0:	.word	0x0000077c
 4d4:	.word	0x0000077c
 4d8:	.word	0x00000608
 4dc:	.word	0x00000560
 4e0:	ldr	r1, [r5, #104]	; 0x68
 4e4:	cmp	r1, #0
 4e8:	beq	67c <__flatcc_fb_gen_c_verifier+0x67c>
 4ec:	ldr	r0, [r1, #12]
 4f0:	mov	r2, r4
 4f4:	bl	0 <__flatcc_fb_scoped_symbol_name>
 4f8:	ldr	r1, [r5, #104]	; 0x68
 4fc:	ldr	r0, [r8]
 500:	ldr	r2, [r5, #96]	; 0x60
 504:	ldr	r3, [r5, #100]	; 0x64
 508:	ldrh	r1, [r1, #8]
 50c:	cmp	r1, #0
 510:	beq	764 <__flatcc_fb_gen_c_verifier+0x764>
 514:	ldr	r4, [r5, #88]	; 0x58
 518:	ldr	r1, [r5, #92]	; 0x5c
 51c:	ldrh	r6, [r5, #74]	; 0x4a
 520:	str	r9, [sp]
 524:	str	r1, [sp, #12]
 528:	movw	r1, #0
 52c:	str	r6, [sp, #16]
 530:	movw	r6, #0
 534:	str	r4, [sp, #8]
 538:	add	r4, sp, #48	; 0x30
 53c:	movt	r6, #0
 540:	movt	r1, #0
 544:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 548:	ldrd	r2, [r5, #96]	; 0x60
 54c:	ldr	r0, [r8]
 550:	movw	r1, #0
 554:	str	r9, [sp]
 558:	movt	r1, #0
 55c:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 560:	ldr	r1, [r5, #16]
 564:	mov	r2, r4
 568:	ldr	r0, [r1, #12]
 56c:	bl	0 <__flatcc_fb_scoped_symbol_name>
 570:	ldr	r0, [r5, #16]
 574:	ldrh	r0, [r0, #8]
 578:	cmp	r0, #4
 57c:	bhi	964 <__flatcc_fb_gen_c_verifier+0x964>
 580:	add	r1, pc, #0
 584:	ldr	pc, [r1, r0, lsl #2]
 588:	.word	0x000006f4
 58c:	.word	0x0000059c
 590:	.word	0x00000964
 594:	.word	0x0000059c
 598:	.word	0x00000710
 59c:	ldr	r0, [r5, #96]	; 0x60
 5a0:	mov	r6, sl
 5a4:	ldr	sl, [r5, #88]	; 0x58
 5a8:	ldr	r4, [r5, #92]	; 0x5c
 5ac:	mov	r1, #0
 5b0:	str	r0, [sp, #40]	; 0x28
 5b4:	ldr	r0, [r5, #100]	; 0x64
 5b8:	orrs	r3, sl, r4
 5bc:	mov	r2, sl
 5c0:	movweq	r2, #1
 5c4:	movne	r3, r4
 5c8:	str	r0, [sp, #36]	; 0x24
 5cc:	mvn	r0, #0
 5d0:	bl	0 <__aeabi_uldivmod>
 5d4:	ldr	r2, [r8]
 5d8:	ldrh	r3, [r5, #74]	; 0x4a
 5dc:	str	sl, [sp, #8]
 5e0:	mov	sl, r6
 5e4:	movw	r6, #0
 5e8:	str	r4, [sp, #12]
 5ec:	b	6c4 <__flatcc_fb_gen_c_verifier+0x6c4>
 5f0:	ldrd	r2, [r5, #96]	; 0x60
 5f4:	ldr	r0, [r8]
 5f8:	movw	r1, #0
 5fc:	str	r9, [sp]
 600:	movt	r1, #0
 604:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 608:	ldr	r1, [r5, #16]
 60c:	mov	r2, r4
 610:	ldr	r0, [r1, #12]
 614:	bl	0 <__flatcc_fb_scoped_symbol_name>
 618:	ldr	r0, [r5, #16]
 61c:	ldrh	r0, [r0, #8]
 620:	cmp	r0, #4
 624:	bhi	9b4 <__flatcc_fb_gen_c_verifier+0x9b4>
 628:	add	r1, pc, #0
 62c:	ldr	pc, [r1, r0, lsl #2]
 630:	.word	0x0000072c
 634:	.word	0x00000644
 638:	.word	0x000009b4
 63c:	.word	0x00000644
 640:	.word	0x00000748
 644:	ldr	r1, [r5, #88]	; 0x58
 648:	ldr	r6, [r5, #92]	; 0x5c
 64c:	ldrh	r4, [r5, #74]	; 0x4a
 650:	ldr	r0, [r8]
 654:	ldr	r2, [r5, #96]	; 0x60
 658:	ldr	r3, [r5, #100]	; 0x64
 65c:	stm	sp, {r1, r6}
 660:	movw	r6, #0
 664:	movw	r1, #0
 668:	str	r4, [sp, #8]
 66c:	add	r4, sp, #48	; 0x30
 670:	movt	r6, #0
 674:	movt	r1, #0
 678:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 67c:	ldr	r0, [r5, #96]	; 0x60
 680:	ldr	r4, [r5, #88]	; 0x58
 684:	ldr	r6, [r5, #92]	; 0x5c
 688:	mov	r1, #0
 68c:	str	r0, [sp, #40]	; 0x28
 690:	ldr	r0, [r5, #100]	; 0x64
 694:	orrs	r3, r4, r6
 698:	mov	r2, r4
 69c:	movweq	r2, #1
 6a0:	movne	r3, r6
 6a4:	str	r0, [sp, #36]	; 0x24
 6a8:	mvn	r0, #0
 6ac:	bl	0 <__aeabi_uldivmod>
 6b0:	ldr	r2, [r8]
 6b4:	ldrh	r3, [r5, #74]	; 0x4a
 6b8:	str	r6, [sp, #12]
 6bc:	movw	r6, #0
 6c0:	str	r4, [sp, #8]
 6c4:	add	r4, sp, #48	; 0x30
 6c8:	movt	r6, #0
 6cc:	str	r3, [sp, #16]
 6d0:	str	r0, [sp, #24]
 6d4:	mov	r0, r2
 6d8:	ldr	r2, [sp, #40]	; 0x28
 6dc:	ldr	r3, [sp, #36]	; 0x24
 6e0:	str	r1, [sp, #28]
 6e4:	movw	r1, #0
 6e8:	str	r9, [sp]
 6ec:	movt	r1, #0
 6f0:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 6f4:	ldrd	r2, [r5, #96]	; 0x60
 6f8:	ldr	r0, [r8]
 6fc:	movw	r1, #0
 700:	str	r9, [sp]
 704:	str	r4, [sp, #4]
 708:	movt	r1, #0
 70c:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 710:	ldrd	r2, [r5, #96]	; 0x60
 714:	ldr	r0, [r8]
 718:	movw	r1, #0
 71c:	str	r9, [sp]
 720:	str	r4, [sp, #4]
 724:	movt	r1, #0
 728:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 72c:	ldrd	r2, [r5, #96]	; 0x60
 730:	ldr	r0, [r8]
 734:	movw	r1, #0
 738:	str	r9, [sp]
 73c:	str	r4, [sp, #4]
 740:	movt	r1, #0
 744:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 748:	ldrd	r2, [r5, #96]	; 0x60
 74c:	ldr	r0, [r8]
 750:	movw	r1, #0
 754:	str	r9, [sp]
 758:	str	r4, [sp, #4]
 75c:	movt	r1, #0
 760:	b	778 <__flatcc_fb_gen_c_verifier+0x778>
 764:	ldrh	r1, [r5, #74]	; 0x4a
 768:	str	r9, [sp]
 76c:	stmib	sp, {r1, r4}
 770:	movw	r1, #0
 774:	movt	r1, #0
 778:	bl	0 <fprintf>
 77c:	ldr	r1, [r5, #4]
 780:	ldr	r0, [r8]
 784:	ldr	r3, [r1]
 788:	ldr	r2, [r1, #4]
 78c:	mov	r1, r6
 790:	bl	0 <fprintf>
 794:	mov	r0, #0
 798:	ldr	r5, [r5]
 79c:	cmp	r5, #0
 7a0:	bne	460 <__flatcc_fb_gen_c_verifier+0x460>
 7a4:	cmp	r0, #0
 7a8:	bne	7c4 <__flatcc_fb_gen_c_verifier+0x7c4>
 7ac:	ldr	r3, [r8]
 7b0:	movw	r0, #0
 7b4:	mov	r1, #15
 7b8:	mov	r2, #1
 7bc:	movt	r0, #0
 7c0:	bl	0 <fwrite>
 7c4:	ldr	r4, [sp, #44]	; 0x2c
 7c8:	movw	r0, #0
 7cc:	mov	r1, #29
 7d0:	mov	r2, #1
 7d4:	movt	r0, #0
 7d8:	ldr	r3, [r4, #204]	; 0xcc
 7dc:	bl	0 <fwrite>
 7e0:	ldr	r3, [r4, #204]	; 0xcc
 7e4:	movw	r0, #0
 7e8:	mov	r1, #3
 7ec:	mov	r2, #1
 7f0:	movt	r0, #0
 7f4:	bl	0 <fwrite>
 7f8:	ldr	r0, [r4, #204]	; 0xcc
 7fc:	movw	r1, #0
 800:	mov	r2, r7
 804:	mov	r3, r7
 808:	str	r7, [sp]
 80c:	movt	r1, #0
 810:	bl	0 <fprintf>
 814:	ldr	r0, [r4, #204]	; 0xcc
 818:	movw	r1, #0
 81c:	mov	r2, r7
 820:	mov	r3, r7
 824:	str	r7, [sp]
 828:	movt	r1, #0
 82c:	bl	0 <fprintf>
 830:	ldr	r0, [r4, #204]	; 0xcc
 834:	movw	r1, #0
 838:	mov	r2, r7
 83c:	mov	r3, r7
 840:	movt	r1, #0
 844:	bl	0 <fprintf>
 848:	ldr	r0, [r4, #204]	; 0xcc
 84c:	movw	r1, #0
 850:	mov	r2, r7
 854:	mov	r3, r4
 858:	str	r7, [sp]
 85c:	movt	r1, #0
 860:	bl	0 <fprintf>
 864:	ldr	sl, [sl]
 868:	cmp	sl, #0
 86c:	bne	3fc <__flatcc_fb_gen_c_verifier+0x3fc>
 870:	ldr	r0, [sp, #44]	; 0x2c
 874:	ldr	r0, [r0, #212]	; 0xd4
 878:	ldr	r0, [r0, #140]	; 0x8c
 87c:	cmp	r0, #0
 880:	beq	89c <__flatcc_fb_gen_c_verifier+0x89c>
 884:	ldr	r3, [r8]
 888:	movw	r0, #0
 88c:	mov	r1, #36	; 0x24
 890:	mov	r2, #1
 894:	movt	r0, #0
 898:	bl	0 <fwrite>
 89c:	ldr	r1, [sp, #44]	; 0x2c
 8a0:	ldr	r0, [r1, #204]	; 0xcc
 8a4:	ldr	r1, [r1, #208]	; 0xd0
 8a8:	ldr	r2, [r1, #164]	; 0xa4
 8ac:	movw	r1, #0
 8b0:	movt	r1, #0
 8b4:	bl	0 <fprintf>
 8b8:	mov	r0, #0
 8bc:	sub	sp, fp, #28
 8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8c4:	movw	r0, #0
 8c8:	movw	r1, #0
 8cc:	movw	r4, #0
 8d0:	mov	r3, #83	; 0x53
 8d4:	movt	r0, #0
 8d8:	movt	r1, #0
 8dc:	movt	r4, #0
 8e0:	ldr	r0, [r0]
 8e4:	str	r1, [sp]
 8e8:	movw	r1, #0
 8ec:	mov	r2, r4
 8f0:	movt	r1, #0
 8f4:	bl	0 <fprintf>
 8f8:	movw	r0, #0
 8fc:	movw	r3, #0
 900:	mov	r1, r4
 904:	mov	r2, #83	; 0x53
 908:	movt	r0, #0
 90c:	movt	r3, #0
 910:	bl	0 <__assert_fail>
 914:	movw	r0, #0
 918:	movw	r1, #0
 91c:	movw	r4, #0
 920:	mov	r3, #74	; 0x4a
 924:	movt	r0, #0
 928:	movt	r1, #0
 92c:	movt	r4, #0
 930:	ldr	r0, [r0]
 934:	str	r1, [sp]
 938:	movw	r1, #0
 93c:	mov	r2, r4
 940:	movt	r1, #0
 944:	bl	0 <fprintf>
 948:	movw	r0, #0
 94c:	movw	r3, #0
 950:	mov	r1, r4
 954:	mov	r2, #74	; 0x4a
 958:	movt	r0, #0
 95c:	movt	r3, #0
 960:	bl	0 <__assert_fail>
 964:	movw	r0, #0
 968:	movw	r1, #0
 96c:	movw	r4, #0
 970:	mov	r3, #202	; 0xca
 974:	movt	r0, #0
 978:	movt	r1, #0
 97c:	movt	r4, #0
 980:	ldr	r0, [r0]
 984:	str	r1, [sp]
 988:	movw	r1, #0
 98c:	mov	r2, r4
 990:	movt	r1, #0
 994:	bl	0 <fprintf>
 998:	movw	r0, #0
 99c:	movw	r3, #0
 9a0:	mov	r1, r4
 9a4:	mov	r2, #202	; 0xca
 9a8:	movt	r0, #0
 9ac:	movt	r3, #0
 9b0:	bl	0 <__assert_fail>
 9b4:	movw	r0, #0
 9b8:	movw	r1, #0
 9bc:	movw	r4, #0
 9c0:	mov	r3, #178	; 0xb2
 9c4:	movt	r0, #0
 9c8:	movt	r1, #0
 9cc:	movt	r4, #0
 9d0:	ldr	r0, [r0]
 9d4:	str	r1, [sp]
 9d8:	movw	r1, #0
 9dc:	mov	r2, r4
 9e0:	movt	r1, #0
 9e4:	bl	0 <fprintf>
 9e8:	movw	r0, #0
 9ec:	movw	r3, #0
 9f0:	mov	r1, r4
 9f4:	mov	r2, #178	; 0xb2
 9f8:	movt	r0, #0
 9fc:	movt	r3, #0
 a00:	bl	0 <__assert_fail>
