
../compcert-repos/prog2/CMakeFiles/2.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/02.c.o:     file format elf32-littlearm


Disassembly of section .text.startup:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	mov	r0, #12
   8:	sub	sp, sp, #100	; 0x64
   c:	bl	0 <malloc>
  10:	ldr	r4, [pc, #296]	; 140 <main+0x140>
  14:	ldr	sl, [pc, #296]	; 144 <main+0x144>
  18:	ldr	r7, [pc, #296]	; 148 <main+0x148>
  1c:	ldr	r6, [pc, #296]	; 14c <main+0x14c>
  20:	mov	r5, #3
  24:	sub	r3, r0, #4
  28:	mov	r9, r0
  2c:	str	r3, [sp, #4]
  30:	mov	r3, #0
  34:	str	r3, [r0]
  38:	str	r3, [r0, #4]
  3c:	str	r3, [r0, #8]
  40:	ldr	r8, [sp, #4]
  44:	mov	fp, #0
  48:	add	fp, fp, #1
  4c:	mov	r1, fp
  50:	mov	r0, sl
  54:	bl	0 <printf>
  58:	ldr	r3, [r8, #4]!
  5c:	subs	r0, r3, #0
  60:	ldreq	r0, [pc, #232]	; 150 <main+0x150>
  64:	bl	0 <puts>
  68:	cmp	fp, #3
  6c:	bne	48 <main+0x48>
  70:	mov	r1, r5
  74:	mov	r0, r7
  78:	bl	0 <printf>
  7c:	add	r1, sp, #12
  80:	mov	r0, r6
  84:	bl	0 <__isoc99_scanf>
  88:	ldr	r0, [r4]
  8c:	bl	0 <getc>
  90:	ldr	r8, [sp, #12]
  94:	cmp	r8, #3
  98:	bhi	70 <main+0x70>
  9c:	cmp	r8, #0
  a0:	beq	114 <main+0x114>
  a4:	ldr	r0, [pc, #168]	; 154 <main+0x154>
  a8:	bl	0 <printf>
  ac:	ldr	r2, [r4]
  b0:	mov	r1, #80	; 0x50
  b4:	add	r0, sp, #16
  b8:	bl	0 <fgets>
  bc:	add	r0, sp, #16
  c0:	bl	0 <strlen>
  c4:	add	r3, sp, #96	; 0x60
  c8:	mov	r2, #0
  cc:	ldr	r8, [sp, #12]
  d0:	sub	r8, r8, #-1073741823	; 0xc0000001
  d4:	add	r3, r3, r0
  d8:	add	r0, sp, #16
  dc:	strb	r2, [r3, #-81]	; 0xffffffaf
  e0:	bl	0 <strlen>
  e4:	add	fp, r0, #1
  e8:	mov	r1, fp
  ec:	ldr	r0, [r9, r8, lsl #2]
  f0:	bl	0 <realloc>
  f4:	ldr	r3, [sp, #12]
  f8:	mov	r2, fp
  fc:	sub	r3, r3, #-1073741823	; 0xc0000001
 100:	add	r1, sp, #16
 104:	str	r0, [r9, r8, lsl #2]
 108:	ldr	r0, [r9, r3, lsl #2]
 10c:	bl	0 <memcpy>
 110:	b	40 <main+0x40>
 114:	ldr	r0, [r9]
 118:	bl	0 <free>
 11c:	ldr	r0, [r9, #4]
 120:	bl	0 <free>
 124:	ldr	r0, [r9, #8]
 128:	bl	0 <free>
 12c:	mov	r0, r9
 130:	bl	0 <free>
 134:	mov	r0, r8
 138:	add	sp, sp, #100	; 0x64
 13c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...
 148:	.word	0x00000010
 14c:	.word	0x00000034
 150:	.word	0x00000008
 154:	.word	0x00000038
