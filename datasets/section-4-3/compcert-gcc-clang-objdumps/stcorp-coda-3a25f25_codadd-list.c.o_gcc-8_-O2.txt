
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-list.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_type>:
   0:	cmp	r1, #32
   4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   8:	strd	r6, [sp, #8]
   c:	strd	r8, [sp, #16]
  10:	strd	sl, [sp, #24]
  14:	mov	sl, r1
  18:	str	lr, [sp, #32]
  1c:	sub	sp, sp, #68	; 0x44
  20:	beq	550 <print_type+0x550>
  24:	movw	fp, #0
  28:	movt	fp, #0
  2c:	add	r1, sp, #20
  30:	mov	r9, r0
  34:	str	r0, [fp, sl, lsl #2]
  38:	bl	0 <coda_type_get_class>
  3c:	ldr	r3, [sp, #20]
  40:	cmp	r3, #1
  44:	bls	3f4 <print_type+0x3f4>
  48:	cmp	r3, #6
  4c:	beq	3dc <print_type+0x3dc>
  50:	mov	r0, #47	; 0x2f
  54:	bl	0 <putchar>
  58:	cmp	sl, #0
  5c:	ble	190 <print_type+0x190>
  60:	movw	r3, #0
  64:	movt	r3, #0
  68:	movw	r8, #0
  6c:	movt	r8, #0
  70:	str	r3, [sp]
  74:	movw	r3, #0
  78:	movt	r3, #0
  7c:	mov	r5, #0
  80:	str	r3, [sp, #4]
  84:	str	fp, [sp, #8]
  88:	str	r9, [sp, #12]
  8c:	b	d0 <print_type+0xd0>
  90:	mov	r0, r7
  94:	add	r2, sp, #32
  98:	bl	0 <coda_type_get_record_field_name>
  9c:	cmp	r5, #0
  a0:	beq	b8 <print_type+0xb8>
  a4:	ldr	r3, [r8, #-4]
  a8:	cmn	r3, #1
  ac:	beq	b8 <print_type+0xb8>
  b0:	mov	r0, #47	; 0x2f
  b4:	bl	0 <putchar>
  b8:	ldr	r0, [sp]
  bc:	ldr	r1, [sp, #32]
  c0:	bl	0 <printf>
  c4:	add	r5, r5, #1
  c8:	cmp	r5, sl
  cc:	beq	18c <print_type+0x18c>
  d0:	ldr	r1, [r8, #4]!
  d4:	cmn	r1, #1
  d8:	beq	234 <print_type+0x234>
  dc:	ldr	r3, [sp, #8]
  e0:	ldr	r7, [r3, r5, lsl #2]
  e4:	ldr	r3, [r7, #8]
  e8:	cmp	r3, #0
  ec:	beq	90 <print_type+0x90>
  f0:	cmp	r3, #1
  f4:	bne	530 <print_type+0x530>
  f8:	add	r4, sp, #28
  fc:	add	r2, sp, #32
 100:	mov	r1, r4
 104:	mov	r0, r7
 108:	bl	0 <coda_type_get_array_dim>
 10c:	mov	r0, #91	; 0x5b
 110:	bl	0 <putchar>
 114:	ldr	r3, [sp, #28]
 118:	cmp	r3, #0
 11c:	ble	178 <print_type+0x178>
 120:	ldr	r1, [r4, #4]!
 124:	movw	fp, #0
 128:	movt	fp, #0
 12c:	movw	r9, #0
 130:	movt	r9, #0
 134:	mov	r6, #0
 138:	cmp	r1, #0
 13c:	bge	254 <print_type+0x254>
 140:	ldr	r3, [sp, #4]
 144:	ldr	r3, [r3]
 148:	cmp	r3, #0
 14c:	beq	260 <print_type+0x260>
 150:	add	r3, r7, #84	; 0x54
 154:	ldr	r0, [r3, r6, lsl #2]
 158:	cmp	r0, #0
 15c:	beq	260 <print_type+0x260>
 160:	mov	r1, r9
 164:	bl	0 <coda_expression_print>
 168:	ldr	r3, [sp, #28]
 16c:	add	r6, r6, #1
 170:	cmp	r6, r3
 174:	blt	240 <print_type+0x240>
 178:	mov	r0, #93	; 0x5d
 17c:	add	r5, r5, #1
 180:	bl	0 <putchar>
 184:	cmp	r5, sl
 188:	bne	d0 <print_type+0xd0>
 18c:	ldr	r9, [sp, #12]
 190:	movw	r3, #0
 194:	movt	r3, #0
 198:	ldr	r3, [r3]
 19c:	cmp	r3, #0
 1a0:	bne	3a4 <print_type+0x3a4>
 1a4:	movw	r3, #0
 1a8:	movt	r3, #0
 1ac:	ldr	r3, [r3]
 1b0:	cmp	r3, #0
 1b4:	bne	36c <print_type+0x36c>
 1b8:	movw	r3, #0
 1bc:	movt	r3, #0
 1c0:	ldr	r3, [r3]
 1c4:	cmp	r3, #0
 1c8:	bne	304 <print_type+0x304>
 1cc:	movw	r3, #0
 1d0:	movt	r3, #0
 1d4:	ldr	r3, [r3]
 1d8:	cmp	r3, #0
 1dc:	bne	29c <print_type+0x29c>
 1e0:	mov	r0, #10
 1e4:	bl	0 <putchar>
 1e8:	movw	r3, #0
 1ec:	movt	r3, #0
 1f0:	ldr	r3, [r3]
 1f4:	cmp	r3, #0
 1f8:	bne	404 <print_type+0x404>
 1fc:	ldr	r4, [sp, #20]
 200:	cmp	r4, #1
 204:	beq	454 <print_type+0x454>
 208:	cmp	r4, #0
 20c:	beq	484 <print_type+0x484>
 210:	cmp	r4, #6
 214:	beq	26c <print_type+0x26c>
 218:	add	sp, sp, #68	; 0x44
 21c:	ldrd	r4, [sp]
 220:	ldrd	r6, [sp, #8]
 224:	ldrd	r8, [sp, #16]
 228:	ldrd	sl, [sp, #24]
 22c:	add	sp, sp, #32
 230:	pop	{pc}		; (ldr pc, [sp], #4)
 234:	mov	r0, #64	; 0x40
 238:	bl	0 <putchar>
 23c:	b	c4 <print_type+0xc4>
 240:	mov	r0, #44	; 0x2c
 244:	bl	0 <putchar>
 248:	ldr	r1, [r4, #4]!
 24c:	cmp	r1, #0
 250:	blt	140 <print_type+0x140>
 254:	mov	r0, fp
 258:	bl	0 <printf>
 25c:	b	168 <print_type+0x168>
 260:	mov	r0, #63	; 0x3f
 264:	bl	0 <putchar>
 268:	b	168 <print_type+0x168>
 26c:	movw	r3, #0
 270:	movt	r3, #0
 274:	ldr	r3, [r3]
 278:	cmp	r3, #0
 27c:	bne	218 <print_type+0x218>
 280:	add	r1, sp, #32
 284:	mov	r0, r9
 288:	bl	0 <coda_type_get_special_base_type>
 28c:	mov	r1, sl
 290:	ldr	r0, [sp, #32]
 294:	bl	0 <print_type>
 298:	b	218 <print_type+0x218>
 29c:	movw	r3, #0
 2a0:	movt	r3, #0
 2a4:	movw	r0, #0
 2a8:	movt	r0, #0
 2ac:	ldr	r1, [r3]
 2b0:	bl	0 <printf>
 2b4:	add	r1, sp, #32
 2b8:	mov	r0, r9
 2bc:	bl	0 <coda_type_get_description>
 2c0:	ldr	r1, [sp, #32]
 2c4:	cmp	r1, #0
 2c8:	beq	1e0 <print_type+0x1e0>
 2cc:	movw	r4, #0
 2d0:	movt	r4, #0
 2d4:	ldr	r3, [r4]
 2d8:	cmp	r3, #0
 2dc:	bne	510 <print_type+0x510>
 2e0:	movw	r0, #0
 2e4:	movt	r0, #0
 2e8:	bl	0 <printf>
 2ec:	ldr	r3, [r4]
 2f0:	cmp	r3, #0
 2f4:	beq	1e0 <print_type+0x1e0>
 2f8:	mov	r0, #34	; 0x22
 2fc:	bl	0 <putchar>
 300:	b	1e0 <print_type+0x1e0>
 304:	movw	r3, #0
 308:	movt	r3, #0
 30c:	movw	r0, #0
 310:	movt	r0, #0
 314:	ldr	r1, [r3]
 318:	bl	0 <printf>
 31c:	add	r1, sp, #32
 320:	mov	r0, r9
 324:	bl	0 <coda_type_get_unit>
 328:	ldr	r1, [sp, #32]
 32c:	cmp	r1, #0
 330:	beq	1cc <print_type+0x1cc>
 334:	movw	r4, #0
 338:	movt	r4, #0
 33c:	ldr	r3, [r4]
 340:	cmp	r3, #0
 344:	bne	520 <print_type+0x520>
 348:	movw	r0, #0
 34c:	movt	r0, #0
 350:	bl	0 <printf>
 354:	ldr	r3, [r4]
 358:	cmp	r3, #0
 35c:	beq	1cc <print_type+0x1cc>
 360:	mov	r0, #34	; 0x22
 364:	bl	0 <putchar>
 368:	b	1cc <print_type+0x1cc>
 36c:	add	r1, sp, #32
 370:	mov	r0, r9
 374:	bl	0 <coda_type_get_format>
 378:	movw	r3, #0
 37c:	movt	r3, #0
 380:	ldr	r0, [sp, #32]
 384:	ldr	r4, [r3]
 388:	bl	0 <coda_type_get_format_name>
 38c:	mov	r2, r0
 390:	movw	r0, #0
 394:	movt	r0, #0
 398:	mov	r1, r4
 39c:	bl	0 <printf>
 3a0:	b	1b8 <print_type+0x1b8>
 3a4:	add	r1, sp, #32
 3a8:	mov	r0, r9
 3ac:	bl	0 <coda_type_get_read_type>
 3b0:	movw	r3, #0
 3b4:	movt	r3, #0
 3b8:	ldr	r0, [sp, #32]
 3bc:	ldr	r4, [r3]
 3c0:	bl	0 <coda_type_get_native_type_name>
 3c4:	mov	r2, r0
 3c8:	movw	r0, #0
 3cc:	movt	r0, #0
 3d0:	mov	r1, r4
 3d4:	bl	0 <printf>
 3d8:	b	1a4 <print_type+0x1a4>
 3dc:	movw	r3, #0
 3e0:	movt	r3, #0
 3e4:	ldr	r3, [r3]
 3e8:	cmp	r3, #0
 3ec:	beq	1e8 <print_type+0x1e8>
 3f0:	b	50 <print_type+0x50>
 3f4:	movw	r3, #0
 3f8:	movt	r3, #0
 3fc:	ldr	r3, [r3]
 400:	b	3e8 <print_type+0x3e8>
 404:	add	r1, sp, #28
 408:	mov	r0, r9
 40c:	bl	0 <coda_type_has_attributes>
 410:	ldr	r3, [sp, #28]
 414:	cmp	r3, #0
 418:	beq	1fc <print_type+0x1fc>
 41c:	add	r1, sp, #32
 420:	mov	r0, r9
 424:	bl	0 <coda_type_get_attributes>
 428:	add	r3, sl, #1
 42c:	mvn	ip, #0
 430:	ldr	r0, [sp, #32]
 434:	movw	r2, #0
 438:	movt	r2, #0
 43c:	mov	r1, r3
 440:	str	ip, [r2, r3, lsl #2]
 444:	bl	0 <print_type>
 448:	ldr	r4, [sp, #20]
 44c:	cmp	r4, #1
 450:	bne	208 <print_type+0x208>
 454:	add	r1, sp, #32
 458:	mov	r0, r9
 45c:	bl	0 <coda_type_get_array_base_type>
 460:	add	sl, sl, #1
 464:	mov	ip, #0
 468:	ldr	r0, [sp, #32]
 46c:	movw	r3, #0
 470:	movt	r3, #0
 474:	mov	r1, sl
 478:	str	ip, [r3, sl, lsl #2]
 47c:	bl	0 <print_type>
 480:	b	218 <print_type+0x218>
 484:	add	r1, sp, #24
 488:	mov	r0, r9
 48c:	bl	0 <coda_type_get_num_record_fields>
 490:	ldr	r3, [sp, #24]
 494:	cmp	r3, #0
 498:	ble	218 <print_type+0x218>
 49c:	movw	r6, #0
 4a0:	movt	r6, #0
 4a4:	movw	r7, #0
 4a8:	movt	r7, #0
 4ac:	add	sl, sl, #1
 4b0:	add	r8, sp, #28
 4b4:	mov	r2, r8
 4b8:	mov	r1, r4
 4bc:	mov	r0, r9
 4c0:	bl	0 <coda_type_get_record_field_type>
 4c4:	ldr	r3, [r6]
 4c8:	cmp	r3, #0
 4cc:	bne	4ec <print_type+0x4ec>
 4d0:	add	r2, sp, #32
 4d4:	mov	r1, r4
 4d8:	mov	r0, r9
 4dc:	bl	0 <coda_type_get_record_field_hidden_status>
 4e0:	ldr	r3, [sp, #32]
 4e4:	cmp	r3, #0
 4e8:	bne	4fc <print_type+0x4fc>
 4ec:	mov	r1, sl
 4f0:	ldr	r0, [sp, #28]
 4f4:	str	r4, [r7, sl, lsl #2]
 4f8:	bl	0 <print_type>
 4fc:	ldr	r3, [sp, #24]
 500:	add	r4, r4, #1
 504:	cmp	r3, r4
 508:	bgt	4b4 <print_type+0x4b4>
 50c:	b	218 <print_type+0x218>
 510:	mov	r0, #34	; 0x22
 514:	bl	0 <putchar>
 518:	ldr	r1, [sp, #32]
 51c:	b	2e0 <print_type+0x2e0>
 520:	mov	r0, #34	; 0x22
 524:	bl	0 <putchar>
 528:	ldr	r1, [sp, #32]
 52c:	b	348 <print_type+0x348>
 530:	movw	r3, #0
 534:	movt	r3, #0
 538:	movw	r1, #0
 53c:	movt	r1, #0
 540:	movw	r0, #0
 544:	movt	r0, #0
 548:	mov	r2, #125	; 0x7d
 54c:	bl	0 <__assert_fail>
 550:	mov	r0, #10
 554:	bl	0 <putchar>
 558:	movw	r3, #0
 55c:	movt	r3, #0
 560:	movw	r1, #0
 564:	movt	r1, #0
 568:	ldr	r0, [r3]
 56c:	mov	r2, sl
 570:	mov	r3, sl
 574:	bl	0 <fprintf>
 578:	mov	r0, #1
 57c:	bl	0 <exit>

00000580 <generate_list>:
 580:	strd	r4, [sp, #-36]!	; 0xffffffdc
 584:	subs	r4, r2, #0
 588:	strd	r6, [sp, #8]
 58c:	strd	r8, [sp, #16]
 590:	strd	sl, [sp, #24]
 594:	str	lr, [sp, #32]
 598:	sub	sp, sp, #44	; 0x2c
 59c:	strd	r0, [sp, #8]
 5a0:	blt	61c <generate_list+0x9c>
 5a4:	bl	0 <coda_data_dictionary_get_product_class>
 5a8:	cmp	r0, #0
 5ac:	beq	828 <generate_list+0x2a8>
 5b0:	ldr	r1, [sp, #12]
 5b4:	bl	0 <coda_product_class_get_product_type>
 5b8:	cmp	r0, #0
 5bc:	beq	880 <generate_list+0x300>
 5c0:	mov	r1, r4
 5c4:	bl	0 <coda_product_type_get_product_definition_by_version>
 5c8:	cmp	r0, #0
 5cc:	beq	864 <generate_list+0x2e4>
 5d0:	ldr	r0, [r0, #28]
 5d4:	cmp	r0, #0
 5d8:	beq	600 <generate_list+0x80>
 5dc:	mov	r1, #0
 5e0:	add	sp, sp, #44	; 0x2c
 5e4:	ldrd	r4, [sp]
 5e8:	ldrd	r6, [sp, #8]
 5ec:	ldrd	r8, [sp, #16]
 5f0:	ldrd	sl, [sp, #24]
 5f4:	ldr	lr, [sp, #32]
 5f8:	add	sp, sp, #36	; 0x24
 5fc:	b	0 <print_type>
 600:	add	sp, sp, #44	; 0x2c
 604:	ldrd	r4, [sp]
 608:	ldrd	r6, [sp, #8]
 60c:	ldrd	r8, [sp, #16]
 610:	ldrd	sl, [sp, #24]
 614:	add	sp, sp, #32
 618:	pop	{pc}		; (ldr pc, [sp], #4)
 61c:	ldr	r3, [pc, #632]	; 89c <generate_list+0x31c>
 620:	mrc	15, 0, r2, cr13, cr0, {3}
 624:	str	r2, [sp, #24]
 628:	ldr	r3, [pc, r3]
 62c:	ldr	r3, [r2, r3]
 630:	ldr	r2, [r3]
 634:	cmp	r2, #0
 638:	ble	600 <generate_list+0x80>
 63c:	movw	r2, #0
 640:	movt	r2, #0
 644:	movw	sl, #0
 648:	movt	sl, #0
 64c:	str	r2, [sp, #28]
 650:	movw	r2, #0
 654:	movt	r2, #0
 658:	mov	fp, #0
 65c:	str	r2, [sp, #32]
 660:	movw	r2, #0
 664:	movt	r2, #0
 668:	str	r2, [sp, #36]	; 0x24
 66c:	b	690 <generate_list+0x110>
 670:	ldr	r3, [pc, #552]	; 8a0 <generate_list+0x320>
 674:	add	fp, fp, #1
 678:	ldr	r2, [sp, #24]
 67c:	ldr	r3, [pc, r3]
 680:	ldr	r3, [r2, r3]
 684:	ldr	r2, [r3]
 688:	cmp	fp, r2
 68c:	bge	600 <generate_list+0x80>
 690:	ldr	r2, [sp, #8]
 694:	ldr	r3, [r3, #4]
 698:	cmp	r2, #0
 69c:	ldr	r4, [r3, fp, lsl #2]
 6a0:	beq	6b8 <generate_list+0x138>
 6a4:	ldr	r0, [r4]
 6a8:	ldr	r1, [sp, #8]
 6ac:	bl	0 <strcmp>
 6b0:	cmp	r0, #0
 6b4:	bne	670 <generate_list+0xf0>
 6b8:	ldr	r7, [r4, #28]
 6bc:	cmp	r7, #0
 6c0:	movgt	r6, #0
 6c4:	strgt	fp, [sp, #16]
 6c8:	bgt	6dc <generate_list+0x15c>
 6cc:	b	670 <generate_list+0xf0>
 6d0:	add	r6, r6, #1
 6d4:	cmp	r6, r7
 6d8:	bge	810 <generate_list+0x290>
 6dc:	ldr	r1, [sp, #12]
 6e0:	ldr	r3, [r4, #32]
 6e4:	cmp	r1, #0
 6e8:	ldr	r5, [r3, r6, lsl #2]
 6ec:	beq	700 <generate_list+0x180>
 6f0:	ldr	r0, [r5]
 6f4:	bl	0 <strcmp>
 6f8:	cmp	r0, #0
 6fc:	bne	6d0 <generate_list+0x150>
 700:	ldr	r3, [r5, #8]
 704:	cmp	r3, #0
 708:	ble	6d0 <generate_list+0x150>
 70c:	movw	fp, #0
 710:	movt	fp, #0
 714:	str	r6, [sp, #20]
 718:	movw	r8, #0
 71c:	movt	r8, #0
 720:	mov	r7, #0
 724:	b	750 <generate_list+0x1d0>
 728:	ldr	r3, [sp, #32]
 72c:	ldr	r3, [r3]
 730:	cmp	r3, #0
 734:	bne	7b0 <generate_list+0x230>
 738:	mov	r0, #10
 73c:	add	r7, r7, #1
 740:	bl	0 <putchar>
 744:	ldr	r3, [r5, #8]
 748:	cmp	r7, r3
 74c:	bge	7fc <generate_list+0x27c>
 750:	ldr	r3, [r5]
 754:	ldr	r2, [r5, #12]
 758:	ldr	r1, [r4]
 75c:	ldr	r0, [sp, #36]	; 0x24
 760:	ldr	r9, [r2, r7, lsl #2]
 764:	ldr	r2, [sl]
 768:	ldr	ip, [r9, #4]
 76c:	stm	sp, {r2, ip}
 770:	bl	0 <printf>
 774:	ldr	r3, [sp, #28]
 778:	ldr	r3, [r3]
 77c:	cmp	r3, #0
 780:	beq	728 <generate_list+0x1a8>
 784:	ldr	r6, [sl]
 788:	ldr	r0, [r9]
 78c:	bl	0 <coda_type_get_format_name>
 790:	mov	r2, r0
 794:	mov	r0, fp
 798:	mov	r1, r6
 79c:	bl	0 <printf>
 7a0:	ldr	r3, [sp, #32]
 7a4:	ldr	r3, [r3]
 7a8:	cmp	r3, #0
 7ac:	beq	738 <generate_list+0x1b8>
 7b0:	mov	r0, r8
 7b4:	ldr	r1, [sl]
 7b8:	bl	0 <printf>
 7bc:	ldr	r1, [r9, #12]
 7c0:	cmp	r1, #0
 7c4:	beq	738 <generate_list+0x1b8>
 7c8:	movw	r6, #0
 7cc:	movt	r6, #0
 7d0:	ldr	r2, [r6]
 7d4:	cmp	r2, #0
 7d8:	bne	818 <generate_list+0x298>
 7dc:	mov	r0, r8
 7e0:	bl	0 <printf>
 7e4:	ldr	r3, [r6]
 7e8:	cmp	r3, #0
 7ec:	beq	738 <generate_list+0x1b8>
 7f0:	mov	r0, #34	; 0x22
 7f4:	bl	0 <putchar>
 7f8:	b	738 <generate_list+0x1b8>
 7fc:	ldr	r6, [sp, #20]
 800:	ldr	r7, [r4, #28]
 804:	add	r6, r6, #1
 808:	cmp	r6, r7
 80c:	blt	6dc <generate_list+0x15c>
 810:	ldr	fp, [sp, #16]
 814:	b	670 <generate_list+0xf0>
 818:	mov	r0, #34	; 0x22
 81c:	bl	0 <putchar>
 820:	ldr	r1, [r9, #12]
 824:	b	7dc <generate_list+0x25c>
 828:	ldr	r3, [pc, #116]	; 8a4 <generate_list+0x324>
 82c:	movw	r1, #0
 830:	movt	r1, #0
 834:	mrc	15, 0, r2, cr13, cr0, {3}
 838:	ldr	r4, [r1]
 83c:	ldr	r3, [pc, r3]
 840:	ldr	r0, [r2, r3]
 844:	bl	0 <coda_errno_to_string>
 848:	mov	r2, r0
 84c:	movw	r1, #0
 850:	movt	r1, #0
 854:	mov	r0, r4
 858:	bl	0 <fprintf>
 85c:	mov	r0, #1
 860:	bl	0 <exit>
 864:	ldr	r3, [pc, #60]	; 8a8 <generate_list+0x328>
 868:	movw	r1, #0
 86c:	movt	r1, #0
 870:	mrc	15, 0, r2, cr13, cr0, {3}
 874:	ldr	r4, [r1]
 878:	ldr	r3, [pc, r3]
 87c:	b	840 <generate_list+0x2c0>
 880:	ldr	r3, [pc, #36]	; 8ac <generate_list+0x32c>
 884:	movw	r1, #0
 888:	movt	r1, #0
 88c:	mrc	15, 0, r2, cr13, cr0, {3}
 890:	ldr	r4, [r1]
 894:	ldr	r3, [pc, r3]
 898:	b	840 <generate_list+0x2c0>
 89c:	.word	0x0000026c
 8a0:	.word	0x0000021c
 8a4:	.word	0x00000060
 8a8:	.word	0x00000028
 8ac:	.word	0x00000010
