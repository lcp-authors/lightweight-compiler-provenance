
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/fileio.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_copy_path_n>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #16
   c:	str	r0, [fp, #-4]
  10:	str	r1, [sp, #8]
  14:	ldr	r0, [fp, #-4]
  18:	ldr	r1, [sp, #8]
  1c:	bl	70 <pstrnlen>
  20:	str	r0, [sp, #4]
  24:	ldr	r0, [sp, #4]
  28:	add	r0, r0, #1
  2c:	bl	0 <malloc>
  30:	str	r0, [sp]
  34:	movw	r1, #0
  38:	cmp	r0, r1
  3c:	beq	64 <__flatcc_fb_copy_path_n+0x64>
  40:	ldr	r0, [sp]
  44:	ldr	r1, [fp, #-4]
  48:	ldr	r2, [sp, #4]
  4c:	bl	0 <memcpy>
  50:	ldr	r0, [sp]
  54:	ldr	r1, [sp, #4]
  58:	add	r0, r0, r1
  5c:	movw	r1, #0
  60:	strb	r1, [r0]
  64:	ldr	r0, [sp]
  68:	mov	sp, fp
  6c:	pop	{fp, pc}

00000070 <pstrnlen>:
  70:	push	{fp, lr}
  74:	mov	fp, sp
  78:	sub	sp, sp, #16
  7c:	str	r0, [fp, #-4]
  80:	str	r1, [sp, #8]
  84:	ldr	r0, [fp, #-4]
  88:	ldr	r2, [sp, #8]
  8c:	mov	r1, #0
  90:	bl	0 <memchr>
  94:	str	r0, [sp, #4]
  98:	ldr	r0, [sp, #4]
  9c:	movw	r1, #0
  a0:	cmp	r0, r1
  a4:	beq	bc <pstrnlen+0x4c>
  a8:	ldr	r0, [sp, #4]
  ac:	ldr	r1, [fp, #-4]
  b0:	sub	r0, r0, r1
  b4:	str	r0, [sp]
  b8:	b	c4 <pstrnlen+0x54>
  bc:	ldr	r0, [sp, #8]
  c0:	str	r0, [sp]
  c4:	ldr	r0, [sp]
  c8:	mov	sp, fp
  cc:	pop	{fp, pc}

000000d0 <__flatcc_fb_copy_path>:
  d0:	push	{fp, lr}
  d4:	mov	fp, sp
  d8:	sub	sp, sp, #16
  dc:	str	r0, [fp, #-4]
  e0:	ldr	r0, [fp, #-4]
  e4:	bl	0 <strlen>
  e8:	str	r0, [sp, #8]
  ec:	ldr	r0, [sp, #8]
  f0:	add	r0, r0, #1
  f4:	bl	0 <malloc>
  f8:	str	r0, [sp, #4]
  fc:	movw	r1, #0
 100:	cmp	r0, r1
 104:	beq	12c <__flatcc_fb_copy_path+0x5c>
 108:	ldr	r0, [sp, #4]
 10c:	ldr	r1, [fp, #-4]
 110:	ldr	r2, [sp, #8]
 114:	bl	0 <memcpy>
 118:	ldr	r0, [sp, #4]
 11c:	ldr	r1, [sp, #8]
 120:	add	r0, r0, r1
 124:	movw	r1, #0
 128:	strb	r1, [r0]
 12c:	ldr	r0, [sp, #4]
 130:	mov	sp, fp
 134:	pop	{fp, pc}

00000138 <__flatcc_fb_chomp>:
 138:	push	{fp, lr}
 13c:	mov	fp, sp
 140:	sub	sp, sp, #24
 144:	str	r0, [fp, #-4]
 148:	str	r1, [fp, #-8]
 14c:	str	r2, [sp, #12]
 150:	ldr	r0, [sp, #12]
 154:	movw	r1, #0
 158:	cmp	r0, r1
 15c:	beq	170 <__flatcc_fb_chomp+0x38>
 160:	ldr	r0, [sp, #12]
 164:	bl	0 <strlen>
 168:	str	r0, [sp, #4]
 16c:	b	17c <__flatcc_fb_chomp+0x44>
 170:	movw	r0, #0
 174:	str	r0, [sp, #4]
 178:	b	17c <__flatcc_fb_chomp+0x44>
 17c:	ldr	r0, [sp, #4]
 180:	str	r0, [sp, #8]
 184:	ldr	r0, [fp, #-8]
 188:	ldr	r1, [sp, #8]
 18c:	cmp	r0, r1
 190:	bls	1d8 <__flatcc_fb_chomp+0xa0>
 194:	ldr	r0, [fp, #-4]
 198:	ldr	r1, [fp, #-8]
 19c:	add	r0, r0, r1
 1a0:	ldr	r1, [sp, #8]
 1a4:	movw	r2, #0
 1a8:	sub	r1, r2, r1
 1ac:	add	r0, r0, r1
 1b0:	ldr	r1, [sp, #12]
 1b4:	ldr	r2, [sp, #8]
 1b8:	bl	0 <strncmp>
 1bc:	movw	r1, #0
 1c0:	cmp	r1, r0
 1c4:	bne	1d8 <__flatcc_fb_chomp+0xa0>
 1c8:	ldr	r0, [sp, #8]
 1cc:	ldr	r1, [fp, #-8]
 1d0:	sub	r0, r1, r0
 1d4:	str	r0, [fp, #-8]
 1d8:	ldr	r0, [fp, #-8]
 1dc:	mov	sp, fp
 1e0:	pop	{fp, pc}

000001e4 <__flatcc_fb_create_join_path_n>:
 1e4:	push	{fp, lr}
 1e8:	mov	fp, sp
 1ec:	sub	sp, sp, #40	; 0x28
 1f0:	ldr	ip, [fp, #12]
 1f4:	ldr	lr, [fp, #8]
 1f8:	str	r0, [fp, #-8]
 1fc:	str	r1, [fp, #-12]
 200:	str	r2, [fp, #-16]
 204:	str	r3, [sp, #20]
 208:	ldr	r0, [fp, #8]
 20c:	movw	r1, #0
 210:	cmp	r0, r1
 214:	beq	228 <__flatcc_fb_create_join_path_n+0x44>
 218:	ldr	r0, [fp, #8]
 21c:	bl	0 <strlen>
 220:	str	r0, [sp, #4]
 224:	b	234 <__flatcc_fb_create_join_path_n+0x50>
 228:	movw	r0, #0
 22c:	str	r0, [sp, #4]
 230:	b	234 <__flatcc_fb_create_join_path_n+0x50>
 234:	ldr	r0, [sp, #4]
 238:	str	r0, [sp, #12]
 23c:	ldr	r0, [fp, #-8]
 240:	movw	r1, #0
 244:	cmp	r0, r1
 248:	beq	294 <__flatcc_fb_create_join_path_n+0xb0>
 24c:	ldr	r0, [sp, #20]
 250:	cmp	r0, #0
 254:	bls	278 <__flatcc_fb_create_join_path_n+0x94>
 258:	ldr	r0, [fp, #-16]
 25c:	ldrb	r0, [r0]
 260:	cmp	r0, #47	; 0x2f
 264:	beq	294 <__flatcc_fb_create_join_path_n+0xb0>
 268:	ldr	r0, [fp, #-16]
 26c:	ldrb	r0, [r0]
 270:	cmp	r0, #92	; 0x5c
 274:	beq	294 <__flatcc_fb_create_join_path_n+0xb0>
 278:	ldr	r0, [sp, #20]
 27c:	cmp	r0, #1
 280:	bls	29c <__flatcc_fb_create_join_path_n+0xb8>
 284:	ldr	r0, [fp, #-16]
 288:	ldrb	r0, [r0, #1]
 28c:	cmp	r0, #58	; 0x3a
 290:	bne	29c <__flatcc_fb_create_join_path_n+0xb8>
 294:	movw	r0, #0
 298:	str	r0, [fp, #-12]
 29c:	ldr	r0, [fp, #12]
 2a0:	cmp	r0, #0
 2a4:	beq	2f4 <__flatcc_fb_create_join_path_n+0x110>
 2a8:	ldr	r0, [fp, #-12]
 2ac:	cmp	r0, #0
 2b0:	beq	2ec <__flatcc_fb_create_join_path_n+0x108>
 2b4:	ldr	r0, [fp, #-8]
 2b8:	ldr	r1, [fp, #-12]
 2bc:	sub	r1, r1, #1
 2c0:	add	r0, r0, r1
 2c4:	ldrb	r0, [r0]
 2c8:	cmp	r0, #47	; 0x2f
 2cc:	beq	2ec <__flatcc_fb_create_join_path_n+0x108>
 2d0:	ldr	r0, [fp, #-8]
 2d4:	ldr	r1, [fp, #-12]
 2d8:	sub	r1, r1, #1
 2dc:	add	r0, r0, r1
 2e0:	ldrb	r0, [r0]
 2e4:	cmp	r0, #92	; 0x5c
 2e8:	bne	2f4 <__flatcc_fb_create_join_path_n+0x110>
 2ec:	movw	r0, #0
 2f0:	str	r0, [fp, #12]
 2f4:	ldr	r0, [fp, #-12]
 2f8:	ldr	r1, [fp, #12]
 2fc:	add	r0, r0, r1
 300:	ldr	r1, [sp, #20]
 304:	add	r0, r0, r1
 308:	ldr	r1, [sp, #12]
 30c:	add	r0, r0, r1
 310:	add	r0, r0, #1
 314:	bl	0 <malloc>
 318:	str	r0, [sp, #16]
 31c:	ldr	r0, [sp, #16]
 320:	movw	r1, #0
 324:	cmp	r0, r1
 328:	bne	338 <__flatcc_fb_create_join_path_n+0x154>
 32c:	movw	r0, #0
 330:	str	r0, [fp, #-4]
 334:	b	3f4 <__flatcc_fb_create_join_path_n+0x210>
 338:	movw	r0, #0
 33c:	str	r0, [sp, #8]
 340:	ldr	r0, [sp, #16]
 344:	ldr	r1, [fp, #-8]
 348:	ldr	r2, [fp, #-12]
 34c:	bl	0 <memcpy>
 350:	ldr	r0, [fp, #-12]
 354:	ldr	r1, [sp, #8]
 358:	add	r0, r1, r0
 35c:	str	r0, [sp, #8]
 360:	ldr	r0, [fp, #12]
 364:	cmp	r0, #0
 368:	beq	388 <__flatcc_fb_create_join_path_n+0x1a4>
 36c:	ldr	r0, [sp, #16]
 370:	ldr	r1, [sp, #8]
 374:	add	r2, r1, #1
 378:	str	r2, [sp, #8]
 37c:	add	r0, r0, r1
 380:	movw	r1, #47	; 0x2f
 384:	strb	r1, [r0]
 388:	ldr	r0, [sp, #16]
 38c:	ldr	r1, [sp, #8]
 390:	add	r0, r0, r1
 394:	ldr	r1, [fp, #-16]
 398:	ldr	r2, [sp, #20]
 39c:	bl	0 <memcpy>
 3a0:	ldr	r0, [sp, #20]
 3a4:	ldr	r1, [sp, #8]
 3a8:	add	r0, r1, r0
 3ac:	str	r0, [sp, #8]
 3b0:	ldr	r0, [sp, #16]
 3b4:	ldr	r1, [sp, #8]
 3b8:	add	r0, r0, r1
 3bc:	ldr	r1, [fp, #8]
 3c0:	ldr	r2, [sp, #12]
 3c4:	bl	0 <memcpy>
 3c8:	ldr	r0, [sp, #12]
 3cc:	ldr	r1, [sp, #8]
 3d0:	add	r0, r1, r0
 3d4:	str	r0, [sp, #8]
 3d8:	ldr	r0, [sp, #16]
 3dc:	ldr	r1, [sp, #8]
 3e0:	add	r0, r0, r1
 3e4:	movw	r1, #0
 3e8:	strb	r1, [r0]
 3ec:	ldr	r0, [sp, #16]
 3f0:	str	r0, [fp, #-4]
 3f4:	ldr	r0, [fp, #-4]
 3f8:	mov	sp, fp
 3fc:	pop	{fp, pc}

00000400 <__flatcc_fb_create_join_path>:
 400:	push	{r4, r5, fp, lr}
 404:	add	fp, sp, #8
 408:	sub	sp, sp, #56	; 0x38
 40c:	str	r0, [fp, #-12]
 410:	str	r1, [fp, #-16]
 414:	str	r2, [fp, #-20]	; 0xffffffec
 418:	str	r3, [fp, #-24]	; 0xffffffe8
 41c:	ldr	r0, [fp, #-12]
 420:	ldr	r1, [fp, #-12]
 424:	movw	r2, #0
 428:	cmp	r1, r2
 42c:	str	r0, [fp, #-28]	; 0xffffffe4
 430:	beq	444 <__flatcc_fb_create_join_path+0x44>
 434:	ldr	r0, [fp, #-12]
 438:	bl	0 <strlen>
 43c:	str	r0, [sp, #32]
 440:	b	450 <__flatcc_fb_create_join_path+0x50>
 444:	movw	r0, #0
 448:	str	r0, [sp, #32]
 44c:	b	450 <__flatcc_fb_create_join_path+0x50>
 450:	ldr	r0, [sp, #32]
 454:	ldr	r2, [fp, #-16]
 458:	ldr	r1, [fp, #-16]
 45c:	movw	r3, #0
 460:	cmp	r1, r3
 464:	str	r0, [sp, #28]
 468:	str	r2, [sp, #24]
 46c:	beq	480 <__flatcc_fb_create_join_path+0x80>
 470:	ldr	r0, [fp, #-16]
 474:	bl	0 <strlen>
 478:	str	r0, [sp, #20]
 47c:	b	48c <__flatcc_fb_create_join_path+0x8c>
 480:	movw	r0, #0
 484:	str	r0, [sp, #20]
 488:	b	48c <__flatcc_fb_create_join_path+0x8c>
 48c:	ldr	r0, [sp, #20]
 490:	ldr	r1, [fp, #-20]	; 0xffffffec
 494:	ldr	r2, [fp, #-24]	; 0xffffffe8
 498:	ldr	r3, [fp, #-28]	; 0xffffffe4
 49c:	str	r0, [sp, #16]
 4a0:	mov	r0, r3
 4a4:	ldr	ip, [sp, #28]
 4a8:	str	r1, [sp, #12]
 4ac:	mov	r1, ip
 4b0:	ldr	lr, [sp, #24]
 4b4:	str	r2, [sp, #8]
 4b8:	mov	r2, lr
 4bc:	ldr	r3, [sp, #16]
 4c0:	ldr	r4, [sp, #12]
 4c4:	str	r4, [sp]
 4c8:	ldr	r5, [sp, #8]
 4cc:	str	r5, [sp, #4]
 4d0:	bl	1e4 <__flatcc_fb_create_join_path_n>
 4d4:	sub	sp, fp, #8
 4d8:	pop	{r4, r5, fp, pc}

000004dc <__flatcc_fb_create_path_ext_n>:
 4dc:	push	{fp, lr}
 4e0:	mov	fp, sp
 4e4:	sub	sp, sp, #32
 4e8:	str	r0, [fp, #-4]
 4ec:	str	r1, [fp, #-8]
 4f0:	str	r2, [fp, #-12]
 4f4:	ldr	r2, [fp, #-4]
 4f8:	ldr	r3, [fp, #-8]
 4fc:	ldr	r0, [fp, #-12]
 500:	movw	r1, #0
 504:	str	r0, [sp, #16]
 508:	mov	r0, r1
 50c:	str	r1, [sp, #12]
 510:	ldr	ip, [sp, #16]
 514:	str	ip, [sp]
 518:	ldr	lr, [sp, #12]
 51c:	str	lr, [sp, #4]
 520:	bl	1e4 <__flatcc_fb_create_join_path_n>
 524:	mov	sp, fp
 528:	pop	{fp, pc}

0000052c <__flatcc_fb_create_path_ext>:
 52c:	push	{fp, lr}
 530:	mov	fp, sp
 534:	sub	sp, sp, #16
 538:	str	r0, [fp, #-4]
 53c:	str	r1, [sp, #8]
 540:	ldr	r1, [fp, #-4]
 544:	ldr	r2, [sp, #8]
 548:	movw	r0, #0
 54c:	str	r0, [sp, #4]
 550:	ldr	r3, [sp, #4]
 554:	bl	400 <__flatcc_fb_create_join_path>
 558:	mov	sp, fp
 55c:	pop	{fp, pc}

00000560 <__flatcc_fb_create_make_path_n>:
 560:	push	{fp, lr}
 564:	mov	fp, sp
 568:	sub	sp, sp, #32
 56c:	str	r0, [fp, #-8]
 570:	str	r1, [fp, #-12]
 574:	ldr	r0, [fp, #-12]
 578:	cmp	r0, #1
 57c:	bne	5f8 <__flatcc_fb_create_make_path_n+0x98>
 580:	ldr	r0, [fp, #-8]
 584:	ldrb	r0, [r0]
 588:	cmp	r0, #32
 58c:	beq	5a0 <__flatcc_fb_create_make_path_n+0x40>
 590:	ldr	r0, [fp, #-8]
 594:	ldrb	r0, [r0]
 598:	cmp	r0, #92	; 0x5c
 59c:	bne	5f8 <__flatcc_fb_create_make_path_n+0x98>
 5a0:	movw	r0, #3
 5a4:	bl	0 <malloc>
 5a8:	str	r0, [sp, #4]
 5ac:	movw	r1, #0
 5b0:	cmp	r0, r1
 5b4:	bne	5c4 <__flatcc_fb_create_make_path_n+0x64>
 5b8:	movw	r0, #0
 5bc:	str	r0, [fp, #-4]
 5c0:	b	864 <__flatcc_fb_create_make_path_n+0x304>
 5c4:	ldr	r0, [sp, #4]
 5c8:	movw	r1, #92	; 0x5c
 5cc:	strb	r1, [r0]
 5d0:	ldr	r0, [fp, #-8]
 5d4:	ldrb	r0, [r0]
 5d8:	ldr	r1, [sp, #4]
 5dc:	strb	r0, [r1, #1]
 5e0:	ldr	r0, [sp, #4]
 5e4:	movw	r1, #0
 5e8:	strb	r1, [r0, #2]
 5ec:	ldr	r0, [sp, #4]
 5f0:	str	r0, [fp, #-4]
 5f4:	b	864 <__flatcc_fb_create_make_path_n+0x304>
 5f8:	ldr	r0, [fp, #-12]
 5fc:	cmp	r0, #1
 600:	bhi	618 <__flatcc_fb_create_make_path_n+0xb8>
 604:	ldr	r0, [fp, #-8]
 608:	ldr	r1, [fp, #-12]
 60c:	bl	0 <__flatcc_fb_copy_path_n>
 610:	str	r0, [fp, #-4]
 614:	b	864 <__flatcc_fb_create_make_path_n+0x304>
 618:	movw	r0, #0
 61c:	str	r0, [sp, #16]
 620:	ldr	r0, [fp, #-12]
 624:	str	r0, [sp, #8]
 628:	ldr	r0, [sp, #16]
 62c:	ldr	r1, [fp, #-12]
 630:	sub	r1, r1, #1
 634:	cmp	r0, r1
 638:	bcs	6b8 <__flatcc_fb_create_make_path_n+0x158>
 63c:	ldr	r0, [fp, #-8]
 640:	ldr	r1, [sp, #16]
 644:	add	r0, r0, r1
 648:	ldrb	r0, [r0]
 64c:	cmp	r0, #92	; 0x5c
 650:	bne	67c <__flatcc_fb_create_make_path_n+0x11c>
 654:	ldr	r0, [fp, #-8]
 658:	ldr	r1, [sp, #16]
 65c:	add	r1, r1, #1
 660:	add	r0, r0, r1
 664:	ldrb	r0, [r0]
 668:	cmp	r0, #32
 66c:	bne	67c <__flatcc_fb_create_make_path_n+0x11c>
 670:	ldr	r0, [sp, #8]
 674:	add	r0, r0, #1
 678:	str	r0, [sp, #8]
 67c:	ldr	r0, [fp, #-8]
 680:	ldr	r1, [sp, #16]
 684:	add	r0, r0, r1
 688:	ldrb	r0, [r0]
 68c:	cmp	r0, #32
 690:	movw	r0, #0
 694:	moveq	r0, #1
 698:	and	r0, r0, #1
 69c:	ldr	r1, [sp, #8]
 6a0:	add	r0, r1, r0
 6a4:	str	r0, [sp, #8]
 6a8:	ldr	r0, [sp, #16]
 6ac:	add	r0, r0, #1
 6b0:	str	r0, [sp, #16]
 6b4:	b	628 <__flatcc_fb_create_make_path_n+0xc8>
 6b8:	ldr	r0, [fp, #-8]
 6bc:	ldr	r1, [sp, #16]
 6c0:	add	r0, r0, r1
 6c4:	ldrb	r0, [r0]
 6c8:	cmp	r0, #32
 6cc:	movw	r0, #0
 6d0:	moveq	r0, #1
 6d4:	and	r0, r0, #1
 6d8:	ldr	r1, [sp, #8]
 6dc:	add	r0, r1, r0
 6e0:	str	r0, [sp, #8]
 6e4:	ldr	r0, [sp, #8]
 6e8:	add	r0, r0, #1
 6ec:	bl	0 <malloc>
 6f0:	str	r0, [sp, #4]
 6f4:	movw	r1, #0
 6f8:	cmp	r0, r1
 6fc:	bne	70c <__flatcc_fb_create_make_path_n+0x1ac>
 700:	movw	r0, #0
 704:	str	r0, [fp, #-4]
 708:	b	864 <__flatcc_fb_create_make_path_n+0x304>
 70c:	movw	r0, #0
 710:	str	r0, [sp, #16]
 714:	str	r0, [sp, #12]
 718:	ldr	r0, [sp, #16]
 71c:	ldr	r1, [fp, #-12]
 720:	sub	r1, r1, #1
 724:	cmp	r0, r1
 728:	bcs	7ec <__flatcc_fb_create_make_path_n+0x28c>
 72c:	ldr	r0, [fp, #-8]
 730:	ldr	r1, [sp, #16]
 734:	add	r0, r0, r1
 738:	ldrb	r0, [r0]
 73c:	cmp	r0, #92	; 0x5c
 740:	bne	77c <__flatcc_fb_create_make_path_n+0x21c>
 744:	ldr	r0, [fp, #-8]
 748:	ldr	r1, [sp, #16]
 74c:	add	r1, r1, #1
 750:	add	r0, r0, r1
 754:	ldrb	r0, [r0]
 758:	cmp	r0, #32
 75c:	bne	77c <__flatcc_fb_create_make_path_n+0x21c>
 760:	ldr	r0, [sp, #4]
 764:	ldr	r1, [sp, #12]
 768:	add	r2, r1, #1
 76c:	str	r2, [sp, #12]
 770:	add	r0, r0, r1
 774:	movw	r1, #92	; 0x5c
 778:	strb	r1, [r0]
 77c:	ldr	r0, [fp, #-8]
 780:	ldr	r1, [sp, #16]
 784:	add	r0, r0, r1
 788:	ldrb	r0, [r0]
 78c:	cmp	r0, #32
 790:	bne	7b0 <__flatcc_fb_create_make_path_n+0x250>
 794:	ldr	r0, [sp, #4]
 798:	ldr	r1, [sp, #12]
 79c:	add	r2, r1, #1
 7a0:	str	r2, [sp, #12]
 7a4:	add	r0, r0, r1
 7a8:	movw	r1, #92	; 0x5c
 7ac:	strb	r1, [r0]
 7b0:	ldr	r0, [fp, #-8]
 7b4:	ldr	r1, [sp, #16]
 7b8:	add	r0, r0, r1
 7bc:	ldrb	r0, [r0]
 7c0:	ldr	r1, [sp, #4]
 7c4:	ldr	r2, [sp, #12]
 7c8:	add	r1, r1, r2
 7cc:	strb	r0, [r1]
 7d0:	ldr	r0, [sp, #16]
 7d4:	add	r0, r0, #1
 7d8:	str	r0, [sp, #16]
 7dc:	ldr	r0, [sp, #12]
 7e0:	add	r0, r0, #1
 7e4:	str	r0, [sp, #12]
 7e8:	b	718 <__flatcc_fb_create_make_path_n+0x1b8>
 7ec:	ldr	r0, [fp, #-8]
 7f0:	ldr	r1, [sp, #16]
 7f4:	add	r0, r0, r1
 7f8:	ldrb	r0, [r0]
 7fc:	cmp	r0, #32
 800:	bne	820 <__flatcc_fb_create_make_path_n+0x2c0>
 804:	ldr	r0, [sp, #4]
 808:	ldr	r1, [sp, #12]
 80c:	add	r2, r1, #1
 810:	str	r2, [sp, #12]
 814:	add	r0, r0, r1
 818:	movw	r1, #92	; 0x5c
 81c:	strb	r1, [r0]
 820:	ldr	r0, [fp, #-8]
 824:	ldr	r1, [sp, #16]
 828:	add	r0, r0, r1
 82c:	ldrb	r0, [r0]
 830:	ldr	r1, [sp, #4]
 834:	ldr	r2, [sp, #12]
 838:	add	r3, r2, #1
 83c:	str	r3, [sp, #12]
 840:	add	r1, r1, r2
 844:	strb	r0, [r1]
 848:	ldr	r0, [sp, #4]
 84c:	ldr	r1, [sp, #12]
 850:	add	r0, r0, r1
 854:	movw	r1, #0
 858:	strb	r1, [r0]
 85c:	ldr	r0, [sp, #4]
 860:	str	r0, [fp, #-4]
 864:	ldr	r0, [fp, #-4]
 868:	mov	sp, fp
 86c:	pop	{fp, pc}

00000870 <__flatcc_fb_create_make_path>:
 870:	push	{fp, lr}
 874:	mov	fp, sp
 878:	sub	sp, sp, #16
 87c:	str	r0, [fp, #-4]
 880:	ldr	r0, [fp, #-4]
 884:	ldr	r1, [fp, #-4]
 888:	str	r0, [sp, #8]
 88c:	mov	r0, r1
 890:	bl	0 <strlen>
 894:	ldr	r1, [sp, #8]
 898:	str	r0, [sp, #4]
 89c:	mov	r0, r1
 8a0:	ldr	r1, [sp, #4]
 8a4:	bl	560 <__flatcc_fb_create_make_path_n>
 8a8:	mov	sp, fp
 8ac:	pop	{fp, pc}

000008b0 <__flatcc_fb_find_basename>:
 8b0:	sub	sp, sp, #12
 8b4:	str	r0, [sp, #8]
 8b8:	str	r1, [sp, #4]
 8bc:	ldr	r0, [sp, #8]
 8c0:	str	r0, [sp]
 8c4:	ldr	r0, [sp, #4]
 8c8:	ldr	r1, [sp]
 8cc:	add	r0, r1, r0
 8d0:	str	r0, [sp]
 8d4:	ldr	r0, [sp]
 8d8:	ldr	r1, [sp, #8]
 8dc:	cmp	r0, r1
 8e0:	beq	928 <__flatcc_fb_find_basename+0x78>
 8e4:	ldr	r0, [sp]
 8e8:	mvn	r1, #0
 8ec:	add	r0, r0, r1
 8f0:	str	r0, [sp]
 8f4:	ldr	r0, [sp]
 8f8:	ldrb	r0, [r0]
 8fc:	cmp	r0, #47	; 0x2f
 900:	beq	914 <__flatcc_fb_find_basename+0x64>
 904:	ldr	r0, [sp]
 908:	ldrb	r0, [r0]
 90c:	cmp	r0, #92	; 0x5c
 910:	bne	924 <__flatcc_fb_find_basename+0x74>
 914:	ldr	r0, [sp]
 918:	add	r0, r0, #1
 91c:	str	r0, [sp]
 920:	b	928 <__flatcc_fb_find_basename+0x78>
 924:	b	8d4 <__flatcc_fb_find_basename+0x24>
 928:	ldr	r0, [sp]
 92c:	ldr	r1, [sp, #8]
 930:	sub	r0, r0, r1
 934:	add	sp, sp, #12
 938:	bx	lr

0000093c <__flatcc_fb_create_basename>:
 93c:	push	{fp, lr}
 940:	mov	fp, sp
 944:	sub	sp, sp, #24
 948:	str	r0, [fp, #-4]
 94c:	str	r1, [fp, #-8]
 950:	str	r2, [sp, #12]
 954:	ldr	r0, [fp, #-4]
 958:	ldr	r1, [fp, #-8]
 95c:	bl	8b0 <__flatcc_fb_find_basename>
 960:	str	r0, [sp, #8]
 964:	ldr	r0, [sp, #8]
 968:	ldr	r1, [fp, #-4]
 96c:	add	r0, r1, r0
 970:	str	r0, [fp, #-4]
 974:	ldr	r0, [sp, #8]
 978:	ldr	r1, [fp, #-8]
 97c:	sub	r0, r1, r0
 980:	str	r0, [fp, #-8]
 984:	ldr	r0, [fp, #-4]
 988:	ldr	r1, [fp, #-8]
 98c:	ldr	r2, [sp, #12]
 990:	bl	138 <__flatcc_fb_chomp>
 994:	str	r0, [fp, #-8]
 998:	ldr	r0, [fp, #-8]
 99c:	add	r0, r0, #1
 9a0:	bl	0 <malloc>
 9a4:	str	r0, [sp, #4]
 9a8:	movw	r1, #0
 9ac:	cmp	r0, r1
 9b0:	beq	9d8 <__flatcc_fb_create_basename+0x9c>
 9b4:	ldr	r0, [sp, #4]
 9b8:	ldr	r1, [fp, #-4]
 9bc:	ldr	r2, [fp, #-8]
 9c0:	bl	0 <memcpy>
 9c4:	ldr	r0, [sp, #4]
 9c8:	ldr	r1, [fp, #-8]
 9cc:	add	r0, r0, r1
 9d0:	movw	r1, #0
 9d4:	strb	r1, [r0]
 9d8:	ldr	r0, [sp, #4]
 9dc:	mov	sp, fp
 9e0:	pop	{fp, pc}

000009e4 <__flatcc_fb_read_file>:
 9e4:	push	{fp, lr}
 9e8:	mov	fp, sp
 9ec:	sub	sp, sp, #56	; 0x38
 9f0:	str	r0, [fp, #-8]
 9f4:	str	r1, [fp, #-12]
 9f8:	str	r2, [fp, #-16]
 9fc:	ldr	r0, [fp, #-16]
 a00:	movw	r1, #0
 a04:	cmp	r0, r1
 a08:	beq	a18 <__flatcc_fb_read_file+0x34>
 a0c:	ldr	r0, [fp, #-16]
 a10:	str	r0, [sp, #12]
 a14:	b	a24 <__flatcc_fb_read_file+0x40>
 a18:	add	r0, sp, #20
 a1c:	str	r0, [sp, #12]
 a20:	b	a24 <__flatcc_fb_read_file+0x40>
 a24:	ldr	r0, [sp, #12]
 a28:	str	r0, [fp, #-16]
 a2c:	ldr	r0, [fp, #-8]
 a30:	movw	r1, #0
 a34:	movt	r1, #0
 a38:	bl	0 <fopen>
 a3c:	str	r0, [fp, #-20]	; 0xffffffec
 a40:	movw	r0, #0
 a44:	str	r0, [fp, #-24]	; 0xffffffe8
 a48:	str	r0, [sp, #16]
 a4c:	ldr	r1, [fp, #-20]	; 0xffffffec
 a50:	cmp	r1, r0
 a54:	bne	a5c <__flatcc_fb_read_file+0x78>
 a58:	b	b78 <__flatcc_fb_read_file+0x194>
 a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
 a60:	movw	r1, #0
 a64:	movw	r2, #2
 a68:	bl	0 <fseek>
 a6c:	ldr	r1, [fp, #-20]	; 0xffffffec
 a70:	str	r0, [sp, #8]
 a74:	mov	r0, r1
 a78:	bl	0 <ftell>
 a7c:	str	r0, [fp, #-24]	; 0xffffffe8
 a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
 a84:	ldr	r1, [fp, #-16]
 a88:	str	r0, [r1]
 a8c:	ldr	r0, [fp, #-12]
 a90:	cmp	r0, #0
 a94:	bls	aac <__flatcc_fb_read_file+0xc8>
 a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
 a9c:	ldr	r1, [fp, #-12]
 aa0:	cmp	r0, r1
 aa4:	bls	aac <__flatcc_fb_read_file+0xc8>
 aa8:	b	b78 <__flatcc_fb_read_file+0x194>
 aac:	ldr	r0, [fp, #-20]	; 0xffffffec
 ab0:	bl	0 <rewind>
 ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 ab8:	cmp	r0, #0
 abc:	beq	acc <__flatcc_fb_read_file+0xe8>
 ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 ac4:	str	r0, [sp, #4]
 ac8:	b	ad8 <__flatcc_fb_read_file+0xf4>
 acc:	movw	r0, #1
 ad0:	str	r0, [sp, #4]
 ad4:	b	ad8 <__flatcc_fb_read_file+0xf4>
 ad8:	ldr	r0, [sp, #4]
 adc:	bl	0 <malloc>
 ae0:	str	r0, [sp, #16]
 ae4:	ldr	r0, [sp, #16]
 ae8:	movw	r1, #0
 aec:	cmp	r0, r1
 af0:	bne	af8 <__flatcc_fb_read_file+0x114>
 af4:	b	b78 <__flatcc_fb_read_file+0x194>
 af8:	movw	r0, #0
 afc:	str	r0, [sp, #28]
 b00:	ldr	r0, [sp, #16]
 b04:	ldr	r1, [sp, #28]
 b08:	add	r0, r0, r1
 b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 b10:	ldr	r2, [sp, #28]
 b14:	sub	r2, r1, r2
 b18:	ldr	r3, [fp, #-20]	; 0xffffffec
 b1c:	movw	r1, #1
 b20:	bl	0 <fread>
 b24:	str	r0, [sp, #24]
 b28:	cmp	r0, #0
 b2c:	beq	b44 <__flatcc_fb_read_file+0x160>
 b30:	ldr	r0, [sp, #24]
 b34:	ldr	r1, [sp, #28]
 b38:	add	r0, r1, r0
 b3c:	str	r0, [sp, #28]
 b40:	b	b00 <__flatcc_fb_read_file+0x11c>
 b44:	ldr	r0, [sp, #28]
 b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
 b4c:	cmp	r0, r1
 b50:	beq	b58 <__flatcc_fb_read_file+0x174>
 b54:	b	b78 <__flatcc_fb_read_file+0x194>
 b58:	ldr	r0, [fp, #-20]	; 0xffffffec
 b5c:	bl	0 <fclose>
 b60:	ldr	r1, [fp, #-24]	; 0xffffffe8
 b64:	ldr	r2, [fp, #-16]
 b68:	str	r1, [r2]
 b6c:	ldr	r1, [sp, #16]
 b70:	str	r1, [fp, #-4]
 b74:	b	bbc <__flatcc_fb_read_file+0x1d8>
 b78:	ldr	r0, [fp, #-20]	; 0xffffffec
 b7c:	movw	r1, #0
 b80:	cmp	r0, r1
 b84:	beq	b90 <__flatcc_fb_read_file+0x1ac>
 b88:	ldr	r0, [fp, #-20]	; 0xffffffec
 b8c:	bl	0 <fclose>
 b90:	ldr	r0, [sp, #16]
 b94:	movw	r1, #0
 b98:	cmp	r0, r1
 b9c:	beq	ba8 <__flatcc_fb_read_file+0x1c4>
 ba0:	ldr	r0, [sp, #16]
 ba4:	bl	0 <free>
 ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 bac:	ldr	r1, [fp, #-16]
 bb0:	str	r0, [r1]
 bb4:	movw	r0, #0
 bb8:	str	r0, [fp, #-4]
 bbc:	ldr	r0, [fp, #-4]
 bc0:	mov	sp, fp
 bc4:	pop	{fp, pc}
