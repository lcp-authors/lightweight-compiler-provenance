
../repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/fileio.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_fb_copy_path_n>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #24
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	str	r6, [sp, #16]
  1c:	mov	r5, r0
  20:	mov	r6, r1
  24:	mov	r1, #0
  28:	mov	r2, r6
  2c:	mov	r0, r5
  30:	bl	0 <memchr>
  34:	cmp	r0, #0
  38:	beq	40 <__flatcc_fb_copy_path_n+0x40>
  3c:	sub	r6, r0, r5
  40:	add	r0, r6, #1
  44:	bl	0 <malloc>
  48:	mov	r4, r0
  4c:	cmp	r4, #0
  50:	beq	6c <__flatcc_fb_copy_path_n+0x6c>
  54:	mov	r2, r6
  58:	mov	r1, r5
  5c:	mov	r0, r4
  60:	bl	0 <memcpy>
  64:	mov	r0, #0
  68:	strb	r0, [r4, r6]
  6c:	mov	r0, r4
  70:	ldr	r4, [sp, #8]
  74:	ldr	r5, [sp, #12]
  78:	ldr	r6, [sp, #16]
  7c:	ldr	lr, [sp, #4]
  80:	add	sp, sp, #24
  84:	bx	lr

00000088 <__flatcc_fb_copy_path>:
  88:	mov	ip, sp
  8c:	sub	sp, sp, #24
  90:	str	ip, [sp]
  94:	str	lr, [sp, #4]
  98:	str	r4, [sp, #8]
  9c:	str	r5, [sp, #12]
  a0:	str	r6, [sp, #16]
  a4:	mov	r6, r0
  a8:	mov	r0, r6
  ac:	bl	0 <strlen>
  b0:	mov	r5, r0
  b4:	add	r0, r5, #1
  b8:	bl	0 <malloc>
  bc:	mov	r4, r0
  c0:	cmp	r4, #0
  c4:	beq	e0 <__flatcc_fb_copy_path+0x58>
  c8:	mov	r2, r5
  cc:	mov	r1, r6
  d0:	mov	r0, r4
  d4:	bl	0 <memcpy>
  d8:	mov	r0, #0
  dc:	strb	r0, [r4, r5]
  e0:	mov	r0, r4
  e4:	ldr	r4, [sp, #8]
  e8:	ldr	r5, [sp, #12]
  ec:	ldr	r6, [sp, #16]
  f0:	ldr	lr, [sp, #4]
  f4:	add	sp, sp, #24
  f8:	bx	lr

000000fc <__flatcc_fb_chomp>:
  fc:	mov	ip, sp
 100:	sub	sp, sp, #24
 104:	str	ip, [sp]
 108:	str	lr, [sp, #4]
 10c:	str	r4, [sp, #8]
 110:	str	r5, [sp, #12]
 114:	str	r6, [sp, #16]
 118:	str	r7, [sp, #20]
 11c:	mov	r4, r2
 120:	mov	r5, r1
 124:	mov	r6, r0
 128:	cmp	r4, #0
 12c:	beq	140 <__flatcc_fb_chomp+0x44>
 130:	mov	r0, r4
 134:	bl	0 <strlen>
 138:	mov	r7, r0
 13c:	b	144 <__flatcc_fb_chomp+0x48>
 140:	mov	r7, #0
 144:	cmp	r5, r7
 148:	bls	170 <__flatcc_fb_chomp+0x74>
 14c:	add	r3, r6, r5
 150:	sub	r0, r3, r7
 154:	mov	r2, r7
 158:	mov	r1, r4
 15c:	bl	0 <strncmp>
 160:	cmp	r0, #0
 164:	moveq	r0, #1
 168:	movne	r0, #0
 16c:	b	174 <__flatcc_fb_chomp+0x78>
 170:	mov	r0, #0
 174:	sub	r2, r5, r7
 178:	cmp	r0, #0
 17c:	movne	r0, r2
 180:	moveq	r0, r5
 184:	ldr	r4, [sp, #8]
 188:	ldr	r5, [sp, #12]
 18c:	ldr	r6, [sp, #16]
 190:	ldr	r7, [sp, #20]
 194:	ldr	lr, [sp, #4]
 198:	add	sp, sp, #24
 19c:	bx	lr

000001a0 <__flatcc_fb_create_join_path_n>:
 1a0:	mov	ip, sp
 1a4:	sub	sp, sp, #40	; 0x28
 1a8:	str	ip, [sp]
 1ac:	str	lr, [sp, #4]
 1b0:	str	r4, [sp, #8]
 1b4:	str	r5, [sp, #12]
 1b8:	str	r6, [sp, #16]
 1bc:	str	r7, [sp, #20]
 1c0:	str	r8, [sp, #24]
 1c4:	str	r9, [sp, #28]
 1c8:	str	sl, [sp, #32]
 1cc:	str	fp, [sp, #36]	; 0x24
 1d0:	ldr	r6, [ip, #4]
 1d4:	ldr	r9, [ip]
 1d8:	mov	r8, r3
 1dc:	mov	r7, r2
 1e0:	mov	r5, r1
 1e4:	mov	fp, r0
 1e8:	cmp	r9, #0
 1ec:	beq	1fc <__flatcc_fb_create_join_path_n+0x5c>
 1f0:	mov	r0, r9
 1f4:	bl	0 <strlen>
 1f8:	b	200 <__flatcc_fb_create_join_path_n+0x60>
 1fc:	mov	r0, #0
 200:	mov	r4, r0
 204:	cmp	fp, #0
 208:	beq	24c <__flatcc_fb_create_join_path_n+0xac>
 20c:	cmp	r8, #0
 210:	bls	228 <__flatcc_fb_create_join_path_n+0x88>
 214:	ldrb	ip, [r7]
 218:	cmp	ip, #47	; 0x2f
 21c:	beq	24c <__flatcc_fb_create_join_path_n+0xac>
 220:	cmp	ip, #92	; 0x5c
 224:	beq	24c <__flatcc_fb_create_join_path_n+0xac>
 228:	cmp	r8, #1
 22c:	bls	244 <__flatcc_fb_create_join_path_n+0xa4>
 230:	ldrb	r1, [r7, #1]
 234:	cmp	r1, #58	; 0x3a
 238:	moveq	r0, #1
 23c:	movne	r0, #0
 240:	b	250 <__flatcc_fb_create_join_path_n+0xb0>
 244:	mov	r0, #0
 248:	b	250 <__flatcc_fb_create_join_path_n+0xb0>
 24c:	mov	r0, #1
 250:	mov	r3, #0
 254:	cmp	r0, #0
 258:	movne	r5, r3
 25c:	moveq	r5, r5
 260:	cmp	r6, #0
 264:	beq	2a4 <__flatcc_fb_create_join_path_n+0x104>
 268:	cmp	r5, #0
 26c:	beq	29c <__flatcc_fb_create_join_path_n+0xfc>
 270:	add	r0, fp, r5
 274:	sub	lr, r0, #4096	; 0x1000
 278:	ldrb	r1, [lr, #4095]	; 0xfff
 27c:	cmp	r1, #47	; 0x2f
 280:	beq	294 <__flatcc_fb_create_join_path_n+0xf4>
 284:	cmp	r1, #92	; 0x5c
 288:	moveq	r2, #1
 28c:	movne	r2, #0
 290:	b	2a8 <__flatcc_fb_create_join_path_n+0x108>
 294:	mov	r2, #1
 298:	b	2a8 <__flatcc_fb_create_join_path_n+0x108>
 29c:	mov	r2, #1
 2a0:	b	2a8 <__flatcc_fb_create_join_path_n+0x108>
 2a4:	mov	r2, #0
 2a8:	mov	r1, #0
 2ac:	cmp	r2, #0
 2b0:	movne	r6, r1
 2b4:	moveq	r6, r6
 2b8:	add	r0, r5, r6
 2bc:	add	r3, r0, r8
 2c0:	add	r2, r3, r4
 2c4:	add	r0, r2, #1
 2c8:	bl	0 <malloc>
 2cc:	mov	sl, r0
 2d0:	cmp	sl, #0
 2d4:	bne	2e0 <__flatcc_fb_create_join_path_n+0x140>
 2d8:	mov	r0, #0
 2dc:	b	33c <__flatcc_fb_create_join_path_n+0x19c>
 2e0:	mov	r2, r5
 2e4:	mov	r1, fp
 2e8:	mov	r0, sl
 2ec:	bl	0 <memcpy>
 2f0:	cmp	r6, #0
 2f4:	beq	308 <__flatcc_fb_create_join_path_n+0x168>
 2f8:	mov	r3, r5
 2fc:	add	r5, r3, #1
 300:	mov	r1, #47	; 0x2f
 304:	strb	r1, [sl, r3]
 308:	add	r0, sl, r5
 30c:	mov	r2, r8
 310:	mov	r1, r7
 314:	bl	0 <memcpy>
 318:	add	r5, r5, r8
 31c:	add	r0, sl, r5
 320:	mov	r2, r4
 324:	mov	r1, r9
 328:	bl	0 <memcpy>
 32c:	add	r0, r5, r4
 330:	mov	r3, #0
 334:	strb	r3, [sl, r0]
 338:	mov	r0, sl
 33c:	ldr	r4, [sp, #8]
 340:	ldr	r5, [sp, #12]
 344:	ldr	r6, [sp, #16]
 348:	ldr	r7, [sp, #20]
 34c:	ldr	r8, [sp, #24]
 350:	ldr	r9, [sp, #28]
 354:	ldr	sl, [sp, #32]
 358:	ldr	fp, [sp, #36]	; 0x24
 35c:	ldr	lr, [sp, #4]
 360:	add	sp, sp, #40	; 0x28
 364:	bx	lr

00000368 <__flatcc_fb_create_join_path>:
 368:	mov	ip, sp
 36c:	sub	sp, sp, #40	; 0x28
 370:	str	ip, [sp, #8]
 374:	str	lr, [sp, #12]
 378:	str	r4, [sp, #16]
 37c:	str	r5, [sp, #20]
 380:	str	r6, [sp, #24]
 384:	str	r7, [sp, #28]
 388:	str	r8, [sp, #32]
 38c:	mov	r4, r3
 390:	mov	r5, r2
 394:	mov	r6, r1
 398:	mov	r7, r0
 39c:	cmp	r7, #0
 3a0:	beq	3b4 <__flatcc_fb_create_join_path+0x4c>
 3a4:	mov	r0, r7
 3a8:	bl	0 <strlen>
 3ac:	mov	r8, r0
 3b0:	b	3b8 <__flatcc_fb_create_join_path+0x50>
 3b4:	mov	r8, #0
 3b8:	cmp	r6, #0
 3bc:	beq	3d0 <__flatcc_fb_create_join_path+0x68>
 3c0:	mov	r0, r6
 3c4:	bl	0 <strlen>
 3c8:	mov	r3, r0
 3cc:	b	3d4 <__flatcc_fb_create_join_path+0x6c>
 3d0:	mov	r3, #0
 3d4:	str	r4, [sp, #4]
 3d8:	str	r5, [sp]
 3dc:	mov	r2, r6
 3e0:	mov	r1, r8
 3e4:	mov	r0, r7
 3e8:	bl	1a0 <__flatcc_fb_create_join_path_n>
 3ec:	ldr	r4, [sp, #16]
 3f0:	ldr	r5, [sp, #20]
 3f4:	ldr	r6, [sp, #24]
 3f8:	ldr	r7, [sp, #28]
 3fc:	ldr	r8, [sp, #32]
 400:	ldr	lr, [sp, #12]
 404:	add	sp, sp, #40	; 0x28
 408:	bx	lr

0000040c <__flatcc_fb_create_path_ext_n>:
 40c:	mov	ip, sp
 410:	sub	sp, sp, #24
 414:	str	ip, [sp, #8]
 418:	str	lr, [sp, #12]
 41c:	str	r4, [sp, #16]
 420:	str	r5, [sp, #20]
 424:	mov	ip, #0
 428:	mov	r3, #0
 42c:	mov	r4, #0
 430:	str	r4, [sp, #4]
 434:	str	r2, [sp]
 438:	mov	r5, r1
 43c:	mov	r1, r3
 440:	mov	r3, r5
 444:	mov	r2, r0
 448:	mov	r0, ip
 44c:	bl	1a0 <__flatcc_fb_create_join_path_n>
 450:	ldr	r4, [sp, #16]
 454:	ldr	r5, [sp, #20]
 458:	ldr	lr, [sp, #12]
 45c:	add	sp, sp, #24
 460:	bx	lr

00000464 <__flatcc_fb_create_path_ext>:
 464:	mov	ip, sp
 468:	sub	sp, sp, #8
 46c:	str	ip, [sp]
 470:	str	lr, [sp, #4]
 474:	mov	r2, r1
 478:	mov	r1, r0
 47c:	mov	r0, #0
 480:	mov	r3, #0
 484:	ldr	lr, [sp, #4]
 488:	add	sp, sp, #8
 48c:	b	368 <__flatcc_fb_create_join_path>

00000490 <__flatcc_fb_create_make_path_n>:
 490:	mov	ip, sp
 494:	sub	sp, sp, #24
 498:	str	ip, [sp]
 49c:	str	lr, [sp, #4]
 4a0:	str	r4, [sp, #8]
 4a4:	str	r5, [sp, #12]
 4a8:	str	r6, [sp, #16]
 4ac:	mov	r4, r1
 4b0:	mov	r5, r0
 4b4:	cmp	r4, #1
 4b8:	bne	504 <__flatcc_fb_create_make_path_n+0x74>
 4bc:	ldrb	r2, [r5]
 4c0:	cmp	r2, #32
 4c4:	beq	4d0 <__flatcc_fb_create_make_path_n+0x40>
 4c8:	cmp	r2, #92	; 0x5c
 4cc:	bne	504 <__flatcc_fb_create_make_path_n+0x74>
 4d0:	mov	r0, #3
 4d4:	bl	0 <malloc>
 4d8:	cmp	r0, #0
 4dc:	bne	4e8 <__flatcc_fb_create_make_path_n+0x58>
 4e0:	mov	r0, #0
 4e4:	b	660 <__flatcc_fb_create_make_path_n+0x1d0>
 4e8:	mov	r1, #92	; 0x5c
 4ec:	strb	r1, [r0]
 4f0:	ldrb	r3, [r5]
 4f4:	strb	r3, [r0, #1]
 4f8:	mov	ip, #0
 4fc:	strb	ip, [r0, #2]
 500:	b	660 <__flatcc_fb_create_make_path_n+0x1d0>
 504:	cmp	r4, #1
 508:	bhi	52c <__flatcc_fb_create_make_path_n+0x9c>
 50c:	mov	r1, r4
 510:	mov	r0, r5
 514:	ldr	r4, [sp, #8]
 518:	ldr	r5, [sp, #12]
 51c:	ldr	r6, [sp, #16]
 520:	ldr	lr, [sp, #4]
 524:	add	sp, sp, #24
 528:	b	0 <__flatcc_fb_copy_path_n>
 52c:	mov	r6, #0
 530:	mov	r0, r4
 534:	sub	r2, r4, #1
 538:	cmp	r6, r2
 53c:	bcs	594 <__flatcc_fb_create_make_path_n+0x104>
 540:	ldrb	r2, [r5, r6]
 544:	cmp	r2, #92	; 0x5c
 548:	bne	564 <__flatcc_fb_create_make_path_n+0xd4>
 54c:	add	r1, r5, r6
 550:	ldrb	ip, [r1, #1]
 554:	cmp	ip, #32
 558:	moveq	r1, #1
 55c:	movne	r1, #0
 560:	b	568 <__flatcc_fb_create_make_path_n+0xd8>
 564:	mov	r1, #0
 568:	add	r2, r0, #1
 56c:	cmp	r1, #0
 570:	movne	r1, r2
 574:	moveq	r1, r0
 578:	ldrb	r0, [r5, r6]
 57c:	cmp	r0, #32
 580:	moveq	r3, #1
 584:	movne	r3, #0
 588:	add	r0, r1, r3
 58c:	add	r6, r6, #1
 590:	b	534 <__flatcc_fb_create_make_path_n+0xa4>
 594:	ldrb	r2, [r5, r6]
 598:	cmp	r2, #32
 59c:	moveq	ip, #1
 5a0:	movne	ip, #0
 5a4:	add	r3, r0, ip
 5a8:	add	r0, r3, #1
 5ac:	bl	0 <malloc>
 5b0:	cmp	r0, #0
 5b4:	bne	5c0 <__flatcc_fb_create_make_path_n+0x130>
 5b8:	mov	r0, #0
 5bc:	b	660 <__flatcc_fb_create_make_path_n+0x1d0>
 5c0:	mov	r6, #0
 5c4:	mov	r1, #0
 5c8:	sub	r2, r4, #1
 5cc:	cmp	r6, r2
 5d0:	bcs	630 <__flatcc_fb_create_make_path_n+0x1a0>
 5d4:	ldrb	r3, [r5, r6]
 5d8:	cmp	r3, #92	; 0x5c
 5dc:	bne	600 <__flatcc_fb_create_make_path_n+0x170>
 5e0:	add	r3, r5, r6
 5e4:	ldrb	r2, [r3, #1]
 5e8:	cmp	r2, #32
 5ec:	bne	600 <__flatcc_fb_create_make_path_n+0x170>
 5f0:	mov	r3, r1
 5f4:	add	r1, r3, #1
 5f8:	mov	ip, #92	; 0x5c
 5fc:	strb	ip, [r0, r3]
 600:	ldrb	ip, [r5, r6]
 604:	cmp	ip, #32
 608:	bne	61c <__flatcc_fb_create_make_path_n+0x18c>
 60c:	mov	r2, r1
 610:	add	r1, r2, #1
 614:	mov	r3, #92	; 0x5c
 618:	strb	r3, [r0, r2]
 61c:	ldrb	r2, [r5, r6]
 620:	strb	r2, [r0, r1]
 624:	add	r6, r6, #1
 628:	add	r1, r1, #1
 62c:	b	5c8 <__flatcc_fb_create_make_path_n+0x138>
 630:	ldrb	r2, [r5, r6]
 634:	cmp	r2, #32
 638:	bne	64c <__flatcc_fb_create_make_path_n+0x1bc>
 63c:	mov	r2, r1
 640:	add	r1, r2, #1
 644:	mov	ip, #92	; 0x5c
 648:	strb	ip, [r0, r2]
 64c:	add	r2, r1, #1
 650:	ldrb	ip, [r5, r6]
 654:	strb	ip, [r0, r1]
 658:	mov	r1, #0
 65c:	strb	r1, [r0, r2]
 660:	ldr	r4, [sp, #8]
 664:	ldr	r5, [sp, #12]
 668:	ldr	r6, [sp, #16]
 66c:	ldr	lr, [sp, #4]
 670:	add	sp, sp, #24
 674:	bx	lr

00000678 <__flatcc_fb_create_make_path>:
 678:	mov	ip, sp
 67c:	sub	sp, sp, #16
 680:	str	ip, [sp]
 684:	str	lr, [sp, #4]
 688:	str	r4, [sp, #8]
 68c:	mov	r4, r0
 690:	mov	r0, r4
 694:	bl	0 <strlen>
 698:	mov	r1, r0
 69c:	mov	r0, r4
 6a0:	ldr	r4, [sp, #8]
 6a4:	ldr	lr, [sp, #4]
 6a8:	add	sp, sp, #16
 6ac:	b	490 <__flatcc_fb_create_make_path_n>

000006b0 <__flatcc_fb_find_basename>:
 6b0:	mov	ip, sp
 6b4:	sub	sp, sp, #8
 6b8:	str	ip, [sp]
 6bc:	str	lr, [sp, #4]
 6c0:	add	r2, r0, r1
 6c4:	cmp	r2, r0
 6c8:	beq	6e8 <__flatcc_fb_find_basename+0x38>
 6cc:	sub	r2, r2, #1
 6d0:	ldrb	r1, [r2]
 6d4:	cmp	r1, #47	; 0x2f
 6d8:	beq	6e4 <__flatcc_fb_find_basename+0x34>
 6dc:	cmp	r1, #92	; 0x5c
 6e0:	bne	6c4 <__flatcc_fb_find_basename+0x14>
 6e4:	add	r2, r2, #1
 6e8:	sub	r0, r2, r0
 6ec:	ldr	lr, [sp, #4]
 6f0:	add	sp, sp, #8
 6f4:	bx	lr

000006f8 <__flatcc_fb_create_basename>:
 6f8:	mov	ip, sp
 6fc:	sub	sp, sp, #24
 700:	str	ip, [sp]
 704:	str	lr, [sp, #4]
 708:	str	r4, [sp, #8]
 70c:	str	r5, [sp, #12]
 710:	str	r6, [sp, #16]
 714:	str	r7, [sp, #20]
 718:	mov	r6, r2
 71c:	mov	r4, r1
 720:	mov	r5, r0
 724:	mov	r1, r4
 728:	mov	r0, r5
 72c:	bl	6b0 <__flatcc_fb_find_basename>
 730:	add	r7, r5, r0
 734:	sub	r1, r4, r0
 738:	mov	r2, r6
 73c:	mov	r0, r7
 740:	bl	fc <__flatcc_fb_chomp>
 744:	mov	r5, r0
 748:	add	r0, r5, #1
 74c:	bl	0 <malloc>
 750:	mov	r4, r0
 754:	cmp	r4, #0
 758:	beq	774 <__flatcc_fb_create_basename+0x7c>
 75c:	mov	r2, r5
 760:	mov	r1, r7
 764:	mov	r0, r4
 768:	bl	0 <memcpy>
 76c:	mov	r1, #0
 770:	strb	r1, [r4, r5]
 774:	mov	r0, r4
 778:	ldr	r4, [sp, #8]
 77c:	ldr	r5, [sp, #12]
 780:	ldr	r6, [sp, #16]
 784:	ldr	r7, [sp, #20]
 788:	ldr	lr, [sp, #4]
 78c:	add	sp, sp, #24
 790:	bx	lr

00000794 <__flatcc_fb_read_file>:
 794:	mov	ip, sp
 798:	sub	sp, sp, #40	; 0x28
 79c:	str	ip, [sp]
 7a0:	str	lr, [sp, #4]
 7a4:	str	r4, [sp, #8]
 7a8:	str	r5, [sp, #12]
 7ac:	str	r6, [sp, #16]
 7b0:	str	r7, [sp, #20]
 7b4:	str	r8, [sp, #24]
 7b8:	mov	r8, r1
 7bc:	add	r1, sp, #32
 7c0:	cmp	r2, #0
 7c4:	movne	r5, r2
 7c8:	moveq	r5, r1
 7cc:	ldr	r1, [pc, #268]	; 8e0 <__flatcc_fb_read_file+0x14c>
 7d0:	bl	0 <fopen>
 7d4:	mov	r7, r0
 7d8:	mov	r6, #0
 7dc:	mov	r4, #0
 7e0:	cmp	r7, #0
 7e4:	beq	894 <__flatcc_fb_read_file+0x100>
 7e8:	mov	r1, #0
 7ec:	mov	r2, #2
 7f0:	mov	r0, r7
 7f4:	bl	0 <fseek>
 7f8:	mov	r0, r7
 7fc:	bl	0 <ftell>
 800:	mov	r6, r0
 804:	str	r6, [r5]
 808:	cmp	r6, r8
 80c:	movhi	r1, #1
 810:	movls	r1, #0
 814:	mov	r0, #0
 818:	cmp	r8, #0
 81c:	movhi	ip, r1
 820:	movls	ip, r0
 824:	cmp	ip, #0
 828:	bne	894 <__flatcc_fb_read_file+0x100>
 82c:	mov	r0, r7
 830:	bl	0 <rewind>
 834:	mov	r3, #1
 838:	cmp	r6, #0
 83c:	movne	r0, r6
 840:	moveq	r0, r3
 844:	bl	0 <malloc>
 848:	mov	r4, r0
 84c:	cmp	r4, #0
 850:	beq	894 <__flatcc_fb_read_file+0x100>
 854:	mov	r8, #0
 858:	add	r0, r4, r8
 85c:	mov	r1, #1
 860:	sub	r2, r6, r8
 864:	mov	r3, r7
 868:	bl	0 <fread>
 86c:	cmp	r0, #0
 870:	beq	87c <__flatcc_fb_read_file+0xe8>
 874:	add	r8, r8, r0
 878:	b	858 <__flatcc_fb_read_file+0xc4>
 87c:	cmp	r8, r6
 880:	bne	894 <__flatcc_fb_read_file+0x100>
 884:	mov	r0, r7
 888:	bl	0 <fclose>
 88c:	str	r6, [r5]
 890:	b	8bc <__flatcc_fb_read_file+0x128>
 894:	cmp	r7, #0
 898:	beq	8a4 <__flatcc_fb_read_file+0x110>
 89c:	mov	r0, r7
 8a0:	bl	0 <fclose>
 8a4:	cmp	r4, #0
 8a8:	beq	8b4 <__flatcc_fb_read_file+0x120>
 8ac:	mov	r0, r4
 8b0:	bl	0 <free>
 8b4:	str	r6, [r5]
 8b8:	mov	r4, #0
 8bc:	mov	r0, r4
 8c0:	ldr	r4, [sp, #8]
 8c4:	ldr	r5, [sp, #12]
 8c8:	ldr	r6, [sp, #16]
 8cc:	ldr	r7, [sp, #20]
 8d0:	ldr	r8, [sp, #24]
 8d4:	ldr	lr, [sp, #4]
 8d8:	add	sp, sp, #40	; 0x28
 8dc:	bx	lr
 8e0:	.word	0x00000000
