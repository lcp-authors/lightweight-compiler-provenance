
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/hash_tables/value_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ht_clear>:
   0:	push	{r4, lr}
   4:	mov	r4, r0
   8:	ldr	r0, [r0]
   c:	cmp	r0, #0
  10:	beq	18 <ht_clear+0x18>
  14:	bl	0 <free>
  18:	mov	r3, #0
  1c:	str	r3, [r4]
  20:	str	r3, [r4, #4]
  24:	str	r3, [r4, #8]
  28:	str	r3, [r4, #12]
  2c:	pop	{r4, pc}

00000030 <value_hash_function.isra.1>:
  30:	ldrh	r3, [r0, #8]
  34:	cmp	r3, #5
  38:	beq	84 <value_hash_function.isra.1+0x54>
  3c:	cmp	r3, #6
  40:	beq	6c <value_hash_function.isra.1+0x3c>
  44:	cmp	r3, #4
  48:	beq	54 <value_hash_function.isra.1+0x24>
  4c:	mov	r0, #0
  50:	bx	lr
  54:	ldr	r2, [r0]
  58:	ldr	r3, [pc, #60]	; 9c <value_hash_function.isra.1+0x6c>
  5c:	ldr	r0, [pc, #60]	; a0 <value_hash_function.isra.1+0x70>
  60:	eor	r3, r3, r2
  64:	mul	r0, r0, r3
  68:	bx	lr
  6c:	ldrb	r2, [r0]
  70:	ldr	r3, [pc, #44]	; a4 <value_hash_function.isra.1+0x74>
  74:	ldr	r0, [pc, #36]	; a0 <value_hash_function.isra.1+0x70>
  78:	eor	r3, r3, r2
  7c:	mul	r0, r0, r3
  80:	bx	lr
  84:	ldr	r2, [r0]
  88:	ldr	r3, [pc, #24]	; a8 <value_hash_function.isra.1+0x78>
  8c:	ldr	r0, [pc, #12]	; a0 <value_hash_function.isra.1+0x70>
  90:	eor	r3, r3, r2
  94:	mul	r0, r0, r3
  98:	bx	lr
  9c:	.word	0x2f693b56
  a0:	.word	0x9e3779b1
  a4:	.word	0x2f693b54
  a8:	.word	0x2f693b57

000000ac <ht_insert.isra.8>:
  ac:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  b0:	subs	sl, r2, #0
  b4:	beq	274 <ht_insert.isra.8+0x1c8>
  b8:	cmp	sl, #2
  bc:	beq	260 <ht_insert.isra.8+0x1b4>
  c0:	cmp	sl, #1
  c4:	beq	24c <ht_insert.isra.8+0x1a0>
  c8:	ldr	r5, [r0, #12]
  cc:	mov	fp, r3
  d0:	mov	r3, #179	; 0xb3
  d4:	mov	r4, r1
  d8:	mul	r3, r3, r5
  dc:	ldr	r1, [r0, #8]
  e0:	mov	r9, r0
  e4:	cmp	r1, r3, lsr #8
  e8:	bcs	1e8 <ht_insert.isra.8+0x13c>
  ec:	mov	r0, r4
  f0:	bl	30 <value_hash_function.isra.1>
  f4:	sub	r3, fp, #2
  f8:	sub	r5, r5, #1
  fc:	cmp	r3, #1
 100:	ldr	lr, [r9]
 104:	mov	ip, r0
 108:	and	r1, r5, r0
 10c:	bls	200 <ht_insert.isra.8+0x154>
 110:	ldr	r0, [lr, r1, lsl #2]
 114:	add	r1, lr, r1, lsl #2
 118:	cmp	r0, #0
 11c:	moveq	r8, r1
 120:	beq	1d0 <ht_insert.isra.8+0x124>
 124:	add	ip, ip, #1
 128:	mov	r8, #0
 12c:	b	148 <ht_insert.isra.8+0x9c>
 130:	and	r1, r5, ip
 134:	add	ip, ip, #1
 138:	ldr	r0, [lr, r1, lsl #2]
 13c:	add	r1, lr, r1, lsl #2
 140:	cmp	r0, #0
 144:	beq	1c8 <ht_insert.isra.8+0x11c>
 148:	cmp	r0, #2
 14c:	beq	1a4 <ht_insert.isra.8+0xf8>
 150:	ldrh	r2, [r4, #8]
 154:	ldrh	r3, [r0, #8]
 158:	cmp	r3, r2
 15c:	bne	130 <ht_insert.isra.8+0x84>
 160:	cmp	r3, #5
 164:	beq	178 <ht_insert.isra.8+0xcc>
 168:	cmp	r3, #6
 16c:	beq	1b0 <ht_insert.isra.8+0x104>
 170:	cmp	r3, #4
 174:	bne	130 <ht_insert.isra.8+0x84>
 178:	ldrd	r2, [r0]
 17c:	ldrd	r6, [r4]
 180:	cmp	r7, r3
 184:	cmpeq	r6, r2
 188:	moveq	r3, #1
 18c:	movne	r3, #0
 190:	cmp	r3, #0
 194:	beq	130 <ht_insert.isra.8+0x84>
 198:	cmp	fp, #0
 19c:	streq	sl, [r1]
 1a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1a4:	cmp	r8, #0
 1a8:	moveq	r8, r1
 1ac:	b	130 <ht_insert.isra.8+0x84>
 1b0:	ldrb	r3, [r4]
 1b4:	ldrb	r2, [r0]
 1b8:	sub	r3, r3, r2
 1bc:	clz	r3, r3
 1c0:	lsr	r3, r3, #5
 1c4:	b	190 <ht_insert.isra.8+0xe4>
 1c8:	cmp	r8, #0
 1cc:	moveq	r8, r1
 1d0:	ldr	r3, [r9, #8]
 1d4:	mov	r0, #0
 1d8:	add	r3, r3, #1
 1dc:	str	r3, [r9, #8]
 1e0:	str	sl, [r8]
 1e4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1e8:	lsl	r1, r1, #1
 1ec:	bl	2c4 <ht_resize>
 1f0:	cmp	r0, #0
 1f4:	bne	288 <ht_insert.isra.8+0x1dc>
 1f8:	ldr	r5, [r9, #12]
 1fc:	b	ec <ht_insert.isra.8+0x40>
 200:	ldr	r2, [lr, r1, lsl #2]
 204:	ldr	r3, [r9, #8]
 208:	cmp	r2, #0
 20c:	cmpne	r2, #2
 210:	add	r3, r3, #1
 214:	str	r3, [r9, #8]
 218:	add	r1, lr, r1, lsl #2
 21c:	beq	240 <ht_insert.isra.8+0x194>
 220:	add	ip, r0, #1
 224:	and	r1, r5, ip
 228:	add	ip, ip, #1
 22c:	ldr	r3, [lr, r1, lsl #2]
 230:	add	r1, lr, r1, lsl #2
 234:	cmp	r3, #0
 238:	cmpne	r3, #2
 23c:	bne	224 <ht_insert.isra.8+0x178>
 240:	str	sl, [r1]
 244:	mov	r0, #0
 248:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 24c:	ldr	r3, [pc, #80]	; 2a4 <ht_insert.isra.8+0x1f8>
 250:	mov	r2, #116	; 0x74
 254:	ldr	r1, [pc, #76]	; 2a8 <ht_insert.isra.8+0x1fc>
 258:	ldr	r0, [pc, #76]	; 2ac <ht_insert.isra.8+0x200>
 25c:	bl	0 <__assert_fail>
 260:	ldr	r3, [pc, #60]	; 2a4 <ht_insert.isra.8+0x1f8>
 264:	mov	r2, #115	; 0x73
 268:	ldr	r1, [pc, #56]	; 2a8 <ht_insert.isra.8+0x1fc>
 26c:	ldr	r0, [pc, #60]	; 2b0 <ht_insert.isra.8+0x204>
 270:	bl	0 <__assert_fail>
 274:	ldr	r3, [pc, #40]	; 2a4 <ht_insert.isra.8+0x1f8>
 278:	mov	r2, #114	; 0x72
 27c:	ldr	r1, [pc, #36]	; 2a8 <ht_insert.isra.8+0x1fc>
 280:	ldr	r0, [pc, #44]	; 2b4 <ht_insert.isra.8+0x208>
 284:	bl	0 <__assert_fail>
 288:	ldr	r3, [pc, #40]	; 2b8 <ht_insert.isra.8+0x20c>
 28c:	ldr	r2, [pc, #40]	; 2bc <ht_insert.isra.8+0x210>
 290:	ldr	r1, [pc, #40]	; 2c0 <ht_insert.isra.8+0x214>
 294:	ldr	r0, [r3]
 298:	bl	0 <fprintf>
 29c:	mov	r0, #1
 2a0:	bl	0 <exit>
	...
 2ac:	.word	0x0000008c
 2b0:	.word	0x00000074
 2b4:	.word	0x0000005c
 2b8:	.word	0x00000000
 2bc:	.word	0x000000a4
 2c0:	.word	0x000000d8

000002c4 <ht_resize>:
 2c4:	ldr	r3, [r0, #8]
 2c8:	push	{r4, r5, r6, r7, r8, lr}
 2cc:	cmp	r1, r3
 2d0:	movcc	r1, r3
 2d4:	cmp	r1, #2
 2d8:	sub	sp, sp, #16
 2dc:	mov	r7, r0
 2e0:	ldr	r6, [r0]
 2e4:	mov	r5, #4
 2e8:	bls	300 <ht_resize+0x3c>
 2ec:	mov	r2, #179	; 0xb3
 2f0:	lsl	r5, r5, #1
 2f4:	mul	r3, r2, r5
 2f8:	cmp	r1, r3, lsr #8
 2fc:	bhi	2f0 <ht_resize+0x2c>
 300:	mov	r1, #4
 304:	mov	r0, r5
 308:	bl	0 <calloc>
 30c:	cmp	r0, #0
 310:	str	r0, [sp]
 314:	beq	3b4 <ht_resize+0xf0>
 318:	ldr	r3, [r7, #12]
 31c:	mov	r4, #0
 320:	cmp	r3, r4
 324:	str	r5, [sp, #12]
 328:	str	r4, [sp, #4]
 32c:	subne	r5, r6, #4
 330:	str	r4, [sp, #8]
 334:	movne	r6, sp
 338:	movne	r8, #3
 33c:	bne	34c <ht_resize+0x88>
 340:	b	3ac <ht_resize+0xe8>
 344:	cmp	r3, r4
 348:	bls	37c <ht_resize+0xb8>
 34c:	ldr	r2, [r5, #4]!
 350:	add	r4, r4, #1
 354:	cmp	r2, #0
 358:	cmpne	r2, #2
 35c:	beq	344 <ht_resize+0x80>
 360:	mov	r3, r8
 364:	mov	r1, r2
 368:	mov	r0, r6
 36c:	bl	ac <ht_insert.isra.8>
 370:	ldr	r3, [r7, #12]
 374:	cmp	r3, r4
 378:	bhi	34c <ht_resize+0x88>
 37c:	mov	r0, r7
 380:	bl	0 <ht_clear>
 384:	mov	ip, r6
 388:	mov	lr, #0
 38c:	ldm	ip!, {r0, r1, r2, r3}
 390:	str	r0, [r7]
 394:	str	r1, [r7, #4]
 398:	str	r2, [r7, #8]
 39c:	str	r3, [r7, #12]
 3a0:	mov	r0, lr
 3a4:	add	sp, sp, #16
 3a8:	pop	{r4, r5, r6, r7, r8, pc}
 3ac:	mov	r6, sp
 3b0:	b	37c <ht_resize+0xb8>
 3b4:	mvn	lr, #0
 3b8:	b	3a0 <ht_resize+0xdc>

000003bc <ht_find.isra.5>:
 3bc:	push	{r4, r5, r6, r7, r8, lr}
 3c0:	subs	r5, r0, #0
 3c4:	beq	484 <ht_find.isra.5+0xc8>
 3c8:	ldr	r1, [r1]
 3cc:	mov	r0, r2
 3d0:	sub	r1, r1, #1
 3d4:	mov	r4, r2
 3d8:	bl	30 <value_hash_function.isra.1>
 3dc:	and	r3, r1, r0
 3e0:	mov	ip, r0
 3e4:	ldr	r0, [r5, r3, lsl #2]
 3e8:	cmp	r0, #0
 3ec:	popeq	{r4, r5, r6, r7, r8, pc}
 3f0:	add	ip, ip, #1
 3f4:	b	40c <ht_find.isra.5+0x50>
 3f8:	and	r3, r1, ip
 3fc:	add	ip, ip, #1
 400:	ldr	r0, [r5, r3, lsl #2]
 404:	cmp	r0, #0
 408:	beq	480 <ht_find.isra.5+0xc4>
 40c:	cmp	r0, #2
 410:	beq	3f8 <ht_find.isra.5+0x3c>
 414:	ldrh	r2, [r4, #8]
 418:	ldrh	r3, [r0, #8]
 41c:	cmp	r3, r2
 420:	bne	3f8 <ht_find.isra.5+0x3c>
 424:	cmp	r3, #5
 428:	beq	43c <ht_find.isra.5+0x80>
 42c:	cmp	r3, #6
 430:	beq	460 <ht_find.isra.5+0xa4>
 434:	cmp	r3, #4
 438:	bne	3f8 <ht_find.isra.5+0x3c>
 43c:	ldrd	r2, [r0]
 440:	ldrd	r6, [r4]
 444:	cmp	r7, r3
 448:	cmpeq	r6, r2
 44c:	moveq	r3, #1
 450:	movne	r3, #0
 454:	cmp	r3, #0
 458:	beq	3f8 <ht_find.isra.5+0x3c>
 45c:	pop	{r4, r5, r6, r7, r8, pc}
 460:	ldrb	r3, [r4]
 464:	ldrb	r2, [r0]
 468:	sub	r3, r3, r2
 46c:	clz	r3, r3
 470:	lsr	r3, r3, #5
 474:	cmp	r3, #0
 478:	beq	3f8 <ht_find.isra.5+0x3c>
 47c:	pop	{r4, r5, r6, r7, r8, pc}
 480:	pop	{r4, r5, r6, r7, r8, pc}
 484:	mov	r0, r5
 488:	pop	{r4, r5, r6, r7, r8, pc}

0000048c <ht_remove.isra.6>:
 48c:	push	{r4, r5, r6, r7, r8, lr}
 490:	ldr	r4, [r0]
 494:	cmp	r4, #0
 498:	beq	56c <ht_remove.isra.6+0xe0>
 49c:	ldr	r5, [r0, #12]
 4a0:	mov	r8, r0
 4a4:	mov	r0, r1
 4a8:	bl	30 <value_hash_function.isra.1>
 4ac:	sub	r5, r5, #1
 4b0:	and	ip, r5, r0
 4b4:	mov	lr, r0
 4b8:	ldr	r0, [r4, ip, lsl #2]
 4bc:	add	ip, r4, ip, lsl #2
 4c0:	cmp	r0, #0
 4c4:	popeq	{r4, r5, r6, r7, r8, pc}
 4c8:	add	lr, lr, #1
 4cc:	b	4e8 <ht_remove.isra.6+0x5c>
 4d0:	and	ip, r5, lr
 4d4:	add	lr, lr, #1
 4d8:	ldr	r0, [r4, ip, lsl #2]
 4dc:	add	ip, r4, ip, lsl #2
 4e0:	cmp	r0, #0
 4e4:	beq	568 <ht_remove.isra.6+0xdc>
 4e8:	cmp	r0, #2
 4ec:	beq	4d0 <ht_remove.isra.6+0x44>
 4f0:	ldrh	r2, [r1, #8]
 4f4:	ldrh	r3, [r0, #8]
 4f8:	cmp	r3, r2
 4fc:	bne	4d0 <ht_remove.isra.6+0x44>
 500:	cmp	r3, #5
 504:	beq	518 <ht_remove.isra.6+0x8c>
 508:	cmp	r3, #6
 50c:	beq	550 <ht_remove.isra.6+0xc4>
 510:	cmp	r3, #4
 514:	bne	4d0 <ht_remove.isra.6+0x44>
 518:	ldrd	r2, [r0]
 51c:	ldrd	r6, [r1]
 520:	cmp	r7, r3
 524:	cmpeq	r6, r2
 528:	moveq	r3, #1
 52c:	movne	r3, #0
 530:	cmp	r3, #0
 534:	beq	4d0 <ht_remove.isra.6+0x44>
 538:	ldr	r3, [r8, #8]
 53c:	mov	r2, #2
 540:	sub	r3, r3, #1
 544:	str	r2, [ip]
 548:	str	r3, [r8, #8]
 54c:	pop	{r4, r5, r6, r7, r8, pc}
 550:	ldrb	r3, [r1]
 554:	ldrb	r2, [r0]
 558:	sub	r3, r3, r2
 55c:	clz	r3, r3
 560:	lsr	r3, r3, #5
 564:	b	530 <ht_remove.isra.6+0xa4>
 568:	pop	{r4, r5, r6, r7, r8, pc}
 56c:	mov	r0, r4
 570:	pop	{r4, r5, r6, r7, r8, pc}

00000574 <fb_value_set_clear>:
 574:	b	0 <ht_clear>

00000578 <fb_value_set_destroy>:
 578:	push	{r4, r5, r6, r7, r8, lr}
 57c:	subs	r7, r1, #0
 580:	mov	r6, r0
 584:	beq	5d8 <fb_value_set_destroy+0x60>
 588:	ldr	r3, [r0, #12]
 58c:	ldr	r5, [r0]
 590:	cmp	r3, #0
 594:	beq	5d8 <fb_value_set_destroy+0x60>
 598:	mov	r8, r2
 59c:	sub	r5, r5, #4
 5a0:	mov	r4, #0
 5a4:	b	5b0 <fb_value_set_destroy+0x38>
 5a8:	cmp	r4, r3
 5ac:	bcs	5d8 <fb_value_set_destroy+0x60>
 5b0:	ldr	r1, [r5, #4]!
 5b4:	add	r4, r4, #1
 5b8:	cmp	r1, #0
 5bc:	cmpne	r1, #2
 5c0:	beq	5a8 <fb_value_set_destroy+0x30>
 5c4:	mov	r0, r8
 5c8:	blx	r7
 5cc:	ldr	r3, [r6, #12]
 5d0:	cmp	r4, r3
 5d4:	bcc	5b0 <fb_value_set_destroy+0x38>
 5d8:	mov	r0, r6
 5dc:	pop	{r4, r5, r6, r7, r8, lr}
 5e0:	b	0 <ht_clear>

000005e4 <fb_value_set_init>:
 5e4:	cmp	r1, #2
 5e8:	push	{r4, r5, r6, lr}
 5ec:	mov	r4, #4
 5f0:	mov	r5, r0
 5f4:	bls	60c <fb_value_set_init+0x28>
 5f8:	mov	r2, #179	; 0xb3
 5fc:	lsl	r4, r4, #1
 600:	mul	r3, r2, r4
 604:	cmp	r1, r3, lsr #8
 608:	bhi	5fc <fb_value_set_init+0x18>
 60c:	mov	r1, #4
 610:	mov	r0, r4
 614:	bl	0 <calloc>
 618:	cmp	r0, #0
 61c:	str	r0, [r5]
 620:	movne	r0, #0
 624:	strne	r4, [r5, #12]
 628:	strne	r0, [r5, #4]
 62c:	strne	r0, [r5, #8]
 630:	mvneq	r0, #0
 634:	pop	{r4, r5, r6, pc}

00000638 <fb_value_set_resize>:
 638:	b	2c4 <ht_resize>

0000063c <fb_value_set_insert>:
 63c:	mov	r2, r3
 640:	ldr	r3, [sp]
 644:	b	ac <ht_insert.isra.8>

00000648 <fb_value_set_insert_item>:
 648:	mov	r3, r2
 64c:	mov	r2, r1
 650:	b	ac <ht_insert.isra.8>

00000654 <fb_value_set_find>:
 654:	mov	r3, r0
 658:	mov	r2, r1
 65c:	ldr	r0, [r0]
 660:	add	r1, r3, #12
 664:	b	3bc <ht_find.isra.5>

00000668 <fb_value_set_find_item>:
 668:	mov	r3, r0
 66c:	mov	r2, r1
 670:	ldr	r0, [r0]
 674:	add	r1, r3, #12
 678:	b	3bc <ht_find.isra.5>

0000067c <fb_value_set_remove>:
 67c:	b	48c <ht_remove.isra.6>

00000680 <fb_value_set_remove_item>:
 680:	b	48c <ht_remove.isra.6>

00000684 <fb_value_set_visit>:
 684:	ldr	r3, [r0, #12]
 688:	push	{r4, r5, r6, r7, r8, lr}
 68c:	cmp	r3, #0
 690:	ldr	r5, [r0]
 694:	popeq	{r4, r5, r6, r7, r8, pc}
 698:	mov	r7, r2
 69c:	mov	r6, r1
 6a0:	mov	r8, r0
 6a4:	sub	r5, r5, #4
 6a8:	mov	r4, #0
 6ac:	b	6b8 <fb_value_set_visit+0x34>
 6b0:	cmp	r4, r3
 6b4:	bcs	6e0 <fb_value_set_visit+0x5c>
 6b8:	ldr	r1, [r5, #4]!
 6bc:	add	r4, r4, #1
 6c0:	cmp	r1, #0
 6c4:	cmpne	r1, #2
 6c8:	beq	6b0 <fb_value_set_visit+0x2c>
 6cc:	mov	r0, r7
 6d0:	blx	r6
 6d4:	ldr	r3, [r8, #12]
 6d8:	cmp	r4, r3
 6dc:	bcc	6b8 <fb_value_set_visit+0x34>
 6e0:	pop	{r4, r5, r6, r7, r8, pc}
