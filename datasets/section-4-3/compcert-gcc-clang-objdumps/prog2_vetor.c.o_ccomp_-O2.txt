
../repos/prog2/CMakeFiles/MT1E1-1.1.dir/Extras/Miniteste1-Exemplo1/1/vetor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <vetor_novo>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	mov	r0, #12
  14:	bl	0 <malloc>
  18:	cmp	r0, #0
  1c:	bne	28 <vetor_novo+0x28>
  20:	mov	r0, #0
  24:	b	40 <vetor_novo+0x40>
  28:	mov	r1, #0
  2c:	str	r1, [r0]
  30:	mov	r2, #0
  34:	str	r2, [r0, #4]
  38:	mov	r1, #0
  3c:	str	r1, [r0, #8]
  40:	ldr	lr, [sp, #4]
  44:	add	sp, sp, #8
  48:	bx	lr

0000004c <vetor_apaga>:
  4c:	mov	ip, sp
  50:	sub	sp, sp, #16
  54:	str	ip, [sp]
  58:	str	lr, [sp, #4]
  5c:	str	r4, [sp, #8]
  60:	str	r5, [sp, #12]
  64:	mov	r4, r0
  68:	cmp	r4, #0
  6c:	beq	b4 <vetor_apaga+0x68>
  70:	mov	r5, #0
  74:	ldr	r1, [r4]
  78:	cmp	r5, r1
  7c:	bge	94 <vetor_apaga+0x48>
  80:	ldr	r0, [r4, #8]
  84:	ldr	r0, [r0, r5, lsl #2]
  88:	bl	0 <free>
  8c:	add	r5, r5, #1
  90:	b	74 <vetor_apaga+0x28>
  94:	ldr	r0, [r4, #8]
  98:	bl	0 <free>
  9c:	mov	r0, r4
  a0:	ldr	r4, [sp, #8]
  a4:	ldr	r5, [sp, #12]
  a8:	ldr	lr, [sp, #4]
  ac:	add	sp, sp, #16
  b0:	b	0 <free>
  b4:	ldr	r4, [sp, #8]
  b8:	ldr	r5, [sp, #12]
  bc:	ldr	lr, [sp, #4]
  c0:	add	sp, sp, #16
  c4:	bx	lr

000000c8 <vetor_atribui>:
  c8:	mov	ip, sp
  cc:	sub	sp, sp, #24
  d0:	str	ip, [sp]
  d4:	str	lr, [sp, #4]
  d8:	str	r4, [sp, #8]
  dc:	str	r5, [sp, #12]
  e0:	str	r6, [sp, #16]
  e4:	str	r7, [sp, #20]
  e8:	mov	r6, r2
  ec:	mov	r4, r1
  f0:	mov	r7, r0
  f4:	mov	r2, #1
  f8:	cmp	r4, #0
  fc:	movlt	r3, #1
 100:	movge	r3, #0
 104:	cmp	r7, #0
 108:	moveq	r3, r2
 10c:	movne	r3, r3
 110:	cmp	r3, #0
 114:	bne	18c <vetor_atribui+0xc4>
 118:	ldr	r1, [r7]
 11c:	cmp	r4, r1
 120:	bge	18c <vetor_atribui+0xc4>
 124:	mov	r0, r6
 128:	bl	0 <strlen>
 12c:	mov	r5, r0
 130:	ldr	r1, [r7, #8]
 134:	ldr	r0, [r1, r4, lsl #2]
 138:	bl	0 <strlen>
 13c:	cmp	r5, r0
 140:	bls	174 <vetor_atribui+0xac>
 144:	ldr	r0, [r7, #8]
 148:	ldr	r0, [r0, r4, lsl #2]
 14c:	add	r1, r5, #1
 150:	bl	0 <realloc>
 154:	ldr	ip, [r7, #8]
 158:	str	r0, [ip, r4, lsl #2]
 15c:	ldr	r0, [r7, #8]
 160:	ldr	r3, [r0, r4, lsl #2]
 164:	cmp	r3, #0
 168:	bne	174 <vetor_atribui+0xac>
 16c:	mvn	r0, #0
 170:	b	190 <vetor_atribui+0xc8>
 174:	ldr	r1, [r7, #8]
 178:	ldr	r0, [r1, r4, lsl #2]
 17c:	mov	r1, r6
 180:	bl	0 <strcpy>
 184:	mov	r0, r4
 188:	b	190 <vetor_atribui+0xc8>
 18c:	mvn	r0, #0
 190:	ldr	r4, [sp, #8]
 194:	ldr	r5, [sp, #12]
 198:	ldr	r6, [sp, #16]
 19c:	ldr	r7, [sp, #20]
 1a0:	ldr	lr, [sp, #4]
 1a4:	add	sp, sp, #24
 1a8:	bx	lr

000001ac <vetor_tamanho>:
 1ac:	mov	ip, sp
 1b0:	sub	sp, sp, #8
 1b4:	str	ip, [sp]
 1b8:	str	lr, [sp, #4]
 1bc:	cmp	r0, #0
 1c0:	bne	1cc <vetor_tamanho+0x20>
 1c4:	mvn	r0, #0
 1c8:	b	1d0 <vetor_tamanho+0x24>
 1cc:	ldr	r0, [r0]
 1d0:	ldr	lr, [sp, #4]
 1d4:	add	sp, sp, #8
 1d8:	bx	lr

000001dc <vetor_elemento>:
 1dc:	mov	ip, sp
 1e0:	sub	sp, sp, #8
 1e4:	str	ip, [sp]
 1e8:	str	lr, [sp, #4]
 1ec:	mov	r2, #1
 1f0:	cmp	r1, #0
 1f4:	movlt	ip, #1
 1f8:	movge	ip, #0
 1fc:	cmp	r0, #0
 200:	moveq	r2, r2
 204:	movne	r2, ip
 208:	cmp	r2, #0
 20c:	bne	228 <vetor_elemento+0x4c>
 210:	ldr	r2, [r0]
 214:	cmp	r1, r2
 218:	bge	228 <vetor_elemento+0x4c>
 21c:	ldr	r3, [r0, #8]
 220:	ldr	r0, [r3, r1, lsl #2]
 224:	b	22c <vetor_elemento+0x50>
 228:	mov	r0, #0
 22c:	ldr	lr, [sp, #4]
 230:	add	sp, sp, #8
 234:	bx	lr

00000238 <vetor_insere>:
 238:	mov	ip, sp
 23c:	sub	sp, sp, #24
 240:	str	ip, [sp]
 244:	str	lr, [sp, #4]
 248:	str	r4, [sp, #8]
 24c:	str	r5, [sp, #12]
 250:	str	r6, [sp, #16]
 254:	mov	r5, r2
 258:	mov	r4, r1
 25c:	mov	r6, r0
 260:	mov	r2, #1
 264:	cmp	r5, #0
 268:	movlt	ip, #1
 26c:	movge	ip, #0
 270:	cmp	r6, #0
 274:	moveq	r2, r2
 278:	movne	r2, ip
 27c:	cmp	r2, #0
 280:	bne	360 <vetor_insere+0x128>
 284:	ldr	r2, [r6]
 288:	cmp	r5, r2
 28c:	bgt	360 <vetor_insere+0x128>
 290:	ldr	r1, [r6, #4]
 294:	cmp	r2, r1
 298:	bne	2dc <vetor_insere+0xa4>
 29c:	cmp	r1, #0
 2a0:	beq	2b0 <vetor_insere+0x78>
 2a4:	lsl	r0, r1, #1
 2a8:	str	r0, [r6, #4]
 2ac:	b	2b8 <vetor_insere+0x80>
 2b0:	mov	r1, #1
 2b4:	str	r1, [r6, #4]
 2b8:	ldr	r0, [r6, #8]
 2bc:	ldr	r1, [r6, #4]
 2c0:	lsl	r1, r1, #2
 2c4:	bl	0 <realloc>
 2c8:	str	r0, [r6, #8]
 2cc:	cmp	r0, #0
 2d0:	bne	2dc <vetor_insere+0xa4>
 2d4:	mvn	r0, #0
 2d8:	b	364 <vetor_insere+0x12c>
 2dc:	ldr	r0, [r6]
 2e0:	sub	r1, r0, #1
 2e4:	cmp	r1, r5
 2e8:	blt	310 <vetor_insere+0xd8>
 2ec:	ldr	r0, [r6, #8]
 2f0:	lsl	ip, r1, #2
 2f4:	add	ip, r0, ip
 2f8:	add	r2, ip, #4
 2fc:	add	r3, r0, r1, lsl #2
 300:	ldr	lr, [r3]
 304:	str	lr, [r2]
 308:	sub	r1, r1, #1
 30c:	b	2e4 <vetor_insere+0xac>
 310:	mov	r0, r4
 314:	bl	0 <strlen>
 318:	add	r0, r0, #1
 31c:	mov	r1, #1
 320:	bl	0 <calloc>
 324:	ldr	r2, [r6, #8]
 328:	str	r0, [r2, r5, lsl #2]
 32c:	ldr	r3, [r6, #8]
 330:	ldr	r0, [r3, r5, lsl #2]
 334:	cmp	r0, #0
 338:	bne	344 <vetor_insere+0x10c>
 33c:	mvn	r0, #0
 340:	b	364 <vetor_insere+0x12c>
 344:	mov	r1, r4
 348:	bl	0 <strcpy>
 34c:	ldr	r3, [r6]
 350:	add	r0, r3, #1
 354:	str	r0, [r6]
 358:	mov	r0, r5
 35c:	b	364 <vetor_insere+0x12c>
 360:	mvn	r0, #0
 364:	ldr	r4, [sp, #8]
 368:	ldr	r5, [sp, #12]
 36c:	ldr	r6, [sp, #16]
 370:	ldr	lr, [sp, #4]
 374:	add	sp, sp, #24
 378:	bx	lr

0000037c <vetor_remove>:
 37c:	mov	ip, sp
 380:	sub	sp, sp, #16
 384:	str	ip, [sp]
 388:	str	lr, [sp, #4]
 38c:	str	r4, [sp, #8]
 390:	str	r5, [sp, #12]
 394:	mov	r4, r1
 398:	mov	r5, r0
 39c:	mov	ip, #1
 3a0:	cmp	r4, #0
 3a4:	movlt	r2, #1
 3a8:	movge	r2, #0
 3ac:	cmp	r5, #0
 3b0:	moveq	r2, ip
 3b4:	movne	r2, r2
 3b8:	cmp	r2, #0
 3bc:	bne	41c <vetor_remove+0xa0>
 3c0:	ldr	r2, [r5]
 3c4:	cmp	r4, r2
 3c8:	bge	41c <vetor_remove+0xa0>
 3cc:	ldr	r1, [r5, #8]
 3d0:	ldr	r0, [r1, r4, lsl #2]
 3d4:	bl	0 <free>
 3d8:	add	r4, r4, #1
 3dc:	ldr	r1, [r5]
 3e0:	cmp	r4, r1
 3e4:	bge	40c <vetor_remove+0x90>
 3e8:	ldr	r0, [r5, #8]
 3ec:	lsl	r3, r4, #2
 3f0:	add	r1, r0, r3
 3f4:	sub	r3, r1, #4
 3f8:	add	ip, r0, r4, lsl #2
 3fc:	ldr	lr, [ip]
 400:	str	lr, [r3]
 404:	add	r4, r4, #1
 408:	b	3dc <vetor_remove+0x60>
 40c:	sub	r0, r1, #1
 410:	str	r0, [r5]
 414:	mov	r0, #0
 418:	b	420 <vetor_remove+0xa4>
 41c:	mvn	r0, #0
 420:	ldr	r4, [sp, #8]
 424:	ldr	r5, [sp, #12]
 428:	ldr	lr, [sp, #4]
 42c:	add	sp, sp, #16
 430:	bx	lr

00000434 <vetor_pesquisa>:
 434:	mov	ip, sp
 438:	sub	sp, sp, #24
 43c:	str	ip, [sp]
 440:	str	lr, [sp, #4]
 444:	str	r4, [sp, #8]
 448:	str	r5, [sp, #12]
 44c:	str	r6, [sp, #16]
 450:	mov	r5, r1
 454:	mov	r6, r0
 458:	cmp	r6, #0
 45c:	bne	468 <vetor_pesquisa+0x34>
 460:	mvn	r0, #0
 464:	b	4a4 <vetor_pesquisa+0x70>
 468:	mov	r4, #0
 46c:	ldr	r3, [r6]
 470:	cmp	r4, r3
 474:	bge	4a0 <vetor_pesquisa+0x6c>
 478:	ldr	r0, [r6, #8]
 47c:	ldr	r0, [r0, r4, lsl #2]
 480:	mov	r1, r5
 484:	bl	0 <strcmp>
 488:	cmp	r0, #0
 48c:	bne	498 <vetor_pesquisa+0x64>
 490:	mov	r0, r4
 494:	b	4a4 <vetor_pesquisa+0x70>
 498:	add	r4, r4, #1
 49c:	b	46c <vetor_pesquisa+0x38>
 4a0:	mvn	r0, #0
 4a4:	ldr	r4, [sp, #8]
 4a8:	ldr	r5, [sp, #12]
 4ac:	ldr	r6, [sp, #16]
 4b0:	ldr	lr, [sp, #4]
 4b4:	add	sp, sp, #24
 4b8:	bx	lr

000004bc <vetor_ordena>:
 4bc:	mov	ip, sp
 4c0:	sub	sp, sp, #24
 4c4:	str	ip, [sp]
 4c8:	str	lr, [sp, #4]
 4cc:	str	r4, [sp, #8]
 4d0:	str	r5, [sp, #12]
 4d4:	str	r6, [sp, #16]
 4d8:	str	r7, [sp, #20]
 4dc:	mov	r7, r0
 4e0:	cmp	r7, #0
 4e4:	bne	4f0 <vetor_ordena+0x34>
 4e8:	mvn	r0, #0
 4ec:	b	570 <vetor_ordena+0xb4>
 4f0:	mov	r5, #1
 4f4:	ldr	r0, [r7]
 4f8:	cmp	r5, r0
 4fc:	bge	56c <vetor_ordena+0xb0>
 500:	ldr	r2, [r7, #8]
 504:	ldr	r4, [r2, r5, lsl #2]
 508:	mov	r6, r5
 50c:	cmp	r6, #0
 510:	ble	55c <vetor_ordena+0xa0>
 514:	ldr	r2, [r7, #8]
 518:	lsl	r1, r6, #2
 51c:	add	ip, r2, r1
 520:	sub	lr, ip, #4096	; 0x1000
 524:	ldr	r1, [lr, #4092]	; 0xffc
 528:	mov	r0, r4
 52c:	bl	0 <strcmp>
 530:	cmp	r0, #0
 534:	bge	55c <vetor_ordena+0xa0>
 538:	ldr	r0, [r7, #8]
 53c:	add	ip, r0, r6, lsl #2
 540:	lsl	r1, r6, #2
 544:	add	r0, r0, r1
 548:	sub	r3, r0, #4
 54c:	ldr	lr, [r3]
 550:	str	lr, [ip]
 554:	sub	r6, r6, #1
 558:	b	50c <vetor_ordena+0x50>
 55c:	ldr	r0, [r7, #8]
 560:	str	r4, [r0, r6, lsl #2]
 564:	add	r5, r5, #1
 568:	b	4f4 <vetor_ordena+0x38>
 56c:	mov	r0, #0
 570:	ldr	r4, [sp, #8]
 574:	ldr	r5, [sp, #12]
 578:	ldr	r6, [sp, #16]
 57c:	ldr	r7, [sp, #20]
 580:	ldr	lr, [sp, #4]
 584:	add	sp, sp, #24
 588:	bx	lr
