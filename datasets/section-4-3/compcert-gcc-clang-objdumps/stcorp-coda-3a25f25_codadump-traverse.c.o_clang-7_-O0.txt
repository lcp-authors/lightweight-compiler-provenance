
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadump.dir/tools/codadump/codadump-traverse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_full_field_name>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #112	; 0x70
       c:	str	r0, [fp, #-4]
      10:	str	r1, [fp, #-8]
      14:	str	r2, [fp, #-12]
      18:	ldr	r0, [fp, #-8]
      1c:	cmp	r0, #1
      20:	bne	220 <print_full_field_name+0x220>
      24:	movw	r0, #0
      28:	str	r0, [fp, #-20]	; 0xffffffec
      2c:	str	r0, [fp, #-24]	; 0xffffffe8
      30:	str	r0, [fp, #-16]
      34:	ldr	r0, [fp, #-16]
      38:	movw	r1, #0
      3c:	movt	r1, #0
      40:	ldr	r1, [r1, #136]	; 0x88
      44:	cmp	r0, r1
      48:	bge	1bc <print_full_field_name+0x1bc>
      4c:	movw	r0, #0
      50:	movt	r0, #0
      54:	add	r0, r0, #8
      58:	ldr	r1, [fp, #-16]
      5c:	movw	r2, #0
      60:	movt	r2, #0
      64:	add	r1, r2, r1, lsl #2
      68:	add	r1, r1, #8
      6c:	ldr	r1, [r1]
      70:	str	r0, [fp, #-40]	; 0xffffffd8
      74:	mov	r0, r1
      78:	sub	r1, fp, #28
      7c:	bl	0 <coda_type_get_class>
      80:	cmp	r0, #0
      84:	beq	94 <print_full_field_name+0x94>
      88:	movw	r0, #0
      8c:	movt	r0, #0
      90:	blx	r0
      94:	ldr	r0, [fp, #-28]	; 0xffffffe4
      98:	cmp	r0, #0
      9c:	str	r0, [fp, #-44]	; 0xffffffd4
      a0:	beq	b8 <print_full_field_name+0xb8>
      a4:	b	a8 <print_full_field_name+0xa8>
      a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
      ac:	cmp	r0, #1
      b0:	beq	110 <print_full_field_name+0x110>
      b4:	b	1a4 <print_full_field_name+0x1a4>
      b8:	movw	r0, #3620	; 0xe24
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	add	r0, r1, r0
      c8:	ldr	r1, [fp, #-4]
      cc:	ldr	r2, [fp, #-20]	; 0xffffffec
      d0:	movw	r3, #0
      d4:	movt	r3, #0
      d8:	add	r2, r3, r2, lsl #2
      dc:	movw	r3, #3620	; 0xe24
      e0:	add	r2, r2, r3
      e4:	ldr	r2, [r2]
      e8:	str	r0, [fp, #-48]	; 0xffffffd0
      ec:	mov	r0, r1
      f0:	movw	r1, #0
      f4:	movt	r1, #0
      f8:	bl	0 <fprintf>
      fc:	ldr	r1, [fp, #-20]	; 0xffffffec
     100:	add	r1, r1, #1
     104:	str	r1, [fp, #-20]	; 0xffffffec
     108:	str	r0, [fp, #-52]	; 0xffffffcc
     10c:	b	1a8 <print_full_field_name+0x1a8>
     110:	ldr	r0, [fp, #-16]
     114:	cmp	r0, #0
     118:	bne	130 <print_full_field_name+0x130>
     11c:	ldr	r0, [fp, #-4]
     120:	movw	r1, #0
     124:	movt	r1, #0
     128:	bl	0 <fprintf>
     12c:	str	r0, [sp, #56]	; 0x38
     130:	movw	r0, #0
     134:	movt	r0, #0
     138:	add	r0, r0, #800	; 0x320
     13c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     140:	movw	r2, #80	; 0x50
     144:	mul	r1, r1, r2
     148:	add	r0, r0, r1
     14c:	ldr	r0, [r0, #4]
     150:	cmp	r0, #0
     154:	ble	194 <print_full_field_name+0x194>
     158:	ldr	r0, [fp, #-4]
     15c:	movw	r1, #0
     160:	movt	r1, #0
     164:	bl	0 <fprintf>
     168:	ldr	r1, [fp, #-4]
     16c:	ldr	lr, [fp, #-24]	; 0xffffffe8
     170:	str	r0, [sp, #52]	; 0x34
     174:	mov	r0, r1
     178:	mov	r1, lr
     17c:	bl	4a8 <print_array_dim>
     180:	ldr	r0, [fp, #-4]
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	bl	0 <fprintf>
     190:	str	r0, [sp, #48]	; 0x30
     194:	ldr	r0, [fp, #-24]	; 0xffffffe8
     198:	add	r0, r0, #1
     19c:	str	r0, [fp, #-24]	; 0xffffffe8
     1a0:	b	1a8 <print_full_field_name+0x1a8>
     1a4:	b	1a8 <print_full_field_name+0x1a8>
     1a8:	b	1ac <print_full_field_name+0x1ac>
     1ac:	ldr	r0, [fp, #-16]
     1b0:	add	r0, r0, #1
     1b4:	str	r0, [fp, #-16]
     1b8:	b	34 <print_full_field_name+0x34>
     1bc:	ldr	r0, [fp, #-12]
     1c0:	cmp	r0, #0
     1c4:	beq	21c <print_full_field_name+0x21c>
     1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1cc:	movw	r1, #0
     1d0:	movt	r1, #0
     1d4:	ldr	r1, [r1, #3360]	; 0xd20
     1d8:	cmp	r0, r1
     1dc:	bge	21c <print_full_field_name+0x21c>
     1e0:	ldr	r0, [fp, #-4]
     1e4:	movw	r1, #0
     1e8:	movt	r1, #0
     1ec:	bl	0 <fprintf>
     1f0:	ldr	r1, [fp, #-4]
     1f4:	ldr	lr, [fp, #-24]	; 0xffffffe8
     1f8:	str	r0, [sp, #44]	; 0x2c
     1fc:	mov	r0, r1
     200:	mov	r1, lr
     204:	bl	4a8 <print_array_dim>
     208:	ldr	r0, [fp, #-4]
     20c:	movw	r1, #0
     210:	movt	r1, #0
     214:	bl	0 <fprintf>
     218:	str	r0, [sp, #40]	; 0x28
     21c:	b	4a0 <print_full_field_name+0x4a0>
     220:	movw	r0, #0
     224:	str	r0, [fp, #-16]
     228:	ldr	r0, [fp, #-16]
     22c:	movw	r1, #0
     230:	movt	r1, #0
     234:	ldr	r1, [r1, #3748]	; 0xea4
     238:	cmp	r0, r1
     23c:	bge	2b8 <print_full_field_name+0x2b8>
     240:	ldr	r0, [fp, #-16]
     244:	cmp	r0, #0
     248:	ble	260 <print_full_field_name+0x260>
     24c:	ldr	r0, [fp, #-4]
     250:	movw	r1, #0
     254:	movt	r1, #0
     258:	bl	0 <fprintf>
     25c:	str	r0, [sp, #36]	; 0x24
     260:	movw	r0, #3620	; 0xe24
     264:	movw	r1, #0
     268:	movt	r1, #0
     26c:	add	r0, r1, r0
     270:	ldr	r1, [fp, #-4]
     274:	ldr	r2, [fp, #-16]
     278:	movw	r3, #0
     27c:	movt	r3, #0
     280:	add	r2, r3, r2, lsl #2
     284:	movw	r3, #3620	; 0xe24
     288:	add	r2, r2, r3
     28c:	ldr	r2, [r2]
     290:	str	r0, [sp, #32]
     294:	mov	r0, r1
     298:	movw	r1, #0
     29c:	movt	r1, #0
     2a0:	bl	0 <fprintf>
     2a4:	str	r0, [sp, #28]
     2a8:	ldr	r0, [fp, #-16]
     2ac:	add	r0, r0, #1
     2b0:	str	r0, [fp, #-16]
     2b4:	b	228 <print_full_field_name+0x228>
     2b8:	ldr	r0, [fp, #-8]
     2bc:	cmp	r0, #2
     2c0:	bne	49c <print_full_field_name+0x49c>
     2c4:	movw	r0, #0
     2c8:	str	r0, [fp, #-32]	; 0xffffffe0
     2cc:	str	r0, [fp, #-16]
     2d0:	ldr	r0, [fp, #-16]
     2d4:	movw	r1, #0
     2d8:	movt	r1, #0
     2dc:	ldr	r1, [r1, #136]	; 0x88
     2e0:	cmp	r0, r1
     2e4:	bge	3e8 <print_full_field_name+0x3e8>
     2e8:	movw	r0, #0
     2ec:	movt	r0, #0
     2f0:	add	r0, r0, #8
     2f4:	ldr	r1, [fp, #-16]
     2f8:	movw	r2, #0
     2fc:	movt	r2, #0
     300:	add	r1, r2, r1, lsl #2
     304:	add	r1, r1, #8
     308:	ldr	r1, [r1]
     30c:	str	r0, [sp, #24]
     310:	mov	r0, r1
     314:	sub	r1, fp, #36	; 0x24
     318:	bl	0 <coda_type_get_class>
     31c:	cmp	r0, #0
     320:	beq	330 <print_full_field_name+0x330>
     324:	movw	r0, #0
     328:	movt	r0, #0
     32c:	blx	r0
     330:	ldr	r0, [fp, #-36]	; 0xffffffdc
     334:	cmp	r0, #1
     338:	bne	3d4 <print_full_field_name+0x3d4>
     33c:	movw	r0, #0
     340:	movt	r0, #0
     344:	add	r0, r0, #800	; 0x320
     348:	ldr	r1, [fp, #-32]	; 0xffffffe0
     34c:	movw	r2, #80	; 0x50
     350:	mul	r1, r1, r2
     354:	add	r0, r0, r1
     358:	ldr	r0, [r0, #4]
     35c:	cmp	r0, #0
     360:	ble	3d0 <print_full_field_name+0x3d0>
     364:	movw	r0, #0
     368:	movt	r0, #0
     36c:	add	r0, r0, #800	; 0x320
     370:	ldr	r1, [fp, #-32]	; 0xffffffe0
     374:	movw	r2, #80	; 0x50
     378:	mul	r1, r1, r2
     37c:	add	r0, r0, r1
     380:	ldr	r0, [r0]
     384:	cmp	r0, #0
     388:	bne	3a4 <print_full_field_name+0x3a4>
     38c:	ldr	r0, [fp, #-4]
     390:	movw	r1, #0
     394:	movt	r1, #0
     398:	bl	0 <fprintf>
     39c:	str	r0, [sp, #20]
     3a0:	b	3b8 <print_full_field_name+0x3b8>
     3a4:	ldr	r0, [fp, #-4]
     3a8:	movw	r1, #0
     3ac:	movt	r1, #0
     3b0:	bl	0 <fprintf>
     3b4:	str	r0, [sp, #16]
     3b8:	ldr	r0, [fp, #-4]
     3bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
     3c0:	bl	4a8 <print_array_dim>
     3c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     3c8:	add	r0, r0, #1
     3cc:	str	r0, [fp, #-32]	; 0xffffffe0
     3d0:	b	3d4 <print_full_field_name+0x3d4>
     3d4:	b	3d8 <print_full_field_name+0x3d8>
     3d8:	ldr	r0, [fp, #-16]
     3dc:	add	r0, r0, #1
     3e0:	str	r0, [fp, #-16]
     3e4:	b	2d0 <print_full_field_name+0x2d0>
     3e8:	ldr	r0, [fp, #-12]
     3ec:	cmp	r0, #0
     3f0:	beq	478 <print_full_field_name+0x478>
     3f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     3f8:	movw	r1, #0
     3fc:	movt	r1, #0
     400:	ldr	r1, [r1, #3360]	; 0xd20
     404:	cmp	r0, r1
     408:	bge	478 <print_full_field_name+0x478>
     40c:	movw	r0, #0
     410:	movt	r0, #0
     414:	add	r0, r0, #800	; 0x320
     418:	ldr	r1, [fp, #-32]	; 0xffffffe0
     41c:	movw	r2, #80	; 0x50
     420:	mul	r1, r1, r2
     424:	add	r0, r0, r1
     428:	ldr	r0, [r0]
     42c:	cmp	r0, #0
     430:	bne	44c <print_full_field_name+0x44c>
     434:	ldr	r0, [fp, #-4]
     438:	movw	r1, #0
     43c:	movt	r1, #0
     440:	bl	0 <fprintf>
     444:	str	r0, [sp, #12]
     448:	b	460 <print_full_field_name+0x460>
     44c:	ldr	r0, [fp, #-4]
     450:	movw	r1, #0
     454:	movt	r1, #0
     458:	bl	0 <fprintf>
     45c:	str	r0, [sp, #8]
     460:	ldr	r0, [fp, #-4]
     464:	ldr	r1, [fp, #-32]	; 0xffffffe0
     468:	bl	4a8 <print_array_dim>
     46c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     470:	add	r0, r0, #1
     474:	str	r0, [fp, #-32]	; 0xffffffe0
     478:	ldr	r0, [fp, #-32]	; 0xffffffe0
     47c:	cmp	r0, #0
     480:	ble	498 <print_full_field_name+0x498>
     484:	ldr	r0, [fp, #-4]
     488:	movw	r1, #0
     48c:	movt	r1, #0
     490:	bl	0 <fprintf>
     494:	str	r0, [sp, #4]
     498:	b	49c <print_full_field_name+0x49c>
     49c:	b	4a0 <print_full_field_name+0x4a0>
     4a0:	mov	sp, fp
     4a4:	pop	{fp, pc}

000004a8 <print_array_dim>:
     4a8:	push	{fp, lr}
     4ac:	mov	fp, sp
     4b0:	sub	sp, sp, #56	; 0x38
     4b4:	movw	r2, #0
     4b8:	movt	r2, #0
     4bc:	add	r2, r2, #800	; 0x320
     4c0:	str	r0, [fp, #-4]
     4c4:	str	r1, [fp, #-8]
     4c8:	ldr	r0, [fp, #-8]
     4cc:	movw	r1, #80	; 0x50
     4d0:	mul	r0, r0, r1
     4d4:	add	r0, r2, r0
     4d8:	str	r0, [fp, #-12]
     4dc:	movw	r0, #0
     4e0:	str	r0, [fp, #-16]
     4e4:	ldr	r0, [fp, #-16]
     4e8:	ldr	r1, [fp, #-12]
     4ec:	ldr	r1, [r1, #4]
     4f0:	cmp	r0, r1
     4f4:	bge	68c <print_array_dim+0x1e4>
     4f8:	ldr	r0, [fp, #-16]
     4fc:	cmp	r0, #0
     500:	ble	518 <print_array_dim+0x70>
     504:	ldr	r0, [fp, #-4]
     508:	movw	r1, #0
     50c:	movt	r1, #0
     510:	bl	0 <fprintf>
     514:	str	r0, [fp, #-20]	; 0xffffffec
     518:	movw	r0, #0
     51c:	movt	r0, #0
     520:	ldr	r0, [r0]
     524:	cmp	r0, #0
     528:	beq	618 <print_array_dim+0x170>
     52c:	movw	r0, #0
     530:	movt	r0, #0
     534:	add	r0, r0, #72	; 0x48
     538:	ldr	r1, [fp, #-12]
     53c:	ldr	r1, [r1]
     540:	ldr	r2, [fp, #-16]
     544:	add	r1, r1, r2
     548:	movw	r2, #0
     54c:	movt	r2, #0
     550:	add	r1, r2, r1, lsl #2
     554:	add	r1, r1, #72	; 0x48
     558:	ldr	r1, [r1]
     55c:	cmp	r1, #0
     560:	str	r0, [fp, #-24]	; 0xffffffe8
     564:	beq	5c8 <print_array_dim+0x120>
     568:	movw	r0, #0
     56c:	movt	r0, #0
     570:	add	r0, r0, #4
     574:	ldr	r1, [fp, #-4]
     578:	ldr	r2, [fp, #-12]
     57c:	ldr	r2, [r2]
     580:	ldr	r3, [fp, #-16]
     584:	add	r2, r2, r3
     588:	movw	r3, #0
     58c:	movt	r3, #0
     590:	add	r2, r3, r2, lsl #2
     594:	ldr	r3, [r2, #36]	; 0x24
     598:	add	r2, r2, #4
     59c:	ldr	r2, [r2]
     5a0:	str	r0, [sp, #28]
     5a4:	mov	r0, r1
     5a8:	movw	r1, #0
     5ac:	movt	r1, #0
     5b0:	str	r2, [sp, #24]
     5b4:	mov	r2, r3
     5b8:	ldr	r3, [sp, #24]
     5bc:	bl	0 <fprintf>
     5c0:	str	r0, [sp, #20]
     5c4:	b	614 <print_array_dim+0x16c>
     5c8:	movw	r0, #0
     5cc:	movt	r0, #0
     5d0:	add	r0, r0, #4
     5d4:	ldr	r1, [fp, #-4]
     5d8:	ldr	r2, [fp, #-12]
     5dc:	ldr	r2, [r2]
     5e0:	ldr	r3, [fp, #-16]
     5e4:	add	r2, r2, r3
     5e8:	movw	r3, #0
     5ec:	movt	r3, #0
     5f0:	add	r2, r3, r2, lsl #2
     5f4:	add	r2, r2, #4
     5f8:	ldr	r2, [r2]
     5fc:	str	r0, [sp, #16]
     600:	mov	r0, r1
     604:	movw	r1, #0
     608:	movt	r1, #0
     60c:	bl	0 <fprintf>
     610:	str	r0, [sp, #12]
     614:	b	678 <print_array_dim+0x1d0>
     618:	ldr	r0, [fp, #-12]
     61c:	add	r0, r0, #8
     620:	ldr	r1, [fp, #-16]
     624:	add	r0, r0, r1, lsl #2
     628:	ldr	r0, [r0]
     62c:	cmn	r0, #1
     630:	bne	64c <print_array_dim+0x1a4>
     634:	ldr	r0, [fp, #-4]
     638:	movw	r1, #0
     63c:	movt	r1, #0
     640:	bl	0 <fprintf>
     644:	str	r0, [sp, #8]
     648:	b	674 <print_array_dim+0x1cc>
     64c:	ldr	r0, [fp, #-4]
     650:	ldr	r1, [fp, #-12]
     654:	add	r1, r1, #8
     658:	ldr	r2, [fp, #-16]
     65c:	add	r1, r1, r2, lsl #2
     660:	ldr	r2, [r1]
     664:	movw	r1, #0
     668:	movt	r1, #0
     66c:	bl	0 <fprintf>
     670:	str	r0, [sp, #4]
     674:	b	678 <print_array_dim+0x1d0>
     678:	b	67c <print_array_dim+0x1d4>
     67c:	ldr	r0, [fp, #-16]
     680:	add	r0, r0, #1
     684:	str	r0, [fp, #-16]
     688:	b	4e4 <print_array_dim+0x3c>
     68c:	mov	sp, fp
     690:	pop	{fp, pc}

00000694 <traverse_info_init>:
     694:	movw	r0, #0
     698:	movt	r0, #0
     69c:	movw	r1, #0
     6a0:	str	r1, [r0, #4]
     6a4:	str	r1, [r0, #136]	; 0x88
     6a8:	str	r1, [r0, #3360]	; 0xd20
     6ac:	str	r1, [r0, #3748]	; 0xea4
     6b0:	bx	lr

000006b4 <traverse_info_done>:
     6b4:	push	{fp, lr}
     6b8:	mov	fp, sp
     6bc:	sub	sp, sp, #8
     6c0:	movw	r0, #0
     6c4:	movt	r0, #0
     6c8:	ldr	r0, [r0, #4]
     6cc:	movw	r1, #0
     6d0:	cmp	r0, r1
     6d4:	beq	6ec <traverse_info_done+0x38>
     6d8:	movw	r0, #0
     6dc:	movt	r0, #0
     6e0:	ldr	r0, [r0, #4]
     6e4:	bl	0 <coda_close>
     6e8:	str	r0, [sp, #4]
     6ec:	movw	r0, #0
     6f0:	movt	r0, #0
     6f4:	ldr	r0, [r0, #664]	; 0x298
     6f8:	movw	r1, #0
     6fc:	cmp	r0, r1
     700:	beq	714 <traverse_info_done+0x60>
     704:	movw	r0, #0
     708:	movt	r0, #0
     70c:	add	r0, r0, #664	; 0x298
     710:	bl	0 <codadump_filter_remove>
     714:	mov	sp, fp
     718:	pop	{fp, pc}

0000071c <traverse_product>:
     71c:	push	{fp, lr}
     720:	mov	fp, sp
     724:	sub	sp, sp, #24
     728:	movw	r0, #0
     72c:	movt	r0, #0
     730:	add	r1, r0, #4
     734:	ldr	r0, [r0]
     738:	bl	0 <coda_open>
     73c:	str	r0, [fp, #-4]
     740:	ldr	r0, [fp, #-4]
     744:	cmp	r0, #0
     748:	beq	790 <traverse_product+0x74>
     74c:	bl	0 <coda_get_errno>
     750:	ldr	r0, [r0]
     754:	cmn	r0, #21
     758:	bne	790 <traverse_product+0x74>
     75c:	movw	r0, #0
     760:	bl	0 <coda_set_option_use_mmap>
     764:	movw	lr, #0
     768:	movt	lr, #0
     76c:	add	r1, lr, #4
     770:	ldr	lr, [lr]
     774:	str	r0, [fp, #-8]
     778:	mov	r0, lr
     77c:	bl	0 <coda_open>
     780:	str	r0, [fp, #-4]
     784:	movw	r0, #1
     788:	bl	0 <coda_set_option_use_mmap>
     78c:	str	r0, [sp, #12]
     790:	ldr	r0, [fp, #-4]
     794:	cmp	r0, #0
     798:	beq	7a8 <traverse_product+0x8c>
     79c:	movw	r0, #0
     7a0:	movt	r0, #0
     7a4:	blx	r0
     7a8:	movw	r0, #0
     7ac:	movt	r0, #0
     7b0:	add	r1, r0, #144	; 0x90
     7b4:	ldr	r0, [r0, #4]
     7b8:	str	r0, [sp, #8]
     7bc:	mov	r0, r1
     7c0:	ldr	r1, [sp, #8]
     7c4:	bl	0 <coda_cursor_set_product>
     7c8:	cmp	r0, #0
     7cc:	beq	7dc <traverse_product+0xc0>
     7d0:	movw	r0, #0
     7d4:	movt	r0, #0
     7d8:	blx	r0
     7dc:	movw	r0, #0
     7e0:	movt	r0, #0
     7e4:	add	r1, r0, #144	; 0x90
     7e8:	add	r0, r0, #8
     7ec:	movw	r2, #0
     7f0:	movt	r2, #0
     7f4:	ldr	r3, [r2, #136]	; 0x88
     7f8:	add	r2, r2, r3, lsl #2
     7fc:	add	r2, r2, #8
     800:	str	r0, [sp, #4]
     804:	mov	r0, r1
     808:	mov	r1, r2
     80c:	bl	0 <coda_cursor_get_type>
     810:	cmp	r0, #0
     814:	beq	824 <traverse_product+0x108>
     818:	movw	r0, #0
     81c:	movt	r0, #0
     820:	blx	r0
     824:	bl	854 <traverse_data>
     828:	movw	lr, #0
     82c:	movt	lr, #0
     830:	ldr	r0, [lr, #4]
     834:	bl	0 <coda_close>
     838:	movw	lr, #0
     83c:	movt	lr, #0
     840:	movw	r1, #0
     844:	str	r1, [lr, #4]
     848:	str	r0, [sp]
     84c:	mov	sp, fp
     850:	pop	{fp, pc}

00000854 <traverse_data>:
     854:	push	{fp, lr}
     858:	mov	fp, sp
     85c:	sub	sp, sp, #104	; 0x68
     860:	movw	r0, #0
     864:	movt	r0, #0
     868:	add	r0, r0, #8
     86c:	movw	r1, #0
     870:	movt	r1, #0
     874:	ldr	r2, [r1, #136]	; 0x88
     878:	add	r1, r1, r2, lsl #2
     87c:	add	r1, r1, #8
     880:	ldr	r1, [r1]
     884:	str	r0, [fp, #-32]	; 0xffffffe0
     888:	mov	r0, r1
     88c:	sub	r1, fp, #4
     890:	bl	0 <coda_type_get_class>
     894:	cmp	r0, #0
     898:	beq	8a8 <traverse_data+0x54>
     89c:	movw	r0, #0
     8a0:	movt	r0, #0
     8a4:	blx	r0
     8a8:	ldr	r0, [fp, #-4]
     8ac:	cmp	r0, #6
     8b0:	str	r0, [fp, #-36]	; 0xffffffdc
     8b4:	bhi	e9c <traverse_data+0x648>
     8b8:	add	r0, pc, #8
     8bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
     8c0:	ldr	r0, [r0, r1, lsl #2]
     8c4:	mov	pc, r0
     8c8:	.word	0x000008e4
     8cc:	.word	0x00000c10
     8d0:	.word	0x00000cc0
     8d4:	.word	0x00000cc0
     8d8:	.word	0x00000cc0
     8dc:	.word	0x00000cc0
     8e0:	.word	0x00000d70
     8e4:	movw	r0, #0
     8e8:	movt	r0, #0
     8ec:	ldr	r0, [r0, #136]	; 0x88
     8f0:	cmp	r0, #31
     8f4:	blt	8fc <traverse_data+0xa8>
     8f8:	b	e9c <traverse_data+0x648>
     8fc:	movw	r0, #0
     900:	movt	r0, #0
     904:	add	r0, r0, #8
     908:	movw	r1, #0
     90c:	movt	r1, #0
     910:	ldr	r2, [r1, #3748]	; 0xea4
     914:	add	r2, r2, #1
     918:	str	r2, [r1, #3748]	; 0xea4
     91c:	ldr	r2, [r1, #136]	; 0x88
     920:	add	r1, r1, r2, lsl #2
     924:	add	r1, r1, #8
     928:	ldr	r1, [r1]
     92c:	str	r0, [fp, #-40]	; 0xffffffd8
     930:	mov	r0, r1
     934:	sub	r1, fp, #8
     938:	bl	0 <coda_type_get_num_record_fields>
     93c:	cmp	r0, #0
     940:	beq	950 <traverse_data+0xfc>
     944:	movw	r0, #0
     948:	movt	r0, #0
     94c:	blx	r0
     950:	movw	r0, #0
     954:	movt	r0, #0
     958:	add	r0, r0, #664	; 0x298
     95c:	movw	r1, #0
     960:	movt	r1, #0
     964:	ldr	r2, [r1, #136]	; 0x88
     968:	add	r2, r2, #1
     96c:	str	r2, [r1, #136]	; 0x88
     970:	ldr	r2, [r1, #796]	; 0x31c
     974:	add	r1, r1, r2, lsl #2
     978:	add	r1, r1, #664	; 0x298
     97c:	ldr	r1, [r1]
     980:	movw	r2, #0
     984:	cmp	r1, r2
     988:	str	r0, [fp, #-44]	; 0xffffffd4
     98c:	beq	bb0 <traverse_data+0x35c>
     990:	movw	r0, #0
     994:	movt	r0, #0
     998:	add	r0, r0, #664	; 0x298
     99c:	movw	r1, #0
     9a0:	movt	r1, #0
     9a4:	ldr	r2, [r1, #796]	; 0x31c
     9a8:	add	r1, r1, r2, lsl #2
     9ac:	add	r1, r1, #664	; 0x298
     9b0:	ldr	r1, [r1]
     9b4:	str	r1, [fp, #-16]
     9b8:	str	r0, [fp, #-48]	; 0xffffffd0
     9bc:	movw	r0, #0
     9c0:	movt	r0, #0
     9c4:	add	r0, r0, #664	; 0x298
     9c8:	movw	r1, #0
     9cc:	movt	r1, #0
     9d0:	ldr	r2, [r1, #796]	; 0x31c
     9d4:	add	r1, r1, r2, lsl #2
     9d8:	add	r1, r1, #664	; 0x298
     9dc:	ldr	r1, [r1]
     9e0:	movw	r2, #0
     9e4:	cmp	r1, r2
     9e8:	str	r0, [sp, #52]	; 0x34
     9ec:	beq	b80 <traverse_data+0x32c>
     9f0:	movw	r0, #0
     9f4:	movt	r0, #0
     9f8:	add	r0, r0, #664	; 0x298
     9fc:	movw	r1, #0
     a00:	movt	r1, #0
     a04:	ldr	r2, [r1, #796]	; 0x31c
     a08:	add	r1, r1, r2, lsl #2
     a0c:	add	r1, r1, #664	; 0x298
     a10:	ldr	r1, [r1]
     a14:	str	r0, [sp, #48]	; 0x30
     a18:	mov	r0, r1
     a1c:	bl	0 <codadump_filter_get_fieldname>
     a20:	str	r0, [fp, #-20]	; 0xffffffec
     a24:	ldr	r0, [fp, #-20]	; 0xffffffec
     a28:	movw	r1, #0
     a2c:	cmp	r0, r1
     a30:	beq	a38 <traverse_data+0x1e4>
     a34:	b	a58 <traverse_data+0x204>
     a38:	movw	r0, #0
     a3c:	movt	r0, #0
     a40:	movw	r1, #0
     a44:	movt	r1, #0
     a48:	movw	r2, #393	; 0x189
     a4c:	movw	r3, #0
     a50:	movt	r3, #0
     a54:	bl	0 <__assert_fail>
     a58:	movw	r0, #0
     a5c:	movt	r0, #0
     a60:	add	r0, r0, #8
     a64:	movw	r1, #0
     a68:	movt	r1, #0
     a6c:	ldr	r2, [r1, #136]	; 0x88
     a70:	sub	r2, r2, #1
     a74:	add	r1, r1, r2, lsl #2
     a78:	add	r1, r1, #8
     a7c:	ldr	r1, [r1]
     a80:	ldr	r2, [fp, #-20]	; 0xffffffec
     a84:	str	r0, [sp, #44]	; 0x2c
     a88:	mov	r0, r1
     a8c:	mov	r1, r2
     a90:	sub	r2, fp, #12
     a94:	bl	0 <coda_type_get_record_field_index_from_name>
     a98:	cmp	r0, #0
     a9c:	beq	ae8 <traverse_data+0x294>
     aa0:	bl	0 <coda_get_errno>
     aa4:	ldr	r0, [r0]
     aa8:	cmn	r0, #102	; 0x66
     aac:	bne	adc <traverse_data+0x288>
     ab0:	movw	r0, #0
     ab4:	movt	r0, #0
     ab8:	ldr	r0, [r0]
     abc:	ldr	r2, [fp, #-20]	; 0xffffffec
     ac0:	movw	r1, #0
     ac4:	movt	r1, #0
     ac8:	bl	0 <fprintf>
     acc:	movw	r1, #1
     ad0:	str	r0, [sp, #40]	; 0x28
     ad4:	mov	r0, r1
     ad8:	bl	0 <exit>
     adc:	movw	r0, #0
     ae0:	movt	r0, #0
     ae4:	blx	r0
     ae8:	movw	r0, #0
     aec:	movt	r0, #0
     af0:	add	r0, r0, #664	; 0x298
     af4:	movw	r1, #0
     af8:	movt	r1, #0
     afc:	ldr	r2, [r1, #796]	; 0x31c
     b00:	add	r3, r1, #664	; 0x298
     b04:	ldr	r2, [r3, r2, lsl #2]
     b08:	str	r0, [sp, #36]	; 0x24
     b0c:	mov	r0, r2
     b10:	str	r3, [sp, #32]
     b14:	str	r1, [sp, #28]
     b18:	bl	0 <codadump_filter_get_subfilter>
     b1c:	ldr	r1, [sp, #28]
     b20:	ldr	r2, [r1, #796]	; 0x31c
     b24:	ldr	r3, [sp, #32]
     b28:	add	r2, r3, r2, lsl #2
     b2c:	str	r0, [r2, #4]
     b30:	ldr	r0, [r1, #796]	; 0x31c
     b34:	add	r0, r0, #1
     b38:	str	r0, [r1, #796]	; 0x31c
     b3c:	ldr	r0, [fp, #-12]
     b40:	mov	r1, #1
     b44:	bl	ea4 <traverse_record>
     b48:	ldr	r0, [sp, #28]
     b4c:	ldr	r1, [r0, #796]	; 0x31c
     b50:	sub	r1, r1, #1
     b54:	str	r1, [r0, #796]	; 0x31c
     b58:	ldr	r1, [r0, #796]	; 0x31c
     b5c:	ldr	r2, [sp, #32]
     b60:	ldr	r0, [r2, r1, lsl #2]
     b64:	bl	0 <codadump_filter_get_next_filter>
     b68:	ldr	r1, [sp, #28]
     b6c:	ldr	r2, [r1, #796]	; 0x31c
     b70:	ldr	r3, [sp, #32]
     b74:	add	r2, r3, r2, lsl #2
     b78:	str	r0, [r2]
     b7c:	b	9bc <traverse_data+0x168>
     b80:	movw	r0, #0
     b84:	movt	r0, #0
     b88:	add	r0, r0, #664	; 0x298
     b8c:	ldr	r1, [fp, #-16]
     b90:	movw	r2, #0
     b94:	movt	r2, #0
     b98:	ldr	r3, [r2, #796]	; 0x31c
     b9c:	add	r2, r2, r3, lsl #2
     ba0:	add	r2, r2, #664	; 0x298
     ba4:	str	r1, [r2]
     ba8:	str	r0, [sp, #24]
     bac:	b	be8 <traverse_data+0x394>
     bb0:	movw	r0, #0
     bb4:	str	r0, [fp, #-12]
     bb8:	ldr	r0, [fp, #-12]
     bbc:	ldr	r1, [fp, #-8]
     bc0:	cmp	r0, r1
     bc4:	bge	be4 <traverse_data+0x390>
     bc8:	ldr	r0, [fp, #-12]
     bcc:	movw	r1, #0
     bd0:	bl	ea4 <traverse_record>
     bd4:	ldr	r0, [fp, #-12]
     bd8:	add	r0, r0, #1
     bdc:	str	r0, [fp, #-12]
     be0:	b	bb8 <traverse_data+0x364>
     be4:	b	be8 <traverse_data+0x394>
     be8:	movw	r0, #0
     bec:	movt	r0, #0
     bf0:	ldr	r1, [r0, #136]	; 0x88
     bf4:	mvn	r2, #0
     bf8:	add	r1, r1, r2
     bfc:	str	r1, [r0, #136]	; 0x88
     c00:	ldr	r1, [r0, #3748]	; 0xea4
     c04:	add	r1, r1, r2
     c08:	str	r1, [r0, #3748]	; 0xea4
     c0c:	b	e9c <traverse_data+0x648>
     c10:	movw	r0, #0
     c14:	movt	r0, #0
     c18:	ldr	r0, [r0, #136]	; 0x88
     c1c:	cmp	r0, #31
     c20:	blt	c28 <traverse_data+0x3d4>
     c24:	b	e9c <traverse_data+0x648>
     c28:	movw	r0, #0
     c2c:	movt	r0, #0
     c30:	add	r0, r0, #8
     c34:	str	r0, [sp, #20]
     c38:	bl	0 <dim_enter_array>
     c3c:	movw	r0, #0
     c40:	movt	r0, #0
     c44:	ldr	lr, [r0, #3360]	; 0xd20
     c48:	add	lr, lr, #1
     c4c:	str	lr, [r0, #3360]	; 0xd20
     c50:	ldr	lr, [r0, #136]	; 0x88
     c54:	add	lr, lr, #1
     c58:	str	lr, [r0, #136]	; 0x88
     c5c:	ldr	lr, [r0, #136]	; 0x88
     c60:	add	r0, r0, lr, lsl #2
     c64:	ldr	lr, [r0, #4]
     c68:	add	r1, r0, #8
     c6c:	mov	r0, lr
     c70:	bl	0 <coda_type_get_array_base_type>
     c74:	cmp	r0, #0
     c78:	beq	c88 <traverse_data+0x434>
     c7c:	movw	r0, #0
     c80:	movt	r0, #0
     c84:	blx	r0
     c88:	bl	854 <traverse_data>
     c8c:	movw	lr, #0
     c90:	movt	lr, #0
     c94:	movw	r0, #0
     c98:	movt	r0, #0
     c9c:	ldr	r1, [r0, #136]	; 0x88
     ca0:	mvn	r2, #0
     ca4:	add	r1, r1, r2
     ca8:	str	r1, [r0, #136]	; 0x88
     cac:	ldr	r1, [r0, #3360]	; 0xd20
     cb0:	add	r1, r1, r2
     cb4:	str	r1, [r0, #3360]	; 0xd20
     cb8:	blx	lr
     cbc:	b	e9c <traverse_data+0x648>
     cc0:	movw	r0, #0
     cc4:	movt	r0, #0
     cc8:	add	r0, r0, #8
     ccc:	movw	r1, #0
     cd0:	movt	r1, #0
     cd4:	ldr	r2, [r1, #136]	; 0x88
     cd8:	add	r1, r1, r2, lsl #2
     cdc:	add	r1, r1, #8
     ce0:	ldr	r1, [r1]
     ce4:	str	r0, [sp, #16]
     ce8:	mov	r0, r1
     cec:	sub	r1, fp, #24
     cf0:	bl	0 <coda_type_get_read_type>
     cf4:	cmp	r0, #0
     cf8:	beq	d08 <traverse_data+0x4b4>
     cfc:	movw	r0, #0
     d00:	movt	r0, #0
     d04:	blx	r0
     d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
     d0c:	sub	r0, r0, #11
     d10:	cmp	r0, #1
     d14:	bhi	d68 <traverse_data+0x514>
     d18:	b	d1c <traverse_data+0x4c8>
     d1c:	movw	r0, #0
     d20:	movt	r0, #0
     d24:	blx	r0
     d28:	movw	r0, #0
     d2c:	movt	r0, #0
     d30:	ldr	lr, [r0, #3360]	; 0xd20
     d34:	add	lr, lr, #1
     d38:	str	lr, [r0, #3360]	; 0xd20
     d3c:	bl	10c4 <handle_data_element>
     d40:	movw	r0, #0
     d44:	movt	r0, #0
     d48:	movw	lr, #0
     d4c:	movt	lr, #0
     d50:	ldr	r1, [lr, #3360]	; 0xd20
     d54:	mvn	r2, #0
     d58:	add	r1, r1, r2
     d5c:	str	r1, [lr, #3360]	; 0xd20
     d60:	blx	r0
     d64:	b	d6c <traverse_data+0x518>
     d68:	bl	10c4 <handle_data_element>
     d6c:	b	e9c <traverse_data+0x648>
     d70:	bl	0 <coda_get_option_bypass_special_types>
     d74:	cmp	r0, #0
     d78:	beq	dc4 <traverse_data+0x570>
     d7c:	movw	r0, #0
     d80:	movt	r0, #0
     d84:	add	r0, r0, #8
     d88:	movw	r1, #0
     d8c:	movt	r1, #0
     d90:	ldr	r2, [r1, #136]	; 0x88
     d94:	add	r1, r1, r2, lsl #2
     d98:	ldr	r2, [r1, #8]!
     d9c:	str	r0, [sp, #12]
     da0:	mov	r0, r2
     da4:	bl	0 <coda_type_get_special_base_type>
     da8:	cmp	r0, #0
     dac:	beq	dbc <traverse_data+0x568>
     db0:	movw	r0, #0
     db4:	movt	r0, #0
     db8:	blx	r0
     dbc:	bl	854 <traverse_data>
     dc0:	b	e9c <traverse_data+0x648>
     dc4:	movw	r0, #0
     dc8:	movt	r0, #0
     dcc:	add	r0, r0, #8
     dd0:	movw	r1, #0
     dd4:	movt	r1, #0
     dd8:	ldr	r2, [r1, #136]	; 0x88
     ddc:	add	r1, r1, r2, lsl #2
     de0:	add	r1, r1, #8
     de4:	ldr	r1, [r1]
     de8:	str	r0, [sp, #8]
     dec:	mov	r0, r1
     df0:	sub	r1, fp, #28
     df4:	bl	0 <coda_type_get_special_type>
     df8:	cmp	r0, #0
     dfc:	beq	e0c <traverse_data+0x5b8>
     e00:	movw	r0, #0
     e04:	movt	r0, #0
     e08:	blx	r0
     e0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     e10:	cmp	r0, #0
     e14:	str	r0, [sp, #4]
     e18:	beq	e44 <traverse_data+0x5f0>
     e1c:	b	e20 <traverse_data+0x5cc>
     e20:	ldr	r0, [sp, #4]
     e24:	sub	r1, r0, #1
     e28:	cmp	r1, #2
     e2c:	bcc	e48 <traverse_data+0x5f4>
     e30:	b	e34 <traverse_data+0x5e0>
     e34:	ldr	r0, [sp, #4]
     e38:	cmp	r0, #3
     e3c:	beq	e50 <traverse_data+0x5fc>
     e40:	b	e98 <traverse_data+0x644>
     e44:	b	e9c <traverse_data+0x648>
     e48:	bl	10c4 <handle_data_element>
     e4c:	b	e98 <traverse_data+0x644>
     e50:	movw	r0, #0
     e54:	movt	r0, #0
     e58:	blx	r0
     e5c:	movw	r0, #0
     e60:	movt	r0, #0
     e64:	ldr	lr, [r0, #3360]	; 0xd20
     e68:	add	lr, lr, #1
     e6c:	str	lr, [r0, #3360]	; 0xd20
     e70:	bl	10c4 <handle_data_element>
     e74:	movw	r0, #0
     e78:	movt	r0, #0
     e7c:	movw	lr, #0
     e80:	movt	lr, #0
     e84:	ldr	r1, [lr, #3360]	; 0xd20
     e88:	mvn	r2, #0
     e8c:	add	r1, r1, r2
     e90:	str	r1, [lr, #3360]	; 0xd20
     e94:	blx	r0
     e98:	b	e9c <traverse_data+0x648>
     e9c:	mov	sp, fp
     ea0:	pop	{fp, pc}

00000ea4 <traverse_record>:
     ea4:	push	{fp, lr}
     ea8:	mov	fp, sp
     eac:	sub	sp, sp, #48	; 0x30
     eb0:	movw	r2, #0
     eb4:	movt	r2, #0
     eb8:	add	r2, r2, #8
     ebc:	str	r0, [fp, #-4]
     ec0:	str	r1, [fp, #-8]
     ec4:	ldr	r0, [fp, #-4]
     ec8:	movw	r1, #0
     ecc:	movt	r1, #0
     ed0:	ldr	r3, [r1, #3748]	; 0xea4
     ed4:	add	r3, r1, r3, lsl #2
     ed8:	str	r0, [r3, #3488]	; 0xda0
     edc:	ldr	r0, [r1, #136]	; 0x88
     ee0:	sub	r0, r0, #1
     ee4:	add	r0, r1, r0, lsl #2
     ee8:	add	r0, r0, #8
     eec:	ldr	r0, [r0]
     ef0:	ldr	r1, [fp, #-4]
     ef4:	sub	r3, fp, #12
     ef8:	str	r2, [fp, #-20]	; 0xffffffec
     efc:	mov	r2, r3
     f00:	bl	0 <coda_type_get_record_field_hidden_status>
     f04:	cmp	r0, #0
     f08:	beq	f18 <traverse_record+0x74>
     f0c:	movw	r0, #0
     f10:	movt	r0, #0
     f14:	blx	r0
     f18:	ldr	r0, [fp, #-12]
     f1c:	cmp	r0, #0
     f20:	beq	f34 <traverse_record+0x90>
     f24:	ldr	r0, [fp, #-8]
     f28:	cmp	r0, #0
     f2c:	bne	f34 <traverse_record+0x90>
     f30:	b	10bc <traverse_record+0x218>
     f34:	movw	r0, #0
     f38:	movt	r0, #0
     f3c:	ldr	r0, [r0]
     f40:	cmp	r0, #0
     f44:	beq	ffc <traverse_record+0x158>
     f48:	movw	r0, #0
     f4c:	movt	r0, #0
     f50:	add	r0, r0, #8
     f54:	movw	r1, #0
     f58:	movt	r1, #0
     f5c:	ldr	r2, [r1, #136]	; 0x88
     f60:	sub	r2, r2, #1
     f64:	add	r1, r1, r2, lsl #2
     f68:	add	r1, r1, #8
     f6c:	ldr	r1, [r1]
     f70:	ldr	r2, [fp, #-4]
     f74:	str	r0, [sp, #24]
     f78:	mov	r0, r1
     f7c:	mov	r1, r2
     f80:	sub	r2, fp, #16
     f84:	bl	0 <coda_type_get_record_field_available_status>
     f88:	cmp	r0, #0
     f8c:	beq	f9c <traverse_record+0xf8>
     f90:	movw	r0, #0
     f94:	movt	r0, #0
     f98:	blx	r0
     f9c:	ldr	r0, [fp, #-16]
     fa0:	cmn	r0, #1
     fa4:	bne	fc4 <traverse_record+0x120>
     fa8:	movw	r0, #0
     fac:	movt	r0, #0
     fb0:	blx	r0
     fb4:	cmp	r0, #0
     fb8:	bne	fc0 <traverse_record+0x11c>
     fbc:	b	10bc <traverse_record+0x218>
     fc0:	b	fc4 <traverse_record+0x120>
     fc4:	movw	r0, #3364	; 0xd24
     fc8:	movw	r1, #0
     fcc:	movt	r1, #0
     fd0:	add	r0, r1, r0
     fd4:	ldr	r1, [fp, #-16]
     fd8:	movw	r2, #0
     fdc:	movt	r2, #0
     fe0:	ldr	r3, [r2, #136]	; 0x88
     fe4:	sub	r3, r3, #1
     fe8:	add	r2, r2, r3, lsl #2
     fec:	movw	r3, #3364	; 0xd24
     ff0:	add	r2, r2, r3
     ff4:	str	r1, [r2]
     ff8:	str	r0, [sp, #20]
     ffc:	movw	r0, #3620	; 0xe24
    1000:	movw	r1, #0
    1004:	movt	r1, #0
    1008:	add	r0, r1, r0
    100c:	movw	r1, #0
    1010:	movt	r1, #0
    1014:	ldr	r2, [r1, #136]	; 0x88
    1018:	add	r2, r1, r2, lsl #2
    101c:	ldr	r2, [r2, #4]
    1020:	ldr	r3, [fp, #-4]
    1024:	ldr	ip, [r1, #3748]	; 0xea4
    1028:	sub	ip, ip, #1
    102c:	add	r1, r1, ip, lsl #2
    1030:	movw	ip, #3620	; 0xe24
    1034:	add	r1, r1, ip
    1038:	str	r0, [sp, #16]
    103c:	mov	r0, r2
    1040:	str	r1, [sp, #12]
    1044:	mov	r1, r3
    1048:	ldr	r2, [sp, #12]
    104c:	bl	0 <coda_type_get_record_field_name>
    1050:	cmp	r0, #0
    1054:	beq	1064 <traverse_record+0x1c0>
    1058:	movw	r0, #0
    105c:	movt	r0, #0
    1060:	blx	r0
    1064:	movw	r0, #0
    1068:	movt	r0, #0
    106c:	add	r0, r0, #8
    1070:	movw	r1, #0
    1074:	movt	r1, #0
    1078:	ldr	r2, [r1, #136]	; 0x88
    107c:	add	r1, r1, r2, lsl #2
    1080:	ldr	r2, [r1, #4]
    1084:	ldr	r3, [fp, #-4]
    1088:	add	r1, r1, #8
    108c:	str	r0, [sp, #8]
    1090:	mov	r0, r2
    1094:	str	r1, [sp, #4]
    1098:	mov	r1, r3
    109c:	ldr	r2, [sp, #4]
    10a0:	bl	0 <coda_type_get_record_field_type>
    10a4:	cmp	r0, #0
    10a8:	beq	10b8 <traverse_record+0x214>
    10ac:	movw	r0, #0
    10b0:	movt	r0, #0
    10b4:	blx	r0
    10b8:	bl	854 <traverse_data>
    10bc:	mov	sp, fp
    10c0:	pop	{fp, pc}

000010c4 <handle_data_element>:
    10c4:	push	{fp, lr}
    10c8:	mov	fp, sp
    10cc:	sub	sp, sp, #80	; 0x50
    10d0:	movw	r0, #0
    10d4:	movt	r0, #0
    10d8:	ldr	r0, [r0]
    10dc:	cmp	r0, #0
    10e0:	bne	1464 <handle_data_element+0x3a0>
    10e4:	movw	r0, #0
    10e8:	movt	r0, #0
    10ec:	ldr	r0, [r0]
    10f0:	movw	r1, #1
    10f4:	movw	r2, #0
    10f8:	bl	0 <print_full_field_name>
    10fc:	movw	r0, #0
    1100:	movt	r0, #0
    1104:	ldr	r0, [r0]
    1108:	cmp	r0, #0
    110c:	beq	12d8 <handle_data_element+0x214>
    1110:	movw	r0, #0
    1114:	movt	r0, #0
    1118:	add	r0, r0, #8
    111c:	movw	r1, #0
    1120:	movt	r1, #0
    1124:	ldr	r2, [r1, #136]	; 0x88
    1128:	add	r1, r1, r2, lsl #2
    112c:	add	r1, r1, #8
    1130:	ldr	r1, [r1]
    1134:	str	r0, [fp, #-28]	; 0xffffffe4
    1138:	mov	r0, r1
    113c:	sub	r1, fp, #4
    1140:	bl	0 <coda_type_get_class>
    1144:	cmp	r0, #0
    1148:	beq	1158 <handle_data_element+0x94>
    114c:	movw	r0, #0
    1150:	movt	r0, #0
    1154:	blx	r0
    1158:	ldr	r0, [fp, #-4]
    115c:	cmp	r0, #6
    1160:	bne	11d4 <handle_data_element+0x110>
    1164:	movw	r0, #0
    1168:	movt	r0, #0
    116c:	add	r0, r0, #8
    1170:	movw	r1, #0
    1174:	movt	r1, #0
    1178:	ldr	r2, [r1, #136]	; 0x88
    117c:	add	r1, r1, r2, lsl #2
    1180:	add	r1, r1, #8
    1184:	ldr	r1, [r1]
    1188:	str	r0, [fp, #-32]	; 0xffffffe0
    118c:	mov	r0, r1
    1190:	sub	r1, fp, #8
    1194:	bl	0 <coda_type_get_special_type>
    1198:	cmp	r0, #0
    119c:	beq	11ac <handle_data_element+0xe8>
    11a0:	movw	r0, #0
    11a4:	movt	r0, #0
    11a8:	blx	r0
    11ac:	ldr	r0, [fp, #-8]
    11b0:	bl	0 <coda_type_get_special_type_name>
    11b4:	movw	lr, #0
    11b8:	movt	lr, #0
    11bc:	str	r0, [fp, #-36]	; 0xffffffdc
    11c0:	mov	r0, lr
    11c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    11c8:	bl	0 <printf>
    11cc:	str	r0, [sp, #40]	; 0x28
    11d0:	b	12d4 <handle_data_element+0x210>
    11d4:	movw	r0, #0
    11d8:	movt	r0, #0
    11dc:	add	r0, r0, #8
    11e0:	movw	r1, #0
    11e4:	movt	r1, #0
    11e8:	ldr	r2, [r1, #136]	; 0x88
    11ec:	add	r1, r1, r2, lsl #2
    11f0:	add	r1, r1, #8
    11f4:	ldr	r1, [r1]
    11f8:	str	r0, [sp, #36]	; 0x24
    11fc:	mov	r0, r1
    1200:	sub	r1, fp, #12
    1204:	bl	0 <coda_type_get_read_type>
    1208:	cmp	r0, #0
    120c:	beq	121c <handle_data_element+0x158>
    1210:	movw	r0, #0
    1214:	movt	r0, #0
    1218:	blx	r0
    121c:	ldr	r0, [fp, #-12]
    1220:	bl	0 <coda_type_get_native_type_name>
    1224:	movw	lr, #0
    1228:	movt	lr, #0
    122c:	str	r0, [sp, #32]
    1230:	mov	r0, lr
    1234:	ldr	r1, [sp, #32]
    1238:	bl	0 <printf>
    123c:	ldr	r1, [fp, #-12]
    1240:	cmp	r1, #11
    1244:	str	r0, [sp, #28]
    1248:	beq	1258 <handle_data_element+0x194>
    124c:	ldr	r0, [fp, #-12]
    1250:	cmp	r0, #12
    1254:	bne	12d0 <handle_data_element+0x20c>
    1258:	movw	r0, #0
    125c:	movt	r0, #0
    1260:	bl	0 <printf>
    1264:	movw	lr, #0
    1268:	movt	lr, #0
    126c:	ldr	lr, [lr, #3360]	; 0xd20
    1270:	cmp	lr, #0
    1274:	str	r0, [sp, #24]
    1278:	ble	1280 <handle_data_element+0x1bc>
    127c:	b	12a0 <handle_data_element+0x1dc>
    1280:	movw	r0, #0
    1284:	movt	r0, #0
    1288:	movw	r1, #0
    128c:	movt	r1, #0
    1290:	movw	r2, #238	; 0xee
    1294:	movw	r3, #0
    1298:	movt	r3, #0
    129c:	bl	0 <__assert_fail>
    12a0:	movw	r0, #0
    12a4:	movt	r0, #0
    12a8:	ldr	r0, [r0]
    12ac:	movw	r1, #0
    12b0:	movt	r1, #0
    12b4:	ldr	r1, [r1, #3360]	; 0xd20
    12b8:	sub	r1, r1, #1
    12bc:	bl	4a8 <print_array_dim>
    12c0:	movw	r0, #0
    12c4:	movt	r0, #0
    12c8:	bl	0 <printf>
    12cc:	str	r0, [sp, #20]
    12d0:	b	12d4 <handle_data_element+0x210>
    12d4:	b	12d8 <handle_data_element+0x214>
    12d8:	movw	r0, #0
    12dc:	movt	r0, #0
    12e0:	ldr	r0, [r0]
    12e4:	cmp	r0, #0
    12e8:	beq	136c <handle_data_element+0x2a8>
    12ec:	movw	r0, #0
    12f0:	movt	r0, #0
    12f4:	add	r0, r0, #8
    12f8:	movw	r1, #0
    12fc:	movt	r1, #0
    1300:	ldr	r2, [r1, #136]	; 0x88
    1304:	add	r1, r1, r2, lsl #2
    1308:	add	r1, r1, #8
    130c:	ldr	r1, [r1]
    1310:	str	r0, [sp, #16]
    1314:	mov	r0, r1
    1318:	sub	r1, fp, #16
    131c:	bl	0 <coda_type_get_unit>
    1320:	cmp	r0, #0
    1324:	beq	1334 <handle_data_element+0x270>
    1328:	movw	r0, #0
    132c:	movt	r0, #0
    1330:	blx	r0
    1334:	ldr	r0, [fp, #-16]
    1338:	movw	r1, #0
    133c:	cmp	r0, r1
    1340:	beq	1368 <handle_data_element+0x2a4>
    1344:	ldr	r0, [fp, #-16]
    1348:	ldrb	r0, [r0]
    134c:	cmp	r0, #0
    1350:	beq	1368 <handle_data_element+0x2a4>
    1354:	ldr	r1, [fp, #-16]
    1358:	movw	r0, #0
    135c:	movt	r0, #0
    1360:	bl	0 <printf>
    1364:	str	r0, [sp, #12]
    1368:	b	136c <handle_data_element+0x2a8>
    136c:	movw	r0, #0
    1370:	movt	r0, #0
    1374:	ldr	r0, [r0]
    1378:	cmp	r0, #0
    137c:	beq	1400 <handle_data_element+0x33c>
    1380:	movw	r0, #0
    1384:	movt	r0, #0
    1388:	add	r0, r0, #8
    138c:	movw	r1, #0
    1390:	movt	r1, #0
    1394:	ldr	r2, [r1, #136]	; 0x88
    1398:	add	r1, r1, r2, lsl #2
    139c:	add	r1, r1, #8
    13a0:	ldr	r1, [r1]
    13a4:	str	r0, [sp, #8]
    13a8:	mov	r0, r1
    13ac:	sub	r1, fp, #20
    13b0:	bl	0 <coda_type_get_description>
    13b4:	cmp	r0, #0
    13b8:	beq	13c8 <handle_data_element+0x304>
    13bc:	movw	r0, #0
    13c0:	movt	r0, #0
    13c4:	blx	r0
    13c8:	ldr	r0, [fp, #-20]	; 0xffffffec
    13cc:	movw	r1, #0
    13d0:	cmp	r0, r1
    13d4:	beq	13fc <handle_data_element+0x338>
    13d8:	ldr	r0, [fp, #-20]	; 0xffffffec
    13dc:	ldrb	r0, [r0]
    13e0:	cmp	r0, #0
    13e4:	beq	13fc <handle_data_element+0x338>
    13e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    13ec:	movw	r0, #0
    13f0:	movt	r0, #0
    13f4:	bl	0 <printf>
    13f8:	str	r0, [sp, #4]
    13fc:	b	1400 <handle_data_element+0x33c>
    1400:	movw	r0, #0
    1404:	movt	r0, #0
    1408:	bl	0 <printf>
    140c:	movw	lr, #0
    1410:	movt	lr, #0
    1414:	ldr	lr, [lr]
    1418:	cmp	lr, #0
    141c:	str	r0, [sp]
    1420:	beq	1460 <handle_data_element+0x39c>
    1424:	movw	r0, #0
    1428:	str	r0, [fp, #-24]	; 0xffffffe8
    142c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1430:	movw	r1, #0
    1434:	movt	r1, #0
    1438:	ldr	r1, [r1]
    143c:	cmp	r0, r1
    1440:	bge	145c <handle_data_element+0x398>
    1444:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1448:	bl	0 <print_all_distinct_dims>
    144c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1450:	add	r0, r0, #1
    1454:	str	r0, [fp, #-24]	; 0xffffffe8
    1458:	b	142c <handle_data_element+0x368>
    145c:	b	1460 <handle_data_element+0x39c>
    1460:	b	1488 <handle_data_element+0x3c4>
    1464:	movw	r0, #0
    1468:	movt	r0, #0
    146c:	ldr	r0, [r0]
    1470:	cmp	r0, #1
    1474:	bne	1484 <handle_data_element+0x3c0>
    1478:	movw	r0, #0
    147c:	movt	r0, #0
    1480:	blx	r0
    1484:	b	1488 <handle_data_element+0x3c4>
    1488:	mov	sp, fp
    148c:	pop	{fp, pc}
