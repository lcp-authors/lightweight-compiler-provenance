
../compcert-repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010b50 <.init>:
   10b50:	push	{r3, lr}
   10b54:	bl	10c30 <_start@@Base+0x3c>
   10b58:	pop	{r3, pc}

Disassembly of section .plt:

00010b5c <calloc@plt-0x14>:
   10b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b60:	ldr	lr, [pc, #4]	; 10b6c <calloc@plt-0x4>
   10b64:	add	lr, pc, lr
   10b68:	ldr	pc, [lr, #8]!
   10b6c:	muleq	r1, r4, r4

00010b70 <calloc@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1172]!	; 0x494

00010b7c <printf@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1164]!	; 0x48c

00010b88 <free@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1156]!	; 0x484

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1148]!	; 0x47c

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1140]!	; 0x474

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1124]!	; 0x464

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1116]!	; 0x45c

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1108]!	; 0x454

00010bdc <putchar@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1100]!	; 0x44c

00010be8 <abort@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1092]!	; 0x444

Disassembly of section .text:

00010bf4 <_start@@Base>:
   10bf4:	mov	fp, #0
   10bf8:	mov	lr, #0
   10bfc:	pop	{r1}		; (ldr r1, [sp], #4)
   10c00:	mov	r2, sp
   10c04:	push	{r2}		; (str r2, [sp, #-4]!)
   10c08:	push	{r0}		; (str r0, [sp, #-4]!)
   10c0c:	ldr	ip, [pc, #16]	; 10c24 <_start@@Base+0x30>
   10c10:	push	{ip}		; (str ip, [sp, #-4]!)
   10c14:	ldr	r0, [pc, #12]	; 10c28 <_start@@Base+0x34>
   10c18:	ldr	r3, [pc, #12]	; 10c2c <_start@@Base+0x38>
   10c1c:	bl	10bb8 <__libc_start_main@plt>
   10c20:	bl	10be8 <abort@plt>
   10c24:	andeq	r1, r1, r4, lsl #21
   10c28:	andeq	r0, r1, r4, ror #25
   10c2c:	andeq	r1, r1, r4, lsr #20
   10c30:	ldr	r3, [pc, #20]	; 10c4c <_start@@Base+0x58>
   10c34:	ldr	r2, [pc, #20]	; 10c50 <_start@@Base+0x5c>
   10c38:	add	r3, pc, r3
   10c3c:	ldr	r2, [r3, r2]
   10c40:	cmp	r2, #0
   10c44:	bxeq	lr
   10c48:	b	10bc4 <__gmon_start__@plt>
   10c4c:	andeq	r1, r1, r0, asr #7
   10c50:	andeq	r0, r0, r8, lsr r0
   10c54:	ldr	r0, [pc, #24]	; 10c74 <_start@@Base+0x80>
   10c58:	ldr	r3, [pc, #24]	; 10c78 <_start@@Base+0x84>
   10c5c:	cmp	r3, r0
   10c60:	bxeq	lr
   10c64:	ldr	r3, [pc, #16]	; 10c7c <_start@@Base+0x88>
   10c68:	cmp	r3, #0
   10c6c:	bxeq	lr
   10c70:	bx	r3
   10c74:	andeq	r2, r2, r4, asr #32
   10c78:	andeq	r2, r2, r4, asr #32
   10c7c:	andeq	r0, r0, r0
   10c80:	ldr	r0, [pc, #36]	; 10cac <_start@@Base+0xb8>
   10c84:	ldr	r1, [pc, #36]	; 10cb0 <_start@@Base+0xbc>
   10c88:	sub	r1, r1, r0
   10c8c:	asr	r1, r1, #2
   10c90:	add	r1, r1, r1, lsr #31
   10c94:	asrs	r1, r1, #1
   10c98:	bxeq	lr
   10c9c:	ldr	r3, [pc, #16]	; 10cb4 <_start@@Base+0xc0>
   10ca0:	cmp	r3, #0
   10ca4:	bxeq	lr
   10ca8:	bx	r3
   10cac:	andeq	r2, r2, r4, asr #32
   10cb0:	andeq	r2, r2, r4, asr #32
   10cb4:	andeq	r0, r0, r0
   10cb8:	push	{r4, lr}
   10cbc:	ldr	r4, [pc, #24]	; 10cdc <_start@@Base+0xe8>
   10cc0:	ldrb	r3, [r4]
   10cc4:	cmp	r3, #0
   10cc8:	popne	{r4, pc}
   10ccc:	bl	10c54 <_start@@Base+0x60>
   10cd0:	mov	r3, #1
   10cd4:	strb	r3, [r4]
   10cd8:	pop	{r4, pc}
   10cdc:	andeq	r2, r2, r4, asr #32
   10ce0:	b	10c80 <_start@@Base+0x8c>

00010ce4 <main@@Base>:
   10ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce8:	add	fp, sp, #28
   10cec:	sub	sp, sp, #4
   10cf0:	vpush	{d8}
   10cf4:	sub	sp, sp, #40	; 0x28
   10cf8:	mov	r0, #4
   10cfc:	mov	r1, #3
   10d00:	bl	113c8 <armazem_novo@@Base>
   10d04:	mov	r4, r0
   10d08:	movw	r0, #7072	; 0x1ba0
   10d0c:	movt	r0, #1
   10d10:	bl	10ba0 <puts@plt>
   10d14:	vldr	s0, [pc, #840]	; 11064 <main@@Base+0x380>
   10d18:	movw	r0, #6804	; 0x1a94
   10d1c:	movt	r0, #1
   10d20:	bl	115f8 <contentor_novo@@Base>
   10d24:	vldr	s0, [pc, #828]	; 11068 <main@@Base+0x384>
   10d28:	mov	r8, r0
   10d2c:	movw	r0, #6811	; 0x1a9b
   10d30:	movt	r0, #1
   10d34:	bl	115f8 <contentor_novo@@Base>
   10d38:	vldr	s0, [pc, #812]	; 1106c <main@@Base+0x388>
   10d3c:	mov	sl, r0
   10d40:	movw	r0, #6814	; 0x1a9e
   10d44:	movt	r0, #1
   10d48:	bl	115f8 <contentor_novo@@Base>
   10d4c:	vldr	s0, [pc, #796]	; 11070 <main@@Base+0x38c>
   10d50:	str	r0, [sp, #24]
   10d54:	movw	r0, #6821	; 0x1aa5
   10d58:	movt	r0, #1
   10d5c:	bl	115f8 <contentor_novo@@Base>
   10d60:	vldr	s16, [pc, #780]	; 11074 <main@@Base+0x390>
   10d64:	mov	r5, r0
   10d68:	movw	r0, #6827	; 0x1aab
   10d6c:	movt	r0, #1
   10d70:	vmov.f32	s0, s16
   10d74:	bl	115f8 <contentor_novo@@Base>
   10d78:	vldr	s0, [pc, #760]	; 11078 <main@@Base+0x394>
   10d7c:	str	r0, [sp, #8]
   10d80:	movw	r0, #6833	; 0x1ab1
   10d84:	movt	r0, #1
   10d88:	bl	115f8 <contentor_novo@@Base>
   10d8c:	vldr	s0, [pc, #744]	; 1107c <main@@Base+0x398>
   10d90:	str	r0, [sp, #16]
   10d94:	movw	r0, #6841	; 0x1ab9
   10d98:	movt	r0, #1
   10d9c:	bl	115f8 <contentor_novo@@Base>
   10da0:	vldr	s0, [pc, #728]	; 11080 <main@@Base+0x39c>
   10da4:	str	r0, [sp, #20]
   10da8:	movw	r0, #6851	; 0x1ac3
   10dac:	movt	r0, #1
   10db0:	bl	115f8 <contentor_novo@@Base>
   10db4:	str	r0, [sp, #12]
   10db8:	movw	r0, #6858	; 0x1aca
   10dbc:	vmov.f32	s0, s16
   10dc0:	movt	r0, #1
   10dc4:	bl	115f8 <contentor_novo@@Base>
   10dc8:	vldr	s0, [pc, #692]	; 11084 <main@@Base+0x3a0>
   10dcc:	mov	r9, r0
   10dd0:	movw	r0, #6870	; 0x1ad6
   10dd4:	movt	r0, #1
   10dd8:	bl	115f8 <contentor_novo@@Base>
   10ddc:	vldr	s0, [pc, #676]	; 11088 <main@@Base+0x3a4>
   10de0:	mov	r7, r0
   10de4:	movw	r0, #6878	; 0x1ade
   10de8:	movt	r0, #1
   10dec:	bl	115f8 <contentor_novo@@Base>
   10df0:	vldr	s0, [pc, #660]	; 1108c <main@@Base+0x3a8>
   10df4:	str	r0, [sp, #28]
   10df8:	movw	r0, #6887	; 0x1ae7
   10dfc:	movt	r0, #1
   10e00:	bl	115f8 <contentor_novo@@Base>
   10e04:	vldr	s0, [pc, #644]	; 11090 <main@@Base+0x3ac>
   10e08:	str	r0, [sp, #32]
   10e0c:	movw	r0, #6893	; 0x1aed
   10e10:	movt	r0, #1
   10e14:	bl	115f8 <contentor_novo@@Base>
   10e18:	str	r0, [sp, #36]	; 0x24
   10e1c:	movw	r0, #7104	; 0x1bc0
   10e20:	movt	r0, #1
   10e24:	bl	10ba0 <puts@plt>
   10e28:	mov	r0, r4
   10e2c:	bl	11298 <imprimeArmazem@@Base>
   10e30:	movw	r0, #7136	; 0x1be0
   10e34:	movt	r0, #1
   10e38:	bl	10ba0 <puts@plt>
   10e3c:	mov	r0, r4
   10e40:	mov	r1, r8
   10e44:	bl	11490 <armazenar_contentor@@Base>
   10e48:	cmp	r0, #0
   10e4c:	beq	10e60 <main@@Base+0x17c>
   10e50:	ldr	r1, [r8]
   10e54:	movw	r0, #6901	; 0x1af5
   10e58:	movt	r0, #1
   10e5c:	bl	10b7c <printf@plt>
   10e60:	mov	r0, r4
   10e64:	mov	r1, sl
   10e68:	bl	11490 <armazenar_contentor@@Base>
   10e6c:	cmp	r0, #0
   10e70:	beq	10e84 <main@@Base+0x1a0>
   10e74:	ldr	r1, [sl]
   10e78:	movw	r0, #6901	; 0x1af5
   10e7c:	movt	r0, #1
   10e80:	bl	10b7c <printf@plt>
   10e84:	ldr	r8, [sp, #24]
   10e88:	mov	r0, r4
   10e8c:	mov	r1, r8
   10e90:	bl	11490 <armazenar_contentor@@Base>
   10e94:	cmp	r0, #0
   10e98:	str	r7, [sp, #4]
   10e9c:	beq	10eb0 <main@@Base+0x1cc>
   10ea0:	ldr	r1, [r8]
   10ea4:	movw	r0, #6901	; 0x1af5
   10ea8:	movt	r0, #1
   10eac:	bl	10b7c <printf@plt>
   10eb0:	mov	r0, r4
   10eb4:	mov	r1, r5
   10eb8:	bl	11490 <armazenar_contentor@@Base>
   10ebc:	ldr	r7, [sp, #12]
   10ec0:	cmp	r0, #0
   10ec4:	beq	10ed8 <main@@Base+0x1f4>
   10ec8:	ldr	r1, [r5]
   10ecc:	movw	r0, #6901	; 0x1af5
   10ed0:	movt	r0, #1
   10ed4:	bl	10b7c <printf@plt>
   10ed8:	movw	r0, #7184	; 0x1c10
   10edc:	movt	r0, #1
   10ee0:	bl	10ba0 <puts@plt>
   10ee4:	mov	r0, r4
   10ee8:	bl	11298 <imprimeArmazem@@Base>
   10eec:	movw	r0, #7216	; 0x1c30
   10ef0:	movt	r0, #1
   10ef4:	bl	10ba0 <puts@plt>
   10ef8:	ldr	r5, [sp, #8]
   10efc:	mov	r0, r4
   10f00:	mov	r1, r5
   10f04:	bl	11490 <armazenar_contentor@@Base>
   10f08:	ldr	r6, [sp, #20]
   10f0c:	cmp	r0, #0
   10f10:	beq	10f24 <main@@Base+0x240>
   10f14:	ldr	r1, [r5]
   10f18:	movw	r0, #6901	; 0x1af5
   10f1c:	movt	r0, #1
   10f20:	bl	10b7c <printf@plt>
   10f24:	ldr	sl, [sp, #16]
   10f28:	mov	r0, r4
   10f2c:	mov	r1, sl
   10f30:	bl	11490 <armazenar_contentor@@Base>
   10f34:	ldr	r5, [sp, #32]
   10f38:	cmp	r0, #0
   10f3c:	beq	10f50 <main@@Base+0x26c>
   10f40:	ldr	r1, [sl]
   10f44:	movw	r0, #6901	; 0x1af5
   10f48:	movt	r0, #1
   10f4c:	bl	10b7c <printf@plt>
   10f50:	mov	r0, r4
   10f54:	mov	r1, r6
   10f58:	bl	11490 <armazenar_contentor@@Base>
   10f5c:	cmp	r0, #0
   10f60:	mov	r0, r6
   10f64:	ldr	r6, [sp, #28]
   10f68:	beq	10f7c <main@@Base+0x298>
   10f6c:	ldr	r1, [r0]
   10f70:	movw	r0, #6901	; 0x1af5
   10f74:	movt	r0, #1
   10f78:	bl	10b7c <printf@plt>
   10f7c:	mov	r0, r4
   10f80:	mov	r1, r7
   10f84:	bl	11490 <armazenar_contentor@@Base>
   10f88:	cmp	r0, #0
   10f8c:	beq	10fa0 <main@@Base+0x2bc>
   10f90:	ldr	r1, [r7]
   10f94:	movw	r0, #6901	; 0x1af5
   10f98:	movt	r0, #1
   10f9c:	bl	10b7c <printf@plt>
   10fa0:	mov	r0, r4
   10fa4:	mov	r1, r9
   10fa8:	bl	11490 <armazenar_contentor@@Base>
   10fac:	cmp	r0, #0
   10fb0:	beq	10fc4 <main@@Base+0x2e0>
   10fb4:	ldr	r1, [r9]
   10fb8:	movw	r0, #6901	; 0x1af5
   10fbc:	movt	r0, #1
   10fc0:	bl	10b7c <printf@plt>
   10fc4:	ldr	r7, [sp, #4]
   10fc8:	mov	r0, r4
   10fcc:	mov	r1, r7
   10fd0:	bl	11490 <armazenar_contentor@@Base>
   10fd4:	cmp	r0, #0
   10fd8:	beq	10fec <main@@Base+0x308>
   10fdc:	ldr	r1, [r7]
   10fe0:	movw	r0, #6901	; 0x1af5
   10fe4:	movt	r0, #1
   10fe8:	bl	10b7c <printf@plt>
   10fec:	mov	r0, r4
   10ff0:	mov	r1, r6
   10ff4:	bl	11490 <armazenar_contentor@@Base>
   10ff8:	cmp	r0, #0
   10ffc:	beq	11010 <main@@Base+0x32c>
   11000:	ldr	r1, [r6]
   11004:	movw	r0, #6901	; 0x1af5
   11008:	movt	r0, #1
   1100c:	bl	10b7c <printf@plt>
   11010:	mov	r0, r4
   11014:	mov	r1, r5
   11018:	bl	11490 <armazenar_contentor@@Base>
   1101c:	cmp	r0, #0
   11020:	beq	11034 <main@@Base+0x350>
   11024:	ldr	r1, [r5]
   11028:	movw	r0, #6901	; 0x1af5
   1102c:	movt	r0, #1
   11030:	bl	10b7c <printf@plt>
   11034:	movw	r0, #7264	; 0x1c60
   11038:	movt	r0, #1
   1103c:	bl	10ba0 <puts@plt>
   11040:	mov	r0, r4
   11044:	bl	11298 <imprimeArmazem@@Base>
   11048:	mov	r0, r4
   1104c:	bl	11424 <armazem_cheio@@Base>
   11050:	cmp	r0, #0
   11054:	beq	11094 <main@@Base+0x3b0>
   11058:	movw	r0, #7043	; 0x1b83
   1105c:	movt	r0, #1
   11060:	b	1109c <main@@Base+0x3b8>
   11064:	cmnmi	r6, #0
   11068:	cmnmi	sl, #0
   1106c:	strmi	r8, [r4], #-0
   11070:	ldrtmi	r8, [r1], #-0
   11074:			; <UNDEFINED> instruction: 0x43be0000
   11078:	bicmi	r0, r3, #0
   1107c:	sbcmi	r0, r8, #0
   11080:	adcmi	r0, r0, #0
   11084:	tstmi	r6, #0
   11088:	orrmi	r0, r7, #0
   1108c:	bicsmi	r0, r7, #0
   11090:	movtmi	r0, #32768	; 0x8000
   11094:	movw	r0, #7296	; 0x1c80
   11098:	movt	r0, #1
   1109c:	bl	10ba0 <puts@plt>
   110a0:	ldr	r1, [sp, #36]	; 0x24
   110a4:	mov	r0, r4
   110a8:	bl	11490 <armazenar_contentor@@Base>
   110ac:	cmp	r0, #0
   110b0:	beq	110c4 <main@@Base+0x3e0>
   110b4:	ldr	r1, [r8]
   110b8:	movw	r0, #6939	; 0x1b1b
   110bc:	movt	r0, #1
   110c0:	bl	10b7c <printf@plt>
   110c4:	movw	r0, #7344	; 0x1cb0
   110c8:	movt	r0, #1
   110cc:	bl	10ba0 <puts@plt>
   110d0:	mov	r0, r4
   110d4:	bl	11558 <expedir_contentor@@Base>
   110d8:	movw	r5, #7552	; 0x1d80
   110dc:	mov	r6, r0
   110e0:	movt	r5, #1
   110e4:	mov	r0, r5
   110e8:	bl	10ba0 <puts@plt>
   110ec:	mov	r0, r6
   110f0:	bl	11664 <contentor_imprime@@Base>
   110f4:	mov	r0, r4
   110f8:	bl	11558 <expedir_contentor@@Base>
   110fc:	mov	r6, r0
   11100:	mov	r0, r5
   11104:	bl	10ba0 <puts@plt>
   11108:	mov	r0, r6
   1110c:	bl	11664 <contentor_imprime@@Base>
   11110:	mov	r0, r4
   11114:	bl	11558 <expedir_contentor@@Base>
   11118:	mov	r6, r0
   1111c:	mov	r0, r5
   11120:	bl	10ba0 <puts@plt>
   11124:	mov	r0, r6
   11128:	bl	11664 <contentor_imprime@@Base>
   1112c:	mov	r0, r4
   11130:	bl	11558 <expedir_contentor@@Base>
   11134:	mov	r6, r0
   11138:	mov	r0, r5
   1113c:	bl	10ba0 <puts@plt>
   11140:	mov	r0, r6
   11144:	bl	11664 <contentor_imprime@@Base>
   11148:	mov	r0, r4
   1114c:	bl	11558 <expedir_contentor@@Base>
   11150:	mov	r6, r0
   11154:	mov	r0, r5
   11158:	bl	10ba0 <puts@plt>
   1115c:	mov	r0, r6
   11160:	bl	11664 <contentor_imprime@@Base>
   11164:	mov	r0, r4
   11168:	bl	11558 <expedir_contentor@@Base>
   1116c:	mov	r6, r0
   11170:	mov	r0, r5
   11174:	bl	10ba0 <puts@plt>
   11178:	mov	r0, r6
   1117c:	bl	11664 <contentor_imprime@@Base>
   11180:	mov	r0, r4
   11184:	bl	11558 <expedir_contentor@@Base>
   11188:	mov	r6, r0
   1118c:	mov	r0, r5
   11190:	bl	10ba0 <puts@plt>
   11194:	mov	r0, r6
   11198:	bl	11664 <contentor_imprime@@Base>
   1119c:	mov	r0, r4
   111a0:	bl	11558 <expedir_contentor@@Base>
   111a4:	mov	r6, r0
   111a8:	mov	r0, r5
   111ac:	bl	10ba0 <puts@plt>
   111b0:	mov	r0, r6
   111b4:	bl	11664 <contentor_imprime@@Base>
   111b8:	movw	r0, #7392	; 0x1ce0
   111bc:	movt	r0, #1
   111c0:	bl	10ba0 <puts@plt>
   111c4:	mov	r0, r4
   111c8:	bl	11298 <imprimeArmazem@@Base>
   111cc:	movw	r0, #7424	; 0x1d00
   111d0:	movt	r0, #1
   111d4:	bl	10ba0 <puts@plt>
   111d8:	mov	r0, r4
   111dc:	bl	11558 <expedir_contentor@@Base>
   111e0:	mov	r6, r0
   111e4:	mov	r0, r5
   111e8:	bl	10ba0 <puts@plt>
   111ec:	mov	r0, r6
   111f0:	bl	11664 <contentor_imprime@@Base>
   111f4:	mov	r0, r4
   111f8:	bl	11558 <expedir_contentor@@Base>
   111fc:	mov	r6, r0
   11200:	mov	r0, r5
   11204:	bl	10ba0 <puts@plt>
   11208:	mov	r0, r6
   1120c:	bl	11664 <contentor_imprime@@Base>
   11210:	mov	r0, r4
   11214:	bl	11558 <expedir_contentor@@Base>
   11218:	mov	r6, r0
   1121c:	mov	r0, r5
   11220:	bl	10ba0 <puts@plt>
   11224:	mov	r0, r6
   11228:	bl	11664 <contentor_imprime@@Base>
   1122c:	mov	r0, r4
   11230:	bl	11558 <expedir_contentor@@Base>
   11234:	mov	r6, r0
   11238:	mov	r0, r5
   1123c:	bl	10ba0 <puts@plt>
   11240:	mov	r0, r6
   11244:	bl	11664 <contentor_imprime@@Base>
   11248:	movw	r0, #7472	; 0x1d30
   1124c:	movt	r0, #1
   11250:	bl	10ba0 <puts@plt>
   11254:	mov	r0, r4
   11258:	bl	11298 <imprimeArmazem@@Base>
   1125c:	mov	r0, r4
   11260:	bl	113fc <armazem_vazio@@Base>
   11264:	cmp	r0, #0
   11268:	beq	11278 <main@@Base+0x594>
   1126c:	movw	r0, #7029	; 0x1b75
   11270:	movt	r0, #1
   11274:	b	11280 <main@@Base+0x59c>
   11278:	movw	r0, #7504	; 0x1d50
   1127c:	movt	r0, #1
   11280:	bl	10ba0 <puts@plt>
   11284:	mov	r0, #0
   11288:	sub	sp, fp, #40	; 0x28
   1128c:	vpop	{d8}
   11290:	add	sp, sp, #4
   11294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011298 <imprimeArmazem@@Base>:
   11298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1129c:	add	fp, sp, #28
   112a0:	sub	sp, sp, #4
   112a4:	cmp	r0, #0
   112a8:	beq	113c0 <imprimeArmazem@@Base+0x128>
   112ac:	ldr	r4, [r0, #8]
   112b0:	mov	sl, r0
   112b4:	cmp	r4, #0
   112b8:	beq	113c0 <imprimeArmazem@@Base+0x128>
   112bc:	ldr	r8, [r4, #4]
   112c0:	mov	r1, #4
   112c4:	mov	r0, r8
   112c8:	bl	10b70 <calloc@plt>
   112cc:	str	r0, [sp]
   112d0:	ldr	r0, [r4]
   112d4:	cmp	r0, #0
   112d8:	beq	112f8 <imprimeArmazem@@Base+0x60>
   112dc:	ldr	r1, [sp]
   112e0:	ldr	r2, [r0]
   112e4:	ldr	r2, [r2, #4]
   112e8:	str	r2, [r1], #4
   112ec:	ldr	r0, [r0, #4]
   112f0:	cmp	r0, #0
   112f4:	bne	112e0 <imprimeArmazem@@Base+0x48>
   112f8:	mov	r0, #10
   112fc:	bl	10bdc <putchar@plt>
   11300:	ldr	r4, [sl, #4]
   11304:	cmp	r4, #1
   11308:	blt	11368 <imprimeArmazem@@Base+0xd0>
   1130c:	movw	r5, #7019	; 0x1b6b
   11310:	movw	r7, #7014	; 0x1b66
   11314:	movt	r5, #1
   11318:	movt	r7, #1
   1131c:	movw	r0, #7021	; 0x1b6d
   11320:	movt	r0, #1
   11324:	bl	10b7c <printf@plt>
   11328:	cmp	r8, #1
   1132c:	blt	11358 <imprimeArmazem@@Base+0xc0>
   11330:	ldr	r9, [sp]
   11334:	mov	r6, r8
   11338:	ldr	r0, [r9]
   1133c:	cmp	r0, r4
   11340:	movlt	r0, r5
   11344:	movge	r0, r7
   11348:	bl	10b7c <printf@plt>
   1134c:	subs	r6, r6, #1
   11350:	add	r9, r9, #4
   11354:	bne	11338 <imprimeArmazem@@Base+0xa0>
   11358:	mov	r0, #10
   1135c:	bl	10bdc <putchar@plt>
   11360:	subs	r4, r4, #1
   11364:	bgt	1131c <imprimeArmazem@@Base+0x84>
   11368:	movw	r0, #7026	; 0x1b72
   1136c:	movt	r0, #1
   11370:	bl	10b7c <printf@plt>
   11374:	ldr	r0, [sl]
   11378:	cmp	r0, #1
   1137c:	blt	113a4 <imprimeArmazem@@Base+0x10c>
   11380:	movw	r5, #7024	; 0x1b70
   11384:	mov	r4, #0
   11388:	movt	r5, #1
   1138c:	mov	r0, r5
   11390:	bl	10b7c <printf@plt>
   11394:	ldr	r0, [sl]
   11398:	add	r4, r4, #1
   1139c:	cmp	r4, r0
   113a0:	blt	1138c <imprimeArmazem@@Base+0xf4>
   113a4:	movw	r0, #6937	; 0x1b19
   113a8:	movt	r0, #1
   113ac:	bl	10ba0 <puts@plt>
   113b0:	ldr	r0, [sp]
   113b4:	sub	sp, fp, #28
   113b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113bc:	b	10b88 <free@plt>
   113c0:	sub	sp, fp, #28
   113c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000113c8 <armazem_novo@@Base>:
   113c8:	push	{r4, r5, r6, sl, fp, lr}
   113cc:	add	fp, sp, #16
   113d0:	mov	r5, r0
   113d4:	mov	r0, #12
   113d8:	mov	r4, r1
   113dc:	bl	10bac <malloc@plt>
   113e0:	str	r5, [r0]
   113e4:	mov	r6, r0
   113e8:	str	r4, [r0, #4]
   113ec:	bl	116e0 <fila_nova@@Base>
   113f0:	str	r0, [r6, #8]
   113f4:	mov	r0, r6
   113f8:	pop	{r4, r5, r6, sl, fp, pc}

000113fc <armazem_vazio@@Base>:
   113fc:	cmp	r0, #0
   11400:	moveq	r0, #1
   11404:	bxeq	lr
   11408:	push	{fp, lr}
   1140c:	mov	fp, sp
   11410:	ldr	r0, [r0, #8]
   11414:	bl	11750 <fila_tamanho@@Base>
   11418:	clz	r0, r0
   1141c:	lsr	r0, r0, #5
   11420:	pop	{fp, pc}

00011424 <armazem_cheio@@Base>:
   11424:	push	{r4, r5, fp, lr}
   11428:	add	fp, sp, #8
   1142c:	mov	r5, #0
   11430:	cmp	r0, #0
   11434:	beq	1147c <armazem_cheio@@Base+0x58>
   11438:	mov	r4, r0
   1143c:	ldr	r0, [r0, #8]
   11440:	bl	11750 <fila_tamanho@@Base>
   11444:	cmp	r0, #0
   11448:	beq	1147c <armazem_cheio@@Base+0x58>
   1144c:	ldr	r0, [r4, #8]
   11450:	bl	11750 <fila_tamanho@@Base>
   11454:	ldr	r1, [r4]
   11458:	cmp	r0, r1
   1145c:	bne	11484 <armazem_cheio@@Base+0x60>
   11460:	ldr	r0, [r4, #8]
   11464:	bl	11780 <fila_back@@Base>
   11468:	ldr	r1, [r4, #4]
   1146c:	ldr	r0, [r0, #4]
   11470:	mov	r5, #1
   11474:	cmp	r0, r1
   11478:	movne	r5, #0
   1147c:	mov	r0, r5
   11480:	pop	{r4, r5, fp, pc}
   11484:	mov	r5, #0
   11488:	mov	r0, r5
   1148c:	pop	{r4, r5, fp, pc}

00011490 <armazenar_contentor@@Base>:
   11490:	push	{r4, r5, r6, r7, fp, lr}
   11494:	add	fp, sp, #16
   11498:	mov	r4, r1
   1149c:	mov	r5, r0
   114a0:	bl	118d0 <pilha_nova@@Base>
   114a4:	cmp	r5, #0
   114a8:	mov	r7, #0
   114ac:	cmpne	r4, #0
   114b0:	beq	11550 <armazenar_contentor@@Base+0xc0>
   114b4:	mov	r6, r0
   114b8:	ldr	r0, [r5, #8]
   114bc:	bl	11750 <fila_tamanho@@Base>
   114c0:	cmp	r0, #0
   114c4:	beq	114f4 <armazenar_contentor@@Base+0x64>
   114c8:	ldr	r0, [r5, #8]
   114cc:	bl	11750 <fila_tamanho@@Base>
   114d0:	ldr	r1, [r5]
   114d4:	cmp	r0, r1
   114d8:	bne	114f4 <armazenar_contentor@@Base+0x64>
   114dc:	ldr	r0, [r5, #8]
   114e0:	bl	11780 <fila_back@@Base>
   114e4:	ldr	r1, [r5, #4]
   114e8:	ldr	r0, [r0, #4]
   114ec:	cmp	r0, r1
   114f0:	beq	11550 <armazenar_contentor@@Base+0xc0>
   114f4:	ldr	r0, [r5, #8]
   114f8:	bl	11750 <fila_tamanho@@Base>
   114fc:	cmp	r0, #0
   11500:	bne	11518 <armazenar_contentor@@Base+0x88>
   11504:	ldr	r7, [r5, #8]
   11508:	bl	118d0 <pilha_nova@@Base>
   1150c:	mov	r1, r0
   11510:	mov	r0, r7
   11514:	bl	117b8 <fila_push@@Base>
   11518:	ldr	r0, [r5, #8]
   1151c:	bl	11780 <fila_back@@Base>
   11520:	ldr	r1, [r5, #4]
   11524:	ldr	r0, [r0, #4]
   11528:	cmp	r0, r1
   1152c:	bne	1153c <armazenar_contentor@@Base+0xac>
   11530:	ldr	r0, [r5, #8]
   11534:	mov	r1, r6
   11538:	bl	117b8 <fila_push@@Base>
   1153c:	ldr	r0, [r5, #8]
   11540:	bl	11780 <fila_back@@Base>
   11544:	mov	r1, r4
   11548:	bl	11970 <pilha_push@@Base>
   1154c:	mov	r7, #1
   11550:	mov	r0, r7
   11554:	pop	{r4, r5, r6, r7, fp, pc}

00011558 <expedir_contentor@@Base>:
   11558:	push	{r4, r5, fp, lr}
   1155c:	add	fp, sp, #8
   11560:	mov	r4, #0
   11564:	cmp	r0, #0
   11568:	beq	115f0 <expedir_contentor@@Base+0x98>
   1156c:	mov	r5, r0
   11570:	ldr	r0, [r0, #8]
   11574:	bl	11750 <fila_tamanho@@Base>
   11578:	cmp	r0, #0
   1157c:	beq	115f0 <expedir_contentor@@Base+0x98>
   11580:	ldr	r0, [r5, #8]
   11584:	bl	11760 <fila_front@@Base>
   11588:	bl	11950 <pilha_top@@Base>
   1158c:	cmp	r0, #0
   11590:	beq	115f0 <expedir_contentor@@Base+0x98>
   11594:	ldr	r0, [r5, #8]
   11598:	bl	11760 <fila_front@@Base>
   1159c:	bl	11950 <pilha_top@@Base>
   115a0:	ldr	r4, [r0]
   115a4:	ldr	r0, [r5, #8]
   115a8:	bl	11760 <fila_front@@Base>
   115ac:	bl	11950 <pilha_top@@Base>
   115b0:	vldr	s0, [r0, #4]
   115b4:	mov	r0, r4
   115b8:	bl	115f8 <contentor_novo@@Base>
   115bc:	mov	r4, r0
   115c0:	ldr	r0, [r5, #8]
   115c4:	bl	11760 <fila_front@@Base>
   115c8:	mov	r1, r0
   115cc:	ldr	r0, [r5, #8]
   115d0:	ldr	r1, [r1, #4]
   115d4:	cmp	r1, #1
   115d8:	bgt	115e8 <expedir_contentor@@Base+0x90>
   115dc:	bl	11830 <fila_pop@@Base>
   115e0:	mov	r0, r4
   115e4:	pop	{r4, r5, fp, pc}
   115e8:	bl	11760 <fila_front@@Base>
   115ec:	bl	119e4 <pilha_pop@@Base>
   115f0:	mov	r0, r4
   115f4:	pop	{r4, r5, fp, pc}

000115f8 <contentor_novo@@Base>:
   115f8:	push	{r4, r5, fp, lr}
   115fc:	add	fp, sp, #8
   11600:	vpush	{d8}
   11604:	mov	r4, r0
   11608:	mov	r0, #8
   1160c:	vmov.f32	s16, s0
   11610:	bl	10bac <malloc@plt>
   11614:	mov	r5, r0
   11618:	mov	r0, r4
   1161c:	bl	10bd0 <strlen@plt>
   11620:	add	r0, r0, #1
   11624:	bl	10bac <malloc@plt>
   11628:	mov	r1, r4
   1162c:	str	r0, [r5]
   11630:	bl	10b94 <strcpy@plt>
   11634:	vstr	s16, [r5, #4]
   11638:	mov	r0, r5
   1163c:	vpop	{d8}
   11640:	pop	{r4, r5, fp, pc}

00011644 <contentor_apaga@@Base>:
   11644:	push	{r4, sl, fp, lr}
   11648:	add	fp, sp, #8
   1164c:	mov	r4, r0
   11650:	ldr	r0, [r0]
   11654:	bl	10b88 <free@plt>
   11658:	mov	r0, r4
   1165c:	pop	{r4, sl, fp, lr}
   11660:	b	10b88 <free@plt>

00011664 <contentor_imprime@@Base>:
   11664:	cmp	r0, #0
   11668:	beq	11688 <contentor_imprime@@Base+0x24>
   1166c:	vldr	s0, [r0, #4]
   11670:	ldr	r1, [r0]
   11674:	movw	r0, #7584	; 0x1da0
   11678:	movt	r0, #1
   1167c:	vcvt.f64.f32	d16, s0
   11680:	vmov	r2, r3, d16
   11684:	b	10b7c <printf@plt>
   11688:	movw	r0, #7627	; 0x1dcb
   1168c:	movt	r0, #1
   11690:	b	10ba0 <puts@plt>

00011694 <fila_novo_elemento@@Base>:
   11694:	push	{r4, r5, fp, lr}
   11698:	add	fp, sp, #8
   1169c:	mov	r5, r0
   116a0:	mov	r0, #8
   116a4:	bl	10bac <malloc@plt>
   116a8:	mov	r4, #0
   116ac:	cmp	r0, #0
   116b0:	beq	116cc <fila_novo_elemento@@Base+0x38>
   116b4:	cmp	r5, #0
   116b8:	str	r5, [r0]
   116bc:	beq	116d4 <fila_novo_elemento@@Base+0x40>
   116c0:	mov	r1, #0
   116c4:	mov	r4, r0
   116c8:	str	r1, [r0, #4]
   116cc:	mov	r0, r4
   116d0:	pop	{r4, r5, fp, pc}
   116d4:	bl	10b88 <free@plt>
   116d8:	mov	r0, r4
   116dc:	pop	{r4, r5, fp, pc}

000116e0 <fila_nova@@Base>:
   116e0:	push	{fp, lr}
   116e4:	mov	fp, sp
   116e8:	mov	r0, #8
   116ec:	bl	10bac <malloc@plt>
   116f0:	cmp	r0, #0
   116f4:	moveq	r0, #0
   116f8:	movne	r1, #0
   116fc:	strne	r1, [r0]
   11700:	strne	r1, [r0, #4]
   11704:	pop	{fp, pc}

00011708 <fila_apaga@@Base>:
   11708:	cmp	r0, #0
   1170c:	bxeq	lr
   11710:	push	{r4, r5, fp, lr}
   11714:	add	fp, sp, #8
   11718:	mov	r4, r0
   1171c:	b	11738 <fila_apaga@@Base+0x30>
   11720:	ldr	r0, [r5, #4]
   11724:	str	r0, [r4]
   11728:	ldr	r0, [r5]
   1172c:	bl	118f8 <pilha_apaga@@Base>
   11730:	mov	r0, r5
   11734:	bl	10b88 <free@plt>
   11738:	ldr	r5, [r4]
   1173c:	cmp	r5, #0
   11740:	bne	11720 <fila_apaga@@Base+0x18>
   11744:	mov	r0, r4
   11748:	pop	{r4, r5, fp, lr}
   1174c:	b	10b88 <free@plt>

00011750 <fila_tamanho@@Base>:
   11750:	cmp	r0, #0
   11754:	ldrne	r0, [r0, #4]
   11758:	mvneq	r0, #0
   1175c:	bx	lr

00011760 <fila_front@@Base>:
   11760:	mov	r1, r0
   11764:	mov	r0, #0
   11768:	cmp	r1, #0
   1176c:	ldrne	r2, [r1, #4]
   11770:	cmpne	r2, #0
   11774:	ldrne	r0, [r1]
   11778:	ldrne	r0, [r0]
   1177c:	bx	lr

00011780 <fila_back@@Base>:
   11780:	mov	r1, r0
   11784:	mov	r0, #0
   11788:	cmp	r1, #0
   1178c:	ldrne	r2, [r1, #4]
   11790:	cmpne	r2, #0
   11794:	bne	1179c <fila_back@@Base+0x1c>
   11798:	bx	lr
   1179c:	ldr	r0, [r1]
   117a0:	mov	r1, r0
   117a4:	ldr	r0, [r0, #4]
   117a8:	cmp	r0, #0
   117ac:	bne	117a0 <fila_back@@Base+0x20>
   117b0:	ldr	r0, [r1]
   117b4:	bx	lr

000117b8 <fila_push@@Base>:
   117b8:	push	{r4, r5, r6, sl, fp, lr}
   117bc:	add	fp, sp, #16
   117c0:	cmp	r0, #0
   117c4:	beq	11824 <fila_push@@Base+0x6c>
   117c8:	ldr	r6, [r0]
   117cc:	mov	r4, r0
   117d0:	mov	r0, #8
   117d4:	mov	r5, r1
   117d8:	bl	10bac <malloc@plt>
   117dc:	cmp	r0, #0
   117e0:	popeq	{r4, r5, r6, sl, fp, pc}
   117e4:	cmp	r5, #0
   117e8:	str	r5, [r0]
   117ec:	beq	11828 <fila_push@@Base+0x70>
   117f0:	mov	r1, #0
   117f4:	cmp	r6, #0
   117f8:	str	r1, [r0, #4]
   117fc:	ldr	r1, [r4, #4]
   11800:	add	r1, r1, #1
   11804:	str	r1, [r4, #4]
   11808:	streq	r0, [r4]
   1180c:	popeq	{r4, r5, r6, sl, fp, pc}
   11810:	mov	r1, r6
   11814:	ldr	r6, [r6, #4]
   11818:	cmp	r6, #0
   1181c:	bne	11810 <fila_push@@Base+0x58>
   11820:	str	r0, [r1, #4]
   11824:	pop	{r4, r5, r6, sl, fp, pc}
   11828:	pop	{r4, r5, r6, sl, fp, lr}
   1182c:	b	10b88 <free@plt>

00011830 <fila_pop@@Base>:
   11830:	cmp	r0, #0
   11834:	ldrne	r1, [r0, #4]
   11838:	cmpne	r1, #0
   1183c:	bxeq	lr
   11840:	push	{r4, sl, fp, lr}
   11844:	add	fp, sp, #8
   11848:	sub	r1, r1, #1
   1184c:	str	r1, [r0, #4]
   11850:	ldr	r4, [r0]
   11854:	ldr	r1, [r4, #4]
   11858:	str	r1, [r0]
   1185c:	ldr	r0, [r4]
   11860:	bl	118f8 <pilha_apaga@@Base>
   11864:	mov	r0, r4
   11868:	pop	{r4, sl, fp, lr}
   1186c:	b	10b88 <free@plt>

00011870 <pilha_novo_elemento@@Base>:
   11870:	push	{r4, r5, r6, sl, fp, lr}
   11874:	add	fp, sp, #16
   11878:	mov	r6, r0
   1187c:	mov	r0, #8
   11880:	bl	10bac <malloc@plt>
   11884:	mov	r4, #0
   11888:	cmp	r0, #0
   1188c:	beq	118b8 <pilha_novo_elemento@@Base+0x48>
   11890:	mov	r5, r0
   11894:	vldr	s0, [r6, #4]
   11898:	ldr	r0, [r6]
   1189c:	bl	115f8 <contentor_novo@@Base>
   118a0:	cmp	r0, #0
   118a4:	str	r0, [r5]
   118a8:	beq	118c0 <pilha_novo_elemento@@Base+0x50>
   118ac:	mov	r0, #0
   118b0:	mov	r4, r5
   118b4:	str	r0, [r5, #4]
   118b8:	mov	r0, r4
   118bc:	pop	{r4, r5, r6, sl, fp, pc}
   118c0:	mov	r0, r5
   118c4:	bl	10b88 <free@plt>
   118c8:	mov	r0, r4
   118cc:	pop	{r4, r5, r6, sl, fp, pc}

000118d0 <pilha_nova@@Base>:
   118d0:	push	{fp, lr}
   118d4:	mov	fp, sp
   118d8:	mov	r0, #8
   118dc:	bl	10bac <malloc@plt>
   118e0:	cmp	r0, #0
   118e4:	moveq	r0, #0
   118e8:	movne	r1, #0
   118ec:	strne	r1, [r0]
   118f0:	strne	r1, [r0, #4]
   118f4:	pop	{fp, pc}

000118f8 <pilha_apaga@@Base>:
   118f8:	cmp	r0, #0
   118fc:	bxeq	lr
   11900:	push	{r4, r5, fp, lr}
   11904:	add	fp, sp, #8
   11908:	mov	r4, r0
   1190c:	b	11928 <pilha_apaga@@Base+0x30>
   11910:	ldr	r0, [r5, #4]
   11914:	str	r0, [r4]
   11918:	ldr	r0, [r5]
   1191c:	bl	11644 <contentor_apaga@@Base>
   11920:	mov	r0, r5
   11924:	bl	10b88 <free@plt>
   11928:	ldr	r5, [r4]
   1192c:	cmp	r5, #0
   11930:	bne	11910 <pilha_apaga@@Base+0x18>
   11934:	mov	r0, r4
   11938:	pop	{r4, r5, fp, lr}
   1193c:	b	10b88 <free@plt>

00011940 <pilha_tamanho@@Base>:
   11940:	cmp	r0, #0
   11944:	ldrne	r0, [r0, #4]
   11948:	mvneq	r0, #0
   1194c:	bx	lr

00011950 <pilha_top@@Base>:
   11950:	mov	r1, r0
   11954:	mov	r0, #0
   11958:	cmp	r1, #0
   1195c:	ldrne	r2, [r1, #4]
   11960:	cmpne	r2, #0
   11964:	ldrne	r0, [r1]
   11968:	ldrne	r0, [r0]
   1196c:	bx	lr

00011970 <pilha_push@@Base>:
   11970:	push	{r4, r5, r6, sl, fp, lr}
   11974:	add	fp, sp, #16
   11978:	cmp	r0, #0
   1197c:	beq	119d4 <pilha_push@@Base+0x64>
   11980:	mov	r4, r0
   11984:	mov	r0, #8
   11988:	mov	r6, r1
   1198c:	bl	10bac <malloc@plt>
   11990:	cmp	r0, #0
   11994:	popeq	{r4, r5, r6, sl, fp, pc}
   11998:	mov	r5, r0
   1199c:	vldr	s0, [r6, #4]
   119a0:	ldr	r0, [r6]
   119a4:	bl	115f8 <contentor_novo@@Base>
   119a8:	cmp	r0, #0
   119ac:	str	r0, [r5]
   119b0:	beq	119d8 <pilha_push@@Base+0x68>
   119b4:	mov	r0, #0
   119b8:	str	r0, [r5, #4]
   119bc:	ldm	r4, {r0, r1}
   119c0:	add	r1, r1, #1
   119c4:	cmp	r0, #0
   119c8:	str	r1, [r4, #4]
   119cc:	strne	r0, [r5, #4]
   119d0:	str	r5, [r4]
   119d4:	pop	{r4, r5, r6, sl, fp, pc}
   119d8:	mov	r0, r5
   119dc:	pop	{r4, r5, r6, sl, fp, lr}
   119e0:	b	10b88 <free@plt>

000119e4 <pilha_pop@@Base>:
   119e4:	cmp	r0, #0
   119e8:	ldrne	r1, [r0, #4]
   119ec:	cmpne	r1, #0
   119f0:	bxeq	lr
   119f4:	push	{r4, sl, fp, lr}
   119f8:	add	fp, sp, #8
   119fc:	ldr	r4, [r0]
   11a00:	sub	r1, r1, #1
   11a04:	ldr	r2, [r4, #4]
   11a08:	str	r2, [r0]
   11a0c:	str	r1, [r0, #4]
   11a10:	ldr	r0, [r4]
   11a14:	bl	11644 <contentor_apaga@@Base>
   11a18:	mov	r0, r4
   11a1c:	pop	{r4, sl, fp, lr}
   11a20:	b	10b88 <free@plt>

00011a24 <__libc_csu_init@@Base>:
   11a24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a28:	mov	r7, r0
   11a2c:	ldr	r6, [pc, #72]	; 11a7c <__libc_csu_init@@Base+0x58>
   11a30:	ldr	r5, [pc, #72]	; 11a80 <__libc_csu_init@@Base+0x5c>
   11a34:	add	r6, pc, r6
   11a38:	add	r5, pc, r5
   11a3c:	sub	r6, r6, r5
   11a40:	mov	r8, r1
   11a44:	mov	r9, r2
   11a48:	bl	10b50 <calloc@plt-0x20>
   11a4c:	asrs	r6, r6, #2
   11a50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a54:	mov	r4, #0
   11a58:	add	r4, r4, #1
   11a5c:	ldr	r3, [r5], #4
   11a60:	mov	r2, r9
   11a64:	mov	r1, r8
   11a68:	mov	r0, r7
   11a6c:	blx	r3
   11a70:	cmp	r6, r4
   11a74:	bne	11a58 <__libc_csu_init@@Base+0x34>
   11a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a7c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11a80:	andeq	r0, r1, r8, asr #9

00011a84 <__libc_csu_fini@@Base>:
   11a84:	bx	lr

Disassembly of section .fini:

00011a88 <.fini>:
   11a88:	push	{r3, lr}
   11a8c:	pop	{r3, pc}
