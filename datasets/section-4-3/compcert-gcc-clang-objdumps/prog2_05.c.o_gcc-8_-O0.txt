
../compcert-repos/prog2/CMakeFiles/1.5.dir/Aula01_Ficheiros_e_Formatos_de_dados/05.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #32
  10:	mov	r3, #0
  14:	str	r3, [fp, #-8]
  18:	mov	r3, #1
  1c:	str	r3, [fp, #-12]
  20:	mov	r3, #0
  24:	str	r3, [fp, #-16]
  28:	mov	r3, #0
  2c:	str	r3, [fp, #-20]	; 0xffffffec
  30:	mov	r3, #0
  34:	str	r3, [fp, #-24]	; 0xffffffe8
  38:	movw	r1, #0
  3c:	movt	r1, #0
  40:	movw	r0, #0
  44:	movt	r0, #0
  48:	bl	0 <fopen>
  4c:	str	r0, [fp, #-28]	; 0xffffffe4
  50:	b	18c <main+0x18c>
  54:	ldr	r3, [fp, #-12]
  58:	add	r3, r3, #1
  5c:	str	r3, [fp, #-12]
  60:	b	18c <main+0x18c>
  64:	ldrb	r3, [fp, #-29]	; 0xffffffe3
  68:	cmp	r3, #115	; 0x73
  6c:	bne	9c <main+0x9c>
  70:	ldr	r1, [fp, #-28]	; 0xffffffe4
  74:	movw	r0, #0
  78:	movt	r0, #0
  7c:	bl	1b8 <IsIOFunction>
  80:	mov	r3, r0
  84:	cmp	r3, #0
  88:	beq	18c <main+0x18c>
  8c:	ldr	r3, [fp, #-20]	; 0xffffffec
  90:	add	r3, r3, #1
  94:	str	r3, [fp, #-20]	; 0xffffffec
  98:	b	18c <main+0x18c>
  9c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
  a0:	cmp	r3, #112	; 0x70
  a4:	bne	d4 <main+0xd4>
  a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
  ac:	movw	r0, #0
  b0:	movt	r0, #0
  b4:	bl	1b8 <IsIOFunction>
  b8:	mov	r3, r0
  bc:	cmp	r3, #0
  c0:	beq	18c <main+0x18c>
  c4:	ldr	r3, [fp, #-20]	; 0xffffffec
  c8:	add	r3, r3, #1
  cc:	str	r3, [fp, #-20]	; 0xffffffec
  d0:	b	18c <main+0x18c>
  d4:	ldrb	r3, [fp, #-29]	; 0xffffffe3
  d8:	cmp	r3, #47	; 0x2f
  dc:	bne	12c <main+0x12c>
  e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
  e4:	bl	0 <fgetc>
  e8:	mov	r3, r0
  ec:	cmp	r3, #42	; 0x2a
  f0:	bne	118 <main+0x118>
  f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
  f8:	cmp	r3, #0
  fc:	bne	118 <main+0x118>
 100:	mov	r3, #1
 104:	str	r3, [fp, #-24]	; 0xffffffe8
 108:	ldr	r3, [fp, #-16]
 10c:	add	r3, r3, #1
 110:	str	r3, [fp, #-16]
 114:	b	18c <main+0x18c>
 118:	mov	r2, #1
 11c:	mvn	r1, #0
 120:	ldr	r0, [fp, #-28]	; 0xffffffe4
 124:	bl	0 <fseek>
 128:	b	18c <main+0x18c>
 12c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
 130:	cmp	r3, #42	; 0x2a
 134:	bne	18c <main+0x18c>
 138:	ldr	r0, [fp, #-28]	; 0xffffffe4
 13c:	bl	0 <fgetc>
 140:	mov	r3, r0
 144:	cmp	r3, #47	; 0x2f
 148:	bne	17c <main+0x17c>
 14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 150:	cmp	r3, #0
 154:	beq	17c <main+0x17c>
 158:	ldr	r3, [fp, #-16]
 15c:	add	r3, r3, #1
 160:	str	r3, [fp, #-16]
 164:	ldr	r3, [fp, #-8]
 168:	add	r3, r3, #1
 16c:	str	r3, [fp, #-8]
 170:	mov	r3, #0
 174:	str	r3, [fp, #-24]	; 0xffffffe8
 178:	b	18c <main+0x18c>
 17c:	mov	r2, #1
 180:	mvn	r1, #0
 184:	ldr	r0, [fp, #-28]	; 0xffffffe4
 188:	bl	0 <fseek>
 18c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 190:	bl	0 <fgetc>
 194:	mov	r3, r0
 198:	strb	r3, [fp, #-29]	; 0xffffffe3
 19c:	ldr	r3, [fp, #-16]
 1a0:	add	r3, r3, #1
 1a4:	str	r3, [fp, #-16]
 1a8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
 1ac:	cmp	r3, #10
 1b0:	bne	64 <main+0x64>
 1b4:	b	54 <main+0x54>

000001b8 <IsIOFunction>:
 1b8:	str	fp, [sp, #-8]!
 1bc:	str	lr, [sp, #4]
 1c0:	add	fp, sp, #4
 1c4:	sub	sp, sp, #24
 1c8:	str	r0, [fp, #-24]	; 0xffffffe8
 1cc:	str	r1, [fp, #-28]	; 0xffffffe4
 1d0:	mov	r2, #1
 1d4:	mvn	r1, #0
 1d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
 1dc:	bl	0 <fseek>
 1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 1e4:	bl	0 <strlen>
 1e8:	mov	r3, r0
 1ec:	str	r3, [fp, #-12]
 1f0:	mov	r3, #0
 1f4:	str	r3, [fp, #-20]	; 0xffffffec
 1f8:	sub	r3, fp, #16
 1fc:	mov	r2, #0
 200:	strh	r2, [r3]
 204:	strb	r2, [r3, #2]
 208:	mov	r3, #0
 20c:	str	r3, [fp, #-8]
 210:	b	244 <IsIOFunction+0x8c>
 214:	ldr	r0, [fp, #-28]	; 0xffffffe4
 218:	bl	0 <fgetc>
 21c:	mov	r3, r0
 220:	uxtb	r1, r3
 224:	sub	r2, fp, #20
 228:	ldr	r3, [fp, #-8]
 22c:	add	r3, r2, r3
 230:	mov	r2, r1
 234:	strb	r2, [r3]
 238:	ldr	r3, [fp, #-8]
 23c:	add	r3, r3, #1
 240:	str	r3, [fp, #-8]
 244:	ldr	r2, [fp, #-8]
 248:	ldr	r3, [fp, #-12]
 24c:	cmp	r2, r3
 250:	blt	214 <IsIOFunction+0x5c>
 254:	sub	r2, fp, #20
 258:	ldr	r3, [fp, #-8]
 25c:	add	r3, r2, r3
 260:	mov	r2, #0
 264:	strb	r2, [r3]
 268:	ldr	r3, [fp, #-12]
 26c:	rsb	r3, r3, #1
 270:	mov	r2, #1
 274:	mov	r1, r3
 278:	ldr	r0, [fp, #-28]	; 0xffffffe4
 27c:	bl	0 <fseek>
 280:	sub	r3, fp, #20
 284:	mov	r1, r3
 288:	ldr	r0, [fp, #-24]	; 0xffffffe8
 28c:	bl	0 <strcmp>
 290:	mov	r3, r0
 294:	cmp	r3, #0
 298:	bne	2a4 <IsIOFunction+0xec>
 29c:	mov	r3, #1
 2a0:	b	2a8 <IsIOFunction+0xf0>
 2a4:	mov	r3, #0
 2a8:	mov	r0, r3
 2ac:	sub	sp, fp, #4
 2b0:	ldr	fp, [sp]
 2b4:	add	sp, sp, #4
 2b8:	pop	{pc}		; (ldr pc, [sp], #4)
