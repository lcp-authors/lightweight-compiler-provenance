
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <name_buffer_init>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	mov	r4, r0
  18:	cmp	r4, #0
  1c:	bne	34 <name_buffer_init+0x34>
  20:	ldr	r0, [pc, #96]	; 88 <name_buffer_init+0x88>
  24:	ldr	r1, [pc, #84]	; 80 <name_buffer_init+0x80>
  28:	mov	r2, #62	; 0x3e
  2c:	ldr	r3, [pc, #80]	; 84 <name_buffer_init+0x84>
  30:	bl	0 <__assert_fail>
  34:	mov	r2, #0
  38:	str	r2, [r4]
  3c:	mov	r3, #1024	; 0x400
  40:	str	r3, [r4, #4]
  44:	mov	r0, #1024	; 0x400
  48:	bl	0 <malloc>
  4c:	str	r0, [r4, #8]
  50:	ldr	r0, [r4, #8]
  54:	cmp	r0, #0
  58:	bne	70 <name_buffer_init+0x70>
  5c:	ldr	r0, [pc, #40]	; 8c <name_buffer_init+0x8c>
  60:	ldr	r1, [pc, #24]	; 80 <name_buffer_init+0x80>
  64:	mov	r2, #67	; 0x43
  68:	ldr	r3, [pc, #20]	; 84 <name_buffer_init+0x84>
  6c:	bl	0 <__assert_fail>
  70:	ldr	r4, [sp, #8]
  74:	ldr	lr, [sp, #4]
  78:	add	sp, sp, #16
  7c:	bx	lr
  80:	.word	0x00000061
  84:	.word	0x0000014e
  88:	.word	0x0000010f
  8c:	.word	0x0000011c

00000090 <name_buffer_done>:
  90:	mov	ip, sp
  94:	sub	sp, sp, #16
  98:	str	ip, [sp]
  9c:	str	lr, [sp, #4]
  a0:	str	r4, [sp, #8]
  a4:	mov	r4, r0
  a8:	cmp	r4, #0
  ac:	bne	c4 <name_buffer_done+0x34>
  b0:	ldr	r0, [pc, #68]	; fc <name_buffer_done+0x6c>
  b4:	ldr	r1, [pc, #56]	; f4 <name_buffer_done+0x64>
  b8:	mov	r2, #72	; 0x48
  bc:	ldr	r3, [pc, #52]	; f8 <name_buffer_done+0x68>
  c0:	bl	0 <__assert_fail>
  c4:	mov	r0, #0
  c8:	str	r0, [r4]
  cc:	mov	r2, #0
  d0:	str	r2, [r4, #4]
  d4:	ldr	r0, [r4, #8]
  d8:	bl	0 <free>
  dc:	mov	r3, #0
  e0:	str	r3, [r4, #8]
  e4:	ldr	r4, [sp, #8]
  e8:	ldr	lr, [sp, #4]
  ec:	add	sp, sp, #16
  f0:	bx	lr
  f4:	.word	0x00000061
  f8:	.word	0x0000015f
  fc:	.word	0x0000010f

00000100 <append_string_to_name_buffer>:
 100:	mov	ip, sp
 104:	sub	sp, sp, #32
 108:	str	ip, [sp]
 10c:	str	lr, [sp, #4]
 110:	str	r4, [sp, #8]
 114:	str	r5, [sp, #12]
 118:	str	r6, [sp, #16]
 11c:	str	r7, [sp, #20]
 120:	str	r8, [sp, #24]
 124:	mov	r4, r1
 128:	mov	r5, r0
 12c:	cmp	r5, #0
 130:	bne	148 <append_string_to_name_buffer+0x48>
 134:	ldr	r0, [pc, #244]	; 230 <append_string_to_name_buffer+0x130>
 138:	ldr	r1, [pc, #228]	; 224 <append_string_to_name_buffer+0x124>
 13c:	mov	r2, #84	; 0x54
 140:	ldr	r3, [pc, #236]	; 234 <append_string_to_name_buffer+0x134>
 144:	bl	0 <__assert_fail>
 148:	cmp	r4, #0
 14c:	bne	164 <append_string_to_name_buffer+0x64>
 150:	ldr	r0, [pc, #212]	; 22c <append_string_to_name_buffer+0x12c>
 154:	ldr	r1, [pc, #200]	; 224 <append_string_to_name_buffer+0x124>
 158:	mov	r2, #85	; 0x55
 15c:	ldr	r3, [pc, #208]	; 234 <append_string_to_name_buffer+0x134>
 160:	bl	0 <__assert_fail>
 164:	mov	r0, r4
 168:	bl	0 <strlen>
 16c:	mov	r6, r0
 170:	ldr	ip, [r5]
 174:	add	ip, ip, r6
 178:	ldr	r0, [r5, #4]
 17c:	cmp	ip, r0
 180:	blt	1e4 <append_string_to_name_buffer+0xe4>
 184:	ldr	r8, [r5, #4]
 188:	ldr	r1, [r5]
 18c:	add	r3, r1, r6
 190:	cmp	r8, r3
 194:	bge	1a0 <append_string_to_name_buffer+0xa0>
 198:	add	r8, r8, #1024	; 0x400
 19c:	b	188 <append_string_to_name_buffer+0x88>
 1a0:	mov	r0, r8
 1a4:	bl	0 <malloc>
 1a8:	mov	r7, r0
 1ac:	cmp	r7, #0
 1b0:	bne	1c8 <append_string_to_name_buffer+0xc8>
 1b4:	ldr	r0, [pc, #108]	; 228 <append_string_to_name_buffer+0x128>
 1b8:	ldr	r1, [pc, #100]	; 224 <append_string_to_name_buffer+0x124>
 1bc:	mov	r2, #100	; 0x64
 1c0:	ldr	r3, [pc, #108]	; 234 <append_string_to_name_buffer+0x134>
 1c4:	bl	0 <__assert_fail>
 1c8:	ldr	r1, [r5, #8]
 1cc:	mov	r0, r7
 1d0:	bl	0 <strcpy>
 1d4:	ldr	r0, [r5, #8]
 1d8:	bl	0 <free>
 1dc:	str	r7, [r5, #8]
 1e0:	str	r8, [r5, #4]
 1e4:	ldr	r3, [r5, #8]
 1e8:	ldr	r1, [r5]
 1ec:	add	r0, r3, r1
 1f0:	mov	r1, r4
 1f4:	bl	0 <strcpy>
 1f8:	ldr	r1, [r5]
 1fc:	add	r2, r1, r6
 200:	str	r2, [r5]
 204:	ldr	r4, [sp, #8]
 208:	ldr	r5, [sp, #12]
 20c:	ldr	r6, [sp, #16]
 210:	ldr	r7, [sp, #20]
 214:	ldr	r8, [sp, #24]
 218:	ldr	lr, [sp, #4]
 21c:	add	sp, sp, #32
 220:	bx	lr
 224:	.word	0x00000061
 228:	.word	0x000000fc
 22c:	.word	0x00000002
 230:	.word	0x0000010f
 234:	.word	0x00000170

00000238 <coda_match_file>:
 238:	mov	ip, sp
 23c:	sub	sp, sp, #560	; 0x230
 240:	str	ip, [sp]
 244:	str	lr, [sp, #4]
 248:	str	r4, [sp, #8]
 24c:	str	r5, [sp, #12]
 250:	str	r6, [sp, #16]
 254:	str	r7, [sp, #20]
 258:	str	r8, [sp, #24]
 25c:	mov	r4, r3
 260:	mov	r5, r2
 264:	mov	r7, r1
 268:	mov	r6, r0
 26c:	ldr	r0, [r7, #8]
 270:	add	r1, sp, #36	; 0x24
 274:	bl	0 <coda_open>
 278:	mov	r8, r0
 27c:	cmp	r8, #0
 280:	beq	29c <coda_match_file+0x64>
 284:	ldr	r3, [pc, #364]	; 3f8 <coda_match_file+0x1c0>
 288:	ldr	ip, [r3]
 28c:	cmn	ip, #21
 290:	moveq	r0, #1
 294:	movne	r0, #0
 298:	b	2a0 <coda_match_file+0x68>
 29c:	mov	r0, #0
 2a0:	cmp	r0, #0
 2a4:	beq	2c8 <coda_match_file+0x90>
 2a8:	mov	r0, #0
 2ac:	bl	0 <coda_set_option_use_mmap>
 2b0:	ldr	r0, [r7, #8]
 2b4:	add	r1, sp, #36	; 0x24
 2b8:	bl	0 <coda_open>
 2bc:	mov	r8, r0
 2c0:	mov	r0, #1
 2c4:	bl	0 <coda_set_option_use_mmap>
 2c8:	cmp	r8, #0
 2cc:	beq	324 <coda_match_file+0xec>
 2d0:	ldr	r2, [pc, #288]	; 3f8 <coda_match_file+0x1c0>
 2d4:	ldr	r3, [r2]
 2d8:	cmn	r3, #200	; 0xc8
 2dc:	beq	30c <coda_match_file+0xd4>
 2e0:	ldr	r3, [pc, #272]	; 3f8 <coda_match_file+0x1c0>
 2e4:	ldr	r0, [r3]
 2e8:	bl	0 <coda_errno_to_string>
 2ec:	ldr	r2, [r7, #8]
 2f0:	mov	r1, #1
 2f4:	mov	r3, r4
 2f8:	mov	ip, r0
 2fc:	mov	r0, r2
 300:	mov	r2, ip
 304:	blx	r5
 308:	b	3d8 <coda_match_file+0x1a0>
 30c:	ldr	r0, [r7, #8]
 310:	mov	r1, #3
 314:	mov	r2, #0
 318:	mov	r3, r4
 31c:	blx	r5
 320:	b	3d8 <coda_match_file+0x1a0>
 324:	add	r0, sp, #40	; 0x28
 328:	ldr	r1, [sp, #36]	; 0x24
 32c:	bl	0 <coda_cursor_set_product>
 330:	cmp	r0, #0
 334:	beq	36c <coda_match_file+0x134>
 338:	ldr	r0, [sp, #36]	; 0x24
 33c:	bl	0 <coda_close>
 340:	ldr	r0, [pc, #176]	; 3f8 <coda_match_file+0x1c0>
 344:	ldr	r0, [r0]
 348:	bl	0 <coda_errno_to_string>
 34c:	ldr	r2, [r7, #8]
 350:	mov	r1, #0
 354:	mov	r3, r4
 358:	mov	ip, r0
 35c:	mov	r0, r2
 360:	mov	r2, ip
 364:	blx	r5
 368:	b	3d8 <coda_match_file+0x1a0>
 36c:	add	r1, sp, #40	; 0x28
 370:	add	r2, sp, #32
 374:	mov	r0, r6
 378:	bl	0 <coda_expression_eval_bool>
 37c:	cmp	r0, #0
 380:	beq	3a8 <coda_match_file+0x170>
 384:	ldr	r3, [pc, #108]	; 3f8 <coda_match_file+0x1c0>
 388:	ldr	r0, [r3]
 38c:	bl	0 <coda_errno_to_string>
 390:	mov	r2, r0
 394:	ldr	r0, [r7, #8]
 398:	mov	r1, #0
 39c:	mov	r3, r4
 3a0:	blx	r5
 3a4:	b	3d8 <coda_match_file+0x1a0>
 3a8:	ldr	r0, [sp, #36]	; 0x24
 3ac:	bl	0 <coda_close>
 3b0:	ldr	r1, [sp, #32]
 3b4:	cmp	r1, #0
 3b8:	bne	3c4 <coda_match_file+0x18c>
 3bc:	mov	r1, #5
 3c0:	b	3c8 <coda_match_file+0x190>
 3c4:	mov	r1, #4
 3c8:	ldr	r0, [r7, #8]
 3cc:	mov	r2, #0
 3d0:	mov	r3, r4
 3d4:	blx	r5
 3d8:	ldr	r4, [sp, #8]
 3dc:	ldr	r5, [sp, #12]
 3e0:	ldr	r6, [sp, #16]
 3e4:	ldr	r7, [sp, #20]
 3e8:	ldr	r8, [sp, #24]
 3ec:	ldr	lr, [sp, #4]
 3f0:	add	sp, sp, #560	; 0x230
 3f4:	bx	lr
 3f8:	.word	0x00000000

000003fc <coda_match_dir>:
 3fc:	mov	ip, sp
 400:	sub	sp, sp, #48	; 0x30
 404:	str	ip, [sp, #4]
 408:	str	lr, [sp, #8]
 40c:	str	r4, [sp, #16]
 410:	str	r5, [sp, #20]
 414:	str	r6, [sp, #24]
 418:	str	r7, [sp, #28]
 41c:	str	r8, [sp, #32]
 420:	str	r9, [sp, #36]	; 0x24
 424:	str	sl, [sp, #40]	; 0x28
 428:	mov	r6, r3
 42c:	mov	r7, r2
 430:	mov	r8, r1
 434:	mov	r9, r0
 438:	ldr	r0, [r8, #8]
 43c:	bl	0 <opendir>
 440:	mov	r5, r0
 444:	cmp	r5, #0
 448:	bne	468 <coda_match_dir+0x6c>
 44c:	ldr	r0, [r8, #8]
 450:	mov	r1, #2
 454:	ldr	r2, [pc, #248]	; 554 <coda_match_dir+0x158>
 458:	mov	r3, r6
 45c:	blx	r7
 460:	mov	r4, r0
 464:	b	524 <coda_match_dir+0x128>
 468:	ldr	sl, [r8]
 46c:	mov	r0, r5
 470:	bl	0 <readdir>
 474:	mov	r4, r0
 478:	cmp	r4, #0
 47c:	beq	518 <coda_match_dir+0x11c>
 480:	add	r0, r4, #11
 484:	ldr	r1, [pc, #196]	; 550 <coda_match_dir+0x154>
 488:	bl	0 <strcmp>
 48c:	cmp	r0, #0
 490:	beq	4b0 <coda_match_dir+0xb4>
 494:	add	r0, r4, #11
 498:	ldr	r1, [pc, #188]	; 55c <coda_match_dir+0x160>
 49c:	bl	0 <strcmp>
 4a0:	cmp	r0, #0
 4a4:	moveq	r2, #1
 4a8:	movne	r2, #0
 4ac:	b	4b4 <coda_match_dir+0xb8>
 4b0:	mov	r2, #1
 4b4:	cmp	r2, #0
 4b8:	bne	46c <coda_match_dir+0x70>
 4bc:	ldr	r1, [pc, #148]	; 558 <coda_match_dir+0x15c>
 4c0:	mov	r0, r8
 4c4:	bl	100 <append_string_to_name_buffer>
 4c8:	add	r1, r4, #11
 4cc:	mov	r0, r8
 4d0:	bl	100 <append_string_to_name_buffer>
 4d4:	mov	r0, #1
 4d8:	str	r6, [sp]
 4dc:	mov	r3, r7
 4e0:	mov	r2, r8
 4e4:	mov	r1, r9
 4e8:	bl	560 <coda_match_filepath>
 4ec:	mov	r4, r0
 4f0:	cmp	r4, #0
 4f4:	beq	504 <coda_match_dir+0x108>
 4f8:	mov	r0, r5
 4fc:	bl	0 <closedir>
 500:	b	524 <coda_match_dir+0x128>
 504:	str	sl, [r8]
 508:	ldr	r3, [r8, #8]
 50c:	mov	r0, #0
 510:	strb	r0, [r3, sl]
 514:	b	46c <coda_match_dir+0x70>
 518:	mov	r0, r5
 51c:	bl	0 <closedir>
 520:	mov	r4, #0
 524:	mov	r0, r4
 528:	ldr	r4, [sp, #16]
 52c:	ldr	r5, [sp, #20]
 530:	ldr	r6, [sp, #24]
 534:	ldr	r7, [sp, #28]
 538:	ldr	r8, [sp, #32]
 53c:	ldr	r9, [sp, #36]	; 0x24
 540:	ldr	sl, [sp, #40]	; 0x28
 544:	ldr	lr, [sp, #8]
 548:	add	sp, sp, #48	; 0x30
 54c:	bx	lr
 550:	.word	0x00000000
 554:	.word	0x000000c0
 558:	.word	0x000000fa
 55c:	.word	0x00000131

00000560 <coda_match_filepath>:
 560:	mov	ip, sp
 564:	sub	sp, sp, #120	; 0x78
 568:	str	ip, [sp]
 56c:	str	lr, [sp, #4]
 570:	str	r4, [sp, #8]
 574:	str	r5, [sp, #12]
 578:	str	r6, [sp, #16]
 57c:	str	r7, [sp, #20]
 580:	str	r8, [sp, #24]
 584:	ldr	r4, [ip]
 588:	mov	r5, r3
 58c:	mov	r6, r2
 590:	mov	r7, r1
 594:	mov	r8, r0
 598:	ldr	r0, [r6, #8]
 59c:	add	r1, sp, #32
 5a0:	bl	0 <stat>
 5a4:	cmp	r0, #0
 5a8:	beq	61c <coda_match_filepath+0xbc>
 5ac:	bl	0 <__errno_location>
 5b0:	ldr	r0, [r0]
 5b4:	cmp	r0, #2
 5b8:	beq	5d4 <coda_match_filepath+0x74>
 5bc:	bl	0 <__errno_location>
 5c0:	ldr	r3, [r0]
 5c4:	cmp	r3, #20
 5c8:	moveq	ip, #1
 5cc:	movne	ip, #0
 5d0:	b	5d8 <coda_match_filepath+0x78>
 5d4:	mov	ip, #1
 5d8:	cmp	ip, #0
 5dc:	bne	604 <coda_match_filepath+0xa4>
 5e0:	bl	0 <__errno_location>
 5e4:	ldr	r0, [r0]
 5e8:	bl	0 <strerror>
 5ec:	mov	r2, r0
 5f0:	ldr	r0, [r6, #8]
 5f4:	mov	r1, #0
 5f8:	mov	r3, r4
 5fc:	blx	r5
 600:	b	690 <coda_match_filepath+0x130>
 604:	ldr	r0, [r6, #8]
 608:	mov	r1, #0
 60c:	ldr	r2, [pc, #160]	; 6b4 <coda_match_filepath+0x154>
 610:	mov	r3, r4
 614:	blx	r5
 618:	b	690 <coda_match_filepath+0x130>
 61c:	ldr	r2, [sp, #48]	; 0x30
 620:	and	r0, r2, #16384	; 0x4000
 624:	cmp	r0, #0
 628:	bne	67c <coda_match_filepath+0x11c>
 62c:	ldr	ip, [sp, #48]	; 0x30
 630:	and	r3, ip, #32768	; 0x8000
 634:	cmp	r3, #0
 638:	bne	664 <coda_match_filepath+0x104>
 63c:	cmp	r8, #0
 640:	bne	65c <coda_match_filepath+0xfc>
 644:	ldr	r0, [r6, #8]
 648:	mov	r1, #0
 64c:	ldr	r2, [pc, #92]	; 6b0 <coda_match_filepath+0x150>
 650:	mov	r3, r4
 654:	blx	r5
 658:	b	690 <coda_match_filepath+0x130>
 65c:	mov	r0, #0
 660:	b	690 <coda_match_filepath+0x130>
 664:	mov	r3, r4
 668:	mov	r2, r5
 66c:	mov	r1, r6
 670:	mov	r0, r7
 674:	bl	238 <coda_match_file>
 678:	b	690 <coda_match_filepath+0x130>
 67c:	mov	r3, r4
 680:	mov	r2, r5
 684:	mov	r1, r6
 688:	mov	r0, r7
 68c:	bl	3fc <coda_match_dir>
 690:	ldr	r4, [sp, #8]
 694:	ldr	r5, [sp, #12]
 698:	ldr	r6, [sp, #16]
 69c:	ldr	r7, [sp, #20]
 6a0:	ldr	r8, [sp, #24]
 6a4:	ldr	lr, [sp, #4]
 6a8:	add	sp, sp, #120	; 0x78
 6ac:	bx	lr
 6b0:	.word	0x00000041
 6b4:	.word	0x00000134

000006b8 <coda_match_filefilter>:
 6b8:	mov	ip, sp
 6bc:	sub	sp, sp, #64	; 0x40
 6c0:	str	ip, [sp, #4]
 6c4:	str	lr, [sp, #8]
 6c8:	str	r4, [sp, #16]
 6cc:	str	r5, [sp, #20]
 6d0:	str	r6, [sp, #24]
 6d4:	str	r7, [sp, #28]
 6d8:	str	r8, [sp, #32]
 6dc:	str	r9, [sp, #36]	; 0x24
 6e0:	ldr	r8, [ip]
 6e4:	mov	r5, r3
 6e8:	mov	r6, r2
 6ec:	mov	r7, r1
 6f0:	cmp	r7, #0
 6f4:	ble	708 <coda_match_filefilter+0x50>
 6f8:	cmp	r6, #0
 6fc:	moveq	r3, #1
 700:	movne	r3, #0
 704:	b	70c <coda_match_filefilter+0x54>
 708:	mov	r3, #1
 70c:	cmp	r3, #0
 710:	bne	724 <coda_match_filefilter+0x6c>
 714:	cmp	r5, #0
 718:	moveq	r2, #1
 71c:	movne	r2, #0
 720:	b	728 <coda_match_filefilter+0x70>
 724:	mov	r2, #1
 728:	cmp	r2, #0
 72c:	beq	74c <coda_match_filefilter+0x94>
 730:	mvn	r0, #99	; 0x63
 734:	ldr	r1, [pc, #344]	; 894 <coda_match_filefilter+0x1dc>
 738:	ldr	r2, [pc, #336]	; 890 <coda_match_filefilter+0x1d8>
 73c:	movw	r3, #386	; 0x182
 740:	bl	0 <coda_set_error>
 744:	mvn	r0, #0
 748:	b	868 <coda_match_filefilter+0x1b0>
 74c:	cmp	r0, #0
 750:	beq	768 <coda_match_filefilter+0xb0>
 754:	ldrb	r1, [r0]
 758:	cmp	r1, #0
 75c:	moveq	r1, #1
 760:	movne	r1, #0
 764:	b	76c <coda_match_filefilter+0xb4>
 768:	mov	r1, #1
 76c:	cmp	r1, #0
 770:	beq	778 <coda_match_filefilter+0xc0>
 774:	ldr	r0, [pc, #272]	; 88c <coda_match_filefilter+0x1d4>
 778:	add	r1, sp, #40	; 0x28
 77c:	bl	0 <coda_expression_from_string>
 780:	cmp	r0, #0
 784:	beq	790 <coda_match_filefilter+0xd8>
 788:	mvn	r0, #0
 78c:	b	868 <coda_match_filefilter+0x1b0>
 790:	ldr	r0, [sp, #40]	; 0x28
 794:	add	r1, sp, #44	; 0x2c
 798:	bl	0 <coda_expression_get_type>
 79c:	cmp	r0, #0
 7a0:	beq	7b4 <coda_match_filefilter+0xfc>
 7a4:	ldr	r0, [sp, #40]	; 0x28
 7a8:	bl	0 <coda_expression_delete>
 7ac:	mvn	r0, #0
 7b0:	b	868 <coda_match_filefilter+0x1b0>
 7b4:	ldr	r1, [sp, #44]	; 0x2c
 7b8:	cmp	r1, #0
 7bc:	beq	7dc <coda_match_filefilter+0x124>
 7c0:	mvn	r0, #400	; 0x190
 7c4:	ldr	r1, [pc, #204]	; 898 <coda_match_filefilter+0x1e0>
 7c8:	bl	0 <coda_set_error>
 7cc:	ldr	r0, [sp, #40]	; 0x28
 7d0:	bl	0 <coda_expression_delete>
 7d4:	mvn	r0, #0
 7d8:	b	868 <coda_match_filefilter+0x1b0>
 7dc:	add	r0, sp, #48	; 0x30
 7e0:	bl	0 <name_buffer_init>
 7e4:	mov	r9, #0
 7e8:	cmp	r9, r7
 7ec:	bge	854 <coda_match_filefilter+0x19c>
 7f0:	add	r0, sp, #48	; 0x30
 7f4:	ldr	r1, [r6, r9, lsl #2]
 7f8:	bl	100 <append_string_to_name_buffer>
 7fc:	mov	r0, #0
 800:	ldr	r1, [sp, #40]	; 0x28
 804:	add	r2, sp, #48	; 0x30
 808:	str	r8, [sp]
 80c:	mov	r3, r5
 810:	bl	560 <coda_match_filepath>
 814:	mov	r4, r0
 818:	cmp	r4, #0
 81c:	beq	838 <coda_match_filefilter+0x180>
 820:	add	r0, sp, #48	; 0x30
 824:	bl	90 <name_buffer_done>
 828:	ldr	r0, [sp, #40]	; 0x28
 82c:	bl	0 <coda_expression_delete>
 830:	mov	r0, r4
 834:	b	868 <coda_match_filefilter+0x1b0>
 838:	mov	r1, #0
 83c:	str	r1, [sp, #48]	; 0x30
 840:	ldr	r0, [sp, #56]	; 0x38
 844:	mov	ip, #0
 848:	strb	ip, [r0]
 84c:	add	r9, r9, #1
 850:	b	7e8 <coda_match_filefilter+0x130>
 854:	add	r0, sp, #48	; 0x30
 858:	bl	90 <name_buffer_done>
 85c:	ldr	r0, [sp, #40]	; 0x28
 860:	bl	0 <coda_expression_delete>
 864:	mov	r0, #0
 868:	ldr	r4, [sp, #16]
 86c:	ldr	r5, [sp, #20]
 870:	ldr	r6, [sp, #24]
 874:	ldr	r7, [sp, #28]
 878:	ldr	r8, [sp, #32]
 87c:	ldr	r9, [sp, #36]	; 0x24
 880:	ldr	lr, [sp, #8]
 884:	add	sp, sp, #64	; 0x40
 888:	bx	lr
 88c:	.word	0x0000000e
 890:	.word	0x00000061
 894:	.word	0x000000e1
 898:	.word	0x00000013
