
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/zutil.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_zlibVersion>:
   0:	push	{fp}		; (str fp, [sp, #-4]!)
   4:	add	fp, sp, #0
   8:	movw	r3, #0
   c:	movt	r3, #0
  10:	mov	r0, r3
  14:	add	sp, fp, #0
  18:	pop	{fp}		; (ldr fp, [sp], #4)
  1c:	bx	lr

00000020 <coda_zlibCompileFlags>:
  20:	push	{fp}		; (str fp, [sp, #-4]!)
  24:	add	fp, sp, #0
  28:	sub	sp, sp, #12
  2c:	mov	r3, #0
  30:	str	r3, [fp, #-8]
  34:	ldr	r3, [fp, #-8]
  38:	add	r3, r3, #1
  3c:	str	r3, [fp, #-8]
  40:	nop	{0}
  44:	ldr	r3, [fp, #-8]
  48:	add	r3, r3, #4
  4c:	str	r3, [fp, #-8]
  50:	nop	{0}
  54:	ldr	r3, [fp, #-8]
  58:	add	r3, r3, #16
  5c:	str	r3, [fp, #-8]
  60:	nop	{0}
  64:	ldr	r3, [fp, #-8]
  68:	add	r3, r3, #64	; 0x40
  6c:	str	r3, [fp, #-8]
  70:	nop	{0}
  74:	ldr	r3, [fp, #-8]
  78:	mov	r0, r3
  7c:	add	sp, fp, #0
  80:	pop	{fp}		; (ldr fp, [sp], #4)
  84:	bx	lr

00000088 <coda_zError>:
  88:	push	{fp}		; (str fp, [sp, #-4]!)
  8c:	add	fp, sp, #0
  90:	sub	sp, sp, #12
  94:	str	r0, [fp, #-8]
  98:	ldr	r3, [fp, #-8]
  9c:	rsb	r2, r3, #2
  a0:	movw	r3, #0
  a4:	movt	r3, #0
  a8:	ldr	r3, [r3, r2, lsl #2]
  ac:	mov	r0, r3
  b0:	add	sp, fp, #0
  b4:	pop	{fp}		; (ldr fp, [sp], #4)
  b8:	bx	lr

000000bc <coda_zcalloc>:
  bc:	str	fp, [sp, #-8]!
  c0:	str	lr, [sp, #4]
  c4:	add	fp, sp, #4
  c8:	sub	sp, sp, #16
  cc:	str	r0, [fp, #-8]
  d0:	str	r1, [fp, #-12]
  d4:	str	r2, [fp, #-16]
  d8:	ldr	r3, [fp, #-8]
  dc:	cmp	r3, #0
  e0:	ldr	r3, [fp, #-12]
  e4:	ldr	r2, [fp, #-16]
  e8:	mul	r3, r2, r3
  ec:	mov	r0, r3
  f0:	bl	0 <malloc>
  f4:	mov	r3, r0
  f8:	mov	r0, r3
  fc:	sub	sp, fp, #4
 100:	ldr	fp, [sp]
 104:	add	sp, sp, #4
 108:	pop	{pc}		; (ldr pc, [sp], #4)

0000010c <coda_zcfree>:
 10c:	str	fp, [sp, #-8]!
 110:	str	lr, [sp, #4]
 114:	add	fp, sp, #4
 118:	sub	sp, sp, #8
 11c:	str	r0, [fp, #-8]
 120:	str	r1, [fp, #-12]
 124:	ldr	r0, [fp, #-12]
 128:	bl	0 <free>
 12c:	ldr	r3, [fp, #-8]
 130:	cmp	r3, #0
 134:	sub	sp, fp, #4
 138:	ldr	fp, [sp]
 13c:	add	sp, sp, #4
 140:	pop	{pc}		; (ldr pc, [sp], #4)
