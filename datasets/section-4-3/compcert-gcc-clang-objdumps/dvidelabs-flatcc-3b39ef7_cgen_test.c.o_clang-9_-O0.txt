
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/CMakeFiles/cgen_test.dir/cgen_test.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	sub	sp, sp, #920	; 0x398
   c:	sub	sp, sp, #3072	; 0xc00
  10:	movw	r0, #0
  14:	str	r0, [fp, #-12]
  18:	movw	r1, #0
  1c:	movt	r1, #0
  20:	str	r1, [fp, #-16]
  24:	add	r1, sp, #249	; 0xf9
  28:	str	r0, [sp, #12]
  2c:	mov	r0, r1
  30:	movw	r1, #0
  34:	movt	r1, #0
  38:	movw	r2, #3735	; 0xe97
  3c:	bl	0 <memcpy>
  40:	ldr	r0, [sp, #12]
  44:	str	r0, [sp, #20]
  48:	mvn	r1, #0
  4c:	str	r1, [sp, #16]
  50:	add	r0, sp, #24
  54:	bl	0 <flatcc_init_options>
  58:	movw	r0, #1
  5c:	str	r0, [sp, #168]	; 0xa8
  60:	str	r0, [sp, #176]	; 0xb0
  64:	str	r0, [sp, #172]	; 0xac
  68:	str	r0, [sp, #180]	; 0xb4
  6c:	str	r0, [sp, #132]	; 0x84
  70:	ldr	r1, [fp, #-16]
  74:	add	r0, sp, #24
  78:	movw	r2, #0
  7c:	str	r2, [sp, #8]
  80:	ldr	r3, [sp, #8]
  84:	bl	0 <flatcc_create_context>
  88:	str	r0, [sp, #20]
  8c:	movw	r1, #0
  90:	cmp	r0, r1
  94:	bne	bc <main+0xbc>
  98:	movw	r0, #0
  9c:	movt	r0, #0
  a0:	ldr	r0, [r0]
  a4:	movw	r1, #0
  a8:	movt	r1, #0
  ac:	bl	0 <fprintf>
  b0:	mvn	r1, #0
  b4:	str	r1, [fp, #-12]
  b8:	b	194 <main+0x194>
  bc:	add	r1, sp, #249	; 0xf9
  c0:	ldr	r0, [sp, #20]
  c4:	movw	r2, #3735	; 0xe97
  c8:	bl	0 <flatcc_parse_buffer>
  cc:	str	r0, [sp, #16]
  d0:	cmp	r0, #0
  d4:	beq	f4 <main+0xf4>
  d8:	movw	r0, #0
  dc:	movt	r0, #0
  e0:	ldr	r0, [r0]
  e4:	movw	r1, #0
  e8:	movt	r1, #0
  ec:	bl	0 <fprintf>
  f0:	b	184 <main+0x184>
  f4:	movw	r0, #0
  f8:	movt	r0, #0
  fc:	ldr	r0, [r0]
 100:	movw	r1, #0
 104:	movt	r1, #0
 108:	bl	0 <fprintf>
 10c:	movw	r1, #0
 110:	movt	r1, #0
 114:	ldr	r1, [r1]
 118:	str	r0, [sp, #4]
 11c:	mov	r0, r1
 120:	movw	r1, #0
 124:	movt	r1, #0
 128:	bl	0 <fprintf>
 12c:	ldr	r1, [sp, #20]
 130:	str	r0, [sp]
 134:	mov	r0, r1
 138:	bl	0 <flatcc_generate_files>
 13c:	cmp	r0, #0
 140:	beq	160 <main+0x160>
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	ldr	r0, [r0]
 150:	movw	r1, #0
 154:	movt	r1, #0
 158:	bl	0 <fprintf>
 15c:	b	184 <main+0x184>
 160:	add	r2, sp, #249	; 0xf9
 164:	movw	r0, #0
 168:	movt	r0, #0
 16c:	ldr	r0, [r0]
 170:	movw	r1, #0
 174:	movt	r1, #0
 178:	bl	0 <fprintf>
 17c:	movw	r0, #0
 180:	str	r0, [sp, #16]
 184:	ldr	r0, [sp, #20]
 188:	bl	0 <flatcc_destroy_context>
 18c:	ldr	r0, [sp, #16]
 190:	str	r0, [fp, #-12]
 194:	ldr	r0, [fp, #-12]
 198:	sub	sp, fp, #8
 19c:	pop	{r4, r5, fp, pc}
