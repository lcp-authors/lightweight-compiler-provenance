
../compcert-repos/prog2/0.11.2:     file format elf32-littlearm


Disassembly of section .init:

00010684 <.init>:
   10684:	push	{r3, lr}
   10688:	bl	1074c <_start@@Base+0x3c>
   1068c:	pop	{r3, pc}

Disassembly of section .plt:

00010690 <strcmp@plt-0x14>:
   10690:	push	{lr}		; (str lr, [sp, #-4]!)
   10694:	ldr	lr, [pc, #4]	; 106a0 <strcmp@plt-0x4>
   10698:	add	lr, pc, lr
   1069c:	ldr	pc, [lr, #8]!
   106a0:	andeq	r0, r1, r0, ror #18

000106a4 <strcmp@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2400]!	; 0x960

000106b0 <strcat@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2392]!	; 0x958

000106bc <strcpy@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2384]!	; 0x950

000106c8 <puts@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2376]!	; 0x948

000106d4 <__libc_start_main@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2368]!	; 0x940

000106e0 <__gmon_start__@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2360]!	; 0x938

000106ec <strlen@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2352]!	; 0x930

000106f8 <__isoc99_scanf@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2344]!	; 0x928

00010704 <abort@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2336]!	; 0x920

Disassembly of section .text:

00010710 <_start@@Base>:
   10710:	mov	fp, #0
   10714:	mov	lr, #0
   10718:	pop	{r1}		; (ldr r1, [sp], #4)
   1071c:	mov	r2, sp
   10720:	push	{r2}		; (str r2, [sp, #-4]!)
   10724:	push	{r0}		; (str r0, [sp, #-4]!)
   10728:	ldr	ip, [pc, #16]	; 10740 <_start@@Base+0x30>
   1072c:	push	{ip}		; (str ip, [sp, #-4]!)
   10730:	ldr	r0, [pc, #12]	; 10744 <_start@@Base+0x34>
   10734:	ldr	r3, [pc, #12]	; 10748 <_start@@Base+0x38>
   10738:	bl	106d4 <__libc_start_main@plt>
   1073c:	bl	10704 <abort@plt>
   10740:	andeq	r0, r1, r8, ror fp
   10744:	andeq	r0, r1, r8, lsr r8
   10748:	andeq	r0, r1, r8, lsl fp
   1074c:	ldr	r3, [pc, #20]	; 10768 <_start@@Base+0x58>
   10750:	ldr	r2, [pc, #20]	; 1076c <_start@@Base+0x5c>
   10754:	add	r3, pc, r3
   10758:	ldr	r2, [r3, r2]
   1075c:	cmp	r2, #0
   10760:	bxeq	lr
   10764:	b	106e0 <__gmon_start__@plt>
   10768:	andeq	r0, r1, r4, lsr #17
   1076c:	andeq	r0, r0, r0, lsr r0
   10770:	ldr	r3, [pc, #28]	; 10794 <_start@@Base+0x84>
   10774:	ldr	r0, [pc, #28]	; 10798 <_start@@Base+0x88>
   10778:	sub	r3, r3, r0
   1077c:	cmp	r3, #6
   10780:	bxls	lr
   10784:	ldr	r3, [pc, #16]	; 1079c <_start@@Base+0x8c>
   10788:	cmp	r3, #0
   1078c:	bxeq	lr
   10790:	bx	r3
   10794:	andeq	r1, r2, pc, lsr r0
   10798:	andeq	r1, r2, ip, lsr r0
   1079c:	andeq	r0, r0, r0
   107a0:	ldr	r1, [pc, #36]	; 107cc <_start@@Base+0xbc>
   107a4:	ldr	r0, [pc, #36]	; 107d0 <_start@@Base+0xc0>
   107a8:	sub	r1, r1, r0
   107ac:	asr	r1, r1, #2
   107b0:	add	r1, r1, r1, lsr #31
   107b4:	asrs	r1, r1, #1
   107b8:	bxeq	lr
   107bc:	ldr	r3, [pc, #16]	; 107d4 <_start@@Base+0xc4>
   107c0:	cmp	r3, #0
   107c4:	bxeq	lr
   107c8:	bx	r3
   107cc:	andeq	r1, r2, ip, lsr r0
   107d0:	andeq	r1, r2, ip, lsr r0
   107d4:	andeq	r0, r0, r0
   107d8:	push	{r4, lr}
   107dc:	ldr	r4, [pc, #24]	; 107fc <_start@@Base+0xec>
   107e0:	ldrb	r3, [r4]
   107e4:	cmp	r3, #0
   107e8:	popne	{r4, pc}
   107ec:	bl	10770 <_start@@Base+0x60>
   107f0:	mov	r3, #1
   107f4:	strb	r3, [r4]
   107f8:	pop	{r4, pc}
   107fc:	andeq	r1, r2, ip, lsr r0
   10800:	ldr	r0, [pc, #40]	; 10830 <_start@@Base+0x120>
   10804:	ldr	r3, [r0]
   10808:	cmp	r3, #0
   1080c:	bne	10814 <_start@@Base+0x104>
   10810:	b	107a0 <_start@@Base+0x90>
   10814:	ldr	r3, [pc, #24]	; 10834 <_start@@Base+0x124>
   10818:	cmp	r3, #0
   1081c:	beq	10810 <_start@@Base+0x100>
   10820:	push	{r4, lr}
   10824:	blx	r3
   10828:	pop	{r4, lr}
   1082c:	b	107a0 <_start@@Base+0x90>
   10830:	andeq	r0, r2, r4, lsl pc
   10834:	andeq	r0, r0, r0

00010838 <main@@Base>:
   10838:	push	{fp, lr}
   1083c:	add	fp, sp, #4
   10840:	sub	sp, sp, #104	; 0x68
   10844:	mov	r3, #0
   10848:	str	r3, [fp, #-48]	; 0xffffffd0
   1084c:	sub	r3, fp, #44	; 0x2c
   10850:	mov	r2, #0
   10854:	str	r2, [r3]
   10858:	str	r2, [r3, #4]
   1085c:	str	r2, [r3, #8]
   10860:	str	r2, [r3, #12]
   10864:	str	r2, [r3, #16]
   10868:	strh	r2, [r3, #20]
   1086c:	mov	r3, #0
   10870:	str	r3, [fp, #-8]
   10874:	sub	r3, fp, #20
   10878:	mov	r1, r3
   1087c:	ldr	r0, [pc, #208]	; 10954 <main@@Base+0x11c>
   10880:	bl	106f8 <__isoc99_scanf@plt>
   10884:	ldrb	r3, [fp, #-20]	; 0xffffffec
   10888:	cmp	r3, #46	; 0x2e
   1088c:	beq	10940 <main@@Base+0x108>
   10890:	sub	r3, fp, #108	; 0x6c
   10894:	mov	r1, r3
   10898:	ldr	r0, [pc, #184]	; 10958 <main@@Base+0x120>
   1089c:	bl	106f8 <__isoc99_scanf@plt>
   108a0:	mov	r3, #0
   108a4:	str	r3, [fp, #-8]
   108a8:	ldr	r2, [fp, #-108]	; 0xffffff94
   108ac:	sub	r1, fp, #48	; 0x30
   108b0:	sub	r3, fp, #20
   108b4:	mov	r0, r3
   108b8:	bl	10ab4 <StringSet@@Base>
   108bc:	sub	r2, fp, #76	; 0x4c
   108c0:	sub	r3, fp, #48	; 0x30
   108c4:	mov	r1, r2
   108c8:	mov	r0, r3
   108cc:	bl	1095c <R_ShiftString@@Base>
   108d0:	b	10930 <main@@Base+0xf8>
   108d4:	sub	r2, fp, #76	; 0x4c
   108d8:	sub	r3, fp, #48	; 0x30
   108dc:	mov	r1, r2
   108e0:	mov	r0, r3
   108e4:	bl	106a4 <strcmp@plt>
   108e8:	mov	r3, r0
   108ec:	cmp	r3, #0
   108f0:	bne	108fc <main@@Base+0xc4>
   108f4:	mov	r3, #1
   108f8:	str	r3, [fp, #-8]
   108fc:	sub	r3, fp, #48	; 0x30
   10900:	mov	r0, r3
   10904:	bl	106c8 <puts@plt>
   10908:	sub	r2, fp, #48	; 0x30
   1090c:	sub	r3, fp, #104	; 0x68
   10910:	mov	r1, r2
   10914:	mov	r0, r3
   10918:	bl	106bc <strcpy@plt>
   1091c:	sub	r2, fp, #48	; 0x30
   10920:	sub	r3, fp, #104	; 0x68
   10924:	mov	r1, r2
   10928:	mov	r0, r3
   1092c:	bl	10a08 <L_ShiftString@@Base>
   10930:	ldr	r3, [fp, #-8]
   10934:	cmp	r3, #0
   10938:	beq	108d4 <main@@Base+0x9c>
   1093c:	b	10874 <main@@Base+0x3c>
   10940:	nop			; (mov r0, r0)
   10944:	mov	r3, #0
   10948:	mov	r0, r3
   1094c:	sub	sp, fp, #4
   10950:	pop	{fp, pc}
   10954:	andeq	r0, r1, r8, lsl #23
   10958:	andeq	r0, r1, ip, lsl #23

0001095c <R_ShiftString@@Base>:
   1095c:	push	{fp, lr}
   10960:	add	fp, sp, #4
   10964:	sub	sp, sp, #16
   10968:	str	r0, [fp, #-16]
   1096c:	str	r1, [fp, #-20]	; 0xffffffec
   10970:	ldr	r0, [fp, #-16]
   10974:	bl	106ec <strlen@plt>
   10978:	mov	r3, r0
   1097c:	sub	r3, r3, #1
   10980:	ldr	r2, [fp, #-16]
   10984:	add	r3, r2, r3
   10988:	ldrb	r2, [r3]
   1098c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10990:	strb	r2, [r3]
   10994:	mov	r3, #1
   10998:	str	r3, [fp, #-8]
   1099c:	b	109d0 <R_ShiftString@@Base+0x74>
   109a0:	ldr	r3, [fp, #-8]
   109a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   109a8:	add	r3, r2, r3
   109ac:	ldr	r2, [fp, #-8]
   109b0:	sub	r2, r2, #1
   109b4:	ldr	r1, [fp, #-16]
   109b8:	add	r2, r1, r2
   109bc:	ldrb	r2, [r2]
   109c0:	strb	r2, [r3]
   109c4:	ldr	r3, [fp, #-8]
   109c8:	add	r3, r3, #1
   109cc:	str	r3, [fp, #-8]
   109d0:	ldr	r0, [fp, #-16]
   109d4:	bl	106ec <strlen@plt>
   109d8:	mov	r2, r0
   109dc:	ldr	r3, [fp, #-8]
   109e0:	cmp	r2, r3
   109e4:	bhi	109a0 <R_ShiftString@@Base+0x44>
   109e8:	ldr	r3, [fp, #-8]
   109ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   109f0:	add	r3, r2, r3
   109f4:	mov	r2, #0
   109f8:	strb	r2, [r3]
   109fc:	nop			; (mov r0, r0)
   10a00:	sub	sp, fp, #4
   10a04:	pop	{fp, pc}

00010a08 <L_ShiftString@@Base>:
   10a08:	push	{fp, lr}
   10a0c:	add	fp, sp, #4
   10a10:	sub	sp, sp, #16
   10a14:	str	r0, [fp, #-16]
   10a18:	str	r1, [fp, #-20]	; 0xffffffec
   10a1c:	ldr	r0, [fp, #-16]
   10a20:	bl	106ec <strlen@plt>
   10a24:	mov	r3, r0
   10a28:	sub	r3, r3, #1
   10a2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a30:	add	r3, r2, r3
   10a34:	ldr	r2, [fp, #-16]
   10a38:	ldrb	r2, [r2]
   10a3c:	strb	r2, [r3]
   10a40:	mov	r3, #1
   10a44:	str	r3, [fp, #-8]
   10a48:	b	10a7c <L_ShiftString@@Base+0x74>
   10a4c:	ldr	r3, [fp, #-8]
   10a50:	sub	r3, r3, #1
   10a54:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a58:	add	r3, r2, r3
   10a5c:	ldr	r2, [fp, #-8]
   10a60:	ldr	r1, [fp, #-16]
   10a64:	add	r2, r1, r2
   10a68:	ldrb	r2, [r2]
   10a6c:	strb	r2, [r3]
   10a70:	ldr	r3, [fp, #-8]
   10a74:	add	r3, r3, #1
   10a78:	str	r3, [fp, #-8]
   10a7c:	ldr	r0, [fp, #-16]
   10a80:	bl	106ec <strlen@plt>
   10a84:	mov	r2, r0
   10a88:	ldr	r3, [fp, #-8]
   10a8c:	cmp	r2, r3
   10a90:	bhi	10a4c <L_ShiftString@@Base+0x44>
   10a94:	ldr	r3, [fp, #-8]
   10a98:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a9c:	add	r3, r2, r3
   10aa0:	mov	r2, #0
   10aa4:	strb	r2, [r3]
   10aa8:	nop			; (mov r0, r0)
   10aac:	sub	sp, fp, #4
   10ab0:	pop	{fp, pc}

00010ab4 <StringSet@@Base>:
   10ab4:	push	{fp, lr}
   10ab8:	add	fp, sp, #4
   10abc:	sub	sp, sp, #24
   10ac0:	str	r0, [fp, #-16]
   10ac4:	str	r1, [fp, #-20]	; 0xffffffec
   10ac8:	str	r2, [fp, #-24]	; 0xffffffe8
   10acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ad0:	mov	r2, #0
   10ad4:	strb	r2, [r3]
   10ad8:	mov	r3, #0
   10adc:	str	r3, [fp, #-8]
   10ae0:	b	10afc <StringSet@@Base+0x48>
   10ae4:	ldr	r1, [fp, #-16]
   10ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10aec:	bl	106b0 <strcat@plt>
   10af0:	ldr	r3, [fp, #-8]
   10af4:	add	r3, r3, #1
   10af8:	str	r3, [fp, #-8]
   10afc:	ldr	r2, [fp, #-8]
   10b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b04:	cmp	r2, r3
   10b08:	blt	10ae4 <StringSet@@Base+0x30>
   10b0c:	nop			; (mov r0, r0)
   10b10:	sub	sp, fp, #4
   10b14:	pop	{fp, pc}

00010b18 <__libc_csu_init@@Base>:
   10b18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b1c:	mov	r7, r0
   10b20:	ldr	r6, [pc, #72]	; 10b70 <__libc_csu_init@@Base+0x58>
   10b24:	ldr	r5, [pc, #72]	; 10b74 <__libc_csu_init@@Base+0x5c>
   10b28:	add	r6, pc, r6
   10b2c:	add	r5, pc, r5
   10b30:	sub	r6, r6, r5
   10b34:	mov	r8, r1
   10b38:	mov	r9, r2
   10b3c:	bl	10684 <strcmp@plt-0x20>
   10b40:	asrs	r6, r6, #2
   10b44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b48:	mov	r4, #0
   10b4c:	add	r4, r4, #1
   10b50:	ldr	r3, [r5], #4
   10b54:	mov	r2, r9
   10b58:	mov	r1, r8
   10b5c:	mov	r0, r7
   10b60:	blx	r3
   10b64:	cmp	r6, r4
   10b68:	bne	10b4c <__libc_csu_init@@Base+0x34>
   10b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b70:	andeq	r0, r1, r0, ror #7
   10b74:	ldrdeq	r0, [r1], -r8

00010b78 <__libc_csu_fini@@Base>:
   10b78:	bx	lr

Disassembly of section .fini:

00010b7c <.fini>:
   10b7c:	push	{r3, lr}
   10b80:	pop	{r3, pc}
