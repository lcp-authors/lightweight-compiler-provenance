
../compcert-repos/rootname/CMakeFiles/rootname.dir/src/power.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <init_bat>:
   0:	push	{r4, r5, r6, sl, fp, lr}
   4:	add	fp, sp, #16
   8:	movw	r1, #0
   c:	mov	r4, r0
  10:	movw	r0, #0
  14:	movt	r0, #0
  18:	movt	r1, #0
  1c:	bl	0 <fopen>
  20:	mov	r5, r0
  24:	cmp	r0, #0
  28:	bne	4c <init_bat+0x4c>
  2c:	movw	r0, #0
  30:	movw	r1, #0
  34:	movt	r0, #0
  38:	movt	r1, #0
  3c:	bl	0 <fopen>
  40:	mov	r5, r0
  44:	cmp	r0, #0
  48:	beq	f4 <init_bat+0xf4>
  4c:	mov	r0, #1
  50:	strb	r0, [r4, #24]
  54:	mov	r0, r5
  58:	bl	0 <read_int>
  5c:	movw	r6, #0
  60:	strd	r0, [r4, #16]
  64:	movw	r0, #0
  68:	movt	r6, #0
  6c:	movt	r0, #0
  70:	mov	r1, r6
  74:	bl	0 <fopen>
  78:	str	r0, [r4]
  7c:	movw	r0, #0
  80:	mov	r1, r6
  84:	movt	r0, #0
  88:	bl	0 <fopen>
  8c:	cmp	r0, #0
  90:	str	r0, [r4, #4]
  94:	bne	b0 <init_bat+0xb0>
  98:	movw	r0, #0
  9c:	movw	r1, #0
  a0:	movt	r0, #0
  a4:	movt	r1, #0
  a8:	bl	0 <fopen>
  ac:	str	r0, [r4, #4]
  b0:	movw	r0, #0
  b4:	movw	r1, #0
  b8:	movt	r0, #0
  bc:	movt	r1, #0
  c0:	bl	0 <fopen>
  c4:	cmp	r0, #0
  c8:	str	r0, [r4, #8]
  cc:	bne	e8 <init_bat+0xe8>
  d0:	movw	r0, #0
  d4:	movw	r1, #0
  d8:	movt	r0, #0
  dc:	movt	r1, #0
  e0:	bl	0 <fopen>
  e4:	str	r0, [r4, #8]
  e8:	mov	r0, r5
  ec:	pop	{r4, r5, r6, sl, fp, lr}
  f0:	b	0 <fclose>
  f4:	mov	r0, #0
  f8:	strb	r0, [r4, #24]
  fc:	str	r0, [r4]
 100:	str	r0, [r4, #4]
 104:	str	r0, [r4, #8]
 108:	pop	{r4, r5, r6, sl, fp, pc}

0000010c <close_bat>:
 10c:	push	{r4, sl, fp, lr}
 110:	add	fp, sp, #8
 114:	mov	r4, r0
 118:	ldr	r0, [r0]
 11c:	cmp	r0, #0
 120:	beq	128 <close_bat+0x1c>
 124:	bl	0 <fclose>
 128:	ldr	r0, [r4, #4]
 12c:	cmp	r0, #0
 130:	beq	138 <close_bat+0x2c>
 134:	bl	0 <fclose>
 138:	ldr	r0, [r4, #8]
 13c:	cmp	r0, #0
 140:	popeq	{r4, sl, fp, pc}
 144:	pop	{r4, sl, fp, lr}
 148:	b	0 <fclose>

0000014c <bat>:
 14c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 150:	add	fp, sp, #28
 154:	sub	sp, sp, #20
 158:	mov	r5, r0
 15c:	ldr	r0, [r0]
 160:	str	r2, [sp, #16]
 164:	mov	r8, r1
 168:	bl	0 <read_int>
 16c:	mov	r9, r0
 170:	ldr	r0, [r5, #4]
 174:	mov	sl, r1
 178:	bl	0 <read_int>
 17c:	mov	r7, r0
 180:	ldr	r0, [r5, #8]
 184:	mov	r4, r1
 188:	bl	0 <read_int>
 18c:	str	r1, [sp, #12]
 190:	mov	r1, #100	; 0x64
 194:	mov	r6, r0
 198:	umull	r0, r2, r7, r1
 19c:	mla	r1, r4, r1, r2
 1a0:	ldrd	r2, [r5, #16]
 1a4:	bl	0 <__aeabi_uldivmod>
 1a8:	mov	r5, r0
 1ac:	orrs	r0, r9, sl
 1b0:	beq	1d4 <bat+0x88>
 1b4:	ldr	r1, [sp, #16]
 1b8:	movw	r2, #0
 1bc:	mov	r0, r8
 1c0:	movt	r2, #0
 1c4:	mov	r3, r5
 1c8:	sub	sp, fp, #28
 1cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1d0:	b	0 <snprintf>
 1d4:	ldr	r0, [sp, #12]
 1d8:	ldr	sl, [sp, #16]
 1dc:	mov	r9, r8
 1e0:	orrs	r0, r6, r0
 1e4:	beq	254 <bat+0x108>
 1e8:	ldr	r8, [sp, #12]
 1ec:	mov	r0, r7
 1f0:	mov	r1, r4
 1f4:	mov	r2, r6
 1f8:	mov	r3, r8
 1fc:	bl	0 <__aeabi_uldivmod>
 200:	str	r0, [sp, #8]
 204:	mov	r0, #60	; 0x3c
 208:	rsb	r2, r4, r4, lsl #4
 20c:	mov	r3, r8
 210:	umull	r0, r1, r7, r0
 214:	add	r1, r1, r2, lsl #2
 218:	mov	r2, r6
 21c:	bl	0 <__aeabi_uldivmod>
 220:	mov	r2, #60	; 0x3c
 224:	mov	r3, #0
 228:	bl	0 <__aeabi_uldivmod>
 22c:	ldr	r0, [sp, #8]
 230:	mov	r1, sl
 234:	mov	r3, r5
 238:	stm	sp, {r0, r2}
 23c:	movw	r2, #0
 240:	mov	r0, r9
 244:	movt	r2, #0
 248:	bl	0 <snprintf>
 24c:	sub	sp, fp, #28
 250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 254:	movw	r2, #0
 258:	mov	r0, r9
 25c:	mov	r1, sl
 260:	movt	r2, #0
 264:	b	1c4 <bat+0x78>
