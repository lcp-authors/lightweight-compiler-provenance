
../compcert-repos/prog2/CMakeFiles/0.7.dir/Aula00_Conceitos_base/07.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <media>:
   0:	vldr	s0, [pc, #88]	; 60 <media+0x60>
   4:	cmp	r1, #1
   8:	blt	48 <media+0x48>
   c:	vldr	d16, [pc, #68]	; 58 <media+0x58>
  10:	vmov.f32	s2, #35	; 0x41180000  9.5
  14:	mov	r2, r1
  18:	vldr	s4, [r0]
  1c:	add	r0, r0, #4
  20:	vcvt.f64.f32	d17, s4
  24:	vcmpe.f64	d17, d16
  28:	vmrs	APSR_nzcv, fpscr
  2c:	vcmpe.f32	s2, s4
  30:	vselge.f32	s6, s2, s4
  34:	vmrs	APSR_nzcv, fpscr
  38:	vselgt.f32	s4, s6, s4
  3c:	subs	r2, r2, #1
  40:	vadd.f32	s0, s0, s4
  44:	bne	18 <media+0x18>
  48:	vmov	s2, r1
  4c:	vcvt.f32.s32	s2, s2
  50:	vdiv.f32	s0, s0, s2
  54:	bx	lr
  58:	.word	0x9999999a
  5c:	.word	0x40229999
  60:	.word	0x00000000
  64:	.word	0xe320f000

00000068 <lernotas>:
  68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
  6c:	add	fp, sp, #24
  70:	vpush	{d8-d9}
  74:	sub	sp, sp, #8
  78:	mov	r4, r0
  7c:	movw	r0, #0
  80:	add	r1, sp, #4
  84:	mov	r2, sp
  88:	movt	r0, #0
  8c:	bl	0 <__isoc99_scanf>
  90:	mov	r5, #0
  94:	cmp	r0, #2
  98:	bne	f8 <lernotas+0x90>
  9c:	vldr	d8, [pc, #100]	; 108 <lernotas+0xa0>
  a0:	vldr	d9, [pc, #104]	; 110 <lernotas+0xa8>
  a4:	movw	r8, #0
  a8:	mov	r5, #0
  ac:	add	r7, sp, #4
  b0:	mov	r6, sp
  b4:	movt	r8, #0
  b8:	vldr	s0, [sp]
  bc:	vldr	s2, [sp, #4]
  c0:	mov	r0, r8
  c4:	mov	r1, r7
  c8:	mov	r2, r6
  cc:	vcvt.f64.f32	d16, s0
  d0:	vcvt.f64.f32	d17, s2
  d4:	vmul.f64	d16, d16, d8
  d8:	vmla.f64	d16, d17, d9
  dc:	vcvt.f32.f64	s0, d16
  e0:	vstr	s0, [r4]
  e4:	bl	0 <__isoc99_scanf>
  e8:	add	r4, r4, #4
  ec:	add	r5, r5, #1
  f0:	cmp	r0, #2
  f4:	beq	b8 <lernotas+0x50>
  f8:	mov	r0, r5
  fc:	sub	sp, fp, #40	; 0x28
 100:	vpop	{d8-d9}
 104:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 108:	.word	0x9999999a
 10c:	.word	0x3fd99999
 110:	.word	0x33333333
 114:	.word	0x3fe33333

00000118 <main>:
 118:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 11c:	add	fp, sp, #24
 120:	vpush	{d8-d9}
 124:	sub	sp, sp, #408	; 0x198
 128:	mov	r4, sp
 12c:	mov	r1, #0
 130:	mov	r2, #400	; 0x190
 134:	mov	r0, r4
 138:	bl	0 <memset>
 13c:	movw	r0, #0
 140:	sub	r1, fp, #44	; 0x2c
 144:	sub	r2, fp, #48	; 0x30
 148:	movt	r0, #0
 14c:	bl	0 <__isoc99_scanf>
 150:	cmp	r0, #2
 154:	bne	20c <main+0xf4>
 158:	vldr	d8, [pc, #224]	; 240 <main+0x128>
 15c:	vldr	d9, [pc, #228]	; 248 <main+0x130>
 160:	movw	r8, #0
 164:	mvn	r5, #0
 168:	sub	r6, fp, #44	; 0x2c
 16c:	sub	r7, fp, #48	; 0x30
 170:	movt	r8, #0
 174:	vldr	s0, [fp, #-48]	; 0xffffffd0
 178:	vldr	s2, [fp, #-44]	; 0xffffffd4
 17c:	mov	r0, r8
 180:	mov	r1, r6
 184:	mov	r2, r7
 188:	vcvt.f64.f32	d16, s0
 18c:	vcvt.f64.f32	d17, s2
 190:	vmul.f64	d16, d16, d8
 194:	vmla.f64	d16, d17, d9
 198:	vcvt.f32.f64	s0, d16
 19c:	vstr	s0, [r4]
 1a0:	bl	0 <__isoc99_scanf>
 1a4:	add	r4, r4, #4
 1a8:	add	r5, r5, #1
 1ac:	cmp	r0, #2
 1b0:	beq	174 <main+0x5c>
 1b4:	vldr	s0, [pc, #156]	; 258 <main+0x140>
 1b8:	vldr	d16, [pc, #144]	; 250 <main+0x138>
 1bc:	add	r0, r5, #1
 1c0:	mov	r1, sp
 1c4:	mvn	r2, #0
 1c8:	vmov.f32	s2, #35	; 0x41180000  9.5
 1cc:	vldr	s4, [r1]
 1d0:	add	r2, r2, #1
 1d4:	add	r1, r1, #4
 1d8:	vcvt.f64.f32	d17, s4
 1dc:	vcmpe.f64	d17, d16
 1e0:	vmrs	APSR_nzcv, fpscr
 1e4:	vcmpe.f32	s2, s4
 1e8:	vselge.f32	s6, s2, s4
 1ec:	vmrs	APSR_nzcv, fpscr
 1f0:	vselgt.f32	s4, s6, s4
 1f4:	cmp	r5, r2
 1f8:	vadd.f32	s0, s0, s4
 1fc:	bne	1cc <main+0xb4>
 200:	vmov	s2, r0
 204:	vcvt.f32.s32	s2, s2
 208:	b	214 <main+0xfc>
 20c:	vldr	s2, [pc, #68]	; 258 <main+0x140>
 210:	vmov.f32	s0, s2
 214:	vdiv.f32	s0, s0, s2
 218:	movw	r0, #0
 21c:	vcvt.f64.f32	d16, s0
 220:	movt	r0, #0
 224:	vmov	r2, r3, d16
 228:	bl	0 <printf>
 22c:	mov	r0, #0
 230:	sub	sp, fp, #40	; 0x28
 234:	vpop	{d8-d9}
 238:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 23c:	nop	{0}
 240:	.word	0x9999999a
 244:	.word	0x3fd99999
 248:	.word	0x33333333
 24c:	.word	0x3fe33333
 250:	.word	0x9999999a
 254:	.word	0x40229999
 258:	.word	0x00000000
