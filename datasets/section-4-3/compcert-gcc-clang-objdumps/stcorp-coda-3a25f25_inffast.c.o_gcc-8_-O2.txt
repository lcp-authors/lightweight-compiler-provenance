
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/inffast.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_inflate_fast>:
   0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4:	mvn	r3, #0
   8:	strd	r6, [sp, #8]
   c:	mov	ip, r3
  10:	strd	r8, [sp, #16]
  14:	mov	r9, r0
  18:	strd	sl, [sp, #24]
  1c:	ldr	fp, [r9, #28]
  20:	str	lr, [sp, #32]
  24:	sub	sp, sp, #76	; 0x4c
  28:	ldm	r0, {r4, lr}
  2c:	ldr	r0, [r0, #16]
  30:	add	r2, fp, #4096	; 0x1000
  34:	ldr	r5, [fp, #48]	; 0x30
  38:	add	r8, r4, r3
  3c:	sub	r4, lr, #5
  40:	add	r4, r8, r4
  44:	ldr	sl, [fp, #80]	; 0x50
  48:	sub	r1, r0, r1
  4c:	str	r4, [sp, #4]
  50:	str	r2, [sp, #40]	; 0x28
  54:	sub	r2, r0, #256	; 0x100
  58:	ldr	r0, [r9, #12]
  5c:	add	r2, r2, r3
  60:	str	r5, [sp, #20]
  64:	ldr	lr, [fp, #84]	; 0x54
  68:	ldr	r4, [fp, #88]	; 0x58
  6c:	add	r0, r0, r3
  70:	add	r2, r0, r2
  74:	mvn	lr, r3, lsl lr
  78:	str	r2, [sp, #8]
  7c:	add	r2, r0, r1
  80:	mov	r1, r5
  84:	ldr	r5, [fp, #40]	; 0x28
  88:	str	lr, [sp, #12]
  8c:	str	r2, [sp, #24]
  90:	add	r2, r1, r3
  94:	mvn	r3, r3, lsl r4
  98:	ldr	lr, [fp, #52]	; 0x34
  9c:	str	r3, [sp, #16]
  a0:	ldr	r3, [fp, #44]	; 0x2c
  a4:	add	r2, lr, r2
  a8:	str	r3, [sp, #28]
  ac:	add	r3, r5, r1
  b0:	str	r2, [sp, #48]	; 0x30
  b4:	ldr	r2, [fp, #60]	; 0x3c
  b8:	str	r3, [sp, #44]	; 0x2c
  bc:	ldr	r3, [fp, #56]	; 0x38
  c0:	str	lr, [sp, #32]
  c4:	ldr	r1, [fp, #76]	; 0x4c
  c8:	str	r5, [sp, #36]	; 0x24
  cc:	cmp	r2, #14
  d0:	bhi	f4 <coda_inflate_fast+0xf4>
  d4:	ldrb	r4, [r8, #1]
  d8:	add	lr, r2, #8
  dc:	add	r8, r8, #2
  e0:	ldrb	r5, [r8]
  e4:	lsl	r4, r4, r2
  e8:	add	r2, r2, #16
  ec:	add	lr, r4, r5, lsl lr
  f0:	add	r3, r3, lr
  f4:	ldr	lr, [sp, #12]
  f8:	and	lr, r3, lr
  fc:	b	118 <coda_inflate_fast+0x118>
 100:	tst	lr, #16
 104:	bne	1d8 <coda_inflate_fast+0x1d8>
 108:	tst	lr, #64	; 0x40
 10c:	bne	354 <coda_inflate_fast+0x354>
 110:	bic	lr, r3, ip, lsl lr
 114:	add	lr, lr, r4
 118:	add	r4, r1, lr, lsl #2
 11c:	ldrb	lr, [r1, lr, lsl #2]
 120:	ldrb	r5, [r4, #1]
 124:	ldrh	r4, [r4, #2]
 128:	cmp	lr, #0
 12c:	lsr	r3, r3, r5
 130:	sub	r2, r2, r5
 134:	bne	100 <coda_inflate_fast+0x100>
 138:	add	r0, r0, #1
 13c:	strb	r4, [r0]
 140:	ldr	lr, [sp, #4]
 144:	ldr	r4, [sp, #8]
 148:	cmp	r8, lr
 14c:	cmpcc	r0, r4
 150:	bcc	cc <coda_inflate_fast+0xcc>
 154:	ldr	r4, [sp, #4]
 158:	sub	r1, r8, r2, lsr #3
 15c:	mvn	ip, #0
 160:	and	r2, r2, #7
 164:	add	lr, r0, #1
 168:	bic	r3, r3, ip, lsl r2
 16c:	add	ip, r1, #1
 170:	str	ip, [r9]
 174:	cmp	r4, r1
 178:	str	lr, [r9, #12]
 17c:	subhi	r1, r4, r1
 180:	addhi	r1, r1, #5
 184:	bhi	194 <coda_inflate_fast+0x194>
 188:	ldr	ip, [sp, #4]
 18c:	sub	r1, r1, ip
 190:	rsb	r1, r1, #5
 194:	ldr	ip, [sp, #8]
 198:	str	r1, [r9, #4]
 19c:	cmp	r0, ip
 1a0:	bcs	37c <coda_inflate_fast+0x37c>
 1a4:	sub	r0, ip, r0
 1a8:	add	r0, r0, #256	; 0x100
 1ac:	add	r0, r0, #1
 1b0:	str	r0, [r9, #16]
 1b4:	str	r3, [fp, #56]	; 0x38
 1b8:	str	r2, [fp, #60]	; 0x3c
 1bc:	add	sp, sp, #76	; 0x4c
 1c0:	ldrd	r4, [sp]
 1c4:	ldrd	r6, [sp, #8]
 1c8:	ldrd	r8, [sp, #16]
 1cc:	ldrd	sl, [sp, #24]
 1d0:	add	sp, sp, #32
 1d4:	pop	{pc}		; (ldr pc, [sp], #4)
 1d8:	ands	r5, lr, #15
 1dc:	mov	lr, r4
 1e0:	beq	20c <coda_inflate_fast+0x20c>
 1e4:	cmp	r5, r2
 1e8:	bls	1fc <coda_inflate_fast+0x1fc>
 1ec:	ldrb	lr, [r8, #1]
 1f0:	add	r8, r8, #1
 1f4:	add	r3, r3, lr, lsl r2
 1f8:	add	r2, r2, #8
 1fc:	bic	lr, r3, ip, lsl r5
 200:	sub	r2, r2, r5
 204:	lsr	r3, r3, r5
 208:	add	lr, r4, lr
 20c:	cmp	r2, #14
 210:	bls	390 <coda_inflate_fast+0x390>
 214:	ldr	r4, [sp, #16]
 218:	and	r4, r3, r4
 21c:	b	230 <coda_inflate_fast+0x230>
 220:	tst	r4, #64	; 0x40
 224:	bne	3b4 <coda_inflate_fast+0x3b4>
 228:	bic	r4, r3, ip, lsl r4
 22c:	add	r4, r4, r6
 230:	add	r6, sl, r4, lsl #2
 234:	ldrb	r4, [sl, r4, lsl #2]
 238:	ldrb	r5, [r6, #1]
 23c:	ldrh	r6, [r6, #2]
 240:	tst	r4, #16
 244:	lsr	r3, r3, r5
 248:	sub	r2, r2, r5
 24c:	beq	220 <coda_inflate_fast+0x220>
 250:	and	r4, r4, #15
 254:	cmp	r4, r2
 258:	bls	288 <coda_inflate_fast+0x288>
 25c:	ldrb	r7, [r8, #1]
 260:	add	r5, r2, #8
 264:	cmp	r4, r5
 268:	addls	r8, r8, #1
 26c:	add	r3, r3, r7, lsl r2
 270:	movls	r2, r5
 274:	bls	288 <coda_inflate_fast+0x288>
 278:	ldrb	r7, [r8, #2]
 27c:	add	r2, r2, #16
 280:	add	r8, r8, #2
 284:	add	r3, r3, r7, lsl r5
 288:	ldr	r7, [sp, #24]
 28c:	bic	r5, r3, ip, lsl r4
 290:	sub	r2, r2, r4
 294:	lsr	r3, r3, r4
 298:	add	r5, r5, r6
 29c:	sub	r7, r0, r7
 2a0:	cmp	r5, r7
 2a4:	bls	498 <coda_inflate_fast+0x498>
 2a8:	ldr	r6, [sp, #28]
 2ac:	sub	r4, r5, r7
 2b0:	str	r4, [sp, #52]	; 0x34
 2b4:	cmp	r6, r4
 2b8:	bcs	2cc <coda_inflate_fast+0x2cc>
 2bc:	ldr	r4, [sp, #40]	; 0x28
 2c0:	ldr	r4, [r4, #3008]	; 0xbc0
 2c4:	cmp	r4, #0
 2c8:	bne	554 <coda_inflate_fast+0x554>
 2cc:	ldr	r4, [sp, #20]
 2d0:	sub	r7, r7, r5
 2d4:	str	r7, [sp, #56]	; 0x38
 2d8:	cmp	r4, #0
 2dc:	ldr	r4, [sp, #32]
 2e0:	sub	r6, r4, #1
 2e4:	bne	3cc <coda_inflate_fast+0x3cc>
 2e8:	ldr	r4, [sp, #52]	; 0x34
 2ec:	cmp	lr, r4
 2f0:	ldr	r4, [sp, #36]	; 0x24
 2f4:	add	r4, r4, r7
 2f8:	add	r4, r6, r4
 2fc:	bhi	56c <coda_inflate_fast+0x56c>
 300:	cmp	lr, #2
 304:	bls	32c <coda_inflate_fast+0x32c>
 308:	ldrb	r5, [r4, #1]
 30c:	sub	lr, lr, #3
 310:	cmp	lr, #2
 314:	strb	r5, [r0, #1]
 318:	ldrb	r5, [r4, #2]
 31c:	strb	r5, [r0, #2]
 320:	ldrb	r5, [r4, #3]!
 324:	strb	r5, [r0, #3]!
 328:	bhi	308 <coda_inflate_fast+0x308>
 32c:	cmp	lr, #0
 330:	beq	140 <coda_inflate_fast+0x140>
 334:	ldrb	r5, [r4, #1]
 338:	cmp	lr, #2
 33c:	strb	r5, [r0, #1]
 340:	addne	r0, r0, #1
 344:	ldrbeq	lr, [r4, #2]
 348:	strbeq	lr, [r0, #2]
 34c:	addeq	r0, r0, #2
 350:	b	140 <coda_inflate_fast+0x140>
 354:	tst	lr, #32
 358:	movne	r1, #11
 35c:	strne	r1, [fp]
 360:	bne	154 <coda_inflate_fast+0x154>
 364:	movw	r1, #0
 368:	movt	r1, #0
 36c:	mov	ip, #29
 370:	str	r1, [r9, #24]
 374:	str	ip, [fp]
 378:	b	154 <coda_inflate_fast+0x154>
 37c:	ldr	r1, [sp, #8]
 380:	sub	r0, r0, r1
 384:	rsb	r0, r0, #256	; 0x100
 388:	add	r0, r0, #1
 38c:	b	1b0 <coda_inflate_fast+0x1b0>
 390:	ldrb	r5, [r8, #1]
 394:	add	r4, r2, #8
 398:	add	r8, r8, #2
 39c:	ldrb	r6, [r8]
 3a0:	lsl	r5, r5, r2
 3a4:	add	r2, r2, #16
 3a8:	add	r4, r5, r6, lsl r4
 3ac:	add	r3, r3, r4
 3b0:	b	214 <coda_inflate_fast+0x214>
 3b4:	movw	r1, #0
 3b8:	movt	r1, #0
 3bc:	mov	ip, #29
 3c0:	str	r1, [r9, #24]
 3c4:	str	ip, [fp]
 3c8:	b	154 <coda_inflate_fast+0x154>
 3cc:	ldr	r4, [sp, #20]
 3d0:	ldr	r7, [sp, #52]	; 0x34
 3d4:	cmp	r4, r7
 3d8:	bcs	4fc <coda_inflate_fast+0x4fc>
 3dc:	sub	r7, r7, r4
 3e0:	ldr	r4, [sp, #44]	; 0x2c
 3e4:	str	r7, [sp, #60]	; 0x3c
 3e8:	str	r7, [sp, #64]	; 0x40
 3ec:	ldr	r7, [sp, #56]	; 0x38
 3f0:	add	r4, r4, r7
 3f4:	ldr	r7, [sp, #60]	; 0x3c
 3f8:	add	r4, r6, r4
 3fc:	cmp	lr, r7
 400:	bls	300 <coda_inflate_fast+0x300>
 404:	ldr	r7, [sp, #20]
 408:	str	r0, [sp, #60]	; 0x3c
 40c:	str	r6, [sp, #68]	; 0x44
 410:	mov	r6, r0
 414:	add	lr, lr, r7
 418:	ldr	r7, [sp, #56]	; 0x38
 41c:	str	r8, [sp, #56]	; 0x38
 420:	add	lr, lr, r7
 424:	ldr	r7, [sp, #64]	; 0x40
 428:	add	r7, r4, r7
 42c:	mov	r8, r7
 430:	ldrb	r7, [r4, #1]!
 434:	cmp	r4, r8
 438:	strb	r7, [r6, #1]!
 43c:	bne	430 <coda_inflate_fast+0x430>
 440:	ldr	r4, [sp, #20]
 444:	ldr	r8, [sp, #56]	; 0x38
 448:	ldr	r6, [sp, #68]	; 0x44
 44c:	cmp	r4, lr
 450:	ldr	r4, [sp, #64]	; 0x40
 454:	add	r7, r0, r4
 458:	movcs	r4, r6
 45c:	movcs	r0, r7
 460:	bcs	300 <coda_inflate_fast+0x300>
 464:	ldr	r4, [sp, #20]
 468:	str	r3, [sp, #56]	; 0x38
 46c:	sub	lr, lr, r4
 470:	ldrb	r4, [r6, #1]!
 474:	ldr	r3, [sp, #48]	; 0x30
 478:	strb	r4, [r7, #1]!
 47c:	cmp	r6, r3
 480:	bne	470 <coda_inflate_fast+0x470>
 484:	ldr	r4, [sp, #52]	; 0x34
 488:	ldr	r3, [sp, #56]	; 0x38
 48c:	add	r0, r0, r4
 490:	sub	r4, r0, r5
 494:	b	300 <coda_inflate_fast+0x300>
 498:	sub	r5, r0, r5
 49c:	b	4a4 <coda_inflate_fast+0x4a4>
 4a0:	mov	r0, r6
 4a4:	ldrb	r4, [r5, #1]
 4a8:	mov	r7, r5
 4ac:	sub	lr, lr, #3
 4b0:	cmp	lr, #2
 4b4:	add	r6, r0, #3
 4b8:	strb	r4, [r0, #1]
 4bc:	ldrb	r4, [r5, #2]
 4c0:	strb	r4, [r0, #2]
 4c4:	ldrb	r4, [r5, #3]!
 4c8:	strb	r4, [r0, #3]
 4cc:	bhi	4a0 <coda_inflate_fast+0x4a0>
 4d0:	cmp	lr, #0
 4d4:	moveq	r0, r6
 4d8:	beq	140 <coda_inflate_fast+0x140>
 4dc:	ldrb	r4, [r7, #4]
 4e0:	cmp	lr, #2
 4e4:	strb	r4, [r0, #4]
 4e8:	addne	r0, r0, #4
 4ec:	ldrbeq	lr, [r7, #5]
 4f0:	strbeq	lr, [r0, #5]
 4f4:	addeq	r0, r0, #5
 4f8:	b	140 <coda_inflate_fast+0x140>
 4fc:	ldr	r4, [sp, #52]	; 0x34
 500:	ldr	r7, [sp, #56]	; 0x38
 504:	cmp	lr, r4
 508:	ldr	r4, [sp, #20]
 50c:	add	r4, r4, r7
 510:	add	r4, r6, r4
 514:	bls	300 <coda_inflate_fast+0x300>
 518:	add	lr, lr, r7
 51c:	ldr	r7, [sp, #52]	; 0x34
 520:	mov	r6, r0
 524:	str	r8, [sp, #56]	; 0x38
 528:	add	r7, r4, r7
 52c:	mov	r8, r7
 530:	ldrb	r7, [r4, #1]!
 534:	cmp	r4, r8
 538:	strb	r7, [r6, #1]!
 53c:	bne	530 <coda_inflate_fast+0x530>
 540:	ldr	r4, [sp, #52]	; 0x34
 544:	ldr	r8, [sp, #56]	; 0x38
 548:	add	r0, r0, r4
 54c:	sub	r4, r0, r5
 550:	b	300 <coda_inflate_fast+0x300>
 554:	movw	r1, #0
 558:	movt	r1, #0
 55c:	mov	ip, #29
 560:	str	r1, [r9, #24]
 564:	str	ip, [fp]
 568:	b	154 <coda_inflate_fast+0x154>
 56c:	add	lr, lr, r7
 570:	ldr	r7, [sp, #52]	; 0x34
 574:	mov	r6, r0
 578:	str	r8, [sp, #56]	; 0x38
 57c:	add	r7, r4, r7
 580:	mov	r8, r7
 584:	ldrb	r7, [r4, #1]!
 588:	cmp	r4, r8
 58c:	strb	r7, [r6, #1]!
 590:	bne	584 <coda_inflate_fast+0x584>
 594:	b	540 <coda_inflate_fast+0x540>
