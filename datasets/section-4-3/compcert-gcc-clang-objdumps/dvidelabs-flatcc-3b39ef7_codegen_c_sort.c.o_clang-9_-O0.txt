
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c_sort.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__flatcc_gen_sort>:
   0:	push	{r4, r5, r6, sl, fp, lr}
   4:	add	fp, sp, #16
   8:	sub	sp, sp, #64	; 0x40
   c:	str	r0, [fp, #-20]	; 0xffffffec
  10:	ldr	r0, [fp, #-20]	; 0xffffffec
  14:	ldr	r0, [r0, #204]	; 0xcc
  18:	ldr	r2, [fp, #-20]	; 0xffffffec
  1c:	movw	r1, #0
  20:	movt	r1, #0
  24:	bl	0 <fprintf>
  28:	ldr	r1, [fp, #-20]	; 0xffffffec
  2c:	ldr	r1, [r1, #204]	; 0xcc
  30:	ldr	r2, [fp, #-20]	; 0xffffffec
  34:	ldr	r3, [fp, #-20]	; 0xffffffec
  38:	str	r0, [fp, #-24]	; 0xffffffe8
  3c:	mov	r0, r1
  40:	movw	r1, #0
  44:	movt	r1, #0
  48:	bl	0 <fprintf>
  4c:	ldr	r1, [fp, #-20]	; 0xffffffec
  50:	ldr	r1, [r1, #204]	; 0xcc
  54:	ldr	r2, [fp, #-20]	; 0xffffffec
  58:	ldr	r3, [fp, #-20]	; 0xffffffec
  5c:	ldr	ip, [fp, #-20]	; 0xffffffec
  60:	str	r0, [fp, #-28]	; 0xffffffe4
  64:	mov	r0, r1
  68:	movw	r1, #0
  6c:	movt	r1, #0
  70:	str	ip, [sp]
  74:	bl	0 <fprintf>
  78:	ldr	r1, [fp, #-20]	; 0xffffffec
  7c:	ldr	r1, [r1, #204]	; 0xcc
  80:	ldr	r2, [fp, #-20]	; 0xffffffec
  84:	ldr	r3, [fp, #-20]	; 0xffffffec
  88:	ldr	ip, [fp, #-20]	; 0xffffffec
  8c:	ldr	lr, [fp, #-20]	; 0xffffffec
  90:	str	r0, [fp, #-32]	; 0xffffffe0
  94:	mov	r0, r1
  98:	movw	r1, #0
  9c:	movt	r1, #0
  a0:	str	ip, [sp]
  a4:	str	lr, [sp, #4]
  a8:	bl	0 <fprintf>
  ac:	ldr	r1, [fp, #-20]	; 0xffffffec
  b0:	ldr	r1, [r1, #204]	; 0xcc
  b4:	ldr	r2, [fp, #-20]	; 0xffffffec
  b8:	ldr	r3, [fp, #-20]	; 0xffffffec
  bc:	str	r0, [fp, #-36]	; 0xffffffdc
  c0:	mov	r0, r1
  c4:	movw	r1, #0
  c8:	movt	r1, #0
  cc:	bl	0 <fprintf>
  d0:	ldr	r1, [fp, #-20]	; 0xffffffec
  d4:	ldr	r1, [r1, #204]	; 0xcc
  d8:	ldr	r2, [fp, #-20]	; 0xffffffec
  dc:	ldr	r3, [fp, #-20]	; 0xffffffec
  e0:	ldr	ip, [fp, #-20]	; 0xffffffec
  e4:	ldr	lr, [fp, #-20]	; 0xffffffec
  e8:	str	r0, [sp, #40]	; 0x28
  ec:	mov	r0, r1
  f0:	movw	r1, #0
  f4:	movt	r1, #0
  f8:	str	ip, [sp]
  fc:	str	lr, [sp, #4]
 100:	bl	0 <fprintf>
 104:	ldr	r1, [fp, #-20]	; 0xffffffec
 108:	ldr	r1, [r1, #204]	; 0xcc
 10c:	ldr	r2, [fp, #-20]	; 0xffffffec
 110:	ldr	r3, [fp, #-20]	; 0xffffffec
 114:	ldr	ip, [fp, #-20]	; 0xffffffec
 118:	ldr	lr, [fp, #-20]	; 0xffffffec
 11c:	ldr	r4, [fp, #-20]	; 0xffffffec
 120:	ldr	r5, [fp, #-20]	; 0xffffffec
 124:	str	r0, [sp, #36]	; 0x24
 128:	mov	r0, r1
 12c:	movw	r1, #0
 130:	movt	r1, #0
 134:	str	ip, [sp]
 138:	str	lr, [sp, #4]
 13c:	str	r4, [sp, #8]
 140:	str	r5, [sp, #12]
 144:	bl	0 <fprintf>
 148:	ldr	r1, [fp, #-20]	; 0xffffffec
 14c:	ldr	r1, [r1, #204]	; 0xcc
 150:	ldr	r2, [fp, #-20]	; 0xffffffec
 154:	ldr	r3, [fp, #-20]	; 0xffffffec
 158:	ldr	ip, [fp, #-20]	; 0xffffffec
 15c:	ldr	lr, [fp, #-20]	; 0xffffffec
 160:	str	r0, [sp, #32]
 164:	mov	r0, r1
 168:	movw	r1, #0
 16c:	movt	r1, #0
 170:	str	ip, [sp]
 174:	str	lr, [sp, #4]
 178:	bl	0 <fprintf>
 17c:	ldr	r1, [fp, #-20]	; 0xffffffec
 180:	ldr	r1, [r1, #204]	; 0xcc
 184:	ldr	r2, [fp, #-20]	; 0xffffffec
 188:	ldr	r3, [fp, #-20]	; 0xffffffec
 18c:	ldr	ip, [fp, #-20]	; 0xffffffec
 190:	ldr	lr, [fp, #-20]	; 0xffffffec
 194:	ldr	r4, [fp, #-20]	; 0xffffffec
 198:	ldr	r5, [fp, #-20]	; 0xffffffec
 19c:	ldr	r6, [fp, #-20]	; 0xffffffec
 1a0:	str	r0, [sp, #28]
 1a4:	mov	r0, r1
 1a8:	movw	r1, #0
 1ac:	movt	r1, #0
 1b0:	str	ip, [sp]
 1b4:	str	lr, [sp, #4]
 1b8:	str	r4, [sp, #8]
 1bc:	str	r5, [sp, #12]
 1c0:	str	r6, [sp, #16]
 1c4:	bl	0 <fprintf>
 1c8:	movw	r1, #0
 1cc:	str	r0, [sp, #24]
 1d0:	mov	r0, r1
 1d4:	sub	sp, fp, #16
 1d8:	pop	{r4, r5, r6, sl, fp, pc}
