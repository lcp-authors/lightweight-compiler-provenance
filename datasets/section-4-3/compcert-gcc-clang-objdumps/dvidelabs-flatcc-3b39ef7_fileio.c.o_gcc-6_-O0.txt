
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/fileio.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pstrnlen>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #16
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	ldr	r2, [fp, #-20]	; 0xffffffec
  18:	mov	r1, #0
  1c:	ldr	r0, [fp, #-16]
  20:	bl	0 <memchr>
  24:	str	r0, [fp, #-8]
  28:	ldr	r3, [fp, #-8]
  2c:	cmp	r3, #0
  30:	beq	44 <pstrnlen+0x44>
  34:	ldr	r2, [fp, #-8]
  38:	ldr	r3, [fp, #-16]
  3c:	sub	r3, r2, r3
  40:	b	48 <pstrnlen+0x48>
  44:	ldr	r3, [fp, #-20]	; 0xffffffec
  48:	mov	r0, r3
  4c:	sub	sp, fp, #4
  50:	pop	{fp, pc}

00000054 <__flatcc_fb_copy_path_n>:
  54:	push	{fp, lr}
  58:	add	fp, sp, #4
  5c:	sub	sp, sp, #16
  60:	str	r0, [fp, #-16]
  64:	str	r1, [fp, #-20]	; 0xffffffec
  68:	ldr	r1, [fp, #-20]	; 0xffffffec
  6c:	ldr	r0, [fp, #-16]
  70:	bl	0 <pstrnlen>
  74:	str	r0, [fp, #-8]
  78:	ldr	r3, [fp, #-8]
  7c:	add	r3, r3, #1
  80:	mov	r0, r3
  84:	bl	0 <malloc>
  88:	mov	r3, r0
  8c:	str	r3, [fp, #-12]
  90:	ldr	r3, [fp, #-12]
  94:	cmp	r3, #0
  98:	beq	c0 <__flatcc_fb_copy_path_n+0x6c>
  9c:	ldr	r2, [fp, #-8]
  a0:	ldr	r1, [fp, #-16]
  a4:	ldr	r0, [fp, #-12]
  a8:	bl	0 <memcpy>
  ac:	ldr	r2, [fp, #-12]
  b0:	ldr	r3, [fp, #-8]
  b4:	add	r3, r2, r3
  b8:	mov	r2, #0
  bc:	strb	r2, [r3]
  c0:	ldr	r3, [fp, #-12]
  c4:	mov	r0, r3
  c8:	sub	sp, fp, #4
  cc:	pop	{fp, pc}

000000d0 <__flatcc_fb_copy_path>:
  d0:	push	{fp, lr}
  d4:	add	fp, sp, #4
  d8:	sub	sp, sp, #16
  dc:	str	r0, [fp, #-16]
  e0:	ldr	r0, [fp, #-16]
  e4:	bl	0 <strlen>
  e8:	str	r0, [fp, #-8]
  ec:	ldr	r3, [fp, #-8]
  f0:	add	r3, r3, #1
  f4:	mov	r0, r3
  f8:	bl	0 <malloc>
  fc:	mov	r3, r0
 100:	str	r3, [fp, #-12]
 104:	ldr	r3, [fp, #-12]
 108:	cmp	r3, #0
 10c:	beq	134 <__flatcc_fb_copy_path+0x64>
 110:	ldr	r2, [fp, #-8]
 114:	ldr	r1, [fp, #-16]
 118:	ldr	r0, [fp, #-12]
 11c:	bl	0 <memcpy>
 120:	ldr	r2, [fp, #-12]
 124:	ldr	r3, [fp, #-8]
 128:	add	r3, r2, r3
 12c:	mov	r2, #0
 130:	strb	r2, [r3]
 134:	ldr	r3, [fp, #-12]
 138:	mov	r0, r3
 13c:	sub	sp, fp, #4
 140:	pop	{fp, pc}

00000144 <__flatcc_fb_chomp>:
 144:	push	{fp, lr}
 148:	add	fp, sp, #4
 14c:	sub	sp, sp, #24
 150:	str	r0, [fp, #-16]
 154:	str	r1, [fp, #-20]	; 0xffffffec
 158:	str	r2, [fp, #-24]	; 0xffffffe8
 15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 160:	cmp	r3, #0
 164:	beq	178 <__flatcc_fb_chomp+0x34>
 168:	ldr	r0, [fp, #-24]	; 0xffffffe8
 16c:	bl	0 <strlen>
 170:	mov	r3, r0
 174:	b	17c <__flatcc_fb_chomp+0x38>
 178:	mov	r3, #0
 17c:	str	r3, [fp, #-8]
 180:	ldr	r2, [fp, #-20]	; 0xffffffec
 184:	ldr	r3, [fp, #-8]
 188:	cmp	r2, r3
 18c:	bls	1d0 <__flatcc_fb_chomp+0x8c>
 190:	ldr	r2, [fp, #-20]	; 0xffffffec
 194:	ldr	r3, [fp, #-8]
 198:	sub	r3, r2, r3
 19c:	ldr	r2, [fp, #-16]
 1a0:	add	r3, r2, r3
 1a4:	ldr	r2, [fp, #-8]
 1a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
 1ac:	mov	r0, r3
 1b0:	bl	0 <strncmp>
 1b4:	mov	r3, r0
 1b8:	cmp	r3, #0
 1bc:	bne	1d0 <__flatcc_fb_chomp+0x8c>
 1c0:	ldr	r2, [fp, #-20]	; 0xffffffec
 1c4:	ldr	r3, [fp, #-8]
 1c8:	sub	r3, r2, r3
 1cc:	str	r3, [fp, #-20]	; 0xffffffec
 1d0:	ldr	r3, [fp, #-20]	; 0xffffffec
 1d4:	mov	r0, r3
 1d8:	sub	sp, fp, #4
 1dc:	pop	{fp, pc}

000001e0 <__flatcc_fb_create_join_path_n>:
 1e0:	push	{fp, lr}
 1e4:	add	fp, sp, #4
 1e8:	sub	sp, sp, #32
 1ec:	str	r0, [fp, #-24]	; 0xffffffe8
 1f0:	str	r1, [fp, #-28]	; 0xffffffe4
 1f4:	str	r2, [fp, #-32]	; 0xffffffe0
 1f8:	str	r3, [fp, #-36]	; 0xffffffdc
 1fc:	ldr	r3, [fp, #4]
 200:	cmp	r3, #0
 204:	beq	218 <__flatcc_fb_create_join_path_n+0x38>
 208:	ldr	r0, [fp, #4]
 20c:	bl	0 <strlen>
 210:	mov	r3, r0
 214:	b	21c <__flatcc_fb_create_join_path_n+0x3c>
 218:	mov	r3, #0
 21c:	str	r3, [fp, #-12]
 220:	ldr	r3, [fp, #-24]	; 0xffffffe8
 224:	cmp	r3, #0
 228:	beq	278 <__flatcc_fb_create_join_path_n+0x98>
 22c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 230:	cmp	r3, #0
 234:	beq	258 <__flatcc_fb_create_join_path_n+0x78>
 238:	ldr	r3, [fp, #-32]	; 0xffffffe0
 23c:	ldrb	r3, [r3]
 240:	cmp	r3, #47	; 0x2f
 244:	beq	278 <__flatcc_fb_create_join_path_n+0x98>
 248:	ldr	r3, [fp, #-32]	; 0xffffffe0
 24c:	ldrb	r3, [r3]
 250:	cmp	r3, #92	; 0x5c
 254:	beq	278 <__flatcc_fb_create_join_path_n+0x98>
 258:	ldr	r3, [fp, #-36]	; 0xffffffdc
 25c:	cmp	r3, #1
 260:	bls	280 <__flatcc_fb_create_join_path_n+0xa0>
 264:	ldr	r3, [fp, #-32]	; 0xffffffe0
 268:	add	r3, r3, #1
 26c:	ldrb	r3, [r3]
 270:	cmp	r3, #58	; 0x3a
 274:	bne	280 <__flatcc_fb_create_join_path_n+0xa0>
 278:	mov	r3, #0
 27c:	str	r3, [fp, #-28]	; 0xffffffe4
 280:	ldr	r3, [fp, #8]
 284:	cmp	r3, #0
 288:	beq	2d8 <__flatcc_fb_create_join_path_n+0xf8>
 28c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 290:	cmp	r3, #0
 294:	beq	2d0 <__flatcc_fb_create_join_path_n+0xf0>
 298:	ldr	r3, [fp, #-28]	; 0xffffffe4
 29c:	sub	r3, r3, #1
 2a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
 2a4:	add	r3, r2, r3
 2a8:	ldrb	r3, [r3]
 2ac:	cmp	r3, #47	; 0x2f
 2b0:	beq	2d0 <__flatcc_fb_create_join_path_n+0xf0>
 2b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2b8:	sub	r3, r3, #1
 2bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 2c0:	add	r3, r2, r3
 2c4:	ldrb	r3, [r3]
 2c8:	cmp	r3, #92	; 0x5c
 2cc:	bne	2d8 <__flatcc_fb_create_join_path_n+0xf8>
 2d0:	mov	r3, #0
 2d4:	str	r3, [fp, #8]
 2d8:	ldr	r2, [fp, #8]
 2dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
 2e0:	add	r2, r2, r3
 2e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
 2e8:	add	r2, r2, r3
 2ec:	ldr	r3, [fp, #-12]
 2f0:	add	r3, r2, r3
 2f4:	add	r3, r3, #1
 2f8:	mov	r0, r3
 2fc:	bl	0 <malloc>
 300:	mov	r3, r0
 304:	str	r3, [fp, #-16]
 308:	ldr	r3, [fp, #-16]
 30c:	cmp	r3, #0
 310:	bne	31c <__flatcc_fb_create_join_path_n+0x13c>
 314:	mov	r3, #0
 318:	b	3dc <__flatcc_fb_create_join_path_n+0x1fc>
 31c:	mov	r3, #0
 320:	str	r3, [fp, #-8]
 324:	ldr	r2, [fp, #-28]	; 0xffffffe4
 328:	ldr	r1, [fp, #-24]	; 0xffffffe8
 32c:	ldr	r0, [fp, #-16]
 330:	bl	0 <memcpy>
 334:	ldr	r2, [fp, #-8]
 338:	ldr	r3, [fp, #-28]	; 0xffffffe4
 33c:	add	r3, r2, r3
 340:	str	r3, [fp, #-8]
 344:	ldr	r3, [fp, #8]
 348:	cmp	r3, #0
 34c:	beq	36c <__flatcc_fb_create_join_path_n+0x18c>
 350:	ldr	r3, [fp, #-8]
 354:	add	r2, r3, #1
 358:	str	r2, [fp, #-8]
 35c:	ldr	r2, [fp, #-16]
 360:	add	r3, r2, r3
 364:	mov	r2, #47	; 0x2f
 368:	strb	r2, [r3]
 36c:	ldr	r2, [fp, #-16]
 370:	ldr	r3, [fp, #-8]
 374:	add	r3, r2, r3
 378:	ldr	r2, [fp, #-36]	; 0xffffffdc
 37c:	ldr	r1, [fp, #-32]	; 0xffffffe0
 380:	mov	r0, r3
 384:	bl	0 <memcpy>
 388:	ldr	r2, [fp, #-8]
 38c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 390:	add	r3, r2, r3
 394:	str	r3, [fp, #-8]
 398:	ldr	r2, [fp, #-16]
 39c:	ldr	r3, [fp, #-8]
 3a0:	add	r3, r2, r3
 3a4:	ldr	r2, [fp, #-12]
 3a8:	ldr	r1, [fp, #4]
 3ac:	mov	r0, r3
 3b0:	bl	0 <memcpy>
 3b4:	ldr	r2, [fp, #-8]
 3b8:	ldr	r3, [fp, #-12]
 3bc:	add	r3, r2, r3
 3c0:	str	r3, [fp, #-8]
 3c4:	ldr	r2, [fp, #-16]
 3c8:	ldr	r3, [fp, #-8]
 3cc:	add	r3, r2, r3
 3d0:	mov	r2, #0
 3d4:	strb	r2, [r3]
 3d8:	ldr	r3, [fp, #-16]
 3dc:	mov	r0, r3
 3e0:	sub	sp, fp, #4
 3e4:	pop	{fp, pc}

000003e8 <__flatcc_fb_create_join_path>:
 3e8:	push	{r4, fp, lr}
 3ec:	add	fp, sp, #8
 3f0:	sub	sp, sp, #28
 3f4:	str	r0, [fp, #-16]
 3f8:	str	r1, [fp, #-20]	; 0xffffffec
 3fc:	str	r2, [fp, #-24]	; 0xffffffe8
 400:	str	r3, [fp, #-28]	; 0xffffffe4
 404:	ldr	r3, [fp, #-16]
 408:	cmp	r3, #0
 40c:	beq	420 <__flatcc_fb_create_join_path+0x38>
 410:	ldr	r0, [fp, #-16]
 414:	bl	0 <strlen>
 418:	mov	r4, r0
 41c:	b	424 <__flatcc_fb_create_join_path+0x3c>
 420:	mov	r4, #0
 424:	ldr	r3, [fp, #-20]	; 0xffffffec
 428:	cmp	r3, #0
 42c:	beq	440 <__flatcc_fb_create_join_path+0x58>
 430:	ldr	r0, [fp, #-20]	; 0xffffffec
 434:	bl	0 <strlen>
 438:	mov	r2, r0
 43c:	b	444 <__flatcc_fb_create_join_path+0x5c>
 440:	mov	r2, #0
 444:	ldr	r3, [fp, #-28]	; 0xffffffe4
 448:	str	r3, [sp, #4]
 44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 450:	str	r3, [sp]
 454:	mov	r3, r2
 458:	ldr	r2, [fp, #-20]	; 0xffffffec
 45c:	mov	r1, r4
 460:	ldr	r0, [fp, #-16]
 464:	bl	1e0 <__flatcc_fb_create_join_path_n>
 468:	mov	r3, r0
 46c:	mov	r0, r3
 470:	sub	sp, fp, #8
 474:	pop	{r4, fp, pc}

00000478 <__flatcc_fb_create_path_ext_n>:
 478:	push	{fp, lr}
 47c:	add	fp, sp, #4
 480:	sub	sp, sp, #24
 484:	str	r0, [fp, #-8]
 488:	str	r1, [fp, #-12]
 48c:	str	r2, [fp, #-16]
 490:	mov	r3, #0
 494:	str	r3, [sp, #4]
 498:	ldr	r3, [fp, #-16]
 49c:	str	r3, [sp]
 4a0:	ldr	r3, [fp, #-12]
 4a4:	ldr	r2, [fp, #-8]
 4a8:	mov	r1, #0
 4ac:	mov	r0, #0
 4b0:	bl	1e0 <__flatcc_fb_create_join_path_n>
 4b4:	mov	r3, r0
 4b8:	mov	r0, r3
 4bc:	sub	sp, fp, #4
 4c0:	pop	{fp, pc}

000004c4 <__flatcc_fb_create_path_ext>:
 4c4:	push	{fp, lr}
 4c8:	add	fp, sp, #4
 4cc:	sub	sp, sp, #8
 4d0:	str	r0, [fp, #-8]
 4d4:	str	r1, [fp, #-12]
 4d8:	mov	r3, #0
 4dc:	ldr	r2, [fp, #-12]
 4e0:	ldr	r1, [fp, #-8]
 4e4:	mov	r0, #0
 4e8:	bl	3e8 <__flatcc_fb_create_join_path>
 4ec:	mov	r3, r0
 4f0:	mov	r0, r3
 4f4:	sub	sp, fp, #4
 4f8:	pop	{fp, pc}

000004fc <__flatcc_fb_create_make_path_n>:
 4fc:	push	{fp, lr}
 500:	add	fp, sp, #4
 504:	sub	sp, sp, #24
 508:	str	r0, [fp, #-24]	; 0xffffffe8
 50c:	str	r1, [fp, #-28]	; 0xffffffe4
 510:	ldr	r3, [fp, #-28]	; 0xffffffe4
 514:	cmp	r3, #1
 518:	bne	598 <__flatcc_fb_create_make_path_n+0x9c>
 51c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 520:	ldrb	r3, [r3]
 524:	cmp	r3, #32
 528:	beq	53c <__flatcc_fb_create_make_path_n+0x40>
 52c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 530:	ldrb	r3, [r3]
 534:	cmp	r3, #92	; 0x5c
 538:	bne	598 <__flatcc_fb_create_make_path_n+0x9c>
 53c:	mov	r0, #3
 540:	bl	0 <malloc>
 544:	mov	r3, r0
 548:	str	r3, [fp, #-20]	; 0xffffffec
 54c:	ldr	r3, [fp, #-20]	; 0xffffffec
 550:	cmp	r3, #0
 554:	bne	560 <__flatcc_fb_create_make_path_n+0x64>
 558:	mov	r3, #0
 55c:	b	810 <__flatcc_fb_create_make_path_n+0x314>
 560:	ldr	r3, [fp, #-20]	; 0xffffffec
 564:	mov	r2, #92	; 0x5c
 568:	strb	r2, [r3]
 56c:	ldr	r3, [fp, #-20]	; 0xffffffec
 570:	add	r3, r3, #1
 574:	ldr	r2, [fp, #-24]	; 0xffffffe8
 578:	ldrb	r2, [r2]
 57c:	strb	r2, [r3]
 580:	ldr	r3, [fp, #-20]	; 0xffffffec
 584:	add	r3, r3, #2
 588:	mov	r2, #0
 58c:	strb	r2, [r3]
 590:	ldr	r3, [fp, #-20]	; 0xffffffec
 594:	b	810 <__flatcc_fb_create_make_path_n+0x314>
 598:	ldr	r3, [fp, #-28]	; 0xffffffe4
 59c:	cmp	r3, #1
 5a0:	bhi	5b8 <__flatcc_fb_create_make_path_n+0xbc>
 5a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
 5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5ac:	bl	54 <__flatcc_fb_copy_path_n>
 5b0:	mov	r3, r0
 5b4:	b	810 <__flatcc_fb_create_make_path_n+0x314>
 5b8:	mov	r3, #0
 5bc:	str	r3, [fp, #-8]
 5c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 5c4:	str	r3, [fp, #-16]
 5c8:	b	648 <__flatcc_fb_create_make_path_n+0x14c>
 5cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 5d0:	ldr	r3, [fp, #-8]
 5d4:	add	r3, r2, r3
 5d8:	ldrb	r3, [r3]
 5dc:	cmp	r3, #92	; 0x5c
 5e0:	bne	60c <__flatcc_fb_create_make_path_n+0x110>
 5e4:	ldr	r3, [fp, #-8]
 5e8:	add	r3, r3, #1
 5ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
 5f0:	add	r3, r2, r3
 5f4:	ldrb	r3, [r3]
 5f8:	cmp	r3, #32
 5fc:	bne	60c <__flatcc_fb_create_make_path_n+0x110>
 600:	ldr	r3, [fp, #-16]
 604:	add	r3, r3, #1
 608:	str	r3, [fp, #-16]
 60c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 610:	ldr	r3, [fp, #-8]
 614:	add	r3, r2, r3
 618:	ldrb	r3, [r3]
 61c:	cmp	r3, #32
 620:	moveq	r3, #1
 624:	movne	r3, #0
 628:	uxtb	r3, r3
 62c:	mov	r2, r3
 630:	ldr	r3, [fp, #-16]
 634:	add	r3, r3, r2
 638:	str	r3, [fp, #-16]
 63c:	ldr	r3, [fp, #-8]
 640:	add	r3, r3, #1
 644:	str	r3, [fp, #-8]
 648:	ldr	r3, [fp, #-28]	; 0xffffffe4
 64c:	sub	r2, r3, #1
 650:	ldr	r3, [fp, #-8]
 654:	cmp	r2, r3
 658:	bhi	5cc <__flatcc_fb_create_make_path_n+0xd0>
 65c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 660:	ldr	r3, [fp, #-8]
 664:	add	r3, r2, r3
 668:	ldrb	r3, [r3]
 66c:	cmp	r3, #32
 670:	moveq	r3, #1
 674:	movne	r3, #0
 678:	uxtb	r3, r3
 67c:	mov	r2, r3
 680:	ldr	r3, [fp, #-16]
 684:	add	r3, r3, r2
 688:	str	r3, [fp, #-16]
 68c:	ldr	r3, [fp, #-16]
 690:	add	r3, r3, #1
 694:	mov	r0, r3
 698:	bl	0 <malloc>
 69c:	mov	r3, r0
 6a0:	str	r3, [fp, #-20]	; 0xffffffec
 6a4:	ldr	r3, [fp, #-20]	; 0xffffffec
 6a8:	cmp	r3, #0
 6ac:	bne	6b8 <__flatcc_fb_create_make_path_n+0x1bc>
 6b0:	mov	r3, #0
 6b4:	b	810 <__flatcc_fb_create_make_path_n+0x314>
 6b8:	mov	r3, #0
 6bc:	str	r3, [fp, #-8]
 6c0:	mov	r3, #0
 6c4:	str	r3, [fp, #-12]
 6c8:	b	788 <__flatcc_fb_create_make_path_n+0x28c>
 6cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
 6d0:	ldr	r3, [fp, #-8]
 6d4:	add	r3, r2, r3
 6d8:	ldrb	r3, [r3]
 6dc:	cmp	r3, #92	; 0x5c
 6e0:	bne	71c <__flatcc_fb_create_make_path_n+0x220>
 6e4:	ldr	r3, [fp, #-8]
 6e8:	add	r3, r3, #1
 6ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
 6f0:	add	r3, r2, r3
 6f4:	ldrb	r3, [r3]
 6f8:	cmp	r3, #32
 6fc:	bne	71c <__flatcc_fb_create_make_path_n+0x220>
 700:	ldr	r3, [fp, #-12]
 704:	add	r2, r3, #1
 708:	str	r2, [fp, #-12]
 70c:	ldr	r2, [fp, #-20]	; 0xffffffec
 710:	add	r3, r2, r3
 714:	mov	r2, #92	; 0x5c
 718:	strb	r2, [r3]
 71c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 720:	ldr	r3, [fp, #-8]
 724:	add	r3, r2, r3
 728:	ldrb	r3, [r3]
 72c:	cmp	r3, #32
 730:	bne	750 <__flatcc_fb_create_make_path_n+0x254>
 734:	ldr	r3, [fp, #-12]
 738:	add	r2, r3, #1
 73c:	str	r2, [fp, #-12]
 740:	ldr	r2, [fp, #-20]	; 0xffffffec
 744:	add	r3, r2, r3
 748:	mov	r2, #92	; 0x5c
 74c:	strb	r2, [r3]
 750:	ldr	r2, [fp, #-20]	; 0xffffffec
 754:	ldr	r3, [fp, #-12]
 758:	add	r3, r2, r3
 75c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 760:	ldr	r2, [fp, #-8]
 764:	add	r2, r1, r2
 768:	ldrb	r2, [r2]
 76c:	strb	r2, [r3]
 770:	ldr	r3, [fp, #-8]
 774:	add	r3, r3, #1
 778:	str	r3, [fp, #-8]
 77c:	ldr	r3, [fp, #-12]
 780:	add	r3, r3, #1
 784:	str	r3, [fp, #-12]
 788:	ldr	r3, [fp, #-28]	; 0xffffffe4
 78c:	sub	r2, r3, #1
 790:	ldr	r3, [fp, #-8]
 794:	cmp	r2, r3
 798:	bhi	6cc <__flatcc_fb_create_make_path_n+0x1d0>
 79c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 7a0:	ldr	r3, [fp, #-8]
 7a4:	add	r3, r2, r3
 7a8:	ldrb	r3, [r3]
 7ac:	cmp	r3, #32
 7b0:	bne	7d0 <__flatcc_fb_create_make_path_n+0x2d4>
 7b4:	ldr	r3, [fp, #-12]
 7b8:	add	r2, r3, #1
 7bc:	str	r2, [fp, #-12]
 7c0:	ldr	r2, [fp, #-20]	; 0xffffffec
 7c4:	add	r3, r2, r3
 7c8:	mov	r2, #92	; 0x5c
 7cc:	strb	r2, [r3]
 7d0:	ldr	r3, [fp, #-12]
 7d4:	add	r2, r3, #1
 7d8:	str	r2, [fp, #-12]
 7dc:	ldr	r2, [fp, #-20]	; 0xffffffec
 7e0:	add	r3, r2, r3
 7e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
 7e8:	ldr	r2, [fp, #-8]
 7ec:	add	r2, r1, r2
 7f0:	ldrb	r2, [r2]
 7f4:	strb	r2, [r3]
 7f8:	ldr	r2, [fp, #-20]	; 0xffffffec
 7fc:	ldr	r3, [fp, #-12]
 800:	add	r3, r2, r3
 804:	mov	r2, #0
 808:	strb	r2, [r3]
 80c:	ldr	r3, [fp, #-20]	; 0xffffffec
 810:	mov	r0, r3
 814:	sub	sp, fp, #4
 818:	pop	{fp, pc}

0000081c <__flatcc_fb_create_make_path>:
 81c:	push	{fp, lr}
 820:	add	fp, sp, #4
 824:	sub	sp, sp, #8
 828:	str	r0, [fp, #-8]
 82c:	ldr	r0, [fp, #-8]
 830:	bl	0 <strlen>
 834:	mov	r3, r0
 838:	mov	r1, r3
 83c:	ldr	r0, [fp, #-8]
 840:	bl	4fc <__flatcc_fb_create_make_path_n>
 844:	mov	r3, r0
 848:	mov	r0, r3
 84c:	sub	sp, fp, #4
 850:	pop	{fp, pc}

00000854 <__flatcc_fb_find_basename>:
 854:	push	{fp}		; (str fp, [sp, #-4]!)
 858:	add	fp, sp, #0
 85c:	sub	sp, sp, #20
 860:	str	r0, [fp, #-16]
 864:	str	r1, [fp, #-20]	; 0xffffffec
 868:	ldr	r3, [fp, #-16]
 86c:	str	r3, [fp, #-8]
 870:	ldr	r2, [fp, #-8]
 874:	ldr	r3, [fp, #-20]	; 0xffffffec
 878:	add	r3, r2, r3
 87c:	str	r3, [fp, #-8]
 880:	b	8c0 <__flatcc_fb_find_basename+0x6c>
 884:	ldr	r3, [fp, #-8]
 888:	sub	r3, r3, #1
 88c:	str	r3, [fp, #-8]
 890:	ldr	r3, [fp, #-8]
 894:	ldrb	r3, [r3]
 898:	cmp	r3, #47	; 0x2f
 89c:	beq	8b0 <__flatcc_fb_find_basename+0x5c>
 8a0:	ldr	r3, [fp, #-8]
 8a4:	ldrb	r3, [r3]
 8a8:	cmp	r3, #92	; 0x5c
 8ac:	bne	8c0 <__flatcc_fb_find_basename+0x6c>
 8b0:	ldr	r3, [fp, #-8]
 8b4:	add	r3, r3, #1
 8b8:	str	r3, [fp, #-8]
 8bc:	b	8d0 <__flatcc_fb_find_basename+0x7c>
 8c0:	ldr	r2, [fp, #-8]
 8c4:	ldr	r3, [fp, #-16]
 8c8:	cmp	r2, r3
 8cc:	bne	884 <__flatcc_fb_find_basename+0x30>
 8d0:	ldr	r2, [fp, #-8]
 8d4:	ldr	r3, [fp, #-16]
 8d8:	sub	r3, r2, r3
 8dc:	mov	r0, r3
 8e0:	add	sp, fp, #0
 8e4:	pop	{fp}		; (ldr fp, [sp], #4)
 8e8:	bx	lr

000008ec <__flatcc_fb_create_basename>:
 8ec:	push	{fp, lr}
 8f0:	add	fp, sp, #4
 8f4:	sub	sp, sp, #24
 8f8:	str	r0, [fp, #-16]
 8fc:	str	r1, [fp, #-20]	; 0xffffffec
 900:	str	r2, [fp, #-24]	; 0xffffffe8
 904:	ldr	r1, [fp, #-20]	; 0xffffffec
 908:	ldr	r0, [fp, #-16]
 90c:	bl	854 <__flatcc_fb_find_basename>
 910:	str	r0, [fp, #-8]
 914:	ldr	r2, [fp, #-16]
 918:	ldr	r3, [fp, #-8]
 91c:	add	r3, r2, r3
 920:	str	r3, [fp, #-16]
 924:	ldr	r2, [fp, #-20]	; 0xffffffec
 928:	ldr	r3, [fp, #-8]
 92c:	sub	r3, r2, r3
 930:	str	r3, [fp, #-20]	; 0xffffffec
 934:	ldr	r2, [fp, #-24]	; 0xffffffe8
 938:	ldr	r1, [fp, #-20]	; 0xffffffec
 93c:	ldr	r0, [fp, #-16]
 940:	bl	144 <__flatcc_fb_chomp>
 944:	str	r0, [fp, #-20]	; 0xffffffec
 948:	ldr	r3, [fp, #-20]	; 0xffffffec
 94c:	add	r3, r3, #1
 950:	mov	r0, r3
 954:	bl	0 <malloc>
 958:	mov	r3, r0
 95c:	str	r3, [fp, #-12]
 960:	ldr	r3, [fp, #-12]
 964:	cmp	r3, #0
 968:	beq	990 <__flatcc_fb_create_basename+0xa4>
 96c:	ldr	r2, [fp, #-20]	; 0xffffffec
 970:	ldr	r1, [fp, #-16]
 974:	ldr	r0, [fp, #-12]
 978:	bl	0 <memcpy>
 97c:	ldr	r2, [fp, #-12]
 980:	ldr	r3, [fp, #-20]	; 0xffffffec
 984:	add	r3, r2, r3
 988:	mov	r2, #0
 98c:	strb	r2, [r3]
 990:	ldr	r3, [fp, #-12]
 994:	mov	r0, r3
 998:	sub	sp, fp, #4
 99c:	pop	{fp, pc}

000009a0 <__flatcc_fb_read_file>:
 9a0:	push	{fp, lr}
 9a4:	add	fp, sp, #4
 9a8:	sub	sp, sp, #40	; 0x28
 9ac:	str	r0, [fp, #-32]	; 0xffffffe0
 9b0:	str	r1, [fp, #-36]	; 0xffffffdc
 9b4:	str	r2, [fp, #-40]	; 0xffffffd8
 9b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 9bc:	cmp	r3, #0
 9c0:	bne	9cc <__flatcc_fb_read_file+0x2c>
 9c4:	sub	r3, fp, #28
 9c8:	b	9d0 <__flatcc_fb_read_file+0x30>
 9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 9d0:	str	r3, [fp, #-40]	; 0xffffffd8
 9d4:	ldr	r1, [pc, #388]	; b60 <__flatcc_fb_read_file+0x1c0>
 9d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 9dc:	bl	0 <fopen>
 9e0:	str	r0, [fp, #-20]	; 0xffffffec
 9e4:	mov	r3, #0
 9e8:	str	r3, [fp, #-8]
 9ec:	mov	r3, #0
 9f0:	str	r3, [fp, #-16]
 9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
 9f8:	cmp	r3, #0
 9fc:	beq	b00 <__flatcc_fb_read_file+0x160>
 a00:	mov	r2, #2
 a04:	mov	r1, #0
 a08:	ldr	r0, [fp, #-20]	; 0xffffffec
 a0c:	bl	0 <fseek>
 a10:	ldr	r0, [fp, #-20]	; 0xffffffec
 a14:	bl	0 <ftell>
 a18:	mov	r3, r0
 a1c:	str	r3, [fp, #-8]
 a20:	ldr	r3, [fp, #-40]	; 0xffffffd8
 a24:	ldr	r2, [fp, #-8]
 a28:	str	r2, [r3]
 a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 a30:	cmp	r3, #0
 a34:	beq	a48 <__flatcc_fb_read_file+0xa8>
 a38:	ldr	r2, [fp, #-8]
 a3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 a40:	cmp	r2, r3
 a44:	bhi	b08 <__flatcc_fb_read_file+0x168>
 a48:	ldr	r0, [fp, #-20]	; 0xffffffec
 a4c:	bl	0 <rewind>
 a50:	ldr	r3, [fp, #-8]
 a54:	cmp	r3, #0
 a58:	beq	a64 <__flatcc_fb_read_file+0xc4>
 a5c:	ldr	r3, [fp, #-8]
 a60:	b	a68 <__flatcc_fb_read_file+0xc8>
 a64:	mov	r3, #1
 a68:	mov	r0, r3
 a6c:	bl	0 <malloc>
 a70:	mov	r3, r0
 a74:	str	r3, [fp, #-16]
 a78:	ldr	r3, [fp, #-16]
 a7c:	cmp	r3, #0
 a80:	beq	b10 <__flatcc_fb_read_file+0x170>
 a84:	mov	r3, #0
 a88:	str	r3, [fp, #-12]
 a8c:	b	aa0 <__flatcc_fb_read_file+0x100>
 a90:	ldr	r2, [fp, #-12]
 a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a98:	add	r3, r2, r3
 a9c:	str	r3, [fp, #-12]
 aa0:	ldr	r2, [fp, #-16]
 aa4:	ldr	r3, [fp, #-12]
 aa8:	add	r0, r2, r3
 aac:	ldr	r2, [fp, #-8]
 ab0:	ldr	r3, [fp, #-12]
 ab4:	sub	r2, r2, r3
 ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
 abc:	mov	r1, #1
 ac0:	bl	0 <fread>
 ac4:	str	r0, [fp, #-24]	; 0xffffffe8
 ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 acc:	cmp	r3, #0
 ad0:	bne	a90 <__flatcc_fb_read_file+0xf0>
 ad4:	ldr	r2, [fp, #-12]
 ad8:	ldr	r3, [fp, #-8]
 adc:	cmp	r2, r3
 ae0:	bne	b18 <__flatcc_fb_read_file+0x178>
 ae4:	ldr	r0, [fp, #-20]	; 0xffffffec
 ae8:	bl	0 <fclose>
 aec:	ldr	r3, [fp, #-40]	; 0xffffffd8
 af0:	ldr	r2, [fp, #-8]
 af4:	str	r2, [r3]
 af8:	ldr	r3, [fp, #-16]
 afc:	b	b54 <__flatcc_fb_read_file+0x1b4>
 b00:	nop			; (mov r0, r0)
 b04:	b	b1c <__flatcc_fb_read_file+0x17c>
 b08:	nop			; (mov r0, r0)
 b0c:	b	b1c <__flatcc_fb_read_file+0x17c>
 b10:	nop			; (mov r0, r0)
 b14:	b	b1c <__flatcc_fb_read_file+0x17c>
 b18:	nop			; (mov r0, r0)
 b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
 b20:	cmp	r3, #0
 b24:	beq	b30 <__flatcc_fb_read_file+0x190>
 b28:	ldr	r0, [fp, #-20]	; 0xffffffec
 b2c:	bl	0 <fclose>
 b30:	ldr	r3, [fp, #-16]
 b34:	cmp	r3, #0
 b38:	beq	b44 <__flatcc_fb_read_file+0x1a4>
 b3c:	ldr	r0, [fp, #-16]
 b40:	bl	0 <free>
 b44:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b48:	ldr	r2, [fp, #-8]
 b4c:	str	r2, [r3]
 b50:	mov	r3, #0
 b54:	mov	r0, r3
 b58:	sub	sp, fp, #4
 b5c:	pop	{fp, pc}
 b60:	.word	0x00000000
