
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-type.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_conversion_new>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #48	; 0x30
       c:	vstr	d0, [fp, #-16]
      10:	vstr	d1, [sp, #24]
      14:	vstr	d2, [sp, #16]
      18:	vstr	d3, [sp, #8]
      1c:	vldr	d16, [sp, #24]
      20:	vcmp.f64	d16, #0.0
      24:	vmrs	APSR_nzcv, fpscr
      28:	bne	48 <coda_conversion_new+0x48>
      2c:	ldr	r0, [pc, #176]	; e4 <coda_conversion_new+0xe4>
      30:	movw	r1, #0
      34:	movt	r1, #0
      38:	bl	0 <coda_set_error>
      3c:	movw	r0, #0
      40:	str	r0, [fp, #-4]
      44:	b	d8 <coda_conversion_new+0xd8>
      48:	movw	r0, #40	; 0x28
      4c:	bl	0 <malloc>
      50:	str	r0, [sp, #4]
      54:	ldr	r0, [sp, #4]
      58:	movw	r1, #0
      5c:	cmp	r0, r1
      60:	bne	94 <coda_conversion_new+0x94>
      64:	mvn	r0, #0
      68:	movw	r1, #0
      6c:	movt	r1, #0
      70:	movw	r2, #40	; 0x28
      74:	movw	r3, #0
      78:	movt	r3, #0
      7c:	movw	ip, #171	; 0xab
      80:	str	ip, [sp]
      84:	bl	0 <coda_set_error>
      88:	movw	r0, #0
      8c:	str	r0, [fp, #-4]
      90:	b	d8 <coda_conversion_new+0xd8>
      94:	vldr	d16, [fp, #-16]
      98:	ldr	r0, [sp, #4]
      9c:	vstr	d16, [r0]
      a0:	vldr	d16, [sp, #24]
      a4:	ldr	r0, [sp, #4]
      a8:	vstr	d16, [r0, #8]
      ac:	vldr	d16, [sp, #16]
      b0:	ldr	r0, [sp, #4]
      b4:	vstr	d16, [r0, #16]
      b8:	vldr	d16, [sp, #8]
      bc:	ldr	r0, [sp, #4]
      c0:	vstr	d16, [r0, #24]
      c4:	ldr	r0, [sp, #4]
      c8:	movw	r1, #0
      cc:	str	r1, [r0, #32]
      d0:	ldr	r0, [sp, #4]
      d4:	str	r0, [fp, #-4]
      d8:	ldr	r0, [fp, #-4]
      dc:	mov	sp, fp
      e0:	pop	{fp, pc}
      e4:	.word	0xfffffe70

000000e8 <coda_conversion_set_unit>:
      e8:	push	{fp, lr}
      ec:	mov	fp, sp
      f0:	sub	sp, sp, #16
      f4:	str	r0, [sp, #8]
      f8:	str	r1, [sp, #4]
      fc:	movw	r0, #0
     100:	str	r0, [sp]
     104:	ldr	r1, [sp, #8]
     108:	ldr	r1, [r1, #32]
     10c:	cmp	r1, r0
     110:	beq	130 <coda_conversion_set_unit+0x48>
     114:	ldr	r0, [pc, #140]	; 1a8 <coda_conversion_set_unit+0xc0>
     118:	movw	r1, #0
     11c:	movt	r1, #0
     120:	bl	0 <coda_set_error>
     124:	mvn	r0, #0
     128:	str	r0, [fp, #-4]
     12c:	b	19c <coda_conversion_set_unit+0xb4>
     130:	ldr	r0, [sp, #4]
     134:	movw	r1, #0
     138:	cmp	r0, r1
     13c:	beq	188 <coda_conversion_set_unit+0xa0>
     140:	ldr	r0, [sp, #4]
     144:	bl	0 <strdup>
     148:	str	r0, [sp]
     14c:	ldr	r0, [sp]
     150:	movw	r1, #0
     154:	cmp	r0, r1
     158:	bne	184 <coda_conversion_set_unit+0x9c>
     15c:	mvn	r0, #0
     160:	movw	r1, #0
     164:	movt	r1, #0
     168:	movw	r2, #0
     16c:	movt	r2, #0
     170:	movw	r3, #198	; 0xc6
     174:	bl	0 <coda_set_error>
     178:	mvn	r0, #0
     17c:	str	r0, [fp, #-4]
     180:	b	19c <coda_conversion_set_unit+0xb4>
     184:	b	188 <coda_conversion_set_unit+0xa0>
     188:	ldr	r0, [sp]
     18c:	ldr	r1, [sp, #8]
     190:	str	r0, [r1, #32]
     194:	movw	r0, #0
     198:	str	r0, [fp, #-4]
     19c:	ldr	r0, [fp, #-4]
     1a0:	mov	sp, fp
     1a4:	pop	{fp, pc}
     1a8:	.word	0xfffffe70

000001ac <coda_conversion_delete>:
     1ac:	push	{fp, lr}
     1b0:	mov	fp, sp
     1b4:	sub	sp, sp, #8
     1b8:	str	r0, [sp, #4]
     1bc:	ldr	r0, [sp, #4]
     1c0:	movw	r1, #0
     1c4:	cmp	r0, r1
     1c8:	bne	1d0 <coda_conversion_delete+0x24>
     1cc:	b	1f8 <coda_conversion_delete+0x4c>
     1d0:	ldr	r0, [sp, #4]
     1d4:	ldr	r0, [r0, #32]
     1d8:	movw	r1, #0
     1dc:	cmp	r0, r1
     1e0:	beq	1f0 <coda_conversion_delete+0x44>
     1e4:	ldr	r0, [sp, #4]
     1e8:	ldr	r0, [r0, #32]
     1ec:	bl	0 <free>
     1f0:	ldr	r0, [sp, #4]
     1f4:	bl	0 <free>
     1f8:	mov	sp, fp
     1fc:	pop	{fp, pc}

00000200 <coda_ascii_integer_mapping_new>:
     200:	push	{fp, lr}
     204:	mov	fp, sp
     208:	sub	sp, sp, #32
     20c:	str	r0, [fp, #-8]
     210:	str	r3, [sp, #20]
     214:	str	r2, [sp, #16]
     218:	ldr	r0, [fp, #-8]
     21c:	movw	r1, #0
     220:	cmp	r0, r1
     224:	bne	250 <coda_ascii_integer_mapping_new+0x50>
     228:	mvn	r0, #99	; 0x63
     22c:	movw	r1, #0
     230:	movt	r1, #0
     234:	movw	r2, #0
     238:	movt	r2, #0
     23c:	movw	r3, #261	; 0x105
     240:	bl	0 <coda_set_error>
     244:	movw	r0, #0
     248:	str	r0, [fp, #-4]
     24c:	b	37c <coda_ascii_integer_mapping_new+0x17c>
     250:	ldr	r0, [fp, #-8]
     254:	bl	0 <strlen>
     258:	cmp	r0, #64	; 0x40
     25c:	bls	29c <coda_ascii_integer_mapping_new+0x9c>
     260:	ldr	r0, [pc, #288]	; 388 <coda_ascii_integer_mapping_new+0x188>
     264:	ldr	r1, [fp, #-8]
     268:	str	r0, [sp, #8]
     26c:	mov	r0, r1
     270:	bl	0 <strlen>
     274:	ldr	r1, [sp, #8]
     278:	str	r0, [sp, #4]
     27c:	mov	r0, r1
     280:	movw	r1, #0
     284:	movt	r1, #0
     288:	ldr	r2, [sp, #4]
     28c:	bl	0 <coda_set_error>
     290:	movw	r0, #0
     294:	str	r0, [fp, #-4]
     298:	b	37c <coda_ascii_integer_mapping_new+0x17c>
     29c:	movw	r0, #16
     2a0:	bl	0 <malloc>
     2a4:	str	r0, [sp, #12]
     2a8:	ldr	r0, [sp, #12]
     2ac:	movw	r1, #0
     2b0:	cmp	r0, r1
     2b4:	bne	2e8 <coda_ascii_integer_mapping_new+0xe8>
     2b8:	mvn	r0, #0
     2bc:	movw	r1, #0
     2c0:	movt	r1, #0
     2c4:	movw	r2, #16
     2c8:	movw	r3, #0
     2cc:	movt	r3, #0
     2d0:	movw	ip, #275	; 0x113
     2d4:	str	ip, [sp]
     2d8:	bl	0 <coda_set_error>
     2dc:	movw	r0, #0
     2e0:	str	r0, [fp, #-4]
     2e4:	b	37c <coda_ascii_integer_mapping_new+0x17c>
     2e8:	ldr	r0, [sp, #12]
     2ec:	mov	r1, #0
     2f0:	str	r1, [r0]
     2f4:	ldr	r0, [sp, #12]
     2f8:	str	r1, [r0, #4]
     2fc:	ldr	r0, [sp, #16]
     300:	ldr	r1, [sp, #20]
     304:	ldr	r2, [sp, #12]
     308:	str	r1, [r2, #12]
     30c:	str	r0, [r2, #8]
     310:	ldr	r0, [fp, #-8]
     314:	bl	0 <strdup>
     318:	ldr	r1, [sp, #12]
     31c:	str	r0, [r1, #4]
     320:	ldr	r0, [sp, #12]
     324:	ldr	r0, [r0, #4]
     328:	movw	r1, #0
     32c:	cmp	r0, r1
     330:	bne	364 <coda_ascii_integer_mapping_new+0x164>
     334:	mvn	r0, #0
     338:	movw	r1, #0
     33c:	movt	r1, #0
     340:	movw	r2, #0
     344:	movt	r2, #0
     348:	movw	r3, #286	; 0x11e
     34c:	bl	0 <coda_set_error>
     350:	ldr	r0, [sp, #12]
     354:	bl	0 <free>
     358:	movw	r0, #0
     35c:	str	r0, [fp, #-4]
     360:	b	37c <coda_ascii_integer_mapping_new+0x17c>
     364:	ldr	r0, [fp, #-8]
     368:	bl	0 <strlen>
     36c:	ldr	r1, [sp, #12]
     370:	str	r0, [r1]
     374:	ldr	r0, [sp, #12]
     378:	str	r0, [fp, #-4]
     37c:	ldr	r0, [fp, #-4]
     380:	mov	sp, fp
     384:	pop	{fp, pc}
     388:	.word	0xfffffe70

0000038c <coda_ascii_integer_mapping_delete>:
     38c:	push	{fp, lr}
     390:	mov	fp, sp
     394:	sub	sp, sp, #8
     398:	str	r0, [sp, #4]
     39c:	ldr	r0, [sp, #4]
     3a0:	bl	3ac <mapping_delete>
     3a4:	mov	sp, fp
     3a8:	pop	{fp, pc}

000003ac <mapping_delete>:
     3ac:	push	{fp, lr}
     3b0:	mov	fp, sp
     3b4:	sub	sp, sp, #8
     3b8:	str	r0, [sp, #4]
     3bc:	ldr	r0, [sp, #4]
     3c0:	movw	r1, #0
     3c4:	cmp	r0, r1
     3c8:	bne	3d0 <mapping_delete+0x24>
     3cc:	b	3f8 <mapping_delete+0x4c>
     3d0:	ldr	r0, [sp, #4]
     3d4:	ldr	r0, [r0, #4]
     3d8:	movw	r1, #0
     3dc:	cmp	r0, r1
     3e0:	beq	3f0 <mapping_delete+0x44>
     3e4:	ldr	r0, [sp, #4]
     3e8:	ldr	r0, [r0, #4]
     3ec:	bl	0 <free>
     3f0:	ldr	r0, [sp, #4]
     3f4:	bl	0 <free>
     3f8:	mov	sp, fp
     3fc:	pop	{fp, pc}

00000400 <coda_ascii_float_mapping_new>:
     400:	push	{fp, lr}
     404:	mov	fp, sp
     408:	sub	sp, sp, #32
     40c:	str	r0, [fp, #-8]
     410:	vstr	d0, [sp, #16]
     414:	ldr	r0, [fp, #-8]
     418:	movw	r1, #0
     41c:	cmp	r0, r1
     420:	bne	44c <coda_ascii_float_mapping_new+0x4c>
     424:	mvn	r0, #99	; 0x63
     428:	movw	r1, #0
     42c:	movt	r1, #0
     430:	movw	r2, #0
     434:	movt	r2, #0
     438:	movw	r3, #306	; 0x132
     43c:	bl	0 <coda_set_error>
     440:	movw	r0, #0
     444:	str	r0, [fp, #-4]
     448:	b	570 <coda_ascii_float_mapping_new+0x170>
     44c:	ldr	r0, [fp, #-8]
     450:	bl	0 <strlen>
     454:	cmp	r0, #64	; 0x40
     458:	bls	498 <coda_ascii_float_mapping_new+0x98>
     45c:	ldr	r0, [pc, #280]	; 57c <coda_ascii_float_mapping_new+0x17c>
     460:	ldr	r1, [fp, #-8]
     464:	str	r0, [sp, #8]
     468:	mov	r0, r1
     46c:	bl	0 <strlen>
     470:	ldr	r1, [sp, #8]
     474:	str	r0, [sp, #4]
     478:	mov	r0, r1
     47c:	movw	r1, #0
     480:	movt	r1, #0
     484:	ldr	r2, [sp, #4]
     488:	bl	0 <coda_set_error>
     48c:	movw	r0, #0
     490:	str	r0, [fp, #-4]
     494:	b	570 <coda_ascii_float_mapping_new+0x170>
     498:	movw	r0, #16
     49c:	bl	0 <malloc>
     4a0:	str	r0, [sp, #12]
     4a4:	ldr	r0, [sp, #12]
     4a8:	movw	r1, #0
     4ac:	cmp	r0, r1
     4b0:	bne	4e4 <coda_ascii_float_mapping_new+0xe4>
     4b4:	mvn	r0, #0
     4b8:	movw	r1, #0
     4bc:	movt	r1, #0
     4c0:	movw	r2, #16
     4c4:	movw	r3, #0
     4c8:	movt	r3, #0
     4cc:	movw	ip, #319	; 0x13f
     4d0:	str	ip, [sp]
     4d4:	bl	0 <coda_set_error>
     4d8:	movw	r0, #0
     4dc:	str	r0, [fp, #-4]
     4e0:	b	570 <coda_ascii_float_mapping_new+0x170>
     4e4:	ldr	r0, [sp, #12]
     4e8:	movw	r1, #0
     4ec:	str	r1, [r0]
     4f0:	ldr	r0, [sp, #12]
     4f4:	str	r1, [r0, #4]
     4f8:	vldr	d16, [sp, #16]
     4fc:	ldr	r0, [sp, #12]
     500:	vstr	d16, [r0, #8]
     504:	ldr	r0, [fp, #-8]
     508:	bl	0 <strdup>
     50c:	ldr	r1, [sp, #12]
     510:	str	r0, [r1, #4]
     514:	ldr	r0, [sp, #12]
     518:	ldr	r0, [r0, #4]
     51c:	movw	r1, #0
     520:	cmp	r0, r1
     524:	bne	558 <coda_ascii_float_mapping_new+0x158>
     528:	mvn	r0, #0
     52c:	movw	r1, #0
     530:	movt	r1, #0
     534:	movw	r2, #0
     538:	movt	r2, #0
     53c:	movw	r3, #330	; 0x14a
     540:	bl	0 <coda_set_error>
     544:	ldr	r0, [sp, #12]
     548:	bl	0 <free>
     54c:	movw	r0, #0
     550:	str	r0, [fp, #-4]
     554:	b	570 <coda_ascii_float_mapping_new+0x170>
     558:	ldr	r0, [fp, #-8]
     55c:	bl	0 <strlen>
     560:	ldr	r1, [sp, #12]
     564:	str	r0, [r1]
     568:	ldr	r0, [sp, #12]
     56c:	str	r0, [fp, #-4]
     570:	ldr	r0, [fp, #-4]
     574:	mov	sp, fp
     578:	pop	{fp, pc}
     57c:	.word	0xfffffe70

00000580 <coda_ascii_float_mapping_delete>:
     580:	push	{fp, lr}
     584:	mov	fp, sp
     588:	sub	sp, sp, #8
     58c:	str	r0, [sp, #4]
     590:	ldr	r0, [sp, #4]
     594:	bl	3ac <mapping_delete>
     598:	mov	sp, fp
     59c:	pop	{fp, pc}

000005a0 <coda_type_record_field_delete>:
     5a0:	push	{fp, lr}
     5a4:	mov	fp, sp
     5a8:	sub	sp, sp, #8
     5ac:	str	r0, [sp, #4]
     5b0:	ldr	r0, [sp, #4]
     5b4:	movw	r1, #0
     5b8:	cmp	r0, r1
     5bc:	bne	5c4 <coda_type_record_field_delete+0x24>
     5c0:	b	66c <coda_type_record_field_delete+0xcc>
     5c4:	ldr	r0, [sp, #4]
     5c8:	ldr	r0, [r0]
     5cc:	movw	r1, #0
     5d0:	cmp	r0, r1
     5d4:	beq	5e4 <coda_type_record_field_delete+0x44>
     5d8:	ldr	r0, [sp, #4]
     5dc:	ldr	r0, [r0]
     5e0:	bl	0 <free>
     5e4:	ldr	r0, [sp, #4]
     5e8:	ldr	r0, [r0, #4]
     5ec:	movw	r1, #0
     5f0:	cmp	r0, r1
     5f4:	beq	604 <coda_type_record_field_delete+0x64>
     5f8:	ldr	r0, [sp, #4]
     5fc:	ldr	r0, [r0, #4]
     600:	bl	0 <free>
     604:	ldr	r0, [sp, #4]
     608:	ldr	r0, [r0, #8]
     60c:	movw	r1, #0
     610:	cmp	r0, r1
     614:	beq	624 <coda_type_record_field_delete+0x84>
     618:	ldr	r0, [sp, #4]
     61c:	ldr	r0, [r0, #8]
     620:	bl	674 <coda_type_release>
     624:	ldr	r0, [sp, #4]
     628:	ldr	r0, [r0, #20]
     62c:	movw	r1, #0
     630:	cmp	r0, r1
     634:	beq	644 <coda_type_record_field_delete+0xa4>
     638:	ldr	r0, [sp, #4]
     63c:	ldr	r0, [r0, #20]
     640:	bl	0 <coda_expression_delete>
     644:	ldr	r0, [sp, #4]
     648:	ldr	r0, [r0, #32]
     64c:	movw	r1, #0
     650:	cmp	r0, r1
     654:	beq	664 <coda_type_record_field_delete+0xc4>
     658:	ldr	r0, [sp, #4]
     65c:	ldr	r0, [r0, #32]
     660:	bl	0 <coda_expression_delete>
     664:	ldr	r0, [sp, #4]
     668:	bl	0 <free>
     66c:	mov	sp, fp
     670:	pop	{fp, pc}

00000674 <coda_type_release>:
     674:	push	{fp, lr}
     678:	mov	fp, sp
     67c:	sub	sp, sp, #8
     680:	str	r0, [sp, #4]
     684:	ldr	r0, [sp, #4]
     688:	movw	r1, #0
     68c:	cmp	r0, r1
     690:	bne	698 <coda_type_release+0x24>
     694:	b	744 <coda_type_release+0xd0>
     698:	ldr	r0, [sp, #4]
     69c:	ldr	r0, [r0, #4]
     6a0:	cmp	r0, #0
     6a4:	ble	6c0 <coda_type_release+0x4c>
     6a8:	ldr	r0, [sp, #4]
     6ac:	ldr	r1, [r0, #4]
     6b0:	mvn	r2, #0
     6b4:	add	r1, r1, r2
     6b8:	str	r1, [r0, #4]
     6bc:	b	744 <coda_type_release+0xd0>
     6c0:	ldr	r0, [sp, #4]
     6c4:	ldr	r0, [r0, #8]
     6c8:	cmp	r0, #6
     6cc:	str	r0, [sp]
     6d0:	bhi	744 <coda_type_release+0xd0>
     6d4:	add	r0, pc, #8
     6d8:	ldr	r1, [sp]
     6dc:	ldr	r0, [r0, r1, lsl #2]
     6e0:	mov	pc, r0
     6e4:	.word	0x00000700
     6e8:	.word	0x0000070c
     6ec:	.word	0x00000718
     6f0:	.word	0x00000718
     6f4:	.word	0x00000724
     6f8:	.word	0x00000730
     6fc:	.word	0x0000073c
     700:	ldr	r0, [sp, #4]
     704:	bl	74c <record_delete>
     708:	b	744 <coda_type_release+0xd0>
     70c:	ldr	r0, [sp, #4]
     710:	bl	8c0 <array_delete>
     714:	b	744 <coda_type_release+0xd0>
     718:	ldr	r0, [sp, #4]
     71c:	bl	9fc <number_delete>
     720:	b	744 <coda_type_release+0xd0>
     724:	ldr	r0, [sp, #4]
     728:	bl	b10 <text_delete>
     72c:	b	744 <coda_type_release+0xd0>
     730:	ldr	r0, [sp, #4]
     734:	bl	be4 <raw_delete>
     738:	b	744 <coda_type_release+0xd0>
     73c:	ldr	r0, [sp, #4]
     740:	bl	cb8 <special_delete>
     744:	mov	sp, fp
     748:	pop	{fp, pc}

0000074c <record_delete>:
     74c:	push	{fp, lr}
     750:	mov	fp, sp
     754:	sub	sp, sp, #8
     758:	str	r0, [sp, #4]
     75c:	ldr	r0, [sp, #4]
     760:	movw	r1, #0
     764:	cmp	r0, r1
     768:	bne	770 <record_delete+0x24>
     76c:	b	8b8 <record_delete+0x16c>
     770:	ldr	r0, [sp, #4]
     774:	ldr	r0, [r0, #16]
     778:	movw	r1, #0
     77c:	cmp	r0, r1
     780:	beq	790 <record_delete+0x44>
     784:	ldr	r0, [sp, #4]
     788:	ldr	r0, [r0, #16]
     78c:	bl	0 <free>
     790:	ldr	r0, [sp, #4]
     794:	ldr	r0, [r0, #20]
     798:	movw	r1, #0
     79c:	cmp	r0, r1
     7a0:	beq	7b0 <record_delete+0x64>
     7a4:	ldr	r0, [sp, #4]
     7a8:	ldr	r0, [r0, #20]
     7ac:	bl	0 <free>
     7b0:	ldr	r0, [sp, #4]
     7b4:	ldr	r0, [r0, #32]
     7b8:	movw	r1, #0
     7bc:	cmp	r0, r1
     7c0:	beq	7d0 <record_delete+0x84>
     7c4:	ldr	r0, [sp, #4]
     7c8:	ldr	r0, [r0, #32]
     7cc:	bl	0 <coda_expression_delete>
     7d0:	ldr	r0, [sp, #4]
     7d4:	ldr	r0, [r0, #36]	; 0x24
     7d8:	movw	r1, #0
     7dc:	cmp	r0, r1
     7e0:	beq	7f0 <record_delete+0xa4>
     7e4:	ldr	r0, [sp, #4]
     7e8:	ldr	r0, [r0, #36]	; 0x24
     7ec:	bl	674 <coda_type_release>
     7f0:	ldr	r0, [sp, #4]
     7f4:	ldr	r0, [r0, #40]	; 0x28
     7f8:	movw	r1, #0
     7fc:	cmp	r0, r1
     800:	beq	810 <record_delete+0xc4>
     804:	ldr	r0, [sp, #4]
     808:	ldr	r0, [r0, #40]	; 0x28
     80c:	bl	0 <coda_hashtable_delete>
     810:	ldr	r0, [sp, #4]
     814:	ldr	r0, [r0, #44]	; 0x2c
     818:	movw	r1, #0
     81c:	cmp	r0, r1
     820:	beq	830 <record_delete+0xe4>
     824:	ldr	r0, [sp, #4]
     828:	ldr	r0, [r0, #44]	; 0x2c
     82c:	bl	0 <coda_hashtable_delete>
     830:	ldr	r0, [sp, #4]
     834:	ldr	r0, [r0, #48]	; 0x30
     838:	cmp	r0, #0
     83c:	ble	890 <record_delete+0x144>
     840:	movw	r0, #0
     844:	str	r0, [sp]
     848:	ldr	r0, [sp]
     84c:	ldr	r1, [sp, #4]
     850:	ldr	r1, [r1, #48]	; 0x30
     854:	cmp	r0, r1
     858:	bge	884 <record_delete+0x138>
     85c:	ldr	r0, [sp, #4]
     860:	ldr	r0, [r0, #52]	; 0x34
     864:	ldr	r1, [sp]
     868:	add	r0, r0, r1, lsl #2
     86c:	ldr	r0, [r0]
     870:	bl	5a0 <coda_type_record_field_delete>
     874:	ldr	r0, [sp]
     878:	add	r0, r0, #1
     87c:	str	r0, [sp]
     880:	b	848 <record_delete+0xfc>
     884:	ldr	r0, [sp, #4]
     888:	ldr	r0, [r0, #52]	; 0x34
     88c:	bl	0 <free>
     890:	ldr	r0, [sp, #4]
     894:	ldr	r0, [r0, #68]	; 0x44
     898:	movw	r1, #0
     89c:	cmp	r0, r1
     8a0:	beq	8b0 <record_delete+0x164>
     8a4:	ldr	r0, [sp, #4]
     8a8:	ldr	r0, [r0, #68]	; 0x44
     8ac:	bl	0 <coda_expression_delete>
     8b0:	ldr	r0, [sp, #4]
     8b4:	bl	0 <free>
     8b8:	mov	sp, fp
     8bc:	pop	{fp, pc}

000008c0 <array_delete>:
     8c0:	push	{fp, lr}
     8c4:	mov	fp, sp
     8c8:	sub	sp, sp, #8
     8cc:	str	r0, [sp, #4]
     8d0:	ldr	r0, [sp, #4]
     8d4:	movw	r1, #0
     8d8:	cmp	r0, r1
     8dc:	bne	8e4 <array_delete+0x24>
     8e0:	b	9f4 <array_delete+0x134>
     8e4:	ldr	r0, [sp, #4]
     8e8:	ldr	r0, [r0, #16]
     8ec:	movw	r1, #0
     8f0:	cmp	r0, r1
     8f4:	beq	904 <array_delete+0x44>
     8f8:	ldr	r0, [sp, #4]
     8fc:	ldr	r0, [r0, #16]
     900:	bl	0 <free>
     904:	ldr	r0, [sp, #4]
     908:	ldr	r0, [r0, #20]
     90c:	movw	r1, #0
     910:	cmp	r0, r1
     914:	beq	924 <array_delete+0x64>
     918:	ldr	r0, [sp, #4]
     91c:	ldr	r0, [r0, #20]
     920:	bl	0 <free>
     924:	ldr	r0, [sp, #4]
     928:	ldr	r0, [r0, #32]
     92c:	movw	r1, #0
     930:	cmp	r0, r1
     934:	beq	944 <array_delete+0x84>
     938:	ldr	r0, [sp, #4]
     93c:	ldr	r0, [r0, #32]
     940:	bl	0 <coda_expression_delete>
     944:	ldr	r0, [sp, #4]
     948:	ldr	r0, [r0, #36]	; 0x24
     94c:	movw	r1, #0
     950:	cmp	r0, r1
     954:	beq	964 <array_delete+0xa4>
     958:	ldr	r0, [sp, #4]
     95c:	ldr	r0, [r0, #36]	; 0x24
     960:	bl	674 <coda_type_release>
     964:	ldr	r0, [sp, #4]
     968:	ldr	r0, [r0, #40]	; 0x28
     96c:	movw	r1, #0
     970:	cmp	r0, r1
     974:	beq	984 <array_delete+0xc4>
     978:	ldr	r0, [sp, #4]
     97c:	ldr	r0, [r0, #40]	; 0x28
     980:	bl	674 <coda_type_release>
     984:	movw	r0, #0
     988:	str	r0, [sp]
     98c:	ldr	r0, [sp]
     990:	ldr	r1, [sp, #4]
     994:	ldr	r1, [r1, #48]	; 0x30
     998:	cmp	r0, r1
     99c:	bge	9ec <array_delete+0x12c>
     9a0:	ldr	r0, [sp, #4]
     9a4:	add	r0, r0, #84	; 0x54
     9a8:	ldr	r1, [sp]
     9ac:	add	r0, r0, r1, lsl #2
     9b0:	ldr	r0, [r0]
     9b4:	movw	r1, #0
     9b8:	cmp	r0, r1
     9bc:	beq	9d8 <array_delete+0x118>
     9c0:	ldr	r0, [sp, #4]
     9c4:	add	r0, r0, #84	; 0x54
     9c8:	ldr	r1, [sp]
     9cc:	add	r0, r0, r1, lsl #2
     9d0:	ldr	r0, [r0]
     9d4:	bl	0 <coda_expression_delete>
     9d8:	b	9dc <array_delete+0x11c>
     9dc:	ldr	r0, [sp]
     9e0:	add	r0, r0, #1
     9e4:	str	r0, [sp]
     9e8:	b	98c <array_delete+0xcc>
     9ec:	ldr	r0, [sp, #4]
     9f0:	bl	0 <free>
     9f4:	mov	sp, fp
     9f8:	pop	{fp, pc}

000009fc <number_delete>:
     9fc:	push	{fp, lr}
     a00:	mov	fp, sp
     a04:	sub	sp, sp, #8
     a08:	str	r0, [sp, #4]
     a0c:	ldr	r0, [sp, #4]
     a10:	movw	r1, #0
     a14:	cmp	r0, r1
     a18:	bne	a20 <number_delete+0x24>
     a1c:	b	b08 <number_delete+0x10c>
     a20:	ldr	r0, [sp, #4]
     a24:	ldr	r0, [r0, #16]
     a28:	movw	r1, #0
     a2c:	cmp	r0, r1
     a30:	beq	a40 <number_delete+0x44>
     a34:	ldr	r0, [sp, #4]
     a38:	ldr	r0, [r0, #16]
     a3c:	bl	0 <free>
     a40:	ldr	r0, [sp, #4]
     a44:	ldr	r0, [r0, #20]
     a48:	movw	r1, #0
     a4c:	cmp	r0, r1
     a50:	beq	a60 <number_delete+0x64>
     a54:	ldr	r0, [sp, #4]
     a58:	ldr	r0, [r0, #20]
     a5c:	bl	0 <free>
     a60:	ldr	r0, [sp, #4]
     a64:	ldr	r0, [r0, #32]
     a68:	movw	r1, #0
     a6c:	cmp	r0, r1
     a70:	beq	a80 <number_delete+0x84>
     a74:	ldr	r0, [sp, #4]
     a78:	ldr	r0, [r0, #32]
     a7c:	bl	0 <coda_expression_delete>
     a80:	ldr	r0, [sp, #4]
     a84:	ldr	r0, [r0, #36]	; 0x24
     a88:	movw	r1, #0
     a8c:	cmp	r0, r1
     a90:	beq	aa0 <number_delete+0xa4>
     a94:	ldr	r0, [sp, #4]
     a98:	ldr	r0, [r0, #36]	; 0x24
     a9c:	bl	674 <coda_type_release>
     aa0:	ldr	r0, [sp, #4]
     aa4:	ldr	r0, [r0, #40]	; 0x28
     aa8:	movw	r1, #0
     aac:	cmp	r0, r1
     ab0:	beq	ac0 <number_delete+0xc4>
     ab4:	ldr	r0, [sp, #4]
     ab8:	ldr	r0, [r0, #40]	; 0x28
     abc:	bl	0 <free>
     ac0:	ldr	r0, [sp, #4]
     ac4:	ldr	r0, [r0, #48]	; 0x30
     ac8:	movw	r1, #0
     acc:	cmp	r0, r1
     ad0:	beq	ae0 <number_delete+0xe4>
     ad4:	ldr	r0, [sp, #4]
     ad8:	ldr	r0, [r0, #48]	; 0x30
     adc:	bl	1ac <coda_conversion_delete>
     ae0:	ldr	r0, [sp, #4]
     ae4:	ldr	r0, [r0, #52]	; 0x34
     ae8:	movw	r1, #0
     aec:	cmp	r0, r1
     af0:	beq	b00 <number_delete+0x104>
     af4:	ldr	r0, [sp, #4]
     af8:	ldr	r0, [r0, #52]	; 0x34
     afc:	bl	8228 <mappings_delete>
     b00:	ldr	r0, [sp, #4]
     b04:	bl	0 <free>
     b08:	mov	sp, fp
     b0c:	pop	{fp, pc}

00000b10 <text_delete>:
     b10:	push	{fp, lr}
     b14:	mov	fp, sp
     b18:	sub	sp, sp, #8
     b1c:	str	r0, [sp, #4]
     b20:	ldr	r0, [sp, #4]
     b24:	movw	r1, #0
     b28:	cmp	r0, r1
     b2c:	bne	b34 <text_delete+0x24>
     b30:	b	bdc <text_delete+0xcc>
     b34:	ldr	r0, [sp, #4]
     b38:	ldr	r0, [r0, #16]
     b3c:	movw	r1, #0
     b40:	cmp	r0, r1
     b44:	beq	b54 <text_delete+0x44>
     b48:	ldr	r0, [sp, #4]
     b4c:	ldr	r0, [r0, #16]
     b50:	bl	0 <free>
     b54:	ldr	r0, [sp, #4]
     b58:	ldr	r0, [r0, #20]
     b5c:	movw	r1, #0
     b60:	cmp	r0, r1
     b64:	beq	b74 <text_delete+0x64>
     b68:	ldr	r0, [sp, #4]
     b6c:	ldr	r0, [r0, #20]
     b70:	bl	0 <free>
     b74:	ldr	r0, [sp, #4]
     b78:	ldr	r0, [r0, #32]
     b7c:	movw	r1, #0
     b80:	cmp	r0, r1
     b84:	beq	b94 <text_delete+0x84>
     b88:	ldr	r0, [sp, #4]
     b8c:	ldr	r0, [r0, #32]
     b90:	bl	0 <coda_expression_delete>
     b94:	ldr	r0, [sp, #4]
     b98:	ldr	r0, [r0, #36]	; 0x24
     b9c:	movw	r1, #0
     ba0:	cmp	r0, r1
     ba4:	beq	bb4 <text_delete+0xa4>
     ba8:	ldr	r0, [sp, #4]
     bac:	ldr	r0, [r0, #36]	; 0x24
     bb0:	bl	674 <coda_type_release>
     bb4:	ldr	r0, [sp, #4]
     bb8:	ldr	r0, [r0, #40]	; 0x28
     bbc:	movw	r1, #0
     bc0:	cmp	r0, r1
     bc4:	beq	bd4 <text_delete+0xc4>
     bc8:	ldr	r0, [sp, #4]
     bcc:	ldr	r0, [r0, #40]	; 0x28
     bd0:	bl	0 <free>
     bd4:	ldr	r0, [sp, #4]
     bd8:	bl	0 <free>
     bdc:	mov	sp, fp
     be0:	pop	{fp, pc}

00000be4 <raw_delete>:
     be4:	push	{fp, lr}
     be8:	mov	fp, sp
     bec:	sub	sp, sp, #8
     bf0:	str	r0, [sp, #4]
     bf4:	ldr	r0, [sp, #4]
     bf8:	movw	r1, #0
     bfc:	cmp	r0, r1
     c00:	bne	c08 <raw_delete+0x24>
     c04:	b	cb0 <raw_delete+0xcc>
     c08:	ldr	r0, [sp, #4]
     c0c:	ldr	r0, [r0, #16]
     c10:	movw	r1, #0
     c14:	cmp	r0, r1
     c18:	beq	c28 <raw_delete+0x44>
     c1c:	ldr	r0, [sp, #4]
     c20:	ldr	r0, [r0, #16]
     c24:	bl	0 <free>
     c28:	ldr	r0, [sp, #4]
     c2c:	ldr	r0, [r0, #20]
     c30:	movw	r1, #0
     c34:	cmp	r0, r1
     c38:	beq	c48 <raw_delete+0x64>
     c3c:	ldr	r0, [sp, #4]
     c40:	ldr	r0, [r0, #20]
     c44:	bl	0 <free>
     c48:	ldr	r0, [sp, #4]
     c4c:	ldr	r0, [r0, #32]
     c50:	movw	r1, #0
     c54:	cmp	r0, r1
     c58:	beq	c68 <raw_delete+0x84>
     c5c:	ldr	r0, [sp, #4]
     c60:	ldr	r0, [r0, #32]
     c64:	bl	0 <coda_expression_delete>
     c68:	ldr	r0, [sp, #4]
     c6c:	ldr	r0, [r0, #36]	; 0x24
     c70:	movw	r1, #0
     c74:	cmp	r0, r1
     c78:	beq	c88 <raw_delete+0xa4>
     c7c:	ldr	r0, [sp, #4]
     c80:	ldr	r0, [r0, #36]	; 0x24
     c84:	bl	674 <coda_type_release>
     c88:	ldr	r0, [sp, #4]
     c8c:	ldr	r0, [r0, #44]	; 0x2c
     c90:	movw	r1, #0
     c94:	cmp	r0, r1
     c98:	beq	ca8 <raw_delete+0xc4>
     c9c:	ldr	r0, [sp, #4]
     ca0:	ldr	r0, [r0, #44]	; 0x2c
     ca4:	bl	0 <free>
     ca8:	ldr	r0, [sp, #4]
     cac:	bl	0 <free>
     cb0:	mov	sp, fp
     cb4:	pop	{fp, pc}

00000cb8 <special_delete>:
     cb8:	push	{fp, lr}
     cbc:	mov	fp, sp
     cc0:	sub	sp, sp, #8
     cc4:	str	r0, [sp, #4]
     cc8:	ldr	r0, [sp, #4]
     ccc:	movw	r1, #0
     cd0:	cmp	r0, r1
     cd4:	bne	cdc <special_delete+0x24>
     cd8:	b	dc4 <special_delete+0x10c>
     cdc:	ldr	r0, [sp, #4]
     ce0:	ldr	r0, [r0, #16]
     ce4:	movw	r1, #0
     ce8:	cmp	r0, r1
     cec:	beq	cfc <special_delete+0x44>
     cf0:	ldr	r0, [sp, #4]
     cf4:	ldr	r0, [r0, #16]
     cf8:	bl	0 <free>
     cfc:	ldr	r0, [sp, #4]
     d00:	ldr	r0, [r0, #20]
     d04:	movw	r1, #0
     d08:	cmp	r0, r1
     d0c:	beq	d1c <special_delete+0x64>
     d10:	ldr	r0, [sp, #4]
     d14:	ldr	r0, [r0, #20]
     d18:	bl	0 <free>
     d1c:	ldr	r0, [sp, #4]
     d20:	ldr	r0, [r0, #32]
     d24:	movw	r1, #0
     d28:	cmp	r0, r1
     d2c:	beq	d3c <special_delete+0x84>
     d30:	ldr	r0, [sp, #4]
     d34:	ldr	r0, [r0, #32]
     d38:	bl	0 <coda_expression_delete>
     d3c:	ldr	r0, [sp, #4]
     d40:	ldr	r0, [r0, #36]	; 0x24
     d44:	movw	r1, #0
     d48:	cmp	r0, r1
     d4c:	beq	d5c <special_delete+0xa4>
     d50:	ldr	r0, [sp, #4]
     d54:	ldr	r0, [r0, #36]	; 0x24
     d58:	bl	674 <coda_type_release>
     d5c:	ldr	r0, [sp, #4]
     d60:	ldr	r0, [r0, #44]	; 0x2c
     d64:	movw	r1, #0
     d68:	cmp	r0, r1
     d6c:	beq	d7c <special_delete+0xc4>
     d70:	ldr	r0, [sp, #4]
     d74:	ldr	r0, [r0, #44]	; 0x2c
     d78:	bl	674 <coda_type_release>
     d7c:	ldr	r0, [sp, #4]
     d80:	ldr	r0, [r0, #48]	; 0x30
     d84:	movw	r1, #0
     d88:	cmp	r0, r1
     d8c:	beq	d9c <special_delete+0xe4>
     d90:	ldr	r0, [sp, #4]
     d94:	ldr	r0, [r0, #48]	; 0x30
     d98:	bl	0 <free>
     d9c:	ldr	r0, [sp, #4]
     da0:	ldr	r0, [r0, #52]	; 0x34
     da4:	movw	r1, #0
     da8:	cmp	r0, r1
     dac:	beq	dbc <special_delete+0x104>
     db0:	ldr	r0, [sp, #4]
     db4:	ldr	r0, [r0, #52]	; 0x34
     db8:	bl	0 <coda_expression_delete>
     dbc:	ldr	r0, [sp, #4]
     dc0:	bl	0 <free>
     dc4:	mov	sp, fp
     dc8:	pop	{fp, pc}

00000dcc <coda_type_set_read_type>:
     dcc:	push	{fp, lr}
     dd0:	mov	fp, sp
     dd4:	sub	sp, sp, #32
     dd8:	str	r0, [fp, #-8]
     ddc:	str	r1, [fp, #-12]
     de0:	ldr	r0, [fp, #-8]
     de4:	movw	r1, #0
     de8:	cmp	r0, r1
     dec:	bne	e18 <coda_type_set_read_type+0x4c>
     df0:	mvn	r0, #99	; 0x63
     df4:	movw	r1, #0
     df8:	movt	r1, #0
     dfc:	movw	r2, #0
     e00:	movt	r2, #0
     e04:	movw	r3, #710	; 0x2c6
     e08:	bl	0 <coda_set_error>
     e0c:	mvn	r0, #0
     e10:	str	r0, [fp, #-4]
     e14:	b	fb4 <coda_type_set_read_type+0x1e8>
     e18:	ldr	r0, [fp, #-8]
     e1c:	ldr	r0, [r0, #8]
     e20:	cmp	r0, #6
     e24:	str	r0, [sp, #16]
     e28:	bhi	f70 <coda_type_set_read_type+0x1a4>
     e2c:	add	r0, pc, #8
     e30:	ldr	r1, [sp, #16]
     e34:	ldr	r0, [r0, r1, lsl #2]
     e38:	mov	pc, r0
     e3c:	.word	0x00000e58
     e40:	.word	0x00000e58
     e44:	.word	0x00000e8c
     e48:	.word	0x00000f08
     e4c:	.word	0x00000f3c
     e50:	.word	0x00000e58
     e54:	.word	0x00000e58
     e58:	ldr	r0, [fp, #-8]
     e5c:	ldr	r0, [r0, #8]
     e60:	bl	fc4 <coda_type_get_class_name>
     e64:	ldr	r1, [pc, #340]	; fc0 <coda_type_set_read_type+0x1f4>
     e68:	str	r0, [sp, #12]
     e6c:	mov	r0, r1
     e70:	movw	r1, #0
     e74:	movt	r1, #0
     e78:	ldr	r2, [sp, #12]
     e7c:	bl	0 <coda_set_error>
     e80:	mvn	r0, #0
     e84:	str	r0, [fp, #-4]
     e88:	b	fb4 <coda_type_set_read_type+0x1e8>
     e8c:	ldr	r0, [fp, #-12]
     e90:	cmp	r0, #0
     e94:	beq	eec <coda_type_set_read_type+0x120>
     e98:	ldr	r0, [fp, #-12]
     e9c:	cmp	r0, #1
     ea0:	beq	eec <coda_type_set_read_type+0x120>
     ea4:	ldr	r0, [fp, #-12]
     ea8:	cmp	r0, #2
     eac:	beq	eec <coda_type_set_read_type+0x120>
     eb0:	ldr	r0, [fp, #-12]
     eb4:	cmp	r0, #3
     eb8:	beq	eec <coda_type_set_read_type+0x120>
     ebc:	ldr	r0, [fp, #-12]
     ec0:	cmp	r0, #4
     ec4:	beq	eec <coda_type_set_read_type+0x120>
     ec8:	ldr	r0, [fp, #-12]
     ecc:	cmp	r0, #5
     ed0:	beq	eec <coda_type_set_read_type+0x120>
     ed4:	ldr	r0, [fp, #-12]
     ed8:	cmp	r0, #6
     edc:	beq	eec <coda_type_set_read_type+0x120>
     ee0:	ldr	r0, [fp, #-12]
     ee4:	cmp	r0, #7
     ee8:	bne	f04 <coda_type_set_read_type+0x138>
     eec:	ldr	r0, [fp, #-12]
     ef0:	ldr	r1, [fp, #-8]
     ef4:	str	r0, [r1, #12]
     ef8:	movw	r0, #0
     efc:	str	r0, [fp, #-4]
     f00:	b	fb4 <coda_type_set_read_type+0x1e8>
     f04:	b	f70 <coda_type_set_read_type+0x1a4>
     f08:	ldr	r0, [fp, #-12]
     f0c:	cmp	r0, #8
     f10:	beq	f20 <coda_type_set_read_type+0x154>
     f14:	ldr	r0, [fp, #-12]
     f18:	cmp	r0, #9
     f1c:	bne	f38 <coda_type_set_read_type+0x16c>
     f20:	ldr	r0, [fp, #-12]
     f24:	ldr	r1, [fp, #-8]
     f28:	str	r0, [r1, #12]
     f2c:	movw	r0, #0
     f30:	str	r0, [fp, #-4]
     f34:	b	fb4 <coda_type_set_read_type+0x1e8>
     f38:	b	f70 <coda_type_set_read_type+0x1a4>
     f3c:	ldr	r0, [fp, #-12]
     f40:	cmp	r0, #10
     f44:	beq	f54 <coda_type_set_read_type+0x188>
     f48:	ldr	r0, [fp, #-12]
     f4c:	cmp	r0, #11
     f50:	bne	f6c <coda_type_set_read_type+0x1a0>
     f54:	ldr	r0, [fp, #-12]
     f58:	ldr	r1, [fp, #-8]
     f5c:	str	r0, [r1, #12]
     f60:	movw	r0, #0
     f64:	str	r0, [fp, #-4]
     f68:	b	fb4 <coda_type_set_read_type+0x1e8>
     f6c:	b	f70 <coda_type_set_read_type+0x1a4>
     f70:	ldr	r0, [fp, #-12]
     f74:	bl	1090 <coda_type_get_native_type_name>
     f78:	ldr	r1, [fp, #-8]
     f7c:	ldr	r1, [r1, #8]
     f80:	str	r0, [sp, #8]
     f84:	mov	r0, r1
     f88:	bl	fc4 <coda_type_get_class_name>
     f8c:	ldr	r1, [pc, #44]	; fc0 <coda_type_set_read_type+0x1f4>
     f90:	str	r0, [sp, #4]
     f94:	mov	r0, r1
     f98:	movw	r1, #0
     f9c:	movt	r1, #0
     fa0:	ldr	r2, [sp, #8]
     fa4:	ldr	r3, [sp, #4]
     fa8:	bl	0 <coda_set_error>
     fac:	mvn	r0, #0
     fb0:	str	r0, [fp, #-4]
     fb4:	ldr	r0, [fp, #-4]
     fb8:	mov	sp, fp
     fbc:	pop	{fp, pc}
     fc0:	.word	0xfffffe70

00000fc4 <coda_type_get_class_name>:
     fc4:	sub	sp, sp, #12
     fc8:	str	r0, [sp, #4]
     fcc:	ldr	r0, [sp, #4]
     fd0:	cmp	r0, #6
     fd4:	str	r0, [sp]
     fd8:	bhi	1078 <coda_type_get_class_name+0xb4>
     fdc:	add	r0, pc, #8
     fe0:	ldr	r1, [sp]
     fe4:	ldr	r0, [r0, r1, lsl #2]
     fe8:	mov	pc, r0
     fec:	.word	0x00001008
     ff0:	.word	0x00001018
     ff4:	.word	0x00001028
     ff8:	.word	0x00001038
     ffc:	.word	0x00001048
    1000:	.word	0x00001058
    1004:	.word	0x00001068
    1008:	movw	r0, #0
    100c:	movt	r0, #0
    1010:	str	r0, [sp, #8]
    1014:	b	1084 <coda_type_get_class_name+0xc0>
    1018:	movw	r0, #0
    101c:	movt	r0, #0
    1020:	str	r0, [sp, #8]
    1024:	b	1084 <coda_type_get_class_name+0xc0>
    1028:	movw	r0, #0
    102c:	movt	r0, #0
    1030:	str	r0, [sp, #8]
    1034:	b	1084 <coda_type_get_class_name+0xc0>
    1038:	movw	r0, #0
    103c:	movt	r0, #0
    1040:	str	r0, [sp, #8]
    1044:	b	1084 <coda_type_get_class_name+0xc0>
    1048:	movw	r0, #0
    104c:	movt	r0, #0
    1050:	str	r0, [sp, #8]
    1054:	b	1084 <coda_type_get_class_name+0xc0>
    1058:	movw	r0, #0
    105c:	movt	r0, #0
    1060:	str	r0, [sp, #8]
    1064:	b	1084 <coda_type_get_class_name+0xc0>
    1068:	movw	r0, #0
    106c:	movt	r0, #0
    1070:	str	r0, [sp, #8]
    1074:	b	1084 <coda_type_get_class_name+0xc0>
    1078:	movw	r0, #0
    107c:	movt	r0, #0
    1080:	str	r0, [sp, #8]
    1084:	ldr	r0, [sp, #8]
    1088:	add	sp, sp, #12
    108c:	bx	lr

00001090 <coda_type_get_native_type_name>:
    1090:	sub	sp, sp, #12
    1094:	str	r0, [sp, #4]
    1098:	ldr	r0, [sp, #4]
    109c:	add	r0, r0, #1
    10a0:	cmp	r0, #13
    10a4:	str	r0, [sp]
    10a8:	bhi	11d4 <coda_type_get_native_type_name+0x144>
    10ac:	add	r0, pc, #8
    10b0:	ldr	r1, [sp]
    10b4:	ldr	r0, [r0, r1, lsl #2]
    10b8:	mov	pc, r0
    10bc:	.word	0x000010f4
    10c0:	.word	0x00001104
    10c4:	.word	0x00001114
    10c8:	.word	0x00001124
    10cc:	.word	0x00001134
    10d0:	.word	0x00001144
    10d4:	.word	0x00001154
    10d8:	.word	0x00001164
    10dc:	.word	0x00001174
    10e0:	.word	0x00001184
    10e4:	.word	0x00001194
    10e8:	.word	0x000011a4
    10ec:	.word	0x000011b4
    10f0:	.word	0x000011c4
    10f4:	movw	r0, #0
    10f8:	movt	r0, #0
    10fc:	str	r0, [sp, #8]
    1100:	b	11e0 <coda_type_get_native_type_name+0x150>
    1104:	movw	r0, #0
    1108:	movt	r0, #0
    110c:	str	r0, [sp, #8]
    1110:	b	11e0 <coda_type_get_native_type_name+0x150>
    1114:	movw	r0, #0
    1118:	movt	r0, #0
    111c:	str	r0, [sp, #8]
    1120:	b	11e0 <coda_type_get_native_type_name+0x150>
    1124:	movw	r0, #0
    1128:	movt	r0, #0
    112c:	str	r0, [sp, #8]
    1130:	b	11e0 <coda_type_get_native_type_name+0x150>
    1134:	movw	r0, #0
    1138:	movt	r0, #0
    113c:	str	r0, [sp, #8]
    1140:	b	11e0 <coda_type_get_native_type_name+0x150>
    1144:	movw	r0, #0
    1148:	movt	r0, #0
    114c:	str	r0, [sp, #8]
    1150:	b	11e0 <coda_type_get_native_type_name+0x150>
    1154:	movw	r0, #0
    1158:	movt	r0, #0
    115c:	str	r0, [sp, #8]
    1160:	b	11e0 <coda_type_get_native_type_name+0x150>
    1164:	movw	r0, #0
    1168:	movt	r0, #0
    116c:	str	r0, [sp, #8]
    1170:	b	11e0 <coda_type_get_native_type_name+0x150>
    1174:	movw	r0, #0
    1178:	movt	r0, #0
    117c:	str	r0, [sp, #8]
    1180:	b	11e0 <coda_type_get_native_type_name+0x150>
    1184:	movw	r0, #0
    1188:	movt	r0, #0
    118c:	str	r0, [sp, #8]
    1190:	b	11e0 <coda_type_get_native_type_name+0x150>
    1194:	movw	r0, #0
    1198:	movt	r0, #0
    119c:	str	r0, [sp, #8]
    11a0:	b	11e0 <coda_type_get_native_type_name+0x150>
    11a4:	movw	r0, #0
    11a8:	movt	r0, #0
    11ac:	str	r0, [sp, #8]
    11b0:	b	11e0 <coda_type_get_native_type_name+0x150>
    11b4:	movw	r0, #0
    11b8:	movt	r0, #0
    11bc:	str	r0, [sp, #8]
    11c0:	b	11e0 <coda_type_get_native_type_name+0x150>
    11c4:	movw	r0, #0
    11c8:	movt	r0, #0
    11cc:	str	r0, [sp, #8]
    11d0:	b	11e0 <coda_type_get_native_type_name+0x150>
    11d4:	movw	r0, #0
    11d8:	movt	r0, #0
    11dc:	str	r0, [sp, #8]
    11e0:	ldr	r0, [sp, #8]
    11e4:	add	sp, sp, #12
    11e8:	bx	lr

000011ec <coda_type_set_name>:
    11ec:	push	{fp, lr}
    11f0:	mov	fp, sp
    11f4:	sub	sp, sp, #16
    11f8:	str	r0, [sp, #8]
    11fc:	str	r1, [sp, #4]
    1200:	movw	r0, #0
    1204:	str	r0, [sp]
    1208:	ldr	r1, [sp, #8]
    120c:	cmp	r1, r0
    1210:	bne	123c <coda_type_set_name+0x50>
    1214:	mvn	r0, #99	; 0x63
    1218:	movw	r1, #0
    121c:	movt	r1, #0
    1220:	movw	r2, #0
    1224:	movt	r2, #0
    1228:	movw	r3, #759	; 0x2f7
    122c:	bl	0 <coda_set_error>
    1230:	mvn	r0, #0
    1234:	str	r0, [fp, #-4]
    1238:	b	132c <coda_type_set_name+0x140>
    123c:	ldr	r0, [sp, #4]
    1240:	movw	r1, #0
    1244:	cmp	r0, r1
    1248:	bne	1274 <coda_type_set_name+0x88>
    124c:	mvn	r0, #99	; 0x63
    1250:	movw	r1, #0
    1254:	movt	r1, #0
    1258:	movw	r2, #0
    125c:	movt	r2, #0
    1260:	movw	r3, #764	; 0x2fc
    1264:	bl	0 <coda_set_error>
    1268:	mvn	r0, #0
    126c:	str	r0, [fp, #-4]
    1270:	b	132c <coda_type_set_name+0x140>
    1274:	ldr	r0, [sp, #8]
    1278:	ldr	r0, [r0, #16]
    127c:	movw	r1, #0
    1280:	cmp	r0, r1
    1284:	beq	12a4 <coda_type_set_name+0xb8>
    1288:	ldr	r0, [pc, #168]	; 1338 <coda_type_set_name+0x14c>
    128c:	movw	r1, #0
    1290:	movt	r1, #0
    1294:	bl	0 <coda_set_error>
    1298:	mvn	r0, #0
    129c:	str	r0, [fp, #-4]
    12a0:	b	132c <coda_type_set_name+0x140>
    12a4:	ldr	r0, [sp, #4]
    12a8:	bl	0 <coda_is_identifier>
    12ac:	cmp	r0, #0
    12b0:	bne	12d4 <coda_type_set_name+0xe8>
    12b4:	ldr	r0, [pc, #124]	; 1338 <coda_type_set_name+0x14c>
    12b8:	ldr	r2, [sp, #4]
    12bc:	movw	r1, #0
    12c0:	movt	r1, #0
    12c4:	bl	0 <coda_set_error>
    12c8:	mvn	r0, #0
    12cc:	str	r0, [fp, #-4]
    12d0:	b	132c <coda_type_set_name+0x140>
    12d4:	ldr	r0, [sp, #4]
    12d8:	bl	0 <strdup>
    12dc:	str	r0, [sp]
    12e0:	ldr	r0, [sp]
    12e4:	movw	r1, #0
    12e8:	cmp	r0, r1
    12ec:	bne	1318 <coda_type_set_name+0x12c>
    12f0:	mvn	r0, #0
    12f4:	movw	r1, #0
    12f8:	movt	r1, #0
    12fc:	movw	r2, #0
    1300:	movt	r2, #0
    1304:	movw	r3, #781	; 0x30d
    1308:	bl	0 <coda_set_error>
    130c:	mvn	r0, #0
    1310:	str	r0, [fp, #-4]
    1314:	b	132c <coda_type_set_name+0x140>
    1318:	ldr	r0, [sp]
    131c:	ldr	r1, [sp, #8]
    1320:	str	r0, [r1, #16]
    1324:	movw	r0, #0
    1328:	str	r0, [fp, #-4]
    132c:	ldr	r0, [fp, #-4]
    1330:	mov	sp, fp
    1334:	pop	{fp, pc}
    1338:	.word	0xfffffe70

0000133c <coda_type_set_description>:
    133c:	push	{fp, lr}
    1340:	mov	fp, sp
    1344:	sub	sp, sp, #16
    1348:	str	r0, [sp, #8]
    134c:	str	r1, [sp, #4]
    1350:	movw	r0, #0
    1354:	str	r0, [sp]
    1358:	ldr	r1, [sp, #8]
    135c:	cmp	r1, r0
    1360:	bne	138c <coda_type_set_description+0x50>
    1364:	mvn	r0, #99	; 0x63
    1368:	movw	r1, #0
    136c:	movt	r1, #0
    1370:	movw	r2, #0
    1374:	movt	r2, #0
    1378:	movw	r3, #795	; 0x31b
    137c:	bl	0 <coda_set_error>
    1380:	mvn	r0, #0
    1384:	str	r0, [fp, #-4]
    1388:	b	1460 <coda_type_set_description+0x124>
    138c:	ldr	r0, [sp, #4]
    1390:	movw	r1, #0
    1394:	cmp	r0, r1
    1398:	bne	13c4 <coda_type_set_description+0x88>
    139c:	mvn	r0, #99	; 0x63
    13a0:	movw	r1, #0
    13a4:	movt	r1, #0
    13a8:	movw	r2, #0
    13ac:	movt	r2, #0
    13b0:	movw	r3, #800	; 0x320
    13b4:	bl	0 <coda_set_error>
    13b8:	mvn	r0, #0
    13bc:	str	r0, [fp, #-4]
    13c0:	b	1460 <coda_type_set_description+0x124>
    13c4:	ldr	r0, [sp, #8]
    13c8:	ldr	r0, [r0, #20]
    13cc:	movw	r1, #0
    13d0:	cmp	r0, r1
    13d4:	beq	13f4 <coda_type_set_description+0xb8>
    13d8:	ldr	r0, [pc, #140]	; 146c <coda_type_set_description+0x130>
    13dc:	movw	r1, #0
    13e0:	movt	r1, #0
    13e4:	bl	0 <coda_set_error>
    13e8:	mvn	r0, #0
    13ec:	str	r0, [fp, #-4]
    13f0:	b	1460 <coda_type_set_description+0x124>
    13f4:	ldr	r0, [sp, #4]
    13f8:	movw	r1, #0
    13fc:	cmp	r0, r1
    1400:	beq	144c <coda_type_set_description+0x110>
    1404:	ldr	r0, [sp, #4]
    1408:	bl	0 <strdup>
    140c:	str	r0, [sp]
    1410:	ldr	r0, [sp]
    1414:	movw	r1, #0
    1418:	cmp	r0, r1
    141c:	bne	1448 <coda_type_set_description+0x10c>
    1420:	mvn	r0, #0
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	movw	r2, #0
    1430:	movt	r2, #0
    1434:	movw	r3, #814	; 0x32e
    1438:	bl	0 <coda_set_error>
    143c:	mvn	r0, #0
    1440:	str	r0, [fp, #-4]
    1444:	b	1460 <coda_type_set_description+0x124>
    1448:	b	144c <coda_type_set_description+0x110>
    144c:	ldr	r0, [sp]
    1450:	ldr	r1, [sp, #8]
    1454:	str	r0, [r1, #20]
    1458:	movw	r0, #0
    145c:	str	r0, [fp, #-4]
    1460:	ldr	r0, [fp, #-4]
    1464:	mov	sp, fp
    1468:	pop	{fp, pc}
    146c:	.word	0xfffffe70

00001470 <coda_type_set_bit_size>:
    1470:	push	{fp, lr}
    1474:	mov	fp, sp
    1478:	sub	sp, sp, #64	; 0x40
    147c:	str	r0, [fp, #-8]
    1480:	str	r3, [fp, #-12]
    1484:	str	r2, [fp, #-16]
    1488:	ldr	r0, [fp, #-8]
    148c:	movw	r1, #0
    1490:	cmp	r0, r1
    1494:	bne	14c0 <coda_type_set_bit_size+0x50>
    1498:	mvn	r0, #99	; 0x63
    149c:	movw	r1, #0
    14a0:	movt	r1, #0
    14a4:	movw	r2, #0
    14a8:	movt	r2, #0
    14ac:	movw	r3, #827	; 0x33b
    14b0:	bl	0 <coda_set_error>
    14b4:	mvn	r0, #0
    14b8:	str	r0, [fp, #-4]
    14bc:	b	1648 <coda_type_set_bit_size+0x1d8>
    14c0:	ldr	r0, [fp, #-8]
    14c4:	ldr	r0, [r0, #28]
    14c8:	cmp	r0, #0
    14cc:	bmi	14f0 <coda_type_set_bit_size+0x80>
    14d0:	b	14d4 <coda_type_set_bit_size+0x64>
    14d4:	ldr	r0, [pc, #376]	; 1654 <coda_type_set_bit_size+0x1e4>
    14d8:	movw	r1, #0
    14dc:	movt	r1, #0
    14e0:	bl	0 <coda_set_error>
    14e4:	mvn	r0, #0
    14e8:	str	r0, [fp, #-4]
    14ec:	b	1648 <coda_type_set_bit_size+0x1d8>
    14f0:	ldr	r0, [fp, #-8]
    14f4:	ldr	r0, [r0, #32]
    14f8:	movw	r1, #0
    14fc:	cmp	r0, r1
    1500:	beq	1520 <coda_type_set_bit_size+0xb0>
    1504:	ldr	r0, [pc, #328]	; 1654 <coda_type_set_bit_size+0x1e4>
    1508:	movw	r1, #0
    150c:	movt	r1, #0
    1510:	bl	0 <coda_set_error>
    1514:	mvn	r0, #0
    1518:	str	r0, [fp, #-4]
    151c:	b	1648 <coda_type_set_bit_size+0x1d8>
    1520:	ldr	r0, [fp, #-12]
    1524:	cmn	r0, #1
    1528:	bgt	1560 <coda_type_set_bit_size+0xf0>
    152c:	b	1530 <coda_type_set_bit_size+0xc0>
    1530:	add	r2, sp, #27
    1534:	ldr	r0, [fp, #-16]
    1538:	ldr	r1, [fp, #-12]
    153c:	bl	0 <coda_str64>
    1540:	ldr	r0, [pc, #268]	; 1654 <coda_type_set_bit_size+0x1e4>
    1544:	add	r2, sp, #27
    1548:	movw	r1, #0
    154c:	movt	r1, #0
    1550:	bl	0 <coda_set_error>
    1554:	mvn	r0, #0
    1558:	str	r0, [fp, #-4]
    155c:	b	1648 <coda_type_set_bit_size+0x1d8>
    1560:	ldr	r0, [fp, #-8]
    1564:	ldr	r0, [r0]
    1568:	cmp	r0, #0
    156c:	bne	15b4 <coda_type_set_bit_size+0x144>
    1570:	ldrb	r0, [fp, #-16]
    1574:	tst	r0, #7
    1578:	beq	15b0 <coda_type_set_bit_size+0x140>
    157c:	b	1580 <coda_type_set_bit_size+0x110>
    1580:	add	r2, sp, #6
    1584:	ldr	r0, [fp, #-16]
    1588:	ldr	r1, [fp, #-12]
    158c:	bl	0 <coda_str64>
    1590:	ldr	r0, [pc, #188]	; 1654 <coda_type_set_bit_size+0x1e4>
    1594:	add	r2, sp, #6
    1598:	movw	r1, #0
    159c:	movt	r1, #0
    15a0:	bl	0 <coda_set_error>
    15a4:	mvn	r0, #0
    15a8:	str	r0, [fp, #-4]
    15ac:	b	1648 <coda_type_set_bit_size+0x1d8>
    15b0:	b	15b4 <coda_type_set_bit_size+0x144>
    15b4:	ldr	r0, [fp, #-8]
    15b8:	ldr	r0, [r0, #8]
    15bc:	cmp	r0, #2
    15c0:	str	r0, [sp]
    15c4:	bcc	1628 <coda_type_set_bit_size+0x1b8>
    15c8:	b	15cc <coda_type_set_bit_size+0x15c>
    15cc:	ldr	r0, [sp]
    15d0:	sub	r1, r0, #2
    15d4:	cmp	r1, #2
    15d8:	bcc	15f4 <coda_type_set_bit_size+0x184>
    15dc:	b	15e0 <coda_type_set_bit_size+0x170>
    15e0:	ldr	r0, [sp]
    15e4:	sub	r1, r0, #4
    15e8:	cmp	r1, #3
    15ec:	bcc	1628 <coda_type_set_bit_size+0x1b8>
    15f0:	b	162c <coda_type_set_bit_size+0x1bc>
    15f4:	ldr	r0, [fp, #-8]
    15f8:	ldr	r0, [r0, #52]	; 0x34
    15fc:	movw	r1, #0
    1600:	cmp	r0, r1
    1604:	beq	1624 <coda_type_set_bit_size+0x1b4>
    1608:	ldr	r0, [fp, #-8]
    160c:	ldr	r1, [r0, #52]	; 0x34
    1610:	ldr	r2, [fp, #-16]
    1614:	ldr	r3, [fp, #-12]
    1618:	bl	1658 <mapping_type_set_bit_size>
    161c:	str	r0, [fp, #-4]
    1620:	b	1648 <coda_type_set_bit_size+0x1d8>
    1624:	b	162c <coda_type_set_bit_size+0x1bc>
    1628:	b	162c <coda_type_set_bit_size+0x1bc>
    162c:	ldr	r0, [fp, #-16]
    1630:	ldr	r1, [fp, #-12]
    1634:	ldr	r2, [fp, #-8]
    1638:	str	r1, [r2, #28]
    163c:	str	r0, [r2, #24]
    1640:	movw	r0, #0
    1644:	str	r0, [fp, #-4]
    1648:	ldr	r0, [fp, #-4]
    164c:	mov	sp, fp
    1650:	pop	{fp, pc}
    1654:	.word	0xfffffe70

00001658 <mapping_type_set_bit_size>:
    1658:	push	{fp, lr}
    165c:	mov	fp, sp
    1660:	sub	sp, sp, #32
    1664:	str	r0, [fp, #-8]
    1668:	str	r1, [fp, #-12]
    166c:	str	r3, [sp, #12]
    1670:	str	r2, [sp, #8]
    1674:	ldr	r0, [fp, #-12]
    1678:	movw	r1, #0
    167c:	cmp	r0, r1
    1680:	beq	1688 <mapping_type_set_bit_size+0x30>
    1684:	b	16a8 <mapping_type_set_bit_size+0x50>
    1688:	movw	r0, #0
    168c:	movt	r0, #0
    1690:	movw	r1, #0
    1694:	movt	r1, #0
    1698:	movw	r2, #401	; 0x191
    169c:	movw	r3, #0
    16a0:	movt	r3, #0
    16a4:	bl	0 <__assert_fail>
    16a8:	ldr	r0, [sp, #12]
    16ac:	cmp	r0, #0
    16b0:	bmi	16bc <mapping_type_set_bit_size+0x64>
    16b4:	b	16b8 <mapping_type_set_bit_size+0x60>
    16b8:	b	16dc <mapping_type_set_bit_size+0x84>
    16bc:	movw	r0, #0
    16c0:	movt	r0, #0
    16c4:	movw	r1, #0
    16c8:	movt	r1, #0
    16cc:	movw	r2, #402	; 0x192
    16d0:	movw	r3, #0
    16d4:	movt	r3, #0
    16d8:	bl	0 <__assert_fail>
    16dc:	ldr	r0, [fp, #-12]
    16e0:	ldr	r0, [r0, #4]
    16e4:	cmp	r0, #0
    16e8:	bmi	170c <mapping_type_set_bit_size+0xb4>
    16ec:	b	16f0 <mapping_type_set_bit_size+0x98>
    16f0:	ldr	r0, [pc, #212]	; 17cc <mapping_type_set_bit_size+0x174>
    16f4:	movw	r1, #0
    16f8:	movt	r1, #0
    16fc:	bl	0 <coda_set_error>
    1700:	mvn	r0, #0
    1704:	str	r0, [fp, #-4]
    1708:	b	17c0 <mapping_type_set_bit_size+0x168>
    170c:	ldr	r0, [sp, #8]
    1710:	ldr	r1, [sp, #12]
    1714:	ldr	r2, [fp, #-12]
    1718:	str	r1, [r2, #4]
    171c:	str	r0, [r2]
    1720:	ldr	r0, [sp, #8]
    1724:	ldr	r1, [sp, #12]
    1728:	ldr	r2, [fp, #-8]
    172c:	str	r1, [r2, #28]
    1730:	str	r0, [r2, #24]
    1734:	movw	r0, #0
    1738:	str	r0, [sp, #4]
    173c:	ldr	r0, [sp, #4]
    1740:	ldr	r1, [fp, #-12]
    1744:	ldr	r1, [r1, #8]
    1748:	cmp	r0, r1
    174c:	bge	17b8 <mapping_type_set_bit_size+0x160>
    1750:	ldr	r0, [fp, #-12]
    1754:	ldr	r0, [r0, #12]
    1758:	ldr	r1, [sp, #4]
    175c:	ldr	r0, [r0, r1, lsl #2]
    1760:	ldr	r0, [r0]
    1764:	asr	r1, r0, #31
    1768:	ldr	r2, [sp, #8]
    176c:	ldr	r3, [sp, #12]
    1770:	lsr	r2, r2, #3
    1774:	orr	r2, r2, r3, lsl #29
    1778:	eor	r0, r0, r2
    177c:	eor	r1, r1, r3, asr #3
    1780:	orr	r0, r0, r1
    1784:	cmp	r0, #0
    1788:	beq	17a4 <mapping_type_set_bit_size+0x14c>
    178c:	b	1790 <mapping_type_set_bit_size+0x138>
    1790:	ldr	r0, [fp, #-8]
    1794:	mvn	r1, #0
    1798:	str	r1, [r0, #28]
    179c:	str	r1, [r0, #24]
    17a0:	b	17b8 <mapping_type_set_bit_size+0x160>
    17a4:	b	17a8 <mapping_type_set_bit_size+0x150>
    17a8:	ldr	r0, [sp, #4]
    17ac:	add	r0, r0, #1
    17b0:	str	r0, [sp, #4]
    17b4:	b	173c <mapping_type_set_bit_size+0xe4>
    17b8:	movw	r0, #0
    17bc:	str	r0, [fp, #-4]
    17c0:	ldr	r0, [fp, #-4]
    17c4:	mov	sp, fp
    17c8:	pop	{fp, pc}
    17cc:	.word	0xfffffe70

000017d0 <coda_type_set_byte_size>:
    17d0:	push	{fp, lr}
    17d4:	mov	fp, sp
    17d8:	sub	sp, sp, #16
    17dc:	str	r0, [fp, #-4]
    17e0:	str	r3, [sp, #4]
    17e4:	str	r2, [sp]
    17e8:	ldr	r0, [fp, #-4]
    17ec:	ldr	r1, [sp]
    17f0:	ldr	r2, [sp, #4]
    17f4:	lsl	r2, r2, #3
    17f8:	orr	r3, r2, r1, lsr #29
    17fc:	lsl	r2, r1, #3
    1800:	bl	1470 <coda_type_set_bit_size>
    1804:	mov	sp, fp
    1808:	pop	{fp, pc}

0000180c <coda_type_set_bit_size_expression>:
    180c:	push	{fp, lr}
    1810:	mov	fp, sp
    1814:	sub	sp, sp, #16
    1818:	str	r0, [sp, #8]
    181c:	str	r1, [sp, #4]
    1820:	ldr	r0, [sp, #8]
    1824:	movw	r1, #0
    1828:	cmp	r0, r1
    182c:	bne	1858 <coda_type_set_bit_size_expression+0x4c>
    1830:	mvn	r0, #99	; 0x63
    1834:	movw	r1, #0
    1838:	movt	r1, #0
    183c:	movw	r2, #0
    1840:	movt	r2, #0
    1844:	movw	r3, #892	; 0x37c
    1848:	bl	0 <coda_set_error>
    184c:	mvn	r0, #0
    1850:	str	r0, [fp, #-4]
    1854:	b	1974 <coda_type_set_bit_size_expression+0x168>
    1858:	ldr	r0, [sp, #4]
    185c:	movw	r1, #0
    1860:	cmp	r0, r1
    1864:	bne	1890 <coda_type_set_bit_size_expression+0x84>
    1868:	mvn	r0, #99	; 0x63
    186c:	movw	r1, #0
    1870:	movt	r1, #0
    1874:	movw	r2, #0
    1878:	movt	r2, #0
    187c:	movw	r3, #897	; 0x381
    1880:	bl	0 <coda_set_error>
    1884:	mvn	r0, #0
    1888:	str	r0, [fp, #-4]
    188c:	b	1974 <coda_type_set_bit_size_expression+0x168>
    1890:	ldr	r0, [sp, #8]
    1894:	ldr	r0, [r0, #32]
    1898:	movw	r1, #0
    189c:	cmp	r0, r1
    18a0:	beq	18c0 <coda_type_set_bit_size_expression+0xb4>
    18a4:	ldr	r0, [pc, #212]	; 1980 <coda_type_set_bit_size_expression+0x174>
    18a8:	movw	r1, #0
    18ac:	movt	r1, #0
    18b0:	bl	0 <coda_set_error>
    18b4:	mvn	r0, #0
    18b8:	str	r0, [fp, #-4]
    18bc:	b	1974 <coda_type_set_bit_size_expression+0x168>
    18c0:	ldr	r0, [sp, #8]
    18c4:	ldr	r0, [r0, #8]
    18c8:	cmp	r0, #0
    18cc:	beq	18e0 <coda_type_set_bit_size_expression+0xd4>
    18d0:	ldr	r0, [sp, #8]
    18d4:	ldr	r0, [r0, #8]
    18d8:	cmp	r0, #1
    18dc:	bne	191c <coda_type_set_bit_size_expression+0x110>
    18e0:	ldr	r0, [sp, #8]
    18e4:	ldr	r1, [r0, #24]
    18e8:	ldr	r0, [r0, #28]
    18ec:	subs	r1, r1, #1
    18f0:	sbcs	r0, r0, #0
    18f4:	blt	1918 <coda_type_set_bit_size_expression+0x10c>
    18f8:	b	18fc <coda_type_set_bit_size_expression+0xf0>
    18fc:	ldr	r0, [pc, #124]	; 1980 <coda_type_set_bit_size_expression+0x174>
    1900:	movw	r1, #0
    1904:	movt	r1, #0
    1908:	bl	0 <coda_set_error>
    190c:	mvn	r0, #0
    1910:	str	r0, [fp, #-4]
    1914:	b	1974 <coda_type_set_bit_size_expression+0x168>
    1918:	b	1950 <coda_type_set_bit_size_expression+0x144>
    191c:	ldr	r0, [sp, #8]
    1920:	ldr	r0, [r0, #28]
    1924:	cmp	r0, #0
    1928:	bmi	194c <coda_type_set_bit_size_expression+0x140>
    192c:	b	1930 <coda_type_set_bit_size_expression+0x124>
    1930:	ldr	r0, [pc, #72]	; 1980 <coda_type_set_bit_size_expression+0x174>
    1934:	movw	r1, #0
    1938:	movt	r1, #0
    193c:	bl	0 <coda_set_error>
    1940:	mvn	r0, #0
    1944:	str	r0, [fp, #-4]
    1948:	b	1974 <coda_type_set_bit_size_expression+0x168>
    194c:	b	1950 <coda_type_set_bit_size_expression+0x144>
    1950:	ldr	r0, [sp, #4]
    1954:	ldr	r1, [sp, #8]
    1958:	str	r0, [r1, #32]
    195c:	ldr	r0, [sp, #8]
    1960:	mvn	r1, #0
    1964:	str	r1, [r0, #28]
    1968:	str	r1, [r0, #24]
    196c:	movw	r0, #0
    1970:	str	r0, [fp, #-4]
    1974:	ldr	r0, [fp, #-4]
    1978:	mov	sp, fp
    197c:	pop	{fp, pc}
    1980:	.word	0xfffffe70

00001984 <coda_type_set_byte_size_expression>:
    1984:	push	{fp, lr}
    1988:	mov	fp, sp
    198c:	sub	sp, sp, #16
    1990:	str	r0, [sp, #8]
    1994:	str	r1, [sp, #4]
    1998:	ldr	r0, [sp, #8]
    199c:	movw	r1, #0
    19a0:	cmp	r0, r1
    19a4:	bne	19d0 <coda_type_set_byte_size_expression+0x4c>
    19a8:	mvn	r0, #99	; 0x63
    19ac:	movw	r1, #0
    19b0:	movt	r1, #0
    19b4:	movw	r2, #0
    19b8:	movt	r2, #0
    19bc:	movw	r3, #931	; 0x3a3
    19c0:	bl	0 <coda_set_error>
    19c4:	mvn	r0, #0
    19c8:	str	r0, [fp, #-4]
    19cc:	b	1af0 <coda_type_set_byte_size_expression+0x16c>
    19d0:	ldr	r0, [sp, #4]
    19d4:	movw	r1, #0
    19d8:	cmp	r0, r1
    19dc:	bne	1a08 <coda_type_set_byte_size_expression+0x84>
    19e0:	mvn	r0, #99	; 0x63
    19e4:	movw	r1, #0
    19e8:	movt	r1, #0
    19ec:	movw	r2, #0
    19f0:	movt	r2, #0
    19f4:	movw	r3, #936	; 0x3a8
    19f8:	bl	0 <coda_set_error>
    19fc:	mvn	r0, #0
    1a00:	str	r0, [fp, #-4]
    1a04:	b	1af0 <coda_type_set_byte_size_expression+0x16c>
    1a08:	ldr	r0, [sp, #8]
    1a0c:	ldr	r0, [r0, #32]
    1a10:	movw	r1, #0
    1a14:	cmp	r0, r1
    1a18:	beq	1a38 <coda_type_set_byte_size_expression+0xb4>
    1a1c:	ldr	r0, [pc, #216]	; 1afc <coda_type_set_byte_size_expression+0x178>
    1a20:	movw	r1, #0
    1a24:	movt	r1, #0
    1a28:	bl	0 <coda_set_error>
    1a2c:	mvn	r0, #0
    1a30:	str	r0, [fp, #-4]
    1a34:	b	1af0 <coda_type_set_byte_size_expression+0x16c>
    1a38:	ldr	r0, [sp, #8]
    1a3c:	ldr	r0, [r0, #8]
    1a40:	cmp	r0, #0
    1a44:	beq	1a58 <coda_type_set_byte_size_expression+0xd4>
    1a48:	ldr	r0, [sp, #8]
    1a4c:	ldr	r0, [r0, #8]
    1a50:	cmp	r0, #1
    1a54:	bne	1a94 <coda_type_set_byte_size_expression+0x110>
    1a58:	ldr	r0, [sp, #8]
    1a5c:	ldr	r1, [r0, #24]
    1a60:	ldr	r0, [r0, #28]
    1a64:	subs	r1, r1, #1
    1a68:	sbcs	r0, r0, #0
    1a6c:	blt	1a90 <coda_type_set_byte_size_expression+0x10c>
    1a70:	b	1a74 <coda_type_set_byte_size_expression+0xf0>
    1a74:	ldr	r0, [pc, #128]	; 1afc <coda_type_set_byte_size_expression+0x178>
    1a78:	movw	r1, #0
    1a7c:	movt	r1, #0
    1a80:	bl	0 <coda_set_error>
    1a84:	mvn	r0, #0
    1a88:	str	r0, [fp, #-4]
    1a8c:	b	1af0 <coda_type_set_byte_size_expression+0x16c>
    1a90:	b	1ac8 <coda_type_set_byte_size_expression+0x144>
    1a94:	ldr	r0, [sp, #8]
    1a98:	ldr	r0, [r0, #28]
    1a9c:	cmp	r0, #0
    1aa0:	bmi	1ac4 <coda_type_set_byte_size_expression+0x140>
    1aa4:	b	1aa8 <coda_type_set_byte_size_expression+0x124>
    1aa8:	ldr	r0, [pc, #76]	; 1afc <coda_type_set_byte_size_expression+0x178>
    1aac:	movw	r1, #0
    1ab0:	movt	r1, #0
    1ab4:	bl	0 <coda_set_error>
    1ab8:	mvn	r0, #0
    1abc:	str	r0, [fp, #-4]
    1ac0:	b	1af0 <coda_type_set_byte_size_expression+0x16c>
    1ac4:	b	1ac8 <coda_type_set_byte_size_expression+0x144>
    1ac8:	ldr	r0, [sp, #4]
    1acc:	ldr	r1, [sp, #8]
    1ad0:	str	r0, [r1, #32]
    1ad4:	ldr	r0, [sp, #8]
    1ad8:	mvn	r1, #0
    1adc:	str	r1, [r0, #28]
    1ae0:	mvn	r1, #7
    1ae4:	str	r1, [r0, #24]
    1ae8:	movw	r0, #0
    1aec:	str	r0, [fp, #-4]
    1af0:	ldr	r0, [fp, #-4]
    1af4:	mov	sp, fp
    1af8:	pop	{fp, pc}
    1afc:	.word	0xfffffe70

00001b00 <coda_type_add_attribute>:
    1b00:	push	{fp, lr}
    1b04:	mov	fp, sp
    1b08:	sub	sp, sp, #16
    1b0c:	str	r0, [sp, #8]
    1b10:	str	r1, [sp, #4]
    1b14:	ldr	r0, [sp, #8]
    1b18:	movw	r1, #0
    1b1c:	cmp	r0, r1
    1b20:	bne	1b4c <coda_type_add_attribute+0x4c>
    1b24:	mvn	r0, #99	; 0x63
    1b28:	movw	r1, #0
    1b2c:	movt	r1, #0
    1b30:	movw	r2, #0
    1b34:	movt	r2, #0
    1b38:	movw	r3, #970	; 0x3ca
    1b3c:	bl	0 <coda_set_error>
    1b40:	mvn	r0, #0
    1b44:	str	r0, [fp, #-4]
    1b48:	b	1be4 <coda_type_add_attribute+0xe4>
    1b4c:	ldr	r0, [sp, #4]
    1b50:	movw	r1, #0
    1b54:	cmp	r0, r1
    1b58:	bne	1b84 <coda_type_add_attribute+0x84>
    1b5c:	mvn	r0, #99	; 0x63
    1b60:	movw	r1, #0
    1b64:	movt	r1, #0
    1b68:	movw	r2, #0
    1b6c:	movt	r2, #0
    1b70:	movw	r3, #975	; 0x3cf
    1b74:	bl	0 <coda_set_error>
    1b78:	mvn	r0, #0
    1b7c:	str	r0, [fp, #-4]
    1b80:	b	1be4 <coda_type_add_attribute+0xe4>
    1b84:	ldr	r0, [sp, #8]
    1b88:	ldr	r0, [r0, #36]	; 0x24
    1b8c:	movw	r1, #0
    1b90:	cmp	r0, r1
    1b94:	bne	1bd0 <coda_type_add_attribute+0xd0>
    1b98:	ldr	r0, [sp, #8]
    1b9c:	ldr	r0, [r0]
    1ba0:	bl	1bf0 <coda_type_record_new>
    1ba4:	ldr	r1, [sp, #8]
    1ba8:	str	r0, [r1, #36]	; 0x24
    1bac:	ldr	r0, [sp, #8]
    1bb0:	ldr	r0, [r0, #36]	; 0x24
    1bb4:	movw	r1, #0
    1bb8:	cmp	r0, r1
    1bbc:	bne	1bcc <coda_type_add_attribute+0xcc>
    1bc0:	mvn	r0, #0
    1bc4:	str	r0, [fp, #-4]
    1bc8:	b	1be4 <coda_type_add_attribute+0xe4>
    1bcc:	b	1bd0 <coda_type_add_attribute+0xd0>
    1bd0:	ldr	r0, [sp, #8]
    1bd4:	ldr	r0, [r0, #36]	; 0x24
    1bd8:	ldr	r1, [sp, #4]
    1bdc:	bl	1dd8 <coda_type_record_add_field>
    1be0:	str	r0, [fp, #-4]
    1be4:	ldr	r0, [fp, #-4]
    1be8:	mov	sp, fp
    1bec:	pop	{fp, pc}

00001bf0 <coda_type_record_new>:
    1bf0:	push	{fp, lr}
    1bf4:	mov	fp, sp
    1bf8:	sub	sp, sp, #16
    1bfc:	str	r0, [sp, #8]
    1c00:	movw	r0, #72	; 0x48
    1c04:	bl	0 <malloc>
    1c08:	str	r0, [sp, #4]
    1c0c:	ldr	r0, [sp, #4]
    1c10:	movw	r1, #0
    1c14:	cmp	r0, r1
    1c18:	bne	1c4c <coda_type_record_new+0x5c>
    1c1c:	mvn	r0, #0
    1c20:	movw	r1, #0
    1c24:	movt	r1, #0
    1c28:	movw	r2, #72	; 0x48
    1c2c:	movw	r3, #0
    1c30:	movt	r3, #0
    1c34:	movw	ip, #1205	; 0x4b5
    1c38:	str	ip, [sp]
    1c3c:	bl	0 <coda_set_error>
    1c40:	movw	r0, #0
    1c44:	str	r0, [fp, #-4]
    1c48:	b	1dcc <coda_type_record_new+0x1dc>
    1c4c:	ldr	r0, [sp, #8]
    1c50:	ldr	r1, [sp, #4]
    1c54:	str	r0, [r1]
    1c58:	ldr	r0, [sp, #4]
    1c5c:	mov	r1, #0
    1c60:	str	r1, [r0, #4]
    1c64:	ldr	r0, [sp, #4]
    1c68:	str	r1, [r0, #8]
    1c6c:	ldr	r0, [sp, #4]
    1c70:	mvn	r2, #0
    1c74:	str	r2, [r0, #12]
    1c78:	ldr	r0, [sp, #4]
    1c7c:	str	r1, [r0, #16]
    1c80:	ldr	r0, [sp, #4]
    1c84:	str	r1, [r0, #20]
    1c88:	ldr	r0, [sp, #4]
    1c8c:	str	r2, [r0, #28]
    1c90:	str	r2, [r0, #24]
    1c94:	ldr	r0, [sp, #4]
    1c98:	movw	r1, #0
    1c9c:	str	r1, [r0, #32]
    1ca0:	ldr	r0, [sp, #4]
    1ca4:	str	r1, [r0, #36]	; 0x24
    1ca8:	ldr	r0, [sp, #4]
    1cac:	str	r1, [r0, #40]	; 0x28
    1cb0:	ldr	r0, [sp, #4]
    1cb4:	str	r1, [r0, #44]	; 0x2c
    1cb8:	ldr	r0, [sp, #4]
    1cbc:	str	r1, [r0, #48]	; 0x30
    1cc0:	ldr	r0, [sp, #4]
    1cc4:	str	r1, [r0, #52]	; 0x34
    1cc8:	ldr	r0, [sp, #4]
    1ccc:	str	r1, [r0, #56]	; 0x38
    1cd0:	ldr	r0, [sp, #4]
    1cd4:	str	r1, [r0, #60]	; 0x3c
    1cd8:	ldr	r0, [sp, #4]
    1cdc:	str	r1, [r0, #64]	; 0x40
    1ce0:	ldr	r0, [sp, #4]
    1ce4:	str	r1, [r0, #68]	; 0x44
    1ce8:	ldr	r0, [sp, #8]
    1cec:	cmp	r0, #0
    1cf0:	beq	1d00 <coda_type_record_new+0x110>
    1cf4:	ldr	r0, [sp, #8]
    1cf8:	cmp	r0, #1
    1cfc:	bne	1d1c <coda_type_record_new+0x12c>
    1d00:	ldr	r0, [sp, #4]
    1d04:	mov	r1, #12
    1d08:	str	r1, [r0, #12]
    1d0c:	ldr	r0, [sp, #4]
    1d10:	mov	r1, #0
    1d14:	str	r1, [r0, #28]
    1d18:	str	r1, [r0, #24]
    1d1c:	movw	r0, #0
    1d20:	bl	0 <coda_hashtable_new>
    1d24:	ldr	r1, [sp, #4]
    1d28:	str	r0, [r1, #40]	; 0x28
    1d2c:	ldr	r0, [sp, #4]
    1d30:	ldr	r0, [r0, #40]	; 0x28
    1d34:	movw	r1, #0
    1d38:	cmp	r0, r1
    1d3c:	bne	1d70 <coda_type_record_new+0x180>
    1d40:	mvn	r0, #0
    1d44:	movw	r1, #0
    1d48:	movt	r1, #0
    1d4c:	movw	r2, #0
    1d50:	movt	r2, #0
    1d54:	movw	r3, #1236	; 0x4d4
    1d58:	bl	0 <coda_set_error>
    1d5c:	ldr	r0, [sp, #4]
    1d60:	bl	74c <record_delete>
    1d64:	movw	r0, #0
    1d68:	str	r0, [fp, #-4]
    1d6c:	b	1dcc <coda_type_record_new+0x1dc>
    1d70:	movw	r0, #1
    1d74:	bl	0 <coda_hashtable_new>
    1d78:	ldr	r1, [sp, #4]
    1d7c:	str	r0, [r1, #44]	; 0x2c
    1d80:	ldr	r0, [sp, #4]
    1d84:	ldr	r0, [r0, #44]	; 0x2c
    1d88:	movw	r1, #0
    1d8c:	cmp	r0, r1
    1d90:	bne	1dc4 <coda_type_record_new+0x1d4>
    1d94:	mvn	r0, #0
    1d98:	movw	r1, #0
    1d9c:	movt	r1, #0
    1da0:	movw	r2, #0
    1da4:	movt	r2, #0
    1da8:	movw	r3, #1245	; 0x4dd
    1dac:	bl	0 <coda_set_error>
    1db0:	ldr	r0, [sp, #4]
    1db4:	bl	74c <record_delete>
    1db8:	movw	r0, #0
    1dbc:	str	r0, [fp, #-4]
    1dc0:	b	1dcc <coda_type_record_new+0x1dc>
    1dc4:	ldr	r0, [sp, #4]
    1dc8:	str	r0, [fp, #-4]
    1dcc:	ldr	r0, [fp, #-4]
    1dd0:	mov	sp, fp
    1dd4:	pop	{fp, pc}

00001dd8 <coda_type_record_add_field>:
    1dd8:	push	{fp, lr}
    1ddc:	mov	fp, sp
    1de0:	sub	sp, sp, #16
    1de4:	str	r0, [sp, #8]
    1de8:	str	r1, [sp, #4]
    1dec:	ldr	r0, [sp, #8]
    1df0:	movw	r1, #0
    1df4:	cmp	r0, r1
    1df8:	bne	1e24 <coda_type_record_add_field+0x4c>
    1dfc:	mvn	r0, #99	; 0x63
    1e00:	movw	r1, #0
    1e04:	movt	r1, #0
    1e08:	movw	r2, #0
    1e0c:	movt	r2, #0
    1e10:	movw	r3, #1424	; 0x590
    1e14:	bl	0 <coda_set_error>
    1e18:	mvn	r0, #0
    1e1c:	str	r0, [fp, #-4]
    1e20:	b	1e3c <coda_type_record_add_field+0x64>
    1e24:	ldr	r0, [sp, #8]
    1e28:	ldr	r1, [sp, #8]
    1e2c:	ldr	r1, [r1, #48]	; 0x30
    1e30:	ldr	r2, [sp, #4]
    1e34:	bl	28c4 <coda_type_record_insert_field>
    1e38:	str	r0, [fp, #-4]
    1e3c:	ldr	r0, [fp, #-4]
    1e40:	mov	sp, fp
    1e44:	pop	{fp, pc}

00001e48 <coda_type_set_attributes>:
    1e48:	push	{fp, lr}
    1e4c:	mov	fp, sp
    1e50:	sub	sp, sp, #16
    1e54:	str	r0, [sp, #8]
    1e58:	str	r1, [sp, #4]
    1e5c:	ldr	r0, [sp, #8]
    1e60:	movw	r1, #0
    1e64:	cmp	r0, r1
    1e68:	bne	1e94 <coda_type_set_attributes+0x4c>
    1e6c:	mvn	r0, #99	; 0x63
    1e70:	movw	r1, #0
    1e74:	movt	r1, #0
    1e78:	movw	r2, #0
    1e7c:	movt	r2, #0
    1e80:	movw	r3, #993	; 0x3e1
    1e84:	bl	0 <coda_set_error>
    1e88:	mvn	r0, #0
    1e8c:	str	r0, [fp, #-4]
    1e90:	b	1f2c <coda_type_set_attributes+0xe4>
    1e94:	ldr	r0, [sp, #4]
    1e98:	movw	r1, #0
    1e9c:	cmp	r0, r1
    1ea0:	bne	1ecc <coda_type_set_attributes+0x84>
    1ea4:	mvn	r0, #99	; 0x63
    1ea8:	movw	r1, #0
    1eac:	movt	r1, #0
    1eb0:	movw	r2, #0
    1eb4:	movt	r2, #0
    1eb8:	movw	r3, #998	; 0x3e6
    1ebc:	bl	0 <coda_set_error>
    1ec0:	mvn	r0, #0
    1ec4:	str	r0, [fp, #-4]
    1ec8:	b	1f2c <coda_type_set_attributes+0xe4>
    1ecc:	ldr	r0, [sp, #8]
    1ed0:	ldr	r0, [r0, #36]	; 0x24
    1ed4:	movw	r1, #0
    1ed8:	cmp	r0, r1
    1edc:	beq	1f08 <coda_type_set_attributes+0xc0>
    1ee0:	mvn	r0, #99	; 0x63
    1ee4:	movw	r1, #0
    1ee8:	movt	r1, #0
    1eec:	movw	r2, #0
    1ef0:	movt	r2, #0
    1ef4:	movw	r3, #1003	; 0x3eb
    1ef8:	bl	0 <coda_set_error>
    1efc:	mvn	r0, #0
    1f00:	str	r0, [fp, #-4]
    1f04:	b	1f2c <coda_type_set_attributes+0xe4>
    1f08:	ldr	r0, [sp, #4]
    1f0c:	ldr	r1, [sp, #8]
    1f10:	str	r0, [r1, #36]	; 0x24
    1f14:	ldr	r0, [sp, #4]
    1f18:	ldr	r1, [r0, #4]
    1f1c:	add	r1, r1, #1
    1f20:	str	r1, [r0, #4]
    1f24:	movw	r0, #0
    1f28:	str	r0, [fp, #-4]
    1f2c:	ldr	r0, [fp, #-4]
    1f30:	mov	sp, fp
    1f34:	pop	{fp, pc}

00001f38 <coda_type_record_field_new>:
    1f38:	push	{fp, lr}
    1f3c:	mov	fp, sp
    1f40:	sub	sp, sp, #16
    1f44:	str	r0, [sp, #8]
    1f48:	ldr	r0, [sp, #8]
    1f4c:	movw	r1, #0
    1f50:	cmp	r0, r1
    1f54:	bne	1f80 <coda_type_record_field_new+0x48>
    1f58:	mvn	r0, #99	; 0x63
    1f5c:	movw	r1, #0
    1f60:	movt	r1, #0
    1f64:	movw	r2, #0
    1f68:	movt	r2, #0
    1f6c:	movw	r3, #1017	; 0x3f9
    1f70:	bl	0 <coda_set_error>
    1f74:	movw	r0, #0
    1f78:	str	r0, [fp, #-4]
    1f7c:	b	20a8 <coda_type_record_field_new+0x170>
    1f80:	ldr	r0, [sp, #8]
    1f84:	bl	0 <coda_is_identifier>
    1f88:	cmp	r0, #0
    1f8c:	bne	1fb0 <coda_type_record_field_new+0x78>
    1f90:	ldr	r0, [pc, #284]	; 20b4 <coda_type_record_field_new+0x17c>
    1f94:	ldr	r2, [sp, #8]
    1f98:	movw	r1, #0
    1f9c:	movt	r1, #0
    1fa0:	bl	0 <coda_set_error>
    1fa4:	movw	r0, #0
    1fa8:	str	r0, [fp, #-4]
    1fac:	b	20a8 <coda_type_record_field_new+0x170>
    1fb0:	movw	r0, #40	; 0x28
    1fb4:	bl	0 <malloc>
    1fb8:	str	r0, [sp, #4]
    1fbc:	ldr	r0, [sp, #4]
    1fc0:	movw	r1, #0
    1fc4:	cmp	r0, r1
    1fc8:	bne	1ffc <coda_type_record_field_new+0xc4>
    1fcc:	mvn	r0, #0
    1fd0:	movw	r1, #0
    1fd4:	movt	r1, #0
    1fd8:	movw	r2, #40	; 0x28
    1fdc:	movw	r3, #0
    1fe0:	movt	r3, #0
    1fe4:	movw	ip, #1031	; 0x407
    1fe8:	str	ip, [sp]
    1fec:	bl	0 <coda_set_error>
    1ff0:	movw	r0, #0
    1ff4:	str	r0, [fp, #-4]
    1ff8:	b	20a8 <coda_type_record_field_new+0x170>
    1ffc:	ldr	r0, [sp, #4]
    2000:	mov	r1, #0
    2004:	str	r1, [r0]
    2008:	ldr	r0, [sp, #4]
    200c:	str	r1, [r0, #4]
    2010:	ldr	r0, [sp, #4]
    2014:	str	r1, [r0, #8]
    2018:	ldr	r0, [sp, #4]
    201c:	str	r1, [r0, #12]
    2020:	ldr	r0, [sp, #4]
    2024:	strb	r1, [r0, #16]
    2028:	ldr	r0, [sp, #4]
    202c:	str	r1, [r0, #20]
    2030:	ldr	r0, [sp, #4]
    2034:	mvn	r1, #0
    2038:	str	r1, [r0, #28]
    203c:	str	r1, [r0, #24]
    2040:	ldr	r0, [sp, #4]
    2044:	movw	r1, #0
    2048:	str	r1, [r0, #32]
    204c:	ldr	r0, [sp, #8]
    2050:	bl	0 <strdup>
    2054:	ldr	r1, [sp, #4]
    2058:	str	r0, [r1]
    205c:	ldr	r0, [sp, #4]
    2060:	ldr	r0, [r0]
    2064:	movw	r1, #0
    2068:	cmp	r0, r1
    206c:	bne	20a0 <coda_type_record_field_new+0x168>
    2070:	mvn	r0, #0
    2074:	movw	r1, #0
    2078:	movt	r1, #0
    207c:	movw	r2, #0
    2080:	movt	r2, #0
    2084:	movw	r3, #1047	; 0x417
    2088:	bl	0 <coda_set_error>
    208c:	ldr	r0, [sp, #4]
    2090:	bl	5a0 <coda_type_record_field_delete>
    2094:	movw	r0, #0
    2098:	str	r0, [fp, #-4]
    209c:	b	20a8 <coda_type_record_field_new+0x170>
    20a0:	ldr	r0, [sp, #4]
    20a4:	str	r0, [fp, #-4]
    20a8:	ldr	r0, [fp, #-4]
    20ac:	mov	sp, fp
    20b0:	pop	{fp, pc}
    20b4:	.word	0xfffffe70

000020b8 <coda_type_record_field_set_real_name>:
    20b8:	push	{fp, lr}
    20bc:	mov	fp, sp
    20c0:	sub	sp, sp, #16
    20c4:	str	r0, [sp, #8]
    20c8:	str	r1, [sp, #4]
    20cc:	ldr	r0, [sp, #8]
    20d0:	movw	r1, #0
    20d4:	cmp	r0, r1
    20d8:	bne	2104 <coda_type_record_field_set_real_name+0x4c>
    20dc:	mvn	r0, #99	; 0x63
    20e0:	movw	r1, #0
    20e4:	movt	r1, #0
    20e8:	movw	r2, #0
    20ec:	movt	r2, #0
    20f0:	movw	r3, #1059	; 0x423
    20f4:	bl	0 <coda_set_error>
    20f8:	mvn	r0, #0
    20fc:	str	r0, [fp, #-4]
    2100:	b	21c0 <coda_type_record_field_set_real_name+0x108>
    2104:	ldr	r0, [sp, #4]
    2108:	movw	r1, #0
    210c:	cmp	r0, r1
    2110:	bne	213c <coda_type_record_field_set_real_name+0x84>
    2114:	mvn	r0, #99	; 0x63
    2118:	movw	r1, #0
    211c:	movt	r1, #0
    2120:	movw	r2, #0
    2124:	movt	r2, #0
    2128:	movw	r3, #1064	; 0x428
    212c:	bl	0 <coda_set_error>
    2130:	mvn	r0, #0
    2134:	str	r0, [fp, #-4]
    2138:	b	21c0 <coda_type_record_field_set_real_name+0x108>
    213c:	ldr	r0, [sp, #8]
    2140:	ldr	r0, [r0, #4]
    2144:	movw	r1, #0
    2148:	cmp	r0, r1
    214c:	beq	216c <coda_type_record_field_set_real_name+0xb4>
    2150:	ldr	r0, [pc, #116]	; 21cc <coda_type_record_field_set_real_name+0x114>
    2154:	movw	r1, #0
    2158:	movt	r1, #0
    215c:	bl	0 <coda_set_error>
    2160:	mvn	r0, #0
    2164:	str	r0, [fp, #-4]
    2168:	b	21c0 <coda_type_record_field_set_real_name+0x108>
    216c:	ldr	r0, [sp, #4]
    2170:	bl	0 <strdup>
    2174:	ldr	r1, [sp, #8]
    2178:	str	r0, [r1, #4]
    217c:	ldr	r0, [sp, #8]
    2180:	ldr	r0, [r0, #4]
    2184:	movw	r1, #0
    2188:	cmp	r0, r1
    218c:	bne	21b8 <coda_type_record_field_set_real_name+0x100>
    2190:	mvn	r0, #0
    2194:	movw	r1, #0
    2198:	movt	r1, #0
    219c:	movw	r2, #0
    21a0:	movt	r2, #0
    21a4:	movw	r3, #1076	; 0x434
    21a8:	bl	0 <coda_set_error>
    21ac:	mvn	r0, #0
    21b0:	str	r0, [fp, #-4]
    21b4:	b	21c0 <coda_type_record_field_set_real_name+0x108>
    21b8:	movw	r0, #0
    21bc:	str	r0, [fp, #-4]
    21c0:	ldr	r0, [fp, #-4]
    21c4:	mov	sp, fp
    21c8:	pop	{fp, pc}
    21cc:	.word	0xfffffe70

000021d0 <coda_type_record_field_set_type>:
    21d0:	push	{fp, lr}
    21d4:	mov	fp, sp
    21d8:	sub	sp, sp, #16
    21dc:	str	r0, [sp, #8]
    21e0:	str	r1, [sp, #4]
    21e4:	ldr	r0, [sp, #8]
    21e8:	movw	r1, #0
    21ec:	cmp	r0, r1
    21f0:	bne	221c <coda_type_record_field_set_type+0x4c>
    21f4:	mvn	r0, #99	; 0x63
    21f8:	movw	r1, #0
    21fc:	movt	r1, #0
    2200:	movw	r2, #0
    2204:	movt	r2, #0
    2208:	movw	r3, #1087	; 0x43f
    220c:	bl	0 <coda_set_error>
    2210:	mvn	r0, #0
    2214:	str	r0, [fp, #-4]
    2218:	b	22a8 <coda_type_record_field_set_type+0xd8>
    221c:	ldr	r0, [sp, #4]
    2220:	movw	r1, #0
    2224:	cmp	r0, r1
    2228:	bne	2254 <coda_type_record_field_set_type+0x84>
    222c:	mvn	r0, #99	; 0x63
    2230:	movw	r1, #0
    2234:	movt	r1, #0
    2238:	movw	r2, #0
    223c:	movt	r2, #0
    2240:	movw	r3, #1092	; 0x444
    2244:	bl	0 <coda_set_error>
    2248:	mvn	r0, #0
    224c:	str	r0, [fp, #-4]
    2250:	b	22a8 <coda_type_record_field_set_type+0xd8>
    2254:	ldr	r0, [sp, #8]
    2258:	ldr	r0, [r0, #8]
    225c:	movw	r1, #0
    2260:	cmp	r0, r1
    2264:	beq	2284 <coda_type_record_field_set_type+0xb4>
    2268:	ldr	r0, [pc, #68]	; 22b4 <coda_type_record_field_set_type+0xe4>
    226c:	movw	r1, #0
    2270:	movt	r1, #0
    2274:	bl	0 <coda_set_error>
    2278:	mvn	r0, #0
    227c:	str	r0, [fp, #-4]
    2280:	b	22a8 <coda_type_record_field_set_type+0xd8>
    2284:	ldr	r0, [sp, #4]
    2288:	ldr	r1, [sp, #8]
    228c:	str	r0, [r1, #8]
    2290:	ldr	r0, [sp, #4]
    2294:	ldr	r1, [r0, #4]
    2298:	add	r1, r1, #1
    229c:	str	r1, [r0, #4]
    22a0:	movw	r0, #0
    22a4:	str	r0, [fp, #-4]
    22a8:	ldr	r0, [fp, #-4]
    22ac:	mov	sp, fp
    22b0:	pop	{fp, pc}
    22b4:	.word	0xfffffe70

000022b8 <coda_type_record_field_set_hidden>:
    22b8:	push	{fp, lr}
    22bc:	mov	fp, sp
    22c0:	sub	sp, sp, #8
    22c4:	str	r0, [sp]
    22c8:	ldr	r0, [sp]
    22cc:	movw	r1, #0
    22d0:	cmp	r0, r1
    22d4:	bne	2300 <coda_type_record_field_set_hidden+0x48>
    22d8:	mvn	r0, #99	; 0x63
    22dc:	movw	r1, #0
    22e0:	movt	r1, #0
    22e4:	movw	r2, #0
    22e8:	movt	r2, #0
    22ec:	movw	r3, #1109	; 0x455
    22f0:	bl	0 <coda_set_error>
    22f4:	mvn	r0, #0
    22f8:	str	r0, [sp, #4]
    22fc:	b	2314 <coda_type_record_field_set_hidden+0x5c>
    2300:	ldr	r0, [sp]
    2304:	movw	r1, #1
    2308:	str	r1, [r0, #12]
    230c:	movw	r0, #0
    2310:	str	r0, [sp, #4]
    2314:	ldr	r0, [sp, #4]
    2318:	mov	sp, fp
    231c:	pop	{fp, pc}

00002320 <coda_type_record_field_set_optional>:
    2320:	push	{fp, lr}
    2324:	mov	fp, sp
    2328:	sub	sp, sp, #8
    232c:	str	r0, [sp]
    2330:	ldr	r0, [sp]
    2334:	movw	r1, #0
    2338:	cmp	r0, r1
    233c:	bne	2368 <coda_type_record_field_set_optional+0x48>
    2340:	mvn	r0, #99	; 0x63
    2344:	movw	r1, #0
    2348:	movt	r1, #0
    234c:	movw	r2, #0
    2350:	movt	r2, #0
    2354:	movw	r3, #1120	; 0x460
    2358:	bl	0 <coda_set_error>
    235c:	mvn	r0, #0
    2360:	str	r0, [sp, #4]
    2364:	b	237c <coda_type_record_field_set_optional+0x5c>
    2368:	ldr	r0, [sp]
    236c:	movw	r1, #1
    2370:	strb	r1, [r0, #16]
    2374:	movw	r0, #0
    2378:	str	r0, [sp, #4]
    237c:	ldr	r0, [sp, #4]
    2380:	mov	sp, fp
    2384:	pop	{fp, pc}

00002388 <coda_type_record_field_set_available_expression>:
    2388:	push	{fp, lr}
    238c:	mov	fp, sp
    2390:	sub	sp, sp, #16
    2394:	str	r0, [sp, #8]
    2398:	str	r1, [sp, #4]
    239c:	ldr	r0, [sp, #8]
    23a0:	movw	r1, #0
    23a4:	cmp	r0, r1
    23a8:	bne	23d4 <coda_type_record_field_set_available_expression+0x4c>
    23ac:	mvn	r0, #99	; 0x63
    23b0:	movw	r1, #0
    23b4:	movt	r1, #0
    23b8:	movw	r2, #0
    23bc:	movt	r2, #0
    23c0:	movw	r3, #1131	; 0x46b
    23c4:	bl	0 <coda_set_error>
    23c8:	mvn	r0, #0
    23cc:	str	r0, [fp, #-4]
    23d0:	b	245c <coda_type_record_field_set_available_expression+0xd4>
    23d4:	ldr	r0, [sp, #4]
    23d8:	movw	r1, #0
    23dc:	cmp	r0, r1
    23e0:	bne	240c <coda_type_record_field_set_available_expression+0x84>
    23e4:	mvn	r0, #99	; 0x63
    23e8:	movw	r1, #0
    23ec:	movt	r1, #0
    23f0:	movw	r2, #0
    23f4:	movt	r2, #0
    23f8:	movw	r3, #1136	; 0x470
    23fc:	bl	0 <coda_set_error>
    2400:	mvn	r0, #0
    2404:	str	r0, [fp, #-4]
    2408:	b	245c <coda_type_record_field_set_available_expression+0xd4>
    240c:	ldr	r0, [sp, #8]
    2410:	ldr	r0, [r0, #20]
    2414:	movw	r1, #0
    2418:	cmp	r0, r1
    241c:	beq	243c <coda_type_record_field_set_available_expression+0xb4>
    2420:	ldr	r0, [pc, #64]	; 2468 <coda_type_record_field_set_available_expression+0xe0>
    2424:	movw	r1, #0
    2428:	movt	r1, #0
    242c:	bl	0 <coda_set_error>
    2430:	mvn	r0, #0
    2434:	str	r0, [fp, #-4]
    2438:	b	245c <coda_type_record_field_set_available_expression+0xd4>
    243c:	ldr	r0, [sp, #4]
    2440:	ldr	r1, [sp, #8]
    2444:	str	r0, [r1, #20]
    2448:	ldr	r0, [sp, #8]
    244c:	movw	r1, #1
    2450:	strb	r1, [r0, #16]
    2454:	movw	r0, #0
    2458:	str	r0, [fp, #-4]
    245c:	ldr	r0, [fp, #-4]
    2460:	mov	sp, fp
    2464:	pop	{fp, pc}
    2468:	.word	0xfffffe70

0000246c <coda_type_record_field_set_bit_offset_expression>:
    246c:	push	{fp, lr}
    2470:	mov	fp, sp
    2474:	sub	sp, sp, #16
    2478:	str	r0, [sp, #8]
    247c:	str	r1, [sp, #4]
    2480:	ldr	r0, [sp, #8]
    2484:	movw	r1, #0
    2488:	cmp	r0, r1
    248c:	bne	24b8 <coda_type_record_field_set_bit_offset_expression+0x4c>
    2490:	mvn	r0, #99	; 0x63
    2494:	movw	r1, #0
    2498:	movt	r1, #0
    249c:	movw	r2, #0
    24a0:	movt	r2, #0
    24a4:	movw	r3, #1153	; 0x481
    24a8:	bl	0 <coda_set_error>
    24ac:	mvn	r0, #0
    24b0:	str	r0, [fp, #-4]
    24b4:	b	2594 <coda_type_record_field_set_bit_offset_expression+0x128>
    24b8:	ldr	r0, [sp, #4]
    24bc:	movw	r1, #0
    24c0:	cmp	r0, r1
    24c4:	bne	24f0 <coda_type_record_field_set_bit_offset_expression+0x84>
    24c8:	mvn	r0, #99	; 0x63
    24cc:	movw	r1, #0
    24d0:	movt	r1, #0
    24d4:	movw	r2, #0
    24d8:	movt	r2, #0
    24dc:	movw	r3, #1158	; 0x486
    24e0:	bl	0 <coda_set_error>
    24e4:	mvn	r0, #0
    24e8:	str	r0, [fp, #-4]
    24ec:	b	2594 <coda_type_record_field_set_bit_offset_expression+0x128>
    24f0:	ldr	r0, [sp, #8]
    24f4:	ldr	r0, [r0, #32]
    24f8:	movw	r1, #0
    24fc:	cmp	r0, r1
    2500:	beq	2520 <coda_type_record_field_set_bit_offset_expression+0xb4>
    2504:	ldr	r0, [pc, #148]	; 25a0 <coda_type_record_field_set_bit_offset_expression+0x134>
    2508:	movw	r1, #0
    250c:	movt	r1, #0
    2510:	bl	0 <coda_set_error>
    2514:	mvn	r0, #0
    2518:	str	r0, [fp, #-4]
    251c:	b	2594 <coda_type_record_field_set_bit_offset_expression+0x128>
    2520:	ldr	r0, [sp, #8]
    2524:	ldr	r0, [r0, #8]
    2528:	ldr	r0, [r0]
    252c:	cmp	r0, #0
    2530:	beq	2580 <coda_type_record_field_set_bit_offset_expression+0x114>
    2534:	ldr	r0, [sp, #8]
    2538:	ldr	r0, [r0, #8]
    253c:	ldr	r0, [r0]
    2540:	cmp	r0, #1
    2544:	beq	2580 <coda_type_record_field_set_bit_offset_expression+0x114>
    2548:	ldr	r0, [sp, #8]
    254c:	ldr	r0, [r0, #8]
    2550:	ldr	r0, [r0]
    2554:	bl	25a4 <coda_type_get_format_name>
    2558:	ldr	r1, [pc, #64]	; 25a0 <coda_type_record_field_set_bit_offset_expression+0x134>
    255c:	str	r0, [sp]
    2560:	mov	r0, r1
    2564:	movw	r1, #0
    2568:	movt	r1, #0
    256c:	ldr	r2, [sp]
    2570:	bl	0 <coda_set_error>
    2574:	mvn	r0, #0
    2578:	str	r0, [fp, #-4]
    257c:	b	2594 <coda_type_record_field_set_bit_offset_expression+0x128>
    2580:	ldr	r0, [sp, #4]
    2584:	ldr	r1, [sp, #8]
    2588:	str	r0, [r1, #32]
    258c:	movw	r0, #0
    2590:	str	r0, [fp, #-4]
    2594:	ldr	r0, [fp, #-4]
    2598:	mov	sp, fp
    259c:	pop	{fp, pc}
    25a0:	.word	0xfffffe70

000025a4 <coda_type_get_format_name>:
    25a4:	sub	sp, sp, #12
    25a8:	str	r0, [sp, #4]
    25ac:	ldr	r0, [sp, #4]
    25b0:	cmp	r0, #9
    25b4:	str	r0, [sp]
    25b8:	bhi	2694 <coda_type_get_format_name+0xf0>
    25bc:	add	r0, pc, #8
    25c0:	ldr	r1, [sp]
    25c4:	ldr	r0, [r0, r1, lsl #2]
    25c8:	mov	pc, r0
    25cc:	.word	0x000025f4
    25d0:	.word	0x00002604
    25d4:	.word	0x00002614
    25d8:	.word	0x00002654
    25dc:	.word	0x00002664
    25e0:	.word	0x00002644
    25e4:	.word	0x00002624
    25e8:	.word	0x00002634
    25ec:	.word	0x00002674
    25f0:	.word	0x00002684
    25f4:	movw	r0, #0
    25f8:	movt	r0, #0
    25fc:	str	r0, [sp, #8]
    2600:	b	26a0 <coda_type_get_format_name+0xfc>
    2604:	movw	r0, #0
    2608:	movt	r0, #0
    260c:	str	r0, [sp, #8]
    2610:	b	26a0 <coda_type_get_format_name+0xfc>
    2614:	movw	r0, #0
    2618:	movt	r0, #0
    261c:	str	r0, [sp, #8]
    2620:	b	26a0 <coda_type_get_format_name+0xfc>
    2624:	movw	r0, #0
    2628:	movt	r0, #0
    262c:	str	r0, [sp, #8]
    2630:	b	26a0 <coda_type_get_format_name+0xfc>
    2634:	movw	r0, #0
    2638:	movt	r0, #0
    263c:	str	r0, [sp, #8]
    2640:	b	26a0 <coda_type_get_format_name+0xfc>
    2644:	movw	r0, #0
    2648:	movt	r0, #0
    264c:	str	r0, [sp, #8]
    2650:	b	26a0 <coda_type_get_format_name+0xfc>
    2654:	movw	r0, #0
    2658:	movt	r0, #0
    265c:	str	r0, [sp, #8]
    2660:	b	26a0 <coda_type_get_format_name+0xfc>
    2664:	movw	r0, #0
    2668:	movt	r0, #0
    266c:	str	r0, [sp, #8]
    2670:	b	26a0 <coda_type_get_format_name+0xfc>
    2674:	movw	r0, #0
    2678:	movt	r0, #0
    267c:	str	r0, [sp, #8]
    2680:	b	26a0 <coda_type_get_format_name+0xfc>
    2684:	movw	r0, #0
    2688:	movt	r0, #0
    268c:	str	r0, [sp, #8]
    2690:	b	26a0 <coda_type_get_format_name+0xfc>
    2694:	movw	r0, #0
    2698:	movt	r0, #0
    269c:	str	r0, [sp, #8]
    26a0:	ldr	r0, [sp, #8]
    26a4:	add	sp, sp, #12
    26a8:	bx	lr

000026ac <coda_type_record_field_validate>:
    26ac:	push	{fp, lr}
    26b0:	mov	fp, sp
    26b4:	sub	sp, sp, #8
    26b8:	str	r0, [sp]
    26bc:	ldr	r0, [sp]
    26c0:	movw	r1, #0
    26c4:	cmp	r0, r1
    26c8:	bne	26f4 <coda_type_record_field_validate+0x48>
    26cc:	mvn	r0, #99	; 0x63
    26d0:	movw	r1, #0
    26d4:	movt	r1, #0
    26d8:	movw	r2, #0
    26dc:	movt	r2, #0
    26e0:	movw	r3, #1180	; 0x49c
    26e4:	bl	0 <coda_set_error>
    26e8:	mvn	r0, #0
    26ec:	str	r0, [sp, #4]
    26f0:	b	272c <coda_type_record_field_validate+0x80>
    26f4:	ldr	r0, [sp]
    26f8:	ldr	r0, [r0, #8]
    26fc:	movw	r1, #0
    2700:	cmp	r0, r1
    2704:	bne	2724 <coda_type_record_field_validate+0x78>
    2708:	ldr	r0, [pc, #40]	; 2738 <coda_type_record_field_validate+0x8c>
    270c:	movw	r1, #0
    2710:	movt	r1, #0
    2714:	bl	0 <coda_set_error>
    2718:	mvn	r0, #0
    271c:	str	r0, [sp, #4]
    2720:	b	272c <coda_type_record_field_validate+0x80>
    2724:	movw	r0, #0
    2728:	str	r0, [sp, #4]
    272c:	ldr	r0, [sp, #4]
    2730:	mov	sp, fp
    2734:	pop	{fp, pc}
    2738:	.word	0xfffffe70

0000273c <coda_type_record_field_get_type>:
    273c:	sub	sp, sp, #8
    2740:	str	r0, [sp, #4]
    2744:	str	r1, [sp]
    2748:	ldr	r0, [sp, #4]
    274c:	ldr	r0, [r0, #8]
    2750:	ldr	r1, [sp]
    2754:	str	r0, [r1]
    2758:	movw	r0, #0
    275c:	add	sp, sp, #8
    2760:	bx	lr

00002764 <coda_type_union_new>:
    2764:	push	{fp, lr}
    2768:	mov	fp, sp
    276c:	sub	sp, sp, #8
    2770:	str	r0, [sp, #4]
    2774:	ldr	r0, [sp, #4]
    2778:	bl	1bf0 <coda_type_record_new>
    277c:	str	r0, [sp]
    2780:	ldr	r0, [sp]
    2784:	movw	r1, #0
    2788:	cmp	r0, r1
    278c:	beq	279c <coda_type_union_new+0x38>
    2790:	ldr	r0, [sp]
    2794:	movw	r1, #1
    2798:	str	r1, [r0, #64]	; 0x40
    279c:	ldr	r0, [sp]
    27a0:	mov	sp, fp
    27a4:	pop	{fp, pc}

000027a8 <coda_type_empty_record>:
    27a8:	push	{fp, lr}
    27ac:	mov	fp, sp
    27b0:	sub	sp, sp, #32
    27b4:	str	r0, [fp, #-4]
    27b8:	ldr	r0, [fp, #-4]
    27bc:	cmp	r0, #11
    27c0:	bcs	27c8 <coda_type_empty_record+0x20>
    27c4:	b	27e8 <coda_type_empty_record+0x40>
    27c8:	movw	r0, #0
    27cc:	movt	r0, #0
    27d0:	movw	r1, #0
    27d4:	movt	r1, #0
    27d8:	movw	r2, #1268	; 0x4f4
    27dc:	movw	r3, #0
    27e0:	movt	r3, #0
    27e4:	bl	0 <__assert_fail>
    27e8:	ldr	r0, [fp, #-4]
    27ec:	ldr	r1, [pc, #204]	; 28c0 <coda_type_empty_record+0x118>
    27f0:	str	r0, [fp, #-8]
    27f4:	str	r1, [fp, #-12]
    27f8:	bl	0 <__aeabi_read_tp>
    27fc:	ldr	r1, [fp, #-12]
    2800:	add	r0, r0, r1
    2804:	ldr	r1, [fp, #-8]
    2808:	add	r0, r0, r1, lsl #2
    280c:	ldr	r0, [r0]
    2810:	movw	r1, #0
    2814:	cmp	r0, r1
    2818:	bne	2890 <coda_type_empty_record+0xe8>
    281c:	ldr	r0, [fp, #-4]
    2820:	bl	1bf0 <coda_type_record_new>
    2824:	ldr	r1, [fp, #-4]
    2828:	ldr	r2, [pc, #144]	; 28c0 <coda_type_empty_record+0x118>
    282c:	str	r0, [sp, #16]
    2830:	str	r1, [sp, #12]
    2834:	str	r2, [sp, #8]
    2838:	bl	0 <__aeabi_read_tp>
    283c:	ldr	r1, [sp, #8]
    2840:	add	r0, r0, r1
    2844:	ldr	r1, [sp, #16]
    2848:	ldr	r2, [sp, #12]
    284c:	str	r1, [r0, r2, lsl #2]
    2850:	ldr	r2, [fp, #-4]
    2854:	add	r0, r0, r2, lsl #2
    2858:	ldr	r0, [r0]
    285c:	movw	r2, #0
    2860:	cmp	r0, r2
    2864:	beq	286c <coda_type_empty_record+0xc4>
    2868:	b	288c <coda_type_empty_record+0xe4>
    286c:	movw	r0, #0
    2870:	movt	r0, #0
    2874:	movw	r1, #0
    2878:	movt	r1, #0
    287c:	movw	r2, #1272	; 0x4f8
    2880:	movw	r3, #0
    2884:	movt	r3, #0
    2888:	bl	0 <__assert_fail>
    288c:	b	2890 <coda_type_empty_record+0xe8>
    2890:	ldr	r0, [fp, #-4]
    2894:	ldr	r1, [pc, #36]	; 28c0 <coda_type_empty_record+0x118>
    2898:	str	r0, [sp, #4]
    289c:	str	r1, [sp]
    28a0:	bl	0 <__aeabi_read_tp>
    28a4:	ldr	r1, [sp]
    28a8:	add	r0, r0, r1
    28ac:	ldr	r1, [sp, #4]
    28b0:	add	r0, r0, r1, lsl #2
    28b4:	ldr	r0, [r0]
    28b8:	mov	sp, fp
    28bc:	pop	{fp, pc}
    28c0:	.word	0x00000000

000028c4 <coda_type_record_insert_field>:
    28c4:	push	{fp, lr}
    28c8:	mov	fp, sp
    28cc:	sub	sp, sp, #48	; 0x30
    28d0:	str	r0, [fp, #-8]
    28d4:	str	r1, [fp, #-12]
    28d8:	str	r2, [fp, #-16]
    28dc:	ldr	r0, [fp, #-8]
    28e0:	movw	r1, #0
    28e4:	cmp	r0, r1
    28e8:	bne	2914 <coda_type_record_insert_field+0x50>
    28ec:	mvn	r0, #99	; 0x63
    28f0:	movw	r1, #0
    28f4:	movt	r1, #0
    28f8:	movw	r2, #0
    28fc:	movt	r2, #0
    2900:	movw	r3, #1285	; 0x505
    2904:	bl	0 <coda_set_error>
    2908:	mvn	r0, #0
    290c:	str	r0, [fp, #-4]
    2910:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    2914:	ldr	r0, [fp, #-16]
    2918:	movw	r1, #0
    291c:	cmp	r0, r1
    2920:	bne	294c <coda_type_record_insert_field+0x88>
    2924:	mvn	r0, #99	; 0x63
    2928:	movw	r1, #0
    292c:	movt	r1, #0
    2930:	movw	r2, #0
    2934:	movt	r2, #0
    2938:	movw	r3, #1290	; 0x50a
    293c:	bl	0 <coda_set_error>
    2940:	mvn	r0, #0
    2944:	str	r0, [fp, #-4]
    2948:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    294c:	ldr	r0, [fp, #-16]
    2950:	ldr	r0, [r0, #8]
    2954:	movw	r1, #0
    2958:	cmp	r0, r1
    295c:	bne	2988 <coda_type_record_insert_field+0xc4>
    2960:	mvn	r0, #99	; 0x63
    2964:	movw	r1, #0
    2968:	movt	r1, #0
    296c:	movw	r2, #0
    2970:	movt	r2, #0
    2974:	movw	r3, #1295	; 0x50f
    2978:	bl	0 <coda_set_error>
    297c:	mvn	r0, #0
    2980:	str	r0, [fp, #-4]
    2984:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    2988:	ldr	r0, [fp, #-8]
    298c:	ldr	r0, [r0, #64]	; 0x40
    2990:	cmp	r0, #0
    2994:	beq	29c4 <coda_type_record_insert_field+0x100>
    2998:	ldr	r0, [fp, #-16]
    299c:	ldrsb	r0, [r0, #16]
    29a0:	cmp	r0, #0
    29a4:	bne	29c4 <coda_type_record_insert_field+0x100>
    29a8:	ldr	r0, [pc, #1540]	; 2fb4 <coda_type_record_insert_field+0x6f0>
    29ac:	movw	r1, #0
    29b0:	movt	r1, #0
    29b4:	bl	0 <coda_set_error>
    29b8:	mvn	r0, #0
    29bc:	str	r0, [fp, #-4]
    29c0:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    29c4:	ldr	r0, [fp, #-8]
    29c8:	ldr	r0, [r0]
    29cc:	ldr	r1, [fp, #-16]
    29d0:	ldr	r1, [r1, #8]
    29d4:	ldr	r1, [r1]
    29d8:	cmp	r0, r1
    29dc:	beq	2a68 <coda_type_record_insert_field+0x1a4>
    29e0:	ldr	r0, [fp, #-16]
    29e4:	ldr	r0, [r0, #8]
    29e8:	ldr	r0, [r0]
    29ec:	cmp	r0, #0
    29f0:	bne	2a14 <coda_type_record_insert_field+0x150>
    29f4:	ldr	r0, [fp, #-8]
    29f8:	ldr	r0, [r0]
    29fc:	cmp	r0, #1
    2a00:	beq	2a64 <coda_type_record_insert_field+0x1a0>
    2a04:	ldr	r0, [fp, #-8]
    2a08:	ldr	r0, [r0]
    2a0c:	cmp	r0, #2
    2a10:	beq	2a64 <coda_type_record_insert_field+0x1a0>
    2a14:	ldr	r0, [fp, #-16]
    2a18:	ldr	r0, [r0, #8]
    2a1c:	ldr	r0, [r0]
    2a20:	bl	25a4 <coda_type_get_format_name>
    2a24:	ldr	r1, [fp, #-8]
    2a28:	ldr	r1, [r1]
    2a2c:	str	r0, [sp, #16]
    2a30:	mov	r0, r1
    2a34:	bl	25a4 <coda_type_get_format_name>
    2a38:	ldr	r1, [pc, #1396]	; 2fb4 <coda_type_record_insert_field+0x6f0>
    2a3c:	str	r0, [sp, #12]
    2a40:	mov	r0, r1
    2a44:	movw	r1, #0
    2a48:	movt	r1, #0
    2a4c:	ldr	r2, [sp, #16]
    2a50:	ldr	r3, [sp, #12]
    2a54:	bl	0 <coda_set_error>
    2a58:	mvn	r0, #0
    2a5c:	str	r0, [fp, #-4]
    2a60:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    2a64:	b	2a68 <coda_type_record_insert_field+0x1a4>
    2a68:	ldr	r0, [fp, #-8]
    2a6c:	ldr	r0, [r0, #48]	; 0x30
    2a70:	asr	r1, r0, #31
    2a74:	add	r1, r0, r1, lsr #28
    2a78:	bic	r1, r1, #15
    2a7c:	sub	r0, r0, r1
    2a80:	cmp	r0, #0
    2a84:	bne	2afc <coda_type_record_insert_field+0x238>
    2a88:	ldr	r0, [fp, #-8]
    2a8c:	ldr	r1, [r0, #48]	; 0x30
    2a90:	ldr	r0, [r0, #52]	; 0x34
    2a94:	add	r1, r1, #16
    2a98:	lsl	r1, r1, #2
    2a9c:	bl	0 <realloc>
    2aa0:	str	r0, [sp, #20]
    2aa4:	ldr	r0, [sp, #20]
    2aa8:	movw	r1, #0
    2aac:	cmp	r0, r1
    2ab0:	bne	2af0 <coda_type_record_insert_field+0x22c>
    2ab4:	ldr	r0, [fp, #-8]
    2ab8:	ldr	r0, [r0, #48]	; 0x30
    2abc:	add	r0, r0, #16
    2ac0:	lsl	r2, r0, #2
    2ac4:	mvn	r0, #0
    2ac8:	movw	r1, #0
    2acc:	movt	r1, #0
    2ad0:	movw	r3, #0
    2ad4:	movt	r3, #0
    2ad8:	movw	ip, #1326	; 0x52e
    2adc:	str	ip, [sp]
    2ae0:	bl	0 <coda_set_error>
    2ae4:	mvn	r0, #0
    2ae8:	str	r0, [fp, #-4]
    2aec:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    2af0:	ldr	r0, [sp, #20]
    2af4:	ldr	r1, [fp, #-8]
    2af8:	str	r0, [r1, #52]	; 0x34
    2afc:	ldr	r0, [fp, #-8]
    2b00:	ldr	r0, [r0, #40]	; 0x28
    2b04:	ldr	r1, [fp, #-12]
    2b08:	ldr	r2, [fp, #-16]
    2b0c:	ldr	r2, [r2]
    2b10:	bl	0 <coda_hashtable_insert_name>
    2b14:	cmp	r0, #0
    2b18:	beq	2b40 <coda_type_record_insert_field+0x27c>
    2b1c:	ldr	r0, [pc, #1168]	; 2fb4 <coda_type_record_insert_field+0x6f0>
    2b20:	ldr	r1, [fp, #-16]
    2b24:	ldr	r2, [r1]
    2b28:	movw	r1, #0
    2b2c:	movt	r1, #0
    2b30:	bl	0 <coda_set_error>
    2b34:	mvn	r0, #0
    2b38:	str	r0, [fp, #-4]
    2b3c:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    2b40:	ldr	r0, [fp, #-16]
    2b44:	ldr	r0, [r0, #4]
    2b48:	movw	r1, #0
    2b4c:	cmp	r0, r1
    2b50:	beq	2b64 <coda_type_record_insert_field+0x2a0>
    2b54:	ldr	r0, [fp, #-16]
    2b58:	ldr	r0, [r0, #4]
    2b5c:	str	r0, [sp, #8]
    2b60:	b	2b70 <coda_type_record_insert_field+0x2ac>
    2b64:	ldr	r0, [fp, #-16]
    2b68:	ldr	r0, [r0]
    2b6c:	str	r0, [sp, #8]
    2b70:	ldr	r0, [sp, #8]
    2b74:	str	r0, [fp, #-20]	; 0xffffffec
    2b78:	ldr	r0, [fp, #-8]
    2b7c:	ldr	r0, [r0, #44]	; 0x2c
    2b80:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b84:	bl	0 <coda_hashtable_get_index_from_name>
    2b88:	cmp	r0, #0
    2b8c:	bge	2ba4 <coda_type_record_insert_field+0x2e0>
    2b90:	ldr	r0, [fp, #-8]
    2b94:	ldr	r0, [r0, #44]	; 0x2c
    2b98:	ldr	r1, [fp, #-12]
    2b9c:	ldr	r2, [fp, #-20]	; 0xffffffec
    2ba0:	bl	0 <coda_hashtable_insert_name>
    2ba4:	ldr	r0, [fp, #-12]
    2ba8:	ldr	r1, [fp, #-8]
    2bac:	ldr	r1, [r1, #48]	; 0x30
    2bb0:	cmp	r0, r1
    2bb4:	bge	2c04 <coda_type_record_insert_field+0x340>
    2bb8:	ldr	r0, [fp, #-8]
    2bbc:	ldr	r0, [r0, #48]	; 0x30
    2bc0:	str	r0, [sp, #24]
    2bc4:	ldr	r0, [sp, #24]
    2bc8:	ldr	r1, [fp, #-12]
    2bcc:	cmp	r0, r1
    2bd0:	ble	2c00 <coda_type_record_insert_field+0x33c>
    2bd4:	ldr	r0, [fp, #-8]
    2bd8:	ldr	r0, [r0, #52]	; 0x34
    2bdc:	ldr	r1, [sp, #24]
    2be0:	add	r0, r0, r1, lsl #2
    2be4:	ldr	r1, [r0, #-4]
    2be8:	str	r1, [r0]
    2bec:	ldr	r0, [sp, #24]
    2bf0:	mvn	r1, #0
    2bf4:	add	r0, r0, r1
    2bf8:	str	r0, [sp, #24]
    2bfc:	b	2bc4 <coda_type_record_insert_field+0x300>
    2c00:	b	2c04 <coda_type_record_insert_field+0x340>
    2c04:	ldr	r0, [fp, #-8]
    2c08:	ldr	r1, [r0, #48]	; 0x30
    2c0c:	add	r1, r1, #1
    2c10:	str	r1, [r0, #48]	; 0x30
    2c14:	ldr	r0, [fp, #-16]
    2c18:	ldr	r1, [fp, #-8]
    2c1c:	ldr	r1, [r1, #52]	; 0x34
    2c20:	ldr	r2, [fp, #-12]
    2c24:	add	r1, r1, r2, lsl #2
    2c28:	str	r0, [r1]
    2c2c:	ldr	r0, [fp, #-8]
    2c30:	ldr	r0, [r0]
    2c34:	cmp	r0, #0
    2c38:	beq	2c4c <coda_type_record_insert_field+0x388>
    2c3c:	ldr	r0, [fp, #-8]
    2c40:	ldr	r0, [r0]
    2c44:	cmp	r0, #1
    2c48:	bne	2fa0 <coda_type_record_insert_field+0x6dc>
    2c4c:	ldr	r0, [fp, #-8]
    2c50:	ldr	r0, [r0, #64]	; 0x40
    2c54:	cmp	r0, #0
    2c58:	beq	2d18 <coda_type_record_insert_field+0x454>
    2c5c:	ldr	r0, [fp, #-16]
    2c60:	ldr	r0, [r0, #32]
    2c64:	movw	r1, #0
    2c68:	cmp	r0, r1
    2c6c:	beq	2c8c <coda_type_record_insert_field+0x3c8>
    2c70:	ldr	r0, [pc, #828]	; 2fb4 <coda_type_record_insert_field+0x6f0>
    2c74:	movw	r1, #0
    2c78:	movt	r1, #0
    2c7c:	bl	0 <coda_set_error>
    2c80:	mvn	r0, #0
    2c84:	str	r0, [fp, #-4]
    2c88:	b	2fa8 <coda_type_record_insert_field+0x6e4>
    2c8c:	ldr	r0, [fp, #-16]
    2c90:	mov	r1, #0
    2c94:	str	r1, [r0, #28]
    2c98:	str	r1, [r0, #24]
    2c9c:	ldr	r0, [fp, #-8]
    2ca0:	ldr	r0, [r0, #48]	; 0x30
    2ca4:	cmp	r0, #1
    2ca8:	bne	2ccc <coda_type_record_insert_field+0x408>
    2cac:	ldr	r0, [fp, #-16]
    2cb0:	ldr	r0, [r0, #8]
    2cb4:	ldr	r1, [r0, #24]
    2cb8:	ldr	r0, [r0, #28]
    2cbc:	ldr	r2, [fp, #-8]
    2cc0:	str	r0, [r2, #28]
    2cc4:	str	r1, [r2, #24]
    2cc8:	b	2d14 <coda_type_record_insert_field+0x450>
    2ccc:	ldr	r0, [fp, #-8]
    2cd0:	ldr	r1, [r0, #24]
    2cd4:	ldr	r0, [r0, #28]
    2cd8:	ldr	r2, [fp, #-16]
    2cdc:	ldr	r2, [r2, #8]
    2ce0:	ldr	r3, [r2, #24]
    2ce4:	ldr	r2, [r2, #28]
    2ce8:	eor	r0, r0, r2
    2cec:	eor	r1, r1, r3
    2cf0:	orr	r0, r1, r0
    2cf4:	cmp	r0, #0
    2cf8:	beq	2d10 <coda_type_record_insert_field+0x44c>
    2cfc:	b	2d00 <coda_type_record_insert_field+0x43c>
    2d00:	ldr	r0, [fp, #-8]
    2d04:	mvn	r1, #0
    2d08:	str	r1, [r0, #28]
    2d0c:	str	r1, [r0, #24]
    2d10:	b	2d14 <coda_type_record_insert_field+0x450>
    2d14:	b	2f9c <coda_type_record_insert_field+0x6d8>
    2d18:	ldr	r0, [fp, #-16]
    2d1c:	ldr	r0, [r0, #32]
    2d20:	movw	r1, #0
    2d24:	cmp	r0, r1
    2d28:	bne	2e00 <coda_type_record_insert_field+0x53c>
    2d2c:	ldr	r0, [fp, #-12]
    2d30:	cmp	r0, #0
    2d34:	bne	2d4c <coda_type_record_insert_field+0x488>
    2d38:	ldr	r0, [fp, #-16]
    2d3c:	mov	r1, #0
    2d40:	str	r1, [r0, #28]
    2d44:	str	r1, [r0, #24]
    2d48:	b	2dfc <coda_type_record_insert_field+0x538>
    2d4c:	ldr	r0, [fp, #-8]
    2d50:	ldr	r0, [r0, #52]	; 0x34
    2d54:	ldr	r1, [fp, #-12]
    2d58:	add	r0, r0, r1, lsl #2
    2d5c:	ldr	r0, [r0, #-4]
    2d60:	ldr	r0, [r0, #28]
    2d64:	cmp	r0, #0
    2d68:	bmi	2df8 <coda_type_record_insert_field+0x534>
    2d6c:	b	2d70 <coda_type_record_insert_field+0x4ac>
    2d70:	ldr	r0, [fp, #-8]
    2d74:	ldr	r0, [r0, #52]	; 0x34
    2d78:	ldr	r1, [fp, #-12]
    2d7c:	add	r0, r0, r1, lsl #2
    2d80:	ldr	r0, [r0, #-4]
    2d84:	ldr	r0, [r0, #8]
    2d88:	ldr	r0, [r0, #28]
    2d8c:	cmp	r0, #0
    2d90:	bmi	2df8 <coda_type_record_insert_field+0x534>
    2d94:	b	2d98 <coda_type_record_insert_field+0x4d4>
    2d98:	ldr	r0, [fp, #-8]
    2d9c:	ldr	r0, [r0, #52]	; 0x34
    2da0:	ldr	r1, [fp, #-12]
    2da4:	sub	r1, r1, #1
    2da8:	add	r0, r0, r1, lsl #2
    2dac:	ldr	r0, [r0]
    2db0:	ldrsb	r0, [r0, #16]
    2db4:	cmp	r0, #0
    2db8:	bne	2df8 <coda_type_record_insert_field+0x534>
    2dbc:	ldr	r0, [fp, #-8]
    2dc0:	ldr	r0, [r0, #52]	; 0x34
    2dc4:	ldr	r1, [fp, #-12]
    2dc8:	add	r0, r0, r1, lsl #2
    2dcc:	ldr	r0, [r0, #-4]
    2dd0:	ldr	r1, [r0, #8]
    2dd4:	ldr	r2, [r0, #24]
    2dd8:	ldr	r0, [r0, #28]
    2ddc:	ldr	r3, [r1, #24]
    2de0:	ldr	r1, [r1, #28]
    2de4:	adds	r2, r2, r3
    2de8:	adc	r0, r0, r1
    2dec:	ldr	r1, [fp, #-16]
    2df0:	str	r2, [r1, #24]
    2df4:	str	r0, [r1, #28]
    2df8:	b	2dfc <coda_type_record_insert_field+0x538>
    2dfc:	b	2e00 <coda_type_record_insert_field+0x53c>
    2e00:	ldr	r0, [fp, #-12]
    2e04:	add	r0, r0, #1
    2e08:	str	r0, [sp, #24]
    2e0c:	ldr	r0, [sp, #24]
    2e10:	ldr	r1, [fp, #-8]
    2e14:	ldr	r1, [r1, #48]	; 0x30
    2e18:	cmp	r0, r1
    2e1c:	bge	2f04 <coda_type_record_insert_field+0x640>
    2e20:	ldr	r0, [fp, #-8]
    2e24:	ldr	r0, [r0, #52]	; 0x34
    2e28:	ldr	r1, [sp, #24]
    2e2c:	add	r0, r0, r1, lsl #2
    2e30:	ldr	r0, [r0]
    2e34:	ldr	r0, [r0, #32]
    2e38:	movw	r1, #0
    2e3c:	cmp	r0, r1
    2e40:	bne	2ef0 <coda_type_record_insert_field+0x62c>
    2e44:	ldr	r0, [fp, #-8]
    2e48:	ldr	r0, [r0, #52]	; 0x34
    2e4c:	ldr	r1, [sp, #24]
    2e50:	add	r0, r0, r1, lsl #2
    2e54:	ldr	r0, [r0, #-4]
    2e58:	ldr	r0, [r0, #28]
    2e5c:	cmp	r0, #0
    2e60:	bmi	2eec <coda_type_record_insert_field+0x628>
    2e64:	b	2e68 <coda_type_record_insert_field+0x5a4>
    2e68:	ldr	r0, [fp, #-8]
    2e6c:	ldr	r0, [r0, #52]	; 0x34
    2e70:	ldr	r1, [sp, #24]
    2e74:	add	r0, r0, r1, lsl #2
    2e78:	ldr	r0, [r0, #-4]
    2e7c:	ldr	r0, [r0, #8]
    2e80:	ldr	r0, [r0, #28]
    2e84:	cmp	r0, #0
    2e88:	bmi	2eec <coda_type_record_insert_field+0x628>
    2e8c:	b	2e90 <coda_type_record_insert_field+0x5cc>
    2e90:	ldr	r0, [fp, #-8]
    2e94:	ldr	r0, [r0, #52]	; 0x34
    2e98:	ldr	r1, [sp, #24]
    2e9c:	sub	r1, r1, #1
    2ea0:	add	r0, r0, r1, lsl #2
    2ea4:	ldr	r0, [r0]
    2ea8:	ldrsb	r0, [r0, #16]
    2eac:	cmp	r0, #0
    2eb0:	bne	2eec <coda_type_record_insert_field+0x628>
    2eb4:	ldr	r0, [fp, #-8]
    2eb8:	ldr	r0, [r0, #52]	; 0x34
    2ebc:	ldr	r1, [sp, #24]
    2ec0:	ldr	r1, [r0, r1, lsl #2]!
    2ec4:	ldr	r0, [r0, #-4]
    2ec8:	ldr	r2, [r0, #8]
    2ecc:	ldr	r3, [r0, #24]
    2ed0:	ldr	r0, [r0, #28]
    2ed4:	ldr	ip, [r2, #24]
    2ed8:	ldr	r2, [r2, #28]
    2edc:	adds	r3, r3, ip
    2ee0:	adc	r0, r0, r2
    2ee4:	str	r3, [r1, #24]
    2ee8:	str	r0, [r1, #28]
    2eec:	b	2ef0 <coda_type_record_insert_field+0x62c>
    2ef0:	b	2ef4 <coda_type_record_insert_field+0x630>
    2ef4:	ldr	r0, [sp, #24]
    2ef8:	add	r0, r0, #1
    2efc:	str	r0, [sp, #24]
    2f00:	b	2e0c <coda_type_record_insert_field+0x548>
    2f04:	ldr	r0, [fp, #-8]
    2f08:	ldr	r0, [r0, #28]
    2f0c:	cmp	r0, #0
    2f10:	bmi	2f98 <coda_type_record_insert_field+0x6d4>
    2f14:	b	2f18 <coda_type_record_insert_field+0x654>
    2f18:	ldr	r0, [fp, #-16]
    2f1c:	ldr	r0, [r0, #8]
    2f20:	ldr	r0, [r0, #28]
    2f24:	cmp	r0, #0
    2f28:	bmi	2f84 <coda_type_record_insert_field+0x6c0>
    2f2c:	b	2f30 <coda_type_record_insert_field+0x66c>
    2f30:	ldr	r0, [fp, #-8]
    2f34:	ldr	r1, [r0, #48]	; 0x30
    2f38:	ldr	r0, [r0, #52]	; 0x34
    2f3c:	sub	r1, r1, #1
    2f40:	add	r0, r0, r1, lsl #2
    2f44:	ldr	r0, [r0]
    2f48:	ldrsb	r0, [r0, #16]
    2f4c:	cmp	r0, #0
    2f50:	bne	2f84 <coda_type_record_insert_field+0x6c0>
    2f54:	ldr	r0, [fp, #-16]
    2f58:	ldr	r0, [r0, #8]
    2f5c:	ldr	r1, [r0, #24]
    2f60:	ldr	r0, [r0, #28]
    2f64:	ldr	r2, [fp, #-8]
    2f68:	ldr	r3, [r2, #24]
    2f6c:	ldr	ip, [r2, #28]
    2f70:	adds	r1, r3, r1
    2f74:	adc	r0, ip, r0
    2f78:	str	r1, [r2, #24]
    2f7c:	str	r0, [r2, #28]
    2f80:	b	2f94 <coda_type_record_insert_field+0x6d0>
    2f84:	ldr	r0, [fp, #-8]
    2f88:	mvn	r1, #0
    2f8c:	str	r1, [r0, #28]
    2f90:	str	r1, [r0, #24]
    2f94:	b	2f98 <coda_type_record_insert_field+0x6d4>
    2f98:	b	2f9c <coda_type_record_insert_field+0x6d8>
    2f9c:	b	2fa0 <coda_type_record_insert_field+0x6dc>
    2fa0:	movw	r0, #0
    2fa4:	str	r0, [fp, #-4]
    2fa8:	ldr	r0, [fp, #-4]
    2fac:	mov	sp, fp
    2fb0:	pop	{fp, pc}
    2fb4:	.word	0xfffffe70

00002fb8 <coda_type_record_create_field>:
    2fb8:	push	{fp, lr}
    2fbc:	mov	fp, sp
    2fc0:	sub	sp, sp, #24
    2fc4:	str	r0, [fp, #-8]
    2fc8:	str	r1, [sp, #12]
    2fcc:	str	r2, [sp, #8]
    2fd0:	ldr	r0, [fp, #-8]
    2fd4:	movw	r1, #0
    2fd8:	cmp	r0, r1
    2fdc:	bne	3008 <coda_type_record_create_field+0x50>
    2fe0:	mvn	r0, #99	; 0x63
    2fe4:	movw	r1, #0
    2fe8:	movt	r1, #0
    2fec:	movw	r2, #0
    2ff0:	movt	r2, #0
    2ff4:	movw	r3, #1437	; 0x59d
    2ff8:	bl	0 <coda_set_error>
    2ffc:	mvn	r0, #0
    3000:	str	r0, [fp, #-4]
    3004:	b	317c <coda_type_record_create_field+0x1c4>
    3008:	ldr	r0, [sp, #12]
    300c:	movw	r1, #0
    3010:	cmp	r0, r1
    3014:	bne	3040 <coda_type_record_create_field+0x88>
    3018:	mvn	r0, #99	; 0x63
    301c:	movw	r1, #0
    3020:	movt	r1, #0
    3024:	movw	r2, #0
    3028:	movt	r2, #0
    302c:	movw	r3, #1442	; 0x5a2
    3030:	bl	0 <coda_set_error>
    3034:	mvn	r0, #0
    3038:	str	r0, [fp, #-4]
    303c:	b	317c <coda_type_record_create_field+0x1c4>
    3040:	ldr	r0, [sp, #8]
    3044:	movw	r1, #0
    3048:	cmp	r0, r1
    304c:	bne	3078 <coda_type_record_create_field+0xc0>
    3050:	mvn	r0, #99	; 0x63
    3054:	movw	r1, #0
    3058:	movt	r1, #0
    305c:	movw	r2, #0
    3060:	movt	r2, #0
    3064:	movw	r3, #1447	; 0x5a7
    3068:	bl	0 <coda_set_error>
    306c:	mvn	r0, #0
    3070:	str	r0, [fp, #-4]
    3074:	b	317c <coda_type_record_create_field+0x1c4>
    3078:	ldr	r0, [fp, #-8]
    307c:	ldr	r1, [sp, #12]
    3080:	bl	3188 <coda_type_record_get_unique_field_name>
    3084:	str	r0, [sp]
    3088:	ldr	r0, [sp]
    308c:	movw	r1, #0
    3090:	cmp	r0, r1
    3094:	bne	30a4 <coda_type_record_create_field+0xec>
    3098:	mvn	r0, #0
    309c:	str	r0, [fp, #-4]
    30a0:	b	317c <coda_type_record_create_field+0x1c4>
    30a4:	ldr	r0, [sp]
    30a8:	bl	1f38 <coda_type_record_field_new>
    30ac:	str	r0, [sp, #4]
    30b0:	ldr	r0, [sp, #4]
    30b4:	movw	r1, #0
    30b8:	cmp	r0, r1
    30bc:	bne	30d4 <coda_type_record_create_field+0x11c>
    30c0:	ldr	r0, [sp]
    30c4:	bl	0 <free>
    30c8:	mvn	r0, #0
    30cc:	str	r0, [fp, #-4]
    30d0:	b	317c <coda_type_record_create_field+0x1c4>
    30d4:	ldr	r0, [sp]
    30d8:	ldr	r1, [sp, #12]
    30dc:	bl	0 <strcmp>
    30e0:	cmp	r0, #0
    30e4:	beq	311c <coda_type_record_create_field+0x164>
    30e8:	ldr	r0, [sp, #4]
    30ec:	ldr	r1, [sp, #12]
    30f0:	bl	20b8 <coda_type_record_field_set_real_name>
    30f4:	cmp	r0, #0
    30f8:	beq	3118 <coda_type_record_create_field+0x160>
    30fc:	ldr	r0, [sp, #4]
    3100:	bl	5a0 <coda_type_record_field_delete>
    3104:	ldr	r0, [sp]
    3108:	bl	0 <free>
    310c:	mvn	r0, #0
    3110:	str	r0, [fp, #-4]
    3114:	b	317c <coda_type_record_create_field+0x1c4>
    3118:	b	311c <coda_type_record_create_field+0x164>
    311c:	ldr	r0, [sp]
    3120:	bl	0 <free>
    3124:	ldr	r0, [sp, #4]
    3128:	ldr	r1, [sp, #8]
    312c:	bl	21d0 <coda_type_record_field_set_type>
    3130:	cmp	r0, #0
    3134:	beq	314c <coda_type_record_create_field+0x194>
    3138:	ldr	r0, [sp, #4]
    313c:	bl	5a0 <coda_type_record_field_delete>
    3140:	mvn	r0, #0
    3144:	str	r0, [fp, #-4]
    3148:	b	317c <coda_type_record_create_field+0x1c4>
    314c:	ldr	r0, [fp, #-8]
    3150:	ldr	r1, [sp, #4]
    3154:	bl	1dd8 <coda_type_record_add_field>
    3158:	cmp	r0, #0
    315c:	beq	3174 <coda_type_record_create_field+0x1bc>
    3160:	ldr	r0, [sp, #4]
    3164:	bl	5a0 <coda_type_record_field_delete>
    3168:	mvn	r0, #0
    316c:	str	r0, [fp, #-4]
    3170:	b	317c <coda_type_record_create_field+0x1c4>
    3174:	movw	r0, #0
    3178:	str	r0, [fp, #-4]
    317c:	ldr	r0, [fp, #-4]
    3180:	mov	sp, fp
    3184:	pop	{fp, pc}

00003188 <coda_type_record_get_unique_field_name>:
    3188:	push	{fp, lr}
    318c:	mov	fp, sp
    3190:	sub	sp, sp, #8
    3194:	str	r0, [sp, #4]
    3198:	str	r1, [sp]
    319c:	ldr	r0, [sp, #4]
    31a0:	ldr	r0, [r0]
    31a4:	cmp	r0, #2
    31a8:	bne	31b8 <coda_type_record_get_unique_field_name+0x30>
    31ac:	ldr	r0, [sp]
    31b0:	bl	0 <coda_element_name_from_xml_name>
    31b4:	str	r0, [sp]
    31b8:	ldr	r0, [sp]
    31bc:	ldr	r1, [sp, #4]
    31c0:	ldr	r1, [r1, #40]	; 0x28
    31c4:	bl	0 <coda_identifier_from_name>
    31c8:	mov	sp, fp
    31cc:	pop	{fp, pc}

000031d0 <coda_type_union_set_field_expression>:
    31d0:	push	{fp, lr}
    31d4:	mov	fp, sp
    31d8:	sub	sp, sp, #16
    31dc:	str	r0, [sp, #8]
    31e0:	str	r1, [sp, #4]
    31e4:	ldr	r0, [sp, #8]
    31e8:	movw	r1, #0
    31ec:	cmp	r0, r1
    31f0:	bne	321c <coda_type_union_set_field_expression+0x4c>
    31f4:	mvn	r0, #99	; 0x63
    31f8:	movw	r1, #0
    31fc:	movt	r1, #0
    3200:	movw	r2, #0
    3204:	movt	r2, #0
    3208:	movw	r3, #1490	; 0x5d2
    320c:	bl	0 <coda_set_error>
    3210:	mvn	r0, #0
    3214:	str	r0, [fp, #-4]
    3218:	b	3400 <coda_type_union_set_field_expression+0x230>
    321c:	ldr	r0, [sp, #4]
    3220:	movw	r1, #0
    3224:	cmp	r0, r1
    3228:	bne	3254 <coda_type_union_set_field_expression+0x84>
    322c:	mvn	r0, #99	; 0x63
    3230:	movw	r1, #0
    3234:	movt	r1, #0
    3238:	movw	r2, #0
    323c:	movt	r2, #0
    3240:	movw	r3, #1495	; 0x5d7
    3244:	bl	0 <coda_set_error>
    3248:	mvn	r0, #0
    324c:	str	r0, [fp, #-4]
    3250:	b	3400 <coda_type_union_set_field_expression+0x230>
    3254:	ldr	r0, [sp, #8]
    3258:	ldr	r0, [r0, #64]	; 0x40
    325c:	cmp	r0, #0
    3260:	bne	3280 <coda_type_union_set_field_expression+0xb0>
    3264:	ldr	r0, [pc, #416]	; 340c <coda_type_union_set_field_expression+0x23c>
    3268:	movw	r1, #0
    326c:	movt	r1, #0
    3270:	bl	0 <coda_set_error>
    3274:	mvn	r0, #0
    3278:	str	r0, [fp, #-4]
    327c:	b	3400 <coda_type_union_set_field_expression+0x230>
    3280:	ldr	r0, [sp, #8]
    3284:	ldr	r0, [r0, #68]	; 0x44
    3288:	movw	r1, #0
    328c:	cmp	r0, r1
    3290:	beq	32b0 <coda_type_union_set_field_expression+0xe0>
    3294:	ldr	r0, [pc, #368]	; 340c <coda_type_union_set_field_expression+0x23c>
    3298:	movw	r1, #0
    329c:	movt	r1, #0
    32a0:	bl	0 <coda_set_error>
    32a4:	mvn	r0, #0
    32a8:	str	r0, [fp, #-4]
    32ac:	b	3400 <coda_type_union_set_field_expression+0x230>
    32b0:	ldr	r0, [sp, #4]
    32b4:	ldr	r1, [sp, #8]
    32b8:	str	r0, [r1, #68]	; 0x44
    32bc:	ldr	r0, [sp, #8]
    32c0:	ldr	r0, [r0, #48]	; 0x30
    32c4:	cmp	r0, #0
    32c8:	ble	33f8 <coda_type_union_set_field_expression+0x228>
    32cc:	movw	r0, #0
    32d0:	str	r0, [sp]
    32d4:	ldr	r0, [sp]
    32d8:	ldr	r1, [sp, #8]
    32dc:	ldr	r1, [r1, #48]	; 0x30
    32e0:	cmp	r0, r1
    32e4:	bge	33f4 <coda_type_union_set_field_expression+0x224>
    32e8:	ldr	r0, [sp, #8]
    32ec:	ldr	r0, [r0, #52]	; 0x34
    32f0:	ldr	r1, [sp]
    32f4:	add	r0, r0, r1, lsl #2
    32f8:	ldr	r0, [r0]
    32fc:	ldr	r0, [r0, #32]
    3300:	movw	r1, #0
    3304:	cmp	r0, r1
    3308:	beq	3340 <coda_type_union_set_field_expression+0x170>
    330c:	ldr	r0, [pc, #248]	; 340c <coda_type_union_set_field_expression+0x23c>
    3310:	ldr	r1, [sp, #8]
    3314:	ldr	r1, [r1, #52]	; 0x34
    3318:	ldr	r2, [sp]
    331c:	add	r1, r1, r2, lsl #2
    3320:	ldr	r1, [r1]
    3324:	ldr	r2, [r1]
    3328:	movw	r1, #0
    332c:	movt	r1, #0
    3330:	bl	0 <coda_set_error>
    3334:	mvn	r0, #0
    3338:	str	r0, [fp, #-4]
    333c:	b	3400 <coda_type_union_set_field_expression+0x230>
    3340:	ldr	r0, [sp, #8]
    3344:	ldr	r0, [r0, #52]	; 0x34
    3348:	ldr	r1, [sp]
    334c:	ldr	r0, [r0, r1, lsl #2]
    3350:	mov	r1, #0
    3354:	str	r1, [r0, #28]
    3358:	str	r1, [r0, #24]
    335c:	ldr	r0, [sp]
    3360:	cmp	r0, #0
    3364:	bne	3390 <coda_type_union_set_field_expression+0x1c0>
    3368:	ldr	r0, [sp, #8]
    336c:	ldr	r1, [r0, #52]	; 0x34
    3370:	ldr	r2, [sp]
    3374:	ldr	r1, [r1, r2, lsl #2]
    3378:	ldr	r1, [r1, #8]
    337c:	ldr	r2, [r1, #24]
    3380:	ldr	r1, [r1, #28]
    3384:	str	r1, [r0, #28]
    3388:	str	r2, [r0, #24]
    338c:	b	33e0 <coda_type_union_set_field_expression+0x210>
    3390:	ldr	r0, [sp, #8]
    3394:	ldr	r1, [r0, #24]
    3398:	ldr	r2, [r0, #28]
    339c:	ldr	r0, [r0, #52]	; 0x34
    33a0:	ldr	r3, [sp]
    33a4:	ldr	r0, [r0, r3, lsl #2]
    33a8:	ldr	r0, [r0, #8]
    33ac:	ldr	r3, [r0, #24]
    33b0:	ldr	r0, [r0, #28]
    33b4:	eor	r0, r2, r0
    33b8:	eor	r1, r1, r3
    33bc:	orr	r0, r1, r0
    33c0:	cmp	r0, #0
    33c4:	beq	33dc <coda_type_union_set_field_expression+0x20c>
    33c8:	b	33cc <coda_type_union_set_field_expression+0x1fc>
    33cc:	ldr	r0, [sp, #8]
    33d0:	mvn	r1, #0
    33d4:	str	r1, [r0, #28]
    33d8:	str	r1, [r0, #24]
    33dc:	b	33e0 <coda_type_union_set_field_expression+0x210>
    33e0:	b	33e4 <coda_type_union_set_field_expression+0x214>
    33e4:	ldr	r0, [sp]
    33e8:	add	r0, r0, #1
    33ec:	str	r0, [sp]
    33f0:	b	32d4 <coda_type_union_set_field_expression+0x104>
    33f4:	b	33f8 <coda_type_union_set_field_expression+0x228>
    33f8:	movw	r0, #0
    33fc:	str	r0, [fp, #-4]
    3400:	ldr	r0, [fp, #-4]
    3404:	mov	sp, fp
    3408:	pop	{fp, pc}
    340c:	.word	0xfffffe70

00003410 <coda_type_record_validate>:
    3410:	push	{fp, lr}
    3414:	mov	fp, sp
    3418:	sub	sp, sp, #8
    341c:	str	r0, [sp]
    3420:	ldr	r0, [sp]
    3424:	movw	r1, #0
    3428:	cmp	r0, r1
    342c:	bne	3458 <coda_type_record_validate+0x48>
    3430:	mvn	r0, #99	; 0x63
    3434:	movw	r1, #0
    3438:	movt	r1, #0
    343c:	movw	r2, #0
    3440:	movt	r2, #0
    3444:	movw	r3, #1542	; 0x606
    3448:	bl	0 <coda_set_error>
    344c:	mvn	r0, #0
    3450:	str	r0, [sp, #4]
    3454:	b	34f4 <coda_type_record_validate+0xe4>
    3458:	ldr	r0, [sp]
    345c:	ldr	r0, [r0, #64]	; 0x40
    3460:	cmp	r0, #0
    3464:	beq	34ec <coda_type_record_validate+0xdc>
    3468:	ldr	r0, [sp]
    346c:	ldr	r0, [r0, #48]	; 0x30
    3470:	cmp	r0, #0
    3474:	bne	3494 <coda_type_record_validate+0x84>
    3478:	ldr	r0, [pc, #128]	; 3500 <coda_type_record_validate+0xf0>
    347c:	movw	r1, #0
    3480:	movt	r1, #0
    3484:	bl	0 <coda_set_error>
    3488:	mvn	r0, #0
    348c:	str	r0, [sp, #4]
    3490:	b	34f4 <coda_type_record_validate+0xe4>
    3494:	ldr	r0, [sp]
    3498:	ldr	r0, [r0]
    349c:	cmp	r0, #0
    34a0:	beq	34b4 <coda_type_record_validate+0xa4>
    34a4:	ldr	r0, [sp]
    34a8:	ldr	r0, [r0]
    34ac:	cmp	r0, #1
    34b0:	bne	34e8 <coda_type_record_validate+0xd8>
    34b4:	ldr	r0, [sp]
    34b8:	ldr	r0, [r0, #68]	; 0x44
    34bc:	movw	r1, #0
    34c0:	cmp	r0, r1
    34c4:	bne	34e4 <coda_type_record_validate+0xd4>
    34c8:	ldr	r0, [pc, #48]	; 3500 <coda_type_record_validate+0xf0>
    34cc:	movw	r1, #0
    34d0:	movt	r1, #0
    34d4:	bl	0 <coda_set_error>
    34d8:	mvn	r0, #0
    34dc:	str	r0, [sp, #4]
    34e0:	b	34f4 <coda_type_record_validate+0xe4>
    34e4:	b	34e8 <coda_type_record_validate+0xd8>
    34e8:	b	34ec <coda_type_record_validate+0xdc>
    34ec:	movw	r0, #0
    34f0:	str	r0, [sp, #4]
    34f4:	ldr	r0, [sp, #4]
    34f8:	mov	sp, fp
    34fc:	pop	{fp, pc}
    3500:	.word	0xfffffe70

00003504 <coda_type_array_new>:
    3504:	push	{fp, lr}
    3508:	mov	fp, sp
    350c:	sub	sp, sp, #16
    3510:	str	r0, [sp, #8]
    3514:	movw	r0, #120	; 0x78
    3518:	bl	0 <malloc>
    351c:	str	r0, [sp, #4]
    3520:	ldr	r0, [sp, #4]
    3524:	movw	r1, #0
    3528:	cmp	r0, r1
    352c:	bne	3560 <coda_type_array_new+0x5c>
    3530:	mvn	r0, #0
    3534:	movw	r1, #0
    3538:	movt	r1, #0
    353c:	movw	r2, #120	; 0x78
    3540:	movw	r3, #0
    3544:	movt	r3, #0
    3548:	movw	ip, #1581	; 0x62d
    354c:	str	ip, [sp]
    3550:	bl	0 <coda_set_error>
    3554:	movw	r0, #0
    3558:	str	r0, [fp, #-4]
    355c:	b	3614 <coda_type_array_new+0x110>
    3560:	ldr	r0, [sp, #8]
    3564:	ldr	r1, [sp, #4]
    3568:	str	r0, [r1]
    356c:	ldr	r0, [sp, #4]
    3570:	movw	r1, #0
    3574:	str	r1, [r0, #4]
    3578:	ldr	r0, [sp, #4]
    357c:	movw	r1, #1
    3580:	str	r1, [r0, #8]
    3584:	ldr	r0, [sp, #8]
    3588:	cmp	r0, #0
    358c:	beq	359c <coda_type_array_new+0x98>
    3590:	ldr	r0, [sp, #8]
    3594:	cmp	r0, #1
    3598:	bne	35ac <coda_type_array_new+0xa8>
    359c:	ldr	r0, [sp, #4]
    35a0:	movw	r1, #12
    35a4:	str	r1, [r0, #12]
    35a8:	b	35b8 <coda_type_array_new+0xb4>
    35ac:	ldr	r0, [sp, #4]
    35b0:	mvn	r1, #0
    35b4:	str	r1, [r0, #12]
    35b8:	ldr	r0, [sp, #4]
    35bc:	mov	r1, #0
    35c0:	str	r1, [r0, #16]
    35c4:	ldr	r0, [sp, #4]
    35c8:	str	r1, [r0, #20]
    35cc:	ldr	r0, [sp, #4]
    35d0:	mvn	r1, #0
    35d4:	str	r1, [r0, #28]
    35d8:	str	r1, [r0, #24]
    35dc:	ldr	r0, [sp, #4]
    35e0:	movw	r1, #0
    35e4:	str	r1, [r0, #32]
    35e8:	ldr	r0, [sp, #4]
    35ec:	str	r1, [r0, #36]	; 0x24
    35f0:	ldr	r0, [sp, #4]
    35f4:	str	r1, [r0, #40]	; 0x28
    35f8:	ldr	r0, [sp, #4]
    35fc:	movw	r2, #1
    3600:	str	r2, [r0, #44]	; 0x2c
    3604:	ldr	r0, [sp, #4]
    3608:	str	r1, [r0, #48]	; 0x30
    360c:	ldr	r0, [sp, #4]
    3610:	str	r0, [fp, #-4]
    3614:	ldr	r0, [fp, #-4]
    3618:	mov	sp, fp
    361c:	pop	{fp, pc}

00003620 <coda_type_array_set_base_type>:
    3620:	push	{r4, sl, fp, lr}
    3624:	add	fp, sp, #8
    3628:	sub	sp, sp, #24
    362c:	str	r0, [sp, #16]
    3630:	str	r1, [sp, #12]
    3634:	ldr	r0, [sp, #16]
    3638:	movw	r1, #0
    363c:	cmp	r0, r1
    3640:	bne	366c <coda_type_array_set_base_type+0x4c>
    3644:	mvn	r0, #99	; 0x63
    3648:	movw	r1, #0
    364c:	movt	r1, #0
    3650:	movw	r2, #0
    3654:	movt	r2, #0
    3658:	movw	r3, #1611	; 0x64b
    365c:	bl	0 <coda_set_error>
    3660:	mvn	r0, #0
    3664:	str	r0, [fp, #-12]
    3668:	b	381c <coda_type_array_set_base_type+0x1fc>
    366c:	ldr	r0, [sp, #16]
    3670:	ldr	r0, [r0, #40]	; 0x28
    3674:	movw	r1, #0
    3678:	cmp	r0, r1
    367c:	beq	369c <coda_type_array_set_base_type+0x7c>
    3680:	ldr	r0, [pc, #416]	; 3828 <coda_type_array_set_base_type+0x208>
    3684:	movw	r1, #0
    3688:	movt	r1, #0
    368c:	bl	0 <coda_set_error>
    3690:	mvn	r0, #0
    3694:	str	r0, [fp, #-12]
    3698:	b	381c <coda_type_array_set_base_type+0x1fc>
    369c:	ldr	r0, [sp, #16]
    36a0:	ldr	r0, [r0]
    36a4:	ldr	r1, [sp, #12]
    36a8:	ldr	r1, [r1]
    36ac:	cmp	r0, r1
    36b0:	beq	3734 <coda_type_array_set_base_type+0x114>
    36b4:	ldr	r0, [sp, #12]
    36b8:	ldr	r0, [r0]
    36bc:	cmp	r0, #0
    36c0:	bne	36e4 <coda_type_array_set_base_type+0xc4>
    36c4:	ldr	r0, [sp, #16]
    36c8:	ldr	r0, [r0]
    36cc:	cmp	r0, #1
    36d0:	beq	3730 <coda_type_array_set_base_type+0x110>
    36d4:	ldr	r0, [sp, #16]
    36d8:	ldr	r0, [r0]
    36dc:	cmp	r0, #2
    36e0:	beq	3730 <coda_type_array_set_base_type+0x110>
    36e4:	ldr	r0, [sp, #12]
    36e8:	ldr	r0, [r0]
    36ec:	bl	25a4 <coda_type_get_format_name>
    36f0:	ldr	r1, [sp, #16]
    36f4:	ldr	r1, [r1]
    36f8:	str	r0, [sp, #8]
    36fc:	mov	r0, r1
    3700:	bl	25a4 <coda_type_get_format_name>
    3704:	ldr	r1, [pc, #284]	; 3828 <coda_type_array_set_base_type+0x208>
    3708:	str	r0, [sp, #4]
    370c:	mov	r0, r1
    3710:	movw	r1, #0
    3714:	movt	r1, #0
    3718:	ldr	r2, [sp, #8]
    371c:	ldr	r3, [sp, #4]
    3720:	bl	0 <coda_set_error>
    3724:	mvn	r0, #0
    3728:	str	r0, [fp, #-12]
    372c:	b	381c <coda_type_array_set_base_type+0x1fc>
    3730:	b	3734 <coda_type_array_set_base_type+0x114>
    3734:	ldr	r0, [sp, #16]
    3738:	ldr	r0, [r0]
    373c:	cmp	r0, #2
    3740:	bne	3784 <coda_type_array_set_base_type+0x164>
    3744:	ldr	r0, [sp, #12]
    3748:	ldr	r0, [r0]
    374c:	cmp	r0, #2
    3750:	bne	3780 <coda_type_array_set_base_type+0x160>
    3754:	ldr	r0, [sp, #12]
    3758:	ldr	r0, [r0, #8]
    375c:	cmp	r0, #1
    3760:	bne	3780 <coda_type_array_set_base_type+0x160>
    3764:	ldr	r0, [pc, #188]	; 3828 <coda_type_array_set_base_type+0x208>
    3768:	movw	r1, #0
    376c:	movt	r1, #0
    3770:	bl	0 <coda_set_error>
    3774:	mvn	r0, #0
    3778:	str	r0, [fp, #-12]
    377c:	b	381c <coda_type_array_set_base_type+0x1fc>
    3780:	b	3784 <coda_type_array_set_base_type+0x164>
    3784:	ldr	r0, [sp, #12]
    3788:	ldr	r1, [sp, #16]
    378c:	str	r0, [r1, #40]	; 0x28
    3790:	ldr	r0, [sp, #12]
    3794:	ldr	r1, [r0, #4]
    3798:	add	r1, r1, #1
    379c:	str	r1, [r0, #4]
    37a0:	ldr	r0, [sp, #16]
    37a4:	ldr	r0, [r0]
    37a8:	cmp	r0, #0
    37ac:	beq	37c0 <coda_type_array_set_base_type+0x1a0>
    37b0:	ldr	r0, [sp, #16]
    37b4:	ldr	r0, [r0]
    37b8:	cmp	r0, #1
    37bc:	bne	3814 <coda_type_array_set_base_type+0x1f4>
    37c0:	ldr	r0, [sp, #16]
    37c4:	ldr	r0, [r0, #44]	; 0x2c
    37c8:	cmp	r0, #0
    37cc:	blt	3810 <coda_type_array_set_base_type+0x1f0>
    37d0:	ldr	r0, [sp, #12]
    37d4:	ldr	r0, [r0, #28]
    37d8:	cmp	r0, #0
    37dc:	bmi	3810 <coda_type_array_set_base_type+0x1f0>
    37e0:	b	37e4 <coda_type_array_set_base_type+0x1c4>
    37e4:	ldr	r0, [sp, #16]
    37e8:	ldr	r1, [r0, #44]	; 0x2c
    37ec:	asr	r2, r1, #31
    37f0:	ldr	r3, [sp, #12]
    37f4:	ldr	ip, [r3, #24]
    37f8:	ldr	r3, [r3, #28]
    37fc:	umull	lr, r4, r1, ip
    3800:	mla	r1, r1, r3, r4
    3804:	mla	r1, r2, ip, r1
    3808:	str	lr, [r0, #24]
    380c:	str	r1, [r0, #28]
    3810:	b	3814 <coda_type_array_set_base_type+0x1f4>
    3814:	movw	r0, #0
    3818:	str	r0, [fp, #-12]
    381c:	ldr	r0, [fp, #-12]
    3820:	sub	sp, fp, #8
    3824:	pop	{r4, sl, fp, pc}
    3828:	.word	0xfffffe70

0000382c <coda_type_array_add_fixed_dimension>:
    382c:	push	{r4, sl, fp, lr}
    3830:	add	fp, sp, #8
    3834:	sub	sp, sp, #16
    3838:	str	r0, [sp, #8]
    383c:	str	r1, [sp, #4]
    3840:	ldr	r0, [sp, #8]
    3844:	movw	r1, #0
    3848:	cmp	r0, r1
    384c:	bne	3878 <coda_type_array_add_fixed_dimension+0x4c>
    3850:	mvn	r0, #99	; 0x63
    3854:	movw	r1, #0
    3858:	movt	r1, #0
    385c:	movw	r2, #0
    3860:	movt	r2, #0
    3864:	movw	r3, #1658	; 0x67a
    3868:	bl	0 <coda_set_error>
    386c:	mvn	r0, #0
    3870:	str	r0, [sp, #12]
    3874:	b	39dc <coda_type_array_add_fixed_dimension+0x1b0>
    3878:	ldr	r0, [sp, #4]
    387c:	cmp	r0, #0
    3880:	bge	38a4 <coda_type_array_add_fixed_dimension+0x78>
    3884:	ldr	r0, [pc, #348]	; 39e8 <coda_type_array_add_fixed_dimension+0x1bc>
    3888:	ldr	r2, [sp, #4]
    388c:	movw	r1, #0
    3890:	movt	r1, #0
    3894:	bl	0 <coda_set_error>
    3898:	mvn	r0, #0
    389c:	str	r0, [sp, #12]
    38a0:	b	39dc <coda_type_array_add_fixed_dimension+0x1b0>
    38a4:	ldr	r0, [sp, #8]
    38a8:	ldr	r0, [r0, #48]	; 0x30
    38ac:	cmp	r0, #8
    38b0:	bne	38d4 <coda_type_array_add_fixed_dimension+0xa8>
    38b4:	ldr	r0, [pc, #300]	; 39e8 <coda_type_array_add_fixed_dimension+0x1bc>
    38b8:	movw	r1, #0
    38bc:	movt	r1, #0
    38c0:	movw	r2, #8
    38c4:	bl	0 <coda_set_error>
    38c8:	mvn	r0, #0
    38cc:	str	r0, [sp, #12]
    38d0:	b	39dc <coda_type_array_add_fixed_dimension+0x1b0>
    38d4:	ldr	r0, [sp, #4]
    38d8:	ldr	r1, [sp, #8]
    38dc:	ldr	r2, [r1, #48]	; 0x30
    38e0:	add	r1, r1, r2, lsl #2
    38e4:	str	r0, [r1, #52]	; 0x34
    38e8:	ldr	r0, [sp, #8]
    38ec:	add	r1, r0, #84	; 0x54
    38f0:	ldr	r0, [r0, #48]	; 0x30
    38f4:	add	r0, r1, r0, lsl #2
    38f8:	movw	r1, #0
    38fc:	str	r1, [r0]
    3900:	ldr	r0, [sp, #8]
    3904:	ldr	r1, [r0, #48]	; 0x30
    3908:	add	r1, r1, #1
    390c:	str	r1, [r0, #48]	; 0x30
    3910:	ldr	r0, [sp, #8]
    3914:	ldr	r0, [r0, #44]	; 0x2c
    3918:	cmn	r0, #1
    391c:	beq	39d4 <coda_type_array_add_fixed_dimension+0x1a8>
    3920:	ldr	r0, [sp, #8]
    3924:	ldr	r0, [r0, #48]	; 0x30
    3928:	cmp	r0, #1
    392c:	bne	3940 <coda_type_array_add_fixed_dimension+0x114>
    3930:	ldr	r0, [sp, #4]
    3934:	ldr	r1, [sp, #8]
    3938:	str	r0, [r1, #44]	; 0x2c
    393c:	b	3954 <coda_type_array_add_fixed_dimension+0x128>
    3940:	ldr	r0, [sp, #4]
    3944:	ldr	r1, [sp, #8]
    3948:	ldr	r2, [r1, #44]	; 0x2c
    394c:	mul	r0, r2, r0
    3950:	str	r0, [r1, #44]	; 0x2c
    3954:	ldr	r0, [sp, #8]
    3958:	ldr	r0, [r0]
    395c:	cmp	r0, #0
    3960:	beq	3974 <coda_type_array_add_fixed_dimension+0x148>
    3964:	ldr	r0, [sp, #8]
    3968:	ldr	r0, [r0]
    396c:	cmp	r0, #1
    3970:	bne	39d0 <coda_type_array_add_fixed_dimension+0x1a4>
    3974:	ldr	r0, [sp, #8]
    3978:	ldr	r0, [r0, #40]	; 0x28
    397c:	movw	r1, #0
    3980:	cmp	r0, r1
    3984:	beq	39cc <coda_type_array_add_fixed_dimension+0x1a0>
    3988:	ldr	r0, [sp, #8]
    398c:	ldr	r0, [r0, #40]	; 0x28
    3990:	ldr	r0, [r0, #28]
    3994:	cmp	r0, #0
    3998:	bmi	39cc <coda_type_array_add_fixed_dimension+0x1a0>
    399c:	b	39a0 <coda_type_array_add_fixed_dimension+0x174>
    39a0:	ldr	r0, [sp, #8]
    39a4:	ldr	r1, [r0, #40]	; 0x28
    39a8:	ldr	r2, [r0, #44]	; 0x2c
    39ac:	asr	r3, r2, #31
    39b0:	ldr	ip, [r1, #24]
    39b4:	ldr	r1, [r1, #28]
    39b8:	umull	lr, r4, r2, ip
    39bc:	mla	r1, r2, r1, r4
    39c0:	mla	r1, r3, ip, r1
    39c4:	str	lr, [r0, #24]
    39c8:	str	r1, [r0, #28]
    39cc:	b	39d0 <coda_type_array_add_fixed_dimension+0x1a4>
    39d0:	b	39d4 <coda_type_array_add_fixed_dimension+0x1a8>
    39d4:	movw	r0, #0
    39d8:	str	r0, [sp, #12]
    39dc:	ldr	r0, [sp, #12]
    39e0:	sub	sp, fp, #8
    39e4:	pop	{r4, sl, fp, pc}
    39e8:	.word	0xfffffe70

000039ec <coda_type_array_add_variable_dimension>:
    39ec:	push	{fp, lr}
    39f0:	mov	fp, sp
    39f4:	sub	sp, sp, #16
    39f8:	str	r0, [sp, #8]
    39fc:	str	r1, [sp, #4]
    3a00:	ldr	r0, [sp, #8]
    3a04:	movw	r1, #0
    3a08:	cmp	r0, r1
    3a0c:	bne	3a38 <coda_type_array_add_variable_dimension+0x4c>
    3a10:	mvn	r0, #99	; 0x63
    3a14:	movw	r1, #0
    3a18:	movt	r1, #0
    3a1c:	movw	r2, #0
    3a20:	movt	r2, #0
    3a24:	movw	r3, #1705	; 0x6a9
    3a28:	bl	0 <coda_set_error>
    3a2c:	mvn	r0, #0
    3a30:	str	r0, [fp, #-4]
    3a34:	b	3b64 <coda_type_array_add_variable_dimension+0x178>
    3a38:	ldr	r0, [sp, #8]
    3a3c:	ldr	r0, [r0, #48]	; 0x30
    3a40:	cmp	r0, #8
    3a44:	bne	3a68 <coda_type_array_add_variable_dimension+0x7c>
    3a48:	ldr	r0, [pc, #288]	; 3b70 <coda_type_array_add_variable_dimension+0x184>
    3a4c:	movw	r1, #0
    3a50:	movt	r1, #0
    3a54:	movw	r2, #8
    3a58:	bl	0 <coda_set_error>
    3a5c:	mvn	r0, #0
    3a60:	str	r0, [fp, #-4]
    3a64:	b	3b64 <coda_type_array_add_variable_dimension+0x178>
    3a68:	ldr	r0, [sp, #8]
    3a6c:	ldr	r0, [r0]
    3a70:	cmp	r0, #0
    3a74:	beq	3a88 <coda_type_array_add_variable_dimension+0x9c>
    3a78:	ldr	r0, [sp, #8]
    3a7c:	ldr	r0, [r0]
    3a80:	cmp	r0, #1
    3a84:	bne	3ad0 <coda_type_array_add_variable_dimension+0xe4>
    3a88:	ldr	r0, [sp, #4]
    3a8c:	movw	r1, #0
    3a90:	cmp	r0, r1
    3a94:	bne	3acc <coda_type_array_add_variable_dimension+0xe0>
    3a98:	ldr	r0, [sp, #8]
    3a9c:	ldr	r0, [r0]
    3aa0:	bl	25a4 <coda_type_get_format_name>
    3aa4:	ldr	r1, [pc, #196]	; 3b70 <coda_type_array_add_variable_dimension+0x184>
    3aa8:	str	r0, [sp]
    3aac:	mov	r0, r1
    3ab0:	movw	r1, #0
    3ab4:	movt	r1, #0
    3ab8:	ldr	r2, [sp]
    3abc:	bl	0 <coda_set_error>
    3ac0:	mvn	r0, #0
    3ac4:	str	r0, [fp, #-4]
    3ac8:	b	3b64 <coda_type_array_add_variable_dimension+0x178>
    3acc:	b	3ad0 <coda_type_array_add_variable_dimension+0xe4>
    3ad0:	ldr	r0, [sp, #8]
    3ad4:	ldr	r1, [r0, #48]	; 0x30
    3ad8:	add	r0, r0, r1, lsl #2
    3adc:	mvn	r1, #0
    3ae0:	str	r1, [r0, #52]	; 0x34
    3ae4:	ldr	r0, [sp, #4]
    3ae8:	ldr	r1, [sp, #8]
    3aec:	add	r2, r1, #84	; 0x54
    3af0:	ldr	r1, [r1, #48]	; 0x30
    3af4:	add	r1, r2, r1, lsl #2
    3af8:	str	r0, [r1]
    3afc:	ldr	r0, [sp, #8]
    3b00:	ldr	r1, [r0, #48]	; 0x30
    3b04:	add	r1, r1, #1
    3b08:	str	r1, [r0, #48]	; 0x30
    3b0c:	ldr	r0, [sp, #8]
    3b10:	mvn	r1, #0
    3b14:	str	r1, [r0, #44]	; 0x2c
    3b18:	ldr	r0, [sp, #8]
    3b1c:	ldr	r0, [r0]
    3b20:	cmp	r0, #0
    3b24:	beq	3b38 <coda_type_array_add_variable_dimension+0x14c>
    3b28:	ldr	r0, [sp, #8]
    3b2c:	ldr	r0, [r0]
    3b30:	cmp	r0, #1
    3b34:	bne	3b5c <coda_type_array_add_variable_dimension+0x170>
    3b38:	ldr	r0, [sp, #8]
    3b3c:	ldr	r0, [r0, #28]
    3b40:	cmp	r0, #0
    3b44:	bmi	3b5c <coda_type_array_add_variable_dimension+0x170>
    3b48:	b	3b4c <coda_type_array_add_variable_dimension+0x160>
    3b4c:	ldr	r0, [sp, #8]
    3b50:	mvn	r1, #0
    3b54:	str	r1, [r0, #28]
    3b58:	str	r1, [r0, #24]
    3b5c:	movw	r0, #0
    3b60:	str	r0, [fp, #-4]
    3b64:	ldr	r0, [fp, #-4]
    3b68:	mov	sp, fp
    3b6c:	pop	{fp, pc}
    3b70:	.word	0xfffffe70

00003b74 <coda_type_array_validate>:
    3b74:	push	{fp, lr}
    3b78:	mov	fp, sp
    3b7c:	sub	sp, sp, #8
    3b80:	str	r0, [sp]
    3b84:	ldr	r0, [sp]
    3b88:	movw	r1, #0
    3b8c:	cmp	r0, r1
    3b90:	bne	3bbc <coda_type_array_validate+0x48>
    3b94:	mvn	r0, #99	; 0x63
    3b98:	movw	r1, #0
    3b9c:	movt	r1, #0
    3ba0:	movw	r2, #0
    3ba4:	movt	r2, #0
    3ba8:	movw	r3, #1742	; 0x6ce
    3bac:	bl	0 <coda_set_error>
    3bb0:	mvn	r0, #0
    3bb4:	str	r0, [sp, #4]
    3bb8:	b	3bf0 <coda_type_array_validate+0x7c>
    3bbc:	ldr	r0, [sp]
    3bc0:	ldr	r0, [r0, #48]	; 0x30
    3bc4:	cmp	r0, #0
    3bc8:	bne	3be8 <coda_type_array_validate+0x74>
    3bcc:	ldr	r0, [pc, #40]	; 3bfc <coda_type_array_validate+0x88>
    3bd0:	movw	r1, #0
    3bd4:	movt	r1, #0
    3bd8:	bl	0 <coda_set_error>
    3bdc:	mvn	r0, #0
    3be0:	str	r0, [sp, #4]
    3be4:	b	3bf0 <coda_type_array_validate+0x7c>
    3be8:	movw	r0, #0
    3bec:	str	r0, [sp, #4]
    3bf0:	ldr	r0, [sp, #4]
    3bf4:	mov	sp, fp
    3bf8:	pop	{fp, pc}
    3bfc:	.word	0xfffffe70

00003c00 <coda_type_number_new>:
    3c00:	push	{fp, lr}
    3c04:	mov	fp, sp
    3c08:	sub	sp, sp, #24
    3c0c:	str	r0, [fp, #-8]
    3c10:	str	r1, [sp, #12]
    3c14:	ldr	r0, [sp, #12]
    3c18:	cmp	r0, #2
    3c1c:	beq	3c5c <coda_type_number_new+0x5c>
    3c20:	ldr	r0, [sp, #12]
    3c24:	cmp	r0, #3
    3c28:	beq	3c5c <coda_type_number_new+0x5c>
    3c2c:	ldr	r0, [sp, #12]
    3c30:	bl	fc4 <coda_type_get_class_name>
    3c34:	ldr	r1, [pc, #272]	; 3d4c <coda_type_number_new+0x14c>
    3c38:	str	r0, [sp, #4]
    3c3c:	mov	r0, r1
    3c40:	movw	r1, #0
    3c44:	movt	r1, #0
    3c48:	ldr	r2, [sp, #4]
    3c4c:	bl	0 <coda_set_error>
    3c50:	movw	r0, #0
    3c54:	str	r0, [fp, #-4]
    3c58:	b	3d40 <coda_type_number_new+0x140>
    3c5c:	movw	r0, #56	; 0x38
    3c60:	bl	0 <malloc>
    3c64:	str	r0, [sp, #8]
    3c68:	ldr	r0, [sp, #8]
    3c6c:	movw	r1, #0
    3c70:	cmp	r0, r1
    3c74:	bne	3ca8 <coda_type_number_new+0xa8>
    3c78:	mvn	r0, #0
    3c7c:	movw	r1, #0
    3c80:	movt	r1, #0
    3c84:	movw	r2, #56	; 0x38
    3c88:	movw	r3, #0
    3c8c:	movt	r3, #0
    3c90:	movw	ip, #1769	; 0x6e9
    3c94:	str	ip, [sp]
    3c98:	bl	0 <coda_set_error>
    3c9c:	movw	r0, #0
    3ca0:	str	r0, [fp, #-4]
    3ca4:	b	3d40 <coda_type_number_new+0x140>
    3ca8:	ldr	r0, [fp, #-8]
    3cac:	ldr	r1, [sp, #8]
    3cb0:	str	r0, [r1]
    3cb4:	ldr	r0, [sp, #8]
    3cb8:	mov	r1, #0
    3cbc:	str	r1, [r0, #4]
    3cc0:	ldr	r0, [sp, #12]
    3cc4:	ldr	r2, [sp, #8]
    3cc8:	str	r0, [r2, #8]
    3ccc:	ldr	r0, [sp, #12]
    3cd0:	mov	r2, #9
    3cd4:	cmp	r0, #2
    3cd8:	movweq	r2, #6
    3cdc:	ldr	r0, [sp, #8]
    3ce0:	str	r2, [r0, #12]
    3ce4:	ldr	r0, [sp, #8]
    3ce8:	str	r1, [r0, #16]
    3cec:	ldr	r0, [sp, #8]
    3cf0:	str	r1, [r0, #20]
    3cf4:	ldr	r0, [sp, #8]
    3cf8:	mvn	r1, #0
    3cfc:	str	r1, [r0, #28]
    3d00:	str	r1, [r0, #24]
    3d04:	ldr	r0, [sp, #8]
    3d08:	movw	r1, #0
    3d0c:	str	r1, [r0, #32]
    3d10:	ldr	r0, [sp, #8]
    3d14:	str	r1, [r0, #36]	; 0x24
    3d18:	ldr	r0, [sp, #8]
    3d1c:	str	r1, [r0, #40]	; 0x28
    3d20:	ldr	r0, [sp, #8]
    3d24:	str	r1, [r0, #44]	; 0x2c
    3d28:	ldr	r0, [sp, #8]
    3d2c:	str	r1, [r0, #48]	; 0x30
    3d30:	ldr	r0, [sp, #8]
    3d34:	str	r1, [r0, #52]	; 0x34
    3d38:	ldr	r0, [sp, #8]
    3d3c:	str	r0, [fp, #-4]
    3d40:	ldr	r0, [fp, #-4]
    3d44:	mov	sp, fp
    3d48:	pop	{fp, pc}
    3d4c:	.word	0xfffffe70

00003d50 <coda_type_number_set_unit>:
    3d50:	push	{fp, lr}
    3d54:	mov	fp, sp
    3d58:	sub	sp, sp, #16
    3d5c:	str	r0, [sp, #8]
    3d60:	str	r1, [sp, #4]
    3d64:	ldr	r0, [sp, #4]
    3d68:	movw	r1, #0
    3d6c:	cmp	r0, r1
    3d70:	bne	3d9c <coda_type_number_set_unit+0x4c>
    3d74:	mvn	r0, #99	; 0x63
    3d78:	movw	r1, #0
    3d7c:	movt	r1, #0
    3d80:	movw	r2, #0
    3d84:	movt	r2, #0
    3d88:	movw	r3, #1793	; 0x701
    3d8c:	bl	0 <coda_set_error>
    3d90:	mvn	r0, #0
    3d94:	str	r0, [fp, #-4]
    3d98:	b	3e20 <coda_type_number_set_unit+0xd0>
    3d9c:	ldr	r0, [sp, #8]
    3da0:	ldr	r0, [r0, #40]	; 0x28
    3da4:	movw	r1, #0
    3da8:	cmp	r0, r1
    3dac:	beq	3dcc <coda_type_number_set_unit+0x7c>
    3db0:	ldr	r0, [pc, #116]	; 3e2c <coda_type_number_set_unit+0xdc>
    3db4:	movw	r1, #0
    3db8:	movt	r1, #0
    3dbc:	bl	0 <coda_set_error>
    3dc0:	mvn	r0, #0
    3dc4:	str	r0, [fp, #-4]
    3dc8:	b	3e20 <coda_type_number_set_unit+0xd0>
    3dcc:	ldr	r0, [sp, #4]
    3dd0:	bl	0 <strdup>
    3dd4:	ldr	r1, [sp, #8]
    3dd8:	str	r0, [r1, #40]	; 0x28
    3ddc:	ldr	r0, [sp, #8]
    3de0:	ldr	r0, [r0, #40]	; 0x28
    3de4:	movw	r1, #0
    3de8:	cmp	r0, r1
    3dec:	bne	3e18 <coda_type_number_set_unit+0xc8>
    3df0:	mvn	r0, #0
    3df4:	movw	r1, #0
    3df8:	movt	r1, #0
    3dfc:	movw	r2, #0
    3e00:	movt	r2, #0
    3e04:	movw	r3, #1805	; 0x70d
    3e08:	bl	0 <coda_set_error>
    3e0c:	mvn	r0, #0
    3e10:	str	r0, [fp, #-4]
    3e14:	b	3e20 <coda_type_number_set_unit+0xd0>
    3e18:	movw	r0, #0
    3e1c:	str	r0, [fp, #-4]
    3e20:	ldr	r0, [fp, #-4]
    3e24:	mov	sp, fp
    3e28:	pop	{fp, pc}
    3e2c:	.word	0xfffffe70

00003e30 <coda_type_number_set_endianness>:
    3e30:	push	{fp, lr}
    3e34:	mov	fp, sp
    3e38:	sub	sp, sp, #16
    3e3c:	str	r0, [sp, #8]
    3e40:	str	r1, [sp, #4]
    3e44:	ldr	r0, [sp, #8]
    3e48:	movw	r1, #0
    3e4c:	cmp	r0, r1
    3e50:	bne	3e7c <coda_type_number_set_endianness+0x4c>
    3e54:	mvn	r0, #99	; 0x63
    3e58:	movw	r1, #0
    3e5c:	movt	r1, #0
    3e60:	movw	r2, #0
    3e64:	movt	r2, #0
    3e68:	movw	r3, #1816	; 0x718
    3e6c:	bl	0 <coda_set_error>
    3e70:	mvn	r0, #0
    3e74:	str	r0, [fp, #-4]
    3e78:	b	3e90 <coda_type_number_set_endianness+0x60>
    3e7c:	ldr	r0, [sp, #4]
    3e80:	ldr	r1, [sp, #8]
    3e84:	str	r0, [r1, #44]	; 0x2c
    3e88:	movw	r0, #0
    3e8c:	str	r0, [fp, #-4]
    3e90:	ldr	r0, [fp, #-4]
    3e94:	mov	sp, fp
    3e98:	pop	{fp, pc}

00003e9c <coda_type_number_set_conversion>:
    3e9c:	push	{fp, lr}
    3ea0:	mov	fp, sp
    3ea4:	sub	sp, sp, #16
    3ea8:	str	r0, [sp, #8]
    3eac:	str	r1, [sp, #4]
    3eb0:	ldr	r0, [sp, #8]
    3eb4:	movw	r1, #0
    3eb8:	cmp	r0, r1
    3ebc:	bne	3ee8 <coda_type_number_set_conversion+0x4c>
    3ec0:	mvn	r0, #99	; 0x63
    3ec4:	movw	r1, #0
    3ec8:	movt	r1, #0
    3ecc:	movw	r2, #0
    3ed0:	movt	r2, #0
    3ed4:	movw	r3, #1827	; 0x723
    3ed8:	bl	0 <coda_set_error>
    3edc:	mvn	r0, #0
    3ee0:	str	r0, [fp, #-4]
    3ee4:	b	3f2c <coda_type_number_set_conversion+0x90>
    3ee8:	ldr	r0, [sp, #8]
    3eec:	ldr	r0, [r0, #48]	; 0x30
    3ef0:	movw	r1, #0
    3ef4:	cmp	r0, r1
    3ef8:	beq	3f18 <coda_type_number_set_conversion+0x7c>
    3efc:	ldr	r0, [pc, #52]	; 3f38 <coda_type_number_set_conversion+0x9c>
    3f00:	movw	r1, #0
    3f04:	movt	r1, #0
    3f08:	bl	0 <coda_set_error>
    3f0c:	mvn	r0, #0
    3f10:	str	r0, [fp, #-4]
    3f14:	b	3f2c <coda_type_number_set_conversion+0x90>
    3f18:	ldr	r0, [sp, #4]
    3f1c:	ldr	r1, [sp, #8]
    3f20:	str	r0, [r1, #48]	; 0x30
    3f24:	movw	r0, #0
    3f28:	str	r0, [fp, #-4]
    3f2c:	ldr	r0, [fp, #-4]
    3f30:	mov	sp, fp
    3f34:	pop	{fp, pc}
    3f38:	.word	0xfffffe70

00003f3c <coda_type_number_add_ascii_float_mapping>:
    3f3c:	push	{fp, lr}
    3f40:	mov	fp, sp
    3f44:	sub	sp, sp, #16
    3f48:	str	r0, [sp, #8]
    3f4c:	str	r1, [sp, #4]
    3f50:	ldr	r0, [sp, #8]
    3f54:	movw	r1, #0
    3f58:	cmp	r0, r1
    3f5c:	bne	3f88 <coda_type_number_add_ascii_float_mapping+0x4c>
    3f60:	mvn	r0, #99	; 0x63
    3f64:	movw	r1, #0
    3f68:	movt	r1, #0
    3f6c:	movw	r2, #0
    3f70:	movt	r2, #0
    3f74:	movw	r3, #1843	; 0x733
    3f78:	bl	0 <coda_set_error>
    3f7c:	mvn	r0, #0
    3f80:	str	r0, [fp, #-4]
    3f84:	b	4004 <coda_type_number_add_ascii_float_mapping+0xc8>
    3f88:	ldr	r0, [sp, #4]
    3f8c:	movw	r1, #0
    3f90:	cmp	r0, r1
    3f94:	bne	3fc0 <coda_type_number_add_ascii_float_mapping+0x84>
    3f98:	mvn	r0, #99	; 0x63
    3f9c:	movw	r1, #0
    3fa0:	movt	r1, #0
    3fa4:	movw	r2, #0
    3fa8:	movt	r2, #0
    3fac:	movw	r3, #1848	; 0x738
    3fb0:	bl	0 <coda_set_error>
    3fb4:	mvn	r0, #0
    3fb8:	str	r0, [fp, #-4]
    3fbc:	b	4004 <coda_type_number_add_ascii_float_mapping+0xc8>
    3fc0:	ldr	r0, [sp, #8]
    3fc4:	ldr	r0, [r0, #8]
    3fc8:	cmp	r0, #3
    3fcc:	beq	3fec <coda_type_number_add_ascii_float_mapping+0xb0>
    3fd0:	ldr	r0, [pc, #56]	; 4010 <coda_type_number_add_ascii_float_mapping+0xd4>
    3fd4:	movw	r1, #0
    3fd8:	movt	r1, #0
    3fdc:	bl	0 <coda_set_error>
    3fe0:	mvn	r0, #0
    3fe4:	str	r0, [fp, #-4]
    3fe8:	b	4004 <coda_type_number_add_ascii_float_mapping+0xc8>
    3fec:	ldr	r0, [sp, #8]
    3ff0:	ldr	r1, [sp, #8]
    3ff4:	add	r1, r1, #52	; 0x34
    3ff8:	ldr	r2, [sp, #4]
    3ffc:	bl	4014 <mapping_type_add_mapping>
    4000:	str	r0, [fp, #-4]
    4004:	ldr	r0, [fp, #-4]
    4008:	mov	sp, fp
    400c:	pop	{fp, pc}
    4010:	.word	0xfffffe70

00004014 <mapping_type_add_mapping>:
    4014:	push	{fp, lr}
    4018:	mov	fp, sp
    401c:	sub	sp, sp, #32
    4020:	str	r0, [fp, #-8]
    4024:	str	r1, [fp, #-12]
    4028:	str	r2, [sp, #16]
    402c:	ldr	r0, [sp, #16]
    4030:	movw	r1, #0
    4034:	cmp	r0, r1
    4038:	bne	4064 <mapping_type_add_mapping+0x50>
    403c:	mvn	r0, #99	; 0x63
    4040:	movw	r1, #0
    4044:	movt	r1, #0
    4048:	movw	r2, #0
    404c:	movt	r2, #0
    4050:	movw	r3, #348	; 0x15c
    4054:	bl	0 <coda_set_error>
    4058:	mvn	r0, #0
    405c:	str	r0, [fp, #-4]
    4060:	b	42c8 <mapping_type_add_mapping+0x2b4>
    4064:	ldr	r0, [fp, #-12]
    4068:	movw	r1, #0
    406c:	cmp	r0, r1
    4070:	bne	409c <mapping_type_add_mapping+0x88>
    4074:	mvn	r0, #99	; 0x63
    4078:	movw	r1, #0
    407c:	movt	r1, #0
    4080:	movw	r2, #0
    4084:	movt	r2, #0
    4088:	movw	r3, #353	; 0x161
    408c:	bl	0 <coda_set_error>
    4090:	mvn	r0, #0
    4094:	str	r0, [fp, #-4]
    4098:	b	42c8 <mapping_type_add_mapping+0x2b4>
    409c:	ldr	r0, [fp, #-12]
    40a0:	ldr	r0, [r0]
    40a4:	movw	r1, #0
    40a8:	cmp	r0, r1
    40ac:	bne	4178 <mapping_type_add_mapping+0x164>
    40b0:	movw	r0, #16
    40b4:	bl	0 <malloc>
    40b8:	ldr	r1, [fp, #-12]
    40bc:	str	r0, [r1]
    40c0:	ldr	r0, [fp, #-12]
    40c4:	ldr	r0, [r0]
    40c8:	movw	r1, #0
    40cc:	cmp	r0, r1
    40d0:	bne	4104 <mapping_type_add_mapping+0xf0>
    40d4:	mvn	r0, #0
    40d8:	movw	r1, #0
    40dc:	movt	r1, #0
    40e0:	movw	r2, #16
    40e4:	movw	r3, #0
    40e8:	movt	r3, #0
    40ec:	movw	ip, #363	; 0x16b
    40f0:	str	ip, [sp]
    40f4:	bl	0 <coda_set_error>
    40f8:	mvn	r0, #0
    40fc:	str	r0, [fp, #-4]
    4100:	b	42c8 <mapping_type_add_mapping+0x2b4>
    4104:	ldr	r0, [fp, #-8]
    4108:	ldr	r0, [r0, #28]
    410c:	cmp	r0, #0
    4110:	bmi	4130 <mapping_type_add_mapping+0x11c>
    4114:	b	4118 <mapping_type_add_mapping+0x104>
    4118:	ldr	r0, [fp, #-8]
    411c:	ldr	r1, [r0, #24]
    4120:	ldr	r0, [r0, #28]
    4124:	str	r1, [sp, #8]
    4128:	str	r0, [sp, #4]
    412c:	b	4144 <mapping_type_add_mapping+0x130>
    4130:	mvn	r0, #0
    4134:	mov	r1, r0
    4138:	str	r1, [sp, #8]
    413c:	str	r0, [sp, #4]
    4140:	b	4144 <mapping_type_add_mapping+0x130>
    4144:	ldr	r0, [sp, #4]
    4148:	ldr	r1, [sp, #8]
    414c:	ldr	r2, [fp, #-12]
    4150:	ldr	r2, [r2]
    4154:	str	r0, [r2, #4]
    4158:	str	r1, [r2]
    415c:	ldr	r0, [fp, #-12]
    4160:	ldr	r0, [r0]
    4164:	movw	r1, #0
    4168:	str	r1, [r0, #8]
    416c:	ldr	r0, [fp, #-12]
    4170:	ldr	r0, [r0]
    4174:	str	r1, [r0, #12]
    4178:	ldr	r0, [fp, #-12]
    417c:	ldr	r0, [r0]
    4180:	ldr	r0, [r0, #8]
    4184:	asr	r1, r0, #31
    4188:	add	r1, r0, r1, lsr #28
    418c:	bic	r1, r1, #15
    4190:	sub	r0, r0, r1
    4194:	cmp	r0, #0
    4198:	bne	421c <mapping_type_add_mapping+0x208>
    419c:	ldr	r0, [fp, #-12]
    41a0:	ldr	r0, [r0]
    41a4:	ldr	r1, [r0, #8]
    41a8:	ldr	r0, [r0, #12]
    41ac:	add	r1, r1, #16
    41b0:	lsl	r1, r1, #2
    41b4:	bl	0 <realloc>
    41b8:	str	r0, [sp, #12]
    41bc:	ldr	r0, [sp, #12]
    41c0:	movw	r1, #0
    41c4:	cmp	r0, r1
    41c8:	bne	420c <mapping_type_add_mapping+0x1f8>
    41cc:	ldr	r0, [fp, #-12]
    41d0:	ldr	r0, [r0]
    41d4:	ldr	r0, [r0, #8]
    41d8:	add	r0, r0, #16
    41dc:	lsl	r2, r0, #2
    41e0:	mvn	r0, #0
    41e4:	movw	r1, #0
    41e8:	movt	r1, #0
    41ec:	movw	r3, #0
    41f0:	movt	r3, #0
    41f4:	movw	ip, #380	; 0x17c
    41f8:	str	ip, [sp]
    41fc:	bl	0 <coda_set_error>
    4200:	mvn	r0, #0
    4204:	str	r0, [fp, #-4]
    4208:	b	42c8 <mapping_type_add_mapping+0x2b4>
    420c:	ldr	r0, [sp, #12]
    4210:	ldr	r1, [fp, #-12]
    4214:	ldr	r1, [r1]
    4218:	str	r0, [r1, #12]
    421c:	ldr	r0, [sp, #16]
    4220:	ldr	r1, [fp, #-12]
    4224:	ldr	r1, [r1]
    4228:	ldr	r2, [r1, #8]
    422c:	ldr	r1, [r1, #12]
    4230:	str	r0, [r1, r2, lsl #2]
    4234:	ldr	r0, [fp, #-12]
    4238:	ldr	r0, [r0]
    423c:	ldr	r1, [r0, #8]
    4240:	add	r1, r1, #1
    4244:	str	r1, [r0, #8]
    4248:	ldr	r0, [fp, #-8]
    424c:	ldr	r0, [r0, #28]
    4250:	cmp	r0, #0
    4254:	bmi	42c0 <mapping_type_add_mapping+0x2ac>
    4258:	b	425c <mapping_type_add_mapping+0x248>
    425c:	ldr	r0, [fp, #-12]
    4260:	ldr	r0, [r0]
    4264:	ldr	r0, [r0, #4]
    4268:	cmp	r0, #0
    426c:	bmi	42c0 <mapping_type_add_mapping+0x2ac>
    4270:	b	4274 <mapping_type_add_mapping+0x260>
    4274:	ldr	r0, [sp, #16]
    4278:	ldr	r0, [r0]
    427c:	asr	r1, r0, #31
    4280:	ldr	r2, [fp, #-12]
    4284:	ldr	r2, [r2]
    4288:	ldr	r3, [r2]
    428c:	ldr	r2, [r2, #4]
    4290:	lsr	r3, r3, #3
    4294:	orr	r3, r3, r2, lsl #29
    4298:	eor	r1, r1, r2, asr #3
    429c:	eor	r0, r0, r3
    42a0:	orr	r0, r0, r1
    42a4:	cmp	r0, #0
    42a8:	beq	42c0 <mapping_type_add_mapping+0x2ac>
    42ac:	b	42b0 <mapping_type_add_mapping+0x29c>
    42b0:	ldr	r0, [fp, #-8]
    42b4:	mvn	r1, #0
    42b8:	str	r1, [r0, #28]
    42bc:	str	r1, [r0, #24]
    42c0:	movw	r0, #0
    42c4:	str	r0, [fp, #-4]
    42c8:	ldr	r0, [fp, #-4]
    42cc:	mov	sp, fp
    42d0:	pop	{fp, pc}

000042d4 <coda_type_number_add_ascii_integer_mapping>:
    42d4:	push	{fp, lr}
    42d8:	mov	fp, sp
    42dc:	sub	sp, sp, #16
    42e0:	str	r0, [sp, #8]
    42e4:	str	r1, [sp, #4]
    42e8:	ldr	r0, [sp, #8]
    42ec:	movw	r1, #0
    42f0:	cmp	r0, r1
    42f4:	bne	4320 <coda_type_number_add_ascii_integer_mapping+0x4c>
    42f8:	mvn	r0, #99	; 0x63
    42fc:	movw	r1, #0
    4300:	movt	r1, #0
    4304:	movw	r2, #0
    4308:	movt	r2, #0
    430c:	movw	r3, #1863	; 0x747
    4310:	bl	0 <coda_set_error>
    4314:	mvn	r0, #0
    4318:	str	r0, [fp, #-4]
    431c:	b	439c <coda_type_number_add_ascii_integer_mapping+0xc8>
    4320:	ldr	r0, [sp, #4]
    4324:	movw	r1, #0
    4328:	cmp	r0, r1
    432c:	bne	4358 <coda_type_number_add_ascii_integer_mapping+0x84>
    4330:	mvn	r0, #99	; 0x63
    4334:	movw	r1, #0
    4338:	movt	r1, #0
    433c:	movw	r2, #0
    4340:	movt	r2, #0
    4344:	movw	r3, #1868	; 0x74c
    4348:	bl	0 <coda_set_error>
    434c:	mvn	r0, #0
    4350:	str	r0, [fp, #-4]
    4354:	b	439c <coda_type_number_add_ascii_integer_mapping+0xc8>
    4358:	ldr	r0, [sp, #8]
    435c:	ldr	r0, [r0, #8]
    4360:	cmp	r0, #2
    4364:	beq	4384 <coda_type_number_add_ascii_integer_mapping+0xb0>
    4368:	ldr	r0, [pc, #56]	; 43a8 <coda_type_number_add_ascii_integer_mapping+0xd4>
    436c:	movw	r1, #0
    4370:	movt	r1, #0
    4374:	bl	0 <coda_set_error>
    4378:	mvn	r0, #0
    437c:	str	r0, [fp, #-4]
    4380:	b	439c <coda_type_number_add_ascii_integer_mapping+0xc8>
    4384:	ldr	r0, [sp, #8]
    4388:	ldr	r1, [sp, #8]
    438c:	add	r1, r1, #52	; 0x34
    4390:	ldr	r2, [sp, #4]
    4394:	bl	4014 <mapping_type_add_mapping>
    4398:	str	r0, [fp, #-4]
    439c:	ldr	r0, [fp, #-4]
    43a0:	mov	sp, fp
    43a4:	pop	{fp, pc}
    43a8:	.word	0xfffffe70

000043ac <coda_type_number_validate>:
    43ac:	push	{fp, lr}
    43b0:	mov	fp, sp
    43b4:	sub	sp, sp, #64	; 0x40
    43b8:	str	r0, [fp, #-8]
    43bc:	ldr	r0, [fp, #-8]
    43c0:	movw	r1, #0
    43c4:	cmp	r0, r1
    43c8:	bne	43f4 <coda_type_number_validate+0x48>
    43cc:	mvn	r0, #99	; 0x63
    43d0:	movw	r1, #0
    43d4:	movt	r1, #0
    43d8:	movw	r2, #0
    43dc:	movt	r2, #0
    43e0:	movw	r3, #1883	; 0x75b
    43e4:	bl	0 <coda_set_error>
    43e8:	mvn	r0, #0
    43ec:	str	r0, [fp, #-4]
    43f0:	b	47a4 <coda_type_number_validate+0x3f8>
    43f4:	ldr	r0, [fp, #-8]
    43f8:	ldr	r0, [r0]
    43fc:	cmp	r0, #1
    4400:	bne	479c <coda_type_number_validate+0x3f0>
    4404:	ldr	r0, [fp, #-8]
    4408:	ldr	r0, [r0, #28]
    440c:	cmp	r0, #0
    4410:	bmi	46e8 <coda_type_number_validate+0x33c>
    4414:	b	4418 <coda_type_number_validate+0x6c>
    4418:	ldr	r0, [fp, #-8]
    441c:	ldr	r0, [r0, #12]
    4420:	cmp	r0, #9
    4424:	str	r0, [fp, #-12]
    4428:	bhi	46c4 <coda_type_number_validate+0x318>
    442c:	add	r0, pc, #8
    4430:	ldr	r1, [fp, #-12]
    4434:	ldr	r0, [r0, r1, lsl #2]
    4438:	mov	pc, r0
    443c:	.word	0x00004464
    4440:	.word	0x00004464
    4444:	.word	0x000044c8
    4448:	.word	0x000044c8
    444c:	.word	0x0000452c
    4450:	.word	0x0000452c
    4454:	.word	0x00004590
    4458:	.word	0x00004590
    445c:	.word	0x000045f4
    4460:	.word	0x0000465c
    4464:	ldr	r0, [fp, #-8]
    4468:	ldr	r1, [r0, #24]
    446c:	ldr	r0, [r0, #28]
    4470:	subs	r1, r1, #9
    4474:	sbcs	r0, r0, #0
    4478:	blt	44c4 <coda_type_number_validate+0x118>
    447c:	b	4480 <coda_type_number_validate+0xd4>
    4480:	ldr	r0, [fp, #-8]
    4484:	ldr	r2, [r0, #24]
    4488:	ldr	r0, [fp, #-8]
    448c:	ldr	r0, [r0, #12]
    4490:	str	r2, [fp, #-16]
    4494:	bl	1090 <coda_type_get_native_type_name>
    4498:	ldr	r1, [pc, #784]	; 47b0 <coda_type_number_validate+0x404>
    449c:	str	r0, [fp, #-20]	; 0xffffffec
    44a0:	mov	r0, r1
    44a4:	movw	r1, #0
    44a8:	movt	r1, #0
    44ac:	ldr	r2, [fp, #-16]
    44b0:	ldr	r3, [fp, #-20]	; 0xffffffec
    44b4:	bl	0 <coda_set_error>
    44b8:	mvn	r0, #0
    44bc:	str	r0, [fp, #-4]
    44c0:	b	47a4 <coda_type_number_validate+0x3f8>
    44c4:	b	46e4 <coda_type_number_validate+0x338>
    44c8:	ldr	r0, [fp, #-8]
    44cc:	ldr	r1, [r0, #24]
    44d0:	ldr	r0, [r0, #28]
    44d4:	subs	r1, r1, #17
    44d8:	sbcs	r0, r0, #0
    44dc:	blt	4528 <coda_type_number_validate+0x17c>
    44e0:	b	44e4 <coda_type_number_validate+0x138>
    44e4:	ldr	r0, [fp, #-8]
    44e8:	ldr	r2, [r0, #24]
    44ec:	ldr	r0, [fp, #-8]
    44f0:	ldr	r0, [r0, #12]
    44f4:	str	r2, [fp, #-24]	; 0xffffffe8
    44f8:	bl	1090 <coda_type_get_native_type_name>
    44fc:	ldr	r1, [pc, #684]	; 47b0 <coda_type_number_validate+0x404>
    4500:	str	r0, [fp, #-28]	; 0xffffffe4
    4504:	mov	r0, r1
    4508:	movw	r1, #0
    450c:	movt	r1, #0
    4510:	ldr	r2, [fp, #-24]	; 0xffffffe8
    4514:	ldr	r3, [fp, #-28]	; 0xffffffe4
    4518:	bl	0 <coda_set_error>
    451c:	mvn	r0, #0
    4520:	str	r0, [fp, #-4]
    4524:	b	47a4 <coda_type_number_validate+0x3f8>
    4528:	b	46e4 <coda_type_number_validate+0x338>
    452c:	ldr	r0, [fp, #-8]
    4530:	ldr	r1, [r0, #24]
    4534:	ldr	r0, [r0, #28]
    4538:	subs	r1, r1, #33	; 0x21
    453c:	sbcs	r0, r0, #0
    4540:	blt	458c <coda_type_number_validate+0x1e0>
    4544:	b	4548 <coda_type_number_validate+0x19c>
    4548:	ldr	r0, [fp, #-8]
    454c:	ldr	r2, [r0, #24]
    4550:	ldr	r0, [fp, #-8]
    4554:	ldr	r0, [r0, #12]
    4558:	str	r2, [sp, #32]
    455c:	bl	1090 <coda_type_get_native_type_name>
    4560:	ldr	r1, [pc, #584]	; 47b0 <coda_type_number_validate+0x404>
    4564:	str	r0, [sp, #28]
    4568:	mov	r0, r1
    456c:	movw	r1, #0
    4570:	movt	r1, #0
    4574:	ldr	r2, [sp, #32]
    4578:	ldr	r3, [sp, #28]
    457c:	bl	0 <coda_set_error>
    4580:	mvn	r0, #0
    4584:	str	r0, [fp, #-4]
    4588:	b	47a4 <coda_type_number_validate+0x3f8>
    458c:	b	46e4 <coda_type_number_validate+0x338>
    4590:	ldr	r0, [fp, #-8]
    4594:	ldr	r1, [r0, #24]
    4598:	ldr	r0, [r0, #28]
    459c:	subs	r1, r1, #65	; 0x41
    45a0:	sbcs	r0, r0, #0
    45a4:	blt	45f0 <coda_type_number_validate+0x244>
    45a8:	b	45ac <coda_type_number_validate+0x200>
    45ac:	ldr	r0, [fp, #-8]
    45b0:	ldr	r2, [r0, #24]
    45b4:	ldr	r0, [fp, #-8]
    45b8:	ldr	r0, [r0, #12]
    45bc:	str	r2, [sp, #24]
    45c0:	bl	1090 <coda_type_get_native_type_name>
    45c4:	ldr	r1, [pc, #484]	; 47b0 <coda_type_number_validate+0x404>
    45c8:	str	r0, [sp, #20]
    45cc:	mov	r0, r1
    45d0:	movw	r1, #0
    45d4:	movt	r1, #0
    45d8:	ldr	r2, [sp, #24]
    45dc:	ldr	r3, [sp, #20]
    45e0:	bl	0 <coda_set_error>
    45e4:	mvn	r0, #0
    45e8:	str	r0, [fp, #-4]
    45ec:	b	47a4 <coda_type_number_validate+0x3f8>
    45f0:	b	46e4 <coda_type_number_validate+0x338>
    45f4:	ldr	r0, [fp, #-8]
    45f8:	ldr	r1, [r0, #24]
    45fc:	ldr	r0, [r0, #28]
    4600:	eor	r1, r1, #32
    4604:	orr	r0, r1, r0
    4608:	cmp	r0, #0
    460c:	beq	4658 <coda_type_number_validate+0x2ac>
    4610:	b	4614 <coda_type_number_validate+0x268>
    4614:	ldr	r0, [fp, #-8]
    4618:	ldr	r2, [r0, #24]
    461c:	ldr	r0, [fp, #-8]
    4620:	ldr	r0, [r0, #12]
    4624:	str	r2, [sp, #16]
    4628:	bl	1090 <coda_type_get_native_type_name>
    462c:	ldr	r1, [pc, #380]	; 47b0 <coda_type_number_validate+0x404>
    4630:	str	r0, [sp, #12]
    4634:	mov	r0, r1
    4638:	movw	r1, #0
    463c:	movt	r1, #0
    4640:	ldr	r2, [sp, #16]
    4644:	ldr	r3, [sp, #12]
    4648:	bl	0 <coda_set_error>
    464c:	mvn	r0, #0
    4650:	str	r0, [fp, #-4]
    4654:	b	47a4 <coda_type_number_validate+0x3f8>
    4658:	b	46e4 <coda_type_number_validate+0x338>
    465c:	ldr	r0, [fp, #-8]
    4660:	ldr	r1, [r0, #24]
    4664:	ldr	r0, [r0, #28]
    4668:	eor	r1, r1, #64	; 0x40
    466c:	orr	r0, r1, r0
    4670:	cmp	r0, #0
    4674:	beq	46c0 <coda_type_number_validate+0x314>
    4678:	b	467c <coda_type_number_validate+0x2d0>
    467c:	ldr	r0, [fp, #-8]
    4680:	ldr	r2, [r0, #24]
    4684:	ldr	r0, [fp, #-8]
    4688:	ldr	r0, [r0, #12]
    468c:	str	r2, [sp, #8]
    4690:	bl	1090 <coda_type_get_native_type_name>
    4694:	ldr	r1, [pc, #276]	; 47b0 <coda_type_number_validate+0x404>
    4698:	str	r0, [sp, #4]
    469c:	mov	r0, r1
    46a0:	movw	r1, #0
    46a4:	movt	r1, #0
    46a8:	ldr	r2, [sp, #8]
    46ac:	ldr	r3, [sp, #4]
    46b0:	bl	0 <coda_set_error>
    46b4:	mvn	r0, #0
    46b8:	str	r0, [fp, #-4]
    46bc:	b	47a4 <coda_type_number_validate+0x3f8>
    46c0:	b	46e4 <coda_type_number_validate+0x338>
    46c4:	movw	r0, #0
    46c8:	movt	r0, #0
    46cc:	movw	r1, #0
    46d0:	movt	r1, #0
    46d4:	movw	r2, #1951	; 0x79f
    46d8:	movw	r3, #0
    46dc:	movt	r3, #0
    46e0:	bl	0 <__assert_fail>
    46e4:	b	471c <coda_type_number_validate+0x370>
    46e8:	ldr	r0, [fp, #-8]
    46ec:	ldr	r0, [r0, #32]
    46f0:	movw	r1, #0
    46f4:	cmp	r0, r1
    46f8:	bne	4718 <coda_type_number_validate+0x36c>
    46fc:	ldr	r0, [pc, #172]	; 47b0 <coda_type_number_validate+0x404>
    4700:	movw	r1, #0
    4704:	movt	r1, #0
    4708:	bl	0 <coda_set_error>
    470c:	mvn	r0, #0
    4710:	str	r0, [fp, #-4]
    4714:	b	47a4 <coda_type_number_validate+0x3f8>
    4718:	b	471c <coda_type_number_validate+0x370>
    471c:	ldr	r0, [fp, #-8]
    4720:	ldr	r0, [r0, #44]	; 0x2c
    4724:	cmp	r0, #1
    4728:	bne	4798 <coda_type_number_validate+0x3ec>
    472c:	ldr	r0, [fp, #-8]
    4730:	ldr	r0, [r0, #28]
    4734:	cmp	r0, #0
    4738:	bmi	4798 <coda_type_number_validate+0x3ec>
    473c:	b	4740 <coda_type_number_validate+0x394>
    4740:	ldr	r0, [fp, #-8]
    4744:	ldr	r1, [r0, #24]
    4748:	ldr	r0, [r0, #28]
    474c:	asr	r2, r0, #31
    4750:	adds	r2, r1, r2, lsr #29
    4754:	adc	r3, r0, #0
    4758:	bic	r2, r2, #7
    475c:	subs	r1, r1, r2
    4760:	sbc	r0, r0, r3
    4764:	orr	r0, r1, r0
    4768:	cmp	r0, #0
    476c:	beq	4798 <coda_type_number_validate+0x3ec>
    4770:	b	4774 <coda_type_number_validate+0x3c8>
    4774:	ldr	r0, [pc, #52]	; 47b0 <coda_type_number_validate+0x404>
    4778:	ldr	r1, [fp, #-8]
    477c:	ldr	r2, [r1, #24]
    4780:	movw	r1, #0
    4784:	movt	r1, #0
    4788:	bl	0 <coda_set_error>
    478c:	mvn	r0, #0
    4790:	str	r0, [fp, #-4]
    4794:	b	47a4 <coda_type_number_validate+0x3f8>
    4798:	b	479c <coda_type_number_validate+0x3f0>
    479c:	movw	r0, #0
    47a0:	str	r0, [fp, #-4]
    47a4:	ldr	r0, [fp, #-4]
    47a8:	mov	sp, fp
    47ac:	pop	{fp, pc}
    47b0:	.word	0xfffffe70

000047b4 <coda_type_text_new>:
    47b4:	push	{fp, lr}
    47b8:	mov	fp, sp
    47bc:	sub	sp, sp, #16
    47c0:	str	r0, [sp, #8]
    47c4:	movw	r0, #48	; 0x30
    47c8:	bl	0 <malloc>
    47cc:	str	r0, [sp, #4]
    47d0:	ldr	r0, [sp, #4]
    47d4:	movw	r1, #0
    47d8:	cmp	r0, r1
    47dc:	bne	4810 <coda_type_text_new+0x5c>
    47e0:	mvn	r0, #0
    47e4:	movw	r1, #0
    47e8:	movt	r1, #0
    47ec:	movw	r2, #48	; 0x30
    47f0:	movw	r3, #0
    47f4:	movt	r3, #0
    47f8:	movw	ip, #1980	; 0x7bc
    47fc:	str	ip, [sp]
    4800:	bl	0 <coda_set_error>
    4804:	movw	r0, #0
    4808:	str	r0, [fp, #-4]
    480c:	b	488c <coda_type_text_new+0xd8>
    4810:	ldr	r0, [sp, #8]
    4814:	ldr	r1, [sp, #4]
    4818:	str	r0, [r1]
    481c:	ldr	r0, [sp, #4]
    4820:	mov	r1, #0
    4824:	str	r1, [r0, #4]
    4828:	ldr	r0, [sp, #4]
    482c:	mov	r2, #4
    4830:	str	r2, [r0, #8]
    4834:	ldr	r0, [sp, #4]
    4838:	mov	r2, #11
    483c:	str	r2, [r0, #12]
    4840:	ldr	r0, [sp, #4]
    4844:	str	r1, [r0, #16]
    4848:	ldr	r0, [sp, #4]
    484c:	str	r1, [r0, #20]
    4850:	ldr	r0, [sp, #4]
    4854:	mvn	r1, #0
    4858:	str	r1, [r0, #28]
    485c:	str	r1, [r0, #24]
    4860:	ldr	r0, [sp, #4]
    4864:	movw	r1, #0
    4868:	str	r1, [r0, #32]
    486c:	ldr	r0, [sp, #4]
    4870:	str	r1, [r0, #36]	; 0x24
    4874:	ldr	r0, [sp, #4]
    4878:	str	r1, [r0, #40]	; 0x28
    487c:	ldr	r0, [sp, #4]
    4880:	str	r1, [r0, #44]	; 0x2c
    4884:	ldr	r0, [sp, #4]
    4888:	str	r0, [fp, #-4]
    488c:	ldr	r0, [fp, #-4]
    4890:	mov	sp, fp
    4894:	pop	{fp, pc}

00004898 <coda_type_text_set_fixed_value>:
    4898:	push	{fp, lr}
    489c:	mov	fp, sp
    48a0:	sub	sp, sp, #16
    48a4:	str	r0, [sp, #8]
    48a8:	str	r1, [sp, #4]
    48ac:	ldr	r0, [sp, #8]
    48b0:	movw	r1, #0
    48b4:	cmp	r0, r1
    48b8:	bne	48e4 <coda_type_text_set_fixed_value+0x4c>
    48bc:	mvn	r0, #99	; 0x63
    48c0:	movw	r1, #0
    48c4:	movt	r1, #0
    48c8:	movw	r2, #0
    48cc:	movt	r2, #0
    48d0:	movw	r3, #2002	; 0x7d2
    48d4:	bl	0 <coda_set_error>
    48d8:	mvn	r0, #0
    48dc:	str	r0, [fp, #-4]
    48e0:	b	49a0 <coda_type_text_set_fixed_value+0x108>
    48e4:	ldr	r0, [sp, #4]
    48e8:	movw	r1, #0
    48ec:	cmp	r0, r1
    48f0:	bne	491c <coda_type_text_set_fixed_value+0x84>
    48f4:	mvn	r0, #99	; 0x63
    48f8:	movw	r1, #0
    48fc:	movt	r1, #0
    4900:	movw	r2, #0
    4904:	movt	r2, #0
    4908:	movw	r3, #2007	; 0x7d7
    490c:	bl	0 <coda_set_error>
    4910:	mvn	r0, #0
    4914:	str	r0, [fp, #-4]
    4918:	b	49a0 <coda_type_text_set_fixed_value+0x108>
    491c:	ldr	r0, [sp, #8]
    4920:	ldr	r0, [r0, #40]	; 0x28
    4924:	movw	r1, #0
    4928:	cmp	r0, r1
    492c:	beq	494c <coda_type_text_set_fixed_value+0xb4>
    4930:	ldr	r0, [pc, #116]	; 49ac <coda_type_text_set_fixed_value+0x114>
    4934:	movw	r1, #0
    4938:	movt	r1, #0
    493c:	bl	0 <coda_set_error>
    4940:	mvn	r0, #0
    4944:	str	r0, [fp, #-4]
    4948:	b	49a0 <coda_type_text_set_fixed_value+0x108>
    494c:	ldr	r0, [sp, #4]
    4950:	bl	0 <strdup>
    4954:	ldr	r1, [sp, #8]
    4958:	str	r0, [r1, #40]	; 0x28
    495c:	ldr	r0, [sp, #8]
    4960:	ldr	r0, [r0, #40]	; 0x28
    4964:	movw	r1, #0
    4968:	cmp	r0, r1
    496c:	bne	4998 <coda_type_text_set_fixed_value+0x100>
    4970:	mvn	r0, #0
    4974:	movw	r1, #0
    4978:	movt	r1, #0
    497c:	movw	r2, #0
    4980:	movt	r2, #0
    4984:	movw	r3, #2019	; 0x7e3
    4988:	bl	0 <coda_set_error>
    498c:	mvn	r0, #0
    4990:	str	r0, [fp, #-4]
    4994:	b	49a0 <coda_type_text_set_fixed_value+0x108>
    4998:	movw	r0, #0
    499c:	str	r0, [fp, #-4]
    49a0:	ldr	r0, [fp, #-4]
    49a4:	mov	sp, fp
    49a8:	pop	{fp, pc}
    49ac:	.word	0xfffffe70

000049b0 <coda_type_text_set_special_text_type>:
    49b0:	push	{fp, lr}
    49b4:	mov	fp, sp
    49b8:	sub	sp, sp, #16
    49bc:	str	r0, [sp, #8]
    49c0:	str	r1, [sp, #4]
    49c4:	ldr	r0, [sp, #8]
    49c8:	movw	r1, #0
    49cc:	cmp	r0, r1
    49d0:	bne	49fc <coda_type_text_set_special_text_type+0x4c>
    49d4:	mvn	r0, #99	; 0x63
    49d8:	movw	r1, #0
    49dc:	movt	r1, #0
    49e0:	movw	r2, #0
    49e4:	movt	r2, #0
    49e8:	movw	r3, #2030	; 0x7ee
    49ec:	bl	0 <coda_set_error>
    49f0:	mvn	r0, #0
    49f4:	str	r0, [fp, #-4]
    49f8:	b	4a80 <coda_type_text_set_special_text_type+0xd0>
    49fc:	ldr	r0, [sp, #8]
    4a00:	ldr	r0, [r0]
    4a04:	cmp	r0, #0
    4a08:	beq	4a40 <coda_type_text_set_special_text_type+0x90>
    4a0c:	ldr	r0, [sp, #8]
    4a10:	ldr	r0, [r0]
    4a14:	bl	25a4 <coda_type_get_format_name>
    4a18:	ldr	r1, [pc, #108]	; 4a8c <coda_type_text_set_special_text_type+0xdc>
    4a1c:	str	r0, [sp]
    4a20:	mov	r0, r1
    4a24:	movw	r1, #0
    4a28:	movt	r1, #0
    4a2c:	ldr	r2, [sp]
    4a30:	bl	0 <coda_set_error>
    4a34:	mvn	r0, #0
    4a38:	str	r0, [fp, #-4]
    4a3c:	b	4a80 <coda_type_text_set_special_text_type+0xd0>
    4a40:	ldr	r0, [sp, #8]
    4a44:	ldr	r0, [r0, #44]	; 0x2c
    4a48:	cmp	r0, #0
    4a4c:	beq	4a6c <coda_type_text_set_special_text_type+0xbc>
    4a50:	ldr	r0, [pc, #52]	; 4a8c <coda_type_text_set_special_text_type+0xdc>
    4a54:	movw	r1, #0
    4a58:	movt	r1, #0
    4a5c:	bl	0 <coda_set_error>
    4a60:	mvn	r0, #0
    4a64:	str	r0, [fp, #-4]
    4a68:	b	4a80 <coda_type_text_set_special_text_type+0xd0>
    4a6c:	ldr	r0, [sp, #4]
    4a70:	ldr	r1, [sp, #8]
    4a74:	str	r0, [r1, #44]	; 0x2c
    4a78:	movw	r0, #0
    4a7c:	str	r0, [fp, #-4]
    4a80:	ldr	r0, [fp, #-4]
    4a84:	mov	sp, fp
    4a88:	pop	{fp, pc}
    4a8c:	.word	0xfffffe70

00004a90 <coda_type_text_validate>:
    4a90:	push	{fp, lr}
    4a94:	mov	fp, sp
    4a98:	sub	sp, sp, #56	; 0x38
    4a9c:	str	r0, [fp, #-8]
    4aa0:	ldr	r0, [fp, #-8]
    4aa4:	movw	r1, #0
    4aa8:	cmp	r0, r1
    4aac:	bne	4ad8 <coda_type_text_validate+0x48>
    4ab0:	mvn	r0, #99	; 0x63
    4ab4:	movw	r1, #0
    4ab8:	movt	r1, #0
    4abc:	movw	r2, #0
    4ac0:	movt	r2, #0
    4ac4:	movw	r3, #2052	; 0x804
    4ac8:	bl	0 <coda_set_error>
    4acc:	mvn	r0, #0
    4ad0:	str	r0, [fp, #-4]
    4ad4:	b	4d08 <coda_type_text_validate+0x278>
    4ad8:	ldr	r0, [fp, #-8]
    4adc:	ldr	r0, [r0]
    4ae0:	cmp	r0, #0
    4ae4:	beq	4af8 <coda_type_text_validate+0x68>
    4ae8:	ldr	r0, [fp, #-8]
    4aec:	ldr	r0, [r0]
    4af0:	cmp	r0, #1
    4af4:	bne	4bac <coda_type_text_validate+0x11c>
    4af8:	ldr	r0, [fp, #-8]
    4afc:	ldr	r0, [r0, #32]
    4b00:	movw	r1, #0
    4b04:	cmp	r0, r1
    4b08:	bne	4b3c <coda_type_text_validate+0xac>
    4b0c:	ldr	r0, [fp, #-8]
    4b10:	ldr	r0, [r0, #28]
    4b14:	cmn	r0, #1
    4b18:	bgt	4b3c <coda_type_text_validate+0xac>
    4b1c:	b	4b20 <coda_type_text_validate+0x90>
    4b20:	ldr	r0, [pc, #492]	; 4d14 <coda_type_text_validate+0x284>
    4b24:	movw	r1, #0
    4b28:	movt	r1, #0
    4b2c:	bl	0 <coda_set_error>
    4b30:	mvn	r0, #0
    4b34:	str	r0, [fp, #-4]
    4b38:	b	4d08 <coda_type_text_validate+0x278>
    4b3c:	ldr	r0, [fp, #-8]
    4b40:	ldr	r0, [r0, #28]
    4b44:	cmp	r0, #0
    4b48:	bmi	4ba8 <coda_type_text_validate+0x118>
    4b4c:	b	4b50 <coda_type_text_validate+0xc0>
    4b50:	ldr	r0, [fp, #-8]
    4b54:	ldr	r1, [r0, #24]
    4b58:	ldr	r0, [r0, #28]
    4b5c:	asr	r2, r0, #31
    4b60:	adds	r2, r1, r2, lsr #29
    4b64:	adc	r3, r0, #0
    4b68:	bic	r2, r2, #7
    4b6c:	subs	r1, r1, r2
    4b70:	sbc	r0, r0, r3
    4b74:	orr	r0, r1, r0
    4b78:	cmp	r0, #0
    4b7c:	beq	4ba8 <coda_type_text_validate+0x118>
    4b80:	b	4b84 <coda_type_text_validate+0xf4>
    4b84:	ldr	r0, [pc, #392]	; 4d14 <coda_type_text_validate+0x284>
    4b88:	ldr	r1, [fp, #-8]
    4b8c:	ldr	r2, [r1, #24]
    4b90:	movw	r1, #0
    4b94:	movt	r1, #0
    4b98:	bl	0 <coda_set_error>
    4b9c:	mvn	r0, #0
    4ba0:	str	r0, [fp, #-4]
    4ba4:	b	4d08 <coda_type_text_validate+0x278>
    4ba8:	b	4bac <coda_type_text_validate+0x11c>
    4bac:	ldr	r0, [fp, #-8]
    4bb0:	ldr	r0, [r0, #12]
    4bb4:	cmp	r0, #10
    4bb8:	bne	4c00 <coda_type_text_validate+0x170>
    4bbc:	ldr	r0, [fp, #-8]
    4bc0:	ldr	r1, [r0, #24]
    4bc4:	ldr	r0, [r0, #28]
    4bc8:	eor	r1, r1, #8
    4bcc:	orr	r0, r1, r0
    4bd0:	cmp	r0, #0
    4bd4:	beq	4c00 <coda_type_text_validate+0x170>
    4bd8:	b	4bdc <coda_type_text_validate+0x14c>
    4bdc:	ldr	r0, [pc, #304]	; 4d14 <coda_type_text_validate+0x284>
    4be0:	ldr	r1, [fp, #-8]
    4be4:	ldr	r2, [r1, #24]
    4be8:	movw	r1, #0
    4bec:	movt	r1, #0
    4bf0:	bl	0 <coda_set_error>
    4bf4:	mvn	r0, #0
    4bf8:	str	r0, [fp, #-4]
    4bfc:	b	4d08 <coda_type_text_validate+0x278>
    4c00:	ldr	r0, [fp, #-8]
    4c04:	ldr	r0, [r0, #40]	; 0x28
    4c08:	movw	r1, #0
    4c0c:	cmp	r0, r1
    4c10:	beq	4d00 <coda_type_text_validate+0x270>
    4c14:	ldr	r0, [fp, #-8]
    4c18:	ldr	r0, [r0, #28]
    4c1c:	cmn	r0, #1
    4c20:	bgt	4c44 <coda_type_text_validate+0x1b4>
    4c24:	b	4c28 <coda_type_text_validate+0x198>
    4c28:	ldr	r0, [pc, #228]	; 4d14 <coda_type_text_validate+0x284>
    4c2c:	movw	r1, #0
    4c30:	movt	r1, #0
    4c34:	bl	0 <coda_set_error>
    4c38:	mvn	r0, #0
    4c3c:	str	r0, [fp, #-4]
    4c40:	b	4d08 <coda_type_text_validate+0x278>
    4c44:	ldr	r0, [fp, #-8]
    4c48:	ldr	r1, [r0, #24]
    4c4c:	ldr	r2, [r0, #28]
    4c50:	ldr	r0, [r0, #40]	; 0x28
    4c54:	lsr	r1, r1, #3
    4c58:	orr	r1, r1, r2, lsl #29
    4c5c:	str	r2, [sp, #20]
    4c60:	str	r1, [sp, #16]
    4c64:	bl	0 <strlen>
    4c68:	ldr	r1, [sp, #16]
    4c6c:	eor	r0, r1, r0
    4c70:	ldr	r1, [sp, #20]
    4c74:	orr	r0, r0, r1, asr #3
    4c78:	cmp	r0, #0
    4c7c:	beq	4cfc <coda_type_text_validate+0x26c>
    4c80:	b	4c84 <coda_type_text_validate+0x1f4>
    4c84:	add	r2, sp, #27
    4c88:	ldr	r0, [fp, #-8]
    4c8c:	ldr	r1, [r0, #24]
    4c90:	ldr	r0, [r0, #28]
    4c94:	lsr	r1, r1, #3
    4c98:	orr	r1, r1, r0, lsl #29
    4c9c:	asr	r0, r0, #3
    4ca0:	str	r0, [sp, #12]
    4ca4:	mov	r0, r1
    4ca8:	ldr	r1, [sp, #12]
    4cac:	bl	0 <coda_str64>
    4cb0:	ldr	r0, [pc, #92]	; 4d14 <coda_type_text_validate+0x284>
    4cb4:	add	r3, sp, #27
    4cb8:	ldr	r1, [fp, #-8]
    4cbc:	ldr	r1, [r1, #40]	; 0x28
    4cc0:	str	r0, [sp, #8]
    4cc4:	mov	r0, r1
    4cc8:	str	r3, [sp, #4]
    4ccc:	bl	0 <strlen>
    4cd0:	ldr	r1, [sp, #8]
    4cd4:	str	r0, [sp]
    4cd8:	mov	r0, r1
    4cdc:	movw	r1, #0
    4ce0:	movt	r1, #0
    4ce4:	ldr	r2, [sp]
    4ce8:	ldr	r3, [sp, #4]
    4cec:	bl	0 <coda_set_error>
    4cf0:	mvn	r0, #0
    4cf4:	str	r0, [fp, #-4]
    4cf8:	b	4d08 <coda_type_text_validate+0x278>
    4cfc:	b	4d00 <coda_type_text_validate+0x270>
    4d00:	movw	r0, #0
    4d04:	str	r0, [fp, #-4]
    4d08:	ldr	r0, [fp, #-4]
    4d0c:	mov	sp, fp
    4d10:	pop	{fp, pc}
    4d14:	.word	0xfffffe70

00004d18 <coda_type_raw_new>:
    4d18:	push	{fp, lr}
    4d1c:	mov	fp, sp
    4d20:	sub	sp, sp, #16
    4d24:	str	r0, [sp, #8]
    4d28:	movw	r0, #48	; 0x30
    4d2c:	bl	0 <malloc>
    4d30:	str	r0, [sp, #4]
    4d34:	ldr	r0, [sp, #4]
    4d38:	movw	r1, #0
    4d3c:	cmp	r0, r1
    4d40:	bne	4d74 <coda_type_raw_new+0x5c>
    4d44:	mvn	r0, #0
    4d48:	movw	r1, #0
    4d4c:	movt	r1, #0
    4d50:	movw	r2, #48	; 0x30
    4d54:	movw	r3, #0
    4d58:	movt	r3, #0
    4d5c:	movw	ip, #2106	; 0x83a
    4d60:	str	ip, [sp]
    4d64:	bl	0 <coda_set_error>
    4d68:	movw	r0, #0
    4d6c:	str	r0, [fp, #-4]
    4d70:	b	4df4 <coda_type_raw_new+0xdc>
    4d74:	ldr	r0, [sp, #8]
    4d78:	ldr	r1, [sp, #4]
    4d7c:	str	r0, [r1]
    4d80:	ldr	r0, [sp, #4]
    4d84:	mov	r1, #0
    4d88:	str	r1, [r0, #4]
    4d8c:	ldr	r0, [sp, #4]
    4d90:	mov	r2, #5
    4d94:	str	r2, [r0, #8]
    4d98:	ldr	r0, [sp, #4]
    4d9c:	mov	r2, #12
    4da0:	str	r2, [r0, #12]
    4da4:	ldr	r0, [sp, #4]
    4da8:	str	r1, [r0, #16]
    4dac:	ldr	r0, [sp, #4]
    4db0:	str	r1, [r0, #20]
    4db4:	ldr	r0, [sp, #4]
    4db8:	mvn	r1, #0
    4dbc:	str	r1, [r0, #28]
    4dc0:	str	r1, [r0, #24]
    4dc4:	ldr	r0, [sp, #4]
    4dc8:	movw	r1, #0
    4dcc:	str	r1, [r0, #32]
    4dd0:	ldr	r0, [sp, #4]
    4dd4:	str	r1, [r0, #36]	; 0x24
    4dd8:	ldr	r0, [sp, #4]
    4ddc:	mvn	r2, #0
    4de0:	str	r2, [r0, #40]	; 0x28
    4de4:	ldr	r0, [sp, #4]
    4de8:	str	r1, [r0, #44]	; 0x2c
    4dec:	ldr	r0, [sp, #4]
    4df0:	str	r0, [fp, #-4]
    4df4:	ldr	r0, [fp, #-4]
    4df8:	mov	sp, fp
    4dfc:	pop	{fp, pc}

00004e00 <coda_type_raw_set_fixed_value>:
    4e00:	push	{fp, lr}
    4e04:	mov	fp, sp
    4e08:	sub	sp, sp, #16
    4e0c:	str	r0, [sp, #8]
    4e10:	str	r1, [sp, #4]
    4e14:	str	r2, [sp]
    4e18:	ldr	r0, [sp, #8]
    4e1c:	movw	r1, #0
    4e20:	cmp	r0, r1
    4e24:	bne	4e50 <coda_type_raw_set_fixed_value+0x50>
    4e28:	mvn	r0, #99	; 0x63
    4e2c:	movw	r1, #0
    4e30:	movt	r1, #0
    4e34:	movw	r2, #0
    4e38:	movt	r2, #0
    4e3c:	movw	r3, #2128	; 0x850
    4e40:	bl	0 <coda_set_error>
    4e44:	mvn	r0, #0
    4e48:	str	r0, [fp, #-4]
    4e4c:	b	4f64 <coda_type_raw_set_fixed_value+0x164>
    4e50:	ldr	r0, [sp, #4]
    4e54:	cmp	r0, #0
    4e58:	ble	4e94 <coda_type_raw_set_fixed_value+0x94>
    4e5c:	ldr	r0, [sp]
    4e60:	movw	r1, #0
    4e64:	cmp	r0, r1
    4e68:	bne	4e94 <coda_type_raw_set_fixed_value+0x94>
    4e6c:	mvn	r0, #99	; 0x63
    4e70:	movw	r1, #0
    4e74:	movt	r1, #0
    4e78:	movw	r2, #0
    4e7c:	movt	r2, #0
    4e80:	movw	r3, #2133	; 0x855
    4e84:	bl	0 <coda_set_error>
    4e88:	mvn	r0, #0
    4e8c:	str	r0, [fp, #-4]
    4e90:	b	4f64 <coda_type_raw_set_fixed_value+0x164>
    4e94:	ldr	r0, [sp, #8]
    4e98:	ldr	r0, [r0, #44]	; 0x2c
    4e9c:	movw	r1, #0
    4ea0:	cmp	r0, r1
    4ea4:	bne	4eb8 <coda_type_raw_set_fixed_value+0xb8>
    4ea8:	ldr	r0, [sp, #8]
    4eac:	ldr	r0, [r0, #40]	; 0x28
    4eb0:	cmp	r0, #0
    4eb4:	blt	4ed4 <coda_type_raw_set_fixed_value+0xd4>
    4eb8:	ldr	r0, [pc, #176]	; 4f70 <coda_type_raw_set_fixed_value+0x170>
    4ebc:	movw	r1, #0
    4ec0:	movt	r1, #0
    4ec4:	bl	0 <coda_set_error>
    4ec8:	mvn	r0, #0
    4ecc:	str	r0, [fp, #-4]
    4ed0:	b	4f64 <coda_type_raw_set_fixed_value+0x164>
    4ed4:	ldr	r0, [sp, #4]
    4ed8:	cmp	r0, #0
    4edc:	ble	4f50 <coda_type_raw_set_fixed_value+0x150>
    4ee0:	ldr	r0, [sp, #4]
    4ee4:	bl	0 <malloc>
    4ee8:	ldr	r1, [sp, #8]
    4eec:	str	r0, [r1, #44]	; 0x2c
    4ef0:	ldr	r0, [sp, #8]
    4ef4:	ldr	r0, [r0, #44]	; 0x2c
    4ef8:	movw	r1, #0
    4efc:	cmp	r0, r1
    4f00:	bne	4f2c <coda_type_raw_set_fixed_value+0x12c>
    4f04:	mvn	r0, #0
    4f08:	movw	r1, #0
    4f0c:	movt	r1, #0
    4f10:	movw	r2, #0
    4f14:	movt	r2, #0
    4f18:	movw	r3, #2147	; 0x863
    4f1c:	bl	0 <coda_set_error>
    4f20:	mvn	r0, #0
    4f24:	str	r0, [fp, #-4]
    4f28:	b	4f64 <coda_type_raw_set_fixed_value+0x164>
    4f2c:	ldr	r0, [sp, #8]
    4f30:	ldr	r0, [r0, #44]	; 0x2c
    4f34:	ldr	r1, [sp]
    4f38:	ldr	r2, [sp, #4]
    4f3c:	bl	0 <memcpy>
    4f40:	ldr	r0, [sp, #4]
    4f44:	ldr	r1, [sp, #8]
    4f48:	str	r0, [r1, #40]	; 0x28
    4f4c:	b	4f5c <coda_type_raw_set_fixed_value+0x15c>
    4f50:	ldr	r0, [sp, #8]
    4f54:	movw	r1, #0
    4f58:	str	r1, [r0, #40]	; 0x28
    4f5c:	movw	r0, #0
    4f60:	str	r0, [fp, #-4]
    4f64:	ldr	r0, [fp, #-4]
    4f68:	mov	sp, fp
    4f6c:	pop	{fp, pc}
    4f70:	.word	0xfffffe70

00004f74 <coda_type_raw_validate>:
    4f74:	push	{fp, lr}
    4f78:	mov	fp, sp
    4f7c:	sub	sp, sp, #40	; 0x28
    4f80:	str	r0, [fp, #-8]
    4f84:	ldr	r0, [fp, #-8]
    4f88:	movw	r1, #0
    4f8c:	cmp	r0, r1
    4f90:	bne	4fbc <coda_type_raw_validate+0x48>
    4f94:	mvn	r0, #99	; 0x63
    4f98:	movw	r1, #0
    4f9c:	movt	r1, #0
    4fa0:	movw	r2, #0
    4fa4:	movt	r2, #0
    4fa8:	movw	r3, #2165	; 0x875
    4fac:	bl	0 <coda_set_error>
    4fb0:	mvn	r0, #0
    4fb4:	str	r0, [fp, #-4]
    4fb8:	b	5110 <coda_type_raw_validate+0x19c>
    4fbc:	ldr	r0, [fp, #-8]
    4fc0:	ldr	r0, [r0]
    4fc4:	cmp	r0, #0
    4fc8:	beq	4fdc <coda_type_raw_validate+0x68>
    4fcc:	ldr	r0, [fp, #-8]
    4fd0:	ldr	r0, [r0]
    4fd4:	cmp	r0, #1
    4fd8:	bne	5024 <coda_type_raw_validate+0xb0>
    4fdc:	ldr	r0, [fp, #-8]
    4fe0:	ldr	r0, [r0, #32]
    4fe4:	movw	r1, #0
    4fe8:	cmp	r0, r1
    4fec:	bne	5020 <coda_type_raw_validate+0xac>
    4ff0:	ldr	r0, [fp, #-8]
    4ff4:	ldr	r0, [r0, #28]
    4ff8:	cmn	r0, #1
    4ffc:	bgt	5020 <coda_type_raw_validate+0xac>
    5000:	b	5004 <coda_type_raw_validate+0x90>
    5004:	ldr	r0, [pc, #272]	; 511c <coda_type_raw_validate+0x1a8>
    5008:	movw	r1, #0
    500c:	movt	r1, #0
    5010:	bl	0 <coda_set_error>
    5014:	mvn	r0, #0
    5018:	str	r0, [fp, #-4]
    501c:	b	5110 <coda_type_raw_validate+0x19c>
    5020:	b	5024 <coda_type_raw_validate+0xb0>
    5024:	ldr	r0, [fp, #-8]
    5028:	ldr	r0, [r0, #44]	; 0x2c
    502c:	movw	r1, #0
    5030:	cmp	r0, r1
    5034:	beq	5108 <coda_type_raw_validate+0x194>
    5038:	ldr	r0, [fp, #-8]
    503c:	ldr	r0, [r0, #28]
    5040:	cmn	r0, #1
    5044:	bgt	5068 <coda_type_raw_validate+0xf4>
    5048:	b	504c <coda_type_raw_validate+0xd8>
    504c:	ldr	r0, [pc, #200]	; 511c <coda_type_raw_validate+0x1a8>
    5050:	movw	r1, #0
    5054:	movt	r1, #0
    5058:	bl	0 <coda_set_error>
    505c:	mvn	r0, #0
    5060:	str	r0, [fp, #-4]
    5064:	b	5110 <coda_type_raw_validate+0x19c>
    5068:	ldr	r0, [fp, #-8]
    506c:	ldr	r1, [r0, #24]
    5070:	ldr	r0, [r0, #28]
    5074:	lsr	r2, r1, #3
    5078:	orr	r2, r2, r0, lsl #29
    507c:	asr	r0, r0, #3
    5080:	and	r1, r1, #7
    5084:	adds	r3, r2, #1
    5088:	adc	ip, r0, #0
    508c:	cmp	r1, #0
    5090:	movne	r2, r3
    5094:	cmp	r1, #0
    5098:	movne	r0, ip
    509c:	str	r2, [fp, #-16]
    50a0:	str	r0, [fp, #-12]
    50a4:	ldr	r0, [fp, #-16]
    50a8:	ldr	r1, [fp, #-12]
    50ac:	ldr	r2, [fp, #-8]
    50b0:	ldr	r2, [r2, #40]	; 0x28
    50b4:	eor	r1, r1, r2, asr #31
    50b8:	eor	r0, r0, r2
    50bc:	orr	r0, r0, r1
    50c0:	cmp	r0, #0
    50c4:	beq	5104 <coda_type_raw_validate+0x190>
    50c8:	b	50cc <coda_type_raw_validate+0x158>
    50cc:	add	r2, sp, #3
    50d0:	ldr	r0, [fp, #-16]
    50d4:	ldr	r1, [fp, #-12]
    50d8:	bl	0 <coda_str64>
    50dc:	ldr	r0, [pc, #56]	; 511c <coda_type_raw_validate+0x1a8>
    50e0:	add	r3, sp, #3
    50e4:	ldr	r1, [fp, #-8]
    50e8:	ldr	r2, [r1, #40]	; 0x28
    50ec:	movw	r1, #0
    50f0:	movt	r1, #0
    50f4:	bl	0 <coda_set_error>
    50f8:	mvn	r0, #0
    50fc:	str	r0, [fp, #-4]
    5100:	b	5110 <coda_type_raw_validate+0x19c>
    5104:	b	5108 <coda_type_raw_validate+0x194>
    5108:	movw	r0, #0
    510c:	str	r0, [fp, #-4]
    5110:	ldr	r0, [fp, #-4]
    5114:	mov	sp, fp
    5118:	pop	{fp, pc}
    511c:	.word	0xfffffe70

00005120 <coda_type_raw_file_singleton>:
    5120:	push	{fp, lr}
    5124:	mov	fp, sp
    5128:	sub	sp, sp, #32
    512c:	ldr	r0, [pc, #212]	; 5208 <coda_type_raw_file_singleton+0xe8>
    5130:	str	r0, [sp, #16]
    5134:	bl	0 <__aeabi_read_tp>
    5138:	ldr	r1, [sp, #16]
    513c:	ldr	r0, [r0, r1]
    5140:	movw	r1, #0
    5144:	cmp	r0, r1
    5148:	bne	51e4 <coda_type_raw_file_singleton+0xc4>
    514c:	movw	r0, #1
    5150:	bl	4d18 <coda_type_raw_new>
    5154:	str	r0, [fp, #-8]
    5158:	ldr	r0, [fp, #-8]
    515c:	movw	r1, #0
    5160:	cmp	r0, r1
    5164:	bne	5174 <coda_type_raw_file_singleton+0x54>
    5168:	movw	r0, #0
    516c:	str	r0, [fp, #-4]
    5170:	b	51fc <coda_type_raw_file_singleton+0xdc>
    5174:	movw	r0, #0
    5178:	movt	r0, #0
    517c:	sub	r1, fp, #12
    5180:	bl	0 <coda_expression_from_string>
    5184:	cmp	r0, #0
    5188:	beq	5194 <coda_type_raw_file_singleton+0x74>
    518c:	ldr	r0, [fp, #-8]
    5190:	bl	be4 <raw_delete>
    5194:	ldr	r0, [fp, #-8]
    5198:	ldr	r1, [fp, #-12]
    519c:	bl	1984 <coda_type_set_byte_size_expression>
    51a0:	cmp	r0, #0
    51a4:	beq	51c4 <coda_type_raw_file_singleton+0xa4>
    51a8:	ldr	r0, [fp, #-12]
    51ac:	bl	0 <coda_expression_delete>
    51b0:	ldr	r0, [fp, #-8]
    51b4:	bl	be4 <raw_delete>
    51b8:	movw	r0, #0
    51bc:	str	r0, [fp, #-4]
    51c0:	b	51fc <coda_type_raw_file_singleton+0xdc>
    51c4:	ldr	r0, [fp, #-8]
    51c8:	ldr	r1, [pc, #56]	; 5208 <coda_type_raw_file_singleton+0xe8>
    51cc:	str	r0, [sp, #12]
    51d0:	str	r1, [sp, #8]
    51d4:	bl	0 <__aeabi_read_tp>
    51d8:	ldr	r1, [sp, #12]
    51dc:	ldr	r2, [sp, #8]
    51e0:	str	r1, [r0, r2]
    51e4:	ldr	r0, [pc, #28]	; 5208 <coda_type_raw_file_singleton+0xe8>
    51e8:	str	r0, [sp, #4]
    51ec:	bl	0 <__aeabi_read_tp>
    51f0:	ldr	r1, [sp, #4]
    51f4:	ldr	r0, [r0, r1]
    51f8:	str	r0, [fp, #-4]
    51fc:	ldr	r0, [fp, #-4]
    5200:	mov	sp, fp
    5204:	pop	{fp, pc}
    5208:	.word	0x00000000

0000520c <coda_type_no_data_singleton>:
    520c:	push	{fp, lr}
    5210:	mov	fp, sp
    5214:	sub	sp, sp, #48	; 0x30
    5218:	str	r0, [fp, #-8]
    521c:	ldr	r0, [fp, #-8]
    5220:	cmp	r0, #11
    5224:	bcs	522c <coda_type_no_data_singleton+0x20>
    5228:	b	524c <coda_type_no_data_singleton+0x40>
    522c:	movw	r0, #0
    5230:	movt	r0, #0
    5234:	movw	r1, #0
    5238:	movt	r1, #0
    523c:	movw	r2, #2235	; 0x8bb
    5240:	movw	r3, #0
    5244:	movt	r3, #0
    5248:	bl	0 <__assert_fail>
    524c:	ldr	r0, [fp, #-8]
    5250:	ldr	r1, [pc, #460]	; 5424 <coda_type_no_data_singleton+0x218>
    5254:	str	r0, [fp, #-16]
    5258:	str	r1, [fp, #-20]	; 0xffffffec
    525c:	bl	0 <__aeabi_read_tp>
    5260:	ldr	r1, [fp, #-20]	; 0xffffffec
    5264:	add	r0, r0, r1
    5268:	ldr	r1, [fp, #-16]
    526c:	add	r0, r0, r1, lsl #2
    5270:	ldr	r0, [r0]
    5274:	movw	r1, #0
    5278:	cmp	r0, r1
    527c:	bne	53ec <coda_type_no_data_singleton+0x1e0>
    5280:	movw	r0, #56	; 0x38
    5284:	bl	0 <malloc>
    5288:	str	r0, [fp, #-12]
    528c:	ldr	r0, [fp, #-12]
    5290:	movw	r1, #0
    5294:	cmp	r0, r1
    5298:	bne	52cc <coda_type_no_data_singleton+0xc0>
    529c:	mvn	r0, #0
    52a0:	movw	r1, #0
    52a4:	movt	r1, #0
    52a8:	movw	r2, #56	; 0x38
    52ac:	movw	r3, #0
    52b0:	movt	r3, #0
    52b4:	movw	ip, #2245	; 0x8c5
    52b8:	str	ip, [sp]
    52bc:	bl	0 <coda_set_error>
    52c0:	movw	r0, #0
    52c4:	str	r0, [fp, #-4]
    52c8:	b	5418 <coda_type_no_data_singleton+0x20c>
    52cc:	ldr	r0, [fp, #-8]
    52d0:	ldr	r1, [fp, #-12]
    52d4:	str	r0, [r1]
    52d8:	ldr	r0, [fp, #-12]
    52dc:	mov	r1, #0
    52e0:	str	r1, [r0, #4]
    52e4:	ldr	r0, [fp, #-12]
    52e8:	mov	r2, #6
    52ec:	str	r2, [r0, #8]
    52f0:	ldr	r0, [fp, #-12]
    52f4:	mvn	r2, #0
    52f8:	str	r2, [r0, #12]
    52fc:	ldr	r0, [fp, #-12]
    5300:	str	r1, [r0, #16]
    5304:	ldr	r0, [fp, #-12]
    5308:	str	r1, [r0, #20]
    530c:	ldr	r0, [fp, #-12]
    5310:	str	r1, [r0, #28]
    5314:	str	r1, [r0, #24]
    5318:	ldr	r0, [fp, #-12]
    531c:	movw	r1, #0
    5320:	str	r1, [r0, #32]
    5324:	ldr	r0, [fp, #-12]
    5328:	str	r1, [r0, #36]	; 0x24
    532c:	ldr	r0, [fp, #-12]
    5330:	str	r1, [r0, #40]	; 0x28
    5334:	ldr	r0, [fp, #-12]
    5338:	str	r1, [r0, #44]	; 0x2c
    533c:	ldr	r0, [fp, #-12]
    5340:	str	r1, [r0, #48]	; 0x30
    5344:	ldr	r0, [fp, #-12]
    5348:	str	r1, [r0, #52]	; 0x34
    534c:	ldr	r0, [fp, #-8]
    5350:	bl	4d18 <coda_type_raw_new>
    5354:	ldr	r1, [fp, #-12]
    5358:	str	r0, [r1, #44]	; 0x2c
    535c:	ldr	r0, [fp, #-12]
    5360:	ldr	r0, [r0, #44]	; 0x2c
    5364:	movw	r1, #0
    5368:	cmp	r0, r1
    536c:	bne	5384 <coda_type_no_data_singleton+0x178>
    5370:	ldr	r0, [fp, #-12]
    5374:	bl	cb8 <special_delete>
    5378:	movw	r0, #0
    537c:	str	r0, [fp, #-4]
    5380:	b	5418 <coda_type_no_data_singleton+0x20c>
    5384:	ldr	r0, [fp, #-12]
    5388:	ldr	r0, [r0, #44]	; 0x2c
    538c:	mov	r1, #0
    5390:	mov	r2, r1
    5394:	mov	r3, r1
    5398:	bl	1470 <coda_type_set_bit_size>
    539c:	cmp	r0, #0
    53a0:	beq	53b8 <coda_type_no_data_singleton+0x1ac>
    53a4:	ldr	r0, [fp, #-12]
    53a8:	bl	cb8 <special_delete>
    53ac:	movw	r0, #0
    53b0:	str	r0, [fp, #-4]
    53b4:	b	5418 <coda_type_no_data_singleton+0x20c>
    53b8:	ldr	r0, [fp, #-12]
    53bc:	ldr	r1, [fp, #-8]
    53c0:	ldr	r2, [pc, #92]	; 5424 <coda_type_no_data_singleton+0x218>
    53c4:	str	r0, [sp, #24]
    53c8:	str	r1, [sp, #20]
    53cc:	str	r2, [sp, #16]
    53d0:	bl	0 <__aeabi_read_tp>
    53d4:	ldr	r1, [sp, #16]
    53d8:	add	r0, r0, r1
    53dc:	ldr	r1, [sp, #20]
    53e0:	add	r0, r0, r1, lsl #2
    53e4:	ldr	r1, [sp, #24]
    53e8:	str	r1, [r0]
    53ec:	ldr	r0, [fp, #-8]
    53f0:	ldr	r1, [pc, #44]	; 5424 <coda_type_no_data_singleton+0x218>
    53f4:	str	r0, [sp, #12]
    53f8:	str	r1, [sp, #8]
    53fc:	bl	0 <__aeabi_read_tp>
    5400:	ldr	r1, [sp, #8]
    5404:	add	r0, r0, r1
    5408:	ldr	r1, [sp, #12]
    540c:	add	r0, r0, r1, lsl #2
    5410:	ldr	r0, [r0]
    5414:	str	r0, [fp, #-4]
    5418:	ldr	r0, [fp, #-4]
    541c:	mov	sp, fp
    5420:	pop	{fp, pc}
    5424:	.word	0x00000000

00005428 <coda_type_vsf_integer_new>:
    5428:	push	{fp, lr}
    542c:	mov	fp, sp
    5430:	sub	sp, sp, #16
    5434:	str	r0, [sp, #8]
    5438:	movw	r0, #56	; 0x38
    543c:	bl	0 <malloc>
    5440:	str	r0, [sp, #4]
    5444:	ldr	r0, [sp, #4]
    5448:	movw	r1, #0
    544c:	cmp	r0, r1
    5450:	bne	5484 <coda_type_vsf_integer_new+0x5c>
    5454:	mvn	r0, #0
    5458:	movw	r1, #0
    545c:	movt	r1, #0
    5460:	movw	r2, #56	; 0x38
    5464:	movw	r3, #0
    5468:	movt	r3, #0
    546c:	movw	ip, #2288	; 0x8f0
    5470:	str	ip, [sp]
    5474:	bl	0 <coda_set_error>
    5478:	movw	r0, #0
    547c:	str	r0, [fp, #-4]
    5480:	b	5538 <coda_type_vsf_integer_new+0x110>
    5484:	ldr	r0, [sp, #8]
    5488:	ldr	r1, [sp, #4]
    548c:	str	r0, [r1]
    5490:	ldr	r0, [sp, #4]
    5494:	mov	r1, #0
    5498:	str	r1, [r0, #4]
    549c:	ldr	r0, [sp, #4]
    54a0:	mov	r2, #6
    54a4:	str	r2, [r0, #8]
    54a8:	ldr	r0, [sp, #4]
    54ac:	mov	r2, #9
    54b0:	str	r2, [r0, #12]
    54b4:	ldr	r0, [sp, #4]
    54b8:	str	r1, [r0, #16]
    54bc:	ldr	r0, [sp, #4]
    54c0:	str	r1, [r0, #20]
    54c4:	ldr	r0, [sp, #4]
    54c8:	mvn	r1, #0
    54cc:	str	r1, [r0, #28]
    54d0:	str	r1, [r0, #24]
    54d4:	ldr	r0, [sp, #4]
    54d8:	movw	r1, #0
    54dc:	str	r1, [r0, #32]
    54e0:	ldr	r0, [sp, #4]
    54e4:	str	r1, [r0, #36]	; 0x24
    54e8:	ldr	r0, [sp, #4]
    54ec:	movw	r2, #1
    54f0:	str	r2, [r0, #40]	; 0x28
    54f4:	ldr	r0, [sp, #4]
    54f8:	str	r1, [r0, #44]	; 0x2c
    54fc:	ldr	r0, [sp, #4]
    5500:	str	r1, [r0, #48]	; 0x30
    5504:	ldr	r0, [sp, #4]
    5508:	str	r1, [r0, #52]	; 0x34
    550c:	ldr	r0, [sp, #8]
    5510:	bl	1bf0 <coda_type_record_new>
    5514:	ldr	r1, [sp, #4]
    5518:	str	r0, [r1, #44]	; 0x2c
    551c:	ldr	r0, [sp, #4]
    5520:	ldr	r0, [r0, #44]	; 0x2c
    5524:	movw	r1, #0
    5528:	movt	r1, #0
    552c:	bl	133c <coda_type_set_description>
    5530:	ldr	r1, [sp, #4]
    5534:	str	r1, [fp, #-4]
    5538:	ldr	r0, [fp, #-4]
    553c:	mov	sp, fp
    5540:	pop	{fp, pc}

00005544 <coda_type_vsf_integer_set_type>:
    5544:	push	{fp, lr}
    5548:	mov	fp, sp
    554c:	sub	sp, sp, #24
    5550:	str	r0, [fp, #-8]
    5554:	str	r1, [sp, #12]
    5558:	ldr	r0, [fp, #-8]
    555c:	ldr	r0, [r0]
    5560:	ldr	r1, [sp, #12]
    5564:	ldr	r1, [r1]
    5568:	cmp	r0, r1
    556c:	beq	55bc <coda_type_vsf_integer_set_type+0x78>
    5570:	ldr	r0, [sp, #12]
    5574:	ldr	r0, [r0]
    5578:	bl	25a4 <coda_type_get_format_name>
    557c:	ldr	r1, [fp, #-8]
    5580:	ldr	r1, [r1]
    5584:	str	r0, [sp, #4]
    5588:	mov	r0, r1
    558c:	bl	25a4 <coda_type_get_format_name>
    5590:	ldr	r1, [pc, #256]	; 5698 <coda_type_vsf_integer_set_type+0x154>
    5594:	str	r0, [sp]
    5598:	mov	r0, r1
    559c:	movw	r1, #0
    55a0:	movt	r1, #0
    55a4:	ldr	r2, [sp, #4]
    55a8:	ldr	r3, [sp]
    55ac:	bl	0 <coda_set_error>
    55b0:	mvn	r0, #0
    55b4:	str	r0, [fp, #-4]
    55b8:	b	568c <coda_type_vsf_integer_set_type+0x148>
    55bc:	ldr	r0, [fp, #-8]
    55c0:	ldr	r0, [r0, #44]	; 0x2c
    55c4:	ldr	r0, [r0, #48]	; 0x30
    55c8:	cmp	r0, #1
    55cc:	beq	55ec <coda_type_vsf_integer_set_type+0xa8>
    55d0:	ldr	r0, [pc, #192]	; 5698 <coda_type_vsf_integer_set_type+0x154>
    55d4:	movw	r1, #0
    55d8:	movt	r1, #0
    55dc:	bl	0 <coda_set_error>
    55e0:	mvn	r0, #0
    55e4:	str	r0, [fp, #-4]
    55e8:	b	568c <coda_type_vsf_integer_set_type+0x148>
    55ec:	movw	r0, #0
    55f0:	movt	r0, #0
    55f4:	bl	1f38 <coda_type_record_field_new>
    55f8:	str	r0, [sp, #8]
    55fc:	ldr	r0, [sp, #8]
    5600:	movw	r1, #0
    5604:	cmp	r0, r1
    5608:	bne	5618 <coda_type_vsf_integer_set_type+0xd4>
    560c:	mvn	r0, #0
    5610:	str	r0, [fp, #-4]
    5614:	b	568c <coda_type_vsf_integer_set_type+0x148>
    5618:	ldr	r0, [sp, #8]
    561c:	ldr	r1, [sp, #12]
    5620:	bl	21d0 <coda_type_record_field_set_type>
    5624:	cmp	r0, #0
    5628:	beq	5640 <coda_type_vsf_integer_set_type+0xfc>
    562c:	ldr	r0, [sp, #8]
    5630:	bl	5a0 <coda_type_record_field_delete>
    5634:	mvn	r0, #0
    5638:	str	r0, [fp, #-4]
    563c:	b	568c <coda_type_vsf_integer_set_type+0x148>
    5640:	ldr	r0, [fp, #-8]
    5644:	ldr	r0, [r0, #44]	; 0x2c
    5648:	ldr	r1, [sp, #8]
    564c:	bl	1dd8 <coda_type_record_add_field>
    5650:	cmp	r0, #0
    5654:	beq	566c <coda_type_vsf_integer_set_type+0x128>
    5658:	ldr	r0, [sp, #8]
    565c:	bl	5a0 <coda_type_record_field_delete>
    5660:	mvn	r0, #0
    5664:	str	r0, [fp, #-4]
    5668:	b	568c <coda_type_vsf_integer_set_type+0x148>
    566c:	ldr	r0, [fp, #-8]
    5670:	ldr	r1, [r0, #44]	; 0x2c
    5674:	ldr	r2, [r1, #24]
    5678:	ldr	r1, [r1, #28]
    567c:	str	r1, [r0, #28]
    5680:	str	r2, [r0, #24]
    5684:	movw	r0, #0
    5688:	str	r0, [fp, #-4]
    568c:	ldr	r0, [fp, #-4]
    5690:	mov	sp, fp
    5694:	pop	{fp, pc}
    5698:	.word	0xfffffe70

0000569c <coda_type_vsf_integer_set_scale_factor>:
    569c:	push	{fp, lr}
    56a0:	mov	fp, sp
    56a4:	sub	sp, sp, #32
    56a8:	str	r0, [fp, #-8]
    56ac:	str	r1, [fp, #-12]
    56b0:	ldr	r0, [fp, #-8]
    56b4:	ldr	r0, [r0]
    56b8:	ldr	r1, [fp, #-12]
    56bc:	ldr	r1, [r1]
    56c0:	cmp	r0, r1
    56c4:	beq	5714 <coda_type_vsf_integer_set_scale_factor+0x78>
    56c8:	ldr	r0, [fp, #-12]
    56cc:	ldr	r0, [r0]
    56d0:	bl	25a4 <coda_type_get_format_name>
    56d4:	ldr	r1, [fp, #-8]
    56d8:	ldr	r1, [r1]
    56dc:	str	r0, [sp, #8]
    56e0:	mov	r0, r1
    56e4:	bl	25a4 <coda_type_get_format_name>
    56e8:	ldr	r1, [pc, #356]	; 5854 <coda_type_vsf_integer_set_scale_factor+0x1b8>
    56ec:	str	r0, [sp, #4]
    56f0:	mov	r0, r1
    56f4:	movw	r1, #0
    56f8:	movt	r1, #0
    56fc:	ldr	r2, [sp, #8]
    5700:	ldr	r3, [sp, #4]
    5704:	bl	0 <coda_set_error>
    5708:	mvn	r0, #0
    570c:	str	r0, [fp, #-4]
    5710:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    5714:	ldr	r0, [fp, #-8]
    5718:	ldr	r0, [r0, #44]	; 0x2c
    571c:	ldr	r0, [r0, #48]	; 0x30
    5720:	cmp	r0, #0
    5724:	beq	5744 <coda_type_vsf_integer_set_scale_factor+0xa8>
    5728:	ldr	r0, [pc, #292]	; 5854 <coda_type_vsf_integer_set_scale_factor+0x1b8>
    572c:	movw	r1, #0
    5730:	movt	r1, #0
    5734:	bl	0 <coda_set_error>
    5738:	mvn	r0, #0
    573c:	str	r0, [fp, #-4]
    5740:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    5744:	ldr	r0, [fp, #-12]
    5748:	add	r1, sp, #12
    574c:	bl	5858 <coda_type_get_read_type>
    5750:	cmp	r0, #0
    5754:	beq	5764 <coda_type_vsf_integer_set_scale_factor+0xc8>
    5758:	mvn	r0, #0
    575c:	str	r0, [fp, #-4]
    5760:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    5764:	ldr	r0, [sp, #12]
    5768:	cmp	r0, #4
    576c:	bhi	5778 <coda_type_vsf_integer_set_scale_factor+0xdc>
    5770:	b	5774 <coda_type_vsf_integer_set_scale_factor+0xd8>
    5774:	b	57a8 <coda_type_vsf_integer_set_scale_factor+0x10c>
    5778:	ldr	r0, [sp, #12]
    577c:	bl	1090 <coda_type_get_native_type_name>
    5780:	ldr	r1, [pc, #204]	; 5854 <coda_type_vsf_integer_set_scale_factor+0x1b8>
    5784:	str	r0, [sp]
    5788:	mov	r0, r1
    578c:	movw	r1, #0
    5790:	movt	r1, #0
    5794:	ldr	r2, [sp]
    5798:	bl	0 <coda_set_error>
    579c:	mvn	r0, #0
    57a0:	str	r0, [fp, #-4]
    57a4:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    57a8:	movw	r0, #0
    57ac:	movt	r0, #0
    57b0:	bl	1f38 <coda_type_record_field_new>
    57b4:	str	r0, [sp, #16]
    57b8:	ldr	r0, [sp, #16]
    57bc:	movw	r1, #0
    57c0:	cmp	r0, r1
    57c4:	bne	57d4 <coda_type_vsf_integer_set_scale_factor+0x138>
    57c8:	mvn	r0, #0
    57cc:	str	r0, [fp, #-4]
    57d0:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    57d4:	ldr	r0, [sp, #16]
    57d8:	ldr	r1, [fp, #-12]
    57dc:	bl	21d0 <coda_type_record_field_set_type>
    57e0:	cmp	r0, #0
    57e4:	beq	57fc <coda_type_vsf_integer_set_scale_factor+0x160>
    57e8:	ldr	r0, [sp, #16]
    57ec:	bl	5a0 <coda_type_record_field_delete>
    57f0:	mvn	r0, #0
    57f4:	str	r0, [fp, #-4]
    57f8:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    57fc:	ldr	r0, [fp, #-8]
    5800:	ldr	r0, [r0, #44]	; 0x2c
    5804:	ldr	r1, [sp, #16]
    5808:	bl	1dd8 <coda_type_record_add_field>
    580c:	cmp	r0, #0
    5810:	beq	5828 <coda_type_vsf_integer_set_scale_factor+0x18c>
    5814:	ldr	r0, [sp, #16]
    5818:	bl	5a0 <coda_type_record_field_delete>
    581c:	mvn	r0, #0
    5820:	str	r0, [fp, #-4]
    5824:	b	5848 <coda_type_vsf_integer_set_scale_factor+0x1ac>
    5828:	ldr	r0, [fp, #-8]
    582c:	ldr	r1, [r0, #44]	; 0x2c
    5830:	ldr	r2, [r1, #24]
    5834:	ldr	r1, [r1, #28]
    5838:	str	r1, [r0, #28]
    583c:	str	r2, [r0, #24]
    5840:	movw	r0, #0
    5844:	str	r0, [fp, #-4]
    5848:	ldr	r0, [fp, #-4]
    584c:	mov	sp, fp
    5850:	pop	{fp, pc}
    5854:	.word	0xfffffe70

00005858 <coda_type_get_read_type>:
    5858:	push	{fp, lr}
    585c:	mov	fp, sp
    5860:	sub	sp, sp, #16
    5864:	str	r0, [sp, #8]
    5868:	str	r1, [sp, #4]
    586c:	ldr	r0, [sp, #8]
    5870:	movw	r1, #0
    5874:	cmp	r0, r1
    5878:	bne	58a4 <coda_type_get_read_type+0x4c>
    587c:	mvn	r0, #99	; 0x63
    5880:	movw	r1, #0
    5884:	movt	r1, #0
    5888:	movw	r2, #0
    588c:	movt	r2, #0
    5890:	movw	r3, #2908	; 0xb5c
    5894:	bl	0 <coda_set_error>
    5898:	mvn	r0, #0
    589c:	str	r0, [fp, #-4]
    58a0:	b	5960 <coda_type_get_read_type+0x108>
    58a4:	ldr	r0, [sp, #4]
    58a8:	movw	r1, #0
    58ac:	cmp	r0, r1
    58b0:	bne	58dc <coda_type_get_read_type+0x84>
    58b4:	mvn	r0, #99	; 0x63
    58b8:	movw	r1, #0
    58bc:	movt	r1, #0
    58c0:	movw	r2, #0
    58c4:	movt	r2, #0
    58c8:	movw	r3, #2913	; 0xb61
    58cc:	bl	0 <coda_set_error>
    58d0:	mvn	r0, #0
    58d4:	str	r0, [fp, #-4]
    58d8:	b	5960 <coda_type_get_read_type+0x108>
    58dc:	ldr	r0, [sp, #8]
    58e0:	ldr	r0, [r0, #8]
    58e4:	cmp	r0, #2
    58e8:	beq	58fc <coda_type_get_read_type+0xa4>
    58ec:	ldr	r0, [sp, #8]
    58f0:	ldr	r0, [r0, #8]
    58f4:	cmp	r0, #3
    58f8:	bne	5948 <coda_type_get_read_type+0xf0>
    58fc:	ldr	r0, [pc, #104]	; 596c <coda_type_get_read_type+0x114>
    5900:	ldr	r0, [pc, r0]
    5904:	str	r0, [sp]
    5908:	bl	0 <__aeabi_read_tp>
    590c:	ldr	r1, [sp]
    5910:	ldr	r0, [r0, r1]
    5914:	cmp	r0, #0
    5918:	beq	5948 <coda_type_get_read_type+0xf0>
    591c:	ldr	r0, [sp, #8]
    5920:	ldr	r0, [r0, #48]	; 0x30
    5924:	movw	r1, #0
    5928:	cmp	r0, r1
    592c:	beq	5948 <coda_type_get_read_type+0xf0>
    5930:	ldr	r0, [sp, #4]
    5934:	movw	r1, #9
    5938:	str	r1, [r0]
    593c:	movw	r0, #0
    5940:	str	r0, [fp, #-4]
    5944:	b	5960 <coda_type_get_read_type+0x108>
    5948:	ldr	r0, [sp, #8]
    594c:	ldr	r0, [r0, #12]
    5950:	ldr	r1, [sp, #4]
    5954:	str	r0, [r1]
    5958:	movw	r0, #0
    595c:	str	r0, [fp, #-4]
    5960:	ldr	r0, [fp, #-4]
    5964:	mov	sp, fp
    5968:	pop	{fp, pc}
    596c:	.word	0x00000064

00005970 <coda_type_vsf_integer_set_unit>:
    5970:	push	{fp, lr}
    5974:	mov	fp, sp
    5978:	sub	sp, sp, #16
    597c:	str	r0, [sp, #8]
    5980:	str	r1, [sp, #4]
    5984:	ldr	r0, [sp, #4]
    5988:	movw	r1, #0
    598c:	cmp	r0, r1
    5990:	bne	59bc <coda_type_vsf_integer_set_unit+0x4c>
    5994:	mvn	r0, #99	; 0x63
    5998:	movw	r1, #0
    599c:	movt	r1, #0
    59a0:	movw	r2, #0
    59a4:	movt	r2, #0
    59a8:	movw	r3, #2412	; 0x96c
    59ac:	bl	0 <coda_set_error>
    59b0:	mvn	r0, #0
    59b4:	str	r0, [fp, #-4]
    59b8:	b	5a40 <coda_type_vsf_integer_set_unit+0xd0>
    59bc:	ldr	r0, [sp, #8]
    59c0:	ldr	r0, [r0, #48]	; 0x30
    59c4:	movw	r1, #0
    59c8:	cmp	r0, r1
    59cc:	beq	59ec <coda_type_vsf_integer_set_unit+0x7c>
    59d0:	ldr	r0, [pc, #116]	; 5a4c <coda_type_vsf_integer_set_unit+0xdc>
    59d4:	movw	r1, #0
    59d8:	movt	r1, #0
    59dc:	bl	0 <coda_set_error>
    59e0:	mvn	r0, #0
    59e4:	str	r0, [fp, #-4]
    59e8:	b	5a40 <coda_type_vsf_integer_set_unit+0xd0>
    59ec:	ldr	r0, [sp, #4]
    59f0:	bl	0 <strdup>
    59f4:	ldr	r1, [sp, #8]
    59f8:	str	r0, [r1, #48]	; 0x30
    59fc:	ldr	r0, [sp, #8]
    5a00:	ldr	r0, [r0, #48]	; 0x30
    5a04:	movw	r1, #0
    5a08:	cmp	r0, r1
    5a0c:	bne	5a38 <coda_type_vsf_integer_set_unit+0xc8>
    5a10:	mvn	r0, #0
    5a14:	movw	r1, #0
    5a18:	movt	r1, #0
    5a1c:	movw	r2, #0
    5a20:	movt	r2, #0
    5a24:	movw	r3, #2424	; 0x978
    5a28:	bl	0 <coda_set_error>
    5a2c:	mvn	r0, #0
    5a30:	str	r0, [fp, #-4]
    5a34:	b	5a40 <coda_type_vsf_integer_set_unit+0xd0>
    5a38:	movw	r0, #0
    5a3c:	str	r0, [fp, #-4]
    5a40:	ldr	r0, [fp, #-4]
    5a44:	mov	sp, fp
    5a48:	pop	{fp, pc}
    5a4c:	.word	0xfffffe70

00005a50 <coda_type_vsf_integer_validate>:
    5a50:	push	{fp, lr}
    5a54:	mov	fp, sp
    5a58:	sub	sp, sp, #8
    5a5c:	str	r0, [sp]
    5a60:	ldr	r0, [sp]
    5a64:	ldr	r0, [r0, #44]	; 0x2c
    5a68:	ldr	r0, [r0, #48]	; 0x30
    5a6c:	cmp	r0, #2
    5a70:	beq	5a90 <coda_type_vsf_integer_validate+0x40>
    5a74:	ldr	r0, [pc, #40]	; 5aa4 <coda_type_vsf_integer_validate+0x54>
    5a78:	movw	r1, #0
    5a7c:	movt	r1, #0
    5a80:	bl	0 <coda_set_error>
    5a84:	mvn	r0, #0
    5a88:	str	r0, [sp, #4]
    5a8c:	b	5a98 <coda_type_vsf_integer_validate+0x48>
    5a90:	movw	r0, #0
    5a94:	str	r0, [sp, #4]
    5a98:	ldr	r0, [sp, #4]
    5a9c:	mov	sp, fp
    5aa0:	pop	{fp, pc}
    5aa4:	.word	0xfffffe70

00005aa8 <coda_type_time_new>:
    5aa8:	push	{fp, lr}
    5aac:	mov	fp, sp
    5ab0:	sub	sp, sp, #24
    5ab4:	str	r0, [fp, #-8]
    5ab8:	str	r1, [sp, #12]
    5abc:	ldr	r0, [sp, #12]
    5ac0:	movw	r1, #0
    5ac4:	cmp	r0, r1
    5ac8:	bne	5af4 <coda_type_time_new+0x4c>
    5acc:	mvn	r0, #99	; 0x63
    5ad0:	movw	r1, #0
    5ad4:	movt	r1, #0
    5ad8:	movw	r2, #0
    5adc:	movt	r2, #0
    5ae0:	movw	r3, #2447	; 0x98f
    5ae4:	bl	0 <coda_set_error>
    5ae8:	movw	r0, #0
    5aec:	str	r0, [fp, #-4]
    5af0:	b	5c2c <coda_type_time_new+0x184>
    5af4:	movw	r0, #56	; 0x38
    5af8:	bl	0 <malloc>
    5afc:	str	r0, [sp, #8]
    5b00:	ldr	r0, [sp, #8]
    5b04:	movw	r1, #0
    5b08:	cmp	r0, r1
    5b0c:	bne	5b40 <coda_type_time_new+0x98>
    5b10:	mvn	r0, #0
    5b14:	movw	r1, #0
    5b18:	movt	r1, #0
    5b1c:	movw	r2, #56	; 0x38
    5b20:	movw	r3, #0
    5b24:	movt	r3, #0
    5b28:	movw	ip, #2455	; 0x997
    5b2c:	str	ip, [sp]
    5b30:	bl	0 <coda_set_error>
    5b34:	movw	r0, #0
    5b38:	str	r0, [fp, #-4]
    5b3c:	b	5c2c <coda_type_time_new+0x184>
    5b40:	ldr	r0, [fp, #-8]
    5b44:	ldr	r1, [sp, #8]
    5b48:	str	r0, [r1]
    5b4c:	ldr	r0, [sp, #8]
    5b50:	mov	r1, #0
    5b54:	str	r1, [r0, #4]
    5b58:	ldr	r0, [sp, #8]
    5b5c:	mov	r2, #6
    5b60:	str	r2, [r0, #8]
    5b64:	ldr	r0, [sp, #8]
    5b68:	mov	r2, #9
    5b6c:	str	r2, [r0, #12]
    5b70:	ldr	r0, [sp, #8]
    5b74:	str	r1, [r0, #16]
    5b78:	ldr	r0, [sp, #8]
    5b7c:	str	r1, [r0, #20]
    5b80:	ldr	r0, [sp, #8]
    5b84:	mvn	r1, #0
    5b88:	str	r1, [r0, #28]
    5b8c:	str	r1, [r0, #24]
    5b90:	ldr	r0, [sp, #8]
    5b94:	movw	r1, #0
    5b98:	str	r1, [r0, #32]
    5b9c:	ldr	r0, [sp, #8]
    5ba0:	str	r1, [r0, #36]	; 0x24
    5ba4:	ldr	r0, [sp, #8]
    5ba8:	movw	r2, #2
    5bac:	str	r2, [r0, #40]	; 0x28
    5bb0:	ldr	r0, [sp, #8]
    5bb4:	str	r1, [r0, #44]	; 0x2c
    5bb8:	ldr	r0, [sp, #8]
    5bbc:	str	r1, [r0, #48]	; 0x30
    5bc0:	ldr	r0, [sp, #12]
    5bc4:	ldr	r1, [sp, #8]
    5bc8:	str	r0, [r1, #52]	; 0x34
    5bcc:	movw	r0, #0
    5bd0:	movt	r0, #0
    5bd4:	bl	0 <strdup>
    5bd8:	ldr	r1, [sp, #8]
    5bdc:	str	r0, [r1, #48]	; 0x30
    5be0:	ldr	r0, [sp, #8]
    5be4:	ldr	r0, [r0, #48]	; 0x30
    5be8:	movw	r1, #0
    5bec:	cmp	r0, r1
    5bf0:	bne	5c24 <coda_type_time_new+0x17c>
    5bf4:	mvn	r0, #0
    5bf8:	movw	r1, #0
    5bfc:	movt	r1, #0
    5c00:	movw	r2, #0
    5c04:	movt	r2, #0
    5c08:	movw	r3, #2476	; 0x9ac
    5c0c:	bl	0 <coda_set_error>
    5c10:	ldr	r0, [sp, #8]
    5c14:	bl	cb8 <special_delete>
    5c18:	movw	r0, #0
    5c1c:	str	r0, [fp, #-4]
    5c20:	b	5c2c <coda_type_time_new+0x184>
    5c24:	ldr	r0, [sp, #8]
    5c28:	str	r0, [fp, #-4]
    5c2c:	ldr	r0, [fp, #-4]
    5c30:	mov	sp, fp
    5c34:	pop	{fp, pc}

00005c38 <coda_type_time_add_ascii_float_mapping>:
    5c38:	push	{fp, lr}
    5c3c:	mov	fp, sp
    5c40:	sub	sp, sp, #160	; 0xa0
    5c44:	str	r0, [fp, #-8]
    5c48:	str	r1, [fp, #-12]
    5c4c:	ldr	r0, [fp, #-8]
    5c50:	movw	r1, #0
    5c54:	cmp	r0, r1
    5c58:	bne	5c84 <coda_type_time_add_ascii_float_mapping+0x4c>
    5c5c:	mvn	r0, #99	; 0x63
    5c60:	movw	r1, #0
    5c64:	movt	r1, #0
    5c68:	movw	r2, #0
    5c6c:	movt	r2, #0
    5c70:	movw	r3, #2493	; 0x9bd
    5c74:	bl	0 <coda_set_error>
    5c78:	mvn	r0, #0
    5c7c:	str	r0, [fp, #-4]
    5c80:	b	5f88 <coda_type_time_add_ascii_float_mapping+0x350>
    5c84:	ldr	r0, [fp, #-12]
    5c88:	movw	r1, #0
    5c8c:	cmp	r0, r1
    5c90:	bne	5cbc <coda_type_time_add_ascii_float_mapping+0x84>
    5c94:	mvn	r0, #99	; 0x63
    5c98:	movw	r1, #0
    5c9c:	movt	r1, #0
    5ca0:	movw	r2, #0
    5ca4:	movt	r2, #0
    5ca8:	movw	r3, #2498	; 0x9c2
    5cac:	bl	0 <coda_set_error>
    5cb0:	mvn	r0, #0
    5cb4:	str	r0, [fp, #-4]
    5cb8:	b	5f88 <coda_type_time_add_ascii_float_mapping+0x350>
    5cbc:	ldr	r0, [fp, #-8]
    5cc0:	ldr	r0, [r0, #40]	; 0x28
    5cc4:	cmp	r0, #2
    5cc8:	beq	5d00 <coda_type_time_add_ascii_float_mapping+0xc8>
    5ccc:	ldr	r0, [fp, #-8]
    5cd0:	ldr	r0, [r0, #40]	; 0x28
    5cd4:	bl	5f98 <coda_type_get_special_type_name>
    5cd8:	ldr	r1, [pc, #692]	; 5f94 <coda_type_time_add_ascii_float_mapping+0x35c>
    5cdc:	str	r0, [sp, #68]	; 0x44
    5ce0:	mov	r0, r1
    5ce4:	movw	r1, #0
    5ce8:	movt	r1, #0
    5cec:	ldr	r2, [sp, #68]	; 0x44
    5cf0:	bl	0 <coda_set_error>
    5cf4:	mvn	r0, #0
    5cf8:	str	r0, [fp, #-4]
    5cfc:	b	5f88 <coda_type_time_add_ascii_float_mapping+0x350>
    5d00:	ldr	r0, [fp, #-8]
    5d04:	ldr	r0, [r0, #44]	; 0x2c
    5d08:	movw	r1, #0
    5d0c:	cmp	r0, r1
    5d10:	bne	5d30 <coda_type_time_add_ascii_float_mapping+0xf8>
    5d14:	ldr	r0, [pc, #632]	; 5f94 <coda_type_time_add_ascii_float_mapping+0x35c>
    5d18:	movw	r1, #0
    5d1c:	movt	r1, #0
    5d20:	bl	0 <coda_set_error>
    5d24:	mvn	r0, #0
    5d28:	str	r0, [fp, #-4]
    5d2c:	b	5f88 <coda_type_time_add_ascii_float_mapping+0x350>
    5d30:	ldr	r0, [fp, #-8]
    5d34:	ldr	r0, [r0, #44]	; 0x2c
    5d38:	ldr	r0, [r0, #8]
    5d3c:	cmp	r0, #4
    5d40:	beq	5d7c <coda_type_time_add_ascii_float_mapping+0x144>
    5d44:	ldr	r0, [fp, #-8]
    5d48:	ldr	r0, [r0, #44]	; 0x2c
    5d4c:	ldr	r0, [r0, #8]
    5d50:	bl	fc4 <coda_type_get_class_name>
    5d54:	ldr	r1, [pc, #568]	; 5f94 <coda_type_time_add_ascii_float_mapping+0x35c>
    5d58:	str	r0, [sp, #64]	; 0x40
    5d5c:	mov	r0, r1
    5d60:	movw	r1, #0
    5d64:	movt	r1, #0
    5d68:	ldr	r2, [sp, #64]	; 0x40
    5d6c:	bl	0 <coda_set_error>
    5d70:	mvn	r0, #0
    5d74:	str	r0, [fp, #-4]
    5d78:	b	5f88 <coda_type_time_add_ascii_float_mapping+0x350>
    5d7c:	sub	r0, fp, #76	; 0x4c
    5d80:	ldr	r1, [fp, #-12]
    5d84:	ldr	r2, [r1]
    5d88:	movw	r1, #0
    5d8c:	movt	r1, #0
    5d90:	bl	0 <sprintf>
    5d94:	sub	r1, fp, #76	; 0x4c
    5d98:	str	r0, [sp, #60]	; 0x3c
    5d9c:	mov	r0, r1
    5da0:	bl	0 <strdup>
    5da4:	movw	r1, #20
    5da8:	str	r0, [sp, #56]	; 0x38
    5dac:	mov	r0, r1
    5db0:	ldr	r1, [sp, #56]	; 0x38
    5db4:	movw	r2, #0
    5db8:	str	r2, [sp, #52]	; 0x34
    5dbc:	ldr	r3, [sp, #52]	; 0x34
    5dc0:	ldr	ip, [sp, #52]	; 0x34
    5dc4:	str	ip, [sp]
    5dc8:	str	ip, [sp, #4]
    5dcc:	bl	0 <coda_expression_new>
    5dd0:	str	r0, [sp, #76]	; 0x4c
    5dd4:	ldr	r0, [fp, #-12]
    5dd8:	ldr	r0, [r0]
    5ddc:	cmp	r0, #0
    5de0:	bne	5e38 <coda_type_time_add_ascii_float_mapping+0x200>
    5de4:	movw	r0, #36	; 0x24
    5de8:	movw	r1, #0
    5dec:	str	r1, [sp, #48]	; 0x30
    5df0:	ldr	r2, [sp, #48]	; 0x30
    5df4:	ldr	r3, [sp, #48]	; 0x30
    5df8:	ldr	ip, [sp, #48]	; 0x30
    5dfc:	str	ip, [sp]
    5e00:	str	ip, [sp, #4]
    5e04:	bl	0 <coda_expression_new>
    5e08:	str	r0, [sp, #72]	; 0x48
    5e0c:	ldr	r2, [sp, #72]	; 0x48
    5e10:	movw	r0, #50	; 0x32
    5e14:	movw	r1, #0
    5e18:	str	r1, [sp, #44]	; 0x2c
    5e1c:	ldr	r3, [sp, #44]	; 0x2c
    5e20:	ldr	ip, [sp, #44]	; 0x2c
    5e24:	str	ip, [sp]
    5e28:	str	ip, [sp, #4]
    5e2c:	bl	0 <coda_expression_new>
    5e30:	str	r0, [sp, #80]	; 0x50
    5e34:	b	5ec4 <coda_type_time_add_ascii_float_mapping+0x28c>
    5e38:	movw	r0, #36	; 0x24
    5e3c:	movw	r1, #0
    5e40:	str	r1, [sp, #40]	; 0x28
    5e44:	ldr	r2, [sp, #40]	; 0x28
    5e48:	ldr	r3, [sp, #40]	; 0x28
    5e4c:	ldr	ip, [sp, #40]	; 0x28
    5e50:	str	ip, [sp]
    5e54:	str	ip, [sp, #4]
    5e58:	bl	0 <coda_expression_new>
    5e5c:	str	r0, [sp, #72]	; 0x48
    5e60:	ldr	r2, [sp, #72]	; 0x48
    5e64:	ldr	r3, [sp, #76]	; 0x4c
    5e68:	movw	r0, #75	; 0x4b
    5e6c:	movw	r1, #0
    5e70:	str	r1, [sp, #36]	; 0x24
    5e74:	ldr	ip, [sp, #36]	; 0x24
    5e78:	str	ip, [sp]
    5e7c:	str	ip, [sp, #4]
    5e80:	bl	0 <coda_expression_new>
    5e84:	str	r0, [sp, #80]	; 0x50
    5e88:	ldr	r0, [fp, #-12]
    5e8c:	ldr	r0, [r0, #4]
    5e90:	bl	0 <strdup>
    5e94:	movw	r1, #22
    5e98:	str	r0, [sp, #32]
    5e9c:	mov	r0, r1
    5ea0:	ldr	r1, [sp, #32]
    5ea4:	movw	r2, #0
    5ea8:	str	r2, [sp, #28]
    5eac:	ldr	r3, [sp, #28]
    5eb0:	ldr	ip, [sp, #28]
    5eb4:	str	ip, [sp]
    5eb8:	str	ip, [sp, #4]
    5ebc:	bl	0 <coda_expression_new>
    5ec0:	str	r0, [sp, #76]	; 0x4c
    5ec4:	ldr	r2, [sp, #80]	; 0x50
    5ec8:	ldr	r3, [sp, #76]	; 0x4c
    5ecc:	movw	r0, #25
    5ed0:	movw	r1, #0
    5ed4:	str	r1, [sp, #24]
    5ed8:	ldr	ip, [sp, #24]
    5edc:	str	ip, [sp]
    5ee0:	str	ip, [sp, #4]
    5ee4:	bl	0 <coda_expression_new>
    5ee8:	sub	r1, fp, #76	; 0x4c
    5eec:	str	r0, [sp, #80]	; 0x50
    5ef0:	ldr	r0, [fp, #-12]
    5ef4:	vldr	d0, [r0, #8]
    5ef8:	mov	r0, r1
    5efc:	bl	0 <coda_strfl>
    5f00:	sub	r0, fp, #76	; 0x4c
    5f04:	bl	0 <strdup>
    5f08:	movw	r1, #19
    5f0c:	str	r0, [sp, #20]
    5f10:	mov	r0, r1
    5f14:	ldr	r1, [sp, #20]
    5f18:	movw	r2, #0
    5f1c:	str	r2, [sp, #16]
    5f20:	ldr	r3, [sp, #16]
    5f24:	ldr	ip, [sp, #16]
    5f28:	str	ip, [sp]
    5f2c:	str	ip, [sp, #4]
    5f30:	bl	0 <coda_expression_new>
    5f34:	str	r0, [sp, #76]	; 0x4c
    5f38:	ldr	r2, [sp, #80]	; 0x50
    5f3c:	ldr	r3, [sp, #76]	; 0x4c
    5f40:	ldr	r0, [fp, #-8]
    5f44:	ldr	r0, [r0, #52]	; 0x34
    5f48:	movw	r1, #42	; 0x2a
    5f4c:	str	r0, [sp, #12]
    5f50:	mov	r0, r1
    5f54:	movw	r1, #0
    5f58:	str	r1, [sp, #8]
    5f5c:	ldr	ip, [sp, #12]
    5f60:	str	ip, [sp]
    5f64:	ldr	lr, [sp, #8]
    5f68:	str	lr, [sp, #4]
    5f6c:	bl	0 <coda_expression_new>
    5f70:	ldr	r1, [fp, #-8]
    5f74:	str	r0, [r1, #52]	; 0x34
    5f78:	ldr	r0, [fp, #-12]
    5f7c:	bl	580 <coda_ascii_float_mapping_delete>
    5f80:	movw	r0, #0
    5f84:	str	r0, [fp, #-4]
    5f88:	ldr	r0, [fp, #-4]
    5f8c:	mov	sp, fp
    5f90:	pop	{fp, pc}
    5f94:	.word	0xfffffe70

00005f98 <coda_type_get_special_type_name>:
    5f98:	sub	sp, sp, #12
    5f9c:	str	r0, [sp, #4]
    5fa0:	ldr	r0, [sp, #4]
    5fa4:	cmp	r0, #3
    5fa8:	str	r0, [sp]
    5fac:	bhi	6010 <coda_type_get_special_type_name+0x78>
    5fb0:	add	r0, pc, #8
    5fb4:	ldr	r1, [sp]
    5fb8:	ldr	r0, [r0, r1, lsl #2]
    5fbc:	mov	pc, r0
    5fc0:	.word	0x00005fd0
    5fc4:	.word	0x00005fe0
    5fc8:	.word	0x00005ff0
    5fcc:	.word	0x00006000
    5fd0:	movw	r0, #0
    5fd4:	movt	r0, #0
    5fd8:	str	r0, [sp, #8]
    5fdc:	b	601c <coda_type_get_special_type_name+0x84>
    5fe0:	movw	r0, #0
    5fe4:	movt	r0, #0
    5fe8:	str	r0, [sp, #8]
    5fec:	b	601c <coda_type_get_special_type_name+0x84>
    5ff0:	movw	r0, #0
    5ff4:	movt	r0, #0
    5ff8:	str	r0, [sp, #8]
    5ffc:	b	601c <coda_type_get_special_type_name+0x84>
    6000:	movw	r0, #0
    6004:	movt	r0, #0
    6008:	str	r0, [sp, #8]
    600c:	b	601c <coda_type_get_special_type_name+0x84>
    6010:	movw	r0, #0
    6014:	movt	r0, #0
    6018:	str	r0, [sp, #8]
    601c:	ldr	r0, [sp, #8]
    6020:	add	sp, sp, #12
    6024:	bx	lr

00006028 <coda_type_time_set_base_type>:
    6028:	push	{fp, lr}
    602c:	mov	fp, sp
    6030:	sub	sp, sp, #16
    6034:	str	r0, [sp, #8]
    6038:	str	r1, [sp, #4]
    603c:	ldr	r0, [sp, #8]
    6040:	movw	r1, #0
    6044:	cmp	r0, r1
    6048:	bne	6074 <coda_type_time_set_base_type+0x4c>
    604c:	mvn	r0, #99	; 0x63
    6050:	movw	r1, #0
    6054:	movt	r1, #0
    6058:	movw	r2, #0
    605c:	movt	r2, #0
    6060:	movw	r3, #2548	; 0x9f4
    6064:	bl	0 <coda_set_error>
    6068:	mvn	r0, #0
    606c:	str	r0, [fp, #-4]
    6070:	b	615c <coda_type_time_set_base_type+0x134>
    6074:	ldr	r0, [sp, #4]
    6078:	movw	r1, #0
    607c:	cmp	r0, r1
    6080:	bne	60ac <coda_type_time_set_base_type+0x84>
    6084:	mvn	r0, #99	; 0x63
    6088:	movw	r1, #0
    608c:	movt	r1, #0
    6090:	movw	r2, #0
    6094:	movt	r2, #0
    6098:	movw	r3, #2553	; 0x9f9
    609c:	bl	0 <coda_set_error>
    60a0:	mvn	r0, #0
    60a4:	str	r0, [fp, #-4]
    60a8:	b	615c <coda_type_time_set_base_type+0x134>
    60ac:	ldr	r0, [sp, #8]
    60b0:	ldr	r0, [r0, #40]	; 0x28
    60b4:	cmp	r0, #2
    60b8:	beq	60f0 <coda_type_time_set_base_type+0xc8>
    60bc:	ldr	r0, [sp, #8]
    60c0:	ldr	r0, [r0, #40]	; 0x28
    60c4:	bl	5f98 <coda_type_get_special_type_name>
    60c8:	ldr	r1, [pc, #152]	; 6168 <coda_type_time_set_base_type+0x140>
    60cc:	str	r0, [sp]
    60d0:	mov	r0, r1
    60d4:	movw	r1, #0
    60d8:	movt	r1, #0
    60dc:	ldr	r2, [sp]
    60e0:	bl	0 <coda_set_error>
    60e4:	mvn	r0, #0
    60e8:	str	r0, [fp, #-4]
    60ec:	b	615c <coda_type_time_set_base_type+0x134>
    60f0:	ldr	r0, [sp, #8]
    60f4:	ldr	r0, [r0, #44]	; 0x2c
    60f8:	movw	r1, #0
    60fc:	cmp	r0, r1
    6100:	beq	6120 <coda_type_time_set_base_type+0xf8>
    6104:	ldr	r0, [pc, #92]	; 6168 <coda_type_time_set_base_type+0x140>
    6108:	movw	r1, #0
    610c:	movt	r1, #0
    6110:	bl	0 <coda_set_error>
    6114:	mvn	r0, #0
    6118:	str	r0, [fp, #-4]
    611c:	b	615c <coda_type_time_set_base_type+0x134>
    6120:	ldr	r0, [sp, #4]
    6124:	ldr	r1, [sp, #8]
    6128:	str	r0, [r1, #44]	; 0x2c
    612c:	ldr	r0, [sp, #4]
    6130:	ldr	r1, [r0, #4]
    6134:	add	r1, r1, #1
    6138:	str	r1, [r0, #4]
    613c:	ldr	r0, [sp, #8]
    6140:	ldr	r1, [r0, #44]	; 0x2c
    6144:	ldr	r2, [r1, #24]
    6148:	ldr	r1, [r1, #28]
    614c:	str	r1, [r0, #28]
    6150:	str	r2, [r0, #24]
    6154:	movw	r0, #0
    6158:	str	r0, [fp, #-4]
    615c:	ldr	r0, [fp, #-4]
    6160:	mov	sp, fp
    6164:	pop	{fp, pc}
    6168:	.word	0xfffffe70

0000616c <coda_type_time_validate>:
    616c:	push	{fp, lr}
    6170:	mov	fp, sp
    6174:	sub	sp, sp, #8
    6178:	str	r0, [sp]
    617c:	ldr	r0, [sp]
    6180:	ldr	r0, [r0, #44]	; 0x2c
    6184:	movw	r1, #0
    6188:	cmp	r0, r1
    618c:	bne	61ac <coda_type_time_validate+0x40>
    6190:	ldr	r0, [pc, #40]	; 61c0 <coda_type_time_validate+0x54>
    6194:	movw	r1, #0
    6198:	movt	r1, #0
    619c:	bl	0 <coda_set_error>
    61a0:	mvn	r0, #0
    61a4:	str	r0, [sp, #4]
    61a8:	b	61b4 <coda_type_time_validate+0x48>
    61ac:	movw	r0, #0
    61b0:	str	r0, [sp, #4]
    61b4:	ldr	r0, [sp, #4]
    61b8:	mov	sp, fp
    61bc:	pop	{fp, pc}
    61c0:	.word	0xfffffe70

000061c4 <coda_type_complex_new>:
    61c4:	push	{fp, lr}
    61c8:	mov	fp, sp
    61cc:	sub	sp, sp, #16
    61d0:	str	r0, [sp, #8]
    61d4:	movw	r0, #56	; 0x38
    61d8:	bl	0 <malloc>
    61dc:	str	r0, [sp, #4]
    61e0:	ldr	r0, [sp, #4]
    61e4:	movw	r1, #0
    61e8:	cmp	r0, r1
    61ec:	bne	6220 <coda_type_complex_new+0x5c>
    61f0:	mvn	r0, #0
    61f4:	movw	r1, #0
    61f8:	movt	r1, #0
    61fc:	movw	r2, #56	; 0x38
    6200:	movw	r3, #0
    6204:	movt	r3, #0
    6208:	movw	ip, #2595	; 0xa23
    620c:	str	ip, [sp]
    6210:	bl	0 <coda_set_error>
    6214:	movw	r0, #0
    6218:	str	r0, [fp, #-4]
    621c:	b	62ac <coda_type_complex_new+0xe8>
    6220:	ldr	r0, [sp, #8]
    6224:	ldr	r1, [sp, #4]
    6228:	str	r0, [r1]
    622c:	ldr	r0, [sp, #4]
    6230:	mov	r1, #0
    6234:	str	r1, [r0, #4]
    6238:	ldr	r0, [sp, #4]
    623c:	mov	r2, #6
    6240:	str	r2, [r0, #8]
    6244:	ldr	r0, [sp, #4]
    6248:	mvn	r2, #0
    624c:	str	r2, [r0, #12]
    6250:	ldr	r0, [sp, #4]
    6254:	str	r1, [r0, #16]
    6258:	ldr	r0, [sp, #4]
    625c:	str	r1, [r0, #20]
    6260:	ldr	r0, [sp, #4]
    6264:	str	r2, [r0, #28]
    6268:	str	r2, [r0, #24]
    626c:	ldr	r0, [sp, #4]
    6270:	movw	r1, #0
    6274:	str	r1, [r0, #32]
    6278:	ldr	r0, [sp, #4]
    627c:	str	r1, [r0, #36]	; 0x24
    6280:	ldr	r0, [sp, #4]
    6284:	movw	r2, #3
    6288:	str	r2, [r0, #40]	; 0x28
    628c:	ldr	r0, [sp, #4]
    6290:	str	r1, [r0, #44]	; 0x2c
    6294:	ldr	r0, [sp, #4]
    6298:	str	r1, [r0, #48]	; 0x30
    629c:	ldr	r0, [sp, #4]
    62a0:	str	r1, [r0, #52]	; 0x34
    62a4:	ldr	r0, [sp, #4]
    62a8:	str	r0, [fp, #-4]
    62ac:	ldr	r0, [fp, #-4]
    62b0:	mov	sp, fp
    62b4:	pop	{fp, pc}

000062b8 <coda_type_complex_set_type>:
    62b8:	push	{fp, lr}
    62bc:	mov	fp, sp
    62c0:	sub	sp, sp, #40	; 0x28
    62c4:	str	r0, [fp, #-8]
    62c8:	str	r1, [fp, #-12]
    62cc:	ldr	r0, [fp, #-8]
    62d0:	ldr	r0, [r0, #44]	; 0x2c
    62d4:	movw	r1, #0
    62d8:	cmp	r0, r1
    62dc:	beq	62fc <coda_type_complex_set_type+0x44>
    62e0:	ldr	r0, [pc, #388]	; 646c <coda_type_complex_set_type+0x1b4>
    62e4:	movw	r1, #0
    62e8:	movt	r1, #0
    62ec:	bl	0 <coda_set_error>
    62f0:	mvn	r0, #0
    62f4:	str	r0, [fp, #-4]
    62f8:	b	6460 <coda_type_complex_set_type+0x1a8>
    62fc:	ldr	r0, [fp, #-12]
    6300:	ldr	r0, [r0, #8]
    6304:	cmp	r0, #2
    6308:	beq	6350 <coda_type_complex_set_type+0x98>
    630c:	ldr	r0, [fp, #-12]
    6310:	ldr	r0, [r0, #8]
    6314:	cmp	r0, #3
    6318:	beq	6350 <coda_type_complex_set_type+0x98>
    631c:	ldr	r0, [fp, #-8]
    6320:	ldr	r0, [r0, #8]
    6324:	bl	fc4 <coda_type_get_class_name>
    6328:	ldr	r1, [pc, #316]	; 646c <coda_type_complex_set_type+0x1b4>
    632c:	str	r0, [sp, #20]
    6330:	mov	r0, r1
    6334:	movw	r1, #0
    6338:	movt	r1, #0
    633c:	ldr	r2, [sp, #20]
    6340:	bl	0 <coda_set_error>
    6344:	mvn	r0, #0
    6348:	str	r0, [fp, #-4]
    634c:	b	6460 <coda_type_complex_set_type+0x1a8>
    6350:	ldr	r0, [fp, #-8]
    6354:	ldr	r0, [r0]
    6358:	ldr	r1, [fp, #-12]
    635c:	ldr	r1, [r1]
    6360:	cmp	r0, r1
    6364:	beq	63b4 <coda_type_complex_set_type+0xfc>
    6368:	ldr	r0, [fp, #-12]
    636c:	ldr	r0, [r0]
    6370:	bl	25a4 <coda_type_get_format_name>
    6374:	ldr	r1, [fp, #-8]
    6378:	ldr	r1, [r1]
    637c:	str	r0, [sp, #16]
    6380:	mov	r0, r1
    6384:	bl	25a4 <coda_type_get_format_name>
    6388:	ldr	r1, [pc, #220]	; 646c <coda_type_complex_set_type+0x1b4>
    638c:	str	r0, [sp, #12]
    6390:	mov	r0, r1
    6394:	movw	r1, #0
    6398:	movt	r1, #0
    639c:	ldr	r2, [sp, #16]
    63a0:	ldr	r3, [sp, #12]
    63a4:	bl	0 <coda_set_error>
    63a8:	mvn	r0, #0
    63ac:	str	r0, [fp, #-4]
    63b0:	b	6460 <coda_type_complex_set_type+0x1a8>
    63b4:	ldr	r0, [fp, #-8]
    63b8:	ldr	r0, [r0]
    63bc:	bl	1bf0 <coda_type_record_new>
    63c0:	ldr	r1, [fp, #-8]
    63c4:	str	r0, [r1, #44]	; 0x2c
    63c8:	movw	r0, #0
    63cc:	movt	r0, #0
    63d0:	bl	1f38 <coda_type_record_field_new>
    63d4:	str	r0, [fp, #-16]
    63d8:	ldr	r0, [fp, #-16]
    63dc:	ldr	r1, [fp, #-12]
    63e0:	bl	21d0 <coda_type_record_field_set_type>
    63e4:	ldr	r1, [fp, #-8]
    63e8:	ldr	r1, [r1, #44]	; 0x2c
    63ec:	ldr	r2, [fp, #-16]
    63f0:	str	r0, [sp, #8]
    63f4:	mov	r0, r1
    63f8:	mov	r1, r2
    63fc:	bl	1dd8 <coda_type_record_add_field>
    6400:	movw	r1, #0
    6404:	movt	r1, #0
    6408:	str	r0, [sp, #4]
    640c:	mov	r0, r1
    6410:	bl	1f38 <coda_type_record_field_new>
    6414:	str	r0, [fp, #-16]
    6418:	ldr	r0, [fp, #-16]
    641c:	ldr	r1, [fp, #-12]
    6420:	bl	21d0 <coda_type_record_field_set_type>
    6424:	ldr	r1, [fp, #-8]
    6428:	ldr	r1, [r1, #44]	; 0x2c
    642c:	ldr	r2, [fp, #-16]
    6430:	str	r0, [sp]
    6434:	mov	r0, r1
    6438:	mov	r1, r2
    643c:	bl	1dd8 <coda_type_record_add_field>
    6440:	ldr	r1, [fp, #-8]
    6444:	ldr	r2, [r1, #44]	; 0x2c
    6448:	ldr	r3, [r2, #24]
    644c:	ldr	r2, [r2, #28]
    6450:	str	r2, [r1, #28]
    6454:	str	r3, [r1, #24]
    6458:	movw	r1, #0
    645c:	str	r1, [fp, #-4]
    6460:	ldr	r0, [fp, #-4]
    6464:	mov	sp, fp
    6468:	pop	{fp, pc}
    646c:	.word	0xfffffe70

00006470 <coda_type_complex_validate>:
    6470:	push	{fp, lr}
    6474:	mov	fp, sp
    6478:	sub	sp, sp, #8
    647c:	str	r0, [sp]
    6480:	ldr	r0, [sp]
    6484:	ldr	r0, [r0, #44]	; 0x2c
    6488:	movw	r1, #0
    648c:	cmp	r0, r1
    6490:	bne	64b0 <coda_type_complex_validate+0x40>
    6494:	ldr	r0, [pc, #40]	; 64c4 <coda_type_complex_validate+0x54>
    6498:	movw	r1, #0
    649c:	movt	r1, #0
    64a0:	bl	0 <coda_set_error>
    64a4:	mvn	r0, #0
    64a8:	str	r0, [sp, #4]
    64ac:	b	64b8 <coda_type_complex_validate+0x48>
    64b0:	movw	r0, #0
    64b4:	str	r0, [sp, #4]
    64b8:	ldr	r0, [sp, #4]
    64bc:	mov	sp, fp
    64c0:	pop	{fp, pc}
    64c4:	.word	0xfffffe70

000064c8 <coda_type_done>:
    64c8:	push	{fp, lr}
    64cc:	mov	fp, sp
    64d0:	sub	sp, sp, #56	; 0x38
    64d4:	movw	r0, #0
    64d8:	str	r0, [fp, #-4]
    64dc:	ldr	r0, [fp, #-4]
    64e0:	cmp	r0, #11
    64e4:	bge	6584 <coda_type_done+0xbc>
    64e8:	ldr	r0, [fp, #-4]
    64ec:	ldr	r1, [pc, #332]	; 6640 <coda_type_done+0x178>
    64f0:	str	r0, [fp, #-8]
    64f4:	str	r1, [fp, #-12]
    64f8:	bl	0 <__aeabi_read_tp>
    64fc:	ldr	r1, [fp, #-12]
    6500:	add	r0, r0, r1
    6504:	ldr	r1, [fp, #-8]
    6508:	add	r0, r0, r1, lsl #2
    650c:	ldr	r0, [r0]
    6510:	movw	r1, #0
    6514:	cmp	r0, r1
    6518:	beq	6548 <coda_type_done+0x80>
    651c:	ldr	r0, [fp, #-4]
    6520:	ldr	r1, [pc, #280]	; 6640 <coda_type_done+0x178>
    6524:	str	r0, [fp, #-16]
    6528:	str	r1, [fp, #-20]	; 0xffffffec
    652c:	bl	0 <__aeabi_read_tp>
    6530:	ldr	r1, [fp, #-20]	; 0xffffffec
    6534:	add	r0, r0, r1
    6538:	ldr	r1, [fp, #-16]
    653c:	add	r0, r0, r1, lsl #2
    6540:	ldr	r0, [r0]
    6544:	bl	674 <coda_type_release>
    6548:	ldr	r0, [fp, #-4]
    654c:	ldr	r1, [pc, #236]	; 6640 <coda_type_done+0x178>
    6550:	str	r0, [fp, #-24]	; 0xffffffe8
    6554:	str	r1, [sp, #28]
    6558:	bl	0 <__aeabi_read_tp>
    655c:	ldr	r1, [sp, #28]
    6560:	add	r0, r0, r1
    6564:	ldr	r1, [fp, #-24]	; 0xffffffe8
    6568:	add	r0, r0, r1, lsl #2
    656c:	movw	r1, #0
    6570:	str	r1, [r0]
    6574:	ldr	r0, [fp, #-4]
    6578:	add	r0, r0, #1
    657c:	str	r0, [fp, #-4]
    6580:	b	64dc <coda_type_done+0x14>
    6584:	movw	r0, #0
    6588:	str	r0, [fp, #-4]
    658c:	ldr	r0, [fp, #-4]
    6590:	cmp	r0, #11
    6594:	bge	6634 <coda_type_done+0x16c>
    6598:	ldr	r0, [fp, #-4]
    659c:	ldr	r1, [pc, #152]	; 663c <coda_type_done+0x174>
    65a0:	str	r0, [sp, #24]
    65a4:	str	r1, [sp, #20]
    65a8:	bl	0 <__aeabi_read_tp>
    65ac:	ldr	r1, [sp, #20]
    65b0:	add	r0, r0, r1
    65b4:	ldr	r1, [sp, #24]
    65b8:	add	r0, r0, r1, lsl #2
    65bc:	ldr	r0, [r0]
    65c0:	movw	r1, #0
    65c4:	cmp	r0, r1
    65c8:	beq	65f8 <coda_type_done+0x130>
    65cc:	ldr	r0, [fp, #-4]
    65d0:	ldr	r1, [pc, #100]	; 663c <coda_type_done+0x174>
    65d4:	str	r0, [sp, #16]
    65d8:	str	r1, [sp, #12]
    65dc:	bl	0 <__aeabi_read_tp>
    65e0:	ldr	r1, [sp, #12]
    65e4:	add	r0, r0, r1
    65e8:	ldr	r1, [sp, #16]
    65ec:	add	r0, r0, r1, lsl #2
    65f0:	ldr	r0, [r0]
    65f4:	bl	674 <coda_type_release>
    65f8:	ldr	r0, [fp, #-4]
    65fc:	ldr	r1, [pc, #56]	; 663c <coda_type_done+0x174>
    6600:	str	r0, [sp, #8]
    6604:	str	r1, [sp, #4]
    6608:	bl	0 <__aeabi_read_tp>
    660c:	ldr	r1, [sp, #4]
    6610:	add	r0, r0, r1
    6614:	ldr	r1, [sp, #8]
    6618:	add	r0, r0, r1, lsl #2
    661c:	movw	r1, #0
    6620:	str	r1, [r0]
    6624:	ldr	r0, [fp, #-4]
    6628:	add	r0, r0, #1
    662c:	str	r0, [fp, #-4]
    6630:	b	658c <coda_type_done+0xc4>
    6634:	mov	sp, fp
    6638:	pop	{fp, pc}
	...

00006644 <coda_type_has_attributes>:
    6644:	push	{fp, lr}
    6648:	mov	fp, sp
    664c:	sub	sp, sp, #16
    6650:	str	r0, [sp, #8]
    6654:	str	r1, [sp, #4]
    6658:	ldr	r0, [sp, #8]
    665c:	movw	r1, #0
    6660:	cmp	r0, r1
    6664:	bne	6690 <coda_type_has_attributes+0x4c>
    6668:	mvn	r0, #99	; 0x63
    666c:	movw	r1, #0
    6670:	movt	r1, #0
    6674:	movw	r2, #0
    6678:	movt	r2, #0
    667c:	movw	r3, #2829	; 0xb0d
    6680:	bl	0 <coda_set_error>
    6684:	mvn	r0, #0
    6688:	str	r0, [fp, #-4]
    668c:	b	66f0 <coda_type_has_attributes+0xac>
    6690:	ldr	r0, [sp, #4]
    6694:	movw	r1, #0
    6698:	cmp	r0, r1
    669c:	bne	66c8 <coda_type_has_attributes+0x84>
    66a0:	mvn	r0, #99	; 0x63
    66a4:	movw	r1, #0
    66a8:	movt	r1, #0
    66ac:	movw	r2, #0
    66b0:	movt	r2, #0
    66b4:	movw	r3, #2834	; 0xb12
    66b8:	bl	0 <coda_set_error>
    66bc:	mvn	r0, #0
    66c0:	str	r0, [fp, #-4]
    66c4:	b	66f0 <coda_type_has_attributes+0xac>
    66c8:	ldr	r0, [sp, #8]
    66cc:	ldr	r0, [r0, #36]	; 0x24
    66d0:	movw	r1, #0
    66d4:	cmp	r0, r1
    66d8:	movw	r0, #0
    66dc:	movne	r0, #1
    66e0:	and	r0, r0, #1
    66e4:	ldr	r2, [sp, #4]
    66e8:	str	r0, [r2]
    66ec:	str	r1, [fp, #-4]
    66f0:	ldr	r0, [fp, #-4]
    66f4:	mov	sp, fp
    66f8:	pop	{fp, pc}

000066fc <coda_type_get_format>:
    66fc:	push	{fp, lr}
    6700:	mov	fp, sp
    6704:	sub	sp, sp, #16
    6708:	str	r0, [sp, #8]
    670c:	str	r1, [sp, #4]
    6710:	ldr	r0, [sp, #8]
    6714:	movw	r1, #0
    6718:	cmp	r0, r1
    671c:	bne	6748 <coda_type_get_format+0x4c>
    6720:	mvn	r0, #99	; 0x63
    6724:	movw	r1, #0
    6728:	movt	r1, #0
    672c:	movw	r2, #0
    6730:	movt	r2, #0
    6734:	movw	r3, #2853	; 0xb25
    6738:	bl	0 <coda_set_error>
    673c:	mvn	r0, #0
    6740:	str	r0, [fp, #-4]
    6744:	b	6798 <coda_type_get_format+0x9c>
    6748:	ldr	r0, [sp, #4]
    674c:	movw	r1, #0
    6750:	cmp	r0, r1
    6754:	bne	6780 <coda_type_get_format+0x84>
    6758:	mvn	r0, #99	; 0x63
    675c:	movw	r1, #0
    6760:	movt	r1, #0
    6764:	movw	r2, #0
    6768:	movt	r2, #0
    676c:	movw	r3, #2858	; 0xb2a
    6770:	bl	0 <coda_set_error>
    6774:	mvn	r0, #0
    6778:	str	r0, [fp, #-4]
    677c:	b	6798 <coda_type_get_format+0x9c>
    6780:	ldr	r0, [sp, #8]
    6784:	ldr	r0, [r0]
    6788:	ldr	r1, [sp, #4]
    678c:	str	r0, [r1]
    6790:	movw	r0, #0
    6794:	str	r0, [fp, #-4]
    6798:	ldr	r0, [fp, #-4]
    679c:	mov	sp, fp
    67a0:	pop	{fp, pc}

000067a4 <coda_type_get_class>:
    67a4:	push	{fp, lr}
    67a8:	mov	fp, sp
    67ac:	sub	sp, sp, #16
    67b0:	str	r0, [sp, #8]
    67b4:	str	r1, [sp, #4]
    67b8:	ldr	r0, [sp, #8]
    67bc:	movw	r1, #0
    67c0:	cmp	r0, r1
    67c4:	bne	67f0 <coda_type_get_class+0x4c>
    67c8:	mvn	r0, #99	; 0x63
    67cc:	movw	r1, #0
    67d0:	movt	r1, #0
    67d4:	movw	r2, #0
    67d8:	movt	r2, #0
    67dc:	movw	r3, #2877	; 0xb3d
    67e0:	bl	0 <coda_set_error>
    67e4:	mvn	r0, #0
    67e8:	str	r0, [fp, #-4]
    67ec:	b	6840 <coda_type_get_class+0x9c>
    67f0:	ldr	r0, [sp, #4]
    67f4:	movw	r1, #0
    67f8:	cmp	r0, r1
    67fc:	bne	6828 <coda_type_get_class+0x84>
    6800:	mvn	r0, #99	; 0x63
    6804:	movw	r1, #0
    6808:	movt	r1, #0
    680c:	movw	r2, #0
    6810:	movt	r2, #0
    6814:	movw	r3, #2882	; 0xb42
    6818:	bl	0 <coda_set_error>
    681c:	mvn	r0, #0
    6820:	str	r0, [fp, #-4]
    6824:	b	6840 <coda_type_get_class+0x9c>
    6828:	ldr	r0, [sp, #8]
    682c:	ldr	r0, [r0, #8]
    6830:	ldr	r1, [sp, #4]
    6834:	str	r0, [r1]
    6838:	movw	r0, #0
    683c:	str	r0, [fp, #-4]
    6840:	ldr	r0, [fp, #-4]
    6844:	mov	sp, fp
    6848:	pop	{fp, pc}

0000684c <coda_type_get_string_length>:
    684c:	push	{fp, lr}
    6850:	mov	fp, sp
    6854:	sub	sp, sp, #24
    6858:	str	r0, [fp, #-8]
    685c:	str	r1, [sp, #12]
    6860:	ldr	r0, [fp, #-8]
    6864:	movw	r1, #0
    6868:	cmp	r0, r1
    686c:	bne	6898 <coda_type_get_string_length+0x4c>
    6870:	mvn	r0, #99	; 0x63
    6874:	movw	r1, #0
    6878:	movt	r1, #0
    687c:	movw	r2, #0
    6880:	movt	r2, #0
    6884:	movw	r3, #2942	; 0xb7e
    6888:	bl	0 <coda_set_error>
    688c:	mvn	r0, #0
    6890:	str	r0, [fp, #-4]
    6894:	b	6960 <coda_type_get_string_length+0x114>
    6898:	ldr	r0, [fp, #-8]
    689c:	ldr	r0, [r0, #8]
    68a0:	cmp	r0, #4
    68a4:	beq	68dc <coda_type_get_string_length+0x90>
    68a8:	ldr	r0, [fp, #-8]
    68ac:	ldr	r0, [r0, #8]
    68b0:	bl	fc4 <coda_type_get_class_name>
    68b4:	mvn	r1, #104	; 0x68
    68b8:	str	r0, [sp, #8]
    68bc:	mov	r0, r1
    68c0:	movw	r1, #0
    68c4:	movt	r1, #0
    68c8:	ldr	r2, [sp, #8]
    68cc:	bl	0 <coda_set_error>
    68d0:	mvn	r0, #0
    68d4:	str	r0, [fp, #-4]
    68d8:	b	6960 <coda_type_get_string_length+0x114>
    68dc:	ldr	r0, [sp, #12]
    68e0:	movw	r1, #0
    68e4:	cmp	r0, r1
    68e8:	bne	6914 <coda_type_get_string_length+0xc8>
    68ec:	mvn	r0, #99	; 0x63
    68f0:	movw	r1, #0
    68f4:	movt	r1, #0
    68f8:	movw	r2, #0
    68fc:	movt	r2, #0
    6900:	movw	r3, #2953	; 0xb89
    6904:	bl	0 <coda_set_error>
    6908:	mvn	r0, #0
    690c:	str	r0, [fp, #-4]
    6910:	b	6960 <coda_type_get_string_length+0x114>
    6914:	ldr	r0, [fp, #-8]
    6918:	ldr	r0, [r0, #28]
    691c:	cmn	r0, #1
    6920:	bgt	6934 <coda_type_get_string_length+0xe8>
    6924:	b	6928 <coda_type_get_string_length+0xdc>
    6928:	mvn	r0, #0
    692c:	str	r0, [sp, #4]
    6930:	b	694c <coda_type_get_string_length+0x100>
    6934:	ldr	r0, [fp, #-8]
    6938:	ldr	r1, [r0, #24]
    693c:	ldr	r0, [r0, #28]
    6940:	lsr	r1, r1, #3
    6944:	orr	r0, r1, r0, lsl #29
    6948:	str	r0, [sp, #4]
    694c:	ldr	r0, [sp, #4]
    6950:	ldr	r1, [sp, #12]
    6954:	str	r0, [r1]
    6958:	movw	r0, #0
    695c:	str	r0, [fp, #-4]
    6960:	ldr	r0, [fp, #-4]
    6964:	mov	sp, fp
    6968:	pop	{fp, pc}

0000696c <coda_type_get_bit_size>:
    696c:	push	{fp, lr}
    6970:	mov	fp, sp
    6974:	sub	sp, sp, #24
    6978:	str	r0, [fp, #-8]
    697c:	str	r1, [sp, #12]
    6980:	ldr	r0, [fp, #-8]
    6984:	movw	r1, #0
    6988:	cmp	r0, r1
    698c:	bne	69b8 <coda_type_get_bit_size+0x4c>
    6990:	mvn	r0, #99	; 0x63
    6994:	movw	r1, #0
    6998:	movt	r1, #0
    699c:	movw	r2, #0
    69a0:	movt	r2, #0
    69a4:	movw	r3, #2980	; 0xba4
    69a8:	bl	0 <coda_set_error>
    69ac:	mvn	r0, #0
    69b0:	str	r0, [fp, #-4]
    69b4:	b	6a4c <coda_type_get_bit_size+0xe0>
    69b8:	ldr	r0, [sp, #12]
    69bc:	movw	r1, #0
    69c0:	cmp	r0, r1
    69c4:	bne	69f0 <coda_type_get_bit_size+0x84>
    69c8:	mvn	r0, #99	; 0x63
    69cc:	movw	r1, #0
    69d0:	movt	r1, #0
    69d4:	movw	r2, #0
    69d8:	movt	r2, #0
    69dc:	movw	r3, #2985	; 0xba9
    69e0:	bl	0 <coda_set_error>
    69e4:	mvn	r0, #0
    69e8:	str	r0, [fp, #-4]
    69ec:	b	6a4c <coda_type_get_bit_size+0xe0>
    69f0:	ldr	r0, [fp, #-8]
    69f4:	ldr	r0, [r0, #28]
    69f8:	cmp	r0, #0
    69fc:	bmi	6a1c <coda_type_get_bit_size+0xb0>
    6a00:	b	6a04 <coda_type_get_bit_size+0x98>
    6a04:	ldr	r0, [fp, #-8]
    6a08:	ldr	r1, [r0, #24]
    6a0c:	ldr	r0, [r0, #28]
    6a10:	str	r1, [sp, #8]
    6a14:	str	r0, [sp, #4]
    6a18:	b	6a30 <coda_type_get_bit_size+0xc4>
    6a1c:	mvn	r0, #0
    6a20:	mov	r1, r0
    6a24:	str	r1, [sp, #8]
    6a28:	str	r0, [sp, #4]
    6a2c:	b	6a30 <coda_type_get_bit_size+0xc4>
    6a30:	ldr	r0, [sp, #4]
    6a34:	ldr	r1, [sp, #8]
    6a38:	ldr	r2, [sp, #12]
    6a3c:	str	r1, [r2]
    6a40:	str	r0, [r2, #4]
    6a44:	movw	r0, #0
    6a48:	str	r0, [fp, #-4]
    6a4c:	ldr	r0, [fp, #-4]
    6a50:	mov	sp, fp
    6a54:	pop	{fp, pc}

00006a58 <coda_type_get_name>:
    6a58:	push	{fp, lr}
    6a5c:	mov	fp, sp
    6a60:	sub	sp, sp, #16
    6a64:	str	r0, [sp, #8]
    6a68:	str	r1, [sp, #4]
    6a6c:	ldr	r0, [sp, #8]
    6a70:	movw	r1, #0
    6a74:	cmp	r0, r1
    6a78:	bne	6aa4 <coda_type_get_name+0x4c>
    6a7c:	mvn	r0, #99	; 0x63
    6a80:	movw	r1, #0
    6a84:	movt	r1, #0
    6a88:	movw	r2, #0
    6a8c:	movt	r2, #0
    6a90:	movw	r3, #3012	; 0xbc4
    6a94:	bl	0 <coda_set_error>
    6a98:	mvn	r0, #0
    6a9c:	str	r0, [fp, #-4]
    6aa0:	b	6af4 <coda_type_get_name+0x9c>
    6aa4:	ldr	r0, [sp, #4]
    6aa8:	movw	r1, #0
    6aac:	cmp	r0, r1
    6ab0:	bne	6adc <coda_type_get_name+0x84>
    6ab4:	mvn	r0, #99	; 0x63
    6ab8:	movw	r1, #0
    6abc:	movt	r1, #0
    6ac0:	movw	r2, #0
    6ac4:	movt	r2, #0
    6ac8:	movw	r3, #3017	; 0xbc9
    6acc:	bl	0 <coda_set_error>
    6ad0:	mvn	r0, #0
    6ad4:	str	r0, [fp, #-4]
    6ad8:	b	6af4 <coda_type_get_name+0x9c>
    6adc:	ldr	r0, [sp, #8]
    6ae0:	ldr	r0, [r0, #16]
    6ae4:	ldr	r1, [sp, #4]
    6ae8:	str	r0, [r1]
    6aec:	movw	r0, #0
    6af0:	str	r0, [fp, #-4]
    6af4:	ldr	r0, [fp, #-4]
    6af8:	mov	sp, fp
    6afc:	pop	{fp, pc}

00006b00 <coda_type_get_description>:
    6b00:	push	{fp, lr}
    6b04:	mov	fp, sp
    6b08:	sub	sp, sp, #16
    6b0c:	str	r0, [sp, #8]
    6b10:	str	r1, [sp, #4]
    6b14:	ldr	r0, [sp, #8]
    6b18:	movw	r1, #0
    6b1c:	cmp	r0, r1
    6b20:	bne	6b4c <coda_type_get_description+0x4c>
    6b24:	mvn	r0, #99	; 0x63
    6b28:	movw	r1, #0
    6b2c:	movt	r1, #0
    6b30:	movw	r2, #0
    6b34:	movt	r2, #0
    6b38:	movw	r3, #3038	; 0xbde
    6b3c:	bl	0 <coda_set_error>
    6b40:	mvn	r0, #0
    6b44:	str	r0, [fp, #-4]
    6b48:	b	6b9c <coda_type_get_description+0x9c>
    6b4c:	ldr	r0, [sp, #4]
    6b50:	movw	r1, #0
    6b54:	cmp	r0, r1
    6b58:	bne	6b84 <coda_type_get_description+0x84>
    6b5c:	mvn	r0, #99	; 0x63
    6b60:	movw	r1, #0
    6b64:	movt	r1, #0
    6b68:	movw	r2, #0
    6b6c:	movt	r2, #0
    6b70:	movw	r3, #3043	; 0xbe3
    6b74:	bl	0 <coda_set_error>
    6b78:	mvn	r0, #0
    6b7c:	str	r0, [fp, #-4]
    6b80:	b	6b9c <coda_type_get_description+0x9c>
    6b84:	ldr	r0, [sp, #8]
    6b88:	ldr	r0, [r0, #20]
    6b8c:	ldr	r1, [sp, #4]
    6b90:	str	r0, [r1]
    6b94:	movw	r0, #0
    6b98:	str	r0, [fp, #-4]
    6b9c:	ldr	r0, [fp, #-4]
    6ba0:	mov	sp, fp
    6ba4:	pop	{fp, pc}

00006ba8 <coda_type_get_unit>:
    6ba8:	push	{fp, lr}
    6bac:	mov	fp, sp
    6bb0:	sub	sp, sp, #24
    6bb4:	str	r0, [fp, #-8]
    6bb8:	str	r1, [sp, #12]
    6bbc:	ldr	r0, [fp, #-8]
    6bc0:	movw	r1, #0
    6bc4:	cmp	r0, r1
    6bc8:	bne	6bf4 <coda_type_get_unit+0x4c>
    6bcc:	mvn	r0, #99	; 0x63
    6bd0:	movw	r1, #0
    6bd4:	movt	r1, #0
    6bd8:	movw	r2, #0
    6bdc:	movt	r2, #0
    6be0:	movw	r3, #3068	; 0xbfc
    6be4:	bl	0 <coda_set_error>
    6be8:	mvn	r0, #0
    6bec:	str	r0, [fp, #-4]
    6bf0:	b	6d24 <coda_type_get_unit+0x17c>
    6bf4:	ldr	r0, [sp, #12]
    6bf8:	movw	r1, #0
    6bfc:	cmp	r0, r1
    6c00:	bne	6c2c <coda_type_get_unit+0x84>
    6c04:	mvn	r0, #99	; 0x63
    6c08:	movw	r1, #0
    6c0c:	movt	r1, #0
    6c10:	movw	r2, #0
    6c14:	movt	r2, #0
    6c18:	movw	r3, #3074	; 0xc02
    6c1c:	bl	0 <coda_set_error>
    6c20:	mvn	r0, #0
    6c24:	str	r0, [fp, #-4]
    6c28:	b	6d24 <coda_type_get_unit+0x17c>
    6c2c:	ldr	r0, [fp, #-8]
    6c30:	ldr	r0, [r0, #8]
    6c34:	cmp	r0, #1
    6c38:	str	r0, [sp, #4]
    6c3c:	beq	6c68 <coda_type_get_unit+0xc0>
    6c40:	b	6c44 <coda_type_get_unit+0x9c>
    6c44:	ldr	r0, [sp, #4]
    6c48:	sub	r1, r0, #2
    6c4c:	cmp	r1, #2
    6c50:	bcc	6c9c <coda_type_get_unit+0xf4>
    6c54:	b	6c58 <coda_type_get_unit+0xb0>
    6c58:	ldr	r0, [sp, #4]
    6c5c:	cmp	r0, #6
    6c60:	beq	6cfc <coda_type_get_unit+0x154>
    6c64:	b	6d10 <coda_type_get_unit+0x168>
    6c68:	ldr	r0, [fp, #-8]
    6c6c:	add	r1, sp, #8
    6c70:	bl	6d34 <coda_type_get_array_base_type>
    6c74:	cmp	r0, #0
    6c78:	beq	6c88 <coda_type_get_unit+0xe0>
    6c7c:	mvn	r0, #0
    6c80:	str	r0, [fp, #-4]
    6c84:	b	6d24 <coda_type_get_unit+0x17c>
    6c88:	ldr	r0, [sp, #8]
    6c8c:	ldr	r1, [sp, #12]
    6c90:	bl	6ba8 <coda_type_get_unit>
    6c94:	str	r0, [fp, #-4]
    6c98:	b	6d24 <coda_type_get_unit+0x17c>
    6c9c:	ldr	r0, [pc, #140]	; 6d30 <coda_type_get_unit+0x188>
    6ca0:	ldr	r0, [pc, r0]
    6ca4:	str	r0, [sp]
    6ca8:	bl	0 <__aeabi_read_tp>
    6cac:	ldr	r1, [sp]
    6cb0:	ldr	r0, [r0, r1]
    6cb4:	cmp	r0, #0
    6cb8:	beq	6ce8 <coda_type_get_unit+0x140>
    6cbc:	ldr	r0, [fp, #-8]
    6cc0:	ldr	r0, [r0, #48]	; 0x30
    6cc4:	movw	r1, #0
    6cc8:	cmp	r0, r1
    6ccc:	beq	6ce8 <coda_type_get_unit+0x140>
    6cd0:	ldr	r0, [fp, #-8]
    6cd4:	ldr	r0, [r0, #48]	; 0x30
    6cd8:	ldr	r0, [r0, #32]
    6cdc:	ldr	r1, [sp, #12]
    6ce0:	str	r0, [r1]
    6ce4:	b	6cf8 <coda_type_get_unit+0x150>
    6ce8:	ldr	r0, [fp, #-8]
    6cec:	ldr	r0, [r0, #40]	; 0x28
    6cf0:	ldr	r1, [sp, #12]
    6cf4:	str	r0, [r1]
    6cf8:	b	6d1c <coda_type_get_unit+0x174>
    6cfc:	ldr	r0, [fp, #-8]
    6d00:	ldr	r0, [r0, #48]	; 0x30
    6d04:	ldr	r1, [sp, #12]
    6d08:	str	r0, [r1]
    6d0c:	b	6d1c <coda_type_get_unit+0x174>
    6d10:	ldr	r0, [sp, #12]
    6d14:	movw	r1, #0
    6d18:	str	r1, [r0]
    6d1c:	movw	r0, #0
    6d20:	str	r0, [fp, #-4]
    6d24:	ldr	r0, [fp, #-4]
    6d28:	mov	sp, fp
    6d2c:	pop	{fp, pc}
    6d30:	.word	0x00000088

00006d34 <coda_type_get_array_base_type>:
    6d34:	push	{fp, lr}
    6d38:	mov	fp, sp
    6d3c:	sub	sp, sp, #16
    6d40:	str	r0, [sp, #8]
    6d44:	str	r1, [sp, #4]
    6d48:	ldr	r0, [sp, #8]
    6d4c:	movw	r1, #0
    6d50:	cmp	r0, r1
    6d54:	bne	6d80 <coda_type_get_array_base_type+0x4c>
    6d58:	mvn	r0, #99	; 0x63
    6d5c:	movw	r1, #0
    6d60:	movt	r1, #0
    6d64:	movw	r2, #0
    6d68:	movt	r2, #0
    6d6c:	movw	r3, #3720	; 0xe88
    6d70:	bl	0 <coda_set_error>
    6d74:	mvn	r0, #0
    6d78:	str	r0, [fp, #-4]
    6d7c:	b	6e14 <coda_type_get_array_base_type+0xe0>
    6d80:	ldr	r0, [sp, #8]
    6d84:	ldr	r0, [r0, #8]
    6d88:	cmp	r0, #1
    6d8c:	beq	6dc4 <coda_type_get_array_base_type+0x90>
    6d90:	ldr	r0, [sp, #8]
    6d94:	ldr	r0, [r0, #8]
    6d98:	bl	fc4 <coda_type_get_class_name>
    6d9c:	mvn	r1, #104	; 0x68
    6da0:	str	r0, [sp]
    6da4:	mov	r0, r1
    6da8:	movw	r1, #0
    6dac:	movt	r1, #0
    6db0:	ldr	r2, [sp]
    6db4:	bl	0 <coda_set_error>
    6db8:	mvn	r0, #0
    6dbc:	str	r0, [fp, #-4]
    6dc0:	b	6e14 <coda_type_get_array_base_type+0xe0>
    6dc4:	ldr	r0, [sp, #4]
    6dc8:	movw	r1, #0
    6dcc:	cmp	r0, r1
    6dd0:	bne	6dfc <coda_type_get_array_base_type+0xc8>
    6dd4:	mvn	r0, #99	; 0x63
    6dd8:	movw	r1, #0
    6ddc:	movt	r1, #0
    6de0:	movw	r2, #0
    6de4:	movt	r2, #0
    6de8:	movw	r3, #3731	; 0xe93
    6dec:	bl	0 <coda_set_error>
    6df0:	mvn	r0, #0
    6df4:	str	r0, [fp, #-4]
    6df8:	b	6e14 <coda_type_get_array_base_type+0xe0>
    6dfc:	ldr	r0, [sp, #8]
    6e00:	ldr	r0, [r0, #40]	; 0x28
    6e04:	ldr	r1, [sp, #4]
    6e08:	str	r0, [r1]
    6e0c:	movw	r0, #0
    6e10:	str	r0, [fp, #-4]
    6e14:	ldr	r0, [fp, #-4]
    6e18:	mov	sp, fp
    6e1c:	pop	{fp, pc}

00006e20 <coda_type_get_fixed_value>:
    6e20:	push	{fp, lr}
    6e24:	mov	fp, sp
    6e28:	sub	sp, sp, #32
    6e2c:	str	r0, [fp, #-8]
    6e30:	str	r1, [fp, #-12]
    6e34:	str	r2, [sp, #16]
    6e38:	ldr	r0, [fp, #-8]
    6e3c:	movw	r1, #0
    6e40:	cmp	r0, r1
    6e44:	bne	6e70 <coda_type_get_fixed_value+0x50>
    6e48:	mvn	r0, #99	; 0x63
    6e4c:	movw	r1, #0
    6e50:	movt	r1, #0
    6e54:	movw	r2, #0
    6e58:	movt	r2, #0
    6e5c:	movw	r3, #3133	; 0xc3d
    6e60:	bl	0 <coda_set_error>
    6e64:	mvn	r0, #0
    6e68:	str	r0, [fp, #-4]
    6e6c:	b	6fa0 <coda_type_get_fixed_value+0x180>
    6e70:	ldr	r0, [fp, #-12]
    6e74:	movw	r1, #0
    6e78:	cmp	r0, r1
    6e7c:	bne	6ea8 <coda_type_get_fixed_value+0x88>
    6e80:	mvn	r0, #99	; 0x63
    6e84:	movw	r1, #0
    6e88:	movt	r1, #0
    6e8c:	movw	r2, #0
    6e90:	movt	r2, #0
    6e94:	movw	r3, #3138	; 0xc42
    6e98:	bl	0 <coda_set_error>
    6e9c:	mvn	r0, #0
    6ea0:	str	r0, [fp, #-4]
    6ea4:	b	6fa0 <coda_type_get_fixed_value+0x180>
    6ea8:	ldr	r0, [fp, #-8]
    6eac:	ldr	r0, [r0, #8]
    6eb0:	cmp	r0, #4
    6eb4:	str	r0, [sp, #12]
    6eb8:	beq	6ed0 <coda_type_get_fixed_value+0xb0>
    6ebc:	b	6ec0 <coda_type_get_fixed_value+0xa0>
    6ec0:	ldr	r0, [sp, #12]
    6ec4:	cmp	r0, #5
    6ec8:	beq	6f30 <coda_type_get_fixed_value+0x110>
    6ecc:	b	6f8c <coda_type_get_fixed_value+0x16c>
    6ed0:	ldr	r0, [fp, #-8]
    6ed4:	ldr	r0, [r0, #40]	; 0x28
    6ed8:	ldr	r1, [fp, #-12]
    6edc:	str	r0, [r1]
    6ee0:	ldr	r0, [sp, #16]
    6ee4:	movw	r1, #0
    6ee8:	cmp	r0, r1
    6eec:	beq	6f2c <coda_type_get_fixed_value+0x10c>
    6ef0:	ldr	r0, [fp, #-12]
    6ef4:	ldr	r0, [r0]
    6ef8:	movw	r1, #0
    6efc:	cmp	r0, r1
    6f00:	bne	6f10 <coda_type_get_fixed_value+0xf0>
    6f04:	movw	r0, #0
    6f08:	str	r0, [sp, #8]
    6f0c:	b	6f20 <coda_type_get_fixed_value+0x100>
    6f10:	ldr	r0, [fp, #-12]
    6f14:	ldr	r0, [r0]
    6f18:	bl	0 <strlen>
    6f1c:	str	r0, [sp, #8]
    6f20:	ldr	r0, [sp, #8]
    6f24:	ldr	r1, [sp, #16]
    6f28:	str	r0, [r1]
    6f2c:	b	6f98 <coda_type_get_fixed_value+0x178>
    6f30:	ldr	r0, [fp, #-8]
    6f34:	ldr	r0, [r0, #44]	; 0x2c
    6f38:	ldr	r1, [fp, #-12]
    6f3c:	str	r0, [r1]
    6f40:	ldr	r0, [sp, #16]
    6f44:	movw	r1, #0
    6f48:	cmp	r0, r1
    6f4c:	beq	6f88 <coda_type_get_fixed_value+0x168>
    6f50:	ldr	r0, [fp, #-12]
    6f54:	ldr	r0, [r0]
    6f58:	movw	r1, #0
    6f5c:	cmp	r0, r1
    6f60:	bne	6f70 <coda_type_get_fixed_value+0x150>
    6f64:	movw	r0, #0
    6f68:	str	r0, [sp, #4]
    6f6c:	b	6f7c <coda_type_get_fixed_value+0x15c>
    6f70:	ldr	r0, [fp, #-8]
    6f74:	ldr	r0, [r0, #40]	; 0x28
    6f78:	str	r0, [sp, #4]
    6f7c:	ldr	r0, [sp, #4]
    6f80:	ldr	r1, [sp, #16]
    6f84:	str	r0, [r1]
    6f88:	b	6f98 <coda_type_get_fixed_value+0x178>
    6f8c:	ldr	r0, [fp, #-12]
    6f90:	movw	r1, #0
    6f94:	str	r1, [r0]
    6f98:	movw	r0, #0
    6f9c:	str	r0, [fp, #-4]
    6fa0:	ldr	r0, [fp, #-4]
    6fa4:	mov	sp, fp
    6fa8:	pop	{fp, pc}

00006fac <coda_type_get_attributes>:
    6fac:	push	{fp, lr}
    6fb0:	mov	fp, sp
    6fb4:	sub	sp, sp, #16
    6fb8:	str	r0, [sp, #8]
    6fbc:	str	r1, [sp, #4]
    6fc0:	ldr	r0, [sp, #8]
    6fc4:	movw	r1, #0
    6fc8:	cmp	r0, r1
    6fcc:	bne	6ff8 <coda_type_get_attributes+0x4c>
    6fd0:	mvn	r0, #99	; 0x63
    6fd4:	movw	r1, #0
    6fd8:	movt	r1, #0
    6fdc:	movw	r2, #0
    6fe0:	movt	r2, #0
    6fe4:	movw	r3, #3178	; 0xc6a
    6fe8:	bl	0 <coda_set_error>
    6fec:	mvn	r0, #0
    6ff0:	str	r0, [fp, #-4]
    6ff4:	b	7074 <coda_type_get_attributes+0xc8>
    6ff8:	ldr	r0, [sp, #4]
    6ffc:	movw	r1, #0
    7000:	cmp	r0, r1
    7004:	bne	7030 <coda_type_get_attributes+0x84>
    7008:	mvn	r0, #99	; 0x63
    700c:	movw	r1, #0
    7010:	movt	r1, #0
    7014:	movw	r2, #0
    7018:	movt	r2, #0
    701c:	movw	r3, #3183	; 0xc6f
    7020:	bl	0 <coda_set_error>
    7024:	mvn	r0, #0
    7028:	str	r0, [fp, #-4]
    702c:	b	7074 <coda_type_get_attributes+0xc8>
    7030:	ldr	r0, [sp, #8]
    7034:	ldr	r0, [r0, #36]	; 0x24
    7038:	movw	r1, #0
    703c:	cmp	r0, r1
    7040:	bne	705c <coda_type_get_attributes+0xb0>
    7044:	ldr	r0, [sp, #8]
    7048:	ldr	r0, [r0]
    704c:	bl	27a8 <coda_type_empty_record>
    7050:	ldr	r1, [sp, #4]
    7054:	str	r0, [r1]
    7058:	b	706c <coda_type_get_attributes+0xc0>
    705c:	ldr	r0, [sp, #8]
    7060:	ldr	r0, [r0, #36]	; 0x24
    7064:	ldr	r1, [sp, #4]
    7068:	str	r0, [r1]
    706c:	movw	r0, #0
    7070:	str	r0, [fp, #-4]
    7074:	ldr	r0, [fp, #-4]
    7078:	mov	sp, fp
    707c:	pop	{fp, pc}

00007080 <coda_type_get_num_record_fields>:
    7080:	push	{fp, lr}
    7084:	mov	fp, sp
    7088:	sub	sp, sp, #16
    708c:	str	r0, [sp, #8]
    7090:	str	r1, [sp, #4]
    7094:	ldr	r0, [sp, #8]
    7098:	movw	r1, #0
    709c:	cmp	r0, r1
    70a0:	bne	70cc <coda_type_get_num_record_fields+0x4c>
    70a4:	mvn	r0, #99	; 0x63
    70a8:	movw	r1, #0
    70ac:	movt	r1, #0
    70b0:	movw	r2, #0
    70b4:	movt	r2, #0
    70b8:	movw	r3, #3209	; 0xc89
    70bc:	bl	0 <coda_set_error>
    70c0:	mvn	r0, #0
    70c4:	str	r0, [fp, #-4]
    70c8:	b	7160 <coda_type_get_num_record_fields+0xe0>
    70cc:	ldr	r0, [sp, #8]
    70d0:	ldr	r0, [r0, #8]
    70d4:	cmp	r0, #0
    70d8:	beq	7110 <coda_type_get_num_record_fields+0x90>
    70dc:	ldr	r0, [sp, #8]
    70e0:	ldr	r0, [r0, #8]
    70e4:	bl	fc4 <coda_type_get_class_name>
    70e8:	mvn	r1, #104	; 0x68
    70ec:	str	r0, [sp]
    70f0:	mov	r0, r1
    70f4:	movw	r1, #0
    70f8:	movt	r1, #0
    70fc:	ldr	r2, [sp]
    7100:	bl	0 <coda_set_error>
    7104:	mvn	r0, #0
    7108:	str	r0, [fp, #-4]
    710c:	b	7160 <coda_type_get_num_record_fields+0xe0>
    7110:	ldr	r0, [sp, #4]
    7114:	movw	r1, #0
    7118:	cmp	r0, r1
    711c:	bne	7148 <coda_type_get_num_record_fields+0xc8>
    7120:	mvn	r0, #99	; 0x63
    7124:	movw	r1, #0
    7128:	movt	r1, #0
    712c:	movw	r2, #0
    7130:	movt	r2, #0
    7134:	movw	r3, #3220	; 0xc94
    7138:	bl	0 <coda_set_error>
    713c:	mvn	r0, #0
    7140:	str	r0, [fp, #-4]
    7144:	b	7160 <coda_type_get_num_record_fields+0xe0>
    7148:	ldr	r0, [sp, #8]
    714c:	ldr	r0, [r0, #48]	; 0x30
    7150:	ldr	r1, [sp, #4]
    7154:	str	r0, [r1]
    7158:	movw	r0, #0
    715c:	str	r0, [fp, #-4]
    7160:	ldr	r0, [fp, #-4]
    7164:	mov	sp, fp
    7168:	pop	{fp, pc}

0000716c <coda_type_get_record_field_index_from_name>:
    716c:	push	{fp, lr}
    7170:	mov	fp, sp
    7174:	sub	sp, sp, #24
    7178:	str	r0, [fp, #-8]
    717c:	str	r1, [sp, #12]
    7180:	str	r2, [sp, #8]
    7184:	ldr	r0, [fp, #-8]
    7188:	movw	r1, #0
    718c:	cmp	r0, r1
    7190:	bne	71bc <coda_type_get_record_field_index_from_name+0x50>
    7194:	mvn	r0, #99	; 0x63
    7198:	movw	r1, #0
    719c:	movt	r1, #0
    71a0:	movw	r2, #0
    71a4:	movt	r2, #0
    71a8:	movw	r3, #3244	; 0xcac
    71ac:	bl	0 <coda_set_error>
    71b0:	mvn	r0, #0
    71b4:	str	r0, [fp, #-4]
    71b8:	b	72c4 <coda_type_get_record_field_index_from_name+0x158>
    71bc:	ldr	r0, [fp, #-8]
    71c0:	ldr	r0, [r0, #8]
    71c4:	cmp	r0, #0
    71c8:	beq	7200 <coda_type_get_record_field_index_from_name+0x94>
    71cc:	ldr	r0, [fp, #-8]
    71d0:	ldr	r0, [r0, #8]
    71d4:	bl	fc4 <coda_type_get_class_name>
    71d8:	mvn	r1, #104	; 0x68
    71dc:	str	r0, [sp]
    71e0:	mov	r0, r1
    71e4:	movw	r1, #0
    71e8:	movt	r1, #0
    71ec:	ldr	r2, [sp]
    71f0:	bl	0 <coda_set_error>
    71f4:	mvn	r0, #0
    71f8:	str	r0, [fp, #-4]
    71fc:	b	72c4 <coda_type_get_record_field_index_from_name+0x158>
    7200:	ldr	r0, [sp, #12]
    7204:	movw	r1, #0
    7208:	cmp	r0, r1
    720c:	bne	7238 <coda_type_get_record_field_index_from_name+0xcc>
    7210:	mvn	r0, #99	; 0x63
    7214:	movw	r1, #0
    7218:	movt	r1, #0
    721c:	movw	r2, #0
    7220:	movt	r2, #0
    7224:	movw	r3, #3255	; 0xcb7
    7228:	bl	0 <coda_set_error>
    722c:	mvn	r0, #0
    7230:	str	r0, [fp, #-4]
    7234:	b	72c4 <coda_type_get_record_field_index_from_name+0x158>
    7238:	ldr	r0, [sp, #8]
    723c:	movw	r1, #0
    7240:	cmp	r0, r1
    7244:	bne	7270 <coda_type_get_record_field_index_from_name+0x104>
    7248:	mvn	r0, #99	; 0x63
    724c:	movw	r1, #0
    7250:	movt	r1, #0
    7254:	movw	r2, #0
    7258:	movt	r2, #0
    725c:	movw	r3, #3260	; 0xcbc
    7260:	bl	0 <coda_set_error>
    7264:	mvn	r0, #0
    7268:	str	r0, [fp, #-4]
    726c:	b	72c4 <coda_type_get_record_field_index_from_name+0x158>
    7270:	ldr	r0, [fp, #-8]
    7274:	ldr	r0, [r0, #40]	; 0x28
    7278:	ldr	r1, [sp, #12]
    727c:	bl	0 <coda_hashtable_get_index_from_name>
    7280:	str	r0, [sp, #4]
    7284:	ldr	r0, [sp, #4]
    7288:	cmp	r0, #0
    728c:	bge	72b0 <coda_type_get_record_field_index_from_name+0x144>
    7290:	ldr	r2, [sp, #12]
    7294:	mvn	r0, #101	; 0x65
    7298:	movw	r1, #0
    729c:	movt	r1, #0
    72a0:	bl	0 <coda_set_error>
    72a4:	mvn	r0, #0
    72a8:	str	r0, [fp, #-4]
    72ac:	b	72c4 <coda_type_get_record_field_index_from_name+0x158>
    72b0:	ldr	r0, [sp, #4]
    72b4:	ldr	r1, [sp, #8]
    72b8:	str	r0, [r1]
    72bc:	movw	r0, #0
    72c0:	str	r0, [fp, #-4]
    72c4:	ldr	r0, [fp, #-4]
    72c8:	mov	sp, fp
    72cc:	pop	{fp, pc}

000072d0 <coda_type_get_record_field_index_from_name_n>:
    72d0:	push	{fp, lr}
    72d4:	mov	fp, sp
    72d8:	sub	sp, sp, #32
    72dc:	str	r0, [fp, #-8]
    72e0:	str	r1, [fp, #-12]
    72e4:	str	r2, [sp, #16]
    72e8:	str	r3, [sp, #12]
    72ec:	ldr	r0, [fp, #-8]
    72f0:	movw	r1, #0
    72f4:	cmp	r0, r1
    72f8:	bne	7324 <coda_type_get_record_field_index_from_name_n+0x54>
    72fc:	mvn	r0, #99	; 0x63
    7300:	movw	r1, #0
    7304:	movt	r1, #0
    7308:	movw	r2, #0
    730c:	movt	r2, #0
    7310:	movw	r3, #3291	; 0xcdb
    7314:	bl	0 <coda_set_error>
    7318:	mvn	r0, #0
    731c:	str	r0, [fp, #-4]
    7320:	b	7434 <coda_type_get_record_field_index_from_name_n+0x164>
    7324:	ldr	r0, [fp, #-8]
    7328:	ldr	r0, [r0, #8]
    732c:	cmp	r0, #0
    7330:	beq	7368 <coda_type_get_record_field_index_from_name_n+0x98>
    7334:	ldr	r0, [fp, #-8]
    7338:	ldr	r0, [r0, #8]
    733c:	bl	fc4 <coda_type_get_class_name>
    7340:	mvn	r1, #104	; 0x68
    7344:	str	r0, [sp, #4]
    7348:	mov	r0, r1
    734c:	movw	r1, #0
    7350:	movt	r1, #0
    7354:	ldr	r2, [sp, #4]
    7358:	bl	0 <coda_set_error>
    735c:	mvn	r0, #0
    7360:	str	r0, [fp, #-4]
    7364:	b	7434 <coda_type_get_record_field_index_from_name_n+0x164>
    7368:	ldr	r0, [fp, #-12]
    736c:	movw	r1, #0
    7370:	cmp	r0, r1
    7374:	bne	73a0 <coda_type_get_record_field_index_from_name_n+0xd0>
    7378:	mvn	r0, #99	; 0x63
    737c:	movw	r1, #0
    7380:	movt	r1, #0
    7384:	movw	r2, #0
    7388:	movt	r2, #0
    738c:	movw	r3, #3302	; 0xce6
    7390:	bl	0 <coda_set_error>
    7394:	mvn	r0, #0
    7398:	str	r0, [fp, #-4]
    739c:	b	7434 <coda_type_get_record_field_index_from_name_n+0x164>
    73a0:	ldr	r0, [sp, #12]
    73a4:	movw	r1, #0
    73a8:	cmp	r0, r1
    73ac:	bne	73d8 <coda_type_get_record_field_index_from_name_n+0x108>
    73b0:	mvn	r0, #99	; 0x63
    73b4:	movw	r1, #0
    73b8:	movt	r1, #0
    73bc:	movw	r2, #0
    73c0:	movt	r2, #0
    73c4:	movw	r3, #3307	; 0xceb
    73c8:	bl	0 <coda_set_error>
    73cc:	mvn	r0, #0
    73d0:	str	r0, [fp, #-4]
    73d4:	b	7434 <coda_type_get_record_field_index_from_name_n+0x164>
    73d8:	ldr	r0, [fp, #-8]
    73dc:	ldr	r0, [r0, #40]	; 0x28
    73e0:	ldr	r1, [fp, #-12]
    73e4:	ldr	r2, [sp, #16]
    73e8:	bl	0 <coda_hashtable_get_index_from_name_n>
    73ec:	str	r0, [sp, #8]
    73f0:	ldr	r0, [sp, #8]
    73f4:	cmp	r0, #0
    73f8:	bge	7420 <coda_type_get_record_field_index_from_name_n+0x150>
    73fc:	ldr	r2, [sp, #16]
    7400:	ldr	r3, [fp, #-12]
    7404:	mvn	r0, #101	; 0x65
    7408:	movw	r1, #0
    740c:	movt	r1, #0
    7410:	bl	0 <coda_set_error>
    7414:	mvn	r0, #0
    7418:	str	r0, [fp, #-4]
    741c:	b	7434 <coda_type_get_record_field_index_from_name_n+0x164>
    7420:	ldr	r0, [sp, #8]
    7424:	ldr	r1, [sp, #12]
    7428:	str	r0, [r1]
    742c:	movw	r0, #0
    7430:	str	r0, [fp, #-4]
    7434:	ldr	r0, [fp, #-4]
    7438:	mov	sp, fp
    743c:	pop	{fp, pc}

00007440 <coda_type_get_record_field_index_from_real_name>:
    7440:	push	{fp, lr}
    7444:	mov	fp, sp
    7448:	sub	sp, sp, #24
    744c:	str	r0, [fp, #-8]
    7450:	str	r1, [sp, #12]
    7454:	str	r2, [sp, #8]
    7458:	ldr	r0, [fp, #-8]
    745c:	movw	r1, #0
    7460:	cmp	r0, r1
    7464:	bne	7490 <coda_type_get_record_field_index_from_real_name+0x50>
    7468:	mvn	r0, #99	; 0x63
    746c:	movw	r1, #0
    7470:	movt	r1, #0
    7474:	movw	r2, #0
    7478:	movt	r2, #0
    747c:	movw	r3, #3338	; 0xd0a
    7480:	bl	0 <coda_set_error>
    7484:	mvn	r0, #0
    7488:	str	r0, [fp, #-4]
    748c:	b	7598 <coda_type_get_record_field_index_from_real_name+0x158>
    7490:	ldr	r0, [fp, #-8]
    7494:	ldr	r0, [r0, #8]
    7498:	cmp	r0, #0
    749c:	beq	74d4 <coda_type_get_record_field_index_from_real_name+0x94>
    74a0:	ldr	r0, [fp, #-8]
    74a4:	ldr	r0, [r0, #8]
    74a8:	bl	fc4 <coda_type_get_class_name>
    74ac:	mvn	r1, #104	; 0x68
    74b0:	str	r0, [sp]
    74b4:	mov	r0, r1
    74b8:	movw	r1, #0
    74bc:	movt	r1, #0
    74c0:	ldr	r2, [sp]
    74c4:	bl	0 <coda_set_error>
    74c8:	mvn	r0, #0
    74cc:	str	r0, [fp, #-4]
    74d0:	b	7598 <coda_type_get_record_field_index_from_real_name+0x158>
    74d4:	ldr	r0, [sp, #12]
    74d8:	movw	r1, #0
    74dc:	cmp	r0, r1
    74e0:	bne	750c <coda_type_get_record_field_index_from_real_name+0xcc>
    74e4:	mvn	r0, #99	; 0x63
    74e8:	movw	r1, #0
    74ec:	movt	r1, #0
    74f0:	movw	r2, #0
    74f4:	movt	r2, #0
    74f8:	movw	r3, #3349	; 0xd15
    74fc:	bl	0 <coda_set_error>
    7500:	mvn	r0, #0
    7504:	str	r0, [fp, #-4]
    7508:	b	7598 <coda_type_get_record_field_index_from_real_name+0x158>
    750c:	ldr	r0, [sp, #8]
    7510:	movw	r1, #0
    7514:	cmp	r0, r1
    7518:	bne	7544 <coda_type_get_record_field_index_from_real_name+0x104>
    751c:	mvn	r0, #99	; 0x63
    7520:	movw	r1, #0
    7524:	movt	r1, #0
    7528:	movw	r2, #0
    752c:	movt	r2, #0
    7530:	movw	r3, #3354	; 0xd1a
    7534:	bl	0 <coda_set_error>
    7538:	mvn	r0, #0
    753c:	str	r0, [fp, #-4]
    7540:	b	7598 <coda_type_get_record_field_index_from_real_name+0x158>
    7544:	ldr	r0, [fp, #-8]
    7548:	ldr	r0, [r0, #44]	; 0x2c
    754c:	ldr	r1, [sp, #12]
    7550:	bl	0 <coda_hashtable_get_index_from_name>
    7554:	str	r0, [sp, #4]
    7558:	ldr	r0, [sp, #4]
    755c:	cmp	r0, #0
    7560:	bge	7584 <coda_type_get_record_field_index_from_real_name+0x144>
    7564:	ldr	r2, [sp, #12]
    7568:	mvn	r0, #101	; 0x65
    756c:	movw	r1, #0
    7570:	movt	r1, #0
    7574:	bl	0 <coda_set_error>
    7578:	mvn	r0, #0
    757c:	str	r0, [fp, #-4]
    7580:	b	7598 <coda_type_get_record_field_index_from_real_name+0x158>
    7584:	ldr	r0, [sp, #4]
    7588:	ldr	r1, [sp, #8]
    758c:	str	r0, [r1]
    7590:	movw	r0, #0
    7594:	str	r0, [fp, #-4]
    7598:	ldr	r0, [fp, #-4]
    759c:	mov	sp, fp
    75a0:	pop	{fp, pc}

000075a4 <coda_type_get_record_field_type>:
    75a4:	push	{fp, lr}
    75a8:	mov	fp, sp
    75ac:	sub	sp, sp, #32
    75b0:	str	r0, [fp, #-8]
    75b4:	str	r1, [fp, #-12]
    75b8:	str	r2, [sp, #16]
    75bc:	ldr	r0, [fp, #-8]
    75c0:	movw	r1, #0
    75c4:	cmp	r0, r1
    75c8:	bne	75f4 <coda_type_get_record_field_type+0x50>
    75cc:	mvn	r0, #99	; 0x63
    75d0:	movw	r1, #0
    75d4:	movt	r1, #0
    75d8:	movw	r2, #0
    75dc:	movt	r2, #0
    75e0:	movw	r3, #3381	; 0xd35
    75e4:	bl	0 <coda_set_error>
    75e8:	mvn	r0, #0
    75ec:	str	r0, [fp, #-4]
    75f0:	b	76f4 <coda_type_get_record_field_type+0x150>
    75f4:	ldr	r0, [fp, #-8]
    75f8:	ldr	r0, [r0, #8]
    75fc:	cmp	r0, #0
    7600:	beq	7638 <coda_type_get_record_field_type+0x94>
    7604:	ldr	r0, [fp, #-8]
    7608:	ldr	r0, [r0, #8]
    760c:	bl	fc4 <coda_type_get_class_name>
    7610:	mvn	r1, #104	; 0x68
    7614:	str	r0, [sp, #12]
    7618:	mov	r0, r1
    761c:	movw	r1, #0
    7620:	movt	r1, #0
    7624:	ldr	r2, [sp, #12]
    7628:	bl	0 <coda_set_error>
    762c:	mvn	r0, #0
    7630:	str	r0, [fp, #-4]
    7634:	b	76f4 <coda_type_get_record_field_type+0x150>
    7638:	ldr	r0, [sp, #16]
    763c:	movw	r1, #0
    7640:	cmp	r0, r1
    7644:	bne	7670 <coda_type_get_record_field_type+0xcc>
    7648:	mvn	r0, #99	; 0x63
    764c:	movw	r1, #0
    7650:	movt	r1, #0
    7654:	movw	r2, #0
    7658:	movt	r2, #0
    765c:	movw	r3, #3392	; 0xd40
    7660:	bl	0 <coda_set_error>
    7664:	mvn	r0, #0
    7668:	str	r0, [fp, #-4]
    766c:	b	76f4 <coda_type_get_record_field_type+0x150>
    7670:	ldr	r0, [fp, #-12]
    7674:	cmp	r0, #0
    7678:	blt	7690 <coda_type_get_record_field_type+0xec>
    767c:	ldr	r0, [fp, #-12]
    7680:	ldr	r1, [fp, #-8]
    7684:	ldr	r1, [r1, #48]	; 0x30
    7688:	cmp	r0, r1
    768c:	blt	76cc <coda_type_get_record_field_type+0x128>
    7690:	ldr	r2, [fp, #-12]
    7694:	ldr	r0, [fp, #-8]
    7698:	ldr	r3, [r0, #48]	; 0x30
    769c:	mvn	r0, #100	; 0x64
    76a0:	movw	r1, #0
    76a4:	movt	r1, #0
    76a8:	movw	ip, #0
    76ac:	movt	ip, #0
    76b0:	str	ip, [sp]
    76b4:	movw	ip, #3399	; 0xd47
    76b8:	str	ip, [sp, #4]
    76bc:	bl	0 <coda_set_error>
    76c0:	mvn	r0, #0
    76c4:	str	r0, [fp, #-4]
    76c8:	b	76f4 <coda_type_get_record_field_type+0x150>
    76cc:	ldr	r0, [fp, #-8]
    76d0:	ldr	r0, [r0, #52]	; 0x34
    76d4:	ldr	r1, [fp, #-12]
    76d8:	add	r0, r0, r1, lsl #2
    76dc:	ldr	r0, [r0]
    76e0:	ldr	r0, [r0, #8]
    76e4:	ldr	r1, [sp, #16]
    76e8:	str	r0, [r1]
    76ec:	movw	r0, #0
    76f0:	str	r0, [fp, #-4]
    76f4:	ldr	r0, [fp, #-4]
    76f8:	mov	sp, fp
    76fc:	pop	{fp, pc}

00007700 <coda_type_get_record_field_name>:
    7700:	push	{fp, lr}
    7704:	mov	fp, sp
    7708:	sub	sp, sp, #32
    770c:	str	r0, [fp, #-8]
    7710:	str	r1, [fp, #-12]
    7714:	str	r2, [sp, #16]
    7718:	ldr	r0, [fp, #-8]
    771c:	movw	r1, #0
    7720:	cmp	r0, r1
    7724:	bne	7750 <coda_type_get_record_field_name+0x50>
    7728:	mvn	r0, #99	; 0x63
    772c:	movw	r1, #0
    7730:	movt	r1, #0
    7734:	movw	r2, #0
    7738:	movt	r2, #0
    773c:	movw	r3, #3420	; 0xd5c
    7740:	bl	0 <coda_set_error>
    7744:	mvn	r0, #0
    7748:	str	r0, [fp, #-4]
    774c:	b	7850 <coda_type_get_record_field_name+0x150>
    7750:	ldr	r0, [fp, #-8]
    7754:	ldr	r0, [r0, #8]
    7758:	cmp	r0, #0
    775c:	beq	7794 <coda_type_get_record_field_name+0x94>
    7760:	ldr	r0, [fp, #-8]
    7764:	ldr	r0, [r0, #8]
    7768:	bl	fc4 <coda_type_get_class_name>
    776c:	mvn	r1, #104	; 0x68
    7770:	str	r0, [sp, #12]
    7774:	mov	r0, r1
    7778:	movw	r1, #0
    777c:	movt	r1, #0
    7780:	ldr	r2, [sp, #12]
    7784:	bl	0 <coda_set_error>
    7788:	mvn	r0, #0
    778c:	str	r0, [fp, #-4]
    7790:	b	7850 <coda_type_get_record_field_name+0x150>
    7794:	ldr	r0, [sp, #16]
    7798:	movw	r1, #0
    779c:	cmp	r0, r1
    77a0:	bne	77cc <coda_type_get_record_field_name+0xcc>
    77a4:	mvn	r0, #99	; 0x63
    77a8:	movw	r1, #0
    77ac:	movt	r1, #0
    77b0:	movw	r2, #0
    77b4:	movt	r2, #0
    77b8:	movw	r3, #3431	; 0xd67
    77bc:	bl	0 <coda_set_error>
    77c0:	mvn	r0, #0
    77c4:	str	r0, [fp, #-4]
    77c8:	b	7850 <coda_type_get_record_field_name+0x150>
    77cc:	ldr	r0, [fp, #-12]
    77d0:	cmp	r0, #0
    77d4:	blt	77ec <coda_type_get_record_field_name+0xec>
    77d8:	ldr	r0, [fp, #-12]
    77dc:	ldr	r1, [fp, #-8]
    77e0:	ldr	r1, [r1, #48]	; 0x30
    77e4:	cmp	r0, r1
    77e8:	blt	7828 <coda_type_get_record_field_name+0x128>
    77ec:	ldr	r2, [fp, #-12]
    77f0:	ldr	r0, [fp, #-8]
    77f4:	ldr	r3, [r0, #48]	; 0x30
    77f8:	mvn	r0, #100	; 0x64
    77fc:	movw	r1, #0
    7800:	movt	r1, #0
    7804:	movw	ip, #0
    7808:	movt	ip, #0
    780c:	str	ip, [sp]
    7810:	movw	ip, #3438	; 0xd6e
    7814:	str	ip, [sp, #4]
    7818:	bl	0 <coda_set_error>
    781c:	mvn	r0, #0
    7820:	str	r0, [fp, #-4]
    7824:	b	7850 <coda_type_get_record_field_name+0x150>
    7828:	ldr	r0, [fp, #-8]
    782c:	ldr	r0, [r0, #52]	; 0x34
    7830:	ldr	r1, [fp, #-12]
    7834:	add	r0, r0, r1, lsl #2
    7838:	ldr	r0, [r0]
    783c:	ldr	r0, [r0]
    7840:	ldr	r1, [sp, #16]
    7844:	str	r0, [r1]
    7848:	movw	r0, #0
    784c:	str	r0, [fp, #-4]
    7850:	ldr	r0, [fp, #-4]
    7854:	mov	sp, fp
    7858:	pop	{fp, pc}

0000785c <coda_type_get_record_field_real_name>:
    785c:	push	{fp, lr}
    7860:	mov	fp, sp
    7864:	sub	sp, sp, #32
    7868:	str	r0, [fp, #-8]
    786c:	str	r1, [fp, #-12]
    7870:	str	r2, [sp, #16]
    7874:	ldr	r0, [fp, #-8]
    7878:	movw	r1, #0
    787c:	cmp	r0, r1
    7880:	bne	78ac <coda_type_get_record_field_real_name+0x50>
    7884:	mvn	r0, #99	; 0x63
    7888:	movw	r1, #0
    788c:	movt	r1, #0
    7890:	movw	r2, #0
    7894:	movt	r2, #0
    7898:	movw	r3, #3468	; 0xd8c
    789c:	bl	0 <coda_set_error>
    78a0:	mvn	r0, #0
    78a4:	str	r0, [fp, #-4]
    78a8:	b	7a2c <coda_type_get_record_field_real_name+0x1d0>
    78ac:	ldr	r0, [fp, #-8]
    78b0:	ldr	r0, [r0, #8]
    78b4:	cmp	r0, #0
    78b8:	beq	78f0 <coda_type_get_record_field_real_name+0x94>
    78bc:	ldr	r0, [fp, #-8]
    78c0:	ldr	r0, [r0, #8]
    78c4:	bl	fc4 <coda_type_get_class_name>
    78c8:	mvn	r1, #104	; 0x68
    78cc:	str	r0, [sp, #12]
    78d0:	mov	r0, r1
    78d4:	movw	r1, #0
    78d8:	movt	r1, #0
    78dc:	ldr	r2, [sp, #12]
    78e0:	bl	0 <coda_set_error>
    78e4:	mvn	r0, #0
    78e8:	str	r0, [fp, #-4]
    78ec:	b	7a2c <coda_type_get_record_field_real_name+0x1d0>
    78f0:	ldr	r0, [sp, #16]
    78f4:	movw	r1, #0
    78f8:	cmp	r0, r1
    78fc:	bne	7928 <coda_type_get_record_field_real_name+0xcc>
    7900:	mvn	r0, #99	; 0x63
    7904:	movw	r1, #0
    7908:	movt	r1, #0
    790c:	movw	r2, #0
    7910:	movt	r2, #0
    7914:	movw	r3, #3479	; 0xd97
    7918:	bl	0 <coda_set_error>
    791c:	mvn	r0, #0
    7920:	str	r0, [fp, #-4]
    7924:	b	7a2c <coda_type_get_record_field_real_name+0x1d0>
    7928:	ldr	r0, [fp, #-12]
    792c:	cmp	r0, #0
    7930:	blt	7948 <coda_type_get_record_field_real_name+0xec>
    7934:	ldr	r0, [fp, #-12]
    7938:	ldr	r1, [fp, #-8]
    793c:	ldr	r1, [r1, #48]	; 0x30
    7940:	cmp	r0, r1
    7944:	blt	7984 <coda_type_get_record_field_real_name+0x128>
    7948:	ldr	r2, [fp, #-12]
    794c:	ldr	r0, [fp, #-8]
    7950:	ldr	r3, [r0, #48]	; 0x30
    7954:	mvn	r0, #100	; 0x64
    7958:	movw	r1, #0
    795c:	movt	r1, #0
    7960:	movw	ip, #0
    7964:	movt	ip, #0
    7968:	str	ip, [sp]
    796c:	movw	ip, #3486	; 0xd9e
    7970:	str	ip, [sp, #4]
    7974:	bl	0 <coda_set_error>
    7978:	mvn	r0, #0
    797c:	str	r0, [fp, #-4]
    7980:	b	7a2c <coda_type_get_record_field_real_name+0x1d0>
    7984:	ldr	r0, [fp, #-8]
    7988:	ldr	r0, [r0, #52]	; 0x34
    798c:	ldr	r1, [fp, #-12]
    7990:	add	r0, r0, r1, lsl #2
    7994:	ldr	r0, [r0]
    7998:	ldr	r0, [r0, #4]
    799c:	movw	r1, #0
    79a0:	cmp	r0, r1
    79a4:	beq	7a04 <coda_type_get_record_field_real_name+0x1a8>
    79a8:	ldr	r0, [fp, #-8]
    79ac:	ldr	r0, [r0]
    79b0:	cmp	r0, #2
    79b4:	bne	79e0 <coda_type_get_record_field_real_name+0x184>
    79b8:	ldr	r0, [fp, #-8]
    79bc:	ldr	r0, [r0, #52]	; 0x34
    79c0:	ldr	r1, [fp, #-12]
    79c4:	add	r0, r0, r1, lsl #2
    79c8:	ldr	r0, [r0]
    79cc:	ldr	r0, [r0, #4]
    79d0:	bl	0 <coda_element_name_from_xml_name>
    79d4:	ldr	r1, [sp, #16]
    79d8:	str	r0, [r1]
    79dc:	b	7a00 <coda_type_get_record_field_real_name+0x1a4>
    79e0:	ldr	r0, [fp, #-8]
    79e4:	ldr	r0, [r0, #52]	; 0x34
    79e8:	ldr	r1, [fp, #-12]
    79ec:	add	r0, r0, r1, lsl #2
    79f0:	ldr	r0, [r0]
    79f4:	ldr	r0, [r0, #4]
    79f8:	ldr	r1, [sp, #16]
    79fc:	str	r0, [r1]
    7a00:	b	7a24 <coda_type_get_record_field_real_name+0x1c8>
    7a04:	ldr	r0, [fp, #-8]
    7a08:	ldr	r0, [r0, #52]	; 0x34
    7a0c:	ldr	r1, [fp, #-12]
    7a10:	add	r0, r0, r1, lsl #2
    7a14:	ldr	r0, [r0]
    7a18:	ldr	r0, [r0]
    7a1c:	ldr	r1, [sp, #16]
    7a20:	str	r0, [r1]
    7a24:	movw	r0, #0
    7a28:	str	r0, [fp, #-4]
    7a2c:	ldr	r0, [fp, #-4]
    7a30:	mov	sp, fp
    7a34:	pop	{fp, pc}

00007a38 <coda_type_get_record_field_hidden_status>:
    7a38:	push	{fp, lr}
    7a3c:	mov	fp, sp
    7a40:	sub	sp, sp, #32
    7a44:	str	r0, [fp, #-8]
    7a48:	str	r1, [fp, #-12]
    7a4c:	str	r2, [sp, #16]
    7a50:	ldr	r0, [fp, #-8]
    7a54:	movw	r1, #0
    7a58:	cmp	r0, r1
    7a5c:	bne	7a88 <coda_type_get_record_field_hidden_status+0x50>
    7a60:	mvn	r0, #99	; 0x63
    7a64:	movw	r1, #0
    7a68:	movt	r1, #0
    7a6c:	movw	r2, #0
    7a70:	movt	r2, #0
    7a74:	movw	r3, #3524	; 0xdc4
    7a78:	bl	0 <coda_set_error>
    7a7c:	mvn	r0, #0
    7a80:	str	r0, [fp, #-4]
    7a84:	b	7b88 <coda_type_get_record_field_hidden_status+0x150>
    7a88:	ldr	r0, [fp, #-8]
    7a8c:	ldr	r0, [r0, #8]
    7a90:	cmp	r0, #0
    7a94:	beq	7acc <coda_type_get_record_field_hidden_status+0x94>
    7a98:	ldr	r0, [fp, #-8]
    7a9c:	ldr	r0, [r0, #8]
    7aa0:	bl	fc4 <coda_type_get_class_name>
    7aa4:	mvn	r1, #104	; 0x68
    7aa8:	str	r0, [sp, #12]
    7aac:	mov	r0, r1
    7ab0:	movw	r1, #0
    7ab4:	movt	r1, #0
    7ab8:	ldr	r2, [sp, #12]
    7abc:	bl	0 <coda_set_error>
    7ac0:	mvn	r0, #0
    7ac4:	str	r0, [fp, #-4]
    7ac8:	b	7b88 <coda_type_get_record_field_hidden_status+0x150>
    7acc:	ldr	r0, [sp, #16]
    7ad0:	movw	r1, #0
    7ad4:	cmp	r0, r1
    7ad8:	bne	7b04 <coda_type_get_record_field_hidden_status+0xcc>
    7adc:	mvn	r0, #99	; 0x63
    7ae0:	movw	r1, #0
    7ae4:	movt	r1, #0
    7ae8:	movw	r2, #0
    7aec:	movt	r2, #0
    7af0:	movw	r3, #3535	; 0xdcf
    7af4:	bl	0 <coda_set_error>
    7af8:	mvn	r0, #0
    7afc:	str	r0, [fp, #-4]
    7b00:	b	7b88 <coda_type_get_record_field_hidden_status+0x150>
    7b04:	ldr	r0, [fp, #-12]
    7b08:	cmp	r0, #0
    7b0c:	blt	7b24 <coda_type_get_record_field_hidden_status+0xec>
    7b10:	ldr	r0, [fp, #-12]
    7b14:	ldr	r1, [fp, #-8]
    7b18:	ldr	r1, [r1, #48]	; 0x30
    7b1c:	cmp	r0, r1
    7b20:	blt	7b60 <coda_type_get_record_field_hidden_status+0x128>
    7b24:	ldr	r2, [fp, #-12]
    7b28:	ldr	r0, [fp, #-8]
    7b2c:	ldr	r3, [r0, #48]	; 0x30
    7b30:	mvn	r0, #100	; 0x64
    7b34:	movw	r1, #0
    7b38:	movt	r1, #0
    7b3c:	movw	ip, #0
    7b40:	movt	ip, #0
    7b44:	str	ip, [sp]
    7b48:	movw	ip, #3542	; 0xdd6
    7b4c:	str	ip, [sp, #4]
    7b50:	bl	0 <coda_set_error>
    7b54:	mvn	r0, #0
    7b58:	str	r0, [fp, #-4]
    7b5c:	b	7b88 <coda_type_get_record_field_hidden_status+0x150>
    7b60:	ldr	r0, [fp, #-8]
    7b64:	ldr	r0, [r0, #52]	; 0x34
    7b68:	ldr	r1, [fp, #-12]
    7b6c:	add	r0, r0, r1, lsl #2
    7b70:	ldr	r0, [r0]
    7b74:	ldr	r0, [r0, #12]
    7b78:	ldr	r1, [sp, #16]
    7b7c:	str	r0, [r1]
    7b80:	movw	r0, #0
    7b84:	str	r0, [fp, #-4]
    7b88:	ldr	r0, [fp, #-4]
    7b8c:	mov	sp, fp
    7b90:	pop	{fp, pc}

00007b94 <coda_type_get_record_field_available_status>:
    7b94:	push	{fp, lr}
    7b98:	mov	fp, sp
    7b9c:	sub	sp, sp, #32
    7ba0:	str	r0, [fp, #-8]
    7ba4:	str	r1, [fp, #-12]
    7ba8:	str	r2, [sp, #16]
    7bac:	ldr	r0, [fp, #-8]
    7bb0:	movw	r1, #0
    7bb4:	cmp	r0, r1
    7bb8:	bne	7be4 <coda_type_get_record_field_available_status+0x50>
    7bbc:	mvn	r0, #99	; 0x63
    7bc0:	movw	r1, #0
    7bc4:	movt	r1, #0
    7bc8:	movw	r2, #0
    7bcc:	movt	r2, #0
    7bd0:	movw	r3, #3568	; 0xdf0
    7bd4:	bl	0 <coda_set_error>
    7bd8:	mvn	r0, #0
    7bdc:	str	r0, [fp, #-4]
    7be0:	b	7cfc <coda_type_get_record_field_available_status+0x168>
    7be4:	ldr	r0, [fp, #-8]
    7be8:	ldr	r0, [r0, #8]
    7bec:	cmp	r0, #0
    7bf0:	beq	7c28 <coda_type_get_record_field_available_status+0x94>
    7bf4:	ldr	r0, [fp, #-8]
    7bf8:	ldr	r0, [r0, #8]
    7bfc:	bl	fc4 <coda_type_get_class_name>
    7c00:	mvn	r1, #104	; 0x68
    7c04:	str	r0, [sp, #12]
    7c08:	mov	r0, r1
    7c0c:	movw	r1, #0
    7c10:	movt	r1, #0
    7c14:	ldr	r2, [sp, #12]
    7c18:	bl	0 <coda_set_error>
    7c1c:	mvn	r0, #0
    7c20:	str	r0, [fp, #-4]
    7c24:	b	7cfc <coda_type_get_record_field_available_status+0x168>
    7c28:	ldr	r0, [sp, #16]
    7c2c:	movw	r1, #0
    7c30:	cmp	r0, r1
    7c34:	bne	7c60 <coda_type_get_record_field_available_status+0xcc>
    7c38:	mvn	r0, #99	; 0x63
    7c3c:	movw	r1, #0
    7c40:	movt	r1, #0
    7c44:	movw	r2, #0
    7c48:	movt	r2, #0
    7c4c:	movw	r3, #3579	; 0xdfb
    7c50:	bl	0 <coda_set_error>
    7c54:	mvn	r0, #0
    7c58:	str	r0, [fp, #-4]
    7c5c:	b	7cfc <coda_type_get_record_field_available_status+0x168>
    7c60:	ldr	r0, [fp, #-12]
    7c64:	cmp	r0, #0
    7c68:	blt	7c80 <coda_type_get_record_field_available_status+0xec>
    7c6c:	ldr	r0, [fp, #-12]
    7c70:	ldr	r1, [fp, #-8]
    7c74:	ldr	r1, [r1, #48]	; 0x30
    7c78:	cmp	r0, r1
    7c7c:	blt	7cbc <coda_type_get_record_field_available_status+0x128>
    7c80:	ldr	r2, [fp, #-12]
    7c84:	ldr	r0, [fp, #-8]
    7c88:	ldr	r3, [r0, #48]	; 0x30
    7c8c:	mvn	r0, #100	; 0x64
    7c90:	movw	r1, #0
    7c94:	movt	r1, #0
    7c98:	movw	ip, #0
    7c9c:	movt	ip, #0
    7ca0:	str	ip, [sp]
    7ca4:	movw	ip, #3586	; 0xe02
    7ca8:	str	ip, [sp, #4]
    7cac:	bl	0 <coda_set_error>
    7cb0:	mvn	r0, #0
    7cb4:	str	r0, [fp, #-4]
    7cb8:	b	7cfc <coda_type_get_record_field_available_status+0x168>
    7cbc:	ldr	r0, [fp, #-8]
    7cc0:	ldr	r0, [r0, #52]	; 0x34
    7cc4:	ldr	r1, [fp, #-12]
    7cc8:	add	r0, r0, r1, lsl #2
    7ccc:	ldr	r0, [r0]
    7cd0:	ldrb	r0, [r0, #16]
    7cd4:	cmp	r0, #0
    7cd8:	movw	r0, #0
    7cdc:	movne	r0, #1
    7ce0:	tst	r0, #1
    7ce4:	mvn	r0, #0
    7ce8:	moveq	r0, #1
    7cec:	ldr	r1, [sp, #16]
    7cf0:	str	r0, [r1]
    7cf4:	movw	r0, #0
    7cf8:	str	r0, [fp, #-4]
    7cfc:	ldr	r0, [fp, #-4]
    7d00:	mov	sp, fp
    7d04:	pop	{fp, pc}

00007d08 <coda_type_get_record_union_status>:
    7d08:	push	{fp, lr}
    7d0c:	mov	fp, sp
    7d10:	sub	sp, sp, #16
    7d14:	str	r0, [sp, #8]
    7d18:	str	r1, [sp, #4]
    7d1c:	ldr	r0, [sp, #8]
    7d20:	movw	r1, #0
    7d24:	cmp	r0, r1
    7d28:	bne	7d54 <coda_type_get_record_union_status+0x4c>
    7d2c:	mvn	r0, #99	; 0x63
    7d30:	movw	r1, #0
    7d34:	movt	r1, #0
    7d38:	movw	r2, #0
    7d3c:	movt	r2, #0
    7d40:	movw	r3, #3607	; 0xe17
    7d44:	bl	0 <coda_set_error>
    7d48:	mvn	r0, #0
    7d4c:	str	r0, [fp, #-4]
    7d50:	b	7de8 <coda_type_get_record_union_status+0xe0>
    7d54:	ldr	r0, [sp, #8]
    7d58:	ldr	r0, [r0, #8]
    7d5c:	cmp	r0, #0
    7d60:	beq	7d98 <coda_type_get_record_union_status+0x90>
    7d64:	ldr	r0, [sp, #8]
    7d68:	ldr	r0, [r0, #8]
    7d6c:	bl	fc4 <coda_type_get_class_name>
    7d70:	mvn	r1, #104	; 0x68
    7d74:	str	r0, [sp]
    7d78:	mov	r0, r1
    7d7c:	movw	r1, #0
    7d80:	movt	r1, #0
    7d84:	ldr	r2, [sp]
    7d88:	bl	0 <coda_set_error>
    7d8c:	mvn	r0, #0
    7d90:	str	r0, [fp, #-4]
    7d94:	b	7de8 <coda_type_get_record_union_status+0xe0>
    7d98:	ldr	r0, [sp, #4]
    7d9c:	movw	r1, #0
    7da0:	cmp	r0, r1
    7da4:	bne	7dd0 <coda_type_get_record_union_status+0xc8>
    7da8:	mvn	r0, #99	; 0x63
    7dac:	movw	r1, #0
    7db0:	movt	r1, #0
    7db4:	movw	r2, #0
    7db8:	movt	r2, #0
    7dbc:	movw	r3, #3618	; 0xe22
    7dc0:	bl	0 <coda_set_error>
    7dc4:	mvn	r0, #0
    7dc8:	str	r0, [fp, #-4]
    7dcc:	b	7de8 <coda_type_get_record_union_status+0xe0>
    7dd0:	ldr	r0, [sp, #8]
    7dd4:	ldr	r0, [r0, #64]	; 0x40
    7dd8:	ldr	r1, [sp, #4]
    7ddc:	str	r0, [r1]
    7de0:	movw	r0, #0
    7de4:	str	r0, [fp, #-4]
    7de8:	ldr	r0, [fp, #-4]
    7dec:	mov	sp, fp
    7df0:	pop	{fp, pc}

00007df4 <coda_type_get_array_num_dims>:
    7df4:	push	{fp, lr}
    7df8:	mov	fp, sp
    7dfc:	sub	sp, sp, #16
    7e00:	str	r0, [sp, #8]
    7e04:	str	r1, [sp, #4]
    7e08:	ldr	r0, [sp, #8]
    7e0c:	movw	r1, #0
    7e10:	cmp	r0, r1
    7e14:	bne	7e40 <coda_type_get_array_num_dims+0x4c>
    7e18:	mvn	r0, #99	; 0x63
    7e1c:	movw	r1, #0
    7e20:	movt	r1, #0
    7e24:	movw	r2, #0
    7e28:	movt	r2, #0
    7e2c:	movw	r3, #3638	; 0xe36
    7e30:	bl	0 <coda_set_error>
    7e34:	mvn	r0, #0
    7e38:	str	r0, [fp, #-4]
    7e3c:	b	7ed4 <coda_type_get_array_num_dims+0xe0>
    7e40:	ldr	r0, [sp, #8]
    7e44:	ldr	r0, [r0, #8]
    7e48:	cmp	r0, #1
    7e4c:	beq	7e84 <coda_type_get_array_num_dims+0x90>
    7e50:	ldr	r0, [sp, #8]
    7e54:	ldr	r0, [r0, #8]
    7e58:	bl	fc4 <coda_type_get_class_name>
    7e5c:	mvn	r1, #104	; 0x68
    7e60:	str	r0, [sp]
    7e64:	mov	r0, r1
    7e68:	movw	r1, #0
    7e6c:	movt	r1, #0
    7e70:	ldr	r2, [sp]
    7e74:	bl	0 <coda_set_error>
    7e78:	mvn	r0, #0
    7e7c:	str	r0, [fp, #-4]
    7e80:	b	7ed4 <coda_type_get_array_num_dims+0xe0>
    7e84:	ldr	r0, [sp, #4]
    7e88:	movw	r1, #0
    7e8c:	cmp	r0, r1
    7e90:	bne	7ebc <coda_type_get_array_num_dims+0xc8>
    7e94:	mvn	r0, #99	; 0x63
    7e98:	movw	r1, #0
    7e9c:	movt	r1, #0
    7ea0:	movw	r2, #0
    7ea4:	movt	r2, #0
    7ea8:	movw	r3, #3649	; 0xe41
    7eac:	bl	0 <coda_set_error>
    7eb0:	mvn	r0, #0
    7eb4:	str	r0, [fp, #-4]
    7eb8:	b	7ed4 <coda_type_get_array_num_dims+0xe0>
    7ebc:	ldr	r0, [sp, #8]
    7ec0:	ldr	r0, [r0, #48]	; 0x30
    7ec4:	ldr	r1, [sp, #4]
    7ec8:	str	r0, [r1]
    7ecc:	movw	r0, #0
    7ed0:	str	r0, [fp, #-4]
    7ed4:	ldr	r0, [fp, #-4]
    7ed8:	mov	sp, fp
    7edc:	pop	{fp, pc}

00007ee0 <coda_type_get_array_dim>:
    7ee0:	push	{fp, lr}
    7ee4:	mov	fp, sp
    7ee8:	sub	sp, sp, #24
    7eec:	str	r0, [fp, #-8]
    7ef0:	str	r1, [sp, #12]
    7ef4:	str	r2, [sp, #8]
    7ef8:	ldr	r0, [fp, #-8]
    7efc:	movw	r1, #0
    7f00:	cmp	r0, r1
    7f04:	bne	7f30 <coda_type_get_array_dim+0x50>
    7f08:	mvn	r0, #99	; 0x63
    7f0c:	movw	r1, #0
    7f10:	movt	r1, #0
    7f14:	movw	r2, #0
    7f18:	movt	r2, #0
    7f1c:	movw	r3, #3680	; 0xe60
    7f20:	bl	0 <coda_set_error>
    7f24:	mvn	r0, #0
    7f28:	str	r0, [fp, #-4]
    7f2c:	b	8044 <coda_type_get_array_dim+0x164>
    7f30:	ldr	r0, [fp, #-8]
    7f34:	ldr	r0, [r0, #8]
    7f38:	cmp	r0, #1
    7f3c:	beq	7f74 <coda_type_get_array_dim+0x94>
    7f40:	ldr	r0, [fp, #-8]
    7f44:	ldr	r0, [r0, #8]
    7f48:	bl	fc4 <coda_type_get_class_name>
    7f4c:	mvn	r1, #104	; 0x68
    7f50:	str	r0, [sp]
    7f54:	mov	r0, r1
    7f58:	movw	r1, #0
    7f5c:	movt	r1, #0
    7f60:	ldr	r2, [sp]
    7f64:	bl	0 <coda_set_error>
    7f68:	mvn	r0, #0
    7f6c:	str	r0, [fp, #-4]
    7f70:	b	8044 <coda_type_get_array_dim+0x164>
    7f74:	ldr	r0, [sp, #12]
    7f78:	movw	r1, #0
    7f7c:	cmp	r0, r1
    7f80:	bne	7fac <coda_type_get_array_dim+0xcc>
    7f84:	mvn	r0, #99	; 0x63
    7f88:	movw	r1, #0
    7f8c:	movt	r1, #0
    7f90:	movw	r2, #0
    7f94:	movt	r2, #0
    7f98:	movw	r3, #3691	; 0xe6b
    7f9c:	bl	0 <coda_set_error>
    7fa0:	mvn	r0, #0
    7fa4:	str	r0, [fp, #-4]
    7fa8:	b	8044 <coda_type_get_array_dim+0x164>
    7fac:	ldr	r0, [sp, #8]
    7fb0:	movw	r1, #0
    7fb4:	cmp	r0, r1
    7fb8:	bne	7fe4 <coda_type_get_array_dim+0x104>
    7fbc:	mvn	r0, #99	; 0x63
    7fc0:	movw	r1, #0
    7fc4:	movt	r1, #0
    7fc8:	movw	r2, #0
    7fcc:	movt	r2, #0
    7fd0:	movw	r3, #3696	; 0xe70
    7fd4:	bl	0 <coda_set_error>
    7fd8:	mvn	r0, #0
    7fdc:	str	r0, [fp, #-4]
    7fe0:	b	8044 <coda_type_get_array_dim+0x164>
    7fe4:	ldr	r0, [fp, #-8]
    7fe8:	ldr	r0, [r0, #48]	; 0x30
    7fec:	ldr	r1, [sp, #12]
    7ff0:	str	r0, [r1]
    7ff4:	movw	r0, #0
    7ff8:	str	r0, [sp, #4]
    7ffc:	ldr	r0, [sp, #4]
    8000:	ldr	r1, [fp, #-8]
    8004:	ldr	r1, [r1, #48]	; 0x30
    8008:	cmp	r0, r1
    800c:	bge	803c <coda_type_get_array_dim+0x15c>
    8010:	ldr	r0, [fp, #-8]
    8014:	ldr	r1, [sp, #4]
    8018:	add	r0, r0, r1, lsl #2
    801c:	ldr	r0, [r0, #52]	; 0x34
    8020:	ldr	r2, [sp, #8]
    8024:	add	r1, r2, r1, lsl #2
    8028:	str	r0, [r1]
    802c:	ldr	r0, [sp, #4]
    8030:	add	r0, r0, #1
    8034:	str	r0, [sp, #4]
    8038:	b	7ffc <coda_type_get_array_dim+0x11c>
    803c:	movw	r0, #0
    8040:	str	r0, [fp, #-4]
    8044:	ldr	r0, [fp, #-4]
    8048:	mov	sp, fp
    804c:	pop	{fp, pc}

00008050 <coda_type_get_special_type>:
    8050:	push	{fp, lr}
    8054:	mov	fp, sp
    8058:	sub	sp, sp, #16
    805c:	str	r0, [sp, #8]
    8060:	str	r1, [sp, #4]
    8064:	ldr	r0, [sp, #8]
    8068:	movw	r1, #0
    806c:	cmp	r0, r1
    8070:	bne	809c <coda_type_get_special_type+0x4c>
    8074:	mvn	r0, #99	; 0x63
    8078:	movw	r1, #0
    807c:	movt	r1, #0
    8080:	movw	r2, #0
    8084:	movt	r2, #0
    8088:	movw	r3, #3752	; 0xea8
    808c:	bl	0 <coda_set_error>
    8090:	mvn	r0, #0
    8094:	str	r0, [fp, #-4]
    8098:	b	8130 <coda_type_get_special_type+0xe0>
    809c:	ldr	r0, [sp, #8]
    80a0:	ldr	r0, [r0, #8]
    80a4:	cmp	r0, #6
    80a8:	beq	80e0 <coda_type_get_special_type+0x90>
    80ac:	ldr	r0, [sp, #8]
    80b0:	ldr	r0, [r0, #8]
    80b4:	bl	fc4 <coda_type_get_class_name>
    80b8:	mvn	r1, #104	; 0x68
    80bc:	str	r0, [sp]
    80c0:	mov	r0, r1
    80c4:	movw	r1, #0
    80c8:	movt	r1, #0
    80cc:	ldr	r2, [sp]
    80d0:	bl	0 <coda_set_error>
    80d4:	mvn	r0, #0
    80d8:	str	r0, [fp, #-4]
    80dc:	b	8130 <coda_type_get_special_type+0xe0>
    80e0:	ldr	r0, [sp, #4]
    80e4:	movw	r1, #0
    80e8:	cmp	r0, r1
    80ec:	bne	8118 <coda_type_get_special_type+0xc8>
    80f0:	mvn	r0, #99	; 0x63
    80f4:	movw	r1, #0
    80f8:	movt	r1, #0
    80fc:	movw	r2, #0
    8100:	movt	r2, #0
    8104:	movw	r3, #3763	; 0xeb3
    8108:	bl	0 <coda_set_error>
    810c:	mvn	r0, #0
    8110:	str	r0, [fp, #-4]
    8114:	b	8130 <coda_type_get_special_type+0xe0>
    8118:	ldr	r0, [sp, #8]
    811c:	ldr	r0, [r0, #40]	; 0x28
    8120:	ldr	r1, [sp, #4]
    8124:	str	r0, [r1]
    8128:	movw	r0, #0
    812c:	str	r0, [fp, #-4]
    8130:	ldr	r0, [fp, #-4]
    8134:	mov	sp, fp
    8138:	pop	{fp, pc}

0000813c <coda_type_get_special_base_type>:
    813c:	push	{fp, lr}
    8140:	mov	fp, sp
    8144:	sub	sp, sp, #16
    8148:	str	r0, [sp, #8]
    814c:	str	r1, [sp, #4]
    8150:	ldr	r0, [sp, #8]
    8154:	movw	r1, #0
    8158:	cmp	r0, r1
    815c:	bne	8188 <coda_type_get_special_base_type+0x4c>
    8160:	mvn	r0, #99	; 0x63
    8164:	movw	r1, #0
    8168:	movt	r1, #0
    816c:	movw	r2, #0
    8170:	movt	r2, #0
    8174:	movw	r3, #3783	; 0xec7
    8178:	bl	0 <coda_set_error>
    817c:	mvn	r0, #0
    8180:	str	r0, [fp, #-4]
    8184:	b	821c <coda_type_get_special_base_type+0xe0>
    8188:	ldr	r0, [sp, #8]
    818c:	ldr	r0, [r0, #8]
    8190:	cmp	r0, #6
    8194:	beq	81cc <coda_type_get_special_base_type+0x90>
    8198:	ldr	r0, [sp, #8]
    819c:	ldr	r0, [r0, #8]
    81a0:	bl	fc4 <coda_type_get_class_name>
    81a4:	mvn	r1, #104	; 0x68
    81a8:	str	r0, [sp]
    81ac:	mov	r0, r1
    81b0:	movw	r1, #0
    81b4:	movt	r1, #0
    81b8:	ldr	r2, [sp]
    81bc:	bl	0 <coda_set_error>
    81c0:	mvn	r0, #0
    81c4:	str	r0, [fp, #-4]
    81c8:	b	821c <coda_type_get_special_base_type+0xe0>
    81cc:	ldr	r0, [sp, #4]
    81d0:	movw	r1, #0
    81d4:	cmp	r0, r1
    81d8:	bne	8204 <coda_type_get_special_base_type+0xc8>
    81dc:	mvn	r0, #99	; 0x63
    81e0:	movw	r1, #0
    81e4:	movt	r1, #0
    81e8:	movw	r2, #0
    81ec:	movt	r2, #0
    81f0:	movw	r3, #3794	; 0xed2
    81f4:	bl	0 <coda_set_error>
    81f8:	mvn	r0, #0
    81fc:	str	r0, [fp, #-4]
    8200:	b	821c <coda_type_get_special_base_type+0xe0>
    8204:	ldr	r0, [sp, #8]
    8208:	ldr	r0, [r0, #44]	; 0x2c
    820c:	ldr	r1, [sp, #4]
    8210:	str	r0, [r1]
    8214:	movw	r0, #0
    8218:	str	r0, [fp, #-4]
    821c:	ldr	r0, [fp, #-4]
    8220:	mov	sp, fp
    8224:	pop	{fp, pc}

00008228 <mappings_delete>:
    8228:	push	{fp, lr}
    822c:	mov	fp, sp
    8230:	sub	sp, sp, #8
    8234:	str	r0, [sp, #4]
    8238:	ldr	r0, [sp, #4]
    823c:	movw	r1, #0
    8240:	cmp	r0, r1
    8244:	bne	824c <mappings_delete+0x24>
    8248:	b	82dc <mappings_delete+0xb4>
    824c:	ldr	r0, [sp, #4]
    8250:	ldr	r0, [r0, #12]
    8254:	movw	r1, #0
    8258:	cmp	r0, r1
    825c:	beq	82d4 <mappings_delete+0xac>
    8260:	movw	r0, #0
    8264:	str	r0, [sp]
    8268:	ldr	r0, [sp]
    826c:	ldr	r1, [sp, #4]
    8270:	ldr	r1, [r1, #8]
    8274:	cmp	r0, r1
    8278:	bge	82c8 <mappings_delete+0xa0>
    827c:	ldr	r0, [sp, #4]
    8280:	ldr	r0, [r0, #12]
    8284:	ldr	r1, [sp]
    8288:	add	r0, r0, r1, lsl #2
    828c:	ldr	r0, [r0]
    8290:	movw	r1, #0
    8294:	cmp	r0, r1
    8298:	beq	82b4 <mappings_delete+0x8c>
    829c:	ldr	r0, [sp, #4]
    82a0:	ldr	r0, [r0, #12]
    82a4:	ldr	r1, [sp]
    82a8:	add	r0, r0, r1, lsl #2
    82ac:	ldr	r0, [r0]
    82b0:	bl	3ac <mapping_delete>
    82b4:	b	82b8 <mappings_delete+0x90>
    82b8:	ldr	r0, [sp]
    82bc:	add	r0, r0, #1
    82c0:	str	r0, [sp]
    82c4:	b	8268 <mappings_delete+0x40>
    82c8:	ldr	r0, [sp, #4]
    82cc:	ldr	r0, [r0, #12]
    82d0:	bl	0 <free>
    82d4:	ldr	r0, [sp, #4]
    82d8:	bl	0 <free>
    82dc:	mov	sp, fp
    82e0:	pop	{fp, pc}
