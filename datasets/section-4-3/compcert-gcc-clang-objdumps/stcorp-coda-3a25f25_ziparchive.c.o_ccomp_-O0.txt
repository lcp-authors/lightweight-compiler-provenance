
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/ziparchive.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <default_error_handler>:
   0:	mov	ip, sp
   4:	push	{r0, r1, r2, r3}
   8:	sub	sp, sp, #24
   c:	str	ip, [sp]
  10:	str	lr, [sp, #4]
  14:	str	r4, [sp, #8]
  18:	mov	r4, r0
  1c:	ldr	r0, [pc, #72]	; 6c <default_error_handler+0x6c>
  20:	ldr	r0, [r0]
  24:	ldr	r1, [pc, #68]	; 70 <default_error_handler+0x70>
  28:	bl	0 <fprintf>
  2c:	add	r2, sp, #16
  30:	add	lr, sp, #28
  34:	str	lr, [r2]
  38:	ldr	r1, [pc, #44]	; 6c <default_error_handler+0x6c>
  3c:	ldr	r0, [r1]
  40:	ldr	r2, [sp, #16]
  44:	mov	r1, r4
  48:	bl	0 <vfprintf>
  4c:	ldr	r0, [pc, #24]	; 6c <default_error_handler+0x6c>
  50:	ldr	r0, [r0]
  54:	ldr	r1, [pc, #24]	; 74 <default_error_handler+0x74>
  58:	bl	0 <fprintf>
  5c:	ldr	r4, [sp, #8]
  60:	ldr	lr, [sp, #4]
  64:	add	sp, sp, #40	; 0x28
  68:	bx	lr
  6c:	.word	0x00000000
  70:	.word	0x000003c7
  74:	.word	0x00000444

00000078 <get_entries>:
  78:	mov	ip, sp
  7c:	sub	sp, sp, #80	; 0x50
  80:	str	ip, [sp]
  84:	str	lr, [sp, #4]
  88:	str	r4, [sp, #8]
  8c:	str	r5, [sp, #12]
  90:	str	r6, [sp, #16]
  94:	str	r7, [sp, #20]
  98:	str	r8, [sp, #24]
  9c:	mov	r4, r0
  a0:	ldr	r0, [r4]
  a4:	mvn	r1, #21
  a8:	mov	r2, #2
  ac:	bl	0 <lseek>
  b0:	cmp	r0, #0
  b4:	bge	d4 <get_entries+0x5c>
  b8:	bl	0 <__errno_location>
  bc:	ldr	r0, [r0]
  c0:	bl	0 <strerror>
  c4:	ldr	ip, [r4, #20]
  c8:	blx	ip
  cc:	mvn	r0, #0
  d0:	b	440 <get_entries+0x3c8>
  d4:	ldr	r0, [r4]
  d8:	add	r1, sp, #32
  dc:	mov	r2, #22
  e0:	bl	0 <read>
  e4:	cmp	r0, #0
  e8:	bge	108 <get_entries+0x90>
  ec:	bl	0 <__errno_location>
  f0:	ldr	r0, [r0]
  f4:	bl	0 <strerror>
  f8:	ldr	ip, [r4, #20]
  fc:	blx	ip
 100:	mvn	r0, #0
 104:	b	440 <get_entries+0x3c8>
 108:	ldr	ip, [sp, #32]
 10c:	movw	lr, #19280	; 0x4b50
 110:	movt	lr, #1541	; 0x605
 114:	cmp	ip, lr
 118:	beq	134 <get_entries+0xbc>
 11c:	ldr	ip, [r4, #20]
 120:	ldr	r0, [pc, #824]	; 460 <get_entries+0x3e8>
 124:	ldr	r1, [r4, #8]
 128:	blx	ip
 12c:	mvn	r0, #0
 130:	b	440 <get_entries+0x3c8>
 134:	ldrh	r1, [sp, #40]	; 0x28
 138:	bic	r5, r1, #16711680	; 0xff0000
 13c:	bic	r5, r5, #-16777216	; 0xff000000
 140:	ldr	r6, [sp, #48]	; 0x30
 144:	str	r5, [r4, #4]
 148:	mov	r0, #44	; 0x2c
 14c:	mul	r0, r0, r5
 150:	bl	0 <malloc>
 154:	str	r0, [r4, #12]
 158:	ldr	ip, [r4, #12]
 15c:	cmp	ip, #0
 160:	bne	180 <get_entries+0x108>
 164:	ldr	ip, [r4, #20]
 168:	ldr	r0, [pc, #764]	; 46c <get_entries+0x3f4>
 16c:	mov	r1, #44	; 0x2c
 170:	mul	r1, r1, r5
 174:	blx	ip
 178:	mvn	r0, #0
 17c:	b	440 <get_entries+0x3c8>
 180:	mov	r1, #0
 184:	cmp	r1, r5
 188:	bge	1b8 <get_entries+0x140>
 18c:	mov	ip, #44	; 0x2c
 190:	ldr	r0, [r4, #12]
 194:	mla	r3, ip, r1, r0
 198:	mov	r2, #0
 19c:	str	r2, [r3, #36]	; 0x24
 1a0:	mov	r0, #44	; 0x2c
 1a4:	ldr	r2, [r4, #12]
 1a8:	mla	r2, r0, r1, r2
 1ac:	str	r4, [r2, #40]	; 0x28
 1b0:	add	r1, r1, #1
 1b4:	b	184 <get_entries+0x10c>
 1b8:	ldr	r0, [r4]
 1bc:	mov	r2, #0
 1c0:	mov	r1, r6
 1c4:	bl	0 <lseek>
 1c8:	cmp	r0, #0
 1cc:	bge	1ec <get_entries+0x174>
 1d0:	bl	0 <__errno_location>
 1d4:	ldr	r0, [r0]
 1d8:	bl	0 <strerror>
 1dc:	ldr	ip, [r4, #20]
 1e0:	blx	ip
 1e4:	mvn	r0, #0
 1e8:	b	440 <get_entries+0x3c8>
 1ec:	mov	r6, #0
 1f0:	cmp	r6, r5
 1f4:	bge	43c <get_entries+0x3c4>
 1f8:	mov	r1, #44	; 0x2c
 1fc:	ldr	r0, [r4, #12]
 200:	mla	r7, r1, r6, r0
 204:	ldr	r0, [r4]
 208:	add	r1, sp, #32
 20c:	mov	r2, #46	; 0x2e
 210:	bl	0 <read>
 214:	cmp	r0, #0
 218:	bge	238 <get_entries+0x1c0>
 21c:	bl	0 <__errno_location>
 220:	ldr	r0, [r0]
 224:	bl	0 <strerror>
 228:	ldr	ip, [r4, #20]
 22c:	blx	ip
 230:	mvn	r0, #0
 234:	b	440 <get_entries+0x3c8>
 238:	ldr	r3, [sp, #32]
 23c:	movw	lr, #19280	; 0x4b50
 240:	movt	lr, #513	; 0x201
 244:	cmp	r3, lr
 248:	beq	264 <get_entries+0x1ec>
 24c:	ldr	ip, [r4, #20]
 250:	ldr	r0, [pc, #528]	; 468 <get_entries+0x3f0>
 254:	ldr	r1, [r4, #8]
 258:	blx	ip
 25c:	mvn	r0, #0
 260:	b	440 <get_entries+0x3c8>
 264:	ldrh	r0, [sp, #42]	; 0x2a
 268:	bic	ip, r0, #16711680	; 0xff0000
 26c:	bic	ip, ip, #-16777216	; 0xff000000
 270:	strh	ip, [r7, #4]
 274:	ldrh	r1, [r7, #4]
 278:	cmp	r1, #0
 27c:	beq	294 <get_entries+0x21c>
 280:	ldrh	r2, [r7, #4]
 284:	cmp	r2, #8
 288:	movne	ip, #1
 28c:	moveq	ip, #0
 290:	b	298 <get_entries+0x220>
 294:	mov	ip, #0
 298:	cmp	ip, #0
 29c:	beq	2b8 <get_entries+0x240>
 2a0:	ldr	ip, [r4, #20]
 2a4:	ldr	r0, [pc, #456]	; 474 <get_entries+0x3fc>
 2a8:	ldr	r1, [r4, #8]
 2ac:	blx	ip
 2b0:	mvn	r0, #0
 2b4:	b	440 <get_entries+0x3c8>
 2b8:	ldrh	r2, [sp, #44]	; 0x2c
 2bc:	bic	ip, r2, #16711680	; 0xff0000
 2c0:	bic	ip, ip, #-16777216	; 0xff000000
 2c4:	strh	ip, [r7, #6]
 2c8:	ldrh	r3, [sp, #46]	; 0x2e
 2cc:	bic	r2, r3, #16711680	; 0xff0000
 2d0:	bic	r2, r2, #-16777216	; 0xff000000
 2d4:	strh	r2, [r7, #8]
 2d8:	ldr	ip, [sp, #48]	; 0x30
 2dc:	str	ip, [r7, #16]
 2e0:	ldr	r2, [sp, #52]	; 0x34
 2e4:	str	r2, [r7, #20]
 2e8:	ldr	r3, [sp, #56]	; 0x38
 2ec:	str	r3, [r7, #24]
 2f0:	ldrh	r0, [sp, #60]	; 0x3c
 2f4:	bic	r2, r0, #16711680	; 0xff0000
 2f8:	bic	r2, r2, #-16777216	; 0xff000000
 2fc:	strh	r2, [r7, #28]
 300:	ldrh	r1, [sp, #62]	; 0x3e
 304:	bic	r1, r1, #16711680	; 0xff0000
 308:	bic	r1, r1, #-16777216	; 0xff000000
 30c:	strh	r1, [r7, #30]
 310:	ldrh	r3, [sp, #64]	; 0x40
 314:	bic	r8, r3, #16711680	; 0xff0000
 318:	bic	r8, r8, #-16777216	; 0xff000000
 31c:	ldrh	r0, [sp, #68]	; 0x44
 320:	bic	ip, r0, #16711680	; 0xff0000
 324:	bic	ip, ip, #-16777216	; 0xff000000
 328:	and	ip, ip, #1
 32c:	str	ip, [r7, #32]
 330:	add	r0, r7, #12
 334:	add	r1, sp, #70	; 0x46
 338:	mov	r2, #4
 33c:	bl	0 <memcpy>
 340:	add	r1, sp, #74	; 0x4a
 344:	mov	r2, #4
 348:	mov	r0, r7
 34c:	bl	0 <memcpy>
 350:	ldrh	r1, [r7, #28]
 354:	add	r0, r1, #1
 358:	bl	0 <malloc>
 35c:	str	r0, [r7, #36]	; 0x24
 360:	ldr	r1, [r7, #36]	; 0x24
 364:	cmp	r1, #0
 368:	bne	388 <get_entries+0x310>
 36c:	ldr	ip, [r4, #20]
 370:	ldr	r0, [pc, #236]	; 464 <get_entries+0x3ec>
 374:	ldrh	r3, [r7, #28]
 378:	add	r1, r3, #1
 37c:	blx	ip
 380:	mvn	r0, #0
 384:	b	440 <get_entries+0x3c8>
 388:	ldr	r0, [r4]
 38c:	ldr	r1, [r7, #36]	; 0x24
 390:	ldrh	r2, [r7, #28]
 394:	bl	0 <read>
 398:	cmp	r0, #0
 39c:	bge	3bc <get_entries+0x344>
 3a0:	bl	0 <__errno_location>
 3a4:	ldr	r0, [r0]
 3a8:	bl	0 <strerror>
 3ac:	ldr	ip, [r4, #20]
 3b0:	blx	ip
 3b4:	mvn	r0, #0
 3b8:	b	440 <get_entries+0x3c8>
 3bc:	ldr	r3, [r7, #36]	; 0x24
 3c0:	ldrh	r0, [r7, #28]
 3c4:	mov	r2, #0
 3c8:	strb	r2, [r3, r0]
 3cc:	ldr	r0, [r4, #16]
 3d0:	ldr	r1, [r7, #36]	; 0x24
 3d4:	bl	0 <coda_hashtable_add_name>
 3d8:	cmp	r0, #0
 3dc:	beq	3fc <get_entries+0x384>
 3e0:	ldr	ip, [r4, #20]
 3e4:	ldr	r0, [pc, #132]	; 470 <get_entries+0x3f8>
 3e8:	ldr	r1, [r4, #8]
 3ec:	ldr	r2, [r7, #36]	; 0x24
 3f0:	blx	ip
 3f4:	mvn	r0, #0
 3f8:	b	440 <get_entries+0x3c8>
 3fc:	ldr	r0, [r4]
 400:	ldrh	r2, [r7, #30]
 404:	add	r1, r2, r8
 408:	mov	r2, #1
 40c:	bl	0 <lseek>
 410:	cmp	r0, #0
 414:	bge	434 <get_entries+0x3bc>
 418:	bl	0 <__errno_location>
 41c:	ldr	r0, [r0]
 420:	bl	0 <strerror>
 424:	ldr	ip, [r4, #20]
 428:	blx	ip
 42c:	mvn	r0, #0
 430:	b	440 <get_entries+0x3c8>
 434:	add	r6, r6, #1
 438:	b	1f0 <get_entries+0x178>
 43c:	mov	r0, #0
 440:	ldr	r4, [sp, #8]
 444:	ldr	r5, [sp, #12]
 448:	ldr	r6, [sp, #16]
 44c:	ldr	r7, [sp, #20]
 450:	ldr	r8, [sp, #24]
 454:	ldr	lr, [sp, #4]
 458:	add	sp, sp, #80	; 0x50
 45c:	bx	lr
 460:	.word	0x0000023c
 464:	.word	0x000004e6
 468:	.word	0x000002c4
 46c:	.word	0x000003cf
 470:	.word	0x00000591
 474:	.word	0x000001f0

00000478 <coda_za_open>:
 478:	mov	ip, sp
 47c:	sub	sp, sp, #120	; 0x78
 480:	str	ip, [sp]
 484:	str	lr, [sp, #4]
 488:	str	r4, [sp, #8]
 48c:	str	r5, [sp, #12]
 490:	str	r6, [sp, #16]
 494:	mov	r6, r1
 498:	mov	r5, r0
 49c:	add	r1, sp, #32
 4a0:	mov	r0, r5
 4a4:	bl	0 <stat>
 4a8:	cmp	r0, #0
 4ac:	beq	4f8 <coda_za_open+0x80>
 4b0:	bl	0 <__errno_location>
 4b4:	ldr	ip, [r0]
 4b8:	cmp	ip, #2
 4bc:	beq	4e4 <coda_za_open+0x6c>
 4c0:	bl	0 <__errno_location>
 4c4:	ldr	r0, [r0]
 4c8:	bl	0 <strerror>
 4cc:	ldr	r1, [pc, #548]	; 6f8 <coda_za_open+0x280>
 4d0:	mov	r2, r0
 4d4:	mov	r0, r1
 4d8:	mov	r1, r5
 4dc:	blx	r6
 4e0:	b	4f0 <coda_za_open+0x78>
 4e4:	ldr	r0, [pc, #548]	; 710 <coda_za_open+0x298>
 4e8:	mov	r1, r5
 4ec:	blx	r6
 4f0:	mov	r0, #0
 4f4:	b	6e0 <coda_za_open+0x268>
 4f8:	ldr	ip, [sp, #48]	; 0x30
 4fc:	and	r2, ip, #32768	; 0x8000
 500:	cmp	r2, #0
 504:	bne	51c <coda_za_open+0xa4>
 508:	ldr	r0, [pc, #504]	; 708 <coda_za_open+0x290>
 50c:	mov	r1, r5
 510:	blx	r6
 514:	mov	r0, #0
 518:	b	6e0 <coda_za_open+0x268>
 51c:	ldr	r0, [sp, #76]	; 0x4c
 520:	cmp	r0, #22
 524:	bge	53c <coda_za_open+0xc4>
 528:	ldr	r0, [pc, #464]	; 700 <coda_za_open+0x288>
 52c:	mov	r1, r5
 530:	blx	r6
 534:	mov	r0, #0
 538:	b	6e0 <coda_za_open+0x268>
 53c:	mov	r0, #24
 540:	bl	0 <malloc>
 544:	mov	r4, r0
 548:	cmp	r4, #0
 54c:	bne	56c <coda_za_open+0xf4>
 550:	cmp	r6, #0
 554:	beq	564 <coda_za_open+0xec>
 558:	ldr	r0, [pc, #428]	; 70c <coda_za_open+0x294>
 55c:	mov	r1, #24
 560:	blx	r6
 564:	mov	r0, #0
 568:	b	6e0 <coda_za_open+0x268>
 56c:	mov	r0, r5
 570:	bl	0 <strdup>
 574:	str	r0, [r4, #8]
 578:	ldr	r1, [r4, #8]
 57c:	cmp	r1, #0
 580:	bne	5a4 <coda_za_open+0x12c>
 584:	mov	r0, r4
 588:	bl	0 <free>
 58c:	cmp	r6, #0
 590:	beq	59c <coda_za_open+0x124>
 594:	ldr	r0, [pc, #360]	; 704 <coda_za_open+0x28c>
 598:	blx	r6
 59c:	mov	r0, #0
 5a0:	b	6e0 <coda_za_open+0x268>
 5a4:	mov	r3, #0
 5a8:	str	r3, [r4, #4]
 5ac:	mov	r3, #0
 5b0:	str	r3, [r4, #12]
 5b4:	mov	r2, #0
 5b8:	str	r2, [r4, #16]
 5bc:	cmp	r6, #0
 5c0:	bne	5d0 <coda_za_open+0x158>
 5c4:	ldr	r2, [pc, #304]	; 6fc <coda_za_open+0x284>
 5c8:	str	r2, [r4, #20]
 5cc:	b	5d4 <coda_za_open+0x15c>
 5d0:	str	r6, [r4, #20]
 5d4:	mov	r1, #0
 5d8:	mov	r0, r5
 5dc:	bl	0 <open>
 5e0:	str	r0, [r4]
 5e4:	ldr	r3, [r4]
 5e8:	cmp	r3, #0
 5ec:	bge	62c <coda_za_open+0x1b4>
 5f0:	bl	0 <__errno_location>
 5f4:	ldr	r0, [r0]
 5f8:	bl	0 <strerror>
 5fc:	ldr	ip, [r4, #20]
 600:	ldr	r1, [pc, #268]	; 714 <coda_za_open+0x29c>
 604:	mov	r2, r0
 608:	mov	r0, r1
 60c:	mov	r1, r5
 610:	blx	ip
 614:	ldr	r0, [r4, #8]
 618:	bl	0 <free>
 61c:	mov	r0, r4
 620:	bl	0 <free>
 624:	mov	r0, #0
 628:	b	6e0 <coda_za_open+0x268>
 62c:	ldr	r0, [r4]
 630:	add	r1, sp, #24
 634:	mov	r2, #2
 638:	bl	0 <read>
 63c:	cmp	r0, #0
 640:	bge	668 <coda_za_open+0x1f0>
 644:	bl	0 <__errno_location>
 648:	ldr	r0, [r0]
 64c:	bl	0 <strerror>
 650:	ldr	ip, [r4, #20]
 654:	blx	ip
 658:	mov	r0, r4
 65c:	bl	d68 <coda_za_close>
 660:	mov	r0, #0
 664:	b	6e0 <coda_za_open+0x268>
 668:	ldrb	r2, [sp, #24]
 66c:	cmp	r2, #80	; 0x50
 670:	beq	688 <coda_za_open+0x210>
 674:	ldrb	ip, [sp, #25]
 678:	cmp	ip, #75	; 0x4b
 67c:	movne	r1, #1
 680:	moveq	r1, #0
 684:	b	68c <coda_za_open+0x214>
 688:	mov	r1, #0
 68c:	cmp	r1, #0
 690:	beq	6b0 <coda_za_open+0x238>
 694:	ldr	r0, [pc, #100]	; 700 <coda_za_open+0x288>
 698:	mov	r1, r5
 69c:	blx	r6
 6a0:	mov	r0, r4
 6a4:	bl	d68 <coda_za_close>
 6a8:	mov	r0, #0
 6ac:	b	6e0 <coda_za_open+0x268>
 6b0:	mov	r0, #1
 6b4:	bl	0 <coda_hashtable_new>
 6b8:	str	r0, [r4, #16]
 6bc:	mov	r0, r4
 6c0:	bl	78 <get_entries>
 6c4:	cmp	r0, #0
 6c8:	beq	6dc <coda_za_open+0x264>
 6cc:	mov	r0, r4
 6d0:	bl	d68 <coda_za_close>
 6d4:	mov	r0, #0
 6d8:	b	6e0 <coda_za_open+0x268>
 6dc:	mov	r0, r4
 6e0:	ldr	r4, [sp, #8]
 6e4:	ldr	r5, [sp, #12]
 6e8:	ldr	r6, [sp, #16]
 6ec:	ldr	lr, [sp, #4]
 6f0:	add	sp, sp, #120	; 0x78
 6f4:	bx	lr
 6f8:	.word	0x000000d8
 6fc:	.word	0x00000000
 700:	.word	0x000000ef
 704:	.word	0x000000bd
 708:	.word	0x000001c9
 70c:	.word	0x000003cf
 710:	.word	0x000001a7
 714:	.word	0x0000045f

00000718 <coda_za_get_num_entries>:
 718:	mov	ip, sp
 71c:	sub	sp, sp, #8
 720:	str	ip, [sp]
 724:	str	lr, [sp, #4]
 728:	ldr	r0, [r0, #4]
 72c:	ldr	lr, [sp, #4]
 730:	add	sp, sp, #8
 734:	bx	lr

00000738 <coda_za_get_filename>:
 738:	mov	ip, sp
 73c:	sub	sp, sp, #8
 740:	str	ip, [sp]
 744:	str	lr, [sp, #4]
 748:	ldr	r0, [r0, #8]
 74c:	ldr	lr, [sp, #4]
 750:	add	sp, sp, #8
 754:	bx	lr

00000758 <coda_za_get_entry_by_index>:
 758:	mov	ip, sp
 75c:	sub	sp, sp, #8
 760:	str	ip, [sp]
 764:	str	lr, [sp, #4]
 768:	cmp	r1, #0
 76c:	blt	784 <coda_za_get_entry_by_index+0x2c>
 770:	ldr	r2, [r0, #4]
 774:	cmp	r1, r2
 778:	movge	ip, #1
 77c:	movlt	ip, #0
 780:	b	788 <coda_za_get_entry_by_index+0x30>
 784:	mov	ip, #1
 788:	cmp	ip, #0
 78c:	beq	798 <coda_za_get_entry_by_index+0x40>
 790:	mov	r0, #0
 794:	b	7a4 <coda_za_get_entry_by_index+0x4c>
 798:	mov	r2, #44	; 0x2c
 79c:	ldr	r3, [r0, #12]
 7a0:	mla	r0, r2, r1, r3
 7a4:	ldr	lr, [sp, #4]
 7a8:	add	sp, sp, #8
 7ac:	bx	lr

000007b0 <coda_za_get_entry_by_name>:
 7b0:	mov	ip, sp
 7b4:	sub	sp, sp, #16
 7b8:	str	ip, [sp]
 7bc:	str	lr, [sp, #4]
 7c0:	str	r4, [sp, #8]
 7c4:	mov	r4, r0
 7c8:	ldr	r0, [r4, #16]
 7cc:	bl	0 <coda_hashtable_get_index_from_name>
 7d0:	cmp	r0, #0
 7d4:	bge	7e0 <coda_za_get_entry_by_name+0x30>
 7d8:	mov	r0, #0
 7dc:	b	7ec <coda_za_get_entry_by_name+0x3c>
 7e0:	mov	r1, #44	; 0x2c
 7e4:	ldr	r2, [r4, #12]
 7e8:	mla	r0, r1, r0, r2
 7ec:	ldr	r4, [sp, #8]
 7f0:	ldr	lr, [sp, #4]
 7f4:	add	sp, sp, #16
 7f8:	bx	lr

000007fc <coda_za_get_entry_size>:
 7fc:	mov	ip, sp
 800:	sub	sp, sp, #8
 804:	str	ip, [sp]
 808:	str	lr, [sp, #4]
 80c:	ldr	r0, [r0, #24]
 810:	ldr	lr, [sp, #4]
 814:	add	sp, sp, #8
 818:	bx	lr

0000081c <coda_za_get_entry_name>:
 81c:	mov	ip, sp
 820:	sub	sp, sp, #8
 824:	str	ip, [sp]
 828:	str	lr, [sp, #4]
 82c:	ldr	r0, [r0, #36]	; 0x24
 830:	ldr	lr, [sp, #4]
 834:	add	sp, sp, #8
 838:	bx	lr

0000083c <coda_za_read_entry>:
 83c:	mov	ip, sp
 840:	sub	sp, sp, #128	; 0x80
 844:	str	ip, [sp]
 848:	str	lr, [sp, #4]
 84c:	str	r4, [sp, #8]
 850:	str	r5, [sp, #12]
 854:	str	r6, [sp, #16]
 858:	mov	r5, r1
 85c:	mov	r6, r0
 860:	ldr	r3, [r6, #40]	; 0x28
 864:	ldr	r0, [r3]
 868:	ldr	r1, [r6]
 86c:	mov	r2, #0
 870:	bl	0 <lseek>
 874:	cmp	r0, #0
 878:	bge	89c <coda_za_read_entry+0x60>
 87c:	bl	0 <__errno_location>
 880:	ldr	r0, [r0]
 884:	bl	0 <strerror>
 888:	ldr	r1, [r6, #40]	; 0x28
 88c:	ldr	ip, [r1, #20]
 890:	blx	ip
 894:	mvn	r0, #0
 898:	b	d04 <coda_za_read_entry+0x4c8>
 89c:	ldr	r1, [r6, #40]	; 0x28
 8a0:	ldr	r0, [r1]
 8a4:	add	r1, sp, #40	; 0x28
 8a8:	mov	r2, #30
 8ac:	bl	0 <read>
 8b0:	cmp	r0, #0
 8b4:	bge	8d8 <coda_za_read_entry+0x9c>
 8b8:	bl	0 <__errno_location>
 8bc:	ldr	r0, [r0]
 8c0:	bl	0 <strerror>
 8c4:	ldr	r3, [r6, #40]	; 0x28
 8c8:	ldr	ip, [r3, #20]
 8cc:	blx	ip
 8d0:	mvn	r0, #0
 8d4:	b	d04 <coda_za_read_entry+0x4c8>
 8d8:	ldr	r2, [sp, #40]	; 0x28
 8dc:	movw	lr, #19280	; 0x4b50
 8e0:	movt	lr, #1027	; 0x403
 8e4:	cmp	r2, lr
 8e8:	beq	904 <coda_za_read_entry+0xc8>
 8ec:	ldr	r0, [r6, #40]	; 0x28
 8f0:	ldr	ip, [r0, #20]
 8f4:	ldr	r0, [pc, #1116]	; d58 <coda_za_read_entry+0x51c>
 8f8:	blx	ip
 8fc:	mvn	r0, #0
 900:	b	d04 <coda_za_read_entry+0x4c8>
 904:	ldrh	r0, [sp, #48]	; 0x30
 908:	bic	ip, r0, #16711680	; 0xff0000
 90c:	bic	ip, ip, #-16777216	; 0xff000000
 910:	ldrh	r0, [r6, #4]
 914:	cmp	ip, r0
 918:	beq	934 <coda_za_read_entry+0xf8>
 91c:	ldr	r0, [r6, #40]	; 0x28
 920:	ldr	ip, [r0, #20]
 924:	ldr	r0, [pc, #1020]	; d28 <coda_za_read_entry+0x4ec>
 928:	blx	ip
 92c:	mvn	r0, #0
 930:	b	d04 <coda_za_read_entry+0x4c8>
 934:	ldrh	r0, [sp, #50]	; 0x32
 938:	bic	r3, r0, #16711680	; 0xff0000
 93c:	bic	r3, r3, #-16777216	; 0xff000000
 940:	ldrh	r0, [r6, #6]
 944:	cmp	r3, r0
 948:	beq	964 <coda_za_read_entry+0x128>
 94c:	ldr	r0, [r6, #40]	; 0x28
 950:	ldr	ip, [r0, #20]
 954:	ldr	r0, [pc, #984]	; d34 <coda_za_read_entry+0x4f8>
 958:	blx	ip
 95c:	mvn	r0, #0
 960:	b	d04 <coda_za_read_entry+0x4c8>
 964:	ldrh	r0, [sp, #52]	; 0x34
 968:	bic	r3, r0, #16711680	; 0xff0000
 96c:	bic	r3, r3, #-16777216	; 0xff000000
 970:	ldrh	ip, [r6, #8]
 974:	cmp	r3, ip
 978:	beq	994 <coda_za_read_entry+0x158>
 97c:	ldr	r0, [r6, #40]	; 0x28
 980:	ldr	ip, [r0, #20]
 984:	ldr	r0, [pc, #976]	; d5c <coda_za_read_entry+0x520>
 988:	blx	ip
 98c:	mvn	r0, #0
 990:	b	d04 <coda_za_read_entry+0x4c8>
 994:	add	r0, sp, #24
 998:	add	r1, sp, #54	; 0x36
 99c:	mov	r2, #4
 9a0:	bl	0 <memcpy>
 9a4:	ldr	ip, [sp, #24]
 9a8:	ldr	r0, [r6, #16]
 9ac:	cmp	ip, r0
 9b0:	beq	9cc <coda_za_read_entry+0x190>
 9b4:	ldr	r0, [r6, #40]	; 0x28
 9b8:	ldr	ip, [r0, #20]
 9bc:	ldr	r0, [pc, #900]	; d48 <coda_za_read_entry+0x50c>
 9c0:	blx	ip
 9c4:	mvn	r0, #0
 9c8:	b	d04 <coda_za_read_entry+0x4c8>
 9cc:	add	r0, sp, #28
 9d0:	add	r1, sp, #58	; 0x3a
 9d4:	mov	r2, #4
 9d8:	bl	0 <memcpy>
 9dc:	ldr	r2, [sp, #28]
 9e0:	ldr	r1, [r6, #20]
 9e4:	cmp	r2, r1
 9e8:	beq	a04 <coda_za_read_entry+0x1c8>
 9ec:	ldr	r0, [r6, #40]	; 0x28
 9f0:	ldr	ip, [r0, #20]
 9f4:	ldr	r0, [pc, #800]	; d1c <coda_za_read_entry+0x4e0>
 9f8:	blx	ip
 9fc:	mvn	r0, #0
 a00:	b	d04 <coda_za_read_entry+0x4c8>
 a04:	add	r0, sp, #32
 a08:	add	r1, sp, #62	; 0x3e
 a0c:	mov	r2, #4
 a10:	bl	0 <memcpy>
 a14:	ldr	ip, [sp, #32]
 a18:	ldr	r0, [r6, #24]
 a1c:	cmp	ip, r0
 a20:	beq	a3c <coda_za_read_entry+0x200>
 a24:	ldr	r0, [r6, #40]	; 0x28
 a28:	ldr	ip, [r0, #20]
 a2c:	ldr	r0, [pc, #812]	; d60 <coda_za_read_entry+0x524>
 a30:	blx	ip
 a34:	mvn	r0, #0
 a38:	b	d04 <coda_za_read_entry+0x4c8>
 a3c:	ldrh	r3, [sp, #66]	; 0x42
 a40:	bic	r3, r3, #16711680	; 0xff0000
 a44:	bic	r3, r3, #-16777216	; 0xff000000
 a48:	ldrh	ip, [r6, #28]
 a4c:	cmp	r3, ip
 a50:	beq	a6c <coda_za_read_entry+0x230>
 a54:	ldr	r0, [r6, #40]	; 0x28
 a58:	ldr	ip, [r0, #20]
 a5c:	ldr	r0, [pc, #732]	; d40 <coda_za_read_entry+0x504>
 a60:	blx	ip
 a64:	mvn	r0, #0
 a68:	b	d04 <coda_za_read_entry+0x4c8>
 a6c:	ldrh	r1, [sp, #68]	; 0x44
 a70:	bic	r2, r1, #16711680	; 0xff0000
 a74:	bic	r2, r2, #-16777216	; 0xff000000
 a78:	ldr	r1, [r6, #40]	; 0x28
 a7c:	ldr	r0, [r1]
 a80:	add	r1, r3, r2
 a84:	mov	r2, #1
 a88:	bl	0 <lseek>
 a8c:	cmp	r0, #0
 a90:	bge	ab4 <coda_za_read_entry+0x278>
 a94:	bl	0 <__errno_location>
 a98:	ldr	r0, [r0]
 a9c:	bl	0 <strerror>
 aa0:	ldr	ip, [r6, #40]	; 0x28
 aa4:	ldr	ip, [ip, #20]
 aa8:	blx	ip
 aac:	mvn	r0, #0
 ab0:	b	d04 <coda_za_read_entry+0x4c8>
 ab4:	ldrh	r2, [r6, #4]
 ab8:	cmp	r2, #0
 abc:	beq	cc4 <coda_za_read_entry+0x488>
 ac0:	ldr	r0, [r6, #20]
 ac4:	bl	0 <malloc>
 ac8:	mov	r4, r0
 acc:	cmp	r4, #0
 ad0:	bne	af0 <coda_za_read_entry+0x2b4>
 ad4:	ldr	r2, [r6, #40]	; 0x28
 ad8:	ldr	ip, [r2, #20]
 adc:	ldr	r0, [pc, #608]	; d44 <coda_za_read_entry+0x508>
 ae0:	ldr	r1, [r6, #20]
 ae4:	blx	ip
 ae8:	mvn	r0, #0
 aec:	b	d04 <coda_za_read_entry+0x4c8>
 af0:	ldr	r2, [r6, #40]	; 0x28
 af4:	ldr	r0, [r2]
 af8:	ldr	r2, [r6, #20]
 afc:	mov	r1, r4
 b00:	bl	0 <read>
 b04:	cmp	r0, #0
 b08:	bge	b34 <coda_za_read_entry+0x2f8>
 b0c:	bl	0 <__errno_location>
 b10:	ldr	r0, [r0]
 b14:	bl	0 <strerror>
 b18:	ldr	r1, [r6, #40]	; 0x28
 b1c:	ldr	ip, [r1, #20]
 b20:	blx	ip
 b24:	mov	r0, r4
 b28:	bl	0 <free>
 b2c:	mvn	r0, #0
 b30:	b	d04 <coda_za_read_entry+0x4c8>
 b34:	mov	r2, #0
 b38:	str	r2, [sp, #72]	; 0x48
 b3c:	mov	r0, #0
 b40:	str	r0, [sp, #76]	; 0x4c
 b44:	mov	r1, #0
 b48:	str	r1, [sp, #104]	; 0x68
 b4c:	mov	r0, #0
 b50:	str	r0, [sp, #108]	; 0x6c
 b54:	mov	ip, #0
 b58:	str	ip, [sp, #112]	; 0x70
 b5c:	mov	r1, #0
 b60:	str	r1, [sp, #96]	; 0x60
 b64:	add	r0, sp, #72	; 0x48
 b68:	mvn	r1, #14
 b6c:	ldr	r2, [pc, #480]	; d54 <coda_za_read_entry+0x518>
 b70:	mov	r3, #56	; 0x38
 b74:	bl	0 <coda_inflateInit2_>
 b78:	cmp	r0, #0
 b7c:	beq	bc4 <coda_za_read_entry+0x388>
 b80:	ldr	r1, [sp, #96]	; 0x60
 b84:	cmp	r1, #0
 b88:	beq	ba4 <coda_za_read_entry+0x368>
 b8c:	ldr	r2, [r6, #40]	; 0x28
 b90:	ldr	ip, [r2, #20]
 b94:	ldr	r0, [pc, #436]	; d50 <coda_za_read_entry+0x514>
 b98:	ldr	r1, [sp, #96]	; 0x60
 b9c:	blx	ip
 ba0:	b	bb4 <coda_za_read_entry+0x378>
 ba4:	ldr	r3, [r6, #40]	; 0x28
 ba8:	ldr	ip, [r3, #20]
 bac:	ldr	r0, [pc, #376]	; d2c <coda_za_read_entry+0x4f0>
 bb0:	blx	ip
 bb4:	mov	r0, r4
 bb8:	bl	0 <free>
 bbc:	mvn	r0, #0
 bc0:	b	d04 <coda_za_read_entry+0x4c8>
 bc4:	str	r4, [sp, #72]	; 0x48
 bc8:	ldr	r1, [r6, #20]
 bcc:	str	r1, [sp, #76]	; 0x4c
 bd0:	str	r5, [sp, #84]	; 0x54
 bd4:	ldr	r0, [r6, #24]
 bd8:	str	r0, [sp, #88]	; 0x58
 bdc:	add	r0, sp, #72	; 0x48
 be0:	mov	r1, #4
 be4:	bl	0 <coda_inflate>
 be8:	mov	r5, r0
 bec:	cmn	r5, #2
 bf0:	bne	c08 <coda_za_read_entry+0x3cc>
 bf4:	ldr	r0, [pc, #320]	; d3c <coda_za_read_entry+0x500>
 bf8:	ldr	r1, [pc, #356]	; d64 <coda_za_read_entry+0x528>
 bfc:	movw	r2, #633	; 0x279
 c00:	ldr	r3, [pc, #280]	; d20 <coda_za_read_entry+0x4e4>
 c04:	bl	0 <__assert_fail>
 c08:	cmp	r5, #2
 c0c:	beq	c9c <coda_za_read_entry+0x460>
 c10:	cmn	r5, #4
 c14:	beq	c74 <coda_za_read_entry+0x438>
 c18:	cmn	r5, #3
 c1c:	beq	c9c <coda_za_read_entry+0x460>
 c20:	mov	r0, r4
 c24:	bl	0 <free>
 c28:	add	r0, sp, #72	; 0x48
 c2c:	bl	0 <coda_inflateEnd>
 c30:	cmp	r0, #0
 c34:	beq	d00 <coda_za_read_entry+0x4c4>
 c38:	ldr	r3, [sp, #96]	; 0x60
 c3c:	cmp	r3, #0
 c40:	beq	c5c <coda_za_read_entry+0x420>
 c44:	ldr	r0, [r6, #40]	; 0x28
 c48:	ldr	ip, [r0, #20]
 c4c:	ldr	r0, [pc, #228]	; d38 <coda_za_read_entry+0x4fc>
 c50:	ldr	r1, [sp, #96]	; 0x60
 c54:	blx	ip
 c58:	b	c6c <coda_za_read_entry+0x430>
 c5c:	ldr	r0, [r6, #40]	; 0x28
 c60:	ldr	ip, [r0, #20]
 c64:	ldr	r0, [pc, #196]	; d30 <coda_za_read_entry+0x4f4>
 c68:	blx	ip
 c6c:	mvn	r0, #0
 c70:	b	d04 <coda_za_read_entry+0x4c8>
 c74:	ldr	r1, [r6, #40]	; 0x28
 c78:	ldr	ip, [r1, #20]
 c7c:	ldr	r0, [pc, #160]	; d24 <coda_za_read_entry+0x4e8>
 c80:	blx	ip
 c84:	add	r0, sp, #72	; 0x48
 c88:	bl	0 <coda_inflateEnd>
 c8c:	mov	r0, r4
 c90:	bl	0 <free>
 c94:	mvn	r0, #0
 c98:	b	d04 <coda_za_read_entry+0x4c8>
 c9c:	ldr	ip, [r6, #40]	; 0x28
 ca0:	ldr	ip, [ip, #20]
 ca4:	ldr	r0, [pc, #160]	; d4c <coda_za_read_entry+0x510>
 ca8:	blx	ip
 cac:	add	r0, sp, #72	; 0x48
 cb0:	bl	0 <coda_inflateEnd>
 cb4:	mov	r0, r4
 cb8:	bl	0 <free>
 cbc:	mvn	r0, #0
 cc0:	b	d04 <coda_za_read_entry+0x4c8>
 cc4:	ldr	r2, [r6, #40]	; 0x28
 cc8:	ldr	r0, [r2]
 ccc:	ldr	r2, [r6, #24]
 cd0:	mov	r1, r5
 cd4:	bl	0 <read>
 cd8:	cmp	r0, #0
 cdc:	bge	d00 <coda_za_read_entry+0x4c4>
 ce0:	bl	0 <__errno_location>
 ce4:	ldr	r0, [r0]
 ce8:	bl	0 <strerror>
 cec:	ldr	r1, [r6, #40]	; 0x28
 cf0:	ldr	ip, [r1, #20]
 cf4:	blx	ip
 cf8:	mvn	r0, #0
 cfc:	b	d04 <coda_za_read_entry+0x4c8>
 d00:	mov	r0, #0
 d04:	ldr	r4, [sp, #8]
 d08:	ldr	r5, [sp, #12]
 d0c:	ldr	r6, [sp, #16]
 d10:	ldr	lr, [sp, #4]
 d14:	add	sp, sp, #128	; 0x80
 d18:	bx	lr
 d1c:	.word	0x0000014b
 d20:	.word	0x000005cc
 d24:	.word	0x0000047e
 d28:	.word	0x000003ec
 d2c:	.word	0x000003a1
 d30:	.word	0x00000229
 d34:	.word	0x00000003
 d38:	.word	0x000001b9
 d3c:	.word	0x00000446
 d40:	.word	0x00000061
 d44:	.word	0x000003cf
 d48:	.word	0x00000351
 d4c:	.word	0x00000560
 d50:	.word	0x00000000
 d54:	.word	0x00000223
 d58:	.word	0x00000112
 d5c:	.word	0x000002f3
 d60:	.word	0x00000502
 d64:	.word	0x0000048c

00000d68 <coda_za_close>:
 d68:	mov	ip, sp
 d6c:	sub	sp, sp, #16
 d70:	str	ip, [sp]
 d74:	str	lr, [sp, #4]
 d78:	str	r4, [sp, #8]
 d7c:	str	r5, [sp, #12]
 d80:	mov	r4, r0
 d84:	ldr	r0, [r4]
 d88:	bl	0 <close>
 d8c:	ldr	r0, [r4, #12]
 d90:	cmp	r0, #0
 d94:	beq	de4 <coda_za_close+0x7c>
 d98:	mov	r5, #0
 d9c:	ldr	ip, [r4, #4]
 da0:	cmp	r5, ip
 da4:	bge	ddc <coda_za_close+0x74>
 da8:	mov	r1, #44	; 0x2c
 dac:	ldr	r0, [r4, #12]
 db0:	mla	r3, r1, r5, r0
 db4:	ldr	r1, [r3, #36]	; 0x24
 db8:	cmp	r1, #0
 dbc:	beq	dd4 <coda_za_close+0x6c>
 dc0:	mov	r1, #44	; 0x2c
 dc4:	ldr	ip, [r4, #12]
 dc8:	mla	r3, r1, r5, ip
 dcc:	ldr	r0, [r3, #36]	; 0x24
 dd0:	bl	0 <free>
 dd4:	add	r5, r5, #1
 dd8:	b	d9c <coda_za_close+0x34>
 ddc:	ldr	r0, [r4, #12]
 de0:	bl	0 <free>
 de4:	ldr	r2, [r4, #8]
 de8:	cmp	r2, #0
 dec:	beq	df8 <coda_za_close+0x90>
 df0:	ldr	r0, [r4, #8]
 df4:	bl	0 <free>
 df8:	ldr	r2, [r4, #16]
 dfc:	cmp	r2, #0
 e00:	beq	e0c <coda_za_close+0xa4>
 e04:	ldr	r0, [r4, #16]
 e08:	bl	0 <coda_hashtable_delete>
 e0c:	mov	r0, r4
 e10:	bl	0 <free>
 e14:	ldr	r4, [sp, #8]
 e18:	ldr	r5, [sp, #12]
 e1c:	ldr	lr, [sp, #4]
 e20:	add	sp, sp, #16
 e24:	bx	lr
