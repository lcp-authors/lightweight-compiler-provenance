
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/__/__/external/hash/str_set.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <str_set_clear>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	str	r0, [sp, #4]
  10:	ldr	r0, [sp, #4]
  14:	bl	20 <ht_clear>
  18:	mov	sp, fp
  1c:	pop	{fp, pc}

00000020 <ht_clear>:
  20:	push	{fp, lr}
  24:	mov	fp, sp
  28:	sub	sp, sp, #8
  2c:	str	r0, [sp, #4]
  30:	ldr	r0, [sp, #4]
  34:	ldr	r0, [r0]
  38:	movw	r1, #0
  3c:	cmp	r0, r1
  40:	beq	50 <ht_clear+0x30>
  44:	ldr	r0, [sp, #4]
  48:	ldr	r0, [r0]
  4c:	bl	0 <free>
  50:	ldr	r0, [sp, #4]
  54:	movw	r1, #0
  58:	and	r1, r1, #255	; 0xff
  5c:	movw	r2, #16
  60:	bl	0 <memset>
  64:	mov	sp, fp
  68:	pop	{fp, pc}

0000006c <str_set_destroy>:
  6c:	push	{fp, lr}
  70:	mov	fp, sp
  74:	sub	sp, sp, #16
  78:	str	r0, [fp, #-4]
  7c:	str	r1, [sp, #8]
  80:	str	r2, [sp, #4]
  84:	ldr	r0, [sp, #8]
  88:	movw	r1, #0
  8c:	cmp	r0, r1
  90:	beq	a4 <str_set_destroy+0x38>
  94:	ldr	r0, [fp, #-4]
  98:	ldr	r1, [sp, #8]
  9c:	ldr	r2, [sp, #4]
  a0:	bl	b4 <ht_visit>
  a4:	ldr	r0, [fp, #-4]
  a8:	bl	20 <ht_clear>
  ac:	mov	sp, fp
  b0:	pop	{fp, pc}

000000b4 <ht_visit>:
  b4:	push	{fp, lr}
  b8:	mov	fp, sp
  bc:	sub	sp, sp, #32
  c0:	str	r0, [fp, #-4]
  c4:	str	r1, [fp, #-8]
  c8:	str	r2, [fp, #-12]
  cc:	ldr	r0, [fp, #-4]
  d0:	ldr	r0, [r0]
  d4:	str	r0, [sp, #12]
  d8:	movw	r0, #0
  dc:	str	r0, [sp, #16]
  e0:	ldr	r0, [sp, #16]
  e4:	ldr	r1, [fp, #-4]
  e8:	ldr	r1, [r1, #12]
  ec:	cmp	r0, r1
  f0:	bcs	15c <ht_visit+0xa8>
  f4:	ldr	r0, [sp, #12]
  f8:	ldr	r1, [sp, #16]
  fc:	add	r0, r0, r1, lsl #2
 100:	ldr	r0, [r0]
 104:	str	r0, [sp, #8]
 108:	ldr	r0, [sp, #8]
 10c:	movw	r1, #0
 110:	cmp	r0, r1
 114:	beq	148 <ht_visit+0x94>
 118:	ldr	r0, [sp, #8]
 11c:	movw	r1, #2
 120:	cmp	r0, r1
 124:	beq	148 <ht_visit+0x94>
 128:	ldr	r0, [fp, #-8]
 12c:	ldr	r1, [fp, #-12]
 130:	ldr	r2, [sp, #8]
 134:	str	r0, [sp, #4]
 138:	mov	r0, r1
 13c:	mov	r1, r2
 140:	ldr	r2, [sp, #4]
 144:	blx	r2
 148:	b	14c <ht_visit+0x98>
 14c:	ldr	r0, [sp, #16]
 150:	add	r0, r0, #1
 154:	str	r0, [sp, #16]
 158:	b	e0 <ht_visit+0x2c>
 15c:	mov	sp, fp
 160:	pop	{fp, pc}

00000164 <str_set_init>:
 164:	push	{fp, lr}
 168:	mov	fp, sp
 16c:	sub	sp, sp, #8
 170:	str	r0, [sp, #4]
 174:	str	r1, [sp]
 178:	ldr	r0, [sp, #4]
 17c:	ldr	r1, [sp]
 180:	bl	18c <ht_init>
 184:	mov	sp, fp
 188:	pop	{fp, pc}

0000018c <ht_init>:
 18c:	push	{fp, lr}
 190:	mov	fp, sp
 194:	sub	sp, sp, #24
 198:	str	r0, [fp, #-8]
 19c:	str	r1, [sp, #12]
 1a0:	movw	r0, #4
 1a4:	str	r0, [sp, #8]
 1a8:	ldr	r0, [sp, #12]
 1ac:	ldr	r1, [sp, #8]
 1b0:	mov	r2, #179	; 0xb3
 1b4:	mul	r1, r1, r2
 1b8:	mov	r2, r1
 1bc:	lsr	r1, r1, #8
 1c0:	cmp	r0, r1
 1c4:	str	r2, [sp, #4]
 1c8:	bls	1dc <ht_init+0x50>
 1cc:	ldr	r0, [sp, #8]
 1d0:	lsl	r0, r0, #1
 1d4:	str	r0, [sp, #8]
 1d8:	b	1a8 <ht_init+0x1c>
 1dc:	ldr	r0, [sp, #8]
 1e0:	movw	r1, #4
 1e4:	bl	0 <calloc>
 1e8:	ldr	r1, [fp, #-8]
 1ec:	str	r0, [r1]
 1f0:	ldr	r0, [fp, #-8]
 1f4:	ldr	r0, [r0]
 1f8:	movw	r1, #0
 1fc:	cmp	r0, r1
 200:	bne	210 <ht_init+0x84>
 204:	mvn	r0, #0
 208:	str	r0, [fp, #-4]
 20c:	b	234 <ht_init+0xa8>
 210:	ldr	r0, [fp, #-8]
 214:	movw	r1, #0
 218:	str	r1, [r0, #4]
 21c:	ldr	r0, [sp, #8]
 220:	ldr	r2, [fp, #-8]
 224:	str	r0, [r2, #12]
 228:	ldr	r0, [fp, #-8]
 22c:	str	r1, [r0, #8]
 230:	str	r1, [fp, #-4]
 234:	ldr	r0, [fp, #-4]
 238:	mov	sp, fp
 23c:	pop	{fp, pc}

00000240 <str_set_resize>:
 240:	push	{fp, lr}
 244:	mov	fp, sp
 248:	sub	sp, sp, #8
 24c:	str	r0, [sp, #4]
 250:	str	r1, [sp]
 254:	ldr	r0, [sp, #4]
 258:	ldr	r1, [sp]
 25c:	bl	268 <ht_resize>
 260:	mov	sp, fp
 264:	pop	{fp, pc}

00000268 <ht_resize>:
 268:	push	{fp, lr}
 26c:	mov	fp, sp
 270:	sub	sp, sp, #56	; 0x38
 274:	str	r0, [fp, #-8]
 278:	str	r1, [fp, #-12]
 27c:	ldr	r0, [fp, #-8]
 280:	ldr	r0, [r0]
 284:	str	r0, [sp, #20]
 288:	ldr	r0, [fp, #-12]
 28c:	ldr	r1, [fp, #-8]
 290:	ldr	r1, [r1, #8]
 294:	cmp	r0, r1
 298:	bcs	2a8 <ht_resize+0x40>
 29c:	ldr	r0, [fp, #-8]
 2a0:	ldr	r0, [r0, #8]
 2a4:	str	r0, [fp, #-12]
 2a8:	ldr	r1, [fp, #-12]
 2ac:	add	r0, sp, #24
 2b0:	bl	18c <ht_init>
 2b4:	cmp	r0, #0
 2b8:	beq	2c8 <ht_resize+0x60>
 2bc:	mvn	r0, #0
 2c0:	str	r0, [fp, #-4]
 2c4:	b	3a0 <ht_resize+0x138>
 2c8:	movw	r0, #0
 2cc:	str	r0, [fp, #-16]
 2d0:	ldr	r0, [fp, #-16]
 2d4:	ldr	r1, [fp, #-8]
 2d8:	ldr	r1, [r1, #12]
 2dc:	cmp	r0, r1
 2e0:	bcs	36c <ht_resize+0x104>
 2e4:	ldr	r0, [sp, #20]
 2e8:	ldr	r1, [fp, #-16]
 2ec:	add	r0, r0, r1, lsl #2
 2f0:	ldr	r0, [r0]
 2f4:	str	r0, [sp, #16]
 2f8:	ldr	r0, [sp, #16]
 2fc:	movw	r1, #0
 300:	cmp	r0, r1
 304:	beq	358 <ht_resize+0xf0>
 308:	ldr	r0, [sp, #16]
 30c:	movw	r1, #2
 310:	cmp	r0, r1
 314:	beq	358 <ht_resize+0xf0>
 318:	ldr	r0, [sp, #16]
 31c:	bl	7c8 <ht_key>
 320:	ldr	lr, [sp, #16]
 324:	str	r0, [sp, #12]
 328:	mov	r0, lr
 32c:	bl	7dc <ht_key_len>
 330:	ldr	r3, [sp, #16]
 334:	add	lr, sp, #24
 338:	str	r0, [sp, #8]
 33c:	mov	r0, lr
 340:	ldr	r1, [sp, #12]
 344:	ldr	r2, [sp, #8]
 348:	movw	lr, #3
 34c:	str	lr, [sp]
 350:	bl	3f4 <ht_insert>
 354:	str	r0, [sp, #4]
 358:	b	35c <ht_resize+0xf4>
 35c:	ldr	r0, [fp, #-16]
 360:	add	r0, r0, #1
 364:	str	r0, [fp, #-16]
 368:	b	2d0 <ht_resize+0x68>
 36c:	ldr	r0, [fp, #-8]
 370:	bl	20 <ht_clear>
 374:	ldr	r0, [fp, #-8]
 378:	ldr	lr, [sp, #24]
 37c:	str	lr, [r0]
 380:	ldr	lr, [sp, #28]
 384:	str	lr, [r0, #4]
 388:	ldr	lr, [sp, #32]
 38c:	str	lr, [r0, #8]
 390:	ldr	lr, [sp, #36]	; 0x24
 394:	str	lr, [r0, #12]
 398:	movw	r0, #0
 39c:	str	r0, [fp, #-4]
 3a0:	ldr	r0, [fp, #-4]
 3a4:	mov	sp, fp
 3a8:	pop	{fp, pc}

000003ac <str_set_insert>:
 3ac:	push	{fp, lr}
 3b0:	mov	fp, sp
 3b4:	sub	sp, sp, #24
 3b8:	ldr	ip, [fp, #8]
 3bc:	str	r0, [fp, #-4]
 3c0:	str	r1, [fp, #-8]
 3c4:	str	r2, [sp, #12]
 3c8:	str	r3, [sp, #8]
 3cc:	ldr	r0, [fp, #-4]
 3d0:	ldr	r1, [fp, #-8]
 3d4:	ldr	r2, [sp, #12]
 3d8:	ldr	r3, [sp, #8]
 3dc:	ldr	lr, [fp, #8]
 3e0:	str	lr, [sp]
 3e4:	str	ip, [sp, #4]
 3e8:	bl	3f4 <ht_insert>
 3ec:	mov	sp, fp
 3f0:	pop	{fp, pc}

000003f4 <ht_insert>:
 3f4:	push	{fp, lr}
 3f8:	mov	fp, sp
 3fc:	sub	sp, sp, #64	; 0x40
 400:	ldr	ip, [fp, #8]
 404:	str	r0, [fp, #-8]
 408:	str	r1, [fp, #-12]
 40c:	str	r2, [fp, #-16]
 410:	str	r3, [fp, #-20]	; 0xffffffec
 414:	movw	r0, #0
 418:	str	r0, [sp, #16]
 41c:	ldr	r1, [fp, #-20]	; 0xffffffec
 420:	cmp	r1, r0
 424:	str	ip, [sp, #12]
 428:	beq	430 <ht_insert+0x3c>
 42c:	b	450 <ht_insert+0x5c>
 430:	movw	r0, #0
 434:	movt	r0, #0
 438:	movw	r1, #0
 43c:	movt	r1, #0
 440:	movw	r2, #114	; 0x72
 444:	movw	r3, #0
 448:	movt	r3, #0
 44c:	bl	0 <__assert_fail>
 450:	ldr	r0, [fp, #-20]	; 0xffffffec
 454:	movw	r1, #2
 458:	cmp	r0, r1
 45c:	beq	464 <ht_insert+0x70>
 460:	b	484 <ht_insert+0x90>
 464:	movw	r0, #0
 468:	movt	r0, #0
 46c:	movw	r1, #0
 470:	movt	r1, #0
 474:	movw	r2, #115	; 0x73
 478:	movw	r3, #0
 47c:	movt	r3, #0
 480:	bl	0 <__assert_fail>
 484:	ldr	r0, [fp, #-20]	; 0xffffffec
 488:	movw	r1, #1
 48c:	cmp	r0, r1
 490:	beq	498 <ht_insert+0xa4>
 494:	b	4b8 <ht_insert+0xc4>
 498:	movw	r0, #0
 49c:	movt	r0, #0
 4a0:	movw	r1, #0
 4a4:	movt	r1, #0
 4a8:	movw	r2, #116	; 0x74
 4ac:	movw	r3, #0
 4b0:	movt	r3, #0
 4b4:	bl	0 <__assert_fail>
 4b8:	ldr	r0, [fp, #-8]
 4bc:	ldr	r1, [r0, #8]
 4c0:	ldr	r0, [r0, #12]
 4c4:	mov	r2, #179	; 0xb3
 4c8:	mul	r0, r0, r2
 4cc:	mov	r2, r0
 4d0:	lsr	r0, r0, #8
 4d4:	cmp	r1, r0
 4d8:	str	r2, [sp, #8]
 4dc:	bcc	52c <ht_insert+0x138>
 4e0:	ldr	r0, [fp, #-8]
 4e4:	ldr	r1, [r0, #8]
 4e8:	lsl	r1, r1, #1
 4ec:	bl	268 <ht_resize>
 4f0:	cmp	r0, #0
 4f4:	beq	528 <ht_insert+0x134>
 4f8:	movw	r0, #0
 4fc:	movt	r0, #0
 500:	ldr	r0, [r0]
 504:	movw	r1, #0
 508:	movt	r1, #0
 50c:	movw	r2, #0
 510:	movt	r2, #0
 514:	bl	0 <fprintf>
 518:	movw	r1, #1
 51c:	str	r0, [sp, #4]
 520:	mov	r0, r1
 524:	bl	0 <exit>
 528:	b	52c <ht_insert+0x138>
 52c:	ldr	r0, [fp, #-8]
 530:	ldr	r0, [r0]
 534:	str	r0, [fp, #-24]	; 0xffffffe8
 538:	ldr	r0, [fp, #-8]
 53c:	ldr	r0, [r0, #12]
 540:	sub	r0, r0, #1
 544:	str	r0, [fp, #-28]	; 0xffffffe4
 548:	ldr	r0, [fp, #-12]
 54c:	ldr	r1, [fp, #-16]
 550:	bl	b84 <ht_default_hash_function>
 554:	str	r0, [sp, #24]
 558:	movw	r0, #0
 55c:	str	r0, [sp, #32]
 560:	ldr	r0, [sp, #24]
 564:	ldr	r1, [sp, #32]
 568:	add	r0, r0, r1
 56c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 570:	and	r0, r0, r1
 574:	str	r0, [sp, #28]
 578:	ldr	r0, [fp, #8]
 57c:	cmp	r0, #2
 580:	beq	590 <ht_insert+0x19c>
 584:	ldr	r0, [fp, #8]
 588:	cmp	r0, #3
 58c:	bne	63c <ht_insert+0x248>
 590:	ldr	r0, [fp, #-8]
 594:	ldr	r1, [r0, #8]
 598:	add	r1, r1, #1
 59c:	str	r1, [r0, #8]
 5a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5a4:	ldr	r1, [sp, #28]
 5a8:	add	r0, r0, r1, lsl #2
 5ac:	ldr	r0, [r0]
 5b0:	movw	r1, #0
 5b4:	cmp	r0, r1
 5b8:	movw	r0, #0
 5bc:	str	r0, [sp]
 5c0:	beq	5e8 <ht_insert+0x1f4>
 5c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5c8:	ldr	r1, [sp, #28]
 5cc:	add	r0, r0, r1, lsl #2
 5d0:	ldr	r0, [r0]
 5d4:	movw	r1, #2
 5d8:	cmp	r0, r1
 5dc:	movw	r0, #0
 5e0:	movne	r0, #1
 5e4:	str	r0, [sp]
 5e8:	ldr	r0, [sp]
 5ec:	tst	r0, #1
 5f0:	beq	61c <ht_insert+0x228>
 5f4:	ldr	r0, [sp, #32]
 5f8:	add	r0, r0, #1
 5fc:	str	r0, [sp, #32]
 600:	ldr	r0, [sp, #24]
 604:	ldr	r1, [sp, #32]
 608:	add	r0, r0, r1
 60c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 610:	and	r0, r0, r1
 614:	str	r0, [sp, #28]
 618:	b	5a0 <ht_insert+0x1ac>
 61c:	ldr	r0, [fp, #-20]	; 0xffffffec
 620:	ldr	r1, [fp, #-24]	; 0xffffffe8
 624:	ldr	r2, [sp, #28]
 628:	add	r1, r1, r2, lsl #2
 62c:	str	r0, [r1]
 630:	movw	r0, #0
 634:	str	r0, [fp, #-4]
 638:	b	748 <ht_insert+0x354>
 63c:	b	640 <ht_insert+0x24c>
 640:	ldr	r0, [fp, #-24]	; 0xffffffe8
 644:	ldr	r1, [sp, #28]
 648:	add	r0, r0, r1, lsl #2
 64c:	ldr	r0, [r0]
 650:	str	r0, [sp, #20]
 654:	movw	r1, #0
 658:	cmp	r0, r1
 65c:	beq	704 <ht_insert+0x310>
 660:	ldr	r0, [sp, #20]
 664:	movw	r1, #2
 668:	cmp	r0, r1
 66c:	bne	694 <ht_insert+0x2a0>
 670:	ldr	r0, [sp, #16]
 674:	movw	r1, #0
 678:	cmp	r0, r1
 67c:	bne	690 <ht_insert+0x29c>
 680:	ldr	r0, [fp, #-24]	; 0xffffffe8
 684:	ldr	r1, [sp, #28]
 688:	add	r0, r0, r1, lsl #2
 68c:	str	r0, [sp, #16]
 690:	b	6dc <ht_insert+0x2e8>
 694:	ldr	r0, [fp, #-12]
 698:	ldr	r1, [fp, #-16]
 69c:	ldr	r2, [sp, #20]
 6a0:	bl	bcc <ht_match>
 6a4:	cmp	r0, #0
 6a8:	beq	6d8 <ht_insert+0x2e4>
 6ac:	ldr	r0, [fp, #8]
 6b0:	cmp	r0, #0
 6b4:	bne	6cc <ht_insert+0x2d8>
 6b8:	ldr	r0, [fp, #-20]	; 0xffffffec
 6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
 6c0:	ldr	r2, [sp, #28]
 6c4:	add	r1, r1, r2, lsl #2
 6c8:	str	r0, [r1]
 6cc:	ldr	r0, [sp, #20]
 6d0:	str	r0, [fp, #-4]
 6d4:	b	748 <ht_insert+0x354>
 6d8:	b	6dc <ht_insert+0x2e8>
 6dc:	ldr	r0, [sp, #32]
 6e0:	add	r0, r0, #1
 6e4:	str	r0, [sp, #32]
 6e8:	ldr	r0, [sp, #24]
 6ec:	ldr	r1, [sp, #32]
 6f0:	add	r0, r0, r1
 6f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
 6f8:	and	r0, r0, r1
 6fc:	str	r0, [sp, #28]
 700:	b	640 <ht_insert+0x24c>
 704:	ldr	r0, [sp, #16]
 708:	movw	r1, #0
 70c:	cmp	r0, r1
 710:	bne	724 <ht_insert+0x330>
 714:	ldr	r0, [fp, #-24]	; 0xffffffe8
 718:	ldr	r1, [sp, #28]
 71c:	add	r0, r0, r1, lsl #2
 720:	str	r0, [sp, #16]
 724:	ldr	r0, [fp, #-8]
 728:	ldr	r1, [r0, #8]
 72c:	add	r1, r1, #1
 730:	str	r1, [r0, #8]
 734:	ldr	r0, [fp, #-20]	; 0xffffffec
 738:	ldr	r1, [sp, #16]
 73c:	str	r0, [r1]
 740:	movw	r0, #0
 744:	str	r0, [fp, #-4]
 748:	ldr	r0, [fp, #-4]
 74c:	mov	sp, fp
 750:	pop	{fp, pc}

00000754 <str_set_insert_item>:
 754:	push	{fp, lr}
 758:	mov	fp, sp
 75c:	sub	sp, sp, #32
 760:	str	r0, [fp, #-4]
 764:	str	r1, [fp, #-8]
 768:	str	r2, [fp, #-12]
 76c:	ldr	r0, [fp, #-4]
 770:	ldr	r1, [fp, #-8]
 774:	str	r0, [sp, #16]
 778:	mov	r0, r1
 77c:	bl	7c8 <ht_key>
 780:	ldr	r1, [fp, #-8]
 784:	str	r0, [sp, #12]
 788:	mov	r0, r1
 78c:	bl	7dc <ht_key_len>
 790:	ldr	r3, [fp, #-8]
 794:	ldr	r1, [fp, #-12]
 798:	ldr	r2, [sp, #16]
 79c:	str	r0, [sp, #8]
 7a0:	mov	r0, r2
 7a4:	ldr	lr, [sp, #12]
 7a8:	str	r1, [sp, #4]
 7ac:	mov	r1, lr
 7b0:	ldr	r2, [sp, #8]
 7b4:	ldr	ip, [sp, #4]
 7b8:	str	ip, [sp]
 7bc:	bl	3f4 <ht_insert>
 7c0:	mov	sp, fp
 7c4:	pop	{fp, pc}

000007c8 <ht_key>:
 7c8:	sub	sp, sp, #4
 7cc:	str	r0, [sp]
 7d0:	ldr	r0, [sp]
 7d4:	add	sp, sp, #4
 7d8:	bx	lr

000007dc <ht_key_len>:
 7dc:	push	{fp, lr}
 7e0:	mov	fp, sp
 7e4:	sub	sp, sp, #8
 7e8:	str	r0, [sp, #4]
 7ec:	ldr	r0, [sp, #4]
 7f0:	bl	0 <strlen>
 7f4:	mov	sp, fp
 7f8:	pop	{fp, pc}

000007fc <str_set_find>:
 7fc:	push	{fp, lr}
 800:	mov	fp, sp
 804:	sub	sp, sp, #16
 808:	str	r0, [fp, #-4]
 80c:	str	r1, [sp, #8]
 810:	str	r2, [sp, #4]
 814:	ldr	r0, [fp, #-4]
 818:	ldr	r1, [sp, #8]
 81c:	ldr	r2, [sp, #4]
 820:	bl	82c <ht_find>
 824:	mov	sp, fp
 828:	pop	{fp, pc}

0000082c <ht_find>:
 82c:	push	{fp, lr}
 830:	mov	fp, sp
 834:	sub	sp, sp, #40	; 0x28
 838:	str	r0, [fp, #-8]
 83c:	str	r1, [fp, #-12]
 840:	str	r2, [fp, #-16]
 844:	ldr	r0, [fp, #-8]
 848:	ldr	r0, [r0]
 84c:	str	r0, [sp, #20]
 850:	ldr	r0, [sp, #20]
 854:	movw	r1, #0
 858:	cmp	r0, r1
 85c:	bne	86c <ht_find+0x40>
 860:	movw	r0, #0
 864:	str	r0, [fp, #-4]
 868:	b	930 <ht_find+0x104>
 86c:	ldr	r0, [fp, #-8]
 870:	ldr	r0, [r0, #12]
 874:	sub	r0, r0, #1
 878:	str	r0, [sp, #16]
 87c:	ldr	r0, [fp, #-12]
 880:	ldr	r1, [fp, #-16]
 884:	bl	b84 <ht_default_hash_function>
 888:	str	r0, [sp, #4]
 88c:	movw	r0, #0
 890:	str	r0, [sp, #12]
 894:	ldr	r0, [sp, #4]
 898:	ldr	r1, [sp, #12]
 89c:	add	r0, r0, r1
 8a0:	ldr	r1, [sp, #16]
 8a4:	and	r0, r0, r1
 8a8:	str	r0, [sp, #8]
 8ac:	ldr	r0, [sp, #20]
 8b0:	ldr	r1, [sp, #8]
 8b4:	add	r0, r0, r1, lsl #2
 8b8:	ldr	r0, [r0]
 8bc:	str	r0, [sp]
 8c0:	movw	r1, #0
 8c4:	cmp	r0, r1
 8c8:	beq	928 <ht_find+0xfc>
 8cc:	ldr	r0, [sp]
 8d0:	movw	r1, #2
 8d4:	cmp	r0, r1
 8d8:	beq	900 <ht_find+0xd4>
 8dc:	ldr	r0, [fp, #-12]
 8e0:	ldr	r1, [fp, #-16]
 8e4:	ldr	r2, [sp]
 8e8:	bl	bcc <ht_match>
 8ec:	cmp	r0, #0
 8f0:	beq	900 <ht_find+0xd4>
 8f4:	ldr	r0, [sp]
 8f8:	str	r0, [fp, #-4]
 8fc:	b	930 <ht_find+0x104>
 900:	ldr	r0, [sp, #12]
 904:	add	r0, r0, #1
 908:	str	r0, [sp, #12]
 90c:	ldr	r0, [sp, #4]
 910:	ldr	r1, [sp, #12]
 914:	add	r0, r0, r1
 918:	ldr	r1, [sp, #16]
 91c:	and	r0, r0, r1
 920:	str	r0, [sp, #8]
 924:	b	8ac <ht_find+0x80>
 928:	movw	r0, #0
 92c:	str	r0, [fp, #-4]
 930:	ldr	r0, [fp, #-4]
 934:	mov	sp, fp
 938:	pop	{fp, pc}

0000093c <str_set_find_item>:
 93c:	push	{fp, lr}
 940:	mov	fp, sp
 944:	sub	sp, sp, #24
 948:	str	r0, [fp, #-4]
 94c:	str	r1, [fp, #-8]
 950:	ldr	r0, [fp, #-4]
 954:	ldr	r1, [fp, #-8]
 958:	str	r0, [sp, #12]
 95c:	mov	r0, r1
 960:	bl	7c8 <ht_key>
 964:	ldr	r1, [fp, #-8]
 968:	str	r0, [sp, #8]
 96c:	mov	r0, r1
 970:	bl	7dc <ht_key_len>
 974:	ldr	r1, [sp, #12]
 978:	str	r0, [sp, #4]
 97c:	mov	r0, r1
 980:	ldr	r1, [sp, #8]
 984:	ldr	r2, [sp, #4]
 988:	bl	82c <ht_find>
 98c:	mov	sp, fp
 990:	pop	{fp, pc}

00000994 <str_set_remove>:
 994:	push	{fp, lr}
 998:	mov	fp, sp
 99c:	sub	sp, sp, #16
 9a0:	str	r0, [fp, #-4]
 9a4:	str	r1, [sp, #8]
 9a8:	str	r2, [sp, #4]
 9ac:	ldr	r0, [fp, #-4]
 9b0:	ldr	r1, [sp, #8]
 9b4:	ldr	r2, [sp, #4]
 9b8:	bl	9c4 <ht_remove>
 9bc:	mov	sp, fp
 9c0:	pop	{fp, pc}

000009c4 <ht_remove>:
 9c4:	push	{fp, lr}
 9c8:	mov	fp, sp
 9cc:	sub	sp, sp, #40	; 0x28
 9d0:	str	r0, [fp, #-8]
 9d4:	str	r1, [fp, #-12]
 9d8:	str	r2, [fp, #-16]
 9dc:	ldr	r0, [fp, #-8]
 9e0:	ldr	r0, [r0]
 9e4:	str	r0, [sp, #20]
 9e8:	ldr	r0, [sp, #20]
 9ec:	movw	r1, #0
 9f0:	cmp	r0, r1
 9f4:	bne	a04 <ht_remove+0x40>
 9f8:	movw	r0, #0
 9fc:	str	r0, [fp, #-4]
 a00:	b	af0 <ht_remove+0x12c>
 a04:	ldr	r0, [fp, #-8]
 a08:	ldr	r0, [r0, #12]
 a0c:	sub	r0, r0, #1
 a10:	str	r0, [sp, #16]
 a14:	ldr	r0, [fp, #-12]
 a18:	ldr	r1, [fp, #-16]
 a1c:	bl	b84 <ht_default_hash_function>
 a20:	str	r0, [sp, #4]
 a24:	movw	r0, #0
 a28:	str	r0, [sp, #12]
 a2c:	ldr	r0, [sp, #4]
 a30:	ldr	r1, [sp, #12]
 a34:	add	r0, r0, r1
 a38:	ldr	r1, [sp, #16]
 a3c:	and	r0, r0, r1
 a40:	str	r0, [sp, #8]
 a44:	ldr	r0, [sp, #20]
 a48:	ldr	r1, [sp, #8]
 a4c:	add	r0, r0, r1, lsl #2
 a50:	ldr	r0, [r0]
 a54:	str	r0, [sp]
 a58:	movw	r1, #0
 a5c:	cmp	r0, r1
 a60:	beq	ae8 <ht_remove+0x124>
 a64:	ldr	r0, [sp]
 a68:	movw	r1, #2
 a6c:	cmp	r0, r1
 a70:	beq	ac0 <ht_remove+0xfc>
 a74:	ldr	r0, [fp, #-12]
 a78:	ldr	r1, [fp, #-16]
 a7c:	ldr	r2, [sp]
 a80:	bl	bcc <ht_match>
 a84:	cmp	r0, #0
 a88:	beq	ac0 <ht_remove+0xfc>
 a8c:	ldr	r0, [sp, #20]
 a90:	ldr	r1, [sp, #8]
 a94:	add	r0, r0, r1, lsl #2
 a98:	movw	r1, #2
 a9c:	str	r1, [r0]
 aa0:	ldr	r0, [fp, #-8]
 aa4:	ldr	r1, [r0, #8]
 aa8:	mvn	r2, #0
 aac:	add	r1, r1, r2
 ab0:	str	r1, [r0, #8]
 ab4:	ldr	r0, [sp]
 ab8:	str	r0, [fp, #-4]
 abc:	b	af0 <ht_remove+0x12c>
 ac0:	ldr	r0, [sp, #12]
 ac4:	add	r0, r0, #1
 ac8:	str	r0, [sp, #12]
 acc:	ldr	r0, [sp, #4]
 ad0:	ldr	r1, [sp, #12]
 ad4:	add	r0, r0, r1
 ad8:	ldr	r1, [sp, #16]
 adc:	and	r0, r0, r1
 ae0:	str	r0, [sp, #8]
 ae4:	b	a44 <ht_remove+0x80>
 ae8:	movw	r0, #0
 aec:	str	r0, [fp, #-4]
 af0:	ldr	r0, [fp, #-4]
 af4:	mov	sp, fp
 af8:	pop	{fp, pc}

00000afc <str_set_remove_item>:
 afc:	push	{fp, lr}
 b00:	mov	fp, sp
 b04:	sub	sp, sp, #24
 b08:	str	r0, [fp, #-4]
 b0c:	str	r1, [fp, #-8]
 b10:	ldr	r0, [fp, #-4]
 b14:	ldr	r1, [fp, #-8]
 b18:	str	r0, [sp, #12]
 b1c:	mov	r0, r1
 b20:	bl	7c8 <ht_key>
 b24:	ldr	r1, [fp, #-8]
 b28:	str	r0, [sp, #8]
 b2c:	mov	r0, r1
 b30:	bl	7dc <ht_key_len>
 b34:	ldr	r1, [sp, #12]
 b38:	str	r0, [sp, #4]
 b3c:	mov	r0, r1
 b40:	ldr	r1, [sp, #8]
 b44:	ldr	r2, [sp, #4]
 b48:	bl	9c4 <ht_remove>
 b4c:	mov	sp, fp
 b50:	pop	{fp, pc}

00000b54 <str_set_visit>:
 b54:	push	{fp, lr}
 b58:	mov	fp, sp
 b5c:	sub	sp, sp, #16
 b60:	str	r0, [fp, #-4]
 b64:	str	r1, [sp, #8]
 b68:	str	r2, [sp, #4]
 b6c:	ldr	r0, [fp, #-4]
 b70:	ldr	r1, [sp, #8]
 b74:	ldr	r2, [sp, #4]
 b78:	bl	b4 <ht_visit>
 b7c:	mov	sp, fp
 b80:	pop	{fp, pc}

00000b84 <ht_default_hash_function>:
 b84:	push	{fp, lr}
 b88:	mov	fp, sp
 b8c:	sub	sp, sp, #24
 b90:	str	r0, [fp, #-4]
 b94:	str	r1, [fp, #-8]
 b98:	ldr	r0, [fp, #-4]
 b9c:	ldr	r2, [fp, #-8]
 ba0:	mov	r1, sp
 ba4:	add	r3, sp, #8
 ba8:	str	r3, [r1, #4]
 bac:	movw	r3, #15186	; 0x3b52
 bb0:	movt	r3, #12137	; 0x2f69
 bb4:	str	r3, [r1]
 bb8:	mov	r3, #0
 bbc:	bl	0 <cmetrohash64_1>
 bc0:	ldr	r0, [sp, #8]
 bc4:	mov	sp, fp
 bc8:	pop	{fp, pc}

00000bcc <ht_match>:
 bcc:	push	{fp, lr}
 bd0:	mov	fp, sp
 bd4:	sub	sp, sp, #16
 bd8:	str	r0, [fp, #-4]
 bdc:	str	r1, [sp, #8]
 be0:	str	r2, [sp, #4]
 be4:	ldr	r0, [fp, #-4]
 be8:	ldr	r1, [sp, #4]
 bec:	ldr	r2, [sp, #8]
 bf0:	bl	0 <strncmp>
 bf4:	cmp	r0, #0
 bf8:	movw	r0, #0
 bfc:	moveq	r0, #1
 c00:	and	r0, r0, #1
 c04:	mov	sp, fp
 c08:	pop	{fp, pc}
