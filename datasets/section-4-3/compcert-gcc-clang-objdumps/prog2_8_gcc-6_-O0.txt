
../compcert-repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010aa8 <.init>:
   10aa8:	push	{r3, lr}
   10aac:	bl	10b88 <_start@@Base+0x3c>
   10ab0:	pop	{r3, pc}

Disassembly of section .plt:

00010ab4 <calloc@plt-0x14>:
   10ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab8:	ldr	lr, [pc, #4]	; 10ac4 <calloc@plt-0x4>
   10abc:	add	lr, pc, lr
   10ac0:	ldr	pc, [lr, #8]!
   10ac4:	andeq	r3, r1, ip, lsr r5

00010ac8 <calloc@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #77824	; 0x13000
   10ad0:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad4 <printf@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #77824	; 0x13000
   10adc:	ldr	pc, [ip, #1332]!	; 0x534

00010ae0 <free@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #77824	; 0x13000
   10ae8:	ldr	pc, [ip, #1324]!	; 0x52c

00010aec <realloc@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #77824	; 0x13000
   10af4:	ldr	pc, [ip, #1316]!	; 0x524

00010af8 <puts@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #77824	; 0x13000
   10b00:	ldr	pc, [ip, #1308]!	; 0x51c

00010b04 <malloc@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #77824	; 0x13000
   10b0c:	ldr	pc, [ip, #1300]!	; 0x514

00010b10 <__libc_start_main@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #77824	; 0x13000
   10b18:	ldr	pc, [ip, #1292]!	; 0x50c

00010b1c <__gmon_start__@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #77824	; 0x13000
   10b24:	ldr	pc, [ip, #1284]!	; 0x504

00010b28 <setvbuf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #77824	; 0x13000
   10b30:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b34 <putchar@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #77824	; 0x13000
   10b3c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #77824	; 0x13000
   10b48:	ldr	pc, [ip, #1260]!	; 0x4ec

Disassembly of section .text:

00010b4c <_start@@Base>:
   10b4c:	mov	fp, #0
   10b50:	mov	lr, #0
   10b54:	pop	{r1}		; (ldr r1, [sp], #4)
   10b58:	mov	r2, sp
   10b5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b60:	push	{r0}		; (str r0, [sp, #-4]!)
   10b64:	ldr	ip, [pc, #16]	; 10b7c <_start@@Base+0x30>
   10b68:	push	{ip}		; (str ip, [sp, #-4]!)
   10b6c:	ldr	r0, [pc, #12]	; 10b80 <_start@@Base+0x34>
   10b70:	ldr	r3, [pc, #12]	; 10b84 <_start@@Base+0x38>
   10b74:	bl	10b10 <__libc_start_main@plt>
   10b78:	bl	10b40 <abort@plt>
   10b7c:	andeq	r2, r1, r0, lsl #30
   10b80:	andeq	r1, r1, r0, asr #29
   10b84:	andeq	r2, r1, r0, lsr #29
   10b88:	ldr	r3, [pc, #20]	; 10ba4 <_start@@Base+0x58>
   10b8c:	ldr	r2, [pc, #20]	; 10ba8 <_start@@Base+0x5c>
   10b90:	add	r3, pc, r3
   10b94:	ldr	r2, [r3, r2]
   10b98:	cmp	r2, #0
   10b9c:	bxeq	lr
   10ba0:	b	10b1c <__gmon_start__@plt>
   10ba4:	andeq	r3, r1, r8, ror #8
   10ba8:	andeq	r0, r0, r8, lsr r0
   10bac:	ldr	r3, [pc, #28]	; 10bd0 <_start@@Base+0x84>
   10bb0:	ldr	r0, [pc, #28]	; 10bd4 <_start@@Base+0x88>
   10bb4:	sub	r3, r3, r0
   10bb8:	cmp	r3, #6
   10bbc:	bxls	lr
   10bc0:	ldr	r3, [pc, #16]	; 10bd8 <_start@@Base+0x8c>
   10bc4:	cmp	r3, #0
   10bc8:	bxeq	lr
   10bcc:	bx	r3
   10bd0:	andeq	r4, r2, r7, asr #32
   10bd4:	andeq	r4, r2, r4, asr #32
   10bd8:	andeq	r0, r0, r0
   10bdc:	ldr	r1, [pc, #36]	; 10c08 <_start@@Base+0xbc>
   10be0:	ldr	r0, [pc, #36]	; 10c0c <_start@@Base+0xc0>
   10be4:	sub	r1, r1, r0
   10be8:	asr	r1, r1, #2
   10bec:	add	r1, r1, r1, lsr #31
   10bf0:	asrs	r1, r1, #1
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <_start@@Base+0xc4>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	andeq	r4, r2, r4, asr #32
   10c0c:	andeq	r4, r2, r4, asr #32
   10c10:	andeq	r0, r0, r0
   10c14:	push	{r4, lr}
   10c18:	ldr	r4, [pc, #24]	; 10c38 <_start@@Base+0xec>
   10c1c:	ldrb	r3, [r4]
   10c20:	cmp	r3, #0
   10c24:	popne	{r4, pc}
   10c28:	bl	10bac <_start@@Base+0x60>
   10c2c:	mov	r3, #1
   10c30:	strb	r3, [r4]
   10c34:	pop	{r4, pc}
   10c38:	andeq	r4, r2, r0, asr r0
   10c3c:	ldr	r0, [pc, #40]	; 10c6c <_start@@Base+0x120>
   10c40:	ldr	r3, [r0]
   10c44:	cmp	r3, #0
   10c48:	bne	10c50 <_start@@Base+0x104>
   10c4c:	b	10bdc <_start@@Base+0x90>
   10c50:	ldr	r3, [pc, #24]	; 10c70 <_start@@Base+0x124>
   10c54:	cmp	r3, #0
   10c58:	beq	10c4c <_start@@Base+0x100>
   10c5c:	push	{r4, lr}
   10c60:	blx	r3
   10c64:	pop	{r4, lr}
   10c68:	b	10bdc <_start@@Base+0x90>
   10c6c:	andeq	r3, r2, r4, lsl pc
   10c70:	andeq	r0, r0, r0

00010c74 <_g@@Base>:
   10c74:	push	{r1, r2, r3}
   10c78:	push	{fp, lr}
   10c7c:	add	fp, sp, #4
   10c80:	sub	sp, sp, #36	; 0x24
   10c84:	str	r0, [fp, #-36]	; 0xffffffdc
   10c88:	mov	r0, #8
   10c8c:	bl	10b04 <malloc@plt>
   10c90:	mov	r3, r0
   10c94:	str	r3, [fp, #-16]
   10c98:	add	r3, fp, #8
   10c9c:	str	r3, [fp, #-32]	; 0xffffffe0
   10ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10ca4:	mov	r1, #8
   10ca8:	mov	r0, r3
   10cac:	bl	10ac8 <calloc@plt>
   10cb0:	mov	r3, r0
   10cb4:	mov	r2, r3
   10cb8:	ldr	r3, [fp, #-16]
   10cbc:	str	r2, [r3, #4]
   10cc0:	mov	r3, #0
   10cc4:	str	r3, [fp, #-12]
   10cc8:	b	10d7c <_g@@Base+0x108>
   10ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10cd0:	add	r2, r3, #4
   10cd4:	str	r2, [fp, #-32]	; 0xffffffe0
   10cd8:	ldr	r3, [r3]
   10cdc:	str	r3, [fp, #-20]	; 0xffffffec
   10ce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10ce4:	add	r2, r3, #4
   10ce8:	str	r2, [fp, #-32]	; 0xffffffe0
   10cec:	ldr	r3, [r3]
   10cf0:	str	r3, [fp, #-24]	; 0xffffffe8
   10cf4:	mov	r1, #8
   10cf8:	mov	r0, #1
   10cfc:	bl	10ac8 <calloc@plt>
   10d00:	mov	r3, r0
   10d04:	str	r3, [fp, #-28]	; 0xffffffe4
   10d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10d10:	str	r2, [r3]
   10d14:	ldr	r3, [fp, #-16]
   10d18:	ldr	r2, [r3, #4]
   10d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d20:	lsl	r3, r3, #3
   10d24:	add	r3, r2, r3
   10d28:	ldr	r2, [r3, #4]
   10d2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d30:	str	r2, [r3, #4]
   10d34:	ldr	r3, [fp, #-16]
   10d38:	ldr	r2, [r3, #4]
   10d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d40:	lsl	r3, r3, #3
   10d44:	add	r3, r2, r3
   10d48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10d4c:	str	r2, [r3, #4]
   10d50:	ldr	r3, [fp, #-16]
   10d54:	ldr	r2, [r3, #4]
   10d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d5c:	lsl	r3, r3, #3
   10d60:	add	r3, r2, r3
   10d64:	ldr	r2, [r3]
   10d68:	add	r2, r2, #1
   10d6c:	str	r2, [r3]
   10d70:	ldr	r3, [fp, #-12]
   10d74:	add	r3, r3, #2
   10d78:	str	r3, [fp, #-12]
   10d7c:	ldr	r2, [fp, #-12]
   10d80:	ldr	r3, [fp, #4]
   10d84:	cmp	r2, r3
   10d88:	blt	10ccc <_g@@Base+0x58>
   10d8c:	ldr	r3, [fp, #-16]
   10d90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d94:	str	r2, [r3]
   10d98:	ldr	r3, [fp, #-16]
   10d9c:	mov	r0, r3
   10da0:	sub	sp, fp, #4
   10da4:	pop	{fp, lr}
   10da8:	add	sp, sp, #12
   10dac:	bx	lr

00010db0 <_f@@Base>:
   10db0:	push	{fp, lr}
   10db4:	add	fp, sp, #4
   10db8:	sub	sp, sp, #16
   10dbc:	str	r0, [fp, #-16]
   10dc0:	str	r1, [fp, #-20]	; 0xffffffec
   10dc4:	ldr	r3, [fp, #-16]
   10dc8:	cmp	r3, #0
   10dcc:	bne	10dd8 <_f@@Base+0x28>
   10dd0:	mov	r3, #0
   10dd4:	b	10e2c <_f@@Base+0x7c>
   10dd8:	mov	r3, #0
   10ddc:	str	r3, [fp, #-8]
   10de0:	b	10e14 <_f@@Base+0x64>
   10de4:	ldr	r1, [fp, #-8]
   10de8:	ldr	r0, [fp, #-16]
   10dec:	bl	12a14 <vetor_elemento@@Base>
   10df0:	mov	r2, r0
   10df4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10df8:	cmp	r2, r3
   10dfc:	bne	10e08 <_f@@Base+0x58>
   10e00:	mov	r3, #1
   10e04:	b	10e2c <_f@@Base+0x7c>
   10e08:	ldr	r3, [fp, #-8]
   10e0c:	add	r3, r3, #1
   10e10:	str	r3, [fp, #-8]
   10e14:	ldr	r3, [fp, #-16]
   10e18:	ldr	r2, [r3]
   10e1c:	ldr	r3, [fp, #-8]
   10e20:	cmp	r2, r3
   10e24:	bgt	10de4 <_f@@Base+0x34>
   10e28:	mov	r3, #0
   10e2c:	mov	r0, r3
   10e30:	sub	sp, fp, #4
   10e34:	pop	{fp, pc}

00010e38 <teste_grafo_novo@@Base>:
   10e38:	push	{fp, lr}
   10e3c:	add	fp, sp, #4
   10e40:	sub	sp, sp, #8
   10e44:	mov	r3, #0
   10e48:	str	r3, [fp, #-8]
   10e4c:	ldr	r0, [pc, #304]	; 10f84 <teste_grafo_novo@@Base+0x14c>
   10e50:	bl	10ad4 <printf@plt>
   10e54:	mov	r0, #10
   10e58:	bl	12044 <grafo_novo@@Base>
   10e5c:	str	r0, [fp, #-12]
   10e60:	ldr	r3, [fp, #-12]
   10e64:	cmp	r3, #0
   10e68:	bne	10ea8 <teste_grafo_novo@@Base+0x70>
   10e6c:	ldr	r0, [pc, #276]	; 10f88 <teste_grafo_novo@@Base+0x150>
   10e70:	bl	10ad4 <printf@plt>
   10e74:	ldr	r3, [fp, #-8]
   10e78:	add	r3, r3, #1
   10e7c:	str	r3, [fp, #-8]
   10e80:	ldr	r3, [fp, #-8]
   10e84:	cmp	r3, #0
   10e88:	bne	10e98 <teste_grafo_novo@@Base+0x60>
   10e8c:	ldr	r0, [pc, #248]	; 10f8c <teste_grafo_novo@@Base+0x154>
   10e90:	bl	10af8 <puts@plt>
   10e94:	b	10ea0 <teste_grafo_novo@@Base+0x68>
   10e98:	mov	r0, #10
   10e9c:	bl	10b34 <putchar@plt>
   10ea0:	ldr	r3, [fp, #-8]
   10ea4:	b	10f78 <teste_grafo_novo@@Base+0x140>
   10ea8:	ldr	r3, [fp, #-12]
   10eac:	ldr	r3, [r3]
   10eb0:	cmp	r3, #10
   10eb4:	beq	10ecc <teste_grafo_novo@@Base+0x94>
   10eb8:	ldr	r0, [pc, #208]	; 10f90 <teste_grafo_novo@@Base+0x158>
   10ebc:	bl	10ad4 <printf@plt>
   10ec0:	ldr	r3, [fp, #-8]
   10ec4:	add	r3, r3, #1
   10ec8:	str	r3, [fp, #-8]
   10ecc:	ldr	r0, [fp, #-12]
   10ed0:	bl	12114 <grafo_apaga@@Base>
   10ed4:	mov	r0, #1
   10ed8:	bl	12044 <grafo_novo@@Base>
   10edc:	str	r0, [fp, #-12]
   10ee0:	ldr	r3, [fp, #-12]
   10ee4:	cmp	r3, #0
   10ee8:	bne	10f28 <teste_grafo_novo@@Base+0xf0>
   10eec:	ldr	r0, [pc, #148]	; 10f88 <teste_grafo_novo@@Base+0x150>
   10ef0:	bl	10ad4 <printf@plt>
   10ef4:	ldr	r3, [fp, #-8]
   10ef8:	add	r3, r3, #1
   10efc:	str	r3, [fp, #-8]
   10f00:	ldr	r3, [fp, #-8]
   10f04:	cmp	r3, #0
   10f08:	bne	10f18 <teste_grafo_novo@@Base+0xe0>
   10f0c:	ldr	r0, [pc, #120]	; 10f8c <teste_grafo_novo@@Base+0x154>
   10f10:	bl	10af8 <puts@plt>
   10f14:	b	10f20 <teste_grafo_novo@@Base+0xe8>
   10f18:	mov	r0, #10
   10f1c:	bl	10b34 <putchar@plt>
   10f20:	ldr	r3, [fp, #-8]
   10f24:	b	10f78 <teste_grafo_novo@@Base+0x140>
   10f28:	ldr	r3, [fp, #-12]
   10f2c:	ldr	r3, [r3]
   10f30:	cmp	r3, #1
   10f34:	beq	10f4c <teste_grafo_novo@@Base+0x114>
   10f38:	ldr	r0, [pc, #84]	; 10f94 <teste_grafo_novo@@Base+0x15c>
   10f3c:	bl	10ad4 <printf@plt>
   10f40:	ldr	r3, [fp, #-8]
   10f44:	add	r3, r3, #1
   10f48:	str	r3, [fp, #-8]
   10f4c:	ldr	r0, [fp, #-12]
   10f50:	bl	12114 <grafo_apaga@@Base>
   10f54:	ldr	r3, [fp, #-8]
   10f58:	cmp	r3, #0
   10f5c:	bne	10f6c <teste_grafo_novo@@Base+0x134>
   10f60:	ldr	r0, [pc, #36]	; 10f8c <teste_grafo_novo@@Base+0x154>
   10f64:	bl	10af8 <puts@plt>
   10f68:	b	10f74 <teste_grafo_novo@@Base+0x13c>
   10f6c:	mov	r0, #10
   10f70:	bl	10b34 <putchar@plt>
   10f74:	ldr	r3, [fp, #-8]
   10f78:	mov	r0, r3
   10f7c:	sub	sp, fp, #4
   10f80:	pop	{fp, pc}
   10f84:	andeq	r2, r1, r0, lsl pc
   10f88:	andeq	r2, r1, r0, lsr #30
   10f8c:	andeq	r2, r1, r8, lsr pc
   10f90:	andeq	r2, r1, ip, lsr pc
   10f94:	andeq	r2, r1, r0, ror #30

00010f98 <teste_grafo_aresta@@Base>:
   10f98:	push	{fp, lr}
   10f9c:	add	fp, sp, #4
   10fa0:	sub	sp, sp, #88	; 0x58
   10fa4:	mov	r3, #0
   10fa8:	str	r3, [fp, #-8]
   10fac:	mov	r3, #1
   10fb0:	str	r3, [sp, #76]	; 0x4c
   10fb4:	mov	r3, #0
   10fb8:	str	r3, [sp, #72]	; 0x48
   10fbc:	mov	r3, #3
   10fc0:	str	r3, [sp, #68]	; 0x44
   10fc4:	mov	r3, #6
   10fc8:	str	r3, [sp, #64]	; 0x40
   10fcc:	mov	r3, #6
   10fd0:	str	r3, [sp, #60]	; 0x3c
   10fd4:	mov	r3, #7
   10fd8:	str	r3, [sp, #56]	; 0x38
   10fdc:	mov	r3, #1
   10fe0:	str	r3, [sp, #52]	; 0x34
   10fe4:	mov	r3, #1
   10fe8:	str	r3, [sp, #48]	; 0x30
   10fec:	mov	r3, #6
   10ff0:	str	r3, [sp, #44]	; 0x2c
   10ff4:	mov	r3, #4
   10ff8:	str	r3, [sp, #40]	; 0x28
   10ffc:	mov	r3, #0
   11000:	str	r3, [sp, #36]	; 0x24
   11004:	mov	r3, #4
   11008:	str	r3, [sp, #32]
   1100c:	mov	r3, #4
   11010:	str	r3, [sp, #28]
   11014:	mov	r3, #5
   11018:	str	r3, [sp, #24]
   1101c:	mov	r3, #5
   11020:	str	r3, [sp, #20]
   11024:	mov	r3, #7
   11028:	str	r3, [sp, #16]
   1102c:	mov	r3, #2
   11030:	str	r3, [sp, #12]
   11034:	mov	r3, #0
   11038:	str	r3, [sp, #8]
   1103c:	mov	r3, #2
   11040:	str	r3, [sp, #4]
   11044:	mov	r3, #7
   11048:	str	r3, [sp]
   1104c:	mov	r3, #2
   11050:	mov	r2, #3
   11054:	mov	r1, #22
   11058:	mov	r0, #8
   1105c:	bl	10c74 <_g@@Base>
   11060:	str	r0, [fp, #-12]
   11064:	ldr	r0, [pc, #248]	; 11164 <teste_grafo_aresta@@Base+0x1cc>
   11068:	bl	10ad4 <printf@plt>
   1106c:	mov	r2, #4
   11070:	mov	r1, #5
   11074:	ldr	r0, [fp, #-12]
   11078:	bl	121d0 <grafo_aresta@@Base>
   1107c:	mov	r3, r0
   11080:	cmp	r3, #1
   11084:	beq	1109c <teste_grafo_aresta@@Base+0x104>
   11088:	ldr	r0, [pc, #216]	; 11168 <teste_grafo_aresta@@Base+0x1d0>
   1108c:	bl	10ad4 <printf@plt>
   11090:	ldr	r3, [fp, #-8]
   11094:	add	r3, r3, #1
   11098:	str	r3, [fp, #-8]
   1109c:	mov	r2, #6
   110a0:	mov	r1, #7
   110a4:	ldr	r0, [fp, #-12]
   110a8:	bl	121d0 <grafo_aresta@@Base>
   110ac:	mov	r3, r0
   110b0:	cmp	r3, #1
   110b4:	beq	110cc <teste_grafo_aresta@@Base+0x134>
   110b8:	ldr	r0, [pc, #168]	; 11168 <teste_grafo_aresta@@Base+0x1d0>
   110bc:	bl	10ad4 <printf@plt>
   110c0:	ldr	r3, [fp, #-8]
   110c4:	add	r3, r3, #1
   110c8:	str	r3, [fp, #-8]
   110cc:	mov	r2, #1
   110d0:	mov	r1, #7
   110d4:	ldr	r0, [fp, #-12]
   110d8:	bl	121d0 <grafo_aresta@@Base>
   110dc:	mov	r3, r0
   110e0:	cmp	r3, #0
   110e4:	beq	110fc <teste_grafo_aresta@@Base+0x164>
   110e8:	ldr	r0, [pc, #124]	; 1116c <teste_grafo_aresta@@Base+0x1d4>
   110ec:	bl	10ad4 <printf@plt>
   110f0:	ldr	r3, [fp, #-8]
   110f4:	add	r3, r3, #1
   110f8:	str	r3, [fp, #-8]
   110fc:	mov	r2, #7
   11100:	mov	r1, #2
   11104:	mov	r0, #0
   11108:	bl	121d0 <grafo_aresta@@Base>
   1110c:	mov	r3, r0
   11110:	cmn	r3, #1
   11114:	beq	1112c <teste_grafo_aresta@@Base+0x194>
   11118:	ldr	r0, [pc, #80]	; 11170 <teste_grafo_aresta@@Base+0x1d8>
   1111c:	bl	10ad4 <printf@plt>
   11120:	ldr	r3, [fp, #-8]
   11124:	add	r3, r3, #1
   11128:	str	r3, [fp, #-8]
   1112c:	ldr	r0, [fp, #-12]
   11130:	bl	12114 <grafo_apaga@@Base>
   11134:	ldr	r3, [fp, #-8]
   11138:	cmp	r3, #0
   1113c:	bne	1114c <teste_grafo_aresta@@Base+0x1b4>
   11140:	ldr	r0, [pc, #44]	; 11174 <teste_grafo_aresta@@Base+0x1dc>
   11144:	bl	10af8 <puts@plt>
   11148:	b	11154 <teste_grafo_aresta@@Base+0x1bc>
   1114c:	mov	r0, #10
   11150:	bl	10b34 <putchar@plt>
   11154:	ldr	r3, [fp, #-8]
   11158:	mov	r0, r3
   1115c:	sub	sp, fp, #4
   11160:	pop	{fp, pc}
   11164:	andeq	r2, r1, r4, lsl #31
   11168:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1116c:	ldrdeq	r2, [r1], -r0
   11170:	andeq	r3, r1, ip
   11174:	andeq	r2, r1, r8, lsr pc

00011178 <teste_grafo_adiciona@@Base>:
   11178:	push	{fp, lr}
   1117c:	add	fp, sp, #4
   11180:	sub	sp, sp, #16
   11184:	mov	r3, #0
   11188:	str	r3, [fp, #-8]
   1118c:	mov	r3, #2
   11190:	str	r3, [sp, #4]
   11194:	mov	r3, #7
   11198:	str	r3, [sp]
   1119c:	mov	r3, #2
   111a0:	mov	r2, #3
   111a4:	mov	r1, #4
   111a8:	mov	r0, #9
   111ac:	bl	10c74 <_g@@Base>
   111b0:	str	r0, [fp, #-12]
   111b4:	ldr	r0, [pc, #592]	; 1140c <teste_grafo_adiciona@@Base+0x294>
   111b8:	bl	10ad4 <printf@plt>
   111bc:	mov	r2, #7
   111c0:	mov	r1, #2
   111c4:	ldr	r0, [fp, #-12]
   111c8:	bl	12294 <grafo_adiciona@@Base>
   111cc:	mov	r3, r0
   111d0:	cmp	r3, #1
   111d4:	beq	111ec <teste_grafo_adiciona@@Base+0x74>
   111d8:	ldr	r0, [pc, #560]	; 11410 <teste_grafo_adiciona@@Base+0x298>
   111dc:	bl	10ad4 <printf@plt>
   111e0:	ldr	r3, [fp, #-8]
   111e4:	add	r3, r3, #1
   111e8:	str	r3, [fp, #-8]
   111ec:	ldr	r3, [fp, #-12]
   111f0:	ldr	r3, [r3, #4]
   111f4:	add	r3, r3, #16
   111f8:	ldr	r3, [r3, #4]
   111fc:	cmp	r3, #0
   11200:	beq	11220 <teste_grafo_adiciona@@Base+0xa8>
   11204:	ldr	r3, [fp, #-12]
   11208:	ldr	r3, [r3, #4]
   1120c:	add	r3, r3, #16
   11210:	ldr	r3, [r3, #4]
   11214:	ldr	r3, [r3]
   11218:	cmp	r3, #7
   1121c:	beq	11234 <teste_grafo_adiciona@@Base+0xbc>
   11220:	ldr	r0, [pc, #492]	; 11414 <teste_grafo_adiciona@@Base+0x29c>
   11224:	bl	10ad4 <printf@plt>
   11228:	ldr	r3, [fp, #-8]
   1122c:	add	r3, r3, #1
   11230:	str	r3, [fp, #-8]
   11234:	mov	r2, #8
   11238:	mov	r1, #3
   1123c:	ldr	r0, [fp, #-12]
   11240:	bl	12294 <grafo_adiciona@@Base>
   11244:	mov	r3, r0
   11248:	cmp	r3, #1
   1124c:	beq	11264 <teste_grafo_adiciona@@Base+0xec>
   11250:	ldr	r0, [pc, #440]	; 11410 <teste_grafo_adiciona@@Base+0x298>
   11254:	bl	10ad4 <printf@plt>
   11258:	ldr	r3, [fp, #-8]
   1125c:	add	r3, r3, #1
   11260:	str	r3, [fp, #-8]
   11264:	ldr	r3, [fp, #-12]
   11268:	ldr	r3, [r3, #4]
   1126c:	add	r3, r3, #24
   11270:	ldr	r3, [r3, #4]
   11274:	cmp	r3, #0
   11278:	beq	11330 <teste_grafo_adiciona@@Base+0x1b8>
   1127c:	ldr	r3, [fp, #-12]
   11280:	ldr	r3, [r3, #4]
   11284:	add	r3, r3, #24
   11288:	ldr	r3, [r3, #4]
   1128c:	ldr	r3, [r3, #4]
   11290:	cmp	r3, #0
   11294:	beq	11330 <teste_grafo_adiciona@@Base+0x1b8>
   11298:	ldr	r3, [fp, #-12]
   1129c:	ldr	r3, [r3, #4]
   112a0:	add	r3, r3, #24
   112a4:	ldr	r3, [r3, #4]
   112a8:	ldr	r3, [r3, #4]
   112ac:	ldr	r3, [r3, #4]
   112b0:	cmp	r3, #0
   112b4:	bne	11330 <teste_grafo_adiciona@@Base+0x1b8>
   112b8:	ldr	r3, [fp, #-12]
   112bc:	ldr	r3, [r3, #4]
   112c0:	add	r3, r3, #24
   112c4:	ldr	r3, [r3, #4]
   112c8:	ldr	r3, [r3]
   112cc:	cmp	r3, #2
   112d0:	bne	112f4 <teste_grafo_adiciona@@Base+0x17c>
   112d4:	ldr	r3, [fp, #-12]
   112d8:	ldr	r3, [r3, #4]
   112dc:	add	r3, r3, #24
   112e0:	ldr	r3, [r3, #4]
   112e4:	ldr	r3, [r3, #4]
   112e8:	ldr	r3, [r3]
   112ec:	cmp	r3, #8
   112f0:	beq	11344 <teste_grafo_adiciona@@Base+0x1cc>
   112f4:	ldr	r3, [fp, #-12]
   112f8:	ldr	r3, [r3, #4]
   112fc:	add	r3, r3, #24
   11300:	ldr	r3, [r3, #4]
   11304:	ldr	r3, [r3]
   11308:	cmp	r3, #8
   1130c:	bne	11330 <teste_grafo_adiciona@@Base+0x1b8>
   11310:	ldr	r3, [fp, #-12]
   11314:	ldr	r3, [r3, #4]
   11318:	add	r3, r3, #24
   1131c:	ldr	r3, [r3, #4]
   11320:	ldr	r3, [r3, #4]
   11324:	ldr	r3, [r3]
   11328:	cmp	r3, #2
   1132c:	beq	11344 <teste_grafo_adiciona@@Base+0x1cc>
   11330:	ldr	r0, [pc, #224]	; 11418 <teste_grafo_adiciona@@Base+0x2a0>
   11334:	bl	10ad4 <printf@plt>
   11338:	ldr	r3, [fp, #-8]
   1133c:	add	r3, r3, #1
   11340:	str	r3, [fp, #-8]
   11344:	mov	r2, #7
   11348:	mov	r1, #2
   1134c:	ldr	r0, [fp, #-12]
   11350:	bl	12294 <grafo_adiciona@@Base>
   11354:	mov	r3, r0
   11358:	cmp	r3, #0
   1135c:	beq	11374 <teste_grafo_adiciona@@Base+0x1fc>
   11360:	ldr	r0, [pc, #180]	; 1141c <teste_grafo_adiciona@@Base+0x2a4>
   11364:	bl	10ad4 <printf@plt>
   11368:	ldr	r3, [fp, #-8]
   1136c:	add	r3, r3, #1
   11370:	str	r3, [fp, #-8]
   11374:	mov	r2, #7
   11378:	mov	r1, #22
   1137c:	ldr	r0, [fp, #-12]
   11380:	bl	12294 <grafo_adiciona@@Base>
   11384:	mov	r3, r0
   11388:	cmn	r3, #1
   1138c:	beq	113a4 <teste_grafo_adiciona@@Base+0x22c>
   11390:	ldr	r0, [pc, #136]	; 11420 <teste_grafo_adiciona@@Base+0x2a8>
   11394:	bl	10ad4 <printf@plt>
   11398:	ldr	r3, [fp, #-8]
   1139c:	add	r3, r3, #1
   113a0:	str	r3, [fp, #-8]
   113a4:	mov	r2, #7
   113a8:	mov	r1, #2
   113ac:	mov	r0, #0
   113b0:	bl	12294 <grafo_adiciona@@Base>
   113b4:	mov	r3, r0
   113b8:	cmn	r3, #1
   113bc:	beq	113d4 <teste_grafo_adiciona@@Base+0x25c>
   113c0:	ldr	r0, [pc, #92]	; 11424 <teste_grafo_adiciona@@Base+0x2ac>
   113c4:	bl	10ad4 <printf@plt>
   113c8:	ldr	r3, [fp, #-8]
   113cc:	add	r3, r3, #1
   113d0:	str	r3, [fp, #-8]
   113d4:	ldr	r0, [fp, #-12]
   113d8:	bl	12114 <grafo_apaga@@Base>
   113dc:	ldr	r3, [fp, #-8]
   113e0:	cmp	r3, #0
   113e4:	bne	113f4 <teste_grafo_adiciona@@Base+0x27c>
   113e8:	ldr	r0, [pc, #56]	; 11428 <teste_grafo_adiciona@@Base+0x2b0>
   113ec:	bl	10af8 <puts@plt>
   113f0:	b	113fc <teste_grafo_adiciona@@Base+0x284>
   113f4:	mov	r0, #10
   113f8:	bl	10b34 <putchar@plt>
   113fc:	ldr	r3, [fp, #-8]
   11400:	mov	r0, r3
   11404:	sub	sp, fp, #4
   11408:	pop	{fp, pc}
   1140c:	andeq	r3, r1, r4, asr #32
   11410:	andeq	r3, r1, r8, asr r0
   11414:	muleq	r1, r4, r0
   11418:	andeq	r3, r1, r4, asr #1
   1141c:	andeq	r3, r1, r0, lsl #2
   11420:	andeq	r3, r1, r8, lsr r1
   11424:	andeq	r3, r1, r0, ror r1
   11428:	andeq	r2, r1, r8, lsr pc

0001142c <teste_grafo_remove@@Base>:
   1142c:	push	{fp, lr}
   11430:	add	fp, sp, #4
   11434:	sub	sp, sp, #24
   11438:	mov	r3, #0
   1143c:	str	r3, [fp, #-8]
   11440:	mov	r3, #1
   11444:	str	r3, [sp, #12]
   11448:	mov	r3, #7
   1144c:	str	r3, [sp, #8]
   11450:	mov	r3, #2
   11454:	str	r3, [sp, #4]
   11458:	mov	r3, #7
   1145c:	str	r3, [sp]
   11460:	mov	r3, #2
   11464:	mov	r2, #3
   11468:	mov	r1, #6
   1146c:	mov	r0, #9
   11470:	bl	10c74 <_g@@Base>
   11474:	str	r0, [fp, #-12]
   11478:	ldr	r0, [pc, #392]	; 11608 <teste_grafo_remove@@Base+0x1dc>
   1147c:	bl	10ad4 <printf@plt>
   11480:	mov	r2, #1
   11484:	mov	r1, #7
   11488:	ldr	r0, [fp, #-12]
   1148c:	bl	12390 <grafo_remove@@Base>
   11490:	mov	r3, r0
   11494:	cmp	r3, #1
   11498:	beq	114b0 <teste_grafo_remove@@Base+0x84>
   1149c:	ldr	r0, [pc, #360]	; 1160c <teste_grafo_remove@@Base+0x1e0>
   114a0:	bl	10ad4 <printf@plt>
   114a4:	ldr	r3, [fp, #-8]
   114a8:	add	r3, r3, #1
   114ac:	str	r3, [fp, #-8]
   114b0:	ldr	r3, [fp, #-12]
   114b4:	ldr	r3, [r3, #4]
   114b8:	add	r3, r3, #56	; 0x38
   114bc:	ldr	r3, [r3, #4]
   114c0:	cmp	r3, #0
   114c4:	beq	11500 <teste_grafo_remove@@Base+0xd4>
   114c8:	ldr	r3, [fp, #-12]
   114cc:	ldr	r3, [r3, #4]
   114d0:	add	r3, r3, #56	; 0x38
   114d4:	ldr	r3, [r3, #4]
   114d8:	ldr	r3, [r3, #4]
   114dc:	cmp	r3, #0
   114e0:	bne	11500 <teste_grafo_remove@@Base+0xd4>
   114e4:	ldr	r3, [fp, #-12]
   114e8:	ldr	r3, [r3, #4]
   114ec:	add	r3, r3, #56	; 0x38
   114f0:	ldr	r3, [r3, #4]
   114f4:	ldr	r3, [r3]
   114f8:	cmp	r3, #2
   114fc:	beq	11514 <teste_grafo_remove@@Base+0xe8>
   11500:	ldr	r0, [pc, #264]	; 11610 <teste_grafo_remove@@Base+0x1e4>
   11504:	bl	10ad4 <printf@plt>
   11508:	ldr	r3, [fp, #-8]
   1150c:	add	r3, r3, #1
   11510:	str	r3, [fp, #-8]
   11514:	mov	r2, #2
   11518:	mov	r1, #7
   1151c:	ldr	r0, [fp, #-12]
   11520:	bl	12390 <grafo_remove@@Base>
   11524:	mov	r3, r0
   11528:	cmp	r3, #1
   1152c:	beq	11544 <teste_grafo_remove@@Base+0x118>
   11530:	ldr	r0, [pc, #212]	; 1160c <teste_grafo_remove@@Base+0x1e0>
   11534:	bl	10ad4 <printf@plt>
   11538:	ldr	r3, [fp, #-8]
   1153c:	add	r3, r3, #1
   11540:	str	r3, [fp, #-8]
   11544:	ldr	r3, [fp, #-12]
   11548:	ldr	r3, [r3, #4]
   1154c:	add	r3, r3, #56	; 0x38
   11550:	ldr	r3, [r3, #4]
   11554:	cmp	r3, #0
   11558:	beq	11570 <teste_grafo_remove@@Base+0x144>
   1155c:	ldr	r0, [pc, #172]	; 11610 <teste_grafo_remove@@Base+0x1e4>
   11560:	bl	10ad4 <printf@plt>
   11564:	ldr	r3, [fp, #-8]
   11568:	add	r3, r3, #1
   1156c:	str	r3, [fp, #-8]
   11570:	mov	r2, #0
   11574:	mov	r1, #4
   11578:	ldr	r0, [fp, #-12]
   1157c:	bl	12390 <grafo_remove@@Base>
   11580:	mov	r3, r0
   11584:	cmp	r3, #0
   11588:	beq	115a0 <teste_grafo_remove@@Base+0x174>
   1158c:	ldr	r0, [pc, #128]	; 11614 <teste_grafo_remove@@Base+0x1e8>
   11590:	bl	10ad4 <printf@plt>
   11594:	ldr	r3, [fp, #-8]
   11598:	add	r3, r3, #1
   1159c:	str	r3, [fp, #-8]
   115a0:	mov	r2, #22
   115a4:	mov	r1, #7
   115a8:	ldr	r0, [fp, #-12]
   115ac:	bl	12390 <grafo_remove@@Base>
   115b0:	mov	r3, r0
   115b4:	cmn	r3, #1
   115b8:	beq	115d0 <teste_grafo_remove@@Base+0x1a4>
   115bc:	ldr	r0, [pc, #84]	; 11618 <teste_grafo_remove@@Base+0x1ec>
   115c0:	bl	10ad4 <printf@plt>
   115c4:	ldr	r3, [fp, #-8]
   115c8:	add	r3, r3, #1
   115cc:	str	r3, [fp, #-8]
   115d0:	ldr	r0, [fp, #-12]
   115d4:	bl	12114 <grafo_apaga@@Base>
   115d8:	ldr	r3, [fp, #-8]
   115dc:	cmp	r3, #0
   115e0:	bne	115f0 <teste_grafo_remove@@Base+0x1c4>
   115e4:	ldr	r0, [pc, #48]	; 1161c <teste_grafo_remove@@Base+0x1f0>
   115e8:	bl	10af8 <puts@plt>
   115ec:	b	115f8 <teste_grafo_remove@@Base+0x1cc>
   115f0:	mov	r0, #10
   115f4:	bl	10b34 <putchar@plt>
   115f8:	ldr	r3, [fp, #-8]
   115fc:	mov	r0, r3
   11600:	sub	sp, fp, #4
   11604:	pop	{fp, pc}
   11608:	andeq	r3, r1, r8, lsr #3
   1160c:			; <UNDEFINED> instruction: 0x000131bc
   11610:	strdeq	r3, [r1], -r8
   11614:	andeq	r3, r1, r4, lsr r2
   11618:	andeq	r3, r1, r0, ror r2
   1161c:	andeq	r2, r1, r8, lsr pc

00011620 <teste_v_sucessores@@Base>:
   11620:	push	{fp, lr}
   11624:	add	fp, sp, #4
   11628:	sub	sp, sp, #96	; 0x60
   1162c:	mov	r3, #0
   11630:	str	r3, [fp, #-8]
   11634:	mov	r3, #1
   11638:	str	r3, [sp, #76]	; 0x4c
   1163c:	mov	r3, #0
   11640:	str	r3, [sp, #72]	; 0x48
   11644:	mov	r3, #3
   11648:	str	r3, [sp, #68]	; 0x44
   1164c:	mov	r3, #6
   11650:	str	r3, [sp, #64]	; 0x40
   11654:	mov	r3, #6
   11658:	str	r3, [sp, #60]	; 0x3c
   1165c:	mov	r3, #7
   11660:	str	r3, [sp, #56]	; 0x38
   11664:	mov	r3, #1
   11668:	str	r3, [sp, #52]	; 0x34
   1166c:	mov	r3, #1
   11670:	str	r3, [sp, #48]	; 0x30
   11674:	mov	r3, #6
   11678:	str	r3, [sp, #44]	; 0x2c
   1167c:	mov	r3, #4
   11680:	str	r3, [sp, #40]	; 0x28
   11684:	mov	r3, #0
   11688:	str	r3, [sp, #36]	; 0x24
   1168c:	mov	r3, #4
   11690:	str	r3, [sp, #32]
   11694:	mov	r3, #4
   11698:	str	r3, [sp, #28]
   1169c:	mov	r3, #5
   116a0:	str	r3, [sp, #24]
   116a4:	mov	r3, #5
   116a8:	str	r3, [sp, #20]
   116ac:	mov	r3, #7
   116b0:	str	r3, [sp, #16]
   116b4:	mov	r3, #2
   116b8:	str	r3, [sp, #12]
   116bc:	mov	r3, #0
   116c0:	str	r3, [sp, #8]
   116c4:	mov	r3, #2
   116c8:	str	r3, [sp, #4]
   116cc:	mov	r3, #7
   116d0:	str	r3, [sp]
   116d4:	mov	r3, #2
   116d8:	mov	r2, #3
   116dc:	mov	r1, #22
   116e0:	mov	r0, #8
   116e4:	bl	10c74 <_g@@Base>
   116e8:	str	r0, [fp, #-12]
   116ec:	ldr	r0, [pc, #436]	; 118a8 <teste_v_sucessores@@Base+0x288>
   116f0:	bl	10ad4 <printf@plt>
   116f4:	mov	r1, #7
   116f8:	ldr	r0, [fp, #-12]
   116fc:	bl	12554 <v_sucessores@@Base>
   11700:	str	r0, [fp, #-16]
   11704:	ldr	r3, [fp, #-16]
   11708:	cmp	r3, #0
   1170c:	bne	11724 <teste_v_sucessores@@Base+0x104>
   11710:	ldr	r0, [pc, #404]	; 118ac <teste_v_sucessores@@Base+0x28c>
   11714:	bl	10ad4 <printf@plt>
   11718:	ldr	r3, [fp, #-8]
   1171c:	add	r3, r3, #1
   11720:	str	r3, [fp, #-8]
   11724:	ldr	r3, [fp, #-16]
   11728:	cmp	r3, #0
   1172c:	bne	11758 <teste_v_sucessores@@Base+0x138>
   11730:	ldr	r3, [fp, #-8]
   11734:	cmp	r3, #0
   11738:	bne	11748 <teste_v_sucessores@@Base+0x128>
   1173c:	ldr	r0, [pc, #364]	; 118b0 <teste_v_sucessores@@Base+0x290>
   11740:	bl	10af8 <puts@plt>
   11744:	b	11750 <teste_v_sucessores@@Base+0x130>
   11748:	mov	r0, #10
   1174c:	bl	10b34 <putchar@plt>
   11750:	ldr	r3, [fp, #-8]
   11754:	b	1189c <teste_v_sucessores@@Base+0x27c>
   11758:	ldr	r3, [fp, #-16]
   1175c:	ldr	r3, [r3]
   11760:	cmp	r3, #3
   11764:	beq	1177c <teste_v_sucessores@@Base+0x15c>
   11768:	ldr	r0, [pc, #324]	; 118b4 <teste_v_sucessores@@Base+0x294>
   1176c:	bl	10ad4 <printf@plt>
   11770:	ldr	r3, [fp, #-8]
   11774:	add	r3, r3, #1
   11778:	str	r3, [fp, #-8]
   1177c:	mov	r1, #2
   11780:	ldr	r0, [fp, #-16]
   11784:	bl	10db0 <_f@@Base>
   11788:	mov	r3, r0
   1178c:	cmp	r3, #0
   11790:	beq	117c4 <teste_v_sucessores@@Base+0x1a4>
   11794:	mov	r1, #5
   11798:	ldr	r0, [fp, #-16]
   1179c:	bl	10db0 <_f@@Base>
   117a0:	mov	r3, r0
   117a4:	cmp	r3, #0
   117a8:	beq	117c4 <teste_v_sucessores@@Base+0x1a4>
   117ac:	mov	r1, #6
   117b0:	ldr	r0, [fp, #-16]
   117b4:	bl	10db0 <_f@@Base>
   117b8:	mov	r3, r0
   117bc:	cmp	r3, #0
   117c0:	bne	117d8 <teste_v_sucessores@@Base+0x1b8>
   117c4:	ldr	r0, [pc, #236]	; 118b8 <teste_v_sucessores@@Base+0x298>
   117c8:	bl	10ad4 <printf@plt>
   117cc:	ldr	r3, [fp, #-8]
   117d0:	add	r3, r3, #1
   117d4:	str	r3, [fp, #-8]
   117d8:	ldr	r0, [fp, #-16]
   117dc:	bl	12918 <vetor_apaga@@Base>
   117e0:	mov	r1, #2
   117e4:	ldr	r0, [fp, #-12]
   117e8:	bl	12554 <v_sucessores@@Base>
   117ec:	str	r0, [fp, #-16]
   117f0:	ldr	r3, [fp, #-16]
   117f4:	cmp	r3, #0
   117f8:	bne	11810 <teste_v_sucessores@@Base+0x1f0>
   117fc:	ldr	r0, [pc, #184]	; 118bc <teste_v_sucessores@@Base+0x29c>
   11800:	bl	10ad4 <printf@plt>
   11804:	ldr	r3, [fp, #-8]
   11808:	add	r3, r3, #1
   1180c:	str	r3, [fp, #-8]
   11810:	ldr	r3, [fp, #-16]
   11814:	cmp	r3, #0
   11818:	bne	11844 <teste_v_sucessores@@Base+0x224>
   1181c:	ldr	r3, [fp, #-8]
   11820:	cmp	r3, #0
   11824:	bne	11834 <teste_v_sucessores@@Base+0x214>
   11828:	ldr	r0, [pc, #128]	; 118b0 <teste_v_sucessores@@Base+0x290>
   1182c:	bl	10af8 <puts@plt>
   11830:	b	1183c <teste_v_sucessores@@Base+0x21c>
   11834:	mov	r0, #10
   11838:	bl	10b34 <putchar@plt>
   1183c:	ldr	r3, [fp, #-8]
   11840:	b	1189c <teste_v_sucessores@@Base+0x27c>
   11844:	ldr	r3, [fp, #-16]
   11848:	ldr	r3, [r3]
   1184c:	cmp	r3, #0
   11850:	beq	11868 <teste_v_sucessores@@Base+0x248>
   11854:	ldr	r0, [pc, #100]	; 118c0 <teste_v_sucessores@@Base+0x2a0>
   11858:	bl	10ad4 <printf@plt>
   1185c:	ldr	r3, [fp, #-8]
   11860:	add	r3, r3, #1
   11864:	str	r3, [fp, #-8]
   11868:	ldr	r0, [fp, #-16]
   1186c:	bl	12918 <vetor_apaga@@Base>
   11870:	ldr	r0, [fp, #-12]
   11874:	bl	12114 <grafo_apaga@@Base>
   11878:	ldr	r3, [fp, #-8]
   1187c:	cmp	r3, #0
   11880:	bne	11890 <teste_v_sucessores@@Base+0x270>
   11884:	ldr	r0, [pc, #36]	; 118b0 <teste_v_sucessores@@Base+0x290>
   11888:	bl	10af8 <puts@plt>
   1188c:	b	11898 <teste_v_sucessores@@Base+0x278>
   11890:	mov	r0, #10
   11894:	bl	10b34 <putchar@plt>
   11898:	ldr	r3, [fp, #-8]
   1189c:	mov	r0, r3
   118a0:	sub	sp, fp, #4
   118a4:	pop	{fp, pc}
   118a8:	andeq	r3, r1, r8, lsr #5
   118ac:			; <UNDEFINED> instruction: 0x000132bc
   118b0:	andeq	r2, r1, r8, lsr pc
   118b4:	andeq	r3, r1, ip, ror #5
   118b8:	andeq	r3, r1, r8, lsl r3
   118bc:	andeq	r3, r1, r4, asr #6
   118c0:	andeq	r3, r1, r4, lsl #7

000118c4 <teste_v_antecessores@@Base>:
   118c4:	push	{fp, lr}
   118c8:	add	fp, sp, #4
   118cc:	sub	sp, sp, #96	; 0x60
   118d0:	mov	r3, #0
   118d4:	str	r3, [fp, #-8]
   118d8:	mov	r3, #1
   118dc:	str	r3, [sp, #76]	; 0x4c
   118e0:	mov	r3, #0
   118e4:	str	r3, [sp, #72]	; 0x48
   118e8:	mov	r3, #3
   118ec:	str	r3, [sp, #68]	; 0x44
   118f0:	mov	r3, #6
   118f4:	str	r3, [sp, #64]	; 0x40
   118f8:	mov	r3, #6
   118fc:	str	r3, [sp, #60]	; 0x3c
   11900:	mov	r3, #7
   11904:	str	r3, [sp, #56]	; 0x38
   11908:	mov	r3, #1
   1190c:	str	r3, [sp, #52]	; 0x34
   11910:	mov	r3, #1
   11914:	str	r3, [sp, #48]	; 0x30
   11918:	mov	r3, #6
   1191c:	str	r3, [sp, #44]	; 0x2c
   11920:	mov	r3, #4
   11924:	str	r3, [sp, #40]	; 0x28
   11928:	mov	r3, #0
   1192c:	str	r3, [sp, #36]	; 0x24
   11930:	mov	r3, #4
   11934:	str	r3, [sp, #32]
   11938:	mov	r3, #4
   1193c:	str	r3, [sp, #28]
   11940:	mov	r3, #5
   11944:	str	r3, [sp, #24]
   11948:	mov	r3, #5
   1194c:	str	r3, [sp, #20]
   11950:	mov	r3, #7
   11954:	str	r3, [sp, #16]
   11958:	mov	r3, #2
   1195c:	str	r3, [sp, #12]
   11960:	mov	r3, #0
   11964:	str	r3, [sp, #8]
   11968:	mov	r3, #2
   1196c:	str	r3, [sp, #4]
   11970:	mov	r3, #7
   11974:	str	r3, [sp]
   11978:	mov	r3, #2
   1197c:	mov	r2, #3
   11980:	mov	r1, #22
   11984:	mov	r0, #8
   11988:	bl	10c74 <_g@@Base>
   1198c:	str	r0, [fp, #-12]
   11990:	ldr	r0, [pc, #436]	; 11b4c <teste_v_antecessores@@Base+0x288>
   11994:	bl	10ad4 <printf@plt>
   11998:	mov	r1, #2
   1199c:	ldr	r0, [fp, #-12]
   119a0:	bl	12618 <v_antecessores@@Base>
   119a4:	str	r0, [fp, #-16]
   119a8:	ldr	r3, [fp, #-16]
   119ac:	cmp	r3, #0
   119b0:	bne	119c8 <teste_v_antecessores@@Base+0x104>
   119b4:	ldr	r0, [pc, #404]	; 11b50 <teste_v_antecessores@@Base+0x28c>
   119b8:	bl	10ad4 <printf@plt>
   119bc:	ldr	r3, [fp, #-8]
   119c0:	add	r3, r3, #1
   119c4:	str	r3, [fp, #-8]
   119c8:	ldr	r3, [fp, #-16]
   119cc:	cmp	r3, #0
   119d0:	bne	119fc <teste_v_antecessores@@Base+0x138>
   119d4:	ldr	r3, [fp, #-8]
   119d8:	cmp	r3, #0
   119dc:	bne	119ec <teste_v_antecessores@@Base+0x128>
   119e0:	ldr	r0, [pc, #364]	; 11b54 <teste_v_antecessores@@Base+0x290>
   119e4:	bl	10af8 <puts@plt>
   119e8:	b	119f4 <teste_v_antecessores@@Base+0x130>
   119ec:	mov	r0, #10
   119f0:	bl	10b34 <putchar@plt>
   119f4:	ldr	r3, [fp, #-8]
   119f8:	b	11b40 <teste_v_antecessores@@Base+0x27c>
   119fc:	ldr	r3, [fp, #-16]
   11a00:	ldr	r3, [r3]
   11a04:	cmp	r3, #3
   11a08:	beq	11a20 <teste_v_antecessores@@Base+0x15c>
   11a0c:	ldr	r0, [pc, #324]	; 11b58 <teste_v_antecessores@@Base+0x294>
   11a10:	bl	10ad4 <printf@plt>
   11a14:	ldr	r3, [fp, #-8]
   11a18:	add	r3, r3, #1
   11a1c:	str	r3, [fp, #-8]
   11a20:	mov	r1, #0
   11a24:	ldr	r0, [fp, #-16]
   11a28:	bl	10db0 <_f@@Base>
   11a2c:	mov	r3, r0
   11a30:	cmp	r3, #0
   11a34:	beq	11a68 <teste_v_antecessores@@Base+0x1a4>
   11a38:	mov	r1, #3
   11a3c:	ldr	r0, [fp, #-16]
   11a40:	bl	10db0 <_f@@Base>
   11a44:	mov	r3, r0
   11a48:	cmp	r3, #0
   11a4c:	beq	11a68 <teste_v_antecessores@@Base+0x1a4>
   11a50:	mov	r1, #7
   11a54:	ldr	r0, [fp, #-16]
   11a58:	bl	10db0 <_f@@Base>
   11a5c:	mov	r3, r0
   11a60:	cmp	r3, #0
   11a64:	bne	11a7c <teste_v_antecessores@@Base+0x1b8>
   11a68:	ldr	r0, [pc, #236]	; 11b5c <teste_v_antecessores@@Base+0x298>
   11a6c:	bl	10ad4 <printf@plt>
   11a70:	ldr	r3, [fp, #-8]
   11a74:	add	r3, r3, #1
   11a78:	str	r3, [fp, #-8]
   11a7c:	ldr	r0, [fp, #-16]
   11a80:	bl	12918 <vetor_apaga@@Base>
   11a84:	mov	r1, #7
   11a88:	ldr	r0, [fp, #-12]
   11a8c:	bl	12618 <v_antecessores@@Base>
   11a90:	str	r0, [fp, #-16]
   11a94:	ldr	r3, [fp, #-16]
   11a98:	cmp	r3, #0
   11a9c:	bne	11ab4 <teste_v_antecessores@@Base+0x1f0>
   11aa0:	ldr	r0, [pc, #184]	; 11b60 <teste_v_antecessores@@Base+0x29c>
   11aa4:	bl	10ad4 <printf@plt>
   11aa8:	ldr	r3, [fp, #-8]
   11aac:	add	r3, r3, #1
   11ab0:	str	r3, [fp, #-8]
   11ab4:	ldr	r3, [fp, #-16]
   11ab8:	cmp	r3, #0
   11abc:	bne	11ae8 <teste_v_antecessores@@Base+0x224>
   11ac0:	ldr	r3, [fp, #-8]
   11ac4:	cmp	r3, #0
   11ac8:	bne	11ad8 <teste_v_antecessores@@Base+0x214>
   11acc:	ldr	r0, [pc, #128]	; 11b54 <teste_v_antecessores@@Base+0x290>
   11ad0:	bl	10af8 <puts@plt>
   11ad4:	b	11ae0 <teste_v_antecessores@@Base+0x21c>
   11ad8:	mov	r0, #10
   11adc:	bl	10b34 <putchar@plt>
   11ae0:	ldr	r3, [fp, #-8]
   11ae4:	b	11b40 <teste_v_antecessores@@Base+0x27c>
   11ae8:	ldr	r3, [fp, #-16]
   11aec:	ldr	r3, [r3]
   11af0:	cmp	r3, #0
   11af4:	beq	11b0c <teste_v_antecessores@@Base+0x248>
   11af8:	ldr	r0, [pc, #100]	; 11b64 <teste_v_antecessores@@Base+0x2a0>
   11afc:	bl	10ad4 <printf@plt>
   11b00:	ldr	r3, [fp, #-8]
   11b04:	add	r3, r3, #1
   11b08:	str	r3, [fp, #-8]
   11b0c:	ldr	r0, [fp, #-16]
   11b10:	bl	12918 <vetor_apaga@@Base>
   11b14:	ldr	r0, [fp, #-12]
   11b18:	bl	12114 <grafo_apaga@@Base>
   11b1c:	ldr	r3, [fp, #-8]
   11b20:	cmp	r3, #0
   11b24:	bne	11b34 <teste_v_antecessores@@Base+0x270>
   11b28:	ldr	r0, [pc, #36]	; 11b54 <teste_v_antecessores@@Base+0x290>
   11b2c:	bl	10af8 <puts@plt>
   11b30:	b	11b3c <teste_v_antecessores@@Base+0x278>
   11b34:	mov	r0, #10
   11b38:	bl	10b34 <putchar@plt>
   11b3c:	ldr	r3, [fp, #-8]
   11b40:	mov	r0, r3
   11b44:	sub	sp, fp, #4
   11b48:	pop	{fp, pc}
   11b4c:			; <UNDEFINED> instruction: 0x000133b4
   11b50:	andeq	r3, r1, r8, asr #7
   11b54:	andeq	r2, r1, r8, lsr pc
   11b58:	strdeq	r3, [r1], -r8
   11b5c:	andeq	r3, r1, r8, lsr #8
   11b60:	andeq	r3, r1, r8, asr r4
   11b64:	muleq	r1, r8, r4

00011b68 <teste_v_grau@@Base>:
   11b68:	push	{fp, lr}
   11b6c:	add	fp, sp, #4
   11b70:	sub	sp, sp, #88	; 0x58
   11b74:	mov	r3, #0
   11b78:	str	r3, [fp, #-8]
   11b7c:	mov	r3, #1
   11b80:	str	r3, [sp, #76]	; 0x4c
   11b84:	mov	r3, #0
   11b88:	str	r3, [sp, #72]	; 0x48
   11b8c:	mov	r3, #3
   11b90:	str	r3, [sp, #68]	; 0x44
   11b94:	mov	r3, #6
   11b98:	str	r3, [sp, #64]	; 0x40
   11b9c:	mov	r3, #6
   11ba0:	str	r3, [sp, #60]	; 0x3c
   11ba4:	mov	r3, #7
   11ba8:	str	r3, [sp, #56]	; 0x38
   11bac:	mov	r3, #1
   11bb0:	str	r3, [sp, #52]	; 0x34
   11bb4:	mov	r3, #1
   11bb8:	str	r3, [sp, #48]	; 0x30
   11bbc:	mov	r3, #6
   11bc0:	str	r3, [sp, #44]	; 0x2c
   11bc4:	mov	r3, #4
   11bc8:	str	r3, [sp, #40]	; 0x28
   11bcc:	mov	r3, #0
   11bd0:	str	r3, [sp, #36]	; 0x24
   11bd4:	mov	r3, #4
   11bd8:	str	r3, [sp, #32]
   11bdc:	mov	r3, #4
   11be0:	str	r3, [sp, #28]
   11be4:	mov	r3, #5
   11be8:	str	r3, [sp, #24]
   11bec:	mov	r3, #5
   11bf0:	str	r3, [sp, #20]
   11bf4:	mov	r3, #7
   11bf8:	str	r3, [sp, #16]
   11bfc:	mov	r3, #2
   11c00:	str	r3, [sp, #12]
   11c04:	mov	r3, #0
   11c08:	str	r3, [sp, #8]
   11c0c:	mov	r3, #2
   11c10:	str	r3, [sp, #4]
   11c14:	mov	r3, #7
   11c18:	str	r3, [sp]
   11c1c:	mov	r3, #2
   11c20:	mov	r2, #3
   11c24:	mov	r1, #22
   11c28:	mov	r0, #8
   11c2c:	bl	10c74 <_g@@Base>
   11c30:	str	r0, [fp, #-12]
   11c34:	ldr	r0, [pc, #188]	; 11cf8 <teste_v_grau@@Base+0x190>
   11c38:	bl	10ad4 <printf@plt>
   11c3c:	mvn	r1, #3
   11c40:	ldr	r0, [fp, #-12]
   11c44:	bl	12718 <v_grau@@Base>
   11c48:	mov	r3, r0
   11c4c:	cmn	r3, #1
   11c50:	beq	11c68 <teste_v_grau@@Base+0x100>
   11c54:	ldr	r0, [pc, #160]	; 11cfc <teste_v_grau@@Base+0x194>
   11c58:	bl	10ad4 <printf@plt>
   11c5c:	ldr	r3, [fp, #-8]
   11c60:	add	r3, r3, #1
   11c64:	str	r3, [fp, #-8]
   11c68:	mov	r1, #7
   11c6c:	ldr	r0, [fp, #-12]
   11c70:	bl	12718 <v_grau@@Base>
   11c74:	mov	r3, r0
   11c78:	cmp	r3, #3
   11c7c:	beq	11c94 <teste_v_grau@@Base+0x12c>
   11c80:	ldr	r0, [pc, #120]	; 11d00 <teste_v_grau@@Base+0x198>
   11c84:	bl	10ad4 <printf@plt>
   11c88:	ldr	r3, [fp, #-8]
   11c8c:	add	r3, r3, #1
   11c90:	str	r3, [fp, #-8]
   11c94:	mov	r1, #5
   11c98:	ldr	r0, [fp, #-12]
   11c9c:	bl	12718 <v_grau@@Base>
   11ca0:	mov	r3, r0
   11ca4:	cmp	r3, #2
   11ca8:	beq	11cc0 <teste_v_grau@@Base+0x158>
   11cac:	ldr	r0, [pc, #80]	; 11d04 <teste_v_grau@@Base+0x19c>
   11cb0:	bl	10ad4 <printf@plt>
   11cb4:	ldr	r3, [fp, #-8]
   11cb8:	add	r3, r3, #1
   11cbc:	str	r3, [fp, #-8]
   11cc0:	ldr	r0, [fp, #-12]
   11cc4:	bl	12114 <grafo_apaga@@Base>
   11cc8:	ldr	r3, [fp, #-8]
   11ccc:	cmp	r3, #0
   11cd0:	bne	11ce0 <teste_v_grau@@Base+0x178>
   11cd4:	ldr	r0, [pc, #44]	; 11d08 <teste_v_grau@@Base+0x1a0>
   11cd8:	bl	10af8 <puts@plt>
   11cdc:	b	11ce8 <teste_v_grau@@Base+0x180>
   11ce0:	mov	r0, #10
   11ce4:	bl	10b34 <putchar@plt>
   11ce8:	ldr	r3, [fp, #-8]
   11cec:	mov	r0, r3
   11cf0:	sub	sp, fp, #4
   11cf4:	pop	{fp, pc}
   11cf8:	andeq	r3, r1, r8, asr #9
   11cfc:	ldrdeq	r3, [r1], -r4
   11d00:	andeq	r3, r1, r4, lsl #10
   11d04:	andeq	r3, r1, r4, lsr r5
   11d08:	andeq	r2, r1, r8, lsr pc

00011d0c <teste_v_celebridade@@Base>:
   11d0c:	push	{fp, lr}
   11d10:	add	fp, sp, #4
   11d14:	sub	sp, sp, #120	; 0x78
   11d18:	mov	r3, #0
   11d1c:	str	r3, [fp, #-8]
   11d20:	mov	r3, #2
   11d24:	str	r3, [sp, #108]	; 0x6c
   11d28:	mov	r3, #5
   11d2c:	str	r3, [sp, #104]	; 0x68
   11d30:	mov	r3, #2
   11d34:	str	r3, [sp, #100]	; 0x64
   11d38:	mov	r3, #4
   11d3c:	str	r3, [sp, #96]	; 0x60
   11d40:	mov	r3, #2
   11d44:	str	r3, [sp, #92]	; 0x5c
   11d48:	mov	r3, #6
   11d4c:	str	r3, [sp, #88]	; 0x58
   11d50:	mov	r3, #2
   11d54:	str	r3, [sp, #84]	; 0x54
   11d58:	mov	r3, #1
   11d5c:	str	r3, [sp, #80]	; 0x50
   11d60:	mov	r3, #1
   11d64:	str	r3, [sp, #76]	; 0x4c
   11d68:	mov	r3, #0
   11d6c:	str	r3, [sp, #72]	; 0x48
   11d70:	mov	r3, #3
   11d74:	str	r3, [sp, #68]	; 0x44
   11d78:	mov	r3, #6
   11d7c:	str	r3, [sp, #64]	; 0x40
   11d80:	mov	r3, #6
   11d84:	str	r3, [sp, #60]	; 0x3c
   11d88:	mov	r3, #7
   11d8c:	str	r3, [sp, #56]	; 0x38
   11d90:	mov	r3, #1
   11d94:	str	r3, [sp, #52]	; 0x34
   11d98:	mov	r3, #1
   11d9c:	str	r3, [sp, #48]	; 0x30
   11da0:	mov	r3, #6
   11da4:	str	r3, [sp, #44]	; 0x2c
   11da8:	mov	r3, #4
   11dac:	str	r3, [sp, #40]	; 0x28
   11db0:	mov	r3, #0
   11db4:	str	r3, [sp, #36]	; 0x24
   11db8:	mov	r3, #4
   11dbc:	str	r3, [sp, #32]
   11dc0:	mov	r3, #4
   11dc4:	str	r3, [sp, #28]
   11dc8:	mov	r3, #5
   11dcc:	str	r3, [sp, #24]
   11dd0:	mov	r3, #5
   11dd4:	str	r3, [sp, #20]
   11dd8:	mov	r3, #7
   11ddc:	str	r3, [sp, #16]
   11de0:	mov	r3, #2
   11de4:	str	r3, [sp, #12]
   11de8:	mov	r3, #0
   11dec:	str	r3, [sp, #8]
   11df0:	mov	r3, #2
   11df4:	str	r3, [sp, #4]
   11df8:	mov	r3, #7
   11dfc:	str	r3, [sp]
   11e00:	mov	r3, #2
   11e04:	mov	r2, #3
   11e08:	mov	r1, #30
   11e0c:	mov	r0, #8
   11e10:	bl	10c74 <_g@@Base>
   11e14:	str	r0, [fp, #-12]
   11e18:	ldr	r0, [pc, #144]	; 11eb0 <teste_v_celebridade@@Base+0x1a4>
   11e1c:	bl	10ad4 <printf@plt>
   11e20:	mov	r1, #7
   11e24:	ldr	r0, [fp, #-12]
   11e28:	bl	127a0 <v_celebridade@@Base>
   11e2c:	mov	r3, r0
   11e30:	cmp	r3, #0
   11e34:	beq	11e4c <teste_v_celebridade@@Base+0x140>
   11e38:	ldr	r0, [pc, #116]	; 11eb4 <teste_v_celebridade@@Base+0x1a8>
   11e3c:	bl	10ad4 <printf@plt>
   11e40:	ldr	r3, [fp, #-8]
   11e44:	add	r3, r3, #1
   11e48:	str	r3, [fp, #-8]
   11e4c:	mov	r1, #2
   11e50:	ldr	r0, [fp, #-12]
   11e54:	bl	127a0 <v_celebridade@@Base>
   11e58:	mov	r3, r0
   11e5c:	cmp	r3, #1
   11e60:	beq	11e78 <teste_v_celebridade@@Base+0x16c>
   11e64:	ldr	r0, [pc, #76]	; 11eb8 <teste_v_celebridade@@Base+0x1ac>
   11e68:	bl	10ad4 <printf@plt>
   11e6c:	ldr	r3, [fp, #-8]
   11e70:	add	r3, r3, #1
   11e74:	str	r3, [fp, #-8]
   11e78:	ldr	r0, [fp, #-12]
   11e7c:	bl	12114 <grafo_apaga@@Base>
   11e80:	ldr	r3, [fp, #-8]
   11e84:	cmp	r3, #0
   11e88:	bne	11e98 <teste_v_celebridade@@Base+0x18c>
   11e8c:	ldr	r0, [pc, #40]	; 11ebc <teste_v_celebridade@@Base+0x1b0>
   11e90:	bl	10af8 <puts@plt>
   11e94:	b	11ea0 <teste_v_celebridade@@Base+0x194>
   11e98:	mov	r0, #10
   11e9c:	bl	10b34 <putchar@plt>
   11ea0:	ldr	r3, [fp, #-8]
   11ea4:	mov	r0, r3
   11ea8:	sub	sp, fp, #4
   11eac:	pop	{fp, pc}
   11eb0:	andeq	r3, r1, r4, ror #10
   11eb4:	andeq	r3, r1, r8, ror r5
   11eb8:			; <UNDEFINED> instruction: 0x000135b0
   11ebc:	andeq	r2, r1, r8, lsr pc

00011ec0 <main@@Base>:
   11ec0:	push	{fp, lr}
   11ec4:	add	fp, sp, #4
   11ec8:	sub	sp, sp, #8
   11ecc:	ldr	r3, [pc, #260]	; 11fd8 <main@@Base+0x118>
   11ed0:	ldr	r0, [r3]
   11ed4:	mov	r3, #0
   11ed8:	mov	r2, #2
   11edc:	mov	r1, #0
   11ee0:	bl	10b28 <setvbuf@plt>
   11ee4:	ldr	r3, [pc, #240]	; 11fdc <main@@Base+0x11c>
   11ee8:	ldr	r0, [r3]
   11eec:	mov	r3, #0
   11ef0:	mov	r2, #2
   11ef4:	mov	r1, #0
   11ef8:	bl	10b28 <setvbuf@plt>
   11efc:	mov	r3, #0
   11f00:	str	r3, [fp, #-8]
   11f04:	bl	10e38 <teste_grafo_novo@@Base>
   11f08:	mov	r2, r0
   11f0c:	ldr	r3, [fp, #-8]
   11f10:	add	r3, r3, r2
   11f14:	str	r3, [fp, #-8]
   11f18:	bl	10f98 <teste_grafo_aresta@@Base>
   11f1c:	mov	r2, r0
   11f20:	ldr	r3, [fp, #-8]
   11f24:	add	r3, r3, r2
   11f28:	str	r3, [fp, #-8]
   11f2c:	bl	11178 <teste_grafo_adiciona@@Base>
   11f30:	mov	r2, r0
   11f34:	ldr	r3, [fp, #-8]
   11f38:	add	r3, r3, r2
   11f3c:	str	r3, [fp, #-8]
   11f40:	bl	1142c <teste_grafo_remove@@Base>
   11f44:	mov	r2, r0
   11f48:	ldr	r3, [fp, #-8]
   11f4c:	add	r3, r3, r2
   11f50:	str	r3, [fp, #-8]
   11f54:	bl	11620 <teste_v_sucessores@@Base>
   11f58:	mov	r2, r0
   11f5c:	ldr	r3, [fp, #-8]
   11f60:	add	r3, r3, r2
   11f64:	str	r3, [fp, #-8]
   11f68:	bl	118c4 <teste_v_antecessores@@Base>
   11f6c:	mov	r2, r0
   11f70:	ldr	r3, [fp, #-8]
   11f74:	add	r3, r3, r2
   11f78:	str	r3, [fp, #-8]
   11f7c:	bl	11b68 <teste_v_grau@@Base>
   11f80:	mov	r2, r0
   11f84:	ldr	r3, [fp, #-8]
   11f88:	add	r3, r3, r2
   11f8c:	str	r3, [fp, #-8]
   11f90:	bl	11d0c <teste_v_celebridade@@Base>
   11f94:	mov	r2, r0
   11f98:	ldr	r3, [fp, #-8]
   11f9c:	add	r3, r3, r2
   11fa0:	str	r3, [fp, #-8]
   11fa4:	ldr	r3, [fp, #-8]
   11fa8:	cmp	r3, #0
   11fac:	bne	11fbc <main@@Base+0xfc>
   11fb0:	ldr	r0, [pc, #40]	; 11fe0 <main@@Base+0x120>
   11fb4:	bl	10af8 <puts@plt>
   11fb8:	b	11fc8 <main@@Base+0x108>
   11fbc:	ldr	r1, [fp, #-8]
   11fc0:	ldr	r0, [pc, #28]	; 11fe4 <main@@Base+0x124>
   11fc4:	bl	10ad4 <printf@plt>
   11fc8:	mov	r3, #0
   11fcc:	mov	r0, r3
   11fd0:	sub	sp, fp, #4
   11fd4:	pop	{fp, pc}
   11fd8:	andeq	r4, r2, ip, asr #32
   11fdc:	andeq	r4, r2, r8, asr #32
   11fe0:	andeq	r3, r1, r4, ror #11
   11fe4:	strdeq	r3, [r1], -ip

00011fe8 <cria_elem@@Base>:
   11fe8:	push	{fp, lr}
   11fec:	add	fp, sp, #4
   11ff0:	sub	sp, sp, #16
   11ff4:	str	r0, [fp, #-16]
   11ff8:	mov	r0, #8
   11ffc:	bl	10b04 <malloc@plt>
   12000:	mov	r3, r0
   12004:	str	r3, [fp, #-8]
   12008:	ldr	r3, [fp, #-8]
   1200c:	cmp	r3, #0
   12010:	bne	1201c <cria_elem@@Base+0x34>
   12014:	mov	r3, #0
   12018:	b	12038 <cria_elem@@Base+0x50>
   1201c:	ldr	r3, [fp, #-8]
   12020:	ldr	r2, [fp, #-16]
   12024:	str	r2, [r3]
   12028:	ldr	r3, [fp, #-8]
   1202c:	mov	r2, #0
   12030:	str	r2, [r3, #4]
   12034:	ldr	r3, [fp, #-8]
   12038:	mov	r0, r3
   1203c:	sub	sp, fp, #4
   12040:	pop	{fp, pc}

00012044 <grafo_novo@@Base>:
   12044:	push	{fp, lr}
   12048:	add	fp, sp, #4
   1204c:	sub	sp, sp, #16
   12050:	str	r0, [fp, #-16]
   12054:	ldr	r3, [fp, #-16]
   12058:	cmp	r3, #0
   1205c:	bgt	12068 <grafo_novo@@Base+0x24>
   12060:	mov	r3, #0
   12064:	b	12108 <grafo_novo@@Base+0xc4>
   12068:	mov	r0, #8
   1206c:	bl	10b04 <malloc@plt>
   12070:	mov	r3, r0
   12074:	str	r3, [fp, #-12]
   12078:	ldr	r3, [fp, #-12]
   1207c:	ldr	r2, [fp, #-16]
   12080:	str	r2, [r3]
   12084:	ldr	r3, [fp, #-16]
   12088:	lsl	r3, r3, #3
   1208c:	mov	r0, r3
   12090:	bl	10b04 <malloc@plt>
   12094:	mov	r3, r0
   12098:	mov	r2, r3
   1209c:	ldr	r3, [fp, #-12]
   120a0:	str	r2, [r3, #4]
   120a4:	mov	r3, #0
   120a8:	str	r3, [fp, #-8]
   120ac:	b	120f4 <grafo_novo@@Base+0xb0>
   120b0:	ldr	r3, [fp, #-12]
   120b4:	ldr	r2, [r3, #4]
   120b8:	ldr	r3, [fp, #-8]
   120bc:	lsl	r3, r3, #3
   120c0:	add	r3, r2, r3
   120c4:	mov	r2, #0
   120c8:	str	r2, [r3]
   120cc:	ldr	r3, [fp, #-12]
   120d0:	ldr	r2, [r3, #4]
   120d4:	ldr	r3, [fp, #-8]
   120d8:	lsl	r3, r3, #3
   120dc:	add	r3, r2, r3
   120e0:	mov	r2, #0
   120e4:	str	r2, [r3, #4]
   120e8:	ldr	r3, [fp, #-8]
   120ec:	add	r3, r3, #1
   120f0:	str	r3, [fp, #-8]
   120f4:	ldr	r2, [fp, #-8]
   120f8:	ldr	r3, [fp, #-16]
   120fc:	cmp	r2, r3
   12100:	blt	120b0 <grafo_novo@@Base+0x6c>
   12104:	ldr	r3, [fp, #-12]
   12108:	mov	r0, r3
   1210c:	sub	sp, fp, #4
   12110:	pop	{fp, pc}

00012114 <grafo_apaga@@Base>:
   12114:	push	{fp, lr}
   12118:	add	fp, sp, #4
   1211c:	sub	sp, sp, #24
   12120:	str	r0, [fp, #-24]	; 0xffffffe8
   12124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12128:	cmp	r3, #0
   1212c:	beq	121c4 <grafo_apaga@@Base+0xb0>
   12130:	mov	r3, #0
   12134:	str	r3, [fp, #-8]
   12138:	b	12190 <grafo_apaga@@Base+0x7c>
   1213c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12140:	ldr	r2, [r3, #4]
   12144:	ldr	r3, [fp, #-8]
   12148:	lsl	r3, r3, #3
   1214c:	add	r3, r2, r3
   12150:	ldr	r3, [r3, #4]
   12154:	str	r3, [fp, #-12]
   12158:	b	12178 <grafo_apaga@@Base+0x64>
   1215c:	ldr	r3, [fp, #-12]
   12160:	str	r3, [fp, #-16]
   12164:	ldr	r3, [fp, #-12]
   12168:	ldr	r3, [r3, #4]
   1216c:	str	r3, [fp, #-12]
   12170:	ldr	r0, [fp, #-16]
   12174:	bl	10ae0 <free@plt>
   12178:	ldr	r3, [fp, #-12]
   1217c:	cmp	r3, #0
   12180:	bne	1215c <grafo_apaga@@Base+0x48>
   12184:	ldr	r3, [fp, #-8]
   12188:	add	r3, r3, #1
   1218c:	str	r3, [fp, #-8]
   12190:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12194:	ldr	r2, [r3]
   12198:	ldr	r3, [fp, #-8]
   1219c:	cmp	r2, r3
   121a0:	bgt	1213c <grafo_apaga@@Base+0x28>
   121a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121a8:	ldr	r3, [r3, #4]
   121ac:	mov	r0, r3
   121b0:	bl	10ae0 <free@plt>
   121b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121b8:	bl	10ae0 <free@plt>
   121bc:	nop			; (mov r0, r0)
   121c0:	b	121c8 <grafo_apaga@@Base+0xb4>
   121c4:	nop			; (mov r0, r0)
   121c8:	sub	sp, fp, #4
   121cc:	pop	{fp, pc}

000121d0 <grafo_aresta@@Base>:
   121d0:	push	{fp}		; (str fp, [sp, #-4]!)
   121d4:	add	fp, sp, #0
   121d8:	sub	sp, sp, #28
   121dc:	str	r0, [fp, #-16]
   121e0:	str	r1, [fp, #-20]	; 0xffffffec
   121e4:	str	r2, [fp, #-24]	; 0xffffffe8
   121e8:	ldr	r3, [fp, #-16]
   121ec:	cmp	r3, #0
   121f0:	beq	12208 <grafo_aresta@@Base+0x38>
   121f4:	ldr	r3, [fp, #-16]
   121f8:	ldr	r2, [r3]
   121fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12200:	cmp	r2, r3
   12204:	bge	12210 <grafo_aresta@@Base+0x40>
   12208:	mvn	r3, #0
   1220c:	b	12284 <grafo_aresta@@Base+0xb4>
   12210:	ldr	r3, [fp, #-16]
   12214:	ldr	r2, [r3]
   12218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1221c:	cmp	r2, r3
   12220:	bge	1222c <grafo_aresta@@Base+0x5c>
   12224:	mov	r3, #0
   12228:	b	12284 <grafo_aresta@@Base+0xb4>
   1222c:	ldr	r3, [fp, #-16]
   12230:	ldr	r2, [r3, #4]
   12234:	ldr	r3, [fp, #-20]	; 0xffffffec
   12238:	lsl	r3, r3, #3
   1223c:	add	r3, r2, r3
   12240:	ldr	r3, [r3, #4]
   12244:	str	r3, [fp, #-8]
   12248:	b	12274 <grafo_aresta@@Base+0xa4>
   1224c:	ldr	r3, [fp, #-8]
   12250:	ldr	r2, [r3]
   12254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12258:	cmp	r2, r3
   1225c:	bne	12268 <grafo_aresta@@Base+0x98>
   12260:	mov	r3, #1
   12264:	b	12284 <grafo_aresta@@Base+0xb4>
   12268:	ldr	r3, [fp, #-8]
   1226c:	ldr	r3, [r3, #4]
   12270:	str	r3, [fp, #-8]
   12274:	ldr	r3, [fp, #-8]
   12278:	cmp	r3, #0
   1227c:	bne	1224c <grafo_aresta@@Base+0x7c>
   12280:	mov	r3, #0
   12284:	mov	r0, r3
   12288:	add	sp, fp, #0
   1228c:	pop	{fp}		; (ldr fp, [sp], #4)
   12290:	bx	lr

00012294 <grafo_adiciona@@Base>:
   12294:	push	{r4, fp, lr}
   12298:	add	fp, sp, #8
   1229c:	sub	sp, sp, #28
   122a0:	str	r0, [fp, #-24]	; 0xffffffe8
   122a4:	str	r1, [fp, #-28]	; 0xffffffe4
   122a8:	str	r2, [fp, #-32]	; 0xffffffe0
   122ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122b0:	cmp	r3, #0
   122b4:	beq	122e0 <grafo_adiciona@@Base+0x4c>
   122b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122bc:	ldr	r2, [r3]
   122c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   122c4:	cmp	r2, r3
   122c8:	blt	122e0 <grafo_adiciona@@Base+0x4c>
   122cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122d0:	ldr	r2, [r3]
   122d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122d8:	cmp	r2, r3
   122dc:	bge	122e8 <grafo_adiciona@@Base+0x54>
   122e0:	mvn	r3, #0
   122e4:	b	12384 <grafo_adiciona@@Base+0xf0>
   122e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   122ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   122f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122f4:	bl	121d0 <grafo_aresta@@Base>
   122f8:	mov	r3, r0
   122fc:	cmp	r3, #1
   12300:	bne	1230c <grafo_adiciona@@Base+0x78>
   12304:	mov	r3, #0
   12308:	b	12384 <grafo_adiciona@@Base+0xf0>
   1230c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12310:	ldr	r2, [r3, #4]
   12314:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12318:	lsl	r3, r3, #3
   1231c:	add	r3, r2, r3
   12320:	ldr	r3, [r3, #4]
   12324:	str	r3, [fp, #-16]
   12328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1232c:	ldr	r2, [r3, #4]
   12330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12334:	lsl	r3, r3, #3
   12338:	add	r4, r2, r3
   1233c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12340:	bl	11fe8 <cria_elem@@Base>
   12344:	mov	r3, r0
   12348:	str	r3, [r4, #4]
   1234c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12350:	ldr	r2, [r3, #4]
   12354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12358:	lsl	r3, r3, #3
   1235c:	add	r3, r2, r3
   12360:	ldr	r3, [r3, #4]
   12364:	ldr	r2, [fp, #-16]
   12368:	str	r2, [r3, #4]
   1236c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12370:	ldr	r3, [r3, #4]
   12374:	ldr	r2, [r3]
   12378:	add	r2, r2, #1
   1237c:	str	r2, [r3]
   12380:	mov	r3, #1
   12384:	mov	r0, r3
   12388:	sub	sp, fp, #8
   1238c:	pop	{r4, fp, pc}

00012390 <grafo_remove@@Base>:
   12390:	push	{fp, lr}
   12394:	add	fp, sp, #4
   12398:	sub	sp, sp, #32
   1239c:	str	r0, [fp, #-24]	; 0xffffffe8
   123a0:	str	r1, [fp, #-28]	; 0xffffffe4
   123a4:	str	r2, [fp, #-32]	; 0xffffffe0
   123a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123ac:	cmp	r3, #0
   123b0:	beq	12544 <grafo_remove@@Base+0x1b4>
   123b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123b8:	ldr	r2, [r3]
   123bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   123c0:	cmp	r2, r3
   123c4:	blt	12544 <grafo_remove@@Base+0x1b4>
   123c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123cc:	ldr	r2, [r3]
   123d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   123d4:	cmp	r2, r3
   123d8:	blt	12544 <grafo_remove@@Base+0x1b4>
   123dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123e0:	ldr	r2, [r3, #4]
   123e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   123e8:	lsl	r3, r3, #3
   123ec:	add	r3, r2, r3
   123f0:	ldr	r3, [r3, #4]
   123f4:	cmp	r3, #0
   123f8:	bne	12404 <grafo_remove@@Base+0x74>
   123fc:	mov	r3, #0
   12400:	b	12548 <grafo_remove@@Base+0x1b8>
   12404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12408:	ldr	r2, [r3, #4]
   1240c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12410:	lsl	r3, r3, #3
   12414:	add	r3, r2, r3
   12418:	ldr	r3, [r3, #4]
   1241c:	ldr	r2, [r3]
   12420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12424:	cmp	r2, r3
   12428:	bne	124a0 <grafo_remove@@Base+0x110>
   1242c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12430:	ldr	r2, [r3, #4]
   12434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12438:	lsl	r3, r3, #3
   1243c:	add	r3, r2, r3
   12440:	ldr	r3, [r3, #4]
   12444:	str	r3, [fp, #-16]
   12448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1244c:	ldr	r2, [r3, #4]
   12450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12454:	lsl	r3, r3, #3
   12458:	add	r3, r2, r3
   1245c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12460:	ldr	r1, [r2, #4]
   12464:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12468:	lsl	r2, r2, #3
   1246c:	add	r2, r1, r2
   12470:	ldr	r2, [r2, #4]
   12474:	ldr	r2, [r2, #4]
   12478:	str	r2, [r3, #4]
   1247c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12480:	ldr	r3, [r3, #4]
   12484:	ldr	r2, [r3]
   12488:	sub	r2, r2, #1
   1248c:	str	r2, [r3]
   12490:	ldr	r0, [fp, #-16]
   12494:	bl	10ae0 <free@plt>
   12498:	mov	r3, #1
   1249c:	b	12548 <grafo_remove@@Base+0x1b8>
   124a0:	mov	r3, #0
   124a4:	str	r3, [fp, #-12]
   124a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124ac:	ldr	r2, [r3, #4]
   124b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124b4:	lsl	r3, r3, #3
   124b8:	add	r3, r2, r3
   124bc:	ldr	r3, [r3, #4]
   124c0:	str	r3, [fp, #-8]
   124c4:	b	12530 <grafo_remove@@Base+0x1a0>
   124c8:	ldr	r3, [fp, #-8]
   124cc:	ldr	r2, [r3]
   124d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   124d4:	cmp	r2, r3
   124d8:	bne	1251c <grafo_remove@@Base+0x18c>
   124dc:	ldr	r3, [fp, #-12]
   124e0:	cmp	r3, #0
   124e4:	beq	1251c <grafo_remove@@Base+0x18c>
   124e8:	ldr	r3, [fp, #-8]
   124ec:	ldr	r2, [r3, #4]
   124f0:	ldr	r3, [fp, #-12]
   124f4:	str	r2, [r3, #4]
   124f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124fc:	ldr	r3, [r3, #4]
   12500:	ldr	r2, [r3]
   12504:	sub	r2, r2, #1
   12508:	str	r2, [r3]
   1250c:	ldr	r0, [fp, #-8]
   12510:	bl	10ae0 <free@plt>
   12514:	mov	r3, #1
   12518:	b	12548 <grafo_remove@@Base+0x1b8>
   1251c:	ldr	r3, [fp, #-8]
   12520:	str	r3, [fp, #-12]
   12524:	ldr	r3, [fp, #-8]
   12528:	ldr	r3, [r3, #4]
   1252c:	str	r3, [fp, #-8]
   12530:	ldr	r3, [fp, #-8]
   12534:	cmp	r3, #0
   12538:	bne	124c8 <grafo_remove@@Base+0x138>
   1253c:	mov	r3, #0
   12540:	b	12548 <grafo_remove@@Base+0x1b8>
   12544:	mvn	r3, #0
   12548:	mov	r0, r3
   1254c:	sub	sp, fp, #4
   12550:	pop	{fp, pc}

00012554 <v_sucessores@@Base>:
   12554:	push	{fp, lr}
   12558:	add	fp, sp, #4
   1255c:	sub	sp, sp, #24
   12560:	str	r0, [fp, #-24]	; 0xffffffe8
   12564:	str	r1, [fp, #-28]	; 0xffffffe4
   12568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1256c:	cmp	r3, #0
   12570:	beq	12608 <v_sucessores@@Base+0xb4>
   12574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12578:	ldr	r2, [r3]
   1257c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12580:	cmp	r2, r3
   12584:	ble	12608 <v_sucessores@@Base+0xb4>
   12588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1258c:	cmp	r3, #0
   12590:	blt	12608 <v_sucessores@@Base+0xb4>
   12594:	mov	r3, #0
   12598:	str	r3, [fp, #-8]
   1259c:	bl	128b4 <vetor_novo@@Base>
   125a0:	str	r0, [fp, #-16]
   125a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125a8:	ldr	r2, [r3, #4]
   125ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   125b0:	lsl	r3, r3, #3
   125b4:	add	r3, r2, r3
   125b8:	ldr	r3, [r3, #4]
   125bc:	str	r3, [fp, #-12]
   125c0:	b	125f4 <v_sucessores@@Base+0xa0>
   125c4:	ldr	r3, [fp, #-12]
   125c8:	ldr	r3, [r3]
   125cc:	ldr	r2, [fp, #-8]
   125d0:	mov	r1, r3
   125d4:	ldr	r0, [fp, #-16]
   125d8:	bl	12a84 <vetor_insere@@Base>
   125dc:	ldr	r3, [fp, #-8]
   125e0:	add	r3, r3, #1
   125e4:	str	r3, [fp, #-8]
   125e8:	ldr	r3, [fp, #-12]
   125ec:	ldr	r3, [r3, #4]
   125f0:	str	r3, [fp, #-12]
   125f4:	ldr	r3, [fp, #-12]
   125f8:	cmp	r3, #0
   125fc:	bne	125c4 <v_sucessores@@Base+0x70>
   12600:	ldr	r3, [fp, #-16]
   12604:	b	1260c <v_sucessores@@Base+0xb8>
   12608:	mov	r3, #0
   1260c:	mov	r0, r3
   12610:	sub	sp, fp, #4
   12614:	pop	{fp, pc}

00012618 <v_antecessores@@Base>:
   12618:	push	{fp, lr}
   1261c:	add	fp, sp, #4
   12620:	sub	sp, sp, #24
   12624:	str	r0, [fp, #-24]	; 0xffffffe8
   12628:	str	r1, [fp, #-28]	; 0xffffffe4
   1262c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12630:	cmp	r3, #0
   12634:	beq	12708 <v_antecessores@@Base+0xf0>
   12638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1263c:	ldr	r2, [r3]
   12640:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12644:	cmp	r2, r3
   12648:	ble	12708 <v_antecessores@@Base+0xf0>
   1264c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12650:	cmp	r3, #0
   12654:	blt	12708 <v_antecessores@@Base+0xf0>
   12658:	bl	128b4 <vetor_novo@@Base>
   1265c:	str	r0, [fp, #-20]	; 0xffffffec
   12660:	mov	r3, #0
   12664:	str	r3, [fp, #-12]
   12668:	mov	r3, #0
   1266c:	str	r3, [fp, #-8]
   12670:	b	126ec <v_antecessores@@Base+0xd4>
   12674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12678:	ldr	r2, [r3, #4]
   1267c:	ldr	r3, [fp, #-8]
   12680:	lsl	r3, r3, #3
   12684:	add	r3, r2, r3
   12688:	ldr	r3, [r3, #4]
   1268c:	str	r3, [fp, #-16]
   12690:	b	126d4 <v_antecessores@@Base+0xbc>
   12694:	ldr	r3, [fp, #-16]
   12698:	ldr	r2, [r3]
   1269c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126a0:	cmp	r2, r3
   126a4:	bne	126c8 <v_antecessores@@Base+0xb0>
   126a8:	ldr	r2, [fp, #-12]
   126ac:	ldr	r1, [fp, #-8]
   126b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   126b4:	bl	12a84 <vetor_insere@@Base>
   126b8:	ldr	r3, [fp, #-12]
   126bc:	add	r3, r3, #1
   126c0:	str	r3, [fp, #-12]
   126c4:	b	126e0 <v_antecessores@@Base+0xc8>
   126c8:	ldr	r3, [fp, #-16]
   126cc:	ldr	r3, [r3, #4]
   126d0:	str	r3, [fp, #-16]
   126d4:	ldr	r3, [fp, #-16]
   126d8:	cmp	r3, #0
   126dc:	bne	12694 <v_antecessores@@Base+0x7c>
   126e0:	ldr	r3, [fp, #-8]
   126e4:	add	r3, r3, #1
   126e8:	str	r3, [fp, #-8]
   126ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126f0:	ldr	r2, [r3]
   126f4:	ldr	r3, [fp, #-8]
   126f8:	cmp	r2, r3
   126fc:	bgt	12674 <v_antecessores@@Base+0x5c>
   12700:	ldr	r3, [fp, #-20]	; 0xffffffec
   12704:	b	1270c <v_antecessores@@Base+0xf4>
   12708:	mov	r3, #0
   1270c:	mov	r0, r3
   12710:	sub	sp, fp, #4
   12714:	pop	{fp, pc}

00012718 <v_grau@@Base>:
   12718:	push	{r4, fp, lr}
   1271c:	add	fp, sp, #8
   12720:	sub	sp, sp, #28
   12724:	str	r0, [fp, #-32]	; 0xffffffe0
   12728:	str	r1, [fp, #-36]	; 0xffffffdc
   1272c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12730:	cmp	r3, #0
   12734:	bge	12740 <v_grau@@Base+0x28>
   12738:	mvn	r3, #0
   1273c:	b	12794 <v_grau@@Base+0x7c>
   12740:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12748:	bl	12618 <v_antecessores@@Base>
   1274c:	str	r0, [fp, #-16]
   12750:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12758:	bl	12554 <v_sucessores@@Base>
   1275c:	str	r0, [fp, #-20]	; 0xffffffec
   12760:	ldr	r0, [fp, #-16]
   12764:	bl	129d8 <vetor_tamanho@@Base>
   12768:	mov	r4, r0
   1276c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12770:	bl	129d8 <vetor_tamanho@@Base>
   12774:	mov	r3, r0
   12778:	add	r3, r4, r3
   1277c:	str	r3, [fp, #-24]	; 0xffffffe8
   12780:	ldr	r0, [fp, #-16]
   12784:	bl	12918 <vetor_apaga@@Base>
   12788:	ldr	r0, [fp, #-20]	; 0xffffffec
   1278c:	bl	12918 <vetor_apaga@@Base>
   12790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12794:	mov	r0, r3
   12798:	sub	sp, fp, #8
   1279c:	pop	{r4, fp, pc}

000127a0 <v_celebridade@@Base>:
   127a0:	push	{fp}		; (str fp, [sp, #-4]!)
   127a4:	add	fp, sp, #0
   127a8:	sub	sp, sp, #28
   127ac:	str	r0, [fp, #-24]	; 0xffffffe8
   127b0:	str	r1, [fp, #-28]	; 0xffffffe4
   127b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127b8:	cmp	r3, #0
   127bc:	bne	127c8 <v_celebridade@@Base+0x28>
   127c0:	mvn	r3, #0
   127c4:	b	128a4 <v_celebridade@@Base+0x104>
   127c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127cc:	ldr	r2, [r3, #4]
   127d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   127d4:	lsl	r3, r3, #3
   127d8:	add	r3, r2, r3
   127dc:	ldr	r3, [r3]
   127e0:	cmp	r3, #0
   127e4:	beq	127f0 <v_celebridade@@Base+0x50>
   127e8:	mov	r3, #0
   127ec:	b	128a4 <v_celebridade@@Base+0x104>
   127f0:	mov	r3, #0
   127f4:	str	r3, [fp, #-12]
   127f8:	mov	r3, #0
   127fc:	str	r3, [fp, #-8]
   12800:	b	1286c <v_celebridade@@Base+0xcc>
   12804:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12808:	ldr	r2, [r3, #4]
   1280c:	ldr	r3, [fp, #-8]
   12810:	lsl	r3, r3, #3
   12814:	add	r3, r2, r3
   12818:	ldr	r3, [r3, #4]
   1281c:	str	r3, [fp, #-16]
   12820:	b	12854 <v_celebridade@@Base+0xb4>
   12824:	ldr	r3, [fp, #-16]
   12828:	ldr	r2, [r3]
   1282c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12830:	cmp	r2, r3
   12834:	bne	12848 <v_celebridade@@Base+0xa8>
   12838:	ldr	r3, [fp, #-12]
   1283c:	add	r3, r3, #1
   12840:	str	r3, [fp, #-12]
   12844:	b	12860 <v_celebridade@@Base+0xc0>
   12848:	ldr	r3, [fp, #-16]
   1284c:	ldr	r3, [r3, #4]
   12850:	str	r3, [fp, #-16]
   12854:	ldr	r3, [fp, #-16]
   12858:	cmp	r3, #0
   1285c:	bne	12824 <v_celebridade@@Base+0x84>
   12860:	ldr	r3, [fp, #-8]
   12864:	add	r3, r3, #1
   12868:	str	r3, [fp, #-8]
   1286c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12870:	ldr	r2, [r3]
   12874:	ldr	r3, [fp, #-8]
   12878:	cmp	r2, r3
   1287c:	bgt	12804 <v_celebridade@@Base+0x64>
   12880:	ldr	r3, [fp, #-12]
   12884:	add	r2, r3, #1
   12888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1288c:	ldr	r3, [r3]
   12890:	cmp	r2, r3
   12894:	bne	128a0 <v_celebridade@@Base+0x100>
   12898:	mov	r3, #1
   1289c:	b	128a4 <v_celebridade@@Base+0x104>
   128a0:	mov	r3, #0
   128a4:	mov	r0, r3
   128a8:	add	sp, fp, #0
   128ac:	pop	{fp}		; (ldr fp, [sp], #4)
   128b0:	bx	lr

000128b4 <vetor_novo@@Base>:
   128b4:	push	{fp, lr}
   128b8:	add	fp, sp, #4
   128bc:	sub	sp, sp, #8
   128c0:	mov	r0, #12
   128c4:	bl	10b04 <malloc@plt>
   128c8:	mov	r3, r0
   128cc:	str	r3, [fp, #-8]
   128d0:	ldr	r3, [fp, #-8]
   128d4:	cmp	r3, #0
   128d8:	bne	128e4 <vetor_novo@@Base+0x30>
   128dc:	mov	r3, #0
   128e0:	b	1290c <vetor_novo@@Base+0x58>
   128e4:	ldr	r3, [fp, #-8]
   128e8:	mov	r2, #0
   128ec:	str	r2, [r3]
   128f0:	ldr	r3, [fp, #-8]
   128f4:	mov	r2, #0
   128f8:	str	r2, [r3, #4]
   128fc:	ldr	r3, [fp, #-8]
   12900:	mov	r2, #0
   12904:	str	r2, [r3, #8]
   12908:	ldr	r3, [fp, #-8]
   1290c:	mov	r0, r3
   12910:	sub	sp, fp, #4
   12914:	pop	{fp, pc}

00012918 <vetor_apaga@@Base>:
   12918:	push	{fp, lr}
   1291c:	add	fp, sp, #4
   12920:	sub	sp, sp, #8
   12924:	str	r0, [fp, #-8]
   12928:	ldr	r3, [fp, #-8]
   1292c:	cmp	r3, #0
   12930:	beq	12950 <vetor_apaga@@Base+0x38>
   12934:	ldr	r3, [fp, #-8]
   12938:	ldr	r3, [r3, #8]
   1293c:	mov	r0, r3
   12940:	bl	10ae0 <free@plt>
   12944:	ldr	r0, [fp, #-8]
   12948:	bl	10ae0 <free@plt>
   1294c:	b	12954 <vetor_apaga@@Base+0x3c>
   12950:	nop			; (mov r0, r0)
   12954:	sub	sp, fp, #4
   12958:	pop	{fp, pc}

0001295c <vetor_atribui@@Base>:
   1295c:	push	{fp}		; (str fp, [sp, #-4]!)
   12960:	add	fp, sp, #0
   12964:	sub	sp, sp, #20
   12968:	str	r0, [fp, #-8]
   1296c:	str	r1, [fp, #-12]
   12970:	str	r2, [fp, #-16]
   12974:	ldr	r3, [fp, #-8]
   12978:	cmp	r3, #0
   1297c:	beq	129a0 <vetor_atribui@@Base+0x44>
   12980:	ldr	r3, [fp, #-12]
   12984:	cmp	r3, #0
   12988:	blt	129a0 <vetor_atribui@@Base+0x44>
   1298c:	ldr	r3, [fp, #-8]
   12990:	ldr	r2, [r3]
   12994:	ldr	r3, [fp, #-12]
   12998:	cmp	r2, r3
   1299c:	bgt	129a8 <vetor_atribui@@Base+0x4c>
   129a0:	mvn	r3, #0
   129a4:	b	129c8 <vetor_atribui@@Base+0x6c>
   129a8:	ldr	r3, [fp, #-8]
   129ac:	ldr	r2, [r3, #8]
   129b0:	ldr	r3, [fp, #-12]
   129b4:	lsl	r3, r3, #2
   129b8:	add	r3, r2, r3
   129bc:	ldr	r2, [fp, #-16]
   129c0:	str	r2, [r3]
   129c4:	ldr	r3, [fp, #-12]
   129c8:	mov	r0, r3
   129cc:	add	sp, fp, #0
   129d0:	pop	{fp}		; (ldr fp, [sp], #4)
   129d4:	bx	lr

000129d8 <vetor_tamanho@@Base>:
   129d8:	push	{fp}		; (str fp, [sp, #-4]!)
   129dc:	add	fp, sp, #0
   129e0:	sub	sp, sp, #12
   129e4:	str	r0, [fp, #-8]
   129e8:	ldr	r3, [fp, #-8]
   129ec:	cmp	r3, #0
   129f0:	bne	129fc <vetor_tamanho@@Base+0x24>
   129f4:	mvn	r3, #0
   129f8:	b	12a04 <vetor_tamanho@@Base+0x2c>
   129fc:	ldr	r3, [fp, #-8]
   12a00:	ldr	r3, [r3]
   12a04:	mov	r0, r3
   12a08:	add	sp, fp, #0
   12a0c:	pop	{fp}		; (ldr fp, [sp], #4)
   12a10:	bx	lr

00012a14 <vetor_elemento@@Base>:
   12a14:	push	{fp}		; (str fp, [sp, #-4]!)
   12a18:	add	fp, sp, #0
   12a1c:	sub	sp, sp, #12
   12a20:	str	r0, [fp, #-8]
   12a24:	str	r1, [fp, #-12]
   12a28:	ldr	r3, [fp, #-8]
   12a2c:	cmp	r3, #0
   12a30:	beq	12a54 <vetor_elemento@@Base+0x40>
   12a34:	ldr	r3, [fp, #-12]
   12a38:	cmp	r3, #0
   12a3c:	blt	12a54 <vetor_elemento@@Base+0x40>
   12a40:	ldr	r3, [fp, #-8]
   12a44:	ldr	r2, [r3]
   12a48:	ldr	r3, [fp, #-12]
   12a4c:	cmp	r2, r3
   12a50:	bgt	12a5c <vetor_elemento@@Base+0x48>
   12a54:	mov	r3, #-2147483648	; 0x80000000
   12a58:	b	12a74 <vetor_elemento@@Base+0x60>
   12a5c:	ldr	r3, [fp, #-8]
   12a60:	ldr	r2, [r3, #8]
   12a64:	ldr	r3, [fp, #-12]
   12a68:	lsl	r3, r3, #2
   12a6c:	add	r3, r2, r3
   12a70:	ldr	r3, [r3]
   12a74:	mov	r0, r3
   12a78:	add	sp, fp, #0
   12a7c:	pop	{fp}		; (ldr fp, [sp], #4)
   12a80:	bx	lr

00012a84 <vetor_insere@@Base>:
   12a84:	push	{fp, lr}
   12a88:	add	fp, sp, #4
   12a8c:	sub	sp, sp, #24
   12a90:	str	r0, [fp, #-16]
   12a94:	str	r1, [fp, #-20]	; 0xffffffec
   12a98:	str	r2, [fp, #-24]	; 0xffffffe8
   12a9c:	ldr	r3, [fp, #-16]
   12aa0:	cmp	r3, #0
   12aa4:	beq	12ac8 <vetor_insere@@Base+0x44>
   12aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12aac:	cmn	r3, #1
   12ab0:	blt	12ac8 <vetor_insere@@Base+0x44>
   12ab4:	ldr	r3, [fp, #-16]
   12ab8:	ldr	r2, [r3]
   12abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ac0:	cmp	r2, r3
   12ac4:	bge	12ad0 <vetor_insere@@Base+0x4c>
   12ac8:	mvn	r3, #0
   12acc:	b	12c10 <vetor_insere@@Base+0x18c>
   12ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ad4:	cmn	r3, #1
   12ad8:	bne	12ae8 <vetor_insere@@Base+0x64>
   12adc:	ldr	r3, [fp, #-16]
   12ae0:	ldr	r3, [r3]
   12ae4:	str	r3, [fp, #-24]	; 0xffffffe8
   12ae8:	ldr	r3, [fp, #-16]
   12aec:	ldr	r2, [r3]
   12af0:	ldr	r3, [fp, #-16]
   12af4:	ldr	r3, [r3, #4]
   12af8:	cmp	r2, r3
   12afc:	bne	12b78 <vetor_insere@@Base+0xf4>
   12b00:	ldr	r3, [fp, #-16]
   12b04:	ldr	r3, [r3, #4]
   12b08:	cmp	r3, #0
   12b0c:	bne	12b20 <vetor_insere@@Base+0x9c>
   12b10:	ldr	r3, [fp, #-16]
   12b14:	mov	r2, #1
   12b18:	str	r2, [r3, #4]
   12b1c:	b	12b34 <vetor_insere@@Base+0xb0>
   12b20:	ldr	r3, [fp, #-16]
   12b24:	ldr	r3, [r3, #4]
   12b28:	lsl	r2, r3, #1
   12b2c:	ldr	r3, [fp, #-16]
   12b30:	str	r2, [r3, #4]
   12b34:	ldr	r3, [fp, #-16]
   12b38:	ldr	r2, [r3, #8]
   12b3c:	ldr	r3, [fp, #-16]
   12b40:	ldr	r3, [r3, #4]
   12b44:	lsl	r3, r3, #2
   12b48:	mov	r1, r3
   12b4c:	mov	r0, r2
   12b50:	bl	10aec <realloc@plt>
   12b54:	mov	r2, r0
   12b58:	ldr	r3, [fp, #-16]
   12b5c:	str	r2, [r3, #8]
   12b60:	ldr	r3, [fp, #-16]
   12b64:	ldr	r3, [r3, #8]
   12b68:	cmp	r3, #0
   12b6c:	bne	12b78 <vetor_insere@@Base+0xf4>
   12b70:	mvn	r3, #0
   12b74:	b	12c10 <vetor_insere@@Base+0x18c>
   12b78:	ldr	r3, [fp, #-16]
   12b7c:	ldr	r3, [r3]
   12b80:	sub	r3, r3, #1
   12b84:	str	r3, [fp, #-8]
   12b88:	b	12bcc <vetor_insere@@Base+0x148>
   12b8c:	ldr	r3, [fp, #-16]
   12b90:	ldr	r2, [r3, #8]
   12b94:	ldr	r3, [fp, #-8]
   12b98:	add	r3, r3, #1
   12b9c:	lsl	r3, r3, #2
   12ba0:	add	r3, r2, r3
   12ba4:	ldr	r2, [fp, #-16]
   12ba8:	ldr	r1, [r2, #8]
   12bac:	ldr	r2, [fp, #-8]
   12bb0:	lsl	r2, r2, #2
   12bb4:	add	r2, r1, r2
   12bb8:	ldr	r2, [r2]
   12bbc:	str	r2, [r3]
   12bc0:	ldr	r3, [fp, #-8]
   12bc4:	sub	r3, r3, #1
   12bc8:	str	r3, [fp, #-8]
   12bcc:	ldr	r2, [fp, #-8]
   12bd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bd4:	cmp	r2, r3
   12bd8:	bge	12b8c <vetor_insere@@Base+0x108>
   12bdc:	ldr	r3, [fp, #-16]
   12be0:	ldr	r2, [r3, #8]
   12be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12be8:	lsl	r3, r3, #2
   12bec:	add	r3, r2, r3
   12bf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bf4:	str	r2, [r3]
   12bf8:	ldr	r3, [fp, #-16]
   12bfc:	ldr	r3, [r3]
   12c00:	add	r2, r3, #1
   12c04:	ldr	r3, [fp, #-16]
   12c08:	str	r2, [r3]
   12c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c10:	mov	r0, r3
   12c14:	sub	sp, fp, #4
   12c18:	pop	{fp, pc}

00012c1c <vetor_remove@@Base>:
   12c1c:	push	{fp}		; (str fp, [sp, #-4]!)
   12c20:	add	fp, sp, #0
   12c24:	sub	sp, sp, #20
   12c28:	str	r0, [fp, #-16]
   12c2c:	str	r1, [fp, #-20]	; 0xffffffec
   12c30:	ldr	r3, [fp, #-16]
   12c34:	cmp	r3, #0
   12c38:	beq	12c5c <vetor_remove@@Base+0x40>
   12c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c40:	cmp	r3, #0
   12c44:	blt	12c5c <vetor_remove@@Base+0x40>
   12c48:	ldr	r3, [fp, #-16]
   12c4c:	ldr	r2, [r3]
   12c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c54:	cmp	r2, r3
   12c58:	bgt	12c64 <vetor_remove@@Base+0x48>
   12c5c:	mvn	r3, #0
   12c60:	b	12ce0 <vetor_remove@@Base+0xc4>
   12c64:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c68:	add	r3, r3, #1
   12c6c:	str	r3, [fp, #-8]
   12c70:	b	12cb4 <vetor_remove@@Base+0x98>
   12c74:	ldr	r3, [fp, #-16]
   12c78:	ldr	r2, [r3, #8]
   12c7c:	ldr	r3, [fp, #-8]
   12c80:	sub	r3, r3, #-1073741823	; 0xc0000001
   12c84:	lsl	r3, r3, #2
   12c88:	add	r3, r2, r3
   12c8c:	ldr	r2, [fp, #-16]
   12c90:	ldr	r1, [r2, #8]
   12c94:	ldr	r2, [fp, #-8]
   12c98:	lsl	r2, r2, #2
   12c9c:	add	r2, r1, r2
   12ca0:	ldr	r2, [r2]
   12ca4:	str	r2, [r3]
   12ca8:	ldr	r3, [fp, #-8]
   12cac:	add	r3, r3, #1
   12cb0:	str	r3, [fp, #-8]
   12cb4:	ldr	r3, [fp, #-16]
   12cb8:	ldr	r2, [r3]
   12cbc:	ldr	r3, [fp, #-8]
   12cc0:	cmp	r2, r3
   12cc4:	bgt	12c74 <vetor_remove@@Base+0x58>
   12cc8:	ldr	r3, [fp, #-16]
   12ccc:	ldr	r3, [r3]
   12cd0:	sub	r2, r3, #1
   12cd4:	ldr	r3, [fp, #-16]
   12cd8:	str	r2, [r3]
   12cdc:	mov	r3, #0
   12ce0:	mov	r0, r3
   12ce4:	add	sp, fp, #0
   12ce8:	pop	{fp}		; (ldr fp, [sp], #4)
   12cec:	bx	lr

00012cf0 <vetor_pesquisa@@Base>:
   12cf0:	push	{fp}		; (str fp, [sp, #-4]!)
   12cf4:	add	fp, sp, #0
   12cf8:	sub	sp, sp, #20
   12cfc:	str	r0, [fp, #-16]
   12d00:	str	r1, [fp, #-20]	; 0xffffffec
   12d04:	ldr	r3, [fp, #-16]
   12d08:	cmp	r3, #0
   12d0c:	bne	12d18 <vetor_pesquisa@@Base+0x28>
   12d10:	mvn	r3, #0
   12d14:	b	12d74 <vetor_pesquisa@@Base+0x84>
   12d18:	mov	r3, #0
   12d1c:	str	r3, [fp, #-8]
   12d20:	b	12d5c <vetor_pesquisa@@Base+0x6c>
   12d24:	ldr	r3, [fp, #-16]
   12d28:	ldr	r2, [r3, #8]
   12d2c:	ldr	r3, [fp, #-8]
   12d30:	lsl	r3, r3, #2
   12d34:	add	r3, r2, r3
   12d38:	ldr	r2, [r3]
   12d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d40:	cmp	r2, r3
   12d44:	bne	12d50 <vetor_pesquisa@@Base+0x60>
   12d48:	ldr	r3, [fp, #-8]
   12d4c:	b	12d74 <vetor_pesquisa@@Base+0x84>
   12d50:	ldr	r3, [fp, #-8]
   12d54:	add	r3, r3, #1
   12d58:	str	r3, [fp, #-8]
   12d5c:	ldr	r3, [fp, #-16]
   12d60:	ldr	r2, [r3]
   12d64:	ldr	r3, [fp, #-8]
   12d68:	cmp	r2, r3
   12d6c:	bgt	12d24 <vetor_pesquisa@@Base+0x34>
   12d70:	mvn	r3, #0
   12d74:	mov	r0, r3
   12d78:	add	sp, fp, #0
   12d7c:	pop	{fp}		; (ldr fp, [sp], #4)
   12d80:	bx	lr

00012d84 <vetor_ordena@@Base>:
   12d84:	push	{fp}		; (str fp, [sp, #-4]!)
   12d88:	add	fp, sp, #0
   12d8c:	sub	sp, sp, #28
   12d90:	str	r0, [fp, #-24]	; 0xffffffe8
   12d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d98:	cmp	r3, #0
   12d9c:	bne	12da8 <vetor_ordena@@Base+0x24>
   12da0:	mvn	r3, #0
   12da4:	b	12e90 <vetor_ordena@@Base+0x10c>
   12da8:	mov	r3, #1
   12dac:	str	r3, [fp, #-8]
   12db0:	b	12e78 <vetor_ordena@@Base+0xf4>
   12db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12db8:	ldr	r2, [r3, #8]
   12dbc:	ldr	r3, [fp, #-8]
   12dc0:	lsl	r3, r3, #2
   12dc4:	add	r3, r2, r3
   12dc8:	ldr	r3, [r3]
   12dcc:	str	r3, [fp, #-16]
   12dd0:	ldr	r3, [fp, #-8]
   12dd4:	str	r3, [fp, #-12]
   12dd8:	b	12e1c <vetor_ordena@@Base+0x98>
   12ddc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12de0:	ldr	r2, [r3, #8]
   12de4:	ldr	r3, [fp, #-12]
   12de8:	lsl	r3, r3, #2
   12dec:	add	r3, r2, r3
   12df0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12df4:	ldr	r1, [r2, #8]
   12df8:	ldr	r2, [fp, #-12]
   12dfc:	sub	r2, r2, #-1073741823	; 0xc0000001
   12e00:	lsl	r2, r2, #2
   12e04:	add	r2, r1, r2
   12e08:	ldr	r2, [r2]
   12e0c:	str	r2, [r3]
   12e10:	ldr	r3, [fp, #-12]
   12e14:	sub	r3, r3, #1
   12e18:	str	r3, [fp, #-12]
   12e1c:	ldr	r3, [fp, #-12]
   12e20:	cmp	r3, #0
   12e24:	ble	12e50 <vetor_ordena@@Base+0xcc>
   12e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e2c:	ldr	r2, [r3, #8]
   12e30:	ldr	r3, [fp, #-12]
   12e34:	sub	r3, r3, #-1073741823	; 0xc0000001
   12e38:	lsl	r3, r3, #2
   12e3c:	add	r3, r2, r3
   12e40:	ldr	r2, [r3]
   12e44:	ldr	r3, [fp, #-16]
   12e48:	cmp	r2, r3
   12e4c:	bgt	12ddc <vetor_ordena@@Base+0x58>
   12e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e54:	ldr	r2, [r3, #8]
   12e58:	ldr	r3, [fp, #-12]
   12e5c:	lsl	r3, r3, #2
   12e60:	add	r3, r2, r3
   12e64:	ldr	r2, [fp, #-16]
   12e68:	str	r2, [r3]
   12e6c:	ldr	r3, [fp, #-8]
   12e70:	add	r3, r3, #1
   12e74:	str	r3, [fp, #-8]
   12e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e7c:	ldr	r2, [r3]
   12e80:	ldr	r3, [fp, #-8]
   12e84:	cmp	r2, r3
   12e88:	bgt	12db4 <vetor_ordena@@Base+0x30>
   12e8c:	mov	r3, #0
   12e90:	mov	r0, r3
   12e94:	add	sp, fp, #0
   12e98:	pop	{fp}		; (ldr fp, [sp], #4)
   12e9c:	bx	lr

00012ea0 <__libc_csu_init@@Base>:
   12ea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ea4:	mov	r7, r0
   12ea8:	ldr	r6, [pc, #72]	; 12ef8 <__libc_csu_init@@Base+0x58>
   12eac:	ldr	r5, [pc, #72]	; 12efc <__libc_csu_init@@Base+0x5c>
   12eb0:	add	r6, pc, r6
   12eb4:	add	r5, pc, r5
   12eb8:	sub	r6, r6, r5
   12ebc:	mov	r8, r1
   12ec0:	mov	r9, r2
   12ec4:	bl	10aa8 <calloc@plt-0x20>
   12ec8:	asrs	r6, r6, #2
   12ecc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ed0:	mov	r4, #0
   12ed4:	add	r4, r4, #1
   12ed8:	ldr	r3, [r5], #4
   12edc:	mov	r2, r9
   12ee0:	mov	r1, r8
   12ee4:	mov	r0, r7
   12ee8:	blx	r3
   12eec:	cmp	r6, r4
   12ef0:	bne	12ed4 <__libc_csu_init@@Base+0x34>
   12ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ef8:	andeq	r1, r1, r8, asr r0
   12efc:	andeq	r1, r1, r0, asr r0

00012f00 <__libc_csu_fini@@Base>:
   12f00:	bx	lr

Disassembly of section .fini:

00012f04 <.fini>:
   12f04:	push	{r3, lr}
   12f08:	pop	{r3, pc}
