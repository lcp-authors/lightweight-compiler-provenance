
../compcert-repos/prog2/CMakeFiles/2.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/02.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #12
   8:	sub	sp, sp, #96	; 0x60
   c:	mov	r0, #12
  10:	bl	0 <malloc>
  14:	mov	r3, r0
  18:	str	r3, [fp, #-20]	; 0xffffffec
  1c:	mov	r3, #0
  20:	str	r3, [fp, #-16]
  24:	b	4c <main+0x4c>
  28:	ldr	r3, [fp, #-16]
  2c:	lsl	r3, r3, #2
  30:	ldr	r2, [fp, #-20]	; 0xffffffec
  34:	add	r3, r2, r3
  38:	mov	r2, #0
  3c:	str	r2, [r3]
  40:	ldr	r3, [fp, #-16]
  44:	add	r3, r3, #1
  48:	str	r3, [fp, #-16]
  4c:	ldr	r3, [fp, #-16]
  50:	cmp	r3, #2
  54:	ble	28 <main+0x28>
  58:	mov	r3, #0
  5c:	str	r3, [fp, #-16]
  60:	b	c8 <main+0xc8>
  64:	ldr	r3, [fp, #-16]
  68:	add	r3, r3, #1
  6c:	mov	r1, r3
  70:	ldr	r0, [pc, #448]	; 238 <main+0x238>
  74:	bl	0 <printf>
  78:	ldr	r3, [fp, #-16]
  7c:	lsl	r3, r3, #2
  80:	ldr	r2, [fp, #-20]	; 0xffffffec
  84:	add	r3, r2, r3
  88:	ldr	r3, [r3]
  8c:	cmp	r3, #0
  90:	bne	a0 <main+0xa0>
  94:	ldr	r0, [pc, #416]	; 23c <main+0x23c>
  98:	bl	0 <puts>
  9c:	b	bc <main+0xbc>
  a0:	ldr	r3, [fp, #-16]
  a4:	lsl	r3, r3, #2
  a8:	ldr	r2, [fp, #-20]	; 0xffffffec
  ac:	add	r3, r2, r3
  b0:	ldr	r3, [r3]
  b4:	mov	r0, r3
  b8:	bl	0 <puts>
  bc:	ldr	r3, [fp, #-16]
  c0:	add	r3, r3, #1
  c4:	str	r3, [fp, #-16]
  c8:	ldr	r3, [fp, #-16]
  cc:	cmp	r3, #2
  d0:	ble	64 <main+0x64>
  d4:	mov	r1, #3
  d8:	ldr	r0, [pc, #352]	; 240 <main+0x240>
  dc:	bl	0 <printf>
  e0:	sub	r3, fp, #104	; 0x68
  e4:	mov	r1, r3
  e8:	ldr	r0, [pc, #340]	; 244 <main+0x244>
  ec:	bl	0 <__isoc99_scanf>
  f0:	bl	0 <getchar>
  f4:	ldr	r3, [fp, #-104]	; 0xffffff98
  f8:	cmp	r3, #0
  fc:	blt	d4 <main+0xd4>
 100:	ldr	r3, [fp, #-104]	; 0xffffff98
 104:	cmp	r3, #3
 108:	bgt	d4 <main+0xd4>
 10c:	ldr	r3, [fp, #-104]	; 0xffffff98
 110:	cmp	r3, #0
 114:	beq	1dc <main+0x1dc>
 118:	ldr	r0, [pc, #296]	; 248 <main+0x248>
 11c:	bl	0 <printf>
 120:	ldr	r3, [pc, #292]	; 24c <main+0x24c>
 124:	ldr	r2, [r3]
 128:	sub	r3, fp, #100	; 0x64
 12c:	mov	r1, #80	; 0x50
 130:	mov	r0, r3
 134:	bl	0 <fgets>
 138:	sub	r3, fp, #100	; 0x64
 13c:	mov	r0, r3
 140:	bl	0 <strlen>
 144:	mov	r3, r0
 148:	sub	r3, r3, #1
 14c:	sub	r2, fp, #12
 150:	add	r3, r2, r3
 154:	mov	r2, #0
 158:	strb	r2, [r3, #-88]	; 0xffffffa8
 15c:	ldr	r3, [fp, #-104]	; 0xffffff98
 160:	sub	r3, r3, #-1073741823	; 0xc0000001
 164:	lsl	r3, r3, #2
 168:	ldr	r2, [fp, #-20]	; 0xffffffec
 16c:	add	r4, r2, r3
 170:	ldr	r3, [fp, #-104]	; 0xffffff98
 174:	sub	r3, r3, #-1073741823	; 0xc0000001
 178:	lsl	r3, r3, #2
 17c:	ldr	r2, [fp, #-20]	; 0xffffffec
 180:	add	r3, r2, r3
 184:	ldr	r5, [r3]
 188:	sub	r3, fp, #100	; 0x64
 18c:	mov	r0, r3
 190:	bl	0 <strlen>
 194:	mov	r3, r0
 198:	add	r3, r3, #1
 19c:	mov	r1, r3
 1a0:	mov	r0, r5
 1a4:	bl	0 <realloc>
 1a8:	mov	r3, r0
 1ac:	str	r3, [r4]
 1b0:	ldr	r3, [fp, #-104]	; 0xffffff98
 1b4:	sub	r3, r3, #-1073741823	; 0xc0000001
 1b8:	lsl	r3, r3, #2
 1bc:	ldr	r2, [fp, #-20]	; 0xffffffec
 1c0:	add	r3, r2, r3
 1c4:	ldr	r3, [r3]
 1c8:	sub	r2, fp, #100	; 0x64
 1cc:	mov	r1, r2
 1d0:	mov	r0, r3
 1d4:	bl	0 <strcpy>
 1d8:	b	58 <main+0x58>
 1dc:	nop			; (mov r0, r0)
 1e0:	mov	r3, #0
 1e4:	str	r3, [fp, #-16]
 1e8:	b	214 <main+0x214>
 1ec:	ldr	r3, [fp, #-16]
 1f0:	lsl	r3, r3, #2
 1f4:	ldr	r2, [fp, #-20]	; 0xffffffec
 1f8:	add	r3, r2, r3
 1fc:	ldr	r3, [r3]
 200:	mov	r0, r3
 204:	bl	0 <free>
 208:	ldr	r3, [fp, #-16]
 20c:	add	r3, r3, #1
 210:	str	r3, [fp, #-16]
 214:	ldr	r3, [fp, #-16]
 218:	cmp	r3, #2
 21c:	ble	1ec <main+0x1ec>
 220:	ldr	r0, [fp, #-20]	; 0xffffffec
 224:	bl	0 <free>
 228:	mov	r3, #0
 22c:	mov	r0, r3
 230:	sub	sp, fp, #12
 234:	pop	{r4, r5, fp, pc}
 238:	.word	0x00000000
 23c:	.word	0x00000008
 240:	.word	0x00000010
 244:	.word	0x00000034
 248:	.word	0x00000038
 24c:	.word	0x00000000
