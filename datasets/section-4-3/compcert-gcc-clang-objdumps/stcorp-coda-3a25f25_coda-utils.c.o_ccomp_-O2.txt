
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-utils.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_format_from_string>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #16
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	str	r4, [sp, #8]
      14:	str	r5, [sp, #12]
      18:	mov	r5, r1
      1c:	mov	r4, r0
      20:	ldr	r1, [pc, #376]	; 1a0 <coda_format_from_string+0x1a0>
      24:	mov	r0, r4
      28:	bl	0 <strcmp>
      2c:	cmp	r0, #0
      30:	beq	170 <coda_format_from_string+0x170>
      34:	ldr	r1, [pc, #340]	; 190 <coda_format_from_string+0x190>
      38:	mov	r0, r4
      3c:	bl	0 <strcmp>
      40:	cmp	r0, #0
      44:	beq	164 <coda_format_from_string+0x164>
      48:	ldr	r1, [pc, #348]	; 1ac <coda_format_from_string+0x1ac>
      4c:	mov	r0, r4
      50:	bl	0 <strcmp>
      54:	cmp	r0, #0
      58:	beq	158 <coda_format_from_string+0x158>
      5c:	ldr	r1, [pc, #312]	; 19c <coda_format_from_string+0x19c>
      60:	mov	r0, r4
      64:	bl	0 <strcmp>
      68:	cmp	r0, #0
      6c:	beq	14c <coda_format_from_string+0x14c>
      70:	ldr	r1, [pc, #304]	; 1a8 <coda_format_from_string+0x1a8>
      74:	mov	r0, r4
      78:	bl	0 <strcmp>
      7c:	cmp	r0, #0
      80:	beq	140 <coda_format_from_string+0x140>
      84:	ldr	r1, [pc, #268]	; 198 <coda_format_from_string+0x198>
      88:	mov	r0, r4
      8c:	bl	0 <strcmp>
      90:	cmp	r0, #0
      94:	beq	134 <coda_format_from_string+0x134>
      98:	ldr	r1, [pc, #280]	; 1b8 <coda_format_from_string+0x1b8>
      9c:	mov	r0, r4
      a0:	bl	0 <strcmp>
      a4:	cmp	r0, #0
      a8:	beq	128 <coda_format_from_string+0x128>
      ac:	ldr	r1, [pc, #252]	; 1b0 <coda_format_from_string+0x1b0>
      b0:	mov	r0, r4
      b4:	bl	0 <strcmp>
      b8:	cmp	r0, #0
      bc:	beq	11c <coda_format_from_string+0x11c>
      c0:	ldr	r1, [pc, #204]	; 194 <coda_format_from_string+0x194>
      c4:	mov	r0, r4
      c8:	bl	0 <strcmp>
      cc:	cmp	r0, #0
      d0:	beq	110 <coda_format_from_string+0x110>
      d4:	ldr	r1, [pc, #216]	; 1b4 <coda_format_from_string+0x1b4>
      d8:	mov	r0, r4
      dc:	bl	0 <strcmp>
      e0:	cmp	r0, #0
      e4:	beq	104 <coda_format_from_string+0x104>
      e8:	movw	r0, #65136	; 0xfe70
      ec:	movt	r0, #65535	; 0xffff
      f0:	ldr	r1, [pc, #172]	; 1a4 <coda_format_from_string+0x1a4>
      f4:	mov	r2, r4
      f8:	bl	0 <coda_set_error>
      fc:	mvn	r0, #0
     100:	b	17c <coda_format_from_string+0x17c>
     104:	mov	r0, #9
     108:	str	r0, [r5]
     10c:	b	178 <coda_format_from_string+0x178>
     110:	mov	r3, #8
     114:	str	r3, [r5]
     118:	b	178 <coda_format_from_string+0x178>
     11c:	mov	r1, #7
     120:	str	r1, [r5]
     124:	b	178 <coda_format_from_string+0x178>
     128:	mov	r0, #6
     12c:	str	r0, [r5]
     130:	b	178 <coda_format_from_string+0x178>
     134:	mov	ip, #5
     138:	str	ip, [r5]
     13c:	b	178 <coda_format_from_string+0x178>
     140:	mov	r0, #4
     144:	str	r0, [r5]
     148:	b	178 <coda_format_from_string+0x178>
     14c:	mov	r1, #3
     150:	str	r1, [r5]
     154:	b	178 <coda_format_from_string+0x178>
     158:	mov	r3, #2
     15c:	str	r3, [r5]
     160:	b	178 <coda_format_from_string+0x178>
     164:	mov	r0, #1
     168:	str	r0, [r5]
     16c:	b	178 <coda_format_from_string+0x178>
     170:	mov	r2, #0
     174:	str	r2, [r5]
     178:	mov	r0, #0
     17c:	ldr	r4, [sp, #8]
     180:	ldr	r5, [sp, #12]
     184:	ldr	lr, [sp, #4]
     188:	add	sp, sp, #16
     18c:	bx	lr
     190:	.word	0x000000ad
     194:	.word	0x0000007e
     198:	.word	0x00000198
     19c:	.word	0x0000008a
     1a0:	.word	0x0000008f
     1a4:	.word	0x00000101
     1a8:	.word	0x00000000
     1ac:	.word	0x000000fd
     1b0:	.word	0x0000000e
     1b4:	.word	0x0000000a
     1b8:	.word	0x000000c8

000001bc <coda_element_name_from_xml_name>:
     1bc:	mov	ip, sp
     1c0:	sub	sp, sp, #8
     1c4:	str	ip, [sp]
     1c8:	str	lr, [sp, #4]
     1cc:	mov	r1, r0
     1d0:	ldrb	r2, [r1]
     1d4:	cmp	r2, #32
     1d8:	beq	1ec <coda_element_name_from_xml_name+0x30>
     1dc:	cmp	r2, #0
     1e0:	beq	1ec <coda_element_name_from_xml_name+0x30>
     1e4:	add	r1, r1, #1
     1e8:	b	1d0 <coda_element_name_from_xml_name+0x14>
     1ec:	ldrb	r2, [r1]
     1f0:	cmp	r2, #0
     1f4:	beq	1fc <coda_element_name_from_xml_name+0x40>
     1f8:	add	r0, r1, #1
     1fc:	ldr	lr, [sp, #4]
     200:	add	sp, sp, #8
     204:	bx	lr

00000208 <coda_is_identifier>:
     208:	mov	ip, sp
     20c:	sub	sp, sp, #16
     210:	str	ip, [sp]
     214:	str	lr, [sp, #4]
     218:	str	r4, [sp, #8]
     21c:	str	r5, [sp, #12]
     220:	mov	r4, r0
     224:	cmp	r4, #0
     228:	bne	234 <coda_is_identifier+0x2c>
     22c:	mov	r0, #0
     230:	b	2a8 <coda_is_identifier+0xa0>
     234:	bl	0 <__ctype_b_loc>
     238:	ldr	r1, [r0]
     23c:	ldrb	r3, [r4]
     240:	add	ip, r1, r3, lsl #1
     244:	ldrh	ip, [ip]
     248:	and	r0, ip, #1024	; 0x400
     24c:	cmp	r0, #0
     250:	bne	25c <coda_is_identifier+0x54>
     254:	mov	r0, #0
     258:	b	2a8 <coda_is_identifier+0xa0>
     25c:	mov	r5, #1
     260:	ldrb	r2, [r4, r5]
     264:	cmp	r2, #0
     268:	beq	2a4 <coda_is_identifier+0x9c>
     26c:	bl	0 <__ctype_b_loc>
     270:	ldr	r2, [r0]
     274:	ldrb	r0, [r4, r5]
     278:	add	r3, r2, r0, lsl #1
     27c:	ldrh	r1, [r3]
     280:	and	r1, r1, #8
     284:	cmp	r1, #0
     288:	bne	29c <coda_is_identifier+0x94>
     28c:	cmp	r0, #95	; 0x5f
     290:	beq	29c <coda_is_identifier+0x94>
     294:	mov	r0, #0
     298:	b	2a8 <coda_is_identifier+0xa0>
     29c:	add	r5, r5, #1
     2a0:	b	260 <coda_is_identifier+0x58>
     2a4:	mov	r0, #1
     2a8:	ldr	r4, [sp, #8]
     2ac:	ldr	r5, [sp, #12]
     2b0:	ldr	lr, [sp, #4]
     2b4:	add	sp, sp, #16
     2b8:	bx	lr

000002bc <coda_identifier_from_name>:
     2bc:	mov	ip, sp
     2c0:	sub	sp, sp, #40	; 0x28
     2c4:	str	ip, [sp, #4]
     2c8:	str	lr, [sp, #8]
     2cc:	str	r4, [sp, #16]
     2d0:	str	r5, [sp, #20]
     2d4:	str	r6, [sp, #24]
     2d8:	str	r7, [sp, #28]
     2dc:	str	r8, [sp, #32]
     2e0:	mov	r5, r1
     2e4:	mov	r4, r0
     2e8:	cmp	r4, #0
     2ec:	beq	33c <coda_identifier_from_name+0x80>
     2f0:	ldrb	r0, [r4]
     2f4:	cmp	r0, #0
     2f8:	beq	324 <coda_identifier_from_name+0x68>
     2fc:	bl	0 <__ctype_b_loc>
     300:	ldr	r1, [r0]
     304:	ldrb	r2, [r4]
     308:	add	ip, r1, r2, lsl #1
     30c:	ldrh	r3, [ip]
     310:	and	r2, r3, #1024	; 0x400
     314:	cmp	r2, #0
     318:	bne	324 <coda_identifier_from_name+0x68>
     31c:	add	r4, r4, #1
     320:	b	2f0 <coda_identifier_from_name+0x34>
     324:	ldr	r2, [pc, #308]	; 460 <coda_identifier_from_name+0x1a4>
     328:	ldrb	ip, [r4]
     32c:	cmp	ip, #0
     330:	moveq	r4, r2
     334:	movne	r4, r4
     338:	b	340 <coda_identifier_from_name+0x84>
     33c:	ldr	r4, [pc, #284]	; 460 <coda_identifier_from_name+0x1a4>
     340:	mov	r0, r4
     344:	bl	0 <strlen>
     348:	mov	r6, r0
     34c:	add	r0, r6, #5
     350:	bl	0 <malloc>
     354:	mov	r7, r0
     358:	cmp	r7, #0
     35c:	bne	384 <coda_identifier_from_name+0xc8>
     360:	mvn	r0, #0
     364:	ldr	r1, [pc, #240]	; 45c <coda_identifier_from_name+0x1a0>
     368:	add	r2, r6, #4
     36c:	ldr	r3, [pc, #228]	; 458 <coda_identifier_from_name+0x19c>
     370:	mov	ip, #172	; 0xac
     374:	str	ip, [sp]
     378:	bl	0 <coda_set_error>
     37c:	mov	r0, #0
     380:	b	430 <coda_identifier_from_name+0x174>
     384:	ldrb	r1, [r4]
     388:	strb	r1, [r7]
     38c:	mov	r8, #1
     390:	cmp	r8, r6
     394:	bge	3d0 <coda_identifier_from_name+0x114>
     398:	bl	0 <__ctype_b_loc>
     39c:	ldr	r3, [r0]
     3a0:	ldrb	r0, [r4, r8]
     3a4:	add	r1, r3, r0, lsl #1
     3a8:	ldrh	r2, [r1]
     3ac:	and	r1, r2, #8
     3b0:	cmp	r1, #0
     3b4:	beq	3c0 <coda_identifier_from_name+0x104>
     3b8:	strb	r0, [r7, r8]
     3bc:	b	3c8 <coda_identifier_from_name+0x10c>
     3c0:	mov	r3, #95	; 0x5f
     3c4:	strb	r3, [r7, r8]
     3c8:	add	r8, r8, #1
     3cc:	b	390 <coda_identifier_from_name+0xd4>
     3d0:	mov	ip, #0
     3d4:	strb	ip, [r7, r6]
     3d8:	cmp	r5, #0
     3dc:	beq	42c <coda_identifier_from_name+0x170>
     3e0:	mov	r4, #0
     3e4:	mov	r1, r7
     3e8:	mov	r0, r5
     3ec:	bl	0 <coda_hashtable_get_index_from_name>
     3f0:	cmp	r0, #0
     3f4:	blt	42c <coda_identifier_from_name+0x170>
     3f8:	add	r4, r4, #1
     3fc:	cmp	r4, #1000	; 0x3e8
     400:	blt	418 <coda_identifier_from_name+0x15c>
     404:	ldr	r0, [pc, #88]	; 464 <coda_identifier_from_name+0x1a8>
     408:	ldr	r1, [pc, #72]	; 458 <coda_identifier_from_name+0x19c>
     40c:	mov	r2, #203	; 0xcb
     410:	ldr	r3, [pc, #60]	; 454 <coda_identifier_from_name+0x198>
     414:	bl	0 <__assert_fail>
     418:	add	r0, r7, r6
     41c:	ldr	r1, [pc, #44]	; 450 <coda_identifier_from_name+0x194>
     420:	mov	r2, r4
     424:	bl	0 <sprintf>
     428:	b	3e4 <coda_identifier_from_name+0x128>
     42c:	mov	r0, r7
     430:	ldr	r4, [sp, #16]
     434:	ldr	r5, [sp, #20]
     438:	ldr	r6, [sp, #24]
     43c:	ldr	r7, [sp, #28]
     440:	ldr	r8, [sp, #32]
     444:	ldr	lr, [sp, #8]
     448:	add	sp, sp, #40	; 0x28
     44c:	bx	lr
     450:	.word	0x00000095
     454:	.word	0x0000019c
     458:	.word	0x00000024
     45c:	.word	0x0000015e
     460:	.word	0x0000001c
     464:	.word	0x0000009e

00000468 <coda_c_index_to_fortran_index>:
     468:	mov	ip, sp
     46c:	sub	sp, sp, #64	; 0x40
     470:	str	ip, [sp]
     474:	str	lr, [sp, #4]
     478:	str	r4, [sp, #8]
     47c:	str	r5, [sp, #12]
     480:	str	r6, [sp, #16]
     484:	str	r7, [sp, #20]
     488:	str	r8, [sp, #24]
     48c:	str	r9, [sp, #28]
     490:	mov	r7, r1
     494:	mov	r4, r0
     498:	cmp	r4, #8
     49c:	ble	4bc <coda_c_index_to_fortran_index+0x54>
     4a0:	mvn	r0, #99	; 0x63
     4a4:	ldr	r1, [pc, #160]	; 54c <coda_c_index_to_fortran_index+0xe4>
     4a8:	mov	r3, #8
     4ac:	mov	r2, r4
     4b0:	bl	0 <coda_set_error>
     4b4:	mvn	r0, #0
     4b8:	b	528 <coda_c_index_to_fortran_index+0xc0>
     4bc:	sub	r9, r4, #1
     4c0:	cmp	r9, #0
     4c4:	blt	4f8 <coda_c_index_to_fortran_index+0x90>
     4c8:	add	r8, sp, #32
     4cc:	mov	r5, r2
     4d0:	ldr	r6, [r7, r9, lsl #2]
     4d4:	mov	r0, r5
     4d8:	mov	r1, r6
     4dc:	bl	0 <__aeabi_idiv>
     4e0:	mul	r3, r0, r6
     4e4:	sub	ip, r5, r3
     4e8:	str	ip, [r8, r9, lsl #2]
     4ec:	mov	r2, r0
     4f0:	sub	r9, r9, #1
     4f4:	b	4c0 <coda_c_index_to_fortran_index+0x58>
     4f8:	mov	r0, #0
     4fc:	mov	ip, #1
     500:	mov	r3, #0
     504:	cmp	r3, r4
     508:	bge	528 <coda_c_index_to_fortran_index+0xc0>
     50c:	add	r2, sp, #32
     510:	ldr	r1, [r2, r3, lsl #2]
     514:	mla	r0, ip, r1, r0
     518:	ldr	r1, [r7, r3, lsl #2]
     51c:	mul	ip, ip, r1
     520:	add	r3, r3, #1
     524:	b	504 <coda_c_index_to_fortran_index+0x9c>
     528:	ldr	r4, [sp, #8]
     52c:	ldr	r5, [sp, #12]
     530:	ldr	r6, [sp, #16]
     534:	ldr	r7, [sp, #20]
     538:	ldr	r8, [sp, #24]
     53c:	ldr	r9, [sp, #28]
     540:	ldr	lr, [sp, #4]
     544:	add	sp, sp, #64	; 0x40
     548:	bx	lr
     54c:	.word	0x000000d3

00000550 <coda_path_find_file>:
     550:	mov	ip, sp
     554:	sub	sp, sp, #136	; 0x88
     558:	str	ip, [sp]
     55c:	str	lr, [sp, #4]
     560:	str	r4, [sp, #12]
     564:	str	r5, [sp, #16]
     568:	str	r6, [sp, #20]
     56c:	str	r7, [sp, #24]
     570:	str	r8, [sp, #28]
     574:	str	r9, [sp, #32]
     578:	str	sl, [sp, #36]	; 0x24
     57c:	str	fp, [sp, #40]	; 0x28
     580:	mov	r4, r2
     584:	str	r1, [sp, #8]
     588:	mov	r5, r0
     58c:	mov	r6, #0
     590:	mov	fp, #0
     594:	ldr	r0, [sp, #8]
     598:	bl	0 <strlen>
     59c:	mov	r7, r0
     5a0:	cmp	r5, #0
     5a4:	beq	710 <coda_path_find_file+0x1c0>
     5a8:	ldrb	r1, [r5]
     5ac:	cmp	r1, #0
     5b0:	beq	710 <coda_path_find_file+0x1c0>
     5b4:	mov	r0, r5
     5b8:	bl	0 <strdup>
     5bc:	mov	sl, r0
     5c0:	cmp	sl, #0
     5c4:	bne	5e4 <coda_path_find_file+0x94>
     5c8:	mvn	r0, #0
     5cc:	ldr	r1, [pc, #380]	; 750 <coda_path_find_file+0x200>
     5d0:	ldr	r2, [pc, #372]	; 74c <coda_path_find_file+0x1fc>
     5d4:	movw	r3, #391	; 0x187
     5d8:	bl	0 <coda_set_error>
     5dc:	mvn	r0, #0
     5e0:	b	71c <coda_path_find_file+0x1cc>
     5e4:	mov	r9, sl
     5e8:	ldrb	r0, [r9]
     5ec:	cmp	r0, #0
     5f0:	beq	6e8 <coda_path_find_file+0x198>
     5f4:	mov	r5, r9
     5f8:	ldrb	r1, [r5]
     5fc:	cmp	r1, #0
     600:	beq	614 <coda_path_find_file+0xc4>
     604:	cmp	r1, #58	; 0x3a
     608:	beq	614 <coda_path_find_file+0xc4>
     60c:	add	r5, r5, #1
     610:	b	5f8 <coda_path_find_file+0xa8>
     614:	ldrb	r3, [r5]
     618:	cmp	r3, #0
     61c:	beq	62c <coda_path_find_file+0xdc>
     620:	mov	r2, #0
     624:	strb	r2, [r5]
     628:	add	r5, r5, #1
     62c:	mov	r0, r9
     630:	bl	0 <strlen>
     634:	mov	r8, r0
     638:	add	r2, r8, r7
     63c:	add	r3, r2, #1
     640:	cmp	fp, r3
     644:	bge	694 <coda_path_find_file+0x144>
     648:	add	r1, r2, #2
     64c:	mov	r0, r6
     650:	bl	0 <realloc>
     654:	cmp	r0, #0
     658:	bne	688 <coda_path_find_file+0x138>
     65c:	mvn	r0, #0
     660:	ldr	r1, [pc, #232]	; 750 <coda_path_find_file+0x200>
     664:	ldr	r2, [pc, #224]	; 74c <coda_path_find_file+0x1fc>
     668:	movw	r3, #421	; 0x1a5
     66c:	bl	0 <coda_set_error>
     670:	cmp	r6, #0
     674:	beq	680 <coda_path_find_file+0x130>
     678:	mov	r0, r6
     67c:	bl	0 <free>
     680:	mvn	r0, #0
     684:	b	71c <coda_path_find_file+0x1cc>
     688:	mov	r6, r0
     68c:	add	r1, r8, r7
     690:	add	fp, r1, #1
     694:	ldr	r1, [pc, #172]	; 748 <coda_path_find_file+0x1f8>
     698:	ldr	r3, [sp, #8]
     69c:	mov	r2, r9
     6a0:	mov	r0, r6
     6a4:	bl	0 <sprintf>
     6a8:	add	r1, sp, #48	; 0x30
     6ac:	mov	r0, r6
     6b0:	bl	0 <stat>
     6b4:	cmp	r0, #0
     6b8:	bne	6e0 <coda_path_find_file+0x190>
     6bc:	ldr	r3, [sp, #64]	; 0x40
     6c0:	and	r0, r3, #32768	; 0x8000
     6c4:	cmp	r0, #0
     6c8:	beq	6e0 <coda_path_find_file+0x190>
     6cc:	str	r6, [r4]
     6d0:	mov	r0, sl
     6d4:	bl	0 <free>
     6d8:	mov	r0, #0
     6dc:	b	71c <coda_path_find_file+0x1cc>
     6e0:	mov	r9, r5
     6e4:	b	5e8 <coda_path_find_file+0x98>
     6e8:	cmp	r6, #0
     6ec:	beq	6f8 <coda_path_find_file+0x1a8>
     6f0:	mov	r0, r6
     6f4:	bl	0 <free>
     6f8:	mov	r0, sl
     6fc:	bl	0 <free>
     700:	mov	ip, #0
     704:	str	ip, [r4]
     708:	mov	r0, #0
     70c:	b	71c <coda_path_find_file+0x1cc>
     710:	mov	r1, #0
     714:	str	r1, [r4]
     718:	mov	r0, #0
     71c:	ldr	r4, [sp, #12]
     720:	ldr	r5, [sp, #16]
     724:	ldr	r6, [sp, #20]
     728:	ldr	r7, [sp, #24]
     72c:	ldr	r8, [sp, #28]
     730:	ldr	r9, [sp, #32]
     734:	ldr	sl, [sp, #36]	; 0x24
     738:	ldr	fp, [sp, #40]	; 0x28
     73c:	ldr	lr, [sp, #4]
     740:	add	sp, sp, #136	; 0x88
     744:	bx	lr
     748:	.word	0x00000084
     74c:	.word	0x00000024
     750:	.word	0x00000127

00000754 <coda_path_from_path>:
     754:	mov	ip, sp
     758:	sub	sp, sp, #32
     75c:	str	ip, [sp]
     760:	str	lr, [sp, #4]
     764:	str	r4, [sp, #8]
     768:	str	r5, [sp, #12]
     76c:	str	r6, [sp, #16]
     770:	str	r7, [sp, #20]
     774:	str	r8, [sp, #24]
     778:	str	r9, [sp, #28]
     77c:	mov	r8, r3
     780:	mov	r9, r2
     784:	mov	r4, r1
     788:	mov	r7, r0
     78c:	mov	r0, r7
     790:	bl	0 <strlen>
     794:	mov	r6, r0
     798:	cmp	r9, #0
     79c:	beq	7b0 <coda_path_from_path+0x5c>
     7a0:	mov	r0, r9
     7a4:	bl	0 <strlen>
     7a8:	mov	r5, r0
     7ac:	b	7b4 <coda_path_from_path+0x60>
     7b0:	mov	r5, #0
     7b4:	cmp	r6, #0
     7b8:	movgt	r0, #1
     7bc:	movle	r0, #0
     7c0:	mov	r2, #0
     7c4:	cmp	r4, #0
     7c8:	movne	r1, r0
     7cc:	moveq	r1, r2
     7d0:	cmp	r1, #0
     7d4:	beq	804 <coda_path_from_path+0xb0>
     7d8:	cmp	r6, #0
     7dc:	ble	804 <coda_path_from_path+0xb0>
     7e0:	add	r3, r7, r6
     7e4:	sub	lr, r3, #4096	; 0x1000
     7e8:	ldrb	r3, [lr, #4095]	; 0xfff
     7ec:	cmp	r3, #47	; 0x2f
     7f0:	beq	804 <coda_path_from_path+0xb0>
     7f4:	cmp	r3, #92	; 0x5c
     7f8:	beq	804 <coda_path_from_path+0xb0>
     7fc:	sub	r6, r6, #1
     800:	b	7d8 <coda_path_from_path+0x84>
     804:	add	r0, r6, r5
     808:	add	r0, r0, #2
     80c:	bl	0 <malloc>
     810:	str	r0, [r8]
     814:	mov	r4, r0
     818:	cmp	r4, #0
     81c:	bne	83c <coda_path_from_path+0xe8>
     820:	mvn	r0, #0
     824:	ldr	r1, [pc, #536]	; a44 <coda_path_from_path+0x2f0>
     828:	ldr	r2, [pc, #528]	; a40 <coda_path_from_path+0x2ec>
     82c:	movw	r3, #481	; 0x1e1
     830:	bl	0 <coda_set_error>
     834:	mvn	r0, #0
     838:	b	a1c <coda_path_from_path+0x2c8>
     83c:	cmp	r6, #0
     840:	ble	86c <coda_path_from_path+0x118>
     844:	mov	r2, r6
     848:	mov	r1, r7
     84c:	mov	r0, r4
     850:	bl	0 <memcpy>
     854:	add	r4, r4, r6
     858:	cmp	r5, #0
     85c:	ble	86c <coda_path_from_path+0x118>
     860:	mov	r1, #47	; 0x2f
     864:	strb	r1, [r4]
     868:	add	r4, r4, #1
     86c:	cmp	r5, #0
     870:	ble	888 <coda_path_from_path+0x134>
     874:	mov	r2, r5
     878:	mov	r1, r9
     87c:	mov	r0, r4
     880:	bl	0 <memcpy>
     884:	add	r4, r4, r5
     888:	mov	r0, #0
     88c:	strb	r0, [r4]
     890:	ldr	ip, [r8]
     894:	cmp	ip, #0
     898:	beq	a18 <coda_path_from_path+0x2c4>
     89c:	ldrb	r0, [ip]
     8a0:	cmp	r0, #0
     8a4:	beq	a18 <coda_path_from_path+0x2c4>
     8a8:	mov	r3, #0
     8ac:	mov	r4, #0
     8b0:	ldrb	r2, [ip, r3]
     8b4:	cmp	r2, #46	; 0x2e
     8b8:	bne	8d4 <coda_path_from_path+0x180>
     8bc:	add	r0, ip, r3
     8c0:	ldrb	r1, [r0, #1]
     8c4:	cmp	r1, #47	; 0x2f
     8c8:	bne	8d4 <coda_path_from_path+0x180>
     8cc:	add	r3, r3, #2
     8d0:	b	8b0 <coda_path_from_path+0x15c>
     8d4:	ldrb	r0, [ip, r3]
     8d8:	cmp	r0, #0
     8dc:	beq	9fc <coda_path_from_path+0x2a8>
     8e0:	cmp	r0, #47	; 0x2f
     8e4:	beq	8f0 <coda_path_from_path+0x19c>
     8e8:	cmp	r0, #92	; 0x5c
     8ec:	bne	9e0 <coda_path_from_path+0x28c>
     8f0:	add	r1, ip, r3
     8f4:	ldrb	r0, [r1, #1]
     8f8:	cmp	r0, #47	; 0x2f
     8fc:	beq	9f4 <coda_path_from_path+0x2a0>
     900:	cmp	r0, #92	; 0x5c
     904:	beq	9f4 <coda_path_from_path+0x2a0>
     908:	cmp	r0, #46	; 0x2e
     90c:	bne	9e0 <coda_path_from_path+0x28c>
     910:	ldrb	r2, [r1, #2]
     914:	cmp	r2, #0
     918:	beq	9d8 <coda_path_from_path+0x284>
     91c:	cmp	r2, #47	; 0x2f
     920:	beq	9d8 <coda_path_from_path+0x284>
     924:	cmp	r2, #92	; 0x5c
     928:	beq	9d8 <coda_path_from_path+0x284>
     92c:	cmp	r2, #46	; 0x2e
     930:	bne	9e0 <coda_path_from_path+0x28c>
     934:	ldrb	r0, [r1, #3]
     938:	cmp	r0, #0
     93c:	beq	950 <coda_path_from_path+0x1fc>
     940:	cmp	r0, #47	; 0x2f
     944:	beq	950 <coda_path_from_path+0x1fc>
     948:	cmp	r0, #92	; 0x5c
     94c:	bne	9e0 <coda_path_from_path+0x28c>
     950:	cmp	r4, #2
     954:	blt	99c <coda_path_from_path+0x248>
     958:	add	r1, ip, r4
     95c:	sub	lr, r1, #4096	; 0x1000
     960:	ldrb	r0, [lr, #4095]	; 0xfff
     964:	cmp	r0, #46	; 0x2e
     968:	bne	99c <coda_path_from_path+0x248>
     96c:	sub	lr, r1, #4096	; 0x1000
     970:	ldrb	r0, [lr, #4094]	; 0xffe
     974:	cmp	r0, #46	; 0x2e
     978:	bne	99c <coda_path_from_path+0x248>
     97c:	cmp	r4, #2
     980:	beq	9e0 <coda_path_from_path+0x28c>
     984:	sub	lr, r1, #4096	; 0x1000
     988:	ldrb	r2, [lr, #4093]	; 0xffd
     98c:	cmp	r2, #47	; 0x2f
     990:	beq	9e0 <coda_path_from_path+0x28c>
     994:	cmp	r2, #92	; 0x5c
     998:	beq	9e0 <coda_path_from_path+0x28c>
     99c:	sub	r0, r4, #1
     9a0:	cmp	r0, #0
     9a4:	blt	9c4 <coda_path_from_path+0x270>
     9a8:	ldrb	r2, [ip, r0]
     9ac:	cmp	r2, #47	; 0x2f
     9b0:	beq	9c4 <coda_path_from_path+0x270>
     9b4:	cmp	r2, #92	; 0x5c
     9b8:	beq	9c4 <coda_path_from_path+0x270>
     9bc:	sub	r0, r0, #1
     9c0:	b	9a0 <coda_path_from_path+0x24c>
     9c4:	cmp	r0, #0
     9c8:	blt	9e0 <coda_path_from_path+0x28c>
     9cc:	mov	r4, r0
     9d0:	add	r3, r3, #3
     9d4:	b	8d4 <coda_path_from_path+0x180>
     9d8:	add	r3, r3, #2
     9dc:	b	8d4 <coda_path_from_path+0x180>
     9e0:	ldrb	r0, [ip, r3]
     9e4:	strb	r0, [ip, r4]
     9e8:	add	r3, r3, #1
     9ec:	add	r4, r4, #1
     9f0:	b	8d4 <coda_path_from_path+0x180>
     9f4:	add	r3, r3, #1
     9f8:	b	8d4 <coda_path_from_path+0x180>
     9fc:	cmp	r4, #0
     a00:	bne	a10 <coda_path_from_path+0x2bc>
     a04:	mov	r0, #46	; 0x2e
     a08:	strb	r0, [ip, r4]
     a0c:	add	r4, r4, #1
     a10:	mov	r1, #0
     a14:	strb	r1, [ip, r4]
     a18:	mov	r0, #0
     a1c:	ldr	r4, [sp, #8]
     a20:	ldr	r5, [sp, #12]
     a24:	ldr	r6, [sp, #16]
     a28:	ldr	r7, [sp, #20]
     a2c:	ldr	r8, [sp, #24]
     a30:	ldr	r9, [sp, #28]
     a34:	ldr	lr, [sp, #4]
     a38:	add	sp, sp, #32
     a3c:	bx	lr
     a40:	.word	0x00000024
     a44:	.word	0x00000127

00000a48 <coda_path_for_program>:
     a48:	mov	ip, sp
     a4c:	sub	sp, sp, #24
     a50:	sub	sp, sp, #1024	; 0x400
     a54:	str	ip, [sp]
     a58:	str	lr, [sp, #4]
     a5c:	str	r4, [sp, #8]
     a60:	str	r5, [sp, #12]
     a64:	mov	r5, r1
     a68:	mov	r4, r0
     a6c:	mov	r1, #0
     a70:	mov	ip, #0
     a74:	str	ip, [r5]
     a78:	cmp	r4, #0
     a7c:	bne	a88 <coda_path_for_program+0x40>
     a80:	mov	r0, #0
     a84:	b	bec <coda_path_for_program+0x1a4>
     a88:	mov	r0, r4
     a8c:	ldrb	r3, [r0]
     a90:	cmp	r3, #0
     a94:	beq	ab0 <coda_path_for_program+0x68>
     a98:	cmp	r3, #47	; 0x2f
     a9c:	beq	ab8 <coda_path_for_program+0x70>
     aa0:	cmp	r3, #92	; 0x5c
     aa4:	beq	ab8 <coda_path_for_program+0x70>
     aa8:	add	r0, r0, #1
     aac:	b	a8c <coda_path_for_program+0x44>
     ab0:	cmp	r1, #0
     ab4:	beq	ae8 <coda_path_for_program+0xa0>
     ab8:	mov	r0, r4
     abc:	bl	0 <strdup>
     ac0:	str	r0, [r5]
     ac4:	cmp	r0, #0
     ac8:	bne	b24 <coda_path_for_program+0xdc>
     acc:	mvn	r0, #0
     ad0:	ldr	r1, [pc, #300]	; c04 <coda_path_for_program+0x1bc>
     ad4:	ldr	r2, [pc, #292]	; c00 <coda_path_for_program+0x1b8>
     ad8:	movw	r3, #537	; 0x219
     adc:	bl	0 <coda_set_error>
     ae0:	mvn	r0, #0
     ae4:	b	bec <coda_path_for_program+0x1a4>
     ae8:	ldr	r0, [pc, #280]	; c08 <coda_path_for_program+0x1c0>
     aec:	bl	0 <getenv>
     af0:	cmp	r0, #0
     af4:	beq	b1c <coda_path_for_program+0xd4>
     af8:	ldr	r0, [pc, #264]	; c08 <coda_path_for_program+0x1c0>
     afc:	bl	0 <getenv>
     b00:	mov	r2, r5
     b04:	mov	r1, r4
     b08:	bl	550 <coda_path_find_file>
     b0c:	cmp	r0, #0
     b10:	beq	b24 <coda_path_for_program+0xdc>
     b14:	mvn	r0, #0
     b18:	b	bec <coda_path_for_program+0x1a4>
     b1c:	mov	r0, #0
     b20:	str	r0, [r5]
     b24:	ldr	r1, [r5]
     b28:	cmp	r1, #0
     b2c:	beq	be8 <coda_path_for_program+0x1a0>
     b30:	ldrb	ip, [r1]
     b34:	cmp	ip, #47	; 0x2f
     b38:	beq	be8 <coda_path_for_program+0x1a0>
     b3c:	cmp	ip, #92	; 0x5c
     b40:	beq	be8 <coda_path_for_program+0x1a0>
     b44:	bl	0 <__ctype_b_loc>
     b48:	ldr	r3, [r0]
     b4c:	ldr	r2, [r5]
     b50:	ldrb	r1, [r2]
     b54:	add	r0, r3, r1, lsl #1
     b58:	ldrh	r0, [r0]
     b5c:	and	r3, r0, #1024	; 0x400
     b60:	cmp	r3, #0
     b64:	beq	b7c <coda_path_for_program+0x134>
     b68:	ldrb	r1, [r2, #1]
     b6c:	cmp	r1, #58	; 0x3a
     b70:	moveq	r3, #1
     b74:	movne	r3, #0
     b78:	b	b80 <coda_path_for_program+0x138>
     b7c:	mov	r3, #0
     b80:	eor	r3, r3, #1
     b84:	cmp	r3, #0
     b88:	beq	be8 <coda_path_for_program+0x1a0>
     b8c:	add	r0, sp, #16
     b90:	mov	r1, #1024	; 0x400
     b94:	bl	0 <getcwd>
     b98:	cmp	r0, #0
     b9c:	bne	ba8 <coda_path_for_program+0x160>
     ba0:	mov	r0, #0
     ba4:	b	bec <coda_path_for_program+0x1a4>
     ba8:	mov	r1, #0
     bac:	strb	r1, [sp, #1040]	; 0x410
     bb0:	ldr	r4, [r5]
     bb4:	add	r0, sp, #16
     bb8:	mov	r1, #0
     bbc:	mov	r3, r5
     bc0:	mov	r2, r4
     bc4:	bl	754 <coda_path_from_path>
     bc8:	cmp	r0, #0
     bcc:	beq	be0 <coda_path_for_program+0x198>
     bd0:	mov	r0, r4
     bd4:	bl	0 <free>
     bd8:	mvn	r0, #0
     bdc:	b	bec <coda_path_for_program+0x1a4>
     be0:	mov	r0, r4
     be4:	bl	0 <free>
     be8:	mov	r0, #0
     bec:	ldr	r4, [sp, #8]
     bf0:	ldr	r5, [sp, #12]
     bf4:	ldr	lr, [sp, #4]
     bf8:	ldr	sp, [sp]
     bfc:	bx	lr
     c00:	.word	0x00000024
     c04:	.word	0x00000127
     c08:	.word	0x00000005

00000c0c <coda_isNaN>:
     c0c:	mov	ip, sp
     c10:	sub	sp, sp, #24
     c14:	str	ip, [sp]
     c18:	str	lr, [sp, #4]
     c1c:	str	r4, [sp, #8]
     c20:	vstr	d0, [sp, #16]
     c24:	ldr	ip, [sp, #16]
     c28:	ldr	r1, [sp, #20]
     c2c:	bic	r3, r1, #255	; 0xff
     c30:	bic	r3, r3, #65280	; 0xff00
     c34:	bic	r3, r3, #983040	; 0xf0000
     c38:	bic	r3, r3, #-2147483648	; 0x80000000
     c3c:	mov	r0, #0
     c40:	eor	r2, r3, #267386880	; 0xff00000
     c44:	eor	r2, r2, #1879048192	; 0x70000000
     c48:	orr	r0, r2, r0
     c4c:	cmp	r0, #0
     c50:	beq	c5c <coda_isNaN+0x50>
     c54:	mov	r0, #0
     c58:	b	c8c <coda_isNaN+0x80>
     c5c:	mov	r3, #1048576	; 0x100000
     c60:	mov	r2, #0
     c64:	mov	r4, #0
     c68:	mov	r0, #1
     c6c:	subs	r2, r2, r0
     c70:	sbc	r0, r3, r4
     c74:	bic	r2, r1, #267386880	; 0xff00000
     c78:	bic	r2, r2, #-268435456	; 0xf0000000
     c7c:	orr	r0, r2, ip
     c80:	cmp	r0, #0
     c84:	movne	r0, #1
     c88:	moveq	r0, #0
     c8c:	ldr	r4, [sp, #8]
     c90:	ldr	lr, [sp, #4]
     c94:	add	sp, sp, #24
     c98:	bx	lr

00000c9c <coda_NaN>:
     c9c:	mov	ip, sp
     ca0:	sub	sp, sp, #16
     ca4:	str	ip, [sp]
     ca8:	str	lr, [sp, #4]
     cac:	movw	r1, #0
     cb0:	movt	r1, #32760	; 0x7ff8
     cb4:	mov	r0, #0
     cb8:	str	r0, [sp, #8]
     cbc:	str	r1, [sp, #12]
     cc0:	vldr	d0, [sp, #8]
     cc4:	ldr	lr, [sp, #4]
     cc8:	add	sp, sp, #16
     ccc:	bx	lr

00000cd0 <coda_isInf>:
     cd0:	mov	ip, sp
     cd4:	sub	sp, sp, #16
     cd8:	str	ip, [sp]
     cdc:	str	lr, [sp, #4]
     ce0:	vstr	d8, [sp, #8]
     ce4:	vmov.f64	d8, d0
     ce8:	vmov.f64	d0, d8
     cec:	bl	d24 <coda_isPlusInf>
     cf0:	cmp	r0, #0
     cf4:	bne	d10 <coda_isInf+0x40>
     cf8:	vmov.f64	d0, d8
     cfc:	bl	d64 <coda_isMinInf>
     d00:	cmp	r0, #0
     d04:	movne	r0, #1
     d08:	moveq	r0, #0
     d0c:	b	d14 <coda_isInf+0x44>
     d10:	mov	r0, #1
     d14:	vldr	d8, [sp, #8]
     d18:	ldr	lr, [sp, #4]
     d1c:	add	sp, sp, #16
     d20:	bx	lr

00000d24 <coda_isPlusInf>:
     d24:	mov	ip, sp
     d28:	sub	sp, sp, #16
     d2c:	str	ip, [sp]
     d30:	str	lr, [sp, #4]
     d34:	vstr	d0, [sp, #8]
     d38:	ldr	r0, [sp, #8]
     d3c:	ldr	r1, [sp, #12]
     d40:	eor	r2, r1, #267386880	; 0xff00000
     d44:	eor	r2, r2, #1879048192	; 0x70000000
     d48:	orr	r0, r2, r0
     d4c:	cmp	r0, #0
     d50:	moveq	r0, #1
     d54:	movne	r0, #0
     d58:	ldr	lr, [sp, #4]
     d5c:	add	sp, sp, #16
     d60:	bx	lr

00000d64 <coda_isMinInf>:
     d64:	mov	ip, sp
     d68:	sub	sp, sp, #16
     d6c:	str	ip, [sp]
     d70:	str	lr, [sp, #4]
     d74:	vstr	d0, [sp, #8]
     d78:	ldr	r0, [sp, #8]
     d7c:	ldr	r1, [sp, #12]
     d80:	eor	r2, r1, #267386880	; 0xff00000
     d84:	eor	r2, r2, #-268435456	; 0xf0000000
     d88:	orr	r0, r2, r0
     d8c:	cmp	r0, #0
     d90:	moveq	r0, #1
     d94:	movne	r0, #0
     d98:	ldr	lr, [sp, #4]
     d9c:	add	sp, sp, #16
     da0:	bx	lr

00000da4 <coda_PlusInf>:
     da4:	mov	ip, sp
     da8:	sub	sp, sp, #16
     dac:	str	ip, [sp]
     db0:	str	lr, [sp, #4]
     db4:	movw	r1, #0
     db8:	movt	r1, #32752	; 0x7ff0
     dbc:	mov	r0, #0
     dc0:	str	r0, [sp, #8]
     dc4:	str	r1, [sp, #12]
     dc8:	vldr	d0, [sp, #8]
     dcc:	ldr	lr, [sp, #4]
     dd0:	add	sp, sp, #16
     dd4:	bx	lr

00000dd8 <coda_MinInf>:
     dd8:	mov	ip, sp
     ddc:	sub	sp, sp, #16
     de0:	str	ip, [sp]
     de4:	str	lr, [sp, #4]
     de8:	movw	r1, #0
     dec:	movt	r1, #65520	; 0xfff0
     df0:	mov	r0, #0
     df4:	str	r0, [sp, #8]
     df8:	str	r1, [sp, #12]
     dfc:	vldr	d0, [sp, #8]
     e00:	ldr	lr, [sp, #4]
     e04:	add	sp, sp, #16
     e08:	bx	lr

00000e0c <coda_str64>:
     e0c:	mov	ip, sp
     e10:	sub	sp, sp, #8
     e14:	str	ip, [sp]
     e18:	str	lr, [sp, #4]
     e1c:	cmp	r1, #0
     e20:	bge	e44 <coda_str64+0x38>
     e24:	mov	r3, #45	; 0x2d
     e28:	strb	r3, [r2]
     e2c:	rsbs	r0, r0, #0
     e30:	rsc	r1, r1, #0
     e34:	add	r2, r2, #1
     e38:	ldr	lr, [sp, #4]
     e3c:	add	sp, sp, #8
     e40:	b	e50 <coda_str64u>
     e44:	ldr	lr, [sp, #4]
     e48:	add	sp, sp, #8
     e4c:	b	e50 <coda_str64u>

00000e50 <coda_str64u>:
     e50:	mov	ip, sp
     e54:	sub	sp, sp, #40	; 0x28
     e58:	str	ip, [sp, #4]
     e5c:	str	lr, [sp, #8]
     e60:	str	r4, [sp, #16]
     e64:	str	r5, [sp, #20]
     e68:	str	r6, [sp, #24]
     e6c:	str	r7, [sp, #28]
     e70:	str	r8, [sp, #32]
     e74:	mov	r4, r2
     e78:	mov	r5, r1
     e7c:	mov	r6, r0
     e80:	mov	ip, r5
     e84:	cmp	ip, #0
     e88:	bne	ea0 <coda_str64u+0x50>
     e8c:	ldr	r1, [pc, #332]	; fe0 <coda_str64u+0x190>
     e90:	mov	r2, r6
     e94:	mov	r0, r4
     e98:	bl	0 <sprintf>
     e9c:	b	fbc <coda_str64u+0x16c>
     ea0:	movw	r3, #30481	; 0x7711
     ea4:	movt	r3, #43980	; 0xabcc
     ea8:	movw	r2, #52989	; 0xcefd
     eac:	movt	r2, #33889	; 0x8461
     eb0:	mov	r1, r5
     eb4:	mov	r0, r6
     eb8:	bl	0 <__compcert_i64_umulh>
     ebc:	lsr	ip, r1, #26
     ec0:	lsr	r2, r0, #26
     ec4:	orr	r3, r2, r1, lsl #6
     ec8:	movw	r2, #57600	; 0xe100
     ecc:	movt	r2, #1525	; 0x5f5
     ed0:	umull	r0, r2, r3, r2
     ed4:	movw	r3, #57600	; 0xe100
     ed8:	movt	r3, #1525	; 0x5f5
     edc:	mla	r1, r3, ip, r2
     ee0:	subs	r7, r6, r0
     ee4:	sbc	r0, r5, r1
     ee8:	movw	r3, #30481	; 0x7711
     eec:	movt	r3, #43980	; 0xabcc
     ef0:	movw	r2, #52989	; 0xcefd
     ef4:	movt	r2, #33889	; 0x8461
     ef8:	mov	r1, r5
     efc:	mov	r0, r6
     f00:	bl	0 <__compcert_i64_umulh>
     f04:	lsr	r6, r1, #26
     f08:	lsr	r2, r0, #26
     f0c:	orr	r8, r2, r1, lsl #6
     f10:	movw	r3, #30481	; 0x7711
     f14:	movt	r3, #43980	; 0xabcc
     f18:	movw	r2, #52989	; 0xcefd
     f1c:	movt	r2, #33889	; 0x8461
     f20:	mov	r1, r6
     f24:	mov	r0, r8
     f28:	bl	0 <__compcert_i64_umulh>
     f2c:	lsr	r3, r1, #26
     f30:	lsr	r2, r0, #26
     f34:	orr	r1, r2, r1, lsl #6
     f38:	movw	ip, #57600	; 0xe100
     f3c:	movt	ip, #1525	; 0x5f5
     f40:	umull	ip, r2, r1, ip
     f44:	movw	r0, #57600	; 0xe100
     f48:	movt	r0, #1525	; 0x5f5
     f4c:	mla	r1, r0, r3, r2
     f50:	subs	r5, r8, ip
     f54:	sbc	r1, r6, r1
     f58:	mov	r1, r6
     f5c:	mov	r0, r8
     f60:	movw	r3, #30481	; 0x7711
     f64:	movt	r3, #43980	; 0xabcc
     f68:	movw	r2, #52989	; 0xcefd
     f6c:	movt	r2, #33889	; 0x8461
     f70:	bl	0 <__compcert_i64_umulh>
     f74:	lsr	r3, r1, #26
     f78:	lsr	r0, r0, #26
     f7c:	orr	r2, r0, r1, lsl #6
     f80:	mov	r0, r2
     f84:	orr	ip, r3, r0
     f88:	cmp	ip, #0
     f8c:	beq	fa8 <coda_str64u+0x158>
     f90:	ldr	r1, [pc, #68]	; fdc <coda_str64u+0x18c>
     f94:	str	r7, [sp]
     f98:	mov	r3, r5
     f9c:	mov	r0, r4
     fa0:	bl	0 <sprintf>
     fa4:	b	fbc <coda_str64u+0x16c>
     fa8:	ldr	r1, [pc, #52]	; fe4 <coda_str64u+0x194>
     fac:	mov	r3, r7
     fb0:	mov	r2, r5
     fb4:	mov	r0, r4
     fb8:	bl	0 <sprintf>
     fbc:	ldr	r4, [sp, #16]
     fc0:	ldr	r5, [sp, #20]
     fc4:	ldr	r6, [sp, #24]
     fc8:	ldr	r7, [sp, #28]
     fcc:	ldr	r8, [sp, #32]
     fd0:	ldr	lr, [sp, #8]
     fd4:	add	sp, sp, #40	; 0x28
     fd8:	bx	lr
     fdc:	.word	0x000000b4
     fe0:	.word	0x0000015a
     fe4:	.word	0x00000013

00000fe8 <coda_strfl>:
     fe8:	mov	ip, sp
     fec:	sub	sp, sp, #24
     ff0:	str	ip, [sp]
     ff4:	str	lr, [sp, #4]
     ff8:	str	r4, [sp, #8]
     ffc:	vstr	d8, [sp, #16]
    1000:	mov	r4, r0
    1004:	vmov.f64	d8, d0
    1008:	vmov.f64	d0, d8
    100c:	bl	c0c <coda_isNaN>
    1010:	cmp	r0, #0
    1014:	bne	1070 <coda_strfl+0x88>
    1018:	vmov.f64	d0, d8
    101c:	bl	d24 <coda_isPlusInf>
    1020:	cmp	r0, #0
    1024:	bne	1060 <coda_strfl+0x78>
    1028:	vmov.f64	d0, d8
    102c:	bl	d64 <coda_isMinInf>
    1030:	cmp	r0, #0
    1034:	bne	1050 <coda_strfl+0x68>
    1038:	ldr	r1, [pc, #88]	; 1098 <coda_strfl+0xb0>
    103c:	vmov.f64	d2, d8
    1040:	mov	r0, r4
    1044:	vmov	r2, r3, d2
    1048:	bl	0 <sprintf>
    104c:	b	107c <coda_strfl+0x94>
    1050:	ldr	r1, [pc, #56]	; 1090 <coda_strfl+0xa8>
    1054:	mov	r0, r4
    1058:	bl	0 <strcpy>
    105c:	b	107c <coda_strfl+0x94>
    1060:	ldr	r1, [pc, #44]	; 1094 <coda_strfl+0xac>
    1064:	mov	r0, r4
    1068:	bl	0 <strcpy>
    106c:	b	107c <coda_strfl+0x94>
    1070:	ldr	r1, [pc, #36]	; 109c <coda_strfl+0xb4>
    1074:	mov	r0, r4
    1078:	bl	0 <strcpy>
    107c:	ldr	r4, [sp, #8]
    1080:	vldr	d8, [sp, #16]
    1084:	ldr	lr, [sp, #4]
    1088:	add	sp, sp, #24
    108c:	bx	lr
    1090:	.word	0x00000193
    1094:	.word	0x00000099
    1098:	.word	0x000000c2
    109c:	.word	0x000000cf
