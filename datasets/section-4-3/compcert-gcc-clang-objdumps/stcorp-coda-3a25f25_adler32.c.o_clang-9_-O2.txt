
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/zlib/adler32.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_adler32>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	uxth	r3, r0
   c:	lsr	r0, r0, #16
  10:	cmp	r2, #1
  14:	bne	4c <coda_adler32+0x4c>
  18:	ldrb	r1, [r1]
  1c:	movw	r2, #65521	; 0xfff1
  20:	add	r1, r3, r1
  24:	movw	r3, #65520	; 0xfff0
  28:	cmp	r1, r3
  2c:	subhi	r1, r1, r2
  30:	mov	r2, #983040	; 0xf0000
  34:	add	r0, r1, r0
  38:	cmp	r0, r3
  3c:	lsl	r7, r0, #16
  40:	addhi	r7, r2, r0, lsl #16
  44:	orr	r0, r7, r1
  48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4c:	cmp	r1, #0
  50:	beq	7c <coda_adler32+0x7c>
  54:	cmp	r2, #16
  58:	bcs	84 <coda_adler32+0x84>
  5c:	cmp	r2, #0
  60:	beq	2f8 <coda_adler32+0x2f8>
  64:	tst	r2, #1
  68:	bne	2bc <coda_adler32+0x2bc>
  6c:	mov	r7, r2
  70:	cmp	r2, #1
  74:	bne	2d4 <coda_adler32+0x2d4>
  78:	b	2f8 <coda_adler32+0x2f8>
  7c:	mov	r0, #1
  80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  84:	movw	ip, #5552	; 0x15b0
  88:	cmp	r2, ip
  8c:	bcc	1b8 <coda_adler32+0x1b8>
  90:	movw	lr, #59984	; 0xea50
  94:	movw	sl, #65521	; 0xfff1
  98:	movt	lr, #65535	; 0xffff
  9c:	sub	r2, r2, ip
  a0:	mov	r7, #0
  a4:	mov	r6, r1
  a8:	ldrb	r4, [r6, -r7]!
  ac:	sub	r7, r7, #16
  b0:	cmp	r7, lr
  b4:	ldrb	r5, [r6, #2]
  b8:	ldrb	r8, [r6, #3]
  bc:	ldrb	r9, [r6, #4]
  c0:	add	r3, r3, r4
  c4:	ldrb	r4, [r6, #1]
  c8:	add	r0, r3, r0
  cc:	add	r4, r3, r4
  d0:	add	r5, r4, r5
  d4:	add	r0, r0, r4
  d8:	ldrb	r4, [r6, #5]
  dc:	add	r0, r0, r5
  e0:	add	r3, r5, r8
  e4:	add	r0, r0, r3
  e8:	add	r3, r3, r9
  ec:	add	r0, r0, r3
  f0:	add	r3, r3, r4
  f4:	ldrb	r4, [r6, #6]
  f8:	add	r0, r0, r3
  fc:	add	r3, r3, r4
 100:	ldrb	r4, [r6, #7]
 104:	add	r0, r0, r3
 108:	add	r3, r3, r4
 10c:	ldrb	r4, [r6, #8]
 110:	add	r0, r0, r3
 114:	add	r3, r3, r4
 118:	ldrb	r4, [r6, #9]
 11c:	add	r0, r0, r3
 120:	add	r3, r3, r4
 124:	ldrb	r4, [r6, #10]
 128:	add	r0, r0, r3
 12c:	add	r3, r3, r4
 130:	ldrb	r4, [r6, #11]
 134:	add	r0, r0, r3
 138:	add	r3, r3, r4
 13c:	ldrb	r4, [r6, #12]
 140:	add	r0, r0, r3
 144:	add	r3, r3, r4
 148:	ldrb	r4, [r6, #13]
 14c:	add	r0, r0, r3
 150:	add	r3, r3, r4
 154:	ldrb	r4, [r6, #14]
 158:	add	r0, r0, r3
 15c:	add	r3, r3, r4
 160:	ldrb	r4, [r6, #15]
 164:	add	r0, r0, r3
 168:	add	r3, r3, r4
 16c:	add	r0, r0, r3
 170:	bne	a4 <coda_adler32+0xa4>
 174:	movw	r4, #32881	; 0x8071
 178:	add	r1, r1, ip
 17c:	movt	r4, #32775	; 0x8007
 180:	mov	r6, r4
 184:	umull	r4, r5, r0, r4
 188:	lsr	r4, r5, #15
 18c:	mls	r0, r4, sl, r0
 190:	umull	r4, r5, r3, r6
 194:	lsr	r4, r5, #15
 198:	mls	r3, r4, sl, r3
 19c:	movw	r4, #5551	; 0x15af
 1a0:	cmp	r2, r4
 1a4:	bhi	9c <coda_adler32+0x9c>
 1a8:	cmp	r2, #0
 1ac:	beq	384 <coda_adler32+0x384>
 1b0:	cmp	r2, #16
 1b4:	bcc	2a4 <coda_adler32+0x2a4>
 1b8:	sub	lr, r2, #16
 1bc:	mov	r6, r1
 1c0:	bic	r8, lr, #15
 1c4:	add	ip, r8, #16
 1c8:	ldrb	r7, [r6]
 1cc:	ldrb	r5, [r6, #1]
 1d0:	ldrb	r4, [r6, #2]
 1d4:	ldrb	r9, [r6, #3]
 1d8:	sub	r2, r2, #16
 1dc:	cmp	r2, #15
 1e0:	add	r3, r3, r7
 1e4:	add	r5, r3, r5
 1e8:	add	r0, r3, r0
 1ec:	add	r3, r5, r4
 1f0:	ldrb	r4, [r6, #4]
 1f4:	add	r0, r0, r5
 1f8:	add	r0, r0, r3
 1fc:	add	r3, r3, r9
 200:	add	r0, r0, r3
 204:	add	r3, r3, r4
 208:	ldrb	r4, [r6, #5]
 20c:	add	r0, r0, r3
 210:	add	r3, r3, r4
 214:	ldrb	r4, [r6, #6]
 218:	add	r0, r0, r3
 21c:	add	r3, r3, r4
 220:	ldrb	r4, [r6, #7]
 224:	add	r0, r0, r3
 228:	add	r3, r3, r4
 22c:	ldrb	r4, [r6, #8]
 230:	add	r0, r0, r3
 234:	add	r3, r3, r4
 238:	ldrb	r4, [r6, #9]
 23c:	add	r0, r0, r3
 240:	add	r3, r3, r4
 244:	ldrb	r4, [r6, #10]
 248:	add	r0, r0, r3
 24c:	add	r3, r3, r4
 250:	ldrb	r4, [r6, #11]
 254:	add	r0, r0, r3
 258:	add	r3, r3, r4
 25c:	ldrb	r4, [r6, #12]
 260:	add	r0, r0, r3
 264:	add	r3, r3, r4
 268:	ldrb	r4, [r6, #13]
 26c:	add	r0, r0, r3
 270:	add	r3, r3, r4
 274:	ldrb	r4, [r6, #14]
 278:	add	r0, r0, r3
 27c:	add	r3, r3, r4
 280:	ldrb	r4, [r6, #15]
 284:	add	r6, r6, #16
 288:	add	r0, r0, r3
 28c:	add	r3, r3, r4
 290:	add	r0, r0, r3
 294:	bhi	1c8 <coda_adler32+0x1c8>
 298:	subs	r2, lr, r8
 29c:	beq	360 <coda_adler32+0x360>
 2a0:	add	r1, r1, ip
 2a4:	tst	r2, #1
 2a8:	bne	324 <coda_adler32+0x324>
 2ac:	mov	r7, r2
 2b0:	cmp	r2, #1
 2b4:	bne	33c <coda_adler32+0x33c>
 2b8:	b	360 <coda_adler32+0x360>
 2bc:	ldrb	r7, [r1], #1
 2c0:	add	r3, r3, r7
 2c4:	sub	r7, r2, #1
 2c8:	add	r0, r3, r0
 2cc:	cmp	r2, #1
 2d0:	beq	2f8 <coda_adler32+0x2f8>
 2d4:	ldrb	r2, [r1]
 2d8:	ldrb	r6, [r1, #1]
 2dc:	add	r1, r1, #2
 2e0:	subs	r7, r7, #2
 2e4:	add	r2, r3, r2
 2e8:	add	r0, r2, r0
 2ec:	add	r3, r2, r6
 2f0:	add	r0, r3, r0
 2f4:	bne	2d4 <coda_adler32+0x2d4>
 2f8:	movw	r2, #65520	; 0xfff0
 2fc:	movw	r1, #65521	; 0xfff1
 300:	cmp	r3, r2
 304:	movw	r2, #32881	; 0x8071
 308:	movt	r2, #32775	; 0x8007
 30c:	subhi	r3, r3, r1
 310:	umull	r2, r7, r0, r2
 314:	lsr	r2, r7, #15
 318:	mls	r0, r2, r1, r0
 31c:	orr	r0, r3, r0, lsl #16
 320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 324:	ldrb	r7, [r1], #1
 328:	add	r3, r3, r7
 32c:	sub	r7, r2, #1
 330:	add	r0, r3, r0
 334:	cmp	r2, #1
 338:	beq	360 <coda_adler32+0x360>
 33c:	ldrb	r2, [r1]
 340:	ldrb	r6, [r1, #1]
 344:	add	r1, r1, #2
 348:	subs	r7, r7, #2
 34c:	add	r2, r3, r2
 350:	add	r0, r2, r0
 354:	add	r3, r2, r6
 358:	add	r0, r3, r0
 35c:	bne	33c <coda_adler32+0x33c>
 360:	movw	r1, #32881	; 0x8071
 364:	movt	r1, #32775	; 0x8007
 368:	umull	r2, r7, r0, r1
 36c:	lsr	r2, r7, #15
 370:	movw	r7, #65521	; 0xfff1
 374:	mls	r0, r2, r7, r0
 378:	umull	r1, r2, r3, r1
 37c:	lsr	r1, r2, #15
 380:	mls	r3, r1, r7, r3
 384:	orr	r0, r3, r0, lsl #16
 388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000038c <coda_adler32_combine>:
 38c:	cmp	r2, #0
 390:	mvnmi	r0, #0
 394:	bxmi	lr
 398:	push	{r4, r5, r6, sl, fp, lr}
 39c:	add	fp, sp, #16
 3a0:	movw	ip, #32881	; 0x8071
 3a4:	uxth	r6, r0
 3a8:	lsr	r0, r0, #16
 3ac:	movt	ip, #32775	; 0x8007
 3b0:	add	r0, r0, r1, lsr #16
 3b4:	umull	r3, lr, r2, ip
 3b8:	lsr	r3, lr, #15
 3bc:	movw	lr, #65521	; 0xfff1
 3c0:	mls	r2, r3, lr, r2
 3c4:	mul	r4, r2, r6
 3c8:	sub	r0, r0, r2
 3cc:	umull	r3, r5, r4, ip
 3d0:	lsr	r3, r5, #15
 3d4:	movw	r5, #65520	; 0xfff0
 3d8:	mls	r3, r3, lr, r4
 3dc:	add	r0, r0, r3
 3e0:	movw	r3, #65505	; 0xffe1
 3e4:	movt	r3, #1
 3e8:	add	r2, r0, lr
 3ec:	cmp	r2, r3
 3f0:	subhi	r2, r0, lr
 3f4:	mov	r0, #983040	; 0xf0000
 3f8:	cmp	r2, r5
 3fc:	lsl	r3, r2, #16
 400:	addhi	r3, r0, r2, lsl #16
 404:	uxtah	r0, r6, r1
 408:	add	r1, r0, r5
 40c:	cmp	r1, r5
 410:	subhi	r1, r0, #1
 414:	cmp	r1, r5
 418:	subhi	r1, r1, lr
 41c:	orr	r0, r3, r1
 420:	pop	{r4, r5, r6, sl, fp, pc}

00000424 <coda_adler32_combine64>:
 424:	cmp	r2, #0
 428:	mvnmi	r0, #0
 42c:	bxmi	lr
 430:	push	{r4, r5, r6, sl, fp, lr}
 434:	add	fp, sp, #16
 438:	movw	ip, #32881	; 0x8071
 43c:	uxth	r6, r0
 440:	lsr	r0, r0, #16
 444:	movt	ip, #32775	; 0x8007
 448:	add	r0, r0, r1, lsr #16
 44c:	umull	r3, lr, r2, ip
 450:	lsr	r3, lr, #15
 454:	movw	lr, #65521	; 0xfff1
 458:	mls	r2, r3, lr, r2
 45c:	mul	r4, r2, r6
 460:	sub	r0, r0, r2
 464:	umull	r3, r5, r4, ip
 468:	lsr	r3, r5, #15
 46c:	movw	r5, #65520	; 0xfff0
 470:	mls	r3, r3, lr, r4
 474:	add	r0, r0, r3
 478:	movw	r3, #65505	; 0xffe1
 47c:	movt	r3, #1
 480:	add	r2, r0, lr
 484:	cmp	r2, r3
 488:	subhi	r2, r0, lr
 48c:	mov	r0, #983040	; 0xf0000
 490:	cmp	r2, r5
 494:	lsl	r3, r2, #16
 498:	addhi	r3, r0, r2, lsl #16
 49c:	uxtah	r0, r6, r1
 4a0:	add	r1, r0, r5
 4a4:	cmp	r1, r5
 4a8:	subhi	r1, r0, #1
 4ac:	cmp	r1, r5
 4b0:	subhi	r1, r1, lr
 4b4:	orr	r0, r3, r1
 4b8:	pop	{r4, r5, r6, sl, fp, pc}
