
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

00010330 <.init>:
   10330:	push	{r3, lr}
   10334:	bl	103c8 <abort@plt+0x3c>
   10338:	pop	{r3, pc}

Disassembly of section .plt:

0001033c <printf@plt-0x14>:
   1033c:	push	{lr}		; (str lr, [sp, #-4]!)
   10340:	ldr	lr, [pc, #4]	; 1034c <printf@plt-0x4>
   10344:	add	lr, pc, lr
   10348:	ldr	pc, [lr, #8]!
   1034c:			; <UNDEFINED> instruction: 0x00010cb4

00010350 <printf@plt>:
   10350:	add	ip, pc, #0, 12
   10354:	add	ip, ip, #16, 20	; 0x10000
   10358:	ldr	pc, [ip, #3252]!	; 0xcb4

0001035c <malloc@plt>:
   1035c:	add	ip, pc, #0, 12
   10360:	add	ip, ip, #16, 20	; 0x10000
   10364:	ldr	pc, [ip, #3244]!	; 0xcac

00010368 <__libc_start_main@plt>:
   10368:	add	ip, pc, #0, 12
   1036c:	add	ip, ip, #16, 20	; 0x10000
   10370:	ldr	pc, [ip, #3236]!	; 0xca4

00010374 <scanf@plt>:
   10374:	add	ip, pc, #0, 12
   10378:	add	ip, ip, #16, 20	; 0x10000
   1037c:	ldr	pc, [ip, #3228]!	; 0xc9c

00010380 <__gmon_start__@plt>:
   10380:	add	ip, pc, #0, 12
   10384:	add	ip, ip, #16, 20	; 0x10000
   10388:	ldr	pc, [ip, #3220]!	; 0xc94

0001038c <abort@plt>:
   1038c:	add	ip, pc, #0, 12
   10390:	add	ip, ip, #16, 20	; 0x10000
   10394:	ldr	pc, [ip, #3212]!	; 0xc8c

Disassembly of section .text:

00010398 <.text>:
   10398:	bleq	4c4dc <abort@plt+0x3c150>
   1039c:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   103a0:	strbtmi	fp, [sl], -r2, lsl #24
   103a4:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   103a8:			; <UNDEFINED> instruction: 0xc010f8df
   103ac:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   103b0:	blmi	1223c4 <abort@plt+0x112038>
   103b4:	svc	0x00d8f7ff
   103b8:	svc	0x00e8f7ff
   103bc:	strdeq	r0, [r1], -sp
   103c0:	andeq	r0, r1, r8, lsr #9
   103c4:			; <UNDEFINED> instruction: 0x000105bd
   103c8:	ldr	r3, [pc, #20]	; 103e4 <abort@plt+0x58>
   103cc:	ldr	r2, [pc, #20]	; 103e8 <abort@plt+0x5c>
   103d0:	add	r3, pc, r3
   103d4:	ldr	r2, [r3, r2]
   103d8:	cmp	r2, #0
   103dc:	bxeq	lr
   103e0:	b	10380 <__gmon_start__@plt>
   103e4:	andeq	r0, r1, r8, lsr #24
   103e8:	andeq	r0, r0, r4, lsr #32
   103ec:	eorseq	pc, r0, r1, asr #4
   103f0:	andeq	pc, r2, r0, asr #5
   103f4:	teqeq	r0, #268435460	; 0x10000004	; <UNPREDICTABLE>
   103f8:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   103fc:	andle	r4, r5, r3, lsl #5
   10400:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10404:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10408:	ldrmi	fp, [r8, -r3, lsl #2]
   1040c:	svclt	0x00004770
   10410:	eorseq	pc, r0, r1, asr #4
   10414:	andeq	pc, r2, r0, asr #5
   10418:	teqeq	r0, r1, asr #4	; <UNPREDICTABLE>
   1041c:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   10420:	svceq	0x00d91a0b
   10424:			; <UNDEFINED> instruction: 0x01a3eb01
   10428:	andle	r1, r5, r9, asr #32
   1042c:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   10430:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   10434:	ldrmi	fp, [r8, -r3, lsl #2]
   10438:	svclt	0x00004770
   1043c:	vqrshl.s8	d27, d0, d1
   10440:	vmvn.i32	d16, #0	; 0x00000000
   10444:	stmdavc	r3!, {r1, sl}
   10448:			; <UNDEFINED> instruction: 0xf7ffb91b
   1044c:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   10450:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   10454:	svclt	0x0000e7dc
   10458:	mov	ip, sp
   1045c:	sub	sp, sp, #8
   10460:	str	ip, [sp]
   10464:	str	lr, [sp, #4]
   10468:	ldr	r3, [r0]
   1046c:	mov	ip, #1
   10470:	cmp	ip, r1
   10474:	bge	10498 <abort@plt+0x10c>
   10478:	ldr	r2, [r0, ip, lsl #2]
   1047c:	cmp	r2, r3
   10480:	bge	1048c <abort@plt+0x100>
   10484:	mov	r0, #0
   10488:	b	1049c <abort@plt+0x110>
   1048c:	mov	r3, r2
   10490:	add	ip, ip, #1
   10494:	b	10470 <abort@plt+0xe4>
   10498:	mov	r0, #1
   1049c:	ldr	lr, [sp, #4]
   104a0:	add	sp, sp, #8
   104a4:	bx	lr
   104a8:	mov	ip, sp
   104ac:	sub	sp, sp, #24
   104b0:	str	ip, [sp]
   104b4:	str	lr, [sp, #4]
   104b8:	str	r4, [sp, #8]
   104bc:	str	r5, [sp, #12]
   104c0:	ldr	r0, [pc, #212]	; 1059c <abort@plt+0x210>
   104c4:	bl	10350 <printf@plt>
   104c8:	ldr	r0, [pc, #232]	; 105b8 <abort@plt+0x22c>
   104cc:	add	r1, sp, #16
   104d0:	bl	10374 <scanf@plt>
   104d4:	ldr	r0, [sp, #16]
   104d8:	cmp	r0, #100	; 0x64
   104dc:	ble	104f0 <abort@plt+0x164>
   104e0:	ldr	r0, [pc, #188]	; 105a4 <abort@plt+0x218>
   104e4:	bl	10350 <printf@plt>
   104e8:	mov	r0, #100	; 0x64
   104ec:	str	r0, [sp, #16]
   104f0:	ldr	r0, [sp, #16]
   104f4:	lsl	r0, r0, #2
   104f8:	bl	1035c <malloc@plt>
   104fc:	mov	r4, r0
   10500:	mov	r5, #0
   10504:	ldr	r1, [sp, #16]
   10508:	cmp	r5, r1
   1050c:	bge	10530 <abort@plt+0x1a4>
   10510:	ldr	r0, [pc, #144]	; 105a8 <abort@plt+0x21c>
   10514:	add	r1, r5, #1
   10518:	bl	10350 <printf@plt>
   1051c:	ldr	r0, [pc, #148]	; 105b8 <abort@plt+0x22c>
   10520:	add	r1, r4, r5, lsl #2
   10524:	bl	10374 <scanf@plt>
   10528:	add	r5, r5, #1
   1052c:	b	10504 <abort@plt+0x178>
   10530:	mov	r0, r4
   10534:	bl	10458 <abort@plt+0xcc>
   10538:	cmp	r0, #0
   1053c:	beq	1057c <abort@plt+0x1f0>
   10540:	ldr	r0, [pc, #104]	; 105b0 <abort@plt+0x224>
   10544:	bl	10350 <printf@plt>
   10548:	ldr	ip, [sp, #16]
   1054c:	sub	r5, ip, #1
   10550:	cmp	r5, #0
   10554:	ble	1056c <abort@plt+0x1e0>
   10558:	ldr	r0, [pc, #84]	; 105b4 <abort@plt+0x228>
   1055c:	ldr	r1, [r4, r5, lsl #2]
   10560:	bl	10350 <printf@plt>
   10564:	sub	r5, r5, #1
   10568:	b	10550 <abort@plt+0x1c4>
   1056c:	ldr	r0, [pc, #56]	; 105ac <abort@plt+0x220>
   10570:	ldr	r1, [r4, r5, lsl #2]
   10574:	bl	10350 <printf@plt>
   10578:	b	10584 <abort@plt+0x1f8>
   1057c:	ldr	r0, [pc, #28]	; 105a0 <abort@plt+0x214>
   10580:	bl	10350 <printf@plt>
   10584:	mov	r0, #0
   10588:	ldr	r4, [sp, #8]
   1058c:	ldr	r5, [sp, #12]
   10590:	ldr	lr, [sp, #4]
   10594:	add	sp, sp, #24
   10598:	bx	lr
   1059c:	andeq	r0, r1, sl, lsl #14
   105a0:	andeq	r0, r1, r9, asr #13
   105a4:	muleq	r1, ip, r6
   105a8:	andeq	r0, r1, lr, ror #13
   105ac:	andeq	r0, r1, r6, ror #13
   105b0:	andeq	r0, r1, fp, lsr #14
   105b4:	andeq	r0, r1, r6, lsl #14
   105b8:	andeq	r0, r1, fp, ror #13
   105bc:	mvnsmi	lr, #737280	; 0xb4000
   105c0:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   105c4:	strmi	r4, [r8], ip, lsl #26
   105c8:			; <UNDEFINED> instruction: 0x4691447e
   105cc:			; <UNDEFINED> instruction: 0xf7ff447d
   105d0:	blne	1dcc098 <abort@plt+0x1dbbd0c>
   105d4:	strhle	r1, [sl], -r6
   105d8:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   105dc:	svccc	0x0004f855
   105e0:	strbmi	r4, [r1], -sl, asr #12
   105e4:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   105e8:	adcmi	r4, r6, #152, 14	; 0x2600000
   105ec:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   105f0:	svclt	0x000083f8
   105f4:	andeq	r0, r1, r8, asr #18
   105f8:	andeq	r0, r1, r0, asr #18
   105fc:	svclt	0x00004770

Disassembly of section .fini:

00010600 <.fini>:
   10600:	push	{r3, lr}
   10604:	pop	{r3, pc}
