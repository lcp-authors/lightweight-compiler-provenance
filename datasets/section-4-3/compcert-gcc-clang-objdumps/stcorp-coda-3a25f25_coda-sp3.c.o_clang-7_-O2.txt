
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-sp3.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_sp3_done>:
       0:	push	{r4, r5, r6, sl, fp, lr}
       4:	add	fp, sp, #16
       8:	ldr	r4, [pc, #84]	; 64 <coda_sp3_done+0x64>
       c:	bl	0 <__aeabi_read_tp>
      10:	ldr	r0, [r0, r4]
      14:	cmp	r0, #0
      18:	popeq	{r4, r5, r6, sl, fp, pc}
      1c:	mov	r5, #0
      20:	mov	r6, #0
      24:	ldr	r1, [r0, r6, lsl #2]
      28:	cmp	r1, #0
      2c:	beq	44 <coda_sp3_done+0x44>
      30:	mov	r0, r1
      34:	bl	0 <coda_type_release>
      38:	bl	0 <__aeabi_read_tp>
      3c:	ldr	r0, [r0, r4]
      40:	str	r5, [r0, r6, lsl #2]
      44:	add	r6, r6, #1
      48:	cmp	r6, #75	; 0x4b
      4c:	bne	24 <coda_sp3_done+0x24>
      50:	bl	0 <free>
      54:	mov	r1, #0
      58:	bl	0 <__aeabi_read_tp>
      5c:	str	r1, [r0, r4]
      60:	pop	{r4, r5, r6, sl, fp, pc}
      64:	.word	0x00000000

00000068 <coda_sp3_reopen>:
      68:	push	{r4, r5, r6, sl, fp, lr}
      6c:	add	fp, sp, #16
      70:	sub	sp, sp, #8
      74:	mov	r4, r0
      78:	bl	184 <sp3_init>
      7c:	cmp	r0, #0
      80:	beq	94 <coda_sp3_reopen+0x2c>
      84:	ldr	r0, [r4]
      88:	bl	0 <coda_close>
      8c:	mvn	r6, #0
      90:	b	178 <coda_sp3_reopen+0x110>
      94:	mov	r0, #56	; 0x38
      98:	bl	0 <malloc>
      9c:	cmp	r0, #0
      a0:	beq	110 <coda_sp3_reopen+0xa8>
      a4:	mov	r5, r0
      a8:	mov	r0, #0
      ac:	vmov.i32	q8, #0	; 0x00000000
      b0:	mov	r6, #9
      b4:	str	r0, [r5]
      b8:	ldr	r1, [r4]
      bc:	ldrd	r2, [r1, #8]
      c0:	str	r0, [r5, #40]	; 0x28
      c4:	str	r0, [r5, #44]	; 0x2c
      c8:	str	r0, [r5, #48]	; 0x30
      cc:	add	r0, r5, #20
      d0:	vst1.32	{d16-d17}, [r0]
      d4:	add	r0, r5, #8
      d8:	stm	r0, {r2, r3, r6}
      dc:	ldr	r0, [r1]
      e0:	bl	0 <strdup>
      e4:	cmp	r0, #0
      e8:	str	r0, [r5]
      ec:	beq	13c <coda_sp3_reopen+0xd4>
      f0:	ldr	r0, [r4]
      f4:	bl	0 <coda_close>
      f8:	mov	r0, r5
      fc:	bl	22d0 <read_file>
     100:	cmp	r0, #0
     104:	beq	170 <coda_sp3_reopen+0x108>
     108:	mov	r0, r5
     10c:	b	88 <coda_sp3_reopen+0x20>
     110:	movw	r1, #0
     114:	movw	r3, #0
     118:	movw	r0, #1946	; 0x79a
     11c:	mov	r2, #56	; 0x38
     120:	mvn	r6, #0
     124:	str	r0, [sp]
     128:	movt	r1, #0
     12c:	movt	r3, #0
     130:	mvn	r0, #0
     134:	bl	0 <coda_set_error>
     138:	b	164 <coda_sp3_reopen+0xfc>
     13c:	movw	r1, #0
     140:	movw	r2, #0
     144:	mvn	r0, #0
     148:	movw	r3, #1964	; 0x7ac
     14c:	mvn	r6, #0
     150:	movt	r1, #0
     154:	movt	r2, #0
     158:	bl	0 <coda_set_error>
     15c:	mov	r0, r5
     160:	bl	0 <coda_close>
     164:	ldr	r0, [r4]
     168:	bl	0 <coda_close>
     16c:	b	178 <coda_sp3_reopen+0x110>
     170:	mov	r6, #0
     174:	str	r5, [r4]
     178:	mov	r0, r6
     17c:	sub	sp, fp, #16
     180:	pop	{r4, r5, r6, sl, fp, pc}

00000184 <sp3_init>:
     184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     188:	add	fp, sp, #28
     18c:	sub	sp, sp, #12
     190:	ldr	r8, [pc, #20]	; 1ac <sp3_init+0x28>
     194:	bl	0 <__aeabi_read_tp>
     198:	ldr	r0, [r0, r8]
     19c:	mov	r4, #0
     1a0:	cmp	r0, #0
     1a4:	bne	22c4 <sp3_init+0x2140>
     1a8:	b	1b0 <sp3_init+0x2c>
     1ac:	.word	0x00000000
     1b0:	mov	r0, #300	; 0x12c
     1b4:	bl	0 <malloc>
     1b8:	mov	r1, r0
     1bc:	bl	0 <__aeabi_read_tp>
     1c0:	cmp	r1, #0
     1c4:	str	r1, [r0, r8]
     1c8:	beq	229c <sp3_init+0x2118>
     1cc:	mov	r0, r1
     1d0:	mov	r1, #0
     1d4:	mov	r2, #300	; 0x12c
     1d8:	mov	r4, #0
     1dc:	bl	0 <memset>
     1e0:	mov	r0, #9
     1e4:	bl	0 <coda_type_text_new>
     1e8:	mov	r1, r0
     1ec:	bl	0 <__aeabi_read_tp>
     1f0:	mov	r5, r0
     1f4:	ldr	r0, [r0, r8]
     1f8:	mov	r2, #1
     1fc:	mov	r3, #0
     200:	str	r1, [r0]
     204:	mov	r0, r1
     208:	bl	0 <coda_type_set_byte_size>
     20c:	ldr	r0, [r5, r8]
     210:	movw	r1, #0
     214:	movt	r1, #0
     218:	ldr	r0, [r0]
     21c:	bl	0 <coda_type_set_description>
     220:	mov	r0, #9
     224:	bl	0 <coda_type_text_new>
     228:	ldr	r1, [r5, r8]
     22c:	movw	r6, #0
     230:	add	r7, sp, #8
     234:	movt	r6, #0
     238:	str	r0, [r1, #4]
     23c:	mov	r0, r6
     240:	mov	r1, r7
     244:	str	r4, [sp, #8]
     248:	bl	0 <coda_expression_from_string>
     24c:	ldr	r1, [sp, #8]
     250:	mov	r0, #9
     254:	bl	0 <coda_type_time_new>
     258:	ldr	r1, [r5, r8]
     25c:	str	r0, [r1, #8]
     260:	ldr	r1, [r1, #4]
     264:	bl	0 <coda_type_time_set_base_type>
     268:	ldr	r0, [r5, r8]
     26c:	movw	r1, #0
     270:	movt	r1, #0
     274:	ldr	r0, [r0, #8]
     278:	bl	0 <coda_type_set_description>
     27c:	mov	r0, #9
     280:	mov	r1, #2
     284:	bl	0 <coda_type_number_new>
     288:	ldr	r1, [r5, r8]
     28c:	str	r0, [r1, #12]
     290:	mov	r1, #1
     294:	bl	0 <coda_type_number_set_endianness>
     298:	ldr	r0, [r5, r8]
     29c:	mov	r1, #4
     2a0:	ldr	r0, [r0, #12]
     2a4:	bl	0 <coda_type_set_read_type>
     2a8:	ldr	r0, [r5, r8]
     2ac:	mov	r2, #32
     2b0:	mov	r3, #0
     2b4:	ldr	r0, [r0, #12]
     2b8:	bl	0 <coda_type_set_bit_size>
     2bc:	ldr	r0, [r5, r8]
     2c0:	movw	r1, #0
     2c4:	movt	r1, #0
     2c8:	ldr	r0, [r0, #12]
     2cc:	bl	0 <coda_type_set_description>
     2d0:	mov	r0, #9
     2d4:	bl	0 <coda_type_text_new>
     2d8:	ldr	r1, [r5, r8]
     2dc:	mov	r2, #5
     2e0:	mov	r3, #0
     2e4:	str	r0, [r1, #16]
     2e8:	bl	0 <coda_type_set_byte_size>
     2ec:	ldr	r0, [r5, r8]
     2f0:	movw	r1, #0
     2f4:	movt	r1, #0
     2f8:	ldr	r0, [r0, #16]
     2fc:	bl	0 <coda_type_set_description>
     300:	mov	r0, #9
     304:	bl	0 <coda_type_text_new>
     308:	ldr	r1, [r5, r8]
     30c:	mov	r2, #5
     310:	mov	r3, #0
     314:	str	r0, [r1, #20]
     318:	bl	0 <coda_type_set_byte_size>
     31c:	ldr	r0, [r5, r8]
     320:	movw	r1, #0
     324:	movt	r1, #0
     328:	ldr	r0, [r0, #20]
     32c:	bl	0 <coda_type_set_description>
     330:	mov	r0, #9
     334:	bl	0 <coda_type_text_new>
     338:	ldr	r1, [r5, r8]
     33c:	mov	r2, #3
     340:	mov	r3, #0
     344:	str	r0, [r1, #24]
     348:	bl	0 <coda_type_set_byte_size>
     34c:	ldr	r0, [r5, r8]
     350:	movw	r1, #0
     354:	movt	r1, #0
     358:	ldr	r0, [r0, #24]
     35c:	bl	0 <coda_type_set_description>
     360:	mov	r0, #9
     364:	bl	0 <coda_type_text_new>
     368:	ldr	r1, [r5, r8]
     36c:	mov	r2, #4
     370:	mov	r3, #0
     374:	str	r0, [r1, #28]
     378:	bl	0 <coda_type_set_byte_size>
     37c:	ldr	r0, [r5, r8]
     380:	movw	r1, #0
     384:	movt	r1, #0
     388:	ldr	r0, [r0, #28]
     38c:	bl	0 <coda_type_set_description>
     390:	mov	r0, #9
     394:	mov	r1, #2
     398:	bl	0 <coda_type_number_new>
     39c:	ldr	r1, [r5, r8]
     3a0:	str	r0, [r1, #32]
     3a4:	mov	r1, #1
     3a8:	bl	0 <coda_type_number_set_endianness>
     3ac:	ldr	r0, [r5, r8]
     3b0:	mov	r1, #2
     3b4:	ldr	r0, [r0, #32]
     3b8:	bl	0 <coda_type_set_read_type>
     3bc:	ldr	r0, [r5, r8]
     3c0:	mov	r2, #16
     3c4:	mov	r3, #0
     3c8:	ldr	r0, [r0, #32]
     3cc:	bl	0 <coda_type_set_bit_size>
     3d0:	ldr	r0, [r5, r8]
     3d4:	movw	r1, #0
     3d8:	movt	r1, #0
     3dc:	ldr	r0, [r0, #32]
     3e0:	bl	0 <coda_type_set_description>
     3e4:	mov	r0, #9
     3e8:	mov	r1, #3
     3ec:	bl	0 <coda_type_number_new>
     3f0:	ldr	r1, [r5, r8]
     3f4:	str	r0, [r1, #36]	; 0x24
     3f8:	mov	r1, #1
     3fc:	bl	0 <coda_type_number_set_endianness>
     400:	ldr	r0, [r5, r8]
     404:	mov	r2, #64	; 0x40
     408:	mov	r3, #0
     40c:	ldr	r0, [r0, #36]	; 0x24
     410:	bl	0 <coda_type_set_bit_size>
     414:	ldr	r0, [r5, r8]
     418:	movw	r1, #0
     41c:	movt	r1, #0
     420:	ldr	r0, [r0, #36]	; 0x24
     424:	bl	0 <coda_type_set_description>
     428:	mov	r0, #9
     42c:	mov	r1, #3
     430:	bl	0 <coda_type_number_new>
     434:	ldr	r1, [r5, r8]
     438:	str	r0, [r1, #40]	; 0x28
     43c:	mov	r1, #1
     440:	bl	0 <coda_type_number_set_endianness>
     444:	ldr	r0, [r5, r8]
     448:	mov	r2, #64	; 0x40
     44c:	mov	r3, #0
     450:	ldr	r0, [r0, #40]	; 0x28
     454:	bl	0 <coda_type_set_bit_size>
     458:	ldr	r0, [r5, r8]
     45c:	movw	r1, #0
     460:	movt	r1, #0
     464:	ldr	r0, [r0, #40]	; 0x28
     468:	bl	0 <coda_type_set_description>
     46c:	mov	r0, #9
     470:	mov	r1, #2
     474:	bl	0 <coda_type_number_new>
     478:	ldr	r1, [r5, r8]
     47c:	str	r0, [r1, #44]	; 0x2c
     480:	mov	r1, #1
     484:	bl	0 <coda_type_number_set_endianness>
     488:	ldr	r0, [r5, r8]
     48c:	mov	r1, #4
     490:	ldr	r0, [r0, #44]	; 0x2c
     494:	bl	0 <coda_type_set_read_type>
     498:	ldr	r0, [r5, r8]
     49c:	mov	r2, #32
     4a0:	mov	r3, #0
     4a4:	ldr	r0, [r0, #44]	; 0x2c
     4a8:	bl	0 <coda_type_set_bit_size>
     4ac:	ldr	r0, [r5, r8]
     4b0:	movw	r1, #0
     4b4:	movt	r1, #0
     4b8:	ldr	r0, [r0, #44]	; 0x2c
     4bc:	bl	0 <coda_type_set_description>
     4c0:	mov	r0, #9
     4c4:	mov	r1, #3
     4c8:	bl	0 <coda_type_number_new>
     4cc:	ldr	r1, [r5, r8]
     4d0:	str	r0, [r1, #48]	; 0x30
     4d4:	mov	r1, #1
     4d8:	bl	0 <coda_type_number_set_endianness>
     4dc:	ldr	r0, [r5, r8]
     4e0:	mov	r2, #64	; 0x40
     4e4:	mov	r3, #0
     4e8:	ldr	r0, [r0, #48]	; 0x30
     4ec:	bl	0 <coda_type_set_bit_size>
     4f0:	ldr	r0, [r5, r8]
     4f4:	movw	r1, #0
     4f8:	movt	r1, #0
     4fc:	ldr	r0, [r0, #48]	; 0x30
     500:	bl	0 <coda_type_set_description>
     504:	mov	r0, #9
     508:	mov	r1, #2
     50c:	bl	0 <coda_type_number_new>
     510:	ldr	r1, [r5, r8]
     514:	str	r0, [r1, #52]	; 0x34
     518:	mov	r1, #1
     51c:	bl	0 <coda_type_number_set_endianness>
     520:	ldr	r0, [r5, r8]
     524:	mov	r1, #1
     528:	ldr	r0, [r0, #52]	; 0x34
     52c:	bl	0 <coda_type_set_read_type>
     530:	ldr	r0, [r5, r8]
     534:	mov	r2, #8
     538:	mov	r3, #0
     53c:	ldr	r0, [r0, #52]	; 0x34
     540:	bl	0 <coda_type_set_bit_size>
     544:	ldr	r0, [r5, r8]
     548:	movw	r1, #0
     54c:	movt	r1, #0
     550:	ldr	r0, [r0, #52]	; 0x34
     554:	bl	0 <coda_type_set_description>
     558:	mov	r0, #9
     55c:	bl	0 <coda_type_text_new>
     560:	ldr	r1, [r5, r8]
     564:	mov	r2, #3
     568:	mov	r3, #0
     56c:	str	r0, [r1, #56]	; 0x38
     570:	bl	0 <coda_type_set_byte_size>
     574:	ldr	r0, [r5, r8]
     578:	movw	r1, #0
     57c:	movt	r1, #0
     580:	ldr	r0, [r0, #56]	; 0x38
     584:	bl	0 <coda_type_set_description>
     588:	mov	r0, #9
     58c:	mov	r1, #2
     590:	bl	0 <coda_type_number_new>
     594:	ldr	r1, [r5, r8]
     598:	str	r0, [r1, #64]	; 0x40
     59c:	mov	r1, #1
     5a0:	bl	0 <coda_type_number_set_endianness>
     5a4:	ldr	r0, [r5, r8]
     5a8:	mov	r1, #2
     5ac:	ldr	r0, [r0, #64]	; 0x40
     5b0:	bl	0 <coda_type_set_read_type>
     5b4:	ldr	r0, [r5, r8]
     5b8:	mov	r2, #16
     5bc:	mov	r3, #0
     5c0:	ldr	r0, [r0, #64]	; 0x40
     5c4:	bl	0 <coda_type_set_bit_size>
     5c8:	ldr	r0, [r5, r8]
     5cc:	movw	r1, #0
     5d0:	movt	r1, #0
     5d4:	ldr	r0, [r0, #64]	; 0x40
     5d8:	bl	0 <coda_type_set_description>
     5dc:	mov	r0, #9
     5e0:	bl	0 <coda_type_text_new>
     5e4:	ldr	r1, [r5, r8]
     5e8:	mov	r2, #2
     5ec:	mov	r3, #0
     5f0:	str	r0, [r1, #72]	; 0x48
     5f4:	bl	0 <coda_type_set_byte_size>
     5f8:	ldr	r0, [r5, r8]
     5fc:	movw	r1, #0
     600:	movt	r1, #0
     604:	ldr	r0, [r0, #72]	; 0x48
     608:	bl	0 <coda_type_set_description>
     60c:	mov	r0, #9
     610:	bl	0 <coda_type_text_new>
     614:	ldr	r1, [r5, r8]
     618:	mov	r2, #3
     61c:	mov	r3, #0
     620:	str	r0, [r1, #76]	; 0x4c
     624:	bl	0 <coda_type_set_byte_size>
     628:	ldr	r0, [r5, r8]
     62c:	movw	r1, #0
     630:	movt	r1, #0
     634:	ldr	r0, [r0, #76]	; 0x4c
     638:	bl	0 <coda_type_set_description>
     63c:	mov	r0, #9
     640:	mov	r1, #3
     644:	bl	0 <coda_type_number_new>
     648:	ldr	r1, [r5, r8]
     64c:	str	r0, [r1, #80]	; 0x50
     650:	mov	r1, #1
     654:	bl	0 <coda_type_number_set_endianness>
     658:	ldr	r0, [r5, r8]
     65c:	mov	r2, #64	; 0x40
     660:	mov	r3, #0
     664:	ldr	r0, [r0, #80]	; 0x50
     668:	bl	0 <coda_type_set_bit_size>
     66c:	ldr	r0, [r5, r8]
     670:	movw	r1, #0
     674:	movt	r1, #0
     678:	ldr	r0, [r0, #80]	; 0x50
     67c:	bl	0 <coda_type_set_description>
     680:	mov	r0, #9
     684:	mov	r1, #3
     688:	bl	0 <coda_type_number_new>
     68c:	ldr	r1, [r5, r8]
     690:	str	r0, [r1, #84]	; 0x54
     694:	mov	r1, #1
     698:	bl	0 <coda_type_number_set_endianness>
     69c:	ldr	r0, [r5, r8]
     6a0:	mov	r2, #64	; 0x40
     6a4:	mov	r3, #0
     6a8:	ldr	r0, [r0, #84]	; 0x54
     6ac:	bl	0 <coda_type_set_bit_size>
     6b0:	ldr	r0, [r5, r8]
     6b4:	movw	r1, #0
     6b8:	movt	r1, #0
     6bc:	ldr	r0, [r0, #84]	; 0x54
     6c0:	bl	0 <coda_type_set_description>
     6c4:	mov	r0, #9
     6c8:	bl	0 <coda_type_text_new>
     6cc:	ldr	r1, [r5, r8]
     6d0:	str	r0, [r1, #260]	; 0x104
     6d4:	mov	r0, r6
     6d8:	mov	r1, r7
     6dc:	str	r4, [sp, #8]
     6e0:	bl	0 <coda_expression_from_string>
     6e4:	ldr	r1, [sp, #8]
     6e8:	mov	r0, #9
     6ec:	bl	0 <coda_type_time_new>
     6f0:	ldr	r1, [r5, r8]
     6f4:	str	r0, [r1, #264]	; 0x108
     6f8:	ldr	r1, [r1, #260]	; 0x104
     6fc:	bl	0 <coda_type_time_set_base_type>
     700:	ldr	r0, [r5, r8]
     704:	movw	r1, #0
     708:	movt	r1, #0
     70c:	ldr	r0, [r0, #264]	; 0x108
     710:	bl	0 <coda_type_set_description>
     714:	mov	r0, #9
     718:	bl	0 <coda_type_text_new>
     71c:	ldr	r1, [r5, r8]
     720:	mov	r2, #3
     724:	mov	r3, #0
     728:	str	r0, [r1, #88]	; 0x58
     72c:	bl	0 <coda_type_set_byte_size>
     730:	ldr	r0, [r5, r8]
     734:	movw	r1, #0
     738:	movt	r1, #0
     73c:	ldr	r0, [r0, #88]	; 0x58
     740:	bl	0 <coda_type_set_description>
     744:	mov	r0, #9
     748:	mov	r1, #3
     74c:	bl	0 <coda_type_number_new>
     750:	ldr	r1, [r5, r8]
     754:	str	r0, [r1, #92]	; 0x5c
     758:	mov	r1, #1
     75c:	bl	0 <coda_type_number_set_endianness>
     760:	ldr	r0, [r5, r8]
     764:	mov	r2, #64	; 0x40
     768:	mov	r3, #0
     76c:	ldr	r0, [r0, #92]	; 0x5c
     770:	bl	0 <coda_type_set_bit_size>
     774:	ldr	r0, [r5, r8]
     778:	movw	r1, #0
     77c:	movt	r1, #0
     780:	ldr	r0, [r0, #92]	; 0x5c
     784:	bl	0 <coda_type_set_description>
     788:	ldr	r0, [r5, r8]
     78c:	movw	r4, #0
     790:	movt	r4, #0
     794:	mov	r1, r4
     798:	ldr	r0, [r0, #92]	; 0x5c
     79c:	bl	0 <coda_type_number_set_unit>
     7a0:	mov	r0, #9
     7a4:	mov	r1, #3
     7a8:	bl	0 <coda_type_number_new>
     7ac:	ldr	r1, [r5, r8]
     7b0:	str	r0, [r1, #96]	; 0x60
     7b4:	mov	r1, #1
     7b8:	bl	0 <coda_type_number_set_endianness>
     7bc:	ldr	r0, [r5, r8]
     7c0:	mov	r2, #64	; 0x40
     7c4:	mov	r3, #0
     7c8:	ldr	r0, [r0, #96]	; 0x60
     7cc:	bl	0 <coda_type_set_bit_size>
     7d0:	ldr	r0, [r5, r8]
     7d4:	movw	r1, #0
     7d8:	movt	r1, #0
     7dc:	ldr	r0, [r0, #96]	; 0x60
     7e0:	bl	0 <coda_type_set_description>
     7e4:	ldr	r0, [r5, r8]
     7e8:	mov	r1, r4
     7ec:	ldr	r0, [r0, #96]	; 0x60
     7f0:	bl	0 <coda_type_number_set_unit>
     7f4:	mov	r0, #9
     7f8:	mov	r1, #3
     7fc:	bl	0 <coda_type_number_new>
     800:	ldr	r1, [r5, r8]
     804:	str	r0, [r1, #100]	; 0x64
     808:	mov	r1, #1
     80c:	bl	0 <coda_type_number_set_endianness>
     810:	ldr	r0, [r5, r8]
     814:	mov	r2, #64	; 0x40
     818:	mov	r3, #0
     81c:	ldr	r0, [r0, #100]	; 0x64
     820:	bl	0 <coda_type_set_bit_size>
     824:	ldr	r0, [r5, r8]
     828:	movw	r1, #0
     82c:	movt	r1, #0
     830:	ldr	r0, [r0, #100]	; 0x64
     834:	bl	0 <coda_type_set_description>
     838:	ldr	r0, [r5, r8]
     83c:	mov	r1, r4
     840:	ldr	r0, [r0, #100]	; 0x64
     844:	bl	0 <coda_type_number_set_unit>
     848:	mov	r0, #9
     84c:	mov	r1, #3
     850:	bl	0 <coda_type_number_new>
     854:	ldr	r1, [r5, r8]
     858:	str	r0, [r1, #104]	; 0x68
     85c:	mov	r1, #1
     860:	bl	0 <coda_type_number_set_endianness>
     864:	ldr	r0, [r5, r8]
     868:	mov	r2, #64	; 0x40
     86c:	mov	r3, #0
     870:	ldr	r0, [r0, #104]	; 0x68
     874:	bl	0 <coda_type_set_bit_size>
     878:	ldr	r0, [r5, r8]
     87c:	movw	r1, #0
     880:	movt	r1, #0
     884:	ldr	r0, [r0, #104]	; 0x68
     888:	bl	0 <coda_type_set_description>
     88c:	ldr	r0, [r5, r8]
     890:	movw	r1, #0
     894:	movt	r1, #0
     898:	ldr	r0, [r0, #104]	; 0x68
     89c:	bl	0 <coda_type_number_set_unit>
     8a0:	mov	r0, #9
     8a4:	mov	r1, #2
     8a8:	bl	0 <coda_type_number_new>
     8ac:	ldr	r1, [r5, r8]
     8b0:	str	r0, [r1, #108]	; 0x6c
     8b4:	mov	r1, #1
     8b8:	bl	0 <coda_type_number_set_endianness>
     8bc:	ldr	r0, [r5, r8]
     8c0:	mov	r1, #0
     8c4:	ldr	r0, [r0, #108]	; 0x6c
     8c8:	bl	0 <coda_type_set_read_type>
     8cc:	ldr	r0, [r5, r8]
     8d0:	mov	r2, #8
     8d4:	mov	r3, #0
     8d8:	ldr	r0, [r0, #108]	; 0x6c
     8dc:	bl	0 <coda_type_set_bit_size>
     8e0:	ldr	r0, [r5, r8]
     8e4:	movw	r1, #0
     8e8:	movt	r1, #0
     8ec:	ldr	r0, [r0, #108]	; 0x6c
     8f0:	bl	0 <coda_type_set_description>
     8f4:	mov	r0, #9
     8f8:	mov	r1, #2
     8fc:	bl	0 <coda_type_number_new>
     900:	ldr	r1, [r5, r8]
     904:	str	r0, [r1, #112]	; 0x70
     908:	mov	r1, #1
     90c:	bl	0 <coda_type_number_set_endianness>
     910:	ldr	r0, [r5, r8]
     914:	mov	r1, #0
     918:	ldr	r0, [r0, #112]	; 0x70
     91c:	bl	0 <coda_type_set_read_type>
     920:	ldr	r0, [r5, r8]
     924:	mov	r2, #8
     928:	mov	r3, #0
     92c:	ldr	r0, [r0, #112]	; 0x70
     930:	bl	0 <coda_type_set_bit_size>
     934:	ldr	r0, [r5, r8]
     938:	movw	r1, #0
     93c:	movt	r1, #0
     940:	ldr	r0, [r0, #112]	; 0x70
     944:	bl	0 <coda_type_set_description>
     948:	mov	r0, #9
     94c:	mov	r1, #2
     950:	bl	0 <coda_type_number_new>
     954:	ldr	r1, [r5, r8]
     958:	str	r0, [r1, #116]	; 0x74
     95c:	mov	r1, #1
     960:	bl	0 <coda_type_number_set_endianness>
     964:	ldr	r0, [r5, r8]
     968:	mov	r1, #0
     96c:	ldr	r0, [r0, #116]	; 0x74
     970:	bl	0 <coda_type_set_read_type>
     974:	ldr	r0, [r5, r8]
     978:	mov	r2, #8
     97c:	mov	r3, #0
     980:	ldr	r0, [r0, #116]	; 0x74
     984:	bl	0 <coda_type_set_bit_size>
     988:	ldr	r0, [r5, r8]
     98c:	movw	r1, #0
     990:	movt	r1, #0
     994:	ldr	r0, [r0, #116]	; 0x74
     998:	bl	0 <coda_type_set_description>
     99c:	mov	r0, #9
     9a0:	mov	r1, #2
     9a4:	bl	0 <coda_type_number_new>
     9a8:	ldr	r1, [r5, r8]
     9ac:	str	r0, [r1, #120]	; 0x78
     9b0:	mov	r1, #1
     9b4:	bl	0 <coda_type_number_set_endianness>
     9b8:	ldr	r0, [r5, r8]
     9bc:	mov	r1, #2
     9c0:	ldr	r0, [r0, #120]	; 0x78
     9c4:	bl	0 <coda_type_set_read_type>
     9c8:	ldr	r0, [r5, r8]
     9cc:	mov	r2, #16
     9d0:	mov	r3, #0
     9d4:	ldr	r0, [r0, #120]	; 0x78
     9d8:	bl	0 <coda_type_set_bit_size>
     9dc:	ldr	r0, [r5, r8]
     9e0:	movw	r1, #0
     9e4:	movt	r1, #0
     9e8:	ldr	r0, [r0, #120]	; 0x78
     9ec:	bl	0 <coda_type_set_description>
     9f0:	mov	r0, #9
     9f4:	bl	0 <coda_type_text_new>
     9f8:	ldr	r1, [r5, r8]
     9fc:	mov	r2, #1
     a00:	mov	r3, #0
     a04:	str	r0, [r1, #124]	; 0x7c
     a08:	bl	0 <coda_type_set_byte_size>
     a0c:	ldr	r0, [r5, r8]
     a10:	movw	r1, #0
     a14:	movt	r1, #0
     a18:	ldr	r0, [r0, #124]	; 0x7c
     a1c:	bl	0 <coda_type_set_description>
     a20:	mov	r0, #9
     a24:	bl	0 <coda_type_text_new>
     a28:	ldr	r1, [r5, r8]
     a2c:	mov	r2, #1
     a30:	mov	r3, #0
     a34:	str	r0, [r1, #128]	; 0x80
     a38:	bl	0 <coda_type_set_byte_size>
     a3c:	ldr	r0, [r5, r8]
     a40:	movw	r1, #0
     a44:	movt	r1, #0
     a48:	ldr	r0, [r0, #128]	; 0x80
     a4c:	bl	0 <coda_type_set_description>
     a50:	mov	r0, #9
     a54:	bl	0 <coda_type_text_new>
     a58:	ldr	r1, [r5, r8]
     a5c:	mov	r2, #1
     a60:	mov	r3, #0
     a64:	str	r0, [r1, #132]	; 0x84
     a68:	bl	0 <coda_type_set_byte_size>
     a6c:	ldr	r0, [r5, r8]
     a70:	movw	r1, #0
     a74:	movt	r1, #0
     a78:	ldr	r0, [r0, #132]	; 0x84
     a7c:	bl	0 <coda_type_set_description>
     a80:	mov	r0, #9
     a84:	bl	0 <coda_type_text_new>
     a88:	ldr	r1, [r5, r8]
     a8c:	mov	r2, #1
     a90:	mov	r3, #0
     a94:	str	r0, [r1, #136]	; 0x88
     a98:	bl	0 <coda_type_set_byte_size>
     a9c:	ldr	r0, [r5, r8]
     aa0:	movw	r1, #0
     aa4:	movt	r1, #0
     aa8:	ldr	r0, [r0, #136]	; 0x88
     aac:	bl	0 <coda_type_set_description>
     ab0:	mov	r0, #9
     ab4:	mov	r1, #2
     ab8:	bl	0 <coda_type_number_new>
     abc:	ldr	r1, [r5, r8]
     ac0:	str	r0, [r1, #144]	; 0x90
     ac4:	mov	r1, #1
     ac8:	bl	0 <coda_type_number_set_endianness>
     acc:	ldr	r0, [r5, r8]
     ad0:	mov	r1, #2
     ad4:	ldr	r0, [r0, #144]	; 0x90
     ad8:	bl	0 <coda_type_set_read_type>
     adc:	ldr	r0, [r5, r8]
     ae0:	mov	r2, #16
     ae4:	mov	r3, #0
     ae8:	ldr	r0, [r0, #144]	; 0x90
     aec:	bl	0 <coda_type_set_bit_size>
     af0:	ldr	r0, [r5, r8]
     af4:	movw	r1, #0
     af8:	movt	r1, #0
     afc:	ldr	r0, [r0, #144]	; 0x90
     b00:	bl	0 <coda_type_set_description>
     b04:	ldr	r0, [r5, r8]
     b08:	movw	r4, #0
     b0c:	movt	r4, #0
     b10:	mov	r1, r4
     b14:	ldr	r0, [r0, #144]	; 0x90
     b18:	bl	0 <coda_type_number_set_unit>
     b1c:	mov	r0, #9
     b20:	mov	r1, #2
     b24:	bl	0 <coda_type_number_new>
     b28:	ldr	r1, [r5, r8]
     b2c:	str	r0, [r1, #148]	; 0x94
     b30:	mov	r1, #1
     b34:	bl	0 <coda_type_number_set_endianness>
     b38:	ldr	r0, [r5, r8]
     b3c:	mov	r1, #2
     b40:	ldr	r0, [r0, #148]	; 0x94
     b44:	bl	0 <coda_type_set_read_type>
     b48:	ldr	r0, [r5, r8]
     b4c:	mov	r2, #16
     b50:	mov	r3, #0
     b54:	ldr	r0, [r0, #148]	; 0x94
     b58:	bl	0 <coda_type_set_bit_size>
     b5c:	ldr	r0, [r5, r8]
     b60:	movw	r1, #0
     b64:	movt	r1, #0
     b68:	ldr	r0, [r0, #148]	; 0x94
     b6c:	bl	0 <coda_type_set_description>
     b70:	ldr	r0, [r5, r8]
     b74:	mov	r1, r4
     b78:	ldr	r0, [r0, #148]	; 0x94
     b7c:	bl	0 <coda_type_number_set_unit>
     b80:	mov	r0, #9
     b84:	mov	r1, #2
     b88:	bl	0 <coda_type_number_new>
     b8c:	ldr	r1, [r5, r8]
     b90:	str	r0, [r1, #152]	; 0x98
     b94:	mov	r1, #1
     b98:	bl	0 <coda_type_number_set_endianness>
     b9c:	ldr	r0, [r5, r8]
     ba0:	mov	r1, #2
     ba4:	ldr	r0, [r0, #152]	; 0x98
     ba8:	bl	0 <coda_type_set_read_type>
     bac:	ldr	r0, [r5, r8]
     bb0:	mov	r2, #16
     bb4:	mov	r3, #0
     bb8:	ldr	r0, [r0, #152]	; 0x98
     bbc:	bl	0 <coda_type_set_bit_size>
     bc0:	ldr	r0, [r5, r8]
     bc4:	movw	r1, #0
     bc8:	movt	r1, #0
     bcc:	ldr	r0, [r0, #152]	; 0x98
     bd0:	bl	0 <coda_type_set_description>
     bd4:	ldr	r0, [r5, r8]
     bd8:	mov	r1, r4
     bdc:	ldr	r0, [r0, #152]	; 0x98
     be0:	bl	0 <coda_type_number_set_unit>
     be4:	mov	r0, #9
     be8:	mov	r1, #2
     bec:	bl	0 <coda_type_number_new>
     bf0:	ldr	r1, [r5, r8]
     bf4:	str	r0, [r1, #156]	; 0x9c
     bf8:	mov	r1, #1
     bfc:	bl	0 <coda_type_number_set_endianness>
     c00:	ldr	r0, [r5, r8]
     c04:	mov	r1, #4
     c08:	ldr	r0, [r0, #156]	; 0x9c
     c0c:	bl	0 <coda_type_set_read_type>
     c10:	ldr	r0, [r5, r8]
     c14:	mov	r2, #32
     c18:	mov	r3, #0
     c1c:	ldr	r0, [r0, #156]	; 0x9c
     c20:	bl	0 <coda_type_set_bit_size>
     c24:	ldr	r0, [r5, r8]
     c28:	movw	r1, #0
     c2c:	movt	r1, #0
     c30:	ldr	r0, [r0, #156]	; 0x9c
     c34:	bl	0 <coda_type_set_description>
     c38:	ldr	r0, [r5, r8]
     c3c:	movw	r1, #0
     c40:	movt	r1, #0
     c44:	ldr	r0, [r0, #156]	; 0x9c
     c48:	bl	0 <coda_type_number_set_unit>
     c4c:	mov	r0, #9
     c50:	mov	r1, #2
     c54:	bl	0 <coda_type_number_new>
     c58:	ldr	r1, [r5, r8]
     c5c:	str	r0, [r1, #160]	; 0xa0
     c60:	mov	r1, #1
     c64:	bl	0 <coda_type_number_set_endianness>
     c68:	ldr	r0, [r5, r8]
     c6c:	mov	r1, #4
     c70:	ldr	r0, [r0, #160]	; 0xa0
     c74:	bl	0 <coda_type_set_read_type>
     c78:	ldr	r0, [r5, r8]
     c7c:	mov	r2, #32
     c80:	mov	r3, #0
     c84:	ldr	r0, [r0, #160]	; 0xa0
     c88:	bl	0 <coda_type_set_bit_size>
     c8c:	ldr	r0, [r5, r8]
     c90:	movw	r1, #0
     c94:	movt	r1, #0
     c98:	ldr	r0, [r0, #160]	; 0xa0
     c9c:	bl	0 <coda_type_set_description>
     ca0:	mov	r0, #9
     ca4:	mov	r1, #2
     ca8:	bl	0 <coda_type_number_new>
     cac:	ldr	r1, [r5, r8]
     cb0:	str	r0, [r1, #164]	; 0xa4
     cb4:	mov	r1, #1
     cb8:	bl	0 <coda_type_number_set_endianness>
     cbc:	ldr	r0, [r5, r8]
     cc0:	mov	r1, #4
     cc4:	ldr	r0, [r0, #164]	; 0xa4
     cc8:	bl	0 <coda_type_set_read_type>
     ccc:	ldr	r0, [r5, r8]
     cd0:	mov	r2, #32
     cd4:	mov	r3, #0
     cd8:	ldr	r0, [r0, #164]	; 0xa4
     cdc:	bl	0 <coda_type_set_bit_size>
     ce0:	ldr	r0, [r5, r8]
     ce4:	movw	r1, #0
     ce8:	movt	r1, #0
     cec:	ldr	r0, [r0, #164]	; 0xa4
     cf0:	bl	0 <coda_type_set_description>
     cf4:	mov	r0, #9
     cf8:	mov	r1, #2
     cfc:	bl	0 <coda_type_number_new>
     d00:	ldr	r1, [r5, r8]
     d04:	str	r0, [r1, #168]	; 0xa8
     d08:	mov	r1, #1
     d0c:	bl	0 <coda_type_number_set_endianness>
     d10:	ldr	r0, [r5, r8]
     d14:	mov	r1, #4
     d18:	ldr	r0, [r0, #168]	; 0xa8
     d1c:	bl	0 <coda_type_set_read_type>
     d20:	ldr	r0, [r5, r8]
     d24:	mov	r2, #32
     d28:	mov	r3, #0
     d2c:	ldr	r0, [r0, #168]	; 0xa8
     d30:	bl	0 <coda_type_set_bit_size>
     d34:	ldr	r0, [r5, r8]
     d38:	movw	r1, #0
     d3c:	movt	r1, #0
     d40:	ldr	r0, [r0, #168]	; 0xa8
     d44:	bl	0 <coda_type_set_description>
     d48:	mov	r0, #9
     d4c:	mov	r1, #2
     d50:	bl	0 <coda_type_number_new>
     d54:	ldr	r1, [r5, r8]
     d58:	str	r0, [r1, #172]	; 0xac
     d5c:	mov	r1, #1
     d60:	bl	0 <coda_type_number_set_endianness>
     d64:	ldr	r0, [r5, r8]
     d68:	mov	r1, #4
     d6c:	ldr	r0, [r0, #172]	; 0xac
     d70:	bl	0 <coda_type_set_read_type>
     d74:	ldr	r0, [r5, r8]
     d78:	mov	r2, #32
     d7c:	mov	r3, #0
     d80:	ldr	r0, [r0, #172]	; 0xac
     d84:	bl	0 <coda_type_set_bit_size>
     d88:	ldr	r0, [r5, r8]
     d8c:	movw	r6, #0
     d90:	movt	r6, #0
     d94:	mov	r1, r6
     d98:	ldr	r0, [r0, #172]	; 0xac
     d9c:	bl	0 <coda_type_set_description>
     da0:	mov	r0, #9
     da4:	mov	r1, #2
     da8:	bl	0 <coda_type_number_new>
     dac:	ldr	r1, [r5, r8]
     db0:	str	r0, [r1, #176]	; 0xb0
     db4:	mov	r1, #1
     db8:	bl	0 <coda_type_number_set_endianness>
     dbc:	ldr	r0, [r5, r8]
     dc0:	mov	r1, #4
     dc4:	ldr	r0, [r0, #176]	; 0xb0
     dc8:	bl	0 <coda_type_set_read_type>
     dcc:	ldr	r0, [r5, r8]
     dd0:	mov	r2, #32
     dd4:	mov	r3, #0
     dd8:	ldr	r0, [r0, #176]	; 0xb0
     ddc:	bl	0 <coda_type_set_bit_size>
     de0:	ldr	r0, [r5, r8]
     de4:	movw	r4, #0
     de8:	movt	r4, #0
     dec:	mov	r1, r4
     df0:	ldr	r0, [r0, #176]	; 0xb0
     df4:	bl	0 <coda_type_set_description>
     df8:	mov	r0, #9
     dfc:	mov	r1, #2
     e00:	bl	0 <coda_type_number_new>
     e04:	ldr	r1, [r5, r8]
     e08:	str	r0, [r1, #180]	; 0xb4
     e0c:	mov	r1, #1
     e10:	bl	0 <coda_type_number_set_endianness>
     e14:	ldr	r0, [r5, r8]
     e18:	mov	r1, #4
     e1c:	ldr	r0, [r0, #180]	; 0xb4
     e20:	bl	0 <coda_type_set_read_type>
     e24:	ldr	r0, [r5, r8]
     e28:	mov	r2, #32
     e2c:	mov	r3, #0
     e30:	ldr	r0, [r0, #180]	; 0xb4
     e34:	bl	0 <coda_type_set_bit_size>
     e38:	ldr	r0, [r5, r8]
     e3c:	movw	r9, #0
     e40:	movt	r9, #0
     e44:	mov	r1, r9
     e48:	ldr	r0, [r0, #180]	; 0xb4
     e4c:	bl	0 <coda_type_set_description>
     e50:	mov	r0, #9
     e54:	mov	r1, #3
     e58:	bl	0 <coda_type_number_new>
     e5c:	ldr	r1, [r5, r8]
     e60:	str	r0, [r1, #184]	; 0xb8
     e64:	mov	r1, #1
     e68:	bl	0 <coda_type_number_set_endianness>
     e6c:	ldr	r0, [r5, r8]
     e70:	mov	r2, #64	; 0x40
     e74:	mov	r3, #0
     e78:	ldr	r0, [r0, #184]	; 0xb8
     e7c:	bl	0 <coda_type_set_bit_size>
     e80:	ldr	r0, [r5, r8]
     e84:	movw	r1, #0
     e88:	movt	r1, #0
     e8c:	ldr	r0, [r0, #184]	; 0xb8
     e90:	bl	0 <coda_type_set_description>
     e94:	ldr	r0, [r5, r8]
     e98:	movw	r7, #0
     e9c:	movt	r7, #0
     ea0:	mov	r1, r7
     ea4:	ldr	r0, [r0, #184]	; 0xb8
     ea8:	bl	0 <coda_type_number_set_unit>
     eac:	mov	r0, #9
     eb0:	mov	r1, #3
     eb4:	bl	0 <coda_type_number_new>
     eb8:	ldr	r1, [r5, r8]
     ebc:	str	r0, [r1, #188]	; 0xbc
     ec0:	mov	r1, #1
     ec4:	bl	0 <coda_type_number_set_endianness>
     ec8:	ldr	r0, [r5, r8]
     ecc:	mov	r2, #64	; 0x40
     ed0:	mov	r3, #0
     ed4:	ldr	r0, [r0, #188]	; 0xbc
     ed8:	bl	0 <coda_type_set_bit_size>
     edc:	ldr	r0, [r5, r8]
     ee0:	movw	r1, #0
     ee4:	movt	r1, #0
     ee8:	ldr	r0, [r0, #188]	; 0xbc
     eec:	bl	0 <coda_type_set_description>
     ef0:	ldr	r0, [r5, r8]
     ef4:	mov	r1, r7
     ef8:	ldr	r0, [r0, #188]	; 0xbc
     efc:	bl	0 <coda_type_number_set_unit>
     f00:	mov	r0, #9
     f04:	mov	r1, #3
     f08:	bl	0 <coda_type_number_new>
     f0c:	ldr	r1, [r5, r8]
     f10:	str	r0, [r1, #192]	; 0xc0
     f14:	mov	r1, #1
     f18:	bl	0 <coda_type_number_set_endianness>
     f1c:	ldr	r0, [r5, r8]
     f20:	mov	r2, #64	; 0x40
     f24:	mov	r3, #0
     f28:	ldr	r0, [r0, #192]	; 0xc0
     f2c:	bl	0 <coda_type_set_bit_size>
     f30:	ldr	r0, [r5, r8]
     f34:	movw	r1, #0
     f38:	movt	r1, #0
     f3c:	ldr	r0, [r0, #192]	; 0xc0
     f40:	bl	0 <coda_type_set_description>
     f44:	ldr	r0, [r5, r8]
     f48:	mov	r1, r7
     f4c:	ldr	r0, [r0, #192]	; 0xc0
     f50:	bl	0 <coda_type_number_set_unit>
     f54:	mov	r0, #9
     f58:	mov	r1, #3
     f5c:	bl	0 <coda_type_number_new>
     f60:	ldr	r1, [r5, r8]
     f64:	str	r0, [r1, #196]	; 0xc4
     f68:	mov	r1, #1
     f6c:	bl	0 <coda_type_number_set_endianness>
     f70:	ldr	r0, [r5, r8]
     f74:	mov	r2, #64	; 0x40
     f78:	mov	r3, #0
     f7c:	ldr	r0, [r0, #196]	; 0xc4
     f80:	bl	0 <coda_type_set_bit_size>
     f84:	ldr	r0, [r5, r8]
     f88:	movw	r1, #0
     f8c:	movt	r1, #0
     f90:	ldr	r0, [r0, #196]	; 0xc4
     f94:	bl	0 <coda_type_set_description>
     f98:	ldr	r0, [r5, r8]
     f9c:	movw	r1, #0
     fa0:	movt	r1, #0
     fa4:	ldr	r0, [r0, #196]	; 0xc4
     fa8:	bl	0 <coda_type_number_set_unit>
     fac:	mov	r0, #9
     fb0:	mov	r1, #2
     fb4:	bl	0 <coda_type_number_new>
     fb8:	ldr	r1, [r5, r8]
     fbc:	str	r0, [r1, #200]	; 0xc8
     fc0:	mov	r1, #1
     fc4:	bl	0 <coda_type_number_set_endianness>
     fc8:	ldr	r0, [r5, r8]
     fcc:	mov	r1, #0
     fd0:	ldr	r0, [r0, #200]	; 0xc8
     fd4:	bl	0 <coda_type_set_read_type>
     fd8:	ldr	r0, [r5, r8]
     fdc:	mov	r2, #8
     fe0:	mov	r3, #0
     fe4:	ldr	r0, [r0, #200]	; 0xc8
     fe8:	bl	0 <coda_type_set_bit_size>
     fec:	ldr	r0, [r5, r8]
     ff0:	movw	r1, #0
     ff4:	movt	r1, #0
     ff8:	ldr	r0, [r0, #200]	; 0xc8
     ffc:	bl	0 <coda_type_set_description>
    1000:	mov	r0, #9
    1004:	mov	r1, #2
    1008:	bl	0 <coda_type_number_new>
    100c:	ldr	r1, [r5, r8]
    1010:	str	r0, [r1, #204]	; 0xcc
    1014:	mov	r1, #1
    1018:	bl	0 <coda_type_number_set_endianness>
    101c:	ldr	r0, [r5, r8]
    1020:	mov	r1, #0
    1024:	ldr	r0, [r0, #204]	; 0xcc
    1028:	bl	0 <coda_type_set_read_type>
    102c:	ldr	r0, [r5, r8]
    1030:	mov	r2, #8
    1034:	mov	r3, #0
    1038:	ldr	r0, [r0, #204]	; 0xcc
    103c:	bl	0 <coda_type_set_bit_size>
    1040:	ldr	r0, [r5, r8]
    1044:	movw	r1, #0
    1048:	movt	r1, #0
    104c:	ldr	r0, [r0, #204]	; 0xcc
    1050:	bl	0 <coda_type_set_description>
    1054:	mov	r0, #9
    1058:	mov	r1, #2
    105c:	bl	0 <coda_type_number_new>
    1060:	ldr	r1, [r5, r8]
    1064:	str	r0, [r1, #208]	; 0xd0
    1068:	mov	r1, #1
    106c:	bl	0 <coda_type_number_set_endianness>
    1070:	ldr	r0, [r5, r8]
    1074:	mov	r1, #0
    1078:	ldr	r0, [r0, #208]	; 0xd0
    107c:	bl	0 <coda_type_set_read_type>
    1080:	ldr	r0, [r5, r8]
    1084:	mov	r2, #8
    1088:	mov	r3, #0
    108c:	ldr	r0, [r0, #208]	; 0xd0
    1090:	bl	0 <coda_type_set_bit_size>
    1094:	ldr	r0, [r5, r8]
    1098:	movw	r1, #0
    109c:	movt	r1, #0
    10a0:	ldr	r0, [r0, #208]	; 0xd0
    10a4:	bl	0 <coda_type_set_description>
    10a8:	mov	r0, #9
    10ac:	mov	r1, #2
    10b0:	bl	0 <coda_type_number_new>
    10b4:	ldr	r1, [r5, r8]
    10b8:	str	r0, [r1, #212]	; 0xd4
    10bc:	mov	r1, #1
    10c0:	bl	0 <coda_type_number_set_endianness>
    10c4:	ldr	r0, [r5, r8]
    10c8:	mov	r1, #2
    10cc:	ldr	r0, [r0, #212]	; 0xd4
    10d0:	bl	0 <coda_type_set_read_type>
    10d4:	ldr	r0, [r5, r8]
    10d8:	mov	r2, #16
    10dc:	mov	r3, #0
    10e0:	ldr	r0, [r0, #212]	; 0xd4
    10e4:	bl	0 <coda_type_set_bit_size>
    10e8:	ldr	r0, [r5, r8]
    10ec:	movw	r1, #0
    10f0:	movt	r1, #0
    10f4:	ldr	r0, [r0, #212]	; 0xd4
    10f8:	bl	0 <coda_type_set_description>
    10fc:	mov	r0, #9
    1100:	mov	r1, #2
    1104:	bl	0 <coda_type_number_new>
    1108:	ldr	r1, [r5, r8]
    110c:	str	r0, [r1, #220]	; 0xdc
    1110:	mov	r1, #1
    1114:	bl	0 <coda_type_number_set_endianness>
    1118:	ldr	r0, [r5, r8]
    111c:	mov	r1, #2
    1120:	ldr	r0, [r0, #220]	; 0xdc
    1124:	bl	0 <coda_type_set_read_type>
    1128:	ldr	r0, [r5, r8]
    112c:	mov	r2, #16
    1130:	mov	r3, #0
    1134:	ldr	r0, [r0, #220]	; 0xdc
    1138:	bl	0 <coda_type_set_bit_size>
    113c:	ldr	r0, [r5, r8]
    1140:	movw	r1, #0
    1144:	movt	r1, #0
    1148:	ldr	r0, [r0, #220]	; 0xdc
    114c:	bl	0 <coda_type_set_description>
    1150:	ldr	r0, [r5, r8]
    1154:	movw	sl, #0
    1158:	movt	sl, #0
    115c:	mov	r1, sl
    1160:	ldr	r0, [r0, #220]	; 0xdc
    1164:	bl	0 <coda_type_number_set_unit>
    1168:	mov	r0, #9
    116c:	mov	r1, #2
    1170:	bl	0 <coda_type_number_new>
    1174:	ldr	r1, [r5, r8]
    1178:	str	r0, [r1, #224]	; 0xe0
    117c:	mov	r1, #1
    1180:	bl	0 <coda_type_number_set_endianness>
    1184:	ldr	r0, [r5, r8]
    1188:	mov	r1, #2
    118c:	ldr	r0, [r0, #224]	; 0xe0
    1190:	bl	0 <coda_type_set_read_type>
    1194:	ldr	r0, [r5, r8]
    1198:	mov	r2, #16
    119c:	mov	r3, #0
    11a0:	ldr	r0, [r0, #224]	; 0xe0
    11a4:	bl	0 <coda_type_set_bit_size>
    11a8:	ldr	r0, [r5, r8]
    11ac:	movw	r1, #0
    11b0:	movt	r1, #0
    11b4:	ldr	r0, [r0, #224]	; 0xe0
    11b8:	bl	0 <coda_type_set_description>
    11bc:	ldr	r0, [r5, r8]
    11c0:	mov	r1, sl
    11c4:	ldr	r0, [r0, #224]	; 0xe0
    11c8:	bl	0 <coda_type_number_set_unit>
    11cc:	mov	r0, #9
    11d0:	mov	r1, #2
    11d4:	bl	0 <coda_type_number_new>
    11d8:	ldr	r1, [r5, r8]
    11dc:	str	r0, [r1, #228]	; 0xe4
    11e0:	mov	r1, #1
    11e4:	bl	0 <coda_type_number_set_endianness>
    11e8:	ldr	r0, [r5, r8]
    11ec:	mov	r1, #2
    11f0:	ldr	r0, [r0, #228]	; 0xe4
    11f4:	bl	0 <coda_type_set_read_type>
    11f8:	ldr	r0, [r5, r8]
    11fc:	mov	r2, #16
    1200:	mov	r3, #0
    1204:	ldr	r0, [r0, #228]	; 0xe4
    1208:	bl	0 <coda_type_set_bit_size>
    120c:	ldr	r0, [r5, r8]
    1210:	movw	r1, #0
    1214:	movt	r1, #0
    1218:	ldr	r0, [r0, #228]	; 0xe4
    121c:	bl	0 <coda_type_set_description>
    1220:	ldr	r0, [r5, r8]
    1224:	mov	r1, sl
    1228:	ldr	r0, [r0, #228]	; 0xe4
    122c:	bl	0 <coda_type_number_set_unit>
    1230:	mov	r0, #9
    1234:	mov	r1, #2
    1238:	bl	0 <coda_type_number_new>
    123c:	ldr	r1, [r5, r8]
    1240:	str	r0, [r1, #232]	; 0xe8
    1244:	mov	r1, #1
    1248:	bl	0 <coda_type_number_set_endianness>
    124c:	ldr	r0, [r5, r8]
    1250:	mov	r1, #2
    1254:	ldr	r0, [r0, #232]	; 0xe8
    1258:	bl	0 <coda_type_set_read_type>
    125c:	ldr	r0, [r5, r8]
    1260:	mov	r2, #16
    1264:	mov	r3, #0
    1268:	ldr	r0, [r0, #232]	; 0xe8
    126c:	bl	0 <coda_type_set_bit_size>
    1270:	ldr	r0, [r5, r8]
    1274:	movw	r1, #0
    1278:	movt	r1, #0
    127c:	ldr	r0, [r0, #232]	; 0xe8
    1280:	bl	0 <coda_type_set_description>
    1284:	ldr	r0, [r5, r8]
    1288:	movw	r1, #0
    128c:	movt	r1, #0
    1290:	ldr	r0, [r0, #232]	; 0xe8
    1294:	bl	0 <coda_type_number_set_unit>
    1298:	mov	r0, #9
    129c:	mov	r1, #2
    12a0:	bl	0 <coda_type_number_new>
    12a4:	ldr	r1, [r5, r8]
    12a8:	str	r0, [r1, #236]	; 0xec
    12ac:	mov	r1, #1
    12b0:	bl	0 <coda_type_number_set_endianness>
    12b4:	ldr	r0, [r5, r8]
    12b8:	mov	r1, #4
    12bc:	ldr	r0, [r0, #236]	; 0xec
    12c0:	bl	0 <coda_type_set_read_type>
    12c4:	ldr	r0, [r5, r8]
    12c8:	mov	r2, #32
    12cc:	mov	r3, #0
    12d0:	ldr	r0, [r0, #236]	; 0xec
    12d4:	bl	0 <coda_type_set_bit_size>
    12d8:	ldr	r0, [r5, r8]
    12dc:	movw	r1, #0
    12e0:	movt	r1, #0
    12e4:	ldr	r0, [r0, #236]	; 0xec
    12e8:	bl	0 <coda_type_set_description>
    12ec:	mov	r0, #9
    12f0:	mov	r1, #2
    12f4:	bl	0 <coda_type_number_new>
    12f8:	ldr	r1, [r5, r8]
    12fc:	str	r0, [r1, #240]	; 0xf0
    1300:	mov	r1, #1
    1304:	bl	0 <coda_type_number_set_endianness>
    1308:	ldr	r0, [r5, r8]
    130c:	mov	r1, #4
    1310:	ldr	r0, [r0, #240]	; 0xf0
    1314:	bl	0 <coda_type_set_read_type>
    1318:	ldr	r0, [r5, r8]
    131c:	mov	r2, #32
    1320:	mov	r3, #0
    1324:	ldr	r0, [r0, #240]	; 0xf0
    1328:	bl	0 <coda_type_set_bit_size>
    132c:	ldr	r0, [r5, r8]
    1330:	movw	r1, #0
    1334:	movt	r1, #0
    1338:	ldr	r0, [r0, #240]	; 0xf0
    133c:	bl	0 <coda_type_set_description>
    1340:	mov	r0, #9
    1344:	mov	r1, #2
    1348:	bl	0 <coda_type_number_new>
    134c:	ldr	r1, [r5, r8]
    1350:	str	r0, [r1, #244]	; 0xf4
    1354:	mov	r1, #1
    1358:	bl	0 <coda_type_number_set_endianness>
    135c:	ldr	r0, [r5, r8]
    1360:	mov	r1, #4
    1364:	ldr	r0, [r0, #244]	; 0xf4
    1368:	bl	0 <coda_type_set_read_type>
    136c:	ldr	r0, [r5, r8]
    1370:	mov	r2, #32
    1374:	mov	r3, #0
    1378:	ldr	r0, [r0, #244]	; 0xf4
    137c:	bl	0 <coda_type_set_bit_size>
    1380:	ldr	r0, [r5, r8]
    1384:	movw	r1, #0
    1388:	movt	r1, #0
    138c:	ldr	r0, [r0, #244]	; 0xf4
    1390:	bl	0 <coda_type_set_description>
    1394:	mov	r0, #9
    1398:	mov	r1, #2
    139c:	bl	0 <coda_type_number_new>
    13a0:	ldr	r1, [r5, r8]
    13a4:	str	r0, [r1, #248]	; 0xf8
    13a8:	mov	r1, #1
    13ac:	bl	0 <coda_type_number_set_endianness>
    13b0:	ldr	r0, [r5, r8]
    13b4:	mov	r1, #4
    13b8:	ldr	r0, [r0, #248]	; 0xf8
    13bc:	bl	0 <coda_type_set_read_type>
    13c0:	ldr	r0, [r5, r8]
    13c4:	mov	r2, #32
    13c8:	mov	r3, #0
    13cc:	ldr	r0, [r0, #248]	; 0xf8
    13d0:	bl	0 <coda_type_set_bit_size>
    13d4:	ldr	r0, [r5, r8]
    13d8:	mov	r1, r6
    13dc:	ldr	r0, [r0, #248]	; 0xf8
    13e0:	bl	0 <coda_type_set_description>
    13e4:	mov	r0, #9
    13e8:	mov	r1, #2
    13ec:	bl	0 <coda_type_number_new>
    13f0:	ldr	r1, [r5, r8]
    13f4:	str	r0, [r1, #252]	; 0xfc
    13f8:	mov	r1, #1
    13fc:	bl	0 <coda_type_number_set_endianness>
    1400:	ldr	r0, [r5, r8]
    1404:	mov	r1, #4
    1408:	ldr	r0, [r0, #252]	; 0xfc
    140c:	bl	0 <coda_type_set_read_type>
    1410:	ldr	r0, [r5, r8]
    1414:	mov	r2, #32
    1418:	mov	r3, #0
    141c:	ldr	r0, [r0, #252]	; 0xfc
    1420:	bl	0 <coda_type_set_bit_size>
    1424:	ldr	r0, [r5, r8]
    1428:	mov	r1, r4
    142c:	ldr	r0, [r0, #252]	; 0xfc
    1430:	bl	0 <coda_type_set_description>
    1434:	mov	r0, #9
    1438:	mov	r1, #2
    143c:	bl	0 <coda_type_number_new>
    1440:	ldr	r1, [r5, r8]
    1444:	str	r0, [r1, #256]	; 0x100
    1448:	mov	r1, #1
    144c:	bl	0 <coda_type_number_set_endianness>
    1450:	ldr	r0, [r5, r8]
    1454:	mov	r1, #4
    1458:	ldr	r0, [r0, #256]	; 0x100
    145c:	bl	0 <coda_type_set_read_type>
    1460:	ldr	r0, [r5, r8]
    1464:	mov	r2, #32
    1468:	mov	r3, #0
    146c:	ldr	r0, [r0, #256]	; 0x100
    1470:	bl	0 <coda_type_set_bit_size>
    1474:	ldr	r0, [r5, r8]
    1478:	mov	r1, r9
    147c:	ldr	r0, [r0, #256]	; 0x100
    1480:	bl	0 <coda_type_set_description>
    1484:	mov	r0, #9
    1488:	bl	0 <coda_type_array_new>
    148c:	ldr	r1, [r5, r8]
    1490:	str	r0, [r1, #60]	; 0x3c
    1494:	mov	r1, #0
    1498:	bl	0 <coda_type_array_add_variable_dimension>
    149c:	ldr	r0, [r5, r8]
    14a0:	ldr	r1, [r0, #56]	; 0x38
    14a4:	ldr	r0, [r0, #60]	; 0x3c
    14a8:	bl	0 <coda_type_array_set_base_type>
    14ac:	mov	r0, #9
    14b0:	bl	0 <coda_type_array_new>
    14b4:	ldr	r1, [r5, r8]
    14b8:	str	r0, [r1, #68]	; 0x44
    14bc:	mov	r1, #0
    14c0:	bl	0 <coda_type_array_add_variable_dimension>
    14c4:	ldr	r0, [r5, r8]
    14c8:	ldr	r1, [r0, #64]	; 0x40
    14cc:	ldr	r0, [r0, #68]	; 0x44
    14d0:	bl	0 <coda_type_array_set_base_type>
    14d4:	mov	r0, #9
    14d8:	bl	0 <coda_type_record_new>
    14dc:	ldr	r1, [r5, r8]
    14e0:	str	r0, [r1, #284]	; 0x11c
    14e4:	movw	r0, #0
    14e8:	movt	r0, #0
    14ec:	bl	0 <coda_type_record_field_new>
    14f0:	mov	r4, r0
    14f4:	ldr	r0, [r5, r8]
    14f8:	ldr	r1, [r0]
    14fc:	mov	r0, r4
    1500:	bl	0 <coda_type_record_field_set_type>
    1504:	ldr	r0, [r5, r8]
    1508:	mov	r1, r4
    150c:	ldr	r0, [r0, #284]	; 0x11c
    1510:	bl	0 <coda_type_record_add_field>
    1514:	movw	r0, #0
    1518:	movt	r0, #0
    151c:	bl	0 <coda_type_record_field_new>
    1520:	mov	r4, r0
    1524:	ldr	r0, [r5, r8]
    1528:	ldr	r1, [r0, #8]
    152c:	mov	r0, r4
    1530:	bl	0 <coda_type_record_field_set_type>
    1534:	ldr	r0, [r5, r8]
    1538:	mov	r1, r4
    153c:	ldr	r0, [r0, #284]	; 0x11c
    1540:	bl	0 <coda_type_record_add_field>
    1544:	movw	r0, #0
    1548:	movt	r0, #0
    154c:	bl	0 <coda_type_record_field_new>
    1550:	mov	r4, r0
    1554:	ldr	r0, [r5, r8]
    1558:	ldr	r1, [r0, #12]
    155c:	mov	r0, r4
    1560:	bl	0 <coda_type_record_field_set_type>
    1564:	ldr	r0, [r5, r8]
    1568:	mov	r1, r4
    156c:	ldr	r0, [r0, #284]	; 0x11c
    1570:	bl	0 <coda_type_record_add_field>
    1574:	movw	r0, #0
    1578:	movt	r0, #0
    157c:	bl	0 <coda_type_record_field_new>
    1580:	mov	r4, r0
    1584:	ldr	r0, [r5, r8]
    1588:	ldr	r1, [r0, #16]
    158c:	mov	r0, r4
    1590:	bl	0 <coda_type_record_field_set_type>
    1594:	ldr	r0, [r5, r8]
    1598:	mov	r1, r4
    159c:	ldr	r0, [r0, #284]	; 0x11c
    15a0:	bl	0 <coda_type_record_add_field>
    15a4:	movw	r0, #0
    15a8:	movt	r0, #0
    15ac:	bl	0 <coda_type_record_field_new>
    15b0:	mov	r4, r0
    15b4:	ldr	r0, [r5, r8]
    15b8:	ldr	r1, [r0, #20]
    15bc:	mov	r0, r4
    15c0:	bl	0 <coda_type_record_field_set_type>
    15c4:	ldr	r0, [r5, r8]
    15c8:	mov	r1, r4
    15cc:	ldr	r0, [r0, #284]	; 0x11c
    15d0:	bl	0 <coda_type_record_add_field>
    15d4:	movw	r0, #0
    15d8:	movt	r0, #0
    15dc:	bl	0 <coda_type_record_field_new>
    15e0:	mov	r4, r0
    15e4:	ldr	r0, [r5, r8]
    15e8:	ldr	r1, [r0, #24]
    15ec:	mov	r0, r4
    15f0:	bl	0 <coda_type_record_field_set_type>
    15f4:	ldr	r0, [r5, r8]
    15f8:	mov	r1, r4
    15fc:	ldr	r0, [r0, #284]	; 0x11c
    1600:	bl	0 <coda_type_record_add_field>
    1604:	movw	r0, #0
    1608:	movt	r0, #0
    160c:	bl	0 <coda_type_record_field_new>
    1610:	mov	r4, r0
    1614:	ldr	r0, [r5, r8]
    1618:	ldr	r1, [r0, #28]
    161c:	mov	r0, r4
    1620:	bl	0 <coda_type_record_field_set_type>
    1624:	ldr	r0, [r5, r8]
    1628:	mov	r1, r4
    162c:	ldr	r0, [r0, #284]	; 0x11c
    1630:	bl	0 <coda_type_record_add_field>
    1634:	movw	r0, #0
    1638:	movt	r0, #0
    163c:	bl	0 <coda_type_record_field_new>
    1640:	mov	r4, r0
    1644:	ldr	r0, [r5, r8]
    1648:	ldr	r1, [r0, #32]
    164c:	mov	r0, r4
    1650:	bl	0 <coda_type_record_field_set_type>
    1654:	ldr	r0, [r5, r8]
    1658:	mov	r1, r4
    165c:	ldr	r0, [r0, #284]	; 0x11c
    1660:	bl	0 <coda_type_record_add_field>
    1664:	movw	r0, #0
    1668:	movt	r0, #0
    166c:	bl	0 <coda_type_record_field_new>
    1670:	mov	r4, r0
    1674:	ldr	r0, [r5, r8]
    1678:	ldr	r1, [r0, #36]	; 0x24
    167c:	mov	r0, r4
    1680:	bl	0 <coda_type_record_field_set_type>
    1684:	ldr	r0, [r5, r8]
    1688:	mov	r1, r4
    168c:	ldr	r0, [r0, #284]	; 0x11c
    1690:	bl	0 <coda_type_record_add_field>
    1694:	movw	r0, #0
    1698:	movt	r0, #0
    169c:	bl	0 <coda_type_record_field_new>
    16a0:	mov	r4, r0
    16a4:	ldr	r0, [r5, r8]
    16a8:	ldr	r1, [r0, #40]	; 0x28
    16ac:	mov	r0, r4
    16b0:	bl	0 <coda_type_record_field_set_type>
    16b4:	ldr	r0, [r5, r8]
    16b8:	mov	r1, r4
    16bc:	ldr	r0, [r0, #284]	; 0x11c
    16c0:	bl	0 <coda_type_record_add_field>
    16c4:	movw	r0, #0
    16c8:	movt	r0, #0
    16cc:	bl	0 <coda_type_record_field_new>
    16d0:	mov	r4, r0
    16d4:	ldr	r0, [r5, r8]
    16d8:	ldr	r1, [r0, #44]	; 0x2c
    16dc:	mov	r0, r4
    16e0:	bl	0 <coda_type_record_field_set_type>
    16e4:	ldr	r0, [r5, r8]
    16e8:	mov	r1, r4
    16ec:	ldr	r0, [r0, #284]	; 0x11c
    16f0:	bl	0 <coda_type_record_add_field>
    16f4:	movw	r0, #0
    16f8:	movt	r0, #0
    16fc:	bl	0 <coda_type_record_field_new>
    1700:	mov	r4, r0
    1704:	ldr	r0, [r5, r8]
    1708:	ldr	r1, [r0, #48]	; 0x30
    170c:	mov	r0, r4
    1710:	bl	0 <coda_type_record_field_set_type>
    1714:	ldr	r0, [r5, r8]
    1718:	mov	r1, r4
    171c:	ldr	r0, [r0, #284]	; 0x11c
    1720:	bl	0 <coda_type_record_add_field>
    1724:	movw	r0, #0
    1728:	movt	r0, #0
    172c:	bl	0 <coda_type_record_field_new>
    1730:	mov	r4, r0
    1734:	ldr	r0, [r5, r8]
    1738:	ldr	r1, [r0, #52]	; 0x34
    173c:	mov	r0, r4
    1740:	bl	0 <coda_type_record_field_set_type>
    1744:	ldr	r0, [r5, r8]
    1748:	mov	r1, r4
    174c:	ldr	r0, [r0, #284]	; 0x11c
    1750:	bl	0 <coda_type_record_add_field>
    1754:	movw	r0, #0
    1758:	movt	r0, #0
    175c:	bl	0 <coda_type_record_field_new>
    1760:	mov	r4, r0
    1764:	ldr	r0, [r5, r8]
    1768:	ldr	r1, [r0, #60]	; 0x3c
    176c:	mov	r0, r4
    1770:	bl	0 <coda_type_record_field_set_type>
    1774:	ldr	r0, [r5, r8]
    1778:	mov	r1, r4
    177c:	ldr	r0, [r0, #284]	; 0x11c
    1780:	bl	0 <coda_type_record_add_field>
    1784:	movw	r0, #0
    1788:	movt	r0, #0
    178c:	bl	0 <coda_type_record_field_new>
    1790:	mov	r4, r0
    1794:	ldr	r0, [r5, r8]
    1798:	ldr	r1, [r0, #68]	; 0x44
    179c:	mov	r0, r4
    17a0:	bl	0 <coda_type_record_field_set_type>
    17a4:	ldr	r0, [r5, r8]
    17a8:	mov	r1, r4
    17ac:	ldr	r0, [r0, #284]	; 0x11c
    17b0:	bl	0 <coda_type_record_add_field>
    17b4:	movw	r0, #0
    17b8:	movt	r0, #0
    17bc:	bl	0 <coda_type_record_field_new>
    17c0:	mov	r4, r0
    17c4:	ldr	r0, [r5, r8]
    17c8:	ldr	r1, [r0, #72]	; 0x48
    17cc:	mov	r0, r4
    17d0:	bl	0 <coda_type_record_field_set_type>
    17d4:	ldr	r0, [r5, r8]
    17d8:	mov	r1, r4
    17dc:	ldr	r0, [r0, #284]	; 0x11c
    17e0:	bl	0 <coda_type_record_add_field>
    17e4:	movw	r0, #0
    17e8:	movt	r0, #0
    17ec:	bl	0 <coda_type_record_field_new>
    17f0:	mov	r4, r0
    17f4:	ldr	r0, [r5, r8]
    17f8:	ldr	r1, [r0, #76]	; 0x4c
    17fc:	mov	r0, r4
    1800:	bl	0 <coda_type_record_field_set_type>
    1804:	ldr	r0, [r5, r8]
    1808:	mov	r1, r4
    180c:	ldr	r0, [r0, #284]	; 0x11c
    1810:	bl	0 <coda_type_record_add_field>
    1814:	movw	r0, #0
    1818:	movt	r0, #0
    181c:	bl	0 <coda_type_record_field_new>
    1820:	mov	r4, r0
    1824:	ldr	r0, [r5, r8]
    1828:	ldr	r1, [r0, #80]	; 0x50
    182c:	mov	r0, r4
    1830:	bl	0 <coda_type_record_field_set_type>
    1834:	ldr	r0, [r5, r8]
    1838:	mov	r1, r4
    183c:	ldr	r0, [r0, #284]	; 0x11c
    1840:	bl	0 <coda_type_record_add_field>
    1844:	movw	r0, #0
    1848:	movt	r0, #0
    184c:	bl	0 <coda_type_record_field_new>
    1850:	mov	r4, r0
    1854:	ldr	r0, [r5, r8]
    1858:	ldr	r1, [r0, #84]	; 0x54
    185c:	mov	r0, r4
    1860:	bl	0 <coda_type_record_field_set_type>
    1864:	ldr	r0, [r5, r8]
    1868:	mov	r1, r4
    186c:	ldr	r0, [r0, #284]	; 0x11c
    1870:	bl	0 <coda_type_record_add_field>
    1874:	mov	r0, #9
    1878:	bl	0 <coda_type_record_new>
    187c:	ldr	r1, [r5, r8]
    1880:	movw	sl, #0
    1884:	movt	sl, #0
    1888:	str	r0, [r1, #140]	; 0x8c
    188c:	mov	r0, sl
    1890:	bl	0 <coda_type_record_field_new>
    1894:	mov	r4, r0
    1898:	ldr	r0, [r5, r8]
    189c:	ldr	r1, [r0, #144]	; 0x90
    18a0:	mov	r0, r4
    18a4:	bl	0 <coda_type_record_field_set_type>
    18a8:	ldr	r0, [r5, r8]
    18ac:	mov	r1, r4
    18b0:	ldr	r0, [r0, #140]	; 0x8c
    18b4:	bl	0 <coda_type_record_add_field>
    18b8:	movw	r9, #0
    18bc:	movt	r9, #0
    18c0:	mov	r0, r9
    18c4:	bl	0 <coda_type_record_field_new>
    18c8:	mov	r4, r0
    18cc:	ldr	r0, [r5, r8]
    18d0:	ldr	r1, [r0, #148]	; 0x94
    18d4:	mov	r0, r4
    18d8:	bl	0 <coda_type_record_field_set_type>
    18dc:	ldr	r0, [r5, r8]
    18e0:	mov	r1, r4
    18e4:	ldr	r0, [r0, #140]	; 0x8c
    18e8:	bl	0 <coda_type_record_add_field>
    18ec:	movw	r4, #0
    18f0:	movt	r4, #0
    18f4:	mov	r0, r4
    18f8:	bl	0 <coda_type_record_field_new>
    18fc:	mov	r7, r0
    1900:	ldr	r0, [r5, r8]
    1904:	ldr	r1, [r0, #152]	; 0x98
    1908:	mov	r0, r7
    190c:	bl	0 <coda_type_record_field_set_type>
    1910:	ldr	r0, [r5, r8]
    1914:	mov	r1, r7
    1918:	ldr	r0, [r0, #140]	; 0x8c
    191c:	bl	0 <coda_type_record_add_field>
    1920:	movw	r7, #0
    1924:	movt	r7, #0
    1928:	mov	r0, r7
    192c:	bl	0 <coda_type_record_field_new>
    1930:	mov	r6, r0
    1934:	ldr	r0, [r5, r8]
    1938:	ldr	r1, [r0, #156]	; 0x9c
    193c:	mov	r0, r6
    1940:	bl	0 <coda_type_record_field_set_type>
    1944:	ldr	r0, [r5, r8]
    1948:	mov	r1, r6
    194c:	ldr	r0, [r0, #140]	; 0x8c
    1950:	bl	0 <coda_type_record_add_field>
    1954:	movw	r0, #0
    1958:	movt	r0, #0
    195c:	bl	0 <coda_type_record_field_new>
    1960:	mov	r6, r0
    1964:	ldr	r0, [r5, r8]
    1968:	ldr	r1, [r0, #160]	; 0xa0
    196c:	mov	r0, r6
    1970:	bl	0 <coda_type_record_field_set_type>
    1974:	ldr	r0, [r5, r8]
    1978:	mov	r1, r6
    197c:	ldr	r0, [r0, #140]	; 0x8c
    1980:	bl	0 <coda_type_record_add_field>
    1984:	movw	r0, #0
    1988:	movt	r0, #0
    198c:	bl	0 <coda_type_record_field_new>
    1990:	mov	r6, r0
    1994:	ldr	r0, [r5, r8]
    1998:	ldr	r1, [r0, #164]	; 0xa4
    199c:	mov	r0, r6
    19a0:	bl	0 <coda_type_record_field_set_type>
    19a4:	ldr	r0, [r5, r8]
    19a8:	mov	r1, r6
    19ac:	ldr	r0, [r0, #140]	; 0x8c
    19b0:	bl	0 <coda_type_record_add_field>
    19b4:	movw	r0, #0
    19b8:	movt	r0, #0
    19bc:	bl	0 <coda_type_record_field_new>
    19c0:	mov	r6, r0
    19c4:	ldr	r0, [r5, r8]
    19c8:	ldr	r1, [r0, #168]	; 0xa8
    19cc:	mov	r0, r6
    19d0:	bl	0 <coda_type_record_field_set_type>
    19d4:	ldr	r0, [r5, r8]
    19d8:	mov	r1, r6
    19dc:	ldr	r0, [r0, #140]	; 0x8c
    19e0:	bl	0 <coda_type_record_add_field>
    19e4:	movw	r0, #0
    19e8:	movt	r0, #0
    19ec:	bl	0 <coda_type_record_field_new>
    19f0:	mov	r6, r0
    19f4:	ldr	r0, [r5, r8]
    19f8:	ldr	r1, [r0, #172]	; 0xac
    19fc:	mov	r0, r6
    1a00:	bl	0 <coda_type_record_field_set_type>
    1a04:	ldr	r0, [r5, r8]
    1a08:	mov	r1, r6
    1a0c:	ldr	r0, [r0, #140]	; 0x8c
    1a10:	bl	0 <coda_type_record_add_field>
    1a14:	movw	r0, #0
    1a18:	movt	r0, #0
    1a1c:	bl	0 <coda_type_record_field_new>
    1a20:	mov	r6, r0
    1a24:	ldr	r0, [r5, r8]
    1a28:	ldr	r1, [r0, #176]	; 0xb0
    1a2c:	mov	r0, r6
    1a30:	bl	0 <coda_type_record_field_set_type>
    1a34:	ldr	r0, [r5, r8]
    1a38:	mov	r1, r6
    1a3c:	ldr	r0, [r0, #140]	; 0x8c
    1a40:	bl	0 <coda_type_record_add_field>
    1a44:	movw	r0, #0
    1a48:	movt	r0, #0
    1a4c:	bl	0 <coda_type_record_field_new>
    1a50:	mov	r6, r0
    1a54:	ldr	r0, [r5, r8]
    1a58:	ldr	r1, [r0, #180]	; 0xb4
    1a5c:	mov	r0, r6
    1a60:	bl	0 <coda_type_record_field_set_type>
    1a64:	ldr	r0, [r5, r8]
    1a68:	mov	r1, r6
    1a6c:	ldr	r0, [r0, #140]	; 0x8c
    1a70:	bl	0 <coda_type_record_add_field>
    1a74:	mov	r0, #9
    1a78:	bl	0 <coda_type_record_new>
    1a7c:	ldr	r1, [r5, r8]
    1a80:	str	r0, [r1, #268]	; 0x10c
    1a84:	movw	r0, #0
    1a88:	movt	r0, #0
    1a8c:	bl	0 <coda_type_record_field_new>
    1a90:	mov	r6, r0
    1a94:	ldr	r0, [r5, r8]
    1a98:	ldr	r1, [r0, #88]	; 0x58
    1a9c:	mov	r0, r6
    1aa0:	bl	0 <coda_type_record_field_set_type>
    1aa4:	ldr	r0, [r5, r8]
    1aa8:	mov	r1, r6
    1aac:	ldr	r0, [r0, #268]	; 0x10c
    1ab0:	bl	0 <coda_type_record_add_field>
    1ab4:	movw	r0, #0
    1ab8:	movt	r0, #0
    1abc:	bl	0 <coda_type_record_field_new>
    1ac0:	mov	r6, r0
    1ac4:	ldr	r0, [r5, r8]
    1ac8:	ldr	r1, [r0, #92]	; 0x5c
    1acc:	mov	r0, r6
    1ad0:	bl	0 <coda_type_record_field_set_type>
    1ad4:	ldr	r0, [r5, r8]
    1ad8:	mov	r1, r6
    1adc:	ldr	r0, [r0, #268]	; 0x10c
    1ae0:	bl	0 <coda_type_record_add_field>
    1ae4:	movw	r0, #0
    1ae8:	movt	r0, #0
    1aec:	bl	0 <coda_type_record_field_new>
    1af0:	mov	r6, r0
    1af4:	ldr	r0, [r5, r8]
    1af8:	ldr	r1, [r0, #96]	; 0x60
    1afc:	mov	r0, r6
    1b00:	bl	0 <coda_type_record_field_set_type>
    1b04:	ldr	r0, [r5, r8]
    1b08:	mov	r1, r6
    1b0c:	ldr	r0, [r0, #268]	; 0x10c
    1b10:	bl	0 <coda_type_record_add_field>
    1b14:	movw	r0, #0
    1b18:	movt	r0, #0
    1b1c:	bl	0 <coda_type_record_field_new>
    1b20:	mov	r6, r0
    1b24:	ldr	r0, [r5, r8]
    1b28:	ldr	r1, [r0, #100]	; 0x64
    1b2c:	mov	r0, r6
    1b30:	bl	0 <coda_type_record_field_set_type>
    1b34:	ldr	r0, [r5, r8]
    1b38:	mov	r1, r6
    1b3c:	ldr	r0, [r0, #268]	; 0x10c
    1b40:	bl	0 <coda_type_record_add_field>
    1b44:	movw	r0, #0
    1b48:	movt	r0, #0
    1b4c:	bl	0 <coda_type_record_field_new>
    1b50:	mov	r6, r0
    1b54:	ldr	r0, [r5, r8]
    1b58:	ldr	r1, [r0, #104]	; 0x68
    1b5c:	mov	r0, r6
    1b60:	bl	0 <coda_type_record_field_set_type>
    1b64:	ldr	r0, [r5, r8]
    1b68:	mov	r1, r6
    1b6c:	ldr	r0, [r0, #268]	; 0x10c
    1b70:	bl	0 <coda_type_record_add_field>
    1b74:	mov	r0, sl
    1b78:	bl	0 <coda_type_record_field_new>
    1b7c:	mov	r6, r0
    1b80:	ldr	r0, [r5, r8]
    1b84:	ldr	r1, [r0, #108]	; 0x6c
    1b88:	mov	r0, r6
    1b8c:	bl	0 <coda_type_record_field_set_type>
    1b90:	ldr	r0, [r5, r8]
    1b94:	mov	r1, r6
    1b98:	ldr	r0, [r0, #268]	; 0x10c
    1b9c:	bl	0 <coda_type_record_add_field>
    1ba0:	mov	r0, r9
    1ba4:	bl	0 <coda_type_record_field_new>
    1ba8:	mov	r6, r0
    1bac:	ldr	r0, [r5, r8]
    1bb0:	ldr	r1, [r0, #112]	; 0x70
    1bb4:	mov	r0, r6
    1bb8:	bl	0 <coda_type_record_field_set_type>
    1bbc:	ldr	r0, [r5, r8]
    1bc0:	mov	r1, r6
    1bc4:	ldr	r0, [r0, #268]	; 0x10c
    1bc8:	bl	0 <coda_type_record_add_field>
    1bcc:	mov	r0, r4
    1bd0:	bl	0 <coda_type_record_field_new>
    1bd4:	mov	r4, r0
    1bd8:	ldr	r0, [r5, r8]
    1bdc:	ldr	r1, [r0, #116]	; 0x74
    1be0:	mov	r0, r4
    1be4:	bl	0 <coda_type_record_field_set_type>
    1be8:	ldr	r0, [r5, r8]
    1bec:	mov	r1, r4
    1bf0:	ldr	r0, [r0, #268]	; 0x10c
    1bf4:	bl	0 <coda_type_record_add_field>
    1bf8:	mov	r0, r7
    1bfc:	bl	0 <coda_type_record_field_new>
    1c00:	mov	r4, r0
    1c04:	ldr	r0, [r5, r8]
    1c08:	ldr	r1, [r0, #120]	; 0x78
    1c0c:	mov	r0, r4
    1c10:	bl	0 <coda_type_record_field_set_type>
    1c14:	ldr	r0, [r5, r8]
    1c18:	mov	r1, r4
    1c1c:	ldr	r0, [r0, #268]	; 0x10c
    1c20:	bl	0 <coda_type_record_add_field>
    1c24:	movw	r0, #0
    1c28:	movt	r0, #0
    1c2c:	bl	0 <coda_type_record_field_new>
    1c30:	mov	r4, r0
    1c34:	ldr	r0, [r5, r8]
    1c38:	ldr	r1, [r0, #124]	; 0x7c
    1c3c:	mov	r0, r4
    1c40:	bl	0 <coda_type_record_field_set_type>
    1c44:	ldr	r0, [r5, r8]
    1c48:	mov	r1, r4
    1c4c:	ldr	r0, [r0, #268]	; 0x10c
    1c50:	bl	0 <coda_type_record_add_field>
    1c54:	movw	r0, #0
    1c58:	movt	r0, #0
    1c5c:	bl	0 <coda_type_record_field_new>
    1c60:	mov	r4, r0
    1c64:	ldr	r0, [r5, r8]
    1c68:	ldr	r1, [r0, #128]	; 0x80
    1c6c:	mov	r0, r4
    1c70:	bl	0 <coda_type_record_field_set_type>
    1c74:	ldr	r0, [r5, r8]
    1c78:	mov	r1, r4
    1c7c:	ldr	r0, [r0, #268]	; 0x10c
    1c80:	bl	0 <coda_type_record_add_field>
    1c84:	movw	r0, #0
    1c88:	movt	r0, #0
    1c8c:	bl	0 <coda_type_record_field_new>
    1c90:	mov	r4, r0
    1c94:	ldr	r0, [r5, r8]
    1c98:	ldr	r1, [r0, #132]	; 0x84
    1c9c:	mov	r0, r4
    1ca0:	bl	0 <coda_type_record_field_set_type>
    1ca4:	ldr	r0, [r5, r8]
    1ca8:	mov	r1, r4
    1cac:	ldr	r0, [r0, #268]	; 0x10c
    1cb0:	bl	0 <coda_type_record_add_field>
    1cb4:	movw	r0, #0
    1cb8:	movt	r0, #0
    1cbc:	bl	0 <coda_type_record_field_new>
    1cc0:	mov	r4, r0
    1cc4:	ldr	r0, [r5, r8]
    1cc8:	ldr	r1, [r0, #136]	; 0x88
    1ccc:	mov	r0, r4
    1cd0:	bl	0 <coda_type_record_field_set_type>
    1cd4:	ldr	r0, [r5, r8]
    1cd8:	mov	r1, r4
    1cdc:	ldr	r0, [r0, #268]	; 0x10c
    1ce0:	bl	0 <coda_type_record_add_field>
    1ce4:	movw	r0, #0
    1ce8:	movt	r0, #0
    1cec:	bl	0 <coda_type_record_field_new>
    1cf0:	mov	r4, r0
    1cf4:	ldr	r0, [r5, r8]
    1cf8:	ldr	r1, [r0, #140]	; 0x8c
    1cfc:	mov	r0, r4
    1d00:	bl	0 <coda_type_record_field_set_type>
    1d04:	mov	r0, r4
    1d08:	bl	0 <coda_type_record_field_set_optional>
    1d0c:	ldr	r0, [r5, r8]
    1d10:	mov	r1, r4
    1d14:	ldr	r0, [r0, #268]	; 0x10c
    1d18:	bl	0 <coda_type_record_add_field>
    1d1c:	mov	r0, #9
    1d20:	bl	0 <coda_type_array_new>
    1d24:	ldr	r1, [r5, r8]
    1d28:	str	r0, [r1, #272]	; 0x110
    1d2c:	mov	r1, #0
    1d30:	bl	0 <coda_type_array_add_variable_dimension>
    1d34:	ldr	r0, [r5, r8]
    1d38:	ldr	r1, [r0, #268]	; 0x10c
    1d3c:	ldr	r0, [r0, #272]	; 0x110
    1d40:	bl	0 <coda_type_array_set_base_type>
    1d44:	mov	r0, #9
    1d48:	bl	0 <coda_type_record_new>
    1d4c:	ldr	r1, [r5, r8]
    1d50:	movw	sl, #0
    1d54:	movt	sl, #0
    1d58:	str	r0, [r1, #216]	; 0xd8
    1d5c:	mov	r0, sl
    1d60:	bl	0 <coda_type_record_field_new>
    1d64:	mov	r6, r0
    1d68:	ldr	r0, [r5, r8]
    1d6c:	ldr	r1, [r0, #220]	; 0xdc
    1d70:	mov	r0, r6
    1d74:	bl	0 <coda_type_record_field_set_type>
    1d78:	ldr	r0, [r5, r8]
    1d7c:	mov	r1, r6
    1d80:	ldr	r0, [r0, #216]	; 0xd8
    1d84:	bl	0 <coda_type_record_add_field>
    1d88:	movw	r6, #0
    1d8c:	movt	r6, #0
    1d90:	mov	r0, r6
    1d94:	bl	0 <coda_type_record_field_new>
    1d98:	mov	r7, r0
    1d9c:	ldr	r0, [r5, r8]
    1da0:	ldr	r1, [r0, #224]	; 0xe0
    1da4:	mov	r0, r7
    1da8:	bl	0 <coda_type_record_field_set_type>
    1dac:	ldr	r0, [r5, r8]
    1db0:	mov	r1, r7
    1db4:	ldr	r0, [r0, #216]	; 0xd8
    1db8:	bl	0 <coda_type_record_add_field>
    1dbc:	movw	r7, #0
    1dc0:	movt	r7, #0
    1dc4:	mov	r0, r7
    1dc8:	bl	0 <coda_type_record_field_new>
    1dcc:	mov	r4, r0
    1dd0:	ldr	r0, [r5, r8]
    1dd4:	ldr	r1, [r0, #228]	; 0xe4
    1dd8:	mov	r0, r4
    1ddc:	bl	0 <coda_type_record_field_set_type>
    1de0:	ldr	r0, [r5, r8]
    1de4:	mov	r1, r4
    1de8:	ldr	r0, [r0, #216]	; 0xd8
    1dec:	bl	0 <coda_type_record_add_field>
    1df0:	movw	r9, #0
    1df4:	movt	r9, #0
    1df8:	mov	r0, r9
    1dfc:	bl	0 <coda_type_record_field_new>
    1e00:	mov	r4, r0
    1e04:	ldr	r0, [r5, r8]
    1e08:	ldr	r1, [r0, #232]	; 0xe8
    1e0c:	mov	r0, r4
    1e10:	bl	0 <coda_type_record_field_set_type>
    1e14:	ldr	r0, [r5, r8]
    1e18:	mov	r1, r4
    1e1c:	ldr	r0, [r0, #216]	; 0xd8
    1e20:	bl	0 <coda_type_record_add_field>
    1e24:	movw	r0, #0
    1e28:	movt	r0, #0
    1e2c:	bl	0 <coda_type_record_field_new>
    1e30:	mov	r4, r0
    1e34:	ldr	r0, [r5, r8]
    1e38:	ldr	r1, [r0, #236]	; 0xec
    1e3c:	mov	r0, r4
    1e40:	bl	0 <coda_type_record_field_set_type>
    1e44:	ldr	r0, [r5, r8]
    1e48:	mov	r1, r4
    1e4c:	ldr	r0, [r0, #216]	; 0xd8
    1e50:	bl	0 <coda_type_record_add_field>
    1e54:	movw	r0, #0
    1e58:	movt	r0, #0
    1e5c:	bl	0 <coda_type_record_field_new>
    1e60:	mov	r4, r0
    1e64:	ldr	r0, [r5, r8]
    1e68:	ldr	r1, [r0, #240]	; 0xf0
    1e6c:	mov	r0, r4
    1e70:	bl	0 <coda_type_record_field_set_type>
    1e74:	ldr	r0, [r5, r8]
    1e78:	mov	r1, r4
    1e7c:	ldr	r0, [r0, #216]	; 0xd8
    1e80:	bl	0 <coda_type_record_add_field>
    1e84:	movw	r0, #0
    1e88:	movt	r0, #0
    1e8c:	bl	0 <coda_type_record_field_new>
    1e90:	mov	r4, r0
    1e94:	ldr	r0, [r5, r8]
    1e98:	ldr	r1, [r0, #244]	; 0xf4
    1e9c:	mov	r0, r4
    1ea0:	bl	0 <coda_type_record_field_set_type>
    1ea4:	ldr	r0, [r5, r8]
    1ea8:	mov	r1, r4
    1eac:	ldr	r0, [r0, #216]	; 0xd8
    1eb0:	bl	0 <coda_type_record_add_field>
    1eb4:	movw	r0, #0
    1eb8:	movt	r0, #0
    1ebc:	bl	0 <coda_type_record_field_new>
    1ec0:	mov	r4, r0
    1ec4:	ldr	r0, [r5, r8]
    1ec8:	ldr	r1, [r0, #248]	; 0xf8
    1ecc:	mov	r0, r4
    1ed0:	bl	0 <coda_type_record_field_set_type>
    1ed4:	ldr	r0, [r5, r8]
    1ed8:	mov	r1, r4
    1edc:	ldr	r0, [r0, #216]	; 0xd8
    1ee0:	bl	0 <coda_type_record_add_field>
    1ee4:	movw	r0, #0
    1ee8:	movt	r0, #0
    1eec:	bl	0 <coda_type_record_field_new>
    1ef0:	mov	r4, r0
    1ef4:	ldr	r0, [r5, r8]
    1ef8:	ldr	r1, [r0, #252]	; 0xfc
    1efc:	mov	r0, r4
    1f00:	bl	0 <coda_type_record_field_set_type>
    1f04:	ldr	r0, [r5, r8]
    1f08:	mov	r1, r4
    1f0c:	ldr	r0, [r0, #216]	; 0xd8
    1f10:	bl	0 <coda_type_record_add_field>
    1f14:	movw	r0, #0
    1f18:	movt	r0, #0
    1f1c:	bl	0 <coda_type_record_field_new>
    1f20:	mov	r4, r0
    1f24:	ldr	r0, [r5, r8]
    1f28:	ldr	r1, [r0, #256]	; 0x100
    1f2c:	mov	r0, r4
    1f30:	bl	0 <coda_type_record_field_set_type>
    1f34:	ldr	r0, [r5, r8]
    1f38:	mov	r1, r4
    1f3c:	ldr	r0, [r0, #216]	; 0xd8
    1f40:	bl	0 <coda_type_record_add_field>
    1f44:	mov	r0, #9
    1f48:	bl	0 <coda_type_record_new>
    1f4c:	ldr	r1, [r5, r8]
    1f50:	str	r0, [r1, #276]	; 0x114
    1f54:	movw	r0, #0
    1f58:	movt	r0, #0
    1f5c:	bl	0 <coda_type_record_field_new>
    1f60:	mov	r4, r0
    1f64:	ldr	r0, [r5, r8]
    1f68:	ldr	r1, [r0, #88]	; 0x58
    1f6c:	mov	r0, r4
    1f70:	bl	0 <coda_type_record_field_set_type>
    1f74:	ldr	r0, [r5, r8]
    1f78:	mov	r1, r4
    1f7c:	ldr	r0, [r0, #276]	; 0x114
    1f80:	bl	0 <coda_type_record_add_field>
    1f84:	movw	r0, #0
    1f88:	movt	r0, #0
    1f8c:	bl	0 <coda_type_record_field_new>
    1f90:	mov	r4, r0
    1f94:	ldr	r0, [r5, r8]
    1f98:	ldr	r1, [r0, #184]	; 0xb8
    1f9c:	mov	r0, r4
    1fa0:	bl	0 <coda_type_record_field_set_type>
    1fa4:	ldr	r0, [r5, r8]
    1fa8:	mov	r1, r4
    1fac:	ldr	r0, [r0, #276]	; 0x114
    1fb0:	bl	0 <coda_type_record_add_field>
    1fb4:	movw	r0, #0
    1fb8:	movt	r0, #0
    1fbc:	bl	0 <coda_type_record_field_new>
    1fc0:	mov	r4, r0
    1fc4:	ldr	r0, [r5, r8]
    1fc8:	ldr	r1, [r0, #188]	; 0xbc
    1fcc:	mov	r0, r4
    1fd0:	bl	0 <coda_type_record_field_set_type>
    1fd4:	ldr	r0, [r5, r8]
    1fd8:	mov	r1, r4
    1fdc:	ldr	r0, [r0, #276]	; 0x114
    1fe0:	bl	0 <coda_type_record_add_field>
    1fe4:	movw	r0, #0
    1fe8:	movt	r0, #0
    1fec:	bl	0 <coda_type_record_field_new>
    1ff0:	mov	r4, r0
    1ff4:	ldr	r0, [r5, r8]
    1ff8:	ldr	r1, [r0, #192]	; 0xc0
    1ffc:	mov	r0, r4
    2000:	bl	0 <coda_type_record_field_set_type>
    2004:	ldr	r0, [r5, r8]
    2008:	mov	r1, r4
    200c:	ldr	r0, [r0, #276]	; 0x114
    2010:	bl	0 <coda_type_record_add_field>
    2014:	movw	r0, #0
    2018:	movt	r0, #0
    201c:	bl	0 <coda_type_record_field_new>
    2020:	mov	r4, r0
    2024:	ldr	r0, [r5, r8]
    2028:	ldr	r1, [r0, #196]	; 0xc4
    202c:	mov	r0, r4
    2030:	bl	0 <coda_type_record_field_set_type>
    2034:	ldr	r0, [r5, r8]
    2038:	mov	r1, r4
    203c:	ldr	r0, [r0, #276]	; 0x114
    2040:	bl	0 <coda_type_record_add_field>
    2044:	mov	r0, sl
    2048:	bl	0 <coda_type_record_field_new>
    204c:	mov	r4, r0
    2050:	ldr	r0, [r5, r8]
    2054:	ldr	r1, [r0, #200]	; 0xc8
    2058:	mov	r0, r4
    205c:	bl	0 <coda_type_record_field_set_type>
    2060:	ldr	r0, [r5, r8]
    2064:	mov	r1, r4
    2068:	ldr	r0, [r0, #276]	; 0x114
    206c:	bl	0 <coda_type_record_add_field>
    2070:	mov	r0, r6
    2074:	bl	0 <coda_type_record_field_new>
    2078:	mov	r4, r0
    207c:	ldr	r0, [r5, r8]
    2080:	ldr	r1, [r0, #204]	; 0xcc
    2084:	mov	r0, r4
    2088:	bl	0 <coda_type_record_field_set_type>
    208c:	ldr	r0, [r5, r8]
    2090:	mov	r1, r4
    2094:	ldr	r0, [r0, #276]	; 0x114
    2098:	bl	0 <coda_type_record_add_field>
    209c:	mov	r0, r7
    20a0:	bl	0 <coda_type_record_field_new>
    20a4:	mov	r4, r0
    20a8:	ldr	r0, [r5, r8]
    20ac:	ldr	r1, [r0, #208]	; 0xd0
    20b0:	mov	r0, r4
    20b4:	bl	0 <coda_type_record_field_set_type>
    20b8:	ldr	r0, [r5, r8]
    20bc:	mov	r1, r4
    20c0:	ldr	r0, [r0, #276]	; 0x114
    20c4:	bl	0 <coda_type_record_add_field>
    20c8:	mov	r0, r9
    20cc:	bl	0 <coda_type_record_field_new>
    20d0:	mov	r4, r0
    20d4:	ldr	r0, [r5, r8]
    20d8:	ldr	r1, [r0, #212]	; 0xd4
    20dc:	mov	r0, r4
    20e0:	bl	0 <coda_type_record_field_set_type>
    20e4:	ldr	r0, [r5, r8]
    20e8:	mov	r1, r4
    20ec:	ldr	r0, [r0, #276]	; 0x114
    20f0:	bl	0 <coda_type_record_add_field>
    20f4:	movw	r0, #0
    20f8:	movt	r0, #0
    20fc:	bl	0 <coda_type_record_field_new>
    2100:	mov	r4, r0
    2104:	ldr	r0, [r5, r8]
    2108:	ldr	r1, [r0, #216]	; 0xd8
    210c:	mov	r0, r4
    2110:	bl	0 <coda_type_record_field_set_type>
    2114:	mov	r0, r4
    2118:	bl	0 <coda_type_record_field_set_optional>
    211c:	ldr	r0, [r5, r8]
    2120:	mov	r1, r4
    2124:	ldr	r0, [r0, #276]	; 0x114
    2128:	bl	0 <coda_type_record_add_field>
    212c:	mov	r0, #9
    2130:	bl	0 <coda_type_array_new>
    2134:	ldr	r1, [r5, r8]
    2138:	str	r0, [r1, #280]	; 0x118
    213c:	mov	r1, #0
    2140:	bl	0 <coda_type_array_add_variable_dimension>
    2144:	ldr	r0, [r5, r8]
    2148:	ldr	r1, [r0, #276]	; 0x114
    214c:	ldr	r0, [r0, #280]	; 0x118
    2150:	bl	0 <coda_type_array_set_base_type>
    2154:	mov	r0, #9
    2158:	bl	0 <coda_type_record_new>
    215c:	ldr	r1, [r5, r8]
    2160:	str	r0, [r1, #292]	; 0x124
    2164:	movw	r0, #0
    2168:	movt	r0, #0
    216c:	bl	0 <coda_type_record_field_new>
    2170:	mov	r4, r0
    2174:	ldr	r0, [r5, r8]
    2178:	ldr	r1, [r0, #264]	; 0x108
    217c:	mov	r0, r4
    2180:	bl	0 <coda_type_record_field_set_type>
    2184:	ldr	r0, [r5, r8]
    2188:	mov	r1, r4
    218c:	ldr	r0, [r0, #292]	; 0x124
    2190:	bl	0 <coda_type_record_add_field>
    2194:	movw	r0, #0
    2198:	movt	r0, #0
    219c:	bl	0 <coda_type_record_field_new>
    21a0:	mov	r4, r0
    21a4:	ldr	r0, [r5, r8]
    21a8:	ldr	r1, [r0, #272]	; 0x110
    21ac:	mov	r0, r4
    21b0:	bl	0 <coda_type_record_field_set_type>
    21b4:	ldr	r0, [r5, r8]
    21b8:	mov	r1, r4
    21bc:	ldr	r0, [r0, #292]	; 0x124
    21c0:	bl	0 <coda_type_record_add_field>
    21c4:	movw	r0, #0
    21c8:	movt	r0, #0
    21cc:	bl	0 <coda_type_record_field_new>
    21d0:	mov	r4, r0
    21d4:	ldr	r0, [r5, r8]
    21d8:	ldr	r1, [r0, #280]	; 0x118
    21dc:	mov	r0, r4
    21e0:	bl	0 <coda_type_record_field_set_type>
    21e4:	mov	r0, r4
    21e8:	bl	0 <coda_type_record_field_set_optional>
    21ec:	ldr	r0, [r5, r8]
    21f0:	mov	r1, r4
    21f4:	ldr	r0, [r0, #292]	; 0x124
    21f8:	bl	0 <coda_type_record_add_field>
    21fc:	mov	r0, #9
    2200:	bl	0 <coda_type_array_new>
    2204:	ldr	r1, [r5, r8]
    2208:	str	r0, [r1, #288]	; 0x120
    220c:	mov	r1, #0
    2210:	bl	0 <coda_type_array_add_variable_dimension>
    2214:	ldr	r1, [r5, r8]
    2218:	ldr	r0, [r1, #288]	; 0x120
    221c:	ldr	r1, [r1, #292]	; 0x124
    2220:	bl	0 <coda_type_array_set_base_type>
    2224:	mov	r0, #9
    2228:	bl	0 <coda_type_record_new>
    222c:	ldr	r1, [r5, r8]
    2230:	str	r0, [r1, #296]	; 0x128
    2234:	movw	r0, #0
    2238:	movt	r0, #0
    223c:	bl	0 <coda_type_record_field_new>
    2240:	mov	r4, r0
    2244:	ldr	r0, [r5, r8]
    2248:	ldr	r1, [r0, #284]	; 0x11c
    224c:	mov	r0, r4
    2250:	bl	0 <coda_type_record_field_set_type>
    2254:	ldr	r0, [r5, r8]
    2258:	mov	r1, r4
    225c:	ldr	r0, [r0, #296]	; 0x128
    2260:	bl	0 <coda_type_record_add_field>
    2264:	movw	r0, #0
    2268:	movt	r0, #0
    226c:	bl	0 <coda_type_record_field_new>
    2270:	mov	r4, r0
    2274:	ldr	r0, [r5, r8]
    2278:	ldr	r1, [r0, #288]	; 0x120
    227c:	mov	r0, r4
    2280:	bl	0 <coda_type_record_field_set_type>
    2284:	ldr	r0, [r5, r8]
    2288:	mov	r1, r4
    228c:	mov	r4, #0
    2290:	ldr	r0, [r0, #296]	; 0x128
    2294:	bl	0 <coda_type_record_add_field>
    2298:	b	22c4 <sp3_init+0x2140>
    229c:	movw	r1, #0
    22a0:	movw	r3, #0
    22a4:	mov	r0, #230	; 0xe6
    22a8:	mov	r2, #300	; 0x12c
    22ac:	mvn	r4, #0
    22b0:	str	r0, [sp]
    22b4:	movt	r1, #0
    22b8:	movt	r3, #0
    22bc:	mvn	r0, #0
    22c0:	bl	0 <coda_set_error>
    22c4:	mov	r0, r4
    22c8:	sub	sp, fp, #28
    22cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000022d0 <read_file>:
    22d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    22d4:	add	fp, sp, #28
    22d8:	sub	sp, sp, #204	; 0xcc
    22dc:	sub	sp, sp, #1024	; 0x400
    22e0:	mov	r8, r0
    22e4:	add	r0, sp, #88	; 0x58
    22e8:	vmov.i32	q8, #0	; 0x00000000
    22ec:	add	r1, r0, #24
    22f0:	add	r0, r0, #8
    22f4:	vst1.64	{d16-d17}, [r0]
    22f8:	mov	r0, #0
    22fc:	vst1.64	{d16-d17}, [r1]
    2300:	movw	r1, #0
    2304:	str	r0, [sp, #128]	; 0x80
    2308:	str	r0, [sp, #140]	; 0x8c
    230c:	str	r0, [sp, #136]	; 0x88
    2310:	str	r8, [sp, #92]	; 0x5c
    2314:	movt	r1, #0
    2318:	ldr	r0, [r8]
    231c:	bl	0 <fopen>
    2320:	cmp	r0, #0
    2324:	str	r0, [sp, #88]	; 0x58
    2328:	beq	23c8 <read_file+0xf8>
    232c:	ldr	r4, [pc, #4088]	; 332c <read_file+0x105c>
    2330:	mov	r5, r0
    2334:	bl	0 <__aeabi_read_tp>
    2338:	mov	r6, r0
    233c:	ldr	r0, [r0, r4]
    2340:	mov	r1, #0
    2344:	ldr	r0, [r0, #284]	; 0x11c
    2348:	bl	0 <coda_mem_record_new>
    234c:	str	r0, [sp, #96]	; 0x60
    2350:	ldr	r0, [r6, r4]
    2354:	mov	r1, #0
    2358:	ldr	r0, [r0, #288]	; 0x120
    235c:	bl	0 <coda_mem_array_new>
    2360:	str	r0, [sp, #100]	; 0x64
    2364:	mov	r0, r5
    2368:	bl	0 <ftell>
    236c:	str	r0, [sp, #140]	; 0x8c
    2370:	mov	r0, #1
    2374:	add	r6, sp, #208	; 0xd0
    2378:	str	r0, [sp, #136]	; 0x88
    237c:	mov	r0, r5
    2380:	mov	r1, r6
    2384:	bl	49cc <get_line>
    2388:	mvn	r9, #0
    238c:	cmp	r0, #0
    2390:	blt	2688 <read_file+0x3b8>
    2394:	mov	r2, r0
    2398:	cmp	r0, #59	; 0x3b
    239c:	bgt	23e0 <read_file+0x110>
    23a0:	ldr	r0, [sp, #140]	; 0x8c
    23a4:	ldr	r3, [sp, #136]	; 0x88
    23a8:	movw	r1, #0
    23ac:	movt	r1, #0
    23b0:	str	r0, [sp]
    23b4:	mvn	r0, #21
    23b8:	bl	0 <coda_set_error>
    23bc:	cmp	r9, #0
    23c0:	bne	2690 <read_file+0x3c0>
    23c4:	b	2c58 <read_file+0x988>
    23c8:	ldr	r2, [r8]
    23cc:	movw	r1, #0
    23d0:	mvn	r0, #20
    23d4:	movt	r1, #0
    23d8:	bl	0 <coda_set_error>
    23dc:	b	2698 <read_file+0x3c8>
    23e0:	ldrb	r0, [sp, #210]	; 0xd2
    23e4:	mov	sl, #0
    23e8:	strb	sl, [sp, #145]	; 0x91
    23ec:	strb	r0, [sp, #132]	; 0x84
    23f0:	strb	r0, [sp, #144]	; 0x90
    23f4:	bl	0 <__aeabi_read_tp>
    23f8:	mov	r7, r0
    23fc:	ldr	r0, [r0, r4]
    2400:	ldr	r2, [sp, #92]	; 0x5c
    2404:	add	r5, sp, #144	; 0x90
    2408:	mov	r1, #0
    240c:	mov	r3, r5
    2410:	ldr	r0, [r0]
    2414:	bl	0 <coda_mem_string_new>
    2418:	mov	r2, r0
    241c:	ldr	r0, [sp, #96]	; 0x60
    2420:	movw	r1, #0
    2424:	mov	r3, #0
    2428:	movt	r1, #0
    242c:	bl	0 <coda_mem_record_add_field>
    2430:	add	r0, r6, #15
    2434:	orr	r1, r6, #3
    2438:	ldr	r2, [sp, #92]	; 0x5c
    243c:	mov	r3, r5
    2440:	vld1.8	{d16-d17}, [r0]
    2444:	vld1.8	{d18-d19}, [r1]
    2448:	add	r0, r5, #12
    244c:	str	r1, [sp, #84]	; 0x54
    2450:	mov	r1, r5
    2454:	vst1.32	{d16-d17}, [r0]
    2458:	mov	r0, #28
    245c:	vst1.64	{d18-d19}, [r1], r0
    2460:	ldr	r0, [r7, r4]
    2464:	strb	sl, [r1]
    2468:	mov	r1, #0
    246c:	ldr	r0, [r0, #4]
    2470:	bl	0 <coda_mem_string_new>
    2474:	mov	r2, r0
    2478:	ldr	r0, [r7, r4]
    247c:	mov	r1, #0
    2480:	ldr	r0, [r0, #8]
    2484:	bl	0 <coda_mem_time_new>
    2488:	mov	r2, r0
    248c:	ldr	r0, [sp, #96]	; 0x60
    2490:	movw	r1, #0
    2494:	mov	r3, #0
    2498:	movt	r1, #0
    249c:	bl	0 <coda_mem_record_add_field>
    24a0:	add	r0, r6, #32
    24a4:	sub	r2, fp, #48	; 0x30
    24a8:	mov	r1, #7
    24ac:	mov	r3, #0
    24b0:	bl	0 <coda_ascii_parse_int64>
    24b4:	cmn	r0, #1
    24b8:	ble	2670 <read_file+0x3a0>
    24bc:	add	r5, sp, #260	; 0x104
    24c0:	bl	0 <__aeabi_read_tp>
    24c4:	mov	r6, r0
    24c8:	ldr	r0, [r0, r4]
    24cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    24d0:	ldr	r2, [sp, #92]	; 0x5c
    24d4:	mov	r1, #0
    24d8:	ldr	r0, [r0, #12]
    24dc:	bl	0 <coda_mem_int32_new>
    24e0:	mov	r2, r0
    24e4:	ldr	r0, [sp, #96]	; 0x60
    24e8:	movw	r1, #0
    24ec:	mov	r3, #0
    24f0:	movt	r1, #0
    24f4:	bl	0 <coda_mem_record_add_field>
    24f8:	ldrb	r0, [sp, #252]	; 0xfc
    24fc:	strb	sl, [sp, #149]	; 0x95
    2500:	ldr	r2, [sp, #92]	; 0x5c
    2504:	add	r7, sp, #144	; 0x90
    2508:	mov	r1, #0
    250c:	mov	r3, r7
    2510:	strb	r0, [sp, #148]	; 0x94
    2514:	ldr	r0, [sp, #248]	; 0xf8
    2518:	str	r0, [sp, #144]	; 0x90
    251c:	ldr	r0, [r6, r4]
    2520:	ldr	r0, [r0, #16]
    2524:	bl	0 <coda_mem_string_new>
    2528:	mov	r2, r0
    252c:	ldr	r0, [sp, #96]	; 0x60
    2530:	movw	r1, #0
    2534:	mov	r3, #0
    2538:	movt	r1, #0
    253c:	bl	0 <coda_mem_record_add_field>
    2540:	ldrb	r0, [sp, #258]	; 0x102
    2544:	strb	sl, [sp, #149]	; 0x95
    2548:	ldr	r2, [sp, #92]	; 0x5c
    254c:	mov	r1, #0
    2550:	mov	r3, r7
    2554:	strb	r0, [sp, #148]	; 0x94
    2558:	ldr	r0, [sp, #254]	; 0xfe
    255c:	str	r0, [sp, #144]	; 0x90
    2560:	ldr	r0, [r6, r4]
    2564:	ldr	r0, [r0, #20]
    2568:	bl	0 <coda_mem_string_new>
    256c:	mov	r2, r0
    2570:	ldr	r0, [sp, #96]	; 0x60
    2574:	movw	r1, #0
    2578:	mov	r3, #0
    257c:	movt	r1, #0
    2580:	bl	0 <coda_mem_record_add_field>
    2584:	ldrb	r0, [sp, #262]	; 0x106
    2588:	strb	sl, [sp, #147]	; 0x93
    258c:	ldr	r2, [sp, #92]	; 0x5c
    2590:	mov	r1, #0
    2594:	mov	r3, r7
    2598:	strb	r0, [sp, #146]	; 0x92
    259c:	ldrh	r0, [r5]
    25a0:	strh	r0, [sp, #144]	; 0x90
    25a4:	ldr	r0, [r6, r4]
    25a8:	ldr	r0, [r0, #24]
    25ac:	bl	0 <coda_mem_string_new>
    25b0:	mov	r2, r0
    25b4:	ldr	r0, [sp, #96]	; 0x60
    25b8:	movw	r1, #0
    25bc:	mov	r3, #0
    25c0:	movt	r1, #0
    25c4:	bl	0 <coda_mem_record_add_field>
    25c8:	ldr	r0, [sp, #264]	; 0x108
    25cc:	strb	sl, [sp, #148]	; 0x94
    25d0:	ldr	r2, [sp, #92]	; 0x5c
    25d4:	mov	r1, #0
    25d8:	mov	r3, r7
    25dc:	str	r0, [sp, #144]	; 0x90
    25e0:	ldr	r0, [r6, r4]
    25e4:	ldr	r0, [r0, #28]
    25e8:	bl	0 <coda_mem_string_new>
    25ec:	mov	r2, r0
    25f0:	ldr	r0, [sp, #96]	; 0x60
    25f4:	movw	r1, #0
    25f8:	mov	r3, #0
    25fc:	movt	r1, #0
    2600:	bl	0 <coda_mem_record_add_field>
    2604:	ldr	r0, [sp, #88]	; 0x58
    2608:	bl	0 <ftell>
    260c:	str	r0, [sp, #140]	; 0x8c
    2610:	ldr	r1, [sp, #136]	; 0x88
    2614:	ldr	r0, [sp, #88]	; 0x58
    2618:	add	r1, r1, #1
    261c:	str	r1, [sp, #136]	; 0x88
    2620:	add	r1, sp, #208	; 0xd0
    2624:	bl	49cc <get_line>
    2628:	cmp	r0, #0
    262c:	blt	2688 <read_file+0x3b8>
    2630:	mov	r2, r0
    2634:	cmp	r0, #59	; 0x3b
    2638:	ble	23a0 <read_file+0xd0>
    263c:	movw	r1, #0
    2640:	add	r6, sp, #208	; 0xd0
    2644:	mov	r2, #3
    2648:	movt	r1, #0
    264c:	mov	r0, r6
    2650:	bl	0 <memcmp>
    2654:	cmp	r0, #0
    2658:	beq	26a8 <read_file+0x3d8>
    265c:	ldr	r2, [sp, #136]	; 0x88
    2660:	ldr	r3, [sp, #140]	; 0x8c
    2664:	movw	r1, #0
    2668:	movt	r1, #0
    266c:	b	23b4 <read_file+0xe4>
    2670:	ldr	r0, [sp, #140]	; 0x8c
    2674:	ldr	r1, [sp, #136]	; 0x88
    2678:	add	r2, r0, #32
    267c:	movw	r0, #0
    2680:	movt	r0, #0
    2684:	bl	0 <coda_add_error_message>
    2688:	cmp	r9, #0
    268c:	beq	2c58 <read_file+0x988>
    2690:	add	r0, sp, #88	; 0x58
    2694:	bl	492c <ingest_info_cleanup>
    2698:	mvn	r5, #0
    269c:	mov	r0, r5
    26a0:	sub	sp, fp, #28
    26a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    26a8:	ldr	r0, [sp, #84]	; 0x54
    26ac:	sub	r2, fp, #48	; 0x30
    26b0:	mov	r1, #4
    26b4:	mov	r3, #0
    26b8:	bl	0 <coda_ascii_parse_int64>
    26bc:	cmn	r0, #1
    26c0:	ble	2b68 <read_file+0x898>
    26c4:	bl	0 <__aeabi_read_tp>
    26c8:	ldr	r0, [r0, r4]
    26cc:	ldrsh	r3, [fp, #-48]	; 0xffffffd0
    26d0:	ldr	r2, [sp, #92]	; 0x5c
    26d4:	mov	r1, #0
    26d8:	ldr	r0, [r0, #32]
    26dc:	bl	0 <coda_mem_int16_new>
    26e0:	mov	r2, r0
    26e4:	ldr	r0, [sp, #96]	; 0x60
    26e8:	movw	r1, #0
    26ec:	mov	r3, #0
    26f0:	movt	r1, #0
    26f4:	bl	0 <coda_mem_record_add_field>
    26f8:	add	r0, r6, #8
    26fc:	sub	r2, fp, #40	; 0x28
    2700:	mov	r1, #15
    2704:	mov	r3, #0
    2708:	bl	0 <coda_ascii_parse_double>
    270c:	cmn	r0, #1
    2710:	ble	2b78 <read_file+0x8a8>
    2714:	bl	0 <__aeabi_read_tp>
    2718:	ldr	r0, [r0, r4]
    271c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2720:	ldr	r2, [sp, #92]	; 0x5c
    2724:	mov	r1, #0
    2728:	ldr	r0, [r0, #36]	; 0x24
    272c:	bl	0 <coda_mem_double_new>
    2730:	mov	r2, r0
    2734:	ldr	r0, [sp, #96]	; 0x60
    2738:	movw	r1, #0
    273c:	mov	r3, #0
    2740:	movt	r1, #0
    2744:	bl	0 <coda_mem_record_add_field>
    2748:	add	r0, r6, #24
    274c:	sub	r2, fp, #40	; 0x28
    2750:	mov	r1, #14
    2754:	mov	r3, #0
    2758:	bl	0 <coda_ascii_parse_double>
    275c:	cmn	r0, #1
    2760:	ble	2b88 <read_file+0x8b8>
    2764:	bl	0 <__aeabi_read_tp>
    2768:	ldr	r0, [r0, r4]
    276c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2770:	ldr	r2, [sp, #92]	; 0x5c
    2774:	mov	r1, #0
    2778:	ldr	r0, [r0, #40]	; 0x28
    277c:	bl	0 <coda_mem_double_new>
    2780:	mov	r2, r0
    2784:	ldr	r0, [sp, #96]	; 0x60
    2788:	movw	r1, #0
    278c:	mov	r3, #0
    2790:	movt	r1, #0
    2794:	bl	0 <coda_mem_record_add_field>
    2798:	add	r0, r6, #39	; 0x27
    279c:	sub	r2, fp, #48	; 0x30
    27a0:	mov	r1, #5
    27a4:	mov	r3, #0
    27a8:	bl	0 <coda_ascii_parse_int64>
    27ac:	cmn	r0, #1
    27b0:	ble	2b98 <read_file+0x8c8>
    27b4:	bl	0 <__aeabi_read_tp>
    27b8:	ldr	r0, [r0, r4]
    27bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    27c0:	ldr	r2, [sp, #92]	; 0x5c
    27c4:	mov	r1, #0
    27c8:	ldr	r0, [r0, #44]	; 0x2c
    27cc:	bl	0 <coda_mem_int32_new>
    27d0:	mov	r2, r0
    27d4:	ldr	r0, [sp, #96]	; 0x60
    27d8:	movw	r1, #0
    27dc:	mov	r3, #0
    27e0:	movt	r1, #0
    27e4:	bl	0 <coda_mem_record_add_field>
    27e8:	add	r0, r6, #45	; 0x2d
    27ec:	sub	r2, fp, #40	; 0x28
    27f0:	mov	r1, #15
    27f4:	mov	r3, #0
    27f8:	bl	0 <coda_ascii_parse_double>
    27fc:	cmn	r0, #1
    2800:	ble	2ba8 <read_file+0x8d8>
    2804:	bl	0 <__aeabi_read_tp>
    2808:	ldr	r0, [r0, r4]
    280c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2810:	ldr	r2, [sp, #92]	; 0x5c
    2814:	mov	r1, #0
    2818:	ldr	r0, [r0, #48]	; 0x30
    281c:	bl	0 <coda_mem_double_new>
    2820:	mov	r2, r0
    2824:	ldr	r0, [sp, #96]	; 0x60
    2828:	movw	r1, #0
    282c:	mov	r3, #0
    2830:	movt	r1, #0
    2834:	bl	0 <coda_mem_record_add_field>
    2838:	ldr	r0, [sp, #88]	; 0x58
    283c:	bl	0 <ftell>
    2840:	str	r0, [sp, #140]	; 0x8c
    2844:	add	r6, sp, #208	; 0xd0
    2848:	ldr	r1, [sp, #136]	; 0x88
    284c:	ldr	r0, [sp, #88]	; 0x58
    2850:	add	r1, r1, #1
    2854:	str	r1, [sp, #136]	; 0x88
    2858:	mov	r1, r6
    285c:	bl	49cc <get_line>
    2860:	cmp	r0, #0
    2864:	blt	2688 <read_file+0x3b8>
    2868:	mov	r2, r0
    286c:	cmp	r0, #59	; 0x3b
    2870:	ble	23a0 <read_file+0xd0>
    2874:	ldr	r0, [sp, #208]	; 0xd0
    2878:	movw	r1, #8235	; 0x202b
    287c:	movt	r1, #8224	; 0x2020
    2880:	cmp	r0, r1
    2884:	bne	265c <read_file+0x38c>
    2888:	orr	r0, r6, #4
    288c:	sub	r2, fp, #48	; 0x30
    2890:	mov	r1, #2
    2894:	mov	r3, #0
    2898:	bl	0 <coda_ascii_parse_int64>
    289c:	cmn	r0, #1
    28a0:	ble	2bb8 <read_file+0x8e8>
    28a4:	bl	0 <__aeabi_read_tp>
    28a8:	mov	r7, r0
    28ac:	ldr	r0, [r0, r4]
    28b0:	ldrb	r3, [fp, #-48]	; 0xffffffd0
    28b4:	ldr	r2, [sp, #92]	; 0x5c
    28b8:	mov	r1, #0
    28bc:	ldr	r0, [r0, #52]	; 0x34
    28c0:	bl	0 <coda_mem_uint8_new>
    28c4:	mov	r2, r0
    28c8:	ldr	r0, [sp, #96]	; 0x60
    28cc:	movw	r1, #0
    28d0:	mov	r3, #0
    28d4:	movt	r1, #0
    28d8:	bl	0 <coda_mem_record_add_field>
    28dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    28e0:	mov	r1, #0
    28e4:	str	r0, [sp, #128]	; 0x80
    28e8:	ldr	r0, [r7, r4]
    28ec:	ldr	r0, [r0, #60]	; 0x3c
    28f0:	bl	0 <coda_mem_array_new>
    28f4:	mov	r6, #0
    28f8:	add	r7, sp, #208	; 0xd0
    28fc:	str	r0, [sp, #80]	; 0x50
    2900:	movw	r1, #61681	; 0xf0f1
    2904:	uxtb	r0, r6
    2908:	cmp	r6, #0
    290c:	movt	r1, #61680	; 0xf0f0
    2910:	umull	r1, r2, r0, r1
    2914:	lsr	r1, r2, #4
    2918:	add	r1, r1, r1, lsl #4
    291c:	sub	sl, r0, r1
    2920:	beq	2984 <read_file+0x6b4>
    2924:	tst	sl, #255	; 0xff
    2928:	bne	2984 <read_file+0x6b4>
    292c:	ldr	r0, [sp, #88]	; 0x58
    2930:	bl	0 <ftell>
    2934:	str	r0, [sp, #140]	; 0x8c
    2938:	ldr	r1, [sp, #136]	; 0x88
    293c:	ldr	r0, [sp, #88]	; 0x58
    2940:	add	r1, r1, #1
    2944:	str	r1, [sp, #136]	; 0x88
    2948:	mov	r1, r7
    294c:	bl	49cc <get_line>
    2950:	cmn	r0, #1
    2954:	ble	2bc8 <read_file+0x8f8>
    2958:	mov	r7, r0
    295c:	cmp	r0, #59	; 0x3b
    2960:	ble	2bdc <read_file+0x90c>
    2964:	movw	r1, #0
    2968:	add	r7, sp, #208	; 0xd0
    296c:	mov	r2, #9
    2970:	mov	r0, r7
    2974:	movt	r1, #0
    2978:	bl	0 <memcmp>
    297c:	cmp	r0, #0
    2980:	bne	2bf8 <read_file+0x928>
    2984:	ldr	r0, [sp, #128]	; 0x80
    2988:	cmp	r6, r0
    298c:	bge	29dc <read_file+0x70c>
    2990:	mov	r0, #0
    2994:	strb	r0, [sp, #147]	; 0x93
    2998:	add	r0, sl, sl, lsl #1
    299c:	add	r0, r0, #9
    29a0:	uxtab	r0, r7, r0
    29a4:	ldrb	r1, [r0, #2]
    29a8:	ldrh	r0, [r0]
    29ac:	strb	r1, [sp, #146]	; 0x92
    29b0:	strh	r0, [sp, #144]	; 0x90
    29b4:	bl	0 <__aeabi_read_tp>
    29b8:	ldr	r0, [r0, r4]
    29bc:	ldr	r2, [sp, #92]	; 0x5c
    29c0:	mov	r1, #0
    29c4:	add	r3, sp, #144	; 0x90
    29c8:	ldr	r0, [r0, #56]	; 0x38
    29cc:	bl	0 <coda_mem_string_new>
    29d0:	mov	r1, r0
    29d4:	ldr	r0, [sp, #80]	; 0x50
    29d8:	bl	0 <coda_mem_array_add_element>
    29dc:	add	r6, r6, #1
    29e0:	cmp	r6, #85	; 0x55
    29e4:	bcc	2900 <read_file+0x630>
    29e8:	ldr	r0, [sp, #96]	; 0x60
    29ec:	ldr	r2, [sp, #80]	; 0x50
    29f0:	movw	r1, #0
    29f4:	mov	r3, #0
    29f8:	mov	r6, #0
    29fc:	movt	r1, #0
    2a00:	bl	0 <coda_mem_record_add_field>
    2a04:	bl	0 <__aeabi_read_tp>
    2a08:	ldr	r0, [r0, r4]
    2a0c:	mov	r1, #0
    2a10:	ldr	r0, [r0, #68]	; 0x44
    2a14:	bl	0 <coda_mem_array_new>
    2a18:	str	r0, [sp, #80]	; 0x50
    2a1c:	movw	r1, #61681	; 0xf0f1
    2a20:	uxtb	r0, r6
    2a24:	movt	r1, #61680	; 0xf0f0
    2a28:	umull	r1, r2, r0, r1
    2a2c:	lsr	r1, r2, #4
    2a30:	add	r1, r1, r1, lsl #4
    2a34:	subs	sl, r0, r1
    2a38:	bne	2a94 <read_file+0x7c4>
    2a3c:	ldr	r0, [sp, #88]	; 0x58
    2a40:	bl	0 <ftell>
    2a44:	str	r0, [sp, #140]	; 0x8c
    2a48:	ldr	r1, [sp, #136]	; 0x88
    2a4c:	ldr	r0, [sp, #88]	; 0x58
    2a50:	add	r1, r1, #1
    2a54:	str	r1, [sp, #136]	; 0x88
    2a58:	mov	r1, r7
    2a5c:	bl	49cc <get_line>
    2a60:	cmn	r0, #1
    2a64:	ble	2bc8 <read_file+0x8f8>
    2a68:	mov	r7, r0
    2a6c:	cmp	r0, #59	; 0x3b
    2a70:	ble	2bdc <read_file+0x90c>
    2a74:	movw	r1, #0
    2a78:	add	r7, sp, #208	; 0xd0
    2a7c:	mov	r2, #9
    2a80:	mov	r0, r7
    2a84:	movt	r1, #0
    2a88:	bl	0 <memcmp>
    2a8c:	cmp	r0, #0
    2a90:	bne	2bf8 <read_file+0x928>
    2a94:	ldr	r0, [sp, #128]	; 0x80
    2a98:	cmp	r6, r0
    2a9c:	bge	2af4 <read_file+0x824>
    2aa0:	add	r0, sl, sl, lsl #1
    2aa4:	mov	r1, r7
    2aa8:	sub	r2, fp, #48	; 0x30
    2aac:	mov	r3, #0
    2ab0:	add	r7, r0, #9
    2ab4:	uxtab	r0, r1, r7
    2ab8:	mov	r1, #3
    2abc:	bl	0 <coda_ascii_parse_int64>
    2ac0:	cmn	r0, #1
    2ac4:	ble	2c04 <read_file+0x934>
    2ac8:	bl	0 <__aeabi_read_tp>
    2acc:	ldr	r0, [r0, r4]
    2ad0:	ldrsh	r3, [fp, #-48]	; 0xffffffd0
    2ad4:	ldr	r2, [sp, #92]	; 0x5c
    2ad8:	mov	r1, #0
    2adc:	ldr	r0, [r0, #64]	; 0x40
    2ae0:	bl	0 <coda_mem_int16_new>
    2ae4:	mov	r1, r0
    2ae8:	ldr	r0, [sp, #80]	; 0x50
    2aec:	bl	0 <coda_mem_array_add_element>
    2af0:	add	r7, sp, #208	; 0xd0
    2af4:	add	r6, r6, #1
    2af8:	cmp	r6, #85	; 0x55
    2afc:	bcc	2a1c <read_file+0x74c>
    2b00:	ldr	r0, [sp, #96]	; 0x60
    2b04:	ldr	r2, [sp, #80]	; 0x50
    2b08:	movw	r1, #0
    2b0c:	mov	r3, #0
    2b10:	movt	r1, #0
    2b14:	bl	0 <coda_mem_record_add_field>
    2b18:	ldr	r0, [sp, #88]	; 0x58
    2b1c:	bl	0 <ftell>
    2b20:	str	r0, [sp, #140]	; 0x8c
    2b24:	ldr	r1, [sp, #136]	; 0x88
    2b28:	ldr	r0, [sp, #88]	; 0x58
    2b2c:	add	r1, r1, #1
    2b30:	str	r1, [sp, #136]	; 0x88
    2b34:	add	r1, sp, #208	; 0xd0
    2b38:	bl	49cc <get_line>
    2b3c:	cmp	r0, #0
    2b40:	blt	2c4c <read_file+0x97c>
    2b44:	mov	r2, r0
    2b48:	cmp	r0, #59	; 0x3b
    2b4c:	bgt	2c18 <read_file+0x948>
    2b50:	ldr	r0, [sp, #140]	; 0x8c
    2b54:	ldr	r3, [sp, #136]	; 0x88
    2b58:	movw	r1, #0
    2b5c:	movt	r1, #0
    2b60:	str	r0, [sp]
    2b64:	b	2c44 <read_file+0x974>
    2b68:	ldr	r0, [sp, #140]	; 0x8c
    2b6c:	ldr	r1, [sp, #136]	; 0x88
    2b70:	add	r2, r0, #3
    2b74:	b	267c <read_file+0x3ac>
    2b78:	ldr	r0, [sp, #140]	; 0x8c
    2b7c:	ldr	r1, [sp, #136]	; 0x88
    2b80:	add	r2, r0, #8
    2b84:	b	267c <read_file+0x3ac>
    2b88:	ldr	r0, [sp, #140]	; 0x8c
    2b8c:	ldr	r1, [sp, #136]	; 0x88
    2b90:	add	r2, r0, #24
    2b94:	b	267c <read_file+0x3ac>
    2b98:	ldr	r0, [sp, #140]	; 0x8c
    2b9c:	ldr	r1, [sp, #136]	; 0x88
    2ba0:	add	r2, r0, #39	; 0x27
    2ba4:	b	267c <read_file+0x3ac>
    2ba8:	ldr	r0, [sp, #140]	; 0x8c
    2bac:	ldr	r1, [sp, #136]	; 0x88
    2bb0:	add	r2, r0, #45	; 0x2d
    2bb4:	b	267c <read_file+0x3ac>
    2bb8:	ldr	r0, [sp, #140]	; 0x8c
    2bbc:	ldr	r1, [sp, #136]	; 0x88
    2bc0:	add	r2, r0, #4
    2bc4:	b	267c <read_file+0x3ac>
    2bc8:	ldr	r0, [sp, #80]	; 0x50
    2bcc:	bl	0 <coda_dynamic_type_delete>
    2bd0:	cmp	r9, #0
    2bd4:	bne	2690 <read_file+0x3c0>
    2bd8:	b	2c58 <read_file+0x988>
    2bdc:	ldr	r0, [sp, #80]	; 0x50
    2be0:	bl	0 <coda_dynamic_type_delete>
    2be4:	ldr	r0, [sp, #140]	; 0x8c
    2be8:	ldr	r3, [sp, #136]	; 0x88
    2bec:	movw	r1, #0
    2bf0:	mov	r2, r7
    2bf4:	b	23ac <read_file+0xdc>
    2bf8:	ldr	r0, [sp, #80]	; 0x50
    2bfc:	bl	0 <coda_dynamic_type_delete>
    2c00:	b	265c <read_file+0x38c>
    2c04:	ldr	r2, [sp, #140]	; 0x8c
    2c08:	ldr	r1, [sp, #136]	; 0x88
    2c0c:	uxtb	r0, r7
    2c10:	add	r2, r2, r0
    2c14:	b	267c <read_file+0x3ac>
    2c18:	movw	r1, #0
    2c1c:	add	r0, sp, #208	; 0xd0
    2c20:	mov	r2, #3
    2c24:	movt	r1, #0
    2c28:	bl	0 <memcmp>
    2c2c:	cmp	r0, #0
    2c30:	beq	4570 <read_file+0x22a0>
    2c34:	ldr	r2, [sp, #136]	; 0x88
    2c38:	ldr	r3, [sp, #140]	; 0x8c
    2c3c:	movw	r1, #0
    2c40:	movt	r1, #0
    2c44:	mvn	r0, #21
    2c48:	bl	0 <coda_set_error>
    2c4c:	ldr	r4, [pc, #1752]	; 332c <read_file+0x105c>
    2c50:	cmp	r9, #0
    2c54:	bne	2690 <read_file+0x3c0>
    2c58:	ldr	r0, [sp, #88]	; 0x58
    2c5c:	bl	0 <ftell>
    2c60:	str	r0, [sp, #140]	; 0x8c
    2c64:	ldr	r1, [sp, #136]	; 0x88
    2c68:	ldr	r0, [sp, #88]	; 0x58
    2c6c:	add	r1, r1, #1
    2c70:	str	r1, [sp, #136]	; 0x88
    2c74:	add	r1, sp, #208	; 0xd0
    2c78:	bl	49cc <get_line>
    2c7c:	cmp	r0, #0
    2c80:	blt	2690 <read_file+0x3c0>
    2c84:	movw	r1, #0
    2c88:	str	r8, [sp, #48]	; 0x30
    2c8c:	add	r8, sp, #208	; 0xd0
    2c90:	mov	sl, r0
    2c94:	mov	r2, #3
    2c98:	movt	r1, #0
    2c9c:	mov	r0, r8
    2ca0:	bl	0 <memcmp>
    2ca4:	cmp	r0, #0
    2ca8:	beq	4300 <read_file+0x2030>
    2cac:	add	r0, r8, #72	; 0x48
    2cb0:	movw	r5, #0
    2cb4:	add	r7, sp, #144	; 0x90
    2cb8:	sub	r9, fp, #40	; 0x28
    2cbc:	str	r0, [sp, #8]
    2cc0:	add	r0, r8, #63	; 0x3f
    2cc4:	movt	r5, #0
    2cc8:	str	r0, [sp, #12]
    2ccc:	add	r0, r8, #54	; 0x36
    2cd0:	str	r0, [sp, #16]
    2cd4:	add	r0, r8, #45	; 0x2d
    2cd8:	str	r0, [sp, #20]
    2cdc:	add	r0, r8, #70	; 0x46
    2ce0:	str	r0, [sp, #52]	; 0x34
    2ce4:	add	r0, r8, #36	; 0x24
    2ce8:	str	r0, [sp, #24]
    2cec:	add	r0, r8, #67	; 0x43
    2cf0:	str	r0, [sp, #56]	; 0x38
    2cf4:	add	r0, r8, #27
    2cf8:	str	r0, [sp, #28]
    2cfc:	add	r0, r8, #64	; 0x40
    2d00:	str	r0, [sp, #60]	; 0x3c
    2d04:	add	r0, r8, #19
    2d08:	str	r0, [sp, #32]
    2d0c:	add	r0, r8, #61	; 0x3d
    2d10:	str	r0, [sp, #64]	; 0x40
    2d14:	add	r0, r8, #14
    2d18:	str	r0, [sp, #36]	; 0x24
    2d1c:	add	r0, r8, #9
    2d20:	str	r0, [sp, #40]	; 0x28
    2d24:	add	r0, r8, #46	; 0x2e
    2d28:	str	r0, [sp, #68]	; 0x44
    2d2c:	add	r0, r8, #32
    2d30:	str	r0, [sp, #72]	; 0x48
    2d34:	add	r0, r8, #18
    2d38:	str	r0, [sp, #76]	; 0x4c
    2d3c:	orr	r0, r8, #3
    2d40:	str	r0, [sp, #44]	; 0x2c
    2d44:	orr	r0, r8, #4
    2d48:	str	r0, [sp, #84]	; 0x54
    2d4c:	orr	r0, r8, #1
    2d50:	str	r0, [sp, #80]	; 0x50
    2d54:	ldrb	r0, [sp, #208]	; 0xd0
    2d58:	cmp	r0, #86	; 0x56
    2d5c:	beq	30a8 <read_file+0xdd8>
    2d60:	cmp	r0, #80	; 0x50
    2d64:	beq	2eac <read_file+0xbdc>
    2d68:	cmp	r0, #42	; 0x2a
    2d6c:	bne	43b8 <read_file+0x20e8>
    2d70:	ldr	r0, [sp, #104]	; 0x68
    2d74:	cmp	r0, #0
    2d78:	beq	2ddc <read_file+0xb0c>
    2d7c:	ldr	r2, [sp, #108]	; 0x6c
    2d80:	movw	r1, #0
    2d84:	mov	r3, #0
    2d88:	mov	r6, r5
    2d8c:	mov	r5, r9
    2d90:	movt	r1, #0
    2d94:	bl	0 <coda_mem_record_add_field>
    2d98:	mov	r9, #0
    2d9c:	str	r9, [sp, #108]	; 0x6c
    2da0:	ldr	r2, [sp, #116]	; 0x74
    2da4:	cmp	r2, #0
    2da8:	beq	2dc4 <read_file+0xaf4>
    2dac:	ldr	r0, [sp, #104]	; 0x68
    2db0:	movw	r1, #0
    2db4:	mov	r3, #0
    2db8:	movt	r1, #0
    2dbc:	bl	0 <coda_mem_record_add_field>
    2dc0:	str	r9, [sp, #116]	; 0x74
    2dc4:	ldr	r0, [sp, #100]	; 0x64
    2dc8:	ldr	r1, [sp, #104]	; 0x68
    2dcc:	bl	0 <coda_mem_array_add_element>
    2dd0:	str	r9, [sp, #104]	; 0x68
    2dd4:	mov	r9, r5
    2dd8:	mov	r5, r6
    2ddc:	bl	0 <__aeabi_read_tp>
    2de0:	ldr	r0, [r0, r4]
    2de4:	mov	r1, #0
    2de8:	ldr	r0, [r0, #272]	; 0x110
    2dec:	bl	0 <coda_mem_array_new>
    2df0:	str	r0, [sp, #108]	; 0x6c
    2df4:	ldrb	r0, [sp, #132]	; 0x84
    2df8:	cmp	r0, #86	; 0x56
    2dfc:	bne	2e18 <read_file+0xb48>
    2e00:	bl	0 <__aeabi_read_tp>
    2e04:	ldr	r0, [r0, r4]
    2e08:	mov	r1, #0
    2e0c:	ldr	r0, [r0, #280]	; 0x118
    2e10:	bl	0 <coda_mem_array_new>
    2e14:	str	r0, [sp, #116]	; 0x74
    2e18:	bl	0 <__aeabi_read_tp>
    2e1c:	ldr	r0, [r0, r4]
    2e20:	mov	r1, #0
    2e24:	ldr	r0, [r0, #292]	; 0x124
    2e28:	bl	0 <coda_mem_record_new>
    2e2c:	cmp	sl, #30
    2e30:	str	r0, [sp, #104]	; 0x68
    2e34:	ble	43cc <read_file+0x20fc>
    2e38:	ldr	r0, [sp, #44]	; 0x2c
    2e3c:	mov	r1, #12
    2e40:	vld1.8	{d16-d17}, [r0], r1
    2e44:	mov	r1, #28
    2e48:	vld1.8	{d18-d19}, [r0]
    2e4c:	mov	r0, r7
    2e50:	vst1.64	{d16-d17}, [r0], r1
    2e54:	mov	r1, #0
    2e58:	strb	r1, [r0]
    2e5c:	add	r0, r7, #12
    2e60:	vst1.32	{d18-d19}, [r0]
    2e64:	bl	0 <__aeabi_read_tp>
    2e68:	mov	r6, r0
    2e6c:	ldr	r0, [r0, r4]
    2e70:	ldr	r2, [sp, #92]	; 0x5c
    2e74:	mov	r1, #0
    2e78:	mov	r3, r7
    2e7c:	ldr	r0, [r0, #260]	; 0x104
    2e80:	bl	0 <coda_mem_string_new>
    2e84:	mov	r2, r0
    2e88:	ldr	r0, [r6, r4]
    2e8c:	mov	r1, #0
    2e90:	ldr	r0, [r0, #264]	; 0x108
    2e94:	bl	0 <coda_mem_time_new>
    2e98:	mov	r2, r0
    2e9c:	ldr	r0, [sp, #104]	; 0x68
    2ea0:	movw	r1, #0
    2ea4:	movt	r1, #0
    2ea8:	b	3754 <read_file+0x1484>
    2eac:	ldr	r0, [sp, #108]	; 0x6c
    2eb0:	cmp	r0, #0
    2eb4:	beq	443c <read_file+0x216c>
    2eb8:	bl	0 <__aeabi_read_tp>
    2ebc:	ldr	r0, [r0, r4]
    2ec0:	mov	r1, #0
    2ec4:	ldr	r0, [r0, #268]	; 0x10c
    2ec8:	bl	0 <coda_mem_record_new>
    2ecc:	cmp	sl, #59	; 0x3b
    2ed0:	str	r0, [sp, #112]	; 0x70
    2ed4:	ble	43cc <read_file+0x20fc>
    2ed8:	ldr	r1, [sp, #80]	; 0x50
    2edc:	mov	r2, #0
    2ee0:	strb	r2, [sp, #147]	; 0x93
    2ee4:	ldrh	r0, [r1]
    2ee8:	ldrb	r1, [r1, #2]
    2eec:	strb	r1, [sp, #146]	; 0x92
    2ef0:	strh	r0, [sp, #144]	; 0x90
    2ef4:	bl	0 <__aeabi_read_tp>
    2ef8:	ldr	r0, [r0, r4]
    2efc:	ldr	r2, [sp, #92]	; 0x5c
    2f00:	mov	r1, #0
    2f04:	mov	r3, r7
    2f08:	ldr	r0, [r0, #88]	; 0x58
    2f0c:	bl	0 <coda_mem_string_new>
    2f10:	mov	r2, r0
    2f14:	ldr	r0, [sp, #112]	; 0x70
    2f18:	movw	r1, #0
    2f1c:	mov	r3, #0
    2f20:	movt	r1, #0
    2f24:	bl	0 <coda_mem_record_add_field>
    2f28:	ldr	r0, [sp, #84]	; 0x54
    2f2c:	mov	r1, #14
    2f30:	mov	r2, r9
    2f34:	mov	r3, #0
    2f38:	bl	0 <coda_ascii_parse_double>
    2f3c:	cmn	r0, #1
    2f40:	ble	43e8 <read_file+0x2118>
    2f44:	bl	0 <__aeabi_read_tp>
    2f48:	ldr	r0, [r0, r4]
    2f4c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2f50:	ldr	r2, [sp, #92]	; 0x5c
    2f54:	mov	r1, #0
    2f58:	ldr	r0, [r0, #92]	; 0x5c
    2f5c:	bl	0 <coda_mem_double_new>
    2f60:	mov	r2, r0
    2f64:	ldr	r0, [sp, #112]	; 0x70
    2f68:	movw	r1, #0
    2f6c:	mov	r3, #0
    2f70:	movt	r1, #0
    2f74:	bl	0 <coda_mem_record_add_field>
    2f78:	ldr	r0, [sp, #76]	; 0x4c
    2f7c:	mov	r1, #14
    2f80:	mov	r2, r9
    2f84:	mov	r3, #0
    2f88:	bl	0 <coda_ascii_parse_double>
    2f8c:	cmn	r0, #1
    2f90:	ble	43f8 <read_file+0x2128>
    2f94:	bl	0 <__aeabi_read_tp>
    2f98:	ldr	r0, [r0, r4]
    2f9c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2fa0:	ldr	r2, [sp, #92]	; 0x5c
    2fa4:	mov	r1, #0
    2fa8:	ldr	r0, [r0, #96]	; 0x60
    2fac:	bl	0 <coda_mem_double_new>
    2fb0:	mov	r2, r0
    2fb4:	ldr	r0, [sp, #112]	; 0x70
    2fb8:	movw	r1, #0
    2fbc:	mov	r3, #0
    2fc0:	movt	r1, #0
    2fc4:	bl	0 <coda_mem_record_add_field>
    2fc8:	ldr	r0, [sp, #72]	; 0x48
    2fcc:	mov	r1, #14
    2fd0:	mov	r2, r9
    2fd4:	mov	r3, #0
    2fd8:	bl	0 <coda_ascii_parse_double>
    2fdc:	cmn	r0, #1
    2fe0:	ble	4408 <read_file+0x2138>
    2fe4:	bl	0 <__aeabi_read_tp>
    2fe8:	ldr	r0, [r0, r4]
    2fec:	vldr	d0, [fp, #-40]	; 0xffffffd8
    2ff0:	ldr	r2, [sp, #92]	; 0x5c
    2ff4:	mov	r1, #0
    2ff8:	ldr	r0, [r0, #100]	; 0x64
    2ffc:	bl	0 <coda_mem_double_new>
    3000:	mov	r2, r0
    3004:	ldr	r0, [sp, #112]	; 0x70
    3008:	movw	r1, #0
    300c:	mov	r3, #0
    3010:	movt	r1, #0
    3014:	bl	0 <coda_mem_record_add_field>
    3018:	ldr	r0, [sp, #68]	; 0x44
    301c:	mov	r1, #14
    3020:	mov	r2, r9
    3024:	mov	r3, #0
    3028:	bl	0 <coda_ascii_parse_double>
    302c:	cmn	r0, #1
    3030:	ble	4418 <read_file+0x2148>
    3034:	bl	0 <__aeabi_read_tp>
    3038:	ldr	r0, [r0, r4]
    303c:	vldr	d0, [fp, #-40]	; 0xffffffd8
    3040:	ldr	r2, [sp, #92]	; 0x5c
    3044:	mov	r1, #0
    3048:	ldr	r0, [r0, #104]	; 0x68
    304c:	bl	0 <coda_mem_double_new>
    3050:	mov	r2, r0
    3054:	ldr	r0, [sp, #112]	; 0x70
    3058:	movw	r1, #0
    305c:	mov	r3, #0
    3060:	movt	r1, #0
    3064:	bl	0 <coda_mem_record_add_field>
    3068:	cmp	sl, #64	; 0x40
    306c:	blt	32ac <read_file+0xfdc>
    3070:	ldr	r0, [sp, #64]	; 0x40
    3074:	movw	r1, #8224	; 0x2020
    3078:	ldrh	r0, [r0]
    307c:	cmp	r0, r1
    3080:	beq	32ac <read_file+0xfdc>
    3084:	ldr	r0, [sp, #64]	; 0x40
    3088:	mov	r1, #2
    308c:	sub	r2, fp, #48	; 0x30
    3090:	mov	r3, #0
    3094:	bl	0 <coda_ascii_parse_int64>
    3098:	cmp	r0, #0
    309c:	blt	4464 <read_file+0x2194>
    30a0:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    30a4:	b	32b8 <read_file+0xfe8>
    30a8:	ldrb	r0, [sp, #132]	; 0x84
    30ac:	cmp	r0, #86	; 0x56
    30b0:	bne	4428 <read_file+0x2158>
    30b4:	ldr	r0, [sp, #116]	; 0x74
    30b8:	cmp	r0, #0
    30bc:	beq	4450 <read_file+0x2180>
    30c0:	bl	0 <__aeabi_read_tp>
    30c4:	ldr	r0, [r0, r4]
    30c8:	mov	r1, #0
    30cc:	ldr	r0, [r0, #276]	; 0x114
    30d0:	bl	0 <coda_mem_record_new>
    30d4:	cmp	sl, #59	; 0x3b
    30d8:	str	r0, [sp, #120]	; 0x78
    30dc:	ble	43cc <read_file+0x20fc>
    30e0:	ldr	r1, [sp, #80]	; 0x50
    30e4:	mov	r2, #0
    30e8:	strb	r2, [sp, #147]	; 0x93
    30ec:	ldrh	r0, [r1]
    30f0:	ldrb	r1, [r1, #2]
    30f4:	strb	r1, [sp, #146]	; 0x92
    30f8:	strh	r0, [sp, #144]	; 0x90
    30fc:	bl	0 <__aeabi_read_tp>
    3100:	ldr	r0, [r0, r4]
    3104:	ldr	r2, [sp, #92]	; 0x5c
    3108:	mov	r1, #0
    310c:	mov	r3, r7
    3110:	ldr	r0, [r0, #88]	; 0x58
    3114:	bl	0 <coda_mem_string_new>
    3118:	mov	r2, r0
    311c:	ldr	r0, [sp, #120]	; 0x78
    3120:	movw	r1, #0
    3124:	mov	r3, #0
    3128:	movt	r1, #0
    312c:	bl	0 <coda_mem_record_add_field>
    3130:	ldr	r0, [sp, #84]	; 0x54
    3134:	mov	r1, #14
    3138:	mov	r2, r9
    313c:	mov	r3, #0
    3140:	bl	0 <coda_ascii_parse_double>
    3144:	cmn	r0, #1
    3148:	ble	43e8 <read_file+0x2118>
    314c:	bl	0 <__aeabi_read_tp>
    3150:	ldr	r0, [r0, r4]
    3154:	vldr	d0, [fp, #-40]	; 0xffffffd8
    3158:	ldr	r2, [sp, #92]	; 0x5c
    315c:	mov	r1, #0
    3160:	ldr	r0, [r0, #184]	; 0xb8
    3164:	bl	0 <coda_mem_double_new>
    3168:	mov	r2, r0
    316c:	ldr	r0, [sp, #120]	; 0x78
    3170:	mov	r1, r5
    3174:	mov	r3, #0
    3178:	bl	0 <coda_mem_record_add_field>
    317c:	ldr	r0, [sp, #76]	; 0x4c
    3180:	mov	r1, #14
    3184:	mov	r2, r9
    3188:	mov	r3, #0
    318c:	bl	0 <coda_ascii_parse_double>
    3190:	cmn	r0, #1
    3194:	ble	43f8 <read_file+0x2128>
    3198:	bl	0 <__aeabi_read_tp>
    319c:	ldr	r0, [r0, r4]
    31a0:	vldr	d0, [fp, #-40]	; 0xffffffd8
    31a4:	ldr	r2, [sp, #92]	; 0x5c
    31a8:	mov	r1, #0
    31ac:	ldr	r0, [r0, #188]	; 0xbc
    31b0:	bl	0 <coda_mem_double_new>
    31b4:	mov	r2, r0
    31b8:	ldr	r0, [sp, #120]	; 0x78
    31bc:	movw	r1, #0
    31c0:	mov	r3, #0
    31c4:	movt	r1, #0
    31c8:	bl	0 <coda_mem_record_add_field>
    31cc:	ldr	r0, [sp, #72]	; 0x48
    31d0:	mov	r1, #14
    31d4:	mov	r2, r9
    31d8:	mov	r3, #0
    31dc:	bl	0 <coda_ascii_parse_double>
    31e0:	cmn	r0, #1
    31e4:	ble	4408 <read_file+0x2138>
    31e8:	bl	0 <__aeabi_read_tp>
    31ec:	ldr	r0, [r0, r4]
    31f0:	vldr	d0, [fp, #-40]	; 0xffffffd8
    31f4:	ldr	r2, [sp, #92]	; 0x5c
    31f8:	mov	r1, #0
    31fc:	ldr	r0, [r0, #192]	; 0xc0
    3200:	bl	0 <coda_mem_double_new>
    3204:	mov	r2, r0
    3208:	ldr	r0, [sp, #120]	; 0x78
    320c:	movw	r1, #0
    3210:	mov	r3, #0
    3214:	movt	r1, #0
    3218:	bl	0 <coda_mem_record_add_field>
    321c:	ldr	r0, [sp, #68]	; 0x44
    3220:	mov	r1, #14
    3224:	mov	r2, r9
    3228:	mov	r3, #0
    322c:	bl	0 <coda_ascii_parse_double>
    3230:	cmn	r0, #1
    3234:	ble	4418 <read_file+0x2148>
    3238:	bl	0 <__aeabi_read_tp>
    323c:	ldr	r0, [r0, r4]
    3240:	vldr	d0, [fp, #-40]	; 0xffffffd8
    3244:	ldr	r2, [sp, #92]	; 0x5c
    3248:	mov	r1, #0
    324c:	ldr	r0, [r0, #196]	; 0xc4
    3250:	bl	0 <coda_mem_double_new>
    3254:	mov	r2, r0
    3258:	ldr	r0, [sp, #120]	; 0x78
    325c:	movw	r1, #0
    3260:	mov	r3, #0
    3264:	movt	r1, #0
    3268:	bl	0 <coda_mem_record_add_field>
    326c:	cmp	sl, #63	; 0x3f
    3270:	blt	3594 <read_file+0x12c4>
    3274:	ldr	r0, [sp, #64]	; 0x40
    3278:	movw	r1, #8224	; 0x2020
    327c:	ldrh	r0, [r0]
    3280:	cmp	r0, r1
    3284:	beq	3594 <read_file+0x12c4>
    3288:	ldr	r0, [sp, #64]	; 0x40
    328c:	mov	r1, #2
    3290:	sub	r2, fp, #48	; 0x30
    3294:	mov	r3, #0
    3298:	bl	0 <coda_ascii_parse_int64>
    329c:	cmp	r0, #0
    32a0:	blt	4464 <read_file+0x2194>
    32a4:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    32a8:	b	35a0 <read_file+0x12d0>
    32ac:	mov	r1, #0
    32b0:	str	r1, [fp, #-44]	; 0xffffffd4
    32b4:	str	r1, [fp, #-48]	; 0xffffffd0
    32b8:	bl	0 <__aeabi_read_tp>
    32bc:	ldr	r0, [r0, r4]
    32c0:	ldr	r2, [sp, #92]	; 0x5c
    32c4:	sxtb	r3, r1
    32c8:	mov	r1, #0
    32cc:	ldr	r0, [r0, #108]	; 0x6c
    32d0:	bl	0 <coda_mem_int8_new>
    32d4:	mov	r2, r0
    32d8:	ldr	r0, [sp, #112]	; 0x70
    32dc:	movw	r1, #0
    32e0:	mov	r3, #0
    32e4:	movt	r1, #0
    32e8:	bl	0 <coda_mem_record_add_field>
    32ec:	cmp	sl, #66	; 0x42
    32f0:	blt	3330 <read_file+0x1060>
    32f4:	ldr	r0, [sp, #60]	; 0x3c
    32f8:	movw	r1, #8224	; 0x2020
    32fc:	ldrh	r0, [r0]
    3300:	cmp	r0, r1
    3304:	beq	3330 <read_file+0x1060>
    3308:	ldr	r0, [sp, #60]	; 0x3c
    330c:	mov	r1, #2
    3310:	sub	r2, fp, #48	; 0x30
    3314:	mov	r3, #0
    3318:	bl	0 <coda_ascii_parse_int64>
    331c:	cmp	r0, #0
    3320:	blt	4474 <read_file+0x21a4>
    3324:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3328:	b	333c <read_file+0x106c>
    332c:	.word	0x00000000
    3330:	mov	r1, #0
    3334:	str	r1, [fp, #-44]	; 0xffffffd4
    3338:	str	r1, [fp, #-48]	; 0xffffffd0
    333c:	bl	0 <__aeabi_read_tp>
    3340:	ldr	r0, [r0, r4]
    3344:	ldr	r2, [sp, #92]	; 0x5c
    3348:	sxtb	r3, r1
    334c:	mov	r1, #0
    3350:	ldr	r0, [r0, #112]	; 0x70
    3354:	bl	0 <coda_mem_int8_new>
    3358:	mov	r2, r0
    335c:	ldr	r0, [sp, #112]	; 0x70
    3360:	movw	r1, #0
    3364:	mov	r3, #0
    3368:	movt	r1, #0
    336c:	bl	0 <coda_mem_record_add_field>
    3370:	cmp	sl, #69	; 0x45
    3374:	blt	33b0 <read_file+0x10e0>
    3378:	ldr	r0, [sp, #56]	; 0x38
    337c:	movw	r1, #8224	; 0x2020
    3380:	ldrh	r0, [r0]
    3384:	cmp	r0, r1
    3388:	beq	33b0 <read_file+0x10e0>
    338c:	ldr	r0, [sp, #56]	; 0x38
    3390:	mov	r1, #2
    3394:	sub	r2, fp, #48	; 0x30
    3398:	mov	r3, #0
    339c:	bl	0 <coda_ascii_parse_int64>
    33a0:	cmp	r0, #0
    33a4:	blt	4484 <read_file+0x21b4>
    33a8:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    33ac:	b	33bc <read_file+0x10ec>
    33b0:	mov	r1, #0
    33b4:	str	r1, [fp, #-44]	; 0xffffffd4
    33b8:	str	r1, [fp, #-48]	; 0xffffffd0
    33bc:	bl	0 <__aeabi_read_tp>
    33c0:	ldr	r0, [r0, r4]
    33c4:	ldr	r2, [sp, #92]	; 0x5c
    33c8:	sxtb	r3, r1
    33cc:	mov	r1, #0
    33d0:	ldr	r0, [r0, #116]	; 0x74
    33d4:	bl	0 <coda_mem_int8_new>
    33d8:	mov	r2, r0
    33dc:	ldr	r0, [sp, #112]	; 0x70
    33e0:	movw	r1, #0
    33e4:	mov	r3, #0
    33e8:	movt	r1, #0
    33ec:	bl	0 <coda_mem_record_add_field>
    33f0:	cmp	sl, #73	; 0x49
    33f4:	blt	343c <read_file+0x116c>
    33f8:	ldr	r0, [sp, #52]	; 0x34
    33fc:	movw	r1, #0
    3400:	mov	r2, #3
    3404:	movt	r1, #0
    3408:	bl	0 <memcmp>
    340c:	cmp	r0, #0
    3410:	beq	343c <read_file+0x116c>
    3414:	ldr	r0, [sp, #52]	; 0x34
    3418:	mov	r1, #3
    341c:	sub	r2, fp, #48	; 0x30
    3420:	mov	r3, #0
    3424:	bl	0 <coda_ascii_parse_int64>
    3428:	cmp	r0, #0
    342c:	blt	4494 <read_file+0x21c4>
    3430:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3434:	mov	r6, r9
    3438:	b	344c <read_file+0x117c>
    343c:	mov	r1, #0
    3440:	mov	r6, r9
    3444:	str	r1, [fp, #-44]	; 0xffffffd4
    3448:	str	r1, [fp, #-48]	; 0xffffffd0
    344c:	bl	0 <__aeabi_read_tp>
    3450:	mov	r9, r0
    3454:	ldr	r0, [r0, r4]
    3458:	ldr	r2, [sp, #92]	; 0x5c
    345c:	sxth	r3, r1
    3460:	mov	r1, #0
    3464:	ldr	r0, [r0, #120]	; 0x78
    3468:	bl	0 <coda_mem_int16_new>
    346c:	mov	r2, r0
    3470:	ldr	r0, [sp, #112]	; 0x70
    3474:	movw	r1, #0
    3478:	mov	r3, #0
    347c:	movt	r1, #0
    3480:	bl	0 <coda_mem_record_add_field>
    3484:	mov	r0, #0
    3488:	cmp	sl, #75	; 0x4b
    348c:	ldr	r2, [sp, #92]	; 0x5c
    3490:	mov	r1, #0
    3494:	mov	r3, r7
    3498:	strb	r0, [sp, #145]	; 0x91
    349c:	ldrb	r0, [sp, #282]	; 0x11a
    34a0:	movwlt	r0, #32
    34a4:	strb	r0, [sp, #144]	; 0x90
    34a8:	ldr	r0, [r9, r4]
    34ac:	ldr	r0, [r0, #124]	; 0x7c
    34b0:	bl	0 <coda_mem_string_new>
    34b4:	mov	r2, r0
    34b8:	ldr	r0, [sp, #112]	; 0x70
    34bc:	movw	r1, #0
    34c0:	mov	r3, #0
    34c4:	movt	r1, #0
    34c8:	bl	0 <coda_mem_record_add_field>
    34cc:	ldrb	r0, [sp, #283]	; 0x11b
    34d0:	cmp	sl, #76	; 0x4c
    34d4:	ldr	r2, [sp, #92]	; 0x5c
    34d8:	mov	r1, #0
    34dc:	mov	r3, r7
    34e0:	movwlt	r0, #32
    34e4:	strb	r0, [sp, #144]	; 0x90
    34e8:	ldr	r0, [r9, r4]
    34ec:	ldr	r0, [r0, #128]	; 0x80
    34f0:	bl	0 <coda_mem_string_new>
    34f4:	mov	r2, r0
    34f8:	ldr	r0, [sp, #112]	; 0x70
    34fc:	movw	r1, #0
    3500:	mov	r3, #0
    3504:	movt	r1, #0
    3508:	bl	0 <coda_mem_record_add_field>
    350c:	ldrb	r0, [sp, #286]	; 0x11e
    3510:	cmp	sl, #79	; 0x4f
    3514:	ldr	r2, [sp, #92]	; 0x5c
    3518:	mov	r1, #0
    351c:	mov	r3, r7
    3520:	movwlt	r0, #32
    3524:	strb	r0, [sp, #144]	; 0x90
    3528:	ldr	r0, [r9, r4]
    352c:	ldr	r0, [r0, #132]	; 0x84
    3530:	bl	0 <coda_mem_string_new>
    3534:	mov	r2, r0
    3538:	ldr	r0, [sp, #112]	; 0x70
    353c:	movw	r1, #0
    3540:	mov	r3, #0
    3544:	movt	r1, #0
    3548:	bl	0 <coda_mem_record_add_field>
    354c:	ldrb	r0, [sp, #287]	; 0x11f
    3550:	cmp	sl, #80	; 0x50
    3554:	ldr	r2, [sp, #92]	; 0x5c
    3558:	mov	r1, #0
    355c:	mov	r3, r7
    3560:	movwlt	r0, #32
    3564:	strb	r0, [sp, #144]	; 0x90
    3568:	ldr	r0, [r9, r4]
    356c:	ldr	r0, [r0, #136]	; 0x88
    3570:	bl	0 <coda_mem_string_new>
    3574:	mov	r2, r0
    3578:	ldr	r0, [sp, #112]	; 0x70
    357c:	movw	r1, #0
    3580:	mov	r3, #0
    3584:	movt	r1, #0
    3588:	bl	0 <coda_mem_record_add_field>
    358c:	mov	r9, r6
    3590:	b	375c <read_file+0x148c>
    3594:	mov	r1, #0
    3598:	str	r1, [fp, #-44]	; 0xffffffd4
    359c:	str	r1, [fp, #-48]	; 0xffffffd0
    35a0:	bl	0 <__aeabi_read_tp>
    35a4:	ldr	r0, [r0, r4]
    35a8:	ldr	r2, [sp, #92]	; 0x5c
    35ac:	sxtb	r3, r1
    35b0:	mov	r1, #0
    35b4:	ldr	r0, [r0, #200]	; 0xc8
    35b8:	bl	0 <coda_mem_int8_new>
    35bc:	mov	r2, r0
    35c0:	ldr	r0, [sp, #120]	; 0x78
    35c4:	movw	r1, #0
    35c8:	mov	r3, #0
    35cc:	movt	r1, #0
    35d0:	bl	0 <coda_mem_record_add_field>
    35d4:	cmp	sl, #66	; 0x42
    35d8:	blt	3614 <read_file+0x1344>
    35dc:	ldr	r0, [sp, #60]	; 0x3c
    35e0:	movw	r1, #8224	; 0x2020
    35e4:	ldrh	r0, [r0]
    35e8:	cmp	r0, r1
    35ec:	beq	3614 <read_file+0x1344>
    35f0:	ldr	r0, [sp, #60]	; 0x3c
    35f4:	mov	r1, #2
    35f8:	sub	r2, fp, #48	; 0x30
    35fc:	mov	r3, #0
    3600:	bl	0 <coda_ascii_parse_int64>
    3604:	cmp	r0, #0
    3608:	blt	4474 <read_file+0x21a4>
    360c:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3610:	b	3620 <read_file+0x1350>
    3614:	mov	r1, #0
    3618:	str	r1, [fp, #-44]	; 0xffffffd4
    361c:	str	r1, [fp, #-48]	; 0xffffffd0
    3620:	bl	0 <__aeabi_read_tp>
    3624:	ldr	r0, [r0, r4]
    3628:	ldr	r2, [sp, #92]	; 0x5c
    362c:	sxtb	r3, r1
    3630:	mov	r1, #0
    3634:	ldr	r0, [r0, #204]	; 0xcc
    3638:	bl	0 <coda_mem_int8_new>
    363c:	mov	r2, r0
    3640:	ldr	r0, [sp, #120]	; 0x78
    3644:	movw	r1, #0
    3648:	mov	r3, #0
    364c:	movt	r1, #0
    3650:	bl	0 <coda_mem_record_add_field>
    3654:	cmp	sl, #69	; 0x45
    3658:	blt	3694 <read_file+0x13c4>
    365c:	ldr	r0, [sp, #56]	; 0x38
    3660:	movw	r1, #8224	; 0x2020
    3664:	ldrh	r0, [r0]
    3668:	cmp	r0, r1
    366c:	beq	3694 <read_file+0x13c4>
    3670:	ldr	r0, [sp, #56]	; 0x38
    3674:	mov	r1, #2
    3678:	sub	r2, fp, #48	; 0x30
    367c:	mov	r3, #0
    3680:	bl	0 <coda_ascii_parse_int64>
    3684:	cmp	r0, #0
    3688:	blt	4484 <read_file+0x21b4>
    368c:	ldrb	r1, [fp, #-48]	; 0xffffffd0
    3690:	b	36a0 <read_file+0x13d0>
    3694:	mov	r1, #0
    3698:	str	r1, [fp, #-44]	; 0xffffffd4
    369c:	str	r1, [fp, #-48]	; 0xffffffd0
    36a0:	bl	0 <__aeabi_read_tp>
    36a4:	ldr	r0, [r0, r4]
    36a8:	ldr	r2, [sp, #92]	; 0x5c
    36ac:	sxtb	r3, r1
    36b0:	mov	r1, #0
    36b4:	ldr	r0, [r0, #208]	; 0xd0
    36b8:	bl	0 <coda_mem_int8_new>
    36bc:	mov	r2, r0
    36c0:	ldr	r0, [sp, #120]	; 0x78
    36c4:	movw	r1, #0
    36c8:	mov	r3, #0
    36cc:	movt	r1, #0
    36d0:	bl	0 <coda_mem_record_add_field>
    36d4:	cmp	sl, #73	; 0x49
    36d8:	blt	371c <read_file+0x144c>
    36dc:	ldr	r0, [sp, #52]	; 0x34
    36e0:	movw	r1, #0
    36e4:	mov	r2, #3
    36e8:	movt	r1, #0
    36ec:	bl	0 <memcmp>
    36f0:	cmp	r0, #0
    36f4:	beq	371c <read_file+0x144c>
    36f8:	ldr	r0, [sp, #52]	; 0x34
    36fc:	mov	r1, #3
    3700:	sub	r2, fp, #48	; 0x30
    3704:	mov	r3, #0
    3708:	bl	0 <coda_ascii_parse_int64>
    370c:	cmp	r0, #0
    3710:	blt	4494 <read_file+0x21c4>
    3714:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3718:	b	3728 <read_file+0x1458>
    371c:	mov	r1, #0
    3720:	str	r1, [fp, #-44]	; 0xffffffd4
    3724:	str	r1, [fp, #-48]	; 0xffffffd0
    3728:	bl	0 <__aeabi_read_tp>
    372c:	ldr	r0, [r0, r4]
    3730:	ldr	r2, [sp, #92]	; 0x5c
    3734:	sxth	r3, r1
    3738:	mov	r1, #0
    373c:	ldr	r0, [r0, #212]	; 0xd4
    3740:	bl	0 <coda_mem_int16_new>
    3744:	mov	r2, r0
    3748:	ldr	r0, [sp, #120]	; 0x78
    374c:	movw	r1, #0
    3750:	movt	r1, #0
    3754:	mov	r3, #0
    3758:	bl	0 <coda_mem_record_add_field>
    375c:	ldr	r0, [sp, #88]	; 0x58
    3760:	bl	0 <ftell>
    3764:	str	r0, [sp, #140]	; 0x8c
    3768:	ldr	r1, [sp, #136]	; 0x88
    376c:	ldr	r0, [sp, #88]	; 0x58
    3770:	add	r1, r1, #1
    3774:	str	r1, [sp, #136]	; 0x88
    3778:	mov	r1, r8
    377c:	bl	49cc <get_line>
    3780:	cmp	r0, #0
    3784:	blt	2690 <read_file+0x3c0>
    3788:	mov	sl, r0
    378c:	ldrb	r0, [sp, #208]	; 0xd0
    3790:	cmp	r0, #69	; 0x45
    3794:	bne	42ac <read_file+0x1fdc>
    3798:	ldrb	r0, [sp, #209]	; 0xd1
    379c:	cmp	r0, #86	; 0x56
    37a0:	beq	3814 <read_file+0x1544>
    37a4:	cmp	r0, #80	; 0x50
    37a8:	bne	42ac <read_file+0x1fdc>
    37ac:	ldr	r0, [sp, #112]	; 0x70
    37b0:	cmp	r0, #0
    37b4:	beq	44a4 <read_file+0x21d4>
    37b8:	bl	0 <__aeabi_read_tp>
    37bc:	ldr	r0, [r0, r4]
    37c0:	mov	r1, #0
    37c4:	ldr	r0, [r0, #140]	; 0x8c
    37c8:	bl	0 <coda_mem_record_new>
    37cc:	cmp	sl, #8
    37d0:	str	r0, [sp, #124]	; 0x7c
    37d4:	blt	387c <read_file+0x15ac>
    37d8:	ldr	r0, [sp, #84]	; 0x54
    37dc:	movw	r1, #8224	; 0x2020
    37e0:	movt	r1, #8224	; 0x2020
    37e4:	ldr	r0, [r0]
    37e8:	cmp	r0, r1
    37ec:	beq	387c <read_file+0x15ac>
    37f0:	ldr	r0, [sp, #84]	; 0x54
    37f4:	mov	r1, #4
    37f8:	sub	r2, fp, #48	; 0x30
    37fc:	mov	r3, #0
    3800:	bl	0 <coda_ascii_parse_int64>
    3804:	cmp	r0, #0
    3808:	blt	43e8 <read_file+0x2118>
    380c:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3810:	b	3888 <read_file+0x15b8>
    3814:	ldr	r0, [sp, #120]	; 0x78
    3818:	cmp	r0, #0
    381c:	beq	44b8 <read_file+0x21e8>
    3820:	bl	0 <__aeabi_read_tp>
    3824:	ldr	r0, [r0, r4]
    3828:	mov	r1, #0
    382c:	ldr	r0, [r0, #216]	; 0xd8
    3830:	bl	0 <coda_mem_record_new>
    3834:	cmp	sl, #8
    3838:	str	r0, [sp, #124]	; 0x7c
    383c:	blt	3900 <read_file+0x1630>
    3840:	ldr	r0, [sp, #84]	; 0x54
    3844:	movw	r1, #8224	; 0x2020
    3848:	movt	r1, #8224	; 0x2020
    384c:	ldr	r0, [r0]
    3850:	cmp	r0, r1
    3854:	beq	3900 <read_file+0x1630>
    3858:	ldr	r0, [sp, #84]	; 0x54
    385c:	mov	r1, #4
    3860:	sub	r2, fp, #48	; 0x30
    3864:	mov	r3, #0
    3868:	bl	0 <coda_ascii_parse_int64>
    386c:	cmp	r0, #0
    3870:	blt	43e8 <read_file+0x2118>
    3874:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3878:	b	390c <read_file+0x163c>
    387c:	mov	r1, #0
    3880:	str	r1, [fp, #-44]	; 0xffffffd4
    3884:	str	r1, [fp, #-48]	; 0xffffffd0
    3888:	bl	0 <__aeabi_read_tp>
    388c:	ldr	r0, [r0, r4]
    3890:	ldr	r2, [sp, #92]	; 0x5c
    3894:	sxth	r3, r1
    3898:	mov	r1, #0
    389c:	ldr	r0, [r0, #144]	; 0x90
    38a0:	bl	0 <coda_mem_int16_new>
    38a4:	mov	r2, r0
    38a8:	ldr	r0, [sp, #124]	; 0x7c
    38ac:	movw	r1, #0
    38b0:	mov	r3, #0
    38b4:	movt	r1, #0
    38b8:	bl	0 <coda_mem_record_add_field>
    38bc:	cmp	sl, #13
    38c0:	blt	3984 <read_file+0x16b4>
    38c4:	ldr	r0, [sp, #40]	; 0x28
    38c8:	movw	r1, #8224	; 0x2020
    38cc:	movt	r1, #8224	; 0x2020
    38d0:	ldr	r0, [r0]
    38d4:	cmp	r0, r1
    38d8:	beq	3984 <read_file+0x16b4>
    38dc:	ldr	r0, [sp, #40]	; 0x28
    38e0:	mov	r1, #4
    38e4:	sub	r2, fp, #48	; 0x30
    38e8:	mov	r3, #0
    38ec:	bl	0 <coda_ascii_parse_int64>
    38f0:	cmp	r0, #0
    38f4:	blt	44d4 <read_file+0x2204>
    38f8:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    38fc:	b	3990 <read_file+0x16c0>
    3900:	mov	r1, #0
    3904:	str	r1, [fp, #-44]	; 0xffffffd4
    3908:	str	r1, [fp, #-48]	; 0xffffffd0
    390c:	bl	0 <__aeabi_read_tp>
    3910:	ldr	r0, [r0, r4]
    3914:	ldr	r2, [sp, #92]	; 0x5c
    3918:	sxth	r3, r1
    391c:	mov	r1, #0
    3920:	ldr	r0, [r0, #220]	; 0xdc
    3924:	bl	0 <coda_mem_int16_new>
    3928:	mov	r2, r0
    392c:	ldr	r0, [sp, #124]	; 0x7c
    3930:	movw	r1, #0
    3934:	mov	r3, #0
    3938:	movt	r1, #0
    393c:	bl	0 <coda_mem_record_add_field>
    3940:	cmp	sl, #13
    3944:	blt	3a08 <read_file+0x1738>
    3948:	ldr	r0, [sp, #40]	; 0x28
    394c:	movw	r1, #8224	; 0x2020
    3950:	movt	r1, #8224	; 0x2020
    3954:	ldr	r0, [r0]
    3958:	cmp	r0, r1
    395c:	beq	3a08 <read_file+0x1738>
    3960:	ldr	r0, [sp, #40]	; 0x28
    3964:	mov	r1, #4
    3968:	sub	r2, fp, #48	; 0x30
    396c:	mov	r3, #0
    3970:	bl	0 <coda_ascii_parse_int64>
    3974:	cmp	r0, #0
    3978:	blt	44d4 <read_file+0x2204>
    397c:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3980:	b	3a14 <read_file+0x1744>
    3984:	mov	r1, #0
    3988:	str	r1, [fp, #-44]	; 0xffffffd4
    398c:	str	r1, [fp, #-48]	; 0xffffffd0
    3990:	bl	0 <__aeabi_read_tp>
    3994:	ldr	r0, [r0, r4]
    3998:	ldr	r2, [sp, #92]	; 0x5c
    399c:	sxth	r3, r1
    39a0:	mov	r1, #0
    39a4:	ldr	r0, [r0, #148]	; 0x94
    39a8:	bl	0 <coda_mem_int16_new>
    39ac:	mov	r2, r0
    39b0:	ldr	r0, [sp, #124]	; 0x7c
    39b4:	movw	r1, #0
    39b8:	mov	r3, #0
    39bc:	movt	r1, #0
    39c0:	bl	0 <coda_mem_record_add_field>
    39c4:	cmp	sl, #18
    39c8:	blt	3a8c <read_file+0x17bc>
    39cc:	ldr	r0, [sp, #36]	; 0x24
    39d0:	movw	r1, #8224	; 0x2020
    39d4:	movt	r1, #8224	; 0x2020
    39d8:	ldr	r0, [r0]
    39dc:	cmp	r0, r1
    39e0:	beq	3a8c <read_file+0x17bc>
    39e4:	ldr	r0, [sp, #36]	; 0x24
    39e8:	mov	r1, #4
    39ec:	sub	r2, fp, #48	; 0x30
    39f0:	mov	r3, #0
    39f4:	bl	0 <coda_ascii_parse_int64>
    39f8:	cmp	r0, #0
    39fc:	blt	44e4 <read_file+0x2214>
    3a00:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3a04:	b	3a98 <read_file+0x17c8>
    3a08:	mov	r1, #0
    3a0c:	str	r1, [fp, #-44]	; 0xffffffd4
    3a10:	str	r1, [fp, #-48]	; 0xffffffd0
    3a14:	bl	0 <__aeabi_read_tp>
    3a18:	ldr	r0, [r0, r4]
    3a1c:	ldr	r2, [sp, #92]	; 0x5c
    3a20:	sxth	r3, r1
    3a24:	mov	r1, #0
    3a28:	ldr	r0, [r0, #224]	; 0xe0
    3a2c:	bl	0 <coda_mem_int16_new>
    3a30:	mov	r2, r0
    3a34:	ldr	r0, [sp, #124]	; 0x7c
    3a38:	movw	r1, #0
    3a3c:	mov	r3, #0
    3a40:	movt	r1, #0
    3a44:	bl	0 <coda_mem_record_add_field>
    3a48:	cmp	sl, #18
    3a4c:	blt	3b14 <read_file+0x1844>
    3a50:	ldr	r0, [sp, #36]	; 0x24
    3a54:	movw	r1, #8224	; 0x2020
    3a58:	movt	r1, #8224	; 0x2020
    3a5c:	ldr	r0, [r0]
    3a60:	cmp	r0, r1
    3a64:	beq	3b14 <read_file+0x1844>
    3a68:	ldr	r0, [sp, #36]	; 0x24
    3a6c:	mov	r1, #4
    3a70:	sub	r2, fp, #48	; 0x30
    3a74:	mov	r3, #0
    3a78:	bl	0 <coda_ascii_parse_int64>
    3a7c:	cmp	r0, #0
    3a80:	blt	44e4 <read_file+0x2214>
    3a84:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3a88:	b	3b20 <read_file+0x1850>
    3a8c:	mov	r1, #0
    3a90:	str	r1, [fp, #-44]	; 0xffffffd4
    3a94:	str	r1, [fp, #-48]	; 0xffffffd0
    3a98:	bl	0 <__aeabi_read_tp>
    3a9c:	ldr	r0, [r0, r4]
    3aa0:	ldr	r2, [sp, #92]	; 0x5c
    3aa4:	sxth	r3, r1
    3aa8:	mov	r1, #0
    3aac:	ldr	r0, [r0, #152]	; 0x98
    3ab0:	bl	0 <coda_mem_int16_new>
    3ab4:	mov	r2, r0
    3ab8:	ldr	r0, [sp, #124]	; 0x7c
    3abc:	movw	r1, #0
    3ac0:	mov	r3, #0
    3ac4:	movt	r1, #0
    3ac8:	bl	0 <coda_mem_record_add_field>
    3acc:	cmp	sl, #26
    3ad0:	blt	3b9c <read_file+0x18cc>
    3ad4:	ldr	r0, [sp, #32]
    3ad8:	movw	r1, #0
    3adc:	mov	r2, #7
    3ae0:	movt	r1, #0
    3ae4:	bl	0 <memcmp>
    3ae8:	cmp	r0, #0
    3aec:	beq	3b9c <read_file+0x18cc>
    3af0:	ldr	r0, [sp, #32]
    3af4:	mov	r1, #7
    3af8:	sub	r2, fp, #48	; 0x30
    3afc:	mov	r3, #0
    3b00:	bl	0 <coda_ascii_parse_int64>
    3b04:	cmp	r0, #0
    3b08:	blt	44f4 <read_file+0x2224>
    3b0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3b10:	b	3ba8 <read_file+0x18d8>
    3b14:	mov	r1, #0
    3b18:	str	r1, [fp, #-44]	; 0xffffffd4
    3b1c:	str	r1, [fp, #-48]	; 0xffffffd0
    3b20:	bl	0 <__aeabi_read_tp>
    3b24:	ldr	r0, [r0, r4]
    3b28:	ldr	r2, [sp, #92]	; 0x5c
    3b2c:	sxth	r3, r1
    3b30:	mov	r1, #0
    3b34:	ldr	r0, [r0, #228]	; 0xe4
    3b38:	bl	0 <coda_mem_int16_new>
    3b3c:	mov	r2, r0
    3b40:	ldr	r0, [sp, #124]	; 0x7c
    3b44:	movw	r1, #0
    3b48:	mov	r3, #0
    3b4c:	movt	r1, #0
    3b50:	bl	0 <coda_mem_record_add_field>
    3b54:	cmp	sl, #28
    3b58:	blt	3c20 <read_file+0x1950>
    3b5c:	ldr	r0, [sp, #32]
    3b60:	movw	r1, #0
    3b64:	mov	r2, #7
    3b68:	movt	r1, #0
    3b6c:	bl	0 <memcmp>
    3b70:	cmp	r0, #0
    3b74:	beq	3c20 <read_file+0x1950>
    3b78:	ldr	r0, [sp, #32]
    3b7c:	mov	r1, #7
    3b80:	sub	r2, fp, #48	; 0x30
    3b84:	mov	r3, #0
    3b88:	bl	0 <coda_ascii_parse_int64>
    3b8c:	cmp	r0, #0
    3b90:	blt	44f4 <read_file+0x2224>
    3b94:	ldrh	r1, [fp, #-48]	; 0xffffffd0
    3b98:	b	3c2c <read_file+0x195c>
    3b9c:	mov	r3, #0
    3ba0:	str	r3, [fp, #-44]	; 0xffffffd4
    3ba4:	str	r3, [fp, #-48]	; 0xffffffd0
    3ba8:	bl	0 <__aeabi_read_tp>
    3bac:	ldr	r0, [r0, r4]
    3bb0:	ldr	r2, [sp, #92]	; 0x5c
    3bb4:	mov	r1, #0
    3bb8:	ldr	r0, [r0, #156]	; 0x9c
    3bbc:	bl	0 <coda_mem_int32_new>
    3bc0:	mov	r2, r0
    3bc4:	ldr	r0, [sp, #124]	; 0x7c
    3bc8:	movw	r1, #0
    3bcc:	mov	r3, #0
    3bd0:	movt	r1, #0
    3bd4:	bl	0 <coda_mem_record_add_field>
    3bd8:	cmp	sl, #35	; 0x23
    3bdc:	blt	3ca8 <read_file+0x19d8>
    3be0:	ldr	r0, [sp, #28]
    3be4:	movw	r1, #0
    3be8:	mov	r2, #8
    3bec:	movt	r1, #0
    3bf0:	bl	0 <memcmp>
    3bf4:	cmp	r0, #0
    3bf8:	beq	3ca8 <read_file+0x19d8>
    3bfc:	ldr	r0, [sp, #28]
    3c00:	mov	r1, #8
    3c04:	sub	r2, fp, #48	; 0x30
    3c08:	mov	r3, #0
    3c0c:	bl	0 <coda_ascii_parse_int64>
    3c10:	cmp	r0, #0
    3c14:	blt	4504 <read_file+0x2234>
    3c18:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3c1c:	b	3cb4 <read_file+0x19e4>
    3c20:	mov	r1, #0
    3c24:	str	r1, [fp, #-44]	; 0xffffffd4
    3c28:	str	r1, [fp, #-48]	; 0xffffffd0
    3c2c:	bl	0 <__aeabi_read_tp>
    3c30:	ldr	r0, [r0, r4]
    3c34:	ldr	r2, [sp, #92]	; 0x5c
    3c38:	sxth	r3, r1
    3c3c:	mov	r1, #0
    3c40:	ldr	r0, [r0, #232]	; 0xe8
    3c44:	bl	0 <coda_mem_int16_new>
    3c48:	mov	r2, r0
    3c4c:	ldr	r0, [sp, #124]	; 0x7c
    3c50:	movw	r1, #0
    3c54:	mov	r3, #0
    3c58:	movt	r1, #0
    3c5c:	bl	0 <coda_mem_record_add_field>
    3c60:	cmp	sl, #35	; 0x23
    3c64:	blt	3d2c <read_file+0x1a5c>
    3c68:	ldr	r0, [sp, #28]
    3c6c:	movw	r1, #0
    3c70:	mov	r2, #8
    3c74:	movt	r1, #0
    3c78:	bl	0 <memcmp>
    3c7c:	cmp	r0, #0
    3c80:	beq	3d2c <read_file+0x1a5c>
    3c84:	ldr	r0, [sp, #28]
    3c88:	mov	r1, #8
    3c8c:	sub	r2, fp, #48	; 0x30
    3c90:	mov	r3, #0
    3c94:	bl	0 <coda_ascii_parse_int64>
    3c98:	cmp	r0, #0
    3c9c:	blt	4504 <read_file+0x2234>
    3ca0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3ca4:	b	3d38 <read_file+0x1a68>
    3ca8:	mov	r3, #0
    3cac:	str	r3, [fp, #-44]	; 0xffffffd4
    3cb0:	str	r3, [fp, #-48]	; 0xffffffd0
    3cb4:	bl	0 <__aeabi_read_tp>
    3cb8:	ldr	r0, [r0, r4]
    3cbc:	ldr	r2, [sp, #92]	; 0x5c
    3cc0:	mov	r1, #0
    3cc4:	ldr	r0, [r0, #160]	; 0xa0
    3cc8:	bl	0 <coda_mem_int32_new>
    3ccc:	mov	r2, r0
    3cd0:	ldr	r0, [sp, #124]	; 0x7c
    3cd4:	movw	r1, #0
    3cd8:	mov	r3, #0
    3cdc:	movt	r1, #0
    3ce0:	bl	0 <coda_mem_record_add_field>
    3ce4:	cmp	sl, #44	; 0x2c
    3ce8:	blt	3db0 <read_file+0x1ae0>
    3cec:	ldr	r0, [sp, #24]
    3cf0:	movw	r1, #0
    3cf4:	mov	r2, #8
    3cf8:	movt	r1, #0
    3cfc:	bl	0 <memcmp>
    3d00:	cmp	r0, #0
    3d04:	beq	3db0 <read_file+0x1ae0>
    3d08:	ldr	r0, [sp, #24]
    3d0c:	mov	r1, #8
    3d10:	sub	r2, fp, #48	; 0x30
    3d14:	mov	r3, #0
    3d18:	bl	0 <coda_ascii_parse_int64>
    3d1c:	cmp	r0, #0
    3d20:	blt	4514 <read_file+0x2244>
    3d24:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3d28:	b	3dbc <read_file+0x1aec>
    3d2c:	mov	r3, #0
    3d30:	str	r3, [fp, #-44]	; 0xffffffd4
    3d34:	str	r3, [fp, #-48]	; 0xffffffd0
    3d38:	bl	0 <__aeabi_read_tp>
    3d3c:	ldr	r0, [r0, r4]
    3d40:	ldr	r2, [sp, #92]	; 0x5c
    3d44:	mov	r1, #0
    3d48:	ldr	r0, [r0, #236]	; 0xec
    3d4c:	bl	0 <coda_mem_int32_new>
    3d50:	mov	r2, r0
    3d54:	ldr	r0, [sp, #124]	; 0x7c
    3d58:	movw	r1, #0
    3d5c:	mov	r3, #0
    3d60:	movt	r1, #0
    3d64:	bl	0 <coda_mem_record_add_field>
    3d68:	cmp	sl, #44	; 0x2c
    3d6c:	blt	3e34 <read_file+0x1b64>
    3d70:	ldr	r0, [sp, #24]
    3d74:	movw	r1, #0
    3d78:	mov	r2, #8
    3d7c:	movt	r1, #0
    3d80:	bl	0 <memcmp>
    3d84:	cmp	r0, #0
    3d88:	beq	3e34 <read_file+0x1b64>
    3d8c:	ldr	r0, [sp, #24]
    3d90:	mov	r1, #8
    3d94:	sub	r2, fp, #48	; 0x30
    3d98:	mov	r3, #0
    3d9c:	bl	0 <coda_ascii_parse_int64>
    3da0:	cmp	r0, #0
    3da4:	blt	4514 <read_file+0x2244>
    3da8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3dac:	b	3e40 <read_file+0x1b70>
    3db0:	mov	r3, #0
    3db4:	str	r3, [fp, #-44]	; 0xffffffd4
    3db8:	str	r3, [fp, #-48]	; 0xffffffd0
    3dbc:	bl	0 <__aeabi_read_tp>
    3dc0:	ldr	r0, [r0, r4]
    3dc4:	ldr	r2, [sp, #92]	; 0x5c
    3dc8:	mov	r1, #0
    3dcc:	ldr	r0, [r0, #164]	; 0xa4
    3dd0:	bl	0 <coda_mem_int32_new>
    3dd4:	mov	r2, r0
    3dd8:	ldr	r0, [sp, #124]	; 0x7c
    3ddc:	movw	r1, #0
    3de0:	mov	r3, #0
    3de4:	movt	r1, #0
    3de8:	bl	0 <coda_mem_record_add_field>
    3dec:	cmp	sl, #53	; 0x35
    3df0:	blt	3eb8 <read_file+0x1be8>
    3df4:	ldr	r0, [sp, #20]
    3df8:	movw	r1, #0
    3dfc:	mov	r2, #8
    3e00:	movt	r1, #0
    3e04:	bl	0 <memcmp>
    3e08:	cmp	r0, #0
    3e0c:	beq	3eb8 <read_file+0x1be8>
    3e10:	ldr	r0, [sp, #20]
    3e14:	mov	r1, #8
    3e18:	sub	r2, fp, #48	; 0x30
    3e1c:	mov	r3, #0
    3e20:	bl	0 <coda_ascii_parse_int64>
    3e24:	cmp	r0, #0
    3e28:	blt	4524 <read_file+0x2254>
    3e2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3e30:	b	3ec4 <read_file+0x1bf4>
    3e34:	mov	r3, #0
    3e38:	str	r3, [fp, #-44]	; 0xffffffd4
    3e3c:	str	r3, [fp, #-48]	; 0xffffffd0
    3e40:	bl	0 <__aeabi_read_tp>
    3e44:	ldr	r0, [r0, r4]
    3e48:	ldr	r2, [sp, #92]	; 0x5c
    3e4c:	mov	r1, #0
    3e50:	ldr	r0, [r0, #240]	; 0xf0
    3e54:	bl	0 <coda_mem_int32_new>
    3e58:	mov	r2, r0
    3e5c:	ldr	r0, [sp, #124]	; 0x7c
    3e60:	movw	r1, #0
    3e64:	mov	r3, #0
    3e68:	movt	r1, #0
    3e6c:	bl	0 <coda_mem_record_add_field>
    3e70:	cmp	sl, #53	; 0x35
    3e74:	blt	3f3c <read_file+0x1c6c>
    3e78:	ldr	r0, [sp, #20]
    3e7c:	movw	r1, #0
    3e80:	mov	r2, #8
    3e84:	movt	r1, #0
    3e88:	bl	0 <memcmp>
    3e8c:	cmp	r0, #0
    3e90:	beq	3f3c <read_file+0x1c6c>
    3e94:	ldr	r0, [sp, #20]
    3e98:	mov	r1, #8
    3e9c:	sub	r2, fp, #48	; 0x30
    3ea0:	mov	r3, #0
    3ea4:	bl	0 <coda_ascii_parse_int64>
    3ea8:	cmp	r0, #0
    3eac:	blt	4524 <read_file+0x2254>
    3eb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3eb4:	b	3f48 <read_file+0x1c78>
    3eb8:	mov	r3, #0
    3ebc:	str	r3, [fp, #-44]	; 0xffffffd4
    3ec0:	str	r3, [fp, #-48]	; 0xffffffd0
    3ec4:	bl	0 <__aeabi_read_tp>
    3ec8:	ldr	r0, [r0, r4]
    3ecc:	ldr	r2, [sp, #92]	; 0x5c
    3ed0:	mov	r1, #0
    3ed4:	ldr	r0, [r0, #168]	; 0xa8
    3ed8:	bl	0 <coda_mem_int32_new>
    3edc:	mov	r2, r0
    3ee0:	ldr	r0, [sp, #124]	; 0x7c
    3ee4:	movw	r1, #0
    3ee8:	mov	r3, #0
    3eec:	movt	r1, #0
    3ef0:	bl	0 <coda_mem_record_add_field>
    3ef4:	cmp	sl, #62	; 0x3e
    3ef8:	blt	3fc0 <read_file+0x1cf0>
    3efc:	ldr	r0, [sp, #16]
    3f00:	movw	r1, #0
    3f04:	mov	r2, #8
    3f08:	movt	r1, #0
    3f0c:	bl	0 <memcmp>
    3f10:	cmp	r0, #0
    3f14:	beq	3fc0 <read_file+0x1cf0>
    3f18:	ldr	r0, [sp, #16]
    3f1c:	mov	r1, #8
    3f20:	sub	r2, fp, #48	; 0x30
    3f24:	mov	r3, #0
    3f28:	bl	0 <coda_ascii_parse_int64>
    3f2c:	cmp	r0, #0
    3f30:	blt	4534 <read_file+0x2264>
    3f34:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3f38:	b	3fcc <read_file+0x1cfc>
    3f3c:	mov	r3, #0
    3f40:	str	r3, [fp, #-44]	; 0xffffffd4
    3f44:	str	r3, [fp, #-48]	; 0xffffffd0
    3f48:	bl	0 <__aeabi_read_tp>
    3f4c:	ldr	r0, [r0, r4]
    3f50:	ldr	r2, [sp, #92]	; 0x5c
    3f54:	mov	r1, #0
    3f58:	ldr	r0, [r0, #244]	; 0xf4
    3f5c:	bl	0 <coda_mem_int32_new>
    3f60:	mov	r2, r0
    3f64:	ldr	r0, [sp, #124]	; 0x7c
    3f68:	movw	r1, #0
    3f6c:	mov	r3, #0
    3f70:	movt	r1, #0
    3f74:	bl	0 <coda_mem_record_add_field>
    3f78:	cmp	sl, #62	; 0x3e
    3f7c:	blt	4044 <read_file+0x1d74>
    3f80:	ldr	r0, [sp, #16]
    3f84:	movw	r1, #0
    3f88:	mov	r2, #8
    3f8c:	movt	r1, #0
    3f90:	bl	0 <memcmp>
    3f94:	cmp	r0, #0
    3f98:	beq	4044 <read_file+0x1d74>
    3f9c:	ldr	r0, [sp, #16]
    3fa0:	mov	r1, #8
    3fa4:	sub	r2, fp, #48	; 0x30
    3fa8:	mov	r3, #0
    3fac:	bl	0 <coda_ascii_parse_int64>
    3fb0:	cmp	r0, #0
    3fb4:	blt	4534 <read_file+0x2264>
    3fb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
    3fbc:	b	4050 <read_file+0x1d80>
    3fc0:	mov	r3, #0
    3fc4:	str	r3, [fp, #-44]	; 0xffffffd4
    3fc8:	str	r3, [fp, #-48]	; 0xffffffd0
    3fcc:	bl	0 <__aeabi_read_tp>
    3fd0:	ldr	r0, [r0, r4]
    3fd4:	ldr	r2, [sp, #92]	; 0x5c
    3fd8:	mov	r1, #0
    3fdc:	ldr	r0, [r0, #172]	; 0xac
    3fe0:	bl	0 <coda_mem_int32_new>
    3fe4:	mov	r2, r0
    3fe8:	ldr	r0, [sp, #124]	; 0x7c
    3fec:	movw	r1, #0
    3ff0:	mov	r3, #0
    3ff4:	movt	r1, #0
    3ff8:	bl	0 <coda_mem_record_add_field>
    3ffc:	cmp	sl, #71	; 0x47
    4000:	blt	40c8 <read_file+0x1df8>
    4004:	ldr	r0, [sp, #12]
    4008:	movw	r1, #0
    400c:	mov	r2, #8
    4010:	movt	r1, #0
    4014:	bl	0 <memcmp>
    4018:	cmp	r0, #0
    401c:	beq	40c8 <read_file+0x1df8>
    4020:	ldr	r0, [sp, #12]
    4024:	mov	r1, #8
    4028:	sub	r2, fp, #48	; 0x30
    402c:	mov	r3, #0
    4030:	bl	0 <coda_ascii_parse_int64>
    4034:	cmp	r0, #0
    4038:	blt	4544 <read_file+0x2274>
    403c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    4040:	b	40d4 <read_file+0x1e04>
    4044:	mov	r3, #0
    4048:	str	r3, [fp, #-44]	; 0xffffffd4
    404c:	str	r3, [fp, #-48]	; 0xffffffd0
    4050:	bl	0 <__aeabi_read_tp>
    4054:	ldr	r0, [r0, r4]
    4058:	ldr	r2, [sp, #92]	; 0x5c
    405c:	mov	r1, #0
    4060:	ldr	r0, [r0, #248]	; 0xf8
    4064:	bl	0 <coda_mem_int32_new>
    4068:	mov	r2, r0
    406c:	ldr	r0, [sp, #124]	; 0x7c
    4070:	movw	r1, #0
    4074:	mov	r3, #0
    4078:	movt	r1, #0
    407c:	bl	0 <coda_mem_record_add_field>
    4080:	cmp	sl, #71	; 0x47
    4084:	blt	4150 <read_file+0x1e80>
    4088:	ldr	r0, [sp, #12]
    408c:	movw	r1, #0
    4090:	mov	r2, #8
    4094:	movt	r1, #0
    4098:	bl	0 <memcmp>
    409c:	cmp	r0, #0
    40a0:	beq	4150 <read_file+0x1e80>
    40a4:	ldr	r0, [sp, #12]
    40a8:	mov	r1, #8
    40ac:	sub	r2, fp, #48	; 0x30
    40b0:	mov	r3, #0
    40b4:	bl	0 <coda_ascii_parse_int64>
    40b8:	cmp	r0, #0
    40bc:	blt	4544 <read_file+0x2274>
    40c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    40c4:	b	415c <read_file+0x1e8c>
    40c8:	mov	r3, #0
    40cc:	str	r3, [fp, #-44]	; 0xffffffd4
    40d0:	str	r3, [fp, #-48]	; 0xffffffd0
    40d4:	bl	0 <__aeabi_read_tp>
    40d8:	ldr	r0, [r0, r4]
    40dc:	ldr	r2, [sp, #92]	; 0x5c
    40e0:	mov	r1, #0
    40e4:	ldr	r0, [r0, #176]	; 0xb0
    40e8:	bl	0 <coda_mem_int32_new>
    40ec:	mov	r2, r0
    40f0:	ldr	r0, [sp, #124]	; 0x7c
    40f4:	movw	r1, #0
    40f8:	mov	r3, #0
    40fc:	movt	r1, #0
    4100:	bl	0 <coda_mem_record_add_field>
    4104:	cmp	sl, #80	; 0x50
    4108:	blt	41d8 <read_file+0x1f08>
    410c:	ldr	r0, [sp, #8]
    4110:	movw	r1, #0
    4114:	mov	r2, #8
    4118:	movt	r1, #0
    411c:	bl	0 <memcmp>
    4120:	cmp	r0, #0
    4124:	beq	41d8 <read_file+0x1f08>
    4128:	ldr	r0, [sp, #8]
    412c:	mov	r1, #8
    4130:	sub	r2, fp, #48	; 0x30
    4134:	mov	r3, #0
    4138:	bl	0 <coda_ascii_parse_int64>
    413c:	cmp	r0, #0
    4140:	mov	r6, #0
    4144:	blt	4554 <read_file+0x2284>
    4148:	ldr	r3, [fp, #-48]	; 0xffffffd0
    414c:	b	41e8 <read_file+0x1f18>
    4150:	mov	r3, #0
    4154:	str	r3, [fp, #-44]	; 0xffffffd4
    4158:	str	r3, [fp, #-48]	; 0xffffffd0
    415c:	bl	0 <__aeabi_read_tp>
    4160:	ldr	r0, [r0, r4]
    4164:	ldr	r2, [sp, #92]	; 0x5c
    4168:	mov	r1, #0
    416c:	ldr	r0, [r0, #252]	; 0xfc
    4170:	bl	0 <coda_mem_int32_new>
    4174:	mov	r2, r0
    4178:	ldr	r0, [sp, #124]	; 0x7c
    417c:	movw	r1, #0
    4180:	mov	r3, #0
    4184:	movt	r1, #0
    4188:	bl	0 <coda_mem_record_add_field>
    418c:	cmp	sl, #80	; 0x50
    4190:	blt	4220 <read_file+0x1f50>
    4194:	ldr	r0, [sp, #8]
    4198:	movw	r1, #0
    419c:	mov	r2, #8
    41a0:	movt	r1, #0
    41a4:	bl	0 <memcmp>
    41a8:	cmp	r0, #0
    41ac:	beq	4220 <read_file+0x1f50>
    41b0:	ldr	r0, [sp, #8]
    41b4:	mov	r1, #8
    41b8:	sub	r2, fp, #48	; 0x30
    41bc:	mov	r3, #0
    41c0:	bl	0 <coda_ascii_parse_int64>
    41c4:	cmp	r0, #0
    41c8:	mov	r6, #0
    41cc:	blt	4554 <read_file+0x2284>
    41d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
    41d4:	b	4230 <read_file+0x1f60>
    41d8:	mov	r3, #0
    41dc:	mov	r6, #0
    41e0:	str	r3, [fp, #-44]	; 0xffffffd4
    41e4:	str	r3, [fp, #-48]	; 0xffffffd0
    41e8:	bl	0 <__aeabi_read_tp>
    41ec:	ldr	r0, [r0, r4]
    41f0:	ldr	r2, [sp, #92]	; 0x5c
    41f4:	mov	r1, #0
    41f8:	ldr	r0, [r0, #180]	; 0xb4
    41fc:	bl	0 <coda_mem_int32_new>
    4200:	mov	r2, r0
    4204:	ldr	r0, [sp, #124]	; 0x7c
    4208:	movw	r1, #0
    420c:	mov	r3, #0
    4210:	movt	r1, #0
    4214:	bl	0 <coda_mem_record_add_field>
    4218:	ldr	r0, [sp, #112]	; 0x70
    421c:	b	4264 <read_file+0x1f94>
    4220:	mov	r3, #0
    4224:	mov	r6, #0
    4228:	str	r3, [fp, #-44]	; 0xffffffd4
    422c:	str	r3, [fp, #-48]	; 0xffffffd0
    4230:	bl	0 <__aeabi_read_tp>
    4234:	ldr	r0, [r0, r4]
    4238:	ldr	r2, [sp, #92]	; 0x5c
    423c:	mov	r1, #0
    4240:	ldr	r0, [r0, #256]	; 0x100
    4244:	bl	0 <coda_mem_int32_new>
    4248:	mov	r2, r0
    424c:	ldr	r0, [sp, #124]	; 0x7c
    4250:	movw	r1, #0
    4254:	mov	r3, #0
    4258:	movt	r1, #0
    425c:	bl	0 <coda_mem_record_add_field>
    4260:	ldr	r0, [sp, #120]	; 0x78
    4264:	ldr	r2, [sp, #124]	; 0x7c
    4268:	movw	r1, #0
    426c:	mov	r3, #0
    4270:	movt	r1, #0
    4274:	bl	0 <coda_mem_record_add_field>
    4278:	str	r6, [sp, #124]	; 0x7c
    427c:	ldr	r0, [sp, #88]	; 0x58
    4280:	bl	0 <ftell>
    4284:	str	r0, [sp, #140]	; 0x8c
    4288:	ldr	r1, [sp, #136]	; 0x88
    428c:	ldr	r0, [sp, #88]	; 0x58
    4290:	add	r1, r1, #1
    4294:	str	r1, [sp, #136]	; 0x88
    4298:	mov	r1, r8
    429c:	bl	49cc <get_line>
    42a0:	mov	sl, r0
    42a4:	cmp	r0, #0
    42a8:	blt	2690 <read_file+0x3c0>
    42ac:	ldr	r1, [sp, #112]	; 0x70
    42b0:	cmp	r1, #0
    42b4:	beq	42c8 <read_file+0x1ff8>
    42b8:	ldr	r0, [sp, #108]	; 0x6c
    42bc:	bl	0 <coda_mem_array_add_element>
    42c0:	mov	r0, #0
    42c4:	str	r0, [sp, #112]	; 0x70
    42c8:	ldr	r1, [sp, #120]	; 0x78
    42cc:	cmp	r1, #0
    42d0:	beq	42e4 <read_file+0x2014>
    42d4:	ldr	r0, [sp, #116]	; 0x74
    42d8:	bl	0 <coda_mem_array_add_element>
    42dc:	mov	r0, #0
    42e0:	str	r0, [sp, #120]	; 0x78
    42e4:	movw	r1, #0
    42e8:	mov	r0, r8
    42ec:	mov	r2, #3
    42f0:	movt	r1, #0
    42f4:	bl	0 <memcmp>
    42f8:	cmp	r0, #0
    42fc:	bne	2d54 <read_file+0xa84>
    4300:	ldr	r0, [sp, #104]	; 0x68
    4304:	cmp	r0, #0
    4308:	beq	4354 <read_file+0x2084>
    430c:	ldr	r2, [sp, #108]	; 0x6c
    4310:	movw	r1, #0
    4314:	mov	r3, #0
    4318:	mov	r5, #0
    431c:	movt	r1, #0
    4320:	bl	0 <coda_mem_record_add_field>
    4324:	str	r5, [sp, #108]	; 0x6c
    4328:	movw	r1, #0
    432c:	mov	r3, #0
    4330:	ldr	r0, [sp, #104]	; 0x68
    4334:	ldr	r2, [sp, #116]	; 0x74
    4338:	movt	r1, #0
    433c:	bl	0 <coda_mem_record_add_field>
    4340:	str	r5, [sp, #116]	; 0x74
    4344:	ldr	r0, [sp, #100]	; 0x64
    4348:	ldr	r1, [sp, #104]	; 0x68
    434c:	bl	0 <coda_mem_array_add_element>
    4350:	str	r5, [sp, #104]	; 0x68
    4354:	ldr	r7, [sp, #48]	; 0x30
    4358:	bl	0 <__aeabi_read_tp>
    435c:	ldr	r0, [r0, r4]
    4360:	mov	r1, #0
    4364:	mov	r5, #0
    4368:	ldr	r0, [r0, #296]	; 0x128
    436c:	bl	0 <coda_mem_record_new>
    4370:	ldr	r2, [sp, #96]	; 0x60
    4374:	movw	r1, #0
    4378:	mov	r3, #0
    437c:	mov	r6, r0
    4380:	movt	r1, #0
    4384:	bl	0 <coda_mem_record_add_field>
    4388:	str	r5, [sp, #96]	; 0x60
    438c:	movw	r1, #0
    4390:	mov	r0, r6
    4394:	mov	r3, #0
    4398:	ldr	r2, [sp, #100]	; 0x64
    439c:	movt	r1, #0
    43a0:	bl	0 <coda_mem_record_add_field>
    43a4:	add	r0, sp, #88	; 0x58
    43a8:	str	r5, [sp, #100]	; 0x64
    43ac:	str	r6, [r7, #20]
    43b0:	bl	492c <ingest_info_cleanup>
    43b4:	b	269c <read_file+0x3cc>
    43b8:	ldr	r2, [sp, #136]	; 0x88
    43bc:	ldr	r3, [sp, #140]	; 0x8c
    43c0:	movw	r1, #0
    43c4:	movt	r1, #0
    43c8:	b	44c8 <read_file+0x21f8>
    43cc:	ldr	r0, [sp, #140]	; 0x8c
    43d0:	ldr	r3, [sp, #136]	; 0x88
    43d4:	movw	r1, #0
    43d8:	mov	r2, sl
    43dc:	movt	r1, #0
    43e0:	str	r0, [sp]
    43e4:	b	44c8 <read_file+0x21f8>
    43e8:	ldr	r0, [sp, #140]	; 0x8c
    43ec:	ldr	r1, [sp, #136]	; 0x88
    43f0:	add	r2, r0, #4
    43f4:	b	4560 <read_file+0x2290>
    43f8:	ldr	r0, [sp, #140]	; 0x8c
    43fc:	ldr	r1, [sp, #136]	; 0x88
    4400:	add	r2, r0, #18
    4404:	b	4560 <read_file+0x2290>
    4408:	ldr	r0, [sp, #140]	; 0x8c
    440c:	ldr	r1, [sp, #136]	; 0x88
    4410:	add	r2, r0, #32
    4414:	b	4560 <read_file+0x2290>
    4418:	ldr	r0, [sp, #140]	; 0x8c
    441c:	ldr	r1, [sp, #136]	; 0x88
    4420:	add	r2, r0, #46	; 0x2e
    4424:	b	4560 <read_file+0x2290>
    4428:	ldr	r2, [sp, #136]	; 0x88
    442c:	ldr	r3, [sp, #140]	; 0x8c
    4430:	movw	r1, #0
    4434:	movt	r1, #0
    4438:	b	44c8 <read_file+0x21f8>
    443c:	ldr	r2, [sp, #136]	; 0x88
    4440:	ldr	r3, [sp, #140]	; 0x8c
    4444:	movw	r1, #0
    4448:	movt	r1, #0
    444c:	b	44c8 <read_file+0x21f8>
    4450:	ldr	r2, [sp, #136]	; 0x88
    4454:	ldr	r3, [sp, #140]	; 0x8c
    4458:	movw	r1, #0
    445c:	movt	r1, #0
    4460:	b	44c8 <read_file+0x21f8>
    4464:	ldr	r0, [sp, #140]	; 0x8c
    4468:	ldr	r1, [sp, #136]	; 0x88
    446c:	add	r2, r0, #61	; 0x3d
    4470:	b	4560 <read_file+0x2290>
    4474:	ldr	r0, [sp, #140]	; 0x8c
    4478:	ldr	r1, [sp, #136]	; 0x88
    447c:	add	r2, r0, #64	; 0x40
    4480:	b	4560 <read_file+0x2290>
    4484:	ldr	r0, [sp, #140]	; 0x8c
    4488:	ldr	r1, [sp, #136]	; 0x88
    448c:	add	r2, r0, #67	; 0x43
    4490:	b	4560 <read_file+0x2290>
    4494:	ldr	r0, [sp, #140]	; 0x8c
    4498:	ldr	r1, [sp, #136]	; 0x88
    449c:	add	r2, r0, #70	; 0x46
    44a0:	b	4560 <read_file+0x2290>
    44a4:	ldr	r2, [sp, #136]	; 0x88
    44a8:	ldr	r3, [sp, #140]	; 0x8c
    44ac:	movw	r1, #0
    44b0:	movt	r1, #0
    44b4:	b	44c8 <read_file+0x21f8>
    44b8:	ldr	r2, [sp, #136]	; 0x88
    44bc:	ldr	r3, [sp, #140]	; 0x8c
    44c0:	movw	r1, #0
    44c4:	movt	r1, #0
    44c8:	mvn	r0, #21
    44cc:	bl	0 <coda_set_error>
    44d0:	b	2690 <read_file+0x3c0>
    44d4:	ldr	r0, [sp, #140]	; 0x8c
    44d8:	ldr	r1, [sp, #136]	; 0x88
    44dc:	add	r2, r0, #9
    44e0:	b	4560 <read_file+0x2290>
    44e4:	ldr	r0, [sp, #140]	; 0x8c
    44e8:	ldr	r1, [sp, #136]	; 0x88
    44ec:	add	r2, r0, #14
    44f0:	b	4560 <read_file+0x2290>
    44f4:	ldr	r0, [sp, #140]	; 0x8c
    44f8:	ldr	r1, [sp, #136]	; 0x88
    44fc:	add	r2, r0, #19
    4500:	b	4560 <read_file+0x2290>
    4504:	ldr	r0, [sp, #140]	; 0x8c
    4508:	ldr	r1, [sp, #136]	; 0x88
    450c:	add	r2, r0, #27
    4510:	b	4560 <read_file+0x2290>
    4514:	ldr	r0, [sp, #140]	; 0x8c
    4518:	ldr	r1, [sp, #136]	; 0x88
    451c:	add	r2, r0, #36	; 0x24
    4520:	b	4560 <read_file+0x2290>
    4524:	ldr	r0, [sp, #140]	; 0x8c
    4528:	ldr	r1, [sp, #136]	; 0x88
    452c:	add	r2, r0, #45	; 0x2d
    4530:	b	4560 <read_file+0x2290>
    4534:	ldr	r0, [sp, #140]	; 0x8c
    4538:	ldr	r1, [sp, #136]	; 0x88
    453c:	add	r2, r0, #54	; 0x36
    4540:	b	4560 <read_file+0x2290>
    4544:	ldr	r0, [sp, #140]	; 0x8c
    4548:	ldr	r1, [sp, #136]	; 0x88
    454c:	add	r2, r0, #63	; 0x3f
    4550:	b	4560 <read_file+0x2290>
    4554:	ldr	r0, [sp, #140]	; 0x8c
    4558:	ldr	r1, [sp, #136]	; 0x88
    455c:	add	r2, r0, #72	; 0x48
    4560:	movw	r0, #0
    4564:	movt	r0, #0
    4568:	bl	0 <coda_add_error_message>
    456c:	b	2690 <read_file+0x3c0>
    4570:	ldrh	r0, [sp, #211]	; 0xd3
    4574:	mov	sl, #0
    4578:	strb	sl, [sp, #146]	; 0x92
    457c:	strh	r0, [sp, #144]	; 0x90
    4580:	bl	0 <__aeabi_read_tp>
    4584:	ldr	r6, [pc, #824]	; 48c4 <read_file+0x25f4>
    4588:	mov	r7, r0
    458c:	ldr	r2, [sp, #92]	; 0x5c
    4590:	add	r4, sp, #144	; 0x90
    4594:	mov	r1, #0
    4598:	mov	r3, r4
    459c:	ldr	r0, [r0, r6]
    45a0:	ldr	r0, [r0, #72]	; 0x48
    45a4:	bl	0 <coda_mem_string_new>
    45a8:	mov	r2, r0
    45ac:	ldr	r0, [sp, #96]	; 0x60
    45b0:	movw	r1, #0
    45b4:	mov	r3, #0
    45b8:	movt	r1, #0
    45bc:	bl	0 <coda_mem_record_add_field>
    45c0:	ldrb	r0, [sp, #219]	; 0xdb
    45c4:	strb	sl, [sp, #147]	; 0x93
    45c8:	ldr	r2, [sp, #92]	; 0x5c
    45cc:	mov	r1, #0
    45d0:	mov	r3, r4
    45d4:	strb	r0, [sp, #146]	; 0x92
    45d8:	ldrh	r0, [r5, #-43]	; 0xffffffd5
    45dc:	strh	r0, [sp, #144]	; 0x90
    45e0:	ldr	r0, [r7, r6]
    45e4:	ldr	r0, [r0, #76]	; 0x4c
    45e8:	bl	0 <coda_mem_string_new>
    45ec:	mov	r2, r0
    45f0:	ldr	r0, [sp, #96]	; 0x60
    45f4:	movw	r1, #0
    45f8:	mov	r3, #0
    45fc:	movt	r1, #0
    4600:	bl	0 <coda_mem_record_add_field>
    4604:	ldr	r0, [sp, #88]	; 0x58
    4608:	bl	0 <ftell>
    460c:	str	r0, [sp, #140]	; 0x8c
    4610:	ldr	r1, [sp, #136]	; 0x88
    4614:	ldr	r0, [sp, #88]	; 0x58
    4618:	add	r1, r1, #1
    461c:	str	r1, [sp, #136]	; 0x88
    4620:	add	r1, sp, #208	; 0xd0
    4624:	bl	49cc <get_line>
    4628:	cmp	r0, #0
    462c:	blt	2c4c <read_file+0x97c>
    4630:	mov	r2, r0
    4634:	cmp	r0, #59	; 0x3b
    4638:	ble	2b50 <read_file+0x880>
    463c:	movw	r1, #0
    4640:	add	r0, sp, #208	; 0xd0
    4644:	mov	r2, #3
    4648:	movt	r1, #0
    464c:	bl	0 <memcmp>
    4650:	cmp	r0, #0
    4654:	bne	2c34 <read_file+0x964>
    4658:	ldr	r0, [sp, #88]	; 0x58
    465c:	bl	0 <ftell>
    4660:	str	r0, [sp, #140]	; 0x8c
    4664:	ldr	r1, [sp, #136]	; 0x88
    4668:	ldr	r0, [sp, #88]	; 0x58
    466c:	add	r1, r1, #1
    4670:	str	r1, [sp, #136]	; 0x88
    4674:	add	r1, sp, #208	; 0xd0
    4678:	bl	49cc <get_line>
    467c:	cmp	r0, #0
    4680:	blt	2c4c <read_file+0x97c>
    4684:	mov	r2, r0
    4688:	cmp	r0, #59	; 0x3b
    468c:	ble	2b50 <read_file+0x880>
    4690:	movw	r1, #0
    4694:	add	r6, sp, #208	; 0xd0
    4698:	mov	r2, #3
    469c:	movt	r1, #0
    46a0:	mov	r0, r6
    46a4:	bl	0 <memcmp>
    46a8:	cmp	r0, #0
    46ac:	bne	2c34 <read_file+0x964>
    46b0:	ldr	r0, [sp, #84]	; 0x54
    46b4:	sub	r2, fp, #40	; 0x28
    46b8:	mov	r1, #10
    46bc:	mov	r3, #0
    46c0:	bl	0 <coda_ascii_parse_double>
    46c4:	cmn	r0, #1
    46c8:	ble	4898 <read_file+0x25c8>
    46cc:	bl	0 <__aeabi_read_tp>
    46d0:	ldr	r1, [pc, #492]	; 48c4 <read_file+0x25f4>
    46d4:	vldr	d0, [fp, #-40]	; 0xffffffd8
    46d8:	ldr	r2, [sp, #92]	; 0x5c
    46dc:	ldr	r0, [r0, r1]
    46e0:	mov	r1, #0
    46e4:	ldr	r0, [r0, #80]	; 0x50
    46e8:	bl	0 <coda_mem_double_new>
    46ec:	mov	r2, r0
    46f0:	ldr	r0, [sp, #96]	; 0x60
    46f4:	movw	r1, #0
    46f8:	mov	r3, #0
    46fc:	movt	r1, #0
    4700:	bl	0 <coda_mem_record_add_field>
    4704:	add	r0, r6, #14
    4708:	sub	r2, fp, #40	; 0x28
    470c:	mov	r1, #12
    4710:	mov	r3, #0
    4714:	bl	0 <coda_ascii_parse_double>
    4718:	cmn	r0, #1
    471c:	ble	48a8 <read_file+0x25d8>
    4720:	bl	0 <__aeabi_read_tp>
    4724:	ldr	r1, [pc, #408]	; 48c4 <read_file+0x25f4>
    4728:	vldr	d0, [fp, #-40]	; 0xffffffd8
    472c:	ldr	r2, [sp, #92]	; 0x5c
    4730:	ldr	r0, [r0, r1]
    4734:	mov	r1, #0
    4738:	ldr	r0, [r0, #84]	; 0x54
    473c:	bl	0 <coda_mem_double_new>
    4740:	mov	r2, r0
    4744:	ldr	r0, [sp, #96]	; 0x60
    4748:	movw	r1, #0
    474c:	mov	r3, #0
    4750:	movt	r1, #0
    4754:	bl	0 <coda_mem_record_add_field>
    4758:	ldr	r0, [sp, #88]	; 0x58
    475c:	bl	0 <ftell>
    4760:	str	r0, [sp, #140]	; 0x8c
    4764:	ldr	r1, [sp, #136]	; 0x88
    4768:	ldr	r0, [sp, #88]	; 0x58
    476c:	add	r1, r1, #1
    4770:	str	r1, [sp, #136]	; 0x88
    4774:	add	r1, sp, #208	; 0xd0
    4778:	bl	49cc <get_line>
    477c:	cmp	r0, #0
    4780:	blt	2c4c <read_file+0x97c>
    4784:	ldr	r0, [sp, #88]	; 0x58
    4788:	bl	0 <ftell>
    478c:	str	r0, [sp, #140]	; 0x8c
    4790:	ldr	r1, [sp, #136]	; 0x88
    4794:	ldr	r0, [sp, #88]	; 0x58
    4798:	add	r1, r1, #1
    479c:	str	r1, [sp, #136]	; 0x88
    47a0:	add	r1, sp, #208	; 0xd0
    47a4:	bl	49cc <get_line>
    47a8:	cmp	r0, #0
    47ac:	blt	2c4c <read_file+0x97c>
    47b0:	ldr	r0, [sp, #88]	; 0x58
    47b4:	bl	0 <ftell>
    47b8:	str	r0, [sp, #140]	; 0x8c
    47bc:	ldr	r1, [sp, #136]	; 0x88
    47c0:	ldr	r0, [sp, #88]	; 0x58
    47c4:	add	r1, r1, #1
    47c8:	str	r1, [sp, #136]	; 0x88
    47cc:	add	r1, sp, #208	; 0xd0
    47d0:	bl	49cc <get_line>
    47d4:	cmp	r0, #0
    47d8:	blt	2c4c <read_file+0x97c>
    47dc:	ldr	r0, [sp, #88]	; 0x58
    47e0:	bl	0 <ftell>
    47e4:	str	r0, [sp, #140]	; 0x8c
    47e8:	ldr	r1, [sp, #136]	; 0x88
    47ec:	ldr	r0, [sp, #88]	; 0x58
    47f0:	add	r1, r1, #1
    47f4:	str	r1, [sp, #136]	; 0x88
    47f8:	add	r1, sp, #208	; 0xd0
    47fc:	bl	49cc <get_line>
    4800:	cmp	r0, #0
    4804:	blt	2c4c <read_file+0x97c>
    4808:	ldr	r0, [sp, #88]	; 0x58
    480c:	bl	0 <ftell>
    4810:	str	r0, [sp, #140]	; 0x8c
    4814:	ldr	r1, [sp, #136]	; 0x88
    4818:	ldr	r0, [sp, #88]	; 0x58
    481c:	add	r1, r1, #1
    4820:	str	r1, [sp, #136]	; 0x88
    4824:	add	r1, sp, #208	; 0xd0
    4828:	bl	49cc <get_line>
    482c:	cmp	r0, #0
    4830:	blt	2c4c <read_file+0x97c>
    4834:	ldr	r0, [sp, #88]	; 0x58
    4838:	bl	0 <ftell>
    483c:	str	r0, [sp, #140]	; 0x8c
    4840:	ldr	r1, [sp, #136]	; 0x88
    4844:	ldr	r0, [sp, #88]	; 0x58
    4848:	add	r1, r1, #1
    484c:	str	r1, [sp, #136]	; 0x88
    4850:	add	r1, sp, #208	; 0xd0
    4854:	bl	49cc <get_line>
    4858:	ldr	r4, [pc, #100]	; 48c4 <read_file+0x25f4>
    485c:	cmp	r0, #0
    4860:	blt	2688 <read_file+0x3b8>
    4864:	ldr	r0, [sp, #88]	; 0x58
    4868:	bl	0 <ftell>
    486c:	str	r0, [sp, #140]	; 0x8c
    4870:	ldr	r1, [sp, #136]	; 0x88
    4874:	ldr	r0, [sp, #88]	; 0x58
    4878:	add	r1, r1, #1
    487c:	str	r1, [sp, #136]	; 0x88
    4880:	add	r1, sp, #208	; 0xd0
    4884:	bl	49cc <get_line>
    4888:	asr	r9, r0, #31
    488c:	cmp	r9, #0
    4890:	bne	2690 <read_file+0x3c0>
    4894:	b	2c58 <read_file+0x988>
    4898:	ldr	r0, [sp, #140]	; 0x8c
    489c:	ldr	r1, [sp, #136]	; 0x88
    48a0:	add	r2, r0, #3
    48a4:	b	48b4 <read_file+0x25e4>
    48a8:	ldr	r0, [sp, #140]	; 0x8c
    48ac:	ldr	r1, [sp, #136]	; 0x88
    48b0:	add	r2, r0, #14
    48b4:	movw	r0, #0
    48b8:	movt	r0, #0
    48bc:	bl	0 <coda_add_error_message>
    48c0:	b	2c4c <read_file+0x97c>
    48c4:	.word	0x00000000

000048c8 <coda_sp3_close>:
    48c8:	push	{r4, sl, fp, lr}
    48cc:	add	fp, sp, #8
    48d0:	mov	r4, r0
    48d4:	ldr	r0, [r0, #20]
    48d8:	cmp	r0, #0
    48dc:	beq	48e4 <coda_sp3_close+0x1c>
    48e0:	bl	0 <coda_dynamic_type_delete>
    48e4:	ldr	r0, [r4]
    48e8:	cmp	r0, #0
    48ec:	beq	48f4 <coda_sp3_close+0x2c>
    48f0:	bl	0 <free>
    48f4:	mov	r0, r4
    48f8:	bl	0 <free>
    48fc:	mov	r0, #0
    4900:	pop	{r4, sl, fp, pc}

00004904 <coda_sp3_cursor_set_product>:
    4904:	mov	r2, #1
    4908:	stm	r0, {r1, r2}
    490c:	mvn	r2, #0
    4910:	ldr	r1, [r1, #20]
    4914:	str	r2, [r0, #20]
    4918:	str	r2, [r0, #16]
    491c:	str	r2, [r0, #12]
    4920:	str	r1, [r0, #8]
    4924:	mov	r0, #0
    4928:	bx	lr

0000492c <ingest_info_cleanup>:
    492c:	push	{r4, sl, fp, lr}
    4930:	add	fp, sp, #8
    4934:	mov	r4, r0
    4938:	ldr	r0, [r0]
    493c:	cmp	r0, #0
    4940:	beq	4948 <ingest_info_cleanup+0x1c>
    4944:	bl	0 <fclose>
    4948:	ldr	r0, [r4, #8]
    494c:	cmp	r0, #0
    4950:	beq	4958 <ingest_info_cleanup+0x2c>
    4954:	bl	0 <coda_dynamic_type_delete>
    4958:	ldr	r0, [r4, #12]
    495c:	cmp	r0, #0
    4960:	beq	4968 <ingest_info_cleanup+0x3c>
    4964:	bl	0 <coda_dynamic_type_delete>
    4968:	ldr	r0, [r4, #16]
    496c:	cmp	r0, #0
    4970:	beq	4978 <ingest_info_cleanup+0x4c>
    4974:	bl	0 <coda_dynamic_type_delete>
    4978:	ldr	r0, [r4, #20]
    497c:	cmp	r0, #0
    4980:	beq	4988 <ingest_info_cleanup+0x5c>
    4984:	bl	0 <coda_dynamic_type_delete>
    4988:	ldr	r0, [r4, #24]
    498c:	cmp	r0, #0
    4990:	beq	4998 <ingest_info_cleanup+0x6c>
    4994:	bl	0 <coda_dynamic_type_delete>
    4998:	ldr	r0, [r4, #28]
    499c:	cmp	r0, #0
    49a0:	beq	49a8 <ingest_info_cleanup+0x7c>
    49a4:	bl	0 <coda_dynamic_type_delete>
    49a8:	ldr	r0, [r4, #32]
    49ac:	cmp	r0, #0
    49b0:	beq	49b8 <ingest_info_cleanup+0x8c>
    49b4:	bl	0 <coda_dynamic_type_delete>
    49b8:	ldr	r0, [r4, #36]	; 0x24
    49bc:	cmp	r0, #0
    49c0:	popeq	{r4, sl, fp, pc}
    49c4:	pop	{r4, sl, fp, lr}
    49c8:	b	0 <coda_dynamic_type_delete>

000049cc <get_line>:
    49cc:	push	{r4, r5, fp, lr}
    49d0:	add	fp, sp, #8
    49d4:	mov	r5, r0
    49d8:	mov	r4, r1
    49dc:	mov	r0, r1
    49e0:	mov	r1, #1000	; 0x3e8
    49e4:	mov	r2, r5
    49e8:	bl	0 <fgets>
    49ec:	cmp	r0, #0
    49f0:	beq	4a40 <get_line+0x74>
    49f4:	mov	r0, r4
    49f8:	bl	0 <strlen>
    49fc:	mov	r1, r0
    4a00:	cmp	r0, #1
    4a04:	movlt	r0, r1
    4a08:	poplt	{r4, r5, fp, pc}
    4a0c:	sub	r2, r1, #1
    4a10:	mov	r3, r4
    4a14:	ldrb	r5, [r3, r2]!
    4a18:	cmp	r5, #10
    4a1c:	bne	4a80 <get_line+0xb4>
    4a20:	mov	r0, #0
    4a24:	cmp	r1, #2
    4a28:	strb	r0, [r3]
    4a2c:	poplt	{r4, r5, fp, pc}
    4a30:	sub	r3, r1, #2
    4a34:	mov	r0, r2
    4a38:	ldrb	r5, [r4, r3]!
    4a3c:	b	4a8c <get_line+0xc0>
    4a40:	mov	r0, r5
    4a44:	bl	0 <ferror>
    4a48:	cmp	r0, #0
    4a4c:	moveq	r0, #0
    4a50:	strbeq	r0, [r4]
    4a54:	popeq	{r4, r5, fp, pc}
    4a58:	bl	0 <__errno_location>
    4a5c:	ldr	r0, [r0]
    4a60:	bl	0 <strerror>
    4a64:	movw	r1, #0
    4a68:	mov	r2, r0
    4a6c:	mvn	r0, #21
    4a70:	movt	r1, #0
    4a74:	bl	0 <coda_set_error>
    4a78:	mvn	r0, #0
    4a7c:	pop	{r4, r5, fp, pc}
    4a80:	mov	r4, r3
    4a84:	mov	r3, r2
    4a88:	mov	r0, r1
    4a8c:	cmp	r5, #13
    4a90:	moveq	r0, #0
    4a94:	strbeq	r0, [r4]
    4a98:	moveq	r0, r3
    4a9c:	pop	{r4, r5, fp, pc}
