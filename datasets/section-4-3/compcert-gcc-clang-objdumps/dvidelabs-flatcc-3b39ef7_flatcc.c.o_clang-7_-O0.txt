
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/flatcc.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_init_options>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	str	r0, [fp, #-4]
      10:	ldr	r0, [fp, #-4]
      14:	mov	r1, #0
      18:	mov	r2, #224	; 0xe0
      1c:	str	r1, [sp, #8]
      20:	bl	0 <memset>
      24:	ldr	r1, [fp, #-4]
      28:	mov	r2, #65536	; 0x10000
      2c:	str	r2, [r1]
      30:	ldr	r1, [fp, #-4]
      34:	mov	r2, #100	; 0x64
      38:	str	r2, [r1, #4]
      3c:	ldr	r1, [fp, #-4]
      40:	str	r2, [r1, #8]
      44:	ldr	r1, [fp, #-4]
      48:	mov	r2, #1
      4c:	str	r2, [r1, #16]
      50:	ldr	r1, [fp, #-4]
      54:	str	r2, [r1, #20]
      58:	ldr	r1, [fp, #-4]
      5c:	str	r2, [r1, #24]
      60:	ldr	r1, [fp, #-4]
      64:	str	r2, [r1, #28]
      68:	ldr	r1, [fp, #-4]
      6c:	str	r2, [r1, #32]
      70:	ldr	r1, [fp, #-4]
      74:	str	r2, [r1, #36]	; 0x24
      78:	ldr	r1, [fp, #-4]
      7c:	str	r2, [r1, #40]	; 0x28
      80:	ldr	r1, [fp, #-4]
      84:	str	r2, [r1, #44]	; 0x2c
      88:	ldr	r1, [fp, #-4]
      8c:	str	r2, [r1, #48]	; 0x30
      90:	ldr	r1, [fp, #-4]
      94:	str	r2, [r1, #52]	; 0x34
      98:	ldr	r1, [fp, #-4]
      9c:	ldr	lr, [sp, #8]
      a0:	str	lr, [r1, #56]	; 0x38
      a4:	ldr	r1, [fp, #-4]
      a8:	str	lr, [r1, #60]	; 0x3c
      ac:	ldr	r1, [fp, #-4]
      b0:	mov	r3, #4
      b4:	str	r3, [r1, #64]	; 0x40
      b8:	ldr	r1, [fp, #-4]
      bc:	mov	r3, #2
      c0:	str	r3, [r1, #68]	; 0x44
      c4:	ldr	r1, [fp, #-4]
      c8:	str	r2, [r1, #72]	; 0x48
      cc:	ldr	r1, [fp, #-4]
      d0:	str	r2, [r1, #76]	; 0x4c
      d4:	ldr	r1, [fp, #-4]
      d8:	str	lr, [r1, #80]	; 0x50
      dc:	ldr	r1, [fp, #-4]
      e0:	str	r2, [r1, #84]	; 0x54
      e4:	ldr	r1, [fp, #-4]
      e8:	str	lr, [r1, #92]	; 0x5c
      ec:	movw	r2, #65534	; 0xfffe
      f0:	str	r2, [r1, #88]	; 0x58
      f4:	ldr	r1, [fp, #-4]
      f8:	movw	r2, #0
      fc:	movt	r2, #0
     100:	str	r2, [r1, #96]	; 0x60
     104:	ldr	r1, [fp, #-4]
     108:	movw	r2, #0
     10c:	movt	r2, #0
     110:	str	r2, [r1, #100]	; 0x64
     114:	ldr	r1, [fp, #-4]
     118:	movw	r2, #0
     11c:	movt	r2, #0
     120:	str	r2, [r1, #104]	; 0x68
     124:	ldr	r1, [fp, #-4]
     128:	movw	r2, #0
     12c:	str	r2, [r1, #132]	; 0x84
     130:	ldr	r1, [fp, #-4]
     134:	movw	r3, #1
     138:	str	r3, [r1, #136]	; 0x88
     13c:	ldr	r1, [fp, #-4]
     140:	str	r3, [r1, #140]	; 0x8c
     144:	ldr	r1, [fp, #-4]
     148:	str	r2, [r1, #144]	; 0x90
     14c:	ldr	r1, [fp, #-4]
     150:	str	r2, [r1, #148]	; 0x94
     154:	ldr	r1, [fp, #-4]
     158:	str	r2, [r1, #152]	; 0x98
     15c:	ldr	r1, [fp, #-4]
     160:	str	r2, [r1, #156]	; 0x9c
     164:	ldr	r1, [fp, #-4]
     168:	str	r2, [r1, #164]	; 0xa4
     16c:	ldr	r1, [fp, #-4]
     170:	movw	ip, #4
     174:	str	ip, [r1, #176]	; 0xb0
     178:	ldr	r1, [fp, #-4]
     17c:	str	r2, [r1, #180]	; 0xb4
     180:	ldr	r1, [fp, #-4]
     184:	str	r3, [r1, #184]	; 0xb8
     188:	ldr	r1, [fp, #-4]
     18c:	str	r2, [r1, #188]	; 0xbc
     190:	str	r0, [sp, #4]
     194:	mov	sp, fp
     198:	pop	{fp, pc}

0000019c <flatcc_create_context>:
     19c:	push	{fp, lr}
     1a0:	mov	fp, sp
     1a4:	sub	sp, sp, #32
     1a8:	str	r0, [fp, #-8]
     1ac:	str	r1, [fp, #-12]
     1b0:	str	r2, [sp, #16]
     1b4:	str	r3, [sp, #12]
     1b8:	movw	r0, #560	; 0x230
     1bc:	bl	0 <malloc>
     1c0:	str	r0, [sp, #8]
     1c4:	movw	r1, #0
     1c8:	cmp	r0, r1
     1cc:	bne	1dc <flatcc_create_context+0x40>
     1d0:	movw	r0, #0
     1d4:	str	r0, [fp, #-4]
     1d8:	b	224 <flatcc_create_context+0x88>
     1dc:	ldr	r0, [sp, #8]
     1e0:	ldr	r1, [fp, #-8]
     1e4:	ldr	r2, [fp, #-12]
     1e8:	ldr	r3, [sp, #16]
     1ec:	ldr	ip, [sp, #12]
     1f0:	str	ip, [sp]
     1f4:	movw	ip, #0
     1f8:	str	ip, [sp, #4]
     1fc:	bl	0 <__flatcc_fb_init_parser>
     200:	cmp	r0, #0
     204:	beq	21c <flatcc_create_context+0x80>
     208:	ldr	r0, [sp, #8]
     20c:	bl	0 <free>
     210:	movw	r0, #0
     214:	str	r0, [fp, #-4]
     218:	b	224 <flatcc_create_context+0x88>
     21c:	ldr	r0, [sp, #8]
     220:	str	r0, [fp, #-4]
     224:	ldr	r0, [fp, #-4]
     228:	mov	sp, fp
     22c:	pop	{fp, pc}

00000230 <flatcc_parse_buffer>:
     230:	push	{fp, lr}
     234:	mov	fp, sp
     238:	sub	sp, sp, #32
     23c:	str	r0, [fp, #-8]
     240:	str	r1, [fp, #-12]
     244:	str	r2, [sp, #16]
     248:	ldr	r0, [fp, #-8]
     24c:	str	r0, [sp, #12]
     250:	ldr	r0, [sp, #12]
     254:	movw	r1, #1
     258:	str	r1, [r0, #140]	; 0x8c
     25c:	ldr	r0, [sp, #16]
     260:	ldr	r1, [sp, #12]
     264:	ldr	r1, [r1, #128]	; 0x80
     268:	cmp	r0, r1
     26c:	bls	2a0 <flatcc_parse_buffer+0x70>
     270:	ldr	r0, [sp, #12]
     274:	ldr	r0, [r0, #128]	; 0x80
     278:	cmp	r0, #0
     27c:	bls	2a0 <flatcc_parse_buffer+0x70>
     280:	ldr	r0, [sp, #12]
     284:	movw	r1, #0
     288:	movt	r1, #0
     28c:	bl	0 <__flatcc_fb_print_error>
     290:	mvn	r1, #0
     294:	str	r1, [fp, #-4]
     298:	str	r0, [sp, #8]
     29c:	b	31c <flatcc_parse_buffer+0xec>
     2a0:	ldr	r0, [sp, #12]
     2a4:	add	r0, r0, #352	; 0x160
     2a8:	add	r0, r0, #172	; 0xac
     2ac:	ldr	r1, [sp, #12]
     2b0:	add	r1, r1, #352	; 0x160
     2b4:	movw	r2, #1
     2b8:	bl	0 <ptr_set_insert_item>
     2bc:	ldr	r1, [sp, #12]
     2c0:	ldr	r2, [fp, #-12]
     2c4:	ldr	lr, [sp, #16]
     2c8:	str	r0, [sp, #4]
     2cc:	mov	r0, r1
     2d0:	mov	r1, r2
     2d4:	mov	r2, lr
     2d8:	movw	r3, #0
     2dc:	bl	0 <__flatcc_fb_parse>
     2e0:	cmp	r0, #0
     2e4:	movw	r0, #1
     2e8:	str	r0, [sp]
     2ec:	bne	308 <flatcc_parse_buffer+0xd8>
     2f0:	ldr	r0, [sp, #12]
     2f4:	bl	0 <__flatcc_fb_build_schema>
     2f8:	cmp	r0, #0
     2fc:	movw	r0, #0
     300:	movne	r0, #1
     304:	str	r0, [sp]
     308:	ldr	r0, [sp]
     30c:	tst	r0, #1
     310:	mvn	r0, #0
     314:	moveq	r0, #0
     318:	str	r0, [fp, #-4]
     31c:	ldr	r0, [fp, #-4]
     320:	mov	sp, fp
     324:	pop	{fp, pc}

00000328 <flatcc_parse_file>:
     328:	push	{fp, lr}
     32c:	mov	fp, sp
     330:	sub	sp, sp, #104	; 0x68
     334:	str	r0, [fp, #-8]
     338:	str	r1, [fp, #-12]
     33c:	ldr	r0, [fp, #-8]
     340:	str	r0, [fp, #-16]
     344:	ldr	r0, [fp, #-12]
     348:	bl	0 <strlen>
     34c:	str	r0, [fp, #-24]	; 0xffffffe8
     350:	ldr	r0, [fp, #-16]
     354:	ldr	r0, [r0, #412]	; 0x19c
     358:	add	r0, r0, #32
     35c:	ldr	r1, [fp, #-16]
     360:	add	r1, r1, #352	; 0x160
     364:	movw	r2, #1
     368:	bl	0 <fb_schema_table_insert_item>
     36c:	movw	r1, #0
     370:	cmp	r0, r1
     374:	beq	384 <flatcc_parse_file+0x5c>
     378:	movw	r0, #0
     37c:	str	r0, [fp, #-4]
     380:	b	838 <flatcc_parse_file+0x510>
     384:	movw	r0, #0
     388:	str	r0, [fp, #-28]	; 0xffffffe4
     38c:	str	r0, [fp, #-32]	; 0xffffffe0
     390:	str	r0, [fp, #-36]	; 0xffffffdc
     394:	mvn	r1, #0
     398:	str	r1, [sp, #48]	; 0x30
     39c:	ldr	r2, [fp, #-16]
     3a0:	ldr	r2, [r2, #552]	; 0x228
     3a4:	cmp	r2, r0
     3a8:	movw	r0, #0
     3ac:	movne	r0, #1
     3b0:	eor	r0, r0, r1
     3b4:	and	r0, r0, #1
     3b8:	str	r0, [sp, #44]	; 0x2c
     3bc:	ldr	r0, [sp, #44]	; 0x2c
     3c0:	cmp	r0, #0
     3c4:	beq	458 <flatcc_parse_file+0x130>
     3c8:	ldr	r0, [fp, #-12]
     3cc:	ldr	r1, [fp, #-16]
     3d0:	ldr	r1, [r1, #128]	; 0x80
     3d4:	sub	r2, fp, #44	; 0x2c
     3d8:	bl	0 <__flatcc_fb_read_file>
     3dc:	str	r0, [fp, #-28]	; 0xffffffe4
     3e0:	movw	r1, #0
     3e4:	cmp	r0, r1
     3e8:	bne	444 <flatcc_parse_file+0x11c>
     3ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
     3f0:	ldr	r1, [fp, #-16]
     3f4:	ldr	r1, [r1, #412]	; 0x19c
     3f8:	ldr	r1, [r1, #56]	; 0x38
     3fc:	add	r0, r0, r1
     400:	ldr	r1, [fp, #-16]
     404:	ldr	r1, [r1, #128]	; 0x80
     408:	cmp	r0, r1
     40c:	bls	440 <flatcc_parse_file+0x118>
     410:	ldr	r0, [fp, #-16]
     414:	ldr	r0, [r0, #128]	; 0x80
     418:	cmp	r0, #0
     41c:	bls	440 <flatcc_parse_file+0x118>
     420:	ldr	r0, [fp, #-16]
     424:	movw	r1, #0
     428:	movt	r1, #0
     42c:	bl	0 <__flatcc_fb_print_error>
     430:	mvn	r1, #0
     434:	str	r1, [sp, #48]	; 0x30
     438:	str	r0, [sp, #40]	; 0x28
     43c:	b	7f0 <flatcc_parse_file+0x4c8>
     440:	b	454 <flatcc_parse_file+0x12c>
     444:	ldr	r0, [fp, #-12]
     448:	bl	0 <__flatcc_fb_copy_path>
     44c:	str	r0, [fp, #-32]	; 0xffffffe0
     450:	bl	844 <checkmem>
     454:	b	458 <flatcc_parse_file+0x130>
     458:	movw	r0, #0
     45c:	str	r0, [sp, #52]	; 0x34
     460:	ldr	r0, [fp, #-28]	; 0xffffffe4
     464:	movw	r1, #0
     468:	cmp	r0, r1
     46c:	movw	r0, #0
     470:	str	r0, [sp, #36]	; 0x24
     474:	bne	494 <flatcc_parse_file+0x16c>
     478:	ldr	r0, [sp, #52]	; 0x34
     47c:	ldr	r1, [fp, #-16]
     480:	ldr	r1, [r1, #336]	; 0x150
     484:	cmp	r0, r1
     488:	movw	r0, #0
     48c:	movlt	r0, #1
     490:	str	r0, [sp, #36]	; 0x24
     494:	ldr	r0, [sp, #36]	; 0x24
     498:	tst	r0, #1
     49c:	beq	584 <flatcc_parse_file+0x25c>
     4a0:	ldr	r0, [fp, #-16]
     4a4:	ldr	r0, [r0, #328]	; 0x148
     4a8:	ldr	r1, [sp, #52]	; 0x34
     4ac:	add	r0, r0, r1, lsl #2
     4b0:	ldr	r0, [r0]
     4b4:	str	r0, [fp, #-40]	; 0xffffffd8
     4b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     4bc:	bl	0 <strlen>
     4c0:	str	r0, [fp, #-20]	; 0xffffffec
     4c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     4c8:	ldr	r1, [fp, #-20]	; 0xffffffec
     4cc:	ldr	r2, [fp, #-12]
     4d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4d4:	movw	lr, #0
     4d8:	movt	lr, #0
     4dc:	str	lr, [sp]
     4e0:	movw	lr, #1
     4e4:	str	lr, [sp, #4]
     4e8:	bl	0 <__flatcc_fb_create_join_path_n>
     4ec:	str	r0, [fp, #-32]	; 0xffffffe0
     4f0:	bl	844 <checkmem>
     4f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     4f8:	ldr	r1, [fp, #-16]
     4fc:	ldr	r1, [r1, #128]	; 0x80
     500:	sub	r2, fp, #44	; 0x2c
     504:	bl	0 <__flatcc_fb_read_file>
     508:	str	r0, [fp, #-28]	; 0xffffffe4
     50c:	movw	r1, #0
     510:	cmp	r0, r1
     514:	bne	570 <flatcc_parse_file+0x248>
     518:	ldr	r0, [fp, #-32]	; 0xffffffe0
     51c:	bl	0 <free>
     520:	movw	r0, #0
     524:	str	r0, [fp, #-32]	; 0xffffffe0
     528:	ldr	r0, [fp, #-44]	; 0xffffffd4
     52c:	ldr	lr, [fp, #-16]
     530:	ldr	lr, [lr, #128]	; 0x80
     534:	cmp	r0, lr
     538:	bls	56c <flatcc_parse_file+0x244>
     53c:	ldr	r0, [fp, #-16]
     540:	ldr	r0, [r0, #128]	; 0x80
     544:	cmp	r0, #0
     548:	bls	56c <flatcc_parse_file+0x244>
     54c:	ldr	r0, [fp, #-16]
     550:	movw	r1, #0
     554:	movt	r1, #0
     558:	bl	0 <__flatcc_fb_print_error>
     55c:	mvn	r1, #0
     560:	str	r1, [sp, #48]	; 0x30
     564:	str	r0, [sp, #32]
     568:	b	7f0 <flatcc_parse_file+0x4c8>
     56c:	b	570 <flatcc_parse_file+0x248>
     570:	b	574 <flatcc_parse_file+0x24c>
     574:	ldr	r0, [sp, #52]	; 0x34
     578:	add	r0, r0, #1
     57c:	str	r0, [sp, #52]	; 0x34
     580:	b	460 <flatcc_parse_file+0x138>
     584:	ldr	r0, [fp, #-28]	; 0xffffffe4
     588:	movw	r1, #0
     58c:	cmp	r0, r1
     590:	bne	688 <flatcc_parse_file+0x360>
     594:	ldr	r0, [sp, #44]	; 0x2c
     598:	cmp	r0, #0
     59c:	bne	688 <flatcc_parse_file+0x360>
     5a0:	ldr	r0, [fp, #-16]
     5a4:	ldr	r0, [r0, #552]	; 0x228
     5a8:	str	r0, [fp, #-40]	; 0xffffffd8
     5ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
     5b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
     5b4:	str	r0, [sp, #28]
     5b8:	mov	r0, r1
     5bc:	bl	0 <strlen>
     5c0:	ldr	r1, [sp, #28]
     5c4:	str	r0, [sp, #24]
     5c8:	mov	r0, r1
     5cc:	ldr	r1, [sp, #24]
     5d0:	bl	0 <__flatcc_fb_find_basename>
     5d4:	str	r0, [fp, #-20]	; 0xffffffec
     5d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     5dc:	ldr	r1, [fp, #-20]	; 0xffffffec
     5e0:	ldr	r2, [fp, #-12]
     5e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5e8:	movw	lr, #0
     5ec:	movt	lr, #0
     5f0:	str	lr, [sp]
     5f4:	movw	lr, #1
     5f8:	str	lr, [sp, #4]
     5fc:	bl	0 <__flatcc_fb_create_join_path_n>
     600:	str	r0, [fp, #-32]	; 0xffffffe0
     604:	bl	844 <checkmem>
     608:	ldr	r0, [fp, #-32]	; 0xffffffe0
     60c:	ldr	r1, [fp, #-16]
     610:	ldr	r1, [r1, #128]	; 0x80
     614:	sub	r2, fp, #44	; 0x2c
     618:	bl	0 <__flatcc_fb_read_file>
     61c:	str	r0, [fp, #-28]	; 0xffffffe4
     620:	movw	r1, #0
     624:	cmp	r0, r1
     628:	bne	684 <flatcc_parse_file+0x35c>
     62c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     630:	bl	0 <free>
     634:	movw	r0, #0
     638:	str	r0, [fp, #-32]	; 0xffffffe0
     63c:	ldr	r0, [fp, #-44]	; 0xffffffd4
     640:	ldr	lr, [fp, #-16]
     644:	ldr	lr, [lr, #128]	; 0x80
     648:	cmp	r0, lr
     64c:	bls	680 <flatcc_parse_file+0x358>
     650:	ldr	r0, [fp, #-16]
     654:	ldr	r0, [r0, #128]	; 0x80
     658:	cmp	r0, #0
     65c:	bls	680 <flatcc_parse_file+0x358>
     660:	ldr	r0, [fp, #-16]
     664:	movw	r1, #0
     668:	movt	r1, #0
     66c:	bl	0 <__flatcc_fb_print_error>
     670:	mvn	r1, #0
     674:	str	r1, [sp, #48]	; 0x30
     678:	str	r0, [sp, #20]
     67c:	b	7f0 <flatcc_parse_file+0x4c8>
     680:	b	684 <flatcc_parse_file+0x35c>
     684:	b	688 <flatcc_parse_file+0x360>
     688:	ldr	r0, [fp, #-28]	; 0xffffffe4
     68c:	movw	r1, #0
     690:	cmp	r0, r1
     694:	bne	6b4 <flatcc_parse_file+0x38c>
     698:	ldr	r0, [fp, #-16]
     69c:	ldr	r2, [fp, #-12]
     6a0:	movw	r1, #0
     6a4:	movt	r1, #0
     6a8:	bl	0 <__flatcc_fb_print_error>
     6ac:	str	r0, [sp, #16]
     6b0:	b	7f0 <flatcc_parse_file+0x4c8>
     6b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
     6b8:	ldr	r1, [fp, #-16]
     6bc:	ldr	r1, [r1, #412]	; 0x19c
     6c0:	ldr	r2, [r1, #56]	; 0x38
     6c4:	add	r0, r2, r0
     6c8:	str	r0, [r1, #56]	; 0x38
     6cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     6d0:	ldr	r1, [fp, #-16]
     6d4:	str	r0, [r1, #548]	; 0x224
     6d8:	movw	r0, #0
     6dc:	str	r0, [fp, #-32]	; 0xffffffe0
     6e0:	ldr	r0, [fp, #-16]
     6e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     6e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
     6ec:	movw	r3, #1
     6f0:	bl	0 <__flatcc_fb_parse>
     6f4:	str	r0, [sp, #48]	; 0x30
     6f8:	cmp	r0, #0
     6fc:	bne	7e8 <flatcc_parse_file+0x4c0>
     700:	movw	r0, #0
     704:	str	r0, [fp, #-28]	; 0xffffffe4
     708:	ldr	r0, [fp, #-16]
     70c:	ldr	r0, [r0, #352]	; 0x160
     710:	str	r0, [fp, #-48]	; 0xffffffd0
     714:	ldr	r0, [fp, #-48]	; 0xffffffd0
     718:	movw	r1, #0
     71c:	cmp	r0, r1
     720:	beq	778 <flatcc_parse_file+0x450>
     724:	ldr	r0, [fp, #-48]	; 0xffffffd0
     728:	ldr	r0, [r0, #8]
     72c:	ldr	r1, [fp, #-48]	; 0xffffffd0
     730:	ldr	r1, [r1, #12]
     734:	bl	0 <__flatcc_fb_copy_path_n>
     738:	str	r0, [fp, #-36]	; 0xffffffdc
     73c:	bl	844 <checkmem>
     740:	ldr	r0, [fp, #-16]
     744:	ldr	r1, [fp, #-36]	; 0xffffffdc
     748:	bl	894 <__parse_include_file>
     74c:	cmp	r0, #0
     750:	beq	758 <flatcc_parse_file+0x430>
     754:	b	7f0 <flatcc_parse_file+0x4c8>
     758:	ldr	r0, [fp, #-36]	; 0xffffffdc
     75c:	bl	0 <free>
     760:	movw	r0, #0
     764:	str	r0, [fp, #-36]	; 0xffffffdc
     768:	ldr	r0, [fp, #-48]	; 0xffffffd0
     76c:	ldr	r0, [r0]
     770:	str	r0, [fp, #-48]	; 0xffffffd0
     774:	b	714 <flatcc_parse_file+0x3ec>
     778:	ldr	r0, [fp, #-16]
     77c:	add	r0, r0, #352	; 0x160
     780:	add	r0, r0, #172	; 0xac
     784:	ldr	r1, [fp, #-16]
     788:	add	r1, r1, #352	; 0x160
     78c:	movw	r2, #1
     790:	bl	0 <ptr_set_insert_item>
     794:	ldr	r1, [fp, #-16]
     798:	str	r0, [sp, #12]
     79c:	mov	r0, r1
     7a0:	bl	0 <__flatcc_fb_build_schema>
     7a4:	cmp	r0, #0
     7a8:	beq	7b0 <flatcc_parse_file+0x488>
     7ac:	b	7f0 <flatcc_parse_file+0x4c8>
     7b0:	ldr	r0, [fp, #-16]
     7b4:	ldr	r0, [r0, #240]	; 0xf0
     7b8:	cmp	r0, #0
     7bc:	beq	7e4 <flatcc_parse_file+0x4bc>
     7c0:	ldr	r0, [sp, #44]	; 0x2c
     7c4:	cmp	r0, #0
     7c8:	beq	7e4 <flatcc_parse_file+0x4bc>
     7cc:	ldr	r0, [fp, #-16]
     7d0:	bl	a6c <__flatcc_gen_depends_file>
     7d4:	cmp	r0, #0
     7d8:	beq	7e0 <flatcc_parse_file+0x4b8>
     7dc:	b	7f0 <flatcc_parse_file+0x4c8>
     7e0:	b	7e4 <flatcc_parse_file+0x4bc>
     7e4:	b	7e8 <flatcc_parse_file+0x4c0>
     7e8:	movw	r0, #0
     7ec:	str	r0, [sp, #48]	; 0x30
     7f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     7f4:	movw	r1, #0
     7f8:	cmp	r0, r1
     7fc:	beq	810 <flatcc_parse_file+0x4e8>
     800:	ldr	r0, [fp, #-32]	; 0xffffffe0
     804:	bl	0 <free>
     808:	movw	r0, #0
     80c:	str	r0, [fp, #-32]	; 0xffffffe0
     810:	ldr	r0, [fp, #-36]	; 0xffffffdc
     814:	movw	r1, #0
     818:	cmp	r0, r1
     81c:	beq	830 <flatcc_parse_file+0x508>
     820:	ldr	r0, [fp, #-36]	; 0xffffffdc
     824:	bl	0 <free>
     828:	movw	r0, #0
     82c:	str	r0, [fp, #-36]	; 0xffffffdc
     830:	ldr	r0, [sp, #48]	; 0x30
     834:	str	r0, [fp, #-4]
     838:	ldr	r0, [fp, #-4]
     83c:	mov	sp, fp
     840:	pop	{fp, pc}

00000844 <checkmem>:
     844:	push	{fp, lr}
     848:	mov	fp, sp
     84c:	sub	sp, sp, #8
     850:	str	r0, [sp, #4]
     854:	ldr	r0, [sp, #4]
     858:	movw	r1, #0
     85c:	cmp	r0, r1
     860:	bne	88c <checkmem+0x48>
     864:	movw	r0, #0
     868:	movt	r0, #0
     86c:	ldr	r0, [r0]
     870:	movw	r1, #0
     874:	movt	r1, #0
     878:	bl	0 <fprintf>
     87c:	movw	r1, #1
     880:	str	r0, [sp]
     884:	mov	r0, r1
     888:	bl	0 <exit>
     88c:	mov	sp, fp
     890:	pop	{fp, pc}

00000894 <__parse_include_file>:
     894:	push	{fp, lr}
     898:	mov	fp, sp
     89c:	sub	sp, sp, #40	; 0x28
     8a0:	str	r0, [fp, #-8]
     8a4:	str	r1, [fp, #-12]
     8a8:	movw	r0, #0
     8ac:	str	r0, [fp, #-16]
     8b0:	str	r0, [sp, #20]
     8b4:	ldr	r0, [fp, #-8]
     8b8:	add	r0, r0, #128	; 0x80
     8bc:	str	r0, [sp, #12]
     8c0:	ldr	r0, [fp, #-8]
     8c4:	ldr	r0, [r0, #412]	; 0x19c
     8c8:	str	r0, [sp, #16]
     8cc:	ldr	r0, [sp, #16]
     8d0:	ldr	r0, [r0, #52]	; 0x34
     8d4:	ldr	r1, [sp, #12]
     8d8:	ldr	r1, [r1, #4]
     8dc:	cmp	r0, r1
     8e0:	blt	914 <__parse_include_file+0x80>
     8e4:	ldr	r0, [sp, #12]
     8e8:	ldr	r0, [r0, #4]
     8ec:	cmp	r0, #0
     8f0:	ble	914 <__parse_include_file+0x80>
     8f4:	ldr	r0, [fp, #-8]
     8f8:	movw	r1, #0
     8fc:	movt	r1, #0
     900:	bl	0 <__flatcc_fb_print_error>
     904:	mvn	r1, #0
     908:	str	r1, [fp, #-4]
     90c:	str	r0, [sp, #4]
     910:	b	a60 <__parse_include_file+0x1cc>
     914:	ldr	r0, [sp, #16]
     918:	ldr	r0, [r0, #48]	; 0x30
     91c:	ldr	r1, [sp, #12]
     920:	ldr	r1, [r1, #8]
     924:	cmp	r0, r1
     928:	blt	95c <__parse_include_file+0xc8>
     92c:	ldr	r0, [sp, #12]
     930:	ldr	r0, [r0, #8]
     934:	cmp	r0, #0
     938:	ble	95c <__parse_include_file+0xc8>
     93c:	ldr	r0, [fp, #-8]
     940:	movw	r1, #0
     944:	movt	r1, #0
     948:	bl	0 <__flatcc_fb_print_error>
     94c:	mvn	r1, #0
     950:	str	r1, [fp, #-4]
     954:	str	r0, [sp]
     958:	b	a60 <__parse_include_file+0x1cc>
     95c:	ldr	r0, [sp, #12]
     960:	ldr	r1, [fp, #-12]
     964:	ldr	r2, [fp, #-8]
     968:	bl	10e4 <__flatcc_create_child_context>
     96c:	str	r0, [fp, #-16]
     970:	movw	r1, #0
     974:	cmp	r0, r1
     978:	bne	988 <__parse_include_file+0xf4>
     97c:	mvn	r0, #0
     980:	str	r0, [fp, #-4]
     984:	b	a60 <__parse_include_file+0x1cc>
     988:	ldr	r0, [fp, #-16]
     98c:	str	r0, [sp, #20]
     990:	ldr	r0, [sp, #16]
     994:	add	r0, r0, #32
     998:	ldr	r1, [sp, #20]
     99c:	add	r1, r1, #352	; 0x160
     9a0:	bl	0 <fb_schema_table_find_item>
     9a4:	str	r0, [sp, #8]
     9a8:	movw	r1, #0
     9ac:	cmp	r0, r1
     9b0:	beq	9d8 <__parse_include_file+0x144>
     9b4:	ldr	r0, [fp, #-8]
     9b8:	add	r0, r0, #352	; 0x160
     9bc:	ldr	r1, [sp, #8]
     9c0:	bl	1180 <add_visible_schema>
     9c4:	ldr	r0, [fp, #-16]
     9c8:	bl	1084 <flatcc_destroy_context>
     9cc:	movw	r0, #0
     9d0:	str	r0, [fp, #-4]
     9d4:	b	a60 <__parse_include_file+0x1cc>
     9d8:	ldr	r0, [fp, #-8]
     9dc:	ldr	r0, [r0]
     9e0:	ldr	r1, [sp, #20]
     9e4:	str	r0, [r1]
     9e8:	ldr	r0, [sp, #20]
     9ec:	ldr	r1, [fp, #-8]
     9f0:	str	r0, [r1]
     9f4:	ldr	r0, [fp, #-8]
     9f8:	ldr	r0, [r0, #548]	; 0x224
     9fc:	ldr	r1, [sp, #20]
     a00:	str	r0, [r1, #552]	; 0x228
     a04:	ldr	r0, [sp, #16]
     a08:	ldr	r1, [r0, #52]	; 0x34
     a0c:	add	r1, r1, #1
     a10:	str	r1, [r0, #52]	; 0x34
     a14:	ldr	r0, [sp, #16]
     a18:	ldr	r1, [r0, #48]	; 0x30
     a1c:	add	r1, r1, #1
     a20:	str	r1, [r0, #48]	; 0x30
     a24:	ldr	r0, [fp, #-16]
     a28:	ldr	r1, [fp, #-12]
     a2c:	bl	328 <flatcc_parse_file>
     a30:	cmp	r0, #0
     a34:	beq	a44 <__parse_include_file+0x1b0>
     a38:	mvn	r0, #0
     a3c:	str	r0, [fp, #-4]
     a40:	b	a60 <__parse_include_file+0x1cc>
     a44:	ldr	r0, [fp, #-8]
     a48:	add	r0, r0, #352	; 0x160
     a4c:	ldr	r1, [sp, #20]
     a50:	add	r1, r1, #352	; 0x160
     a54:	bl	1180 <add_visible_schema>
     a58:	movw	r0, #0
     a5c:	str	r0, [fp, #-4]
     a60:	ldr	r0, [fp, #-4]
     a64:	mov	sp, fp
     a68:	pop	{fp, pc}

00000a6c <__flatcc_gen_depends_file>:
     a6c:	push	{fp, lr}
     a70:	mov	fp, sp
     a74:	sub	sp, sp, #88	; 0x58
     a78:	str	r0, [fp, #-4]
     a7c:	movw	r0, #0
     a80:	str	r0, [fp, #-8]
     a84:	str	r0, [sp, #44]	; 0x2c
     a88:	str	r0, [sp, #40]	; 0x28
     a8c:	str	r0, [sp, #36]	; 0x24
     a90:	str	r0, [sp, #32]
     a94:	mvn	r1, #0
     a98:	str	r1, [sp, #28]
     a9c:	ldr	r1, [fp, #-4]
     aa0:	ldr	r1, [r1, #552]	; 0x228
     aa4:	cmp	r1, r0
     aa8:	bne	ab0 <__flatcc_gen_depends_file+0x44>
     aac:	b	ad0 <__flatcc_gen_depends_file+0x64>
     ab0:	movw	r0, #0
     ab4:	movt	r0, #0
     ab8:	movw	r1, #0
     abc:	movt	r1, #0
     ac0:	movw	r2, #220	; 0xdc
     ac4:	movw	r3, #0
     ac8:	movt	r3, #0
     acc:	bl	0 <__assert_fail>
     ad0:	ldr	r0, [fp, #-4]
     ad4:	ldr	r0, [r0, #344]	; 0x158
     ad8:	movw	r1, #0
     adc:	cmp	r0, r1
     ae0:	beq	af4 <__flatcc_gen_depends_file+0x88>
     ae4:	ldr	r0, [fp, #-4]
     ae8:	ldr	r0, [r0, #344]	; 0x158
     aec:	str	r0, [sp, #24]
     af0:	b	b04 <__flatcc_gen_depends_file+0x98>
     af4:	movw	r0, #0
     af8:	movt	r0, #0
     afc:	str	r0, [sp, #24]
     b00:	b	b04 <__flatcc_gen_depends_file+0x98>
     b04:	ldr	r0, [sp, #24]
     b08:	str	r0, [fp, #-12]
     b0c:	ldr	r0, [fp, #-4]
     b10:	ldr	r0, [r0, #512]	; 0x200
     b14:	str	r0, [fp, #-16]
     b18:	ldr	r0, [fp, #-4]
     b1c:	ldr	r0, [r0, #248]	; 0xf8
     b20:	str	r0, [fp, #-32]	; 0xffffffe0
     b24:	ldr	r0, [fp, #-4]
     b28:	ldr	r0, [r0, #244]	; 0xf4
     b2c:	movw	r1, #0
     b30:	cmp	r0, r1
     b34:	beq	b58 <__flatcc_gen_depends_file+0xec>
     b38:	ldr	r0, [fp, #-4]
     b3c:	ldr	r0, [r0, #244]	; 0xf4
     b40:	str	r0, [fp, #-20]	; 0xffffffec
     b44:	movw	r0, #0
     b48:	movt	r0, #0
     b4c:	str	r0, [fp, #-24]	; 0xffffffe8
     b50:	str	r0, [fp, #-28]	; 0xffffffe4
     b54:	b	b74 <__flatcc_gen_depends_file+0x108>
     b58:	ldr	r0, [fp, #-16]
     b5c:	str	r0, [fp, #-20]	; 0xffffffec
     b60:	ldr	r0, [fp, #-12]
     b64:	str	r0, [fp, #-24]	; 0xffffffe8
     b68:	movw	r0, #0
     b6c:	movt	r0, #0
     b70:	str	r0, [fp, #-28]	; 0xffffffe4
     b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
     b78:	movw	r1, #0
     b7c:	cmp	r0, r1
     b80:	beq	b98 <__flatcc_gen_depends_file+0x12c>
     b84:	movw	r0, #0
     b88:	movt	r0, #0
     b8c:	str	r0, [fp, #-36]	; 0xffffffdc
     b90:	str	r0, [fp, #-40]	; 0xffffffd8
     b94:	b	bd8 <__flatcc_gen_depends_file+0x16c>
     b98:	ldr	r0, [fp, #-4]
     b9c:	ldr	r0, [r0, #308]	; 0x134
     ba0:	cmp	r0, #0
     ba4:	movw	r0, #0
     ba8:	movne	r0, #1
     bac:	tst	r0, #1
     bb0:	movw	r0, #0
     bb4:	movt	r0, #0
     bb8:	movw	r1, #0
     bbc:	movt	r1, #0
     bc0:	movne	r0, r1
     bc4:	str	r0, [fp, #-36]	; 0xffffffdc
     bc8:	ldr	r0, [fp, #-16]
     bcc:	str	r0, [fp, #-32]	; 0xffffffe0
     bd0:	ldr	r0, [fp, #-12]
     bd4:	str	r0, [fp, #-40]	; 0xffffffd8
     bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     bdc:	ldr	r1, [fp, #-20]	; 0xffffffec
     be0:	ldr	r2, [fp, #-28]	; 0xffffffe4
     be4:	movw	r3, #1
     be8:	bl	0 <__flatcc_fb_create_join_path>
     bec:	str	r0, [sp, #44]	; 0x2c
     bf0:	bl	844 <checkmem>
     bf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     bf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
     bfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
     c00:	movw	r3, #1
     c04:	bl	0 <__flatcc_fb_create_join_path>
     c08:	str	r0, [sp, #36]	; 0x24
     c0c:	bl	844 <checkmem>
     c10:	ldr	r0, [sp, #36]	; 0x24
     c14:	bl	0 <__flatcc_fb_create_make_path>
     c18:	str	r0, [sp, #32]
     c1c:	bl	844 <checkmem>
     c20:	ldr	r0, [sp, #36]	; 0x24
     c24:	movw	r1, #0
     c28:	cmp	r0, r1
     c2c:	beq	c40 <__flatcc_gen_depends_file+0x1d4>
     c30:	ldr	r0, [sp, #36]	; 0x24
     c34:	bl	0 <free>
     c38:	movw	r0, #0
     c3c:	str	r0, [sp, #36]	; 0x24
     c40:	ldr	r0, [sp, #44]	; 0x2c
     c44:	movw	r1, #0
     c48:	movt	r1, #0
     c4c:	bl	0 <fopen>
     c50:	str	r0, [fp, #-8]
     c54:	ldr	r0, [fp, #-8]
     c58:	movw	r1, #0
     c5c:	cmp	r0, r1
     c60:	bne	c80 <__flatcc_gen_depends_file+0x214>
     c64:	ldr	r0, [fp, #-4]
     c68:	ldr	r2, [sp, #44]	; 0x2c
     c6c:	movw	r1, #0
     c70:	movt	r1, #0
     c74:	bl	0 <__flatcc_fb_print_error>
     c78:	str	r0, [sp, #20]
     c7c:	b	d2c <__flatcc_gen_depends_file+0x2c0>
     c80:	ldr	r0, [fp, #-8]
     c84:	ldr	r2, [sp, #32]
     c88:	movw	r1, #0
     c8c:	movt	r1, #0
     c90:	bl	0 <fprintf>
     c94:	ldr	r1, [fp, #-4]
     c98:	ldr	r1, [r1]
     c9c:	str	r1, [fp, #-4]
     ca0:	str	r0, [sp, #16]
     ca4:	ldr	r0, [fp, #-4]
     ca8:	movw	r1, #0
     cac:	cmp	r0, r1
     cb0:	beq	d10 <__flatcc_gen_depends_file+0x2a4>
     cb4:	ldr	r0, [fp, #-4]
     cb8:	ldr	r0, [r0, #548]	; 0x224
     cbc:	bl	0 <__flatcc_fb_create_make_path>
     cc0:	str	r0, [sp, #40]	; 0x28
     cc4:	bl	844 <checkmem>
     cc8:	ldr	r0, [fp, #-8]
     ccc:	ldr	r2, [sp, #40]	; 0x28
     cd0:	movw	r1, #0
     cd4:	movt	r1, #0
     cd8:	bl	0 <fprintf>
     cdc:	ldr	r1, [fp, #-4]
     ce0:	ldr	r1, [r1]
     ce4:	str	r1, [fp, #-4]
     ce8:	ldr	r1, [sp, #40]	; 0x28
     cec:	movw	r2, #0
     cf0:	cmp	r1, r2
     cf4:	str	r0, [sp, #12]
     cf8:	beq	d0c <__flatcc_gen_depends_file+0x2a0>
     cfc:	ldr	r0, [sp, #40]	; 0x28
     d00:	bl	0 <free>
     d04:	movw	r0, #0
     d08:	str	r0, [sp, #40]	; 0x28
     d0c:	b	ca4 <__flatcc_gen_depends_file+0x238>
     d10:	ldr	r0, [fp, #-8]
     d14:	movw	r1, #0
     d18:	movt	r1, #0
     d1c:	bl	0 <fprintf>
     d20:	movw	r1, #0
     d24:	str	r1, [sp, #28]
     d28:	str	r0, [sp, #8]
     d2c:	ldr	r0, [sp, #44]	; 0x2c
     d30:	movw	r1, #0
     d34:	cmp	r0, r1
     d38:	beq	d4c <__flatcc_gen_depends_file+0x2e0>
     d3c:	ldr	r0, [sp, #44]	; 0x2c
     d40:	bl	0 <free>
     d44:	movw	r0, #0
     d48:	str	r0, [sp, #44]	; 0x2c
     d4c:	ldr	r0, [sp, #36]	; 0x24
     d50:	movw	r1, #0
     d54:	cmp	r0, r1
     d58:	beq	d6c <__flatcc_gen_depends_file+0x300>
     d5c:	ldr	r0, [sp, #36]	; 0x24
     d60:	bl	0 <free>
     d64:	movw	r0, #0
     d68:	str	r0, [sp, #36]	; 0x24
     d6c:	ldr	r0, [sp, #32]
     d70:	movw	r1, #0
     d74:	cmp	r0, r1
     d78:	beq	d8c <__flatcc_gen_depends_file+0x320>
     d7c:	ldr	r0, [sp, #32]
     d80:	bl	0 <free>
     d84:	movw	r0, #0
     d88:	str	r0, [sp, #32]
     d8c:	ldr	r0, [sp, #40]	; 0x28
     d90:	movw	r1, #0
     d94:	cmp	r0, r1
     d98:	beq	dac <__flatcc_gen_depends_file+0x340>
     d9c:	ldr	r0, [sp, #40]	; 0x28
     da0:	bl	0 <free>
     da4:	movw	r0, #0
     da8:	str	r0, [sp, #40]	; 0x28
     dac:	ldr	r0, [fp, #-8]
     db0:	movw	r1, #0
     db4:	cmp	r0, r1
     db8:	beq	dc8 <__flatcc_gen_depends_file+0x35c>
     dbc:	ldr	r0, [fp, #-8]
     dc0:	bl	0 <fclose>
     dc4:	str	r0, [sp, #4]
     dc8:	ldr	r0, [sp, #28]
     dcc:	mov	sp, fp
     dd0:	pop	{fp, pc}

00000dd4 <flatcc_generate_binary_schema_to_buffer>:
     dd4:	push	{fp, lr}
     dd8:	mov	fp, sp
     ddc:	sub	sp, sp, #24
     de0:	str	r0, [fp, #-8]
     de4:	str	r1, [sp, #12]
     de8:	str	r2, [sp, #8]
     dec:	ldr	r0, [fp, #-8]
     df0:	str	r0, [sp, #4]
     df4:	ldr	r0, [sp, #4]
     df8:	add	r0, r0, #128	; 0x80
     dfc:	ldr	r1, [sp, #4]
     e00:	add	r1, r1, #352	; 0x160
     e04:	ldr	r2, [sp, #12]
     e08:	add	r3, sp, #8
     e0c:	bl	0 <__flatcc_fb_codegen_bfbs_to_buffer>
     e10:	movw	r1, #0
     e14:	cmp	r0, r1
     e18:	beq	e28 <flatcc_generate_binary_schema_to_buffer+0x54>
     e1c:	ldr	r0, [sp, #8]
     e20:	str	r0, [fp, #-4]
     e24:	b	e30 <flatcc_generate_binary_schema_to_buffer+0x5c>
     e28:	mvn	r0, #0
     e2c:	str	r0, [fp, #-4]
     e30:	ldr	r0, [fp, #-4]
     e34:	mov	sp, fp
     e38:	pop	{fp, pc}

00000e3c <flatcc_generate_binary_schema>:
     e3c:	push	{fp, lr}
     e40:	mov	fp, sp
     e44:	sub	sp, sp, #16
     e48:	str	r0, [fp, #-4]
     e4c:	str	r1, [sp, #8]
     e50:	ldr	r0, [fp, #-4]
     e54:	str	r0, [sp, #4]
     e58:	ldr	r0, [sp, #4]
     e5c:	add	r0, r0, #128	; 0x80
     e60:	ldr	r1, [sp, #4]
     e64:	add	r1, r1, #352	; 0x160
     e68:	ldr	r2, [sp, #8]
     e6c:	bl	0 <__flatcc_fb_codegen_bfbs_alloc_buffer>
     e70:	mov	sp, fp
     e74:	pop	{fp, pc}

00000e78 <flatcc_generate_files>:
     e78:	push	{r4, r5, fp, lr}
     e7c:	add	fp, sp, #8
     e80:	sub	sp, sp, #264	; 0x108
     e84:	str	r0, [fp, #-16]
     e88:	ldr	r0, [fp, #-16]
     e8c:	str	r0, [fp, #-20]	; 0xffffffec
     e90:	movw	r0, #0
     e94:	str	r0, [sp, #8]
     e98:	add	r1, sp, #12
     e9c:	str	r1, [fp, #-28]	; 0xffffffe4
     ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
     ea4:	cmp	r1, r0
     ea8:	beq	ebc <flatcc_generate_files+0x44>
     eac:	ldr	r0, [fp, #-20]	; 0xffffffec
     eb0:	ldr	r0, [r0, #108]	; 0x6c
     eb4:	cmp	r0, #0
     eb8:	beq	ec8 <flatcc_generate_files+0x50>
     ebc:	mvn	r0, #0
     ec0:	str	r0, [fp, #-12]
     ec4:	b	1078 <flatcc_generate_files+0x200>
     ec8:	movw	r0, #0
     ecc:	str	r0, [fp, #-24]	; 0xffffffe8
     ed0:	ldr	r0, [fp, #-20]	; 0xffffffec
     ed4:	movw	r1, #0
     ed8:	cmp	r0, r1
     edc:	beq	f04 <flatcc_generate_files+0x8c>
     ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ee4:	ldr	r1, [fp, #-20]	; 0xffffffec
     ee8:	str	r0, [r1, #4]
     eec:	ldr	r0, [fp, #-20]	; 0xffffffec
     ef0:	str	r0, [fp, #-24]	; 0xffffffe8
     ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ef8:	ldr	r0, [r0]
     efc:	str	r0, [fp, #-20]	; 0xffffffec
     f00:	b	ed0 <flatcc_generate_files+0x58>
     f04:	ldr	r0, [fp, #-16]
     f08:	str	r0, [fp, #-20]	; 0xffffffec
     f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f10:	ldr	r0, [r0, #308]	; 0x134
     f14:	cmp	r0, #0
     f18:	beq	f48 <flatcc_generate_files+0xd0>
     f1c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f20:	add	r0, r0, #128	; 0x80
     f24:	ldr	r1, [fp, #-20]	; 0xffffffec
     f28:	add	r1, r1, #352	; 0x160
     f2c:	bl	0 <__flatcc_fb_codegen_bfbs_to_file>
     f30:	cmp	r0, #0
     f34:	beq	f44 <flatcc_generate_files+0xcc>
     f38:	mvn	r0, #0
     f3c:	str	r0, [fp, #-12]
     f40:	b	1078 <flatcc_generate_files+0x200>
     f44:	b	f48 <flatcc_generate_files+0xd0>
     f48:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f4c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f50:	add	r1, r1, #128	; 0x80
     f54:	bl	0 <__flatcc_fb_init_output_c>
     f58:	cmp	r0, #0
     f5c:	beq	f6c <flatcc_generate_files+0xf4>
     f60:	mvn	r0, #0
     f64:	str	r0, [fp, #-12]
     f68:	b	1078 <flatcc_generate_files+0x200>
     f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f70:	ldr	r0, [r0, #256]	; 0x100
     f74:	cmp	r0, #0
     f78:	bne	f94 <flatcc_generate_files+0x11c>
     f7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     f80:	bl	0 <__flatcc_fb_codegen_common_c>
     f84:	str	r0, [sp, #8]
     f88:	cmp	r0, #0
     f8c:	beq	f94 <flatcc_generate_files+0x11c>
     f90:	b	1068 <flatcc_generate_files+0x1f0>
     f94:	ldr	r0, [fp, #-20]	; 0xffffffec
     f98:	ldr	r0, [r0, #120]	; 0x78
     f9c:	cmp	r0, #0
     fa0:	bne	fa8 <flatcc_generate_files+0x130>
     fa4:	b	1068 <flatcc_generate_files+0x1f0>
     fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
     fac:	ldr	r0, [r0, #300]	; 0x12c
     fb0:	cmp	r0, #0
     fb4:	bne	fd0 <flatcc_generate_files+0x158>
     fb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
     fc0:	add	r1, r1, #352	; 0x160
     fc4:	bl	0 <__flatcc_fb_codegen_c>
     fc8:	str	r0, [sp, #8]
     fcc:	b	1068 <flatcc_generate_files+0x1f0>
     fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     fd4:	str	r0, [fp, #-20]	; 0xffffffec
     fd8:	ldr	r0, [sp, #8]
     fdc:	cmp	r0, #0
     fe0:	movw	r0, #0
     fe4:	str	r0, [sp, #4]
     fe8:	bne	1004 <flatcc_generate_files+0x18c>
     fec:	ldr	r0, [fp, #-20]	; 0xffffffec
     ff0:	movw	r1, #0
     ff4:	cmp	r0, r1
     ff8:	movw	r0, #0
     ffc:	movne	r0, #1
    1000:	str	r0, [sp, #4]
    1004:	ldr	r0, [sp, #4]
    1008:	tst	r0, #1
    100c:	beq	1064 <flatcc_generate_files+0x1ec>
    1010:	ldr	r0, [fp, #-20]	; 0xffffffec
    1014:	ldr	r0, [r0, #108]	; 0x6c
    1018:	cmp	r0, #0
    101c:	movw	r0, #1
    1020:	str	r0, [sp]
    1024:	bne	1048 <flatcc_generate_files+0x1d0>
    1028:	ldr	r0, [fp, #-28]	; 0xffffffe4
    102c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1030:	add	r1, r1, #352	; 0x160
    1034:	bl	0 <__flatcc_fb_codegen_c>
    1038:	cmp	r0, #0
    103c:	movw	r0, #0
    1040:	movne	r0, #1
    1044:	str	r0, [sp]
    1048:	ldr	r0, [sp]
    104c:	and	r0, r0, #1
    1050:	str	r0, [sp, #8]
    1054:	ldr	r0, [fp, #-20]	; 0xffffffec
    1058:	ldr	r0, [r0, #4]
    105c:	str	r0, [fp, #-20]	; 0xffffffec
    1060:	b	fd8 <flatcc_generate_files+0x160>
    1064:	b	1068 <flatcc_generate_files+0x1f0>
    1068:	ldr	r0, [fp, #-28]	; 0xffffffe4
    106c:	bl	0 <__flatcc_fb_end_output_c>
    1070:	ldr	r0, [sp, #8]
    1074:	str	r0, [fp, #-12]
    1078:	ldr	r0, [fp, #-12]
    107c:	sub	sp, fp, #8
    1080:	pop	{r4, r5, fp, pc}

00001084 <flatcc_destroy_context>:
    1084:	push	{fp, lr}
    1088:	mov	fp, sp
    108c:	sub	sp, sp, #16
    1090:	str	r0, [fp, #-4]
    1094:	ldr	r0, [fp, #-4]
    1098:	str	r0, [sp, #8]
    109c:	movw	r0, #0
    10a0:	str	r0, [sp, #4]
    10a4:	ldr	r0, [sp, #8]
    10a8:	movw	r1, #0
    10ac:	cmp	r0, r1
    10b0:	beq	10dc <flatcc_destroy_context+0x58>
    10b4:	ldr	r0, [sp, #8]
    10b8:	ldr	r0, [r0]
    10bc:	str	r0, [sp, #4]
    10c0:	ldr	r0, [sp, #8]
    10c4:	bl	0 <__flatcc_fb_clear_parser>
    10c8:	ldr	r0, [sp, #8]
    10cc:	bl	0 <free>
    10d0:	ldr	r0, [sp, #4]
    10d4:	str	r0, [sp, #8]
    10d8:	b	10a4 <flatcc_destroy_context+0x20>
    10dc:	mov	sp, fp
    10e0:	pop	{fp, pc}

000010e4 <__flatcc_create_child_context>:
    10e4:	push	{fp, lr}
    10e8:	mov	fp, sp
    10ec:	sub	sp, sp, #32
    10f0:	str	r0, [fp, #-8]
    10f4:	str	r1, [fp, #-12]
    10f8:	str	r2, [sp, #16]
    10fc:	movw	r0, #560	; 0x230
    1100:	bl	0 <malloc>
    1104:	str	r0, [sp, #12]
    1108:	movw	r1, #0
    110c:	cmp	r0, r1
    1110:	bne	1120 <__flatcc_create_child_context+0x3c>
    1114:	movw	r0, #0
    1118:	str	r0, [fp, #-4]
    111c:	b	1174 <__flatcc_create_child_context+0x90>
    1120:	ldr	r0, [sp, #12]
    1124:	ldr	r1, [fp, #-8]
    1128:	ldr	r2, [fp, #-12]
    112c:	ldr	r3, [sp, #16]
    1130:	ldr	r3, [r3, #8]
    1134:	ldr	ip, [sp, #16]
    1138:	ldr	ip, [ip, #12]
    113c:	ldr	lr, [sp, #16]
    1140:	ldr	lr, [lr, #412]	; 0x19c
    1144:	str	ip, [sp]
    1148:	str	lr, [sp, #4]
    114c:	bl	0 <__flatcc_fb_init_parser>
    1150:	cmp	r0, #0
    1154:	beq	116c <__flatcc_create_child_context+0x88>
    1158:	ldr	r0, [sp, #12]
    115c:	bl	0 <free>
    1160:	movw	r0, #0
    1164:	str	r0, [fp, #-4]
    1168:	b	1174 <__flatcc_create_child_context+0x90>
    116c:	ldr	r0, [sp, #12]
    1170:	str	r0, [fp, #-4]
    1174:	ldr	r0, [fp, #-4]
    1178:	mov	sp, fp
    117c:	pop	{fp, pc}

00001180 <add_visible_schema>:
    1180:	push	{fp, lr}
    1184:	mov	fp, sp
    1188:	sub	sp, sp, #16
    118c:	str	r0, [fp, #-4]
    1190:	str	r1, [sp, #8]
    1194:	ldr	r0, [sp, #8]
    1198:	add	r0, r0, #172	; 0xac
    119c:	ldr	r1, [fp, #-4]
    11a0:	movw	r2, #0
    11a4:	movt	r2, #0
    11a8:	str	r1, [sp, #4]
    11ac:	mov	r1, r2
    11b0:	ldr	r2, [sp, #4]
    11b4:	bl	0 <ptr_set_visit>
    11b8:	mov	sp, fp
    11bc:	pop	{fp, pc}

000011c0 <visit_dep>:
    11c0:	push	{fp, lr}
    11c4:	mov	fp, sp
    11c8:	sub	sp, sp, #24
    11cc:	str	r0, [fp, #-4]
    11d0:	str	r1, [fp, #-8]
    11d4:	ldr	r0, [fp, #-4]
    11d8:	str	r0, [sp, #12]
    11dc:	ldr	r0, [fp, #-8]
    11e0:	str	r0, [sp, #8]
    11e4:	ldr	r0, [sp, #12]
    11e8:	add	r0, r0, #172	; 0xac
    11ec:	ldr	r1, [sp, #8]
    11f0:	movw	r2, #1
    11f4:	bl	0 <ptr_set_insert_item>
    11f8:	str	r0, [sp, #4]
    11fc:	mov	sp, fp
    1200:	pop	{fp, pc}
