
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/expat/xmlparse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_XML_ParserCreate>:
       0:	mov	r1, #0
       4:	mov	r2, #0
       8:	mov	r3, #0
       c:	b	40 <parserCreate>

00000010 <coda_XML_ParserCreate_MM>:
      10:	mov	r3, #0
      14:	b	40 <parserCreate>

00000018 <coda_XML_ParserCreateNS>:
      18:	push	{fp, lr}
      1c:	mov	fp, sp
      20:	sub	sp, sp, #8
      24:	strb	r1, [fp, #-2]
      28:	sub	r2, fp, #2
      2c:	mov	r1, #0
      30:	mov	r3, #0
      34:	bl	40 <parserCreate>
      38:	mov	sp, fp
      3c:	pop	{fp, pc}

00000040 <parserCreate>:
      40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
      44:	add	fp, sp, #24
      48:	mov	r7, r3
      4c:	mov	r8, r2
      50:	mov	r9, r0
      54:	cmp	r1, #0
      58:	beq	94 <parserCreate+0x54>
      5c:	mov	r5, r1
      60:	ldr	r1, [r1]
      64:	mov	r0, #520	; 0x208
      68:	blx	r1
      6c:	cmp	r0, #0
      70:	beq	2d4 <parserCreate+0x294>
      74:	ldr	r1, [r5]
      78:	mov	r6, r0
      7c:	mov	r4, r0
      80:	str	r1, [r6, #12]!
      84:	ldr	r0, [r5, #4]
      88:	str	r0, [r6, #4]
      8c:	ldr	r0, [r5, #8]
      90:	b	cc <parserCreate+0x8c>
      94:	mov	r0, #520	; 0x208
      98:	bl	0 <malloc>
      9c:	cmp	r0, #0
      a0:	beq	2d4 <parserCreate+0x294>
      a4:	movw	r1, #0
      a8:	movw	r2, #0
      ac:	mov	r4, r0
      b0:	mov	r6, r0
      b4:	movw	r0, #0
      b8:	movt	r1, #0
      bc:	movt	r0, #0
      c0:	movt	r2, #0
      c4:	str	r1, [r6, #12]!
      c8:	str	r2, [r6, #4]
      cc:	str	r0, [r6, #8]
      d0:	mov	r0, #16
      d4:	mov	r5, #0
      d8:	str	r0, [r4, #388]	; 0x184
      dc:	mov	r0, #256	; 0x100
      e0:	str	r5, [r4, #32]
      e4:	str	r5, [r4, #8]
      e8:	blx	r1
      ec:	cmp	r0, #0
      f0:	str	r0, [r4, #400]	; 0x190
      f4:	beq	300 <parserCreate+0x2c0>
      f8:	ldr	r1, [r6]
      fc:	mov	r0, #1024	; 0x400
     100:	blx	r1
     104:	cmp	r0, #0
     108:	str	r0, [r4, #52]	; 0x34
     10c:	beq	12c <parserCreate+0xec>
     110:	add	r0, r0, #1024	; 0x400
     114:	add	r5, r4, #12
     118:	cmp	r7, #0
     11c:	str	r0, [r4, #56]	; 0x38
     120:	beq	148 <parserCreate+0x108>
     124:	str	r7, [r4, #364]	; 0x16c
     128:	b	218 <parserCreate+0x1d8>
     12c:	ldr	r1, [r4, #20]
     130:	ldr	r0, [r4, #400]	; 0x190
     134:	blx	r1
     138:	ldr	r1, [r4, #20]
     13c:	mov	r0, r4
     140:	blx	r1
     144:	b	2d4 <parserCreate+0x294>
     148:	ldr	r1, [r6]
     14c:	mov	r0, #188	; 0xbc
     150:	blx	r1
     154:	cmp	r0, #0
     158:	beq	2e0 <parserCreate+0x2a0>
     15c:	vmov.i32	q8, #0	; 0x00000000
     160:	mov	r1, #0
     164:	add	r2, r0, #80	; 0x50
     168:	str	r1, [r0, #96]	; 0x60
     16c:	str	r5, [r0, #100]	; 0x64
     170:	str	r1, [r0, #120]	; 0x78
     174:	str	r5, [r0, #124]	; 0x7c
     178:	strb	r1, [r0, #4]
     17c:	str	r1, [r0, #32]
     180:	str	r1, [r0, #28]
     184:	strb	r1, [r0, #24]
     188:	str	r1, [r0]
     18c:	strb	r1, [r0, #44]	; 0x2c
     190:	str	r5, [r0, #36]	; 0x24
     194:	str	r1, [r0, #8]
     198:	str	r1, [r0, #12]
     19c:	str	r5, [r0, #16]
     1a0:	str	r1, [r0, #20]
     1a4:	vst1.32	{d16-d17}, [r2]
     1a8:	add	r2, r0, #104	; 0x68
     1ac:	vst1.32	{d16-d17}, [r2]
     1b0:	add	r2, r0, #164	; 0xa4
     1b4:	strb	r1, [r0, #64]	; 0x40
     1b8:	str	r1, [r0, #40]	; 0x28
     1bc:	str	r1, [r0, #48]	; 0x30
     1c0:	str	r1, [r0, #52]	; 0x34
     1c4:	str	r5, [r0, #56]	; 0x38
     1c8:	str	r1, [r0, #60]	; 0x3c
     1cc:	str	r1, [r0, #68]	; 0x44
     1d0:	str	r1, [r0, #72]	; 0x48
     1d4:	str	r5, [r0, #76]	; 0x4c
     1d8:	strb	r1, [r0, #136]	; 0x88
     1dc:	strb	r1, [r0, #131]	; 0x83
     1e0:	str	r1, [r0, #132]	; 0x84
     1e4:	str	r1, [r0, #140]	; 0x8c
     1e8:	str	r1, [r0, #144]	; 0x90
     1ec:	str	r5, [r0, #148]	; 0x94
     1f0:	str	r1, [r0, #152]	; 0x98
     1f4:	str	r1, [r0, #156]	; 0x9c
     1f8:	strb	r1, [r0, #160]	; 0xa0
     1fc:	str	r1, [r0, #180]	; 0xb4
     200:	str	r1, [r0, #184]	; 0xb8
     204:	vst1.32	{d16-d17}, [r2]
     208:	strb	r1, [r0, #130]	; 0x82
     20c:	mov	r1, #1
     210:	strh	r1, [r0, #128]	; 0x80
     214:	str	r0, [r4, #364]	; 0x16c
     218:	vmov.i32	q8, #0	; 0x00000000
     21c:	mov	r0, #0
     220:	mov	r1, #33	; 0x21
     224:	str	r0, [r4, #376]	; 0x178
     228:	str	r0, [r4, #384]	; 0x180
     22c:	str	r0, [r4, #312]	; 0x138
     230:	strb	r1, [r4, #488]	; 0x1e8
     234:	str	r0, [r4, #256]	; 0x100
     238:	str	r0, [r4, #132]	; 0x84
     23c:	strb	r0, [r4, #412]	; 0x19c
     240:	str	r0, [r4, #404]	; 0x194
     244:	str	r0, [r4, #408]	; 0x198
     248:	strh	r0, [r4, #244]	; 0xf4
     24c:	str	r0, [r4, #448]	; 0x1c0
     250:	str	r5, [r4, #452]	; 0x1c4
     254:	str	r0, [r4, #472]	; 0x1d8
     258:	str	r5, [r4, #476]	; 0x1dc
     25c:	str	r0, [r4, #480]	; 0x1e0
     260:	str	r0, [r4, #484]	; 0x1e4
     264:	add	r0, r4, #432	; 0x1b0
     268:	mov	r1, r9
     26c:	vst1.32	{d16-d17}, [r0]
     270:	add	r0, r4, #456	; 0x1c8
     274:	vst1.32	{d16-d17}, [r0]
     278:	mov	r0, r4
     27c:	bl	768 <parserInit>
     280:	cmp	r9, #0
     284:	beq	294 <parserCreate+0x254>
     288:	ldr	r0, [r4, #240]	; 0xf0
     28c:	cmp	r0, #0
     290:	beq	2cc <parserCreate+0x28c>
     294:	cmp	r8, #0
     298:	beq	2bc <parserCreate+0x27c>
     29c:	mov	r0, #1
     2a0:	strb	r0, [r4, #244]	; 0xf4
     2a4:	bl	0 <coda_XmlGetUtf8InternalEncodingNS>
     2a8:	str	r0, [r4, #236]	; 0xec
     2ac:	ldrb	r0, [r8]
     2b0:	strb	r0, [r4, #488]	; 0x1e8
     2b4:	mov	r0, r4
     2b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     2bc:	bl	0 <coda_XmlGetUtf8InternalEncoding>
     2c0:	str	r0, [r4, #236]	; 0xec
     2c4:	mov	r0, r4
     2c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     2cc:	mov	r0, r4
     2d0:	bl	1880 <coda_XML_ParserFree>
     2d4:	mov	r5, #0
     2d8:	mov	r0, r5
     2dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     2e0:	mov	r5, #0
     2e4:	str	r5, [r4, #364]	; 0x16c
     2e8:	ldr	r1, [r4, #20]
     2ec:	ldr	r0, [r4, #52]	; 0x34
     2f0:	blx	r1
     2f4:	ldr	r1, [r4, #20]
     2f8:	ldr	r0, [r4, #400]	; 0x190
     2fc:	blx	r1
     300:	ldr	r1, [r4, #20]
     304:	mov	r0, r4
     308:	blx	r1
     30c:	mov	r0, r5
     310:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00000314 <coda_XML_ParserReset>:
     314:	push	{r4, r5, r6, r7, fp, lr}
     318:	add	fp, sp, #16
     31c:	mov	r5, r1
     320:	ldr	r1, [r0, #492]	; 0x1ec
     324:	mov	r4, r0
     328:	mov	r0, #0
     32c:	cmp	r1, #0
     330:	popne	{r4, r5, r6, r7, fp, pc}
     334:	ldr	r7, [r4, #372]	; 0x174
     338:	cmp	r7, #0
     33c:	beq	39c <coda_XML_ParserReset+0x88>
     340:	ldr	r2, [r4, #376]	; 0x178
     344:	mov	r1, #0
     348:	b	35c <coda_XML_ParserReset+0x48>
     34c:	cmp	r7, #0
     350:	mov	r2, r0
     354:	str	r1, [r0, #44]	; 0x2c
     358:	beq	398 <coda_XML_ParserReset+0x84>
     35c:	mov	r0, r7
     360:	ldr	r7, [r7]
     364:	ldr	r3, [r0, #44]	; 0x2c
     368:	str	r2, [r0]
     36c:	cmp	r3, #0
     370:	beq	34c <coda_XML_ParserReset+0x38>
     374:	ldr	r6, [r4, #384]	; 0x180
     378:	mov	r2, r3
     37c:	ldr	r3, [r3, #4]
     380:	str	r6, [r2, #4]
     384:	mov	r6, r2
     388:	cmp	r3, #0
     38c:	bne	378 <coda_XML_ParserReset+0x64>
     390:	str	r2, [r4, #384]	; 0x180
     394:	b	34c <coda_XML_ParserReset+0x38>
     398:	str	r0, [r4, #376]	; 0x178
     39c:	ldr	r0, [r4, #308]	; 0x134
     3a0:	cmp	r0, #0
     3a4:	beq	3c8 <coda_XML_ParserReset+0xb4>
     3a8:	ldr	r2, [r4, #312]	; 0x138
     3ac:	mov	r1, r0
     3b0:	ldr	r0, [r0, #8]
     3b4:	str	r2, [r1, #8]
     3b8:	mov	r2, r1
     3bc:	cmp	r0, #0
     3c0:	bne	3ac <coda_XML_ParserReset+0x98>
     3c4:	str	r1, [r4, #312]	; 0x138
     3c8:	ldr	r0, [r4, #380]	; 0x17c
     3cc:	cmp	r0, #0
     3d0:	beq	3f4 <coda_XML_ParserReset+0xe0>
     3d4:	ldr	r2, [r4, #384]	; 0x180
     3d8:	mov	r1, r0
     3dc:	ldr	r0, [r0, #4]
     3e0:	str	r2, [r1, #4]
     3e4:	mov	r2, r1
     3e8:	cmp	r0, #0
     3ec:	bne	3d8 <coda_XML_ParserReset+0xc4>
     3f0:	str	r1, [r4, #384]	; 0x180
     3f4:	ldr	r1, [r4, #20]
     3f8:	ldr	r0, [r4, #248]	; 0xf8
     3fc:	blx	r1
     400:	ldr	r1, [r4, #260]	; 0x104
     404:	cmp	r1, #0
     408:	beq	414 <coda_XML_ParserReset+0x100>
     40c:	ldr	r0, [r4, #252]	; 0xfc
     410:	blx	r1
     414:	ldr	r0, [r4, #436]	; 0x1b4
     418:	cmp	r0, #0
     41c:	beq	44c <coda_XML_ParserReset+0x138>
     420:	ldr	r1, [r4, #432]	; 0x1b0
     424:	cmp	r1, #0
     428:	beq	454 <coda_XML_ParserReset+0x140>
     42c:	mov	r2, r1
     430:	ldr	r1, [r1]
     434:	str	r0, [r2]
     438:	mov	r0, r2
     43c:	cmp	r1, #0
     440:	bne	42c <coda_XML_ParserReset+0x118>
     444:	str	r2, [r4, #436]	; 0x1b4
     448:	b	454 <coda_XML_ParserReset+0x140>
     44c:	ldr	r0, [r4, #432]	; 0x1b0
     450:	str	r0, [r4, #436]	; 0x1b4
     454:	mov	r0, #0
     458:	str	r0, [r4, #432]	; 0x1b0
     45c:	str	r0, [r4, #440]	; 0x1b8
     460:	str	r0, [r4, #444]	; 0x1bc
     464:	str	r0, [r4, #448]	; 0x1c0
     468:	ldr	r0, [r4, #460]	; 0x1cc
     46c:	cmp	r0, #0
     470:	beq	4a0 <coda_XML_ParserReset+0x18c>
     474:	ldr	r1, [r4, #456]	; 0x1c8
     478:	cmp	r1, #0
     47c:	beq	4a8 <coda_XML_ParserReset+0x194>
     480:	mov	r2, r1
     484:	ldr	r1, [r1]
     488:	str	r0, [r2]
     48c:	mov	r0, r2
     490:	cmp	r1, #0
     494:	bne	480 <coda_XML_ParserReset+0x16c>
     498:	str	r2, [r4, #460]	; 0x1cc
     49c:	b	4a8 <coda_XML_ParserReset+0x194>
     4a0:	ldr	r0, [r4, #456]	; 0x1c8
     4a4:	str	r0, [r4, #460]	; 0x1cc
     4a8:	mov	r0, #0
     4ac:	mov	r1, r5
     4b0:	str	r0, [r4, #456]	; 0x1c8
     4b4:	str	r0, [r4, #464]	; 0x1d0
     4b8:	str	r0, [r4, #468]	; 0x1d4
     4bc:	str	r0, [r4, #472]	; 0x1d8
     4c0:	mov	r0, r4
     4c4:	bl	768 <parserInit>
     4c8:	ldr	r5, [r4, #364]	; 0x16c
     4cc:	ldr	r0, [r5, #28]
     4d0:	ldr	r6, [r5, #20]
     4d4:	lsl	r7, r0, #2
     4d8:	cmp	r7, #0
     4dc:	bne	4f0 <coda_XML_ParserReset+0x1dc>
     4e0:	b	520 <coda_XML_ParserReset+0x20c>
     4e4:	sub	r7, r7, #4
     4e8:	cmp	r7, #0
     4ec:	beq	520 <coda_XML_ParserReset+0x20c>
     4f0:	ldr	r0, [r6], #4
     4f4:	cmp	r0, #0
     4f8:	beq	4e4 <coda_XML_ParserReset+0x1d0>
     4fc:	ldr	r1, [r0, #16]
     500:	cmp	r1, #0
     504:	beq	4e4 <coda_XML_ParserReset+0x1d0>
     508:	ldr	r0, [r0, #20]
     50c:	ldr	r1, [r4, #20]
     510:	blx	r1
     514:	sub	r7, r7, #4
     518:	cmp	r7, #0
     51c:	bne	4f0 <coda_XML_ParserReset+0x1dc>
     520:	ldr	r0, [r5, #8]
     524:	cmp	r0, #0
     528:	beq	560 <coda_XML_ParserReset+0x24c>
     52c:	mov	r6, #0
     530:	mov	r7, #0
     534:	ldr	r0, [r5]
     538:	ldr	r1, [r5, #16]
     53c:	ldr	r0, [r0, r7, lsl #2]
     540:	ldr	r1, [r1, #8]
     544:	blx	r1
     548:	ldr	r0, [r5]
     54c:	str	r6, [r0, r7, lsl #2]
     550:	add	r7, r7, #1
     554:	ldr	r0, [r5, #8]
     558:	cmp	r7, r0
     55c:	bcc	534 <coda_XML_ParserReset+0x220>
     560:	mov	r6, #0
     564:	strb	r6, [r5, #131]	; 0x83
     568:	str	r6, [r5, #12]
     56c:	ldr	r0, [r5, #140]	; 0x8c
     570:	cmp	r0, #0
     574:	beq	5a8 <coda_XML_ParserReset+0x294>
     578:	mov	r7, #0
     57c:	ldr	r0, [r5, #132]	; 0x84
     580:	ldr	r1, [r5, #148]	; 0x94
     584:	ldr	r0, [r0, r7, lsl #2]
     588:	ldr	r1, [r1, #8]
     58c:	blx	r1
     590:	ldr	r0, [r5, #132]	; 0x84
     594:	str	r6, [r0, r7, lsl #2]
     598:	add	r7, r7, #1
     59c:	ldr	r0, [r5, #140]	; 0x8c
     5a0:	cmp	r7, r0
     5a4:	bcc	57c <coda_XML_ParserReset+0x268>
     5a8:	mov	r6, #0
     5ac:	str	r6, [r5, #144]	; 0x90
     5b0:	ldr	r0, [r5, #28]
     5b4:	cmp	r0, #0
     5b8:	beq	5ec <coda_XML_ParserReset+0x2d8>
     5bc:	mov	r7, #0
     5c0:	ldr	r0, [r5, #20]
     5c4:	ldr	r1, [r5, #36]	; 0x24
     5c8:	ldr	r0, [r0, r7, lsl #2]
     5cc:	ldr	r1, [r1, #8]
     5d0:	blx	r1
     5d4:	ldr	r0, [r5, #20]
     5d8:	str	r6, [r0, r7, lsl #2]
     5dc:	add	r7, r7, #1
     5e0:	ldr	r0, [r5, #28]
     5e4:	cmp	r7, r0
     5e8:	bcc	5c0 <coda_XML_ParserReset+0x2ac>
     5ec:	mov	r6, #0
     5f0:	str	r6, [r5, #32]
     5f4:	ldr	r0, [r5, #48]	; 0x30
     5f8:	cmp	r0, #0
     5fc:	beq	630 <coda_XML_ParserReset+0x31c>
     600:	mov	r7, #0
     604:	ldr	r0, [r5, #40]	; 0x28
     608:	ldr	r1, [r5, #56]	; 0x38
     60c:	ldr	r0, [r0, r7, lsl #2]
     610:	ldr	r1, [r1, #8]
     614:	blx	r1
     618:	ldr	r0, [r5, #40]	; 0x28
     61c:	str	r6, [r0, r7, lsl #2]
     620:	add	r7, r7, #1
     624:	ldr	r0, [r5, #48]	; 0x30
     628:	cmp	r7, r0
     62c:	bcc	604 <coda_XML_ParserReset+0x2f0>
     630:	mov	r6, #0
     634:	str	r6, [r5, #52]	; 0x34
     638:	ldr	r0, [r5, #68]	; 0x44
     63c:	cmp	r0, #0
     640:	beq	674 <coda_XML_ParserReset+0x360>
     644:	mov	r7, #0
     648:	ldr	r0, [r5, #60]	; 0x3c
     64c:	ldr	r1, [r5, #76]	; 0x4c
     650:	ldr	r0, [r0, r7, lsl #2]
     654:	ldr	r1, [r1, #8]
     658:	blx	r1
     65c:	ldr	r0, [r5, #60]	; 0x3c
     660:	str	r6, [r0, r7, lsl #2]
     664:	add	r7, r7, #1
     668:	ldr	r0, [r5, #68]	; 0x44
     66c:	cmp	r7, r0
     670:	bcc	648 <coda_XML_ParserReset+0x334>
     674:	mov	r0, #0
     678:	str	r0, [r5, #72]	; 0x48
     67c:	ldr	r0, [r5, #84]	; 0x54
     680:	cmp	r0, #0
     684:	beq	6b4 <coda_XML_ParserReset+0x3a0>
     688:	ldr	r1, [r5, #80]	; 0x50
     68c:	cmp	r1, #0
     690:	beq	6bc <coda_XML_ParserReset+0x3a8>
     694:	mov	r2, r1
     698:	ldr	r1, [r1]
     69c:	str	r0, [r2]
     6a0:	mov	r0, r2
     6a4:	cmp	r1, #0
     6a8:	bne	694 <coda_XML_ParserReset+0x380>
     6ac:	str	r2, [r5, #84]	; 0x54
     6b0:	b	6bc <coda_XML_ParserReset+0x3a8>
     6b4:	ldr	r0, [r5, #80]	; 0x50
     6b8:	str	r0, [r5, #84]	; 0x54
     6bc:	mov	r0, #0
     6c0:	str	r0, [r5, #80]	; 0x50
     6c4:	str	r0, [r5, #88]	; 0x58
     6c8:	str	r0, [r5, #92]	; 0x5c
     6cc:	str	r0, [r5, #96]	; 0x60
     6d0:	ldr	r0, [r5, #108]	; 0x6c
     6d4:	cmp	r0, #0
     6d8:	beq	708 <coda_XML_ParserReset+0x3f4>
     6dc:	ldr	r1, [r5, #104]	; 0x68
     6e0:	cmp	r1, #0
     6e4:	beq	710 <coda_XML_ParserReset+0x3fc>
     6e8:	mov	r2, r1
     6ec:	ldr	r1, [r1]
     6f0:	str	r0, [r2]
     6f4:	mov	r0, r2
     6f8:	cmp	r1, #0
     6fc:	bne	6e8 <coda_XML_ParserReset+0x3d4>
     700:	str	r2, [r5, #108]	; 0x6c
     704:	b	710 <coda_XML_ParserReset+0x3fc>
     708:	ldr	r0, [r5, #104]	; 0x68
     70c:	str	r0, [r5, #108]	; 0x6c
     710:	mov	r6, #0
     714:	str	r6, [r5, #104]	; 0x68
     718:	strb	r6, [r5, #160]	; 0xa0
     71c:	str	r6, [r5, #152]	; 0x98
     720:	str	r6, [r5, #156]	; 0x9c
     724:	str	r6, [r5, #112]	; 0x70
     728:	str	r6, [r5, #116]	; 0x74
     72c:	str	r6, [r5, #120]	; 0x78
     730:	ldr	r0, [r5, #184]	; 0xb8
     734:	ldr	r1, [r4, #20]
     738:	blx	r1
     73c:	str	r6, [r5, #184]	; 0xb8
     740:	ldr	r0, [r5, #164]!	; 0xa4
     744:	ldr	r1, [r4, #20]
     748:	blx	r1
     74c:	vmov.i32	q8, #0	; 0x00000000
     750:	mov	r0, #1
     754:	str	r6, [r5, #16]
     758:	vst1.32	{d16-d17}, [r5]
     75c:	strb	r6, [r5, #-34]	; 0xffffffde
     760:	strh	r0, [r5, #-36]	; 0xffffffdc
     764:	pop	{r4, r5, r6, r7, fp, pc}

00000768 <parserInit>:
     768:	push	{r4, r5, r6, r7, fp, lr}
     76c:	add	fp, sp, #16
     770:	mov	r4, r0
     774:	movw	r0, #0
     778:	mov	r5, r1
     77c:	movt	r0, #0
     780:	str	r0, [r4, #288]	; 0x120
     784:	add	r0, r4, #264	; 0x108
     788:	bl	0 <coda_XmlPrologStateInit>
     78c:	mov	r7, #0
     790:	cmp	r5, #0
     794:	mov	r0, #0
     798:	beq	7fc <parserInit+0x94>
     79c:	add	r6, r4, #432	; 0x1b0
     7a0:	b	7c0 <parserInit+0x58>
     7a4:	ldrb	r1, [r5]
     7a8:	add	r2, r0, #1
     7ac:	str	r2, [r4, #444]	; 0x1bc
     7b0:	strb	r1, [r0]
     7b4:	ldrb	r0, [r5], #1
     7b8:	cmp	r0, #0
     7bc:	beq	7e8 <parserInit+0x80>
     7c0:	ldr	r1, [r4, #440]	; 0x1b8
     7c4:	ldr	r0, [r4, #444]	; 0x1bc
     7c8:	cmp	r0, r1
     7cc:	bne	7a4 <parserInit+0x3c>
     7d0:	mov	r0, r6
     7d4:	bl	6948 <poolGrow>
     7d8:	cmp	r0, #0
     7dc:	beq	7f8 <parserInit+0x90>
     7e0:	ldr	r0, [r4, #444]	; 0x1bc
     7e4:	b	7a4 <parserInit+0x3c>
     7e8:	ldr	r0, [r4, #448]	; 0x1c0
     7ec:	ldr	r1, [r4, #444]	; 0x1bc
     7f0:	str	r1, [r4, #448]	; 0x1c0
     7f4:	b	7fc <parserInit+0x94>
     7f8:	mov	r0, #0
     7fc:	str	r7, [r4, #368]	; 0x170
     800:	str	r0, [r4, #240]	; 0xf0
     804:	add	r0, r4, #156	; 0x9c
     808:	add	r1, r4, #152	; 0x98
     80c:	mov	r2, #0
     810:	bl	0 <coda_XmlInitEncoding>
     814:	vmov.i32	q8, #0	; 0x00000000
     818:	add	r0, r4, #60	; 0x3c
     81c:	str	r7, [r4, #44]	; 0x2c
     820:	str	r7, [r4, #40]	; 0x28
     824:	vst1.32	{d16-d17}, [r0]
     828:	add	r0, r4, #76	; 0x4c
     82c:	str	r7, [r4]
     830:	str	r7, [r4, #4]
     834:	vst1.32	{d16-d17}, [r0]
     838:	add	r0, r4, #92	; 0x5c
     83c:	vst1.32	{d16-d17}, [r0]
     840:	add	r0, r4, #108	; 0x6c
     844:	vst1.32	{d16-d17}, [r0]
     848:	add	r0, r4, #136	; 0x88
     84c:	vst1.64	{d16-d17}, [r0]
     850:	add	r0, r4, #416	; 0x1a0
     854:	str	r7, [r4, #128]	; 0x80
     858:	vst1.64	{d16-d17}, [r0]
     85c:	add	r0, r4, #292	; 0x124
     860:	str	r7, [r4, #48]	; 0x30
     864:	str	r7, [r4, #308]	; 0x134
     868:	vst1.32	{d16-d17}, [r0]
     86c:	add	r0, r4, #324	; 0x144
     870:	str	r7, [r4, #358]	; 0x166
     874:	vst1.32	{d16-d17}, [r0]
     878:	add	r0, r4, #340	; 0x154
     87c:	vst1.32	{d16-d17}, [r0]
     880:	str	r7, [r4, #354]	; 0x162
     884:	ldr	r0, [r4, #8]
     888:	str	r0, [r4, #24]
     88c:	str	r0, [r4, #28]
     890:	mov	r0, #504	; 0x1f8
     894:	str	r4, [r4, #124]	; 0x7c
     898:	strh	r7, [r4, r0]
     89c:	mov	r0, #1
     8a0:	str	r7, [r4, #392]	; 0x188
     8a4:	str	r7, [r4, #380]	; 0x17c
     8a8:	str	r7, [r4, #372]	; 0x174
     8ac:	str	r7, [r4, #320]	; 0x140
     8b0:	strb	r0, [r4, #316]	; 0x13c
     8b4:	str	r7, [r4, #260]	; 0x104
     8b8:	str	r7, [r4, #248]	; 0xf8
     8bc:	str	r7, [r4, #252]	; 0xfc
     8c0:	str	r7, [r4, #492]	; 0x1ec
     8c4:	str	r7, [r4, #496]	; 0x1f0
     8c8:	str	r7, [r4, #508]	; 0x1fc
     8cc:	str	r7, [r4, #512]	; 0x200
     8d0:	pop	{r4, r5, r6, r7, fp, pc}

000008d4 <coda_XML_SetEncoding>:
     8d4:	push	{r4, r5, r6, r7, fp, lr}
     8d8:	add	fp, sp, #16
     8dc:	mov	r5, r0
     8e0:	ldr	r0, [r0, #496]	; 0x1f0
     8e4:	mov	r4, #0
     8e8:	orr	r0, r0, #2
     8ec:	cmp	r0, #3
     8f0:	bne	8fc <coda_XML_SetEncoding+0x28>
     8f4:	mov	r0, r4
     8f8:	pop	{r4, r5, r6, r7, fp, pc}
     8fc:	mov	r6, r1
     900:	cmp	r1, #0
     904:	beq	974 <coda_XML_SetEncoding+0xa0>
     908:	add	r7, r5, #432	; 0x1b0
     90c:	b	92c <coda_XML_SetEncoding+0x58>
     910:	ldrb	r1, [r6]
     914:	add	r2, r0, #1
     918:	str	r2, [r5, #444]	; 0x1bc
     91c:	strb	r1, [r0]
     920:	ldrb	r0, [r6], #1
     924:	cmp	r0, #0
     928:	beq	954 <coda_XML_SetEncoding+0x80>
     92c:	ldr	r1, [r5, #440]	; 0x1b8
     930:	ldr	r0, [r5, #444]	; 0x1bc
     934:	cmp	r0, r1
     938:	bne	910 <coda_XML_SetEncoding+0x3c>
     93c:	mov	r0, r7
     940:	bl	6948 <poolGrow>
     944:	cmp	r0, #0
     948:	beq	988 <coda_XML_SetEncoding+0xb4>
     94c:	ldr	r0, [r5, #444]	; 0x1bc
     950:	b	910 <coda_XML_SetEncoding+0x3c>
     954:	ldr	r1, [r5, #448]	; 0x1c0
     958:	ldr	r0, [r5, #444]	; 0x1bc
     95c:	cmp	r1, #0
     960:	str	r0, [r5, #448]	; 0x1c0
     964:	str	r1, [r5, #240]	; 0xf0
     968:	movne	r4, #1
     96c:	mov	r0, r4
     970:	pop	{r4, r5, r6, r7, fp, pc}
     974:	mov	r0, #0
     978:	mov	r4, #1
     97c:	str	r0, [r5, #240]	; 0xf0
     980:	mov	r0, r4
     984:	pop	{r4, r5, r6, r7, fp, pc}
     988:	mov	r4, #0
     98c:	mov	r0, r4
     990:	str	r4, [r5, #240]	; 0xf0
     994:	pop	{r4, r5, r6, r7, fp, pc}

00000998 <coda_XML_ExternalEntityParserCreate>:
     998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     99c:	add	fp, sp, #28
     9a0:	sub	sp, sp, #4
     9a4:	vpush	{d8-d15}
     9a8:	sub	sp, sp, #64	; 0x40
     9ac:	mov	sl, r0
     9b0:	ldr	r0, [r0, #512]	; 0x200
     9b4:	str	r1, [sp, #56]	; 0x38
     9b8:	mov	r6, r2
     9bc:	cmp	r1, #0
     9c0:	ldr	r3, [sl, #364]	; 0x16c
     9c4:	add	r7, sl, #76	; 0x4c
     9c8:	add	r9, sl, #124	; 0x7c
     9cc:	add	r2, sl, #136	; 0x88
     9d0:	ldr	r5, [sl, #352]	; 0x160
     9d4:	vld1.32	{d12-d13}, [r7]
     9d8:	vld1.64	{d8-d9}, [r2]
     9dc:	str	r0, [sp, #40]	; 0x28
     9e0:	add	r0, sl, #60	; 0x3c
     9e4:	vld1.32	{d10-d11}, [r0]
     9e8:	ldrb	r0, [sl, #245]	; 0xf5
     9ec:	str	r3, [sp, #20]
     9f0:	movwne	r3, #0
     9f4:	str	r0, [sp, #28]
     9f8:	ldr	r0, [sl, #284]	; 0x11c
     9fc:	str	r0, [sp, #36]	; 0x24
     a00:	ldr	r0, [sl, #508]	; 0x1fc
     a04:	str	r0, [sp, #32]
     a08:	add	r0, sl, #100	; 0x64
     a0c:	vld1.32	{d14-d15}, [r0]
     a10:	ldr	r0, [sl, #116]	; 0x74
     a14:	str	r0, [sp, #52]	; 0x34
     a18:	ldr	r0, [sl, #120]	; 0x78
     a1c:	str	r0, [sp, #48]	; 0x30
     a20:	ldrb	r0, [sl, #316]	; 0x13c
     a24:	ldm	r9, {r7, r8, r9}
     a28:	str	r0, [sp, #24]
     a2c:	ldr	r0, [sl, #4]
     a30:	ldr	r4, [sl]
     a34:	str	r0, [sp, #44]	; 0x2c
     a38:	ldrb	r0, [sl, #244]	; 0xf4
     a3c:	cmp	r0, #0
     a40:	beq	a5c <coda_XML_ExternalEntityParserCreate+0xc4>
     a44:	ldrb	r0, [sl, #488]	; 0x1e8
     a48:	add	r1, sl, #12
     a4c:	add	r2, sp, #62	; 0x3e
     a50:	strb	r0, [sp, #62]	; 0x3e
     a54:	mov	r0, r6
     a58:	b	a68 <coda_XML_ExternalEntityParserCreate+0xd0>
     a5c:	add	r1, sl, #12
     a60:	mov	r0, r6
     a64:	mov	r2, #0
     a68:	bl	40 <parserCreate>
     a6c:	mov	r2, r0
     a70:	mov	r0, #0
     a74:	cmp	r2, #0
     a78:	beq	13c8 <coda_XML_ExternalEntityParserCreate+0xa30>
     a7c:	add	r0, r2, #60	; 0x3c
     a80:	add	r1, r0, #40	; 0x28
     a84:	vst1.32	{d14-d15}, [r1]
     a88:	add	r1, r0, #16
     a8c:	vst1.32	{d12-d13}, [r1]
     a90:	mov	r1, #76	; 0x4c
     a94:	vst1.32	{d10-d11}, [r0], r1
     a98:	strd	r8, [r2, #128]	; 0x80
     a9c:	ldr	r1, [sp, #52]	; 0x34
     aa0:	ldr	r3, [sp, #32]
     aa4:	ldr	r6, [sp, #28]
     aa8:	str	r1, [r2, #116]	; 0x74
     aac:	ldr	r1, [sp, #48]	; 0x30
     ab0:	str	r1, [r2, #120]	; 0x78
     ab4:	vst1.64	{d8-d9}, [r0]
     ab8:	ldr	r0, [sp, #44]	; 0x2c
     abc:	str	r4, [r2]
     ac0:	str	r5, [r2, #352]	; 0x160
     ac4:	ldr	r5, [sp, #24]
     ac8:	ldr	r1, [sp, #36]	; 0x24
     acc:	cmp	r4, r0
     ad0:	ldr	r0, [sp, #40]	; 0x28
     ad4:	strne	r2, [r2, #4]
     ad8:	streq	r4, [r2, #4]
     adc:	cmp	r7, sl
     ae0:	strne	r7, [r2, #124]	; 0x7c
     ae4:	strb	r6, [r2, #245]	; 0xf5
     ae8:	strb	r5, [r2, #316]	; 0x13c
     aec:	str	r3, [r2, #508]	; 0x1fc
     af0:	str	r0, [r2, #512]	; 0x200
     af4:	ldr	r0, [sp, #56]	; 0x38
     af8:	str	sl, [r2, #492]	; 0x1ec
     afc:	str	r1, [r2, #284]	; 0x11c
     b00:	cmp	r0, #0
     b04:	beq	bb8 <coda_XML_ExternalEntityParserCreate+0x220>
     b08:	ldr	r0, [sp, #20]
     b0c:	ldr	r4, [r2, #364]	; 0x16c
     b10:	str	r2, [sp, #52]	; 0x34
     b14:	ldr	r6, [r0, #60]	; 0x3c
     b18:	ldr	r0, [r0, #68]	; 0x44
     b1c:	add	r8, r4, #60	; 0x3c
     b20:	add	r9, r4, #80	; 0x50
     b24:	add	r5, r6, r0, lsl #2
     b28:	cmp	r6, r5
     b2c:	beq	be0 <coda_XML_ExternalEntityParserCreate+0x248>
     b30:	ldr	r0, [r6], #4
     b34:	cmp	r0, #0
     b38:	beq	b28 <coda_XML_ExternalEntityParserCreate+0x190>
     b3c:	ldr	r7, [r0]
     b40:	b	b64 <coda_XML_ExternalEntityParserCreate+0x1cc>
     b44:	ldr	r0, [r4, #92]	; 0x5c
     b48:	ldrb	r1, [r7]
     b4c:	add	r2, r0, #1
     b50:	str	r2, [r4, #92]	; 0x5c
     b54:	strb	r1, [r0]
     b58:	ldrb	r0, [r7], #1
     b5c:	cmp	r0, #0
     b60:	beq	b88 <coda_XML_ExternalEntityParserCreate+0x1f0>
     b64:	ldr	r1, [r4, #88]	; 0x58
     b68:	ldr	r0, [r4, #92]	; 0x5c
     b6c:	cmp	r0, r1
     b70:	bne	b48 <coda_XML_ExternalEntityParserCreate+0x1b0>
     b74:	mov	r0, r9
     b78:	bl	6948 <poolGrow>
     b7c:	cmp	r0, #0
     b80:	bne	b44 <coda_XML_ExternalEntityParserCreate+0x1ac>
     b84:	b	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     b88:	ldr	r2, [r4, #96]	; 0x60
     b8c:	ldr	r0, [r4, #92]	; 0x5c
     b90:	cmp	r2, #0
     b94:	str	r0, [r4, #96]	; 0x60
     b98:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     b9c:	mov	r0, sl
     ba0:	mov	r1, r8
     ba4:	mov	r3, #8
     ba8:	bl	6054 <lookup>
     bac:	cmp	r0, #0
     bb0:	bne	b28 <coda_XML_ExternalEntityParserCreate+0x190>
     bb4:	b	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     bb8:	mov	r0, #1
     bbc:	mov	r4, r2
     bc0:	strb	r0, [r2, #504]	; 0x1f8
     bc4:	add	r0, r2, #264	; 0x108
     bc8:	bl	0 <coda_XmlPrologStateInitExternalEntity>
     bcc:	movw	r0, #0
     bd0:	movt	r0, #0
     bd4:	str	r0, [r4, #288]	; 0x120
     bd8:	mov	r0, r4
     bdc:	b	13c8 <coda_XML_ExternalEntityParserCreate+0xa30>
     be0:	ldr	r0, [sp, #20]
     be4:	add	r7, r4, #152	; 0x98
     be8:	add	r1, r0, #152	; 0x98
     bec:	ldr	r8, [r0, #40]	; 0x28
     bf0:	ldr	r0, [r0, #48]	; 0x30
     bf4:	str	r1, [sp, #40]	; 0x28
     bf8:	add	r1, r4, #40	; 0x28
     bfc:	str	r1, [sp, #44]	; 0x2c
     c00:	add	r3, r8, r0, lsl #2
     c04:	str	r3, [sp, #48]	; 0x30
     c08:	cmp	r8, r3
     c0c:	beq	e44 <coda_XML_ExternalEntityParserCreate+0x4ac>
     c10:	ldr	r5, [r8], #4
     c14:	cmp	r5, #0
     c18:	beq	c08 <coda_XML_ExternalEntityParserCreate+0x270>
     c1c:	ldr	r1, [r4, #88]	; 0x58
     c20:	ldr	r0, [r4, #92]	; 0x5c
     c24:	cmp	r0, r1
     c28:	bne	c40 <coda_XML_ExternalEntityParserCreate+0x2a8>
     c2c:	mov	r0, r9
     c30:	bl	6948 <poolGrow>
     c34:	cmp	r0, #0
     c38:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     c3c:	ldr	r0, [r4, #92]	; 0x5c
     c40:	add	r1, r0, #1
     c44:	str	r1, [r4, #92]	; 0x5c
     c48:	mov	r1, #0
     c4c:	strb	r1, [r0]
     c50:	ldr	r6, [r5]
     c54:	b	c74 <coda_XML_ExternalEntityParserCreate+0x2dc>
     c58:	ldrb	r1, [r6]
     c5c:	add	r2, r0, #1
     c60:	str	r2, [r4, #92]	; 0x5c
     c64:	strb	r1, [r0]
     c68:	ldrb	r0, [r6], #1
     c6c:	cmp	r0, #0
     c70:	beq	c9c <coda_XML_ExternalEntityParserCreate+0x304>
     c74:	ldr	r1, [r4, #88]	; 0x58
     c78:	ldr	r0, [r4, #92]	; 0x5c
     c7c:	cmp	r0, r1
     c80:	bne	c58 <coda_XML_ExternalEntityParserCreate+0x2c0>
     c84:	mov	r0, r9
     c88:	bl	6948 <poolGrow>
     c8c:	cmp	r0, #0
     c90:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     c94:	ldr	r0, [r4, #92]	; 0x5c
     c98:	b	c58 <coda_XML_ExternalEntityParserCreate+0x2c0>
     c9c:	ldr	r0, [r4, #96]	; 0x60
     ca0:	ldr	r1, [r4, #92]	; 0x5c
     ca4:	cmp	r0, #0
     ca8:	str	r1, [r4, #96]	; 0x60
     cac:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     cb0:	ldr	r1, [sp, #44]	; 0x2c
     cb4:	add	r2, r0, #1
     cb8:	mov	r0, sl
     cbc:	mov	r3, #12
     cc0:	bl	6054 <lookup>
     cc4:	cmp	r0, #0
     cc8:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     ccc:	ldrb	r1, [r5, #8]
     cd0:	ldr	r3, [sp, #48]	; 0x30
     cd4:	strb	r1, [r0, #8]
     cd8:	ldr	r2, [r5, #4]
     cdc:	cmp	r2, #0
     ce0:	beq	c08 <coda_XML_ExternalEntityParserCreate+0x270>
     ce4:	ldrb	r1, [r5, #9]
     ce8:	strb	r1, [r0, #9]
     cec:	ldr	r1, [sp, #40]	; 0x28
     cf0:	cmp	r2, r1
     cf4:	beq	e10 <coda_XML_ExternalEntityParserCreate+0x478>
     cf8:	ldr	r1, [r4, #68]	; 0x44
     cfc:	mov	r6, #0
     d00:	str	r7, [sp, #32]
     d04:	cmp	r1, #0
     d08:	beq	e24 <coda_XML_ExternalEntityParserCreate+0x48c>
     d0c:	ldr	lr, [r2]
     d10:	ldr	r2, [sl, #512]	; 0x200
     d14:	ldrb	ip, [lr]
     d18:	cmp	ip, #0
     d1c:	beq	d48 <coda_XML_ExternalEntityParserCreate+0x3b0>
     d20:	movw	r5, #16963	; 0x4243
     d24:	add	r3, lr, #1
     d28:	mov	r7, ip
     d2c:	movt	r5, #15
     d30:	mul	r2, r2, r5
     d34:	uxtb	r7, r7
     d38:	eor	r2, r2, r7
     d3c:	ldrb	r7, [r3], #1
     d40:	cmp	r7, #0
     d44:	bne	d30 <coda_XML_ExternalEntityParserCreate+0x398>
     d48:	ldr	r5, [r4, #60]	; 0x3c
     d4c:	sub	r7, r1, #1
     d50:	and	r3, r2, r7
     d54:	str	r5, [sp, #28]
     d58:	ldr	r5, [r5, r3, lsl #2]
     d5c:	cmp	r5, #0
     d60:	beq	e24 <coda_XML_ExternalEntityParserCreate+0x48c>
     d64:	rsb	r6, r1, #0
     d68:	and	r2, r2, r6
     d6c:	mov	r6, #0
     d70:	str	r2, [sp, #16]
     d74:	add	r2, lr, #1
     d78:	str	r2, [sp, #24]
     d7c:	lsr	r2, r7, #2
     d80:	str	r2, [sp, #12]
     d84:	b	db4 <coda_XML_ExternalEntityParserCreate+0x41c>
     d88:	ldr	r6, [sp, #36]	; 0x24
     d8c:	tst	r6, #255	; 0xff
     d90:	beq	df4 <coda_XML_ExternalEntityParserCreate+0x45c>
     d94:	uxtb	r2, r6
     d98:	mov	ip, lr
     d9c:	subs	r3, r3, r2
     da0:	ldr	r2, [sp, #28]
     da4:	addcc	r3, r3, r1
     da8:	ldr	r5, [r2, r3, lsl #2]
     dac:	cmp	r5, #0
     db0:	beq	e3c <coda_XML_ExternalEntityParserCreate+0x4a4>
     db4:	ldr	r2, [r5]
     db8:	mov	lr, ip
     dbc:	str	r6, [sp, #36]	; 0x24
     dc0:	ldrb	r7, [r2]
     dc4:	cmp	ip, r7
     dc8:	bne	d88 <coda_XML_ExternalEntityParserCreate+0x3f0>
     dcc:	add	r6, r2, #1
     dd0:	ldr	r2, [sp, #24]
     dd4:	mov	ip, lr
     dd8:	tst	ip, #255	; 0xff
     ddc:	beq	e20 <coda_XML_ExternalEntityParserCreate+0x488>
     de0:	ldrb	ip, [r2], #1
     de4:	ldrb	r7, [r6], #1
     de8:	cmp	ip, r7
     dec:	beq	dd8 <coda_XML_ExternalEntityParserCreate+0x440>
     df0:	b	d88 <coda_XML_ExternalEntityParserCreate+0x3f0>
     df4:	ldrb	r2, [r4, #64]	; 0x40
     df8:	ldr	r7, [sp, #16]
     dfc:	ldr	r6, [sp, #12]
     e00:	sub	r2, r2, #1
     e04:	and	r2, r6, r7, lsr r2
     e08:	orr	r6, r2, #1
     e0c:	b	d94 <coda_XML_ExternalEntityParserCreate+0x3fc>
     e10:	str	r7, [r0, #4]
     e14:	cmp	r8, r3
     e18:	bne	c10 <coda_XML_ExternalEntityParserCreate+0x278>
     e1c:	b	e44 <coda_XML_ExternalEntityParserCreate+0x4ac>
     e20:	mov	r6, r5
     e24:	ldr	r7, [sp, #32]
     e28:	ldr	r3, [sp, #48]	; 0x30
     e2c:	str	r6, [r0, #4]
     e30:	cmp	r8, r3
     e34:	bne	c10 <coda_XML_ExternalEntityParserCreate+0x278>
     e38:	b	e44 <coda_XML_ExternalEntityParserCreate+0x4ac>
     e3c:	mov	r6, #0
     e40:	b	e24 <coda_XML_ExternalEntityParserCreate+0x48c>
     e44:	add	r0, r4, #20
     e48:	str	r0, [sp, #8]
     e4c:	ldr	r0, [sp, #20]
     e50:	ldr	r1, [r0, #20]
     e54:	ldr	r0, [r0, #28]
     e58:	add	r0, r1, r0, lsl #2
     e5c:	str	r0, [sp, #12]
     e60:	cmp	r1, r0
     e64:	beq	13d8 <coda_XML_ExternalEntityParserCreate+0xa40>
     e68:	ldr	r6, [r1], #4
     e6c:	cmp	r6, #0
     e70:	beq	e60 <coda_XML_ExternalEntityParserCreate+0x4c8>
     e74:	ldr	r5, [r6]
     e78:	str	r1, [sp, #16]
     e7c:	b	e9c <coda_XML_ExternalEntityParserCreate+0x504>
     e80:	ldrb	r1, [r5]
     e84:	add	r2, r0, #1
     e88:	str	r2, [r4, #92]	; 0x5c
     e8c:	strb	r1, [r0]
     e90:	ldrb	r0, [r5], #1
     e94:	cmp	r0, #0
     e98:	beq	ec4 <coda_XML_ExternalEntityParserCreate+0x52c>
     e9c:	ldr	r1, [r4, #88]	; 0x58
     ea0:	ldr	r0, [r4, #92]	; 0x5c
     ea4:	cmp	r0, r1
     ea8:	bne	e80 <coda_XML_ExternalEntityParserCreate+0x4e8>
     eac:	mov	r0, r9
     eb0:	bl	6948 <poolGrow>
     eb4:	cmp	r0, #0
     eb8:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     ebc:	ldr	r0, [r4, #92]	; 0x5c
     ec0:	b	e80 <coda_XML_ExternalEntityParserCreate+0x4e8>
     ec4:	ldr	r2, [r4, #96]	; 0x60
     ec8:	ldr	r0, [r4, #92]	; 0x5c
     ecc:	cmp	r2, #0
     ed0:	str	r0, [r4, #96]	; 0x60
     ed4:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     ed8:	ldr	r1, [sp, #8]
     edc:	mov	r0, sl
     ee0:	mov	r3, #24
     ee4:	bl	6054 <lookup>
     ee8:	cmp	r0, #0
     eec:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
     ef0:	mov	r7, r0
     ef4:	ldr	r0, [r6, #12]
     ef8:	cmp	r0, #0
     efc:	beq	f20 <coda_XML_ExternalEntityParserCreate+0x588>
     f00:	ldr	r1, [sp, #52]	; 0x34
     f04:	add	r0, r0, r0, lsl #1
     f08:	lsl	r0, r0, #2
     f0c:	ldr	r1, [r1, #12]
     f10:	blx	r1
     f14:	cmp	r0, #0
     f18:	str	r0, [r7, #20]
     f1c:	beq	1494 <coda_XML_ExternalEntityParserCreate+0xafc>
     f20:	ldr	r1, [r6, #8]
     f24:	str	r6, [sp, #40]	; 0x28
     f28:	str	r7, [sp, #36]	; 0x24
     f2c:	cmp	r1, #0
     f30:	beq	1044 <coda_XML_ExternalEntityParserCreate+0x6ac>
     f34:	ldr	r0, [r4, #48]	; 0x30
     f38:	mov	r5, #0
     f3c:	cmp	r0, #0
     f40:	beq	1038 <coda_XML_ExternalEntityParserCreate+0x6a0>
     f44:	ldr	lr, [r1]
     f48:	ldr	r3, [sl, #512]	; 0x200
     f4c:	ldrb	r7, [lr]
     f50:	cmp	r7, #0
     f54:	beq	f80 <coda_XML_ExternalEntityParserCreate+0x5e8>
     f58:	movw	r6, #16963	; 0x4243
     f5c:	add	r2, lr, #1
     f60:	mov	r1, r7
     f64:	movt	r6, #15
     f68:	mul	r3, r3, r6
     f6c:	uxtb	r1, r1
     f70:	eor	r3, r3, r1
     f74:	ldrb	r1, [r2], #1
     f78:	cmp	r1, #0
     f7c:	bne	f68 <coda_XML_ExternalEntityParserCreate+0x5d0>
     f80:	ldr	r6, [r4, #40]	; 0x28
     f84:	sub	r1, r0, #1
     f88:	and	r2, r3, r1
     f8c:	str	r6, [sp, #48]	; 0x30
     f90:	ldr	r6, [r6, r2, lsl #2]
     f94:	cmp	r6, #0
     f98:	beq	1038 <coda_XML_ExternalEntityParserCreate+0x6a0>
     f9c:	rsb	r5, r0, #0
     fa0:	lsr	r1, r1, #2
     fa4:	add	lr, lr, #1
     fa8:	and	r3, r3, r5
     fac:	mov	r5, #0
     fb0:	str	r1, [sp, #32]
     fb4:	str	r3, [sp, #44]	; 0x2c
     fb8:	b	fe0 <coda_XML_ExternalEntityParserCreate+0x648>
     fbc:	tst	r5, #255	; 0xff
     fc0:	beq	1018 <coda_XML_ExternalEntityParserCreate+0x680>
     fc4:	uxtb	r1, r5
     fc8:	subs	r2, r2, r1
     fcc:	ldr	r1, [sp, #48]	; 0x30
     fd0:	addcc	r2, r2, r0
     fd4:	ldr	r6, [r1, r2, lsl #2]
     fd8:	cmp	r6, #0
     fdc:	beq	1398 <coda_XML_ExternalEntityParserCreate+0xa00>
     fe0:	ldr	r1, [r6]
     fe4:	ldrb	r3, [r1]
     fe8:	cmp	r7, r3
     fec:	bne	fbc <coda_XML_ExternalEntityParserCreate+0x624>
     ff0:	add	r3, r1, #1
     ff4:	mov	r8, lr
     ff8:	mov	ip, r7
     ffc:	tst	ip, #255	; 0xff
    1000:	beq	1034 <coda_XML_ExternalEntityParserCreate+0x69c>
    1004:	ldrb	ip, [r8], #1
    1008:	ldrb	r1, [r3], #1
    100c:	cmp	ip, r1
    1010:	beq	ffc <coda_XML_ExternalEntityParserCreate+0x664>
    1014:	b	fbc <coda_XML_ExternalEntityParserCreate+0x624>
    1018:	ldrb	r1, [r4, #44]	; 0x2c
    101c:	ldr	r3, [sp, #44]	; 0x2c
    1020:	ldr	r6, [sp, #32]
    1024:	sub	r1, r1, #1
    1028:	and	r1, r6, r3, lsr r1
    102c:	orr	r5, r1, #1
    1030:	b	fc4 <coda_XML_ExternalEntityParserCreate+0x62c>
    1034:	mov	r5, r6
    1038:	ldr	r7, [sp, #36]	; 0x24
    103c:	ldr	r6, [sp, #40]	; 0x28
    1040:	str	r5, [r7, #8]
    1044:	ldr	ip, [r6, #12]
    1048:	str	ip, [r7, #12]
    104c:	str	ip, [r7, #16]
    1050:	ldr	r0, [r6, #4]
    1054:	cmp	r0, #0
    1058:	beq	1170 <coda_XML_ExternalEntityParserCreate+0x7d8>
    105c:	ldr	r1, [r4, #68]	; 0x44
    1060:	mov	r5, #0
    1064:	str	ip, [sp, #28]
    1068:	cmp	r1, #0
    106c:	beq	1160 <coda_XML_ExternalEntityParserCreate+0x7c8>
    1070:	ldr	r8, [r0]
    1074:	ldr	r6, [sl, #512]	; 0x200
    1078:	ldrb	lr, [r8]
    107c:	cmp	lr, #0
    1080:	beq	10ac <coda_XML_ExternalEntityParserCreate+0x714>
    1084:	movw	r7, #16963	; 0x4243
    1088:	add	r0, r8, #1
    108c:	mov	r3, lr
    1090:	movt	r7, #15
    1094:	mul	r2, r6, r7
    1098:	uxtb	r3, r3
    109c:	eor	r6, r2, r3
    10a0:	ldrb	r3, [r0], #1
    10a4:	cmp	r3, #0
    10a8:	bne	1094 <coda_XML_ExternalEntityParserCreate+0x6fc>
    10ac:	ldr	ip, [r4, #60]	; 0x3c
    10b0:	sub	r2, r1, #1
    10b4:	and	r3, r6, r2
    10b8:	ldr	r0, [ip, r3, lsl #2]
    10bc:	cmp	r0, #0
    10c0:	beq	1160 <coda_XML_ExternalEntityParserCreate+0x7c8>
    10c4:	rsb	r5, r1, #0
    10c8:	lsr	r2, r2, #2
    10cc:	and	r5, r6, r5
    10d0:	str	r2, [sp, #32]
    10d4:	str	r5, [sp, #44]	; 0x2c
    10d8:	add	r5, r8, #1
    10dc:	str	r5, [sp, #48]	; 0x30
    10e0:	mov	r5, #0
    10e4:	b	1108 <coda_XML_ExternalEntityParserCreate+0x770>
    10e8:	tst	r5, #255	; 0xff
    10ec:	beq	1140 <coda_XML_ExternalEntityParserCreate+0x7a8>
    10f0:	uxtb	r0, r5
    10f4:	subs	r3, r3, r0
    10f8:	addcc	r3, r3, r1
    10fc:	ldr	r0, [ip, r3, lsl #2]
    1100:	cmp	r0, #0
    1104:	beq	13a0 <coda_XML_ExternalEntityParserCreate+0xa08>
    1108:	ldr	r2, [r0]
    110c:	ldrb	r6, [r2]
    1110:	cmp	lr, r6
    1114:	bne	10e8 <coda_XML_ExternalEntityParserCreate+0x750>
    1118:	ldr	r7, [sp, #48]	; 0x30
    111c:	add	r6, r2, #1
    1120:	mov	r2, lr
    1124:	tst	r2, #255	; 0xff
    1128:	beq	115c <coda_XML_ExternalEntityParserCreate+0x7c4>
    112c:	ldrb	r2, [r7], #1
    1130:	ldrb	r8, [r6], #1
    1134:	cmp	r2, r8
    1138:	beq	1124 <coda_XML_ExternalEntityParserCreate+0x78c>
    113c:	b	10e8 <coda_XML_ExternalEntityParserCreate+0x750>
    1140:	ldrb	r0, [r4, #64]	; 0x40
    1144:	ldr	r2, [sp, #44]	; 0x2c
    1148:	ldr	r5, [sp, #32]
    114c:	sub	r0, r0, #1
    1150:	and	r0, r5, r2, lsr r0
    1154:	orr	r5, r0, #1
    1158:	b	10f0 <coda_XML_ExternalEntityParserCreate+0x758>
    115c:	mov	r5, r0
    1160:	ldr	r0, [sp, #36]	; 0x24
    1164:	ldr	r6, [sp, #40]	; 0x28
    1168:	ldr	ip, [sp, #28]
    116c:	str	r5, [r0, #4]
    1170:	ldr	r1, [sp, #16]
    1174:	ldr	r0, [sp, #12]
    1178:	cmp	ip, #1
    117c:	blt	e60 <coda_XML_ExternalEntityParserCreate+0x4c8>
    1180:	mov	r8, #0
    1184:	b	11a4 <coda_XML_ExternalEntityParserCreate+0x80c>
    1188:	add	r0, r0, r6, lsl #2
    118c:	ldr	r6, [sp, #40]	; 0x28
    1190:	mov	r1, #0
    1194:	str	r1, [r0, #8]
    1198:	add	r8, r8, #1
    119c:	cmp	r8, ip
    11a0:	bge	1384 <coda_XML_ExternalEntityParserCreate+0x9ec>
    11a4:	ldr	r0, [r6, #20]
    11a8:	ldr	r2, [r4, #48]	; 0x30
    11ac:	mov	r3, #0
    11b0:	str	r0, [sp, #44]	; 0x2c
    11b4:	add	r0, r8, r8, lsl #1
    11b8:	cmp	r2, #0
    11bc:	str	r0, [sp, #48]	; 0x30
    11c0:	beq	12d4 <coda_XML_ExternalEntityParserCreate+0x93c>
    11c4:	ldr	r0, [sp, #48]	; 0x30
    11c8:	ldr	r1, [sp, #44]	; 0x2c
    11cc:	ldr	r0, [r1, r0, lsl #2]
    11d0:	ldr	r1, [sl, #512]	; 0x200
    11d4:	ldr	r0, [r0]
    11d8:	ldrb	lr, [r0]
    11dc:	cmp	lr, #0
    11e0:	beq	120c <coda_XML_ExternalEntityParserCreate+0x874>
    11e4:	movw	r6, #16963	; 0x4243
    11e8:	add	r7, r0, #1
    11ec:	mov	r3, lr
    11f0:	movt	r6, #15
    11f4:	mul	r1, r1, r6
    11f8:	uxtb	r3, r3
    11fc:	eor	r1, r1, r3
    1200:	ldrb	r3, [r7], #1
    1204:	cmp	r3, #0
    1208:	bne	11f4 <coda_XML_ExternalEntityParserCreate+0x85c>
    120c:	ldr	r3, [r4, #40]	; 0x28
    1210:	sub	r5, r2, #1
    1214:	and	r6, r1, r5
    1218:	ldr	r7, [r3, r6, lsl #2]
    121c:	str	r3, [sp, #32]
    1220:	mov	r3, #0
    1224:	cmp	r7, #0
    1228:	beq	12d4 <coda_XML_ExternalEntityParserCreate+0x93c>
    122c:	rsb	r3, r2, #0
    1230:	add	r0, r0, #1
    1234:	str	ip, [sp, #28]
    1238:	mov	ip, #0
    123c:	and	r1, r1, r3
    1240:	str	r0, [sp, #24]
    1244:	lsr	r0, r5, #2
    1248:	str	r1, [sp, #4]
    124c:	str	r0, [sp]
    1250:	b	1278 <coda_XML_ExternalEntityParserCreate+0x8e0>
    1254:	tst	ip, #255	; 0xff
    1258:	beq	12b0 <coda_XML_ExternalEntityParserCreate+0x918>
    125c:	uxtb	r0, ip
    1260:	subs	r6, r6, r0
    1264:	ldr	r0, [sp, #32]
    1268:	addcc	r6, r6, r2
    126c:	ldr	r7, [r0, r6, lsl #2]
    1270:	cmp	r7, #0
    1274:	beq	137c <coda_XML_ExternalEntityParserCreate+0x9e4>
    1278:	ldr	r0, [r7]
    127c:	ldrb	r1, [r0]
    1280:	cmp	lr, r1
    1284:	bne	1254 <coda_XML_ExternalEntityParserCreate+0x8bc>
    1288:	add	r1, r0, #1
    128c:	ldr	r0, [sp, #24]
    1290:	mov	r3, lr
    1294:	tst	r3, #255	; 0xff
    1298:	beq	12cc <coda_XML_ExternalEntityParserCreate+0x934>
    129c:	ldrb	r3, [r0], #1
    12a0:	ldrb	r5, [r1], #1
    12a4:	cmp	r3, r5
    12a8:	beq	1294 <coda_XML_ExternalEntityParserCreate+0x8fc>
    12ac:	b	1254 <coda_XML_ExternalEntityParserCreate+0x8bc>
    12b0:	ldrb	r0, [r4, #44]	; 0x2c
    12b4:	ldr	r1, [sp, #4]
    12b8:	ldr	r3, [sp]
    12bc:	sub	r0, r0, #1
    12c0:	and	r0, r3, r1, lsr r0
    12c4:	orr	ip, r0, #1
    12c8:	b	125c <coda_XML_ExternalEntityParserCreate+0x8c4>
    12cc:	mov	r3, r7
    12d0:	ldr	ip, [sp, #28]
    12d4:	ldr	r7, [sp, #36]	; 0x24
    12d8:	ldr	r6, [sp, #48]	; 0x30
    12dc:	ldr	r0, [r7, #20]
    12e0:	mov	r1, r0
    12e4:	str	r3, [r1, r6, lsl #2]!
    12e8:	ldr	r2, [sp, #44]	; 0x2c
    12ec:	add	r2, r2, r6, lsl #2
    12f0:	ldrb	r3, [r2, #4]
    12f4:	strb	r3, [r1, #4]
    12f8:	ldr	r5, [r2, #8]
    12fc:	cmp	r5, #0
    1300:	beq	1188 <coda_XML_ExternalEntityParserCreate+0x7f0>
    1304:	ldr	r6, [sp, #40]	; 0x28
    1308:	b	132c <coda_XML_ExternalEntityParserCreate+0x994>
    130c:	ldr	r0, [r4, #92]	; 0x5c
    1310:	ldrb	r1, [r5]
    1314:	add	r2, r0, #1
    1318:	str	r2, [r4, #92]	; 0x5c
    131c:	strb	r1, [r0]
    1320:	ldrb	r0, [r5], #1
    1324:	cmp	r0, #0
    1328:	beq	1350 <coda_XML_ExternalEntityParserCreate+0x9b8>
    132c:	ldr	r1, [r4, #88]	; 0x58
    1330:	ldr	r0, [r4, #92]	; 0x5c
    1334:	cmp	r0, r1
    1338:	bne	1310 <coda_XML_ExternalEntityParserCreate+0x978>
    133c:	mov	r0, r9
    1340:	bl	6948 <poolGrow>
    1344:	cmp	r0, #0
    1348:	bne	130c <coda_XML_ExternalEntityParserCreate+0x974>
    134c:	b	13a8 <coda_XML_ExternalEntityParserCreate+0xa10>
    1350:	ldr	r0, [r4, #92]	; 0x5c
    1354:	ldr	r1, [r4, #96]	; 0x60
    1358:	ldr	r2, [sp, #48]	; 0x30
    135c:	str	r0, [r4, #96]	; 0x60
    1360:	cmp	r1, #0
    1364:	ldr	r0, [r7, #20]
    1368:	add	r0, r0, r2, lsl #2
    136c:	str	r1, [r0, #8]
    1370:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
    1374:	ldr	ip, [r7, #12]
    1378:	b	1198 <coda_XML_ExternalEntityParserCreate+0x800>
    137c:	mov	r3, #0
    1380:	b	12d0 <coda_XML_ExternalEntityParserCreate+0x938>
    1384:	ldr	r1, [sp, #16]
    1388:	ldr	r0, [sp, #12]
    138c:	cmp	r1, r0
    1390:	bne	e68 <coda_XML_ExternalEntityParserCreate+0x4d0>
    1394:	b	13d8 <coda_XML_ExternalEntityParserCreate+0xa40>
    1398:	mov	r5, #0
    139c:	b	1038 <coda_XML_ExternalEntityParserCreate+0x6a0>
    13a0:	mov	r5, #0
    13a4:	b	1160 <coda_XML_ExternalEntityParserCreate+0x7c8>
    13a8:	ldr	r0, [r7, #20]
    13ac:	ldr	r1, [sp, #48]	; 0x30
    13b0:	add	r0, r0, r1, lsl #2
    13b4:	mov	r1, #0
    13b8:	str	r1, [r0, #8]
    13bc:	ldr	r0, [sp, #52]	; 0x34
    13c0:	bl	1880 <coda_XML_ParserFree>
    13c4:	mov	r0, #0
    13c8:	sub	sp, fp, #96	; 0x60
    13cc:	vpop	{d8-d15}
    13d0:	add	sp, sp, #4
    13d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    13d8:	ldr	r3, [sp, #20]
    13dc:	mov	r0, sl
    13e0:	mov	r1, r4
    13e4:	mov	r2, r9
    13e8:	bl	c5dc <copyEntityTable>
    13ec:	cmp	r0, #0
    13f0:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
    13f4:	ldr	r0, [sp, #20]
    13f8:	add	r1, r4, #132	; 0x84
    13fc:	mov	r2, r9
    1400:	add	r3, r0, #132	; 0x84
    1404:	mov	r0, sl
    1408:	bl	c5dc <copyEntityTable>
    140c:	cmp	r0, #0
    1410:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
    1414:	ldr	r1, [sp, #20]
    1418:	ldrb	r0, [r1, #131]	; 0x83
    141c:	strb	r0, [r4, #131]	; 0x83
    1420:	ldrb	r0, [r1, #128]	; 0x80
    1424:	strb	r0, [r4, #128]	; 0x80
    1428:	ldrb	r0, [r1, #129]	; 0x81
    142c:	strb	r0, [r4, #129]	; 0x81
    1430:	ldrb	r0, [r1, #130]	; 0x82
    1434:	strb	r0, [r4, #130]	; 0x82
    1438:	ldrb	r0, [r1, #160]	; 0xa0
    143c:	strb	r0, [r4, #160]	; 0xa0
    1440:	ldr	r0, [r1, #164]	; 0xa4
    1444:	str	r0, [r4, #164]	; 0xa4
    1448:	ldr	r0, [r1, #168]	; 0xa8
    144c:	str	r0, [r4, #168]	; 0xa8
    1450:	ldr	r0, [r1, #172]	; 0xac
    1454:	str	r0, [r4, #172]	; 0xac
    1458:	ldr	r0, [r1, #180]	; 0xb4
    145c:	str	r0, [r4, #180]	; 0xb4
    1460:	ldr	r0, [r1, #184]	; 0xb8
    1464:	ldr	r1, [sp, #56]	; 0x38
    1468:	str	r0, [r4, #184]	; 0xb8
    146c:	ldr	r0, [sp, #52]	; 0x34
    1470:	bl	14a8 <setContext>
    1474:	cmp	r0, #0
    1478:	beq	13bc <coda_XML_ExternalEntityParserCreate+0xa24>
    147c:	ldr	r1, [sp, #52]	; 0x34
    1480:	movw	r0, #0
    1484:	movt	r0, #0
    1488:	str	r0, [r1, #288]	; 0x120
    148c:	mov	r0, r1
    1490:	b	13c8 <coda_XML_ExternalEntityParserCreate+0xa30>
    1494:	ldr	r0, [sp, #52]	; 0x34
    1498:	ldr	r1, [r0, #20]
    149c:	mov	r0, r7
    14a0:	blx	r1
    14a4:	b	13bc <coda_XML_ExternalEntityParserCreate+0xa24>

000014a8 <setContext>:
    14a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14ac:	add	fp, sp, #28
    14b0:	sub	sp, sp, #44	; 0x2c
    14b4:	mov	r4, r0
    14b8:	ldrb	r0, [r1]
    14bc:	cmp	r0, #0
    14c0:	beq	185c <setContext+0x3b4>
    14c4:	ldr	r8, [r4, #364]	; 0x16c
    14c8:	mov	r6, r1
    14cc:	add	r1, r4, #380	; 0x17c
    14d0:	add	r9, r4, #432	; 0x1b0
    14d4:	str	r1, [sp, #16]
    14d8:	mov	r5, r6
    14dc:	str	r9, [sp, #36]	; 0x24
    14e0:	add	r1, r8, #152	; 0x98
    14e4:	str	r1, [sp, #12]
    14e8:	add	r1, r8, #80	; 0x50
    14ec:	str	r1, [sp, #28]
    14f0:	add	r1, r8, #60	; 0x3c
    14f4:	str	r1, [sp, #8]
    14f8:	uxtb	r1, r0
    14fc:	cmp	r1, #0
    1500:	beq	1514 <setContext+0x6c>
    1504:	cmp	r1, #61	; 0x3d
    1508:	beq	1644 <setContext+0x19c>
    150c:	cmp	r1, #12
    1510:	bne	165c <setContext+0x1b4>
    1514:	ldr	r1, [r4, #440]	; 0x1b8
    1518:	ldr	r0, [r4, #444]	; 0x1bc
    151c:	cmp	r0, r1
    1520:	bne	1538 <setContext+0x90>
    1524:	mov	r0, r9
    1528:	bl	6948 <poolGrow>
    152c:	cmp	r0, #0
    1530:	beq	186c <setContext+0x3c4>
    1534:	ldr	r0, [r4, #444]	; 0x1bc
    1538:	add	r1, r0, #1
    153c:	str	r6, [fp, #-32]	; 0xffffffe0
    1540:	str	r1, [r4, #444]	; 0x1bc
    1544:	mov	r1, #0
    1548:	strb	r1, [r0]
    154c:	ldr	r1, [r8, #8]
    1550:	ldr	r0, [r4, #448]	; 0x1c0
    1554:	cmp	r1, #0
    1558:	beq	16a4 <setContext+0x1fc>
    155c:	ldrb	r9, [r0]
    1560:	ldr	r7, [r4, #512]	; 0x200
    1564:	cmp	r9, #0
    1568:	beq	1594 <setContext+0xec>
    156c:	movw	r6, #16963	; 0x4243
    1570:	add	r3, r0, #1
    1574:	mov	r2, r9
    1578:	movt	r6, #15
    157c:	mul	r7, r7, r6
    1580:	uxtb	r2, r2
    1584:	eor	r7, r7, r2
    1588:	ldrb	r2, [r3], #1
    158c:	cmp	r2, #0
    1590:	bne	157c <setContext+0xd4>
    1594:	ldr	r5, [r8]
    1598:	sub	r2, r1, #1
    159c:	and	r3, r7, r2
    15a0:	ldr	ip, [r5, r3, lsl #2]
    15a4:	cmp	ip, #0
    15a8:	beq	16a4 <setContext+0x1fc>
    15ac:	rsb	r6, r1, #0
    15b0:	lsr	r2, r2, #2
    15b4:	mov	lr, #0
    15b8:	and	r7, r7, r6
    15bc:	str	r2, [sp, #20]
    15c0:	str	r7, [sp, #24]
    15c4:	add	r7, r0, #1
    15c8:	str	r7, [sp, #32]
    15cc:	b	15f0 <setContext+0x148>
    15d0:	tst	lr, #255	; 0xff
    15d4:	beq	1628 <setContext+0x180>
    15d8:	uxtb	r2, lr
    15dc:	subs	r3, r3, r2
    15e0:	addcc	r3, r3, r1
    15e4:	ldr	ip, [r5, r3, lsl #2]
    15e8:	cmp	ip, #0
    15ec:	beq	16a4 <setContext+0x1fc>
    15f0:	ldr	r2, [ip]
    15f4:	ldrb	r6, [r2]
    15f8:	cmp	r9, r6
    15fc:	bne	15d0 <setContext+0x128>
    1600:	ldr	r7, [sp, #32]
    1604:	add	sl, r2, #1
    1608:	mov	r2, r9
    160c:	tst	r2, #255	; 0xff
    1610:	beq	1698 <setContext+0x1f0>
    1614:	ldrb	r2, [r7], #1
    1618:	ldrb	r6, [sl], #1
    161c:	cmp	r2, r6
    1620:	beq	160c <setContext+0x164>
    1624:	b	15d0 <setContext+0x128>
    1628:	ldrb	r2, [r8, #4]
    162c:	ldr	r7, [sp, #24]
    1630:	ldr	r6, [sp, #20]
    1634:	sub	r2, r2, #1
    1638:	and	r2, r6, r7, lsr r2
    163c:	orr	lr, r2, #1
    1640:	b	15d8 <setContext+0x130>
    1644:	ldr	r0, [r4, #444]	; 0x1bc
    1648:	ldr	r1, [r4, #448]	; 0x1c0
    164c:	cmp	r1, r0
    1650:	bne	16c4 <setContext+0x21c>
    1654:	ldr	sl, [sp, #12]
    1658:	b	178c <setContext+0x2e4>
    165c:	ldr	r2, [r4, #440]	; 0x1b8
    1660:	ldr	r1, [r4, #444]	; 0x1bc
    1664:	cmp	r1, r2
    1668:	bne	1684 <setContext+0x1dc>
    166c:	mov	r0, r9
    1670:	bl	6948 <poolGrow>
    1674:	cmp	r0, #0
    1678:	beq	186c <setContext+0x3c4>
    167c:	ldr	r1, [r4, #444]	; 0x1bc
    1680:	ldrb	r0, [r6]
    1684:	add	r2, r1, #1
    1688:	add	r6, r6, #1
    168c:	str	r2, [r4, #444]	; 0x1bc
    1690:	strb	r0, [r1]
    1694:	b	1848 <setContext+0x3a0>
    1698:	cmp	ip, #0
    169c:	movne	r1, #1
    16a0:	strbne	r1, [ip, #32]
    16a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    16a8:	ldr	r9, [sp, #36]	; 0x24
    16ac:	mov	r5, r2
    16b0:	ldrb	r1, [r5], #1
    16b4:	str	r0, [r4, #444]	; 0x1bc
    16b8:	cmp	r1, #0
    16bc:	moveq	r5, r2
    16c0:	b	1844 <setContext+0x39c>
    16c4:	ldr	r1, [r4, #440]	; 0x1b8
    16c8:	cmp	r0, r1
    16cc:	bne	16e4 <setContext+0x23c>
    16d0:	mov	r0, r9
    16d4:	bl	6948 <poolGrow>
    16d8:	cmp	r0, #0
    16dc:	beq	186c <setContext+0x3c4>
    16e0:	ldr	r0, [r4, #444]	; 0x1bc
    16e4:	add	r1, r0, #1
    16e8:	mov	r5, #0
    16ec:	mov	r3, #8
    16f0:	str	r1, [r4, #444]	; 0x1bc
    16f4:	strb	r5, [r0]
    16f8:	ldr	r1, [sp, #8]
    16fc:	mov	r0, r4
    1700:	ldr	r2, [r4, #448]	; 0x1c0
    1704:	bl	6054 <lookup>
    1708:	cmp	r0, #0
    170c:	beq	1860 <setContext+0x3b8>
    1710:	mov	sl, r0
    1714:	ldr	r0, [r4, #448]	; 0x1c0
    1718:	ldr	r7, [sl]
    171c:	cmp	r7, r0
    1720:	bne	1788 <setContext+0x2e0>
    1724:	b	1744 <setContext+0x29c>
    1728:	ldrb	r1, [r7]
    172c:	add	r2, r0, #1
    1730:	str	r2, [r8, #92]	; 0x5c
    1734:	strb	r1, [r0]
    1738:	ldrb	r0, [r7], #1
    173c:	cmp	r0, #0
    1740:	beq	176c <setContext+0x2c4>
    1744:	ldr	r1, [r8, #88]	; 0x58
    1748:	ldr	r0, [r8, #92]	; 0x5c
    174c:	cmp	r0, r1
    1750:	bne	1728 <setContext+0x280>
    1754:	ldr	r0, [sp, #28]
    1758:	bl	6948 <poolGrow>
    175c:	cmp	r0, #0
    1760:	beq	1874 <setContext+0x3cc>
    1764:	ldr	r0, [r8, #92]	; 0x5c
    1768:	b	1728 <setContext+0x280>
    176c:	ldr	r1, [r8, #96]	; 0x60
    1770:	ldr	r0, [r8, #92]	; 0x5c
    1774:	cmp	r1, #0
    1778:	str	r0, [r8, #96]	; 0x60
    177c:	str	r1, [sl]
    1780:	beq	1860 <setContext+0x3b8>
    1784:	ldr	r0, [r4, #448]	; 0x1c0
    1788:	str	r0, [r4, #444]	; 0x1bc
    178c:	add	r6, r6, #1
    1790:	b	17c8 <setContext+0x320>
    1794:	cmp	r0, r2
    1798:	bne	17b4 <setContext+0x30c>
    179c:	mov	r0, r9
    17a0:	bl	6948 <poolGrow>
    17a4:	cmp	r0, #0
    17a8:	beq	186c <setContext+0x3c4>
    17ac:	ldr	r0, [r4, #444]	; 0x1bc
    17b0:	ldrb	r1, [r6]
    17b4:	add	r2, r0, #1
    17b8:	add	r6, r6, #1
    17bc:	str	r2, [r4, #444]	; 0x1bc
    17c0:	strb	r1, [r0]
    17c4:	ldr	r0, [r4, #444]	; 0x1bc
    17c8:	ldrb	r1, [r6]
    17cc:	ldr	r2, [r4, #440]	; 0x1b8
    17d0:	cmp	r1, #0
    17d4:	cmpne	r1, #12
    17d8:	bne	1794 <setContext+0x2ec>
    17dc:	cmp	r0, r2
    17e0:	bne	17f8 <setContext+0x350>
    17e4:	mov	r0, r9
    17e8:	bl	6948 <poolGrow>
    17ec:	cmp	r0, #0
    17f0:	beq	186c <setContext+0x3c4>
    17f4:	ldr	r0, [r4, #444]	; 0x1bc
    17f8:	add	r1, r0, #1
    17fc:	mov	r5, #0
    1800:	mov	r2, #0
    1804:	str	r1, [r4, #444]	; 0x1bc
    1808:	strb	r5, [r0]
    180c:	ldr	r0, [sp, #16]
    1810:	mov	r1, sl
    1814:	ldr	r3, [r4, #448]	; 0x1c0
    1818:	str	r0, [sp]
    181c:	mov	r0, r4
    1820:	bl	b248 <addBinding>
    1824:	cmp	r0, #0
    1828:	bne	1860 <setContext+0x3b8>
    182c:	ldr	r0, [r4, #448]	; 0x1c0
    1830:	mov	r5, r6
    1834:	str	r0, [r4, #444]	; 0x1bc
    1838:	ldrb	r0, [r5], #1
    183c:	cmp	r0, #0
    1840:	moveq	r5, r6
    1844:	mov	r6, r5
    1848:	ldrb	r0, [r5]
    184c:	cmp	r0, #0
    1850:	beq	185c <setContext+0x3b4>
    1854:	ldrb	r0, [r6]
    1858:	b	14f8 <setContext+0x50>
    185c:	mov	r5, #1
    1860:	mov	r0, r5
    1864:	sub	sp, fp, #28
    1868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    186c:	mov	r5, #0
    1870:	b	1860 <setContext+0x3b8>
    1874:	mov	r5, #0
    1878:	str	r5, [sl]
    187c:	b	1860 <setContext+0x3b8>

00001880 <coda_XML_ParserFree>:
    1880:	cmp	r0, #0
    1884:	bxeq	lr
    1888:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    188c:	add	fp, sp, #24
    1890:	ldr	r5, [r0, #372]	; 0x174
    1894:	mov	r4, r0
    1898:	mov	r8, #0
    189c:	cmp	r5, #0
    18a0:	bne	18d0 <coda_XML_ParserFree+0x50>
    18a4:	b	18c0 <coda_XML_ParserFree+0x40>
    18a8:	ldr	r1, [r4, #20]
    18ac:	mov	r0, r5
    18b0:	blx	r1
    18b4:	mov	r5, r9
    18b8:	cmp	r5, #0
    18bc:	bne	18d0 <coda_XML_ParserFree+0x50>
    18c0:	ldr	r5, [r4, #376]	; 0x178
    18c4:	cmp	r5, #0
    18c8:	beq	1918 <coda_XML_ParserFree+0x98>
    18cc:	str	r8, [r4, #376]	; 0x178
    18d0:	ldr	r1, [r4, #20]
    18d4:	ldr	r0, [r5, #36]	; 0x24
    18d8:	ldr	r9, [r5]
    18dc:	blx	r1
    18e0:	ldr	r6, [r5, #44]	; 0x2c
    18e4:	cmp	r6, #0
    18e8:	beq	18a8 <coda_XML_ParserFree+0x28>
    18ec:	ldr	r1, [r4, #20]
    18f0:	ldr	r0, [r6, #16]
    18f4:	ldr	r7, [r6, #4]
    18f8:	blx	r1
    18fc:	ldr	r1, [r4, #20]
    1900:	mov	r0, r6
    1904:	blx	r1
    1908:	cmp	r7, #0
    190c:	mov	r6, r7
    1910:	bne	18ec <coda_XML_ParserFree+0x6c>
    1914:	b	18a8 <coda_XML_ParserFree+0x28>
    1918:	ldr	r0, [r4, #308]	; 0x134
    191c:	mov	r5, #0
    1920:	cmp	r0, #0
    1924:	beq	1940 <coda_XML_ParserFree+0xc0>
    1928:	ldr	r1, [r4, #20]
    192c:	ldr	r6, [r0, #8]
    1930:	blx	r1
    1934:	mov	r0, r6
    1938:	cmp	r0, #0
    193c:	bne	1928 <coda_XML_ParserFree+0xa8>
    1940:	ldr	r0, [r4, #312]	; 0x138
    1944:	cmp	r0, #0
    1948:	beq	1954 <coda_XML_ParserFree+0xd4>
    194c:	str	r5, [r4, #312]	; 0x138
    1950:	b	1928 <coda_XML_ParserFree+0xa8>
    1954:	ldr	r5, [r4, #384]	; 0x180
    1958:	cmp	r5, #0
    195c:	beq	1988 <coda_XML_ParserFree+0x108>
    1960:	ldr	r1, [r4, #20]
    1964:	ldr	r0, [r5, #16]
    1968:	ldr	r6, [r5, #4]
    196c:	blx	r1
    1970:	ldr	r1, [r4, #20]
    1974:	mov	r0, r5
    1978:	blx	r1
    197c:	cmp	r6, #0
    1980:	mov	r5, r6
    1984:	bne	1960 <coda_XML_ParserFree+0xe0>
    1988:	ldr	r5, [r4, #380]	; 0x17c
    198c:	cmp	r5, #0
    1990:	beq	19bc <coda_XML_ParserFree+0x13c>
    1994:	ldr	r1, [r4, #20]
    1998:	ldr	r0, [r5, #16]
    199c:	ldr	r6, [r5, #4]
    19a0:	blx	r1
    19a4:	ldr	r1, [r4, #20]
    19a8:	mov	r0, r5
    19ac:	blx	r1
    19b0:	cmp	r6, #0
    19b4:	mov	r5, r6
    19b8:	bne	1994 <coda_XML_ParserFree+0x114>
    19bc:	ldr	r0, [r4, #432]	; 0x1b0
    19c0:	cmp	r0, #0
    19c4:	beq	19e4 <coda_XML_ParserFree+0x164>
    19c8:	ldr	r1, [r4, #452]	; 0x1c4
    19cc:	ldr	r5, [r0]
    19d0:	ldr	r1, [r1, #8]
    19d4:	blx	r1
    19d8:	cmp	r5, #0
    19dc:	mov	r0, r5
    19e0:	bne	19c8 <coda_XML_ParserFree+0x148>
    19e4:	ldr	r0, [r4, #436]	; 0x1b4
    19e8:	cmp	r0, #0
    19ec:	beq	1a0c <coda_XML_ParserFree+0x18c>
    19f0:	ldr	r1, [r4, #452]	; 0x1c4
    19f4:	ldr	r5, [r0]
    19f8:	ldr	r1, [r1, #8]
    19fc:	blx	r1
    1a00:	cmp	r5, #0
    1a04:	mov	r0, r5
    1a08:	bne	19f0 <coda_XML_ParserFree+0x170>
    1a0c:	ldr	r0, [r4, #456]	; 0x1c8
    1a10:	cmp	r0, #0
    1a14:	beq	1a34 <coda_XML_ParserFree+0x1b4>
    1a18:	ldr	r1, [r4, #476]	; 0x1dc
    1a1c:	ldr	r5, [r0]
    1a20:	ldr	r1, [r1, #8]
    1a24:	blx	r1
    1a28:	cmp	r5, #0
    1a2c:	mov	r0, r5
    1a30:	bne	1a18 <coda_XML_ParserFree+0x198>
    1a34:	ldr	r0, [r4, #460]	; 0x1cc
    1a38:	cmp	r0, #0
    1a3c:	beq	1a5c <coda_XML_ParserFree+0x1dc>
    1a40:	ldr	r1, [r4, #476]	; 0x1dc
    1a44:	ldr	r5, [r0]
    1a48:	ldr	r1, [r1, #8]
    1a4c:	blx	r1
    1a50:	cmp	r5, #0
    1a54:	mov	r0, r5
    1a58:	bne	1a40 <coda_XML_ParserFree+0x1c0>
    1a5c:	ldrb	r0, [r4, #504]	; 0x1f8
    1a60:	cmp	r0, #0
    1a64:	bne	1cec <coda_XML_ParserFree+0x46c>
    1a68:	ldr	r5, [r4, #364]	; 0x16c
    1a6c:	cmp	r5, #0
    1a70:	beq	1cec <coda_XML_ParserFree+0x46c>
    1a74:	ldr	r0, [r5, #28]
    1a78:	ldr	r8, [r4, #492]	; 0x1ec
    1a7c:	ldr	r7, [r5, #20]
    1a80:	lsl	r6, r0, #2
    1a84:	cmp	r6, #0
    1a88:	bne	1a9c <coda_XML_ParserFree+0x21c>
    1a8c:	b	1acc <coda_XML_ParserFree+0x24c>
    1a90:	sub	r6, r6, #4
    1a94:	cmp	r6, #0
    1a98:	beq	1acc <coda_XML_ParserFree+0x24c>
    1a9c:	ldr	r0, [r7], #4
    1aa0:	cmp	r0, #0
    1aa4:	beq	1a90 <coda_XML_ParserFree+0x210>
    1aa8:	ldr	r1, [r0, #16]
    1aac:	cmp	r1, #0
    1ab0:	beq	1a90 <coda_XML_ParserFree+0x210>
    1ab4:	ldr	r0, [r0, #20]
    1ab8:	ldr	r1, [r4, #20]
    1abc:	blx	r1
    1ac0:	sub	r6, r6, #4
    1ac4:	cmp	r6, #0
    1ac8:	bne	1a9c <coda_XML_ParserFree+0x21c>
    1acc:	ldr	r1, [r5, #16]
    1ad0:	ldr	r2, [r5, #8]
    1ad4:	ldr	r0, [r5]
    1ad8:	ldr	r1, [r1, #8]
    1adc:	cmp	r2, #0
    1ae0:	beq	1b0c <coda_XML_ParserFree+0x28c>
    1ae4:	mov	r6, #0
    1ae8:	ldr	r0, [r0, r6, lsl #2]
    1aec:	blx	r1
    1af0:	ldr	r1, [r5, #16]
    1af4:	ldr	r2, [r5, #8]
    1af8:	ldr	r0, [r5]
    1afc:	add	r6, r6, #1
    1b00:	ldr	r1, [r1, #8]
    1b04:	cmp	r6, r2
    1b08:	bcc	1ae8 <coda_XML_ParserFree+0x268>
    1b0c:	blx	r1
    1b10:	ldr	r1, [r5, #148]	; 0x94
    1b14:	ldr	r2, [r5, #140]	; 0x8c
    1b18:	ldr	r0, [r5, #132]	; 0x84
    1b1c:	ldr	r1, [r1, #8]
    1b20:	cmp	r2, #0
    1b24:	beq	1b50 <coda_XML_ParserFree+0x2d0>
    1b28:	mov	r6, #0
    1b2c:	ldr	r0, [r0, r6, lsl #2]
    1b30:	blx	r1
    1b34:	ldr	r1, [r5, #148]	; 0x94
    1b38:	ldr	r2, [r5, #140]	; 0x8c
    1b3c:	ldr	r0, [r5, #132]	; 0x84
    1b40:	add	r6, r6, #1
    1b44:	ldr	r1, [r1, #8]
    1b48:	cmp	r6, r2
    1b4c:	bcc	1b2c <coda_XML_ParserFree+0x2ac>
    1b50:	blx	r1
    1b54:	ldr	r1, [r5, #36]	; 0x24
    1b58:	ldr	r2, [r5, #28]
    1b5c:	ldr	r0, [r5, #20]
    1b60:	ldr	r1, [r1, #8]
    1b64:	cmp	r2, #0
    1b68:	beq	1b94 <coda_XML_ParserFree+0x314>
    1b6c:	mov	r6, #0
    1b70:	ldr	r0, [r0, r6, lsl #2]
    1b74:	blx	r1
    1b78:	ldr	r1, [r5, #36]	; 0x24
    1b7c:	ldr	r2, [r5, #28]
    1b80:	ldr	r0, [r5, #20]
    1b84:	add	r6, r6, #1
    1b88:	ldr	r1, [r1, #8]
    1b8c:	cmp	r6, r2
    1b90:	bcc	1b70 <coda_XML_ParserFree+0x2f0>
    1b94:	blx	r1
    1b98:	ldr	r1, [r5, #56]	; 0x38
    1b9c:	ldr	r2, [r5, #48]	; 0x30
    1ba0:	ldr	r0, [r5, #40]	; 0x28
    1ba4:	ldr	r1, [r1, #8]
    1ba8:	cmp	r2, #0
    1bac:	beq	1bd8 <coda_XML_ParserFree+0x358>
    1bb0:	mov	r6, #0
    1bb4:	ldr	r0, [r0, r6, lsl #2]
    1bb8:	blx	r1
    1bbc:	ldr	r1, [r5, #56]	; 0x38
    1bc0:	ldr	r2, [r5, #48]	; 0x30
    1bc4:	ldr	r0, [r5, #40]	; 0x28
    1bc8:	add	r6, r6, #1
    1bcc:	ldr	r1, [r1, #8]
    1bd0:	cmp	r6, r2
    1bd4:	bcc	1bb4 <coda_XML_ParserFree+0x334>
    1bd8:	blx	r1
    1bdc:	ldr	r1, [r5, #76]	; 0x4c
    1be0:	ldr	r2, [r5, #68]	; 0x44
    1be4:	ldr	r0, [r5, #60]	; 0x3c
    1be8:	ldr	r1, [r1, #8]
    1bec:	cmp	r2, #0
    1bf0:	beq	1c1c <coda_XML_ParserFree+0x39c>
    1bf4:	mov	r6, #0
    1bf8:	ldr	r0, [r0, r6, lsl #2]
    1bfc:	blx	r1
    1c00:	ldr	r1, [r5, #76]	; 0x4c
    1c04:	ldr	r2, [r5, #68]	; 0x44
    1c08:	ldr	r0, [r5, #60]	; 0x3c
    1c0c:	add	r6, r6, #1
    1c10:	ldr	r1, [r1, #8]
    1c14:	cmp	r6, r2
    1c18:	bcc	1bf8 <coda_XML_ParserFree+0x378>
    1c1c:	blx	r1
    1c20:	ldr	r0, [r5, #80]	; 0x50
    1c24:	cmp	r0, #0
    1c28:	beq	1c48 <coda_XML_ParserFree+0x3c8>
    1c2c:	ldr	r1, [r5, #100]	; 0x64
    1c30:	ldr	r6, [r0]
    1c34:	ldr	r1, [r1, #8]
    1c38:	blx	r1
    1c3c:	cmp	r6, #0
    1c40:	mov	r0, r6
    1c44:	bne	1c2c <coda_XML_ParserFree+0x3ac>
    1c48:	ldr	r0, [r5, #84]	; 0x54
    1c4c:	cmp	r0, #0
    1c50:	beq	1c70 <coda_XML_ParserFree+0x3f0>
    1c54:	ldr	r1, [r5, #100]	; 0x64
    1c58:	ldr	r6, [r0]
    1c5c:	ldr	r1, [r1, #8]
    1c60:	blx	r1
    1c64:	cmp	r6, #0
    1c68:	mov	r0, r6
    1c6c:	bne	1c54 <coda_XML_ParserFree+0x3d4>
    1c70:	ldr	r0, [r5, #104]	; 0x68
    1c74:	cmp	r0, #0
    1c78:	beq	1c98 <coda_XML_ParserFree+0x418>
    1c7c:	ldr	r1, [r5, #124]	; 0x7c
    1c80:	ldr	r6, [r0]
    1c84:	ldr	r1, [r1, #8]
    1c88:	blx	r1
    1c8c:	cmp	r6, #0
    1c90:	mov	r0, r6
    1c94:	bne	1c7c <coda_XML_ParserFree+0x3fc>
    1c98:	ldr	r0, [r5, #108]	; 0x6c
    1c9c:	cmp	r0, #0
    1ca0:	beq	1cc0 <coda_XML_ParserFree+0x440>
    1ca4:	ldr	r1, [r5, #124]	; 0x7c
    1ca8:	ldr	r6, [r0]
    1cac:	ldr	r1, [r1, #8]
    1cb0:	blx	r1
    1cb4:	cmp	r6, #0
    1cb8:	mov	r0, r6
    1cbc:	bne	1ca4 <coda_XML_ParserFree+0x424>
    1cc0:	cmp	r8, #0
    1cc4:	bne	1ce0 <coda_XML_ParserFree+0x460>
    1cc8:	ldr	r0, [r5, #184]	; 0xb8
    1ccc:	ldr	r1, [r4, #20]
    1cd0:	blx	r1
    1cd4:	ldr	r0, [r5, #164]	; 0xa4
    1cd8:	ldr	r1, [r4, #20]
    1cdc:	blx	r1
    1ce0:	ldr	r1, [r4, #20]
    1ce4:	mov	r0, r5
    1ce8:	blx	r1
    1cec:	ldr	r1, [r4, #20]
    1cf0:	ldr	r0, [r4, #400]	; 0x190
    1cf4:	blx	r1
    1cf8:	ldr	r1, [r4, #20]
    1cfc:	ldr	r0, [r4, #480]	; 0x1e0
    1d00:	blx	r1
    1d04:	ldr	r0, [r4, #8]
    1d08:	ldr	r1, [r4, #20]
    1d0c:	blx	r1
    1d10:	ldr	r1, [r4, #20]
    1d14:	ldr	r0, [r4, #52]	; 0x34
    1d18:	blx	r1
    1d1c:	ldr	r1, [r4, #20]
    1d20:	ldr	r0, [r4, #404]	; 0x194
    1d24:	blx	r1
    1d28:	ldr	r1, [r4, #20]
    1d2c:	ldr	r0, [r4, #248]	; 0xf8
    1d30:	blx	r1
    1d34:	ldr	r1, [r4, #260]	; 0x104
    1d38:	cmp	r1, #0
    1d3c:	beq	1d48 <coda_XML_ParserFree+0x4c8>
    1d40:	ldr	r0, [r4, #252]	; 0xfc
    1d44:	blx	r1
    1d48:	ldr	r1, [r4, #20]
    1d4c:	mov	r0, r4
    1d50:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1d54:	bx	r1

00001d58 <externalEntityInitProcessor>:
    1d58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1d5c:	add	fp, sp, #24
    1d60:	sub	sp, sp, #8
    1d64:	mov	r5, r0
    1d68:	ldrb	r0, [r0, #244]	; 0xf4
    1d6c:	mov	r7, r2
    1d70:	mov	r6, r1
    1d74:	movw	r1, #0
    1d78:	mov	r8, r3
    1d7c:	movw	r3, #0
    1d80:	ldr	r2, [r5, #240]	; 0xf0
    1d84:	movt	r1, #0
    1d88:	movt	r3, #0
    1d8c:	cmp	r0, #0
    1d90:	add	r0, r5, #156	; 0x9c
    1d94:	moveq	r3, r1
    1d98:	add	r1, r5, #152	; 0x98
    1d9c:	blx	r3
    1da0:	cmp	r0, #0
    1da4:	beq	1e2c <externalEntityInitProcessor+0xd4>
    1da8:	movw	r0, #0
    1dac:	add	r3, sp, #4
    1db0:	mov	r1, r6
    1db4:	mov	r2, r7
    1db8:	movt	r0, #0
    1dbc:	str	r0, [r5, #288]	; 0x120
    1dc0:	str	r6, [sp, #4]
    1dc4:	ldr	r0, [r5, #152]	; 0x98
    1dc8:	ldr	r4, [r0, #4]
    1dcc:	blx	r4
    1dd0:	cmn	r0, #2
    1dd4:	beq	1e48 <externalEntityInitProcessor+0xf0>
    1dd8:	cmn	r0, #1
    1ddc:	beq	1e64 <externalEntityInitProcessor+0x10c>
    1de0:	cmp	r0, #14
    1de4:	bne	1e04 <externalEntityInitProcessor+0xac>
    1de8:	ldr	r6, [sp, #4]
    1dec:	cmp	r6, r7
    1df0:	bne	1e04 <externalEntityInitProcessor+0xac>
    1df4:	ldrb	r0, [r5, #500]	; 0x1f4
    1df8:	mov	r6, r7
    1dfc:	cmp	r0, #0
    1e00:	beq	1e90 <externalEntityInitProcessor+0x138>
    1e04:	movw	r0, #0
    1e08:	mov	r1, r6
    1e0c:	mov	r2, r7
    1e10:	mov	r3, r8
    1e14:	movt	r0, #0
    1e18:	str	r0, [r5, #288]	; 0x120
    1e1c:	mov	r0, r5
    1e20:	bl	c168 <externalEntityInitProcessor3>
    1e24:	sub	sp, fp, #24
    1e28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e2c:	ldr	r1, [r5, #240]	; 0xf0
    1e30:	mov	r0, r5
    1e34:	bl	2cc8 <handleUnknownEncoding>
    1e38:	cmp	r0, #0
    1e3c:	beq	1da8 <externalEntityInitProcessor+0x50>
    1e40:	sub	sp, fp, #24
    1e44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e48:	ldrb	r0, [r5, #500]	; 0x1f4
    1e4c:	cmp	r0, #0
    1e50:	beq	1e80 <externalEntityInitProcessor+0x128>
    1e54:	str	r6, [r5, #296]	; 0x128
    1e58:	mov	r0, #6
    1e5c:	sub	sp, fp, #24
    1e60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e64:	ldrb	r0, [r5, #500]	; 0x1f4
    1e68:	cmp	r0, #0
    1e6c:	beq	1e80 <externalEntityInitProcessor+0x128>
    1e70:	str	r6, [r5, #296]	; 0x128
    1e74:	mov	r0, #5
    1e78:	sub	sp, fp, #24
    1e7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e80:	str	r6, [r8]
    1e84:	mov	r0, #0
    1e88:	sub	sp, fp, #24
    1e8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1e90:	str	r7, [r8]
    1e94:	b	1e84 <externalEntityInitProcessor+0x12c>

00001e98 <externalParEntInitProcessor>:
    1e98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1e9c:	add	fp, sp, #24
    1ea0:	sub	sp, sp, #24
    1ea4:	mov	r7, r0
    1ea8:	ldrb	r0, [r0, #244]	; 0xf4
    1eac:	mov	r9, r2
    1eb0:	mov	r6, r1
    1eb4:	movw	r1, #0
    1eb8:	mov	r8, r3
    1ebc:	movw	r3, #0
    1ec0:	ldr	r2, [r7, #240]	; 0xf0
    1ec4:	movt	r1, #0
    1ec8:	add	r5, r7, #152	; 0x98
    1ecc:	movt	r3, #0
    1ed0:	cmp	r0, #0
    1ed4:	add	r0, r7, #156	; 0x9c
    1ed8:	moveq	r3, r1
    1edc:	mov	r1, r5
    1ee0:	blx	r3
    1ee4:	cmp	r0, #0
    1ee8:	beq	1f2c <externalParEntInitProcessor+0x94>
    1eec:	ldr	r0, [r7, #364]	; 0x16c
    1ef0:	mov	r1, #1
    1ef4:	strb	r1, [r0, #131]	; 0x83
    1ef8:	ldr	r0, [r7, #284]	; 0x11c
    1efc:	cmp	r0, #0
    1f00:	beq	1f48 <externalParEntInitProcessor+0xb0>
    1f04:	movw	r0, #0
    1f08:	mov	r1, r6
    1f0c:	mov	r2, r9
    1f10:	mov	r3, r8
    1f14:	movt	r0, #0
    1f18:	str	r0, [r7, #288]	; 0x120
    1f1c:	mov	r0, r7
    1f20:	sub	sp, fp, #24
    1f24:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    1f28:	b	c26c <entityValueInitProcessor>
    1f2c:	ldr	r1, [r7, #240]	; 0xf0
    1f30:	mov	r0, r7
    1f34:	bl	2cc8 <handleUnknownEncoding>
    1f38:	cmp	r0, #0
    1f3c:	beq	1eec <externalParEntInitProcessor+0x54>
    1f40:	sub	sp, fp, #24
    1f44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1f48:	movw	r0, #0
    1f4c:	add	r3, sp, #20
    1f50:	mov	r1, r6
    1f54:	mov	r2, r9
    1f58:	movt	r0, #0
    1f5c:	str	r0, [r7, #288]	; 0x120
    1f60:	str	r6, [sp, #20]
    1f64:	ldr	r0, [r7, #152]	; 0x98
    1f68:	ldr	r4, [r0]
    1f6c:	blx	r4
    1f70:	cmp	r0, #0
    1f74:	ble	1fa0 <externalParEntInitProcessor+0x108>
    1f78:	cmp	r0, #14
    1f7c:	bne	1fd8 <externalParEntInitProcessor+0x140>
    1f80:	ldr	r0, [r5]
    1f84:	ldr	r6, [sp, #20]
    1f88:	add	r3, sp, #20
    1f8c:	mov	r2, r9
    1f90:	ldr	r5, [r0]
    1f94:	mov	r1, r6
    1f98:	blx	r5
    1f9c:	b	1fd8 <externalParEntInitProcessor+0x140>
    1fa0:	beq	1fc0 <externalParEntInitProcessor+0x128>
    1fa4:	ldrb	r1, [r7, #500]	; 0x1f4
    1fa8:	cmp	r1, #0
    1fac:	bne	1fc0 <externalParEntInitProcessor+0x128>
    1fb0:	str	r6, [r8]
    1fb4:	mov	r0, #0
    1fb8:	sub	sp, fp, #24
    1fbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1fc0:	add	r1, r0, #2
    1fc4:	cmp	r1, #3
    1fc8:	bcs	1fd8 <externalParEntInitProcessor+0x140>
    1fcc:	rsb	r0, r0, #4
    1fd0:	sub	sp, fp, #24
    1fd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1fd8:	movw	r1, #0
    1fdc:	movt	r1, #0
    1fe0:	str	r1, [r7, #288]	; 0x120
    1fe4:	ldrb	r2, [r7, #500]	; 0x1f4
    1fe8:	ldr	r1, [r7, #152]	; 0x98
    1fec:	ldr	r3, [sp, #20]
    1ff0:	stm	sp, {r0, r3, r8}
    1ff4:	mov	r0, r7
    1ff8:	mov	r3, r9
    1ffc:	clz	r2, r2
    2000:	lsr	r2, r2, #5
    2004:	str	r2, [sp, #12]
    2008:	mov	r2, r6
    200c:	bl	2dc0 <doProlog>
    2010:	sub	sp, fp, #24
    2014:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00002018 <coda_XML_UseParserAsHandlerArg>:
    2018:	str	r0, [r0, #4]
    201c:	bx	lr

00002020 <coda_XML_UseForeignDTD>:
    2020:	ldr	r2, [r0, #496]	; 0x1f0
    2024:	orr	r3, r2, #2
    2028:	mov	r2, #26
    202c:	cmp	r3, #3
    2030:	movne	r2, #0
    2034:	strbne	r1, [r0, #505]	; 0x1f9
    2038:	mov	r0, r2
    203c:	bx	lr

00002040 <coda_XML_SetReturnNSTriplet>:
    2040:	ldr	r2, [r0, #496]	; 0x1f0
    2044:	orr	r2, r2, #2
    2048:	cmp	r2, #3
    204c:	bxeq	lr
    2050:	cmp	r1, #0
    2054:	movwne	r1, #1
    2058:	strb	r1, [r0, #245]	; 0xf5
    205c:	bx	lr

00002060 <coda_XML_SetUserData>:
    2060:	ldrd	r2, [r0]
    2064:	str	r1, [r0]
    2068:	cmp	r3, r2
    206c:	streq	r1, [r0, #4]
    2070:	bx	lr

00002074 <coda_XML_SetBase>:
    2074:	push	{r4, r5, r6, r7, fp, lr}
    2078:	add	fp, sp, #16
    207c:	mov	r4, r0
    2080:	cmp	r1, #0
    2084:	beq	20f8 <coda_XML_SetBase+0x84>
    2088:	ldr	r7, [r4, #364]	; 0x16c
    208c:	mov	r5, r1
    2090:	add	r6, r7, #80	; 0x50
    2094:	b	20b4 <coda_XML_SetBase+0x40>
    2098:	ldrb	r1, [r5]
    209c:	add	r2, r0, #1
    20a0:	str	r2, [r7, #92]	; 0x5c
    20a4:	strb	r1, [r0]
    20a8:	ldrb	r0, [r5], #1
    20ac:	cmp	r0, #0
    20b0:	beq	20dc <coda_XML_SetBase+0x68>
    20b4:	ldr	r1, [r7, #88]	; 0x58
    20b8:	ldr	r0, [r7, #92]	; 0x5c
    20bc:	cmp	r0, r1
    20c0:	bne	2098 <coda_XML_SetBase+0x24>
    20c4:	mov	r0, r6
    20c8:	bl	6948 <poolGrow>
    20cc:	cmp	r0, #0
    20d0:	beq	20f0 <coda_XML_SetBase+0x7c>
    20d4:	ldr	r0, [r7, #92]	; 0x5c
    20d8:	b	2098 <coda_XML_SetBase+0x24>
    20dc:	ldr	r0, [r7, #96]	; 0x60
    20e0:	ldr	r1, [r7, #92]	; 0x5c
    20e4:	cmp	r0, #0
    20e8:	str	r1, [r7, #96]	; 0x60
    20ec:	bne	20fc <coda_XML_SetBase+0x88>
    20f0:	mov	r0, #0
    20f4:	pop	{r4, r5, r6, r7, fp, pc}
    20f8:	mov	r0, #0
    20fc:	str	r0, [r4, #368]	; 0x170
    2100:	mov	r0, #1
    2104:	pop	{r4, r5, r6, r7, fp, pc}

00002108 <coda_XML_GetBase>:
    2108:	ldr	r0, [r0, #368]	; 0x170
    210c:	bx	lr

00002110 <coda_XML_GetSpecifiedAttributeCount>:
    2110:	ldr	r0, [r0, #392]	; 0x188
    2114:	bx	lr

00002118 <coda_XML_GetIdAttributeIndex>:
    2118:	ldr	r0, [r0, #396]	; 0x18c
    211c:	bx	lr

00002120 <coda_XML_SetElementHandler>:
    2120:	str	r1, [r0, #60]	; 0x3c
    2124:	str	r2, [r0, #64]	; 0x40
    2128:	bx	lr

0000212c <coda_XML_SetStartElementHandler>:
    212c:	str	r1, [r0, #60]	; 0x3c
    2130:	bx	lr

00002134 <coda_XML_SetEndElementHandler>:
    2134:	str	r1, [r0, #64]	; 0x40
    2138:	bx	lr

0000213c <coda_XML_SetCharacterDataHandler>:
    213c:	str	r1, [r0, #68]	; 0x44
    2140:	bx	lr

00002144 <coda_XML_SetProcessingInstructionHandler>:
    2144:	str	r1, [r0, #72]	; 0x48
    2148:	bx	lr

0000214c <coda_XML_SetCommentHandler>:
    214c:	str	r1, [r0, #76]	; 0x4c
    2150:	bx	lr

00002154 <coda_XML_SetCdataSectionHandler>:
    2154:	mov	r3, r2
    2158:	mov	r2, r1
    215c:	strd	r2, [r0, #80]	; 0x50
    2160:	bx	lr

00002164 <coda_XML_SetStartCdataSectionHandler>:
    2164:	str	r1, [r0, #80]	; 0x50
    2168:	bx	lr

0000216c <coda_XML_SetEndCdataSectionHandler>:
    216c:	str	r1, [r0, #84]	; 0x54
    2170:	bx	lr

00002174 <coda_XML_SetDefaultHandler>:
    2174:	mov	r2, #0
    2178:	strb	r2, [r0, #316]	; 0x13c
    217c:	str	r1, [r0, #88]	; 0x58
    2180:	bx	lr

00002184 <coda_XML_SetDefaultHandlerExpand>:
    2184:	mov	r2, #1
    2188:	strb	r2, [r0, #316]	; 0x13c
    218c:	str	r1, [r0, #88]	; 0x58
    2190:	bx	lr

00002194 <coda_XML_SetDoctypeDeclHandler>:
    2194:	str	r1, [r0, #92]	; 0x5c
    2198:	str	r2, [r0, #96]	; 0x60
    219c:	bx	lr

000021a0 <coda_XML_SetStartDoctypeDeclHandler>:
    21a0:	str	r1, [r0, #92]	; 0x5c
    21a4:	bx	lr

000021a8 <coda_XML_SetEndDoctypeDeclHandler>:
    21a8:	str	r1, [r0, #96]	; 0x60
    21ac:	bx	lr

000021b0 <coda_XML_SetUnparsedEntityDeclHandler>:
    21b0:	str	r1, [r0, #100]	; 0x64
    21b4:	bx	lr

000021b8 <coda_XML_SetNotationDeclHandler>:
    21b8:	str	r1, [r0, #104]	; 0x68
    21bc:	bx	lr

000021c0 <coda_XML_SetNamespaceDeclHandler>:
    21c0:	str	r1, [r0, #108]	; 0x6c
    21c4:	str	r2, [r0, #112]	; 0x70
    21c8:	bx	lr

000021cc <coda_XML_SetStartNamespaceDeclHandler>:
    21cc:	str	r1, [r0, #108]	; 0x6c
    21d0:	bx	lr

000021d4 <coda_XML_SetEndNamespaceDeclHandler>:
    21d4:	str	r1, [r0, #112]	; 0x70
    21d8:	bx	lr

000021dc <coda_XML_SetNotStandaloneHandler>:
    21dc:	str	r1, [r0, #116]	; 0x74
    21e0:	bx	lr

000021e4 <coda_XML_SetExternalEntityRefHandler>:
    21e4:	str	r1, [r0, #120]	; 0x78
    21e8:	bx	lr

000021ec <coda_XML_SetExternalEntityRefHandlerArg>:
    21ec:	cmp	r1, #0
    21f0:	streq	r0, [r0, #124]	; 0x7c
    21f4:	strne	r1, [r0, #124]	; 0x7c
    21f8:	bx	lr

000021fc <coda_XML_SetSkippedEntityHandler>:
    21fc:	str	r1, [r0, #128]	; 0x80
    2200:	bx	lr

00002204 <coda_XML_SetUnknownEncodingHandler>:
    2204:	str	r2, [r0, #256]	; 0x100
    2208:	str	r1, [r0, #132]	; 0x84
    220c:	bx	lr

00002210 <coda_XML_SetElementDeclHandler>:
    2210:	str	r1, [r0, #136]	; 0x88
    2214:	bx	lr

00002218 <coda_XML_SetAttlistDeclHandler>:
    2218:	str	r1, [r0, #140]	; 0x8c
    221c:	bx	lr

00002220 <coda_XML_SetEntityDeclHandler>:
    2220:	str	r1, [r0, #144]	; 0x90
    2224:	bx	lr

00002228 <coda_XML_SetXmlDeclHandler>:
    2228:	str	r1, [r0, #148]	; 0x94
    222c:	bx	lr

00002230 <coda_XML_SetParamEntityParsing>:
    2230:	ldr	r2, [r0, #496]	; 0x1f0
    2234:	orr	r3, r2, #2
    2238:	mov	r2, #0
    223c:	cmp	r3, #3
    2240:	movne	r2, #1
    2244:	strne	r1, [r0, #508]	; 0x1fc
    2248:	mov	r0, r2
    224c:	bx	lr

00002250 <coda_XML_SetHashSalt>:
    2250:	ldr	r2, [r0, #496]	; 0x1f0
    2254:	orr	r3, r2, #2
    2258:	mov	r2, #0
    225c:	cmp	r3, #3
    2260:	movne	r2, #1
    2264:	strne	r1, [r0, #512]	; 0x200
    2268:	mov	r0, r2
    226c:	bx	lr

00002270 <coda_XML_Parse>:
    2270:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2274:	add	fp, sp, #24
    2278:	mov	r4, r0
    227c:	ldr	r0, [r0, #496]	; 0x1f0
    2280:	mov	r5, r3
    2284:	mov	r6, r2
    2288:	mov	r8, r1
    228c:	cmp	r0, #0
    2290:	beq	22ac <coda_XML_Parse+0x3c>
    2294:	cmp	r0, #2
    2298:	beq	22fc <coda_XML_Parse+0x8c>
    229c:	cmp	r0, #3
    22a0:	bne	22b8 <coda_XML_Parse+0x48>
    22a4:	mov	r0, #33	; 0x21
    22a8:	b	2300 <coda_XML_Parse+0x90>
    22ac:	ldr	r0, [r4, #492]	; 0x1ec
    22b0:	cmp	r0, #0
    22b4:	beq	2360 <coda_XML_Parse+0xf0>
    22b8:	mov	r7, #1
    22bc:	cmp	r6, #0
    22c0:	str	r7, [r4, #496]	; 0x1f0
    22c4:	beq	2310 <coda_XML_Parse+0xa0>
    22c8:	mov	r0, r4
    22cc:	mov	r1, r6
    22d0:	bl	240c <coda_XML_GetBuffer>
    22d4:	cmp	r0, #0
    22d8:	beq	2304 <coda_XML_Parse+0x94>
    22dc:	mov	r1, r8
    22e0:	mov	r2, r6
    22e4:	bl	0 <memcpy>
    22e8:	mov	r0, r4
    22ec:	mov	r1, r6
    22f0:	mov	r2, r5
    22f4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    22f8:	b	2598 <coda_XML_ParseBuffer>
    22fc:	mov	r0, #36	; 0x24
    2300:	str	r0, [r4, #292]	; 0x124
    2304:	mov	r7, #0
    2308:	mov	r0, r7
    230c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2310:	cmp	r5, #0
    2314:	strb	r5, [r4, #500]	; 0x1f4
    2318:	beq	23fc <coda_XML_Parse+0x18c>
    231c:	mov	r3, r4
    2320:	mov	r0, r4
    2324:	ldr	r1, [r3, #24]!
    2328:	str	r1, [r4, #304]	; 0x130
    232c:	ldr	r2, [r4, #28]
    2330:	ldr	r6, [r4, #288]	; 0x120
    2334:	str	r2, [r4, #48]	; 0x30
    2338:	blx	r6
    233c:	cmp	r0, #0
    2340:	str	r0, [r4, #292]	; 0x124
    2344:	beq	23b4 <coda_XML_Parse+0x144>
    2348:	movw	r0, #0
    234c:	movt	r0, #0
    2350:	str	r0, [r4, #288]	; 0x120
    2354:	ldr	r0, [r4, #296]	; 0x128
    2358:	str	r0, [r4, #300]	; 0x12c
    235c:	b	2304 <coda_XML_Parse+0x94>
    2360:	ldr	r0, [r4, #512]	; 0x200
    2364:	cmp	r0, #0
    2368:	bne	2388 <coda_XML_Parse+0x118>
    236c:	mov	r0, #0
    2370:	bl	0 <time>
    2374:	cmn	r0, #1
    2378:	addeq	r0, r0, #1
    237c:	bl	0 <srand>
    2380:	bl	0 <rand>
    2384:	str	r0, [r4, #512]	; 0x200
    2388:	ldrb	r0, [r4, #244]	; 0xf4
    238c:	cmp	r0, #0
    2390:	beq	22b8 <coda_XML_Parse+0x48>
    2394:	movw	r1, #0
    2398:	mov	r0, r4
    239c:	movt	r1, #0
    23a0:	bl	14a8 <setContext>
    23a4:	cmp	r0, #0
    23a8:	bne	22b8 <coda_XML_Parse+0x48>
    23ac:	mov	r0, #1
    23b0:	b	2300 <coda_XML_Parse+0x90>
    23b4:	ldr	r0, [r4, #496]	; 0x1f0
    23b8:	cmp	r0, #2
    23bc:	bcs	23d0 <coda_XML_Parse+0x160>
    23c0:	mov	r0, #2
    23c4:	str	r0, [r4, #496]	; 0x1f0
    23c8:	mov	r0, r7
    23cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    23d0:	cmp	r0, #3
    23d4:	bne	23fc <coda_XML_Parse+0x18c>
    23d8:	ldr	r0, [r4, #152]	; 0x98
    23dc:	ldr	r2, [r4, #24]
    23e0:	ldr	r1, [r4, #304]	; 0x130
    23e4:	add	r3, r4, #416	; 0x1a0
    23e8:	ldr	r7, [r0, #52]	; 0x34
    23ec:	blx	r7
    23f0:	ldr	r0, [r4, #24]
    23f4:	mov	r7, #2
    23f8:	str	r0, [r4, #304]	; 0x130
    23fc:	mov	r0, r7
    2400:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00002404 <errorProcessor>:
    2404:	ldr	r0, [r0, #292]	; 0x124
    2408:	bx	lr

0000240c <coda_XML_GetBuffer>:
    240c:	push	{r4, r5, r6, r7, fp, lr}
    2410:	add	fp, sp, #16
    2414:	mov	r4, r0
    2418:	cmn	r1, #1
    241c:	ble	2534 <coda_XML_GetBuffer+0x128>
    2420:	ldr	r0, [r4, #496]	; 0x1f0
    2424:	cmp	r0, #2
    2428:	beq	243c <coda_XML_GetBuffer+0x30>
    242c:	cmp	r0, #3
    2430:	bne	2444 <coda_XML_GetBuffer+0x38>
    2434:	mov	r0, #33	; 0x21
    2438:	b	2538 <coda_XML_GetBuffer+0x12c>
    243c:	mov	r0, #36	; 0x24
    2440:	b	2538 <coda_XML_GetBuffer+0x12c>
    2444:	ldr	r0, [r4, #28]
    2448:	ldr	r2, [r4, #32]
    244c:	sub	r3, r2, r0
    2450:	cmp	r3, r1
    2454:	bge	2594 <coda_XML_GetBuffer+0x188>
    2458:	ldr	r5, [r4, #24]
    245c:	sub	ip, r0, r5
    2460:	add	r1, ip, r1
    2464:	cmn	r1, #1
    2468:	ble	2534 <coda_XML_GetBuffer+0x128>
    246c:	ldr	lr, [r4, #8]
    2470:	sub	r3, r5, lr
    2474:	sub	r7, r2, lr
    2478:	cmp	r3, #1024	; 0x400
    247c:	mov	r6, r3
    2480:	movge	r6, #1024	; 0x400
    2484:	add	r1, r6, r1
    2488:	cmp	r1, r7
    248c:	ble	2544 <coda_XML_GetBuffer+0x138>
    2490:	subs	r6, r2, r5
    2494:	movweq	r6, #1024	; 0x400
    2498:	mov	r0, r6
    249c:	lsl	r6, r6, #1
    24a0:	cmp	r0, #1
    24a4:	blt	24b0 <coda_XML_GetBuffer+0xa4>
    24a8:	cmp	r6, r1
    24ac:	blt	2498 <coda_XML_GetBuffer+0x8c>
    24b0:	cmp	r0, #0
    24b4:	ble	2534 <coda_XML_GetBuffer+0x128>
    24b8:	ldr	r1, [r4, #12]
    24bc:	mov	r0, r6
    24c0:	blx	r1
    24c4:	cmp	r0, #0
    24c8:	beq	2534 <coda_XML_GetBuffer+0x128>
    24cc:	mov	r5, r0
    24d0:	add	r0, r0, r6
    24d4:	str	r0, [r4, #32]
    24d8:	ldr	r0, [r4, #24]
    24dc:	cmp	r0, #0
    24e0:	beq	2570 <coda_XML_GetBuffer+0x164>
    24e4:	ldr	r1, [r4, #8]
    24e8:	ldr	r2, [r4, #28]
    24ec:	sub	r6, r0, r1
    24f0:	sub	r2, r2, r0
    24f4:	cmp	r6, #1024	; 0x400
    24f8:	movge	r6, #1024	; 0x400
    24fc:	sub	r1, r0, r6
    2500:	add	r2, r2, r6
    2504:	mov	r0, r5
    2508:	bl	0 <memcpy>
    250c:	ldr	r0, [r4, #8]
    2510:	ldr	r1, [r4, #20]
    2514:	blx	r1
    2518:	str	r5, [r4, #8]
    251c:	ldrd	r0, [r4, #24]
    2520:	sub	r0, r1, r0
    2524:	add	r0, r5, r0
    2528:	add	r5, r5, r6
    252c:	add	r0, r0, r6
    2530:	b	257c <coda_XML_GetBuffer+0x170>
    2534:	mov	r0, #1
    2538:	str	r0, [r4, #292]	; 0x124
    253c:	mov	r0, #0
    2540:	pop	{r4, r5, r6, r7, fp, pc}
    2544:	cmp	r3, #1024	; 0x400
    2548:	ble	2584 <coda_XML_GetBuffer+0x178>
    254c:	sub	r5, r3, r6
    2550:	add	r2, r6, ip
    2554:	mov	r0, lr
    2558:	add	r1, lr, r5
    255c:	bl	0 <memmove>
    2560:	ldrd	r2, [r4, #24]
    2564:	sub	r0, r3, r5
    2568:	sub	r5, r2, r5
    256c:	b	257c <coda_XML_GetBuffer+0x170>
    2570:	str	r5, [r4, #8]
    2574:	ldr	r0, [r4, #28]
    2578:	add	r0, r5, r0
    257c:	str	r0, [r4, #28]
    2580:	str	r5, [r4, #24]
    2584:	mov	r1, #0
    2588:	str	r1, [r4, #296]	; 0x128
    258c:	str	r1, [r4, #300]	; 0x12c
    2590:	str	r1, [r4, #304]	; 0x130
    2594:	pop	{r4, r5, r6, r7, fp, pc}

00002598 <coda_XML_ParseBuffer>:
    2598:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    259c:	add	fp, sp, #24
    25a0:	mov	r4, r0
    25a4:	ldr	r0, [r0, #496]	; 0x1f0
    25a8:	mov	r8, r2
    25ac:	mov	r7, r1
    25b0:	cmp	r0, #0
    25b4:	beq	25d0 <coda_XML_ParseBuffer+0x38>
    25b8:	cmp	r0, #2
    25bc:	beq	264c <coda_XML_ParseBuffer+0xb4>
    25c0:	cmp	r0, #3
    25c4:	bne	25dc <coda_XML_ParseBuffer+0x44>
    25c8:	mov	r0, #33	; 0x21
    25cc:	b	2650 <coda_XML_ParseBuffer+0xb8>
    25d0:	ldr	r0, [r4, #492]	; 0x1ec
    25d4:	cmp	r0, #0
    25d8:	beq	2688 <coda_XML_ParseBuffer+0xf0>
    25dc:	mov	r6, #1
    25e0:	mov	r3, r4
    25e4:	str	r6, [r4, #496]	; 0x1f0
    25e8:	strb	r8, [r4, #500]	; 0x1f4
    25ec:	ldr	r1, [r3, #24]!
    25f0:	str	r1, [r4, #304]	; 0x130
    25f4:	ldr	r2, [r4, #40]	; 0x28
    25f8:	ldr	r0, [r4, #28]
    25fc:	ldr	r9, [r4, #44]	; 0x2c
    2600:	ldr	ip, [r4, #288]	; 0x120
    2604:	adds	r5, r2, r7
    2608:	add	r2, r0, r7
    260c:	adc	r0, r9, r7, asr #31
    2610:	str	r2, [r4, #28]
    2614:	str	r5, [r4, #40]	; 0x28
    2618:	str	r0, [r4, #44]	; 0x2c
    261c:	mov	r0, r4
    2620:	str	r2, [r4, #48]	; 0x30
    2624:	blx	ip
    2628:	cmp	r0, #0
    262c:	str	r0, [r4, #292]	; 0x124
    2630:	beq	2660 <coda_XML_ParseBuffer+0xc8>
    2634:	movw	r0, #0
    2638:	movt	r0, #0
    263c:	str	r0, [r4, #288]	; 0x120
    2640:	ldr	r0, [r4, #296]	; 0x128
    2644:	str	r0, [r4, #300]	; 0x12c
    2648:	b	2654 <coda_XML_ParseBuffer+0xbc>
    264c:	mov	r0, #36	; 0x24
    2650:	str	r0, [r4, #292]	; 0x124
    2654:	mov	r6, #0
    2658:	mov	r0, r6
    265c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2660:	ldr	r0, [r4, #496]	; 0x1f0
    2664:	cmp	r0, #2
    2668:	bcs	26dc <coda_XML_ParseBuffer+0x144>
    266c:	cmp	r8, #0
    2670:	beq	26e4 <coda_XML_ParseBuffer+0x14c>
    2674:	mov	r0, #2
    2678:	mov	r6, #1
    267c:	str	r0, [r4, #496]	; 0x1f0
    2680:	mov	r0, r6
    2684:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2688:	ldr	r0, [r4, #512]	; 0x200
    268c:	cmp	r0, #0
    2690:	bne	26b0 <coda_XML_ParseBuffer+0x118>
    2694:	mov	r0, #0
    2698:	bl	0 <time>
    269c:	cmn	r0, #1
    26a0:	addeq	r0, r0, #1
    26a4:	bl	0 <srand>
    26a8:	bl	0 <rand>
    26ac:	str	r0, [r4, #512]	; 0x200
    26b0:	ldrb	r0, [r4, #244]	; 0xf4
    26b4:	cmp	r0, #0
    26b8:	beq	25dc <coda_XML_ParseBuffer+0x44>
    26bc:	movw	r1, #0
    26c0:	mov	r0, r4
    26c4:	movt	r1, #0
    26c8:	bl	14a8 <setContext>
    26cc:	cmp	r0, #0
    26d0:	bne	25dc <coda_XML_ParseBuffer+0x44>
    26d4:	mov	r0, #1
    26d8:	b	2650 <coda_XML_ParseBuffer+0xb8>
    26dc:	cmp	r0, #3
    26e0:	moveq	r6, #2
    26e4:	ldr	r0, [r4, #152]	; 0x98
    26e8:	ldr	r2, [r4, #24]
    26ec:	ldr	r1, [r4, #304]	; 0x130
    26f0:	add	r3, r4, #416	; 0x1a0
    26f4:	ldr	r7, [r0, #52]	; 0x34
    26f8:	blx	r7
    26fc:	ldr	r0, [r4, #24]
    2700:	str	r0, [r4, #304]	; 0x130
    2704:	mov	r0, r6
    2708:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000270c <coda_XML_StopParser>:
    270c:	ldr	r2, [r0, #496]	; 0x1f0
    2710:	cmp	r2, #2
    2714:	beq	2730 <coda_XML_StopParser+0x24>
    2718:	cmp	r2, #3
    271c:	bne	2738 <coda_XML_StopParser+0x2c>
    2720:	cmp	r1, #0
    2724:	beq	275c <coda_XML_StopParser+0x50>
    2728:	mov	r1, #33	; 0x21
    272c:	b	2750 <coda_XML_StopParser+0x44>
    2730:	mov	r1, #36	; 0x24
    2734:	b	2750 <coda_XML_StopParser+0x44>
    2738:	cmp	r1, #0
    273c:	beq	275c <coda_XML_StopParser+0x50>
    2740:	ldrb	r1, [r0, #504]	; 0x1f8
    2744:	cmp	r1, #0
    2748:	beq	2764 <coda_XML_StopParser+0x58>
    274c:	mov	r1, #37	; 0x25
    2750:	str	r1, [r0, #292]	; 0x124
    2754:	mov	r0, #0
    2758:	bx	lr
    275c:	mov	r1, #2
    2760:	b	2768 <coda_XML_StopParser+0x5c>
    2764:	mov	r1, #3
    2768:	str	r1, [r0, #496]	; 0x1f0
    276c:	mov	r0, #1
    2770:	bx	lr

00002774 <coda_XML_ResumeParser>:
    2774:	push	{r4, r5, fp, lr}
    2778:	add	fp, sp, #8
    277c:	mov	r4, r0
    2780:	ldr	r0, [r0, #496]	; 0x1f0
    2784:	cmp	r0, #3
    2788:	bne	27d0 <coda_XML_ResumeParser+0x5c>
    278c:	mov	r5, #1
    2790:	mov	r3, r4
    2794:	mov	r0, r4
    2798:	str	r5, [r4, #496]	; 0x1f0
    279c:	ldr	r1, [r3, #24]!
    27a0:	ldr	r2, [r4, #48]	; 0x30
    27a4:	ldr	ip, [r4, #288]	; 0x120
    27a8:	blx	ip
    27ac:	cmp	r0, #0
    27b0:	str	r0, [r4, #292]	; 0x124
    27b4:	beq	27e4 <coda_XML_ResumeParser+0x70>
    27b8:	movw	r0, #0
    27bc:	movt	r0, #0
    27c0:	str	r0, [r4, #288]	; 0x120
    27c4:	ldr	r0, [r4, #296]	; 0x128
    27c8:	str	r0, [r4, #300]	; 0x12c
    27cc:	b	27d8 <coda_XML_ResumeParser+0x64>
    27d0:	mov	r0, #34	; 0x22
    27d4:	str	r0, [r4, #292]	; 0x124
    27d8:	mov	r5, #0
    27dc:	mov	r0, r5
    27e0:	pop	{r4, r5, fp, pc}
    27e4:	ldr	r0, [r4, #496]	; 0x1f0
    27e8:	cmp	r0, #2
    27ec:	bcs	2810 <coda_XML_ResumeParser+0x9c>
    27f0:	ldrb	r0, [r4, #500]	; 0x1f4
    27f4:	cmp	r0, #0
    27f8:	beq	2818 <coda_XML_ResumeParser+0xa4>
    27fc:	mov	r0, #2
    2800:	mov	r5, #1
    2804:	str	r0, [r4, #496]	; 0x1f0
    2808:	mov	r0, r5
    280c:	pop	{r4, r5, fp, pc}
    2810:	cmp	r0, #3
    2814:	moveq	r5, #2
    2818:	ldr	r0, [r4, #152]	; 0x98
    281c:	ldr	r2, [r4, #24]
    2820:	ldr	r1, [r4, #304]	; 0x130
    2824:	add	r3, r4, #416	; 0x1a0
    2828:	ldr	ip, [r0, #52]	; 0x34
    282c:	blx	ip
    2830:	ldr	r0, [r4, #24]
    2834:	str	r0, [r4, #304]	; 0x130
    2838:	mov	r0, r5
    283c:	pop	{r4, r5, fp, pc}

00002840 <coda_XML_GetParsingStatus>:
    2840:	push	{fp, lr}
    2844:	mov	fp, sp
    2848:	cmp	r1, #0
    284c:	ldrne	r2, [r0, #496]	; 0x1f0
    2850:	ldrne	r0, [r0, #500]	; 0x1f4
    2854:	strne	r2, [r1]
    2858:	strne	r0, [r1, #4]
    285c:	popne	{fp, pc}
    2860:	movw	r0, #0
    2864:	movw	r1, #0
    2868:	movw	r3, #0
    286c:	movw	r2, #1835	; 0x72b
    2870:	movt	r0, #0
    2874:	movt	r1, #0
    2878:	movt	r3, #0
    287c:	bl	0 <__assert_fail>

00002880 <coda_XML_GetErrorCode>:
    2880:	ldr	r0, [r0, #292]	; 0x124
    2884:	bx	lr

00002888 <coda_XML_GetCurrentByteIndex>:
    2888:	ldr	r1, [r0, #296]	; 0x128
    288c:	cmp	r1, #0
    2890:	mvneq	r0, #0
    2894:	mvneq	r1, #0
    2898:	bxeq	lr
    289c:	ldr	r2, [r0, #40]	; 0x28
    28a0:	ldr	r3, [r0, #44]	; 0x2c
    28a4:	ldr	r0, [r0, #48]	; 0x30
    28a8:	sub	r1, r0, r1
    28ac:	subs	r0, r2, r1
    28b0:	sbc	r1, r3, r1, asr #31
    28b4:	bx	lr

000028b8 <coda_XML_GetCurrentByteCount>:
    28b8:	ldr	r2, [r0, #300]	; 0x12c
    28bc:	mov	r1, r0
    28c0:	mov	r0, #0
    28c4:	cmp	r2, #0
    28c8:	bxeq	lr
    28cc:	ldr	r1, [r1, #296]	; 0x128
    28d0:	cmp	r1, #0
    28d4:	subne	r0, r2, r1
    28d8:	bx	lr

000028dc <coda_XML_GetInputContext>:
    28dc:	push	{fp, lr}
    28e0:	mov	fp, sp
    28e4:	ldr	ip, [r0, #296]	; 0x128
    28e8:	mov	r3, r0
    28ec:	mov	r0, #0
    28f0:	cmp	ip, #0
    28f4:	beq	291c <coda_XML_GetInputContext+0x40>
    28f8:	ldr	lr, [r3, #8]
    28fc:	cmp	lr, #0
    2900:	popeq	{fp, pc}
    2904:	sub	r0, ip, lr
    2908:	str	r0, [r1]
    290c:	ldr	r0, [r3, #28]
    2910:	sub	r0, r0, lr
    2914:	str	r0, [r2]
    2918:	mov	r0, lr
    291c:	pop	{fp, pc}

00002920 <coda_XML_GetCurrentLineNumber>:
    2920:	push	{r4, sl, fp, lr}
    2924:	add	fp, sp, #8
    2928:	ldr	r2, [r0, #296]	; 0x128
    292c:	mov	r4, r0
    2930:	cmp	r2, #0
    2934:	beq	295c <coda_XML_GetCurrentLineNumber+0x3c>
    2938:	ldr	r1, [r4, #304]	; 0x130
    293c:	cmp	r2, r1
    2940:	bcc	295c <coda_XML_GetCurrentLineNumber+0x3c>
    2944:	ldr	r0, [r4, #152]	; 0x98
    2948:	add	r3, r4, #416	; 0x1a0
    294c:	ldr	ip, [r0, #52]	; 0x34
    2950:	blx	ip
    2954:	ldr	r0, [r4, #296]	; 0x128
    2958:	str	r0, [r4, #304]	; 0x130
    295c:	ldr	r0, [r4, #416]	; 0x1a0
    2960:	ldr	r1, [r4, #420]	; 0x1a4
    2964:	adds	r0, r0, #1
    2968:	adc	r1, r1, #0
    296c:	pop	{r4, sl, fp, pc}

00002970 <coda_XML_GetCurrentColumnNumber>:
    2970:	push	{r4, sl, fp, lr}
    2974:	add	fp, sp, #8
    2978:	ldr	r2, [r0, #296]	; 0x128
    297c:	mov	r4, r0
    2980:	cmp	r2, #0
    2984:	beq	29ac <coda_XML_GetCurrentColumnNumber+0x3c>
    2988:	ldr	r1, [r4, #304]	; 0x130
    298c:	cmp	r2, r1
    2990:	bcc	29ac <coda_XML_GetCurrentColumnNumber+0x3c>
    2994:	ldr	r0, [r4, #152]	; 0x98
    2998:	add	r3, r4, #416	; 0x1a0
    299c:	ldr	ip, [r0, #52]	; 0x34
    29a0:	blx	ip
    29a4:	ldr	r0, [r4, #296]	; 0x128
    29a8:	str	r0, [r4, #304]	; 0x130
    29ac:	ldr	r0, [r4, #424]	; 0x1a8
    29b0:	ldr	r1, [r4, #428]	; 0x1ac
    29b4:	pop	{r4, sl, fp, pc}

000029b8 <coda_XML_FreeContentModel>:
    29b8:	ldr	r2, [r0, #20]
    29bc:	mov	r0, r1
    29c0:	bx	r2

000029c4 <coda_XML_MemMalloc>:
    29c4:	ldr	r2, [r0, #12]
    29c8:	mov	r0, r1
    29cc:	bx	r2

000029d0 <coda_XML_MemRealloc>:
    29d0:	ldr	r3, [r0, #16]
    29d4:	mov	r0, r1
    29d8:	mov	r1, r2
    29dc:	bx	r3

000029e0 <coda_XML_MemFree>:
    29e0:	ldr	r2, [r0, #20]
    29e4:	mov	r0, r1
    29e8:	bx	r2

000029ec <coda_XML_DefaultCurrent>:
    29ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29f0:	add	fp, sp, #28
    29f4:	sub	sp, sp, #12
    29f8:	ldr	r3, [r0, #88]	; 0x58
    29fc:	cmp	r3, #0
    2a00:	beq	2b40 <coda_XML_DefaultCurrent+0x154>
    2a04:	ldr	sl, [r0, #308]	; 0x134
    2a08:	mov	r4, r0
    2a0c:	cmp	sl, #0
    2a10:	beq	2a3c <coda_XML_DefaultCurrent+0x50>
    2a14:	ldr	r1, [sl]
    2a18:	ldr	r6, [r4, #236]	; 0xec
    2a1c:	mov	r8, sl
    2a20:	ldr	r5, [r8, #4]!
    2a24:	str	r1, [sp, #8]
    2a28:	ldrb	r0, [r6, #72]	; 0x48
    2a2c:	cmp	r0, #0
    2a30:	beq	2a6c <coda_XML_DefaultCurrent+0x80>
    2a34:	sub	r2, r5, r1
    2a38:	b	2a5c <coda_XML_DefaultCurrent+0x70>
    2a3c:	ldr	r1, [r4, #296]	; 0x128
    2a40:	ldr	r5, [r4, #152]	; 0x98
    2a44:	ldr	r6, [r4, #300]	; 0x12c
    2a48:	str	r1, [sp, #8]
    2a4c:	ldrb	r0, [r5, #72]	; 0x48
    2a50:	cmp	r0, #0
    2a54:	beq	2ae0 <coda_XML_DefaultCurrent+0xf4>
    2a58:	sub	r2, r6, r1
    2a5c:	ldr	r0, [r4, #4]
    2a60:	blx	r3
    2a64:	sub	sp, fp, #28
    2a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2a6c:	ldr	r0, [r4, #152]	; 0x98
    2a70:	add	r9, sp, #4
    2a74:	cmp	r0, r6
    2a78:	addeq	r8, r4, #300	; 0x12c
    2a7c:	addeq	sl, r4, #296	; 0x128
    2a80:	ldr	r0, [r4, #52]	; 0x34
    2a84:	ldr	r1, [r4, #56]	; 0x38
    2a88:	mov	r2, r5
    2a8c:	mov	r3, r9
    2a90:	str	r0, [sp, #4]
    2a94:	mov	r0, r6
    2a98:	ldr	r7, [r6, #60]	; 0x3c
    2a9c:	str	r1, [sp]
    2aa0:	add	r1, sp, #8
    2aa4:	blx	r7
    2aa8:	ldr	r0, [sp, #8]
    2aac:	str	r0, [r8]
    2ab0:	ldr	r1, [r4, #52]	; 0x34
    2ab4:	ldr	r2, [sp, #4]
    2ab8:	ldr	r0, [r4, #4]
    2abc:	ldr	r3, [r4, #88]	; 0x58
    2ac0:	sub	r2, r2, r1
    2ac4:	blx	r3
    2ac8:	ldr	r0, [sp, #8]
    2acc:	str	r0, [sl]
    2ad0:	ldr	r0, [sp, #8]
    2ad4:	cmp	r0, r5
    2ad8:	bne	2a80 <coda_XML_DefaultCurrent+0x94>
    2adc:	b	2b40 <coda_XML_DefaultCurrent+0x154>
    2ae0:	add	r8, sp, #8
    2ae4:	add	r9, sp, #4
    2ae8:	ldr	r0, [r4, #52]	; 0x34
    2aec:	ldr	r1, [r4, #56]	; 0x38
    2af0:	mov	r2, r6
    2af4:	mov	r3, r9
    2af8:	str	r0, [sp, #4]
    2afc:	mov	r0, r5
    2b00:	ldr	r7, [r5, #60]	; 0x3c
    2b04:	str	r1, [sp]
    2b08:	mov	r1, r8
    2b0c:	blx	r7
    2b10:	ldr	r0, [sp, #8]
    2b14:	str	r0, [r4, #300]	; 0x12c
    2b18:	ldr	r1, [r4, #52]	; 0x34
    2b1c:	ldr	r2, [sp, #4]
    2b20:	ldr	r0, [r4, #4]
    2b24:	ldr	r3, [r4, #88]	; 0x58
    2b28:	sub	r2, r2, r1
    2b2c:	blx	r3
    2b30:	ldr	r0, [sp, #8]
    2b34:	cmp	r6, r0
    2b38:	str	r0, [r4, #296]	; 0x128
    2b3c:	bne	2ae8 <coda_XML_DefaultCurrent+0xfc>
    2b40:	sub	sp, fp, #28
    2b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00002b48 <coda_XML_ErrorString>:
    2b48:	sub	r2, r0, #1
    2b4c:	mov	r1, #0
    2b50:	cmp	r2, #39	; 0x27
    2b54:	bhi	2b64 <coda_XML_ErrorString+0x1c>
    2b58:	movw	r1, #0
    2b5c:	movt	r1, #0
    2b60:	ldr	r1, [r1, r0, lsl #2]
    2b64:	mov	r0, r1
    2b68:	bx	lr

00002b6c <coda_XML_ExpatVersion>:
    2b6c:	movw	r0, #0
    2b70:	movt	r0, #0
    2b74:	bx	lr

00002b78 <coda_XML_ExpatVersionInfo>:
    2b78:	mov	r2, #2
    2b7c:	mov	r1, #1
    2b80:	str	r2, [r0]
    2b84:	str	r1, [r0, #4]
    2b88:	str	r1, [r0, #8]
    2b8c:	bx	lr

00002b90 <coda_XML_GetFeatureList>:
    2b90:	movw	r0, #0
    2b94:	movt	r0, #0
    2b98:	bx	lr

00002b9c <prologInitProcessor>:
    2b9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2ba0:	add	fp, sp, #24
    2ba4:	sub	sp, sp, #24
    2ba8:	mov	r7, r0
    2bac:	ldrb	r0, [r0, #244]	; 0xf4
    2bb0:	mov	r4, r2
    2bb4:	mov	r5, r1
    2bb8:	movw	r1, #0
    2bbc:	mov	r8, r3
    2bc0:	movw	r3, #0
    2bc4:	ldr	r2, [r7, #240]	; 0xf0
    2bc8:	movt	r1, #0
    2bcc:	movt	r3, #0
    2bd0:	cmp	r0, #0
    2bd4:	add	r0, r7, #156	; 0x9c
    2bd8:	moveq	r3, r1
    2bdc:	add	r1, r7, #152	; 0x98
    2be0:	blx	r3
    2be4:	cmp	r0, #0
    2be8:	bne	2c08 <prologInitProcessor+0x6c>
    2bec:	ldr	r1, [r7, #240]	; 0xf0
    2bf0:	mov	r0, r7
    2bf4:	bl	2cc8 <handleUnknownEncoding>
    2bf8:	cmp	r0, #0
    2bfc:	beq	2c08 <prologInitProcessor+0x6c>
    2c00:	sub	sp, fp, #24
    2c04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2c08:	movw	r0, #0
    2c0c:	add	r3, sp, #20
    2c10:	mov	r1, r5
    2c14:	mov	r2, r4
    2c18:	movt	r0, #0
    2c1c:	str	r0, [r7, #288]	; 0x120
    2c20:	str	r5, [sp, #20]
    2c24:	ldr	r0, [r7, #152]	; 0x98
    2c28:	ldr	r6, [r0]
    2c2c:	blx	r6
    2c30:	ldrb	r2, [r7, #500]	; 0x1f4
    2c34:	ldr	r1, [r7, #152]	; 0x98
    2c38:	ldr	r3, [sp, #20]
    2c3c:	stm	sp, {r0, r3, r8}
    2c40:	mov	r0, r7
    2c44:	mov	r3, r4
    2c48:	clz	r2, r2
    2c4c:	lsr	r2, r2, #5
    2c50:	str	r2, [sp, #12]
    2c54:	mov	r2, r5
    2c58:	bl	2dc0 <doProlog>
    2c5c:	sub	sp, fp, #24
    2c60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00002c64 <prologProcessor>:
    2c64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2c68:	add	fp, sp, #24
    2c6c:	sub	sp, sp, #24
    2c70:	str	r1, [sp, #20]
    2c74:	mov	r7, r0
    2c78:	mov	r8, r3
    2c7c:	add	r3, sp, #20
    2c80:	mov	r5, r2
    2c84:	mov	r6, r1
    2c88:	ldr	r0, [r0, #152]	; 0x98
    2c8c:	ldr	r4, [r0]
    2c90:	blx	r4
    2c94:	ldrb	r2, [r7, #500]	; 0x1f4
    2c98:	ldr	r1, [r7, #152]	; 0x98
    2c9c:	ldr	r3, [sp, #20]
    2ca0:	stm	sp, {r0, r3, r8}
    2ca4:	mov	r0, r7
    2ca8:	mov	r3, r5
    2cac:	clz	r2, r2
    2cb0:	lsr	r2, r2, #5
    2cb4:	str	r2, [sp, #12]
    2cb8:	mov	r2, r6
    2cbc:	bl	2dc0 <doProlog>
    2cc0:	sub	sp, fp, #24
    2cc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00002cc8 <handleUnknownEncoding>:
    2cc8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2ccc:	add	fp, sp, #24
    2cd0:	sub	sp, sp, #1040	; 0x410
    2cd4:	ldr	r7, [r0, #132]	; 0x84
    2cd8:	cmp	r7, #0
    2cdc:	beq	2d8c <handleUnknownEncoding+0xc4>
    2ce0:	mov	r6, sp
    2ce4:	mov	r5, r1
    2ce8:	mov	r4, r0
    2cec:	mov	r1, #255	; 0xff
    2cf0:	mov	r2, #1024	; 0x400
    2cf4:	mov	r0, r6
    2cf8:	bl	0 <memset>
    2cfc:	mov	r0, #0
    2d00:	mov	r1, r5
    2d04:	mov	r2, r6
    2d08:	str	r0, [sp, #1028]	; 0x404
    2d0c:	str	r0, [sp, #1032]	; 0x408
    2d10:	str	r0, [sp, #1024]	; 0x400
    2d14:	ldr	r0, [r4, #256]	; 0x100
    2d18:	blx	r7
    2d1c:	cmp	r0, #0
    2d20:	beq	2d94 <handleUnknownEncoding+0xcc>
    2d24:	ldr	r5, [r4, #12]
    2d28:	bl	0 <coda_XmlSizeOfUnknownEncoding>
    2d2c:	blx	r5
    2d30:	cmp	r0, #0
    2d34:	str	r0, [r4, #248]	; 0xf8
    2d38:	beq	2d9c <handleUnknownEncoding+0xd4>
    2d3c:	ldrb	r1, [r4, #244]	; 0xf4
    2d40:	movw	r2, #0
    2d44:	movw	r7, #0
    2d48:	ldr	r3, [sp, #1024]	; 0x400
    2d4c:	movt	r2, #0
    2d50:	movt	r7, #0
    2d54:	cmp	r1, #0
    2d58:	mov	r1, sp
    2d5c:	moveq	r7, r2
    2d60:	ldr	r2, [sp, #1028]	; 0x404
    2d64:	blx	r7
    2d68:	cmp	r0, #0
    2d6c:	beq	2d94 <handleUnknownEncoding+0xcc>
    2d70:	ldr	r1, [sp, #1024]	; 0x400
    2d74:	str	r1, [r4, #252]	; 0xfc
    2d78:	ldr	r1, [sp, #1032]	; 0x408
    2d7c:	str	r0, [r4, #152]	; 0x98
    2d80:	str	r1, [r4, #260]	; 0x104
    2d84:	mov	r4, #0
    2d88:	b	2db4 <handleUnknownEncoding+0xec>
    2d8c:	mov	r4, #18
    2d90:	b	2db4 <handleUnknownEncoding+0xec>
    2d94:	mov	r4, #18
    2d98:	b	2da0 <handleUnknownEncoding+0xd8>
    2d9c:	mov	r4, #1
    2da0:	ldr	r1, [sp, #1032]	; 0x408
    2da4:	cmp	r1, #0
    2da8:	beq	2db4 <handleUnknownEncoding+0xec>
    2dac:	ldr	r0, [sp, #1024]	; 0x400
    2db0:	blx	r1
    2db4:	mov	r0, r4
    2db8:	sub	sp, fp, #24
    2dbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00002dc0 <doProlog>:
    2dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2dc4:	add	fp, sp, #28
    2dc8:	sub	sp, sp, #108	; 0x6c
    2dcc:	mov	r8, r0
    2dd0:	ldr	r0, [r0, #152]	; 0x98
    2dd4:	mov	r5, r1
    2dd8:	mov	r4, r2
    2ddc:	str	r3, [sp, #60]	; 0x3c
    2de0:	ldr	r1, [r8, #364]	; 0x16c
    2de4:	cmp	r0, r5
    2de8:	beq	2e00 <doProlog+0x40>
    2dec:	ldr	r0, [r8, #308]	; 0x134
    2df0:	str	r0, [sp, #64]	; 0x40
    2df4:	add	r0, r0, #4
    2df8:	str	r0, [sp, #68]	; 0x44
    2dfc:	b	2e10 <doProlog+0x50>
    2e00:	add	r0, r8, #300	; 0x12c
    2e04:	str	r0, [sp, #68]	; 0x44
    2e08:	add	r0, r8, #296	; 0x128
    2e0c:	str	r0, [sp, #64]	; 0x40
    2e10:	add	r2, r1, #132	; 0x84
    2e14:	ldr	r0, [fp, #8]
    2e18:	str	r1, [fp, #-56]	; 0xffffffc8
    2e1c:	str	r8, [fp, #-44]	; 0xffffffd4
    2e20:	str	r2, [sp, #36]	; 0x24
    2e24:	add	r2, r8, #444	; 0x1bc
    2e28:	str	r2, [fp, #-52]	; 0xffffffcc
    2e2c:	add	r2, r8, #432	; 0x1b0
    2e30:	str	r2, [fp, #-60]	; 0xffffffc4
    2e34:	add	r2, r1, #96	; 0x60
    2e38:	str	r2, [sp, #40]	; 0x28
    2e3c:	add	r2, r1, #92	; 0x5c
    2e40:	str	r2, [fp, #-64]	; 0xffffffc0
    2e44:	add	r2, r1, #80	; 0x50
    2e48:	str	r2, [sp, #52]	; 0x34
    2e4c:	add	r2, r8, #300	; 0x12c
    2e50:	str	r2, [sp, #48]	; 0x30
    2e54:	add	r2, r8, #296	; 0x128
    2e58:	str	r2, [sp, #44]	; 0x2c
    2e5c:	add	r2, r8, #264	; 0x108
    2e60:	str	r2, [sp, #56]	; 0x38
    2e64:	ldr	r1, [sp, #64]	; 0x40
    2e68:	cmp	r0, #0
    2e6c:	str	r5, [fp, #-40]	; 0xffffffd8
    2e70:	str	r4, [fp, #-48]	; 0xffffffd0
    2e74:	str	r4, [r1]
    2e78:	ldr	r1, [sp, #68]	; 0x44
    2e7c:	ldr	r3, [fp, #12]
    2e80:	str	r3, [r1]
    2e84:	ble	2e90 <doProlog+0xd0>
    2e88:	mov	r5, r0
    2e8c:	b	2f08 <doProlog+0x148>
    2e90:	ldr	r1, [fp, #20]
    2e94:	cmp	r1, #0
    2e98:	cmpne	r0, #0
    2e9c:	bne	5920 <doProlog+0x2b60>
    2ea0:	add	r1, r0, #15
    2ea4:	cmp	r1, #15
    2ea8:	bhi	2efc <doProlog+0x13c>
    2eac:	add	r2, pc, #8
    2eb0:	mov	r5, #15
    2eb4:	mov	sl, #5
    2eb8:	ldr	pc, [r2, r1, lsl #2]
    2ebc:	.word	0x00002f08
    2ec0:	.word	0x00002efc
    2ec4:	.word	0x00002efc
    2ec8:	.word	0x00002efc
    2ecc:	.word	0x00002efc
    2ed0:	.word	0x00002efc
    2ed4:	.word	0x00002efc
    2ed8:	.word	0x00002efc
    2edc:	.word	0x00002efc
    2ee0:	.word	0x00002efc
    2ee4:	.word	0x00002efc
    2ee8:	.word	0x0000598c
    2eec:	.word	0x00002efc
    2ef0:	.word	0x000059b4
    2ef4:	.word	0x00005a70
    2ef8:	.word	0x000059bc
    2efc:	ldr	r3, [sp, #60]	; 0x3c
    2f00:	rsb	r5, r0, #0
    2f04:	str	r3, [fp, #12]
    2f08:	ldr	r0, [sp, #56]	; 0x38
    2f0c:	ldr	r9, [fp, #-48]	; 0xffffffd0
    2f10:	ldr	r4, [fp, #-40]	; 0xffffffd8
    2f14:	mov	r1, r5
    2f18:	ldr	r7, [r0]
    2f1c:	mov	r2, r9
    2f20:	str	r4, [sp]
    2f24:	blx	r7
    2f28:	mov	r8, r0
    2f2c:	add	r0, r0, #1
    2f30:	cmp	r0, #61	; 0x3d
    2f34:	bhi	52fc <doProlog+0x253c>
    2f38:	add	r1, pc, #8
    2f3c:	mov	r7, #0
    2f40:	mov	r6, #1
    2f44:	ldr	pc, [r1, r0, lsl #2]
    2f48:	.word	0x000057fc
    2f4c:	.word	0x00003314
    2f50:	.word	0x00003320
    2f54:	.word	0x00005814
    2f58:	.word	0x00003330
    2f5c:	.word	0x00003344
    2f60:	.word	0x00003370
    2f64:	.word	0x0000340c
    2f68:	.word	0x000035a8
    2f6c:	.word	0x00003614
    2f70:	.word	0x00003680
    2f74:	.word	0x0000371c
    2f78:	.word	0x0000379c
    2f7c:	.word	0x000037c0
    2f80:	.word	0x00004494
    2f84:	.word	0x000034ec
    2f88:	.word	0x00003868
    2f8c:	.word	0x000038e4
    2f90:	.word	0x00003978
    2f94:	.word	0x0000398c
    2f98:	.word	0x000039c8
    2f9c:	.word	0x00003a5c
    2fa0:	.word	0x00003ae4
    2fa4:	.word	0x00003b8c
    2fa8:	.word	0x00003bc4
    2fac:	.word	0x00003be0
    2fb0:	.word	0x00003bfc
    2fb4:	.word	0x00003c08
    2fb8:	.word	0x00003c14
    2fbc:	.word	0x00003c20
    2fc0:	.word	0x00003c2c
    2fc4:	.word	0x00003c38
    2fc8:	.word	0x00003040
    2fcc:	.word	0x00003040
    2fd0:	.word	0x00003c48
    2fd4:	.word	0x00003c6c
    2fd8:	.word	0x000030f0
    2fdc:	.word	0x000030f0
    2fe0:	.word	0x000031a4
    2fe4:	.word	0x000031a4
    2fe8:	.word	0x00003f18
    2fec:	.word	0x00003c94
    2ff0:	.word	0x00003204
    2ff4:	.word	0x00003204
    2ff8:	.word	0x00003ccc
    2ffc:	.word	0x00003d04
    3000:	.word	0x00003d90
    3004:	.word	0x00003d7c
    3008:	.word	0x00003d84
    300c:	.word	0x00003d8c
    3010:	.word	0x00003e70
    3014:	.word	0x00003ee8
    3018:	.word	0x00003f40
    301c:	.word	0x00003f2c
    3020:	.word	0x00003f34
    3024:	.word	0x00003f3c
    3028:	.word	0x00003fb4
    302c:	.word	0x00003fd8
    3030:	.word	0x00003ffc
    3034:	.word	0x00004028
    3038:	.word	0x0000327c
    303c:	.word	0x0000327c
    3040:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3044:	ldrb	r0, [r0, #128]	; 0x80
    3048:	cmp	r0, #0
    304c:	beq	52fc <doProlog+0x253c>
    3050:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3054:	ldr	r0, [r0, #140]	; 0x8c
    3058:	cmp	r0, #0
    305c:	beq	52fc <doProlog+0x253c>
    3060:	ldr	r4, [fp, #-44]	; 0xffffffd4
    3064:	movw	r0, #0
    3068:	movw	r2, #0
    306c:	cmp	r8, #32
    3070:	movw	r1, #0
    3074:	movt	r0, #0
    3078:	movt	r2, #0
    307c:	movt	r1, #0
    3080:	moveq	r2, r0
    3084:	ldr	r0, [r4, #340]	; 0x154
    3088:	cmp	r0, #0
    308c:	moveq	r1, r2
    3090:	ldrb	r0, [r1]
    3094:	cmp	r0, #0
    3098:	beq	4098 <doProlog+0x12d8>
    309c:	add	r5, r1, #1
    30a0:	b	30cc <doProlog+0x30c>
    30a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    30a8:	ldr	r1, [r0]
    30ac:	ldrb	r0, [r5, #-1]
    30b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    30b4:	add	r2, r1, #1
    30b8:	str	r2, [r3]
    30bc:	strb	r0, [r1]
    30c0:	ldrb	r0, [r5], #1
    30c4:	cmp	r0, #0
    30c8:	beq	4098 <doProlog+0x12d8>
    30cc:	ldr	r2, [r4, #440]	; 0x1b8
    30d0:	ldr	r1, [r4, #444]	; 0x1bc
    30d4:	cmp	r1, r2
    30d8:	bne	30b0 <doProlog+0x2f0>
    30dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
    30e0:	bl	6948 <poolGrow>
    30e4:	cmp	r0, #0
    30e8:	bne	30a4 <doProlog+0x2e4>
    30ec:	b	58e8 <doProlog+0x2b28>
    30f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    30f4:	ldrb	r0, [r0, #128]	; 0x80
    30f8:	cmp	r0, #0
    30fc:	beq	52fc <doProlog+0x253c>
    3100:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3104:	ldr	r5, [r0, #352]	; 0x160
    3108:	ldrb	sl, [r0, #360]	; 0x168
    310c:	ldr	r6, [r0, #356]	; 0x164
    3110:	ldrb	r0, [r0, #361]	; 0x169
    3114:	ldr	r7, [r5, #12]
    3118:	cmp	r0, #0
    311c:	beq	3160 <doProlog+0x3a0>
    3120:	cmp	r7, #1
    3124:	blt	3148 <doProlog+0x388>
    3128:	ldr	r0, [r5, #20]
    312c:	mov	r1, r7
    3130:	ldr	r2, [r0]
    3134:	cmp	r2, r6
    3138:	beq	4b8c <doProlog+0x1dcc>
    313c:	add	r0, r0, #12
    3140:	subs	r1, r1, #1
    3144:	bne	3130 <doProlog+0x370>
    3148:	ldr	r0, [r5, #8]
    314c:	cmp	r0, #0
    3150:	bne	3160 <doProlog+0x3a0>
    3154:	ldrb	r0, [r6, #9]
    3158:	cmp	r0, #0
    315c:	streq	r6, [r5, #8]
    3160:	ldr	r0, [r5, #16]
    3164:	cmp	r7, r0
    3168:	bne	423c <doProlog+0x147c>
    316c:	cmp	r7, #0
    3170:	beq	4b3c <doProlog+0x1d7c>
    3174:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3178:	ldr	r0, [r5, #20]
    317c:	ldr	r2, [r1, #16]
    3180:	add	r1, r7, r7, lsl #1
    3184:	lsl	r1, r1, #3
    3188:	blx	r2
    318c:	cmp	r0, #0
    3190:	beq	58e8 <doProlog+0x2b28>
    3194:	lsl	r1, r7, #1
    3198:	str	r1, [r5, #16]
    319c:	str	r0, [r5, #20]
    31a0:	b	4b60 <doProlog+0x1da0>
    31a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    31a8:	ldrb	r0, [r0, #128]	; 0x80
    31ac:	cmp	r0, #0
    31b0:	beq	52fc <doProlog+0x253c>
    31b4:	ldr	r2, [r4, #68]	; 0x44
    31b8:	ldr	r1, [fp, #12]
    31bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    31c0:	sub	r1, r1, r2
    31c4:	ldrb	r5, [r0, #360]	; 0x168
    31c8:	add	r3, r9, r2
    31cc:	str	r1, [sp]
    31d0:	ldr	r1, [sp, #52]	; 0x34
    31d4:	mov	r2, r5
    31d8:	str	r1, [sp, #4]
    31dc:	mov	r1, r4
    31e0:	bl	b648 <appendAttributeValue>
    31e4:	cmp	r0, #0
    31e8:	bne	5a6c <doProlog+0x2cac>
    31ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
    31f0:	cmp	r5, #0
    31f4:	ldr	r0, [r3]
    31f8:	beq	4258 <doProlog+0x1498>
    31fc:	ldr	r5, [sp, #40]	; 0x28
    3200:	b	427c <doProlog+0x14bc>
    3204:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3208:	ldrb	r0, [r0, #160]	; 0xa0
    320c:	cmp	r0, #0
    3210:	beq	52fc <doProlog+0x253c>
    3214:	ldr	r4, [fp, #-44]	; 0xffffffd4
    3218:	ldr	r0, [r4, #136]	; 0x88
    321c:	cmp	r0, #0
    3220:	beq	4244 <doProlog+0x1484>
    3224:	ldr	r1, [r4, #12]
    3228:	mov	r0, #20
    322c:	blx	r1
    3230:	cmp	r0, #0
    3234:	beq	58e8 <doProlog+0x2b28>
    3238:	mov	r2, r0
    323c:	cmp	r8, #41	; 0x29
    3240:	mov	r0, #1
    3244:	vmov.i32	q8, #0	; 0x00000000
    3248:	movweq	r0, #2
    324c:	mov	r1, r2
    3250:	str	r0, [r1], #4
    3254:	ldr	r0, [sp, #68]	; 0x44
    3258:	vst1.32	{d16-d17}, [r1]
    325c:	str	r9, [r0]
    3260:	ldr	r1, [r4, #352]	; 0x160
    3264:	ldr	r0, [r4, #4]
    3268:	ldr	r3, [r4, #136]	; 0x88
    326c:	ldr	r1, [r1]
    3270:	blx	r3
    3274:	mov	r6, #0
    3278:	b	4248 <doProlog+0x1488>
    327c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3280:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3284:	mov	r6, #1
    3288:	strb	r6, [r1, #129]	; 0x81
    328c:	ldr	r0, [r0, #508]	; 0x1fc
    3290:	cmp	r0, #0
    3294:	beq	4064 <doProlog+0x12a4>
    3298:	ldr	r5, [r4, #68]	; 0x44
    329c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    32a0:	ldr	r6, [fp, #12]
    32a4:	add	r0, r9, r5
    32a8:	str	r0, [fp, #-32]	; 0xffffffe0
    32ac:	ldr	r0, [r3]
    32b0:	cmp	r0, #0
    32b4:	bne	32cc <doProlog+0x50c>
    32b8:	ldr	r0, [sp, #52]	; 0x34
    32bc:	bl	6948 <poolGrow>
    32c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    32c4:	cmp	r0, #0
    32c8:	beq	58e8 <doProlog+0x2b28>
    32cc:	sub	r5, r6, r5
    32d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    32d4:	ldr	r7, [r4, #60]	; 0x3c
    32d8:	sub	r1, fp, #32
    32dc:	mov	r2, r5
    32e0:	ldr	r0, [r0, #88]	; 0x58
    32e4:	str	r0, [sp]
    32e8:	mov	r0, r4
    32ec:	blx	r7
    32f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    32f4:	cmp	r0, r5
    32f8:	beq	40c8 <doProlog+0x1308>
    32fc:	ldr	r0, [sp, #52]	; 0x34
    3300:	bl	6948 <poolGrow>
    3304:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3308:	cmp	r0, #0
    330c:	bne	32d0 <doProlog+0x510>
    3310:	b	58e8 <doProlog+0x2b28>
    3314:	cmp	r5, #14
    3318:	bne	52fc <doProlog+0x253c>
    331c:	b	5550 <doProlog+0x2790>
    3320:	ldr	r8, [fp, #-44]	; 0xffffffd4
    3324:	ldr	r3, [fp, #12]
    3328:	mov	r1, #0
    332c:	b	4008 <doProlog+0x1248>
    3330:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3334:	ldr	r0, [r0, #92]	; 0x5c
    3338:	cmp	r0, #0
    333c:	bne	5550 <doProlog+0x2790>
    3340:	b	52fc <doProlog+0x253c>
    3344:	ldr	r8, [fp, #-44]	; 0xffffffd4
    3348:	ldr	r0, [r8, #92]	; 0x5c
    334c:	cmp	r0, #0
    3350:	beq	4358 <doProlog+0x1598>
    3354:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3358:	str	r9, [fp, #-32]	; 0xffffffe0
    335c:	ldr	r5, [fp, #12]
    3360:	ldr	r0, [r0]
    3364:	cmp	r0, #0
    3368:	bne	5258 <doProlog+0x2498>
    336c:	b	5248 <doProlog+0x2488>
    3370:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3374:	ldr	r8, [fp, #-56]	; 0xffffffc8
    3378:	mov	r0, #0
    337c:	mov	r6, #1
    3380:	strb	r0, [r1, #505]	; 0x1f9
    3384:	strb	r6, [r8, #129]	; 0x81
    3388:	ldr	r0, [r1, #92]	; 0x5c
    338c:	cmp	r0, #0
    3390:	beq	4360 <doProlog+0x15a0>
    3394:	ldr	r5, [r4, #68]	; 0x44
    3398:	ldr	r6, [fp, #12]
    339c:	add	r0, r9, r5
    33a0:	str	r0, [fp, #-32]	; 0xffffffe0
    33a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    33a8:	ldr	r0, [r0]
    33ac:	cmp	r0, #0
    33b0:	bne	33c4 <doProlog+0x604>
    33b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    33b8:	bl	6948 <poolGrow>
    33bc:	cmp	r0, #0
    33c0:	beq	5964 <doProlog+0x2ba4>
    33c4:	sub	r5, r6, r5
    33c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    33cc:	ldr	r7, [r4, #60]	; 0x3c
    33d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    33d4:	sub	r1, fp, #32
    33d8:	mov	r2, r5
    33dc:	ldr	r0, [r0, #440]	; 0x1b8
    33e0:	str	r0, [sp]
    33e4:	mov	r0, r4
    33e8:	blx	r7
    33ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
    33f0:	cmp	r0, r5
    33f4:	beq	43bc <doProlog+0x15fc>
    33f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    33fc:	bl	6948 <poolGrow>
    3400:	cmp	r0, #0
    3404:	bne	33c8 <doProlog+0x608>
    3408:	b	5964 <doProlog+0x2ba4>
    340c:	ldr	r5, [fp, #-44]	; 0xffffffd4
    3410:	ldr	r1, [sp, #36]	; 0x24
    3414:	movw	r2, #0
    3418:	mov	r0, #0
    341c:	mov	r3, #36	; 0x24
    3420:	movt	r2, #0
    3424:	strb	r0, [r5, #505]	; 0x1f9
    3428:	mov	r0, r5
    342c:	bl	6054 <lookup>
    3430:	cmp	r0, #0
    3434:	str	r0, [r5, #324]	; 0x144
    3438:	beq	58e8 <doProlog+0x2b28>
    343c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    3440:	mov	r0, #1
    3444:	strb	r0, [r1, #129]	; 0x81
    3448:	ldr	r0, [r5, #92]	; 0x5c
    344c:	cmp	r0, #0
    3450:	beq	34ec <doProlog+0x72c>
    3454:	ldr	r7, [r4, #56]	; 0x38
    3458:	ldr	r2, [fp, #12]
    345c:	ldr	r3, [sp, #64]	; 0x40
    3460:	mov	r0, r4
    3464:	mov	r1, r9
    3468:	blx	r7
    346c:	cmp	r0, #0
    3470:	beq	59cc <doProlog+0x2c0c>
    3474:	ldr	r5, [r4, #68]	; 0x44
    3478:	ldr	r6, [fp, #12]
    347c:	ldr	r8, [fp, #-44]	; 0xffffffd4
    3480:	add	r0, r9, r5
    3484:	str	r0, [fp, #-32]	; 0xffffffe0
    3488:	ldr	r0, [fp, #-52]	; 0xffffffcc
    348c:	ldr	r0, [r0]
    3490:	cmp	r0, #0
    3494:	bne	34a8 <doProlog+0x6e8>
    3498:	ldr	r0, [fp, #-60]	; 0xffffffc4
    349c:	bl	6948 <poolGrow>
    34a0:	cmp	r0, #0
    34a4:	beq	58e8 <doProlog+0x2b28>
    34a8:	sub	r5, r6, r5
    34ac:	ldr	r0, [r8, #440]	; 0x1b8
    34b0:	ldr	r7, [r4, #60]	; 0x3c
    34b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    34b8:	sub	r1, fp, #32
    34bc:	mov	r2, r5
    34c0:	str	r0, [sp]
    34c4:	mov	r0, r4
    34c8:	blx	r7
    34cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    34d0:	cmp	r0, r5
    34d4:	beq	4758 <doProlog+0x1998>
    34d8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    34dc:	bl	6948 <poolGrow>
    34e0:	cmp	r0, #0
    34e4:	bne	34ac <doProlog+0x6ec>
    34e8:	b	58e8 <doProlog+0x2b28>
    34ec:	ldr	r7, [r4, #56]	; 0x38
    34f0:	ldr	r2, [fp, #12]
    34f4:	ldr	r3, [sp, #64]	; 0x40
    34f8:	mov	r0, r4
    34fc:	mov	r1, r9
    3500:	blx	r7
    3504:	mov	r6, #1
    3508:	cmp	r0, #0
    350c:	beq	59cc <doProlog+0x2c0c>
    3510:	ldr	r8, [fp, #-56]	; 0xffffffc8
    3514:	ldrb	r0, [r8, #128]	; 0x80
    3518:	cmp	r0, #0
    351c:	beq	52ec <doProlog+0x252c>
    3520:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3524:	ldr	r0, [r0, #324]	; 0x144
    3528:	cmp	r0, #0
    352c:	beq	52ec <doProlog+0x252c>
    3530:	ldr	r5, [r4, #68]	; 0x44
    3534:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3538:	ldr	r7, [fp, #12]
    353c:	add	r0, r9, r5
    3540:	str	r0, [fp, #-32]	; 0xffffffe0
    3544:	ldr	r0, [r3]
    3548:	cmp	r0, #0
    354c:	bne	3564 <doProlog+0x7a4>
    3550:	ldr	r0, [sp, #52]	; 0x34
    3554:	bl	6948 <poolGrow>
    3558:	ldr	r3, [fp, #-64]	; 0xffffffc0
    355c:	cmp	r0, #0
    3560:	beq	58e8 <doProlog+0x2b28>
    3564:	sub	r5, r7, r5
    3568:	ldr	r0, [r8, #88]	; 0x58
    356c:	ldr	r7, [r4, #60]	; 0x3c
    3570:	sub	r1, fp, #32
    3574:	mov	r2, r5
    3578:	str	r0, [sp]
    357c:	mov	r0, r4
    3580:	blx	r7
    3584:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3588:	cmp	r0, r5
    358c:	beq	4660 <doProlog+0x18a0>
    3590:	ldr	r0, [sp, #52]	; 0x34
    3594:	bl	6948 <poolGrow>
    3598:	ldr	r3, [fp, #-64]	; 0xffffffc0
    359c:	cmp	r0, #0
    35a0:	bne	3568 <doProlog+0x7a8>
    35a4:	b	58e8 <doProlog+0x2b28>
    35a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    35ac:	ldr	r7, [r0, #92]	; 0x5c
    35b0:	cmp	r7, #0
    35b4:	beq	52fc <doProlog+0x253c>
    35b8:	ldr	r8, [fp, #-44]	; 0xffffffd4
    35bc:	mov	r6, #1
    35c0:	add	r3, r8, #328	; 0x148
    35c4:	ldr	r0, [r8, #4]
    35c8:	ldm	r3, {r1, r2, r3}
    35cc:	str	r6, [sp]
    35d0:	blx	r7
    35d4:	mov	r0, #0
    35d8:	str	r0, [r8, #328]	; 0x148
    35dc:	ldr	r0, [r8, #436]	; 0x1b4
    35e0:	cmp	r0, #0
    35e4:	beq	4f24 <doProlog+0x2164>
    35e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
    35ec:	ldr	r1, [r1]
    35f0:	cmp	r1, #0
    35f4:	beq	4f2c <doProlog+0x216c>
    35f8:	mov	r2, r1
    35fc:	ldr	r1, [r1]
    3600:	str	r0, [r2]
    3604:	mov	r0, r2
    3608:	cmp	r1, #0
    360c:	bne	35f8 <doProlog+0x838>
    3610:	b	4f1c <doProlog+0x215c>
    3614:	ldr	r4, [fp, #-44]	; 0xffffffd4
    3618:	ldr	r1, [r4, #328]	; 0x148
    361c:	cmp	r1, #0
    3620:	beq	4370 <doProlog+0x15b0>
    3624:	ldr	r0, [r4, #4]
    3628:	ldr	r7, [r4, #92]	; 0x5c
    362c:	ldr	r2, [r4, #332]	; 0x14c
    3630:	ldr	r3, [r4, #336]	; 0x150
    3634:	mov	r6, #0
    3638:	str	r6, [sp]
    363c:	blx	r7
    3640:	ldr	r0, [r4, #436]	; 0x1b4
    3644:	cmp	r0, #0
    3648:	beq	47d0 <doProlog+0x1a10>
    364c:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3650:	ldr	r7, [fp, #-56]	; 0xffffffc8
    3654:	ldr	r1, [r1]
    3658:	cmp	r1, #0
    365c:	beq	47dc <doProlog+0x1a1c>
    3660:	mov	r2, r1
    3664:	ldr	r1, [r1]
    3668:	str	r0, [r2]
    366c:	mov	r0, r2
    3670:	cmp	r1, #0
    3674:	bne	3660 <doProlog+0x8a0>
    3678:	str	r2, [r4, #436]	; 0x1b4
    367c:	b	47dc <doProlog+0x1a1c>
    3680:	ldr	r3, [r4, #48]	; 0x30
    3684:	ldr	r2, [fp, #12]
    3688:	mov	r0, r4
    368c:	mov	r1, r9
    3690:	blx	r3
    3694:	cmp	r0, #0
    3698:	bne	438c <doProlog+0x15cc>
    369c:	ldr	r6, [fp, #-56]	; 0xffffffc8
    36a0:	ldr	r8, [fp, #-44]	; 0xffffffd4
    36a4:	ldrb	r0, [r6, #128]	; 0x80
    36a8:	cmp	r0, #0
    36ac:	beq	4f44 <doProlog+0x2184>
    36b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    36b4:	str	r9, [fp, #-32]	; 0xffffffe0
    36b8:	ldr	r5, [fp, #12]
    36bc:	ldr	r0, [r3]
    36c0:	cmp	r0, #0
    36c4:	bne	36dc <doProlog+0x91c>
    36c8:	ldr	r0, [sp, #52]	; 0x34
    36cc:	bl	6948 <poolGrow>
    36d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
    36d4:	cmp	r0, #0
    36d8:	beq	58e8 <doProlog+0x2b28>
    36dc:	ldr	r0, [r6, #88]	; 0x58
    36e0:	ldr	r7, [r4, #60]	; 0x3c
    36e4:	sub	r1, fp, #32
    36e8:	mov	r2, r5
    36ec:	str	r0, [sp]
    36f0:	mov	r0, r4
    36f4:	blx	r7
    36f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    36fc:	cmp	r0, r5
    3700:	beq	50c8 <doProlog+0x2308>
    3704:	ldr	r0, [sp, #52]	; 0x34
    3708:	bl	6948 <poolGrow>
    370c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3710:	cmp	r0, #0
    3714:	bne	36dc <doProlog+0x91c>
    3718:	b	58e8 <doProlog+0x2b28>
    371c:	ldr	r6, [fp, #-56]	; 0xffffffc8
    3720:	ldrb	r0, [r6, #128]	; 0x80
    3724:	cmp	r0, #0
    3728:	beq	437c <doProlog+0x15bc>
    372c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3730:	str	r9, [fp, #-32]	; 0xffffffe0
    3734:	ldr	r5, [fp, #12]
    3738:	ldr	r8, [fp, #-44]	; 0xffffffd4
    373c:	ldr	r0, [r3]
    3740:	cmp	r0, #0
    3744:	bne	375c <doProlog+0x99c>
    3748:	ldr	r0, [sp, #52]	; 0x34
    374c:	bl	6948 <poolGrow>
    3750:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3754:	cmp	r0, #0
    3758:	beq	58e8 <doProlog+0x2b28>
    375c:	ldr	r0, [r6, #88]	; 0x58
    3760:	ldr	r7, [r4, #60]	; 0x3c
    3764:	sub	r1, fp, #32
    3768:	mov	r2, r5
    376c:	str	r0, [sp]
    3770:	mov	r0, r4
    3774:	blx	r7
    3778:	ldr	r0, [fp, #-32]	; 0xffffffe0
    377c:	cmp	r0, r5
    3780:	beq	45ac <doProlog+0x17ec>
    3784:	ldr	r0, [sp, #52]	; 0x34
    3788:	bl	6948 <poolGrow>
    378c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3790:	cmp	r0, #0
    3794:	bne	375c <doProlog+0x99c>
    3798:	b	58e8 <doProlog+0x2b28>
    379c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    37a0:	ldrb	r0, [r0, #128]	; 0x80
    37a4:	cmp	r0, #0
    37a8:	beq	52fc <doProlog+0x253c>
    37ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    37b0:	ldr	r0, [r0, #144]	; 0x90
    37b4:	cmp	r0, #0
    37b8:	bne	5550 <doProlog+0x2790>
    37bc:	b	52fc <doProlog+0x253c>
    37c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    37c4:	ldrb	r0, [r0, #128]	; 0x80
    37c8:	cmp	r0, #0
    37cc:	beq	52fc <doProlog+0x253c>
    37d0:	ldr	r0, [r4, #68]	; 0x44
    37d4:	ldr	r1, [fp, #12]
    37d8:	ldr	r5, [fp, #-44]	; 0xffffffd4
    37dc:	sub	r3, r1, r0
    37e0:	add	r2, r9, r0
    37e4:	mov	r0, r5
    37e8:	mov	r1, r4
    37ec:	bl	6b04 <storeEntityValue>
    37f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
    37f4:	ldr	r1, [r5, #324]	; 0x144
    37f8:	mov	sl, r0
    37fc:	ldr	r0, [r3, #120]	; 0x78
    3800:	cmp	r1, #0
    3804:	beq	4864 <doProlog+0x1aa4>
    3808:	str	r0, [r1, #4]
    380c:	ldr	r2, [r3, #116]	; 0x74
    3810:	sub	r0, r2, r0
    3814:	str	r0, [r1, #8]
    3818:	str	r2, [r3, #120]	; 0x78
    381c:	ldr	r0, [r5, #144]	; 0x90
    3820:	cmp	r0, #0
    3824:	beq	4868 <doProlog+0x1aa8>
    3828:	ldr	r0, [sp, #68]	; 0x44
    382c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3830:	str	r1, [r0]
    3834:	ldr	r6, [r5, #324]	; 0x144
    3838:	ldr	r0, [r5, #4]
    383c:	ldr	ip, [r5, #144]	; 0x90
    3840:	ldr	r5, [r5, #368]	; 0x170
    3844:	ldrb	r2, [r6, #33]	; 0x21
    3848:	ldm	r6, {r1, r3, r7}
    384c:	mov	r6, #0
    3850:	str	r7, [sp]
    3854:	stmib	sp, {r5, r6}
    3858:	str	r6, [sp, #12]
    385c:	str	r6, [sp, #16]
    3860:	blx	ip
    3864:	b	486c <doProlog+0x1aac>
    3868:	ldr	r0, [fp, #-56]	; 0xffffffc8
    386c:	ldrb	r0, [r0, #128]	; 0x80
    3870:	cmp	r0, #0
    3874:	beq	52fc <doProlog+0x253c>
    3878:	ldr	r0, [fp, #-44]	; 0xffffffd4
    387c:	ldr	r0, [r0, #324]	; 0x144
    3880:	cmp	r0, #0
    3884:	beq	52fc <doProlog+0x253c>
    3888:	ldr	r0, [fp, #-44]	; 0xffffffd4
    388c:	ldr	r0, [r0, #144]	; 0x90
    3890:	cmp	r0, #0
    3894:	beq	52fc <doProlog+0x253c>
    3898:	ldr	r0, [sp, #68]	; 0x44
    389c:	ldr	r8, [fp, #-44]	; 0xffffffd4
    38a0:	mov	r7, #0
    38a4:	str	r9, [r0]
    38a8:	ldr	r3, [r8, #324]	; 0x144
    38ac:	ldr	r0, [r8, #4]
    38b0:	ldr	ip, [r8, #144]	; 0x90
    38b4:	ldrb	r2, [r3, #33]	; 0x21
    38b8:	ldr	r1, [r3]
    38bc:	ldr	r6, [r3, #16]
    38c0:	ldr	r5, [r3, #20]
    38c4:	ldr	r3, [r3, #24]
    38c8:	str	r7, [sp]
    38cc:	stmib	sp, {r5, r6}
    38d0:	str	r3, [sp, #12]
    38d4:	str	r7, [sp, #16]
    38d8:	mov	r3, #0
    38dc:	blx	ip
    38e0:	b	5554 <doProlog+0x2794>
    38e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    38e8:	ldrb	r0, [r0, #128]	; 0x80
    38ec:	cmp	r0, #0
    38f0:	beq	52fc <doProlog+0x253c>
    38f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    38f8:	ldr	r0, [r0, #324]	; 0x144
    38fc:	cmp	r0, #0
    3900:	beq	52fc <doProlog+0x253c>
    3904:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3908:	str	r9, [fp, #-32]	; 0xffffffe0
    390c:	ldr	r5, [fp, #12]
    3910:	ldr	r6, [fp, #-56]	; 0xffffffc8
    3914:	ldr	r8, [fp, #-44]	; 0xffffffd4
    3918:	ldr	r0, [r3]
    391c:	cmp	r0, #0
    3920:	bne	3938 <doProlog+0xb78>
    3924:	ldr	r0, [sp, #52]	; 0x34
    3928:	bl	6948 <poolGrow>
    392c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    3930:	cmp	r0, #0
    3934:	beq	5978 <doProlog+0x2bb8>
    3938:	ldr	r0, [r6, #88]	; 0x58
    393c:	ldr	r7, [r4, #60]	; 0x3c
    3940:	sub	r1, fp, #32
    3944:	mov	r2, r5
    3948:	str	r0, [sp]
    394c:	mov	r0, r4
    3950:	blx	r7
    3954:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3958:	cmp	r0, r5
    395c:	beq	49bc <doProlog+0x1bfc>
    3960:	ldr	r0, [sp, #52]	; 0x34
    3964:	bl	6948 <poolGrow>
    3968:	ldr	r3, [fp, #-64]	; 0xffffffc0
    396c:	cmp	r0, #0
    3970:	bne	3938 <doProlog+0xb78>
    3974:	b	5978 <doProlog+0x2bb8>
    3978:	ldr	r0, [fp, #-44]	; 0xffffffd4
    397c:	ldr	r0, [r0, #104]	; 0x68
    3980:	cmp	r0, #0
    3984:	bne	5550 <doProlog+0x2790>
    3988:	b	52fc <doProlog+0x253c>
    398c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3990:	mov	r0, #0
    3994:	str	r0, [r1, #344]	; 0x158
    3998:	str	r0, [r1, #348]	; 0x15c
    399c:	ldr	r0, [r1, #104]	; 0x68
    39a0:	cmp	r0, #0
    39a4:	beq	52fc <doProlog+0x253c>
    39a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    39ac:	str	r9, [fp, #-32]	; 0xffffffe0
    39b0:	ldr	r5, [fp, #12]
    39b4:	ldr	r8, [fp, #-44]	; 0xffffffd4
    39b8:	ldr	r0, [r0]
    39bc:	cmp	r0, #0
    39c0:	bne	53c4 <doProlog+0x2604>
    39c4:	b	53b4 <doProlog+0x25f4>
    39c8:	ldr	r8, [fp, #-44]	; 0xffffffd4
    39cc:	mov	r6, #1
    39d0:	ldr	r0, [r8, #344]	; 0x158
    39d4:	cmp	r0, #0
    39d8:	beq	4ae0 <doProlog+0x1d20>
    39dc:	ldr	r0, [r8, #104]	; 0x68
    39e0:	cmp	r0, #0
    39e4:	beq	4ae0 <doProlog+0x1d20>
    39e8:	ldr	r5, [r4, #68]	; 0x44
    39ec:	ldr	r6, [fp, #12]
    39f0:	add	r0, r9, r5
    39f4:	str	r0, [fp, #-32]	; 0xffffffe0
    39f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    39fc:	ldr	r0, [r0]
    3a00:	cmp	r0, #0
    3a04:	bne	3a18 <doProlog+0xc58>
    3a08:	ldr	r0, [fp, #-60]	; 0xffffffc4
    3a0c:	bl	6948 <poolGrow>
    3a10:	cmp	r0, #0
    3a14:	beq	58e8 <doProlog+0x2b28>
    3a18:	sub	r5, r6, r5
    3a1c:	ldr	r0, [r8, #440]	; 0x1b8
    3a20:	ldr	r7, [r4, #60]	; 0x3c
    3a24:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3a28:	sub	r1, fp, #32
    3a2c:	mov	r2, r5
    3a30:	str	r0, [sp]
    3a34:	mov	r0, r4
    3a38:	blx	r7
    3a3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3a40:	cmp	r0, r5
    3a44:	beq	4a60 <doProlog+0x1ca0>
    3a48:	ldr	r0, [fp, #-60]	; 0xffffffc4
    3a4c:	bl	6948 <poolGrow>
    3a50:	cmp	r0, #0
    3a54:	bne	3a1c <doProlog+0xc5c>
    3a58:	b	58e8 <doProlog+0x2b28>
    3a5c:	ldr	r4, [fp, #-44]	; 0xffffffd4
    3a60:	mov	r6, #1
    3a64:	ldr	r0, [r4, #348]	; 0x15c
    3a68:	cmp	r0, #0
    3a6c:	beq	3aa8 <doProlog+0xce8>
    3a70:	ldr	r0, [r4, #104]	; 0x68
    3a74:	cmp	r0, #0
    3a78:	beq	3aa8 <doProlog+0xce8>
    3a7c:	ldr	r0, [sp, #68]	; 0x44
    3a80:	mov	r6, #0
    3a84:	str	r9, [r0]
    3a88:	ldr	r3, [r4, #348]	; 0x15c
    3a8c:	ldr	r2, [r4, #368]	; 0x170
    3a90:	ldr	r0, [r4, #4]
    3a94:	ldr	r7, [r4, #104]	; 0x68
    3a98:	ldr	r1, [r4, #344]	; 0x158
    3a9c:	str	r3, [sp]
    3aa0:	mov	r3, #0
    3aa4:	blx	r7
    3aa8:	ldr	r0, [r4, #436]	; 0x1b4
    3aac:	cmp	r0, #0
    3ab0:	beq	439c <doProlog+0x15dc>
    3ab4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    3ab8:	ldr	r1, [r1]
    3abc:	cmp	r1, #0
    3ac0:	beq	43a4 <doProlog+0x15e4>
    3ac4:	mov	r2, r1
    3ac8:	ldr	r1, [r1]
    3acc:	str	r0, [r2]
    3ad0:	mov	r0, r2
    3ad4:	cmp	r1, #0
    3ad8:	bne	3ac4 <doProlog+0xd04>
    3adc:	str	r2, [r4, #436]	; 0x1b4
    3ae0:	b	43a4 <doProlog+0x15e4>
    3ae4:	ldr	r7, [r4, #56]	; 0x38
    3ae8:	ldr	r2, [fp, #12]
    3aec:	ldr	r3, [sp, #64]	; 0x40
    3af0:	mov	r0, r4
    3af4:	mov	r1, r9
    3af8:	blx	r7
    3afc:	cmp	r0, #0
    3b00:	beq	59cc <doProlog+0x2c0c>
    3b04:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3b08:	ldr	r0, [r0, #344]	; 0x158
    3b0c:	cmp	r0, #0
    3b10:	beq	52fc <doProlog+0x253c>
    3b14:	ldr	r5, [r4, #68]	; 0x44
    3b18:	ldr	r7, [fp, #12]
    3b1c:	ldr	r6, [fp, #-44]	; 0xffffffd4
    3b20:	add	r0, r9, r5
    3b24:	str	r0, [fp, #-32]	; 0xffffffe0
    3b28:	ldr	r0, [fp, #-52]	; 0xffffffcc
    3b2c:	ldr	r0, [r0]
    3b30:	cmp	r0, #0
    3b34:	bne	3b48 <doProlog+0xd88>
    3b38:	ldr	r0, [fp, #-60]	; 0xffffffc4
    3b3c:	bl	6948 <poolGrow>
    3b40:	cmp	r0, #0
    3b44:	beq	58e8 <doProlog+0x2b28>
    3b48:	sub	r5, r7, r5
    3b4c:	ldr	r0, [r6, #440]	; 0x1b8
    3b50:	ldr	r7, [r4, #60]	; 0x3c
    3b54:	ldr	r3, [fp, #-52]	; 0xffffffcc
    3b58:	sub	r1, fp, #32
    3b5c:	mov	r2, r5
    3b60:	str	r0, [sp]
    3b64:	mov	r0, r4
    3b68:	blx	r7
    3b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    3b70:	cmp	r0, r5
    3b74:	beq	46f0 <doProlog+0x1930>
    3b78:	ldr	r0, [fp, #-60]	; 0xffffffc4
    3b7c:	bl	6948 <poolGrow>
    3b80:	cmp	r0, #0
    3b84:	bne	3b4c <doProlog+0xd8c>
    3b88:	b	58e8 <doProlog+0x2b28>
    3b8c:	ldr	r5, [fp, #-44]	; 0xffffffd4
    3b90:	ldr	r3, [fp, #12]
    3b94:	mov	r1, r4
    3b98:	mov	r2, r9
    3b9c:	mov	r0, r5
    3ba0:	bl	664c <getAttributeId>
    3ba4:	cmp	r0, #0
    3ba8:	str	r0, [r5, #356]	; 0x164
    3bac:	beq	58e8 <doProlog+0x2b28>
    3bb0:	mov	r0, #360	; 0x168
    3bb4:	mov	r1, #0
    3bb8:	strh	r1, [r5, r0]
    3bbc:	str	r1, [r5, #340]	; 0x154
    3bc0:	b	3c48 <doProlog+0xe88>
    3bc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3bc8:	movw	r0, #0
    3bcc:	movt	r0, #0
    3bd0:	str	r0, [r1, #340]	; 0x154
    3bd4:	mov	r0, #1
    3bd8:	strb	r0, [r1, #360]	; 0x168
    3bdc:	b	3c48 <doProlog+0xe88>
    3be0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3be4:	movw	r0, #0
    3be8:	movt	r0, #0
    3bec:	str	r0, [r1, #340]	; 0x154
    3bf0:	mov	r0, #1
    3bf4:	strb	r0, [r1, #361]	; 0x169
    3bf8:	b	3c48 <doProlog+0xe88>
    3bfc:	movw	r0, #0
    3c00:	movt	r0, #0
    3c04:	b	3c40 <doProlog+0xe80>
    3c08:	movw	r0, #0
    3c0c:	movt	r0, #0
    3c10:	b	3c40 <doProlog+0xe80>
    3c14:	movw	r0, #0
    3c18:	movt	r0, #0
    3c1c:	b	3c40 <doProlog+0xe80>
    3c20:	movw	r0, #0
    3c24:	movt	r0, #0
    3c28:	b	3c40 <doProlog+0xe80>
    3c2c:	movw	r0, #0
    3c30:	movt	r0, #0
    3c34:	b	3c40 <doProlog+0xe80>
    3c38:	movw	r0, #0
    3c3c:	movt	r0, #0
    3c40:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3c44:	str	r0, [r1, #340]	; 0x154
    3c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3c4c:	ldrb	r0, [r0, #128]	; 0x80
    3c50:	cmp	r0, #0
    3c54:	beq	52fc <doProlog+0x253c>
    3c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3c5c:	ldr	r0, [r0, #140]	; 0x8c
    3c60:	cmp	r0, #0
    3c64:	bne	5550 <doProlog+0x2790>
    3c68:	b	52fc <doProlog+0x253c>
    3c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3c70:	ldr	r6, [fp, #12]
    3c74:	ldr	r8, [r0, #364]	; 0x16c
    3c78:	str	r9, [fp, #-32]	; 0xffffffe0
    3c7c:	mov	r5, r8
    3c80:	add	sl, r8, #80	; 0x50
    3c84:	ldr	r0, [r5, #92]!	; 0x5c
    3c88:	cmp	r0, #0
    3c8c:	bne	571c <doProlog+0x295c>
    3c90:	b	570c <doProlog+0x294c>
    3c94:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3c98:	ldr	r0, [r0, #136]	; 0x88
    3c9c:	cmp	r0, #0
    3ca0:	beq	52fc <doProlog+0x253c>
    3ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3ca8:	ldr	r6, [fp, #12]
    3cac:	ldr	r8, [r0, #364]	; 0x16c
    3cb0:	str	r9, [fp, #-32]	; 0xffffffe0
    3cb4:	mov	r5, r8
    3cb8:	add	sl, r8, #80	; 0x50
    3cbc:	ldr	r0, [r5, #92]!	; 0x5c
    3cc0:	cmp	r0, #0
    3cc4:	bne	5460 <doProlog+0x26a0>
    3cc8:	b	5450 <doProlog+0x2690>
    3ccc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3cd0:	ldrb	r0, [r0, #160]	; 0xa0
    3cd4:	cmp	r0, #0
    3cd8:	beq	52fc <doProlog+0x253c>
    3cdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
    3ce0:	ldr	r0, [r2, #164]	; 0xa4
    3ce4:	ldr	r1, [r2, #180]	; 0xb4
    3ce8:	ldr	r2, [r2, #184]	; 0xb8
    3cec:	add	r1, r2, r1, lsl #2
    3cf0:	mov	r2, #3
    3cf4:	ldr	r1, [r1, #-4]
    3cf8:	rsb	r1, r1, r1, lsl #3
    3cfc:	str	r2, [r0, r1, lsl #2]
    3d00:	b	3f18 <doProlog+0x1158>
    3d04:	ldr	r5, [fp, #-44]	; 0xffffffd4
    3d08:	ldr	r4, [fp, #-56]	; 0xffffffc8
    3d0c:	ldr	r1, [r5, #268]	; 0x10c
    3d10:	ldr	r0, [r5, #484]	; 0x1e4
    3d14:	cmp	r1, r0
    3d18:	bcc	4cfc <doProlog+0x1f3c>
    3d1c:	cmp	r0, #0
    3d20:	beq	4cdc <doProlog+0x1f1c>
    3d24:	lsl	r1, r0, #1
    3d28:	str	r1, [r5, #484]	; 0x1e4
    3d2c:	ldr	r2, [r5, #16]
    3d30:	ldr	r0, [r5, #480]	; 0x1e0
    3d34:	blx	r2
    3d38:	mov	sl, #1
    3d3c:	cmp	r0, #0
    3d40:	beq	5a70 <doProlog+0x2cb0>
    3d44:	str	r0, [r5, #480]	; 0x1e0
    3d48:	ldr	r0, [r4, #184]	; 0xb8
    3d4c:	cmp	r0, #0
    3d50:	beq	4cfc <doProlog+0x1f3c>
    3d54:	ldr	r1, [r5, #484]	; 0x1e4
    3d58:	ldr	r2, [r5, #16]
    3d5c:	lsl	r1, r1, #2
    3d60:	blx	r2
    3d64:	cmp	r0, #0
    3d68:	beq	5a70 <doProlog+0x2cb0>
    3d6c:	ldr	r4, [fp, #-56]	; 0xffffffc8
    3d70:	ldr	r5, [fp, #-44]	; 0xffffffd4
    3d74:	str	r0, [r4, #184]	; 0xb8
    3d78:	b	4cfc <doProlog+0x1f3c>
    3d7c:	mov	r7, #2
    3d80:	b	3d90 <doProlog+0xfd0>
    3d84:	mov	r7, #1
    3d88:	b	3d90 <doProlog+0xfd0>
    3d8c:	mov	r7, #3
    3d90:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3d94:	ldrb	r0, [r0, #160]	; 0xa0
    3d98:	cmp	r0, #0
    3d9c:	beq	52fc <doProlog+0x253c>
    3da0:	ldr	r5, [fp, #-56]	; 0xffffffc8
    3da4:	ldr	r4, [fp, #-44]	; 0xffffffd4
    3da8:	ldr	r2, [r5, #180]	; 0xb4
    3dac:	ldr	r3, [r5, #184]	; 0xb8
    3db0:	ldr	r0, [r4, #136]	; 0x88
    3db4:	ldr	r1, [r5, #164]	; 0xa4
    3db8:	subs	r2, r2, #1
    3dbc:	str	r2, [r5, #180]	; 0xb4
    3dc0:	ldr	r2, [r3, r2, lsl #2]
    3dc4:	rsb	r2, r2, r2, lsl #3
    3dc8:	add	r1, r1, r2, lsl #2
    3dcc:	str	r7, [r1, #4]
    3dd0:	clz	r1, r0
    3dd4:	lsr	r6, r1, #5
    3dd8:	bne	52ec <doProlog+0x252c>
    3ddc:	cmp	r0, #0
    3de0:	beq	3e60 <doProlog+0x10a0>
    3de4:	ldr	r7, [r4, #364]	; 0x16c
    3de8:	ldr	r1, [r7, #176]	; 0xb0
    3dec:	ldr	r0, [r7, #168]	; 0xa8
    3df0:	add	r1, r1, r1, lsl #2
    3df4:	add	r0, r0, r1, lsl #2
    3df8:	ldr	r1, [r4, #12]
    3dfc:	blx	r1
    3e00:	cmp	r0, #0
    3e04:	beq	58e8 <doProlog+0x2b28>
    3e08:	mov	sl, r0
    3e0c:	ldr	r0, [r7, #176]	; 0xb0
    3e10:	sub	r3, fp, #32
    3e14:	add	r1, sl, #20
    3e18:	mov	r2, sl
    3e1c:	str	r1, [fp, #-32]	; 0xffffffe0
    3e20:	mov	r1, #0
    3e24:	add	r0, r0, r0, lsl #2
    3e28:	add	r0, sl, r0, lsl #2
    3e2c:	str	r0, [fp, #-36]	; 0xffffffdc
    3e30:	sub	r0, fp, #36	; 0x24
    3e34:	str	r0, [sp]
    3e38:	mov	r0, r4
    3e3c:	bl	bf6c <build_node>
    3e40:	ldr	r0, [sp, #68]	; 0x44
    3e44:	mov	r2, sl
    3e48:	str	r9, [r0]
    3e4c:	ldr	r1, [r4, #352]	; 0x160
    3e50:	ldr	r0, [r4, #4]
    3e54:	ldr	r3, [r4, #136]	; 0x88
    3e58:	ldr	r1, [r1]
    3e5c:	blx	r3
    3e60:	mov	r0, #0
    3e64:	str	r0, [r5, #168]	; 0xa8
    3e68:	strb	r0, [r5, #160]	; 0xa0
    3e6c:	b	52ec <doProlog+0x252c>
    3e70:	ldr	r5, [fp, #-44]	; 0xffffffd4
    3e74:	ldr	r0, [r5, #268]	; 0x10c
    3e78:	ldr	r1, [r5, #480]	; 0x1e0
    3e7c:	ldrb	r2, [r1, r0]
    3e80:	cmp	r2, #44	; 0x2c
    3e84:	beq	5a34 <doProlog+0x2c74>
    3e88:	mov	r6, #1
    3e8c:	cmp	r2, #0
    3e90:	bne	3edc <doProlog+0x111c>
    3e94:	ldr	r7, [fp, #-56]	; 0xffffffc8
    3e98:	ldrb	r2, [r7, #160]	; 0xa0
    3e9c:	cmp	r2, #0
    3ea0:	beq	3edc <doProlog+0x111c>
    3ea4:	ldr	r2, [r7, #164]	; 0xa4
    3ea8:	ldr	r3, [r7, #180]	; 0xb4
    3eac:	ldr	r7, [r7, #184]	; 0xb8
    3eb0:	add	r3, r7, r3, lsl #2
    3eb4:	ldr	r3, [r3, #-4]
    3eb8:	rsb	r3, r3, r3, lsl #3
    3ebc:	ldr	r3, [r2, r3, lsl #2]!
    3ec0:	cmp	r3, #3
    3ec4:	beq	3edc <doProlog+0x111c>
    3ec8:	mov	r3, #5
    3ecc:	str	r3, [r2]
    3ed0:	ldr	r2, [r5, #136]	; 0x88
    3ed4:	clz	r2, r2
    3ed8:	lsr	r6, r2, #5
    3edc:	mov	r2, #124	; 0x7c
    3ee0:	strb	r2, [r1, r0]
    3ee4:	b	52ec <doProlog+0x252c>
    3ee8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3eec:	ldr	r0, [r1, #268]	; 0x10c
    3ef0:	ldr	r1, [r1, #480]	; 0x1e0
    3ef4:	ldrb	r2, [r1, r0]
    3ef8:	cmp	r2, #124	; 0x7c
    3efc:	beq	5a34 <doProlog+0x2c74>
    3f00:	mov	r2, #44	; 0x2c
    3f04:	strb	r2, [r1, r0]
    3f08:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3f0c:	ldrb	r0, [r0, #160]	; 0xa0
    3f10:	cmp	r0, #0
    3f14:	beq	52fc <doProlog+0x253c>
    3f18:	ldr	r0, [fp, #-44]	; 0xffffffd4
    3f1c:	ldr	r0, [r0, #136]	; 0x88
    3f20:	cmp	r0, #0
    3f24:	bne	5550 <doProlog+0x2790>
    3f28:	b	52fc <doProlog+0x253c>
    3f2c:	mov	r7, #2
    3f30:	b	3f40 <doProlog+0x1180>
    3f34:	mov	r7, #1
    3f38:	b	3f40 <doProlog+0x1180>
    3f3c:	mov	r7, #3
    3f40:	ldr	r0, [fp, #-56]	; 0xffffffc8
    3f44:	ldrb	r0, [r0, #160]	; 0xa0
    3f48:	cmp	r0, #0
    3f4c:	beq	52fc <doProlog+0x253c>
    3f50:	cmp	r7, #0
    3f54:	ldr	r5, [fp, #12]
    3f58:	ldr	r6, [fp, #-44]	; 0xffffffd4
    3f5c:	ldrne	r0, [r4, #68]	; 0x44
    3f60:	ldr	r4, [fp, #-56]	; 0xffffffc8
    3f64:	subne	r5, r5, r0
    3f68:	mov	r0, r6
    3f6c:	bl	7448 <nextScaffoldPart>
    3f70:	mov	sl, #1
    3f74:	cmp	r0, #0
    3f78:	bmi	5a70 <doProlog+0x2cb0>
    3f7c:	ldr	r1, [r4, #164]	; 0xa4
    3f80:	rsb	r9, r0, r0, lsl #3
    3f84:	mov	r0, #4
    3f88:	str	r0, [r1, r9, lsl #2]!
    3f8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3f90:	str	r7, [r1, #4]
    3f94:	ldr	r8, [r6, #364]	; 0x16c
    3f98:	str	r0, [fp, #-32]	; 0xffffffe0
    3f9c:	mov	r7, r8
    3fa0:	add	r6, r8, #80	; 0x50
    3fa4:	ldr	r0, [r7, #92]!	; 0x5c
    3fa8:	cmp	r0, #0
    3fac:	bne	559c <doProlog+0x27dc>
    3fb0:	b	558c <doProlog+0x27cc>
    3fb4:	ldr	r8, [fp, #-44]	; 0xffffffd4
    3fb8:	ldr	r3, [fp, #12]
    3fbc:	mov	r1, r4
    3fc0:	mov	r2, r9
    3fc4:	mov	r0, r8
    3fc8:	bl	76d8 <reportProcessingInstruction>
    3fcc:	cmp	r0, #0
    3fd0:	bne	5554 <doProlog+0x2794>
    3fd4:	b	58e8 <doProlog+0x2b28>
    3fd8:	ldr	r8, [fp, #-44]	; 0xffffffd4
    3fdc:	ldr	r3, [fp, #12]
    3fe0:	mov	r1, r4
    3fe4:	mov	r2, r9
    3fe8:	mov	r0, r8
    3fec:	bl	7a58 <reportComment>
    3ff0:	cmp	r0, #0
    3ff4:	bne	5554 <doProlog+0x2794>
    3ff8:	b	58e8 <doProlog+0x2b28>
    3ffc:	ldr	r8, [fp, #-44]	; 0xffffffd4
    4000:	ldr	r3, [fp, #12]
    4004:	mov	r1, #1
    4008:	mov	r2, r9
    400c:	mov	r0, r8
    4010:	bl	5aa8 <processXmlDecl>
    4014:	cmp	r0, #0
    4018:	bne	5a6c <doProlog+0x2cac>
    401c:	ldr	r0, [r8, #152]	; 0x98
    4020:	str	r0, [fp, #-40]	; 0xffffffd8
    4024:	b	5554 <doProlog+0x2794>
    4028:	ldr	r8, [fp, #-44]	; 0xffffffd4
    402c:	ldr	r3, [r8, #88]	; 0x58
    4030:	cmp	r3, #0
    4034:	beq	48f4 <doProlog+0x1b34>
    4038:	str	r9, [fp, #-32]	; 0xffffffe0
    403c:	ldr	r5, [fp, #12]
    4040:	ldrb	r0, [r4, #72]	; 0x48
    4044:	cmp	r0, #0
    4048:	beq	4878 <doProlog+0x1ab8>
    404c:	ldr	r0, [r8, #4]
    4050:	sub	r2, r5, r9
    4054:	mov	r1, r9
    4058:	blx	r3
    405c:	mov	r7, r8
    4060:	b	48f0 <doProlog+0x1b30>
    4064:	ldrb	r0, [r1, #130]	; 0x82
    4068:	ldr	r8, [fp, #-44]	; 0xffffffd4
    406c:	strb	r0, [r1, #128]	; 0x80
    4070:	cmp	r0, #0
    4074:	bne	52ec <doProlog+0x252c>
    4078:	ldr	r1, [r8, #116]	; 0x74
    407c:	cmp	r1, #0
    4080:	beq	52ec <doProlog+0x252c>
    4084:	ldr	r0, [r8, #4]
    4088:	blx	r1
    408c:	cmp	r0, #0
    4090:	bne	52ec <doProlog+0x252c>
    4094:	b	58e0 <doProlog+0x2b20>
    4098:	ldr	r0, [r4, #448]	; 0x1c0
    409c:	mov	sl, #1
    40a0:	cmp	r0, #0
    40a4:	beq	5a70 <doProlog+0x2cb0>
    40a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    40ac:	ldr	r5, [fp, #12]
    40b0:	str	r0, [fp, #-32]	; 0xffffffe0
    40b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
    40b8:	ldr	r0, [r0]
    40bc:	cmp	r0, #0
    40c0:	bne	56c8 <doProlog+0x2908>
    40c4:	b	56b8 <doProlog+0x28f8>
    40c8:	ldr	r5, [sp, #40]	; 0x28
    40cc:	mov	sl, #1
    40d0:	ldr	r0, [r5]
    40d4:	cmp	r0, #0
    40d8:	beq	5a70 <doProlog+0x2cb0>
    40dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    40e0:	ldr	r1, [r0, #88]	; 0x58
    40e4:	ldr	r0, [r0, #92]	; 0x5c
    40e8:	cmp	r0, r1
    40ec:	bne	4108 <doProlog+0x1348>
    40f0:	ldr	r0, [sp, #52]	; 0x34
    40f4:	bl	6948 <poolGrow>
    40f8:	cmp	r0, #0
    40fc:	beq	5a70 <doProlog+0x2cb0>
    4100:	ldr	r0, [fp, #-64]	; 0xffffffc0
    4104:	ldr	r0, [r0]
    4108:	ldr	r2, [fp, #-64]	; 0xffffffc0
    410c:	add	r1, r0, #1
    4110:	str	r1, [r2]
    4114:	mov	r1, #0
    4118:	strb	r1, [r0]
    411c:	ldr	r1, [r5]
    4120:	cmp	r1, #0
    4124:	beq	5a70 <doProlog+0x2cb0>
    4128:	ldr	r0, [fp, #-56]	; 0xffffffc8
    412c:	ldr	r0, [r0, #140]	; 0x8c
    4130:	cmp	r0, #0
    4134:	beq	4930 <doProlog+0x1b70>
    4138:	ldr	r2, [fp, #-44]	; 0xffffffd4
    413c:	ldrb	r9, [r1]
    4140:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4144:	mov	sl, #0
    4148:	ldr	r6, [r2, #512]	; 0x200
    414c:	cmp	r9, #0
    4150:	beq	417c <doProlog+0x13bc>
    4154:	add	r3, r1, #1
    4158:	mov	r2, r9
    415c:	movw	r5, #16963	; 0x4243
    4160:	uxtb	r2, r2
    4164:	movt	r5, #15
    4168:	mul	r6, r6, r5
    416c:	eor	r6, r6, r2
    4170:	ldrb	r2, [r3], #1
    4174:	cmp	r2, #0
    4178:	bne	415c <doProlog+0x139c>
    417c:	ldr	r7, [fp, #-56]	; 0xffffffc8
    4180:	sub	r2, r0, #1
    4184:	and	r3, r6, r2
    4188:	ldr	r7, [r7, #132]	; 0x84
    418c:	ldr	r5, [r7, r3, lsl #2]
    4190:	cmp	r5, #0
    4194:	beq	4944 <doProlog+0x1b84>
    4198:	mov	ip, r7
    419c:	rsb	r7, r0, #0
    41a0:	lsr	r2, r2, #2
    41a4:	and	r7, r6, r7
    41a8:	mov	r6, #0
    41ac:	mov	r4, ip
    41b0:	str	r2, [sp, #24]
    41b4:	str	r7, [sp, #28]
    41b8:	add	r7, r1, #1
    41bc:	str	r7, [sp, #32]
    41c0:	b	41e4 <doProlog+0x1424>
    41c4:	tst	r6, #255	; 0xff
    41c8:	beq	421c <doProlog+0x145c>
    41cc:	uxtb	r2, r6
    41d0:	subs	r3, r3, r2
    41d4:	addcc	r3, r3, r0
    41d8:	ldr	r5, [r4, r3, lsl #2]
    41dc:	cmp	r5, #0
    41e0:	beq	5240 <doProlog+0x2480>
    41e4:	ldr	r2, [r5]
    41e8:	ldrb	r7, [r2]
    41ec:	cmp	r9, r7
    41f0:	bne	41c4 <doProlog+0x1404>
    41f4:	ldr	sl, [sp, #32]
    41f8:	add	ip, r2, #1
    41fc:	mov	lr, r9
    4200:	tst	lr, #255	; 0xff
    4204:	beq	493c <doProlog+0x1b7c>
    4208:	ldrb	lr, [sl], #1
    420c:	ldrb	r2, [ip], #1
    4210:	cmp	lr, r2
    4214:	beq	4200 <doProlog+0x1440>
    4218:	b	41c4 <doProlog+0x1404>
    421c:	ldr	r2, [fp, #-56]	; 0xffffffc8
    4220:	ldr	r7, [sp, #28]
    4224:	ldr	r6, [sp, #24]
    4228:	ldrb	r2, [r2, #136]	; 0x88
    422c:	sub	r2, r2, #1
    4230:	and	r2, r6, r7, lsr r2
    4234:	orr	r6, r2, #1
    4238:	b	41cc <doProlog+0x140c>
    423c:	ldr	r0, [r5, #20]
    4240:	b	4b60 <doProlog+0x1da0>
    4244:	mov	r6, #1
    4248:	ldr	r1, [fp, #-56]	; 0xffffffc8
    424c:	mov	r0, #0
    4250:	strb	r0, [r1, #160]	; 0xa0
    4254:	b	52ec <doProlog+0x252c>
    4258:	ldr	r5, [sp, #40]	; 0x28
    425c:	ldr	r1, [r5]
    4260:	cmp	r1, r0
    4264:	beq	427c <doProlog+0x14bc>
    4268:	mov	r1, r0
    426c:	ldrb	r2, [r1, #-1]!
    4270:	cmp	r2, #32
    4274:	moveq	r0, r1
    4278:	streq	r1, [r3]
    427c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    4280:	ldr	r1, [r1, #88]	; 0x58
    4284:	cmp	r0, r1
    4288:	bne	42a4 <doProlog+0x14e4>
    428c:	ldr	r0, [sp, #52]	; 0x34
    4290:	bl	6948 <poolGrow>
    4294:	cmp	r0, #0
    4298:	beq	58e8 <doProlog+0x2b28>
    429c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    42a0:	ldr	r0, [r3]
    42a4:	add	r1, r0, #1
    42a8:	str	r1, [r3]
    42ac:	mov	r1, #0
    42b0:	strb	r1, [r0]
    42b4:	ldr	r0, [r3]
    42b8:	ldr	ip, [r5]
    42bc:	str	r0, [r5]
    42c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    42c4:	cmp	ip, #0
    42c8:	ldr	r6, [r0, #352]	; 0x160
    42cc:	ldrb	r5, [r0, #360]	; 0x168
    42d0:	ldr	r7, [r0, #356]	; 0x164
    42d4:	ldr	sl, [r6, #12]
    42d8:	beq	4304 <doProlog+0x1544>
    42dc:	cmp	sl, #1
    42e0:	blt	4304 <doProlog+0x1544>
    42e4:	ldr	r0, [r6, #20]
    42e8:	mov	r1, sl
    42ec:	ldr	r2, [r0]
    42f0:	cmp	r2, r7
    42f4:	beq	4dc0 <doProlog+0x2000>
    42f8:	add	r0, r0, #12
    42fc:	subs	r1, r1, #1
    4300:	bne	42ec <doProlog+0x152c>
    4304:	ldr	r0, [r6, #16]
    4308:	cmp	sl, r0
    430c:	bne	4350 <doProlog+0x1590>
    4310:	mov	r4, ip
    4314:	cmp	sl, #0
    4318:	beq	4d70 <doProlog+0x1fb0>
    431c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4320:	ldr	r0, [r6, #20]
    4324:	ldr	r2, [r1, #16]
    4328:	add	r1, sl, sl, lsl #1
    432c:	lsl	r1, r1, #3
    4330:	blx	r2
    4334:	cmp	r0, #0
    4338:	beq	58e8 <doProlog+0x2b28>
    433c:	lsl	r1, sl, #1
    4340:	mov	ip, r4
    4344:	str	r1, [r6, #16]
    4348:	str	r0, [r6, #20]
    434c:	b	4d98 <doProlog+0x1fd8>
    4350:	ldr	r0, [r6, #20]
    4354:	b	4d98 <doProlog+0x1fd8>
    4358:	mov	r6, #1
    435c:	b	52e4 <doProlog+0x2524>
    4360:	movw	r0, #0
    4364:	movt	r0, #0
    4368:	str	r0, [r1, #332]	; 0x14c
    436c:	b	4424 <doProlog+0x1664>
    4370:	ldr	r7, [fp, #-56]	; 0xffffffc8
    4374:	mov	r6, #1
    4378:	b	47f0 <doProlog+0x1a30>
    437c:	ldr	r0, [sp, #40]	; 0x28
    4380:	ldr	r1, [fp, #-64]	; 0xffffffc0
    4384:	ldr	r0, [r0]
    4388:	str	r0, [r1]
    438c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    4390:	mov	r0, #0
    4394:	str	r0, [r1, #324]	; 0x144
    4398:	b	52fc <doProlog+0x253c>
    439c:	ldr	r0, [r4, #432]	; 0x1b0
    43a0:	str	r0, [r4, #436]	; 0x1b4
    43a4:	mov	r0, #0
    43a8:	str	r0, [r4, #432]	; 0x1b0
    43ac:	str	r0, [r4, #440]	; 0x1b8
    43b0:	str	r0, [r4, #444]	; 0x1bc
    43b4:	str	r0, [r4, #448]	; 0x1c0
    43b8:	b	52ec <doProlog+0x252c>
    43bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
    43c0:	ldr	r0, [r0, #448]	; 0x1c0
    43c4:	cmp	r0, #0
    43c8:	beq	5964 <doProlog+0x2ba4>
    43cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    43d0:	ldr	r1, [r2, #440]	; 0x1b8
    43d4:	ldr	r0, [r2, #444]	; 0x1bc
    43d8:	cmp	r0, r1
    43dc:	bne	43fc <doProlog+0x163c>
    43e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    43e4:	bl	6948 <poolGrow>
    43e8:	cmp	r0, #0
    43ec:	beq	5964 <doProlog+0x2ba4>
    43f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    43f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    43f8:	ldr	r0, [r0]
    43fc:	add	r1, r0, #1
    4400:	mov	r6, #0
    4404:	str	r1, [r2, #444]	; 0x1bc
    4408:	strb	r6, [r0]
    440c:	ldr	r0, [r2, #448]	; 0x1c0
    4410:	cmp	r0, #0
    4414:	str	r0, [r2, #332]	; 0x14c
    4418:	beq	58e8 <doProlog+0x2b28>
    441c:	ldr	r0, [r2, #444]	; 0x1bc
    4420:	str	r0, [r2, #448]	; 0x1c0
    4424:	ldrb	r0, [r8, #130]	; 0x82
    4428:	ldr	r5, [fp, #-44]	; 0xffffffd4
    442c:	cmp	r0, #0
    4430:	bne	445c <doProlog+0x169c>
    4434:	ldr	r0, [r5, #508]	; 0x1fc
    4438:	cmp	r0, #0
    443c:	bne	445c <doProlog+0x169c>
    4440:	ldr	r1, [r5, #116]	; 0x74
    4444:	cmp	r1, #0
    4448:	beq	445c <doProlog+0x169c>
    444c:	ldr	r0, [r5, #4]
    4450:	blx	r1
    4454:	cmp	r0, #0
    4458:	beq	58e0 <doProlog+0x2b20>
    445c:	ldr	r0, [r5, #324]	; 0x144
    4460:	cmp	r0, #0
    4464:	bne	4494 <doProlog+0x16d4>
    4468:	ldr	r1, [sp, #36]	; 0x24
    446c:	movw	r2, #0
    4470:	mov	r0, r5
    4474:	mov	r3, #36	; 0x24
    4478:	movt	r2, #0
    447c:	bl	6054 <lookup>
    4480:	cmp	r0, #0
    4484:	str	r0, [r5, #324]	; 0x144
    4488:	beq	58e8 <doProlog+0x2b28>
    448c:	mov	r1, #0
    4490:	str	r1, [r0, #24]
    4494:	ldr	sl, [fp, #-56]	; 0xffffffc8
    4498:	ldrb	r0, [sl, #128]	; 0x80
    449c:	cmp	r0, #0
    44a0:	beq	52ec <doProlog+0x252c>
    44a4:	ldr	r8, [fp, #-44]	; 0xffffffd4
    44a8:	ldr	r0, [r8, #324]	; 0x144
    44ac:	cmp	r0, #0
    44b0:	beq	52ec <doProlog+0x252c>
    44b4:	ldr	r5, [r4, #68]	; 0x44
    44b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
    44bc:	ldr	r7, [fp, #12]
    44c0:	add	r0, r9, r5
    44c4:	str	r0, [fp, #-32]	; 0xffffffe0
    44c8:	ldr	r0, [r3]
    44cc:	cmp	r0, #0
    44d0:	bne	44e8 <doProlog+0x1728>
    44d4:	ldr	r0, [sp, #52]	; 0x34
    44d8:	bl	6948 <poolGrow>
    44dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
    44e0:	cmp	r0, #0
    44e4:	beq	5930 <doProlog+0x2b70>
    44e8:	sub	r5, r7, r5
    44ec:	ldr	r1, [sl, #88]	; 0x58
    44f0:	ldr	r7, [r4, #60]	; 0x3c
    44f4:	mov	r0, r4
    44f8:	mov	r2, r5
    44fc:	str	r1, [sp]
    4500:	sub	r1, fp, #32
    4504:	blx	r7
    4508:	ldr	r0, [fp, #-32]	; 0xffffffe0
    450c:	cmp	r0, r5
    4510:	beq	452c <doProlog+0x176c>
    4514:	ldr	r0, [sp, #52]	; 0x34
    4518:	bl	6948 <poolGrow>
    451c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    4520:	cmp	r0, #0
    4524:	bne	44ec <doProlog+0x172c>
    4528:	b	5930 <doProlog+0x2b70>
    452c:	ldr	r5, [sp, #40]	; 0x28
    4530:	ldr	r0, [r5]
    4534:	cmp	r0, #0
    4538:	beq	5930 <doProlog+0x2b70>
    453c:	ldr	r1, [sl, #88]	; 0x58
    4540:	ldr	r0, [sl, #92]	; 0x5c
    4544:	cmp	r0, r1
    4548:	bne	4564 <doProlog+0x17a4>
    454c:	ldr	r0, [sp, #52]	; 0x34
    4550:	bl	6948 <poolGrow>
    4554:	cmp	r0, #0
    4558:	beq	5930 <doProlog+0x2b70>
    455c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    4560:	ldr	r0, [r0]
    4564:	ldr	r2, [fp, #-64]	; 0xffffffc0
    4568:	add	r1, r0, #1
    456c:	str	r1, [r2]
    4570:	mov	r1, #0
    4574:	strb	r1, [r0]
    4578:	ldr	r1, [r5]
    457c:	ldr	r0, [r8, #324]	; 0x144
    4580:	cmp	r1, #0
    4584:	str	r1, [r0, #16]
    4588:	beq	58e8 <doProlog+0x2b28>
    458c:	ldr	r1, [r8, #368]	; 0x170
    4590:	str	r1, [r0, #20]
    4594:	ldr	r0, [r2]
    4598:	str	r0, [r5]
    459c:	ldr	r0, [r8, #144]	; 0x90
    45a0:	cmp	r0, #0
    45a4:	bne	5550 <doProlog+0x2790>
    45a8:	b	52ec <doProlog+0x252c>
    45ac:	ldr	r5, [sp, #40]	; 0x28
    45b0:	mov	sl, #1
    45b4:	ldr	r0, [r5]
    45b8:	cmp	r0, #0
    45bc:	beq	5a70 <doProlog+0x2cb0>
    45c0:	ldr	r1, [r6, #88]	; 0x58
    45c4:	ldr	r0, [r6, #92]	; 0x5c
    45c8:	cmp	r0, r1
    45cc:	bne	45e8 <doProlog+0x1828>
    45d0:	ldr	r0, [sp, #52]	; 0x34
    45d4:	bl	6948 <poolGrow>
    45d8:	cmp	r0, #0
    45dc:	beq	5a70 <doProlog+0x2cb0>
    45e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
    45e4:	ldr	r0, [r0]
    45e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    45ec:	add	r1, r0, #1
    45f0:	str	r1, [r2]
    45f4:	mov	r1, #0
    45f8:	strb	r1, [r0]
    45fc:	ldr	r5, [r5]
    4600:	cmp	r5, #0
    4604:	beq	5a70 <doProlog+0x2cb0>
    4608:	ldr	r1, [sp, #36]	; 0x24
    460c:	mov	r0, r8
    4610:	mov	r2, r5
    4614:	mov	r3, #36	; 0x24
    4618:	bl	6054 <lookup>
    461c:	cmp	r0, #0
    4620:	str	r0, [r8, #324]	; 0x144
    4624:	beq	5a70 <doProlog+0x2cb0>
    4628:	ldr	r1, [r0]
    462c:	cmp	r1, r5
    4630:	bne	5150 <doProlog+0x2390>
    4634:	ldr	r1, [fp, #-64]	; 0xffffffc0
    4638:	ldr	r2, [sp, #40]	; 0x28
    463c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    4640:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4644:	ldr	r1, [r1]
    4648:	str	r1, [r2]
    464c:	mov	r1, #1
    4650:	mov	r2, #0
    4654:	strb	r1, [r0, #33]	; 0x21
    4658:	str	r2, [r0, #24]
    465c:	b	520c <doProlog+0x244c>
    4660:	ldr	r5, [sp, #40]	; 0x28
    4664:	mov	sl, #1
    4668:	ldr	r0, [r5]
    466c:	cmp	r0, #0
    4670:	beq	5a70 <doProlog+0x2cb0>
    4674:	ldr	r1, [r8, #88]	; 0x58
    4678:	ldr	r0, [r8, #92]	; 0x5c
    467c:	cmp	r0, r1
    4680:	bne	469c <doProlog+0x18dc>
    4684:	ldr	r0, [sp, #52]	; 0x34
    4688:	bl	6948 <poolGrow>
    468c:	cmp	r0, #0
    4690:	beq	5a70 <doProlog+0x2cb0>
    4694:	ldr	r0, [fp, #-64]	; 0xffffffc0
    4698:	ldr	r0, [r0]
    469c:	ldr	r2, [fp, #-64]	; 0xffffffc0
    46a0:	add	r1, r0, #1
    46a4:	str	r1, [r2]
    46a8:	mov	r1, #0
    46ac:	strb	r1, [r0]
    46b0:	ldr	r5, [r5]
    46b4:	cmp	r5, #0
    46b8:	beq	5a70 <doProlog+0x2cb0>
    46bc:	mov	r0, r5
    46c0:	bl	6448 <normalizePublicId>
    46c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    46c8:	ldr	r1, [sp, #40]	; 0x28
    46cc:	ldr	r0, [r2, #324]	; 0x144
    46d0:	str	r5, [r0, #24]
    46d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
    46d8:	ldr	r0, [r0]
    46dc:	str	r0, [r1]
    46e0:	ldr	r0, [r2, #144]	; 0x90
    46e4:	cmp	r0, #0
    46e8:	bne	5550 <doProlog+0x2790>
    46ec:	b	52ec <doProlog+0x252c>
    46f0:	ldr	r0, [r6, #448]	; 0x1c0
    46f4:	mov	sl, #1
    46f8:	cmp	r0, #0
    46fc:	beq	5a70 <doProlog+0x2cb0>
    4700:	ldr	r1, [r6, #440]	; 0x1b8
    4704:	ldr	r0, [r6, #444]	; 0x1bc
    4708:	cmp	r0, r1
    470c:	bne	4728 <doProlog+0x1968>
    4710:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4714:	bl	6948 <poolGrow>
    4718:	cmp	r0, #0
    471c:	beq	5a70 <doProlog+0x2cb0>
    4720:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4724:	ldr	r0, [r0]
    4728:	add	r1, r0, #1
    472c:	str	r1, [r6, #444]	; 0x1bc
    4730:	mov	r1, #0
    4734:	strb	r1, [r0]
    4738:	ldr	r5, [r6, #448]	; 0x1c0
    473c:	cmp	r5, #0
    4740:	beq	5a70 <doProlog+0x2cb0>
    4744:	mov	r0, r5
    4748:	bl	6448 <normalizePublicId>
    474c:	ldr	r8, [fp, #-44]	; 0xffffffd4
    4750:	str	r5, [r8, #348]	; 0x15c
    4754:	b	5444 <doProlog+0x2684>
    4758:	ldr	r0, [r8, #448]	; 0x1c0
    475c:	mov	sl, #1
    4760:	cmp	r0, #0
    4764:	beq	5a70 <doProlog+0x2cb0>
    4768:	ldr	r1, [r8, #440]	; 0x1b8
    476c:	ldr	r0, [r8, #444]	; 0x1bc
    4770:	cmp	r0, r1
    4774:	bne	4790 <doProlog+0x19d0>
    4778:	ldr	r0, [fp, #-60]	; 0xffffffc4
    477c:	bl	6948 <poolGrow>
    4780:	cmp	r0, #0
    4784:	beq	5a70 <doProlog+0x2cb0>
    4788:	ldr	r0, [fp, #-52]	; 0xffffffcc
    478c:	ldr	r0, [r0]
    4790:	add	r1, r0, #1
    4794:	mov	r6, #0
    4798:	str	r1, [r8, #444]	; 0x1bc
    479c:	strb	r6, [r0]
    47a0:	ldr	r5, [r8, #448]	; 0x1c0
    47a4:	cmp	r5, #0
    47a8:	beq	5a70 <doProlog+0x2cb0>
    47ac:	mov	r0, r5
    47b0:	bl	6448 <normalizePublicId>
    47b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    47b8:	ldr	r4, [fp, #-40]	; 0xffffffd8
    47bc:	ldr	r9, [fp, #-48]	; 0xffffffd0
    47c0:	str	r5, [r1, #336]	; 0x150
    47c4:	ldr	r0, [r1, #444]	; 0x1bc
    47c8:	str	r0, [r1, #448]	; 0x1c0
    47cc:	b	3510 <doProlog+0x750>
    47d0:	ldr	r0, [r4, #432]	; 0x1b0
    47d4:	ldr	r7, [fp, #-56]	; 0xffffffc8
    47d8:	str	r0, [r4, #436]	; 0x1b4
    47dc:	mov	r6, #0
    47e0:	str	r6, [r4, #432]	; 0x1b0
    47e4:	str	r6, [r4, #440]	; 0x1b8
    47e8:	str	r6, [r4, #444]	; 0x1bc
    47ec:	str	r6, [r4, #448]	; 0x1c0
    47f0:	ldr	r0, [r4, #332]	; 0x14c
    47f4:	cmp	r0, #0
    47f8:	bne	4808 <doProlog+0x1a48>
    47fc:	ldrb	r0, [r4, #505]	; 0x1f9
    4800:	cmp	r0, #0
    4804:	beq	50ac <doProlog+0x22ec>
    4808:	mov	r0, #1
    480c:	ldrb	r5, [r7, #129]	; 0x81
    4810:	strb	r0, [r7, #129]	; 0x81
    4814:	ldr	r0, [r4, #508]	; 0x1fc
    4818:	cmp	r0, #0
    481c:	beq	50a4 <doProlog+0x22e4>
    4820:	ldr	r0, [r4, #120]	; 0x78
    4824:	cmp	r0, #0
    4828:	beq	50a4 <doProlog+0x22e4>
    482c:	ldr	r1, [sp, #36]	; 0x24
    4830:	movw	r2, #0
    4834:	mov	r0, r4
    4838:	mov	r3, #36	; 0x24
    483c:	movt	r2, #0
    4840:	bl	6054 <lookup>
    4844:	cmp	r0, #0
    4848:	beq	58e8 <doProlog+0x2b28>
    484c:	ldrb	r1, [r4, #505]	; 0x1f9
    4850:	cmp	r1, #0
    4854:	beq	5024 <doProlog+0x2264>
    4858:	ldr	r2, [r4, #368]	; 0x170
    485c:	str	r2, [r0, #20]
    4860:	b	5028 <doProlog+0x2268>
    4864:	str	r0, [r3, #116]	; 0x74
    4868:	mov	r6, #1
    486c:	cmp	sl, #0
    4870:	beq	52ec <doProlog+0x252c>
    4874:	b	5a70 <doProlog+0x2cb0>
    4878:	ldr	r0, [r8, #152]	; 0x98
    487c:	mov	r7, r8
    4880:	ldr	r8, [sp, #44]	; 0x2c
    4884:	ldr	r9, [sp, #48]	; 0x30
    4888:	cmp	r0, r4
    488c:	ldrne	r8, [r7, #308]	; 0x134
    4890:	addne	r9, r8, #4
    4894:	ldr	r0, [r7, #52]	; 0x34
    4898:	ldr	r1, [r7, #56]	; 0x38
    489c:	sub	r3, fp, #36	; 0x24
    48a0:	mov	r2, r5
    48a4:	str	r0, [fp, #-36]	; 0xffffffdc
    48a8:	mov	r0, r4
    48ac:	ldr	r6, [r4, #60]	; 0x3c
    48b0:	str	r1, [sp]
    48b4:	sub	r1, fp, #32
    48b8:	blx	r6
    48bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    48c0:	str	r0, [r9]
    48c4:	ldr	r1, [r7, #52]	; 0x34
    48c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
    48cc:	ldr	r0, [r7, #4]
    48d0:	ldr	r3, [r7, #88]	; 0x58
    48d4:	sub	r2, r2, r1
    48d8:	blx	r3
    48dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    48e0:	str	r0, [r8]
    48e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    48e8:	cmp	r0, r5
    48ec:	bne	4894 <doProlog+0x1ad4>
    48f0:	mov	r8, r7
    48f4:	ldr	r0, [fp, #16]
    48f8:	ldr	r3, [sp, #60]	; 0x3c
    48fc:	add	r2, fp, #12
    4900:	mov	r1, r4
    4904:	str	r0, [sp]
    4908:	ldr	r0, [fp, #20]
    490c:	str	r0, [sp, #4]
    4910:	mov	r0, r8
    4914:	bl	7124 <doIgnoreSection>
    4918:	cmp	r0, #0
    491c:	bne	5a6c <doProlog+0x2cac>
    4920:	ldr	r0, [fp, #12]
    4924:	cmp	r0, #0
    4928:	bne	5554 <doProlog+0x2794>
    492c:	b	5a7c <doProlog+0x2cbc>
    4930:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4934:	mov	sl, #0
    4938:	b	4944 <doProlog+0x1b84>
    493c:	mov	sl, r5
    4940:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4944:	ldr	r0, [fp, #-64]	; 0xffffffc0
    4948:	ldr	r9, [fp, #-48]	; 0xffffffd0
    494c:	str	r1, [r0]
    4950:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4954:	ldr	r0, [r0, #280]	; 0x118
    4958:	cmp	r0, #0
    495c:	beq	4980 <doProlog+0x1bc0>
    4960:	ldr	r2, [fp, #-56]	; 0xffffffc8
    4964:	ldrb	r0, [r2, #130]	; 0x82
    4968:	cmp	r0, #0
    496c:	beq	4f60 <doProlog+0x21a0>
    4970:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4974:	ldr	r0, [r0, #308]	; 0x134
    4978:	cmp	r0, #0
    497c:	beq	4f6c <doProlog+0x21ac>
    4980:	cmp	sl, #0
    4984:	bne	4f80 <doProlog+0x21c0>
    4988:	ldr	r2, [fp, #-56]	; 0xffffffc8
    498c:	cmp	r8, #60	; 0x3c
    4990:	ldrb	r0, [r2, #130]	; 0x82
    4994:	strb	r0, [r2, #128]	; 0x80
    4998:	bne	52fc <doProlog+0x253c>
    499c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    49a0:	ldr	r3, [r0, #128]	; 0x80
    49a4:	cmp	r3, #0
    49a8:	beq	52fc <doProlog+0x253c>
    49ac:	ldr	r8, [fp, #-44]	; 0xffffffd4
    49b0:	mov	r2, #1
    49b4:	ldr	r0, [r8, #4]
    49b8:	b	532c <doProlog+0x256c>
    49bc:	ldr	r5, [sp, #40]	; 0x28
    49c0:	ldr	r0, [r5]
    49c4:	cmp	r0, #0
    49c8:	beq	5978 <doProlog+0x2bb8>
    49cc:	ldr	r1, [r6, #88]	; 0x58
    49d0:	ldr	r0, [r6, #92]	; 0x5c
    49d4:	cmp	r0, r1
    49d8:	bne	49f4 <doProlog+0x1c34>
    49dc:	ldr	r0, [sp, #52]	; 0x34
    49e0:	bl	6948 <poolGrow>
    49e4:	cmp	r0, #0
    49e8:	beq	5978 <doProlog+0x2bb8>
    49ec:	ldr	r0, [fp, #-64]	; 0xffffffc0
    49f0:	ldr	r0, [r0]
    49f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    49f8:	add	r1, r0, #1
    49fc:	str	r1, [r2]
    4a00:	mov	r1, #0
    4a04:	strb	r1, [r0]
    4a08:	ldr	r1, [r5]
    4a0c:	ldr	r0, [r8, #324]	; 0x144
    4a10:	cmp	r1, #0
    4a14:	str	r1, [r0, #28]
    4a18:	beq	58e8 <doProlog+0x2b28>
    4a1c:	ldr	r0, [r2]
    4a20:	str	r0, [r5]
    4a24:	ldr	r0, [r8, #100]	; 0x64
    4a28:	cmp	r0, #0
    4a2c:	beq	5178 <doProlog+0x23b8>
    4a30:	ldr	r0, [sp, #68]	; 0x44
    4a34:	str	r9, [r0]
    4a38:	ldr	r6, [r8, #324]	; 0x144
    4a3c:	ldr	r0, [r8, #4]
    4a40:	ldr	r7, [r8, #100]	; 0x64
    4a44:	ldr	r1, [r6]
    4a48:	ldr	r3, [r6, #16]
    4a4c:	add	r6, r6, #20
    4a50:	ldm	r6, {r2, r5, r6}
    4a54:	stm	sp, {r5, r6}
    4a58:	blx	r7
    4a5c:	b	5554 <doProlog+0x2794>
    4a60:	ldr	r0, [r8, #448]	; 0x1c0
    4a64:	mov	sl, #1
    4a68:	cmp	r0, #0
    4a6c:	beq	5a70 <doProlog+0x2cb0>
    4a70:	ldr	r1, [r8, #440]	; 0x1b8
    4a74:	ldr	r0, [r8, #444]	; 0x1bc
    4a78:	cmp	r0, r1
    4a7c:	bne	4a98 <doProlog+0x1cd8>
    4a80:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4a84:	bl	6948 <poolGrow>
    4a88:	cmp	r0, #0
    4a8c:	beq	5a70 <doProlog+0x2cb0>
    4a90:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4a94:	ldr	r0, [r0]
    4a98:	add	r1, r0, #1
    4a9c:	mov	r6, #0
    4aa0:	str	r1, [r8, #444]	; 0x1bc
    4aa4:	strb	r6, [r0]
    4aa8:	ldr	r3, [r8, #448]	; 0x1c0
    4aac:	cmp	r3, #0
    4ab0:	beq	5a70 <doProlog+0x2cb0>
    4ab4:	ldr	r0, [sp, #68]	; 0x44
    4ab8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    4abc:	ldr	r8, [fp, #-44]	; 0xffffffd4
    4ac0:	str	r1, [r0]
    4ac4:	ldr	r2, [r8, #368]	; 0x170
    4ac8:	ldr	r0, [r8, #4]
    4acc:	ldr	r7, [r8, #104]	; 0x68
    4ad0:	ldr	r1, [r8, #344]	; 0x158
    4ad4:	ldr	r5, [r8, #348]	; 0x15c
    4ad8:	str	r5, [sp]
    4adc:	blx	r7
    4ae0:	ldr	r0, [r8, #436]	; 0x1b4
    4ae4:	cmp	r0, #0
    4ae8:	beq	4b1c <doProlog+0x1d5c>
    4aec:	ldr	r1, [fp, #-60]	; 0xffffffc4
    4af0:	ldr	r1, [r1]
    4af4:	cmp	r1, #0
    4af8:	beq	4b24 <doProlog+0x1d64>
    4afc:	mov	r2, r1
    4b00:	ldr	r1, [r1]
    4b04:	str	r0, [r2]
    4b08:	mov	r0, r2
    4b0c:	cmp	r1, #0
    4b10:	bne	4afc <doProlog+0x1d3c>
    4b14:	str	r2, [r8, #436]	; 0x1b4
    4b18:	b	4b24 <doProlog+0x1d64>
    4b1c:	ldr	r0, [r8, #432]	; 0x1b0
    4b20:	str	r0, [r8, #436]	; 0x1b4
    4b24:	mov	r0, #0
    4b28:	str	r0, [r8, #432]	; 0x1b0
    4b2c:	str	r0, [r8, #440]	; 0x1b8
    4b30:	str	r0, [r8, #444]	; 0x1bc
    4b34:	str	r0, [r8, #448]	; 0x1c0
    4b38:	b	52ec <doProlog+0x252c>
    4b3c:	mov	r0, #8
    4b40:	str	r0, [r5, #16]
    4b44:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4b48:	ldr	r1, [r0, #12]
    4b4c:	mov	r0, #96	; 0x60
    4b50:	blx	r1
    4b54:	cmp	r0, #0
    4b58:	str	r0, [r5, #20]
    4b5c:	beq	58e8 <doProlog+0x2b28>
    4b60:	ldr	r1, [r5, #12]
    4b64:	cmp	sl, #0
    4b68:	add	r2, r1, r1, lsl #1
    4b6c:	str	r6, [r0, r2, lsl #2]!
    4b70:	mov	r2, #0
    4b74:	str	r2, [r0, #8]
    4b78:	strb	sl, [r0, #4]
    4b7c:	moveq	r0, #1
    4b80:	strbeq	r0, [r6, #8]
    4b84:	add	r0, r1, #1
    4b88:	str	r0, [r5, #12]
    4b8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4b90:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4b94:	ldr	r9, [fp, #-48]	; 0xffffffd0
    4b98:	ldr	r0, [r0, #140]	; 0x8c
    4b9c:	cmp	r0, #0
    4ba0:	beq	52fc <doProlog+0x253c>
    4ba4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4ba8:	ldr	r0, [r0, #340]	; 0x154
    4bac:	cmp	r0, #0
    4bb0:	beq	52fc <doProlog+0x253c>
    4bb4:	ldrb	r1, [r0]
    4bb8:	cmp	r1, #40	; 0x28
    4bbc:	beq	4bd4 <doProlog+0x1e14>
    4bc0:	cmp	r1, #78	; 0x4e
    4bc4:	bne	4c60 <doProlog+0x1ea0>
    4bc8:	ldrb	r0, [r0, #1]
    4bcc:	cmp	r0, #79	; 0x4f
    4bd0:	bne	4c60 <doProlog+0x1ea0>
    4bd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4bd8:	ldr	r1, [r2, #440]	; 0x1b8
    4bdc:	ldr	r0, [r2, #444]	; 0x1bc
    4be0:	cmp	r0, r1
    4be4:	bne	4c04 <doProlog+0x1e44>
    4be8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4bec:	bl	6948 <poolGrow>
    4bf0:	cmp	r0, #0
    4bf4:	beq	58e8 <doProlog+0x2b28>
    4bf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4bfc:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4c00:	ldr	r0, [r0]
    4c04:	add	r1, r0, #1
    4c08:	str	r1, [r2, #444]	; 0x1bc
    4c0c:	mov	r1, #41	; 0x29
    4c10:	strb	r1, [r0]
    4c14:	ldr	r1, [r2, #440]	; 0x1b8
    4c18:	ldr	r0, [r2, #444]	; 0x1bc
    4c1c:	cmp	r0, r1
    4c20:	bne	4c40 <doProlog+0x1e80>
    4c24:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4c28:	bl	6948 <poolGrow>
    4c2c:	cmp	r0, #0
    4c30:	beq	58e8 <doProlog+0x2b28>
    4c34:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4c38:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4c3c:	ldr	r0, [r0]
    4c40:	add	r1, r0, #1
    4c44:	str	r1, [r2, #444]	; 0x1bc
    4c48:	mov	r1, #0
    4c4c:	strb	r1, [r0]
    4c50:	ldr	r0, [r2, #444]	; 0x1bc
    4c54:	ldr	r1, [r2, #448]	; 0x1c0
    4c58:	str	r1, [r2, #340]	; 0x154
    4c5c:	str	r0, [r2, #448]	; 0x1c0
    4c60:	ldr	r0, [sp, #68]	; 0x44
    4c64:	ldr	r5, [fp, #-44]	; 0xffffffd4
    4c68:	sub	r6, r8, #36	; 0x24
    4c6c:	clz	r6, r6
    4c70:	lsr	r6, r6, #5
    4c74:	str	r9, [r0]
    4c78:	mov	r8, r5
    4c7c:	ldr	r1, [r5, #352]	; 0x160
    4c80:	ldr	r0, [r5, #356]	; 0x164
    4c84:	ldr	r7, [r5, #140]	; 0x8c
    4c88:	ldr	r3, [r5, #340]	; 0x154
    4c8c:	ldr	r2, [r0]
    4c90:	ldr	r0, [r5, #4]
    4c94:	ldr	r1, [r1]
    4c98:	mov	r5, #0
    4c9c:	stm	sp, {r5, r6}
    4ca0:	blx	r7
    4ca4:	ldr	r0, [r8, #436]	; 0x1b4
    4ca8:	cmp	r0, #0
    4cac:	beq	4f24 <doProlog+0x2164>
    4cb0:	ldr	r1, [fp, #-60]	; 0xffffffc4
    4cb4:	ldr	r1, [r1]
    4cb8:	cmp	r1, #0
    4cbc:	beq	4f2c <doProlog+0x216c>
    4cc0:	mov	r2, r1
    4cc4:	ldr	r1, [r1]
    4cc8:	str	r0, [r2]
    4ccc:	mov	r0, r2
    4cd0:	cmp	r1, #0
    4cd4:	bne	4cc0 <doProlog+0x1f00>
    4cd8:	b	4f1c <doProlog+0x215c>
    4cdc:	mov	r0, #32
    4ce0:	str	r0, [r5, #484]	; 0x1e4
    4ce4:	mov	r0, #32
    4ce8:	ldr	r1, [r5, #12]
    4cec:	blx	r1
    4cf0:	cmp	r0, #0
    4cf4:	str	r0, [r5, #480]	; 0x1e0
    4cf8:	beq	58e8 <doProlog+0x2b28>
    4cfc:	ldr	r0, [r5, #268]	; 0x10c
    4d00:	ldr	r1, [r5, #480]	; 0x1e0
    4d04:	mov	r2, #0
    4d08:	ldr	r9, [fp, #-48]	; 0xffffffd0
    4d0c:	strb	r2, [r1, r0]
    4d10:	ldrb	r0, [r4, #160]	; 0xa0
    4d14:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4d18:	cmp	r0, #0
    4d1c:	beq	52fc <doProlog+0x253c>
    4d20:	ldr	r5, [fp, #-44]	; 0xffffffd4
    4d24:	mov	r0, r5
    4d28:	bl	7448 <nextScaffoldPart>
    4d2c:	cmp	r0, #0
    4d30:	bmi	58e8 <doProlog+0x2b28>
    4d34:	ldr	r3, [fp, #-56]	; 0xffffffc8
    4d38:	ldr	r1, [r3, #180]	; 0xb4
    4d3c:	ldr	r2, [r3, #184]	; 0xb8
    4d40:	str	r0, [r2, r1, lsl #2]
    4d44:	rsb	r0, r0, r0, lsl #3
    4d48:	ldr	r2, [r3, #180]	; 0xb4
    4d4c:	ldr	r1, [r3, #164]	; 0xa4
    4d50:	add	r2, r2, #1
    4d54:	str	r2, [r3, #180]	; 0xb4
    4d58:	mov	r2, #6
    4d5c:	str	r2, [r1, r0, lsl #2]
    4d60:	ldr	r0, [r5, #136]	; 0x88
    4d64:	cmp	r0, #0
    4d68:	bne	5550 <doProlog+0x2790>
    4d6c:	b	52fc <doProlog+0x253c>
    4d70:	mov	r0, #8
    4d74:	str	r0, [r6, #16]
    4d78:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4d7c:	ldr	r1, [r0, #12]
    4d80:	mov	r0, #96	; 0x60
    4d84:	blx	r1
    4d88:	cmp	r0, #0
    4d8c:	mov	ip, r4
    4d90:	str	r0, [r6, #20]
    4d94:	beq	58e8 <doProlog+0x2b28>
    4d98:	ldr	r1, [r6, #12]
    4d9c:	cmp	r5, #0
    4da0:	add	r2, r1, r1, lsl #1
    4da4:	str	r7, [r0, r2, lsl #2]!
    4da8:	str	ip, [r0, #8]
    4dac:	strb	r5, [r0, #4]
    4db0:	moveq	r0, #1
    4db4:	strbeq	r0, [r7, #8]
    4db8:	add	r0, r1, #1
    4dbc:	str	r0, [r6, #12]
    4dc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4dc4:	ldr	r4, [fp, #-40]	; 0xffffffd8
    4dc8:	ldr	r9, [fp, #-48]	; 0xffffffd0
    4dcc:	ldr	r0, [r0, #140]	; 0x8c
    4dd0:	cmp	r0, #0
    4dd4:	beq	52fc <doProlog+0x253c>
    4dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    4ddc:	ldr	r0, [r0, #340]	; 0x154
    4de0:	cmp	r0, #0
    4de4:	beq	52fc <doProlog+0x253c>
    4de8:	ldrb	r1, [r0]
    4dec:	cmp	r1, #40	; 0x28
    4df0:	beq	4e08 <doProlog+0x2048>
    4df4:	cmp	r1, #78	; 0x4e
    4df8:	bne	4ea4 <doProlog+0x20e4>
    4dfc:	ldrb	r0, [r0, #1]
    4e00:	cmp	r0, #79	; 0x4f
    4e04:	bne	4ea4 <doProlog+0x20e4>
    4e08:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4e0c:	ldr	r1, [r2, #440]	; 0x1b8
    4e10:	ldr	r0, [r2, #444]	; 0x1bc
    4e14:	cmp	r0, r1
    4e18:	bne	4e40 <doProlog+0x2080>
    4e1c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4e20:	mov	r4, ip
    4e24:	bl	6948 <poolGrow>
    4e28:	cmp	r0, #0
    4e2c:	beq	58e8 <doProlog+0x2b28>
    4e30:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4e34:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4e38:	mov	ip, r4
    4e3c:	ldr	r0, [r0]
    4e40:	add	r1, r0, #1
    4e44:	str	r1, [r2, #444]	; 0x1bc
    4e48:	mov	r1, #41	; 0x29
    4e4c:	strb	r1, [r0]
    4e50:	ldr	r1, [r2, #440]	; 0x1b8
    4e54:	ldr	r0, [r2, #444]	; 0x1bc
    4e58:	cmp	r0, r1
    4e5c:	bne	4e84 <doProlog+0x20c4>
    4e60:	ldr	r0, [fp, #-60]	; 0xffffffc4
    4e64:	mov	r4, ip
    4e68:	bl	6948 <poolGrow>
    4e6c:	cmp	r0, #0
    4e70:	beq	58e8 <doProlog+0x2b28>
    4e74:	ldr	r0, [fp, #-52]	; 0xffffffcc
    4e78:	ldr	r2, [fp, #-44]	; 0xffffffd4
    4e7c:	mov	ip, r4
    4e80:	ldr	r0, [r0]
    4e84:	add	r1, r0, #1
    4e88:	str	r1, [r2, #444]	; 0x1bc
    4e8c:	mov	r1, #0
    4e90:	strb	r1, [r0]
    4e94:	ldr	r0, [r2, #444]	; 0x1bc
    4e98:	ldr	r1, [r2, #448]	; 0x1c0
    4e9c:	str	r1, [r2, #340]	; 0x154
    4ea0:	str	r0, [r2, #448]	; 0x1c0
    4ea4:	ldr	r0, [sp, #68]	; 0x44
    4ea8:	ldr	r5, [fp, #-44]	; 0xffffffd4
    4eac:	sub	r6, r8, #38	; 0x26
    4eb0:	clz	r6, r6
    4eb4:	lsr	r6, r6, #5
    4eb8:	str	r9, [r0]
    4ebc:	mov	r8, r5
    4ec0:	ldr	r1, [r5, #352]	; 0x160
    4ec4:	ldr	r0, [r5, #356]	; 0x164
    4ec8:	ldr	r7, [r5, #140]	; 0x8c
    4ecc:	ldr	r3, [r5, #340]	; 0x154
    4ed0:	ldr	r2, [r0]
    4ed4:	ldr	r0, [r5, #4]
    4ed8:	ldr	r1, [r1]
    4edc:	str	ip, [sp]
    4ee0:	str	r6, [sp, #4]
    4ee4:	blx	r7
    4ee8:	ldr	r0, [r5, #436]	; 0x1b4
    4eec:	cmp	r0, #0
    4ef0:	beq	4f24 <doProlog+0x2164>
    4ef4:	ldr	r1, [fp, #-60]	; 0xffffffc4
    4ef8:	ldr	r1, [r1]
    4efc:	cmp	r1, #0
    4f00:	beq	4f2c <doProlog+0x216c>
    4f04:	mov	r2, r1
    4f08:	ldr	r1, [r1]
    4f0c:	str	r0, [r2]
    4f10:	mov	r0, r2
    4f14:	cmp	r1, #0
    4f18:	bne	4f04 <doProlog+0x2144>
    4f1c:	str	r2, [r8, #436]	; 0x1b4
    4f20:	b	4f2c <doProlog+0x216c>
    4f24:	ldr	r0, [r8, #432]	; 0x1b0
    4f28:	str	r0, [r8, #436]	; 0x1b4
    4f2c:	mov	r0, #0
    4f30:	str	r0, [r8, #432]	; 0x1b0
    4f34:	str	r0, [r8, #440]	; 0x1b8
    4f38:	str	r0, [r8, #444]	; 0x1bc
    4f3c:	str	r0, [r8, #448]	; 0x1c0
    4f40:	b	5554 <doProlog+0x2794>
    4f44:	ldr	r0, [sp, #40]	; 0x28
    4f48:	ldr	r1, [fp, #-64]	; 0xffffffc0
    4f4c:	ldr	r0, [r0]
    4f50:	str	r0, [r1]
    4f54:	mov	r0, #0
    4f58:	str	r0, [r8, #324]	; 0x144
    4f5c:	b	52fc <doProlog+0x253c>
    4f60:	ldrb	r0, [r2, #129]	; 0x81
    4f64:	cmp	r0, #0
    4f68:	bne	4980 <doProlog+0x1bc0>
    4f6c:	cmp	sl, #0
    4f70:	beq	5a98 <doProlog+0x2cd8>
    4f74:	ldrb	r0, [sl, #34]	; 0x22
    4f78:	cmp	r0, #0
    4f7c:	beq	5aa0 <doProlog+0x2ce0>
    4f80:	ldrb	r0, [sl, #32]
    4f84:	cmp	r0, #0
    4f88:	bne	5a90 <doProlog+0x2cd0>
    4f8c:	ldr	r0, [sl, #4]
    4f90:	cmp	r0, #0
    4f94:	beq	4fc0 <doProlog+0x2200>
    4f98:	sub	r0, r8, #60	; 0x3c
    4f9c:	ldr	r8, [fp, #-44]	; 0xffffffd4
    4fa0:	mov	r1, sl
    4fa4:	clz	r0, r0
    4fa8:	lsr	r2, r0, #5
    4fac:	mov	r0, r8
    4fb0:	bl	7570 <processInternalEntity>
    4fb4:	cmp	r0, #0
    4fb8:	beq	5554 <doProlog+0x2794>
    4fbc:	b	5a6c <doProlog+0x2cac>
    4fc0:	ldr	r8, [fp, #-44]	; 0xffffffd4
    4fc4:	ldr	r7, [r8, #120]	; 0x78
    4fc8:	cmp	r7, #0
    4fcc:	beq	51d0 <doProlog+0x2410>
    4fd0:	ldr	r4, [fp, #-56]	; 0xffffffc8
    4fd4:	mov	r6, #0
    4fd8:	mov	r0, #1
    4fdc:	strb	r6, [r4, #131]	; 0x83
    4fe0:	strb	r0, [sl, #32]
    4fe4:	ldr	r1, [sl, #24]
    4fe8:	ldr	r0, [r8, #124]	; 0x7c
    4fec:	ldr	r3, [sl, #16]
    4ff0:	ldr	r2, [sl, #20]
    4ff4:	str	r1, [sp]
    4ff8:	mov	r1, #0
    4ffc:	blx	r7
    5000:	cmp	r0, #0
    5004:	strb	r6, [sl, #32]
    5008:	beq	59d4 <doProlog+0x2c14>
    500c:	ldrb	r1, [r4, #131]	; 0x83
    5010:	ldrb	r0, [r4, #130]	; 0x82
    5014:	cmp	r1, #0
    5018:	bne	4070 <doProlog+0x12b0>
    501c:	strb	r0, [r4, #128]	; 0x80
    5020:	b	5554 <doProlog+0x2794>
    5024:	ldr	r2, [r0, #20]
    5028:	mov	r1, #0
    502c:	strb	r1, [r7, #131]	; 0x83
    5030:	ldr	r3, [r0, #16]
    5034:	ldr	r1, [r4, #124]	; 0x7c
    5038:	ldr	r0, [r0, #24]
    503c:	ldr	r8, [r4, #120]	; 0x78
    5040:	str	r0, [sp]
    5044:	mov	r0, r1
    5048:	mov	r1, #0
    504c:	blx	r8
    5050:	cmp	r0, #0
    5054:	beq	59d4 <doProlog+0x2c14>
    5058:	ldrb	r0, [r7, #131]	; 0x83
    505c:	cmp	r0, #0
    5060:	beq	5094 <doProlog+0x22d4>
    5064:	ldrb	r0, [r7, #130]	; 0x82
    5068:	ldr	r4, [fp, #-44]	; 0xffffffd4
    506c:	cmp	r0, #0
    5070:	bne	50a4 <doProlog+0x22e4>
    5074:	ldr	r1, [r4, #116]	; 0x74
    5078:	cmp	r1, #0
    507c:	beq	50a4 <doProlog+0x22e4>
    5080:	ldr	r0, [r4, #4]
    5084:	blx	r1
    5088:	cmp	r0, #0
    508c:	bne	50a4 <doProlog+0x22e4>
    5090:	b	58e0 <doProlog+0x2b20>
    5094:	ldr	r4, [fp, #-44]	; 0xffffffd4
    5098:	ldr	r0, [r4, #332]	; 0x14c
    509c:	cmp	r0, #0
    50a0:	strbeq	r5, [r7, #129]	; 0x81
    50a4:	mov	r0, #0
    50a8:	strb	r0, [r4, #505]	; 0x1f9
    50ac:	ldr	r1, [r4, #96]	; 0x60
    50b0:	cmp	r1, #0
    50b4:	beq	52ec <doProlog+0x252c>
    50b8:	ldr	r8, [fp, #-44]	; 0xffffffd4
    50bc:	ldr	r0, [r8, #4]
    50c0:	blx	r1
    50c4:	b	5554 <doProlog+0x2794>
    50c8:	ldr	r5, [sp, #40]	; 0x28
    50cc:	mov	sl, #1
    50d0:	ldr	r0, [r5]
    50d4:	cmp	r0, #0
    50d8:	beq	5a70 <doProlog+0x2cb0>
    50dc:	ldr	r1, [r6, #88]	; 0x58
    50e0:	ldr	r0, [r6, #92]	; 0x5c
    50e4:	cmp	r0, r1
    50e8:	bne	5104 <doProlog+0x2344>
    50ec:	ldr	r0, [sp, #52]	; 0x34
    50f0:	bl	6948 <poolGrow>
    50f4:	cmp	r0, #0
    50f8:	beq	5a70 <doProlog+0x2cb0>
    50fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
    5100:	ldr	r0, [r0]
    5104:	ldr	r2, [fp, #-64]	; 0xffffffc0
    5108:	add	r1, r0, #1
    510c:	str	r1, [r2]
    5110:	mov	r1, #0
    5114:	strb	r1, [r0]
    5118:	ldr	r5, [r5]
    511c:	cmp	r5, #0
    5120:	beq	5a70 <doProlog+0x2cb0>
    5124:	mov	r0, r8
    5128:	mov	r1, r6
    512c:	mov	r2, r5
    5130:	mov	r3, #36	; 0x24
    5134:	bl	6054 <lookup>
    5138:	cmp	r0, #0
    513c:	str	r0, [r8, #324]	; 0x144
    5140:	beq	5a70 <doProlog+0x2cb0>
    5144:	ldr	r1, [r0]
    5148:	cmp	r1, r5
    514c:	beq	51e4 <doProlog+0x2424>
    5150:	ldr	r0, [sp, #40]	; 0x28
    5154:	ldr	r1, [fp, #-64]	; 0xffffffc0
    5158:	ldr	r0, [r0]
    515c:	str	r0, [r1]
    5160:	mov	r0, #0
    5164:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5168:	str	r0, [r1, #324]	; 0x144
    516c:	ldr	r4, [fp, #-40]	; 0xffffffd8
    5170:	ldr	r9, [fp, #-48]	; 0xffffffd0
    5174:	b	52fc <doProlog+0x253c>
    5178:	ldr	r0, [r8, #144]	; 0x90
    517c:	cmp	r0, #0
    5180:	beq	52fc <doProlog+0x253c>
    5184:	ldr	r0, [sp, #68]	; 0x44
    5188:	ldr	r8, [fp, #-44]	; 0xffffffd4
    518c:	mov	r7, #0
    5190:	str	r9, [r0]
    5194:	ldr	r2, [r8, #324]	; 0x144
    5198:	ldr	r0, [r8, #4]
    519c:	ldr	ip, [r8, #144]	; 0x90
    51a0:	ldr	r1, [r2]
    51a4:	ldr	r3, [r2, #16]
    51a8:	ldr	r6, [r2, #20]
    51ac:	ldr	r5, [r2, #24]
    51b0:	ldr	r2, [r2, #28]
    51b4:	str	r7, [sp]
    51b8:	str	r2, [sp, #16]
    51bc:	str	r6, [sp, #4]
    51c0:	str	r3, [sp, #8]
    51c4:	str	r5, [sp, #12]
    51c8:	mov	r2, #0
    51cc:	b	38d8 <doProlog+0xb18>
    51d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
    51d4:	ldr	r4, [fp, #-40]	; 0xffffffd8
    51d8:	ldrb	r0, [r1, #130]	; 0x82
    51dc:	strb	r0, [r1, #128]	; 0x80
    51e0:	b	52fc <doProlog+0x253c>
    51e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
    51e8:	ldr	r2, [sp, #40]	; 0x28
    51ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    51f0:	ldr	r4, [fp, #-40]	; 0xffffffd8
    51f4:	ldr	r1, [r1]
    51f8:	str	r1, [r2]
    51fc:	mov	r1, #0
    5200:	strb	r1, [r0, #33]	; 0x21
    5204:	str	r1, [r0, #24]
    5208:	mov	r1, #1
    520c:	ldr	r2, [r3, #492]	; 0x1ec
    5210:	cmp	r2, #0
    5214:	bne	5224 <doProlog+0x2464>
    5218:	ldr	r1, [r3, #308]	; 0x134
    521c:	cmp	r1, #0
    5220:	movwne	r1, #1
    5224:	eor	r1, r1, #1
    5228:	ldr	r9, [fp, #-48]	; 0xffffffd0
    522c:	strb	r1, [r0, #34]	; 0x22
    5230:	ldr	r0, [r3, #144]	; 0x90
    5234:	cmp	r0, #0
    5238:	bne	5550 <doProlog+0x2790>
    523c:	b	52fc <doProlog+0x253c>
    5240:	mov	sl, #0
    5244:	b	4940 <doProlog+0x1b80>
    5248:	ldr	r0, [fp, #-60]	; 0xffffffc4
    524c:	bl	6948 <poolGrow>
    5250:	cmp	r0, #0
    5254:	beq	5944 <doProlog+0x2b84>
    5258:	ldr	r0, [r8, #440]	; 0x1b8
    525c:	ldr	r7, [r4, #60]	; 0x3c
    5260:	ldr	r3, [fp, #-52]	; 0xffffffcc
    5264:	sub	r1, fp, #32
    5268:	mov	r2, r5
    526c:	str	r0, [sp]
    5270:	mov	r0, r4
    5274:	blx	r7
    5278:	ldr	r0, [fp, #-32]	; 0xffffffe0
    527c:	cmp	r0, r5
    5280:	bne	5248 <doProlog+0x2488>
    5284:	ldr	r0, [r8, #448]	; 0x1c0
    5288:	cmp	r0, #0
    528c:	beq	5944 <doProlog+0x2b84>
    5290:	ldr	r1, [r8, #440]	; 0x1b8
    5294:	ldr	r0, [r8, #444]	; 0x1bc
    5298:	cmp	r0, r1
    529c:	bne	52b8 <doProlog+0x24f8>
    52a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
    52a4:	bl	6948 <poolGrow>
    52a8:	cmp	r0, #0
    52ac:	beq	5944 <doProlog+0x2b84>
    52b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    52b4:	ldr	r0, [r0]
    52b8:	add	r1, r0, #1
    52bc:	mov	r6, #0
    52c0:	str	r1, [r8, #444]	; 0x1bc
    52c4:	strb	r6, [r0]
    52c8:	ldr	r0, [r8, #448]	; 0x1c0
    52cc:	cmp	r0, #0
    52d0:	str	r0, [r8, #328]	; 0x148
    52d4:	beq	58e8 <doProlog+0x2b28>
    52d8:	str	r6, [r8, #336]	; 0x150
    52dc:	ldr	r0, [r8, #444]	; 0x1bc
    52e0:	str	r0, [r8, #448]	; 0x1c0
    52e4:	mov	r0, #0
    52e8:	str	r0, [r8, #332]	; 0x14c
    52ec:	ldr	r4, [fp, #-40]	; 0xffffffd8
    52f0:	ldr	r9, [fp, #-48]	; 0xffffffd0
    52f4:	cmp	r6, #0
    52f8:	beq	5550 <doProlog+0x2790>
    52fc:	ldr	r8, [fp, #-44]	; 0xffffffd4
    5300:	ldr	r3, [r8, #88]	; 0x58
    5304:	cmp	r3, #0
    5308:	beq	5554 <doProlog+0x2794>
    530c:	str	r9, [fp, #-32]	; 0xffffffe0
    5310:	ldr	r5, [fp, #12]
    5314:	ldrb	r0, [r4, #72]	; 0x48
    5318:	cmp	r0, #0
    531c:	beq	5334 <doProlog+0x2574>
    5320:	ldr	r0, [r8, #4]
    5324:	sub	r2, r5, r9
    5328:	mov	r1, r9
    532c:	blx	r3
    5330:	b	5554 <doProlog+0x2794>
    5334:	ldr	r0, [r8, #152]	; 0x98
    5338:	ldr	r6, [sp, #44]	; 0x2c
    533c:	mov	r9, r4
    5340:	ldr	r7, [sp, #48]	; 0x30
    5344:	sub	sl, fp, #36	; 0x24
    5348:	cmp	r0, r4
    534c:	ldrne	r6, [r8, #308]	; 0x134
    5350:	addne	r7, r6, #4
    5354:	ldr	r0, [r8, #52]	; 0x34
    5358:	ldr	r1, [r8, #56]	; 0x38
    535c:	mov	r2, r5
    5360:	mov	r3, sl
    5364:	str	r0, [fp, #-36]	; 0xffffffdc
    5368:	mov	r0, r9
    536c:	ldr	r4, [r9, #60]	; 0x3c
    5370:	str	r1, [sp]
    5374:	sub	r1, fp, #32
    5378:	blx	r4
    537c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5380:	str	r0, [r7]
    5384:	ldr	r1, [r8, #52]	; 0x34
    5388:	ldr	r2, [fp, #-36]	; 0xffffffdc
    538c:	ldr	r0, [r8, #4]
    5390:	ldr	r3, [r8, #88]	; 0x58
    5394:	sub	r2, r2, r1
    5398:	blx	r3
    539c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    53a0:	str	r0, [r6]
    53a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    53a8:	cmp	r0, r5
    53ac:	bne	5354 <doProlog+0x2594>
    53b0:	b	5554 <doProlog+0x2794>
    53b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    53b8:	bl	6948 <poolGrow>
    53bc:	cmp	r0, #0
    53c0:	beq	5954 <doProlog+0x2b94>
    53c4:	ldr	r0, [r8, #440]	; 0x1b8
    53c8:	ldr	r7, [r4, #60]	; 0x3c
    53cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    53d0:	sub	r1, fp, #32
    53d4:	mov	r2, r5
    53d8:	str	r0, [sp]
    53dc:	mov	r0, r4
    53e0:	blx	r7
    53e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    53e8:	cmp	r0, r5
    53ec:	bne	53b4 <doProlog+0x25f4>
    53f0:	ldr	r0, [r8, #448]	; 0x1c0
    53f4:	cmp	r0, #0
    53f8:	beq	5954 <doProlog+0x2b94>
    53fc:	ldr	r1, [r8, #440]	; 0x1b8
    5400:	ldr	r0, [r8, #444]	; 0x1bc
    5404:	cmp	r0, r1
    5408:	bne	5424 <doProlog+0x2664>
    540c:	ldr	r0, [fp, #-60]	; 0xffffffc4
    5410:	bl	6948 <poolGrow>
    5414:	cmp	r0, #0
    5418:	beq	5954 <doProlog+0x2b94>
    541c:	ldr	r0, [fp, #-52]	; 0xffffffcc
    5420:	ldr	r0, [r0]
    5424:	add	r1, r0, #1
    5428:	str	r1, [r8, #444]	; 0x1bc
    542c:	mov	r1, #0
    5430:	strb	r1, [r0]
    5434:	ldr	r0, [r8, #448]	; 0x1c0
    5438:	cmp	r0, #0
    543c:	str	r0, [r8, #344]	; 0x158
    5440:	beq	58e8 <doProlog+0x2b28>
    5444:	ldr	r0, [r8, #444]	; 0x1bc
    5448:	str	r0, [r8, #448]	; 0x1c0
    544c:	b	5554 <doProlog+0x2794>
    5450:	mov	r0, sl
    5454:	bl	6948 <poolGrow>
    5458:	cmp	r0, #0
    545c:	beq	58f0 <doProlog+0x2b30>
    5460:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5464:	ldr	r1, [r8, #88]	; 0x58
    5468:	mov	r2, r6
    546c:	mov	r3, r5
    5470:	ldr	r7, [r0, #60]	; 0x3c
    5474:	str	r1, [sp]
    5478:	sub	r1, fp, #32
    547c:	blx	r7
    5480:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5484:	cmp	r0, r6
    5488:	bne	5450 <doProlog+0x2690>
    548c:	ldr	r0, [r8, #96]	; 0x60
    5490:	cmp	r0, #0
    5494:	beq	58f0 <doProlog+0x2b30>
    5498:	ldr	r1, [r8, #88]	; 0x58
    549c:	ldr	r0, [r8, #92]	; 0x5c
    54a0:	cmp	r0, r1
    54a4:	bne	54bc <doProlog+0x26fc>
    54a8:	mov	r0, sl
    54ac:	bl	6948 <poolGrow>
    54b0:	cmp	r0, #0
    54b4:	beq	58f0 <doProlog+0x2b30>
    54b8:	ldr	r0, [r5]
    54bc:	add	r1, r0, #1
    54c0:	str	r1, [r8, #92]	; 0x5c
    54c4:	mov	r1, #0
    54c8:	strb	r1, [r0]
    54cc:	ldr	r6, [r8, #96]	; 0x60
    54d0:	cmp	r6, #0
    54d4:	beq	58f0 <doProlog+0x2b30>
    54d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    54dc:	add	r1, r8, #20
    54e0:	mov	r2, r6
    54e4:	mov	r3, #24
    54e8:	bl	6054 <lookup>
    54ec:	cmp	r0, #0
    54f0:	beq	58f0 <doProlog+0x2b30>
    54f4:	mov	r5, r0
    54f8:	ldr	r0, [r0]
    54fc:	cmp	r0, r6
    5500:	beq	5510 <doProlog+0x2750>
    5504:	ldr	r0, [r8, #96]	; 0x60
    5508:	str	r0, [r8, #92]	; 0x5c
    550c:	b	552c <doProlog+0x276c>
    5510:	ldr	r0, [r8, #92]	; 0x5c
    5514:	mov	r1, r5
    5518:	str	r0, [r8, #96]	; 0x60
    551c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5520:	bl	b114 <setElementTypePrefix>
    5524:	cmp	r0, #0
    5528:	beq	58f0 <doProlog+0x2b30>
    552c:	ldr	r8, [fp, #-44]	; 0xffffffd4
    5530:	ldr	r1, [fp, #-56]	; 0xffffffc8
    5534:	mov	r0, #0
    5538:	str	r5, [r8, #352]	; 0x160
    553c:	str	r0, [r1, #176]	; 0xb0
    5540:	str	r0, [r1, #180]	; 0xb4
    5544:	mov	r0, #1
    5548:	strb	r0, [r1, #160]	; 0xa0
    554c:	b	5554 <doProlog+0x2794>
    5550:	ldr	r8, [fp, #-44]	; 0xffffffd4
    5554:	ldr	r0, [r8, #496]	; 0x1f0
    5558:	cmp	r0, #2
    555c:	beq	5904 <doProlog+0x2b44>
    5560:	cmp	r0, #3
    5564:	beq	590c <doProlog+0x2b4c>
    5568:	ldr	r5, [fp, #-40]	; 0xffffffd8
    556c:	ldr	r4, [fp, #12]
    5570:	ldr	r2, [sp, #60]	; 0x3c
    5574:	add	r3, fp, #12
    5578:	ldr	r7, [r5]
    557c:	mov	r0, r5
    5580:	mov	r1, r4
    5584:	blx	r7
    5588:	b	2e64 <doProlog+0xa4>
    558c:	mov	r0, r6
    5590:	bl	6948 <poolGrow>
    5594:	cmp	r0, #0
    5598:	beq	5a70 <doProlog+0x2cb0>
    559c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    55a0:	ldr	r1, [r8, #88]	; 0x58
    55a4:	mov	r2, r5
    55a8:	mov	r3, r7
    55ac:	ldr	r4, [r0, #60]	; 0x3c
    55b0:	str	r1, [sp]
    55b4:	sub	r1, fp, #32
    55b8:	blx	r4
    55bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    55c0:	cmp	r0, r5
    55c4:	bne	558c <doProlog+0x27cc>
    55c8:	ldr	r0, [r8, #96]	; 0x60
    55cc:	cmp	r0, #0
    55d0:	beq	5a70 <doProlog+0x2cb0>
    55d4:	ldr	r1, [r8, #88]	; 0x58
    55d8:	ldr	r0, [r8, #92]	; 0x5c
    55dc:	cmp	r0, r1
    55e0:	bne	55f8 <doProlog+0x2838>
    55e4:	mov	r0, r6
    55e8:	bl	6948 <poolGrow>
    55ec:	cmp	r0, #0
    55f0:	beq	5a70 <doProlog+0x2cb0>
    55f4:	ldr	r0, [r7]
    55f8:	add	r1, r0, #1
    55fc:	str	r1, [r8, #92]	; 0x5c
    5600:	mov	r1, #0
    5604:	strb	r1, [r0]
    5608:	ldr	r6, [r8, #96]	; 0x60
    560c:	cmp	r6, #0
    5610:	beq	5a70 <doProlog+0x2cb0>
    5614:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5618:	add	r1, r8, #20
    561c:	mov	r2, r6
    5620:	mov	r3, #24
    5624:	bl	6054 <lookup>
    5628:	cmp	r0, #0
    562c:	beq	5a70 <doProlog+0x2cb0>
    5630:	mov	r5, r0
    5634:	ldr	r0, [r0]
    5638:	cmp	r0, r6
    563c:	beq	564c <doProlog+0x288c>
    5640:	ldr	r1, [r8, #96]	; 0x60
    5644:	str	r1, [r8, #92]	; 0x5c
    5648:	b	566c <doProlog+0x28ac>
    564c:	ldr	r0, [r8, #92]	; 0x5c
    5650:	mov	r1, r5
    5654:	str	r0, [r8, #96]	; 0x60
    5658:	ldr	r0, [fp, #-44]	; 0xffffffd4
    565c:	bl	b114 <setElementTypePrefix>
    5660:	cmp	r0, #0
    5664:	beq	5a70 <doProlog+0x2cb0>
    5668:	ldr	r0, [r5]
    566c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    5670:	ldr	r4, [fp, #-40]	; 0xffffffd8
    5674:	ldr	r7, [fp, #-44]	; 0xffffffd4
    5678:	ldr	r1, [r3, #164]	; 0xa4
    567c:	add	r1, r1, r9, lsl #2
    5680:	str	r0, [r1, #8]
    5684:	mov	r1, #0
    5688:	ldrb	r2, [r0, r1]
    568c:	add	r1, r1, #1
    5690:	cmp	r2, #0
    5694:	bne	5688 <doProlog+0x28c8>
    5698:	ldr	r0, [r3, #168]	; 0xa8
    569c:	ldr	r9, [fp, #-48]	; 0xffffffd0
    56a0:	add	r0, r0, r1
    56a4:	str	r0, [r3, #168]	; 0xa8
    56a8:	ldr	r0, [r7, #136]	; 0x88
    56ac:	cmp	r0, #0
    56b0:	bne	5550 <doProlog+0x2790>
    56b4:	b	52fc <doProlog+0x253c>
    56b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    56bc:	bl	6948 <poolGrow>
    56c0:	cmp	r0, #0
    56c4:	beq	5a70 <doProlog+0x2cb0>
    56c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    56cc:	ldr	r1, [r4, #440]	; 0x1b8
    56d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    56d4:	mov	r2, r5
    56d8:	ldr	r7, [r0, #60]	; 0x3c
    56dc:	str	r1, [sp]
    56e0:	sub	r1, fp, #32
    56e4:	blx	r7
    56e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    56ec:	cmp	r0, r5
    56f0:	bne	56b8 <doProlog+0x28f8>
    56f4:	ldr	r0, [r4, #448]	; 0x1c0
    56f8:	cmp	r0, #0
    56fc:	beq	5a70 <doProlog+0x2cb0>
    5700:	ldr	r8, [fp, #-44]	; 0xffffffd4
    5704:	str	r0, [r8, #340]	; 0x154
    5708:	b	5554 <doProlog+0x2794>
    570c:	mov	r0, sl
    5710:	bl	6948 <poolGrow>
    5714:	cmp	r0, #0
    5718:	beq	58f0 <doProlog+0x2b30>
    571c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5720:	ldr	r1, [r8, #88]	; 0x58
    5724:	mov	r2, r6
    5728:	mov	r3, r5
    572c:	ldr	r7, [r0, #60]	; 0x3c
    5730:	str	r1, [sp]
    5734:	sub	r1, fp, #32
    5738:	blx	r7
    573c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5740:	cmp	r0, r6
    5744:	bne	570c <doProlog+0x294c>
    5748:	ldr	r0, [r8, #96]	; 0x60
    574c:	cmp	r0, #0
    5750:	beq	58f0 <doProlog+0x2b30>
    5754:	ldr	r1, [r8, #88]	; 0x58
    5758:	ldr	r0, [r8, #92]	; 0x5c
    575c:	cmp	r0, r1
    5760:	bne	5778 <doProlog+0x29b8>
    5764:	mov	r0, sl
    5768:	bl	6948 <poolGrow>
    576c:	cmp	r0, #0
    5770:	beq	58f0 <doProlog+0x2b30>
    5774:	ldr	r0, [r5]
    5778:	add	r1, r0, #1
    577c:	str	r1, [r8, #92]	; 0x5c
    5780:	mov	r1, #0
    5784:	strb	r1, [r0]
    5788:	ldr	r6, [r8, #96]	; 0x60
    578c:	cmp	r6, #0
    5790:	beq	58f0 <doProlog+0x2b30>
    5794:	ldr	r0, [fp, #-44]	; 0xffffffd4
    5798:	add	r1, r8, #20
    579c:	mov	r2, r6
    57a0:	mov	r3, #24
    57a4:	bl	6054 <lookup>
    57a8:	cmp	r0, #0
    57ac:	beq	58f0 <doProlog+0x2b30>
    57b0:	mov	r5, r0
    57b4:	ldr	r0, [r0]
    57b8:	cmp	r0, r6
    57bc:	beq	57cc <doProlog+0x2a0c>
    57c0:	ldr	r0, [r8, #96]	; 0x60
    57c4:	str	r0, [r8, #92]	; 0x5c
    57c8:	b	57e8 <doProlog+0x2a28>
    57cc:	ldr	r0, [r8, #92]	; 0x5c
    57d0:	mov	r1, r5
    57d4:	str	r0, [r8, #96]	; 0x60
    57d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    57dc:	bl	b114 <setElementTypePrefix>
    57e0:	cmp	r0, #0
    57e4:	beq	58f0 <doProlog+0x2b30>
    57e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    57ec:	ldr	r4, [fp, #-40]	; 0xffffffd8
    57f0:	ldr	r9, [fp, #-48]	; 0xffffffd0
    57f4:	str	r5, [r0, #352]	; 0x160
    57f8:	b	3c48 <doProlog+0xe88>
    57fc:	cmp	r5, #12
    5800:	mov	sl, #2
    5804:	movweq	sl, #17
    5808:	cmp	r5, #28
    580c:	movweq	sl, #10
    5810:	b	5a70 <doProlog+0x2cb0>
    5814:	ldr	r4, [fp, #-44]	; 0xffffffd4
    5818:	ldr	r5, [sp, #60]	; 0x3c
    581c:	ldr	r6, [fp, #-56]	; 0xffffffc8
    5820:	ldrb	r0, [r4, #505]	; 0x1f9
    5824:	cmp	r0, #0
    5828:	beq	5a4c <doProlog+0x2c8c>
    582c:	mov	r0, #1
    5830:	ldrb	r8, [r6, #129]	; 0x81
    5834:	strb	r0, [r6, #129]	; 0x81
    5838:	ldr	r0, [r4, #508]	; 0x1fc
    583c:	cmp	r0, #0
    5840:	beq	5a4c <doProlog+0x2c8c>
    5844:	ldr	r0, [r4, #120]	; 0x78
    5848:	cmp	r0, #0
    584c:	beq	5a4c <doProlog+0x2c8c>
    5850:	ldr	r1, [sp, #36]	; 0x24
    5854:	movw	r2, #0
    5858:	mov	r0, r4
    585c:	mov	r3, #36	; 0x24
    5860:	movt	r2, #0
    5864:	bl	6054 <lookup>
    5868:	cmp	r0, #0
    586c:	beq	58e8 <doProlog+0x2b28>
    5870:	ldr	r2, [r4, #368]	; 0x170
    5874:	mov	r1, #0
    5878:	str	r2, [r0, #20]
    587c:	strb	r1, [r6, #131]	; 0x83
    5880:	mov	r1, #0
    5884:	ldr	r3, [r0, #16]
    5888:	ldr	r7, [r4, #124]	; 0x7c
    588c:	ldr	r0, [r0, #24]
    5890:	ldr	ip, [r4, #120]	; 0x78
    5894:	str	r0, [sp]
    5898:	mov	r0, r7
    589c:	blx	ip
    58a0:	cmp	r0, #0
    58a4:	beq	59d4 <doProlog+0x2c14>
    58a8:	ldrb	r0, [r6, #131]	; 0x83
    58ac:	cmp	r0, #0
    58b0:	beq	5a44 <doProlog+0x2c84>
    58b4:	ldrb	r0, [r6, #130]	; 0x82
    58b8:	ldr	r4, [fp, #-44]	; 0xffffffd4
    58bc:	cmp	r0, #0
    58c0:	bne	5a4c <doProlog+0x2c8c>
    58c4:	ldr	r1, [r4, #116]	; 0x74
    58c8:	cmp	r1, #0
    58cc:	beq	5a4c <doProlog+0x2c8c>
    58d0:	ldr	r0, [r4, #4]
    58d4:	blx	r1
    58d8:	cmp	r0, #0
    58dc:	bne	5a4c <doProlog+0x2c8c>
    58e0:	mov	sl, #22
    58e4:	b	5a70 <doProlog+0x2cb0>
    58e8:	mov	sl, #1
    58ec:	b	5a70 <doProlog+0x2cb0>
    58f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    58f4:	mov	r0, #0
    58f8:	mov	sl, #1
    58fc:	str	r0, [r1, #352]	; 0x160
    5900:	b	5a70 <doProlog+0x2cb0>
    5904:	mov	sl, #35	; 0x23
    5908:	b	5a70 <doProlog+0x2cb0>
    590c:	ldr	r0, [fp, #12]
    5910:	ldr	r1, [fp, #16]
    5914:	mov	sl, #0
    5918:	str	r0, [r1]
    591c:	b	5a70 <doProlog+0x2cb0>
    5920:	ldr	r0, [fp, #16]
    5924:	mov	sl, #0
    5928:	str	r4, [r0]
    592c:	b	5a70 <doProlog+0x2cb0>
    5930:	ldr	r0, [r8, #324]	; 0x144
    5934:	mov	r1, #0
    5938:	mov	sl, #1
    593c:	str	r1, [r0, #16]
    5940:	b	5a70 <doProlog+0x2cb0>
    5944:	mov	r0, #0
    5948:	mov	sl, #1
    594c:	str	r0, [r8, #328]	; 0x148
    5950:	b	5a70 <doProlog+0x2cb0>
    5954:	mov	r0, #0
    5958:	mov	sl, #1
    595c:	str	r0, [r8, #344]	; 0x158
    5960:	b	5a70 <doProlog+0x2cb0>
    5964:	ldr	r1, [fp, #-44]	; 0xffffffd4
    5968:	mov	r0, #0
    596c:	mov	sl, #1
    5970:	str	r0, [r1, #332]	; 0x14c
    5974:	b	5a70 <doProlog+0x2cb0>
    5978:	ldr	r0, [r8, #324]	; 0x144
    597c:	mov	r1, #0
    5980:	mov	sl, #1
    5984:	str	r1, [r0, #28]
    5988:	b	5a70 <doProlog+0x2cb0>
    598c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    5990:	ldr	r1, [fp, #-40]	; 0xffffffd8
    5994:	ldr	r0, [r2, #152]	; 0x98
    5998:	cmp	r1, r0
    599c:	beq	59dc <doProlog+0x2c1c>
    59a0:	ldr	r0, [r2, #308]	; 0x134
    59a4:	ldrb	r0, [r0, #20]
    59a8:	cmp	r0, #0
    59ac:	bne	59f4 <doProlog+0x2c34>
    59b0:	b	5a20 <doProlog+0x2c60>
    59b4:	mov	sl, #6
    59b8:	b	5a70 <doProlog+0x2cb0>
    59bc:	ldr	r0, [sp, #64]	; 0x40
    59c0:	mov	sl, #4
    59c4:	str	r3, [r0]
    59c8:	b	5a70 <doProlog+0x2cb0>
    59cc:	mov	sl, #32
    59d0:	b	5a70 <doProlog+0x2cb0>
    59d4:	mov	sl, #21
    59d8:	b	5a70 <doProlog+0x2cb0>
    59dc:	ldrb	r1, [r2, #504]	; 0x1f8
    59e0:	cmp	r1, #0
    59e4:	ldreq	r1, [fp, #-40]	; 0xffffffd8
    59e8:	moveq	sl, #3
    59ec:	cmpeq	r1, r0
    59f0:	beq	5a70 <doProlog+0x2cb0>
    59f4:	ldr	r1, [sp, #56]	; 0x38
    59f8:	ldr	r2, [sp, #60]	; 0x3c
    59fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5a00:	ldr	r7, [r1]
    5a04:	str	r0, [sp]
    5a08:	mov	r0, r1
    5a0c:	mvn	r1, #3
    5a10:	mov	r3, r2
    5a14:	blx	r7
    5a18:	cmn	r0, #1
    5a1c:	beq	5a3c <doProlog+0x2c7c>
    5a20:	ldr	r0, [fp, #16]
    5a24:	ldr	r1, [fp, #-48]	; 0xffffffd0
    5a28:	mov	sl, #0
    5a2c:	str	r1, [r0]
    5a30:	b	5a70 <doProlog+0x2cb0>
    5a34:	mov	sl, #2
    5a38:	b	5a70 <doProlog+0x2cb0>
    5a3c:	mov	sl, #29
    5a40:	b	5a70 <doProlog+0x2cb0>
    5a44:	ldr	r4, [fp, #-44]	; 0xffffffd4
    5a48:	strb	r8, [r6, #129]	; 0x81
    5a4c:	movw	r0, #0
    5a50:	ldr	r3, [fp, #16]
    5a54:	mov	r1, r9
    5a58:	mov	r2, r5
    5a5c:	movt	r0, #0
    5a60:	str	r0, [r4, #288]	; 0x120
    5a64:	mov	r0, r4
    5a68:	bl	6548 <contentProcessor>
    5a6c:	mov	sl, r0
    5a70:	mov	r0, sl
    5a74:	sub	sp, fp, #28
    5a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5a7c:	movw	r0, #0
    5a80:	mov	sl, #0
    5a84:	movt	r0, #0
    5a88:	str	r0, [r8, #288]	; 0x120
    5a8c:	b	5a70 <doProlog+0x2cb0>
    5a90:	mov	sl, #12
    5a94:	b	5a70 <doProlog+0x2cb0>
    5a98:	mov	sl, #11
    5a9c:	b	5a70 <doProlog+0x2cb0>
    5aa0:	mov	sl, #24
    5aa4:	b	5a70 <doProlog+0x2cb0>

00005aa8 <processXmlDecl>:
    5aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5aac:	add	fp, sp, #28
    5ab0:	sub	sp, sp, #60	; 0x3c
    5ab4:	mov	r8, r0
    5ab8:	mov	r0, #0
    5abc:	mov	r6, r3
    5ac0:	add	r3, sp, #40	; 0x28
    5ac4:	mov	r4, r2
    5ac8:	mov	r5, r1
    5acc:	add	r2, sp, #36	; 0x24
    5ad0:	add	lr, sp, #44	; 0x2c
    5ad4:	sub	r7, fp, #40	; 0x28
    5ad8:	add	ip, sp, #32
    5adc:	str	r0, [fp, #-40]	; 0xffffffd8
    5ae0:	str	r0, [sp, #44]	; 0x2c
    5ae4:	str	r0, [sp, #40]	; 0x28
    5ae8:	mvn	r0, #0
    5aec:	add	sl, r8, #296	; 0x128
    5af0:	str	r0, [sp, #32]
    5af4:	ldrb	r0, [r8, #244]	; 0xf4
    5af8:	ldr	r1, [r8, #152]	; 0x98
    5afc:	str	r3, [sp, #4]
    5b00:	add	r3, sp, #8
    5b04:	str	sl, [sp]
    5b08:	stm	r3, {r2, r7, lr}
    5b0c:	movw	r2, #0
    5b10:	movw	r7, #0
    5b14:	mov	r3, r6
    5b18:	str	ip, [sp, #20]
    5b1c:	movt	r2, #0
    5b20:	movt	r7, #0
    5b24:	cmp	r0, #0
    5b28:	mov	r0, r5
    5b2c:	moveq	r7, r2
    5b30:	mov	r2, r4
    5b34:	blx	r7
    5b38:	cmp	r0, #0
    5b3c:	beq	5c18 <processXmlDecl+0x170>
    5b40:	ldr	r0, [sp, #32]
    5b44:	cmp	r0, #1
    5b48:	cmpeq	r5, #0
    5b4c:	bne	5b6c <processXmlDecl+0xc4>
    5b50:	ldr	r0, [r8, #364]	; 0x16c
    5b54:	mov	r1, #1
    5b58:	strb	r1, [r0, #130]	; 0x82
    5b5c:	ldr	r0, [r8, #508]	; 0x1fc
    5b60:	cmp	r0, #1
    5b64:	moveq	r0, #0
    5b68:	streq	r0, [r8, #508]	; 0x1fc
    5b6c:	ldr	r0, [r8, #148]	; 0x94
    5b70:	cmp	r0, #0
    5b74:	beq	5c28 <processXmlDecl+0x180>
    5b78:	str	sl, [sp, #28]
    5b7c:	ldr	sl, [fp, #-40]	; 0xffffffd8
    5b80:	mov	r4, #0
    5b84:	mov	r5, #0
    5b88:	cmp	sl, #0
    5b8c:	beq	5cbc <processXmlDecl+0x214>
    5b90:	ldr	r6, [r8, #152]	; 0x98
    5b94:	mov	r1, sl
    5b98:	ldr	r2, [r6, #32]
    5b9c:	mov	r0, r6
    5ba0:	blx	r2
    5ba4:	str	sl, [fp, #-32]	; 0xffffffe0
    5ba8:	mov	r5, r8
    5bac:	mov	r7, r0
    5bb0:	ldr	r0, [r5, #468]!	; 0x1d4
    5bb4:	sub	r9, r5, #12
    5bb8:	cmp	r0, #0
    5bbc:	bne	5bd0 <processXmlDecl+0x128>
    5bc0:	mov	r0, r9
    5bc4:	bl	6948 <poolGrow>
    5bc8:	cmp	r0, #0
    5bcc:	beq	5d44 <processXmlDecl+0x29c>
    5bd0:	add	r7, sl, r7
    5bd4:	sub	sl, fp, #32
    5bd8:	ldr	r0, [r8, #464]	; 0x1d0
    5bdc:	ldr	r4, [r6, #60]	; 0x3c
    5be0:	mov	r1, sl
    5be4:	mov	r2, r7
    5be8:	mov	r3, r5
    5bec:	str	r0, [sp]
    5bf0:	mov	r0, r6
    5bf4:	blx	r4
    5bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5bfc:	cmp	r0, r7
    5c00:	beq	5c60 <processXmlDecl+0x1b8>
    5c04:	mov	r0, r9
    5c08:	bl	6948 <poolGrow>
    5c0c:	cmp	r0, #0
    5c10:	bne	5bd8 <processXmlDecl+0x130>
    5c14:	b	5d44 <processXmlDecl+0x29c>
    5c18:	cmp	r5, #0
    5c1c:	mov	r6, #30
    5c20:	movwne	r6, #31
    5c24:	b	5ff4 <processXmlDecl+0x54c>
    5c28:	ldr	r3, [r8, #88]	; 0x58
    5c2c:	mov	r5, #0
    5c30:	cmp	r3, #0
    5c34:	beq	5d4c <processXmlDecl+0x2a4>
    5c38:	ldr	r5, [r8, #152]	; 0x98
    5c3c:	str	r4, [fp, #-32]	; 0xffffffe0
    5c40:	ldrb	r0, [r5, #72]	; 0x48
    5c44:	cmp	r0, #0
    5c48:	beq	5d54 <processXmlDecl+0x2ac>
    5c4c:	ldr	r0, [r8, #4]
    5c50:	sub	r2, r6, r4
    5c54:	mov	r1, r4
    5c58:	blx	r3
    5c5c:	b	5db4 <processXmlDecl+0x30c>
    5c60:	ldr	r0, [r8, #472]	; 0x1d8
    5c64:	mov	r6, #1
    5c68:	cmp	r0, #0
    5c6c:	beq	5ff4 <processXmlDecl+0x54c>
    5c70:	ldr	r1, [r8, #464]	; 0x1d0
    5c74:	ldr	r0, [r8, #468]	; 0x1d4
    5c78:	cmp	r0, r1
    5c7c:	bne	5c94 <processXmlDecl+0x1ec>
    5c80:	mov	r0, r9
    5c84:	bl	6948 <poolGrow>
    5c88:	cmp	r0, #0
    5c8c:	beq	5ff4 <processXmlDecl+0x54c>
    5c90:	ldr	r0, [r5]
    5c94:	add	r1, r0, #1
    5c98:	mov	r4, #0
    5c9c:	str	r1, [r8, #468]	; 0x1d4
    5ca0:	mov	r1, #0
    5ca4:	strb	r1, [r0]
    5ca8:	ldr	r5, [r8, #472]	; 0x1d8
    5cac:	cmp	r5, #0
    5cb0:	beq	5ff4 <processXmlDecl+0x54c>
    5cb4:	ldr	r0, [r8, #468]	; 0x1d4
    5cb8:	str	r0, [r8, #472]	; 0x1d8
    5cbc:	ldr	r0, [sp, #40]	; 0x28
    5cc0:	cmp	r0, #0
    5cc4:	beq	5e14 <processXmlDecl+0x36c>
    5cc8:	ldr	r6, [r8, #152]	; 0x98
    5ccc:	mov	r7, r8
    5cd0:	str	r5, [sp, #24]
    5cd4:	ldr	r5, [sp, #36]	; 0x24
    5cd8:	ldr	sl, [r6, #68]	; 0x44
    5cdc:	str	r0, [fp, #-32]	; 0xffffffe0
    5ce0:	ldr	r0, [r7, #468]!	; 0x1d4
    5ce4:	sub	r9, r7, #12
    5ce8:	cmp	r0, #0
    5cec:	bne	5d00 <processXmlDecl+0x258>
    5cf0:	mov	r0, r9
    5cf4:	bl	6948 <poolGrow>
    5cf8:	cmp	r0, #0
    5cfc:	beq	5d44 <processXmlDecl+0x29c>
    5d00:	sub	r5, r5, sl
    5d04:	sub	sl, fp, #32
    5d08:	ldr	r0, [r8, #464]	; 0x1d0
    5d0c:	ldr	r4, [r6, #60]	; 0x3c
    5d10:	mov	r1, sl
    5d14:	mov	r2, r5
    5d18:	mov	r3, r7
    5d1c:	str	r0, [sp]
    5d20:	mov	r0, r6
    5d24:	blx	r4
    5d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d2c:	cmp	r0, r5
    5d30:	beq	5dc0 <processXmlDecl+0x318>
    5d34:	mov	r0, r9
    5d38:	bl	6948 <poolGrow>
    5d3c:	cmp	r0, #0
    5d40:	bne	5d08 <processXmlDecl+0x260>
    5d44:	mov	r6, #1
    5d48:	b	5ff4 <processXmlDecl+0x54c>
    5d4c:	mov	r4, #0
    5d50:	b	5e30 <processXmlDecl+0x388>
    5d54:	sub	r9, fp, #32
    5d58:	sub	r7, fp, #36	; 0x24
    5d5c:	ldr	r0, [r8, #52]	; 0x34
    5d60:	ldr	r1, [r8, #56]	; 0x38
    5d64:	mov	r2, r6
    5d68:	mov	r3, r7
    5d6c:	str	r0, [fp, #-36]	; 0xffffffdc
    5d70:	mov	r0, r5
    5d74:	ldr	r4, [r5, #60]	; 0x3c
    5d78:	str	r1, [sp]
    5d7c:	mov	r1, r9
    5d80:	blx	r4
    5d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5d88:	str	r0, [r8, #300]	; 0x12c
    5d8c:	ldr	r1, [r8, #52]	; 0x34
    5d90:	ldr	r2, [fp, #-36]	; 0xffffffdc
    5d94:	ldr	r0, [r8, #4]
    5d98:	ldr	r3, [r8, #88]	; 0x58
    5d9c:	sub	r2, r2, r1
    5da0:	blx	r3
    5da4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5da8:	cmp	r0, r6
    5dac:	str	r0, [r8, #296]	; 0x128
    5db0:	bne	5d5c <processXmlDecl+0x2b4>
    5db4:	mov	r4, #0
    5db8:	mov	r5, #0
    5dbc:	b	5e30 <processXmlDecl+0x388>
    5dc0:	ldr	r0, [r8, #472]	; 0x1d8
    5dc4:	mov	r6, #1
    5dc8:	cmp	r0, #0
    5dcc:	beq	5ff4 <processXmlDecl+0x54c>
    5dd0:	ldr	r1, [r8, #464]	; 0x1d0
    5dd4:	ldr	r0, [r8, #468]	; 0x1d4
    5dd8:	cmp	r0, r1
    5ddc:	bne	5df4 <processXmlDecl+0x34c>
    5de0:	mov	r0, r9
    5de4:	bl	6948 <poolGrow>
    5de8:	cmp	r0, #0
    5dec:	beq	5ff4 <processXmlDecl+0x54c>
    5df0:	ldr	r0, [r7]
    5df4:	add	r1, r0, #1
    5df8:	ldr	r5, [sp, #24]
    5dfc:	str	r1, [r8, #468]	; 0x1d4
    5e00:	mov	r1, #0
    5e04:	strb	r1, [r0]
    5e08:	ldr	r4, [r8, #472]	; 0x1d8
    5e0c:	cmp	r4, #0
    5e10:	beq	5ff4 <processXmlDecl+0x54c>
    5e14:	ldr	r0, [r8, #4]
    5e18:	ldr	r7, [r8, #148]	; 0x94
    5e1c:	ldr	r3, [sp, #32]
    5e20:	mov	r1, r4
    5e24:	mov	r2, r5
    5e28:	blx	r7
    5e2c:	ldr	sl, [sp, #28]
    5e30:	ldr	r0, [r8, #240]	; 0xf0
    5e34:	cmp	r0, #0
    5e38:	beq	5e80 <processXmlDecl+0x3d8>
    5e3c:	orrs	r0, r5, r4
    5e40:	mov	r6, #0
    5e44:	beq	5ff4 <processXmlDecl+0x54c>
    5e48:	ldr	r0, [r8, #460]	; 0x1cc
    5e4c:	cmp	r0, #0
    5e50:	beq	5ea8 <processXmlDecl+0x400>
    5e54:	ldr	r1, [r8, #456]	; 0x1c8
    5e58:	cmp	r1, #0
    5e5c:	beq	5eb0 <processXmlDecl+0x408>
    5e60:	mov	r2, r1
    5e64:	ldr	r1, [r1]
    5e68:	str	r0, [r2]
    5e6c:	mov	r0, r2
    5e70:	cmp	r1, #0
    5e74:	bne	5e60 <processXmlDecl+0x3b8>
    5e78:	str	r2, [r8, #460]	; 0x1cc
    5e7c:	b	5eb0 <processXmlDecl+0x408>
    5e80:	ldr	r0, [sp, #44]	; 0x2c
    5e84:	cmp	r0, #0
    5e88:	beq	5ec8 <processXmlDecl+0x420>
    5e8c:	ldr	r2, [r8, #152]	; 0x98
    5e90:	ldr	r1, [r0, #68]	; 0x44
    5e94:	ldr	r2, [r2, #68]	; 0x44
    5e98:	cmp	r1, r2
    5e9c:	bne	5f28 <processXmlDecl+0x480>
    5ea0:	str	r0, [r8, #152]	; 0x98
    5ea4:	b	5e3c <processXmlDecl+0x394>
    5ea8:	ldr	r0, [r8, #456]	; 0x1c8
    5eac:	str	r0, [r8, #460]	; 0x1cc
    5eb0:	mov	r6, #0
    5eb4:	str	r6, [r8, #456]	; 0x1c8
    5eb8:	str	r6, [r8, #464]	; 0x1d0
    5ebc:	str	r6, [r8, #468]	; 0x1d4
    5ec0:	str	r6, [r8, #472]	; 0x1d8
    5ec4:	b	5ff4 <processXmlDecl+0x54c>
    5ec8:	ldr	r7, [fp, #-40]	; 0xffffffd8
    5ecc:	cmp	r7, #0
    5ed0:	beq	5e3c <processXmlDecl+0x394>
    5ed4:	cmp	r5, #0
    5ed8:	str	sl, [sp, #28]
    5edc:	beq	5f38 <processXmlDecl+0x490>
    5ee0:	mov	r0, r8
    5ee4:	mov	r1, r5
    5ee8:	bl	2cc8 <handleUnknownEncoding>
    5eec:	mov	r6, r0
    5ef0:	ldr	r0, [r8, #460]	; 0x1cc
    5ef4:	cmp	r0, #0
    5ef8:	beq	5fc0 <processXmlDecl+0x518>
    5efc:	ldr	r1, [r8, #456]	; 0x1c8
    5f00:	cmp	r1, #0
    5f04:	beq	5fc8 <processXmlDecl+0x520>
    5f08:	mov	r2, r1
    5f0c:	ldr	r1, [r1]
    5f10:	str	r0, [r2]
    5f14:	mov	r0, r2
    5f18:	cmp	r1, #0
    5f1c:	bne	5f08 <processXmlDecl+0x460>
    5f20:	str	r2, [r8, #460]	; 0x1cc
    5f24:	b	5fc8 <processXmlDecl+0x520>
    5f28:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5f2c:	mov	r6, #19
    5f30:	str	r0, [sl]
    5f34:	b	5ff4 <processXmlDecl+0x54c>
    5f38:	ldr	r6, [r8, #152]	; 0x98
    5f3c:	mov	r1, r7
    5f40:	ldr	r2, [r6, #32]
    5f44:	mov	r0, r6
    5f48:	blx	r2
    5f4c:	str	r7, [fp, #-32]	; 0xffffffe0
    5f50:	mov	r5, r8
    5f54:	mov	r9, r0
    5f58:	ldr	r0, [r5, #468]!	; 0x1d4
    5f5c:	sub	sl, r5, #12
    5f60:	cmp	r0, #0
    5f64:	bne	5f78 <processXmlDecl+0x4d0>
    5f68:	mov	r0, sl
    5f6c:	bl	6948 <poolGrow>
    5f70:	cmp	r0, #0
    5f74:	beq	5d44 <processXmlDecl+0x29c>
    5f78:	add	r7, r7, r9
    5f7c:	sub	r9, fp, #32
    5f80:	ldr	r0, [r8, #464]	; 0x1d0
    5f84:	ldr	r4, [r6, #60]	; 0x3c
    5f88:	mov	r1, r9
    5f8c:	mov	r2, r7
    5f90:	mov	r3, r5
    5f94:	str	r0, [sp]
    5f98:	mov	r0, r6
    5f9c:	blx	r4
    5fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    5fa4:	cmp	r0, r7
    5fa8:	beq	6000 <processXmlDecl+0x558>
    5fac:	mov	r0, sl
    5fb0:	bl	6948 <poolGrow>
    5fb4:	cmp	r0, #0
    5fb8:	bne	5f80 <processXmlDecl+0x4d8>
    5fbc:	b	5d44 <processXmlDecl+0x29c>
    5fc0:	ldr	r0, [r8, #456]	; 0x1c8
    5fc4:	str	r0, [r8, #460]	; 0x1cc
    5fc8:	mov	r0, #0
    5fcc:	cmp	r6, #18
    5fd0:	str	r0, [r8, #456]	; 0x1c8
    5fd4:	str	r0, [r8, #464]	; 0x1d0
    5fd8:	str	r0, [r8, #468]	; 0x1d4
    5fdc:	str	r0, [r8, #472]	; 0x1d8
    5fe0:	bne	5ff4 <processXmlDecl+0x54c>
    5fe4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    5fe8:	ldr	r1, [sp, #28]
    5fec:	mov	r6, #18
    5ff0:	str	r0, [r1]
    5ff4:	mov	r0, r6
    5ff8:	sub	sp, fp, #28
    5ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6000:	ldr	r0, [r8, #472]	; 0x1d8
    6004:	mov	r6, #1
    6008:	cmp	r0, #0
    600c:	beq	5ff4 <processXmlDecl+0x54c>
    6010:	ldr	r1, [r8, #464]	; 0x1d0
    6014:	ldr	r0, [r8, #468]	; 0x1d4
    6018:	cmp	r0, r1
    601c:	bne	6034 <processXmlDecl+0x58c>
    6020:	mov	r0, sl
    6024:	bl	6948 <poolGrow>
    6028:	cmp	r0, #0
    602c:	beq	5ff4 <processXmlDecl+0x54c>
    6030:	ldr	r0, [r5]
    6034:	add	r1, r0, #1
    6038:	str	r1, [r8, #468]	; 0x1d4
    603c:	mov	r1, #0
    6040:	strb	r1, [r0]
    6044:	ldr	r5, [r8, #472]	; 0x1d8
    6048:	cmp	r5, #0
    604c:	bne	5ee0 <processXmlDecl+0x438>
    6050:	b	5ff4 <processXmlDecl+0x54c>

00006054 <lookup>:
    6054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6058:	add	fp, sp, #28
    605c:	sub	sp, sp, #36	; 0x24
    6060:	mov	r7, r0
    6064:	ldr	r0, [r1, #8]
    6068:	mov	r5, r3
    606c:	mov	r6, r2
    6070:	mov	r4, r1
    6074:	cmp	r0, #0
    6078:	beq	616c <lookup+0x118>
    607c:	ldrb	lr, [r6]
    6080:	ldr	r8, [r7, #512]	; 0x200
    6084:	str	r5, [sp, #28]
    6088:	str	r7, [sp, #32]
    608c:	cmp	lr, #0
    6090:	beq	60bc <lookup+0x68>
    6094:	movw	r3, #16963	; 0x4243
    6098:	add	r2, r6, #1
    609c:	mov	r1, lr
    60a0:	movt	r3, #15
    60a4:	mul	r7, r8, r3
    60a8:	uxtb	r1, r1
    60ac:	eor	r8, r7, r1
    60b0:	ldrb	r1, [r2], #1
    60b4:	cmp	r1, #0
    60b8:	bne	60a4 <lookup+0x50>
    60bc:	ldr	r2, [r4]
    60c0:	sub	r1, r0, #1
    60c4:	str	r6, [sp, #20]
    60c8:	and	r9, r8, r1
    60cc:	ldr	r5, [r2, r9, lsl #2]
    60d0:	cmp	r5, #0
    60d4:	beq	61f8 <lookup+0x1a4>
    60d8:	rsb	r3, r0, #0
    60dc:	lsr	r1, r1, #2
    60e0:	add	sl, r6, #1
    60e4:	and	r3, r8, r3
    60e8:	str	r1, [sp, #16]
    60ec:	str	r3, [sp, #24]
    60f0:	mov	r3, #0
    60f4:	b	6118 <lookup+0xc4>
    60f8:	tst	r3, #255	; 0xff
    60fc:	beq	6150 <lookup+0xfc>
    6100:	uxtb	r1, r3
    6104:	subs	r9, r9, r1
    6108:	addcc	r9, r9, r0
    610c:	ldr	r5, [r2, r9, lsl #2]
    6110:	cmp	r5, #0
    6114:	beq	61f8 <lookup+0x1a4>
    6118:	ldr	r7, [r5]
    611c:	ldrb	r6, [r7]
    6120:	cmp	lr, r6
    6124:	bne	60f8 <lookup+0xa4>
    6128:	add	r7, r7, #1
    612c:	mov	r6, sl
    6130:	mov	ip, lr
    6134:	tst	ip, #255	; 0xff
    6138:	beq	643c <lookup+0x3e8>
    613c:	ldrb	ip, [r6], #1
    6140:	ldrb	r1, [r7], #1
    6144:	cmp	ip, r1
    6148:	beq	6134 <lookup+0xe0>
    614c:	b	60f8 <lookup+0xa4>
    6150:	ldrb	r1, [r4, #4]
    6154:	ldr	r3, [sp, #24]
    6158:	ldr	r7, [sp, #16]
    615c:	sub	r1, r1, #1
    6160:	and	r1, r7, r3, lsr r1
    6164:	orr	r3, r1, #1
    6168:	b	6100 <lookup+0xac>
    616c:	cmp	r5, #0
    6170:	beq	6438 <lookup+0x3e4>
    6174:	mov	r0, #64	; 0x40
    6178:	str	r0, [r4, #8]
    617c:	mov	r0, #6
    6180:	strb	r0, [r4, #4]
    6184:	ldr	r0, [r4, #16]
    6188:	ldr	r1, [r0]
    618c:	mov	r0, #256	; 0x100
    6190:	blx	r1
    6194:	cmp	r0, #0
    6198:	str	r0, [r4]
    619c:	beq	6360 <lookup+0x30c>
    61a0:	mov	r1, #0
    61a4:	mov	r2, #256	; 0x100
    61a8:	bl	0 <memset>
    61ac:	ldrb	r1, [r6]
    61b0:	ldr	r0, [r7, #512]	; 0x200
    61b4:	str	r6, [sp, #20]
    61b8:	str	r5, [sp, #28]
    61bc:	cmp	r1, #0
    61c0:	beq	61e8 <lookup+0x194>
    61c4:	movw	r3, #16963	; 0x4243
    61c8:	add	r2, r6, #1
    61cc:	movt	r3, #15
    61d0:	mul	r0, r0, r3
    61d4:	uxtb	r1, r1
    61d8:	eor	r0, r0, r1
    61dc:	ldrb	r1, [r2], #1
    61e0:	cmp	r1, #0
    61e4:	bne	61d0 <lookup+0x17c>
    61e8:	ldr	r1, [r4, #8]
    61ec:	sub	r1, r1, #1
    61f0:	and	r9, r1, r0
    61f4:	b	63dc <lookup+0x388>
    61f8:	ldr	r0, [sp, #28]
    61fc:	cmp	r0, #0
    6200:	beq	6438 <lookup+0x3e4>
    6204:	ldrb	r0, [r4, #4]
    6208:	ldr	r1, [r4, #12]
    620c:	mov	r5, #0
    6210:	sub	r2, r0, #1
    6214:	cmp	r5, r1, lsr r2
    6218:	beq	63dc <lookup+0x388>
    621c:	ldr	r1, [r4, #16]
    6220:	add	r0, r0, #1
    6224:	mov	r9, #1
    6228:	uxtb	r7, r0
    622c:	str	r0, [sp, #4]
    6230:	lsl	sl, r9, r7
    6234:	ldr	r1, [r1]
    6238:	lsl	r0, sl, #2
    623c:	str	r0, [sp, #16]
    6240:	blx	r1
    6244:	cmp	r0, #0
    6248:	beq	643c <lookup+0x3e8>
    624c:	mov	r6, r0
    6250:	mvn	r0, #0
    6254:	ldr	r2, [sp, #16]
    6258:	mov	r1, #0
    625c:	str	r7, [sp]
    6260:	add	r0, r0, r9, lsl r7
    6264:	mov	r9, #0
    6268:	str	r0, [sp, #24]
    626c:	mov	r0, r6
    6270:	bl	0 <memset>
    6274:	ldr	lr, [r4, #8]
    6278:	cmp	lr, #0
    627c:	beq	636c <lookup+0x318>
    6280:	ldr	r0, [sp, #24]
    6284:	ldr	r1, [sp]
    6288:	lsr	r0, r0, #2
    628c:	str	r0, [sp, #16]
    6290:	sub	r0, r1, #1
    6294:	movw	r1, #16963	; 0x4243
    6298:	movt	r1, #15
    629c:	str	r0, [sp, #12]
    62a0:	rsb	r0, sl, #0
    62a4:	str	r0, [sp, #8]
    62a8:	b	62bc <lookup+0x268>
    62ac:	str	r2, [r3]
    62b0:	add	r9, r9, #1
    62b4:	cmp	r9, lr
    62b8:	bcs	636c <lookup+0x318>
    62bc:	ldr	r2, [r4]
    62c0:	ldr	r2, [r2, r9, lsl #2]
    62c4:	cmp	r2, #0
    62c8:	beq	62b0 <lookup+0x25c>
    62cc:	ldr	r3, [sp, #32]
    62d0:	ldr	r5, [r2]
    62d4:	ldr	r7, [r3, #512]	; 0x200
    62d8:	ldrb	r3, [r5]
    62dc:	cmp	r3, #0
    62e0:	beq	6308 <lookup+0x2b4>
    62e4:	ldr	r0, [sp, #24]
    62e8:	add	r5, r5, #1
    62ec:	mul	r7, r7, r1
    62f0:	uxtb	r3, r3
    62f4:	eor	r7, r7, r3
    62f8:	ldrb	r3, [r5], #1
    62fc:	cmp	r3, #0
    6300:	bne	62ec <lookup+0x298>
    6304:	b	630c <lookup+0x2b8>
    6308:	ldr	r0, [sp, #24]
    630c:	and	ip, r7, r0
    6310:	mov	r3, r6
    6314:	ldr	r5, [r3, ip, lsl #2]!
    6318:	cmp	r5, #0
    631c:	beq	62ac <lookup+0x258>
    6320:	ldr	r0, [sp, #8]
    6324:	ldr	r5, [sp, #12]
    6328:	and	r3, r7, r0
    632c:	ldr	r0, [sp, #16]
    6330:	and	r3, r0, r3, lsr r5
    6334:	mov	r5, #0
    6338:	tst	r5, #255	; 0xff
    633c:	orreq	r5, r3, #1
    6340:	uxtb	r7, r5
    6344:	subs	ip, ip, r7
    6348:	addcc	ip, ip, sl
    634c:	ldr	r7, [r6, ip, lsl #2]
    6350:	cmp	r7, #0
    6354:	bne	6338 <lookup+0x2e4>
    6358:	add	r3, r6, ip, lsl #2
    635c:	b	62ac <lookup+0x258>
    6360:	mov	r5, #0
    6364:	str	r5, [r4, #8]
    6368:	b	643c <lookup+0x3e8>
    636c:	ldr	r1, [r4, #16]
    6370:	ldr	r0, [r4]
    6374:	ldr	r1, [r1, #8]
    6378:	blx	r1
    637c:	ldr	r2, [sp, #24]
    6380:	ldr	r0, [sp, #4]
    6384:	str	sl, [r4, #8]
    6388:	strb	r0, [r4, #4]
    638c:	str	r6, [r4]
    6390:	and	r9, r2, r8
    6394:	ldr	r0, [r6, r9, lsl #2]
    6398:	cmp	r0, #0
    639c:	beq	63dc <lookup+0x388>
    63a0:	ldr	r1, [sp]
    63a4:	rsb	r0, sl, #0
    63a8:	lsr	r2, r2, #2
    63ac:	and	r0, r8, r0
    63b0:	sub	r1, r1, #1
    63b4:	and	r0, r2, r0, lsr r1
    63b8:	mov	r1, #0
    63bc:	tst	r1, #255	; 0xff
    63c0:	orreq	r1, r0, #1
    63c4:	uxtb	r2, r1
    63c8:	subs	r9, r9, r2
    63cc:	addcc	r9, r9, sl
    63d0:	ldr	r2, [r6, r9, lsl #2]
    63d4:	cmp	r2, #0
    63d8:	bne	63bc <lookup+0x368>
    63dc:	ldr	r0, [r4, #16]
    63e0:	ldr	r5, [sp, #28]
    63e4:	ldr	r1, [r0]
    63e8:	mov	r0, r5
    63ec:	blx	r1
    63f0:	ldr	r1, [r4]
    63f4:	str	r0, [r1, r9, lsl #2]
    63f8:	ldr	r0, [r4]
    63fc:	ldr	r0, [r0, r9, lsl #2]
    6400:	cmp	r0, #0
    6404:	beq	6438 <lookup+0x3e4>
    6408:	mov	r1, #0
    640c:	mov	r2, r5
    6410:	bl	0 <memset>
    6414:	ldr	r0, [r4]
    6418:	ldr	r2, [sp, #20]
    641c:	ldr	r1, [r0, r9, lsl #2]
    6420:	str	r2, [r1]
    6424:	ldr	r1, [r4, #12]
    6428:	add	r1, r1, #1
    642c:	str	r1, [r4, #12]
    6430:	ldr	r5, [r0, r9, lsl #2]
    6434:	b	643c <lookup+0x3e8>
    6438:	mov	r5, #0
    643c:	mov	r0, r5
    6440:	sub	sp, fp, #28
    6444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006448 <normalizePublicId>:
    6448:	push	{fp, lr}
    644c:	mov	fp, sp
    6450:	mov	ip, #32
    6454:	mov	r1, r0
    6458:	mov	lr, r0
    645c:	b	646c <normalizePublicId+0x24>
    6460:	strb	r1, [r3], #1
    6464:	mov	r1, r3
    6468:	add	lr, lr, #1
    646c:	mov	r3, r1
    6470:	ldrb	r1, [lr]
    6474:	cmp	r1, #32
    6478:	bhi	6460 <normalizePublicId+0x18>
    647c:	add	r2, pc, #0
    6480:	ldr	pc, [r2, r1, lsl #2]
    6484:	.word	0x00006524
    6488:	.word	0x00006460
    648c:	.word	0x00006460
    6490:	.word	0x00006460
    6494:	.word	0x00006460
    6498:	.word	0x00006460
    649c:	.word	0x00006460
    64a0:	.word	0x00006460
    64a4:	.word	0x00006460
    64a8:	.word	0x00006460
    64ac:	.word	0x00006508
    64b0:	.word	0x00006460
    64b4:	.word	0x00006460
    64b8:	.word	0x00006508
    64bc:	.word	0x00006460
    64c0:	.word	0x00006460
    64c4:	.word	0x00006460
    64c8:	.word	0x00006460
    64cc:	.word	0x00006460
    64d0:	.word	0x00006460
    64d4:	.word	0x00006460
    64d8:	.word	0x00006460
    64dc:	.word	0x00006460
    64e0:	.word	0x00006460
    64e4:	.word	0x00006460
    64e8:	.word	0x00006460
    64ec:	.word	0x00006460
    64f0:	.word	0x00006460
    64f4:	.word	0x00006460
    64f8:	.word	0x00006460
    64fc:	.word	0x00006460
    6500:	.word	0x00006460
    6504:	.word	0x00006508
    6508:	cmp	r3, r0
    650c:	mov	r1, r0
    6510:	beq	6468 <normalizePublicId+0x20>
    6514:	ldrb	r1, [r3, #-1]
    6518:	cmp	r1, #32
    651c:	strbne	ip, [r3], #1
    6520:	b	6464 <normalizePublicId+0x1c>
    6524:	cmp	r3, r0
    6528:	beq	653c <normalizePublicId+0xf4>
    652c:	mov	r0, r3
    6530:	ldrb	r1, [r0, #-1]!
    6534:	cmp	r1, #32
    6538:	movne	r0, r3
    653c:	mov	r1, #0
    6540:	strb	r1, [r0]
    6544:	pop	{fp, pc}

00006548 <contentProcessor>:
    6548:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    654c:	add	fp, sp, #24
    6550:	sub	sp, sp, #16
    6554:	mov	r8, r0
    6558:	ldr	r5, [r0, #152]	; 0x98
    655c:	ldrb	r0, [r0, #500]	; 0x1f4
    6560:	mov	r6, r1
    6564:	stm	sp, {r2, r3}
    6568:	mov	r1, #0
    656c:	mov	r3, r6
    6570:	clz	r0, r0
    6574:	mov	r2, r5
    6578:	lsr	r0, r0, #5
    657c:	str	r0, [sp, #8]
    6580:	mov	r0, r8
    6584:	bl	7ce4 <doContent>
    6588:	cmp	r0, #0
    658c:	beq	6598 <contentProcessor+0x50>
    6590:	sub	sp, fp, #24
    6594:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6598:	ldr	r7, [r8, #372]	; 0x174
    659c:	b	6614 <contentProcessor+0xcc>
    65a0:	ldr	r3, [r7, #40]	; 0x28
    65a4:	ldr	r2, [r7, #8]
    65a8:	add	r5, r2, r4
    65ac:	sub	r3, r3, r0
    65b0:	cmp	r5, r3
    65b4:	ble	6604 <contentProcessor+0xbc>
    65b8:	ldr	r2, [r8, #16]
    65bc:	mov	r1, r5
    65c0:	blx	r2
    65c4:	cmp	r0, #0
    65c8:	beq	6640 <contentProcessor+0xf8>
    65cc:	ldr	r2, [r7, #12]
    65d0:	ldr	r1, [r7, #36]	; 0x24
    65d4:	add	r6, r0, r4
    65d8:	cmp	r2, r1
    65dc:	streq	r0, [r7, #12]
    65e0:	ldr	r2, [r7, #16]
    65e4:	cmp	r2, #0
    65e8:	subne	r1, r2, r1
    65ec:	addne	r1, r0, r1
    65f0:	strne	r1, [r7, #16]
    65f4:	add	r1, r0, r5
    65f8:	str	r0, [r7, #36]	; 0x24
    65fc:	str	r1, [r7, #40]	; 0x28
    6600:	ldmib	r7, {r1, r2}
    6604:	mov	r0, r6
    6608:	bl	0 <memcpy>
    660c:	str	r6, [r7, #4]
    6610:	ldr	r7, [r7]
    6614:	cmp	r7, #0
    6618:	ldrne	r2, [r7, #24]
    661c:	ldrne	r0, [r7, #36]	; 0x24
    6620:	ldrne	r1, [r7, #4]
    6624:	addne	r4, r2, #1
    6628:	addne	r6, r0, r4
    662c:	cmpne	r1, r6
    6630:	bne	65a0 <contentProcessor+0x58>
    6634:	mov	r0, #0
    6638:	sub	sp, fp, #24
    663c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6640:	mov	r0, #1
    6644:	sub	sp, fp, #24
    6648:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000664c <getAttributeId>:
    664c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6650:	add	fp, sp, #28
    6654:	sub	sp, sp, #12
    6658:	ldr	sl, [r0, #364]	; 0x16c
    665c:	mov	r5, r1
    6660:	str	r0, [sp, #4]
    6664:	mov	r7, r3
    6668:	mov	r4, r2
    666c:	mov	r8, sl
    6670:	ldr	r1, [sl, #88]	; 0x58
    6674:	add	r9, sl, #80	; 0x50
    6678:	ldr	r0, [r8, #92]!	; 0x5c
    667c:	cmp	r0, r1
    6680:	bne	6698 <getAttributeId+0x4c>
    6684:	mov	r0, r9
    6688:	bl	6948 <poolGrow>
    668c:	cmp	r0, #0
    6690:	beq	6708 <getAttributeId+0xbc>
    6694:	ldr	r0, [r8]
    6698:	add	r1, r0, #1
    669c:	str	r1, [r8]
    66a0:	mov	r1, #0
    66a4:	strb	r1, [r0]
    66a8:	str	r4, [sp, #8]
    66ac:	ldr	r0, [r8]
    66b0:	cmp	r0, #0
    66b4:	bne	66c8 <getAttributeId+0x7c>
    66b8:	mov	r0, r9
    66bc:	bl	6948 <poolGrow>
    66c0:	cmp	r0, #0
    66c4:	beq	6708 <getAttributeId+0xbc>
    66c8:	add	r6, sp, #8
    66cc:	ldr	r0, [sl, #88]	; 0x58
    66d0:	ldr	r4, [r5, #60]	; 0x3c
    66d4:	mov	r1, r6
    66d8:	mov	r2, r7
    66dc:	mov	r3, r8
    66e0:	str	r0, [sp]
    66e4:	mov	r0, r5
    66e8:	blx	r4
    66ec:	ldr	r0, [sp, #8]
    66f0:	cmp	r0, r7
    66f4:	beq	6718 <getAttributeId+0xcc>
    66f8:	mov	r0, r9
    66fc:	bl	6948 <poolGrow>
    6700:	cmp	r0, #0
    6704:	bne	66cc <getAttributeId+0x80>
    6708:	mov	r7, #0
    670c:	mov	r0, r7
    6710:	sub	sp, fp, #28
    6714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6718:	ldr	r0, [sl, #96]	; 0x60
    671c:	mov	r7, #0
    6720:	cmp	r0, #0
    6724:	beq	670c <getAttributeId+0xc0>
    6728:	ldr	r1, [sl, #88]	; 0x58
    672c:	ldr	r0, [sl, #92]	; 0x5c
    6730:	cmp	r0, r1
    6734:	bne	674c <getAttributeId+0x100>
    6738:	mov	r0, r9
    673c:	bl	6948 <poolGrow>
    6740:	cmp	r0, #0
    6744:	beq	670c <getAttributeId+0xc0>
    6748:	ldr	r0, [r8]
    674c:	add	r1, r0, #1
    6750:	mov	r7, #0
    6754:	str	r1, [sl, #92]	; 0x5c
    6758:	strb	r7, [r0]
    675c:	ldr	r6, [sl, #96]	; 0x60
    6760:	cmp	r6, #0
    6764:	beq	670c <getAttributeId+0xc0>
    6768:	ldr	r0, [sp, #4]
    676c:	add	r5, r6, #1
    6770:	add	r1, sl, #40	; 0x28
    6774:	mov	r3, #12
    6778:	mov	r2, r5
    677c:	bl	6054 <lookup>
    6780:	cmp	r0, #0
    6784:	beq	670c <getAttributeId+0xc0>
    6788:	mov	r4, r0
    678c:	ldr	r0, [r0]
    6790:	cmp	r0, r5
    6794:	beq	67a8 <getAttributeId+0x15c>
    6798:	ldr	r0, [sl, #96]	; 0x60
    679c:	str	r0, [sl, #92]	; 0x5c
    67a0:	mov	r7, r4
    67a4:	b	670c <getAttributeId+0xc0>
    67a8:	ldr	r0, [sl, #92]	; 0x5c
    67ac:	ldr	r1, [sp, #4]
    67b0:	str	r0, [sl, #96]	; 0x60
    67b4:	ldrb	r1, [r1, #244]	; 0xf4
    67b8:	cmp	r1, #0
    67bc:	beq	67a0 <getAttributeId+0x154>
    67c0:	ldrb	r1, [r5]
    67c4:	cmp	r1, #120	; 0x78
    67c8:	bne	6818 <getAttributeId+0x1cc>
    67cc:	ldrb	r2, [r6, #2]
    67d0:	cmp	r2, #109	; 0x6d
    67d4:	bne	6818 <getAttributeId+0x1cc>
    67d8:	ldrb	r2, [r6, #3]
    67dc:	cmp	r2, #108	; 0x6c
    67e0:	bne	6818 <getAttributeId+0x1cc>
    67e4:	ldrb	r2, [r6, #4]
    67e8:	cmp	r2, #110	; 0x6e
    67ec:	bne	6818 <getAttributeId+0x1cc>
    67f0:	ldrb	r2, [r6, #5]
    67f4:	cmp	r2, #115	; 0x73
    67f8:	bne	6818 <getAttributeId+0x1cc>
    67fc:	ldrb	r2, [r6, #6]
    6800:	cmp	r2, #58	; 0x3a
    6804:	beq	6924 <getAttributeId+0x2d8>
    6808:	cmp	r2, #0
    680c:	bne	6818 <getAttributeId+0x1cc>
    6810:	add	r0, sl, #152	; 0x98
    6814:	b	6938 <getAttributeId+0x2ec>
    6818:	add	r2, r6, #2
    681c:	mov	r6, #0
    6820:	uxtb	r1, r1
    6824:	cmp	r1, #0
    6828:	beq	67a0 <getAttributeId+0x154>
    682c:	cmp	r1, #58	; 0x3a
    6830:	beq	6840 <getAttributeId+0x1f4>
    6834:	ldrb	r1, [r2, r6]
    6838:	add	r6, r6, #1
    683c:	b	6820 <getAttributeId+0x1d4>
    6840:	ldr	r1, [sl, #88]	; 0x58
    6844:	cmp	r6, #0
    6848:	sub	r1, r1, r0
    684c:	clz	r1, r1
    6850:	lsr	r1, r1, #5
    6854:	beq	68b4 <getAttributeId+0x268>
    6858:	mov	r7, #0
    685c:	tst	r1, #1
    6860:	bne	689c <getAttributeId+0x250>
    6864:	ldrb	r1, [r5, r7]
    6868:	add	r2, r0, #1
    686c:	add	r7, r7, #1
    6870:	str	r2, [sl, #92]	; 0x5c
    6874:	cmp	r6, r7
    6878:	strb	r1, [r0]
    687c:	ldr	r1, [sl, #88]	; 0x58
    6880:	ldr	r0, [sl, #92]	; 0x5c
    6884:	sub	r1, r0, r1
    6888:	clz	r1, r1
    688c:	lsr	r1, r1, #5
    6890:	beq	68b4 <getAttributeId+0x268>
    6894:	tst	r1, #1
    6898:	beq	6864 <getAttributeId+0x218>
    689c:	mov	r0, r9
    68a0:	bl	6948 <poolGrow>
    68a4:	cmp	r0, #0
    68a8:	beq	6708 <getAttributeId+0xbc>
    68ac:	ldr	r0, [r8]
    68b0:	b	6864 <getAttributeId+0x218>
    68b4:	cmp	r1, #0
    68b8:	beq	68d0 <getAttributeId+0x284>
    68bc:	mov	r0, r9
    68c0:	bl	6948 <poolGrow>
    68c4:	cmp	r0, #0
    68c8:	beq	6708 <getAttributeId+0xbc>
    68cc:	ldr	r0, [r8]
    68d0:	add	r1, r0, #1
    68d4:	mov	r7, #0
    68d8:	mov	r3, #8
    68dc:	str	r1, [sl, #92]	; 0x5c
    68e0:	strb	r7, [r0]
    68e4:	ldr	r0, [sp, #4]
    68e8:	add	r1, sl, #60	; 0x3c
    68ec:	ldr	r2, [sl, #96]	; 0x60
    68f0:	bl	6054 <lookup>
    68f4:	cmp	r0, #0
    68f8:	str	r0, [r4, #4]
    68fc:	beq	670c <getAttributeId+0xc0>
    6900:	ldr	r1, [sl, #96]	; 0x60
    6904:	ldr	r0, [r0]
    6908:	cmp	r0, r1
    690c:	beq	6918 <getAttributeId+0x2cc>
    6910:	str	r1, [r8]
    6914:	b	67a0 <getAttributeId+0x154>
    6918:	ldr	r0, [sl, #92]	; 0x5c
    691c:	str	r0, [sl, #96]	; 0x60
    6920:	b	67a0 <getAttributeId+0x154>
    6924:	ldr	r0, [sp, #4]
    6928:	add	r1, sl, #60	; 0x3c
    692c:	add	r2, r6, #7
    6930:	mov	r3, #8
    6934:	bl	6054 <lookup>
    6938:	str	r0, [r4, #4]
    693c:	mov	r0, #1
    6940:	strb	r0, [r4, #9]
    6944:	b	67a0 <getAttributeId+0x154>

00006948 <poolGrow>:
    6948:	push	{r4, r5, r6, sl, fp, lr}
    694c:	add	fp, sp, #16
    6950:	ldr	r3, [r0, #4]
    6954:	mov	r4, r0
    6958:	cmp	r3, #0
    695c:	beq	69c4 <poolGrow+0x7c>
    6960:	ldr	r1, [r4, #16]
    6964:	cmp	r1, #0
    6968:	beq	6a3c <poolGrow+0xf4>
    696c:	ldr	r0, [r4, #8]
    6970:	sub	r2, r0, r1
    6974:	ldr	r0, [r3, #4]
    6978:	cmp	r2, r0
    697c:	bge	69c4 <poolGrow+0x7c>
    6980:	ldr	r5, [r4]
    6984:	mov	r0, r3
    6988:	ldr	r6, [r3]
    698c:	str	r5, [r0], #8
    6990:	stm	r4, {r3, r6}
    6994:	bl	0 <memcpy>
    6998:	ldr	r0, [r4]
    699c:	ldr	r1, [r4, #12]
    69a0:	ldr	r2, [r4, #16]
    69a4:	add	r3, r0, #8
    69a8:	sub	r1, r1, r2
    69ac:	add	r1, r3, r1
    69b0:	str	r3, [r4, #16]
    69b4:	str	r1, [r4, #12]
    69b8:	ldr	r0, [r0, #4]
    69bc:	add	r0, r3, r0
    69c0:	b	6a64 <poolGrow+0x11c>
    69c4:	ldr	r0, [r4]
    69c8:	cmp	r0, #0
    69cc:	beq	6a70 <poolGrow+0x128>
    69d0:	ldr	r1, [r4, #16]
    69d4:	add	r2, r0, #8
    69d8:	cmp	r1, r2
    69dc:	bne	6a74 <poolGrow+0x12c>
    69e0:	ldr	r2, [r4, #8]
    69e4:	ldr	r3, [r4, #20]
    69e8:	sub	r5, r2, r1
    69ec:	ldr	r2, [r3, #4]
    69f0:	mov	r1, #8
    69f4:	add	r1, r1, r5, lsl #1
    69f8:	blx	r2
    69fc:	cmp	r0, #0
    6a00:	beq	6afc <poolGrow+0x1b4>
    6a04:	lsl	r1, r5, #1
    6a08:	str	r0, [r4]
    6a0c:	str	r1, [r0, #4]
    6a10:	add	r0, r0, #8
    6a14:	add	r1, r0, r1
    6a18:	str	r1, [r4, #8]
    6a1c:	ldr	r1, [r4, #12]
    6a20:	ldr	r2, [r4, #16]
    6a24:	str	r0, [r4, #16]
    6a28:	sub	r1, r1, r2
    6a2c:	add	r0, r0, r1
    6a30:	str	r0, [r4, #12]
    6a34:	mov	r0, #1
    6a38:	pop	{r4, r5, r6, sl, fp, pc}
    6a3c:	str	r3, [r4]
    6a40:	ldr	r0, [r3]
    6a44:	str	r0, [r4, #4]
    6a48:	mov	r0, #0
    6a4c:	str	r0, [r3]
    6a50:	add	r0, r3, #8
    6a54:	str	r0, [r4, #16]
    6a58:	ldr	r1, [r3, #4]
    6a5c:	str	r0, [r4, #12]
    6a60:	add	r0, r0, r1
    6a64:	str	r0, [r4, #8]
    6a68:	mov	r0, #1
    6a6c:	pop	{r4, r5, r6, sl, fp, pc}
    6a70:	ldr	r1, [r4, #16]
    6a74:	ldr	r0, [r4, #8]
    6a78:	ldr	r2, [r4, #20]
    6a7c:	sub	r0, r0, r1
    6a80:	ldr	r1, [r2]
    6a84:	cmp	r0, #1024	; 0x400
    6a88:	lsl	r6, r0, #1
    6a8c:	movwlt	r6, #1024	; 0x400
    6a90:	add	r0, r6, #8
    6a94:	blx	r1
    6a98:	cmp	r0, #0
    6a9c:	beq	6afc <poolGrow+0x1b4>
    6aa0:	str	r6, [r0, #4]
    6aa4:	mov	r5, r0
    6aa8:	ldr	r0, [r4]
    6aac:	str	r0, [r5]
    6ab0:	str	r5, [r4]
    6ab4:	ldr	r0, [r4, #12]
    6ab8:	ldr	r1, [r4, #16]
    6abc:	cmp	r0, r1
    6ac0:	beq	6ad8 <poolGrow+0x190>
    6ac4:	sub	r2, r0, r1
    6ac8:	add	r0, r5, #8
    6acc:	bl	0 <memcpy>
    6ad0:	ldr	r0, [r4, #12]
    6ad4:	ldr	r1, [r4, #16]
    6ad8:	add	r2, r5, #8
    6adc:	sub	r0, r0, r1
    6ae0:	add	r1, r2, r6
    6ae4:	add	r0, r2, r0
    6ae8:	str	r1, [r4, #8]
    6aec:	str	r0, [r4, #12]
    6af0:	mov	r0, #1
    6af4:	str	r2, [r4, #16]
    6af8:	pop	{r4, r5, r6, sl, fp, pc}
    6afc:	mov	r0, #0
    6b00:	pop	{r4, r5, r6, sl, fp, pc}

00006b04 <storeEntityValue>:
    6b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6b08:	add	fp, sp, #28
    6b0c:	sub	sp, sp, #60	; 0x3c
    6b10:	ldr	r8, [r0, #364]	; 0x16c
    6b14:	mov	r4, r0
    6b18:	ldr	r7, [r0, #284]	; 0x11c
    6b1c:	mov	r0, #1
    6b20:	mov	r5, r2
    6b24:	mov	r9, r1
    6b28:	str	r3, [fp, #-40]	; 0xffffffd8
    6b2c:	str	r0, [r4, #284]	; 0x11c
    6b30:	mov	r6, r8
    6b34:	ldr	r0, [r6, #104]!	; 0x68
    6b38:	cmp	r0, #0
    6b3c:	bne	6b50 <storeEntityValue+0x4c>
    6b40:	mov	r0, r6
    6b44:	bl	6948 <poolGrow>
    6b48:	cmp	r0, #0
    6b4c:	beq	7078 <storeEntityValue+0x574>
    6b50:	add	r0, r4, #444	; 0x1bc
    6b54:	str	r4, [sp, #36]	; 0x24
    6b58:	str	r6, [sp, #32]
    6b5c:	str	r7, [sp, #40]	; 0x28
    6b60:	str	r0, [sp, #28]
    6b64:	add	r0, r4, #432	; 0x1b0
    6b68:	sub	r4, fp, #36	; 0x24
    6b6c:	str	r0, [sp, #24]
    6b70:	add	r0, r8, #116	; 0x74
    6b74:	str	r0, [sp, #44]	; 0x2c
    6b78:	ldr	r6, [r9, #20]
    6b7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    6b80:	mov	r0, r9
    6b84:	mov	r1, r5
    6b88:	mov	r3, r4
    6b8c:	blx	r6
    6b90:	add	r0, r0, #4
    6b94:	cmp	r0, #32
    6b98:	bhi	70b0 <storeEntityValue+0x5ac>
    6b9c:	add	r1, pc, #4
    6ba0:	mov	sl, #0
    6ba4:	ldr	pc, [r1, r0, lsl #2]
    6ba8:	.word	0x00007064
    6bac:	.word	0x00006c50
    6bb0:	.word	0x000070b0
    6bb4:	.word	0x000070bc
    6bb8:	.word	0x000070d4
    6bbc:	.word	0x000070b0
    6bc0:	.word	0x000070b0
    6bc4:	.word	0x000070b0
    6bc8:	.word	0x000070b0
    6bcc:	.word	0x000070b0
    6bd0:	.word	0x00006c2c
    6bd4:	.word	0x00006c5c
    6bd8:	.word	0x000070b0
    6bdc:	.word	0x00006c2c
    6be0:	.word	0x00006c9c
    6be4:	.word	0x000070b0
    6be8:	.word	0x000070b0
    6bec:	.word	0x000070b0
    6bf0:	.word	0x000070b0
    6bf4:	.word	0x000070b0
    6bf8:	.word	0x000070b0
    6bfc:	.word	0x000070b0
    6c00:	.word	0x000070b0
    6c04:	.word	0x000070b0
    6c08:	.word	0x000070b0
    6c0c:	.word	0x000070b0
    6c10:	.word	0x000070b0
    6c14:	.word	0x000070b0
    6c18:	.word	0x000070b0
    6c1c:	.word	0x000070b0
    6c20:	.word	0x000070b0
    6c24:	.word	0x000070b0
    6c28:	.word	0x00006d20
    6c2c:	ldr	r7, [sp, #44]	; 0x2c
    6c30:	str	r5, [fp, #-32]	; 0xffffffe0
    6c34:	ldr	r4, [fp, #-36]	; 0xffffffdc
    6c38:	ldr	sl, [sp, #32]
    6c3c:	sub	r5, fp, #32
    6c40:	ldr	r0, [r7]
    6c44:	cmp	r0, #0
    6c48:	bne	7014 <storeEntityValue+0x510>
    6c4c:	b	7004 <storeEntityValue+0x500>
    6c50:	ldr	r0, [r9, #68]	; 0x44
    6c54:	add	r0, r5, r0
    6c58:	str	r0, [fp, #-36]	; 0xffffffdc
    6c5c:	ldr	r1, [r8, #112]	; 0x70
    6c60:	ldr	r0, [r8, #116]	; 0x74
    6c64:	ldr	r5, [sp, #44]	; 0x2c
    6c68:	cmp	r1, r0
    6c6c:	bne	6c84 <storeEntityValue+0x180>
    6c70:	ldr	r0, [sp, #32]
    6c74:	bl	6948 <poolGrow>
    6c78:	cmp	r0, #0
    6c7c:	beq	70a8 <storeEntityValue+0x5a4>
    6c80:	ldr	r0, [r5]
    6c84:	add	r1, r0, #1
    6c88:	str	r1, [r5]
    6c8c:	mov	r1, #10
    6c90:	strb	r1, [r0]
    6c94:	ldr	r5, [fp, #-36]	; 0xffffffdc
    6c98:	b	6b78 <storeEntityValue+0x74>
    6c9c:	ldr	r2, [r9, #44]	; 0x2c
    6ca0:	mov	r0, r9
    6ca4:	mov	r1, r5
    6ca8:	blx	r2
    6cac:	cmn	r0, #1
    6cb0:	ble	709c <storeEntityValue+0x598>
    6cb4:	sub	r6, fp, #32
    6cb8:	mov	r1, r6
    6cbc:	bl	0 <coda_XmlUtf8Encode>
    6cc0:	cmp	r0, #0
    6cc4:	beq	709c <storeEntityValue+0x598>
    6cc8:	ldr	r7, [sp, #32]
    6ccc:	ldr	r5, [sp, #44]	; 0x2c
    6cd0:	mov	r4, r0
    6cd4:	cmp	r0, #1
    6cd8:	bge	6cfc <storeEntityValue+0x1f8>
    6cdc:	b	6db8 <storeEntityValue+0x2b4>
    6ce0:	ldr	r0, [r5]
    6ce4:	ldrb	r1, [r6], #1
    6ce8:	add	r2, r0, #1
    6cec:	subs	r4, r4, #1
    6cf0:	str	r2, [r5]
    6cf4:	strb	r1, [r0]
    6cf8:	beq	6db8 <storeEntityValue+0x2b4>
    6cfc:	ldr	r1, [r8, #112]	; 0x70
    6d00:	ldr	r0, [r8, #116]	; 0x74
    6d04:	cmp	r1, r0
    6d08:	bne	6ce4 <storeEntityValue+0x1e0>
    6d0c:	mov	r0, r7
    6d10:	bl	6948 <poolGrow>
    6d14:	cmp	r0, #0
    6d18:	bne	6ce0 <storeEntityValue+0x1dc>
    6d1c:	b	705c <storeEntityValue+0x558>
    6d20:	ldr	sl, [sp, #36]	; 0x24
    6d24:	ldrb	r0, [sl, #504]	; 0x1f8
    6d28:	cmp	r0, #0
    6d2c:	bne	6d3c <storeEntityValue+0x238>
    6d30:	ldr	r0, [sl, #152]	; 0x98
    6d34:	cmp	r0, r9
    6d38:	beq	7110 <storeEntityValue+0x60c>
    6d3c:	ldr	r4, [r9, #68]	; 0x44
    6d40:	str	r5, [sp, #12]
    6d44:	ldr	r6, [fp, #-36]	; 0xffffffdc
    6d48:	ldr	r7, [sp, #24]
    6d4c:	add	r0, r5, r4
    6d50:	ldr	r5, [sp, #28]
    6d54:	str	r0, [fp, #-32]	; 0xffffffe0
    6d58:	ldr	r0, [r5]
    6d5c:	cmp	r0, #0
    6d60:	bne	6d74 <storeEntityValue+0x270>
    6d64:	mov	r0, r7
    6d68:	bl	6948 <poolGrow>
    6d6c:	cmp	r0, #0
    6d70:	beq	705c <storeEntityValue+0x558>
    6d74:	sub	r4, r6, r4
    6d78:	ldr	r0, [sl, #440]	; 0x1b8
    6d7c:	ldr	r6, [r9, #60]	; 0x3c
    6d80:	sub	r1, fp, #32
    6d84:	mov	r2, r4
    6d88:	mov	r3, r5
    6d8c:	str	r0, [sp]
    6d90:	mov	r0, r9
    6d94:	blx	r6
    6d98:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6d9c:	cmp	r0, r4
    6da0:	beq	6dc4 <storeEntityValue+0x2c0>
    6da4:	mov	r0, r7
    6da8:	bl	6948 <poolGrow>
    6dac:	cmp	r0, #0
    6db0:	bne	6d78 <storeEntityValue+0x274>
    6db4:	b	705c <storeEntityValue+0x558>
    6db8:	ldr	r7, [sp, #40]	; 0x28
    6dbc:	sub	r4, fp, #36	; 0x24
    6dc0:	b	7054 <storeEntityValue+0x550>
    6dc4:	ldr	r0, [sl, #448]	; 0x1c0
    6dc8:	mov	r7, sl
    6dcc:	mov	sl, #1
    6dd0:	cmp	r0, #0
    6dd4:	beq	7060 <storeEntityValue+0x55c>
    6dd8:	ldr	r1, [r7, #440]	; 0x1b8
    6ddc:	ldr	r0, [r7, #444]	; 0x1bc
    6de0:	cmp	r0, r1
    6de4:	bne	6e04 <storeEntityValue+0x300>
    6de8:	ldr	r0, [sp, #24]
    6dec:	bl	6948 <poolGrow>
    6df0:	cmp	r0, #0
    6df4:	beq	7060 <storeEntityValue+0x55c>
    6df8:	ldr	r0, [sp, #28]
    6dfc:	ldr	r7, [sp, #36]	; 0x24
    6e00:	ldr	r0, [r0]
    6e04:	add	r1, r0, #1
    6e08:	str	r1, [r7, #444]	; 0x1bc
    6e0c:	mov	r1, #0
    6e10:	strb	r1, [r0]
    6e14:	ldr	r5, [r7, #448]	; 0x1c0
    6e18:	ldr	r7, [sp, #40]	; 0x28
    6e1c:	cmp	r5, #0
    6e20:	beq	7064 <storeEntityValue+0x560>
    6e24:	str	r5, [sp, #20]
    6e28:	ldr	r5, [r8, #140]	; 0x8c
    6e2c:	cmp	r5, #0
    6e30:	beq	7080 <storeEntityValue+0x57c>
    6e34:	ldr	r1, [sp, #20]
    6e38:	ldr	r0, [sp, #36]	; 0x24
    6e3c:	ldrb	r7, [r1]
    6e40:	ldr	r2, [r0, #512]	; 0x200
    6e44:	cmp	r7, #0
    6e48:	beq	6e74 <storeEntityValue+0x370>
    6e4c:	add	r0, r1, #1
    6e50:	movw	r1, #16963	; 0x4243
    6e54:	mov	r3, r7
    6e58:	movt	r1, #15
    6e5c:	mul	r2, r2, r1
    6e60:	uxtb	r3, r3
    6e64:	eor	r2, r2, r3
    6e68:	ldrb	r3, [r0], #1
    6e6c:	cmp	r3, #0
    6e70:	bne	6e5c <storeEntityValue+0x358>
    6e74:	ldr	r0, [r8, #132]	; 0x84
    6e78:	sub	r6, r5, #1
    6e7c:	and	r3, r2, r6
    6e80:	ldr	r4, [r0, r3, lsl #2]
    6e84:	cmp	r4, #0
    6e88:	beq	7080 <storeEntityValue+0x57c>
    6e8c:	rsb	r1, r5, #0
    6e90:	mov	lr, #0
    6e94:	and	r1, r2, r1
    6e98:	str	r1, [sp, #8]
    6e9c:	ldr	r1, [sp, #20]
    6ea0:	add	r1, r1, #1
    6ea4:	str	r1, [sp, #16]
    6ea8:	lsr	r1, r6, #2
    6eac:	str	r1, [sp, #4]
    6eb0:	b	6ed8 <storeEntityValue+0x3d4>
    6eb4:	tst	lr, #255	; 0xff
    6eb8:	beq	6f14 <storeEntityValue+0x410>
    6ebc:	uxtb	r1, lr
    6ec0:	mov	r7, ip
    6ec4:	subs	r3, r3, r1
    6ec8:	addcc	r3, r3, r5
    6ecc:	ldr	r4, [r0, r3, lsl #2]
    6ed0:	cmp	r4, #0
    6ed4:	beq	7080 <storeEntityValue+0x57c>
    6ed8:	ldr	r2, [r4]
    6edc:	mov	ip, r7
    6ee0:	ldrb	r1, [r2]
    6ee4:	cmp	r7, r1
    6ee8:	bne	6eb4 <storeEntityValue+0x3b0>
    6eec:	add	r6, r2, #1
    6ef0:	ldr	r2, [sp, #16]
    6ef4:	mov	sl, ip
    6ef8:	tst	sl, #255	; 0xff
    6efc:	beq	6f30 <storeEntityValue+0x42c>
    6f00:	ldrb	sl, [r2], #1
    6f04:	ldrb	r1, [r6], #1
    6f08:	cmp	sl, r1
    6f0c:	beq	6ef8 <storeEntityValue+0x3f4>
    6f10:	b	6eb4 <storeEntityValue+0x3b0>
    6f14:	ldrb	r1, [r8, #136]	; 0x88
    6f18:	ldr	r2, [sp, #8]
    6f1c:	ldr	r7, [sp, #4]
    6f20:	sub	r1, r1, #1
    6f24:	and	r1, r7, r2, lsr r1
    6f28:	orr	lr, r1, #1
    6f2c:	b	6ebc <storeEntityValue+0x3b8>
    6f30:	ldr	r0, [sp, #28]
    6f34:	ldr	r1, [sp, #20]
    6f38:	cmp	r4, #0
    6f3c:	str	r1, [r0]
    6f40:	ldr	r0, [sp, #36]	; 0x24
    6f44:	beq	708c <storeEntityValue+0x588>
    6f48:	ldrb	r1, [r4, #32]
    6f4c:	ldr	r7, [sp, #40]	; 0x28
    6f50:	cmp	r1, #0
    6f54:	bne	70f4 <storeEntityValue+0x5f0>
    6f58:	ldr	r3, [r4, #16]
    6f5c:	cmp	r3, #0
    6f60:	beq	6fc4 <storeEntityValue+0x4c0>
    6f64:	ldr	r6, [r0, #120]	; 0x78
    6f68:	cmp	r6, #0
    6f6c:	beq	6ff8 <storeEntityValue+0x4f4>
    6f70:	mov	r5, #0
    6f74:	mov	r1, #1
    6f78:	strb	r5, [r8, #131]	; 0x83
    6f7c:	strb	r1, [r4, #32]
    6f80:	ldr	r1, [r4, #24]
    6f84:	ldr	r0, [r0, #124]	; 0x7c
    6f88:	ldr	r2, [r4, #20]
    6f8c:	str	r1, [sp]
    6f90:	mov	r1, #0
    6f94:	blx	r6
    6f98:	cmp	r0, #0
    6f9c:	strb	r5, [r4, #32]
    6fa0:	beq	711c <storeEntityValue+0x618>
    6fa4:	ldrb	r0, [r8, #131]	; 0x83
    6fa8:	sub	r4, fp, #36	; 0x24
    6fac:	cmp	r0, #0
    6fb0:	bne	7054 <storeEntityValue+0x550>
    6fb4:	ldrb	r0, [r8, #130]	; 0x82
    6fb8:	strb	r0, [r8, #128]	; 0x80
    6fbc:	ldr	r5, [fp, #-36]	; 0xffffffdc
    6fc0:	b	6b78 <storeEntityValue+0x74>
    6fc4:	mov	r1, #1
    6fc8:	strb	r1, [r4, #32]
    6fcc:	ldmib	r4, {r2, r3}
    6fd0:	ldr	r1, [r0, #236]	; 0xec
    6fd4:	add	r3, r2, r3
    6fd8:	bl	6b04 <storeEntityValue>
    6fdc:	mov	sl, r0
    6fe0:	mov	r0, #0
    6fe4:	strb	r0, [r4, #32]
    6fe8:	cmp	sl, #0
    6fec:	sub	r4, fp, #36	; 0x24
    6ff0:	beq	7054 <storeEntityValue+0x550>
    6ff4:	b	7064 <storeEntityValue+0x560>
    6ff8:	ldrb	r0, [r8, #130]	; 0x82
    6ffc:	strb	r0, [r8, #128]	; 0x80
    7000:	b	6dbc <storeEntityValue+0x2b8>
    7004:	mov	r0, sl
    7008:	bl	6948 <poolGrow>
    700c:	cmp	r0, #0
    7010:	beq	705c <storeEntityValue+0x558>
    7014:	ldr	r0, [r8, #112]	; 0x70
    7018:	ldr	r6, [r9, #60]	; 0x3c
    701c:	mov	r1, r5
    7020:	mov	r2, r4
    7024:	mov	r3, r7
    7028:	str	r0, [sp]
    702c:	mov	r0, r9
    7030:	blx	r6
    7034:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7038:	cmp	r0, r4
    703c:	bne	7004 <storeEntityValue+0x500>
    7040:	ldr	r0, [r8, #120]	; 0x78
    7044:	ldr	r7, [sp, #40]	; 0x28
    7048:	sub	r4, fp, #36	; 0x24
    704c:	cmp	r0, #0
    7050:	beq	70a8 <storeEntityValue+0x5a4>
    7054:	ldr	r5, [fp, #-36]	; 0xffffffdc
    7058:	b	6b78 <storeEntityValue+0x74>
    705c:	mov	sl, #1
    7060:	ldr	r7, [sp, #40]	; 0x28
    7064:	ldr	r0, [sp, #36]	; 0x24
    7068:	str	r7, [r0, #284]	; 0x11c
    706c:	mov	r0, sl
    7070:	sub	sp, fp, #28
    7074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7078:	mov	sl, #1
    707c:	b	706c <storeEntityValue+0x568>
    7080:	ldr	r0, [sp, #28]
    7084:	ldr	r1, [sp, #20]
    7088:	str	r1, [r0]
    708c:	ldrb	r0, [r8, #130]	; 0x82
    7090:	mov	sl, #0
    7094:	strb	r0, [r8, #128]	; 0x80
    7098:	b	7060 <storeEntityValue+0x55c>
    709c:	ldr	r1, [sp, #36]	; 0x24
    70a0:	mov	sl, #14
    70a4:	b	70c4 <storeEntityValue+0x5c0>
    70a8:	mov	sl, #1
    70ac:	b	7064 <storeEntityValue+0x560>
    70b0:	ldr	r1, [sp, #36]	; 0x24
    70b4:	mov	sl, #23
    70b8:	b	70c4 <storeEntityValue+0x5c0>
    70bc:	ldr	r1, [sp, #36]	; 0x24
    70c0:	mov	sl, #4
    70c4:	ldr	r0, [r1, #152]	; 0x98
    70c8:	cmp	r0, r9
    70cc:	streq	r5, [r1, #296]	; 0x128
    70d0:	b	7064 <storeEntityValue+0x560>
    70d4:	ldr	r1, [sp, #36]	; 0x24
    70d8:	mov	sl, #4
    70dc:	ldr	r0, [r1, #152]	; 0x98
    70e0:	cmp	r0, r9
    70e4:	bne	7064 <storeEntityValue+0x560>
    70e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    70ec:	str	r0, [r1, #296]	; 0x128
    70f0:	b	7064 <storeEntityValue+0x560>
    70f4:	ldr	r1, [r0, #152]	; 0x98
    70f8:	mov	sl, #12
    70fc:	cmp	r1, r9
    7100:	bne	7064 <storeEntityValue+0x560>
    7104:	ldr	r1, [sp, #12]
    7108:	str	r1, [r0, #296]	; 0x128
    710c:	b	7064 <storeEntityValue+0x560>
    7110:	str	r5, [sl, #296]	; 0x128
    7114:	mov	sl, #10
    7118:	b	7060 <storeEntityValue+0x55c>
    711c:	mov	sl, #21
    7120:	b	7064 <storeEntityValue+0x560>

00007124 <doIgnoreSection>:
    7124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7128:	add	fp, sp, #28
    712c:	sub	sp, sp, #20
    7130:	mov	r9, r0
    7134:	ldr	r0, [r0, #152]	; 0x98
    7138:	ldr	r5, [r2]
    713c:	mov	ip, r3
    7140:	mov	r8, r2
    7144:	mov	r6, r1
    7148:	cmp	r0, r1
    714c:	beq	7158 <doIgnoreSection+0x34>
    7150:	ldr	r4, [r9, #308]	; 0x134
    7154:	b	7160 <doIgnoreSection+0x3c>
    7158:	mov	r4, r9
    715c:	str	r5, [r4, #296]!	; 0x128
    7160:	mov	r0, #0
    7164:	str	r5, [r4]
    7168:	add	r3, sp, #8
    716c:	mov	r1, r5
    7170:	mov	r2, ip
    7174:	add	sl, r4, #4
    7178:	str	r0, [r8]
    717c:	mov	r0, r6
    7180:	ldr	r7, [r6, #12]
    7184:	blx	r7
    7188:	ldr	r7, [sp, #8]
    718c:	add	r0, r0, #4
    7190:	cmp	r0, #46	; 0x2e
    7194:	str	r7, [sl]
    7198:	bhi	727c <doIgnoreSection+0x158>
    719c:	ldr	r1, [fp, #12]
    71a0:	ldr	r3, [fp, #8]
    71a4:	add	r2, pc, #0
    71a8:	ldr	pc, [r2, r0, lsl #2]
    71ac:	.word	0x00007268
    71b0:	.word	0x0000727c
    71b4:	.word	0x0000728c
    71b8:	.word	0x00007268
    71bc:	.word	0x000072a4
    71c0:	.word	0x0000727c
    71c4:	.word	0x0000727c
    71c8:	.word	0x0000727c
    71cc:	.word	0x0000727c
    71d0:	.word	0x0000727c
    71d4:	.word	0x0000727c
    71d8:	.word	0x0000727c
    71dc:	.word	0x0000727c
    71e0:	.word	0x0000727c
    71e4:	.word	0x0000727c
    71e8:	.word	0x0000727c
    71ec:	.word	0x0000727c
    71f0:	.word	0x0000727c
    71f4:	.word	0x0000727c
    71f8:	.word	0x0000727c
    71fc:	.word	0x0000727c
    7200:	.word	0x0000727c
    7204:	.word	0x0000727c
    7208:	.word	0x0000727c
    720c:	.word	0x0000727c
    7210:	.word	0x0000727c
    7214:	.word	0x0000727c
    7218:	.word	0x0000727c
    721c:	.word	0x0000727c
    7220:	.word	0x0000727c
    7224:	.word	0x0000727c
    7228:	.word	0x0000727c
    722c:	.word	0x0000727c
    7230:	.word	0x0000727c
    7234:	.word	0x0000727c
    7238:	.word	0x0000727c
    723c:	.word	0x0000727c
    7240:	.word	0x0000727c
    7244:	.word	0x0000727c
    7248:	.word	0x0000727c
    724c:	.word	0x0000727c
    7250:	.word	0x0000727c
    7254:	.word	0x0000727c
    7258:	.word	0x0000727c
    725c:	.word	0x0000727c
    7260:	.word	0x0000727c
    7264:	.word	0x000072b4
    7268:	cmp	r1, #0
    726c:	bne	7294 <doIgnoreSection+0x170>
    7270:	mov	r0, #2
    7274:	sub	sp, fp, #28
    7278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    727c:	str	r7, [r4]
    7280:	mov	r0, #23
    7284:	sub	sp, fp, #28
    7288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    728c:	cmp	r1, #0
    7290:	beq	72e4 <doIgnoreSection+0x1c0>
    7294:	str	r5, [r3]
    7298:	mov	r0, #0
    729c:	sub	sp, fp, #28
    72a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    72a4:	str	r7, [r4]
    72a8:	mov	r0, #4
    72ac:	sub	sp, fp, #28
    72b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    72b4:	ldr	r4, [r9, #88]	; 0x58
    72b8:	cmp	r4, #0
    72bc:	beq	7374 <doIgnoreSection+0x250>
    72c0:	str	r5, [sp, #16]
    72c4:	ldrb	r0, [r6, #72]	; 0x48
    72c8:	cmp	r0, #0
    72cc:	beq	72f0 <doIgnoreSection+0x1cc>
    72d0:	ldr	r0, [r9, #4]
    72d4:	sub	r2, r7, r5
    72d8:	mov	r1, r5
    72dc:	blx	r4
    72e0:	b	736c <doIgnoreSection+0x248>
    72e4:	mov	r0, #6
    72e8:	sub	sp, fp, #28
    72ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    72f0:	ldr	r0, [r9, #152]	; 0x98
    72f4:	cmp	r0, r6
    72f8:	beq	7308 <doIgnoreSection+0x1e4>
    72fc:	ldr	sl, [r9, #308]	; 0x134
    7300:	add	r4, sl, #4
    7304:	b	7310 <doIgnoreSection+0x1ec>
    7308:	add	r4, r9, #300	; 0x12c
    730c:	add	sl, r9, #296	; 0x128
    7310:	ldr	r0, [r9, #52]	; 0x34
    7314:	ldr	r1, [r9, #56]	; 0x38
    7318:	mov	r2, r7
    731c:	add	r3, sp, #12
    7320:	str	r0, [sp, #12]
    7324:	mov	r0, r6
    7328:	ldr	r5, [r6, #60]	; 0x3c
    732c:	str	r1, [sp]
    7330:	add	r1, sp, #16
    7334:	blx	r5
    7338:	ldr	r0, [sp, #16]
    733c:	str	r0, [r4]
    7340:	ldr	r1, [r9, #52]	; 0x34
    7344:	ldr	r2, [sp, #12]
    7348:	ldr	r0, [r9, #4]
    734c:	ldr	r3, [r9, #88]	; 0x58
    7350:	sub	r2, r2, r1
    7354:	blx	r3
    7358:	ldr	r0, [sp, #16]
    735c:	str	r0, [sl]
    7360:	ldr	r0, [sp, #16]
    7364:	cmp	r0, r7
    7368:	bne	7310 <doIgnoreSection+0x1ec>
    736c:	ldr	r7, [sp, #8]
    7370:	ldr	r3, [fp, #8]
    7374:	str	r7, [r8]
    7378:	str	r7, [r3]
    737c:	mov	r0, #0
    7380:	ldr	r1, [r9, #496]	; 0x1f0
    7384:	cmp	r1, #2
    7388:	movweq	r0, #35	; 0x23
    738c:	sub	sp, fp, #28
    7390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007394 <ignoreSectionProcessor>:
    7394:	push	{r4, r5, r6, r7, fp, lr}
    7398:	add	fp, sp, #16
    739c:	sub	sp, sp, #24
    73a0:	str	r1, [sp, #16]
    73a4:	mov	r6, r0
    73a8:	mov	r4, r2
    73ac:	mov	r5, r3
    73b0:	add	r2, sp, #16
    73b4:	ldr	r1, [r0, #152]	; 0x98
    73b8:	ldrb	r0, [r0, #500]	; 0x1f4
    73bc:	str	r3, [sp]
    73c0:	mov	r3, r4
    73c4:	clz	r0, r0
    73c8:	lsr	r0, r0, #5
    73cc:	str	r0, [sp, #4]
    73d0:	mov	r0, r6
    73d4:	bl	7124 <doIgnoreSection>
    73d8:	cmp	r0, #0
    73dc:	bne	7440 <ignoreSectionProcessor+0xac>
    73e0:	ldr	r7, [sp, #16]
    73e4:	cmp	r7, #0
    73e8:	beq	7440 <ignoreSectionProcessor+0xac>
    73ec:	movw	r0, #0
    73f0:	add	r3, sp, #20
    73f4:	mov	r1, r7
    73f8:	mov	r2, r4
    73fc:	movt	r0, #0
    7400:	str	r0, [r6, #288]	; 0x120
    7404:	str	r7, [sp, #20]
    7408:	ldr	r0, [r6, #152]	; 0x98
    740c:	ldr	ip, [r0]
    7410:	blx	ip
    7414:	ldrb	r2, [r6, #500]	; 0x1f4
    7418:	ldr	r1, [r6, #152]	; 0x98
    741c:	ldr	r3, [sp, #20]
    7420:	stm	sp, {r0, r3, r5}
    7424:	mov	r0, r6
    7428:	mov	r3, r4
    742c:	clz	r2, r2
    7430:	lsr	r2, r2, #5
    7434:	str	r2, [sp, #12]
    7438:	mov	r2, r7
    743c:	bl	2dc0 <doProlog>
    7440:	sub	sp, fp, #16
    7444:	pop	{r4, r5, r6, r7, fp, pc}

00007448 <nextScaffoldPart>:
    7448:	push	{r4, r5, fp, lr}
    744c:	add	fp, sp, #8
    7450:	ldr	r5, [r0, #364]	; 0x16c
    7454:	mov	r4, r0
    7458:	ldr	r0, [r5, #184]	; 0xb8
    745c:	cmp	r0, #0
    7460:	bne	7488 <nextScaffoldPart+0x40>
    7464:	ldr	r0, [r4, #484]	; 0x1e4
    7468:	ldr	r1, [r4, #12]
    746c:	lsl	r0, r0, #2
    7470:	blx	r1
    7474:	cmp	r0, #0
    7478:	str	r0, [r5, #184]	; 0xb8
    747c:	beq	7564 <nextScaffoldPart+0x11c>
    7480:	mov	r1, #0
    7484:	str	r1, [r0]
    7488:	ldr	r2, [r5, #172]	; 0xac
    748c:	ldr	r1, [r5, #176]	; 0xb0
    7490:	ldr	r0, [r5, #164]	; 0xa4
    7494:	cmp	r1, r2
    7498:	bcc	74ec <nextScaffoldPart+0xa4>
    749c:	cmp	r0, #0
    74a0:	beq	74c8 <nextScaffoldPart+0x80>
    74a4:	ldr	r3, [r4, #16]
    74a8:	rsb	r1, r2, r2, lsl #3
    74ac:	lsl	r1, r1, #3
    74b0:	blx	r3
    74b4:	cmp	r0, #0
    74b8:	beq	7564 <nextScaffoldPart+0x11c>
    74bc:	ldr	r1, [r5, #172]	; 0xac
    74c0:	lsl	r1, r1, #1
    74c4:	b	74e0 <nextScaffoldPart+0x98>
    74c8:	ldr	r1, [r4, #12]
    74cc:	mov	r0, #896	; 0x380
    74d0:	blx	r1
    74d4:	cmp	r0, #0
    74d8:	beq	7564 <nextScaffoldPart+0x11c>
    74dc:	mov	r1, #32
    74e0:	str	r0, [r5, #164]	; 0xa4
    74e4:	str	r1, [r5, #172]	; 0xac
    74e8:	ldr	r1, [r5, #176]	; 0xb0
    74ec:	add	r2, r1, #1
    74f0:	str	r2, [r5, #176]	; 0xb0
    74f4:	ldr	r2, [r5, #180]	; 0xb4
    74f8:	cmp	r2, #0
    74fc:	beq	7548 <nextScaffoldPart+0x100>
    7500:	ldr	r3, [r5, #184]	; 0xb8
    7504:	add	r2, r3, r2, lsl #2
    7508:	ldr	r2, [r2, #-4]
    750c:	rsb	r2, r2, r2, lsl #3
    7510:	add	r5, r0, r2, lsl #2
    7514:	mov	r2, r5
    7518:	ldr	r3, [r2, #16]!
    751c:	cmp	r3, #0
    7520:	rsbne	r3, r3, r3, lsl #3
    7524:	addne	r3, r0, r3, lsl #2
    7528:	strne	r1, [r3, #24]
    752c:	mov	r3, r5
    7530:	ldr	r4, [r3, #20]!
    7534:	cmp	r4, #0
    7538:	streq	r1, [r5, #12]
    753c:	str	r1, [r2]
    7540:	add	r2, r4, #1
    7544:	str	r2, [r3]
    7548:	rsb	r2, r1, r1, lsl #3
    754c:	vmov.i32	q8, #0	; 0x00000000
    7550:	add	r0, r0, r2, lsl #2
    7554:	add	r0, r0, #12
    7558:	vst1.32	{d16-d17}, [r0]
    755c:	mov	r0, r1
    7560:	pop	{r4, r5, fp, pc}
    7564:	mvn	r1, #0
    7568:	mov	r0, r1
    756c:	pop	{r4, r5, fp, pc}

00007570 <processInternalEntity>:
    7570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7574:	add	fp, sp, #28
    7578:	sub	sp, sp, #20
    757c:	ldr	r6, [r0, #312]	; 0x138
    7580:	mov	r7, r2
    7584:	mov	r5, r1
    7588:	mov	r4, r0
    758c:	cmp	r6, #0
    7590:	beq	75a0 <processInternalEntity+0x30>
    7594:	ldr	r0, [r6, #8]
    7598:	str	r0, [r4, #312]	; 0x138
    759c:	b	75b8 <processInternalEntity+0x48>
    75a0:	ldr	r1, [r4, #12]
    75a4:	mov	r0, #24
    75a8:	blx	r1
    75ac:	cmp	r0, #0
    75b0:	beq	76cc <processInternalEntity+0x15c>
    75b4:	mov	r6, r0
    75b8:	mov	sl, #0
    75bc:	mov	r0, #1
    75c0:	str	sl, [r5, #12]
    75c4:	strb	r0, [r5, #32]
    75c8:	ldr	r0, [r4, #308]	; 0x134
    75cc:	str	r0, [r6, #8]
    75d0:	str	r6, [r4, #308]	; 0x134
    75d4:	str	r5, [r6, #12]
    75d8:	ldr	r1, [r4, #320]	; 0x140
    75dc:	strb	r7, [r6, #20]
    75e0:	str	sl, [r6, #4]
    75e4:	str	sl, [r6]
    75e8:	str	r1, [r6, #16]
    75ec:	ldrb	r0, [r5, #33]	; 0x21
    75f0:	ldr	r7, [r5, #4]
    75f4:	ldr	r3, [r5, #8]
    75f8:	ldr	r2, [r4, #236]	; 0xec
    75fc:	add	r8, r7, r3
    7600:	cmp	r0, #0
    7604:	beq	7650 <processInternalEntity+0xe0>
    7608:	ldr	ip, [r2]
    760c:	add	r9, sp, #16
    7610:	mov	r0, r2
    7614:	mov	r1, r7
    7618:	mov	r2, r8
    761c:	mov	r3, r9
    7620:	blx	ip
    7624:	ldr	r1, [r4, #236]	; 0xec
    7628:	ldr	r2, [sp, #16]
    762c:	stm	sp, {r0, r2, r9, sl}
    7630:	mov	r0, r4
    7634:	mov	r2, r7
    7638:	mov	r3, r8
    763c:	bl	2dc0 <doProlog>
    7640:	cmp	r0, #0
    7644:	beq	7670 <processInternalEntity+0x100>
    7648:	sub	sp, fp, #28
    764c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7650:	add	r0, sp, #16
    7654:	str	r8, [sp]
    7658:	mov	r3, r7
    765c:	stmib	sp, {r0, sl}
    7660:	mov	r0, r4
    7664:	bl	7ce4 <doContent>
    7668:	cmp	r0, #0
    766c:	bne	7648 <processInternalEntity+0xd8>
    7670:	ldr	r0, [sp, #16]
    7674:	cmp	r8, r0
    7678:	beq	76a8 <processInternalEntity+0x138>
    767c:	ldr	r1, [r4, #496]	; 0x1f0
    7680:	cmp	r1, #3
    7684:	bne	76a8 <processInternalEntity+0x138>
    7688:	sub	r0, r0, r7
    768c:	str	r0, [r5, #12]
    7690:	movw	r0, #0
    7694:	movt	r0, #0
    7698:	str	r0, [r4, #288]	; 0x120
    769c:	mov	r0, #0
    76a0:	sub	sp, fp, #28
    76a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    76a8:	mov	r0, #0
    76ac:	strb	r0, [r5, #32]
    76b0:	ldr	r1, [r6, #8]
    76b4:	str	r1, [r4, #308]	; 0x134
    76b8:	ldr	r1, [r4, #312]	; 0x138
    76bc:	str	r1, [r6, #8]
    76c0:	str	r6, [r4, #312]	; 0x138
    76c4:	sub	sp, fp, #28
    76c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    76cc:	mov	r0, #1
    76d0:	sub	sp, fp, #28
    76d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000076d8 <reportProcessingInstruction>:
    76d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    76dc:	add	fp, sp, #28
    76e0:	sub	sp, sp, #20
    76e4:	mov	r4, r0
    76e8:	ldr	r0, [r0, #72]	; 0x48
    76ec:	mov	r5, r3
    76f0:	mov	r6, r1
    76f4:	cmp	r0, #0
    76f8:	beq	7790 <reportProcessingInstruction+0xb8>
    76fc:	ldr	r0, [r6, #68]	; 0x44
    7700:	ldr	r3, [r6, #32]
    7704:	str	r5, [sp, #8]
    7708:	add	r5, r2, r0, lsl #1
    770c:	mov	r0, r6
    7710:	mov	r1, r5
    7714:	blx	r3
    7718:	str	r5, [sp, #16]
    771c:	mov	sl, r4
    7720:	mov	r9, r0
    7724:	ldr	r0, [sl, #444]!	; 0x1bc
    7728:	sub	r8, sl, #12
    772c:	cmp	r0, #0
    7730:	bne	7744 <reportProcessingInstruction+0x6c>
    7734:	mov	r0, r8
    7738:	bl	6948 <poolGrow>
    773c:	cmp	r0, #0
    7740:	beq	7788 <reportProcessingInstruction+0xb0>
    7744:	add	r9, r5, r9
    7748:	add	r5, sp, #16
    774c:	ldr	r0, [r4, #440]	; 0x1b8
    7750:	ldr	r7, [r6, #60]	; 0x3c
    7754:	mov	r1, r5
    7758:	mov	r2, r9
    775c:	mov	r3, sl
    7760:	str	r0, [sp]
    7764:	mov	r0, r6
    7768:	blx	r7
    776c:	ldr	r0, [sp, #16]
    7770:	cmp	r0, r9
    7774:	beq	77c8 <reportProcessingInstruction+0xf0>
    7778:	mov	r0, r8
    777c:	bl	6948 <poolGrow>
    7780:	cmp	r0, #0
    7784:	bne	774c <reportProcessingInstruction+0x74>
    7788:	mov	r7, #0
    778c:	b	7998 <reportProcessingInstruction+0x2c0>
    7790:	ldr	r3, [r4, #88]	; 0x58
    7794:	mov	r7, #1
    7798:	cmp	r3, #0
    779c:	beq	7998 <reportProcessingInstruction+0x2c0>
    77a0:	str	r2, [sp, #16]
    77a4:	ldrb	r0, [r6, #72]	; 0x48
    77a8:	cmp	r0, #0
    77ac:	beq	78a4 <reportProcessingInstruction+0x1cc>
    77b0:	ldr	r0, [r4, #4]
    77b4:	sub	r7, r5, r2
    77b8:	mov	r1, r2
    77bc:	mov	r2, r7
    77c0:	blx	r3
    77c4:	b	7994 <reportProcessingInstruction+0x2bc>
    77c8:	ldr	r0, [r4, #448]	; 0x1c0
    77cc:	mov	r7, #0
    77d0:	cmp	r0, #0
    77d4:	beq	7998 <reportProcessingInstruction+0x2c0>
    77d8:	ldr	r1, [r4, #440]	; 0x1b8
    77dc:	ldr	r0, [r4, #444]	; 0x1bc
    77e0:	cmp	r0, r1
    77e4:	bne	77fc <reportProcessingInstruction+0x124>
    77e8:	mov	r0, r8
    77ec:	bl	6948 <poolGrow>
    77f0:	cmp	r0, #0
    77f4:	beq	7998 <reportProcessingInstruction+0x2c0>
    77f8:	ldr	r0, [sl]
    77fc:	add	r1, r0, #1
    7800:	mov	r7, #0
    7804:	str	r1, [r4, #444]	; 0x1bc
    7808:	strb	r7, [r0]
    780c:	ldr	r0, [r4, #448]	; 0x1c0
    7810:	cmp	r0, #0
    7814:	beq	7998 <reportProcessingInstruction+0x2c0>
    7818:	str	r0, [sp, #4]
    781c:	ldr	r0, [r4, #444]	; 0x1bc
    7820:	mov	r1, r9
    7824:	str	r0, [r4, #448]	; 0x1c0
    7828:	mov	r0, r6
    782c:	ldr	r2, [r6, #36]	; 0x24
    7830:	blx	r2
    7834:	ldr	r5, [r6, #68]	; 0x44
    7838:	str	r0, [sp, #16]
    783c:	ldr	r0, [r4, #444]	; 0x1bc
    7840:	cmp	r0, #0
    7844:	bne	7858 <reportProcessingInstruction+0x180>
    7848:	mov	r0, r8
    784c:	bl	6948 <poolGrow>
    7850:	cmp	r0, #0
    7854:	beq	7788 <reportProcessingInstruction+0xb0>
    7858:	ldr	r0, [sp, #8]
    785c:	add	r9, sp, #16
    7860:	sub	r5, r0, r5, lsl #1
    7864:	ldr	r0, [r4, #440]	; 0x1b8
    7868:	ldr	r7, [r6, #60]	; 0x3c
    786c:	mov	r1, r9
    7870:	mov	r2, r5
    7874:	mov	r3, sl
    7878:	str	r0, [sp]
    787c:	mov	r0, r6
    7880:	blx	r7
    7884:	ldr	r0, [sp, #16]
    7888:	cmp	r0, r5
    788c:	beq	78bc <reportProcessingInstruction+0x1e4>
    7890:	mov	r0, r8
    7894:	bl	6948 <poolGrow>
    7898:	cmp	r0, #0
    789c:	bne	7864 <reportProcessingInstruction+0x18c>
    78a0:	b	7788 <reportProcessingInstruction+0xb0>
    78a4:	ldr	r0, [r4, #152]	; 0x98
    78a8:	cmp	r0, r6
    78ac:	beq	792c <reportProcessingInstruction+0x254>
    78b0:	ldr	sl, [r4, #308]	; 0x134
    78b4:	add	r8, sl, #4
    78b8:	b	7934 <reportProcessingInstruction+0x25c>
    78bc:	ldr	r0, [r4, #448]	; 0x1c0
    78c0:	cmp	r0, #0
    78c4:	beq	7788 <reportProcessingInstruction+0xb0>
    78c8:	ldr	r1, [r4, #440]	; 0x1b8
    78cc:	ldr	r0, [r4, #444]	; 0x1bc
    78d0:	cmp	r0, r1
    78d4:	bne	78f0 <reportProcessingInstruction+0x218>
    78d8:	mov	r0, r8
    78dc:	bl	6948 <poolGrow>
    78e0:	cmp	r0, #0
    78e4:	mov	r7, #0
    78e8:	beq	7998 <reportProcessingInstruction+0x2c0>
    78ec:	ldr	r0, [sl]
    78f0:	add	r1, r0, #1
    78f4:	mov	r7, #0
    78f8:	str	r1, [r4, #444]	; 0x1bc
    78fc:	strb	r7, [r0]
    7900:	ldr	r2, [r4, #448]	; 0x1c0
    7904:	cmp	r2, #0
    7908:	beq	7998 <reportProcessingInstruction+0x2c0>
    790c:	mov	r0, r2
    7910:	ldrb	r7, [r0]
    7914:	cmp	r7, #0
    7918:	beq	79f0 <reportProcessingInstruction+0x318>
    791c:	cmp	r7, #13
    7920:	beq	79a4 <reportProcessingInstruction+0x2cc>
    7924:	add	r0, r0, #1
    7928:	b	7910 <reportProcessingInstruction+0x238>
    792c:	add	r8, r4, #300	; 0x12c
    7930:	add	sl, r4, #296	; 0x128
    7934:	add	r9, sp, #12
    7938:	ldr	r0, [r4, #52]	; 0x34
    793c:	ldr	r1, [r4, #56]	; 0x38
    7940:	mov	r2, r5
    7944:	mov	r3, r9
    7948:	str	r0, [sp, #12]
    794c:	mov	r0, r6
    7950:	ldr	r7, [r6, #60]	; 0x3c
    7954:	str	r1, [sp]
    7958:	add	r1, sp, #16
    795c:	blx	r7
    7960:	ldr	r0, [sp, #16]
    7964:	str	r0, [r8]
    7968:	ldr	r1, [r4, #52]	; 0x34
    796c:	ldr	r2, [sp, #12]
    7970:	ldr	r0, [r4, #4]
    7974:	ldr	r3, [r4, #88]	; 0x58
    7978:	sub	r2, r2, r1
    797c:	blx	r3
    7980:	ldr	r0, [sp, #16]
    7984:	str	r0, [sl]
    7988:	ldr	r0, [sp, #16]
    798c:	cmp	r0, r5
    7990:	bne	7938 <reportProcessingInstruction+0x260>
    7994:	mov	r7, #1
    7998:	mov	r0, r7
    799c:	sub	sp, fp, #28
    79a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    79a4:	mov	r1, #10
    79a8:	mov	r3, r0
    79ac:	b	79c8 <reportProcessingInstruction+0x2f0>
    79b0:	add	r0, r0, #1
    79b4:	strb	r7, [r3]
    79b8:	ldrb	r7, [r0]
    79bc:	add	r3, r3, #1
    79c0:	cmp	r7, #0
    79c4:	beq	79e8 <reportProcessingInstruction+0x310>
    79c8:	uxtb	r6, r7
    79cc:	cmp	r6, #13
    79d0:	bne	79b0 <reportProcessingInstruction+0x2d8>
    79d4:	strb	r1, [r3]
    79d8:	ldrb	r7, [r0, #1]!
    79dc:	cmp	r7, #10
    79e0:	addeq	r0, r0, #1
    79e4:	b	79b8 <reportProcessingInstruction+0x2e0>
    79e8:	mov	r0, #0
    79ec:	strb	r0, [r3]
    79f0:	ldr	r0, [r4, #4]
    79f4:	ldr	r3, [r4, #72]	; 0x48
    79f8:	ldr	r1, [sp, #4]
    79fc:	blx	r3
    7a00:	ldr	r0, [r4, #436]	; 0x1b4
    7a04:	cmp	r0, #0
    7a08:	beq	7a38 <reportProcessingInstruction+0x360>
    7a0c:	ldr	r1, [r8]
    7a10:	cmp	r1, #0
    7a14:	beq	7a40 <reportProcessingInstruction+0x368>
    7a18:	mov	r2, r1
    7a1c:	ldr	r1, [r1]
    7a20:	str	r0, [r2]
    7a24:	mov	r0, r2
    7a28:	cmp	r1, #0
    7a2c:	bne	7a18 <reportProcessingInstruction+0x340>
    7a30:	str	r2, [r4, #436]	; 0x1b4
    7a34:	b	7a40 <reportProcessingInstruction+0x368>
    7a38:	ldr	r0, [r4, #432]	; 0x1b0
    7a3c:	str	r0, [r4, #436]	; 0x1b4
    7a40:	mov	r0, #0
    7a44:	str	r0, [r4, #432]	; 0x1b0
    7a48:	str	r0, [r4, #440]	; 0x1b8
    7a4c:	str	r0, [r4, #444]	; 0x1bc
    7a50:	str	r0, [r4, #448]	; 0x1c0
    7a54:	b	7994 <reportProcessingInstruction+0x2bc>

00007a58 <reportComment>:
    7a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7a5c:	add	fp, sp, #28
    7a60:	sub	sp, sp, #20
    7a64:	mov	sl, r0
    7a68:	ldr	r0, [r0, #76]	; 0x4c
    7a6c:	mov	r7, r3
    7a70:	mov	r6, r1
    7a74:	cmp	r0, #0
    7a78:	beq	7afc <reportComment+0xa4>
    7a7c:	ldr	r8, [r6, #68]	; 0x44
    7a80:	mov	r4, sl
    7a84:	add	r0, r2, r8, lsl #2
    7a88:	str	r0, [sp, #16]
    7a8c:	ldr	r0, [r4, #444]!	; 0x1bc
    7a90:	sub	r9, r4, #12
    7a94:	cmp	r0, #0
    7a98:	bne	7aac <reportComment+0x54>
    7a9c:	mov	r0, r9
    7aa0:	bl	6948 <poolGrow>
    7aa4:	cmp	r0, #0
    7aa8:	beq	7af4 <reportComment+0x9c>
    7aac:	sub	r0, r8, r8, lsl #2
    7ab0:	add	r8, sp, #16
    7ab4:	add	r7, r7, r0
    7ab8:	ldr	r0, [sl, #440]	; 0x1b8
    7abc:	ldr	r5, [r6, #60]	; 0x3c
    7ac0:	mov	r1, r8
    7ac4:	mov	r2, r7
    7ac8:	mov	r3, r4
    7acc:	str	r0, [sp]
    7ad0:	mov	r0, r6
    7ad4:	blx	r5
    7ad8:	ldr	r0, [sp, #16]
    7adc:	cmp	r0, r7
    7ae0:	beq	7b34 <reportComment+0xdc>
    7ae4:	mov	r0, r9
    7ae8:	bl	6948 <poolGrow>
    7aec:	cmp	r0, #0
    7af0:	bne	7ab8 <reportComment+0x60>
    7af4:	mov	r5, #0
    7af8:	b	7cd8 <reportComment+0x280>
    7afc:	ldr	r4, [sl, #88]	; 0x58
    7b00:	mov	r5, #1
    7b04:	cmp	r4, #0
    7b08:	beq	7cd8 <reportComment+0x280>
    7b0c:	str	r2, [sp, #12]
    7b10:	ldrb	r0, [r6, #72]	; 0x48
    7b14:	cmp	r0, #0
    7b18:	beq	7ba4 <reportComment+0x14c>
    7b1c:	ldr	r0, [sl, #4]
    7b20:	sub	r3, r7, r2
    7b24:	mov	r1, r2
    7b28:	mov	r2, r3
    7b2c:	blx	r4
    7b30:	b	7cd4 <reportComment+0x27c>
    7b34:	ldr	r0, [sl, #448]	; 0x1c0
    7b38:	mov	r5, #0
    7b3c:	cmp	r0, #0
    7b40:	beq	7cd8 <reportComment+0x280>
    7b44:	ldr	r1, [sl, #440]	; 0x1b8
    7b48:	ldr	r0, [sl, #444]	; 0x1bc
    7b4c:	cmp	r0, r1
    7b50:	bne	7b68 <reportComment+0x110>
    7b54:	mov	r0, r9
    7b58:	bl	6948 <poolGrow>
    7b5c:	cmp	r0, #0
    7b60:	beq	7cd8 <reportComment+0x280>
    7b64:	ldr	r0, [r4]
    7b68:	add	r1, r0, #1
    7b6c:	mov	r5, #0
    7b70:	str	r1, [sl, #444]	; 0x1bc
    7b74:	strb	r5, [r0]
    7b78:	ldr	r1, [sl, #448]	; 0x1c0
    7b7c:	cmp	r1, #0
    7b80:	beq	7cd8 <reportComment+0x280>
    7b84:	mov	r0, r1
    7b88:	ldrb	r7, [r0]
    7b8c:	cmp	r7, #0
    7b90:	beq	7c08 <reportComment+0x1b0>
    7b94:	cmp	r7, #13
    7b98:	beq	7bbc <reportComment+0x164>
    7b9c:	add	r0, r0, #1
    7ba0:	b	7b88 <reportComment+0x130>
    7ba4:	ldr	r0, [sl, #152]	; 0x98
    7ba8:	cmp	r0, r6
    7bac:	beq	7c4c <reportComment+0x1f4>
    7bb0:	ldr	r9, [sl, #308]	; 0x134
    7bb4:	add	r8, r9, #4
    7bb8:	b	7c54 <reportComment+0x1fc>
    7bbc:	mov	r2, #10
    7bc0:	mov	r3, r0
    7bc4:	b	7be0 <reportComment+0x188>
    7bc8:	add	r0, r0, #1
    7bcc:	strb	r7, [r3]
    7bd0:	ldrb	r7, [r0]
    7bd4:	add	r3, r3, #1
    7bd8:	cmp	r7, #0
    7bdc:	beq	7c00 <reportComment+0x1a8>
    7be0:	uxtb	r6, r7
    7be4:	cmp	r6, #13
    7be8:	bne	7bc8 <reportComment+0x170>
    7bec:	strb	r2, [r3]
    7bf0:	ldrb	r7, [r0, #1]!
    7bf4:	cmp	r7, #10
    7bf8:	addeq	r0, r0, #1
    7bfc:	b	7bd0 <reportComment+0x178>
    7c00:	mov	r0, #0
    7c04:	strb	r0, [r3]
    7c08:	ldr	r0, [sl, #4]
    7c0c:	ldr	r2, [sl, #76]	; 0x4c
    7c10:	blx	r2
    7c14:	ldr	r0, [sl, #436]	; 0x1b4
    7c18:	cmp	r0, #0
    7c1c:	beq	7cb8 <reportComment+0x260>
    7c20:	ldr	r1, [r9]
    7c24:	cmp	r1, #0
    7c28:	beq	7cc0 <reportComment+0x268>
    7c2c:	mov	r2, r1
    7c30:	ldr	r1, [r1]
    7c34:	str	r0, [r2]
    7c38:	mov	r0, r2
    7c3c:	cmp	r1, #0
    7c40:	bne	7c2c <reportComment+0x1d4>
    7c44:	str	r2, [sl, #436]	; 0x1b4
    7c48:	b	7cc0 <reportComment+0x268>
    7c4c:	add	r8, sl, #300	; 0x12c
    7c50:	add	r9, sl, #296	; 0x128
    7c54:	add	r5, sp, #8
    7c58:	ldr	r0, [sl, #52]	; 0x34
    7c5c:	ldr	r1, [sl, #56]	; 0x38
    7c60:	mov	r2, r7
    7c64:	mov	r3, r5
    7c68:	str	r0, [sp, #8]
    7c6c:	mov	r0, r6
    7c70:	ldr	r4, [r6, #60]	; 0x3c
    7c74:	str	r1, [sp]
    7c78:	add	r1, sp, #12
    7c7c:	blx	r4
    7c80:	ldr	r0, [sp, #12]
    7c84:	str	r0, [r8]
    7c88:	ldr	r1, [sl, #52]	; 0x34
    7c8c:	ldr	r2, [sp, #8]
    7c90:	ldr	r0, [sl, #4]
    7c94:	ldr	r3, [sl, #88]	; 0x58
    7c98:	sub	r2, r2, r1
    7c9c:	blx	r3
    7ca0:	ldr	r0, [sp, #12]
    7ca4:	str	r0, [r9]
    7ca8:	ldr	r0, [sp, #12]
    7cac:	cmp	r0, r7
    7cb0:	bne	7c58 <reportComment+0x200>
    7cb4:	b	7cd4 <reportComment+0x27c>
    7cb8:	ldr	r0, [sl, #432]	; 0x1b0
    7cbc:	str	r0, [sl, #436]	; 0x1b4
    7cc0:	mov	r0, #0
    7cc4:	str	r0, [sl, #432]	; 0x1b0
    7cc8:	str	r0, [sl, #440]	; 0x1b8
    7ccc:	str	r0, [sl, #444]	; 0x1bc
    7cd0:	str	r0, [sl, #448]	; 0x1c0
    7cd4:	mov	r5, #1
    7cd8:	mov	r0, r5
    7cdc:	sub	sp, fp, #28
    7ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007ce4 <doContent>:
    7ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7ce8:	add	fp, sp, #28
    7cec:	sub	sp, sp, #124	; 0x7c
    7cf0:	str	r3, [fp, #-40]	; 0xffffffd8
    7cf4:	mov	r9, r0
    7cf8:	mov	r5, r2
    7cfc:	ldr	r0, [r0, #152]	; 0x98
    7d00:	ldr	r2, [r9, #364]	; 0x16c
    7d04:	cmp	r0, r5
    7d08:	str	r2, [sp, #48]	; 0x30
    7d0c:	beq	7d1c <doContent+0x38>
    7d10:	ldr	r4, [r9, #308]	; 0x134
    7d14:	add	r0, r4, #4
    7d18:	b	7d24 <doContent+0x40>
    7d1c:	add	r0, r9, #300	; 0x12c
    7d20:	add	r4, r9, #296	; 0x128
    7d24:	str	r0, [sp, #64]	; 0x40
    7d28:	ldr	r0, [sp, #48]	; 0x30
    7d2c:	str	r1, [sp, #44]	; 0x2c
    7d30:	ldr	r8, [fp, #8]
    7d34:	sub	sl, fp, #32
    7d38:	str	r3, [r4]
    7d3c:	str	r4, [sp, #60]	; 0x3c
    7d40:	str	r5, [sp, #68]	; 0x44
    7d44:	add	r1, r0, #92	; 0x5c
    7d48:	add	r0, r0, #80	; 0x50
    7d4c:	str	r0, [sp, #52]	; 0x34
    7d50:	add	r0, r9, #444	; 0x1bc
    7d54:	str	r1, [sp, #32]
    7d58:	str	r0, [sp, #76]	; 0x4c
    7d5c:	add	r0, r9, #432	; 0x1b0
    7d60:	str	r0, [sp, #72]	; 0x48
    7d64:	add	r0, r9, #300	; 0x12c
    7d68:	str	r0, [sp, #36]	; 0x24
    7d6c:	add	r0, r9, #296	; 0x128
    7d70:	str	r0, [sp, #40]	; 0x28
    7d74:	add	r0, r9, #4
    7d78:	str	r0, [sp, #56]	; 0x38
    7d7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7d80:	mov	r0, r5
    7d84:	mov	r2, r8
    7d88:	sub	r3, fp, #44	; 0x2c
    7d8c:	str	r1, [fp, #-44]	; 0xffffffd4
    7d90:	ldr	r7, [r5, #4]
    7d94:	blx	r7
    7d98:	ldr	r7, [fp, #-44]	; 0xffffffd4
    7d9c:	ldr	r1, [sp, #64]	; 0x40
    7da0:	add	r0, r0, #5
    7da4:	cmp	r0, #18
    7da8:	str	r7, [r1]
    7dac:	bhi	7f68 <doContent+0x284>
    7db0:	add	r1, pc, #4
    7db4:	mov	r6, #17
    7db8:	ldr	pc, [r1, r0, lsl #2]
    7dbc:	.word	0x00009554
    7dc0:	.word	0x00009590
    7dc4:	.word	0x000095bc
    7dc8:	.word	0x00009618
    7dcc:	.word	0x0000962c
    7dd0:	.word	0x00009654
    7dd4:	.word	0x00007e08
    7dd8:	.word	0x00007e08
    7ddc:	.word	0x00007e28
    7de0:	.word	0x00007e28
    7de4:	.word	0x00008000
    7de8:	.word	0x000080f4
    7dec:	.word	0x0000818c
    7df0:	.word	0x000081b0
    7df4:	.word	0x000081cc
    7df8:	.word	0x00008218
    7dfc:	.word	0x00008268
    7e00:	.word	0x00009648
    7e04:	.word	0x00008288
    7e08:	ldr	r7, [r9, #376]	; 0x178
    7e0c:	cmp	r7, #0
    7e10:	beq	82a8 <doContent+0x5c4>
    7e14:	ldr	r0, [r7]
    7e18:	sub	r8, fp, #72	; 0x48
    7e1c:	sub	r5, fp, #36	; 0x24
    7e20:	str	r0, [r9, #376]	; 0x178
    7e24:	b	82ec <doContent+0x608>
    7e28:	ldr	r0, [r5, #68]	; 0x44
    7e2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7e30:	mov	r2, #0
    7e34:	str	r2, [fp, #-48]	; 0xffffffd0
    7e38:	ldr	r2, [r5, #32]
    7e3c:	add	r6, r1, r0
    7e40:	mov	r0, r5
    7e44:	mov	r1, r6
    7e48:	blx	r2
    7e4c:	mov	r7, r0
    7e50:	ldr	r0, [sp, #76]	; 0x4c
    7e54:	str	r6, [fp, #-32]	; 0xffffffe0
    7e58:	ldr	r0, [r0]
    7e5c:	cmp	r0, #0
    7e60:	bne	7e74 <doContent+0x190>
    7e64:	ldr	r0, [sp, #72]	; 0x48
    7e68:	bl	6948 <poolGrow>
    7e6c:	cmp	r0, #0
    7e70:	beq	9524 <doContent+0x1840>
    7e74:	add	r6, r6, r7
    7e78:	ldr	r0, [r9, #440]	; 0x1b8
    7e7c:	ldr	r7, [r5, #60]	; 0x3c
    7e80:	ldr	r3, [sp, #76]	; 0x4c
    7e84:	mov	r1, sl
    7e88:	mov	r2, r6
    7e8c:	str	r0, [sp]
    7e90:	mov	r0, r5
    7e94:	blx	r7
    7e98:	ldr	r0, [fp, #-32]	; 0xffffffe0
    7e9c:	cmp	r0, r6
    7ea0:	beq	7eb8 <doContent+0x1d4>
    7ea4:	ldr	r0, [sp, #72]	; 0x48
    7ea8:	bl	6948 <poolGrow>
    7eac:	cmp	r0, #0
    7eb0:	bne	7e78 <doContent+0x194>
    7eb4:	b	9524 <doContent+0x1840>
    7eb8:	ldr	r0, [r9, #448]	; 0x1c0
    7ebc:	ldr	r7, [sp, #56]	; 0x38
    7ec0:	cmp	r0, #0
    7ec4:	beq	9524 <doContent+0x1840>
    7ec8:	ldr	r1, [r9, #440]	; 0x1b8
    7ecc:	ldr	r0, [r9, #444]	; 0x1bc
    7ed0:	cmp	r0, r1
    7ed4:	bne	7ef0 <doContent+0x20c>
    7ed8:	ldr	r0, [sp, #72]	; 0x48
    7edc:	bl	6948 <poolGrow>
    7ee0:	cmp	r0, #0
    7ee4:	beq	9524 <doContent+0x1840>
    7ee8:	ldr	r0, [sp, #76]	; 0x4c
    7eec:	ldr	r0, [r0]
    7ef0:	add	r1, r0, #1
    7ef4:	str	r1, [r9, #444]	; 0x1bc
    7ef8:	mov	r1, #0
    7efc:	strb	r1, [r0]
    7f00:	ldr	r0, [r9, #448]	; 0x1c0
    7f04:	cmp	r0, #0
    7f08:	str	r0, [fp, #-72]	; 0xffffffb8
    7f0c:	beq	9534 <doContent+0x1850>
    7f10:	ldr	r0, [r9, #444]	; 0x1bc
    7f14:	mov	r1, r5
    7f18:	sub	r3, fp, #72	; 0x48
    7f1c:	str	r0, [r9, #448]	; 0x1c0
    7f20:	sub	r0, fp, #48	; 0x30
    7f24:	ldr	r2, [fp, #-40]	; 0xffffffd8
    7f28:	str	r0, [sp]
    7f2c:	mov	r0, r9
    7f30:	bl	98e8 <storeAtts>
    7f34:	cmp	r0, #0
    7f38:	bne	954c <doContent+0x1868>
    7f3c:	ldr	r3, [r9, #60]	; 0x3c
    7f40:	ldr	r0, [r9, #444]	; 0x1bc
    7f44:	cmp	r3, #0
    7f48:	str	r0, [r9, #448]	; 0x1c0
    7f4c:	beq	86d0 <doContent+0x9ec>
    7f50:	ldr	r0, [r9, #4]
    7f54:	ldr	r2, [r9, #400]	; 0x190
    7f58:	ldr	r1, [fp, #-72]	; 0xffffffb8
    7f5c:	blx	r3
    7f60:	mov	r0, #0
    7f64:	b	86d4 <doContent+0x9f0>
    7f68:	ldr	r3, [r9, #88]	; 0x58
    7f6c:	cmp	r3, #0
    7f70:	beq	8ca4 <doContent+0xfc0>
    7f74:	ldr	r1, [fp, #-40]	; 0xffffffd8
    7f78:	str	r1, [fp, #-72]	; 0xffffffb8
    7f7c:	ldrb	r0, [r5, #72]	; 0x48
    7f80:	cmp	r0, #0
    7f84:	bne	8544 <doContent+0x860>
    7f88:	ldr	r0, [r9, #152]	; 0x98
    7f8c:	ldr	r8, [sp, #40]	; 0x28
    7f90:	ldr	r6, [sp, #36]	; 0x24
    7f94:	cmp	r0, r5
    7f98:	ldrne	r8, [r9, #308]	; 0x134
    7f9c:	addne	r6, r8, #4
    7fa0:	ldr	r0, [r9, #52]	; 0x34
    7fa4:	ldr	r1, [r9, #56]	; 0x38
    7fa8:	mov	r2, r7
    7fac:	mov	r3, sl
    7fb0:	str	r0, [fp, #-32]	; 0xffffffe0
    7fb4:	mov	r0, r5
    7fb8:	ldr	r4, [r5, #60]	; 0x3c
    7fbc:	str	r1, [sp]
    7fc0:	sub	r1, fp, #72	; 0x48
    7fc4:	blx	r4
    7fc8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7fcc:	str	r0, [r6]
    7fd0:	ldr	r1, [r9, #52]	; 0x34
    7fd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    7fd8:	ldr	r0, [r9, #4]
    7fdc:	ldr	r3, [r9, #88]	; 0x58
    7fe0:	sub	r2, r2, r1
    7fe4:	blx	r3
    7fe8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7fec:	str	r0, [r8]
    7ff0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    7ff4:	cmp	r0, r7
    7ff8:	bne	7fa0 <doContent+0x2bc>
    7ffc:	b	882c <doContent+0xb48>
    8000:	ldr	r0, [r9, #320]	; 0x140
    8004:	ldr	r1, [sp, #44]	; 0x2c
    8008:	cmp	r0, r1
    800c:	beq	968c <doContent+0x19a8>
    8010:	ldr	r4, [r9, #372]	; 0x174
    8014:	ldr	r0, [r9, #376]	; 0x178
    8018:	ldr	r1, [r4]
    801c:	str	r1, [r9, #372]	; 0x174
    8020:	str	r0, [r4]
    8024:	str	r4, [r9, #376]	; 0x178
    8028:	ldr	r0, [r5, #68]	; 0x44
    802c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8030:	ldr	r2, [r5, #32]
    8034:	add	r6, r1, r0, lsl #1
    8038:	mov	r0, r5
    803c:	mov	r1, r6
    8040:	blx	r2
    8044:	mov	r2, r0
    8048:	ldr	r0, [r4, #8]
    804c:	cmp	r2, r0
    8050:	bne	9660 <doContent+0x197c>
    8054:	ldr	r0, [r4, #4]
    8058:	mov	r1, r6
    805c:	bl	0 <bcmp>
    8060:	cmp	r0, #0
    8064:	bne	9660 <doContent+0x197c>
    8068:	ldr	r0, [r9, #320]	; 0x140
    806c:	ldr	r2, [r9, #64]	; 0x40
    8070:	sub	r0, r0, #1
    8074:	cmp	r2, #0
    8078:	str	r0, [r9, #320]	; 0x140
    807c:	beq	8698 <doContent+0x9b4>
    8080:	ldr	r3, [r4, #16]
    8084:	ldr	r7, [sp, #56]	; 0x38
    8088:	cmp	r3, #0
    808c:	ldrbne	r0, [r9, #244]	; 0xf4
    8090:	cmpne	r0, #0
    8094:	beq	80e4 <doContent+0x400>
    8098:	ldrb	r1, [r3]
    809c:	ldr	r0, [r4, #12]
    80a0:	ldr	r2, [r4, #28]
    80a4:	add	r0, r0, r2
    80a8:	cmp	r1, #0
    80ac:	beq	80c4 <doContent+0x3e0>
    80b0:	add	r2, r3, #1
    80b4:	strb	r1, [r0], #1
    80b8:	ldrb	r1, [r2], #1
    80bc:	cmp	r1, #0
    80c0:	bne	80b4 <doContent+0x3d0>
    80c4:	ldr	r2, [r4, #20]
    80c8:	cmp	r2, #0
    80cc:	ldrbne	r1, [r9, #245]	; 0xf5
    80d0:	cmpne	r1, #0
    80d4:	bne	8cc8 <doContent+0xfe4>
    80d8:	mov	r1, #0
    80dc:	strb	r1, [r0]
    80e0:	ldr	r2, [r9, #64]	; 0x40
    80e4:	ldr	r1, [r4, #12]
    80e8:	ldr	r0, [r7]
    80ec:	blx	r2
    80f0:	b	8c30 <doContent+0xf4c>
    80f4:	ldr	r4, [r9, #68]	; 0x44
    80f8:	cmp	r4, #0
    80fc:	beq	8488 <doContent+0x7a4>
    8100:	ldrb	r0, [r5, #72]	; 0x48
    8104:	cmp	r0, #0
    8108:	beq	8130 <doContent+0x44c>
    810c:	ldr	r0, [sp, #56]	; 0x38
    8110:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8114:	ldr	r0, [r0]
    8118:	sub	r2, r7, r1
    811c:	blx	r4
    8120:	b	8830 <doContent+0xb4c>
    8124:	ldr	r1, [sp, #60]	; 0x3c
    8128:	str	r0, [r1]
    812c:	ldr	r7, [fp, #-44]	; 0xffffffd4
    8130:	ldr	r0, [r9, #52]	; 0x34
    8134:	ldr	r1, [r9, #56]	; 0x38
    8138:	mov	r2, r7
    813c:	sub	r3, fp, #72	; 0x48
    8140:	str	r0, [fp, #-72]	; 0xffffffb8
    8144:	mov	r0, r5
    8148:	ldr	r6, [r5, #60]	; 0x3c
    814c:	str	r1, [sp]
    8150:	sub	r1, fp, #40	; 0x28
    8154:	blx	r6
    8158:	ldr	r0, [fp, #-40]	; 0xffffffd8
    815c:	ldr	r1, [sp, #64]	; 0x40
    8160:	str	r0, [r1]
    8164:	ldr	r1, [r9, #52]	; 0x34
    8168:	ldr	r2, [fp, #-72]	; 0xffffffb8
    816c:	ldr	r0, [r9, #4]
    8170:	sub	r2, r2, r1
    8174:	blx	r4
    8178:	ldr	r0, [fp, #-40]	; 0xffffffd8
    817c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    8180:	cmp	r0, r1
    8184:	bne	8124 <doContent+0x440>
    8188:	b	8830 <doContent+0xb4c>
    818c:	ldr	r3, [r9, #68]	; 0x44
    8190:	cmp	r3, #0
    8194:	beq	8524 <doContent+0x840>
    8198:	mov	r0, #10
    819c:	sub	r1, fp, #72	; 0x48
    81a0:	strb	r0, [fp, #-72]	; 0xffffffb8
    81a4:	ldr	r0, [sp, #56]	; 0x38
    81a8:	ldr	r0, [r0]
    81ac:	b	820c <doContent+0x528>
    81b0:	ldr	r1, [r9, #80]	; 0x50
    81b4:	cmp	r1, #0
    81b8:	beq	854c <doContent+0x868>
    81bc:	ldr	r0, [sp, #56]	; 0x38
    81c0:	ldr	r0, [r0]
    81c4:	blx	r1
    81c8:	b	8b74 <doContent+0xe90>
    81cc:	ldr	r0, [r5, #68]	; 0x44
    81d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    81d4:	ldr	r3, [r5, #48]	; 0x30
    81d8:	add	r1, r1, r0
    81dc:	sub	r2, r7, r0
    81e0:	mov	r0, r5
    81e4:	blx	r3
    81e8:	tst	r0, #255	; 0xff
    81ec:	strb	r0, [fp, #-36]	; 0xffffffdc
    81f0:	beq	8580 <doContent+0x89c>
    81f4:	ldr	r3, [r9, #68]	; 0x44
    81f8:	ldr	r0, [sp, #56]	; 0x38
    81fc:	cmp	r3, #0
    8200:	beq	87f8 <doContent+0xb14>
    8204:	ldr	r0, [r0]
    8208:	sub	r1, fp, #36	; 0x24
    820c:	mov	r2, #1
    8210:	blx	r3
    8214:	b	8ca4 <doContent+0xfc0>
    8218:	ldr	r2, [r5, #44]	; 0x2c
    821c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8220:	mov	r0, r5
    8224:	blx	r2
    8228:	cmp	r0, #0
    822c:	bmi	9694 <doContent+0x19b0>
    8230:	ldr	r6, [r9, #68]	; 0x44
    8234:	cmp	r6, #0
    8238:	beq	85fc <doContent+0x918>
    823c:	ldr	r1, [sp, #56]	; 0x38
    8240:	sub	r7, fp, #72	; 0x48
    8244:	ldr	r4, [r1]
    8248:	mov	r1, r7
    824c:	bl	0 <coda_XmlUtf8Encode>
    8250:	mov	r2, r0
    8254:	mov	r0, r4
    8258:	ldr	r4, [sp, #60]	; 0x3c
    825c:	mov	r1, r7
    8260:	blx	r6
    8264:	b	8ca4 <doContent+0xfc0>
    8268:	ldr	r2, [fp, #-40]	; 0xffffffd8
    826c:	mov	r0, r9
    8270:	mov	r1, r5
    8274:	mov	r3, r7
    8278:	bl	76d8 <reportProcessingInstruction>
    827c:	cmp	r0, #0
    8280:	bne	8ca4 <doContent+0xfc0>
    8284:	b	9534 <doContent+0x1850>
    8288:	ldr	r2, [fp, #-40]	; 0xffffffd8
    828c:	mov	r0, r9
    8290:	mov	r1, r5
    8294:	mov	r3, r7
    8298:	bl	7a58 <reportComment>
    829c:	cmp	r0, #0
    82a0:	bne	8ca4 <doContent+0xfc0>
    82a4:	b	9534 <doContent+0x1850>
    82a8:	ldr	r1, [r9, #12]
    82ac:	mov	r0, #48	; 0x30
    82b0:	blx	r1
    82b4:	mov	r6, #1
    82b8:	cmp	r0, #0
    82bc:	sub	r8, fp, #72	; 0x48
    82c0:	sub	r5, fp, #36	; 0x24
    82c4:	beq	9648 <doContent+0x1964>
    82c8:	ldr	r1, [r9, #12]
    82cc:	mov	r7, r0
    82d0:	mov	r0, #32
    82d4:	blx	r1
    82d8:	cmp	r0, #0
    82dc:	str	r0, [r7, #36]	; 0x24
    82e0:	beq	96b0 <doContent+0x19cc>
    82e4:	add	r0, r0, #32
    82e8:	str	r0, [r7, #40]	; 0x28
    82ec:	mov	sl, r7
    82f0:	mov	r1, #0
    82f4:	ldr	r4, [sp, #68]	; 0x44
    82f8:	str	r1, [sl, #44]!	; 0x2c
    82fc:	ldr	r0, [r9, #372]	; 0x174
    8300:	str	r0, [r7]
    8304:	str	r7, [r9, #372]	; 0x174
    8308:	str	r1, [r7, #16]
    830c:	str	r1, [r7, #20]
    8310:	ldr	r0, [r4, #68]	; 0x44
    8314:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8318:	add	r1, r1, r0
    831c:	mov	r0, r4
    8320:	str	r1, [r7, #4]
    8324:	ldr	r2, [r4, #32]
    8328:	blx	r2
    832c:	str	r0, [r7, #8]
    8330:	ldr	r1, [r9, #320]	; 0x140
    8334:	add	r1, r1, #1
    8338:	str	r1, [r9, #320]	; 0x140
    833c:	ldr	r1, [r7, #4]
    8340:	str	r1, [fp, #-72]	; 0xffffffb8
    8344:	add	r6, r1, r0
    8348:	mov	r0, r4
    834c:	mov	r1, r8
    8350:	ldr	r2, [r7, #36]	; 0x24
    8354:	ldr	r3, [r7, #40]	; 0x28
    8358:	str	r2, [fp, #-36]	; 0xffffffdc
    835c:	sub	r2, r3, #1
    8360:	mov	r3, r5
    8364:	ldr	ip, [r4, #60]	; 0x3c
    8368:	str	r2, [sp]
    836c:	mov	r2, r6
    8370:	blx	ip
    8374:	ldr	r2, [fp, #-72]	; 0xffffffb8
    8378:	ldr	r0, [r7, #36]	; 0x24
    837c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    8380:	sub	r8, r1, r0
    8384:	cmp	r2, r6
    8388:	beq	83e4 <doContent+0x700>
    838c:	ldr	r1, [r7, #40]	; 0x28
    8390:	ldr	r2, [r9, #16]
    8394:	sub	r1, r1, r0
    8398:	lsl	r4, r1, #1
    839c:	mov	r1, r4
    83a0:	blx	r2
    83a4:	cmp	r0, #0
    83a8:	beq	9534 <doContent+0x1850>
    83ac:	add	r1, r0, r4
    83b0:	str	r0, [r7, #36]	; 0x24
    83b4:	add	r0, r0, r8
    83b8:	mov	r2, r6
    83bc:	mov	r3, r5
    83c0:	str	r1, [r7, #40]	; 0x28
    83c4:	str	r0, [fp, #-36]	; 0xffffffdc
    83c8:	ldr	r0, [sp, #68]	; 0x44
    83cc:	sub	r1, r1, #1
    83d0:	ldr	r4, [r0, #60]	; 0x3c
    83d4:	str	r1, [sp]
    83d8:	sub	r1, fp, #72	; 0x48
    83dc:	blx	r4
    83e0:	b	8374 <doContent+0x690>
    83e4:	str	r8, [r7, #24]
    83e8:	str	r0, [r7, #12]
    83ec:	mov	r0, #0
    83f0:	ldr	r5, [sp, #68]	; 0x44
    83f4:	mov	r3, sl
    83f8:	add	sl, r7, #12
    83fc:	strb	r0, [r1]
    8400:	str	r3, [sp]
    8404:	mov	r0, r9
    8408:	mov	r3, sl
    840c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    8410:	mov	r1, r5
    8414:	bl	98e8 <storeAtts>
    8418:	cmp	r0, #0
    841c:	bne	954c <doContent+0x1868>
    8420:	ldr	r3, [r9, #60]	; 0x3c
    8424:	cmp	r3, #0
    8428:	beq	8448 <doContent+0x764>
    842c:	ldr	r1, [sl]
    8430:	ldr	r0, [r9, #4]
    8434:	ldr	r2, [r9, #400]	; 0x190
    8438:	blx	r3
    843c:	ldr	r8, [fp, #8]
    8440:	sub	sl, fp, #32
    8444:	b	8a1c <doContent+0xd38>
    8448:	ldr	r3, [r9, #88]	; 0x58
    844c:	ldr	r8, [fp, #8]
    8450:	sub	sl, fp, #32
    8454:	cmp	r3, #0
    8458:	beq	8a1c <doContent+0xd38>
    845c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8460:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8464:	str	r1, [fp, #-72]	; 0xffffffb8
    8468:	ldrb	r0, [r5, #72]	; 0x48
    846c:	cmp	r0, #0
    8470:	ldr	r0, [sp, #56]	; 0x38
    8474:	beq	89a4 <doContent+0xcc0>
    8478:	ldr	r0, [r0]
    847c:	sub	r2, r6, r1
    8480:	blx	r3
    8484:	b	8a18 <doContent+0xd34>
    8488:	ldr	r3, [r9, #88]	; 0x58
    848c:	ldr	r4, [sp, #60]	; 0x3c
    8490:	cmp	r3, #0
    8494:	beq	8ca4 <doContent+0xfc0>
    8498:	ldr	r1, [fp, #-40]	; 0xffffffd8
    849c:	str	r1, [fp, #-72]	; 0xffffffb8
    84a0:	ldrb	r0, [r5, #72]	; 0x48
    84a4:	cmp	r0, #0
    84a8:	bne	8544 <doContent+0x860>
    84ac:	ldr	r0, [r9, #152]	; 0x98
    84b0:	ldr	r8, [sp, #40]	; 0x28
    84b4:	ldr	r6, [sp, #36]	; 0x24
    84b8:	cmp	r0, r5
    84bc:	ldrne	r8, [r9, #308]	; 0x134
    84c0:	addne	r6, r8, #4
    84c4:	ldr	r0, [r9, #52]	; 0x34
    84c8:	ldr	r1, [r9, #56]	; 0x38
    84cc:	mov	r2, r7
    84d0:	mov	r3, sl
    84d4:	str	r0, [fp, #-32]	; 0xffffffe0
    84d8:	mov	r0, r5
    84dc:	ldr	r4, [r5, #60]	; 0x3c
    84e0:	str	r1, [sp]
    84e4:	sub	r1, fp, #72	; 0x48
    84e8:	blx	r4
    84ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
    84f0:	str	r0, [r6]
    84f4:	ldr	r1, [r9, #52]	; 0x34
    84f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    84fc:	ldr	r0, [r9, #4]
    8500:	ldr	r3, [r9, #88]	; 0x58
    8504:	sub	r2, r2, r1
    8508:	blx	r3
    850c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8510:	str	r0, [r8]
    8514:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8518:	cmp	r0, r7
    851c:	bne	84c4 <doContent+0x7e0>
    8520:	b	882c <doContent+0xb48>
    8524:	ldr	r3, [r9, #88]	; 0x58
    8528:	cmp	r3, #0
    852c:	beq	8ca4 <doContent+0xfc0>
    8530:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8534:	str	r1, [fp, #-72]	; 0xffffffb8
    8538:	ldrb	r0, [r5, #72]	; 0x48
    853c:	cmp	r0, #0
    8540:	beq	8a80 <doContent+0xd9c>
    8544:	sub	r2, r7, r1
    8548:	b	8820 <doContent+0xb3c>
    854c:	ldr	r3, [r9, #88]	; 0x58
    8550:	cmp	r3, #0
    8554:	beq	8b74 <doContent+0xe90>
    8558:	ldr	r1, [fp, #-40]	; 0xffffffd8
    855c:	str	r1, [fp, #-72]	; 0xffffffb8
    8560:	ldrb	r0, [r5, #72]	; 0x48
    8564:	cmp	r0, #0
    8568:	beq	8af8 <doContent+0xe14>
    856c:	ldr	r0, [sp, #56]	; 0x38
    8570:	sub	r2, r7, r1
    8574:	ldr	r0, [r0]
    8578:	blx	r3
    857c:	b	8b6c <doContent+0xe88>
    8580:	ldr	r7, [r5, #68]	; 0x44
    8584:	ldr	r0, [fp, #-40]	; 0xffffffd8
    8588:	ldr	r4, [sp, #32]
    858c:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8590:	ldr	sl, [sp, #48]	; 0x30
    8594:	add	r0, r0, r7
    8598:	str	r0, [fp, #-72]	; 0xffffffb8
    859c:	ldr	r0, [r4]
    85a0:	cmp	r0, #0
    85a4:	bne	85b8 <doContent+0x8d4>
    85a8:	ldr	r0, [sp, #52]	; 0x34
    85ac:	bl	6948 <poolGrow>
    85b0:	cmp	r0, #0
    85b4:	beq	9534 <doContent+0x1850>
    85b8:	sub	r6, r6, r7
    85bc:	ldr	r0, [sl, #88]	; 0x58
    85c0:	ldr	r7, [r5, #60]	; 0x3c
    85c4:	sub	r1, fp, #72	; 0x48
    85c8:	mov	r2, r6
    85cc:	mov	r3, r4
    85d0:	str	r0, [sp]
    85d4:	mov	r0, r5
    85d8:	blx	r7
    85dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
    85e0:	cmp	r0, r6
    85e4:	beq	8838 <doContent+0xb54>
    85e8:	ldr	r0, [sp, #52]	; 0x34
    85ec:	bl	6948 <poolGrow>
    85f0:	cmp	r0, #0
    85f4:	bne	85bc <doContent+0x8d8>
    85f8:	b	9534 <doContent+0x1850>
    85fc:	ldr	r3, [r9, #88]	; 0x58
    8600:	cmp	r3, #0
    8604:	beq	8ca4 <doContent+0xfc0>
    8608:	ldr	r1, [fp, #-40]	; 0xffffffd8
    860c:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8610:	str	r1, [fp, #-72]	; 0xffffffb8
    8614:	ldrb	r0, [r5, #72]	; 0x48
    8618:	cmp	r0, #0
    861c:	bne	881c <doContent+0xb38>
    8620:	ldr	r0, [r9, #152]	; 0x98
    8624:	ldr	r8, [sp, #40]	; 0x28
    8628:	ldr	r7, [sp, #36]	; 0x24
    862c:	cmp	r0, r5
    8630:	ldrne	r8, [r9, #308]	; 0x134
    8634:	addne	r7, r8, #4
    8638:	ldr	r0, [r9, #52]	; 0x34
    863c:	ldr	r1, [r9, #56]	; 0x38
    8640:	mov	r2, r6
    8644:	mov	r3, sl
    8648:	str	r0, [fp, #-32]	; 0xffffffe0
    864c:	mov	r0, r5
    8650:	ldr	r4, [r5, #60]	; 0x3c
    8654:	str	r1, [sp]
    8658:	sub	r1, fp, #72	; 0x48
    865c:	blx	r4
    8660:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8664:	str	r0, [r7]
    8668:	ldr	r1, [r9, #52]	; 0x34
    866c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8670:	ldr	r0, [r9, #4]
    8674:	ldr	r3, [r9, #88]	; 0x58
    8678:	sub	r2, r2, r1
    867c:	blx	r3
    8680:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8684:	str	r0, [r8]
    8688:	ldr	r0, [fp, #-72]	; 0xffffffb8
    868c:	cmp	r0, r6
    8690:	bne	8638 <doContent+0x954>
    8694:	b	882c <doContent+0xb48>
    8698:	ldr	r3, [r9, #88]	; 0x58
    869c:	ldr	r7, [sp, #56]	; 0x38
    86a0:	cmp	r3, #0
    86a4:	beq	8c30 <doContent+0xf4c>
    86a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
    86ac:	ldr	r6, [fp, #-44]	; 0xffffffd4
    86b0:	str	r1, [fp, #-72]	; 0xffffffb8
    86b4:	ldrb	r0, [r5, #72]	; 0x48
    86b8:	cmp	r0, #0
    86bc:	beq	8bb0 <doContent+0xecc>
    86c0:	ldr	r0, [r7]
    86c4:	sub	r2, r6, r1
    86c8:	blx	r3
    86cc:	b	8c24 <doContent+0xf40>
    86d0:	mov	r0, #1
    86d4:	ldr	r2, [r9, #64]	; 0x40
    86d8:	cmp	r2, #0
    86dc:	beq	8744 <doContent+0xa60>
    86e0:	ldr	r0, [r9, #60]	; 0x3c
    86e4:	cmp	r0, #0
    86e8:	beq	86fc <doContent+0xa18>
    86ec:	ldr	r0, [sp, #64]	; 0x40
    86f0:	ldr	r0, [r0]
    86f4:	str	r0, [r4]
    86f8:	ldr	r2, [r9, #64]	; 0x40
    86fc:	ldr	r0, [r7]
    8700:	ldr	r1, [fp, #-72]	; 0xffffffb8
    8704:	blx	r2
    8708:	ldr	r0, [r9, #436]	; 0x1b4
    870c:	cmp	r0, #0
    8710:	beq	8780 <doContent+0xa9c>
    8714:	ldr	r1, [sp, #72]	; 0x48
    8718:	ldr	r1, [r1]
    871c:	cmp	r1, #0
    8720:	beq	8788 <doContent+0xaa4>
    8724:	mov	r2, r1
    8728:	ldr	r1, [r1]
    872c:	str	r0, [r2]
    8730:	mov	r0, r2
    8734:	cmp	r1, #0
    8738:	bne	8724 <doContent+0xa40>
    873c:	str	r2, [r9, #436]	; 0x1b4
    8740:	b	8788 <doContent+0xaa4>
    8744:	cmp	r0, #0
    8748:	beq	8708 <doContent+0xa24>
    874c:	ldr	r3, [r9, #88]	; 0x58
    8750:	cmp	r3, #0
    8754:	beq	8708 <doContent+0xa24>
    8758:	ldr	r1, [fp, #-40]	; 0xffffffd8
    875c:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8760:	str	r1, [fp, #-32]	; 0xffffffe0
    8764:	ldrb	r0, [r5, #72]	; 0x48
    8768:	cmp	r0, #0
    876c:	beq	8ef8 <doContent+0x1214>
    8770:	ldr	r0, [r7]
    8774:	sub	r2, r6, r1
    8778:	blx	r3
    877c:	b	8f70 <doContent+0x128c>
    8780:	ldr	r0, [r9, #432]	; 0x1b0
    8784:	str	r0, [r9, #436]	; 0x1b4
    8788:	mov	r0, #0
    878c:	str	r0, [r9, #432]	; 0x1b0
    8790:	str	r0, [r9, #440]	; 0x1b8
    8794:	str	r0, [r9, #444]	; 0x1bc
    8798:	str	r0, [r9, #448]	; 0x1c0
    879c:	ldr	r4, [fp, #-48]	; 0xffffffd0
    87a0:	cmp	r4, #0
    87a4:	bne	87d8 <doContent+0xaf4>
    87a8:	b	8c94 <doContent+0xfb0>
    87ac:	ldr	r0, [r4, #4]
    87b0:	str	r0, [fp, #-48]	; 0xffffffd0
    87b4:	cmp	r0, #0
    87b8:	ldr	r1, [r9, #384]	; 0x180
    87bc:	str	r1, [r4, #4]
    87c0:	str	r4, [r9, #384]	; 0x180
    87c4:	ldr	r1, [r4]
    87c8:	ldr	r2, [r4, #8]
    87cc:	mov	r4, r0
    87d0:	str	r2, [r1, #4]
    87d4:	beq	8c94 <doContent+0xfb0>
    87d8:	ldr	r2, [r9, #112]	; 0x70
    87dc:	cmp	r2, #0
    87e0:	beq	87ac <doContent+0xac8>
    87e4:	ldr	r1, [r4]
    87e8:	ldr	r0, [r7]
    87ec:	ldr	r1, [r1]
    87f0:	blx	r2
    87f4:	b	87ac <doContent+0xac8>
    87f8:	ldr	r3, [r9, #88]	; 0x58
    87fc:	cmp	r3, #0
    8800:	beq	8ca4 <doContent+0xfc0>
    8804:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8808:	ldr	r6, [fp, #-44]	; 0xffffffd4
    880c:	str	r1, [fp, #-72]	; 0xffffffb8
    8810:	ldrb	r0, [r5, #72]	; 0x48
    8814:	cmp	r0, #0
    8818:	beq	8d84 <doContent+0x10a0>
    881c:	sub	r2, r6, r1
    8820:	ldr	r0, [sp, #56]	; 0x38
    8824:	ldr	r0, [r0]
    8828:	blx	r3
    882c:	ldr	r8, [fp, #8]
    8830:	ldr	r4, [sp, #60]	; 0x3c
    8834:	b	8ca4 <doContent+0xfc0>
    8838:	ldr	r0, [sl, #96]	; 0x60
    883c:	mov	r6, #1
    8840:	cmp	r0, #0
    8844:	beq	9648 <doContent+0x1964>
    8848:	ldr	r1, [sl, #88]	; 0x58
    884c:	ldr	r0, [sl, #92]	; 0x5c
    8850:	cmp	r0, r1
    8854:	bne	886c <doContent+0xb88>
    8858:	ldr	r0, [sp, #52]	; 0x34
    885c:	bl	6948 <poolGrow>
    8860:	cmp	r0, #0
    8864:	beq	9648 <doContent+0x1964>
    8868:	ldr	r0, [r4]
    886c:	add	r1, r0, #1
    8870:	str	r1, [sl, #92]	; 0x5c
    8874:	mov	r1, #0
    8878:	strb	r1, [r0]
    887c:	ldr	r1, [sl, #96]	; 0x60
    8880:	cmp	r1, #0
    8884:	beq	9648 <doContent+0x1964>
    8888:	mov	r4, sl
    888c:	ldr	sl, [sl, #8]
    8890:	mov	ip, #0
    8894:	cmp	sl, #0
    8898:	beq	8cfc <doContent+0x1018>
    889c:	ldrb	lr, [r1]
    88a0:	ldr	r4, [r9, #512]	; 0x200
    88a4:	cmp	lr, #0
    88a8:	beq	88d4 <doContent+0xbf0>
    88ac:	movw	r0, #16963	; 0x4243
    88b0:	add	r3, r1, #1
    88b4:	mov	r2, lr
    88b8:	movt	r0, #15
    88bc:	mul	r7, r4, r0
    88c0:	uxtb	r2, r2
    88c4:	eor	r4, r7, r2
    88c8:	ldrb	r2, [r3], #1
    88cc:	cmp	r2, #0
    88d0:	bne	88bc <doContent+0xbd8>
    88d4:	ldr	r0, [sp, #48]	; 0x30
    88d8:	sub	r2, sl, #1
    88dc:	and	r3, r4, r2
    88e0:	ldr	r0, [r0]
    88e4:	ldr	r7, [r0, r3, lsl #2]
    88e8:	str	r0, [sp, #28]
    88ec:	cmp	r7, #0
    88f0:	beq	8cfc <doContent+0x1018>
    88f4:	rsb	r0, sl, #0
    88f8:	str	sl, [sp, #24]
    88fc:	and	r0, r4, r0
    8900:	mov	r4, #0
    8904:	str	r0, [sp, #16]
    8908:	add	r0, r1, #1
    890c:	str	r0, [sp, #20]
    8910:	lsr	r0, r2, #2
    8914:	str	r0, [sp, #12]
    8918:	b	8948 <doContent+0xc64>
    891c:	tst	r4, #255	; 0xff
    8920:	beq	8984 <doContent+0xca0>
    8924:	uxtb	r0, r4
    8928:	mov	lr, sl
    892c:	subs	r3, r3, r0
    8930:	ldr	r0, [sp, #24]
    8934:	addcc	r3, r3, r0
    8938:	ldr	r0, [sp, #28]
    893c:	ldr	r7, [r0, r3, lsl #2]
    8940:	cmp	r7, #0
    8944:	beq	94a0 <doContent+0x17bc>
    8948:	ldr	r2, [r7]
    894c:	mov	sl, lr
    8950:	ldrb	r0, [r2]
    8954:	cmp	lr, r0
    8958:	bne	891c <doContent+0xc38>
    895c:	ldr	r8, [sp, #20]
    8960:	add	ip, r2, #1
    8964:	mov	lr, sl
    8968:	tst	lr, #255	; 0xff
    896c:	beq	8cf4 <doContent+0x1010>
    8970:	ldrb	lr, [r8], #1
    8974:	ldrb	r0, [ip], #1
    8978:	cmp	lr, r0
    897c:	beq	8968 <doContent+0xc84>
    8980:	b	891c <doContent+0xc38>
    8984:	ldr	r0, [sp, #48]	; 0x30
    8988:	ldr	r2, [sp, #16]
    898c:	ldr	r7, [sp, #12]
    8990:	ldrb	r0, [r0, #4]
    8994:	sub	r0, r0, #1
    8998:	and	r0, r7, r2, lsr r0
    899c:	orr	r4, r0, #1
    89a0:	b	8924 <doContent+0xc40>
    89a4:	ldr	r0, [r9, #152]	; 0x98
    89a8:	ldr	r8, [sp, #40]	; 0x28
    89ac:	ldr	r7, [sp, #36]	; 0x24
    89b0:	cmp	r0, r5
    89b4:	ldrne	r8, [r9, #308]	; 0x134
    89b8:	addne	r7, r8, #4
    89bc:	ldr	r0, [r9, #52]	; 0x34
    89c0:	ldr	r1, [r9, #56]	; 0x38
    89c4:	mov	r2, r6
    89c8:	mov	r3, sl
    89cc:	str	r0, [fp, #-32]	; 0xffffffe0
    89d0:	mov	r0, r5
    89d4:	ldr	r4, [r5, #60]	; 0x3c
    89d8:	str	r1, [sp]
    89dc:	sub	r1, fp, #72	; 0x48
    89e0:	blx	r4
    89e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    89e8:	str	r0, [r7]
    89ec:	ldr	r1, [r9, #52]	; 0x34
    89f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    89f4:	ldr	r0, [r9, #4]
    89f8:	ldr	r3, [r9, #88]	; 0x58
    89fc:	sub	r2, r2, r1
    8a00:	blx	r3
    8a04:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8a08:	str	r0, [r8]
    8a0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8a10:	cmp	r0, r6
    8a14:	bne	89bc <doContent+0xcd8>
    8a18:	ldr	r8, [fp, #8]
    8a1c:	ldr	r0, [r9, #436]	; 0x1b4
    8a20:	cmp	r0, #0
    8a24:	beq	8a5c <doContent+0xd78>
    8a28:	ldr	r1, [sp, #72]	; 0x48
    8a2c:	ldr	r4, [sp, #60]	; 0x3c
    8a30:	ldr	r1, [r1]
    8a34:	cmp	r1, #0
    8a38:	beq	8a68 <doContent+0xd84>
    8a3c:	mov	r2, r1
    8a40:	ldr	r1, [r1]
    8a44:	str	r0, [r2]
    8a48:	mov	r0, r2
    8a4c:	cmp	r1, #0
    8a50:	bne	8a3c <doContent+0xd58>
    8a54:	str	r2, [r9, #436]	; 0x1b4
    8a58:	b	8a68 <doContent+0xd84>
    8a5c:	ldr	r0, [r9, #432]	; 0x1b0
    8a60:	ldr	r4, [sp, #60]	; 0x3c
    8a64:	str	r0, [r9, #436]	; 0x1b4
    8a68:	mov	r0, #0
    8a6c:	str	r0, [r9, #432]	; 0x1b0
    8a70:	str	r0, [r9, #440]	; 0x1b8
    8a74:	str	r0, [r9, #444]	; 0x1bc
    8a78:	str	r0, [r9, #448]	; 0x1c0
    8a7c:	b	8ca4 <doContent+0xfc0>
    8a80:	ldr	r0, [r9, #152]	; 0x98
    8a84:	ldr	r8, [sp, #40]	; 0x28
    8a88:	ldr	r6, [sp, #36]	; 0x24
    8a8c:	cmp	r0, r5
    8a90:	ldrne	r8, [r9, #308]	; 0x134
    8a94:	addne	r6, r8, #4
    8a98:	ldr	r0, [r9, #52]	; 0x34
    8a9c:	ldr	r1, [r9, #56]	; 0x38
    8aa0:	mov	r2, r7
    8aa4:	mov	r3, sl
    8aa8:	str	r0, [fp, #-32]	; 0xffffffe0
    8aac:	mov	r0, r5
    8ab0:	ldr	r4, [r5, #60]	; 0x3c
    8ab4:	str	r1, [sp]
    8ab8:	sub	r1, fp, #72	; 0x48
    8abc:	blx	r4
    8ac0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8ac4:	str	r0, [r6]
    8ac8:	ldr	r1, [r9, #52]	; 0x34
    8acc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8ad0:	ldr	r0, [r9, #4]
    8ad4:	ldr	r3, [r9, #88]	; 0x58
    8ad8:	sub	r2, r2, r1
    8adc:	blx	r3
    8ae0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8ae4:	str	r0, [r8]
    8ae8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8aec:	cmp	r0, r7
    8af0:	bne	8a98 <doContent+0xdb4>
    8af4:	b	882c <doContent+0xb48>
    8af8:	ldr	r0, [r9, #152]	; 0x98
    8afc:	ldr	r8, [sp, #40]	; 0x28
    8b00:	ldr	r6, [sp, #36]	; 0x24
    8b04:	cmp	r0, r5
    8b08:	ldrne	r8, [r9, #308]	; 0x134
    8b0c:	addne	r6, r8, #4
    8b10:	ldr	r0, [r9, #52]	; 0x34
    8b14:	ldr	r1, [r9, #56]	; 0x38
    8b18:	mov	r2, r7
    8b1c:	mov	r3, sl
    8b20:	str	r0, [fp, #-32]	; 0xffffffe0
    8b24:	mov	r0, r5
    8b28:	ldr	r4, [r5, #60]	; 0x3c
    8b2c:	str	r1, [sp]
    8b30:	sub	r1, fp, #72	; 0x48
    8b34:	blx	r4
    8b38:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8b3c:	str	r0, [r6]
    8b40:	ldr	r1, [r9, #52]	; 0x34
    8b44:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8b48:	ldr	r0, [r9, #4]
    8b4c:	ldr	r3, [r9, #88]	; 0x58
    8b50:	sub	r2, r2, r1
    8b54:	blx	r3
    8b58:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8b5c:	str	r0, [r8]
    8b60:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8b64:	cmp	r0, r7
    8b68:	bne	8b10 <doContent+0xe2c>
    8b6c:	ldr	r8, [fp, #8]
    8b70:	ldr	r4, [sp, #60]	; 0x3c
    8b74:	ldr	r0, [fp, #12]
    8b78:	mov	r1, r5
    8b7c:	sub	r2, fp, #44	; 0x2c
    8b80:	mov	r3, r8
    8b84:	str	r0, [sp]
    8b88:	ldr	r0, [fp, #16]
    8b8c:	str	r0, [sp, #4]
    8b90:	mov	r0, r9
    8b94:	bl	ab4c <doCdataSection>
    8b98:	cmp	r0, #0
    8b9c:	bne	954c <doContent+0x1868>
    8ba0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8ba4:	cmp	r0, #0
    8ba8:	bne	8ca4 <doContent+0xfc0>
    8bac:	b	969c <doContent+0x19b8>
    8bb0:	ldr	r0, [r9, #152]	; 0x98
    8bb4:	ldr	r8, [sp, #40]	; 0x28
    8bb8:	ldr	sl, [sp, #36]	; 0x24
    8bbc:	cmp	r0, r5
    8bc0:	ldrne	r8, [r9, #308]	; 0x134
    8bc4:	addne	sl, r8, #4
    8bc8:	ldr	r0, [r9, #52]	; 0x34
    8bcc:	ldr	r1, [r9, #56]	; 0x38
    8bd0:	mov	r2, r6
    8bd4:	sub	r3, fp, #32
    8bd8:	str	r0, [fp, #-32]	; 0xffffffe0
    8bdc:	mov	r0, r5
    8be0:	ldr	r7, [r5, #60]	; 0x3c
    8be4:	str	r1, [sp]
    8be8:	sub	r1, fp, #72	; 0x48
    8bec:	blx	r7
    8bf0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8bf4:	str	r0, [sl]
    8bf8:	ldr	r1, [r9, #52]	; 0x34
    8bfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8c00:	ldr	r0, [r9, #4]
    8c04:	ldr	r3, [r9, #88]	; 0x58
    8c08:	sub	r2, r2, r1
    8c0c:	blx	r3
    8c10:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8c14:	str	r0, [r8]
    8c18:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8c1c:	cmp	r0, r6
    8c20:	bne	8bc8 <doContent+0xee4>
    8c24:	ldr	r8, [fp, #8]
    8c28:	ldr	r7, [sp, #56]	; 0x38
    8c2c:	sub	sl, fp, #32
    8c30:	ldr	r6, [r4, #44]	; 0x2c
    8c34:	cmp	r6, #0
    8c38:	bne	8c6c <doContent+0xf88>
    8c3c:	b	8c94 <doContent+0xfb0>
    8c40:	ldr	r0, [r0, #4]
    8c44:	str	r0, [r4, #44]	; 0x2c
    8c48:	cmp	r0, #0
    8c4c:	ldr	r1, [r9, #384]	; 0x180
    8c50:	str	r1, [r6, #4]
    8c54:	str	r6, [r9, #384]	; 0x180
    8c58:	ldr	r1, [r6]
    8c5c:	ldr	r2, [r6, #8]
    8c60:	mov	r6, r0
    8c64:	str	r2, [r1, #4]
    8c68:	beq	8c94 <doContent+0xfb0>
    8c6c:	ldr	r2, [r9, #112]	; 0x70
    8c70:	mov	r0, r6
    8c74:	cmp	r2, #0
    8c78:	beq	8c40 <doContent+0xf5c>
    8c7c:	ldr	r1, [r6]
    8c80:	ldr	r0, [r7]
    8c84:	ldr	r1, [r1]
    8c88:	blx	r2
    8c8c:	ldr	r0, [r4, #44]	; 0x2c
    8c90:	b	8c40 <doContent+0xf5c>
    8c94:	ldr	r0, [r9, #320]	; 0x140
    8c98:	ldr	r4, [sp, #60]	; 0x3c
    8c9c:	cmp	r0, #0
    8ca0:	beq	9670 <doContent+0x198c>
    8ca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    8ca8:	str	r0, [fp, #-40]	; 0xffffffd8
    8cac:	str	r0, [r4]
    8cb0:	ldr	r0, [r9, #496]	; 0x1f0
    8cb4:	cmp	r0, #2
    8cb8:	beq	953c <doContent+0x1858>
    8cbc:	cmp	r0, #3
    8cc0:	bne	7d7c <doContent+0x98>
    8cc4:	b	9544 <doContent+0x1860>
    8cc8:	ldrb	r1, [r9, #488]	; 0x1e8
    8ccc:	strb	r1, [r0], #1
    8cd0:	ldrb	r1, [r2]
    8cd4:	cmp	r1, #0
    8cd8:	beq	80d8 <doContent+0x3f4>
    8cdc:	add	r2, r2, #1
    8ce0:	strb	r1, [r0], #1
    8ce4:	ldrb	r1, [r2], #1
    8ce8:	cmp	r1, #0
    8cec:	bne	8ce0 <doContent+0xffc>
    8cf0:	b	80d8 <doContent+0x3f4>
    8cf4:	mov	ip, r7
    8cf8:	ldr	r8, [fp, #8]
    8cfc:	ldr	r2, [sp, #48]	; 0x30
    8d00:	str	r1, [r2, #92]	; 0x5c
    8d04:	ldrb	r0, [r2, #129]	; 0x81
    8d08:	cmp	r0, #0
    8d0c:	beq	8d1c <doContent+0x1038>
    8d10:	ldrb	r0, [r2, #130]	; 0x82
    8d14:	cmp	r0, #0
    8d18:	beq	8f7c <doContent+0x1298>
    8d1c:	ldr	r4, [sp, #60]	; 0x3c
    8d20:	cmp	ip, #0
    8d24:	beq	9798 <doContent+0x1ab4>
    8d28:	ldrb	r0, [ip, #34]	; 0x22
    8d2c:	cmp	r0, #0
    8d30:	beq	97a0 <doContent+0x1abc>
    8d34:	ldrb	r0, [ip, #32]
    8d38:	cmp	r0, #0
    8d3c:	bne	9778 <doContent+0x1a94>
    8d40:	ldr	r0, [ip, #28]
    8d44:	cmp	r0, #0
    8d48:	bne	9780 <doContent+0x1a9c>
    8d4c:	ldr	r0, [ip, #4]
    8d50:	cmp	r0, #0
    8d54:	beq	8dfc <doContent+0x1118>
    8d58:	ldrb	r0, [r9, #316]	; 0x13c
    8d5c:	sub	sl, fp, #32
    8d60:	cmp	r0, #0
    8d64:	beq	8fac <doContent+0x12c8>
    8d68:	mov	r0, r9
    8d6c:	mov	r1, ip
    8d70:	mov	r2, #0
    8d74:	bl	7570 <processInternalEntity>
    8d78:	cmp	r0, #0
    8d7c:	beq	8ca4 <doContent+0xfc0>
    8d80:	b	954c <doContent+0x1868>
    8d84:	ldr	r0, [r9, #152]	; 0x98
    8d88:	ldr	r8, [sp, #40]	; 0x28
    8d8c:	ldr	r7, [sp, #36]	; 0x24
    8d90:	cmp	r0, r5
    8d94:	ldrne	r8, [r9, #308]	; 0x134
    8d98:	addne	r7, r8, #4
    8d9c:	ldr	r0, [r9, #52]	; 0x34
    8da0:	ldr	r1, [r9, #56]	; 0x38
    8da4:	mov	r2, r6
    8da8:	mov	r3, sl
    8dac:	str	r0, [fp, #-32]	; 0xffffffe0
    8db0:	mov	r0, r5
    8db4:	ldr	r4, [r5, #60]	; 0x3c
    8db8:	str	r1, [sp]
    8dbc:	sub	r1, fp, #72	; 0x48
    8dc0:	blx	r4
    8dc4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8dc8:	str	r0, [r7]
    8dcc:	ldr	r1, [r9, #52]	; 0x34
    8dd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    8dd4:	ldr	r0, [r9, #4]
    8dd8:	ldr	r3, [r9, #88]	; 0x58
    8ddc:	sub	r2, r2, r1
    8de0:	blx	r3
    8de4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8de8:	str	r0, [r8]
    8dec:	ldr	r0, [fp, #-72]	; 0xffffffb8
    8df0:	cmp	r0, r6
    8df4:	bne	8d9c <doContent+0x10b8>
    8df8:	b	882c <doContent+0xb48>
    8dfc:	ldr	r0, [r9, #120]	; 0x78
    8e00:	sub	sl, fp, #32
    8e04:	cmp	r0, #0
    8e08:	beq	8fd0 <doContent+0x12ec>
    8e0c:	mov	r0, #1
    8e10:	str	ip, [sp, #28]
    8e14:	strb	r0, [ip, #32]
    8e18:	ldr	lr, [r9, #364]	; 0x16c
    8e1c:	ldr	r0, [lr, #156]	; 0x9c
    8e20:	str	lr, [sp, #24]
    8e24:	cmp	r0, #0
    8e28:	beq	9070 <doContent+0x138c>
    8e2c:	ldr	r1, [r9, #440]	; 0x1b8
    8e30:	ldr	r0, [r9, #444]	; 0x1bc
    8e34:	cmp	r0, r1
    8e38:	bne	8e5c <doContent+0x1178>
    8e3c:	ldr	r0, [sp, #72]	; 0x48
    8e40:	bl	6948 <poolGrow>
    8e44:	cmp	r0, #0
    8e48:	beq	9788 <doContent+0x1aa4>
    8e4c:	ldr	r0, [sp, #76]	; 0x4c
    8e50:	ldr	ip, [sp, #28]
    8e54:	ldr	lr, [sp, #24]
    8e58:	ldr	r0, [r0]
    8e5c:	add	r1, r0, #1
    8e60:	mov	r3, #1
    8e64:	str	r1, [r9, #444]	; 0x1bc
    8e68:	mov	r1, #61	; 0x3d
    8e6c:	strb	r1, [r0]
    8e70:	ldr	r0, [lr, #156]	; 0x9c
    8e74:	ldrb	r1, [r9, #488]	; 0x1e8
    8e78:	ldr	r0, [r0, #20]
    8e7c:	cmp	r1, #0
    8e80:	movwne	r1, #1
    8e84:	sub	r2, r0, r1
    8e88:	cmp	r2, #1
    8e8c:	blt	90ac <doContent+0x13c8>
    8e90:	sub	r4, r1, r0
    8e94:	mov	r7, #0
    8e98:	b	8ec4 <doContent+0x11e0>
    8e9c:	ldr	r1, [lr, #156]	; 0x9c
    8ea0:	ldr	r3, [sp, #76]	; 0x4c
    8ea4:	add	r2, r0, #1
    8ea8:	ldr	r1, [r1, #16]
    8eac:	ldrb	r1, [r1, -r7]
    8eb0:	sub	r7, r7, #1
    8eb4:	str	r2, [r3]
    8eb8:	cmp	r4, r7
    8ebc:	strb	r1, [r0]
    8ec0:	beq	90a8 <doContent+0x13c4>
    8ec4:	ldr	r1, [r9, #440]	; 0x1b8
    8ec8:	ldr	r0, [r9, #444]	; 0x1bc
    8ecc:	cmp	r0, r1
    8ed0:	bne	8e9c <doContent+0x11b8>
    8ed4:	ldr	r0, [sp, #72]	; 0x48
    8ed8:	bl	6948 <poolGrow>
    8edc:	cmp	r0, #0
    8ee0:	beq	9788 <doContent+0x1aa4>
    8ee4:	ldr	r0, [sp, #76]	; 0x4c
    8ee8:	ldr	ip, [sp, #28]
    8eec:	ldr	lr, [sp, #24]
    8ef0:	ldr	r0, [r0]
    8ef4:	b	8e9c <doContent+0x11b8>
    8ef8:	ldr	r0, [r9, #152]	; 0x98
    8efc:	ldr	r8, [sp, #40]	; 0x28
    8f00:	ldr	r7, [sp, #36]	; 0x24
    8f04:	cmp	r0, r5
    8f08:	ldr	r5, [sp, #68]	; 0x44
    8f0c:	ldrne	r8, [r9, #308]	; 0x134
    8f10:	addne	r7, r8, #4
    8f14:	ldr	r0, [r9, #52]	; 0x34
    8f18:	ldr	r1, [r9, #56]	; 0x38
    8f1c:	mov	r2, r6
    8f20:	sub	r3, fp, #36	; 0x24
    8f24:	str	r0, [fp, #-36]	; 0xffffffdc
    8f28:	mov	r0, r5
    8f2c:	ldr	r4, [r5, #60]	; 0x3c
    8f30:	str	r1, [sp]
    8f34:	mov	r1, sl
    8f38:	blx	r4
    8f3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8f40:	str	r0, [r7]
    8f44:	ldr	r1, [r9, #52]	; 0x34
    8f48:	ldr	r2, [fp, #-36]	; 0xffffffdc
    8f4c:	ldr	r0, [r9, #4]
    8f50:	ldr	r3, [r9, #88]	; 0x58
    8f54:	sub	r2, r2, r1
    8f58:	blx	r3
    8f5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8f60:	str	r0, [r8]
    8f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
    8f68:	cmp	r0, r6
    8f6c:	bne	8f14 <doContent+0x1230>
    8f70:	ldr	r8, [fp, #8]
    8f74:	ldr	r7, [sp, #56]	; 0x38
    8f78:	b	8708 <doContent+0xa24>
    8f7c:	ldr	r4, [sp, #60]	; 0x3c
    8f80:	ldr	r0, [sp, #56]	; 0x38
    8f84:	cmp	ip, #0
    8f88:	bne	8d34 <doContent+0x1050>
    8f8c:	ldr	r3, [r9, #128]	; 0x80
    8f90:	cmp	r3, #0
    8f94:	beq	93fc <doContent+0x1718>
    8f98:	ldr	r0, [r0]
    8f9c:	mov	r2, #0
    8fa0:	blx	r3
    8fa4:	sub	sl, fp, #32
    8fa8:	b	8ca4 <doContent+0xfc0>
    8fac:	ldr	r3, [r9, #128]	; 0x80
    8fb0:	cmp	r3, #0
    8fb4:	beq	9078 <doContent+0x1394>
    8fb8:	ldr	r0, [sp, #56]	; 0x38
    8fbc:	ldr	r1, [ip]
    8fc0:	mov	r2, #0
    8fc4:	ldr	r0, [r0]
    8fc8:	blx	r3
    8fcc:	b	8ca4 <doContent+0xfc0>
    8fd0:	ldr	r3, [r9, #88]	; 0x58
    8fd4:	cmp	r3, #0
    8fd8:	beq	8ca4 <doContent+0xfc0>
    8fdc:	ldr	r1, [fp, #-40]	; 0xffffffd8
    8fe0:	ldr	r6, [fp, #-44]	; 0xffffffd4
    8fe4:	str	r1, [fp, #-72]	; 0xffffffb8
    8fe8:	ldrb	r0, [r5, #72]	; 0x48
    8fec:	cmp	r0, #0
    8ff0:	bne	881c <doContent+0xb38>
    8ff4:	ldr	r0, [r9, #152]	; 0x98
    8ff8:	ldr	r8, [sp, #40]	; 0x28
    8ffc:	ldr	r7, [sp, #36]	; 0x24
    9000:	sub	sl, fp, #32
    9004:	cmp	r0, r5
    9008:	ldrne	r8, [r9, #308]	; 0x134
    900c:	addne	r7, r8, #4
    9010:	ldr	r0, [r9, #52]	; 0x34
    9014:	ldr	r1, [r9, #56]	; 0x38
    9018:	mov	r2, r6
    901c:	mov	r3, sl
    9020:	str	r0, [fp, #-32]	; 0xffffffe0
    9024:	mov	r0, r5
    9028:	ldr	r4, [r5, #60]	; 0x3c
    902c:	str	r1, [sp]
    9030:	sub	r1, fp, #72	; 0x48
    9034:	blx	r4
    9038:	ldr	r0, [fp, #-72]	; 0xffffffb8
    903c:	str	r0, [r7]
    9040:	ldr	r1, [r9, #52]	; 0x34
    9044:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9048:	ldr	r0, [r9, #4]
    904c:	ldr	r3, [r9, #88]	; 0x58
    9050:	sub	r2, r2, r1
    9054:	blx	r3
    9058:	ldr	r0, [fp, #-72]	; 0xffffffb8
    905c:	str	r0, [r8]
    9060:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9064:	cmp	r0, r6
    9068:	bne	9010 <doContent+0x132c>
    906c:	b	882c <doContent+0xb48>
    9070:	mov	r3, #0
    9074:	b	90ac <doContent+0x13c8>
    9078:	ldr	r3, [r9, #88]	; 0x58
    907c:	cmp	r3, #0
    9080:	beq	8ca4 <doContent+0xfc0>
    9084:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9088:	ldr	r6, [fp, #-44]	; 0xffffffd4
    908c:	str	r1, [fp, #-72]	; 0xffffffb8
    9090:	ldrb	r0, [r5, #72]	; 0x48
    9094:	cmp	r0, #0
    9098:	ldr	r0, [sp, #56]	; 0x38
    909c:	beq	94a8 <doContent+0x17c4>
    90a0:	sub	r2, r6, r1
    90a4:	b	8824 <doContent+0xb40>
    90a8:	mov	r3, #1
    90ac:	ldr	r7, [lr, #60]	; 0x3c
    90b0:	ldr	r0, [lr, #68]	; 0x44
    90b4:	add	sl, r7, r0, lsl #2
    90b8:	cmp	sl, r7
    90bc:	beq	9280 <doContent+0x159c>
    90c0:	ldr	r4, [r7], #4
    90c4:	cmp	r4, #0
    90c8:	beq	90b8 <doContent+0x13d4>
    90cc:	ldr	r0, [r4, #4]
    90d0:	cmp	r0, #0
    90d4:	beq	90b8 <doContent+0x13d4>
    90d8:	tst	r3, #255	; 0xff
    90dc:	beq	9120 <doContent+0x143c>
    90e0:	ldr	r1, [r9, #440]	; 0x1b8
    90e4:	ldr	r0, [r9, #444]	; 0x1bc
    90e8:	cmp	r0, r1
    90ec:	bne	910c <doContent+0x1428>
    90f0:	ldr	r0, [sp, #72]	; 0x48
    90f4:	bl	6948 <poolGrow>
    90f8:	cmp	r0, #0
    90fc:	beq	9788 <doContent+0x1aa4>
    9100:	ldr	r0, [sp, #76]	; 0x4c
    9104:	ldr	ip, [sp, #28]
    9108:	ldr	r0, [r0]
    910c:	ldr	r2, [sp, #76]	; 0x4c
    9110:	add	r1, r0, #1
    9114:	str	r1, [r2]
    9118:	mov	r1, #12
    911c:	strb	r1, [r0]
    9120:	ldr	r3, [r4]
    9124:	ldr	r2, [r9, #440]	; 0x1b8
    9128:	ldr	r0, [r9, #444]	; 0x1bc
    912c:	ldrb	r1, [r3]
    9130:	sub	r2, r0, r2
    9134:	clz	r2, r2
    9138:	lsr	r2, r2, #5
    913c:	cmp	r1, #0
    9140:	beq	91a8 <doContent+0x14c4>
    9144:	add	r8, r3, #1
    9148:	tst	r2, #1
    914c:	bne	9184 <doContent+0x14a0>
    9150:	add	r2, r0, #1
    9154:	str	r2, [r9, #444]	; 0x1bc
    9158:	strb	r1, [r0]
    915c:	ldr	r2, [r9, #440]	; 0x1b8
    9160:	ldr	r0, [r9, #444]	; 0x1bc
    9164:	ldrb	r1, [r8], #1
    9168:	sub	r2, r0, r2
    916c:	cmp	r1, #0
    9170:	clz	r2, r2
    9174:	lsr	r2, r2, #5
    9178:	beq	91a8 <doContent+0x14c4>
    917c:	tst	r2, #1
    9180:	beq	9150 <doContent+0x146c>
    9184:	ldr	r0, [sp, #72]	; 0x48
    9188:	bl	6948 <poolGrow>
    918c:	cmp	r0, #0
    9190:	beq	9788 <doContent+0x1aa4>
    9194:	ldr	r0, [sp, #76]	; 0x4c
    9198:	ldrb	r1, [r8, #-1]
    919c:	ldr	ip, [sp, #28]
    91a0:	ldr	r0, [r0]
    91a4:	b	9150 <doContent+0x146c>
    91a8:	cmp	r2, #0
    91ac:	beq	91cc <doContent+0x14e8>
    91b0:	ldr	r0, [sp, #72]	; 0x48
    91b4:	bl	6948 <poolGrow>
    91b8:	cmp	r0, #0
    91bc:	beq	9788 <doContent+0x1aa4>
    91c0:	ldr	r0, [sp, #76]	; 0x4c
    91c4:	ldr	ip, [sp, #28]
    91c8:	ldr	r0, [r0]
    91cc:	add	r1, r0, #1
    91d0:	ldr	lr, [sp, #24]
    91d4:	mov	r3, #1
    91d8:	str	r1, [r9, #444]	; 0x1bc
    91dc:	mov	r1, #61	; 0x3d
    91e0:	strb	r1, [r0]
    91e4:	ldr	r0, [r4, #4]
    91e8:	ldrb	r1, [r9, #488]	; 0x1e8
    91ec:	ldr	r0, [r0, #20]
    91f0:	cmp	r1, #0
    91f4:	movwne	r1, #1
    91f8:	sub	r2, r0, r1
    91fc:	cmp	r2, #1
    9200:	blt	90b8 <doContent+0x13d4>
    9204:	sub	lr, r1, r0
    9208:	mov	r8, #0
    920c:	str	lr, [sp, #20]
    9210:	b	923c <doContent+0x1558>
    9214:	ldr	r1, [r4, #4]
    9218:	ldr	r3, [sp, #76]	; 0x4c
    921c:	add	r2, r0, #1
    9220:	ldr	r1, [r1, #16]
    9224:	ldrb	r1, [r1, -r8]
    9228:	sub	r8, r8, #1
    922c:	str	r2, [r3]
    9230:	cmp	lr, r8
    9234:	strb	r1, [r0]
    9238:	beq	9270 <doContent+0x158c>
    923c:	ldr	r1, [r9, #440]	; 0x1b8
    9240:	ldr	r0, [r9, #444]	; 0x1bc
    9244:	cmp	r0, r1
    9248:	bne	9214 <doContent+0x1530>
    924c:	ldr	r0, [sp, #72]	; 0x48
    9250:	bl	6948 <poolGrow>
    9254:	cmp	r0, #0
    9258:	beq	9788 <doContent+0x1aa4>
    925c:	ldr	r0, [sp, #76]	; 0x4c
    9260:	ldr	ip, [sp, #28]
    9264:	ldr	lr, [sp, #20]
    9268:	ldr	r0, [r0]
    926c:	b	9214 <doContent+0x1530>
    9270:	ldr	lr, [sp, #24]
    9274:	mov	r3, #1
    9278:	cmp	sl, r7
    927c:	bne	90c0 <doContent+0x13dc>
    9280:	ldr	r4, [lr]
    9284:	ldr	r0, [lr, #8]
    9288:	sub	sl, fp, #32
    928c:	add	r8, r4, r0, lsl #2
    9290:	cmp	r8, r4
    9294:	beq	9378 <doContent+0x1694>
    9298:	ldr	r7, [r4], #4
    929c:	cmp	r7, #0
    92a0:	beq	9290 <doContent+0x15ac>
    92a4:	ldrb	r0, [r7, #32]
    92a8:	cmp	r0, #0
    92ac:	beq	9290 <doContent+0x15ac>
    92b0:	tst	r3, #255	; 0xff
    92b4:	beq	92fc <doContent+0x1618>
    92b8:	ldr	r1, [r9, #440]	; 0x1b8
    92bc:	ldr	r0, [r9, #444]	; 0x1bc
    92c0:	cmp	r0, r1
    92c4:	bne	92e8 <doContent+0x1604>
    92c8:	ldr	r0, [sp, #72]	; 0x48
    92cc:	bl	6948 <poolGrow>
    92d0:	cmp	r0, #0
    92d4:	beq	9788 <doContent+0x1aa4>
    92d8:	ldr	r0, [sp, #76]	; 0x4c
    92dc:	ldr	ip, [sp, #28]
    92e0:	sub	sl, fp, #32
    92e4:	ldr	r0, [r0]
    92e8:	ldr	r2, [sp, #76]	; 0x4c
    92ec:	add	r1, r0, #1
    92f0:	str	r1, [r2]
    92f4:	mov	r1, #12
    92f8:	strb	r1, [r0]
    92fc:	ldr	r1, [r7]
    9300:	mov	r3, #1
    9304:	ldrb	r0, [r1]
    9308:	cmp	r0, #0
    930c:	beq	9290 <doContent+0x15ac>
    9310:	add	r7, r1, #1
    9314:	b	9334 <doContent+0x1650>
    9318:	ldr	r3, [sp, #76]	; 0x4c
    931c:	add	r2, r1, #1
    9320:	str	r2, [r3]
    9324:	strb	r0, [r1]
    9328:	ldrb	r0, [r7], #1
    932c:	cmp	r0, #0
    9330:	beq	9368 <doContent+0x1684>
    9334:	ldr	r2, [r9, #440]	; 0x1b8
    9338:	ldr	r1, [r9, #444]	; 0x1bc
    933c:	cmp	r1, r2
    9340:	bne	9318 <doContent+0x1634>
    9344:	ldr	r0, [sp, #72]	; 0x48
    9348:	bl	6948 <poolGrow>
    934c:	cmp	r0, #0
    9350:	beq	9788 <doContent+0x1aa4>
    9354:	ldr	r0, [sp, #76]	; 0x4c
    9358:	ldr	ip, [sp, #28]
    935c:	ldr	r1, [r0]
    9360:	ldrb	r0, [r7, #-1]
    9364:	b	9318 <doContent+0x1634>
    9368:	sub	sl, fp, #32
    936c:	mov	r3, #1
    9370:	cmp	r8, r4
    9374:	bne	9298 <doContent+0x15b4>
    9378:	ldr	r1, [r9, #440]	; 0x1b8
    937c:	ldr	r0, [r9, #444]	; 0x1bc
    9380:	cmp	r0, r1
    9384:	bne	93a8 <doContent+0x16c4>
    9388:	ldr	r0, [sp, #72]	; 0x48
    938c:	bl	6948 <poolGrow>
    9390:	cmp	r0, #0
    9394:	beq	9788 <doContent+0x1aa4>
    9398:	ldr	r0, [sp, #76]	; 0x4c
    939c:	ldr	ip, [sp, #28]
    93a0:	sub	sl, fp, #32
    93a4:	ldr	r0, [r0]
    93a8:	add	r1, r0, #1
    93ac:	mov	r2, #0
    93b0:	str	r1, [r9, #444]	; 0x1bc
    93b4:	strb	r2, [r0]
    93b8:	ldr	r1, [r9, #448]	; 0x1c0
    93bc:	strb	r2, [ip, #32]
    93c0:	cmp	r1, #0
    93c4:	beq	9648 <doContent+0x1964>
    93c8:	ldr	r7, [r9, #124]	; 0x7c
    93cc:	ldr	r0, [ip, #24]
    93d0:	ldr	r4, [r9, #120]	; 0x78
    93d4:	ldr	r3, [ip, #16]
    93d8:	ldr	r2, [ip, #20]
    93dc:	str	r0, [sp]
    93e0:	mov	r0, r7
    93e4:	blx	r4
    93e8:	cmp	r0, #0
    93ec:	beq	98e0 <doContent+0x1bfc>
    93f0:	ldr	r0, [r9, #448]	; 0x1c0
    93f4:	str	r0, [r9, #444]	; 0x1bc
    93f8:	b	882c <doContent+0xb48>
    93fc:	ldr	r3, [r9, #88]	; 0x58
    9400:	sub	sl, fp, #32
    9404:	cmp	r3, #0
    9408:	beq	8ca4 <doContent+0xfc0>
    940c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9410:	ldr	r6, [fp, #-44]	; 0xffffffd4
    9414:	str	r1, [fp, #-72]	; 0xffffffb8
    9418:	ldrb	r0, [r5, #72]	; 0x48
    941c:	cmp	r0, #0
    9420:	bne	881c <doContent+0xb38>
    9424:	ldr	r0, [r9, #152]	; 0x98
    9428:	ldr	r8, [sp, #40]	; 0x28
    942c:	ldr	r7, [sp, #36]	; 0x24
    9430:	sub	sl, fp, #32
    9434:	cmp	r0, r5
    9438:	ldrne	r8, [r9, #308]	; 0x134
    943c:	addne	r7, r8, #4
    9440:	ldr	r0, [r9, #52]	; 0x34
    9444:	ldr	r1, [r9, #56]	; 0x38
    9448:	mov	r2, r6
    944c:	mov	r3, sl
    9450:	str	r0, [fp, #-32]	; 0xffffffe0
    9454:	mov	r0, r5
    9458:	ldr	r4, [r5, #60]	; 0x3c
    945c:	str	r1, [sp]
    9460:	sub	r1, fp, #72	; 0x48
    9464:	blx	r4
    9468:	ldr	r0, [fp, #-72]	; 0xffffffb8
    946c:	str	r0, [r7]
    9470:	ldr	r1, [r9, #52]	; 0x34
    9474:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9478:	ldr	r0, [r9, #4]
    947c:	ldr	r3, [r9, #88]	; 0x58
    9480:	sub	r2, r2, r1
    9484:	blx	r3
    9488:	ldr	r0, [fp, #-72]	; 0xffffffb8
    948c:	str	r0, [r8]
    9490:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9494:	cmp	r0, r6
    9498:	bne	9440 <doContent+0x175c>
    949c:	b	882c <doContent+0xb48>
    94a0:	mov	ip, #0
    94a4:	b	8cf8 <doContent+0x1014>
    94a8:	ldr	r0, [r9, #152]	; 0x98
    94ac:	ldr	r8, [sp, #40]	; 0x28
    94b0:	ldr	r7, [sp, #36]	; 0x24
    94b4:	sub	sl, fp, #32
    94b8:	cmp	r0, r5
    94bc:	ldrne	r8, [r9, #308]	; 0x134
    94c0:	addne	r7, r8, #4
    94c4:	ldr	r0, [r9, #52]	; 0x34
    94c8:	ldr	r1, [r9, #56]	; 0x38
    94cc:	mov	r2, r6
    94d0:	mov	r3, sl
    94d4:	str	r0, [fp, #-32]	; 0xffffffe0
    94d8:	mov	r0, r5
    94dc:	ldr	r4, [r5, #60]	; 0x3c
    94e0:	str	r1, [sp]
    94e4:	sub	r1, fp, #72	; 0x48
    94e8:	blx	r4
    94ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
    94f0:	str	r0, [r7]
    94f4:	ldr	r1, [r9, #52]	; 0x34
    94f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    94fc:	ldr	r0, [r9, #4]
    9500:	ldr	r3, [r9, #88]	; 0x58
    9504:	sub	r2, r2, r1
    9508:	blx	r3
    950c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9510:	str	r0, [r8]
    9514:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9518:	cmp	r0, r6
    951c:	bne	94c4 <doContent+0x17e0>
    9520:	b	882c <doContent+0xb48>
    9524:	mov	r0, #0
    9528:	mov	r6, #1
    952c:	str	r0, [fp, #-72]	; 0xffffffb8
    9530:	b	9648 <doContent+0x1964>
    9534:	mov	r6, #1
    9538:	b	9648 <doContent+0x1964>
    953c:	mov	r6, #35	; 0x23
    9540:	b	9648 <doContent+0x1964>
    9544:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9548:	b	963c <doContent+0x1958>
    954c:	mov	r6, r0
    9550:	b	9648 <doContent+0x1964>
    9554:	ldr	r0, [fp, #16]
    9558:	cmp	r0, #0
    955c:	bne	9638 <doContent+0x1954>
    9560:	ldr	r3, [r9, #68]	; 0x44
    9564:	cmp	r3, #0
    9568:	beq	96d0 <doContent+0x19ec>
    956c:	ldrb	r0, [r5, #72]	; 0x48
    9570:	cmp	r0, #0
    9574:	ldr	r0, [sp, #56]	; 0x38
    9578:	beq	9734 <doContent+0x1a50>
    957c:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9580:	ldr	r0, [r0]
    9584:	sub	r2, r8, r1
    9588:	blx	r3
    958c:	b	9824 <doContent+0x1b40>
    9590:	ldr	r0, [fp, #16]
    9594:	cmp	r0, #0
    9598:	bne	9638 <doContent+0x1954>
    959c:	ldr	r1, [sp, #44]	; 0x2c
    95a0:	cmp	r1, #1
    95a4:	blt	96c8 <doContent+0x19e4>
    95a8:	ldr	r0, [r9, #320]	; 0x140
    95ac:	mov	r6, #13
    95b0:	cmp	r0, r1
    95b4:	beq	9638 <doContent+0x1954>
    95b8:	b	9648 <doContent+0x1964>
    95bc:	ldr	r0, [fp, #16]
    95c0:	cmp	r0, #0
    95c4:	bne	9638 <doContent+0x1954>
    95c8:	ldr	r0, [sp, #64]	; 0x40
    95cc:	str	r8, [r0]
    95d0:	ldr	r3, [r9, #68]	; 0x44
    95d4:	cmp	r3, #0
    95d8:	beq	9704 <doContent+0x1a20>
    95dc:	mov	r0, #10
    95e0:	sub	r1, fp, #72	; 0x48
    95e4:	mov	r2, #1
    95e8:	strb	r0, [fp, #-72]	; 0xffffffb8
    95ec:	ldr	r0, [sp, #56]	; 0x38
    95f0:	ldr	r0, [r0]
    95f4:	blx	r3
    95f8:	ldr	r1, [sp, #44]	; 0x2c
    95fc:	cmp	r1, #0
    9600:	beq	96c8 <doContent+0x19e4>
    9604:	ldr	r0, [r9, #320]	; 0x140
    9608:	mov	r6, #13
    960c:	cmp	r0, r1
    9610:	bne	9648 <doContent+0x1964>
    9614:	b	983c <doContent+0x1b58>
    9618:	ldr	r0, [fp, #16]
    961c:	cmp	r0, #0
    9620:	bne	9638 <doContent+0x1954>
    9624:	mov	r6, #6
    9628:	b	9648 <doContent+0x1964>
    962c:	ldr	r0, [fp, #16]
    9630:	cmp	r0, #0
    9634:	beq	96c0 <doContent+0x19dc>
    9638:	ldr	r0, [fp, #-40]	; 0xffffffd8
    963c:	ldr	r1, [fp, #12]
    9640:	mov	r6, #0
    9644:	str	r0, [r1]
    9648:	mov	r0, r6
    964c:	sub	sp, fp, #28
    9650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9654:	mov	r6, #4
    9658:	str	r7, [r4]
    965c:	b	9648 <doContent+0x1964>
    9660:	ldr	r0, [sp, #60]	; 0x3c
    9664:	str	r6, [r0]
    9668:	mov	r6, #7
    966c:	b	9648 <doContent+0x1964>
    9670:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9674:	ldr	r3, [fp, #12]
    9678:	mov	r0, r9
    967c:	mov	r2, r8
    9680:	bl	a84c <epilogProcessor>
    9684:	mov	r6, r0
    9688:	b	9648 <doContent+0x1964>
    968c:	mov	r6, #13
    9690:	b	9648 <doContent+0x1964>
    9694:	mov	r6, #14
    9698:	b	9648 <doContent+0x1964>
    969c:	movw	r0, #0
    96a0:	mov	r6, #0
    96a4:	movt	r0, #0
    96a8:	str	r0, [r9, #288]	; 0x120
    96ac:	b	9648 <doContent+0x1964>
    96b0:	ldr	r1, [r9, #20]
    96b4:	mov	r0, r7
    96b8:	blx	r1
    96bc:	b	9648 <doContent+0x1964>
    96c0:	mov	r6, #5
    96c4:	b	9648 <doContent+0x1964>
    96c8:	mov	r6, #3
    96cc:	b	9648 <doContent+0x1964>
    96d0:	ldr	r3, [r9, #88]	; 0x58
    96d4:	ldr	r7, [sp, #56]	; 0x38
    96d8:	cmp	r3, #0
    96dc:	beq	9824 <doContent+0x1b40>
    96e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    96e4:	str	r1, [fp, #-72]	; 0xffffffb8
    96e8:	ldrb	r0, [r5, #72]	; 0x48
    96ec:	cmp	r0, #0
    96f0:	beq	97a8 <doContent+0x1ac4>
    96f4:	ldr	r0, [r7]
    96f8:	sub	r2, r8, r1
    96fc:	blx	r3
    9700:	b	9820 <doContent+0x1b3c>
    9704:	ldr	r3, [r9, #88]	; 0x58
    9708:	ldr	r7, [sp, #56]	; 0x38
    970c:	cmp	r3, #0
    9710:	beq	95f8 <doContent+0x1914>
    9714:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9718:	str	r1, [fp, #-72]	; 0xffffffb8
    971c:	ldrb	r0, [r5, #72]	; 0x48
    9720:	cmp	r0, #0
    9724:	beq	9864 <doContent+0x1b80>
    9728:	ldr	r0, [r7]
    972c:	sub	r2, r8, r1
    9730:	b	95f4 <doContent+0x1910>
    9734:	ldr	r0, [r9, #52]	; 0x34
    9738:	ldr	r1, [r9, #56]	; 0x38
    973c:	sub	r3, fp, #72	; 0x48
    9740:	mov	r2, r8
    9744:	str	r0, [fp, #-72]	; 0xffffffb8
    9748:	mov	r0, r5
    974c:	ldr	r7, [r5, #60]	; 0x3c
    9750:	str	r1, [sp]
    9754:	sub	r1, fp, #40	; 0x28
    9758:	blx	r7
    975c:	ldr	r1, [r9, #52]	; 0x34
    9760:	ldr	r2, [fp, #-72]	; 0xffffffb8
    9764:	ldr	r0, [r9, #4]
    9768:	ldr	r3, [r9, #68]	; 0x44
    976c:	sub	r2, r2, r1
    9770:	blx	r3
    9774:	b	9824 <doContent+0x1b40>
    9778:	mov	r6, #12
    977c:	b	9648 <doContent+0x1964>
    9780:	mov	r6, #15
    9784:	b	9648 <doContent+0x1964>
    9788:	ldr	r1, [sp, #28]
    978c:	mov	r0, #0
    9790:	strb	r0, [r1, #32]
    9794:	b	9648 <doContent+0x1964>
    9798:	mov	r6, #11
    979c:	b	9648 <doContent+0x1964>
    97a0:	mov	r6, #24
    97a4:	b	9648 <doContent+0x1964>
    97a8:	ldr	r0, [r9, #152]	; 0x98
    97ac:	ldr	r6, [sp, #40]	; 0x28
    97b0:	ldr	r7, [sp, #36]	; 0x24
    97b4:	sub	sl, fp, #72	; 0x48
    97b8:	cmp	r0, r5
    97bc:	ldrne	r6, [r9, #308]	; 0x134
    97c0:	addne	r7, r6, #4
    97c4:	ldr	r0, [r9, #52]	; 0x34
    97c8:	ldr	r1, [r9, #56]	; 0x38
    97cc:	mov	r2, r8
    97d0:	sub	r3, fp, #32
    97d4:	str	r0, [fp, #-32]	; 0xffffffe0
    97d8:	mov	r0, r5
    97dc:	ldr	r4, [r5, #60]	; 0x3c
    97e0:	str	r1, [sp]
    97e4:	mov	r1, sl
    97e8:	blx	r4
    97ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
    97f0:	str	r0, [r7]
    97f4:	ldr	r1, [r9, #52]	; 0x34
    97f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    97fc:	ldr	r0, [r9, #4]
    9800:	ldr	r3, [r9, #88]	; 0x58
    9804:	sub	r2, r2, r1
    9808:	blx	r3
    980c:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9810:	str	r0, [r6]
    9814:	ldr	r0, [fp, #-72]	; 0xffffffb8
    9818:	cmp	r0, r8
    981c:	bne	97c4 <doContent+0x1ae0>
    9820:	ldr	r4, [sp, #60]	; 0x3c
    9824:	ldr	r1, [sp, #44]	; 0x2c
    9828:	cmp	r1, #0
    982c:	beq	984c <doContent+0x1b68>
    9830:	ldr	r0, [r9, #320]	; 0x140
    9834:	cmp	r0, r1
    9838:	bne	9858 <doContent+0x1b74>
    983c:	ldr	r0, [fp, #12]
    9840:	mov	r6, #0
    9844:	str	r8, [r0]
    9848:	b	9648 <doContent+0x1964>
    984c:	str	r8, [r4]
    9850:	mov	r6, #3
    9854:	b	9648 <doContent+0x1964>
    9858:	str	r8, [r4]
    985c:	mov	r6, #13
    9860:	b	9648 <doContent+0x1964>
    9864:	ldr	r0, [r9, #152]	; 0x98
    9868:	ldr	r6, [sp, #40]	; 0x28
    986c:	ldr	r7, [sp, #36]	; 0x24
    9870:	sub	sl, fp, #72	; 0x48
    9874:	cmp	r0, r5
    9878:	ldrne	r6, [r9, #308]	; 0x134
    987c:	addne	r7, r6, #4
    9880:	ldr	r0, [r9, #52]	; 0x34
    9884:	ldr	r1, [r9, #56]	; 0x38
    9888:	mov	r2, r8
    988c:	sub	r3, fp, #32
    9890:	str	r0, [fp, #-32]	; 0xffffffe0
    9894:	mov	r0, r5
    9898:	ldr	r4, [r5, #60]	; 0x3c
    989c:	str	r1, [sp]
    98a0:	mov	r1, sl
    98a4:	blx	r4
    98a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    98ac:	str	r0, [r7]
    98b0:	ldr	r1, [r9, #52]	; 0x34
    98b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
    98b8:	ldr	r0, [r9, #4]
    98bc:	ldr	r3, [r9, #88]	; 0x58
    98c0:	sub	r2, r2, r1
    98c4:	blx	r3
    98c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
    98cc:	str	r0, [r6]
    98d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
    98d4:	cmp	r0, r8
    98d8:	bne	9880 <doContent+0x1b9c>
    98dc:	b	95f8 <doContent+0x1914>
    98e0:	mov	r6, #21
    98e4:	b	9648 <doContent+0x1964>

000098e8 <storeAtts>:
    98e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    98ec:	add	fp, sp, #28
    98f0:	sub	sp, sp, #76	; 0x4c
    98f4:	ldr	sl, [r0, #364]	; 0x16c
    98f8:	str	r0, [fp, #-36]	; 0xffffffdc
    98fc:	ldr	r4, [r3]
    9900:	str	r2, [fp, #-48]	; 0xffffffd0
    9904:	str	r1, [fp, #-40]	; 0xffffffd8
    9908:	str	r3, [sp, #44]	; 0x2c
    990c:	add	r0, sl, #20
    9910:	str	r0, [fp, #-44]	; 0xffffffd4
    9914:	ldr	r0, [sl, #28]
    9918:	cmp	r0, #0
    991c:	beq	9a20 <storeAtts+0x138>
    9920:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9924:	ldrb	r8, [r4]
    9928:	ldr	r6, [r1, #512]	; 0x200
    992c:	cmp	r8, #0
    9930:	beq	995c <storeAtts+0x74>
    9934:	movw	r3, #16963	; 0x4243
    9938:	add	r2, r4, #1
    993c:	mov	r1, r8
    9940:	movt	r3, #15
    9944:	mul	r6, r6, r3
    9948:	uxtb	r1, r1
    994c:	eor	r6, r6, r1
    9950:	ldrb	r1, [r2], #1
    9954:	cmp	r1, #0
    9958:	bne	9944 <storeAtts+0x5c>
    995c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9960:	sub	r1, r0, #1
    9964:	and	r2, r6, r1
    9968:	ldr	r3, [r3]
    996c:	ldr	r7, [r3, r2, lsl #2]
    9970:	cmp	r7, #0
    9974:	beq	9a20 <storeAtts+0x138>
    9978:	rsb	r5, r0, #0
    997c:	lsr	r1, r1, #2
    9980:	mov	r9, #0
    9984:	and	r6, r6, r5
    9988:	str	r1, [sp, #40]	; 0x28
    998c:	str	r6, [sp, #48]	; 0x30
    9990:	add	r6, r4, #1
    9994:	str	r6, [sp, #52]	; 0x34
    9998:	b	99bc <storeAtts+0xd4>
    999c:	tst	r9, #255	; 0xff
    99a0:	beq	99f8 <storeAtts+0x110>
    99a4:	uxtb	r1, r9
    99a8:	subs	r2, r2, r1
    99ac:	addcc	r2, r2, r0
    99b0:	ldr	r7, [r3, r2, lsl #2]
    99b4:	cmp	r7, #0
    99b8:	beq	9a20 <storeAtts+0x138>
    99bc:	ldr	r1, [r7]
    99c0:	ldrb	r6, [r1]
    99c4:	cmp	r8, r6
    99c8:	bne	999c <storeAtts+0xb4>
    99cc:	ldr	r6, [sp, #52]	; 0x34
    99d0:	add	ip, r1, #1
    99d4:	mov	lr, r7
    99d8:	mov	r1, r8
    99dc:	tst	r1, #255	; 0xff
    99e0:	beq	9a14 <storeAtts+0x12c>
    99e4:	ldrb	r1, [r6], #1
    99e8:	ldrb	r5, [ip], #1
    99ec:	cmp	r1, r5
    99f0:	beq	99dc <storeAtts+0xf4>
    99f4:	b	999c <storeAtts+0xb4>
    99f8:	ldrb	r1, [sl, #24]
    99fc:	ldr	r7, [sp, #48]	; 0x30
    9a00:	ldr	r6, [sp, #40]	; 0x28
    9a04:	sub	r1, r1, #1
    9a08:	and	r1, r6, r7, lsr r1
    9a0c:	orr	r9, r1, #1
    9a10:	b	99a4 <storeAtts+0xbc>
    9a14:	mov	r5, lr
    9a18:	cmp	lr, #0
    9a1c:	bne	9acc <storeAtts+0x1e4>
    9a20:	add	r6, sl, #80	; 0x50
    9a24:	b	9a44 <storeAtts+0x15c>
    9a28:	ldrb	r1, [r4]
    9a2c:	add	r2, r0, #1
    9a30:	str	r2, [sl, #92]	; 0x5c
    9a34:	strb	r1, [r0]
    9a38:	ldrb	r0, [r4], #1
    9a3c:	cmp	r0, #0
    9a40:	beq	9a6c <storeAtts+0x184>
    9a44:	ldr	r1, [sl, #88]	; 0x58
    9a48:	ldr	r0, [sl, #92]	; 0x5c
    9a4c:	cmp	r0, r1
    9a50:	bne	9a28 <storeAtts+0x140>
    9a54:	mov	r0, r6
    9a58:	bl	6948 <poolGrow>
    9a5c:	cmp	r0, #0
    9a60:	beq	a7a0 <storeAtts+0xeb8>
    9a64:	ldr	r0, [sl, #92]	; 0x5c
    9a68:	b	9a28 <storeAtts+0x140>
    9a6c:	ldr	r2, [sl, #96]	; 0x60
    9a70:	ldr	r0, [sl, #92]	; 0x5c
    9a74:	mov	r6, #1
    9a78:	cmp	r2, #0
    9a7c:	str	r0, [sl, #96]	; 0x60
    9a80:	beq	a7a4 <storeAtts+0xebc>
    9a84:	ldr	r4, [fp, #-36]	; 0xffffffdc
    9a88:	ldr	r1, [fp, #-44]	; 0xffffffd4
    9a8c:	mov	r3, #24
    9a90:	mov	r0, r4
    9a94:	bl	6054 <lookup>
    9a98:	cmp	r0, #0
    9a9c:	beq	a7a4 <storeAtts+0xebc>
    9aa0:	mov	r1, r0
    9aa4:	ldrb	r0, [r4, #244]	; 0xf4
    9aa8:	cmp	r0, #0
    9aac:	beq	9ac8 <storeAtts+0x1e0>
    9ab0:	mov	r0, r4
    9ab4:	mov	r5, r1
    9ab8:	bl	b114 <setElementTypePrefix>
    9abc:	cmp	r0, #0
    9ac0:	bne	9acc <storeAtts+0x1e4>
    9ac4:	b	a7a4 <storeAtts+0xebc>
    9ac8:	mov	r5, r1
    9acc:	ldr	r4, [fp, #-36]	; 0xffffffdc
    9ad0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9ad4:	str	r5, [sp, #40]	; 0x28
    9ad8:	ldr	r8, [r5, #12]
    9adc:	ldr	r5, [fp, #-48]	; 0xffffffd0
    9ae0:	ldr	r2, [r4, #388]	; 0x184
    9ae4:	ldr	r3, [r4, #400]	; 0x190
    9ae8:	ldr	r6, [r0, #40]	; 0x28
    9aec:	mov	r1, r5
    9af0:	blx	r6
    9af4:	mov	ip, r4
    9af8:	ldr	r4, [r4, #388]	; 0x184
    9afc:	mov	r7, r0
    9b00:	add	r0, r0, r8
    9b04:	cmp	r0, r4
    9b08:	ble	9b5c <storeAtts+0x274>
    9b0c:	add	r1, r0, #16
    9b10:	mov	r6, ip
    9b14:	str	r1, [ip, #388]	; 0x184
    9b18:	lsl	r1, r1, #4
    9b1c:	ldr	r2, [ip, #16]
    9b20:	ldr	r0, [ip, #400]	; 0x190
    9b24:	blx	r2
    9b28:	cmp	r0, #0
    9b2c:	beq	a7a0 <storeAtts+0xeb8>
    9b30:	mov	r3, r0
    9b34:	cmp	r7, r4
    9b38:	mov	ip, r6
    9b3c:	str	r0, [r6, #400]	; 0x190
    9b40:	ble	9b5c <storeAtts+0x274>
    9b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9b48:	mov	r1, r5
    9b4c:	mov	r2, r7
    9b50:	ldr	r6, [r0, #40]	; 0x28
    9b54:	blx	r6
    9b58:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9b5c:	ldr	r3, [ip, #400]	; 0x190
    9b60:	cmp	r7, #1
    9b64:	str	r3, [sp, #48]	; 0x30
    9b68:	blt	9ec8 <storeAtts+0x5e0>
    9b6c:	ldr	r6, [fp, #-40]	; 0xffffffd8
    9b70:	ldr	r4, [r3]
    9b74:	str	r7, [sp, #28]
    9b78:	mov	r5, ip
    9b7c:	ldr	r2, [r6, #32]
    9b80:	mov	r0, r6
    9b84:	mov	r1, r4
    9b88:	blx	r2
    9b8c:	add	r3, r4, r0
    9b90:	mov	r0, r5
    9b94:	mov	r1, r6
    9b98:	mov	r2, r4
    9b9c:	bl	664c <getAttributeId>
    9ba0:	cmp	r0, #0
    9ba4:	beq	a7a0 <storeAtts+0xeb8>
    9ba8:	mov	r9, r0
    9bac:	add	r0, r5, #444	; 0x1bc
    9bb0:	mov	r7, #0
    9bb4:	str	r0, [fp, #-44]	; 0xffffffd4
    9bb8:	add	r0, r5, #432	; 0x1b0
    9bbc:	str	r0, [fp, #-48]	; 0xffffffd0
    9bc0:	mov	r0, #0
    9bc4:	str	r0, [sp, #36]	; 0x24
    9bc8:	mov	r0, #0
    9bcc:	str	r0, [sp, #52]	; 0x34
    9bd0:	ldr	r0, [r9]
    9bd4:	ldrb	r1, [r0, #-1]
    9bd8:	cmp	r1, #0
    9bdc:	bne	a804 <storeAtts+0xf1c>
    9be0:	mov	r1, #1
    9be4:	ldr	r2, [sp, #52]	; 0x34
    9be8:	ldr	r4, [fp, #-36]	; 0xffffffdc
    9bec:	strb	r1, [r0, #-1]
    9bf0:	ldr	r1, [sp, #48]	; 0x30
    9bf4:	ldr	r0, [r9]
    9bf8:	str	r0, [r1, r2, lsl #2]
    9bfc:	add	r2, r2, #1
    9c00:	ldr	r0, [r4, #400]	; 0x190
    9c04:	str	r2, [sp, #32]
    9c08:	add	r0, r0, r7, lsl #4
    9c0c:	ldrb	r1, [r0, #12]
    9c10:	cmp	r1, #0
    9c14:	beq	9c88 <storeAtts+0x3a0>
    9c18:	ldmib	r0, {r1, r6}
    9c1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9c20:	str	r1, [fp, #-32]	; 0xffffffe0
    9c24:	ldr	r0, [r0]
    9c28:	cmp	r0, #0
    9c2c:	bne	9c44 <storeAtts+0x35c>
    9c30:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9c34:	bl	6948 <poolGrow>
    9c38:	ldr	r4, [fp, #-36]	; 0xffffffdc
    9c3c:	cmp	r0, #0
    9c40:	beq	9f20 <storeAtts+0x638>
    9c44:	ldr	r0, [fp, #-40]	; 0xffffffd8
    9c48:	ldr	r1, [r4, #440]	; 0x1b8
    9c4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9c50:	mov	r2, r6
    9c54:	ldr	r5, [r0, #60]	; 0x3c
    9c58:	str	r1, [sp]
    9c5c:	sub	r1, fp, #32
    9c60:	blx	r5
    9c64:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9c68:	cmp	r0, r6
    9c6c:	beq	9cd0 <storeAtts+0x3e8>
    9c70:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9c74:	bl	6948 <poolGrow>
    9c78:	ldr	r4, [fp, #-36]	; 0xffffffdc
    9c7c:	cmp	r0, #0
    9c80:	bne	9c44 <storeAtts+0x35c>
    9c84:	b	9f20 <storeAtts+0x638>
    9c88:	ldrb	r1, [r9, #8]
    9c8c:	mov	r5, r7
    9c90:	mov	r7, #1
    9c94:	cmp	r1, #0
    9c98:	ldr	r1, [sp, #40]	; 0x28
    9c9c:	beq	9d40 <storeAtts+0x458>
    9ca0:	cmp	r8, #1
    9ca4:	blt	9d40 <storeAtts+0x458>
    9ca8:	ldr	r1, [r1, #20]
    9cac:	mov	r2, r8
    9cb0:	add	r1, r1, #4
    9cb4:	ldr	r3, [r1, #-4]
    9cb8:	cmp	r9, r3
    9cbc:	beq	9d3c <storeAtts+0x454>
    9cc0:	subs	r2, r2, #1
    9cc4:	add	r1, r1, #12
    9cc8:	bne	9cb4 <storeAtts+0x3cc>
    9ccc:	b	9d40 <storeAtts+0x458>
    9cd0:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9cd4:	ldr	r4, [sp, #32]
    9cd8:	ldr	r0, [ip, #448]	; 0x1c0
    9cdc:	cmp	r0, #0
    9ce0:	beq	9f24 <storeAtts+0x63c>
    9ce4:	ldr	r1, [ip, #440]	; 0x1b8
    9ce8:	ldr	r0, [ip, #444]	; 0x1bc
    9cec:	mov	r5, r7
    9cf0:	cmp	r0, r1
    9cf4:	bne	9d14 <storeAtts+0x42c>
    9cf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9cfc:	bl	6948 <poolGrow>
    9d00:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9d04:	cmp	r0, #0
    9d08:	beq	9f24 <storeAtts+0x63c>
    9d0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9d10:	ldr	r0, [r0]
    9d14:	add	r1, r0, #1
    9d18:	str	r1, [ip, #444]	; 0x1bc
    9d1c:	mov	r1, #0
    9d20:	strb	r1, [r0]
    9d24:	ldr	r1, [sp, #48]	; 0x30
    9d28:	ldr	r0, [ip, #448]	; 0x1c0
    9d2c:	cmp	r0, #0
    9d30:	str	r0, [r1, r4, lsl #2]
    9d34:	bne	9dfc <storeAtts+0x514>
    9d38:	b	a7a0 <storeAtts+0xeb8>
    9d3c:	ldrb	r7, [r1]
    9d40:	ldr	r3, [r0, #4]
    9d44:	ldr	r0, [r0, #8]
    9d48:	ldr	r1, [fp, #-40]	; 0xffffffd8
    9d4c:	mov	r2, r7
    9d50:	str	r0, [sp]
    9d54:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9d58:	str	r0, [sp, #4]
    9d5c:	mov	r0, r4
    9d60:	bl	b648 <appendAttributeValue>
    9d64:	cmp	r0, #0
    9d68:	bne	a6d4 <storeAtts+0xdec>
    9d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9d70:	cmp	r7, #0
    9d74:	ldr	r0, [r0]
    9d78:	beq	9d88 <storeAtts+0x4a0>
    9d7c:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9d80:	ldr	r4, [sp, #32]
    9d84:	b	9db8 <storeAtts+0x4d0>
    9d88:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9d8c:	ldr	r4, [sp, #32]
    9d90:	ldr	r1, [ip, #448]	; 0x1c0
    9d94:	cmp	r1, r0
    9d98:	beq	9db8 <storeAtts+0x4d0>
    9d9c:	mov	r1, r0
    9da0:	ldrb	r2, [r1, #-1]!
    9da4:	cmp	r2, #32
    9da8:	bne	9db8 <storeAtts+0x4d0>
    9dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9db0:	str	r1, [r0]
    9db4:	mov	r0, r1
    9db8:	ldr	r1, [ip, #440]	; 0x1b8
    9dbc:	cmp	r0, r1
    9dc0:	bne	9de0 <storeAtts+0x4f8>
    9dc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
    9dc8:	bl	6948 <poolGrow>
    9dcc:	cmp	r0, #0
    9dd0:	beq	a7a0 <storeAtts+0xeb8>
    9dd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    9dd8:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9ddc:	ldr	r0, [r0]
    9de0:	add	r1, r0, #1
    9de4:	str	r1, [ip, #444]	; 0x1bc
    9de8:	mov	r1, #0
    9dec:	strb	r1, [r0]
    9df0:	ldr	r1, [sp, #48]	; 0x30
    9df4:	ldr	r0, [ip, #448]	; 0x1c0
    9df8:	str	r0, [r1, r4, lsl #2]
    9dfc:	ldr	r0, [ip, #444]	; 0x1bc
    9e00:	str	r0, [ip, #448]	; 0x1c0
    9e04:	ldr	r1, [r9, #4]
    9e08:	cmp	r1, #0
    9e0c:	beq	9e60 <storeAtts+0x578>
    9e10:	ldrb	r0, [r9, #9]
    9e14:	cmp	r0, #0
    9e18:	beq	9e48 <storeAtts+0x560>
    9e1c:	ldr	r0, [sp, #48]	; 0x30
    9e20:	mov	r2, r9
    9e24:	ldr	r3, [r0, r4, lsl #2]
    9e28:	ldr	r0, [fp, #8]
    9e2c:	str	r0, [sp]
    9e30:	mov	r0, ip
    9e34:	bl	b248 <addBinding>
    9e38:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9e3c:	cmp	r0, #0
    9e40:	beq	9e6c <storeAtts+0x584>
    9e44:	b	a6d4 <storeAtts+0xdec>
    9e48:	ldr	r0, [r9]
    9e4c:	mov	r1, #2
    9e50:	strb	r1, [r0, #-1]
    9e54:	ldr	r0, [sp, #36]	; 0x24
    9e58:	add	r0, r0, #1
    9e5c:	str	r0, [sp, #36]	; 0x24
    9e60:	ldr	r0, [sp, #52]	; 0x34
    9e64:	add	r0, r0, #2
    9e68:	str	r0, [sp, #52]	; 0x34
    9e6c:	ldr	r0, [sp, #28]
    9e70:	add	r5, r5, #1
    9e74:	cmp	r5, r0
    9e78:	beq	a82c <storeAtts+0xf44>
    9e7c:	ldr	r0, [ip, #400]	; 0x190
    9e80:	mov	r7, r5
    9e84:	mov	r4, ip
    9e88:	ldr	r6, [r0, r5, lsl #4]
    9e8c:	ldr	r5, [fp, #-40]	; 0xffffffd8
    9e90:	ldr	r2, [r5, #32]
    9e94:	mov	r0, r5
    9e98:	mov	r1, r6
    9e9c:	blx	r2
    9ea0:	add	r3, r6, r0
    9ea4:	mov	r0, r4
    9ea8:	mov	r1, r5
    9eac:	mov	r2, r6
    9eb0:	bl	664c <getAttributeId>
    9eb4:	mov	r9, r0
    9eb8:	mov	r6, #1
    9ebc:	cmp	r0, #0
    9ec0:	bne	9bd0 <storeAtts+0x2e8>
    9ec4:	b	a7a4 <storeAtts+0xebc>
    9ec8:	mov	r0, #0
    9ecc:	mov	r4, #0
    9ed0:	str	r0, [sp, #36]	; 0x24
    9ed4:	ldr	lr, [sp, #40]	; 0x28
    9ed8:	str	r4, [ip, #392]	; 0x188
    9edc:	ldr	r0, [lr, #8]
    9ee0:	cmp	r0, #0
    9ee4:	beq	9f38 <storeAtts+0x650>
    9ee8:	ldr	r0, [r0]
    9eec:	ldrb	r1, [r0, #-1]
    9ef0:	cmp	r1, #0
    9ef4:	beq	9f38 <storeAtts+0x650>
    9ef8:	cmp	r4, #1
    9efc:	blt	9f40 <storeAtts+0x658>
    9f00:	mov	r1, #0
    9f04:	ldr	r2, [r3, r1, lsl #2]
    9f08:	cmp	r2, r0
    9f0c:	beq	a6cc <storeAtts+0xde4>
    9f10:	add	r1, r1, #2
    9f14:	cmp	r1, r4
    9f18:	blt	9f04 <storeAtts+0x61c>
    9f1c:	b	9f40 <storeAtts+0x658>
    9f20:	ldr	r4, [sp, #32]
    9f24:	ldr	r1, [sp, #48]	; 0x30
    9f28:	mov	r0, #0
    9f2c:	mov	r6, #1
    9f30:	str	r0, [r1, r4, lsl #2]
    9f34:	b	a7a4 <storeAtts+0xebc>
    9f38:	mvn	r0, #0
    9f3c:	str	r0, [ip, #396]	; 0x18c
    9f40:	cmp	r8, #1
    9f44:	str	r4, [sp, #52]	; 0x34
    9f48:	blt	a02c <storeAtts+0x744>
    9f4c:	mov	r4, #0
    9f50:	mov	r7, #1
    9f54:	mov	r9, #2
    9f58:	b	9f90 <storeAtts+0x6a8>
    9f5c:	strb	r7, [r6, #-1]
    9f60:	ldr	r2, [sp, #48]	; 0x30
    9f64:	ldr	r3, [sp, #52]	; 0x34
    9f68:	ldr	r1, [r0, r4]!
    9f6c:	ldr	r1, [r1]
    9f70:	str	r1, [r2, r3, lsl #2]!
    9f74:	add	r3, r3, #2
    9f78:	ldr	r0, [r0, #8]
    9f7c:	str	r3, [sp, #52]	; 0x34
    9f80:	str	r0, [r2, #4]
    9f84:	add	r4, r4, #12
    9f88:	subs	r8, r8, #1
    9f8c:	beq	a02c <storeAtts+0x744>
    9f90:	ldr	r0, [lr, #20]
    9f94:	ldr	r2, [r0, r4]
    9f98:	ldr	r6, [r2]
    9f9c:	ldrb	r1, [r6, #-1]
    9fa0:	cmp	r1, #0
    9fa4:	bne	9f84 <storeAtts+0x69c>
    9fa8:	add	r1, r0, r4
    9fac:	ldr	r3, [r1, #8]
    9fb0:	cmp	r3, #0
    9fb4:	beq	9f84 <storeAtts+0x69c>
    9fb8:	ldr	r1, [r2, #4]
    9fbc:	cmp	r1, #0
    9fc0:	beq	9f5c <storeAtts+0x674>
    9fc4:	ldrb	r5, [r2, #9]
    9fc8:	cmp	r5, #0
    9fcc:	beq	9ff4 <storeAtts+0x70c>
    9fd0:	ldr	r0, [fp, #8]
    9fd4:	str	r0, [sp]
    9fd8:	mov	r0, ip
    9fdc:	bl	b248 <addBinding>
    9fe0:	ldr	lr, [sp, #40]	; 0x28
    9fe4:	ldr	ip, [fp, #-36]	; 0xffffffdc
    9fe8:	cmp	r0, #0
    9fec:	beq	9f84 <storeAtts+0x69c>
    9ff0:	b	a6d4 <storeAtts+0xdec>
    9ff4:	strb	r9, [r6, #-1]
    9ff8:	ldr	r2, [sp, #48]	; 0x30
    9ffc:	ldr	r3, [sp, #52]	; 0x34
    a000:	ldr	r1, [r0, r4]!
    a004:	ldr	r1, [r1]
    a008:	str	r1, [r2, r3, lsl #2]!
    a00c:	add	r3, r3, #2
    a010:	ldr	r0, [r0, #8]
    a014:	str	r3, [sp, #52]	; 0x34
    a018:	str	r0, [r2, #4]
    a01c:	ldr	r0, [sp, #36]	; 0x24
    a020:	add	r0, r0, #1
    a024:	str	r0, [sp, #36]	; 0x24
    a028:	b	9f84 <storeAtts+0x69c>
    a02c:	ldr	r5, [sp, #36]	; 0x24
    a030:	ldr	r9, [sp, #48]	; 0x30
    a034:	ldr	r6, [sp, #52]	; 0x34
    a038:	mov	r4, #0
    a03c:	cmp	r5, #0
    a040:	str	r4, [r9, r6, lsl #2]
    a044:	beq	a594 <storeAtts+0xcac>
    a048:	ldrb	r0, [ip, #412]	; 0x19c
    a04c:	lsl	r2, r5, #1
    a050:	mov	r1, #0
    a054:	cmp	r1, r2, asr r0
    a058:	beq	a0c0 <storeAtts+0x7d8>
    a05c:	add	r2, r0, #1
    a060:	uxtb	r0, r0
    a064:	cmp	r1, r5, asr r0
    a068:	mov	r0, r2
    a06c:	bne	a05c <storeAtts+0x774>
    a070:	uxtb	r0, r2
    a074:	mov	r6, ip
    a078:	cmp	r0, #3
    a07c:	mov	r0, #12
    a080:	movls	r2, #3
    a084:	uxtb	r4, r2
    a088:	strb	r2, [ip, #412]	; 0x19c
    a08c:	ldr	r2, [ip, #16]
    a090:	lsl	r1, r0, r4
    a094:	ldr	r0, [ip, #404]	; 0x194
    a098:	blx	r2
    a09c:	cmp	r0, #0
    a0a0:	beq	a7a0 <storeAtts+0xeb8>
    a0a4:	ldr	lr, [sp, #40]	; 0x28
    a0a8:	str	r0, [r6, #404]	; 0x194
    a0ac:	mov	r0, #1
    a0b0:	mov	ip, r6
    a0b4:	lsl	r0, r0, r4
    a0b8:	str	r0, [fp, #-44]	; 0xffffffd4
    a0bc:	b	a0d8 <storeAtts+0x7f0>
    a0c0:	ldr	r1, [ip, #408]	; 0x198
    a0c4:	mov	r2, #1
    a0c8:	lsl	r0, r2, r0
    a0cc:	str	r0, [fp, #-44]	; 0xffffffd4
    a0d0:	cmp	r1, #0
    a0d4:	bne	a150 <storeAtts+0x868>
    a0d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a0dc:	ldr	r2, [ip, #404]	; 0x194
    a0e0:	ands	r1, r0, #3
    a0e4:	sub	r3, r0, #1
    a0e8:	beq	a10c <storeAtts+0x824>
    a0ec:	add	r0, r3, r3, lsl #1
    a0f0:	mvn	r6, #0
    a0f4:	add	r7, r2, r0, lsl #2
    a0f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a0fc:	str	r6, [r7], #-12
    a100:	subs	r1, r1, #1
    a104:	sub	r0, r0, #1
    a108:	bne	a0fc <storeAtts+0x814>
    a10c:	mvn	r1, #0
    a110:	cmp	r3, #3
    a114:	bcs	a120 <storeAtts+0x838>
    a118:	ldr	r6, [sp, #52]	; 0x34
    a11c:	b	a150 <storeAtts+0x868>
    a120:	add	r1, r0, r0, lsl #1
    a124:	ldr	r6, [sp, #52]	; 0x34
    a128:	add	r1, r2, r1, lsl #2
    a12c:	sub	r2, r1, #24
    a130:	mvn	r1, #0
    a134:	str	r1, [r2]
    a138:	str	r1, [r2, #12]
    a13c:	str	r1, [r2, #-12]
    a140:	str	r1, [r2, #-24]	; 0xffffffe8
    a144:	sub	r2, r2, #48	; 0x30
    a148:	subs	r0, r0, #4
    a14c:	bne	a134 <storeAtts+0x84c>
    a150:	sub	r0, r1, #1
    a154:	cmp	r6, #1
    a158:	str	r0, [sp, #32]
    a15c:	str	r0, [ip, #408]	; 0x198
    a160:	blt	a590 <storeAtts+0xca8>
    a164:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a168:	mov	r4, #0
    a16c:	rsb	r1, r0, #0
    a170:	sub	r0, r0, #1
    a174:	str	r1, [sp, #8]
    a178:	add	r1, ip, #432	; 0x1b0
    a17c:	str	r0, [sp, #12]
    a180:	lsr	r0, r0, #2
    a184:	str	r1, [fp, #-40]	; 0xffffffd8
    a188:	mov	r1, #0
    a18c:	str	r0, [sp, #24]
    a190:	ldr	r7, [r9, r4, lsl #2]
    a194:	ldrb	r0, [r7, #-1]
    a198:	cmp	r0, #2
    a19c:	bne	a2b4 <storeAtts+0x9cc>
    a1a0:	ldr	r8, [ip, #512]	; 0x200
    a1a4:	strb	r1, [r7, #-1]
    a1a8:	mov	r6, #1
    a1ac:	str	r5, [sp, #36]	; 0x24
    a1b0:	ldr	r0, [sl, #48]	; 0x30
    a1b4:	cmp	r0, #0
    a1b8:	beq	a7a4 <storeAtts+0xebc>
    a1bc:	ldrb	lr, [r7]
    a1c0:	ldr	r1, [ip, #512]	; 0x200
    a1c4:	cmp	lr, #0
    a1c8:	beq	a1f4 <storeAtts+0x90c>
    a1cc:	movw	r6, #16963	; 0x4243
    a1d0:	add	r2, r7, #1
    a1d4:	mov	r3, lr
    a1d8:	movt	r6, #15
    a1dc:	mul	r1, r1, r6
    a1e0:	uxtb	r3, r3
    a1e4:	eor	r1, r1, r3
    a1e8:	ldrb	r3, [r2], #1
    a1ec:	cmp	r3, #0
    a1f0:	bne	a1dc <storeAtts+0x8f4>
    a1f4:	ldr	r3, [sl, #40]	; 0x28
    a1f8:	sub	r6, r0, #1
    a1fc:	and	r2, r1, r6
    a200:	ldr	r9, [r3, r2, lsl #2]
    a204:	str	r3, [fp, #-48]	; 0xffffffd0
    a208:	cmp	r9, #0
    a20c:	beq	a7a0 <storeAtts+0xeb8>
    a210:	rsb	r5, r0, #0
    a214:	mov	ip, #0
    a218:	and	r1, r1, r5
    a21c:	str	r1, [sp, #20]
    a220:	add	r1, r7, #1
    a224:	str	r1, [sp, #28]
    a228:	lsr	r1, r6, #2
    a22c:	str	r1, [sp, #16]
    a230:	b	a25c <storeAtts+0x974>
    a234:	tst	ip, #255	; 0xff
    a238:	beq	a298 <storeAtts+0x9b0>
    a23c:	uxtb	r1, ip
    a240:	mov	lr, r3
    a244:	subs	r2, r2, r1
    a248:	ldr	r1, [fp, #-48]	; 0xffffffd0
    a24c:	addcc	r2, r2, r0
    a250:	ldr	r9, [r1, r2, lsl #2]
    a254:	cmp	r9, #0
    a258:	beq	a7a0 <storeAtts+0xeb8>
    a25c:	ldr	r1, [r9]
    a260:	mov	r3, lr
    a264:	ldrb	r6, [r1]
    a268:	cmp	lr, r6
    a26c:	bne	a234 <storeAtts+0x94c>
    a270:	add	r6, r1, #1
    a274:	ldr	r1, [sp, #28]
    a278:	mov	lr, r3
    a27c:	tst	lr, #255	; 0xff
    a280:	beq	a2bc <storeAtts+0x9d4>
    a284:	ldrb	lr, [r1], #1
    a288:	ldrb	r5, [r6], #1
    a28c:	cmp	lr, r5
    a290:	beq	a27c <storeAtts+0x994>
    a294:	b	a234 <storeAtts+0x94c>
    a298:	ldrb	r1, [sl, #44]	; 0x2c
    a29c:	ldr	r6, [sp, #20]
    a2a0:	ldr	r5, [sp, #16]
    a2a4:	sub	r1, r1, #1
    a2a8:	and	r1, r5, r6, lsr r1
    a2ac:	orr	ip, r1, #1
    a2b0:	b	a23c <storeAtts+0x954>
    a2b4:	strb	r1, [r7, #-1]
    a2b8:	b	a57c <storeAtts+0xc94>
    a2bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a2c0:	cmp	r9, #0
    a2c4:	beq	a7a0 <storeAtts+0xeb8>
    a2c8:	ldr	r0, [r9, #4]
    a2cc:	mov	r6, #1
    a2d0:	cmp	r0, #0
    a2d4:	beq	a7a4 <storeAtts+0xebc>
    a2d8:	ldr	r2, [r0, #4]
    a2dc:	cmp	r2, #0
    a2e0:	beq	a6dc <storeAtts+0xdf4>
    a2e4:	ldr	r0, [r2, #20]
    a2e8:	str	r2, [fp, #-48]	; 0xffffffd0
    a2ec:	cmp	r0, #1
    a2f0:	blt	a360 <storeAtts+0xa78>
    a2f4:	movw	r5, #16963	; 0x4243
    a2f8:	mov	r9, #0
    a2fc:	movt	r5, #15
    a300:	b	a328 <storeAtts+0xa40>
    a304:	add	r1, r0, #1
    a308:	add	r9, r9, #1
    a30c:	str	r1, [r3, #444]	; 0x1bc
    a310:	strb	r6, [r0]
    a314:	mul	r0, r8, r5
    a318:	eor	r8, r0, r6
    a31c:	ldr	r0, [r2, #20]
    a320:	cmp	r9, r0
    a324:	bge	a368 <storeAtts+0xa80>
    a328:	ldr	r0, [r2, #16]
    a32c:	ldr	r1, [r3, #440]	; 0x1b8
    a330:	ldrb	r6, [r0, r9]
    a334:	ldr	r0, [r3, #444]	; 0x1bc
    a338:	cmp	r0, r1
    a33c:	bne	a304 <storeAtts+0xa1c>
    a340:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a344:	bl	6948 <poolGrow>
    a348:	cmp	r0, #0
    a34c:	beq	a7a0 <storeAtts+0xeb8>
    a350:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a354:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a358:	ldr	r0, [r3, #444]	; 0x1bc
    a35c:	b	a304 <storeAtts+0xa1c>
    a360:	movw	r5, #16963	; 0x4243
    a364:	movt	r5, #15
    a368:	ldrb	r0, [r7], #1
    a36c:	cmp	r0, #58	; 0x3a
    a370:	bne	a368 <storeAtts+0xa80>
    a374:	b	a398 <storeAtts+0xab0>
    a378:	add	r2, r0, #1
    a37c:	str	r2, [r3, #444]	; 0x1bc
    a380:	strb	r1, [r0]
    a384:	mul	r0, r8, r5
    a388:	eor	r8, r0, r6
    a38c:	ldrb	r0, [r7], #1
    a390:	cmp	r0, #0
    a394:	beq	a3d0 <storeAtts+0xae8>
    a398:	ldr	r1, [r3, #440]	; 0x1b8
    a39c:	ldr	r0, [r3, #444]	; 0x1bc
    a3a0:	ldrb	r6, [r7]
    a3a4:	cmp	r0, r1
    a3a8:	mov	r1, r6
    a3ac:	bne	a378 <storeAtts+0xa90>
    a3b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a3b4:	bl	6948 <poolGrow>
    a3b8:	cmp	r0, #0
    a3bc:	beq	a7a0 <storeAtts+0xeb8>
    a3c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a3c4:	ldrb	r1, [r7]
    a3c8:	ldr	r0, [r3, #444]	; 0x1bc
    a3cc:	b	a378 <storeAtts+0xa90>
    a3d0:	ldr	r0, [sp, #12]
    a3d4:	ldr	lr, [r3, #404]	; 0x194
    a3d8:	ldr	r1, [sp, #32]
    a3dc:	and	r7, r8, r0
    a3e0:	add	r0, r7, r7, lsl #1
    a3e4:	ldr	r0, [lr, r0, lsl #2]
    a3e8:	cmp	r0, r1
    a3ec:	bne	a4c4 <storeAtts+0xbdc>
    a3f0:	ldr	r0, [sp, #8]
    a3f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a3f8:	mov	r9, #0
    a3fc:	and	ip, r8, r0
    a400:	b	a43c <storeAtts+0xb54>
    a404:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a408:	cmp	r3, #0
    a40c:	bne	a838 <storeAtts+0xf50>
    a410:	tst	r9, #255	; 0xff
    a414:	beq	a4a8 <storeAtts+0xbc0>
    a418:	uxtb	r0, r9
    a41c:	ldr	r1, [sp, #32]
    a420:	subs	r7, r7, r0
    a424:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a428:	addlt	r7, r7, r0
    a42c:	add	r0, r7, r7, lsl #1
    a430:	ldr	r0, [lr, r0, lsl #2]
    a434:	cmp	r0, r1
    a438:	bne	a4c8 <storeAtts+0xbe0>
    a43c:	add	r0, r7, r7, lsl #1
    a440:	add	r6, lr, r0, lsl #2
    a444:	ldr	r0, [r6, #4]
    a448:	cmp	r8, r0
    a44c:	bne	a410 <storeAtts+0xb28>
    a450:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a454:	ldr	r1, [r0, #448]	; 0x1c0
    a458:	ldrb	r2, [r1]
    a45c:	clz	r0, r2
    a460:	cmp	r2, #0
    a464:	lsr	r3, r0, #5
    a468:	beq	a404 <storeAtts+0xb1c>
    a46c:	ldr	r0, [r6, #8]
    a470:	ldrb	r5, [r0]
    a474:	cmp	r2, r5
    a478:	bne	a404 <storeAtts+0xb1c>
    a47c:	add	r6, r1, #1
    a480:	add	r1, r0, #1
    a484:	ldrb	r0, [r6], #1
    a488:	clz	r2, r0
    a48c:	cmp	r0, #0
    a490:	lsr	r3, r2, #5
    a494:	beq	a404 <storeAtts+0xb1c>
    a498:	ldrb	r2, [r1], #1
    a49c:	cmp	r0, r2
    a4a0:	beq	a484 <storeAtts+0xb9c>
    a4a4:	b	a404 <storeAtts+0xb1c>
    a4a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a4ac:	ldr	r1, [sp, #24]
    a4b0:	ldrb	r0, [r0, #412]	; 0x19c
    a4b4:	sub	r0, r0, #1
    a4b8:	and	r0, r1, ip, lsr r0
    a4bc:	orr	r9, r0, #1
    a4c0:	b	a418 <storeAtts+0xb30>
    a4c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    a4c8:	ldr	ip, [fp, #-36]	; 0xffffffdc
    a4cc:	ldr	lr, [sp, #40]	; 0x28
    a4d0:	ldr	r9, [sp, #48]	; 0x30
    a4d4:	ldrb	r0, [ip, #245]	; 0xf5
    a4d8:	cmp	r0, #0
    a4dc:	beq	a544 <storeAtts+0xc5c>
    a4e0:	ldr	r0, [ip, #444]	; 0x1bc
    a4e4:	ldrb	r1, [ip, #488]	; 0x1e8
    a4e8:	strb	r1, [r0, #-1]
    a4ec:	ldr	r0, [r2]
    a4f0:	ldr	r6, [r0]
    a4f4:	b	a520 <storeAtts+0xc38>
    a4f8:	ldr	ip, [fp, #-36]	; 0xffffffdc
    a4fc:	ldr	lr, [sp, #40]	; 0x28
    a500:	ldr	r0, [ip, #444]	; 0x1bc
    a504:	ldrb	r1, [r6]
    a508:	add	r2, r0, #1
    a50c:	str	r2, [ip, #444]	; 0x1bc
    a510:	strb	r1, [r0]
    a514:	ldrb	r0, [r6], #1
    a518:	cmp	r0, #0
    a51c:	beq	a544 <storeAtts+0xc5c>
    a520:	ldr	r1, [ip, #440]	; 0x1b8
    a524:	ldr	r0, [ip, #444]	; 0x1bc
    a528:	cmp	r0, r1
    a52c:	bne	a504 <storeAtts+0xc1c>
    a530:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a534:	bl	6948 <poolGrow>
    a538:	cmp	r0, #0
    a53c:	bne	a4f8 <storeAtts+0xc10>
    a540:	b	a7a0 <storeAtts+0xeb8>
    a544:	ldr	r0, [ip, #444]	; 0x1bc
    a548:	ldr	r1, [ip, #448]	; 0x1c0
    a54c:	ldr	r3, [sp, #32]
    a550:	add	r2, r7, r7, lsl #1
    a554:	str	r0, [ip, #448]	; 0x1c0
    a558:	str	r1, [r9, r4, lsl #2]
    a55c:	ldr	r0, [ip, #404]	; 0x194
    a560:	str	r3, [r0, r2, lsl #2]!
    a564:	ldr	r5, [sp, #36]	; 0x24
    a568:	str	r8, [r0, #4]
    a56c:	str	r1, [r0, #8]
    a570:	mov	r1, #0
    a574:	subs	r5, r5, #1
    a578:	beq	a840 <storeAtts+0xf58>
    a57c:	ldr	r6, [sp, #52]	; 0x34
    a580:	add	r4, r4, #2
    a584:	cmp	r4, r6
    a588:	blt	a190 <storeAtts+0x8a8>
    a58c:	b	a594 <storeAtts+0xcac>
    a590:	mov	r4, #0
    a594:	ldr	r5, [fp, #8]
    a598:	cmp	r4, r6
    a59c:	bge	a618 <storeAtts+0xd30>
    a5a0:	mvn	r0, r4
    a5a4:	mov	r1, #1
    a5a8:	add	r0, r6, r0
    a5ac:	add	r1, r1, r0, lsr #1
    a5b0:	ands	r1, r1, #3
    a5b4:	beq	a5d4 <storeAtts+0xcec>
    a5b8:	rsb	r1, r1, #0
    a5bc:	mov	r2, #0
    a5c0:	ldr	r3, [r9, r4, lsl #2]
    a5c4:	adds	r1, r1, #1
    a5c8:	add	r4, r4, #2
    a5cc:	strb	r2, [r3, #-1]
    a5d0:	bcc	a5c0 <storeAtts+0xcd8>
    a5d4:	cmp	r0, #6
    a5d8:	bcc	a618 <storeAtts+0xd30>
    a5dc:	add	r0, r9, r4, lsl #2
    a5e0:	mov	r1, #0
    a5e4:	add	r0, r0, #16
    a5e8:	ldr	r2, [r0, #-16]
    a5ec:	add	r4, r4, #8
    a5f0:	cmp	r4, r6
    a5f4:	strb	r1, [r2, #-1]
    a5f8:	ldr	r2, [r0, #-8]
    a5fc:	strb	r1, [r2, #-1]
    a600:	ldr	r2, [r0]
    a604:	strb	r1, [r2, #-1]
    a608:	ldr	r2, [r0, #8]
    a60c:	add	r0, r0, #32
    a610:	strb	r1, [r2, #-1]
    a614:	blt	a5e8 <storeAtts+0xd00>
    a618:	ldr	r0, [r5]
    a61c:	cmp	r0, #0
    a620:	beq	a640 <storeAtts+0xd58>
    a624:	mov	r1, #0
    a628:	ldr	r2, [r0, #12]
    a62c:	ldr	r2, [r2]
    a630:	strb	r1, [r2, #-1]
    a634:	ldr	r0, [r0, #4]
    a638:	cmp	r0, #0
    a63c:	bne	a628 <storeAtts+0xd40>
    a640:	ldrb	r0, [ip, #244]	; 0xf4
    a644:	mov	r6, #0
    a648:	cmp	r0, #0
    a64c:	beq	a7a4 <storeAtts+0xebc>
    a650:	ldr	r0, [lr, #4]
    a654:	cmp	r0, #0
    a658:	beq	a680 <storeAtts+0xd98>
    a65c:	ldr	sl, [r0, #4]
    a660:	cmp	sl, #0
    a664:	beq	a6dc <storeAtts+0xdf4>
    a668:	ldr	r0, [sp, #44]	; 0x2c
    a66c:	ldr	r4, [r0]
    a670:	ldrb	r0, [r4], #1
    a674:	cmp	r0, #58	; 0x3a
    a678:	bne	a670 <storeAtts+0xd88>
    a67c:	b	a698 <storeAtts+0xdb0>
    a680:	ldr	sl, [sl, #156]	; 0x9c
    a684:	cmp	sl, #0
    a688:	beq	a7a4 <storeAtts+0xebc>
    a68c:	ldr	r0, [sp, #44]	; 0x2c
    a690:	ldr	ip, [fp, #-36]	; 0xffffffdc
    a694:	ldr	r4, [r0]
    a698:	ldrb	r0, [ip, #245]	; 0xf5
    a69c:	cmp	r0, #0
    a6a0:	beq	a6e4 <storeAtts+0xdfc>
    a6a4:	ldr	r0, [sl]
    a6a8:	mov	r6, #0
    a6ac:	ldr	r0, [r0]
    a6b0:	cmp	r0, #0
    a6b4:	beq	a6f0 <storeAtts+0xe08>
    a6b8:	ldrb	r1, [r0, r6]
    a6bc:	add	r6, r6, #1
    a6c0:	cmp	r1, #0
    a6c4:	bne	a6b8 <storeAtts+0xdd0>
    a6c8:	b	a6f0 <storeAtts+0xe08>
    a6cc:	str	r1, [ip, #396]	; 0x18c
    a6d0:	b	9f40 <storeAtts+0x658>
    a6d4:	mov	r6, r0
    a6d8:	b	a7a4 <storeAtts+0xebc>
    a6dc:	mov	r6, #27
    a6e0:	b	a7a4 <storeAtts+0xebc>
    a6e4:	ldr	r0, [sl]
    a6e8:	mov	r6, #0
    a6ec:	ldr	r0, [r0]
    a6f0:	ldr	r2, [sp, #44]	; 0x2c
    a6f4:	mov	r7, #0
    a6f8:	str	r4, [r2, #4]
    a6fc:	ldr	r1, [sl, #20]
    a700:	str	r0, [r2, #8]
    a704:	str	r1, [r2, #16]
    a708:	str	r6, [r2, #20]
    a70c:	ldrb	r0, [r4, r7]
    a710:	add	r7, r7, #1
    a714:	cmp	r0, #0
    a718:	bne	a70c <storeAtts+0xe24>
    a71c:	ldr	r2, [sl, #24]
    a720:	add	r0, r1, r6
    a724:	add	r0, r0, r7
    a728:	cmp	r0, r2
    a72c:	ble	a7b0 <storeAtts+0xec8>
    a730:	ldr	r1, [ip, #12]
    a734:	add	r9, r0, #24
    a738:	mov	r5, ip
    a73c:	mov	r0, r9
    a740:	blx	r1
    a744:	cmp	r0, #0
    a748:	beq	a7a0 <storeAtts+0xeb8>
    a74c:	str	r9, [sl, #24]
    a750:	mov	r8, r0
    a754:	ldr	r1, [sl, #16]
    a758:	ldr	r2, [sl, #20]
    a75c:	bl	0 <memcpy>
    a760:	ldr	r1, [r5, #372]	; 0x174
    a764:	ldr	r0, [sl, #16]
    a768:	mov	r3, r5
    a76c:	cmp	r1, #0
    a770:	beq	a78c <storeAtts+0xea4>
    a774:	ldr	r2, [r1, #12]
    a778:	cmp	r2, r0
    a77c:	streq	r8, [r1, #12]
    a780:	ldr	r1, [r1]
    a784:	cmp	r1, #0
    a788:	bne	a774 <storeAtts+0xe8c>
    a78c:	ldr	r1, [r3, #20]
    a790:	blx	r1
    a794:	str	r8, [sl, #16]
    a798:	ldr	r1, [sl, #20]
    a79c:	b	a7b4 <storeAtts+0xecc>
    a7a0:	mov	r6, #1
    a7a4:	mov	r0, r6
    a7a8:	sub	sp, fp, #28
    a7ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a7b0:	ldr	r8, [sl, #16]
    a7b4:	add	r8, r8, r1
    a7b8:	mov	r1, r4
    a7bc:	mov	r2, r7
    a7c0:	mov	r0, r8
    a7c4:	bl	0 <memcpy>
    a7c8:	cmp	r6, #0
    a7cc:	beq	a7f0 <storeAtts+0xf08>
    a7d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a7d4:	add	r0, r8, r7
    a7d8:	mov	r2, r6
    a7dc:	ldrb	r1, [r1, #488]	; 0x1e8
    a7e0:	strb	r1, [r0, #-1]
    a7e4:	ldr	r1, [sl]
    a7e8:	ldr	r1, [r1]
    a7ec:	bl	0 <memcpy>
    a7f0:	ldr	r0, [sl, #16]
    a7f4:	ldr	r1, [sp, #44]	; 0x2c
    a7f8:	mov	r6, #0
    a7fc:	str	r0, [r1]
    a800:	b	a7a4 <storeAtts+0xebc>
    a804:	ldr	r1, [fp, #-36]	; 0xffffffdc
    a808:	ldr	r2, [fp, #-40]	; 0xffffffd8
    a80c:	mov	r6, #8
    a810:	ldr	r0, [r1, #152]	; 0x98
    a814:	cmp	r0, r2
    a818:	bne	a7a4 <storeAtts+0xebc>
    a81c:	ldr	r0, [r1, #400]	; 0x190
    a820:	ldr	r0, [r0, r7, lsl #4]
    a824:	str	r0, [r1, #296]	; 0x128
    a828:	b	a7a4 <storeAtts+0xebc>
    a82c:	ldr	r3, [sp, #48]	; 0x30
    a830:	ldr	r4, [sp, #52]	; 0x34
    a834:	b	9ed4 <storeAtts+0x5ec>
    a838:	mov	r6, #8
    a83c:	b	a7a4 <storeAtts+0xebc>
    a840:	ldr	r6, [sp, #52]	; 0x34
    a844:	add	r4, r4, #2
    a848:	b	a594 <storeAtts+0xcac>

0000a84c <epilogProcessor>:
    a84c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a850:	add	fp, sp, #28
    a854:	sub	sp, sp, #28
    a858:	mov	r5, r0
    a85c:	str	r1, [r0, #296]	; 0x128
    a860:	movw	r0, #0
    a864:	mov	r4, r2
    a868:	mov	r8, r1
    a86c:	mov	r9, #0
    a870:	add	r6, sp, #16
    a874:	add	sl, sp, #20
    a878:	str	r3, [sp, #8]
    a87c:	str	r2, [sp, #12]
    a880:	movt	r0, #0
    a884:	str	r0, [r5, #288]	; 0x120
    a888:	str	r9, [sp, #16]
    a88c:	mov	r1, r8
    a890:	mov	r2, r4
    a894:	mov	r3, r6
    a898:	ldr	r0, [r5, #152]	; 0x98
    a89c:	ldr	r7, [r0]
    a8a0:	blx	r7
    a8a4:	ldr	r7, [sp, #16]
    a8a8:	add	r1, r0, #15
    a8ac:	mov	r0, #9
    a8b0:	cmp	r1, #30
    a8b4:	str	r7, [r5, #300]	; 0x12c
    a8b8:	bhi	ab34 <epilogProcessor+0x2e8>
    a8bc:	add	r2, pc, #0
    a8c0:	ldr	pc, [r2, r1, lsl #2]
    a8c4:	.word	0x0000aa50
    a8c8:	.word	0x0000ab34
    a8cc:	.word	0x0000ab34
    a8d0:	.word	0x0000ab34
    a8d4:	.word	0x0000ab34
    a8d8:	.word	0x0000ab34
    a8dc:	.word	0x0000ab34
    a8e0:	.word	0x0000ab34
    a8e4:	.word	0x0000ab34
    a8e8:	.word	0x0000ab34
    a8ec:	.word	0x0000ab34
    a8f0:	.word	0x0000aaa0
    a8f4:	.word	0x0000ab34
    a8f8:	.word	0x0000aa84
    a8fc:	.word	0x0000aa90
    a900:	.word	0x0000aab4
    a904:	.word	0x0000ab34
    a908:	.word	0x0000ab34
    a90c:	.word	0x0000ab34
    a910:	.word	0x0000ab34
    a914:	.word	0x0000ab34
    a918:	.word	0x0000ab34
    a91c:	.word	0x0000ab34
    a920:	.word	0x0000ab34
    a924:	.word	0x0000ab34
    a928:	.word	0x0000ab34
    a92c:	.word	0x0000a940
    a930:	.word	0x0000ab34
    a934:	.word	0x0000a960
    a938:	.word	0x0000ab34
    a93c:	.word	0x0000a980
    a940:	ldr	r1, [r5, #152]	; 0x98
    a944:	mov	r0, r5
    a948:	mov	r2, r8
    a94c:	mov	r3, r7
    a950:	bl	76d8 <reportProcessingInstruction>
    a954:	cmp	r0, #0
    a958:	bne	aa18 <epilogProcessor+0x1cc>
    a95c:	b	aa38 <epilogProcessor+0x1ec>
    a960:	ldr	r1, [r5, #152]	; 0x98
    a964:	mov	r0, r5
    a968:	mov	r2, r8
    a96c:	mov	r3, r7
    a970:	bl	7a58 <reportComment>
    a974:	cmp	r0, #0
    a978:	bne	aa18 <epilogProcessor+0x1cc>
    a97c:	b	aa38 <epilogProcessor+0x1ec>
    a980:	ldr	r3, [r5, #88]	; 0x58
    a984:	cmp	r3, #0
    a988:	beq	aa18 <epilogProcessor+0x1cc>
    a98c:	ldr	r9, [r5, #152]	; 0x98
    a990:	str	r8, [sp, #24]
    a994:	ldrb	r0, [r9, #72]	; 0x48
    a998:	cmp	r0, #0
    a99c:	beq	a9b4 <epilogProcessor+0x168>
    a9a0:	ldr	r0, [r5, #4]
    a9a4:	sub	r2, r7, r8
    a9a8:	mov	r1, r8
    a9ac:	blx	r3
    a9b0:	b	aa10 <epilogProcessor+0x1c4>
    a9b4:	add	r8, sp, #24
    a9b8:	ldr	r0, [r5, #52]	; 0x34
    a9bc:	ldr	r1, [r5, #56]	; 0x38
    a9c0:	mov	r2, r7
    a9c4:	mov	r3, sl
    a9c8:	str	r0, [sp, #20]
    a9cc:	mov	r0, r9
    a9d0:	ldr	r4, [r9, #60]	; 0x3c
    a9d4:	str	r1, [sp]
    a9d8:	mov	r1, r8
    a9dc:	blx	r4
    a9e0:	ldr	r0, [sp, #24]
    a9e4:	str	r0, [r5, #300]	; 0x12c
    a9e8:	ldr	r1, [r5, #52]	; 0x34
    a9ec:	ldr	r2, [sp, #20]
    a9f0:	ldr	r0, [r5, #4]
    a9f4:	ldr	r3, [r5, #88]	; 0x58
    a9f8:	sub	r2, r2, r1
    a9fc:	blx	r3
    aa00:	ldr	r0, [sp, #24]
    aa04:	cmp	r7, r0
    aa08:	str	r0, [r5, #296]	; 0x128
    aa0c:	bne	a9b8 <epilogProcessor+0x16c>
    aa10:	ldr	r4, [sp, #12]
    aa14:	mov	r9, #0
    aa18:	ldr	r8, [sp, #16]
    aa1c:	str	r8, [r5, #296]	; 0x128
    aa20:	ldr	r0, [r5, #496]	; 0x1f0
    aa24:	cmp	r0, #2
    aa28:	beq	aa44 <epilogProcessor+0x1f8>
    aa2c:	cmp	r0, #3
    aa30:	bne	a888 <epilogProcessor+0x3c>
    aa34:	b	aaa0 <epilogProcessor+0x254>
    aa38:	mov	r0, #1
    aa3c:	sub	sp, fp, #28
    aa40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa44:	mov	r0, #35	; 0x23
    aa48:	sub	sp, fp, #28
    aa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa50:	ldr	r3, [r5, #88]	; 0x58
    aa54:	cmp	r3, #0
    aa58:	beq	ab40 <epilogProcessor+0x2f4>
    aa5c:	ldr	r4, [r5, #152]	; 0x98
    aa60:	str	r8, [sp, #24]
    aa64:	ldrb	r0, [r4, #72]	; 0x48
    aa68:	cmp	r0, #0
    aa6c:	beq	aac4 <epilogProcessor+0x278>
    aa70:	ldr	r0, [r5, #4]
    aa74:	sub	r2, r7, r8
    aa78:	mov	r1, r8
    aa7c:	blx	r3
    aa80:	b	ab24 <epilogProcessor+0x2d8>
    aa84:	ldrb	r1, [r5, #500]	; 0x1f4
    aa88:	mov	r0, #6
    aa8c:	b	aa98 <epilogProcessor+0x24c>
    aa90:	ldrb	r1, [r5, #500]	; 0x1f4
    aa94:	mov	r0, #5
    aa98:	cmp	r1, #0
    aa9c:	bne	ab34 <epilogProcessor+0x2e8>
    aaa0:	ldr	r0, [sp, #8]
    aaa4:	str	r8, [r0]
    aaa8:	mov	r0, #0
    aaac:	sub	sp, fp, #28
    aab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aab4:	mov	r0, #4
    aab8:	str	r7, [r5, #296]	; 0x128
    aabc:	sub	sp, fp, #28
    aac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aac4:	add	r8, sp, #24
    aac8:	add	r9, sp, #20
    aacc:	ldr	r0, [r5, #52]	; 0x34
    aad0:	ldr	r1, [r5, #56]	; 0x38
    aad4:	mov	r2, r7
    aad8:	mov	r3, r9
    aadc:	str	r0, [sp, #20]
    aae0:	mov	r0, r4
    aae4:	ldr	r6, [r4, #60]	; 0x3c
    aae8:	str	r1, [sp]
    aaec:	mov	r1, r8
    aaf0:	blx	r6
    aaf4:	ldr	r0, [sp, #24]
    aaf8:	str	r0, [r5, #300]	; 0x12c
    aafc:	ldr	r1, [r5, #52]	; 0x34
    ab00:	ldr	r2, [sp, #20]
    ab04:	ldr	r0, [r5, #4]
    ab08:	ldr	r3, [r5, #88]	; 0x58
    ab0c:	sub	r2, r2, r1
    ab10:	blx	r3
    ab14:	ldr	r0, [sp, #24]
    ab18:	cmp	r7, r0
    ab1c:	str	r0, [r5, #296]	; 0x128
    ab20:	bne	aacc <epilogProcessor+0x280>
    ab24:	ldr	r1, [r5, #496]	; 0x1f0
    ab28:	mov	r0, #35	; 0x23
    ab2c:	cmp	r1, #2
    ab30:	bne	ab3c <epilogProcessor+0x2f0>
    ab34:	sub	sp, fp, #28
    ab38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab3c:	ldr	r7, [sp, #16]
    ab40:	ldr	r0, [sp, #8]
    ab44:	str	r7, [r0]
    ab48:	b	aaa8 <epilogProcessor+0x25c>

0000ab4c <doCdataSection>:
    ab4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ab50:	add	fp, sp, #28
    ab54:	sub	sp, sp, #44	; 0x2c
    ab58:	mov	r4, r0
    ab5c:	ldr	r0, [r2]
    ab60:	mov	r6, r1
    ab64:	str	r3, [sp, #20]
    ab68:	str	r0, [sp, #32]
    ab6c:	ldr	r1, [r4, #152]	; 0x98
    ab70:	cmp	r1, r6
    ab74:	beq	ab80 <doCdataSection+0x34>
    ab78:	ldr	sl, [r4, #308]	; 0x134
    ab7c:	b	ab88 <doCdataSection+0x3c>
    ab80:	mov	sl, r4
    ab84:	str	r0, [sl, #296]!	; 0x128
    ab88:	str	r0, [sl]
    ab8c:	mov	r0, #0
    ab90:	add	r1, sl, #4
    ab94:	sub	r5, fp, #32
    ab98:	str	r2, [sp, #4]
    ab9c:	str	sl, [sp, #16]
    aba0:	str	r0, [r2]
    aba4:	add	r0, r4, #300	; 0x12c
    aba8:	str	r1, [sp, #24]
    abac:	str	r0, [sp, #8]
    abb0:	add	r0, r4, #296	; 0x128
    abb4:	str	r0, [sp, #12]
    abb8:	ldr	r7, [r6, #8]
    abbc:	ldr	r1, [sp, #32]
    abc0:	ldr	r2, [sp, #20]
    abc4:	mov	r0, r6
    abc8:	add	r3, sp, #28
    abcc:	blx	r7
    abd0:	ldr	r9, [sp, #28]
    abd4:	ldr	r1, [sp, #24]
    abd8:	add	r0, r0, #4
    abdc:	cmp	r0, #44	; 0x2c
    abe0:	str	r9, [r1]
    abe4:	bhi	af24 <doCdataSection+0x3d8>
    abe8:	add	r1, pc, #0
    abec:	ldr	pc, [r1, r0, lsl #2]
    abf0:	.word	0x0000af0c
    abf4:	.word	0x0000af24
    abf8:	.word	0x0000af34
    abfc:	.word	0x0000af0c
    ac00:	.word	0x0000af58
    ac04:	.word	0x0000af24
    ac08:	.word	0x0000af24
    ac0c:	.word	0x0000af24
    ac10:	.word	0x0000af24
    ac14:	.word	0x0000af24
    ac18:	.word	0x0000aca4
    ac1c:	.word	0x0000acd0
    ac20:	.word	0x0000af24
    ac24:	.word	0x0000af24
    ac28:	.word	0x0000af24
    ac2c:	.word	0x0000af24
    ac30:	.word	0x0000af24
    ac34:	.word	0x0000af24
    ac38:	.word	0x0000af24
    ac3c:	.word	0x0000af24
    ac40:	.word	0x0000af24
    ac44:	.word	0x0000af24
    ac48:	.word	0x0000af24
    ac4c:	.word	0x0000af24
    ac50:	.word	0x0000af24
    ac54:	.word	0x0000af24
    ac58:	.word	0x0000af24
    ac5c:	.word	0x0000af24
    ac60:	.word	0x0000af24
    ac64:	.word	0x0000af24
    ac68:	.word	0x0000af24
    ac6c:	.word	0x0000af24
    ac70:	.word	0x0000af24
    ac74:	.word	0x0000af24
    ac78:	.word	0x0000af24
    ac7c:	.word	0x0000af24
    ac80:	.word	0x0000af24
    ac84:	.word	0x0000af24
    ac88:	.word	0x0000af24
    ac8c:	.word	0x0000af24
    ac90:	.word	0x0000af24
    ac94:	.word	0x0000af24
    ac98:	.word	0x0000af24
    ac9c:	.word	0x0000af24
    aca0:	.word	0x0000af68
    aca4:	ldr	r8, [r4, #68]	; 0x44
    aca8:	cmp	r8, #0
    acac:	beq	acf8 <doCdataSection+0x1ac>
    acb0:	ldrb	r0, [r6, #72]	; 0x48
    acb4:	cmp	r0, #0
    acb8:	beq	ad64 <doCdataSection+0x218>
    acbc:	ldr	r1, [sp, #32]
    acc0:	ldr	r0, [r4, #4]
    acc4:	sub	r2, r9, r1
    acc8:	blx	r8
    accc:	b	adcc <doCdataSection+0x280>
    acd0:	ldr	r3, [r4, #68]	; 0x44
    acd4:	cmp	r3, #0
    acd8:	beq	ad30 <doCdataSection+0x1e4>
    acdc:	mov	r0, #10
    ace0:	mov	r1, r5
    ace4:	mov	r2, #1
    ace8:	strb	r0, [fp, #-32]	; 0xffffffe0
    acec:	ldr	r0, [r4, #4]
    acf0:	blx	r3
    acf4:	b	aed8 <doCdataSection+0x38c>
    acf8:	ldr	r3, [r4, #88]	; 0x58
    acfc:	sub	r5, fp, #32
    ad00:	cmp	r3, #0
    ad04:	beq	aed8 <doCdataSection+0x38c>
    ad08:	ldr	r1, [sp, #32]
    ad0c:	str	r1, [fp, #-32]	; 0xffffffe0
    ad10:	ldrb	r0, [r6, #72]	; 0x48
    ad14:	cmp	r0, #0
    ad18:	beq	add4 <doCdataSection+0x288>
    ad1c:	ldr	r0, [r4, #4]
    ad20:	sub	r2, r9, r1
    ad24:	blx	r3
    ad28:	sub	r7, fp, #32
    ad2c:	b	ae4c <doCdataSection+0x300>
    ad30:	ldr	r3, [r4, #88]	; 0x58
    ad34:	cmp	r3, #0
    ad38:	beq	aed8 <doCdataSection+0x38c>
    ad3c:	ldr	r1, [sp, #32]
    ad40:	str	r1, [fp, #-32]	; 0xffffffe0
    ad44:	ldrb	r0, [r6, #72]	; 0x48
    ad48:	cmp	r0, #0
    ad4c:	beq	ae58 <doCdataSection+0x30c>
    ad50:	ldr	r0, [r4, #4]
    ad54:	sub	r2, r9, r1
    ad58:	blx	r3
    ad5c:	sub	sl, fp, #32
    ad60:	b	aed0 <doCdataSection+0x384>
    ad64:	add	r5, sp, #32
    ad68:	ldr	r0, [r4, #52]	; 0x34
    ad6c:	ldr	r1, [r4, #56]	; 0x38
    ad70:	mov	r2, r9
    ad74:	sub	r3, fp, #32
    ad78:	str	r0, [fp, #-32]	; 0xffffffe0
    ad7c:	mov	r0, r6
    ad80:	ldr	r7, [r6, #60]	; 0x3c
    ad84:	str	r1, [sp]
    ad88:	mov	r1, r5
    ad8c:	blx	r7
    ad90:	ldr	r0, [sp, #28]
    ad94:	ldr	r1, [sp, #24]
    ad98:	str	r0, [r1]
    ad9c:	ldr	r1, [r4, #52]	; 0x34
    ada0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    ada4:	ldr	r0, [r4, #4]
    ada8:	sub	r2, r2, r1
    adac:	blx	r8
    adb0:	ldr	r0, [sp, #32]
    adb4:	ldr	r1, [sp, #28]
    adb8:	cmp	r0, r1
    adbc:	beq	adcc <doCdataSection+0x280>
    adc0:	str	r0, [sl]
    adc4:	ldr	r9, [sp, #28]
    adc8:	b	ad68 <doCdataSection+0x21c>
    adcc:	sub	r5, fp, #32
    add0:	b	aed8 <doCdataSection+0x38c>
    add4:	ldr	r0, [r4, #152]	; 0x98
    add8:	ldr	r8, [sp, #12]
    addc:	ldr	sl, [sp, #8]
    ade0:	sub	r7, fp, #32
    ade4:	cmp	r0, r6
    ade8:	ldrne	r8, [r4, #308]	; 0x134
    adec:	addne	sl, r8, #4
    adf0:	ldr	r0, [r4, #52]	; 0x34
    adf4:	ldr	r1, [r4, #56]	; 0x38
    adf8:	mov	r2, r9
    adfc:	add	r3, sp, #36	; 0x24
    ae00:	str	r0, [sp, #36]	; 0x24
    ae04:	mov	r0, r6
    ae08:	ldr	r5, [r6, #60]	; 0x3c
    ae0c:	str	r1, [sp]
    ae10:	mov	r1, r7
    ae14:	blx	r5
    ae18:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ae1c:	str	r0, [sl]
    ae20:	ldr	r1, [r4, #52]	; 0x34
    ae24:	ldr	r2, [sp, #36]	; 0x24
    ae28:	ldr	r0, [r4, #4]
    ae2c:	ldr	r3, [r4, #88]	; 0x58
    ae30:	sub	r2, r2, r1
    ae34:	blx	r3
    ae38:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ae3c:	str	r0, [r8]
    ae40:	ldr	r0, [fp, #-32]	; 0xffffffe0
    ae44:	cmp	r0, r9
    ae48:	bne	adf0 <doCdataSection+0x2a4>
    ae4c:	ldr	sl, [sp, #16]
    ae50:	mov	r5, r7
    ae54:	b	aed8 <doCdataSection+0x38c>
    ae58:	ldr	r0, [r4, #152]	; 0x98
    ae5c:	ldr	r8, [sp, #12]
    ae60:	ldr	r7, [sp, #8]
    ae64:	sub	sl, fp, #32
    ae68:	cmp	r0, r6
    ae6c:	ldrne	r8, [r4, #308]	; 0x134
    ae70:	addne	r7, r8, #4
    ae74:	ldr	r0, [r4, #52]	; 0x34
    ae78:	ldr	r1, [r4, #56]	; 0x38
    ae7c:	mov	r2, r9
    ae80:	add	r3, sp, #36	; 0x24
    ae84:	str	r0, [sp, #36]	; 0x24
    ae88:	mov	r0, r6
    ae8c:	ldr	r5, [r6, #60]	; 0x3c
    ae90:	str	r1, [sp]
    ae94:	mov	r1, sl
    ae98:	blx	r5
    ae9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    aea0:	str	r0, [r7]
    aea4:	ldr	r1, [r4, #52]	; 0x34
    aea8:	ldr	r2, [sp, #36]	; 0x24
    aeac:	ldr	r0, [r4, #4]
    aeb0:	ldr	r3, [r4, #88]	; 0x58
    aeb4:	sub	r2, r2, r1
    aeb8:	blx	r3
    aebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    aec0:	str	r0, [r8]
    aec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    aec8:	cmp	r0, r9
    aecc:	bne	ae74 <doCdataSection+0x328>
    aed0:	mov	r5, sl
    aed4:	ldr	sl, [sp, #16]
    aed8:	ldr	r0, [sp, #28]
    aedc:	str	r0, [sp, #32]
    aee0:	str	r0, [sl]
    aee4:	ldr	r0, [r4, #496]	; 0x1f0
    aee8:	cmp	r0, #2
    aeec:	beq	af00 <doCdataSection+0x3b4>
    aef0:	cmp	r0, #3
    aef4:	bne	abb8 <doCdataSection+0x6c>
    aef8:	ldr	r0, [sp, #28]
    aefc:	b	af44 <doCdataSection+0x3f8>
    af00:	mov	r0, #35	; 0x23
    af04:	sub	sp, fp, #28
    af08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    af0c:	ldr	r0, [fp, #12]
    af10:	cmp	r0, #0
    af14:	bne	af40 <doCdataSection+0x3f4>
    af18:	mov	r0, #20
    af1c:	sub	sp, fp, #28
    af20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    af24:	str	r9, [sl]
    af28:	mov	r0, #23
    af2c:	sub	sp, fp, #28
    af30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    af34:	ldr	r0, [fp, #12]
    af38:	cmp	r0, #0
    af3c:	beq	afa8 <doCdataSection+0x45c>
    af40:	ldr	r0, [sp, #32]
    af44:	ldr	r1, [fp, #8]
    af48:	str	r0, [r1]
    af4c:	mov	r0, #0
    af50:	sub	sp, fp, #28
    af54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    af58:	str	r9, [sl]
    af5c:	mov	r0, #4
    af60:	sub	sp, fp, #28
    af64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    af68:	ldr	r1, [r4, #84]	; 0x54
    af6c:	cmp	r1, #0
    af70:	beq	afb4 <doCdataSection+0x468>
    af74:	ldr	r0, [r4, #4]
    af78:	blx	r1
    af7c:	ldr	r0, [sp, #28]
    af80:	ldr	r1, [sp, #4]
    af84:	str	r0, [r1]
    af88:	ldr	r1, [fp, #8]
    af8c:	str	r0, [r1]
    af90:	mov	r0, #0
    af94:	ldr	r1, [r4, #496]	; 0x1f0
    af98:	cmp	r1, #2
    af9c:	movweq	r0, #35	; 0x23
    afa0:	sub	sp, fp, #28
    afa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    afa8:	mov	r0, #6
    afac:	sub	sp, fp, #28
    afb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    afb4:	ldr	r3, [r4, #88]	; 0x58
    afb8:	cmp	r3, #0
    afbc:	beq	af7c <doCdataSection+0x430>
    afc0:	ldr	r1, [sp, #32]
    afc4:	str	r1, [fp, #-32]	; 0xffffffe0
    afc8:	ldrb	r0, [r6, #72]	; 0x48
    afcc:	cmp	r0, #0
    afd0:	beq	afe4 <doCdataSection+0x498>
    afd4:	ldr	r0, [r4, #4]
    afd8:	sub	r2, r9, r1
    afdc:	blx	r3
    afe0:	b	af7c <doCdataSection+0x430>
    afe4:	ldr	r0, [r4, #152]	; 0x98
    afe8:	ldr	r7, [sp, #12]
    afec:	ldr	r8, [sp, #8]
    aff0:	add	sl, sp, #36	; 0x24
    aff4:	cmp	r0, r6
    aff8:	ldrne	r7, [r4, #308]	; 0x134
    affc:	addne	r8, r7, #4
    b000:	ldr	r0, [r4, #52]	; 0x34
    b004:	ldr	r1, [r4, #56]	; 0x38
    b008:	mov	r2, r9
    b00c:	mov	r3, sl
    b010:	str	r0, [sp, #36]	; 0x24
    b014:	mov	r0, r6
    b018:	ldr	r5, [r6, #60]	; 0x3c
    b01c:	str	r1, [sp]
    b020:	sub	r1, fp, #32
    b024:	blx	r5
    b028:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b02c:	str	r0, [r8]
    b030:	ldr	r1, [r4, #52]	; 0x34
    b034:	ldr	r2, [sp, #36]	; 0x24
    b038:	ldr	r0, [r4, #4]
    b03c:	ldr	r3, [r4, #88]	; 0x58
    b040:	sub	r2, r2, r1
    b044:	blx	r3
    b048:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b04c:	str	r0, [r7]
    b050:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b054:	cmp	r0, r9
    b058:	bne	b000 <doCdataSection+0x4b4>
    b05c:	b	af7c <doCdataSection+0x430>

0000b060 <cdataSectionProcessor>:
    b060:	push	{r4, r5, r6, sl, fp, lr}
    b064:	add	fp, sp, #16
    b068:	sub	sp, sp, #16
    b06c:	str	r1, [sp, #12]
    b070:	mov	r6, r0
    b074:	mov	r5, r2
    b078:	mov	r4, r3
    b07c:	add	r2, sp, #12
    b080:	ldr	r1, [r0, #152]	; 0x98
    b084:	ldrb	r0, [r0, #500]	; 0x1f4
    b088:	str	r3, [sp]
    b08c:	mov	r3, r5
    b090:	clz	r0, r0
    b094:	lsr	r0, r0, #5
    b098:	str	r0, [sp, #4]
    b09c:	mov	r0, r6
    b0a0:	bl	ab4c <doCdataSection>
    b0a4:	cmp	r0, #0
    b0a8:	bne	b0e8 <cdataSectionProcessor+0x88>
    b0ac:	ldr	r1, [sp, #12]
    b0b0:	cmp	r1, #0
    b0b4:	beq	b0e8 <cdataSectionProcessor+0x88>
    b0b8:	ldr	r0, [r6, #492]	; 0x1ec
    b0bc:	cmp	r0, #0
    b0c0:	beq	b0f0 <cdataSectionProcessor+0x90>
    b0c4:	movw	r0, #0
    b0c8:	mov	r2, r5
    b0cc:	mov	r3, r4
    b0d0:	movt	r0, #0
    b0d4:	str	r0, [r6, #288]	; 0x120
    b0d8:	mov	r0, r6
    b0dc:	sub	sp, fp, #16
    b0e0:	pop	{r4, r5, r6, sl, fp, lr}
    b0e4:	b	b548 <externalEntityContentProcessor>
    b0e8:	sub	sp, fp, #16
    b0ec:	pop	{r4, r5, r6, sl, fp, pc}
    b0f0:	movw	r0, #0
    b0f4:	mov	r2, r5
    b0f8:	mov	r3, r4
    b0fc:	movt	r0, #0
    b100:	str	r0, [r6, #288]	; 0x120
    b104:	mov	r0, r6
    b108:	sub	sp, fp, #16
    b10c:	pop	{r4, r5, r6, sl, fp, lr}
    b110:	b	6548 <contentProcessor>

0000b114 <setElementTypePrefix>:
    b114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b118:	add	fp, sp, #28
    b11c:	sub	sp, sp, #4
    b120:	ldr	r4, [r0, #364]	; 0x16c
    b124:	ldr	r5, [r1]
    b128:	mov	sl, r1
    b12c:	mov	r9, r0
    b130:	add	r8, r4, #60	; 0x3c
    b134:	add	r7, r4, #80	; 0x50
    b138:	b	b148 <setElementTypePrefix+0x34>
    b13c:	cmp	r0, #0
    b140:	beq	b238 <setElementTypePrefix+0x124>
    b144:	add	r5, r5, #1
    b148:	ldrb	r0, [r5]
    b14c:	cmp	r0, #58	; 0x3a
    b150:	bne	b13c <setElementTypePrefix+0x28>
    b154:	ldr	r1, [r4, #88]	; 0x58
    b158:	ldr	r0, [r4, #92]	; 0x5c
    b15c:	ldr	r6, [sl]
    b160:	sub	r1, r0, r1
    b164:	cmp	r6, r5
    b168:	clz	r1, r1
    b16c:	lsr	r1, r1, #5
    b170:	bne	b200 <setElementTypePrefix+0xec>
    b174:	cmp	r1, #0
    b178:	beq	b190 <setElementTypePrefix+0x7c>
    b17c:	mov	r0, r7
    b180:	bl	6948 <poolGrow>
    b184:	cmp	r0, #0
    b188:	beq	b230 <setElementTypePrefix+0x11c>
    b18c:	ldr	r0, [r4, #92]	; 0x5c
    b190:	add	r1, r0, #1
    b194:	mov	r6, #0
    b198:	mov	r3, #8
    b19c:	str	r1, [r4, #92]	; 0x5c
    b1a0:	strb	r6, [r0]
    b1a4:	mov	r0, r9
    b1a8:	mov	r1, r8
    b1ac:	ldr	r2, [r4, #96]	; 0x60
    b1b0:	bl	6054 <lookup>
    b1b4:	cmp	r0, #0
    b1b8:	beq	b23c <setElementTypePrefix+0x128>
    b1bc:	ldr	r1, [r4, #96]	; 0x60
    b1c0:	ldr	r2, [r0]
    b1c4:	cmp	r2, r1
    b1c8:	beq	b220 <setElementTypePrefix+0x10c>
    b1cc:	str	r1, [r4, #92]	; 0x5c
    b1d0:	b	b228 <setElementTypePrefix+0x114>
    b1d4:	ldrb	r1, [r6], #1
    b1d8:	add	r2, r0, #1
    b1dc:	str	r2, [r4, #92]	; 0x5c
    b1e0:	cmp	r5, r6
    b1e4:	strb	r1, [r0]
    b1e8:	ldr	r1, [r4, #88]	; 0x58
    b1ec:	ldr	r0, [r4, #92]	; 0x5c
    b1f0:	sub	r1, r0, r1
    b1f4:	clz	r1, r1
    b1f8:	lsr	r1, r1, #5
    b1fc:	beq	b174 <setElementTypePrefix+0x60>
    b200:	tst	r1, #1
    b204:	beq	b1d4 <setElementTypePrefix+0xc0>
    b208:	mov	r0, r7
    b20c:	bl	6948 <poolGrow>
    b210:	cmp	r0, #0
    b214:	beq	b230 <setElementTypePrefix+0x11c>
    b218:	ldr	r0, [r4, #92]	; 0x5c
    b21c:	b	b1d4 <setElementTypePrefix+0xc0>
    b220:	ldr	r1, [r4, #92]	; 0x5c
    b224:	str	r1, [r4, #96]	; 0x60
    b228:	str	r0, [sl, #4]
    b22c:	b	b144 <setElementTypePrefix+0x30>
    b230:	mov	r6, #0
    b234:	b	b23c <setElementTypePrefix+0x128>
    b238:	mov	r6, #1
    b23c:	mov	r0, r6
    b240:	sub	sp, fp, #28
    b244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b248 <addBinding>:
    b248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b24c:	add	fp, sp, #28
    b250:	sub	sp, sp, #4
    b254:	str	r2, [sp]
    b258:	mov	sl, r1
    b25c:	ldr	r2, [r1]
    b260:	ldrb	r1, [r3]
    b264:	mov	r8, r3
    b268:	mov	r9, r0
    b26c:	cmp	r1, #0
    b270:	beq	b388 <addBinding+0x140>
    b274:	mov	r7, #0
    b278:	cmp	r2, #0
    b27c:	mov	r0, #0
    b280:	beq	b2e0 <addBinding+0x98>
    b284:	ldrb	r0, [r2]
    b288:	cmp	r0, #120	; 0x78
    b28c:	mov	r0, #0
    b290:	bne	b2e0 <addBinding+0x98>
    b294:	ldrb	r0, [r2, #1]
    b298:	cmp	r0, #109	; 0x6d
    b29c:	mov	r0, #0
    b2a0:	bne	b2e0 <addBinding+0x98>
    b2a4:	ldrb	r0, [r2, #2]
    b2a8:	cmp	r0, #108	; 0x6c
    b2ac:	mov	r0, #0
    b2b0:	bne	b2e0 <addBinding+0x98>
    b2b4:	ldrb	r0, [r2, #3]
    b2b8:	cmp	r0, #110	; 0x6e
    b2bc:	bne	b2d8 <addBinding+0x90>
    b2c0:	ldrb	r3, [r2, #4]
    b2c4:	cmp	r3, #115	; 0x73
    b2c8:	bne	b2d8 <addBinding+0x90>
    b2cc:	ldrb	r2, [r2, #5]
    b2d0:	cmp	r2, #0
    b2d4:	beq	b540 <addBinding+0x2f8>
    b2d8:	clz	r0, r0
    b2dc:	lsr	r0, r0, #5
    b2e0:	movw	ip, #0
    b2e4:	movw	lr, #0
    b2e8:	add	r3, r8, #1
    b2ec:	mov	r6, #1
    b2f0:	mov	r2, #1
    b2f4:	mov	r4, #1
    b2f8:	movt	ip, #0
    b2fc:	movt	lr, #0
    b300:	tst	r6, #1
    b304:	beq	b33c <addBinding+0xf4>
    b308:	b	b334 <addBinding+0xec>
    b30c:	mov	r2, #0
    b310:	ldrb	r1, [r3, r7]
    b314:	uxtb	r6, r4
    b318:	add	r7, r7, #1
    b31c:	cmp	r6, #0
    b320:	movwne	r6, #1
    b324:	cmp	r1, #0
    b328:	beq	b3a4 <addBinding+0x15c>
    b32c:	tst	r6, #1
    b330:	beq	b33c <addBinding+0xf4>
    b334:	cmp	r7, #36	; 0x24
    b338:	bls	b36c <addBinding+0x124>
    b33c:	mov	r4, #0
    b340:	cmp	r0, #0
    b344:	bne	b310 <addBinding+0xc8>
    b348:	tst	r2, #255	; 0xff
    b34c:	beq	b310 <addBinding+0xc8>
    b350:	cmp	r7, #29
    b354:	bhi	b30c <addBinding+0xc4>
    b358:	ldrb	r5, [lr, r7]
    b35c:	uxtb	r1, r1
    b360:	cmp	r1, r5
    b364:	movne	r2, #0
    b368:	b	b310 <addBinding+0xc8>
    b36c:	ldrb	r6, [ip, r7]
    b370:	uxtb	r5, r1
    b374:	cmp	r5, r6
    b378:	movne	r4, #0
    b37c:	cmp	r0, #0
    b380:	beq	b348 <addBinding+0x100>
    b384:	b	b310 <addBinding+0xc8>
    b388:	mov	r6, #28
    b38c:	cmp	r2, #0
    b390:	bne	b430 <addBinding+0x1e8>
    b394:	mov	r2, #1
    b398:	mov	r0, #0
    b39c:	mov	r7, #0
    b3a0:	mov	r6, #1
    b3a4:	sub	r1, r7, #36	; 0x24
    b3a8:	clz	r1, r1
    b3ac:	lsr	r1, r1, #5
    b3b0:	and	r1, r6, r1
    b3b4:	cmp	r0, r1
    b3b8:	bne	b424 <addBinding+0x1dc>
    b3bc:	tst	r2, #255	; 0xff
    b3c0:	beq	b3d0 <addBinding+0x188>
    b3c4:	mov	r6, #40	; 0x28
    b3c8:	cmp	r7, #29
    b3cc:	beq	b430 <addBinding+0x1e8>
    b3d0:	ldrb	r0, [r9, #488]	; 0x1e8
    b3d4:	ldr	r5, [r9, #384]	; 0x180
    b3d8:	cmp	r0, #0
    b3dc:	addne	r7, r7, #1
    b3e0:	cmp	r5, #0
    b3e4:	beq	b43c <addBinding+0x1f4>
    b3e8:	ldr	r0, [r5, #24]
    b3ec:	cmp	r7, r0
    b3f0:	ble	b418 <addBinding+0x1d0>
    b3f4:	ldr	r0, [r5, #16]
    b3f8:	ldr	r2, [r9, #16]
    b3fc:	add	r6, r7, #24
    b400:	mov	r1, r6
    b404:	blx	r2
    b408:	cmp	r0, #0
    b40c:	beq	b520 <addBinding+0x2d8>
    b410:	str	r6, [r5, #24]
    b414:	str	r0, [r5, #16]
    b418:	ldr	r0, [r5, #4]
    b41c:	str	r0, [r9, #384]	; 0x180
    b420:	b	b478 <addBinding+0x230>
    b424:	cmp	r0, #0
    b428:	mov	r6, #38	; 0x26
    b42c:	movweq	r6, #40	; 0x28
    b430:	mov	r0, r6
    b434:	sub	sp, fp, #28
    b438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b43c:	ldr	r1, [r9, #12]
    b440:	mov	r0, #28
    b444:	blx	r1
    b448:	mov	r6, #1
    b44c:	cmp	r0, #0
    b450:	beq	b430 <addBinding+0x1e8>
    b454:	ldr	r1, [r9, #12]
    b458:	add	r4, r7, #24
    b45c:	mov	r5, r0
    b460:	mov	r0, r4
    b464:	blx	r1
    b468:	cmp	r0, #0
    b46c:	str	r0, [r5, #16]
    b470:	beq	b530 <addBinding+0x2e8>
    b474:	str	r4, [r5, #24]
    b478:	str	r7, [r5, #20]
    b47c:	mov	r1, r8
    b480:	mov	r2, r7
    b484:	ldr	r0, [r5, #16]
    b488:	bl	0 <memcpy>
    b48c:	ldrb	r0, [r9, #488]	; 0x1e8
    b490:	ldr	r2, [sp]
    b494:	cmp	r0, #0
    b498:	ldrne	r1, [r5, #16]
    b49c:	addne	r1, r7, r1
    b4a0:	strbne	r0, [r1, #-1]
    b4a4:	str	r2, [r5, #12]
    b4a8:	str	sl, [r5]
    b4ac:	ldr	r0, [fp, #8]
    b4b0:	ldr	r1, [sl, #4]
    b4b4:	str	r1, [r5, #8]
    b4b8:	ldrb	r1, [r8]
    b4bc:	cmp	r1, #0
    b4c0:	bne	b4d4 <addBinding+0x28c>
    b4c4:	ldr	r1, [r9, #364]	; 0x16c
    b4c8:	add	r1, r1, #152	; 0x98
    b4cc:	cmp	r1, sl
    b4d0:	beq	b528 <addBinding+0x2e0>
    b4d4:	mov	r1, r5
    b4d8:	str	r1, [sl, #4]
    b4dc:	mov	r6, #0
    b4e0:	cmp	r2, #0
    b4e4:	ldr	r1, [r0]
    b4e8:	str	r1, [r5, #4]
    b4ec:	str	r5, [r0]
    b4f0:	beq	b430 <addBinding+0x1e8>
    b4f4:	ldr	r3, [r9, #108]	; 0x6c
    b4f8:	cmp	r3, #0
    b4fc:	beq	b430 <addBinding+0x1e8>
    b500:	ldr	r0, [sl, #4]
    b504:	ldr	r1, [sl]
    b508:	cmp	r0, #0
    b50c:	moveq	r8, r0
    b510:	ldr	r0, [r9, #4]
    b514:	mov	r2, r8
    b518:	blx	r3
    b51c:	b	b430 <addBinding+0x1e8>
    b520:	mov	r6, #1
    b524:	b	b430 <addBinding+0x1e8>
    b528:	mov	r1, #0
    b52c:	b	b4d8 <addBinding+0x290>
    b530:	ldr	r1, [r9, #20]
    b534:	mov	r0, r5
    b538:	blx	r1
    b53c:	b	b430 <addBinding+0x1e8>
    b540:	mov	r6, #39	; 0x27
    b544:	b	b430 <addBinding+0x1e8>

0000b548 <externalEntityContentProcessor>:
    b548:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b54c:	add	fp, sp, #24
    b550:	sub	sp, sp, #16
    b554:	mov	r9, r0
    b558:	ldr	r6, [r0, #152]	; 0x98
    b55c:	ldrb	r0, [r0, #500]	; 0x1f4
    b560:	mov	r7, r1
    b564:	stm	sp, {r2, r3}
    b568:	mov	r1, #1
    b56c:	mov	r3, r7
    b570:	clz	r0, r0
    b574:	mov	r2, r6
    b578:	lsr	r0, r0, #5
    b57c:	str	r0, [sp, #8]
    b580:	mov	r0, r9
    b584:	bl	7ce4 <doContent>
    b588:	mov	r8, r0
    b58c:	cmp	r0, #0
    b590:	bne	b634 <externalEntityContentProcessor+0xec>
    b594:	ldr	r5, [r9, #372]	; 0x174
    b598:	mov	r8, #0
    b59c:	b	b614 <externalEntityContentProcessor+0xcc>
    b5a0:	ldr	r3, [r5, #40]	; 0x28
    b5a4:	ldr	r2, [r5, #8]
    b5a8:	add	r6, r2, r4
    b5ac:	sub	r3, r3, r0
    b5b0:	cmp	r6, r3
    b5b4:	ble	b604 <externalEntityContentProcessor+0xbc>
    b5b8:	ldr	r2, [r9, #16]
    b5bc:	mov	r1, r6
    b5c0:	blx	r2
    b5c4:	cmp	r0, #0
    b5c8:	beq	b640 <externalEntityContentProcessor+0xf8>
    b5cc:	ldr	r2, [r5, #12]
    b5d0:	ldr	r1, [r5, #36]	; 0x24
    b5d4:	add	r7, r0, r4
    b5d8:	cmp	r2, r1
    b5dc:	streq	r0, [r5, #12]
    b5e0:	ldr	r2, [r5, #16]
    b5e4:	cmp	r2, #0
    b5e8:	subne	r1, r2, r1
    b5ec:	addne	r1, r0, r1
    b5f0:	strne	r1, [r5, #16]
    b5f4:	add	r1, r0, r6
    b5f8:	str	r0, [r5, #36]	; 0x24
    b5fc:	str	r1, [r5, #40]	; 0x28
    b600:	ldmib	r5, {r1, r2}
    b604:	mov	r0, r7
    b608:	bl	0 <memcpy>
    b60c:	str	r7, [r5, #4]
    b610:	ldr	r5, [r5]
    b614:	cmp	r5, #0
    b618:	ldrne	r2, [r5, #24]
    b61c:	ldrne	r0, [r5, #36]	; 0x24
    b620:	ldrne	r1, [r5, #4]
    b624:	addne	r4, r2, #1
    b628:	addne	r7, r0, r4
    b62c:	cmpne	r1, r7
    b630:	bne	b5a0 <externalEntityContentProcessor+0x58>
    b634:	mov	r0, r8
    b638:	sub	sp, fp, #24
    b63c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b640:	mov	r8, #1
    b644:	b	b634 <externalEntityContentProcessor+0xec>

0000b648 <appendAttributeValue>:
    b648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b64c:	add	fp, sp, #28
    b650:	sub	sp, sp, #68	; 0x44
    b654:	mov	r5, r1
    b658:	add	r1, r0, #468	; 0x1d4
    b65c:	ldr	r8, [fp, #12]
    b660:	str	r0, [sp, #48]	; 0x30
    b664:	ldr	r4, [fp, #8]
    b668:	mov	r7, r2
    b66c:	str	r1, [sp, #44]	; 0x2c
    b670:	add	r1, r0, #456	; 0x1c8
    b674:	ldr	r0, [r0, #364]	; 0x16c
    b678:	str	r1, [fp, #-44]	; 0xffffffd4
    b67c:	add	r9, r8, #12
    b680:	str	r0, [sp, #40]	; 0x28
    b684:	add	r0, r0, #80	; 0x50
    b688:	str	r0, [sp, #36]	; 0x24
    b68c:	b	b6a8 <appendAttributeValue+0x60>
    b690:	ldr	r0, [r9]
    b694:	add	r1, r0, #1
    b698:	str	r1, [r9]
    b69c:	mov	r1, #32
    b6a0:	strb	r1, [r0]
    b6a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b6a8:	ldr	r6, [r5, #16]
    b6ac:	mov	r0, r5
    b6b0:	str	r3, [fp, #-40]	; 0xffffffd8
    b6b4:	mov	r1, r3
    b6b8:	mov	r2, r4
    b6bc:	sub	r3, fp, #36	; 0x24
    b6c0:	blx	r6
    b6c4:	add	r0, r0, #4
    b6c8:	cmp	r0, #43	; 0x2b
    b6cc:	bhi	bccc <appendAttributeValue+0x684>
    b6d0:	add	r1, pc, #4
    b6d4:	mov	sl, #0
    b6d8:	ldr	pc, [r1, r0, lsl #2]
    b6dc:	.word	0x0000bcc0
    b6e0:	.word	0x0000b78c
    b6e4:	.word	0x0000bccc
    b6e8:	.word	0x0000bcd8
    b6ec:	.word	0x0000bce4
    b6f0:	.word	0x0000bccc
    b6f4:	.word	0x0000bccc
    b6f8:	.word	0x0000bccc
    b6fc:	.word	0x0000bccc
    b700:	.word	0x0000bccc
    b704:	.word	0x0000b7e4
    b708:	.word	0x0000b79c
    b70c:	.word	0x0000bccc
    b710:	.word	0x0000b808
    b714:	.word	0x0000b86c
    b718:	.word	0x0000bccc
    b71c:	.word	0x0000bccc
    b720:	.word	0x0000bccc
    b724:	.word	0x0000bccc
    b728:	.word	0x0000bccc
    b72c:	.word	0x0000bccc
    b730:	.word	0x0000bccc
    b734:	.word	0x0000bccc
    b738:	.word	0x0000bccc
    b73c:	.word	0x0000bccc
    b740:	.word	0x0000bccc
    b744:	.word	0x0000bccc
    b748:	.word	0x0000bccc
    b74c:	.word	0x0000bccc
    b750:	.word	0x0000bccc
    b754:	.word	0x0000bccc
    b758:	.word	0x0000bccc
    b75c:	.word	0x0000bccc
    b760:	.word	0x0000bccc
    b764:	.word	0x0000bccc
    b768:	.word	0x0000bccc
    b76c:	.word	0x0000bccc
    b770:	.word	0x0000bccc
    b774:	.word	0x0000bccc
    b778:	.word	0x0000bccc
    b77c:	.word	0x0000bccc
    b780:	.word	0x0000bccc
    b784:	.word	0x0000bccc
    b788:	.word	0x0000b79c
    b78c:	ldr	r0, [r5, #68]	; 0x44
    b790:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b794:	add	r0, r1, r0
    b798:	str	r0, [fp, #-36]	; 0xffffffdc
    b79c:	ldr	r0, [r9]
    b7a0:	cmp	r7, #0
    b7a4:	beq	b7c8 <appendAttributeValue+0x180>
    b7a8:	ldr	r1, [r8, #8]
    b7ac:	cmp	r0, r1
    b7b0:	bne	b694 <appendAttributeValue+0x4c>
    b7b4:	mov	r0, r8
    b7b8:	bl	6948 <poolGrow>
    b7bc:	cmp	r0, #0
    b7c0:	bne	b690 <appendAttributeValue+0x48>
    b7c4:	b	bcbc <appendAttributeValue+0x674>
    b7c8:	ldr	r1, [r8, #16]
    b7cc:	cmp	r1, r0
    b7d0:	beq	bcb4 <appendAttributeValue+0x66c>
    b7d4:	ldrb	r1, [r0, #-1]
    b7d8:	cmp	r1, #32
    b7dc:	bne	b7a8 <appendAttributeValue+0x160>
    b7e0:	b	bcb4 <appendAttributeValue+0x66c>
    b7e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    b7e8:	ldr	r4, [fp, #-36]	; 0xffffffdc
    b7ec:	mov	sl, r7
    b7f0:	sub	r7, fp, #32
    b7f4:	str	r0, [fp, #-32]	; 0xffffffe0
    b7f8:	ldr	r0, [r9]
    b7fc:	cmp	r0, #0
    b800:	bne	bc74 <appendAttributeValue+0x62c>
    b804:	b	bc64 <appendAttributeValue+0x61c>
    b808:	ldr	r0, [r5, #68]	; 0x44
    b80c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    b810:	ldr	r6, [fp, #-40]	; 0xffffffd8
    b814:	ldr	r3, [r5, #48]	; 0x30
    b818:	add	r1, r6, r0
    b81c:	sub	r2, r2, r0
    b820:	mov	r0, r5
    b824:	blx	r3
    b828:	tst	r0, #255	; 0xff
    b82c:	beq	b8fc <appendAttributeValue+0x2b4>
    b830:	mov	r4, r0
    b834:	ldr	r1, [r8, #8]
    b838:	ldr	r0, [r8, #12]
    b83c:	cmp	r0, r1
    b840:	bne	b858 <appendAttributeValue+0x210>
    b844:	mov	r0, r8
    b848:	bl	6948 <poolGrow>
    b84c:	cmp	r0, #0
    b850:	beq	bcbc <appendAttributeValue+0x674>
    b854:	ldr	r0, [r9]
    b858:	add	r1, r0, #1
    b85c:	str	r1, [r9]
    b860:	strb	r4, [r0]
    b864:	ldr	r4, [fp, #8]
    b868:	b	bcb4 <appendAttributeValue+0x66c>
    b86c:	ldr	r2, [r5, #44]	; 0x2c
    b870:	ldr	r1, [fp, #-40]	; 0xffffffd8
    b874:	mov	r0, r5
    b878:	blx	r2
    b87c:	cmn	r0, #1
    b880:	ble	bd04 <appendAttributeValue+0x6bc>
    b884:	ldr	r6, [sp, #48]	; 0x30
    b888:	cmp	r7, #0
    b88c:	mov	sl, r7
    b890:	sub	r7, fp, #32
    b894:	cmpeq	r0, #32
    b898:	beq	b978 <appendAttributeValue+0x330>
    b89c:	mov	r1, r7
    b8a0:	bl	0 <coda_XmlUtf8Encode>
    b8a4:	cmp	r0, #0
    b8a8:	beq	bd24 <appendAttributeValue+0x6dc>
    b8ac:	mov	r4, r0
    b8b0:	cmp	r0, #1
    b8b4:	bge	b8d4 <appendAttributeValue+0x28c>
    b8b8:	b	b994 <appendAttributeValue+0x34c>
    b8bc:	ldrb	r1, [r7], #1
    b8c0:	add	r2, r0, #1
    b8c4:	subs	r4, r4, #1
    b8c8:	str	r2, [r9]
    b8cc:	strb	r1, [r0]
    b8d0:	beq	b994 <appendAttributeValue+0x34c>
    b8d4:	ldr	r1, [r8, #8]
    b8d8:	ldr	r0, [r8, #12]
    b8dc:	cmp	r0, r1
    b8e0:	bne	b8bc <appendAttributeValue+0x274>
    b8e4:	mov	r0, r8
    b8e8:	bl	6948 <poolGrow>
    b8ec:	cmp	r0, #0
    b8f0:	beq	bcbc <appendAttributeValue+0x674>
    b8f4:	ldr	r0, [r9]
    b8f8:	b	b8bc <appendAttributeValue+0x274>
    b8fc:	ldr	r4, [r5, #68]	; 0x44
    b900:	ldr	sl, [sp, #44]	; 0x2c
    b904:	str	r7, [sp, #32]
    b908:	ldr	r7, [sp, #48]	; 0x30
    b90c:	add	r0, r6, r4
    b910:	ldr	r6, [fp, #-36]	; 0xffffffdc
    b914:	str	r0, [fp, #-32]	; 0xffffffe0
    b918:	ldr	r0, [sl]
    b91c:	cmp	r0, #0
    b920:	bne	b934 <appendAttributeValue+0x2ec>
    b924:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b928:	bl	6948 <poolGrow>
    b92c:	cmp	r0, #0
    b930:	beq	bcbc <appendAttributeValue+0x674>
    b934:	sub	r4, r6, r4
    b938:	ldr	r0, [r7, #464]	; 0x1d0
    b93c:	ldr	r6, [r5, #60]	; 0x3c
    b940:	sub	r1, fp, #32
    b944:	mov	r2, r4
    b948:	mov	r3, sl
    b94c:	str	r0, [sp]
    b950:	mov	r0, r5
    b954:	blx	r6
    b958:	ldr	r0, [fp, #-32]	; 0xffffffe0
    b95c:	cmp	r0, r4
    b960:	beq	b9a4 <appendAttributeValue+0x35c>
    b964:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b968:	bl	6948 <poolGrow>
    b96c:	cmp	r0, #0
    b970:	bne	b938 <appendAttributeValue+0x2f0>
    b974:	b	bcbc <appendAttributeValue+0x674>
    b978:	ldr	r1, [r8, #12]
    b97c:	ldr	r2, [r8, #16]
    b980:	cmp	r2, r1
    b984:	beq	b994 <appendAttributeValue+0x34c>
    b988:	ldrb	r1, [r1, #-1]
    b98c:	cmp	r1, #32
    b990:	bne	b89c <appendAttributeValue+0x254>
    b994:	ldr	r4, [fp, #8]
    b998:	ldr	r3, [fp, #-36]	; 0xffffffdc
    b99c:	mov	r7, sl
    b9a0:	b	b6a8 <appendAttributeValue+0x60>
    b9a4:	ldr	r0, [r7, #472]	; 0x1d8
    b9a8:	mov	sl, #1
    b9ac:	cmp	r0, #0
    b9b0:	beq	bcc0 <appendAttributeValue+0x678>
    b9b4:	ldr	r1, [r7, #464]	; 0x1d0
    b9b8:	ldr	r0, [r7, #468]	; 0x1d4
    b9bc:	cmp	r0, r1
    b9c0:	bne	b9e0 <appendAttributeValue+0x398>
    b9c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    b9c8:	bl	6948 <poolGrow>
    b9cc:	cmp	r0, #0
    b9d0:	beq	bcc0 <appendAttributeValue+0x678>
    b9d4:	ldr	r0, [sp, #44]	; 0x2c
    b9d8:	ldr	r7, [sp, #48]	; 0x30
    b9dc:	ldr	r0, [r0]
    b9e0:	add	r1, r0, #1
    b9e4:	str	r1, [r7, #468]	; 0x1d4
    b9e8:	mov	r1, #0
    b9ec:	strb	r1, [r0]
    b9f0:	ldr	r0, [r7, #472]	; 0x1d8
    b9f4:	ldr	r7, [sp, #32]
    b9f8:	cmp	r0, #0
    b9fc:	beq	bcc0 <appendAttributeValue+0x678>
    ba00:	ldr	sl, [sp, #40]	; 0x28
    ba04:	ldr	ip, [sl, #8]
    ba08:	cmp	ip, #0
    ba0c:	beq	bb20 <appendAttributeValue+0x4d8>
    ba10:	ldr	lr, [sp, #48]	; 0x30
    ba14:	ldrb	r6, [r0]
    ba18:	mov	r1, #0
    ba1c:	str	r1, [sp, #24]
    ba20:	ldr	r2, [lr, #512]	; 0x200
    ba24:	cmp	r6, #0
    ba28:	str	r6, [sp, #28]
    ba2c:	beq	ba5c <appendAttributeValue+0x414>
    ba30:	ldr	r1, [sp, #44]	; 0x2c
    ba34:	movw	r4, #16963	; 0x4243
    ba38:	add	r3, r0, #1
    ba3c:	movt	r4, #15
    ba40:	mul	r2, r2, r4
    ba44:	uxtb	r6, r6
    ba48:	eor	r2, r2, r6
    ba4c:	ldrb	r6, [r3], #1
    ba50:	cmp	r6, #0
    ba54:	bne	ba40 <appendAttributeValue+0x3f8>
    ba58:	b	ba60 <appendAttributeValue+0x418>
    ba5c:	ldr	r1, [sp, #44]	; 0x2c
    ba60:	ldr	r4, [sl]
    ba64:	sub	r6, ip, #1
    ba68:	and	r3, r2, r6
    ba6c:	str	r4, [sp, #20]
    ba70:	ldr	r4, [r4, r3, lsl #2]
    ba74:	cmp	r4, #0
    ba78:	beq	bb44 <appendAttributeValue+0x4fc>
    ba7c:	rsb	r1, ip, #0
    ba80:	mov	lr, #0
    ba84:	and	r1, r2, r1
    ba88:	str	r1, [sp, #16]
    ba8c:	add	r1, r0, #1
    ba90:	str	r1, [sp, #24]
    ba94:	lsr	r1, r6, #2
    ba98:	str	r1, [sp, #12]
    ba9c:	b	bac8 <appendAttributeValue+0x480>
    baa0:	ldr	sl, [sp, #40]	; 0x28
    baa4:	tst	lr, #255	; 0xff
    baa8:	beq	bb04 <appendAttributeValue+0x4bc>
    baac:	uxtb	r1, lr
    bab0:	subs	r3, r3, r1
    bab4:	ldr	r1, [sp, #20]
    bab8:	addcc	r3, r3, ip
    babc:	ldr	r4, [r1, r3, lsl #2]
    bac0:	cmp	r4, #0
    bac4:	beq	bb20 <appendAttributeValue+0x4d8>
    bac8:	ldr	r2, [r4]
    bacc:	ldr	r6, [sp, #28]
    bad0:	ldrb	r1, [r2]
    bad4:	cmp	r6, r1
    bad8:	bne	baa0 <appendAttributeValue+0x458>
    badc:	add	r6, r2, #1
    bae0:	ldr	r2, [sp, #24]
    bae4:	ldr	sl, [sp, #28]
    bae8:	tst	sl, #255	; 0xff
    baec:	beq	bb34 <appendAttributeValue+0x4ec>
    baf0:	ldrb	sl, [r2], #1
    baf4:	ldrb	r1, [r6], #1
    baf8:	cmp	sl, r1
    bafc:	beq	bae8 <appendAttributeValue+0x4a0>
    bb00:	b	baa0 <appendAttributeValue+0x458>
    bb04:	ldrb	r1, [sl, #4]
    bb08:	ldr	r2, [sp, #16]
    bb0c:	ldr	r6, [sp, #12]
    bb10:	sub	r1, r1, #1
    bb14:	and	r1, r6, r2, lsr r1
    bb18:	orr	lr, r1, #1
    bb1c:	b	baac <appendAttributeValue+0x464>
    bb20:	mov	r1, #0
    bb24:	ldr	lr, [sp, #48]	; 0x30
    bb28:	str	r1, [sp, #24]
    bb2c:	ldr	r1, [sp, #44]	; 0x2c
    bb30:	b	bb44 <appendAttributeValue+0x4fc>
    bb34:	ldr	lr, [sp, #48]	; 0x30
    bb38:	ldr	r1, [sp, #44]	; 0x2c
    bb3c:	ldr	sl, [sp, #40]	; 0x28
    bb40:	str	r4, [sp, #24]
    bb44:	str	r0, [r1]
    bb48:	ldr	r0, [sp, #36]	; 0x24
    bb4c:	cmp	r0, r8
    bb50:	beq	bb8c <appendAttributeValue+0x544>
    bb54:	ldrb	r0, [sl, #129]	; 0x81
    bb58:	cmp	r0, #0
    bb5c:	beq	bbb4 <appendAttributeValue+0x56c>
    bb60:	ldr	r6, [sp, #24]
    bb64:	ldrb	r1, [sl, #130]	; 0x82
    bb68:	ldr	r4, [fp, #8]
    bb6c:	cmp	r6, #0
    bb70:	mov	r0, r6
    bb74:	movwne	r0, #1
    bb78:	cmp	r1, #0
    bb7c:	beq	bbfc <appendAttributeValue+0x5b4>
    bb80:	cmp	r0, #0
    bb84:	bne	bbc4 <appendAttributeValue+0x57c>
    bb88:	b	bd7c <appendAttributeValue+0x734>
    bb8c:	ldr	r0, [lr, #280]	; 0x118
    bb90:	ldr	r4, [fp, #8]
    bb94:	cmp	r0, #0
    bb98:	beq	bbd4 <appendAttributeValue+0x58c>
    bb9c:	ldrb	r0, [sl, #130]	; 0x82
    bba0:	ldr	r6, [sp, #24]
    bba4:	cmp	r0, #0
    bba8:	beq	bbe4 <appendAttributeValue+0x59c>
    bbac:	ldr	r1, [lr, #308]	; 0x134
    bbb0:	b	bbe8 <appendAttributeValue+0x5a0>
    bbb4:	ldr	r6, [sp, #24]
    bbb8:	ldr	r4, [fp, #8]
    bbbc:	cmp	r6, #0
    bbc0:	beq	bd7c <appendAttributeValue+0x734>
    bbc4:	ldrb	r0, [r6, #34]	; 0x22
    bbc8:	cmp	r0, #0
    bbcc:	bne	bc04 <appendAttributeValue+0x5bc>
    bbd0:	b	bd84 <appendAttributeValue+0x73c>
    bbd4:	ldr	r6, [sp, #24]
    bbd8:	cmp	r6, #0
    bbdc:	bne	bc04 <appendAttributeValue+0x5bc>
    bbe0:	b	bcb4 <appendAttributeValue+0x66c>
    bbe4:	ldrb	r1, [sl, #129]	; 0x81
    bbe8:	cmp	r6, #0
    bbec:	mov	r0, r6
    bbf0:	movwne	r0, #1
    bbf4:	cmp	r1, #0
    bbf8:	beq	bb80 <appendAttributeValue+0x538>
    bbfc:	cmp	r0, #0
    bc00:	beq	bcb4 <appendAttributeValue+0x66c>
    bc04:	ldrb	r0, [r6, #32]
    bc08:	cmp	r0, #0
    bc0c:	bne	bd40 <appendAttributeValue+0x6f8>
    bc10:	ldr	r0, [r6, #28]
    bc14:	cmp	r0, #0
    bc18:	ldr	r0, [sp, #48]	; 0x30
    bc1c:	bne	bd4c <appendAttributeValue+0x704>
    bc20:	ldr	r3, [r6, #4]
    bc24:	cmp	r3, #0
    bc28:	beq	bd60 <appendAttributeValue+0x718>
    bc2c:	mov	r1, #1
    bc30:	strb	r1, [r6, #32]
    bc34:	ldr	r2, [r6, #8]
    bc38:	ldr	r1, [r0, #236]	; 0xec
    bc3c:	add	r2, r3, r2
    bc40:	stm	sp, {r2, r8}
    bc44:	mov	r2, r7
    bc48:	bl	b648 <appendAttributeValue>
    bc4c:	mov	sl, r0
    bc50:	mov	r0, #0
    bc54:	cmp	sl, #0
    bc58:	strb	r0, [r6, #32]
    bc5c:	beq	bcb4 <appendAttributeValue+0x66c>
    bc60:	b	bcc0 <appendAttributeValue+0x678>
    bc64:	mov	r0, r8
    bc68:	bl	6948 <poolGrow>
    bc6c:	cmp	r0, #0
    bc70:	beq	bcbc <appendAttributeValue+0x674>
    bc74:	ldr	r0, [r8, #8]
    bc78:	ldr	r6, [r5, #60]	; 0x3c
    bc7c:	mov	r1, r7
    bc80:	mov	r2, r4
    bc84:	mov	r3, r9
    bc88:	str	r0, [sp]
    bc8c:	mov	r0, r5
    bc90:	blx	r6
    bc94:	ldr	r0, [fp, #-32]	; 0xffffffe0
    bc98:	cmp	r0, r4
    bc9c:	bne	bc64 <appendAttributeValue+0x61c>
    bca0:	ldr	r0, [r8, #16]
    bca4:	ldr	r4, [fp, #8]
    bca8:	mov	r7, sl
    bcac:	cmp	r0, #0
    bcb0:	beq	bcbc <appendAttributeValue+0x674>
    bcb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
    bcb8:	b	b6a8 <appendAttributeValue+0x60>
    bcbc:	mov	sl, #1
    bcc0:	mov	r0, sl
    bcc4:	sub	sp, fp, #28
    bcc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bccc:	ldr	r1, [sp, #48]	; 0x30
    bcd0:	mov	sl, #23
    bcd4:	b	bd0c <appendAttributeValue+0x6c4>
    bcd8:	ldr	r1, [sp, #48]	; 0x30
    bcdc:	mov	sl, #4
    bce0:	b	bd0c <appendAttributeValue+0x6c4>
    bce4:	ldr	r1, [sp, #48]	; 0x30
    bce8:	mov	sl, #4
    bcec:	ldr	r0, [r1, #152]	; 0x98
    bcf0:	cmp	r0, r5
    bcf4:	bne	bcc0 <appendAttributeValue+0x678>
    bcf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    bcfc:	str	r0, [r1, #296]	; 0x128
    bd00:	b	bcc0 <appendAttributeValue+0x678>
    bd04:	ldr	r1, [sp, #48]	; 0x30
    bd08:	mov	sl, #14
    bd0c:	ldr	r0, [r1, #152]	; 0x98
    bd10:	cmp	r0, r5
    bd14:	bne	bcc0 <appendAttributeValue+0x678>
    bd18:	ldr	r0, [fp, #-40]	; 0xffffffd8
    bd1c:	str	r0, [r1, #296]	; 0x128
    bd20:	b	bcc0 <appendAttributeValue+0x678>
    bd24:	ldr	r0, [r6, #152]	; 0x98
    bd28:	mov	sl, #14
    bd2c:	cmp	r0, r5
    bd30:	bne	bcc0 <appendAttributeValue+0x678>
    bd34:	ldr	r0, [fp, #-40]	; 0xffffffd8
    bd38:	str	r0, [r6, #296]	; 0x128
    bd3c:	b	bcc0 <appendAttributeValue+0x678>
    bd40:	ldr	r1, [sp, #48]	; 0x30
    bd44:	mov	sl, #12
    bd48:	b	bd0c <appendAttributeValue+0x6c4>
    bd4c:	ldr	r1, [r0, #152]	; 0x98
    bd50:	mov	sl, #15
    bd54:	cmp	r1, r5
    bd58:	bne	bcc0 <appendAttributeValue+0x678>
    bd5c:	b	bd70 <appendAttributeValue+0x728>
    bd60:	ldr	r1, [r0, #152]	; 0x98
    bd64:	mov	sl, #16
    bd68:	cmp	r1, r5
    bd6c:	bne	bcc0 <appendAttributeValue+0x678>
    bd70:	ldr	r1, [fp, #-40]	; 0xffffffd8
    bd74:	str	r1, [r0, #296]	; 0x128
    bd78:	b	bcc0 <appendAttributeValue+0x678>
    bd7c:	mov	sl, #11
    bd80:	b	bcc0 <appendAttributeValue+0x678>
    bd84:	mov	sl, #24
    bd88:	b	bcc0 <appendAttributeValue+0x678>

0000bd8c <internalEntityProcessor>:
    bd8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bd90:	add	fp, sp, #28
    bd94:	sub	sp, sp, #36	; 0x24
    bd98:	ldr	r9, [r0, #308]	; 0x134
    bd9c:	cmp	r9, #0
    bda0:	beq	be20 <internalEntityProcessor+0x94>
    bda4:	ldr	r8, [r9, #12]
    bda8:	str	r3, [sp, #20]
    bdac:	str	r2, [sp, #24]
    bdb0:	str	r1, [sp, #28]
    bdb4:	mov	r5, r0
    bdb8:	ldmib	r8, {r0, r1, r2}
    bdbc:	add	r7, r0, r1
    bdc0:	ldrb	r1, [r8, #33]	; 0x21
    bdc4:	add	r4, r0, r2
    bdc8:	cmp	r1, #0
    bdcc:	beq	be2c <internalEntityProcessor+0xa0>
    bdd0:	ldr	r0, [r5, #236]	; 0xec
    bdd4:	add	sl, sp, #32
    bdd8:	mov	r1, r4
    bddc:	mov	r2, r7
    bde0:	mov	r3, sl
    bde4:	ldr	r6, [r0]
    bde8:	blx	r6
    bdec:	ldr	r1, [r5, #236]	; 0xec
    bdf0:	mov	r3, #0
    bdf4:	ldr	r2, [sp, #32]
    bdf8:	stm	sp, {r0, r2, sl}
    bdfc:	mov	r0, r5
    be00:	mov	r2, r4
    be04:	str	r3, [sp, #12]
    be08:	mov	r3, r7
    be0c:	bl	2dc0 <doProlog>
    be10:	cmp	r0, #0
    be14:	beq	be5c <internalEntityProcessor+0xd0>
    be18:	sub	sp, fp, #28
    be1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be20:	mov	r0, #23
    be24:	sub	sp, fp, #28
    be28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be2c:	ldr	r2, [r5, #236]	; 0xec
    be30:	ldr	r1, [r9, #16]
    be34:	mov	r0, #0
    be38:	add	r3, sp, #32
    be3c:	str	r7, [sp]
    be40:	str	r3, [sp, #4]
    be44:	str	r0, [sp, #8]
    be48:	mov	r0, r5
    be4c:	mov	r3, r4
    be50:	bl	7ce4 <doContent>
    be54:	cmp	r0, #0
    be58:	bne	be18 <internalEntityProcessor+0x8c>
    be5c:	ldr	r0, [sp, #32]
    be60:	cmp	r7, r0
    be64:	beq	be8c <internalEntityProcessor+0x100>
    be68:	ldr	r1, [r5, #496]	; 0x1f0
    be6c:	cmp	r1, #3
    be70:	bne	be8c <internalEntityProcessor+0x100>
    be74:	ldr	r1, [r8, #4]
    be78:	sub	r0, r0, r1
    be7c:	str	r0, [r8, #12]
    be80:	mov	r0, #0
    be84:	sub	sp, fp, #28
    be88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be8c:	mov	r0, #0
    be90:	strb	r0, [r8, #32]
    be94:	ldr	r0, [r9, #8]
    be98:	str	r0, [r5, #308]	; 0x134
    be9c:	ldr	r0, [r5, #312]	; 0x138
    bea0:	str	r0, [r9, #8]
    bea4:	str	r9, [r5, #312]	; 0x138
    bea8:	ldrb	r0, [r8, #33]	; 0x21
    beac:	cmp	r0, #0
    beb0:	beq	bf1c <internalEntityProcessor+0x190>
    beb4:	movw	r0, #0
    beb8:	ldr	r4, [sp, #28]
    bebc:	ldr	r6, [sp, #24]
    bec0:	add	r3, sp, #32
    bec4:	movt	r0, #0
    bec8:	str	r0, [r5, #288]	; 0x120
    becc:	ldr	r0, [r5, #152]	; 0x98
    bed0:	mov	r1, r4
    bed4:	mov	r2, r6
    bed8:	ldr	r7, [r0]
    bedc:	blx	r7
    bee0:	ldrb	r2, [r5, #500]	; 0x1f4
    bee4:	ldr	r1, [r5, #152]	; 0x98
    bee8:	ldr	r3, [sp, #32]
    beec:	stm	sp, {r0, r3}
    bef0:	ldr	r0, [sp, #20]
    bef4:	mov	r3, r6
    bef8:	clz	r2, r2
    befc:	str	r0, [sp, #8]
    bf00:	mov	r0, r5
    bf04:	lsr	r2, r2, #5
    bf08:	str	r2, [sp, #12]
    bf0c:	mov	r2, r4
    bf10:	bl	2dc0 <doProlog>
    bf14:	sub	sp, fp, #28
    bf18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bf1c:	movw	r0, #0
    bf20:	ldr	r3, [sp, #24]
    bf24:	movt	r0, #0
    bf28:	str	r0, [r5, #288]	; 0x120
    bf2c:	ldrb	r0, [r5, #500]	; 0x1f4
    bf30:	ldr	r1, [r5, #492]	; 0x1ec
    bf34:	ldr	r2, [r5, #152]	; 0x98
    bf38:	str	r3, [sp]
    bf3c:	ldr	r3, [sp, #20]
    bf40:	str	r3, [sp, #4]
    bf44:	ldr	r3, [sp, #28]
    bf48:	clz	r0, r0
    bf4c:	cmp	r1, #0
    bf50:	lsr	r0, r0, #5
    bf54:	movwne	r1, #1
    bf58:	str	r0, [sp, #8]
    bf5c:	mov	r0, r5
    bf60:	bl	7ce4 <doContent>
    bf64:	sub	sp, fp, #28
    bf68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000bf6c <build_node>:
    bf6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bf70:	add	fp, sp, #28
    bf74:	sub	sp, sp, #12
    bf78:	ldr	r6, [r0, #364]	; 0x16c
    bf7c:	rsb	ip, r1, r1, lsl #3
    bf80:	ldr	r4, [fp, #8]
    bf84:	ldr	r7, [r6, #164]	; 0xa4
    bf88:	mov	r1, r7
    bf8c:	ldr	r5, [r1, ip, lsl #2]!
    bf90:	str	r5, [r2]
    bf94:	cmp	r5, #4
    bf98:	ldr	r1, [r1, #4]
    bf9c:	str	r1, [r2, #4]
    bfa0:	bne	bfe8 <build_node+0x7c>
    bfa4:	ldr	r1, [r4]
    bfa8:	add	r0, r7, ip, lsl #2
    bfac:	str	r1, [r2, #8]
    bfb0:	ldr	r0, [r0, #8]
    bfb4:	ldr	r7, [r4]
    bfb8:	ldrb	r1, [r0]
    bfbc:	add	r3, r7, #1
    bfc0:	str	r3, [r4]
    bfc4:	strb	r1, [r7]
    bfc8:	ldrb	r1, [r0], #1
    bfcc:	cmp	r1, #0
    bfd0:	bne	bfb4 <build_node+0x48>
    bfd4:	mov	r0, #0
    bfd8:	str	r0, [r2, #12]
    bfdc:	str	r0, [r2, #16]
    bfe0:	sub	sp, fp, #28
    bfe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfe8:	add	r1, r7, ip, lsl #2
    bfec:	mov	sl, r3
    bff0:	ldr	r1, [r1, #20]
    bff4:	str	r1, [r2, #12]
    bff8:	cmp	r1, #0
    bffc:	ldr	r7, [r3]
    c000:	str	r7, [r2, #16]
    c004:	add	r7, r1, r1, lsl #2
    c008:	ldr	r5, [r3]
    c00c:	add	r7, r5, r7, lsl #2
    c010:	str	r7, [r3]
    c014:	beq	c07c <build_node+0x110>
    c018:	ldr	r1, [r6, #164]	; 0xa4
    c01c:	mov	r9, r0
    c020:	mov	r5, #0
    c024:	mov	r8, #0
    c028:	str	r2, [sp, #8]
    c02c:	add	r1, r1, ip, lsl #2
    c030:	add	r7, r1, #12
    c034:	ldr	r1, [r2, #16]
    c038:	ldr	r7, [r7]
    c03c:	mov	r0, r9
    c040:	mov	r3, sl
    c044:	str	r4, [sp]
    c048:	add	r2, r1, r5
    c04c:	mov	r1, r7
    c050:	bl	bf6c <build_node>
    c054:	ldr	ip, [r6, #164]	; 0xa4
    c058:	rsb	r1, r7, r7, lsl #3
    c05c:	ldr	r2, [sp, #8]
    c060:	add	r8, r8, #1
    c064:	add	r5, r5, #20
    c068:	add	r1, ip, r1, lsl #2
    c06c:	add	r7, r1, #24
    c070:	ldr	r1, [r2, #12]
    c074:	cmp	r8, r1
    c078:	bcc	c034 <build_node+0xc8>
    c07c:	mov	r0, #0
    c080:	str	r0, [r2, #8]
    c084:	sub	sp, fp, #28
    c088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c08c <externalEntityInitProcessor2>:
    c08c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c090:	add	fp, sp, #24
    c094:	sub	sp, sp, #8
    c098:	str	r1, [sp, #4]
    c09c:	mov	r5, r0
    c0a0:	mov	r8, r3
    c0a4:	add	r3, sp, #4
    c0a8:	mov	r7, r2
    c0ac:	mov	r6, r1
    c0b0:	ldr	r0, [r0, #152]	; 0x98
    c0b4:	ldr	r4, [r0, #4]
    c0b8:	blx	r4
    c0bc:	cmn	r0, #2
    c0c0:	beq	c118 <externalEntityInitProcessor2+0x8c>
    c0c4:	cmn	r0, #1
    c0c8:	beq	c134 <externalEntityInitProcessor2+0xa8>
    c0cc:	cmp	r0, #14
    c0d0:	bne	c0f0 <externalEntityInitProcessor2+0x64>
    c0d4:	ldr	r6, [sp, #4]
    c0d8:	cmp	r6, r7
    c0dc:	bne	c0f0 <externalEntityInitProcessor2+0x64>
    c0e0:	ldrb	r0, [r5, #500]	; 0x1f4
    c0e4:	mov	r6, r7
    c0e8:	cmp	r0, #0
    c0ec:	beq	c160 <externalEntityInitProcessor2+0xd4>
    c0f0:	movw	r0, #0
    c0f4:	mov	r1, r6
    c0f8:	mov	r2, r7
    c0fc:	mov	r3, r8
    c100:	movt	r0, #0
    c104:	str	r0, [r5, #288]	; 0x120
    c108:	mov	r0, r5
    c10c:	bl	c168 <externalEntityInitProcessor3>
    c110:	sub	sp, fp, #24
    c114:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c118:	ldrb	r0, [r5, #500]	; 0x1f4
    c11c:	cmp	r0, #0
    c120:	beq	c150 <externalEntityInitProcessor2+0xc4>
    c124:	str	r6, [r5, #296]	; 0x128
    c128:	mov	r0, #6
    c12c:	sub	sp, fp, #24
    c130:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c134:	ldrb	r0, [r5, #500]	; 0x1f4
    c138:	cmp	r0, #0
    c13c:	beq	c150 <externalEntityInitProcessor2+0xc4>
    c140:	str	r6, [r5, #296]	; 0x128
    c144:	mov	r0, #5
    c148:	sub	sp, fp, #24
    c14c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c150:	str	r6, [r8]
    c154:	mov	r0, #0
    c158:	sub	sp, fp, #24
    c15c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c160:	str	r7, [r8]
    c164:	b	c154 <externalEntityInitProcessor2+0xc8>

0000c168 <externalEntityInitProcessor3>:
    c168:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c16c:	add	fp, sp, #24
    c170:	sub	sp, sp, #8
    c174:	str	r1, [sp, #4]
    c178:	str	r1, [r0, #296]	; 0x128
    c17c:	mov	r6, r0
    c180:	mov	r8, r3
    c184:	add	r3, sp, #4
    c188:	mov	r5, r2
    c18c:	mov	r7, r1
    c190:	ldr	r0, [r0, #152]	; 0x98
    c194:	ldr	r4, [r0, #4]
    c198:	blx	r4
    c19c:	ldr	r3, [sp, #4]
    c1a0:	cmn	r0, #2
    c1a4:	str	r3, [r6, #300]	; 0x12c
    c1a8:	beq	c1f4 <externalEntityInitProcessor3+0x8c>
    c1ac:	cmn	r0, #1
    c1b0:	beq	c20c <externalEntityInitProcessor3+0xa4>
    c1b4:	cmp	r0, #12
    c1b8:	bne	c23c <externalEntityInitProcessor3+0xd4>
    c1bc:	mov	r0, r6
    c1c0:	mov	r1, #1
    c1c4:	mov	r2, r7
    c1c8:	bl	5aa8 <processXmlDecl>
    c1cc:	cmp	r0, #0
    c1d0:	bne	c204 <externalEntityInitProcessor3+0x9c>
    c1d4:	ldr	r0, [r6, #496]	; 0x1f0
    c1d8:	cmp	r0, #2
    c1dc:	beq	c22c <externalEntityInitProcessor3+0xc4>
    c1e0:	cmp	r0, #3
    c1e4:	bne	c238 <externalEntityInitProcessor3+0xd0>
    c1e8:	ldr	r0, [sp, #4]
    c1ec:	str	r0, [r8]
    c1f0:	b	c220 <externalEntityInitProcessor3+0xb8>
    c1f4:	ldrb	r1, [r6, #500]	; 0x1f4
    c1f8:	mov	r0, #6
    c1fc:	cmp	r1, #0
    c200:	beq	c21c <externalEntityInitProcessor3+0xb4>
    c204:	sub	sp, fp, #24
    c208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c20c:	ldrb	r1, [r6, #500]	; 0x1f4
    c210:	mov	r0, #5
    c214:	cmp	r1, #0
    c218:	bne	c204 <externalEntityInitProcessor3+0x9c>
    c21c:	str	r7, [r8]
    c220:	mov	r0, #0
    c224:	sub	sp, fp, #24
    c228:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c22c:	mov	r0, #35	; 0x23
    c230:	sub	sp, fp, #24
    c234:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c238:	ldr	r7, [sp, #4]
    c23c:	mov	r0, #1
    c240:	mov	r1, r7
    c244:	mov	r2, r5
    c248:	mov	r3, r8
    c24c:	str	r0, [r6, #320]	; 0x140
    c250:	movw	r0, #0
    c254:	movt	r0, #0
    c258:	str	r0, [r6, #288]	; 0x120
    c25c:	mov	r0, r6
    c260:	bl	b548 <externalEntityContentProcessor>
    c264:	sub	sp, fp, #24
    c268:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000c26c <entityValueInitProcessor>:
    c26c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c270:	add	fp, sp, #28
    c274:	sub	sp, sp, #12
    c278:	str	r1, [sp, #4]
    c27c:	str	r1, [r0, #296]	; 0x128
    c280:	mov	r5, r0
    c284:	mov	r9, r3
    c288:	add	r3, sp, #4
    c28c:	mov	r4, r2
    c290:	mov	r8, r1
    c294:	ldr	r0, [r0, #152]	; 0x98
    c298:	ldr	r7, [r0]
    c29c:	blx	r7
    c2a0:	ldr	r1, [sp, #4]
    c2a4:	cmp	r0, #1
    c2a8:	str	r1, [r5, #300]	; 0x12c
    c2ac:	blt	c31c <entityValueInitProcessor+0xb0>
    c2b0:	add	sl, sp, #4
    c2b4:	mov	r7, r8
    c2b8:	b	c2f0 <entityValueInitProcessor+0x84>
    c2bc:	cmp	r0, #12
    c2c0:	beq	c358 <entityValueInitProcessor+0xec>
    c2c4:	str	r7, [r5, #296]	; 0x128
    c2c8:	mov	r1, r7
    c2cc:	mov	r2, r4
    c2d0:	mov	r3, sl
    c2d4:	ldr	r0, [r5, #152]	; 0x98
    c2d8:	ldr	r6, [r0]
    c2dc:	blx	r6
    c2e0:	ldr	r1, [sp, #4]
    c2e4:	cmp	r0, #1
    c2e8:	str	r1, [r5, #300]	; 0x12c
    c2ec:	blt	c31c <entityValueInitProcessor+0xb0>
    c2f0:	mov	r2, r7
    c2f4:	mov	r7, r1
    c2f8:	cmp	r0, #14
    c2fc:	bne	c2bc <entityValueInitProcessor+0x50>
    c300:	cmp	r7, r4
    c304:	bne	c2c4 <entityValueInitProcessor+0x58>
    c308:	ldrb	r0, [r5, #500]	; 0x1f4
    c30c:	cmp	r0, #0
    c310:	bne	c2c4 <entityValueInitProcessor+0x58>
    c314:	str	r4, [r9]
    c318:	b	c334 <entityValueInitProcessor+0xc8>
    c31c:	cmp	r0, #0
    c320:	beq	c340 <entityValueInitProcessor+0xd4>
    c324:	ldrb	r1, [r5, #500]	; 0x1f4
    c328:	cmp	r1, #0
    c32c:	bne	c340 <entityValueInitProcessor+0xd4>
    c330:	str	r8, [r9]
    c334:	mov	r0, #0
    c338:	sub	sp, fp, #28
    c33c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c340:	add	r1, r0, #2
    c344:	cmp	r1, #3
    c348:	bcs	c378 <entityValueInitProcessor+0x10c>
    c34c:	rsb	r0, r0, #4
    c350:	sub	sp, fp, #28
    c354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c358:	mov	r0, r5
    c35c:	mov	r1, #0
    c360:	mov	r3, r7
    c364:	bl	5aa8 <processXmlDecl>
    c368:	cmp	r0, #0
    c36c:	beq	c394 <entityValueInitProcessor+0x128>
    c370:	sub	sp, fp, #28
    c374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c378:	ldr	r1, [r5, #152]	; 0x98
    c37c:	mov	r0, r5
    c380:	mov	r2, r8
    c384:	mov	r3, r4
    c388:	bl	6b04 <storeEntityValue>
    c38c:	sub	sp, fp, #28
    c390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c394:	ldr	r0, [r5, #496]	; 0x1f0
    c398:	cmp	r0, #2
    c39c:	beq	c3b4 <entityValueInitProcessor+0x148>
    c3a0:	cmp	r0, #3
    c3a4:	bne	c3c0 <entityValueInitProcessor+0x154>
    c3a8:	ldr	r0, [sp, #4]
    c3ac:	str	r0, [r9]
    c3b0:	b	c334 <entityValueInitProcessor+0xc8>
    c3b4:	mov	r0, #35	; 0x23
    c3b8:	sub	sp, fp, #28
    c3bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3c0:	ldr	r8, [sp, #4]
    c3c4:	movw	r0, #0
    c3c8:	add	r3, sp, #8
    c3cc:	mov	r2, r4
    c3d0:	movt	r0, #0
    c3d4:	str	r8, [r9]
    c3d8:	str	r0, [r5, #288]	; 0x120
    c3dc:	str	r8, [sp, #8]
    c3e0:	mov	r1, r8
    c3e4:	ldr	r7, [r5, #152]	; 0x98
    c3e8:	ldr	r6, [r7]
    c3ec:	mov	r0, r7
    c3f0:	blx	r6
    c3f4:	cmp	r0, #1
    c3f8:	blt	c420 <entityValueInitProcessor+0x1b4>
    c3fc:	add	sl, sp, #8
    c400:	ldr	r6, [r7]
    c404:	ldr	r1, [sp, #8]
    c408:	mov	r0, r7
    c40c:	mov	r2, r4
    c410:	mov	r3, sl
    c414:	blx	r6
    c418:	cmp	r0, #1
    c41c:	bge	c400 <entityValueInitProcessor+0x194>
    c420:	cmp	r0, #0
    c424:	beq	c434 <entityValueInitProcessor+0x1c8>
    c428:	ldrb	r1, [r5, #500]	; 0x1f4
    c42c:	cmp	r1, #0
    c430:	beq	c330 <entityValueInitProcessor+0xc4>
    c434:	add	r1, r0, #2
    c438:	cmp	r1, #3
    c43c:	bcc	c34c <entityValueInitProcessor+0xe0>
    c440:	mov	r0, r5
    c444:	mov	r1, r7
    c448:	b	c380 <entityValueInitProcessor+0x114>

0000c44c <externalParEntProcessor>:
    c44c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c450:	add	fp, sp, #24
    c454:	sub	sp, sp, #24
    c458:	str	r1, [sp, #20]
    c45c:	mov	r7, r0
    c460:	mov	r8, r3
    c464:	add	r3, sp, #20
    c468:	mov	r4, r2
    c46c:	mov	r6, r1
    c470:	ldr	r0, [r0, #152]	; 0x98
    c474:	ldr	r5, [r0]
    c478:	blx	r5
    c47c:	cmp	r0, #0
    c480:	ble	c4ac <externalParEntProcessor+0x60>
    c484:	cmp	r0, #14
    c488:	bne	c4e4 <externalParEntProcessor+0x98>
    c48c:	ldr	r0, [r7, #152]	; 0x98
    c490:	ldr	r6, [sp, #20]
    c494:	add	r3, sp, #20
    c498:	mov	r2, r4
    c49c:	ldr	r5, [r0]
    c4a0:	mov	r1, r6
    c4a4:	blx	r5
    c4a8:	b	c4e4 <externalParEntProcessor+0x98>
    c4ac:	beq	c4cc <externalParEntProcessor+0x80>
    c4b0:	ldrb	r1, [r7, #500]	; 0x1f4
    c4b4:	cmp	r1, #0
    c4b8:	bne	c4cc <externalParEntProcessor+0x80>
    c4bc:	str	r6, [r8]
    c4c0:	mov	r0, #0
    c4c4:	sub	sp, fp, #24
    c4c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c4cc:	add	r1, r0, #2
    c4d0:	cmp	r1, #3
    c4d4:	bcs	c4e4 <externalParEntProcessor+0x98>
    c4d8:	rsb	r0, r0, #4
    c4dc:	sub	sp, fp, #24
    c4e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c4e4:	movw	r1, #0
    c4e8:	movt	r1, #0
    c4ec:	str	r1, [r7, #288]	; 0x120
    c4f0:	ldrb	r2, [r7, #500]	; 0x1f4
    c4f4:	ldr	r1, [r7, #152]	; 0x98
    c4f8:	ldr	r3, [sp, #20]
    c4fc:	stm	sp, {r0, r3, r8}
    c500:	mov	r0, r7
    c504:	mov	r3, r4
    c508:	clz	r2, r2
    c50c:	lsr	r2, r2, #5
    c510:	str	r2, [sp, #12]
    c514:	mov	r2, r6
    c518:	bl	2dc0 <doProlog>
    c51c:	sub	sp, fp, #24
    c520:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000c524 <entityValueProcessor>:
    c524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c528:	add	fp, sp, #28
    c52c:	sub	sp, sp, #4
    c530:	str	r1, [sp]
    c534:	mov	r8, r3
    c538:	mov	r9, r0
    c53c:	mov	r3, sp
    c540:	mov	r4, r2
    c544:	mov	sl, r1
    c548:	ldr	r7, [r0, #152]	; 0x98
    c54c:	ldr	r6, [r7]
    c550:	mov	r0, r7
    c554:	blx	r6
    c558:	cmp	r0, #1
    c55c:	blt	c584 <entityValueProcessor+0x60>
    c560:	mov	r6, sp
    c564:	ldr	r5, [r7]
    c568:	ldr	r1, [sp]
    c56c:	mov	r0, r7
    c570:	mov	r2, r4
    c574:	mov	r3, r6
    c578:	blx	r5
    c57c:	cmp	r0, #1
    c580:	bge	c564 <entityValueProcessor+0x40>
    c584:	cmp	r0, #0
    c588:	beq	c5a8 <entityValueProcessor+0x84>
    c58c:	ldrb	r1, [r9, #500]	; 0x1f4
    c590:	cmp	r1, #0
    c594:	bne	c5a8 <entityValueProcessor+0x84>
    c598:	str	sl, [r8]
    c59c:	mov	r0, #0
    c5a0:	sub	sp, fp, #28
    c5a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c5a8:	add	r1, r0, #2
    c5ac:	cmp	r1, #3
    c5b0:	bcs	c5c0 <entityValueProcessor+0x9c>
    c5b4:	rsb	r0, r0, #4
    c5b8:	sub	sp, fp, #28
    c5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c5c0:	mov	r0, r9
    c5c4:	mov	r1, r7
    c5c8:	mov	r2, sl
    c5cc:	mov	r3, r4
    c5d0:	bl	6b04 <storeEntityValue>
    c5d4:	sub	sp, fp, #28
    c5d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c5dc <copyEntityTable>:
    c5dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c5e0:	add	fp, sp, #28
    c5e4:	sub	sp, sp, #20
    c5e8:	mov	r9, r0
    c5ec:	ldr	r6, [r3]
    c5f0:	ldr	r0, [r3, #8]
    c5f4:	mov	sl, r1
    c5f8:	mov	r4, r2
    c5fc:	mov	r1, #0
    c600:	add	r7, r6, r0, lsl #2
    c604:	mov	r0, #0
    c608:	cmp	r7, r6
    c60c:	beq	c944 <copyEntityTable+0x368>
    c610:	ldr	r8, [r6], #4
    c614:	cmp	r8, #0
    c618:	beq	c608 <copyEntityTable+0x2c>
    c61c:	ldr	r5, [r8]
    c620:	str	r1, [sp, #16]
    c624:	str	r0, [sp, #12]
    c628:	b	c648 <copyEntityTable+0x6c>
    c62c:	ldrb	r1, [r5]
    c630:	add	r2, r0, #1
    c634:	str	r2, [r4, #12]
    c638:	strb	r1, [r0]
    c63c:	ldrb	r0, [r5], #1
    c640:	cmp	r0, #0
    c644:	beq	c670 <copyEntityTable+0x94>
    c648:	ldr	r1, [r4, #8]
    c64c:	ldr	r0, [r4, #12]
    c650:	cmp	r0, r1
    c654:	bne	c62c <copyEntityTable+0x50>
    c658:	mov	r0, r4
    c65c:	bl	6948 <poolGrow>
    c660:	cmp	r0, #0
    c664:	beq	c94c <copyEntityTable+0x370>
    c668:	ldr	r0, [r4, #12]
    c66c:	b	c62c <copyEntityTable+0x50>
    c670:	ldr	r2, [r4, #16]
    c674:	ldr	r0, [r4, #12]
    c678:	mov	r5, #0
    c67c:	cmp	r2, #0
    c680:	str	r0, [r4, #16]
    c684:	beq	c950 <copyEntityTable+0x374>
    c688:	mov	r0, r9
    c68c:	mov	r1, sl
    c690:	mov	r3, #36	; 0x24
    c694:	str	r9, [sp, #8]
    c698:	bl	6054 <lookup>
    c69c:	cmp	r0, #0
    c6a0:	beq	c950 <copyEntityTable+0x374>
    c6a4:	ldr	r5, [r8, #16]
    c6a8:	mov	r9, r0
    c6ac:	cmp	r5, #0
    c6b0:	bne	c704 <copyEntityTable+0x128>
    c6b4:	ldr	r0, [r4, #12]
    c6b8:	str	sl, [sp, #4]
    c6bc:	ldmib	r8, {r5, sl}
    c6c0:	cmp	r0, #0
    c6c4:	bne	c6d8 <copyEntityTable+0xfc>
    c6c8:	mov	r0, r4
    c6cc:	bl	6948 <poolGrow>
    c6d0:	cmp	r0, #0
    c6d4:	beq	c94c <copyEntityTable+0x370>
    c6d8:	cmp	sl, #1
    c6dc:	bge	c748 <copyEntityTable+0x16c>
    c6e0:	b	c7ec <copyEntityTable+0x210>
    c6e4:	ldr	r0, [r4, #12]
    c6e8:	ldrb	r1, [r5]
    c6ec:	add	r2, r0, #1
    c6f0:	str	r2, [r4, #12]
    c6f4:	strb	r1, [r0]
    c6f8:	ldrb	r0, [r5], #1
    c6fc:	cmp	r0, #0
    c700:	beq	c76c <copyEntityTable+0x190>
    c704:	ldr	r1, [r4, #8]
    c708:	ldr	r0, [r4, #12]
    c70c:	cmp	r0, r1
    c710:	bne	c6e8 <copyEntityTable+0x10c>
    c714:	mov	r0, r4
    c718:	bl	6948 <poolGrow>
    c71c:	cmp	r0, #0
    c720:	bne	c6e4 <copyEntityTable+0x108>
    c724:	b	c94c <copyEntityTable+0x370>
    c728:	ldr	r0, [r4, #12]
    c72c:	ldrb	r1, [r5], #1
    c730:	sub	sl, sl, #1
    c734:	add	r2, r0, #1
    c738:	cmp	sl, #0
    c73c:	str	r2, [r4, #12]
    c740:	strb	r1, [r0]
    c744:	ble	c7ec <copyEntityTable+0x210>
    c748:	ldr	r1, [r4, #8]
    c74c:	ldr	r0, [r4, #12]
    c750:	cmp	r0, r1
    c754:	bne	c72c <copyEntityTable+0x150>
    c758:	mov	r0, r4
    c75c:	bl	6948 <poolGrow>
    c760:	cmp	r0, #0
    c764:	bne	c728 <copyEntityTable+0x14c>
    c768:	b	c94c <copyEntityTable+0x370>
    c76c:	ldr	r1, [r4, #16]
    c770:	ldr	r0, [r4, #12]
    c774:	cmp	r1, #0
    c778:	str	r0, [r4, #16]
    c77c:	beq	c94c <copyEntityTable+0x370>
    c780:	str	r1, [r9, #16]
    c784:	str	sl, [sp, #4]
    c788:	ldr	sl, [r8, #20]
    c78c:	cmp	sl, #0
    c790:	beq	c840 <copyEntityTable+0x264>
    c794:	ldr	r2, [sp, #16]
    c798:	cmp	sl, r2
    c79c:	beq	c830 <copyEntityTable+0x254>
    c7a0:	mov	r5, sl
    c7a4:	ldr	r1, [r4, #8]
    c7a8:	cmp	r0, r1
    c7ac:	bne	c7c4 <copyEntityTable+0x1e8>
    c7b0:	mov	r0, r4
    c7b4:	bl	6948 <poolGrow>
    c7b8:	cmp	r0, #0
    c7bc:	beq	c94c <copyEntityTable+0x370>
    c7c0:	ldr	r0, [r4, #12]
    c7c4:	ldrb	r1, [r5]
    c7c8:	add	r2, r0, #1
    c7cc:	str	r2, [r4, #12]
    c7d0:	strb	r1, [r0]
    c7d4:	ldrb	r0, [r5]
    c7d8:	cmp	r0, #0
    c7dc:	beq	c814 <copyEntityTable+0x238>
    c7e0:	ldr	r0, [r4, #12]
    c7e4:	add	r5, r5, #1
    c7e8:	b	c7a4 <copyEntityTable+0x1c8>
    c7ec:	ldr	r1, [r4, #16]
    c7f0:	ldr	r0, [r4, #12]
    c7f4:	cmp	r1, #0
    c7f8:	str	r0, [r4, #16]
    c7fc:	beq	c94c <copyEntityTable+0x370>
    c800:	str	r1, [r9, #4]
    c804:	ldr	sl, [sp, #4]
    c808:	ldr	r1, [r8, #8]
    c80c:	str	r1, [r9, #8]
    c810:	b	c8b0 <copyEntityTable+0x2d4>
    c814:	ldr	r1, [r4, #16]
    c818:	ldr	r0, [r4, #12]
    c81c:	cmp	r1, #0
    c820:	str	r0, [r4, #16]
    c824:	beq	c94c <copyEntityTable+0x370>
    c828:	mov	r2, sl
    c82c:	b	c834 <copyEntityTable+0x258>
    c830:	ldr	r1, [sp, #12]
    c834:	str	r2, [sp, #16]
    c838:	str	r1, [sp, #12]
    c83c:	str	r1, [r9, #20]
    c840:	ldr	r5, [r8, #24]
    c844:	ldr	sl, [sp, #4]
    c848:	cmp	r5, #0
    c84c:	beq	c8b0 <copyEntityTable+0x2d4>
    c850:	ldr	r1, [r4, #8]
    c854:	cmp	r0, r1
    c858:	bne	c870 <copyEntityTable+0x294>
    c85c:	mov	r0, r4
    c860:	bl	6948 <poolGrow>
    c864:	cmp	r0, #0
    c868:	beq	c94c <copyEntityTable+0x370>
    c86c:	ldr	r0, [r4, #12]
    c870:	ldrb	r1, [r5]
    c874:	add	r2, r0, #1
    c878:	str	r2, [r4, #12]
    c87c:	strb	r1, [r0]
    c880:	ldrb	r0, [r5]
    c884:	cmp	r0, #0
    c888:	beq	c898 <copyEntityTable+0x2bc>
    c88c:	ldr	r0, [r4, #12]
    c890:	add	r5, r5, #1
    c894:	b	c850 <copyEntityTable+0x274>
    c898:	ldr	r1, [r4, #16]
    c89c:	ldr	r0, [r4, #12]
    c8a0:	cmp	r1, #0
    c8a4:	str	r0, [r4, #16]
    c8a8:	beq	c94c <copyEntityTable+0x370>
    c8ac:	str	r1, [r9, #24]
    c8b0:	ldr	r5, [r8, #28]
    c8b4:	cmp	r5, #0
    c8b8:	beq	c920 <copyEntityTable+0x344>
    c8bc:	ldr	r1, [r4, #8]
    c8c0:	cmp	r0, r1
    c8c4:	bne	c8dc <copyEntityTable+0x300>
    c8c8:	mov	r0, r4
    c8cc:	bl	6948 <poolGrow>
    c8d0:	cmp	r0, #0
    c8d4:	beq	c94c <copyEntityTable+0x370>
    c8d8:	ldr	r0, [r4, #12]
    c8dc:	ldrb	r1, [r5]
    c8e0:	add	r2, r0, #1
    c8e4:	str	r2, [r4, #12]
    c8e8:	strb	r1, [r0]
    c8ec:	ldrb	r0, [r5]
    c8f0:	cmp	r0, #0
    c8f4:	beq	c904 <copyEntityTable+0x328>
    c8f8:	ldr	r0, [r4, #12]
    c8fc:	add	r5, r5, #1
    c900:	b	c8bc <copyEntityTable+0x2e0>
    c904:	ldr	r0, [r4, #16]
    c908:	ldr	r1, [r4, #12]
    c90c:	mov	r5, #0
    c910:	cmp	r0, #0
    c914:	str	r1, [r4, #16]
    c918:	beq	c950 <copyEntityTable+0x374>
    c91c:	str	r0, [r9, #28]
    c920:	ldrb	r0, [r8, #33]	; 0x21
    c924:	ldr	r1, [sp, #16]
    c928:	strb	r0, [r9, #33]	; 0x21
    c92c:	ldrb	r0, [r8, #34]	; 0x22
    c930:	strb	r0, [r9, #34]	; 0x22
    c934:	ldr	r9, [sp, #8]
    c938:	ldr	r0, [sp, #12]
    c93c:	cmp	r7, r6
    c940:	bne	c610 <copyEntityTable+0x34>
    c944:	mov	r5, #1
    c948:	b	c950 <copyEntityTable+0x374>
    c94c:	mov	r5, #0
    c950:	mov	r0, r5
    c954:	sub	sp, fp, #28
    c958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
